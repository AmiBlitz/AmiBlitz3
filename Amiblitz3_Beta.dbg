00000008 <AmiBlitz3.ab3@0> 
00000014 <AmiBlitz3.ab3@43> optimize 5                               ; don't use FPU (opt. 4)
00000076 <AmiBlitz3.ab3@64> !initasm                                 ; some initial mumbo jumbo
000000A0 <AmiBlitz3.ab3@65> !basic
000000AC <AmiBlitz3.ab3@70> cli_verbose = -1
000000B2 <AmiBlitz3.ab3@71> CLIMode     = False
000000C8 <AmiBlitz3.ab3@72> MaxLen cli_tempstr.s = 1024
000000E4 <AmiBlitz3.ab3@73> GetCurrentDirName_ &cli_tempstr,1024  ; get the current dir to restore it on exit
0000010E <AmiBlitz3.ab3@74> cli_path.s = Peek.s(&cli_tempstr)
0000010E <library_offsets.ab3@1> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <AmiBlitz3.ab3@78> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <dos.include.ab3@1> XINCLUDE "dos.include.ab3"
0000010E <error.include.ab3@1> XINCLUDE "dos.include.ab3"
00000146 <error.include.ab3@62> XINCLUDE "dos.include.ab3"
0000016E <error.include.ab3@63> XINCLUDE "dos.include.ab3"
00000196 <error.include.ab3@64> XINCLUDE "dos.include.ab3"
000001BE <error.include.ab3@65> XINCLUDE "dos.include.ab3"
000001C4 <error.include.ab3@66> XINCLUDE "dos.include.ab3"
000001F8 <error.include.ab3@67> XINCLUDE "dos.include.ab3"
0000022C <error.include.ab3@68> XINCLUDE "dos.include.ab3"
00000260 <error.include.ab3@69> XINCLUDE "dos.include.ab3"
0000027C <error.include.ab3@73> XINCLUDE "dos.include.ab3"
00000296 <error.include.ab3@99> XINCLUDE "dos.include.ab3"
000002A2 <error.include.ab3@101> XINCLUDE "dos.include.ab3"
000002A6 <error.include.ab3@102> XINCLUDE "dos.include.ab3"
000002B4 <error.include.ab3@104> XINCLUDE "dos.include.ab3"
000002F6 <error.include.ab3@124> XINCLUDE "dos.include.ab3"
0000037A <error.include.ab3@126> XINCLUDE "dos.include.ab3"
000003E6 <error.include.ab3@127> XINCLUDE "dos.include.ab3"
00000400 <error.include.ab3@129> XINCLUDE "dos.include.ab3"
00000438 <error.include.ab3@130> XINCLUDE "dos.include.ab3"
00000498 <error.include.ab3@131> XINCLUDE "dos.include.ab3"
000004A6 <error.include.ab3@133> XINCLUDE "dos.include.ab3"
000004B4 <error.include.ab3@134> XINCLUDE "dos.include.ab3"
000004C2 <error.include.ab3@135> XINCLUDE "dos.include.ab3"
000004D0 <error.include.ab3@136> XINCLUDE "dos.include.ab3"
000004F8 <error.include.ab3@137> XINCLUDE "dos.include.ab3"
00000506 <error.include.ab3@138> XINCLUDE "dos.include.ab3"
0000050E <error.include.ab3@139> XINCLUDE "dos.include.ab3"
00000540 <error.include.ab3@141> XINCLUDE "dos.include.ab3"
0000055A <error.include.ab3@146> XINCLUDE "dos.include.ab3"
00000592 <error.include.ab3@147> XINCLUDE "dos.include.ab3"
00000598 <error.include.ab3@148> XINCLUDE "dos.include.ab3"
000005DC <error.include.ab3@149> XINCLUDE "dos.include.ab3"
00000624 <error.include.ab3@150> XINCLUDE "dos.include.ab3"
0000062E <error.include.ab3@154> XINCLUDE "dos.include.ab3"
00000648 <error.include.ab3@156> XINCLUDE "dos.include.ab3"
00000692 <error.include.ab3@195> XINCLUDE "dos.include.ab3"
0000069A <error.include.ab3@197> XINCLUDE "dos.include.ab3"
00000706 <error.include.ab3@198> XINCLUDE "dos.include.ab3"
00000728 <error.include.ab3@199> XINCLUDE "dos.include.ab3"
00000788 <error.include.ab3@200> XINCLUDE "dos.include.ab3"
00000796 <error.include.ab3@202> XINCLUDE "dos.include.ab3"
000007A4 <error.include.ab3@203> XINCLUDE "dos.include.ab3"
000007B2 <error.include.ab3@204> XINCLUDE "dos.include.ab3"
000007C0 <error.include.ab3@205> XINCLUDE "dos.include.ab3"
00000820 <error.include.ab3@206> XINCLUDE "dos.include.ab3"
0000082E <error.include.ab3@207> XINCLUDE "dos.include.ab3"
00000864 <error.include.ab3@210> XINCLUDE "dos.include.ab3"
0000086E <error.include.ab3@214> XINCLUDE "dos.include.ab3"
0000088A <error.include.ab3@215> XINCLUDE "dos.include.ab3"
0000088A <multilist.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <strptr.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <useful.include.ab3@1> XINCLUDE "dos.include.ab3"
000008B8 <useful.include.ab3@283> XINCLUDE "dos.include.ab3"
000008C2 <useful.include.ab3@284> XINCLUDE "dos.include.ab3"
000008D6 <useful.include.ab3@285> XINCLUDE "dos.include.ab3"
000008DE <useful.include.ab3@286> XINCLUDE "dos.include.ab3"
00000906 <useful.include.ab3@287> XINCLUDE "dos.include.ab3"
0000092C <useful.include.ab3@288> XINCLUDE "dos.include.ab3"
0000094C <useful.include.ab3@291> XINCLUDE "dos.include.ab3"
0000095A <useful.include.ab3@292> XINCLUDE "dos.include.ab3"
00000980 <useful.include.ab3@293> XINCLUDE "dos.include.ab3"
00000988 <useful.include.ab3@295> XINCLUDE "dos.include.ab3"
00000990 <useful.include.ab3@296> XINCLUDE "dos.include.ab3"
00000996 <useful.include.ab3@297> XINCLUDE "dos.include.ab3"
000009B2 <useful.include.ab3@298> XINCLUDE "dos.include.ab3"
000009D6 <useful.include.ab3@299> XINCLUDE "dos.include.ab3"
000009EA <useful.include.ab3@300> XINCLUDE "dos.include.ab3"
000009F0 <useful.include.ab3@301> XINCLUDE "dos.include.ab3"
00000A3A <useful.include.ab3@302> XINCLUDE "dos.include.ab3"
00000A3C <useful.include.ab3@303> XINCLUDE "dos.include.ab3"
00000A4A <useful.include.ab3@305> XINCLUDE "dos.include.ab3"
00000A6A <useful.include.ab3@307> XINCLUDE "dos.include.ab3"
00000AC8 <useful.include.ab3@308> XINCLUDE "dos.include.ab3"
00000ACE <useful.include.ab3@309> XINCLUDE "dos.include.ab3"
00000ADC <useful.include.ab3@310> XINCLUDE "dos.include.ab3"
00000AF0 <useful.include.ab3@311> XINCLUDE "dos.include.ab3"
00000B02 <useful.include.ab3@312> XINCLUDE "dos.include.ab3"
00000B10 <useful.include.ab3@313> XINCLUDE "dos.include.ab3"
00000B16 <useful.include.ab3@314> XINCLUDE "dos.include.ab3"
00000B22 <useful.include.ab3@315> XINCLUDE "dos.include.ab3"
00000B36 <useful.include.ab3@318> XINCLUDE "dos.include.ab3"
00000B4A <useful.include.ab3@319> XINCLUDE "dos.include.ab3"
00000B5C <useful.include.ab3@320> XINCLUDE "dos.include.ab3"
00000B6A <useful.include.ab3@321> XINCLUDE "dos.include.ab3"
00000B88 <useful.include.ab3@322> XINCLUDE "dos.include.ab3"
00000B8E <useful.include.ab3@323> XINCLUDE "dos.include.ab3"
00000BA2 <useful.include.ab3@327> XINCLUDE "dos.include.ab3"
00000BAC <useful.include.ab3@328> XINCLUDE "dos.include.ab3"
00000BB4 <useful.include.ab3@329> XINCLUDE "dos.include.ab3"
00000BD2 <useful.include.ab3@330> XINCLUDE "dos.include.ab3"
00000BD8 <useful.include.ab3@331> XINCLUDE "dos.include.ab3"
00000C04 <useful.include.ab3@332> XINCLUDE "dos.include.ab3"
00000C0A <useful.include.ab3@334> XINCLUDE "dos.include.ab3"
00000C1C <useful.include.ab3@335> XINCLUDE "dos.include.ab3"
00000C34 <useful.include.ab3@336> XINCLUDE "dos.include.ab3"
00000C4C <useful.include.ab3@337> XINCLUDE "dos.include.ab3"
00000C6A <useful.include.ab3@338> XINCLUDE "dos.include.ab3"
00000C6C <useful.include.ab3@340> XINCLUDE "dos.include.ab3"
00000C7A <useful.include.ab3@341> XINCLUDE "dos.include.ab3"
00000CA0 <useful.include.ab3@342> XINCLUDE "dos.include.ab3"
00000D34 <useful.include.ab3@343> XINCLUDE "dos.include.ab3"
00000D42 <useful.include.ab3@345> XINCLUDE "dos.include.ab3"
00000D48 <useful.include.ab3@346> XINCLUDE "dos.include.ab3"
00000D72 <useful.include.ab3@347> XINCLUDE "dos.include.ab3"
00000D90 <useful.include.ab3@348> XINCLUDE "dos.include.ab3"
00000D90 <strptr.include.ab3@37> XINCLUDE "dos.include.ab3"
00000DAA <strptr.include.ab3@96> XINCLUDE "dos.include.ab3"
00000DB4 <strptr.include.ab3@97> XINCLUDE "dos.include.ab3"
00000DFC <strptr.include.ab3@98> XINCLUDE "dos.include.ab3"
00000E00 <strptr.include.ab3@100> XINCLUDE "dos.include.ab3"
00000E22 <strptr.include.ab3@159> XINCLUDE "dos.include.ab3"
00000E2C <strptr.include.ab3@160> XINCLUDE "dos.include.ab3"
00000E74 <strptr.include.ab3@161> XINCLUDE "dos.include.ab3"
00000E7E <strptr.include.ab3@162> XINCLUDE "dos.include.ab3"
00000E90 <strptr.include.ab3@163> XINCLUDE "dos.include.ab3"
00000E98 <strptr.include.ab3@164> XINCLUDE "dos.include.ab3"
00000EC6 <strptr.include.ab3@165> XINCLUDE "dos.include.ab3"
00000ED8 <strptr.include.ab3@167> XINCLUDE "dos.include.ab3"
00000EFC <strptr.include.ab3@171> XINCLUDE "dos.include.ab3"
00000F06 <strptr.include.ab3@173> XINCLUDE "dos.include.ab3"
00000F14 <strptr.include.ab3@174> XINCLUDE "dos.include.ab3"
00000F1E <strptr.include.ab3@175> XINCLUDE "dos.include.ab3"
00000F44 <strptr.include.ab3@176> XINCLUDE "dos.include.ab3"
00000F5E <strptr.include.ab3@177> XINCLUDE "dos.include.ab3"
00000F62 <strptr.include.ab3@182> XINCLUDE "dos.include.ab3"
00000F90 <strptr.include.ab3@197> XINCLUDE "dos.include.ab3"
00000F9A <strptr.include.ab3@198> XINCLUDE "dos.include.ab3"
00000FE2 <strptr.include.ab3@199> XINCLUDE "dos.include.ab3"
00000FF6 <strptr.include.ab3@200> XINCLUDE "dos.include.ab3"
00001008 <strptr.include.ab3@201> XINCLUDE "dos.include.ab3"
0000102C <strptr.include.ab3@205> XINCLUDE "dos.include.ab3"
00001036 <strptr.include.ab3@208> XINCLUDE "dos.include.ab3"
00001044 <strptr.include.ab3@209> XINCLUDE "dos.include.ab3"
0000104E <strptr.include.ab3@210> XINCLUDE "dos.include.ab3"
00001076 <strptr.include.ab3@211> XINCLUDE "dos.include.ab3"
00001090 <strptr.include.ab3@212> XINCLUDE "dos.include.ab3"
000010A8 <strptr.include.ab3@216> XINCLUDE "dos.include.ab3"
000010C2 <strptr.include.ab3@282> XINCLUDE "dos.include.ab3"
000010CC <strptr.include.ab3@283> XINCLUDE "dos.include.ab3"
000010DA <strptr.include.ab3@284> XINCLUDE "dos.include.ab3"
0000110C <strptr.include.ab3@285> XINCLUDE "dos.include.ab3"
0000112A <strptr.include.ab3@287> XINCLUDE "dos.include.ab3"
00001134 <strptr.include.ab3@288> XINCLUDE "dos.include.ab3"
00001134 <multilist.include.ab3@44> XINCLUDE "dos.include.ab3"
0000114A <multilist.include.ab3@61> XINCLUDE "dos.include.ab3"
00001164 <multilist.include.ab3@406> XINCLUDE "dos.include.ab3"
0000116E <multilist.include.ab3@407> XINCLUDE "dos.include.ab3"
00001190 <multilist.include.ab3@408> XINCLUDE "dos.include.ab3"
000011B4 <multilist.include.ab3@409> XINCLUDE "dos.include.ab3"
000011C6 <multilist.include.ab3@410> XINCLUDE "dos.include.ab3"
000011DE <multilist.include.ab3@411> XINCLUDE "dos.include.ab3"
000011F2 <multilist.include.ab3@412> XINCLUDE "dos.include.ab3"
00001204 <multilist.include.ab3@415> XINCLUDE "dos.include.ab3"
00001214 <multilist.include.ab3@416> XINCLUDE "dos.include.ab3"
0000121A <multilist.include.ab3@417> XINCLUDE "dos.include.ab3"
0000122A <multilist.include.ab3@418> XINCLUDE "dos.include.ab3"
0000123A <multilist.include.ab3@419> XINCLUDE "dos.include.ab3"
00001254 <multilist.include.ab3@420> XINCLUDE "dos.include.ab3"
00001258 <multilist.include.ab3@422> XINCLUDE "dos.include.ab3"
00001272 <multilist.include.ab3@585> XINCLUDE "dos.include.ab3"
000012A2 <multilist.include.ab3@586> XINCLUDE "dos.include.ab3"
000012AC <multilist.include.ab3@588> XINCLUDE "dos.include.ab3"
000012B6 <multilist.include.ab3@589> XINCLUDE "dos.include.ab3"
000012D8 <multilist.include.ab3@590> XINCLUDE "dos.include.ab3"
000012FC <multilist.include.ab3@591> XINCLUDE "dos.include.ab3"
0000130E <multilist.include.ab3@592> XINCLUDE "dos.include.ab3"
00001326 <multilist.include.ab3@593> XINCLUDE "dos.include.ab3"
0000133A <multilist.include.ab3@594> XINCLUDE "dos.include.ab3"
0000134C <multilist.include.ab3@597> XINCLUDE "dos.include.ab3"
0000135C <multilist.include.ab3@598> XINCLUDE "dos.include.ab3"
00001362 <multilist.include.ab3@599> XINCLUDE "dos.include.ab3"
00001372 <multilist.include.ab3@600> XINCLUDE "dos.include.ab3"
00001382 <multilist.include.ab3@601> XINCLUDE "dos.include.ab3"
0000139C <multilist.include.ab3@602> XINCLUDE "dos.include.ab3"
000013A2 <multilist.include.ab3@603> XINCLUDE "dos.include.ab3"
000013A8 <multilist.include.ab3@604> XINCLUDE "dos.include.ab3"
000013AC <multilist.include.ab3@605> XINCLUDE "dos.include.ab3"
000013C6 <multilist.include.ab3@713> XINCLUDE "dos.include.ab3"
000013CE <multilist.include.ab3@714> XINCLUDE "dos.include.ab3"
000013D8 <multilist.include.ab3@715> XINCLUDE "dos.include.ab3"
000013EE <multilist.include.ab3@716> XINCLUDE "dos.include.ab3"
00001402 <multilist.include.ab3@717> XINCLUDE "dos.include.ab3"
00001426 <multilist.include.ab3@718> XINCLUDE "dos.include.ab3"
00001434 <multilist.include.ab3@721> XINCLUDE "dos.include.ab3"
0000143E <multilist.include.ab3@722> XINCLUDE "dos.include.ab3"
00001444 <multilist.include.ab3@723> XINCLUDE "dos.include.ab3"
0000144E <multilist.include.ab3@724> XINCLUDE "dos.include.ab3"
00001454 <multilist.include.ab3@725> XINCLUDE "dos.include.ab3"
00001472 <multilist.include.ab3@742> XINCLUDE "dos.include.ab3"
0000147A <multilist.include.ab3@743> XINCLUDE "dos.include.ab3"
00001484 <multilist.include.ab3@744> XINCLUDE "dos.include.ab3"
000014A2 <multilist.include.ab3@745> XINCLUDE "dos.include.ab3"
000014B8 <multilist.include.ab3@746> XINCLUDE "dos.include.ab3"
000014CC <multilist.include.ab3@747> XINCLUDE "dos.include.ab3"
00001500 <multilist.include.ab3@748> XINCLUDE "dos.include.ab3"
0000150E <multilist.include.ab3@751> XINCLUDE "dos.include.ab3"
00001518 <multilist.include.ab3@752> XINCLUDE "dos.include.ab3"
0000151E <multilist.include.ab3@753> XINCLUDE "dos.include.ab3"
00001528 <multilist.include.ab3@754> XINCLUDE "dos.include.ab3"
0000152C <multilist.include.ab3@756> XINCLUDE "dos.include.ab3"
00001532 <multilist.include.ab3@757> XINCLUDE "dos.include.ab3"
0000154C <multilist.include.ab3@795> XINCLUDE "dos.include.ab3"
00001556 <multilist.include.ab3@796> XINCLUDE "dos.include.ab3"
00001560 <multilist.include.ab3@797> XINCLUDE "dos.include.ab3"
00001576 <multilist.include.ab3@798> XINCLUDE "dos.include.ab3"
00001586 <multilist.include.ab3@799> XINCLUDE "dos.include.ab3"
00001590 <multilist.include.ab3@801> XINCLUDE "dos.include.ab3"
00001596 <multilist.include.ab3@802> XINCLUDE "dos.include.ab3"
0000159A <multilist.include.ab3@803> XINCLUDE "dos.include.ab3"
000015BC <multilist.include.ab3@821> XINCLUDE "dos.include.ab3"
000015C4 <multilist.include.ab3@822> XINCLUDE "dos.include.ab3"
000015DE <multilist.include.ab3@823> XINCLUDE "dos.include.ab3"
000015E8 <multilist.include.ab3@824> XINCLUDE "dos.include.ab3"
000015FE <multilist.include.ab3@825> XINCLUDE "dos.include.ab3"
00001612 <multilist.include.ab3@826> XINCLUDE "dos.include.ab3"
00001668 <multilist.include.ab3@827> XINCLUDE "dos.include.ab3"
000016A2 <multilist.include.ab3@828> XINCLUDE "dos.include.ab3"
000016B4 <multilist.include.ab3@829> XINCLUDE "dos.include.ab3"
000016D6 <multilist.include.ab3@830> XINCLUDE "dos.include.ab3"
000016DC <multilist.include.ab3@831> XINCLUDE "dos.include.ab3"
00001732 <multilist.include.ab3@832> XINCLUDE "dos.include.ab3"
0000176C <multilist.include.ab3@833> XINCLUDE "dos.include.ab3"
00001772 <multilist.include.ab3@835> XINCLUDE "dos.include.ab3"
000017AC <multilist.include.ab3@836> XINCLUDE "dos.include.ab3"
000017E6 <multilist.include.ab3@837> XINCLUDE "dos.include.ab3"
000017F8 <multilist.include.ab3@839> XINCLUDE "dos.include.ab3"
00001802 <multilist.include.ab3@840> XINCLUDE "dos.include.ab3"
00001808 <multilist.include.ab3@841> XINCLUDE "dos.include.ab3"
00001812 <multilist.include.ab3@842> XINCLUDE "dos.include.ab3"
00001826 <multilist.include.ab3@843> XINCLUDE "dos.include.ab3"
0000186C <multilist.include.ab3@870> XINCLUDE "dos.include.ab3"
00001874 <multilist.include.ab3@871> XINCLUDE "dos.include.ab3"
00001892 <multilist.include.ab3@872> XINCLUDE "dos.include.ab3"
000018BE <multilist.include.ab3@873> XINCLUDE "dos.include.ab3"
000018DC <multilist.include.ab3@874> XINCLUDE "dos.include.ab3"
000018F6 <multilist.include.ab3@875> XINCLUDE "dos.include.ab3"
00001910 <multilist.include.ab3@876> XINCLUDE "dos.include.ab3"
00001992 <multilist.include.ab3@877> XINCLUDE "dos.include.ab3"
000019A6 <multilist.include.ab3@879> XINCLUDE "dos.include.ab3"
000019BE <multilist.include.ab3@880> XINCLUDE "dos.include.ab3"
000019C4 <multilist.include.ab3@881> XINCLUDE "dos.include.ab3"
000019DC <multilist.include.ab3@882> XINCLUDE "dos.include.ab3"
000019F2 <multilist.include.ab3@884> XINCLUDE "dos.include.ab3"
00001A0C <multilist.include.ab3@886> XINCLUDE "dos.include.ab3"
00001A20 <multilist.include.ab3@887> XINCLUDE "dos.include.ab3"
00001A2E <multilist.include.ab3@888> XINCLUDE "dos.include.ab3"
00001A84 <multilist.include.ab3@889> XINCLUDE "dos.include.ab3"
00001ABA <multilist.include.ab3@890> XINCLUDE "dos.include.ab3"
00001AEA <multilist.include.ab3@891> XINCLUDE "dos.include.ab3"
00001B72 <multilist.include.ab3@893> XINCLUDE "dos.include.ab3"
00001B78 <multilist.include.ab3@894> XINCLUDE "dos.include.ab3"
00001B86 <multilist.include.ab3@895> XINCLUDE "dos.include.ab3"
00001BDC <multilist.include.ab3@896> XINCLUDE "dos.include.ab3"
00001C12 <multilist.include.ab3@897> XINCLUDE "dos.include.ab3"
00001C42 <multilist.include.ab3@898> XINCLUDE "dos.include.ab3"
00001C48 <multilist.include.ab3@901> XINCLUDE "dos.include.ab3"
00001C62 <multilist.include.ab3@902> XINCLUDE "dos.include.ab3"
00001C70 <multilist.include.ab3@903> XINCLUDE "dos.include.ab3"
00001CAA <multilist.include.ab3@904> XINCLUDE "dos.include.ab3"
00001CE0 <multilist.include.ab3@905> XINCLUDE "dos.include.ab3"
00001D10 <multilist.include.ab3@906> XINCLUDE "dos.include.ab3"
00001D1E <multilist.include.ab3@909> XINCLUDE "dos.include.ab3"
00001D28 <multilist.include.ab3@910> XINCLUDE "dos.include.ab3"
00001D2E <multilist.include.ab3@911> XINCLUDE "dos.include.ab3"
00001D38 <multilist.include.ab3@912> XINCLUDE "dos.include.ab3"
00001D4C <multilist.include.ab3@913> XINCLUDE "dos.include.ab3"
00001D4C <dos.include.ab3@57> XINCLUDE "dos.include.ab3"
00001D4C <wbstart.include.ab3@1> XINCLUDE "dos.include.ab3"
00001D62 <wbstart.include.ab3@58> XINCLUDE "dos.include.ab3"
00001D6C <wbstart.include.ab3@59> XINCLUDE "dos.include.ab3"
00001D84 <wbstart.include.ab3@61> XINCLUDE "dos.include.ab3"
00001D86 <wbstart.include.ab3@63> XINCLUDE "dos.include.ab3"
00001DB4 <wbstart.include.ab3@64> XINCLUDE "dos.include.ab3"
00001DB4 <dos.include.ab3@59> XINCLUDE "dos.include.ab3"
00001DCA <dos.include.ab3@61> XINCLUDE "dos.include.ab3"
00001DD2 <dos.include.ab3@79> XINCLUDE "dos.include.ab3"
00001DDA <dos.include.ab3@80> XINCLUDE "dos.include.ab3"
00001E02 <dos.include.ab3@81> XINCLUDE "dos.include.ab3"
00001E0A <dos.include.ab3@82> XINCLUDE "dos.include.ab3"
00001E32 <dos.include.ab3@83> XINCLUDE "dos.include.ab3"
00001E5A <dos.include.ab3@84> XINCLUDE "dos.include.ab3"
00001E82 <dos.include.ab3@85> XINCLUDE "dos.include.ab3"
00001E8A <dos.include.ab3@86> XINCLUDE "dos.include.ab3"
00001E92 <dos.include.ab3@87> XINCLUDE "dos.include.ab3"
00001E9A <dos.include.ab3@88> XINCLUDE "dos.include.ab3"
00001EA2 <dos.include.ab3@89> XINCLUDE "dos.include.ab3"
00001EAA <dos.include.ab3@90> XINCLUDE "dos.include.ab3"
00001EB2 <dos.include.ab3@91> XINCLUDE "dos.include.ab3"
00001EBA <dos.include.ab3@92> XINCLUDE "dos.include.ab3"
00001EC2 <dos.include.ab3@93> XINCLUDE "dos.include.ab3"
00001ECA <dos.include.ab3@94> XINCLUDE "dos.include.ab3"
00001EEA <dos.include.ab3@95> XINCLUDE "dos.include.ab3"
00001EF2 <dos.include.ab3@96> XINCLUDE "dos.include.ab3"
00001EFA <dos.include.ab3@97> XINCLUDE "dos.include.ab3"
00001F22 <dos.include.ab3@99> XINCLUDE "dos.include.ab3"
00001F38 <dos.include.ab3@130> XINCLUDE "dos.include.ab3"
00001F44 <dos.include.ab3@131> XINCLUDE "dos.include.ab3"
00001F48 <dos.include.ab3@132> XINCLUDE "dos.include.ab3"
00001F5E <dos.include.ab3@145> XINCLUDE "dos.include.ab3"
00001F78 <dos.include.ab3@146> XINCLUDE "dos.include.ab3"
00001F8E <dos.include.ab3@147> XINCLUDE "dos.include.ab3"
00001FB8 <dos.include.ab3@148> XINCLUDE "dos.include.ab3"
00001FC2 <dos.include.ab3@149> XINCLUDE "dos.include.ab3"
00001FC8 <dos.include.ab3@150> XINCLUDE "dos.include.ab3"
00001FDE <dos.include.ab3@163> XINCLUDE "dos.include.ab3"
00001FF8 <dos.include.ab3@164> XINCLUDE "dos.include.ab3"
0000200E <dos.include.ab3@165> XINCLUDE "dos.include.ab3"
00002038 <dos.include.ab3@166> XINCLUDE "dos.include.ab3"
00002042 <dos.include.ab3@167> XINCLUDE "dos.include.ab3"
00002048 <dos.include.ab3@168> XINCLUDE "dos.include.ab3"
00002072 <dos.include.ab3@184> XINCLUDE "dos.include.ab3"
0000207E <dos.include.ab3@185> XINCLUDE "dos.include.ab3"
0000209E <dos.include.ab3@186> XINCLUDE "dos.include.ab3"
000020A8 <dos.include.ab3@187> XINCLUDE "dos.include.ab3"
000020B8 <dos.include.ab3@188> XINCLUDE "dos.include.ab3"
000020C8 <dos.include.ab3@189> XINCLUDE "dos.include.ab3"
000020D2 <dos.include.ab3@191> XINCLUDE "dos.include.ab3"
000020EC <dos.include.ab3@192> XINCLUDE "dos.include.ab3"
00002102 <dos.include.ab3@430> XINCLUDE "dos.include.ab3"
00002114 <dos.include.ab3@432> XINCLUDE "dos.include.ab3"
0000218E <dos.include.ab3@433> XINCLUDE "dos.include.ab3"
000021B8 <dos.include.ab3@434> XINCLUDE "dos.include.ab3"
000021D0 <dos.include.ab3@435> XINCLUDE "dos.include.ab3"
000021E6 <dos.include.ab3@461> XINCLUDE "dos.include.ab3"
000021F8 <dos.include.ab3@462> XINCLUDE "dos.include.ab3"
000021FC <dos.include.ab3@463> XINCLUDE "dos.include.ab3"
00002212 <dos.include.ab3@479> XINCLUDE "dos.include.ab3"
00002214 <dos.include.ab3@480> XINCLUDE "dos.include.ab3"
0000224E <dos.include.ab3@541> XINCLUDE "dos.include.ab3"
00002282 <dos.include.ab3@543> XINCLUDE "dos.include.ab3"
000022A8 <dos.include.ab3@544> XINCLUDE "dos.include.ab3"
000022C8 <dos.include.ab3@545> XINCLUDE "dos.include.ab3"
000022E8 <dos.include.ab3@546> XINCLUDE "dos.include.ab3"
00002312 <dos.include.ab3@549> XINCLUDE "dos.include.ab3"
0000235E <dos.include.ab3@551> XINCLUDE "dos.include.ab3"
00002370 <dos.include.ab3@552> XINCLUDE "dos.include.ab3"
000023C0 <dos.include.ab3@553> XINCLUDE "dos.include.ab3"
000023EA <dos.include.ab3@556> XINCLUDE "dos.include.ab3"
00002408 <dos.include.ab3@558> XINCLUDE "dos.include.ab3"
00002432 <dos.include.ab3@674> XINCLUDE "dos.include.ab3"
00002448 <dos.include.ab3@675> XINCLUDE "dos.include.ab3"
00002452 <dos.include.ab3@676> XINCLUDE "dos.include.ab3"
0000247A <dos.include.ab3@677> XINCLUDE "dos.include.ab3"
00002480 <dos.include.ab3@678> XINCLUDE "dos.include.ab3"
000024A8 <dos.include.ab3@679> XINCLUDE "dos.include.ab3"
000024D2 <dos.include.ab3@681> XINCLUDE "dos.include.ab3"
000024F0 <dos.include.ab3@682> XINCLUDE "dos.include.ab3"
0000251A <dos.include.ab3@705> XINCLUDE "dos.include.ab3"
0000258A <dos.include.ab3@706> XINCLUDE "dos.include.ab3"
000025B4 <dos.include.ab3@707> XINCLUDE "dos.include.ab3"
000025D2 <dos.include.ab3@708> XINCLUDE "dos.include.ab3"
000025FC <dos.include.ab3@743> XINCLUDE "dos.include.ab3"
0000261C <dos.include.ab3@744> XINCLUDE "dos.include.ab3"
00002648 <dos.include.ab3@745> XINCLUDE "dos.include.ab3"
00002652 <dos.include.ab3@746> XINCLUDE "dos.include.ab3"
0000266C <dos.include.ab3@747> XINCLUDE "dos.include.ab3"
00002696 <dos.include.ab3@894> XINCLUDE "dos.include.ab3"
00002744 <dos.include.ab3@895> XINCLUDE "dos.include.ab3"
0000275A <dos.include.ab3@896> XINCLUDE "dos.include.ab3"
00002764 <dos.include.ab3@897> XINCLUDE "dos.include.ab3"
0000278C <dos.include.ab3@898> XINCLUDE "dos.include.ab3"
00002796 <dos.include.ab3@899> XINCLUDE "dos.include.ab3"
0000279C <dos.include.ab3@900> XINCLUDE "dos.include.ab3"
000027A2 <dos.include.ab3@901> XINCLUDE "dos.include.ab3"
000027A8 <dos.include.ab3@902> XINCLUDE "dos.include.ab3"
000027BA <dos.include.ab3@904> XINCLUDE "dos.include.ab3"
000027C4 <dos.include.ab3@906> XINCLUDE "dos.include.ab3"
000027DE <dos.include.ab3@907> XINCLUDE "dos.include.ab3"
0000281C <dos.include.ab3@928> XINCLUDE "dos.include.ab3"
00002824 <dos.include.ab3@929> XINCLUDE "dos.include.ab3"
000028D2 <dos.include.ab3@930> XINCLUDE "dos.include.ab3"
000028E6 <dos.include.ab3@931> XINCLUDE "dos.include.ab3"
00002928 <dos.include.ab3@932> XINCLUDE "dos.include.ab3"
00002948 <dos.include.ab3@934> XINCLUDE "dos.include.ab3"
00002952 <dos.include.ab3@935> XINCLUDE "dos.include.ab3"
0000296E <dos.include.ab3@936> XINCLUDE "dos.include.ab3"
000029A8 <dos.include.ab3@988> XINCLUDE "dos.include.ab3"
000029B0 <dos.include.ab3@989> XINCLUDE "dos.include.ab3"
00002A5E <dos.include.ab3@990> XINCLUDE "dos.include.ab3"
00002A94 <dos.include.ab3@991> XINCLUDE "dos.include.ab3"
00002AB4 <dos.include.ab3@992> XINCLUDE "dos.include.ab3"
00002AD2 <dos.include.ab3@993> XINCLUDE "dos.include.ab3"
00002AF6 <dos.include.ab3@994> XINCLUDE "dos.include.ab3"
00002B00 <dos.include.ab3@996> XINCLUDE "dos.include.ab3"
00002B1C <dos.include.ab3@997> XINCLUDE "dos.include.ab3"
00002B56 <dos.include.ab3@1014> XINCLUDE "dos.include.ab3"
00002C04 <dos.include.ab3@1015> XINCLUDE "dos.include.ab3"
00002C3C <dos.include.ab3@1016> XINCLUDE "dos.include.ab3"
00002C5C <dos.include.ab3@1017> XINCLUDE "dos.include.ab3"
00002C62 <dos.include.ab3@1018> XINCLUDE "dos.include.ab3"
00002C82 <dos.include.ab3@1019> XINCLUDE "dos.include.ab3"
00002C8C <dos.include.ab3@1020> XINCLUDE "dos.include.ab3"
00002CA6 <dos.include.ab3@1021> XINCLUDE "dos.include.ab3"
00002CBE <dos.include.ab3@1022> XINCLUDE "dos.include.ab3"
00002CC8 <dos.include.ab3@1025> XINCLUDE "dos.include.ab3"
00002CE4 <dos.include.ab3@1026> XINCLUDE "dos.include.ab3"
00002D0E <dos.include.ab3@1161> XINCLUDE "dos.include.ab3"
00002D1C <dos.include.ab3@1163> XINCLUDE "dos.include.ab3"
00002DE2 <dos.include.ab3@1164> XINCLUDE "dos.include.ab3"
00002E0C <dos.include.ab3@1165> XINCLUDE "dos.include.ab3"
00002E34 <dos.include.ab3@1167> XINCLUDE "dos.include.ab3"
00002E5E <dos.include.ab3@1168> XINCLUDE "dos.include.ab3"
00002E88 <dos.include.ab3@1170> XINCLUDE "dos.include.ab3"
00002EA6 <dos.include.ab3@1171> XINCLUDE "dos.include.ab3"
00002ED0 <dos.include.ab3@1189> XINCLUDE "dos.include.ab3"
00002F3C <dos.include.ab3@1191> XINCLUDE "dos.include.ab3"
00002F64 <dos.include.ab3@1192> XINCLUDE "dos.include.ab3"
00002F72 <dos.include.ab3@1193> XINCLUDE "dos.include.ab3"
00002FA6 <dos.include.ab3@1194> XINCLUDE "dos.include.ab3"
00002FB4 <dos.include.ab3@1197> XINCLUDE "dos.include.ab3"
00002FD6 <dos.include.ab3@1203> XINCLUDE "dos.include.ab3"
00002FE4 <dos.include.ab3@1207> XINCLUDE "dos.include.ab3"
00003008 <dos.include.ab3@1208> XINCLUDE "dos.include.ab3"
00003032 <dos.include.ab3@1209> XINCLUDE "dos.include.ab3"
0000305C <dos.include.ab3@1212> XINCLUDE "dos.include.ab3"
0000307A <dos.include.ab3@1213> XINCLUDE "dos.include.ab3"
000030A4 <dos.include.ab3@1274> XINCLUDE "dos.include.ab3"
000030FC <dos.include.ab3@1275> XINCLUDE "dos.include.ab3"
00003126 <dos.include.ab3@1276> XINCLUDE "dos.include.ab3"
00003144 <dos.include.ab3@1277> XINCLUDE "dos.include.ab3"
0000315A <dos.include.ab3@1351> XINCLUDE "dos.include.ab3"
00003160 <dos.include.ab3@1353> XINCLUDE "dos.include.ab3"
0000316A <dos.include.ab3@1354> XINCLUDE "dos.include.ab3"
00003174 <dos.include.ab3@1355> XINCLUDE "dos.include.ab3"
00003192 <dos.include.ab3@1358> XINCLUDE "dos.include.ab3"
00003198 <dos.include.ab3@1359> XINCLUDE "dos.include.ab3"
0000319E <dos.include.ab3@1360> XINCLUDE "dos.include.ab3"
000031AE <dos.include.ab3@1362> XINCLUDE "dos.include.ab3"
000031B4 <dos.include.ab3@1363> XINCLUDE "dos.include.ab3"
000031BC <dos.include.ab3@1364> XINCLUDE "dos.include.ab3"
000031E4 <dos.include.ab3@1365> XINCLUDE "dos.include.ab3"
000031EE <dos.include.ab3@1366> XINCLUDE "dos.include.ab3"
000031F8 <dos.include.ab3@1368> XINCLUDE "dos.include.ab3"
0000320C <dos.include.ab3@1369> XINCLUDE "dos.include.ab3"
00003222 <dos.include.ab3@1474> XINCLUDE "dos.include.ab3"
00003228 <dos.include.ab3@1480> XINCLUDE "dos.include.ab3"
0000324C <dos.include.ab3@1481> XINCLUDE "dos.include.ab3"
00003270 <dos.include.ab3@1482> XINCLUDE "dos.include.ab3"
00003294 <dos.include.ab3@1483> XINCLUDE "dos.include.ab3"
0000329A <dos.include.ab3@1484> XINCLUDE "dos.include.ab3"
000032C6 <dos.include.ab3@1485> XINCLUDE "dos.include.ab3"
000032C8 <dos.include.ab3@1486> XINCLUDE "dos.include.ab3"
000032F6 <dos.include.ab3@1487> XINCLUDE "dos.include.ab3"
00003320 <dos.include.ab3@1503> XINCLUDE "dos.include.ab3"
000033A4 <dos.include.ab3@1506> XINCLUDE "dos.include.ab3"
0000346C <dos.include.ab3@1507> XINCLUDE "dos.include.ab3"
00003476 <dos.include.ab3@1509> XINCLUDE "dos.include.ab3"
000034C0 <dos.include.ab3@1510> XINCLUDE "dos.include.ab3"
0000350C <dos.include.ab3@1512> XINCLUDE "dos.include.ab3"
00003544 <dos.include.ab3@1513> XINCLUDE "dos.include.ab3"
00003556 <dos.include.ab3@1514> XINCLUDE "dos.include.ab3"
0000356C <dos.include.ab3@1515> XINCLUDE "dos.include.ab3"
00003572 <dos.include.ab3@1516> XINCLUDE "dos.include.ab3"
00003588 <dos.include.ab3@1517> XINCLUDE "dos.include.ab3"
000035BC <dos.include.ab3@1519> XINCLUDE "dos.include.ab3"
000035C2 <dos.include.ab3@1520> XINCLUDE "dos.include.ab3"
000035CC <dos.include.ab3@1522> XINCLUDE "dos.include.ab3"
000035E6 <dos.include.ab3@1523> XINCLUDE "dos.include.ab3"
00003630 <dos.include.ab3@1553> XINCLUDE "dos.include.ab3"
00003666 <dos.include.ab3@1555> XINCLUDE "dos.include.ab3"
0000368A <dos.include.ab3@1556> XINCLUDE "dos.include.ab3"
00003694 <dos.include.ab3@1557> XINCLUDE "dos.include.ab3"
000036BC <dos.include.ab3@1558> XINCLUDE "dos.include.ab3"
00003704 <dos.include.ab3@1561> XINCLUDE "dos.include.ab3"
000037DA <dos.include.ab3@1563> XINCLUDE "dos.include.ab3"
00003804 <dos.include.ab3@1564> XINCLUDE "dos.include.ab3"
00003824 <dos.include.ab3@1565> XINCLUDE "dos.include.ab3"
0000385E <dos.include.ab3@1584> XINCLUDE "dos.include.ab3"
00003864 <dos.include.ab3@1586> XINCLUDE "dos.include.ab3"
0000386A <dos.include.ab3@1587> XINCLUDE "dos.include.ab3"
00003872 <dos.include.ab3@1588> XINCLUDE "dos.include.ab3"
000038A8 <dos.include.ab3@1589> XINCLUDE "dos.include.ab3"
000038B6 <dos.include.ab3@1590> XINCLUDE "dos.include.ab3"
000038C0 <dos.include.ab3@1591> XINCLUDE "dos.include.ab3"
000038EC <dos.include.ab3@1592> XINCLUDE "dos.include.ab3"
000038FA <dos.include.ab3@1593> XINCLUDE "dos.include.ab3"
00003904 <dos.include.ab3@1594> XINCLUDE "dos.include.ab3"
00003932 <dos.include.ab3@1596> XINCLUDE "dos.include.ab3"
000039B0 <dos.include.ab3@1599> XINCLUDE "dos.include.ab3"
00003A02 <dos.include.ab3@1602> XINCLUDE "dos.include.ab3"
00003A14 <dos.include.ab3@1603> XINCLUDE "dos.include.ab3"
00003A82 <dos.include.ab3@1604> XINCLUDE "dos.include.ab3"
00003A88 <dos.include.ab3@1605> XINCLUDE "dos.include.ab3"
00003AD4 <dos.include.ab3@1606> XINCLUDE "dos.include.ab3"
00003BA2 <dos.include.ab3@1610> XINCLUDE "dos.include.ab3"
00003C82 <dos.include.ab3@1611> XINCLUDE "dos.include.ab3"
00003CEE <dos.include.ab3@1613> XINCLUDE "dos.include.ab3"
00003CF4 <dos.include.ab3@1614> XINCLUDE "dos.include.ab3"
00003D10 <dos.include.ab3@1615> XINCLUDE "dos.include.ab3"
00003D1E <dos.include.ab3@1618> XINCLUDE "dos.include.ab3"
00003D24 <dos.include.ab3@1619> XINCLUDE "dos.include.ab3"
00003D36 <dos.include.ab3@1622> XINCLUDE "dos.include.ab3"
00003D4C <dos.include.ab3@1623> XINCLUDE "dos.include.ab3"
00003D56 <dos.include.ab3@1624> XINCLUDE "dos.include.ab3"
00003D72 <dos.include.ab3@1625> XINCLUDE "dos.include.ab3"
00003D9C <dos.include.ab3@2221> XINCLUDE "dos.include.ab3"
00003DB0 <dos.include.ab3@2222> XINCLUDE "dos.include.ab3"
00003DEE <dos.include.ab3@2223> XINCLUDE "dos.include.ab3"
00003ED4 <dos.include.ab3@2224> XINCLUDE "dos.include.ab3"
00003EDA <dos.include.ab3@2225> XINCLUDE "dos.include.ab3"
00003F2A <dos.include.ab3@2226> XINCLUDE "dos.include.ab3"
00003F54 <dos.include.ab3@2227> XINCLUDE "dos.include.ab3"
00003F72 <dos.include.ab3@2228> XINCLUDE "dos.include.ab3"
00003F9C <dos.include.ab3@2252> XINCLUDE "dos.include.ab3"
00003FB0 <dos.include.ab3@2253> XINCLUDE "dos.include.ab3"
00003FEE <dos.include.ab3@2254> XINCLUDE "dos.include.ab3"
000040D4 <dos.include.ab3@2255> XINCLUDE "dos.include.ab3"
000040DA <dos.include.ab3@2256> XINCLUDE "dos.include.ab3"
0000414C <dos.include.ab3@2257> XINCLUDE "dos.include.ab3"
00004176 <dos.include.ab3@2258> XINCLUDE "dos.include.ab3"
00004194 <dos.include.ab3@2259> XINCLUDE "dos.include.ab3"
000041CE <dos.include.ab3@2285> XINCLUDE "dos.include.ab3"
00004206 <dos.include.ab3@2286> XINCLUDE "dos.include.ab3"
0000425E <dos.include.ab3@2287> XINCLUDE "dos.include.ab3"
000042C2 <dos.include.ab3@2288> XINCLUDE "dos.include.ab3"
000042EC <dos.include.ab3@2290> XINCLUDE "dos.include.ab3"
0000430C <dos.include.ab3@2291> XINCLUDE "dos.include.ab3"
00004336 <dos.include.ab3@2308> XINCLUDE "dos.include.ab3"
0000433C <dos.include.ab3@2309> XINCLUDE "dos.include.ab3"
00004352 <dos.include.ab3@2310> XINCLUDE "dos.include.ab3"
0000435C <dos.include.ab3@2311> XINCLUDE "dos.include.ab3"
00004362 <dos.include.ab3@2312> XINCLUDE "dos.include.ab3"
00004372 <dos.include.ab3@2313> XINCLUDE "dos.include.ab3"
0000437C <dos.include.ab3@2315> XINCLUDE "dos.include.ab3"
00004396 <dos.include.ab3@2316> XINCLUDE "dos.include.ab3"
000043C4 <dos.include.ab3@2558> XINCLUDE "dos.include.ab3"
000043E6 <dos.include.ab3@2559> XINCLUDE "dos.include.ab3"
000043EE <dos.include.ab3@2560> XINCLUDE "dos.include.ab3"
000043FC <dos.include.ab3@2561> XINCLUDE "dos.include.ab3"
00004416 <dos.include.ab3@2563> XINCLUDE "dos.include.ab3"
00004444 <dos.include.ab3@2582> XINCLUDE "dos.include.ab3"
00004458 <dos.include.ab3@2583> XINCLUDE "dos.include.ab3"
0000448C <dos.include.ab3@2584> XINCLUDE "dos.include.ab3"
000044A6 <dos.include.ab3@2586> XINCLUDE "dos.include.ab3"
000044AE <dos.include.ab3@2587> XINCLUDE "dos.include.ab3"
000044BC <dos.include.ab3@2588> XINCLUDE "dos.include.ab3"
000044D6 <dos.include.ab3@2590> XINCLUDE "dos.include.ab3"
00004500 <dos.include.ab3@2726> XINCLUDE "dos.include.ab3"
0000450C <dos.include.ab3@2728> XINCLUDE "dos.include.ab3"
0000452C <dos.include.ab3@2729> XINCLUDE "dos.include.ab3"
00004552 <dos.include.ab3@2730> XINCLUDE "dos.include.ab3"
0000457E <dos.include.ab3@2731> XINCLUDE "dos.include.ab3"
00004596 <dos.include.ab3@2732> XINCLUDE "dos.include.ab3"
000045A4 <dos.include.ab3@2734> XINCLUDE "dos.include.ab3"
000045AA <dos.include.ab3@2735> XINCLUDE "dos.include.ab3"
000045B6 <dos.include.ab3@2736> XINCLUDE "dos.include.ab3"
000045BC <dos.include.ab3@2738> XINCLUDE "dos.include.ab3"
000045C8 <dos.include.ab3@2739> XINCLUDE "dos.include.ab3"
000045D8 <dos.include.ab3@2741> XINCLUDE "dos.include.ab3"
000045DE <dos.include.ab3@2742> XINCLUDE "dos.include.ab3"
000045EA <dos.include.ab3@2743> XINCLUDE "dos.include.ab3"
000045F4 <dos.include.ab3@2745> XINCLUDE "dos.include.ab3"
0000460E <dos.include.ab3@2746> XINCLUDE "dos.include.ab3"
0000460E <AmiBlitz3.ab3@79> XINCLUDE "dos.include.ab3"
0000461C <AmiBlitz3.ab3@81> If dos_FromCLI{}
00004622 <AmiBlitz3.ab3@82>   CLIMode.l=True
0000462E <AmiBlitz3.ab3@83>   error_SetFlags{#error_stdout}
0000462E <common.ab3@1> XINCLUDE "/Shared/common.ab3"
00004656 <common.ab3@48> XINCLUDE "/Shared/common.ab3"
0000465C <common.ab3@261> XINCLUDE "/Shared/common.ab3"
0000465E <common.ab3@262> XINCLUDE "/Shared/common.ab3"
000047EE <common.ab3@263> XINCLUDE "/Shared/common.ab3"
000047F2 <common.ab3@264> XINCLUDE "/Shared/common.ab3"
000047F6 <common.ab3@266> XINCLUDE "/Shared/common.ab3"
000047FA <common.ab3@267> XINCLUDE "/Shared/common.ab3"
000047FE <common.ab3@269> XINCLUDE "/Shared/common.ab3"
00004802 <common.ab3@270> XINCLUDE "/Shared/common.ab3"
00004806 <common.ab3@271> XINCLUDE "/Shared/common.ab3"
0000480A <common.ab3@272> XINCLUDE "/Shared/common.ab3"
0000480E <common.ab3@273> XINCLUDE "/Shared/common.ab3"
00004812 <common.ab3@274> XINCLUDE "/Shared/common.ab3"
00004816 <common.ab3@275> XINCLUDE "/Shared/common.ab3"
0000481A <common.ab3@276> XINCLUDE "/Shared/common.ab3"
0000481E <common.ab3@277> XINCLUDE "/Shared/common.ab3"
00004822 <common.ab3@279> XINCLUDE "/Shared/common.ab3"
00004826 <common.ab3@281> XINCLUDE "/Shared/common.ab3"
0000482A <common.ab3@282> XINCLUDE "/Shared/common.ab3"
0000482E <common.ab3@283> XINCLUDE "/Shared/common.ab3"
00004832 <common.ab3@284> XINCLUDE "/Shared/common.ab3"
00004836 <common.ab3@285> XINCLUDE "/Shared/common.ab3"
0000483A <common.ab3@286> XINCLUDE "/Shared/common.ab3"
0000483E <common.ab3@287> XINCLUDE "/Shared/common.ab3"
00004842 <common.ab3@288> XINCLUDE "/Shared/common.ab3"
00004846 <common.ab3@289> XINCLUDE "/Shared/common.ab3"
0000484A <common.ab3@290> XINCLUDE "/Shared/common.ab3"
00004852 <common.ab3@293> XINCLUDE "/Shared/common.ab3"
00004856 <common.ab3@294> XINCLUDE "/Shared/common.ab3"
00004858 <common.ab3@295> XINCLUDE "/Shared/common.ab3"
0000485C <common.ab3@296> XINCLUDE "/Shared/common.ab3"
0000485E <common.ab3@297> XINCLUDE "/Shared/common.ab3"
00004862 <common.ab3@298> XINCLUDE "/Shared/common.ab3"
00004866 <common.ab3@299> XINCLUDE "/Shared/common.ab3"
0000486A <common.ab3@300> XINCLUDE "/Shared/common.ab3"
0000486E <common.ab3@301> XINCLUDE "/Shared/common.ab3"
00004872 <common.ab3@302> XINCLUDE "/Shared/common.ab3"
0000487A <common.ab3@303> XINCLUDE "/Shared/common.ab3"
00004882 <common.ab3@304> XINCLUDE "/Shared/common.ab3"
00004886 <common.ab3@305> XINCLUDE "/Shared/common.ab3"
0000488A <common.ab3@306> XINCLUDE "/Shared/common.ab3"
0000488E <common.ab3@307> XINCLUDE "/Shared/common.ab3"
00004890 <common.ab3@309> XINCLUDE "/Shared/common.ab3"
00004950 <common.ab3@310> XINCLUDE "/Shared/common.ab3"
00004998 <common.ab3@311> XINCLUDE "/Shared/common.ab3"
0000499C <common.ab3@313> XINCLUDE "/Shared/common.ab3"
0000499E <common.ab3@314> XINCLUDE "/Shared/common.ab3"
000049A2 <common.ab3@315> XINCLUDE "/Shared/common.ab3"
000049A4 <common.ab3@316> XINCLUDE "/Shared/common.ab3"
000049A6 <common.ab3@317> XINCLUDE "/Shared/common.ab3"
000049A8 <common.ab3@318> XINCLUDE "/Shared/common.ab3"
000049AA <common.ab3@319> XINCLUDE "/Shared/common.ab3"
000049AC <common.ab3@321> XINCLUDE "/Shared/common.ab3"
000049AE <common.ab3@322> XINCLUDE "/Shared/common.ab3"
000049AF <common.ab3@326> XINCLUDE "/Shared/common.ab3"
000049B0 <common.ab3@328> XINCLUDE "/Shared/common.ab3"
000049B2 <common.ab3@329> XINCLUDE "/Shared/common.ab3"
000049B4 <common.ab3@330> XINCLUDE "/Shared/common.ab3"
000049B6 <common.ab3@332> XINCLUDE "/Shared/common.ab3"
000049B8 <common.ab3@335> XINCLUDE "/Shared/common.ab3"
000049BA <common.ab3@337> XINCLUDE "/Shared/common.ab3"
000049BC <common.ab3@339> XINCLUDE "/Shared/common.ab3"
000049C0 <common.ab3@341> XINCLUDE "/Shared/common.ab3"
000049C2 <common.ab3@343> XINCLUDE "/Shared/common.ab3"
000049C4 <common.ab3@344> XINCLUDE "/Shared/common.ab3"
000049C6 <common.ab3@346> XINCLUDE "/Shared/common.ab3"
000049CA <common.ab3@348> XINCLUDE "/Shared/common.ab3"
000049CC <common.ab3@349> XINCLUDE "/Shared/common.ab3"
000049CE <common.ab3@350> XINCLUDE "/Shared/common.ab3"
000049D2 <common.ab3@353> XINCLUDE "/Shared/common.ab3"
000049D4 <common.ab3@354> XINCLUDE "/Shared/common.ab3"
000049D6 <common.ab3@355> XINCLUDE "/Shared/common.ab3"
000049D8 <common.ab3@356> XINCLUDE "/Shared/common.ab3"
000049DA <common.ab3@358> XINCLUDE "/Shared/common.ab3"
000049DC <common.ab3@359> XINCLUDE "/Shared/common.ab3"
000049E0 <common.ab3@361> XINCLUDE "/Shared/common.ab3"
000049E2 <common.ab3@362> XINCLUDE "/Shared/common.ab3"
000049E4 <common.ab3@363> XINCLUDE "/Shared/common.ab3"
000049E6 <common.ab3@367> XINCLUDE "/Shared/common.ab3"
000049E8 <common.ab3@368> XINCLUDE "/Shared/common.ab3"
000049EC <common.ab3@369> XINCLUDE "/Shared/common.ab3"
000049EE <common.ab3@375> XINCLUDE "/Shared/common.ab3"
000049F0 <common.ab3@377> XINCLUDE "/Shared/common.ab3"
000049F2 <common.ab3@379> XINCLUDE "/Shared/common.ab3"
000049F4 <common.ab3@380> XINCLUDE "/Shared/common.ab3"
000049F6 <common.ab3@381> XINCLUDE "/Shared/common.ab3"
000049FA <common.ab3@382> XINCLUDE "/Shared/common.ab3"
000049FC <common.ab3@383> XINCLUDE "/Shared/common.ab3"
000049FE <common.ab3@384> XINCLUDE "/Shared/common.ab3"
00004A00 <common.ab3@385> XINCLUDE "/Shared/common.ab3"
00004A02 <common.ab3@386> XINCLUDE "/Shared/common.ab3"
00004A04 <common.ab3@388> XINCLUDE "/Shared/common.ab3"
00004A06 <common.ab3@390> XINCLUDE "/Shared/common.ab3"
00004A08 <common.ab3@392> XINCLUDE "/Shared/common.ab3"
00004A0C <common.ab3@393> XINCLUDE "/Shared/common.ab3"
00004A0E <common.ab3@394> XINCLUDE "/Shared/common.ab3"
00004A3C <common.ab3@395> XINCLUDE "/Shared/common.ab3"
00004A46 <common.ab3@396> XINCLUDE "/Shared/common.ab3"
00004A4A <common.ab3@397> XINCLUDE "/Shared/common.ab3"
00004A4C <common.ab3@399> XINCLUDE "/Shared/common.ab3"
00004A4E <common.ab3@400> XINCLUDE "/Shared/common.ab3"
00004A52 <common.ab3@401> XINCLUDE "/Shared/common.ab3"
00004A56 <common.ab3@402> XINCLUDE "/Shared/common.ab3"
00004A5F <common.ab3@403> XINCLUDE "/Shared/common.ab3"
00004A62 <common.ab3@404> XINCLUDE "/Shared/common.ab3"
00004A8F <common.ab3@405> XINCLUDE "/Shared/common.ab3"
00004ACF <common.ab3@406> XINCLUDE "/Shared/common.ab3"
00004ADB <common.ab3@407> XINCLUDE "/Shared/common.ab3"
00004B2B <common.ab3@408> XINCLUDE "/Shared/common.ab3"
00004B37 <common.ab3@409> XINCLUDE "/Shared/common.ab3"
00004B87 <common.ab3@410> XINCLUDE "/Shared/common.ab3"
00004C83 <common.ab3@411> XINCLUDE "/Shared/common.ab3"
00004C85 <common.ab3@412> XINCLUDE "/Shared/common.ab3"
00004D45 <common.ab3@413> XINCLUDE "/Shared/common.ab3"
00004D85 <common.ab3@414> XINCLUDE "/Shared/common.ab3"
00004D87 <common.ab3@415> XINCLUDE "/Shared/common.ab3"
00004D88 <common.ab3@416> XINCLUDE "/Shared/common.ab3"
00004D8C <common.ab3@419> XINCLUDE "/Shared/common.ab3"
00004D90 <common.ab3@421> XINCLUDE "/Shared/common.ab3"
00004D94 <common.ab3@422> XINCLUDE "/Shared/common.ab3"
00004D98 <common.ab3@423> XINCLUDE "/Shared/common.ab3"
00004D9C <common.ab3@425> XINCLUDE "/Shared/common.ab3"
00004DA0 <common.ab3@427> XINCLUDE "/Shared/common.ab3"
00004DA4 <common.ab3@428> XINCLUDE "/Shared/common.ab3"
00004DA8 <common.ab3@429> XINCLUDE "/Shared/common.ab3"
00004DAC <common.ab3@430> XINCLUDE "/Shared/common.ab3"
00004DB0 <common.ab3@431> XINCLUDE "/Shared/common.ab3"
00004DB4 <common.ab3@432> XINCLUDE "/Shared/common.ab3"
00004DB8 <common.ab3@433> XINCLUDE "/Shared/common.ab3"
00004DBC <common.ab3@434> XINCLUDE "/Shared/common.ab3"
00004DC0 <common.ab3@436> XINCLUDE "/Shared/common.ab3"
00004DC4 <common.ab3@438> XINCLUDE "/Shared/common.ab3"
00004DC8 <common.ab3@440> XINCLUDE "/Shared/common.ab3"
00004DCC <common.ab3@442> XINCLUDE "/Shared/common.ab3"
00004DD0 <common.ab3@443> XINCLUDE "/Shared/common.ab3"
00004DDA <common.ab3@444> XINCLUDE "/Shared/common.ab3"
00004DDE <common.ab3@445> XINCLUDE "/Shared/common.ab3"
00004DE2 <common.ab3@448> XINCLUDE "/Shared/common.ab3"
00004DE4 <common.ab3@449> XINCLUDE "/Shared/common.ab3"
00004DE6 <common.ab3@450> XINCLUDE "/Shared/common.ab3"
00004E04 <common.ab3@451> XINCLUDE "/Shared/common.ab3"
00004E08 <common.ab3@452> XINCLUDE "/Shared/common.ab3"
00004E0A <common.ab3@454> XINCLUDE "/Shared/common.ab3"
00004E0E <common.ab3@455> XINCLUDE "/Shared/common.ab3"
00004E42 <common.ab3@456> XINCLUDE "/Shared/common.ab3"
00004E46 <common.ab3@457> XINCLUDE "/Shared/common.ab3"
00004E54 <common.ab3@459> XINCLUDE "/Shared/common.ab3"
00004E66 <common.ab3@460> XINCLUDE "/Shared/common.ab3"
00004E68 <common.ab3@461> XINCLUDE "/Shared/common.ab3"
00004E7C <common.ab3@462> XINCLUDE "/Shared/common.ab3"
00004E92 <common.ab3@463> XINCLUDE "/Shared/common.ab3"
00004EA8 <common.ab3@464> XINCLUDE "/Shared/common.ab3"
00004EBE <common.ab3@465> XINCLUDE "/Shared/common.ab3"
00004ED4 <common.ab3@466> XINCLUDE "/Shared/common.ab3"
00004ED6 <common.ab3@467> XINCLUDE "/Shared/common.ab3"
00004ED8 <common.ab3@468> XINCLUDE "/Shared/common.ab3"
00004EDC <common.ab3@470> XINCLUDE "/Shared/common.ab3"
00004EE0 <common.ab3@472> XINCLUDE "/Shared/common.ab3"
00004EE4 <common.ab3@474> XINCLUDE "/Shared/common.ab3"
00004EE8 <common.ab3@475> XINCLUDE "/Shared/common.ab3"
00004EEC <common.ab3@476> XINCLUDE "/Shared/common.ab3"
00004EF0 <common.ab3@477> XINCLUDE "/Shared/common.ab3"
00004EF4 <common.ab3@478> XINCLUDE "/Shared/common.ab3"
00004EF8 <common.ab3@479> XINCLUDE "/Shared/common.ab3"
00004EFC <common.ab3@480> XINCLUDE "/Shared/common.ab3"
00004F00 <common.ab3@481> XINCLUDE "/Shared/common.ab3"
00004F06 <common.ab3@482> XINCLUDE "/Shared/common.ab3"
00004F18 <common.ab3@483> XINCLUDE "/Shared/common.ab3"
00004F1A <common.ab3@487> XINCLUDE "/Shared/common.ab3"
00004F1E <common.ab3@488> XINCLUDE "/Shared/common.ab3"
00004F20 <common.ab3@489> XINCLUDE "/Shared/common.ab3"
00004F24 <common.ab3@490> XINCLUDE "/Shared/common.ab3"
00004F26 <common.ab3@491> XINCLUDE "/Shared/common.ab3"
00004F2A <common.ab3@492> XINCLUDE "/Shared/common.ab3"
00004F2C <common.ab3@493> XINCLUDE "/Shared/common.ab3"
00004F30 <common.ab3@494> XINCLUDE "/Shared/common.ab3"
00004F32 <common.ab3@495> XINCLUDE "/Shared/common.ab3"
00004F36 <common.ab3@496> XINCLUDE "/Shared/common.ab3"
00004F38 <common.ab3@497> XINCLUDE "/Shared/common.ab3"
00004F3C <common.ab3@498> XINCLUDE "/Shared/common.ab3"
00004F3E <common.ab3@499> XINCLUDE "/Shared/common.ab3"
00004F42 <common.ab3@500> XINCLUDE "/Shared/common.ab3"
00004F44 <common.ab3@501> XINCLUDE "/Shared/common.ab3"
00004F48 <common.ab3@502> XINCLUDE "/Shared/common.ab3"
00004F4A <common.ab3@503> XINCLUDE "/Shared/common.ab3"
00004F4E <common.ab3@504> XINCLUDE "/Shared/common.ab3"
00004F50 <common.ab3@505> XINCLUDE "/Shared/common.ab3"
00004F54 <common.ab3@506> XINCLUDE "/Shared/common.ab3"
00004F56 <common.ab3@507> XINCLUDE "/Shared/common.ab3"
00004F5A <common.ab3@508> XINCLUDE "/Shared/common.ab3"
00004F5C <common.ab3@509> XINCLUDE "/Shared/common.ab3"
00004F60 <common.ab3@510> XINCLUDE "/Shared/common.ab3"
00004F62 <common.ab3@511> XINCLUDE "/Shared/common.ab3"
00004F66 <common.ab3@512> XINCLUDE "/Shared/common.ab3"
00004F68 <common.ab3@513> XINCLUDE "/Shared/common.ab3"
00004F6C <common.ab3@514> XINCLUDE "/Shared/common.ab3"
00004F6E <common.ab3@515> XINCLUDE "/Shared/common.ab3"
00004F82 <common.ab3@519> XINCLUDE "/Shared/common.ab3"
00004F96 <common.ab3@520> XINCLUDE "/Shared/common.ab3"
00004FAA <common.ab3@521> XINCLUDE "/Shared/common.ab3"
00004FAC <common.ab3@522> XINCLUDE "/Shared/common.ab3"
00004FB0 <common.ab3@523> XINCLUDE "/Shared/common.ab3"
00004FB4 <common.ab3@524> XINCLUDE "/Shared/common.ab3"
00004FB8 <common.ab3@525> XINCLUDE "/Shared/common.ab3"
00004FBC <common.ab3@526> XINCLUDE "/Shared/common.ab3"
00004FC0 <common.ab3@527> XINCLUDE "/Shared/common.ab3"
00004FC4 <common.ab3@528> XINCLUDE "/Shared/common.ab3"
00004FC8 <common.ab3@529> XINCLUDE "/Shared/common.ab3"
00004FC9 <common.ab3@530> XINCLUDE "/Shared/common.ab3"
00004FCA <common.ab3@531> XINCLUDE "/Shared/common.ab3"
00004FCB <common.ab3@532> XINCLUDE "/Shared/common.ab3"
00004FCE <common.ab3@533> XINCLUDE "/Shared/common.ab3"
00004FD2 <common.ab3@534> XINCLUDE "/Shared/common.ab3"
00004FD6 <common.ab3@535> XINCLUDE "/Shared/common.ab3"
00004FDA <common.ab3@536> XINCLUDE "/Shared/common.ab3"
00004FDE <common.ab3@537> XINCLUDE "/Shared/common.ab3"
00004FE2 <common.ab3@538> XINCLUDE "/Shared/common.ab3"
00004FE6 <common.ab3@539> XINCLUDE "/Shared/common.ab3"
00004FE7 <common.ab3@540> XINCLUDE "/Shared/common.ab3"
00004FE8 <common.ab3@541> XINCLUDE "/Shared/common.ab3"
00004FEA <common.ab3@542> XINCLUDE "/Shared/common.ab3"
00004FEE <common.ab3@543> XINCLUDE "/Shared/common.ab3"
00004FF2 <common.ab3@544> XINCLUDE "/Shared/common.ab3"
00004FF6 <common.ab3@545> XINCLUDE "/Shared/common.ab3"
00004FFA <common.ab3@547> XINCLUDE "/Shared/common.ab3"
00004FFE <common.ab3@548> XINCLUDE "/Shared/common.ab3"
00005002 <common.ab3@549> XINCLUDE "/Shared/common.ab3"
00005006 <common.ab3@550> XINCLUDE "/Shared/common.ab3"
0000500A <common.ab3@551> XINCLUDE "/Shared/common.ab3"
0000500E <common.ab3@552> XINCLUDE "/Shared/common.ab3"
00005012 <common.ab3@553> XINCLUDE "/Shared/common.ab3"
00005016 <common.ab3@554> XINCLUDE "/Shared/common.ab3"
0000501A <common.ab3@558> XINCLUDE "/Shared/common.ab3"
0000501E <common.ab3@559> XINCLUDE "/Shared/common.ab3"
00005022 <common.ab3@560> XINCLUDE "/Shared/common.ab3"
00005024 <common.ab3@561> XINCLUDE "/Shared/common.ab3"
00005025 <common.ab3@562> XINCLUDE "/Shared/common.ab3"
00005029 <common.ab3@563> XINCLUDE "/Shared/common.ab3"
0000502D <common.ab3@564> XINCLUDE "/Shared/common.ab3"
00005031 <common.ab3@565> XINCLUDE "/Shared/common.ab3"
00005035 <common.ab3@566> XINCLUDE "/Shared/common.ab3"
00005036 <common.ab3@568> XINCLUDE "/Shared/common.ab3"
0000503A <common.ab3@570> XINCLUDE "/Shared/common.ab3"
0000503E <common.ab3@571> XINCLUDE "/Shared/common.ab3"
00005042 <common.ab3@572> XINCLUDE "/Shared/common.ab3"
00005046 <common.ab3@573> XINCLUDE "/Shared/common.ab3"
0000504A <common.ab3@574> XINCLUDE "/Shared/common.ab3"
0000504B <common.ab3@575> XINCLUDE "/Shared/common.ab3"
0000504C <common.ab3@577> XINCLUDE "/Shared/common.ab3"
00005050 <common.ab3@579> XINCLUDE "/Shared/common.ab3"
00005054 <common.ab3@580> XINCLUDE "/Shared/common.ab3"
00005056 <common.ab3@581> XINCLUDE "/Shared/common.ab3"
00005058 <common.ab3@582> XINCLUDE "/Shared/common.ab3"
0000505C <common.ab3@586> XINCLUDE "/Shared/common.ab3"
00005060 <common.ab3@587> XINCLUDE "/Shared/common.ab3"
00005064 <common.ab3@589> XINCLUDE "/Shared/common.ab3"
00005068 <common.ab3@590> XINCLUDE "/Shared/common.ab3"
0000506C <common.ab3@592> XINCLUDE "/Shared/common.ab3"
00005070 <common.ab3@593> XINCLUDE "/Shared/common.ab3"
00005074 <common.ab3@595> XINCLUDE "/Shared/common.ab3"
00005078 <common.ab3@596> XINCLUDE "/Shared/common.ab3"
0000507C <common.ab3@597> XINCLUDE "/Shared/common.ab3"
00005080 <common.ab3@598> XINCLUDE "/Shared/common.ab3"
00005084 <common.ab3@599> XINCLUDE "/Shared/common.ab3"
00005088 <common.ab3@600> XINCLUDE "/Shared/common.ab3"
0000508C <common.ab3@601> XINCLUDE "/Shared/common.ab3"
00005090 <common.ab3@602> XINCLUDE "/Shared/common.ab3"
00005094 <common.ab3@603> XINCLUDE "/Shared/common.ab3"
00005098 <common.ab3@604> XINCLUDE "/Shared/common.ab3"
0000509C <common.ab3@605> XINCLUDE "/Shared/common.ab3"
000050A0 <common.ab3@606> XINCLUDE "/Shared/common.ab3"
000050A4 <common.ab3@607> XINCLUDE "/Shared/common.ab3"
000050A8 <common.ab3@608> XINCLUDE "/Shared/common.ab3"
000050A8 <AmiBlitz3.ab3@86> XINCLUDE "/Shared/common.ab3"
000050A8 <preprocessor.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
000050A8 <hashmap.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
000050C6 <hashmap.include.ab3@36> XINCLUDE "/Shared/preprocessor.include.ab3"
000050CE <hashmap.include.ab3@38> XINCLUDE "/Shared/preprocessor.include.ab3"
000050FC <hashmap.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
0000512C <hashmap.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
0000513C <hashmap.include.ab3@41> XINCLUDE "/Shared/preprocessor.include.ab3"
00005146 <hashmap.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
0000514C <hashmap.include.ab3@45> XINCLUDE "/Shared/preprocessor.include.ab3"
0000516E <hashmap.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
0000518C <hashmap.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
0000519E <hashmap.include.ab3@51> XINCLUDE "/Shared/preprocessor.include.ab3"
000051C6 <hashmap.include.ab3@52> XINCLUDE "/Shared/preprocessor.include.ab3"
000051CC <hashmap.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
000051E6 <hashmap.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
000051FE <hashmap.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00005210 <hashmap.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
0000521E <hashmap.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00005252 <hashmap.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00005260 <hashmap.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
0000526A <hashmap.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
0000527C <hashmap.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
000052B6 <hashmap.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
000052C6 <hashmap.include.ab3@67> XINCLUDE "/Shared/preprocessor.include.ab3"
000052CC <hashmap.include.ab3@69> XINCLUDE "/Shared/preprocessor.include.ab3"
000052DC <hashmap.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
000052EC <hashmap.include.ab3@72> XINCLUDE "/Shared/preprocessor.include.ab3"
000052FA <hashmap.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
0000530A <hashmap.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
0000532E <hashmap.include.ab3@76> XINCLUDE "/Shared/preprocessor.include.ab3"
0000533A <hashmap.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
00005348 <hashmap.include.ab3@79> XINCLUDE "/Shared/preprocessor.include.ab3"
00005356 <hashmap.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
00005364 <hashmap.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00005372 <hashmap.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
000053A8 <hashmap.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
000053B6 <hashmap.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
000053C6 <hashmap.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
000053CE <hashmap.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
000053D2 <hashmap.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
000053EC <hashmap.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00005406 <hashmap.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00005420 <hashmap.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
00005440 <hashmap.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
0000544A <hashmap.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
00005456 <hashmap.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
0000546A <hashmap.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
0000549C <hashmap.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
000054B4 <hashmap.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
000054C0 <hashmap.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
000054CE <hashmap.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
000054DC <hashmap.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
000054EA <hashmap.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
000054F8 <hashmap.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
00005522 <hashmap.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
0000552C <hashmap.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
00005532 <hashmap.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
00005560 <hashmap.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
00005578 <hashmap.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
00005596 <hashmap.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
000055AA <hashmap.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
000055C2 <hashmap.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
000055EA <hashmap.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
00005602 <hashmap.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
00005610 <hashmap.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
0000561E <hashmap.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
0000562C <hashmap.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
00005640 <hashmap.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
00005694 <hashmap.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
000056BE <hashmap.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00005702 <hashmap.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
00005722 <hashmap.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
00005734 <hashmap.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
00005758 <hashmap.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
00005766 <hashmap.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
000057BE <hashmap.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
00005804 <hashmap.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
0000580A <hashmap.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
00005812 <hashmap.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
0000583A <hashmap.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
0000584C <hashmap.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
0000585E <hashmap.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
00005898 <hashmap.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
000058A8 <hashmap.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
000058AE <hashmap.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
000058BE <hashmap.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
000058C4 <hashmap.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
000058CA <hashmap.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
000058E2 <hashmap.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
00005920 <hashmap.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
0000593E <hashmap.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
00005970 <hashmap.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
00005984 <hashmap.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
00005998 <hashmap.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
000059B0 <hashmap.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
000059D8 <hashmap.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
000059E2 <hashmap.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
000059F0 <hashmap.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A08 <hashmap.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A0E <hashmap.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A16 <hashmap.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A36 <hashmap.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A5C <hashmap.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A66 <hashmap.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A74 <hashmap.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A7E <hashmap.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AAA <hashmap.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
00005ABE <hashmap.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AC4 <hashmap.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AD2 <hashmap.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B08 <hashmap.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B56 <hashmap.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B7E <hashmap.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B98 <hashmap.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BAA <hashmap.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BB4 <hashmap.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BD0 <hashmap.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BFA <hashmap.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C18 <hashmap.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C3C <hashmap.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C6A <hashmap.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C84 <hashmap.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CAC <hashmap.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CCA <hashmap.include.ab3@210> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CE6 <hashmap.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CF4 <hashmap.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D08 <hashmap.include.ab3@214> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D2A <hashmap.include.ab3@215> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D4C <hashmap.include.ab3@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D5A <hashmap.include.ab3@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D7A <hashmap.include.ab3@218> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DAA <hashmap.include.ab3@219> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DB0 <hashmap.include.ab3@220> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DE4 <hashmap.include.ab3@221> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E26 <hashmap.include.ab3@222> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E36 <hashmap.include.ab3@223> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E40 <hashmap.include.ab3@224> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E50 <hashmap.include.ab3@225> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E56 <hashmap.include.ab3@229> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E62 <hashmap.include.ab3@231> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E68 <hashmap.include.ab3@233> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E96 <hashmap.include.ab3@236> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EC6 <hashmap.include.ab3@238> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EFC <hashmap.include.ab3@239> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F10 <hashmap.include.ab3@240> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F28 <hashmap.include.ab3@241> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F50 <hashmap.include.ab3@242> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F80 <hashmap.include.ab3@243> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F9C <hashmap.include.ab3@244> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FAA <hashmap.include.ab3@245> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FBE <hashmap.include.ab3@246> XINCLUDE "/Shared/preprocessor.include.ab3"
00006012 <hashmap.include.ab3@247> XINCLUDE "/Shared/preprocessor.include.ab3"
0000603C <hashmap.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00006080 <hashmap.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
000060A6 <hashmap.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
000060AC <hashmap.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
000060CA <hashmap.include.ab3@254> XINCLUDE "/Shared/preprocessor.include.ab3"
000060E8 <hashmap.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00006106 <hashmap.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
0000610C <hashmap.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00006132 <hashmap.include.ab3@293> XINCLUDE "/Shared/preprocessor.include.ab3"
00006160 <hashmap.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00006188 <hashmap.include.ab3@296> XINCLUDE "/Shared/preprocessor.include.ab3"
000061AC <hashmap.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00006202 <hashmap.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00006254 <hashmap.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
000062AA <hashmap.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
000062BA <hashmap.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
0000630C <hashmap.include.ab3@306> XINCLUDE "/Shared/preprocessor.include.ab3"
00006334 <hashmap.include.ab3@307> XINCLUDE "/Shared/preprocessor.include.ab3"
0000635A <hashmap.include.ab3@308> XINCLUDE "/Shared/preprocessor.include.ab3"
00006374 <hashmap.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
0000637C <hashmap.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
000063A4 <hashmap.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
000063D2 <hashmap.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
000063FA <hashmap.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
00006402 <hashmap.include.ab3@316> XINCLUDE "/Shared/preprocessor.include.ab3"
00006426 <hashmap.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
0000645A <hashmap.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
00006476 <hashmap.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
00006480 <hashmap.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
00006494 <hashmap.include.ab3@322> XINCLUDE "/Shared/preprocessor.include.ab3"
000064B4 <hashmap.include.ab3@323> XINCLUDE "/Shared/preprocessor.include.ab3"
000064D0 <hashmap.include.ab3@324> XINCLUDE "/Shared/preprocessor.include.ab3"
000064DE <hashmap.include.ab3@325> XINCLUDE "/Shared/preprocessor.include.ab3"
000064EC <hashmap.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
000064F2 <hashmap.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
0000650A <hashmap.include.ab3@328> XINCLUDE "/Shared/preprocessor.include.ab3"
0000651A <hashmap.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
00006548 <hashmap.include.ab3@331> XINCLUDE "/Shared/preprocessor.include.ab3"
000065A4 <hashmap.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
0000661C <hashmap.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
00006678 <hashmap.include.ab3@334> XINCLUDE "/Shared/preprocessor.include.ab3"
0000667E <hashmap.include.ab3@335> XINCLUDE "/Shared/preprocessor.include.ab3"
00006688 <hashmap.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
0000668E <hashmap.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
000066BC <hashmap.include.ab3@343> XINCLUDE "/Shared/preprocessor.include.ab3"
000066C2 <hashmap.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
000066E2 <hashmap.include.ab3@346> XINCLUDE "/Shared/preprocessor.include.ab3"
000066EC <hashmap.include.ab3@347> XINCLUDE "/Shared/preprocessor.include.ab3"
000066FE <hashmap.include.ab3@348> XINCLUDE "/Shared/preprocessor.include.ab3"
0000670E <hashmap.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
00006718 <hashmap.include.ab3@352> XINCLUDE "/Shared/preprocessor.include.ab3"
00006732 <hashmap.include.ab3@354> XINCLUDE "/Shared/preprocessor.include.ab3"
0000674C <hashmap.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
00006754 <hashmap.include.ab3@359> XINCLUDE "/Shared/preprocessor.include.ab3"
0000675A <hashmap.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
00006764 <hashmap.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
0000676C <hashmap.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
00006794 <hashmap.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
0000679A <hashmap.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
000067AE <hashmap.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
000067EA <hashmap.include.ab3@367> XINCLUDE "/Shared/preprocessor.include.ab3"
00006810 <hashmap.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
0000681E <hashmap.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
0000685A <hashmap.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
0000686E <hashmap.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
000068AA <hashmap.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
000068C0 <hashmap.include.ab3@375> XINCLUDE "/Shared/preprocessor.include.ab3"
000068D4 <hashmap.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
000068DE <hashmap.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
00006902 <hashmap.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
0000693A <hashmap.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
00006940 <hashmap.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
0000694C <hashmap.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
00006960 <hashmap.include.ab3@385> XINCLUDE "/Shared/preprocessor.include.ab3"
0000696A <hashmap.include.ab3@386> XINCLUDE "/Shared/preprocessor.include.ab3"
00006992 <hashmap.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
000069BA <hashmap.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
000069CC <hashmap.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
000069F8 <hashmap.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A2C <hashmap.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A58 <hashmap.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AA4 <hashmap.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AB4 <hashmap.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
00006ABA <hashmap.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AC6 <hashmap.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AF4 <hashmap.include.ab3@401> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AF6 <hashmap.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AFC <hashmap.include.ab3@404> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B06 <hashmap.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B30 <hashmap.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B3A <hashmap.include.ab3@410> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B40 <hashmap.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B6A <hashmap.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B72 <hashmap.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B92 <hashmap.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B9C <hashmap.include.ab3@419> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BAA <hashmap.include.ab3@420> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BBA <hashmap.include.ab3@421> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BC4 <hashmap.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BDE <hashmap.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BDE <preprocessor.include.ab3@11> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BF8 <preprocessor.include.ab3@29> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C12 <preprocessor.include.ab3@30> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C34 <preprocessor.include.ab3@31> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C66 <preprocessor.include.ab3@32> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C6A <preprocessor.include.ab3@33> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C84 <preprocessor.include.ab3@36> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C9E <preprocessor.include.ab3@37> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CA8 <preprocessor.include.ab3@38> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CBE <preprocessor.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CC2 <preprocessor.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CDC <preprocessor.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CF6 <preprocessor.include.ab3@44> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D10 <preprocessor.include.ab3@45> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D34 <preprocessor.include.ab3@46> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D3A <preprocessor.include.ab3@47> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D64 <preprocessor.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D7E <preprocessor.include.ab3@49> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D8E <preprocessor.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D98 <preprocessor.include.ab3@53> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DA6 <preprocessor.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DC8 <preprocessor.include.ab3@55> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DFC <preprocessor.include.ab3@56> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E18 <preprocessor.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E22 <preprocessor.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E3E <preprocessor.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E4C <preprocessor.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E60 <preprocessor.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E82 <preprocessor.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EA4 <preprocessor.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EC2 <preprocessor.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EF0 <preprocessor.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EF6 <preprocessor.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F06 <preprocessor.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F0A <preprocessor.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F20 <preprocessor.include.ab3@73> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F40 <preprocessor.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F4A <preprocessor.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F74 <preprocessor.include.ab3@76> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F8A <preprocessor.include.ab3@77> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F9A <preprocessor.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FB6 <preprocessor.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FD2 <preprocessor.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FEE <preprocessor.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
0000700A <preprocessor.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00007026 <preprocessor.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
00007042 <preprocessor.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
0000705E <preprocessor.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
0000707A <preprocessor.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00007096 <preprocessor.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
000070B2 <preprocessor.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
000070CE <preprocessor.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
000070EA <preprocessor.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00007106 <preprocessor.include.ab3@92> XINCLUDE "/Shared/preprocessor.include.ab3"
00007122 <preprocessor.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
0000713E <preprocessor.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
0000715A <preprocessor.include.ab3@95> XINCLUDE "/Shared/preprocessor.include.ab3"
00007176 <preprocessor.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
00007192 <preprocessor.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
000071AE <preprocessor.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
000071CA <preprocessor.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
000071E6 <preprocessor.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
00007202 <preprocessor.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
0000721E <preprocessor.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
0000723A <preprocessor.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
00007256 <preprocessor.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00007272 <preprocessor.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
0000728E <preprocessor.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
000072AA <preprocessor.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
000072C6 <preprocessor.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
000072E2 <preprocessor.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
000072FE <preprocessor.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
0000731A <preprocessor.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
00007336 <preprocessor.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
00007352 <preprocessor.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
0000736E <preprocessor.include.ab3@114> XINCLUDE "/Shared/preprocessor.include.ab3"
0000738A <preprocessor.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
000073A6 <preprocessor.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
000073C2 <preprocessor.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
000073DE <preprocessor.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
000073FA <preprocessor.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
00007416 <preprocessor.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
00007432 <preprocessor.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
0000744E <preprocessor.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
0000746A <preprocessor.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
00007486 <preprocessor.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
000074A2 <preprocessor.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
000074BE <preprocessor.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
000074DA <preprocessor.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
000074F6 <preprocessor.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00007512 <preprocessor.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
0000752E <preprocessor.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
0000754A <preprocessor.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
00007566 <preprocessor.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
00007582 <preprocessor.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
0000759E <preprocessor.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
000075BA <preprocessor.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
000075D6 <preprocessor.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
000075F2 <preprocessor.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
0000760E <preprocessor.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
0000762A <preprocessor.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
00007646 <preprocessor.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
00007662 <preprocessor.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
0000767E <preprocessor.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
0000769A <preprocessor.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
000076B6 <preprocessor.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
000076D2 <preprocessor.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
000076EE <preprocessor.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
0000770A <preprocessor.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
00007726 <preprocessor.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
00007742 <preprocessor.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
0000775E <preprocessor.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
0000777A <preprocessor.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00007796 <preprocessor.include.ab3@152> XINCLUDE "/Shared/preprocessor.include.ab3"
000077B2 <preprocessor.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
000077CE <preprocessor.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
000077EA <preprocessor.include.ab3@155> XINCLUDE "/Shared/preprocessor.include.ab3"
00007806 <preprocessor.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
00007822 <preprocessor.include.ab3@157> XINCLUDE "/Shared/preprocessor.include.ab3"
0000783E <preprocessor.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
0000785A <preprocessor.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
00007876 <preprocessor.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
00007892 <preprocessor.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
000078AE <preprocessor.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
000078CA <preprocessor.include.ab3@163> XINCLUDE "/Shared/preprocessor.include.ab3"
000078E6 <preprocessor.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
00007902 <preprocessor.include.ab3@165> XINCLUDE "/Shared/preprocessor.include.ab3"
0000791E <preprocessor.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
0000793A <preprocessor.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
00007956 <preprocessor.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
00007972 <preprocessor.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
0000798E <preprocessor.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
000079AA <preprocessor.include.ab3@171> XINCLUDE "/Shared/preprocessor.include.ab3"
000079C6 <preprocessor.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
000079E2 <preprocessor.include.ab3@173> XINCLUDE "/Shared/preprocessor.include.ab3"
000079FE <preprocessor.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A1A <preprocessor.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A36 <preprocessor.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A52 <preprocessor.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A6E <preprocessor.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A8A <preprocessor.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AA6 <preprocessor.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AC2 <preprocessor.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ADE <preprocessor.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AFA <preprocessor.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B16 <preprocessor.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B32 <preprocessor.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B4E <preprocessor.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B6A <preprocessor.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B86 <preprocessor.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BA2 <preprocessor.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BBE <preprocessor.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BDA <preprocessor.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BF6 <preprocessor.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C12 <preprocessor.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C2E <preprocessor.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C4A <preprocessor.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C66 <preprocessor.include.ab3@196> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C82 <preprocessor.include.ab3@197> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C9E <preprocessor.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CBA <preprocessor.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CD6 <preprocessor.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CF2 <preprocessor.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D0E <preprocessor.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D2A <preprocessor.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D46 <preprocessor.include.ab3@204> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D62 <preprocessor.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D7E <preprocessor.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D9A <preprocessor.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DA2 <preprocessor.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DAC <preprocessor.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DB6 <preprocessor.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DBC <preprocessor.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DEA <preprocessor.include.ab3@247> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E06 <preprocessor.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E38 <preprocessor.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E42 <preprocessor.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E64 <preprocessor.include.ab3@251> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E6E <preprocessor.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E78 <preprocessor.include.ab3@253> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E82 <preprocessor.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E9C <preprocessor.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ECA <preprocessor.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EE6 <preprocessor.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EF4 <preprocessor.include.ab3@261> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F2E <preprocessor.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F36 <preprocessor.include.ab3@264> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F50 <preprocessor.include.ab3@265> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F76 <preprocessor.include.ab3@272> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F98 <preprocessor.include.ab3@273> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FBC <preprocessor.include.ab3@274> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FC2 <preprocessor.include.ab3@275> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FD0 <preprocessor.include.ab3@276> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FD6 <preprocessor.include.ab3@277> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FDE <preprocessor.include.ab3@278> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FE4 <preprocessor.include.ab3@279> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FEC <preprocessor.include.ab3@280> XINCLUDE "/Shared/preprocessor.include.ab3"
00008000 <preprocessor.include.ab3@282> XINCLUDE "/Shared/preprocessor.include.ab3"
00008026 <preprocessor.include.ab3@283> XINCLUDE "/Shared/preprocessor.include.ab3"
0000804E <preprocessor.include.ab3@284> XINCLUDE "/Shared/preprocessor.include.ab3"
00008058 <preprocessor.include.ab3@286> XINCLUDE "/Shared/preprocessor.include.ab3"
0000806C <preprocessor.include.ab3@287> XINCLUDE "/Shared/preprocessor.include.ab3"
00008080 <preprocessor.include.ab3@288> XINCLUDE "/Shared/preprocessor.include.ab3"
00008090 <preprocessor.include.ab3@289> XINCLUDE "/Shared/preprocessor.include.ab3"
000080AA <preprocessor.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
000080D8 <preprocessor.include.ab3@291> XINCLUDE "/Shared/preprocessor.include.ab3"
000080EC <preprocessor.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00008114 <preprocessor.include.ab3@293> XINCLUDE "/Shared/preprocessor.include.ab3"
0000811A <preprocessor.include.ab3@294> XINCLUDE "/Shared/preprocessor.include.ab3"
00008122 <preprocessor.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00008128 <preprocessor.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00008150 <preprocessor.include.ab3@298> XINCLUDE "/Shared/preprocessor.include.ab3"
0000815A <preprocessor.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00008168 <preprocessor.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00008186 <preprocessor.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00008194 <preprocessor.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
0000819C <preprocessor.include.ab3@304> XINCLUDE "/Shared/preprocessor.include.ab3"
000081A2 <preprocessor.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
000081B6 <preprocessor.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
000081C0 <preprocessor.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
000081CE <preprocessor.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
000081E8 <preprocessor.include.ab3@312> XINCLUDE "/Shared/preprocessor.include.ab3"
000081EE <preprocessor.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
000081F6 <preprocessor.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
000081FC <preprocessor.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
00008210 <preprocessor.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
0000821A <preprocessor.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
00008222 <preprocessor.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
00008236 <preprocessor.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
0000824A <preprocessor.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
0000825E <preprocessor.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
0000827C <preprocessor.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
0000828A <preprocessor.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
0000829A <preprocessor.include.ab3@331> XINCLUDE "/Shared/preprocessor.include.ab3"
000082C2 <preprocessor.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
000082E4 <preprocessor.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
000082F8 <preprocessor.include.ab3@336> XINCLUDE "/Shared/preprocessor.include.ab3"
00008316 <preprocessor.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
00008324 <preprocessor.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
0000834A <preprocessor.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
00008372 <preprocessor.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
00008394 <preprocessor.include.ab3@342> XINCLUDE "/Shared/preprocessor.include.ab3"
000083C4 <preprocessor.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
000083F2 <preprocessor.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
00008424 <preprocessor.include.ab3@350> XINCLUDE "/Shared/preprocessor.include.ab3"
00008432 <preprocessor.include.ab3@352> XINCLUDE "/Shared/preprocessor.include.ab3"
00008438 <preprocessor.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
00008448 <preprocessor.include.ab3@356> XINCLUDE "/Shared/preprocessor.include.ab3"
0000844E <preprocessor.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
00008474 <preprocessor.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
00008496 <preprocessor.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
000084BE <preprocessor.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
000084DE <preprocessor.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
00008500 <preprocessor.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
00008506 <preprocessor.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
00008514 <preprocessor.include.ab3@366> XINCLUDE "/Shared/preprocessor.include.ab3"
00008522 <preprocessor.include.ab3@367> XINCLUDE "/Shared/preprocessor.include.ab3"
00008528 <preprocessor.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
00008530 <preprocessor.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
0000854E <preprocessor.include.ab3@370> XINCLUDE "/Shared/preprocessor.include.ab3"
00008562 <preprocessor.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
00008572 <preprocessor.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
00008588 <preprocessor.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
000085A0 <preprocessor.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
000085BC <preprocessor.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
000085C6 <preprocessor.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
000085E2 <preprocessor.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
000085F4 <preprocessor.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
00008622 <preprocessor.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
0000865E <preprocessor.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
0000866E <preprocessor.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
00008674 <preprocessor.include.ab3@384> XINCLUDE "/Shared/preprocessor.include.ab3"
0000867A <preprocessor.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00008692 <preprocessor.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
000086A2 <preprocessor.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
00008728 <preprocessor.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
00008762 <preprocessor.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
00008798 <preprocessor.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
000087A8 <preprocessor.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
000087B6 <preprocessor.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
000087BC <preprocessor.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
000087CC <preprocessor.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
000087F6 <preprocessor.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
000087FC <preprocessor.include.ab3@399> XINCLUDE "/Shared/preprocessor.include.ab3"
00008828 <preprocessor.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
00008838 <preprocessor.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
00008848 <preprocessor.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
00008866 <preprocessor.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
00008874 <preprocessor.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
000088AA <preprocessor.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
000088CE <preprocessor.include.ab3@409> XINCLUDE "/Shared/preprocessor.include.ab3"
000088E2 <preprocessor.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
000088F2 <preprocessor.include.ab3@414> XINCLUDE "/Shared/preprocessor.include.ab3"
00008910 <preprocessor.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
0000891E <preprocessor.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
00008942 <preprocessor.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
00008966 <preprocessor.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
00008974 <preprocessor.include.ab3@422> XINCLUDE "/Shared/preprocessor.include.ab3"
00008982 <preprocessor.include.ab3@423> XINCLUDE "/Shared/preprocessor.include.ab3"
000089A2 <preprocessor.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
000089B0 <preprocessor.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
000089B6 <preprocessor.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
000089BC <preprocessor.include.ab3@429> XINCLUDE "/Shared/preprocessor.include.ab3"
000089CA <preprocessor.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
000089D8 <preprocessor.include.ab3@432> XINCLUDE "/Shared/preprocessor.include.ab3"
000089F8 <preprocessor.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A06 <preprocessor.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A0C <preprocessor.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A1C <preprocessor.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A26 <preprocessor.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A3A <preprocessor.include.ab3@443> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A60 <preprocessor.include.ab3@448> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A82 <preprocessor.include.ab3@449> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AAA <preprocessor.include.ab3@450> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AB0 <preprocessor.include.ab3@451> XINCLUDE "/Shared/preprocessor.include.ab3"
00008ABE <preprocessor.include.ab3@452> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AC4 <preprocessor.include.ab3@453> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AD8 <preprocessor.include.ab3@454> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AE8 <preprocessor.include.ab3@455> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AFE <preprocessor.include.ab3@457> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B16 <preprocessor.include.ab3@459> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B32 <preprocessor.include.ab3@460> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B3C <preprocessor.include.ab3@461> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B58 <preprocessor.include.ab3@462> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B86 <preprocessor.include.ab3@463> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BC2 <preprocessor.include.ab3@464> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BD2 <preprocessor.include.ab3@465> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BE0 <preprocessor.include.ab3@467> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BE6 <preprocessor.include.ab3@468> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BF6 <preprocessor.include.ab3@469> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C20 <preprocessor.include.ab3@470> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C26 <preprocessor.include.ab3@471> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C52 <preprocessor.include.ab3@472> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C62 <preprocessor.include.ab3@474> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C72 <preprocessor.include.ab3@476> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C90 <preprocessor.include.ab3@477> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C9E <preprocessor.include.ab3@478> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CD4 <preprocessor.include.ab3@479> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CF8 <preprocessor.include.ab3@480> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D0C <preprocessor.include.ab3@483> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D1C <preprocessor.include.ab3@485> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D3A <preprocessor.include.ab3@486> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D48 <preprocessor.include.ab3@487> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D6C <preprocessor.include.ab3@488> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D90 <preprocessor.include.ab3@489> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D96 <preprocessor.include.ab3@493> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DA6 <preprocessor.include.ab3@494> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DAC <preprocessor.include.ab3@495> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DCE <preprocessor.include.ab3@499> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DD6 <preprocessor.include.ab3@500> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E0C <preprocessor.include.ab3@501> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E28 <preprocessor.include.ab3@502> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E2E <preprocessor.include.ab3@503> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E64 <preprocessor.include.ab3@507> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E80 <preprocessor.include.ab3@508> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EA8 <preprocessor.include.ab3@509> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EC6 <preprocessor.include.ab3@510> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EE4 <preprocessor.include.ab3@511> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F12 <preprocessor.include.ab3@512> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F74 <preprocessor.include.ab3@513> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F8E <preprocessor.include.ab3@514> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FA8 <preprocessor.include.ab3@518> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FB2 <preprocessor.include.ab3@519> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FF0 <preprocessor.include.ab3@520> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FF4 <preprocessor.include.ab3@521> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FFE <preprocessor.include.ab3@523> XINCLUDE "/Shared/preprocessor.include.ab3"
0000902C <preprocessor.include.ab3@524> XINCLUDE "/Shared/preprocessor.include.ab3"
0000904C <preprocessor.include.ab3@525> XINCLUDE "/Shared/preprocessor.include.ab3"
00009064 <preprocessor.include.ab3@526> XINCLUDE "/Shared/preprocessor.include.ab3"
000090C2 <preprocessor.include.ab3@527> XINCLUDE "/Shared/preprocessor.include.ab3"
000090EE <preprocessor.include.ab3@528> XINCLUDE "/Shared/preprocessor.include.ab3"
00009100 <preprocessor.include.ab3@529> XINCLUDE "/Shared/preprocessor.include.ab3"
00009110 <preprocessor.include.ab3@530> XINCLUDE "/Shared/preprocessor.include.ab3"
00009128 <preprocessor.include.ab3@531> XINCLUDE "/Shared/preprocessor.include.ab3"
0000912E <preprocessor.include.ab3@533> XINCLUDE "/Shared/preprocessor.include.ab3"
00009168 <preprocessor.include.ab3@534> XINCLUDE "/Shared/preprocessor.include.ab3"
00009172 <preprocessor.include.ab3@536> XINCLUDE "/Shared/preprocessor.include.ab3"
00009178 <preprocessor.include.ab3@537> XINCLUDE "/Shared/preprocessor.include.ab3"
00009182 <preprocessor.include.ab3@538> XINCLUDE "/Shared/preprocessor.include.ab3"
00009194 <preprocessor.include.ab3@539> XINCLUDE "/Shared/preprocessor.include.ab3"
00009194 <AmiBlitz3.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00009194 <logging.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009194 <PE_Tools.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
000091B8 <PE_Tools.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
000091C0 <PE_Tools.include.ab3@84> XINCLUDE "PE/logging.include.ab3"
000091EE <PE_Tools.include.ab3@85> XINCLUDE "PE/logging.include.ab3"
0000921C <PE_Tools.include.ab3@86> XINCLUDE "PE/logging.include.ab3"
0000928C <PE_Tools.include.ab3@87> XINCLUDE "PE/logging.include.ab3"
0000929A <PE_Tools.include.ab3@88> XINCLUDE "PE/logging.include.ab3"
000092EA <PE_Tools.include.ab3@89> XINCLUDE "PE/logging.include.ab3"
000092EA <logging.include.ab3@11> XINCLUDE "PE/logging.include.ab3"
000092EA <file.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
000092EA <asl.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
0000930E <asl.include.ab3@93> XINCLUDE "PE/logging.include.ab3"
00009336 <asl.include.ab3@94> XINCLUDE "PE/logging.include.ab3"
0000935A <asl.include.ab3@95> XINCLUDE "PE/logging.include.ab3"
00009388 <asl.include.ab3@294> XINCLUDE "PE/logging.include.ab3"
000095A6 <asl.include.ab3@296> XINCLUDE "PE/logging.include.ab3"
000095D4 <asl.include.ab3@298> XINCLUDE "PE/logging.include.ab3"
00009600 <asl.include.ab3@300> XINCLUDE "PE/logging.include.ab3"
0000963C <asl.include.ab3@301> XINCLUDE "PE/logging.include.ab3"
00009668 <asl.include.ab3@302> XINCLUDE "PE/logging.include.ab3"
00009694 <asl.include.ab3@303> XINCLUDE "PE/logging.include.ab3"
000096C0 <asl.include.ab3@304> XINCLUDE "PE/logging.include.ab3"
000096EC <asl.include.ab3@305> XINCLUDE "PE/logging.include.ab3"
00009718 <asl.include.ab3@306> XINCLUDE "PE/logging.include.ab3"
00009744 <asl.include.ab3@307> XINCLUDE "PE/logging.include.ab3"
00009770 <asl.include.ab3@308> XINCLUDE "PE/logging.include.ab3"
0000979C <asl.include.ab3@309> XINCLUDE "PE/logging.include.ab3"
00009826 <asl.include.ab3@311> XINCLUDE "PE/logging.include.ab3"
000098B0 <asl.include.ab3@312> XINCLUDE "PE/logging.include.ab3"
0000994E <asl.include.ab3@313> XINCLUDE "PE/logging.include.ab3"
00009998 <asl.include.ab3@314> XINCLUDE "PE/logging.include.ab3"
000099D8 <asl.include.ab3@315> XINCLUDE "PE/logging.include.ab3"
000099DE <asl.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
00009A28 <asl.include.ab3@319> XINCLUDE "PE/logging.include.ab3"
00009A68 <asl.include.ab3@320> XINCLUDE "PE/logging.include.ab3"
00009A92 <asl.include.ab3@321> XINCLUDE "PE/logging.include.ab3"
00009A98 <asl.include.ab3@322> XINCLUDE "PE/logging.include.ab3"
00009AC2 <asl.include.ab3@323> XINCLUDE "PE/logging.include.ab3"
00009AEC <asl.include.ab3@325> XINCLUDE "PE/logging.include.ab3"
00009B16 <asl.include.ab3@327> XINCLUDE "PE/logging.include.ab3"
00009B20 <asl.include.ab3@328> XINCLUDE "PE/logging.include.ab3"
00009B3E <asl.include.ab3@329> XINCLUDE "PE/logging.include.ab3"
00009B60 <asl.include.ab3@330> XINCLUDE "PE/logging.include.ab3"
00009B8E <asl.include.ab3@331> XINCLUDE "PE/logging.include.ab3"
00009BBC <asl.include.ab3@332> XINCLUDE "PE/logging.include.ab3"
00009BEA <asl.include.ab3@333> XINCLUDE "PE/logging.include.ab3"
00009C30 <asl.include.ab3@336> XINCLUDE "PE/logging.include.ab3"
00009C76 <asl.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
00009CBC <asl.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
00009CF4 <asl.include.ab3@340> XINCLUDE "PE/logging.include.ab3"
00009DF2 <asl.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
00009E10 <asl.include.ab3@343> XINCLUDE "PE/logging.include.ab3"
00009E1A <asl.include.ab3@345> XINCLUDE "PE/logging.include.ab3"
00009E40 <asl.include.ab3@346> XINCLUDE "PE/logging.include.ab3"
00009E52 <asl.include.ab3@348> XINCLUDE "PE/logging.include.ab3"
00009E80 <asl.include.ab3@349> XINCLUDE "PE/logging.include.ab3"
00009EA8 <asl.include.ab3@350> XINCLUDE "PE/logging.include.ab3"
00009EBA <asl.include.ab3@351> XINCLUDE "PE/logging.include.ab3"
00009F10 <asl.include.ab3@352> XINCLUDE "PE/logging.include.ab3"
00009F46 <asl.include.ab3@353> XINCLUDE "PE/logging.include.ab3"
00009F56 <asl.include.ab3@355> XINCLUDE "PE/logging.include.ab3"
00009F5C <asl.include.ab3@356> XINCLUDE "PE/logging.include.ab3"
00009F6E <asl.include.ab3@357> XINCLUDE "PE/logging.include.ab3"
00009F78 <asl.include.ab3@358> XINCLUDE "PE/logging.include.ab3"
00009FB2 <asl.include.ab3@359> XINCLUDE "PE/logging.include.ab3"
00009FB8 <asl.include.ab3@360> XINCLUDE "PE/logging.include.ab3"
0000A010 <asl.include.ab3@361> XINCLUDE "PE/logging.include.ab3"
0000A02E <asl.include.ab3@363> XINCLUDE "PE/logging.include.ab3"
0000A034 <asl.include.ab3@366> XINCLUDE "PE/logging.include.ab3"
0000A044 <asl.include.ab3@369> XINCLUDE "PE/logging.include.ab3"
0000A054 <asl.include.ab3@370> XINCLUDE "PE/logging.include.ab3"
0000A064 <asl.include.ab3@371> XINCLUDE "PE/logging.include.ab3"
0000A074 <asl.include.ab3@372> XINCLUDE "PE/logging.include.ab3"
0000A084 <asl.include.ab3@374> XINCLUDE "PE/logging.include.ab3"
0000A08E <asl.include.ab3@376> XINCLUDE "PE/logging.include.ab3"
0000A0A2 <asl.include.ab3@377> XINCLUDE "PE/logging.include.ab3"
0000A0B8 <asl.include.ab3@393> XINCLUDE "PE/logging.include.ab3"
0000A0E0 <asl.include.ab3@395> XINCLUDE "PE/logging.include.ab3"
0000A0EA <asl.include.ab3@396> XINCLUDE "PE/logging.include.ab3"
0000A0FC <asl.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
0000A136 <asl.include.ab3@398> XINCLUDE "PE/logging.include.ab3"
0000A140 <asl.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
0000A16A <asl.include.ab3@401> XINCLUDE "PE/logging.include.ab3"
0000A182 <asl.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
0000A1D4 <asl.include.ab3@438> XINCLUDE "PE/logging.include.ab3"
0000A202 <asl.include.ab3@440> XINCLUDE "PE/logging.include.ab3"
0000A294 <asl.include.ab3@441> XINCLUDE "PE/logging.include.ab3"
0000A2DA <asl.include.ab3@442> XINCLUDE "PE/logging.include.ab3"
0000A36C <asl.include.ab3@443> XINCLUDE "PE/logging.include.ab3"
0000A386 <asl.include.ab3@444> XINCLUDE "PE/logging.include.ab3"
0000A386 <file.include.ab3@57> XINCLUDE "PE/logging.include.ab3"
0000A39C <file.include.ab3@66> XINCLUDE "PE/logging.include.ab3"
0000A3B2 <file.include.ab3@67> XINCLUDE "PE/logging.include.ab3"
0000A3C8 <file.include.ab3@68> XINCLUDE "PE/logging.include.ab3"
0000A3DE <file.include.ab3@70> XINCLUDE "PE/logging.include.ab3"
0000A3EA <file.include.ab3@72> XINCLUDE "PE/logging.include.ab3"
0000A3F6 <file.include.ab3@73> XINCLUDE "PE/logging.include.ab3"
0000A402 <file.include.ab3@74> XINCLUDE "PE/logging.include.ab3"
0000A40E <file.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
0000A436 <file.include.ab3@77> XINCLUDE "PE/logging.include.ab3"
0000A45E <file.include.ab3@78> XINCLUDE "PE/logging.include.ab3"
0000A486 <file.include.ab3@79> XINCLUDE "PE/logging.include.ab3"
0000A4AA <file.include.ab3@109> XINCLUDE "PE/logging.include.ab3"
0000A4CE <file.include.ab3@110> XINCLUDE "PE/logging.include.ab3"
0000A4E8 <file.include.ab3@156> XINCLUDE "PE/logging.include.ab3"
0000A4F8 <file.include.ab3@157> XINCLUDE "PE/logging.include.ab3"
0000A4FA <file.include.ab3@158> XINCLUDE "PE/logging.include.ab3"
0000A4FC <file.include.ab3@159> XINCLUDE "PE/logging.include.ab3"
0000A4FE <file.include.ab3@160> XINCLUDE "PE/logging.include.ab3"
0000A500 <file.include.ab3@161> XINCLUDE "PE/logging.include.ab3"
0000A502 <file.include.ab3@162> XINCLUDE "PE/logging.include.ab3"
0000A506 <file.include.ab3@163> XINCLUDE "PE/logging.include.ab3"
0000A50A <file.include.ab3@164> XINCLUDE "PE/logging.include.ab3"
0000A50E <file.include.ab3@165> XINCLUDE "PE/logging.include.ab3"
0000A510 <file.include.ab3@166> XINCLUDE "PE/logging.include.ab3"
0000A512 <file.include.ab3@167> XINCLUDE "PE/logging.include.ab3"
0000A514 <file.include.ab3@168> XINCLUDE "PE/logging.include.ab3"
0000A516 <file.include.ab3@169> XINCLUDE "PE/logging.include.ab3"
0000A518 <file.include.ab3@170> XINCLUDE "PE/logging.include.ab3"
0000A51A <file.include.ab3@171> XINCLUDE "PE/logging.include.ab3"
0000A51C <file.include.ab3@172> XINCLUDE "PE/logging.include.ab3"
0000A526 <file.include.ab3@173> XINCLUDE "PE/logging.include.ab3"
0000A52C <file.include.ab3@174> XINCLUDE "PE/logging.include.ab3"
0000A546 <file.include.ab3@215> XINCLUDE "PE/logging.include.ab3"
0000A564 <file.include.ab3@217> XINCLUDE "PE/logging.include.ab3"
0000A56A <file.include.ab3@218> XINCLUDE "PE/logging.include.ab3"
0000A584 <file.include.ab3@237> XINCLUDE "PE/logging.include.ab3"
0000A5A0 <file.include.ab3@239> XINCLUDE "PE/logging.include.ab3"
0000A5C6 <file.include.ab3@240> XINCLUDE "PE/logging.include.ab3"
0000A5E6 <file.include.ab3@241> XINCLUDE "PE/logging.include.ab3"
0000A5F0 <file.include.ab3@242> XINCLUDE "PE/logging.include.ab3"
0000A61C <file.include.ab3@243> XINCLUDE "PE/logging.include.ab3"
0000A63E <file.include.ab3@244> XINCLUDE "PE/logging.include.ab3"
0000A658 <file.include.ab3@245> XINCLUDE "PE/logging.include.ab3"
0000A65E <file.include.ab3@248> XINCLUDE "PE/logging.include.ab3"
0000A698 <file.include.ab3@249> XINCLUDE "PE/logging.include.ab3"
0000A6B6 <file.include.ab3@251> XINCLUDE "PE/logging.include.ab3"
0000A6BC <file.include.ab3@252> XINCLUDE "PE/logging.include.ab3"
0000A6DA <file.include.ab3@271> XINCLUDE "PE/logging.include.ab3"
0000A6E0 <file.include.ab3@273> XINCLUDE "PE/logging.include.ab3"
0000A702 <file.include.ab3@274> XINCLUDE "PE/logging.include.ab3"
0000A722 <file.include.ab3@275> XINCLUDE "PE/logging.include.ab3"
0000A75A <file.include.ab3@276> XINCLUDE "PE/logging.include.ab3"
0000A776 <file.include.ab3@277> XINCLUDE "PE/logging.include.ab3"
0000A77C <file.include.ab3@278> XINCLUDE "PE/logging.include.ab3"
0000A782 <file.include.ab3@279> XINCLUDE "PE/logging.include.ab3"
0000A788 <file.include.ab3@281> XINCLUDE "PE/logging.include.ab3"
0000A78E <file.include.ab3@282> XINCLUDE "PE/logging.include.ab3"
0000A7AA <file.include.ab3@283> XINCLUDE "PE/logging.include.ab3"
0000A7F6 <file.include.ab3@285> XINCLUDE "PE/logging.include.ab3"
0000A7FC <file.include.ab3@286> XINCLUDE "PE/logging.include.ab3"
0000A836 <file.include.ab3@287> XINCLUDE "PE/logging.include.ab3"
0000A842 <file.include.ab3@288> XINCLUDE "PE/logging.include.ab3"
0000A85E <file.include.ab3@289> XINCLUDE "PE/logging.include.ab3"
0000A864 <file.include.ab3@291> XINCLUDE "PE/logging.include.ab3"
0000A89E <file.include.ab3@292> XINCLUDE "PE/logging.include.ab3"
0000A8A8 <file.include.ab3@296> XINCLUDE "PE/logging.include.ab3"
0000A8AE <file.include.ab3@297> XINCLUDE "PE/logging.include.ab3"
0000A8CC <file.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
0000A8FA <file.include.ab3@318> XINCLUDE "PE/logging.include.ab3"
0000A900 <file.include.ab3@319> XINCLUDE "PE/logging.include.ab3"
0000A916 <file.include.ab3@335> XINCLUDE "PE/logging.include.ab3"
0000A91E <file.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
0000A97A <file.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
0000A988 <file.include.ab3@339> XINCLUDE "PE/logging.include.ab3"
0000A98E <file.include.ab3@340> XINCLUDE "PE/logging.include.ab3"
0000A9C0 <file.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
0000A9CA <file.include.ab3@342> XINCLUDE "PE/logging.include.ab3"
0000A9D0 <file.include.ab3@343> XINCLUDE "PE/logging.include.ab3"
0000A9EA <file.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
0000A9FC <file.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
0000AA5A <file.include.ab3@400> XINCLUDE "PE/logging.include.ab3"
0000AA94 <file.include.ab3@401> XINCLUDE "PE/logging.include.ab3"
0000AACE <file.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
0000AAEC <file.include.ab3@403> XINCLUDE "PE/logging.include.ab3"
0000AB0A <file.include.ab3@404> XINCLUDE "PE/logging.include.ab3"
0000AB20 <file.include.ab3@405> XINCLUDE "PE/logging.include.ab3"
0000AB3C <file.include.ab3@406> XINCLUDE "PE/logging.include.ab3"
0000AB56 <file.include.ab3@407> XINCLUDE "PE/logging.include.ab3"
0000ABD4 <file.include.ab3@408> XINCLUDE "PE/logging.include.ab3"
0000ABE6 <file.include.ab3@410> XINCLUDE "PE/logging.include.ab3"
0000ABFC <file.include.ab3@422> XINCLUDE "PE/logging.include.ab3"
0000AC26 <file.include.ab3@424> XINCLUDE "PE/logging.include.ab3"
0000AC30 <file.include.ab3@425> XINCLUDE "PE/logging.include.ab3"
0000AC40 <file.include.ab3@426> XINCLUDE "PE/logging.include.ab3"
0000AC44 <file.include.ab3@427> XINCLUDE "PE/logging.include.ab3"
0000AC72 <file.include.ab3@428> XINCLUDE "PE/logging.include.ab3"
0000AC8C <file.include.ab3@447> XINCLUDE "PE/logging.include.ab3"
0000AC9E <file.include.ab3@449> XINCLUDE "PE/logging.include.ab3"
0000ACBE <file.include.ab3@450> XINCLUDE "PE/logging.include.ab3"
0000ACD4 <file.include.ab3@451> XINCLUDE "PE/logging.include.ab3"
0000AD0C <file.include.ab3@452> XINCLUDE "PE/logging.include.ab3"
0000AD36 <file.include.ab3@453> XINCLUDE "PE/logging.include.ab3"
0000AD60 <file.include.ab3@456> XINCLUDE "PE/logging.include.ab3"
0000AD78 <file.include.ab3@457> XINCLUDE "PE/logging.include.ab3"
0000AD8E <file.include.ab3@525> XINCLUDE "PE/logging.include.ab3"
0000ADD6 <file.include.ab3@527> XINCLUDE "PE/logging.include.ab3"
0000ADF6 <file.include.ab3@528> XINCLUDE "PE/logging.include.ab3"
0000ADFE <file.include.ab3@529> XINCLUDE "PE/logging.include.ab3"
0000AE3C <file.include.ab3@568> XINCLUDE "PE/logging.include.ab3"
0000AE48 <file.include.ab3@570> XINCLUDE "PE/logging.include.ab3"
0000AE52 <file.include.ab3@571> XINCLUDE "PE/logging.include.ab3"
0000AE64 <file.include.ab3@572> XINCLUDE "PE/logging.include.ab3"
0000AE6A <file.include.ab3@573> XINCLUDE "PE/logging.include.ab3"
0000AE78 <file.include.ab3@574> XINCLUDE "PE/logging.include.ab3"
0000AEA0 <file.include.ab3@575> XINCLUDE "PE/logging.include.ab3"
0000AEB4 <file.include.ab3@576> XINCLUDE "PE/logging.include.ab3"
0000AEDC <file.include.ab3@577> XINCLUDE "PE/logging.include.ab3"
0000AEF0 <file.include.ab3@578> XINCLUDE "PE/logging.include.ab3"
0000AF18 <file.include.ab3@579> XINCLUDE "PE/logging.include.ab3"
0000AF2C <file.include.ab3@580> XINCLUDE "PE/logging.include.ab3"
0000AF54 <file.include.ab3@581> XINCLUDE "PE/logging.include.ab3"
0000AF56 <file.include.ab3@582> XINCLUDE "PE/logging.include.ab3"
0000AF7A <file.include.ab3@584> XINCLUDE "PE/logging.include.ab3"
0000AFB2 <file.include.ab3@586> XINCLUDE "PE/logging.include.ab3"
0000B03C <file.include.ab3@587> XINCLUDE "PE/logging.include.ab3"
0000B064 <file.include.ab3@588> XINCLUDE "PE/logging.include.ab3"
0000B094 <file.include.ab3@589> XINCLUDE "PE/logging.include.ab3"
0000B0CC <file.include.ab3@593> XINCLUDE "PE/logging.include.ab3"
0000B124 <file.include.ab3@594> XINCLUDE "PE/logging.include.ab3"
0000B17C <file.include.ab3@595> XINCLUDE "PE/logging.include.ab3"
0000B1FC <file.include.ab3@597> XINCLUDE "PE/logging.include.ab3"
0000B230 <file.include.ab3@598> XINCLUDE "PE/logging.include.ab3"
0000B264 <file.include.ab3@599> XINCLUDE "PE/logging.include.ab3"
0000B26A <file.include.ab3@600> XINCLUDE "PE/logging.include.ab3"
0000B278 <file.include.ab3@601> XINCLUDE "PE/logging.include.ab3"
0000B2AC <file.include.ab3@602> XINCLUDE "PE/logging.include.ab3"
0000B2D4 <file.include.ab3@603> XINCLUDE "PE/logging.include.ab3"
0000B38C <file.include.ab3@604> XINCLUDE "PE/logging.include.ab3"
0000B40C <file.include.ab3@605> XINCLUDE "PE/logging.include.ab3"
0000B440 <file.include.ab3@606> XINCLUDE "PE/logging.include.ab3"
0000B460 <file.include.ab3@608> XINCLUDE "PE/logging.include.ab3"
0000B466 <file.include.ab3@609> XINCLUDE "PE/logging.include.ab3"
0000B46C <file.include.ab3@610> XINCLUDE "PE/logging.include.ab3"
0000B53C <file.include.ab3@611> XINCLUDE "PE/logging.include.ab3"
0000B550 <file.include.ab3@614> XINCLUDE "PE/logging.include.ab3"
0000B608 <file.include.ab3@615> XINCLUDE "PE/logging.include.ab3"
0000B688 <file.include.ab3@616> XINCLUDE "PE/logging.include.ab3"
0000B778 <file.include.ab3@617> XINCLUDE "PE/logging.include.ab3"
0000B782 <file.include.ab3@618> XINCLUDE "PE/logging.include.ab3"
0000B7B6 <file.include.ab3@619> XINCLUDE "PE/logging.include.ab3"
0000B7D6 <file.include.ab3@620> XINCLUDE "PE/logging.include.ab3"
0000B7DC <file.include.ab3@621> XINCLUDE "PE/logging.include.ab3"
0000B7E2 <file.include.ab3@622> XINCLUDE "PE/logging.include.ab3"
0000B8B2 <file.include.ab3@623> XINCLUDE "PE/logging.include.ab3"
0000B8C6 <file.include.ab3@627> XINCLUDE "PE/logging.include.ab3"
0000B8FA <file.include.ab3@628> XINCLUDE "PE/logging.include.ab3"
0000B922 <file.include.ab3@629> XINCLUDE "PE/logging.include.ab3"
0000B9DA <file.include.ab3@630> XINCLUDE "PE/logging.include.ab3"
0000BA5A <file.include.ab3@631> XINCLUDE "PE/logging.include.ab3"
0000BA8E <file.include.ab3@632> XINCLUDE "PE/logging.include.ab3"
0000BAAE <file.include.ab3@635> XINCLUDE "PE/logging.include.ab3"
0000BAB4 <file.include.ab3@636> XINCLUDE "PE/logging.include.ab3"
0000BABA <file.include.ab3@637> XINCLUDE "PE/logging.include.ab3"
0000BB8A <file.include.ab3@638> XINCLUDE "PE/logging.include.ab3"
0000BB9E <file.include.ab3@641> XINCLUDE "PE/logging.include.ab3"
0000BC56 <file.include.ab3@642> XINCLUDE "PE/logging.include.ab3"
0000BCD6 <file.include.ab3@643> XINCLUDE "PE/logging.include.ab3"
0000BD0A <file.include.ab3@644> XINCLUDE "PE/logging.include.ab3"
0000BD2A <file.include.ab3@645> XINCLUDE "PE/logging.include.ab3"
0000BD30 <file.include.ab3@646> XINCLUDE "PE/logging.include.ab3"
0000BD36 <file.include.ab3@647> XINCLUDE "PE/logging.include.ab3"
0000BE06 <file.include.ab3@648> XINCLUDE "PE/logging.include.ab3"
0000BE0C <file.include.ab3@651> XINCLUDE "PE/logging.include.ab3"
0000BE46 <file.include.ab3@652> XINCLUDE "PE/logging.include.ab3"
0000BE48 <file.include.ab3@653> XINCLUDE "PE/logging.include.ab3"
0000BE4E <file.include.ab3@655> XINCLUDE "PE/logging.include.ab3"
0000BEE6 <file.include.ab3@656> XINCLUDE "PE/logging.include.ab3"
0000BEF8 <file.include.ab3@659> XINCLUDE "PE/logging.include.ab3"
0000BF0E <file.include.ab3@660> XINCLUDE "PE/logging.include.ab3"
0000BF78 <file.include.ab3@661> XINCLUDE "PE/logging.include.ab3"
0000BFE2 <file.include.ab3@662> XINCLUDE "PE/logging.include.ab3"
0000BFFC <file.include.ab3@663> XINCLUDE "PE/logging.include.ab3"
0000C018 <file.include.ab3@664> XINCLUDE "PE/logging.include.ab3"
0000C036 <file.include.ab3@665> XINCLUDE "PE/logging.include.ab3"
0000C050 <file.include.ab3@666> XINCLUDE "PE/logging.include.ab3"
0000C05A <file.include.ab3@668> XINCLUDE "PE/logging.include.ab3"
0000C076 <file.include.ab3@669> XINCLUDE "PE/logging.include.ab3"
0000C098 <file.include.ab3@805> XINCLUDE "PE/logging.include.ab3"
0000C09E <file.include.ab3@807> XINCLUDE "PE/logging.include.ab3"
0000C0C4 <file.include.ab3@808> XINCLUDE "PE/logging.include.ab3"
0000C0E0 <file.include.ab3@809> XINCLUDE "PE/logging.include.ab3"
0000C0F2 <file.include.ab3@810> XINCLUDE "PE/logging.include.ab3"
0000C150 <file.include.ab3@811> XINCLUDE "PE/logging.include.ab3"
0000C188 <file.include.ab3@812> XINCLUDE "PE/logging.include.ab3"
0000C18E <file.include.ab3@813> XINCLUDE "PE/logging.include.ab3"
0000C1D6 <file.include.ab3@814> XINCLUDE "PE/logging.include.ab3"
0000C1F0 <file.include.ab3@815> XINCLUDE "PE/logging.include.ab3"
0000C1FE <file.include.ab3@818> XINCLUDE "PE/logging.include.ab3"
0000C204 <file.include.ab3@819> XINCLUDE "PE/logging.include.ab3"
0000C20A <file.include.ab3@820> XINCLUDE "PE/logging.include.ab3"
0000C21C <file.include.ab3@821> XINCLUDE "PE/logging.include.ab3"
0000C308 <file.include.ab3@822> XINCLUDE "PE/logging.include.ab3"
0000C30E <file.include.ab3@823> XINCLUDE "PE/logging.include.ab3"
0000C354 <file.include.ab3@824> XINCLUDE "PE/logging.include.ab3"
0000C360 <file.include.ab3@825> XINCLUDE "PE/logging.include.ab3"
0000C3C6 <file.include.ab3@826> XINCLUDE "PE/logging.include.ab3"
0000C40C <file.include.ab3@827> XINCLUDE "PE/logging.include.ab3"
0000C454 <file.include.ab3@830> XINCLUDE "PE/logging.include.ab3"
0000C4BC <file.include.ab3@831> XINCLUDE "PE/logging.include.ab3"
0000C4C2 <file.include.ab3@832> XINCLUDE "PE/logging.include.ab3"
0000C4FC <file.include.ab3@833> XINCLUDE "PE/logging.include.ab3"
0000C502 <file.include.ab3@835> XINCLUDE "PE/logging.include.ab3"
0000C564 <file.include.ab3@836> XINCLUDE "PE/logging.include.ab3"
0000C56E <file.include.ab3@838> XINCLUDE "PE/logging.include.ab3"
0000C582 <file.include.ab3@839> XINCLUDE "PE/logging.include.ab3"
0000C59C <file.include.ab3@841> XINCLUDE "PE/logging.include.ab3"
0000C5A2 <file.include.ab3@843> XINCLUDE "PE/logging.include.ab3"
0000C5C8 <file.include.ab3@844> XINCLUDE "PE/logging.include.ab3"
0000C5E4 <file.include.ab3@845> XINCLUDE "PE/logging.include.ab3"
0000C642 <file.include.ab3@846> XINCLUDE "PE/logging.include.ab3"
0000C646 <file.include.ab3@849> XINCLUDE "PE/logging.include.ab3"
0000C668 <file.include.ab3@867> XINCLUDE "PE/logging.include.ab3"
0000C66E <file.include.ab3@869> XINCLUDE "PE/logging.include.ab3"
0000C68A <file.include.ab3@870> XINCLUDE "PE/logging.include.ab3"
0000C6AA <file.include.ab3@871> XINCLUDE "PE/logging.include.ab3"
0000C6E8 <file.include.ab3@872> XINCLUDE "PE/logging.include.ab3"
0000C736 <file.include.ab3@873> XINCLUDE "PE/logging.include.ab3"
0000C76C <file.include.ab3@874> XINCLUDE "PE/logging.include.ab3"
0000C772 <file.include.ab3@875> XINCLUDE "PE/logging.include.ab3"
0000C778 <file.include.ab3@876> XINCLUDE "PE/logging.include.ab3"
0000C7A8 <file.include.ab3@877> XINCLUDE "PE/logging.include.ab3"
0000C7AE <file.include.ab3@878> XINCLUDE "PE/logging.include.ab3"
0000C7B4 <file.include.ab3@880> XINCLUDE "PE/logging.include.ab3"
0000C7C6 <file.include.ab3@881> XINCLUDE "PE/logging.include.ab3"
0000C824 <file.include.ab3@882> XINCLUDE "PE/logging.include.ab3"
0000C85C <file.include.ab3@883> XINCLUDE "PE/logging.include.ab3"
0000C862 <file.include.ab3@884> XINCLUDE "PE/logging.include.ab3"
0000C8AA <file.include.ab3@885> XINCLUDE "PE/logging.include.ab3"
0000C8C4 <file.include.ab3@886> XINCLUDE "PE/logging.include.ab3"
0000C8D2 <file.include.ab3@888> XINCLUDE "PE/logging.include.ab3"
0000C8D8 <file.include.ab3@889> XINCLUDE "PE/logging.include.ab3"
0000C8DE <file.include.ab3@890> XINCLUDE "PE/logging.include.ab3"
0000C8F0 <file.include.ab3@891> XINCLUDE "PE/logging.include.ab3"
0000C8F6 <file.include.ab3@892> XINCLUDE "PE/logging.include.ab3"
0000C8FC <file.include.ab3@893> XINCLUDE "PE/logging.include.ab3"
0000C95A <file.include.ab3@894> XINCLUDE "PE/logging.include.ab3"
0000C9A2 <file.include.ab3@897> XINCLUDE "PE/logging.include.ab3"
0000C9AC <file.include.ab3@900> XINCLUDE "PE/logging.include.ab3"
0000C9B2 <file.include.ab3@901> XINCLUDE "PE/logging.include.ab3"
0000C9CC <file.include.ab3@955> XINCLUDE "PE/logging.include.ab3"
0000C9D2 <file.include.ab3@957> XINCLUDE "PE/logging.include.ab3"
0000CA1A <file.include.ab3@958> XINCLUDE "PE/logging.include.ab3"
0000CA58 <file.include.ab3@959> XINCLUDE "PE/logging.include.ab3"
0000CA62 <file.include.ab3@960> XINCLUDE "PE/logging.include.ab3"
0000CA68 <file.include.ab3@961> XINCLUDE "PE/logging.include.ab3"
0000CA8E <file.include.ab3@1108> XINCLUDE "PE/logging.include.ab3"
0000CA94 <file.include.ab3@1110> XINCLUDE "PE/logging.include.ab3"
0000CABA <file.include.ab3@1111> XINCLUDE "PE/logging.include.ab3"
0000CB1A <file.include.ab3@1112> XINCLUDE "PE/logging.include.ab3"
0000CB34 <file.include.ab3@1113> XINCLUDE "PE/logging.include.ab3"
0000CB3E <file.include.ab3@1114> XINCLUDE "PE/logging.include.ab3"
0000CB58 <file.include.ab3@1115> XINCLUDE "PE/logging.include.ab3"
0000CB62 <file.include.ab3@1116> XINCLUDE "PE/logging.include.ab3"
0000CB7A <file.include.ab3@1117> XINCLUDE "PE/logging.include.ab3"
0000CBAA <file.include.ab3@1118> XINCLUDE "PE/logging.include.ab3"
0000CBC6 <file.include.ab3@1119> XINCLUDE "PE/logging.include.ab3"
0000CBD4 <file.include.ab3@1120> XINCLUDE "PE/logging.include.ab3"
0000CBDA <file.include.ab3@1123> XINCLUDE "PE/logging.include.ab3"
0000CC14 <file.include.ab3@1124> XINCLUDE "PE/logging.include.ab3"
0000CC1E <file.include.ab3@1126> XINCLUDE "PE/logging.include.ab3"
0000CC24 <file.include.ab3@1127> XINCLUDE "PE/logging.include.ab3"
0000CC42 <file.include.ab3@1148> XINCLUDE "PE/logging.include.ab3"
0000CC48 <file.include.ab3@1150> XINCLUDE "PE/logging.include.ab3"
0000CC5A <file.include.ab3@1151> XINCLUDE "PE/logging.include.ab3"
0000CC68 <file.include.ab3@1152> XINCLUDE "PE/logging.include.ab3"
0000CC86 <file.include.ab3@1153> XINCLUDE "PE/logging.include.ab3"
0000CCBC <file.include.ab3@1154> XINCLUDE "PE/logging.include.ab3"
0000CCCE <file.include.ab3@1155> XINCLUDE "PE/logging.include.ab3"
0000CD18 <file.include.ab3@1156> XINCLUDE "PE/logging.include.ab3"
0000CE02 <file.include.ab3@1157> XINCLUDE "PE/logging.include.ab3"
0000CE20 <file.include.ab3@1158> XINCLUDE "PE/logging.include.ab3"
0000CE46 <file.include.ab3@1160> XINCLUDE "PE/logging.include.ab3"
0000CE62 <file.include.ab3@1161> XINCLUDE "PE/logging.include.ab3"
0000CE8E <file.include.ab3@1162> XINCLUDE "PE/logging.include.ab3"
0000CE98 <file.include.ab3@1163> XINCLUDE "PE/logging.include.ab3"
0000CEC6 <file.include.ab3@1164> XINCLUDE "PE/logging.include.ab3"
0000CEE0 <file.include.ab3@1165> XINCLUDE "PE/logging.include.ab3"
0000CEFC <file.include.ab3@1166> XINCLUDE "PE/logging.include.ab3"
0000CF02 <file.include.ab3@1167> XINCLUDE "PE/logging.include.ab3"
0000CF3C <file.include.ab3@1168> XINCLUDE "PE/logging.include.ab3"
0000CF42 <file.include.ab3@1170> XINCLUDE "PE/logging.include.ab3"
0000CF48 <file.include.ab3@1171> XINCLUDE "PE/logging.include.ab3"
0000CF4E <file.include.ab3@1173> XINCLUDE "PE/logging.include.ab3"
0000CFEE <file.include.ab3@1174> XINCLUDE "PE/logging.include.ab3"
0000CFF4 <file.include.ab3@1176> XINCLUDE "PE/logging.include.ab3"
0000D096 <file.include.ab3@1177> XINCLUDE "PE/logging.include.ab3"
0000D09C <file.include.ab3@1179> XINCLUDE "PE/logging.include.ab3"
0000D0D6 <file.include.ab3@1180> XINCLUDE "PE/logging.include.ab3"
0000D0E0 <file.include.ab3@1182> XINCLUDE "PE/logging.include.ab3"
0000D0E6 <file.include.ab3@1183> XINCLUDE "PE/logging.include.ab3"
0000D100 <file.include.ab3@1245> XINCLUDE "PE/logging.include.ab3"
0000D11E <file.include.ab3@1247> XINCLUDE "PE/logging.include.ab3"
0000D124 <file.include.ab3@1248> XINCLUDE "PE/logging.include.ab3"
0000D13E <file.include.ab3@1398> XINCLUDE "PE/logging.include.ab3"
0000D15E <file.include.ab3@1400> XINCLUDE "PE/logging.include.ab3"
0000D212 <file.include.ab3@1401> XINCLUDE "PE/logging.include.ab3"
0000D218 <file.include.ab3@1402> XINCLUDE "PE/logging.include.ab3"
0000D21E <file.include.ab3@1403> XINCLUDE "PE/logging.include.ab3"
0000D248 <file.include.ab3@1404> XINCLUDE "PE/logging.include.ab3"
0000D254 <file.include.ab3@1406> XINCLUDE "PE/logging.include.ab3"
0000D25A <file.include.ab3@1407> XINCLUDE "PE/logging.include.ab3"
0000D274 <file.include.ab3@1593> XINCLUDE "PE/logging.include.ab3"
0000D27C <file.include.ab3@1594> XINCLUDE "PE/logging.include.ab3"
0000D284 <file.include.ab3@1595> XINCLUDE "PE/logging.include.ab3"
0000D29A <file.include.ab3@1596> XINCLUDE "PE/logging.include.ab3"
0000D2B2 <file.include.ab3@1597> XINCLUDE "PE/logging.include.ab3"
0000D2C4 <file.include.ab3@1598> XINCLUDE "PE/logging.include.ab3"
0000D2D0 <file.include.ab3@1599> XINCLUDE "PE/logging.include.ab3"
0000D2D6 <file.include.ab3@1600> XINCLUDE "PE/logging.include.ab3"
0000D2DE <file.include.ab3@1601> XINCLUDE "PE/logging.include.ab3"
0000D316 <file.include.ab3@1602> XINCLUDE "PE/logging.include.ab3"
0000D328 <file.include.ab3@1603> XINCLUDE "PE/logging.include.ab3"
0000D34C <file.include.ab3@1604> XINCLUDE "PE/logging.include.ab3"
0000D35E <file.include.ab3@1605> XINCLUDE "PE/logging.include.ab3"
0000D36A <file.include.ab3@1606> XINCLUDE "PE/logging.include.ab3"
0000D370 <file.include.ab3@1607> XINCLUDE "PE/logging.include.ab3"
0000D380 <file.include.ab3@1608> XINCLUDE "PE/logging.include.ab3"
0000D39E <file.include.ab3@1613> XINCLUDE "PE/logging.include.ab3"
0000D3B0 <file.include.ab3@1616> XINCLUDE "PE/logging.include.ab3"
0000D3FC <file.include.ab3@1617> XINCLUDE "PE/logging.include.ab3"
0000D402 <file.include.ab3@1619> XINCLUDE "PE/logging.include.ab3"
0000D42C <file.include.ab3@1621> XINCLUDE "PE/logging.include.ab3"
0000D444 <file.include.ab3@1622> XINCLUDE "PE/logging.include.ab3"
0000D472 <file.include.ab3@1706> XINCLUDE "PE/logging.include.ab3"
0000D486 <file.include.ab3@1707> XINCLUDE "PE/logging.include.ab3"
0000D49C <file.include.ab3@1708> XINCLUDE "PE/logging.include.ab3"
0000D4BC <file.include.ab3@1709> XINCLUDE "PE/logging.include.ab3"
0000D4D2 <file.include.ab3@1710> XINCLUDE "PE/logging.include.ab3"
0000D4DC <file.include.ab3@1711> XINCLUDE "PE/logging.include.ab3"
0000D4F6 <file.include.ab3@1712> XINCLUDE "PE/logging.include.ab3"
0000D518 <file.include.ab3@1787> XINCLUDE "PE/logging.include.ab3"
0000D530 <file.include.ab3@1789> XINCLUDE "PE/logging.include.ab3"
0000D552 <file.include.ab3@1790> XINCLUDE "PE/logging.include.ab3"
0000D558 <file.include.ab3@1791> XINCLUDE "PE/logging.include.ab3"
0000D58A <file.include.ab3@1811> XINCLUDE "PE/logging.include.ab3"
0000D59E <file.include.ab3@1813> XINCLUDE "PE/logging.include.ab3"
0000D5B6 <file.include.ab3@1814> XINCLUDE "PE/logging.include.ab3"
0000D5CE <file.include.ab3@1815> XINCLUDE "PE/logging.include.ab3"
0000D5EE <file.include.ab3@1816> XINCLUDE "PE/logging.include.ab3"
0000D61E <file.include.ab3@1817> XINCLUDE "PE/logging.include.ab3"
0000D64E <file.include.ab3@1818> XINCLUDE "PE/logging.include.ab3"
0000D660 <file.include.ab3@1819> XINCLUDE "PE/logging.include.ab3"
0000D668 <file.include.ab3@1820> XINCLUDE "PE/logging.include.ab3"
0000D692 <file.include.ab3@1821> XINCLUDE "PE/logging.include.ab3"
0000D69C <file.include.ab3@1823> XINCLUDE "PE/logging.include.ab3"
0000D6B6 <file.include.ab3@1824> XINCLUDE "PE/logging.include.ab3"
0000D6D0 <file.include.ab3@1841> XINCLUDE "PE/logging.include.ab3"
0000D6EE <file.include.ab3@1843> XINCLUDE "PE/logging.include.ab3"
0000D70E <file.include.ab3@1844> XINCLUDE "PE/logging.include.ab3"
0000D758 <file.include.ab3@1845> XINCLUDE "PE/logging.include.ab3"
0000D772 <file.include.ab3@1846> XINCLUDE "PE/logging.include.ab3"
0000D784 <file.include.ab3@1847> XINCLUDE "PE/logging.include.ab3"
0000D7BA <file.include.ab3@1848> XINCLUDE "PE/logging.include.ab3"
0000D7CC <file.include.ab3@1849> XINCLUDE "PE/logging.include.ab3"
0000D7D4 <file.include.ab3@1850> XINCLUDE "PE/logging.include.ab3"
0000D7FC <file.include.ab3@1851> XINCLUDE "PE/logging.include.ab3"
0000D802 <file.include.ab3@1853> XINCLUDE "PE/logging.include.ab3"
0000D82A <file.include.ab3@1854> XINCLUDE "PE/logging.include.ab3"
0000D83A <file.include.ab3@1856> XINCLUDE "PE/logging.include.ab3"
0000D84E <file.include.ab3@1857> XINCLUDE "PE/logging.include.ab3"
0000D864 <file.include.ab3@1870> XINCLUDE "PE/logging.include.ab3"
0000D874 <file.include.ab3@1872> XINCLUDE "PE/logging.include.ab3"
0000D878 <file.include.ab3@1873> XINCLUDE "PE/logging.include.ab3"
0000D88E <file.include.ab3@1894> XINCLUDE "PE/logging.include.ab3"
0000D8B8 <file.include.ab3@1896> XINCLUDE "PE/logging.include.ab3"
0000D8C0 <file.include.ab3@1897> XINCLUDE "PE/logging.include.ab3"
0000D8C0 <logging.include.ab3@13> XINCLUDE "PE/logging.include.ab3"
0000D95E <logging.include.ab3@35> XINCLUDE "PE/logging.include.ab3"
0000D964 <logging.include.ab3@36> XINCLUDE "PE/logging.include.ab3"
0000D96A <logging.include.ab3@37> XINCLUDE "PE/logging.include.ab3"
0000D970 <logging.include.ab3@38> XINCLUDE "PE/logging.include.ab3"
0000D9AA <logging.include.ab3@129> XINCLUDE "PE/logging.include.ab3"
0000D9DC <logging.include.ab3@131> XINCLUDE "PE/logging.include.ab3"
0000D9EA <logging.include.ab3@132> XINCLUDE "PE/logging.include.ab3"
0000DA1A <logging.include.ab3@133> XINCLUDE "PE/logging.include.ab3"
0000DD8A <logging.include.ab3@134> XINCLUDE "PE/logging.include.ab3"
0000DD98 <logging.include.ab3@135> XINCLUDE "PE/logging.include.ab3"
0000DD9E <logging.include.ab3@136> XINCLUDE "PE/logging.include.ab3"
0000E030 <logging.include.ab3@137> XINCLUDE "PE/logging.include.ab3"
0000E04A <logging.include.ab3@139> XINCLUDE "PE/logging.include.ab3"
0000E084 <logging.include.ab3@142> XINCLUDE "PE/logging.include.ab3"
0000E0D6 <logging.include.ab3@143> XINCLUDE "PE/logging.include.ab3"
0000E0E4 <logging.include.ab3@144> XINCLUDE "PE/logging.include.ab3"
0000E13A <logging.include.ab3@145> XINCLUDE "PE/logging.include.ab3"
0000E140 <logging.include.ab3@146> XINCLUDE "PE/logging.include.ab3"
0000E1BA <logging.include.ab3@147> XINCLUDE "PE/logging.include.ab3"
0000E22E <logging.include.ab3@148> XINCLUDE "PE/logging.include.ab3"
0000E248 <logging.include.ab3@150> XINCLUDE "PE/logging.include.ab3"
0000E248 <AmiBlitz3.ab3@89> XINCLUDE "PE/logging.include.ab3"
0000E248 <translation.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E248 <phrasebook.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E248 <prefixtree.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E248 <dynamicarray.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E270 <dynamicarray.include.ab3@42> XINCLUDE "translation.include.ab3"
0000E28A <dynamicarray.include.ab3@55> XINCLUDE "translation.include.ab3"
0000E294 <dynamicarray.include.ab3@56> XINCLUDE "translation.include.ab3"
0000E2A6 <dynamicarray.include.ab3@57> XINCLUDE "translation.include.ab3"
0000E2CA <dynamicarray.include.ab3@58> XINCLUDE "translation.include.ab3"
0000E2D8 <dynamicarray.include.ab3@60> XINCLUDE "translation.include.ab3"
0000E2E4 <dynamicarray.include.ab3@61> XINCLUDE "translation.include.ab3"
0000E2E8 <dynamicarray.include.ab3@63> XINCLUDE "translation.include.ab3"
0000E306 <dynamicarray.include.ab3@99> XINCLUDE "translation.include.ab3"
0000E320 <dynamicarray.include.ab3@101> XINCLUDE "translation.include.ab3"
0000E340 <dynamicarray.include.ab3@102> XINCLUDE "translation.include.ab3"
0000E34A <dynamicarray.include.ab3@103> XINCLUDE "translation.include.ab3"
0000E358 <dynamicarray.include.ab3@104> XINCLUDE "translation.include.ab3"
0000E364 <dynamicarray.include.ab3@105> XINCLUDE "translation.include.ab3"
0000E372 <dynamicarray.include.ab3@106> XINCLUDE "translation.include.ab3"
0000E37E <dynamicarray.include.ab3@107> XINCLUDE "translation.include.ab3"
0000E38A <dynamicarray.include.ab3@108> XINCLUDE "translation.include.ab3"
0000E39C <dynamicarray.include.ab3@109> XINCLUDE "translation.include.ab3"
0000E3AC <dynamicarray.include.ab3@110> XINCLUDE "translation.include.ab3"
0000E3B6 <dynamicarray.include.ab3@113> XINCLUDE "translation.include.ab3"
0000E3BC <dynamicarray.include.ab3@114> XINCLUDE "translation.include.ab3"
0000E3D6 <dynamicarray.include.ab3@425> XINCLUDE "translation.include.ab3"
0000E3E0 <dynamicarray.include.ab3@427> XINCLUDE "translation.include.ab3"
0000E3EA <dynamicarray.include.ab3@428> XINCLUDE "translation.include.ab3"
0000E3FA <dynamicarray.include.ab3@429> XINCLUDE "translation.include.ab3"
0000E404 <dynamicarray.include.ab3@430> XINCLUDE "translation.include.ab3"
0000E416 <dynamicarray.include.ab3@431> XINCLUDE "translation.include.ab3"
0000E42C <dynamicarray.include.ab3@432> XINCLUDE "translation.include.ab3"
0000E436 <dynamicarray.include.ab3@433> XINCLUDE "translation.include.ab3"
0000E43C <dynamicarray.include.ab3@435> XINCLUDE "translation.include.ab3"
0000E440 <dynamicarray.include.ab3@437> XINCLUDE "translation.include.ab3"
0000E456 <dynamicarray.include.ab3@531> XINCLUDE "translation.include.ab3"
0000E45C <dynamicarray.include.ab3@533> XINCLUDE "translation.include.ab3"
0000E466 <dynamicarray.include.ab3@535> XINCLUDE "translation.include.ab3"
0000E49C <dynamicarray.include.ab3@536> XINCLUDE "translation.include.ab3"
0000E4A6 <dynamicarray.include.ab3@537> XINCLUDE "translation.include.ab3"
0000E4AA <dynamicarray.include.ab3@538> XINCLUDE "translation.include.ab3"
0000E4D8 <dynamicarray.include.ab3@539> XINCLUDE "translation.include.ab3"
0000E4D8 <prefixtree.include.ab3@132> XINCLUDE "translation.include.ab3"
0000E4F2 <prefixtree.include.ab3@197> XINCLUDE "translation.include.ab3"
0000E4FC <prefixtree.include.ab3@199> XINCLUDE "translation.include.ab3"
0000E524 <prefixtree.include.ab3@200> XINCLUDE "translation.include.ab3"
0000E546 <prefixtree.include.ab3@201> XINCLUDE "translation.include.ab3"
0000E562 <prefixtree.include.ab3@202> XINCLUDE "translation.include.ab3"
0000E572 <prefixtree.include.ab3@203> XINCLUDE "translation.include.ab3"
0000E576 <prefixtree.include.ab3@206> XINCLUDE "translation.include.ab3"
0000E590 <prefixtree.include.ab3@259> XINCLUDE "translation.include.ab3"
0000E5B0 <prefixtree.include.ab3@260> XINCLUDE "translation.include.ab3"
0000E5BA <prefixtree.include.ab3@261> XINCLUDE "translation.include.ab3"
0000E5D4 <prefixtree.include.ab3@262> XINCLUDE "translation.include.ab3"
0000E5E2 <prefixtree.include.ab3@263> XINCLUDE "translation.include.ab3"
0000E5F0 <prefixtree.include.ab3@264> XINCLUDE "translation.include.ab3"
0000E5FE <prefixtree.include.ab3@265> XINCLUDE "translation.include.ab3"
0000E60C <prefixtree.include.ab3@266> XINCLUDE "translation.include.ab3"
0000E618 <prefixtree.include.ab3@267> XINCLUDE "translation.include.ab3"
0000E626 <prefixtree.include.ab3@268> XINCLUDE "translation.include.ab3"
0000E634 <prefixtree.include.ab3@269> XINCLUDE "translation.include.ab3"
0000E642 <prefixtree.include.ab3@270> XINCLUDE "translation.include.ab3"
0000E650 <prefixtree.include.ab3@271> XINCLUDE "translation.include.ab3"
0000E66A <prefixtree.include.ab3@272> XINCLUDE "translation.include.ab3"
0000E678 <prefixtree.include.ab3@273> XINCLUDE "translation.include.ab3"
0000E688 <prefixtree.include.ab3@274> XINCLUDE "translation.include.ab3"
0000E698 <prefixtree.include.ab3@275> XINCLUDE "translation.include.ab3"
0000E6A8 <prefixtree.include.ab3@276> XINCLUDE "translation.include.ab3"
0000E6B6 <prefixtree.include.ab3@277> XINCLUDE "translation.include.ab3"
0000E6C0 <prefixtree.include.ab3@279> XINCLUDE "translation.include.ab3"
0000E6C6 <prefixtree.include.ab3@280> XINCLUDE "translation.include.ab3"
0000E6E4 <prefixtree.include.ab3@298> XINCLUDE "translation.include.ab3"
0000E6EA <prefixtree.include.ab3@299> XINCLUDE "translation.include.ab3"
0000E6F4 <prefixtree.include.ab3@300> XINCLUDE "translation.include.ab3"
0000E714 <prefixtree.include.ab3@301> XINCLUDE "translation.include.ab3"
0000E742 <prefixtree.include.ab3@302> XINCLUDE "translation.include.ab3"
0000E760 <prefixtree.include.ab3@303> XINCLUDE "translation.include.ab3"
0000E76A <prefixtree.include.ab3@304> XINCLUDE "translation.include.ab3"
0000E77C <prefixtree.include.ab3@305> XINCLUDE "translation.include.ab3"
0000E7A8 <prefixtree.include.ab3@306> XINCLUDE "translation.include.ab3"
0000E7BE <prefixtree.include.ab3@307> XINCLUDE "translation.include.ab3"
0000E7CA <prefixtree.include.ab3@309> XINCLUDE "translation.include.ab3"
0000E7D6 <prefixtree.include.ab3@310> XINCLUDE "translation.include.ab3"
0000E7DC <prefixtree.include.ab3@311> XINCLUDE "translation.include.ab3"
0000E7E2 <prefixtree.include.ab3@312> XINCLUDE "translation.include.ab3"
0000E7E8 <prefixtree.include.ab3@313> XINCLUDE "translation.include.ab3"
0000E820 <prefixtree.include.ab3@314> XINCLUDE "translation.include.ab3"
0000E826 <prefixtree.include.ab3@316> XINCLUDE "translation.include.ab3"
0000E82C <prefixtree.include.ab3@317> XINCLUDE "translation.include.ab3"
0000E836 <prefixtree.include.ab3@320> XINCLUDE "translation.include.ab3"
0000E83C <prefixtree.include.ab3@321> XINCLUDE "translation.include.ab3"
0000E86E <prefixtree.include.ab3@341> XINCLUDE "translation.include.ab3"
0000E888 <prefixtree.include.ab3@342> XINCLUDE "translation.include.ab3"
0000E8A0 <prefixtree.include.ab3@343> XINCLUDE "translation.include.ab3"
0000E8B4 <prefixtree.include.ab3@344> XINCLUDE "translation.include.ab3"
0000E904 <prefixtree.include.ab3@345> XINCLUDE "translation.include.ab3"
0000E924 <prefixtree.include.ab3@347> XINCLUDE "translation.include.ab3"
0000E938 <prefixtree.include.ab3@348> XINCLUDE "translation.include.ab3"
0000E946 <prefixtree.include.ab3@349> XINCLUDE "translation.include.ab3"
0000E952 <prefixtree.include.ab3@350> XINCLUDE "translation.include.ab3"
0000E95A <prefixtree.include.ab3@351> XINCLUDE "translation.include.ab3"
0000E962 <prefixtree.include.ab3@352> XINCLUDE "translation.include.ab3"
0000E96A <prefixtree.include.ab3@353> XINCLUDE "translation.include.ab3"
0000E972 <prefixtree.include.ab3@354> XINCLUDE "translation.include.ab3"
0000E978 <prefixtree.include.ab3@355> XINCLUDE "translation.include.ab3"
0000E986 <prefixtree.include.ab3@356> XINCLUDE "translation.include.ab3"
0000E9A8 <prefixtree.include.ab3@358> XINCLUDE "translation.include.ab3"
0000E9D4 <prefixtree.include.ab3@359> XINCLUDE "translation.include.ab3"
0000E9E6 <prefixtree.include.ab3@361> XINCLUDE "translation.include.ab3"
0000E9EC <prefixtree.include.ab3@362> XINCLUDE "translation.include.ab3"
0000EA14 <prefixtree.include.ab3@364> XINCLUDE "translation.include.ab3"
0000EA38 <prefixtree.include.ab3@365> XINCLUDE "translation.include.ab3"
0000EA60 <prefixtree.include.ab3@366> XINCLUDE "translation.include.ab3"
0000EA94 <prefixtree.include.ab3@367> XINCLUDE "translation.include.ab3"
0000EAA4 <prefixtree.include.ab3@368> XINCLUDE "translation.include.ab3"
0000EAAE <prefixtree.include.ab3@369> XINCLUDE "translation.include.ab3"
0000EABC <prefixtree.include.ab3@370> XINCLUDE "translation.include.ab3"
0000EAD0 <prefixtree.include.ab3@371> XINCLUDE "translation.include.ab3"
0000EAD6 <prefixtree.include.ab3@372> XINCLUDE "translation.include.ab3"
0000EAF6 <prefixtree.include.ab3@373> XINCLUDE "translation.include.ab3"
0000EAFC <prefixtree.include.ab3@374> XINCLUDE "translation.include.ab3"
0000EB04 <prefixtree.include.ab3@376> XINCLUDE "translation.include.ab3"
0000EB3E <prefixtree.include.ab3@378> XINCLUDE "translation.include.ab3"
0000EB64 <prefixtree.include.ab3@379> XINCLUDE "translation.include.ab3"
0000EB7C <prefixtree.include.ab3@380> XINCLUDE "translation.include.ab3"
0000EBB0 <prefixtree.include.ab3@381> XINCLUDE "translation.include.ab3"
0000EBB8 <prefixtree.include.ab3@382> XINCLUDE "translation.include.ab3"
0000EBC6 <prefixtree.include.ab3@384> XINCLUDE "translation.include.ab3"
0000EBCC <prefixtree.include.ab3@386> XINCLUDE "translation.include.ab3"
0000EBE4 <prefixtree.include.ab3@387> XINCLUDE "translation.include.ab3"
0000EBEA <prefixtree.include.ab3@388> XINCLUDE "translation.include.ab3"
0000EBF0 <prefixtree.include.ab3@389> XINCLUDE "translation.include.ab3"
0000EC0A <prefixtree.include.ab3@390> XINCLUDE "translation.include.ab3"
0000EC10 <prefixtree.include.ab3@393> XINCLUDE "translation.include.ab3"
0000EC16 <prefixtree.include.ab3@395> XINCLUDE "translation.include.ab3"
0000EC1C <prefixtree.include.ab3@397> XINCLUDE "translation.include.ab3"
0000EC2A <prefixtree.include.ab3@398> XINCLUDE "translation.include.ab3"
0000EC38 <prefixtree.include.ab3@399> XINCLUDE "translation.include.ab3"
0000EC72 <prefixtree.include.ab3@401> XINCLUDE "translation.include.ab3"
0000EC98 <prefixtree.include.ab3@402> XINCLUDE "translation.include.ab3"
0000ECB0 <prefixtree.include.ab3@403> XINCLUDE "translation.include.ab3"
0000ECBC <prefixtree.include.ab3@406> XINCLUDE "translation.include.ab3"
0000ECC8 <prefixtree.include.ab3@407> XINCLUDE "translation.include.ab3"
0000ECD4 <prefixtree.include.ab3@408> XINCLUDE "translation.include.ab3"
0000ECE0 <prefixtree.include.ab3@409> XINCLUDE "translation.include.ab3"
0000ECEC <prefixtree.include.ab3@410> XINCLUDE "translation.include.ab3"
0000ECF6 <prefixtree.include.ab3@411> XINCLUDE "translation.include.ab3"
0000ECFE <prefixtree.include.ab3@413> XINCLUDE "translation.include.ab3"
0000ED18 <prefixtree.include.ab3@414> XINCLUDE "translation.include.ab3"
0000ED56 <prefixtree.include.ab3@461> XINCLUDE "translation.include.ab3"
0000ED5C <prefixtree.include.ab3@462> XINCLUDE "translation.include.ab3"
0000EDC2 <prefixtree.include.ab3@463> XINCLUDE "translation.include.ab3"
0000EE02 <prefixtree.include.ab3@465> XINCLUDE "translation.include.ab3"
0000EE58 <prefixtree.include.ab3@466> XINCLUDE "translation.include.ab3"
0000EECA <prefixtree.include.ab3@467> XINCLUDE "translation.include.ab3"
0000EED6 <prefixtree.include.ab3@469> XINCLUDE "translation.include.ab3"
0000EEE4 <prefixtree.include.ab3@470> XINCLUDE "translation.include.ab3"
0000EF2A <prefixtree.include.ab3@471> XINCLUDE "translation.include.ab3"
0000EF74 <prefixtree.include.ab3@472> XINCLUDE "translation.include.ab3"
0000EFAC <prefixtree.include.ab3@473> XINCLUDE "translation.include.ab3"
0000F000 <prefixtree.include.ab3@474> XINCLUDE "translation.include.ab3"
0000F006 <prefixtree.include.ab3@475> XINCLUDE "translation.include.ab3"
0000F00C <prefixtree.include.ab3@476> XINCLUDE "translation.include.ab3"
0000F01A <prefixtree.include.ab3@478> XINCLUDE "translation.include.ab3"
0000F022 <prefixtree.include.ab3@479> XINCLUDE "translation.include.ab3"
0000F05C <prefixtree.include.ab3@481> XINCLUDE "translation.include.ab3"
0000F082 <prefixtree.include.ab3@482> XINCLUDE "translation.include.ab3"
0000F09A <prefixtree.include.ab3@483> XINCLUDE "translation.include.ab3"
0000F0D0 <prefixtree.include.ab3@484> XINCLUDE "translation.include.ab3"
0000F0E6 <prefixtree.include.ab3@485> XINCLUDE "translation.include.ab3"
0000F0F4 <prefixtree.include.ab3@487> XINCLUDE "translation.include.ab3"
0000F10C <prefixtree.include.ab3@488> XINCLUDE "translation.include.ab3"
0000F144 <prefixtree.include.ab3@489> XINCLUDE "translation.include.ab3"
0000F16A <prefixtree.include.ab3@490> XINCLUDE "translation.include.ab3"
0000F1B2 <prefixtree.include.ab3@491> XINCLUDE "translation.include.ab3"
0000F1B8 <prefixtree.include.ab3@492> XINCLUDE "translation.include.ab3"
0000F1D2 <prefixtree.include.ab3@494> XINCLUDE "translation.include.ab3"
0000F1DE <prefixtree.include.ab3@495> XINCLUDE "translation.include.ab3"
0000F1E4 <prefixtree.include.ab3@496> XINCLUDE "translation.include.ab3"
0000F210 <prefixtree.include.ab3@497> XINCLUDE "translation.include.ab3"
0000F224 <prefixtree.include.ab3@502> XINCLUDE "translation.include.ab3"
0000F232 <prefixtree.include.ab3@504> XINCLUDE "translation.include.ab3"
0000F23A <prefixtree.include.ab3@505> XINCLUDE "translation.include.ab3"
0000F274 <prefixtree.include.ab3@507> XINCLUDE "translation.include.ab3"
0000F29A <prefixtree.include.ab3@508> XINCLUDE "translation.include.ab3"
0000F2B2 <prefixtree.include.ab3@509> XINCLUDE "translation.include.ab3"
0000F2EC <prefixtree.include.ab3@510> XINCLUDE "translation.include.ab3"
0000F316 <prefixtree.include.ab3@511> XINCLUDE "translation.include.ab3"
0000F32E <prefixtree.include.ab3@512> XINCLUDE "translation.include.ab3"
0000F35E <prefixtree.include.ab3@513> XINCLUDE "translation.include.ab3"
0000F38A <prefixtree.include.ab3@514> XINCLUDE "translation.include.ab3"
0000F3A6 <prefixtree.include.ab3@515> XINCLUDE "translation.include.ab3"
0000F3B4 <prefixtree.include.ab3@517> XINCLUDE "translation.include.ab3"
0000F3C2 <prefixtree.include.ab3@518> XINCLUDE "translation.include.ab3"
0000F400 <prefixtree.include.ab3@519> XINCLUDE "translation.include.ab3"
0000F43C <prefixtree.include.ab3@520> XINCLUDE "translation.include.ab3"
0000F4A8 <prefixtree.include.ab3@521> XINCLUDE "translation.include.ab3"
0000F4D6 <prefixtree.include.ab3@522> XINCLUDE "translation.include.ab3"
0000F504 <prefixtree.include.ab3@523> XINCLUDE "translation.include.ab3"
0000F54C <prefixtree.include.ab3@524> XINCLUDE "translation.include.ab3"
0000F566 <prefixtree.include.ab3@527> XINCLUDE "translation.include.ab3"
0000F5AE <prefixtree.include.ab3@528> XINCLUDE "translation.include.ab3"
0000F5CC <prefixtree.include.ab3@529> XINCLUDE "translation.include.ab3"
0000F5EA <prefixtree.include.ab3@530> XINCLUDE "translation.include.ab3"
0000F604 <prefixtree.include.ab3@533> XINCLUDE "translation.include.ab3"
0000F610 <prefixtree.include.ab3@534> XINCLUDE "translation.include.ab3"
0000F616 <prefixtree.include.ab3@535> XINCLUDE "translation.include.ab3"
0000F642 <prefixtree.include.ab3@536> XINCLUDE "translation.include.ab3"
0000F65A <prefixtree.include.ab3@538> XINCLUDE "translation.include.ab3"
0000F660 <prefixtree.include.ab3@539> XINCLUDE "translation.include.ab3"
0000F674 <prefixtree.include.ab3@542> XINCLUDE "translation.include.ab3"
0000F682 <prefixtree.include.ab3@544> XINCLUDE "translation.include.ab3"
0000F690 <prefixtree.include.ab3@545> XINCLUDE "translation.include.ab3"
0000F69E <prefixtree.include.ab3@546> XINCLUDE "translation.include.ab3"
0000F6A6 <prefixtree.include.ab3@547> XINCLUDE "translation.include.ab3"
0000F6D2 <prefixtree.include.ab3@548> XINCLUDE "translation.include.ab3"
0000F6FA <prefixtree.include.ab3@549> XINCLUDE "translation.include.ab3"
0000F722 <prefixtree.include.ab3@550> XINCLUDE "translation.include.ab3"
0000F78E <prefixtree.include.ab3@551> XINCLUDE "translation.include.ab3"
0000F79E <prefixtree.include.ab3@552> XINCLUDE "translation.include.ab3"
0000F7CA <prefixtree.include.ab3@553> XINCLUDE "translation.include.ab3"
0000F820 <prefixtree.include.ab3@555> XINCLUDE "translation.include.ab3"
0000F82E <prefixtree.include.ab3@556> XINCLUDE "translation.include.ab3"
0000F83C <prefixtree.include.ab3@557> XINCLUDE "translation.include.ab3"
0000F842 <prefixtree.include.ab3@558> XINCLUDE "translation.include.ab3"
0000F896 <prefixtree.include.ab3@560> XINCLUDE "translation.include.ab3"
0000F9B6 <prefixtree.include.ab3@561> XINCLUDE "translation.include.ab3"
0000FA06 <prefixtree.include.ab3@563> XINCLUDE "translation.include.ab3"
0000FA5C <prefixtree.include.ab3@564> XINCLUDE "translation.include.ab3"
0000FAC8 <prefixtree.include.ab3@565> XINCLUDE "translation.include.ab3"
0000FAD0 <prefixtree.include.ab3@569> XINCLUDE "translation.include.ab3"
0000FB0A <prefixtree.include.ab3@571> XINCLUDE "translation.include.ab3"
0000FB30 <prefixtree.include.ab3@572> XINCLUDE "translation.include.ab3"
0000FB48 <prefixtree.include.ab3@573> XINCLUDE "translation.include.ab3"
0000FB82 <prefixtree.include.ab3@574> XINCLUDE "translation.include.ab3"
0000FBAC <prefixtree.include.ab3@575> XINCLUDE "translation.include.ab3"
0000FBC4 <prefixtree.include.ab3@576> XINCLUDE "translation.include.ab3"
0000FBE8 <prefixtree.include.ab3@578> XINCLUDE "translation.include.ab3"
0000FC3C <prefixtree.include.ab3@579> XINCLUDE "translation.include.ab3"
0000FC44 <prefixtree.include.ab3@580> XINCLUDE "translation.include.ab3"
0000FC4A <prefixtree.include.ab3@581> XINCLUDE "translation.include.ab3"
0000FCAC <prefixtree.include.ab3@582> XINCLUDE "translation.include.ab3"
0000FCD8 <prefixtree.include.ab3@583> XINCLUDE "translation.include.ab3"
0000FCF4 <prefixtree.include.ab3@586> XINCLUDE "translation.include.ab3"
0000FD02 <prefixtree.include.ab3@588> XINCLUDE "translation.include.ab3"
0000FD10 <prefixtree.include.ab3@589> XINCLUDE "translation.include.ab3"
0000FD1E <prefixtree.include.ab3@591> XINCLUDE "translation.include.ab3"
0000FD2C <prefixtree.include.ab3@592> XINCLUDE "translation.include.ab3"
0000FD70 <prefixtree.include.ab3@593> XINCLUDE "translation.include.ab3"
0000FDDC <prefixtree.include.ab3@594> XINCLUDE "translation.include.ab3"
0000FE0A <prefixtree.include.ab3@595> XINCLUDE "translation.include.ab3"
0000FE1E <prefixtree.include.ab3@596> XINCLUDE "translation.include.ab3"
0000FE50 <prefixtree.include.ab3@597> XINCLUDE "translation.include.ab3"
0000FE9A <prefixtree.include.ab3@598> XINCLUDE "translation.include.ab3"
0000FEAA <prefixtree.include.ab3@599> XINCLUDE "translation.include.ab3"
0000FEDE <prefixtree.include.ab3@600> XINCLUDE "translation.include.ab3"
0000FF00 <prefixtree.include.ab3@601> XINCLUDE "translation.include.ab3"
0000FF10 <prefixtree.include.ab3@602> XINCLUDE "translation.include.ab3"
0000FF18 <prefixtree.include.ab3@605> XINCLUDE "translation.include.ab3"
0000FF5C <prefixtree.include.ab3@606> XINCLUDE "translation.include.ab3"
0000FFC8 <prefixtree.include.ab3@607> XINCLUDE "translation.include.ab3"
0000FFF6 <prefixtree.include.ab3@608> XINCLUDE "translation.include.ab3"
0001001A <prefixtree.include.ab3@610> XINCLUDE "translation.include.ab3"
0001005E <prefixtree.include.ab3@611> XINCLUDE "translation.include.ab3"
000100CA <prefixtree.include.ab3@612> XINCLUDE "translation.include.ab3"
000100F8 <prefixtree.include.ab3@613> XINCLUDE "translation.include.ab3"
00010126 <prefixtree.include.ab3@614> XINCLUDE "translation.include.ab3"
0001012E <prefixtree.include.ab3@615> XINCLUDE "translation.include.ab3"
0001015C <prefixtree.include.ab3@616> XINCLUDE "translation.include.ab3"
000101CE <prefixtree.include.ab3@617> XINCLUDE "translation.include.ab3"
000101D4 <prefixtree.include.ab3@618> XINCLUDE "translation.include.ab3"
00010202 <prefixtree.include.ab3@619> XINCLUDE "translation.include.ab3"
00010274 <prefixtree.include.ab3@620> XINCLUDE "translation.include.ab3"
00010292 <prefixtree.include.ab3@623> XINCLUDE "translation.include.ab3"
000102B6 <prefixtree.include.ab3@624> XINCLUDE "translation.include.ab3"
000102CE <prefixtree.include.ab3@625> XINCLUDE "translation.include.ab3"
000102D4 <prefixtree.include.ab3@626> XINCLUDE "translation.include.ab3"
000102DA <prefixtree.include.ab3@629> XINCLUDE "translation.include.ab3"
000102DC <prefixtree.include.ab3@631> XINCLUDE "translation.include.ab3"
000102E6 <prefixtree.include.ab3@634> XINCLUDE "translation.include.ab3"
00010312 <prefixtree.include.ab3@635> XINCLUDE "translation.include.ab3"
00010334 <prefixtree.include.ab3@653> XINCLUDE "translation.include.ab3"
0001033C <prefixtree.include.ab3@655> XINCLUDE "translation.include.ab3"
00010342 <prefixtree.include.ab3@656> XINCLUDE "translation.include.ab3"
00010350 <prefixtree.include.ab3@657> XINCLUDE "translation.include.ab3"
0001038A <prefixtree.include.ab3@659> XINCLUDE "translation.include.ab3"
000103B0 <prefixtree.include.ab3@660> XINCLUDE "translation.include.ab3"
000103C8 <prefixtree.include.ab3@661> XINCLUDE "translation.include.ab3"
00010402 <prefixtree.include.ab3@662> XINCLUDE "translation.include.ab3"
0001042C <prefixtree.include.ab3@663> XINCLUDE "translation.include.ab3"
00010444 <prefixtree.include.ab3@665> XINCLUDE "translation.include.ab3"
0001045C <prefixtree.include.ab3@666> XINCLUDE "translation.include.ab3"
00010494 <prefixtree.include.ab3@667> XINCLUDE "translation.include.ab3"
0001049C <prefixtree.include.ab3@669> XINCLUDE "translation.include.ab3"
000104D6 <prefixtree.include.ab3@671> XINCLUDE "translation.include.ab3"
000104E8 <prefixtree.include.ab3@673> XINCLUDE "translation.include.ab3"
0001050E <prefixtree.include.ab3@674> XINCLUDE "translation.include.ab3"
00010524 <prefixtree.include.ab3@675> XINCLUDE "translation.include.ab3"
0001054A <prefixtree.include.ab3@676> XINCLUDE "translation.include.ab3"
0001055E <prefixtree.include.ab3@677> XINCLUDE "translation.include.ab3"
00010576 <prefixtree.include.ab3@679> XINCLUDE "translation.include.ab3"
00010588 <prefixtree.include.ab3@681> XINCLUDE "translation.include.ab3"
00010592 <prefixtree.include.ab3@683> XINCLUDE "translation.include.ab3"
000105A6 <prefixtree.include.ab3@685> XINCLUDE "translation.include.ab3"
000105C0 <prefixtree.include.ab3@702> XINCLUDE "translation.include.ab3"
000105DE <prefixtree.include.ab3@704> XINCLUDE "translation.include.ab3"
000105F0 <prefixtree.include.ab3@705> XINCLUDE "translation.include.ab3"
0001060E <prefixtree.include.ab3@706> XINCLUDE "translation.include.ab3"
0001064A <prefixtree.include.ab3@707> XINCLUDE "translation.include.ab3"
00010666 <prefixtree.include.ab3@708> XINCLUDE "translation.include.ab3"
00010686 <prefixtree.include.ab3@709> XINCLUDE "translation.include.ab3"
00010690 <prefixtree.include.ab3@710> XINCLUDE "translation.include.ab3"
00010696 <prefixtree.include.ab3@711> XINCLUDE "translation.include.ab3"
000106A0 <prefixtree.include.ab3@712> XINCLUDE "translation.include.ab3"
000106AC <prefixtree.include.ab3@714> XINCLUDE "translation.include.ab3"
000106B2 <prefixtree.include.ab3@716> XINCLUDE "translation.include.ab3"
000106E0 <prefixtree.include.ab3@735> XINCLUDE "translation.include.ab3"
00010708 <prefixtree.include.ab3@736> XINCLUDE "translation.include.ab3"
00010748 <prefixtree.include.ab3@737> XINCLUDE "translation.include.ab3"
00010760 <prefixtree.include.ab3@738> XINCLUDE "translation.include.ab3"
000107A6 <prefixtree.include.ab3@739> XINCLUDE "translation.include.ab3"
000107D0 <prefixtree.include.ab3@742> XINCLUDE "translation.include.ab3"
000107FE <prefixtree.include.ab3@743> XINCLUDE "translation.include.ab3"
00010818 <prefixtree.include.ab3@942> XINCLUDE "translation.include.ab3"
00010820 <prefixtree.include.ab3@943> XINCLUDE "translation.include.ab3"
00010838 <prefixtree.include.ab3@944> XINCLUDE "translation.include.ab3"
00010842 <prefixtree.include.ab3@945> XINCLUDE "translation.include.ab3"
00010854 <prefixtree.include.ab3@946> XINCLUDE "translation.include.ab3"
0001088C <prefixtree.include.ab3@947> XINCLUDE "translation.include.ab3"
0001089A <prefixtree.include.ab3@948> XINCLUDE "translation.include.ab3"
000108A6 <prefixtree.include.ab3@949> XINCLUDE "translation.include.ab3"
000108C2 <prefixtree.include.ab3@950> XINCLUDE "translation.include.ab3"
000108E4 <prefixtree.include.ab3@951> XINCLUDE "translation.include.ab3"
00010906 <prefixtree.include.ab3@952> XINCLUDE "translation.include.ab3"
00010928 <prefixtree.include.ab3@953> XINCLUDE "translation.include.ab3"
0001094A <prefixtree.include.ab3@954> XINCLUDE "translation.include.ab3"
00010966 <prefixtree.include.ab3@955> XINCLUDE "translation.include.ab3"
00010984 <prefixtree.include.ab3@956> XINCLUDE "translation.include.ab3"
00010998 <prefixtree.include.ab3@957> XINCLUDE "translation.include.ab3"
0001099E <prefixtree.include.ab3@959> XINCLUDE "translation.include.ab3"
000109A0 <prefixtree.include.ab3@961> XINCLUDE "translation.include.ab3"
000109A6 <prefixtree.include.ab3@962> XINCLUDE "translation.include.ab3"
000109B0 <prefixtree.include.ab3@964> XINCLUDE "translation.include.ab3"
000109B6 <prefixtree.include.ab3@965> XINCLUDE "translation.include.ab3"
000109D4 <prefixtree.include.ab3@983> XINCLUDE "translation.include.ab3"
000109DA <prefixtree.include.ab3@984> XINCLUDE "translation.include.ab3"
000109FE <prefixtree.include.ab3@985> XINCLUDE "translation.include.ab3"
00010A1C <prefixtree.include.ab3@986> XINCLUDE "translation.include.ab3"
00010A4A <prefixtree.include.ab3@987> XINCLUDE "translation.include.ab3"
00010A78 <prefixtree.include.ab3@988> XINCLUDE "translation.include.ab3"
00010AA6 <prefixtree.include.ab3@989> XINCLUDE "translation.include.ab3"
00010AD4 <prefixtree.include.ab3@990> XINCLUDE "translation.include.ab3"
00010B08 <prefixtree.include.ab3@991> XINCLUDE "translation.include.ab3"
00010B18 <prefixtree.include.ab3@992> XINCLUDE "translation.include.ab3"
00010B22 <prefixtree.include.ab3@994> XINCLUDE "translation.include.ab3"
00010B28 <prefixtree.include.ab3@995> XINCLUDE "translation.include.ab3"
00010B28 <phrasebook.include.ab3@34> XINCLUDE "translation.include.ab3"
00010B72 <phrasebook.include.ab3@58> XINCLUDE "translation.include.ab3"
00010B92 <phrasebook.include.ab3@59> XINCLUDE "translation.include.ab3"
00010B9C <phrasebook.include.ab3@60> XINCLUDE "translation.include.ab3"
00010BB0 <phrasebook.include.ab3@61> XINCLUDE "translation.include.ab3"
00010BF6 <phrasebook.include.ab3@62> XINCLUDE "translation.include.ab3"
00010C3C <phrasebook.include.ab3@63> XINCLUDE "translation.include.ab3"
00010C82 <phrasebook.include.ab3@64> XINCLUDE "translation.include.ab3"
00010C8C <phrasebook.include.ab3@66> XINCLUDE "translation.include.ab3"
00010CA8 <phrasebook.include.ab3@67> XINCLUDE "translation.include.ab3"
00010CD2 <phrasebook.include.ab3@70> XINCLUDE "translation.include.ab3"
00010D50 <phrasebook.include.ab3@71> XINCLUDE "translation.include.ab3"
00010DCE <phrasebook.include.ab3@72> XINCLUDE "translation.include.ab3"
00010E4C <phrasebook.include.ab3@73> XINCLUDE "translation.include.ab3"
00010ECA <phrasebook.include.ab3@74> XINCLUDE "translation.include.ab3"
00010F48 <phrasebook.include.ab3@75> XINCLUDE "translation.include.ab3"
00010FC6 <phrasebook.include.ab3@76> XINCLUDE "translation.include.ab3"
00011044 <phrasebook.include.ab3@77> XINCLUDE "translation.include.ab3"
000110C2 <phrasebook.include.ab3@78> XINCLUDE "translation.include.ab3"
00011140 <phrasebook.include.ab3@79> XINCLUDE "translation.include.ab3"
000111BE <phrasebook.include.ab3@80> XINCLUDE "translation.include.ab3"
00011242 <phrasebook.include.ab3@81> XINCLUDE "translation.include.ab3"
00011272 <phrasebook.include.ab3@82> XINCLUDE "translation.include.ab3"
000112CE <phrasebook.include.ab3@84> XINCLUDE "translation.include.ab3"
000112FA <phrasebook.include.ab3@85> XINCLUDE "translation.include.ab3"
000113C4 <phrasebook.include.ab3@86> XINCLUDE "translation.include.ab3"
000113D2 <phrasebook.include.ab3@88> XINCLUDE "translation.include.ab3"
00011410 <phrasebook.include.ab3@89> XINCLUDE "translation.include.ab3"
00011494 <phrasebook.include.ab3@90> XINCLUDE "translation.include.ab3"
000114BE <phrasebook.include.ab3@91> XINCLUDE "translation.include.ab3"
000114DC <phrasebook.include.ab3@92> XINCLUDE "translation.include.ab3"
000114F6 <phrasebook.include.ab3@106> XINCLUDE "translation.include.ab3"
00011500 <phrasebook.include.ab3@107> XINCLUDE "translation.include.ab3"
0001150C <phrasebook.include.ab3@108> XINCLUDE "translation.include.ab3"
0001151C <phrasebook.include.ab3@109> XINCLUDE "translation.include.ab3"
0001152C <phrasebook.include.ab3@110> XINCLUDE "translation.include.ab3"
0001153C <phrasebook.include.ab3@111> XINCLUDE "translation.include.ab3"
0001154C <phrasebook.include.ab3@112> XINCLUDE "translation.include.ab3"
00011550 <phrasebook.include.ab3@114> XINCLUDE "translation.include.ab3"
0001158E <phrasebook.include.ab3@131> XINCLUDE "translation.include.ab3"
000115E6 <phrasebook.include.ab3@132> XINCLUDE "translation.include.ab3"
00011642 <phrasebook.include.ab3@133> XINCLUDE "translation.include.ab3"
000116CC <phrasebook.include.ab3@134> XINCLUDE "translation.include.ab3"
0001174A <phrasebook.include.ab3@135> XINCLUDE "translation.include.ab3"
00011764 <phrasebook.include.ab3@137> XINCLUDE "translation.include.ab3"
00011792 <phrasebook.include.ab3@155> XINCLUDE "translation.include.ab3"
000117CE <phrasebook.include.ab3@156> XINCLUDE "translation.include.ab3"
0001189C <phrasebook.include.ab3@158> XINCLUDE "translation.include.ab3"
0001196A <phrasebook.include.ab3@159> XINCLUDE "translation.include.ab3"
000119B6 <phrasebook.include.ab3@161> XINCLUDE "translation.include.ab3"
00011A34 <phrasebook.include.ab3@162> XINCLUDE "translation.include.ab3"
00011AB2 <phrasebook.include.ab3@163> XINCLUDE "translation.include.ab3"
00011B10 <phrasebook.include.ab3@165> XINCLUDE "translation.include.ab3"
00011BA6 <phrasebook.include.ab3@166> XINCLUDE "translation.include.ab3"
00011BDE <phrasebook.include.ab3@168> XINCLUDE "translation.include.ab3"
00011C3C <phrasebook.include.ab3@169> XINCLUDE "translation.include.ab3"
00011CC4 <phrasebook.include.ab3@170> XINCLUDE "translation.include.ab3"
00011CCC <phrasebook.include.ab3@172> XINCLUDE "translation.include.ab3"
00011D36 <phrasebook.include.ab3@174> XINCLUDE "translation.include.ab3"
00011DA2 <phrasebook.include.ab3@175> XINCLUDE "translation.include.ab3"
00011DE0 <phrasebook.include.ab3@176> XINCLUDE "translation.include.ab3"
00011E68 <phrasebook.include.ab3@177> XINCLUDE "translation.include.ab3"
00011E94 <phrasebook.include.ab3@187> XINCLUDE "translation.include.ab3"
00011EF0 <phrasebook.include.ab3@188> XINCLUDE "translation.include.ab3"
00011FB8 <phrasebook.include.ab3@189> XINCLUDE "translation.include.ab3"
0001201C <phrasebook.include.ab3@190> XINCLUDE "translation.include.ab3"
00012022 <phrasebook.include.ab3@191> XINCLUDE "translation.include.ab3"
00012056 <phrasebook.include.ab3@192> XINCLUDE "translation.include.ab3"
00012124 <phrasebook.include.ab3@196> XINCLUDE "translation.include.ab3"
000121F2 <phrasebook.include.ab3@197> XINCLUDE "translation.include.ab3"
0001221C <phrasebook.include.ab3@199> XINCLUDE "translation.include.ab3"
0001223A <phrasebook.include.ab3@200> XINCLUDE "translation.include.ab3"
00012268 <phrasebook.include.ab3@204> XINCLUDE "translation.include.ab3"
000122A4 <phrasebook.include.ab3@205> XINCLUDE "translation.include.ab3"
00012314 <phrasebook.include.ab3@206> XINCLUDE "translation.include.ab3"
0001231C <phrasebook.include.ab3@207> XINCLUDE "translation.include.ab3"
0001236E <phrasebook.include.ab3@208> XINCLUDE "translation.include.ab3"
00012396 <phrasebook.include.ab3@209> XINCLUDE "translation.include.ab3"
000123AE <phrasebook.include.ab3@210> XINCLUDE "translation.include.ab3"
00012462 <phrasebook.include.ab3@211> XINCLUDE "translation.include.ab3"
00012470 <phrasebook.include.ab3@212> XINCLUDE "translation.include.ab3"
000124C6 <phrasebook.include.ab3@213> XINCLUDE "translation.include.ab3"
00012524 <phrasebook.include.ab3@214> XINCLUDE "translation.include.ab3"
0001252A <phrasebook.include.ab3@215> XINCLUDE "translation.include.ab3"
000125AE <phrasebook.include.ab3@216> XINCLUDE "translation.include.ab3"
00012632 <phrasebook.include.ab3@217> XINCLUDE "translation.include.ab3"
000126B6 <phrasebook.include.ab3@218> XINCLUDE "translation.include.ab3"
00012734 <phrasebook.include.ab3@219> XINCLUDE "translation.include.ab3"
000127B2 <phrasebook.include.ab3@220> XINCLUDE "translation.include.ab3"
00012830 <phrasebook.include.ab3@221> XINCLUDE "translation.include.ab3"
000128AE <phrasebook.include.ab3@222> XINCLUDE "translation.include.ab3"
0001292C <phrasebook.include.ab3@223> XINCLUDE "translation.include.ab3"
000129AA <phrasebook.include.ab3@224> XINCLUDE "translation.include.ab3"
00012A28 <phrasebook.include.ab3@225> XINCLUDE "translation.include.ab3"
00012A52 <phrasebook.include.ab3@226> XINCLUDE "translation.include.ab3"
00012A70 <phrasebook.include.ab3@227> XINCLUDE "translation.include.ab3"
00012A9E <phrasebook.include.ab3@245> XINCLUDE "translation.include.ab3"
00012AE2 <phrasebook.include.ab3@246> XINCLUDE "translation.include.ab3"
00012AE8 <phrasebook.include.ab3@247> XINCLUDE "translation.include.ab3"
00012B02 <phrasebook.include.ab3@248> XINCLUDE "translation.include.ab3"
00012B1E <phrasebook.include.ab3@249> XINCLUDE "translation.include.ab3"
00012B52 <phrasebook.include.ab3@250> XINCLUDE "translation.include.ab3"
00012B76 <phrasebook.include.ab3@251> XINCLUDE "translation.include.ab3"
00012B9E <phrasebook.include.ab3@252> XINCLUDE "translation.include.ab3"
00012C0A <phrasebook.include.ab3@253> XINCLUDE "translation.include.ab3"
00012C68 <phrasebook.include.ab3@256> XINCLUDE "translation.include.ab3"
00012CC6 <phrasebook.include.ab3@257> XINCLUDE "translation.include.ab3"
00012D12 <phrasebook.include.ab3@258> XINCLUDE "translation.include.ab3"
00012D6C <phrasebook.include.ab3@259> XINCLUDE "translation.include.ab3"
00012D72 <phrasebook.include.ab3@260> XINCLUDE "translation.include.ab3"
00012D78 <phrasebook.include.ab3@262> XINCLUDE "translation.include.ab3"
00012D82 <phrasebook.include.ab3@263> XINCLUDE "translation.include.ab3"
00012D8C <phrasebook.include.ab3@264> XINCLUDE "translation.include.ab3"
00012DA6 <phrasebook.include.ab3@265> XINCLUDE "translation.include.ab3"
00012DD4 <phrasebook.include.ab3@282> XINCLUDE "translation.include.ab3"
00012DDA <phrasebook.include.ab3@283> XINCLUDE "translation.include.ab3"
00012E1E <phrasebook.include.ab3@284> XINCLUDE "translation.include.ab3"
00012E38 <phrasebook.include.ab3@285> XINCLUDE "translation.include.ab3"
00012E48 <phrasebook.include.ab3@286> XINCLUDE "translation.include.ab3"
00012E52 <phrasebook.include.ab3@287> XINCLUDE "translation.include.ab3"
00012E5E <phrasebook.include.ab3@288> XINCLUDE "translation.include.ab3"
00012E68 <phrasebook.include.ab3@289> XINCLUDE "translation.include.ab3"
00012E8C <phrasebook.include.ab3@292> XINCLUDE "translation.include.ab3"
00012ED4 <phrasebook.include.ab3@293> XINCLUDE "translation.include.ab3"
00012F1C <phrasebook.include.ab3@294> XINCLUDE "translation.include.ab3"
00012F64 <phrasebook.include.ab3@295> XINCLUDE "translation.include.ab3"
00012F7A <phrasebook.include.ab3@296> XINCLUDE "translation.include.ab3"
00012F8E <phrasebook.include.ab3@297> XINCLUDE "translation.include.ab3"
00012F98 <phrasebook.include.ab3@299> XINCLUDE "translation.include.ab3"
00012FA2 <phrasebook.include.ab3@300> XINCLUDE "translation.include.ab3"
00012FBC <phrasebook.include.ab3@301> XINCLUDE "translation.include.ab3"
00012FE6 <phrasebook.include.ab3@317> XINCLUDE "translation.include.ab3"
0001302A <phrasebook.include.ab3@318> XINCLUDE "translation.include.ab3"
00013044 <phrasebook.include.ab3@319> XINCLUDE "translation.include.ab3"
000130A2 <phrasebook.include.ab3@320> XINCLUDE "translation.include.ab3"
000130BC <phrasebook.include.ab3@321> XINCLUDE "translation.include.ab3"
000130D4 <phrasebook.include.ab3@323> XINCLUDE "translation.include.ab3"
000130DE <phrasebook.include.ab3@324> XINCLUDE "translation.include.ab3"
000130FA <phrasebook.include.ab3@325> XINCLUDE "translation.include.ab3"
00013108 <phrasebook.include.ab3@326> XINCLUDE "translation.include.ab3"
00013114 <phrasebook.include.ab3@327> XINCLUDE "translation.include.ab3"
00013160 <phrasebook.include.ab3@328> XINCLUDE "translation.include.ab3"
000131B2 <phrasebook.include.ab3@329> XINCLUDE "translation.include.ab3"
00013204 <phrasebook.include.ab3@330> XINCLUDE "translation.include.ab3"
00013218 <phrasebook.include.ab3@331> XINCLUDE "translation.include.ab3"
00013228 <phrasebook.include.ab3@332> XINCLUDE "translation.include.ab3"
0001322E <phrasebook.include.ab3@333> XINCLUDE "translation.include.ab3"
00013230 <phrasebook.include.ab3@335> XINCLUDE "translation.include.ab3"
00013236 <phrasebook.include.ab3@336> XINCLUDE "translation.include.ab3"
00013240 <phrasebook.include.ab3@338> XINCLUDE "translation.include.ab3"
0001324A <phrasebook.include.ab3@339> XINCLUDE "translation.include.ab3"
00013264 <phrasebook.include.ab3@340> XINCLUDE "translation.include.ab3"
0001328E <phrasebook.include.ab3@379> XINCLUDE "translation.include.ab3"
000132A4 <phrasebook.include.ab3@380> XINCLUDE "translation.include.ab3"
000132AE <phrasebook.include.ab3@381> XINCLUDE "translation.include.ab3"
00013326 <phrasebook.include.ab3@382> XINCLUDE "translation.include.ab3"
00013362 <phrasebook.include.ab3@383> XINCLUDE "translation.include.ab3"
00013372 <phrasebook.include.ab3@384> XINCLUDE "translation.include.ab3"
00013392 <phrasebook.include.ab3@385> XINCLUDE "translation.include.ab3"
000133B2 <phrasebook.include.ab3@386> XINCLUDE "translation.include.ab3"
000133D2 <phrasebook.include.ab3@387> XINCLUDE "translation.include.ab3"
00013408 <phrasebook.include.ab3@388> XINCLUDE "translation.include.ab3"
00013430 <phrasebook.include.ab3@389> XINCLUDE "translation.include.ab3"
00013468 <phrasebook.include.ab3@390> XINCLUDE "translation.include.ab3"
000134CC <phrasebook.include.ab3@391> XINCLUDE "translation.include.ab3"
000134EC <phrasebook.include.ab3@392> XINCLUDE "translation.include.ab3"
00013568 <phrasebook.include.ab3@393> XINCLUDE "translation.include.ab3"
000135A0 <phrasebook.include.ab3@396> XINCLUDE "translation.include.ab3"
00013616 <phrasebook.include.ab3@397> XINCLUDE "translation.include.ab3"
00013636 <phrasebook.include.ab3@398> XINCLUDE "translation.include.ab3"
000136B2 <phrasebook.include.ab3@399> XINCLUDE "translation.include.ab3"
000136EA <phrasebook.include.ab3@402> XINCLUDE "translation.include.ab3"
00013760 <phrasebook.include.ab3@403> XINCLUDE "translation.include.ab3"
00013780 <phrasebook.include.ab3@404> XINCLUDE "translation.include.ab3"
000137FC <phrasebook.include.ab3@405> XINCLUDE "translation.include.ab3"
00013828 <phrasebook.include.ab3@408> XINCLUDE "translation.include.ab3"
00013830 <phrasebook.include.ab3@409> XINCLUDE "translation.include.ab3"
00013876 <phrasebook.include.ab3@410> XINCLUDE "translation.include.ab3"
00013896 <phrasebook.include.ab3@411> XINCLUDE "translation.include.ab3"
000138A0 <phrasebook.include.ab3@412> XINCLUDE "translation.include.ab3"
000138B8 <phrasebook.include.ab3@413> XINCLUDE "translation.include.ab3"
000138C8 <phrasebook.include.ab3@414> XINCLUDE "translation.include.ab3"
00013900 <phrasebook.include.ab3@415> XINCLUDE "translation.include.ab3"
00013932 <phrasebook.include.ab3@416> XINCLUDE "translation.include.ab3"
00013944 <phrasebook.include.ab3@419> XINCLUDE "translation.include.ab3"
000139C6 <phrasebook.include.ab3@420> XINCLUDE "translation.include.ab3"
000139D0 <phrasebook.include.ab3@421> XINCLUDE "translation.include.ab3"
00013A02 <phrasebook.include.ab3@422> XINCLUDE "translation.include.ab3"
00013A34 <phrasebook.include.ab3@423> XINCLUDE "translation.include.ab3"
00013A60 <phrasebook.include.ab3@428> XINCLUDE "translation.include.ab3"
00013A8C <phrasebook.include.ab3@429> XINCLUDE "translation.include.ab3"
00013AAE <phrasebook.include.ab3@430> XINCLUDE "translation.include.ab3"
00013AB8 <phrasebook.include.ab3@432> XINCLUDE "translation.include.ab3"
00013AD2 <phrasebook.include.ab3@433> XINCLUDE "translation.include.ab3"
00013AD2 <translation.include.ab3@31> XINCLUDE "translation.include.ab3"
00013AE8 <translation.include.ab3@43> XINCLUDE "translation.include.ab3"
00013B04 <translation.include.ab3@44> XINCLUDE "translation.include.ab3"
00013B06 <translation.include.ab3@45> XINCLUDE "translation.include.ab3"
00013B34 <translation.include.ab3@46> XINCLUDE "translation.include.ab3"
00013B34 <AmiBlitz3.ab3@91> XINCLUDE "translation.include.ab3"
00013B34 <ted.include.ab3@1> XINCLUDE "/Shared/ted.include.ab3"
00013B4E <ted.include.ab3@161> XINCLUDE "/Shared/ted.include.ab3"
00013B58 <ted.include.ab3@162> XINCLUDE "/Shared/ted.include.ab3"
00013B7A <ted.include.ab3@163> XINCLUDE "/Shared/ted.include.ab3"
00013B92 <ted.include.ab3@164> XINCLUDE "/Shared/ted.include.ab3"
00013BAC <ted.include.ab3@166> XINCLUDE "/Shared/ted.include.ab3"
00013BDE <ted.include.ab3@167> XINCLUDE "/Shared/ted.include.ab3"
00013BE8 <ted.include.ab3@168> XINCLUDE "/Shared/ted.include.ab3"
00013BEE <ted.include.ab3@170> XINCLUDE "/Shared/ted.include.ab3"
00013C00 <ted.include.ab3@171> XINCLUDE "/Shared/ted.include.ab3"
00013C74 <ted.include.ab3@172> XINCLUDE "/Shared/ted.include.ab3"
00013C7A <ted.include.ab3@173> XINCLUDE "/Shared/ted.include.ab3"
00013CB4 <ted.include.ab3@174> XINCLUDE "/Shared/ted.include.ab3"
00013CBE <ted.include.ab3@177> XINCLUDE "/Shared/ted.include.ab3"
00013CC4 <ted.include.ab3@178> XINCLUDE "/Shared/ted.include.ab3"
00013CDA <ted.include.ab3@180> XINCLUDE "/Shared/ted.include.ab3"
00013CE4 <ted.include.ab3@181> XINCLUDE "/Shared/ted.include.ab3"
00013CFC <ted.include.ab3@183> XINCLUDE "/Shared/ted.include.ab3"
00013CFE <ted.include.ab3@185> XINCLUDE "/Shared/ted.include.ab3"
00013D2C <ted.include.ab3@186> XINCLUDE "/Shared/ted.include.ab3"
00013D46 <ted.include.ab3@190> XINCLUDE "/Shared/ted.include.ab3"
00013D5C <ted.include.ab3@191> XINCLUDE "/Shared/ted.include.ab3"
00013D90 <ted.include.ab3@192> XINCLUDE "/Shared/ted.include.ab3"
00013D94 <ted.include.ab3@194> XINCLUDE "/Shared/ted.include.ab3"
00013DAE <ted.include.ab3@196> XINCLUDE "/Shared/ted.include.ab3"
00013DC4 <ted.include.ab3@197> XINCLUDE "/Shared/ted.include.ab3"
00013DF8 <ted.include.ab3@198> XINCLUDE "/Shared/ted.include.ab3"
00013DFC <ted.include.ab3@200> XINCLUDE "/Shared/ted.include.ab3"
00013E16 <ted.include.ab3@216> XINCLUDE "/Shared/ted.include.ab3"
00013E2C <ted.include.ab3@217> XINCLUDE "/Shared/ted.include.ab3"
00013E60 <ted.include.ab3@218> XINCLUDE "/Shared/ted.include.ab3"
00013E64 <ted.include.ab3@220> XINCLUDE "/Shared/ted.include.ab3"
00013E7E <ted.include.ab3@236> XINCLUDE "/Shared/ted.include.ab3"
00013E94 <ted.include.ab3@237> XINCLUDE "/Shared/ted.include.ab3"
00013EC8 <ted.include.ab3@238> XINCLUDE "/Shared/ted.include.ab3"
00013ECC <ted.include.ab3@240> XINCLUDE "/Shared/ted.include.ab3"
00013EE6 <ted.include.ab3@242> XINCLUDE "/Shared/ted.include.ab3"
00013EFC <ted.include.ab3@243> XINCLUDE "/Shared/ted.include.ab3"
00013F30 <ted.include.ab3@244> XINCLUDE "/Shared/ted.include.ab3"
00013F34 <ted.include.ab3@246> XINCLUDE "/Shared/ted.include.ab3"
00013F34 <AmiBlitz3.ab3@92> XINCLUDE "/Shared/ted.include.ab3"
00013F34 <CLIModeSupport.ab3@1> XINCLUDE "CLIModeSupport.ab3"
00013F4A <CLIModeSupport.ab3@4> XINCLUDE "CLIModeSupport.ab3"
00013F60 <CLIModeSupport.ab3@7> XINCLUDE "CLIModeSupport.ab3"
00013F6E <CLIModeSupport.ab3@8> XINCLUDE "CLIModeSupport.ab3"
00013F7C <CLIModeSupport.ab3@9> XINCLUDE "CLIModeSupport.ab3"
00013F86 <CLIModeSupport.ab3@11> XINCLUDE "CLIModeSupport.ab3"
00013F98 <CLIModeSupport.ab3@12> XINCLUDE "CLIModeSupport.ab3"
00013FAA <CLIModeSupport.ab3@13> XINCLUDE "CLIModeSupport.ab3"
00013FB0 <CLIModeSupport.ab3@14> XINCLUDE "CLIModeSupport.ab3"
00013FEA <CLIModeSupport.ab3@15> XINCLUDE "CLIModeSupport.ab3"
00013FEE <CLIModeSupport.ab3@18> XINCLUDE "CLIModeSupport.ab3"
00014004 <CLIModeSupport.ab3@21> XINCLUDE "CLIModeSupport.ab3"
0001401A <CLIModeSupport.ab3@23> XINCLUDE "CLIModeSupport.ab3"
00014026 <CLIModeSupport.ab3@24> XINCLUDE "CLIModeSupport.ab3"
00014032 <CLIModeSupport.ab3@25> XINCLUDE "CLIModeSupport.ab3"
0001403A <CLIModeSupport.ab3@26> XINCLUDE "CLIModeSupport.ab3"
00014042 <CLIModeSupport.ab3@27> XINCLUDE "CLIModeSupport.ab3"
00014046 <CLIModeSupport.ab3@28> XINCLUDE "CLIModeSupport.ab3"
00014070 <CLIModeSupport.ab3@47> XINCLUDE "CLIModeSupport.ab3"
0001409C <CLIModeSupport.ab3@49> XINCLUDE "CLIModeSupport.ab3"
000140AE <CLIModeSupport.ab3@50> XINCLUDE "CLIModeSupport.ab3"
000140C6 <CLIModeSupport.ab3@52> XINCLUDE "CLIModeSupport.ab3"
000140DC <CLIModeSupport.ab3@56> XINCLUDE "CLIModeSupport.ab3"
000140E2 <CLIModeSupport.ab3@58> XINCLUDE "CLIModeSupport.ab3"
00014118 <CLIModeSupport.ab3@61> XINCLUDE "CLIModeSupport.ab3"
00014150 <CLIModeSupport.ab3@62> XINCLUDE "CLIModeSupport.ab3"
00014188 <CLIModeSupport.ab3@63> XINCLUDE "CLIModeSupport.ab3"
000141C0 <CLIModeSupport.ab3@64> XINCLUDE "CLIModeSupport.ab3"
000141F8 <CLIModeSupport.ab3@65> XINCLUDE "CLIModeSupport.ab3"
00014230 <CLIModeSupport.ab3@66> XINCLUDE "CLIModeSupport.ab3"
00014268 <CLIModeSupport.ab3@67> XINCLUDE "CLIModeSupport.ab3"
000142A0 <CLIModeSupport.ab3@68> XINCLUDE "CLIModeSupport.ab3"
000142D8 <CLIModeSupport.ab3@69> XINCLUDE "CLIModeSupport.ab3"
00014310 <CLIModeSupport.ab3@70> XINCLUDE "CLIModeSupport.ab3"
00014348 <CLIModeSupport.ab3@71> XINCLUDE "CLIModeSupport.ab3"
00014380 <CLIModeSupport.ab3@72> XINCLUDE "CLIModeSupport.ab3"
000143B8 <CLIModeSupport.ab3@73> XINCLUDE "CLIModeSupport.ab3"
000143EC <CLIModeSupport.ab3@74> XINCLUDE "CLIModeSupport.ab3"
000143F6 <CLIModeSupport.ab3@75> XINCLUDE "CLIModeSupport.ab3"
00014400 <CLIModeSupport.ab3@77> XINCLUDE "CLIModeSupport.ab3"
0001440A <CLIModeSupport.ab3@78> XINCLUDE "CLIModeSupport.ab3"
00014434 <CLIModeSupport.ab3@82> XINCLUDE "CLIModeSupport.ab3"
0001443E <CLIModeSupport.ab3@83> XINCLUDE "CLIModeSupport.ab3"
00014442 <CLIModeSupport.ab3@84> XINCLUDE "CLIModeSupport.ab3"
00014476 <CLIModeSupport.ab3@85> XINCLUDE "CLIModeSupport.ab3"
00014494 <CLIModeSupport.ab3@88> XINCLUDE "CLIModeSupport.ab3"
0001449E <CLIModeSupport.ab3@89> XINCLUDE "CLIModeSupport.ab3"
000144AA <CLIModeSupport.ab3@90> XINCLUDE "CLIModeSupport.ab3"
000144B0 <CLIModeSupport.ab3@91> XINCLUDE "CLIModeSupport.ab3"
000144BC <CLIModeSupport.ab3@92> XINCLUDE "CLIModeSupport.ab3"
000144C2 <CLIModeSupport.ab3@93> XINCLUDE "CLIModeSupport.ab3"
000144CE <CLIModeSupport.ab3@94> XINCLUDE "CLIModeSupport.ab3"
000144D4 <CLIModeSupport.ab3@95> XINCLUDE "CLIModeSupport.ab3"
000144DA <CLIModeSupport.ab3@98> XINCLUDE "CLIModeSupport.ab3"
00014514 <CLIModeSupport.ab3@99> XINCLUDE "CLIModeSupport.ab3"
0001451A <CLIModeSupport.ab3@100> XINCLUDE "CLIModeSupport.ab3"
00014530 <CLIModeSupport.ab3@103> XINCLUDE "CLIModeSupport.ab3"
0001453A <CLIModeSupport.ab3@105> XINCLUDE "CLIModeSupport.ab3"
00014540 <CLIModeSupport.ab3@106> XINCLUDE "CLIModeSupport.ab3"
00014546 <CLIModeSupport.ab3@108> XINCLUDE "CLIModeSupport.ab3"
00014547 <CLIModeSupport.ab3@110> XINCLUDE "CLIModeSupport.ab3"
00014548 <CLIModeSupport.ab3@111> XINCLUDE "CLIModeSupport.ab3"
00014549 <CLIModeSupport.ab3@112> XINCLUDE "CLIModeSupport.ab3"
0001454A <CLIModeSupport.ab3@113> XINCLUDE "CLIModeSupport.ab3"
0001454C <CLIModeSupport.ab3@116> XINCLUDE "CLIModeSupport.ab3"
0001454E <CLIModeSupport.ab3@117> XINCLUDE "CLIModeSupport.ab3"
00014550 <CLIModeSupport.ab3@120> XINCLUDE "CLIModeSupport.ab3"
00014552 <CLIModeSupport.ab3@121> XINCLUDE "CLIModeSupport.ab3"
00014556 <CLIModeSupport.ab3@122> XINCLUDE "CLIModeSupport.ab3"
00014558 <CLIModeSupport.ab3@124> XINCLUDE "CLIModeSupport.ab3"
0001455A <CLIModeSupport.ab3@125> XINCLUDE "CLIModeSupport.ab3"
0001455E <CLIModeSupport.ab3@126> XINCLUDE "CLIModeSupport.ab3"
00014560 <CLIModeSupport.ab3@127> XINCLUDE "CLIModeSupport.ab3"
00014562 <CLIModeSupport.ab3@147> XINCLUDE "CLIModeSupport.ab3"
00014564 <CLIModeSupport.ab3@148> XINCLUDE "CLIModeSupport.ab3"
00014566 <CLIModeSupport.ab3@149> XINCLUDE "CLIModeSupport.ab3"
00014568 <CLIModeSupport.ab3@150> XINCLUDE "CLIModeSupport.ab3"
0001456A <CLIModeSupport.ab3@153> XINCLUDE "CLIModeSupport.ab3"
0001456E <CLIModeSupport.ab3@154> XINCLUDE "CLIModeSupport.ab3"
00014574 <CLIModeSupport.ab3@157> XINCLUDE "CLIModeSupport.ab3"
00014578 <CLIModeSupport.ab3@158> XINCLUDE "CLIModeSupport.ab3"
0001457A <CLIModeSupport.ab3@161> XINCLUDE "CLIModeSupport.ab3"
0001457E <CLIModeSupport.ab3@162> XINCLUDE "CLIModeSupport.ab3"
00014580 <CLIModeSupport.ab3@163> XINCLUDE "CLIModeSupport.ab3"
00014582 <CLIModeSupport.ab3@164> XINCLUDE "CLIModeSupport.ab3"
00014584 <CLIModeSupport.ab3@165> XINCLUDE "CLIModeSupport.ab3"
00014586 <CLIModeSupport.ab3@166> XINCLUDE "CLIModeSupport.ab3"
00014588 <CLIModeSupport.ab3@169> XINCLUDE "CLIModeSupport.ab3"
0001458A <CLIModeSupport.ab3@170> XINCLUDE "CLIModeSupport.ab3"
00014590 <CLIModeSupport.ab3@171> XINCLUDE "CLIModeSupport.ab3"
00014596 <CLIModeSupport.ab3@172> XINCLUDE "CLIModeSupport.ab3"
00014598 <CLIModeSupport.ab3@175> XINCLUDE "CLIModeSupport.ab3"
0001459C <CLIModeSupport.ab3@176> XINCLUDE "CLIModeSupport.ab3"
000145A0 <CLIModeSupport.ab3@177> XINCLUDE "CLIModeSupport.ab3"
000145A6 <CLIModeSupport.ab3@178> XINCLUDE "CLIModeSupport.ab3"
000145AC <CLIModeSupport.ab3@180> XINCLUDE "CLIModeSupport.ab3"
000145B0 <CLIModeSupport.ab3@181> XINCLUDE "CLIModeSupport.ab3"
000145B4 <CLIModeSupport.ab3@183> XINCLUDE "CLIModeSupport.ab3"
000145BA <CLIModeSupport.ab3@185> XINCLUDE "CLIModeSupport.ab3"
000145BE <CLIModeSupport.ab3@186> XINCLUDE "CLIModeSupport.ab3"
000145C4 <CLIModeSupport.ab3@189> XINCLUDE "CLIModeSupport.ab3"
000145CA <CLIModeSupport.ab3@192> XINCLUDE "CLIModeSupport.ab3"
000145CE <CLIModeSupport.ab3@193> XINCLUDE "CLIModeSupport.ab3"
000145D4 <CLIModeSupport.ab3@196> XINCLUDE "CLIModeSupport.ab3"
000145D8 <CLIModeSupport.ab3@197> XINCLUDE "CLIModeSupport.ab3"
000145DE <CLIModeSupport.ab3@198> XINCLUDE "CLIModeSupport.ab3"
000145E2 <CLIModeSupport.ab3@199> XINCLUDE "CLIModeSupport.ab3"
000145E6 <CLIModeSupport.ab3@202> XINCLUDE "CLIModeSupport.ab3"
000145EA <CLIModeSupport.ab3@203> XINCLUDE "CLIModeSupport.ab3"
000145EE <CLIModeSupport.ab3@204> XINCLUDE "CLIModeSupport.ab3"
000145F2 <CLIModeSupport.ab3@205> XINCLUDE "CLIModeSupport.ab3"
000145F6 <CLIModeSupport.ab3@206> XINCLUDE "CLIModeSupport.ab3"
000145FA <CLIModeSupport.ab3@208> XINCLUDE "CLIModeSupport.ab3"
000145FE <CLIModeSupport.ab3@209> XINCLUDE "CLIModeSupport.ab3"
00014602 <CLIModeSupport.ab3@210> XINCLUDE "CLIModeSupport.ab3"
00014606 <CLIModeSupport.ab3@211> XINCLUDE "CLIModeSupport.ab3"
0001460A <CLIModeSupport.ab3@212> XINCLUDE "CLIModeSupport.ab3"
0001460E <CLIModeSupport.ab3@213> XINCLUDE "CLIModeSupport.ab3"
00014614 <CLIModeSupport.ab3@214> XINCLUDE "CLIModeSupport.ab3"
00014618 <CLIModeSupport.ab3@215> XINCLUDE "CLIModeSupport.ab3"
0001461E <CLIModeSupport.ab3@218> XINCLUDE "CLIModeSupport.ab3"
00014620 <CLIModeSupport.ab3@219> XINCLUDE "CLIModeSupport.ab3"
00014624 <CLIModeSupport.ab3@220> XINCLUDE "CLIModeSupport.ab3"
00014628 <CLIModeSupport.ab3@221> XINCLUDE "CLIModeSupport.ab3"
0001462C <CLIModeSupport.ab3@224> XINCLUDE "CLIModeSupport.ab3"
00014630 <CLIModeSupport.ab3@225> XINCLUDE "CLIModeSupport.ab3"
00014634 <CLIModeSupport.ab3@226> XINCLUDE "CLIModeSupport.ab3"
00014638 <CLIModeSupport.ab3@227> XINCLUDE "CLIModeSupport.ab3"
0001463C <CLIModeSupport.ab3@228> XINCLUDE "CLIModeSupport.ab3"
00014640 <CLIModeSupport.ab3@229> XINCLUDE "CLIModeSupport.ab3"
00014646 <CLIModeSupport.ab3@232> XINCLUDE "CLIModeSupport.ab3"
00014648 <CLIModeSupport.ab3@233> XINCLUDE "CLIModeSupport.ab3"
0001464C <CLIModeSupport.ab3@234> XINCLUDE "CLIModeSupport.ab3"
00014650 <CLIModeSupport.ab3@235> XINCLUDE "CLIModeSupport.ab3"
00014654 <CLIModeSupport.ab3@236> XINCLUDE "CLIModeSupport.ab3"
00014658 <CLIModeSupport.ab3@237> XINCLUDE "CLIModeSupport.ab3"
0001465C <CLIModeSupport.ab3@239> XINCLUDE "CLIModeSupport.ab3"
00014660 <CLIModeSupport.ab3@240> XINCLUDE "CLIModeSupport.ab3"
00014664 <CLIModeSupport.ab3@241> XINCLUDE "CLIModeSupport.ab3"
00014668 <CLIModeSupport.ab3@242> XINCLUDE "CLIModeSupport.ab3"
0001466C <CLIModeSupport.ab3@243> XINCLUDE "CLIModeSupport.ab3"
00014670 <CLIModeSupport.ab3@244> XINCLUDE "CLIModeSupport.ab3"
00014674 <CLIModeSupport.ab3@245> XINCLUDE "CLIModeSupport.ab3"
00014678 <CLIModeSupport.ab3@246> XINCLUDE "CLIModeSupport.ab3"
0001467C <CLIModeSupport.ab3@247> XINCLUDE "CLIModeSupport.ab3"
00014680 <CLIModeSupport.ab3@248> XINCLUDE "CLIModeSupport.ab3"
00014684 <CLIModeSupport.ab3@249> XINCLUDE "CLIModeSupport.ab3"
00014688 <CLIModeSupport.ab3@250> XINCLUDE "CLIModeSupport.ab3"
0001468C <CLIModeSupport.ab3@251> XINCLUDE "CLIModeSupport.ab3"
00014690 <CLIModeSupport.ab3@252> XINCLUDE "CLIModeSupport.ab3"
00014696 <CLIModeSupport.ab3@255> XINCLUDE "CLIModeSupport.ab3"
00014698 <CLIModeSupport.ab3@256> XINCLUDE "CLIModeSupport.ab3"
0001469C <CLIModeSupport.ab3@257> XINCLUDE "CLIModeSupport.ab3"
000146A0 <CLIModeSupport.ab3@258> XINCLUDE "CLIModeSupport.ab3"
000146A6 <CLIModeSupport.ab3@259> XINCLUDE "CLIModeSupport.ab3"
000146AC <CLIModeSupport.ab3@261> XINCLUDE "CLIModeSupport.ab3"
000146B0 <CLIModeSupport.ab3@262> XINCLUDE "CLIModeSupport.ab3"
000146B4 <CLIModeSupport.ab3@263> XINCLUDE "CLIModeSupport.ab3"
000146BA <CLIModeSupport.ab3@265> XINCLUDE "CLIModeSupport.ab3"
000146BE <CLIModeSupport.ab3@266> XINCLUDE "CLIModeSupport.ab3"
000146C4 <CLIModeSupport.ab3@267> XINCLUDE "CLIModeSupport.ab3"
000146C8 <CLIModeSupport.ab3@268> XINCLUDE "CLIModeSupport.ab3"
000146CA <CLIModeSupport.ab3@271> XINCLUDE "CLIModeSupport.ab3"
000146D0 <CLIModeSupport.ab3@272> XINCLUDE "CLIModeSupport.ab3"
000146D2 <CLIModeSupport.ab3@275> XINCLUDE "CLIModeSupport.ab3"
000146D4 <CLIModeSupport.ab3@276> XINCLUDE "CLIModeSupport.ab3"
000146D6 <CLIModeSupport.ab3@277> XINCLUDE "CLIModeSupport.ab3"
000146D8 <CLIModeSupport.ab3@280> XINCLUDE "CLIModeSupport.ab3"
000146DC <CLIModeSupport.ab3@281> XINCLUDE "CLIModeSupport.ab3"
000146DE <CLIModeSupport.ab3@282> XINCLUDE "CLIModeSupport.ab3"
000146E2 <CLIModeSupport.ab3@283> XINCLUDE "CLIModeSupport.ab3"
000146E6 <CLIModeSupport.ab3@284> XINCLUDE "CLIModeSupport.ab3"
000146EA <CLIModeSupport.ab3@285> XINCLUDE "CLIModeSupport.ab3"
000146EC <CLIModeSupport.ab3@286> XINCLUDE "CLIModeSupport.ab3"
000146F0 <CLIModeSupport.ab3@287> XINCLUDE "CLIModeSupport.ab3"
000146F2 <CLIModeSupport.ab3@290> XINCLUDE "CLIModeSupport.ab3"
000146F4 <CLIModeSupport.ab3@291> XINCLUDE "CLIModeSupport.ab3"
000146F8 <CLIModeSupport.ab3@292> XINCLUDE "CLIModeSupport.ab3"
000146FA <CLIModeSupport.ab3@293> XINCLUDE "CLIModeSupport.ab3"
000146FE <CLIModeSupport.ab3@294> XINCLUDE "CLIModeSupport.ab3"
00014700 <CLIModeSupport.ab3@297> XINCLUDE "CLIModeSupport.ab3"
00014704 <CLIModeSupport.ab3@298> XINCLUDE "CLIModeSupport.ab3"
0001470A <CLIModeSupport.ab3@301> XINCLUDE "CLIModeSupport.ab3"
0001470C <CLIModeSupport.ab3@302> XINCLUDE "CLIModeSupport.ab3"
00014710 <CLIModeSupport.ab3@303> XINCLUDE "CLIModeSupport.ab3"
00014714 <CLIModeSupport.ab3@304> XINCLUDE "CLIModeSupport.ab3"
0001471A <CLIModeSupport.ab3@305> XINCLUDE "CLIModeSupport.ab3"
00014720 <CLIModeSupport.ab3@307> XINCLUDE "CLIModeSupport.ab3"
00014724 <CLIModeSupport.ab3@308> XINCLUDE "CLIModeSupport.ab3"
00014728 <CLIModeSupport.ab3@309> XINCLUDE "CLIModeSupport.ab3"
0001472E <CLIModeSupport.ab3@311> XINCLUDE "CLIModeSupport.ab3"
00014732 <CLIModeSupport.ab3@312> XINCLUDE "CLIModeSupport.ab3"
00014738 <CLIModeSupport.ab3@313> XINCLUDE "CLIModeSupport.ab3"
0001473C <CLIModeSupport.ab3@314> XINCLUDE "CLIModeSupport.ab3"
00014740 <CLIModeSupport.ab3@315> XINCLUDE "CLIModeSupport.ab3"
00014742 <CLIModeSupport.ab3@318> XINCLUDE "CLIModeSupport.ab3"
00014746 <CLIModeSupport.ab3@319> XINCLUDE "CLIModeSupport.ab3"
0001474C <CLIModeSupport.ab3@320> XINCLUDE "CLIModeSupport.ab3"
00014750 <CLIModeSupport.ab3@321> XINCLUDE "CLIModeSupport.ab3"
00014754 <CLIModeSupport.ab3@322> XINCLUDE "CLIModeSupport.ab3"
00014758 <CLIModeSupport.ab3@323> XINCLUDE "CLIModeSupport.ab3"
0001475C <CLIModeSupport.ab3@324> XINCLUDE "CLIModeSupport.ab3"
00014760 <CLIModeSupport.ab3@325> XINCLUDE "CLIModeSupport.ab3"
00014764 <CLIModeSupport.ab3@326> XINCLUDE "CLIModeSupport.ab3"
00014768 <CLIModeSupport.ab3@328> XINCLUDE "CLIModeSupport.ab3"
0001476C <CLIModeSupport.ab3@329> XINCLUDE "CLIModeSupport.ab3"
0001476E <CLIModeSupport.ab3@330> XINCLUDE "CLIModeSupport.ab3"
00014770 <CLIModeSupport.ab3@331> XINCLUDE "CLIModeSupport.ab3"
00014772 <CLIModeSupport.ab3@332> XINCLUDE "CLIModeSupport.ab3"
00014776 <CLIModeSupport.ab3@333> XINCLUDE "CLIModeSupport.ab3"
00014778 <CLIModeSupport.ab3@334> XINCLUDE "CLIModeSupport.ab3"
0001477A <CLIModeSupport.ab3@335> XINCLUDE "CLIModeSupport.ab3"
0001477C <CLIModeSupport.ab3@336> XINCLUDE "CLIModeSupport.ab3"
0001477E <CLIModeSupport.ab3@337> XINCLUDE "CLIModeSupport.ab3"
00014780 <CLIModeSupport.ab3@338> XINCLUDE "CLIModeSupport.ab3"
00014784 <CLIModeSupport.ab3@339> XINCLUDE "CLIModeSupport.ab3"
00014786 <CLIModeSupport.ab3@340> XINCLUDE "CLIModeSupport.ab3"
0001478A <CLIModeSupport.ab3@341> XINCLUDE "CLIModeSupport.ab3"
0001478C <CLIModeSupport.ab3@344> XINCLUDE "CLIModeSupport.ab3"
0001478E <CLIModeSupport.ab3@345> XINCLUDE "CLIModeSupport.ab3"
00014790 <CLIModeSupport.ab3@346> XINCLUDE "CLIModeSupport.ab3"
00014794 <CLIModeSupport.ab3@347> XINCLUDE "CLIModeSupport.ab3"
00014796 <CLIModeSupport.ab3@348> XINCLUDE "CLIModeSupport.ab3"
00014798 <CLIModeSupport.ab3@351> XINCLUDE "CLIModeSupport.ab3"
0001479A <CLIModeSupport.ab3@354> XINCLUDE "CLIModeSupport.ab3"
0001479E <CLIModeSupport.ab3@355> XINCLUDE "CLIModeSupport.ab3"
000147A2 <CLIModeSupport.ab3@358> XINCLUDE "CLIModeSupport.ab3"
000147A6 <CLIModeSupport.ab3@359> XINCLUDE "CLIModeSupport.ab3"
000147AA <CLIModeSupport.ab3@360> XINCLUDE "CLIModeSupport.ab3"
000147AE <CLIModeSupport.ab3@361> XINCLUDE "CLIModeSupport.ab3"
000147B2 <CLIModeSupport.ab3@362> XINCLUDE "CLIModeSupport.ab3"
000147B6 <CLIModeSupport.ab3@363> XINCLUDE "CLIModeSupport.ab3"
000147BA <CLIModeSupport.ab3@364> XINCLUDE "CLIModeSupport.ab3"
000147BE <CLIModeSupport.ab3@365> XINCLUDE "CLIModeSupport.ab3"
000147C0 <CLIModeSupport.ab3@368> XINCLUDE "CLIModeSupport.ab3"
000147C2 <CLIModeSupport.ab3@371> XINCLUDE "CLIModeSupport.ab3"
000147C4 <CLIModeSupport.ab3@374> XINCLUDE "CLIModeSupport.ab3"
000147C8 <CLIModeSupport.ab3@375> XINCLUDE "CLIModeSupport.ab3"
000147CA <CLIModeSupport.ab3@376> XINCLUDE "CLIModeSupport.ab3"
000147CC <CLIModeSupport.ab3@377> XINCLUDE "CLIModeSupport.ab3"
000147E2 <CLIModeSupport.ab3@382> XINCLUDE "CLIModeSupport.ab3"
000147E8 <CLIModeSupport.ab3@383> XINCLUDE "CLIModeSupport.ab3"
00014826 <CLIModeSupport.ab3@385> XINCLUDE "CLIModeSupport.ab3"
0001482A <CLIModeSupport.ab3@386> XINCLUDE "CLIModeSupport.ab3"
00014834 <CLIModeSupport.ab3@387> XINCLUDE "CLIModeSupport.ab3"
00014836 <CLIModeSupport.ab3@388> XINCLUDE "CLIModeSupport.ab3"
0001486A <CLIModeSupport.ab3@389> XINCLUDE "CLIModeSupport.ab3"
0001487A <CLIModeSupport.ab3@390> XINCLUDE "CLIModeSupport.ab3"
0001487C <CLIModeSupport.ab3@393> XINCLUDE "CLIModeSupport.ab3"
000148B4 <CLIModeSupport.ab3@394> XINCLUDE "CLIModeSupport.ab3"
000148EC <CLIModeSupport.ab3@395> XINCLUDE "CLIModeSupport.ab3"
00014924 <CLIModeSupport.ab3@396> XINCLUDE "CLIModeSupport.ab3"
0001492E <CLIModeSupport.ab3@398> XINCLUDE "CLIModeSupport.ab3"
00014934 <CLIModeSupport.ab3@399> XINCLUDE "CLIModeSupport.ab3"
0001494A <CLIModeSupport.ab3@403> XINCLUDE "CLIModeSupport.ab3"
00014988 <CLIModeSupport.ab3@404> XINCLUDE "CLIModeSupport.ab3"
0001498C <CLIModeSupport.ab3@405> XINCLUDE "CLIModeSupport.ab3"
00014994 <CLIModeSupport.ab3@406> XINCLUDE "CLIModeSupport.ab3"
000149D2 <CLIModeSupport.ab3@407> XINCLUDE "CLIModeSupport.ab3"
000149D4 <CLIModeSupport.ab3@408> XINCLUDE "CLIModeSupport.ab3"
000149D8 <CLIModeSupport.ab3@409> XINCLUDE "CLIModeSupport.ab3"
00014A16 <CLIModeSupport.ab3@411> XINCLUDE "CLIModeSupport.ab3"
00014A1A <CLIModeSupport.ab3@412> XINCLUDE "CLIModeSupport.ab3"
00014A58 <CLIModeSupport.ab3@414> XINCLUDE "CLIModeSupport.ab3"
00014A5C <CLIModeSupport.ab3@415> XINCLUDE "CLIModeSupport.ab3"
00014A86 <CLIModeSupport.ab3@417> XINCLUDE "CLIModeSupport.ab3"
00014A90 <CLIModeSupport.ab3@418> XINCLUDE "CLIModeSupport.ab3"
00014AA4 <CLIModeSupport.ab3@419> XINCLUDE "CLIModeSupport.ab3"
00014ACA <CLIModeSupport.ab3@420> XINCLUDE "CLIModeSupport.ab3"
00014AD0 <CLIModeSupport.ab3@421> XINCLUDE "CLIModeSupport.ab3"
00014ADE <CLIModeSupport.ab3@422> XINCLUDE "CLIModeSupport.ab3"
00014AE4 <CLIModeSupport.ab3@423> XINCLUDE "CLIModeSupport.ab3"
00014B1C <CLIModeSupport.ab3@425> XINCLUDE "CLIModeSupport.ab3"
00014B20 <CLIModeSupport.ab3@428> XINCLUDE "CLIModeSupport.ab3"
00014B4A <CLIModeSupport.ab3@431> XINCLUDE "CLIModeSupport.ab3"
00014B50 <CLIModeSupport.ab3@432> XINCLUDE "CLIModeSupport.ab3"
00014B70 <CLIModeSupport.ab3@433> XINCLUDE "CLIModeSupport.ab3"
00014B7A <CLIModeSupport.ab3@434> XINCLUDE "CLIModeSupport.ab3"
00014B7E <CLIModeSupport.ab3@435> XINCLUDE "CLIModeSupport.ab3"
00014B80 <CLIModeSupport.ab3@436> XINCLUDE "CLIModeSupport.ab3"
00014B9E <CLIModeSupport.ab3@437> XINCLUDE "CLIModeSupport.ab3"
00014BA0 <CLIModeSupport.ab3@438> XINCLUDE "CLIModeSupport.ab3"
00014BA6 <CLIModeSupport.ab3@439> XINCLUDE "CLIModeSupport.ab3"
00014BAC <CLIModeSupport.ab3@440> XINCLUDE "CLIModeSupport.ab3"
00014BD6 <CLIModeSupport.ab3@442> XINCLUDE "CLIModeSupport.ab3"
00014BD8 <CLIModeSupport.ab3@443> XINCLUDE "CLIModeSupport.ab3"
00014C06 <CLIModeSupport.ab3@444> XINCLUDE "CLIModeSupport.ab3"
00014C0A <CLIModeSupport.ab3@445> XINCLUDE "CLIModeSupport.ab3"
00014C38 <CLIModeSupport.ab3@446> XINCLUDE "CLIModeSupport.ab3"
00014C3C <CLIModeSupport.ab3@447> XINCLUDE "CLIModeSupport.ab3"
00014C62 <CLIModeSupport.ab3@449> XINCLUDE "CLIModeSupport.ab3"
00014C72 <CLIModeSupport.ab3@450> XINCLUDE "CLIModeSupport.ab3"
00014C78 <CLIModeSupport.ab3@451> XINCLUDE "CLIModeSupport.ab3"
00014C7E <CLIModeSupport.ab3@452> XINCLUDE "CLIModeSupport.ab3"
00014CB8 <CLIModeSupport.ab3@453> XINCLUDE "CLIModeSupport.ab3"
00014CC2 <CLIModeSupport.ab3@455> XINCLUDE "CLIModeSupport.ab3"
00014CDC <CLIModeSupport.ab3@456> XINCLUDE "CLIModeSupport.ab3"
00014CFA <CLIModeSupport.ab3@468> XINCLUDE "CLIModeSupport.ab3"
00014D02 <CLIModeSupport.ab3@469> XINCLUDE "CLIModeSupport.ab3"
00014D08 <CLIModeSupport.ab3@470> XINCLUDE "CLIModeSupport.ab3"
00014D0E <CLIModeSupport.ab3@471> XINCLUDE "CLIModeSupport.ab3"
00014D30 <CLIModeSupport.ab3@472> XINCLUDE "CLIModeSupport.ab3"
00014D48 <CLIModeSupport.ab3@474> XINCLUDE "CLIModeSupport.ab3"
00014D6E <CLIModeSupport.ab3@475> XINCLUDE "CLIModeSupport.ab3"
00014D98 <CLIModeSupport.ab3@476> XINCLUDE "CLIModeSupport.ab3"
00014DA6 <CLIModeSupport.ab3@477> XINCLUDE "CLIModeSupport.ab3"
00014DAC <CLIModeSupport.ab3@478> XINCLUDE "CLIModeSupport.ab3"
00014DC0 <CLIModeSupport.ab3@479> XINCLUDE "CLIModeSupport.ab3"
00014DD8 <CLIModeSupport.ab3@481> XINCLUDE "CLIModeSupport.ab3"
00014DE6 <CLIModeSupport.ab3@482> XINCLUDE "CLIModeSupport.ab3"
00014DFA <CLIModeSupport.ab3@483> XINCLUDE "CLIModeSupport.ab3"
00014E30 <CLIModeSupport.ab3@484> XINCLUDE "CLIModeSupport.ab3"
00014E3E <CLIModeSupport.ab3@485> XINCLUDE "CLIModeSupport.ab3"
00014E6E <CLIModeSupport.ab3@486> XINCLUDE "CLIModeSupport.ab3"
00014E7C <CLIModeSupport.ab3@487> XINCLUDE "CLIModeSupport.ab3"
00014E82 <CLIModeSupport.ab3@488> XINCLUDE "CLIModeSupport.ab3"
00014E90 <CLIModeSupport.ab3@489> XINCLUDE "CLIModeSupport.ab3"
00014E96 <CLIModeSupport.ab3@490> XINCLUDE "CLIModeSupport.ab3"
00014E9C <CLIModeSupport.ab3@492> XINCLUDE "CLIModeSupport.ab3"
00014EAA <CLIModeSupport.ab3@493> XINCLUDE "CLIModeSupport.ab3"
00014EAC <CLIModeSupport.ab3@494> XINCLUDE "CLIModeSupport.ab3"
00014EB2 <CLIModeSupport.ab3@496> XINCLUDE "CLIModeSupport.ab3"
00014EC8 <CLIModeSupport.ab3@498> XINCLUDE "CLIModeSupport.ab3"
00014ED2 <CLIModeSupport.ab3@499> XINCLUDE "CLIModeSupport.ab3"
00014ED8 <CLIModeSupport.ab3@500> XINCLUDE "CLIModeSupport.ab3"
00014F02 <CLIModeSupport.ab3@504> XINCLUDE "CLIModeSupport.ab3"
00014F40 <CLIModeSupport.ab3@505> XINCLUDE "CLIModeSupport.ab3"
00014F44 <CLIModeSupport.ab3@506> XINCLUDE "CLIModeSupport.ab3"
00014F82 <CLIModeSupport.ab3@507> XINCLUDE "CLIModeSupport.ab3"
00014F86 <CLIModeSupport.ab3@508> XINCLUDE "CLIModeSupport.ab3"
00014FC4 <CLIModeSupport.ab3@509> XINCLUDE "CLIModeSupport.ab3"
00014FC8 <CLIModeSupport.ab3@510> XINCLUDE "CLIModeSupport.ab3"
00014FD0 <CLIModeSupport.ab3@512> XINCLUDE "CLIModeSupport.ab3"
00014FD8 <CLIModeSupport.ab3@513> XINCLUDE "CLIModeSupport.ab3"
0001501C <CLIModeSupport.ab3@515> XINCLUDE "CLIModeSupport.ab3"
0001502E <CLIModeSupport.ab3@516> XINCLUDE "CLIModeSupport.ab3"
0001503C <CLIModeSupport.ab3@517> XINCLUDE "CLIModeSupport.ab3"
00015070 <CLIModeSupport.ab3@518> XINCLUDE "CLIModeSupport.ab3"
00015094 <CLIModeSupport.ab3@520> XINCLUDE "CLIModeSupport.ab3"
0001509E <CLIModeSupport.ab3@521> XINCLUDE "CLIModeSupport.ab3"
000150B8 <CLIModeSupport.ab3@522> XINCLUDE "CLIModeSupport.ab3"
000150CC <CLIModeSupport.ab3@523> XINCLUDE "CLIModeSupport.ab3"
00015124 <CLIModeSupport.ab3@524> XINCLUDE "CLIModeSupport.ab3"
000151C4 <CLIModeSupport.ab3@525> XINCLUDE "CLIModeSupport.ab3"
000151CC <CLIModeSupport.ab3@526> XINCLUDE "CLIModeSupport.ab3"
00015204 <CLIModeSupport.ab3@527> XINCLUDE "CLIModeSupport.ab3"
0001520A <CLIModeSupport.ab3@528> XINCLUDE "CLIModeSupport.ab3"
0001521A <CLIModeSupport.ab3@529> XINCLUDE "CLIModeSupport.ab3"
00015242 <CLIModeSupport.ab3@532> XINCLUDE "CLIModeSupport.ab3"
0001526A <CLIModeSupport.ab3@533> XINCLUDE "CLIModeSupport.ab3"
00015272 <CLIModeSupport.ab3@534> XINCLUDE "CLIModeSupport.ab3"
00015278 <CLIModeSupport.ab3@535> XINCLUDE "CLIModeSupport.ab3"
00015280 <CLIModeSupport.ab3@536> XINCLUDE "CLIModeSupport.ab3"
00015288 <CLIModeSupport.ab3@537> XINCLUDE "CLIModeSupport.ab3"
000152B0 <CLIModeSupport.ab3@538> XINCLUDE "CLIModeSupport.ab3"
000152B8 <CLIModeSupport.ab3@539> XINCLUDE "CLIModeSupport.ab3"
000152C0 <CLIModeSupport.ab3@540> XINCLUDE "CLIModeSupport.ab3"
000152C6 <CLIModeSupport.ab3@541> XINCLUDE "CLIModeSupport.ab3"
000152CC <CLIModeSupport.ab3@542> XINCLUDE "CLIModeSupport.ab3"
000152D2 <CLIModeSupport.ab3@543> XINCLUDE "CLIModeSupport.ab3"
000152D8 <CLIModeSupport.ab3@544> XINCLUDE "CLIModeSupport.ab3"
000152DE <CLIModeSupport.ab3@545> XINCLUDE "CLIModeSupport.ab3"
000152E4 <CLIModeSupport.ab3@546> XINCLUDE "CLIModeSupport.ab3"
000152EA <CLIModeSupport.ab3@547> XINCLUDE "CLIModeSupport.ab3"
000152F0 <CLIModeSupport.ab3@548> XINCLUDE "CLIModeSupport.ab3"
000152F8 <CLIModeSupport.ab3@549> XINCLUDE "CLIModeSupport.ab3"
00015300 <CLIModeSupport.ab3@550> XINCLUDE "CLIModeSupport.ab3"
00015328 <CLIModeSupport.ab3@551> XINCLUDE "CLIModeSupport.ab3"
0001532E <CLIModeSupport.ab3@552> XINCLUDE "CLIModeSupport.ab3"
00015334 <CLIModeSupport.ab3@553> XINCLUDE "CLIModeSupport.ab3"
0001533C <CLIModeSupport.ab3@554> XINCLUDE "CLIModeSupport.ab3"
0001535C <CLIModeSupport.ab3@558> XINCLUDE "CLIModeSupport.ab3"
0001536C <CLIModeSupport.ab3@560> XINCLUDE "CLIModeSupport.ab3"
0001537C <CLIModeSupport.ab3@561> XINCLUDE "CLIModeSupport.ab3"
0001538C <CLIModeSupport.ab3@563> XINCLUDE "CLIModeSupport.ab3"
0001539C <CLIModeSupport.ab3@564> XINCLUDE "CLIModeSupport.ab3"
000153AC <CLIModeSupport.ab3@565> XINCLUDE "CLIModeSupport.ab3"
000153BC <CLIModeSupport.ab3@566> XINCLUDE "CLIModeSupport.ab3"
000153CC <CLIModeSupport.ab3@567> XINCLUDE "CLIModeSupport.ab3"
000153DC <CLIModeSupport.ab3@568> XINCLUDE "CLIModeSupport.ab3"
000153EC <CLIModeSupport.ab3@569> XINCLUDE "CLIModeSupport.ab3"
000153FC <CLIModeSupport.ab3@570> XINCLUDE "CLIModeSupport.ab3"
0001540C <CLIModeSupport.ab3@571> XINCLUDE "CLIModeSupport.ab3"
0001541C <CLIModeSupport.ab3@572> XINCLUDE "CLIModeSupport.ab3"
0001542C <CLIModeSupport.ab3@573> XINCLUDE "CLIModeSupport.ab3"
0001543C <CLIModeSupport.ab3@574> XINCLUDE "CLIModeSupport.ab3"
0001544C <CLIModeSupport.ab3@575> XINCLUDE "CLIModeSupport.ab3"
0001545C <CLIModeSupport.ab3@576> XINCLUDE "CLIModeSupport.ab3"
0001546E <CLIModeSupport.ab3@578> XINCLUDE "CLIModeSupport.ab3"
00015480 <CLIModeSupport.ab3@579> XINCLUDE "CLIModeSupport.ab3"
00015492 <CLIModeSupport.ab3@580> XINCLUDE "CLIModeSupport.ab3"
000154A4 <CLIModeSupport.ab3@581> XINCLUDE "CLIModeSupport.ab3"
000154B6 <CLIModeSupport.ab3@582> XINCLUDE "CLIModeSupport.ab3"
000154C8 <CLIModeSupport.ab3@583> XINCLUDE "CLIModeSupport.ab3"
000154E6 <CLIModeSupport.ab3@585> XINCLUDE "CLIModeSupport.ab3"
000154EC <CLIModeSupport.ab3@586> XINCLUDE "CLIModeSupport.ab3"
000154F2 <CLIModeSupport.ab3@588> XINCLUDE "CLIModeSupport.ab3"
0001551C <CLIModeSupport.ab3@589> XINCLUDE "CLIModeSupport.ab3"
0001552E <CLIModeSupport.ab3@590> XINCLUDE "CLIModeSupport.ab3"
00015562 <CLIModeSupport.ab3@593> XINCLUDE "CLIModeSupport.ab3"
0001557A <CLIModeSupport.ab3@594> XINCLUDE "CLIModeSupport.ab3"
000155C6 <CLIModeSupport.ab3@595> XINCLUDE "CLIModeSupport.ab3"
000155D8 <CLIModeSupport.ab3@596> XINCLUDE "CLIModeSupport.ab3"
0001562E <CLIModeSupport.ab3@597> XINCLUDE "CLIModeSupport.ab3"
000156A0 <CLIModeSupport.ab3@598> XINCLUDE "CLIModeSupport.ab3"
000156A6 <CLIModeSupport.ab3@599> XINCLUDE "CLIModeSupport.ab3"
000156DA <CLIModeSupport.ab3@600> XINCLUDE "CLIModeSupport.ab3"
00015702 <CLIModeSupport.ab3@601> XINCLUDE "CLIModeSupport.ab3"
0001572A <CLIModeSupport.ab3@603> XINCLUDE "CLIModeSupport.ab3"
00015764 <CLIModeSupport.ab3@604> XINCLUDE "CLIModeSupport.ab3"
0001577C <CLIModeSupport.ab3@605> XINCLUDE "CLIModeSupport.ab3"
00015800 <CLIModeSupport.ab3@606> XINCLUDE "CLIModeSupport.ab3"
0001581A <CLIModeSupport.ab3@607> XINCLUDE "CLIModeSupport.ab3"
00015868 <CLIModeSupport.ab3@608> XINCLUDE "CLIModeSupport.ab3"
00015878 <CLIModeSupport.ab3@610> XINCLUDE "CLIModeSupport.ab3"
00015880 <CLIModeSupport.ab3@612> XINCLUDE "CLIModeSupport.ab3"
00015894 <CLIModeSupport.ab3@613> XINCLUDE "CLIModeSupport.ab3"
000158DA <CLIModeSupport.ab3@614> XINCLUDE "CLIModeSupport.ab3"
000158E0 <CLIModeSupport.ab3@615> XINCLUDE "CLIModeSupport.ab3"
0001592A <CLIModeSupport.ab3@616> XINCLUDE "CLIModeSupport.ab3"
00015994 <CLIModeSupport.ab3@617> XINCLUDE "CLIModeSupport.ab3"
000159FA <CLIModeSupport.ab3@618> XINCLUDE "CLIModeSupport.ab3"
00015A2E <CLIModeSupport.ab3@619> XINCLUDE "CLIModeSupport.ab3"
00015A5A <CLIModeSupport.ab3@621> XINCLUDE "CLIModeSupport.ab3"
00015AA8 <CLIModeSupport.ab3@622> XINCLUDE "CLIModeSupport.ab3"
00015ACC <CLIModeSupport.ab3@623> XINCLUDE "CLIModeSupport.ab3"
00015AD2 <CLIModeSupport.ab3@624> XINCLUDE "CLIModeSupport.ab3"
00015AE0 <CLIModeSupport.ab3@626> XINCLUDE "CLIModeSupport.ab3"
00015B3E <CLIModeSupport.ab3@628> XINCLUDE "CLIModeSupport.ab3"
00015B9C <CLIModeSupport.ab3@629> XINCLUDE "CLIModeSupport.ab3"
00015BC6 <CLIModeSupport.ab3@630> XINCLUDE "CLIModeSupport.ab3"
00015BD0 <CLIModeSupport.ab3@631> XINCLUDE "CLIModeSupport.ab3"
00015BD8 <CLIModeSupport.ab3@632> XINCLUDE "CLIModeSupport.ab3"
00015C16 <CLIModeSupport.ab3@633> XINCLUDE "CLIModeSupport.ab3"
00015C62 <CLIModeSupport.ab3@634> XINCLUDE "CLIModeSupport.ab3"
00015C74 <CLIModeSupport.ab3@635> XINCLUDE "CLIModeSupport.ab3"
00015CCA <CLIModeSupport.ab3@636> XINCLUDE "CLIModeSupport.ab3"
00015D42 <CLIModeSupport.ab3@637> XINCLUDE "CLIModeSupport.ab3"
00015D48 <CLIModeSupport.ab3@638> XINCLUDE "CLIModeSupport.ab3"
00015D7C <CLIModeSupport.ab3@639> XINCLUDE "CLIModeSupport.ab3"
00015DA4 <CLIModeSupport.ab3@640> XINCLUDE "CLIModeSupport.ab3"
00015DDA <CLIModeSupport.ab3@643> XINCLUDE "CLIModeSupport.ab3"
00015DE8 <CLIModeSupport.ab3@644> XINCLUDE "CLIModeSupport.ab3"
00015DF6 <CLIModeSupport.ab3@645> XINCLUDE "CLIModeSupport.ab3"
00015E6A <CLIModeSupport.ab3@646> XINCLUDE "CLIModeSupport.ab3"
00015E70 <CLIModeSupport.ab3@647> XINCLUDE "CLIModeSupport.ab3"
00015EBA <CLIModeSupport.ab3@648> XINCLUDE "CLIModeSupport.ab3"
00015F04 <CLIModeSupport.ab3@649> XINCLUDE "CLIModeSupport.ab3"
00015F34 <CLIModeSupport.ab3@650> XINCLUDE "CLIModeSupport.ab3"
00015F64 <CLIModeSupport.ab3@651> XINCLUDE "CLIModeSupport.ab3"
00015F8E <CLIModeSupport.ab3@652> XINCLUDE "CLIModeSupport.ab3"
00015FE0 <CLIModeSupport.ab3@653> XINCLUDE "CLIModeSupport.ab3"
00016036 <CLIModeSupport.ab3@654> XINCLUDE "CLIModeSupport.ab3"
00016086 <CLIModeSupport.ab3@655> XINCLUDE "CLIModeSupport.ab3"
000160EC <CLIModeSupport.ab3@656> XINCLUDE "CLIModeSupport.ab3"
00016158 <CLIModeSupport.ab3@657> XINCLUDE "CLIModeSupport.ab3"
00016184 <CLIModeSupport.ab3@658> XINCLUDE "CLIModeSupport.ab3"
000161B4 <CLIModeSupport.ab3@659> XINCLUDE "CLIModeSupport.ab3"
00016230 <CLIModeSupport.ab3@660> XINCLUDE "CLIModeSupport.ab3"
00016260 <CLIModeSupport.ab3@661> XINCLUDE "CLIModeSupport.ab3"
00016290 <CLIModeSupport.ab3@662> XINCLUDE "CLIModeSupport.ab3"
000162C0 <CLIModeSupport.ab3@663> XINCLUDE "CLIModeSupport.ab3"
000162F0 <CLIModeSupport.ab3@664> XINCLUDE "CLIModeSupport.ab3"
00016320 <CLIModeSupport.ab3@665> XINCLUDE "CLIModeSupport.ab3"
00016350 <CLIModeSupport.ab3@666> XINCLUDE "CLIModeSupport.ab3"
00016380 <CLIModeSupport.ab3@667> XINCLUDE "CLIModeSupport.ab3"
000163B0 <CLIModeSupport.ab3@668> XINCLUDE "CLIModeSupport.ab3"
000163E0 <CLIModeSupport.ab3@669> XINCLUDE "CLIModeSupport.ab3"
00016410 <CLIModeSupport.ab3@670> XINCLUDE "CLIModeSupport.ab3"
0001648C <CLIModeSupport.ab3@671> XINCLUDE "CLIModeSupport.ab3"
000164BE <CLIModeSupport.ab3@672> XINCLUDE "CLIModeSupport.ab3"
000164F0 <CLIModeSupport.ab3@673> XINCLUDE "CLIModeSupport.ab3"
00016520 <CLIModeSupport.ab3@674> XINCLUDE "CLIModeSupport.ab3"
00016526 <CLIModeSupport.ab3@675> XINCLUDE "CLIModeSupport.ab3"
0001659A <CLIModeSupport.ab3@676> XINCLUDE "CLIModeSupport.ab3"
00016606 <CLIModeSupport.ab3@677> XINCLUDE "CLIModeSupport.ab3"
00016618 <CLIModeSupport.ab3@678> XINCLUDE "CLIModeSupport.ab3"
00016646 <CLIModeSupport.ab3@679> XINCLUDE "CLIModeSupport.ab3"
0001666E <CLIModeSupport.ab3@680> XINCLUDE "CLIModeSupport.ab3"
00016682 <CLIModeSupport.ab3@681> XINCLUDE "CLIModeSupport.ab3"
000166AC <CLIModeSupport.ab3@682> XINCLUDE "CLIModeSupport.ab3"
000166F0 <CLIModeSupport.ab3@683> XINCLUDE "CLIModeSupport.ab3"
00016700 <CLIModeSupport.ab3@684> XINCLUDE "CLIModeSupport.ab3"
00016710 <CLIModeSupport.ab3@685> XINCLUDE "CLIModeSupport.ab3"
00016716 <CLIModeSupport.ab3@686> XINCLUDE "CLIModeSupport.ab3"
00016726 <CLIModeSupport.ab3@688> XINCLUDE "CLIModeSupport.ab3"
00016734 <CLIModeSupport.ab3@692> XINCLUDE "CLIModeSupport.ab3"
0001673E <CLIModeSupport.ab3@695> XINCLUDE "CLIModeSupport.ab3"
00016776 <CLIModeSupport.ab3@698> XINCLUDE "CLIModeSupport.ab3"
000167AE <CLIModeSupport.ab3@699> XINCLUDE "CLIModeSupport.ab3"
000167E6 <CLIModeSupport.ab3@700> XINCLUDE "CLIModeSupport.ab3"
000167F6 <CLIModeSupport.ab3@701> XINCLUDE "CLIModeSupport.ab3"
0001685E <CLIModeSupport.ab3@702> XINCLUDE "CLIModeSupport.ab3"
00016896 <CLIModeSupport.ab3@703> XINCLUDE "CLIModeSupport.ab3"
000168A6 <CLIModeSupport.ab3@704> XINCLUDE "CLIModeSupport.ab3"
000168B6 <CLIModeSupport.ab3@705> XINCLUDE "CLIModeSupport.ab3"
0001691E <CLIModeSupport.ab3@706> XINCLUDE "CLIModeSupport.ab3"
00016986 <CLIModeSupport.ab3@707> XINCLUDE "CLIModeSupport.ab3"
000169EE <CLIModeSupport.ab3@708> XINCLUDE "CLIModeSupport.ab3"
00016A56 <CLIModeSupport.ab3@709> XINCLUDE "CLIModeSupport.ab3"
00016ABE <CLIModeSupport.ab3@710> XINCLUDE "CLIModeSupport.ab3"
00016B26 <CLIModeSupport.ab3@711> XINCLUDE "CLIModeSupport.ab3"
00016B8E <CLIModeSupport.ab3@712> XINCLUDE "CLIModeSupport.ab3"
00016BF6 <CLIModeSupport.ab3@713> XINCLUDE "CLIModeSupport.ab3"
00016C06 <CLIModeSupport.ab3@714> XINCLUDE "CLIModeSupport.ab3"
00016C3E <CLIModeSupport.ab3@716> XINCLUDE "CLIModeSupport.ab3"
00016C78 <CLIModeSupport.ab3@717> XINCLUDE "CLIModeSupport.ab3"
00016CB2 <CLIModeSupport.ab3@718> XINCLUDE "CLIModeSupport.ab3"
00016CEA <CLIModeSupport.ab3@719> XINCLUDE "CLIModeSupport.ab3"
00016D06 <CLIModeSupport.ab3@720> XINCLUDE "CLIModeSupport.ab3"
00016D3E <CLIModeSupport.ab3@721> XINCLUDE "CLIModeSupport.ab3"
00016D64 <CLIModeSupport.ab3@723> XINCLUDE "CLIModeSupport.ab3"
00016D6C <CLIModeSupport.ab3@726> XINCLUDE "CLIModeSupport.ab3"
00016D74 <CLIModeSupport.ab3@728> XINCLUDE "CLIModeSupport.ab3"
00016D7C <CLIModeSupport.ab3@729> XINCLUDE "CLIModeSupport.ab3"
00016D84 <CLIModeSupport.ab3@731> XINCLUDE "CLIModeSupport.ab3"
00016D98 <CLIModeSupport.ab3@732> XINCLUDE "CLIModeSupport.ab3"
00016DC6 <CLIModeSupport.ab3@733> XINCLUDE "CLIModeSupport.ab3"
00016DE0 <CLIModeSupport.ab3@734> XINCLUDE "CLIModeSupport.ab3"
00016DEE <CLIModeSupport.ab3@735> XINCLUDE "CLIModeSupport.ab3"
00016E5A <CLIModeSupport.ab3@736> XINCLUDE "CLIModeSupport.ab3"
00016E80 <CLIModeSupport.ab3@737> XINCLUDE "CLIModeSupport.ab3"
00016E9C <CLIModeSupport.ab3@738> XINCLUDE "CLIModeSupport.ab3"
00016EA6 <CLIModeSupport.ab3@739> XINCLUDE "CLIModeSupport.ab3"
00016EB0 <CLIModeSupport.ab3@740> XINCLUDE "CLIModeSupport.ab3"
00016EBC <CLIModeSupport.ab3@741> XINCLUDE "CLIModeSupport.ab3"
00016ECA <CLIModeSupport.ab3@742> XINCLUDE "CLIModeSupport.ab3"
00016ED6 <CLIModeSupport.ab3@743> XINCLUDE "CLIModeSupport.ab3"
00016F12 <CLIModeSupport.ab3@744> XINCLUDE "CLIModeSupport.ab3"
00016F2C <CLIModeSupport.ab3@745> XINCLUDE "CLIModeSupport.ab3"
00016F3A <CLIModeSupport.ab3@746> XINCLUDE "CLIModeSupport.ab3"
00016F5A <CLIModeSupport.ab3@747> XINCLUDE "CLIModeSupport.ab3"
00016F68 <CLIModeSupport.ab3@748> XINCLUDE "CLIModeSupport.ab3"
00016F76 <CLIModeSupport.ab3@749> XINCLUDE "CLIModeSupport.ab3"
00016F7C <CLIModeSupport.ab3@751> XINCLUDE "CLIModeSupport.ab3"
00016F8C <CLIModeSupport.ab3@752> XINCLUDE "CLIModeSupport.ab3"
00016F90 <CLIModeSupport.ab3@754> XINCLUDE "CLIModeSupport.ab3"
00016FC4 <CLIModeSupport.ab3@755> XINCLUDE "CLIModeSupport.ab3"
00016FF8 <CLIModeSupport.ab3@756> XINCLUDE "CLIModeSupport.ab3"
00016FFC <CLIModeSupport.ab3@757> XINCLUDE "CLIModeSupport.ab3"
00017030 <CLIModeSupport.ab3@758> XINCLUDE "CLIModeSupport.ab3"
00017034 <CLIModeSupport.ab3@759> XINCLUDE "CLIModeSupport.ab3"
00017068 <CLIModeSupport.ab3@760> XINCLUDE "CLIModeSupport.ab3"
0001706E <CLIModeSupport.ab3@761> XINCLUDE "CLIModeSupport.ab3"
000170A4 <CLIModeSupport.ab3@763> XINCLUDE "CLIModeSupport.ab3"
000170DA <CLIModeSupport.ab3@764> XINCLUDE "CLIModeSupport.ab3"
00017110 <CLIModeSupport.ab3@765> XINCLUDE "CLIModeSupport.ab3"
00017148 <CLIModeSupport.ab3@766> XINCLUDE "CLIModeSupport.ab3"
00017180 <CLIModeSupport.ab3@767> XINCLUDE "CLIModeSupport.ab3"
00017220 <CLIModeSupport.ab3@769> XINCLUDE "CLIModeSupport.ab3"
00017260 <CLIModeSupport.ab3@770> XINCLUDE "CLIModeSupport.ab3"
00017296 <CLIModeSupport.ab3@771> XINCLUDE "CLIModeSupport.ab3"
000172CC <CLIModeSupport.ab3@772> XINCLUDE "CLIModeSupport.ab3"
00017304 <CLIModeSupport.ab3@775> XINCLUDE "CLIModeSupport.ab3"
00017322 <CLIModeSupport.ab3@776> XINCLUDE "CLIModeSupport.ab3"
00017326 <CLIModeSupport.ab3@777> XINCLUDE "CLIModeSupport.ab3"
0001732C <CLIModeSupport.ab3@778> XINCLUDE "CLIModeSupport.ab3"
00017332 <CLIModeSupport.ab3@779> XINCLUDE "CLIModeSupport.ab3"
00017336 <CLIModeSupport.ab3@780> XINCLUDE "CLIModeSupport.ab3"
00017360 <CLIModeSupport.ab3@781> XINCLUDE "CLIModeSupport.ab3"
00017374 <CLIModeSupport.ab3@785> XINCLUDE "CLIModeSupport.ab3"
000173B2 <CLIModeSupport.ab3@786> XINCLUDE "CLIModeSupport.ab3"
000173E6 <CLIModeSupport.ab3@787> XINCLUDE "CLIModeSupport.ab3"
0001741C <CLIModeSupport.ab3@791> XINCLUDE "CLIModeSupport.ab3"
00017474 <CLIModeSupport.ab3@793> XINCLUDE "CLIModeSupport.ab3"
000174A2 <CLIModeSupport.ab3@794> XINCLUDE "CLIModeSupport.ab3"
000174A6 <CLIModeSupport.ab3@795> XINCLUDE "CLIModeSupport.ab3"
000174DC <CLIModeSupport.ab3@796> XINCLUDE "CLIModeSupport.ab3"
0001750A <CLIModeSupport.ab3@797> XINCLUDE "CLIModeSupport.ab3"
00017538 <CLIModeSupport.ab3@799> XINCLUDE "CLIModeSupport.ab3"
0001753C <CLIModeSupport.ab3@800> XINCLUDE "CLIModeSupport.ab3"
00017572 <CLIModeSupport.ab3@801> XINCLUDE "CLIModeSupport.ab3"
000175A0 <CLIModeSupport.ab3@803> XINCLUDE "CLIModeSupport.ab3"
000175A4 <CLIModeSupport.ab3@804> XINCLUDE "CLIModeSupport.ab3"
00017608 <CLIModeSupport.ab3@805> XINCLUDE "CLIModeSupport.ab3"
0001760E <CLIModeSupport.ab3@808> XINCLUDE "CLIModeSupport.ab3"
00017648 <CLIModeSupport.ab3@809> XINCLUDE "CLIModeSupport.ab3"
00017652 <CLIModeSupport.ab3@812> XINCLUDE "CLIModeSupport.ab3"
0001765C <CLIModeSupport.ab3@814> XINCLUDE "CLIModeSupport.ab3"
00017676 <CLIModeSupport.ab3@815> XINCLUDE "CLIModeSupport.ab3"
000176A0 <CLIModeSupport.ab3@818> XINCLUDE "CLIModeSupport.ab3"
000176A6 <CLIModeSupport.ab3@819> XINCLUDE "CLIModeSupport.ab3"
000176C6 <CLIModeSupport.ab3@820> XINCLUDE "CLIModeSupport.ab3"
000176D0 <CLIModeSupport.ab3@821> XINCLUDE "CLIModeSupport.ab3"
000176D4 <CLIModeSupport.ab3@822> XINCLUDE "CLIModeSupport.ab3"
000176D6 <CLIModeSupport.ab3@823> XINCLUDE "CLIModeSupport.ab3"
000176F4 <CLIModeSupport.ab3@824> XINCLUDE "CLIModeSupport.ab3"
000176F6 <CLIModeSupport.ab3@825> XINCLUDE "CLIModeSupport.ab3"
000176FC <CLIModeSupport.ab3@826> XINCLUDE "CLIModeSupport.ab3"
00017702 <CLIModeSupport.ab3@828> XINCLUDE "CLIModeSupport.ab3"
0001772C <CLIModeSupport.ab3@829> XINCLUDE "CLIModeSupport.ab3"
0001772E <CLIModeSupport.ab3@830> XINCLUDE "CLIModeSupport.ab3"
0001775C <CLIModeSupport.ab3@831> XINCLUDE "CLIModeSupport.ab3"
00017760 <CLIModeSupport.ab3@832> XINCLUDE "CLIModeSupport.ab3"
0001778E <CLIModeSupport.ab3@833> XINCLUDE "CLIModeSupport.ab3"
00017792 <CLIModeSupport.ab3@834> XINCLUDE "CLIModeSupport.ab3"
000177B8 <CLIModeSupport.ab3@835> XINCLUDE "CLIModeSupport.ab3"
000177C8 <CLIModeSupport.ab3@836> XINCLUDE "CLIModeSupport.ab3"
000177CE <CLIModeSupport.ab3@837> XINCLUDE "CLIModeSupport.ab3"
000177D4 <CLIModeSupport.ab3@838> XINCLUDE "CLIModeSupport.ab3"
0001780E <CLIModeSupport.ab3@839> XINCLUDE "CLIModeSupport.ab3"
00017818 <CLIModeSupport.ab3@841> XINCLUDE "CLIModeSupport.ab3"
00017832 <CLIModeSupport.ab3@842> XINCLUDE "CLIModeSupport.ab3"
00017850 <CLIModeSupport.ab3@845> XINCLUDE "CLIModeSupport.ab3"
0001787A <CLIModeSupport.ab3@846> XINCLUDE "CLIModeSupport.ab3"
000178A8 <CLIModeSupport.ab3@847> XINCLUDE "CLIModeSupport.ab3"
00017938 <CLIModeSupport.ab3@848> XINCLUDE "CLIModeSupport.ab3"
00017942 <CLIModeSupport.ab3@850> XINCLUDE "CLIModeSupport.ab3"
00017956 <CLIModeSupport.ab3@851> XINCLUDE "CLIModeSupport.ab3"
00017992 <CLIModeSupport.ab3@852> XINCLUDE "CLIModeSupport.ab3"
000179CE <CLIModeSupport.ab3@853> XINCLUDE "CLIModeSupport.ab3"
00017A0A <CLIModeSupport.ab3@854> XINCLUDE "CLIModeSupport.ab3"
00017A46 <CLIModeSupport.ab3@855> XINCLUDE "CLIModeSupport.ab3"
00017A82 <CLIModeSupport.ab3@856> XINCLUDE "CLIModeSupport.ab3"
00017A88 <CLIModeSupport.ab3@857> XINCLUDE "CLIModeSupport.ab3"
00017AC2 <CLIModeSupport.ab3@858> XINCLUDE "CLIModeSupport.ab3"
00017AD4 <CLIModeSupport.ab3@863> XINCLUDE "CLIModeSupport.ab3"
00017AE4 <CLIModeSupport.ab3@864> XINCLUDE "CLIModeSupport.ab3"
00017AF0 <CLIModeSupport.ab3@867> XINCLUDE "CLIModeSupport.ab3"
00017B0A <CLIModeSupport.ab3@868> XINCLUDE "CLIModeSupport.ab3"
00017B0C <CLIModeSupport.ab3@870> XINCLUDE "CLIModeSupport.ab3"
00017B2A <CLIModeSupport.ab3@871> XINCLUDE "CLIModeSupport.ab3"
00017B30 <CLIModeSupport.ab3@872> XINCLUDE "CLIModeSupport.ab3"
00017B5A <CLIModeSupport.ab3@873> XINCLUDE "CLIModeSupport.ab3"
00017B5C <CLIModeSupport.ab3@874> XINCLUDE "CLIModeSupport.ab3"
00017B66 <CLIModeSupport.ab3@876> XINCLUDE "CLIModeSupport.ab3"
00017B6C <CLIModeSupport.ab3@877> XINCLUDE "CLIModeSupport.ab3"
00017B7E <CLIModeSupport.ab3@880> XINCLUDE "CLIModeSupport.ab3"
00017BB8 <CLIModeSupport.ab3@897> XINCLUDE "CLIModeSupport.ab3"
00017BD2 <CLIModeSupport.ab3@901> XINCLUDE "CLIModeSupport.ab3"
00017BE6 <CLIModeSupport.ab3@903> XINCLUDE "CLIModeSupport.ab3"
00017C50 <CLIModeSupport.ab3@904> XINCLUDE "CLIModeSupport.ab3"
00017C56 <CLIModeSupport.ab3@905> XINCLUDE "CLIModeSupport.ab3"
00017CC0 <CLIModeSupport.ab3@906> XINCLUDE "CLIModeSupport.ab3"
00017CD4 <CLIModeSupport.ab3@909> XINCLUDE "CLIModeSupport.ab3"
00017D3E <CLIModeSupport.ab3@910> XINCLUDE "CLIModeSupport.ab3"
00017D74 <CLIModeSupport.ab3@911> XINCLUDE "CLIModeSupport.ab3"
00017D7A <CLIModeSupport.ab3@912> XINCLUDE "CLIModeSupport.ab3"
00017DE4 <CLIModeSupport.ab3@913> XINCLUDE "CLIModeSupport.ab3"
00017DF8 <CLIModeSupport.ab3@914> XINCLUDE "CLIModeSupport.ab3"
00017E2E <CLIModeSupport.ab3@915> XINCLUDE "CLIModeSupport.ab3"
00017E34 <CLIModeSupport.ab3@916> XINCLUDE "CLIModeSupport.ab3"
00017E6A <CLIModeSupport.ab3@917> XINCLUDE "CLIModeSupport.ab3"
00017E7E <CLIModeSupport.ab3@921> XINCLUDE "CLIModeSupport.ab3"
00017EE8 <CLIModeSupport.ab3@922> XINCLUDE "CLIModeSupport.ab3"
00017EEE <CLIModeSupport.ab3@923> XINCLUDE "CLIModeSupport.ab3"
00017F58 <CLIModeSupport.ab3@924> XINCLUDE "CLIModeSupport.ab3"
00017F6C <CLIModeSupport.ab3@927> XINCLUDE "CLIModeSupport.ab3"
00017FA2 <CLIModeSupport.ab3@928> XINCLUDE "CLIModeSupport.ab3"
00017FA8 <CLIModeSupport.ab3@929> XINCLUDE "CLIModeSupport.ab3"
00017FDE <CLIModeSupport.ab3@930> XINCLUDE "CLIModeSupport.ab3"
00017FF8 <CLIModeSupport.ab3@935> XINCLUDE "CLIModeSupport.ab3"
0001800C <CLIModeSupport.ab3@937> XINCLUDE "CLIModeSupport.ab3"
00018076 <CLIModeSupport.ab3@938> XINCLUDE "CLIModeSupport.ab3"
0001807C <CLIModeSupport.ab3@939> XINCLUDE "CLIModeSupport.ab3"
000180E6 <CLIModeSupport.ab3@940> XINCLUDE "CLIModeSupport.ab3"
000180FA <CLIModeSupport.ab3@943> XINCLUDE "CLIModeSupport.ab3"
00018164 <CLIModeSupport.ab3@944> XINCLUDE "CLIModeSupport.ab3"
0001816A <CLIModeSupport.ab3@945> XINCLUDE "CLIModeSupport.ab3"
000181D4 <CLIModeSupport.ab3@946> XINCLUDE "CLIModeSupport.ab3"
000181E8 <CLIModeSupport.ab3@949> XINCLUDE "CLIModeSupport.ab3"
00018252 <CLIModeSupport.ab3@950> XINCLUDE "CLIModeSupport.ab3"
00018258 <CLIModeSupport.ab3@951> XINCLUDE "CLIModeSupport.ab3"
000182C2 <CLIModeSupport.ab3@952> XINCLUDE "CLIModeSupport.ab3"
000182D6 <CLIModeSupport.ab3@955> XINCLUDE "CLIModeSupport.ab3"
00018340 <CLIModeSupport.ab3@956> XINCLUDE "CLIModeSupport.ab3"
00018346 <CLIModeSupport.ab3@957> XINCLUDE "CLIModeSupport.ab3"
000183B0 <CLIModeSupport.ab3@958> XINCLUDE "CLIModeSupport.ab3"
000183C2 <CLIModeSupport.ab3@963> XINCLUDE "CLIModeSupport.ab3"
000183D2 <CLIModeSupport.ab3@964> XINCLUDE "CLIModeSupport.ab3"
000183DC <CLIModeSupport.ab3@967> XINCLUDE "CLIModeSupport.ab3"
00018446 <CLIModeSupport.ab3@968> XINCLUDE "CLIModeSupport.ab3"
0001844C <CLIModeSupport.ab3@969> XINCLUDE "CLIModeSupport.ab3"
000184B6 <CLIModeSupport.ab3@970> XINCLUDE "CLIModeSupport.ab3"
000184C0 <CLIModeSupport.ab3@973> XINCLUDE "CLIModeSupport.ab3"
0001852A <CLIModeSupport.ab3@974> XINCLUDE "CLIModeSupport.ab3"
00018560 <CLIModeSupport.ab3@975> XINCLUDE "CLIModeSupport.ab3"
00018566 <CLIModeSupport.ab3@976> XINCLUDE "CLIModeSupport.ab3"
000185D0 <CLIModeSupport.ab3@978> XINCLUDE "CLIModeSupport.ab3"
00018606 <CLIModeSupport.ab3@979> XINCLUDE "CLIModeSupport.ab3"
0001860E <CLIModeSupport.ab3@982> XINCLUDE "CLIModeSupport.ab3"
0001863C <CLIModeSupport.ab3@984> XINCLUDE "CLIModeSupport.ab3"
00018640 <CLIModeSupport.ab3@985> XINCLUDE "CLIModeSupport.ab3"
00018668 <CLIModeSupport.ab3@986> XINCLUDE "CLIModeSupport.ab3"
0001866E <CLIModeSupport.ab3@989> XINCLUDE "CLIModeSupport.ab3"
00018674 <CLIModeSupport.ab3@992> XINCLUDE "CLIModeSupport.ab3"
0001867A <CLIModeSupport.ab3@993> XINCLUDE "CLIModeSupport.ab3"
00018680 <CLIModeSupport.ab3@994> XINCLUDE "CLIModeSupport.ab3"
00018686 <CLIModeSupport.ab3@995> XINCLUDE "CLIModeSupport.ab3"
00018690 <CLIModeSupport.ab3@996> XINCLUDE "CLIModeSupport.ab3"
0001869A <CLIModeSupport.ab3@997> XINCLUDE "CLIModeSupport.ab3"
000186C8 <CLIModeSupport.ab3@999> XINCLUDE "CLIModeSupport.ab3"
000186F4 <CLIModeSupport.ab3@1001> XINCLUDE "CLIModeSupport.ab3"
000186FC <CLIModeSupport.ab3@1002> XINCLUDE "CLIModeSupport.ab3"
00018762 <CLIModeSupport.ab3@1005> XINCLUDE "CLIModeSupport.ab3"
00018796 <CLIModeSupport.ab3@1006> XINCLUDE "CLIModeSupport.ab3"
0001879C <CLIModeSupport.ab3@1007> XINCLUDE "CLIModeSupport.ab3"
0001881C <CLIModeSupport.ab3@1008> XINCLUDE "CLIModeSupport.ab3"
0001882E <CLIModeSupport.ab3@1010> XINCLUDE "CLIModeSupport.ab3"
00018894 <CLIModeSupport.ab3@1011> XINCLUDE "CLIModeSupport.ab3"
000188FA <CLIModeSupport.ab3@1012> XINCLUDE "CLIModeSupport.ab3"
00018900 <CLIModeSupport.ab3@1013> XINCLUDE "CLIModeSupport.ab3"
00018908 <CLIModeSupport.ab3@1014> XINCLUDE "CLIModeSupport.ab3"
0001890A <CLIModeSupport.ab3@1018> XINCLUDE "CLIModeSupport.ab3"
00018928 <CLIModeSupport.ab3@1019> XINCLUDE "CLIModeSupport.ab3"
00018966 <CLIModeSupport.ab3@1020> XINCLUDE "CLIModeSupport.ab3"
000189A4 <CLIModeSupport.ab3@1021> XINCLUDE "CLIModeSupport.ab3"
000189AA <CLIModeSupport.ab3@1023> XINCLUDE "CLIModeSupport.ab3"
000189B0 <CLIModeSupport.ab3@1024> XINCLUDE "CLIModeSupport.ab3"
000189B6 <CLIModeSupport.ab3@1025> XINCLUDE "CLIModeSupport.ab3"
000189C0 <CLIModeSupport.ab3@1028> XINCLUDE "CLIModeSupport.ab3"
000189C6 <CLIModeSupport.ab3@1029> XINCLUDE "CLIModeSupport.ab3"
000189CC <CLIModeSupport.ab3@1030> XINCLUDE "CLIModeSupport.ab3"
000189D2 <CLIModeSupport.ab3@1031> XINCLUDE "CLIModeSupport.ab3"
000189D8 <CLIModeSupport.ab3@1032> XINCLUDE "CLIModeSupport.ab3"
000189DC <CLIModeSupport.ab3@1033> XINCLUDE "CLIModeSupport.ab3"
000189E6 <CLIModeSupport.ab3@1034> XINCLUDE "CLIModeSupport.ab3"
000189EA <CLIModeSupport.ab3@1035> XINCLUDE "CLIModeSupport.ab3"
00018A14 <CLIModeSupport.ab3@1037> XINCLUDE "CLIModeSupport.ab3"
00018A16 <CLIModeSupport.ab3@1038> XINCLUDE "CLIModeSupport.ab3"
00018A1C <CLIModeSupport.ab3@1040> XINCLUDE "CLIModeSupport.ab3"
00018A20 <CLIModeSupport.ab3@1041> XINCLUDE "CLIModeSupport.ab3"
00018A26 <CLIModeSupport.ab3@1043> XINCLUDE "CLIModeSupport.ab3"
00018A2A <CLIModeSupport.ab3@1044> XINCLUDE "CLIModeSupport.ab3"
00018A3A <CLIModeSupport.ab3@1046> XINCLUDE "CLIModeSupport.ab3"
00018A94 <CLIModeSupport.ab3@1047> XINCLUDE "CLIModeSupport.ab3"
00018AA6 <CLIModeSupport.ab3@1049> XINCLUDE "CLIModeSupport.ab3"
00018B10 <CLIModeSupport.ab3@1050> XINCLUDE "CLIModeSupport.ab3"
00018B16 <CLIModeSupport.ab3@1051> XINCLUDE "CLIModeSupport.ab3"
00018B60 <CLIModeSupport.ab3@1052> XINCLUDE "CLIModeSupport.ab3"
00018B72 <CLIModeSupport.ab3@1055> XINCLUDE "CLIModeSupport.ab3"
00018B9E <CLIModeSupport.ab3@1056> XINCLUDE "CLIModeSupport.ab3"
00018C44 <CLIModeSupport.ab3@1057> XINCLUDE "CLIModeSupport.ab3"
00018C62 <CLIModeSupport.ab3@1058> XINCLUDE "CLIModeSupport.ab3"
00018C68 <CLIModeSupport.ab3@1059> XINCLUDE "CLIModeSupport.ab3"
00018C92 <CLIModeSupport.ab3@1060> XINCLUDE "CLIModeSupport.ab3"
00018C9C <CLIModeSupport.ab3@1061> XINCLUDE "CLIModeSupport.ab3"
00018CCE <CLIModeSupport.ab3@1062> XINCLUDE "CLIModeSupport.ab3"
00018CE8 <CLIModeSupport.ab3@1063> XINCLUDE "CLIModeSupport.ab3"
00018CFC <CLIModeSupport.ab3@1068> XINCLUDE "CLIModeSupport.ab3"
00018D08 <CLIModeSupport.ab3@1070> XINCLUDE "CLIModeSupport.ab3"
00018D22 <CLIModeSupport.ab3@1071> XINCLUDE "CLIModeSupport.ab3"
00018D2C <CLIModeSupport.ab3@1073> XINCLUDE "CLIModeSupport.ab3"
00018D46 <CLIModeSupport.ab3@1075> XINCLUDE "CLIModeSupport.ab3"
00018D70 <CLIModeSupport.ab3@1079> XINCLUDE "CLIModeSupport.ab3"
00018D94 <CLIModeSupport.ab3@1080> XINCLUDE "CLIModeSupport.ab3"
00018DD2 <CLIModeSupport.ab3@1081> XINCLUDE "CLIModeSupport.ab3"
00018DD6 <CLIModeSupport.ab3@1082> XINCLUDE "CLIModeSupport.ab3"
00018E14 <CLIModeSupport.ab3@1084> XINCLUDE "CLIModeSupport.ab3"
00018E18 <CLIModeSupport.ab3@1085> XINCLUDE "CLIModeSupport.ab3"
00018E56 <CLIModeSupport.ab3@1088> XINCLUDE "CLIModeSupport.ab3"
00018E94 <CLIModeSupport.ab3@1089> XINCLUDE "CLIModeSupport.ab3"
00018E96 <CLIModeSupport.ab3@1090> XINCLUDE "CLIModeSupport.ab3"
00018ECA <CLIModeSupport.ab3@1091> XINCLUDE "CLIModeSupport.ab3"
00018ED0 <CLIModeSupport.ab3@1093> XINCLUDE "CLIModeSupport.ab3"
00018F14 <CLIModeSupport.ab3@1094> XINCLUDE "CLIModeSupport.ab3"
00018F26 <CLIModeSupport.ab3@1095> XINCLUDE "CLIModeSupport.ab3"
00018F2E <CLIModeSupport.ab3@1097> XINCLUDE "CLIModeSupport.ab3"
00018F34 <CLIModeSupport.ab3@1098> XINCLUDE "CLIModeSupport.ab3"
00018F3E <CLIModeSupport.ab3@1100> XINCLUDE "CLIModeSupport.ab3"
00018F4C <CLIModeSupport.ab3@1101> XINCLUDE "CLIModeSupport.ab3"
00018F52 <CLIModeSupport.ab3@1102> XINCLUDE "CLIModeSupport.ab3"
00018F7A <CLIModeSupport.ab3@1103> XINCLUDE "CLIModeSupport.ab3"
00018F94 <CLIModeSupport.ab3@1104> XINCLUDE "CLIModeSupport.ab3"
00018F9E <CLIModeSupport.ab3@1105> XINCLUDE "CLIModeSupport.ab3"
00018FA4 <CLIModeSupport.ab3@1106> XINCLUDE "CLIModeSupport.ab3"
00018FC2 <CLIModeSupport.ab3@1108> XINCLUDE "CLIModeSupport.ab3"
00018FCC <CLIModeSupport.ab3@1109> XINCLUDE "CLIModeSupport.ab3"
00018FD2 <CLIModeSupport.ab3@1110> XINCLUDE "CLIModeSupport.ab3"
00018FD8 <CLIModeSupport.ab3@1111> XINCLUDE "CLIModeSupport.ab3"
00018FE2 <CLIModeSupport.ab3@1112> XINCLUDE "CLIModeSupport.ab3"
00018FF0 <CLIModeSupport.ab3@1113> XINCLUDE "CLIModeSupport.ab3"
00018FF6 <CLIModeSupport.ab3@1114> XINCLUDE "CLIModeSupport.ab3"
00019006 <CLIModeSupport.ab3@1116> XINCLUDE "CLIModeSupport.ab3"
00019032 <CLIModeSupport.ab3@1117> XINCLUDE "CLIModeSupport.ab3"
00019048 <CLIModeSupport.ab3@1118> XINCLUDE "CLIModeSupport.ab3"
00019052 <CLIModeSupport.ab3@1119> XINCLUDE "CLIModeSupport.ab3"
00019058 <CLIModeSupport.ab3@1120> XINCLUDE "CLIModeSupport.ab3"
000190B0 <CLIModeSupport.ab3@1122> XINCLUDE "CLIModeSupport.ab3"
0001911E <CLIModeSupport.ab3@1124> XINCLUDE "CLIModeSupport.ab3"
00019136 <CLIModeSupport.ab3@1125> XINCLUDE "CLIModeSupport.ab3"
0001913C <CLIModeSupport.ab3@1126> XINCLUDE "CLIModeSupport.ab3"
00019174 <CLIModeSupport.ab3@1127> XINCLUDE "CLIModeSupport.ab3"
000191A2 <CLIModeSupport.ab3@1129> XINCLUDE "CLIModeSupport.ab3"
000191CC <CLIModeSupport.ab3@1130> XINCLUDE "CLIModeSupport.ab3"
000191D6 <CLIModeSupport.ab3@1132> XINCLUDE "CLIModeSupport.ab3"
000191FE <CLIModeSupport.ab3@1133> XINCLUDE "CLIModeSupport.ab3"
00019228 <CLIModeSupport.ab3@1134> XINCLUDE "CLIModeSupport.ab3"
000192CA <CLIModeSupport.ab3@1135> XINCLUDE "CLIModeSupport.ab3"
000192D8 <CLIModeSupport.ab3@1136> XINCLUDE "CLIModeSupport.ab3"
00019328 <CLIModeSupport.ab3@1137> XINCLUDE "CLIModeSupport.ab3"
00019338 <CLIModeSupport.ab3@1138> XINCLUDE "CLIModeSupport.ab3"
00019400 <CLIModeSupport.ab3@1139> XINCLUDE "CLIModeSupport.ab3"
00019434 <CLIModeSupport.ab3@1141> XINCLUDE "CLIModeSupport.ab3"
00019468 <CLIModeSupport.ab3@1142> XINCLUDE "CLIModeSupport.ab3"
0001949C <CLIModeSupport.ab3@1143> XINCLUDE "CLIModeSupport.ab3"
000194D0 <CLIModeSupport.ab3@1144> XINCLUDE "CLIModeSupport.ab3"
00019504 <CLIModeSupport.ab3@1145> XINCLUDE "CLIModeSupport.ab3"
00019538 <CLIModeSupport.ab3@1146> XINCLUDE "CLIModeSupport.ab3"
0001956C <CLIModeSupport.ab3@1147> XINCLUDE "CLIModeSupport.ab3"
000195A0 <CLIModeSupport.ab3@1148> XINCLUDE "CLIModeSupport.ab3"
000195A2 <CLIModeSupport.ab3@1150> XINCLUDE "CLIModeSupport.ab3"
000195E0 <CLIModeSupport.ab3@1151> XINCLUDE "CLIModeSupport.ab3"
000195E4 <CLIModeSupport.ab3@1152> XINCLUDE "CLIModeSupport.ab3"
00019622 <CLIModeSupport.ab3@1155> XINCLUDE "CLIModeSupport.ab3"
00019660 <CLIModeSupport.ab3@1156> XINCLUDE "CLIModeSupport.ab3"
00019662 <CLIModeSupport.ab3@1157> XINCLUDE "CLIModeSupport.ab3"
00019668 <CLIModeSupport.ab3@1158> XINCLUDE "CLIModeSupport.ab3"
0001966C <CLIModeSupport.ab3@1159> XINCLUDE "CLIModeSupport.ab3"
0001966E <CLIModeSupport.ab3@1161> XINCLUDE "CLIModeSupport.ab3"
000196AC <CLIModeSupport.ab3@1162> XINCLUDE "CLIModeSupport.ab3"
000196EA <CLIModeSupport.ab3@1163> XINCLUDE "CLIModeSupport.ab3"
000196EC <CLIModeSupport.ab3@1164> XINCLUDE "CLIModeSupport.ab3"
000196EE <CLIModeSupport.ab3@1165> XINCLUDE "CLIModeSupport.ab3"
000196F0 <CLIModeSupport.ab3@1166> XINCLUDE "CLIModeSupport.ab3"
000196F6 <CLIModeSupport.ab3@1167> XINCLUDE "CLIModeSupport.ab3"
000196FA <CLIModeSupport.ab3@1168> XINCLUDE "CLIModeSupport.ab3"
0001970A <CLIModeSupport.ab3@1170> XINCLUDE "CLIModeSupport.ab3"
00019722 <CLIModeSupport.ab3@1171> XINCLUDE "CLIModeSupport.ab3"
0001973A <CLIModeSupport.ab3@1172> XINCLUDE "CLIModeSupport.ab3"
00019752 <CLIModeSupport.ab3@1173> XINCLUDE "CLIModeSupport.ab3"
0001977C <CLIModeSupport.ab3@1175> XINCLUDE "CLIModeSupport.ab3"
000197A6 <CLIModeSupport.ab3@1176> XINCLUDE "CLIModeSupport.ab3"
000197D4 <CLIModeSupport.ab3@1178> XINCLUDE "CLIModeSupport.ab3"
000197D8 <CLIModeSupport.ab3@1179> XINCLUDE "CLIModeSupport.ab3"
00019800 <CLIModeSupport.ab3@1180> XINCLUDE "CLIModeSupport.ab3"
00019802 <CLIModeSupport.ab3@1181> XINCLUDE "CLIModeSupport.ab3"
00019840 <CLIModeSupport.ab3@1182> XINCLUDE "CLIModeSupport.ab3"
00019844 <CLIModeSupport.ab3@1183> XINCLUDE "CLIModeSupport.ab3"
00019882 <CLIModeSupport.ab3@1184> XINCLUDE "CLIModeSupport.ab3"
00019886 <CLIModeSupport.ab3@1185> XINCLUDE "CLIModeSupport.ab3"
000198C4 <CLIModeSupport.ab3@1186> XINCLUDE "CLIModeSupport.ab3"
000198C8 <CLIModeSupport.ab3@1187> XINCLUDE "CLIModeSupport.ab3"
00019906 <CLIModeSupport.ab3@1189> XINCLUDE "CLIModeSupport.ab3"
0001990A <CLIModeSupport.ab3@1190> XINCLUDE "CLIModeSupport.ab3"
00019930 <CLIModeSupport.ab3@1192> XINCLUDE "CLIModeSupport.ab3"
00019956 <CLIModeSupport.ab3@1193> XINCLUDE "CLIModeSupport.ab3"
0001997C <CLIModeSupport.ab3@1194> XINCLUDE "CLIModeSupport.ab3"
000199A2 <CLIModeSupport.ab3@1195> XINCLUDE "CLIModeSupport.ab3"
000199C8 <CLIModeSupport.ab3@1196> XINCLUDE "CLIModeSupport.ab3"
00019A1E <CLIModeSupport.ab3@1197> XINCLUDE "CLIModeSupport.ab3"
00019A74 <CLIModeSupport.ab3@1198> XINCLUDE "CLIModeSupport.ab3"
00019AC2 <CLIModeSupport.ab3@1199> XINCLUDE "CLIModeSupport.ab3"
00019B18 <CLIModeSupport.ab3@1200> XINCLUDE "CLIModeSupport.ab3"
00019B3E <CLIModeSupport.ab3@1201> XINCLUDE "CLIModeSupport.ab3"
00019B64 <CLIModeSupport.ab3@1202> XINCLUDE "CLIModeSupport.ab3"
00019B8A <CLIModeSupport.ab3@1203> XINCLUDE "CLIModeSupport.ab3"
00019BE0 <CLIModeSupport.ab3@1204> XINCLUDE "CLIModeSupport.ab3"
00019C2E <CLIModeSupport.ab3@1205> XINCLUDE "CLIModeSupport.ab3"
00019C7C <CLIModeSupport.ab3@1206> XINCLUDE "CLIModeSupport.ab3"
00019D36 <CLIModeSupport.ab3@1207> XINCLUDE "CLIModeSupport.ab3"
00019D8C <CLIModeSupport.ab3@1208> XINCLUDE "CLIModeSupport.ab3"
00019DB2 <CLIModeSupport.ab3@1209> XINCLUDE "CLIModeSupport.ab3"
00019DD8 <CLIModeSupport.ab3@1210> XINCLUDE "CLIModeSupport.ab3"
00019DFE <CLIModeSupport.ab3@1211> XINCLUDE "CLIModeSupport.ab3"
00019E54 <CLIModeSupport.ab3@1212> XINCLUDE "CLIModeSupport.ab3"
00019EAA <CLIModeSupport.ab3@1213> XINCLUDE "CLIModeSupport.ab3"
00019EF8 <CLIModeSupport.ab3@1214> XINCLUDE "CLIModeSupport.ab3"
00019F46 <CLIModeSupport.ab3@1215> XINCLUDE "CLIModeSupport.ab3"
00019F94 <CLIModeSupport.ab3@1216> XINCLUDE "CLIModeSupport.ab3"
00019FE2 <CLIModeSupport.ab3@1217> XINCLUDE "CLIModeSupport.ab3"
0001A030 <CLIModeSupport.ab3@1218> XINCLUDE "CLIModeSupport.ab3"
0001A07E <CLIModeSupport.ab3@1219> XINCLUDE "CLIModeSupport.ab3"
0001A0CC <CLIModeSupport.ab3@1220> XINCLUDE "CLIModeSupport.ab3"
0001A0F2 <CLIModeSupport.ab3@1221> XINCLUDE "CLIModeSupport.ab3"
0001A118 <CLIModeSupport.ab3@1222> XINCLUDE "CLIModeSupport.ab3"
0001A13E <CLIModeSupport.ab3@1223> XINCLUDE "CLIModeSupport.ab3"
0001A18C <CLIModeSupport.ab3@1224> XINCLUDE "CLIModeSupport.ab3"
0001A1DA <CLIModeSupport.ab3@1225> XINCLUDE "CLIModeSupport.ab3"
0001A230 <CLIModeSupport.ab3@1226> XINCLUDE "CLIModeSupport.ab3"
0001A27E <CLIModeSupport.ab3@1227> XINCLUDE "CLIModeSupport.ab3"
0001A2CC <CLIModeSupport.ab3@1228> XINCLUDE "CLIModeSupport.ab3"
0001A31A <CLIModeSupport.ab3@1229> XINCLUDE "CLIModeSupport.ab3"
0001A340 <CLIModeSupport.ab3@1230> XINCLUDE "CLIModeSupport.ab3"
0001A366 <CLIModeSupport.ab3@1231> XINCLUDE "CLIModeSupport.ab3"
0001A38C <CLIModeSupport.ab3@1232> XINCLUDE "CLIModeSupport.ab3"
0001A3C4 <CLIModeSupport.ab3@1233> XINCLUDE "CLIModeSupport.ab3"
0001A3EC <CLIModeSupport.ab3@1234> XINCLUDE "CLIModeSupport.ab3"
0001A400 <CLIModeSupport.ab3@1235> XINCLUDE "CLIModeSupport.ab3"
0001A474 <CLIModeSupport.ab3@1236> XINCLUDE "CLIModeSupport.ab3"
0001A4BA <CLIModeSupport.ab3@1237> XINCLUDE "CLIModeSupport.ab3"
0001A568 <CLIModeSupport.ab3@1238> XINCLUDE "CLIModeSupport.ab3"
0001A5D4 <CLIModeSupport.ab3@1239> XINCLUDE "CLIModeSupport.ab3"
0001A5E4 <CLIModeSupport.ab3@1240> XINCLUDE "CLIModeSupport.ab3"
0001A60A <CLIModeSupport.ab3@1242> XINCLUDE "CLIModeSupport.ab3"
0001A614 <CLIModeSupport.ab3@1244> XINCLUDE "CLIModeSupport.ab3"
0001A63E <CLIModeSupport.ab3@1245> XINCLUDE "CLIModeSupport.ab3"
0001A644 <CLIModeSupport.ab3@1246> XINCLUDE "CLIModeSupport.ab3"
0001A654 <CLIModeSupport.ab3@1248> XINCLUDE "CLIModeSupport.ab3"
0001A6F4 <CLIModeSupport.ab3@1250> XINCLUDE "CLIModeSupport.ab3"
0001A734 <CLIModeSupport.ab3@1251> XINCLUDE "CLIModeSupport.ab3"
0001A73A <CLIModeSupport.ab3@1253> XINCLUDE "CLIModeSupport.ab3"
0001A79C <CLIModeSupport.ab3@1254> XINCLUDE "CLIModeSupport.ab3"
0001A7A6 <CLIModeSupport.ab3@1256> XINCLUDE "CLIModeSupport.ab3"
0001A7B0 <CLIModeSupport.ab3@1258> XINCLUDE "CLIModeSupport.ab3"
0001A7CA <CLIModeSupport.ab3@1259> XINCLUDE "CLIModeSupport.ab3"
0001A7EC <CLIModeSupport.ab3@1335> XINCLUDE "CLIModeSupport.ab3"
0001A80E <CLIModeSupport.ab3@1336> XINCLUDE "CLIModeSupport.ab3"
0001A868 <CLIModeSupport.ab3@1337> XINCLUDE "CLIModeSupport.ab3"
0001A88A <CLIModeSupport.ab3@1338> XINCLUDE "CLIModeSupport.ab3"
0001A8AC <CLIModeSupport.ab3@1339> XINCLUDE "CLIModeSupport.ab3"
0001A906 <CLIModeSupport.ab3@1340> XINCLUDE "CLIModeSupport.ab3"
0001A948 <CLIModeSupport.ab3@1341> XINCLUDE "CLIModeSupport.ab3"
0001A94E <CLIModeSupport.ab3@1343> XINCLUDE "CLIModeSupport.ab3"
0001A95C <CLIModeSupport.ab3@1344> XINCLUDE "CLIModeSupport.ab3"
0001A962 <CLIModeSupport.ab3@1346> XINCLUDE "CLIModeSupport.ab3"
0001A976 <CLIModeSupport.ab3@1347> XINCLUDE "CLIModeSupport.ab3"
0001A980 <CLIModeSupport.ab3@1348> XINCLUDE "CLIModeSupport.ab3"
0001A9FA <CLIModeSupport.ab3@1349> XINCLUDE "CLIModeSupport.ab3"
0001AA04 <CLIModeSupport.ab3@1350> XINCLUDE "CLIModeSupport.ab3"
0001AA0A <CLIModeSupport.ab3@1351> XINCLUDE "CLIModeSupport.ab3"
0001AA1E <CLIModeSupport.ab3@1354> XINCLUDE "CLIModeSupport.ab3"
0001AA28 <CLIModeSupport.ab3@1355> XINCLUDE "CLIModeSupport.ab3"
0001AAA8 <CLIModeSupport.ab3@1356> XINCLUDE "CLIModeSupport.ab3"
0001AAB2 <CLIModeSupport.ab3@1357> XINCLUDE "CLIModeSupport.ab3"
0001AAB8 <CLIModeSupport.ab3@1358> XINCLUDE "CLIModeSupport.ab3"
0001AACC <CLIModeSupport.ab3@1361> XINCLUDE "CLIModeSupport.ab3"
0001AAD6 <CLIModeSupport.ab3@1362> XINCLUDE "CLIModeSupport.ab3"
0001AB1E <CLIModeSupport.ab3@1363> XINCLUDE "CLIModeSupport.ab3"
0001AB2C <CLIModeSupport.ab3@1364> XINCLUDE "CLIModeSupport.ab3"
0001AB52 <CLIModeSupport.ab3@1365> XINCLUDE "CLIModeSupport.ab3"
0001AB5C <CLIModeSupport.ab3@1366> XINCLUDE "CLIModeSupport.ab3"
0001ABC6 <CLIModeSupport.ab3@1367> XINCLUDE "CLIModeSupport.ab3"
0001AC98 <CLIModeSupport.ab3@1368> XINCLUDE "CLIModeSupport.ab3"
0001ACA2 <CLIModeSupport.ab3@1369> XINCLUDE "CLIModeSupport.ab3"
0001ACA8 <CLIModeSupport.ab3@1370> XINCLUDE "CLIModeSupport.ab3"
0001ACB2 <CLIModeSupport.ab3@1372> XINCLUDE "CLIModeSupport.ab3"
0001ACB8 <CLIModeSupport.ab3@1373> XINCLUDE "CLIModeSupport.ab3"
0001ACCC <CLIModeSupport.ab3@1376> XINCLUDE "CLIModeSupport.ab3"
0001ACD6 <CLIModeSupport.ab3@1377> XINCLUDE "CLIModeSupport.ab3"
0001AD1E <CLIModeSupport.ab3@1378> XINCLUDE "CLIModeSupport.ab3"
0001AD28 <CLIModeSupport.ab3@1379> XINCLUDE "CLIModeSupport.ab3"
0001AD2E <CLIModeSupport.ab3@1380> XINCLUDE "CLIModeSupport.ab3"
0001AD42 <CLIModeSupport.ab3@1383> XINCLUDE "CLIModeSupport.ab3"
0001AD68 <CLIModeSupport.ab3@1384> XINCLUDE "CLIModeSupport.ab3"
0001AD7C <CLIModeSupport.ab3@1387> XINCLUDE "CLIModeSupport.ab3"
0001ADA2 <CLIModeSupport.ab3@1388> XINCLUDE "CLIModeSupport.ab3"
0001ADB6 <CLIModeSupport.ab3@1391> XINCLUDE "CLIModeSupport.ab3"
0001ADDC <CLIModeSupport.ab3@1392> XINCLUDE "CLIModeSupport.ab3"
0001ADF0 <CLIModeSupport.ab3@1395> XINCLUDE "CLIModeSupport.ab3"
0001ADFA <CLIModeSupport.ab3@1396> XINCLUDE "CLIModeSupport.ab3"
0001AE28 <CLIModeSupport.ab3@1397> XINCLUDE "CLIModeSupport.ab3"
0001AE78 <CLIModeSupport.ab3@1398> XINCLUDE "CLIModeSupport.ab3"
0001AE98 <CLIModeSupport.ab3@1399> XINCLUDE "CLIModeSupport.ab3"
0001AEB0 <CLIModeSupport.ab3@1400> XINCLUDE "CLIModeSupport.ab3"
0001AF94 <CLIModeSupport.ab3@1401> XINCLUDE "CLIModeSupport.ab3"
0001AF9E <CLIModeSupport.ab3@1402> XINCLUDE "CLIModeSupport.ab3"
0001AFA4 <CLIModeSupport.ab3@1403> XINCLUDE "CLIModeSupport.ab3"
0001AFA6 <CLIModeSupport.ab3@1405> XINCLUDE "CLIModeSupport.ab3"
0001AFBA <CLIModeSupport.ab3@1406> XINCLUDE "CLIModeSupport.ab3"
0001AFEC <CLIModeSupport.ab3@1409> XINCLUDE "CLIModeSupport.ab3"
0001AFF2 <CLIModeSupport.ab3@1410> XINCLUDE "CLIModeSupport.ab3"
0001B036 <CLIModeSupport.ab3@1411> XINCLUDE "CLIModeSupport.ab3"
0001B048 <CLIModeSupport.ab3@1412> XINCLUDE "CLIModeSupport.ab3"
0001B05A <CLIModeSupport.ab3@1413> XINCLUDE "CLIModeSupport.ab3"
0001B064 <CLIModeSupport.ab3@1414> XINCLUDE "CLIModeSupport.ab3"
0001B06A <CLIModeSupport.ab3@1415> XINCLUDE "CLIModeSupport.ab3"
0001B074 <CLIModeSupport.ab3@1417> XINCLUDE "CLIModeSupport.ab3"
0001B08E <CLIModeSupport.ab3@1418> XINCLUDE "CLIModeSupport.ab3"
0001B08E <AmiBlitz3.ab3@93> XINCLUDE "CLIModeSupport.ab3"
0001B10E <AmiBlitz3.ab3@98> dynassign.s = dos_GetToolString{"ASSIGN",default_assign$}       ; replaced hardcoded path  tomsmart1 2012 03 09
0001B146 <AmiBlitz3.ab3@99> If dynassign <> ""
0001B15C <AmiBlitz3.ab3@100>     *AssignSema.SignalSemaphore = FindSemaphore_(&dynassign)    ; does it already exist?
0001B166 <AmiBlitz3.ab3@101>     If *AssignSema
0001B176 <AmiBlitz3.ab3@102>       ObtainSemaphoreShared_ *AssignSema
0001B17C <AmiBlitz3.ab3@103>     Else                                                        ; no, create one...
0001B19C <AmiBlitz3.ab3@104>       *AssignSema = AllocVec_ (SizeOf.SignalSemaphore,#MEMF_PUBLIC|#MEMF_CLEAR)
0001B1A6 <AmiBlitz3.ab3@105>       If *AssignSema
0001B1B6 <AmiBlitz3.ab3@106>         InitSemaphore_ *AssignSema
0001B1EA <AmiBlitz3.ab3@108>         *AssignSema\ss_Link\ln_Name = AllocVec_(FLen(dynassign)+1,#MEMF_PUBLIC|#MEMF_CLEAR)
0001B1FC <AmiBlitz3.ab3@109>         If *AssignSema\ss_Link\ln_Name
0001B238 <AmiBlitz3.ab3@110>           Poke.s  *AssignSema\ss_Link\ln_Name,dynassign
0001B244 <AmiBlitz3.ab3@112>         *AssignSema\ss_Link\ln_Pri  = 1
0001B250 <AmiBlitz3.ab3@113>         *AssignSema\ss_Link\ln_Type = #NT_SIGNALSEM
0001B260 <AmiBlitz3.ab3@115>         AddSemaphore_ *AssignSema
0001B270 <AmiBlitz3.ab3@116>         ObtainSemaphoreShared_ *AssignSema
0001B2BC <AmiBlitz3.ab3@122>   mydir.s = dos_GetProgDir{"Sys:"}
0001B31C <AmiBlitz3.ab3@123>   If dos_SetAssign{dynassign,mydir,False}
0001B3B0 <AmiBlitz3.ab3@124>     dos_AddAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001B3E8 <AmiBlitz3.ab3@127>   Poke$ ?str_blitz3assign,dynassign
0001B46A <AmiBlitz3.ab3@128>   Poke$ ?str_defaultdbug,dos_AddPart{dynassign,"Debug/DefaultDBug"}
0001B4EC <AmiBlitz3.ab3@131>   Poke$ ?str_path_acidlibs,dos_AddPart{dynassign, "BlitzLibs/AcidLibs"}
0001B56E <AmiBlitz3.ab3@132>   Poke$ ?str_path_deflibs ,dos_AddPart{dynassign, "BlitzLibs/DefLibs" }
0001B5F0 <AmiBlitz3.ab3@133>   Poke$ ?str_path_userlibs,dos_AddPart{dynassign, "BlitzLibs/UserLibs"}
0001B672 <AmiBlitz3.ab3@134>   Poke$ ?str_path_includes,dos_AddPart{dynassign, "Sourcecodes/Includes"}
0001B6E6 <AmiBlitz3.ab3@135>   my_systemdir$    = dos_AddPart{dynassign, "System"}
0001B75A <AmiBlitz3.ab3@136>   my_residentsdir$ = dos_AddPart{dynassign, "BlitzLibs/Residents"}
0001B7CE <AmiBlitz3.ab3@137>   my_blitzlibsdir$ = dos_AddPart{dynassign, "BlitzLibs"}
0001B7FC <AmiBlitz3.ab3@138>   dos_CreateDir{my_blitzlibsdir$}
0001B820 <AmiBlitz3.ab3@139>   dos_CreateDir{Peek$(?str_path_userlibs)}
0001B84E <AmiBlitz3.ab3@140>   dos_CreateDir{my_residentsdir$}
0001B87C <AmiBlitz3.ab3@141>   dos_CreateDir{my_systemdir$}
0001B946 <AmiBlitz3.ab3@147> pedfile$ = dos_GetToolString{"EDITOR",dos_AddPart{my_systemdir$,"PED"}}
0001B97E <AmiBlitz3.ab3@148> Poke.s ?str_pedfile,pedfile$
0001B9BC <AmiBlitz3.ab3@150> If dos_GetToolState{"START_WITHOUT_LIBS"} = -1
0001B9CC <AmiBlitz3.ab3@151>   Poke.b ?start_without_libs,1
0001B9D2 <AmiBlitz3.ab3@152> Else
0001B9E2 <AmiBlitz3.ab3@153>   Poke.b ?start_without_libs,0
0001BA08 <AmiBlitz3.ab3@156> !TRANS_INIT{"AmiBlitz3"}     ; init localization via translation.include
0001BA14 <AmiBlitz3.ab3@160> dbg_fid.l = -1 ; no debug file id yet!
0001BA26 <AmiBlitz3.ab3@163> Poke.l ?maxerrorcount,#defaultmaxerrorcount                ; set the default value  tomsmart1
0001BA30 <AmiBlitz3.ab3@165> If CLIMode
0001BA36 <AmiBlitz3.ab3@168>   err.l      = False                                       ; indicate that an error has occured
0001BA3C <AmiBlitz3.ab3@169>   showhelp.l = False                                       ; show the CLI tool's help
0001BA94 <AmiBlitz3.ab3@172>   cli_progpath.s      = dos_GetProgDir{default_assign$}    ; replaced hardcoded path  tomsmart1 2012 03 09
0001BABC <AmiBlitz3.ab3@173>   cli_sourcefile.s    = ""
0001BAE4 <AmiBlitz3.ab3@174>   cli_exefile.s       = ""
0001BB0C <AmiBlitz3.ab3@175>   cli_savefile.s      = ""
0001BB34 <AmiBlitz3.ab3@176>   cli_dumpfile.s      = ""
0001BB5C <AmiBlitz3.ab3@177>   cli_includepath.s   = ""
0001BB84 <AmiBlitz3.ab3@178>   cli_blitzlibpath.s  = ""
0001BB8A <AmiBlitz3.ab3@179>   cli_debuginfo.l     = False
0001BB90 <AmiBlitz3.ab3@180>   cli_run.l           = False
0001BB98 <AmiBlitz3.ab3@181>   cli_dumpflags.l     = $FFFFFFFF
0001BBC0 <AmiBlitz3.ab3@182>   cli_info.s          = ""
0001BBC6 <AmiBlitz3.ab3@183>   cli_release.l       = False
0001BBD0 <AmiBlitz3.ab3@184>   cli_numargs.l       = dos_GetNumArgs{}
0001BBD6 <AmiBlitz3.ab3@185>   cli_gui.l           = False
0001BBDE <AmiBlitz3.ab3@186>   cli_dumpform.l      = 1 ; 0 = bin, 1 = ASCII
0001BBE6 <AmiBlitz3.ab3@187>   cli_verbose.l       = 1
0001BBEE <AmiBlitz3.ab3@188>   cli_comdbgflags.l   = $00000000             ; added to support compiler and debugger settings via CLI  tomsmart1
0001BBF6 <AmiBlitz3.ab3@189>   cli_comstrbufsize.l = 0
0001BBFE <AmiBlitz3.ab3@190>   cli_exestacksize.l  = 0
0001BC06 <AmiBlitz3.ab3@191>   cli_maxerrors.l     = 0                     ; added to make maxerrorcount changable in CLIMode  tomsmart1
0001BC1E <AmiBlitz3.ab3@192>   If cli_numargs=0 Then showhelp=True
0001BC4E <AmiBlitz3.ab3@196>     arg.s = dos_GetNextArg{}                               ; get the next CLI argument
0001BC9A <AmiBlitz3.ab3@197>     larg.s = LCase$(arg)                                   ; lower case the option string
0001BD62 <AmiBlitz3.ab3@198>     If Left$(larg,1)="-" Then larg = Right$(larg,FLen(larg)-1)
0001BD98 <AmiBlitz3.ab3@199>     Select larg
0001BDE4 <AmiBlitz3.ab3@200>       Case "s" : larg="source"
0001BE36 <AmiBlitz3.ab3@201>       Case "e" : larg="exe"
0001BE88 <AmiBlitz3.ab3@202>       Case "d" : larg="debug"
0001BEDA <AmiBlitz3.ab3@203>       Case "r" : larg="release"
0001BF2C <AmiBlitz3.ab3@204>       Case "h" : larg="help"
0001BF7E <AmiBlitz3.ab3@205>       Case "v" : larg="verbose"
0001BF8C <AmiBlitz3.ab3@206>     End Select
0001BFC2 <AmiBlitz3.ab3@208>     Select larg
0001C016 <AmiBlitz3.ab3@209>       Case "exe"      : cli_exefile     = dos_GetNextArg{}
0001C070 <AmiBlitz3.ab3@210>       Case "source"   : cli_sourcefile  = dos_GetNextArg{}
0001C0CA <AmiBlitz3.ab3@211>       Case "save"     : cli_savefile    = dos_GetNextArg{}
0001C0FA <AmiBlitz3.ab3@212>       Case "debug"    : cli_debuginfo   = True
0001C12A <AmiBlitz3.ab3@213>       Case "run"      : cli_run         = True
0001C15A <AmiBlitz3.ab3@214>       Case "release"  : cli_release     = True
0001C18A <AmiBlitz3.ab3@215>       Case "ped"      : cli_gui         = True
0001C1E4 <AmiBlitz3.ab3@216>       Case "dform"    : cli_dumpform.l  = Vallong(dos_GetNextArg{})
0001C256 <AmiBlitz3.ab3@217>       Case "dump"     : cli_info        = LCase$(dos_GetNextArg{})
0001C286 <AmiBlitz3.ab3@218>                         cli_dumpfile    = dos_GetNextArg{}
0001C28E <AmiBlitz3.ab3@219>                         cli_dumpflags   = $0
0001C2EE <AmiBlitz3.ab3@220>                         If Instr(cli_info,"all"  ) Then cli_dumpflags | $FFFFFFFF
0001C34E <AmiBlitz3.ab3@221>                         If Instr(cli_info,"token") Then cli_dumpflags | #DUMPFLG_TOKENS
0001C3AE <AmiBlitz3.ab3@222>                         If Instr(cli_info,"label") Then cli_dumpflags | #DUMPFLG_LABELS
0001C40E <AmiBlitz3.ab3@223>                         If Instr(cli_info,"var"  ) Then cli_dumpflags | #DUMPFLG_VARS
0001C46E <AmiBlitz3.ab3@224>                         If Instr(cli_info,"const") Then cli_dumpflags | #DUMPFLG_CONSTANTS
0001C4CE <AmiBlitz3.ab3@225>                         If Instr(cli_info,"func" ) Then cli_dumpflags | #DUMPFLG_FUNCTIONS
0001C52E <AmiBlitz3.ab3@226>                         If Instr(cli_info,"macro") Then cli_dumpflags | #DUMPFLG_MACROS
0001C58E <AmiBlitz3.ab3@227>                         If Instr(cli_info,"type" ) Then cli_dumpflags | #DUMPFLG_NEWTYPES
0001C5EE <AmiBlitz3.ab3@228>                         If Instr(cli_info,"lib"  ) Then cli_dumpflags | #DUMPFLG_LIBS
0001C600 <AmiBlitz3.ab3@229>                         If cli_dumpflags = $0
0001C606 <AmiBlitz3.ab3@230>                          err=True
0001C69A <AmiBlitz3.ab3@231>                          NPrint "\\1b[1m*** ERROR: Invalid flags for dumpfile \\22",cli_info,"\\22 specified!\\1b[0m"
0001C70C <AmiBlitz3.ab3@234>       Case "setcom"   : cli_setcom.s    = LCase$(dos_GetNextArg{})
0001C714 <AmiBlitz3.ab3@235>                         cli_comflags.l  = $0
0001C774 <AmiBlitz3.ab3@236>                         If Instr(cli_setcom,"icon"  ) Then cli_comflags | #CLI_COMSETICONFLAG     ; create Icon
0001C7D4 <AmiBlitz3.ab3@237>                         If Instr(cli_setcom,"small" ) Then cli_comflags | #CLI_COMSETSMALLFLAG    ; make smallest code
0001C834 <AmiBlitz3.ab3@238>                         If Instr(cli_setcom,"func"  ) Then cli_comflags | #CLI_COMSETFUNCFLAG     ; use Functionoptimizer
0001C894 <AmiBlitz3.ab3@239> 
0001C8F4 <AmiBlitz3.ab3@240>                         If Instr(cli_setcom,"dbgf"  ) Then cli_comflags | #CLI_COMSETDBGFFLAG     ; create a .dbf file
0001C90E <AmiBlitz3.ab3@241>                         If (cli_comflags & #CLI_COMSETALLFLAGS) = 0                               ; test if args are correct
0001C914 <AmiBlitz3.ab3@242>                           err=True                                                                ; no
0001C9A8 <AmiBlitz3.ab3@243>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setcom \\22",cli_setcom,"\\22 specified!\\1b[0m"
0001C9AE <AmiBlitz3.ab3@244>                         Else
0001C9BC <AmiBlitz3.ab3@245>                           cli_comdbgflags | cli_comflags                                          ; yes then add it
0001CA2E <AmiBlitz3.ab3@248>       Case "setdbg"   : cli_setdbg.s    = LCase$(dos_GetNextArg{})
0001CA36 <AmiBlitz3.ab3@249>                         cli_dbgflags.l  = $0
0001CA96 <AmiBlitz3.ab3@250>                         If Instr(cli_setdbg,"auto" ) Then cli_dbgflags | #CLI_DEBUGAUTOFLAG       ; autorun
0001CAF6 <AmiBlitz3.ab3@251>                         If Instr(cli_setdbg,"irq"  ) Then cli_dbgflags | #CLI_DEBUGIRQFLAG        ; interrupt check
0001CB56 <AmiBlitz3.ab3@252>                         If Instr(cli_setdbg,"asm"  ) Then cli_dbgflags | #CLI_DEBUGASMFLAG        ; assembler check
0001CBB6 <AmiBlitz3.ab3@253>                         If Instr(cli_setdbg,"ofl"  ) Then cli_dbgflags | #CLI_DEBUGOFLFLAG        ; overflow check
0001CBD0 <AmiBlitz3.ab3@254>                         If (cli_dbgflags & #CLI_DEBUGALLFLAGS) = 0                                ; yes then add it
0001CBD6 <AmiBlitz3.ab3@255>                           err=True                                                                ; no
0001CC6A <AmiBlitz3.ab3@256>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setdbg \\22",cli_setdbg,"\\22 specified!\\1b[0m"
0001CC70 <AmiBlitz3.ab3@257>                         Else
0001CC7E <AmiBlitz3.ab3@258>                           cli_comdbgflags | cli_dbgflags                                          ; yes then add it
0001CCD8 <AmiBlitz3.ab3@260>       Case "strbufsize": cli_comstrbufsize = Vallong(dos_GetNextArg{})
0001CD32 <AmiBlitz3.ab3@261>       Case "stacksize" : cli_exestacksize  = Vallong(dos_GetNextArg{})
0001CD8C <AmiBlitz3.ab3@262> 
0001CDB2 <AmiBlitz3.ab3@263>                         If ((cli_maxerrors > 0) AND (cli_maxerrors <4097))                        ; check
0001CDC2 <AmiBlitz3.ab3@264>                           Poke.l ?maxerrorcount,cli_maxerrors
0001CE1C <AmiBlitz3.ab3@267>       Case "verbose"  : cli_verbose     = Vallong(dos_GetNextArg{})
0001CE4C <AmiBlitz3.ab3@268>       Case "h"        : showhelp        = True             ; show the help and quit
0001CE52 <AmiBlitz3.ab3@269>       Default
0001CE8A <AmiBlitz3.ab3@270>         If arg><""
0001CF1E <AmiBlitz3.ab3@271>           NPrint "\\1b[1m*** ERROR: Unknown option \\22",arg,"\\22 specified!\\1b[0m"
0001CF24 <AmiBlitz3.ab3@272>           err = True
0001CF32 <AmiBlitz3.ab3@274>     End Select
0001CF7E <AmiBlitz3.ab3@275>   Until arg = "" OR err=True          ; until we processed all arguments
0001CFA0 <AmiBlitz3.ab3@278>   If err><False OR showhelp = True
0001CFAA <AmiBlitz3.ab3@279>     If showhelp
0001D00C <AmiBlitz3.ab3@280>     NPrint "AmiBlitz ",Peek.s(?myversion)
0001D044 <AmiBlitz3.ab3@281>     NPrint "\\nSyntax: AmiBlitz3 [options]"
0001D07C <AmiBlitz3.ab3@282>     NPrint "\\nOptions:"
0001D0B4 <AmiBlitz3.ab3@283>     NPrint "  -(s)ource <file>    : input source code filename (bb2, ab2 or ab3)"
0001D0EC <AmiBlitz3.ab3@284>     NPrint "  -(e)xe <file>       : output executable filename"
0001D124 <AmiBlitz3.ab3@285>     NPrint "  -(d)ebug            : compile and start runtime debugger"
0001D15C <AmiBlitz3.ab3@286>     NPrint "  -(r)elease          : create release executable (size optimized)"
0001D194 <AmiBlitz3.ab3@287>     NPrint "  -run                : run compiled program"
0001D1CC <AmiBlitz3.ab3@288>     NPrint "  -dump <info> <file> : dump compiler internals to file"
0001D204 <AmiBlitz3.ab3@289>     NPrint "                        (info=all|token|label|var|func|const|macro|type|lib)"
0001D23C <AmiBlitz3.ab3@290>     NPrint "  -setcom <options>   : set compiler settings (options=icon|small|func|ldbg|dbgf)"       ; added  tomsmart1
0001D274 <AmiBlitz3.ab3@291>     NPrint "  -setdbg <check>     : set debugger settings (check=auto|irq|asm|ofl)"                  ; added  tomsmart1
0001D2AC <AmiBlitz3.ab3@292>     NPrint "  -strbufsize <n>     : set the string buffer size of the compiler"                      ; added  tomsmart1
0001D2E4 <AmiBlitz3.ab3@293>     NPrint "  -stacksize <n>      : set the stacksize for the exe if it run/debug"                   ; added  tomsmart1
0001D31C <AmiBlitz3.ab3@294>     NPrint "  -maxerrors <n>      ; set maxerrorcounter of the compiler (1-4096; default=99)"        ; added  tomsmart1
0001D354 <AmiBlitz3.ab3@295>     NPrint "  -dform <n>          : format of compiler internals dump (0=bin, 1=ASCII; default=1)"
0001D38C <AmiBlitz3.ab3@296>     NPrint "  -PED                : start AmiBlitz3 IDE (PED)"
0001D3C4 <AmiBlitz3.ab3@297>     NPrint "  -save <file>        : re-save source code (convert format, if needed)"
0001D3FC <AmiBlitz3.ab3@298>     NPrint "  -(v)erbose <n>      : set verbose level (0, 1 or 2; default=1)"
0001D434 <AmiBlitz3.ab3@299>     NPrint "  -(h)elp             : show this help"
0001D46C <AmiBlitz3.ab3@300>     NPrint "\\nExample:"
0001D4A4 <AmiBlitz3.ab3@301>     NPrint "  AmiBlitz3 -s \\22DH0:Sourcecodes/MyProgram.ab3\\22 -e RAM:MyProgram.exe"
0001D4DC <AmiBlitz3.ab3@302>     NPrint "\\nNote: To start the AmiBlitz3 IDE, run from Workbench or with -PED option."
0001D4E2 <AmiBlitz3.ab3@305>     Goto abnormal_exit
0001D4FE <AmiBlitz3.ab3@308>   If cli_gui        Then CLIMode = False : error_SetFlags{#error_requester}
0001D562 <AmiBlitz3.ab3@309>   If cli_sourcefile Then Poke.s ?str_tempfilename,cli_sourcefile
0001D572 <AmiBlitz3.ab3@312> Poke.l ?CLIMode,CLIMode
0001D596 <AmiBlitz3.ab3@342>   Dim incdim.s (#maxincludes)
0001D5BA <AmiBlitz3.ab3@343>   Dim incline.l(#maxincludes)
0001D5D4 <AmiBlitz3.ab3@611> Function.s Get_Libinfo{addr_libnum.l}
0001D5E0 <AmiBlitz3.ab3@613>   lib_ab2.b = False : lib_os.b = False
0001D5E6 <AmiBlitz3.ab3@614>   addr_counter.l = addr_libnum
0001D5EE <AmiBlitz3.ab3@615>   skip.l = 0
0001D600 <AmiBlitz3.ab3@616>   If addr_counter=0
0001D63A <AmiBlitz3.ab3@617>     error{"INTERNAL: \\__THIS_FUNCTION: Invalid pointer!"}
0001D658 <AmiBlitz3.ab3@618>     Function Return ""
0001D666 <AmiBlitz3.ab3@623>     mem.l = Peek.l(addr_counter)
0001D674 <AmiBlitz3.ab3@628>     addr_counter + 2
0001D694 <AmiBlitz3.ab3@629>     If (mem = $0000ffff) Then lib_ab2= True : skip = 8
0001D6AE <AmiBlitz3.ab3@630>     If (mem LSR 16) = $ffe2
0001D6B4 <AmiBlitz3.ab3@632>       lib_os = True
0001D6BC <AmiBlitz3.ab3@633>       skip = 10
0001D702 <AmiBlitz3.ab3@634>       If Peek$(addr_counter+skip) = "" Then skip + 4
0001D746 <AmiBlitz3.ab3@636>   Until (lib_ab2=True OR lib_os = True) OR (addr_counter>addr_libnum + $400)
0001D75C <AmiBlitz3.ab3@638>   If (addr_counter>addr_libnum + $400)
0001D77A <AmiBlitz3.ab3@640>     Function Return ""
0001D780 <AmiBlitz3.ab3@641>   Else
0001D7A4 <AmiBlitz3.ab3@642>     Function Return Peek$(addr_counter + skip)
0001D7AE <AmiBlitz3.ab3@644> End Function
0001D7CC <AmiBlitz3.ab3@684>   !asm
0001D7D2 <AmiBlitz3.ab3@685>   MOVEA.l _execbase,A6
0001D7D6 <AmiBlitz3.ab3@686>   MOVEM.l d0/a0,-(a7)
0001D7D8 <AmiBlitz3.ab3@688>   MOVEQ #127,d0
0001D7DE <AmiBlitz3.ab3@689>   LEA chartab,a0
0001D7E4 <AmiBlitz3.ab3@692>     MOVE.b #1,128(a0)
0001D7E6 <AmiBlitz3.ab3@693>     CLR.b (a0)+
0001D7EA <AmiBlitz3.ab3@694>   DBF d0,'l12
0001D7F0 <AmiBlitz3.ab3@696>   LEA chartab,a0
0001D7F4 <AmiBlitz3.ab3@697>   MOVE.b #1,(a0)
0001D7FA <AmiBlitz3.ab3@698>   MOVE.b #1,","(a0)
0001D800 <AmiBlitz3.ab3@699>   MOVE.b #1,";"(a0)
0001D806 <AmiBlitz3.ab3@700>   MOVE.b #1,":"(a0)
0001D80C <AmiBlitz3.ab3@701>   MOVE.b #1,"("(a0)
0001D812 <AmiBlitz3.ab3@702>   MOVE.b #1,")"(a0)
0001D818 <AmiBlitz3.ab3@703>   MOVE.b #1,"="(a0)
0001D81E <AmiBlitz3.ab3@704>   MOVE.b #1,"+"(a0)
0001D824 <AmiBlitz3.ab3@705>   MOVE.b #1,"-"(a0)
0001D82A <AmiBlitz3.ab3@706>   MOVE.b #1,"*"(a0)
0001D830 <AmiBlitz3.ab3@707>   MOVE.b #1,"/"(a0)
0001D836 <AmiBlitz3.ab3@708>   MOVE.b #1,"$"(a0)
0001D83C <AmiBlitz3.ab3@709>   MOVE.b #1,"%"(a0)
0001D842 <AmiBlitz3.ab3@710>   MOVE.b #1,"."(a0)
0001D848 <AmiBlitz3.ab3@711>   MOVE.b #1,"["(a0)
0001D84E <AmiBlitz3.ab3@712>   MOVE.b #1,"]"(a0)
0001D854 <AmiBlitz3.ab3@713>   MOVE.b #1,"{"(a0)
0001D85A <AmiBlitz3.ab3@714>   MOVE.b #1,"}"(a0)
0001D860 <AmiBlitz3.ab3@715>   MOVE.b #1,"\"(a0)
0001D866 <AmiBlitz3.ab3@716>   MOVE.b #1,">"(a0)
0001D86C <AmiBlitz3.ab3@717>   MOVE.b #1,"<"(a0)
0001D872 <AmiBlitz3.ab3@718>   MOVE.b #1,"&"(a0)
0001D878 <AmiBlitz3.ab3@719>   MOVE.b #1,"|"(a0)
0001D87E <AmiBlitz3.ab3@720>   MOVE.b #1,"^"(a0)
0001D884 <AmiBlitz3.ab3@721>   MOVE.b #1,$7e(a0)
0001D88A <AmiBlitz3.ab3@722>   MOVE.w #$0101,1(a0)
0001D890 <AmiBlitz3.ab3@724>   LEA instrtab,a0
0001D896 <AmiBlitz3.ab3@725>   MOVE.l #labelhash-instrtab,d0
0001D898 <AmiBlitz3.ab3@726>   ASR.l #2,d0
0001D89A <AmiBlitz3.ab3@727>   SUBQ.l #1,d0
0001D89C <AmiBlitz3.ab3@730>    CLR.l (a0)+
0001D89E <AmiBlitz3.ab3@731>    SUBQ.l #1,d0
0001D8A2 <AmiBlitz3.ab3@732>   BNE 'l10
0001D8A8 <AmiBlitz3.ab3@734>   LEA allowtab,a0
0001D8AE <AmiBlitz3.ab3@735>   MOVE.l #255,d0
0001D8B0 <AmiBlitz3.ab3@738>     CLR.b (a0)+
0001D8B4 <AmiBlitz3.ab3@739>   DBF d0,'la1
0001D8BA <AmiBlitz3.ab3@741>   LEA allowtab,a0
0001D8C0 <AmiBlitz3.ab3@742>   MOVE.b #1,$7d(a0)
0001D8C6 <AmiBlitz3.ab3@743>   MOVE.b #1,$7c(a0)
0001D8CC <AmiBlitz3.ab3@744>   MOVE.b #1,$44(a0)
0001D8D2 <AmiBlitz3.ab3@745>   MOVE.b #1,$45(a0)
0001D8D8 <AmiBlitz3.ab3@746>   MOVE.b #1,$b9(a0)
0001D8DE <AmiBlitz3.ab3@747>   MOVE.b #1,$89(a0)
0001D8E4 <AmiBlitz3.ab3@748>   MOVE.b #1,$ce(a0)
0001D8EA <AmiBlitz3.ab3@749>   MOVE.b #1,$cf(a0)
0001D8F0 <AmiBlitz3.ab3@750>   MOVE.b #1,$d0(a0)
0001D8F6 <AmiBlitz3.ab3@751>   MOVE.b #1,$cd(a0)
0001D8F8 <AmiBlitz3.ab3@752>   MOVEQ #0,d0
0001D8FE <AmiBlitz3.ab3@754>   MOVEA.l _execbase,a6
0001D904 <AmiBlitz3.ab3@759>   MOVE.l #$10000,d0
0001D90A <AmiBlitz3.ab3@760>   MOVE.l #80000,d1
0001D90C <AmiBlitz3.ab3@761>   MOVE.l d1,d2
0001D910 <AmiBlitz3.ab3@762>   JSR _CreatePool(a6)                                      ; alloc memory for own stuff
0001D916 <AmiBlitz3.ab3@763>   MOVE.l d0,mempool
0001D91A <AmiBlitz3.ab3@764>   MOVEM.l (a7)+,d0/a0
0001D920 <AmiBlitz3.ab3@765>   TST.l mempool
0001D924 <AmiBlitz3.ab3@766>   BEQ shutdown_compiler
0001D928 <AmiBlitz3.ab3@768>   MOVEA.l $114(A6),A4                                      ; get adress of this.Task-Structure
0001D92E <AmiBlitz3.ab3@769>   MOVE.l A4,ptr_ThisTask
0001D932 <AmiBlitz3.ab3@771>   BSR.w open_doslibrary
0001D936 <AmiBlitz3.ab3@772>   BEQ.w shutdown_compiler
0001D93C <AmiBlitz3.ab3@774>   MOVE.l D2,stacksize
0001D93E <AmiBlitz3.ab3@778>   MOVEQ.l #$00,D0
0001D944 <AmiBlitz3.ab3@779>   LEA tokens,A0
0001D946 <AmiBlitz3.ab3@782>     ADDQ.w #1,D0
0001D948 <AmiBlitz3.ab3@783>     MOVE.l (A0),D1
0001D94C <AmiBlitz3.ab3@784>     BEQ.w JL_0_2D1C
0001D94E <AmiBlitz3.ab3@785>     MOVEA.l D1,A0
0001D952 <AmiBlitz3.ab3@786> BRA.w JL_0_2D0E
0001D958 <AmiBlitz3.ab3@789>   MOVE.l A0,end_of_tokenlist
0001D95C <AmiBlitz3.ab3@791>   BSR.w makeasmtable
0001D964 <AmiBlitz3.ab3@792>   MOVE.w #$FFFF,returncode_org                             ;#-1,returncode
0001D968 <AmiBlitz3.ab3@794>   BSR.w open_mathlibrary
0001D96C <AmiBlitz3.ab3@795>   BEQ.w freemem_and_quit4
0001D972 <AmiBlitz3.ab3@797>   MOVE.l constmaxpc,D0
0001D974 <AmiBlitz3.ab3@798>   MOVEQ.l #$02,D1                                          ;chipmem            ;01 org source
0001D97A <AmiBlitz3.ab3@799>   MOVEA.l _execbase,A6
0001D97E <AmiBlitz3.ab3@800>   JSR _AllocMem(A6)                                        ;mem for branch routine
0001D984 <AmiBlitz3.ab3@801>   MOVE.l D0,constpcat
0001D988 <AmiBlitz3.ab3@802>   BEQ.w freemem_and_quit3
0001D98E <AmiBlitz3.ab3@803>   ADD.l constmaxpc,D0
0001D994 <AmiBlitz3.ab3@804>   MOVE.l D0,constlibat
0001D99A <AmiBlitz3.ab3@806>   MOVE.l macrobuffer_size,D0
0001D9A0 <AmiBlitz3.ab3@807>   CMP.l #DEFAULT_MACROBUFFERSIZE,d0                        ; replaced by a constant  tomsmart1
0001D9A4 <AmiBlitz3.ab3@808>   BGE 'ok
0001D9AA <AmiBlitz3.ab3@809>     MOVE.l #DEFAULT_MACROBUFFERSIZE,d0
0001D9B0 <AmiBlitz3.ab3@810>     MOVE.l d0,macrobuffer_size                             ; replaced with a constant tomsmart1
0001D9B2 <AmiBlitz3.ab3@813>   ADDQ.l #4,d0
0001D9B4 <AmiBlitz3.ab3@814>   MOVEQ.l #$01,D1
0001D9BA <AmiBlitz3.ab3@815>   MOVEA.l _execbase,A6
0001D9BE <AmiBlitz3.ab3@816>   JSR _AllocMem(A6)                                        ;macro mem
0001D9C0 <AmiBlitz3.ab3@817>   MOVE.l d0,a0
0001D9C6 <AmiBlitz3.ab3@818>   MOVE.l macrobuffer_size,(a0)+
0001D9C8 <AmiBlitz3.ab3@819>   MOVE.l a0,d0
0001D9CE <AmiBlitz3.ab3@820>   MOVE.l D0,ptr_macrobuffer_begin
0001D9D2 <AmiBlitz3.ab3@821>   BEQ.w freemem_and_quit2
0001D9D8 <AmiBlitz3.ab3@822>   ADD.l macrobuffer_size,D0
0001D9DE <AmiBlitz3.ab3@823>   MOVE.l D0,ptr_macrobuffer_end
0001D9E4 <AmiBlitz3.ab3@825>   TST.l CLIMode
0001D9E8 <AmiBlitz3.ab3@826>   BEQ load_ped
0001DA12 <AmiBlitz3.ab3@829>   !basic
0001DA1C <AmiBlitz3.ab3@830>   succ.l = InitEmulatedPED{}
0001DA20 <AmiBlitz3.ab3@831>   GetD0 succ
0001DA3E <AmiBlitz3.ab3@832>   !asm
0001DA40 <AmiBlitz3.ab3@833>   TST.l d0
0001DA44 <AmiBlitz3.ab3@834>   BEQ freemem_and_quit
0001DA4A <AmiBlitz3.ab3@835> JMP skip_ped
0001DA50 <AmiBlitz3.ab3@840>   MOVE.l #str_pedfile,D1                                   ; Load PED
0001DA56 <AmiBlitz3.ab3@841>   MOVEA.l _dosbase,A6
0001DA5A <AmiBlitz3.ab3@842>   JSR _LoadSeg(A6)
0001DA60 <AmiBlitz3.ab3@843>   MOVE.l D0,ptr_seg_ped
0001DA64 <AmiBlitz3.ab3@845>   BEQ.w cant_load_PED         ; was freemem_and_quit  added error massage  that we can't load it  tomsmart1  2012 03
0001DA66 <AmiBlitz3.ab3@849>   MOVEA.l D0,A2
0001DA68 <AmiBlitz3.ab3@850>   ADDA.l A2,A2
0001DA6A <AmiBlitz3.ab3@851>   ADDA.l A2,A2
0001DA70 <AmiBlitz3.ab3@853>   LEA teddata,a1                                           ;lea edstruct,A1
0001DA76 <AmiBlitz3.ab3@854>   MOVE.l #"TEDY",d1
0001DA7A <AmiBlitz3.ab3@855>   JSR 4(A2)                                                ; Run PED
0001DA80 <AmiBlitz3.ab3@857>   MOVE.l A0,ped_startup_addr                               ; PED returns address of routine "startup_code"
0001DA86 <AmiBlitz3.ab3@858>   MOVE.l A1,comdata                                        ; PED returns address of comdata-area in A1
0001DAC4 <AmiBlitz3.ab3@860>   !ComData_GetW{comWord_PEDIsAvailable,D0}                 ; if PED_IsAvailable=0, quit AmiBlitz
0001DAC8 <AmiBlitz3.ab3@861>   BEQ.w unload_ped
0001DACC <AmiBlitz3.ab3@862> 
0001DAD0 <AmiBlitz3.ab3@863>   BNE old_version_of_PED                                   ; no, than exit
0001DB0E <AmiBlitz3.ab3@869>   !ComData_GetL{comData_Magic,D0}
0001DB14 <AmiBlitz3.ab3@870>   CMP.l ##MagicIdentifier_Long,D0                          ;"~::~",D0    ; replace with a constants  tomsmart1 2012 03 09
0001DB18 <AmiBlitz3.ab3@871>   BNE unload_ped
0001DB50 <AmiBlitz3.ab3@874>   !ComData_SetL{comPtr_Trap15            ,#directTrap15 }
0001DB88 <AmiBlitz3.ab3@875>   !ComData_SetL{comPtr_DirectBuffer      ,#directbuffer}
0001DBC0 <AmiBlitz3.ab3@876>   !ComData_SetL{comPtr_MacroBase         ,#macrobase}
0001DBF8 <AmiBlitz3.ab3@877>   !ComData_SetL{comPtr_VarBase           ,#varbase }
0001DC30 <AmiBlitz3.ab3@878>   !ComData_SetL{comPtr_InstrBase         ,#instrtab}
0001DC68 <AmiBlitz3.ab3@879>   !ComData_SetL{comPtr_LibPointer        ,#libpointer}
0001DCA0 <AmiBlitz3.ab3@880>   !ComData_SetL{comPtr_CompilerVersion   ,#myversion }
0001DCD8 <AmiBlitz3.ab3@881>   !ComData_SetL{comPtr_VersionInformation,#versioninformation}
0001DD10 <AmiBlitz3.ab3@882>   !ComData_SetL{comPtr_NumberOfBuilds    ,#number_of_builds}
0001DD48 <AmiBlitz3.ab3@883>   !ComData_SetL{comFunc_SaveSource       ,#ab3_SaveSource}
0001DD80 <AmiBlitz3.ab3@884>   !ComData_SetL{comFunc_LoadSource       ,#ab3_LoadSource}
0001DDB8 <AmiBlitz3.ab3@885>   !ComData_SetL{comFunc_ClearSource      ,#ab3_ClearSource}
0001DDF0 <AmiBlitz3.ab3@888>   !ComData_SetL{comFunc_CalculatExpression       ,#menu_calculator}
0001DE28 <AmiBlitz3.ab3@889>   !ComData_SetL{comPtr_CalculatorExpressionString,#str_calcexpression}
0001DE60 <AmiBlitz3.ab3@892>   !ComData_SetL{comFunc_BackupXtraData           ,#BackupXtraData}
0001DE98 <AmiBlitz3.ab3@893>   !ComData_SetL{comFunc_RestoreXtraData          ,#RestoreXtraData}
0001DED0 <AmiBlitz3.ab3@895>   !ComData_SetL{comFunc_GetObjectEntry           ,#getobjectentry}
0001DF08 <AmiBlitz3.ab3@896>   !ComData_SetL{comFunc_StoreMaxObjects          ,#storemaxobjects}
0001DF40 <AmiBlitz3.ab3@898>   !ComData_SetL{comFunc_ReloadResidentsForPED    ,#ReloadResidentsForPED}
0001DF78 <AmiBlitz3.ab3@899>   !ComData_SetL{comFunc_FreeClearResidentsForPED ,#FreeClearResidentsForPED}    ; add tomsmart1 2012 06 09
0001DFB0 <AmiBlitz3.ab3@901>   !ComData_SetL{comPtr_Residents_Table           ,#residents_table}
0001DFE8 <AmiBlitz3.ab3@902>   !ComData_SetL{comPtr_StringBuffer_Long         ,#stringbuffer}
0001E020 <AmiBlitz3.ab3@903>   !ComData_SetL{comPtr_Stacksize_Long            ,#stacksize}
0001E058 <AmiBlitz3.ab3@904>   !ComData_SetL{comPtr_Create_IconFile_Byte      ,#create_iconfile}
0001E090 <AmiBlitz3.ab3@905>   !ComData_SetL{comPtr_Make_SmallestCode_Byte    ,#make_smallestcode}
0001E0C8 <AmiBlitz3.ab3@906>   !ComData_SetL{comPtr_Link_DebugInfo_Byte       ,#link_debuginfo}
0001E100 <AmiBlitz3.ab3@907>   !ComData_SetL{comPtr_Use_Debugger_Byte         ,#use_debugger}
0001E138 <AmiBlitz3.ab3@908>   !ComData_SetL{comPtr_Autorun_Byte              ,#autorun}
0001E170 <AmiBlitz3.ab3@909>   !ComData_SetL{comPtr_InterruptCheck_Byte       ,#interruptcheck}
0001E1A8 <AmiBlitz3.ab3@910>   !ComData_SetL{comPtr_AssemblerCheck_Byte       ,#assemblercheck}
0001E1E0 <AmiBlitz3.ab3@911>   !ComData_SetL{comPtr_OverflowCheck_Byte        ,#overflowcheck}
0001E218 <AmiBlitz3.ab3@912>   !ComData_SetL{comPtr_Number_of_Objects_Word    ,#number_of_objects}
0001E250 <AmiBlitz3.ab3@913>   !ComData_SetL{comPtr_MaxObjects_Value_Word     ,#maxobjects_value}
0001E288 <AmiBlitz3.ab3@914>   !ComData_SetL{comPtr_MaxObject_Pos_Word        ,#maxobject_pos}
0001E2C0 <AmiBlitz3.ab3@917>   !ComData_SetL{comPtr_CLIArgumentsString       ,#str_cliarguments}
0001E2C6 <AmiBlitz3.ab3@919>   CLR.w returncode_org
0001E2F0 <AmiBlitz3.ab3@921>   !basic
0001E2FA <AmiBlitz3.ab3@922>   If CLIMode
0001E36C <AmiBlitz3.ab3@923>     If cli_verbose>=3 Then NPrint !TRANS{"Loading BlitzLibs..."}
0001E38A <AmiBlitz3.ab3@925>   !asm
0001E390 <AmiBlitz3.ab3@929>   TST.b start_without_libs
0001E394 <AmiBlitz3.ab3@930>   BNE skip_loading_libs
0001E398 <AmiBlitz3.ab3@931>     BSR.w call_setpointerbusy
0001E3A2 <AmiBlitz3.ab3@932>     MOVE.l #$FFFFffff,linenumat
0001E3A6 <AmiBlitz3.ab3@933>     BSR.w get_libraries
0001E3AC <AmiBlitz3.ab3@934>     JSR init_libraries
0001E3B0 <AmiBlitz3.ab3@935>     BSR.w init_buffers
0001E3B4 <AmiBlitz3.ab3@936>     BSR.w call_setpointernormal
0001E3B6 <AmiBlitz3.ab3@941>   MOVEQ.l #-$01,D0
0001E3BC <AmiBlitz3.ab3@942>   MOVEA.l _execbase,A6
0001E3C0 <AmiBlitz3.ab3@943>   JSR _AllocSignal(A6)
0001E3C6 <AmiBlitz3.ab3@944>   MOVE.l D0,signalNum
0001E3C8 <AmiBlitz3.ab3@945>   MOVEQ.l #$00,D1
0001E3CA <AmiBlitz3.ab3@946>   BSET D0,D1
0001E3D0 <AmiBlitz3.ab3@947>   MOVE.l D1,signals
0001E3D6 <AmiBlitz3.ab3@951>   MOVE.l #str_defaultdbug,D1
0001E3DA <AmiBlitz3.ab3@952>   MOVEA.l _dosbase(PC),A6
0001E3DE <AmiBlitz3.ab3@953>   JSR _LoadSeg(A6)
0001E3E4 <AmiBlitz3.ab3@954>   MOVE.l D0,ptr_seg_debugger
0001E3E6 <AmiBlitz3.ab3@955>   TST.l d0
0001E3EA <AmiBlitz3.ab3@956>   BNE ok_12
0001E414 <AmiBlitz3.ab3@957>     !basic
0001E476 <AmiBlitz3.ab3@958>     error{!TRANS{"The Debugexecutor `Defaultdbug` was not found.\\nDebugging is not possible."}}
0001E494 <AmiBlitz3.ab3@959>     !asm
0001E49A <AmiBlitz3.ab3@962>   TST.l CLIMode
0001E49E <AmiBlitz3.ab3@963>   BEQ run_ped
0001E4C8 <AmiBlitz3.ab3@969>   !basic
0001E4CE <AmiBlitz3.ab3@970>   err.l = False
0001E4FA <AmiBlitz3.ab3@978>   If cli_sourcefile
0001E51A <AmiBlitz3.ab3@979>     lock.l = Lock_(&cli_sourcefile,#ACCESS_READ)
0001E524 <AmiBlitz3.ab3@980>     If lock
0001E548 <AmiBlitz3.ab3@981>       NameFromLock_ lock,&cli_tempstr,1024
0001E572 <AmiBlitz3.ab3@982>       cli_sourcefile.s = Peek.s(&cli_tempstr)
0001E582 <AmiBlitz3.ab3@983>       UnLock_ lock
0001E5AE <AmiBlitz3.ab3@986>     If cli_exefile
0001E600 <AmiBlitz3.ab3@987>       SetCurrentDir{dos_PathPart{cli_sourcefile}}
0001E658 <AmiBlitz3.ab3@988>       path.s = dos_PathPart{cli_exefile}
0001E678 <AmiBlitz3.ab3@989>       lock.l = Lock_(&path,#ACCESS_READ)
0001E682 <AmiBlitz3.ab3@990>       If lock
0001E6A6 <AmiBlitz3.ab3@991>         NameFromLock_ lock,&cli_tempstr,1024
0001E6D0 <AmiBlitz3.ab3@992>         path.s = Peek.s(&cli_tempstr)
0001E77E <AmiBlitz3.ab3@993>         cli_exefile = dos_AddPart{path,dos_FilePart{cli_exefile}}
0001E78E <AmiBlitz3.ab3@994>         UnLock_ lock
0001E7D8 <AmiBlitz3.ab3@1005>   If cli_verbose>=3 Then NPrint "Initializing token hashmap..."
0001E84C <AmiBlitz3.ab3@1006> 
0001E856 <AmiBlitz3.ab3@1007>   *PreProcessor.preprocessor = preproc_Create{}
0001E866 <AmiBlitz3.ab3@1008>   Poke.l ?comPtr_PreProcessor,*PreProcessor
0001E898 <AmiBlitz3.ab3@1009>   preproc_LoadTokens{*PreProcessor,TokenHashMapFile}
0001E8AC <AmiBlitz3.ab3@1010>   If *PreProcessor\tokens=#NULL
0001E926 <AmiBlitz3.ab3@1011>     If cli_verbose>=1 Then NPrint "No hashmap found (\\22"+TokenHashMapFile+"\\22), will be created..."
0001E930 <AmiBlitz3.ab3@1012>     preproc_QueryTokens{*PreProcessor}
0001E962 <AmiBlitz3.ab3@1013>     preproc_SaveTokens{*PreProcessor,TokenHashMapFile}
0001E9AE <AmiBlitz3.ab3@1021>   If cli_sourcefile><"" AND err=False
0001EA54 <AmiBlitz3.ab3@1022>     If cli_verbose>=3 Then NPrint "Loading sourcecode \\22",cli_sourcefile,"\\22..."
0001EA86 <AmiBlitz3.ab3@1023>     succ=LoadSource{cli_sourcefile}
0001EA90 <AmiBlitz3.ab3@1024>     If succ
0001EAC8 <AmiBlitz3.ab3@1025> 
0001EB42 <AmiBlitz3.ab3@1026>         If cli_verbose>=1 Then NPrint "Compiling \\22"+cli_sourcefile+"\\22..."
0001EB84 <AmiBlitz3.ab3@1027> 
0001EB8E <AmiBlitz3.ab3@1029>         If comerr
0001EB94 <AmiBlitz3.ab3@1031>         Else
0001EB9A <AmiBlitz3.ab3@1035>     Else
0001EBEA <AmiBlitz3.ab3@1036>       If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to read source file!\\1b[0m" : err=True
0001EC36 <AmiBlitz3.ab3@1040>   If cli_savefile><"" AND err=False
0001ECB0 <AmiBlitz3.ab3@1041>     If cli_verbose>=2 Then NPrint "Saving sourcefiles as "+cli_savefile+"..."
0001ECDE <AmiBlitz3.ab3@1042>     SaveSource{cli_savefile}
0001ED2A <AmiBlitz3.ab3@1045>   If cli_dumpfile><"" AND err=False
0001ED74 <AmiBlitz3.ab3@1046>     If cli_verbose>=2 Then NPrint "Saving dumpfile..."
0001EDAA <AmiBlitz3.ab3@1047>     DumpFile{cli_dumpfile,cli_dumpflags,cli_dumpform}
0001EDB4 <AmiBlitz3.ab3@1050>   If cli_run
0001EDC8 <AmiBlitz3.ab3@1051>     If comerr=False
0001EDF4 <AmiBlitz3.ab3@1052>       If cli_exefile
0001EE6E <AmiBlitz3.ab3@1053>         If cli_verbose>=1 Then NPrint "Recompiling "+cli_sourcefile+" for debug..."
0001EEA4 <AmiBlitz3.ab3@1054> 
0001EEEE <AmiBlitz3.ab3@1056>       If cli_verbose>=1 Then NPrint "Running program..."
0001EEFC <AmiBlitz3.ab3@1057> 
0001EEFE <AmiBlitz3.ab3@1059>         CLR.l d0
0001EF3C <AmiBlitz3.ab3@1060>         !ComData_GetB{comByte_RunningFlag,D0}
0001EF40 <AmiBlitz3.ab3@1061>         running.l = PutD0
0001EF5C <AmiBlitz3.ab3@1062>         If running Then Delay_ 50
0001EF70 <AmiBlitz3.ab3@1064>       Until running=False
0001EF84 <AmiBlitz3.ab3@1065>       If Peek.l(?_runerror)
0001EFD4 <AmiBlitz3.ab3@1066>         If cli_verbose>=0 Then NPrint "\\1b[1m*** ERROR: Unable to run compiled program!\\1b[0m" : err=True
0001EFE6 <AmiBlitz3.ab3@1077>   preproc_Free{*PreProcessor} : *PreProcessor=#NULL
0001F030 <AmiBlitz3.ab3@1078>   If cli_verbose>=3 Then NPrint "Exit AmiBlitz3."
0001F036 <AmiBlitz3.ab3@1079>   DeinitEmulatedPED{}
0001F054 <AmiBlitz3.ab3@1081>   !asm
0001F05A <AmiBlitz3.ab3@1082> JMP terminate_ab3
0001F060 <AmiBlitz3.ab3@1087>   MOVEA.l ped_startup_addr,A1
0001F066 <AmiBlitz3.ab3@1088>   LEA str_tempfilename,A0
0001F068 <AmiBlitz3.ab3@1089>   JSR (A1)
0001F06E <AmiBlitz3.ab3@1096>   MOVE.l signalNum,D0
0001F074 <AmiBlitz3.ab3@1097>   MOVEA.l _execbase,A6
0001F078 <AmiBlitz3.ab3@1098>   JSR _FreeSignal(A6)
0001F07E <AmiBlitz3.ab3@1100>   MOVE.l ptr_seg_debugger,D1
0001F082 <AmiBlitz3.ab3@1101>   BEQ.b skip_unload_debugger
0001F086 <AmiBlitz3.ab3@1102>     MOVEA.l _dosbase(PC),A6
0001F08A <AmiBlitz3.ab3@1103>     JSR _UnLoadSeg(A6)
0001F08E <AmiBlitz3.ab3@1106>   BSR.w Aclearallvars
0001F092 <AmiBlitz3.ab3@1107>   BSR.w free_residents
0001F098 <AmiBlitz3.ab3@1108>   JSR free_blitzlibs
0001F09E <AmiBlitz3.ab3@1111>   MOVE.l ptr_seg_ped,D1
0001F0A2 <AmiBlitz3.ab3@1112>   BEQ freemem_and_quit
0001F0A6 <AmiBlitz3.ab3@1113>   MOVEA.l _dosbase(PC),A6
0001F0AA <AmiBlitz3.ab3@1114>   JSR _UnLoadSeg(A6)
0001F0AE <AmiBlitz3.ab3@1115>   BRA freemem_and_quit     ; added by tomsmart1 for Ped errormessage
0001F0D8 <AmiBlitz3.ab3@1118>   !basic
0001F19C <AmiBlitz3.ab3@1119> 
0001F1BA <AmiBlitz3.ab3@1120>   !asm
0001F1BE <AmiBlitz3.ab3@1121>   BRA freemem_and_quit
0001F1E8 <AmiBlitz3.ab3@1124>   !basic
0001F2AC <AmiBlitz3.ab3@1125>   error{!TRANS{"Can't load the Editor:\n"} + pedfile$ + !TRANS{"\n must quit, sorry!"} }  ; show error message  tomsmart1
0001F2CA <AmiBlitz3.ab3@1126>   !asm
0001F2CE <AmiBlitz3.ab3@1130>   BSR.w freeallox
0001F2D4 <AmiBlitz3.ab3@1131>   MOVEA.l ptr_macrobuffer_begin,A1
0001F2D6 <AmiBlitz3.ab3@1132>   MOVE.l -(a1),D0
0001F2D8 <AmiBlitz3.ab3@1133>   ADDQ.l #4,d0
0001F2DE <AmiBlitz3.ab3@1134>   MOVEA.l _execbase,A6
0001F2E2 <AmiBlitz3.ab3@1135>   JSR _FreeMem(A6)
0001F2E8 <AmiBlitz3.ab3@1138>   MOVEA.l _dosbase,A1
0001F2EE <AmiBlitz3.ab3@1139>   MOVEA.l _execbase,A6
0001F2F2 <AmiBlitz3.ab3@1140>   JSR _CloseLibrary(A6)
0001F2F8 <AmiBlitz3.ab3@1142>   MOVEA.l constpcat,A1
0001F2FE <AmiBlitz3.ab3@1143>   MOVE.l constmaxpc,D0
0001F304 <AmiBlitz3.ab3@1144>   MOVEA.l _execbase,A6
0001F308 <AmiBlitz3.ab3@1145>   JSR _FreeMem(A6)
0001F30E <AmiBlitz3.ab3@1148>   MOVEA.l _mathffpbase,A1
0001F314 <AmiBlitz3.ab3@1149>   MOVEA.l _execbase,A6
0001F318 <AmiBlitz3.ab3@1150>   JSR _CloseLibrary(A6)
0001F31E <AmiBlitz3.ab3@1160>     MOVEA.l _execbase,A6
0001F324 <AmiBlitz3.ab3@1161>     MOVE.l mempool,a0
0001F328 <AmiBlitz3.ab3@1162>     JSR _DeletePool(a6)
0001F32E <AmiBlitz3.ab3@1163>     CLR.l pushat
0001F334 <AmiBlitz3.ab3@1170>   JSR free_unusedfunctions
0001F336 <AmiBlitz3.ab3@1171>   MOVEQ #0,d0
0001F344 <AmiBlitz3.ab3@1174>   !exitasm
0001F37C <AmiBlitz3.ab3@1175>   If dynassign<>""
0001F386 <AmiBlitz3.ab3@1176>     If *AssignSema
0001F396 <AmiBlitz3.ab3@1177>       ReleaseSemaphore_ *AssignSema
0001F3AE <AmiBlitz3.ab3@1178>       If (AttemptSemaphore_ (*AssignSema))                 ; we are the exclusive owner of the sema now!
0001F442 <AmiBlitz3.ab3@1179>         dos_RemAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001F47C <AmiBlitz3.ab3@1180>         dos_RemAssign{dynassign}
0001F48C <AmiBlitz3.ab3@1181>         RemSemaphore_ *AssignSema
0001F49C <AmiBlitz3.ab3@1182>         ReleaseSemaphore_ *AssignSema
0001F4D2 <AmiBlitz3.ab3@1183>         If *AssignSema\ss_Link\ln_Name Then FreeVec_ *AssignSema\ss_Link\ln_Name : *AssignSema\ss_Link\ln_Name = #NULL
0001F4E2 <AmiBlitz3.ab3@1184>         FreeVec_ *AssignSema
0001F4EA <AmiBlitz3.ab3@1185>         *AssignSema = #NULL
0001F518 <AmiBlitz3.ab3@1189>   SetCurrentDir{cli_path}
0001F53A <AmiBlitz3.ab3@1190>   !coutclose
0001F540 <AmiBlitz3.ab3@1191> End
0001F54C <AmiBlitz3.ab3@1196> str_doslibrary:     Dc.b "dos.library",0 : Even
0001F550 <AmiBlitz3.ab3@1197> _dosbase:           Ds.l 1
0001F556 <AmiBlitz3.ab3@1201>   MOVEA.l _execbase,A6
0001F55C <AmiBlitz3.ab3@1202>   LEA str_doslibrary,A1
0001F560 <AmiBlitz3.ab3@1203>   JSR _OldOpenLibrary(A6)
0001F566 <AmiBlitz3.ab3@1204>   MOVE.l D0,_dosbase
0001F568 <AmiBlitz3.ab3@1205> RTS
0001F56E <AmiBlitz3.ab3@1209>   MOVEA.l #str_mathffpname,A1
0001F574 <AmiBlitz3.ab3@1210>   MOVEA.l _execbase,A6
0001F578 <AmiBlitz3.ab3@1211>   JSR _OldOpenLibrary(A6)
0001F57E <AmiBlitz3.ab3@1212>   MOVE.l D0,_mathffpbase
0001F580 <AmiBlitz3.ab3@1213> RTS
0001F5B2 <AmiBlitz3.ab3@1221> !ComData_JMP{comFunc_SetNormalPointer}
0001F5E4 <AmiBlitz3.ab3@1229> !ComData_JMP{comFunc_SetBusyPointer}
0001F60E <AmiBlitz3.ab3@1233>   !basic
0001F612 <AmiBlitz3.ab3@1234>   ab3save_filenameP.l = PutD0
0001F61C <AmiBlitz3.ab3@1235>   If ab3save_filenameP
0001F644 <AmiBlitz3.ab3@1236>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001F672 <AmiBlitz3.ab3@1238>     SaveSource{ab3save_filename}
0001F678 <AmiBlitz3.ab3@1239>   Else
0001F6B2 <AmiBlitz3.ab3@1240>     error{"INTERNAL ERROR: no filename passed in D0 to SaveSource{}!"}
0001F6D0 <AmiBlitz3.ab3@1242>   !asm
0001F6D2 <AmiBlitz3.ab3@1243>   RTS
0001F6FC <AmiBlitz3.ab3@1246>   !basic
0001F700 <AmiBlitz3.ab3@1247>   ab3save_filenameP.l = PutD0
0001F70A <AmiBlitz3.ab3@1248>   If ab3save_filenameP
0001F732 <AmiBlitz3.ab3@1249>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001F760 <AmiBlitz3.ab3@1250>     LoadSource{ab3save_filename}
0001F766 <AmiBlitz3.ab3@1251>   Else
0001F7A0 <AmiBlitz3.ab3@1252>     error{"INTERNAL ERROR: no filename passed in D0 to LoadSource{}!"}
0001F7BE <AmiBlitz3.ab3@1254>   !asm
0001F7C0 <AmiBlitz3.ab3@1255>   RTS
0001F7EA <AmiBlitz3.ab3@1258>   !basic
0001F7F0 <AmiBlitz3.ab3@1259>   ClearSource{}
0001F80E <AmiBlitz3.ab3@1260>   !asm
0001F810 <AmiBlitz3.ab3@1261>   RTS
0001F83A <AmiBlitz3.ab3@1264>   !basic
0001F840 <AmiBlitz3.ab3@1265>   OpenConsoleFake{}
0001F85E <AmiBlitz3.ab3@1266>   !asm
0001F860 <AmiBlitz3.ab3@1267>   RTS
0001F88A <AmiBlitz3.ab3@1271>   !basic
0001F890 <AmiBlitz3.ab3@1272>   CloseConsoleFake{}
0001F8AE <AmiBlitz3.ab3@1273>   !asm
0001F8B0 <AmiBlitz3.ab3@1274>   RTS
0001F8B6 <AmiBlitz3.ab3@1278>   MOVE.w d6,menuitemdebug
0001F8E0 <AmiBlitz3.ab3@1279>   !basic
0001F8F2 <AmiBlitz3.ab3@1280>   menuitemx.l = Peek.w(?menuitemdebug)
0001F918 <AmiBlitz3.ab3@1281>   If menuitemx>16 OR  menuitemx<0
0001F98C <AmiBlitz3.ab3@1282>     error{"Called invalid AB3 Menuitem #"+Str$(menuitemx)+"!"}
0001F994 <AmiBlitz3.ab3@1283>     menuitemx=0
0001F9A4 <AmiBlitz3.ab3@1285>   Poke.w ?menuitemdebug,menuitemx
0001F9C2 <AmiBlitz3.ab3@1286>   !asm
0001F9C8 <AmiBlitz3.ab3@1287>   MOVE.w menuitemdebug,d6
0001F9CE <AmiBlitz3.ab3@1290>   MOVE.l A5,firstitem_
0001F9D4 <AmiBlitz3.ab3@1291>   MOVE.w D7,numlines_org
0001F9DA <AmiBlitz3.ab3@1292>   MOVE.l d7,numlines
0001F9DC <AmiBlitz3.ab3@1293>   LSL.w #2,D6
0001F9E2 <AmiBlitz3.ab3@1294>   LEA menu_items,A0
0001F9E6 <AmiBlitz3.ab3@1295>   MOVEA.l $0(A0,D6.W),A0
0001F9F0 <AmiBlitz3.ab3@1296>   MOVE.l #$FFFFffff,linenumat
0001F9FA <AmiBlitz3.ab3@1297>   MOVE.l #$FFFFffff,compilelinecounter
0001F9FC <AmiBlitz3.ab3@1300>   JSR (A0)                              ; jsr to the function for the menuitem
0001FA02 <AmiBlitz3.ab3@1301>   MOVE.l compilelinecounter,D0
0001FA04 <AmiBlitz3.ab3@1302> RTS
0001FA08 <AmiBlitz3.ab3@1304> menuitemdebug: Dc.l 0
0001FA0C <AmiBlitz3.ab3@1306> mempool                Dc.l 0
0001FA22 <AmiBlitz3.ab3@1307> str_loaddebugmessage:  Dc.b "Debug module to load",0 : Even
0001FA28 <AmiBlitz3.ab3@1308> dloaderr:             JSR handle_compileerror
0001FA44 <AmiBlitz3.ab3@1309>                        Dc.b "Can't LoadSeg debug module!",0 : Even
0001FA82 <AmiBlitz3.ab3@1317>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001FA88 <AmiBlitz3.ab3@1318>   LEA str_loaddebugmessage,A2
0001FA8E <AmiBlitz3.ab3@1319>   LEA str_blitz3assign,A0
0001FA94 <AmiBlitz3.ab3@1320>   LEA str_temp_debugmodulename,A1
0001FA96 <AmiBlitz3.ab3@1322>   JSR (A3)                                                  ;open ped filerequest
0001FA9A <AmiBlitz3.ab3@1324>   BEQ.w menu_loaddebugmodule_noload
0001FAA0 <AmiBlitz3.ab3@1325>   MOVE.l D0,ptr_temp_debugmodule
0001FAA4 <AmiBlitz3.ab3@1326>   BSR.w call_setpointerbusy
0001FAAA <AmiBlitz3.ab3@1327> 
0001FAB0 <AmiBlitz3.ab3@1328>   MOVE.l A7,errstack
0001FABA <AmiBlitz3.ab3@1329>   MOVE.l #menu_loaddebugmodule_noload,errcont
0001FAC0 <AmiBlitz3.ab3@1330>   MOVE.l ptr_temp_debugmodule,D1
0001FAC4 <AmiBlitz3.ab3@1332>   MOVEA.l _dosbase(PC),A6
0001FAC8 <AmiBlitz3.ab3@1333>   JSR _LoadSeg(A6)
0001FACA <AmiBlitz3.ab3@1334>   MOVE.l D0,D7
0001FACE <AmiBlitz3.ab3@1335>   BEQ.w dloaderr
0001FAD4 <AmiBlitz3.ab3@1336>   MOVE.l ptr_seg_debugger,D1
0001FAD8 <AmiBlitz3.ab3@1337>   BEQ.b menu_loaddebugmodule_ndseg
0001FADC <AmiBlitz3.ab3@1338>   MOVEA.l _dosbase(PC),A6
0001FAE0 <AmiBlitz3.ab3@1339>   JSR _UnLoadSeg(A6)
0001FAE4 <AmiBlitz3.ab3@1340>   BSR.w call_setpointernormal
0001FAEA <AmiBlitz3.ab3@1343>   MOVE.l D7,ptr_seg_debugger
0001FAEC <AmiBlitz3.ab3@1346> RTS
0001FB0A <AmiBlitz3.ab3@1349> str_request_exename:   Dc.b "Name of Executable to Create:",0 : Even                        ;xtext org source
0001FBCA <AmiBlitz3.ab3@1350> exepath:               Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xpath  dcb.b 192,0 org source
0001FC8A <AmiBlitz3.ab3@1351> exefilename:           Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xname  dcb.b 192,0 org source
0001FC8E <AmiBlitz3.ab3@1352> ptr_newexefilename:    Dc.l 0                                                               ;execname org
0001FCB8 <AmiBlitz3.ab3@1356>   !basic
0001FCE2 <AmiBlitz3.ab3@1357>   exepath.s = Peek.s(?exepath)
0001FD0C <AmiBlitz3.ab3@1358>   exefile.s = Peek.s(?exefilename)
0001FD8C <AmiBlitz3.ab3@1359>   exefile.s = dos_AddPart{exepath,exefile}
0001FDC4 <AmiBlitz3.ab3@1360>   Poke.s ?tempspace,exefile
0001FDE2 <AmiBlitz3.ab3@1361>   !asm
0001FDE8 <AmiBlitz3.ab3@1382>   LEA tempspace,a0
0001FDEA <AmiBlitz3.ab3@1383>   MOVE.l a0,d0
0001FDEE <AmiBlitz3.ab3@1384> BRA newcreate2
0001FE18 <AmiBlitz3.ab3@1390>   !basic
0001FE42 <AmiBlitz3.ab3@1391>   request_exename.s = Peek.s(?str_request_exename )
0001FE9E <AmiBlitz3.ab3@1392>   request_exename   = !TRANS{request_exename}
0001FEA4 <AmiBlitz3.ab3@1393>   GetD0 &request_exename
0001FEC2 <AmiBlitz3.ab3@1394>   !asm
0001FEC4 <AmiBlitz3.ab3@1395>   MOVE.l D0,A2
0001FF02 <AmiBlitz3.ab3@1398>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001FF08 <AmiBlitz3.ab3@1400>   LEA exepath,A0
0001FF0E <AmiBlitz3.ab3@1401>   LEA exefilename,A1
0001FF10 <AmiBlitz3.ab3@1403>   JSR (A3)                                                 ;open ped filerequest
0001FF14 <AmiBlitz3.ab3@1405>   BEQ.w cancel_createexe
0001FF1E <AmiBlitz3.ab3@1408>   ADD.l #1,number_of_builds
0001FF24 <AmiBlitz3.ab3@1411>   MOVE.l D0,ptr_newexefilename
0001FF2C <AmiBlitz3.ab3@1412>   MOVE.w #-1,debugversion
0001FF32 <AmiBlitz3.ab3@1413>   MOVE.w set_make_smallestcode,-(A7)
0001FF3A <AmiBlitz3.ab3@1417>     MOVE.w #1,makeexec
0001FF40 <AmiBlitz3.ab3@1418>     JSR ab3_OpenDebugFile
0001FF44 <AmiBlitz3.ab3@1419>     BSR.w startcompile
0001FF4A <AmiBlitz3.ab3@1420>     JSR ab3_CloseDebugFile
0001FF54 <AmiBlitz3.ab3@1421>     CMP.l #"NORE",reqmode
0001FF58 <AmiBlitz3.ab3@1422>   BEQ 'l1
0001FF5E <AmiBlitz3.ab3@1424>   TST.w anyerrs
0001FF62 <AmiBlitz3.ab3@1425>   BNE.b menu_createexecutable__skip
0001FF66 <AmiBlitz3.ab3@1426>   BSR.w savefile
0001FF6C <AmiBlitz3.ab3@1429>   MOVE.w (A7)+,set_make_smallestcode
0001FF6E <AmiBlitz3.ab3@1432> RTS
0001FF76 <AmiBlitz3.ab3@1436>   MOVE.w #-1,flag_noPED
0001FF78 <AmiBlitz3.ab3@1437> RTS
0001FF80 <AmiBlitz3.ab3@1441>   MOVE.w #-1,flag_noCLI
0001FF82 <AmiBlitz3.ab3@1442> RTS
0001FFAC <AmiBlitz3.ab3@1445>   !basic
0001FFD4 <AmiBlitz3.ab3@1446>     If dbg_fid>=0 Then file_Close{dbg_fid} : dbg_fid = -1
0001FFE4 <AmiBlitz3.ab3@1447>     Poke.w ?word_WriteDebugFileNow,0
00020002 <AmiBlitz3.ab3@1448>   !asm
00020004 <AmiBlitz3.ab3@1449> RTS
0002002E <AmiBlitz3.ab3@1452>   !basic
0002003E <AmiBlitz3.ab3@1453>   Poke.w ?word_WriteDebugFileNow,0
00020050 <AmiBlitz3.ab3@1454>   If dbg_fid>=0
00020066 <AmiBlitz3.ab3@1455>     file_Close{dbg_fid} : dbg_fid = -1
00020078 <AmiBlitz3.ab3@1457>   If dbg_fid.l<0
0002007A <AmiBlitz3.ab3@1458>     CLR.l d0
000200B8 <AmiBlitz3.ab3@1459>     !ComData_GetW{comWord_CreateDebugFile,D0}
000200BC <AmiBlitz3.ab3@1460>     dbg_Create.l = PutD0
000200C6 <AmiBlitz3.ab3@1461>     If (dbg_Create) ; only when set!
000200D6 <AmiBlitz3.ab3@1462>       exefileP.l = Peek.l (?ptr_newexefilename)
000200FE <AmiBlitz3.ab3@1463>       exefile.s = ""
00020130 <AmiBlitz3.ab3@1464>       If exefileP Then exefile.s = Peek.s(exefileP)
00020168 <AmiBlitz3.ab3@1465>       If exefile><""
000201BE <AmiBlitz3.ab3@1466>         dbg_fid = file_Open{exefile+".dbg",#file_forcewrite}
000201D0 <AmiBlitz3.ab3@1467>         If dbg_fid>=0
000201E2 <AmiBlitz3.ab3@1468>           Poke.w ?word_WriteDebugFileNow,-1
000201EE <AmiBlitz3.ab3@1471>       oldhunkoffset.l = -1
00020216 <AmiBlitz3.ab3@1472>       oldfile.s       = ""
00020234 <AmiBlitz3.ab3@1475>   !asm
00020236 <AmiBlitz3.ab3@1476> RTS
0002023C <AmiBlitz3.ab3@1479> TST.w word_WriteDebugFileNow
00020240 <AmiBlitz3.ab3@1480> BEQ 'skipdebugfile
0002026A <AmiBlitz3.ab3@1481> !basic
0002027C <AmiBlitz3.ab3@1482>   If dbg_fid>=0
0002028E <AmiBlitz3.ab3@1483>     pass.l          = Peek.w(?pass)
000202A0 <AmiBlitz3.ab3@1484>     makesmallest.b  = Peek.b(?make_smallestcode)               ; get the status of make_smallestcode  tomsmart1
000202C4 <AmiBlitz3.ab3@1485> 
000202CA <AmiBlitz3.ab3@1486>       oldhunkoffset.l = hunkoffset.l
000202FE <AmiBlitz3.ab3@1487>       oldfile.s       = codefile.s
0002031A <AmiBlitz3.ab3@1488>       If Peek.w (?ininclude)>0
0002032A <AmiBlitz3.ab3@1489>         codeline.l = Peek.l(?includeline);-1
0002039A <AmiBlitz3.ab3@1490>         codefile.s = dos_FilePart{incdim(Peek.w(?ininclude)-1)}
000203A0 <AmiBlitz3.ab3@1491>       Else
000203CE <AmiBlitz3.ab3@1492>         !ComData_LEA{comStr_SourceName,A0}
000203D0 <AmiBlitz3.ab3@1493>         MOVE.l A0,D0
000203D4 <AmiBlitz3.ab3@1494>         sourceP.l = PutD0
000203FC <AmiBlitz3.ab3@1495>         codefile.s = Peek.s(sourceP)
0002040C <AmiBlitz3.ab3@1496>         codeline.l = Peek.l(?linenumat)
00020434 <AmiBlitz3.ab3@1498>       hunkoffset.l = Peek.l(?destpointer)-Peek.l(?destbufferstart)
00020488 <AmiBlitz3.ab3@1499>       If oldhunkoffset><hunkoffset OR oldfile><codefile
00020498 <AmiBlitz3.ab3@1506>         *sourceLine.SourceLine_t = Peek.l(?sourceline)
000204A2 <AmiBlitz3.ab3@1507>         If *sourceLine
000204B8 <AmiBlitz3.ab3@1508>           MaxLen detokenline.s = 65536
000204FA <AmiBlitz3.ab3@1509>          !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0002050A <AmiBlitz3.ab3@1510>          *tn.preprocessor = Peek.l(?include_preprocessor)
00020536 <AmiBlitz3.ab3@1511>           written.l = preproc_Detokenize{*tn,&*sourceLine\Text,&detokenline,*sourceLine\CharLength}
00020564 <AmiBlitz3.ab3@1512>           If written>0 Then Poke.b &detokenline+written-1,0
0002058E <AmiBlitz3.ab3@1513>           sourceLineText.s = Peek.s(&detokenline)
00020594 <AmiBlitz3.ab3@1514>         Else
000205BC <AmiBlitz3.ab3@1515>           sourceLineText = "NULL"
00020684 <AmiBlitz3.ab3@1518>         file_WriteLine{dbg_fid,Hex$(hunkoffset)+" <"+codefile+"@"+Str$(codeline)+"> "+sourceLineText}
000206A2 <AmiBlitz3.ab3@1524> !asm
000206A4 <AmiBlitz3.ab3@1526> RTS
000206A6 <AmiBlitz3.ab3@1528> word_WriteDebugFileNow: Dc.w 0
000206A8 <AmiBlitz3.ab3@1530> flag_noPED:  Ds.w 1                                        ;closeed org source
000206AA <AmiBlitz3.ab3@1531> flag_noCLI:  Ds.w 1                                        ;nocli org source
000206AE <AmiBlitz3.ab3@1535>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
000206B4 <AmiBlitz3.ab3@1536>   MOVEA.l _execbase,A6
000206B8 <AmiBlitz3.ab3@1537>   JSR _CacheClearU(A6)
000206BC <AmiBlitz3.ab3@1538>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
000206BE <AmiBlitz3.ab3@1539> RTS
000206C2 <AmiBlitz3.ab3@1542>   MOVEM.l A2-A3,-(A7)
000206C8 <AmiBlitz3.ab3@1543>   CLR.b doublepeek
000206CE <AmiBlitz3.ab3@1544>   MOVE.l A5,lastsourcepos
000206D4 <AmiBlitz3.ab3@1545>    JSR getchar
000206D8 <AmiBlitz3.ab3@1546>   CMP.w #$2E,D0
000206DC <AmiBlitz3.ab3@1547>    BEQ.w JL_0_49B4b
000206E2 <AmiBlitz3.ab3@1548>   MOVEA.l defaulttype,A2
000206E6 <AmiBlitz3.ab3@1549>   CMP.w #$24,D0
000206EA <AmiBlitz3.ab3@1550>    BNE.w JL_0_49CAb
000206EC <AmiBlitz3.ab3@1551>   MOVEQ.l #$07,D1
000206F0 <AmiBlitz3.ab3@1552> BRA.w JL_0_49DEb
000206F6 <AmiBlitz3.ab3@1555>   JSR getparameter2
000206FA <AmiBlitz3.ab3@1556>   BEQ.w syntaxerrb
00020700 <AmiBlitz3.ab3@1557>   LEA newtypebase,A2
00020706 <AmiBlitz3.ab3@1558>   JSR findtype
0002070A <AmiBlitz3.ab3@1559>   BNE.w notypeerrb
00020714 <AmiBlitz3.ab3@1564>   MOVE.w oldqflag,instringon
0002071A <AmiBlitz3.ab3@1565>   MOVEA.l lastsourcepos,A5
00020720 <AmiBlitz3.ab3@1567>   MOVE.l a2,functionreturntype
00020728 <AmiBlitz3.ab3@1568>   CMPI.l #$100,$4(A2)
0002072C <AmiBlitz3.ab3@1569>   BLE.w 'isvar
0002072E <AmiBlitz3.ab3@1573>   MOVEQ #3,d1
00020732 <AmiBlitz3.ab3@1574>   BRA JL_0_49DEb
00020736 <AmiBlitz3.ab3@1581>   MOVE.w $6(A2),D1
0002073C <AmiBlitz3.ab3@1582>   CMP.w #8,8(a2)
00020740 <AmiBlitz3.ab3@1583>   BNE 'l1
00020748 <AmiBlitz3.ab3@1584>   MOVE.b #1,doublepeek
0002074E <AmiBlitz3.ab3@1588>   MOVE.w D1,convsize
00020752 <AmiBlitz3.ab3@1589>   MOVEM.l (A7)+,A2-A3
00020754 <AmiBlitz3.ab3@1590> RTS
0002075A <AmiBlitz3.ab3@1592> notypeerrb JMP notypeerr
00020760 <AmiBlitz3.ab3@1593> illtypeerrb JMP illtypeerr
00020766 <AmiBlitz3.ab3@1594> syntaxerrb JMP syntaxerr
00020770 <AmiBlitz3.ab3@1639>   ADD.l #1,number_of_builds
00020776 <AmiBlitz3.ab3@1641>   CLR.w debugversion
0002077C <AmiBlitz3.ab3@1642>   CLR.w flag_noPED
00020782 <AmiBlitz3.ab3@1643>   CLR.w flag_noCLI
0002078A <AmiBlitz3.ab3@1646>     MOVE.w #0,makeexec                                     ;MOVE.w #$FFFF,debugversion
0002078E <AmiBlitz3.ab3@1647>     BSR.w startcompile
00020798 <AmiBlitz3.ab3@1648>     CMP.l #"NORE",reqmode
0002079C <AmiBlitz3.ab3@1649>   BEQ 'l1
000207A2 <AmiBlitz3.ab3@1652>   TST.w anyerrs
000207A6 <AmiBlitz3.ab3@1653>    BNE.w JL_0_3482
000207AA <AmiBlitz3.ab3@1655>   MOVE.w flag_noPED(PC),D1
000207AE <AmiBlitz3.ab3@1656>    BEQ.w skip_closingGUI
000207E0 <AmiBlitz3.ab3@1661>   !ComData_JSR{comFunc_CloseGUI}
000207E4 <AmiBlitz3.ab3@1662> BRA.b runprogram
000207E8 <AmiBlitz3.ab3@1666>   BSR.w compilerequester
000207EE <AmiBlitz3.ab3@1669>   MOVEA.l _dosbase,A6
000207F4 <AmiBlitz3.ab3@1670>   LEA exepath,a0
000207F6 <AmiBlitz3.ab3@1671>   MOVE.l a0,d1
000207F8 <AmiBlitz3.ab3@1672>   MOVEQ #-2,d2
000207FC <AmiBlitz3.ab3@1673>   JSR _Lock(a6)                                            ;lock
00020802 <AmiBlitz3.ab3@1674>   MOVE.l d0,exelock
00020808 <AmiBlitz3.ab3@1675>   MOVE.l #0,d1
0002080C <AmiBlitz3.ab3@1676>   JSR _CurrentDir(A6)
00020812 <AmiBlitz3.ab3@1677>   MOVE.l D0,lock_currentdir
00020814 <AmiBlitz3.ab3@1678>   MOVE.l D0,D1
00020818 <AmiBlitz3.ab3@1679>   JSR _CurrentDir(A6)
0002081E <AmiBlitz3.ab3@1680>   CLR.l ptr_exetask
00020824 <AmiBlitz3.ab3@1689>   MOVE.l #str_process_name,D1
00020826 <AmiBlitz3.ab3@1690>   MOVEQ.l #$00,D2
0002082C <AmiBlitz3.ab3@1691>   MOVE.l #proc_seglist,D3
0002082E <AmiBlitz3.ab3@1692>   LSR.l #2,D3
00020834 <AmiBlitz3.ab3@1693>   MOVE.l stacksize,D4
0002083A <AmiBlitz3.ab3@1694>   MOVEA.l _dosbase,A6
0002083E <AmiBlitz3.ab3@1695>   JSR _CreateProc(A6)                                      ;runtask
00020840 <AmiBlitz3.ab3@1696>   TST.l D0
00020844 <AmiBlitz3.ab3@1697>    BEQ ErrorRunningProg
0002087A <AmiBlitz3.ab3@1699>   !ComData_SetB{comByte_RunningFlag,#1}   ; this should be done here, straigt after it is clear that
00020880 <AmiBlitz3.ab3@1701>   TST.w flag_noPED
00020884 <AmiBlitz3.ab3@1702>    BNE.b JL_0_344E
00020888 <AmiBlitz3.ab3@1703>   BSR.w close_compilewin
0002088E <AmiBlitz3.ab3@1706>   CLR.l firstlocal
00020894 <AmiBlitz3.ab3@1707>   CLR.l firstglob
00020898 <AmiBlitz3.ab3@1708>   MOVE.w flag_noPED(PC),D1
0002089C <AmiBlitz3.ab3@1709>   BEQ.w skip_openGUI
000208CE <AmiBlitz3.ab3@1713>   !ComData_JSR{comFunc_CreateGUI}
000208D0 <AmiBlitz3.ab3@1723> RTS
000208DA <AmiBlitz3.ab3@1726> MOVE.l #1,_runerror
000208DE <AmiBlitz3.ab3@1727> BRA JL_0_344E
000208E2 <AmiBlitz3.ab3@1729> _runerror: Dc.l 0
000208E6 <AmiBlitz3.ab3@1730> lock_currentdir:    Ds.l 1                                          ;tasklock org source
000208EA <AmiBlitz3.ab3@1731> ptr_exetask:        Ds.l 1                                          ;panictask org source
000208EE <AmiBlitz3.ab3@1732> signalNum:          Ds.l 1                                          ;panicbit org source
000208F2 <AmiBlitz3.ab3@1733> signals:            Ds.l 1                                          ;panicmask org source
00020908 <AmiBlitz3.ab3@1735> str_process_name:   Dc.b "Blitz ][ Program Proc",0 : Even           ;procname org source
0002090D <AmiBlitz3.ab3@1736>                     Ds.b 5                                          ;cnop 0,4 :dc.l 0   ;length org source
00020910 <AmiBlitz3.ab3@1737> Even4
00020914 <AmiBlitz3.ab3@1739> ptr_ThisTask:       Ds.l 1                                          ;length
00020918 <AmiBlitz3.ab3@1740> .proc_seglist:      Ds.l 1                                          ;procstart org source ;next
0002091E <AmiBlitz3.ab3@1744>   MOVEA.l $4,A0
00020926 <AmiBlitz3.ab3@1745>   MOVE.l  $114(A0),ptr_exetask
0002092C <AmiBlitz3.ab3@1747>   MOVEA.l _dosbase,A6
00020932 <AmiBlitz3.ab3@1748>   MOVE.l exelock,D1
00020936 <AmiBlitz3.ab3@1749>   JSR _CurrentDir(A6)
0002096C <AmiBlitz3.ab3@1754>   !ComData_SetB{comByte_RunningFlag,#1}
00020970 <AmiBlitz3.ab3@1760>   MOVE.w flag_noCLI(PC),D1
00020974 <AmiBlitz3.ab3@1761>    BNE.b skip_openconsole
000209A6 <AmiBlitz3.ab3@1765>   !ComData_JSR{comFunc_OpenConsole}
000209AA <AmiBlitz3.ab3@1768>   BSR.w calcvbr
000209B0 <AmiBlitz3.ab3@1769>   MOVEA.l vbr,A0
000209B6 <AmiBlitz3.ab3@1774>   CLR.w dirmode
000209BC <AmiBlitz3.ab3@1775>   CLR.l firstglob
000209C2 <AmiBlitz3.ab3@1776>   CLR.l firstlocal
000209C8 <AmiBlitz3.ab3@1778>   MOVE.l stacksize,D2
000209CE <AmiBlitz3.ab3@1779>   MOVE.l #$624C745A,D7                                      ;#'bLtZ',d7 org source ;force cli-type run
000209D4 <AmiBlitz3.ab3@1780>   LEA str_cliarguments,A0                                   ;cli arguement
000209DA <AmiBlitz3.ab3@1781>   MOVEA.l destbufferstart,A1
000209DE <AmiBlitz3.ab3@1782>   BSR.w Aclearcache
000209E0 <AmiBlitz3.ab3@1785>   JSR (A1)                                                 ; execute compiled code  ;Run the thing!
000209E6 <AmiBlitz3.ab3@1787>   MOVEA.l vbr,A0
000209EC <AmiBlitz3.ab3@1789>   CLR.l firstglob
000209F2 <AmiBlitz3.ab3@1790>   CLR.l firstlocal
000209F8 <AmiBlitz3.ab3@1791>   MOVEA.l _dosbase,A6
000209FE <AmiBlitz3.ab3@1792>   MOVE.l exelock,d1
00020A02 <AmiBlitz3.ab3@1793>   BEQ 'nolock
00020A06 <AmiBlitz3.ab3@1794>   JSR _UnLock(a6)
00020A3C <AmiBlitz3.ab3@1799>   !ComData_SetB{comByte_RunningFlag,#0}
00020A40 <AmiBlitz3.ab3@1802>   MOVE.w flag_noCLI(PC),D1
00020A44 <AmiBlitz3.ab3@1803>    BNE.b skip_closeconsole
00020A76 <AmiBlitz3.ab3@1807>   !ComData_JSR{comFunc_CloseConsole}
00020A7E <AmiBlitz3.ab3@1810>   MOVE.w #$0001,stopit
00020A82 <AmiBlitz3.ab3@1811>   MOVE.l signals(PC),D0
00020A88 <AmiBlitz3.ab3@1812>   MOVEA.l ptr_ThisTask,A1
00020A8E <AmiBlitz3.ab3@1813>   MOVEA.l _execbase,A6
00020A92 <AmiBlitz3.ab3@1814>   JSR _Signal(A6)
00020A94 <AmiBlitz3.ab3@1815> RTS
00020A9A <AmiBlitz3.ab3@1819>   MOVEA.l _execbase,A6
00020A9E <AmiBlitz3.ab3@1820>   MOVE.w $128(A6),D0
00020AA0 <AmiBlitz3.ab3@1821>   MOVEQ.l #$00,D1
00020AA4 <AmiBlitz3.ab3@1822>   ANDI.w #$F,D0
00020AA8 <AmiBlitz3.ab3@1825>     BEQ.b calcvbr__skip
00020AAA <AmiBlitz3.ab3@1826>     ADDQ.w #1,D1
00020AAC <AmiBlitz3.ab3@1827>     LSR.w #1,D0
00020AB0 <AmiBlitz3.ab3@1828> BRA.b calcvbr_loop
00020AB2 <AmiBlitz3.ab3@1831>   MOVEQ.l #$00,D2
00020AB6 <AmiBlitz3.ab3@1832>   CMP.w #$2,D1
00020ABA <AmiBlitz3.ab3@1833>    BCS.b calcvbr__skip2
00020AC0 <AmiBlitz3.ab3@1834>   MOVEA.l _execbase,A6
00020AC4 <AmiBlitz3.ab3@1835>   JSR _SuperState(A6)
00020AC8 <AmiBlitz3.ab3@1836>   Dc.l $4E7A2801                                           ;movec vbr,D2
00020ACC <AmiBlitz3.ab3@1837>   JSR _UserState(A6)
00020AD2 <AmiBlitz3.ab3@1840>   MOVE.l D2,vbr
00020AD4 <AmiBlitz3.ab3@1841> RTS
00020ADA <AmiBlitz3.ab3@1845>   LEA instrtab,a0
00020AE0 <AmiBlitz3.ab3@1846>   MOVE.l #labelhash-instrtab,d0
00020AE2 <AmiBlitz3.ab3@1847>   ASR.l #2,d0
00020AE4 <AmiBlitz3.ab3@1848>   SUBQ.l #1,d0
00020AE6 <AmiBlitz3.ab3@1851>   CLR.l (a0)+
00020AE8 <AmiBlitz3.ab3@1852>   SUBQ.l #1,d0
00020AEC <AmiBlitz3.ab3@1853>   BNE 'l10
00020AF0 <AmiBlitz3.ab3@1854>   BSR.w call_setpointerbusy
00020AF4 <AmiBlitz3.ab3@1855>   BSR.w free_userlibs
00020AF8 <AmiBlitz3.ab3@1856>   BSR.w scan_for_userlibs
00020AFC <AmiBlitz3.ab3@1857>   BSR.w JL_0_7082
00020B00 <AmiBlitz3.ab3@1858> BRA.w call_setpointernormal
00020B2A <AmiBlitz3.ab3@1864>   !basic
00020B64 <AmiBlitz3.ab3@1865>   Poke.l ?size_acidlibs, dos_GetFileSize{Peek$(?str_path_acidlibs)}
00020B74 <AmiBlitz3.ab3@1867>   deflibNameP.l = Peek.l(?deflib)
00020B7E <AmiBlitz3.ab3@1868>   If deflibNameP
00020BB0 <AmiBlitz3.ab3@1869>     If Peek.s(deflibNameP)<>""
00020BFA <AmiBlitz3.ab3@1870>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(Peek.l(?deflib))}
00020C00 <AmiBlitz3.ab3@1871>     Else
00020C3A <AmiBlitz3.ab3@1872>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
00020C40 <AmiBlitz3.ab3@1874>   Else
00020C7A <AmiBlitz3.ab3@1875>     Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
00020CB4 <AmiBlitz3.ab3@1876>     error{"INTERNAL: Invalid deflib name pointer!"}
00020CD2 <AmiBlitz3.ab3@1878>   !asm
00020CD8 <AmiBlitz3.ab3@1883>   MOVE.l #str_path_userlibs,D1
00020CDA <AmiBlitz3.ab3@1884>   MOVEQ.l #-$02,D2
00020CE0 <AmiBlitz3.ab3@1885>   MOVEA.l _dosbase,A6
00020CE4 <AmiBlitz3.ab3@1886>   JSR _Lock(A6)
00020CE6 <AmiBlitz3.ab3@1887>   MOVE.l D0,D7
00020CEA <AmiBlitz3.ab3@1888>    BEQ.w exit_get_libraries
00020CEC <AmiBlitz3.ab3@1889>   MOVE.l D7,D1
00020CF2 <AmiBlitz3.ab3@1890>   MOVE.l #ptr_parameterstore,D2
00020CF6 <AmiBlitz3.ab3@1891>   JSR _Examine(A6)
00020CF8 <AmiBlitz3.ab3@1892>   TST.l D0
00020CFC <AmiBlitz3.ab3@1893>   BEQ.w unlock_and_exit_get_libraries
00020D02 <AmiBlitz3.ab3@1894>   MOVE.l fib_DirEntryType,D0
00020D06 <AmiBlitz3.ab3@1895>   BMI.w unlock_and_exit_get_libraries
00020D08 <AmiBlitz3.ab3@1900>     MOVE.l D7,D1
00020D0E <AmiBlitz3.ab3@1901>     MOVE.l #ptr_parameterstore,D2
00020D14 <AmiBlitz3.ab3@1902>     MOVEA.l _dosbase,A6
00020D18 <AmiBlitz3.ab3@1903>     JSR _ExNext(A6)
00020D1A <AmiBlitz3.ab3@1904>     TST.l D0
00020D1E <AmiBlitz3.ab3@1905>      BEQ.w exit_scan_libsdrawer                            ; kein weiteres File
00020D24 <AmiBlitz3.ab3@1907>     MOVE.l fib_DirEntryType,D0                             ; positive for directoies, negative for files
00020D28 <AmiBlitz3.ab3@1908>     BPL.w scan_libsdrawer                                  ; skip directories
00020D2E <AmiBlitz3.ab3@1910>     LEA fib_FileName,A0                                    ; pruefen ob infofile
00020D32 <AmiBlitz3.ab3@1911>     BSR.w check_for_infoextention
00020D36 <AmiBlitz3.ab3@1912>     BEQ.w scan_libsdrawer
00020D3C <AmiBlitz3.ab3@1914>     MOVEA.l _execbase,A6                                   ; allocate $26 = 38 bytes fuer listeneintrag
00020D3E <AmiBlitz3.ab3@1915>     MOVEQ.l #$26,D0
00020D40 <AmiBlitz3.ab3@1916>     MOVEQ.l #$01,D1
00020D46 <AmiBlitz3.ab3@1917>     MOVE.l mempool,a0
00020D4A <AmiBlitz3.ab3@1918>     JSR _AllocPooled(a6)
00020D50 <AmiBlitz3.ab3@1920>     MOVEA.l _dosbase,A6
00020D52 <AmiBlitz3.ab3@1921>     MOVE.l D0,D6                                           ; sichere speicheradresse in D6
00020D58 <AmiBlitz3.ab3@1924>     LEA ptr_userlibs_list,A0                               ; pruefe liste
00020D5A <AmiBlitz3.ab3@1927>     MOVE.l (A0),D5
00020D5E <AmiBlitz3.ab3@1928>      BEQ.w JL_0_3722                                       ; kein pointer da? kann springe weiter
00020D60 <AmiBlitz3.ab3@1929>     MOVEA.l D5,A2
00020D62 <AmiBlitz3.ab3@1930>     ADDQ.w #6,A2                                           ; 6 bytes weiter gehen, um dateinamen zu speichern
00020D68 <AmiBlitz3.ab3@1933>     LEA fib_FileName,A1                                    ; vergleich, ob Dateiname schon in der liste ist
00020D6A <AmiBlitz3.ab3@1936>       MOVEQ.l #$00,D0
00020D6C <AmiBlitz3.ab3@1937>       MOVE.b (A1)+,D0
00020D70 <AmiBlitz3.ab3@1938>        BEQ.w JL_0_3722                                     ; dateiname komplett, dann weiter
00020D72 <AmiBlitz3.ab3@1939>       MOVEQ.l #$00,D1
00020D74 <AmiBlitz3.ab3@1940>       MOVE.b (A2)+,D1
00020D78 <AmiBlitz3.ab3@1941>        BEQ.w JL_0_371C
00020D9A <AmiBlitz3.ab3@1942>       !compare1                                            ;bsr.w tstalpha
00020D9E <AmiBlitz3.ab3@1943>       BNE.w JL_0_3702
00020DA2 <AmiBlitz3.ab3@1944>       ANDI.w #$DF,D0
00020DA4 <AmiBlitz3.ab3@1947>       EXG.l D0,D1
00020DC6 <AmiBlitz3.ab3@1948>       !compare1                                            ;bsr.w tstalpha
00020DCA <AmiBlitz3.ab3@1949>       BNE.w JL_0_3710
00020DCE <AmiBlitz3.ab3@1950>       ANDI.w #$DF,D0
00020DD0 <AmiBlitz3.ab3@1953>       EXG.l D0,D1
00020DD2 <AmiBlitz3.ab3@1954>       CMP.b D1,D0
00020DD6 <AmiBlitz3.ab3@1955>     BEQ.w JL_0_36E6
00020DDA <AmiBlitz3.ab3@1956>     BCS.w JL_0_3722
00020DDC <AmiBlitz3.ab3@1959>     MOVEA.l D5,A0
00020DE0 <AmiBlitz3.ab3@1960> BRA.w JL_0_36D6
00020DE2 <AmiBlitz3.ab3@1963>     MOVEA.l D6,A1                                          ; hier war die adresse des allokierten Speicers drin
00020DE4 <AmiBlitz3.ab3@1964>     MOVE.l (A0),(A1)
00020DE6 <AmiBlitz3.ab3@1965>     MOVE.l A1,(A0)
00020DE8 <AmiBlitz3.ab3@1966>     ADDQ.w #4,A1                                           ; pointer zum naechsten namen ueberspringen
00020DEC <AmiBlitz3.ab3@1967>     MOVE.w #$FFFF,(A1)+                                    ; $FFFF schreiben
00020DF2 <AmiBlitz3.ab3@1968>     MOVEA.l #fib_FileName,A0                               ; dateinamen in die liste kopieren
00020DF4 <AmiBlitz3.ab3@1971>       MOVE.b (A0)+,(A1)+
00020DF8 <AmiBlitz3.ab3@1972>     BNE.w JL_0_3734
00020DFC <AmiBlitz3.ab3@1973> BRA.w scan_libsdrawer
00020DFE <AmiBlitz3.ab3@1976>   MOVE.l D7,D1
00020E04 <AmiBlitz3.ab3@1977>   MOVEA.l _dosbase,A6
00020E08 <AmiBlitz3.ab3@1978>   JSR _UnLock(A6)
00020E0A <AmiBlitz3.ab3@1979>   MOVEQ.l #-$01,D0
00020E0C <AmiBlitz3.ab3@1982> RTS
00020E0E <AmiBlitz3.ab3@1985>   MOVE.l D7,D1
00020E14 <AmiBlitz3.ab3@1986>   MOVEA.l _dosbase,A6
00020E18 <AmiBlitz3.ab3@1987>   JSR _UnLock(A6)
00020E1A <AmiBlitz3.ab3@1988>   MOVEQ.l #$00,D0
00020E1C <AmiBlitz3.ab3@1989> RTS
00020E22 <AmiBlitz3.ab3@1993>   MOVEA.l _execbase,A6
00020E28 <AmiBlitz3.ab3@1994>   MOVEA.l ptr_userlibs_list,A2
00020E2E <AmiBlitz3.ab3@1995>   CLR.l ptr_userlibs_list
00020E32 <AmiBlitz3.ab3@1998>     CMPA.w #$0,A2
00020E36 <AmiBlitz3.ab3@1999>     BEQ.w exit_free_userlib
00020E38 <AmiBlitz3.ab3@2000>       MOVEA.l A2,A1
00020E3A <AmiBlitz3.ab3@2001>       MOVEQ.l #$26,D0
00020E3C <AmiBlitz3.ab3@2002>       MOVEA.l (A2),A2
00020E42 <AmiBlitz3.ab3@2003>       MOVE.l mempool,a0
00020E48 <AmiBlitz3.ab3@2004>       MOVEA.l _execbase,A6
00020E4C <AmiBlitz3.ab3@2005>       JSR _FreePooled(A6)
00020E50 <AmiBlitz3.ab3@2006> BRA.w loop_free_userlib
00020E52 <AmiBlitz3.ab3@2009> RTS
00020E54 <AmiBlitz3.ab3@2012> pass:  Dc.w 0                                             ; smallpass org source
00020E56 <AmiBlitz3.ab3@2013> compiler_job: Dc.w 0                                      ; added by thilo: what the compiler is doing at the moment
00020E5C <AmiBlitz3.ab3@2017>   MOVE.l A7,errstack                                      ;startcompile
00020E62 <AmiBlitz3.ab3@2026>   CLR.l reqmode
00020E6C <AmiBlitz3.ab3@2028>   MOVE.l #Aclearallvars,errcont
00020E76 <AmiBlitz3.ab3@2029>   MOVE.l #concomstack,concomsp
00020E7A <AmiBlitz3.ab3@2037>   MOVE.w #1450,D0
00020E7C <AmiBlitz3.ab3@2038>   LSR.w #3,D0
00020E7E <AmiBlitz3.ab3@2039>   SUBQ.w #7,D0                                             ; 173
00020E84 <AmiBlitz3.ab3@2040>   MOVE.w D0,progressbar_width
00020E86 <AmiBlitz3.ab3@2041>   SWAP D0
00020E88 <AmiBlitz3.ab3@2042>   CLR.w D0
00020E8E <AmiBlitz3.ab3@2043>   MOVE.l numlines,d1
00020E92 <AmiBlitz3.ab3@2044>   DIVU.l d1,d0                                             ; progressbar_width / numlines
00020E94 <AmiBlitz3.ab3@2046>   TST.w D0
00020E98 <AmiBlitz3.ab3@2047>   BNE.w JL_0_37C0
00020E9A <AmiBlitz3.ab3@2048>   MOVEQ.l #-$01,D0
00020EA0 <AmiBlitz3.ab3@2051>   MOVE.w D0,progress_per_line
00020EA8 <AmiBlitz3.ab3@2060>   BTST #$7,use_debugger
00020EAC <AmiBlitz3.ab3@2062>   BNE 'debugon
00020EB2 <AmiBlitz3.ab3@2063>   CLR.w debugmode
00020EB6 <AmiBlitz3.ab3@2064> BRA.b 'debugoff
00020EBC <AmiBlitz3.ab3@2067>   SNE debugmode
00020EF4 <AmiBlitz3.ab3@2075>   !ComData_SetB{comByte_DebugMode,debugmode}
00020EFA <AmiBlitz3.ab3@2078>   CLR.w dirmode                                            ;direct mode flag
00020F00 <AmiBlitz3.ab3@2079>   CLR.w ezerr                                              ;quiet error
00020F06 <AmiBlitz3.ab3@2080>   CLR.l currentfunction
00020F0C <AmiBlitz3.ab3@2081>   CLR.w connest
00020F12 <AmiBlitz3.ab3@2082>   CLR.w varmode
00020F18 <AmiBlitz3.ab3@2083>   CLR.w proceduremode
00020F1E <AmiBlitz3.ab3@2084>   CLR.w ininclude
00020F24 <AmiBlitz3.ab3@2085>   CLR.w intstring
00020F2A <AmiBlitz3.ab3@2086>   CLR.w pass
00020F32 <AmiBlitz3.ab3@2087>   MOVE.w #0,compiler_job
00020F38 <AmiBlitz3.ab3@2088>   CLR.l funcscanon
00020F3E <AmiBlitz3.ab3@2097>   CLR.l funcscanon
00020F42 <AmiBlitz3.ab3@2098>   BSR.w compileall
00020F48 <AmiBlitz3.ab3@2099> 
00020F4E <AmiBlitz3.ab3@2100>   TST.l errorcounter
00020F52 <AmiBlitz3.ab3@2101>   BEQ _skiperrorstop
00020F54 <AmiBlitz3.ab3@2102>   RTS
00020F5A <AmiBlitz3.ab3@2105>   MOVE.w dontwrite,d0
00020F5E <AmiBlitz3.ab3@2106>   CMP.w #1,d0
00020F62 <AmiBlitz3.ab3@2107>   BNE 'l3
00020F68 <AmiBlitz3.ab3@2108>   TST.l errorcounter
00020F6C <AmiBlitz3.ab3@2109>   BNE 'l3
00020F72 <AmiBlitz3.ab3@2110>   CLR.w dontwrite
00020F76 <AmiBlitz3.ab3@2111>   BSR compileall                                           ;if a function is not found
00020F7C <AmiBlitz3.ab3@2112>   ADDQ.w #1,pass
00020FBA <AmiBlitz3.ab3@2117>   !ComData_GetB{comByte_FuncOptimize,D0}  ; now its in the xtra file and can be put to GUI settings ; Wanderer
00020FBE <AmiBlitz3.ab3@2118>   BEQ 'out  ; only if func optimize is set >< 0; Wanderer
00020FC4 <AmiBlitz3.ab3@2119>   LEA firstproc,a0
00020FCA <AmiBlitz3.ab3@2120>   CLR.l savefuncspace
00020FCC <AmiBlitz3.ab3@2121>   MOVE.l (a0),d0
00020FCE <AmiBlitz3.ab3@2125>     MOVE.l d0,a0
00020FD2 <AmiBlitz3.ab3@2126>     BEQ 'out
00020FD6 <AmiBlitz3.ab3@2127>     TST.b isfunc(a0)
00020FDA <AmiBlitz3.ab3@2128>     BNE 'nex
00020FDE <AmiBlitz3.ab3@2129>     MOVEM.l d2/a6/a0,-(a7)
00020FE0 <AmiBlitz3.ab3@2131>     MOVEQ #0,d0
00020FE4 <AmiBlitz3.ab3@2132>     MOVE.b $21+#funcentry_extend-1(a0),d0
00020FE8 <AmiBlitz3.ab3@2133>     SUB.w #$21+#funcentry_extend,d0
00020FEC <AmiBlitz3.ab3@2134>     ADD.w #16,d0
00020FF2 <AmiBlitz3.ab3@2135>     MOVE.l #$10000,d1
00020FF4 <AmiBlitz3.ab3@2136>     MOVE.l d0,d2
00020FFA <AmiBlitz3.ab3@2137>     MOVEA.l _execbase,A6
00020FFE <AmiBlitz3.ab3@2138>     JSR _AllocMem(a6)         ; thilo: not 100% sure about this!
00021000 <AmiBlitz3.ab3@2139>     MOVE.l d0,a1
00021004 <AmiBlitz3.ab3@2140>     MOVE.l d2,4(a1)
0002100A <AmiBlitz3.ab3@2141>     MOVE.l unusedfunc,(a1)
00021010 <AmiBlitz3.ab3@2142>     MOVE.l d0,unusedfunc
00021014 <AmiBlitz3.ab3@2143>     MOVEM.l (a7)+,a6/a0/d2
00021018 <AmiBlitz3.ab3@2144>     MOVE.l isfunc+1(a0),d0
0002101A <AmiBlitz3.ab3@2145>     ADDQ.l #6,d0
00021020 <AmiBlitz3.ab3@2146>     ADD.l d0,savefuncspace
00021024 <AmiBlitz3.ab3@2149>     MOVE.l d0,8(a1)
00021028 <AmiBlitz3.ab3@2150>     LEA 12(a1),a1
0002102A <AmiBlitz3.ab3@2151>     MOVE.l a0,-(a7)
0002102E <AmiBlitz3.ab3@2152>     LEA $21+#funcentry_extend(a0),a0
00021030 <AmiBlitz3.ab3@2155>       MOVE.b (a0)+,(a1)+
00021034 <AmiBlitz3.ab3@2156>     BNE 'l1
00021036 <AmiBlitz3.ab3@2157>     MOVE.l (a7)+,a0
00021038 <AmiBlitz3.ab3@2160>     MOVE.l (a0),d0
0002103C <AmiBlitz3.ab3@2161> BRA 'lr1
00021044 <AmiBlitz3.ab3@2164>   BTST #$7,make_smallestcode
00021048 <AmiBlitz3.ab3@2165>   BEQ.b JL_0_3844                                           ;optimize for executable
0002104E <AmiBlitz3.ab3@2166>   CLR.l morememadd
00021052 <AmiBlitz3.ab3@2168>   BSR.w alloxadj
00021056 <AmiBlitz3.ab3@2169>   BEQ.w JL_0_388A
0002105A <AmiBlitz3.ab3@2172>   BSR.w compileall
00021060 <AmiBlitz3.ab3@2173>   ADDQ.w #1,pass
00021066 <AmiBlitz3.ab3@2176>   MOVE.w dontwrite,D1
0002106A <AmiBlitz3.ab3@2177>   BEQ.w JL_0_38A2
0002106E <AmiBlitz3.ab3@2197> BRA.w JL_0_3896
00021076 <AmiBlitz3.ab3@2208>   MOVE.w #$FFFF,anyerrs
0002107A <AmiBlitz3.ab3@2209> BRA.w JL_0_38A2
0002107E <AmiBlitz3.ab3@2212>   BSR.w alloxinc                                          ;increase all by 50%
00021082 <AmiBlitz3.ab3@2213>   BEQ.w Aclearallvars
00021086 <AmiBlitz3.ab3@2214> BRA.w JL_0_3824
0002108A <AmiBlitz3.ab3@2226> BRA.w JL_0_38A6                                            ;???????
00021090 <AmiBlitz3.ab3@2230>   JSR freereps
00021096 <AmiBlitz3.ab3@2231>   JSR freesels
0002109C <AmiBlitz3.ab3@2232>   JSR AJL_0_6DF2
000210A2 <AmiBlitz3.ab3@2233>   JSR freepends
000210A8 <AmiBlitz3.ab3@2234>   JSR freeifs
000210AE <AmiBlitz3.ab3@2235>   JSR AJL_0_C188
000210B4 <AmiBlitz3.ab3@2236>   JSR AJL_0_C15C
000210BA <AmiBlitz3.ab3@2237>   JSR AJL_0_D9BC
000210C0 <AmiBlitz3.ab3@2240> JMP cleartemplabel
000210C4 <AmiBlitz3.ab3@2243> mempool2:  Dc.l 0
000210CA <AmiBlitz3.ab3@2247>   JSR Aclearcache
000210D2 <AmiBlitz3.ab3@2249>   BTST #$7,use_debugger
000210D6 <AmiBlitz3.ab3@2251>   BNE 'debugon
000210DC <AmiBlitz3.ab3@2252>   CLR.w debugmode
000210E0 <AmiBlitz3.ab3@2253> BRA.b 'debugoff
000210E6 <AmiBlitz3.ab3@2256>   SNE debugmode
0002111E <AmiBlitz3.ab3@2261>   !ComData_SetB{comByte_DebugMode,debugmode}
00021124 <AmiBlitz3.ab3@2263>   LEA regtable,a0
00021126 <AmiBlitz3.ab3@2264>   MOVEQ #10,d0
00021128 <AmiBlitz3.ab3@2267>     CLR.l (a0)+
0002112C <AmiBlitz3.ab3@2268>   DBF d0,'l1
00021132 <AmiBlitz3.ab3@2270>   LEA includetemp2,a0
00021134 <AmiBlitz3.ab3@2271>   CLR.b (a0)
0002113E <AmiBlitz3.ab3@2272>   MOVE.l #7,maxregs
00021144 <AmiBlitz3.ab3@2273>   CLR.w debugnest
0002114A <AmiBlitz3.ab3@2274>   CLR.b funcparloop
00021150 <AmiBlitz3.ab3@2275>   CLR.b nostringopt
00021156 <AmiBlitz3.ab3@2276>   CLR.b firsttime
0002115C <AmiBlitz3.ab3@2277>   CLR.l lastdestpointer
00021162 <AmiBlitz3.ab3@2278>   CLR.l lastwritedat
00021168 <AmiBlitz3.ab3@2279>   CLR.l prevwritedat
0002116E <AmiBlitz3.ab3@2280>   CLR.l includeline
00021174 <AmiBlitz3.ab3@2281>   CLR.b incnif
0002117A <AmiBlitz3.ab3@2282>   CLR.b formode
00021180 <AmiBlitz3.ab3@2283>   CLR.b funccall
00021186 <AmiBlitz3.ab3@2284>   CLR.w objectcount
0002118C <AmiBlitz3.ab3@2285>   CLR.b resdisable
00021192 <AmiBlitz3.ab3@2286>   CLR.b developobject
00021198 <AmiBlitz3.ab3@2287>   CLR.b optistring
0002119E <AmiBlitz3.ab3@2288>   CLR.b optistring2
000211A4 <AmiBlitz3.ab3@2289>   CLR.b optiarray
000211AA <AmiBlitz3.ab3@2290>   CLR.b quickadd
000211B0 <AmiBlitz3.ab3@2291>   CLR.w newmode
000211B6 <AmiBlitz3.ab3@2292>   CLR.w mode
000211BC <AmiBlitz3.ab3@2293>   CLR.w string1
000211C2 <AmiBlitz3.ab3@2294>   CLR.b fastfunc
000211C8 <AmiBlitz3.ab3@2295>   CLR.w load_var_size
000211CE <AmiBlitz3.ab3@2296>   CLR.w load_var_reg
000211D4 <AmiBlitz3.ab3@2297>   CLR.l load_var_addr
000211DA <AmiBlitz3.ab3@2298>   CLR.w imm_size
000211E0 <AmiBlitz3.ab3@2299>   CLR.w imm_reg
000211E6 <AmiBlitz3.ab3@2300>   CLR.l imm_addr
000211EC <AmiBlitz3.ab3@2301>   CLR.b _dcb
000211F2 <AmiBlitz3.ab3@2302>   CLR.l nohunkoffset
000211F8 <AmiBlitz3.ab3@2303>   CLR.b peekaddrsize
000211FE <AmiBlitz3.ab3@2304>   CLR.b typecheck
00021204 <AmiBlitz3.ab3@2305>   CLR.b declare2
0002120A <AmiBlitz3.ab3@2306>   CLR.b declare
00021210 <AmiBlitz3.ab3@2307>   CLR.l myoline                                          ;check
00021216 <AmiBlitz3.ab3@2308>   CLR.l myline                                          ;check
0002121C <AmiBlitz3.ab3@2309>   CLR.b newvariable
00021222 <AmiBlitz3.ab3@2310>   CLR.b saved0
00021228 <AmiBlitz3.ab3@2311>   CLR.l bsssize
0002122E <AmiBlitz3.ab3@2312>   CLR.l chipsize
00021234 <AmiBlitz3.ab3@2313>   CLR.b infunctioncode
0002123A <AmiBlitz3.ab3@2314>   CLR.l errorcounter
00021244 <AmiBlitz3.ab3@2315>   MOVE.l #-1,bssstart
0002124E <AmiBlitz3.ab3@2316>   MOVE.l #-1,bssend
00021258 <AmiBlitz3.ab3@2317>   MOVE.l #-1,chipstart
00021262 <AmiBlitz3.ab3@2318>   MOVE.l #-1,chipend
0002126A <AmiBlitz3.ab3@2319>   MOVE.w #0,bssmode
00021270 <AmiBlitz3.ab3@2320>   CLR.w a2offset
00021276 <AmiBlitz3.ab3@2321>   CLR.w fast
0002127C <AmiBlitz3.ab3@2322>   CLR.w fpu
00021282 <AmiBlitz3.ab3@2323>   CLR.b iee
00021288 <AmiBlitz3.ab3@2324>   CLR.w newsyntax
0002128C <AmiBlitz3.ab3@2325>   BSR.w JL_0_38A6
00021292 <AmiBlitz3.ab3@2326>   JSR AJL_0_7962
00021298 <AmiBlitz3.ab3@2327>   JSR frallvars
0002129E <AmiBlitz3.ab3@2328>   JSR fralltypes
000212A4 <AmiBlitz3.ab3@2329>   JSR freemacs
000212AA <AmiBlitz3.ab3@2330>   JSR clearfunctionlist
000212B0 <AmiBlitz3.ab3@2331>   TST.w pass
000212B6 <AmiBlitz3.ab3@2333>   JSR clearlabels
000212BC <AmiBlitz3.ab3@2334>   JSR clearhash
000212C2 <AmiBlitz3.ab3@2337>   LEA devo,a0
000212C6 <AmiBlitz3.ab3@2338>   MOVEM.l a0-a6/d0-d7,-(a7)
000212CC <AmiBlitz3.ab3@2339>   LEA ptr_parameterstore,a1
000212CE <AmiBlitz3.ab3@2342>     MOVE.b (a0)+,(a1)+
000212D2 <AmiBlitz3.ab3@2343>   BNE 'l1b
000212D4 <AmiBlitz3.ab3@2344>   MOVEQ #13,d2
000212DA <AmiBlitz3.ab3@2345>   JSR findlabel2
000212DE <AmiBlitz3.ab3@2346>   BNE 'd
000212E2 <AmiBlitz3.ab3@2347>   CLR.l 8(a2)
000212E6 <AmiBlitz3.ab3@2350>   MOVEM.l (a7)+,a0-a6/d0-d7
00021310 <AmiBlitz3.ab3@2351>   !basic
00021384 <AmiBlitz3.ab3@2352>   dos_Delete{dos_AddPart{my_systemdir$,"ab_compileerror.txt"}}
000213A2 <AmiBlitz3.ab3@2353>   !asm
000213A8 <AmiBlitz3.ab3@2354>   CLR.b returncode
000213AE <AmiBlitz3.ab3@2355> JMP freeprocvs
000213B4 <AmiBlitz3.ab3@2359>   MOVE.l #bssstore-labelhash,d0
000213B6 <AmiBlitz3.ab3@2360>   ASR.l #2,d0
000213BC <AmiBlitz3.ab3@2361>   LEA labelhash,a0
000213BE <AmiBlitz3.ab3@2364>     CLR.l (a0)+
000213C0 <AmiBlitz3.ab3@2365>     SUBQ.l #1,d0
000213C4 <AmiBlitz3.ab3@2366>   BNE.s 'l10
000213CA <AmiBlitz3.ab3@2368>   LEA labelbase,a1
000213CC <AmiBlitz3.ab3@2369>   MOVE.l (a1),d0
000213D0 <AmiBlitz3.ab3@2370>   BEQ 'l11
000213D2 <AmiBlitz3.ab3@2373>     MOVE.l d0,a1
000213D6 <AmiBlitz3.ab3@2374>     TST.l 4(a1)
000213DA <AmiBlitz3.ab3@2375>     BEQ 'l29
000213DE <AmiBlitz3.ab3@2376>     LEA $13(a1),a0
000213E0 <AmiBlitz3.ab3@2377>     MOVEQ #0,d0
000213E2 <AmiBlitz3.ab3@2378>     MOVEQ #0,d1
000213E4 <AmiBlitz3.ab3@2381>       MOVE.b (a0)+,d1
000213E8 <AmiBlitz3.ab3@2382>       BEQ 'l12
000213EE <AmiBlitz3.ab3@2383>       !hashalgo
000213F2 <AmiBlitz3.ab3@2384> BRA 'l13
000213F8 <AmiBlitz3.ab3@2387>     LEA labelhash,a0
000213FE <AmiBlitz3.ab3@2388>     AND.l #hashsize,d0
00021400 <AmiBlitz3.ab3@2389>      ASL.l #2,d0
00021404 <AmiBlitz3.ab3@2390>     MOVE.l 0(a0,d0),d1                                     ;*4
00021408 <AmiBlitz3.ab3@2391>     MOVE.l d1,$c(a1)
0002140C <AmiBlitz3.ab3@2392>     MOVE.l a1,0(a0,d0)
0002140E <AmiBlitz3.ab3@2395>     MOVE.l (a1),d0
00021412 <AmiBlitz3.ab3@2396>   BNE 'l21
00021414 <AmiBlitz3.ab3@2399> RTS
0002141A <AmiBlitz3.ab3@2403>   MOVEA.l lastrestype,A0
0002141C <AmiBlitz3.ab3@2404>   MOVEA.l (A0),A2
0002141E <AmiBlitz3.ab3@2405>   CLR.l (A0)
00021424 <AmiBlitz3.ab3@2406> JMP freetypes
0002142A <AmiBlitz3.ab3@2410>   MOVEA.l varbase,A3
00021430 <AmiBlitz3.ab3@2411>   CLR.l varbase
00021434 <AmiBlitz3.ab3@2414>   CMPA.w #$0,A3
00021438 <AmiBlitz3.ab3@2415>   BEQ.w 'l20
0002143A <AmiBlitz3.ab3@2416>   MOVEA.l A3,A1
0002143C <AmiBlitz3.ab3@2417>   MOVEA.l (A3),A3
0002143E <AmiBlitz3.ab3@2418>   MOVEQ.l #$00,D0
00021442 <AmiBlitz3.ab3@2419>   MOVE.b $E+4(A1),D0
00021448 <AmiBlitz3.ab3@2420>   MOVEA.l _execbase,A6
0002144E <AmiBlitz3.ab3@2421>   MOVE.l mempool2,a0
00021452 <AmiBlitz3.ab3@2422>   JSR _FreePooled(A6)
00021456 <AmiBlitz3.ab3@2423> BRA.w 'l10
00021458 <AmiBlitz3.ab3@2426> RTS
0002145E <AmiBlitz3.ab3@2431>   LEA firstiff,A2
00021460 <AmiBlitz3.ab3@2432>   MOVEQ.l #$0E,D2
00021466 <AmiBlitz3.ab3@2433> JMP freeslist
00021468 <AmiBlitz3.ab3@2439> progressbar_width:   Dc.w 100                              ;riteend org source ;right end of include strip
0002146A <AmiBlitz3.ab3@2440> inmacro:             Ds.w 1                                ;macmask org source ;macro found
00021470 <AmiBlitz3.ab3@2444>   CLR.w inmacro
00021476 <AmiBlitz3.ab3@2445>   ADDQ.l #1,globallinecount
0002147C <AmiBlitz3.ab3@2446>   CLR.b nostringopt
00021480 <AmiBlitz3.ab3@2447>   BSR.w JL_0_3CA4
00021486 <AmiBlitz3.ab3@2448>   CLR.w instringon
0002148C <AmiBlitz3.ab3@2451>   TST.w ininclude
00021490 <AmiBlitz3.ab3@2452>   BEQ.w JL_0_39B0
00021496 <AmiBlitz3.ab3@2453>   ADDQ.l #1,includeline
0002149C <AmiBlitz3.ab3@2454>     JSR ab3_WriteDebugFile
000214A2 <AmiBlitz3.ab3@2455>   JSR AJL_0_C09E
000214A6 <AmiBlitz3.ab3@2456>   BEQ.w JL_0_39B0
000214AC <AmiBlitz3.ab3@2457>   MOVE.w ininclude,D0
000214B0 <AmiBlitz3.ab3@2458>   CMP.w #$4,D0
000214B4 <AmiBlitz3.ab3@2459>   BCC.w JL_0_39AC
000214B6 <AmiBlitz3.ab3@2460>   ADD.w D0,D0
000214BC <AmiBlitz3.ab3@2461>   LEA progress_per_line,A0
000214C0 <AmiBlitz3.ab3@2462>   MOVE.w $0(A0,D0.W),D2
000214C4 <AmiBlitz3.ab3@2463>   CMP.w progressbar_width(PC),D2
000214C8 <AmiBlitz3.ab3@2464>   BCC.w JL_0_39AC
000214CC <AmiBlitz3.ab3@2465>   ADDQ.w #1,$0(A0,D0.W)
000214CE <AmiBlitz3.ab3@2466>   LSR.w #1,D0
000214D0 <AmiBlitz3.ab3@2467>   MOVE.l d0,d1
000214D2 <AmiBlitz3.ab3@2468>   EXT.l d1
000214D4 <AmiBlitz3.ab3@2469>   MOVE.l d2,d0
000214D6 <AmiBlitz3.ab3@2470>   EXT.l d0                                                 ;d0=x,d1=y
000214DC <AmiBlitz3.ab3@2472>   JSR update_progressbar
000214DE <AmiBlitz3.ab3@2475>   MOVEQ.l #-$01,D0
000214E0 <AmiBlitz3.ab3@2476> RTS
000214E6 <AmiBlitz3.ab3@2480>   MOVE.l titleat,D0
000214E8 <AmiBlitz3.ab3@2481>   MOVEQ.l #$00,D1
000214EE <AmiBlitz3.ab3@2482>   MOVE.w progress_per_line,D1
000214F0 <AmiBlitz3.ab3@2483>   ADD.l D1,D0
000214F2 <AmiBlitz3.ab3@2484>   MOVE.l D0,D1
000214F4 <AmiBlitz3.ab3@2485>   SWAP D0
000214FA <AmiBlitz3.ab3@2486>   CMP.w titleat,D0
000214FE <AmiBlitz3.ab3@2487>    BEQ.w JL_0_39E4
00021500 <AmiBlitz3.ab3@2491>   EXT.l d0
00021502 <AmiBlitz3.ab3@2492>   MOVE.l d1,-(a7)
0002150A <AmiBlitz3.ab3@2495>   MOVE.w #1,compiler_job                                    ; set to compiler job 1 (=build executable)
00021510 <AmiBlitz3.ab3@2496>   JSR update_progressbar
00021518 <AmiBlitz3.ab3@2497>   MOVE.w #0,compiler_job                                    ; set to compiler job 0 (=compile source)
0002151A <AmiBlitz3.ab3@2501>   MOVE.l (a7)+,d1
00021520 <AmiBlitz3.ab3@2504>   MOVE.l D1,titleat
00021526 <AmiBlitz3.ab3@2505>   ADDQ.l #1,linenumat
0002152C <AmiBlitz3.ab3@2506>   CLR.w linedone
00021532 <AmiBlitz3.ab3@2507>   JSR ab3_WriteDebugFile  ; write to DebugFile every main source line
00021538 <AmiBlitz3.ab3@2509>   SUBQ.l #1,numlines2
0002153C <AmiBlitz3.ab3@2510>    BEQ.w JL_0_3A12
00021542 <AmiBlitz3.ab3@2511>   MOVEA.l sourceline,A0
00021544 <AmiBlitz3.ab3@2512>   MOVEA.l (A0),A0
0002154A <AmiBlitz3.ab3@2513>   MOVE.l A0,sourceline
0002154E <AmiBlitz3.ab3@2514>   LEA $9(A0),A5
00021550 <AmiBlitz3.ab3@2517> RTS
00021552 <AmiBlitz3.ab3@2521>   MOVE.w D0,-(A7)
00021554 <AmiBlitz3.ab3@2522>   MOVEQ.l #$03,D0
00021556 <AmiBlitz3.ab3@2525>     MOVE.w D1,D2
0002155A <AmiBlitz3.ab3@2526>     ANDI.w #$F,D2
0002155E <AmiBlitz3.ab3@2527>     ADDI.w #$30,D2
00021562 <AmiBlitz3.ab3@2528>     CMP.w #$3A,D2
00021566 <AmiBlitz3.ab3@2529>      BCS.w JL_0_3A2C
00021568 <AmiBlitz3.ab3@2530>     ADDQ.w #7,D2
0002156C <AmiBlitz3.ab3@2533>     MOVE.b D2,$0(A0,D0.W)
0002156E <AmiBlitz3.ab3@2534>     LSR.w #4,D1
00021572 <AmiBlitz3.ab3@2535>   DBF D0,JL_0_3A18
00021574 <AmiBlitz3.ab3@2537>   MOVE.w (A7)+,D0
00021576 <AmiBlitz3.ab3@2538> RTS
0002157C <AmiBlitz3.ab3@2548>   MOVE.w skipcode,D1
00021580 <AmiBlitz3.ab3@2549>   BNE.w JL_0_3A46
00021582 <AmiBlitz3.ab3@2550> RTS
00021584 <AmiBlitz3.ab3@2553>   MOVE.l A5,-(A7)
00021586 <AmiBlitz3.ab3@2554>   MOVEQ.l #$3A,D1                                          ;':'
00021588 <AmiBlitz3.ab3@2555>   MOVEQ.l #$21,D2                                          ;'!'
0002158A <AmiBlitz3.ab3@2556>   MOVEQ.l #$3B,D3                                          ;';'
0002158C <AmiBlitz3.ab3@2557>   MOVEQ.l #$22,D4                                          ;'"'
0002158E <AmiBlitz3.ab3@2560>   MOVE.b (A5)+,D0
00021592 <AmiBlitz3.ab3@2561>    BEQ.w JL_0_3CA0
00021596 <AmiBlitz3.ab3@2562>    BPL.w JL_0_3A60
00021598 <AmiBlitz3.ab3@2563>   MOVE.b (A5)+,D0
0002159C <AmiBlitz3.ab3@2564> BRA.w JL_0_3A50
0002159E <AmiBlitz3.ab3@2567>   CMP.b D4,D0
000215A2 <AmiBlitz3.ab3@2568>    BNE.w JL_0_3A82
000215A4 <AmiBlitz3.ab3@2571>   MOVE.b (A5)+,D0
000215A8 <AmiBlitz3.ab3@2572>    BEQ.w notqerr
000215AC <AmiBlitz3.ab3@2578>   CMP.b #$22,D0
000215B0 <AmiBlitz3.ab3@2579>    BNE.w JL_0_3A66
000215B4 <AmiBlitz3.ab3@2580> BRA.w JL_0_3A50
000215B6 <AmiBlitz3.ab3@2583>   CMP.b D1,D0
000215BA <AmiBlitz3.ab3@2584>    BEQ.w JL_0_3CA0
000215BC <AmiBlitz3.ab3@2585>   CMP.b D3,D0
000215C0 <AmiBlitz3.ab3@2586>    BEQ.w JL_0_3CA0
000215C2 <AmiBlitz3.ab3@2589>   CMP.b D2,D0
000215C6 <AmiBlitz3.ab3@2590>    BNE.w JL_0_3A50
000215CE <AmiBlitz3.ab3@2591>   MOVE.w #$FFFF,inmacro                                    ; no runtimecheck in macros
000215D0 <AmiBlitz3.ab3@2592>   MOVEA.l A5,A3
000215D6 <AmiBlitz3.ab3@2593>    JSR getparameter2
000215DA <AmiBlitz3.ab3@2594>    BNE.w JL_0_3AAC
000215E0 <AmiBlitz3.ab3@2595> JMP syntaxerr
000215EA <AmiBlitz3.ab3@2600>    MOVE.w oldqflag,instringon
000215F0 <AmiBlitz3.ab3@2601>   MOVEA.l lastsourcepos,A5
000215F6 <AmiBlitz3.ab3@2602>    JSR findmac                                             ;find macro
000215FA <AmiBlitz3.ab3@2603>    BEQ.w JL_0_3ABE
00021600 <AmiBlitz3.ab3@2604> JMP nomacerr
00021606 <AmiBlitz3.ab3@2607>   TST.b debugmode
0002160A <AmiBlitz3.ab3@2608>   BEQ 'sk1
0002160E <AmiBlitz3.ab3@2609>   MOVE.w #$4e71,d1
00021614 <AmiBlitz3.ab3@2610>   JSR writeword
00021616 <AmiBlitz3.ab3@2611>   MOVE.l a5,-(a7)
00021618 <AmiBlitz3.ab3@2612>   MOVE.l a3,a5
0002161A <AmiBlitz3.ab3@2613>   SUBQ.l #1,a5
00021622 <AmiBlitz3.ab3@2614>   MOVE.w #$0,inmacro
00021626 <AmiBlitz3.ab3@2615>   BSR debugstuffa
0002162E <AmiBlitz3.ab3@2616>   MOVE.w #$FFFF,inmacro
00021630 <AmiBlitz3.ab3@2617>   MOVE.l (a7)+,a5
00021634 <AmiBlitz3.ab3@2618>   MOVE.w #$4e71,d1
0002163A <AmiBlitz3.ab3@2619>   JSR writeword
0002163C <AmiBlitz3.ab3@2622>   MOVEA.l A5,A4
00021640 <AmiBlitz3.ab3@2625>    CMP.b #" ",(a4)+
00021644 <AmiBlitz3.ab3@2626>     BEQ 'l5a
00021646 <AmiBlitz3.ab3@2627>      SUBQ.l#1,a4
0002164A <AmiBlitz3.ab3@2628>      CMP.b #",",(a4)
0002164E <AmiBlitz3.ab3@2629>     BEQ JL_0_3AEA
00021650 <AmiBlitz3.ab3@2632>   MOVEQ.l #$00,D4
00021656 <AmiBlitz3.ab3@2633>   TST.b newsyntax
0002165A <AmiBlitz3.ab3@2634>   BEQ 'l10b
0002165E <AmiBlitz3.ab3@2635>   MOVEM.l a0/d0,-(a7)
00021662 <AmiBlitz3.ab3@2636>   MOVE.l 4(a2),a0
00021666 <AmiBlitz3.ab3@2637>   MOVE.w 8(a2),d0
0002166A <AmiBlitz3.ab3@2640>   CMP.b #"`",(a0)+
0002166E <AmiBlitz3.ab3@2641>   BEQ 'x1
00021670 <AmiBlitz3.ab3@2642>   SUBQ.w #1,d0
00021674 <AmiBlitz3.ab3@2643>   BNE 'x2
00021678 <AmiBlitz3.ab3@2644> BRA 'x3
0002167C <AmiBlitz3.ab3@2647>   MOVEM.l (a7)+,a0/d0
00021680 <AmiBlitz3.ab3@2648> BRA 'l10
00021684 <AmiBlitz3.ab3@2651>   MOVEM.l (a7)+,a0/d0
00021688 <AmiBlitz3.ab3@2652> BRA JL_0_3AEA
0002168C <AmiBlitz3.ab3@2655>   CMPI.b #"{",(A4)
00021690 <AmiBlitz3.ab3@2656>    BNE.w JL_0_3AEA
00021692 <AmiBlitz3.ab3@2660>   ADDQ.l #1,a4
00021696 <AmiBlitz3.ab3@2663>     CMP.b #" ",(a4)
0002169A <AmiBlitz3.ab3@2664>     BEQ 'l5
0002169E <AmiBlitz3.ab3@2665>     MOVEM.l a0/d0,-(a7)
000216A4 <AmiBlitz3.ab3@2666>     CLR.b exmac
000216AA <AmiBlitz3.ab3@2667>     LEA chartab,a0
000216AC <AmiBlitz3.ab3@2668>     MOVEQ #0,d0
000216AE <AmiBlitz3.ab3@2669>     MOVE.b (a4),d0
000216B2 <AmiBlitz3.ab3@2670>     BMI 'm1
000216B6 <AmiBlitz3.ab3@2671>     TST.b 0(a0,d0)
000216BA <AmiBlitz3.ab3@2672>     BEQ 'm1
000216C0 <AmiBlitz3.ab3@2673>     TST.b newsyntax
000216C4 <AmiBlitz3.ab3@2674>     BEQ 'ns1
000216C8 <AmiBlitz3.ab3@2675>     CMP.b #"#",d0
000216CC <AmiBlitz3.ab3@2676>     BEQ 'm1
000216D0 <AmiBlitz3.ab3@2677>     CMP.b #"$",d0
000216D4 <AmiBlitz3.ab3@2678>     BEQ 'm1
000216D8 <AmiBlitz3.ab3@2679>     CMP.b #"-",d0
000216DC <AmiBlitz3.ab3@2680>     BEQ 'm1
000216E0 <AmiBlitz3.ab3@2683>   CMP.b #",",d0
000216E4 <AmiBlitz3.ab3@2684>     BEQ 'm1
000216E8 <AmiBlitz3.ab3@2685>     CMP.b #"{",d0
000216EC <AmiBlitz3.ab3@2686>     BNE 'm1b
000216EE <AmiBlitz3.ab3@2687>     ADDQ.l #1,a4
000216F2 <AmiBlitz3.ab3@2688> BRA 'm1
000216F8 <AmiBlitz3.ab3@2691>   TST.b newsyntax
000216FC <AmiBlitz3.ab3@2692>     BEQ 'm1
00021704 <AmiBlitz3.ab3@2693>     MOVE.b #1,exmac
00021708 <AmiBlitz3.ab3@2696>   MOVEM.l (a7)+,a0/d0
0002170E <AmiBlitz3.ab3@2697>     TST.b exmac
00021712 <AmiBlitz3.ab3@2698>     BNE JL_0_3AEA
00021714 <AmiBlitz3.ab3@2705>   TST.b (a4)
00021718 <AmiBlitz3.ab3@2706>   BEQ JL_0_3AEA
0002171E <AmiBlitz3.ab3@2709>   MOVEA.l ptr_macrobuffer_begin,A0
00021720 <AmiBlitz3.ab3@2712>   ADDQ.w #1,D4
00021722 <AmiBlitz3.ab3@2713>   MOVE.l A4,(A0)
00021726 <AmiBlitz3.ab3@2714>   CLR.w 4(a0)
0002172A <AmiBlitz3.ab3@2715>    BSR.w JL_0_3CC6
0002172C <AmiBlitz3.ab3@2717>   ADDQ.l #4,a0
0002172E <AmiBlitz3.ab3@2721>   SUBQ.w #1,(a0)+
00021732 <AmiBlitz3.ab3@2722>   CMP.b #$7D,D0
00021736 <AmiBlitz3.ab3@2723>   BEQ 'l10
00021738 <AmiBlitz3.ab3@2724>   TST.b d0
0002173C <AmiBlitz3.ab3@2725>   BEQ 'l10
00021740 <AmiBlitz3.ab3@2726> BRA JL_0_3AD0
00021746 <AmiBlitz3.ab3@2730>   CLR.l sourceline3
00021748 <AmiBlitz3.ab3@2731>   MOVEA.l A4,A5
0002174E <AmiBlitz3.ab3@2734>   MOVE.w D4,numarg
00021754 <AmiBlitz3.ab3@2741>   MOVE.l #$01,D1
0002175A <AmiBlitz3.ab3@2742>   MOVEA.l _execbase,A6
00021760 <AmiBlitz3.ab3@2743>   MOVE.l mempool,a0
00021766 <AmiBlitz3.ab3@2744>   MOVE.l macrobuffer_size,D0
0002176C <AmiBlitz3.ab3@2745>   CMP.l #DEFAULT_MACROBUFFERSIZE,d0                          ; replaced with a constant tomsmart1
00021770 <AmiBlitz3.ab3@2746>   BGE 'l1m
00021776 <AmiBlitz3.ab3@2747>   MOVE.l #DEFAULT_MACROBUFFERSIZE,d0                         ; replaced with a constant tomsmart1
0002177C <AmiBlitz3.ab3@2748>   MOVE.l d0,macrobuffer_size
00021780 <AmiBlitz3.ab3@2751>   JSR _AllocPooled(a6)
0002178A <AmiBlitz3.ab3@2753>   MOVE.l myline,myoline
0002178C <AmiBlitz3.ab3@2756>   ADDQ.l #1,d0
00021792 <AmiBlitz3.ab3@2757>   MOVE.l D0,myline
00021794 <AmiBlitz3.ab3@2758>   MOVEA.l D0,A1
0002179A <AmiBlitz3.ab3@2759>   MOVE.b #":",-1(a1)
0002179C <AmiBlitz3.ab3@2760>   MOVEA.l A1,A6
000217A2 <AmiBlitz3.ab3@2761>   ADDA.l macrobuffer_size,A6
000217A4 <AmiBlitz3.ab3@2762>   MOVEA.l (A7)+,A0
000217A6 <AmiBlitz3.ab3@2765>   CMPA.l A6,A1
000217AA <AmiBlitz3.ab3@2766>    BCC.w mbovererr
000217AC <AmiBlitz3.ab3@2767>   MOVE.b (A0)+,(a1)+
000217AE <AmiBlitz3.ab3@2768>   CMPA.l A3,A0
000217B2 <AmiBlitz3.ab3@2769>    BCS.w JL_0_3B1E
000217B4 <AmiBlitz3.ab3@2770>   SUBQ.w #1,A1
000217B8 <AmiBlitz3.ab3@2771>   MOVE.w $8(A2),D1
000217BC <AmiBlitz3.ab3@2772>    BEQ.w JL_0_3C70
000217C4 <AmiBlitz3.ab3@2773>   MOVE.w $A(A2),macnum
000217C8 <AmiBlitz3.ab3@2774>   ADDQ.w #1,$A(A2)
000217CC <AmiBlitz3.ab3@2775>   MOVEA.l $4(A2),A2
000217CE <AmiBlitz3.ab3@2776>   SUBQ.w #1,D1
000217D4 <AmiBlitz3.ab3@2777>   CLR.b firstmline
000217D6 <AmiBlitz3.ab3@2780>     MOVEQ.l #$00,D0
000217D8 <AmiBlitz3.ab3@2781>     MOVE.b (A2)+,D0
000217DE <AmiBlitz3.ab3@2782>     TST.b firstmline
000217E2 <AmiBlitz3.ab3@2783>     BNE 'c1
000217E6 <AmiBlitz3.ab3@2784>     CMP.b #$22,d0
000217EA <AmiBlitz3.ab3@2785>     BNE 's1
000217F2 <AmiBlitz3.ab3@2786>     MOVE.b #1,firstmline
000217F6 <AmiBlitz3.ab3@2789>     CMP.b #":",d0
000217FA <AmiBlitz3.ab3@2790>     BNE 'm1
00021802 <AmiBlitz3.ab3@2791>     MOVE.b #1,firstmline
00021806 <AmiBlitz3.ab3@2794>     CMP.b #";",d0
0002180A <AmiBlitz3.ab3@2795>     BNE 'c1
0002180C <AmiBlitz3.ab3@2798>     SUBQ.w #1,d1                                           ;filter out comment
0002180E <AmiBlitz3.ab3@2799>     MOVE.b (a2)+,d0
00021814 <AmiBlitz3.ab3@2800>     CMP.w #":@",-1(a2)
00021818 <AmiBlitz3.ab3@2801>     BEQ 'c2
0002181A <AmiBlitz3.ab3@2802>     TST.w d1
0002181E <AmiBlitz3.ab3@2803>     BNE 'l1
00021822 <AmiBlitz3.ab3@2804>   BRA JL_0_3C6C
00021828 <AmiBlitz3.ab3@2807>     CMP.b #":",1(a2)
0002182C <AmiBlitz3.ab3@2808>       BNE 'l1
0002182E <AmiBlitz3.ab3@2809>       ADDQ #2,a2
00021830 <AmiBlitz3.ab3@2810>       SUBQ #3,d1
00021832 <AmiBlitz3.ab3@2811>       MOVE.b (a2)+,d0
0002183A <AmiBlitz3.ab3@2812>       MOVE.b #1,firstmline
0002183E <AmiBlitz3.ab3@2815>     CMP.b #"`",D0
00021842 <AmiBlitz3.ab3@2816>      BNE.w JL_0_3C56
00021844 <AmiBlitz3.ab3@2817>     SUBQ.w #1,D1
00021846 <AmiBlitz3.ab3@2818>     MOVE.b (A2)+,D0
0002184A <AmiBlitz3.ab3@2819>     CMP.w #$7B,D0
0002184E <AmiBlitz3.ab3@2820>      BEQ.w JL_0_3BB6
00021852 <AmiBlitz3.ab3@2821>     CMP.w #$40,D0
00021856 <AmiBlitz3.ab3@2822>      BNE.w JL_0_3B82
00021858 <AmiBlitz3.ab3@2823>     MOVEQ.l #$00,D2
0002185E <AmiBlitz3.ab3@2824>     MOVE.w macnum,D2
00021860 <AmiBlitz3.ab3@2825>     MOVEA.l A1,A0
00021862 <AmiBlitz3.ab3@2826>     MOVE.w D1,-(A7)
00021868 <AmiBlitz3.ab3@2827>      JSR makelong
0002186A <AmiBlitz3.ab3@2828>     MOVEA.l A0,A1
0002186C <AmiBlitz3.ab3@2829>     MOVE.w (A7)+,D1
00021870 <AmiBlitz3.ab3@2830>   BRA.w JL_0_3C6C
00021874 <AmiBlitz3.ab3@2833>     ORI.w #$20,D0
00021878 <AmiBlitz3.ab3@2834>     CMP.w #$7A,D0
0002187C <AmiBlitz3.ab3@2835>      BCS.w JL_0_3B94
00021882 <AmiBlitz3.ab3@2836>   JMP ilconsterr
00021886 <AmiBlitz3.ab3@2839>     SUBI.w #$30,D0
0002188A <AmiBlitz3.ab3@2840>     CMP.w #$A,D0
0002188E <AmiBlitz3.ab3@2841>      BCS.w JL_0_3BF2
00021892 <AmiBlitz3.ab3@2842>     SUBI.w #$27,D0
00021896 <AmiBlitz3.ab3@2843>     CMP.w #$A,D0
0002189A <AmiBlitz3.ab3@2844>      BCC.w JL_0_3BB2
000218A0 <AmiBlitz3.ab3@2845>   JMP ilconsterr
000218A4 <AmiBlitz3.ab3@2848>   BRA.w JL_0_3BF2
000218A6 <AmiBlitz3.ab3@2851>     MOVE.l A5,-(A7)
000218AA <AmiBlitz3.ab3@2852>     MOVEM.l D1/A1-A2/A6,-(A7)
000218AC <AmiBlitz3.ab3@2853>     MOVEA.l A2,A5
000218B2 <AmiBlitz3.ab3@2854>      JSR AJL_0_BF6E
000218B6 <AmiBlitz3.ab3@2855>     CMP.w #$7D,D0
000218BA <AmiBlitz3.ab3@2856>      BEQ.w JL_0_3BD2
000218C0 <AmiBlitz3.ab3@2857>   JMP syntaxerr
000218C4 <AmiBlitz3.ab3@2860>     MOVEM.l (A7)+,D1/A1-A2/A6
000218C6 <AmiBlitz3.ab3@2861>     MOVE.l A5,D2
000218C8 <AmiBlitz3.ab3@2862>     SUB.l A2,D2
000218CA <AmiBlitz3.ab3@2863>     SUB.w D2,D1
000218CC <AmiBlitz3.ab3@2864>     MOVEA.l A5,A2
000218D2 <AmiBlitz3.ab3@2865>     CLR.w instringon
000218D4 <AmiBlitz3.ab3@2866>     MOVEA.l (A7)+,A5
000218D6 <AmiBlitz3.ab3@2867>     MOVE.l D3,D0
000218DA <AmiBlitz3.ab3@2868>     BPL.w JL_0_3BF2
000218E0 <AmiBlitz3.ab3@2869>   JMP ilconsterr
000218E2 <AmiBlitz3.ab3@2872>     SUBQ.w #1,D0
000218E6 <AmiBlitz3.ab3@2873>      BPL.w JL_0_3C20
000218EC <AmiBlitz3.ab3@2877>     MOVE.w numarg,D0
000218F0 <AmiBlitz3.ab3@2878>     DIVU #$A,D0
000218F4 <AmiBlitz3.ab3@2879>     ADDI.w #$30,D0
000218F6 <AmiBlitz3.ab3@2880>     CMPA.l A6,A1
000218FA <AmiBlitz3.ab3@2881>      BCC.w mbovererr
000218FC <AmiBlitz3.ab3@2882>     MOVE.b D0,(A1)+
000218FE <AmiBlitz3.ab3@2883>     SWAP D0
00021902 <AmiBlitz3.ab3@2884>     ADDI.w #$30,D0
00021904 <AmiBlitz3.ab3@2885>     CMPA.l A6,A1
00021908 <AmiBlitz3.ab3@2886>      BCC.w mbovererr
0002190A <AmiBlitz3.ab3@2887>     MOVE.b D0,(A1)+
0002190E <AmiBlitz3.ab3@2888>   BRA.w JL_0_3C6C
00021914 <AmiBlitz3.ab3@2894>     CMP.w numarg,D0
00021918 <AmiBlitz3.ab3@2895>      BCC.w JL_0_3C6C
0002191A <AmiBlitz3.ab3@2896>     LSL.w #1,D0
0002191C <AmiBlitz3.ab3@2897>     MOVE.w D0,D4
0002191E <AmiBlitz3.ab3@2898>     LSL.w #1,D0
00021920 <AmiBlitz3.ab3@2899>     ADD.w D4,D0
00021926 <AmiBlitz3.ab3@2900>     MOVEA.l ptr_macrobuffer_begin,A0
00021928 <AmiBlitz3.ab3@2901>     ADDA.w D0,A0
0002192C <AmiBlitz3.ab3@2902>     MOVE.w $4(A0),D4
00021930 <AmiBlitz3.ab3@2903>      BEQ.w JL_0_3C6C
00021932 <AmiBlitz3.ab3@2904>     MOVEA.l (A0),A0
00021934 <AmiBlitz3.ab3@2905>     SUBQ.w #1,D4
00021936 <AmiBlitz3.ab3@2908>       CMPA.l A6,A1
0002193A <AmiBlitz3.ab3@2909>        BCC.w mbovererr
0002193E <AmiBlitz3.ab3@2910>       CMP.w #"@@",(a0)
00021942 <AmiBlitz3.ab3@2911>        BNE 'l10
00021948 <AmiBlitz3.ab3@2912>       TST.w ininclude
0002194C <AmiBlitz3.ab3@2913>        BNE errorjoin
00021952 <AmiBlitz3.ab3@2916>       MOVE.l sourceline,a0
00021954 <AmiBlitz3.ab3@2917>       MOVE.l (a0),a0
0002195A <AmiBlitz3.ab3@2918>       CMP.l #0,a0
0002195E <AmiBlitz3.ab3@2919>       BNE 'l11
00021960 <AmiBlitz3.ab3@2920>       MOVEQ #0,d0
00021966 <AmiBlitz3.ab3@2921>       JSR error
0002196C <AmiBlitz3.ab3@2924>       MOVE.l a0,sourceline
00021972 <AmiBlitz3.ab3@2925>       ADDQ.l #1,linenumat
00021976 <AmiBlitz3.ab3@2926>       LEA 9(a0),a0
00021978 <AmiBlitz3.ab3@2927>       MOVE.l a0,-(a7)
0002197C <AmiBlitz3.ab3@2930>       CMP.b #" ",(a0)+
00021980 <AmiBlitz3.ab3@2931>        BEQ 'l110
00021986 <AmiBlitz3.ab3@2932>       CMP.b #";",-1(a0)
00021988 <AmiBlitz3.ab3@2933>       MOVE.l (a7)+,a0
0002198C <AmiBlitz3.ab3@2934>        BEQ 'l111
0002198E <AmiBlitz3.ab3@2935>       SUBQ.l #1,d4
00021990 <AmiBlitz3.ab3@2938>       MOVE.b (A0)+,(A1)+
00021994 <AmiBlitz3.ab3@2939>     DBF D4,JL_0_3C46
00021998 <AmiBlitz3.ab3@2941>   BRA.w JL_0_3C6C
0002199A <AmiBlitz3.ab3@2944>     CMPA.l A6,A1
0002199E <AmiBlitz3.ab3@2945>      BCC.w mbovererr
000219A0 <AmiBlitz3.ab3@2946>     MOVE.b D0,(A1)+
000219A4 <AmiBlitz3.ab3@2947>      BPL.w JL_0_3C6C
000219A6 <AmiBlitz3.ab3@2948>     CMPA.l A6,A1
000219AA <AmiBlitz3.ab3@2949>      BCC.w mbovererr
000219AC <AmiBlitz3.ab3@2950>     MOVE.b (A2)+,(A1)+
000219AE <AmiBlitz3.ab3@2951>     SUBQ.w #1,D1
000219B2 <AmiBlitz3.ab3@2954>   DBF D1,JL_0_3B48
000219B4 <AmiBlitz3.ab3@2964>   CMPA.l A6,A1
000219B8 <AmiBlitz3.ab3@2965>    BCC.w mbovererr
000219BA <AmiBlitz3.ab3@2966>   MOVE.b (A5)+,(A1)+
000219BE <AmiBlitz3.ab3@2967>    BNE.w JL_0_3C70
000219C4 <AmiBlitz3.ab3@2968>   MOVEA.l myline,A5
000219CA <AmiBlitz3.ab3@2969>   MOVE.l myoline,D0
000219CE <AmiBlitz3.ab3@2970>    BEQ.w JL_0_3C9C
000219D0 <AmiBlitz3.ab3@2971>   SUBQ.l #1,d0
000219D2 <AmiBlitz3.ab3@2972>   MOVEA.l D0,A1
000219D8 <AmiBlitz3.ab3@2973>   MOVE.l macrobuffer_size,D0
000219DE <AmiBlitz3.ab3@2974>   MOVEA.l _execbase,A6
000219E4 <AmiBlitz3.ab3@2975>   MOVE.l mempool,a0
000219E8 <AmiBlitz3.ab3@2976>   JSR _FreePooled(A6)
000219EC <AmiBlitz3.ab3@2979> BRA.w JL_0_3A46
000219EE <AmiBlitz3.ab3@2982>   MOVEA.l (A7)+,A5
000219F0 <AmiBlitz3.ab3@2983> RTS
000219F6 <AmiBlitz3.ab3@2987>   MOVE.l myline,D0
000219FA <AmiBlitz3.ab3@2988>   BEQ.w JL_0_3CC4
000219FC <AmiBlitz3.ab3@2989>   SUBQ.l #1,d0
00021A02 <AmiBlitz3.ab3@2990>   CLR.l myline
00021A04 <AmiBlitz3.ab3@2991>   MOVEA.l D0,A1
00021A0A <AmiBlitz3.ab3@2992>   MOVE.l macrobuffer_size,D0
00021A10 <AmiBlitz3.ab3@2993>   MOVEA.l _execbase,A6
00021A16 <AmiBlitz3.ab3@2994>   MOVE.l mempool,a0
00021A1A <AmiBlitz3.ab3@2995> JMP _FreePooled(A6)
00021A1C <AmiBlitz3.ab3@2998> RTS
00021A1E <AmiBlitz3.ab3@3002>   MOVEQ.l #$00,D2
00021A22 <AmiBlitz3.ab3@3005>   ADDQ.w #1,4(a0)
00021A24 <AmiBlitz3.ab3@3006>    MOVE.b (A4)+,D0
00021A28 <AmiBlitz3.ab3@3008>    BEQ exit1
00021A2C <AmiBlitz3.ab3@3009>    BPL.w JL_0_3CD8
00021A30 <AmiBlitz3.ab3@3010>   ADDQ.w #1,4(a0)
00021A32 <AmiBlitz3.ab3@3011>   ADDQ.w #1,A4
00021A36 <AmiBlitz3.ab3@3012> BRA.w JL_0_3CC8
00021A3C <AmiBlitz3.ab3@3015>    TST.w instringon
00021A40 <AmiBlitz3.ab3@3016>    BNE 'lnom
00021A44 <AmiBlitz3.ab3@3017>    CMP.b #";",d0
00021A48 <AmiBlitz3.ab3@3018>    BEQ exit2
00021A4C <AmiBlitz3.ab3@3019>    CMP.b #":",d0
00021A50 <AmiBlitz3.ab3@3020>    BEQ exit2
00021A54 <AmiBlitz3.ab3@3023>   CMP.b #$22,D0
00021A58 <AmiBlitz3.ab3@3024>    BNE.w JL_0_3CEA
00021A5E <AmiBlitz3.ab3@3025>   NOT.w instringon
00021A62 <AmiBlitz3.ab3@3026> BRA.w JL_0_3CC8
00021A68 <AmiBlitz3.ab3@3030>   TST.w instringon
00021A6C <AmiBlitz3.ab3@3031>    BNE.w JL_0_3CC8
00021A70 <AmiBlitz3.ab3@3032>    CMP.b #"@",d0
00021A74 <AmiBlitz3.ab3@3033>    BNE 'l10
00021A78 <AmiBlitz3.ab3@3034>    CMP.b #"@",(a4)
00021A7C <AmiBlitz3.ab3@3035>    BNE 'l10
00021A82 <AmiBlitz3.ab3@3036>    TST.w ininclude
00021A86 <AmiBlitz3.ab3@3037>    BNE errorjoin
00021A8C <AmiBlitz3.ab3@3038>    MOVE.l sourceline3,a4
00021A92 <AmiBlitz3.ab3@3039>    CMP.l #0,a4
00021A96 <AmiBlitz3.ab3@3040>    BNE 'l11
00021A9C <AmiBlitz3.ab3@3041>    MOVE.l sourceline,a4
00021A9E <AmiBlitz3.ab3@3044>   MOVE.l (a4),a4
00021AA4 <AmiBlitz3.ab3@3045>       CMP.l #0,a4
00021AA8 <AmiBlitz3.ab3@3046>       BNE 'l12
00021AAA <AmiBlitz3.ab3@3047>       MOVEQ #0,d0
00021AB0 <AmiBlitz3.ab3@3048>       JSR error
00021AB6 <AmiBlitz3.ab3@3051>    MOVE.l a4,sourceline3
00021ABA <AmiBlitz3.ab3@3052>    LEA 9(a4),a4
00021ABC <AmiBlitz3.ab3@3053>    MOVEQ #",",d0
00021AC0 <AmiBlitz3.ab3@3056>   CMP.b #$2C,D0
00021AC4 <AmiBlitz3.ab3@3057>    BNE.w JL_0_3D06
00021AC6 <AmiBlitz3.ab3@3058>   TST.w D2
00021ACA <AmiBlitz3.ab3@3059>    BEQ.w JL_0_3D30
00021ACE <AmiBlitz3.ab3@3060> BRA.w JL_0_3CC8
00021AD2 <AmiBlitz3.ab3@3064>    CMP.b #$7B,D0                                           ;"{"
00021AD6 <AmiBlitz3.ab3@3065>    BEQ.w 'l10
00021ADA <AmiBlitz3.ab3@3066>   CMP.b #$28,D0                                            ;"("
00021ADE <AmiBlitz3.ab3@3069>    BNE.w JL_0_3D14
00021AE0 <AmiBlitz3.ab3@3070>   ADDQ.w #1,D2
00021AE4 <AmiBlitz3.ab3@3071> BRA.w JL_0_3CC8
00021AE8 <AmiBlitz3.ab3@3074>   CMP.b #$7D,D0                                           ;"}"
00021AEC <AmiBlitz3.ab3@3075>    BNE.w JL_0_3D22
00021AEE <AmiBlitz3.ab3@3076>  TST.w D2
00021AF2 <AmiBlitz3.ab3@3077>    BEQ.w JL_0_3D30
00021AF6 <AmiBlitz3.ab3@3081>    CMP.b #$7D,D0                                           ;"}"
00021AFA <AmiBlitz3.ab3@3082>    BEQ.w 'l10
00021AFE <AmiBlitz3.ab3@3083>   CMP.b #$29,D0                                            ;")"
00021B02 <AmiBlitz3.ab3@3086>    BNE.w JL_0_3CC8
00021B04 <AmiBlitz3.ab3@3087>   SUBQ.w #1,D2
00021B08 <AmiBlitz3.ab3@3088> BRA.w JL_0_3CC8
00021B0A <AmiBlitz3.ab3@3091> RTS
00021B0C <AmiBlitz3.ab3@3095>       SUBQ.l #1,a4
00021B12 <AmiBlitz3.ab3@3096>       CLR.l sourceline3
00021B14 <AmiBlitz3.ab3@3097> RTS
00021B16 <AmiBlitz3.ab3@3101>       MOVEQ #0,d0
00021B18 <AmiBlitz3.ab3@3102>       SUBQ.l #1,a4
00021B1E <AmiBlitz3.ab3@3103>       CLR.l sourceline3
00021B20 <AmiBlitz3.ab3@3104> RTS
00021B24 <AmiBlitz3.ab3@3108>   CMP.b #$7B,D0                                            ;"{"
00021B28 <AmiBlitz3.ab3@3109>   BEQ.w JL_0_3D3E
00021B2C <AmiBlitz3.ab3@3110>   CMP.b #$28,D0                                            ;"("
00021B2E <AmiBlitz3.ab3@3113> RTS
00021B32 <AmiBlitz3.ab3@3117>   CMP.b #$7D,D0                                            ;"}"
00021B36 <AmiBlitz3.ab3@3118>   BEQ.w JL_0_3D4C
00021B3A <AmiBlitz3.ab3@3119>   CMP.b #$29,D0                                            ;")"
00021B3C <AmiBlitz3.ab3@3122> RTS
00021B3E <AmiBlitz3.ab3@3126> stopit:     Ds.w 1
00021B40 <AmiBlitz3.ab3@3127> clrreq:     Ds.w 1
00021B44 <AmiBlitz3.ab3@3148>   MOVE.w clrreq(PC),D0
00021B48 <AmiBlitz3.ab3@3149>    BEQ.w close_compilewin__skip
00021B7A <AmiBlitz3.ab3@3151> 
00021B80 <AmiBlitz3.ab3@3153>   LEA clrreq,a0
00021B82 <AmiBlitz3.ab3@3154>   NOT.w (a0)                                               ;reass
00021B88 <AmiBlitz3.ab3@3155>   MOVEA.l ptr_ThisTask,A0
00021B8C <AmiBlitz3.ab3@3156>   CLR.l $1E(A0)
00021B90 <AmiBlitz3.ab3@3157>   CLR.l $2A(A0)
00021B92 <AmiBlitz3.ab3@3160> RTS
00021B94 <AmiBlitz3.ab3@3163> intsused:  Ds.w 1
00021B9C <AmiBlitz3.ab3@3167>   MOVE.w #-1,blitzoff
00021BA2 <AmiBlitz3.ab3@3168>   CLR.w intsused
00021BA8 <AmiBlitz3.ab3@3169>   CLR.w anyerrs
00021BAE <AmiBlitz3.ab3@3170>   CLR.w blitzmode
00021BB4 <AmiBlitz3.ab3@3171>   CLR.w dontwrite                                              ;nomemleft
00021BBA <AmiBlitz3.ab3@3172>   CLR.w constmode
00021BC0 <AmiBlitz3.ab3@3173>   CLR.w cmake
00021BC6 <AmiBlitz3.ab3@3174>   CLR.w cfetchmode
00021BCC <AmiBlitz3.ab3@3175>   CLR.l intdata1
00021BD2 <AmiBlitz3.ab3@3176>   CLR.w fuckpos
00021BD8 <AmiBlitz3.ab3@3177>   CLR.w procnum
00021BDE <AmiBlitz3.ab3@3178>   CLR.w procnum2
00021BE4 <AmiBlitz3.ab3@3179>   CLR.w dfetch
00021BEA <AmiBlitz3.ab3@3180>   CLR.l titleat
00021BF0 <AmiBlitz3.ab3@3181>   CLR.b usedpath
00021BF6 <AmiBlitz3.ab3@3182>   CLR.b path2
00021BFC <AmiBlitz3.ab3@3183>   CLR.w inerr
00021C02 <AmiBlitz3.ab3@3184>   CLR.w intlevel
00021C08 <AmiBlitz3.ab3@3185>   CLR.l cont_pc
00021C0E <AmiBlitz3.ab3@3186>   CLR.l cont_pc2
00021C14 <AmiBlitz3.ab3@3187>   CLR.l lastcontlink
00021C1E <AmiBlitz3.ab3@3188>   MOVE.l destbufferstart,destpointer
00021C28 <AmiBlitz3.ab3@3189>   MOVE.l destbufferstart,bigpc
00021C32 <AmiBlitz3.ab3@3190>   MOVE.l destbufferend,libend
00021C3C <AmiBlitz3.ab3@3191>   MOVE.l data1start,data1
00021C46 <AmiBlitz3.ab3@3192>   MOVE.l data2at,data2
00021C4E <AmiBlitz3.ab3@3193>   MOVE.w #-1,skipcode                                      ;#-1,comflag org source
00021C56 <AmiBlitz3.ab3@3194>   MOVE.w #-1,linemode                                      ;#-1,linemode org soruce
00021C5C <AmiBlitz3.ab3@3195>   CLR.w oldvcodelen
00021C62 <AmiBlitz3.ab3@3196>   CLR.b lastgloballabel                                    ;lastbiglab org source
00021C64 <AmiBlitz3.ab3@3197> RTS
00021C66 <AmiBlitz3.ab3@3200> debugmode:  Ds.w 1                                         ;debugga org source ;debugger enabled?
00021C6C <AmiBlitz3.ab3@3204>   LEA  clrreq,a1
00021C70 <AmiBlitz3.ab3@3205>   MOVE.w #2000,(a1)
00021C9A <AmiBlitz3.ab3@3206>   !basic
00021CB0 <AmiBlitz3.ab3@3207> 
00021D00 <AmiBlitz3.ab3@3208>   comstatusstr   = !TRANS{"Initializing Compiler..."} ;default settings
00021D08 <AmiBlitz3.ab3@3209>   calcpro.l      = 0
00021D10 <AmiBlitz3.ab3@3210>   calcpro_old.l  = 0
00021D1C <AmiBlitz3.ab3@3211>   typ_old.l      = -1
00021D28 <AmiBlitz3.ab3@3212>   pass_old.l     = -1
00021D2E <AmiBlitz3.ab3@3213>   update_comstatus_gui.b = True ; for the first
00021D68 <AmiBlitz3.ab3@3215>   GetD0 &comstatusstr : !ComData_SetL{comPtr_CompileStatusString,d0}  ; set pointer of status string for gui tomsmart1 2012 05 12
00021DA2 <AmiBlitz3.ab3@3216>   GetD0 &calcpro      : !ComData_SetL{comPtr_CompileCalcProLong ,d0}  ; set pointer of calcpro long for gui tomsmart1 2012 05 12
00021DC0 <AmiBlitz3.ab3@3217>   !asm
00021DF2 <AmiBlitz3.ab3@3218> 
00021DF8 <AmiBlitz3.ab3@3220>   CLR.w stopit
00021DFA <AmiBlitz3.ab3@3221> RTS
00021E00 <AmiBlitz3.ab3@3225>   CLR.w storedebugmode
00021E06 <AmiBlitz3.ab3@3226>   CLR.b iserror
00021E0A <AmiBlitz3.ab3@3227>   BSR.w compilerequester
00021E14 <AmiBlitz3.ab3@3229>   MOVE.l #0,globallinecount
00021E1A <AmiBlitz3.ab3@3230>   JSR check_of_same_source
00021E1E <AmiBlitz3.ab3@3231>   BSR.w call_setpointerbusy
00021E22 <AmiBlitz3.ab3@3232>   BSR.w setcvars
00021E2A <AmiBlitz3.ab3@3233>   MOVE.w #$8000,globalvarpointer
00021E34 <AmiBlitz3.ab3@3234>   MOVE.l #newtype_quick,defaulttype
00021E3A <AmiBlitz3.ab3@3235>   MOVE.l A7,passstack
00021E44 <AmiBlitz3.ab3@3236>   MOVE.l #firstitem_,sourceline
00021E4E <AmiBlitz3.ab3@3237>   MOVE.w numlines_org,linesleft
00021E58 <AmiBlitz3.ab3@3238>   MOVE.l numlines,numlines2
00021E5E <AmiBlitz3.ab3@3239>   ADDQ.w #1,linesleft
00021E64 <AmiBlitz3.ab3@3240>   ADDQ.l #1,numlines2
00021E6E <AmiBlitz3.ab3@3241>   MOVE.l #-1,linenumat
00021E72 <AmiBlitz3.ab3@3242>   BSR.w resetlibs
00021E76 <AmiBlitz3.ab3@3243>   BSR.w Aclearallvars
00021E7C <AmiBlitz3.ab3@3244>   LEA progress_per_line+2,A0
00021E7E <AmiBlitz3.ab3@3245>   MOVEQ.l #$03,D0
00021E80 <AmiBlitz3.ab3@3248>     CLR.w (A0)+
00021E84 <AmiBlitz3.ab3@3249>   DBF D0,JL_0_40EC
00021E8A <AmiBlitz3.ab3@3252>   LEA _include,a0
00021E8E <AmiBlitz3.ab3@3253>   MOVEM.l a0-a6/d0-d7,-(a7)
00021E94 <AmiBlitz3.ab3@3254>   LEA ptr_parameterstore,a1
00021E96 <AmiBlitz3.ab3@3257>     MOVE.b (a0)+,(a1)+
00021E9A <AmiBlitz3.ab3@3258>   BNE 'l1b
00021E9C <AmiBlitz3.ab3@3260>   MOVEQ #9,d2
00021EA2 <AmiBlitz3.ab3@3261>   JSR findlabel2
00021EA6 <AmiBlitz3.ab3@3262>   BNE 'd
00021EAE <AmiBlitz3.ab3@3263>   MOVE.l #0,8(a2)
00021EB2 <AmiBlitz3.ab3@3264>   MOVEM.l (a7)+,a0-a6/d0-d7
00021EB6 <AmiBlitz3.ab3@3265> BRA 'd2
00021EBC <AmiBlitz3.ab3@3268>   JSR addlabelhash
00021EC4 <AmiBlitz3.ab3@3269>   MOVE.l #$1,$4(A2)
00021ECC <AmiBlitz3.ab3@3270>   MOVE.l #0,8(a2)
00021ED0 <AmiBlitz3.ab3@3271>   MOVEM.l (a7)+,a0-a6/d0-d7
00021ED6 <AmiBlitz3.ab3@3274>   LEA _debug,a0
00021EDA <AmiBlitz3.ab3@3275>   MOVEM.l a0-a6/d0-d7,-(a7)
00021EE0 <AmiBlitz3.ab3@3276>   LEA ptr_parameterstore,a1
00021EE2 <AmiBlitz3.ab3@3279>     MOVE.b (a0)+,(a1)+
00021EE6 <AmiBlitz3.ab3@3280>   BNE 'l9b
00021EE8 <AmiBlitz3.ab3@3282>   MOVEQ #7,d2
00021EEE <AmiBlitz3.ab3@3283>   JSR findlabel2
00021EF2 <AmiBlitz3.ab3@3284>   BNE 'd9
00021EF6 <AmiBlitz3.ab3@3285>   MOVE.b debugmode(PC),D0
00021EF8 <AmiBlitz3.ab3@3286>   EXT.w d0
00021EFA <AmiBlitz3.ab3@3287>   EXT.l d0
00021EFE <AmiBlitz3.ab3@3288>   MOVE.l d0,8(a2)
00021F02 <AmiBlitz3.ab3@3289>   MOVEM.l (a7)+,a0-a6/d0-d7
00021F06 <AmiBlitz3.ab3@3290> BRA 'd9b
00021F0C <AmiBlitz3.ab3@3293>   JSR addlabelhash
00021F14 <AmiBlitz3.ab3@3294>   MOVE.l #$1,$4(A2)
00021F18 <AmiBlitz3.ab3@3295>   MOVE.b debugmode(PC),D0
00021F1A <AmiBlitz3.ab3@3296>   EXT.w d0
00021F1C <AmiBlitz3.ab3@3297>   EXT.l d0
00021F20 <AmiBlitz3.ab3@3298>   MOVE.l d0,8(a2)
00021F24 <AmiBlitz3.ab3@3299>   MOVEM.l (a7)+,a0-a6/d0-d7
00021F2A <AmiBlitz3.ab3@3302>   MOVE.l #firstitem_,a0
00021F2C <AmiBlitz3.ab3@3303>   MOVE.l (a0),a0
00021F30 <AmiBlitz3.ab3@3304>   LEA 9(a0),a0
00021F38 <AmiBlitz3.ab3@3305>   MOVE.w #0,exdebug
00021F3E <AmiBlitz3.ab3@3306>   TST.b debugmode
00021F42 <AmiBlitz3.ab3@3307>    BEQ 'l10
00021F44 <AmiBlitz3.ab3@3310>   MOVE.b (a0)+,d0
00021F48 <AmiBlitz3.ab3@3311>    BEQ 'l10
00021F4C <AmiBlitz3.ab3@3312>   CMP.b #$20,d0
00021F50 <AmiBlitz3.ab3@3313>    BEQ 'l2
00021F52 <AmiBlitz3.ab3@3314>   SUBQ.l #1,a0
00021F58 <AmiBlitz3.ab3@3315>   CMP.l #"DEBU",(a0)
00021F5C <AmiBlitz3.ab3@3316>    BNE 'l10
00021F62 <AmiBlitz3.ab3@3317>   CMP.b #"G",4(a0)
00021F66 <AmiBlitz3.ab3@3318>    BNE 'l10
00021F6E <AmiBlitz3.ab3@3319>   MOVE.w #$0,debugversion
00021F76 <AmiBlitz3.ab3@3320>   MOVE.b #1,exdebug
00021F7C <AmiBlitz3.ab3@3323>   LEA nops4,A0
00021F82 <AmiBlitz3.ab3@3324>   LEA dataget,A1
00021F88 <AmiBlitz3.ab3@3325>   JSR pokecode2                                            ;write intro nops
00021F8E <AmiBlitz3.ab3@3326>   MOVE.l #$01010101,d1
00021F94 <AmiBlitz3.ab3@3327>   JSR writedatalong                                        ;for the 4 tempregs
00021F9A <AmiBlitz3.ab3@3328>   JSR writedatalong
00021FA0 <AmiBlitz3.ab3@3329>   JSR writedatalong
00021FA6 <AmiBlitz3.ab3@3330>   JSR writedatalong
00021FAC <AmiBlitz3.ab3@3331>   TST.b saved0
00021FB0 <AmiBlitz3.ab3@3332>    BEQ 'l1
00021FB6 <AmiBlitz3.ab3@3333>   MOVE.l #$4e714e71,d1
00021FBC <AmiBlitz3.ab3@3334>   JSR writelong                                            ;add 2 nops
00021FC2 <AmiBlitz3.ab3@3335>   MOVE.l #$4e714e71,d1
00021FC8 <AmiBlitz3.ab3@3336>   JSR writelong                                            ;add 2 nops
00021FCE <AmiBlitz3.ab3@3337>   MOVE.l #$4e714e71,d1
00021FD4 <AmiBlitz3.ab3@3338>   JSR writelong                                            ;add 2 nops
00021FDA <AmiBlitz3.ab3@3339>    MOVE.l #$4e714e71,d1
00021FE0 <AmiBlitz3.ab3@3340>   JSR writelong                                            ;add 2 nops
00021FE4 <AmiBlitz3.ab3@3343>   MOVE.b debugmode(PC),D1
00021FE8 <AmiBlitz3.ab3@3344>    BEQ.b JL_0_4132
00021FF2 <AmiBlitz3.ab3@3345>   MOVE.b debugmode,storedebugmode
00021FF6 <AmiBlitz3.ab3@3346>   MOVE.w #$FFDC,D1
00021FFA <AmiBlitz3.ab3@3347>    BSR.w uselib
00022000 <AmiBlitz3.ab3@3348>   TST.w debugversion                                       ;make a version for debugger
00022004 <AmiBlitz3.ab3@3349>    BNE.b JL_0_412A
00022008 <AmiBlitz3.ab3@3353>   MOVE.w #$FA3C,D1
0002200C <AmiBlitz3.ab3@3354>    BSR.w uselib
00022010 <AmiBlitz3.ab3@3355>   MOVE.w #$0001,D1
00022014 <AmiBlitz3.ab3@3356>    BSR.w uselib
00022018 <AmiBlitz3.ab3@3357> BRA.b JL_0_4132
0002201C <AmiBlitz3.ab3@3360>   MOVE.w #$FA32,D1
00022020 <AmiBlitz3.ab3@3361>   BSR.w uselib
00022024 <AmiBlitz3.ab3@3364>   BSR.w nextline
0002202A <AmiBlitz3.ab3@3365>   CLR.l linenum
00022030 <AmiBlitz3.ab3@3366>   CLR.l stacktrack
00022036 <AmiBlitz3.ab3@3369>   ADDQ.l #1,linenum
00022040 <AmiBlitz3.ab3@3370>   MOVE.l destpointer,destpointer2
00022046 <AmiBlitz3.ab3@3371>   MOVE.l a5,sourceline2
0002204A <AmiBlitz3.ab3@3372>   BSR.w compile_line                                        ;compile pass
0002204E <AmiBlitz3.ab3@3375>   BSR.w nextline
00022052 <AmiBlitz3.ab3@3376>    BNE.w JL_0_4136
00022056 <AmiBlitz3.ab3@3377>   BSR.w JUMP_do_runerrson
0002205A <AmiBlitz3.ab3@3378>   BSR.w pointchk
00022060 <AmiBlitz3.ab3@3379>   TST.b objectcount
00022064 <AmiBlitz3.ab3@3380>    BNE macenderr
0002206A <AmiBlitz3.ab3@3381>   CLR.l linenumat
0002206E <AmiBlitz3.ab3@3382>   BSR.w errchx2
00022078 <AmiBlitz3.ab3@3383>   CMP.l #-1,bssend
0002207C <AmiBlitz3.ab3@3384>    BNE 'l30
00022086 <AmiBlitz3.ab3@3385>   MOVE.l destpointer,bssend                                ;compile end
0002208C <AmiBlitz3.ab3@3388>   MOVE.l destpointer,d0
00022096 <AmiBlitz3.ab3@3389>   CMP.l #-1,bssstart
0002209A <AmiBlitz3.ab3@3390>   BNE 'lnf6
000220A4 <AmiBlitz3.ab3@3391>   CMP.l #-1,chipstart
000220A8 <AmiBlitz3.ab3@3392>   BNE 'lnf6
000220AC <AmiBlitz3.ab3@3393> BRA 'leven4
000220B2 <AmiBlitz3.ab3@3396>   MOVE.l destpointer,d1
000220B4 <AmiBlitz3.ab3@3397>   ADDQ.l #3,d1
000220BA <AmiBlitz3.ab3@3398>   AND.l #$fffffffc,d1                                      ;bug ?
000220C0 <AmiBlitz3.ab3@3399>   MOVE.l d1,destpointer
000220CA <AmiBlitz3.ab3@3402>   MOVE.l destpointer,codeend
000220D4 <AmiBlitz3.ab3@3403>   CMP.l #-1,chipend
000220D8 <AmiBlitz3.ab3@3404>   BNE 'l31
000220E2 <AmiBlitz3.ab3@3405>   MOVE.l destpointer,chipend
000220E8 <AmiBlitz3.ab3@3408>   MOVE.l destpointer,d1
000220EA <AmiBlitz3.ab3@3409>   ADDQ.l #1,d1
000220F0 <AmiBlitz3.ab3@3410>   AND.l #$fffffffe,d1                                     ;new evenexit
000220F6 <AmiBlitz3.ab3@3411>   MOVE.l d1,destpointer
000220FA <AmiBlitz3.ab3@3412>   MOVE.b debugmode(PC),D1
000220FE <AmiBlitz3.ab3@3413>    BEQ.b JL_0_4180
00022102 <AmiBlitz3.ab3@3414>    BSR.w debugstuff
00022106 <AmiBlitz3.ab3@3415>   MOVE.w #$C300,D1
0002210C <AmiBlitz3.ab3@3416>    JSR Atokejsr
00022110 <AmiBlitz3.ab3@3417>    BSR.w debugstuff
00022114 <AmiBlitz3.ab3@3418>   MOVE.l eopcode(PC),D1
0002211A <AmiBlitz3.ab3@3419>    JSR writelong
0002211E <AmiBlitz3.ab3@3420>   MOVE.l lastcontlink(PC),D1
00022122 <AmiBlitz3.ab3@3421>    BEQ.b JL_0_4180
00022124 <AmiBlitz3.ab3@3422>   MOVEA.l D1,A0
00022128 <AmiBlitz3.ab3@3423>   CLR.w $6(A0)
00022132 <AmiBlitz3.ab3@3429>   MOVE.l destpointer,endop                                ;where end goes...
00022138 <AmiBlitz3.ab3@3431>   TST.w blitzmode
0002213C <AmiBlitz3.ab3@3432>   BEQ.w JL_0_4198
00022140 <AmiBlitz3.ab3@3433>   BSR.w do_AMIGA                                          ;back to amiga if in blitz!
00022146 <AmiBlitz3.ab3@3436>   TST.w intsused
0002214A <AmiBlitz3.ab3@3437>   BEQ.b JL_0_41AA
0002214E <AmiBlitz3.ab3@3438>   MOVE.w #$C105,D1                                        ;interupts off!
00022154 <AmiBlitz3.ab3@3439>   JSR tokejsr2
00022158 <AmiBlitz3.ab3@3442>   BSR.w calcstatic
0002215E <AmiBlitz3.ab3@3443>   MOVE.w D4,numstatic
00022164 <AmiBlitz3.ab3@3444>   MOVE.l D3,staticdata
00022168 <AmiBlitz3.ab3@3445>    BSR.w calcmaxs
0002216E <AmiBlitz3.ab3@3447>   TST.l tokeslist
00022172 <AmiBlitz3.ab3@3448>    BEQ.b JL_0_41F8
00022178 <AmiBlitz3.ab3@3449>   MOVE.w gotocode,D1                                       ;jmp!
0002217E <AmiBlitz3.ab3@3450>    JSR writeword
00022188 <AmiBlitz3.ab3@3451>   MOVE.l destpointer,endjmpat
0002218C <AmiBlitz3.ab3@3452>    BSR.w addoff
00022192 <AmiBlitz3.ab3@3453>    JSR writelong                                           
00022196 <AmiBlitz3.ab3@3455>    BSR.w JL_0_6C76                                         ;has to be done before finits!
0002219C <AmiBlitz3.ab3@3459>   TST.w dontwrite
000221A0 <AmiBlitz3.ab3@3460>    BNE.b JL_0_41F8
000221A4 <AmiBlitz3.ab3@3461>   MOVEA.l endjmpat(PC),A4
000221AA <AmiBlitz3.ab3@3462>   MOVE.l destpointer,(A4)
000221B0 <AmiBlitz3.ab3@3465>   TST.b returncode
000221B4 <AmiBlitz3.ab3@3466>   BEQ 'l2
000221B8 <AmiBlitz3.ab3@3467>   MOVE.w #$2e80,d1
000221BE <AmiBlitz3.ab3@3468>   JSR writeword
000221C4 <AmiBlitz3.ab3@3471>   JSR JL_0_B98A
000221CA <AmiBlitz3.ab3@3472>   TST.b returncode
000221CE <AmiBlitz3.ab3@3473>   BEQ 'l3
000221D2 <AmiBlitz3.ab3@3474>   MOVE.w #$4e75,d1
000221D8 <AmiBlitz3.ab3@3475>   JSR writeword
000221DC <AmiBlitz3.ab3@3476> BRA 'l1
000221E2 <AmiBlitz3.ab3@3479>   MOVE.l #$70004E75,D1
000221E8 <AmiBlitz3.ab3@3480>   JSR writelong                                            ;write moveq #0,d0:rts
000221EE <AmiBlitz3.ab3@3483>   JSR JL_0_B73E
000221F2 <AmiBlitz3.ab3@3484>   BSR.w asmfixer
000221F6 <AmiBlitz3.ab3@3485>   BSR.w close_compilewin
000221FA <AmiBlitz3.ab3@3486> BRA.w call_setpointernormal
00022200 <AmiBlitz3.ab3@3490> JMP do_runerrson
00022202 <AmiBlitz3.ab3@3494> eopcode:    Dc.b $70,$03                                   ;MOVEQ #$03,D0
00022204 <AmiBlitz3.ab3@3495>             Dc.b $4E,$40                                   ;TRAP  #00
00022208 <AmiBlitz3.ab3@3497> endjmpat:   Ds.l 1
0002220E <AmiBlitz3.ab3@3501>   MOVEA.l newtype_string,A2
00022214 <AmiBlitz3.ab3@3502>   MOVE.l #MaxByte,D0                                       ;move.l #$ff,d0 org source
00022218 <AmiBlitz3.ab3@3505>     CMPA.w #$0,A2
0002221C <AmiBlitz3.ab3@3506>      BEQ.w pointchk_done
00022220 <AmiBlitz3.ab3@3507>     CMP.l $4(A2),D0
00022224 <AmiBlitz3.ab3@3508>      BNE.w pointchk_next
0002222C <AmiBlitz3.ab3@3509>     MOVE.w $8(A2),linenumat+2                              ;type not found  ;move 8(a2),linenumat org source
00022230 <AmiBlitz3.ab3@3510> BRA.w notypeerr
00022232 <AmiBlitz3.ab3@3513>     MOVEA.l (A2),A2
00022236 <AmiBlitz3.ab3@3514> BRA.w pointchk_loop
00022238 <AmiBlitz3.ab3@3517> RTS
0002223E <AmiBlitz3.ab3@3521>   LEA labelbase,A2
00022240 <AmiBlitz3.ab3@3525>   MOVE.l (A2),D0                                           ;testlabels
00022244 <AmiBlitz3.ab3@3526>    BEQ.w errchx2_done
00022246 <AmiBlitz3.ab3@3527>   MOVEA.l D0,A2
0002224A <AmiBlitz3.ab3@3528>   MOVE.l $4(A2),D0
0002224E <AmiBlitz3.ab3@3529>   BTST #$0,D0
00022252 <AmiBlitz3.ab3@3530>    BNE.w errchx2_loop
00022256 <AmiBlitz3.ab3@3531>   MOVE.l $8(A2),D0
0002225A <AmiBlitz3.ab3@3532>    BNE.w errchx2_loop
00022262 <AmiBlitz3.ab3@3533>   MOVE.w $10(A2),linenumat+2
00022264 <AmiBlitz3.ab3@3534>   MOVEQ #0,d0
00022268 <AmiBlitz3.ab3@3535>   MOVE.b $12(a2),d0
00022270 <AmiBlitz3.ab3@3536>   MOVE.w 0(a2,d0),linenumat
00022276 <AmiBlitz3.ab3@3537> JMP nolaberr                                               ;label not found
0002227C <AmiBlitz3.ab3@3540>   MOVE.l concomsp,D0
00022282 <AmiBlitz3.ab3@3541>   CMP.l #concomstack,D0
00022286 <AmiBlitz3.ab3@3542>    BNE.w chxerr4
0002228C <AmiBlitz3.ab3@3543>   MOVE.w connest,D1
00022290 <AmiBlitz3.ab3@3544>    BNE.w chxerr4
00022292 <AmiBlitz3.ab3@3547>   MOVE.l D1,-(A7)
00022298 <AmiBlitz3.ab3@3548>   MOVE.l firstsel,D1
0002229C <AmiBlitz3.ab3@3549>    BNE.w errchx_err1
000222A2 <AmiBlitz3.ab3@3550>   MOVE.l firstrep,D1
000222A6 <AmiBlitz3.ab3@3551>    BNE.w errchx_err2
000222AC <AmiBlitz3.ab3@3552>   MOVE.w intstring,D1
000222B0 <AmiBlitz3.ab3@3553>    BNE.w errchx_err3
000222B4 <AmiBlitz3.ab3@3554>   MOVE.l 4(a7),d1
000222BA <AmiBlitz3.ab3@3555>   MOVE.w proceduremode,D1
000222BE <AmiBlitz3.ab3@3556>    BNE.w errchx_err6
000222C4 <AmiBlitz3.ab3@3557>   MOVE.l firstiff,d1
000222C8 <AmiBlitz3.ab3@3558>    BNE errchx_err5
000222CE <AmiBlitz3.ab3@3559>   MOVE.l firstfor,D1
000222D2 <AmiBlitz3.ab3@3560>    BNE.w errchx_err7
000222D4 <AmiBlitz3.ab3@3561>   MOVE.l (A7)+,D1
000222D6 <AmiBlitz3.ab3@3562> RTS
000222E0 <AmiBlitz3.ab3@3566>   MOVE.l sellineat,linenumat
000222E6 <AmiBlitz3.ab3@3567> JMP selerrz
000222F0 <AmiBlitz3.ab3@3570>   MOVE.l replineat,linenumat
000222F6 <AmiBlitz3.ab3@3571> JMP unterr3
00022300 <AmiBlitz3.ab3@3574>   MOVE.l intlineat,linenumat
00022306 <AmiBlitz3.ab3@3575> JMP interr2
00022310 <AmiBlitz3.ab3@3578>   MOVE.l iflineat,linenumat
00022316 <AmiBlitz3.ab3@3579> JMP noenderr
00022320 <AmiBlitz3.ab3@3582>   MOVE.l prolineat,linenumat
00022326 <AmiBlitz3.ab3@3583> JMP nopenderr
00022330 <AmiBlitz3.ab3@3586>   MOVE.l forlineat,linenumat
00022336 <AmiBlitz3.ab3@3587> JMP nonexterr
00022340 <AmiBlitz3.ab3@3590>   MOVE.l ciflineat,linenumat
00022346 <AmiBlitz3.ab3@3591> JMP nocenderr
00022350 <AmiBlitz3.ab3@3595>   MOVE.l data1,maxsat
00022352 <AmiBlitz3.ab3@3596>   MOVEQ.l #$00,D4
00022358 <AmiBlitz3.ab3@3597>   MOVEA.l libpointer,A2
0002235C <AmiBlitz3.ab3@3600>     CMPA.w #$0,A2
00022360 <AmiBlitz3.ab3@3601>      BEQ.w calcmaxs_done
00022364 <AmiBlitz3.ab3@3602>     TST.w $C(A2)
00022368 <AmiBlitz3.ab3@3603>      BPL.w calcmaxs_next
0002236C <AmiBlitz3.ab3@3604>     MOVE.l $12(A2),D0
00022370 <AmiBlitz3.ab3@3605>     TST.w -$2(A2,D0.L)
00022374 <AmiBlitz3.ab3@3606>      BEQ.w calcmaxs_next
00022376 <AmiBlitz3.ab3@3607>     ADDQ.w #1,D4
0002237A <AmiBlitz3.ab3@3608>     MOVE.w -$6(A2,D0.L),D1
0002237E <AmiBlitz3.ab3@3609>     BSR.w pokedata1
00022380 <AmiBlitz3.ab3@3610>     MOVEQ.l #$01,D1
00022384 <AmiBlitz3.ab3@3611>     MOVE.w -$2(A2,D0.L),D2
00022386 <AmiBlitz3.ab3@3612>     LSL.w D2,D1
0002238A <AmiBlitz3.ab3@3613>     MULU -$4(A2,D0.L),D1                                   ;write objectspacesize
0002238E <AmiBlitz3.ab3@3614>     BSR.w writedatalong
00022390 <AmiBlitz3.ab3@3617>     MOVEA.l (A2),A2
00022394 <AmiBlitz3.ab3@3618> BRA.w calcmaxs_loop
0002239A <AmiBlitz3.ab3@3621>   MOVE.w D4,maxsused
0002239E <AmiBlitz3.ab3@3622>    BEQ.w calcmaxs_done2
000223A2 <AmiBlitz3.ab3@3623>   MOVE.w #$FFFA,D1                                         ;;use memlib
000223A6 <AmiBlitz3.ab3@3624> BRA.w uselib
000223A8 <AmiBlitz3.ab3@3627> RTS
000223AE <AmiBlitz3.ab3@3631>    MOVE.l a7,stackaddr
000223B2 <AmiBlitz3.ab3@3632>    BSR.w compile_term
000223B6 <AmiBlitz3.ab3@3633>    BSR.w reget
000223BA <AmiBlitz3.ab3@3634>    BNE.w illeolerr
000223C0 <AmiBlitz3.ab3@3635>    TST.w dontwrite
000223C4 <AmiBlitz3.ab3@3636>    BNE 'l1
000223CA <AmiBlitz3.ab3@3637>    TST.l stacktrack
000223CE <AmiBlitz3.ab3@3638>    BNE errormsg_stack
000223D2 <AmiBlitz3.ab3@3641>    CMP.w #-$7FDE,D0
000223D6 <AmiBlitz3.ab3@3642>    BNE.w compile_line_notelse
000223DC <AmiBlitz3.ab3@3643>    JSR do_else2
000223E0 <AmiBlitz3.ab3@3644> BRA.w compile_line
000223E2 <AmiBlitz3.ab3@3647>   TST.w D0
000223E6 <AmiBlitz3.ab3@3648>   BNE.w compile_line
000223EC <AmiBlitz3.ab3@3653>   MOVE.l firstiff,D0
000223F0 <AmiBlitz3.ab3@3654>    BEQ.w compile_line_done
000223F2 <AmiBlitz3.ab3@3655>   MOVEA.l D0,A0
000223F6 <AmiBlitz3.ab3@3656>   MOVE.w $C(A0),D1
000223FA <AmiBlitz3.ab3@3657>    BPL.w compile_line_done
000223FE <AmiBlitz3.ab3@3661>   BCLR #$F,D1
00022404 <AmiBlitz3.ab3@3662>    JSR AJL_0_D7B8
0002240A <AmiBlitz3.ab3@3663>    JSR AJL_0_D81C
0002240E <AmiBlitz3.ab3@3664> BRA.w compile_line_unthen
00022410 <AmiBlitz3.ab3@3667> RTS
00022416 <AmiBlitz3.ab3@3671>   LEA lastgloballabel,A0
00022418 <AmiBlitz3.ab3@3672>   TST.b (A0)
0002241C <AmiBlitz3.ab3@3673>   BEQ.w nolocerr
00022422 <AmiBlitz3.ab3@3674>   LEA ptr_parameterstore,A1
00022424 <AmiBlitz3.ab3@3675>   MOVEQ.l #$00,D2
00022426 <AmiBlitz3.ab3@3678>   ADDQ.w #1,D2
00022428 <AmiBlitz3.ab3@3679>   MOVE.b (A0)+,(A1)+
0002242C <AmiBlitz3.ab3@3680>    BNE.w createlab_loop
00022432 <AmiBlitz3.ab3@3681>   MOVE.b #$27,-$1(A1)
00022434 <AmiBlitz3.ab3@3682>   MOVE.w D2,-(A7)
0002243A <AmiBlitz3.ab3@3683>    JSR makename4
0002243C <AmiBlitz3.ab3@3684>   CMP.w (A7)+,D2
00022440 <AmiBlitz3.ab3@3685>    BEQ.w syntaxerr
00022442 <AmiBlitz3.ab3@3686>    TST.w d0
00022446 <AmiBlitz3.ab3@3687>    BPL createlab_done
0002244E <AmiBlitz3.ab3@3688>    MOVE.w #$3a,lastchar
00022450 <AmiBlitz3.ab3@3689>    SUBQ.l #2,a5
00022452 <AmiBlitz3.ab3@3692> RTS
0002245C <AmiBlitz3.ab3@3696>   MOVE.l #forthstack,forthsp
00022466 <AmiBlitz3.ab3@3697>   MOVE.l #precstack,precsp
00022468 <AmiBlitz3.ab3@3698> RTS
0002246A <AmiBlitz3.ab3@3705>   MOVEQ.l #$00,D4
00022494 <AmiBlitz3.ab3@3708>   !basic
000224D6 <AmiBlitz3.ab3@3709> 
000224E6 <AmiBlitz3.ab3@3711>   If (c_abort = 1)           ; check if set
000224E8 <AmiBlitz3.ab3@3712>     MOVEQ.l #-$01,d4
000224EE <AmiBlitz3.ab3@3713>     MOVE.w D4,stopit
0002250C <AmiBlitz3.ab3@3714>     !asm
00022510 <AmiBlitz3.ab3@3715>     BRA chkrealstop__skip
0002252E <AmiBlitz3.ab3@3717>   !asm
00022530 <AmiBlitz3.ab3@3718>   MOVEQ.l #$00,D6
00022532 <AmiBlitz3.ab3@3719>   MOVEQ.l #$00,D7                                          ; clr Z-Flag for beq.b in chkstop_chk
00022534 <AmiBlitz3.ab3@3723> RTS
00022538 <AmiBlitz3.ab3@3727>   MOVE.w stopit(PC),D0
0002253C <AmiBlitz3.ab3@3728>   BEQ chkstop__chk
00022542 <AmiBlitz3.ab3@3729>   SUBQ.w #1,stopit
00022544 <AmiBlitz3.ab3@3733> RTS
0002254C <AmiBlitz3.ab3@3736>   MOVE.w #2000,stopit
00022550 <AmiBlitz3.ab3@3737>   BSR.w chkrealstop
00022554 <AmiBlitz3.ab3@3738>   BEQ.b chkstop__rts
00022558 <AmiBlitz3.ab3@3740>   BSR.w close_compilewin
0002255C <AmiBlitz3.ab3@3741>   BSR.w call_setpointernormal
00022562 <AmiBlitz3.ab3@3743>   MOVEA.l errstack,A7
00022568 <AmiBlitz3.ab3@3744>   MOVEA.l errcont,A0
00022570 <AmiBlitz3.ab3@3745>   MOVE.w #-1,anyerrs
00022572 <AmiBlitz3.ab3@3746> JMP (A0)
00022576 <AmiBlitz3.ab3@3749> d_pc:           Ds.l 1
0002257A <AmiBlitz3.ab3@3750> d_bigpc:        Ds.l 1
0002257C <AmiBlitz3.ab3@3751> d_nomemleft:    Ds.w 1
00022580 <AmiBlitz3.ab3@3752> cont_pc:        Ds.l 1
00022584 <AmiBlitz3.ab3@3753> cont_pc2:       Ds.l 1
00022588 <AmiBlitz3.ab3@3754> lastcontlink:   Ds.l 1
0002258C <AmiBlitz3.ab3@3758>   ORI.w #$4E40,D1
00022590 <AmiBlitz3.ab3@3759> BRA.w JUMP_writeword
00022596 <AmiBlitz3.ab3@3763>   TST.b debugmode
0002259A <AmiBlitz3.ab3@3764>   BEQ.w debugstuff__rts
000225A0 <AmiBlitz3.ab3@3771>   TST.w dirmode                                            ;or while in direct mode...
000225A4 <AmiBlitz3.ab3@3772>    BNE debugstuff__rts
000225AE <AmiBlitz3.ab3@3773>   MOVE.l destpointer,d_pc
000225B8 <AmiBlitz3.ab3@3774>   MOVE.l bigpc,d_bigpc
000225C2 <AmiBlitz3.ab3@3775>   MOVE.w dontwrite,d_nomemleft
000225C6 <AmiBlitz3.ab3@3776>   MOVEM.l D0-D1,-(A7)
000225C8 <AmiBlitz3.ab3@3777>   MOVEQ.l #$01,D1
000225CC <AmiBlitz3.ab3@3778>    BSR.w writetrap                                         ;write the adress to sourceline
000225D2 <AmiBlitz3.ab3@3782>    MOVE.l destpointer,D0
000225D8 <AmiBlitz3.ab3@3783>   MOVE.l cont_pc,D1
000225DE <AmiBlitz3.ab3@3784>   MOVE.l D0,cont_pc
000225E4 <AmiBlitz3.ab3@3785>   MOVE.l D1,cont_pc2
000225E8 <AmiBlitz3.ab3@3786>    BEQ.b debugstuff__skip
000225EE <AmiBlitz3.ab3@3787>   TST.w dontwrite
000225F2 <AmiBlitz3.ab3@3788>    BNE.b debugstuff__skip
000225F4 <AmiBlitz3.ab3@3789>   MOVEA.l D1,A4
000225F6 <AmiBlitz3.ab3@3790>   SUB.l A4,D0
000225FA <AmiBlitz3.ab3@3791>   MOVE.w D0,$6(A4)
00022600 <AmiBlitz3.ab3@3792>   MOVE.l A4,lastcontlink
00022606 <AmiBlitz3.ab3@3795>   TST.w ininclude
0002260C <AmiBlitz3.ab3@3797>   TST.w makeexec
00022610 <AmiBlitz3.ab3@3798>   BEQ 'l1
00022616 <AmiBlitz3.ab3@3799>   TST.w exdebug
0002261A <AmiBlitz3.ab3@3800>   BEQ 'noinc
0002261E <AmiBlitz3.ab3@3803>   MOVEM.l a0-a1/d2/d3,-(a7)                                ;write source for includes
00022624 <AmiBlitz3.ab3@3804>   MOVE.l data1,d1
0002262A <AmiBlitz3.ab3@3805>   TST.b firsttime
0002262E <AmiBlitz3.ab3@3806>   BNE 'nofirst
00022636 <AmiBlitz3.ab3@3807>   MOVE.b #1,firsttime
0002263C <AmiBlitz3.ab3@3808>   MOVE.l #"DuCk",d1                                        ; to found from debugger the code start
00022642 <AmiBlitz3.ab3@3809>   JSR writedatalong
00022648 <AmiBlitz3.ab3@3810>   MOVE.l #"AmiB",d1
0002264E <AmiBlitz3.ab3@3811>   JSR writedatalong
00022654 <AmiBlitz3.ab3@3812>   MOVE.l destbufferstart,d1
0002265A <AmiBlitz3.ab3@3813>   JSR writedatalong
00022660 <AmiBlitz3.ab3@3814>   TST.w dontwrite
00022664 <AmiBlitz3.ab3@3815>   BNE 'nohunk
0002266A <AmiBlitz3.ab3@3816>   MOVE.l data1,d1
0002266C <AmiBlitz3.ab3@3817>   SUBQ.l #4,d1
00022672 <AmiBlitz3.ab3@3818>   SUB.l destbufferstart,d1
00022674 <AmiBlitz3.ab3@3819>   MOVE.l d1,d2
0002267A <AmiBlitz3.ab3@3820>   JSR addhunkoffset
00022680 <AmiBlitz3.ab3@3823>   MOVE.l destpointer,d2
00022686 <AmiBlitz3.ab3@3824>   MOVE.l data1,d1
0002268C <AmiBlitz3.ab3@3827>   MOVE.l destpointer,d2
0002268E <AmiBlitz3.ab3@3828>   MOVE.l d1,d3
00022694 <AmiBlitz3.ab3@3829>   SUB.l destbufferstart,d1
0002269A <AmiBlitz3.ab3@3830>   OR.l #$80000000,d1
000226A0 <AmiBlitz3.ab3@3831>   JSR writelong
000226A6 <AmiBlitz3.ab3@3832>   TST.w inmacro
000226AA <AmiBlitz3.ab3@3833>   BEQ 'sc1
000226B0 <AmiBlitz3.ab3@3834>   MOVE.l myline,a0
000226B4 <AmiBlitz3.ab3@3836> BRA 'inc2
000226BA <AmiBlitz3.ab3@3838>  'sc1  TST.w ininclude
000226BE <AmiBlitz3.ab3@3839>   BEQ 'inc
000226C4 <AmiBlitz3.ab3@3840>   MOVE.l includesourceline,a0
000226C8 <AmiBlitz3.ab3@3841> BRA 'inc2
000226CE <AmiBlitz3.ab3@3844>   MOVE.l sourceline,a0
000226D2 <AmiBlitz3.ab3@3845>   LEA 9(a0),a0
000226D4 <AmiBlitz3.ab3@3848>   MOVE.l d1,d2
000226D6 <AmiBlitz3.ab3@3849>   MOVE.l A5,D1
000226D8 <AmiBlitz3.ab3@3850>   SUB.l a0,D1
000226DE <AmiBlitz3.ab3@3851>   ADD.l #9,d1
000226E2 <AmiBlitz3.ab3@3852>   BSR.w JUMP_writeword
000226E8 <AmiBlitz3.ab3@3853>   CMP.l #9,d1
000226EC <AmiBlitz3.ab3@3854>   BEQ 'pos1
000226F2 <AmiBlitz3.ab3@3855>   TST.w dontwrite
000226F6 <AmiBlitz3.ab3@3856>   BNE 'nopad
000226FC <AmiBlitz3.ab3@3857>   MOVE.l lastsourceline,d1
00022700 <AmiBlitz3.ab3@3858>   MOVE.l d1,-6(a4)
00022704 <AmiBlitz3.ab3@3859> BRA 'nopad
0002270A <AmiBlitz3.ab3@3862>   MOVE.l d2,lastsourceline
00022714 <AmiBlitz3.ab3@3863>    MOVE.l destpointer,lastdestpointer
00022716 <AmiBlitz3.ab3@3864>    MOVEQ #0,d1
0002271C <AmiBlitz3.ab3@3865>   MOVE.l data1,d2
00022722 <AmiBlitz3.ab3@3866>   SUB.l destbufferstart,d2
00022728 <AmiBlitz3.ab3@3867>   JSR writedatalong
0002272E <AmiBlitz3.ab3@3868>   TST.w dontwrite
00022732 <AmiBlitz3.ab3@3869>   BNE 'no2
00022738 <AmiBlitz3.ab3@3870>   JSR addhunkoffset
0002273E <AmiBlitz3.ab3@3873>   MOVE.l data1,d2
00022744 <AmiBlitz3.ab3@3874>   SUB.l destbufferstart,d2
0002274A <AmiBlitz3.ab3@3875>   JSR writedatalong
00022750 <AmiBlitz3.ab3@3876>   TST.w dontwrite
00022754 <AmiBlitz3.ab3@3877>   BNE 'no
0002275A <AmiBlitz3.ab3@3878>   JSR addhunkoffset
00022760 <AmiBlitz3.ab3@3879>   MOVE.l lastwritedat,a1
00022766 <AmiBlitz3.ab3@3880>   CMP.l #0,a1
0002276A <AmiBlitz3.ab3@3881>   BEQ 'no
0002276C <AmiBlitz3.ab3@3882>   MOVE.l d3,(a1)
00022774 <AmiBlitz3.ab3@3883>   MOVE.l prevwritedat,4(a1)
0002277E <AmiBlitz3.ab3@3884>   MOVE.l lastwritedat,prevwritedat
00022784 <AmiBlitz3.ab3@3887>   MOVE.l d3,lastwritedat
00022786 <AmiBlitz3.ab3@3888>   MOVEQ #4,d1
0002278A <AmiBlitz3.ab3@3889>   BSR pokedata1b
0002278C <AmiBlitz3.ab3@3892>   MOVE.b (a0)+,d1
00022790 <AmiBlitz3.ab3@3893>   BEQ 'done
00022794 <AmiBlitz3.ab3@3894>   BSR pokedata1b
00022798 <AmiBlitz3.ab3@3895> BRA 'loop
0002279A <AmiBlitz3.ab3@3898>   MOVEQ #0,d1
0002279E <AmiBlitz3.ab3@3899>   BSR pokedata1b
000227A4 <AmiBlitz3.ab3@3900>   MOVE.l data1,d1
000227A8 <AmiBlitz3.ab3@3901>   BTST #0,d1
000227AC <AmiBlitz3.ab3@3902>   BEQ 'nopad
000227AE <AmiBlitz3.ab3@3903>   MOVEQ #0,d1
000227B2 <AmiBlitz3.ab3@3904>   BSR pokedata1b
000227B6 <AmiBlitz3.ab3@3907>   MOVEM.l (a7)+,a0-a1/d2/d3
000227BA <AmiBlitz3.ab3@3908> BRA 'noinc2
000227C0 <AmiBlitz3.ab3@3911>   MOVE.l sourceline,D1
000227C6 <AmiBlitz3.ab3@3913>   JSR writelong
000227C8 <AmiBlitz3.ab3@3914>   MOVE.l A5,D1
000227CE <AmiBlitz3.ab3@3915>   SUB.l sourceline,D1
000227D4 <AmiBlitz3.ab3@3917>   JSR writeword
000227D6 <AmiBlitz3.ab3@3920>   MOVEQ.l #$00,D1
000227DC <AmiBlitz3.ab3@3921>   JSR writeword                                            ; was: BSR.w writeword
000227E0 <AmiBlitz3.ab3@3922>   MOVEM.l (A7)+,D0-D1
000227E2 <AmiBlitz3.ab3@3925> RTS
000227E8 <AmiBlitz3.ab3@3929>   TST.b debugmode                                          ;extern debug
000227EC <AmiBlitz3.ab3@3930>    BEQ.b undodebug__rts
000227F2 <AmiBlitz3.ab3@3931>   TST.b dirmode
000227F6 <AmiBlitz3.ab3@3932>   BNE undodebug__rts
00022800 <AmiBlitz3.ab3@3937>   MOVE.w d_nomemleft,dontwrite
0002280A <AmiBlitz3.ab3@3938>   MOVE.l d_bigpc,bigpc
00022814 <AmiBlitz3.ab3@3939>   MOVE.l d_pc,destpointer
0002281E <AmiBlitz3.ab3@3940>   MOVE.l cont_pc2,cont_pc
00022820 <AmiBlitz3.ab3@3943> RTS
0002282A <AmiBlitz3.ab3@3947>   MOVE.l #forthstack,forthsp
00022834 <AmiBlitz3.ab3@3948>   MOVE.l #precstack,precsp
0002283A <AmiBlitz3.ab3@3949>   CLR.w regnum
00022840 <AmiBlitz3.ab3@3950>   CLR.w nonew
00022846 <AmiBlitz3.ab3@3951>   CLR.w sbasegot
00022850 <AmiBlitz3.ab3@3952>   MOVE.w varcodelen,oldvcodelen
00022856 <AmiBlitz3.ab3@3953>   CLR.w varcodelen
0002285E <AmiBlitz3.ab3@3954>   MOVE.w #-1,lasta6
00022860 <AmiBlitz3.ab3@3955> RTS
00022866 <AmiBlitz3.ab3@3959>   TST.w linemode
0002286A <AmiBlitz3.ab3@3960>   BMI.b smode__skip
0002286E <AmiBlitz3.ab3@3961>   BSR.w undodebug
00022874 <AmiBlitz3.ab3@3962>   MOVE.w linemode,D1
00022876 <AmiBlitz3.ab3@3963>   ADDQ.w #4,A7
00022878 <AmiBlitz3.ab3@3964>   LSL.w #2,D1
0002287E <AmiBlitz3.ab3@3965>   LEA modetable,A0
00022882 <AmiBlitz3.ab3@3966>   MOVEA.l $0(A0,D1.W),A0
00022886 <AmiBlitz3.ab3@3967>   BSR.w reget
00022888 <AmiBlitz3.ab3@3970> JMP (A0)                                                   ;jumptokenroutine
0002288A <AmiBlitz3.ab3@3973> RTS
00022892 <AmiBlitz3.ab3@3978>   MOVE.w #0,leaa0a0+2
00022898 <AmiBlitz3.ab3@3979>   CLR.b nowdeclare
0002289E <AmiBlitz3.ab3@3980>   CLR.b notypecheck
000228A4 <AmiBlitz3.ab3@3981>   CLR.l lasttoken
000228AA <AmiBlitz3.ab3@3982>   CLR.b doimmediate
000228B0 <AmiBlitz3.ab3@3983>   CLR.w vartype
000228B6 <AmiBlitz3.ab3@3984>   CLR.w regnumfunc
000228BC <AmiBlitz3.ab3@3985>   CLR.b optistring
000228C2 <AmiBlitz3.ab3@3986>   CLR.b iniffcommand
000228C8 <AmiBlitz3.ab3@3987>   CLR.w instringon  ; new
000228CE <AmiBlitz3.ab3@3988>   CLR.b funccall
000228D4 <AmiBlitz3.ab3@3989>   CLR.l currentfunccall
000228DA <AmiBlitz3.ab3@3990>   CLR.l leftsidetype
000228E0 <AmiBlitz3.ab3@3991>   CLR.l rightsidetype
000228E6 <AmiBlitz3.ab3@3992>   CLR.b peekaddrsize
000228EC <AmiBlitz3.ab3@3993>   CLR.b blitzparloop
000228F2 <AmiBlitz3.ab3@3994>   CLR.b funcparloop
000228F8 <AmiBlitz3.ab3@3995>   CLR.w parnum           ;new
000228FE <AmiBlitz3.ab3@3996>   TST.b debugmode
00022902 <AmiBlitz3.ab3@3997>    BEQ 'fpu
0002290C <AmiBlitz3.ab3@4003>   MOVE.b fpu,iee
00022910 <AmiBlitz3.ab3@4004>   MOVE.w stopit(PC),D0
00022914 <AmiBlitz3.ab3@4005>   BNE chkstop_chkb
00022918 <AmiBlitz3.ab3@4006>   BSR.w chkstop                                          ; message here
0002291E <AmiBlitz3.ab3@4009>   SUBQ.w #1,stopit
00022922 <AmiBlitz3.ab3@4012>   BSR.w findmacro                                          ;macro
00022928 <AmiBlitz3.ab3@4066>   TST.b debugmode
0002292C <AmiBlitz3.ab3@4067>    BEQ.s 'l10
00022932 <AmiBlitz3.ab3@4068>   TST.b exdebug
00022936 <AmiBlitz3.ab3@4069>   BEQ 'l10a
00022938 <AmiBlitz3.ab3@4070>   MOVE.w (a5),d0
0002293C <AmiBlitz3.ab3@4071>   CMP.w #$8025,d0
00022940 <AmiBlitz3.ab3@4072>    BEQ 'l10
00022944 <AmiBlitz3.ab3@4075>   BSR.w debugstuffa                                         ;insert runtimecode debugcode
00022948 <AmiBlitz3.ab3@4079>   BSR.w get1bytemain                                       ;gettokenmain
0002294C <AmiBlitz3.ab3@4080>    BEQ.w undodebug
00022950 <AmiBlitz3.ab3@4081>   CMP.w #$002b,d0                                            ;check for + cast sign
00022954 <AmiBlitz3.ab3@4082>     BNE 'lb2
00022958 <AmiBlitz3.ab3@4083>     BSR.w get1bytemain
00022960 <AmiBlitz3.ab3@4084>     MOVE.b #1,notypecheck
0002296A <AmiBlitz3.ab3@4092>   MOVE.l #forthstack,forthsp
00022974 <AmiBlitz3.ab3@4093>   MOVE.l #precstack,precsp
0002297A <AmiBlitz3.ab3@4094>   CLR.w regnum
00022980 <AmiBlitz3.ab3@4095>   CLR.w nonew
00022986 <AmiBlitz3.ab3@4096>   CLR.w sbasegot
00022990 <AmiBlitz3.ab3@4097>   MOVE.w varcodelen,oldvcodelen
00022996 <AmiBlitz3.ab3@4099>   CLR.w varcodelen
0002299E <AmiBlitz3.ab3@4100>   MOVE.w #$FFFF,lasta6
000229A2 <AmiBlitz3.ab3@4102>   BSR.w smode
000229A4 <AmiBlitz3.ab3@4103>   TST.w D0
000229A8 <AmiBlitz3.ab3@4104>   BMI.w get_tokencode
000229AC <AmiBlitz3.ab3@4105>   CMP.w #$2E,D0
000229B0 <AmiBlitz3.ab3@4106>    BEQ.w JL_0_4644                                         ;shortlist
000229B4 <AmiBlitz3.ab3@4107>   CMP.w #"#",D0
000229B8 <AmiBlitz3.ab3@4108>    BEQ.w JL_0_4718                                         ;constant found
000229BC <AmiBlitz3.ab3@4109>   CMP.w #$27,D0
000229C0 <AmiBlitz3.ab3@4110>    BEQ.w JL_0_4638                                         ;local label
000229C6 <AmiBlitz3.ab3@4111>   MOVE.l A5,letstart
000229CC <AmiBlitz3.ab3@4112>   JSR getparameter
000229D0 <AmiBlitz3.ab3@4113>   BSR.w reget
000229D4 <AmiBlitz3.ab3@4114>    BEQ.w JL_0_4658                                         ;label found
000229D8 <AmiBlitz3.ab3@4115>   CMP.w #$7B,D0
000229DC <AmiBlitz3.ab3@4116>    BEQ.w JL_0_475C
000229DE <AmiBlitz3.ab3@4117>   TST.w d0
000229E2 <AmiBlitz3.ab3@4118>    BPL 'll1
000229E8 <AmiBlitz3.ab3@4119>   TST.b newsyntax
000229EC <AmiBlitz3.ab3@4120>    BEQ 'll1
000229F2 <AmiBlitz3.ab3@4121>   LEA allowtab,a0
000229F4 <AmiBlitz3.ab3@4122>   MOVEQ #0,d1
000229F6 <AmiBlitz3.ab3@4123>   MOVE.b d0,d1
000229FA <AmiBlitz3.ab3@4124>   TST.b 0(a0,d1.w)
000229FE <AmiBlitz3.ab3@4125>    BNE 'll1
00022A00 <AmiBlitz3.ab3@4126>   SUBQ.l #2,a5
00022A08 <AmiBlitz3.ab3@4127>   MOVE.w #":",lastchar                                     ;no doublepoint
00022A0C <AmiBlitz3.ab3@4128> BRA JL_0_4658
00022A14 <AmiBlitz3.ab3@4131>   CMP.l #"equ ",-1(a5)
00022A18 <AmiBlitz3.ab3@4132>    BEQ 'll4
00022A20 <AmiBlitz3.ab3@4133>   CMP.l #"EQU ",-1(a5)
00022A24 <AmiBlitz3.ab3@4134>    BNE 'll2
00022A26 <AmiBlitz3.ab3@4137>   ADDQ.l #2,a5
00022A2A <AmiBlitz3.ab3@4138>   BSR.w findlabel2
00022A2E <AmiBlitz3.ab3@4139>   BEQ.w 'lf1
00022A32 <AmiBlitz3.ab3@4140>   BSR.w addlabelhash
00022A3A <AmiBlitz3.ab3@4141>   MOVE.l #$1,$4(A2)
00022A42 <AmiBlitz3.ab3@4144>   CMPI.l #$1,$4(A2)
00022A46 <AmiBlitz3.ab3@4145>    BNE.w illconerr
00022A4A <AmiBlitz3.ab3@4146>   BSR get1bytemain
00022A4C <AmiBlitz3.ab3@4147>   MOVE.l A2,-(A7)
00022A4E <AmiBlitz3.ab3@4158>   SUBQ.l #1,a5
00022A50 <AmiBlitz3.ab3@4161>   SUBQ.l #1,a5
00022A56 <AmiBlitz3.ab3@4162>   JSR AJL_0_BF6E
00022A58 <AmiBlitz3.ab3@4163>   MOVEA.l (A7)+,A2
00022A5C <AmiBlitz3.ab3@4164>   MOVE.l D3,$8(A2)
00022A5E <AmiBlitz3.ab3@4165>   RTS
00022A62 <AmiBlitz3.ab3@4166>   BSR get1bytemain
00022A6A <AmiBlitz3.ab3@4169>   CMP.l #"SET ",-1(a5)
00022A6E <AmiBlitz3.ab3@4170>   BNE 'll3
00022A72 <AmiBlitz3.ab3@4171> BRA 'll4
00022A78 <AmiBlitz3.ab3@4174> JMP AJL_0_DEA6
00022A7C <AmiBlitz3.ab3@4177>   CMP.w #-$7FDE,D0
00022A80 <AmiBlitz3.ab3@4178>   BEQ.w get_tokencode
00022A84 <AmiBlitz3.ab3@4179> BRA.w undodebug
00022A88 <AmiBlitz3.ab3@4182>   BSR.w undodebug
00022A8C <AmiBlitz3.ab3@4183>   BSR.w createlab
00022A90 <AmiBlitz3.ab3@4184> BRA.w JL_0_466E
00022A94 <AmiBlitz3.ab3@4187>   BSR.w get1bytemain
00022A98 <AmiBlitz3.ab3@4188>    BEQ.w JL_0_462C
00022A9C <AmiBlitz3.ab3@4189>   CMP.w #"'",D0
00022AA0 <AmiBlitz3.ab3@4190>    BEQ.w JL_0_4638
00022AA4 <AmiBlitz3.ab3@4191>    BSR.w makename2
00022AA6 <AmiBlitz3.ab3@4192>    TST.w d0
00022AAA <AmiBlitz3.ab3@4193>    BPL 'll1
00022AAC <AmiBlitz3.ab3@4194>    SUBQ.l #2,a5
00022AB4 <AmiBlitz3.ab3@4195>    MOVE.w #":",lastchar
00022AB8 <AmiBlitz3.ab3@4196> BRA JL_0_4658                                              ;????
00022ABC <AmiBlitz3.ab3@4200>   BSR.w undodebug
00022AC2 <AmiBlitz3.ab3@4201>   LEA ptr_parameterstore,A0
00022AC8 <AmiBlitz3.ab3@4202>   LEA lastgloballabel,A1
00022ACA <AmiBlitz3.ab3@4205>   MOVE.b (A0)+,(A1)+
00022ACE <AmiBlitz3.ab3@4206>    BNE.w JL_0_4668
00022AD2 <AmiBlitz3.ab3@4209>   BSR.w findlabel2
00022AD6 <AmiBlitz3.ab3@4210>    BEQ.w JL_0_4698
00022ADA <AmiBlitz3.ab3@4211>    BSR.w addlabelhash
00022ADE <AmiBlitz3.ab3@4214>   CLR.l $4(A2)
00022AE6 <AmiBlitz3.ab3@4215>   MOVE.l destpointer,$8(A2)
00022AEE <AmiBlitz3.ab3@4218>   MOVE.w procnum,$10(A2)
00022AF0 <AmiBlitz3.ab3@4219> RTS
00022AF4 <AmiBlitz3.ab3@4223>   MOVE.l $4(A2),D0
00022AF8 <AmiBlitz3.ab3@4224>   BTST #$0,D0
00022AFC <AmiBlitz3.ab3@4225>    BNE.w illlaberr
00022B02 <AmiBlitz3.ab3@4226>   TST.w pass
00022B06 <AmiBlitz3.ab3@4228>   MOVE.l $8(A2),D0
00022B0A <AmiBlitz3.ab3@4229>    BNE.w duplaberr
00022B12 <AmiBlitz3.ab3@4230>   MOVE.w procnum,$10(A2)
00022B16 <AmiBlitz3.ab3@4231>   MOVEA.l $4(A2),A3
00022B1C <AmiBlitz3.ab3@4232>   MOVEA.l _execbase,A6
00022B20 <AmiBlitz3.ab3@4235>   CMPA.w #$0,A3
00022B24 <AmiBlitz3.ab3@4236>    BEQ.w JL_0_467A
00022B28 <AmiBlitz3.ab3@4237>     MOVE.l $4(A2),D1
00022B2C <AmiBlitz3.ab3@4238>     BTST #$0,D1
00022B30 <AmiBlitz3.ab3@4239>     BNE.w illlaberr
00022B34 <AmiBlitz3.ab3@4240>   MOVE.w $8(A3),D1
00022B38 <AmiBlitz3.ab3@4241>   CMP.w $10(A2),D1
00022B3C <AmiBlitz3.ab3@4242>    BEQ.w JL_0_46DC
00022B42 <AmiBlitz3.ab3@4243>    TST.b newsyntax
00022B46 <AmiBlitz3.ab3@4244>    BEQ 'l1
00022B4A <AmiBlitz3.ab3@4245> BRA.w JL_0_46DC                                            ;label context out of range fix
00022B52 <AmiBlitz3.ab3@4250>   MOVE.w $A(A3),linenumat+2                                ;move 10(a3),linenumat org source
00022B56 <AmiBlitz3.ab3@4251> BRA.w referr
00022B5C <AmiBlitz3.ab3@4254>   MOVE.w dontwrite,D1
00022B60 <AmiBlitz3.ab3@4255>    BNE.w JL_0_4706
00022B64 <AmiBlitz3.ab3@4256>   MOVEA.l $4(A3),A1
00022B6A <AmiBlitz3.ab3@4257>   BTST #$0,$7(A3)
00022B6E <AmiBlitz3.ab3@4258>    BEQ.w JL_0_4700
00022B70 <AmiBlitz3.ab3@4259>   SUBQ.w #1,A1
00022B76 <AmiBlitz3.ab3@4260>   MOVE.l data2,(A1)
00022B7A <AmiBlitz3.ab3@4261> BRA.w JL_0_4706
00022B80 <AmiBlitz3.ab3@4264>   MOVE.l destpointer,(A1)
00022B82 <AmiBlitz3.ab3@4267>   MOVEA.l A3,A1
00022B84 <AmiBlitz3.ab3@4268>   MOVEA.l (A3),A3
00022B88 <AmiBlitz3.ab3@4269>   MOVE.l A3,$4(A2)
00022B8A <AmiBlitz3.ab3@4270>   MOVEQ.l #$0C+2,D0
00022B90 <AmiBlitz3.ab3@4271>   MOVE.l mempool,a0
00022B96 <AmiBlitz3.ab3@4272>   MOVEA.l _execbase,A6
00022B9A <AmiBlitz3.ab3@4273>   JSR _FreePooled(A6)
00022B9E <AmiBlitz3.ab3@4274> BRA.w JL_0_46BC
00022BA8 <AmiBlitz3.ab3@4279>    MOVE.l #forthstack,forthsp
00022BB2 <AmiBlitz3.ab3@4280>   MOVE.l #precstack,precsp
00022BB6 <AmiBlitz3.ab3@4281>    BSR.w getparameter2
00022BBA <AmiBlitz3.ab3@4284>   BSR.w findlabel2
00022BBE <AmiBlitz3.ab3@4285>    BEQ.w JL_0_4738
00022BC2 <AmiBlitz3.ab3@4286>    BSR.w addlabelhash
00022BCA <AmiBlitz3.ab3@4287>   MOVE.l #$1,$4(A2)
00022BCE <AmiBlitz3.ab3@4288> BRA.w JL_0_4744
00022BD6 <AmiBlitz3.ab3@4291>   CMPI.l #$1,$4(A2)
00022BDA <AmiBlitz3.ab3@4292>    BNE.w illconerr
00022BDE <AmiBlitz3.ab3@4301>   CMP.w #$3D,D0
00022BE2 <AmiBlitz3.ab3@4302>   BEQ.w JL_0_474E
00022BE4 <AmiBlitz3.ab3@4303> RTS
00022BE6 <AmiBlitz3.ab3@4307>   MOVE.l A2,-(A7)
00022BEC <AmiBlitz3.ab3@4308>   JSR AJL_0_BF6E
00022BEE <AmiBlitz3.ab3@4309>   MOVEA.l (A7)+,A2
00022BF2 <AmiBlitz3.ab3@4310>   MOVE.l D3,$8(A2)                                         ;store constant
00022BFA <AmiBlitz3.ab3@4311>   CMP.w #$0a,lastchar
00022BFE <AmiBlitz3.ab3@4312>   BNE 'l1
00022C06 <AmiBlitz3.ab3@4313>   MOVE.w #":",lastchar                                     ;hack to read wizard include files
00022C08 <AmiBlitz3.ab3@4316> RTS
00022C0C <AmiBlitz3.ab3@4319>   BSR.w findproc                                           ;write statement call
00022C10 <AmiBlitz3.ab3@4320>   BEQ _state
00022C16 <AmiBlitz3.ab3@4321>   TST.l unusedfunc
00022C1A <AmiBlitz3.ab3@4322>   BEQ noprocerr
00022C20 <AmiBlitz3.ab3@4324>   JSR gotoendsource
00022C24 <AmiBlitz3.ab3@4327>   TST.b $5(A2)
00022C2A <AmiBlitz3.ab3@4329>   MOVE.l a2,currentfunccall
00022C32 <AmiBlitz3.ab3@4330>   MOVE.b #1,funccall
00022C38 <AmiBlitz3.ab3@4331>   MOVE.b #1,isfunc(a2)
00022C3C <AmiBlitz3.ab3@4332>   MOVE.l $E(A2),-(A7)
00022C3E <AmiBlitz3.ab3@4333>   MOVEQ.l #$00,D0
00022C42 <AmiBlitz3.ab3@4334>   MOVE.b $4(A2),D0
00022C48 <AmiBlitz3.ab3@4335>   MOVE.l d0,parnumtemp
00022C4C <AmiBlitz3.ab3@4336>   BEQ.w JL_0_4786
00022C50 <AmiBlitz3.ab3@4337>   TST.b $20(a2)                                            ;increase if morepar
00022C54 <AmiBlitz3.ab3@4338>   BNE 'no0par
00022C56 <AmiBlitz3.ab3@4339>   MOVE.l a5,a4
00022C5A <AmiBlitz3.ab3@4342>   CMP.b #$20,(a4)+
00022C5E <AmiBlitz3.ab3@4343>   BEQ 'l1
00022C64 <AmiBlitz3.ab3@4344>   CMP.b #"}",-1(a4)
00022C68 <AmiBlitz3.ab3@4345>   BNE  'no0par                                             ;statementcall pars
00022C6A <AmiBlitz3.ab3@4346>   MOVEQ #0,d0
00022C6E <AmiBlitz3.ab3@4349>   LEA $16(A2),A1
00022C70 <AmiBlitz3.ab3@4352>   MOVE.l d1,-(a7)
00022C72 <AmiBlitz3.ab3@4353>   MOVE.b (a1),d2
00022C74 <AmiBlitz3.ab3@4354>   MOVE.l d0,d1
00022C78 <AmiBlitz3.ab3@4355>   CMP.w #4,d2
00022C7C <AmiBlitz3.ab3@4356>   BNE 'l1b
00022C82 <AmiBlitz3.ab3@4357>   ADD.l #$203c,d1
00022C88 <AmiBlitz3.ab3@4359>   JSR writeword
00022C8E <AmiBlitz3.ab3@4360>   MOVE.l #$ffff0000,d1
00022C94 <AmiBlitz3.ab3@4362>   JSR writelong
00022C98 <AmiBlitz3.ab3@4363> BRA 'l2b
00022C9E <AmiBlitz3.ab3@4366>   TST.b fpu
00022CA2 <AmiBlitz3.ab3@4367>   BNE 'l1c
00022CA6 <AmiBlitz3.ab3@4368>   CMP.w #5,d2
00022CAA <AmiBlitz3.ab3@4369>   BNE 'l1c
00022CB0 <AmiBlitz3.ab3@4370>   ADD.l #$203c,d1
00022CB6 <AmiBlitz3.ab3@4372>   JSR writeword
00022CBC <AmiBlitz3.ab3@4373>   MOVE.l #$800000c1,d1
00022CC2 <AmiBlitz3.ab3@4375>   JSR writelong
00022CC6 <AmiBlitz3.ab3@4376> BRA 'l2b
00022CCC <AmiBlitz3.ab3@4379>   ADD.l #$70ff,d1
00022CD2 <AmiBlitz3.ab3@4381>   JSR writeword
00022CD8 <AmiBlitz3.ab3@4382>   MOVE.l #$f23c5000,d1
00022CDA <AmiBlitz3.ab3@4383>   MOVE.l d0,d2
00022CDC <AmiBlitz3.ab3@4384>   ASR.l #2,d2
00022CDE <AmiBlitz3.ab3@4385>   ADD.l d2,d1
00022CE4 <AmiBlitz3.ab3@4387>   JSR writelong
00022CE8 <AmiBlitz3.ab3@4388>   MOVE.w #$ffff,d1
00022CEE <AmiBlitz3.ab3@4390>   JSR writeword
00022CF0 <AmiBlitz3.ab3@4393>   MOVE.l (a7)+,d1
00022CF2 <AmiBlitz3.ab3@4394>   ADDQ.l #1,a1
00022CF8 <AmiBlitz3.ab3@4395>   ADD.l #$0200,d0
00022CFE <AmiBlitz3.ab3@4396>   CMP.l #$0e00,d0
00022D02 <AmiBlitz3.ab3@4397>    BEQ syntaxerr
00022D04 <AmiBlitz3.ab3@4398>   TST.b (a1)
00022D08 <AmiBlitz3.ab3@4399>    BNE 'again
00022D0C <AmiBlitz3.ab3@4400> BRA JL_0_4786
00022D16 <AmiBlitz3.ab3@4403>   MOVE.w a2offset,a2offset2
00022D1A <AmiBlitz3.ab3@4404>   LEA $16(A2),A2
00022D20 <AmiBlitz3.ab3@4405>   MOVE.b funcparloop,-(a7)
00022D28 <AmiBlitz3.ab3@4406>   MOVE.b #1,funcparloop
00022D2E <AmiBlitz3.ab3@4407>   MOVE.b blitzparloop,-(a7)
00022D34 <AmiBlitz3.ab3@4408>   CLR.b blitzparloop
00022D38 <AmiBlitz3.ab3@4409>   BSR.w fetchpees2
00022D3E <AmiBlitz3.ab3@4410>   MOVE.b (a7)+,blitzparloop
00022D44 <AmiBlitz3.ab3@4411>   MOVE.b (a7)+,funcparloop
00022D48 <AmiBlitz3.ab3@4412> BRA.w JL_0_478A
00022D4C <AmiBlitz3.ab3@4415>   BSR.w get1bytemain
00022D50 <AmiBlitz3.ab3@4418>   CMP.w #$7D,D0
00022D54 <AmiBlitz3.ab3@4419>    BNE.w morepar_                                          ;syntax error morepar
00022D5A <AmiBlitz3.ab3@4420>    JSR chkstak
00022D5C <AmiBlitz3.ab3@4421>   MOVE.l (A7)+,D1
00022D62 <AmiBlitz3.ab3@4437>    JSR JL_0_AFCA
00022D68 <AmiBlitz3.ab3@4459>   CLR.b funccall
00022D6C <AmiBlitz3.ab3@4460> BRA.w get1bytemain
00022D72 <AmiBlitz3.ab3@4464>   MOVE.l d0,lasttoken
00022D76 <AmiBlitz3.ab3@4465>   CMP.w #$c09f,d0                                          ;hack to use getregd0 instead of getd0
00022D7A <AmiBlitz3.ab3@4466>   BNE 'l2
00022D7E <AmiBlitz3.ab3@4467>    MOVE.w #$dd05,d0
00022D82 <AmiBlitz3.ab3@4470>   CMP.w #$c0a0,d0                                          ;hack to use getregd0 instead of getd0
00022D86 <AmiBlitz3.ab3@4471>   BNE 'l3
00022D8A <AmiBlitz3.ab3@4472>    MOVE.w #$dd06,d0
00022D8E <AmiBlitz3.ab3@4475>   CMP.w #-$7FC4,D0
00022D92 <AmiBlitz3.ab3@4476>   BCS.w JL_0_47C4
00022D96 <AmiBlitz3.ab3@4477>     CMP.w #-$7F4D,D0
00022D9A <AmiBlitz3.ab3@4478>     BCC.w JL_0_47C4
00022DA2 <AmiBlitz3.ab3@4479>       BTST #$7,assemblercheck                              ;inline Assembler checking
00022DA6 <AmiBlitz3.ab3@4480>       BNE.b JL_0_47C0
00022DAC <AmiBlitz3.ab3@4481>         TST.b debugmode
00022DB0 <AmiBlitz3.ab3@4482>         BEQ.b 'l10
00022DBA <AmiBlitz3.ab3@4487>           MOVE.w d_nomemleft,dontwrite
00022DC4 <AmiBlitz3.ab3@4488>           MOVE.l d_bigpc,bigpc
00022DCE <AmiBlitz3.ab3@4489>           MOVE.l d_pc,destpointer
00022DD8 <AmiBlitz3.ab3@4490>           MOVE.l cont_pc2,cont_pc
00022DDC <AmiBlitz3.ab3@4496> BRA.w JL_0_612C
00022DE0 <AmiBlitz3.ab3@4499>   BCLR #$F,D0
00022DE2 <AmiBlitz3.ab3@4500>   MOVE.w D0,D1
00022DE6 <AmiBlitz3.ab3@4501>   ANDI.w #$7F00,D1
00022DEA <AmiBlitz3.ab3@4502>   BNE.w JL_0_4856
00022DEE <AmiBlitz3.ab3@4503>     CMP.w #$B3,D0                                          ;intern Instructions
00022DF2 <AmiBlitz3.ab3@4504>     BCS.w JL_0_47F2
00022DF6 <AmiBlitz3.ab3@4505>       SUBI.w #$77,D0
00022DFA <AmiBlitz3.ab3@4506>       CMP.w #$4B,D0
00022DFE <AmiBlitz3.ab3@4507>       BEQ.w JL_0_4830
00022E02 <AmiBlitz3.ab3@4508>         CMP.w #$46,D0
00022E06 <AmiBlitz3.ab3@4509>         BEQ.w JL_0_4830
00022E0A <AmiBlitz3.ab3@4510> BRA.w JL_0_4834                                            ; change tokennum
00022E0E <AmiBlitz3.ab3@4513>     CMP.w #$38,D0
00022E12 <AmiBlitz3.ab3@4514>      BEQ.w JL_0_4830
00022E16 <AmiBlitz3.ab3@4515>     CMP.w #$39,D0
00022E1A <AmiBlitz3.ab3@4516>      BEQ.w JL_0_4830
00022E1E <AmiBlitz3.ab3@4517>     CMP.w #$D,D0
00022E22 <AmiBlitz3.ab3@4518>      BEQ.w JL_0_4830
00022E26 <AmiBlitz3.ab3@4519>     CMP.w #$12,D0
00022E2A <AmiBlitz3.ab3@4520>      BEQ.w JL_0_4830
00022E2E <AmiBlitz3.ab3@4521>     CMP.w #$13,D0
00022E32 <AmiBlitz3.ab3@4522>      BEQ.w JL_0_4830
00022E36 <AmiBlitz3.ab3@4523>     CMP.w #$1A,D0
00022E3A <AmiBlitz3.ab3@4524>      BEQ.w JL_0_4830
00022E3E <AmiBlitz3.ab3@4525>     CMP.w #$2A,D0
00022E42 <AmiBlitz3.ab3@4526>      BHI.w JL_0_4834
00022E46 <AmiBlitz3.ab3@4527>     CMP.w #$23,D0
00022E4A <AmiBlitz3.ab3@4528>      BCS.b JL_0_4834
00022E4E <AmiBlitz3.ab3@4531>   BSR.w undodebug
00022E50 <AmiBlitz3.ab3@4534>   SUBQ.w #1,D0
00022E52 <AmiBlitz3.ab3@4535>   LSL.w #2,D0
00022E58 <AmiBlitz3.ab3@4542>   LEA instructionbase,A0
00022E5C <AmiBlitz3.ab3@4543>   MOVEA.l $0(A0,D0.W),A0
00022E5E <AmiBlitz3.ab3@4544>   MOVE.l A0,-(A7)
00022E62 <AmiBlitz3.ab3@4545> BRA.w get1bytemain
00022E64 <AmiBlitz3.ab3@4551>   MOVE.w D0,D1
00022E68 <AmiBlitz3.ab3@4552>    BSR.w searchinstr
00022E6E <AmiBlitz3.ab3@4553>    TST.b newmode
00022E72 <AmiBlitz3.ab3@4554>    BNE compile_term
00022E78 <AmiBlitz3.ab3@4555>   BTST #$2,$1(A3)                                          ;a3 = pointer to instr ;toke stuff in a3
00022E7C <AmiBlitz3.ab3@4556>    BNE.w stamigalib
00022E82 <AmiBlitz3.ab3@4557>   BTST #$0,$1(A3)
00022E86 <AmiBlitz3.ab3@4558>    BEQ.w needreturn_                                       ;syntax err need return   ;check it's a statement
00022E8A <AmiBlitz3.ab3@4559>    BSR.w JL_0_49EA                                         ;does it need a size specifier?
00022E8E <AmiBlitz3.ab3@4560>    BSR.w JL_0_66F6
00022E94 <AmiBlitz3.ab3@4566>   MOVE.w numreps,-(A7)
00022E9A <AmiBlitz3.ab3@4567>   MOVE.w userp,-(A7)
00022EA0 <AmiBlitz3.ab3@4568>   MOVE.w a2offset,-(A7)
00022EA2 <AmiBlitz3.ab3@4569>   MOVE.l A2,-(A7)                                          ;recurs.
00022EAC <AmiBlitz3.ab3@4570>   MOVE.w convsize,userp
00022EB0 <AmiBlitz3.ab3@4571>   LEA $6(A3),A1
00022EB2 <AmiBlitz3.ab3@4575>    MOVE.w (A1),D2
00022EB6 <AmiBlitz3.ab3@4576>    BMI.w SERR                                              ;statement syntax error
00022EBA <AmiBlitz3.ab3@4577>   ANDI.w #$FF,D2
00022EBC <AmiBlitz3.ab3@4578>   CMP.w D2,D1
00022EC0 <AmiBlitz3.ab3@4579>    BEQ.w JL_0_48E0
00022EC4 <AmiBlitz3.ab3@4580>    BCS.w JL_0_48CC
00022EC6 <AmiBlitz3.ab3@4581>   MOVE.b (A1),D3
00022ECA <AmiBlitz3.ab3@4582>   ANDI.w #$7,D3
00022ECE <AmiBlitz3.ab3@4583>    BEQ.w JL_0_48CC
00022ED0 <AmiBlitz3.ab3@4584>   MOVE.w D2,D4
00022ED2 <AmiBlitz3.ab3@4585>   SUB.w D3,D4
00022ED4 <AmiBlitz3.ab3@4586>   MOVEQ.l #$00,D5
00022ED6 <AmiBlitz3.ab3@4587>   MOVE.w D1,D5
00022ED8 <AmiBlitz3.ab3@4588>   SUB.w D4,D5
00022EDA <AmiBlitz3.ab3@4589>   DIVU D3,D5
00022EDC <AmiBlitz3.ab3@4590>   SWAP D5
00022EDE <AmiBlitz3.ab3@4591>   TST.w D5
00022EE2 <AmiBlitz3.ab3@4592>    BEQ.w JL_0_48E0
00022EE4 <AmiBlitz3.ab3@4595>   ADDQ.w #2,A1
00022EE6 <AmiBlitz3.ab3@4596>   ADDA.w D2,A1
00022EEA <AmiBlitz3.ab3@4597>    BSR.w aligna1
00022EEE <AmiBlitz3.ab3@4598>    BSR.w skiplibreg
00022EF2 <AmiBlitz3.ab3@4599>   LEA $C(A1),A1
00022EF6 <AmiBlitz3.ab3@4600> BRA.w JL_0_489A
00022EF8 <AmiBlitz3.ab3@4603>   MOVE.w (a3),d2
00022EFC <AmiBlitz3.ab3@4604>   BTST #1,d2
00022F00 <AmiBlitz3.ab3@4605>   BEQ statement_
00022F04 <AmiBlitz3.ab3@4606>   CMP.w #1,d1
00022F08 <AmiBlitz3.ab3@4607>   BEQ statement_
00022F0C <AmiBlitz3.ab3@4610>   CMP.b #$20,(a5)+
00022F10 <AmiBlitz3.ab3@4611>   BEQ 'l2
00022F16 <AmiBlitz3.ab3@4612>   CMP.b #"(",-2(a5)
00022F1A <AmiBlitz3.ab3@4613>   BNE 'l1
00022F1E <AmiBlitz3.ab3@4614> BRA parameter_
00022F22 <AmiBlitz3.ab3@4617> BRA inbrackets_
00022F24 <AmiBlitz3.ab3@4620>   MOVE.b (A1),D2
00022F26 <AmiBlitz3.ab3@4621>   LSL.w #8,D2
00022F28 <AmiBlitz3.ab3@4622>   OR.w D2,D1
00022F2A <AmiBlitz3.ab3@4623>   MOVE.l A1,-(A7)
00022F30 <AmiBlitz3.ab3@4624>   CLR.w a2offset
00022F32 <AmiBlitz3.ab3@4625>   TST.w D1
00022F36 <AmiBlitz3.ab3@4626>    BEQ.w JL_0_4900
00022F3A <AmiBlitz3.ab3@4627>   LEA $2(A1),A2
00022F40 <AmiBlitz3.ab3@4629>   MOVE.l lasttoken,-(a7)
00022F46 <AmiBlitz3.ab3@4630>   CLR.l lasttoken
00022F4A <AmiBlitz3.ab3@4631>   BSR.w fetchlibps
00022F50 <AmiBlitz3.ab3@4632>   MOVE.l (a7)+,lasttoken
00022F54 <AmiBlitz3.ab3@4633> BRA.w JL_0_4904
00022F58 <AmiBlitz3.ab3@4636>   BSR.w get1bytemain
00022F5A <AmiBlitz3.ab3@4639>   MOVEA.l (A7)+,A1
00022F5C <AmiBlitz3.ab3@4640>   MOVEA.l (A7)+,A2
00022F62 <AmiBlitz3.ab3@4641>   MOVE.w a2offset,D1
00022F66 <AmiBlitz3.ab3@4642>    BEQ.w JL_0_493A
00022F6C <AmiBlitz3.ab3@4643>   MOVE.w D1,preplibst+2
00022F72 <AmiBlitz3.ab3@4644>   MOVE.l preplibst,D1
00022F78 <AmiBlitz3.ab3@4645>    JSR writelong                                           ;write array offset stack correct
00022F82 <AmiBlitz3.ab3@4646>   MOVE.w numreps,movenumrep+2
00022F86 <AmiBlitz3.ab3@4647>    BEQ.w JL_0_493A
00022F8C <AmiBlitz3.ab3@4648>   MOVE.l movenumrep,D1
00022F92 <AmiBlitz3.ab3@4649>    JSR writelong
00022F98 <AmiBlitz3.ab3@4653>   JSR userjsr
00022F9E <AmiBlitz3.ab3@4656>   MOVE.w a2offset,D1
00022FA2 <AmiBlitz3.ab3@4657>    BEQ.w JL_0_4974
00022FA6 <AmiBlitz3.ab3@4658>   CMP.w #$8,D1
00022FAA <AmiBlitz3.ab3@4659>    BHI.w JL_0_4964
00022FAE <AmiBlitz3.ab3@4660>   ANDI.w #$7,D1
00022FB0 <AmiBlitz3.ab3@4661>   LSL.w #8,D1
00022FB2 <AmiBlitz3.ab3@4662>   LSL.w #1,D1
00022FB6 <AmiBlitz3.ab3@4663>   ORI.w #$504F,D1
00022FBC <AmiBlitz3.ab3@4665>   JSR writeword
00022FC0 <AmiBlitz3.ab3@4666> BRA.w JL_0_4974
00022FC6 <AmiBlitz3.ab3@4669>   MOVE.w D1,fixlibst+2
00022FCC <AmiBlitz3.ab3@4670>   MOVE.l fixlibst,D1
00022FD2 <AmiBlitz3.ab3@4671>   JSR writelong
00022FD8 <AmiBlitz3.ab3@4674>   MOVE.w (A7)+,a2offset
00022FDE <AmiBlitz3.ab3@4675>   MOVE.w (A7)+,userp
00022FE4 <AmiBlitz3.ab3@4676>   MOVE.w (A7)+,numreps
00022FE8 <AmiBlitz3.ab3@4677> BRA.w reget
00022FEC <AmiBlitz3.ab3@4681>   MOVEM.l A2-A3,-(A7)
00022FF2 <AmiBlitz3.ab3@4682>   CLR.b doublepeek
00022FF8 <AmiBlitz3.ab3@4683>   MOVE.l A5,lastsourcepos
00022FFC <AmiBlitz3.ab3@4684>    BSR.w getchar
00023000 <AmiBlitz3.ab3@4685>   CMP.w #$2E,D0
00023004 <AmiBlitz3.ab3@4686>    BEQ.w JL_0_49B4
0002300A <AmiBlitz3.ab3@4687>   MOVEA.l defaulttype,A2
0002300E <AmiBlitz3.ab3@4688>   CMP.w #$24,D0
00023012 <AmiBlitz3.ab3@4689>    BNE.w JL_0_49CA
00023014 <AmiBlitz3.ab3@4690>   MOVEQ.l #$07,D1
00023018 <AmiBlitz3.ab3@4691> BRA.w JL_0_49DE
0002301C <AmiBlitz3.ab3@4694>   BSR.w getparameter2
00023020 <AmiBlitz3.ab3@4695>   BEQ.w syntaxerr
00023026 <AmiBlitz3.ab3@4696>   LEA newtypebase,A2
0002302A <AmiBlitz3.ab3@4697>   BSR.w findtype
0002302E <AmiBlitz3.ab3@4698>   BNE.w notypeerr
00023038 <AmiBlitz3.ab3@4702>   MOVE.w oldqflag,instringon
0002303E <AmiBlitz3.ab3@4703>   MOVEA.l lastsourcepos,A5
00023042 <AmiBlitz3.ab3@4708>   MOVE.w $6(A2),D1
00023048 <AmiBlitz3.ab3@4709>   CMP.w #8,8(a2)
0002304C <AmiBlitz3.ab3@4710>   BNE 'l1
00023054 <AmiBlitz3.ab3@4711>   MOVE.b #1,doublepeek
0002305A <AmiBlitz3.ab3@4715>   MOVE.w D1,convsize
0002305E <AmiBlitz3.ab3@4716>   MOVEM.l (A7)+,A2-A3
00023060 <AmiBlitz3.ab3@4717> RTS
00023066 <AmiBlitz3.ab3@4722>   BTST #$3,$1(A3)
0002306A <AmiBlitz3.ab3@4723>   BEQ.w JL_0_4A06
0002306E <AmiBlitz3.ab3@4724>   BSR.w AJL_0_498A                                         ;read peek/poke size
00023072 <AmiBlitz3.ab3@4726>   ORI.w #$7000,D1
00023078 <AmiBlitz3.ab3@4727>   JSR writeword
0002307E <AmiBlitz3.ab3@4728>   ADDQ.w #1,regnum
00023080 <AmiBlitz3.ab3@4731> RTS
00023082 <AmiBlitz3.ab3@4737>             Dc.b $10,$12                                   ;MOVE.B  (A2),D0
00023084 <AmiBlitz3.ab3@4738>             Dc.b $14,$91                                   ;MOVE.B  (A1),(A2)
00023086 <AmiBlitz3.ab3@4739>             Dc.b $12,$80                                   ;MOVE.B  D0,(A1)
00023088 <AmiBlitz3.ab3@4743> swapw:      Dc.b $30,$12                                   ;MOVE.W  (A2),D0
0002308A <AmiBlitz3.ab3@4744>             Dc.b $34,$91                                   ;MOVE.W  (A1),(A2)
0002308C <AmiBlitz3.ab3@4745>             Dc.b $32,$80                                   ;MOVE.W  D0,(A1)
0002308E <AmiBlitz3.ab3@4749> swapl:      Dc.b $20,$12                                   ;MOVE.L  (A2),D0
00023090 <AmiBlitz3.ab3@4750>             Dc.b $24,$91                                   ;MOVE.L  (A1),(A2)
00023092 <AmiBlitz3.ab3@4751>             Dc.b $22,$80                                   ;MOVE.L  D0,(A1)
00023094 <AmiBlitz3.ab3@4755> pulla1:     Dc.b $22,$5F                                   ;MOVEA.L (A7)+,A1
00023096 <AmiBlitz3.ab3@4758> srctype:    Ds.w 1
0002309A <AmiBlitz3.ab3@4763>   BSR.w excget
0002309E <AmiBlitz3.ab3@4764>   CMP.w #$2C,D0
000230A2 <AmiBlitz3.ab3@4765>    BNE.w syntaxerr
000230A8 <AmiBlitz3.ab3@4766>   MOVE.b D2,srctype
000230AE <AmiBlitz3.ab3@4767>   MOVE.w pusha2,D1
000230B4 <AmiBlitz3.ab3@4768>   JSR writeword
000230B8 <AmiBlitz3.ab3@4769>   BSR.w get1bytemain
000230BC <AmiBlitz3.ab3@4770>   BSR.w excget
000230C2 <AmiBlitz3.ab3@4771>   CMP.b srctype,D2
000230C6 <AmiBlitz3.ab3@4772>    BNE.w excerr2
000230CC <AmiBlitz3.ab3@4773>   MOVE.w pulla1,D1
000230D2 <AmiBlitz3.ab3@4774>    JSR writeword
000230D6 <AmiBlitz3.ab3@4775>   CMP.b #$2,D2
000230DA <AmiBlitz3.ab3@4776>    BCS.w JL_0_4B2A
000230DE <AmiBlitz3.ab3@4777>    BEQ.w JL_0_4B1E
000230E2 <AmiBlitz3.ab3@4778>   LEA swapl(PC),A0
000230E6 <AmiBlitz3.ab3@4779>   LEA swaplf(PC),A1
000230EC <AmiBlitz3.ab3@4780> JMP pokecode
000230F0 <AmiBlitz3.ab3@4783>   LEA swapw(PC),A0
000230F4 <AmiBlitz3.ab3@4784>   LEA swapwf(PC),A1
000230FA <AmiBlitz3.ab3@4785> JMP pokecode
000230FE <AmiBlitz3.ab3@4788>   LEA swapb(PC),A0
00023102 <AmiBlitz3.ab3@4789>   LEA swapbf(PC),A1
00023108 <AmiBlitz3.ab3@4790> JMP pokecode
0002310E <AmiBlitz3.ab3@4794>   JSR getparameter
00023112 <AmiBlitz3.ab3@4795>   BSR.w JL_0_8E3C
00023116 <AmiBlitz3.ab3@4796>   BSR.w calcvar
0002311A <AmiBlitz3.ab3@4797>   BTST #$E,D2
0002311E <AmiBlitz3.ab3@4798>    BEQ.w JL_0_4B4E
00023122 <AmiBlitz3.ab3@4799>   MOVE.b #$4,D2
00023124 <AmiBlitz3.ab3@4802>   TST.b D2
00023128 <AmiBlitz3.ab3@4803>    BEQ.w excerr
0002312C <AmiBlitz3.ab3@4804>   BTST #$F,D2
00023130 <AmiBlitz3.ab3@4805>    BNE.w JL_0_4B6A
00023136 <AmiBlitz3.ab3@4806>   MOVE.w leaamp,D1
0002313C <AmiBlitz3.ab3@4807>    JSR pokewda5s
0002313E <AmiBlitz3.ab3@4808>   MOVE.w D3,D1
00023144 <AmiBlitz3.ab3@4809> JMP writeword
00023146 <AmiBlitz3.ab3@4812> RTS
0002314C <AmiBlitz3.ab3@4822>   MOVE.l mempool,a0
00023152 <AmiBlitz3.ab3@4823>   MOVEA.l _execbase,A6
00023156 <AmiBlitz3.ab3@4824> JMP _AllocPooled(a6)
0002315A <AmiBlitz3.ab3@4828>   MOVE.w #$BF00,D1
00023160 <AmiBlitz3.ab3@4829> JMP Atokejsr
00023164 <AmiBlitz3.ab3@4833>   CMP.w #-$7FFA,D0
00023168 <AmiBlitz3.ab3@4834>    BEQ.w popreturn
0002316C <AmiBlitz3.ab3@4835>   CMP.w #-$7FEA,D0
00023170 <AmiBlitz3.ab3@4836>    BEQ.w popnext2
00023174 <AmiBlitz3.ab3@4837>   CMP.w #-$7FF2,D0
00023178 <AmiBlitz3.ab3@4838>    BEQ.w popselect2
0002317C <AmiBlitz3.ab3@4839>   CMP.w #-$7FF5,D0
00023180 <AmiBlitz3.ab3@4840>    BEQ.w get1bytemain
00023184 <AmiBlitz3.ab3@4841>   CMP.w #-$7FF4,D0
00023188 <AmiBlitz3.ab3@4842>    BEQ.w get1bytemain
0002318C <AmiBlitz3.ab3@4843>   CMP.w #-$7FEC,D0
00023190 <AmiBlitz3.ab3@4844>    BEQ.w get1bytemain
00023194 <AmiBlitz3.ab3@4845>   CMP.w #-$7F45,D0
00023198 <AmiBlitz3.ab3@4846>    BEQ.w get1bytemain
0002319C <AmiBlitz3.ab3@4847> BRA.w syntaxerr
000231A2 <AmiBlitz3.ab3@4850>   TST.b debugmode
000231A6 <AmiBlitz3.ab3@4851>    BEQ.w popreturn__norerr
000231AA <AmiBlitz3.ab3@4852>   LEA popreturn__rfix(PC),A0
000231AE <AmiBlitz3.ab3@4853>   LEA popreturn__rfixf(PC),A1
000231B4 <AmiBlitz3.ab3@4854>    JSR pokecode
000231B8 <AmiBlitz3.ab3@4855>   MOVE.w #$C305,D1
000231BE <AmiBlitz3.ab3@4856>    JSR Atokejsr
000231C2 <AmiBlitz3.ab3@4857>   MOVE.w popreturn__rfix2(PC),D1
000231C8 <AmiBlitz3.ab3@4859>    JSR writeword
000231CC <AmiBlitz3.ab3@4860> BRA.w get1bytemain
000231D2 <AmiBlitz3.ab3@4864>   CMPI.w #$6753,$4(A7)                                     ;#"gS",4(A7)
000231D6 <AmiBlitz3.ab3@4865>   BEQ.w popreturn__rfix2
000231DC <AmiBlitz3.ab3@4868>   JSR $20000                                               ;reass
000231DE <AmiBlitz3.ab3@4871>   ADDQ.w #6,A7
000231E2 <AmiBlitz3.ab3@4875>   MOVE.w popreturn__sfix(PC),D1
000231E8 <AmiBlitz3.ab3@4876>   JSR writeword
000231EC <AmiBlitz3.ab3@4877> BRA.w get1bytemain
000231EE <AmiBlitz3.ab3@4882>   Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
000231F4 <AmiBlitz3.ab3@4887>   MOVE.l firstfor,D0
000231F8 <AmiBlitz3.ab3@4888>    BEQ.w noforerr
000231FA <AmiBlitz3.ab3@4889>   MOVEA.l D0,A2
000231FE <AmiBlitz3.ab3@4890>    BSR.w get1bytemain
00023202 <AmiBlitz3.ab3@4891>   BSR.w popnext
00023208 <AmiBlitz3.ab3@4894>   TST.b debugmode
0002320C <AmiBlitz3.ab3@4895>    BEQ.w popnext3__ner
00023212 <AmiBlitz3.ab3@4896>   MOVE.l nextfixw2,D1
00023218 <AmiBlitz3.ab3@4897>   CMPI.w #$3,$C(A2)
0002321C <AmiBlitz3.ab3@4898>    BCS.w writelong2
00023222 <AmiBlitz3.ab3@4899>   MOVE.l nextfixl2,D1
00023228 <AmiBlitz3.ab3@4900> writelong2 JMP  writelong
0002322E <AmiBlitz3.ab3@4903>   CMPI.w #$3,$C(A2)
00023232 <AmiBlitz3.ab3@4904>    BCS.w popnext3__skip2
00023238 <AmiBlitz3.ab3@4905>   MOVE.l nextfixl,D1
0002323E <AmiBlitz3.ab3@4906>   JMP writelong
00023244 <AmiBlitz3.ab3@4909>   MOVE.w nextfixw,D1
0002324A <AmiBlitz3.ab3@4910> JMP writeword
0002324E <AmiBlitz3.ab3@4914>   MOVE.w $C(A2),D0
00023254 <AmiBlitz3.ab3@4915>   TST.b debugmode
00023258 <AmiBlitz3.ab3@4916>    BEQ.w popnext__norunerr
0002325C <AmiBlitz3.ab3@4917>   MOVE.w #$C306,D1
00023260 <AmiBlitz3.ab3@4918>   CMP.w #$3,D0
00023264 <AmiBlitz3.ab3@4919>    BCS.w popnext__oktc
00023266 <AmiBlitz3.ab3@4920>   ADDQ.w #1,D1
00023268 <AmiBlitz3.ab3@4923>   MOVE.l A2,-(A7)
0002326E <AmiBlitz3.ab3@4924>   JSR Atokejsr
00023270 <AmiBlitz3.ab3@4925>   MOVEA.l (A7)+,A2
00023272 <AmiBlitz3.ab3@4928> RTS
00023278 <AmiBlitz3.ab3@4932>   MOVE.l firstsel,D0
0002327C <AmiBlitz3.ab3@4933>    BEQ.w eselerr
0002327E <AmiBlitz3.ab3@4934>   MOVEA.l D0,A2
00023282 <AmiBlitz3.ab3@4935>    BSR.w get1bytemain
00023286 <AmiBlitz3.ab3@4938>   MOVE.w $C(A2),D2
0002328C <AmiBlitz3.ab3@4939>   TST.b debugmode
00023290 <AmiBlitz3.ab3@4940>    BEQ.w popselect__norerr
00023294 <AmiBlitz3.ab3@4941>   MOVE.w #$C313,D1
00023298 <AmiBlitz3.ab3@4942>   CMP.w #$3,D2
0002329C <AmiBlitz3.ab3@4943>    BCS.w popselect__chkit
0002329E <AmiBlitz3.ab3@4944>   ADDQ.w #1,D1
000232A4 <AmiBlitz3.ab3@4947>   JSR Atokejsr                                             ;make sure next thing on stack
000232A6 <AmiBlitz3.ab3@4951>   MOVEQ.l #$02,D1
000232AA <AmiBlitz3.ab3@4952>   CMP.w #$3,D2
000232AE <AmiBlitz3.ab3@4953>    BCS.w popselect__doit
000232B0 <AmiBlitz3.ab3@4954>   MOVEQ.l #$04,D1
000232B4 <AmiBlitz3.ab3@4955>   CMP.w #$7,D2
000232B8 <AmiBlitz3.ab3@4956>    BCS.w popselect__doit
000232BE <AmiBlitz3.ab3@4957>   LEA endselstr,A0
000232C4 <AmiBlitz3.ab3@4958>   LEA endselstrf,A1
000232CA <AmiBlitz3.ab3@4959>   TST.b debugmode
000232CE <AmiBlitz3.ab3@4960>    BEQ.w popselect__norerr3
000232D4 <AmiBlitz3.ab3@4961>   LEA endselstrf2,A1
000232DA <AmiBlitz3.ab3@4964>   JSR pokecode
000232DE <AmiBlitz3.ab3@4965>   MOVE.w #$C003,D1                                         ;global freemem
000232E4 <AmiBlitz3.ab3@4966> JMP Atokejsr
000232EA <AmiBlitz3.ab3@4969>   TST.b debugmode
000232EE <AmiBlitz3.ab3@4970>    BEQ.w popselect__norerr2
000232F0 <AmiBlitz3.ab3@4971>   ADDQ.w #2,D1                                             ;for the "sE"
000232F2 <AmiBlitz3.ab3@4974>   LSL.w #8,D1
000232F4 <AmiBlitz3.ab3@4975>   LSL.w #1,D1
000232FA <AmiBlitz3.ab3@4976>   OR.w endsel,D1
00023300 <AmiBlitz3.ab3@4977> JMP writeword
00023304 <AmiBlitz3.ab3@4980> firstrep:    Ds.l 1
00023308 <AmiBlitz3.ab3@4981> replineat:   Ds.l 1
0002330E <AmiBlitz3.ab3@4990>   CLR.l fp0addr
00023318 <AmiBlitz3.ab3@4991>   MOVE.l linenumat,replineat
0002331A <AmiBlitz3.ab3@4992>   MOVEQ.l #$08,D0
00023320 <AmiBlitz3.ab3@4993>   MOVEA.l _execbase,A6
00023326 <AmiBlitz3.ab3@4994>   MOVE.l mempool,a0
0002332A <AmiBlitz3.ab3@4995>   JSR _AllocPooled(a6)
0002332C <AmiBlitz3.ab3@4997>   MOVEA.l D0,A0
00023330 <AmiBlitz3.ab3@4998>   MOVE.l firstrep(PC),(A0)
00023336 <AmiBlitz3.ab3@4999>   MOVE.l A0,firstrep
0002333E <AmiBlitz3.ab3@5000>   MOVE.l destpointer,$4(A0)
00023340 <AmiBlitz3.ab3@5001> RTS
00023346 <AmiBlitz3.ab3@5004> str_temp:  Ds.w 3                                            ;infochk  ds.b 6 org source
0002334A <AmiBlitz3.ab3@5007>   LEA str_temp(PC),A1
0002334C <AmiBlitz3.ab3@5008>   CLR.w (A1)
00023350 <AmiBlitz3.ab3@5009>   CLR.l $2(A1)
00023352 <AmiBlitz3.ab3@5012>   MOVEQ.l #$04,D0
00023356 <AmiBlitz3.ab3@5015>     MOVE.b $1(A1),(A1)+
0002335A <AmiBlitz3.ab3@5016>   DBF D0,check_for_infoextention__loop
0002335E <AmiBlitz3.ab3@5021>   LEA str_temp(PC),A1
00023360 <AmiBlitz3.ab3@5022>   MOVE.b (A0),D0
00023364 <AmiBlitz3.ab3@5023>   ORI.b #$20,D0
00023368 <AmiBlitz3.ab3@5024>   MOVE.b D0,$5(A1)
0002336A <AmiBlitz3.ab3@5025>   TST.b (A0)+
0002336E <AmiBlitz3.ab3@5026>    BNE.w check_for_infoextention__loop2
00023372 <AmiBlitz3.ab3@5027>   CMPI.w #$2E69,(A1)+                                      ;".i"
00023376 <AmiBlitz3.ab3@5028>    BNE.w check_for_infoextention__no
0002337C <AmiBlitz3.ab3@5029>   CMPI.l #$6E666F20,(A1)                                   ;"nfo "
0002337E <AmiBlitz3.ab3@5032> RTS
00023382 <AmiBlitz3.ab3@5036>   BPL.w gettokeps__evaltoke
00023384 <AmiBlitz3.ab3@5037>   MOVE.w D0,D1
00023388 <AmiBlitz3.ab3@5038>   ANDI.w #$7F80,D1
0002338C <AmiBlitz3.ab3@5039>    BEQ.w tokeerr
00023390 <AmiBlitz3.ab3@5040>   BCLR #$F,D0
00023392 <AmiBlitz3.ab3@5041>   MOVE.w D0,D4                                             ;got toke number
00023396 <AmiBlitz3.ab3@5042>   BSR.w get1bytemain
0002339A <AmiBlitz3.ab3@5043> BRA.w gettokeps__gotnum
000233A0 <AmiBlitz3.ab3@5046>   JSR JL_0_BF6A
000233A6 <AmiBlitz3.ab3@5047>   CMP.l #MaxWord,D3
000233AA <AmiBlitz3.ab3@5048>    BHI.w tokeerr
000233AC <AmiBlitz3.ab3@5049>   TST.w D6
000233B0 <AmiBlitz3.ab3@5050>    BNE.w tokeerr
000233B2 <AmiBlitz3.ab3@5051>   MOVE.w D3,D4
000233B4 <AmiBlitz3.ab3@5054>   MOVEQ.l #$00,D5
000233B8 <AmiBlitz3.ab3@5055>   CMP.w #$2C,D0
000233BC <AmiBlitz3.ab3@5056>    BNE.w gettokeps__gotfrom
000233BE <AmiBlitz3.ab3@5057>   MOVE.w D4,-(A7)
000233C4 <AmiBlitz3.ab3@5058>    JSR AJL_0_BF6E
000233CA <AmiBlitz3.ab3@5059>   CMP.l #MaxWord,D3
000233CE <AmiBlitz3.ab3@5060>    BHI.w tokeerr
000233D0 <AmiBlitz3.ab3@5061>   TST.w D6
000233D4 <AmiBlitz3.ab3@5062>    BNE.w tokeerr
000233D6 <AmiBlitz3.ab3@5063>   MOVE.w D3,D5
000233D8 <AmiBlitz3.ab3@5064>   MOVE.w (A7)+,D4
000233DA <AmiBlitz3.ab3@5067> RTS                                                        ;d4=toke, d5=form
000233DC <AmiBlitz3.ab3@5071>   TST.w D0
000233E0 <AmiBlitz3.ab3@5072>    BSR.w gettokeps
000233E4 <AmiBlitz3.ab3@5073>   MOVE.w #$4EB9,D1
000233EA <AmiBlitz3.ab3@5074>   JSR writeword
000233EE <AmiBlitz3.ab3@5075>   BSR.w addoff
000233F0 <AmiBlitz3.ab3@5076>   MOVE.w D5,D1
000233F4 <AmiBlitz3.ab3@5077>   ORI.w #$8000,D1                                          ;Toke of Amiga type.
000233F6 <AmiBlitz3.ab3@5078>   SWAP D1
000233F8 <AmiBlitz3.ab3@5079>   MOVE.w D4,D1
000233FE <AmiBlitz3.ab3@5080> JMP writelong
00023400 <AmiBlitz3.ab3@5084>   TST.w D0
00023404 <AmiBlitz3.ab3@5085>    BSR.w gettokeps
00023408 <AmiBlitz3.ab3@5086>   MOVE.w #$4EB9,D1
0002340E <AmiBlitz3.ab3@5087>   JSR writeword
00023412 <AmiBlitz3.ab3@5088>   BSR.w addoff
00023414 <AmiBlitz3.ab3@5089>   MOVE.w D5,D1
00023418 <AmiBlitz3.ab3@5090>   ORI.w #$C000,D1                                          ;Toke of Blitz type.
0002341A <AmiBlitz3.ab3@5091>   SWAP D1
0002341C <AmiBlitz3.ab3@5092>   MOVE.w D4,D1
00023422 <AmiBlitz3.ab3@5093>   JMP writelong
00023428 <AmiBlitz3.ab3@5097>   JSR JL_0_BF6A
0002342E <AmiBlitz3.ab3@5098>   CMP.l #$10000,D3
00023432 <AmiBlitz3.ab3@5099>    BCC.w tokeerr
00023434 <AmiBlitz3.ab3@5100>   MOVE.w D3,D1
0002343A <AmiBlitz3.ab3@5101> JMP Atokejsr
0002343E <AmiBlitz3.ab3@5105>   BSR.w gettokeps
00023442 <AmiBlitz3.ab3@5106>   MOVE.w #$4EB9,D1
00023448 <AmiBlitz3.ab3@5107>   JSR writeword
0002344E <AmiBlitz3.ab3@5108>   MOVE.l destpointer,D3
00023456 <AmiBlitz3.ab3@5109>   BTST #$7,blitzmode
0002345A <AmiBlitz3.ab3@5110>    BEQ.w do_TokeJsr__inamiga
0002345E <AmiBlitz3.ab3@5111>   BSET #$E,D5
00023462 <AmiBlitz3.ab3@5114>   BSR.w JL_0_6E86
00023466 <AmiBlitz3.ab3@5115>   BSR.w addoff
0002346C <AmiBlitz3.ab3@5116>   JMP writelong
00023470 <AmiBlitz3.ab3@5120>   BEQ.w do_VWait__zero
00023472 <AmiBlitz3.ab3@5121>   MOVEQ.l #$02,D2                                          ;get a word
00023478 <AmiBlitz3.ab3@5123>   JSR bakeval
0002347C <AmiBlitz3.ab3@5124>   MOVE.w fvwait(PC),D1
00023480 <AmiBlitz3.ab3@5125> BRA.w do_VWait__vcont
00023484 <AmiBlitz3.ab3@5128>   MOVE.w #$7000,D1                                         ;moveq #0,d0
0002348A <AmiBlitz3.ab3@5131>   JSR writeword
0002348E <AmiBlitz3.ab3@5132>   MOVE.w #$C104,D1
00023494 <AmiBlitz3.ab3@5133> JMP Atokejsr
00023496 <AmiBlitz3.ab3@5137>   SUBQ.w #1,D0
0002349C <AmiBlitz3.ab3@5140>   Dc.w $3b7c,$ffff,0                                       ;move.w #$FFFF,$0(A5) ;noopt
000234A0 <AmiBlitz3.ab3@5143>   Dc.l $426d0001                                           ;clr.w $0(A5)
000234A4 <AmiBlitz3.ab3@5147>   MOVE.b debugmode(PC),D1
000234A8 <AmiBlitz3.ab3@5148>   BEQ.b debugmode_codelabel__skip
000234AC <AmiBlitz3.ab3@5149>   MOVE.w #$D500,D1
000234B2 <AmiBlitz3.ab3@5150> JMP Atokejsr
000234B4 <AmiBlitz3.ab3@5153> RTS
000234BC <AmiBlitz3.ab3@5157>   BSET #$0,blitzmode
000234C4 <AmiBlitz3.ab3@5158>   BSET #$7,blitzmode
000234C8 <AmiBlitz3.ab3@5159>   MOVE.w #$C200,D1
000234CE <AmiBlitz3.ab3@5160>   JSR Atokejsr
000234D4 <AmiBlitz3.ab3@5161>   TST.b debugmode
000234D8 <AmiBlitz3.ab3@5162>    BEQ.w do_BLITZ__done
000234DC <AmiBlitz3.ab3@5163>   MOVE.w cgoblitz(PC),D1
000234E2 <AmiBlitz3.ab3@5164>   JSR writeword
000234E4 <AmiBlitz3.ab3@5165>   MOVEQ.l #-$01,D1
000234EA <AmiBlitz3.ab3@5166>   JSR writeword
000234F0 <AmiBlitz3.ab3@5167>   JSR getbbase
000234F6 <AmiBlitz3.ab3@5168>   JSR writeword
000234FA <AmiBlitz3.ab3@5171> BRA.w debugmode_codelabel
000234FE <AmiBlitz3.ab3@5175>   MOVE.w #$C201,D1
00023502 <AmiBlitz3.ab3@5176> BRA.w do_AMIGA__toamode
00023506 <AmiBlitz3.ab3@5180>   MOVE.W  #$C202,D1
0002350E <AmiBlitz3.ab3@5183>   BSET #$0,blitzmode
00023516 <AmiBlitz3.ab3@5184>   BCLR #$7,blitzmode
0002351C <AmiBlitz3.ab3@5185>   JSR Atokejsr
00023522 <AmiBlitz3.ab3@5186>   TST.b debugmode
00023526 <AmiBlitz3.ab3@5187>    BEQ.w do_AMIGA__done
0002352A <AmiBlitz3.ab3@5188>   MOVE.w cgoamiga(PC),D1
00023530 <AmiBlitz3.ab3@5189>   JSR writeword
00023536 <AmiBlitz3.ab3@5190>   JSR getbbase
0002353C <AmiBlitz3.ab3@5191>   JSR writeword
00023540 <AmiBlitz3.ab3@5194> BRA.w debugmode_codelabel
00023544 <AmiBlitz3.ab3@5198>   MOVEM.l D2-D7/A2-A4,-(A7)
00023548 <AmiBlitz3.ab3@5201>   MOVEM.l (A7)+,D2-D7/A2-A4
0002354E <AmiBlitz3.ab3@5205>   JSR JL_0_BF6A
00023554 <AmiBlitz3.ab3@5206>   CMP.l #$E,D3
00023558 <AmiBlitz3.ab3@5207>    BCC.w interr4
0002355C <AmiBlitz3.ab3@5208>   MOVE.w #$7000,D1
0002355E <AmiBlitz3.ab3@5209>   OR.w D3,D1
00023564 <AmiBlitz3.ab3@5210>   JSR writeword
00023568 <AmiBlitz3.ab3@5211>   MOVE.w #$C101,D1
0002356E <AmiBlitz3.ab3@5212> JMP Atokejsr                                               ;clear the interupt
00023570 <AmiBlitz3.ab3@5215> inerr:       Ds.w 1                                        ;flag - in error trap mode
00023574 <AmiBlitz3.ab3@5216> errjmp:      Ds.l 1                                        ;where err jump is
00023578 <AmiBlitz3.ab3@5217> errcode:     Ds.l 1
0002357C <AmiBlitz3.ab3@5221>   MOVE.W  #$D202,D1
00023582 <AmiBlitz3.ab3@5222> JMP Atokejsr                                               ;BRA.W Atokejsr
00023586 <AmiBlitz3.ab3@5226>   MOVE.w inerr(PC),D1
0002358A <AmiBlitz3.ab3@5227>    BEQ.w errerr3
00023590 <AmiBlitz3.ab3@5228>   CLR.w inerr
00023596 <AmiBlitz3.ab3@5229>   MOVE.w dontwrite,D1
0002359A <AmiBlitz3.ab3@5230>    BNE.w doendseterr__skip
0002359E <AmiBlitz3.ab3@5231>   MOVEA.l errjmp(PC),A0
000235A4 <AmiBlitz3.ab3@5232>   MOVE.l destpointer,(A0)
000235A8 <AmiBlitz3.ab3@5235> BRA.w get1bytemain
000235AC <AmiBlitz3.ab3@5239>   MOVE.w #$D205,D1
000235B2 <AmiBlitz3.ab3@5240> JMP Atokejsr
000235B8 <AmiBlitz3.ab3@5244>   MOVE.w proceduremode,D1
000235BC <AmiBlitz3.ab3@5245>    BNE.w errerr1
000235C0 <AmiBlitz3.ab3@5246>   MOVE.w inerr(PC),D1
000235C4 <AmiBlitz3.ab3@5247>    BNE.w errerr2
000235CA <AmiBlitz3.ab3@5248>   LEA inerr,a0
000235CC <AmiBlitz3.ab3@5249>   NOT.w (a0)                                               ;reass
000235D0 <AmiBlitz3.ab3@5250>   MOVE.w #$203C,D1                                         ;move.l #x,d0
000235D6 <AmiBlitz3.ab3@5251>   JSR writeword
000235E0 <AmiBlitz3.ab3@5252>   MOVE.l destpointer,errcode
000235E4 <AmiBlitz3.ab3@5253>   BSR.w addoff
000235E8 <AmiBlitz3.ab3@5254>   BSR.w writelong
000235EC <AmiBlitz3.ab3@5255>   MOVE.w #$D201,D1
000235F2 <AmiBlitz3.ab3@5256>   JSR Atokejsr
000235F6 <AmiBlitz3.ab3@5257>   MOVE.w #$4EF9,D1                                         ;JMP
000235FA <AmiBlitz3.ab3@5258>   BSR.w writeword
00023604 <AmiBlitz3.ab3@5259>   MOVE.l destpointer,errjmp
00023608 <AmiBlitz3.ab3@5260>   BSR.w addoff
0002360C <AmiBlitz3.ab3@5261>   BSR.w writelong
00023612 <AmiBlitz3.ab3@5262>   MOVE.w dontwrite,D1
00023616 <AmiBlitz3.ab3@5263>    BNE.w do_SetErr__skip
0002361A <AmiBlitz3.ab3@5264>   MOVEA.l errcode(PC),A0
00023620 <AmiBlitz3.ab3@5265>   MOVE.l destpointer,(A0)
00023622 <AmiBlitz3.ab3@5268> RTS
00023626 <AmiBlitz3.ab3@5271> intlineat:  Ds.l 1
00023628 <AmiBlitz3.ab3@5275>   MOVEQ.l #-$01,D1                                        ;type - need new string space
0002362C <AmiBlitz3.ab3@5276>   BSR.w errchx
00023632 <AmiBlitz3.ab3@5277>   MOVE.w D1,intstring
0002363C <AmiBlitz3.ab3@5278>   MOVE.l linenumat,intlineat
00023642 <AmiBlitz3.ab3@5279>   JSR JL_0_BF6A                                           ;get constant - int level
00023648 <AmiBlitz3.ab3@5280>   CMP.l #$E,D3
0002364C <AmiBlitz3.ab3@5281>    BCC.w interr4
00023652 <AmiBlitz3.ab3@5282>   ST intsused
00023658 <AmiBlitz3.ab3@5283>   MOVE.w D3,intlevel
0002365C <AmiBlitz3.ab3@5284>   MOVE.w #$7000,D1
0002365E <AmiBlitz3.ab3@5285>   OR.w D3,D1                                              
00023662 <AmiBlitz3.ab3@5286>   BSR.w writeword                                         ;moveq #x,d0
00023666 <AmiBlitz3.ab3@5287>   MOVE.w #$223C,D1                                        ;move.l #x,d1
0002366A <AmiBlitz3.ab3@5288>   BSR.w writeword
0002366E <AmiBlitz3.ab3@5289>   BSR.w addoff
00023674 <AmiBlitz3.ab3@5290>   MOVE.l destpointer,-(A7)
00023678 <AmiBlitz3.ab3@5291>   BSR.w writelong
0002367C <AmiBlitz3.ab3@5292>   MOVE.w #$C100,D1
00023682 <AmiBlitz3.ab3@5293>   JSR Atokejsr
00023686 <AmiBlitz3.ab3@5294>   MOVE.w #$4EF9,D1                                        ;jmp
0002368A <AmiBlitz3.ab3@5295>   BSR.w writeword
0002368E <AmiBlitz3.ab3@5296>   BSR.w addoff
00023698 <AmiBlitz3.ab3@5297>   MOVE.l destpointer,intjmpat
0002369C <AmiBlitz3.ab3@5298>   BSR.w writelong
0002369E <AmiBlitz3.ab3@5299>   MOVEA.l (A7)+,A0
000236A4 <AmiBlitz3.ab3@5300>   MOVE.w dontwrite,D1
000236A8 <AmiBlitz3.ab3@5301>   BNE.w do_SetInt__dontpoke
000236AE <AmiBlitz3.ab3@5302>   MOVE.l destpointer,(A0)
000236B2 <AmiBlitz3.ab3@5305>   MOVE.l intstart0(PC),D1
000236B6 <AmiBlitz3.ab3@5306>   BSR.w writelong
000236BC <AmiBlitz3.ab3@5307>   TST.b debugmode
000236C0 <AmiBlitz3.ab3@5308>    BEQ.w do_SetInt__norerr
000236C2 <AmiBlitz3.ab3@5312>   MOVEQ.l #$02,D1
000236C6 <AmiBlitz3.ab3@5313>   BSR.w writetrap
000236CA <AmiBlitz3.ab3@5314>   BSR.w addoff
000236D4 <AmiBlitz3.ab3@5315>   MOVE.l destpointer,intcleanat
000236D8 <AmiBlitz3.ab3@5316>   BSR.w writelong
000236DE <AmiBlitz3.ab3@5317>   MOVE.w intlevel,D1
000236E2 <AmiBlitz3.ab3@5318>   BSR.w writeword
000236E6 <AmiBlitz3.ab3@5319>   MOVE.w #$C30B,D1                                         ;disable stack checks
000236EC <AmiBlitz3.ab3@5320>   JSR Atokejsr
000236F0 <AmiBlitz3.ab3@5323>   MOVE.w #$FED3,D1
000236F4 <AmiBlitz3.ab3@5324>   BSR.w uselib
000236F8 <AmiBlitz3.ab3@5325>   MOVE.w #$C102,D1
000236FE <AmiBlitz3.ab3@5326>   JSR Atokejsr
00023706 <AmiBlitz3.ab3@5327>   MOVE.w #-1,lasta6
00023710 <AmiBlitz3.ab3@5328>   MOVE.l linenumat,intline
00023712 <AmiBlitz3.ab3@5329> RTS
00023714 <AmiBlitz3.ab3@5333>             Ds.w 1                                         ;??looks like obsolved data??
00023718 <AmiBlitz3.ab3@5335> intdata1:   Ds.l 1                                         ;where in data1 a5 is being kept
0002371C <AmiBlitz3.ab3@5337> intjmpat:   Ds.l 1
00023720 <AmiBlitz3.ab3@5338> intline:    Ds.l 1
00023722 <AmiBlitz3.ab3@5339> intstring:  Ds.w 1                                         ;flag 0 = no setint
00023724 <AmiBlitz3.ab3@5342> intlevel:   Ds.w 1
00023728 <AmiBlitz3.ab3@5343> intcleanat: Ds.l 1
0002372C <AmiBlitz3.ab3@5344> ret15add:   Ds.l 1
0002372E <AmiBlitz3.ab3@5345> ret15cc:    Ds.w 1
00023736 <AmiBlitz3.ab3@5349>   ADDI.l #$12,$2(A7)
0002373E <AmiBlitz3.ab3@5350>   MOVE.l $2(A7),ret15add
00023744 <AmiBlitz3.ab3@5351>   MOVE.w (A7),ret15cc
0002374C <AmiBlitz3.ab3@5352>   MOVE.l #directdo,$2(A7)
0002374E <AmiBlitz3.ab3@5353> RTE
00023752 <AmiBlitz3.ab3@5362>   MOVE.l ret15add(PC),-(A7)
00023756 <AmiBlitz3.ab3@5363>   MOVE.w ret15cc(PC),-(A7)                                 ;15*4
0002375A <AmiBlitz3.ab3@5364>   MOVEM.l D0-D7/A0-A6,-(A7)
00023764 <AmiBlitz3.ab3@5365>   MOVE.l destbufferend,trap15temp                          ;store high buff addr
0002376E <AmiBlitz3.ab3@5366>   MOVE.l destbufferstart,trap15temp2
00023778 <AmiBlitz3.ab3@5367>   MOVE.l libend,templibend
00023782 <AmiBlitz3.ab3@5368>   MOVE.l data1start,tempdata1start
00023788 <AmiBlitz3.ab3@5369>   CLR.l hunkoffsetcounter
0002378E <AmiBlitz3.ab3@5371>   MOVE.l directbuffer,a0
00023794 <AmiBlitz3.ab3@5375>   MOVE.l a0,destbufferstart
0002379A <AmiBlitz3.ab3@5376>   ADD.l #3900,a0
000237A0 <AmiBlitz3.ab3@5377>   MOVE.l a0,destbufferend
000237A6 <AmiBlitz3.ab3@5378>   TST.b exdebug
000237AA <AmiBlitz3.ab3@5379>   BEQ 'l1
000237B0 <AmiBlitz3.ab3@5380>   MOVE.l a0,libend
000237B6 <AmiBlitz3.ab3@5381>   ADD.l #4000,a0
000237BC <AmiBlitz3.ab3@5382>   MOVE.l a0,data1start
000237C6 <AmiBlitz3.ab3@5385>   MOVE.l #dircont,errcont
000237CC <AmiBlitz3.ab3@5386> 
000237D2 <AmiBlitz3.ab3@5387>   MOVE.l A7,errstack
000237DA <AmiBlitz3.ab3@5388>   MOVE.w #$FFFF,dirmode
000237DE <AmiBlitz3.ab3@5390>     MOVEA.l ret15add(PC),A1
000237E4 <AmiBlitz3.ab3@5391>     MOVE.w -(A1),blitzmode
000237E6 <AmiBlitz3.ab3@5392>     CLR.l -(A1)
000237EC <AmiBlitz3.ab3@5393>     MOVE.l -(A1),firstglob
000237F2 <AmiBlitz3.ab3@5394>     MOVE.l -(A1),firstlocal
000237F8 <AmiBlitz3.ab3@5396>   CLR.w proceduremode
000237FE <AmiBlitz3.ab3@5397>   MOVE.l firstglob,D0
00023804 <AmiBlitz3.ab3@5398>   OR.l firstlocal,D0
00023808 <AmiBlitz3.ab3@5399>   BEQ.b directdo__skip
0002380E <AmiBlitz3.ab3@5400>   NOT.w proceduremode
00023810 <AmiBlitz3.ab3@5403>   MOVEA.l -(A1),A0                                         ;address of string
00023812 <AmiBlitz3.ab3@5407>   MOVE.l A0,-(A7)
00023850 <AmiBlitz3.ab3@5410>   !ComData_GetL{comFunc_DebugTrap,A1}
00023852 <AmiBlitz3.ab3@5412>   JSR (A1)                                                 ;tokenise line.....
00023854 <AmiBlitz3.ab3@5414>   MOVEA.l (A7)+,A5
0002385E <AmiBlitz3.ab3@5415>   MOVE.l directbuffer,destpointer
00023864 <AmiBlitz3.ab3@5416>   TST.b exdebug
00023868 <AmiBlitz3.ab3@5417>   BEQ 'noexdebug
0002386A <AmiBlitz3.ab3@5418>   MOVE.l a5,a0
00023870 <AmiBlitz3.ab3@5419>   MOVE.l #200,d0
00023876 <AmiBlitz3.ab3@5422>     MOVE.b 0(a0,d0.l),8(a0,d0.l)
0002387A <AmiBlitz3.ab3@5423>   DBF d0,'l1
00023880 <AmiBlitz3.ab3@5428>   MOVE.l destpointer,a0
00023884 <AmiBlitz3.ab3@5429>   MOVE.w #$207c,(a0)+
00023886 <AmiBlitz3.ab3@5430>   MOVE.l a5,d0
0002388C <AmiBlitz3.ab3@5431>   ADD.l #$206,d0                                           ;constant from debuglib
0002388E <AmiBlitz3.ab3@5432>   MOVE.l d0,(a0)+
00023894 <AmiBlitz3.ab3@5433>   MOVE.l a0,destpointer
00023896 <AmiBlitz3.ab3@5434>   MOVE.l a5,a0
0002389A <AmiBlitz3.ab3@5435>   MOVE.w #$8039,(a0)+                                      ;TokeJsr 164 (inputoutputlib) LSL 7+4
000238A0 <AmiBlitz3.ab3@5436>   MOVE.l #"$520",(a0)+
000238A4 <AmiBlitz3.ab3@5437>   MOVE.w #"4:",(a0)+
000238AA <AmiBlitz3.ab3@5440>   CLR.w dontwrite
000238B2 <AmiBlitz3.ab3@5441>   MOVE.w #$FFFF,lasta6
000238B6 <AmiBlitz3.ab3@5442>   BSR.w compile_line                                        ;.....compile it
000238BC <AmiBlitz3.ab3@5443>   TST.b exdebug
000238C0 <AmiBlitz3.ab3@5444>   BEQ 'noexdebug2
000238C6 <AmiBlitz3.ab3@5445>   JSR JL_0_6C76
000238CC <AmiBlitz3.ab3@5448>   CLR.w proceduremode
000238D0 <AmiBlitz3.ab3@5449>   BSR.w errchx
000238D4 <AmiBlitz3.ab3@5450>   MOVE.w #$4EF9,D1
000238D8 <AmiBlitz3.ab3@5451>   BSR.w writeword                                          ;JMP
000238DC <AmiBlitz3.ab3@5452>   MOVE.l ret15add(PC),D1
000238E0 <AmiBlitz3.ab3@5453>   BSR.w writelong                                          ;jmp to done
000238E6 <AmiBlitz3.ab3@5454>   MOVE.w dontwrite,D0
000238EA <AmiBlitz3.ab3@5455>    BNE.w nodirmem
000238F2 <AmiBlitz3.ab3@5456>   MOVE.l directbuffer,$3E(A7)                              ;install code address
000238F8 <AmiBlitz3.ab3@5459>   CLR.w dirmode
000238FE <AmiBlitz3.ab3@5460>   MOVE.w ret15cc(PC),$3C(A7)
00023908 <AmiBlitz3.ab3@5461>   MOVE.l trap15temp,destbufferend
00023912 <AmiBlitz3.ab3@5462>   MOVE.l trap15temp2,destbufferstart
0002391C <AmiBlitz3.ab3@5463>   MOVE.l tempdata1start,data1start
00023926 <AmiBlitz3.ab3@5464>   MOVE.l templibend,libend
0002392A <AmiBlitz3.ab3@5465>   MOVEM.l (A7)+,D0-D7/A0-A6
0002392E <AmiBlitz3.ab3@5466>   BSR.w Aclearcache                                        ;selden used
00023930 <AmiBlitz3.ab3@5467> RTR
00023934 <AmiBlitz3.ab3@5470>   MOVEA.l ret15add(PC),A0
00023936 <AmiBlitz3.ab3@5471>   SUBQ.w #2,A0
00023938 <AmiBlitz3.ab3@5472>   MOVE.l D0,-(A0)
0002393C <AmiBlitz3.ab3@5473> BRA.w direxit
00023940 <AmiBlitz3.ab3@5477>   MOVE.w $6(A3),D1
00023944 <AmiBlitz3.ab3@5478>   BSR.w uselib                                             ;get lib for base address
00023948 <AmiBlitz3.ab3@5479>   MOVE.w $A(A1),-(A7)                                      ;libbase reg
0002394A <AmiBlitz3.ab3@5480>   ADDQ.w #8,A3
0002394C <AmiBlitz3.ab3@5481>   MOVE.w (A3)+,-(A7)                                       ;get offset for lib
0002394E <AmiBlitz3.ab3@5482>   MOVE.l A3,-(A7)
00023950 <AmiBlitz3.ab3@5486>   MOVEQ.l #$00,D3
00023956 <AmiBlitz3.ab3@5487>   JSR checka4a5
00023958 <AmiBlitz3.ab3@5489>   MOVE.b (A3)+,D1
0002395C <AmiBlitz3.ab3@5490>    BMI.w stamigalib__done
0002395E <AmiBlitz3.ab3@5491>   MOVEQ.l #$03,D2
00023960 <AmiBlitz3.ab3@5492>   ADDQ.w #1,D3
00023964 <AmiBlitz3.ab3@5493>   MOVEM.l D3/A3,-(A7)
0002396A <AmiBlitz3.ab3@5494>   MOVE.b funcparloop,-(a7)
00023972 <AmiBlitz3.ab3@5495>   MOVE.b #0,funcparloop
00023978 <AmiBlitz3.ab3@5496>   MOVE.l leftsidetype,-(a7)
0002397E <AmiBlitz3.ab3@5497>   MOVE.l rightsidetype,-(a7)
00023984 <AmiBlitz3.ab3@5498>   CLR.l leftsidetype
0002398A <AmiBlitz3.ab3@5499>   CLR.l rightsidetype
00023990 <AmiBlitz3.ab3@5500>   MOVE.b blitzparloop,-(a7)
00023998 <AmiBlitz3.ab3@5501>   MOVE.b #1,blitzparloop                                 ;write the parameter to stack
0002399E <AmiBlitz3.ab3@5502>   JSR peval
000239A4 <AmiBlitz3.ab3@5503>   MOVE.b (a7)+,blitzparloop
000239AA <AmiBlitz3.ab3@5504>   MOVE.l (a7)+,rightsidetype
000239B0 <AmiBlitz3.ab3@5505>   MOVE.l (a7)+,leftsidetype
000239B6 <AmiBlitz3.ab3@5506>   MOVE.b (a7)+,funcparloop
000239BA <AmiBlitz3.ab3@5507>   MOVEM.l (A7)+,D3/A3
000239BE <AmiBlitz3.ab3@5508>   CMP.w #$2C,D0
000239C2 <AmiBlitz3.ab3@5509>    BEQ.w stamigalib__loop
000239C4 <AmiBlitz3.ab3@5510>   TST.b (A3)
000239C8 <AmiBlitz3.ab3@5511>    BPL.w syntaxerr
000239CA <AmiBlitz3.ab3@5514>   MOVEA.l (A7)+,A3
000239CC <AmiBlitz3.ab3@5515>   SUBQ.w #1,D3
000239D0 <AmiBlitz3.ab3@5516>    BPL.w stamigalib__toend
000239D4 <AmiBlitz3.ab3@5517>    BSR.w get1bytemain                                      ;no pars - get :
000239D8 <AmiBlitz3.ab3@5518> BRA.w stamigalib__nopars
000239DA <AmiBlitz3.ab3@5521>   TST.b (A3)+                                              ;go to end of params
000239DE <AmiBlitz3.ab3@5522>    BPL.w stamigalib__toend
000239E0 <AmiBlitz3.ab3@5523>   SUBQ.w #1,A3
000239E2 <AmiBlitz3.ab3@5526>    MOVEQ.l #$00,D1
000239E4 <AmiBlitz3.ab3@5527>    MOVE.b -(A3),D1
000239E8 <AmiBlitz3.ab3@5528>    BTST #$4,D1
000239EC <AmiBlitz3.ab3@5529>     BNE.w stamigalib__addreg
000239EE <AmiBlitz3.ab3@5530>    LSL.w #8,D1
000239F0 <AmiBlitz3.ab3@5531>    LSL.w #1,D1
000239F4 <AmiBlitz3.ab3@5532>    ORI.w #$201F,D1
000239F8 <AmiBlitz3.ab3@5533>  BRA.w stamigalib__gotit
000239FC <AmiBlitz3.ab3@5536>    ANDI.w #$7,D1
000239FE <AmiBlitz3.ab3@5537>    LSL.w #8,D1
00023A00 <AmiBlitz3.ab3@5538>    LSL.w #1,D1
00023A04 <AmiBlitz3.ab3@5539>    ORI.w #$205F,D1
00023A08 <AmiBlitz3.ab3@5542>     BSR.w writeword
00023A0C <AmiBlitz3.ab3@5543>   DBF D3,stamigalib__loop2
00023A12 <AmiBlitz3.ab3@5546>   MOVE.w (A7)+,libjsr+2
00023A18 <AmiBlitz3.ab3@5547>   MOVE.w (A7)+,libbase+2
00023A1E <AmiBlitz3.ab3@5548>   MOVE.l libbase,D1
00023A22 <AmiBlitz3.ab3@5549>    BSR.w writelong
00023A28 <AmiBlitz3.ab3@5550>   MOVE.l libjsr,D1
00023A2E <AmiBlitz3.ab3@5551>   JSR writelong
00023A34 <AmiBlitz3.ab3@5552>   JSR restorea4a5
00023A36 <AmiBlitz3.ab3@5553>   RTS
00023A3C <AmiBlitz3.ab3@5556>   MOVE.l data1,D4
00023A42 <AmiBlitz3.ab3@5557>   SUB.l data1start,D4
00023A48 <AmiBlitz3.ab3@5558>   ADD.l #10000,d4
00023A4E <AmiBlitz3.ab3@5559>   MOVE.l libend,D3
00023A54 <AmiBlitz3.ab3@5560>   SUB.l destbufferend,D3
00023A5A <AmiBlitz3.ab3@5561>   ADD.l #40000,d3
00023A60 <AmiBlitz3.ab3@5562>   MOVE.l bigpc,D2
00023A66 <AmiBlitz3.ab3@5563>   SUB.l destbufferstart,D2
00023A6C <AmiBlitz3.ab3@5564>   ADD.l #20000,d2
00023A72 <AmiBlitz3.ab3@5565>   MOVE.l databuffer,D5
00023A78 <AmiBlitz3.ab3@5566>   ADD.l #10000,D5
00023A7C <AmiBlitz3.ab3@5567> BRA newallox
00023A82 <AmiBlitz3.ab3@5571>   MOVE.l objectbuffer,D2
00023A84 <AmiBlitz3.ab3@5572>   LSR.l #1,D2
00023A8A <AmiBlitz3.ab3@5573>   ADD.l objectbuffer,D2
00023A90 <AmiBlitz3.ab3@5574>   MOVE.l libsbuffer,D3
00023A92 <AmiBlitz3.ab3@5575>   LSR.l #1,D3
00023A98 <AmiBlitz3.ab3@5576>   ADD.l libsbuffer,D3
00023A9E <AmiBlitz3.ab3@5577>   MOVE.l systembuffer,D4
00023AA0 <AmiBlitz3.ab3@5578>   LSR.l #1,D4
00023AA6 <AmiBlitz3.ab3@5579>   ADD.l systembuffer,D4
00023AAC <AmiBlitz3.ab3@5580>   MOVE.l databuffer,D5
00023AAE <AmiBlitz3.ab3@5581>   LSR.l #1,D5
00023AB4 <AmiBlitz3.ab3@5582>   ADD.l databuffer,D5
00023AB8 <AmiBlitz3.ab3@5583> BRA.w newallox
00023ABE <AmiBlitz3.ab3@5587>   MOVE.l bigpc,D2
00023AC4 <AmiBlitz3.ab3@5588>   SUB.l destbufferstart,D2                                     ;size of object buffer
00023ACA <AmiBlitz3.ab3@5589>   SUB.l savefuncspace,d2
00023AD0 <AmiBlitz3.ab3@5591>   TST.w debugversion
00023AD4 <AmiBlitz3.ab3@5592>    BNE.b alloxadj__skip
00023ADA <AmiBlitz3.ab3@5593>   ADDI.l #$800,D2
00023AE0 <AmiBlitz3.ab3@5596>   MOVE.l libend,D3
00023AE6 <AmiBlitz3.ab3@5597>   SUB.l destbufferend,D3
00023AEC <AmiBlitz3.ab3@5599>   MOVE.l data1,D4
00023AF2 <AmiBlitz3.ab3@5600>   SUB.l data1start,D4
00023AF8 <AmiBlitz3.ab3@5602>   MOVE.l data2,D5
00023AFE <AmiBlitz3.ab3@5603>   SUB.l data2at,D5
00023B04 <AmiBlitz3.ab3@5605>   CLR.l morememadd
00023B08 <AmiBlitz3.ab3@5608>   BSR.w makeallox
00023B0C <AmiBlitz3.ab3@5609>   BNE.w newallox__done
00023B10 <AmiBlitz3.ab3@5610> BRA.w init_buffers
00023B12 <AmiBlitz3.ab3@5613> RTS
00023B18 <AmiBlitz3.ab3@5617>   MOVEA.l _execbase,A6
00023B1E <AmiBlitz3.ab3@5618>   MOVE.l objlen,D0
00023B22 <AmiBlitz3.ab3@5619>   BEQ.w freeallox__skip
00023B28 <AmiBlitz3.ab3@5620>   CLR.l objlen
00023B2E <AmiBlitz3.ab3@5621>   MOVEA.l destbufferstart,A1
00023B34 <AmiBlitz3.ab3@5622>   MOVE.l mempool,a0
00023B38 <AmiBlitz3.ab3@5623> JMP _FreeVec(A6)
00023B3A <AmiBlitz3.ab3@5626> RTS
00023B40 <AmiBlitz3.ab3@5630>   MOVE.l objectbuffer,D2
00023B46 <AmiBlitz3.ab3@5631>   MOVE.l libsbuffer,D3
00023B4C <AmiBlitz3.ab3@5632>   MOVE.l systembuffer,D4
00023B52 <AmiBlitz3.ab3@5633>   MOVE.l databuffer,D5
00023B5A <AmiBlitz3.ab3@5636>   MOVE.w #$FFFF,anyerrs
00023B5E <AmiBlitz3.ab3@5637>   BSR.w freeallox
00023B60 <AmiBlitz3.ab3@5641>   ADDQ.l #1,D2
00023B64 <AmiBlitz3.ab3@5642>   BCLR #$0,D2
00023B66 <AmiBlitz3.ab3@5643>   ADDQ.l #1,D3
00023B6A <AmiBlitz3.ab3@5644>   BCLR #$0,D3
00023B6C <AmiBlitz3.ab3@5645>   ADDQ.l #1,D4
00023B70 <AmiBlitz3.ab3@5646>   BCLR #$0,D4
00023B72 <AmiBlitz3.ab3@5647>   TST.l d5
00023B76 <AmiBlitz3.ab3@5648>   BNE 'l1
00023B78 <AmiBlitz3.ab3@5651>   ADDQ.l #1,D5
00023B7C <AmiBlitz3.ab3@5652>   BCLR #$0,D5
00023B7E <AmiBlitz3.ab3@5653>   MOVE.l D2,D0
00023B80 <AmiBlitz3.ab3@5654>   ADD.l D3,D0
00023B82 <AmiBlitz3.ab3@5655>   ADD.l D4,D0
00023B84 <AmiBlitz3.ab3@5656>   ADD.l D5,D0
00023B8A <AmiBlitz3.ab3@5657>   ADD.l #moremem,d0
00023B8C <AmiBlitz3.ab3@5658>   MOVE.l D0,D6
00023B92 <AmiBlitz3.ab3@5659>   MOVE.l #MemfPublic_MemfClear,D1
00023B98 <AmiBlitz3.ab3@5660>   MOVE.l mempool,a0
00023B9E <AmiBlitz3.ab3@5661>   MOVEA.l _execbase,A6
00023BA2 <AmiBlitz3.ab3@5662>   JSR _AllocVec(a6)                                        ;alloc mem for objectbuffer
00023BA4 <AmiBlitz3.ab3@5664>   TST.l D0
00023BA8 <AmiBlitz3.ab3@5665>   BEQ.w exit_initbuffers
00023BAE <AmiBlitz3.ab3@5666>   MOVE.l D6,objlen
00023BB4 <AmiBlitz3.ab3@5667>   MOVE.l D2,objectbuffer
00023BBA <AmiBlitz3.ab3@5668>   MOVE.l D3,libsbuffer
00023BC0 <AmiBlitz3.ab3@5669>   MOVE.l D4,systembuffer
00023BC6 <AmiBlitz3.ab3@5670>   MOVE.l D5,databuffer
00023BCC <AmiBlitz3.ab3@5671>   MOVE.l D0,destbufferstart
00023C00 <AmiBlitz3.ab3@5674>   !ComData_SetL{comPtr_DestBufferStart,D0}
00023C02 <AmiBlitz3.ab3@5675>   ADD.l D2,D0
00023C08 <AmiBlitz3.ab3@5676>   MOVE.l D0,destbufferend
00023C0A <AmiBlitz3.ab3@5677>   ADD.l D3,D0
00023C10 <AmiBlitz3.ab3@5678>   MOVE.l D0,data1start
00023C12 <AmiBlitz3.ab3@5679>   ADD.l D4,D0
00023C18 <AmiBlitz3.ab3@5680>   MOVE.l D0,data2at
00023C1A <AmiBlitz3.ab3@5681>   ADD.l D5,D0
00023C20 <AmiBlitz3.ab3@5682>   MOVE.l D0,allat
00023C22 <AmiBlitz3.ab3@5685> RTS
00023C26 <AmiBlitz3.ab3@5689>   Dc.b $00,$00,$00,$01                                     ;         1
00023C2A <AmiBlitz3.ab3@5690>   Dc.b $00,$00,$00,$0A                                     ;        10
00023C2E <AmiBlitz3.ab3@5691>   Dc.b $00,$00,$00,$64                                     ;       100
00023C32 <AmiBlitz3.ab3@5692>   Dc.b $00,$00,$03,$E8                                     ;      1000
00023C36 <AmiBlitz3.ab3@5693>   Dc.b $00,$00,$27,$10                                     ;     10000
00023C3A <AmiBlitz3.ab3@5694>   Dc.b $00,$01,$86,$A0                                     ;    100000
00023C3E <AmiBlitz3.ab3@5695>   Dc.b $00,$0F,$42,$40                                     ;   1000000
00023C42 <AmiBlitz3.ab3@5696>   Dc.b $00,$98,$96,$80                                     ;  10000000
00023C46 <AmiBlitz3.ab3@5697>   Dc.b $05,$F5,$E1,$00                                     ; 100000000
00023C4A <AmiBlitz3.ab3@5698>   Dc.b $3B,$9A,$CA,$00                                     ;1000000000
00023C4C <AmiBlitz3.ab3@5702>   MOVEQ.l #$00,D1                                          ;no zero printed
00023C4E <AmiBlitz3.ab3@5703>   MOVEQ.l #$24,D3                                          ; "$"
00023C50 <AmiBlitz3.ab3@5706>   MOVEQ.l #$30,D4                                          ; "0"
00023C54 <AmiBlitz3.ab3@5709>     CMP.l divisors(PC,D3.W),D2
00023C58 <AmiBlitz3.ab3@5710>     BCS.w makelong__skip
00023C5C <AmiBlitz3.ab3@5711>     SUB.l divisors(PC,D3.W),D2
00023C5E <AmiBlitz3.ab3@5712>     ADDQ.w #1,D4
00023C62 <AmiBlitz3.ab3@5713> BRA.w makelong__loop2
00023C66 <AmiBlitz3.ab3@5716>   CMP.b #"0",D4
00023C6A <AmiBlitz3.ab3@5717>   BNE.w makelong__doit
00023C6C <AmiBlitz3.ab3@5718>   TST.w D1
00023C70 <AmiBlitz3.ab3@5719>   BEQ.w makelong__skip2
00023C72 <AmiBlitz3.ab3@5722>   MOVE.b D4,(A0)+
00023C74 <AmiBlitz3.ab3@5723>   MOVEQ.l #$01,D1
00023C76 <AmiBlitz3.ab3@5726>   SUBQ.w #4,D3
00023C7A <AmiBlitz3.ab3@5727>   BPL.w makelong__loop
00023C7C <AmiBlitz3.ab3@5728>   TST.w D1
00023C80 <AmiBlitz3.ab3@5729>   BNE.w makelong__skip3
00023C84 <AmiBlitz3.ab3@5730>   MOVE.b #"0",(A0)+
00023C86 <AmiBlitz3.ab3@5733>   CLR.b (A0)
00023C88 <AmiBlitz3.ab3@5734> RTS
00023CA8 <AmiBlitz3.ab3@5737> str_residentrequester:  Dc.b "Name of Resident File to Create",0 : Even        ;restext org source
00023D68 <AmiBlitz3.ab3@5738> str_residentpath:       Ds.l 48                                                ;respath org source
00023E28 <AmiBlitz3.ab3@5739> str_residentname:       Ds.l 48                                                ;resname org source
00023E2E <AmiBlitz3.ab3@5743>   MOVE.l macrobase,D0
00023E32 <AmiBlitz3.ab3@5744>    BNE.w create_residentfile
00023E38 <AmiBlitz3.ab3@5745>   MOVE.l newtype_string,D0
00023E3C <AmiBlitz3.ab3@5746>    BNE.w create_residentfile
00023E42 <AmiBlitz3.ab3@5747>   MOVEA.l labelbase,A2
00023E46 <AmiBlitz3.ab3@5750>     CMPA.w #$0,A2
00023E4A <AmiBlitz3.ab3@5751>      BEQ.w menu_createresidentfile__err
00023E52 <AmiBlitz3.ab3@5752>     CMPI.l #$1,$4(A2)
00023E56 <AmiBlitz3.ab3@5753>      BEQ.w create_residentfile
00023E58 <AmiBlitz3.ab3@5754>     MOVEA.l (A2),A2
00023E5C <AmiBlitz3.ab3@5755> BRA.w menu_createresidentfile__loop
00023E86 <AmiBlitz3.ab3@5758>   !basic
00023EE8 <AmiBlitz3.ab3@5759> 
00023F06 <AmiBlitz3.ab3@5760>   !asm
00023F08 <AmiBlitz3.ab3@5761> RTS
00023F46 <AmiBlitz3.ab3@5767>   !ComData_GetL{comFunc_ASLFileRequest,A3}
00023F4C <AmiBlitz3.ab3@5768>   LEA str_residentrequester,A2
00023F52 <AmiBlitz3.ab3@5769>   LEA str_residentpath,A0
00023F58 <AmiBlitz3.ab3@5770>   LEA str_residentname,A1
00023F82 <AmiBlitz3.ab3@5771>   !basic
00023FBA <AmiBlitz3.ab3@5772>     Poke$ ?str_residentpath,my_residentsdir$
00023FE6 <AmiBlitz3.ab3@5773>     Poke$ ?str_residentname,".res"
00024004 <AmiBlitz3.ab3@5774>   !asm
00024006 <AmiBlitz3.ab3@5776>   JSR (A3)                                                 ;open ped filerequest
0002400A <AmiBlitz3.ab3@5778>   BEQ.w menu_createresidentfile__err
0002400C <AmiBlitz3.ab3@5781>   MOVE.l D0,D1
00024012 <AmiBlitz3.ab3@5782>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00024016 <AmiBlitz3.ab3@5783>   MOVEA.l _dosbase(PC),A6
0002401A <AmiBlitz3.ab3@5784>   JSR _Open(A6)
0002401C <AmiBlitz3.ab3@5785>   MOVE.l D0,D7                                             ;handle
00024020 <AmiBlitz3.ab3@5786>   BEQ.w menu_createresidentfile__err
00024024 <AmiBlitz3.ab3@5787>   MOVEM.l d2-d7/a0-a6,-(a7)
0002402A <AmiBlitz3.ab3@5788>   LEA devo,a0
00024030 <AmiBlitz3.ab3@5789>   LEA ptr_parameterstore,a1
00024032 <AmiBlitz3.ab3@5792>     MOVE.b (a0)+,(a1)+
00024036 <AmiBlitz3.ab3@5793>   BNE 'l1
00024038 <AmiBlitz3.ab3@5794>   MOVEQ #13,d2
0002403E <AmiBlitz3.ab3@5795>   JSR findlabel2
00024042 <AmiBlitz3.ab3@5796>   BNE 'd
00024046 <AmiBlitz3.ab3@5797>   TST.l 8(a2)
0002404A <AmiBlitz3.ab3@5798>   BEQ 'd2
00024074 <AmiBlitz3.ab3@5799>   !basic
000240D6 <AmiBlitz3.ab3@5800>     error{!TRANS{"Cannot create Resident with develope debug 1"}}
000240F4 <AmiBlitz3.ab3@5801>   !asm
000240F8 <AmiBlitz3.ab3@5802>   MOVEM.l (a7)+,d2-d7/a0-a6
000240FC <AmiBlitz3.ab3@5803>   MOVEA.l _dosbase(PC),A6
000240FE <AmiBlitz3.ab3@5804>   MOVE.l d7,d1
00024102 <AmiBlitz3.ab3@5805>   JSR _Close(a6)
00024106 <AmiBlitz3.ab3@5806> BRA menu_createresidentfile__err
0002410A <AmiBlitz3.ab3@5810>   MOVEM.l (a7)+,d2-d7/a0-a6
0002410E <AmiBlitz3.ab3@5811>   BSR.w call_setpointerbusy
00024112 <AmiBlitz3.ab3@5813>   BSR.w AJL_0_7962
00024114 <AmiBlitz3.ab3@5814>   MOVE.l D7,D1
0002411A <AmiBlitz3.ab3@5815>   MOVE.l #tsthead,D2                                       ;header
0002411C <AmiBlitz3.ab3@5816>   MOVEQ.l #$20,D3
00024120 <AmiBlitz3.ab3@5817>   MOVEA.l _dosbase(PC),A6
00024124 <AmiBlitz3.ab3@5818>   JSR _Write(A6)
00024126 <AmiBlitz3.ab3@5819>   MOVEQ.l #$00,D6                                          ;offset from start of file!
0002412A <AmiBlitz3.ab3@5820>   BSR.w restypes
0002412E <AmiBlitz3.ab3@5821>   BSR.w resmacs
00024132 <AmiBlitz3.ab3@5822>   BSR.w resconsts
00024134 <AmiBlitz3.ab3@5823>   MOVE.l D6,D3
00024136 <AmiBlitz3.ab3@5824>   ADDQ.l #3,D3
0002413C <AmiBlitz3.ab3@5825>   ANDI.l #$FFFFFFFC,D3                                    ;long word align
0002413E <AmiBlitz3.ab3@5826>   MOVE.l D3,-(A7)
00024140 <AmiBlitz3.ab3@5827>   SUB.l D6,D3
00024144 <AmiBlitz3.ab3@5828>   BEQ.w menu_createresidentfile__noalign
0002414A <AmiBlitz3.ab3@5829>   MOVE.l #writelist,D2
0002414C <AmiBlitz3.ab3@5830>   MOVE.l D7,D1
00024152 <AmiBlitz3.ab3@5831>   MOVEA.l _dosbase,A6
00024156 <AmiBlitz3.ab3@5832>   JSR _Write(A6)
00024160 <AmiBlitz3.ab3@5835>    MOVE.l hunkoffsetcounter,tstsize3
00024164 <AmiBlitz3.ab3@5836>    BEQ.w menu_createresidentfile__skip2a
00024166 <AmiBlitz3.ab3@5837>   MOVE.l D7,D1
0002416C <AmiBlitz3.ab3@5838>   MOVE.l #tstend,D2
0002416E <AmiBlitz3.ab3@5839>   MOVEQ.l #$0C,D3
00024174 <AmiBlitz3.ab3@5840>   MOVEA.l _dosbase,A6
00024178 <AmiBlitz3.ab3@5841>    JSR _Write(A6)
0002417E <AmiBlitz3.ab3@5845>   MOVEA.l hunkoffsetbase,A2
00024182 <AmiBlitz3.ab3@5848>   CMPA.w #$0,A2
00024186 <AmiBlitz3.ab3@5849>    BEQ.w menu_createresidentfile__skip2
0002418A <AmiBlitz3.ab3@5850>   LEA $4(A2),A1
0002418C <AmiBlitz3.ab3@5851>   MOVE.l D7,D1
0002418E <AmiBlitz3.ab3@5852>   MOVE.l A1,D2
00024190 <AmiBlitz3.ab3@5853>   MOVEQ.l #$04,D3
00024196 <AmiBlitz3.ab3@5854>   MOVEA.l _dosbase,A6
0002419A <AmiBlitz3.ab3@5855>    JSR _Write(A6)
0002419C <AmiBlitz3.ab3@5856>   MOVEA.l (A2),A2
000241A0 <AmiBlitz3.ab3@5857> BRA.w menu_createresidentfile__oloop
000241A2 <AmiBlitz3.ab3@5860>   MOVE.l D7,D1
000241A8 <AmiBlitz3.ab3@5861>   MOVE.l #zero,D2
000241AA <AmiBlitz3.ab3@5862>   MOVEQ.l #$04,D3
000241B0 <AmiBlitz3.ab3@5863>   MOVEA.l _dosbase,A6
000241B4 <AmiBlitz3.ab3@5864>   JSR _Write(A6)
000241B6 <AmiBlitz3.ab3@5867>   MOVE.l D7,D1
000241BC <AmiBlitz3.ab3@5868>   MOVE.l #tstdone,D2
000241BE <AmiBlitz3.ab3@5869>   MOVEQ.l #$04,D3
000241C4 <AmiBlitz3.ab3@5870>   MOVEA.l _dosbase,A6
000241C8 <AmiBlitz3.ab3@5871>    JSR _Write(A6)
000241CA <AmiBlitz3.ab3@5872>   MOVE.l (A7)+,D0
000241CC <AmiBlitz3.ab3@5873>   LSR.l #2,D0
000241D2 <AmiBlitz3.ab3@5874>   MOVE.l D0,temp1
000241D4 <AmiBlitz3.ab3@5875>   MOVE.l D7,D1
000241D6 <AmiBlitz3.ab3@5876>   MOVEQ.l #$14,D2
000241D8 <AmiBlitz3.ab3@5877>   MOVEQ.l #-$01,D3
000241DC <AmiBlitz3.ab3@5878>   JSR _Seek(A6)
000241DE <AmiBlitz3.ab3@5879>   MOVE.l D7,D1
000241E4 <AmiBlitz3.ab3@5880>   MOVE.l #temp1,D2
000241E6 <AmiBlitz3.ab3@5881>   MOVEQ.l #$04,D3
000241EA <AmiBlitz3.ab3@5882>    JSR _Write(A6)
000241EC <AmiBlitz3.ab3@5883>   MOVE.l D7,D1
000241EE <AmiBlitz3.ab3@5884>   MOVEQ.l #$1C,D2
000241F0 <AmiBlitz3.ab3@5885>   MOVEQ.l #-$01,D3
000241F4 <AmiBlitz3.ab3@5886>    JSR _Seek(A6)
000241F6 <AmiBlitz3.ab3@5887>   MOVE.l D7,D1
000241FC <AmiBlitz3.ab3@5888>   MOVE.l #temp1,D2
000241FE <AmiBlitz3.ab3@5889>   MOVEQ.l #$04,D3
00024202 <AmiBlitz3.ab3@5890>    JSR _Write(A6)
00024204 <AmiBlitz3.ab3@5891>   MOVE.l D7,D1
00024208 <AmiBlitz3.ab3@5892>    JSR _Close(A6)
0002420C <AmiBlitz3.ab3@5893> BRA.w call_setpointernormal
0002420E <AmiBlitz3.ab3@5897>   ADDQ.w #5,D1
00024210 <AmiBlitz3.ab3@5898>   ADDQ.b #8,D0
00024214 <AmiBlitz3.ab3@5901>     CMPA.w #$0,A2
00024218 <AmiBlitz3.ab3@5902>     BEQ.w writelist__done
0002421C <AmiBlitz3.ab3@5903>      BSR.w writeitem
0002421E <AmiBlitz3.ab3@5904>     MOVEA.l (A2),A2
00024222 <AmiBlitz3.ab3@5905> BRA.w writelist__loop
00024224 <AmiBlitz3.ab3@5908> RTS
00024226 <AmiBlitz3.ab3@5911>   MOVEQ.l #$00,D3
0002422A <AmiBlitz3.ab3@5912>   MOVE.b $0(A2,D5.W),D3
0002422C <AmiBlitz3.ab3@5913>   ADDQ.w #1,D3
00024230 <AmiBlitz3.ab3@5914>   BCLR #$0,D3                                              ;word align
00024232 <AmiBlitz3.ab3@5915>   MOVE.l (A2),-(A7)
00024236 <AmiBlitz3.ab3@5916>    BEQ.w writeitem__skip
0002423A <AmiBlitz3.ab3@5917>    BSR.w resoff
0002423C <AmiBlitz3.ab3@5918>   ADD.l D3,D6
0002423E <AmiBlitz3.ab3@5919>   MOVE.l D6,(A2)
00024240 <AmiBlitz3.ab3@5920>   SUB.l D3,D6
00024242 <AmiBlitz3.ab3@5923>    ADD.l D3,D6
00024244 <AmiBlitz3.ab3@5924>   MOVE.l A2,D2
00024246 <AmiBlitz3.ab3@5925>   MOVE.l D7,D1
0002424C <AmiBlitz3.ab3@5926>   MOVEA.l _dosbase,A6
00024250 <AmiBlitz3.ab3@5927>    JSR _Write(A6)
00024252 <AmiBlitz3.ab3@5928>   MOVE.l (A7)+,(A2)
00024254 <AmiBlitz3.ab3@5929> RTS
00024256 <AmiBlitz3.ab3@5932>   MOVE.l D6,D2
0002425A <AmiBlitz3.ab3@5933> BRA.w addhunkoffset
0002425E <AmiBlitz3.ab3@5937>     CMPA.w #$0,A2
00024262 <AmiBlitz3.ab3@5938>      BEQ.w writeoffs__done
00024268 <AmiBlitz3.ab3@5939>     MOVEA.l newtypebase,A1
0002426A <AmiBlitz3.ab3@5940>     MOVEQ.l #$00,D1
0002426E <AmiBlitz3.ab3@5943>       CMPA.w #$0,A1
00024272 <AmiBlitz3.ab3@5944>       BEQ.w writeoffs__found
00024276 <AmiBlitz3.ab3@5945>       CMPA.l $A(A2),A1
0002427A <AmiBlitz3.ab3@5946>        BEQ.w writeoffs__found
0002427C <AmiBlitz3.ab3@5947>       ADDQ.w #1,D1
0002427E <AmiBlitz3.ab3@5948>       MOVEA.l (A1),A1
00024282 <AmiBlitz3.ab3@5949> BRA.w writeoffs__loop2
00024286 <AmiBlitz3.ab3@5952>     MOVE.w $A(A2),-(A7)
0002428A <AmiBlitz3.ab3@5953>     MOVE.w D1,$A(A2)
0002428E <AmiBlitz3.ab3@5954>      BSR.w writeitem
00024292 <AmiBlitz3.ab3@5955>     MOVE.w (A7)+,$A(A2)
00024294 <AmiBlitz3.ab3@5956>     MOVEA.l (A2),A2
00024298 <AmiBlitz3.ab3@5957> BRA.w writeoffs
0002429A <AmiBlitz3.ab3@5960> RTS
0002429C <AmiBlitz3.ab3@5964>   MOVEQ.l #$00,D0
000242A0 <AmiBlitz3.ab3@5967>   CMPA.w #$0,A2
000242A4 <AmiBlitz3.ab3@5968>    BEQ.w countem__done
000242A6 <AmiBlitz3.ab3@5969>   ADDQ.w #1,D0
000242A8 <AmiBlitz3.ab3@5970>   MOVEA.l (A2),A2
000242AC <AmiBlitz3.ab3@5971> BRA.w countem__loop
000242B2 <AmiBlitz3.ab3@5974>   MOVE.w D0,temp1
000242B4 <AmiBlitz3.ab3@5975>   MOVE.l D7,D1
000242BA <AmiBlitz3.ab3@5976>   MOVE.l #temp1,D2
000242BC <AmiBlitz3.ab3@5977>   MOVEQ.l #$02,D3
000242BE <AmiBlitz3.ab3@5978>   ADDQ.l #2,D6
000242C4 <AmiBlitz3.ab3@5979>   MOVEA.l _dosbase,A6
000242C8 <AmiBlitz3.ab3@5980> JMP _Write(A6)
000242CE <AmiBlitz3.ab3@5984>    TST.b resdisable
000242D2 <AmiBlitz3.ab3@5985>    BEQ resmacs__l1
000242D8 <AmiBlitz3.ab3@5986>    MOVE.l currentmacroaddr,a3
000242DE <AmiBlitz3.ab3@5987>    CMP.l #0,a3
000242E2 <AmiBlitz3.ab3@5988>    BEQ resmacs__l1
000242E4 <AmiBlitz3.ab3@5989>    MOVE.l (a3),a3
000242E8 <AmiBlitz3.ab3@5990> BRA resmacs__l2
000242EE <AmiBlitz3.ab3@5993>   MOVEA.l macrobase,A3                                     ;??begin org code??
000242F0 <AmiBlitz3.ab3@5996>   MOVEA.l A3,A2
000242F4 <AmiBlitz3.ab3@5997>   BSR.w countem
000242F8 <AmiBlitz3.ab3@6000>    CMPA.w #$0,A3
000242FC <AmiBlitz3.ab3@6001>    BEQ.w resmacs__done
000242FE <AmiBlitz3.ab3@6002>   MOVE.l D6,D5
00024300 <AmiBlitz3.ab3@6003>   MOVE.l (A3),-(A7)
00024304 <AmiBlitz3.ab3@6004>   MOVE.l $4(A3),-(A7)
00024306 <AmiBlitz3.ab3@6005>   MOVEQ.l #$00,D3
0002430A <AmiBlitz3.ab3@6006>   MOVE.b $C(A3),D3
0002430C <AmiBlitz3.ab3@6007>   ADDQ.w #1,D3
00024310 <AmiBlitz3.ab3@6008>   BCLR #$0,D3
00024312 <AmiBlitz3.ab3@6009>   ADD.l D3,D6                                              ;add len of struct
00024316 <AmiBlitz3.ab3@6010>   TST.w $8(A3)
0002431A <AmiBlitz3.ab3@6011>    BEQ.w resmacs__notext
0002431E <AmiBlitz3.ab3@6012>   MOVE.l D6,$4(A3)
00024320 <AmiBlitz3.ab3@6013>   MOVE.l D5,D2
00024322 <AmiBlitz3.ab3@6014>   ADDQ.l #4,D2
00024326 <AmiBlitz3.ab3@6015>    BSR.w addhunkoffset
00024328 <AmiBlitz3.ab3@6018>   MOVEQ.l #$00,D4
0002432C <AmiBlitz3.ab3@6019>   MOVE.w $8(A3),D4
0002432E <AmiBlitz3.ab3@6020>   ADDQ.w #1,D4
00024332 <AmiBlitz3.ab3@6021>   BCLR #$0,D4
00024334 <AmiBlitz3.ab3@6022>   ADD.l D4,D6
00024336 <AmiBlitz3.ab3@6023>   TST.l (A3)
0002433A <AmiBlitz3.ab3@6024>    BEQ.w resmacs__nomore
0002433C <AmiBlitz3.ab3@6025>   MOVE.l D6,(A3)
0002433E <AmiBlitz3.ab3@6026>   MOVE.l D5,D2
00024342 <AmiBlitz3.ab3@6027>    BSR.w addhunkoffset
00024344 <AmiBlitz3.ab3@6030>   MOVE.l A3,D2
00024346 <AmiBlitz3.ab3@6031>   MOVE.l D7,D1
0002434C <AmiBlitz3.ab3@6033>    MOVEA.l _dosbase,A6
00024350 <AmiBlitz3.ab3@6034>    JSR _Write(a6)
00024352 <AmiBlitz3.ab3@6035>   TST.l D4
00024356 <AmiBlitz3.ab3@6036>    BEQ.w resmacs__skip
00024358 <AmiBlitz3.ab3@6037>   MOVE.l (A7),D2
0002435A <AmiBlitz3.ab3@6038>   MOVE.l D4,D3
0002435C <AmiBlitz3.ab3@6039>   MOVE.l D7,D1
00024362 <AmiBlitz3.ab3@6041>     MOVEA.l _dosbase,A6
00024366 <AmiBlitz3.ab3@6042>    JSR _Write(A6)
0002436A <AmiBlitz3.ab3@6045>   MOVE.l (A7)+,$4(A3)
0002436C <AmiBlitz3.ab3@6046>   MOVE.l (A7)+,(A3)
0002436E <AmiBlitz3.ab3@6047>   MOVEA.l (A3),A3
00024372 <AmiBlitz3.ab3@6048> BRA.w resmacs__loop
00024374 <AmiBlitz3.ab3@6051> RTS
0002437A <AmiBlitz3.ab3@6055>   TST.b resdisable
0002437E <AmiBlitz3.ab3@6056>   BEQ restypes__l1
00024384 <AmiBlitz3.ab3@6057>   MOVE.l lastrestype,a3
0002438A <AmiBlitz3.ab3@6058>   CMP.l #0,a3
0002438E <AmiBlitz3.ab3@6059>   BEQ restypes__l1
00024390 <AmiBlitz3.ab3@6060>   MOVE.l (a3),a3
00024394 <AmiBlitz3.ab3@6061> BRA restypes__l2
0002439A <AmiBlitz3.ab3@6064>   MOVEA.l newtype_string,A3
0002439C <AmiBlitz3.ab3@6067>   MOVEA.l A3,A2
000243A0 <AmiBlitz3.ab3@6068>    BSR.w countem
000243A4 <AmiBlitz3.ab3@6071>    CMPA.w #$0,A3
000243A8 <AmiBlitz3.ab3@6072>    BEQ.w restypes__done
000243AA <AmiBlitz3.ab3@6073>   MOVE.l D6,-(A7)
000243AE <AmiBlitz3.ab3@6074>   MOVEA.l $4(A3),A2
000243B0 <AmiBlitz3.ab3@6075>   MOVEQ.l #$0E,D5
000243B4 <AmiBlitz3.ab3@6076>    BSR.w writeoffs
000243B6 <AmiBlitz3.ab3@6077>   MOVE.l (A7)+,D0
000243BA <AmiBlitz3.ab3@6078>   MOVE.l $4(A3),-(A7)
000243BE <AmiBlitz3.ab3@6079>   MOVE.l D0,$4(A3)
000243C0 <AmiBlitz3.ab3@6080>   MOVE.l D6,D2
000243C2 <AmiBlitz3.ab3@6081>   ADDQ.l #4,D2
000243C6 <AmiBlitz3.ab3@6082>    BSR.w addhunkoffset
000243C8 <AmiBlitz3.ab3@6083>   MOVEQ.l #$00,D3
000243CC <AmiBlitz3.ab3@6084>   MOVE.b $A(A3),D3
000243CE <AmiBlitz3.ab3@6085>   ADDQ.w #1,D3
000243D2 <AmiBlitz3.ab3@6086>   BCLR #$0,D3
000243D4 <AmiBlitz3.ab3@6087>   ADD.l D3,D6
000243D6 <AmiBlitz3.ab3@6088>   MOVE.l A3,D2
000243D8 <AmiBlitz3.ab3@6089>   MOVE.l D7,D1
000243DE <AmiBlitz3.ab3@6091>     MOVEA.l _dosbase,A6
000243E2 <AmiBlitz3.ab3@6092>     JSR _Write(A6)
000243E6 <AmiBlitz3.ab3@6093>   MOVE.l (A7)+,$4(A3)
000243E8 <AmiBlitz3.ab3@6094>   MOVEA.l (A3),A3
000243EC <AmiBlitz3.ab3@6095> BRA.w restypes__loop
000243EE <AmiBlitz3.ab3@6098> RTS
000243F4 <AmiBlitz3.ab3@6102>    TST.b resdisable
000243F8 <AmiBlitz3.ab3@6103>    BEQ resconsts__l1
000243FE <AmiBlitz3.ab3@6104>    MOVE.l currentlabeladdr,a2
00024404 <AmiBlitz3.ab3@6105>    CMP.l #0,a2
00024408 <AmiBlitz3.ab3@6106>    BEQ resconsts__l1
0002440A <AmiBlitz3.ab3@6107>    MOVE.l (a2),a2
0002440E <AmiBlitz3.ab3@6108> BRA resconsts__l2
00024414 <AmiBlitz3.ab3@6111>    MOVEA.l labelbase,A2
00024416 <AmiBlitz3.ab3@6114>    MOVEQ.l #$00,D0
0002441A <AmiBlitz3.ab3@6117>    CMPA.w #$0,A2
0002441E <AmiBlitz3.ab3@6118>    BEQ.w resconsts__done
00024426 <AmiBlitz3.ab3@6119>   CMPI.l #$1,$4(A2)
0002442A <AmiBlitz3.ab3@6120>    BNE.w resconsts__next
0002442C <AmiBlitz3.ab3@6121>   ADDQ.w #1,D0
0002442E <AmiBlitz3.ab3@6124>   MOVEA.l (A2),A2
00024432 <AmiBlitz3.ab3@6125> BRA.w resconsts__loop
00024438 <AmiBlitz3.ab3@6128>   MOVE.w D0,temp1
0002443A <AmiBlitz3.ab3@6129>   MOVE.l D7,D1
00024440 <AmiBlitz3.ab3@6130>   MOVE.l #temp1,D2
00024442 <AmiBlitz3.ab3@6131>   MOVEQ.l #$02,D3
00024444 <AmiBlitz3.ab3@6132>   ADDQ.l #2,D6
0002444A <AmiBlitz3.ab3@6134>     MOVEA.l _dosbase,A6
0002444E <AmiBlitz3.ab3@6135>     JSR _Write(A6)
00024454 <AmiBlitz3.ab3@6136>    TST.b resdisable
00024458 <AmiBlitz3.ab3@6137>    BEQ resconsts__done_l1
0002445E <AmiBlitz3.ab3@6138>    MOVE.l currentlabeladdr,a2
00024464 <AmiBlitz3.ab3@6139>    CMP.l #0,a2
00024468 <AmiBlitz3.ab3@6140>    BEQ resconsts__done_l1
0002446A <AmiBlitz3.ab3@6141>    MOVE.l (a2),a2
0002446E <AmiBlitz3.ab3@6142> BRA resconsts__loop2
00024474 <AmiBlitz3.ab3@6145>    MOVEA.l labelbase,A2                                    ;write resident labels
00024478 <AmiBlitz3.ab3@6148>    CMPA.w #$0,A2
0002447C <AmiBlitz3.ab3@6149>    BEQ.w resconsts__done2
00024484 <AmiBlitz3.ab3@6150>   CMPI.l #$1,$4(A2)
00024488 <AmiBlitz3.ab3@6151>    BNE.w resconsts__next2
0002448A <AmiBlitz3.ab3@6152>    MOVEQ.l #$00,D3
0002448E <AmiBlitz3.ab3@6153>   MOVE.b $12(A2),D3                                        ;length
00024490 <AmiBlitz3.ab3@6154>   ADDQ.w #1,D3
00024494 <AmiBlitz3.ab3@6155>   BCLR #$0,D3
00024496 <AmiBlitz3.ab3@6156>   MOVE.l D6,D2
00024498 <AmiBlitz3.ab3@6157>   ADD.l D3,D6
0002449A <AmiBlitz3.ab3@6160>   MOVE.l (A2),-(A7)
0002449C <AmiBlitz3.ab3@6161>   TST.l (A2)
000244A0 <AmiBlitz3.ab3@6162>    BEQ.w resconsts__nonext
000244A2 <AmiBlitz3.ab3@6163>   MOVE.l D6,(A2)
000244A6 <AmiBlitz3.ab3@6164>    BSR.w addhunkoffset
000244A8 <AmiBlitz3.ab3@6167>   MOVE.l A2,D2
000244AA <AmiBlitz3.ab3@6168>   MOVE.l D7,D1
000244B0 <AmiBlitz3.ab3@6170>     MOVEA.l _dosbase,A6
000244B4 <AmiBlitz3.ab3@6171>     JSR _Write(A6)
000244B6 <AmiBlitz3.ab3@6172>   MOVE.l (A7)+,(A2)
000244B8 <AmiBlitz3.ab3@6175>   MOVEA.l (A2),A2
000244BC <AmiBlitz3.ab3@6176> BRA.w resconsts__loop2
000244BE <AmiBlitz3.ab3@6179> RTS
000244E8 <AmiBlitz3.ab3@6183>    !basic
000244EE <AmiBlitz3.ab3@6184>     MOVE.l ptr_resfile,d0
000244FE <AmiBlitz3.ab3@6185>     resfileP.l = Peek.l(?ptr_resfile)
00024508 <AmiBlitz3.ab3@6186>     If resfileP
00024530 <AmiBlitz3.ab3@6187>       resfile$ = Peek.s(resfileP)
0002457C <AmiBlitz3.ab3@6188>       tests.b = Instr(resfile$,"/")
000245C8 <AmiBlitz3.ab3@6189>       testc.b = Instr(resfile$,":")
000245EA <AmiBlitz3.ab3@6190>       If tests=0 AND testc=0
0002466A <AmiBlitz3.ab3@6191>         resfile$ = dos_AddPart{my_residentsdir$,resfile$}
0002467C <AmiBlitz3.ab3@6192>         Poke.l ?ptr_resfile,&resfile$
00024682 <AmiBlitz3.ab3@6194>     Else
000246BC <AmiBlitz3.ab3@6195>       error{"INTERNAL: Invalid pointer in ptr_resfile!"}
000246DA <AmiBlitz3.ab3@6197>    !asm
000246DC <AmiBlitz3.ab3@6198> RTS
000246E2 <AmiBlitz3.ab3@6202> 
000246E8 <AmiBlitz3.ab3@6203>   MOVE.l A7,errstack
000246F2 <AmiBlitz3.ab3@6206>   MOVE.l #next_resentry,errcont
000246FA <AmiBlitz3.ab3@6207>   MOVE.w #$FFFF,ezerr
000246FE <AmiBlitz3.ab3@6208>   BSR.w Aclearallvars
00024702 <AmiBlitz3.ab3@6209>   BSR.w free_residents
00024708 <AmiBlitz3.ab3@6211>   LEA residents_table,A5
0002470A <AmiBlitz3.ab3@6212>   MOVEQ.l #$07,D6
0002470C <AmiBlitz3.ab3@6215>     TST.b (A5)
00024710 <AmiBlitz3.ab3@6216>     BEQ.w next_resentry
00024716 <AmiBlitz3.ab3@6217>     MOVE.l A5,ptr_resfile
0002471A <AmiBlitz3.ab3@6218>     BSR check_residentpath
00024720 <AmiBlitz3.ab3@6219>     MOVE.l ptr_resfile,d1
00024726 <AmiBlitz3.ab3@6220>     MOVEA.l _dosbase,A6
0002472A <AmiBlitz3.ab3@6221>     JSR _LoadSeg(A6)
0002472E <AmiBlitz3.ab3@6222>     MOVE.l D0,$40(A5)
00024732 <AmiBlitz3.ab3@6223>     BNE.w reloadresident__yeah
00024736 <AmiBlitz3.ab3@6224>     BSR.w reserr
00024738 <AmiBlitz3.ab3@6227>     MOVEA.l D0,A3
0002473A <AmiBlitz3.ab3@6228>     ADDA.l A3,A3
0002473C <AmiBlitz3.ab3@6229>     ADDA.l A3,A3
0002473E <AmiBlitz3.ab3@6230>     ADDQ.w #4,A3                                           ;start of res
00024742 <AmiBlitz3.ab3@6231>     BSR.w JL_0_5A9E
00024746 <AmiBlitz3.ab3@6232>     BSR.w JL_0_5A62                                        ;add macros to list
0002474A <AmiBlitz3.ab3@6233>     BSR.w JL_0_5A32                                        ;read labels
0002474E <AmiBlitz3.ab3@6236>     LEA ResidentEntryStep(A5),A5       ;$44
00024752 <AmiBlitz3.ab3@6237>   DBF D6,reloadresident__loop
0002475C <AmiBlitz3.ab3@6242>   MOVE.l #free_residents,errcont
00024762 <AmiBlitz3.ab3@6244>   MOVEA.l newtype_string,A3
00024764 <AmiBlitz3.ab3@6245>   MOVEQ.l #$0B,D7
00024768 <AmiBlitz3.ab3@6246>   BSR.w checkclash
0002476E <AmiBlitz3.ab3@6248>   MOVEA.l macrobase,A3
00024770 <AmiBlitz3.ab3@6249>   MOVEQ.l #$d,D7
00024774 <AmiBlitz3.ab3@6250>   BSR.w checkclash
0002477A <AmiBlitz3.ab3@6252>   MOVEA.l firstconst,A3
0002477C <AmiBlitz3.ab3@6253>   MOVEQ.l #$19,D7
00024780 <AmiBlitz3.ab3@6254>   BSR.w checkclash
00024782 <AmiBlitz3.ab3@6257> RTS
00024784 <AmiBlitz3.ab3@6261>   MOVEA.l A3,A4
00024788 <AmiBlitz3.ab3@6264>     CMPA.w #$0,A4
0002478C <AmiBlitz3.ab3@6265>     BEQ.w checkclash__done
00024792 <AmiBlitz3.ab3@6267>     LEA ptr_parameterstore,A0
00024796 <AmiBlitz3.ab3@6268>     LEA $0(A4,D7.W),A1
00024798 <AmiBlitz3.ab3@6269>     MOVEQ.l #-$01,D2
0002479A <AmiBlitz3.ab3@6272>       ADDQ.w #1,D2
0002479C <AmiBlitz3.ab3@6273>       MOVE.b (A1)+,(A0)+
000247A0 <AmiBlitz3.ab3@6274>     BNE.w checkclash__loop2
000247A2 <AmiBlitz3.ab3@6275>     MOVEA.l A3,A2
000247A6 <AmiBlitz3.ab3@6278>     BSR.w findlab
000247AA <AmiBlitz3.ab3@6279>     BNE.w checkclash__next                                  ;not found
000247AC <AmiBlitz3.ab3@6280>     CMPA.l A2,A4
000247B0 <AmiBlitz3.ab3@6281>     BEQ.w checkclash__l1
000247B2 <AmiBlitz3.ab3@6282>     MOVE.l a1,a5
000247B6 <AmiBlitz3.ab3@6283> BRA clasherr
000247BA <AmiBlitz3.ab3@6286> BRA.w checkclash__more
000247BC <AmiBlitz3.ab3@6289>     MOVEA.l (A4),A4
000247C0 <AmiBlitz3.ab3@6290> BRA.w checkclash__loop
000247C2 <AmiBlitz3.ab3@6293> RTS
000247C8 <AmiBlitz3.ab3@6297>   MOVEA.l _dosbase,A6
000247CE <AmiBlitz3.ab3@6299>   LEA newtype_string,A0
000247D4 <AmiBlitz3.ab3@6300>   MOVE.l A0,lastrestype
000247D6 <AmiBlitz3.ab3@6301>   CLR.l (A0)
000247DC <AmiBlitz3.ab3@6303>   LEA macrobase,A0
000247E2 <AmiBlitz3.ab3@6304>   MOVE.l A0,currentmacroaddr
000247E4 <AmiBlitz3.ab3@6305>   CLR.l (A0)
000247EA <AmiBlitz3.ab3@6307>   LEA labelbase,A0
000247F0 <AmiBlitz3.ab3@6308>   MOVE.l A0,currentlabeladdr
000247F2 <AmiBlitz3.ab3@6309>   CLR.l (A0)
000247F8 <AmiBlitz3.ab3@6310>   CLR.w rescnt
00024830 <AmiBlitz3.ab3@6314>   !ComData_SetB{comByte_DebugMode,debugmode}
00024836 <AmiBlitz3.ab3@6317>   LEA residents_table,A2
00024838 <AmiBlitz3.ab3@6318>   MOVEQ.l #$07,D2
0002483C <AmiBlitz3.ab3@6321>      MOVE.l $40(A2),D1
00024840 <AmiBlitz3.ab3@6322>      BEQ.w free_residents__next
00024844 <AmiBlitz3.ab3@6323>       CLR.l $40(A2)
0002484A <AmiBlitz3.ab3@6324>       MOVEA.l _dosbase,A6
0002484E <AmiBlitz3.ab3@6325>       JSR _UnLoadSeg(A6)
00024852 <AmiBlitz3.ab3@6328>      LEA ResidentEntryStep(A2),A2   ; $44
00024856 <AmiBlitz3.ab3@6329>    DBF D2,free_residents__loop
00024858 <AmiBlitz3.ab3@6331> RTS
0002485A <AmiBlitz3.ab3@6335>   MOVE.w (A3)+,D1
0002485E <AmiBlitz3.ab3@6336>   BEQ.w JL_0_5A60
00024864 <AmiBlitz3.ab3@6337>   MOVEA.l currentlabeladdr,A2
00024866 <AmiBlitz3.ab3@6338>   MOVE.l A3,(A2)
00024868 <AmiBlitz3.ab3@6339>   SUBQ.w #1,D1
0002486A <AmiBlitz3.ab3@6342>     MOVEA.l A3,A2
0002486C <AmiBlitz3.ab3@6343>     MOVEA.l (A3),A3
00024870 <AmiBlitz3.ab3@6344>   DBF D1,JL_0_5A42
00024872 <AmiBlitz3.ab3@6346>   CLR.l (a2)                                               ;bugfix for object
00024878 <AmiBlitz3.ab3@6347>   MOVE.l A2,currentlabeladdr
0002487A <AmiBlitz3.ab3@6348>   MOVEA.l A2,A3
0002487C <AmiBlitz3.ab3@6349>   MOVEQ.l #$00,D0
00024880 <AmiBlitz3.ab3@6350>   MOVE.b $12(A3),D0
00024882 <AmiBlitz3.ab3@6351>   ADDQ.w #1,D0
00024886 <AmiBlitz3.ab3@6352>   BCLR #$0,D0
00024888 <AmiBlitz3.ab3@6353>   ADDA.w D0,A3
0002488A <AmiBlitz3.ab3@6356> RTS
0002488C <AmiBlitz3.ab3@6360>   MOVE.w (A3)+,D1
00024890 <AmiBlitz3.ab3@6361>   BEQ.w JL_0_5A9C
00024896 <AmiBlitz3.ab3@6363>   MOVEA.l currentmacroaddr,A2
00024898 <AmiBlitz3.ab3@6364>   MOVE.l A3,(A2)
0002489A <AmiBlitz3.ab3@6365>   SUBQ.w #1,D1
0002489C <AmiBlitz3.ab3@6368>     MOVEA.l A3,A2
0002489E <AmiBlitz3.ab3@6369>     MOVEA.l (A3),A3
000248A2 <AmiBlitz3.ab3@6370>   DBF D1,JL_0_5A72
000248A8 <AmiBlitz3.ab3@6372>   MOVE.l A2,currentmacroaddr
000248AA <AmiBlitz3.ab3@6373>   MOVEA.l A2,A3
000248AC <AmiBlitz3.ab3@6374>   MOVEQ.l #$00,D0
000248B0 <AmiBlitz3.ab3@6375>   MOVE.b $C(A3),D0
000248B2 <AmiBlitz3.ab3@6376>   ADDQ.w #1,D0
000248B6 <AmiBlitz3.ab3@6377>   BCLR #$0,D0
000248BA <AmiBlitz3.ab3@6378>   MOVE.w $8(A3),D1
000248BC <AmiBlitz3.ab3@6379>   ADDQ.w #1,D1
000248C0 <AmiBlitz3.ab3@6380>   BCLR #$0,D1
000248C2 <AmiBlitz3.ab3@6381>   ADDA.w D0,A3
000248C4 <AmiBlitz3.ab3@6382>   ADDA.w D1,A3
000248C6 <AmiBlitz3.ab3@6385> RTS
000248C8 <AmiBlitz3.ab3@6389>   MOVE.w (A3)+,D1
000248CC <AmiBlitz3.ab3@6390>   BEQ.w JL_0_5B38
000248CE <AmiBlitz3.ab3@6391>   MOVE.w D1,-(A7)
000248D0 <AmiBlitz3.ab3@6392>   SUBQ.w #1,D1
000248D6 <AmiBlitz3.ab3@6393>   MOVEA.l lastrestype,A2
000248D8 <AmiBlitz3.ab3@6394>   MOVE.l A2,-(A7)
000248DA <AmiBlitz3.ab3@6397>       MOVE.l (A3),D0
000248DE <AmiBlitz3.ab3@6398>       BEQ.w JL_0_5ABC
000248E0 <AmiBlitz3.ab3@6399>       MOVEA.l D0,A3
000248E4 <AmiBlitz3.ab3@6400> BRA.w JL_0_5AB0
000248E8 <AmiBlitz3.ab3@6403>       MOVE.b $E(A3),D0
000248EA <AmiBlitz3.ab3@6404>       ADDQ.w #1,D0
000248EE <AmiBlitz3.ab3@6405>       BCLR #$0,D0
000248F0 <AmiBlitz3.ab3@6406>       ADDA.w D0,A3
000248F2 <AmiBlitz3.ab3@6407>       MOVE.l A3,(A2)
000248F4 <AmiBlitz3.ab3@6408>       MOVEA.l A3,A2
000248F6 <AmiBlitz3.ab3@6409>       MOVEQ.l #$00,D0
000248FA <AmiBlitz3.ab3@6410>       MOVE.b $A(A3),D0
000248FC <AmiBlitz3.ab3@6411>       ADDQ.w #1,D0
00024900 <AmiBlitz3.ab3@6412>       BCLR #$0,D0
00024902 <AmiBlitz3.ab3@6413>       ADDA.w D0,A3
00024906 <AmiBlitz3.ab3@6414>   DBF D1,JL_0_5AB0
00024908 <AmiBlitz3.ab3@6416>   MOVEA.l (A7)+,A0
0002490A <AmiBlitz3.ab3@6417>   MOVEA.l (A0),A0
0002490E <AmiBlitz3.ab3@6420>     CMPA.w #$0,A0
00024912 <AmiBlitz3.ab3@6421>     BEQ.w JL_0_5B2A
00024916 <AmiBlitz3.ab3@6422>     MOVEA.l $4(A0),A1
0002491A <AmiBlitz3.ab3@6425>     CMPA.w #$0,A1
0002491E <AmiBlitz3.ab3@6426>     BEQ.w JL_0_5B24
00024922 <AmiBlitz3.ab3@6427>     MOVE.w $A(A1),D0
00024928 <AmiBlitz3.ab3@6428>     MOVEA.l newtypebase,A4
0002492C <AmiBlitz3.ab3@6429>     CMP.w #$7,D0
00024930 <AmiBlitz3.ab3@6430>     BCS.w JL_0_5B0E
00024936 <AmiBlitz3.ab3@6431>     SUB.w rescnt,D0
00024938 <AmiBlitz3.ab3@6434>     SUBQ.w #1,D0
0002493C <AmiBlitz3.ab3@6435>     BMI.w JL_0_5B1A
0002493E <AmiBlitz3.ab3@6438>        MOVEA.l (A4),A4
00024942 <AmiBlitz3.ab3@6439>   DBF D0,JL_0_5B14
00024946 <AmiBlitz3.ab3@6442>     MOVE.l A4,$A(A1)
00024948 <AmiBlitz3.ab3@6443>     MOVEA.l (A1),A1
0002494C <AmiBlitz3.ab3@6444> BRA.w JL_0_5AEE
0002494E <AmiBlitz3.ab3@6447>     MOVEA.l (A0),A0
00024952 <AmiBlitz3.ab3@6448> BRA.w JL_0_5AE2
00024954 <AmiBlitz3.ab3@6451>   MOVE.w (A7)+,D0
0002495A <AmiBlitz3.ab3@6452>   ADD.w D0,rescnt
00024960 <AmiBlitz3.ab3@6453>   MOVE.l A2,lastrestype
00024962 <AmiBlitz3.ab3@6456> RTS
00024968 <AmiBlitz3.ab3@6460>   LEA tokens,A0
0002496C <AmiBlitz3.ab3@6461>   MOVE.w #$003A,D0                                         ; $003A : 58 dec
0002496E <AmiBlitz3.ab3@6464>     MOVEA.l (A0),A0
00024972 <AmiBlitz3.ab3@6465>   DBF D0,JL_0_5BD0
00024978 <AmiBlitz3.ab3@6467>   MOVEA.l #asmpnts,A1                                      ;create tokentab
0002497C <AmiBlitz3.ab3@6468>   MOVE.w #$0076,D0                                         ; $0076 : 118 dec
00024980 <AmiBlitz3.ab3@6471>       LEA $6(A0),A2
00024982 <AmiBlitz3.ab3@6474>         TST.b (A2)+
00024986 <AmiBlitz3.ab3@6475>       BNE.w JL_0_5BE4
00024988 <AmiBlitz3.ab3@6478>         TST.b (A2)+
0002498C <AmiBlitz3.ab3@6479>       BNE.w JL_0_5BEA
0002498E <AmiBlitz3.ab3@6481>       ADDQ.w #1,A2
00024990 <AmiBlitz3.ab3@6482>       EXG.l D1,A2
00024994 <AmiBlitz3.ab3@6483>       BCLR #$0,D1
00024996 <AmiBlitz3.ab3@6484>       EXG.l D1,A2
00024998 <AmiBlitz3.ab3@6485>       MOVE.l A2,(A1)+
0002499A <AmiBlitz3.ab3@6486>       MOVEA.l (A0),A0
0002499E <AmiBlitz3.ab3@6487>   DBF D0,JL_0_5BE0
000249A0 <AmiBlitz3.ab3@6488> RTS
000249A4 <AmiBlitz3.ab3@6492>   BSR.w asmconst
000249A6 <AmiBlitz3.ab3@6493>   MOVEQ.l #$0B,D5
000249A8 <AmiBlitz3.ab3@6494> RTS
000249AA <AmiBlitz3.ab3@6497> unmove:  Ds.w 1
000249AE <AmiBlitz3.ab3@6501>   MOVE.w #$48E7,D1
000249B2 <AmiBlitz3.ab3@6502>   BSR.w writeword                                          ;movem.l -(a7)
000249B6 <AmiBlitz3.ab3@6503>   MOVE.w #$000F,D2
000249B8 <AmiBlitz3.ab3@6504>   SUB.w D4,D2
000249BA <AmiBlitz3.ab3@6505>   MOVEQ.l #-$01,D1
000249BC <AmiBlitz3.ab3@6506>   BCLR D2,D1
000249C0 <AmiBlitz3.ab3@6507>   BSR.w writeword
000249C2 <AmiBlitz3.ab3@6508>   MOVEQ.l #-$01,D1
000249C4 <AmiBlitz3.ab3@6509>   BCLR D4,D1
000249CA <AmiBlitz3.ab3@6510>   MOVE.w D1,unmove
000249CC <AmiBlitz3.ab3@6511> RTS
000249D0 <AmiBlitz3.ab3@6515>   MOVE.w #$4CDF,D1
000249D4 <AmiBlitz3.ab3@6516>   BSR.w writeword
000249D8 <AmiBlitz3.ab3@6517>   MOVE.w unmove(PC),D1
000249DC <AmiBlitz3.ab3@6518> BRA.w writeword
000249E0 <AmiBlitz3.ab3@6531>   BSR.w JL_0_5D22
000249E4 <AmiBlitz3.ab3@6532>   CMP.w #$2C,D0                                            ;#','
000249E8 <AmiBlitz3.ab3@6533>    BNE.w syntaxerr
000249EE <AmiBlitz3.ab3@6534>   MOVE.l #$48E7FFFE,D1                                     ;movem to stack
000249F2 <AmiBlitz3.ab3@6535>    BSR.w writelong
000249F4 <AmiBlitz3.ab3@6536>   MOVE.w D4,D1
000249F8 <AmiBlitz3.ab3@6537>   ORI.w #$2F00,D1
000249FC <AmiBlitz3.ab3@6538>    BSR.w writeword
00024A00 <AmiBlitz3.ab3@6539>    BSR.w get1bytemain
00024A04 <AmiBlitz3.ab3@6540>    BSR.w getparameter
00024A08 <AmiBlitz3.ab3@6541>    BSR.w JL_0_8E3C
00024A0C <AmiBlitz3.ab3@6542>    BSR.w calcvar
00024A10 <AmiBlitz3.ab3@6543>    BTST #$E,D2
00024A14 <AmiBlitz3.ab3@6544>    BEQ.w JL_0_5C80
00024A18 <AmiBlitz3.ab3@6547>    MOVE.b #$3,D2
00024A1C <AmiBlitz3.ab3@6548> BRA.w JL_0_5C8E
00024A1E <AmiBlitz3.ab3@6551>   TST.b D2
00024A22 <AmiBlitz3.ab3@6552>    BEQ.w JL_0_5C78
00024A26 <AmiBlitz3.ab3@6553>   CMP.b #$7,D2
00024A2A <AmiBlitz3.ab3@6554>    BEQ.w JL_0_5C78
00024A2E <AmiBlitz3.ab3@6557>   BTST #$F,D2
00024A32 <AmiBlitz3.ab3@6558>    BNE.w JL_0_5CA4
00024A36 <AmiBlitz3.ab3@6559>   MOVE.w #$45ED,D1                                         ;lea x(a5),a2
00024A3A <AmiBlitz3.ab3@6560>    BSR.w writeword
00024A3C <AmiBlitz3.ab3@6561>   MOVE.w D3,D1
00024A40 <AmiBlitz3.ab3@6562>    BSR.w writeword
00024A44 <AmiBlitz3.ab3@6565>   MOVE.w #$201F,D1                                         ;move.l (a7)+,d0
00024A48 <AmiBlitz3.ab3@6566>    BSR.w writeword
00024A4C <AmiBlitz3.ab3@6567>   MOVE.w #$1480,D1
00024A50 <AmiBlitz3.ab3@6568>   CMP.b #$1,D2
00024A54 <AmiBlitz3.ab3@6569>    BEQ.w JL_0_5CC8
00024A58 <AmiBlitz3.ab3@6570>   EORI.w #$3000,D1
00024A5C <AmiBlitz3.ab3@6571>   CMP.b #$2,D2
00024A60 <AmiBlitz3.ab3@6572>    BNE.w JL_0_5CC8
00024A64 <AmiBlitz3.ab3@6573>   ORI.w #$1000,D1
00024A68 <AmiBlitz3.ab3@6576>   BSR.w writeword
00024A6E <AmiBlitz3.ab3@6577>   MOVE.l #$4CDF7FFF,D1
00024A72 <AmiBlitz3.ab3@6578> BRA.w writelong
00024A76 <AmiBlitz3.ab3@6582>   BSR.w JL_0_5D22
00024A7A <AmiBlitz3.ab3@6583>   CMP.w #$2C,D0
00024A7E <AmiBlitz3.ab3@6584>    BNE.w syntaxerr
00024A82 <AmiBlitz3.ab3@6585>    BSR.w regmovems
00024A84 <AmiBlitz3.ab3@6586>   MOVE.w D4,-(A7)
00024A86 <AmiBlitz3.ab3@6587>   MOVEQ.l #$03,D2
00024A8A <AmiBlitz3.ab3@6588>    BSR.w eval
00024A8C <AmiBlitz3.ab3@6589>   MOVE.w (A7)+,D1
00024A90 <AmiBlitz3.ab3@6590>    BEQ.w JL_0_5D1A
00024A94 <AmiBlitz3.ab3@6591>   CMP.w #$8,D1
00024A98 <AmiBlitz3.ab3@6592>    BCC.w JL_0_5D0C
00024A9A <AmiBlitz3.ab3@6593>   LSL.w #8,D1
00024A9C <AmiBlitz3.ab3@6594>   LSL.w #1,D1
00024AA0 <AmiBlitz3.ab3@6595>   ORI.w #$2000,D1
00024AA4 <AmiBlitz3.ab3@6596>    BSR.w writeword
00024AA8 <AmiBlitz3.ab3@6597> BRA.w JL_0_5D1A
00024AAA <AmiBlitz3.ab3@6600>   SUBQ.w #8,D1
00024AAC <AmiBlitz3.ab3@6601>   LSL.w #8,D1
00024AAE <AmiBlitz3.ab3@6602>   LSL.w #1,D1
00024AB2 <AmiBlitz3.ab3@6603>   ORI.w #$2040,D1
00024AB6 <AmiBlitz3.ab3@6604>   BSR.w writeword
00024ABA <AmiBlitz3.ab3@6607> BRA.w dounmove
00024ABE <AmiBlitz3.ab3@6611>   BSR.w get1bytemain
00024AC2 <AmiBlitz3.ab3@6614>   ORI.w #$20,D0
00024AC6 <AmiBlitz3.ab3@6615>   CMP.w #$64,D0
00024ACA <AmiBlitz3.ab3@6616>    BEQ.w JL_0_5D4E
00024ACE <AmiBlitz3.ab3@6617>   CMP.w #$61,D0
00024AD2 <AmiBlitz3.ab3@6618>    BNE.w syntaxerr
00024AD6 <AmiBlitz3.ab3@6619>    BSR.w JL_0_5D4E
00024AD8 <AmiBlitz3.ab3@6620>   ADDQ.w #8,D4
00024ADA <AmiBlitz3.ab3@6621> RTS
00024B06 <AmiBlitz3.ab3@6625>   !fget                                                   ;bsr.w get1bytemain
00024B0A <AmiBlitz3.ab3@6627>   ORI.w #$20,D0
00024B0E <AmiBlitz3.ab3@6630>   CMP.w #$61,D0
00024B12 <AmiBlitz3.ab3@6631>   BNE.w syntaxerr
00024B3E <AmiBlitz3.ab3@6634>   !fget                                                    ;bsr.w get1bytemain
00024B42 <AmiBlitz3.ab3@6635>   SUBI.w #$30,D0
00024B46 <AmiBlitz3.ab3@6636>    BMI.w syntaxerr
00024B4A <AmiBlitz3.ab3@6637>   CMP.w #$7,D0
00024B4E <AmiBlitz3.ab3@6638>    BHI.w syntaxerr
00024B50 <AmiBlitz3.ab3@6639>   MOVE.w D0,D4
00024B7C <AmiBlitz3.ab3@6640>   !fget
00024B7E <AmiBlitz3.ab3@6641> RTS                                                        ;bra.w get1bytemain
00024B80 <AmiBlitz3.ab3@6645>   ADDQ.w #8,D4
00024B82 <AmiBlitz3.ab3@6648>   MOVEQ.l #$00,D5
00024B86 <AmiBlitz3.ab3@6649>   SUBI.w #$30,D4
00024B8A <AmiBlitz3.ab3@6652>   CMP.w #$2D,D0
00024B8E <AmiBlitz3.ab3@6653>    BEQ.w JL_0_5D9E
00024B92 <AmiBlitz3.ab3@6654>   CMP.w #$2F,D0
00024B96 <AmiBlitz3.ab3@6655>    BEQ.w JL_0_5D8C
00024B9A <AmiBlitz3.ab3@6656> BRA.w syntaxerr
00024B9C <AmiBlitz3.ab3@6659>   BSET D4,D5
00024B9E <AmiBlitz3.ab3@6662>   MOVE.w D5,D4
00024BA0 <AmiBlitz3.ab3@6663>   MOVEQ.l #$0F,D5
00024BA2 <AmiBlitz3.ab3@6664> RTS
00024BA4 <AmiBlitz3.ab3@6667>   BSET D4,D5
00024BA8 <AmiBlitz3.ab3@6668>   BSR.w JL_0_5D1E
00024BBA <AmiBlitz3.ab3@6669>   !compare3                                                ;bsr.w JL_0_5FC0
00024BBE <AmiBlitz3.ab3@6670>   BNE.w JL_0_5D70
00024BC2 <AmiBlitz3.ab3@6671> BRA.w JL_0_5D84
00024BC4 <AmiBlitz3.ab3@6674>   MOVE.w D4,D1
00024BC8 <AmiBlitz3.ab3@6675>    BSR.w JL_0_5D1E
00024BCA <AmiBlitz3.ab3@6676>   CMP.w D4,D1
00024BCE <AmiBlitz3.ab3@6677>    BLS.w JL_0_5DAC
00024BD0 <AmiBlitz3.ab3@6678>   EXG.l D4,D1
00024BD2 <AmiBlitz3.ab3@6681>   BSET D1,D5
00024BD4 <AmiBlitz3.ab3@6682>   ADDQ.w #1,D1
00024BD6 <AmiBlitz3.ab3@6683>   CMP.w D4,D1
00024BDA <AmiBlitz3.ab3@6684>    BLS.w JL_0_5DAC
00024BEC <AmiBlitz3.ab3@6685>   !compare3                                                ;bsr.w JL_0_5FC0
00024BF0 <AmiBlitz3.ab3@6686>   BNE.w JL_0_5D70
00024BF4 <AmiBlitz3.ab3@6687> BRA.w JL_0_5D86
00024BF6 <AmiBlitz3.ab3@6690>   MOVEA.l A5,A4                                            ;bsr.w get1bytemain
00024C22 <AmiBlitz3.ab3@6691>    !fget
00024C26 <AmiBlitz3.ab3@6692>   CMP.w #$23,D0
00024C2A <AmiBlitz3.ab3@6693>    BEQ.w getimm
00024C2E <AmiBlitz3.ab3@6694>   CMP.w #$28,D0
00024C32 <AmiBlitz3.ab3@6695>    BEQ.w JL_0_5DFE
00024C36 <AmiBlitz3.ab3@6696>   CMP.w #$2D,D0
00024C3A <AmiBlitz3.ab3@6697>    BNE.w JL_0_5E20
00024C66 <AmiBlitz3.ab3@6698>    !fget                                                   ;bsr.w get1bytemain       -(
00024C6A <AmiBlitz3.ab3@6699>   CMP.w #$28,D0
00024C6E <AmiBlitz3.ab3@6700>    BNE.w JL_0_5F4E
00024C72 <AmiBlitz3.ab3@6701>    BSR.w JL_0_5D3E
00024C76 <AmiBlitz3.ab3@6702>   CMP.w #$29,D0
00024C7A <AmiBlitz3.ab3@6703>    BNE.w syntaxerr
00024C7C <AmiBlitz3.ab3@6704>   MOVEQ.l #$04,D5
00024CA8 <AmiBlitz3.ab3@6705>   !fget                                                    ;bsr.w get1bytemain
00024CAA <AmiBlitz3.ab3@6706> RTS
00024CAE <AmiBlitz3.ab3@6710>   BSR.w JL_0_5D3E
00024CB2 <AmiBlitz3.ab3@6711>   CMP.w #$29,D0
00024CB6 <AmiBlitz3.ab3@6712>    BNE.w syntaxerr
00024CE2 <AmiBlitz3.ab3@6713>   !fget                                                    ;bsr.w get1bytemain
00024CE6 <AmiBlitz3.ab3@6714>   CMP.w #$2B,D0
00024CEA <AmiBlitz3.ab3@6715>    BEQ.w JL_0_5E1A
00024CEC <AmiBlitz3.ab3@6716>   MOVEQ.l #$02,D5
00024CEE <AmiBlitz3.ab3@6717> RTS
00024CF0 <AmiBlitz3.ab3@6721>   MOVEQ.l #$03,D5
00024D1C <AmiBlitz3.ab3@6722>   !fget                                                    ;bra.w get1bytemain
00024D1E <AmiBlitz3.ab3@6723> RTS
00024D22 <AmiBlitz3.ab3@6727>   ORI.w #$20,D0
00024D24 <AmiBlitz3.ab3@6728>   MOVE.w D0,D1                                            
00024D50 <AmiBlitz3.ab3@6729>    !fget                                                   ;bsr.w get1bytemain
00024D54 <AmiBlitz3.ab3@6730>   CMP.w #$64,D1
00024D58 <AmiBlitz3.ab3@6731>    BNE.w JL_0_5E6C
00024D5C <AmiBlitz3.ab3@6732>   CMP.w #$30,D0
00024D60 <AmiBlitz3.ab3@6733>    BCS.w JL_0_5EAE
00024D64 <AmiBlitz3.ab3@6734>   CMP.w #$37,D0
00024D68 <AmiBlitz3.ab3@6735>    BHI.w JL_0_5EAE
00024D6A <AmiBlitz3.ab3@6736>   MOVE.w D0,D4
00024D96 <AmiBlitz3.ab3@6737>    !fget                                                   ;bsr.w get1bytemain
00024DA8 <AmiBlitz3.ab3@6738>    !compare3                                               ;bsr.w JL_0_5FC0
00024DAC <AmiBlitz3.ab3@6739>    BEQ.w JL_0_5E64
00024DB0 <AmiBlitz3.ab3@6740>   CMP.w #$2D,D0
00024DB4 <AmiBlitz3.ab3@6741>    BEQ.w JL_0_5D6A
00024DB8 <AmiBlitz3.ab3@6742>   CMP.w #$2F,D0
00024DBC <AmiBlitz3.ab3@6743>    BEQ.w JL_0_5D6A
00024DC0 <AmiBlitz3.ab3@6744> BRA.w JL_0_5EB8
00024DC2 <AmiBlitz3.ab3@6747>   MOVEQ.l #$00,D5
00024DC6 <AmiBlitz3.ab3@6748>   SUBI.w #$30,D4
00024DC8 <AmiBlitz3.ab3@6749> RTS
00024DCC <AmiBlitz3.ab3@6752>    CMP.w #$61,D1
00024DD0 <AmiBlitz3.ab3@6753>    BNE.w JL_0_5EAE
00024DD4 <AmiBlitz3.ab3@6754>   CMP.w #$30,D0
00024DD8 <AmiBlitz3.ab3@6755>    BCS.w JL_0_5EAE
00024DDC <AmiBlitz3.ab3@6756>   CMP.w #$37,D0
00024DE0 <AmiBlitz3.ab3@6757>    BHI.w JL_0_5EAE
00024DE2 <AmiBlitz3.ab3@6758>   MOVE.w D0,D4
00024E0E <AmiBlitz3.ab3@6759>    !fget                                                   ;bsr.w get1bytemain
00024E20 <AmiBlitz3.ab3@6760>    !compare3                                               ;bsr.w JL_0_5FC0
00024E24 <AmiBlitz3.ab3@6761>    BEQ.w JL_0_5EA6
00024E28 <AmiBlitz3.ab3@6762>   CMP.w #$2D,D0
00024E2C <AmiBlitz3.ab3@6763>    BEQ.w JL_0_5D68                                         ;movem
00024E30 <AmiBlitz3.ab3@6764>   CMP.w #$2F,D0
00024E34 <AmiBlitz3.ab3@6765>    BEQ.w JL_0_5D68
00024E38 <AmiBlitz3.ab3@6766> BRA.w JL_0_5EB8
00024E3A <AmiBlitz3.ab3@6769>   MOVEQ.l #1,d5
00024E3E <AmiBlitz3.ab3@6770>   SUBI.w #$30,D4
00024E42 <AmiBlitz3.ab3@6772> BRA 'l10
00024E44 <AmiBlitz3.ab3@6773>   ADDQ.w #8,d4
00024E46 <AmiBlitz3.ab3@6774>   MOVEQ #0,d5
00024E48 <AmiBlitz3.ab3@6775>   BSET d4,d5
00024E4A <AmiBlitz3.ab3@6776>   MOVE.w d5,d4
00024E4C <AmiBlitz3.ab3@6777>   MOVEQ.l #$0f,D5                                          ;01
00024E4E <AmiBlitz3.ab3@6780> RTS
00024E52 <AmiBlitz3.ab3@6784>   ORI.w #$20,D0
00024E54 <AmiBlitz3.ab3@6785>   MOVE.w D0,D4
00024E80 <AmiBlitz3.ab3@6786>    !fget                                                   ;bsr.w get1bytemain
00024E92 <AmiBlitz3.ab3@6789>   !compare3                                                ;bsr.w JL_0_5FC0
00024E96 <AmiBlitz3.ab3@6790>    BNE.w JL_0_5EF2
00024E9A <AmiBlitz3.ab3@6791>   CMP.w #$73,D1
00024E9E <AmiBlitz3.ab3@6792>    BNE.w JL_0_5EF2
00024EA2 <AmiBlitz3.ab3@6793>   CMP.w #$70,D4
00024EA6 <AmiBlitz3.ab3@6794>    BNE.w JL_0_5EDE
00024EB8 <AmiBlitz3.ab3@6795>    !compare3                                               ;bsr.w JL_0_5FC0
00024EBC <AmiBlitz3.ab3@6796>    BNE.w JL_0_5F4E
00024EBE <AmiBlitz3.ab3@6797>   MOVEQ.l #$07,D4
00024EC0 <AmiBlitz3.ab3@6798>   MOVEQ.l #$01,D5
00024EC2 <AmiBlitz3.ab3@6799> RTS
00024EC6 <AmiBlitz3.ab3@6803>   CMP.w #$72,D4
00024ECA <AmiBlitz3.ab3@6804>    BNE.w JL_0_5F4E
00024EDC <AmiBlitz3.ab3@6805>    !compare3                                               ;bsr.w JL_0_5FC0
00024EE0 <AmiBlitz3.ab3@6806>    BNE.w JL_0_5F4E
00024EE2 <AmiBlitz3.ab3@6807>   MOVEQ.l #$0D,D5
00024EE4 <AmiBlitz3.ab3@6808> RTS
00024EE8 <AmiBlitz3.ab3@6812>   ORI.w #$20,D0
00024EEC <AmiBlitz3.ab3@6813>   CMP.w #$63,D1
00024EF0 <AmiBlitz3.ab3@6814>    BNE.w JL_0_5F22
00024EF4 <AmiBlitz3.ab3@6815>   CMP.w #$63,D4
00024EF8 <AmiBlitz3.ab3@6816>    BNE.w JL_0_5F4E
00024EFC <AmiBlitz3.ab3@6817>   CMP.w #$72,D0
00024F00 <AmiBlitz3.ab3@6818>    BNE.w JL_0_5F4E
00024F04 <AmiBlitz3.ab3@6819>    BSR.w get1bytemain                                      ;??wy not !fget
00024F08 <AmiBlitz3.ab3@6820>    BEQ.w JL_0_5F1E
00024F0C <AmiBlitz3.ab3@6821>   CMP.w #$2C,D0
00024F10 <AmiBlitz3.ab3@6822>    BNE.w JL_0_5F4E
00024F12 <AmiBlitz3.ab3@6825>   MOVEQ.l #$0C,D5
00024F14 <AmiBlitz3.ab3@6826> RTS
00024F18 <AmiBlitz3.ab3@6830>   CMP.w #$75,D1
00024F1C <AmiBlitz3.ab3@6831>    BNE.w JL_0_5F4E
00024F20 <AmiBlitz3.ab3@6832>   CMP.w #$73,D4
00024F24 <AmiBlitz3.ab3@6833>    BNE.w JL_0_5F4E
00024F28 <AmiBlitz3.ab3@6834>   CMP.w #$70,D0
00024F2C <AmiBlitz3.ab3@6835>    BNE.w JL_0_5F4E
00024F30 <AmiBlitz3.ab3@6836>    BSR.w get1bytemain                                      ;??wy not !fget
00024F34 <AmiBlitz3.ab3@6837>    BEQ.w JL_0_5F4A
00024F38 <AmiBlitz3.ab3@6838>   CMP.w #$2C,D0
00024F3C <AmiBlitz3.ab3@6839>    BNE.w JL_0_5F4E
00024F3E <AmiBlitz3.ab3@6842>   MOVEQ.l #$0E,D5
00024F40 <AmiBlitz3.ab3@6843> RTS
00024F42 <AmiBlitz3.ab3@6847>   MOVEA.l A4,A5
00024F46 <AmiBlitz3.ab3@6848>    BSR.w asmconst
00024F58 <AmiBlitz3.ab3@6849>    !compare3                                               ;bsr.w JL_0_5FC0
00024F5C <AmiBlitz3.ab3@6850>    BEQ.w JL_0_5FB8
00024F60 <AmiBlitz3.ab3@6851>   CMP.w #$2E,D0
00024F64 <AmiBlitz3.ab3@6852>    BEQ.w JL_0_5FA0
00024F68 <AmiBlitz3.ab3@6853>   CMP.w #$28,D0
00024F6C <AmiBlitz3.ab3@6854>    BNE.w syntaxerr
00024F70 <AmiBlitz3.ab3@6855>    BSR.w get1bytemain                                      ;??wy not !fget
00024F74 <AmiBlitz3.ab3@6856>   ORI.w #$20,D0
00024F78 <AmiBlitz3.ab3@6857>   CMP.w #$70,D0
00024F7C <AmiBlitz3.ab3@6858>    BNE.w JL_0_5F98
00024F80 <AmiBlitz3.ab3@6859>    BSR.w get1bytemain                                      ;??wy not !fget
00024F84 <AmiBlitz3.ab3@6860>   ORI.w #$20,D0
00024F88 <AmiBlitz3.ab3@6861>   CMP.w #$63,D0
00024F8C <AmiBlitz3.ab3@6862>    BNE.w syntaxerr
00024F90 <AmiBlitz3.ab3@6863>    BSR.w get1bytemain                                      ;??wy not !fget
00024F94 <AmiBlitz3.ab3@6864>    BSR.w JL_0_5FD4
00024F96 <AmiBlitz3.ab3@6865>   ADDQ.w #4,D5
00024F98 <AmiBlitz3.ab3@6866> RTS
00024F9C <AmiBlitz3.ab3@6870>   BSR.w JL_0_5D46
00024FA0 <AmiBlitz3.ab3@6871> BRA.w JL_0_5FD4
00024FA4 <AmiBlitz3.ab3@6875>    BSR.w get1bytemain                                     ;??wy not !fget
00024FA8 <AmiBlitz3.ab3@6876>   ORI.w #$20,D0
00024FAC <AmiBlitz3.ab3@6877>   CMP.w #$77,D0
00024FB0 <AmiBlitz3.ab3@6878>    BEQ.w JL_0_5FBC
00024FB4 <AmiBlitz3.ab3@6879>   CMP.w #$6C,D0
00024FB8 <AmiBlitz3.ab3@6880>    BNE.w syntaxerr
00024FBA <AmiBlitz3.ab3@6883>   MOVEQ.l #$08,D5
00024FBC <AmiBlitz3.ab3@6884> RTS
00024FBE <AmiBlitz3.ab3@6888>   MOVEQ.l #$07,D5
00024FC0 <AmiBlitz3.ab3@6889> RTS
00024FC2 <AmiBlitz3.ab3@6893>   TST.w D0
00024FC6 <AmiBlitz3.ab3@6894>    BEQ.w JL_0_5FD2
00024FCA <AmiBlitz3.ab3@6895>   CMP.w #$3A,D0
00024FCE <AmiBlitz3.ab3@6896>    BEQ.w JL_0_5FD2
00024FD2 <AmiBlitz3.ab3@6897>   CMP.w #$2C,D0
00024FD4 <AmiBlitz3.ab3@6900> RTS
00024FD8 <AmiBlitz3.ab3@6904>   CMP.w #$2C,D0
00024FDC <AmiBlitz3.ab3@6905>    BNE.w JL_0_6054
00024FE0 <AmiBlitz3.ab3@6906>    BSR.w get1bytemain                                      ;??wy not !fget
00024FE4 <AmiBlitz3.ab3@6907>   ORI.w #$20,D0
00024FE6 <AmiBlitz3.ab3@6908>   MOVEQ.l #$00,D1
00024FEA <AmiBlitz3.ab3@6909>   CMP.w #$64,D0
00024FEE <AmiBlitz3.ab3@6910>    BEQ.w JL_0_5FFA
00024FF2 <AmiBlitz3.ab3@6911>   CMP.w #$61,D0
00024FF6 <AmiBlitz3.ab3@6912>    BNE.w syntaxerr
00024FFA <AmiBlitz3.ab3@6913>   BSET #$F,D1
00024FFE <AmiBlitz3.ab3@6916>    BSR.w get1bytemain                                      ;??wy not !fget
00025002 <AmiBlitz3.ab3@6917>   SUBI.w #$30,D0
00025006 <AmiBlitz3.ab3@6918>    BMI.w syntaxerr
0002500A <AmiBlitz3.ab3@6919>   CMP.w #$7,D0
0002500E <AmiBlitz3.ab3@6920>    BHI.w syntaxerr
00025010 <AmiBlitz3.ab3@6921>   LSL.w #8,D0
00025012 <AmiBlitz3.ab3@6922>   LSL.w #4,D0
00025014 <AmiBlitz3.ab3@6923>   OR.w D0,D1
00025018 <AmiBlitz3.ab3@6924>    BSR.w get1bytemain                                      ;??wy not !fget
0002501C <AmiBlitz3.ab3@6925>   CMP.w #$2E,D0
00025020 <AmiBlitz3.ab3@6926>    BNE.w JL_0_6040
00025024 <AmiBlitz3.ab3@6927>    BSR.w get1bytemain                                      ;??wy not !fget
00025028 <AmiBlitz3.ab3@6928>   ORI.w #$20,D0
0002502C <AmiBlitz3.ab3@6929>   CMP.w #$77,D0
00025030 <AmiBlitz3.ab3@6930>    BEQ.w JL_0_603C
00025034 <AmiBlitz3.ab3@6931>   CMP.w #$6C,D0
00025038 <AmiBlitz3.ab3@6932>    BNE.w syntaxerr
0002503C <AmiBlitz3.ab3@6933>   BSET #$B,D1
00025040 <AmiBlitz3.ab3@6936>    BSR.w get1bytemain                                      ;??wy not !fget
00025044 <AmiBlitz3.ab3@6939>    CMP.b #"*",d0                                           ;020 * Mode
00025048 <AmiBlitz3.ab3@6940>             BNE 'l1
0002504C <AmiBlitz3.ab3@6941>             BSR.w get1bytemain                             ;??wy not !fget
00025050 <AmiBlitz3.ab3@6942>             CMP.b #"2",d0
00025054 <AmiBlitz3.ab3@6943>             BNE 'l2
00025058 <AmiBlitz3.ab3@6944>             OR.w #$200,d1
0002505C <AmiBlitz3.ab3@6945> BRA 'l1b
00025060 <AmiBlitz3.ab3@6948>             CMP.b #"4",d0
00025064 <AmiBlitz3.ab3@6949>             BNE 'l3
00025068 <AmiBlitz3.ab3@6950>             OR.w #$400,d1
0002506C <AmiBlitz3.ab3@6951> BRA 'l1b
00025070 <AmiBlitz3.ab3@6954>             CMP.b #"8",d0
00025074 <AmiBlitz3.ab3@6955>             BNE syntaxerr
00025078 <AmiBlitz3.ab3@6956>             OR.w #$600,d1
0002507C <AmiBlitz3.ab3@6959>         BSR.w get1bytemain                                 ;??wy not !fget
00025080 <AmiBlitz3.ab3@6962>   CMP.w #$29,D0
00025084 <AmiBlitz3.ab3@6963>    BNE.w syntaxerr
0002508A <AmiBlitz3.ab3@6964>   MOVE.w D1,extraword
0002508C <AmiBlitz3.ab3@6965>   MOVEQ.l #$06,D5
00025090 <AmiBlitz3.ab3@6966> BRA.w get1bytemain                                         ;??wy not !fget
00025094 <AmiBlitz3.ab3@6970>   CMP.w #")",D0                                            ;")"
00025098 <AmiBlitz3.ab3@6971>    BNE.w errorbracketmiss                                  ; was syntax error
0002509A <AmiBlitz3.ab3@6972>   MOVEQ.l #$05,D5
0002509E <AmiBlitz3.ab3@6973> BRA.w get1bytemain                                         ;??wy not !fget
000250A4 <AmiBlitz3.ab3@6980>   MOVEA.l asmbuff,A0
000250AA <AmiBlitz3.ab3@6981>   MOVE.w ininclude,D1
000250B0 <AmiBlitz3.ab3@6982>   OR.w inmacro,D1
000250B2 <AmiBlitz3.ab3@6983>   MOVE.w D1,(A0)+                                          ;flag!
000250B6 <AmiBlitz3.ab3@6984>    BNE.w copyconst
000250B8 <AmiBlitz3.ab3@6985>   MOVE.l A5,-(A7)
000250BC <AmiBlitz3.ab3@6986>    BSR.w copyconst
000250C2 <AmiBlitz3.ab3@6987>   MOVEA.l asmbuff,A0
000250C6 <AmiBlitz3.ab3@6988>   CMP.w #$4,D1
000250CA <AmiBlitz3.ab3@6989>    BLS.w asmconst__leave
000250D0 <AmiBlitz3.ab3@6990>   TST.w lc
000250D4 <AmiBlitz3.ab3@6991>    BNE.w asmconst__leave
000250D6 <AmiBlitz3.ab3@6992>   ADDQ.w #2,A0
000250D8 <AmiBlitz3.ab3@6993>   MOVE.l (A7)+,(A0)+
000250DA <AmiBlitz3.ab3@6994>   CLR.b (A0)
000250E2 <AmiBlitz3.ab3@6995>   MOVE.w #$0004,asmlen2                                    ;pointer + 0
000250E4 <AmiBlitz3.ab3@6996> RTS
000250E6 <AmiBlitz3.ab3@7000>   NOT.w (A0)
000250E8 <AmiBlitz3.ab3@7001>   ADDQ.w #4,A7
000250EA <AmiBlitz3.ab3@7002> RTS
000250EC <AmiBlitz3.ab3@7005> lc:  Ds.w 1
000250F2 <AmiBlitz3.ab3@7009>   CLR.w lc
000250F4 <AmiBlitz3.ab3@7010>   MOVEQ.l #$00,D1
000250F6 <AmiBlitz3.ab3@7013>    ADDQ.w #1,D1                                            ;label name
00025122 <AmiBlitz3.ab3@7014>    !fget                                                   ;bsr.w get1bytemain
00025126 <AmiBlitz3.ab3@7015>    BEQ.w copyconst__done
0002512A <AmiBlitz3.ab3@7016>    CMP.w #$22,d0
0002512E <AmiBlitz3.ab3@7017>    BNE.s copyconst__loop_l10
00025134 <AmiBlitz3.ab3@7018>    NOT.w instringon
00025138 <AmiBlitz3.ab3@7021>    CMP.w #":",d0
0002513C <AmiBlitz3.ab3@7022>    BNE.s copyconst__loop_l11
00025142 <AmiBlitz3.ab3@7023>    TST.w instringon
00025146 <AmiBlitz3.ab3@7024>    BEQ copyconst__done
00025148 <AmiBlitz3.ab3@7027>   TST.w D0
0002514C <AmiBlitz3.ab3@7028>   BPL.w copyconst__notmi
0002514E <AmiBlitz3.ab3@7029>   MOVE.w D0,-(A7)
00025150 <AmiBlitz3.ab3@7030>   LSR.w #8,D0
00025152 <AmiBlitz3.ab3@7031>   MOVE.b D0,(A0)+
00025154 <AmiBlitz3.ab3@7032>   MOVE.w (A7)+,D0
00025156 <AmiBlitz3.ab3@7033>   MOVE.b D0,(A0)+
00025158 <AmiBlitz3.ab3@7034>   ADDQ.w #1,D1
0002515C <AmiBlitz3.ab3@7035> BRA.s copyconst__loop
00025162 <AmiBlitz3.ab3@7038>    TST.w instringon
00025166 <AmiBlitz3.ab3@7039>    BNE.w copyconst__putbyte
0002516C <AmiBlitz3.ab3@7040>    TST.b _dcb
00025170 <AmiBlitz3.ab3@7041>    BNE copyconst__notmi_l10
00025174 <AmiBlitz3.ab3@7042>    CMP.w #$28,D0
00025178 <AmiBlitz3.ab3@7043>    BEQ.w copyconst__done
0002517C <AmiBlitz3.ab3@7046>    CMP.w #$2C,D0
00025180 <AmiBlitz3.ab3@7047>    BEQ.w copyconst__done
00025184 <AmiBlitz3.ab3@7048>    CMP.b #"'",D0
00025188 <AmiBlitz3.ab3@7049>    BNE.w copyconst__putbyte
0002518E <AmiBlitz3.ab3@7050>    MOVE.w D0,lc                                     ;locallabels
00025190 <AmiBlitz3.ab3@7051>    MOVE.l A1,-(A7)
00025196 <AmiBlitz3.ab3@7052>    LEA lastgloballabel,A1
00025198 <AmiBlitz3.ab3@7053>    TST.b (A1)
0002519C <AmiBlitz3.ab3@7054>    BEQ.w nolocerr
0002519E <AmiBlitz3.ab3@7057>   ADDQ.w #1,D1
000251A0 <AmiBlitz3.ab3@7058>   MOVE.b (A1)+,(A0)+
000251A4 <AmiBlitz3.ab3@7059>    BNE.w copyconst__cloop
000251A6 <AmiBlitz3.ab3@7060>   SUBQ.w #1,D1
000251A8 <AmiBlitz3.ab3@7061>   SUBQ.w #1,A0
000251AA <AmiBlitz3.ab3@7062>   MOVEA.l (A7)+,A1
000251AC <AmiBlitz3.ab3@7065>   MOVE.b D0,(A0)+
000251B0 <AmiBlitz3.ab3@7066> BRA.w copyconst__loop
000251B2 <AmiBlitz3.ab3@7069>   CLR.b (A0)
000251B8 <AmiBlitz3.ab3@7070>   MOVE.w D1,asmlen2
000251BA <AmiBlitz3.ab3@7071> RTS
000251C0 <AmiBlitz3.ab3@7076>   CMP.l #$80ad,d0
000251C4 <AmiBlitz3.ab3@7077>   BNE.s 'l12
000251CA <AmiBlitz3.ab3@7078> JMP bssseg
000251D0 <AmiBlitz3.ab3@7081>   CMP.l #$807f,d0
000251D4 <AmiBlitz3.ab3@7082>     BNE.s 'l13
000251DA <AmiBlitz3.ab3@7083> JMP chipseg
000251E0 <AmiBlitz3.ab3@7086>   ADDQ.l #1,destpointer                                    ;even
000251E8 <AmiBlitz3.ab3@7087>   BCLR #$0,destpointer+3
000251EC <AmiBlitz3.ab3@7088>   SUBI.w #$803C,D0
000251EE <AmiBlitz3.ab3@7089>   LSL.w #2,D0
000251F4 <AmiBlitz3.ab3@7090>   MOVEA.l #asmpnts,A0
000251F8 <AmiBlitz3.ab3@7091>   MOVEA.l $0(A0,D0.W),A0                                   ;begin inline assembler
000251FE <AmiBlitz3.ab3@7092>   MOVE.w D0,temp1
00025200 <AmiBlitz3.ab3@7093>   MOVE.l A0,-(A7)
00025202 <AmiBlitz3.ab3@7094>   MOVEQ.l #$01,D1
0002522E <AmiBlitz3.ab3@7095>    !fget                                                   ;bsr.w get1bytemain
00025232 <AmiBlitz3.ab3@7096>   CMP.w #$2E,D0
00025236 <AmiBlitz3.ab3@7097>    BNE.w JL_0_6184
00025262 <AmiBlitz3.ab3@7098>   !fget                                                    ;bsr.w get1bytemain
00025266 <AmiBlitz3.ab3@7099>   ORI.w #$20,D0
0002526A <AmiBlitz3.ab3@7100>   CMP.w #$77,D0                                            ;long
0002526E <AmiBlitz3.ab3@7101>    BEQ.w JL_0_618A
00025272 <AmiBlitz3.ab3@7102>   CMP.w #$62,D0                                            ;byte
00025276 <AmiBlitz3.ab3@7103>    BEQ.w JL_0_617A
0002527A <AmiBlitz3.ab3@7104>   CMP.w #$6C,D0                                            ;word
0002527E <AmiBlitz3.ab3@7105>    BEQ.w JL_0_6196
00025282 <AmiBlitz3.ab3@7106>   CMP.w #"s",d0
00025286 <AmiBlitz3.ab3@7107>   BNE syntaxerr
0002528A <AmiBlitz3.ab3@7108> BRA.w JL_0_617A
0002528C <AmiBlitz3.ab3@7111>   MOVEQ.l #$00,D1
00025290 <AmiBlitz3.ab3@7112>   MOVE.w $8(A0),D0
00025294 <AmiBlitz3.ab3@7113> BRA.w JL_0_619E
00025296 <AmiBlitz3.ab3@7116>   MOVEQ.l #$04,D1
0002529A <AmiBlitz3.ab3@7117> BRA.w JL_0_61AE
0002529C <AmiBlitz3.ab3@7120>   MOVEQ.l #$04,D1
000252A0 <AmiBlitz3.ab3@7121>   MOVE.w $8(A0),D0
000252A2 <AmiBlitz3.ab3@7122>   LSR.w #4,D0
000252A6 <AmiBlitz3.ab3@7123> BRA.w JL_0_619E
000252A8 <AmiBlitz3.ab3@7126>   MOVEQ.l #$08,D1
000252AC <AmiBlitz3.ab3@7127>   MOVE.w $8(A0),D0
000252AE <AmiBlitz3.ab3@7128>   LSR.w #8,D0
000252B2 <AmiBlitz3.ab3@7131>    ANDI.w #$F,D0
000252B6 <AmiBlitz3.ab3@7132>   CMP.w #$F,D0
000252BA <AmiBlitz3.ab3@7133>    BNE.w 'cl60
000252C2 <AmiBlitz3.ab3@7136>    CMP.l #"MULS",-6(a0)
000252C6 <AmiBlitz3.ab3@7137>    BNE 'c20
000252CC <AmiBlitz3.ab3@7138>    MOVE.l #$4c000800,d1
000252D2 <AmiBlitz3.ab3@7139> JMP do32
000252DA <AmiBlitz3.ab3@7142>    CMP.l #"MULU",-6(a0)
000252DE <AmiBlitz3.ab3@7143>    BNE 'c30
000252E4 <AmiBlitz3.ab3@7144>    MOVE.l #$4c000000,d1
000252EA <AmiBlitz3.ab3@7145> JMP do32
000252F2 <AmiBlitz3.ab3@7148>    CMP.l #"DIVS",-6(a0)
000252F6 <AmiBlitz3.ab3@7149>    BNE 'c40
000252FC <AmiBlitz3.ab3@7150>    MOVE.l #$4c400800,d1
00025302 <AmiBlitz3.ab3@7151> JMP do32
0002530A <AmiBlitz3.ab3@7154>    CMP.l #"DIVU",-6(a0)
0002530E <AmiBlitz3.ab3@7155>    BNE 'c50
00025314 <AmiBlitz3.ab3@7156>    MOVE.l #$4c400000,d1
0002531A <AmiBlitz3.ab3@7157> JMP do32
0002531E <AmiBlitz3.ab3@7160> BRA illsizeerr
0002534A <AmiBlitz3.ab3@7163>   !fget                                                    ;bsr.w get1bytemain
00025350 <AmiBlitz3.ab3@7166>   MOVE.w D1,asmsize
00025352 <AmiBlitz3.ab3@7167>   MOVEQ.l #-$01,D3
00025356 <AmiBlitz3.ab3@7168>    BSR.w reget
0002535A <AmiBlitz3.ab3@7169>    BEQ.w JL_0_6200
00025364 <AmiBlitz3.ab3@7170>   MOVE.l #ptr_parameterstore,asmbuff
0002536E <AmiBlitz3.ab3@7172>    MOVE.w oldqflag,instringon
00025374 <AmiBlitz3.ab3@7173>   MOVEA.l lastsourcepos,A5
00025378 <AmiBlitz3.ab3@7174>    BSR.w JL_0_5DC2
0002537A <AmiBlitz3.ab3@7175>   MOVE.l D4,D2                                             ;to src
0002537C <AmiBlitz3.ab3@7176>   MOVE.l D5,D3
00025386 <AmiBlitz3.ab3@7177>   MOVE.w asmlen2,asmlen
00025388 <AmiBlitz3.ab3@7178>   MOVEQ.l #-$01,D5
00025392 <AmiBlitz3.ab3@7179>   MOVE.w extraword,extraword2
00025396 <AmiBlitz3.ab3@7180>   CMP.w #$2C,D0                                            ;','
0002539A <AmiBlitz3.ab3@7181>    BNE.w JL_0_6200
000253A4 <AmiBlitz3.ab3@7182>   MOVE.l #namebuff2,asmbuff
000253A8 <AmiBlitz3.ab3@7183>    BSR.w JL_0_5DC2                                         ;dest
000253AA <AmiBlitz3.ab3@7186>   MOVEA.l (A7)+,A0
000253B0 <AmiBlitz3.ab3@7187>   MOVEA.l destpointer,A1
000253B2 <AmiBlitz3.ab3@7188>   MOVEA.l A1,A4
000253B4 <AmiBlitz3.ab3@7189>   ADDQ.w #2,A1
000253B6 <AmiBlitz3.ab3@7190>   MOVE.w (A0),D1
000253B8 <AmiBlitz3.ab3@7191>   TST.w D3
000253BC <AmiBlitz3.ab3@7192>    BMI.w JL_0_639E
000253C0 <AmiBlitz3.ab3@7193>   MOVE.w $E(A0),D0
000253C4 <AmiBlitz3.ab3@7194>    BPL.w JL_0_6264
000253C8 <AmiBlitz3.ab3@7195>   BTST #$0,D0
000253CC <AmiBlitz3.ab3@7196>    BEQ.w JL_0_6240
000253D0 <AmiBlitz3.ab3@7197>   CMP.w #$1,D5
000253D4 <AmiBlitz3.ab3@7198>    BNE.w JL_0_6240
000253D8 <AmiBlitz3.ab3@7199>   CMP.w #$E,D3
000253DC <AmiBlitz3.ab3@7200>    BEQ.w JL_0_6264
000253E2 <AmiBlitz3.ab3@7201>   MOVE.w temp1,D0
000253E4 <AmiBlitz3.ab3@7202>   ADDQ.w #4,D0
000253E8 <AmiBlitz3.ab3@7203> BRA.w JL_0_6256
000253EC <AmiBlitz3.ab3@7206>   BTST #$1,D0
000253F0 <AmiBlitz3.ab3@7207>    BEQ.w JL_0_6264
000253F4 <AmiBlitz3.ab3@7208>   CMP.w #$B,D3
000253F8 <AmiBlitz3.ab3@7209>    BNE.w JL_0_6264
000253FE <AmiBlitz3.ab3@7210>   MOVE.w temp1,D0
00025400 <AmiBlitz3.ab3@7213>   ADDQ.w #4,D0
00025406 <AmiBlitz3.ab3@7214>   MOVEA.l #asmpnts,A0
0002540A <AmiBlitz3.ab3@7215>   MOVEA.l $0(A0,D0.W),A0
0002540C <AmiBlitz3.ab3@7216>   MOVE.w (A0),D1
00025416 <AmiBlitz3.ab3@7219>   MOVE.l #ptr_parameterstore,buff1
00025420 <AmiBlitz3.ab3@7220>   MOVE.l #namebuff2,buff2
00025424 <AmiBlitz3.ab3@7221>   MOVE.l $A(A0),D0
00025428 <AmiBlitz3.ab3@7222>    BEQ.w JL_0_62DC
0002542A <AmiBlitz3.ab3@7223>   MOVEA.l D0,A3
00025430 <AmiBlitz3.ab3@7224>   MOVE.w asmsize,D6
00025432 <AmiBlitz3.ab3@7227>    JSR (A3)
00025436 <AmiBlitz3.ab3@7228>    BPL.w JL_0_629A
0002543A <AmiBlitz3.ab3@7229>   CMP.w #-$2,D0
0002543E <AmiBlitz3.ab3@7230>    BEQ.w illsizeerr
00025442 <AmiBlitz3.ab3@7231> BRA.w illeaerr
00025446 <AmiBlitz3.ab3@7234>   BEQ.w JL_0_62DC
00025448 <AmiBlitz3.ab3@7235>   EXG.l D2,D4
0002544A <AmiBlitz3.ab3@7236>   EXG.l D3,D5
00025450 <AmiBlitz3.ab3@7237>   MOVE.l extraword,D6
00025452 <AmiBlitz3.ab3@7238>   SWAP D6
00025458 <AmiBlitz3.ab3@7239>   MOVE.l D6,extraword
00025462 <AmiBlitz3.ab3@7240>   MOVE.l #namebuff2,buff1
0002546C <AmiBlitz3.ab3@7241>   MOVE.l #ptr_parameterstore,buff2
00025472 <AmiBlitz3.ab3@7242>   MOVE.w asmlen,D6
00025478 <AmiBlitz3.ab3@7243>   MOVE.w asmlen2,D7
0002547E <AmiBlitz3.ab3@7244>   MOVE.w D6,asmlen2
00025484 <AmiBlitz3.ab3@7245>   MOVE.w D7,asmlen
0002548E <AmiBlitz3.ab3@7248>   MOVE.l buff1,asmbuff
00025492 <AmiBlitz3.ab3@7249>   MOVE.w $E(A0),D0
00025496 <AmiBlitz3.ab3@7250>    BEQ.w JL_0_6348
0002549A <AmiBlitz3.ab3@7251>    BMI.w JL_0_6348
0002549E <AmiBlitz3.ab3@7252>    CMP.w #$7000,d1
000254A2 <AmiBlitz3.ab3@7253>    BNE 'skip
000254A6 <AmiBlitz3.ab3@7254>    CMP.w #$b,d3
000254AA <AmiBlitz3.ab3@7255>    BNE illeaerr
000254AE <AmiBlitz3.ab3@7258>    CMP.w #$1,D0
000254B2 <AmiBlitz3.ab3@7259>    BNE.w JL_0_630E
000254B6 <AmiBlitz3.ab3@7260>    CMP.w #$B,D3
000254BA <AmiBlitz3.ab3@7261>    BNE.w JL_0_6348
000254BE <AmiBlitz3.ab3@7264>    BSR.w insasm
000254C0 <AmiBlitz3.ab3@7265>   MOVE.w D4,D2
000254C2 <AmiBlitz3.ab3@7266>   MOVE.w D5,D3
000254C6 <AmiBlitz3.ab3@7267> BRA.w JL_0_6364
000254CA <AmiBlitz3.ab3@7270>    CMP.w #$2,D0
000254CE <AmiBlitz3.ab3@7271>    BNE.w JL_0_6324
000254D2 <AmiBlitz3.ab3@7272>   CMP.w #$8,D3
000254D6 <AmiBlitz3.ab3@7273>    BNE.w illeaerr
000254D8 <AmiBlitz3.ab3@7274>   MOVEQ.l #$09,D3
000254DC <AmiBlitz3.ab3@7275> BRA.w JL_0_6348
000254E0 <AmiBlitz3.ab3@7278>    CMP.w #$3,D0
000254E4 <AmiBlitz3.ab3@7279>    BEQ.w JL_0_6302
000254E8 <AmiBlitz3.ab3@7280>   CMP.w #$4,D0
000254EC <AmiBlitz3.ab3@7281>    BEQ.w JL_0_6302
000254F0 <AmiBlitz3.ab3@7282>   CMP.w #$5,D0
000254F4 <AmiBlitz3.ab3@7283>    BNE.w JL_0_6348
000254F8 <AmiBlitz3.ab3@7284>   CMP.w #$8,D5
000254FC <AmiBlitz3.ab3@7285>    BNE.w illeaerr
000254FE <AmiBlitz3.ab3@7286>   OR.w D2,D1
00025500 <AmiBlitz3.ab3@7287>   MOVEQ.l #$09,D5
00025504 <AmiBlitz3.ab3@7290>   MOVE.w $2(A0),D6
00025508 <AmiBlitz3.ab3@7291>   MOVE.b $6(A0),D7
0002550C <AmiBlitz3.ab3@7292>   MOVEM.l D4-D5,-(A7)
00025512 <AmiBlitz3.ab3@7293>   MOVE.w extraword2,D4
00025516 <AmiBlitz3.ab3@7294>    BSR.w doea
0002551A <AmiBlitz3.ab3@7295>   MOVEM.l (A7)+,D2-D3
0002551C <AmiBlitz3.ab3@7296>   TST.w D3
00025520 <AmiBlitz3.ab3@7299>     BMI.w JL_0_6392
00025526 <AmiBlitz3.ab3@7300>   MOVE.w extraword,D4
0002552A <AmiBlitz3.ab3@7301>   MOVE.w $4(A0),D6
0002552E <AmiBlitz3.ab3@7302>   MOVE.b $7(A0),D7
00025538 <AmiBlitz3.ab3@7303>   MOVE.l buff2,asmbuff
00025542 <AmiBlitz3.ab3@7304>   MOVE.w asmlen2,asmlen
00025546 <AmiBlitz3.ab3@7305>    BSR.w doea
0002554A <AmiBlitz3.ab3@7306> BRA.w JL_0_63AA
0002554E <AmiBlitz3.ab3@7309>   MOVE.w $4(A0),D0
00025552 <AmiBlitz3.ab3@7310>    BNE.w illeaerr
00025556 <AmiBlitz3.ab3@7311> BRA.w JL_0_63AA
0002555A <AmiBlitz3.ab3@7315>   MOVE.w $2(A0),D0
0002555E <AmiBlitz3.ab3@7316>   OR.w $4(A0),D0
00025562 <AmiBlitz3.ab3@7317>    BNE.w illeaerr
00025566 <AmiBlitz3.ab3@7320>   MOVE.w $8(A0),D0
0002556A <AmiBlitz3.ab3@7321>   ANDI.w #$F000,D0
0002556E <AmiBlitz3.ab3@7322>   CMP.w #-$1000,D0
00025572 <AmiBlitz3.ab3@7323>    BEQ.w JL_0_63D2
00025574 <AmiBlitz3.ab3@7324>   LSR.w #8,D0
00025576 <AmiBlitz3.ab3@7325>   LSR.w #4,D0
0002557A <AmiBlitz3.ab3@7326>   MOVE.w $8(A0),D2
00025580 <AmiBlitz3.ab3@7327>   MOVE.w asmsize,D3
00025582 <AmiBlitz3.ab3@7328>   LSR.w D3,D2
00025586 <AmiBlitz3.ab3@7329>   ANDI.w #$F,D2
00025588 <AmiBlitz3.ab3@7330>   LSL.w D0,D2
0002558A <AmiBlitz3.ab3@7331>   OR.w D2,D1
00025590 <AmiBlitz3.ab3@7334>   CMPA.l destbufferend,A4
00025594 <AmiBlitz3.ab3@7335>    BCS.w JL_0_63E8
0002559C <AmiBlitz3.ab3@7337>   MOVE.w #$FFFF,dontwrite
000255A0 <AmiBlitz3.ab3@7338> BRA.w JL_0_63EA
000255A2 <AmiBlitz3.ab3@7341>   MOVE.w D1,(A4)
000255A8 <AmiBlitz3.ab3@7344>   MOVE.l A1,destpointer
000255AA <AmiBlitz3.ab3@7345> RTS
000255B0 <AmiBlitz3.ab3@7349>   MOVE.l destpointer,-(A7)
000255B6 <AmiBlitz3.ab3@7350>   MOVE.l A1,destpointer
000255BA <AmiBlitz3.ab3@7351>    BSR.w addoff
000255C0 <AmiBlitz3.ab3@7352>   MOVEA.l destpointer,A1
000255C6 <AmiBlitz3.ab3@7353>   MOVE.l (A7)+,destpointer
000255C8 <AmiBlitz3.ab3@7354> RTS
000255CC <AmiBlitz3.ab3@7358>   MOVEM.l d2-d6,-(a7)
000255D2 <AmiBlitz3.ab3@7359>   JSR stripspaces
000255D6 <AmiBlitz3.ab3@7360>   CMP.b #"d",(a5)+
000255DA <AmiBlitz3.ab3@7361>   BNE noreg
000255DC <AmiBlitz3.ab3@7362>   MOVE.b (a5)+,d0
000255E0 <AmiBlitz3.ab3@7363>   CMP.b #$30,d0
000255E4 <AmiBlitz3.ab3@7364>   BLT noreg
000255E8 <AmiBlitz3.ab3@7365>   CMP.b #$37,d0
000255EC <AmiBlitz3.ab3@7366>   BGT noreg
000255F0 <AmiBlitz3.ab3@7367>   SUB.b #$30,d0
000255F2 <AmiBlitz3.ab3@7368>   MOVEQ #0,d3
000255F4 <AmiBlitz3.ab3@7369>   MOVE.b d0,d3                                             ;reg1
000255F6 <AmiBlitz3.ab3@7370>   ASL.l #8,d3
000255F8 <AmiBlitz3.ab3@7371>   ASL.l #8,d3
000255FE <AmiBlitz3.ab3@7372>   JSR stripspaces
00025602 <AmiBlitz3.ab3@7373>   CMP.b #",",(a5)+
00025606 <AmiBlitz3.ab3@7374>   BNE noreg
0002560C <AmiBlitz3.ab3@7375>   JSR stripspaces
00025610 <AmiBlitz3.ab3@7376>   CMP.b #"d",(a5)+
00025614 <AmiBlitz3.ab3@7377>   BNE noreg
00025616 <AmiBlitz3.ab3@7378>   MOVE.b (a5)+,d0
0002561A <AmiBlitz3.ab3@7379>   CMP.b #$30,d0
0002561E <AmiBlitz3.ab3@7380>   BLT noreg
00025622 <AmiBlitz3.ab3@7381>   CMP.b #$37,d0
00025626 <AmiBlitz3.ab3@7382>   BGT noreg
0002562A <AmiBlitz3.ab3@7383>   SUB.b #$30,d0
0002562C <AmiBlitz3.ab3@7384>   MOVEQ #0,d4
0002562E <AmiBlitz3.ab3@7385>   MOVE.b d0,d4                                             ;reg2
00025630 <AmiBlitz3.ab3@7386>   ASL.l #8,d4
00025632 <AmiBlitz3.ab3@7387>   ASL.l #4,d4
00025634 <AmiBlitz3.ab3@7388>   OR.b d0,d1
00025636 <AmiBlitz3.ab3@7389>   OR.l d3,d1
00025638 <AmiBlitz3.ab3@7390>   OR.l d4,d1
0002563E <AmiBlitz3.ab3@7391>   JSR writelong
00025642 <AmiBlitz3.ab3@7392>   MOVEM.l (a7)+,d2-d6
00025646 <AmiBlitz3.ab3@7393>   MOVEM.l d1/a1-a3,-(a7)
0002564A <AmiBlitz3.ab3@7394> BRA exit
0002564E <AmiBlitz3.ab3@7398>   MOVEM.l (a7)+,d2-d6
00025654 <AmiBlitz3.ab3@7399>   LEA errtext,a0
00025656 <AmiBlitz3.ab3@7400>   MOVE.l a0,-(a7)
0002565C <AmiBlitz3.ab3@7401> JMP handle_compileerror
00025662 <AmiBlitz3.ab3@7410>   MOVE.w dontwrite,D1
00025666 <AmiBlitz3.ab3@7411>    BNE.w asmfixer__done
0002566E <AmiBlitz3.ab3@7412>   BTST #$7,make_smallestcode
00025672 <AmiBlitz3.ab3@7413>    BEQ.w asmfixer__go
00025676 <AmiBlitz3.ab3@7414>   MOVE.w pass(PC),D1
0002567A <AmiBlitz3.ab3@7415>    BEQ.w asmfixer__done
00025680 <AmiBlitz3.ab3@7418>   MOVEA.l templabel,A2                                     ;insert labels in Code
00025688 <AmiBlitz3.ab3@7419>   MOVE.b #1,curtemplabel
00025690 <AmiBlitz3.ab3@7420>   MOVE.w #$FFFF,constmode
00025696 <AmiBlitz3.ab3@7421>   CLR.w regnum
000256A0 <AmiBlitz3.ab3@7422>           MOVE.l #forthstack,forthsp
000256AA <AmiBlitz3.ab3@7423>           MOVE.l #precstack,precsp
000256AE <AmiBlitz3.ab3@7424>    BSR.w prepstack
000256B0 <AmiBlitz3.ab3@7427>   MOVE.l A2,-(A7)
000256B4 <AmiBlitz3.ab3@7428>    BSR.w chkstop
000256B6 <AmiBlitz3.ab3@7429>   MOVEA.l (A7)+,A2
000256BA <AmiBlitz3.ab3@7430>   CMPA.w #$0,A2
000256BE <AmiBlitz3.ab3@7431>    BEQ.w asmfixer__done2
000256C4 <AmiBlitz3.ab3@7432>    CLR.b iee
000256CA <AmiBlitz3.ab3@7433>   MOVE.l A2,asmbuff
000256CE <AmiBlitz3.ab3@7434>   LEA $10(A2),A5
000256D2 <AmiBlitz3.ab3@7435>   TST.b $F(A2)
000256D6 <AmiBlitz3.ab3@7436>    BNE.w asmfixer__skipo
000256D8 <AmiBlitz3.ab3@7437>   MOVEA.l (A5),A5                                          ;pointer to real text
000256DE <AmiBlitz3.ab3@7440>    CLR.w asmtype
000256E2 <AmiBlitz3.ab3@7441>    CMP.b #".",(a5)
000256E6 <AmiBlitz3.ab3@7442>    BNE.s asmfixer__skipo_l10
000256E8 <AmiBlitz3.ab3@7443>    MOVE.l a2,-(a7)
000256EA <AmiBlitz3.ab3@7444>    ADDQ.l #1,a5
000256F0 <AmiBlitz3.ab3@7445>    LEA newtypebase,a2
000256F4 <AmiBlitz3.ab3@7446>    BSR getparameter2
000256F8 <AmiBlitz3.ab3@7447>    BEQ.w syntaxerr
000256FC <AmiBlitz3.ab3@7448>    BSR findtype
00025700 <AmiBlitz3.ab3@7449>    BNE.w notypeerr
00025704 <AmiBlitz3.ab3@7450>    LEA $4(a2),a2
00025708 <AmiBlitz3.ab3@7451>    BSR getparameter2
0002570C <AmiBlitz3.ab3@7452>    BEQ.w syntaxerr
00025710 <AmiBlitz3.ab3@7453>    BSR.w findvariable2
00025714 <AmiBlitz3.ab3@7454>    BNE.w notypeerr
00025718 <AmiBlitz3.ab3@7455>    MOVE.w $4(a2),d3
0002571A <AmiBlitz3.ab3@7456>    EXT.l d3
0002571E <AmiBlitz3.ab3@7457> BRA asmfixer__skipo_l30b
00025722 <AmiBlitz3.ab3@7460>   CMP.b #"\",(a5)
00025726 <AmiBlitz3.ab3@7461>     BNE asmfixer__skipo_l20
00025728 <AmiBlitz3.ab3@7462>     ADDQ.l #1,a5
0002572A <AmiBlitz3.ab3@7463>    MOVE.l a2,-(a7)
0002572C <AmiBlitz3.ab3@7464>    MOVE.l a5,a4
00025732 <AmiBlitz3.ab3@7465>    LEA usedpath,a5
00025736 <AmiBlitz3.ab3@7466>    CMP.b #"*",(a5)
0002573A <AmiBlitz3.ab3@7467>    BNE asmfixer__skipo_lm1
0002573C <AmiBlitz3.ab3@7468>    ADDQ.l #1,a5
00025740 <AmiBlitz3.ab3@7471>    BSR.w getparameter2
00025744 <AmiBlitz3.ab3@7472>    BEQ.w syntaxerr
0002574A <AmiBlitz3.ab3@7473>    LEA varbase,A2
00025752 <AmiBlitz3.ab3@7474>    MOVE.b #1,newvariable
00025756 <AmiBlitz3.ab3@7475>    BSR.w findvariable
0002575C <AmiBlitz3.ab3@7476>    CLR.b newvariable
00025762 <AmiBlitz3.ab3@7477>    CMP.l #-1,d0
00025766 <AmiBlitz3.ab3@7478>    BEQ.w notypeerr
00025768 <AmiBlitz3.ab3@7479>    MOVE.l a4,a5
0002576C <AmiBlitz3.ab3@7480>    MOVE.l $a(a2),a2
00025770 <AmiBlitz3.ab3@7481>    LEA $4(a2),a2
00025774 <AmiBlitz3.ab3@7482>    BSR getparameter2
00025778 <AmiBlitz3.ab3@7483>    BEQ.w syntaxerr
0002577C <AmiBlitz3.ab3@7484>    BSR.w findvariable2
00025780 <AmiBlitz3.ab3@7485>    BNE.w notypeerr
00025784 <AmiBlitz3.ab3@7486>   MOVE.w $4(A2),D3
00025786 <AmiBlitz3.ab3@7487>   EXT.l D3
0002578C <AmiBlitz3.ab3@7490>    CMP.b #"[",-1(a5)
00025790 <AmiBlitz3.ab3@7491>    BNE asmfixer__skipo_l30c
00025792 <AmiBlitz3.ab3@7492>    MOVEQ #0,d0
00025794 <AmiBlitz3.ab3@7493>    MOVE.b (a5)+,d0
00025796 <AmiBlitz3.ab3@7494>    MOVE.l d3,-(a7)
00025798 <AmiBlitz3.ab3@7495>    MOVEQ #0,d3
0002579E <AmiBlitz3.ab3@7496>    JSR atoi
000257A0 <AmiBlitz3.ab3@7497>    MOVE.l (a7)+,d1
000257A4 <AmiBlitz3.ab3@7498>    MOVE.l $a(a2),a2
000257A8 <AmiBlitz3.ab3@7499>    MOVE.w 8(a2),d0
000257AA <AmiBlitz3.ab3@7500>    MULS d0,d3
000257AC <AmiBlitz3.ab3@7501>    ADD.l d1,d3
000257AE <AmiBlitz3.ab3@7504>   MOVE.l (a7)+,a2
000257B2 <AmiBlitz3.ab3@7505> BRA asmfixer__oko
000257B8 <AmiBlitz3.ab3@7508>   CMP.w #$c,$8(a2)
000257BC <AmiBlitz3.ab3@7509>      BEQ asmfixer__skipo_lf1
000257C2 <AmiBlitz3.ab3@7510>      CMP.w #$d,$8(a2)
000257C6 <AmiBlitz3.ab3@7511>      BEQ asmfixer__skipo_lf1
000257CC <AmiBlitz3.ab3@7514>   JSR AJL_0_BF6E
000257D2 <AmiBlitz3.ab3@7517>   MOVEA.l asmbuff,A2
000257D6 <AmiBlitz3.ab3@7518>    BEQ.w asmfixer__oko
000257DA <AmiBlitz3.ab3@7519>   CMP.w #$28,D0
000257DE <AmiBlitz3.ab3@7520>    BEQ.w asmfixer__oko
000257E2 <AmiBlitz3.ab3@7521>   CMP.w #$2C,D0
000257E6 <AmiBlitz3.ab3@7522>    BEQ.w asmfixer__oko
000257EA <AmiBlitz3.ab3@7523> BRA.w syntaxerr
000257F2 <AmiBlitz3.ab3@7526>   MOVE.b #1,iee
000257F6 <AmiBlitz3.ab3@7527> BRA asmfixer__skipo_lf2
000257FA <AmiBlitz3.ab3@7530>   MOVEA.l $4(A2),A1
000257FE <AmiBlitz3.ab3@7532>   MOVE.w $8(A2),D1                                         ;labelmode
00025802 <AmiBlitz3.ab3@7533>   CMP.w #$5,D1
00025806 <AmiBlitz3.ab3@7534>    BNE.w asmfixer__notdan
0002580A <AmiBlitz3.ab3@7537>    BSR.w chkword                                         ;word
0002580C <AmiBlitz3.ab3@7540>   MOVE.w D3,(A1)
00025810 <AmiBlitz3.ab3@7541> BRA.w asmfixer__next
00025814 <AmiBlitz3.ab3@7544>   CMP.w #$6,D1
00025818 <AmiBlitz3.ab3@7545>    BNE.w asmfixer__notdanxi
0002581C <AmiBlitz3.ab3@7548>    BSR.w chkbyte                                         ;byte
00025820 <AmiBlitz3.ab3@7551>   MOVE.b D3,$1(A1)
00025824 <AmiBlitz3.ab3@7552> BRA.w asmfixer__next
00025828 <AmiBlitz3.ab3@7555>    CMP.w #$11,D1                                           ;byte
0002582C <AmiBlitz3.ab3@7556>    BEQ.w asmfixer__isbyte2
00025830 <AmiBlitz3.ab3@7557>    CMP.w #$c,d1
00025834 <AmiBlitz3.ab3@7558>    BEQ asmfixer__single1
00025838 <AmiBlitz3.ab3@7559>    CMP.w #$d,d1
0002583C <AmiBlitz3.ab3@7560>    BEQ asmfixer__double1
00025840 <AmiBlitz3.ab3@7561>   CMP.w #$7,D1
00025844 <AmiBlitz3.ab3@7562>    BEQ.w asmfixer__word                                    ;word
00025848 <AmiBlitz3.ab3@7563>   CMP.w #$8,D1
0002584C <AmiBlitz3.ab3@7564>    BNE.w asmfixer__notabsl
00025852 <AmiBlitz3.ab3@7567>   MOVE.w asmtype,D1                                        ;long
00025856 <AmiBlitz3.ab3@7568>    BEQ.w asmfixer__notpcrel
0002585A <AmiBlitz3.ab3@7569>      BSR.w asmoff
0002585C <AmiBlitz3.ab3@7572>   MOVE.l D3,(A1)
00025860 <AmiBlitz3.ab3@7573> BRA.w asmfixer__next
00025866 <AmiBlitz3.ab3@7577>   fmove.s fp0,0(a1)
0002586A <AmiBlitz3.ab3@7578> BRA.w asmfixer__next
00025870 <AmiBlitz3.ab3@7582>   fmove.d fp0,0(a1)
00025874 <AmiBlitz3.ab3@7583> BRA.w asmfixer__next
00025878 <AmiBlitz3.ab3@7587>   CMP.w #$9,D1
0002587C <AmiBlitz3.ab3@7588>    BNE.w asmfixer__notdpc
0002587E <AmiBlitz3.ab3@7589>   SUB.l A1,D3                                              ;branchword
00025882 <AmiBlitz3.ab3@7590>    BSR.w chkword
00025884 <AmiBlitz3.ab3@7591>   MOVE.w D3,(A1)
00025888 <AmiBlitz3.ab3@7592> BRA.w asmfixer__next
0002588C <AmiBlitz3.ab3@7596>   CMP.w #$A,D1
00025890 <AmiBlitz3.ab3@7597>    BNE.w asmfixer__imm
00025892 <AmiBlitz3.ab3@7598>   SUB.l A1,D3                                              ;branchbyte
00025896 <AmiBlitz3.ab3@7599> BRA.w asmfixer__isbyte
0002589A <AmiBlitz3.ab3@7603>   CMP.w #$11,d1
0002589E <AmiBlitz3.ab3@7604>   BLE asmfixer__imm_org
000258A0 <AmiBlitz3.ab3@7605>   MOVE.l a3,-(a7)
000258A6 <AmiBlitz3.ab3@7606>   LEA pluginbase,a3
000258AA <AmiBlitz3.ab3@7607>   MOVE.l 8(a2),a0
000258AC <AmiBlitz3.ab3@7608>   JSR (a0)                                                 ;hook
000258AE <AmiBlitz3.ab3@7609>   MOVE.l (a7)+,a3
000258B2 <AmiBlitz3.ab3@7610> BRA asmfixer__next
000258B6 <AmiBlitz3.ab3@7613>   MOVE.w $A(A2),D0
000258BA <AmiBlitz3.ab3@7614>    BEQ.w asmfixer__noflag
000258BE <AmiBlitz3.ab3@7615>   CMP.w #$1,D0
000258C2 <AmiBlitz3.ab3@7616>    BEQ.w asmfixer__tocount
000258C6 <AmiBlitz3.ab3@7617>   CMP.w #$3,D0
000258CA <AmiBlitz3.ab3@7618>    BEQ.w asmfixer__tomoveq
000258CE <AmiBlitz3.ab3@7619>   CMP.w #$4,D0
000258D2 <AmiBlitz3.ab3@7620>    BEQ.w asmfixer__totrap
000258D6 <AmiBlitz3.ab3@7623>   CMP.w #$B,D1                                             ;long
000258DA <AmiBlitz3.ab3@7624>    BEQ.w asmfixer__isabsl
000258DE <AmiBlitz3.ab3@7625> BRA asmfixer__word2                                              ;word
000258E4 <AmiBlitz3.ab3@7628>   CMP.l #$F,D3
000258E8 <AmiBlitz3.ab3@7629>    BHI.w illtraperr
000258EA <AmiBlitz3.ab3@7630>   OR.b D3,-(A1)
000258EE <AmiBlitz3.ab3@7631> BRA.w asmfixer__next
000258F4 <AmiBlitz3.ab3@7634>   CMP.l #$8,D3
000258F8 <AmiBlitz3.ab3@7635>    BHI.w illimmerr
000258FA <AmiBlitz3.ab3@7636>   TST.l D3
000258FE <AmiBlitz3.ab3@7637>    BEQ.w illimmerr
00025902 <AmiBlitz3.ab3@7638>   ANDI.w #$7,D3
00025904 <AmiBlitz3.ab3@7639>   LSL.w #8,D3
00025906 <AmiBlitz3.ab3@7640>   LSL.w #1,D3
00025908 <AmiBlitz3.ab3@7641>   OR.w D3,-(A1)
0002590C <AmiBlitz3.ab3@7642> BRA.w asmfixer__next
00025910 <AmiBlitz3.ab3@7645>    BSR.w chkbyte
00025912 <AmiBlitz3.ab3@7646>   MOVE.b D3,-(A1)
00025914 <AmiBlitz3.ab3@7649>   MOVEA.l (A2),A2
00025918 <AmiBlitz3.ab3@7650> BRA.w asmfixer__loop
0002591E <AmiBlitz3.ab3@7653>   CLR.w constmode
00025924 <AmiBlitz3.ab3@7656>   CLR.b curtemplabel
00025926 <AmiBlitz3.ab3@7657> RTS
00025928 <AmiBlitz3.ab3@7666>   BTST D3,D6
0002592C <AmiBlitz3.ab3@7667>    BEQ.w illeaerr
00025930 <AmiBlitz3.ab3@7668>    BSR.w makemode
00025934 <AmiBlitz3.ab3@7669>   CMP.w #$7,D3
00025938 <AmiBlitz3.ab3@7670>    BCS.w doea__skip
0002593A <AmiBlitz3.ab3@7671>   MOVE.w D3,D2
0002593C <AmiBlitz3.ab3@7672>   SUBQ.w #7,D2
00025940 <AmiBlitz3.ab3@7673>   CMP.w #$5,D2
00025944 <AmiBlitz3.ab3@7674>    BCS.w doea__skip0
00025946 <AmiBlitz3.ab3@7675>   MOVEQ.l #$04,D2
00025948 <AmiBlitz3.ab3@7678>   MOVEQ.l #$07,D3
0002594A <AmiBlitz3.ab3@7681>   MOVE.b D7,D0
0002594E <AmiBlitz3.ab3@7682>   ANDI.w #$F,D0
00025952 <AmiBlitz3.ab3@7683>   CMP.w #$F,D0
00025956 <AmiBlitz3.ab3@7684>    BEQ.w doea__skip2
00025958 <AmiBlitz3.ab3@7685>   LSL.w D0,D3
0002595A <AmiBlitz3.ab3@7686>   OR.w D3,D1
0002595C <AmiBlitz3.ab3@7689>   LSR.w #4,D7
00025960 <AmiBlitz3.ab3@7690>   ANDI.w #$F,D7
00025964 <AmiBlitz3.ab3@7691>   CMP.w #$F,D7
00025968 <AmiBlitz3.ab3@7692>    BEQ.w doea__skip3
0002596A <AmiBlitz3.ab3@7693>   LSL.w D7,D2
0002596C <AmiBlitz3.ab3@7694>   OR.w D2,D1
0002596E <AmiBlitz3.ab3@7697> RTS
00025974 <AmiBlitz3.ab3@7701>   CMP.l #$7F,D3
00025978 <AmiBlitz3.ab3@7702>    BGT.w illdiserr
0002597E <AmiBlitz3.ab3@7703>   CMP.l #$FFFFFF80,D3                                      ;#-128,d3 org source
00025982 <AmiBlitz3.ab3@7704>    BLT.w illdiserr
00025984 <AmiBlitz3.ab3@7705> RTS
0002598A <AmiBlitz3.ab3@7709>   CMP.l #$7fff,D3
0002598E <AmiBlitz3.ab3@7710>    BGT.w illdiserr
00025994 <AmiBlitz3.ab3@7711>   CMP.l #$FFFF8000,D3                                      ;#-32768,d3 org source
00025998 <AmiBlitz3.ab3@7712>    BLT.w illdiserr
0002599A <AmiBlitz3.ab3@7713> RTS
0002599C <AmiBlitz3.ab3@7718>   MOVE.b (a5)+,d0
0002599E <AmiBlitz3.ab3@7719>   CMP.b d1,d0
000259A2 <AmiBlitz3.ab3@7720>   BEQ 'll10
000259A4 <AmiBlitz3.ab3@7721>   TST.b d0
000259A8 <AmiBlitz3.ab3@7722>   BNE 'll20
000259AA <AmiBlitz3.ab3@7725>   SUBQ #1,a5
000259AC <AmiBlitz3.ab3@7726> RTS
000259AE <AmiBlitz3.ab3@7731>   MOVE.b (a5)+,d0
000259B2 <AmiBlitz3.ab3@7732>   CMP.b #",",d0
000259B6 <AmiBlitz3.ab3@7733>   BEQ 'll10
000259BA <AmiBlitz3.ab3@7734>   CMP.b #";",d0
000259BE <AmiBlitz3.ab3@7735>   BEQ 'll10
000259C2 <AmiBlitz3.ab3@7736>  CMP.b #":",d0
000259C6 <AmiBlitz3.ab3@7737>   BEQ 'll10
000259C8 <AmiBlitz3.ab3@7740>   TST.b d0
000259CC <AmiBlitz3.ab3@7741>   BNE 'll20
000259CE <AmiBlitz3.ab3@7744>   SUBQ #1,a5
000259D0 <AmiBlitz3.ab3@7745> RTS
000259D2 <AmiBlitz3.ab3@7749>   ADD.l a2,d1
000259D8 <AmiBlitz3.ab3@7750>   LEA tempspace,a1
000259DA <AmiBlitz3.ab3@7751>   MOVE.l d1,a0
000259DC <AmiBlitz3.ab3@7754>   MOVE.b (a0)+,(a1)+
000259E0 <AmiBlitz3.ab3@7755>   BNE.s 'l10
000259E2 <AmiBlitz3.ab3@7756>   SUBQ.l #1,a0
000259E4 <AmiBlitz3.ab3@7757>   SUBQ.l #1,a1
000259E6 <AmiBlitz3.ab3@7760>   MOVE.b (a5)+,(a1)+
000259EA <AmiBlitz3.ab3@7761>   BNE.s 'l20
000259EC <AmiBlitz3.ab3@7762>   CLR.b (a1)
000259F2 <AmiBlitz3.ab3@7763>   LEA tempspace,a5
000259F4 <AmiBlitz3.ab3@7764> RTS
000259F8 <AmiBlitz3.ab3@7768>   MOVEM.l D1-D2/A0,-(A7)
000259FA <AmiBlitz3.ab3@7769>   MOVE.l d0,d2
000259FC <AmiBlitz3.ab3@7770>   MOVEQ #0,d1
000259FE <AmiBlitz3.ab3@7771>   MOVE.l a5,a4
00025A00 <AmiBlitz3.ab3@7774>   ADDQ.l #1,d1
00025A02 <AmiBlitz3.ab3@7775>   MOVE.b (a5)+,d0
00025A06 <AmiBlitz3.ab3@7776>   CMP.b #",",d0
00025A0A <AmiBlitz3.ab3@7777>   BEQ 'll10
00025A0E <AmiBlitz3.ab3@7778>   CMP.b #";",d0
00025A12 <AmiBlitz3.ab3@7779>   BEQ 'll10
00025A16 <AmiBlitz3.ab3@7780>   CMP.b #":",d0
00025A1A <AmiBlitz3.ab3@7781>   BEQ 'll10
00025A1E <AmiBlitz3.ab3@7782>   CMP.b #"(",d0
00025A22 <AmiBlitz3.ab3@7783>   BEQ 'll10
00025A24 <AmiBlitz3.ab3@7784>   TST.b d0
00025A28 <AmiBlitz3.ab3@7785>   BNE 'll20
00025A2A <AmiBlitz3.ab3@7788>   SUBQ #1,a5
00025A2E <AmiBlitz3.ab3@7789>   CMP.b #"'",(a4)
00025A32 <AmiBlitz3.ab3@7790>   BEQ 'llocal
00025A38 <AmiBlitz3.ab3@7791>   TST.w inmacro
00025A3C <AmiBlitz3.ab3@7792>   BNE 'lmacro
00025A3E <AmiBlitz3.ab3@7793>   MOVEQ.l #$14+4,D0
00025A40 <AmiBlitz3.ab3@7794>   ADD.l d1,d0
00025A42 <AmiBlitz3.ab3@7795>   MOVE.l d1,-(a7)
00025A44 <AmiBlitz3.ab3@7796>   MOVEQ.l #$01,D1
00025A4A <AmiBlitz3.ab3@7797>   MOVEA.l _execbase,A6
00025A50 <AmiBlitz3.ab3@7798>   MOVE.l mempool2,a0
00025A54 <AmiBlitz3.ab3@7799>   JSR _AllocPooled(a6)
00025A56 <AmiBlitz3.ab3@7801>   MOVE.l (a7)+,d1
00025A58 <AmiBlitz3.ab3@7802>   TST.l d0
00025A5C <AmiBlitz3.ab3@7803>   BEQ nomemory
00025A5E <AmiBlitz3.ab3@7804>   MOVEA.l D0,A0
00025A66 <AmiBlitz3.ab3@7806>   MOVE.w linenumat+2,$A(A0)
00025A6C <AmiBlitz3.ab3@7808>   MOVE.l templabel,(A0)
00025A72 <AmiBlitz3.ab3@7809>   MOVE.l A0,templabel
00025A7A <AmiBlitz3.ab3@7810>   MOVE.l destpointer,$4(A0)
00025A7E <AmiBlitz3.ab3@7811>   MOVE.l d2,$8(A0)
00025A82 <AmiBlitz3.ab3@7812>   LEA $E(A0),A0
00025A86 <AmiBlitz3.ab3@7813>   MOVE.b #$14,(A0)+
00025A88 <AmiBlitz3.ab3@7814>   CLR.b (a0)+
00025A8A <AmiBlitz3.ab3@7816>   MOVE.l a0,d2
00025A8C <AmiBlitz3.ab3@7817>   ADDQ.l #4,d2
00025A8E <AmiBlitz3.ab3@7818>   MOVE.l d2,(a0)+
00025A90 <AmiBlitz3.ab3@7821>   MOVE.b (a4)+,(a0)+
00025A92 <AmiBlitz3.ab3@7822>   SUBQ.l #1,d1
00025A96 <AmiBlitz3.ab3@7823>   BNE 'lc1
00025A98 <AmiBlitz3.ab3@7824>   CLR.b (a0)+
00025A9E <AmiBlitz3.ab3@7825>   MOVE.w linenumat,(a0)
00025AA2 <AmiBlitz3.ab3@7826>   MOVEM.l (A7)+,D1-D2/A0
00025AA4 <AmiBlitz3.ab3@7827> RTS
00025AA6 <AmiBlitz3.ab3@7830>   MOVEQ.l #$10+2,D0
00025AA8 <AmiBlitz3.ab3@7831>   ADD.l d1,d0
00025AAC <AmiBlitz3.ab3@7832>   MOVEM.l a4/d3,-(a7)
00025AAE <AmiBlitz3.ab3@7833>   MOVE.l d1,d3
00025AB0 <AmiBlitz3.ab3@7834>   MOVEQ.l #$01,D1
00025AB6 <AmiBlitz3.ab3@7835>   MOVEA.l _execbase,A6
00025ABC <AmiBlitz3.ab3@7836>   MOVE.l mempool2,a0
00025AC0 <AmiBlitz3.ab3@7837>   JSR _AllocPooled(a6)
00025AC2 <AmiBlitz3.ab3@7839>   TST.l d0
00025AC6 <AmiBlitz3.ab3@7840>   BEQ nomemory
00025AC8 <AmiBlitz3.ab3@7841>   MOVEA.l D0,A0
00025AD0 <AmiBlitz3.ab3@7844>   MOVE.w linenumat+2,$C(A0)
00025AD6 <AmiBlitz3.ab3@7845>   MOVE.l templabel,(A0)
00025ADC <AmiBlitz3.ab3@7846>   MOVE.l A0,templabel
00025AE4 <AmiBlitz3.ab3@7847>   MOVE.l destpointer,$4(A0)
00025AE8 <AmiBlitz3.ab3@7848>   MOVE.l d2,$8(A0)
00025AEC <AmiBlitz3.ab3@7849>   LEA $E(A0),A0
00025AEE <AmiBlitz3.ab3@7850>   MOVE.b d3,(A0)+
00025AF4 <AmiBlitz3.ab3@7851>   ADD.b #$10,-1(a0)
00025AF8 <AmiBlitz3.ab3@7852>   MOVE.b #$1,(a0)+
00025AFA <AmiBlitz3.ab3@7853>   SUBQ.w #1,d3
00025AFC <AmiBlitz3.ab3@7856>   MOVE.b (a4)+,(a0)+
00025AFE <AmiBlitz3.ab3@7857>   SUBQ.l #1,d3
00025B02 <AmiBlitz3.ab3@7858>   BNE.s 'lm2
00025B04 <AmiBlitz3.ab3@7859>   CLR.b (a0)+
00025B0A <AmiBlitz3.ab3@7860>   MOVE.w linenumat,(a0)
00025B0E <AmiBlitz3.ab3@7861>   MOVEM.l (a7)+,d3/a4
00025B12 <AmiBlitz3.ab3@7862>   MOVEM.l (A7)+,D1-D2/A0
00025B14 <AmiBlitz3.ab3@7863> RTS
00025B1A <AmiBlitz3.ab3@7866>   LEA lastgloballabel,a1
00025B1C <AmiBlitz3.ab3@7869>   ADDQ.l #1,d1
00025B1E <AmiBlitz3.ab3@7870>   TST.b (a1)+
00025B22 <AmiBlitz3.ab3@7871>   BNE.s 'll11
00025B24 <AmiBlitz3.ab3@7872>   MOVEQ.l #$10+2,D0
00025B26 <AmiBlitz3.ab3@7873>   ADD.l d1,d0
00025B2A <AmiBlitz3.ab3@7874>   MOVEM.l a4/d3,-(a7)
00025B2C <AmiBlitz3.ab3@7875>   MOVE.l d1,d3
00025B2E <AmiBlitz3.ab3@7876>   MOVEQ.l #$01,D1
00025B34 <AmiBlitz3.ab3@7877>   MOVEA.l _execbase,A6
00025B3A <AmiBlitz3.ab3@7878>   MOVE.l mempool2,a0
00025B3E <AmiBlitz3.ab3@7879>   JSR _AllocPooled(a6)
00025B40 <AmiBlitz3.ab3@7881>   TST.l d0
00025B44 <AmiBlitz3.ab3@7882>   BEQ nomemory
00025B46 <AmiBlitz3.ab3@7883>   MOVEA.l D0,A0
00025B4E <AmiBlitz3.ab3@7886>   MOVE.w linenumat+2,$C(A0)
00025B54 <AmiBlitz3.ab3@7887>   MOVE.l templabel,(A0)
00025B5A <AmiBlitz3.ab3@7888>   MOVE.l A0,templabel
00025B62 <AmiBlitz3.ab3@7889>   MOVE.l destpointer,$4(A0)
00025B66 <AmiBlitz3.ab3@7890>   MOVE.l d2,$8(A0)
00025B6A <AmiBlitz3.ab3@7891>   LEA $E(A0),A0
00025B6C <AmiBlitz3.ab3@7892>   MOVE.b d3,(A0)+
00025B72 <AmiBlitz3.ab3@7893>   ADD.b #$10,-1(a0)
00025B76 <AmiBlitz3.ab3@7894>   MOVE.b #$1,(a0)+
00025B78 <AmiBlitz3.ab3@7895>   SUBQ.w #1,d3
00025B7E <AmiBlitz3.ab3@7896>   LEA lastgloballabel,a1
00025B80 <AmiBlitz3.ab3@7899>   SUBQ.l #1,d3
00025B82 <AmiBlitz3.ab3@7900>   MOVE.b (a1)+,(a0)+
00025B86 <AmiBlitz3.ab3@7901>   BNE.s 'lm3
00025B88 <AmiBlitz3.ab3@7902>   SUBQ.l #1,a0
00025B8A <AmiBlitz3.ab3@7905>   MOVE.b (a4)+,(a0)+
00025B8C <AmiBlitz3.ab3@7906>   SUBQ.l #1,d3
00025B90 <AmiBlitz3.ab3@7907>   BNE.s 'lm1
00025B92 <AmiBlitz3.ab3@7908>   CLR.b (a0)+
00025B98 <AmiBlitz3.ab3@7909>   MOVE.w linenumat,(a0)
00025B9C <AmiBlitz3.ab3@7910>   MOVEM.l (a7)+,d3/a4
00025BA0 <AmiBlitz3.ab3@7911>   MOVEM.l (A7)+,D1-D2/A0
00025BA2 <AmiBlitz3.ab3@7912> RTS
00025BCC <AmiBlitz3.ab3@7916>   !basic
00025C2E <AmiBlitz3.ab3@7917>   error{!TRANS{"No memory available!!!\\nAB3 will terminate due to low memory!"}}
00025C40 <AmiBlitz3.ab3@7918>   loop Delay_ 1
00025C46 <AmiBlitz3.ab3@7919> Goto loop
00025C4A <AmiBlitz3.ab3@7923>   MOVEM.l D0-D2/A0,-(A7)
00025C4E <AmiBlitz3.ab3@7924>   MOVE.w $E(A0),-(A7)
00025C52 <AmiBlitz3.ab3@7925>    BPL.w insasm__ok
00025C54 <AmiBlitz3.ab3@7926>   CLR.w (A7)
00025C56 <AmiBlitz3.ab3@7929>   MOVE.l A1,-(A7)
00025C58 <AmiBlitz3.ab3@7930>   MOVEQ.l #$10+2,D0
00025C5E <AmiBlitz3.ab3@7931>   ADD.w asmlen,D0
00025C60 <AmiBlitz3.ab3@7932>   MOVE.w D0,D2
00025C62 <AmiBlitz3.ab3@7933>   MOVEQ.l #$01,D1
00025C68 <AmiBlitz3.ab3@7934>   MOVEA.l _execbase,A6
00025C6E <AmiBlitz3.ab3@7935>   MOVE.l mempool2,a0
00025C72 <AmiBlitz3.ab3@7936>   JSR _AllocPooled(a6)
00025C74 <AmiBlitz3.ab3@7938>   MOVEA.l D0,A0
00025C7C <AmiBlitz3.ab3@7941>   MOVE.w linenumat+2,$C(A0)
00025C82 <AmiBlitz3.ab3@7942>   MOVE.l templabel,(A0)
00025C88 <AmiBlitz3.ab3@7943>   MOVE.l A0,templabel
00025C8C <AmiBlitz3.ab3@7944>   MOVE.l (A7),$4(A0)
00025C90 <AmiBlitz3.ab3@7945>   MOVE.w d3,$8(A0)
00025C96 <AmiBlitz3.ab3@7946>   MOVE.w $4(A7),$A(A0)
00025C9A <AmiBlitz3.ab3@7947>   LEA $E(A0),A0
00025C9C <AmiBlitz3.ab3@7948>   MOVE.b D2,(A0)+                                           ;length
00025CA2 <AmiBlitz3.ab3@7949>   MOVEA.l asmbuff,A1
00025CA4 <AmiBlitz3.ab3@7950>   ADDQ.w #1,A1
00025CA6 <AmiBlitz3.ab3@7951>   MOVE.b (A1)+,(A0)+                                        ;type - 0 = indirect,else direct
00025CAA <AmiBlitz3.ab3@7952>    BNE.w insasm__loop
00025CAC <AmiBlitz3.ab3@7953>   MOVE.l (A1)+,(A0)+
00025CB2 <AmiBlitz3.ab3@7954>   MOVE.w linenumat,(a0)
00025CB6 <AmiBlitz3.ab3@7955> BRA.w insasm__loopdone
00025CB8 <AmiBlitz3.ab3@7958>    MOVE.b (A1)+,(A0)+
00025CBC <AmiBlitz3.ab3@7959>    BNE.w insasm__loop
00025CC2 <AmiBlitz3.ab3@7960>    MOVE.w linenumat,(a0)
00025CC4 <AmiBlitz3.ab3@7963>   MOVEA.l (A7)+,A1
00025CC6 <AmiBlitz3.ab3@7964>   ADDQ.w #2,A7
00025CCA <AmiBlitz3.ab3@7965>   MOVEM.l (A7)+,D0-D2/A0
00025CCC <AmiBlitz3.ab3@7966> RTS
00025CD0 <AmiBlitz3.ab3@7970>   CMP.w #$5,D3
00025CD4 <AmiBlitz3.ab3@7971>    BCS.w makemode__done
00025CD8 <AmiBlitz3.ab3@7972>   CMP.w #$B,D3
00025CDC <AmiBlitz3.ab3@7973>    BHI.w makemode__done2
00025CE0 <AmiBlitz3.ab3@7974>    BEQ.w makemode__imm
00025CE4 <AmiBlitz3.ab3@7975>    BSR.w insasm
00025CE8 <AmiBlitz3.ab3@7976>   CMP.w #$5,D3
00025CEC <AmiBlitz3.ab3@7977>    BEQ.w makemode__word
00025CF0 <AmiBlitz3.ab3@7978>   CMP.w #$6,D3
00025CF4 <AmiBlitz3.ab3@7979>    BEQ.w makemode__dxi
00025CF8 <AmiBlitz3.ab3@7980>   CMP.w #$7,D3
00025CFC <AmiBlitz3.ab3@7981>    BEQ.w makemode__word
00025D00 <AmiBlitz3.ab3@7982>   CMP.w #$8,D3
00025D04 <AmiBlitz3.ab3@7983>    BEQ.w makemode__long
00025D08 <AmiBlitz3.ab3@7984>   CMP.w #$9,D3
00025D0C <AmiBlitz3.ab3@7985>    BEQ.w makemode__word
00025D12 <AmiBlitz3.ab3@7989>   CMPA.l destbufferend,A1
00025D16 <AmiBlitz3.ab3@7990>    BCS.w makemode__ok7
00025D18 <AmiBlitz3.ab3@7991>   ADDQ.w #2,A1
00025D1A <AmiBlitz3.ab3@7992> RTS
00025D1C <AmiBlitz3.ab3@7995>   MOVE.w D4,(A1)+
00025D1E <AmiBlitz3.ab3@7996> RTS
00025D26 <AmiBlitz3.ab3@7999>   CMPI.w #$8,asmsize
00025D2A <AmiBlitz3.ab3@8000>    BCC.w makemode__immlong
00025D2C <AmiBlitz3.ab3@8001>   MOVEQ.l #$10,D3
00025D30 <AmiBlitz3.ab3@8002>    BSR.w insasm
00025D32 <AmiBlitz3.ab3@8003>   MOVEQ.l #$0B,D3
00025D36 <AmiBlitz3.ab3@8004> BRA.w makemode__word
00025D3A <AmiBlitz3.ab3@8007>   BSR.w insasm
00025D3C <AmiBlitz3.ab3@8010>   ADDQ.w #2,A1
00025D3E <AmiBlitz3.ab3@8013>   ADDQ.w #2,A1
00025D40 <AmiBlitz3.ab3@8014> RTS
00025D44 <AmiBlitz3.ab3@8017>   CMP.w #$F,D3
00025D48 <AmiBlitz3.ab3@8018>    BNE.w makemode__done
00025D4E <AmiBlitz3.ab3@8019>   CMPA.l destbufferend,A1
00025D52 <AmiBlitz3.ab3@8020>    BCS.w makemode__ok3
00025D54 <AmiBlitz3.ab3@8021>   ADDQ.w #2,A1
00025D56 <AmiBlitz3.ab3@8022>   ADDQ.w #4,A7
00025D58 <AmiBlitz3.ab3@8023> RTS
00025D5A <AmiBlitz3.ab3@8026>   MOVE.w D2,(A1)+
00025D5C <AmiBlitz3.ab3@8027>   ADDQ.w #4,A7
00025D5E <AmiBlitz3.ab3@8030> RTS
00025D62 <AmiBlitz3.ab3@8034>   BSR.w storeloc
00025D6C <AmiBlitz3.ab3@8035>   MOVE.l linenumat,oldline
00025D6E <AmiBlitz3.ab3@8036>   MOVEQ.l #$00,D1
00025D72 <AmiBlitz3.ab3@8037>    BSR.w get1bytemain
00025D76 <AmiBlitz3.ab3@8038>    BEQ.w JL_0_676E
00025D78 <AmiBlitz3.ab3@8039>   MOVEQ.l #$00,D3
00025D7C <AmiBlitz3.ab3@8040> BRA.w JL_0_6726
00025D80 <AmiBlitz3.ab3@8043>    BSR.w get1bytemain
00025D84 <AmiBlitz3.ab3@8044>    BNE.w JL_0_671C
00025D86 <AmiBlitz3.ab3@8047>   TST.w D3
00025D8A <AmiBlitz3.ab3@8048>    BNE.w brackets_                                         ;syntax error brackets
00025D8E <AmiBlitz3.ab3@8049> BRA.w JL_0_676C
00025D94 <AmiBlitz3.ab3@8052>    MOVE.w instringon,D4
00025D98 <AmiBlitz3.ab3@8054>      BEQ JL_0_6726
00025D9A <AmiBlitz3.ab3@8057>     MOVEQ #0,d0
00025D9C <AmiBlitz3.ab3@8058>      MOVE.b (a5)+,d0                                       ;fix "ue"
00025DA2 <AmiBlitz3.ab3@8059>      MOVE.w d0,lastchar
00025DA6 <AmiBlitz3.ab3@8060>      BEQ ready
00025DAA <AmiBlitz3.ab3@8061>      CMP.b #$22,d0
00025DAE <AmiBlitz3.ab3@8062>      BNE 'l1
00025DB4 <AmiBlitz3.ab3@8063>      NOT.w instringon
00025DB8 <AmiBlitz3.ab3@8064> BRA JL_0_670A
00025DBC <AmiBlitz3.ab3@8067>            CMP.b #"@",d0                                   ;expand line @@ 1. for parameter
00025DC0 <AmiBlitz3.ab3@8068>            BNE 'l10
00025DC4 <AmiBlitz3.ab3@8069>            CMP.b #"@",(a5)
00025DC8 <AmiBlitz3.ab3@8070>            BNE 'l10
00025DCE <AmiBlitz3.ab3@8073>            TST.w ininclude
00025DD2 <AmiBlitz3.ab3@8074>            BNE 'inc
00025DD8 <AmiBlitz3.ab3@8075>            MOVE.l sourceline3,a5
00025DDE <AmiBlitz3.ab3@8076>            CMP.l #0,a5
00025DE2 <AmiBlitz3.ab3@8077>            BNE 'l11t
00025DE8 <AmiBlitz3.ab3@8078>            MOVEA.l sourceline,A5
00025DEA <AmiBlitz3.ab3@8081>            MOVEA.l (A5),A5
00025DF0 <AmiBlitz3.ab3@8082>            CMP.l #0,a5
00025DF4 <AmiBlitz3.ab3@8083>            BEQ JL_0_676C
00025DFA <AmiBlitz3.ab3@8084>            MOVE.l a5,sourceline3
00025DFE <AmiBlitz3.ab3@8085>            LEA $9(A5),A5
00025E02 <AmiBlitz3.ab3@8086> BRA 'l11
00025E04 <AmiBlitz3.ab3@8089>            ADDQ.l #1,a5
00025E06 <AmiBlitz3.ab3@8090>            TST.b (a5)
00025E0A <AmiBlitz3.ab3@8091>            BNE 'inc
00025E0C <AmiBlitz3.ab3@8095>            ADDQ.l #1,a5
00025E0E <AmiBlitz3.ab3@8096>            TST.b (a5)
00025E12 <AmiBlitz3.ab3@8097>            BEQ illeolerr
00025E14 <AmiBlitz3.ab3@8098>            MOVE.l a5,-(a7)
00025E18 <AmiBlitz3.ab3@8101>       CMP.b #" ",(a5)+
00025E1C <AmiBlitz3.ab3@8102>       BEQ 'l110
00025E22 <AmiBlitz3.ab3@8103>        CMP.b #";",-1(a5)
00025E24 <AmiBlitz3.ab3@8104>        MOVE.l (a7)+,a5
00025E28 <AmiBlitz3.ab3@8105>        BEQ 'l111
00025E2C <AmiBlitz3.ab3@8106> BRA JL_0_670A
00025E30 <AmiBlitz3.ab3@8109>    CMP.w #$29,D0
00025E34 <AmiBlitz3.ab3@8110>    BNE.w JL_0_673A
00025E36 <AmiBlitz3.ab3@8111>   TST.w D3
00025E3A <AmiBlitz3.ab3@8112>    BEQ.w JL_0_676C
00025E3C <AmiBlitz3.ab3@8115>   SUBQ.w #1,D3
00025E40 <AmiBlitz3.ab3@8116> BRA.w JL_0_670A
00025E44 <AmiBlitz3.ab3@8119>    CMP.w #$7D,D0
00025E48 <AmiBlitz3.ab3@8120>    BEQ.w JL_0_6734
00025E4C <AmiBlitz3.ab3@8121>   CMP.w #$28,D0
00025E50 <AmiBlitz3.ab3@8122>    BNE.w JL_0_6750
00025E52 <AmiBlitz3.ab3@8125>    ADDQ.w #1,D3
00025E56 <AmiBlitz3.ab3@8126> BRA.w JL_0_670A
00025E5A <AmiBlitz3.ab3@8129>   CMP.w #$7B,D0
00025E5E <AmiBlitz3.ab3@8130>    BEQ.w JL_0_674A
00025E62 <AmiBlitz3.ab3@8131>   CMP.w #$2C,D0
00025E66 <AmiBlitz3.ab3@8132>    BNE.w JL_0_670A
00025E68 <AmiBlitz3.ab3@8133>   TST.w D3
00025E6C <AmiBlitz3.ab3@8134>    BNE.w JL_0_670A
00025E6E <AmiBlitz3.ab3@8135>   ADDQ.w #1,D1
00025E72 <AmiBlitz3.ab3@8136> BRA.w JL_0_670A
00025E74 <AmiBlitz3.ab3@8139>   ADDQ.w #1,D1
00025E7A <AmiBlitz3.ab3@8142>   CLR.l sourceline3
00025E84 <AmiBlitz3.ab3@8143>   MOVE.l oldline,linenumat
00025E88 <AmiBlitz3.ab3@8144> BRA.w resloc
00025E8E <AmiBlitz3.ab3@8148>    CLR.w numreps
00025E90 <AmiBlitz3.ab3@8149>   MOVE.w D1,D0
00025E94 <AmiBlitz3.ab3@8150>   ANDI.w #$FF00,D0
00025E98 <AmiBlitz3.ab3@8151>    BEQ.w fetchlibps__noreps
00025E9A <AmiBlitz3.ab3@8152>   LSR.w #8,D0
00025E9C <AmiBlitz3.ab3@8153>   LSR.w #4,D0
00025EA0 <AmiBlitz3.ab3@8154>    BEQ.w fetchlibps__skip
00025EA2 <AmiBlitz3.ab3@8155>   SUB.b D0,D1
00025EAC <AmiBlitz3.ab3@8156>    MOVE.w regnum,regnumfunc
00025EB2 <AmiBlitz3.ab3@8157>    MOVE.b funcparloop,-(a7)
00025EBA <AmiBlitz3.ab3@8158>    MOVE.b #0,funcparloop
00025EC0 <AmiBlitz3.ab3@8159>    MOVE.l leftsidetype,-(a7)
00025EC6 <AmiBlitz3.ab3@8160>    MOVE.l rightsidetype,-(a7)
00025ECC <AmiBlitz3.ab3@8161>    CLR.l leftsidetype
00025ED2 <AmiBlitz3.ab3@8162>    CLR.l rightsidetype
00025ED8 <AmiBlitz3.ab3@8163>    MOVE.b blitzparloop,-(a7)
00025EE0 <AmiBlitz3.ab3@8164>    MOVE.b #1,blitzparloop
00025EE4 <AmiBlitz3.ab3@8165>    BSR.w fetchpees2
00025EEA <AmiBlitz3.ab3@8166>    MOVE.b (a7)+,blitzparloop
00025EF0 <AmiBlitz3.ab3@8167>    MOVE.l (a7)+,rightsidetype
00025EF6 <AmiBlitz3.ab3@8168>    MOVE.l (a7)+,leftsidetype
00025EFC <AmiBlitz3.ab3@8169>    MOVE.b (a7)+,funcparloop
00025F00 <AmiBlitz3.ab3@8170>   CMP.w #$2C,D0
00025F04 <AmiBlitz3.ab3@8171>    BNE.w syntaxerr
00025F06 <AmiBlitz3.ab3@8174>   MOVE.w D1,D2
00025F08 <AmiBlitz3.ab3@8175>   LSR.w #8,D2
00025F0C <AmiBlitz3.ab3@8176>   ANDI.w #$7,D2
00025F0E <AmiBlitz3.ab3@8179>    CMP.b D2,D1
00025F12 <AmiBlitz3.ab3@8180>    BCS.w fetchlibps__repsdone
00025F14 <AmiBlitz3.ab3@8181>   SUB.b D2,D1
00025F18 <AmiBlitz3.ab3@8182>   MOVEM.l D2/A2,-(A7)
00025F1A <AmiBlitz3.ab3@8183>   MOVE.w D2,D0
00025F20 <AmiBlitz3.ab3@8184>   MOVE.b funcparloop,-(a7)
00025F28 <AmiBlitz3.ab3@8185>   MOVE.b #0,funcparloop
00025F2E <AmiBlitz3.ab3@8186>   MOVE.l leftsidetype,-(a7)
00025F34 <AmiBlitz3.ab3@8187>   MOVE.l rightsidetype,-(a7)
00025F3A <AmiBlitz3.ab3@8188>   CLR.l leftsidetype
00025F40 <AmiBlitz3.ab3@8189>   CLR.l rightsidetype
00025F46 <AmiBlitz3.ab3@8190>   MOVE.b blitzparloop,-(a7)
00025F4E <AmiBlitz3.ab3@8191>   MOVE.b #1,blitzparloop
00025F52 <AmiBlitz3.ab3@8192>   BSR.w fetchpees4
00025F58 <AmiBlitz3.ab3@8193>   MOVE.b (a7)+,blitzparloop
00025F5E <AmiBlitz3.ab3@8194>   MOVE.l (a7)+,rightsidetype
00025F64 <AmiBlitz3.ab3@8195>   MOVE.l (a7)+,leftsidetype
00025F6A <AmiBlitz3.ab3@8196>   MOVE.b (a7)+,funcparloop
00025F6E <AmiBlitz3.ab3@8197>   MOVEM.l (A7)+,D2/A2
00025F74 <AmiBlitz3.ab3@8198>   ADDQ.w #1,numreps
00025F78 <AmiBlitz3.ab3@8199> BRA.w fetchlibps__rloop
00025F7E <AmiBlitz3.ab3@8202>    MOVE.w numreps,D3
00025F82 <AmiBlitz3.ab3@8203>    BEQ.w syntaxerr
00025F84 <AmiBlitz3.ab3@8204>   ADDA.w D2,A2
00025F88 <AmiBlitz3.ab3@8205>   ANDI.w #$FF,D1
00025F8C <AmiBlitz3.ab3@8206>    BEQ.w fetchlibps__done
00025F90 <AmiBlitz3.ab3@8207>   CMP.w #$2C,D0
00025F94 <AmiBlitz3.ab3@8208>    BNE.w syntaxerr
00025F96 <AmiBlitz3.ab3@8211>    MOVE.w D1,D0
00025F9A <AmiBlitz3.ab3@8212>    BNE.w fetchpees2b
00025F9C <AmiBlitz3.ab3@8215> RTS
00025FA2 <AmiBlitz3.ab3@8218>   MOVE.b funcparloop,-(a7)
00025FA8 <AmiBlitz3.ab3@8219>   MOVE.l leftsidetype,-(a7)
00025FAE <AmiBlitz3.ab3@8220>   MOVE.l rightsidetype,-(a7)
00025FB4 <AmiBlitz3.ab3@8221>   CLR.l leftsidetype
00025FBA <AmiBlitz3.ab3@8222>   CLR.l rightsidetype
00025FC2 <AmiBlitz3.ab3@8223>   MOVE.b #0,funcparloop
00025FC8 <AmiBlitz3.ab3@8224>   MOVE.b blitzparloop,-(a7)
00025FD0 <AmiBlitz3.ab3@8225>   MOVE.b #1,blitzparloop
00025FD4 <AmiBlitz3.ab3@8226>   BSR.w fetchpees2
00025FDA <AmiBlitz3.ab3@8227>   MOVE.b (a7)+,blitzparloop
00025FE0 <AmiBlitz3.ab3@8228>   MOVE.l (a7)+,rightsidetype
00025FE6 <AmiBlitz3.ab3@8229>   MOVE.l (a7)+,leftsidetype
00025FEC <AmiBlitz3.ab3@8230>   MOVE.b (a7)+,funcparloop
00025FEE <AmiBlitz3.ab3@8231> RTS
00025FF2 <AmiBlitz3.ab3@8235> ptype:    Dc.b $3F,$3C,$00,$00                             ;MOVE.W  #$0000,-(A7)
00025FF4 <AmiBlitz3.ab3@8238> partostack:  Ds.w 1                                        ;pmode org source
00025FF6 <AmiBlitz3.ab3@8242>   MOVEQ.l #$01,D2
00025FFA <AmiBlitz3.ab3@8243> BRA.w fetchpees3
00025FFC <AmiBlitz3.ab3@8246>   MOVEQ.l #$00,D2
00026000 <AmiBlitz3.ab3@8249>   ANDI.w #$F,D0
00026006 <AmiBlitz3.ab3@8257>   CLR.w parnum
00026008 <AmiBlitz3.ab3@8258>   MOVE.w D1,-(A7)
0002600C <AmiBlitz3.ab3@8259>   MOVE.w partostack(PC),-(A7)                              ;in case of recursion
00026012 <AmiBlitz3.ab3@8260>   MOVE.w D2,partostack
00026014 <AmiBlitz3.ab3@8261>   MOVE.w D0,-(A7)
00026018 <AmiBlitz3.ab3@8262>   CMP.w #"@@",(a5)                                         ;was l15
0002601C <AmiBlitz3.ab3@8263>   BNE fetchpees__loop
00026022 <AmiBlitz3.ab3@8264>   TST.w ininclude                                          ;merge macrolines
00026026 <AmiBlitz3.ab3@8265>   BNE errorjoin
0002602C <AmiBlitz3.ab3@8266>        MOVEA.l sourceline,A5
0002602E <AmiBlitz3.ab3@8269>            MOVEA.l (A5),A5
00026034 <AmiBlitz3.ab3@8270>            MOVE.l a5,sourceline
00026038 <AmiBlitz3.ab3@8271>            LEA $9(A5),A5
0002603E <AmiBlitz3.ab3@8272>            ADDQ.l #1,linenumat
00026040 <AmiBlitz3.ab3@8276>   MOVE.b (A2)+,D2                                          ;parameterloop   d2=vartype
00026044 <AmiBlitz3.ab3@8277>    BNE.w fetchpees__skip0
0002604A <AmiBlitz3.ab3@8278>   MOVE.w userp,D2                                          ;user selected type
0002604C <AmiBlitz3.ab3@8280>    MOVE.l A2,-(A7)
00026052 <AmiBlitz3.ab3@8281>    ADDQ.w #1,parnum
00026058 <AmiBlitz3.ab3@8282>    TST.b funccall
0002605C <AmiBlitz3.ab3@8283>    BEQ fetchpees__skip0_l1
00026064 <AmiBlitz3.ab3@8284>    CMP.w #6,parnum
00026068 <AmiBlitz3.ab3@8285>    BLE fetchpees__skip0_l1
0002606C <AmiBlitz3.ab3@8286>    CMP.w #7,d2
00026072 <AmiBlitz3.ab3@8292>    TST.b fpu
00026076 <AmiBlitz3.ab3@8293>    BEQ fetchpees__skip0_old
0002607C <AmiBlitz3.ab3@8294>    TST.w regnumfunc
00026080 <AmiBlitz3.ab3@8295>    BEQ fetchpees__skip0_old
00026086 <AmiBlitz3.ab3@8296>    CMP.w #$48e7,-4(a4)
0002608A <AmiBlitz3.ab3@8297>    BNE fetchpees__skip0_old
0002608C <AmiBlitz3.ab3@8298>    MOVEQ #0,d1
00026092 <AmiBlitz3.ab3@8299>    MOVE.w regnum,d1
00026098 <AmiBlitz3.ab3@8300>    CMP regnumfunc,d1                                       ;fpu reg function save
0002609C <AmiBlitz3.ab3@8301>    BGE fetchpees__skip0_old
0002609E <AmiBlitz3.ab3@8302>    ASL.w #7,d1
000260A0 <AmiBlitz3.ab3@8303>    MOVE.l d0,-(a7)
000260A6 <AmiBlitz3.ab3@8304>    MOVE.w regnumfunc,d0
000260AC <AmiBlitz3.ab3@8305>    CLR.w regmask
000260B2 <AmiBlitz3.ab3@8307>    BSET d0,regmask
000260B4 <AmiBlitz3.ab3@8308>    SUBQ #1,d0
000260B8 <AmiBlitz3.ab3@8309>    BNE fetchpees__skip0_loop
000260BA <AmiBlitz3.ab3@8310>     MOVEQ #0,d0
000260C0 <AmiBlitz3.ab3@8313>       BTST d0,regmask
000260C4 <AmiBlitz3.ab3@8314>       BEQ fetchpees__skip0_noa7
000260C6 <AmiBlitz3.ab3@8315>       MOVEQ #0,d1
000260C8 <AmiBlitz3.ab3@8316>       MOVE.w d0,d1
000260CA <AmiBlitz3.ab3@8317>       SUBQ.w #1,d1
000260CC <AmiBlitz3.ab3@8318>       ASL #7,d1
000260D2 <AmiBlitz3.ab3@8319>       OR.l #$f2277400,d1                                   ;fmove.d
000260D6 <AmiBlitz3.ab3@8321>       BSR writelong
000260DC <AmiBlitz3.ab3@8323>       ADDQ.l #2,stacktrack
000260E2 <AmiBlitz3.ab3@8324>       MOVE.l stacktrack,d1
000260E8 <AmiBlitz3.ab3@8325>       CMP.l #180,d1
000260EC <AmiBlitz3.ab3@8326>       BGT conmemerr                                        ;formel too complex
000260EE <AmiBlitz3.ab3@8327>       MOVE.l a0,-(a7)
000260F4 <AmiBlitz3.ab3@8328>       LEA fpustackbase,a0
000260FC <AmiBlitz3.ab3@8329>       MOVE.w regmask,0(a0,d1)
000260FE <AmiBlitz3.ab3@8330>       MOVE.l (a7)+,a0
00026100 <AmiBlitz3.ab3@8333>       ADDQ.w #1,d0
00026106 <AmiBlitz3.ab3@8334>       CMP.w regnumfunc,d0
0002610A <AmiBlitz3.ab3@8335>       BLE fetchpees__skip0_loop2
0002610C <AmiBlitz3.ab3@8338>       MOVE.l (a7)+,d0
00026112 <AmiBlitz3.ab3@8341>      MOVE.l currentfunccall,-(a7)
00026118 <AmiBlitz3.ab3@8342>      MOVE.w parnum,-(a7)
0002611E <AmiBlitz3.ab3@8343>      TST.l rightsidetype
00026122 <AmiBlitz3.ab3@8344>      BSR.w JL_0_6836
00026128 <AmiBlitz3.ab3@8345>      MOVE.w (a7)+,parnum
0002612E <AmiBlitz3.ab3@8347>    MOVE.l (a7)+,currentfunccall
00026134 <AmiBlitz3.ab3@8349>    TST.b typecheck                            ;typecheck for function call
00026138 <AmiBlitz3.ab3@8350>    BEQ 'notypecheck
0002613E <AmiBlitz3.ab3@8351>    TST.b notypecheck
00026142 <AmiBlitz3.ab3@8352>    BNE 'notypecheck
00026148 <AmiBlitz3.ab3@8353>    TST.b blitzparloop
0002614C <AmiBlitz3.ab3@8354>    BNE 'isblitzlibcall                                    ;no typecheck for blitzlibs currently
00026156 <AmiBlitz3.ab3@8355>    CMP.l #0,currentfunccall
0002615A <AmiBlitz3.ab3@8356>    BEQ 'isblitzlibcall
0002615E <AmiBlitz3.ab3@8357>    MOVEM.l a0/a1,-(a7)
00026164 <AmiBlitz3.ab3@8358>    MOVE.l currentfunccall,a0
0002616A <AmiBlitz3.ab3@8359>    MOVE.w parnum,d1
00026170 <AmiBlitz3.ab3@8360>    TST.b isconstantvalue
00026174 <AmiBlitz3.ab3@8361>    BEQ 'noconstant
0002617E <AmiBlitz3.ab3@8362>    CMP.l #0,lastconstantvalue
00026182 <AmiBlitz3.ab3@8363>    BEQ 'isnull
00026186 <AmiBlitz3.ab3@8365>    MOVE.l funcstruct_parametertype-4(a0,d1*4),a0
0002618C <AmiBlitz3.ab3@8366>    CMP.l #0,a0
00026190 <AmiBlitz3.ab3@8367>    BEQ 'notype
00026198 <AmiBlitz3.ab3@8368>    CMP.l #$100,4(a0)
0002619C <AmiBlitz3.ab3@8369>    BLE 'notype
000261A2 <AmiBlitz3.ab3@8370>    MOVE.l lasttoken,d1
000261A6 <AmiBlitz3.ab3@8371>    CMP.w #$b581,d1                   ; ok, when token for null
000261AA <AmiBlitz3.ab3@8372>    BEQ 'isnull
000261B0 <AmiBlitz3.ab3@8373>    TST.l typetocast
000261B4 <AmiBlitz3.ab3@8374>    BEQ 'nocast
000261BA <AmiBlitz3.ab3@8375>    MOVE.l typetocast,a1
000261BE <AmiBlitz3.ab3@8376>    BRA 'typecheck
000261C4 <AmiBlitz3.ab3@8378>    MOVE.l rightsidetype,a1
000261CA <AmiBlitz3.ab3@8379>    CMP.l #0,a1
000261CE <AmiBlitz3.ab3@8380>    BEQ 'notype
000261D6 <AmiBlitz3.ab3@8381> 'typecheck   CMP.l #$100,4(a1)
000261D8 <AmiBlitz3.ab3@8383>    CMP.l a0,a1
000261DC <AmiBlitz3.ab3@8384>    BEQ 'ok
000261E4 <AmiBlitz3.ab3@8386>    CMP.l #$100,4(a1)                 ; is a type here
000261E8 <AmiBlitz3.ab3@8387>    BLE 'error
000261EC <AmiBlitz3.ab3@8388>    MOVE.l 4(a1),a1                   ; load the address of type.
000261F0 <AmiBlitz3.ab3@8389>    CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
000261F4 <AmiBlitz3.ab3@8390>    BEQ 'ok
000261FA <AmiBlitz3.ab3@8391> 'error: JMP   error_convert_types    ; for syntax 4
00026200 <AmiBlitz3.ab3@8395>    CLR.l typetocast
00026204 <AmiBlitz3.ab3@8396>    MOVEM.l (a7)+,a0/a1
0002620A <AmiBlitz3.ab3@8400>    CLR.l lastfunction
00026210 <AmiBlitz3.ab3@8401>    TST.b fpu
00026214 <AmiBlitz3.ab3@8402>    BEQ fetchpees__skip0_noprint
00026216 <AmiBlitz3.ab3@8403>   MOVE.l (a7),a2
00026218 <AmiBlitz3.ab3@8404>   ADDQ.l #1,a2
0002621C <AmiBlitz3.ab3@8405>    CMP.b #5,d2
00026220 <AmiBlitz3.ab3@8406>   BNE fetchpees__skip0_noprint
00026226 <AmiBlitz3.ab3@8407>   CMP.b #$5d,24(a2)
0002622A <AmiBlitz3.ab3@8408>   BNE fetchpees__skip0_noprint
00026230 <AmiBlitz3.ab3@8409>   CMP.b #$81,25(a2)
00026234 <AmiBlitz3.ab3@8410>   BLT fetchpees__skip0_noprint
0002623A <AmiBlitz3.ab3@8411>   CMP.b #$86,25(a2)
0002623E <AmiBlitz3.ab3@8412>   BEQ fetchpees__skip0_ok
00026244 <AmiBlitz3.ab3@8413>   CMP.b #$87,25(a2)
00026248 <AmiBlitz3.ab3@8414>   BEQ fetchpees__skip0_ok
0002624E <AmiBlitz3.ab3@8415>   CMP.b #$88,25(a2)
00026252 <AmiBlitz3.ab3@8416>   BEQ fetchpees__skip0_ok
00026258 <AmiBlitz3.ab3@8417>   CMP.b #$83,25(a2)
0002625C <AmiBlitz3.ab3@8418>   BGT fetchpees__skip0_noprint
00026262 <AmiBlitz3.ab3@8421>   MOVE.l destpointer,a4
00026268 <AmiBlitz3.ab3@8422>   CMP.w #$2f00,-2(a4)
0002626C <AmiBlitz3.ab3@8423>   BNE fetchpees__skip0_noprint
00026272 <AmiBlitz3.ab3@8424>   SUBQ.l #2,destpointer
00026278 <AmiBlitz3.ab3@8426>   MOVE.l #$f2277400,d1
0002627C <AmiBlitz3.ab3@8427>   BSR writelong                                            ;fmove.d fp0,-(a7)
00026282 <AmiBlitz3.ab3@8428>   ADDQ #4,a2offset
00026288 <AmiBlitz3.ab3@8446>   CLR.b optistring
0002628A <AmiBlitz3.ab3@8447>   MOVEA.l (A7)+,A2
0002628E <AmiBlitz3.ab3@8448>    CMP.w #"@",d0
00026292 <AmiBlitz3.ab3@8449>   BNE fetchpees__skip0_l10
00026296 <AmiBlitz3.ab3@8450>    CMP.b #"@",(a5)
0002629A <AmiBlitz3.ab3@8451>   BNE fetchpees__skip0_l10
000262A0 <AmiBlitz3.ab3@8452>   TST.w ininclude
000262A4 <AmiBlitz3.ab3@8453>   BNE errorjoin
000262AA <AmiBlitz3.ab3@8454>   MOVEA.l sourceline,A5
000262AC <AmiBlitz3.ab3@8455>            MOVEA.l (A5),A5
000262B2 <AmiBlitz3.ab3@8456>            MOVE.l a5,sourceline
000262B8 <AmiBlitz3.ab3@8457>            ADDQ.l #1,linenumat
000262BC <AmiBlitz3.ab3@8458>            LEA $9(A5),A5
000262BE <AmiBlitz3.ab3@8459>            MOVEQ #0,d0
000262C2 <AmiBlitz3.ab3@8460>            BSR get1bytemain
000262C6 <AmiBlitz3.ab3@8463>    CMP.b #32,(a5)+ ;for space after a ,
000262CA <AmiBlitz3.ab3@8464>    BEQ fetchpees__skip0_l10:
000262CC <AmiBlitz3.ab3@8465>    SUBQ.l #1,a5
000262D0 <AmiBlitz3.ab3@8467>    CMP.w #"@@",(a5)                                        ;if merge
000262D4 <AmiBlitz3.ab3@8468>    BNE fetchpees__skip0_l15
000262D8 <AmiBlitz3.ab3@8469>    MOVEM.l d0-d7/a0-a4/a6,-(a7)
000262DE <AmiBlitz3.ab3@8470>    JSR mergeline
000262E2 <AmiBlitz3.ab3@8471>    MOVEM.l (a7)+,d0-d7/a0-a4/a6
000262E4 <AmiBlitz3.ab3@8491>       SUBQ.w #1,(A7)
000262E8 <AmiBlitz3.ab3@8492>    BEQ.w fetchpees__done
000262EC <AmiBlitz3.ab3@8494>     CMP.w #$2C,D0
000262F0 <AmiBlitz3.ab3@8496>    BNE overloadfunc
000262F4 <AmiBlitz3.ab3@8497> BRA.w fetchpees__loop
000262F6 <AmiBlitz3.ab3@8500>   ADDQ.w #2,A7
000262FC <AmiBlitz3.ab3@8501>   MOVE.w (A7)+,partostack
000262FE <AmiBlitz3.ab3@8502>   MOVE.w (A7)+,D1
00026304 <AmiBlitz3.ab3@8503>   CLR.b isconstantvalue
0002630E <AmiBlitz3.ab3@8504>   MOVE.l currentfunccall,lastfunction
00026314 <AmiBlitz3.ab3@8505>   CLR.b funccall
0002631A <AmiBlitz3.ab3@8506>   CLR.l currentfunccall
0002631C <AmiBlitz3.ab3@8507> RTS
00026322 <AmiBlitz3.ab3@8511>   CLR.b funccall
00026328 <AmiBlitz3.ab3@8512>   MOVE.w regnum,d1
0002632E <AmiBlitz3.ab3@8513>   MOVE.l currentfunccall,a4
00026332 <AmiBlitz3.ab3@8514>   CMP.b $20(a4),d1                                         ;increase if more pars
00026336 <AmiBlitz3.ab3@8515>   BLT notparerr
00026338 <AmiBlitz3.ab3@8518>   MOVE.b (a2)+,d2
00026340 <AmiBlitz3.ab3@8519>   ADD.w #1,parnum
00026346 <AmiBlitz3.ab3@8520>   TST.b fpu
0002634A <AmiBlitz3.ab3@8521>   BEQ 'nofpu
0002634E <AmiBlitz3.ab3@8522>   CMP.b #5,d2
00026352 <AmiBlitz3.ab3@8523>   BNE 'nofpu
00026354 <AmiBlitz3.ab3@8524>   MOVEQ #0,d1
0002635A <AmiBlitz3.ab3@8525>   MOVE.w regnum,d1
00026362 <AmiBlitz3.ab3@8526>   CMP.w #6,regnum
00026366 <AmiBlitz3.ab3@8527>   BLT 'nostack2
0002636A <AmiBlitz3.ab3@8532>   MOVE.w #$2c3c,d1
0002636E <AmiBlitz3.ab3@8533>   BSR writeword
00026374 <AmiBlitz3.ab3@8534>   MOVE.l #$bf800000,d1
00026378 <AmiBlitz3.ab3@8535>   BSR writelong
0002637C <AmiBlitz3.ab3@8536>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
00026382 <AmiBlitz3.ab3@8537>   ADD.w parnum,d1
00026388 <AmiBlitz3.ab3@8538>   JSR Atokejsr
0002638E <AmiBlitz3.ab3@8539>   TST.w dontwrite
00026392 <AmiBlitz3.ab3@8540>   BNE 'l1
00026398 <AmiBlitz3.ab3@8541>   MOVE.l data1start,d1
0002639E <AmiBlitz3.ab3@8542>   MOVE.l destpointer,a4
000263A2 <AmiBlitz3.ab3@8543>   ADD.l d1,-4(a4)
000263A8 <AmiBlitz3.ab3@8544>   MOVE.l destpointer,d1
000263AA <AmiBlitz3.ab3@8545>   SUBQ.l #4,d1
000263B0 <AmiBlitz3.ab3@8546>   SUB.l destbufferstart,d1
000263B2 <AmiBlitz3.ab3@8547>   MOVE.l d2,-(a7)
000263B4 <AmiBlitz3.ab3@8548>   MOVE.l d1,d2
000263BA <AmiBlitz3.ab3@8549>   JSR addhunkoffset
000263BC <AmiBlitz3.ab3@8550>   MOVE.l (a7)+,d2
000263C0 <AmiBlitz3.ab3@8551> BRA 'l1
000263C2 <AmiBlitz3.ab3@8554>   ASL.l #7,d1
000263C8 <AmiBlitz3.ab3@8555>   OR.l #$F23C5000,d1                                       ;fmove.w #-1,fpx
000263CC <AmiBlitz3.ab3@8556>   BSR writelong
000263CE <AmiBlitz3.ab3@8557>   MOVEQ #-1,d1                                             ;-1
000263D2 <AmiBlitz3.ab3@8558>   BSR writeword
000263D6 <AmiBlitz3.ab3@8559> BRA 'l1
000263DC <AmiBlitz3.ab3@8562>   MOVE.w regnum,d1
000263E4 <AmiBlitz3.ab3@8563>   CMP.w #6,regnum
000263E8 <AmiBlitz3.ab3@8564>   BLT 'nostack
000263EC <AmiBlitz3.ab3@8569>   CMP.b #2,d2
000263F0 <AmiBlitz3.ab3@8570>   BGT 'nw
000263F4 <AmiBlitz3.ab3@8571> BRA 'nos
000263F8 <AmiBlitz3.ab3@8580>   CMP.w #7,d2
000263FC <AmiBlitz3.ab3@8581>   BNE 'nos
00026402 <AmiBlitz3.ab3@8582>   ADDQ #4,a2offset
00026408 <AmiBlitz3.ab3@8584>     MOVE.l #$48780000,d1
0002640C <AmiBlitz3.ab3@8585>     BSR writelong
00026412 <AmiBlitz3.ab3@8586>     ADDQ.w #4,a2offset
00026416 <AmiBlitz3.ab3@8587>     MOVE.w #$2f3c,d1
0002641A <AmiBlitz3.ab3@8588>     BSR writeword
00026420 <AmiBlitz3.ab3@8589>     MOVE.l #-1,d1
00026424 <AmiBlitz3.ab3@8590>     BSR writelong
00026428 <AmiBlitz3.ab3@8591>   BRA 'l1
0002642C <AmiBlitz3.ab3@8595>   CMP.b #4,d2
00026430 <AmiBlitz3.ab3@8596>       BNE 'noq
00026434 <AmiBlitz3.ab3@8597>       MOVE.w #$2c3c,d1
00026438 <AmiBlitz3.ab3@8598>       BSR writeword
0002643E <AmiBlitz3.ab3@8599>       MOVE.l #$ffff0000,d1
00026442 <AmiBlitz3.ab3@8600>       BSR writelong
00026446 <AmiBlitz3.ab3@8601> BRA 'noq2
0002644A <AmiBlitz3.ab3@8604>      CMP.b #5,d2
0002644E <AmiBlitz3.ab3@8605>      BNE 'nof
00026452 <AmiBlitz3.ab3@8606>       MOVE.w #$2c3c,d1
00026456 <AmiBlitz3.ab3@8607>       BSR writeword
0002645C <AmiBlitz3.ab3@8608>       MOVE.l #$800000c1,d1
00026460 <AmiBlitz3.ab3@8609>       BSR writelong
00026464 <AmiBlitz3.ab3@8610> BRA 'noq2
00026468 <AmiBlitz3.ab3@8613>   MOVE.w #$7cff,d1
0002646C <AmiBlitz3.ab3@8614>   BSR writeword
00026470 <AmiBlitz3.ab3@8617>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
00026476 <AmiBlitz3.ab3@8618>   ADD.w parnum,d1
0002647C <AmiBlitz3.ab3@8619>   JSR Atokejsr
00026482 <AmiBlitz3.ab3@8620>    TST.w dontwrite
00026486 <AmiBlitz3.ab3@8621>    BNE 'l1
0002648C <AmiBlitz3.ab3@8622>    MOVE.l data1start,d1
00026492 <AmiBlitz3.ab3@8623>    MOVE.l destpointer,a4
00026496 <AmiBlitz3.ab3@8624>    ADD.l d1,-4(a4)
0002649C <AmiBlitz3.ab3@8625>    MOVE.l destpointer,d1
0002649E <AmiBlitz3.ab3@8626>    SUBQ.l #4,d1
000264A4 <AmiBlitz3.ab3@8627>    SUB.l destbufferstart,d1
000264A6 <AmiBlitz3.ab3@8628>    MOVE.l d2,-(a7)
000264A8 <AmiBlitz3.ab3@8629>    MOVE.l d1,d2
000264AE <AmiBlitz3.ab3@8630>    JSR addhunkoffset
000264B0 <AmiBlitz3.ab3@8631>    MOVE.l (a7)+,d2
000264B4 <AmiBlitz3.ab3@8632> BRA 'l1
000264B6 <AmiBlitz3.ab3@8635>   ASL.l #8,d1
000264B8 <AmiBlitz3.ab3@8636>   ASL.l #1,d1
000264BE <AmiBlitz3.ab3@8637>   OR.l #$203c,d1                                           ;-1
000264C2 <AmiBlitz3.ab3@8638>   BSR writeword
000264C8 <AmiBlitz3.ab3@8639>   MOVE.l #-1,d1
000264CC <AmiBlitz3.ab3@8640>   CMP.b #4,d2
000264D0 <AmiBlitz3.ab3@8641>   BNE 'nq1
000264D6 <AmiBlitz3.ab3@8642>   MOVE.l #$ffff0000,d1
000264DA <AmiBlitz3.ab3@8645>   CMP.b #5,d2
000264DE <AmiBlitz3.ab3@8646>   BNE 'nof2
000264E4 <AmiBlitz3.ab3@8647>   TST.b fpu
000264E8 <AmiBlitz3.ab3@8648>   BNE 'nof2
000264EE <AmiBlitz3.ab3@8649>   MOVE.l #$800000c1,d1
000264F2 <AmiBlitz3.ab3@8652>    BSR writelong
000264F6 <AmiBlitz3.ab3@8653>    CMP.b #7,d2
000264FA <AmiBlitz3.ab3@8654>    BNE 'l1
00026500 <AmiBlitz3.ab3@8656>      MOVE.l #$48780000,d1
00026504 <AmiBlitz3.ab3@8657>      BSR writelong
0002650A <AmiBlitz3.ab3@8659>    ADDQ.w #4,a2offset                                      ; bug fix for string parameters
00026510 <AmiBlitz3.ab3@8660>    MOVE.l #$594f,d1                                        ; subq #4,a7
00026514 <AmiBlitz3.ab3@8661>    BSR writeword
00026516 <AmiBlitz3.ab3@8664>    SUBQ.w #1,(A7)
0002651A <AmiBlitz3.ab3@8665>    BEQ.w fetchpees__done
00026520 <AmiBlitz3.ab3@8666>    ADDQ.w #1,regnum
00026524 <AmiBlitz3.ab3@8667> BRA 'ol2
00026526 <AmiBlitz3.ab3@8670>    MOVE.w D2,D1
0002652A <AmiBlitz3.ab3@8671>    ANDI.w #$40,D1
00026530 <AmiBlitz3.ab3@8672>    MOVE.b D1,partostack
00026532 <AmiBlitz3.ab3@8673>    TST.b D2
00026536 <AmiBlitz3.ab3@8674>     BMI.w handlevara
0002653A <AmiBlitz3.ab3@8675>    BTST #$5,D2
0002653E <AmiBlitz3.ab3@8676>     BNE.w handlearr
00026544 <AmiBlitz3.ab3@8677>     MOVE.w regnumstore,-(a7)
0002654A <AmiBlitz3.ab3@8678>     MOVE.w tempregnum,-(a7)
00026550 <AmiBlitz3.ab3@8679>     MOVE.w parnum,-(a7)
00026554 <AmiBlitz3.ab3@8680>     BSR.w getap                                        ;recursive entry
0002655A <AmiBlitz3.ab3@8681>     MOVE.w (a7)+,parnum
00026560 <AmiBlitz3.ab3@8682>     MOVE.w (a7)+,tempregnum
00026566 <AmiBlitz3.ab3@8683>     MOVE.w (a7)+,regnumstore
0002656A <AmiBlitz3.ab3@8686>     MOVE.w partostack(PC),D1
0002656E <AmiBlitz3.ab3@8687>     BEQ.w JL_0_6886
00026574 <AmiBlitz3.ab3@8690>    ADDQ.w #4,a2offset
0002657A <AmiBlitz3.ab3@8693>    MOVE.w pushdn,D1
00026580 <AmiBlitz3.ab3@8694>    OR.w regnum,D1
00026584 <AmiBlitz3.ab3@8695>    CMP.w #$3,D2
00026588 <AmiBlitz3.ab3@8696>     BCC.w JL_0_6880
0002658E <AmiBlitz3.ab3@8697>    SUBQ.w #2,a2offset
00026592 <AmiBlitz3.ab3@8698>    ORI.w #$1000,D1
00026596 <AmiBlitz3.ab3@8699>    BSR.w writeword
00026598 <AmiBlitz3.ab3@8700> RTS
0002659C <AmiBlitz3.ab3@8703>   CMP.b #7,d2
000265A0 <AmiBlitz3.ab3@8704>    BNE 'l10
000265A8 <AmiBlitz3.ab3@8705>    CMP.b #2,optistring
000265AE <AmiBlitz3.ab3@8709>   TST.b iee
000265B2 <AmiBlitz3.ab3@8710>   BEQ 'old
000265B6 <AmiBlitz3.ab3@8711>   CMP.b #5,d2
000265BA <AmiBlitz3.ab3@8712>   BNE 'old
000265BE <AmiBlitz3.ab3@8715>   BSR.w writeword                                          ;write val to stack
000265C0 <AmiBlitz3.ab3@8716> RTS
000265C6 <AmiBlitz3.ab3@8719>   SUBQ.w #4,a2offset
000265C8 <AmiBlitz3.ab3@8720> RTS
000265CE <AmiBlitz3.ab3@8723>   ADDQ.w #1,regnum
000265D0 <AmiBlitz3.ab3@8724> RTS
000265D2 <AmiBlitz3.ab3@8728>   MOVEQ.l #$03,D2
000265D6 <AmiBlitz3.ab3@8729> BRA.w JL_0_6854
000265DA <AmiBlitz3.ab3@8733>   ANDI.w #$7,D2
000265DC <AmiBlitz3.ab3@8734>   MOVE.w D2,-(A7)
000265E0 <AmiBlitz3.ab3@8735>    BSR.w JL_0_A916
000265E4 <AmiBlitz3.ab3@8736>   CMP.b #$7,D2                                             ;ignore pnt to $
000265E8 <AmiBlitz3.ab3@8737>    BEQ.w JL_0_68C0
000265EC <AmiBlitz3.ab3@8738>   BTST #$E,D2
000265F0 <AmiBlitz3.ab3@8739>    BEQ.w JL_0_68B6
000265F4 <AmiBlitz3.ab3@8740>   MOVE.b #$3,D2                                            ;pointer to long
000265F8 <AmiBlitz3.ab3@8741> BRA.w JL_0_68C0
000265FA <AmiBlitz3.ab3@8744>    TST.b D2
000265FE <AmiBlitz3.ab3@8745>    BNE.w JL_0_68C0
00026602 <AmiBlitz3.ab3@8746>   MOVE.b #$3,D2
00026604 <AmiBlitz3.ab3@8749>   MOVE.w (A7)+,D3
00026606 <AmiBlitz3.ab3@8750>   TST.b D3
0002660A <AmiBlitz3.ab3@8751>    BEQ.w JL_0_68D2
0002660C <AmiBlitz3.ab3@8752>   CMP.b D2,D3
00026610 <AmiBlitz3.ab3@8753>    BEQ.w putalp
00026614 <AmiBlitz3.ab3@8754> BRA.w mismatcherr
0002661A <AmiBlitz3.ab3@8757>   ADDQ.w #2,a2offset
0002661E <AmiBlitz3.ab3@8758>   MOVE.w ptype(PC),D1
00026622 <AmiBlitz3.ab3@8759>    BSR.w writeword
00026624 <AmiBlitz3.ab3@8760>   MOVEQ.l #$00,D1
00026626 <AmiBlitz3.ab3@8761>   MOVE.b D2,D1
0002662A <AmiBlitz3.ab3@8762>    BSR.w writeword
0002662E <AmiBlitz3.ab3@8763> BRA.w putalp
00026630 <AmiBlitz3.ab3@8766>    MOVE.w D2,-(A7)
00026634 <AmiBlitz3.ab3@8767>    BSR.w JL_0_694E
0002663A <AmiBlitz3.ab3@8768>   BTST #$4,$1(A7)
0002663E <AmiBlitz3.ab3@8769>    BEQ.w JL_0_6900
00026642 <AmiBlitz3.ab3@8770>    BSR.w JL_0_699A
00026648 <AmiBlitz3.ab3@8773>    BTST #$3,$1(A7)
0002664C <AmiBlitz3.ab3@8774>    BEQ.w JL_0_690E
00026650 <AmiBlitz3.ab3@8775>    BSR.w sendtype
00026652 <AmiBlitz3.ab3@8778>    MOVE.w (A7)+,D2
00026656 <AmiBlitz3.ab3@8779> BRA.w get1bytemain
0002665C <AmiBlitz3.ab3@8782>   MOVE.w regnum,D1
0002665E <AmiBlitz3.ab3@8783>   LSL.w #8,D1
00026660 <AmiBlitz3.ab3@8784>   LSL.w #1,D1
00026664 <AmiBlitz3.ab3@8785>   ORI.w #$7000,D1
0002666A <AmiBlitz3.ab3@8786>   BTST #$0,$7(A3)
0002666E <AmiBlitz3.ab3@8787>    BNE.w JL_0_6946                                         ;A Pointer
00026676 <AmiBlitz3.ab3@8788>   CMPI.l #$100,$4(A2)
0002667A <AmiBlitz3.ab3@8789>    BCC.w arrerr1                                           ;illegal type to send
0002667E <AmiBlitz3.ab3@8790>   MOVE.b $7(A2),D1
00026682 <AmiBlitz3.ab3@8793>   BSR.w writeword                                          ;moveq #type,d regat
00026684 <AmiBlitz3.ab3@8794>   MOVEQ.l #$02,D2                                          ;just a word.
00026688 <AmiBlitz3.ab3@8795> BRA.w JL_0_685C
0002668C <AmiBlitz3.ab3@8798>   MOVE.b #$3,D1
00026690 <AmiBlitz3.ab3@8799> BRA.w JL_0_693C
00026694 <AmiBlitz3.ab3@8803>    BSR.w get1bytemain                                      ;write array paramter code
00026698 <AmiBlitz3.ab3@8804>    BSR.w getparameter
000266A0 <AmiBlitz3.ab3@8805>   BTST #$1,flagmask+1
000266A4 <AmiBlitz3.ab3@8806>    BEQ.w syntaxerr
000266A8 <AmiBlitz3.ab3@8807>    BSR.w JL_0_8E3C
000266AC <AmiBlitz3.ab3@8808>    BSR.w get1bytemain
000266B0 <AmiBlitz3.ab3@8809>   CMP.w #$29,D0                                            ;we just want a() or whatever
000266B4 <AmiBlitz3.ab3@8810>    BNE.w syntaxerr
000266BA <AmiBlitz3.ab3@8811>   MOVE.w notshared,D1
000266BE <AmiBlitz3.ab3@8812>    BNE.w noarrayerr
000266C4 <AmiBlitz3.ab3@8813>   MOVE.w regnum,D1
000266C6 <AmiBlitz3.ab3@8814>   LSL.w #8,D1
000266C8 <AmiBlitz3.ab3@8815>   LSL.w #1,D1
000266CC <AmiBlitz3.ab3@8816>   OR.w fbase(PC),D1
000266D2 <AmiBlitz3.ab3@8817>    TST.b varmode
000266D6 <AmiBlitz3.ab3@8818>    BEQ 'l1
000266DA <AmiBlitz3.ab3@8819>    BCLR #0,d1
000266DE <AmiBlitz3.ab3@8822>    BSR.w writeword
000266E2 <AmiBlitz3.ab3@8823>   MOVE.w $4(A3),D1
000266E6 <AmiBlitz3.ab3@8824>    BSR.w writeword
000266EA <AmiBlitz3.ab3@8825> BRA.w putalp
000266F0 <AmiBlitz3.ab3@8829>   MOVE.w regnum,D1
000266F2 <AmiBlitz3.ab3@8830>   LSL.w #8,D1
000266F4 <AmiBlitz3.ab3@8831>   LSL.w #1,D1
000266F8 <AmiBlitz3.ab3@8832>   OR.w fbase(PC),D1
000266FE <AmiBlitz3.ab3@8833>    TST.b varmode
00026702 <AmiBlitz3.ab3@8834>    BEQ 'l1
00026706 <AmiBlitz3.ab3@8835>    BCLR #0,d1
0002670A <AmiBlitz3.ab3@8838>    BSR.w writeword
0002670E <AmiBlitz3.ab3@8839>   MOVE.w $8(A3),D1
00026710 <AmiBlitz3.ab3@8840>   LSL.w #2,D1
00026716 <AmiBlitz3.ab3@8841>   MOVE.w varmode,D2
0002671A <AmiBlitz3.ab3@8842>    BEQ.w JL_0_69BE
0002671C <AmiBlitz3.ab3@8843>   NEG.w D1
00026720 <AmiBlitz3.ab3@8846>    ADD.w $4(A3),D1
00026724 <AmiBlitz3.ab3@8847>    BSR.w writeword
0002672A <AmiBlitz3.ab3@8848>   MOVE.w regnum,D1
0002672C <AmiBlitz3.ab3@8849>   LSL.w #8,D1
0002672E <AmiBlitz3.ab3@8850>   LSL.w #1,D1
00026732 <AmiBlitz3.ab3@8851>   MOVE.w partostack(PC),D2
00026736 <AmiBlitz3.ab3@8852>    BNE.w JL_0_69F4
0002673E <AmiBlitz3.ab3@8853>   CMPI.w #$7,regnum
00026742 <AmiBlitz3.ab3@8854>    BCC.w JL_0_69F4
00026746 <AmiBlitz3.ab3@8855>   OR.w pushlast(PC),D1
0002674C <AmiBlitz3.ab3@8856>   MOVE.w regnum,D2
0002674E <AmiBlitz3.ab3@8857>   SUBQ.w #1,D2
00026750 <AmiBlitz3.ab3@8858>   OR.w D2,D1
00026754 <AmiBlitz3.ab3@8859> BRA.w JL_0_69F8
00026758 <AmiBlitz3.ab3@8862>   OR.w pushadd(PC),D1
0002675C <AmiBlitz3.ab3@8865>   BSR.w writeword
00026764 <AmiBlitz3.ab3@8866>   MOVE.b #$1,partostack
00026768 <AmiBlitz3.ab3@8867> BRA.w putalp
0002676C <AmiBlitz3.ab3@8871> fbase:       Dc.b $20,$2D,$00,$00                           ;MOVE.L  $0000(A5),D0
0002676E <AmiBlitz3.ab3@8872> pushadd:     Dc.b $D0,$97                                   ;ADD.L (A7),D0
00026770 <AmiBlitz3.ab3@8873> pushlast:    Dc.b $D0,$80                                   ;ADD.L D0,D0
00026774 <AmiBlitz3.ab3@8878>   ANDI.w #$7,D2                                            ;0-7 (unknown to string)
00026778 <AmiBlitz3.ab3@8879>    BEQ.w evalu2
0002677C <AmiBlitz3.ab3@8880> BRA.w eval
00026782 <AmiBlitz3.ab3@8884>   MOVEA.l libpointer,A1
00026786 <AmiBlitz3.ab3@8887>    CMPA.w #$0,A1
0002678A <AmiBlitz3.ab3@8888>    BEQ.w resetlibs__done
00026790 <AmiBlitz3.ab3@8889>   MOVE.w #-1,$A(A1)
00026796 <AmiBlitz3.ab3@8890>   BCLR #$7,$C(A1)
00026798 <AmiBlitz3.ab3@8891>   MOVEA.l (A1),A1
0002679C <AmiBlitz3.ab3@8892> BRA.w resetlibs__loop
0002679E <AmiBlitz3.ab3@8895> RTS
000267A2 <AmiBlitz3.ab3@8899>   MOVE.w #$FFFE,D1
000267A6 <AmiBlitz3.ab3@8902>    BSR.w JL_0_6F38
000267AC <AmiBlitz3.ab3@8905>   TST.w cfetchmode
000267B0 <AmiBlitz3.ab3@8906>    BEQ.w uselib3__noconst
000267B6 <AmiBlitz3.ab3@8907>   BTST #$6,$C(A1)
000267BA <AmiBlitz3.ab3@8908>    BNE.w uselib3__constok
000267BE <AmiBlitz3.ab3@8909> BRA.w badconerr                                            ;Can't use this Library!
000267C0 <AmiBlitz3.ab3@8912> RTS
000267C6 <AmiBlitz3.ab3@8915>    BSET #$7,$C(A1)
000267CA <AmiBlitz3.ab3@8916>    BNE.w JL_0_6C74                                         ;already done....
000267D0 <AmiBlitz3.ab3@8917>    CMPI.w #-1,$A(A1)
000267D4 <AmiBlitz3.ab3@8918>    BNE.w JL_0_6C74                                         ;something already here
000267DA <AmiBlitz3.ab3@8922>    TST.w dirmode
000267DE <AmiBlitz3.ab3@8923>    BEQ.b JL_0_6A86
000267E4 <AmiBlitz3.ab3@8924>    TST.b exdebug
000267E8 <AmiBlitz3.ab3@8925>    BEQ 'l1
000267EC <AmiBlitz3.ab3@8926> BRA.b JL_0_6A86
000267F2 <AmiBlitz3.ab3@8929>   BCLR #$7,$C(A1)
000267F6 <AmiBlitz3.ab3@8930> BRA.w dirliberr
000267FC <AmiBlitz3.ab3@8933>   MOVE.b debugmode,-(a7)
00026800 <AmiBlitz3.ab3@8934>   MOVEM.l D1/A0/A2,-(A7)
00026808 <AmiBlitz3.ab3@8940>   BTST #$7,use_debugger
0002680C <AmiBlitz3.ab3@8941>   BNE 'debugon
0002680E <AmiBlitz3.ab3@8942>   CLR.w D1
00026812 <AmiBlitz3.ab3@8943> BRA.b 'debugoff
00026814 <AmiBlitz3.ab3@8946>   SNE D1
0002681A <AmiBlitz3.ab3@8949>   MOVE.b d1,debugmode
0002681C <AmiBlitz3.ab3@8953>   MOVEA.l A1,A0
00026820 <AmiBlitz3.ab3@8954>   ADDA.l $12(A1),A0
00026824 <AmiBlitz3.ab3@8955>   TST.w -$2(A0)
00026828 <AmiBlitz3.ab3@8956>    BEQ.w JL_0_6AD2
0002682C <AmiBlitz3.ab3@8957>   MOVEM.l A0-A1,-(A7)
00026830 <AmiBlitz3.ab3@8958>   MOVE.w #$FB4F,D1
00026834 <AmiBlitz3.ab3@8959>    BSR.w uselib
00026838 <AmiBlitz3.ab3@8960>   MOVEM.l (A7)+,A0-A1
0002683E <AmiBlitz3.ab3@8961>   ADDQ.w #1,globalvarpointer
00026846 <AmiBlitz3.ab3@8962>   BCLR #$0,globalvarpointer+1
0002684E <AmiBlitz3.ab3@8963>   MOVE.w globalvarpointer,-$6(A0)
00026854 <AmiBlitz3.ab3@8964>   ADDQ.w #4,globalvarpointer
00026858 <AmiBlitz3.ab3@8965>   TST.l -$E(A0)
0002685C <AmiBlitz3.ab3@8966>    BEQ.w JL_0_6AD2
00026862 <AmiBlitz3.ab3@8967>   ADDQ.w #4,globalvarpointer
0002686A <AmiBlitz3.ab3@8970>   MOVE.l libend,$28(A1)
0002686C <AmiBlitz3.ab3@8971>   MOVEA.l A1,A0
00026870 <AmiBlitz3.ab3@8972>   ADDA.l $12(A1),A0
00026872 <AmiBlitz3.ab3@8973>   MOVE.l A1,D1
00026876 <AmiBlitz3.ab3@8974>   ADD.l $6(A1),D1
0002687A <AmiBlitz3.ab3@8975>   TST.l $2C(A1)
0002687E <AmiBlitz3.ab3@8976>    BEQ.w JL_0_6AFE
00026884 <AmiBlitz3.ab3@8978>   TST.b debugmode
00026888 <AmiBlitz3.ab3@8979>    BNE.w JL_0_6AFE
0002688A <AmiBlitz3.ab3@8980>   MOVE.l A1,D1
0002688E <AmiBlitz3.ab3@8981>   ADD.l $2C(A1),D1
00026894 <AmiBlitz3.ab3@8984>   MOVEA.l libend,A2
0002689A <AmiBlitz3.ab3@8987>   CMPA.l data1start,A2
0002689E <AmiBlitz3.ab3@8988>    BCS.w JL_0_6B24
000268A6 <AmiBlitz3.ab3@8989>   MOVE.w #$FFFF,dontwrite
000268A8 <AmiBlitz3.ab3@8992>   ADDQ.w #2,A0
000268AA <AmiBlitz3.ab3@8993>   ADDQ.w #2,A2
000268AC <AmiBlitz3.ab3@8994>   CMPA.l D1,A0
000268B0 <AmiBlitz3.ab3@8995>    BCS.w JL_0_6B16
000268B4 <AmiBlitz3.ab3@8996> BRA.w JL_0_6B2C
000268B6 <AmiBlitz3.ab3@8999>   MOVE.w (A0)+,(A2)+                                       ;copylibcode
000268B8 <AmiBlitz3.ab3@9000>   CMPA.l D1,A0
000268BC <AmiBlitz3.ab3@9001>    BCS.w JL_0_6B04
000268C2 <AmiBlitz3.ab3@9004>   MOVE.l A2,libend
000268C6 <AmiBlitz3.ab3@9005>   MOVE.l $20(A1),D1
000268CA <AmiBlitz3.ab3@9006>    BEQ.w JL_0_6BB8
000268CE <AmiBlitz3.ab3@9007>   MOVEM.l D0/D2-D3,-(A7)
000268D2 <AmiBlitz3.ab3@9008>   MOVEA.l $24(A1),A0
000268D4 <AmiBlitz3.ab3@9009>   MOVEQ.l #$00,D3
000268D6 <AmiBlitz3.ab3@9012>   MOVE.l (A0)+,D2
000268DA <AmiBlitz3.ab3@9013>   TST.l $2C(A1)
000268DE <AmiBlitz3.ab3@9014>    BEQ.w JL_0_6B60
000268E4 <AmiBlitz3.ab3@9015>   TST.b debugmode
000268E8 <AmiBlitz3.ab3@9016>    BNE.w JL_0_6B60
000268EC <AmiBlitz3.ab3@9017>   CMP.l $2C(A1),D2
000268F0 <AmiBlitz3.ab3@9018>    BCC.w JL_0_6BA0
000268F4 <AmiBlitz3.ab3@9021>   TST.w $0(A1,D2.L)
000268F8 <AmiBlitz3.ab3@9022>    BPL.w JL_0_6B72
000268FA <AmiBlitz3.ab3@9023>   TST.l D3
000268FE <AmiBlitz3.ab3@9024>    BNE.w JL_0_6B72
00026900 <AmiBlitz3.ab3@9025>   MOVE.l A0,D0
00026902 <AmiBlitz3.ab3@9026>   MOVE.l D1,D3
00026906 <AmiBlitz3.ab3@9029>   SUB.l $12(A1),D2
0002690A <AmiBlitz3.ab3@9030>    BMI.w JL_0_6BA0
0002690E <AmiBlitz3.ab3@9031>   ADD.l $28(A1),D2
00026910 <AmiBlitz3.ab3@9032>   MOVE.l D2,-(A7)
00026916 <AmiBlitz3.ab3@9033>   SUB.l destbufferstart,D2
0002691A <AmiBlitz3.ab3@9034>    BSR.w addhunkoffset
0002691C <AmiBlitz3.ab3@9035>   MOVEA.l (A7)+,A2
00026922 <AmiBlitz3.ab3@9036>   TST.w dontwrite
00026926 <AmiBlitz3.ab3@9037>    BNE.w JL_0_6BA0
0002692A <AmiBlitz3.ab3@9038>   MOVE.l $28(A1),D2
0002692E <AmiBlitz3.ab3@9039>   SUB.l $12(A1),D2
00026930 <AmiBlitz3.ab3@9040>   ADD.l D2,(A2)
00026932 <AmiBlitz3.ab3@9043>    SUBQ.l #1,D1
00026936 <AmiBlitz3.ab3@9044>    BNE.w JL_0_6B44
00026938 <AmiBlitz3.ab3@9045>   MOVE.l D3,D2
0002693C <AmiBlitz3.ab3@9046>    BEQ.w JL_0_6BB4
0002693E <AmiBlitz3.ab3@9047>   MOVEA.l D0,A2
00026940 <AmiBlitz3.ab3@9048>   SUBQ.w #4,A2
00026944 <AmiBlitz3.ab3@9049>    BSR.w JL_0_6E34
00026948 <AmiBlitz3.ab3@9052>    MOVEM.l (A7)+,D0/D2-D3
0002694C <AmiBlitz3.ab3@9055>    MOVEM.l (A7)+,D1/A0/A2
00026950 <AmiBlitz3.ab3@9056>   MOVEM.l D1-D2,-(A7)
00026954 <AmiBlitz3.ab3@9057>   TST.w $1A(A1)
00026958 <AmiBlitz3.ab3@9058>    BNE.w JL_0_6BD0
0002695C <AmiBlitz3.ab3@9059>   CLR.w $A(A1)
00026960 <AmiBlitz3.ab3@9060> BRA.w JL_0_6C5E
00026966 <AmiBlitz3.ab3@9063>   ADDQ.w #1,globalvarpointer
0002696E <AmiBlitz3.ab3@9064>   BCLR #$0,globalvarpointer+1
00026976 <AmiBlitz3.ab3@9065>   MOVE.w globalvarpointer,$A(A1)
0002697A <AmiBlitz3.ab3@9066>   CMP.w #-$12D,D1
0002697E <AmiBlitz3.ab3@9067>    BNE.w JL_0_6C16
00026986 <AmiBlitz3.ab3@9068>   MOVE.w $A(A1),movestdn+2
0002698E <AmiBlitz3.ab3@9069>   MOVE.w $A(A1),pusha3+2
00026996 <AmiBlitz3.ab3@9070>   MOVE.w $A(A1),pusha32+2
0002699E <AmiBlitz3.ab3@9071>   MOVE.w $A(A1),pulla3+2
000269A6 <AmiBlitz3.ab3@9072>   MOVE.w $A(A1),geta3+2
000269AA <AmiBlitz3.ab3@9075>    CMP.w #-$3E9,D1
000269AE <AmiBlitz3.ab3@9076>    BNE.w JL_0_6C3E
000269B6 <AmiBlitz3.ab3@9077>   MOVE.w $A(A1),dataget+2
000269BE <AmiBlitz3.ab3@9078>   MOVE.w $A(A1),dataput+2
000269C6 <AmiBlitz3.ab3@9079>   MOVE.w $A(A1),rescode+6
000269CE <AmiBlitz3.ab3@9080>   MOVE.w $A(A1),rescode2+2
000269D4 <AmiBlitz3.ab3@9083>   ADDQ.w #2,globalvarpointer
000269D8 <AmiBlitz3.ab3@9084>   TST.w $1A(A1)
000269DC <AmiBlitz3.ab3@9085>    BMI.w JL_0_6C52
000269E2 <AmiBlitz3.ab3@9086>   ADDQ.w #2,globalvarpointer
000269E6 <AmiBlitz3.ab3@9089>   MOVEM.l D1/A1,-(A7)
000269EA <AmiBlitz3.ab3@9090>   BSR.w uselib2
000269EE <AmiBlitz3.ab3@9091>   MOVEM.l (A7)+,D1/A1
000269F0 <AmiBlitz3.ab3@9094>   MOVE.w D1,D2
000269F4 <AmiBlitz3.ab3@9095>   MOVE.l $16(A1),D1
000269F8 <AmiBlitz3.ab3@9096>    BSR.w uselib2_org
000269FC <AmiBlitz3.ab3@9097>   MOVE.l $1C(A1),D1
00026A00 <AmiBlitz3.ab3@9098>    BSR.w uselib2_org
00026A04 <AmiBlitz3.ab3@9099>   MOVEM.l (A7)+,D1-D2
00026A0A <AmiBlitz3.ab3@9101>   MOVE.b (a7)+,debugmode
00026A0C <AmiBlitz3.ab3@9104> RTS
00026A0E <AmiBlitz3.ab3@9108>   MOVEQ.l #$00,D2
00026A14 <AmiBlitz3.ab3@9111>   MOVEA.l tokeslist,A2
00026A16 <AmiBlitz3.ab3@9112>   CMPA.l D2,A2
00026A1A <AmiBlitz3.ab3@9113>    BEQ.w JL_0_6CE0
00026A1C <AmiBlitz3.ab3@9114>   MOVE.l A2,-(A7)
00026A1E <AmiBlitz3.ab3@9117>   MOVEQ.l #$00,D3
00026A22 <AmiBlitz3.ab3@9120>   MOVEA.l $8(A2),A3
00026A24 <AmiBlitz3.ab3@9121>   CMPA.l D3,A3
00026A28 <AmiBlitz3.ab3@9122>    BEQ.w JL_0_6CD2
00026A2A <AmiBlitz3.ab3@9123>   MOVE.l A3,-(A7)
00026A2E <AmiBlitz3.ab3@9124>   MOVEM.l D2-D3/A2-A3,-(A7)
00026A32 <AmiBlitz3.ab3@9125>   MOVE.w $4(A2),D1
00026A36 <AmiBlitz3.ab3@9126>   MOVE.w $6(A2),D2
00026A3A <AmiBlitz3.ab3@9127>    BSR.w JL_0_6CE2
00026A3E <AmiBlitz3.ab3@9128>   MOVEM.l (A7)+,D2-D3/A2-A3
00026A44 <AmiBlitz3.ab3@9129>   MOVE.w dontwrite,D0
00026A48 <AmiBlitz3.ab3@9130>    BEQ.w JL_0_6CBE
00026A4A <AmiBlitz3.ab3@9133>   MOVEA.l (A3),A3
00026A4C <AmiBlitz3.ab3@9134>   CMPA.l D3,A3
00026A50 <AmiBlitz3.ab3@9135>    BNE.w JL_0_6CB2
00026A54 <AmiBlitz3.ab3@9136> BRA.w JL_0_6CCC
00026A58 <AmiBlitz3.ab3@9139>   MOVEA.l $4(A3),A0
00026A5A <AmiBlitz3.ab3@9140>   MOVE.l D7,(A0)
00026A5C <AmiBlitz3.ab3@9141>   MOVEA.l (A3),A3
00026A5E <AmiBlitz3.ab3@9142>   CMPA.l D3,A3
00026A62 <AmiBlitz3.ab3@9143>    BNE.w JL_0_6CBE
00026A64 <AmiBlitz3.ab3@9146>   MOVE.l (A7)+,D3
00026A68 <AmiBlitz3.ab3@9147> BRA.w JL_0_6C88
00026A6A <AmiBlitz3.ab3@9150>    MOVEA.l (A2),A2
00026A6C <AmiBlitz3.ab3@9151>   CMPA.l D2,A2
00026A70 <AmiBlitz3.ab3@9152>    BNE.w JL_0_6C86
00026A72 <AmiBlitz3.ab3@9153>   MOVE.l (A7)+,D2
00026A76 <AmiBlitz3.ab3@9154> BRA.w JL_0_6C78
00026A78 <AmiBlitz3.ab3@9157> RTS
00026A7A <AmiBlitz3.ab3@9161>   MOVE.w D2,-(A7)
00026A7E <AmiBlitz3.ab3@9162>    BSR.w searchinstr
00026A80 <AmiBlitz3.ab3@9163>   MOVE.w (A7)+,D2
00026A88 <AmiBlitz3.ab3@9164>   BCLR #$7,blitzmode
00026A8C <AmiBlitz3.ab3@9165>   BCLR #$E,D2
00026A90 <AmiBlitz3.ab3@9166>    BEQ.w JL_0_6D02
00026A98 <AmiBlitz3.ab3@9167>   BSET #$7,blitzmode
00026A9A <AmiBlitz3.ab3@9170>   TST.w (A3)
00026A9E <AmiBlitz3.ab3@9171>    BEQ.w JL_0_6DAC
00026AA4 <AmiBlitz3.ab3@9172>   BTST #$2,$1(A3)
00026AA8 <AmiBlitz3.ab3@9173>    BNE.w tokeerr
00026AAE <AmiBlitz3.ab3@9174>   BTST #$3,$1(A3)
00026AB2 <AmiBlitz3.ab3@9175>    BNE.w tokeerr
00026AB6 <AmiBlitz3.ab3@9176>   LEA $6(A3),A3
00026AB8 <AmiBlitz3.ab3@9179>   MOVE.w (A3)+,D0
00026ABC <AmiBlitz3.ab3@9180>    BMI.w tokeerr
00026AC0 <AmiBlitz3.ab3@9181>   ANDI.w #$FF,D0
00026AC2 <AmiBlitz3.ab3@9182>   ADDA.w D0,A3
00026AC4 <AmiBlitz3.ab3@9183>   ADDQ.w #1,A3
00026AC6 <AmiBlitz3.ab3@9184>   EXG.l D0,A3
00026ACA <AmiBlitz3.ab3@9185>   BCLR #$0,D0
00026ACC <AmiBlitz3.ab3@9186>   EXG.l D0,A3
00026ACE <AmiBlitz3.ab3@9187>   SUBQ.w #1,D2
00026AD2 <AmiBlitz3.ab3@9188>    BPL.w JL_0_6D98
00026AD4 <AmiBlitz3.ab3@9189>   TST.w (A3)
00026AD8 <AmiBlitz3.ab3@9190>    BNE.w JL_0_6D76
00026ADC <AmiBlitz3.ab3@9191>   MOVE.l $2(A3),D0
00026AE0 <AmiBlitz3.ab3@9192>   OR.l $A(A3),D0
00026AE4 <AmiBlitz3.ab3@9193>    BNE.w JL_0_6D76
00026AEA <AmiBlitz3.ab3@9194>   BTST #$0,$9(A3)
00026AEE <AmiBlitz3.ab3@9195>    BNE.w JL_0_6D76
00026AF2 <AmiBlitz3.ab3@9196>   MOVE.l $6(A3),D7
00026AF6 <AmiBlitz3.ab3@9197>   MOVE.w $0(A2,D7.L),D0
00026AFA <AmiBlitz3.ab3@9198>   ANDI.w #$F000,D0
00026AFE <AmiBlitz3.ab3@9199>   CMP.w #-$6000,D0
00026B02 <AmiBlitz3.ab3@9200>    BEQ.w JL_0_6D76
00026B06 <AmiBlitz3.ab3@9203>   SUB.l $12(A2),D7
00026B0A <AmiBlitz3.ab3@9204>   ADD.l $28(A2),D7
00026B0C <AmiBlitz3.ab3@9205> RTS
00026B12 <AmiBlitz3.ab3@9209>   LEA cutejsr,A0
00026B18 <AmiBlitz3.ab3@9212>   MOVE.l destpointer,-(A7)
00026B20 <AmiBlitz3.ab3@9213>   MOVE.w #$FFFF,lasta6
00026B22 <AmiBlitz3.ab3@9216>    JSR (A0)
00026B26 <AmiBlitz3.ab3@9217>   MOVE.w #$4E75,D1
00026B2A <AmiBlitz3.ab3@9218>    BSR.w writeword
00026B2C <AmiBlitz3.ab3@9219>   MOVE.l (A7)+,D7
00026B2E <AmiBlitz3.ab3@9220> RTS
00026B30 <AmiBlitz3.ab3@9224>   TST.w (A3)+
00026B34 <AmiBlitz3.ab3@9225>    BEQ.w JL_0_6DA4
00026B36 <AmiBlitz3.ab3@9226>   ADDQ.w #2,A3
00026B3A <AmiBlitz3.ab3@9227> BRA.w JL_0_6D98
00026B3E <AmiBlitz3.ab3@9230>   LEA $C(A3),A3
00026B42 <AmiBlitz3.ab3@9231> BRA.w JL_0_6D20
00026B44 <AmiBlitz3.ab3@9235>   TST.w D2
00026B48 <AmiBlitz3.ab3@9236>    BNE.w tokeerr
00026B4C <AmiBlitz3.ab3@9237>   TST.w $6(A3)
00026B50 <AmiBlitz3.ab3@9238>    BNE.w JL_0_6DE4
00026B54 <AmiBlitz3.ab3@9239>   MOVE.l $8(A3),D0
00026B58 <AmiBlitz3.ab3@9240>   OR.l $10(A3),D0
00026B5C <AmiBlitz3.ab3@9241>    BNE.w JL_0_6DE4
00026B62 <AmiBlitz3.ab3@9242>   BTST #$0,$F(A3)
00026B66 <AmiBlitz3.ab3@9243>    BNE.w JL_0_6DE4
00026B6A <AmiBlitz3.ab3@9244>   MOVE.l $C(A3),D7
00026B6E <AmiBlitz3.ab3@9245>   MOVE.w $0(A2,D7.L),D0
00026B72 <AmiBlitz3.ab3@9246>   ANDI.w #$F000,D0
00026B76 <AmiBlitz3.ab3@9247>   CMP.w #-$6000,D0
00026B7A <AmiBlitz3.ab3@9248>    BNE.w JL_0_6D6C
00026B7C <AmiBlitz3.ab3@9251>   MOVE.l A3,D1
00026B7E <AmiBlitz3.ab3@9252>   SUB.l A2,D1
00026B84 <AmiBlitz3.ab3@9253>   LEA Amakelibsub,A0
00026B88 <AmiBlitz3.ab3@9254> BRA.w JL_0_6D7C
00026B8E <AmiBlitz3.ab3@9258>   MOVEA.l _execbase,A6
00026B94 <AmiBlitz3.ab3@9259>   MOVEA.l tokeslist,A2
00026B9A <AmiBlitz3.ab3@9260>   CLR.l tokeslist
00026B9E <AmiBlitz3.ab3@9263>     CMPA.w #$0,A2
00026BA2 <AmiBlitz3.ab3@9264>      BEQ.w JL_0_6E32
00026BA6 <AmiBlitz3.ab3@9265>     MOVEA.l $8(A2),A3
00026BAA <AmiBlitz3.ab3@9268>       CMPA.w #$0,A3
00026BAE <AmiBlitz3.ab3@9269>        BEQ.w JL_0_6E24
00026BB0 <AmiBlitz3.ab3@9270>       MOVEA.l A3,A1
00026BB2 <AmiBlitz3.ab3@9271>       MOVEA.l (A3),A3
00026BB4 <AmiBlitz3.ab3@9272>       MOVEQ.l #$08,D0
00026BBA <AmiBlitz3.ab3@9273>       MOVE.l mempool,a0
00026BC0 <AmiBlitz3.ab3@9274>       MOVEA.l _execbase,A6
00026BC4 <AmiBlitz3.ab3@9275>       JSR _FreePooled(A6)
00026BC8 <AmiBlitz3.ab3@9276> BRA.w JL_0_6E0E
00026BCA <AmiBlitz3.ab3@9279>     MOVEA.l A2,A1
00026BCC <AmiBlitz3.ab3@9280>     MOVEA.l (A2),A2
00026BCE <AmiBlitz3.ab3@9281>     MOVEQ.l #$0C,D0
00026BD4 <AmiBlitz3.ab3@9282>     MOVE.l mempool,a0
00026BDA <AmiBlitz3.ab3@9283>     MOVEA.l _execbase,A6
00026BDE <AmiBlitz3.ab3@9284>     JSR _FreePooled(A6)
00026BE2 <AmiBlitz3.ab3@9285> BRA.w JL_0_6E02
00026BE4 <AmiBlitz3.ab3@9288> RTS
00026BE8 <AmiBlitz3.ab3@9292>   MOVEM.l D3-D5/A1-A6,-(A7)
00026BEA <AmiBlitz3.ab3@9293>   MOVEA.l A1,A4
00026BEC <AmiBlitz3.ab3@9296>   MOVE.l (A2)+,D3
00026BF0 <AmiBlitz3.ab3@9297>   MOVE.w $0(A4,D3.L),D5
00026BF4 <AmiBlitz3.ab3@9298>    BPL.w JL_0_6E7A
00026BF8 <AmiBlitz3.ab3@9299>   TST.l $2C(A4)
00026BFC <AmiBlitz3.ab3@9300>    BEQ.w JL_0_6E5E
00026C02 <AmiBlitz3.ab3@9301>   TST.b debugmode
00026C06 <AmiBlitz3.ab3@9302>    BNE.w JL_0_6E5E
00026C0A <AmiBlitz3.ab3@9303>   CMP.l $2C(A4),D3
00026C0E <AmiBlitz3.ab3@9304>    BCC.w JL_0_6E7A
00026C12 <AmiBlitz3.ab3@9307>   BCLR #$F,D5
00026C16 <AmiBlitz3.ab3@9308>   MOVE.w $2(A4,D3.L),D4
00026C1A <AmiBlitz3.ab3@9309>   SUB.l $12(A4),D3
00026C1E <AmiBlitz3.ab3@9310>   ADD.l $28(A4),D3
00026C22 <AmiBlitz3.ab3@9311>   MOVEM.l D2/A2/A4,-(A7)
00026C26 <AmiBlitz3.ab3@9312>    BSR.w JL_0_6E86
00026C2A <AmiBlitz3.ab3@9313>   MOVEM.l (A7)+,D2/A2/A4
00026C2C <AmiBlitz3.ab3@9316>   SUBQ.l #1,D2
00026C30 <AmiBlitz3.ab3@9317>    BNE.w JL_0_6E3A
00026C34 <AmiBlitz3.ab3@9318>   MOVEM.l (A7)+,D3-D5/A1-A6
00026C36 <AmiBlitz3.ab3@9319> RTS
00026C3C <AmiBlitz3.ab3@9323>   LEA tokeslist,A3
00026C42 <AmiBlitz3.ab3@9324>   MOVEA.l _execbase,A6
00026C44 <AmiBlitz3.ab3@9327>   MOVE.l (A3),D0
00026C48 <AmiBlitz3.ab3@9328>    BEQ.w JL_0_6EAC
00026C4A <AmiBlitz3.ab3@9329>   MOVEA.l D0,A3
00026C4E <AmiBlitz3.ab3@9330>   CMP.w $4(A3),D4
00026C52 <AmiBlitz3.ab3@9331>    BNE.w JL_0_6E90
00026C56 <AmiBlitz3.ab3@9332>   CMP.w $6(A3),D5
00026C5A <AmiBlitz3.ab3@9333>    BNE.w JL_0_6E90
00026C5E <AmiBlitz3.ab3@9334> BRA.w JL_0_6ED0
00026C60 <AmiBlitz3.ab3@9337>   MOVEQ.l #$0C,D0
00026C62 <AmiBlitz3.ab3@9338>   MOVEQ.l #$01,D1
00026C68 <AmiBlitz3.ab3@9339>   MOVE.l mempool,a0
00026C6C <AmiBlitz3.ab3@9340>   JSR _AllocPooled(a6)
00026C6E <AmiBlitz3.ab3@9342>   MOVEA.l D0,A3
00026C74 <AmiBlitz3.ab3@9343>   MOVE.l tokeslist,(A3)
00026C7A <AmiBlitz3.ab3@9344>   MOVE.l A3,tokeslist
00026C7E <AmiBlitz3.ab3@9345>   MOVE.w D4,$4(A3)
00026C82 <AmiBlitz3.ab3@9346>   MOVE.w D5,$6(A3)
00026C86 <AmiBlitz3.ab3@9347>   CLR.l $8(A3)
00026C88 <AmiBlitz3.ab3@9350>   MOVEQ.l #$08,D0
00026C8A <AmiBlitz3.ab3@9351>   MOVEQ.l #$01,D1
00026C90 <AmiBlitz3.ab3@9352>   MOVE.l mempool,a0
00026C94 <AmiBlitz3.ab3@9353>   JSR _AllocPooled(a6)
00026C96 <AmiBlitz3.ab3@9355>   MOVEA.l D0,A0
00026C9A <AmiBlitz3.ab3@9356>   MOVE.l D3,$4(A0)
00026C9E <AmiBlitz3.ab3@9357>   MOVE.l $8(A3),(A0)
00026CA2 <AmiBlitz3.ab3@9358>   MOVE.l A0,$8(A3)
00026CA4 <AmiBlitz3.ab3@9359>   MOVE.w D4,D1
00026CA8 <AmiBlitz3.ab3@9360> BRA.w searchinstr
00026CAC <AmiBlitz3.ab3@9363> tokeslist: Ds.l 1
00026CB0 <AmiBlitz3.ab3@9376>   BEQ.w uselib2_org__skip
00026CB2 <AmiBlitz3.ab3@9377>   MOVE.l A1,-(A7)
00026CB4 <AmiBlitz3.ab3@9378>   ADDA.l D1,A1
00026CB6 <AmiBlitz3.ab3@9379>   ADDQ.w #6,A1
00026CB8 <AmiBlitz3.ab3@9382>     MOVE.w (A1)+,D1
00026CBC <AmiBlitz3.ab3@9383>     BEQ.w uselib2_org__done
00026CBE <AmiBlitz3.ab3@9384>     CMP.w D2,D1
00026CC2 <AmiBlitz3.ab3@9385>     BEQ.w uselib2_org__skip2
00026CC4 <AmiBlitz3.ab3@9386>     MOVE.l A1,-(A7)
00026CC8 <AmiBlitz3.ab3@9387>     BSR.w uselib
00026CCA <AmiBlitz3.ab3@9388>     MOVEA.l (A7)+,A1
00026CCC <AmiBlitz3.ab3@9391>     ADDQ.w #2,A1
00026CD0 <AmiBlitz3.ab3@9392> BRA.w uselib2_org__loop
00026CD2 <AmiBlitz3.ab3@9395>   MOVEA.l (A7)+,A1
00026CD4 <AmiBlitz3.ab3@9398> RTS
00026CDA <AmiBlitz3.ab3@9402>   MOVEA.l libpointer,A1
00026CDE <AmiBlitz3.ab3@9405>   CMPA.w #$0,A1
00026CE2 <AmiBlitz3.ab3@9406>    BEQ.b JL_0_6F36
00026CE6 <AmiBlitz3.ab3@9407>   CMP.w $4(A1),D1
00026CEA <AmiBlitz3.ab3@9408>    BEQ.w JL_0_6F34
00026CEC <AmiBlitz3.ab3@9409>   MOVEA.l (A1),A1
00026CF0 <AmiBlitz3.ab3@9410> BRA.w JL_0_6F20
00026CF2 <AmiBlitz3.ab3@9413>   MOVEQ.l #-$01,D1
00026CF4 <AmiBlitz3.ab3@9416> RTS
00026CF8 <AmiBlitz3.ab3@9420>   MOVEM.l d0/a2,-(a7)
00026CFA <AmiBlitz3.ab3@9421>   MOVEQ #0,d0
00026D00 <AmiBlitz3.ab3@9422>   LEA instrtab+4,a2
00026D02 <AmiBlitz3.ab3@9423>   MOVE.w d1,d0
00026D04 <AmiBlitz3.ab3@9424>   ASL.l #3,d0
00026D08 <AmiBlitz3.ab3@9425>   MOVE.l 0(a2,d0.l),a1                                     ;*8
00026D0E <AmiBlitz3.ab3@9426>   CMP.l #0,a1
00026D12 <AmiBlitz3.ab3@9427>   BNE JL_0_6F54b
00026D18 <AmiBlitz3.ab3@9429>   MOVEA.l libpointer,A1
00026D1C <AmiBlitz3.ab3@9432>     CMPA.w #$0,A1
00026D20 <AmiBlitz3.ab3@9433>     BEQ.w noliberr
00026D24 <AmiBlitz3.ab3@9434>     CMP.w $4(A1),D1
00026D28 <AmiBlitz3.ab3@9435>     BEQ.w JL_0_6F54
00026D2A <AmiBlitz3.ab3@9436>    MOVEA.l (A1),A1
00026D2E <AmiBlitz3.ab3@9437> BRA.w JL_0_6F3E
00026D32 <AmiBlitz3.ab3@9440>   MOVE.l a1,0(a2,d0.l)
00026D36 <AmiBlitz3.ab3@9443>   MOVEM.l (a7)+,d0/a2
00026D38 <AmiBlitz3.ab3@9444> RTS
00026D3C <AmiBlitz3.ab3@9447>   MOVEM.l d0-d1/a1,-(a7)
00026D3E <AmiBlitz3.ab3@9448>   MOVEQ #0,d0
00026D44 <AmiBlitz3.ab3@9449>   LEA instrtab,a1
00026D46 <AmiBlitz3.ab3@9450>   MOVE.w d1,d0
00026D48 <AmiBlitz3.ab3@9451>   ASL.l #3,d0
00026D4C <AmiBlitz3.ab3@9452>   MOVE.l 0(a1,d0.l),a3
00026D50 <AmiBlitz3.ab3@9453>   MOVE.l 4(a1,d0.l),a2
00026D56 <AmiBlitz3.ab3@9454>   CMP.l #0,a3
00026D5A <AmiBlitz3.ab3@9455>   BNE JL_0_6F92b
00026D60 <AmiBlitz3.ab3@9457>   MOVEA.l libpointer,A2
00026D64 <AmiBlitz3.ab3@9460>   CMPA.w #$0,A2
00026D68 <AmiBlitz3.ab3@9461>   BEQ.w notokerr
00026D6C <AmiBlitz3.ab3@9462>   CMP.w $E(A2),D1
00026D70 <AmiBlitz3.ab3@9463>   BCS.w JL_0_6FB8
00026D74 <AmiBlitz3.ab3@9464>   CMP.w $10(A2),D1
00026D78 <AmiBlitz3.ab3@9465>   BCC.w JL_0_6FB8
00026D7C <AmiBlitz3.ab3@9466>   LEA $30(A2),A3
00026D80 <AmiBlitz3.ab3@9467>   TST.w $4(A2)
00026D84 <AmiBlitz3.ab3@9468>   BPL.w JL_0_6FA6
00026D88 <AmiBlitz3.ab3@9471>     CMP.w $E(A2),D1
00026D8C <AmiBlitz3.ab3@9472>     BEQ.w JL_0_6F92
00026D8E <AmiBlitz3.ab3@9473>     SUBQ.w #1,D1
00026D92 <AmiBlitz3.ab3@9474>     MOVEA.l $2(A3),A3
00026D96 <AmiBlitz3.ab3@9475> BRA.w JL_0_6F80
00026D9A <AmiBlitz3.ab3@9478>   MOVE.l a3,0(a1,d0.l)
00026D9E <AmiBlitz3.ab3@9479>   MOVE.l a2,4(a1,d0.l)
00026DA2 <AmiBlitz3.ab3@9482>   MOVEM.l (a7)+,d0-d1/a1
00026DA6 <AmiBlitz3.ab3@9483>   MOVEM.l D1/A1-a3,-(A7)
00026DAA <AmiBlitz3.ab3@9484>   CMP.w #1,(a3)
00026DAE <AmiBlitz3.ab3@9485>   BNE.s ex10
00026DB6 <AmiBlitz3.ab3@9486>   CMP.l #$12345678,$e(a3)
00026DBA <AmiBlitz3.ab3@9487>   BNE.s ex10
00026DC0 <AmiBlitz3.ab3@9488>   CMP.w #$ffff,$16(a3)
00026DC4 <AmiBlitz3.ab3@9489>   BNE.s ex10
00026DC8 <AmiBlitz3.ab3@9490>   MOVE.l $12(a3),d1
00026DCC <AmiBlitz3.ab3@9491>   BEQ.s ex10
00026DD2 <AmiBlitz3.ab3@9492>   LEA pluginbase,a3
00026DD6 <AmiBlitz3.ab3@9494> JMP 0(a2,d1.l)                                             ;plugin
00026DDA <AmiBlitz3.ab3@9497>   MOVEM.l (A7)+,D1/A1-a3
00026DE0 <AmiBlitz3.ab3@9498>   JSR stripspaces
00026DE2 <AmiBlitz3.ab3@9499>   MOVEQ #0,d0
00026DE4 <AmiBlitz3.ab3@9500>   MOVE.b (a5)+,d0
00026DEA <AmiBlitz3.ab3@9501>   MOVE.w d0,lastchar
00026DEC <AmiBlitz3.ab3@9502>   ADDQ.l #4,a7
00026DEE <AmiBlitz3.ab3@9503> RTS
00026DF0 <AmiBlitz3.ab3@9507>   MOVEA.l A2,A1
00026DF6 <AmiBlitz3.ab3@9508>   CLR.b newmode
00026DFA <AmiBlitz3.ab3@9509>   MOVE.w $4(A1),D1
00026DFE <AmiBlitz3.ab3@9512>   BSR.w uselib3
00026E02 <AmiBlitz3.ab3@9513>   MOVEM.l (A7)+,D1/A1-a3
00026E04 <AmiBlitz3.ab3@9514> RTS
00026E0A <AmiBlitz3.ab3@9517>   MOVE.w globalvarpointer,-(a7)
00026E12 <AmiBlitz3.ab3@9518>   MOVE.w #$8004,globalvarpointer
00026E16 <AmiBlitz3.ab3@9519>   BSR.w uselib3
00026E1C <AmiBlitz3.ab3@9520>   MOVE.w (a7)+,globalvarpointer
00026E20 <AmiBlitz3.ab3@9521>   MOVEM.l (A7)+,D1/A1-a3
00026E22 <AmiBlitz3.ab3@9522> RTS
00026E26 <AmiBlitz3.ab3@9525>     CMP.w $E(A2),D1
00026E2A <AmiBlitz3.ab3@9526>     BEQ.w JL_0_6F92
00026E2C <AmiBlitz3.ab3@9527>     SUBQ.w #1,D1
00026E30 <AmiBlitz3.ab3@9528>     MOVEA.l $2(A3),A3
00026E34 <AmiBlitz3.ab3@9529> BRA.w JL_0_6FA6
00026E36 <AmiBlitz3.ab3@9532>   MOVEA.l (A2),A2
00026E3A <AmiBlitz3.ab3@9533> BRA.w JL_0_6F5C
00026E40 <AmiBlitz3.ab3@9536> JMP writeword
00026E44 <AmiBlitz3.ab3@9539> ptr_acidlibs:   Ds.l 1                                     ;deflibsat org source
00026E48 <AmiBlitz3.ab3@9540> ptr_deflibs:    Ds.l 1                                     ;acidlibsat org source
00026E4C <AmiBlitz3.ab3@9541> ptr_userlibs:   Ds.l 1                                     ;blitzlibsat org source  ;;start of blitzlibs list!
00026E4E <AmiBlitz3.ab3@9547>   TST.l D0
00026E52 <AmiBlitz3.ab3@9548>   BEQ.w exit_loadlibsfile
00026E54 <AmiBlitz3.ab3@9549>     MOVE.l D0,D6                                           ;d6=len
00026E5A <AmiBlitz3.ab3@9550>     MOVEA.l _dosbase,A6
00026E60 <AmiBlitz3.ab3@9551>     MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00026E64 <AmiBlitz3.ab3@9552>     JSR _Open(A6)
00026E66 <AmiBlitz3.ab3@9553>     MOVE.l D0,D7
00026E6A <AmiBlitz3.ab3@9554>     BEQ.w exit_loadlibsfile
00026E6C <AmiBlitz3.ab3@9555>       MOVE.l D6,D0
00026E6E <AmiBlitz3.ab3@9556>       MOVEQ.l #$01,D1
00026E74 <AmiBlitz3.ab3@9557>       MOVEA.l _execbase,A6
00026E7A <AmiBlitz3.ab3@9558>       MOVE.l mempool,a0
00026E7E <AmiBlitz3.ab3@9559>       JSR _AllocPooled(a6)
00026E80 <AmiBlitz3.ab3@9560>       MOVE.l D0,D5                                         ;start address
00026E82 <AmiBlitz3.ab3@9562>       MOVE.l D7,D1                                         ; handle
00026E84 <AmiBlitz3.ab3@9563>       MOVE.l D5,D2                                         ; buffer addr
00026E86 <AmiBlitz3.ab3@9564>       MOVE.l D6,D3                                         ; size
00026E8C <AmiBlitz3.ab3@9565>       MOVEA.l _dosbase,A6
00026E90 <AmiBlitz3.ab3@9566>       JSR _Read(A6)
00026E92 <AmiBlitz3.ab3@9567>       MOVE.l D7,D1
00026E96 <AmiBlitz3.ab3@9568>       JSR _Close(A6)
00026E98 <AmiBlitz3.ab3@9570>       MOVEA.l D5,A0                                        ; buffer addr
00026E9A <AmiBlitz3.ab3@9576>         MOVE.l (A0)+,D0                                    ; naechster Longwert nach DO
00026E9E <AmiBlitz3.ab3@9577>         BEQ.b JL_0_7044                                    ; wenn <> 0, dann
00026EA2 <AmiBlitz3.ab3@9578>           LEA $20(A0),A1                                   ;   lade inhalt von D0+40bytes nach A1
00026EA4 <AmiBlitz3.ab3@9579>           MOVE.l A1,(A3)                                   ;   kopiere Adresse in A1 zum libpointer
00026EA6 <AmiBlitz3.ab3@9580>           MOVEA.l A1,A3                                    ;   kopiere A1 nach A3
00026EA8 <AmiBlitz3.ab3@9581>           ADDA.l D0,A0                                     ;   addiere inhalt von D0 zu A0 hinzu
00026EAC <AmiBlitz3.ab3@9582>           MOVE.l -$4(A1),D0                                ;   hole die 4bytes vor nach D0
00026EAE <AmiBlitz3.ab3@9583>           ADD.l D0,D0                                      ;   verdoppele D0
00026EB0 <AmiBlitz3.ab3@9584>           ADD.l D0,D0                                      ;   verdoppele D0 nochmal
00026EB4 <AmiBlitz3.ab3@9585>           MOVE.l D0,$6(A1)                                 ;   schreibe D0 6bytes nach A1
00026EB8 <AmiBlitz3.ab3@9586>           CLR.l $20(A1)                                    ;   loesche D0+40bytes
00026EBC <AmiBlitz3.ab3@9587>           LEA $C(A1,D0.L),A2                               ;   lade inhalt von (A1)+D0+$C nach A2
00026EBE <AmiBlitz3.ab3@9588>           CMPA.l A0,A2
00026EC2 <AmiBlitz3.ab3@9589>           BCC.b JL_0_7010                                  ; wenn A0=>A2
00026EC8 <AmiBlitz3.ab3@9590>             MOVE.l -$8(A2),$20(A1)                         ;
00026ECC <AmiBlitz3.ab3@9591>             MOVE.l A2,$24(A1)                              ;
00026ED0 <AmiBlitz3.ab3@9592> BRA.w JL_0_7010
00026ED2 <AmiBlitz3.ab3@9595>       MOVE.l D5,D0
00026ED4 <AmiBlitz3.ab3@9598> RTS
00026EFE <AmiBlitz3.ab3@9602>   !basic
00026F72 <AmiBlitz3.ab3@9603>    tempmapping$ = dos_AddPart{my_systemdir$,"token_mapping_userlibs.txt"}
00026FA6 <AmiBlitz3.ab3@9604>    dos_Delete{tempmapping$}
00026FEA <AmiBlitz3.ab3@9605>    fid.l = file_Open{tempmapping$,#file_forcewrite}
00027008 <AmiBlitz3.ab3@9606>   !asm
0002700E <AmiBlitz3.ab3@9608>   LEA libpointer,A3
00027014 <AmiBlitz3.ab3@9612>   MOVE.l size_deflibs,D0
0002701A <AmiBlitz3.ab3@9613>   MOVE.l deflib,d1
0002701E <AmiBlitz3.ab3@9614>   BEQ 'l1
00027022 <AmiBlitz3.ab3@9615> BRA 'l2
00027028 <AmiBlitz3.ab3@9618>   MOVE.l #str_path_deflibs,D1
0002702C <AmiBlitz3.ab3@9621>   BSR.w load_libsfile
00027032 <AmiBlitz3.ab3@9622>   MOVE.l D0,ptr_deflibs
00027038 <AmiBlitz3.ab3@9625>   MOVE.l size_acidlibs,D0
0002703E <AmiBlitz3.ab3@9626>   MOVE.l #str_path_acidlibs,D1
00027042 <AmiBlitz3.ab3@9627>   BSR.w load_libsfile
00027048 <AmiBlitz3.ab3@9628>   MOVE.l D0,ptr_acidlibs
0002704A <AmiBlitz3.ab3@9632>   CLR.l (A3)
00027050 <AmiBlitz3.ab3@9633>   MOVE.l A3,ptr_userlibs
00027056 <AmiBlitz3.ab3@9638>   LEA str_libfilename,A0
0002705C <AmiBlitz3.ab3@9639>   LEA str_path_userlibs,A1
0002705E <AmiBlitz3.ab3@9642>     MOVE.b (A1)+,(A0)+
00027062 <AmiBlitz3.ab3@9643>   BNE.b JL_0_708E
00027064 <AmiBlitz3.ab3@9645>   SUBQ.w #1,A0
00027068 <AmiBlitz3.ab3@9646>   MOVE.b #$2F,(A0)+
0002706A <AmiBlitz3.ab3@9649>   MOVE.l A0,-(A7)                                          ; -- store str_path_userlibs in A7
00027070 <AmiBlitz3.ab3@9651>   LEA ptr_userlibs_list,A2
00027076 <AmiBlitz3.ab3@9652>   MOVEA.l ptr_userlibs,A3
0002707C <AmiBlitz3.ab3@9653>   MOVEA.l _dosbase,A6
0002707E <AmiBlitz3.ab3@9658>       MOVE.l (A2),D0                                       ; addresse aus liste nach D0
00027082 <AmiBlitz3.ab3@9659>       BNE.b JL_0_70C6                                      ; wenn nix drin, processing ueberspringen
00027084 <AmiBlitz3.ab3@9661>       CLR.l (A3)
00027086 <AmiBlitz3.ab3@9662>       ADDQ.w #4,A7
000270B0 <AmiBlitz3.ab3@9663>       !basic
000270C4 <AmiBlitz3.ab3@9664>       If fid<>-1
000270CE <AmiBlitz3.ab3@9665>         file_Close{fid}
000270DA <AmiBlitz3.ab3@9666>         fid = -1
000270F8 <AmiBlitz3.ab3@9668>       !asm
000270FC <AmiBlitz3.ab3@9669> BRA.w process_libraries
000270FE <AmiBlitz3.ab3@9672>       MOVEA.l D0,A2                                        ; addresse zureuck nach A2
00027102 <AmiBlitz3.ab3@9673>       TST.w $4(A2)                                         ; naechste addresse pruefen
00027106 <AmiBlitz3.ab3@9674>     BEQ.b JL_0_70BA
0002710A <AmiBlitz3.ab3@9676>     LEA $6(A2),A1
0002710C <AmiBlitz3.ab3@9677>     MOVEA.l (A7),A0
0002710E <AmiBlitz3.ab3@9680>       MOVE.b (A1)+,(A0)+
00027112 <AmiBlitz3.ab3@9681>     BNE.w JL_0_70D4
00027114 <AmiBlitz3.ab3@9685>     MOVE.l A0,-(A7)
0002711A <AmiBlitz3.ab3@9686>     MOVE.l #str_libfilename,D1
0002711C <AmiBlitz3.ab3@9687>     MOVEQ.l #-$02,D2
00027122 <AmiBlitz3.ab3@9688>     MOVEA.l _dosbase,A6
00027126 <AmiBlitz3.ab3@9689>      JSR _Lock(A6)
00027128 <AmiBlitz3.ab3@9690>     MOVE.l D0,D1
0002712C <AmiBlitz3.ab3@9691>      BEQ.w JL_0_7156
0002712E <AmiBlitz3.ab3@9692>     MOVEA.l (A7),A0
00027134 <AmiBlitz3.ab3@9693>     MOVE.b #$2F,-$1(A0)
00027136 <AmiBlitz3.ab3@9696>     MOVE.l D1,-(A7)
0002713C <AmiBlitz3.ab3@9697>     MOVE.l #ptr_parameterstore,D2
00027142 <AmiBlitz3.ab3@9698>     MOVEA.l _dosbase,A6
00027146 <AmiBlitz3.ab3@9699>     JSR _Examine(A6)
00027148 <AmiBlitz3.ab3@9700>     TST.l D0
0002714C <AmiBlitz3.ab3@9701>      BEQ.w JL_0_7150
00027152 <AmiBlitz3.ab3@9704>     LEA fib_FileName,A0
00027156 <AmiBlitz3.ab3@9705>     BSR.w check_for_infoextention
0002715A <AmiBlitz3.ab3@9706>     BEQ.w JL_0_7150
00027184 <AmiBlitz3.ab3@9709>     !basic
00027208 <AmiBlitz3.ab3@9710>       Poke$ ?str_libfilename,dos_AddPart{Peek$(?str_path_userlibs),Peek$(?fib_FileName)}
00027226 <AmiBlitz3.ab3@9711>     !asm
0002722C <AmiBlitz3.ab3@9712>     MOVE.l #str_libfilename,D1
00027230 <AmiBlitz3.ab3@9713>     BSR.w open_userlibfile
00027232 <AmiBlitz3.ab3@9716>     MOVE.l (A7)+,D1
00027238 <AmiBlitz3.ab3@9717>     MOVEA.l _dosbase,A6
0002723C <AmiBlitz3.ab3@9718>     JSR _UnLock(A6)
0002723E <AmiBlitz3.ab3@9721>     ADDQ.w #4,A7
00027242 <AmiBlitz3.ab3@9722> BRA.w JL_0_70BA
00027248 <AmiBlitz3.ab3@9725>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
0002724E <AmiBlitz3.ab3@9726>   MOVEA.l _dosbase,A6
00027252 <AmiBlitz3.ab3@9727>    JSR _Open(A6)
00027254 <AmiBlitz3.ab3@9728>   MOVE.l D0,D7
00027258 <AmiBlitz3.ab3@9729>    BEQ.w exit_userlibfile
0002725A <AmiBlitz3.ab3@9732>   MOVE.l D7,D1                                             ; filehandle
00027260 <AmiBlitz3.ab3@9733>   MOVE.l #optstuff,D2                                     ; buffer
00027266 <AmiBlitz3.ab3@9734>   MOVEA.l _dosbase,A6
00027268 <AmiBlitz3.ab3@9735>   MOVEQ.l #$20,D3                                          ; size
0002726C <AmiBlitz3.ab3@9736>   JSR _Read(A6)
00027272 <AmiBlitz3.ab3@9739>   MOVE.l optstuff+28,D6
00027274 <AmiBlitz3.ab3@9740>   LSL.l #2,D6
00027276 <AmiBlitz3.ab3@9741>   MOVE.l D6,D0
00027278 <AmiBlitz3.ab3@9742>   MOVEQ.l #$01,D1
0002727E <AmiBlitz3.ab3@9743>   MOVEA.l _execbase,A6
00027284 <AmiBlitz3.ab3@9744>   MOVE.l mempool,a0
00027288 <AmiBlitz3.ab3@9745>   JSR _AllocPooled(a6)
0002728A <AmiBlitz3.ab3@9746>   MOVEA.l D0,A5
00027290 <AmiBlitz3.ab3@9749>   MOVEA.l _dosbase,A6
00027292 <AmiBlitz3.ab3@9750>   MOVE.l D7,D1                                             ; filehandle
00027294 <AmiBlitz3.ab3@9751>   MOVE.l A5,D2                                             ; buffer
00027296 <AmiBlitz3.ab3@9752>   MOVE.l D6,D3                                             ; size
0002729A <AmiBlitz3.ab3@9753>    JSR _Read(A6)
0002729C <AmiBlitz3.ab3@9754>   MOVE.l A5,(A3)
0002729E <AmiBlitz3.ab3@9756>   MOVE.l A5,d0
000272A0 <AmiBlitz3.ab3@9758>   MOVEA.l A5,A3
000272A4 <AmiBlitz3.ab3@9759>   MOVE.l D6,$6(A5)
000272A8 <AmiBlitz3.ab3@9760>   CLR.l $20(A5)
000272D2 <AmiBlitz3.ab3@9762>   !basic
000272DC <AmiBlitz3.ab3@9764>   addr_libnum.l = PutD0 + 4
000272F0 <AmiBlitz3.ab3@9765>   If fid<>-1
00027390 <AmiBlitz3.ab3@9766>     currentlib$ = LSet$(Peek.s(?fib_FileName),30)+";"+LSet$(Get_Libinfo{addr_libnum},30) ;+";"+Str$(Peek.w(addr_libnum))
000273C2 <AmiBlitz3.ab3@9767>     file_WriteLine{fid,currentlib$}
000273E0 <AmiBlitz3.ab3@9769>   !asm
000273E2 <AmiBlitz3.ab3@9772>   MOVE.l D7,D1                                             ; filehandle
000273E8 <AmiBlitz3.ab3@9773>   MOVE.l #optstuff,D2                                     ; buffer
000273EA <AmiBlitz3.ab3@9774>   MOVEQ.l #$0C,D3                                          ; size
000273F0 <AmiBlitz3.ab3@9775>   MOVEA.l _dosbase,A6
000273F4 <AmiBlitz3.ab3@9776>    JSR _Read(A6)
000273FA <AmiBlitz3.ab3@9778>   CMP.l #$C,D0
000273FE <AmiBlitz3.ab3@9779>    BCS.w close_and_exit_userlibfile
00027404 <AmiBlitz3.ab3@9782>   MOVE.l optstuff+4,D0
00027408 <AmiBlitz3.ab3@9783>   MOVE.l D0,$20(A5)
0002740A <AmiBlitz3.ab3@9784>   LSL.l #2,D0
0002740C <AmiBlitz3.ab3@9785>   MOVE.l D0,D5
0002740E <AmiBlitz3.ab3@9786>   MOVEQ.l #$01,D1
00027414 <AmiBlitz3.ab3@9787>   MOVEA.l _execbase,A6
0002741A <AmiBlitz3.ab3@9788>   MOVE.l mempool,a0
0002741E <AmiBlitz3.ab3@9789>   JSR _AllocPooled(a6)
00027424 <AmiBlitz3.ab3@9791>   MOVEA.l _dosbase,A6
00027428 <AmiBlitz3.ab3@9792>   MOVE.l D0,$24(A5)
0002742A <AmiBlitz3.ab3@9793>   MOVE.l D7,D1
0002742C <AmiBlitz3.ab3@9794>   MOVE.l D0,D2
0002742E <AmiBlitz3.ab3@9795>   MOVE.l D5,D3
00027432 <AmiBlitz3.ab3@9796>   JSR _Read(A6)
00027434 <AmiBlitz3.ab3@9799>   MOVE.l D7,D1
0002743A <AmiBlitz3.ab3@9800>   MOVEA.l _dosbase,A6
0002743E <AmiBlitz3.ab3@9801> JMP _Close(A6)
00027440 <AmiBlitz3.ab3@9804> RTS
00027446 <AmiBlitz3.ab3@9810>   CLR.w number_of_objects
0002744C <AmiBlitz3.ab3@9811>   MOVEA.l end_of_tokenlist,A3
00027452 <AmiBlitz3.ab3@9812>   MOVEA.l libpointer,A2
00027456 <AmiBlitz3.ab3@9815>     CMPA.w #$0,A2
0002745A <AmiBlitz3.ab3@9816>     BEQ.w JL_0_72D8                                        ; <-- abbruch mit RTS
0002745E <AmiBlitz3.ab3@9818>     MOVE.w $4(A2),D7                                       ; <-- get tokennumber
00027462 <AmiBlitz3.ab3@9819>     BMI.w JL_0_7226
00027464 <AmiBlitz3.ab3@9820>       LSL.w #7,D7
00027466 <AmiBlitz3.ab3@9821>       ADDQ.w #1,D7
0002746A <AmiBlitz3.ab3@9822>       MOVE.w D7,$E(A2)
0002746E <AmiBlitz3.ab3@9825>     LEA $30(A2),A1
00027474 <AmiBlitz3.ab3@9826>     LEA temp1,A4
00027476 <AmiBlitz3.ab3@9829>       MOVE.w (A1),D0
0002747A <AmiBlitz3.ab3@9830>       BMI.w JL_0_72AE
0002747C <AmiBlitz3.ab3@9831>       MOVE.l A1,(A4)
0002747E <AmiBlitz3.ab3@9832>       MOVEA.l A1,A4
00027480 <AmiBlitz3.ab3@9833>       ADDQ.w #2,A4
00027482 <AmiBlitz3.ab3@9834>       ADDQ.w #6,A1
00027486 <AmiBlitz3.ab3@9835>       CMP.w #$8,D0
0002748A <AmiBlitz3.ab3@9836>       BEQ.w JL_0_7290
0002748E <AmiBlitz3.ab3@9837>         ANDI.w #$F,D0
00027492 <AmiBlitz3.ab3@9838>         BNE.w JL_0_725C
00027496 <AmiBlitz3.ab3@9839>           BSR.w skiplibreg
0002749A <AmiBlitz3.ab3@9840>           LEA $C(A1),A1
0002749C <AmiBlitz3.ab3@9841>           ADDQ.w #1,D7
000274A0 <AmiBlitz3.ab3@9842> BRA.w JL_0_7230
000274A4 <AmiBlitz3.ab3@9845>     BTST #$2,D0
000274A8 <AmiBlitz3.ab3@9846>     BEQ.w JL_0_7274
000274AA <AmiBlitz3.ab3@9847>       ADDQ.w #4,A1
000274AC <AmiBlitz3.ab3@9850>         TST.b (A1)+
000274B0 <AmiBlitz3.ab3@9851>       BPL.w JL_0_7266
000274B4 <AmiBlitz3.ab3@9852>       BSR.w aligna1
000274B8 <AmiBlitz3.ab3@9853> BRA.w JL_0_7290
000274BA <AmiBlitz3.ab3@9856>       MOVE.w (A1)+,D0
000274BE <AmiBlitz3.ab3@9857>       BMI.w JL_0_7290
000274C2 <AmiBlitz3.ab3@9858>       ANDI.w #$FF,D0
000274C4 <AmiBlitz3.ab3@9859>       ADDA.w D0,A1
000274C8 <AmiBlitz3.ab3@9860>       BSR.w aligna1
000274CC <AmiBlitz3.ab3@9861>       BSR.w skiplibreg
000274D0 <AmiBlitz3.ab3@9862>       LEA $C(A1),A1
000274D4 <AmiBlitz3.ab3@9863> BRA.w JL_0_7274
000274D6 <AmiBlitz3.ab3@9866>     MOVE.l A1,(A3)
000274D8 <AmiBlitz3.ab3@9867>     MOVEA.l A1,A3
000274DA <AmiBlitz3.ab3@9868>     ADDQ.w #4,A1
000274DC <AmiBlitz3.ab3@9869>     MOVE.w D7,(A1)+
000274DE <AmiBlitz3.ab3@9872>       TST.b (A1)+
000274E2 <AmiBlitz3.ab3@9873>     BNE.w JL_0_7298
000274E4 <AmiBlitz3.ab3@9876>       TST.b (A1)+
000274E8 <AmiBlitz3.ab3@9877>     BNE.w JL_0_729E
000274EC <AmiBlitz3.ab3@9879>     BSR.w aligna1
000274EE <AmiBlitz3.ab3@9880>     ADDQ.w #1,D7
000274F2 <AmiBlitz3.ab3@9881> BRA.w JL_0_7230
000274F6 <AmiBlitz3.ab3@9884>     TST.w $4(A2)
000274FA <AmiBlitz3.ab3@9885>      BMI.w JL_0_72BA
000274FE <AmiBlitz3.ab3@9886>     MOVE.w D7,$10(A2)
00027500 <AmiBlitz3.ab3@9889>     ADDQ.w #2,A1
00027502 <AmiBlitz3.ab3@9890>     TST.l (A1)+
00027506 <AmiBlitz3.ab3@9891>      BEQ.w JL_0_72CC
0002750C <AmiBlitz3.ab3@9892>     ADDQ.w #1,number_of_objects
00027510 <AmiBlitz3.ab3@9893>     LEA $16(A1),A1
00027512 <AmiBlitz3.ab3@9896>     SUBA.l A2,A1
00027516 <AmiBlitz3.ab3@9897>     MOVE.l A1,$12(A2)
00027518 <AmiBlitz3.ab3@9898>     MOVEA.l (A2),A2
0002751C <AmiBlitz3.ab3@9899> BRA.w JL_0_720E
0002751E <AmiBlitz3.ab3@9902>   CLR.l (A3)
00027524 <AmiBlitz3.ab3@9903> 
0002752A <AmiBlitz3.ab3@9904>   MOVE.l A7,errstack
00027534 <AmiBlitz3.ab3@9905>   MOVE.l #AL_0_730E,errcont
0002753C <AmiBlitz3.ab3@9906>   MOVE.w #$FFFF,ezerr
00027540 <AmiBlitz3.ab3@9907>   MOVE.w #$FFFA,D1
00027544 <AmiBlitz3.ab3@9908>    BSR.w JL_0_6F38
0002754A <AmiBlitz3.ab3@9909>   MOVE.l A1,tempvm
0002754E <AmiBlitz3.ab3@9910>   MOVE.w #$FDA7,D1
00027552 <AmiBlitz3.ab3@9911>    BSR.w JL_0_6F38
00027558 <AmiBlitz3.ab3@9912>   MOVE.l A1,ffplib
0002755A <AmiBlitz3.ab3@9915> RTS
0002755E <AmiBlitz3.ab3@9918> ffplib:  Ds.l 1
00027560 <AmiBlitz3.ab3@9922>     TST.w (A1)+
00027564 <AmiBlitz3.ab3@9923>     BEQ.w JL_0_7320
00027566 <AmiBlitz3.ab3@9924>     ADDQ.w #2,A1
0002756A <AmiBlitz3.ab3@9925> BRA.w skiplibreg
0002756C <AmiBlitz3.ab3@9928> RTS
0002756E <AmiBlitz3.ab3@9932>   EXG.l A1,A0
00027572 <AmiBlitz3.ab3@9933>   BSR.w aligna1
00027574 <AmiBlitz3.ab3@9934>   EXG.l A1,A0
00027576 <AmiBlitz3.ab3@9935> RTS
00027578 <AmiBlitz3.ab3@9938>   EXG.l D0,A1
0002757A <AmiBlitz3.ab3@9939>   ADDQ.l #1,D0
0002757E <AmiBlitz3.ab3@9940>   BCLR #$0,D0
00027580 <AmiBlitz3.ab3@9941>   EXG.l D0,A1
00027582 <AmiBlitz3.ab3@9942> RTS
00027588 <AmiBlitz3.ab3@9946>   MOVEA.l _execbase,A6
0002758E <AmiBlitz3.ab3@9947>   MOVEA.l ptr_userlibs,A2
00027590 <AmiBlitz3.ab3@9948>   MOVE.l (A2),D0
00027592 <AmiBlitz3.ab3@9949>   CLR.l (A2)
00027594 <AmiBlitz3.ab3@9950>   MOVEA.l D0,A2
00027598 <AmiBlitz3.ab3@9953>     CMPA.w #$0,A2
0002759C <AmiBlitz3.ab3@9954>     BEQ.w free_userlib
000275A0 <AmiBlitz3.ab3@9956>     MOVE.l $20(A2),D0
000275A4 <AmiBlitz3.ab3@9957>     BEQ.b JL_0_7360
000275A6 <AmiBlitz3.ab3@9958>       LSL.l #2,D0
000275AC <AmiBlitz3.ab3@9959>       MOVE.l mempool,a0
000275B0 <AmiBlitz3.ab3@9960>       MOVEA.l $24(A2),A1
000275B4 <AmiBlitz3.ab3@9961>       JSR _FreePooled(A6)
000275B6 <AmiBlitz3.ab3@9964>     MOVEA.l A2,A1
000275BA <AmiBlitz3.ab3@9965>     MOVE.l $6(A1),D0
000275C0 <AmiBlitz3.ab3@9966>     MOVE.l mempool,a0
000275C2 <AmiBlitz3.ab3@9967>     MOVEA.l (A2),A2
000275C8 <AmiBlitz3.ab3@9968>     MOVEA.l _execbase,A6
000275CC <AmiBlitz3.ab3@9969>     JSR _FreePooled(A6)
000275D0 <AmiBlitz3.ab3@9970> BRA.w JL_0_7348
000275D4 <AmiBlitz3.ab3@9974>   BSR.w free_userlibs
000275DA <AmiBlitz3.ab3@9975>   MOVEA.l _execbase,A6
000275E0 <AmiBlitz3.ab3@9976>   CLR.l libpointer
000275E6 <AmiBlitz3.ab3@9977>   MOVEA.l end_of_tokenlist,A0
000275E8 <AmiBlitz3.ab3@9978>   CLR.l (A0)
000275EE <AmiBlitz3.ab3@9980>   MOVE.l size_acidlibs,D0
000275F2 <AmiBlitz3.ab3@9981>   BEQ.b JL_0_73A2
000275F8 <AmiBlitz3.ab3@9982>     MOVE.l ptr_acidlibs,D1
000275FC <AmiBlitz3.ab3@9983>     BEQ.b JL_0_73A2
00027602 <AmiBlitz3.ab3@9984>       CLR.l ptr_acidlibs
00027604 <AmiBlitz3.ab3@9985>       MOVEA.l D1,A1
0002760A <AmiBlitz3.ab3@9986>       MOVE.l mempool,a0
00027610 <AmiBlitz3.ab3@9987>       MOVEA.l _execbase,A6
00027614 <AmiBlitz3.ab3@9988>       JSR _FreePooled(A6)                                 ; free acidlibs
0002761A <AmiBlitz3.ab3@9991>   MOVE.l size_deflibs,D0
0002761E <AmiBlitz3.ab3@9992>   BEQ.b JL_0_73BE
00027624 <AmiBlitz3.ab3@9993>     MOVE.l ptr_deflibs,D1
00027628 <AmiBlitz3.ab3@9994>     BEQ.b JL_0_73BE
0002762E <AmiBlitz3.ab3@9995>       CLR.l ptr_deflibs                                    ; d0: memorySize
00027630 <AmiBlitz3.ab3@9996>       MOVEA.l D1,A1                                        ; a1: memory
00027636 <AmiBlitz3.ab3@9997>       MOVE.l mempool,a0                                    ; a0: poolHeader
0002763C <AmiBlitz3.ab3@9998>       MOVEA.l _execbase,A6
00027640 <AmiBlitz3.ab3@9999>       JSR _FreePooled(A6)                                  ; free deflibs
00027642 <AmiBlitz3.ab3@10002> RTS
00027648 <AmiBlitz3.ab3@10006>   MOVEA.l currentmacroaddr,A0
0002764A <AmiBlitz3.ab3@10007>   MOVEA.l (A0),A2
0002764C <AmiBlitz3.ab3@10008>   CLR.l (A0)
00027652 <AmiBlitz3.ab3@10009>   MOVEA.l _execbase,A6
00027656 <AmiBlitz3.ab3@10012>     CMPA.w #$0,A2
0002765A <AmiBlitz3.ab3@10013>     BEQ.w JL_0_73FA
0002765C <AmiBlitz3.ab3@10014>     MOVEQ.l #$00,D0
00027660 <AmiBlitz3.ab3@10015>     MOVE.w $8(A2),D0
00027664 <AmiBlitz3.ab3@10016>     BEQ.w JL_0_73E8
00027668 <AmiBlitz3.ab3@10017>     MOVEA.l $4(A2),A1
0002766E <AmiBlitz3.ab3@10018>     MOVE.l mempool,a0
00027672 <AmiBlitz3.ab3@10019>     JSR _FreePooled(A6)
00027674 <AmiBlitz3.ab3@10022>     MOVEA.l A2,A1
00027676 <AmiBlitz3.ab3@10023>     MOVEA.l (A2),A2
00027678 <AmiBlitz3.ab3@10024>     MOVEQ.l #$00,D0
0002767C <AmiBlitz3.ab3@10025>     MOVE.b $C(A1),D0
00027682 <AmiBlitz3.ab3@10026>     MOVE.l mempool2,a0
00027686 <AmiBlitz3.ab3@10027>     JSR _FreePooled(A6)
0002768A <AmiBlitz3.ab3@10028> BRA.w JL_0_73CE
0002768C <AmiBlitz3.ab3@10031> RTS
00027692 <AmiBlitz3.ab3@10035>   MOVEA.l templabel,A2
00027698 <AmiBlitz3.ab3@10036>   CLR.l templabel
0002769A <AmiBlitz3.ab3@10037> RTS
000276A0 <AmiBlitz3.ab3@10040>   MOVEA.l _execbase,A6                                     ;??looks like dead code?
000276A4 <AmiBlitz3.ab3@10043>     CMPA.w #$0,A2
000276A8 <AmiBlitz3.ab3@10044>     BEQ.w JL_0_7426
000276AA <AmiBlitz3.ab3@10045>     MOVEQ.l #$00,D0
000276AE <AmiBlitz3.ab3@10046>     MOVE.b $E(A2),D0                                       ;labeltemp
000276B0 <AmiBlitz3.ab3@10047>     MOVEA.l A2,A1
000276B2 <AmiBlitz3.ab3@10048>     MOVEA.l (A2),A2
000276B8 <AmiBlitz3.ab3@10049>     MOVE.l mempool2,a0
000276BC <AmiBlitz3.ab3@10051> BRA.w JL_0_740C
000276BE <AmiBlitz3.ab3@10054> RTS
000276C4 <AmiBlitz3.ab3@10058>   MOVEA.l data1,A4
000276CA <AmiBlitz3.ab3@10059>   CMPA.l data2at,A4
000276CE <AmiBlitz3.ab3@10060>   BCC.w JL_0_7442
000276D0 <AmiBlitz3.ab3@10061>     MOVE.b D1,(A4)+
000276D6 <AmiBlitz3.ab3@10062>     MOVE.l A4,data1
000276D8 <AmiBlitz3.ab3@10063> RTS
000276E0 <AmiBlitz3.ab3@10066>   MOVE.w #$FFFF,dontwrite                                  ;move #-1, org source
000276E6 <AmiBlitz3.ab3@10067>   ADDQ.l #1,data1
000276E8 <AmiBlitz3.ab3@10068> RTS
000276EA <AmiBlitz3.ab3@10072>   SWAP D1
000276EE <AmiBlitz3.ab3@10073>   BSR.w pokedata1
000276F0 <AmiBlitz3.ab3@10074>   SWAP D1
000276F6 <AmiBlitz3.ab3@10077>   MOVEA.l data1,A4
000276FC <AmiBlitz3.ab3@10078>   CMPA.l data2at,A4
00027700 <AmiBlitz3.ab3@10079>    BCC.w JL_0_7474
00027702 <AmiBlitz3.ab3@10080>   MOVE.w D1,(A4)+
00027708 <AmiBlitz3.ab3@10081>   MOVE.l A4,data1
0002770A <AmiBlitz3.ab3@10082> RTS
00027712 <AmiBlitz3.ab3@10085>   MOVE.w #$FFFF,dontwrite
00027718 <AmiBlitz3.ab3@10086>   ADDQ.l #2,data1
0002771A <AmiBlitz3.ab3@10087> RTS
00027720 <AmiBlitz3.ab3@10091>   MOVE.l data1,D3                                      ;write local string/type allocs
00027722 <AmiBlitz3.ab3@10092>   MOVEQ.l #$00,D4
00027726 <AmiBlitz3.ab3@10095>   CMPA.w #$0,A2
0002772A <AmiBlitz3.ab3@10096>    BEQ.w JL_0_74CAc
0002772E <AmiBlitz3.ab3@10097>   TST.w $6(A2)
00027732 <AmiBlitz3.ab3@10098>    BNE.w JL_0_74C4c
00027736 <AmiBlitz3.ab3@10099>   MOVEA.l $A(A2),A3
0002773E <AmiBlitz3.ab3@10100>   CMPI.l #$100,$4(A3)
00027742 <AmiBlitz3.ab3@10101>    BCS.w JL_0_74C4c
00027746 <AmiBlitz3.ab3@10102>   MOVE.w $4(A2),D1
0002774A <AmiBlitz3.ab3@10103>    BSR.w pokedata1
0002774E <AmiBlitz3.ab3@10104>   MOVE.w $8(A3),D1
00027752 <AmiBlitz3.ab3@10105>    BSR.w pokedata1
00027754 <AmiBlitz3.ab3@10106>   ADDQ.w #1,D4
00027756 <AmiBlitz3.ab3@10109>    MOVEA.l (A2),A2
0002775A <AmiBlitz3.ab3@10110> BRA.w JL_0_7492c
0002775C <AmiBlitz3.ab3@10113>    TST.w D4
00027760 <AmiBlitz3.ab3@10114>    BEQ.w JL_0_74E0
00027764 <AmiBlitz3.ab3@10115>   MOVE.w #$FF37,D1
00027768 <AmiBlitz3.ab3@10116>    BSR.w uselib
0002776C <AmiBlitz3.ab3@10117>   MOVE.w #$FFFA,D1
00027770 <AmiBlitz3.ab3@10118> BRA.w uselib
00027776 <AmiBlitz3.ab3@10126>   MOVEA.l varbase,A2                                       ;add alloc mem for types/strings global
0002777C <AmiBlitz3.ab3@10129>   MOVE.l data1,D3
0002777E <AmiBlitz3.ab3@10130>   MOVEQ.l #$00,D4
00027784 <AmiBlitz3.ab3@10131>   TST.b iserror
00027788 <AmiBlitz3.ab3@10132>   BEQ JL_0_7492
0002778A <AmiBlitz3.ab3@10133>   RTS
0002778E <AmiBlitz3.ab3@10135>    CMPA.w #$0,A2
00027792 <AmiBlitz3.ab3@10136>    BEQ.w JL_0_74CA
00027796 <AmiBlitz3.ab3@10137>   TST.w $6(A2)
0002779A <AmiBlitz3.ab3@10138>    BNE.w JL_0_74C4
0002779E <AmiBlitz3.ab3@10139>   MOVEA.l $A(A2),A3
000277A6 <AmiBlitz3.ab3@10140>   CMPI.l #$100,$4(A3)
000277AA <AmiBlitz3.ab3@10141>    BCS.w JL_0_74C4
000277AE <AmiBlitz3.ab3@10142>   MOVE.w $4(A2),D1
000277B2 <AmiBlitz3.ab3@10143>    BSR.w pokedata1
000277B6 <AmiBlitz3.ab3@10144>   MOVE.w $8(A3),D1
000277BA <AmiBlitz3.ab3@10145>    BSR.w pokedata1
000277BC <AmiBlitz3.ab3@10146>   ADDQ.w #1,D4
000277BE <AmiBlitz3.ab3@10149>   MOVEA.l (A2),A2
000277C2 <AmiBlitz3.ab3@10150> BRA.w JL_0_7492
000277C8 <AmiBlitz3.ab3@10154>   MOVEA.l sharebase,A2
000277CC <AmiBlitz3.ab3@10157>   CMPA.w #$0,A2
000277D0 <AmiBlitz3.ab3@10158>    BEQ.w JL_0_74CAb
000277D4 <AmiBlitz3.ab3@10160>   TST.w $6(A2)
000277D8 <AmiBlitz3.ab3@10161>    BNE.w JL_0_74C4b
000277DC <AmiBlitz3.ab3@10162>   MOVEA.l $A(A2),A3
000277E4 <AmiBlitz3.ab3@10163>   CMPI.l #$100,$4(A3)
000277E8 <AmiBlitz3.ab3@10164>    BCS.w JL_0_74C4b
000277EC <AmiBlitz3.ab3@10165>   MOVE.w $4(A2),D1
000277F0 <AmiBlitz3.ab3@10166>    BSR.w pokedata1
000277F4 <AmiBlitz3.ab3@10167>   MOVE.w $8(A3),D1
000277F8 <AmiBlitz3.ab3@10168>    BSR.w pokedata1
000277FA <AmiBlitz3.ab3@10169>   ADDQ.w #1,D4
000277FC <AmiBlitz3.ab3@10172>   MOVEA.l (A2),A2
00027800 <AmiBlitz3.ab3@10173> BRA.w JL_0_7492b
00027802 <AmiBlitz3.ab3@10176>    TST.w D4
00027806 <AmiBlitz3.ab3@10177>    BEQ.w JL_0_74E0
0002780A <AmiBlitz3.ab3@10178>   MOVE.w #$FF37,D1
0002780E <AmiBlitz3.ab3@10179>    BSR.w uselib                                            ;use statics lib
00027812 <AmiBlitz3.ab3@10180>   MOVE.w #$FFFA,D1                                         ;use memlib
00027816 <AmiBlitz3.ab3@10181> BRA.w uselib
00027818 <AmiBlitz3.ab3@10184> RTS
0002781E <AmiBlitz3.ab3@10188>   MOVE.w numtoa2,D1
00027822 <AmiBlitz3.ab3@10189>    BSR.w writeword
00027826 <AmiBlitz3.ab3@10190>    BSR.w addoff
00027828 <AmiBlitz3.ab3@10191>   MOVE.l D3,D1
0002782C <AmiBlitz3.ab3@10192>    BSR.w writelong
0002782E <AmiBlitz3.ab3@10193>   SUBQ.w #1,D4
00027834 <AmiBlitz3.ab3@10194>   MOVE.w D4,endarray+2
0002783A <AmiBlitz3.ab3@10195>   MOVE.l endarray,D1
0002783E <AmiBlitz3.ab3@10196> BRA.w writelong
00027840 <AmiBlitz3.ab3@10200>   MOVE.l D3,-(A7)
00027846 <AmiBlitz3.ab3@10203>   MOVEA.l _dosbase,A6
0002784A <AmiBlitz3.ab3@10204>   JSR _Write(a6)
0002784C <AmiBlitz3.ab3@10206>   CMP.l (A7)+,D0
00027850 <AmiBlitz3.ab3@10207>    BNE.w JL_0_7516
00027852 <AmiBlitz3.ab3@10208> RTS
00027854 <AmiBlitz3.ab3@10211>   MOVE.l D7,D1
0002785A <AmiBlitz3.ab3@10213>   MOVEA.l _dosbase,A6
0002785E <AmiBlitz3.ab3@10214>   JSR _Close(a6)
00027864 <AmiBlitz3.ab3@10217> JMP error_create_exe
0002786A <AmiBlitz3.ab3@10226> 
00027870 <AmiBlitz3.ab3@10227>   MOVE.l A7,errstack
00027874 <AmiBlitz3.ab3@10228>   MOVEM.l d2-d7/a2-a6,-(a7)
0002787E <AmiBlitz3.ab3@10229>   MOVE.l #AL_0_7790,errcont
00027884 <AmiBlitz3.ab3@10230>    JSR call_setpointerbusy
0002788C <AmiBlitz3.ab3@10231>   MOVE.w #$FFFF,anyerrs
00027896 <AmiBlitz3.ab3@10232>   CMP.l #-1,chipstart
0002789A <AmiBlitz3.ab3@10233>   BEQ 'l01
000278A0 <AmiBlitz3.ab3@10234>   MOVE.l chipend,d1
000278A2 <AmiBlitz3.ab3@10235>   ADDQ.l #3,d1
000278A8 <AmiBlitz3.ab3@10236>   AND.l #$fffffffc,d1                                      ;bug
000278AE <AmiBlitz3.ab3@10237>   MOVE.l d1,chipend
000278B0 <AmiBlitz3.ab3@10238>   MOVE.l d1,a1
000278B6 <AmiBlitz3.ab3@10239>   MOVE.l chipstart,a0
000278B8 <AmiBlitz3.ab3@10240>   MOVE.l a1,d1
000278BA <AmiBlitz3.ab3@10241>   SUB.l a0,d1
000278C0 <AmiBlitz3.ab3@10242>   MOVE.l d1,chipsize
000278CA <AmiBlitz3.ab3@10245>   CMP.l #-1,bssstart
000278CE <AmiBlitz3.ab3@10246>   BEQ 'l11
000278D4 <AmiBlitz3.ab3@10247>   MOVE.l realbssend,a1
000278DA <AmiBlitz3.ab3@10248>   MOVE.l bssstart,a0
000278DC <AmiBlitz3.ab3@10249>   MOVE.l a1,d1
000278DE <AmiBlitz3.ab3@10250>   SUB.l a0,d1
000278E4 <AmiBlitz3.ab3@10251>   MOVE.l d1,bsssize
000278E8 <AmiBlitz3.ab3@10252>   BEQ 'l11
000278EA <AmiBlitz3.ab3@10255>   TST.b (a0)+
000278EE <AmiBlitz3.ab3@10256>   BEQ 'l31
000278F4 <AmiBlitz3.ab3@10257>   TST.b debugmode
000278F8 <AmiBlitz3.ab3@10258>   BEQ 'l1
000278FE <AmiBlitz3.ab3@10259>   TST.b exdebug
00027902 <AmiBlitz3.ab3@10260>   BNE 'l31
00027908 <AmiBlitz3.ab3@10263>   MOVE.l #nodata,-(a7)
0002790E <AmiBlitz3.ab3@10264> JMP handle_compileerror
00027910 <AmiBlitz3.ab3@10267>   CMP.l a0,a1
00027914 <AmiBlitz3.ab3@10268>   BGT 'l32
0002791A <AmiBlitz3.ab3@10269>   MOVE.l bssend,d1
0002791C <AmiBlitz3.ab3@10270>   ADDQ.l #3,d1
00027922 <AmiBlitz3.ab3@10271>   AND.l #$fffffffc,d1                                      ;bug
00027928 <AmiBlitz3.ab3@10272>   MOVE.l d1,bssend
0002792A <AmiBlitz3.ab3@10273>   MOVE.l d1,a1
00027930 <AmiBlitz3.ab3@10274>   MOVE.l bssstart,a0
00027932 <AmiBlitz3.ab3@10275>   MOVE.l a1,d1
00027934 <AmiBlitz3.ab3@10276>   SUB.l a0,d1
0002793A <AmiBlitz3.ab3@10277>   MOVE.l d1,bsssize
0002793E <AmiBlitz3.ab3@10280>   MOVEM.l d5-d7/d3,-(a7)
00027944 <AmiBlitz3.ab3@10281>   MOVE.w dontwrite,D1
00027948 <AmiBlitz3.ab3@10282>   BNE.w JL_0_757C
0002794E <AmiBlitz3.ab3@10283>   MOVE.l chipsize,d5
00027954 <AmiBlitz3.ab3@10284>   MOVE.l bsssize,d3
0002795A <AmiBlitz3.ab3@10285>   MOVE.l chipstart,d7
00027960 <AmiBlitz3.ab3@10286>   MOVE.l bssstart,d6
00027966 <AmiBlitz3.ab3@10287>   MOVEA.l hunkoffsetbase,A2
0002796C <AmiBlitz3.ab3@10288>   MOVEA.l destbufferstart,A1
0002796E <AmiBlitz3.ab3@10289>   MOVE.l A1,D2
00027974 <AmiBlitz3.ab3@10290>   ADD.l noinits,D2
0002797A <AmiBlitz3.ab3@10291>   CLR.l hunkoffsetnum
0002797E <AmiBlitz3.ab3@10294>   CMPA.w #$0,A2
00027982 <AmiBlitz3.ab3@10295>    BEQ.w JL_0_757C
00027986 <AmiBlitz3.ab3@10296>   MOVE.l $4(A2),D0
0002798A <AmiBlitz3.ab3@10297>    LEA $0(a1,d0.l),a0
0002798C <AmiBlitz3.ab3@10298>    MOVE.l (a0),d1
0002798E <AmiBlitz3.ab3@10299>   TST.l d1
00027992 <AmiBlitz3.ab3@10300>    BMI.w 'lm1
0002799A <AmiBlitz3.ab3@10301>   MOVE.b #0,newhunk
000279A4 <AmiBlitz3.ab3@10302>   CMP.l #-1,chipstart
000279A8 <AmiBlitz3.ab3@10303>   BEQ 'l10
000279AE <AmiBlitz3.ab3@10304>   CMP.l chipstart,d1
000279B2 <AmiBlitz3.ab3@10305>   BLT 'l10
000279BA <AmiBlitz3.ab3@10306>   MOVE.b #1,newhunk
000279C0 <AmiBlitz3.ab3@10307>   CMP.l chipend,d1
000279C4 <AmiBlitz3.ab3@10308>   BGE 'l110
000279C6 <AmiBlitz3.ab3@10309>   SUB.l d7,(a0)
000279CE <AmiBlitz3.ab3@10310>   ADD.l #$80000000,4(a2)
000279D2 <AmiBlitz3.ab3@10311> BRA JL_0_7576
000279D6 <AmiBlitz3.ab3@10314>   SUB.l d5,0(a0)
000279E0 <AmiBlitz3.ab3@10317>   CMP.l #-1,bssstart
000279E4 <AmiBlitz3.ab3@10318>     BEQ 'l11
000279EA <AmiBlitz3.ab3@10319>   CMP.l bssstart,d1
000279EE <AmiBlitz3.ab3@10320>   BLT 'l11
000279F4 <AmiBlitz3.ab3@10321>   CMP.l bssend,d1
000279F8 <AmiBlitz3.ab3@10322>   BGE 'l111
000279FE <AmiBlitz3.ab3@10323>   TST.b newhunk
00027A02 <AmiBlitz3.ab3@10324>   BEQ 'ln1
00027A04 <AmiBlitz3.ab3@10325>   ADD.l d5,(a0)
00027A06 <AmiBlitz3.ab3@10328>   SUB.l d6,(a0)
00027A0E <AmiBlitz3.ab3@10329>   ADD.l #$40000000,4(a2)
00027A12 <AmiBlitz3.ab3@10330> BRA JL_0_7576
00027A16 <AmiBlitz3.ab3@10333>   SUB.l d3,0(a0)
00027A18 <AmiBlitz3.ab3@10336>   SUB.l D2,(A0)
00027A1E <AmiBlitz3.ab3@10339>   ADDQ.l #1,hunkoffsetnum
00027A20 <AmiBlitz3.ab3@10342>    MOVEA.l (A2),A2
00027A24 <AmiBlitz3.ab3@10343> BRA.w JL_0_755E
00027A28 <AmiBlitz3.ab3@10347>   MOVEM.l (a7)+,d5-d7/d3
00027A2E <AmiBlitz3.ab3@10348>   MOVE.l ptr_newexefilename,D1
00027A34 <AmiBlitz3.ab3@10349>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00027A3A <AmiBlitz3.ab3@10350>   MOVEA.l _dosbase,A6
00027A3E <AmiBlitz3.ab3@10351>    JSR _Open(A6)
00027A40 <AmiBlitz3.ab3@10352>   MOVE.l D0,D7
00027A44 <AmiBlitz3.ab3@10353>    BEQ.w execerr
00027A4A <AmiBlitz3.ab3@10354>   MOVE.l objlen,D0
00027A50 <AmiBlitz3.ab3@10355>   SUB.l #moremem,d0
00027A56 <AmiBlitz3.ab3@10356>   SUB.l noinits,D0
00027A60 <AmiBlitz3.ab3@10357>   CMP.l #-1,bssstart
00027A64 <AmiBlitz3.ab3@10358>   BEQ 'l60
00027A6A <AmiBlitz3.ab3@10359>   SUB.l bsssize,d0
00027A70 <AmiBlitz3.ab3@10360>   SUB.l chipsize,d0
00027A74 <AmiBlitz3.ab3@10361> BRA.s 'l61
00027A7E <AmiBlitz3.ab3@10364>   CMP.l #-1,chipstart
00027A82 <AmiBlitz3.ab3@10365>   BEQ 'l61
00027A88 <AmiBlitz3.ab3@10366>   SUB.l bsssize,d0
00027A8E <AmiBlitz3.ab3@10367>   SUB.l chipsize,d0
00027A90 <AmiBlitz3.ab3@10370>   ADDQ.l #3,D0
00027A92 <AmiBlitz3.ab3@10371>   LSR.l #2,D0
00027A98 <AmiBlitz3.ab3@10372>   MOVE.l D0,tstsize1
00027A9E <AmiBlitz3.ab3@10373>   MOVE.l D0,tstsize2
00027AA0 <AmiBlitz3.ab3@10374>   MOVE.l D7,D1
00027AA6 <AmiBlitz3.ab3@10375>   MOVE.l #tsthead,D2                                      ;hunkbegin
00027AA8 <AmiBlitz3.ab3@10376>   MOVEQ.l #$20,D3
00027AB2 <AmiBlitz3.ab3@10377>   CMP.l #-1,bssstart
00027AB6 <AmiBlitz3.ab3@10378>   BEQ 'lb1
00027AC0 <AmiBlitz3.ab3@10379>   CMP.l #-1,chipstart
00027AC4 <AmiBlitz3.ab3@10380>   BEQ 'lb1
00027ACE <AmiBlitz3.ab3@10381>   MOVE.l #1,bssnum
00027AD8 <AmiBlitz3.ab3@10382>   MOVE.l #2,chipnum
00027ADA <AmiBlitz3.ab3@10383>   MOVEQ.l #$28,D3
00027AE0 <AmiBlitz3.ab3@10384>   MOVE.l bsssize,d2
00027AE2 <AmiBlitz3.ab3@10385>   ADDQ.l #3,d2
00027AE4 <AmiBlitz3.ab3@10386>   ASR.l #2,d2
00027AEA <AmiBlitz3.ab3@10387>   MOVE.l d2,hunkend+8
00027AF0 <AmiBlitz3.ab3@10388>   MOVE.l d2,bsssize3
00027AF6 <AmiBlitz3.ab3@10389>   MOVE.l chipsize,d2
00027AF8 <AmiBlitz3.ab3@10390>   ADDQ.l #3,d2
00027AFA <AmiBlitz3.ab3@10391>   ASR.l #2,d2
00027B00 <AmiBlitz3.ab3@10392>   MOVE.l d2,chipsize2
00027B0A <AmiBlitz3.ab3@10393>   ADD.l #$40000000,chipsize2
00027B10 <AmiBlitz3.ab3@10394>   MOVE.l d2,hunkend2+8
00027B16 <AmiBlitz3.ab3@10395>   MOVE.l D0,tstsize1c
00027B1C <AmiBlitz3.ab3@10396>   MOVE.l D0,tstsize2c
00027B22 <AmiBlitz3.ab3@10397>   MOVE.l #hunkbegin2,d2
00027B26 <AmiBlitz3.ab3@10398> BRA 'l100
00027B30 <AmiBlitz3.ab3@10401>   CMP.l #-1,bssstart
00027B34 <AmiBlitz3.ab3@10402>   BEQ 'l10
00027B3E <AmiBlitz3.ab3@10403>   MOVE.l #1,bssnum
00027B40 <AmiBlitz3.ab3@10404>   MOVEQ.l #$24,D3
00027B46 <AmiBlitz3.ab3@10405>   MOVE.l bsssize,d2
00027B48 <AmiBlitz3.ab3@10406>   ADDQ.l #3,d2
00027B4A <AmiBlitz3.ab3@10407>   ASR.l #2,d2
00027B50 <AmiBlitz3.ab3@10408>   MOVE.l d2,hunkend+8
00027B56 <AmiBlitz3.ab3@10409>   MOVE.l d2,bsssize2
00027B5C <AmiBlitz3.ab3@10410>   MOVE.l D0,tstsize1b
00027B62 <AmiBlitz3.ab3@10411>   MOVE.l D0,tstsize2b
00027B68 <AmiBlitz3.ab3@10412>   MOVE.l #hunkbegin,d2
00027B72 <AmiBlitz3.ab3@10415>   CMP.l #-1,chipstart
00027B76 <AmiBlitz3.ab3@10416>   BEQ 'l100
00027B80 <AmiBlitz3.ab3@10417>   MOVE.l #1,chipnum
00027B82 <AmiBlitz3.ab3@10418>   MOVEQ.l #$24,D3
00027B88 <AmiBlitz3.ab3@10419>   MOVE.l chipsize,d2
00027B8A <AmiBlitz3.ab3@10420>   ADDQ.l #3,d2
00027B8C <AmiBlitz3.ab3@10421>   ASR.l #2,d2
00027B92 <AmiBlitz3.ab3@10422>   MOVE.l d2,hunkend2+8
00027B98 <AmiBlitz3.ab3@10423>   MOVE.l d2,bsssize2
00027BA2 <AmiBlitz3.ab3@10424>   ADD.l #$40000000,bsssize2
00027BA8 <AmiBlitz3.ab3@10425>   MOVE.l D0,tstsize1b
00027BAE <AmiBlitz3.ab3@10426>   MOVE.l D0,tstsize2b
00027BB4 <AmiBlitz3.ab3@10427>   MOVE.l #hunkbegin,d2
00027BB8 <AmiBlitz3.ab3@10430>    BSR.w mywrite
00027BBE <AmiBlitz3.ab3@10431>   MOVE.l destbufferstart,D2
00027BC4 <AmiBlitz3.ab3@10432>   ADD.l noinits,D2
00027BCA <AmiBlitz3.ab3@10433>   MOVE.l objlen,D3
00027BD0 <AmiBlitz3.ab3@10434>   SUB.l #moremem,d3
00027BD6 <AmiBlitz3.ab3@10435>   SUB.l noinits,D3
00027BE0 <AmiBlitz3.ab3@10436>   CMP.l #-1,bssstart
00027BE4 <AmiBlitz3.ab3@10437>   BNE 'l40
00027BEE <AmiBlitz3.ab3@10438>   CMP.l #-1,chipstart
00027BF2 <AmiBlitz3.ab3@10439>   BNE 'l40
00027BF6 <AmiBlitz3.ab3@10440> BRA 'l41
00027BFC <AmiBlitz3.ab3@10443>   MOVE.l codeend,d1
00027BFE <AmiBlitz3.ab3@10444>     SUB.l d2,d1
00027C00 <AmiBlitz3.ab3@10445>     MOVE.l d1,d3
00027C06 <AmiBlitz3.ab3@10446>   SUB.l bsssize,d3
00027C0C <AmiBlitz3.ab3@10447>   SUB.l chipsize,d3
00027C0E <AmiBlitz3.ab3@10448>   MOVE.l D7,D1
00027C12 <AmiBlitz3.ab3@10449>   BSR.w mywrite
00027C18 <AmiBlitz3.ab3@10450>   MOVE.l objlen,D3
00027C1E <AmiBlitz3.ab3@10451>   SUB.l #moremem,d3
00027C24 <AmiBlitz3.ab3@10452>   SUB.l noinits,D3
00027C26 <AmiBlitz3.ab3@10453>   MOVE.l d3,d1
00027C2C <AmiBlitz3.ab3@10454>   MOVE.l destbufferstart,D2
00027C32 <AmiBlitz3.ab3@10455>   ADD.l noinits,D2
00027C34 <AmiBlitz3.ab3@10456>   ADD.l d2,d1
00027C3A <AmiBlitz3.ab3@10457>   SUB.l codeend,d1
00027C3C <AmiBlitz3.ab3@10458>   MOVE.l d1,d3
00027C42 <AmiBlitz3.ab3@10459>   MOVE.l codeend,d2
00027C44 <AmiBlitz3.ab3@10462>   MOVE.l d2,d1
00027C46 <AmiBlitz3.ab3@10463>   ADD.l d3,d1
00027C48 <AmiBlitz3.ab3@10464>   ADDQ.l #3,D1
00027C4E <AmiBlitz3.ab3@10465>   ANDI.l #$FFFFFFFC,D1
00027C50 <AmiBlitz3.ab3@10466>   SUB.l d2,d1
00027C52 <AmiBlitz3.ab3@10467>   MOVE.l d1,d3
00027C54 <AmiBlitz3.ab3@10468>   MOVE.l D7,D1
00027C58 <AmiBlitz3.ab3@10469>    BSR.w mywrite
00027C62 <AmiBlitz3.ab3@10470>   MOVE.l hunkoffsetcounter,tstsize3
00027C66 <AmiBlitz3.ab3@10471>    BEQ.w JL_0_7646
00027C68 <AmiBlitz3.ab3@10472>   MOVE.l D7,D1
00027C6E <AmiBlitz3.ab3@10473>   MOVE.l #tstend,D2
00027C70 <AmiBlitz3.ab3@10474>   MOVEQ.l #$04,D3
00027C74 <AmiBlitz3.ab3@10475>    BSR.w mywrite
00027C7A <AmiBlitz3.ab3@10476>    MOVEA.l _execbase,A6
00027C80 <AmiBlitz3.ab3@10477>    MOVE.l hunkoffsetcounter,d0
00027C82 <AmiBlitz3.ab3@10478>    ASL.l #2,d0
00027C88 <AmiBlitz3.ab3@10479>    ADD.l #12,d0
00027C8A <AmiBlitz3.ab3@10480>    MOVEQ #0,d1
00027C8E <AmiBlitz3.ab3@10481>    JSR _AllocMem(a6)
00027C90 <AmiBlitz3.ab3@10482>    TST.l d0
00027C94 <AmiBlitz3.ab3@10483>    BEQ nomem
00027C9A <AmiBlitz3.ab3@10484>    MOVE.l noinits,D4
00027C9C <AmiBlitz3.ab3@10485>    MOVE.l d5,-(a7)
00027C9E <AmiBlitz3.ab3@10486>    MOVE.l d0,d5
00027CA0 <AmiBlitz3.ab3@10487>    MOVE.l d0,a1
00027CA6 <AmiBlitz3.ab3@10488>    MOVEA.l hunkoffsetbase,A2
00027CAE <AmiBlitz3.ab3@10489>    MOVE.b #0,newhunk
00027CB2 <AmiBlitz3.ab3@10492>   CMPA.w #$0,A2
00027CB6 <AmiBlitz3.ab3@10493>    BEQ.w savehunk
00027CBC <AmiBlitz3.ab3@10494>   MOVE.l destbufferstart,D2
00027CC2 <AmiBlitz3.ab3@10495>   ADD.l noinits,D2
00027CC6 <AmiBlitz3.ab3@10496>   MOVE.l  $4(A2),d1
00027CCA <AmiBlitz3.ab3@10497>   BTST #31,d1
00027CCE <AmiBlitz3.ab3@10498>   BEQ 'lh1
00027CD6 <AmiBlitz3.ab3@10499>   MOVE.b #1,newhunk
00027CDA <AmiBlitz3.ab3@10500> BRA 'lh3
00027CDE <AmiBlitz3.ab3@10503>   BTST #30,d1
00027CE2 <AmiBlitz3.ab3@10504>   BEQ 'lh2
00027CEA <AmiBlitz3.ab3@10505>   MOVE.b #1,newhunk
00027CEE <AmiBlitz3.ab3@10506> BRA 'lh3
00027CF0 <AmiBlitz3.ab3@10509>   ADD.l d1,d2
00027CF6 <AmiBlitz3.ab3@10510>   CMP.l chipend,d2
00027CFA <AmiBlitz3.ab3@10511>   BLT 'l100
00027D00 <AmiBlitz3.ab3@10512>   SUB.l chipsize,d1
00027D06 <AmiBlitz3.ab3@10515>   CMP.l bssend,d2
00027D0A <AmiBlitz3.ab3@10516>   BLT 'l101
00027D10 <AmiBlitz3.ab3@10517>   SUB.l bsssize,d1
00027D12 <AmiBlitz3.ab3@10520>   MOVE.l d1,(a1)
00027D14 <AmiBlitz3.ab3@10521>   SUB.l D4,(A1)+
00027D16 <AmiBlitz3.ab3@10524>   MOVEA.l (A2),A2
00027D1A <AmiBlitz3.ab3@10525> BRA.w menu_createresidentfile__oloopb
00027D1C <AmiBlitz3.ab3@10529>   MOVE.l D7,D1
00027D22 <AmiBlitz3.ab3@10530>   MOVEA.l _dosbase,A6
00027D2C <AmiBlitz3.ab3@10531>   MOVE.l hunkoffsetnum,tstsize3
00027D30 <AmiBlitz3.ab3@10532>   BEQ 'ln1
00027D36 <AmiBlitz3.ab3@10533>   MOVE.l #tstend+4,d2
00027D38 <AmiBlitz3.ab3@10534>     MOVEQ #8,d3
00027D3C <AmiBlitz3.ab3@10535>    JSR _Write(A6)
00027D3E <AmiBlitz3.ab3@10536>   MOVE.l d7,d1
00027D44 <AmiBlitz3.ab3@10537>   MOVE.l hunkoffsetnum,d3
00027D46 <AmiBlitz3.ab3@10538>   ASL.l #2,d3
00027D48 <AmiBlitz3.ab3@10539>   MOVE.l d5,D2
00027D4C <AmiBlitz3.ab3@10540>   JSR _Write(a6)
00027D52 <AmiBlitz3.ab3@10543>   TST.b newhunk
00027D56 <AmiBlitz3.ab3@10544>   BEQ 'l10
00027D5C <AmiBlitz3.ab3@10545>   MOVEA.l hunkoffsetbase,A2
00027D5E <AmiBlitz3.ab3@10546>   MOVE.l d5,a0
00027D60 <AmiBlitz3.ab3@10547>   ADDQ #8,a0
00027D68 <AmiBlitz3.ab3@10548>   MOVE.l bssnum,-4(a0)
00027D6A <AmiBlitz3.ab3@10549>   MOVEQ #0,d6
00027D6E <AmiBlitz3.ab3@10552>   CMPA.w #$0,A2
00027D72 <AmiBlitz3.ab3@10553>    BEQ.w 'lh3
00027D78 <AmiBlitz3.ab3@10554>   MOVE.l destbufferstart,D2
00027D7E <AmiBlitz3.ab3@10555>   ADD.l noinits,D2
00027D82 <AmiBlitz3.ab3@10556>   MOVE.l  $4(A2),d1
00027D86 <AmiBlitz3.ab3@10557>   BTST #30,d1
00027D8A <AmiBlitz3.ab3@10558>   BEQ 'lh1
00027D8E <AmiBlitz3.ab3@10559>   BCLR #30,d1
00027D90 <AmiBlitz3.ab3@10560>   MOVE.l d1,(a0)
00027D92 <AmiBlitz3.ab3@10561>   SUB.l D4,(A0)+
00027D94 <AmiBlitz3.ab3@10562>   ADDQ.l #1,d6
00027D96 <AmiBlitz3.ab3@10565>   MOVE.l (a2),a2
00027D9A <AmiBlitz3.ab3@10566> BRA 'lh2
00027D9C <AmiBlitz3.ab3@10569>   TST.l d6
00027DA0 <AmiBlitz3.ab3@10570>     BEQ 'lh10
00027DA2 <AmiBlitz3.ab3@10571>     MOVE.l d5,a0
00027DA4 <AmiBlitz3.ab3@10572>     MOVE.l d6,(a0)
00027DA6 <AmiBlitz3.ab3@10573>     MOVE.l d7,d1
00027DA8 <AmiBlitz3.ab3@10574>     MOVE.l d5,d2
00027DAA <AmiBlitz3.ab3@10575>     MOVE.l d6,d3
00027DAC <AmiBlitz3.ab3@10576>     ASL.l #2,d3
00027DAE <AmiBlitz3.ab3@10577>     ADDQ.l #8,d3
00027DB2 <AmiBlitz3.ab3@10578>     BSR.w mywrite
00027DB8 <AmiBlitz3.ab3@10581>   MOVEA.l hunkoffsetbase,A2
00027DBA <AmiBlitz3.ab3@10582>   MOVE.l d5,a0
00027DBC <AmiBlitz3.ab3@10583>   ADDQ #8,a0
00027DC4 <AmiBlitz3.ab3@10584>   MOVE.l chipnum,-4(a0)
00027DC6 <AmiBlitz3.ab3@10585>   MOVEQ #0,d6
00027DCA <AmiBlitz3.ab3@10588>   CMPA.w #$0,A2
00027DCE <AmiBlitz3.ab3@10589>    BEQ.w 'lh30
00027DD4 <AmiBlitz3.ab3@10590>   MOVE.l destbufferstart,D2
00027DDA <AmiBlitz3.ab3@10591>   ADD.l noinits,D2
00027DDE <AmiBlitz3.ab3@10592>   MOVE.l  $4(A2),d1
00027DE2 <AmiBlitz3.ab3@10593>   BTST #31,d1
00027DE6 <AmiBlitz3.ab3@10594>   BEQ 'lh11
00027DEA <AmiBlitz3.ab3@10595>   BCLR #31,d1
00027DEC <AmiBlitz3.ab3@10596>   MOVE.l d1,(a0)
00027DEE <AmiBlitz3.ab3@10597>   SUB.l D4,(A0)+
00027DF0 <AmiBlitz3.ab3@10598>   ADDQ.l #1,d6
00027DF2 <AmiBlitz3.ab3@10601>   MOVE.l (a2),a2
00027DF6 <AmiBlitz3.ab3@10602> BRA 'lh20
00027DF8 <AmiBlitz3.ab3@10605>   TST.l d6
00027DFC <AmiBlitz3.ab3@10606>     BEQ 'l10
00027DFE <AmiBlitz3.ab3@10607>     MOVE.l d5,a0
00027E00 <AmiBlitz3.ab3@10608>     MOVE.l d6,(a0)
00027E02 <AmiBlitz3.ab3@10609>     MOVE.l d7,d1
00027E04 <AmiBlitz3.ab3@10610>     MOVE.l d5,d2
00027E06 <AmiBlitz3.ab3@10611>     MOVE.l d6,d3
00027E08 <AmiBlitz3.ab3@10612>     ASL.l #2,d3
00027E0A <AmiBlitz3.ab3@10613>     ADDQ.l #8,d3
00027E0E <AmiBlitz3.ab3@10614>     BSR.w mywrite
00027E14 <AmiBlitz3.ab3@10618>    MOVEA.l _execbase,A6
00027E1A <AmiBlitz3.ab3@10619>    MOVE.l hunkoffsetcounter,d0
00027E1C <AmiBlitz3.ab3@10620>    ASL.l #2,d0
00027E22 <AmiBlitz3.ab3@10621>    ADD.l #12,d0
00027E24 <AmiBlitz3.ab3@10622>    MOVE.l d5,a1
00027E28 <AmiBlitz3.ab3@10623>    JSR _FreeMem(a6)
00027E2E <AmiBlitz3.ab3@10624>    MOVEA.l _dosbase,A6
00027E30 <AmiBlitz3.ab3@10625>    MOVE.l (a7)+,d5
00027E34 <AmiBlitz3.ab3@10626> BRA JL_0_7632
00027E3A <AmiBlitz3.ab3@10630>   MOVEA.l hunkoffsetbase,A2
00027E40 <AmiBlitz3.ab3@10631>   MOVE.l noinits,D4
00027E44 <AmiBlitz3.ab3@10634>   CMPA.w #$0,A2                                            ;write hunkoffsets
00027E48 <AmiBlitz3.ab3@10635>   BEQ.w JL_0_7632
00027E4C <AmiBlitz3.ab3@10636>   LEA $4(A2),A1
00027E4E <AmiBlitz3.ab3@10637>   SUB.l D4,(A1)
00027E50 <AmiBlitz3.ab3@10638>   MOVE.l D7,D1
00027E52 <AmiBlitz3.ab3@10639>   MOVE.l A1,D2
00027E54 <AmiBlitz3.ab3@10640>   MOVEQ.l #$04,D3
00027E58 <AmiBlitz3.ab3@10641>   BSR.w mywrite
00027E5C <AmiBlitz3.ab3@10642>   ADD.l D4,$4(A2)
00027E5E <AmiBlitz3.ab3@10643>   MOVEA.l (A2),A2
00027E62 <AmiBlitz3.ab3@10644> BRA.w JL_0_7610
00027E68 <AmiBlitz3.ab3@10647>   CLR.l tstsize3
00027E6A <AmiBlitz3.ab3@10648>   MOVE.l D7,D1
00027E70 <AmiBlitz3.ab3@10649>   MOVE.l #tstsize3,D2
00027E72 <AmiBlitz3.ab3@10650>   MOVEQ.l #$04,D3
00027E76 <AmiBlitz3.ab3@10651>    BSR.w mywrite
00027E7E <AmiBlitz3.ab3@10654>   BTST #$7,link_debuginfo
00027E82 <AmiBlitz3.ab3@10655>    BEQ.w JL_0_7706
00027E88 <AmiBlitz3.ab3@10656>   MOVE.l #sysdebug,D2                                      ;debughunks
00027E8A <AmiBlitz3.ab3@10657>   MOVEQ.l #$04,D3
00027E8C <AmiBlitz3.ab3@10658>   MOVE.l D7,D1
00027E90 <AmiBlitz3.ab3@10659>    BSR.w mywrite
00027E96 <AmiBlitz3.ab3@10660>   MOVEA.l labelbase,A2
00027E9A <AmiBlitz3.ab3@10663>   CMPA.w #$0,A2
00027E9E <AmiBlitz3.ab3@10664>    BEQ.w JL_0_76F8
00027EA4 <AmiBlitz3.ab3@10665>   BTST #$0,$7(A2)
00027EA8 <AmiBlitz3.ab3@10666>    BEQ.w JL_0_7682
00027EB0 <AmiBlitz3.ab3@10667>   CMPI.l #$1,$4(A2)
00027EB4 <AmiBlitz3.ab3@10669>   BRA.w JL_0_76F2                                            ;only addr labels
00027EB6 <AmiBlitz3.ab3@10671>   MOVEQ.l #$00,D4
00027EBA <AmiBlitz3.ab3@10672>   MOVE.b $12(A2),D4
00027EBE <AmiBlitz3.ab3@10673>   SUBI.w #$13,D4
00027EC0 <AmiBlitz3.ab3@10674>   ADDQ.w #2,D4
00027EC4 <AmiBlitz3.ab3@10675>   ANDI.w #$FFFC,D4
00027EC6 <AmiBlitz3.ab3@10676>   MOVE.l D4,D5
00027EC8 <AmiBlitz3.ab3@10677>   LSR.w #2,D5
00027ECE <AmiBlitz3.ab3@10678>   MOVE.l D5,temp1
00027ED0 <AmiBlitz3.ab3@10679>   LSL.w #2,D5
00027ED6 <AmiBlitz3.ab3@10680>   MOVE.l #temp1,a1
00027EDC <AmiBlitz3.ab3@10682>   LEA debugstore,a0
00027EDE <AmiBlitz3.ab3@10683>   MOVE.l (a1),(a0)+
00027EE0 <AmiBlitz3.ab3@10684>   MOVEQ.l #$04,D3
00027EE4 <AmiBlitz3.ab3@10687>   LEA $13(A2),A1
00027EE6 <AmiBlitz3.ab3@10688>   MOVE.l d4,d1
00027EE8 <AmiBlitz3.ab3@10689>   SUBQ.l #1,d1
00027EEA <AmiBlitz3.ab3@10692>     MOVE.b (a1)+,d0
00027EEE <AmiBlitz3.ab3@10693>     BEQ 'l21
00027EF2 <AmiBlitz3.ab3@10694>     CMP.b #"'",d0                                            ; ' does reassembler/assembler not like, so replace
00027EF6 <AmiBlitz3.ab3@10695>     BNE 'ok
00027EFA <AmiBlitz3.ab3@10696>     MOVE.b #"_",d0
00027EFC <AmiBlitz3.ab3@10697> 'ok    MOVE.b d0,(a0)+                                      ; copy labeltext to debuginfo
00027F00 <AmiBlitz3.ab3@10698>   DBF d1,'l10
00027F04 <AmiBlitz3.ab3@10700> BRA 'l22
00027F06 <AmiBlitz3.ab3@10703>       CLR.b (a0)+
00027F0A <AmiBlitz3.ab3@10704>   DBF d1,'l21
00027F0C <AmiBlitz3.ab3@10707>   ADD.l d4,d3
00027F0E <AmiBlitz3.ab3@10712>   SUB.l D4,D5
00027F12 <AmiBlitz3.ab3@10713>    BEQ.w JL_0_76CE
00027F18 <AmiBlitz3.ab3@10714>   MOVE.l #zero,a1
00027F1A <AmiBlitz3.ab3@10716>   MOVE.l (a1),(a0)+
00027F1C <AmiBlitz3.ab3@10718>   ADD.l d5,d3
00027F20 <AmiBlitz3.ab3@10723>   MOVE.l $8(A2),D2
00027F26 <AmiBlitz3.ab3@10724>   SUB.l destbufferstart,D2
00027F2C <AmiBlitz3.ab3@10725>   SUB.l noinits,D2
00027F32 <AmiBlitz3.ab3@10726>   MOVE.l D2,temp1
00027F38 <AmiBlitz3.ab3@10727>   MOVE.l #temp1,a1
00027F3A <AmiBlitz3.ab3@10729>   MOVE.l (a1),(a0)+
00027F40 <AmiBlitz3.ab3@10730>   ADD.l #4,d3
00027F46 <AmiBlitz3.ab3@10731>   LEA debugstore,a0
00027F48 <AmiBlitz3.ab3@10732>   MOVE.l a0,d2
00027F4A <AmiBlitz3.ab3@10734>   MOVE.l D7,D1
00027F4E <AmiBlitz3.ab3@10735>   BSR.w mywrite
00027F50 <AmiBlitz3.ab3@10738>   MOVEA.l (A2),A2
00027F54 <AmiBlitz3.ab3@10739> BRA.w JL_0_7664
00027F5A <AmiBlitz3.ab3@10743>   MOVE.l #zero,D2
00027F5C <AmiBlitz3.ab3@10744>   MOVEQ.l #$04,D3
00027F5E <AmiBlitz3.ab3@10745>   MOVE.l D7,D1
00027F62 <AmiBlitz3.ab3@10746>   BSR.w mywrite
00027F64 <AmiBlitz3.ab3@10749>   MOVE.l D7,D1
00027F6A <AmiBlitz3.ab3@10750>   MOVE.l #tstdone,D2                                      ;hunkend
00027F6C <AmiBlitz3.ab3@10751>   MOVEQ.l #$04,D3
00027F76 <AmiBlitz3.ab3@10752>   CMPI.l #-1,bssstart
00027F7A <AmiBlitz3.ab3@10753>   BEQ 'l10
00027F7C <AmiBlitz3.ab3@10754>   MOVEQ #16,d3
00027F82 <AmiBlitz3.ab3@10755>   MOVE.l #hunkend,d2
00027F8C <AmiBlitz3.ab3@10756>   CMPI.l #-1,chipstart
00027F90 <AmiBlitz3.ab3@10757>   BEQ 'l10
00027F92 <AmiBlitz3.ab3@10758>   MOVE.l d7,d1
00027F94 <AmiBlitz3.ab3@10759>   MOVEQ #12,d3
00027F98 <AmiBlitz3.ab3@10760>   BSR.w mywrite
00027FA2 <AmiBlitz3.ab3@10763>   CMPI.l #-1,chipstart
00027FA6 <AmiBlitz3.ab3@10764>   BEQ 'l11
00027FA8 <AmiBlitz3.ab3@10765>   MOVEQ #12,d3
00027FAE <AmiBlitz3.ab3@10766>   MOVE.l #hunkend2,d2
00027FB0 <AmiBlitz3.ab3@10767>   MOVE.l d7,d1
00027FB4 <AmiBlitz3.ab3@10768>   BSR.w mywrite
00027FB6 <AmiBlitz3.ab3@10769>   MOVE.l d7,d1
00027FBC <AmiBlitz3.ab3@10770>   MOVE.l chipstart,d2
00027FC2 <AmiBlitz3.ab3@10771>   MOVE.l chipsize,d3
00027FC6 <AmiBlitz3.ab3@10772>   BSR.w mywrite
00027FC8 <AmiBlitz3.ab3@10773>   MOVEQ #4,d3
00027FCE <AmiBlitz3.ab3@10774>   MOVE.l #hunkend,d2
00027FD0 <AmiBlitz3.ab3@10775>   MOVE.l d7,d1
00027FD4 <AmiBlitz3.ab3@10778>   BSR.w mywrite
00027FD6 <AmiBlitz3.ab3@10779>   MOVE.l D7,D1
00027FDC <AmiBlitz3.ab3@10780>   MOVEA.l _dosbase,A6
00027FE0 <AmiBlitz3.ab3@10781>   JSR _Close(A6)
00027FE8 <AmiBlitz3.ab3@10786>   BTST #$7,create_iconfile
00027FEC <AmiBlitz3.ab3@10787>    BEQ.w skip_createicon
00027FF2 <AmiBlitz3.ab3@10789>   MOVEA.l ptr_newexefilename,A0
00027FF4 <AmiBlitz3.ab3@10792>     TST.b (A0)+
00027FF8 <AmiBlitz3.ab3@10793>   BNE.w JL_0_772C
00027FFA <AmiBlitz3.ab3@10794>   SUBQ.w #1,A0
00027FFC <AmiBlitz3.ab3@10795>   MOVE.l A0,-(A7)
00028002 <AmiBlitz3.ab3@10796>   LEA str_infoextention2,A1
00028004 <AmiBlitz3.ab3@10799>     MOVE.b (A1)+,(A0)+
00028008 <AmiBlitz3.ab3@10800>   BNE.w JL_0_773A
0002800E <AmiBlitz3.ab3@10802>   MOVE.l ptr_newexefilename,D1
00028010 <AmiBlitz3.ab3@10803>   MOVEQ.l #-$02,D2
00028016 <AmiBlitz3.ab3@10804>   MOVEA.l _dosbase,A6
0002801A <AmiBlitz3.ab3@10805>   JSR _Lock(A6)
0002801C <AmiBlitz3.ab3@10806>   MOVE.l D0,D1
00028020 <AmiBlitz3.ab3@10807>   BEQ.w JL_0_775A                                          ;no icon exit so jump to create one  tomsmart1
00028024 <AmiBlitz3.ab3@10808>   JSR _UnLock(A6)                                          ;OH!! there is a Icon so we must Unlock it  tomsmart1
00028028 <AmiBlitz3.ab3@10809> BRA.w JL_0_7788                                            ;and skip writing a Icon  tomsmart1
0002802E <AmiBlitz3.ab3@10812>   MOVE.l ptr_newexefilename,D1
00028034 <AmiBlitz3.ab3@10813>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
0002803A <AmiBlitz3.ab3@10814>   MOVEA.l _dosbase,A6
0002803E <AmiBlitz3.ab3@10815>    JSR _Open(A6)
00028040 <AmiBlitz3.ab3@10816>   MOVE.l D0,D7
00028044 <AmiBlitz3.ab3@10817>    BEQ.w JL_0_7788
0002804A <AmiBlitz3.ab3@10818>   MOVE.l #icongfx_data,D2                                  ; icon graphics
00028050 <AmiBlitz3.ab3@10819>   MOVE.l #icongfx_data_end-icongfx_data,D3                 ; length of gfx-data
00028052 <AmiBlitz3.ab3@10820>   MOVE.l D7,D1
00028058 <AmiBlitz3.ab3@10821>   MOVEA.l _dosbase,A6
0002805C <AmiBlitz3.ab3@10822>   JSR _Write(A6)
0002805E <AmiBlitz3.ab3@10823>   MOVE.l D7,D1
00028062 <AmiBlitz3.ab3@10824>   JSR _Close(A6)
00028064 <AmiBlitz3.ab3@10827>   MOVEA.l (A7)+,A0
00028066 <AmiBlitz3.ab3@10828>   CLR.b (A0)
0002806C <AmiBlitz3.ab3@10833>   TST.b exdebug
00028070 <AmiBlitz3.ab3@10834>    BEQ JL_0_757Cb
00028076 <AmiBlitz3.ab3@10835>   MOVE.w dontwrite,D1
0002807A <AmiBlitz3.ab3@10836>   BNE.w JL_0_757Cb
00028080 <AmiBlitz3.ab3@10837>   MOVE.l chipsize,d5
00028086 <AmiBlitz3.ab3@10838>   MOVE.l bsssize,d3
0002808C <AmiBlitz3.ab3@10839>   MOVE.l chipstart,d7
00028092 <AmiBlitz3.ab3@10840>   MOVE.l bssstart,d6
00028098 <AmiBlitz3.ab3@10841>   MOVEA.l hunkoffsetbase,A2
0002809E <AmiBlitz3.ab3@10842>   MOVEA.l destbufferstart,A1
000280A0 <AmiBlitz3.ab3@10843>   MOVE.l A1,D2
000280A6 <AmiBlitz3.ab3@10844>   ADD.l noinits,D2
000280AC <AmiBlitz3.ab3@10845>   CLR.l hunkoffsetnum
000280B0 <AmiBlitz3.ab3@10848>   CMPA.w #$0,A2
000280B4 <AmiBlitz3.ab3@10849>    BEQ.w JL_0_757Cb
000280B8 <AmiBlitz3.ab3@10850>   MOVE.l $4(A2),D0
000280BC <AmiBlitz3.ab3@10851>    LEA $0(a1,d0.l),a0
000280BE <AmiBlitz3.ab3@10852>    MOVE.l (a0),d1
000280C0 <AmiBlitz3.ab3@10853>   TST.l d1
000280C4 <AmiBlitz3.ab3@10854>    BMI.w 'lm1
000280CC <AmiBlitz3.ab3@10855>   MOVE.b #0,newhunk
000280D6 <AmiBlitz3.ab3@10856>   CMP.l #-1,chipstart
000280DA <AmiBlitz3.ab3@10857>   BEQ 'l10
000280E0 <AmiBlitz3.ab3@10858>   CMP.l chipstart,d1
000280E4 <AmiBlitz3.ab3@10859>   BLT 'l10
000280EC <AmiBlitz3.ab3@10860>   MOVE.b #1,newhunk
000280F2 <AmiBlitz3.ab3@10861>   CMP.l chipend,d1
000280F6 <AmiBlitz3.ab3@10862>   BGE 'l110
000280F8 <AmiBlitz3.ab3@10863>   ADD.l d7,(a0)
00028100 <AmiBlitz3.ab3@10864>   ADD.l #$80000000,4(a2)
00028104 <AmiBlitz3.ab3@10865> BRA JL_0_7576b
00028108 <AmiBlitz3.ab3@10868>   ADD.l d5,0(a0)
00028112 <AmiBlitz3.ab3@10871>   CMP.l #-1,bssstart
00028116 <AmiBlitz3.ab3@10872>     BEQ 'l11
0002811C <AmiBlitz3.ab3@10873>   CMP.l bssstart,d1
00028120 <AmiBlitz3.ab3@10874>   BLT 'l11
00028126 <AmiBlitz3.ab3@10875>   CMP.l bssend,d1
0002812A <AmiBlitz3.ab3@10876>   BGE 'l111
00028130 <AmiBlitz3.ab3@10877>   TST.b newhunk
00028134 <AmiBlitz3.ab3@10878>   BEQ 'ln1
00028136 <AmiBlitz3.ab3@10879>   ADD.l d5,(a0)
00028138 <AmiBlitz3.ab3@10882>   ADD.l d6,(a0)
00028140 <AmiBlitz3.ab3@10883>   ADD.l #$40000000,4(a2)
00028144 <AmiBlitz3.ab3@10884> BRA JL_0_7576b
00028148 <AmiBlitz3.ab3@10887>   ADD.l d3,0(a0)
0002814A <AmiBlitz3.ab3@10890>   ADD.l D2,(A0)                                            ;only normal code offsets restore
00028150 <AmiBlitz3.ab3@10893>   ADDQ.l #1,hunkoffsetnum
00028152 <AmiBlitz3.ab3@10896>   MOVEA.l (A2),A2
00028156 <AmiBlitz3.ab3@10897> BRA.w JL_0_755Eb
0002815C <AmiBlitz3.ab3@10900>   JSR call_setpointernormal
00028160 <AmiBlitz3.ab3@10901>   MOVEM.l (a7)+,d2-d7/a2-a6
00028162 <AmiBlitz3.ab3@10903> RTS
00028164 <AmiBlitz3.ab3@10907>   MOVE.l D2,-(A7)
0002816A <AmiBlitz3.ab3@10908>   MOVE.l destpointer,D2
00028170 <AmiBlitz3.ab3@10909>   SUB.l destbufferstart,D2
00028174 <AmiBlitz3.ab3@10910>   BSR.w addhunkoffset
00028176 <AmiBlitz3.ab3@10911>   MOVE.l (A7)+,D2
00028178 <AmiBlitz3.ab3@10912> RTS
0002817C <AmiBlitz3.ab3@10916>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
00028182 <AmiBlitz3.ab3@10917>   TST.b nohunkoffset
00028186 <AmiBlitz3.ab3@10918>   BNE 'l10
00028188 <AmiBlitz3.ab3@10919>   MOVEQ.l #$8,D0
0002818A <AmiBlitz3.ab3@10920>   MOVEQ.l #$01,D1
00028190 <AmiBlitz3.ab3@10921>   MOVEA.l _execbase,A6
00028196 <AmiBlitz3.ab3@10922>   MOVE.l mempool2,a0
0002819A <AmiBlitz3.ab3@10923>   JSR _AllocPooled(a6)
000281A0 <AmiBlitz3.ab3@10925>   ADDQ.l #1,hunkoffsetcounter
000281A2 <AmiBlitz3.ab3@10926>   MOVEA.l D0,A0
000281A8 <AmiBlitz3.ab3@10927>   MOVE.l hunkoffsetbase,(A0)
000281AE <AmiBlitz3.ab3@10928>   MOVE.l A0,hunkoffsetbase
000281B2 <AmiBlitz3.ab3@10929>   MOVE.l D2,$4(A0)
000281B6 <AmiBlitz3.ab3@10932>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
000281B8 <AmiBlitz3.ab3@10933> RTS
000281BE <AmiBlitz3.ab3@10937>   CLR.l hunkoffsetbase
000281C4 <AmiBlitz3.ab3@10938>   MOVEA.l _execbase,A6
000281CA <AmiBlitz3.ab3@10939>   MOVEA.l hunkoffsetbase,A2
000281CE <AmiBlitz3.ab3@10942>     CMPA.w #$0,A2
000281D2 <AmiBlitz3.ab3@10943>      BEQ.w JL_0_7988
000281D4 <AmiBlitz3.ab3@10944>     MOVEA.l A2,A1
000281D6 <AmiBlitz3.ab3@10945>     MOVEQ.l #$08,D0
000281D8 <AmiBlitz3.ab3@10946>     MOVEA.l (A2),A2
000281DE <AmiBlitz3.ab3@10947>     MOVE.l mempool2,a0
000281E2 <AmiBlitz3.ab3@10948>     JSR _FreePooled(A6)
000281E6 <AmiBlitz3.ab3@10949> BRA.w JL_0_7972
000281EC <AmiBlitz3.ab3@10952>   CLR.l hunkoffsetcounter
000281EE <AmiBlitz3.ab3@10953> RTS
00028206 <AmiBlitz3.ab3@10956> cmakebuff:  Ds.l 6                                          ;dc.w 12 org source
0002820A <AmiBlitz3.ab3@10957> cmakea5:    Ds.l 1
0002820C <AmiBlitz3.ab3@10958> cmake:      Ds.w 1
0002828C <AmiBlitz3.ab3@10959> cmakebak:   Ds.l 32                                         ;ds.b 128 org source
00028292 <AmiBlitz3.ab3@10963>   MOVE.l A5,lastsourcepos
0002829C <AmiBlitz3.ab3@10964>   MOVE.w instringon,oldqflag
0002829E <AmiBlitz3.ab3@10968>   MOVEQ.l #$00,D0
000282A0 <AmiBlitz3.ab3@10969>   MOVE.b (A5)+,D0
000282A4 <AmiBlitz3.ab3@10970>    BEQ getcharb__donea
000282A8 <AmiBlitz3.ab3@10971>   BPL getcharb__stuffa
000282AA <AmiBlitz3.ab3@10972>   LSL.l #8,D0
000282AC <AmiBlitz3.ab3@10973>   MOVE.b (A5)+,D0
000282AE <AmiBlitz3.ab3@10974>   MOVE.l a1,-(a7)
000282B4 <AmiBlitz3.ab3@10975>   LEA replacedat,a1
000282B8 <AmiBlitz3.ab3@10976>   Dc.w $4a71,$0a00                                         ;TST.w 0(a1,d0.l*2)
000282BC <AmiBlitz3.ab3@10977>   BEQ getchar__l10
000282C0 <AmiBlitz3.ab3@10978>   Dc.w $3031,$0a00                                         ;MOVE.w 0(a1,d0.l*2),d0
000282C2 <AmiBlitz3.ab3@10982>   MOVE.l (a7)+,a1
000282C6 <AmiBlitz3.ab3@10983> BRA getchar__weiter
000282CA <AmiBlitz3.ab3@10986>   CMP.w #$22,D0
000282CE <AmiBlitz3.ab3@10987>    BEQ.b swapquotea
000282D2 <AmiBlitz3.ab3@10988>   CMP.w #$3B,D0
000282D6 <AmiBlitz3.ab3@10989>    BNE.b getcharb__donea
000282DC <AmiBlitz3.ab3@10990>   TST.w instringon
000282E0 <AmiBlitz3.ab3@10991>    BNE.b getcharb__donea
000282E2 <AmiBlitz3.ab3@10994>   MOVE.b (A5)+,D0
000282E6 <AmiBlitz3.ab3@10995>              BEQ getchar__l1
000282EA <AmiBlitz3.ab3@10996>              CMP.b #":",d0
000282EE <AmiBlitz3.ab3@10997>              BNE getcharb__loopa                                ;:@
000282F2 <AmiBlitz3.ab3@10998>              CMP.b #"@",(a5)
000282F6 <AmiBlitz3.ab3@10999>              BNE getcharb__loopa
000282F8 <AmiBlitz3.ab3@11000>              ADDQ #1,a5
000282FE <AmiBlitz3.ab3@11003>   MOVE.w D0,lastchar
00028302 <AmiBlitz3.ab3@11006> BRA.s getchar__weiter
00028308 <AmiBlitz3.ab3@11009>   NOT.w instringon
0002830E <AmiBlitz3.ab3@11012>    MOVE.w D0,lastchar
00028312 <AmiBlitz3.ab3@11013>    BEQ.w getchar__done
00028316 <AmiBlitz3.ab3@11014>    BPL.w getchar__done2
0002831A <AmiBlitz3.ab3@11015>   CMP.w #-$7FE4,D0                                         ;cnif
0002831E <AmiBlitz3.ab3@11016>    BEQ.w getchar__cnif
00028322 <AmiBlitz3.ab3@11017>   CMP.w #-$7FE3,D0                                         ;csif
00028326 <AmiBlitz3.ab3@11018>    BEQ.w getchar__csif
0002832A <AmiBlitz3.ab3@11019>   CMP.w #-$7FE2,D0                                         ;celse
0002832E <AmiBlitz3.ab3@11020>    BEQ.w getchar__celse
00028332 <AmiBlitz3.ab3@11021>   CMP.w #-$7FE1,D0                                         ;cend
00028336 <AmiBlitz3.ab3@11022>    BEQ.w getchar__cend
0002833C <AmiBlitz3.ab3@11025>   TST.w skipcode
00028340 <AmiBlitz3.ab3@11026>    BEQ.w getchar
00028344 <AmiBlitz3.ab3@11027>   CMP.w #$7E,D0
00028348 <AmiBlitz3.ab3@11028>    BEQ.w getchar__cmake                                         ;tilde
0002834C <AmiBlitz3.ab3@11029>   CMP.w #$2,D0
00028350 <AmiBlitz3.ab3@11030>    BNE.w getchar__notunpath
00028356 <AmiBlitz3.ab3@11031>   MOVEA.l usedfrom,A5
0002835C <AmiBlitz3.ab3@11032>   CLR.l usedfrom
00028360 <AmiBlitz3.ab3@11033> BRA.w getchar
00028364 <AmiBlitz3.ab3@11036>   CMP.w #$1,D0
00028368 <AmiBlitz3.ab3@11037>    BNE.w getchar__done
0002836C <AmiBlitz3.ab3@11041>   MOVEA.l cmakea5(PC),A5
00028370 <AmiBlitz3.ab3@11042> BRA.w getchar
00028376 <AmiBlitz3.ab3@11045>   TST.w cmake
0002837A <AmiBlitz3.ab3@11046>    BNE.w getchar__done
0002837E <AmiBlitz3.ab3@11048>   MOVEM.l D0-D7/A0-A6,-(A7)
00028384 <AmiBlitz3.ab3@11049>   LEA cmake,a0                                         ;reass
00028386 <AmiBlitz3.ab3@11050>   NOT.w (a0)
0002838A <AmiBlitz3.ab3@11051>   LEA cmakebak(PC),A0
00028390 <AmiBlitz3.ab3@11052>   LEA ptr_parameterstore,A1
00028392 <AmiBlitz3.ab3@11053>   MOVEQ.l #$1F,D0
00028394 <AmiBlitz3.ab3@11056>     MOVE.l (A1)+,(A0)+
00028398 <AmiBlitz3.ab3@11057>   DBF D0,getchar__cmloop
0002839E <AmiBlitz3.ab3@11060>    JSR AJL_0_BF6E
000283A2 <AmiBlitz3.ab3@11061>   CMP.w #$7E,D0
000283A6 <AmiBlitz3.ab3@11062>    BNE.w syntaxerr
000283AC <AmiBlitz3.ab3@11063>   MOVE.l A5,cmakea5                                      ;tilde
000283B0 <AmiBlitz3.ab3@11064>   LEA cmakebuff(PC),A0
000283B2 <AmiBlitz3.ab3@11065>   MOVE.l D3,D2
000283B6 <AmiBlitz3.ab3@11066>   BSR.w makelong
000283B8 <AmiBlitz3.ab3@11067>   ADDQ.b #1,(A0)
000283BE <AmiBlitz3.ab3@11068>   LEA cmake,a0
000283C0 <AmiBlitz3.ab3@11069>   NOT.w (a0)                                               ;reass
000283C4 <AmiBlitz3.ab3@11070>   LEA cmakebak(PC),A0
000283CA <AmiBlitz3.ab3@11071>   LEA ptr_parameterstore,A1
000283CC <AmiBlitz3.ab3@11072>   MOVEQ.l #$1F,D0
000283CE <AmiBlitz3.ab3@11075>     MOVE.l (A0)+,(A1)+
000283D2 <AmiBlitz3.ab3@11076>   DBF D0,getchar__cmloop2
000283D6 <AmiBlitz3.ab3@11078>   MOVEM.l (A7)+,D0-D7/A0-A6
000283DA <AmiBlitz3.ab3@11079>   LEA cmakebuff(PC),A5
000283DE <AmiBlitz3.ab3@11080> BRA.w getchar
000283E0 <AmiBlitz3.ab3@11083> RTS
000283EA <AmiBlitz3.ab3@11087>   MOVE.l linenumat,ciflineat                               ;csif
000283F0 <AmiBlitz3.ab3@11088>   TST.w skipcode
000283F4 <AmiBlitz3.ab3@11089>    BEQ.w getchar__incnest
000283F8 <AmiBlitz3.ab3@11090>    BSR.w get1bytemain
000283FA <AmiBlitz3.ab3@11091>    MOVE.l a1,-(a7)
00028400 <AmiBlitz3.ab3@11092>    JSR JL_0_C492
00028402 <AmiBlitz3.ab3@11093>    MOVE.l (a7)+,a1
00028406 <AmiBlitz3.ab3@11094> BRA.w getchar
00028410 <AmiBlitz3.ab3@11097>   MOVE.l linenumat,ciflineat                               ;cnif
00028416 <AmiBlitz3.ab3@11098>   TST.w skipcode
0002841A <AmiBlitz3.ab3@11099>    BEQ.w getchar__incnest
0002841E <AmiBlitz3.ab3@11100>    BSR.w get1bytemain
00028422 <AmiBlitz3.ab3@11101>    CMP.b #"@",d0
00028426 <AmiBlitz3.ab3@11102>    BNE getchar__cnif_ok2
0002842A <AmiBlitz3.ab3@11103>    BSR.w get1bytemain
00028432 <AmiBlitz3.ab3@11104>    MOVE.b #1,incnif
00028438 <AmiBlitz3.ab3@11105>    JSR findconstant2
0002843C <AmiBlitz3.ab3@11106>    BEQ getchar__cnif_ok2
00028442 <AmiBlitz3.ab3@11109>    MOVE.w fast,-(a7)
00028448 <AmiBlitz3.ab3@11110>    CLR.b fast
0002844A <AmiBlitz3.ab3@11111>    MOVE.l a1,-(a7)
00028450 <AmiBlitz3.ab3@11112>    JSR JL_0_C47E
00028456 <AmiBlitz3.ab3@11113>    CLR.b incnif
00028458 <AmiBlitz3.ab3@11114>    MOVE.l (a7)+,a1
0002845E <AmiBlitz3.ab3@11115>    MOVE.w (a7)+,fast
00028462 <AmiBlitz3.ab3@11116> BRA.w getchar
00028468 <AmiBlitz3.ab3@11119>   ADDQ.w #1,connest
0002846C <AmiBlitz3.ab3@11120> BRA.w getchar
00028472 <AmiBlitz3.ab3@11123>   MOVE.w connest,D0                                      ;celse
00028476 <AmiBlitz3.ab3@11124>    BNE.w getchar
0002847C <AmiBlitz3.ab3@11125>   NOT.w skipcode
00028480 <AmiBlitz3.ab3@11126> BRA.w getchar
00028486 <AmiBlitz3.ab3@11129>   SUBQ.w #1,connest                                      ;cend
0002848A <AmiBlitz3.ab3@11130>    BPL.w getchar
00028490 <AmiBlitz3.ab3@11131>   ADDQ.w #1,connest
00028496 <AmiBlitz3.ab3@11132>   MOVEA.l concomsp,A0
0002849C <AmiBlitz3.ab3@11133>   CMPA.l #concomstack,A0
000284A0 <AmiBlitz3.ab3@11134>    BEQ.w nociferr
000284A2 <AmiBlitz3.ab3@11135>   SUBQ.w #2,A0
000284A8 <AmiBlitz3.ab3@11136>   MOVE.l A0,concomsp
000284AE <AmiBlitz3.ab3@11137>   MOVE.w (A0),skipcode
000284B2 <AmiBlitz3.ab3@11138> BRA.w getchar
000284B6 <AmiBlitz3.ab3@11141> ciflineat:   Ds.l 1
000284B8 <AmiBlitz3.ab3@11149>   MOVEQ.l #$00,D0
000284BA <AmiBlitz3.ab3@11150>   MOVE.b (A5)+,D0
000284BE <AmiBlitz3.ab3@11151>    BEQ.b getcharb__done
000284C2 <AmiBlitz3.ab3@11152>    BPL.b getcharb__stuff
000284C4 <AmiBlitz3.ab3@11153>   LSL.w #8,D0
000284C6 <AmiBlitz3.ab3@11154>   MOVE.b (A5)+,D0
000284C8 <AmiBlitz3.ab3@11155> RTS
000284CC <AmiBlitz3.ab3@11158>   CMP.w #$22,D0
000284D0 <AmiBlitz3.ab3@11159>    BEQ.b swapquote
000284D4 <AmiBlitz3.ab3@11160>   CMP.w #$3B,D0
000284D8 <AmiBlitz3.ab3@11161>    BNE.b getcharb__done
000284DE <AmiBlitz3.ab3@11162>   TST.w instringon
000284E2 <AmiBlitz3.ab3@11163>    BNE.b getcharb__done
000284E4 <AmiBlitz3.ab3@11166>   MOVE.b (A5)+,D0
000284E8 <AmiBlitz3.ab3@11167>             BEQ getcharb__loop_l1
000284EC <AmiBlitz3.ab3@11168>             CMP.b #":",d0
000284F0 <AmiBlitz3.ab3@11169>             BNE getcharb__loop
000284F4 <AmiBlitz3.ab3@11170>             CMP.b #"@",(a5)
000284F8 <AmiBlitz3.ab3@11171>             BNE getcharb__loop
000284FE <AmiBlitz3.ab3@11174>   MOVE.w D0,lastchar
00028500 <AmiBlitz3.ab3@11177> RTS
00028506 <AmiBlitz3.ab3@11180>   NOT.w instringon
00028508 <AmiBlitz3.ab3@11181> RTS
0002850C <AmiBlitz3.ab3@11185>   BSR.w getchar
00028512 <AmiBlitz3.ab3@11186>   TST.w instringon
00028516 <AmiBlitz3.ab3@11187>    BNE.w get1byte__skip
0002851A <AmiBlitz3.ab3@11188>   CMP.w #$20,D0
0002851E <AmiBlitz3.ab3@11189>    BEQ.w get1byte_
00028520 <AmiBlitz3.ab3@11192> RTS
0002853A <AmiBlitz3.ab3@11195> gs:        Ds.w 13                                         ;ds.b 26  org source
0002853E <AmiBlitz3.ab3@11196>            Dc.b $F6,$E4,$FC,$D6                            ;dc.b 228,246,252,196,214,220 org source
00028540 <AmiBlitz3.ab3@11197>            Dc.b $C4,$DC
00028544 <AmiBlitz3.ab3@11203>   BSR.w getchar
0002854A <AmiBlitz3.ab3@11204>   TST.w instringon
0002854E <AmiBlitz3.ab3@11205>    BNE.w gchar2
00028552 <AmiBlitz3.ab3@11206>   CMP.w #$20,D0
00028556 <AmiBlitz3.ab3@11207>    BEQ.w get1bytemain
00028558 <AmiBlitz3.ab3@11209>   TST.w D0
0002855C <AmiBlitz3.ab3@11212>   BEQ.b get1bytemain__zero
00028562 <AmiBlitz3.ab3@11213>   TST.w instringon
00028566 <AmiBlitz3.ab3@11214>    BEQ.b get1bytemain__noqoute
0002856A <AmiBlitz3.ab3@11215>   CMP.b #$20,D0
0002856E <AmiBlitz3.ab3@11216>    BCC.b get1bytemain__skip
00028572 <AmiBlitz3.ab3@11217>   MOVE.b gs(PC,D0.W),D0
00028574 <AmiBlitz3.ab3@11218> RTS
00028578 <AmiBlitz3.ab3@11221>   CMP.w #-$7FDE,D0                                         ;cmp #$8000+34,d0 org source  ;else
0002857C <AmiBlitz3.ab3@11222>    BEQ.b get1bytemain__zero
00028580 <AmiBlitz3.ab3@11223>   CMP.w #$3A,D0
00028584 <AmiBlitz3.ab3@11224>    BEQ.b get1bytemain__zero
00028586 <AmiBlitz3.ab3@11227>   TST.w D0
00028588 <AmiBlitz3.ab3@11230> RTS
0002858E <AmiBlitz3.ab3@11234>   MOVE.w lastchar,D0
00028592 <AmiBlitz3.ab3@11235> BRA.w gchar2
0002859C <AmiBlitz3.ab3@11239>   MOVE.w oldqflag,instringon
000285A2 <AmiBlitz3.ab3@11240>   MOVEA.l lastsourcepos,A5
000285A4 <AmiBlitz3.ab3@11241> RTS
000285AA <AmiBlitz3.ab3@11245>   MOVE.w D0,locchar
000285B0 <AmiBlitz3.ab3@11246>   MOVE.l A5,locloc
000285B2 <AmiBlitz3.ab3@11247> RTS
000285B8 <AmiBlitz3.ab3@11251>   MOVEA.l locloc,A5
000285BE <AmiBlitz3.ab3@11252>   MOVE.w locchar,D0
000285C4 <AmiBlitz3.ab3@11253>   MOVE.w D0,lastchar
000285C6 <AmiBlitz3.ab3@11254> RTS
000285C6 <internal_errormsg.ab3@1> XINCLUDE "internal_errormsg.ab3"
0002860E <internal_errormsg.ab3@9> XINCLUDE "internal_errormsg.ab3"
00028660 <internal_errormsg.ab3@10> XINCLUDE "internal_errormsg.ab3"
0002869E <internal_errormsg.ab3@11> XINCLUDE "internal_errormsg.ab3"
000286DC <internal_errormsg.ab3@12> XINCLUDE "internal_errormsg.ab3"
00028706 <internal_errormsg.ab3@13> XINCLUDE "internal_errormsg.ab3"
00028736 <internal_errormsg.ab3@14> XINCLUDE "internal_errormsg.ab3"
00028780 <internal_errormsg.ab3@15> XINCLUDE "internal_errormsg.ab3"
00028806 <internal_errormsg.ab3@16> XINCLUDE "internal_errormsg.ab3"
00028868 <internal_errormsg.ab3@17> XINCLUDE "internal_errormsg.ab3"
000288B0 <internal_errormsg.ab3@18> XINCLUDE "internal_errormsg.ab3"
00028902 <internal_errormsg.ab3@19> XINCLUDE "internal_errormsg.ab3"
00028964 <internal_errormsg.ab3@20> XINCLUDE "internal_errormsg.ab3"
000289B2 <internal_errormsg.ab3@21> XINCLUDE "internal_errormsg.ab3"
000289E8 <internal_errormsg.ab3@22> XINCLUDE "internal_errormsg.ab3"
00028A16 <internal_errormsg.ab3@23> XINCLUDE "internal_errormsg.ab3"
00028A30 <internal_errormsg.ab3@24> XINCLUDE "internal_errormsg.ab3"
00028A4E <internal_errormsg.ab3@25> XINCLUDE "internal_errormsg.ab3"
00028ACC <internal_errormsg.ab3@26> XINCLUDE "internal_errormsg.ab3"
00028AF6 <internal_errormsg.ab3@27> XINCLUDE "internal_errormsg.ab3"
00028B1C <internal_errormsg.ab3@28> XINCLUDE "internal_errormsg.ab3"
00028B3C <internal_errormsg.ab3@29> XINCLUDE "internal_errormsg.ab3"
00028B5A <internal_errormsg.ab3@30> XINCLUDE "internal_errormsg.ab3"
00028B7A <internal_errormsg.ab3@31> XINCLUDE "internal_errormsg.ab3"
00028BA2 <internal_errormsg.ab3@32> XINCLUDE "internal_errormsg.ab3"
00028BCC <internal_errormsg.ab3@33> XINCLUDE "internal_errormsg.ab3"
00028BCE <internal_errormsg.ab3@36> XINCLUDE "internal_errormsg.ab3"
00028BEA <internal_errormsg.ab3@39> XINCLUDE "internal_errormsg.ab3"
00028C10 <internal_errormsg.ab3@40> XINCLUDE "internal_errormsg.ab3"
00028C28 <internal_errormsg.ab3@41> XINCLUDE "internal_errormsg.ab3"
00028C86 <internal_errormsg.ab3@42> XINCLUDE "internal_errormsg.ab3"
00028CA8 <internal_errormsg.ab3@43> XINCLUDE "internal_errormsg.ab3"
00028CCE <internal_errormsg.ab3@44> XINCLUDE "internal_errormsg.ab3"
00028CF6 <internal_errormsg.ab3@45> XINCLUDE "internal_errormsg.ab3"
00028D16 <internal_errormsg.ab3@46> XINCLUDE "internal_errormsg.ab3"
00028D3A <internal_errormsg.ab3@47> XINCLUDE "internal_errormsg.ab3"
00028D80 <internal_errormsg.ab3@48> XINCLUDE "internal_errormsg.ab3"
00028DA4 <internal_errormsg.ab3@49> XINCLUDE "internal_errormsg.ab3"
00028DC8 <internal_errormsg.ab3@50> XINCLUDE "internal_errormsg.ab3"
00028DE8 <internal_errormsg.ab3@51> XINCLUDE "internal_errormsg.ab3"
00028E0C <internal_errormsg.ab3@52> XINCLUDE "internal_errormsg.ab3"
00028E2E <internal_errormsg.ab3@53> XINCLUDE "internal_errormsg.ab3"
00028E5A <internal_errormsg.ab3@54> XINCLUDE "internal_errormsg.ab3"
00028E80 <internal_errormsg.ab3@55> XINCLUDE "internal_errormsg.ab3"
00028E8A <internal_errormsg.ab3@58> XINCLUDE "internal_errormsg.ab3"
00028EB0 <internal_errormsg.ab3@59> XINCLUDE "internal_errormsg.ab3"
00028F02 <internal_errormsg.ab3@61> XINCLUDE "internal_errormsg.ab3"
00028F6C <internal_errormsg.ab3@62> XINCLUDE "internal_errormsg.ab3"
00028FCA <internal_errormsg.ab3@63> XINCLUDE "internal_errormsg.ab3"
00029038 <internal_errormsg.ab3@64> XINCLUDE "internal_errormsg.ab3"
00029074 <internal_errormsg.ab3@65> XINCLUDE "internal_errormsg.ab3"
00029092 <internal_errormsg.ab3@66> XINCLUDE "internal_errormsg.ab3"
000290B8 <internal_errormsg.ab3@67> XINCLUDE "internal_errormsg.ab3"
000290E8 <internal_errormsg.ab3@68> XINCLUDE "internal_errormsg.ab3"
0002910C <internal_errormsg.ab3@69> XINCLUDE "internal_errormsg.ab3"
0002913A <internal_errormsg.ab3@70> XINCLUDE "internal_errormsg.ab3"
0002915E <internal_errormsg.ab3@71> XINCLUDE "internal_errormsg.ab3"
00029174 <internal_errormsg.ab3@72> XINCLUDE "internal_errormsg.ab3"
0002918A <internal_errormsg.ab3@73> XINCLUDE "internal_errormsg.ab3"
00029190 <internal_errormsg.ab3@76> XINCLUDE "internal_errormsg.ab3"
00029198 <internal_errormsg.ab3@78> XINCLUDE "internal_errormsg.ab3"
0002919A <internal_errormsg.ab3@79> XINCLUDE "internal_errormsg.ab3"
0002919E <internal_errormsg.ab3@80> XINCLUDE "internal_errormsg.ab3"
000291A6 <internal_errormsg.ab3@81> XINCLUDE "internal_errormsg.ab3"
000291A8 <internal_errormsg.ab3@82> XINCLUDE "internal_errormsg.ab3"
000291E2 <internal_errormsg.ab3@84> XINCLUDE "internal_errormsg.ab3"
0002920E <internal_errormsg.ab3@85> XINCLUDE "internal_errormsg.ab3"
0002923E <internal_errormsg.ab3@86> XINCLUDE "internal_errormsg.ab3"
00029276 <internal_errormsg.ab3@87> XINCLUDE "internal_errormsg.ab3"
000292D0 <internal_errormsg.ab3@88> XINCLUDE "internal_errormsg.ab3"
000292D2 <internal_errormsg.ab3@92> XINCLUDE "internal_errormsg.ab3"
000292D6 <internal_errormsg.ab3@93> XINCLUDE "internal_errormsg.ab3"
000292DA <internal_errormsg.ab3@94> XINCLUDE "internal_errormsg.ab3"
000292DE <internal_errormsg.ab3@95> XINCLUDE "internal_errormsg.ab3"
000292E2 <internal_errormsg.ab3@96> XINCLUDE "internal_errormsg.ab3"
000292E6 <internal_errormsg.ab3@97> XINCLUDE "internal_errormsg.ab3"
000292EA <internal_errormsg.ab3@98> XINCLUDE "internal_errormsg.ab3"
000292EE <internal_errormsg.ab3@99> XINCLUDE "internal_errormsg.ab3"
000292F2 <internal_errormsg.ab3@100> XINCLUDE "internal_errormsg.ab3"
000292F6 <internal_errormsg.ab3@101> XINCLUDE "internal_errormsg.ab3"
000292FA <internal_errormsg.ab3@102> XINCLUDE "internal_errormsg.ab3"
00029338 <internal_errormsg.ab3@103> XINCLUDE "internal_errormsg.ab3"
0002936A <internal_errormsg.ab3@105> XINCLUDE "internal_errormsg.ab3"
00029388 <internal_errormsg.ab3@106> XINCLUDE "internal_errormsg.ab3"
000293B2 <internal_errormsg.ab3@107> XINCLUDE "internal_errormsg.ab3"
000293CE <internal_errormsg.ab3@108> XINCLUDE "internal_errormsg.ab3"
000293E8 <internal_errormsg.ab3@109> XINCLUDE "internal_errormsg.ab3"
00029406 <internal_errormsg.ab3@110> XINCLUDE "internal_errormsg.ab3"
0002942A <internal_errormsg.ab3@111> XINCLUDE "internal_errormsg.ab3"
0002942C <internal_errormsg.ab3@114> XINCLUDE "internal_errormsg.ab3"
0002947E <internal_errormsg.ab3@115> XINCLUDE "internal_errormsg.ab3"
000294A6 <internal_errormsg.ab3@117> XINCLUDE "internal_errormsg.ab3"
000294CE <internal_errormsg.ab3@118> XINCLUDE "internal_errormsg.ab3"
000294EA <internal_errormsg.ab3@122> XINCLUDE "internal_errormsg.ab3"
0002950A <internal_errormsg.ab3@123> XINCLUDE "internal_errormsg.ab3"
00029522 <internal_errormsg.ab3@124> XINCLUDE "internal_errormsg.ab3"
00029566 <internal_errormsg.ab3@125> XINCLUDE "internal_errormsg.ab3"
000295AE <internal_errormsg.ab3@126> XINCLUDE "internal_errormsg.ab3"
000295D8 <internal_errormsg.ab3@127> XINCLUDE "internal_errormsg.ab3"
00029602 <internal_errormsg.ab3@128> XINCLUDE "internal_errormsg.ab3"
0002961C <internal_errormsg.ab3@132> XINCLUDE "internal_errormsg.ab3"
00029646 <internal_errormsg.ab3@133> XINCLUDE "internal_errormsg.ab3"
0002969A <internal_errormsg.ab3@134> XINCLUDE "internal_errormsg.ab3"
000296E6 <internal_errormsg.ab3@135> XINCLUDE "internal_errormsg.ab3"
0002971E <internal_errormsg.ab3@136> XINCLUDE "internal_errormsg.ab3"
00029724 <internal_errormsg.ab3@139> XINCLUDE "internal_errormsg.ab3"
00029732 <internal_errormsg.ab3@141> XINCLUDE "internal_errormsg.ab3"
00029762 <internal_errormsg.ab3@144> XINCLUDE "internal_errormsg.ab3"
00029796 <internal_errormsg.ab3@145> XINCLUDE "internal_errormsg.ab3"
000297FC <internal_errormsg.ab3@146> XINCLUDE "internal_errormsg.ab3"
0002981A <internal_errormsg.ab3@147> XINCLUDE "internal_errormsg.ab3"
00029894 <internal_errormsg.ab3@148> XINCLUDE "internal_errormsg.ab3"
000298BC <internal_errormsg.ab3@149> XINCLUDE "internal_errormsg.ab3"
000298D2 <internal_errormsg.ab3@150> XINCLUDE "internal_errormsg.ab3"
000298E6 <internal_errormsg.ab3@151> XINCLUDE "internal_errormsg.ab3"
000298E8 <internal_errormsg.ab3@154> XINCLUDE "internal_errormsg.ab3"
000298E9 <internal_errormsg.ab3@155> XINCLUDE "internal_errormsg.ab3"
000298EA <internal_errormsg.ab3@156> XINCLUDE "internal_errormsg.ab3"
0002990A <internal_errormsg.ab3@158> XINCLUDE "internal_errormsg.ab3"
00029910 <internal_errormsg.ab3@161> XINCLUDE "internal_errormsg.ab3"
00029922 <internal_errormsg.ab3@163> XINCLUDE "internal_errormsg.ab3"
00029956 <internal_errormsg.ab3@166> XINCLUDE "internal_errormsg.ab3"
0002996E <internal_errormsg.ab3@167> XINCLUDE "internal_errormsg.ab3"
0002998A <internal_errormsg.ab3@168> XINCLUDE "internal_errormsg.ab3"
000299A2 <internal_errormsg.ab3@169> XINCLUDE "internal_errormsg.ab3"
000299C2 <internal_errormsg.ab3@170> XINCLUDE "internal_errormsg.ab3"
000299E2 <internal_errormsg.ab3@171> XINCLUDE "internal_errormsg.ab3"
00029A08 <internal_errormsg.ab3@172> XINCLUDE "internal_errormsg.ab3"
00029A1E <internal_errormsg.ab3@173> XINCLUDE "internal_errormsg.ab3"
00029A3A <internal_errormsg.ab3@174> XINCLUDE "internal_errormsg.ab3"
00029A64 <internal_errormsg.ab3@175> XINCLUDE "internal_errormsg.ab3"
00029A7C <internal_errormsg.ab3@176> XINCLUDE "internal_errormsg.ab3"
00029A98 <internal_errormsg.ab3@177> XINCLUDE "internal_errormsg.ab3"
00029AB8 <internal_errormsg.ab3@178> XINCLUDE "internal_errormsg.ab3"
00029AD0 <internal_errormsg.ab3@179> XINCLUDE "internal_errormsg.ab3"
00029AD4 <internal_errormsg.ab3@182> XINCLUDE "internal_errormsg.ab3"
00029ADA <internal_errormsg.ab3@183> XINCLUDE "internal_errormsg.ab3"
00029AE0 <internal_errormsg.ab3@184> XINCLUDE "internal_errormsg.ab3"
00029AF5 <internal_errormsg.ab3@185> XINCLUDE "internal_errormsg.ab3"
00029AFB <internal_errormsg.ab3@187> XINCLUDE "internal_errormsg.ab3"
00029AFC <internal_errormsg.ab3@188> XINCLUDE "internal_errormsg.ab3"
00029B00 <internal_errormsg.ab3@191> XINCLUDE "internal_errormsg.ab3"
00029B06 <internal_errormsg.ab3@192> XINCLUDE "internal_errormsg.ab3"
00029B0C <internal_errormsg.ab3@193> XINCLUDE "internal_errormsg.ab3"
00029B1F <internal_errormsg.ab3@194> XINCLUDE "internal_errormsg.ab3"
00029B25 <internal_errormsg.ab3@196> XINCLUDE "internal_errormsg.ab3"
00029B26 <internal_errormsg.ab3@197> XINCLUDE "internal_errormsg.ab3"
00029B44 <internal_errormsg.ab3@199> XINCLUDE "internal_errormsg.ab3"
00029B5C <internal_errormsg.ab3@200> XINCLUDE "internal_errormsg.ab3"
00029B78 <internal_errormsg.ab3@201> XINCLUDE "internal_errormsg.ab3"
00029BA2 <internal_errormsg.ab3@202> XINCLUDE "internal_errormsg.ab3"
00029BBC <internal_errormsg.ab3@203> XINCLUDE "internal_errormsg.ab3"
00029BDC <internal_errormsg.ab3@204> XINCLUDE "internal_errormsg.ab3"
00029BFA <internal_errormsg.ab3@205> XINCLUDE "internal_errormsg.ab3"
00029C28 <internal_errormsg.ab3@206> XINCLUDE "internal_errormsg.ab3"
00029C32 <internal_errormsg.ab3@209> XINCLUDE "internal_errormsg.ab3"
00029C64 <internal_errormsg.ab3@210> XINCLUDE "internal_errormsg.ab3"
00029C82 <internal_errormsg.ab3@212> XINCLUDE "internal_errormsg.ab3"
00029CA0 <internal_errormsg.ab3@213> XINCLUDE "internal_errormsg.ab3"
00029CC0 <internal_errormsg.ab3@214> XINCLUDE "internal_errormsg.ab3"
00029CE6 <internal_errormsg.ab3@215> XINCLUDE "internal_errormsg.ab3"
00029D0C <internal_errormsg.ab3@216> XINCLUDE "internal_errormsg.ab3"
00029D34 <internal_errormsg.ab3@217> XINCLUDE "internal_errormsg.ab3"
00029D52 <internal_errormsg.ab3@218> XINCLUDE "internal_errormsg.ab3"
00029D72 <internal_errormsg.ab3@219> XINCLUDE "internal_errormsg.ab3"
00029D8C <internal_errormsg.ab3@220> XINCLUDE "internal_errormsg.ab3"
00029DAE <internal_errormsg.ab3@221> XINCLUDE "internal_errormsg.ab3"
00029DCC <internal_errormsg.ab3@222> XINCLUDE "internal_errormsg.ab3"
00029DEE <internal_errormsg.ab3@223> XINCLUDE "internal_errormsg.ab3"
00029E12 <internal_errormsg.ab3@224> XINCLUDE "internal_errormsg.ab3"
00029E18 <internal_errormsg.ab3@227> XINCLUDE "internal_errormsg.ab3"
00029E34 <internal_errormsg.ab3@228> XINCLUDE "internal_errormsg.ab3"
00029E50 <internal_errormsg.ab3@230> XINCLUDE "internal_errormsg.ab3"
00029E6E <internal_errormsg.ab3@231> XINCLUDE "internal_errormsg.ab3"
00029E8C <internal_errormsg.ab3@232> XINCLUDE "internal_errormsg.ab3"
00029EDA <internal_errormsg.ab3@233> XINCLUDE "internal_errormsg.ab3"
00029EF8 <internal_errormsg.ab3@234> XINCLUDE "internal_errormsg.ab3"
00029F16 <internal_errormsg.ab3@235> XINCLUDE "internal_errormsg.ab3"
00029F30 <internal_errormsg.ab3@236> XINCLUDE "internal_errormsg.ab3"
00029F7C <internal_errormsg.ab3@237> XINCLUDE "internal_errormsg.ab3"
00029FA2 <internal_errormsg.ab3@238> XINCLUDE "internal_errormsg.ab3"
00029FC2 <internal_errormsg.ab3@239> XINCLUDE "internal_errormsg.ab3"
00029FE4 <internal_errormsg.ab3@240> XINCLUDE "internal_errormsg.ab3"
0002A000 <internal_errormsg.ab3@241> XINCLUDE "internal_errormsg.ab3"
0002A026 <internal_errormsg.ab3@242> XINCLUDE "internal_errormsg.ab3"
0002A042 <internal_errormsg.ab3@243> XINCLUDE "internal_errormsg.ab3"
0002A060 <internal_errormsg.ab3@244> XINCLUDE "internal_errormsg.ab3"
0002A088 <internal_errormsg.ab3@245> XINCLUDE "internal_errormsg.ab3"
0002A0A4 <internal_errormsg.ab3@246> XINCLUDE "internal_errormsg.ab3"
0002A0B4 <internal_errormsg.ab3@247> XINCLUDE "internal_errormsg.ab3"
0002A0D6 <internal_errormsg.ab3@248> XINCLUDE "internal_errormsg.ab3"
0002A0DA <internal_errormsg.ab3@251> XINCLUDE "internal_errormsg.ab3"
0002A0DC <internal_errormsg.ab3@254> XINCLUDE "internal_errormsg.ab3"
0002A0F6 <internal_errormsg.ab3@255> XINCLUDE "internal_errormsg.ab3"
0002A11A <internal_errormsg.ab3@257> XINCLUDE "internal_errormsg.ab3"
0002A13A <internal_errormsg.ab3@258> XINCLUDE "internal_errormsg.ab3"
0002A16C <internal_errormsg.ab3@259> XINCLUDE "internal_errormsg.ab3"
0002A1CA <internal_errormsg.ab3@260> XINCLUDE "internal_errormsg.ab3"
0002A202 <internal_errormsg.ab3@261> XINCLUDE "internal_errormsg.ab3"
0002A240 <internal_errormsg.ab3@262> XINCLUDE "internal_errormsg.ab3"
0002A276 <internal_errormsg.ab3@263> XINCLUDE "internal_errormsg.ab3"
0002A2A8 <internal_errormsg.ab3@264> XINCLUDE "internal_errormsg.ab3"
0002A2CC <internal_errormsg.ab3@265> XINCLUDE "internal_errormsg.ab3"
0002A2F0 <internal_errormsg.ab3@266> XINCLUDE "internal_errormsg.ab3"
0002A33A <internal_errormsg.ab3@267> XINCLUDE "internal_errormsg.ab3"
0002A362 <internal_errormsg.ab3@268> XINCLUDE "internal_errormsg.ab3"
0002A3AC <internal_errormsg.ab3@269> XINCLUDE "internal_errormsg.ab3"
0002A3EC <internal_errormsg.ab3@270> XINCLUDE "internal_errormsg.ab3"
0002A3EC <AmiBlitz3.ab3@11258> XINCLUDE "internal_errormsg.ab3"
0002A3EE <AmiBlitz3.ab3@11262> ezerr:   Ds.w 1                                            ;for simple errors
0002A3F4 <AmiBlitz3.ab3@11268>    MOVE.l myline,d0
0002A3F8 <AmiBlitz3.ab3@11269>   BNE handle_compileerror__l2
0002A3FE <AmiBlitz3.ab3@11271>     MOVE.l a5,lastsourcepos
0002A400 <AmiBlitz3.ab3@11273>     SUBA.l a5,a5
0002A406 <AmiBlitz3.ab3@11275>   TST.l usedfrom
0002A40A <AmiBlitz3.ab3@11276>   BEQ handle_compileerror__org
0002A410 <AmiBlitz3.ab3@11277>     MOVEA.l usedfrom,a5
0002A416 <AmiBlitz3.ab3@11280>   TST.w dirmode
0002A41A <AmiBlitz3.ab3@11281>   BNE.b handle_compileerror__quiet
0002A420 <AmiBlitz3.ab3@11282>     JSR call_setpointernormal
0002A424 <AmiBlitz3.ab3@11283>     MOVE.w ezerr(PC),D0
0002A428 <AmiBlitz3.ab3@11284>     BNE.w handle_compileerror__skip
0002A42E <AmiBlitz3.ab3@11285>       MOVE.w cfetchmode,D0
0002A432 <AmiBlitz3.ab3@11286>       BEQ.w handle_compileerror__skip2
0002A43C <AmiBlitz3.ab3@11287>         MOVE.l oldlibat,destbufferend                      ;fix up lib thing.
0002A442 <AmiBlitz3.ab3@11290>   MOVE.w constmode,D0
0002A446 <AmiBlitz3.ab3@11291>   BEQ.b handle_compileerror__skip3
0002A44A <AmiBlitz3.ab3@11292>     BSR.w asmerr2
0002A450 <AmiBlitz3.ab3@11295>   MOVE.l firstlocal,D1
0002A456 <AmiBlitz3.ab3@11296>   OR.l firstglob,D1
0002A45A <AmiBlitz3.ab3@11297>   BEQ.b handle_compileerror__notproc                       ;?!?!?!
0002A460 <AmiBlitz3.ab3@11298> 
0002A464 <AmiBlitz3.ab3@11299>     BNE handle_compileerror__notproc                       ; yes skip
0002A46A <AmiBlitz3.ab3@11300>       JSR JL_0_DB5C                                        ; no free some data ????
0002A472 <AmiBlitz3.ab3@11303>   MOVE.w #$FFFF,anyerrs                                    ;#-1,anyerrs org source
0002A47C <AmiBlitz3.ab3@11304>   CMP.l #"NORE",reqmode                                    ;for used functions
0002A480 <AmiBlitz3.ab3@11305>   BEQ handle_compileerror__notproc_l1
0002A48A <AmiBlitz3.ab3@11306>     MOVE.l linenumat,compilelinecounter
0002A490 <AmiBlitz3.ab3@11309>   JSR close_compilewin
0002A492 <AmiBlitz3.ab3@11312>   MOVEA.l (A7)+,A0
0002A498 <AmiBlitz3.ab3@11313>   MOVE.l errorcounter,d0                                   ; added to make maxerrorcount changable in CLIMode  tomsmart1
0002A49E <AmiBlitz3.ab3@11314>   CMP.l maxerrorcount,d0                                   ; changed to make maxerrorcount changable in CLIMode  tomsmart1
0002A4A2 <AmiBlitz3.ab3@11315>   BLT 'lesserror
0002A4A8 <AmiBlitz3.ab3@11316>   LEA errorlimit_text,a0
0002A4AE <AmiBlitz3.ab3@11319>   ADDQ.l #1,errorcounter
0002A4B4 <AmiBlitz3.ab3@11320>   JSR errorstringparse
0002A4BE <AmiBlitz3.ab3@11321>   CMP.l #"NORE",reqmode                                    ;for used functions
0002A4C2 <AmiBlitz3.ab3@11322>   BEQ handle_compileerror__skip_Lxx2
0002A4C8 <AmiBlitz3.ab3@11323>   TST.l CLIMode
0002A4CC <AmiBlitz3.ab3@11324>   BNE 'climode_output
0002A4D2 <AmiBlitz3.ab3@11327>     JSR save_errorfile
0002A4D6 <AmiBlitz3.ab3@11328>     BRA 'end_output
0002A4DC <AmiBlitz3.ab3@11331>     JSR stdout_error
0002A4E2 <AmiBlitz3.ab3@11333>      MOVE.l errorcounter,d0                          ; added to make maxerrorcount changable in CLIMode  tomsmart1
0002A4E8 <AmiBlitz3.ab3@11334>      CMP.l maxerrorcount,d0                          ; changed to make maxerrorcount changable in CLIMode  tomsmart1
0002A4EC <AmiBlitz3.ab3@11335>      BGT 'end_output
0002A4F2 <AmiBlitz3.ab3@11336>     MOVE.l lastsourcepos,a5
0002A4F4 <AmiBlitz3.ab3@11338>  'loop TST.b (a5)
0002A4F8 <AmiBlitz3.ab3@11339>       BEQ 'ok2
0002A4FA <AmiBlitz3.ab3@11340>     MOVE.b (a5)+,d0                                  ; position to usefull source position to avoid following errors
0002A4FE <AmiBlitz3.ab3@11341>     BEQ 'ok
0002A502 <AmiBlitz3.ab3@11342>     CMP.b #":",d0
0002A506 <AmiBlitz3.ab3@11343>     BEQ 'ok
0002A50A <AmiBlitz3.ab3@11344>     BRA 'loop
0002A50C <AmiBlitz3.ab3@11346>  'ok SUBQ.l #1,a5
0002A514 <AmiBlitz3.ab3@11348>  'ok2 MOVE.w #0,lastchar
0002A51C <AmiBlitz3.ab3@11349>     MOVE.b #1,iserror
0002A522 <AmiBlitz3.ab3@11350>     MOVE.l stackaddr,a7
0002A524 <AmiBlitz3.ab3@11351>     RTS
0002A526 <AmiBlitz3.ab3@11357>   MOVE.l A0,-(a7)
0002A564 <AmiBlitz3.ab3@11358>   !ComData_GetL{comFunc_ErrorRequest,A1}
0002A566 <AmiBlitz3.ab3@11359>   MOVE.l (a7)+,A0
0002A56A <AmiBlitz3.ab3@11361>   MOVEM.l d6/D7/A6,-(A7)
0002A570 <AmiBlitz3.ab3@11362>   MOVE.l includeline,d7
0002A576 <AmiBlitz3.ab3@11363>   MOVE.l #"INLN",a6
0002A580 <AmiBlitz3.ab3@11364>   MOVE.l errstack,tempa7
0002A582 <AmiBlitz3.ab3@11365>   JSR (A1)                                                  ;open ped errorrequest
0002A586 <AmiBlitz3.ab3@11367>   MOVEM.l (A7)+,D7/d6/A6
0002A58C <AmiBlitz3.ab3@11370>   MOVE.l tempa7,a7
0002A592 <AmiBlitz3.ab3@11371>   MOVEA.l errcont,A0
0002A594 <AmiBlitz3.ab3@11373> RTS
0002A59A <AmiBlitz3.ab3@11376>   MOVEA.l errstack,A7
0002A5A0 <AmiBlitz3.ab3@11377>   MOVEA.l errcont,A0
0002A5A2 <AmiBlitz3.ab3@11379> RTS
0002A5A4 <AmiBlitz3.ab3@11382>   MOVE.l (A7),D0
0002A5AA <AmiBlitz3.ab3@11383>   MOVEA.l errstack,A7
0002A5B0 <AmiBlitz3.ab3@11384>   MOVEA.l errcont,A0
0002A5B2 <AmiBlitz3.ab3@11385> JMP (A0)
0002A5B6 <AmiBlitz3.ab3@11391>   CMP.w #$7A,D0                                            ;'z'
0002A5BA <AmiBlitz3.ab3@11392>    BHI.w tstalpha__no
0002A5BE <AmiBlitz3.ab3@11393>   CMP.w #$41,D0                                            ;'A'
0002A5C2 <AmiBlitz3.ab3@11394>    BCS.w tstalpha__no
0002A5C6 <AmiBlitz3.ab3@11395>   CMP.w #$61,D0                                            ;'a'
0002A5CA <AmiBlitz3.ab3@11396>    BCC.w tstalpha__yes
0002A5CE <AmiBlitz3.ab3@11397>   CMP.w #$5A,D0                                            ;'Z'
0002A5D2 <AmiBlitz3.ab3@11398>    BHI.w tstalpha__no
0002A5D4 <AmiBlitz3.ab3@11401>   CMP.w D0,D0
0002A5D6 <AmiBlitz3.ab3@11404> RTS
0002A5DA <AmiBlitz3.ab3@11412>   CMP.w #$30,D0                                            ;'0'
0002A5DE <AmiBlitz3.ab3@11413>    BCS.w tstnum__skip
0002A5E2 <AmiBlitz3.ab3@11414>   CMP.w #$39,D0                                            ;'9'
0002A5E6 <AmiBlitz3.ab3@11415>    BHI.w tstnum__skip                                     
0002A5E8 <AmiBlitz3.ab3@11416>   CMP.w D0,D0
0002A5EA <AmiBlitz3.ab3@11419> RTS
0002A60C <AmiBlitz3.ab3@11425>   !compare1                                                ;bsr.w tstalpha
0002A610 <AmiBlitz3.ab3@11426>    BEQ.w tstlab__skip
0002A622 <AmiBlitz3.ab3@11427>   !compare2                                                ;bsr.w tstnum2
0002A626 <AmiBlitz3.ab3@11428>    BEQ.w tstlab__skip
0002A62A <AmiBlitz3.ab3@11429>   CMP.w #$5F,D0                                            ;'_'
0002A62E <AmiBlitz3.ab3@11430>    BEQ.w tstlab__skip
0002A632 <AmiBlitz3.ab3@11431>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
0002A634 <AmiBlitz3.ab3@11434> RTS
0002A63E <AmiBlitz3.ab3@11439>   MOVE.w oldqflag,instringon
0002A644 <AmiBlitz3.ab3@11440>   MOVEA.l lastsourcepos,A5
0002A64A <AmiBlitz3.ab3@11443>   MOVE.l a5,beforeparameterfetch
0002A650 <AmiBlitz3.ab3@11444>   LEA ptr_parameterstore,A1
0002A652 <AmiBlitz3.ab3@11447>   MOVEQ.l #$00,D2
0002A658 <AmiBlitz3.ab3@11450>   LEA chartab,a0
0002A65A <AmiBlitz3.ab3@11451>   MOVEQ #0,d0
0002A660 <AmiBlitz3.ab3@11452>   MOVE.l A5,lastsourcepos
0002A66A <AmiBlitz3.ab3@11453>   MOVE.w instringon,oldqflag
0002A66C <AmiBlitz3.ab3@11456>     MOVE.b (a5)+,d0
0002A670 <AmiBlitz3.ab3@11457>   CMP.b #$20,d0                                            ;space deftype
0002A674 <AmiBlitz3.ab3@11458>   BEQ makename4__retry
0002A67A <AmiBlitz3.ab3@11460>   MOVE.w d0,lastchar
0002A67E <AmiBlitz3.ab3@11461>   TST.b 0(a0,d0.w)
0002A682 <AmiBlitz3.ab3@11462>   BNE makename__done
0002A684 <AmiBlitz3.ab3@11471>   MOVE.b D0,(A1)+
0002A686 <AmiBlitz3.ab3@11472>   ADDQ.l #1,D2
0002A68C <AmiBlitz3.ab3@11473>   MOVE.l A5,lastsourcepos
0002A68E <AmiBlitz3.ab3@11476>   MOVE.b (a5)+,d0
0002A694 <AmiBlitz3.ab3@11477>   MOVE.b d0,lastchar+1
0002A698 <AmiBlitz3.ab3@11478>   CMP.b #$20,d0
0002A69C <AmiBlitz3.ab3@11479>   BEQ makename__loop_l20
0002A6A0 <AmiBlitz3.ab3@11481>   TST.b 0(a0,d0)
0002A6A4 <AmiBlitz3.ab3@11482>   BEQ makename__loop
0002A6A8 <AmiBlitz3.ab3@11483>   CMP.b #2,d0
0002A6AC <AmiBlitz3.ab3@11484>   BNE makename__loop_lf1
0002A6B2 <AmiBlitz3.ab3@11485>   MOVEA.l usedfrom,A5
0002A6B8 <AmiBlitz3.ab3@11486>   CLR.l usedfrom
0002A6BC <AmiBlitz3.ab3@11487> BRA makename__loop_ln1
0002A6C0 <AmiBlitz3.ab3@11490>   CMP.b #1,d0
0002A6C4 <AmiBlitz3.ab3@11491>   BNE makename__loop_l20
0002A6C8 <AmiBlitz3.ab3@11492>   MOVEA.l cmakea5(PC),A5
0002A6CC <AmiBlitz3.ab3@11493> BRA makename__loop_ln1
0002A6D0 <AmiBlitz3.ab3@11496>   CMP.b #$7e,d0
0002A6D4 <AmiBlitz3.ab3@11497>             BNE makename__loop_lt
0002A6DA <AmiBlitz3.ab3@11498>             TST.w cmake
0002A6DE <AmiBlitz3.ab3@11499>             BNE.w makename__loop_a1
0002A6E0 <AmiBlitz3.ab3@11500>             SUBQ.l #1,a5
0002A6E4 <AmiBlitz3.ab3@11501>             BSR.w get1bytemain
0002A6E8 <AmiBlitz3.ab3@11502> BRA makename__loop
0002A6EC <AmiBlitz3.ab3@11506> BRA makename__loop_gpex
0002A6F0 <AmiBlitz3.ab3@11510>   BSR.w getchar
0002A712 <AmiBlitz3.ab3@11511>    !compare1                                               ;bsr.w tstalpha
0002A716 <AmiBlitz3.ab3@11512>    BEQ.w makename__loop_getp1
0002A728 <AmiBlitz3.ab3@11513>    !compare2                                               ;bsr.w tstnum
0002A72C <AmiBlitz3.ab3@11514>    BEQ.w makename__loop_getp1
0002A730 <AmiBlitz3.ab3@11515>   CMP.w #$5F,D0                                            ;'_'
0002A734 <AmiBlitz3.ab3@11516>    BEQ.w makename__loop_getp1
0002A738 <AmiBlitz3.ab3@11517>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
0002A73C <AmiBlitz3.ab3@11521>       BNE makename__loop_gpex
0002A740 <AmiBlitz3.ab3@11522>       CMP.b #$20,d0
0002A744 <AmiBlitz3.ab3@11523>       BNE.w makename__loop
0002A746 <AmiBlitz3.ab3@11526>      TST.b d0
0002A74A <AmiBlitz3.ab3@11527>      BPL makename__loop_l10
0002A74C <AmiBlitz3.ab3@11528>      SUBQ.l #1,a5
0002A750 <AmiBlitz3.ab3@11529>      BSR get1byte_
0002A754 <AmiBlitz3.ab3@11532>    CMP.w #$20,D0
0002A758 <AmiBlitz3.ab3@11533>    BNE.w makename__done
0002A75A <AmiBlitz3.ab3@11534>    MOVEQ #0,d0
0002A760 <AmiBlitz3.ab3@11535>   MOVE.l a5,lastsourcepos
0002A762 <AmiBlitz3.ab3@11538>   MOVE.b (a5)+,d0                                          ;neuneu
0002A766 <AmiBlitz3.ab3@11539>   BPL makename__loop_l101:
0002A768 <AmiBlitz3.ab3@11540>   ASL.w #8,d0
0002A76A <AmiBlitz3.ab3@11541>   MOVE.b (a5)+,d0
0002A770 <AmiBlitz3.ab3@11544>   TST.w instringon
0002A774 <AmiBlitz3.ab3@11545>   BNE makename__loop_l102
0002A778 <AmiBlitz3.ab3@11546>   CMP.b #$20,d0
0002A77C <AmiBlitz3.ab3@11547>   BEQ makename__loop_l103
0002A780 <AmiBlitz3.ab3@11548>   CMP.b #";",d0
0002A784 <AmiBlitz3.ab3@11549>   BNE makename__loop_l102
0002A786 <AmiBlitz3.ab3@11552>   MOVE.b (A5)+,D0
0002A78A <AmiBlitz3.ab3@11553>              BEQ makename__loop_l1
0002A78E <AmiBlitz3.ab3@11554>              CMP.b #":",d0
0002A792 <AmiBlitz3.ab3@11555>              BNE makename__loop_lr                         ;:@
0002A796 <AmiBlitz3.ab3@11556>              CMP.b #"@",(a5)
0002A79A <AmiBlitz3.ab3@11557>              BNE makename__loop_lr
0002A79C <AmiBlitz3.ab3@11558>              ADDQ #1,a5
0002A7A2 <AmiBlitz3.ab3@11562>   MOVE.w d0,lastchar
0002A7A6 <AmiBlitz3.ab3@11566>   CMP.b #";",d0
0002A7AA <AmiBlitz3.ab3@11567>   BEQ makename__done_l11
0002A7AC <AmiBlitz3.ab3@11568>   CLR.b (A1)
0002A7AE <AmiBlitz3.ab3@11570>   TST.w D2
0002A7B0 <AmiBlitz3.ab3@11571> RTS
0002A7B2 <AmiBlitz3.ab3@11574>   CLR.b (a1)
0002A7B4 <AmiBlitz3.ab3@11575>   MOVEQ #0,d0
0002A7BA <AmiBlitz3.ab3@11576>   MOVE.w d0,lastchar
0002A7BC <AmiBlitz3.ab3@11578>   TST.w D2
0002A7BE <AmiBlitz3.ab3@11579> RTS
0002A7C0 <AmiBlitz3.ab3@11585>   MOVE.l (A2),D0
0002A7C4 <AmiBlitz3.ab3@11588>   BEQ.w findlast__here
0002A7C6 <AmiBlitz3.ab3@11589>   MOVEA.l D0,A2
0002A7CA <AmiBlitz3.ab3@11590> BRA.w findlast__loop
0002A7CE <AmiBlitz3.ab3@11593> BRA.w reget
0002A7D0 <AmiBlitz3.ab3@11599>   MOVE.l (A2),-(A7)
0002A7D4 <AmiBlitz3.ab3@11600>   BSR.w addlabel
0002A7D6 <AmiBlitz3.ab3@11601>   MOVE.l (A7)+,(A2)
0002A7D8 <AmiBlitz3.ab3@11602> RTS
0002A7DE <AmiBlitz3.ab3@11607>   CLR.l fp0addr
0002A7E4 <AmiBlitz3.ab3@11608>   TST.w dirmode
0002A7E8 <AmiBlitz3.ab3@11609>    BNE.w illdirerr
0002A7EA <AmiBlitz3.ab3@11610>   MOVEQ.l #$00,D0
0002A7EC <AmiBlitz3.ab3@11611>   MOVE.w D7,D0
0002A7EE <AmiBlitz3.ab3@11612>   ADD.w D2,D0
0002A7F0 <AmiBlitz3.ab3@11613>   ADDQ.w #1,D0
0002A7F2 <AmiBlitz3.ab3@11614>   MOVE.w D0,D2
0002A7F4 <AmiBlitz3.ab3@11615>   ADDQ.l #2,d0
0002A7F6 <AmiBlitz3.ab3@11616>   MOVEQ.l #$01,D1
0002A7FC <AmiBlitz3.ab3@11617>   MOVEA.l _execbase,A6
0002A802 <AmiBlitz3.ab3@11618>   MOVE.l mempool2,a0
0002A806 <AmiBlitz3.ab3@11619>   JSR _AllocPooled(a6)
0002A80C <AmiBlitz3.ab3@11621>   MOVE.l lastlabel,a2
0002A80E <AmiBlitz3.ab3@11622>   MOVE.l D0,(A2)
0002A810 <AmiBlitz3.ab3@11623>   MOVE.l d0,a0
0002A812 <AmiBlitz3.ab3@11624>   CLR.l (a0)
0002A818 <AmiBlitz3.ab3@11625>   MOVE.l a0,lastlabel
0002A81A <AmiBlitz3.ab3@11626>   MOVE.l d0,A2
0002A81E <AmiBlitz3.ab3@11627>   LEA -$1(A0,D7.W),A0
0002A820 <AmiBlitz3.ab3@11628>   MOVE.b D2,(A0)+
0002A826 <AmiBlitz3.ab3@11629>   LEA ptr_parameterstore,A1
0002A828 <AmiBlitz3.ab3@11630>   MOVEQ #0,d0
0002A82A <AmiBlitz3.ab3@11631>   MOVEQ #0,d1
0002A82C <AmiBlitz3.ab3@11634>   MOVE.b (A1)+,d1
0002A830 <AmiBlitz3.ab3@11635>    BEQ 'l1
0002A836 <AmiBlitz3.ab3@11636>    !hashalgo
0002A838 <AmiBlitz3.ab3@11637>    MOVE.b d1,(A0)+
0002A83C <AmiBlitz3.ab3@11638> BRA addlabel_loop2a
0002A83E <AmiBlitz3.ab3@11641>    CLR.b (a0)+
0002A844 <AmiBlitz3.ab3@11642>    LEA labelhash,a0
0002A84A <AmiBlitz3.ab3@11643>    AND.l #hashsize,d0
0002A84C <AmiBlitz3.ab3@11644>    ASL.l #2,d0
0002A850 <AmiBlitz3.ab3@11645>    MOVE.l 0(a0,d0),d1
0002A854 <AmiBlitz3.ab3@11646>    MOVE.l d1,$c(a2)
0002A858 <AmiBlitz3.ab3@11647>    MOVE.l a2,0(a0,d0)
0002A85A <AmiBlitz3.ab3@11648>    MOVEQ #0,d0
0002A85E <AmiBlitz3.ab3@11649> BRA.w reget
0002A864 <AmiBlitz3.ab3@11653>    TST.b newvariable
0002A868 <AmiBlitz3.ab3@11654>    BNE addlabel
0002A86E <AmiBlitz3.ab3@11657>   TST.w dirmode
0002A872 <AmiBlitz3.ab3@11658>    BNE.w illdirerr
0002A874 <AmiBlitz3.ab3@11659>   MOVEQ.l #$00,D0
0002A876 <AmiBlitz3.ab3@11660>   MOVE.w D7,D0
0002A878 <AmiBlitz3.ab3@11661>   ADD.w D2,D0
0002A87A <AmiBlitz3.ab3@11662>   ADDQ.w #1,D0
0002A87C <AmiBlitz3.ab3@11663>   MOVE.w D0,D2
0002A87E <AmiBlitz3.ab3@11664>   MOVEQ.l #$01,D1
0002A884 <AmiBlitz3.ab3@11665>   MOVEA.l _execbase,A6
0002A88A <AmiBlitz3.ab3@11666>   MOVE.l mempool2,a0
0002A88E <AmiBlitz3.ab3@11667>   JSR _AllocPooled(a6)
0002A890 <AmiBlitz3.ab3@11668>   MOVEA.l D0,A0
0002A896 <AmiBlitz3.ab3@11670>   LEA varbase,a2
0002A898 <AmiBlitz3.ab3@11671>   MOVE.l (a2),(a0)
0002A89A <AmiBlitz3.ab3@11672>   MOVE.l A0,(A2)
0002A89C <AmiBlitz3.ab3@11673>   MOVEA.l A0,A2
0002A8A0 <AmiBlitz3.ab3@11674>   LEA -$1(A0,D7.W),A0
0002A8A2 <AmiBlitz3.ab3@11675>   MOVE.b D2,(A0)+
0002A8A8 <AmiBlitz3.ab3@11676>   LEA ptr_parameterstore,A1
0002A8AA <AmiBlitz3.ab3@11677>   MOVEQ #0,d0
0002A8AC <AmiBlitz3.ab3@11678>   MOVEQ #0,d1
0002A8AE <AmiBlitz3.ab3@11681>   MOVE.b (A1)+,d1
0002A8B2 <AmiBlitz3.ab3@11682>    BEQ 'l12
0002A8B8 <AmiBlitz3.ab3@11683>    !hashalgo
0002A8BA <AmiBlitz3.ab3@11684>    MOVE.b d1,(A0)+
0002A8BE <AmiBlitz3.ab3@11685> BRA 'l11
0002A8C0 <AmiBlitz3.ab3@11688>   CLR.b (a0)+
0002A8C6 <AmiBlitz3.ab3@11689>   LEA variablehash,a0
0002A8CC <AmiBlitz3.ab3@11690>    AND.l #hashsize,d0
0002A8CE <AmiBlitz3.ab3@11691>    ASL.l #2,d0
0002A8D2 <AmiBlitz3.ab3@11692>    MOVE.l 0(a0,d0),d1
0002A8D6 <AmiBlitz3.ab3@11693>    MOVE.l d1,$e(a2)
0002A8DA <AmiBlitz3.ab3@11694>    MOVE.l a2,0(a0,d0)
0002A8DC <AmiBlitz3.ab3@11695>    MOVEQ #0,d0
0002A8E0 <AmiBlitz3.ab3@11696> BRA.w reget
0002A8E6 <AmiBlitz3.ab3@11700>   TST.w dirmode
0002A8EA <AmiBlitz3.ab3@11701>    BNE.w illdirerr
0002A8EC <AmiBlitz3.ab3@11708>   MOVEQ.l #$00,D0
0002A8EE <AmiBlitz3.ab3@11709>   MOVE.w D7,D0
0002A8F0 <AmiBlitz3.ab3@11710>   ADD.w D2,D0
0002A8F2 <AmiBlitz3.ab3@11711>   ADDQ.w #1,D0
0002A8F4 <AmiBlitz3.ab3@11712>   MOVE.w D0,D2
0002A8F6 <AmiBlitz3.ab3@11713>   MOVEQ.l #$01,D1
0002A8FC <AmiBlitz3.ab3@11714>   MOVEA.l _execbase,A6
0002A902 <AmiBlitz3.ab3@11715>   MOVE.l mempool2,a0
0002A906 <AmiBlitz3.ab3@11716>   JSR _AllocPooled(a6)
0002A908 <AmiBlitz3.ab3@11718>   MOVEA.l D0,A0
0002A90A <AmiBlitz3.ab3@11719>   MOVE.l A0,(A2)
0002A90C <AmiBlitz3.ab3@11720>   CLR.l (a0)
0002A910 <AmiBlitz3.ab3@11721>   CLR.l 8(a0)                                              ;clear next
0002A912 <AmiBlitz3.ab3@11722>   MOVEA.l A0,A2
0002A916 <AmiBlitz3.ab3@11723>   LEA -$1(A0,D7.W),A0
0002A918 <AmiBlitz3.ab3@11724>   MOVE.b D2,(A0)+                                          ;put in struct length
0002A91E <AmiBlitz3.ab3@11725>   LEA ptr_parameterstore,A1
0002A920 <AmiBlitz3.ab3@11726>   MOVEQ #0,d0
0002A922 <AmiBlitz3.ab3@11727>   MOVEQ #0,d1
0002A924 <AmiBlitz3.ab3@11730>   MOVE.b (A1)+,d1
0002A926 <AmiBlitz3.ab3@11733>   MOVE.b d1,(A0)+
0002A92A <AmiBlitz3.ab3@11734>   BNE.w addlabel_loop2
0002A92E <AmiBlitz3.ab3@11735> BRA.w reget
0002A930 <AmiBlitz3.ab3@11739>   MOVEQ.l #$13,D7
0002A936 <AmiBlitz3.ab3@11740>   LEA constantbase,A2
0002A93A <AmiBlitz3.ab3@11741> BRA.w findlab
0002A93C <AmiBlitz3.ab3@11745>   MOVEQ.l #$05+8,D7                                        ;#5,d7 org source
0002A942 <AmiBlitz3.ab3@11746>   LEA xinclude_base,A2
0002A946 <AmiBlitz3.ab3@11747> BRA.w findlab
0002A948 <AmiBlitz3.ab3@11751>   MOVEQ.l #$09,D7
0002A94E <AmiBlitz3.ab3@11752>   LEA firstconst,A2
0002A952 <AmiBlitz3.ab3@11753> BRA.w findlab
0002A954 <AmiBlitz3.ab3@11757>   MOVEQ.l #$0d,D7                                          ;find macro
0002A95A <AmiBlitz3.ab3@11758>   LEA macrobase,A2
0002A95E <AmiBlitz3.ab3@11759> BRA.w findlab
0002A964 <AmiBlitz3.ab3@11763>   LEA labelhash,A2
0002A966 <AmiBlitz3.ab3@11764>   MOVEQ.l #$13,D7
0002A968 <AmiBlitz3.ab3@11765>   EXT.l d2
0002A96E <AmiBlitz3.ab3@11766>   LEA ptr_parameterstore,A0
0002A970 <AmiBlitz3.ab3@11767>   MOVEQ #0,d0
0002A972 <AmiBlitz3.ab3@11768>   MOVEQ #0,d1
0002A974 <AmiBlitz3.ab3@11771>     MOVE.b (a0)+,d1
0002A978 <AmiBlitz3.ab3@11772>     BEQ 'l15
0002A97E <AmiBlitz3.ab3@11773>     !hashalgo
0002A982 <AmiBlitz3.ab3@11774> BRA 'l20
0002A988 <AmiBlitz3.ab3@11777>   AND.l #hashsize,d0
0002A98A <AmiBlitz3.ab3@11778>   ASL.l #2,d0
0002A98E <AmiBlitz3.ab3@11779>   MOVE.l 0(a2,d0),d0
0002A992 <AmiBlitz3.ab3@11780> BRA 'l11
0002A996 <AmiBlitz3.ab3@11783>   MOVE.l $c(A2),D0                                         ;find label
0002A99A <AmiBlitz3.ab3@11786>   BEQ findlab__no
0002A99C <AmiBlitz3.ab3@11787>   MOVEA.l D0,A2
0002A99E <AmiBlitz3.ab3@11788>   MOVEQ.l #$00,D0
0002A9A2 <AmiBlitz3.ab3@11789>   MOVE.b -$1(A2,D7.l),D0
0002A9A8 <AmiBlitz3.ab3@11790>   LEA ptr_parameterstore,A0
0002A9AA <AmiBlitz3.ab3@11791>   SUB.l D7,D0
0002A9AC <AmiBlitz3.ab3@11792>   SUBQ.l #1,D0
0002A9AE <AmiBlitz3.ab3@11793>   CMP.l D0,D2
0002A9B2 <AmiBlitz3.ab3@11794>    BNE.b 'l10
0002A9B6 <AmiBlitz3.ab3@11795>   LEA $0(A2,D7.W),A1
0002A9B8 <AmiBlitz3.ab3@11796>   SUBQ.l #1,D0
0002A9BA <AmiBlitz3.ab3@11799>     MOVE.b (a1)+,d1
0002A9BC <AmiBlitz3.ab3@11800>     CMP.b (a0)+,d1
0002A9C0 <AmiBlitz3.ab3@11802>     BNE.b 'l10
0002A9C4 <AmiBlitz3.ab3@11803>   DBF D0,'l201
0002A9C8 <AmiBlitz3.ab3@11805>   BSR.w reget
0002A9CA <AmiBlitz3.ab3@11806>   CMP.w D0,D0
0002A9CC <AmiBlitz3.ab3@11807> RTS
0002A9CE <AmiBlitz3.ab3@11811>   MOVEQ.l #$0B,D7
0002A9D2 <AmiBlitz3.ab3@11812> BRA.w findlab
0002A9D8 <AmiBlitz3.ab3@11816>   LEA firstproc,A2
0002A9DE <AmiBlitz3.ab3@11817>   MOVE.l #$21+#funcentry_extend,D7
0002A9E2 <AmiBlitz3.ab3@11818> BRA findlab
0002A9E8 <AmiBlitz3.ab3@11822>   LEA firstfor,A2
0002A9EA <AmiBlitz3.ab3@11823>   MOVEQ.l #$11,D7
0002A9EE <AmiBlitz3.ab3@11824> BRA.w findlab
0002A9F0 <AmiBlitz3.ab3@11828>   MOVEQ.l #$0F,D7
0002A9F4 <AmiBlitz3.ab3@11829> BRA.w findlab
0002A9F6 <AmiBlitz3.ab3@11833>   MOVEQ.l #$0F+4,D7
0002A9FC <AmiBlitz3.ab3@11834>   TST.b newvariable
0002AA00 <AmiBlitz3.ab3@11835>    BNE.w findlab
0002AA06 <AmiBlitz3.ab3@11836>   LEA variablehash,A2
0002AA0C <AmiBlitz3.ab3@11837>   LEA ptr_parameterstore,A0
0002AA0E <AmiBlitz3.ab3@11838>   MOVEQ #0,d0
0002AA10 <AmiBlitz3.ab3@11839>   MOVEQ #0,d1
0002AA12 <AmiBlitz3.ab3@11842>     MOVE.b (a0)+,d1
0002AA16 <AmiBlitz3.ab3@11843>     BEQ 'l15
0002AA1C <AmiBlitz3.ab3@11844>     !hashalgo
0002AA20 <AmiBlitz3.ab3@11845> BRA 'l20
0002AA26 <AmiBlitz3.ab3@11848>   AND.l #hashsize,d0
0002AA28 <AmiBlitz3.ab3@11849>   ASL.l #2,d0
0002AA2C <AmiBlitz3.ab3@11850>   MOVE.l 0(a2,d0),d0
0002AA30 <AmiBlitz3.ab3@11851> BRA 'l11
0002AA34 <AmiBlitz3.ab3@11854>   MOVE.l $e(A2),D0                                         ;find label
0002AA38 <AmiBlitz3.ab3@11857>   BEQ findlab__no
0002AA3A <AmiBlitz3.ab3@11858>   MOVEA.l D0,A2
0002AA3C <AmiBlitz3.ab3@11859>   MOVEQ.l #$00,D0
0002AA40 <AmiBlitz3.ab3@11860>   MOVE.b -$1(A2,D7.W),D0
0002AA46 <AmiBlitz3.ab3@11861>   LEA ptr_parameterstore,A0
0002AA48 <AmiBlitz3.ab3@11862>   SUB.w D7,D0
0002AA4A <AmiBlitz3.ab3@11863>   SUBQ.l #1,D0
0002AA4C <AmiBlitz3.ab3@11864>   CMP.w D0,D2
0002AA50 <AmiBlitz3.ab3@11865>    BNE.b 'l10
0002AA54 <AmiBlitz3.ab3@11866>   LEA $0(A2,D7.W),A1
0002AA56 <AmiBlitz3.ab3@11867>   SUBQ.l #1,D0
0002AA58 <AmiBlitz3.ab3@11870>     MOVE.b (a1)+,d1
0002AA5A <AmiBlitz3.ab3@11871>     CMP.b (a0)+,d1
0002AA5E <AmiBlitz3.ab3@11873>     BNE.b 'l10
0002AA62 <AmiBlitz3.ab3@11874>   DBF D0,'l201
0002AA66 <AmiBlitz3.ab3@11876>   BSR.w reget
0002AA68 <AmiBlitz3.ab3@11877>   CMP.w D0,D0
0002AA6A <AmiBlitz3.ab3@11878> RTS
0002AA6C <AmiBlitz3.ab3@11891>     MOVE.l (A2),D0                                         ;find label
0002AA70 <AmiBlitz3.ab3@11892>      BEQ.b findlab__no
0002AA72 <AmiBlitz3.ab3@11893>     MOVEA.l D0,A2
0002AA74 <AmiBlitz3.ab3@11894>     MOVEQ.l #$00,D0
0002AA78 <AmiBlitz3.ab3@11895>     MOVE.b -$1(A2,D7.W),D0
0002AA7A <AmiBlitz3.ab3@11896>     SUB.l D7,D0
0002AA7C <AmiBlitz3.ab3@11897>     SUBQ.l #1,D0
0002AA7E <AmiBlitz3.ab3@11898>   CMP.w D0,D2
0002AA82 <AmiBlitz3.ab3@11899>   BNE.b findlab__loop
0002AA86 <AmiBlitz3.ab3@11901>   LEA $0(A2,D7.W),A1
0002AA8C <AmiBlitz3.ab3@11902>   LEA ptr_parameterstore,A0
0002AA8E <AmiBlitz3.ab3@11903>   SUBQ.l #1,D0
0002AA90 <AmiBlitz3.ab3@11906>     MOVE.b (a1)+,d1
0002AA92 <AmiBlitz3.ab3@11907>     CMP.b (a0)+,d1
0002AA96 <AmiBlitz3.ab3@11909>     BNE.b findlab__loop
0002AA9A <AmiBlitz3.ab3@11910>   DBF D0,findlab__loop2
0002AA9E <AmiBlitz3.ab3@11912>   BSR.w reget
0002AAA0 <AmiBlitz3.ab3@11913>   CMP.w D0,D0
0002AAA2 <AmiBlitz3.ab3@11914> RTS
0002AAA6 <AmiBlitz3.ab3@11917>   BSR.w reget
0002AAA8 <AmiBlitz3.ab3@11918>   MOVEQ.l #-$01,D1
0002AAAA <AmiBlitz3.ab3@11919> RTS
0002AAB0 <AmiBlitz3.ab3@11923>   MOVEA.l alllocals,A4
0002AAB6 <AmiBlitz3.ab3@11924>   CLR.l alllocals
0002AABA <AmiBlitz3.ab3@11928>     CMPA.w #$0,A4
0002AABE <AmiBlitz3.ab3@11929>      BEQ.b freeprocvs__done
0002AAC2 <AmiBlitz3.ab3@11930>     MOVEA.l $4(A4),A3
0002AAC6 <AmiBlitz3.ab3@11932>     MOVEA.l $8(A4),A3
0002AAC8 <AmiBlitz3.ab3@11934>     MOVEA.l A4,A1
0002AACA <AmiBlitz3.ab3@11935>     MOVEA.l (A4),A4
0002AACC <AmiBlitz3.ab3@11936>     MOVEQ.l #$0C,D0
0002AAD2 <AmiBlitz3.ab3@11937>     MOVEA.l _execbase,A6
0002AAD8 <AmiBlitz3.ab3@11938>     MOVE.l mempool,a0
0002AADC <AmiBlitz3.ab3@11939>     JSR _FreePooled(A6)
0002AAE0 <AmiBlitz3.ab3@11940> BRA.b freeprocvs__loop
0002AAE6 <AmiBlitz3.ab3@11943>   CLR.l firstglob                                          ;fix 2*aclearallvar called
0002AAEC <AmiBlitz3.ab3@11944>   CLR.l firstlocal
0002AAF2 <AmiBlitz3.ab3@11945>   CLR.l sharebase
0002AAF8 <AmiBlitz3.ab3@11946>   TST.l mempool2
0002AAFC <AmiBlitz3.ab3@11947>   BEQ freeprocvs__done_l10
0002AB02 <AmiBlitz3.ab3@11949>   MOVEA.l _execbase,A6
0002AB08 <AmiBlitz3.ab3@11950>   MOVE.l mempool2,a0
0002AB0E <AmiBlitz3.ab3@11951>   CLR.l mempool2
0002AB12 <AmiBlitz3.ab3@11952>   JSR _DeletePool(a6)
0002AB18 <AmiBlitz3.ab3@11955>   MOVE.l _execbase,a6
0002AB1E <AmiBlitz3.ab3@11956>   MOVE.l #$10000,d0
0002AB24 <AmiBlitz3.ab3@11957>   MOVE.l #80000,d1
0002AB26 <AmiBlitz3.ab3@11958>   MOVE.l d1,d2
0002AB2A <AmiBlitz3.ab3@11959>   JSR _CreatePool(a6)
0002AB30 <AmiBlitz3.ab3@11960>   MOVE.l d0,mempool2
0002AB32 <AmiBlitz3.ab3@11961> RTS
0002AB36 <AmiBlitz3.ab3@11965>   CMPA.w #$0,A3
0002AB3A <AmiBlitz3.ab3@11966>    BEQ.w freevars__done
0002AB3C <AmiBlitz3.ab3@11967>   MOVEA.l A3,A1
0002AB3E <AmiBlitz3.ab3@11968>   MOVEA.l (A3),A3
0002AB40 <AmiBlitz3.ab3@11969>   MOVEQ.l #$00,D0
0002AB44 <AmiBlitz3.ab3@11970>   MOVE.b $E(A1),D0
0002AB4A <AmiBlitz3.ab3@11971>   MOVEA.l _execbase,A6
0002AB50 <AmiBlitz3.ab3@11972>   MOVE.l mempool2,a0
0002AB54 <AmiBlitz3.ab3@11973>   JSR _FreePooled(A6)
0002AB58 <AmiBlitz3.ab3@11974> BRA.w freevars
0002AB5C <AmiBlitz3.ab3@11977>     CMPA.w #$0,A3
0002AB60 <AmiBlitz3.ab3@11978>      BEQ.w freevars__done
0002AB62 <AmiBlitz3.ab3@11979>     MOVEA.l A3,A1
0002AB64 <AmiBlitz3.ab3@11980>     MOVEA.l (A3),A3
0002AB66 <AmiBlitz3.ab3@11981>     MOVEQ.l #$00,D0
0002AB6A <AmiBlitz3.ab3@11982>     MOVE.b $E+4(A1),D0
0002AB70 <AmiBlitz3.ab3@11983>     MOVEA.l _execbase,A6
0002AB76 <AmiBlitz3.ab3@11984>     MOVE.l mempool2,a0
0002AB7A <AmiBlitz3.ab3@11985>     JSR _FreePooled(A6)
0002AB7E <AmiBlitz3.ab3@11986> BRA.w freevarsb
0002AB80 <AmiBlitz3.ab3@11989> RTS
0002AB86 <AmiBlitz3.ab3@11993>   MOVEA.l currentlabeladdr,A0
0002AB8C <AmiBlitz3.ab3@11994>   MOVE.l a0,lastlabel
0002AB8E <AmiBlitz3.ab3@11995>   MOVEA.l (A0),A2
0002AB90 <AmiBlitz3.ab3@11996>   CLR.l (A0)
0002AB96 <AmiBlitz3.ab3@11997>   MOVEA.l _execbase,A6
0002AB9A <AmiBlitz3.ab3@12000>   CMPA.w #$0,A2
0002AB9E <AmiBlitz3.ab3@12001>    BEQ.w clearlabels__done
0002ABA2 <AmiBlitz3.ab3@12002>   MOVE.l $4(A2),D0
0002ABA6 <AmiBlitz3.ab3@12003>   BTST #$0,D0
0002ABAA <AmiBlitz3.ab3@12004>    BNE.w clearlabels__skip
0002ABAC <AmiBlitz3.ab3@12005>   MOVEA.l D0,A3
0002ABB0 <AmiBlitz3.ab3@12008>     CMPA.w #$0,A3
0002ABB4 <AmiBlitz3.ab3@12009>      BEQ.w clearlabels__skip
0002ABB6 <AmiBlitz3.ab3@12010>     MOVEA.l A3,A1
0002ABB8 <AmiBlitz3.ab3@12011>     MOVEA.l (A3),A3
0002ABBA <AmiBlitz3.ab3@12012>     MOVEQ.l #$0C+2,D0                                      ;cancel fix
0002ABC0 <AmiBlitz3.ab3@12013>     MOVE.l mempool,a0
0002ABC4 <AmiBlitz3.ab3@12014>     JSR _FreePooled(A6)
0002ABC8 <AmiBlitz3.ab3@12015> BRA.w clearlabels__loop2
0002ABCA <AmiBlitz3.ab3@12018>   MOVEQ.l #$00,D0
0002ABCE <AmiBlitz3.ab3@12019>   MOVE.b $12(A2),D0
0002ABD0 <AmiBlitz3.ab3@12020>   MOVEA.l A2,A1
0002ABD2 <AmiBlitz3.ab3@12021>   MOVEA.l (A2),A2
0002ABD8 <AmiBlitz3.ab3@12022>   MOVE.l mempool2,a0
0002ABDC <AmiBlitz3.ab3@12024> BRA.w clearlabels__loop
0002ABDE <AmiBlitz3.ab3@12027> RTS
0002ABE4 <AmiBlitz3.ab3@12031>   MOVEA.l firstpend,A3
0002ABEA <AmiBlitz3.ab3@12032>   CLR.l firstpend
0002ABF0 <AmiBlitz3.ab3@12033>   MOVEA.l _execbase,A6
0002ABF4 <AmiBlitz3.ab3@12036>     CMPA.w #$0,A3
0002ABF8 <AmiBlitz3.ab3@12037>      BEQ.w freepends__done
0002ABFA <AmiBlitz3.ab3@12038>     MOVEA.l A3,A1
0002ABFC <AmiBlitz3.ab3@12039>     MOVEQ.l #$08,D0
0002ABFE <AmiBlitz3.ab3@12040>     MOVEA.l (A3),A3
0002AC04 <AmiBlitz3.ab3@12041>     MOVE.l mempool,a0
0002AC08 <AmiBlitz3.ab3@12042>     JSR _FreePooled(A6)
0002AC0C <AmiBlitz3.ab3@12043> BRA.w fpnd2
0002AC0E <AmiBlitz3.ab3@12046> RTS
0002AC14 <AmiBlitz3.ab3@12050>   MOVEA.l firstproc,A2
0002AC1A <AmiBlitz3.ab3@12051>   CLR.l firstproc
0002AC20 <AmiBlitz3.ab3@12052>   MOVEA.l _execbase,A6
0002AC24 <AmiBlitz3.ab3@12055>     CMPA.w #$0,A2
0002AC28 <AmiBlitz3.ab3@12056>      BEQ.w clearfunctionlist__done
0002AC2A <AmiBlitz3.ab3@12057>     MOVEA.l A2,A1
0002AC2C <AmiBlitz3.ab3@12058>     MOVEA.l (A2),A2
0002AC2E <AmiBlitz3.ab3@12059>     MOVEQ.l #$00,D0
0002AC32 <AmiBlitz3.ab3@12060>     MOVE.b $20+#funcentry_extend(A1),D0
0002AC38 <AmiBlitz3.ab3@12061>     MOVE.l mempool2,a0
0002AC3C <AmiBlitz3.ab3@12062>     JSR _FreePooled(A6)
0002AC40 <AmiBlitz3.ab3@12063> BRA.w clearfunctionlist__loop
0002AC42 <AmiBlitz3.ab3@12066> RTS
0002AC46 <AmiBlitz3.ab3@12070>   CMPA.w #$0,A2
0002AC4A <AmiBlitz3.ab3@12071>    BEQ.w freetypes__done
0002AC4E <AmiBlitz3.ab3@12072>   MOVEA.l $4(A2),A3
0002AC52 <AmiBlitz3.ab3@12073>   CMPA.w #$FF,A3
0002AC56 <AmiBlitz3.ab3@12074>    BEQ.w freetypes__noway
0002AC5A <AmiBlitz3.ab3@12078>    BSR.w freevars
0002AC5C <AmiBlitz3.ab3@12081>     MOVEA.l A2,A1
0002AC5E <AmiBlitz3.ab3@12082>     MOVEA.l (A2),A2
0002AC60 <AmiBlitz3.ab3@12083>     MOVEQ.l #$00,D0
0002AC64 <AmiBlitz3.ab3@12084>     MOVE.b $A(A1),D0
0002AC6A <AmiBlitz3.ab3@12085>     MOVEA.l _execbase,A6
0002AC70 <AmiBlitz3.ab3@12086>     MOVE.l mempool2,a0
0002AC74 <AmiBlitz3.ab3@12087>     JSR _FreePooled(A6)
0002AC78 <AmiBlitz3.ab3@12088> BRA.w freetypes
0002AC7A <AmiBlitz3.ab3@12091> RTS
0002AC80 <AmiBlitz3.ab3@12095>   JSR uselib2
0002AC86 <AmiBlitz3.ab3@12097>   CLR.w notshared
0002AC8C <AmiBlitz3.ab3@12098>   CLR.w varmode
0002AC92 <AmiBlitz3.ab3@12099>   MOVE.w proceduremode,D1
0002AC96 <AmiBlitz3.ab3@12100>    BNE.w JL_0_8F4E
0002AC9C <AmiBlitz3.ab3@12101>   LEA varbase,A2
0002ACA2 <AmiBlitz3.ab3@12102>   LEA ptr_parameterstore,a0
0002ACA6 <AmiBlitz3.ab3@12103>   CMP.b #$22,(a0)
0002ACAA <AmiBlitz3.ab3@12104>   BNE JL_0_8E5E
0002ACAC <AmiBlitz3.ab3@12105>   MOVEQ #0,d0
0002ACB2 <AmiBlitz3.ab3@12106> JMP error
0002ACB6 <AmiBlitz3.ab3@12109>   BSR.w findvariable
0002ACBA <AmiBlitz3.ab3@12112>   BNE.w JL_0_8E7E
0002ACC0 <AmiBlitz3.ab3@12115>   MOVE.b flagmask+1,D1
0002ACC4 <AmiBlitz3.ab3@12116>   MOVE.b $7(A2),D3
0002ACC6 <AmiBlitz3.ab3@12117>   EOR.b D3,D1
0002ACCA <AmiBlitz3.ab3@12118>   BNE 'l2
0002ACD2 <AmiBlitz3.ab3@12119>   CMP.b #2,nowdeclare
0002ACD6 <AmiBlitz3.ab3@12120>   BEQ errormsg_declaredtwice
0002ACDA <AmiBlitz3.ab3@12121> BRA.w JL_0_8FA8
0002ACDE <AmiBlitz3.ab3@12124>   BSR.w findlab
0002ACE2 <AmiBlitz3.ab3@12125>   BNE 'l1
0002ACEA <AmiBlitz3.ab3@12126>   CMP.b #2,nowdeclare
0002ACEE <AmiBlitz3.ab3@12127>   BEQ errormsg_declaredtwice
0002ACF0 <AmiBlitz3.ab3@12128>   CMP.w d0,d0
0002ACF4 <AmiBlitz3.ab3@12131> BRA.w JL_0_8E62
0002ACF6 <AmiBlitz3.ab3@12134>    MOVE.l a2,-(a7)
0002ACFC <AmiBlitz3.ab3@12135>    LEA sharebase,a2
0002ACFE <AmiBlitz3.ab3@12136>    MOVEQ #$f+4,d7
0002AD02 <AmiBlitz3.ab3@12137>    BSR.w findlab
0002AD06 <AmiBlitz3.ab3@12138>    BEQ 'l2x
0002AD08 <AmiBlitz3.ab3@12139>    MOVE.l (a7)+,a2
0002AD0C <AmiBlitz3.ab3@12140> BRA 'cont
0002AD0E <AmiBlitz3.ab3@12143>   ADDQ.l #4,a7
0002AD14 <AmiBlitz3.ab3@12144>   CLR.w varmode
0002AD1A <AmiBlitz3.ab3@12145>   MOVE.b flagmask+1,D1
0002AD1E <AmiBlitz3.ab3@12146>   MOVE.b $7(A2),D3
0002AD20 <AmiBlitz3.ab3@12147>   EOR.b D3,D1
0002AD24 <AmiBlitz3.ab3@12148>   BNE vardeclareerr
0002AD28 <AmiBlitz3.ab3@12149> BRA JL_0_8FA8
0002AD2E <AmiBlitz3.ab3@12152>    MOVE.w nonew,D1
0002AD32 <AmiBlitz3.ab3@12153>    BNE.w nonewerr
0002AD38 <AmiBlitz3.ab3@12154>    TST.b nowdeclare
0002AD3C <AmiBlitz3.ab3@12155>    BNE 'l2
0002AD42 <AmiBlitz3.ab3@12156>    TST.b declare2
0002AD46 <AmiBlitz3.ab3@12157>    BEQ 'l1
0002AD4A <AmiBlitz3.ab3@12158>    CMP.b #$2e,d0
0002AD4E <AmiBlitz3.ab3@12159>    BEQ 'l2
0002AD52 <AmiBlitz3.ab3@12160>    CMP.b #"$",d0
0002AD56 <AmiBlitz3.ab3@12161>    BEQ 'l2
0002AD5A <AmiBlitz3.ab3@12162> BRA vardeclareerr
0002AD60 <AmiBlitz3.ab3@12165>   TST.b declare
0002AD64 <AmiBlitz3.ab3@12166>    BNE vardeclareerr
0002AD68 <AmiBlitz3.ab3@12169>   BSR.w addvariable
0002AD6E <AmiBlitz3.ab3@12170>   NOT.w notshared
0002AD70 <AmiBlitz3.ab3@12171>   MOVEA.l A2,A3
0002AD76 <AmiBlitz3.ab3@12172>   MOVEA.l defaulttype,A2
0002AD7A <AmiBlitz3.ab3@12173>   CMP.w #$2E,D0
0002AD7E <AmiBlitz3.ab3@12174>    BEQ.w JL_0_8EB8
0002AD82 <AmiBlitz3.ab3@12175>   CMP.w #$24,D0
0002AD86 <AmiBlitz3.ab3@12176>    BNE.w JL_0_8ECA
0002AD8C <AmiBlitz3.ab3@12177>   LEA newtype_string,A2
0002AD90 <AmiBlitz3.ab3@12178>    BSR.w get1bytemain
0002AD94 <AmiBlitz3.ab3@12179> BRA.w JL_0_8ECA
0002AD9A <AmiBlitz3.ab3@12182> JMP JUMP_notypeerr
0002AD9E <AmiBlitz3.ab3@12185>    BSR.w getparameter2
0002ADA4 <AmiBlitz3.ab3@12186>   LEA newtypebase,A2
0002ADA8 <AmiBlitz3.ab3@12187>    BSR.w findtype
0002ADAC <AmiBlitz3.ab3@12188>    BNE.w notypeerr3
0002ADB2 <AmiBlitz3.ab3@12191>   CMPA.l #newtype_byte,A2
0002ADB6 <AmiBlitz3.ab3@12192>    BEQ.w JL_0_8EECb
0002ADBC <AmiBlitz3.ab3@12193>   MOVE.w varmode,D1
0002ADC0 <AmiBlitz3.ab3@12194>    BNE.w JL_0_8EE4b
0002ADC6 <AmiBlitz3.ab3@12195>   ADDQ.w #1,globalvarpointer
0002ADCE <AmiBlitz3.ab3@12198>   BCLR #$0,globalvarpointer+1
0002ADD2 <AmiBlitz3.ab3@12201>   MOVE.l A2,$A(A3)
0002ADDA <AmiBlitz3.ab3@12202>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002ADDC <AmiBlitz3.ab3@12204>   MOVEQ.l #$04,D1
0002ADE4 <AmiBlitz3.ab3@12205>   BTST #$0,flagmask+1
0002ADE8 <AmiBlitz3.ab3@12206>    BNE.w JL_0_8F22b
0002ADF0 <AmiBlitz3.ab3@12207>   BTST #$1,flagmask+1
0002ADF4 <AmiBlitz3.ab3@12208>    BNE.w JL_0_8F22b
0002ADFC <AmiBlitz3.ab3@12209>   CMPI.l #$100,$4(A2)
0002AE00 <AmiBlitz3.ab3@12210>    BCC.w JL_0_8F22b
0002AE04 <AmiBlitz3.ab3@12211>   MOVE.w $8(A2),D1
0002AE0A <AmiBlitz3.ab3@12214>   TST.w varmode
0002AE0E <AmiBlitz3.ab3@12215> BRA.w JL_0_8F3E
0002AE12 <AmiBlitz3.ab3@12224>   BSR.w getparameter2
0002AE18 <AmiBlitz3.ab3@12225>   LEA newtypebase,A2
0002AE1C <AmiBlitz3.ab3@12226>    BSR.w findtype
0002AE20 <AmiBlitz3.ab3@12227>    BNE.w notypeerr
0002AE26 <AmiBlitz3.ab3@12230>   CMPA.l #newtype_byte,A2
0002AE2A <AmiBlitz3.ab3@12231>    BEQ.w JL_0_8EEC
0002AE30 <AmiBlitz3.ab3@12232>   MOVE.w varmode,D1
0002AE34 <AmiBlitz3.ab3@12233>    BNE.w JL_0_8EE4
0002AE3A <AmiBlitz3.ab3@12234>   ADDQ.w #1,globalvarpointer
0002AE42 <AmiBlitz3.ab3@12237>   BCLR #$0,globalvarpointer+1
0002AE46 <AmiBlitz3.ab3@12240>   MOVE.l A2,$A(A3)
0002AE4E <AmiBlitz3.ab3@12241>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002AE50 <AmiBlitz3.ab3@12242>   MOVEQ.l #$04,D1
0002AE58 <AmiBlitz3.ab3@12243>   BTST #$0,flagmask+1
0002AE5C <AmiBlitz3.ab3@12244>    BNE.w JL_0_8F22
0002AE64 <AmiBlitz3.ab3@12245>   BTST #$1,flagmask+1
0002AE68 <AmiBlitz3.ab3@12246>    BNE.w JL_0_8F22
0002AE70 <AmiBlitz3.ab3@12247>   CMPI.l #$100,$4(A2)
0002AE74 <AmiBlitz3.ab3@12248>    BCC.w JL_0_8F22
0002AE78 <AmiBlitz3.ab3@12249>   MOVE.w $8(A2),D1
0002AE7E <AmiBlitz3.ab3@12252>   TST.w varmode
0002AE82 <AmiBlitz3.ab3@12253>    BEQ.w JL_0_8F3E
0002AE84 <AmiBlitz3.ab3@12254>   NEG.w D1
0002AE8A <AmiBlitz3.ab3@12255>   ADD.w D1,globalvarpointer
0002AE92 <AmiBlitz3.ab3@12256>   MOVE.w globalvarpointer,$4(A3)
0002AE94 <AmiBlitz3.ab3@12257> RTS
0002AE9C <AmiBlitz3.ab3@12260>   MOVE.w globalvarpointer,$4(A3)
0002AEA2 <AmiBlitz3.ab3@12261>   ADD.w D1,globalvarpointer
0002AEA4 <AmiBlitz3.ab3@12262> RTS
0002AEAA <AmiBlitz3.ab3@12266>   LEA firstglob,A2
0002AEAE <AmiBlitz3.ab3@12267>    BSR.w findvariable2
0002AEB2 <AmiBlitz3.ab3@12270>   BNE.w JL_0_8F74
0002AEB8 <AmiBlitz3.ab3@12271>   MOVE.b flagmask+1,D1
0002AEBC <AmiBlitz3.ab3@12272>   MOVE.b $7(A2),D3
0002AEBE <AmiBlitz3.ab3@12273>   EOR.b D3,D1
0002AEC2 <AmiBlitz3.ab3@12274>    BEQ.w JL_0_8FA8
0002AEC6 <AmiBlitz3.ab3@12275>    BSR.w findlab
0002AECA <AmiBlitz3.ab3@12276> BRA.w JL_0_8F58
0002AED2 <AmiBlitz3.ab3@12279>   MOVE.w #$FFFF,varmode
0002AED8 <AmiBlitz3.ab3@12280>   MOVE.w globalvarpointer,-(A7)
0002AEE2 <AmiBlitz3.ab3@12281>   MOVE.w locvaroff,globalvarpointer
0002AEE8 <AmiBlitz3.ab3@12282>   LEA firstlocal,A2
0002AEF0 <AmiBlitz3.ab3@12283>   MOVE.b #1,newvariable
0002AEF4 <AmiBlitz3.ab3@12284>    BSR.w JL_0_8E5E
0002AEFA <AmiBlitz3.ab3@12285>   CLR.b newvariable
0002AF04 <AmiBlitz3.ab3@12286>   MOVE.w globalvarpointer,locvaroff
0002AF0A <AmiBlitz3.ab3@12287>   MOVE.w (A7)+,globalvarpointer
0002AF0C <AmiBlitz3.ab3@12288> RTS
0002AF0E <AmiBlitz3.ab3@12291>   MOVEA.l A2,A3
0002AF12 <AmiBlitz3.ab3@12292>   CMP.w #$2E,D0
0002AF16 <AmiBlitz3.ab3@12293>    BEQ.w JL_0_8FCE
0002AF1A <AmiBlitz3.ab3@12294>   CMP.w #$24,D0
0002AF1E <AmiBlitz3.ab3@12295>    BNE.w JL_0_8FE8
0002AF26 <AmiBlitz3.ab3@12296>   CMPI.l #newtype_string,$A(A3)
0002AF2A <AmiBlitz3.ab3@12297>    BNE.w rongtypeerr
0002AF2E <AmiBlitz3.ab3@12298>    BSR.w get1bytemain
0002AF32 <AmiBlitz3.ab3@12299> BRA.w JL_0_8FE8
0002AF36 <AmiBlitz3.ab3@12302>    BSR.w getparameter2
0002AF3C <AmiBlitz3.ab3@12303>   LEA newtypebase,A2
0002AF40 <AmiBlitz3.ab3@12304>    BSR.w findtype
0002AF44 <AmiBlitz3.ab3@12305>    BNE.w notypeerr
0002AF48 <AmiBlitz3.ab3@12306>   CMPA.l $A(A3),A2
0002AF4C <AmiBlitz3.ab3@12307>    BNE.w rongtypeerr
0002AF54 <AmiBlitz3.ab3@12309>   BTST #$0,flagmask+1
0002AF58 <AmiBlitz3.ab3@12310>    BEQ.w JL_0_8FFE
0002AF5E <AmiBlitz3.ab3@12311>   BTST #$0,$7(A3)
0002AF62 <AmiBlitz3.ab3@12312>    BEQ.w pointerr
0002AF66 <AmiBlitz3.ab3@12315>   MOVEA.l $A(A3),A2
0002AF68 <AmiBlitz3.ab3@12316> RTS
0002AF6A <AmiBlitz3.ab3@12320>    TST.l D3                                                ;newtype >32kb  .w to .l
0002AF6E <AmiBlitz3.ab3@12321>    BEQ.w JL_0_9042
0002AF78 <AmiBlitz3.ab3@12322>    MOVE.l destpointer,loada
0002AF7C <AmiBlitz3.ab3@12325> BRA JL_0_9032
0002AF80 <AmiBlitz3.ab3@12327>   CMP.w #$9,D3                                             ;_addq_arrays
0002AF84 <AmiBlitz3.ab3@12328>    BCC.w JL_0_9032
0002AF8A <AmiBlitz3.ab3@12329>   MOVE.w d3,arrayoffset
0002AF8E <AmiBlitz3.ab3@12330>   ANDI.w #$7,D3
0002AF90 <AmiBlitz3.ab3@12331>   LSL.w #8,D3
0002AF92 <AmiBlitz3.ab3@12332>   LSL.w #1,D3
0002AF9A <AmiBlitz3.ab3@12333>   ANDI.w #$F1FF,addqa0
0002AFA0 <AmiBlitz3.ab3@12334>   OR.w D3,addqa0
0002AFA6 <AmiBlitz3.ab3@12335>   MOVE.w addqa0,D1
0002AFAA <AmiBlitz3.ab3@12336> BRA.w writeword
0002AFB0 <AmiBlitz3.ab3@12339>   CMP.l #$7fff,d3                                          ;>32kb newtypes
0002AFB4 <AmiBlitz3.ab3@12340>   BGT longoffset
0002AFBA <AmiBlitz3.ab3@12341>   MOVE.w D3,leaa0a0+2
0002AFC0 <AmiBlitz3.ab3@12342>   MOVE.w d3,arrayoffset
0002AFC6 <AmiBlitz3.ab3@12343>   MOVE.l leaa0a0,D1
0002AFCA <AmiBlitz3.ab3@12344>   BSR.w writelong
0002AFCC <AmiBlitz3.ab3@12347> RTS
0002AFD0 <AmiBlitz3.ab3@12350>    MOVE.w #$d5fc,d1
0002AFD4 <AmiBlitz3.ab3@12351>    BSR writeword
0002AFD6 <AmiBlitz3.ab3@12352>    MOVE.l d3,d1
0002AFDA <AmiBlitz3.ab3@12353>    BSR.w writelong
0002AFDC <AmiBlitz3.ab3@12354> RTS
0002AFE0 <AmiBlitz3.ab3@12358>   Dc.w $b0ad,0000                                          ;cmp.l $0(A5),D0    ;nooptimize
0002AFE4 <AmiBlitz3.ab3@12361>    BCS.w arrchk3                                           
0002AFEA <AmiBlitz3.ab3@12362>    JSR $20000                                              ;jsr 0
0002AFF0 <AmiBlitz3.ab3@12368>   TST.b fast
0002AFF4 <AmiBlitz3.ab3@12369>   BEQ 'l1
0002AFF6 <AmiBlitz3.ab3@12370>    MOVEQ #0,d1                                             ;faster arrays
0002AFFC <AmiBlitz3.ab3@12371>    MOVE.w regnum,d2
0002AFFE <AmiBlitz3.ab3@12372>    MOVE.w d2,d1
0002B000 <AmiBlitz3.ab3@12373>    LSL.w #8,d1
0002B002 <AmiBlitz3.ab3@12374>    LSL.w #4,d1
0002B004 <AmiBlitz3.ab3@12375>    ADD.w d2,d1
0002B00A <AmiBlitz3.ab3@12376>    OR.l #$4c2d0000,d1
0002B010 <AmiBlitz3.ab3@12377>    TST.w varmode
0002B014 <AmiBlitz3.ab3@12378>    BEQ 'l1a
0002B018 <AmiBlitz3.ab3@12379>    BCLR #16,d1
0002B01C <AmiBlitz3.ab3@12382>    BSR writelong
0002B020 <AmiBlitz3.ab3@12383>    MOVE.w $4(A7),D1
0002B024 <AmiBlitz3.ab3@12384>    BSR.w writeword
0002B02A <AmiBlitz3.ab3@12385>    MOVE.w regnum,D1
0002B02C <AmiBlitz3.ab3@12386>   SUBQ.w #1,D1
0002B02E <AmiBlitz3.ab3@12387>   LSL.w #8,D1
0002B030 <AmiBlitz3.ab3@12388>   LSL.w #1,D1
0002B034 <AmiBlitz3.ab3@12389>   ORI.w #$D080,D1
0002B03A <AmiBlitz3.ab3@12390>   OR.w regnum,D1
0002B03E <AmiBlitz3.ab3@12391>    BSR.w writeword
0002B040 <AmiBlitz3.ab3@12392> RTS
0002B046 <AmiBlitz3.ab3@12395>   MOVE.w regnum,D2
0002B04A <AmiBlitz3.ab3@12396>   MOVE.w arrmul1(PC),D1
0002B04C <AmiBlitz3.ab3@12397>   OR.w D2,D1
0002B04E <AmiBlitz3.ab3@12398>   SUBQ.w #1,D1
0002B052 <AmiBlitz3.ab3@12399>    BSR.w writeword
0002B056 <AmiBlitz3.ab3@12400>   MOVE.w arrmul2(PC),D1
0002B058 <AmiBlitz3.ab3@12401>   OR.w D2,D1
0002B05A <AmiBlitz3.ab3@12402>   MOVE.w D2,D3
0002B05C <AmiBlitz3.ab3@12403>   SUBQ.w #1,D3
0002B05E <AmiBlitz3.ab3@12404>   LSL.w #8,D3
0002B060 <AmiBlitz3.ab3@12405>   LSL.w #1,D3
0002B062 <AmiBlitz3.ab3@12406>   OR.w D3,D1
0002B066 <AmiBlitz3.ab3@12407>    BSR.w writeword
0002B06A <AmiBlitz3.ab3@12408>   MOVE.w arrmul3(PC),D1
0002B06C <AmiBlitz3.ab3@12409>   MOVE.w D2,D3
0002B06E <AmiBlitz3.ab3@12410>   LSL.w #8,D3
0002B070 <AmiBlitz3.ab3@12411>   LSL.w #1,D3
0002B072 <AmiBlitz3.ab3@12412>   OR.w D3,D1
0002B076 <AmiBlitz3.ab3@12413>    BSR.w pokewda5s
0002B07A <AmiBlitz3.ab3@12414>   MOVE.w $4(A7),D1
0002B07C <AmiBlitz3.ab3@12415>   ADDQ.w #2,D1
0002B080 <AmiBlitz3.ab3@12416>    BSR.w writeword
0002B084 <AmiBlitz3.ab3@12417>   MOVE.w arrmul4(PC),D1
0002B086 <AmiBlitz3.ab3@12418>   MOVE.w D2,D3
0002B088 <AmiBlitz3.ab3@12419>   SUBQ.w #1,D3
0002B08A <AmiBlitz3.ab3@12420>   LSL.w #8,D3
0002B08C <AmiBlitz3.ab3@12421>   LSL.w #1,D3
0002B08E <AmiBlitz3.ab3@12422>   OR.w D3,D1
0002B092 <AmiBlitz3.ab3@12423>    BSR.w pokewda5s
0002B096 <AmiBlitz3.ab3@12424>   MOVE.w $4(A7),D1
0002B09A <AmiBlitz3.ab3@12425>    BSR.w writeword
0002B09E <AmiBlitz3.ab3@12426>   MOVE.w arrmul5(PC),D1
0002B0A0 <AmiBlitz3.ab3@12427>   OR.w D2,D1
0002B0A2 <AmiBlitz3.ab3@12428>   SUBQ.w #1,D1
0002B0A6 <AmiBlitz3.ab3@12429>    BSR.w writeword
0002B0AA <AmiBlitz3.ab3@12430>   MOVE.w arrmul6(PC),D1
0002B0AC <AmiBlitz3.ab3@12431>   OR.w D2,D1
0002B0AE <AmiBlitz3.ab3@12432>   SUBQ.w #1,D1
0002B0B2 <AmiBlitz3.ab3@12433>    BSR.w writeword
0002B0B6 <AmiBlitz3.ab3@12434>   MOVE.w arrmul7(PC),D1
0002B0B8 <AmiBlitz3.ab3@12435>   OR.w D2,D1
0002B0BA <AmiBlitz3.ab3@12436>   SUBQ.w #1,D1
0002B0BC <AmiBlitz3.ab3@12437>   MOVE.w D2,D3
0002B0BE <AmiBlitz3.ab3@12438>   LSL.w #8,D3
0002B0C0 <AmiBlitz3.ab3@12439>   LSL.w #1,D3
0002B0C2 <AmiBlitz3.ab3@12440>   OR.w D3,D1
0002B0C6 <AmiBlitz3.ab3@12441>    BSR.w writeword
0002B0CA <AmiBlitz3.ab3@12442>   MOVE.w arrmul8(PC),D1
0002B0CC <AmiBlitz3.ab3@12443>   MOVE.w D2,D3
0002B0CE <AmiBlitz3.ab3@12444>   SUBQ.w #1,D3
0002B0D0 <AmiBlitz3.ab3@12445>   LSL.w #8,D3
0002B0D2 <AmiBlitz3.ab3@12446>   LSL.w #1,D3
0002B0D4 <AmiBlitz3.ab3@12447>   OR.w D3,D1
0002B0D8 <AmiBlitz3.ab3@12448>    BSR.w writeword
0002B0DE <AmiBlitz3.ab3@12449>   MOVE.w regnum,D1
0002B0E0 <AmiBlitz3.ab3@12450>   SUBQ.w #1,D1
0002B0E2 <AmiBlitz3.ab3@12451>   LSL.w #8,D1
0002B0E4 <AmiBlitz3.ab3@12452>   LSL.w #1,D1
0002B0E8 <AmiBlitz3.ab3@12453>   ORI.w #$D080,D1
0002B0EE <AmiBlitz3.ab3@12454>   OR.w regnum,D1
0002B0F2 <AmiBlitz3.ab3@12455> BRA.w writeword
0002B0F4 <AmiBlitz3.ab3@12463> arrmul1:   MOVE.l d0,-(a7)                                ;write array access
0002B0F6 <AmiBlitz3.ab3@12464> arrmul2:   MOVE  d0,d0
0002B0FA <AmiBlitz3.ab3@12465> arrmul3:   MULU 0(a5),d0                                  ;mulu   x+2(a5),d1  ;lo*lo
0002B0FE <AmiBlitz3.ab3@12466> arrmul4:   MULU 0(a5),d0                                  ;mulu   x(a5),d0    ;hi*lo
0002B100 <AmiBlitz3.ab3@12468> arrmul5:   SWAP d0
0002B102 <AmiBlitz3.ab3@12469> arrmul6:   CLR d0
0002B104 <AmiBlitz3.ab3@12470> arrmul7:   ADD.l d0,d0
0002B106 <AmiBlitz3.ab3@12471> arrmul8:   MOVE.l (a7)+,d0
0002B10A <AmiBlitz3.ab3@12476> listcode1:  Dc.b $24,$6D :              Dc.b $00,$00       ;MOVEA.L $0000(A5),A2      ;pointer to start of array data
0002B10E <AmiBlitz3.ab3@12477> listcode2:  Dc.b $24,$6A,$FF,$E0                           ;MOVEA.L -$0020(A2),A2     ;pointer to current
0002B110 <AmiBlitz3.ab3@12478> listarfix:  Dc.b $50,$4A                                   ;ADDQ.W  #8,A2
0002B116 <AmiBlitz3.ab3@12496>   CLR.l lastoffset_org
0002B11C <AmiBlitz3.ab3@12497>   BTST #$1,$7(A3)
0002B120 <AmiBlitz3.ab3@12498>    BEQ.w calcvar__notarr
0002B126 <AmiBlitz3.ab3@12499>   MOVE.w notshared,D1
0002B12A <AmiBlitz3.ab3@12500>    BNE.w noarrerr
0002B12E <AmiBlitz3.ab3@12501>    BSR.w get1bytemain
0002B132 <AmiBlitz3.ab3@12502>   CMP.w #$29,D0
0002B136 <AmiBlitz3.ab3@12503>    BNE.w calcvar__notalist
0002B13C <AmiBlitz3.ab3@12504>   BTST #$0,$6(A3)
0002B140 <AmiBlitz3.ab3@12505>    BEQ.w nolisterr
0002B148 <AmiBlitz3.ab3@12506>   MOVE.w $4(A3),listcode1+2
0002B14C <AmiBlitz3.ab3@12507>   MOVE.l listcode1(PC),D1
0002B150 <AmiBlitz3.ab3@12508>    BSR.w pokela5s
0002B154 <AmiBlitz3.ab3@12509>   MOVE.l listcode2(PC),D1
0002B158 <AmiBlitz3.ab3@12510>    BSR.w writelong
0002B15E <AmiBlitz3.ab3@12511>   TST.b debugmode
0002B162 <AmiBlitz3.ab3@12512>    BEQ.w calcvar__nolrerr
0002B164 <AmiBlitz3.ab3@12516>   MOVE.l A2,-(A7)
0002B168 <AmiBlitz3.ab3@12517>   MOVE.w #$C315,D1
0002B16C <AmiBlitz3.ab3@12518>    BSR.w Atokejsr
0002B16E <AmiBlitz3.ab3@12519>   MOVEA.l (A7)+,A2
0002B172 <AmiBlitz3.ab3@12522>    MOVE.w listarfix(PC),D1                                 ;addq #8,a2
0002B176 <AmiBlitz3.ab3@12524>    BSR.w writeword
0002B17A <AmiBlitz3.ab3@12525> BRA.w calcvar__normalar
0002B17C <AmiBlitz3.ab3@12528> calcvar__listoff:   Ds.w 1
0002B182 <AmiBlitz3.ab3@12532>   CLR.w calcvar__listoff
0002B188 <AmiBlitz3.ab3@12533>   BTST #$0,$6(A3)
0002B18C <AmiBlitz3.ab3@12534>    BEQ.w calcvar__knop
0002B194 <AmiBlitz3.ab3@12535>   MOVE.w #$0008,calcvar__listoff                            ;adjust size of one element if list.
0002B198 <AmiBlitz3.ab3@12538>   MOVEM.l A2-A3,-(A7)
0002B19E <AmiBlitz3.ab3@12539>   MOVE.w varmode,-(A7)
0002B1A2 <AmiBlitz3.ab3@12540>   MOVE.w $8(A3),-(A7)                                       ;number of dims
0002B1A6 <AmiBlitz3.ab3@12541>   MOVE.w $4(A3),-(A7)                                       ;varoff
0002B1A8 <AmiBlitz3.ab3@12542>   MOVE.l A2,-(A7)
0002B1AE <AmiBlitz3.ab3@12543>   MOVE.w flagmask,-(A7)
0002B1B8 <AmiBlitz3.ab3@12545>   MOVE.w oldqflag,instringon
0002B1BE <AmiBlitz3.ab3@12546>   MOVEA.l lastsourcepos,A5
0002B1C2 <AmiBlitz3.ab3@12547>    BSR.w arreval
0002B1C8 <AmiBlitz3.ab3@12548>   MOVE.w (A7)+,flagmask
0002B1D0 <AmiBlitz3.ab3@12549>   MOVE.w $8(A7),varmode
0002B1D6 <AmiBlitz3.ab3@12550>   TST.b debugmode
0002B1DA <AmiBlitz3.ab3@12551>    BEQ.w calcvar__noszchk
0002B1DC <AmiBlitz3.ab3@12555>   MOVEA.l (A7)+,A2
0002B1DE <AmiBlitz3.ab3@12556>   MOVEQ.l #$04,D1
0002B1E6 <AmiBlitz3.ab3@12557>   BTST #$0,flagmask+1                                      ;pointer?
0002B1EA <AmiBlitz3.ab3@12558>    BNE.b calcvar__domul                                          ;yes, then use 4 byte mul...
0002B1EE <AmiBlitz3.ab3@12559>   MOVE.w $8(A2),D1
0002B1F2 <AmiBlitz3.ab3@12562>   ADD.w calcvar__listoff(PC),D1
0002B1F6 <AmiBlitz3.ab3@12563>   BSR.w JL_0_B6DE
0002B1FC <AmiBlitz3.ab3@12564>   ADDQ.w #1,regnum
0002B1FE <AmiBlitz3.ab3@12567>   ADDQ.w #4,(A7)
0002B202 <AmiBlitz3.ab3@12568>   TST.w $4(A7)
0002B206 <AmiBlitz3.ab3@12569>    BEQ.w calcvar__isglob
0002B208 <AmiBlitz3.ab3@12570>   SUBQ.w #8,(A7)                                           ;range check local array
0002B20E <AmiBlitz3.ab3@12573>   TST.b debugmode
0002B212 <AmiBlitz3.ab3@12574>    BEQ.w calcvar__noer1
0002B218 <AmiBlitz3.ab3@12575>   MOVE.w regnum,D1
0002B21A <AmiBlitz3.ab3@12576>   SUBQ.w #1,D1
0002B21C <AmiBlitz3.ab3@12577>   LSL.w #8,D1
0002B21E <AmiBlitz3.ab3@12578>   LSL.w #1,D1
0002B222 <AmiBlitz3.ab3@12579>   OR.w zarrchk(PC),D1
0002B226 <AmiBlitz3.ab3@12580>    BSR.w pokewda5s                                         ;cmp.l x(a5),D regat
0002B228 <AmiBlitz3.ab3@12581>   MOVE.w (A7),D1
0002B22C <AmiBlitz3.ab3@12582>    BSR.w writeword
0002B230 <AmiBlitz3.ab3@12583>   MOVE.l arrchk2(PC),D1
0002B234 <AmiBlitz3.ab3@12584>    BSR.w writelong
0002B238 <AmiBlitz3.ab3@12585>   MOVE.w #$C309,D1
0002B23C <AmiBlitz3.ab3@12586>    BSR.w Atokejsr
0002B240 <AmiBlitz3.ab3@12589>   SUBQ.w #1,$2(A7)
0002B244 <AmiBlitz3.ab3@12590>    BEQ.w calcvar__ardone
0002B248 <AmiBlitz3.ab3@12591>   CMP.w #$2C,D0
0002B24C <AmiBlitz3.ab3@12592>    BNE.w syntaxerr
0002B252 <AmiBlitz3.ab3@12593>    TST.b fast
0002B256 <AmiBlitz3.ab3@12594>    BNE 'l1
0002B25A <AmiBlitz3.ab3@12595>    BSR.w arrevalchk
0002B25E <AmiBlitz3.ab3@12596> BRA 'l2
0002B262 <AmiBlitz3.ab3@12599>   BSR arreval
0002B26A <AmiBlitz3.ab3@12602>   MOVE.w $4(A7),varmode
0002B26E <AmiBlitz3.ab3@12603>   BSR.w JL_0_9052
0002B272 <AmiBlitz3.ab3@12604> BRA.w calcvar__arloop
0002B276 <AmiBlitz3.ab3@12608>   CMP.w #$29,D0
0002B27A <AmiBlitz3.ab3@12609>    BNE.w syntaxerr
0002B280 <AmiBlitz3.ab3@12610>   SUBQ.w #1,regnum
0002B282 <AmiBlitz3.ab3@12611>   ADDQ.w #6,A7
0002B286 <AmiBlitz3.ab3@12612>   MOVEM.l (A7)+,A2-A3
0002B28E <AmiBlitz3.ab3@12613>   MOVE.w $4(A3),movea5a0+2
0002B294 <AmiBlitz3.ab3@12614>   MOVE.l movea5a0,D1
0002B298 <AmiBlitz3.ab3@12615>    BSR.w pokela5s
0002B29E <AmiBlitz3.ab3@12616>   MOVE.w regnum,D1
0002B2A2 <AmiBlitz3.ab3@12617>   ORI.w #$D5C0,D1                                          ;add.l Dr,a2
0002B2A6 <AmiBlitz3.ab3@12618>    BSR.w writeword
0002B2AC <AmiBlitz3.ab3@12619>   BTST #$0,$6(A3)
0002B2B0 <AmiBlitz3.ab3@12620>    BEQ.w calcvar__normalar
0002B2B4 <AmiBlitz3.ab3@12624>   MOVE.w listarfix(PC),D1
0002B2B8 <AmiBlitz3.ab3@12625>    BSR.w writeword
0002B2BC <AmiBlitz3.ab3@12628>   BSR.w get1bytemain
0002B2C2 <AmiBlitz3.ab3@12632>   BTST #$0,$7(A3)
0002B2C6 <AmiBlitz3.ab3@12633>    BEQ.w calcvar__noppnt
0002B2CA <AmiBlitz3.ab3@12634>   CMP.w #$5C,D0
0002B2CE <AmiBlitz3.ab3@12635>    BNE.w calcvar__pmskip
0002B2D2 <AmiBlitz3.ab3@12636>   MOVE.w calcvar__pfix(PC),D1
0002B2D6 <AmiBlitz3.ab3@12637>    BSR.w writeword
0002B2DA <AmiBlitz3.ab3@12640>   MOVE.w #$8000,D2
0002B2DE <AmiBlitz3.ab3@12641> BRA.w calcvar__loopml
0002B2E2 <AmiBlitz3.ab3@12644>   MOVE.w #$C000,D2
0002B2E6 <AmiBlitz3.ab3@12645> BRA.w calcvar__loopml
0002B2E8 <AmiBlitz3.ab3@12649> calcvar__pfix:   Dc.b $24,$52                                   ;MOVEA.L (A2),A2
0002B2EC <AmiBlitz3.ab3@12654>   CMP.w #$28,D0
0002B2F0 <AmiBlitz3.ab3@12655>    BEQ.w noarrerr
0002B2F8 <AmiBlitz3.ab3@12656>   CMPI.l #$100,$4(A2)
0002B2FC <AmiBlitz3.ab3@12657>    BCS.w calcvar__simpvar
0002B302 <AmiBlitz3.ab3@12658>   BTST #$0,$7(A3)
0002B306 <AmiBlitz3.ab3@12659>    BEQ.w calcvar__notap
0002B30A <AmiBlitz3.ab3@12663>   CMP.w #$5C,D0
0002B30E <AmiBlitz3.ab3@12664>    BEQ.w calcvar__notap
0002B310 <AmiBlitz3.ab3@12665>   MOVEQ.l #$00,D2
0002B314 <AmiBlitz3.ab3@12666> BRA.w calcvar__simpvar2
0002B318 <AmiBlitz3.ab3@12669>   MOVE.w #$8000,D2
0002B320 <AmiBlitz3.ab3@12670>   MOVE.w $4(A3),movea5a0+2
0002B326 <AmiBlitz3.ab3@12671>   MOVE.l movea5a0,D1
0002B32A <AmiBlitz3.ab3@12672>    BSR.w pokela5s                                         ;move.l x(a5),a2
0002B330 <AmiBlitz3.ab3@12674>    TST.b debugmode
0002B334 <AmiBlitz3.ab3@12675>    BEQ.w 'skip
0002B338 <AmiBlitz3.ab3@12676>    MOVE.w #$c320,D1
0002B33E <AmiBlitz3.ab3@12677>    JSR Atokejsr
0002B340 <AmiBlitz3.ab3@12681>   MOVEQ.l #$00,D3
0002B344 <AmiBlitz3.ab3@12684>   CMP.w #$5C,D0
0002B348 <AmiBlitz3.ab3@12685>    BNE.w calcvar__done
0002B350 <AmiBlitz3.ab3@12686>   CMPI.l #$100,$4(A2)
0002B354 <AmiBlitz3.ab3@12687>    BCS.w rongtypeerr
0002B356 <AmiBlitz3.ab3@12688>   MOVE.w D2,-(A7)
0002B35A <AmiBlitz3.ab3@12689>    BSR.w getparameter2
0002B35E <AmiBlitz3.ab3@12690>    BEQ.w syntaxerr
0002B360 <AmiBlitz3.ab3@12691>   ADDQ.w #4,A2
0002B364 <AmiBlitz3.ab3@12692>    BSR.w findvariable2
0002B368 <AmiBlitz3.ab3@12693>    BNE.w noofferr
0002B36A <AmiBlitz3.ab3@12694>   MOVE.w (A7)+,D2
0002B36C <AmiBlitz3.ab3@12695>   MOVEA.l A2,A3                                             ;pointer to offset
0002B370 <AmiBlitz3.ab3@12696>   MOVEA.l $A(A3),A2                                         ;pointer to type
0002B372 <AmiBlitz3.ab3@12697>   MOVEQ #0,d1
0002B376 <AmiBlitz3.ab3@12698>   MOVE.w 4(a3),d1
0002B378 <AmiBlitz3.ab3@12699>   ADD.l d1,d3
0002B37E <AmiBlitz3.ab3@12701>   MOVE.l A3,lastoffset_org
0002B382 <AmiBlitz3.ab3@12702>   CMP.w #$5B,D0
0002B386 <AmiBlitz3.ab3@12703>    BNE.w calcvar__realdone
0002B38C <AmiBlitz3.ab3@12704>   BTST #$1,$7(A3)                                           ;a array [] in newtype is found
0002B390 <AmiBlitz3.ab3@12705>    BEQ.w rongtypeerr
0002B394 <AmiBlitz3.ab3@12706>    BSR.w JL_0_9004
0002B398 <AmiBlitz3.ab3@12707>   MOVEM.l A2-A3,-(A7)
0002B39E <AmiBlitz3.ab3@12708>   MOVE.w varmode,-(A7)
0002B3A4 <AmiBlitz3.ab3@12709>   MOVE.l lastoffset_org,-(A7)
0002B3AA <AmiBlitz3.ab3@12710>   MOVE.w pusha2,D1
0002B3AE <AmiBlitz3.ab3@12711>    BSR.w writeword
0002B3B0 <AmiBlitz3.ab3@12712>   MOVEQ.l #$03,D2                                          ;was 2 >32kb types
0002B3BA <AmiBlitz3.ab3@12713>   MOVE.l destpointer,deststore
0002B3C0 <AmiBlitz3.ab3@12714>    MOVE.l rightsidetype,-(a7)
0002B3C6 <AmiBlitz3.ab3@12715>    MOVE.l leftsidetype,-(a7)
0002B3CC <AmiBlitz3.ab3@12716>    CLR.l rightsidetype
0002B3D2 <AmiBlitz3.ab3@12717>    CLR.l leftsidetype
0002B3D6 <AmiBlitz3.ab3@12718>    BSR.w eval
0002B3DC <AmiBlitz3.ab3@12719>    MOVE.l (a7)+,rightsidetype
0002B3E2 <AmiBlitz3.ab3@12720>    MOVE.l (a7)+,leftsidetype
0002B3E6 <AmiBlitz3.ab3@12721>   CMP.w #$5D,D0
0002B3EA <AmiBlitz3.ab3@12722>    BNE.w syntaxerr
0002B3F0 <AmiBlitz3.ab3@12723>   TST.b fast                                               ;a2,-(a7) array
0002B3F4 <AmiBlitz3.ab3@12724>   BEQ calcvar__loop0_l10
0002B3FA <AmiBlitz3.ab3@12728>   MOVE.l destpointer,d1
0002B400 <AmiBlitz3.ab3@12729>   SUB.l deststore,d1
0002B406 <AmiBlitz3.ab3@12730>   CMP.l #4,d1
0002B40A <AmiBlitz3.ab3@12731>   BNE calcvar__loop0_l10
0002B410 <AmiBlitz3.ab3@12732>   MOVE.l destpointer,a4
0002B416 <AmiBlitz3.ab3@12733>   MOVE.l -4(a4),-6(a4)
0002B41C <AmiBlitz3.ab3@12734>   SUBQ.l #2,destpointer
0002B422 <AmiBlitz3.ab3@12735>   CLR.l imm_addr
0002B428 <AmiBlitz3.ab3@12736>   CLR.l load_var_addr
0002B42C <AmiBlitz3.ab3@12737> BRA calcvar__loop0_l20
0002B432 <AmiBlitz3.ab3@12740>   MOVE.w pulla2,D1
0002B436 <AmiBlitz3.ab3@12741>    BSR.w writeword
0002B43C <AmiBlitz3.ab3@12744>   MOVE.l (A7)+,lastoffset_org
0002B442 <AmiBlitz3.ab3@12745>   MOVE.w (A7)+,varmode
0002B446 <AmiBlitz3.ab3@12746>   MOVEM.l (A7)+,A2-A3
0002B44C <AmiBlitz3.ab3@12752>   TST.w debugmode
0002B450 <AmiBlitz3.ab3@12753>    BEQ.b calcvar__nobchk
0002B454 <AmiBlitz3.ab3@12754>   MOVE.w $8(A3),D1
0002B458 <AmiBlitz3.ab3@12755>    BEQ.b calcvar__nobchk                                   ;no [0] checks!
0002B45E <AmiBlitz3.ab3@12759>   MOVE.w D1,brchkcode+2
0002B464 <AmiBlitz3.ab3@12760>   MOVE.w regnum,D1
0002B466 <AmiBlitz3.ab3@12761>   LSL.w #8,D1
0002B468 <AmiBlitz3.ab3@12762>   LSL.w #1,D1
0002B46C <AmiBlitz3.ab3@12763>   OR.w brchkcode0(PC),D1
0002B472 <AmiBlitz3.ab3@12764>   MOVE.w D1,brchkcode
0002B476 <AmiBlitz3.ab3@12765>   MOVE.l brchkcode(PC),D1
0002B47A <AmiBlitz3.ab3@12766>    BSR.w writelong
0002B47E <AmiBlitz3.ab3@12767>   MOVE.l brchkcode+4(PC),D1
0002B482 <AmiBlitz3.ab3@12768>    BSR.w writelong
0002B486 <AmiBlitz3.ab3@12769>   MOVE.w brchkcode+8(PC),D1
0002B48A <AmiBlitz3.ab3@12770>    BSR.w writeword
0002B48C <AmiBlitz3.ab3@12773>   MOVEQ.l #$04,D1
0002B492 <AmiBlitz3.ab3@12774>   BTST #$0,$7(A3)
0002B496 <AmiBlitz3.ab3@12775>    BNE.w calcvar__dothemul
0002B49A <AmiBlitz3.ab3@12776>   MOVE.w $8(A2),D1
0002B49E <AmiBlitz3.ab3@12779>   BSR.w JL_0_B6DE
0002B4A4 <AmiBlitz3.ab3@12780>   MOVE.w addrega2,D1
0002B4AA <AmiBlitz3.ab3@12781>   OR.w regnum,D1
0002B4AE <AmiBlitz3.ab3@12782>    OR.w #$100,d1                                           ;>32kb types
0002B4B2 <AmiBlitz3.ab3@12783>    BSR.w writeword
0002B4B6 <AmiBlitz3.ab3@12784>    BSR.w get1bytemain
0002B4B8 <AmiBlitz3.ab3@12785>   MOVEQ.l #$00,D3
0002B4BC <AmiBlitz3.ab3@12786>   MOVE.w #$8000,D2
0002B4C2 <AmiBlitz3.ab3@12789>   BTST #$0,$7(A3)
0002B4C6 <AmiBlitz3.ab3@12790>    BNE.w calcvar__pointer
0002B4CA <AmiBlitz3.ab3@12791> BRA.w calcvar__loop0
0002B4CE <AmiBlitz3.ab3@12795>  CMP.w #$5C,D0
0002B4D2 <AmiBlitz3.ab3@12796>    BNE.w calcvar__done3
0002B4D4 <AmiBlitz3.ab3@12797>   TST.w D3
0002B4D8 <AmiBlitz3.ab3@12798>    BNE.w calcvar__pskip
0002B4DE <AmiBlitz3.ab3@12799>   MOVE.w movea0,D1
0002B4E2 <AmiBlitz3.ab3@12800>    BSR.w writeword
0002B4E6 <AmiBlitz3.ab3@12801> BRA.w calcvar__pmore
0002B4EC <AmiBlitz3.ab3@12804>   MOVE.w D3,movea0a0+2
0002B4F2 <AmiBlitz3.ab3@12805>   MOVE.l movea0a0,D1
0002B4F6 <AmiBlitz3.ab3@12806>    BSR.w writelong
0002B4FC <AmiBlitz3.ab3@12809>   BTST #$2,$7(A3)
0002B500 <AmiBlitz3.ab3@12810>    BEQ.w calcvar__loopml
0002B506 <AmiBlitz3.ab3@12811>   MOVE.l adda0a0,D1
0002B50A <AmiBlitz3.ab3@12812>    BSR.w writelong
0002B50E <AmiBlitz3.ab3@12813> BRA.w calcvar__loopml
0002B512 <AmiBlitz3.ab3@12816>   BSET #$E,D2
0002B518 <AmiBlitz3.ab3@12817>   BTST #$2,$7(A3)
0002B51C <AmiBlitz3.ab3@12818>    BNE.w calcvar__done
0002B520 <AmiBlitz3.ab3@12819>   BSET #$D,D2
0002B528 <AmiBlitz3.ab3@12822>   CMPI.l #$100,$4(A2)
0002B52C <AmiBlitz3.ab3@12823>    BCC.w calcvar__done2
0002B530 <AmiBlitz3.ab3@12824>   MOVE.b $7(A2),D2
0002B534 <AmiBlitz3.ab3@12827> BRA.w JL_0_9004
0002B538 <AmiBlitz3.ab3@12830>   MOVE.w $6(A2),D2
0002B53C <AmiBlitz3.ab3@12833>   MOVE.w $4(A3),D3
0002B542 <AmiBlitz3.ab3@12834>   BTST #$0,$7(A3)
0002B546 <AmiBlitz3.ab3@12835>    BEQ.w calcvar__nopoint
0002B54A <AmiBlitz3.ab3@12836>   BSET #$E,D2
0002B54C <AmiBlitz3.ab3@12839> RTS
0002B550 <AmiBlitz3.ab3@12843> brchkcode0:  Dc.b $B0,$7C,$00,$00                          ;CMP.W   #$0000,D0
0002B554 <AmiBlitz3.ab3@12844> brchkcode:   Dc.b $B0,$7C :             Dc.b $00,$00       ;CMP.W   #$0000,D0
0002B556 <AmiBlitz3.ab3@12845>              Dc.b $65,$04                                  ;BCS.B   brchkcode__ok
0002B558 <AmiBlitz3.ab3@12846>              Dc.b $70,$02                                  ;MOVEQ   #$02,D0
0002B55A <AmiBlitz3.ab3@12847>              Dc.b $4E,$40                                  ;TRAP    #00
0002B560 <AmiBlitz3.ab3@12855>   TST.w varmode
0002B564 <AmiBlitz3.ab3@12856>    BEQ.w writeword
0002B568 <AmiBlitz3.ab3@12857>   BCLR #$0,D1
0002B56C <AmiBlitz3.ab3@12858> BRA.w writeword
0002B572 <AmiBlitz3.ab3@12861>   TST.w varmode
0002B576 <AmiBlitz3.ab3@12862>    BEQ.w writeword
0002B57A <AmiBlitz3.ab3@12863>   BCLR #$9,D1
0002B57E <AmiBlitz3.ab3@12864> BRA.w writeword
0002B584 <AmiBlitz3.ab3@12867>   TST.w proceduremode
0002B588 <AmiBlitz3.ab3@12868>    BEQ.w writelong
0002B58C <AmiBlitz3.ab3@12869>   BCLR #$19,D1
0002B590 <AmiBlitz3.ab3@12870> BRA.w writelong
0002B596 <AmiBlitz3.ab3@12873>   TST.w varmode
0002B59A <AmiBlitz3.ab3@12874>   BEQ.w writelong
0002B59E <AmiBlitz3.ab3@12875>   BCLR #$10,D1
0002B5A4 <AmiBlitz3.ab3@12878>   ADDQ.l #1,destpointer
0002B5AC <AmiBlitz3.ab3@12879>   BCLR #$0,destpointer+3
0002B5B2 <AmiBlitz3.ab3@12880>   MOVEA.l destpointer,A4
0002B5B8 <AmiBlitz3.ab3@12881>   CMPA.l destbufferend,A4
0002B5BC <AmiBlitz3.ab3@12882>    BCC.w writeword__overa
0002B5BE <AmiBlitz3.ab3@12883>   MOVE.l D1,(A4)+
0002B5C4 <AmiBlitz3.ab3@12886>   MOVE.l A4,destpointer
0002B5C8 <AmiBlitz3.ab3@12887>   CMPA.l bigpc(PC),A4
0002B5CC <AmiBlitz3.ab3@12888>    BHI.w writeword__nbp
0002B5CE <AmiBlitz3.ab3@12889> RTS
0002B5D6 <AmiBlitz3.ab3@12892>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
0002B5DC <AmiBlitz3.ab3@12893>   CLR.b fast
0002B5E2 <AmiBlitz3.ab3@12894>   CLR.b fpu
0002B5E8 <AmiBlitz3.ab3@12895>   CLR.b iee
0002B5EA <AmiBlitz3.ab3@12896>   ADDQ.w #4,A4
0002B5EE <AmiBlitz3.ab3@12897> BRA.w writeword__msa
0002B5F4 <AmiBlitz3.ab3@12903>   ADDQ.l #1,destpointer
0002B5FC <AmiBlitz3.ab3@12904>   BCLR #$0,destpointer+3
0002B602 <AmiBlitz3.ab3@12905>   MOVEA.l destpointer,A4
0002B608 <AmiBlitz3.ab3@12906>   CMPA.l destbufferend,A4
0002B60C <AmiBlitz3.ab3@12907>    BCC.w writeword__over
0002B60E <AmiBlitz3.ab3@12908>   MOVE.w D1,(A4)+
0002B614 <AmiBlitz3.ab3@12911>   MOVE.l A4,destpointer
0002B618 <AmiBlitz3.ab3@12912>   CMPA.l bigpc(PC),A4
0002B61C <AmiBlitz3.ab3@12913>    BHI.w writeword__nbp
0002B61E <AmiBlitz3.ab3@12914> RTS
0002B624 <AmiBlitz3.ab3@12917>   ADDQ.l #1,destpointer
0002B62C <AmiBlitz3.ab3@12918>   BCLR #$0,destpointer+3
0002B632 <AmiBlitz3.ab3@12919>   MOVEA.l destpointer,A4
0002B638 <AmiBlitz3.ab3@12920>   CMPA.l destbufferend,A4
0002B63C <AmiBlitz3.ab3@12921>    BCC.w writeword__over
0002B63E <AmiBlitz3.ab3@12922>   MOVE.w D1,(A4)+
0002B644 <AmiBlitz3.ab3@12923>   MOVE.l A4,destpointer
0002B648 <AmiBlitz3.ab3@12924>   CMPA.l bigpc(PC),A4
0002B64C <AmiBlitz3.ab3@12925>    BHI.w writeword__nbp
0002B64E <AmiBlitz3.ab3@12926> RTS
0002B654 <AmiBlitz3.ab3@12929>   TST.w cfetchmode
0002B658 <AmiBlitz3.ab3@12930>   BNE.w writeword__nbp2
0002B65E <AmiBlitz3.ab3@12931>   MOVE.l A4,bigpc
0002B660 <AmiBlitz3.ab3@12934> RTS
0002B668 <AmiBlitz3.ab3@12937>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
0002B66A <AmiBlitz3.ab3@12938>   ADDQ.w #2,A4
0002B670 <AmiBlitz3.ab3@12939>   CLR.b fast
0002B676 <AmiBlitz3.ab3@12940>   CLR.b fpu
0002B67C <AmiBlitz3.ab3@12941>   CLR.b iee
0002B680 <AmiBlitz3.ab3@12942> BRA.w writeword__ms
0002B686 <AmiBlitz3.ab3@12946>   MOVEA.l destpointer,A4
0002B68C <AmiBlitz3.ab3@12947>   CMPA.l destbufferend,A4
0002B690 <AmiBlitz3.ab3@12948>    BCC.w writebyte__over
0002B692 <AmiBlitz3.ab3@12949>   MOVE.b D1,(A4)+
0002B698 <AmiBlitz3.ab3@12952>   MOVE.l A4,destpointer
0002B69C <AmiBlitz3.ab3@12953>   CMPA.l bigpc(PC),A4
0002B6A0 <AmiBlitz3.ab3@12954>    BHI.w writebyte__nbp
0002B6A2 <AmiBlitz3.ab3@12955> RTS
0002B6A8 <AmiBlitz3.ab3@12958>   TST.w cfetchmode
0002B6AC <AmiBlitz3.ab3@12959>    BNE.w writebyte__nbp2
0002B6B2 <AmiBlitz3.ab3@12960>   MOVE.l A4,bigpc
0002B6B4 <AmiBlitz3.ab3@12963> RTS
0002B6BC <AmiBlitz3.ab3@12966>   MOVE.w #-1,dontwrite
0002B6BE <AmiBlitz3.ab3@12967>   ADDQ.w #1,A4
0002B6C4 <AmiBlitz3.ab3@12968>   CLR.b fast
0002B6CA <AmiBlitz3.ab3@12969>   CLR.b fpu
0002B6D0 <AmiBlitz3.ab3@12970>   CLR.b iee
0002B6D4 <AmiBlitz3.ab3@12971> BRA.w writebyte__ms
0002B6D8 <AmiBlitz3.ab3@12974> bigpc:   Ds.l 1
0002B6DA <AmiBlitz3.ab3@12978>   MOVE.w (A0)+,D1
0002B6DE <AmiBlitz3.ab3@12979>   BSR.w writeword
0002B6E0 <AmiBlitz3.ab3@12982>     CMPA.l A1,A0
0002B6E4 <AmiBlitz3.ab3@12983>     BCC.w pokecode__done
0002B6E6 <AmiBlitz3.ab3@12984>       MOVE.w (A0)+,D1
0002B6EA <AmiBlitz3.ab3@12985>       BSR.w writeword
0002B6EE <AmiBlitz3.ab3@12986> BRA.w pokecode__loop
0002B6F0 <AmiBlitz3.ab3@12989> RTS
0002B6F2 <AmiBlitz3.ab3@12992>   MOVE.w (A0)+,D1
0002B6F6 <AmiBlitz3.ab3@12993>   BSR.w writeword
0002B6F8 <AmiBlitz3.ab3@12994>   CMPA.l A1,A0
0002B6FC <AmiBlitz3.ab3@12995>   BCS.w pokecode2
0002B6FE <AmiBlitz3.ab3@12996> RTS
0002B704 <AmiBlitz3.ab3@13002>   TST.b iniffcommand
0002B708 <AmiBlitz3.ab3@13003>   BEQ 'l1
0002B70C <AmiBlitz3.ab3@13004>     MOVE.w #$4880,D1
0002B712 <AmiBlitz3.ab3@13005>     OR.w regnum,D1
0002B716 <AmiBlitz3.ab3@13006>     BSR writeword
0002B718 <AmiBlitz3.ab3@13009> RTS
0002B71C <AmiBlitz3.ab3@13012>   BSR.w convert_byte_to_word
0002B722 <AmiBlitz3.ab3@13015>   TST.b iee
0002B726 <AmiBlitz3.ab3@13016>   BEQ 'old
0002B72A <AmiBlitz3.ab3@13017>   CMP.b #5,d2
0002B72E <AmiBlitz3.ab3@13018>   BEQ wtof
0002B732 <AmiBlitz3.ab3@13021>   MOVE.w #$48C0,D1
0002B738 <AmiBlitz3.ab3@13022>   OR.w regnum,D1
0002B73C <AmiBlitz3.ab3@13023> BRA.w writeword
0002B73E <AmiBlitz3.ab3@13026>   MOVEQ #0,d0
0002B744 <AmiBlitz3.ab3@13027>   MOVE.w regnum,d0
0002B746 <AmiBlitz3.ab3@13028>   ASL.l #7,d0
0002B74C <AmiBlitz3.ab3@13029>   MOVE.l #$f2005000,d1
0002B74E <AmiBlitz3.ab3@13030>   OR.l d0,d1
0002B750 <AmiBlitz3.ab3@13031>   ASL.l #1,d0
0002B752 <AmiBlitz3.ab3@13032>   ASL.l #8,d0
0002B754 <AmiBlitz3.ab3@13033>   OR.l d0,d1
0002B758 <AmiBlitz3.ab3@13034> BRA writelong
0002B75C <AmiBlitz3.ab3@13038>   BSR.w convert_byte_to_word
0002B760 <AmiBlitz3.ab3@13041>   MOVE.w #$4840,D1
0002B766 <AmiBlitz3.ab3@13042>   OR.w regnum,D1
0002B76A <AmiBlitz3.ab3@13043>    BSR.w writeword
0002B76E <AmiBlitz3.ab3@13044>   MOVE.w #$4240,D1
0002B774 <AmiBlitz3.ab3@13045>   OR.w regnum,D1
0002B778 <AmiBlitz3.ab3@13046> BRA.w writeword
0002B77C <AmiBlitz3.ab3@13050>   CMP.w #$ffdc,d1
0002B780 <AmiBlitz3.ab3@13051>   BNE 'negfpu
0002B782 <AmiBlitz3.ab3@13052>   MOVEQ #0,d0
0002B788 <AmiBlitz3.ab3@13053>   MOVE.w regnum,d0
0002B78A <AmiBlitz3.ab3@13054>   ASL.l #7,d0
0002B790 <AmiBlitz3.ab3@13055>   MOVE.l #$f2004000,d1
0002B792 <AmiBlitz3.ab3@13056>   OR.l d0,d1
0002B794 <AmiBlitz3.ab3@13057>   ASL.l #1,d0
0002B796 <AmiBlitz3.ab3@13058>   ASL.l #8,d0
0002B798 <AmiBlitz3.ab3@13059>   OR.l d0,d1
0002B79C <AmiBlitz3.ab3@13060> BRA writelong
0002B79E <AmiBlitz3.ab3@13064>   MOVEQ #0,d1
0002B7A4 <AmiBlitz3.ab3@13065>   MOVE.w regnum,d1                                         ;fpu neg
0002B7A6 <AmiBlitz3.ab3@13066>   ASL.l #7,d1
0002B7AC <AmiBlitz3.ab3@13067>   OR.l #$f200001a,d1
0002B7AE <AmiBlitz3.ab3@13068>   MOVE.l d0,-(a7)
0002B7B0 <AmiBlitz3.ab3@13069>   MOVEQ #0,d0
0002B7B6 <AmiBlitz3.ab3@13070>   MOVE.w regnum,d0
0002B7B8 <AmiBlitz3.ab3@13071>   ASL.l #8,d0
0002B7BA <AmiBlitz3.ab3@13072>   ASL.l #2,d0
0002B7BC <AmiBlitz3.ab3@13073>   OR.l d0,d1
0002B7BE <AmiBlitz3.ab3@13074>   MOVE.l (a7)+,d0
0002B7C2 <AmiBlitz3.ab3@13075> BRA writelong
0002B7C8 <AmiBlitz3.ab3@13078>    TST.b iee
0002B7CC <AmiBlitz3.ab3@13079>    BNE wtof
0002B7D0 <AmiBlitz3.ab3@13080>    BSR.w convert_byte_to_long
0002B7D4 <AmiBlitz3.ab3@13083>    MOVE.w #$FFDC,D1
0002B7DA <AmiBlitz3.ab3@13086>    TST.b iee
0002B7DE <AmiBlitz3.ab3@13087>    BNE ltof
0002B7E4 <AmiBlitz3.ab3@13088>    MOVE.w D1,libjsr+2
0002B7E8 <AmiBlitz3.ab3@13089>    BSR.w JL_0_AD40
0002B7EA <AmiBlitz3.ab3@13090>   MOVE.l D4,D1
0002B7EE <AmiBlitz3.ab3@13091>    BSR.w JL_0_AD38
0002B7F2 <AmiBlitz3.ab3@13092>   MOVE.w #$C900,D1
0002B7F6 <AmiBlitz3.ab3@13093>    BSR.w Atokejsr
0002B7FA <AmiBlitz3.ab3@13094>    BSR.w JL_0_A352
0002B800 <AmiBlitz3.ab3@13095>   MOVE.l libjsr,D1
0002B804 <AmiBlitz3.ab3@13096>    BSR.w writelong
0002B808 <AmiBlitz3.ab3@13097>    BSR.w JL_0_A36E
0002B80A <AmiBlitz3.ab3@13098>   MOVE.l D5,D1
0002B80E <AmiBlitz3.ab3@13099> BRA.w JL_0_AD38
0002B810 <AmiBlitz3.ab3@13102> RTS
0002B814 <AmiBlitz3.ab3@13105>   MOVE.w #$C317,D1
0002B81A <AmiBlitz3.ab3@13106>   TST.b typecheck
0002B81E <AmiBlitz3.ab3@13107>   BEQ 'l1
0002B824 <AmiBlitz3.ab3@13108>    TST.b notypecheck
0002B828 <AmiBlitz3.ab3@13109>    BNE 'l1
0002B82E <AmiBlitz3.ab3@13110>    TST.l lasttoken
0002B834 <AmiBlitz3.ab3@13117>   TST.b debugmode
0002B838 <AmiBlitz3.ab3@13118>    BEQ.w JL_0_9696
0002B840 <AmiBlitz3.ab3@13119>   BTST #$7,overflowcheck
0002B844 <AmiBlitz3.ab3@13120>    BEQ.w JL_0_9696
0002B84A <AmiBlitz3.ab3@13121>   TST.w cfetchmode
0002B84E <AmiBlitz3.ab3@13122>    BNE.w JL_0_9696
0002B854 <AmiBlitz3.ab3@13123>   TST.w regnum
0002B858 <AmiBlitz3.ab3@13124>    BEQ.w JL_0_968A
0002B85A <AmiBlitz3.ab3@13125>   MOVE.w D1,-(A7)
0002B85E <AmiBlitz3.ab3@13126>   MOVE.w JL_0_9698(PC),D1
0002B862 <AmiBlitz3.ab3@13127>    BSR.w writeword
0002B868 <AmiBlitz3.ab3@13128>   MOVE.w regnum,D1
0002B86C <AmiBlitz3.ab3@13129>   OR.w L_0_969C(PC),D1
0002B870 <AmiBlitz3.ab3@13130>    BSR.w writeword
0002B872 <AmiBlitz3.ab3@13131>   MOVE.w (A7)+,D1
0002B876 <AmiBlitz3.ab3@13132>    BSR.w JL_0_968A
0002B87A <AmiBlitz3.ab3@13133>   MOVE.w L_0_969A(PC),D1
0002B87E <AmiBlitz3.ab3@13134> BRA.w writeword
0002B882 <AmiBlitz3.ab3@13138>   MOVEM.l D0-D7/A0-A6,-(A7)
0002B886 <AmiBlitz3.ab3@13139>    BSR.w Atokejsr
0002B88A <AmiBlitz3.ab3@13140>   MOVEM.l (A7)+,D0-D7/A0-A6
0002B88C <AmiBlitz3.ab3@13143> RTS
0002B88E <AmiBlitz3.ab3@13146>   MOVE.l D0,-(A7)
0002B890 <AmiBlitz3.ab3@13149>   MOVE.l (A7)+,D0
0002B892 <AmiBlitz3.ab3@13152>   MOVE.l D0,D0
0002B896 <AmiBlitz3.ab3@13155>   BSR.w convert_word_to_long
0002B89C <AmiBlitz3.ab3@13156>   TST.b iee
0002B8A0 <AmiBlitz3.ab3@13157>   BEQ 'old
0002B8A4 <AmiBlitz3.ab3@13158>   CMP.b #5,d2
0002B8A8 <AmiBlitz3.ab3@13159>   BNE 'old
0002B8AA <AmiBlitz3.ab3@13160> RTS
0002B8AE <AmiBlitz3.ab3@13163> BRA.w JL_0_9600
0002B8B2 <AmiBlitz3.ab3@13167>   MOVE.w #$C316,D1
0002B8B8 <AmiBlitz3.ab3@13168>   TST.b typecheck
0002B8BC <AmiBlitz3.ab3@13169>   BEQ 'l1
0002B8C2 <AmiBlitz3.ab3@13170>   TST.b peekaddrsize
0002B8C6 <AmiBlitz3.ab3@13171>   BNE 'l1
0002B8CC <AmiBlitz3.ab3@13172>   TST.b notypecheck
0002B8D0 <AmiBlitz3.ab3@13173>   BNE 'l1
0002B8D6 <AmiBlitz3.ab3@13174>   TST.l lasttoken
0002B8DA <AmiBlitz3.ab3@13180> BRA.w JL_0_963A
0002B8DE <AmiBlitz3.ab3@13184>   MOVE.w #$C318,D1
0002B8E4 <AmiBlitz3.ab3@13185>   TST.b typecheck
0002B8E8 <AmiBlitz3.ab3@13186>   BEQ 'l1
0002B8EE <AmiBlitz3.ab3@13187>   TST.b peekaddrsize
0002B8F2 <AmiBlitz3.ab3@13188>   BNE 'l1
0002B8F8 <AmiBlitz3.ab3@13189>   TST.b notypecheck
0002B8FC <AmiBlitz3.ab3@13190>   BNE 'l1
0002B902 <AmiBlitz3.ab3@13191>   TST.l lasttoken
0002B906 <AmiBlitz3.ab3@13197> BRA.w JL_0_963A
0002B90A <AmiBlitz3.ab3@13201>   MOVE.w #$C318,D1
0002B910 <AmiBlitz3.ab3@13202>   TST.b typecheck
0002B914 <AmiBlitz3.ab3@13203>   BEQ 'l1
0002B91A <AmiBlitz3.ab3@13204>   TST.b notypecheck
0002B91E <AmiBlitz3.ab3@13205>   BNE 'l1
0002B924 <AmiBlitz3.ab3@13206>   TST.l lasttoken
0002B928 <AmiBlitz3.ab3@13212>   BSR.w JL_0_963A
0002B92C <AmiBlitz3.ab3@13213> BRA.w convert_word_to_quick
0002B930 <AmiBlitz3.ab3@13217> BRA.w JL_0_9600
0002B932 <AmiBlitz3.ab3@13221> RTS
0002B936 <AmiBlitz3.ab3@13225>   MOVE.w #$C319,D1
0002B93C <AmiBlitz3.ab3@13226>   TST.b typecheck
0002B940 <AmiBlitz3.ab3@13227>   BEQ 'l1
0002B946 <AmiBlitz3.ab3@13228>   TST.b notypecheck
0002B94A <AmiBlitz3.ab3@13229>   BNE 'l1
0002B950 <AmiBlitz3.ab3@13230>   TST.l lasttoken
0002B954 <AmiBlitz3.ab3@13237>   BSR.w JL_0_963A
0002B958 <AmiBlitz3.ab3@13240>   MOVE.w #$4240,D1
0002B95E <AmiBlitz3.ab3@13241>   OR.w regnum,D1
0002B962 <AmiBlitz3.ab3@13242>   BSR.w writeword
0002B966 <AmiBlitz3.ab3@13243>   MOVE.w #$4840,D1
0002B96C <AmiBlitz3.ab3@13244>   OR.w regnum,D1
0002B970 <AmiBlitz3.ab3@13245> BRA.w writeword
0002B974 <AmiBlitz3.ab3@13249> BRA.w JL_0_96D0
0002B978 <AmiBlitz3.ab3@13253>   BSR.w JL_0_96D0
0002B97C <AmiBlitz3.ab3@13254> BRA.w convert_word_to_long
0002B97E <AmiBlitz3.ab3@13259>   MOVEQ #0,d0
0002B984 <AmiBlitz3.ab3@13260>   MOVE.w regnum,d0
0002B986 <AmiBlitz3.ab3@13261>   ASL.l #7,d0
0002B98C <AmiBlitz3.ab3@13262>   MOVE.l #$f2004000,d1
0002B98E <AmiBlitz3.ab3@13263>   OR.l d0,d1
0002B990 <AmiBlitz3.ab3@13264>   ASL.l #1,d0
0002B992 <AmiBlitz3.ab3@13265>   ASL.l #8,d0
0002B994 <AmiBlitz3.ab3@13266>   OR.l d0,d1
0002B998 <AmiBlitz3.ab3@13267>   BSR writelong
0002B99E <AmiBlitz3.ab3@13268>   MOVE.w regnum,d0
0002B9A0 <AmiBlitz3.ab3@13269>   ASL.l #7,d0
0002B9A6 <AmiBlitz3.ab3@13270>   MOVE.l #$f23c4423,d1                                     ;fmul.s #1/65536,fpreg
0002B9A8 <AmiBlitz3.ab3@13271>   OR.w d0,d1
0002B9AC <AmiBlitz3.ab3@13272>   BSR writelong
0002B9B2 <AmiBlitz3.ab3@13273>   MOVE.l #$37800000,d1
0002B9B6 <AmiBlitz3.ab3@13274>   BSR writelong
0002B9B8 <AmiBlitz3.ab3@13275> RTS
0002B9BE <AmiBlitz3.ab3@13279>   TST.b iee
0002B9C2 <AmiBlitz3.ab3@13280>   BNE qtof
0002B9C6 <AmiBlitz3.ab3@13281>   MOVE.w #$D300,D1
0002B9C8 <AmiBlitz3.ab3@13284>   MOVE.w D1,-(A7)
0002B9CC <AmiBlitz3.ab3@13285>    BSR.w JL_0_AD40
0002B9CE <AmiBlitz3.ab3@13286>   MOVE.l D4,D1
0002B9D2 <AmiBlitz3.ab3@13287>    BSR.w JL_0_AD38
0002B9D6 <AmiBlitz3.ab3@13288>    BSR.w JL_0_A352
0002B9D8 <AmiBlitz3.ab3@13289>   MOVE.w (A7)+,D1
0002B9DC <AmiBlitz3.ab3@13290>    BSR.w Atokejsr
0002B9E0 <AmiBlitz3.ab3@13291>    BSR.w JL_0_A36E
0002B9E2 <AmiBlitz3.ab3@13292>   MOVE.l D5,D1
0002B9E6 <AmiBlitz3.ab3@13293> BRA.w JL_0_AD38
0002B9E8 <AmiBlitz3.ab3@13297> RTS
0002B9EE <AmiBlitz3.ab3@13300>   TST.b typecheck
0002B9F2 <AmiBlitz3.ab3@13301>   BEQ 'l1
0002B9F8 <AmiBlitz3.ab3@13302>   TST.b notypecheck
0002B9FC <AmiBlitz3.ab3@13303>   BNE 'l1
0002BA02 <AmiBlitz3.ab3@13304>   TST.l lasttoken
0002BA08 <AmiBlitz3.ab3@13309>   TST.b iee
0002BA0C <AmiBlitz3.ab3@13310>   BNE ftol
0002BA10 <AmiBlitz3.ab3@13311>   MOVE.w #$C31A,D1
0002BA14 <AmiBlitz3.ab3@13312>   BSR.w JL_0_963A
0002BA18 <AmiBlitz3.ab3@13313>   BSR.w JL_0_974A
0002BA1C <AmiBlitz3.ab3@13314> BRA.w convert_long_to_byte
0002BA1E <AmiBlitz3.ab3@13318> RTS
0002BA24 <AmiBlitz3.ab3@13321>   TST.b typecheck
0002BA28 <AmiBlitz3.ab3@13322>   BEQ 'l1
0002BA2E <AmiBlitz3.ab3@13323>   TST.b notypecheck
0002BA32 <AmiBlitz3.ab3@13324>   BNE 'l1
0002BA38 <AmiBlitz3.ab3@13325>   TST.l lasttoken
0002BA3E <AmiBlitz3.ab3@13330>   TST.b iee
0002BA42 <AmiBlitz3.ab3@13331>   BNE ftol
0002BA46 <AmiBlitz3.ab3@13332>   MOVE.w #$C31B,D1
0002BA4A <AmiBlitz3.ab3@13333>   BSR.w JL_0_963A
0002BA4E <AmiBlitz3.ab3@13334>   BSR.w JL_0_974A
0002BA52 <AmiBlitz3.ab3@13335> BRA.w convert_long_to_word
0002BA54 <AmiBlitz3.ab3@13339> RTS
0002BA5A <AmiBlitz3.ab3@13342>   TST.b iee
0002BA5E <AmiBlitz3.ab3@13343>   BNE ftol
0002BA62 <AmiBlitz3.ab3@13344>   MOVE.w #$C31C,D1
0002BA66 <AmiBlitz3.ab3@13345>   BSR.w JL_0_963A
0002BA6A <AmiBlitz3.ab3@13348>   MOVE.w #$FFE2,D1
0002BA6E <AmiBlitz3.ab3@13349> BRA.w JL_0_9604
0002BA70 <AmiBlitz3.ab3@13352>   MOVE.l d0,-(a7)
0002BA72 <AmiBlitz3.ab3@13353>   MOVEQ #0,d0
0002BA78 <AmiBlitz3.ab3@13354>   MOVE.w regnum,d0
0002BA7A <AmiBlitz3.ab3@13355>   ASL.l #7,d0
0002BA80 <AmiBlitz3.ab3@13356>   MOVE.l #$f2006000,d1
0002BA82 <AmiBlitz3.ab3@13357>   OR.l d0,d1
0002BA84 <AmiBlitz3.ab3@13358>   ASL.l #1,d0
0002BA86 <AmiBlitz3.ab3@13359>   ASL.l #8,d0
0002BA88 <AmiBlitz3.ab3@13360>   OR.l d0,d1
0002BA8A <AmiBlitz3.ab3@13361>   MOVE.l (a7)+,d0
0002BA8E <AmiBlitz3.ab3@13362> BRA writelong
0002BA90 <AmiBlitz3.ab3@13366>   MOVE.l d0,-(a7)
0002BA92 <AmiBlitz3.ab3@13367>   MOVEQ #0,d0
0002BA98 <AmiBlitz3.ab3@13368>   MOVE.l #$f23c4023,d1
0002BA9E <AmiBlitz3.ab3@13369>   MOVE.w regnum,d0
0002BAA0 <AmiBlitz3.ab3@13370>   ASL.l #7,d0
0002BAA2 <AmiBlitz3.ab3@13371>   OR.l d0,d1
0002BAA6 <AmiBlitz3.ab3@13372>   BSR writelong
0002BAAC <AmiBlitz3.ab3@13373>   MOVE.l #$00010000,d1
0002BAB0 <AmiBlitz3.ab3@13374>   BSR writelong
0002BAB6 <AmiBlitz3.ab3@13375>   MOVE.w regnum,d0
0002BAB8 <AmiBlitz3.ab3@13376>   ASL.l #7,d0
0002BABE <AmiBlitz3.ab3@13377>   MOVE.l #$f2006000,d1
0002BAC0 <AmiBlitz3.ab3@13378>   OR.l d0,d1
0002BAC2 <AmiBlitz3.ab3@13379>   ASL.l #1,d0
0002BAC4 <AmiBlitz3.ab3@13380>   ASL.l #8,d0
0002BAC6 <AmiBlitz3.ab3@13381>   OR.l d0,d1
0002BACA <AmiBlitz3.ab3@13382>   BSR writelong
0002BACC <AmiBlitz3.ab3@13383>   MOVE.l (a7)+,d0
0002BACE <AmiBlitz3.ab3@13384> RTS
0002BAD0 <AmiBlitz3.ab3@13388> RTS
0002BAD6 <AmiBlitz3.ab3@13392>   TST.b iee
0002BADA <AmiBlitz3.ab3@13393>   BNE ftoq
0002BADE <AmiBlitz3.ab3@13394>   MOVE.w #$C31B,D1
0002BAE2 <AmiBlitz3.ab3@13395>   BSR.w JL_0_963A
0002BAE6 <AmiBlitz3.ab3@13396>   MOVE.w #$D301,D1
0002BAEA <AmiBlitz3.ab3@13397> BRA.w JL_0_96FC
0002BAF0 <AmiBlitz3.ab3@13403>    TST.b blitzparloop
0002BAF4 <AmiBlitz3.ab3@13404>    BNE 'l1
0002BAFA <AmiBlitz3.ab3@13405>    TST.b funcparloop
0002BAFE <AmiBlitz3.ab3@13406>    BNE 'l1
0002BB02 <AmiBlitz3.ab3@13407>    BRA error_convert_types
0002BB0A <AmiBlitz3.ab3@13410>   CMP.b #2,optistring
0002BB0E <AmiBlitz3.ab3@13411>   BEQ JLrts
0002BB14 <AmiBlitz3.ab3@13412>   MOVE.w stol,D1
0002BB18 <AmiBlitz3.ab3@13413>   BSR.w writeword
0002BB20 <AmiBlitz3.ab3@13414>   CMPI.w #$2,sbgot
0002BB24 <AmiBlitz3.ab3@13415>   BCS.w sbtolong
0002BB28 <AmiBlitz3.ab3@13416>   MOVE.w ceos(PC),D1
0002BB2C <AmiBlitz3.ab3@13417>   BSR.w writeword
0002BB32 <AmiBlitz3.ab3@13420>   MOVE.w regnum,D1
0002BB34 <AmiBlitz3.ab3@13421>   LSL.w #8,D1
0002BB36 <AmiBlitz3.ab3@13422>   LSL.w #1,D1
0002BB3E <AmiBlitz3.ab3@13423>   CMPI.w #$2,sbgot
0002BB42 <AmiBlitz3.ab3@13424>   BCS.w JL_0_98E8
0002BB48 <AmiBlitz3.ab3@13425>   MOVE.w a2offset,D3
0002BB4E <AmiBlitz3.ab3@13426>   SUB.w thisstuse,D3
0002BB52 <AmiBlitz3.ab3@13427>   CMP.w #$6,D3
0002BB56 <AmiBlitz3.ab3@13428>   BNE.w JL_0_98D4b
0002BB5C <AmiBlitz3.ab3@13429>   OR.w movestst2,D1
0002BB60 <AmiBlitz3.ab3@13430>   BSR.w writeword
0002BB66 <AmiBlitz3.ab3@13431>   LEA movestst2+2,A0
0002BB6C <AmiBlitz3.ab3@13432>   LEA movestst2f,A1
0002BB70 <AmiBlitz3.ab3@13433> BRA.w pokecode2
0002BB76 <AmiBlitz3.ab3@13437>   OR.w movea7dn,D1
0002BB7A <AmiBlitz3.ab3@13438>   BSR.w writeword
0002BB80 <AmiBlitz3.ab3@13439>   MOVE.l #0,D1
0002BB84 <AmiBlitz3.ab3@13440> BRA.w writeword
0002BB8A <AmiBlitz3.ab3@13444>   ADDQ.w #1,fuckpos
0002BB8E <AmiBlitz3.ab3@13445>   BSR.w writeconvertcode
0002BB94 <AmiBlitz3.ab3@13446>   SUBQ.w #1,fuckpos
0002BB96 <AmiBlitz3.ab3@13448> RTS
0002BB98 <AmiBlitz3.ab3@13452>   MOVE.w D3,D1
0002BB9C <AmiBlitz3.ab3@13453>   CMP.w #7,d1
0002BBA0 <AmiBlitz3.ab3@13454>   BLE 'ok
0002BBA6 <AmiBlitz3.ab3@13455>   JMP errorinternalconvert
0002BBA8 <AmiBlitz3.ab3@13456> 'ok  SUBQ.w #1,D1
0002BBAC <AmiBlitz3.ab3@13457>   MULU #$7,D1
0002BBAE <AmiBlitz3.ab3@13458>   ADD.w D2,D1
0002BBB0 <AmiBlitz3.ab3@13459>   SUBQ.w #1,D1
0002BBB2 <AmiBlitz3.ab3@13460>   LSL.w #2,D1
0002BBB8 <AmiBlitz3.ab3@13461>   LEA convtable,A0
0002BBBC <AmiBlitz3.ab3@13462>   MOVE.l $0(A0,D1.W),D1
0002BBC0 <AmiBlitz3.ab3@13463>   BEQ.w JL_0_97A2
0002BBC2 <AmiBlitz3.ab3@13464>     MOVEA.l D1,A0
0002BBC6 <AmiBlitz3.ab3@13465>     CMP.b #$ff,d3
0002BBCA <AmiBlitz3.ab3@13466>     BEQ JL_0_97A2
0002BBCC <AmiBlitz3.ab3@13467> JMP (A0)
0002BBCE <AmiBlitz3.ab3@13470> RTS
0002BBD2 <AmiBlitz3.ab3@13473> usedfrom:  Ds.l 1
0002BBD6 <AmiBlitz3.ab3@13480>   CMP.w #"\",D0
0002BBDA <AmiBlitz3.ab3@13481>   BNE.w JL_0_97C2
0002BBDE <AmiBlitz3.ab3@13482>     CMP.b #"\",(a5)
0002BBE2 <AmiBlitz3.ab3@13483>     BNE 'first
0002BBE8 <AmiBlitz3.ab3@13484>       MOVE.l A5,usedfrom
0002BBEE <AmiBlitz3.ab3@13485>       LEA path2,A5
0002BBF2 <AmiBlitz3.ab3@13486> BRA 'g1
0002BBF4 <AmiBlitz3.ab3@13489>     SUBQ.w #1,A5
0002BBFA <AmiBlitz3.ab3@13490>   MOVE.l A5,usedfrom
0002BC00 <AmiBlitz3.ab3@13491>   LEA usedpath,A5                                          ;read path
0002BC04 <AmiBlitz3.ab3@13494>   BSR.w get1bytemain
0002BC0A <AmiBlitz3.ab3@13497>   CLR.w flagmask
0002BC0E <AmiBlitz3.ab3@13498>   CMP.w #$2A,D0
0002BC12 <AmiBlitz3.ab3@13499>    BNE.w JL_0_983A
0002BC1A <AmiBlitz3.ab3@13500>   MOVE.w #$0001,flagmask
0002BC1E <AmiBlitz3.ab3@13502>    BSR.w getparameter2
0002BC22 <AmiBlitz3.ab3@13505>    BEQ.w syntaxerr
0002BC26 <AmiBlitz3.ab3@13506>   CMP.w #$28,D0
0002BC2A <AmiBlitz3.ab3@13507>    BEQ.w JL_0_9830
0002BC2E <AmiBlitz3.ab3@13508>   CMP.w #$2E,D0
0002BC32 <AmiBlitz3.ab3@13509>    BEQ.w JL_0_980C
0002BC36 <AmiBlitz3.ab3@13510>   CMP.w #$24,D0
0002BC3A <AmiBlitz3.ab3@13511>    BNE.w JL_0_9838
0002BC42 <AmiBlitz3.ab3@13512>   ORI.w #$8,flagmask
0002BC46 <AmiBlitz3.ab3@13513>    BSR.w storeloc
0002BC4A <AmiBlitz3.ab3@13514>    BSR.w get1bytemain
0002BC4E <AmiBlitz3.ab3@13515> BRA.w JL_0_9822
0002BC52 <AmiBlitz3.ab3@13519>   BSR.w storeloc
0002BC54 <AmiBlitz3.ab3@13520>   MOVE.w D2,-(A7)
0002BC5A <AmiBlitz3.ab3@13521>   LEA namebuff2,A1
0002BC5E <AmiBlitz3.ab3@13522>    BSR.w makename3
0002BC62 <AmiBlitz3.ab3@13523>    BEQ.w syntaxerr
0002BC64 <AmiBlitz3.ab3@13524>   MOVE.w (A7)+,D2
0002BC66 <AmiBlitz3.ab3@13527>    MOVE.w D0,D1
0002BC6A <AmiBlitz3.ab3@13528>    BSR.w resloc
0002BC6E <AmiBlitz3.ab3@13529>    CMP.w #$28,D1
0002BC72 <AmiBlitz3.ab3@13530>    BNE.w JL_0_9838
0002BC7A <AmiBlitz3.ab3@13533>   ORI.w #$2,flagmask
0002BC7C <AmiBlitz3.ab3@13536> RTS
0002BC80 <AmiBlitz3.ab3@13540>   CMP.w #$40,D0
0002BC84 <AmiBlitz3.ab3@13541>    BNE.w JL_0_984E
0002BC8C <AmiBlitz3.ab3@13542>   MOVE.w #$0005,flagmask
0002BC90 <AmiBlitz3.ab3@13543> BRA.w JL_0_97D8
0002BC94 <AmiBlitz3.ab3@13547>   BSR.w makename2
0002BC98 <AmiBlitz3.ab3@13548> BRA.w JL_0_97DC
0002BC9C <AmiBlitz3.ab3@13552>   MOVE.w #$FED3,D1
0002BCA0 <AmiBlitz3.ab3@13553>    BSR.w uselib
0002BCA6 <AmiBlitz3.ab3@13554>   LEA pusha3,A0
0002BCAC <AmiBlitz3.ab3@13555>   LEA pusha3f,A1
0002BCB0 <AmiBlitz3.ab3@13556> BRA.w pokecode
0002BCB4 <AmiBlitz3.ab3@13560>   MOVE.w #$FED3,D1
0002BCB8 <AmiBlitz3.ab3@13561>    BSR.w uselib
0002BCBE <AmiBlitz3.ab3@13562>   LEA pulla3,A0
0002BCC4 <AmiBlitz3.ab3@13563>   LEA pulla3f,A1
0002BCC8 <AmiBlitz3.ab3@13564> BRA.w pokecode
0002BCCA <AmiBlitz3.ab3@13568> ceos:   Dc.b $42,$1B                                       ;CLR.B   (A3)+             ;*!
0002BCD2 <AmiBlitz3.ab3@13573>     CMP.b #2,optistring
0002BCD6 <AmiBlitz3.ab3@13574>    BEQ 'l10
0002BCDA <AmiBlitz3.ab3@13575>    MOVE.w ceos(PC),D1
0002BCDE <AmiBlitz3.ab3@13576>    BSR.w writeword                                         ;clr.b (a3)
0002BCE4 <AmiBlitz3.ab3@13579>   MOVE.w regnum,D1
0002BCE6 <AmiBlitz3.ab3@13580>   LSL.w #8,D1
0002BCE8 <AmiBlitz3.ab3@13581>   LSL.w #1,D1
0002BCF0 <AmiBlitz3.ab3@13582>   CMPI.w #$2,sbgot
0002BCF4 <AmiBlitz3.ab3@13583>    BCS.w JL_0_98E8
0002BCFA <AmiBlitz3.ab3@13584>   MOVE.w a2offset,D3                                       ;stackuse,d3 org source
0002BD00 <AmiBlitz3.ab3@13585>   SUB.w thisstuse,D3
0002BD04 <AmiBlitz3.ab3@13586>   CMP.w #$6,D3
0002BD08 <AmiBlitz3.ab3@13587>    BNE.w JL_0_98D4
0002BD0E <AmiBlitz3.ab3@13588>   OR.w movestst2,D1
0002BD12 <AmiBlitz3.ab3@13589>    BSR.w writeword
0002BD18 <AmiBlitz3.ab3@13590>   LEA movestst2+2,A0
0002BD1E <AmiBlitz3.ab3@13591>   LEA movestst2f,A1
0002BD22 <AmiBlitz3.ab3@13592> BRA.w pokecode2
0002BD28 <AmiBlitz3.ab3@13596>    OR.w movea7dn,D1
0002BD2C <AmiBlitz3.ab3@13597>    BSR.w writeword
0002BD32 <AmiBlitz3.ab3@13598>   MOVE.l movea7dn+2,D1
0002BD36 <AmiBlitz3.ab3@13610>   BSR writelong
0002BD3E <AmiBlitz3.ab3@13613>    CMP.w #6,regnum
0002BD42 <AmiBlitz3.ab3@13614>    BEQ 'l1
0002BD48 <AmiBlitz3.ab3@13615>    TST.w stackpar
0002BD4C <AmiBlitz3.ab3@13616>    BNE 'l1
0002BD52 <AmiBlitz3.ab3@13617>    TST.b funcparloop
0002BD56 <AmiBlitz3.ab3@13618>    BEQ 'l1
0002BD5C <AmiBlitz3.ab3@13619>    MOVE.l #$48780000,d1
0002BD60 <AmiBlitz3.ab3@13620>    BSR writelong
0002BD62 <AmiBlitz3.ab3@13624> RTS
0002BD64 <AmiBlitz3.ab3@13629>      MOVE.l d1,-(a7)
0002BD6C <AmiBlitz3.ab3@13630>      CMP.w #6,regnum
0002BD70 <AmiBlitz3.ab3@13631>      BEQ 'l1
0002BD76 <AmiBlitz3.ab3@13632>      TST.w stackpar
0002BD7A <AmiBlitz3.ab3@13633>      BNE 'l1
0002BD80 <AmiBlitz3.ab3@13634>      TST.b funcparloop
0002BD84 <AmiBlitz3.ab3@13635>      BEQ 'l1
0002BD8A <AmiBlitz3.ab3@13636>      MOVE.l #$48780000,d1
0002BD8E <AmiBlitz3.ab3@13637>      BSR writelong
0002BD90 <AmiBlitz3.ab3@13640>      MOVE.l (a7)+,d1
0002BD96 <AmiBlitz3.ab3@13642>    OR.w movestdn,D1
0002BD9A <AmiBlitz3.ab3@13643>    BSR.w writeword
0002BD9E <AmiBlitz3.ab3@13644>   MOVE.w #$FED3,D1
0002BDA2 <AmiBlitz3.ab3@13645>    BSR.w uselib
0002BDA6 <AmiBlitz3.ab3@13646>   MOVE.w $A(A1),D1
0002BDAA <AmiBlitz3.ab3@13647> BRA.w writeword
0002BDAC <AmiBlitz3.ab3@13650> unknown:    Ds.w 1
0002BDB2 <AmiBlitz3.ab3@13653> somecode:   Dc.b $0C,$80,$00,$01,$00,$00                   ;CMPI.L  #$00010000,D0
0002BDB6 <AmiBlitz3.ab3@13654> somecode2:  Dc.b $65,$00,$00,$08                           ;BCS.W   codeisok
0002BDBC <AmiBlitz3.ab3@13655>             Dc.b $4E,$B9,$00,$00,$00,$00                   ;JSR $00000000
0002BDC2 <AmiBlitz3.ab3@13661>   TST.b debugmode
0002BDC6 <AmiBlitz3.ab3@13662>   BEQ.w sharreval
0002BDCA <AmiBlitz3.ab3@13663>  BSR.w arreval
0002BDCE <AmiBlitz3.ab3@13666>   MOVE.w somecode(PC),D1
0002BDD4 <AmiBlitz3.ab3@13667>   OR.w regnum,D1
0002BDD8 <AmiBlitz3.ab3@13668>    BSR.w writeword
0002BDDA <AmiBlitz3.ab3@13669>   MOVEQ.l #$01,D1
0002BDDC <AmiBlitz3.ab3@13670>   SWAP D1
0002BDE0 <AmiBlitz3.ab3@13671>    BSR.w writelong
0002BDE4 <AmiBlitz3.ab3@13672>   MOVE.l somecode2(PC),D1
0002BDE8 <AmiBlitz3.ab3@13673>    BSR.w writelong
0002BDEC <AmiBlitz3.ab3@13674>   MOVE.w #$C309,D1
0002BDF0 <AmiBlitz3.ab3@13675> BRA.w Atokejsr
0002BDF2 <AmiBlitz3.ab3@13679>   MOVEQ.l #$02,D2
0002BDF4 <AmiBlitz3.ab3@13680>   MOVEQ.l #$00,D1
0002BDF6 <AmiBlitz3.ab3@13681>   MOVEQ.l #$00,D3
0002BDFA <AmiBlitz3.ab3@13682> BRA.w maineval2
0002BDFC <AmiBlitz3.ab3@13686>   MOVEQ.l #$03,D2
0002BDFE <AmiBlitz3.ab3@13687>   MOVEQ.l #$00,D1
0002BE00 <AmiBlitz3.ab3@13688>   MOVEQ.l #$00,D3
0002BE06 <AmiBlitz3.ab3@13689>   MOVE.b notypecheck,-(a7)
0002BE0E <AmiBlitz3.ab3@13690>   MOVE.b #1,notypecheck                                    ;typecheck need switch off for array offset calculation code
0002BE14 <AmiBlitz3.ab3@13691>   JSR maineval2
0002BE1A <AmiBlitz3.ab3@13692>   MOVE.b (a7)+,notypecheck                                 ;now its switch to old state
0002BE1C <AmiBlitz3.ab3@13693>   RTS
0002BE26 <AmiBlitz3.ab3@13697>   MOVE.w oldqflag,instringon
0002BE2C <AmiBlitz3.ab3@13698>   MOVEA.l lastsourcepos,A5
0002BE2E <AmiBlitz3.ab3@13699>   MOVEQ.l #-$01,D1
0002BE30 <AmiBlitz3.ab3@13700>   MOVEQ.l #-$01,D3
0002BE34 <AmiBlitz3.ab3@13701> BRA.w peval
0002BE3E <AmiBlitz3.ab3@13706>   MOVE.w oldqflag,instringon
0002BE44 <AmiBlitz3.ab3@13707>   MOVEA.l lastsourcepos,A5
0002BE46 <AmiBlitz3.ab3@13710>   MOVEQ.l #-$01,D1
0002BE48 <AmiBlitz3.ab3@13711>   MOVEQ.l #$00,D3
0002BE4E <AmiBlitz3.ab3@13712>   MOVE.l leftsidetype,-(a7)
0002BE54 <AmiBlitz3.ab3@13713>   MOVE.l rightsidetype,-(a7)
0002BE5A <AmiBlitz3.ab3@13714>   CLR.l leftsidetype
0002BE60 <AmiBlitz3.ab3@13715>   CLR.l rightsidetype
0002BE66 <AmiBlitz3.ab3@13716>   JSR maineval
0002BE6C <AmiBlitz3.ab3@13717>   MOVE.l (a7)+,rightsidetype
0002BE72 <AmiBlitz3.ab3@13718>   MOVE.l (a7)+,leftsidetype
0002BE74 <AmiBlitz3.ab3@13719>   RTS
0002BE7E <AmiBlitz3.ab3@13723>   MOVE.w oldqflag,instringon
0002BE84 <AmiBlitz3.ab3@13724>   MOVEA.l lastsourcepos,A5
0002BE86 <AmiBlitz3.ab3@13725>   MOVEQ.l #$00,D1
0002BE88 <AmiBlitz3.ab3@13726>   MOVEQ.l #-$01,D3
0002BE8C <AmiBlitz3.ab3@13727> BRA.w maineval
0002BE8E <AmiBlitz3.ab3@13731>   MOVEQ.l #$01,D1
0002BE90 <AmiBlitz3.ab3@13732>   MOVEQ.l #-$01,D3
0002BE94 <AmiBlitz3.ab3@13733> BRA.w maineval
0002BE9E <AmiBlitz3.ab3@13738>   MOVE.w oldqflag,instringon
0002BEA4 <AmiBlitz3.ab3@13739>   MOVEA.l lastsourcepos,A5
0002BEA6 <AmiBlitz3.ab3@13742>   MOVEQ.l #$00,D1                                        ;no push
0002BEA8 <AmiBlitz3.ab3@13743>   MOVEQ.l #$00,D3
0002BEB0 <AmiBlitz3.ab3@13764>    CMPI.w #$6,regnum
0002BEB4 <AmiBlitz3.ab3@13765>    BCS.w maineval2
0002BEB6 <AmiBlitz3.ab3@13766>    MOVEQ #0,d1
0002BEBC <AmiBlitz3.ab3@13767>    MOVE.l destpointer,a4
0002BEC2 <AmiBlitz3.ab3@13769>    CMPA.l destbufferend,A4
0002BEC6 <AmiBlitz3.ab3@13770>    BCC.w maineval__l2
0002BECC <AmiBlitz3.ab3@13772>    CMP.w #$2f0a,-2(a4)                                    ;bug is a move.l a2,-(a7) before (show temp calc)?
0002BED0 <AmiBlitz3.ab3@13774>    BNE maineval__l2
0002BED4 <AmiBlitz3.ab3@13778> BRA maineval__l1
0002BED6 <AmiBlitz3.ab3@13781>   MOVEQ.l #-$01,D1                                         ;do stackpar write
0002BEDE <AmiBlitz3.ab3@13784>   MOVE.w #$0006,regnum                                     ;write a func par To stack
0002BEE4 <AmiBlitz3.ab3@13787>   MOVE.w thisstuse,-(A7)
0002BEEE <AmiBlitz3.ab3@13788>   MOVE.w a2offset,thisstuse
0002BEF4 <AmiBlitz3.ab3@13789>   MOVE.w stackpar,-(A7)
0002BEFA <AmiBlitz3.ab3@13790>   MOVE.w D1,stackpar
0002BF00 <AmiBlitz3.ab3@13791>   MOVE.w sbgot,-(A7)
0002BF06 <AmiBlitz3.ab3@13792>   CLR.w sbgot
0002BF0A <AmiBlitz3.ab3@13793>   MOVE.w unknown(PC),-(A7)
0002BF10 <AmiBlitz3.ab3@13794>   MOVE.w D3,unknown
0002BF12 <AmiBlitz3.ab3@13795>   MOVE.w D2,-(a7)
0002BF18 <AmiBlitz3.ab3@13796>   MOVE.w d2,mode
0002BF1C <AmiBlitz3.ab3@13797>    BSR.w eval3
0002BF1E <AmiBlitz3.ab3@13798>   MOVE.w (a7)+,d3
0002BF22 <AmiBlitz3.ab3@13799>    BEQ.w maineval__noconv
0002BF26 <AmiBlitz3.ab3@13800>   MOVE.w unknown(PC),D1
0002BF2A <AmiBlitz3.ab3@13801>    BNE.w maineval__noconv
0002BF2C <AmiBlitz3.ab3@13802>   EXG.l D2,D3
0002BF2E <AmiBlitz3.ab3@13803>    MOVE.l a2,-(a7)
0002BF34 <AmiBlitz3.ab3@13804>    TST.b curtemplabel
0002BF38 <AmiBlitz3.ab3@13805>    BEQ maineval2__l10
0002BF3E <AmiBlitz3.ab3@13806>    MOVE.l asmbuff,a2
0002BF44 <AmiBlitz3.ab3@13807>    CMP.w #$c,$8(a2)
0002BF48 <AmiBlitz3.ab3@13808>    BEQ maineval2__l20
0002BF4E <AmiBlitz3.ab3@13809>    CMP.w #$d,$8(a2)
0002BF52 <AmiBlitz3.ab3@13810>    BEQ maineval2__l20
0002BF54 <AmiBlitz3.ab3@13813>   CMP.w d2,d3
0002BF58 <AmiBlitz3.ab3@13814>   BEQ maineval2__l20
0002BF5C <AmiBlitz3.ab3@13815>   BSR.w writeconvertcode
0002BF62 <AmiBlitz3.ab3@13816>   CLR.b doimmediate
0002BF64 <AmiBlitz3.ab3@13819>   MOVE.l (a7)+,a2
0002BF6A <AmiBlitz3.ab3@13822>   MOVE.w (A7)+,unknown
0002BF70 <AmiBlitz3.ab3@13823>   MOVE.w stackpar,D1
0002BF74 <AmiBlitz3.ab3@13824>    BEQ.w maineval__skipme
0002BF78 <AmiBlitz3.ab3@13825>    BMI.w maineval__skipme
0002BF7E <AmiBlitz3.ab3@13829>   MOVE.w regnum,D1
0002BF80 <AmiBlitz3.ab3@13830>   LSL.w #8,D1
0002BF82 <AmiBlitz3.ab3@13831>   LSL.w #1,D1
0002BF86 <AmiBlitz3.ab3@13832>   CMP.w #$7,D2
0002BF8A <AmiBlitz3.ab3@13833>    BNE.w maineval__hi1
0002BF92 <AmiBlitz3.ab3@13834>    CMP.b #2,optistring
0002BF96 <AmiBlitz3.ab3@13835>    BEQ maineval__hi1a
0002BF98 <AmiBlitz3.ab3@13836>   MOVE.w D1,-(A7)
0002BF9E <AmiBlitz3.ab3@13837>   OR.w getstlen,D1
0002BFA2 <AmiBlitz3.ab3@13838>    BSR.w writeword
0002BFA4 <AmiBlitz3.ab3@13839>   MOVE.w (A7)+,D1
0002BFAA <AmiBlitz3.ab3@13842>   ADDQ.w #2,a2offset                                        ;lib mode to stack
0002BFAE <AmiBlitz3.ab3@13846>   MOVE.w #$3f3c,d1
0002BFB2 <AmiBlitz3.ab3@13847>    BSR.w writeword
0002BFB4 <AmiBlitz3.ab3@13851>   MOVE.w d2,d1
0002BFBA <AmiBlitz3.ab3@13852>   MOVE.w d1,libmode
0002BFBE <AmiBlitz3.ab3@13853>    BSR.w writeword
0002BFC2 <AmiBlitz3.ab3@13854>   CMP.w #$7,D2
0002BFC6 <AmiBlitz3.ab3@13855>    BNE.w maineval__skipme
0002BFCC <AmiBlitz3.ab3@13856>   MOVE.w putstlen,D1
0002BFD2 <AmiBlitz3.ab3@13857>   OR.w regnum,D1
0002BFD6 <AmiBlitz3.ab3@13858>    BSR.w writeword
0002BFDA <AmiBlitz3.ab3@13861>    CMP.w #$7,D2
0002BFDE <AmiBlitz3.ab3@13862>    BNE.w maineval__notst
0002BFE6 <AmiBlitz3.ab3@13873>    CMP.b #2,optistring
0002BFEA <AmiBlitz3.ab3@13874>    BEQ maineval__skipme_l10
0002BFF0 <AmiBlitz3.ab3@13875>    ADDQ.w #4,a2offset                                      ;a length on da stack.....
0002BFF4 <AmiBlitz3.ab3@13876>    BSR.w sbtolong
0002BFF8 <AmiBlitz3.ab3@13877> BRA.w maineval__notst2
0002C000 <AmiBlitz3.ab3@13881>     CMP.w #6,regnum
0002C004 <AmiBlitz3.ab3@13882>     BEQ maineval__skipme_l10_l1
0002C00A <AmiBlitz3.ab3@13883>     TST.b funcparloop
0002C00E <AmiBlitz3.ab3@13884>     BEQ maineval__skipme_l10_l1
0002C014 <AmiBlitz3.ab3@13885>     MOVE.l #$48780000,d1
0002C018 <AmiBlitz3.ab3@13886>     BSR writelong
0002C01C <AmiBlitz3.ab3@13889> BRA.w maineval__notst2
0002C022 <AmiBlitz3.ab3@13892>   ADDQ.w #2,a2offset
0002C026 <AmiBlitz3.ab3@13893> BRA maineval__skipme
0002C02E <AmiBlitz3.ab3@13896>   CMPI.w #$2,sbgot
0002C032 <AmiBlitz3.ab3@13897>    BCS.w maineval__notst2                                         ;correct stack
0002C036 <AmiBlitz3.ab3@13898>   MOVE.w ststfix(PC),D1
0002C03A <AmiBlitz3.ab3@13899>    BSR.w writeword
0002C040 <AmiBlitz3.ab3@13902>   MOVE.w (A7)+,sbgot
0002C046 <AmiBlitz3.ab3@13903>   MOVE.w stackpar,D1
0002C04A <AmiBlitz3.ab3@13904>    BPL.w maineval__skip
0002C04E <AmiBlitz3.ab3@13905>    CMP.b #7,d2
0002C052 <AmiBlitz3.ab3@13906>    BEQ maineval__notst2_l1
0002C058 <AmiBlitz3.ab3@13907>   TST.b funcparloop
0002C05C <AmiBlitz3.ab3@13908>   BEQ maineval__notst2_l1
0002C060 <AmiBlitz3.ab3@13909>   CMP.b #5,d2
0002C064 <AmiBlitz3.ab3@13910>   BNE maineval__notst2_skip
0002C06A <AmiBlitz3.ab3@13911>   TST.b fpu
0002C06E <AmiBlitz3.ab3@13912>   BEQ maineval__notst2_skip
0002C074 <AmiBlitz3.ab3@13913>   MOVE.l #$f2066700,d1                                     ;fmove.s fp6,d6
0002C07A <AmiBlitz3.ab3@13914>   JSR writelong
0002C07E <AmiBlitz3.ab3@13917>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0002C084 <AmiBlitz3.ab3@13918>   ADD.w parnum,d1
0002C08A <AmiBlitz3.ab3@13919>   JSR Atokejsr
0002C090 <AmiBlitz3.ab3@13920>    TST.w dontwrite
0002C094 <AmiBlitz3.ab3@13921>    BNE maineval__notst2_l1
0002C09A <AmiBlitz3.ab3@13922>    MOVE.l data1start,d1
0002C0A0 <AmiBlitz3.ab3@13923>    MOVE.l destpointer,a4
0002C0A4 <AmiBlitz3.ab3@13924>    ADD.l d1,-4(a4)
0002C0AA <AmiBlitz3.ab3@13925>    MOVE.l destpointer,d1
0002C0AC <AmiBlitz3.ab3@13926>    SUBQ.l #4,d1
0002C0B2 <AmiBlitz3.ab3@13927>    SUB.l destbufferstart,d1
0002C0B4 <AmiBlitz3.ab3@13928>    MOVE.l d2,-(a7)
0002C0B6 <AmiBlitz3.ab3@13929>    MOVE.l d1,d2
0002C0BC <AmiBlitz3.ab3@13930>    JSR addhunkoffset
0002C0BE <AmiBlitz3.ab3@13931>    MOVE.l (a7)+,d2
0002C0C2 <AmiBlitz3.ab3@13932> BRA maineval__skip
0002C0C8 <AmiBlitz3.ab3@13935>   ADDQ.w #2,a2offset
0002C0CE <AmiBlitz3.ab3@13936>   MOVE.w pushd0wd,D1
0002C0D2 <AmiBlitz3.ab3@13937>   CMP.w #$3,D2                                             ;write parameter to stack
0002C0D6 <AmiBlitz3.ab3@13938>    BCS.w maineval__ok
0002C0DC <AmiBlitz3.ab3@13939>   ADDQ.w #2,a2offset
0002C0E2 <AmiBlitz3.ab3@13940>   TST.b fpu
0002C0E6 <AmiBlitz3.ab3@13941>   BEQ maineval__notst2_nofpu
0002C0EA <AmiBlitz3.ab3@13942>   CMP.w #5,d2
0002C0EE <AmiBlitz3.ab3@13943>   BNE maineval__notst2_nofpu
0002C0F0 <AmiBlitz3.ab3@13944>   MOVEQ #0,d1
0002C0F6 <AmiBlitz3.ab3@13945>   MOVE.w regnum,d1
0002C0F8 <AmiBlitz3.ab3@13946>   ASL.l #7,d1
0002C0FE <AmiBlitz3.ab3@13947>   OR.l #$f2276400,d1
0002C102 <AmiBlitz3.ab3@13948>   BSR writelong
0002C106 <AmiBlitz3.ab3@13949> BRA maineval__skip
0002C10C <AmiBlitz3.ab3@13952>   MOVE.w pushd0l,D1
0002C112 <AmiBlitz3.ab3@13955>    OR.w regnum,D1
0002C116 <AmiBlitz3.ab3@13956>    BSR.w writeword                                         ;nat
0002C11C <AmiBlitz3.ab3@13959>   MOVE.w (A7)+,stackpar
0002C122 <AmiBlitz3.ab3@13960>   MOVE.w (A7)+,thisstuse
0002C124 <AmiBlitz3.ab3@13961> RTS
0002C126 <AmiBlitz3.ab3@13964> thisstuse: Ds.w 1
0002C128 <AmiBlitz3.ab3@13967> ststfix:   Dc.b $58,$4F                                    ;ADDQ.W  #4,A7
0002C12A <AmiBlitz3.ab3@13968> pushut:    Dc.b $3F,$00                                    ;MOVE.W  D0,-(A7)
0002C12E <AmiBlitz3.ab3@13973>   BSR.w eval4
0002C138 <AmiBlitz3.ab3@13974>   SUBI.l #$12,forthsp
0002C13A <AmiBlitz3.ab3@13975> RTS
0002C13C <AmiBlitz3.ab3@13979>   MOVEQ.l #$01,D1
0002C140 <AmiBlitz3.ab3@13981>       MOVEA.l precsp(PC),A1
0002C142 <AmiBlitz3.ab3@13982>       MOVE.l A0,(A1)+
0002C144 <AmiBlitz3.ab3@13983>       MOVE.w D1,(A1)+
0002C14A <AmiBlitz3.ab3@13984>       MOVE.l A1,precsp
0002C14E <AmiBlitz3.ab3@13985>    BSR.w calcloop
0002C150 <AmiBlitz3.ab3@13986>   TST.w D1
0002C154 <AmiBlitz3.ab3@13987>    BNE.w syntaxerr
0002C15A <AmiBlitz3.ab3@13988>   SUBQ.l #6,precsp                                      ;pop the prec set up
0002C15C <AmiBlitz3.ab3@13989> RTS
0002C160 <AmiBlitz3.ab3@13994>   BSR.w JL_0_9C24
0002C164 <AmiBlitz3.ab3@13997>   MOVEA.l precsp(PC),A1
0002C166 <AmiBlitz3.ab3@13998>   CMP.w -(A1),D1
0002C16A <AmiBlitz3.ab3@13999>    BHI.w JL_0_9B0A
0002C16C <AmiBlitz3.ab3@14000> RTS
0002C170 <AmiBlitz3.ab3@14005>   MOVEA.l precsp(PC),A1
0002C172 <AmiBlitz3.ab3@14006>   MOVE.l A0,(A1)+
0002C174 <AmiBlitz3.ab3@14007>   MOVE.w D1,(A1)+
0002C17A <AmiBlitz3.ab3@14008>   MOVE.l A1,precsp
0002C17C <AmiBlitz3.ab3@14009>   MOVE.w D2,-(A7)
0002C182 <AmiBlitz3.ab3@14010>   ADDQ.w #1,regnum
0002C186 <AmiBlitz3.ab3@14011>    BSR.w calcloop               ;constant optimizer
0002C18C <AmiBlitz3.ab3@14012>   SUBQ.w #1,regnum
0002C18E <AmiBlitz3.ab3@14013>   MOVE.w (A7)+,D3
0002C192 <AmiBlitz3.ab3@14014>   MOVEM.l D1/A0,-(A7)
0002C196 <AmiBlitz3.ab3@14015>    BEQ.w JL_0_9B2E
0002C19A <AmiBlitz3.ab3@14016>    BSR.w JL_0_9770
0002C19E <AmiBlitz3.ab3@14019>   BSR.w popprec
0002C1A2 <AmiBlitz3.ab3@14020>   BSR.w writecode
0002C1A6 <AmiBlitz3.ab3@14021>   MOVEA.l forthsp(PC),A0
0002C1AA <AmiBlitz3.ab3@14022>   MOVE.w -$2(A0),D1
0002C1AE <AmiBlitz3.ab3@14023>   OR.w -$14(A0),D1
0002C1B2 <AmiBlitz3.ab3@14024>   MOVE.w D1,-$14(A0)
0002C1B6 <AmiBlitz3.ab3@14025>    BNE.w JL_0_9C0E
0002C1BC <AmiBlitz3.ab3@14026>   MOVE.w dontwrite,D1
0002C1C0 <AmiBlitz3.ab3@14027>    BNE.w JL_0_9C0E
0002C1C4 <AmiBlitz3.ab3@14028>    MOVEA.l -$24(A0),A0
0002C300 <AmiBlitz3.ab3@14030>  !newcalc
0002C304 <AmiBlitz3.ab3@14031>    BEQ 'l10
0002C308 <AmiBlitz3.ab3@14032>    MOVEA.l forthsp(PC),A0
0002C310 <AmiBlitz3.ab3@14033>    MOVE.w -$18(A0),lasta6
0002C318 <AmiBlitz3.ab3@14034>    MOVE.l -$1C(A0),lasta6
0002C31C <AmiBlitz3.ab3@14035>    MOVEA.l -$24(A0),A0
0002C322 <AmiBlitz3.ab3@14036>    MOVE.l A0,destpointer
0002C328 <AmiBlitz3.ab3@14037>    MOVEA.l _mathffpbase,A6
0002C32E <AmiBlitz3.ab3@14038>    MOVEA.l ffplib,A1
0002C332 <AmiBlitz3.ab3@14039> BRA cont1
0002C336 <AmiBlitz3.ab3@14042>   MOVE.w #$2000,D1
0002C33C <AmiBlitz3.ab3@14043>   OR.w regnum,D1
0002C340 <AmiBlitz3.ab3@14044>    BSR.w writeword
0002C342 <AmiBlitz3.ab3@14045>     MOVEQ #0,d1
0002C348 <AmiBlitz3.ab3@14046>     MOVE.w regnum,D1
0002C34A <AmiBlitz3.ab3@14047>     ASL.l #8,d1
0002C34C <AmiBlitz3.ab3@14048>     ASL.l #2,d1
0002C352 <AmiBlitz3.ab3@14049>     OR.l #$f2000000,d1
0002C356 <AmiBlitz3.ab3@14050>     BSR writelong
0002C35A <AmiBlitz3.ab3@14051>   MOVE.w #$4E75,D1
0002C35E <AmiBlitz3.ab3@14052>    BSR.w writeword
0002C366 <AmiBlitz3.ab3@14053>   MOVE.w -$18(A0),lasta6
0002C36E <AmiBlitz3.ab3@14054>   MOVE.l -$1C(A0),lasta6
0002C372 <AmiBlitz3.ab3@14055>   MOVEA.l -$24(A0),A0
0002C378 <AmiBlitz3.ab3@14056>   MOVE.l A0,destpointer
0002C37C <AmiBlitz3.ab3@14057>   MOVEM.l D2/A5,-(A7)
0002C382 <AmiBlitz3.ab3@14058>   MOVEA.l _mathffpbase,A6
0002C388 <AmiBlitz3.ab3@14059>   MOVEA.l ffplib,A1
0002C38C <AmiBlitz3.ab3@14060>   MOVE.w $A(A1),D0
0002C392 <AmiBlitz3.ab3@14061>   LEA _mathffpbase,A5
0002C394 <AmiBlitz3.ab3@14062>   SUBA.w D0,A5
0002C39A <AmiBlitz3.ab3@14063>   JSR Aclearcache                                          ;neg +
0002C3A0 <AmiBlitz3.ab3@14064>   CLR.l load_var_addr
0002C3A6 <AmiBlitz3.ab3@14065>   CLR.l imm_addr
0002C3AC <AmiBlitz3.ab3@14066>   TST.w dontwrite
0002C3B0 <AmiBlitz3.ab3@14067>   BNE '1
0002C3B2 <AmiBlitz3.ab3@14068>   JSR (A0)                                                 ;calc constant inline expression
0002C3B6 <AmiBlitz3.ab3@14071>   MOVEM.l (A7)+,D2/A5
0002C3BC <AmiBlitz3.ab3@14074>   MOVE.b d2,isconstantvalue
0002C3C2 <AmiBlitz3.ab3@14075>   MOVE.l d0,lastconstantvalue
0002C3C8 <AmiBlitz3.ab3@14076>   MOVE.w regnum,D1
0002C3CA <AmiBlitz3.ab3@14077>   LSL.w #8,D1
0002C3CC <AmiBlitz3.ab3@14078>   LSL.w #1,D1
0002C3D0 <AmiBlitz3.ab3@14079>   ORI.w #$203C,D1
0002C3D4 <AmiBlitz3.ab3@14080>   CMP.w #$3,D2
0002C3D8 <AmiBlitz3.ab3@14081>    BCC.w JL_0_9BCE
0002C3DC <AmiBlitz3.ab3@14082>   ORI.w #$1000,D1
0002C3E0 <AmiBlitz3.ab3@14083>    BSR.w writeword
0002C3E2 <AmiBlitz3.ab3@14084>   MOVE.w D0,D1
0002C3E6 <AmiBlitz3.ab3@14085>    BSR.w writeword
0002C3EA <AmiBlitz3.ab3@14086> BRA.w JL_0_9BD8
0002C3F0 <AmiBlitz3.ab3@14090>   TST.b iee                                                ;fpu constant
0002C3F4 <AmiBlitz3.ab3@14091>   BEQ 'l10
0002C3F8 <AmiBlitz3.ab3@14092>   CMP.b #5,d2
0002C3FC <AmiBlitz3.ab3@14093>   BNE 'l10
0002C3FE <AmiBlitz3.ab3@14094>   MOVEQ #0,d1
0002C404 <AmiBlitz3.ab3@14095>   MOVE.w regnum,D1
0002C406 <AmiBlitz3.ab3@14096>   ASL.l #7,d1
0002C40C <AmiBlitz3.ab3@14097>   OR.l #$f23c5400,d1
0002C410 <AmiBlitz3.ab3@14098>   BSR writelong
0002C412 <AmiBlitz3.ab3@14099>   SUBQ.l #8,a7
0002C418 <AmiBlitz3.ab3@14100>   fmove.d fp0,0(a7)
0002C41A <AmiBlitz3.ab3@14101>   MOVE.l (a7)+,d1
0002C41E <AmiBlitz3.ab3@14102>   BSR writelong
0002C420 <AmiBlitz3.ab3@14103>   MOVE.l (a7)+,d1
0002C424 <AmiBlitz3.ab3@14104>   BSR writelong
0002C428 <AmiBlitz3.ab3@14105> BRA JL_0_9BD8
0002C42C <AmiBlitz3.ab3@14108>   BSR.w writeword
0002C42E <AmiBlitz3.ab3@14109>   MOVE.l D0,D1
0002C432 <AmiBlitz3.ab3@14110>   BSR.w writelong
0002C436 <AmiBlitz3.ab3@14113>   MOVEA.l forthsp(PC),A0
0002C43A <AmiBlitz3.ab3@14114>   MOVEA.l -$20(A0),A3
0002C440 <AmiBlitz3.ab3@14115>   MOVEA.l hunkoffsetbase,A2
0002C446 <AmiBlitz3.ab3@14116>   MOVE.l A3,hunkoffsetbase
0002C44C <AmiBlitz3.ab3@14117>   MOVEA.l _execbase,A6
0002C44E <AmiBlitz3.ab3@14120>   CMPA.l A3,A2
0002C452 <AmiBlitz3.ab3@14121>   BEQ.w JL_0_9C0A
0002C458 <AmiBlitz3.ab3@14122>   SUBQ.l #1,hunkoffsetcounter
0002C45A <AmiBlitz3.ab3@14123>   MOVEA.l A2,A1
0002C45C <AmiBlitz3.ab3@14124>   MOVEA.l (A2),A2
0002C45E <AmiBlitz3.ab3@14125>   MOVEQ.l #$8,D0
0002C464 <AmiBlitz3.ab3@14126>   MOVE.l mempool2,a0
0002C468 <AmiBlitz3.ab3@14127>    JSR _FreePooled(A6)
0002C46C <AmiBlitz3.ab3@14128> BRA.w JL_0_9BF0
0002C470 <AmiBlitz3.ab3@14132>   MOVEA.l forthsp(PC),A0
0002C474 <AmiBlitz3.ab3@14135>   LEA -$12(A0),A0
0002C47A <AmiBlitz3.ab3@14136>   MOVE.l A0,forthsp
0002C47E <AmiBlitz3.ab3@14137>   MOVEM.l (A7)+,D1/A0
0002C482 <AmiBlitz3.ab3@14138>   BSR.w reget
0002C486 <AmiBlitz3.ab3@14139> BRA.w JL_0_9AFE
0002C48A <AmiBlitz3.ab3@14143>   BSR.w JL_0_A386
0002C48C <AmiBlitz3.ab3@14144>   TST.w d0
0002C490 <AmiBlitz3.ab3@14145>   BEQ JL_0_9C42
0002C494 <AmiBlitz3.ab3@14146>   CMP.b #",",d0
0002C498 <AmiBlitz3.ab3@14147>   BEQ JL_0_9C42
0002C49C <AmiBlitz3.ab3@14148>   CMP.b #"@",d0                                            ;expandline @@
0002C4A0 <AmiBlitz3.ab3@14149>   BEQ JL_0_9C42
0002C4A6 <AmiBlitz3.ab3@14150>   LEA operators,A0
0002C4A8 <AmiBlitz3.ab3@14153>    TST.w (A0)
0002C4AC <AmiBlitz3.ab3@14154>    BEQ.w JL_0_9C42
0002C4AE <AmiBlitz3.ab3@14155>   CMP.w (A0),D0
0002C4B2 <AmiBlitz3.ab3@14156>    BEQ.w JL_0_9C46a
0002C4B6 <AmiBlitz3.ab3@14157>   LEA $20(A0),A0
0002C4BA <AmiBlitz3.ab3@14158> BRA.w JL_0_9C2E
0002C4BC <AmiBlitz3.ab3@14162>   MOVEQ.l #$00,D1
0002C4BE <AmiBlitz3.ab3@14163> RTS
0002C4C2 <AmiBlitz3.ab3@14167>   CMP.w #$3C,D0
0002C4C6 <AmiBlitz3.ab3@14168>    BNE.w JL_0_9C70
0002C4CA <AmiBlitz3.ab3@14169>    BSR.w get1bytemain
0002C4CE <AmiBlitz3.ab3@14170>   CMP.w #$3D,D0
0002C4D2 <AmiBlitz3.ab3@14171>    BNE.w JL_0_9C64
0002C4D8 <AmiBlitz3.ab3@14172>   LEA ople,A0
0002C4DC <AmiBlitz3.ab3@14173> BRA.w JL_0_9CCA
0002C4E0 <AmiBlitz3.ab3@14177>   CMP.w #$3E,D0
0002C4E4 <AmiBlitz3.ab3@14178>    BNE.w JL_0_9C96
0002C4E8 <AmiBlitz3.ab3@14179> BRA.w JL_0_9CC4
0002C4EC <AmiBlitz3.ab3@14183>   CMP.w #$3E,D0
0002C4F0 <AmiBlitz3.ab3@14184>    BNE.w JL_0_9C9E
0002C4F4 <AmiBlitz3.ab3@14185>    BSR.w get1bytemain
0002C4F8 <AmiBlitz3.ab3@14186>   CMP.w #$3D,D0
0002C4FC <AmiBlitz3.ab3@14187>    BNE.w JL_0_9C8E
0002C502 <AmiBlitz3.ab3@14188>   LEA opge,A0
0002C506 <AmiBlitz3.ab3@14189> BRA.w JL_0_9CCA
0002C50A <AmiBlitz3.ab3@14193>   CMP.w #$3C,D0
0002C50E <AmiBlitz3.ab3@14194>    BEQ.w JL_0_9CC4
0002C518 <AmiBlitz3.ab3@14198>     MOVE.w oldqflag,instringon
0002C51E <AmiBlitz3.ab3@14199>     MOVEA.l lastsourcepos,A5
0002C522 <AmiBlitz3.ab3@14200> BRA.w JL_0_9CCA
0002C526 <AmiBlitz3.ab3@14204>   CMP.w #$3D,D0
0002C52A <AmiBlitz3.ab3@14205>    BNE.w JL_0_9CCA
0002C52E <AmiBlitz3.ab3@14206>    BSR.w get1bytemain
0002C532 <AmiBlitz3.ab3@14207>   CMP.w #$3E,D0
0002C536 <AmiBlitz3.ab3@14208>    BNE.w JL_0_9CBC
0002C53C <AmiBlitz3.ab3@14209>   LEA opge,A0
0002C540 <AmiBlitz3.ab3@14210> BRA.w JL_0_9CCA
0002C544 <AmiBlitz3.ab3@14214>   CMP.w #$3C,D0
0002C548 <AmiBlitz3.ab3@14215>   BNE.w JL_0_9C96
0002C54E <AmiBlitz3.ab3@14218>   LEA opne,A0
0002C552 <AmiBlitz3.ab3@14221>   MOVE.w $1E(A0),D1
0002C554 <AmiBlitz3.ab3@14222> RTS
0002C556 <AmiBlitz3.ab3@14229>   MOVE.w d2,d1
0002C558 <AmiBlitz3.ab3@14230>   SUBQ.w #1,D1
0002C55C <AmiBlitz3.ab3@14231>    BMI.w illoperr
0002C55E <AmiBlitz3.ab3@14232>   LSL.w #2,D1
0002C562 <AmiBlitz3.ab3@14233>   MOVE.l $2(A0,D1.W),D1
0002C566 <AmiBlitz3.ab3@14234>    BEQ.w illoperr
0002C568 <AmiBlitz3.ab3@14235>   MOVEA.l D1,A0
0002C56A <AmiBlitz3.ab3@14238> JMP (A0)
0002C56E <AmiBlitz3.ab3@14254>   MOVEA.l precsp(PC),A1
0002C574 <AmiBlitz3.ab3@14255>   CMPA.l #precstackf,A1
0002C578 <AmiBlitz3.ab3@14256>    BCC.w pserr
0002C57A <AmiBlitz3.ab3@14257>   MOVE.w -(A1),D1
0002C57C <AmiBlitz3.ab3@14258>   MOVEA.l -(A1),A0
0002C582 <AmiBlitz3.ab3@14259>   MOVE.l A1,precsp
0002C584 <AmiBlitz3.ab3@14260> RTS
0002C588 <AmiBlitz3.ab3@14263> precsp:      Dc.l precstack
0002C684 <AmiBlitz3.ab3@14264> precstack:   Ds.l 63                                       ;ds 6*32 org source   ;Lotsa Room?
0002C708 <AmiBlitz3.ab3@14265>              Ds.l 33
0002C70A <AmiBlitz3.ab3@14271> mseq:  SEQ D0
0002C70C <AmiBlitz3.ab3@14272> msne:    SNE D0
0002C70E <AmiBlitz3.ab3@14273> mslt:    SLT D0
0002C710 <AmiBlitz3.ab3@14274> msle:    SLE D0
0002C712 <AmiBlitz3.ab3@14275> msgt:    SGT D0
0002C714 <AmiBlitz3.ab3@14276> msge:    SGE D0
0002C716 <AmiBlitz3.ab3@14278> cmp0:    CMP.b D0,D0
0002C718 <AmiBlitz3.ab3@14279> cmp1:    CMP.w D0,D0
0002C71A <AmiBlitz3.ab3@14280> cmp2:    CMP.l D0,D0
0002C71E <AmiBlitz3.ab3@14284>   MOVE.w cmp0(PC),D1
0002C722 <AmiBlitz3.ab3@14285> BRA.w doeqcmp2                                            ;writecompare
0002C726 <AmiBlitz3.ab3@14289>   MOVE.w cmp0(PC),D1
0002C72A <AmiBlitz3.ab3@14290> BRA.w donecmp2
0002C72E <AmiBlitz3.ab3@14294>   MOVE.w cmp0(PC),D1
0002C732 <AmiBlitz3.ab3@14295> BRA.w doltcmp2
0002C736 <AmiBlitz3.ab3@14299>   MOVE.w cmp0(PC),D1
0002C73A <AmiBlitz3.ab3@14300> BRA.w dolecmp2
0002C73E <AmiBlitz3.ab3@14304>   MOVE.w cmp0(PC),D1
0002C742 <AmiBlitz3.ab3@14305> BRA.w dogtcmp2
0002C746 <AmiBlitz3.ab3@14310>   MOVE.w cmp0(PC),D1
0002C74A <AmiBlitz3.ab3@14311> BRA.w dogecmp2
0002C74E <AmiBlitz3.ab3@14315>   MOVE.w cmp1(PC),D1
0002C752 <AmiBlitz3.ab3@14316> BRA.w doeqcmp2
0002C756 <AmiBlitz3.ab3@14320>   MOVE.w cmp1(PC),D1
0002C75A <AmiBlitz3.ab3@14321> BRA.w donecmp2
0002C75E <AmiBlitz3.ab3@14325>   MOVE.w cmp1(PC),D1
0002C762 <AmiBlitz3.ab3@14326> BRA.w doltcmp2
0002C766 <AmiBlitz3.ab3@14330>   MOVE.w cmp1(PC),D1
0002C76A <AmiBlitz3.ab3@14331> BRA.w dolecmp2
0002C76E <AmiBlitz3.ab3@14335>   MOVE.w cmp1(PC),D1
0002C772 <AmiBlitz3.ab3@14336> BRA.w dogtcmp2
0002C776 <AmiBlitz3.ab3@14341>   MOVE.w cmp1(PC),D1
0002C77A <AmiBlitz3.ab3@14342> BRA.w dogecmp2
0002C77E <AmiBlitz3.ab3@14346>   MOVE.w cmp2(PC),D1                                   ;writecomparelong
0002C782 <AmiBlitz3.ab3@14347> BRA doeqcmp2
0002C786 <AmiBlitz3.ab3@14350>   MOVE.w cmp2(PC),D1
0002C78A <AmiBlitz3.ab3@14351> BRA donecmp2
0002C78E <AmiBlitz3.ab3@14355>   MOVE.w cmp2(PC),D1
0002C792 <AmiBlitz3.ab3@14356> BRA.w doltcmp2
0002C796 <AmiBlitz3.ab3@14360>   MOVE.w cmp2(PC),D1
0002C79A <AmiBlitz3.ab3@14361> BRA.w dolecmp2
0002C79E <AmiBlitz3.ab3@14365>   MOVE.w cmp2(PC),D1
0002C7A2 <AmiBlitz3.ab3@14366> BRA.w dogtcmp2
0002C7A6 <AmiBlitz3.ab3@14370>   MOVE.w cmp2(PC),D1
0002C7AA <AmiBlitz3.ab3@14371> BRA.w dogecmp2
0002C7AC <AmiBlitz3.ab3@14374> cfregat:  Ds.w 1
0002C7B2 <AmiBlitz3.ab3@14378>   MOVE.w D1,libjsr+2
0002C7B6 <AmiBlitz3.ab3@14379>    BSR.w JL_0_AD40
0002C7B8 <AmiBlitz3.ab3@14380>   MOVE.l D4,D1
0002C7BC <AmiBlitz3.ab3@14381>    BSR.w JL_0_AD38
0002C7C0 <AmiBlitz3.ab3@14382>   MOVE.w #$C900,D1
0002C7C4 <AmiBlitz3.ab3@14383>    BSR.w Atokejsr
0002C7C8 <AmiBlitz3.ab3@14384>    BSR.w JL_0_A352
0002C7CE <AmiBlitz3.ab3@14385>   MOVE.l libjsr,D1
0002C7D2 <AmiBlitz3.ab3@14386>    BSR.w writelong
0002C7DC <AmiBlitz3.ab3@14387>   MOVE.w regnum,cfregat
0002C7E2 <AmiBlitz3.ab3@14388>   CLR.w regnum
0002C7E4 <AmiBlitz3.ab3@14389> RTS
0002C7EE <AmiBlitz3.ab3@14393>   MOVE.w cfregat,regnum
0002C7F2 <AmiBlitz3.ab3@14394>    BSR.w JL_0_A36E
0002C7F4 <AmiBlitz3.ab3@14395>   MOVE.l D5,D1
0002C7F8 <AmiBlitz3.ab3@14396> BRA.w JL_0_AD38
0002C7FA <AmiBlitz3.ab3@14400>    MOVEQ.l #-$2A,D1
0002C800 <AmiBlitz3.ab3@14401>    TST.b fpu
0002C804 <AmiBlitz3.ab3@14402>    BEQ do_equal_float__nofpu
0002C806 <AmiBlitz3.ab3@14403>    MOVEQ #0,d1
0002C80C <AmiBlitz3.ab3@14404>    MOVE.w regnum,d1
0002C80E <AmiBlitz3.ab3@14405>    MOVE.l d1,d2
0002C810 <AmiBlitz3.ab3@14406>    ASL.l #7,d1
0002C812 <AmiBlitz3.ab3@14407>    ADDQ  #1,d2
0002C814 <AmiBlitz3.ab3@14408>    ASL.l #8,d2
0002C816 <AmiBlitz3.ab3@14409>    ASL.l #2,d2
0002C818 <AmiBlitz3.ab3@14410>    OR.l d2,d1
0002C81E <AmiBlitz3.ab3@14411>    OR.l #$f2000038,d1
0002C824 <AmiBlitz3.ab3@14412>    JSR writelong
0002C828 <AmiBlitz3.ab3@14413>    MOVE.w #$f240,d1
0002C82E <AmiBlitz3.ab3@14414>    OR.w regnum,d1
0002C832 <AmiBlitz3.ab3@14415>    BSR writeword
0002C834 <AmiBlitz3.ab3@14416>    MOVEQ.l #1,d2
0002C838 <AmiBlitz3.ab3@14417>    MOVE.w #1,d1                                            ;fpu comp fseq
0002C83C <AmiBlitz3.ab3@14418>    BSR writeword
0002C83E <AmiBlitz3.ab3@14419> RTS
0002C842 <AmiBlitz3.ab3@14422>    BSR.w docflib
0002C846 <AmiBlitz3.ab3@14423>    BSR.w doeqcmp
0002C84A <AmiBlitz3.ab3@14424> BRA.w docflib2
0002C84C <AmiBlitz3.ab3@14428>   MOVEQ.l #-$2A,D1
0002C852 <AmiBlitz3.ab3@14429>   TST.b fpu
0002C856 <AmiBlitz3.ab3@14430>    BEQ do_not_equal_float__nofpu
0002C858 <AmiBlitz3.ab3@14431>    MOVEQ #0,d1
0002C85E <AmiBlitz3.ab3@14432>    MOVE.w regnum,d1
0002C860 <AmiBlitz3.ab3@14433>    MOVE.l d1,d2
0002C862 <AmiBlitz3.ab3@14434>    ASL.l #7,d1
0002C864 <AmiBlitz3.ab3@14435>    ADDQ  #1,d2
0002C866 <AmiBlitz3.ab3@14436>    ASL.l #8,d2
0002C868 <AmiBlitz3.ab3@14437>    ASL.l #2,d2
0002C86A <AmiBlitz3.ab3@14438>    OR.l d2,d1
0002C870 <AmiBlitz3.ab3@14439>    OR.l #$f2000038,d1
0002C876 <AmiBlitz3.ab3@14440>    JSR writelong
0002C87A <AmiBlitz3.ab3@14441>    MOVE.w #$f240,d1
0002C880 <AmiBlitz3.ab3@14442>    OR.w regnum,d1
0002C884 <AmiBlitz3.ab3@14443>    BSR writeword
0002C88A <AmiBlitz3.ab3@14444>    MOVE.l #1,d2
0002C88E <AmiBlitz3.ab3@14445>    MOVE.w #$e,d1                                           ;fpu comp fsne
0002C892 <AmiBlitz3.ab3@14446>    BSR writeword
0002C894 <AmiBlitz3.ab3@14447> RTS
0002C898 <AmiBlitz3.ab3@14450>    BSR.w docflib
0002C89C <AmiBlitz3.ab3@14451>    BSR.w donecmp
0002C8A0 <AmiBlitz3.ab3@14452> BRA.w docflib2
0002C8A2 <AmiBlitz3.ab3@14456>   MOVEQ.l #-$2A,D1
0002C8A8 <AmiBlitz3.ab3@14457>     TST.b fpu
0002C8AC <AmiBlitz3.ab3@14458>    BEQ do_littler_float__nofpu
0002C8AE <AmiBlitz3.ab3@14459>    MOVEQ #0,d1
0002C8B4 <AmiBlitz3.ab3@14460>    MOVE.w regnum,d1
0002C8B6 <AmiBlitz3.ab3@14461>    MOVE.l d1,d2
0002C8B8 <AmiBlitz3.ab3@14462>    ASL.l #7,d1
0002C8BA <AmiBlitz3.ab3@14463>    ADDQ  #1,d2
0002C8BC <AmiBlitz3.ab3@14464>    ASL.l #8,d2
0002C8BE <AmiBlitz3.ab3@14465>    ASL.l #2,d2
0002C8C0 <AmiBlitz3.ab3@14466>    OR.l d2,d1
0002C8C6 <AmiBlitz3.ab3@14467>    OR.l #$f2000038,d1
0002C8CC <AmiBlitz3.ab3@14468>    JSR writelong
0002C8D0 <AmiBlitz3.ab3@14469>    MOVE.w #$f240,d1
0002C8D6 <AmiBlitz3.ab3@14470>    OR.w regnum,d1
0002C8DA <AmiBlitz3.ab3@14471>    BSR writeword
0002C8E0 <AmiBlitz3.ab3@14472>    MOVE.l #$1,d2
0002C8E4 <AmiBlitz3.ab3@14473>    MOVE.w #$14,d1                                          ;fpu comp fslt
0002C8E8 <AmiBlitz3.ab3@14474>    BSR writeword
0002C8EA <AmiBlitz3.ab3@14475> RTS
0002C8EE <AmiBlitz3.ab3@14478>    BSR.w docflib
0002C8F2 <AmiBlitz3.ab3@14479>    BSR.w doltcmp
0002C8F6 <AmiBlitz3.ab3@14480> BRA.w docflib2
0002C8F8 <AmiBlitz3.ab3@14484>   MOVEQ.l #-$2A,D1
0002C8FE <AmiBlitz3.ab3@14485>   TST.b fpu
0002C902 <AmiBlitz3.ab3@14486>    BEQ do_littler_equal_float__nofpu
0002C904 <AmiBlitz3.ab3@14487>    MOVEQ #0,d1
0002C90A <AmiBlitz3.ab3@14488>    MOVE.w regnum,d1
0002C90C <AmiBlitz3.ab3@14489>    MOVE.l d1,d2
0002C90E <AmiBlitz3.ab3@14490>    ASL.l #7,d1
0002C910 <AmiBlitz3.ab3@14491>    ADDQ  #1,d2
0002C912 <AmiBlitz3.ab3@14492>    ASL.l #8,d2
0002C914 <AmiBlitz3.ab3@14493>    ASL.l #2,d2
0002C916 <AmiBlitz3.ab3@14494>    OR.l d2,d1
0002C91C <AmiBlitz3.ab3@14495>    OR.l #$f2000038,d1
0002C922 <AmiBlitz3.ab3@14496>    JSR writelong
0002C926 <AmiBlitz3.ab3@14497>    MOVE.w #$f240,d1
0002C92C <AmiBlitz3.ab3@14498>    OR.w regnum,d1
0002C930 <AmiBlitz3.ab3@14499>    BSR writeword
0002C936 <AmiBlitz3.ab3@14500>    MOVE.l #1,d2
0002C93A <AmiBlitz3.ab3@14501>    MOVE.w #$15,d1                                          ;fpu comp fsle
0002C93E <AmiBlitz3.ab3@14502>    BSR writeword
0002C940 <AmiBlitz3.ab3@14503> RTS
0002C944 <AmiBlitz3.ab3@14506>    BSR.w docflib
0002C948 <AmiBlitz3.ab3@14507>    BSR.w dolecmp
0002C94C <AmiBlitz3.ab3@14508> BRA.w docflib2
0002C94E <AmiBlitz3.ab3@14512>   MOVEQ.l #-$2A,D1
0002C954 <AmiBlitz3.ab3@14513>    TST.b fpu
0002C958 <AmiBlitz3.ab3@14514>    BEQ do_greater_float__nofpu
0002C95A <AmiBlitz3.ab3@14515>     MOVEQ #0,d1
0002C960 <AmiBlitz3.ab3@14516>    MOVE.w regnum,d1
0002C962 <AmiBlitz3.ab3@14517>    MOVE.l d1,d2
0002C964 <AmiBlitz3.ab3@14518>    ASL.l #7,d1
0002C966 <AmiBlitz3.ab3@14519>    ADDQ  #1,d2
0002C968 <AmiBlitz3.ab3@14520>    ASL.l #8,d2
0002C96A <AmiBlitz3.ab3@14521>    ASL.l #2,d2
0002C96C <AmiBlitz3.ab3@14522>    OR.l d2,d1
0002C972 <AmiBlitz3.ab3@14523>    OR.l #$f2000038,d1
0002C978 <AmiBlitz3.ab3@14524>    JSR writelong
0002C97C <AmiBlitz3.ab3@14525>    MOVE.w #$f240,d1
0002C982 <AmiBlitz3.ab3@14526>    OR.w regnum,d1
0002C986 <AmiBlitz3.ab3@14527>    BSR writeword
0002C98C <AmiBlitz3.ab3@14528>    MOVE.l #1,d2
0002C990 <AmiBlitz3.ab3@14529>    MOVE.w #$12,d1                                          ;fpu comp fsgt
0002C994 <AmiBlitz3.ab3@14530>    BSR writeword
0002C996 <AmiBlitz3.ab3@14531> RTS
0002C99A <AmiBlitz3.ab3@14534>    BSR.w docflib
0002C99E <AmiBlitz3.ab3@14535>    BSR.w dogtcmp
0002C9A2 <AmiBlitz3.ab3@14536> BRA.w docflib2
0002C9A4 <AmiBlitz3.ab3@14540>   MOVEQ.l #-$2A,D1
0002C9AA <AmiBlitz3.ab3@14541>  TST.b fpu
0002C9AE <AmiBlitz3.ab3@14542>    BEQ do_greater_equal_float__nofpu
0002C9B0 <AmiBlitz3.ab3@14543>    MOVEQ #0,d1
0002C9B6 <AmiBlitz3.ab3@14544>    MOVE.w regnum,d1
0002C9B8 <AmiBlitz3.ab3@14545>    MOVE.l d1,d2
0002C9BA <AmiBlitz3.ab3@14546>    ASL.l #7,d1
0002C9BC <AmiBlitz3.ab3@14547>    ADDQ  #1,d2
0002C9BE <AmiBlitz3.ab3@14548>    ASL.l #8,d2
0002C9C0 <AmiBlitz3.ab3@14549>    ASL.l #2,d2
0002C9C2 <AmiBlitz3.ab3@14550>    OR.l d2,d1
0002C9C8 <AmiBlitz3.ab3@14551>    OR.l #$f2000038,d1
0002C9CE <AmiBlitz3.ab3@14552>    JSR writelong
0002C9D2 <AmiBlitz3.ab3@14553>    MOVE.w #$f240,d1
0002C9D8 <AmiBlitz3.ab3@14554>    OR.w regnum,d1
0002C9DC <AmiBlitz3.ab3@14555>    BSR writeword
0002C9E2 <AmiBlitz3.ab3@14556>    MOVE.l #1,d2
0002C9E6 <AmiBlitz3.ab3@14557>    MOVE.w #$13,d1                                          ;fpu comp fsge
0002C9EA <AmiBlitz3.ab3@14558>    BSR writeword
0002C9EC <AmiBlitz3.ab3@14559> RTS
0002C9F0 <AmiBlitz3.ab3@14562>    BSR.w docflib
0002C9F4 <AmiBlitz3.ab3@14563>    BSR.w dogecmp
0002C9F8 <AmiBlitz3.ab3@14564> BRA.w docflib2
0002C9FE <AmiBlitz3.ab3@14569>   MOVE.l #$CE00,D1
0002CA04 <AmiBlitz3.ab3@14570>    MOVE.l d1,lastinstruction
0002CA08 <AmiBlitz3.ab3@14571>    BSR.w Atokejsr
0002CA0C <AmiBlitz3.ab3@14572> BRA.w doeqcmp
0002CA12 <AmiBlitz3.ab3@14576>   MOVE.l #$CE00,D1
0002CA18 <AmiBlitz3.ab3@14577>    MOVE.l d1,lastinstruction
0002CA1C <AmiBlitz3.ab3@14578>    BSR.w Atokejsr
0002CA20 <AmiBlitz3.ab3@14579> BRA.w donecmp
0002CA26 <AmiBlitz3.ab3@14583>   MOVE.l #$CE00,D1
0002CA2C <AmiBlitz3.ab3@14584>    MOVE.l d1,lastinstruction
0002CA30 <AmiBlitz3.ab3@14585>    BSR.w Atokejsr
0002CA34 <AmiBlitz3.ab3@14586> BRA.w doltcmp
0002CA3A <AmiBlitz3.ab3@14590>   MOVE.l #$CE00,D1
0002CA40 <AmiBlitz3.ab3@14591>    MOVE.l d1,lastinstruction
0002CA44 <AmiBlitz3.ab3@14592>    BSR.w Atokejsr
0002CA48 <AmiBlitz3.ab3@14593> BRA.w dolecmp
0002CA4E <AmiBlitz3.ab3@14597>   MOVE.l #$CE00,D1
0002CA54 <AmiBlitz3.ab3@14598>    MOVE.l d1,lastinstruction
0002CA58 <AmiBlitz3.ab3@14599>    BSR.w Atokejsr
0002CA5C <AmiBlitz3.ab3@14600> BRA.w dogtcmp
0002CA62 <AmiBlitz3.ab3@14604>   MOVE.l #$CE00,D1
0002CA68 <AmiBlitz3.ab3@14605>    MOVE.l d1,lastinstruction
0002CA6C <AmiBlitz3.ab3@14606>    BSR.w Atokejsr
0002CA70 <AmiBlitz3.ab3@14607> BRA.w dogecmp
0002CA76 <AmiBlitz3.ab3@14612>   TST.b fast                                               ;compare
0002CA7A <AmiBlitz3.ab3@14613>   BEQ cmpit__org
0002CA80 <AmiBlitz3.ab3@14617>   MOVE.l destpointer,a0
0002CA86 <AmiBlitz3.ab3@14618>   SUB.l imm_addr,a0
0002CA8C <AmiBlitz3.ab3@14619>   CMP.l #6,a0
0002CA90 <AmiBlitz3.ab3@14620>   BNE cmpit__l11
0002CA96 <AmiBlitz3.ab3@14621>   MOVE.l imm_addr,a0
0002CA9E <AmiBlitz3.ab3@14622>   CMP.w #$223c,imm_addr
0002CAA2 <AmiBlitz3.ab3@14623>   BNE cmpit__org
0002CAA8 <AmiBlitz3.ab3@14624>   ADD.w #$8e80,-6(a4)
0002CAAE <AmiBlitz3.ab3@14627>   CLR.l imm_addr
0002CAB0 <AmiBlitz3.ab3@14628> RTS
0002CAB6 <AmiBlitz3.ab3@14631>   CMP.l #4,a0
0002CABA <AmiBlitz3.ab3@14632>   BNE cmpit__l10
0002CABE <AmiBlitz3.ab3@14633>   CMP.b #2,d3
0002CAC2 <AmiBlitz3.ab3@14634>   BNE cmpit__l11b
0002CAC8 <AmiBlitz3.ab3@14635>   ADD.w #$7e40,-4(a4)
0002CACA <AmiBlitz3.ab3@14636> RTS
0002CAD0 <AmiBlitz3.ab3@14639>  ADD.w #$7e00,-4(a4)
0002CAD2 <AmiBlitz3.ab3@14640> RTS
0002CAD8 <AmiBlitz3.ab3@14643>    MOVE.l destpointer,a0
0002CADE <AmiBlitz3.ab3@14644>    SUB.l load_var_addr,a0
0002CAE2 <AmiBlitz3.ab3@14645>    CMP.w #4,a0
0002CAE6 <AmiBlitz3.ab3@14646>    BNE cmpit__org
0002CAEA <AmiBlitz3.ab3@14647>    CMP.b #3,d3
0002CAEE <AmiBlitz3.ab3@14648>    BCS cmpit__lv1
0002CAF4 <AmiBlitz3.ab3@14649>    CLR.l load_var_addr
0002CAFA <AmiBlitz3.ab3@14650>    ADD.w #$9080-$200,-4(a4)
0002CAFC <AmiBlitz3.ab3@14651> RTS
0002CB00 <AmiBlitz3.ab3@14654>   CMP.b #2,d3
0002CB04 <AmiBlitz3.ab3@14655>    BNE cmpit__org
0002CB0A <AmiBlitz3.ab3@14656>    CLR.l load_var_addr
0002CB10 <AmiBlitz3.ab3@14657>    ADD.w #$8040-$200,-4(a4)
0002CB12 <AmiBlitz3.ab3@14658> RTS
0002CB18 <AmiBlitz3.ab3@14661>   MOVE.w regnum,D3
0002CB1A <AmiBlitz3.ab3@14662>   OR.w D3,D1
0002CB1C <AmiBlitz3.ab3@14663>   LSL.w #8,D3
0002CB1E <AmiBlitz3.ab3@14664>   LSL.w #1,D3
0002CB20 <AmiBlitz3.ab3@14665>   OR.w D3,D1
0002CB22 <AmiBlitz3.ab3@14666>   ADDQ.w #1,D1
0002CB26 <AmiBlitz3.ab3@14667> BRA.w writeword
0002CB2A <AmiBlitz3.ab3@14671>    BSR.w cmpit
0002CB2E <AmiBlitz3.ab3@14674>    MOVE.w mseq(PC),D1
0002CB32 <AmiBlitz3.ab3@14675> BRA.w cpoke
0002CB36 <AmiBlitz3.ab3@14679>   BSR.w cmpit
0002CB3A <AmiBlitz3.ab3@14682>   MOVE.w msne(PC),D1
0002CB3E <AmiBlitz3.ab3@14683> BRA.w cpoke
0002CB42 <AmiBlitz3.ab3@14687>   BSR.w cmpit
0002CB46 <AmiBlitz3.ab3@14690>    MOVE.w mslt(PC),D1
0002CB4A <AmiBlitz3.ab3@14691> BRA.w cpoke
0002CB4E <AmiBlitz3.ab3@14695>    BSR.w cmpit
0002CB52 <AmiBlitz3.ab3@14698>    MOVE.w msle(PC),D1
0002CB56 <AmiBlitz3.ab3@14699> BRA.w cpoke
0002CB5A <AmiBlitz3.ab3@14703>    BSR.w cmpit
0002CB5E <AmiBlitz3.ab3@14706>    MOVE.w msgt(PC),D1
0002CB62 <AmiBlitz3.ab3@14707> BRA.w cpoke
0002CB66 <AmiBlitz3.ab3@14711>   BSR.w cmpit
0002CB6A <AmiBlitz3.ab3@14714>    MOVE.w msge(PC),D1
0002CB70 <AmiBlitz3.ab3@14717>    OR.w regnum,D1
0002CB74 <AmiBlitz3.ab3@14718>    CMP.w #5,d2
0002CB78 <AmiBlitz3.ab3@14719>    BNE cpoke__nod0
0002CB7C <AmiBlitz3.ab3@14720>    CMP.w #5,d3
0002CB80 <AmiBlitz3.ab3@14721>    BNE cpoke__nod0
0002CB82 <AmiBlitz3.ab3@14722>    MOVE.l d1,-(a7)
0002CB88 <AmiBlitz3.ab3@14723>    MOVE.l #$44004a00,d1                                    ;68k neg.b:tst.b
0002CB8C <AmiBlitz3.ab3@14724>    BSR writelong
0002CB8E <AmiBlitz3.ab3@14725>    MOVE.l (a7)+,d1
0002CB92 <AmiBlitz3.ab3@14728>    BSR.w writeword                                         ;writeseq
0002CB94 <AmiBlitz3.ab3@14729>    MOVEQ.l #1,d2
0002CB9A <AmiBlitz3.ab3@14730>    MOVE.l lasttoken,d1
0002CBA0 <AmiBlitz3.ab3@14731>     TST.b fast
0002CBA4 <AmiBlitz3.ab3@14732>     BEQ.s cpoke__l11
0002CBAA <AmiBlitz3.ab3@14733>    CMP.l #$800b,d1
0002CBAE <AmiBlitz3.ab3@14734>    BEQ cpoke__l10
0002CBB2 <AmiBlitz3.ab3@14737>   MOVE.w #$4880,D1                                         ;ext.w D regat
0002CBB8 <AmiBlitz3.ab3@14738>   OR.w regnum,D1
0002CBBC <AmiBlitz3.ab3@14739>    BSR.w writeword                                         ;writeext.w
0002CBBE <AmiBlitz3.ab3@14740>   MOVEQ.l #$02,D2                                          ;type now WORD!
0002CBC0 <AmiBlitz3.ab3@14743> RTS
0002CBC4 <AmiBlitz3.ab3@14748>   MOVE.w #$D040,D1
0002CBC6 <AmiBlitz3.ab3@14749>   MOVEQ.l #$02,D2                                          ;writeaddword   ;now a word
0002CBCA <AmiBlitz3.ab3@14750> BRA.w doplus2
0002CBCE <AmiBlitz3.ab3@14754>   MOVE.w #$D040,D1
0002CBD0 <AmiBlitz3.ab3@14755>   MOVEQ.l #$03,D2                                          ;now a long
0002CBD4 <AmiBlitz3.ab3@14756>    BSR.w doplus2
0002CBD8 <AmiBlitz3.ab3@14757> BRA.w convert_word_to_long
0002CBDC <AmiBlitz3.ab3@14761>   MOVE.w #$D080,D1                                         ;writeaddlong
0002CBDE <AmiBlitz3.ab3@14764>   MOVE.w d1,a1
0002CBE4 <AmiBlitz3.ab3@14765>   TST.b fast
0002CBE8 <AmiBlitz3.ab3@14766>   BEQ doplus2__l10
0002CBEA <AmiBlitz3.ab3@14770>   ASR.w #8,d1
0002CBEE <AmiBlitz3.ab3@14771>   CMP.b #$90,d1
0002CBF2 <AmiBlitz3.ab3@14772>   BEQ doplus2__sub1
0002CBF6 <AmiBlitz3.ab3@14773>   CMP.b #$d0,d1
0002CBFA <AmiBlitz3.ab3@14774>   BNE doplus2__l10
0002CBFE <AmiBlitz3.ab3@14775>   CMP.b #3,d3
0002CC02 <AmiBlitz3.ab3@14776>   BCS doplus2__lq10
0002CC08 <AmiBlitz3.ab3@14777>   TST.b quickadd
0002CC0E <AmiBlitz3.ab3@14781>    MOVE.l destpointer,a0
0002CC14 <AmiBlitz3.ab3@14782>    CLR.b quickadd
0002CC1A <AmiBlitz3.ab3@14783>    CLR.l load_var_addr
0002CC20 <AmiBlitz3.ab3@14784>    SUB.l imm_addr,a0
0002CC24 <AmiBlitz3.ab3@14785>    CMP.w #6,a0
0002CC28 <AmiBlitz3.ab3@14786>    BEQ doplus2__li10
0002CC2C <AmiBlitz3.ab3@14787>    CMP.w #4,a0
0002CC30 <AmiBlitz3.ab3@14788>    BNE.s doplus2__li1
0002CC36 <AmiBlitz3.ab3@14789>    CLR.l imm_addr
0002CC3C <AmiBlitz3.ab3@14790>    ADD.w #$a040-$200,-4(a4)
0002CC3E <AmiBlitz3.ab3@14791> RTS
0002CC40 <AmiBlitz3.ab3@14794>    MOVE.l a4,a0
0002CC46 <AmiBlitz3.ab3@14795>    SUB.l load_var_addr,a0
0002CC4C <AmiBlitz3.ab3@14796>    CMP.l #$a,a0
0002CC50 <AmiBlitz3.ab3@14797>    BNE doplus2__l10e
0002CC56 <AmiBlitz3.ab3@14798>    CLR.l load_var_addr
0002CC5A <AmiBlitz3.ab3@14799>    MOVE.w -$8(a4),d1
0002CC60 <AmiBlitz3.ab3@14800>    MOVE.l -$4(a4),-$8(a4)
0002CC64 <AmiBlitz3.ab3@14801>    MOVE.w d1,-$4(a4)
0002CC6A <AmiBlitz3.ab3@14802>    SUB.w #$1980,-$a(a4)
0002CC70 <AmiBlitz3.ab3@14803>    SUBQ.l #2,destpointer
0002CC72 <AmiBlitz3.ab3@14804> RTS
0002CC78 <AmiBlitz3.ab3@14807>   CLR.b quickadd
0002CC7C <AmiBlitz3.ab3@14808> BRA doplus2__l10
0002CC82 <AmiBlitz3.ab3@14811>    CLR.l imm_addr
0002CC86 <AmiBlitz3.ab3@14812>    TST.l -4(a4)                                            ;skip If ADD.l #0,dx
0002CC8A <AmiBlitz3.ab3@14813>    BNE doplus2__doit
0002CC90 <AmiBlitz3.ab3@14814>    SUBQ.l #6,destpointer
0002CC92 <AmiBlitz3.ab3@14815> RTS
0002CC98 <AmiBlitz3.ab3@14818>    ADD.w #$b080-$200,-6(a4)
0002CC9A <AmiBlitz3.ab3@14819> RTS
0002CCA0 <AmiBlitz3.ab3@14822>    MOVE.l destpointer,a0
0002CCA6 <AmiBlitz3.ab3@14823>    SUB.l load_var_addr,a0
0002CCAA <AmiBlitz3.ab3@14824>    CMP.w #4,a0
0002CCAE <AmiBlitz3.ab3@14825>    BNE doplus2__l10
0002CCB2 <AmiBlitz3.ab3@14826>    CMP.b #3,d3
0002CCB6 <AmiBlitz3.ab3@14827>    BNE doplus2__lv1
0002CCBC <AmiBlitz3.ab3@14828>    CLR.l load_var_addr
0002CCC2 <AmiBlitz3.ab3@14829>    ADD.w #$b080-$200,-4(a4)
0002CCC4 <AmiBlitz3.ab3@14830> RTS
0002CCC8 <AmiBlitz3.ab3@14833>   CMP.b #2,d3
0002CCCC <AmiBlitz3.ab3@14834>   BNE doplus2__l10
0002CCD2 <AmiBlitz3.ab3@14835>   CLR.l load_var_addr
0002CCD8 <AmiBlitz3.ab3@14836>   ADD.w #$a040-$200,-4(a4)
0002CCDA <AmiBlitz3.ab3@14837> RTS
0002CCE0 <AmiBlitz3.ab3@14840>   MOVE.w regnum,D3
0002CCE2 <AmiBlitz3.ab3@14841>   MOVE.w a1,d1
0002CCE4 <AmiBlitz3.ab3@14842>   OR.w D3,D1
0002CCE6 <AmiBlitz3.ab3@14843>   ADDQ.w #1,D1
0002CCE8 <AmiBlitz3.ab3@14844>   LSL.w #8,D3
0002CCEA <AmiBlitz3.ab3@14845>   LSL.w #1,D3
0002CCEC <AmiBlitz3.ab3@14846>   OR.w D3,D1
0002CCF0 <AmiBlitz3.ab3@14847> BRA.w writeword
0002CCF4 <AmiBlitz3.ab3@14850>    CMP.b #3,d3
0002CCF8 <AmiBlitz3.ab3@14851>    BCS doplus2__sub1_lq10
0002CCFE <AmiBlitz3.ab3@14852>    TST.b quickadd
0002CD04 <AmiBlitz3.ab3@14856>    MOVE.l destpointer,a0
0002CD0A <AmiBlitz3.ab3@14857>    CLR.b quickadd
0002CD10 <AmiBlitz3.ab3@14858>    CLR.l load_var_addr
0002CD16 <AmiBlitz3.ab3@14859>    SUB.l imm_addr,a0
0002CD1A <AmiBlitz3.ab3@14860>    CMP.w #6,a0
0002CD1E <AmiBlitz3.ab3@14861>    BEQ doplus2__sub1_li10
0002CD22 <AmiBlitz3.ab3@14862>    CMP.w #4,a0
0002CD26 <AmiBlitz3.ab3@14863>    BNE.s doplus2__sub1_li1
0002CD2C <AmiBlitz3.ab3@14864>    CLR.l imm_addr
0002CD32 <AmiBlitz3.ab3@14865>    ADD.w #$6040-$200,-4(a4)
0002CD34 <AmiBlitz3.ab3@14866> RTS
0002CD36 <AmiBlitz3.ab3@14869>    MOVE.l a4,a0
0002CD3C <AmiBlitz3.ab3@14870>     SUB.l load_var_addr,a0
0002CD42 <AmiBlitz3.ab3@14871>     CMP.l #$a,a0
0002CD46 <AmiBlitz3.ab3@14872>     BNE doplus2__sub1_l10e
0002CD4C <AmiBlitz3.ab3@14873>    CLR.l load_var_addr
0002CD50 <AmiBlitz3.ab3@14874>    MOVE.w -$8(a4),d1
0002CD56 <AmiBlitz3.ab3@14875>    MOVE.l -$4(a4),-$8(a4)
0002CD5A <AmiBlitz3.ab3@14876>    MOVE.w d1,-$4(a4)
0002CD60 <AmiBlitz3.ab3@14877>    SUB.w #$1b80,-$a(a4)
0002CD66 <AmiBlitz3.ab3@14878>    SUBQ.l #2,destpointer
0002CD68 <AmiBlitz3.ab3@14879> RTS
0002CD6E <AmiBlitz3.ab3@14882>   CLR.b quickadd
0002CD72 <AmiBlitz3.ab3@14883> BRA doplus2__sub1_l10
0002CD78 <AmiBlitz3.ab3@14886>    CLR.l imm_addr
0002CD7E <AmiBlitz3.ab3@14887>    ADD.w #$7080-$200,-6(a4)
0002CD80 <AmiBlitz3.ab3@14888> RTS
0002CD86 <AmiBlitz3.ab3@14891>    MOVE.l destpointer,a0
0002CD8C <AmiBlitz3.ab3@14892>    SUB.l load_var_addr,a0
0002CD90 <AmiBlitz3.ab3@14893>    CMP.w #4,a0
0002CD94 <AmiBlitz3.ab3@14894>    BNE doplus2__sub1_l10
0002CD98 <AmiBlitz3.ab3@14895>    CMP.b #3,d3
0002CD9C <AmiBlitz3.ab3@14896>    BNE doplus2__sub1_lv1
0002CDA2 <AmiBlitz3.ab3@14897>    CLR.l load_var_addr
0002CDA8 <AmiBlitz3.ab3@14898>    ADD.w #$7080-$200,-4(a4)
0002CDAA <AmiBlitz3.ab3@14899> RTS
0002CDAE <AmiBlitz3.ab3@14902>    CMP.b #2,d3
0002CDB2 <AmiBlitz3.ab3@14903>    BNE doplus2__sub1_l10
0002CDB8 <AmiBlitz3.ab3@14904>    CLR.l load_var_addr
0002CDBE <AmiBlitz3.ab3@14905>    ADD.w #$6040-$200,-4(a4)
0002CDC0 <AmiBlitz3.ab3@14906> RTS
0002CDC6 <AmiBlitz3.ab3@14909>   MOVE.w regnum,D3
0002CDC8 <AmiBlitz3.ab3@14910>   MOVE.w a1,d1
0002CDCA <AmiBlitz3.ab3@14911>   OR.w D3,D1
0002CDCC <AmiBlitz3.ab3@14912>   ADDQ.w #1,D1
0002CDCE <AmiBlitz3.ab3@14913>   LSL.w #8,D3
0002CDD0 <AmiBlitz3.ab3@14914>   LSL.w #1,D3
0002CDD2 <AmiBlitz3.ab3@14915>   OR.w D3,D1
0002CDD6 <AmiBlitz3.ab3@14916> BRA.w writeword
0002CDD8 <AmiBlitz3.ab3@14920>   MOVEQ #0,d0
0002CDDE <AmiBlitz3.ab3@14921>   MOVE.w regnum,d0
0002CDE0 <AmiBlitz3.ab3@14922>   ADDQ #1,d0
0002CDE2 <AmiBlitz3.ab3@14923>   ASL.w #8,d0
0002CDE4 <AmiBlitz3.ab3@14924>   ASL.w #2,d0
0002CDEA <AmiBlitz3.ab3@14925>   MOVE.l #$f2000022,d1                                     ;fpu add
0002CDEC <AmiBlitz3.ab3@14926>   OR.l d0,d1
0002CDF2 <AmiBlitz3.ab3@14927>   MOVE.w regnum,d0
0002CDF4 <AmiBlitz3.ab3@14928>   ASL.w #7,d0
0002CDF6 <AmiBlitz3.ab3@14929>   OR.l d0,d1
0002CDFA <AmiBlitz3.ab3@14930> BRA.w writelong
0002CE00 <AmiBlitz3.ab3@14936>   TST.b iee
0002CE04 <AmiBlitz3.ab3@14937>   BNE do_plus_float__fadd1
0002CE08 <AmiBlitz3.ab3@14938>   MOVE.w #$FFBE,D1                                         ;#-66,d1 org soruce ;floatadd
0002CE0E <AmiBlitz3.ab3@14941>    MOVE.w D1,libjsr+2
0002CE12 <AmiBlitz3.ab3@14942>    BSR.w JL_0_AD40
0002CE14 <AmiBlitz3.ab3@14943>   MOVE.l D4,D1
0002CE18 <AmiBlitz3.ab3@14944>    BSR.w JL_0_AD38
0002CE1C <AmiBlitz3.ab3@14945>   MOVE.w #$C900,D1
0002CE20 <AmiBlitz3.ab3@14946>    BSR.w Atokejsr
0002CE24 <AmiBlitz3.ab3@14947>    BSR.w JL_0_A352
0002CE2A <AmiBlitz3.ab3@14948>   MOVE.l libjsr,D1
0002CE2E <AmiBlitz3.ab3@14949>    BSR.w writelong
0002CE32 <AmiBlitz3.ab3@14950>    BSR.w JL_0_A36E
0002CE34 <AmiBlitz3.ab3@14951>   MOVE.l D5,D1
0002CE38 <AmiBlitz3.ab3@14952> BRA.w JL_0_AD38
0002CE3E <AmiBlitz3.ab3@14956>   MOVE.w regnum,D1
0002CE40 <AmiBlitz3.ab3@14957>   LSL.w #8,D1
0002CE42 <AmiBlitz3.ab3@14958>   LSL.w #1,D1
0002CE44 <AmiBlitz3.ab3@14959>   MOVE.w D1,-(A7)
0002CE48 <AmiBlitz3.ab3@14960>   CMP.w #3072,d1
0002CE4C <AmiBlitz3.ab3@14961>   BEQ 'l1
0002CE52 <AmiBlitz3.ab3@14962>   OR.w addcode,D1                                          ;move.l (a7)+,d0
0002CE56 <AmiBlitz3.ab3@14963> BRA 'l2
0002CE5A <AmiBlitz3.ab3@14966>    MOVE.w #$588f,d1                                        ;addq.l #4,a7
0002CE5E <AmiBlitz3.ab3@14969>    BSR.w writeword
0002CE60 <AmiBlitz3.ab3@14970>   MOVE.w (A7)+,D1
0002CE66 <AmiBlitz3.ab3@14971>   OR.w addcode+2,D1                                        ;native string add.l d0,(a7)
0002CE6A <AmiBlitz3.ab3@14972> BRA.w writeword
0002CE6E <AmiBlitz3.ab3@14978>   MOVE.w #$9040,D1
0002CE72 <AmiBlitz3.ab3@14979> BRA.w doplus2
0002CE76 <AmiBlitz3.ab3@14983>   MOVE.w #$9040,D1
0002CE7A <AmiBlitz3.ab3@14984> BRA.w doplus2
0002CE7E <AmiBlitz3.ab3@14988>   MOVE.w #$9080,D1
0002CE82 <AmiBlitz3.ab3@14989> BRA.w doplus2
0002CE88 <AmiBlitz3.ab3@14993>    TST.b iee
0002CE8C <AmiBlitz3.ab3@14994>     BNE do_minus_float__fs1
0002CE90 <AmiBlitz3.ab3@14995>   MOVE.w #$FFB8,D1                                         ;floatsub
0002CE94 <AmiBlitz3.ab3@14996> BRA.w doflib
0002CE96 <AmiBlitz3.ab3@14999>   MOVEQ #0,d0
0002CE9C <AmiBlitz3.ab3@15000>   MOVE.w regnum,d0
0002CE9E <AmiBlitz3.ab3@15001>   ADDQ #1,d0
0002CEA0 <AmiBlitz3.ab3@15002>   ASL.w #8,d0
0002CEA2 <AmiBlitz3.ab3@15003>   ASL.w #2,d0
0002CEA8 <AmiBlitz3.ab3@15004>   MOVE.l #$f2000028,d1
0002CEAA <AmiBlitz3.ab3@15005>   OR.l d0,d1
0002CEB0 <AmiBlitz3.ab3@15006>   MOVE.w regnum,d0
0002CEB2 <AmiBlitz3.ab3@15007>   ASL.w #7,d0
0002CEB4 <AmiBlitz3.ab3@15008>   OR.l d0,d1
0002CEB8 <AmiBlitz3.ab3@15009> BRA.w writelong
0002CEBC <AmiBlitz3.ab3@15015>   MOVE.w #$C1C0,D1
0002CEBE <AmiBlitz3.ab3@15016>   MOVEQ.l #$02,D2                                          ;now a word
0002CEC2 <AmiBlitz3.ab3@15017> BRA.w doplus2
0002CEC6 <AmiBlitz3.ab3@15021>   MOVE.w #$C1C0,D1
0002CEC8 <AmiBlitz3.ab3@15022>   MOVEQ.l #$03,D2                                          ;now a long.
0002CECC <AmiBlitz3.ab3@15023> BRA.w doplus2
0002CED0 <AmiBlitz3.ab3@15027>   MOVE.w #$CA00,D1                                         ;quickmul
0002CED4 <AmiBlitz3.ab3@15028> BRA.w domylib
0002CEDA <AmiBlitz3.ab3@15032>   TST.b fast
0002CEDE <AmiBlitz3.ab3@15033>   BNE.s 'l10
0002CEE2 <AmiBlitz3.ab3@15034>   MOVE.w #$CA01,D1                                         ;writelongmul
0002CEE6 <AmiBlitz3.ab3@15035> BRA.w domylib
0002CEEC <AmiBlitz3.ab3@15044>    MOVE.l destpointer,a0
0002CEF2 <AmiBlitz3.ab3@15045>    SUB.l imm_addr,a0
0002CEF6 <AmiBlitz3.ab3@15046>    CMP.w #6,a0
0002CEFA <AmiBlitz3.ab3@15047>    BNE 'li1
0002CEFC <AmiBlitz3.ab3@15048>    MOVEQ.l #2,d1
0002CEFE <AmiBlitz3.ab3@15049>    MOVEQ #1,d3
0002CF02 <AmiBlitz3.ab3@15052>   CMP.l -4(a4),d1
0002CF06 <AmiBlitz3.ab3@15053>    BEQ 'oklsl
0002CF08 <AmiBlitz3.ab3@15054>     LSL.l #1,d1
0002CF0E <AmiBlitz3.ab3@15055>     ADD.l #1,d3
0002CF14 <AmiBlitz3.ab3@15056>     CMP.l #9,d3
0002CF18 <AmiBlitz3.ab3@15057>     BNE 'ag
0002CF1C <AmiBlitz3.ab3@15058>    MOVE.w -2(a4),d1
0002CF20 <AmiBlitz3.ab3@15059>    BSR writeword
0002CF26 <AmiBlitz3.ab3@15060>    MOVE.w -6(a4),-4(a4)
0002CF2E <AmiBlitz3.ab3@15061>    MOVE.l #$4c3c0800,-8(a4)
0002CF34 <AmiBlitz3.ab3@15062>    MOVE.w regnum,D3
0002CF38 <AmiBlitz3.ab3@15063>    MULS #$1000,D3
0002CF3C <AmiBlitz3.ab3@15064>    OR.w D3,-6(a4)
0002CF42 <AmiBlitz3.ab3@15065>    CLR.l load_var_addr
0002CF48 <AmiBlitz3.ab3@15066>    CLR.l imm_addr
0002CF4C <AmiBlitz3.ab3@15067> BRA 'li3
0002CF50 <AmiBlitz3.ab3@15070>    CMP.w #8,d3
0002CF54 <AmiBlitz3.ab3@15071>    BEQ 'ok
0002CF56 <AmiBlitz3.ab3@15072>    ASL.l #1,d3
0002CF58 <AmiBlitz3.ab3@15073>    ASL.l #8,d3
0002CF5C <AmiBlitz3.ab3@15074>    MOVE.w #$e188,d1
0002CF5E <AmiBlitz3.ab3@15075>    OR.w d3,d1
0002CF62 <AmiBlitz3.ab3@15076>    MOVE.w d1,-6(a4)
0002CF66 <AmiBlitz3.ab3@15077> BRA 'okls
0002CF6C <AmiBlitz3.ab3@15080>   MOVE.w #$e188,-6(a4)                                     ;lsl.l #,dx
0002CF72 <AmiBlitz3.ab3@15083>   MOVE.w regnum,d3
0002CF76 <AmiBlitz3.ab3@15084>    OR.b d3,-5(a4)
0002CF7C <AmiBlitz3.ab3@15085>    SUBQ.l #4,destpointer
0002CF82 <AmiBlitz3.ab3@15086>    CLR.l load_var_addr
0002CF88 <AmiBlitz3.ab3@15087>    CLR.l imm_addr
0002CF8C <AmiBlitz3.ab3@15088> BRA 'li3
0002CF92 <AmiBlitz3.ab3@15091>    MOVE.l destpointer,a0
0002CF98 <AmiBlitz3.ab3@15092>    SUB.l load_var_addr,a0
0002CF9C <AmiBlitz3.ab3@15093>    CMP.w #4,a0
0002CFA0 <AmiBlitz3.ab3@15094>    BNE 'li2
0002CFA4 <AmiBlitz3.ab3@15095>    MOVE.w -2(a4),d1
0002CFA8 <AmiBlitz3.ab3@15096>    BSR writeword
0002CFAE <AmiBlitz3.ab3@15097>    MOVE.b #$4c,-6(a4)
0002CFB4 <AmiBlitz3.ab3@15098>    MOVE.w #$0800,-4(a4)
0002CFBA <AmiBlitz3.ab3@15099>    MOVE.w regnum,D3
0002CFBE <AmiBlitz3.ab3@15100>    MULS #$1000,d3
0002CFC2 <AmiBlitz3.ab3@15101>    OR.w D3,-4(a4)
0002CFC6 <AmiBlitz3.ab3@15102> BRA 'li3
0002CFCC <AmiBlitz3.ab3@15105>    MOVE.l #$4c010800,d1
0002CFD2 <AmiBlitz3.ab3@15106>    MOVE.w regnum,D3
0002CFD4 <AmiBlitz3.ab3@15107>    EXT.l d3
0002CFD8 <AmiBlitz3.ab3@15108>    MULS #$1000,d3
0002CFDA <AmiBlitz3.ab3@15109>    OR.w D3,d1
0002CFDE <AmiBlitz3.ab3@15110>    MULS #$10,d3
0002CFE0 <AmiBlitz3.ab3@15111>    ADD.l d3,d1
0002CFE4 <AmiBlitz3.ab3@15112>    BSR writelong
0002CFE6 <AmiBlitz3.ab3@15117> RTS
0002CFE8 <AmiBlitz3.ab3@15121>   MOVE.w D1,-(A7)
0002CFEC <AmiBlitz3.ab3@15122>    BSR.w JL_0_AD40
0002CFEE <AmiBlitz3.ab3@15123>   MOVE.l D4,D1
0002CFF2 <AmiBlitz3.ab3@15124>    BSR.w JL_0_AD38
0002CFF6 <AmiBlitz3.ab3@15125>    BSR.w JL_0_A352
0002CFF8 <AmiBlitz3.ab3@15126>   MOVEQ #0,d1
0002CFFA <AmiBlitz3.ab3@15127>   MOVE.w (A7)+,D1
0002D000 <AmiBlitz3.ab3@15128>   MOVE.l d1,lastinstruction
0002D004 <AmiBlitz3.ab3@15129>    BSR.w Atokejsr
0002D008 <AmiBlitz3.ab3@15130>    BSR.w JL_0_A36E
0002D00A <AmiBlitz3.ab3@15131>   MOVE.l D5,D1
0002D00E <AmiBlitz3.ab3@15132> BRA.w JL_0_AD38
0002D014 <AmiBlitz3.ab3@15136>    TST.b iee
0002D018 <AmiBlitz3.ab3@15137>     BNE fm1
0002D01C <AmiBlitz3.ab3@15138>  MOVE.w #$FFB2,D1                                          ;floatmul
0002D020 <AmiBlitz3.ab3@15139> BRA.w doflib
0002D022 <AmiBlitz3.ab3@15142>   MOVEQ #0,d0
0002D028 <AmiBlitz3.ab3@15143>  MOVE.w regnum,d0
0002D02A <AmiBlitz3.ab3@15144>  ADDQ #1,d0
0002D02C <AmiBlitz3.ab3@15145>  ASL.w #8,d0
0002D02E <AmiBlitz3.ab3@15146>  ASL.w #2,d0
0002D034 <AmiBlitz3.ab3@15147>  MOVE.l #$f2000023,d1
0002D036 <AmiBlitz3.ab3@15148>  OR.l d0,d1
0002D03C <AmiBlitz3.ab3@15149>  MOVE.w regnum,d0
0002D03E <AmiBlitz3.ab3@15150>  ASL.w #7,d0
0002D040 <AmiBlitz3.ab3@15151>  OR.l d0,d1
0002D044 <AmiBlitz3.ab3@15152> BRA.w writelong
0002D046 <AmiBlitz3.ab3@15156>   MOVE.w D2,-(A7)                                          ;dopow
0002D048 <AmiBlitz3.ab3@15157>   MOVE.w D2,D3
0002D04A <AmiBlitz3.ab3@15158>   MOVEQ.l #$05,D2
0002D04E <AmiBlitz3.ab3@15159>    BSR.w JL_0_9770
0002D054 <AmiBlitz3.ab3@15160>   ADDQ.w #1,regnum
0002D056 <AmiBlitz3.ab3@15161>   MOVE.w (A7)+,D3
0002D058 <AmiBlitz3.ab3@15162>   MOVEQ.l #$05,D2
0002D05C <AmiBlitz3.ab3@15163>    BSR.w writeconvertcode
0002D062 <AmiBlitz3.ab3@15164>   SUBQ.w #1,regnum
0002D066 <AmiBlitz3.ab3@15165>    BSR.w nocando
0002D06C <AmiBlitz3.ab3@15166>    TST.b fpu
0002D070 <AmiBlitz3.ab3@15167>    BEQ 'old
0002D072 <AmiBlitz3.ab3@15168>    MOVEQ #0,d1
0002D078 <AmiBlitz3.ab3@15169>    MOVE.w regnum,d1
0002D07A <AmiBlitz3.ab3@15170>   MOVE.l d1,d0
0002D07C <AmiBlitz3.ab3@15171>   ASL.w #7,d1
0002D07E <AmiBlitz3.ab3@15172>   ASL.w #8,d0
0002D080 <AmiBlitz3.ab3@15173>   ASL.w #2,d0
0002D082 <AmiBlitz3.ab3@15174>   OR.w d0,d1
0002D084 <AmiBlitz3.ab3@15175>   MOVE.l d1,-(a7)
0002D08A <AmiBlitz3.ab3@15177>    OR.l #$f2000016,d1                                       ;flog2.x fp0      ;fpu ^ pow
0002D08E <AmiBlitz3.ab3@15178>    BSR writelong
0002D094 <AmiBlitz3.ab3@15179>    MOVE.w regnum,d0
0002D096 <AmiBlitz3.ab3@15180>  ADDQ #1,d0
0002D098 <AmiBlitz3.ab3@15181>  ASL.w #8,d0
0002D09A <AmiBlitz3.ab3@15182>  ASL.w #2,d0
0002D0A0 <AmiBlitz3.ab3@15183>  MOVE.l #$f2000023,d1
0002D0A2 <AmiBlitz3.ab3@15184>  OR.l d0,d1
0002D0A8 <AmiBlitz3.ab3@15185>  MOVE.w regnum,d0
0002D0AA <AmiBlitz3.ab3@15186>  ASL.w #7,d0
0002D0AC <AmiBlitz3.ab3@15187>  OR.l d0,d1
0002D0B2 <AmiBlitz3.ab3@15188>    OR.l #$f2000023,d1                                      ;fmulx.x fp1,fp0
0002D0B6 <AmiBlitz3.ab3@15189>    BSR writelong
0002D0B8 <AmiBlitz3.ab3@15190>    MOVE.l (a7)+,d1
0002D0BE <AmiBlitz3.ab3@15192>    OR.l #$f2000011,d1                                      ;ftwotox.x fp0
0002D0C2 <AmiBlitz3.ab3@15193>    BSR writelong
0002D0C4 <AmiBlitz3.ab3@15194> RTS
0002D0C8 <AmiBlitz3.ab3@15197>   MOVE.w #$6001,D1
0002D0CC <AmiBlitz3.ab3@15198> BRA.w domylib
0002D0D0 <AmiBlitz3.ab3@15204>   MOVEA.l forthsp(PC),A0
0002D0D4 <AmiBlitz3.ab3@15205>   MOVE.w #$FFFF,-(A0)                                      ;#-1,-(a0) org source
0002D0D6 <AmiBlitz3.ab3@15206> RTS
0002D0DA <AmiBlitz3.ab3@15212>   MOVE.w #$D400,D1
0002D0DE <AmiBlitz3.ab3@15213> BRA.w domylib
0002D0E2 <AmiBlitz3.ab3@15217>   MOVE.w #$D401,D1
0002D0E6 <AmiBlitz3.ab3@15218> BRA.w domylib
0002D0EA <AmiBlitz3.ab3@15222>    BSR.w nocando                                           ;modlib uses an alibjsr here!
0002D0EE <AmiBlitz3.ab3@15223>   MOVE.w #$D402,D1
0002D0F2 <AmiBlitz3.ab3@15224> BRA.w domylib
0002D0F6 <AmiBlitz3.ab3@15228>   MOVE.w #$D403,D1
0002D0F8 <AmiBlitz3.ab3@15229>   MOVEQ.l #$02,D2                                          ;now a word.
0002D0FC <AmiBlitz3.ab3@15230> BRA.w domylib
0002D100 <AmiBlitz3.ab3@15234>    BSR.w nocando                                           ;modlib lib uses an alibjsr!  ;domod float
0002D106 <AmiBlitz3.ab3@15235>   TST.b fpu
0002D10A <AmiBlitz3.ab3@15236>   BEQ 'old
0002D10C <AmiBlitz3.ab3@15237>   MOVEQ #0,d1
0002D112 <AmiBlitz3.ab3@15238>   MOVE.w regnum,d1                                         ;fpu mod
0002D114 <AmiBlitz3.ab3@15239>   MOVE.l d1,d0
0002D116 <AmiBlitz3.ab3@15240>   ADDQ.l #1,d1
0002D118 <AmiBlitz3.ab3@15241>   ASL.l #7,d0
0002D11A <AmiBlitz3.ab3@15242>   ASL.l #8,d1
0002D11C <AmiBlitz3.ab3@15243>   ASL.l #2,d1
0002D11E <AmiBlitz3.ab3@15244>   OR.l d0,d1
0002D120 <AmiBlitz3.ab3@15245>   MOVE.l d0,-(a7)
0002D126 <AmiBlitz3.ab3@15246>   OR.l #$f2000021,d1
0002D12A <AmiBlitz3.ab3@15247>   BSR writelong
0002D12C <AmiBlitz3.ab3@15248>   MOVE.l (a7)+,d0
0002D12E <AmiBlitz3.ab3@15249>  RTS
0002D132 <AmiBlitz3.ab3@15252>   MOVE.w #$D404,D1
0002D134 <AmiBlitz3.ab3@15253>   MOVEQ.l #$03,D2                                          ;now a long
0002D138 <AmiBlitz3.ab3@15254> BRA.w domylib
0002D13C <AmiBlitz3.ab3@15262>   MOVE.w #$48C0,D1
0002D142 <AmiBlitz3.ab3@15263>   OR.w regnum,D1
0002D146 <AmiBlitz3.ab3@15264>    BSR.w writeword
0002D148 <AmiBlitz3.ab3@15265>   ADDQ.w #1,D1
0002D14C <AmiBlitz3.ab3@15266>    BSR.w writeword
0002D150 <AmiBlitz3.ab3@15269>    MOVE.w #$48C0,D1
0002D156 <AmiBlitz3.ab3@15270>   OR.w regnum,D1
0002D15A <AmiBlitz3.ab3@15271>    BSR.w writeword
0002D15E <AmiBlitz3.ab3@15272>   MOVE.w #$81C0,D1
0002D162 <AmiBlitz3.ab3@15273> BRA.w doplus2
0002D168 <AmiBlitz3.ab3@15277>   TST.b fast
0002D16C <AmiBlitz3.ab3@15278>   BNE.s 'l10
0002D170 <AmiBlitz3.ab3@15279>   MOVE.w #$CB01,D1
0002D174 <AmiBlitz3.ab3@15280> BRA.w domylib
0002D178 <AmiBlitz3.ab3@15286>   BSR.w JL_0_AD40
0002D17A <AmiBlitz3.ab3@15287>   MOVE.l D4,D1
0002D17E <AmiBlitz3.ab3@15288>    BSR.w JL_0_AD38
0002D182 <AmiBlitz3.ab3@15289>    BSR.w JL_0_A352
0002D188 <AmiBlitz3.ab3@15303>    MOVE.l #$4c410800,d1
0002D18C <AmiBlitz3.ab3@15304>    BSR writelong
0002D190 <AmiBlitz3.ab3@15307>   MOVE.w #$4e71,d1
0002D194 <AmiBlitz3.ab3@15309>    BSR.w JL_0_A36E
0002D196 <AmiBlitz3.ab3@15310>   MOVE.l D5,D1
0002D19A <AmiBlitz3.ab3@15311> BRA.w JL_0_AD38
0002D19E <AmiBlitz3.ab3@15314>     CMP.w #8,d3
0002D1A2 <AmiBlitz3.ab3@15315>     BEQ 'ok
0002D1A4 <AmiBlitz3.ab3@15316>     ASL.l #1,d3
0002D1A6 <AmiBlitz3.ab3@15317>     ASL.l #8,d3
0002D1AA <AmiBlitz3.ab3@15318>     MOVE.w #$e080,d1
0002D1AC <AmiBlitz3.ab3@15319>     OR.w d3,d1
0002D1B0 <AmiBlitz3.ab3@15320> BRA 'oklsr2
0002D1B4 <AmiBlitz3.ab3@15323>   MOVE.w #$e080,d1                                         ;lsr.l #,dx
0002D1BA <AmiBlitz3.ab3@15326>      SUBQ.l #6,destpointer
0002D1BE <AmiBlitz3.ab3@15327>      BSR writeword
0002D1C0 <AmiBlitz3.ab3@15328>      MOVE.l (a7)+,d3
0002D1C2 <AmiBlitz3.ab3@15329>      MOVEQ #0,d1
0002D1C8 <AmiBlitz3.ab3@15330>      CLR.l load_var_addr
0002D1CE <AmiBlitz3.ab3@15331>      CLR.l imm_addr
0002D1D2 <AmiBlitz3.ab3@15332> BRA JL_0_AD38
0002D1D6 <AmiBlitz3.ab3@15336>   MOVE.w #$CB00,D1                                         ;quickdiv
0002D1DA <AmiBlitz3.ab3@15337> BRA.w domylib
0002D1E0 <AmiBlitz3.ab3@15341>    TST.b iee
0002D1E4 <AmiBlitz3.ab3@15342>    BNE fdiv1
0002D1E8 <AmiBlitz3.ab3@15343>    MOVE.w #$FFAC,D1                                        ;floatdiv
0002D1EC <AmiBlitz3.ab3@15344> BRA.w doflib
0002D1EE <AmiBlitz3.ab3@15348>   MOVEQ #0,d0
0002D1F4 <AmiBlitz3.ab3@15349>   MOVE.w regnum,d0
0002D1F6 <AmiBlitz3.ab3@15350>   ADDQ #1,d0
0002D1F8 <AmiBlitz3.ab3@15351>   ASL.w #8,d0
0002D1FA <AmiBlitz3.ab3@15352>   ASL.w #2,d0
0002D200 <AmiBlitz3.ab3@15353>   MOVE.l #$f2000020,d1                                     ;fpu div
0002D202 <AmiBlitz3.ab3@15354>   OR.l d0,d1
0002D208 <AmiBlitz3.ab3@15355>   MOVE.w regnum,d0
0002D20A <AmiBlitz3.ab3@15356>   ASL.w #7,d0
0002D20C <AmiBlitz3.ab3@15357>   OR.l d0,d1
0002D210 <AmiBlitz3.ab3@15358> BRA.w writelong
0002D214 <AmiBlitz3.ab3@15362>   MOVE.w #$C000,D1
0002D218 <AmiBlitz3.ab3@15363> BRA.w doplus2
0002D21C <AmiBlitz3.ab3@15367>   MOVE.w #$C040,D1
0002D220 <AmiBlitz3.ab3@15368> BRA.w doplus2
0002D224 <AmiBlitz3.ab3@15372>   MOVE.w #$C080,D1
0002D228 <AmiBlitz3.ab3@15373> BRA.w doplus2
0002D22C <AmiBlitz3.ab3@15377>   MOVE.w #$8000,D1
0002D230 <AmiBlitz3.ab3@15378> BRA.w doplus2
0002D234 <AmiBlitz3.ab3@15382>   MOVE.w #$8040,D1
0002D238 <AmiBlitz3.ab3@15383> BRA.w doplus2
0002D23C <AmiBlitz3.ab3@15387>   MOVE.w #$8080,D1
0002D240 <AmiBlitz3.ab3@15388> BRA.w doplus2
0002D244 <AmiBlitz3.ab3@15392>   MOVE.w #$B100,D1
0002D24A <AmiBlitz3.ab3@15395>    MOVE.w regnum,D3
0002D24C <AmiBlitz3.ab3@15396>   OR.w D3,D1
0002D24E <AmiBlitz3.ab3@15397>   ADDQ.w #1,D3
0002D250 <AmiBlitz3.ab3@15398>   LSL.w #8,D3
0002D252 <AmiBlitz3.ab3@15399>   LSL.w #1,D3
0002D254 <AmiBlitz3.ab3@15400>   OR.w D3,D1
0002D258 <AmiBlitz3.ab3@15401> BRA.w writeword
0002D25C <AmiBlitz3.ab3@15405>   MOVE.w #$B140,D1
0002D260 <AmiBlitz3.ab3@15406> BRA.w JL_0_A25C
0002D264 <AmiBlitz3.ab3@15410>   MOVE.w #$B180,D1
0002D268 <AmiBlitz3.ab3@15411> BRA.w JL_0_A25C
0002D26C <AmiBlitz3.ab3@15415>   MOVE.w #$E1A8,D1
0002D270 <AmiBlitz3.ab3@15416> BRA.w JL_0_A298
0002D274 <AmiBlitz3.ab3@15420>   MOVE.w #$E0A8,D1
0002D278 <AmiBlitz3.ab3@15421> BRA.w JL_0_A298
0002D27C <AmiBlitz3.ab3@15425>   MOVE.w #$E0A0,D1
0002D280 <AmiBlitz3.ab3@15426> BRA.w JL_0_A298
0002D282 <AmiBlitz3.ab3@15430>   MOVE.w D1,-(A7)
0002D288 <AmiBlitz3.ab3@15431>   ADDQ.w #1,regnum
0002D28A <AmiBlitz3.ab3@15432>   MOVE.w D2,-(A7)
0002D28C <AmiBlitz3.ab3@15433>   MOVE.w D2,D3
0002D28E <AmiBlitz3.ab3@15434>   MOVEQ.l #$02,D2
0002D292 <AmiBlitz3.ab3@15439>    BSR.w writeconvertcode
0002D294 <AmiBlitz3.ab3@15441>   MOVE.w (A7)+,D2
0002D29A <AmiBlitz3.ab3@15442>   SUBQ.w #1,regnum
0002D29E <AmiBlitz3.ab3@15443>   CMP.w #$4,D2
0002D2A2 <AmiBlitz3.ab3@15444>    BEQ.w JL_0_A2C2
0002D2A4 <AmiBlitz3.ab3@15445>   MOVE.w D2,D3
0002D2A6 <AmiBlitz3.ab3@15446>   MOVEQ.l #$03,D2
0002D2AA <AmiBlitz3.ab3@15447>    BSR.w JL_0_9770
0002D2AC <AmiBlitz3.ab3@15450>    MOVE.w (A7)+,D1
0002D2B2 <AmiBlitz3.ab3@15451>   MOVE.w regnum,D3
0002D2B4 <AmiBlitz3.ab3@15452>   OR.w D3,D1
0002D2B6 <AmiBlitz3.ab3@15453>   ADDQ.w #1,D3
0002D2B8 <AmiBlitz3.ab3@15454>   LSL.w #8,D3
0002D2BA <AmiBlitz3.ab3@15455>   LSL.w #1,D3
0002D2BC <AmiBlitz3.ab3@15456>   OR.w D3,D1
0002D2C0 <AmiBlitz3.ab3@15457> BRA.w writeword
0002D2C4 <AmiBlitz3.ab3@15461>   MOVE.w #$0100,D1
0002D2C8 <AmiBlitz3.ab3@15462>    BSR.w JL_0_A31C
0002D2CE <AmiBlitz3.ab3@15463>   MOVE.w regnum,D1
0002D2D2 <AmiBlitz3.ab3@15464>   ORI.w #$56C0,D1
0002D2D6 <AmiBlitz3.ab3@15465>    BSR.w writeword
0002D2DC <AmiBlitz3.ab3@15466>   MOVE.w regnum,D1
0002D2E0 <AmiBlitz3.ab3@15467>   ORI.w #$4880,D1
0002D2E4 <AmiBlitz3.ab3@15468>    BSR.w writeword
0002D2E6 <AmiBlitz3.ab3@15469>   MOVEQ.l #$02,D2
0002D2E8 <AmiBlitz3.ab3@15470> RTS
0002D2EC <AmiBlitz3.ab3@15474>   MOVE.w #$01C0,D1
0002D2F0 <AmiBlitz3.ab3@15477>    BSR.w JL_0_A31C
0002D2F2 <AmiBlitz3.ab3@15478>   MOVEQ.l #$03,D2
0002D2F4 <AmiBlitz3.ab3@15479> RTS
0002D2F8 <AmiBlitz3.ab3@15483>   MOVE.w #$0180,D1
0002D2FC <AmiBlitz3.ab3@15484> BRA.w JL_0_A304
0002D300 <AmiBlitz3.ab3@15488>   MOVE.w #$0140,D1
0002D304 <AmiBlitz3.ab3@15489> BRA.w JL_0_A304
0002D306 <AmiBlitz3.ab3@15493>   MOVE.w D1,-(A7)
0002D308 <AmiBlitz3.ab3@15494>   MOVE.w D2,-(A7)
0002D30A <AmiBlitz3.ab3@15495>   MOVE.w D2,D3
0002D30C <AmiBlitz3.ab3@15496>   MOVEQ.l #$03,D2
0002D310 <AmiBlitz3.ab3@15497>    BSR.w JL_0_9770
0002D312 <AmiBlitz3.ab3@15498>   MOVE.w (A7)+,D3
0002D314 <AmiBlitz3.ab3@15499>   MOVEQ.l #$01,D2
0002D31A <AmiBlitz3.ab3@15500>   ADDQ.w #1,regnum
0002D31E <AmiBlitz3.ab3@15501>    BSR.w writeconvertcode
0002D324 <AmiBlitz3.ab3@15502>   SUBQ.w #1,regnum
0002D32A <AmiBlitz3.ab3@15503>   MOVE.w regnum,D1
0002D32C <AmiBlitz3.ab3@15504>   MOVE.w D1,D2
0002D32E <AmiBlitz3.ab3@15505>   ADDQ.w #1,D2
0002D330 <AmiBlitz3.ab3@15506>   LSL.w #8,D2
0002D332 <AmiBlitz3.ab3@15507>   LSL.w #1,D2
0002D334 <AmiBlitz3.ab3@15508>   OR.w (A7)+,D1
0002D336 <AmiBlitz3.ab3@15509>   OR.w D2,D1
0002D33A <AmiBlitz3.ab3@15510> BRA.w writeword
0002D340 <AmiBlitz3.ab3@15514>   MOVE.w regnum,D1
0002D344 <AmiBlitz3.ab3@15515>    BEQ.w JL_0_A36C
0002D348 <AmiBlitz3.ab3@15516>   ORI.w #$2000,D1
0002D34C <AmiBlitz3.ab3@15517>    BSR.w writeword
0002D350 <AmiBlitz3.ab3@15518>   ADDI.w #$201,D1
0002D354 <AmiBlitz3.ab3@15519>    BSR.w writeword
0002D356 <AmiBlitz3.ab3@15522> RTS
0002D35C <AmiBlitz3.ab3@15526>   MOVE.w regnum,D1
0002D360 <AmiBlitz3.ab3@15527>    BEQ.w JL_0_A384
0002D362 <AmiBlitz3.ab3@15528>   LSL.w #8,D1
0002D364 <AmiBlitz3.ab3@15529>   LSL.w #1,D1
0002D368 <AmiBlitz3.ab3@15530>   ORI.w #$2000,D1
0002D36C <AmiBlitz3.ab3@15531>    BSR.w writeword
0002D36E <AmiBlitz3.ab3@15534> RTS
0002D374 <AmiBlitz3.ab3@15538>    CLR.b isconstantvalue
0002D37A <AmiBlitz3.ab3@15539>    CLR.l lastconstantvalue
0002D382 <AmiBlitz3.ab3@15540>    CMPI.w #$7,regnum
0002D386 <AmiBlitz3.ab3@15541>    BCS.w JL_0_A6B4
0002D38C <AmiBlitz3.ab3@15542>   MOVE.l #$f2277700,d1                                     ;fmove.d fp6,-(a7)
0002D390 <AmiBlitz3.ab3@15543>   BSR writelong
0002D394 <AmiBlitz3.ab3@15544>   MOVE.w #$2F06,D1                                         ;d6 to stack
0002D398 <AmiBlitz3.ab3@15546>   CMP.w #$3,D2
0002D39C <AmiBlitz3.ab3@15547>    BCS.w JL_0_A3A2
0002D3A0 <AmiBlitz3.ab3@15548>   MOVE.w #$2F06,D1
0002D3A4 <AmiBlitz3.ab3@15551>   BSR.w writeword
0002D3A6 <AmiBlitz3.ab3@15552>   MOVE.w D1,-(A7)
0002D3AC <AmiBlitz3.ab3@15553>   SUBQ.w #1,regnum
0002D3B0 <AmiBlitz3.ab3@15554>    BSR.w JL_0_A6B4
0002D3B6 <AmiBlitz3.ab3@15555>   ADDQ.w #1,regnum
0002D3BC <AmiBlitz3.ab3@15556>   MOVE.l #$f2001b80,d1
0002D3C0 <AmiBlitz3.ab3@15557>   BSR writelong
0002D3C4 <AmiBlitz3.ab3@15558>   MOVE.w #$3E06,D1
0002D3C8 <AmiBlitz3.ab3@15559>   CMP.w #$3,D2
0002D3CC <AmiBlitz3.ab3@15560>    BCS.w JL_0_A3C8
0002D3D0 <AmiBlitz3.ab3@15561>   MOVE.w #$2E06,D1
0002D3D4 <AmiBlitz3.ab3@15564>   BSR.w writeword
0002D3D6 <AmiBlitz3.ab3@15565>   MOVE.w (A7)+,D1
0002D3DA <AmiBlitz3.ab3@15566>   ANDI.w #$F000,D1
0002D3DE <AmiBlitz3.ab3@15567>   ORI.w #$C1F,D1
0002D3E4 <AmiBlitz3.ab3@15568>   JSR writeword
0002D3EA <AmiBlitz3.ab3@15569>   MOVE.l #$f21f5700,d1                                     ;fmove.d (a7)+,fp6
0002D3EE <AmiBlitz3.ab3@15570> BRA writelong
0002D3F2 <AmiBlitz3.ab3@15574>   BSR.w JL_0_A6B4
0002D3F6 <AmiBlitz3.ab3@15575>   MOVE.w #$4440,D1
0002D3FA <AmiBlitz3.ab3@15576>   CMP.w #$3,D2
0002D3FE <AmiBlitz3.ab3@15577>    BCS.w JL_0_A406
0002D402 <AmiBlitz3.ab3@15578>   MOVE.w #$4480,D1
0002D406 <AmiBlitz3.ab3@15579>   CMP.w #$5,D2
0002D40A <AmiBlitz3.ab3@15580>    BCS.w JL_0_A406
0002D40E <AmiBlitz3.ab3@15581>   CMP.w #$6,D2
0002D412 <AmiBlitz3.ab3@15582>    BCC.w illoperr
0002D416 <AmiBlitz3.ab3@15583>   MOVE.w #$FFC4,D1
0002D41A <AmiBlitz3.ab3@15584> BRA.w JL_0_9604
0002D420 <AmiBlitz3.ab3@15587>   OR.w regnum,D1                                           ;negate
0002D426 <AmiBlitz3.ab3@15588>   CLR.l imm_addr
0002D42A <AmiBlitz3.ab3@15589> BRA.w writeword
0002D42E <AmiBlitz3.ab3@15593>    BSR.w eval4
0002D432 <AmiBlitz3.ab3@15594>   CMP.w #")",D0
0002D436 <AmiBlitz3.ab3@15595>    BEQ.w JL_0_A424
0002D43A <AmiBlitz3.ab3@15596>   CMP.w #"}",D0
0002D43E <AmiBlitz3.ab3@15597>    BNE.w brackets_                                         ;syntax error brackets
0002D442 <AmiBlitz3.ab3@15600> BRA.w get1bytemain
0002D446 <AmiBlitz3.ab3@15604>    BSR.w eval4
0002D44A <AmiBlitz3.ab3@15605>   CMP.w #$5,D2
0002D44E <AmiBlitz3.ab3@15606>    BCC.w illoperr
0002D454 <AmiBlitz3.ab3@15607>   MOVE.w regnum,D1
0002D458 <AmiBlitz3.ab3@15608>   ORI.w #$4640,D1
0002D45C <AmiBlitz3.ab3@15609>   CMP.w #$3,D2
0002D460 <AmiBlitz3.ab3@15610>    BCS.w writeword
0002D464 <AmiBlitz3.ab3@15611>   EORI.w #$C0,D1
0002D468 <AmiBlitz3.ab3@15612> BRA.w writeword
0002D46A <AmiBlitz3.ab3@15616>   MOVEQ.l #$05,D2                                          ;fpu pi
0002D470 <AmiBlitz3.ab3@15617>    TST.b fpu
0002D474 <AmiBlitz3.ab3@15618>   BEQ 'old
0002D47A <AmiBlitz3.ab3@15619> JMP fpupi
0002D480 <AmiBlitz3.ab3@15622>   MOVE.w regnum,D1
0002D482 <AmiBlitz3.ab3@15623>   LSL.w #8,D1
0002D484 <AmiBlitz3.ab3@15624>   LSL.w #1,D1
0002D488 <AmiBlitz3.ab3@15625>   ORI.w #$203C,D1
0002D48C <AmiBlitz3.ab3@15626>    BSR.w writeword
0002D492 <AmiBlitz3.ab3@15627>   MOVE.l #$C90FDA42,D1
0002D496 <AmiBlitz3.ab3@15628>    BSR.w writelong
0002D49A <AmiBlitz3.ab3@15629> BRA.w get1bytemain
0002D596 <AmiBlitz3.ab3@15637> forthstack:  Ds.l 63                                       ;ds.b  18*32 org source
0002D692 <AmiBlitz3.ab3@15638>              Ds.l 63
0002D6DA <AmiBlitz3.ab3@15639>              Ds.l 18
0002D6DE <AmiBlitz3.ab3@15640> forthsp:     Dc.l forthstack
0002D70A <AmiBlitz3.ab3@15645>    !fget
0002D70E <AmiBlitz3.ab3@15646>    CMP.b #$7e,d0
0002D712 <AmiBlitz3.ab3@15647>    BNE 'noc
0002D714 <AmiBlitz3.ab3@15648>    SUBQ.l #1,a5
0002D718 <AmiBlitz3.ab3@15649>    BSR get1bytemain
0002D71C <AmiBlitz3.ab3@15652>    CMP.b #"#",d0
0002D720 <AmiBlitz3.ab3@15653>    BNE 'ld1
0002D724 <AmiBlitz3.ab3@15654>    CMP.b #$22,(a5)
0002D728 <AmiBlitz3.ab3@15655>    BNE 'ld1
0002D72E <AmiBlitz3.ab3@15656>    JSR addimmi
0002D732 <AmiBlitz3.ab3@15659>    CMP.b #$22,d0
0002D736 <AmiBlitz3.ab3@15660>    BNE 'l11
0002D73C <AmiBlitz3.ab3@15670>    NOT.w instringon
0002D73E <AmiBlitz3.ab3@15673>    TST.b d0
0002D742 <AmiBlitz3.ab3@15674>    BPL 'l10
0002D744 <AmiBlitz3.ab3@15675>    LSL.w #8,d0
0002D746 <AmiBlitz3.ab3@15676>    MOVE.b (a5)+,d0                      ; get blitzlib instruction with returnvalue(called in functions/statement)
0002D74C <AmiBlitz3.ab3@15677>    MOVE.l d0,lasttoken
0002D752 <AmiBlitz3.ab3@15678>    MOVE.w d0,lastchar
0002D758 <AmiBlitz3.ab3@15679>    CLR.l rightsidetype                  ; blitzlibs do currently no type check
0002D75C <AmiBlitz3.ab3@15681>   CMP.w #"(",D0
0002D760 <AmiBlitz3.ab3@15682>    BEQ.w checkcast2
0002D764 <AmiBlitz3.ab3@15683> nocast CMP.w #"{",D0
0002D768 <AmiBlitz3.ab3@15684>    BEQ.w JL_0_A410
0002D76C <AmiBlitz3.ab3@15685>   CMP.w #$2D,D0
0002D770 <AmiBlitz3.ab3@15686>    BEQ.w JL_0_A3DA
0002D774 <AmiBlitz3.ab3@15687>   CMP.w #-$7F77,D0
0002D778 <AmiBlitz3.ab3@15688>    BEQ.w JL_0_A428
0002D77C <AmiBlitz3.ab3@15689>   MOVEA.l forthsp(PC),A1
0002D782 <AmiBlitz3.ab3@15690>   CMPA.l #forthsp,A1
0002D786 <AmiBlitz3.ab3@15691>    BCC.w conmemerr
0002D78C <AmiBlitz3.ab3@15692>   MOVE.l destpointer,(A1)+
0002D792 <AmiBlitz3.ab3@15693>   MOVE.l hunkoffsetbase,(A1)+
0002D798 <AmiBlitz3.ab3@15694>   MOVE.l lasta6,(A1)+
0002D79E <AmiBlitz3.ab3@15695>   MOVE.w lasta6,(A1)+
0002D7A0 <AmiBlitz3.ab3@15696>   CLR.w (A1)+
0002D7A2 <AmiBlitz3.ab3@15697>   CLR.w (A1)+
0002D7A8 <AmiBlitz3.ab3@15698>   MOVE.l A1,forthsp
0002D7BA <AmiBlitz3.ab3@15700>    !compare2
0002D7BE <AmiBlitz3.ab3@15701>    BEQ.w JL_0_B224
0002D7C2 <AmiBlitz3.ab3@15702>   CMP.w #".",D0
0002D7C6 <AmiBlitz3.ab3@15703>    BEQ.w JL_0_B21E
0002D7CA <AmiBlitz3.ab3@15704>   CMP.w #"#",D0
0002D7CE <AmiBlitz3.ab3@15705>    BEQ.w get_constant
0002D7D2 <AmiBlitz3.ab3@15706>   CMP.w #"$",D0
0002D7D6 <AmiBlitz3.ab3@15707>    BEQ.w get_hexconstant
0002D7DA <AmiBlitz3.ab3@15708>   CMP.w #"%",D0
0002D7DE <AmiBlitz3.ab3@15709>    BEQ.w JL_0_A8C0
0002D7E2 <AmiBlitz3.ab3@15710>   CMP.w #-$7FD1,D0
0002D7E6 <AmiBlitz3.ab3@15711>    BEQ.w _SizeOf
0002D7EA <AmiBlitz3.ab3@15712>   CMP.w #-$7F46,D0
0002D7EE <AmiBlitz3.ab3@15713>    BEQ.w JL_0_A44E
0002D7F2 <AmiBlitz3.ab3@15714>   CMP.w #-$7F3B,D0
0002D7F6 <AmiBlitz3.ab3@15715>    BEQ.w JL_0_A83C
0002D7FA <AmiBlitz3.ab3@15716>   CMP.w #-$7F3A,D0
0002D7FE <AmiBlitz3.ab3@15717>    BEQ.w JL_0_A846
0002D804 <AmiBlitz3.ab3@15718>   MOVE.w constmode,D1
0002D808 <AmiBlitz3.ab3@15719>    BEQ.w JL_0_A776
0002D82A <AmiBlitz3.ab3@15720>    !compare1                                               ;bsr.w tstalpha
0002D82E <AmiBlitz3.ab3@15721>    BEQ.w JL_0_AF22
0002D832 <AmiBlitz3.ab3@15722>   CMP.w #$5F,D0
0002D836 <AmiBlitz3.ab3@15723>    BEQ.w JL_0_AF22
0002D83A <AmiBlitz3.ab3@15724>   CMP.w #$22,D0
0002D83E <AmiBlitz3.ab3@15725>    BEQ.w JL_0_AF00
0002D842 <AmiBlitz3.ab3@15726> BRA.w syntaxerr
0002D848 <AmiBlitz3.ab3@15728> checkcast2 JMP checkcast
0002D84E <AmiBlitz3.ab3@15731>   MOVE.w cfetchmode,D1
0002D852 <AmiBlitz3.ab3@15732>   BEQ.w JL_0_A784
0002D856 <AmiBlitz3.ab3@15733> BRA.w badconerr
0002D85C <AmiBlitz3.ab3@15736> JMP syntaxerropt4
0002D85E <AmiBlitz3.ab3@15740>   NOT.w -(A1)
0002D880 <AmiBlitz3.ab3@15741>   !compare1                                                ;bsr.w tstalpha
0002D884 <AmiBlitz3.ab3@15742>    BEQ.w JL_0_AF4C
0002D888 <AmiBlitz3.ab3@15743>   CMP.w #$2A,D0
0002D88C <AmiBlitz3.ab3@15744>    BEQ.w JL_0_AF4C
0002D890 <AmiBlitz3.ab3@15745>   CMP.w #$5C,D0
0002D894 <AmiBlitz3.ab3@15746>    BEQ.w JL_0_AF4C
0002D898 <AmiBlitz3.ab3@15747>   CMP.w #$22,D0
0002D89C <AmiBlitz3.ab3@15748>    BEQ.w JL_0_ADC0
0002D8A0 <AmiBlitz3.ab3@15749>   BTST #$F,D0
0002D8A4 <AmiBlitz3.ab3@15750>    BNE.w JL_0_AAF2
0002D8A8 <AmiBlitz3.ab3@15751>   CMP.w #"&",D0
0002D8AC <AmiBlitz3.ab3@15752>    BEQ.w getvaraddr                                          ;jump to & address of var code
0002D8B0 <AmiBlitz3.ab3@15753>   CMP.w #"?",D0
0002D8B4 <AmiBlitz3.ab3@15754>    BEQ.w JL_0_AED4
0002D8B8 <AmiBlitz3.ab3@15757>   CMP.b #"@",d0
0002D8BC <AmiBlitz3.ab3@15758>    BNE syntaxerr
0002D8C2 <AmiBlitz3.ab3@15759>   TST.b newsyntax
0002D8C6 <AmiBlitz3.ab3@15760>    BEQ JUMP_syntaxerropt4
0002D8CC <AmiBlitz3.ab3@15761>   MOVE.w regnum,D1
0002D8CE <AmiBlitz3.ab3@15762>   LSL.w #8,D1
0002D8D0 <AmiBlitz3.ab3@15763>   LSL.w #1,D1
0002D8D4 <AmiBlitz3.ab3@15764>   ORI.w #$203C,D1
0002D8D8 <AmiBlitz3.ab3@15765>   BSR.w writeword
0002D8DC <AmiBlitz3.ab3@15766>   CMP.b #$22,(a5)
0002D8E0 <AmiBlitz3.ab3@15767>    BNE syntaxerr
0002D8E2 <AmiBlitz3.ab3@15768>   ADDQ #1,a5
0002D8E4 <AmiBlitz3.ab3@15769>   MOVEQ #0,d0
0002D8E8 <AmiBlitz3.ab3@15770>   CMP.b #1,d2
0002D8EC <AmiBlitz3.ab3@15771>    BEQ 'l3b
0002D8F0 <AmiBlitz3.ab3@15772>   CMP.b #2,d2
0002D8F4 <AmiBlitz3.ab3@15773>    BEQ 'l2b
0002D8F8 <AmiBlitz3.ab3@15774>   CMP.b #4,d2
0002D8FC <AmiBlitz3.ab3@15775>    BEQ error_convert_types
0002D8FE <AmiBlitz3.ab3@15776>   MOVE.b (a5)+,d0
0002D902 <AmiBlitz3.ab3@15777>   BEQ syntaxerr
0002D906 <AmiBlitz3.ab3@15778>   CMP.b #$22,d0
0002D90A <AmiBlitz3.ab3@15779>   BNE 'l1
0002D90E <AmiBlitz3.ab3@15780>     MOVE.b #0,d0
0002D912 <AmiBlitz3.ab3@15781> BRA 'do
0002D914 <AmiBlitz3.ab3@15784>   ASL.l #8,d0
0002D916 <AmiBlitz3.ab3@15785>   MOVE.b (a5)+,d0
0002D91A <AmiBlitz3.ab3@15786>   BEQ syntaxerr
0002D91E <AmiBlitz3.ab3@15787>   CMP.b #$22,d0
0002D922 <AmiBlitz3.ab3@15788>   BNE 'l2
0002D926 <AmiBlitz3.ab3@15789>     MOVE.b #0,d0
0002D928 <AmiBlitz3.ab3@15790>     ASR.l #8,d0
0002D92C <AmiBlitz3.ab3@15791> BRA 'do
0002D92E <AmiBlitz3.ab3@15794>   ASL.l #8,d0
0002D930 <AmiBlitz3.ab3@15797>   MOVE.b (a5)+,d0
0002D934 <AmiBlitz3.ab3@15798>    BEQ syntaxerr
0002D938 <AmiBlitz3.ab3@15799>    CMP.b #$22,d0
0002D93C <AmiBlitz3.ab3@15800>    BNE 'l3
0002D940 <AmiBlitz3.ab3@15801>    MOVE.b #0,d0
0002D942 <AmiBlitz3.ab3@15802>    ASR.l #8,d0
0002D946 <AmiBlitz3.ab3@15803> BRA 'do
0002D948 <AmiBlitz3.ab3@15806>   ASL.l #8,d0
0002D94A <AmiBlitz3.ab3@15809>   MOVE.b (a5)+,d0
0002D94E <AmiBlitz3.ab3@15810>    BEQ syntaxerr
0002D952 <AmiBlitz3.ab3@15811>    CMP.b #$22,d0
0002D956 <AmiBlitz3.ab3@15812>    BNE 'l4
0002D95A <AmiBlitz3.ab3@15813>    MOVE.b #0,d0
0002D95C <AmiBlitz3.ab3@15814>    ASR.l #8,d0
0002D960 <AmiBlitz3.ab3@15815> BRA 'do
0002D964 <AmiBlitz3.ab3@15818>    CMP.b #$22,(a5)+
0002D968 <AmiBlitz3.ab3@15819>    BNE JUMP_error4char
0002D96A <AmiBlitz3.ab3@15822>   MOVE.l d0,d1
0002D96E <AmiBlitz3.ab3@15823>     BSR writelong
0002D972 <AmiBlitz3.ab3@15824>     BSR get1bytemain
0002D974 <AmiBlitz3.ab3@15825> RTS
0002D978 <AmiBlitz3.ab3@15829>   BSR.w get1bytemain
0002D97C <AmiBlitz3.ab3@15830>   CMP.w #$2E,D0
0002D980 <AmiBlitz3.ab3@15831>    BEQ.b JL_0_A7F4
0002D98A <AmiBlitz3.ab3@15833>   MOVE.w oldqflag,instringon
0002D990 <AmiBlitz3.ab3@15834>   MOVEA.l lastsourcepos,A5
0002D992 <AmiBlitz3.ab3@15835>   MOVE.w D2,-(A7)
0002D996 <AmiBlitz3.ab3@15836>    BSR.w getparameter2
0002D99A <AmiBlitz3.ab3@15837>    BEQ.w syntaxerr
0002D9A0 <AmiBlitz3.ab3@15838>   LEA varbase,A2
0002D9A4 <AmiBlitz3.ab3@15839>    BSR.w findvariable
0002D9A8 <AmiBlitz3.ab3@15840>    BNE.w notypeerr
0002D9AC <AmiBlitz3.ab3@15841>   MOVE.w $4(A2),D3
0002D9AE <AmiBlitz3.ab3@15842>   EXT.l D3
0002D9B0 <AmiBlitz3.ab3@15843>   MOVE.w (A7)+,D2
0002D9B4 <AmiBlitz3.ab3@15844> BRA.w JL_0_B46E
0002D9B6 <AmiBlitz3.ab3@15848>   MOVE.w D2,-(A7)
0002D9BA <AmiBlitz3.ab3@15849>    BSR.w getparameter2
0002D9BE <AmiBlitz3.ab3@15850>    BEQ.w syntaxerr
0002D9C4 <AmiBlitz3.ab3@15851>   LEA newtypebase,A2
0002D9C8 <AmiBlitz3.ab3@15852>    BSR.w findtype
0002D9CC <AmiBlitz3.ab3@15853>    BNE.w notypeerr
0002D9CE <AmiBlitz3.ab3@15854>   MOVEQ.l #$00,D3
0002D9D2 <AmiBlitz3.ab3@15855>   CMP.w #$5C,D0
0002D9D6 <AmiBlitz3.ab3@15856>    BNE.w JL_0_A832
0002D9DA <AmiBlitz3.ab3@15857>    BSR.w getparameter2
0002D9DE <AmiBlitz3.ab3@15858>    BEQ.w syntaxerr
0002D9E2 <AmiBlitz3.ab3@15859>   LEA $4(A2),A2
0002D9E6 <AmiBlitz3.ab3@15860>    BSR.w findvariable2
0002D9EA <AmiBlitz3.ab3@15861>    BNE.w noofferr
0002D9EE <AmiBlitz3.ab3@15862>   MOVE.w $4(A2),D3
0002D9F2 <AmiBlitz3.ab3@15863> BRA.w JL_0_A836
0002D9F6 <AmiBlitz3.ab3@15867>   MOVE.w $8(A2),D3
0002D9F8 <AmiBlitz3.ab3@15870>   MOVE.w (A7)+,D2
0002D9FC <AmiBlitz3.ab3@15871> BRA.w JL_0_B46E
0002D9FE <AmiBlitz3.ab3@15875>   MOVEQ.l #-$01,D3
0002DA02 <AmiBlitz3.ab3@15876>    BSR.w get1bytemain
0002DA06 <AmiBlitz3.ab3@15877> BRA.w JL_0_B46E
0002DA08 <AmiBlitz3.ab3@15881>   MOVEQ.l #$00,D3
0002DA0C <AmiBlitz3.ab3@15882>    BSR.w get1bytemain
0002DA10 <AmiBlitz3.ab3@15883> BRA.w JL_0_B46E
0002DA14 <AmiBlitz3.ab3@15887>   CMP.w #$30,D0
0002DA18 <AmiBlitz3.ab3@15888>    BCS.w JL_0_A876
0002DA1C <AmiBlitz3.ab3@15889>   CMP.w #$39,D0
0002DA20 <AmiBlitz3.ab3@15890>    BLS.w JL_0_A874
0002DA24 <AmiBlitz3.ab3@15891>   ANDI.w #$FFDF,D0
0002DA28 <AmiBlitz3.ab3@15892>   CMP.w #$46,D0
0002DA2C <AmiBlitz3.ab3@15893>    BHI.w JL_0_A876
0002DA30 <AmiBlitz3.ab3@15894>   CMP.w #$41,D0
0002DA34 <AmiBlitz3.ab3@15895>    BCS.w JL_0_A876
0002DA36 <AmiBlitz3.ab3@15898>    CMP.w D0,D0
0002DA38 <AmiBlitz3.ab3@15901> RTS
0002DA3C <AmiBlitz3.ab3@15905>   CMP.w #$31,D0
0002DA40 <AmiBlitz3.ab3@15906>    BEQ.w JL_0_A884
0002DA44 <AmiBlitz3.ab3@15907>   CMP.w #$30,D0
0002DA46 <AmiBlitz3.ab3@15910> RTS
0002DA48 <AmiBlitz3.ab3@15914>    MOVEQ #0,d0
0002DA4A <AmiBlitz3.ab3@15915>    MOVE.b (a5)+,d0
0002DA4C <AmiBlitz3.ab3@15916>    MOVE.b (a5)+,d0
0002DA50 <AmiBlitz3.ab3@15917>    BSR ishex
0002DA54 <AmiBlitz3.ab3@15918>    BNE syntaxerr
0002DA58 <AmiBlitz3.ab3@15919>    SUBI.w #$30,D0
0002DA5C <AmiBlitz3.ab3@15920>    CMP.w #$9,D0
0002DA60 <AmiBlitz3.ab3@15921>    BLS.w 'l1
0002DA62 <AmiBlitz3.ab3@15922>    SUBQ.w #7,D0
0002DA64 <AmiBlitz3.ab3@15925>    MOVE.l d0,d1
0002DA66 <AmiBlitz3.ab3@15926>    MOVE.b (a5)+,d0
0002DA6A <AmiBlitz3.ab3@15927>      BSR ishex
0002DA6E <AmiBlitz3.ab3@15928>     BNE syntaxerr
0002DA70 <AmiBlitz3.ab3@15929>     LSL.l #4,d1
0002DA74 <AmiBlitz3.ab3@15930>     SUBI.w #$30,D0
0002DA78 <AmiBlitz3.ab3@15931>    CMP.w #$9,D0
0002DA7C <AmiBlitz3.ab3@15932>    BLS.w 'l2
0002DA7E <AmiBlitz3.ab3@15933>    SUBQ.w #7,D0
0002DA80 <AmiBlitz3.ab3@15936>   ADD.l d1,d0
0002DA82 <AmiBlitz3.ab3@15937> RTS
0002DA86 <AmiBlitz3.ab3@15941>    BSR.w get1bytemain
0002DA8A <AmiBlitz3.ab3@15942>    BSR.w ishex
0002DA8E <AmiBlitz3.ab3@15943>    BNE.w syntaxerr
0002DA90 <AmiBlitz3.ab3@15944>   MOVEQ.l #$00,D3
0002DA94 <AmiBlitz3.ab3@15945>   CMP.w #5,d2
0002DA98 <AmiBlitz3.ab3@15946>   BNE JL_0_A894
0002DA9E <AmiBlitz3.ab3@15947>   CMP.l #newtype_double,a2
0002DAA2 <AmiBlitz3.ab3@15948>   BEQ 'doit
0002DAA8 <AmiBlitz3.ab3@15949>   CMP.l #newtype_float,a2
0002DAAC <AmiBlitz3.ab3@15950>   BNE JL_0_A894
0002DAB4 <AmiBlitz3.ab3@15953>    fmove.s #0,fp0
0002DABA <AmiBlitz3.ab3@15955>   TST.b fpu
0002DABE <AmiBlitz3.ab3@15956>   BEQ JL_0_A894
0002DAC4 <AmiBlitz3.ab3@15957>   fmove.w #16,fp1
0002DAC8 <AmiBlitz3.ab3@15958>   fmul.x fp1,fp0
0002DACC <AmiBlitz3.ab3@15959>   SUBI.w #$30,D0
0002DAD0 <AmiBlitz3.ab3@15960>   CMP.w #$9,D0
0002DAD4 <AmiBlitz3.ab3@15961>    BLS.w JL_0_A8AEa
0002DAD6 <AmiBlitz3.ab3@15962>   SUBQ.w #7,D0
0002DADA <AmiBlitz3.ab3@15965>    fmove.w d0,fp1
0002DADE <AmiBlitz3.ab3@15966>    fadd.x fp1,fp0
0002DAE2 <AmiBlitz3.ab3@15967>    BSR.w get1bytemain
0002DAE6 <AmiBlitz3.ab3@15968>    BSR.w ishex
0002DAEA <AmiBlitz3.ab3@15969>    BEQ.w JL_0_A894a
0002DAEE <AmiBlitz3.ab3@15970> BRA.w nofpregload
0002DAF4 <AmiBlitz3.ab3@15974>   CMP.l #$10000000,D3
0002DAF8 <AmiBlitz3.ab3@15975>    BCC.w overerr
0002DAFA <AmiBlitz3.ab3@15976>   LSL.l #4,D3
0002DAFE <AmiBlitz3.ab3@15977>   SUBI.w #$30,D0
0002DB02 <AmiBlitz3.ab3@15978>   CMP.w #$9,D0
0002DB06 <AmiBlitz3.ab3@15979>    BLS.w JL_0_A8AE
0002DB08 <AmiBlitz3.ab3@15980>   SUBQ.w #7,D0
0002DB0A <AmiBlitz3.ab3@15983>   OR.w D0,D3
0002DB0E <AmiBlitz3.ab3@15984>    BSR.w get1bytemain
0002DB12 <AmiBlitz3.ab3@15985>    BSR.w ishex
0002DB16 <AmiBlitz3.ab3@15986>    BEQ.w JL_0_A894
0002DB1A <AmiBlitz3.ab3@15987> BRA.w JL_0_B46E
0002DB1E <AmiBlitz3.ab3@15991>    BSR.w get1bytemain
0002DB22 <AmiBlitz3.ab3@15992>    BSR.w JL_0_A878
0002DB26 <AmiBlitz3.ab3@15993>    BNE.w syntaxerr
0002DB28 <AmiBlitz3.ab3@15994>    MOVEQ.l #$00,D3
0002DB2A <AmiBlitz3.ab3@15997>    LSL.l #1,D3
0002DB2E <AmiBlitz3.ab3@15998>    BCS.w overerr
0002DB32 <AmiBlitz3.ab3@15999>   SUBI.w #$30,D0
0002DB34 <AmiBlitz3.ab3@16000>   OR.w D0,D3
0002DB38 <AmiBlitz3.ab3@16001>    BSR.w get1bytemain
0002DB3C <AmiBlitz3.ab3@16002>    BSR.w JL_0_A878
0002DB40 <AmiBlitz3.ab3@16003>    BEQ.w JL_0_A8CE
0002DB44 <AmiBlitz3.ab3@16004> BRA.w JL_0_B46E
0002DB46 <AmiBlitz3.ab3@16008>    MOVE.w d2,-(A7)
0002DB4E <AmiBlitz3.ab3@16009>    MOVE.b #0,automode
0002DB52 <AmiBlitz3.ab3@16010>    CMP.b #"@",(a5)
0002DB56 <AmiBlitz3.ab3@16011>    BNE 'l1
0002DB58 <AmiBlitz3.ab3@16012>    ADDQ.l #1,a5
0002DB60 <AmiBlitz3.ab3@16013>    MOVE.b #1,automode
0002DB64 <AmiBlitz3.ab3@16014>    BSR getparameter2
0002DB68 <AmiBlitz3.ab3@16015>    BSR findlabel2
0002DB6C <AmiBlitz3.ab3@16016>    BNE 'addit
0002DB70 <AmiBlitz3.ab3@16017> BRA errormsg_autocount
0002DB74 <AmiBlitz3.ab3@16020>   BSR.w addlabelhash
0002DB7C <AmiBlitz3.ab3@16021>   MOVE.l #$1,$4(A2)
0002DB80 <AmiBlitz3.ab3@16022>   MOVEM.l a2/a5,-(a7)
0002DB86 <AmiBlitz3.ab3@16023>   MOVE.w lastchar,-(a7)
0002DB8C <AmiBlitz3.ab3@16024>   LEA autostorename,a5
0002DB90 <AmiBlitz3.ab3@16025>   BSR getparameter2
0002DB94 <AmiBlitz3.ab3@16026>   BSR findlabel2
0002DB98 <AmiBlitz3.ab3@16027>   BEQ 'found
0002DB9C <AmiBlitz3.ab3@16028>   BSR.w addlabelhash
0002DBA4 <AmiBlitz3.ab3@16029>   MOVE.l #$1,$4(A2)
0002DBAC <AmiBlitz3.ab3@16030>   MOVE.l #0,8(a2)
0002DBAE <AmiBlitz3.ab3@16033>    MOVE.w (a7)+,d0
0002DBB4 <AmiBlitz3.ab3@16034>    MOVE.w d0,lastchar
0002DBB8 <AmiBlitz3.ab3@16035>   MOVE.l 8(a2),d3
0002DBC0 <AmiBlitz3.ab3@16036>   ADD.l #1,8(a2)
0002DBC4 <AmiBlitz3.ab3@16037>   MOVEM.l (a7)+,a2/a5
0002DBC8 <AmiBlitz3.ab3@16038>   MOVE.l d3,8(a2)
0002DBCC <AmiBlitz3.ab3@16039>   MOVE.l $8(A2),D3
0002DBD0 <AmiBlitz3.ab3@16040> BRA.l 'l3
0002DBD4 <AmiBlitz3.ab3@16043>   BSR.w getparameter2
0002DBDA <AmiBlitz3.ab3@16044>     TST.b incnif
0002DBDE <AmiBlitz3.ab3@16045>     BEQ 'lc1
0002DBE2 <AmiBlitz3.ab3@16046>     BSR.w findlabel2
0002DBE6 <AmiBlitz3.ab3@16047>     BNE 'l5
0002DBE8 <AmiBlitz3.ab3@16048>     MOVEQ #1,d3
0002DBEA <AmiBlitz3.ab3@16049>     MOVE.w (A7)+,D2
0002DBEE <AmiBlitz3.ab3@16050> BRA JL_0_B46E
0002DBF0 <AmiBlitz3.ab3@16053>   MOVEQ #0,d3
0002DBF2 <AmiBlitz3.ab3@16054>     MOVE.w (A7)+,D2
0002DBF6 <AmiBlitz3.ab3@16055> BRA JL_0_B46E
0002DBFA <AmiBlitz3.ab3@16058>    BSR.w findlabel2
0002DBFE <AmiBlitz3.ab3@16059>    BNE.w cnferr
0002DC06 <AmiBlitz3.ab3@16062>    CMPI.l #$1,$4(A2)
0002DC0A <AmiBlitz3.ab3@16063>    BNE.w cnferr
0002DC0E <AmiBlitz3.ab3@16065>    MOVE.l $8(A2),D3
0002DC10 <AmiBlitz3.ab3@16066>    MOVE.w (A7)+,D2
0002DC14 <AmiBlitz3.ab3@16067> BRA.w JL_0_B46E
0002DC1A <AmiBlitz3.ab3@16071>   CLR.w vartype
0002DC22 <AmiBlitz3.ab3@16072>   MOVE.b #3,peekaddrsize
0002DC26 <AmiBlitz3.ab3@16073>   BSR.w JL_0_A916
0002DC2C <AmiBlitz3.ab3@16074>   MOVE.l a2,rightsidetype
0002DC2E <AmiBlitz3.ab3@16075>   MOVEQ.l #$03,D2
0002DC30 <AmiBlitz3.ab3@16076> RTS
0002DC34 <AmiBlitz3.ab3@16080>    BSR.w get1bytemain
0002DC46 <AmiBlitz3.ab3@16081>    !compare2
0002DC4A <AmiBlitz3.ab3@16082>    BEQ andop2
0002DC4E <AmiBlitz3.ab3@16083>    BSR.w getparameter
0002DC52 <AmiBlitz3.ab3@16084>    BSR.w JL_0_8E3C
0002DC56 <AmiBlitz3.ab3@16085>    BSR.w calcvar
0002DC5A <AmiBlitz3.ab3@16086>   CMP.b #$7,D2
0002DC5E <AmiBlitz3.ab3@16087>    BNE.w JL_0_A960
0002DC62 <AmiBlitz3.ab3@16088>   BTST #$F,D2
0002DC66 <AmiBlitz3.ab3@16089>    BNE.w JL_0_A94A
0002DC6C <AmiBlitz3.ab3@16090>   MOVE.w D3,stamp2+2
0002DC72 <AmiBlitz3.ab3@16091>   MOVE.l stamp2,D1
0002DC76 <AmiBlitz3.ab3@16092>    BSR.w pokela5s
0002DC7A <AmiBlitz3.ab3@16093> BRA.w JL_0_A978
0002DC80 <AmiBlitz3.ab3@16097>   MOVE.w regnum,D1
0002DC82 <AmiBlitz3.ab3@16098>   LSL.w #8,D1
0002DC84 <AmiBlitz3.ab3@16099>   LSL.w #1,D1
0002DC8A <AmiBlitz3.ab3@16100>   OR.w stamp,D1
0002DC8E <AmiBlitz3.ab3@16101>    BSR.w writeword
0002DC90 <AmiBlitz3.ab3@16102> RTS
0002DC94 <AmiBlitz3.ab3@16106>   BTST #$F,D2
0002DC98 <AmiBlitz3.ab3@16107>    BNE.w JL_0_A978
0002DC9E <AmiBlitz3.ab3@16108>   MOVE.w D3,leaamp+2
0002DCA4 <AmiBlitz3.ab3@16109>   MOVE.l leaamp,D1
0002DCA8 <AmiBlitz3.ab3@16110>    BSR.w pokela5s
0002DCAE <AmiBlitz3.ab3@16113>   MOVE.w regnum,D1
0002DCB0 <AmiBlitz3.ab3@16114>   LSL.w #8,D1
0002DCB2 <AmiBlitz3.ab3@16115>   LSL.w #1,D1
0002DCB8 <AmiBlitz3.ab3@16116>   OR.w leaamp2,D1
0002DCBC <AmiBlitz3.ab3@16117> BRA.w writeword
0002DCC0 <AmiBlitz3.ab3@16121>   MOVE.w #$D200,D1
0002DCC4 <AmiBlitz3.ab3@16122>    BSR.w Atokejsr
0002DCC6 <AmiBlitz3.ab3@16123>   MOVEQ.l #$03,D2
0002DCC8 <AmiBlitz3.ab3@16124> RTS
0002DCCC <AmiBlitz3.ab3@16128> addrcode:  Dc.b $20,$6D,$00,$00                            ;MOVEA.L $0000(A5),A0
0002DCCE <AmiBlitz3.ab3@16129>            Dc.b $D0,$C0                                    ;ADDA.W  D0,A0
0002DCD0 <AmiBlitz3.ab3@16130>            Dc.b $20,$08                                    ;MOVE.L  A0,D0
0002DCD4 <AmiBlitz3.ab3@16136>    BSR.w get1bytemain
0002DCD6 <AmiBlitz3.ab3@16137>   MOVE.w D0,D1
0002DCDA <AmiBlitz3.ab3@16138>    BPL.w syntaxerr
0002DCDC <AmiBlitz3.ab3@16139>   MOVE.w D2,-(A7)
0002DCE0 <AmiBlitz3.ab3@16140>   BCLR #$F,D1
0002DCE4 <AmiBlitz3.ab3@16141>    BSR.w searchinstr
0002DCE8 <AmiBlitz3.ab3@16142>   MOVE.l $12(A2),D0
0002DCEC <AmiBlitz3.ab3@16143>   TST.w -$2(A2,D0.L)
0002DCF0 <AmiBlitz3.ab3@16144>    BEQ.w freeerr
0002DCF2 <AmiBlitz3.ab3@16145>   MOVE.w (A7)+,D2
0002DCF4 <AmiBlitz3.ab3@16146> RTS
0002DCF8 <AmiBlitz3.ab3@16150>   MOVE.l $0(A5),D0
0002DCFC <AmiBlitz3.ab3@16151>    BNE.b ucodeskip
0002DCFE <AmiBlitz3.ab3@16152>   MOVEQ.l #-$01,D0
0002DD02 <AmiBlitz3.ab3@16153> BRA.b usedcodef
0002DD06 <AmiBlitz3.ab3@16156>   SUB.l $0(A5),D0
0002DD08 <AmiBlitz3.ab3@16159>   LSR.w #8,D0
0002DD0C <AmiBlitz3.ab3@16164>    MOVE.l $0(A5),D0
0002DD10 <AmiBlitz3.ab3@16165>    BNE.b ucodeskip2
0002DD12 <AmiBlitz3.ab3@16166>   MOVEQ.l #-$01,D0
0002DD16 <AmiBlitz3.ab3@16167> BRA.b usedcode2f
0002DD1A <AmiBlitz3.ab3@16170>   SUB.l $0(A5),D0                                          ;usedcode2
0002DD1C <AmiBlitz3.ab3@16171>   LSR.w #8,D0
0002DD1E <AmiBlitz3.ab3@16174>   LSR.w #8,D0
0002DD20 <AmiBlitz3.ab3@16179>   MOVE.l D0,-(A7)
0002DD22 <AmiBlitz3.ab3@16182>   MOVE.l (A7)+,D0
0002DD24 <AmiBlitz3.ab3@16185>   MOVE.l D0,D0
0002DD28 <AmiBlitz3.ab3@16191>   BSR.w JL_0_A9A0
0002DD2C <AmiBlitz3.ab3@16193>   MOVE.w -$2(A2,D0.L),D3
0002DD30 <AmiBlitz3.ab3@16194>   CMP.w #$9,D3
0002DD34 <AmiBlitz3.ab3@16195>    BCC.w doused__skip
0002DD38 <AmiBlitz3.ab3@16199>   LEA usedcode(PC),A0
0002DD3C <AmiBlitz3.ab3@16200>   LEA usedcodef(PC),A1
0002DD42 <AmiBlitz3.ab3@16202>   ANDI.w #$F1FF,$E+4(A0)                                   ;and #$f1ff,ucodediv-usedcode(a0) org source
0002DD46 <AmiBlitz3.ab3@16203>   ANDI.w #$7,D3
0002DD48 <AmiBlitz3.ab3@16204>   LSL.w #8,D3
0002DD4A <AmiBlitz3.ab3@16205>   LSL.w #1,D3
0002DD4E <AmiBlitz3.ab3@16206>   OR.w D3,$E+4(A0)                                         ;or  d3,ucodediv-usedcode(a0) org source
0002DD52 <AmiBlitz3.ab3@16207> BRA.w doused__skip2
0002DD56 <AmiBlitz3.ab3@16212>   LEA usedcode2(PC),A0
0002DD5A <AmiBlitz3.ab3@16213>   LEA usedcode2f(PC),A1
0002DD60 <AmiBlitz3.ab3@16215>   ANDI.w #$F1FF,$10+4(A0)                                  ;and #$f1ff,ucodediv2-usedcode2(a0) org source
0002DD62 <AmiBlitz3.ab3@16216>   SUBQ.w #8,D3
0002DD64 <AmiBlitz3.ab3@16217>   LSL.w #8,D3
0002DD66 <AmiBlitz3.ab3@16218>   LSL.w #1,D3
0002DD6A <AmiBlitz3.ab3@16219>   OR.w D3,$10+4(A0)                                        ;or  d3,ucodediv2-usedcode2(a0) org source
0002DD6E <AmiBlitz3.ab3@16222>   MOVE.w -$6(A2,D0.L),D3
0002DD72 <AmiBlitz3.ab3@16223>   MOVE.w D3,$C+4(A0)                                       ;move d3,ucodeskip-usedcode+2(a0) org source
0002DD74 <AmiBlitz3.ab3@16224>   ADDQ.w #4,D3
0002DD78 <AmiBlitz3.ab3@16225>   MOVE.w D3,$2(A0)
0002DD7E <AmiBlitz3.ab3@16226>   MOVE.w regnum,D1
0002DD82 <AmiBlitz3.ab3@16227>    BEQ.w doused__skip3
0002DD86 <AmiBlitz3.ab3@16228>   MOVE.w usedprep(PC),D1
0002DD8A <AmiBlitz3.ab3@16229>    BSR.w writeword
0002DD8E <AmiBlitz3.ab3@16232>   BSR.w pokecode
0002DD94 <AmiBlitz3.ab3@16233>   MOVE.w regnum,D1
0002DD98 <AmiBlitz3.ab3@16234>    BEQ.w doused__skip4
0002DD9A <AmiBlitz3.ab3@16235>   LSL.w #8,D1
0002DD9C <AmiBlitz3.ab3@16236>   LSL.w #1,D1
0002DDA0 <AmiBlitz3.ab3@16237>   OR.w usedfix(PC),D1
0002DDA4 <AmiBlitz3.ab3@16238>    BSR.w writeword
0002DDA8 <AmiBlitz3.ab3@16239>   MOVE.w useddone(PC),D1
0002DDAC <AmiBlitz3.ab3@16240>    BSR.w writeword
0002DDAE <AmiBlitz3.ab3@16243>    MOVEQ.l #$02,D2
0002DDB2 <AmiBlitz3.ab3@16244> BRA.w get1bytemain
0002DDB6 <AmiBlitz3.ab3@16252>    BSR.w JL_0_A9A0
0002DDB8 <AmiBlitz3.ab3@16254>   MOVEQ.l #$00,D3
0002DDBC <AmiBlitz3.ab3@16255>   MOVE.w -$4(A2,D0.L),D3
0002DDC0 <AmiBlitz3.ab3@16256>    BSR.w get1bytemain
0002DDC4 <AmiBlitz3.ab3@16257> BRA.w JL_0_B46E
0002DDC8 <AmiBlitz3.ab3@16264>    BSR.w get1bytemain
0002DDCA <AmiBlitz3.ab3@16265>   MOVE.w D0,-(A7)
0002DDCE <AmiBlitz3.ab3@16266>    BSR.w get1bytemain
0002DDD2 <AmiBlitz3.ab3@16267>   CMP.w #$28,D0
0002DDD6 <AmiBlitz3.ab3@16268>    BNE.w syntaxerr
0002DDD8 <AmiBlitz3.ab3@16269>   MOVE.w (A7)+,D0
0002DDDC <AmiBlitz3.ab3@16270>    BSR.w JL_0_C340
0002DDE0 <AmiBlitz3.ab3@16271>    BSR.w reget
0002DDE4 <AmiBlitz3.ab3@16272>   CMP.w #$29,D0
0002DDE8 <AmiBlitz3.ab3@16273>    BNE.w syntaxerr
0002DDEC <AmiBlitz3.ab3@16277>   LEA addrcode(PC),A0
0002DDF0 <AmiBlitz3.ab3@16278>   LEA addrcodef(PC),A1
0002DDF6 <AmiBlitz3.ab3@16279>   MOVE.w -$6(A2),$2(A0)
0002DDFA <AmiBlitz3.ab3@16280>   MOVE.w $4(A0),D1
0002DDFE <AmiBlitz3.ab3@16281>   ANDI.w #$FFF8,D1
0002DE04 <AmiBlitz3.ab3@16282>   OR.w regnum,D1
0002DE08 <AmiBlitz3.ab3@16283>   MOVE.w D1,$4(A0)
0002DE0C <AmiBlitz3.ab3@16284>   MOVE.w $6(A0),D1
0002DE10 <AmiBlitz3.ab3@16285>   ANDI.w #$F1FF,D1
0002DE16 <AmiBlitz3.ab3@16286>   MOVE.w regnum,D0
0002DE18 <AmiBlitz3.ab3@16287>   LSL.w #8,D0
0002DE1A <AmiBlitz3.ab3@16288>   LSL.w #1,D0
0002DE1C <AmiBlitz3.ab3@16289>   OR.w D0,D1
0002DE20 <AmiBlitz3.ab3@16290>   MOVE.w D1,$6(A0)
0002DE24 <AmiBlitz3.ab3@16291>    BSR.w pokecode
0002DE26 <AmiBlitz3.ab3@16292>   MOVEQ.l #$03,D2
0002DE2A <AmiBlitz3.ab3@16293> BRA.w get1bytemain
0002DE2E <AmiBlitz3.ab3@16297>   CMP.w #-$7F4D,D0
0002DE32 <AmiBlitz3.ab3@16298>    BHI.w JL_0_AAFE
0002DE36 <AmiBlitz3.ab3@16299> BRA.w syntaxerr
0002DE3A <AmiBlitz3.ab3@16306> .do_null   CMP.w #$b581,d0
0002DE3E <AmiBlitz3.ab3@16307>    BNE 'nonull
0002DE44 <AmiBlitz3.ab3@16308>    MOVE.l d0,lastinstruction
0002DE48 <AmiBlitz3.ab3@16309>    MOVE.w #$7000,d1                                            ;asm instr moveq #0,dx
0002DE4E <AmiBlitz3.ab3@16310>    MOVE.w regnum,d0
0002DE50 <AmiBlitz3.ab3@16311>    ASL.l #7,d0
0002DE52 <AmiBlitz3.ab3@16312>    ASL.l #2,d0
0002DE54 <AmiBlitz3.ab3@16313>    OR.l d0,d1
0002DE58 <AmiBlitz3.ab3@16314>    BSR writeword
0002DE5E <AmiBlitz3.ab3@16315>    JSR get1bytemain
0002DE60 <AmiBlitz3.ab3@16316>    RTS
0002DE64 <AmiBlitz3.ab3@16318> 'nonull CMP.w #$c982,d0
0002DE68 <AmiBlitz3.ab3@16319>        BNE nonew_
0002DE6A <AmiBlitz3.ab3@16321>   MOVE.l a5,-(a7)
0002DE70 <AmiBlitz3.ab3@16322>   MOVE.w lastchar,-(a7)
0002DE76 <AmiBlitz3.ab3@16323>   JSR get1bytemain
0002DE7A <AmiBlitz3.ab3@16324>   CMP.w #"(",d0                                             ; use oldcode
0002DE7E <AmiBlitz3.ab3@16325>   BNE 'newcode
0002DE84 <AmiBlitz3.ab3@16326>   JSR get1bytemain
0002DE88 <AmiBlitz3.ab3@16327>   CMP.w #")",d0
0002DE8C <AmiBlitz3.ab3@16328>   BEQ 'newcode
0002DE92 <AmiBlitz3.ab3@16329>   MOVE.w (a7)+,lastchar
0002DE94 <AmiBlitz3.ab3@16330>   MOVE.l (a7)+,a5
0002DE9A <AmiBlitz3.ab3@16331>   MOVE.w lastchar,d0
0002DE9E <AmiBlitz3.ab3@16332>   BRA nonew_
0002DEA0 <AmiBlitz3.ab3@16333> 'newcode  MOVE.l a0,-(a7)
0002DEA6 <AmiBlitz3.ab3@16334>   TST.b blitzparloop
0002DEAA <AmiBlitz3.ab3@16335>   BNE 'err
0002DEB0 <AmiBlitz3.ab3@16336>   TST.b funcparloop
0002DEB4 <AmiBlitz3.ab3@16337>   BNE 'err
0002DEB8 <AmiBlitz3.ab3@16338>   BRA 'ok
0002DEBE <AmiBlitz3.ab3@16339> 'err JMP errornewnotincalls
0002DEC4 <AmiBlitz3.ab3@16340> 'ok  MOVE.l #$203c0000,d1
0002DEC8 <AmiBlitz3.ab3@16341>   BSR writelong                                            ; 68k asm move.l #$xx,d0
0002DECA <AmiBlitz3.ab3@16342>   MOVEQ #0,d1
0002DECE <AmiBlitz3.ab3@16343>   MOVE.w 8(a0),d1
0002DED2 <AmiBlitz3.ab3@16344>   BSR writeword
0002DED6 <AmiBlitz3.ab3@16345>   MOVE.w #$7200,d1                                         ; 68k asm "moveq #0,d1"
0002DEDA <AmiBlitz3.ab3@16346>   BSR writeword
0002DEDE <AmiBlitz3.ab3@16347>   MOVE.w #$C002,D1                                         ;call function to alloc global mem
0002DEE2 <AmiBlitz3.ab3@16348>   BSR.w tokejsr2
0002DEE4 <AmiBlitz3.ab3@16349>   MOVE.l (a7)+,a0
0002DEE6 <AmiBlitz3.ab3@16350>   ADDQ.l #6,a7                      ; a5 need not restore
0002DEEA <AmiBlitz3.ab3@16351>   CMP.w #")",d0
0002DEEE <AmiBlitz3.ab3@16352>   BNE 'nobracket
0002DEF4 <AmiBlitz3.ab3@16353>   JSR get1bytemain
0002DEF6 <AmiBlitz3.ab3@16354> 'nobracket  RTS
0002DEFA <AmiBlitz3.ab3@16356> nonew_  CMP.w #-$7F4A,D0
0002DEFE <AmiBlitz3.ab3@16357>    BEQ.w JL_0_A98C
0002DF02 <AmiBlitz3.ab3@16358>   CMP.w #-$7F48,D0
0002DF06 <AmiBlitz3.ab3@16359>    BEQ.w doaddr
0002DF0A <AmiBlitz3.ab3@16360>   CMP.w #-$7F3C,D0
0002DF0E <AmiBlitz3.ab3@16361>    BEQ.w domaximum
0002DF12 <AmiBlitz3.ab3@16362>   CMP.w #-$7F2F,D0
0002DF16 <AmiBlitz3.ab3@16363>    BEQ.w doused
0002DF18 <AmiBlitz3.ab3@16364>   MOVE.w D2,-(A7)
0002DF1A <AmiBlitz3.ab3@16365>   MOVE.w D0,D1
0002DF1E <AmiBlitz3.ab3@16366>   BCLR #$F,D1
0002DF22 <AmiBlitz3.ab3@16368>    BSR.w searchinstr
0002DF24 <AmiBlitz3.ab3@16369>   MOVE.w (A3),D1
0002DF28 <AmiBlitz3.ab3@16370>   BTST #$1,D1
0002DF2C <AmiBlitz3.ab3@16371>    BEQ.w noreturn_                                         ;syntax error noreturn
0002DF30 <AmiBlitz3.ab3@16372>   BTST #$2,D1
0002DF34 <AmiBlitz3.ab3@16373>    BNE.w JL_0_AC1A
0002DF36 <AmiBlitz3.ab3@16374>   LSR.w #8,D1
0002DF3C <AmiBlitz3.ab3@16375>   BTST #$3,$1(A3)
0002DF40 <AmiBlitz3.ab3@16376>    BEQ.w JL_0_AB4C
0002DF46 <AmiBlitz3.ab3@16377>    JSR AJL_0_498A
0002DF4C <AmiBlitz3.ab3@16380>    CLR.l rightsidetype
0002DF4E <AmiBlitz3.ab3@16381>    MOVE.w D1,-(A7)                                         ;is library instruction
0002DF52 <AmiBlitz3.ab3@16382>   CMP.w #$7,D1
0002DF56 <AmiBlitz3.ab3@16383>    BNE.w JL_0_AB5E
0002DF58 <AmiBlitz3.ab3@16384>   MOVE.l A2,-(A7)
0002DF5C <AmiBlitz3.ab3@16385>    BSR.w makesbase
0002DF5E <AmiBlitz3.ab3@16386>   MOVEA.l (A7)+,A2
0002DF62 <AmiBlitz3.ab3@16389>     BSR.w JL_0_AFA2
0002DF64 <AmiBlitz3.ab3@16390>   MOVE.w D3,-(A7)
0002DF68 <AmiBlitz3.ab3@16391>    BSR.w get1bytemain
0002DF6A <AmiBlitz3.ab3@16392>   MOVEQ.l #$00,D1
0002DF6E <AmiBlitz3.ab3@16393>   CMP.w #$28,D0
0002DF72 <AmiBlitz3.ab3@16394>    BNE.w JL_0_AB80
0002DF78 <AmiBlitz3.ab3@16395>    JSR JL_0_66F6
0002DF7A <AmiBlitz3.ab3@16396>   TST.w D1
0002DF7E <AmiBlitz3.ab3@16397>    BEQ.w syntaxerr
0002DF82 <AmiBlitz3.ab3@16398> BRA.w JL_0_AB84
0002DF8C <AmiBlitz3.ab3@16403>   MOVE.w oldqflag,instringon
0002DF92 <AmiBlitz3.ab3@16404>   MOVEA.l lastsourcepos,A5
0002DF98 <AmiBlitz3.ab3@16407>    MOVE.w regnum,-(A7)
0002DFA2 <AmiBlitz3.ab3@16408>    MOVE.w regnum,regnumstore
0002DFA8 <AmiBlitz3.ab3@16409>    TST.b fpu
0002DFAC <AmiBlitz3.ab3@16410>             BEQ 'nofloat
0002DFB2 <AmiBlitz3.ab3@16411>             CMP.w #$ffff,28(a3)
0002DFB6 <AmiBlitz3.ab3@16412>             BNE 'nofloat
0002DFBC <AmiBlitz3.ab3@16413>             CMP.w #$3c01,34(a3)                            ;val do nofpu stuff
0002DFC0 <AmiBlitz3.ab3@16414>             BEQ 'nofloat
0002DFC6 <AmiBlitz3.ab3@16415>             CMP.w #$3c02,34(a3)                            ;int skip
0002DFCA <AmiBlitz3.ab3@16416>             BEQ 'quick
0002DFCE <AmiBlitz3.ab3@16417>             CMP.b #5,(a3)
0002DFD2 <AmiBlitz3.ab3@16418>             BNE 'nofloat
0002DFD8 <AmiBlitz3.ab3@16421>             CLR.l load_var_addr
0002DFDC <AmiBlitz3.ab3@16422> BRA 'isfpu
0002DFE2 <AmiBlitz3.ab3@16425>    CLR.w regnum
0002DFE4 <AmiBlitz3.ab3@16428>    MOVE.w D1,-(A7)
0002DFEA <AmiBlitz3.ab3@16429>   BTST #$3,$1(A3)
0002DFEE <AmiBlitz3.ab3@16430>    BEQ.w JL_0_ABB0
0002DFF2 <AmiBlitz3.ab3@16449>   MOVE.w $6(A7),D1
0002DFF8 <AmiBlitz3.ab3@16450>   MOVE.w d1,peeksize
0002DFFC <AmiBlitz3.ab3@16460>   ORI.w #$7000,D1
0002E000 <AmiBlitz3.ab3@16461>   BSR.w writeword                                          ;write peekmode
0002E006 <AmiBlitz3.ab3@16464>   ADDQ.w #1,regnum
0002E008 <AmiBlitz3.ab3@16465>   MOVE.w (A7),D1
0002E010 <AmiBlitz3.ab3@16468>   MOVE.w 2(a7),tempregnum
0002E016 <AmiBlitz3.ab3@16469>   MOVE.w parnum,-(a7)                                       ;7.2014 parnum need store to allow functioncall in parameter >6
0002E01C <AmiBlitz3.ab3@16470>   CLR.w parnum                                              ;7.2014
0002E022 <AmiBlitz3.ab3@16471>   JSR JL_0_4878                                             ;write code of blitzfunc
0002E028 <AmiBlitz3.ab3@16472>   MOVE.w (a7)+,parnum                                       ;7.2014 new restore parnum
0002E02A <AmiBlitz3.ab3@16473>   TST.w (A7)+
0002E02E <AmiBlitz3.ab3@16474>   BEQ.w JL_0_ABC6
0002E032 <AmiBlitz3.ab3@16475>   CMP.w #")",D0                                             ; check if ) here for correct end of blitzlib function call
0002E036 <AmiBlitz3.ab3@16476>   BNE.w errorbracketmiss                                    ; was syntax error
0002E03C <AmiBlitz3.ab3@16477>   CLR.l lasttoken
0002E040 <AmiBlitz3.ab3@16478>   BSR.w get1bytemain
0002E042 <AmiBlitz3.ab3@16481>    MOVE.w (A7)+,D1
0002E048 <AmiBlitz3.ab3@16482>    MOVE.w D1,regnum
0002E04C <AmiBlitz3.ab3@16483>    BEQ.w JL_0_ABDE
0002E052 <AmiBlitz3.ab3@16484>    CMP.w #$3c01,24(a2)                                     ;val skipped
0002E056 <AmiBlitz3.ab3@16485>    BNE 'noval
0002E05C <AmiBlitz3.ab3@16486>    TST.b fpu
0002E060 <AmiBlitz3.ab3@16487>    BEQ 'noval
0002E066 <AmiBlitz3.ab3@16488>    CLR.l load_var_addr
0002E068 <AmiBlitz3.ab3@16489>    MOVEQ #0,d1
0002E06E <AmiBlitz3.ab3@16490>    MOVE.w regnum,d1
0002E070 <AmiBlitz3.ab3@16491>    LSL.l #7,d1
0002E076 <AmiBlitz3.ab3@16492>    OR.l #$f2000000,d1
0002E07A <AmiBlitz3.ab3@16493>    BSR writelong
0002E07E <AmiBlitz3.ab3@16494> BRA JL_0_ABDE
0002E084 <AmiBlitz3.ab3@16498>    CMP.w #$3c02,24(a2)                                     ;int skipped
0002E088 <AmiBlitz3.ab3@16499>    BEQ 'quick
0002E08C <AmiBlitz3.ab3@16500>    CMP.b #5,d2
0002E090 <AmiBlitz3.ab3@16501>    BNE 'nofpu
0002E096 <AmiBlitz3.ab3@16502>    TST.b fpu
0002E09A <AmiBlitz3.ab3@16503>    BEQ 'nofpu
0002E0A0 <AmiBlitz3.ab3@16508>    CLR.l load_var_addr
0002E0A4 <AmiBlitz3.ab3@16509> BRA JL_0_ABDE
0002E0A6 <AmiBlitz3.ab3@16512>   LSL.w #8,D1
0002E0A8 <AmiBlitz3.ab3@16513>   LSL.w #1,D1
0002E0AC <AmiBlitz3.ab3@16514>   ORI.w #$2000,D1
0002E0B0 <AmiBlitz3.ab3@16515>   BSR.w writeword                                          ;write move.l d0,dx
0002E0B6 <AmiBlitz3.ab3@16516>   TST.b fpu
0002E0BA <AmiBlitz3.ab3@16517>   BEQ JL_0_ABDE
0002E0BC <AmiBlitz3.ab3@16518>   MOVEQ #0,d1
0002E0C2 <AmiBlitz3.ab3@16519>   MOVE.w regnum,d1
0002E0C4 <AmiBlitz3.ab3@16520>   LSL.l #7,d1
0002E0CA <AmiBlitz3.ab3@16521>   OR.l #$f2000000,d1
0002E0CC <AmiBlitz3.ab3@16525>        MOVE.w (A7)+,D3
0002E0D0 <AmiBlitz3.ab3@16526>        BEQ.w JL_0_ABFC
0002E0D6 <AmiBlitz3.ab3@16527>        TST.b fpu
0002E0DA <AmiBlitz3.ab3@16528>        BEQ 'nofpu
0002E0DC <AmiBlitz3.ab3@16529>       MOVE.l d0,-(a7)
0002E0DE <AmiBlitz3.ab3@16530>        MOVE.l a0,-(a7)
0002E0E4 <AmiBlitz3.ab3@16531>        MOVE.l stacktrack,d1
0002E0EA <AmiBlitz3.ab3@16532>        LEA fpustackbase,a0
0002E0F2 <AmiBlitz3.ab3@16533>        MOVE.w 0(a0,d1),regmask
0002E0F4 <AmiBlitz3.ab3@16534>        MOVE.l (a7)+,a0
0002E0F8 <AmiBlitz3.ab3@16535>       MOVE.w #8,d0
0002E0FC <AmiBlitz3.ab3@16538>       BEQ 'ready
0002E102 <AmiBlitz3.ab3@16539>       BTST d0,regmask
0002E106 <AmiBlitz3.ab3@16540>       BEQ 'noa7
0002E108 <AmiBlitz3.ab3@16541>       MOVEQ #0,d1
0002E10A <AmiBlitz3.ab3@16542>       MOVE.w d0,d1
0002E10C <AmiBlitz3.ab3@16543>       SUBQ.w #1,d1
0002E10E <AmiBlitz3.ab3@16544>       ASL #7,d1
0002E114 <AmiBlitz3.ab3@16546>       OR.l #$f21f5400,d1                                   ;fmove.d (a7)+
0002E118 <AmiBlitz3.ab3@16547>       BSR writelong
0002E11E <AmiBlitz3.ab3@16548>       SUBQ.l #2,stacktrack
0002E120 <AmiBlitz3.ab3@16551>       SUBQ.w #1,d0
0002E124 <AmiBlitz3.ab3@16552>       BNE 'loop
0002E126 <AmiBlitz3.ab3@16555>       MOVE.l (a7)+,d0
0002E12C <AmiBlitz3.ab3@16556>       SUBQ.l #2,stacktrack                                 ;int track
0002E130 <AmiBlitz3.ab3@16559>    MOVE.w #$4CDF,D1
0002E134 <AmiBlitz3.ab3@16560>    BSR.w writeword                                         ;write movem.l (a7)+,
0002E136 <AmiBlitz3.ab3@16561>   MOVEQ.l #$00,D1
0002E138 <AmiBlitz3.ab3@16562>   MOVEQ.l #$0F,D4
0002E13A <AmiBlitz3.ab3@16565>     LSL.w #1,D3
0002E13C <AmiBlitz3.ab3@16566>     ROXR.w #1,D1
0002E140 <AmiBlitz3.ab3@16567>   DBF D4,JL_0_ABF0
0002E144 <AmiBlitz3.ab3@16569>    BSR.w writeword
0002E14A <AmiBlitz3.ab3@16570>    TST.b fast
0002E14E <AmiBlitz3.ab3@16571>    BEQ JL_0_ABFC
0002E154 <AmiBlitz3.ab3@16572>    TST.w regnum
0002E158 <AmiBlitz3.ab3@16573>    BEQ JL_0_ABFC
0002E15E <AmiBlitz3.ab3@16574>    CMP.w #$3c0e,$1c(a3)                                    ;true
0002E162 <AmiBlitz3.ab3@16575>    BNE 'l1
0002E168 <AmiBlitz3.ab3@16576>    MOVE.w regnum,d1
0002E16A <AmiBlitz3.ab3@16577>    ASL.l #8,d1
0002E16C <AmiBlitz3.ab3@16578>    ASL.l #1,d1
0002E170 <AmiBlitz3.ab3@16579>    OR.w #$70ff,d1
0002E17A <AmiBlitz3.ab3@16580>    SUB.l #12,destpointer
0002E17E <AmiBlitz3.ab3@16581>    BSR writeword
0002E184 <AmiBlitz3.ab3@16584>   CMP.w #$3c0f,$1c(a3)                                     ;false
0002E188 <AmiBlitz3.ab3@16585>    BNE 'l2
0002E18E <AmiBlitz3.ab3@16586>     MOVE.w regnum,d1
0002E190 <AmiBlitz3.ab3@16587>     ASL.l #8,d1
0002E192 <AmiBlitz3.ab3@16588>     ASL.l #1,d1
0002E196 <AmiBlitz3.ab3@16589>     OR.w #$7000,d1
0002E1A0 <AmiBlitz3.ab3@16590>     SUB.l #12,destpointer
0002E1A4 <AmiBlitz3.ab3@16591>     BSR writeword
0002E1A6 <AmiBlitz3.ab3@16595>    MOVE.w (A7)+,D2
0002E1AA <AmiBlitz3.ab3@16596>   CMP.w #$7,D2                                             ;destination var type
0002E1AE <AmiBlitz3.ab3@16597>    BNE.w JL_0_AC16
0002E1B4 <AmiBlitz3.ab3@16598>   MOVE.w putstlen,D1
0002E1BA <AmiBlitz3.ab3@16599>   OR.w regnum,D1
0002E1BE <AmiBlitz3.ab3@16600>    BSR.w writeword
0002E1C2 <AmiBlitz3.ab3@16603> BRA.w JL_0_AF66
0002E1C6 <AmiBlitz3.ab3@16608>   MOVE.w $6(A3),D1
0002E1CA <AmiBlitz3.ab3@16609>    BSR.w uselib
0002E1CE <AmiBlitz3.ab3@16610>    BSR.w JL_0_AD40
0002E1D0 <AmiBlitz3.ab3@16611>   MOVE.l D4,D1
0002E1D2 <AmiBlitz3.ab3@16612>   MOVE.l D5,-(A7)
0002E1D6 <AmiBlitz3.ab3@16613>    BSR.w JL_0_AD38
0002E1DA <AmiBlitz3.ab3@16614>   MOVE.w $A(A1),-(A7)
0002E1DC <AmiBlitz3.ab3@16615>   ADDQ.w #8,A3
0002E1DE <AmiBlitz3.ab3@16616>   MOVE.w (A3)+,-(A7)
0002E1E0 <AmiBlitz3.ab3@16617>   MOVE.l A3,-(A7)
0002E1E4 <AmiBlitz3.ab3@16618>    BSR.w get1bytemain
0002E1E6 <AmiBlitz3.ab3@16619>   MOVE.w D0,-(A7)
0002E1E8 <AmiBlitz3.ab3@16620>   MOVEQ.l #$00,D3
0002E1EE <AmiBlitz3.ab3@16621>   JSR checka4a5
0002E1F0 <AmiBlitz3.ab3@16623>   MOVE.b (A3)+,D1
0002E1F4 <AmiBlitz3.ab3@16624>    BMI.w JL_0_AC6A
0002E1F6 <AmiBlitz3.ab3@16625>   MOVEQ.l #$03,D2
0002E1F8 <AmiBlitz3.ab3@16626>   ADDQ.w #1,D3
0002E1FC <AmiBlitz3.ab3@16627>   MOVEM.l D3/A3,-(A7)
0002E202 <AmiBlitz3.ab3@16628>   MOVE.b funcparloop,-(a7)
0002E208 <AmiBlitz3.ab3@16629>   CLR.b funcparloop
0002E20E <AmiBlitz3.ab3@16630>   MOVE.b blitzparloop,-(a7)
0002E216 <AmiBlitz3.ab3@16631>   MOVE.b #1,blitzparloop
0002E21C <AmiBlitz3.ab3@16632>   MOVE.l lasttoken,-(a7)
0002E222 <AmiBlitz3.ab3@16633>   MOVE.l leftsidetype,-(a7)
0002E228 <AmiBlitz3.ab3@16634>   MOVE.l rightsidetype,-(a7)
0002E22C <AmiBlitz3.ab3@16635>   BSR.w peval
0002E232 <AmiBlitz3.ab3@16636>   MOVE.l (a7)+,rightsidetype
0002E238 <AmiBlitz3.ab3@16637>   MOVE.l (a7)+,leftsidetype
0002E23E <AmiBlitz3.ab3@16638>   MOVE.l (a7)+,lasttoken
0002E244 <AmiBlitz3.ab3@16639>   MOVE.b (a7)+,blitzparloop
0002E24A <AmiBlitz3.ab3@16640>   MOVE.b (a7)+,funcparloop
0002E250 <AmiBlitz3.ab3@16641>   SUBQ.w #4,a2offset
0002E254 <AmiBlitz3.ab3@16642>   MOVEM.l (A7)+,D3/A3
0002E258 <AmiBlitz3.ab3@16643>   CMP.w #$2C,D0
0002E25C <AmiBlitz3.ab3@16644>    BEQ.w JL_0_AC40
0002E25E <AmiBlitz3.ab3@16645>   TST.b (A3)
0002E262 <AmiBlitz3.ab3@16646>    BPL.w syntaxerr
0002E264 <AmiBlitz3.ab3@16649>   MOVE.w (A7)+,D1
0002E268 <AmiBlitz3.ab3@16650>    BSR.w JL_0_AD04
0002E26A <AmiBlitz3.ab3@16651>   MOVEA.l (A7)+,A3
0002E26C <AmiBlitz3.ab3@16652>   SUBQ.w #1,D3
0002E270 <AmiBlitz3.ab3@16653>    BMI.w JL_0_ACBE
0002E272 <AmiBlitz3.ab3@16656>   TST.b (A3)+
0002E276 <AmiBlitz3.ab3@16657>    BPL.w JL_0_AC78
0002E278 <AmiBlitz3.ab3@16658>   SUBQ.w #1,A3
0002E27A <AmiBlitz3.ab3@16661>     MOVEQ.l #$00,D1
0002E27C <AmiBlitz3.ab3@16662>     MOVE.b -(A3),D1
0002E280 <AmiBlitz3.ab3@16663>     BTST #$4,D1
0002E284 <AmiBlitz3.ab3@16664>      BNE.w JL_0_ACAA
0002E28A <AmiBlitz3.ab3@16665>     CMP.w regnum,D1
0002E28E <AmiBlitz3.ab3@16666>      BCC.w JL_0_AC9E
0002E290 <AmiBlitz3.ab3@16667>     BSET D1,D5
0002E292 <AmiBlitz3.ab3@16668>     MOVEQ.l #$0F,D0
0002E294 <AmiBlitz3.ab3@16669>     SUB.w D1,D0
0002E296 <AmiBlitz3.ab3@16670>     BSET D0,D4
0002E298 <AmiBlitz3.ab3@16673>     LSL.w #8,D1
0002E29A <AmiBlitz3.ab3@16674>     LSL.w #1,D1
0002E29E <AmiBlitz3.ab3@16675>     ORI.w #$201F,D1
0002E2A2 <AmiBlitz3.ab3@16676>   BRA.w JL_0_ACB6
0002E2A6 <AmiBlitz3.ab3@16679>     ANDI.w #$7,D1
0002E2A8 <AmiBlitz3.ab3@16680>     LSL.w #8,D1
0002E2AA <AmiBlitz3.ab3@16681>     LSL.w #1,D1
0002E2AE <AmiBlitz3.ab3@16682>     ORI.w #$205F,D1
0002E2B2 <AmiBlitz3.ab3@16685>      BSR.w writeword
0002E2B6 <AmiBlitz3.ab3@16686>   DBF D3,JL_0_AC80
0002E2BC <AmiBlitz3.ab3@16689>   MOVE.w (A7)+,libjsr+2
0002E2C2 <AmiBlitz3.ab3@16690>   MOVE.w (A7)+,libbase+2
0002E2C8 <AmiBlitz3.ab3@16691>   MOVE.l libbase,D1
0002E2CC <AmiBlitz3.ab3@16692>    BSR.w writelong
0002E2D2 <AmiBlitz3.ab3@16693>   MOVE.l libjsr,D1
0002E2D6 <AmiBlitz3.ab3@16694>    BSR.w writelong
0002E2DC <AmiBlitz3.ab3@16695>   MOVE.w regnum,D1
0002E2E0 <AmiBlitz3.ab3@16696>    BEQ.w JL_0_ACF4
0002E2E2 <AmiBlitz3.ab3@16697>   LSL.w #8,D1
0002E2E4 <AmiBlitz3.ab3@16698>   LSL.w #1,D1
0002E2E8 <AmiBlitz3.ab3@16699>   ORI.w #$2000,D1
0002E2EC <AmiBlitz3.ab3@16700>    BSR.w writeword
0002E2EE <AmiBlitz3.ab3@16703>   MOVE.l (A7)+,D1
0002E2F2 <AmiBlitz3.ab3@16704>    BSR.w JL_0_AD38
0002E2F8 <AmiBlitz3.ab3@16705>    JSR restorea4a5
0002E2FA <AmiBlitz3.ab3@16706>   MOVEQ.l #$03,D2
0002E2FE <AmiBlitz3.ab3@16707>    BSR.w reget
0002E302 <AmiBlitz3.ab3@16708> BRA.w JL_0_AF66
0002E304 <AmiBlitz3.ab3@16711>   TST.w D3
0002E308 <AmiBlitz3.ab3@16712>    BEQ.w JL_0_AD1E
0002E30C <AmiBlitz3.ab3@16713>   CMP.w #$28,D1
0002E310 <AmiBlitz3.ab3@16714>    BNE.w syntaxerr
0002E314 <AmiBlitz3.ab3@16715>   CMP.w #$29,D0
0002E318 <AmiBlitz3.ab3@16716>    BNE.w syntaxerr
0002E31C <AmiBlitz3.ab3@16717> BRA.w get1bytemain
0002E320 <AmiBlitz3.ab3@16720>   CMP.w #$28,D1
0002E324 <AmiBlitz3.ab3@16721>    BNE.w JL_0_AD36
0002E328 <AmiBlitz3.ab3@16722>    BSR.w get1bytemain
0002E32C <AmiBlitz3.ab3@16723>   CMP.w #$29,D0
0002E330 <AmiBlitz3.ab3@16724>    BNE.w syntaxerr
0002E334 <AmiBlitz3.ab3@16725> BRA.w get1bytemain
0002E336 <AmiBlitz3.ab3@16728> RTS
0002E338 <AmiBlitz3.ab3@16731>   TST.w D1
0002E33C <AmiBlitz3.ab3@16732>    BNE.w writelong
0002E33E <AmiBlitz3.ab3@16733> RTS
0002E342 <AmiBlitz3.ab3@16737>   MOVE.w #$48E7,D4
0002E344 <AmiBlitz3.ab3@16738>   SWAP D4
0002E346 <AmiBlitz3.ab3@16739>   CLR.w D4
0002E34A <AmiBlitz3.ab3@16740>   MOVE.w #$4CDF,D5
0002E34C <AmiBlitz3.ab3@16741>   SWAP D5
0002E34E <AmiBlitz3.ab3@16742>   CLR.w D5
0002E354 <AmiBlitz3.ab3@16743>   MOVE.w regnum,D1
0002E358 <AmiBlitz3.ab3@16744>    BEQ.w JL_0_AD74
0002E35C <AmiBlitz3.ab3@16745>   BSET #$F,D4
0002E360 <AmiBlitz3.ab3@16746>   BSET #$0,D5
0002E364 <AmiBlitz3.ab3@16747>   CMP.w #$2,D1
0002E368 <AmiBlitz3.ab3@16748>    BCS.w JL_0_AD72
0002E36C <AmiBlitz3.ab3@16751>   BSET #$E,D4
0002E370 <AmiBlitz3.ab3@16752>   BSET #$1,D5
0002E372 <AmiBlitz3.ab3@16755> RTS
0002E378 <AmiBlitz3.ab3@16758>   TST.w fuckpos
0002E37C <AmiBlitz3.ab3@16759>   BNE.w JL_0_AD6A
0002E37E <AmiBlitz3.ab3@16760> RTS
0002E380 <AmiBlitz3.ab3@16763> fuckpos:  Ds.w 1
0002E386 <AmiBlitz3.ab3@16767>   MOVE.w sbasegot,D1
0002E38A <AmiBlitz3.ab3@16768>    BEQ.w makesbase__skip
0002E38E <AmiBlitz3.ab3@16772>   MOVE.w sbgot(PC),D1
0002E392 <AmiBlitz3.ab3@16773>    BNE.w makesbase__skip2
0002E39A <AmiBlitz3.ab3@16777>   MOVE.w #$0002,sbgot
0002E3A0 <AmiBlitz3.ab3@16778>   MOVE.w movea3a7,D1
0002E3A4 <AmiBlitz3.ab3@16779> BRA.w writeword
0002E3A6 <AmiBlitz3.ab3@16782> RTS
0002E3AE <AmiBlitz3.ab3@16787>   MOVE.w #$0001,sbgot                                      ;voodoo magic! - Will it work?
0002E3B4 <AmiBlitz3.ab3@16790>   MOVE.l #$C601,D1
0002E3BC <AmiBlitz3.ab3@16791>   MOVE.w #-1,sbasegot
0002E3C2 <AmiBlitz3.ab3@16792>   MOVE.l d1,lastinstruction
0002E3C6 <AmiBlitz3.ab3@16793>   BSR.w Atokejsr
0002E3C8 <AmiBlitz3.ab3@16794> RTS
0002E3D2 <AmiBlitz3.ab3@16799>   MOVE.l data1,litdata1
0002E3D8 <AmiBlitz3.ab3@16800>   TST.b fast
0002E3DC <AmiBlitz3.ab3@16801>   BEQ 'l50                                                 ;optistring  seem impossible to get work
0002E3E0 <AmiBlitz3.ab3@16805> BRA 'l50                                                   ;to deactivate
0002E3E6 <AmiBlitz3.ab3@16811>   TST.b optistring
0002E3EA <AmiBlitz3.ab3@16812>   BNE.s 'l21
0002E3F0 <AmiBlitz3.ab3@16813>   CLR.b string1
0002E3F8 <AmiBlitz3.ab3@16814>   MOVE.b #1,optistring
0002E3FE <AmiBlitz3.ab3@16815>   TST.b nostringopt
0002E402 <AmiBlitz3.ab3@16816>   BNE 'l21
0002E404 <AmiBlitz3.ab3@16817>   MOVE.l a5,a4
0002E406 <AmiBlitz3.ab3@16818>   SUBQ.l #1,a4
0002E408 <AmiBlitz3.ab3@16821>     TST.b (a4)
0002E40C <AmiBlitz3.ab3@16822>     BMI 'l19a
0002E410 <AmiBlitz3.ab3@16823>     BEQ.s 'l20
0002E414 <AmiBlitz3.ab3@16824>     CMP.b #$22,(a4)
0002E418 <AmiBlitz3.ab3@16825>     BEQ.s 'l19
0002E41E <AmiBlitz3.ab3@16828>     TST.w string1
0002E422 <AmiBlitz3.ab3@16829>     BNE 'l11
0002E426 <AmiBlitz3.ab3@16830>     CMP.b #":",(a4)
0002E42A <AmiBlitz3.ab3@16831>     BEQ.s 'l20
0002E42E <AmiBlitz3.ab3@16832>     CMP.b #";",(a4)
0002E432 <AmiBlitz3.ab3@16833>     BEQ.s 'l20
0002E436 <AmiBlitz3.ab3@16834>     CMP.b #"+",(a4)
0002E43A <AmiBlitz3.ab3@16835>     BEQ.s 'l21
0002E43E <AmiBlitz3.ab3@16836>     CMP.b #",",(a4)
0002E442 <AmiBlitz3.ab3@16837>     BEQ.s 'l20                                             ;was l21
0002E446 <AmiBlitz3.ab3@16838>     CMP.b #")",(a4)
0002E44A <AmiBlitz3.ab3@16839>     BEQ.s 'l20                                             ;was l21
0002E44C <AmiBlitz3.ab3@16842>     ADDQ.l #1,a4
0002E450 <AmiBlitz3.ab3@16843> BRA.s 'l10
0002E458 <AmiBlitz3.ab3@16846>   BCHG #0,string1
0002E45C <AmiBlitz3.ab3@16847> BRA 'l18
0002E45E <AmiBlitz3.ab3@16850>   ADDQ.l #1,a4
0002E460 <AmiBlitz3.ab3@16851>   TST.b (a4)
0002E464 <AmiBlitz3.ab3@16852>   BEQ 'l21
0002E468 <AmiBlitz3.ab3@16853> BRA 'l11
0002E46A <AmiBlitz3.ab3@16856>   MOVE.l a5,a4
0002E46C <AmiBlitz3.ab3@16857>   SUBQ.l #1,a4
0002E470 <AmiBlitz3.ab3@16860>   CMP.b #$20,-(a4)
0002E474 <AmiBlitz3.ab3@16861>   BEQ 'll1
0002E478 <AmiBlitz3.ab3@16862>   CMP.b #"+",(a4)
0002E47C <AmiBlitz3.ab3@16863>   BEQ 'l21
0002E484 <AmiBlitz3.ab3@16878>   MOVE.b #2,optistring
0002E48C <AmiBlitz3.ab3@16881>   CMP.b #2,optistring
0002E490 <AmiBlitz3.ab3@16882>   BEQ.s 'l100
0002E494 <AmiBlitz3.ab3@16885>   BSR.w makesbase
0002E498 <AmiBlitz3.ab3@16886>   BSR.w pokedata1                                          ;writestringsizespace
0002E49C <AmiBlitz3.ab3@16887>   BSR.w pokedata1
0002E49E <AmiBlitz3.ab3@16890>   MOVEQ.l #$00,D2
0002E4A4 <AmiBlitz3.ab3@16893>     MOVE.l a5,lastsourcepos
0002E4A6 <AmiBlitz3.ab3@16894>     MOVEQ #0,d0
0002E4A8 <AmiBlitz3.ab3@16895>     MOVE.b (a5)+,d0
0002E4AA <AmiBlitz3.ab3@16896>     TST.w D0
0002E4AE <AmiBlitz3.ab3@16897>      BEQ.w notqerr
0002E4B2 <AmiBlitz3.ab3@16898>     CMP.w #$22,D0                                          ; --- " ---
0002E4B6 <AmiBlitz3.ab3@16899>      BEQ.w JL_0_ADF6
0002E4BA <AmiBlitz3.ab3@16900>     CMP.b #"\",d0
0002E4BE <AmiBlitz3.ab3@16901>      BNE 'l1
0002E4C2 <AmiBlitz3.ab3@16902>     CMP.b #"\",(a5)
0002E4C6 <AmiBlitz3.ab3@16903>      BNE 'l1
0002E4CC <AmiBlitz3.ab3@16904>     TST.b newsyntax
0002E4D0 <AmiBlitz3.ab3@16905>      BEQ 'l1
0002E4D6 <AmiBlitz3.ab3@16906>     CMP.w #"\\",1(a5)                                      ; new compiler constants
0002E4DA <AmiBlitz3.ab3@16907>     BNE 'l2
0002E4DC <AmiBlitz3.ab3@16908>     ADDQ #2,a5
0002E4DE <AmiBlitz3.ab3@16911>     ADDQ.w #1,D2
0002E4E0 <AmiBlitz3.ab3@16912>     MOVE.w D0,D1
0002E4E4 <AmiBlitz3.ab3@16913>     BSR.w pokedata1b                                        ;writestring
0002E4E8 <AmiBlitz3.ab3@16914> BRA.w writestring
0002E4EE <AmiBlitz3.ab3@16917>     JSR check_newconstants
0002E4F2 <AmiBlitz3.ab3@16918> BRA writestring
0002E4F8 <AmiBlitz3.ab3@16921>   NOT instringon
0002E4FE <AmiBlitz3.ab3@16922>   MOVE.w dontwrite,D1
0002E502 <AmiBlitz3.ab3@16923>   BNE.w JL_0_AE0A
0002E50A <AmiBlitz3.ab3@16924>   CMP.b #2,optistring
0002E50E <AmiBlitz3.ab3@16925>   BEQ 'l10
0002E514 <AmiBlitz3.ab3@16926>     MOVEA.l litdata1,A0
0002E516 <AmiBlitz3.ab3@16927>     CLR.w (A0)+                                            ;writesize
0002E518 <AmiBlitz3.ab3@16928>     MOVE.w D2,(A0)
0002E51C <AmiBlitz3.ab3@16932>   BSR.w JL_0_AEA4                                          ;writestringconstantcode
0002E522 <AmiBlitz3.ab3@16933>   ADDQ.l #1,data1
0002E52A <AmiBlitz3.ab3@16934>   BCLR #$0,data1+3
0002E52C <AmiBlitz3.ab3@16935>   MOVEQ.l #$07,D2
0002E530 <AmiBlitz3.ab3@16936> BRA.w get1bytemain
0002E534 <AmiBlitz3.ab3@16940>   BSR.w makename2
0002E538 <AmiBlitz3.ab3@16941>   BSR.w findlabel2
0002E53C <AmiBlitz3.ab3@16942>   BEQ.w JL_0_AE4A
0002E540 <AmiBlitz3.ab3@16943>   BSR.w addlabelhash
0002E544 <AmiBlitz3.ab3@16944>   CLR.l $4(A2)
0002E548 <AmiBlitz3.ab3@16945>   CLR.l $8(A2)
0002E550 <AmiBlitz3.ab3@16947>   MOVE.w linenumat+2,$10(A2)
0002E556 <AmiBlitz3.ab3@16948>   MOVE.w linenumat,d0
0002E558 <AmiBlitz3.ab3@16949>   MOVEQ #0,d1
0002E55C <AmiBlitz3.ab3@16950>   MOVE.b -1(a2,d7),d1
0002E560 <AmiBlitz3.ab3@16951>   MOVE.w d0,0(a2,d1)
0002E564 <AmiBlitz3.ab3@16952> BRA.w JL_0_AE52
0002E568 <AmiBlitz3.ab3@16955>   TST.l $8(A2)
0002E56C <AmiBlitz3.ab3@16956>   BNE.w JL_0_AE88
0002E572 <AmiBlitz3.ab3@16959>   MOVEA.l _execbase,A6
0002E574 <AmiBlitz3.ab3@16960>   MOVEQ.l #$0C+2,D0
0002E576 <AmiBlitz3.ab3@16961>   MOVEQ.l #$01,D1
0002E57C <AmiBlitz3.ab3@16962>   MOVE.l mempool,a0
0002E580 <AmiBlitz3.ab3@16963>   JSR _AllocPooled(a6)
0002E582 <AmiBlitz3.ab3@16965>   MOVEA.l D0,A0
0002E586 <AmiBlitz3.ab3@16966>   MOVE.l $4(A2),(A0)
0002E58A <AmiBlitz3.ab3@16967>   MOVE.l A0,$4(A2)
0002E592 <AmiBlitz3.ab3@16968>   MOVE.l destpointer,$4(A0)
0002E596 <AmiBlitz3.ab3@16969>   ADDQ.l #2,$4(A0)
0002E59E <AmiBlitz3.ab3@16970>   MOVE.w procnum,$8(A0)
0002E5A6 <AmiBlitz3.ab3@16971>   MOVE.w linenumat+2,$A(A0)
0002E5AE <AmiBlitz3.ab3@16972>   MOVE.w linenumat,$c(a0)
0002E5B0 <AmiBlitz3.ab3@16973> RTS
0002E5B4 <AmiBlitz3.ab3@16976>   MOVE.l $4(A2),D1
0002E5B8 <AmiBlitz3.ab3@16977>   BTST #$0,D1
0002E5BC <AmiBlitz3.ab3@16978>    BNE.w illlaberr
0002E5C2 <AmiBlitz3.ab3@16979>   MOVE.w procnum,D1
0002E5C6 <AmiBlitz3.ab3@16980>   CMP.w $10(A2),D1
0002E5CA <AmiBlitz3.ab3@16981>    BNE.w referr
0002E5CC <AmiBlitz3.ab3@16982> RTS
0002E5CE <AmiBlitz3.ab3@16986>   MOVE.w D0,-(A7)
0002E5D6 <AmiBlitz3.ab3@16987>   CMP.b #2,optistring
0002E5DA <AmiBlitz3.ab3@16988>   BEQ 'l10
0002E5E0 <AmiBlitz3.ab3@16991>   MOVE.w numtoa0,D1
0002E5E4 <AmiBlitz3.ab3@16992>    BSR.w writeword
0002E5E8 <AmiBlitz3.ab3@16993>    BSR.w addoff
0002E5EE <AmiBlitz3.ab3@16994>   MOVE.l litdata1,D1
0002E5F2 <AmiBlitz3.ab3@16995>    BSR.w writelong
0002E5F8 <AmiBlitz3.ab3@16996>   MOVE.w pushlen,D1
0002E5FC <AmiBlitz3.ab3@16997>    BSR.w writeword
0002E600 <AmiBlitz3.ab3@16998>   MOVE.w #$C600,D1
0002E604 <AmiBlitz3.ab3@16999>    BSR.w Atokejsr
0002E606 <AmiBlitz3.ab3@17000>   MOVE.w (A7)+,D0
0002E608 <AmiBlitz3.ab3@17001> RTS
0002E60A <AmiBlitz3.ab3@17004>   MOVEQ #0,d1
0002E60E <AmiBlitz3.ab3@17005>   BSR.w pokedata1b
0002E614 <AmiBlitz3.ab3@17006>   MOVE.l destpointer,a4
0002E618 <AmiBlitz3.ab3@17007>   MOVE.w #$203c,d1
0002E61E <AmiBlitz3.ab3@17008>   TST.w mode
0002E622 <AmiBlitz3.ab3@17009>   BNE 'lm10
0002E628 <AmiBlitz3.ab3@17010>    ADDQ.w #4,a2offset
0002E62C <AmiBlitz3.ab3@17011>   MOVE.w #$2f3c,d1
0002E632 <AmiBlitz3.ab3@17014>   TST.w mode
0002E636 <AmiBlitz3.ab3@17015>   BEQ 'lm3
0002E63C <AmiBlitz3.ab3@17016>   MOVE.w regnum,D0
0002E63E <AmiBlitz3.ab3@17017>   LSL.w #8,D0
0002E640 <AmiBlitz3.ab3@17018>   LSL.w #1,D0
0002E642 <AmiBlitz3.ab3@17019>   OR.w d0,d1
0002E646 <AmiBlitz3.ab3@17020>   BSR writeword
0002E64A <AmiBlitz3.ab3@17021>   BSR.w addoff
0002E650 <AmiBlitz3.ab3@17022>   MOVE.l litdata1,D1
0002E654 <AmiBlitz3.ab3@17023>   BSR.w writelong
0002E65C <AmiBlitz3.ab3@17024>   CMP.w #3,mode
0002E660 <AmiBlitz3.ab3@17025>   BEQ 'l30
0002E666 <AmiBlitz3.ab3@17026>    ADDQ.w #4,a2offset
0002E66A <AmiBlitz3.ab3@17027>   MOVE.w #$4878,D1
0002E66E <AmiBlitz3.ab3@17028>   BSR.w writeword
0002E670 <AmiBlitz3.ab3@17029>   MOVE.l d2,d1
0002E674 <AmiBlitz3.ab3@17030>   BSR writeword
0002E676 <AmiBlitz3.ab3@17033>   MOVE.w (A7)+,D0
0002E678 <AmiBlitz3.ab3@17034> RTS
0002E67E <AmiBlitz3.ab3@17037>   MOVE.l #$3f3c0007,d1
0002E682 <AmiBlitz3.ab3@17038>   BSR writelong
0002E688 <AmiBlitz3.ab3@17039>   MOVE.w regnum,D1
0002E68A <AmiBlitz3.ab3@17040>   LSL.w #8,D1
0002E68C <AmiBlitz3.ab3@17041>   LSL.w #1,D1
0002E690 <AmiBlitz3.ab3@17042>   ORI.w #$2f3c,d1
0002E694 <AmiBlitz3.ab3@17043>   BSR writeword
0002E69A <AmiBlitz3.ab3@17044>    ADDQ.w #4,a2offset
0002E69C <AmiBlitz3.ab3@17045>   MOVE.l d2,d1
0002E6A0 <AmiBlitz3.ab3@17046>   BSR writelong
0002E6A4 <AmiBlitz3.ab3@17047>   MOVE.w #$2f3c,d1
0002E6A8 <AmiBlitz3.ab3@17048>   BSR writeword
0002E6AC <AmiBlitz3.ab3@17049>   BSR.w addoff
0002E6B2 <AmiBlitz3.ab3@17050>   MOVE.l litdata1,D1
0002E6B6 <AmiBlitz3.ab3@17051>   BSR.w writelong
0002E6B8 <AmiBlitz3.ab3@17052>   MOVE.w (A7)+,D0
0002E6BA <AmiBlitz3.ab3@17053> RTS
0002E6BE <AmiBlitz3.ab3@17057>   BSR.w get1bytemain
0002E6C2 <AmiBlitz3.ab3@17058>    BSR.w JL_0_AE22
0002E6C8 <AmiBlitz3.ab3@17059>   MOVE.w regnum,D1
0002E6CA <AmiBlitz3.ab3@17060>   LSL.w #8,D1
0002E6CC <AmiBlitz3.ab3@17061>   LSL.w #1,D1
0002E6D0 <AmiBlitz3.ab3@17062>   ORI.w #$203C,D1
0002E6D4 <AmiBlitz3.ab3@17063>    BSR.w writeword
0002E6D8 <AmiBlitz3.ab3@17064>    BSR.w addoff
0002E6DC <AmiBlitz3.ab3@17065>   MOVE.l $8(A2),D1
0002E6E0 <AmiBlitz3.ab3@17066>    BSR.w writelong
0002E6E2 <AmiBlitz3.ab3@17067>   MOVEQ.l #$03,D2
0002E6E8 <AmiBlitz3.ab3@17068>   CLR.b peekaddrsize
0002E6EC <AmiBlitz3.ab3@17069> BRA.w reget
0002E6EE <AmiBlitz3.ab3@17072>   MOVEQ.l #$00,D3
0002E6F2 <AmiBlitz3.ab3@17075>   BSR.w get1bytemain
0002E6F6 <AmiBlitz3.ab3@17076>    BEQ.w syntaxerr
0002E6FA <AmiBlitz3.ab3@17077>   CMP.w #$22,D0
0002E6FE <AmiBlitz3.ab3@17078>    BEQ.w JL_0_AF1A
0002E700 <AmiBlitz3.ab3@17079>   LSL.l #8,D3
0002E702 <AmiBlitz3.ab3@17080>   MOVE.b D0,D3
0002E706 <AmiBlitz3.ab3@17081> BRA.w JL_0_AF02
0002E70A <AmiBlitz3.ab3@17084>   BSR.w get1bytemain
0002E70E <AmiBlitz3.ab3@17085> BRA.w JL_0_B46E
0002E710 <AmiBlitz3.ab3@17088>   MOVE.w D2,-(A7)                                          ;basicvarsforasm
0002E714 <AmiBlitz3.ab3@17089>    BSR.w makename2
0002E718 <AmiBlitz3.ab3@17090>    BSR.w findlabel2
0002E71C <AmiBlitz3.ab3@17091>    BEQ.w 'l10
0002E722 <AmiBlitz3.ab3@17092>    LEA ptr_parameterstore,a0
0002E728 <AmiBlitz3.ab3@17093>    CMP.b #"@",-1(a0,d2.w)
0002E72C <AmiBlitz3.ab3@17094>    BNE cnferr
0002E730 <AmiBlitz3.ab3@17095>    CLR.b -1(a0,d2.w)
0002E732 <AmiBlitz3.ab3@17096>    SUBQ.l #1,d2
0002E738 <AmiBlitz3.ab3@17097>    LEA varbase,a2
0002E73C <AmiBlitz3.ab3@17098>    BSR findvariable
0002E740 <AmiBlitz3.ab3@17099>    BNE cnferr
0002E744 <AmiBlitz3.ab3@17100>    CMP.b #"\",d0
0002E748 <AmiBlitz3.ab3@17101>    BNE 'l6
0002E74E <AmiBlitz3.ab3@17102>    ADDQ #1,lastsourcepos
0002E752 <AmiBlitz3.ab3@17103>    MOVE.l $a(a2),a2
0002E754 <AmiBlitz3.ab3@17104>    ADDQ.l #4,a2
0002E758 <AmiBlitz3.ab3@17105>    BSR.w makename2
0002E75C <AmiBlitz3.ab3@17106>    BSR findvariable2
0002E760 <AmiBlitz3.ab3@17107>    BNE cnferr
0002E764 <AmiBlitz3.ab3@17108> BRA.s 'l6                                                  ;???
0002E768 <AmiBlitz3.ab3@17111>    MOVE.w $4(a2),d3
0002E76A <AmiBlitz3.ab3@17112>    EXT.l d3
0002E76E <AmiBlitz3.ab3@17113> BRA JL_0_AF46
0002E772 <AmiBlitz3.ab3@17116>   MOVE.l $8(A2),D3
0002E77A <AmiBlitz3.ab3@17117>   CMPI.l #$1,$4(A2)
0002E77E <AmiBlitz3.ab3@17118>    BEQ.w JL_0_AF46
0002E784 <AmiBlitz3.ab3@17119>   NOT.w asmtype
0002E786 <AmiBlitz3.ab3@17122>   MOVE.w (A7)+,D2
0002E78A <AmiBlitz3.ab3@17123> BRA.w JL_0_B46E
0002E78C <AmiBlitz3.ab3@17127>   MOVE.w D2,-(A7)
0002E790 <AmiBlitz3.ab3@17128>    BSR.w getparameter
0002E794 <AmiBlitz3.ab3@17129>   CMP.w #"{",D0                                          ;test if var = function{}
0002E798 <AmiBlitz3.ab3@17130>    BEQ.w isfunction
0002E79C <AmiBlitz3.ab3@17131>    BSR.w JL_0_8E3C
0002E7A0 <AmiBlitz3.ab3@17133>    BSR.w calcvar                                         ;getvaroffset+type
0002E7A4 <AmiBlitz3.ab3@17134>    BSR.w JL_0_B150
0002E7AA <AmiBlitz3.ab3@17135>    MOVE.l a2,rightsidetype
0002E7B0 <AmiBlitz3.ab3@17146>    TST.b typecheck
0002E7B4 <AmiBlitz3.ab3@17147>    BEQ JL_0_AF66
0002E7BE <AmiBlitz3.ab3@17148>    CMP.l #$da01,lasttoken                                  ;poke
0002E7C2 <AmiBlitz3.ab3@17149>    BEQ 'l1
0002E7CC <AmiBlitz3.ab3@17150>    CMP.l #$da02,lasttoken                                  ;peek
0002E7D0 <AmiBlitz3.ab3@17151>    BNE 'l2
0002E7D8 <AmiBlitz3.ab3@17154>    CMP.w #1,parnum                                         ; is not call when & is used in parameter
0002E7DC <AmiBlitz3.ab3@17155>    BNE JL_0_AF66
0002E7E2 <AmiBlitz3.ab3@17156>    MOVE.b d2,peekaddrsize
0002E7E6 <AmiBlitz3.ab3@17157>    BRA JL_0_AF66
0002E7EC <AmiBlitz3.ab3@17160>   CLR.b peekaddrsize
0002E7F0 <AmiBlitz3.ab3@17163>   CMP.w #$1,D2
0002E7F4 <AmiBlitz3.ab3@17164>    BNE.w JL_0_AF7C
0002E7FA <AmiBlitz3.ab3@17165>   MOVE.w regnum,D1
0002E7FE <AmiBlitz3.ab3@17166>   ORI.w #$4880,D1
0002E802 <AmiBlitz3.ab3@17167>    BSR.w writeword
0002E804 <AmiBlitz3.ab3@17170>   MOVE.w (A7)+,D3
0002E808 <AmiBlitz3.ab3@17171>    BEQ.w JL_0_AF9E
0002E80E <AmiBlitz3.ab3@17172>    MOVE.l lastinstructionaddr,a0
0002E812 <AmiBlitz3.ab3@17173>   CMP.w #$3,D3
0002E816 <AmiBlitz3.ab3@17174>    BNE.w JL_0_AF92
0002E81A <AmiBlitz3.ab3@17175>   CMP.w #$4,D2
0002E81E <AmiBlitz3.ab3@17176>    BEQ.w JL_0_AF98
0002E820 <AmiBlitz3.ab3@17179>   CMP.w D2,D3
0002E824 <AmiBlitz3.ab3@17180>    BLS.w JL_0_AF9E
0002E826 <AmiBlitz3.ab3@17183>   EXG.l D2,D3
0002E828 <AmiBlitz3.ab3@17184>   MOVE.l a0,-(a7)
0002E82E <AmiBlitz3.ab3@17185>   TST.b typecheck
0002E832 <AmiBlitz3.ab3@17186>   BEQ 'ok
0002E838 <AmiBlitz3.ab3@17187>   TST.b notypecheck
0002E83C <AmiBlitz3.ab3@17188>   BNE 'ok
0002E842 <AmiBlitz3.ab3@17189>   MOVE.l leftsidetype,a0
0002E84C <AmiBlitz3.ab3@17190>   CMP.l #0,leftsidetype
0002E850 <AmiBlitz3.ab3@17191>   BEQ 'ok
0002E858 <AmiBlitz3.ab3@17192>   CMP.l #$100,4(a0)
0002E85C <AmiBlitz3.ab3@17193>   BLE 'ok
0002E860 <AmiBlitz3.ab3@17194>   CMP.b #3,d3
0002E864 <AmiBlitz3.ab3@17195>   BEQ 'ok
0002E868 <AmiBlitz3.ab3@17196>   CMP.b #7,d3
0002E86C <AmiBlitz3.ab3@17197>   BEQ 'ok
0002E872 <AmiBlitz3.ab3@17198>   JMP   error_convert_types      ;for all syntax only long and string allowed to assign to a type
0002E874 <AmiBlitz3.ab3@17200>   MOVE.l (a7)+,a0
0002E878 <AmiBlitz3.ab3@17201>   BSR.w writeconvertcode         ;called from var assign
0002E87C <AmiBlitz3.ab3@17204> BRA.w reget
0002E87E <AmiBlitz3.ab3@17207>   MOVEQ.l #$00,D3
0002E884 <AmiBlitz3.ab3@17208>   MOVE.w regnum,D1
0002E888 <AmiBlitz3.ab3@17209>    BEQ.w JL_0_AFC8
0002E88A <AmiBlitz3.ab3@17210>   SUBQ.w #1,D1
0002E88C <AmiBlitz3.ab3@17213>      LSR.l #1,D3
0002E890 <AmiBlitz3.ab3@17214>      BSET #$F,D3
0002E894 <AmiBlitz3.ab3@17215>   DBF D1,JL_0_AFB0b
0002E89A <AmiBlitz3.ab3@17217>    TST.b fpu
0002E89E <AmiBlitz3.ab3@17218>    BEQ 'l1
0002E8A4 <AmiBlitz3.ab3@17219>    ADDQ.l #2,stacktrack                                    ;intern command
0002E8A6 <AmiBlitz3.ab3@17220>     MOVE.l a0,-(a7)
0002E8AC <AmiBlitz3.ab3@17221>     MOVE.l stacktrack,d1
0002E8B2 <AmiBlitz3.ab3@17222>     LEA fpustackbase,a0
0002E8B6 <AmiBlitz3.ab3@17223>     CLR.w 0(a0,d1)
0002E8BC <AmiBlitz3.ab3@17224>     CLR.w regmask
0002E8BE <AmiBlitz3.ab3@17225>     MOVE.l (a7)+,a0
0002E8C2 <AmiBlitz3.ab3@17228>   MOVE.w #$48E7,D1
0002E8C6 <AmiBlitz3.ab3@17229>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002E8C8 <AmiBlitz3.ab3@17230>   MOVE.w D3,D1
0002E8CC <AmiBlitz3.ab3@17231> BRA.w writeword
0002E8CE <AmiBlitz3.ab3@17236>   MOVEQ.l #$00,D3
0002E8D4 <AmiBlitz3.ab3@17237>   MOVE.w regnum,D1
0002E8D8 <AmiBlitz3.ab3@17238>    BEQ.w JL_0_AFC8
0002E8DA <AmiBlitz3.ab3@17239>   SUBQ.w #1,D1
0002E8DC <AmiBlitz3.ab3@17242>     LSR.l #1,D3
0002E8E0 <AmiBlitz3.ab3@17243>     BSET #$F,D3
0002E8E4 <AmiBlitz3.ab3@17244>   DBF D1,JL_0_AFB0
0002E8EA <AmiBlitz3.ab3@17246>    TST.b fpu
0002E8EE <AmiBlitz3.ab3@17247>    BEQ 'l1
0002E8F4 <AmiBlitz3.ab3@17248>    ADDQ.l #2,stacktrack                                    ;intern command
0002E8F6 <AmiBlitz3.ab3@17249>     MOVE.l a0,-(a7)
0002E8FC <AmiBlitz3.ab3@17250>     MOVE.l stacktrack,d1
0002E902 <AmiBlitz3.ab3@17251>     LEA fpustackbase,a0
0002E906 <AmiBlitz3.ab3@17252>     CLR.w 0(a0,d1)
0002E90A <AmiBlitz3.ab3@17253>    CMP.b #5,(a3)                                           ;result float ?
0002E90E <AmiBlitz3.ab3@17254>     BNE 'nofpu
0002E918 <AmiBlitz3.ab3@17256>     MOVE.w regnum,regnumfunc
0002E91E <AmiBlitz3.ab3@17259>   CLR.w regmask
0002E920 <AmiBlitz3.ab3@17260>     MOVE.l (a7)+,a0
0002E924 <AmiBlitz3.ab3@17263>   MOVE.w #$48E7,D1
0002E928 <AmiBlitz3.ab3@17264>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002E92A <AmiBlitz3.ab3@17265>   MOVE.w D3,D1
0002E92E <AmiBlitz3.ab3@17266> BRA.w writeword
0002E930 <AmiBlitz3.ab3@17269> RTS
0002E932 <AmiBlitz3.ab3@17273>   MOVE.l D1,-(A7)
0002E936 <AmiBlitz3.ab3@17274>   MOVE.w #$4EB9,D1
0002E93A <AmiBlitz3.ab3@17275>    BSR.w writeword
0002E93E <AmiBlitz3.ab3@17276>    BSR.w addoff
0002E940 <AmiBlitz3.ab3@17277>   MOVE.l (A7)+,D1
0002E944 <AmiBlitz3.ab3@17278> BRA.w writelong
0002E948 <AmiBlitz3.ab3@17282>    BSR.w findproc                                          ;write function call
0002E94C <AmiBlitz3.ab3@17283>    BEQ 'l1
0002E952 <AmiBlitz3.ab3@17284>    TST.l unusedfunc
0002E956 <AmiBlitz3.ab3@17285>    BEQ noprocerr
0002E95C <AmiBlitz3.ab3@17287>    JSR gotoendsource
0002E964 <AmiBlitz3.ab3@17290>   MOVE.l funcstruct_returntype(a2),rightsidetype
0002E96A <AmiBlitz3.ab3@17291>   TST.l typetocast
0002E96E <AmiBlitz3.ab3@17292>   BEQ 'nocast
0002E978 <AmiBlitz3.ab3@17293>   MOVE.l typetocast,rightsidetype
0002E97E <AmiBlitz3.ab3@17294>   CLR.l typetocast
0002E980 <AmiBlitz3.ab3@17295>   MOVE.l a1,-(a7)
0002E986 <AmiBlitz3.ab3@17296>   MOVE.l rightsidetype,a1
0002E98C <AmiBlitz3.ab3@17297>   CMP.l leftsidetype,a1
0002E990 <AmiBlitz3.ab3@17298>   BEQ 'ok
0002E996 <AmiBlitz3.ab3@17299>   JMP errorconvertreturntype2
0002E998 <AmiBlitz3.ab3@17300> 'ok  MOVE.l (a7)+,a1
0002E99A <AmiBlitz3.ab3@17302>   MOVEQ.l #$00,D1
0002E99E <AmiBlitz3.ab3@17303>   MOVE.b $5(A2),D1
0002E9A4 <AmiBlitz3.ab3@17304>   MOVE.b d1,retmode
0002E9A8 <AmiBlitz3.ab3@17305>    BMI.w illprocerr
0002E9AE <AmiBlitz3.ab3@17306>    MOVE.b #1,isfunc(a2)
0002E9B0 <AmiBlitz3.ab3@17307>   MOVE.w D1,-(A7)
0002E9B2 <AmiBlitz3.ab3@17308>   MOVEQ.l #$00,D1
0002E9B6 <AmiBlitz3.ab3@17309>   MOVE.b $4(A2),D1
0002E9B8 <AmiBlitz3.ab3@17310>   LSR.w #4,D1
0002E9BC <AmiBlitz3.ab3@17311>    BEQ.w JL_0_B006
0002E9BE <AmiBlitz3.ab3@17312>   LSL.w #2,D1
0002E9C4 <AmiBlitz3.ab3@17313>   SUB.w D1,a2offset
0002E9C8 <AmiBlitz3.ab3@17316>   CMPI.w #$7,(A7)
0002E9CC <AmiBlitz3.ab3@17317>    BNE.b JL_0_B014
0002E9CE <AmiBlitz3.ab3@17318>   MOVE.l A2,-(A7)
0002E9D2 <AmiBlitz3.ab3@17319>    BSR.w makesbase
0002E9D4 <AmiBlitz3.ab3@17320>   MOVEA.l (A7)+,A2
0002E9DA <AmiBlitz3.ab3@17323>   MOVE.w sbasegot,-(A7)
0002E9DE <AmiBlitz3.ab3@17324>    BEQ.b JL_0_B020
0002E9E2 <AmiBlitz3.ab3@17325>    BSR.w dopusha3
0002E9E6 <AmiBlitz3.ab3@17328>   BSR.w JL_0_AFA2func
0002E9E8 <AmiBlitz3.ab3@17329>   MOVE.w D3,-(A7)
0002E9EC <AmiBlitz3.ab3@17330>   MOVE.l $E(A2),D1
0002E9F0 <AmiBlitz3.ab3@17331>   TST.b $20(a2)                                            ;increase if morepar
0002E9F4 <AmiBlitz3.ab3@17332>   BNE 'no0par
0002E9F6 <AmiBlitz3.ab3@17333>   MOVE.l a5,a4
0002E9FA <AmiBlitz3.ab3@17336>   CMP.b #$20,(a4)+
0002E9FE <AmiBlitz3.ab3@17337>   BEQ 'l1
0002EA04 <AmiBlitz3.ab3@17338>   CMP.b #"}",-1(a4)
0002EA08 <AmiBlitz3.ab3@17339>   BNE  'no0par
0002EA0A <AmiBlitz3.ab3@17340>   MOVEQ #0,d0
0002EA0E <AmiBlitz3.ab3@17343>   LEA $16(A2),A1
0002EA10 <AmiBlitz3.ab3@17346>   MOVE.l d1,-(a7)
0002EA12 <AmiBlitz3.ab3@17347>   MOVE.b (a1),d2
0002EA14 <AmiBlitz3.ab3@17348>   MOVE.l d0,d1
0002EA18 <AmiBlitz3.ab3@17349>   CMP.w #4,d2
0002EA1C <AmiBlitz3.ab3@17350>   BNE 'l1b
0002EA22 <AmiBlitz3.ab3@17351>   ADD.l #$203c,d1
0002EA26 <AmiBlitz3.ab3@17352>   BSR writeword
0002EA2C <AmiBlitz3.ab3@17353>   MOVE.l #$ffff0000,d1
0002EA30 <AmiBlitz3.ab3@17354>   BSR writelong
0002EA34 <AmiBlitz3.ab3@17355> BRA 'l2b
0002EA3A <AmiBlitz3.ab3@17358>    TST.b fpu
0002EA3E <AmiBlitz3.ab3@17359>    BNE 'l1c
0002EA42 <AmiBlitz3.ab3@17360>    CMP.w #5,d2
0002EA46 <AmiBlitz3.ab3@17361>    BNE 'l1c
0002EA4C <AmiBlitz3.ab3@17362>    ADD.l #$203c,d1
0002EA50 <AmiBlitz3.ab3@17363>    BSR writeword
0002EA56 <AmiBlitz3.ab3@17364>    MOVE.l #$800000c1,d1
0002EA5A <AmiBlitz3.ab3@17365>    BSR writelong
0002EA5E <AmiBlitz3.ab3@17366> BRA 'l2b
0002EA64 <AmiBlitz3.ab3@17369>   ADD.l #$70ff,d1
0002EA68 <AmiBlitz3.ab3@17370>   BSR writeword
0002EA6C <AmiBlitz3.ab3@17371>   CMP.w #7,d2
0002EA70 <AmiBlitz3.ab3@17372>   BNE 'l1d
0002EA76 <AmiBlitz3.ab3@17373>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002EA7A <AmiBlitz3.ab3@17374>   BSR writelong
0002EA7C <AmiBlitz3.ab3@17375>   MOVEQ #0,d1
0002EA80 <AmiBlitz3.ab3@17376>   BSR writeword
0002EA86 <AmiBlitz3.ab3@17377>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002EA8A <AmiBlitz3.ab3@17378>   BSR writelong
0002EA8C <AmiBlitz3.ab3@17379>   MOVEQ #0,d1
0002EA90 <AmiBlitz3.ab3@17380>   BSR writeword
0002EA96 <AmiBlitz3.ab3@17382> 'l1d  MOVE.l #$f23c5000,d1
0002EA98 <AmiBlitz3.ab3@17383>   MOVE.l d0,d2
0002EA9A <AmiBlitz3.ab3@17384>   ASR.l #2,d2
0002EA9C <AmiBlitz3.ab3@17385>   ADD.l d2,d1
0002EAA0 <AmiBlitz3.ab3@17386>   BSR writelong
0002EAA4 <AmiBlitz3.ab3@17387>   MOVE.w #$ffff,d1
0002EAA8 <AmiBlitz3.ab3@17388>   BSR writeword
0002EAAA <AmiBlitz3.ab3@17392>   MOVE.l (a7)+,d1
0002EAAC <AmiBlitz3.ab3@17393>      ADDQ.l #1,a1
0002EAB2 <AmiBlitz3.ab3@17394>      ADD.l #$0200,d0
0002EAB8 <AmiBlitz3.ab3@17395>      CMP.l #$0e00,d0
0002EABC <AmiBlitz3.ab3@17396>      BEQ syntaxerr
0002EABE <AmiBlitz3.ab3@17397>      TST.b (a1)
0002EAC2 <AmiBlitz3.ab3@17398>      BNE 'again
0002EAC6 <AmiBlitz3.ab3@17399> BRA 'p1
0002EACA <AmiBlitz3.ab3@17402>   TST.b $4(A2)
0002EACE <AmiBlitz3.ab3@17403>    BNE.w JL_0_B03E
0002EAD2 <AmiBlitz3.ab3@17406>   BSR.w JL_0_AFCA
0002EAD6 <AmiBlitz3.ab3@17407>    BSR.w get1bytemain
0002EADA <AmiBlitz3.ab3@17408> BRA.w JL_0_B06C
0002EAE0 <AmiBlitz3.ab3@17412>   MOVE.w parnum,-(a7)                                      ;7.2014 need store so function calls in parameter >6 can work
0002EAE6 <AmiBlitz3.ab3@17413>   MOVE.w regnum,-(A7)
0002EAF0 <AmiBlitz3.ab3@17414>   MOVE.w regnum,regnumfunc
0002EAF2 <AmiBlitz3.ab3@17417>   MOVE.l D1,-(A7)                                          ;write functioncall with pars
0002EAFA <AmiBlitz3.ab3@17418>   MOVE.b #1,funccall
0002EAFC <AmiBlitz3.ab3@17419>   MOVEQ.l #$00,D0
0002EB00 <AmiBlitz3.ab3@17420>   MOVE.b $4(A2),D0
0002EB0A <AmiBlitz3.ab3@17421>   MOVE.w a2offset,a2offset2
0002EB12 <AmiBlitz3.ab3@17422>   MOVE.b 5(a2),retmode
0002EB18 <AmiBlitz3.ab3@17423>   MOVE.l a2,currentfunccall
0002EB1C <AmiBlitz3.ab3@17424>   LEA $16(A2),A2
0002EB22 <AmiBlitz3.ab3@17425>   CLR.w regnum
0002EB28 <AmiBlitz3.ab3@17426>   CLR.w regmask
0002EB2E <AmiBlitz3.ab3@17427>   MOVE.b isconstantvalue,-(a7)
0002EB34 <AmiBlitz3.ab3@17428>   MOVE.b funcparloop,-(a7)
0002EB3C <AmiBlitz3.ab3@17429>   MOVE.b #1,funcparloop
0002EB42 <AmiBlitz3.ab3@17430>   MOVE.l rightsidetype,-(a7)
0002EB48 <AmiBlitz3.ab3@17431>   MOVE.l leftsidetype,-(a7)                               ;store values To stack so it can work recursive
0002EB4E <AmiBlitz3.ab3@17432>   MOVE.b blitzparloop,-(a7)
0002EB54 <AmiBlitz3.ab3@17433>   CLR.b blitzparloop
0002EB5A <AmiBlitz3.ab3@17434>   JSR fetchpees2
0002EB60 <AmiBlitz3.ab3@17435>   MOVE.b (a7)+,blitzparloop
0002EB66 <AmiBlitz3.ab3@17436>   MOVE.l (a7)+,leftsidetype
0002EB6C <AmiBlitz3.ab3@17437>   MOVE.l (a7)+,rightsidetype
0002EB72 <AmiBlitz3.ab3@17438>   MOVE.b (a7)+,funcparloop
0002EB78 <AmiBlitz3.ab3@17439>   MOVE.b (a7)+,isconstantvalue
0002EB7E <AmiBlitz3.ab3@17440>   JSR chkstak
0002EB80 <AmiBlitz3.ab3@17441>   MOVE.l (A7)+,D1
0002EB84 <AmiBlitz3.ab3@17457>    BTST #0,d1
0002EB88 <AmiBlitz3.ab3@17458>    BNE intern1
0002EB8C <AmiBlitz3.ab3@17459>    BSR.w JL_0_AFCA
0002EB92 <AmiBlitz3.ab3@17481>   MOVE.w (A7)+,regnum
0002EB98 <AmiBlitz3.ab3@17482>   MOVE.w (a7)+,parnum                                     ;07.2014
0002EB9C <AmiBlitz3.ab3@17485>   CMP.w #"}",D0
0002EBA0 <AmiBlitz3.ab3@17486>    BNE.w errorbracketmiss2
0002EBA2 <AmiBlitz3.ab3@17487>    MOVEQ #0,d1                                            ; end of function call pars
0002EBA8 <AmiBlitz3.ab3@17488>   MOVE.w regnum,D1
0002EBAC <AmiBlitz3.ab3@17489>    BEQ.w JL_0_B08A
0002EBB2 <AmiBlitz3.ab3@17490>    TST.b fpu
0002EBB6 <AmiBlitz3.ab3@17491>    BEQ 'old
0002EBBE <AmiBlitz3.ab3@17492>    CMP.b #5,retmode
0002EBC2 <AmiBlitz3.ab3@17493>    BNE 'old
0002EBC4 <AmiBlitz3.ab3@17494>    ASL.l #7,d1
0002EBCA <AmiBlitz3.ab3@17495>    OR.l #$f2000000,d1
0002EBCE <AmiBlitz3.ab3@17496>    BSR writelong
0002EBD2 <AmiBlitz3.ab3@17497> BRA JL_0_B08A
0002EBD4 <AmiBlitz3.ab3@17499>  'old  LSL.w #8,D1
0002EBD6 <AmiBlitz3.ab3@17500>   LSL.w #1,D1
0002EBDA <AmiBlitz3.ab3@17501>   ORI.w #$2000,D1
0002EBDE <AmiBlitz3.ab3@17502>    BSR.w writeword
0002EBE0 <AmiBlitz3.ab3@17505>    MOVE.w (A7)+,D3
0002EBE4 <AmiBlitz3.ab3@17506>    BEQ.w JL_0_B0A8
0002EBEA <AmiBlitz3.ab3@17507>    TST.b fpu
0002EBEE <AmiBlitz3.ab3@17508>    BEQ 'old
0002EBF0 <AmiBlitz3.ab3@17509>    MOVE.l d0,-(a7)
0002EBF4 <AmiBlitz3.ab3@17510>    MOVE.w #8,d0
0002EBF6 <AmiBlitz3.ab3@17511>    MOVE.l a0,-(a7)
0002EBFC <AmiBlitz3.ab3@17512>    MOVE.l stacktrack,d1
0002EC02 <AmiBlitz3.ab3@17513>    LEA fpustackbase,a0
0002EC0A <AmiBlitz3.ab3@17514>    MOVE.w 0(a0,d1),regmask
0002EC0C <AmiBlitz3.ab3@17515>    MOVE.l (a7)+,a0
0002EC10 <AmiBlitz3.ab3@17518>   BEQ 'ready
0002EC16 <AmiBlitz3.ab3@17519>    BTST d0,regmask
0002EC1A <AmiBlitz3.ab3@17520>    BEQ 'noa7
0002EC1C <AmiBlitz3.ab3@17521>    MOVEQ #0,d1
0002EC1E <AmiBlitz3.ab3@17522>    MOVE.w d0,d1
0002EC20 <AmiBlitz3.ab3@17523>    SUBQ.w #1,d1
0002EC22 <AmiBlitz3.ab3@17524>    ASL #7,d1
0002EC28 <AmiBlitz3.ab3@17526>    OR.l #$f21f5400,d1                                      ;fmove.d (a7)+
0002EC2C <AmiBlitz3.ab3@17527>    BSR writelong
0002EC32 <AmiBlitz3.ab3@17528>    SUBQ.l #2,stacktrack
0002EC34 <AmiBlitz3.ab3@17531>    SUBQ.w #1,d0
0002EC38 <AmiBlitz3.ab3@17532>    BNE 'loop
0002EC3E <AmiBlitz3.ab3@17535>   SUBQ.l #2,stacktrack                                     ;integer sub
0002EC40 <AmiBlitz3.ab3@17536>   MOVE.l (a7)+,d0
0002EC44 <AmiBlitz3.ab3@17539>   MOVE.w #$4CDF,D1
0002EC48 <AmiBlitz3.ab3@17540>    BSR.w writeword
0002EC4A <AmiBlitz3.ab3@17541>   MOVEQ.l #$00,D1
0002EC4C <AmiBlitz3.ab3@17542>   MOVEQ.l #$0F,D4
0002EC4E <AmiBlitz3.ab3@17545>     LSL.w #1,D3
0002EC50 <AmiBlitz3.ab3@17546>     ROXR.w #1,D1
0002EC54 <AmiBlitz3.ab3@17547>   DBF D4,JL_0_B09C                                         ;movem.l (a7)+,dx
0002EC58 <AmiBlitz3.ab3@17549>     BSR.w writeword
0002EC5E <AmiBlitz3.ab3@17550>    CLR.w regnumfunc
0002EC60 <AmiBlitz3.ab3@17553>   MOVE.w (A7)+,D1
0002EC64 <AmiBlitz3.ab3@17554>    BEQ.b JL_0_B0D2
0002EC68 <AmiBlitz3.ab3@17555>   CMPI.w #$7,(A7)
0002EC6C <AmiBlitz3.ab3@17556>    BEQ.b JL_0_B0C4
0002EC72 <AmiBlitz3.ab3@17557>   LEA geta3,A0
0002EC78 <AmiBlitz3.ab3@17558>   LEA numtoa0,A1
0002EC7C <AmiBlitz3.ab3@17559>    BSR.w pokecode
0002EC80 <AmiBlitz3.ab3@17560> BRA.b JL_0_B0CE
0002EC86 <AmiBlitz3.ab3@17563>   MOVE.w deca3,D1
0002EC8A <AmiBlitz3.ab3@17564>    BSR.w writeword
0002EC8E <AmiBlitz3.ab3@17567>   BSR.w dopulla3                                           ;fix up string base
0002EC90 <AmiBlitz3.ab3@17570>   MOVE.w (A7)+,D2                                          ;what it returns!
0002EC94 <AmiBlitz3.ab3@17571>   CMP.w #$7,D2
0002EC98 <AmiBlitz3.ab3@17572>    BNE.w JL_0_B0EC
0002EC9E <AmiBlitz3.ab3@17573>   MOVE.w putstlen,D1
0002ECA4 <AmiBlitz3.ab3@17574>   OR.w regnum,D1
0002ECA8 <AmiBlitz3.ab3@17575>    BSR.w writeword
0002ECAC <AmiBlitz3.ab3@17578>   BSR.w get1bytemain
0002ECB0 <AmiBlitz3.ab3@17579> BRA.w JL_0_AF66
0002ECB2 <AmiBlitz3.ab3@17583> deca3:   Dc.b $53,$4B                                      ;SUBQ.W  #1,A3
0002ECBA <AmiBlitz3.ab3@17588>   CMP.b #2,optistring
0002ECBE <AmiBlitz3.ab3@17589>   BEQ fs2
0002ECC2 <AmiBlitz3.ab3@17590>   BSR.w makesbase                                          ;writestringvariable
0002ECC6 <AmiBlitz3.ab3@17591>   BTST #$F,D2
0002ECCA <AmiBlitz3.ab3@17592>    BNE.w JL_0_B112
0002ECD0 <AmiBlitz3.ab3@17593>   MOVE.w D3,leaa5d3a2+2
0002ECD6 <AmiBlitz3.ab3@17594>   MOVE.l leaa5d3a2,D1
0002ECDA <AmiBlitz3.ab3@17595>    BSR.w pokela5s
0002ECE0 <AmiBlitz3.ab3@17598>   MOVE.w regnum,D1
0002ECE2 <AmiBlitz3.ab3@17599>   LSL.w #8,D1
0002ECE4 <AmiBlitz3.ab3@17600>   LSL.w #1,D1
0002ECE8 <AmiBlitz3.ab3@17601>   ORI.w #$7000,D1
0002ECEE <AmiBlitz3.ab3@17602>   LEA stvarget2,A0
0002ECF0 <AmiBlitz3.ab3@17603>   MOVE.w D1,(A0)
0002ECF6 <AmiBlitz3.ab3@17604>   MOVE.w regnum,D1
0002ECFC <AmiBlitz3.ab3@17605>   ANDI.w #$FFF8,$2(A0)
0002ED00 <AmiBlitz3.ab3@17606>   OR.w D1,$2(A0)
0002ED06 <AmiBlitz3.ab3@17607>   LEA stvarget2f,A1
0002ED0A <AmiBlitz3.ab3@17608>    BSR.w pokecode
0002ED0E <AmiBlitz3.ab3@17609>   MOVE.w #$C600,D1
0002ED12 <AmiBlitz3.ab3@17610>    BSR.w Atokejsr
0002ED14 <AmiBlitz3.ab3@17611>   MOVEQ.l #$07,D2
0002ED18 <AmiBlitz3.ab3@17612> BRA.w reget
0002ED1E <AmiBlitz3.ab3@17615>      TST.w stackpar
0002ED22 <AmiBlitz3.ab3@17616>      BMI 'l10
0002ED28 <AmiBlitz3.ab3@17617>      MOVE.l #$3f3c0007,d1
0002ED2E <AmiBlitz3.ab3@17618>      ADDQ.w #2,a2offset
0002ED32 <AmiBlitz3.ab3@17619>      BSR writelong
0002ED36 <AmiBlitz3.ab3@17622>   MOVE.w #$4878,d1
0002ED3C <AmiBlitz3.ab3@17623>      CLR.w stackpar
0002ED40 <AmiBlitz3.ab3@17624>      BSR writeword
0002ED44 <AmiBlitz3.ab3@17625>      MOVE.w #$0,d1
0002ED48 <AmiBlitz3.ab3@17626>      BSR writeword
0002ED4C <AmiBlitz3.ab3@17627>      MOVE.w #$246d,d1
0002ED50 <AmiBlitz3.ab3@17628>      BSR writeword
0002ED52 <AmiBlitz3.ab3@17629>      MOVE.w d3,d1
0002ED56 <AmiBlitz3.ab3@17630>      BSR writeword
0002ED5C <AmiBlitz3.ab3@17631>      MOVE.l #$4a926704,d1
0002ED60 <AmiBlitz3.ab3@17632>      BSR writelong
0002ED66 <AmiBlitz3.ab3@17633>      MOVE.l #$2eaafffc,d1
0002ED6A <AmiBlitz3.ab3@17634>      BSR writelong
0002ED6E <AmiBlitz3.ab3@17635>      MOVE.w #$2f0a,d1
0002ED74 <AmiBlitz3.ab3@17636>      ADDQ.w #8,a2offset
0002ED78 <AmiBlitz3.ab3@17637>      BSR writeword
0002ED7C <AmiBlitz3.ab3@17638> BRA.w reget
0002ED80 <AmiBlitz3.ab3@17641>   CMP.b #$7,D2                                             ;load basic var
0002ED84 <AmiBlitz3.ab3@17642>    BEQ.w JL_0_B0F6
0002ED8A <AmiBlitz3.ab3@17644>    TST.b iee
0002ED8E <AmiBlitz3.ab3@17645>    BEQ 'noiee
0002ED92 <AmiBlitz3.ab3@17646>    CMP.b #5,d2
0002ED96 <AmiBlitz3.ab3@17647>    BNE 'noiee
0002ED98 <AmiBlitz3.ab3@17648>    MOVE.l d0,-(a7)                                         ;fpu load var
0002ED9C <AmiBlitz3.ab3@17649>    BTST #15,d2
0002EDA0 <AmiBlitz3.ab3@17650>    BEQ 'var
0002EDA6 <AmiBlitz3.ab3@17651>    CMP.l #$7fff,d3
0002EDAA <AmiBlitz3.ab3@17652>    BGT 'longoffset
0002EDB0 <AmiBlitz3.ab3@17653>    MOVE.l #$f22a4400,d1                                    ;newtype     >32kb
0002EDB2 <AmiBlitz3.ab3@17654>    TST.w d3                                                ;offset =0
0002EDB6 <AmiBlitz3.ab3@17655>    BNE 'offset
0002EDBC <AmiBlitz3.ab3@17658>   MOVE.l #$f2124400,d1
0002EDBE <AmiBlitz3.ab3@17659>    MOVEQ #0,d3
0002EDC2 <AmiBlitz3.ab3@17660> BRA 'glob
0002EDC8 <AmiBlitz3.ab3@17663>   SUBQ.l #4,destpointer
0002EDCC <AmiBlitz3.ab3@17664> BRA 'glob
0002EDD2 <AmiBlitz3.ab3@17667>   TST.b fast
0002EDD6 <AmiBlitz3.ab3@17668>    BEQ 'nofastload
0002EDDC <AmiBlitz3.ab3@17669>    TST.w regnum
0002EDE0 <AmiBlitz3.ab3@17670>    BNE 'nofastload
0002EDE6 <AmiBlitz3.ab3@17671>    CMP.l fp0addr,a4
0002EDEA <AmiBlitz3.ab3@17672>    BNE 'nofastload
0002EDF0 <AmiBlitz3.ab3@17673>    MOVE.l fp0iff,d1
0002EDF6 <AmiBlitz3.ab3@17674>    CMP.l firstiff,d1
0002EDFA <AmiBlitz3.ab3@17675>    BNE 'nofastload
0002EE00 <AmiBlitz3.ab3@17676>    MOVE.w varmode,d1
0002EE06 <AmiBlitz3.ab3@17677>    CMP.w fp0mode,d1
0002EE0A <AmiBlitz3.ab3@17678>    BNE 'nofastload
0002EE10 <AmiBlitz3.ab3@17679>    CMP.w fp0var,d3
0002EE14 <AmiBlitz3.ab3@17680>    BNE 'nofastload
0002EE18 <AmiBlitz3.ab3@17681>    BCLR #16,d2
0002EE1A <AmiBlitz3.ab3@17682>    MOVE.l (a7)+,d0
0002EE1C <AmiBlitz3.ab3@17683> RTS
0002EE1E <AmiBlitz3.ab3@17686>    MOVEQ #0,d0
0002EE24 <AmiBlitz3.ab3@17687>    MOVE.w regnum,d0
0002EE2A <AmiBlitz3.ab3@17688>    CMP.l maxregs,d0
0002EE2E <AmiBlitz3.ab3@17689>    BLE 'ok
0002EE34 <AmiBlitz3.ab3@17690>    LEA cmplxerr,a0
0002EE36 <AmiBlitz3.ab3@17691>   MOVE.l a0,-(a7)
0002EE3C <AmiBlitz3.ab3@17692> JMP handle_compileerror
0002EE42 <AmiBlitz3.ab3@17695>    LEA regtable,a4
0002EE44 <AmiBlitz3.ab3@17696>    TST.l (a4)
0002EE48 <AmiBlitz3.ab3@17697>    BEQ 'noreg
0002EE4C <AmiBlitz3.ab3@17698>    CMP.w 0+4(a4),d3
0002EE50 <AmiBlitz3.ab3@17699>    BNE 'doreg1
0002EE56 <AmiBlitz3.ab3@17700>    MOVE.l #$f2001c00,d1
0002EE5C <AmiBlitz3.ab3@17701>    MOVE.w regnum,d0
0002EE5E <AmiBlitz3.ab3@17702>    ASL.w #7,d0
0002EE60 <AmiBlitz3.ab3@17703>    OR.w d0,d1
0002EE64 <AmiBlitz3.ab3@17704>    BSR writelong
0002EE66 <AmiBlitz3.ab3@17705>    MOVE.l (a7)+,d0
0002EE68 <AmiBlitz3.ab3@17706> RTS
0002EE6C <AmiBlitz3.ab3@17709>   CMP.w 8+4(a4),d3
0002EE70 <AmiBlitz3.ab3@17710>    BNE 'doreg2
0002EE76 <AmiBlitz3.ab3@17711>    MOVE.l #$f2001800,d1
0002EE7C <AmiBlitz3.ab3@17712>    MOVE.w regnum,d0
0002EE7E <AmiBlitz3.ab3@17713>    ASL.w #7,d0
0002EE80 <AmiBlitz3.ab3@17714>    OR.w d0,d1
0002EE84 <AmiBlitz3.ab3@17715>    BSR writelong
0002EE86 <AmiBlitz3.ab3@17716>    MOVE.l (a7)+,d0
0002EE88 <AmiBlitz3.ab3@17717> RTS
0002EE8C <AmiBlitz3.ab3@17720>   CMP.w 16+4(a4),d3
0002EE90 <AmiBlitz3.ab3@17721>    BNE 'doreg3
0002EE96 <AmiBlitz3.ab3@17722>    MOVE.l #$f2001400,d1
0002EE9C <AmiBlitz3.ab3@17723>    MOVE.w regnum,d0
0002EE9E <AmiBlitz3.ab3@17724>    ASL.w #7,d0
0002EEA0 <AmiBlitz3.ab3@17725>    OR.w d0,d1
0002EEA4 <AmiBlitz3.ab3@17726>    BSR  writelong
0002EEA6 <AmiBlitz3.ab3@17727>    MOVE.l (a7)+,d0
0002EEA8 <AmiBlitz3.ab3@17728> RTS
0002EEAC <AmiBlitz3.ab3@17731>   CMP.w 24+4(a4),d3
0002EEB0 <AmiBlitz3.ab3@17732>    BNE 'doreg4
0002EEB6 <AmiBlitz3.ab3@17733>    MOVE.l #$f2001000,d1
0002EEBC <AmiBlitz3.ab3@17734>    MOVE.w regnum,d0
0002EEBE <AmiBlitz3.ab3@17735>    ASL.w #7,d0
0002EEC0 <AmiBlitz3.ab3@17736>    OR.w d0,d1
0002EEC4 <AmiBlitz3.ab3@17737>    BSR writelong
0002EEC6 <AmiBlitz3.ab3@17738>    MOVE.l (a7)+,d0
0002EEC8 <AmiBlitz3.ab3@17739> RTS
0002EECC <AmiBlitz3.ab3@17742>    CMP.w 32+4(a4),d3
0002EED0 <AmiBlitz3.ab3@17743>    BNE 'noreg
0002EED6 <AmiBlitz3.ab3@17744>    MOVE.l #$f2000c00,d1
0002EEDC <AmiBlitz3.ab3@17745>    MOVE.w regnum,d0
0002EEDE <AmiBlitz3.ab3@17746>    ASL.w #7,d0
0002EEE0 <AmiBlitz3.ab3@17747>    OR.w d0,d1
0002EEE4 <AmiBlitz3.ab3@17748>    BSR writelong
0002EEE6 <AmiBlitz3.ab3@17749>    MOVE.l (a7)+,d0
0002EEE8 <AmiBlitz3.ab3@17750> RTS
0002EEEE <AmiBlitz3.ab3@17753>    MOVE.l #$f22d4400,d1                                    ;var
0002EEF4 <AmiBlitz3.ab3@17754>    TST.w varmode
0002EEF8 <AmiBlitz3.ab3@17755>   BEQ 'glob
0002EEFC <AmiBlitz3.ab3@17756>   BCLR #16,d1                                              ;local
0002EEFE <AmiBlitz3.ab3@17759>    MOVEQ #0,d0
0002EF04 <AmiBlitz3.ab3@17760>    MOVE.w regnum,d0
0002EF08 <AmiBlitz3.ab3@17761>    CMP.w #7,d0
0002EF0C <AmiBlitz3.ab3@17762>    BLE 'ok2
0002EF12 <AmiBlitz3.ab3@17763>    LEA cmplxerr,a0
0002EF14 <AmiBlitz3.ab3@17764>   MOVE.l a0,-(a7)
0002EF1A <AmiBlitz3.ab3@17765> JMP handle_compileerror
0002EF1C <AmiBlitz3.ab3@17768>      ASL.w #7,d0
0002EF1E <AmiBlitz3.ab3@17769>    OR.l d0,d1
0002EF26 <AmiBlitz3.ab3@17770>    CMP.l #doublecheck,8(a2)
0002EF2A <AmiBlitz3.ab3@17771>    BNE 'dbl
0002EF30 <AmiBlitz3.ab3@17772>    OR.l #$00001000,d1
0002EF34 <AmiBlitz3.ab3@17775>   BSR writelong
0002EF36 <AmiBlitz3.ab3@17776>    MOVE.l (a7)+,d0
0002EF3A <AmiBlitz3.ab3@17777>    AND.w #$ff,d2
0002EF3C <AmiBlitz3.ab3@17778>    MOVE.w d3,d1
0002EF40 <AmiBlitz3.ab3@17779>    BEQ 'nooffs
0002EF44 <AmiBlitz3.ab3@17780> BRA writeword
0002EF46 <AmiBlitz3.ab3@17785> RTS
0002EF4C <AmiBlitz3.ab3@17788>   MOVE.w regnum,D1
0002EF52 <AmiBlitz3.ab3@17789>   MOVE.w d1,load_var_reg
0002EF54 <AmiBlitz3.ab3@17790>   LSL.w #8,D1
0002EF5E <AmiBlitz3.ab3@17791>   MOVE.l destpointer,load_var_addr
0002EF64 <AmiBlitz3.ab3@17792>   MOVE.w d2,load_var_size
0002EF66 <AmiBlitz3.ab3@17793>   LSL.w #1,D1
0002EF6A <AmiBlitz3.ab3@17794>   BTST #$E,D2
0002EF6E <AmiBlitz3.ab3@17795>    BNE.w JL_0_B17A
0002EF70 <AmiBlitz3.ab3@17796>   TST.b D2
0002EF74 <AmiBlitz3.ab3@17797>    BNE.w JL_0_B17E
0002EF76 <AmiBlitz3.ab3@17798>   MOVEQ.l #$03,D2
0002EF7A <AmiBlitz3.ab3@17799>   ORI.w #$200A,D1
0002EF7E <AmiBlitz3.ab3@17800> BRA.w writeword
0002EF82 <AmiBlitz3.ab3@17803>   MOVE.b #$3,D2
0002EF86 <AmiBlitz3.ab3@17806>   BTST #$F,D2
0002EF8A <AmiBlitz3.ab3@17807>    BEQ.w JL_0_B19A                                         ;loadarray
0002EF90 <AmiBlitz3.ab3@17808>    TST.b fast                                              ;lea->move xx(a2)
0002EF94 <AmiBlitz3.ab3@17809>    BEQ 'la10
0002EF9A <AmiBlitz3.ab3@17814>    CLR.l load_var_addr
0002EF9E <AmiBlitz3.ab3@17815> BRA 'la10
0002EFA6 <AmiBlitz3.ab3@17817>    CMP.w #$2012,movea2dn                                  ;??Looks like dead code??
0002EFAA <AmiBlitz3.ab3@17818>    BNE 'la10
0002EFB0 <AmiBlitz3.ab3@17819>    TST.b optiarray
0002EFB4 <AmiBlitz3.ab3@17820>    BNE 'la10
0002EFBA <AmiBlitz3.ab3@17821>    MOVE.l destpointer,a4
0002EFC0 <AmiBlitz3.ab3@17822>    SUB.l loada,a4
0002EFC4 <AmiBlitz3.ab3@17823>    CMP.w #4,a4
0002EFC8 <AmiBlitz3.ab3@17824>    BEQ 'la100
0002EFCC <AmiBlitz3.ab3@17825>    CMP.w #2,a4
0002EFD0 <AmiBlitz3.ab3@17826>    BNE 'la10
0002EFD6 <AmiBlitz3.ab3@17827>    MOVE.l destpointer,a4
0002EFDA <AmiBlitz3.ab3@17828>    CMP.b #3,d2
0002EFDE <AmiBlitz3.ab3@17829>    BCS 'la110
0002EFE4 <AmiBlitz3.ab3@17830>    MOVE.w #$202a,-2(a4)
0002EFE8 <AmiBlitz3.ab3@17831>    OR.w d1,-2(a4)
0002EFEE <AmiBlitz3.ab3@17832>    MOVE.w arrayoffset,d1
0002EFF2 <AmiBlitz3.ab3@17833>    BSR writeword
0002EFF6 <AmiBlitz3.ab3@17834> BRA JL_0_B194
0002EFFA <AmiBlitz3.ab3@17837>    CMP.b #2,d2
0002EFFE <AmiBlitz3.ab3@17838>    BNE 'la120
0002F004 <AmiBlitz3.ab3@17839>     MOVE.w #$302a,-2(a4)
0002F008 <AmiBlitz3.ab3@17840>    OR.w d1,-2(a4)
0002F00E <AmiBlitz3.ab3@17842>    MOVE.w arrayoffset,d1
0002F012 <AmiBlitz3.ab3@17843>    BSR writeword
0002F016 <AmiBlitz3.ab3@17844> BRA JL_0_B194
0002F01A <AmiBlitz3.ab3@17847>   CMP.b #1,d2
0002F01E <AmiBlitz3.ab3@17848>    BNE.s 'la10
0002F024 <AmiBlitz3.ab3@17849>     MOVE.w #$102a,-2(a4)
0002F028 <AmiBlitz3.ab3@17850>    OR.w d1,-2(a4)
0002F02E <AmiBlitz3.ab3@17851>    MOVE.w arrayoffset,d1
0002F032 <AmiBlitz3.ab3@17852>    BSR writeword
0002F036 <AmiBlitz3.ab3@17853> BRA JL_0_B194
0002F03C <AmiBlitz3.ab3@17856>   MOVE.l destpointer,a4
0002F042 <AmiBlitz3.ab3@17857>    CMP.w #$45ea,-2(a4)
0002F046 <AmiBlitz3.ab3@17858>    BNE 'la10
0002F04A <AmiBlitz3.ab3@17859>    CMP.b #3,d2
0002F04E <AmiBlitz3.ab3@17860>    BCS 'la11
0002F054 <AmiBlitz3.ab3@17861>    MOVE.w #$202a,-4(a4)
0002F058 <AmiBlitz3.ab3@17862>    OR.w d1,-4(a4)
0002F05C <AmiBlitz3.ab3@17863> BRA JL_0_B194
0002F060 <AmiBlitz3.ab3@17866>    CMP.b #2,d2
0002F064 <AmiBlitz3.ab3@17867>    BNE 'la12
0002F06A <AmiBlitz3.ab3@17868>     MOVE.w #$302a,-4(a4)
0002F06E <AmiBlitz3.ab3@17869>    OR.w d1,-4(a4)
0002F072 <AmiBlitz3.ab3@17870> BRA JL_0_B194
0002F076 <AmiBlitz3.ab3@17873>   CMP.b #1,d2
0002F07A <AmiBlitz3.ab3@17874>    BNE.s 'la10
0002F080 <AmiBlitz3.ab3@17875>     MOVE.w #$102a,-4(a4)
0002F084 <AmiBlitz3.ab3@17876>    OR.w d1,-4(a4)
0002F088 <AmiBlitz3.ab3@17877> BRA JL_0_B194
0002F08E <AmiBlitz3.ab3@17880>    OR.w movea2dn,D1
0002F092 <AmiBlitz3.ab3@17881>    BSR.w JL_0_B1B2
0002F096 <AmiBlitz3.ab3@17882>    BSR.w writeword
0002F09A <AmiBlitz3.ab3@17885>   ANDI.w #$FF,D2
0002F09C <AmiBlitz3.ab3@17886> RTS
0002F0A2 <AmiBlitz3.ab3@17890>    MOVE.l destpointer,a4
0002F0AA <AmiBlitz3.ab3@17891>    MOVE.l #$f22a4400,-4(a4)
0002F0B0 <AmiBlitz3.ab3@17892>    MOVE.w arrayoffset,d1
0002F0B4 <AmiBlitz3.ab3@17893> BRA writeword
0002F0BA <AmiBlitz3.ab3@17897>   OR.w moved3a5dn,D1                                        ;write move.l 0(a5),reg
0002F0BE <AmiBlitz3.ab3@17898>    BSR.w JL_0_B1B2
0002F0C2 <AmiBlitz3.ab3@17899>    BSR.w pokewda5s
0002F0C4 <AmiBlitz3.ab3@17900>   MOVE.w D3,D1
0002F0C8 <AmiBlitz3.ab3@17901>    BSR.w writeword
0002F0CC <AmiBlitz3.ab3@17902> BRA.w JL_0_B194
0002F0D0 <AmiBlitz3.ab3@17905>   BTST #$E,D2
0002F0D4 <AmiBlitz3.ab3@17906>    BNE.w JL_0_B1CA
0002F0D8 <AmiBlitz3.ab3@17907>   CMP.b #$1,D2
0002F0DC <AmiBlitz3.ab3@17908>    BEQ.w JL_0_B1CC
0002F0E0 <AmiBlitz3.ab3@17909>   CMP.b #$2,D2
0002F0E4 <AmiBlitz3.ab3@17910>    BEQ.w JL_0_B1D2
0002F0E6 <AmiBlitz3.ab3@17913> RTS
0002F0EA <AmiBlitz3.ab3@17916>   EORI.w #$3000,D1
0002F0EC <AmiBlitz3.ab3@17917> RTS
0002F0F0 <AmiBlitz3.ab3@17920>   ORI.w #$1000,D1
0002F0F2 <AmiBlitz3.ab3@17921> RTS
0002F0FA <AmiBlitz3.ab3@17925>   MOVE.w #$FFFF,dfetch
0002F0FE <AmiBlitz3.ab3@17926>   BSR.w get1bytemain
0002F102 <AmiBlitz3.ab3@17927>   CMP.w #$2D,D0
0002F106 <AmiBlitz3.ab3@17928>    BNE.w JL_0_B206
0002F10A <AmiBlitz3.ab3@17929>   BSR.w get1bytemain
0002F10E <AmiBlitz3.ab3@17930>   BSR.w JL_0_B206
0002F112 <AmiBlitz3.ab3@17931>   CMP.w #$5,D2
0002F116 <AmiBlitz3.ab3@17932>    BCC.w JL_0_B200
0002F118 <AmiBlitz3.ab3@17933>   NEG.l D0
0002F11A <AmiBlitz3.ab3@17934> RTS
0002F120 <AmiBlitz3.ab3@17937>   TST.b fpu
0002F124 <AmiBlitz3.ab3@17938>   BEQ 'noneg
0002F128 <AmiBlitz3.ab3@17939>   fneg.x fp0
0002F12A <AmiBlitz3.ab3@17940> RTS
0002F12E <AmiBlitz3.ab3@17943>   BCHG #$7,D0
0002F130 <AmiBlitz3.ab3@17944> RTS
0002F134 <AmiBlitz3.ab3@17947>   CMP.w #$24,D0
0002F138 <AmiBlitz3.ab3@17948>    BEQ.w get_hexconstant
0002F13C <AmiBlitz3.ab3@17949>   CMP.w #$25,D0
0002F140 <AmiBlitz3.ab3@17950>    BEQ.w JL_0_A8C0
0002F144 <AmiBlitz3.ab3@17951>   CMP.w #$2E,D0
0002F148 <AmiBlitz3.ab3@17952>    BNE.w JL_0_B224
0002F14A <AmiBlitz3.ab3@17955>   MOVEQ.l #$00,D3
0002F14E <AmiBlitz3.ab3@17956> BRA.w JL_0_B272
0002F150 <AmiBlitz3.ab3@17959>   MOVEQ.l #$00,D3                                          ;number
0002F154 <AmiBlitz3.ab3@17960>    BSR.w atoi
0002F158 <AmiBlitz3.ab3@17961>   CMP.w #$2E,D0
0002F15C <AmiBlitz3.ab3@17962>    BEQ.w JL_0_B268
0002F160 <AmiBlitz3.ab3@17963>   ORI.w #$20,D0
0002F164 <AmiBlitz3.ab3@17964>   CMP.w #$65,D0
0002F168 <AmiBlitz3.ab3@17965>    BNE.w JL_0_B46E
0002F16E <AmiBlitz3.ab3@17966>   CMP.l #$800000,D3
0002F172 <AmiBlitz3.ab3@17967>    BCC.w overerr
0002F174 <AmiBlitz3.ab3@17968>   MOVEQ.l #-$01,D6
0002F178 <AmiBlitz3.ab3@17969>   fmove.l d3,fp0
0002F17A <AmiBlitz3.ab3@17970>   MOVE.l D3,D0
0002F180 <AmiBlitz3.ab3@17971>   MOVEA.l _mathffpbase,A6
0002F184 <AmiBlitz3.ab3@17972>    JSR -$24(A6)
0002F186 <AmiBlitz3.ab3@17973>   MOVE.l D0,D3
0002F18A <AmiBlitz3.ab3@17974>    BSR.w JL_0_B2E6
0002F18E <AmiBlitz3.ab3@17975>    BSR.w reget
0002F192 <AmiBlitz3.ab3@17976>    BSR.w JL_0_B480
0002F196 <AmiBlitz3.ab3@17977> BRA.w JL_0_B3DC
0002F19A <AmiBlitz3.ab3@17980>   CMP.b #4,d2
0002F19E <AmiBlitz3.ab3@17981>   BEQ 'l4
0002F1A2 <AmiBlitz3.ab3@17982>   MOVE.b #5,d2                                             ;nprint 2/0.5 bugfix
0002F1A8 <AmiBlitz3.ab3@17985>    TST.b fpu
0002F1AC <AmiBlitz3.ab3@17986>    BNE 'l1
0002F1B2 <AmiBlitz3.ab3@17987>    CMP.l #$800000,D3
0002F1B6 <AmiBlitz3.ab3@17988>    BCC.w overerr
0002F1BA <AmiBlitz3.ab3@17989> BRA JL_0_B272
0002F1C0 <AmiBlitz3.ab3@17992>   CMP.l #$7fffffff,d3
0002F1C4 <AmiBlitz3.ab3@17993>     BCC.w overerr
0002F1C6 <AmiBlitz3.ab3@17996>   MOVEQ.l #-$01,D6
0002F1C8 <AmiBlitz3.ab3@17997>   MOVE.l D3,D0
0002F1CC <AmiBlitz3.ab3@17998>   fmove.l d3,fp0
0002F1D2 <AmiBlitz3.ab3@17999>   MOVEA.l _mathffpbase,A6
0002F1D6 <AmiBlitz3.ab3@18000>    JSR -$24(A6)                                            ;integer to ffp
0002F1D8 <AmiBlitz3.ab3@18001>   MOVE.l D0,-(A7)
0002F1DC <AmiBlitz3.ab3@18002>    BSR.w get1bytemain
0002F1E0 <AmiBlitz3.ab3@18003>    BSR.w tstnum
0002F1E4 <AmiBlitz3.ab3@18004>    BNE.w syntaxerr
0002F1E6 <AmiBlitz3.ab3@18005>   MOVEQ.l #$00,D3
0002F1EA <AmiBlitz3.ab3@18006>    BSR.w atoi
0002F1EC <AmiBlitz3.ab3@18007>   TST.l D3
0002F1F0 <AmiBlitz3.ab3@18008>    BEQ.w JL_0_B2E0
0002F1F6 <AmiBlitz3.ab3@18009>   TST.b fpu
0002F1FA <AmiBlitz3.ab3@18010>   BNE 'l1
0002F200 <AmiBlitz3.ab3@18011>   CMP.l #$800000,D3
0002F204 <AmiBlitz3.ab3@18012>    BCC.w overerr
0002F208 <AmiBlitz3.ab3@18013> BRA 'l2
0002F20E <AmiBlitz3.ab3@18016>   CMP.l #$7fffffff,d3
0002F212 <AmiBlitz3.ab3@18017>   BCC overerr
0002F216 <AmiBlitz3.ab3@18020>   fmove.l d5,fp1
0002F218 <AmiBlitz3.ab3@18021>   MOVE.l D5,D0
0002F21C <AmiBlitz3.ab3@18022>    JSR -$24(A6)
0002F21E <AmiBlitz3.ab3@18023>   MOVE.l D0,D5
0002F222 <AmiBlitz3.ab3@18024>   fmove.l d3,fp2
0002F224 <AmiBlitz3.ab3@18025>   MOVE.l D3,D0
0002F228 <AmiBlitz3.ab3@18026>    JSR -$24(A6)
0002F22C <AmiBlitz3.ab3@18027>   fdiv.x fp1,fp2
0002F22E <AmiBlitz3.ab3@18028>   MOVE.l D5,D1
0002F232 <AmiBlitz3.ab3@18029>    JSR -$54(A6)
0002F236 <AmiBlitz3.ab3@18030>   fadd.x fp2,fp0
0002F238 <AmiBlitz3.ab3@18031>   MOVE.l (A7)+,D1
0002F23C <AmiBlitz3.ab3@18032>    JSR -$42(A6)
0002F23E <AmiBlitz3.ab3@18033>   MOVE.l D0,D3
0002F242 <AmiBlitz3.ab3@18034>    BSR.w reget
0002F246 <AmiBlitz3.ab3@18035>   ORI.w #$20,D0
0002F24A <AmiBlitz3.ab3@18036>   CMP.w #$65,D0
0002F24E <AmiBlitz3.ab3@18037>    BNE.w JL_0_B2D4
0002F252 <AmiBlitz3.ab3@18038>    BSR.w JL_0_B2E6
0002F256 <AmiBlitz3.ab3@18041>    BSR.w reget
0002F25A <AmiBlitz3.ab3@18042>    BSR.w JL_0_B480
0002F25E <AmiBlitz3.ab3@18043> BRA.w JL_0_B3DC
0002F260 <AmiBlitz3.ab3@18046>   MOVE.l (A7)+,D3
0002F264 <AmiBlitz3.ab3@18047> BRA.w JL_0_B2D4
0002F268 <AmiBlitz3.ab3@18050>   BSR.w get1bytemain
0002F26C <AmiBlitz3.ab3@18051>   CMP.w #$2B,D0
0002F270 <AmiBlitz3.ab3@18052>    BEQ.w JL_0_B30E
0002F274 <AmiBlitz3.ab3@18053>   CMP.w #$2D,D0
0002F278 <AmiBlitz3.ab3@18054>    BNE.w JL_0_B312
0002F27C <AmiBlitz3.ab3@18055>    BSR.w get1bytemain
0002F280 <AmiBlitz3.ab3@18056>    BSR.w getsign
0002F282 <AmiBlitz3.ab3@18057>   MOVE.l D3,D0
0002F286 <AmiBlitz3.ab3@18058>   fdiv.x fp1,fp0
0002F288 <AmiBlitz3.ab3@18059>   MOVE.l D4,D1
0002F28C <AmiBlitz3.ab3@18060>    JSR -$54(A6)
0002F28E <AmiBlitz3.ab3@18061>   MOVE.l D0,D3
0002F290 <AmiBlitz3.ab3@18062> RTS
0002F294 <AmiBlitz3.ab3@18065>   BSR.w get1bytemain
0002F298 <AmiBlitz3.ab3@18068>   BSR.w getsign
0002F29C <AmiBlitz3.ab3@18069>   fmul.x fp1,fp0
0002F29E <AmiBlitz3.ab3@18070>   MOVE.l D3,D0
0002F2A0 <AmiBlitz3.ab3@18071>   MOVE.l D4,D1
0002F2A4 <AmiBlitz3.ab3@18072>    JSR -$4E(A6)
0002F2A6 <AmiBlitz3.ab3@18073>   MOVE.l D0,D3
0002F2A8 <AmiBlitz3.ab3@18074> RTS
0002F2AC <AmiBlitz3.ab3@18077>   BSR.w tstnum
0002F2B0 <AmiBlitz3.ab3@18078>    BNE.w syntaxerr
0002F2B2 <AmiBlitz3.ab3@18079>   MOVE.w D0,D4
0002F2B6 <AmiBlitz3.ab3@18080>   SUBI.w #$30,D4
0002F2BA <AmiBlitz3.ab3@18081>    BSR.w get1bytemain
0002F2BE <AmiBlitz3.ab3@18082>    BSR.w tstnum
0002F2C2 <AmiBlitz3.ab3@18083>    BNE.w getsign__skip
0002F2C6 <AmiBlitz3.ab3@18084>   MULU #$A,D4
0002F2CA <AmiBlitz3.ab3@18085>   SUBI.w #$30,D0
0002F2CC <AmiBlitz3.ab3@18086>   ADD.w D0,D4
0002F2D0 <AmiBlitz3.ab3@18087>    BSR.w get1bytemain
0002F2D4 <AmiBlitz3.ab3@18090>   CMP.w #$12,D4
0002F2D8 <AmiBlitz3.ab3@18091>    BHI.w overerr
0002F2DA <AmiBlitz3.ab3@18092>   LSL.w #3,D4
0002F2E0 <AmiBlitz3.ab3@18093>   LEA fputab,a0
0002F2E2 <AmiBlitz3.ab3@18094>   ADD.l d4,a0
0002F2E8 <AmiBlitz3.ab3@18095>   fmove.d 0(a0),fp1
0002F2EA <AmiBlitz3.ab3@18096>   LSR.w #1,d4
0002F2EE <AmiBlitz3.ab3@18097>   MOVE.l facts(PC,D4.W),D4
0002F2F0 <AmiBlitz3.ab3@18098> RTS
0002F338 <AmiBlitz3.ab3@18102>   Dc.d 1,10,100,1000,10000,100000,1000000,10000000,100000000  ;,1000000000,10000000000
0002F33C <AmiBlitz3.ab3@18107>   Dc.l $80000041
0002F340 <AmiBlitz3.ab3@18108>   Dc.l $A0000044
0002F344 <AmiBlitz3.ab3@18109>   Dc.l $C8000047
0002F348 <AmiBlitz3.ab3@18110>   Dc.l $FA00004A
0002F34C <AmiBlitz3.ab3@18111>   Dc.l $9C40004E
0002F350 <AmiBlitz3.ab3@18112>   Dc.l $C3500051
0002F354 <AmiBlitz3.ab3@18113>   Dc.l $F4240054
0002F358 <AmiBlitz3.ab3@18114>   Dc.l $98968058
0002F35C <AmiBlitz3.ab3@18115>   Dc.l $BEBC205B
0002F360 <AmiBlitz3.ab3@18116>   Dc.l $EE6B285E
0002F364 <AmiBlitz3.ab3@18117>   Dc.l $9502F962
0002F368 <AmiBlitz3.ab3@18118>   Dc.l $BA43B765
0002F36C <AmiBlitz3.ab3@18119>   Dc.l $E8D4A568
0002F370 <AmiBlitz3.ab3@18120>   Dc.l $9184E76C
0002F374 <AmiBlitz3.ab3@18121>   Dc.l $B5E6A96F
0002F378 <AmiBlitz3.ab3@18122>   Dc.l $E35F2972
0002F37C <AmiBlitz3.ab3@18123>   Dc.l $8E1BCA76
0002F380 <AmiBlitz3.ab3@18124>   Dc.l $B1A2BD79
0002F384 <AmiBlitz3.ab3@18125>   Dc.l $DE0B6C7C
0002F386 <AmiBlitz3.ab3@18129>   MOVEQ.l #$01,D5
0002F388 <AmiBlitz3.ab3@18132>   LSL.l #1,D5
0002F38A <AmiBlitz3.ab3@18133>   MOVE.l D5,D1
0002F38C <AmiBlitz3.ab3@18134>   LSL.l #2,D5
0002F38E <AmiBlitz3.ab3@18135>   ADD.l D1,D5                                              ;divisor for frac convert!
0002F390 <AmiBlitz3.ab3@18136>   LSL.l #1,D3
0002F394 <AmiBlitz3.ab3@18137>    BCS.w overerr
0002F396 <AmiBlitz3.ab3@18138>   MOVE.l D3,D1
0002F398 <AmiBlitz3.ab3@18139>   LSL.l #1,D3
0002F39C <AmiBlitz3.ab3@18140>    BCS.w overerr
0002F39E <AmiBlitz3.ab3@18141>   LSL.l #1,D3
0002F3A2 <AmiBlitz3.ab3@18142>    BCS.w overerr
0002F3A4 <AmiBlitz3.ab3@18143>   ADD.l D1,D3
0002F3A8 <AmiBlitz3.ab3@18144>   SUBI.w #$30,D0
0002F3AA <AmiBlitz3.ab3@18145>   ADD.l D0,D3
0002F3D6 <AmiBlitz3.ab3@18146>    !fget                                                   ;bsr.w get1bytemain
0002F3DA <AmiBlitz3.ab3@18147>    CMP.b #1,d0
0002F3DE <AmiBlitz3.ab3@18148>    BNE 'cm1
0002F3E0 <AmiBlitz3.ab3@18149>    SUBQ.l #1,a5
0002F3E4 <AmiBlitz3.ab3@18150>    BSR get1bytemain                                        ;??wy not !fget
0002F3E8 <AmiBlitz3.ab3@18153>   CMP.b #$7e,d0
0002F3EC <AmiBlitz3.ab3@18154>    BNE 'cm2
0002F3EE <AmiBlitz3.ab3@18155>    SUBQ.l #1,a5
0002F3F2 <AmiBlitz3.ab3@18156>    BSR get1bytemain
0002F3F4 <AmiBlitz3.ab3@18159>   TST.b d0
0002F3F8 <AmiBlitz3.ab3@18160>    BPL 'l10
0002F3FA <AmiBlitz3.ab3@18161>    LSL.w #8,d0
0002F3FC <AmiBlitz3.ab3@18162>    MOVE.b (a5)+,d0
0002F402 <AmiBlitz3.ab3@18163>    MOVE.w d0,lastchar
0002F414 <AmiBlitz3.ab3@18166>   !compare2                                                ;bsr.w tstnum ;cmake bug
0002F418 <AmiBlitz3.ab3@18167>    BEQ.w atoi__loop
0002F41A <AmiBlitz3.ab3@18168> RTS
0002F41C <AmiBlitz3.ab3@18171> dfetch:  Ds.w 1                                            ;fetching data?
0002F420 <AmiBlitz3.ab3@18175>   MOVE.w dfetch(PC),D1
0002F424 <AmiBlitz3.ab3@18176>    BEQ.w JL_0_B3EC
0002F42A <AmiBlitz3.ab3@18177>   CLR.w dfetch
0002F42C <AmiBlitz3.ab3@18178> RTS
0002F432 <AmiBlitz3.ab3@18181>   MOVE.b d2,isconstantvalue
0002F438 <AmiBlitz3.ab3@18182>   MOVE.l d0,lastconstantvalue
0002F43E <AmiBlitz3.ab3@18183>   MOVE.w d2,imm_size
0002F448 <AmiBlitz3.ab3@18184>   MOVE.w regnum,imm_reg
0002F452 <AmiBlitz3.ab3@18185>   MOVE.l destpointer,imm_addr                           ; long
0002F456 <AmiBlitz3.ab3@18186>   CMP.w #$3,D2
0002F45A <AmiBlitz3.ab3@18187>   BEQ.w JL_0_B434
0002F45E <AmiBlitz3.ab3@18188>   CMP.w #$5,D2                                          ;float
0002F462 <AmiBlitz3.ab3@18189>   BEQ.w JL_0_B434
0002F466 <AmiBlitz3.ab3@18190>   CMP.w #$1,D2
0002F46A <AmiBlitz3.ab3@18191>   BEQ.w JL_0_B418
0002F46E <AmiBlitz3.ab3@18192>   CMP.w #$2,D2
0002F472 <AmiBlitz3.ab3@18193>   BEQ.w JL_0_B418
0002F476 <AmiBlitz3.ab3@18194>   CMP.w #$4,D2
0002F47A <AmiBlitz3.ab3@18195>   BEQ.w JL_0_B434
0002F47E <AmiBlitz3.ab3@18197> BRA.w mismatcherr
0002F484 <AmiBlitz3.ab3@18200>   MOVE.w regnum,D1
0002F486 <AmiBlitz3.ab3@18201>   LSL.w #8,D1
0002F488 <AmiBlitz3.ab3@18202>   LSL.w #1,D1
0002F48C <AmiBlitz3.ab3@18203>   ORI.w #$303C,D1
0002F490 <AmiBlitz3.ab3@18204>    BSR.w writeword
0002F492 <AmiBlitz3.ab3@18205>   MOVE.w D0,D1
0002F496 <AmiBlitz3.ab3@18206>    BSR.w writeword
0002F49A <AmiBlitz3.ab3@18207> BRA.w reget
0002F49C <AmiBlitz3.ab3@18210>   MOVEQ #0,d1
0002F4A2 <AmiBlitz3.ab3@18211>   MOVE.w regnum,D1
0002F4A8 <AmiBlitz3.ab3@18212>   TST.b fpu
0002F4AC <AmiBlitz3.ab3@18213>   BEQ 'f1
0002F4B0 <AmiBlitz3.ab3@18214>   CMP.w #5,d2
0002F4B4 <AmiBlitz3.ab3@18215>   BEQ 'l10
0002F4B8 <AmiBlitz3.ab3@18216> BRA 'f2
0002F4BE <AmiBlitz3.ab3@18219>   TST.b iee
0002F4C2 <AmiBlitz3.ab3@18220>   BNE 'l10
0002F4C4 <AmiBlitz3.ab3@18223>   LSL.w #8,D1
0002F4C6 <AmiBlitz3.ab3@18224>   LSL.w #1,D1
0002F4CA <AmiBlitz3.ab3@18225>   ORI.w #$203C,D1
0002F4CE <AmiBlitz3.ab3@18226>    BSR.w writeword
0002F4D0 <AmiBlitz3.ab3@18227>   MOVE.l D0,D1
0002F4D4 <AmiBlitz3.ab3@18228>    BSR.w writelong
0002F4D8 <AmiBlitz3.ab3@18229> BRA.w reget
0002F4DA <AmiBlitz3.ab3@18232>   MOVEQ #5,d2
0002F4DC <AmiBlitz3.ab3@18233>   ASL.l #7,d1
0002F4DE <AmiBlitz3.ab3@18234>   SUBQ.l #8,a7
0002F4E4 <AmiBlitz3.ab3@18239>       OR.l #$f23c4400,d1                                   ;fmove.s
0002F4EA <AmiBlitz3.ab3@18240>        fmove.s fp0,0(a7)
0002F4EE <AmiBlitz3.ab3@18242>   BSR writelong
0002F4F0 <AmiBlitz3.ab3@18243>   MOVE.l (a7)+,d1
0002F4F4 <AmiBlitz3.ab3@18244>   BSR writelong
0002F4F6 <AmiBlitz3.ab3@18245>   MOVE.l (a7)+,d1
0002F4FA <AmiBlitz3.ab3@18249> BRA.w reget
0002F4FC <AmiBlitz3.ab3@18255>  MOVE.l D3,D0
0002F4FE <AmiBlitz3.ab3@18256>   TST.w D6
0002F502 <AmiBlitz3.ab3@18257>    BEQ.w JL_0_B46C
0002F508 <AmiBlitz3.ab3@18258>   MOVEA.l _mathffpbase,A6
0002F50C <AmiBlitz3.ab3@18259>    JSR -$1E(A6)
0002F510 <AmiBlitz3.ab3@18260>    BVC.w JL_0_B46C
0002F512 <AmiBlitz3.ab3@18261>   ADDQ.w #4,A7
0002F516 <AmiBlitz3.ab3@18262> BRA.w JL_0_B5A0
0002F518 <AmiBlitz3.ab3@18265> RTS
0002F51A <AmiBlitz3.ab3@18269>   MOVEQ.l #$00,D6
0002F51E <AmiBlitz3.ab3@18270>    fmove.l d3,fp0
0002F522 <AmiBlitz3.ab3@18273>   BSR.w JL_0_B480
0002F526 <AmiBlitz3.ab3@18274> BRA.w JL_0_B3DC
0002F528 <AmiBlitz3.ab3@18277>   MOVE.w D2,-(A7)
0002F52C <AmiBlitz3.ab3@18278>    BSR.w JL_0_BF6A
0002F52E <AmiBlitz3.ab3@18279>   MOVE.w (A7)+,D2
0002F530 <AmiBlitz3.ab3@18282>   TST.w D2
0002F534 <AmiBlitz3.ab3@18283>    BNE.w JL_0_B498
0002F536 <AmiBlitz3.ab3@18284>   TST.w D6
0002F53A <AmiBlitz3.ab3@18285>    BEQ.w JL_0_B492
0002F53C <AmiBlitz3.ab3@18286>   MOVEQ.l #$04,D2
0002F540 <AmiBlitz3.ab3@18287> BRA.w JL_0_B510
0002F542 <AmiBlitz3.ab3@18290>   MOVEQ.l #$02,D2
0002F546 <AmiBlitz3.ab3@18291> BRA.w JL_0_B4C4
0002F54A <AmiBlitz3.ab3@18294>   CMP.w #$1,D2
0002F54E <AmiBlitz3.ab3@18295>    BEQ.w JL_0_B4C4
0002F552 <AmiBlitz3.ab3@18296>   CMP.w #$2,D2
0002F556 <AmiBlitz3.ab3@18297>    BEQ.w JL_0_B4F8
0002F55A <AmiBlitz3.ab3@18298>   CMP.w #$3,D2
0002F55E <AmiBlitz3.ab3@18299>    BEQ.w JL_0_B57A
0002F562 <AmiBlitz3.ab3@18300>   CMP.w #$4,D2
0002F566 <AmiBlitz3.ab3@18301>    BEQ.w JL_0_B506
0002F56A <AmiBlitz3.ab3@18302>   CMP.w #$5,D2
0002F56E <AmiBlitz3.ab3@18303>    BEQ.w JL_0_B586
0002F572 <AmiBlitz3.ab3@18304> BRA.w mismatcherr
0002F576 <AmiBlitz3.ab3@18307>   BSR.w JL_0_B450                                          ;bugfix if a.b=$90 bug fix
0002F57C <AmiBlitz3.ab3@18308>   CMP.l #$7f,D0
0002F580 <AmiBlitz3.ab3@18309>    BGT.w JL_0_B4DC
0002F586 <AmiBlitz3.ab3@18310>   CMP.l #$FFFFFF80,D0
0002F58A <AmiBlitz3.ab3@18311>    BGE.w JL_0_B59E
0002F58C <AmiBlitz3.ab3@18314>   MOVEQ.l #$02,D2                                          ;was 2 before
0002F592 <AmiBlitz3.ab3@18315>   CMP.l #$7fff,D0
0002F596 <AmiBlitz3.ab3@18316>    BGT.w JL_0_B4F2
0002F59C <AmiBlitz3.ab3@18317>   CMP.l #$FFFF8000,D0
0002F5A0 <AmiBlitz3.ab3@18318>    BGE.w JL_0_B59E
0002F5A2 <AmiBlitz3.ab3@18321>   MOVEQ.l #$03,D2
0002F5A6 <AmiBlitz3.ab3@18322> BRA.w JL_0_B59E
0002F5A8 <AmiBlitz3.ab3@18348>   TST.w D6
0002F5AC <AmiBlitz3.ab3@18349>    BNE.w JL_0_B510
0002F5B0 <AmiBlitz3.ab3@18350>    BSR.w JL_0_B450
0002F5B4 <AmiBlitz3.ab3@18351> BRA.w JL_0_B4DC
0002F5B8 <AmiBlitz3.ab3@18354>   BSR.w JL_0_B450
0002F5BA <AmiBlitz3.ab3@18355>   TST.w D6
0002F5BE <AmiBlitz3.ab3@18356>   BEQ.w JL_0_B560
0002F5C4 <AmiBlitz3.ab3@18359>   CMP.l #MaxWordSgnd,D0
0002F5C8 <AmiBlitz3.ab3@18360>    BGT.w JL_0_B5A0
0002F5CE <AmiBlitz3.ab3@18361>   CMP.l #$FFFF8000,D0
0002F5D2 <AmiBlitz3.ab3@18362>    BLT.w JL_0_B5A0
0002F5D4 <AmiBlitz3.ab3@18363>   MOVE.w D0,-(A7)
0002F5D8 <AmiBlitz3.ab3@18364>    JSR -$24(A6)
0002F5DA <AmiBlitz3.ab3@18365>   MOVE.l D0,D1
0002F5DC <AmiBlitz3.ab3@18366>   MOVE.l D3,D0
0002F5E0 <AmiBlitz3.ab3@18367>    JSR -$48(A6)
0002F5E6 <AmiBlitz3.ab3@18368>   MOVE.l #$80000051,D1
0002F5EA <AmiBlitz3.ab3@18369>    JSR -$4E(A6)
0002F5EE <AmiBlitz3.ab3@18370>    JSR -$1E(A6)
0002F5F2 <AmiBlitz3.ab3@18371>    BEQ.w JL_0_B55A
0002F5F8 <AmiBlitz3.ab3@18372>   CMP.l #$10000,D0
0002F5FC <AmiBlitz3.ab3@18373>    BCC.w JL_0_B55A
0002F5FE <AmiBlitz3.ab3@18374>   MOVE.w D0,D1
0002F600 <AmiBlitz3.ab3@18375>   MOVE.w (A7)+,D0
0002F602 <AmiBlitz3.ab3@18376>   SWAP D0
0002F604 <AmiBlitz3.ab3@18377>   MOVE.w D1,D0
0002F608 <AmiBlitz3.ab3@18378> BRA.w JL_0_B59E
0002F60A <AmiBlitz3.ab3@18381>   ADDQ.w #2,A7
0002F60E <AmiBlitz3.ab3@18382> BRA.w JL_0_B5A0
0002F614 <AmiBlitz3.ab3@18385>   CMP.l #MaxWordSgnd,D0
0002F618 <AmiBlitz3.ab3@18386>    BGT.w JL_0_B4F2
0002F61E <AmiBlitz3.ab3@18387>   CMP.l #$FFFF8000,D0
0002F622 <AmiBlitz3.ab3@18388>    BLT.w JL_0_B4F2
0002F624 <AmiBlitz3.ab3@18389>   SWAP D0
0002F628 <AmiBlitz3.ab3@18390> BRA.w JL_0_B59E
0002F62A <AmiBlitz3.ab3@18393>   TST.w D6
0002F62E <AmiBlitz3.ab3@18394>   BNE.w JL_0_B5A0
0002F630 <AmiBlitz3.ab3@18395>   MOVE.l D3,D0
0002F634 <AmiBlitz3.ab3@18396> BRA.w JL_0_B59E
0002F636 <AmiBlitz3.ab3@18399>   TST.w D6
0002F63A <AmiBlitz3.ab3@18400>   BNE.w JL_0_B5A0
0002F63C <AmiBlitz3.ab3@18401>   MOVE.l D3,D0
0002F642 <AmiBlitz3.ab3@18402>   MOVEA.l _mathffpbase,A6
0002F646 <AmiBlitz3.ab3@18403>   JSR -$24(A6)
0002F648 <AmiBlitz3.ab3@18404>   MOVE.l D0,D3
0002F64C <AmiBlitz3.ab3@18405> BRA.w JL_0_B5A0
0002F64E <AmiBlitz3.ab3@18408> RTS
0002F650 <AmiBlitz3.ab3@18411>   MOVEQ.l #$05,D2
0002F652 <AmiBlitz3.ab3@18412>   MOVE.l D3,D0
0002F654 <AmiBlitz3.ab3@18413> RTS
0002F658 <AmiBlitz3.ab3@18417>             Ds.l 1                                         ;??Looks like unused data??
0002F65C <AmiBlitz3.ab3@18418> pushpc:     Ds.l 1
0002F660 <AmiBlitz3.ab3@18419> pushoff:    Ds.l 1
0002F664 <AmiBlitz3.ab3@18420> pushdooff:  Ds.l 1
0002F666 <AmiBlitz3.ab3@18421> pushclen:   Ds.w 1
0002F66A <AmiBlitz3.ab3@18422> pushat:     Ds.l 1
0002F674 <AmiBlitz3.ab3@18426>   MOVE.l destpointer,pushpc
0002F67E <AmiBlitz3.ab3@18427>   MOVE.l hunkoffsetbase,pushoff
0002F680 <AmiBlitz3.ab3@18428> RTS
0002F684 <AmiBlitz3.ab3@18432>   MOVEM.l D0-D1/A0-A1,-(A7)
0002F68A <AmiBlitz3.ab3@18433>   MOVE.l destpointer,D0
0002F68E <AmiBlitz3.ab3@18434>   MOVE.l pushpc(PC),D1
0002F694 <AmiBlitz3.ab3@18435>   MOVE.l D1,destpointer
0002F696 <AmiBlitz3.ab3@18436>   SUB.l D1,D0
0002F69C <AmiBlitz3.ab3@18437>   MOVE.w D0,pushclen
0002F6A0 <AmiBlitz3.ab3@18438>    BEQ.w JL_0_B636
0002F6A6 <AmiBlitz3.ab3@18439>   MOVE.w dontwrite,D1
0002F6AA <AmiBlitz3.ab3@18440>    BNE.w JL_0_B636
0002F6B2 <AmiBlitz3.ab3@18441>    CMP.w #1000,pushclen
0002F6B6 <AmiBlitz3.ab3@18442>    BGE conmemerr
0002F6BC <AmiBlitz3.ab3@18443>    MOVE.l pushat,d0
0002F6C0 <AmiBlitz3.ab3@18444>    BNE 'nomem
0002F6C6 <AmiBlitz3.ab3@18445>    MOVE.l #1024,d0
0002F6C8 <AmiBlitz3.ab3@18446>   MOVEQ.l #$01,D1
0002F6CE <AmiBlitz3.ab3@18447>   MOVEA.l _execbase,A6
0002F6D4 <AmiBlitz3.ab3@18448>   MOVE.l mempool,a0
0002F6D8 <AmiBlitz3.ab3@18449>   JSR _AllocPooled(a6)
0002F6DE <AmiBlitz3.ab3@18451>   MOVE.l D0,pushat
0002F6E0 <AmiBlitz3.ab3@18454>   MOVEA.l D0,A0
0002F6E6 <AmiBlitz3.ab3@18455>   MOVEA.l pushpc,A1
0002F6EC <AmiBlitz3.ab3@18456>   MOVE.l A1,destpointer
0002F6F2 <AmiBlitz3.ab3@18457>   MOVE.w pushclen,D0
0002F6F4 <AmiBlitz3.ab3@18458>   LSR.w #1,D0
0002F6F6 <AmiBlitz3.ab3@18459>   SUBQ.w #1,D0
0002F6F8 <AmiBlitz3.ab3@18462>     MOVE.w (A1)+,(A0)+
0002F6FC <AmiBlitz3.ab3@18463>   DBF D0,JL_0_B626
0002F706 <AmiBlitz3.ab3@18465>    MOVE.l hunkoffsetbase,pushdooff
0002F70A <AmiBlitz3.ab3@18468>   MOVEM.l (A7)+,D0-D1/A0-A1
0002F70C <AmiBlitz3.ab3@18469> RTS
0002F710 <AmiBlitz3.ab3@18473>   MOVEM.l D0-D1/A0-A1,-(A7)
0002F712 <AmiBlitz3.ab3@18474>   MOVEQ.l #$00,D0
0002F718 <AmiBlitz3.ab3@18475>   MOVE.w pushclen,D0
0002F71C <AmiBlitz3.ab3@18476>    BEQ.w JL_0_B6D8
0002F722 <AmiBlitz3.ab3@18477>   MOVE.l destpointer,D1
0002F728 <AmiBlitz3.ab3@18478>   ADD.l D0,destpointer
0002F72E <AmiBlitz3.ab3@18479>   TST.w dontwrite
0002F732 <AmiBlitz3.ab3@18480>    BNE.w JL_0_B6D8
0002F734 <AmiBlitz3.ab3@18481>   LSR.w #1,D0
0002F736 <AmiBlitz3.ab3@18482>   SUBQ.w #1,D0
0002F738 <AmiBlitz3.ab3@18483>   MOVEA.l D1,A1
0002F73E <AmiBlitz3.ab3@18484>   MOVEA.l pushat,A0
0002F744 <AmiBlitz3.ab3@18487>     CMPA.l destbufferend,A1
0002F748 <AmiBlitz3.ab3@18488>     BCS.w JL_0_B684
0002F750 <AmiBlitz3.ab3@18490>     MOVE.w #$FFFF,dontwrite
0002F754 <AmiBlitz3.ab3@18491>   BRA.w JL_0_B6D8
0002F756 <AmiBlitz3.ab3@18494>      MOVE.w (A0)+,(A1)+                                    ;copylibcode
0002F75A <AmiBlitz3.ab3@18495>   DBF D0,JL_0_B66E
0002F760 <AmiBlitz3.ab3@18497>   SUB.l pushpc,D1
0002F764 <AmiBlitz3.ab3@18498>   BEQ.w JL_0_B6C2
0002F76A <AmiBlitz3.ab3@18499>   MOVEA.l pushdooff,A0
0002F770 <AmiBlitz3.ab3@18502>   CMPA.l pushoff,A0
0002F774 <AmiBlitz3.ab3@18503>   BEQ.w JL_0_B6C2
0002F778 <AmiBlitz3.ab3@18504>   MOVEA.l $4(A0),A1
0002F77E <AmiBlitz3.ab3@18505>   ADDA.l destbufferstart,A1
0002F784 <AmiBlitz3.ab3@18506>   CMPA.l destbufferend,A1
0002F788 <AmiBlitz3.ab3@18507>   BCC.w JL_0_B6BC
0002F78C <AmiBlitz3.ab3@18508>   ADD.l D1,$4(A0)
0002F78E <AmiBlitz3.ab3@18511>   MOVEA.l (A0),A0
0002F792 <AmiBlitz3.ab3@18512> BRA.w JL_0_B69A
0002F798 <AmiBlitz3.ab3@18515>   MOVEA.l pushat,A1
0002F79A <AmiBlitz3.ab3@18516>   MOVEQ.l #$00,D0
0002F7A0 <AmiBlitz3.ab3@18517>   MOVE.w pushclen,D0
0002F7A6 <AmiBlitz3.ab3@18518>   MOVEA.l _execbase,A6
0002F7AC <AmiBlitz3.ab3@18519>   MOVE.l mempool,a0
0002F7B0 <AmiBlitz3.ab3@18523>   MOVEM.l (A7)+,D0-D1/A0-A1
0002F7B2 <AmiBlitz3.ab3@18524> RTS
0002F7B4 <AmiBlitz3.ab3@18527>   MOVE.l D1,-(A7)                                          ;array mul
0002F7B6 <AmiBlitz3.ab3@18528>   MOVEQ.l #$00,D2
0002F7B8 <AmiBlitz3.ab3@18529>   MOVEQ.l #$0F,D3
0002F7BA <AmiBlitz3.ab3@18532>     LSL.w #1,D1
0002F7BE <AmiBlitz3.ab3@18533>     BCC.w JL_0_B6EE
0002F7C0 <AmiBlitz3.ab3@18534>     ADDQ.w #1,D2
0002F7C2 <AmiBlitz3.ab3@18535>     MOVE.w D3,D4
0002F7C6 <AmiBlitz3.ab3@18538>   DBF D3,JL_0_B6E4
0002F7C8 <AmiBlitz3.ab3@18540>   SUBQ.w #1,D2
0002F7CC <AmiBlitz3.ab3@18541>    BNE.w JL_0_B726
0002F7CE <AmiBlitz3.ab3@18542>   ADDQ.w #4,A7
0002F7D0 <AmiBlitz3.ab3@18543>   MOVE.w D4,D1
0002F7D4 <AmiBlitz3.ab3@18544>    BEQ.w JL_0_B724
0002F7D8 <AmiBlitz3.ab3@18545>   CMP.w #$8,D1
0002F7DC <AmiBlitz3.ab3@18546>    BCS.w JL_0_B712
0002F7E0 <AmiBlitz3.ab3@18547>   SUBI.w #$8,D1
0002F7E4 <AmiBlitz3.ab3@18548>    BSR.w JL_0_B712
0002F7E6 <AmiBlitz3.ab3@18549>   MOVEQ.l #$00,D1
0002F7E8 <AmiBlitz3.ab3@18552>   LSL.w #8,D1
0002F7EA <AmiBlitz3.ab3@18553>   LSL.w #1,D1
0002F7EE <AmiBlitz3.ab3@18554>   ORI.w #$E188,D1
0002F7F4 <AmiBlitz3.ab3@18555>   OR.w regnum,D1
0002F7F8 <AmiBlitz3.ab3@18556> BRA.w writeword
0002F7FA <AmiBlitz3.ab3@18559> RTS
0002F7FC <AmiBlitz3.ab3@18562>   MOVEQ #0,d1
0002F802 <AmiBlitz3.ab3@18563>   MOVE.w regnum,D1
0002F804 <AmiBlitz3.ab3@18564>   LSL.l #8,D1
0002F806 <AmiBlitz3.ab3@18566>   LSL.l #4,d1
0002F80C <AmiBlitz3.ab3@18568>   OR.l #$4c3c0000,d1
0002F812 <AmiBlitz3.ab3@18569>   OR.w regnum,d1
0002F816 <AmiBlitz3.ab3@18570>   BSR.w writelong
0002F818 <AmiBlitz3.ab3@18571>   MOVE.l (A7)+,D1
0002F81C <AmiBlitz3.ab3@18573> BRA writelong
0002F822 <AmiBlitz3.ab3@18576>   MOVE.l destpointer,-(A7)
0002F824 <AmiBlitz3.ab3@18577>   MOVEQ.l #-$01,D7
0002F828 <AmiBlitz3.ab3@18580>     BSR.w findhilib
0002F82C <AmiBlitz3.ab3@18581>      BEQ.w JL_0_B8A4
0002F830 <AmiBlitz3.ab3@18582>     TST.w $C(A2)
0002F834 <AmiBlitz3.ab3@18583>      BPL.w JL_0_B746
0002F838 <AmiBlitz3.ab3@18585>     MOVE.l $16(A2),D1
0002F83C <AmiBlitz3.ab3@18586>     BEQ.w JL_0_B746
0002F840 <AmiBlitz3.ab3@18588>     MOVE.w $4(A2),D1                                       ; check state in D1 and do some things
0002F844 <AmiBlitz3.ab3@18589>     CMP.w #-$2,D1
0002F848 <AmiBlitz3.ab3@18590>      BNE.w JL_0_B772
0002F84C <AmiBlitz3.ab3@18591>     BSR.w makevsize
0002F850 <AmiBlitz3.ab3@18592> BRA.w JL_0_B7FE
0002F854 <AmiBlitz3.ab3@18595>     CMP.w #-$5C4,D1
0002F858 <AmiBlitz3.ab3@18596>      BNE.w JL_0_B790
0002F85C <AmiBlitz3.ab3@18597>     MOVE.w #$7000,D1
0002F864 <AmiBlitz3.ab3@18598>     BTST #$7,autorun
0002F866 <AmiBlitz3.ab3@18599>     SNE D1
0002F86A <AmiBlitz3.ab3@18600>     BSR.w writeword
0002F86E <AmiBlitz3.ab3@18601> BRA.w JL_0_B7FE
0002F872 <AmiBlitz3.ab3@18604>     CMP.w #-$12D,D1
0002F876 <AmiBlitz3.ab3@18605>      BNE.w JL_0_B7A0
0002F87A <AmiBlitz3.ab3@18606>     BSR.w makessize
0002F87E <AmiBlitz3.ab3@18607> BRA.w JL_0_B7FE
0002F882 <AmiBlitz3.ab3@18610>     CMP.w #-$1F5,D1
0002F886 <AmiBlitz3.ab3@18611>      BNE.w JL_0_B7C2
0002F88A <AmiBlitz3.ab3@18612>     MOVE.w #$203C,D1
0002F88E <AmiBlitz3.ab3@18613>     BSR.w writeword
0002F892 <AmiBlitz3.ab3@18614>     BSR.w addoff
0002F898 <AmiBlitz3.ab3@18615>     MOVE.l endop,D1
0002F89C <AmiBlitz3.ab3@18616>     BSR.w writelong
0002F8A0 <AmiBlitz3.ab3@18617> BRA.w JL_0_B7FE
0002F8A4 <AmiBlitz3.ab3@18620>     CMP.w #-$3E9,D1
0002F8A8 <AmiBlitz3.ab3@18621>      BNE.w JL_0_B7E4
0002F8AC <AmiBlitz3.ab3@18622>     MOVE.w #$203C,D1
0002F8B0 <AmiBlitz3.ab3@18623>     BSR.w writeword
0002F8B4 <AmiBlitz3.ab3@18624>     BSR.w addoff
0002F8BA <AmiBlitz3.ab3@18625>     MOVE.l data2at,D1
0002F8BE <AmiBlitz3.ab3@18626>     BSR.w writelong
0002F8C2 <AmiBlitz3.ab3@18627> BRA.w JL_0_B7FE
0002F8C6 <AmiBlitz3.ab3@18630>     CMP.w #$1,D1
0002F8CA <AmiBlitz3.ab3@18631>      BNE.w JL_0_B7FE
0002F8CE <AmiBlitz3.ab3@18632>     MOVE.w #$203C,D1
0002F8D2 <AmiBlitz3.ab3@18633>     BSR.w writeword
0002F8D8 <AmiBlitz3.ab3@18634>     MOVE.l ptr_seg_debugger,D1
0002F8DC <AmiBlitz3.ab3@18635>     BSR.w writelong
0002F8E0 <AmiBlitz3.ab3@18638>     MOVE.l $16(A2),D1
0002F8E8 <AmiBlitz3.ab3@18639>     MOVE.w #$FFFF,lasta6
0002F8EC <AmiBlitz3.ab3@18640>     BSR.w Amakelibsub
0002F8F2 <AmiBlitz3.ab3@18641>     CMPI.w #$FFFE,$4(A2)
0002F8F6 <AmiBlitz3.ab3@18642>      BNE.w JL_0_B83A
0002F8FC <AmiBlitz3.ab3@18643>     MOVE.l intdata1,D1
0002F900 <AmiBlitz3.ab3@18644>      BEQ.w JL_0_B83A
0002F906 <AmiBlitz3.ab3@18645>     MOVE.w putidata1,D1
0002F90A <AmiBlitz3.ab3@18646>     BSR.w writeword
0002F90E <AmiBlitz3.ab3@18647>     BSR.w addoff
0002F914 <AmiBlitz3.ab3@18648>     MOVE.l intdata1,D1
0002F918 <AmiBlitz3.ab3@18649>     BSR.w writelong
0002F91C <AmiBlitz3.ab3@18652>     MOVE.w #$2B40,D1
0002F920 <AmiBlitz3.ab3@18653>     TST.w $1A(A2)
0002F924 <AmiBlitz3.ab3@18654>      BEQ.w JL_0_B746
0002F928 <AmiBlitz3.ab3@18655>      BPL.w JL_0_B84E
0002F92C <AmiBlitz3.ab3@18656>     MOVE.w #$3B40,D1
0002F930 <AmiBlitz3.ab3@18659>     BSR.w writeword
0002F934 <AmiBlitz3.ab3@18660>     MOVE.w $A(A2),D1
0002F938 <AmiBlitz3.ab3@18661>      BSR.w writeword
0002F93E <AmiBlitz3.ab3@18662>     CMPI.w #$FFFA,$4(A2)
0002F942 <AmiBlitz3.ab3@18663>      BNE.w JL_0_B746
0002F944 <AmiBlitz3.ab3@18664>     MOVE.w D7,-(A7)
0002F94A <AmiBlitz3.ab3@18665>     MOVE.w numstatic,D4
0002F94E <AmiBlitz3.ab3@18666>      BEQ.w JL_0_B882
0002F954 <AmiBlitz3.ab3@18667>     MOVE.l staticdata,D3
0002F95A <AmiBlitz3.ab3@18668>      JSR datastart
0002F95E <AmiBlitz3.ab3@18669>     MOVE.w #$C500,D1
0002F962 <AmiBlitz3.ab3@18670>      BSR.w tokejsr2
0002F968 <AmiBlitz3.ab3@18673>     MOVE.w maxsused,D4
0002F96C <AmiBlitz3.ab3@18674>      BEQ.w JL_0_B89E
0002F972 <AmiBlitz3.ab3@18675>     MOVE.l maxsat,D3
0002F978 <AmiBlitz3.ab3@18676>      JSR datastart
0002F97C <AmiBlitz3.ab3@18677>     MOVE.w #$CF00,D1
0002F980 <AmiBlitz3.ab3@18678>      BSR.w tokejsr2
0002F982 <AmiBlitz3.ab3@18681>     MOVE.w (A7)+,D7
0002F986 <AmiBlitz3.ab3@18682> BRA.w JL_0_B746
0002F98C <AmiBlitz3.ab3@18685>   MOVE.l destpointer,D1
0002F98E <AmiBlitz3.ab3@18686>   CMP.l (A7),D1
0002F992 <AmiBlitz3.ab3@18687>    BNE.w JL_0_B8BC
0002F99A <AmiBlitz3.ab3@18688>   MOVE.w #$0008,noinits+2
0002F99E <AmiBlitz3.ab3@18689> BRA.w JL_0_B8E6
0002F9A4 <AmiBlitz3.ab3@18692>   CLR.w noinits+2
0002F9AA <AmiBlitz3.ab3@18693>   MOVE.w dontwrite,D1
0002F9AE <AmiBlitz3.ab3@18694>    BNE.w JL_0_B8DE
0002F9B4 <AmiBlitz3.ab3@18695>   TST.l newinitaddr
0002F9B8 <AmiBlitz3.ab3@18696>    BEQ 'l10
0002F9BE <AmiBlitz3.ab3@18697>   MOVE.l newinitaddr,D2
0002F9C4 <AmiBlitz3.ab3@18698>   SUB.l destbufferstart,D2
0002F9C6 <AmiBlitz3.ab3@18699>   ADDQ.l #2,d2
0002F9CC <AmiBlitz3.ab3@18700>   MOVEA.l newinitaddr,A0                                   ;write newinitcode
0002F9D0 <AmiBlitz3.ab3@18702>   MOVE.w #$4EB9,(A0)+
0002F9D2 <AmiBlitz3.ab3@18703>   MOVE.l (A7),(A0)+
0002F9D6 <AmiBlitz3.ab3@18705> BRA 'l20
0002F9DC <AmiBlitz3.ab3@18708>   MOVEA.l destbufferstart,A0                               ;write initcode
0002F9E2 <AmiBlitz3.ab3@18709>   TST.b saved0
0002F9E6 <AmiBlitz3.ab3@18710>   BEQ 'l1
0002F9EA <AmiBlitz3.ab3@18711>   MOVE.w #$23c0,(a0)+
0002F9EC <AmiBlitz3.ab3@18712>   MOVE.l a0,a1
0002F9EE <AmiBlitz3.ab3@18713>   ADDQ.l #6,a1
0002F9F0 <AmiBlitz3.ab3@18714>   MOVE.l a1,(a0)+
0002F9F2 <AmiBlitz3.ab3@18715>   MOVEQ.l #$02,D2
0002F9F6 <AmiBlitz3.ab3@18716>   BSR.w addhunkoffset
0002F9FA <AmiBlitz3.ab3@18717>   MOVE.w #$6004,(a0)+
0002FA00 <AmiBlitz3.ab3@18718>   MOVE.l #$4e714e71,(a0)+
0002FA04 <AmiBlitz3.ab3@18721>   MOVE.w #$4EB9,(A0)+
0002FA06 <AmiBlitz3.ab3@18722>   MOVE.l (A7),(A0)+
0002FA08 <AmiBlitz3.ab3@18723>   MOVEQ #2,d2
0002FA0E <AmiBlitz3.ab3@18724>   TST.b saved0
0002FA12 <AmiBlitz3.ab3@18725>   BEQ 'l20
0002FA14 <AmiBlitz3.ab3@18726>   MOVEQ.l #14,D2
0002FA18 <AmiBlitz3.ab3@18729>   BSR.w addhunkoffset
0002FA1C <AmiBlitz3.ab3@18730>   MOVE.w #$2039,(a0)+
0002FA1E <AmiBlitz3.ab3@18731>   MOVE.l a1,(a0)+
0002FA20 <AmiBlitz3.ab3@18732>   MOVEQ.l #20,d2
0002FA24 <AmiBlitz3.ab3@18735>   BSR.w addhunkoffset
0002FA28 <AmiBlitz3.ab3@18738>   MOVE.w #$4E75,D1
0002FA2C <AmiBlitz3.ab3@18739>   BSR.w writeword
0002FA2E <AmiBlitz3.ab3@18742>   ADDQ.w #4,A7
0002FA30 <AmiBlitz3.ab3@18743> RTS
0002FA34 <AmiBlitz3.ab3@18748>   Dc.b $22,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D1
0002FA3A <AmiBlitz3.ab3@18750>   Dc.b $23,$CD,$00,$00,$00,$00                             ;MOVE.L  A5,$00000000
0002FA40 <AmiBlitz3.ab3@18752>   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0002FA46 <AmiBlitz3.ab3@18757>   MOVE.l stringbuffer,D1
0002FA4A <AmiBlitz3.ab3@18758> BRA.w makesize
0002FA4C <AmiBlitz3.ab3@18761>   MOVEQ.l #$00,D1
0002FA52 <AmiBlitz3.ab3@18762>   MOVE.w globalvarpointer,D1
0002FA56 <AmiBlitz3.ab3@18763>   SUBI.w #$8000,D1
0002FA5A <AmiBlitz3.ab3@18764>   BNE.w makesize
0002FA5C <AmiBlitz3.ab3@18765>     MOVEQ.l #$08,D1
0002FA5E <AmiBlitz3.ab3@18768>   MOVE.l D1,-(A7)
0002FA62 <AmiBlitz3.ab3@18769>   MOVE.w #$203C,D1
0002FA66 <AmiBlitz3.ab3@18770>   BSR.w writeword
0002FA68 <AmiBlitz3.ab3@18771>   MOVE.l (A7)+,D1
0002FA6C <AmiBlitz3.ab3@18772> BRA.w writelong
0002FA6E <AmiBlitz3.ab3@18780>   MOVEQ.l #$00,D1
0002FA74 <AmiBlitz3.ab3@18781>   MOVEA.l libpointer,A1
0002FA78 <AmiBlitz3.ab3@18784>     CMPA.w #$0,A1
0002FA7C <AmiBlitz3.ab3@18785>     BEQ.w findhilib__done
0002FA80 <AmiBlitz3.ab3@18786>       CMP.w $4(A1),D7
0002FA84 <AmiBlitz3.ab3@18787>       BLS.w findhilib__next
0002FA88 <AmiBlitz3.ab3@18788>         CMP.w $4(A1),D1
0002FA8C <AmiBlitz3.ab3@18789>         BCC.w findhilib__next
0002FA90 <AmiBlitz3.ab3@18790>           MOVE.w $4(A1),D1
0002FA92 <AmiBlitz3.ab3@18791>           MOVEA.l A1,A2
0002FA94 <AmiBlitz3.ab3@18794>     MOVEA.l (A1),A1
0002FA98 <AmiBlitz3.ab3@18795> BRA.w findhilib__loop
0002FA9A <AmiBlitz3.ab3@18798>   MOVE.w D1,D7
0002FA9C <AmiBlitz3.ab3@18799> RTS
0002FA9E <AmiBlitz3.ab3@18807>   MOVEQ.l #-$01,D1
0002FAA4 <AmiBlitz3.ab3@18808>   MOVEA.l libpointer,A1
0002FAA8 <AmiBlitz3.ab3@18811>     CMPA.w #$0,A1
0002FAAC <AmiBlitz3.ab3@18812>      BEQ.w findlolib__done
0002FAB0 <AmiBlitz3.ab3@18813>     CMP.w $4(A1),D7
0002FAB4 <AmiBlitz3.ab3@18814>      BCC.w findlolib__next
0002FAB8 <AmiBlitz3.ab3@18815>     CMP.w $4(A1),D1
0002FABC <AmiBlitz3.ab3@18816>      BLS.w findlolib__next
0002FAC0 <AmiBlitz3.ab3@18817>     MOVE.w $4(A1),D1
0002FAC2 <AmiBlitz3.ab3@18818>     MOVEA.l A1,A2
0002FAC4 <AmiBlitz3.ab3@18821>     MOVEA.l (A1),A1
0002FAC8 <AmiBlitz3.ab3@18822> BRA.w findlolib__loop
0002FACA <AmiBlitz3.ab3@18825>   MOVE.w D1,D7
0002FACE <AmiBlitz3.ab3@18826>   CMP.w #-$1,D1
0002FAD0 <AmiBlitz3.ab3@18827> RTS
0002FAD6 <AmiBlitz3.ab3@18831>   ADDQ.w #1,globalvarpointer
0002FADE <AmiBlitz3.ab3@18832>   BCLR #$0,globalvarpointer+1
0002FAE0 <AmiBlitz3.ab3@18833>   MOVEQ.l #$00,D7
0002FAE4 <AmiBlitz3.ab3@18836>     BSR.w findlolib
0002FAE8 <AmiBlitz3.ab3@18837>     BEQ.w JL_0_BA74
0002FAEC <AmiBlitz3.ab3@18838>     TST.w $C(A2)
0002FAF0 <AmiBlitz3.ab3@18839>     BPL.w JL_0_B99A
0002FAF2 <AmiBlitz3.ab3@18840>     MOVEA.l A2,A1
0002FAF6 <AmiBlitz3.ab3@18841>     ADDA.l $12(A1),A1
0002FAFA <AmiBlitz3.ab3@18842>     TST.w -$2(A1)
0002FAFE <AmiBlitz3.ab3@18843>     BEQ.w JL_0_BA34
0002FB02 <AmiBlitz3.ab3@18844>     MOVE.l -$A(A1),D1
0002FB06 <AmiBlitz3.ab3@18845>     LEA $6(A2,D1.L),A3
0002FB08 <AmiBlitz3.ab3@18848>       TST.w (A3)+
0002FB0C <AmiBlitz3.ab3@18849>       BEQ.w JL_0_B9CC
0002FB0E <AmiBlitz3.ab3@18850>         ADDQ.w #2,A3
0002FB12 <AmiBlitz3.ab3@18851> BRA.w JL_0_B9C0
0002FB16 <AmiBlitz3.ab3@18854>     TST.l $4(A3)
0002FB1A <AmiBlitz3.ab3@18855>     BEQ.w JL_0_BA34
0002FB1E <AmiBlitz3.ab3@18856>       MOVE.w freemax(PC),D1
0002FB22 <AmiBlitz3.ab3@18857>       BSR.w writeword
0002FB26 <AmiBlitz3.ab3@18858>       MOVE.w -$4(A1),D1
0002FB2A <AmiBlitz3.ab3@18859>       BSR.w writeword
0002FB30 <AmiBlitz3.ab3@18860>       MOVE.l free,D1
0002FB34 <AmiBlitz3.ab3@18861>       MOVE.w -$6(A1),D1
0002FB38 <AmiBlitz3.ab3@18862>       BSR.w writelong
0002FB3E <AmiBlitz3.ab3@18863>       MOVE.l destpointer,-(A7)
0002FB40 <AmiBlitz3.ab3@18864>       MOVEQ.l #$01,D1
0002FB44 <AmiBlitz3.ab3@18865>       MOVE.w -$2(A1),D2
0002FB46 <AmiBlitz3.ab3@18866>       LSL.w D2,D1
0002FB48 <AmiBlitz3.ab3@18867>       MOVE.w D1,-(A7)
0002FB4C <AmiBlitz3.ab3@18868>       MOVE.l -$A(A1),D1
0002FB50 <AmiBlitz3.ab3@18869>       BSR.w Amakelibsub
0002FB54 <AmiBlitz3.ab3@18870>       MOVE.w freemax3(PC),D1
0002FB58 <AmiBlitz3.ab3@18871>       BSR.w writeword
0002FB5A <AmiBlitz3.ab3@18872>       MOVE.w (A7)+,D1
0002FB5E <AmiBlitz3.ab3@18873>       BSR.w writeword
0002FB62 <AmiBlitz3.ab3@18874>       MOVE.l freemax2(PC),D1
0002FB66 <AmiBlitz3.ab3@18875>       BSR.w writelong
0002FB68 <AmiBlitz3.ab3@18876>       MOVE.l (A7)+,D1
0002FB6E <AmiBlitz3.ab3@18877>       SUB.l destpointer,D1
0002FB72 <AmiBlitz3.ab3@18878>       BSR.w writeword
0002FB76 <AmiBlitz3.ab3@18879>       MOVE.w freemax4(PC),D1
0002FB7A <AmiBlitz3.ab3@18880>       BSR.w writeword
0002FB7E <AmiBlitz3.ab3@18883>     MOVE.l $1C(A2),D1
0002FB82 <AmiBlitz3.ab3@18884>     BEQ.w JL_0_B99A
0002FB86 <AmiBlitz3.ab3@18886>     MOVE.w $4(A2),D1
0002FB8A <AmiBlitz3.ab3@18887>     CMP.w #-$2,D1
0002FB8E <AmiBlitz3.ab3@18888>     BNE.w JL_0_BA50
0002FB92 <AmiBlitz3.ab3@18889>       BSR.w makevsize
0002FB96 <AmiBlitz3.ab3@18890> BRA.w JL_0_BA60
0002FB9A <AmiBlitz3.ab3@18893>     CMP.w #-$12D,D1
0002FB9E <AmiBlitz3.ab3@18894>     BNE.w JL_0_BA60
0002FBA2 <AmiBlitz3.ab3@18895>       BSR.w makessize
0002FBA6 <AmiBlitz3.ab3@18896> BRA.w JL_0_BA60
0002FBAA <AmiBlitz3.ab3@18899>     MOVE.l $1C(A2),D1
0002FBB2 <AmiBlitz3.ab3@18900>     MOVE.w #$FFFF,lasta6
0002FBB6 <AmiBlitz3.ab3@18901>     BSR.w Amakelibsub
0002FBBA <AmiBlitz3.ab3@18902> BRA.w JL_0_B99A
0002FBBC <AmiBlitz3.ab3@18905> RTS
0002FBC0 <AmiBlitz3.ab3@18909> freemax:   Dc.b $3F,$3C,$00,$00                            ;MOVE.W  #$0000,-(A7)
0002FBC2 <AmiBlitz3.ab3@18911> freemax2:  Dc.b $53,$57                                    ;SUBQ.W  #1,(A7)
0002FBC6 <AmiBlitz3.ab3@18912>            Dc.b $66,$00,$FF,$FC                            ;BNE.W freemax2
0002FBC8 <AmiBlitz3.ab3@18913> freemax4:  Dc.b $54,$4F                                    ;ADDQ.W  #2,A7
0002FBCC <AmiBlitz3.ab3@18914> freemax3:  Dc.b $47,$EB,$00,$00                            ;LEA $0000(A3),A3
0002FBD2 <AmiBlitz3.ab3@18919>   TST.b debugmode
0002FBD6 <AmiBlitz3.ab3@18920>    BEQ.b chkstak__skip
0002FBDC <AmiBlitz3.ab3@18921>   TST.w debugversion
0002FBE0 <AmiBlitz3.ab3@18922>    BNE.b chkstak__skip
0002FBE4 <AmiBlitz3.ab3@18923>   MOVE.w #$C308,D1
0002FBE8 <AmiBlitz3.ab3@18924> BRA.w Atokejsr
0002FBEA <AmiBlitz3.ab3@18927> RTS
0002FBF2 <AmiBlitz3.ab3@18931>   MOVE.w #$FFFF,lasta6
0002FBF6 <AmiBlitz3.ab3@18936>   MOVEM.l D0-d7/A0-a6,-(A7)
0002FBFE <AmiBlitz3.ab3@18937>   MOVE.b #1,nostringopt
0002FC04 <AmiBlitz3.ab3@18938>   JSR searchinstr
0002FC06 <AmiBlitz3.ab3@18939>   MOVE.l A3,D1
0002FC08 <AmiBlitz3.ab3@18940>   SUB.l A2,D1
0002FC0C <AmiBlitz3.ab3@18941>   BSR.w Amakelibsub
0002FC10 <AmiBlitz3.ab3@18942>   MOVEM.l (A7)+,d0-d7/a0-a6
0002FC12 <AmiBlitz3.ab3@18943> RTS
0002FC18 <AmiBlitz3.ab3@18950>   MOVE.l libisat,-(A7)                                   ;library write
0002FC1E <AmiBlitz3.ab3@18951>   MOVE.l A2,libisat
0002FC20 <AmiBlitz3.ab3@18953>   MOVEA.l A1,A2
0002FC22 <AmiBlitz3.ab3@18954>   MOVE.w (A2)+,D1
0002FC28 <AmiBlitz3.ab3@18955>   MOVE.l a2,lastinstructionaddr
0002FC2C <AmiBlitz3.ab3@18956>   ANDI.w #$FF,D1
0002FC2E <AmiBlitz3.ab3@18957>   ADDA.w D1,A2
0002FC30 <AmiBlitz3.ab3@18958>   EXG.l D0,A2
0002FC32 <AmiBlitz3.ab3@18959>   ADDQ.l #1,D0
0002FC36 <AmiBlitz3.ab3@18960>   BCLR #$0,D0
0002FC38 <AmiBlitz3.ab3@18961>   EXG.l D0,A2
0002FC3C <AmiBlitz3.ab3@18962> BRA.w JL_0_BB08
0002FC42 <AmiBlitz3.ab3@18966>   MOVE.l libisat,-(A7)
0002FC48 <AmiBlitz3.ab3@18967>   MOVE.l A2,libisat
0002FC4A <AmiBlitz3.ab3@18968>   MOVEA.l A3,A2
0002FC4E <AmiBlitz3.ab3@18969> BRA.w JL_0_BB08
0002FC50 <AmiBlitz3.ab3@18973>   MOVE.l a1,-(a7)
0002FC52 <AmiBlitz3.ab3@18976>   MOVE.l d0,a0
0002FC56 <AmiBlitz3.ab3@18977>   MOVE.l $a(a0),d0
0002FC58 <AmiBlitz3.ab3@18978>   MOVE.l d0,a1
0002FC60 <AmiBlitz3.ab3@18979>   CMP.l #8,4(a1)
0002FC64 <AmiBlitz3.ab3@18980>   BLE 'norec
0002FC66 <AmiBlitz3.ab3@18981>   MOVE.l a0,-(a7)
0002FC6C <AmiBlitz3.ab3@18982>   MOVE.l typebase,-(a7)
0002FC6E <AmiBlitz3.ab3@18983>   MOVEQ #0,d0
0002FC72 <AmiBlitz3.ab3@18984>   MOVE.w 4(a0),d0
0002FC78 <AmiBlitz3.ab3@18985>   ADD.l d0,typebase
0002FC7C <AmiBlitz3.ab3@18986>   MOVE.l $4(a1),d0
0002FC80 <AmiBlitz3.ab3@18987>   BSR scantype
0002FC86 <AmiBlitz3.ab3@18988>   MOVE.l (a7)+,typebase
0002FC88 <AmiBlitz3.ab3@18989>   MOVE.l (a7)+,a0
0002FC8E <AmiBlitz3.ab3@18992>   CMP.l #newtype_string,d0
0002FC92 <AmiBlitz3.ab3@18993>   BNE 'nostring
0002FC98 <AmiBlitz3.ab3@18994>   ADDQ #2,a2offset
0002FC9E <AmiBlitz3.ab3@18995>   MOVE.l #$3f3c0000,d1
0002FCA0 <AmiBlitz3.ab3@18996>   MOVEQ #0,d0
0002FCA4 <AmiBlitz3.ab3@18997>   MOVE.w 4(a0),d0
0002FCAA <AmiBlitz3.ab3@18998>   ADD.l typebase,d0
0002FCAC <AmiBlitz3.ab3@18999>   MOVE.w d0,d1
0002FCB0 <AmiBlitz3.ab3@19000>   BSR writelong
0002FCB6 <AmiBlitz3.ab3@19001>   TST.b debugmode
0002FCBA <AmiBlitz3.ab3@19002>   BEQ 'l1a
0002FCBC <AmiBlitz3.ab3@19003>   MOVE.l d1,-(a7)
0002FCC2 <AmiBlitz3.ab3@19004>   MOVE.l #$c308,d1
0002FCC8 <AmiBlitz3.ab3@19005>   JSR Atokejsr
0002FCCA <AmiBlitz3.ab3@19006>   MOVE.l (a7)+,d1
0002FCCE <AmiBlitz3.ab3@19009>   TST.w 8(a0)
0002FCD2 <AmiBlitz3.ab3@19010>   BEQ 'nostring
0002FCD6 <AmiBlitz3.ab3@19011>   MOVEM.l d2/d3,-(a7)
0002FCD8 <AmiBlitz3.ab3@19012>   MOVE.l d1,d2
0002FCDA <AmiBlitz3.ab3@19013>   MOVEQ #0,d3
0002FCDE <AmiBlitz3.ab3@19014>   MOVE.w 8(a0),d3
0002FCE0 <AmiBlitz3.ab3@19015>   SUBQ.l #1,d3
0002FCE4 <AmiBlitz3.ab3@19016>   BEQ 'nostring2
0002FCE6 <AmiBlitz3.ab3@19019>   ADDQ.l #4,d2
0002FCE8 <AmiBlitz3.ab3@19020>   MOVE.l d2,d1
0002FCEC <AmiBlitz3.ab3@19021>   BSR writelong
0002FCF2 <AmiBlitz3.ab3@19022>   TST.b debugmode
0002FCF6 <AmiBlitz3.ab3@19023>   BEQ 'l1
0002FCFC <AmiBlitz3.ab3@19024>   MOVE.l #$c308,d1
0002FD02 <AmiBlitz3.ab3@19025>   JSR Atokejsr
0002FD08 <AmiBlitz3.ab3@19028>   ADDQ #2,a2offset
0002FD0A <AmiBlitz3.ab3@19029>   SUBQ.l #1,d3
0002FD0E <AmiBlitz3.ab3@19030>   BNE 'loop
0002FD12 <AmiBlitz3.ab3@19033>   MOVEM.l (a7)+,d2/d3
0002FD14 <AmiBlitz3.ab3@19036>   MOVE.l (a0),d0
0002FD18 <AmiBlitz3.ab3@19037>   BNE 'more
0002FD1A <AmiBlitz3.ab3@19038>   MOVE.l (a7)+,a1
0002FD1C <AmiBlitz3.ab3@19039> RTS
0002FD20 <AmiBlitz3.ab3@19042> libisat:   Ds.l 1
0002FD26 <AmiBlitz3.ab3@19048>   MOVE.l libisat,-(A7)                                   
0002FD2C <AmiBlitz3.ab3@19049>   MOVE.l A2,libisat
0002FD30 <AmiBlitz3.ab3@19050>   LEA $6(A2,D1.L),A2
0002FD38 <AmiBlitz3.ab3@19054>   CMP.l #$3e19436c,$1c-8(a2)                               ;clear type
0002FD3C <AmiBlitz3.ab3@19055>   BEQ 'dowritevar
0002FD44 <AmiBlitz3.ab3@19056>   CMP.l #$3e18436f,$1c-8(a2)                               ;copy type
0002FD48 <AmiBlitz3.ab3@19057>   BEQ 'dowritevar
0002FD50 <AmiBlitz3.ab3@19058>   CMP.l #$3e175265,$1c(a2)
0002FD54 <AmiBlitz3.ab3@19059>   BEQ 'dowritevar
0002FD5C <AmiBlitz3.ab3@19060>   CMP.l #$3e165772,$1c(a2)
0002FD60 <AmiBlitz3.ab3@19061>   BNE 'nowritef
0002FD64 <AmiBlitz3.ab3@19064>   MOVEM.l a0-a2/d2,-(a7)
0002FD66 <AmiBlitz3.ab3@19065>   MOVEQ #0,d1
0002FD70 <AmiBlitz3.ab3@19066>   MOVE.l #0,typebase
0002FD74 <AmiBlitz3.ab3@19067>   MOVE.l $a(a3),a0
0002FD78 <AmiBlitz3.ab3@19068>   MOVE.l $4(a0),d0
0002FD7E <AmiBlitz3.ab3@19069>   CMP.l #8,d0
0002FD82 <AmiBlitz3.ab3@19070>   BLE 'notype
0002FD86 <AmiBlitz3.ab3@19071>   BSR scantype
0002FD8C <AmiBlitz3.ab3@19074>   MOVE.l #$3f3c0000,d1
0002FD92 <AmiBlitz3.ab3@19075>   MOVE.w a2offset,d1
0002FD96 <AmiBlitz3.ab3@19076>   BSR writelong
0002FD9C <AmiBlitz3.ab3@19077>   MOVE.l #$3f3c0000,d1
0002FDA0 <AmiBlitz3.ab3@19078>   MOVE.l $a(a3),a0
0002FDA4 <AmiBlitz3.ab3@19079>   MOVE.w 8(a0),d1
0002FDA8 <AmiBlitz3.ab3@19080>   BSR writelong
0002FDAE <AmiBlitz3.ab3@19081>   MOVE.l #$3f3cab12,d1
0002FDB2 <AmiBlitz3.ab3@19082>   BSR writelong
0002FDB8 <AmiBlitz3.ab3@19083>   ADDQ.w #6,a2offset
0002FDBC <AmiBlitz3.ab3@19084>   MOVEM.l (a7)+,a0-a2/d2
0002FDC2 <AmiBlitz3.ab3@19087>   TST.b fpu
0002FDC6 <AmiBlitz3.ab3@19088>   BEQ 'nofpu2
0002FDCE <AmiBlitz3.ab3@19089>   CMP.l #$496e7400,$1a(a2)
0002FDD2 <AmiBlitz3.ab3@19090>   BNE 'noint
0002FDD4 <AmiBlitz3.ab3@19091>   MOVEQ #0,d1
0002FDDA <AmiBlitz3.ab3@19092>   SUBQ.l #8,destpointer                                    ;fpu int
0002FDE0 <AmiBlitz3.ab3@19093>   CLR.w a2offset
0002FDE4 <AmiBlitz3.ab3@19094>   CMP.b #2,d2
0002FDE8 <AmiBlitz3.ab3@19095>   BGT 'noword
0002FDEC <AmiBlitz3.ab3@19096>   MOVE.w #$48c0,d1
0002FDF2 <AmiBlitz3.ab3@19097>   OR.w regnumstore,d1
0002FDF6 <AmiBlitz3.ab3@19098>   BSR writeword
0002FDFA <AmiBlitz3.ab3@19099> BRA 'exit2
0002FDFE <AmiBlitz3.ab3@19102>    CMP.b #3,d2
0002FE02 <AmiBlitz3.ab3@19103>         BNE 'nolong
0002FE06 <AmiBlitz3.ab3@19104> BRA 'exit2
0002FE0A <AmiBlitz3.ab3@19107>    CMP.b #4,d2
0002FE0E <AmiBlitz3.ab3@19108>         BNE 'noquick
0002FE12 <AmiBlitz3.ab3@19109>         MOVE.w #$e080,d1
0002FE18 <AmiBlitz3.ab3@19110>         OR.w regnumstore,d1
0002FE1C <AmiBlitz3.ab3@19111>         BSR writeword
0002FE20 <AmiBlitz3.ab3@19112>         MOVE.w #$e080,d1
0002FE26 <AmiBlitz3.ab3@19113>         OR.w regnumstore,d1
0002FE2A <AmiBlitz3.ab3@19114>         BSR writeword
0002FE2E <AmiBlitz3.ab3@19115> BRA 'exit2
0002FE30 <AmiBlitz3.ab3@19118>         MOVEQ #0,d0
0002FE32 <AmiBlitz3.ab3@19119>         MOVEQ #0,d1
0002FE38 <AmiBlitz3.ab3@19120>         MOVE.w regnumstore,d0
0002FE3A <AmiBlitz3.ab3@19121>         ASL.l #7,d0
0002FE40 <AmiBlitz3.ab3@19122>         OR.l #$f23c4428,d1                                 ;fsub.s 0.5,fpx
0002FE42 <AmiBlitz3.ab3@19123>         OR.l d0,d1
0002FE48 <AmiBlitz3.ab3@19125>         MOVE.l #$3f000000,d1
0002FE4A <AmiBlitz3.ab3@19127>         MOVEQ #0,d0
0002FE4C <AmiBlitz3.ab3@19128>         MOVEQ #0,d1
0002FE52 <AmiBlitz3.ab3@19129>         MOVE.w regnumstore,d0
0002FE54 <AmiBlitz3.ab3@19130>         ASL.l #7,d0
0002FE56 <AmiBlitz3.ab3@19131>         MOVE.l d0,d1
0002FE5C <AmiBlitz3.ab3@19132>         OR.l #$f2000003,d1                                 ;fintrz fpx
0002FE5E <AmiBlitz3.ab3@19133>         ASL.l #3,d0
0002FE60 <AmiBlitz3.ab3@19134>         OR.l d0,d1
0002FE64 <AmiBlitz3.ab3@19135>         BSR writelong
0002FE66 <AmiBlitz3.ab3@19136>         MOVEQ #0,d0
0002FE6C <AmiBlitz3.ab3@19137>         MOVE.w regnumstore,d0
0002FE6E <AmiBlitz3.ab3@19138>         ASL.l #7,d0
0002FE74 <AmiBlitz3.ab3@19139>         MOVE.l #$f2006000,d1                               ;fmove.l fp0,d0
0002FE76 <AmiBlitz3.ab3@19140>         OR.l d0,d1
0002FE78 <AmiBlitz3.ab3@19141>         ASL.l #1,d0
0002FE7A <AmiBlitz3.ab3@19142>         ASL.l #8,d0
0002FE7C <AmiBlitz3.ab3@19143>         OR.l d0,d1
0002FE80 <AmiBlitz3.ab3@19144> BRA 'exit
0002FE86 <AmiBlitz3.ab3@19147>   CMP.w #$3c01,24(a2)
0002FE8A <AmiBlitz3.ab3@19148>   BNE 'noval
0002FE8C <AmiBlitz3.ab3@19149>   MOVE.l a2,-(a7)
0002FE90 <AmiBlitz3.ab3@19150>   BSR.w JL_0_BB14
0002FE92 <AmiBlitz3.ab3@19151>   MOVE.l (a7)+,a2
0002FE96 <AmiBlitz3.ab3@19152> BRA 'exit2
0002FE9E <AmiBlitz3.ab3@19169>   CMP.l #$41627300,$1a(a2)
0002FEA2 <AmiBlitz3.ab3@19170>   BNE 'noabs
0002FEA4 <AmiBlitz3.ab3@19171>   MOVEQ #0,d1
0002FEAA <AmiBlitz3.ab3@19172>   MOVE.w regnumstore,d1
0002FEAC <AmiBlitz3.ab3@19173>   MOVE.w d1,d0
0002FEAE <AmiBlitz3.ab3@19174>   ASL.w #7,d1
0002FEB0 <AmiBlitz3.ab3@19175>   ASL.w #8,d0
0002FEB2 <AmiBlitz3.ab3@19176>   ASL.w #2,d0
0002FEB4 <AmiBlitz3.ab3@19177>   OR.w d0,d1
0002FEBA <AmiBlitz3.ab3@19178>   SUBQ.l #8,destpointer                                    ;fpu abs
0002FEBE <AmiBlitz3.ab3@19179>   MOVEM.l d3/d1,-(a7)
0002FEC2 <AmiBlitz3.ab3@19180>   MOVE.w #5,d3
0002FEC4 <AmiBlitz3.ab3@19181>   EXG d2,d3
0002FECA <AmiBlitz3.ab3@19182>   MOVE.w regnum,-(a7)
0002FED4 <AmiBlitz3.ab3@19183>   MOVE.w regnumstore,regnum
0002FED8 <AmiBlitz3.ab3@19184>   BSR writeconvertcode
0002FEDE <AmiBlitz3.ab3@19185>   MOVE.w (a7)+,regnum
0002FEE0 <AmiBlitz3.ab3@19186>   EXG d2,d3
0002FEE4 <AmiBlitz3.ab3@19187>   MOVEM.l (a7)+,d3/d1
0002FEEA <AmiBlitz3.ab3@19188>   OR.l #$f2000018,d1
0002FEF0 <AmiBlitz3.ab3@19189>   CLR.w a2offset
0002FEF4 <AmiBlitz3.ab3@19190> BRA 'exit
0002FEF8 <AmiBlitz3.ab3@19193>   CMP.b #5,d2
0002FEFC <AmiBlitz3.ab3@19194>   BNE 'nofpu2
0002FF00 <AmiBlitz3.ab3@19195>   MOVE.b 24(a2),d0
0002FF04 <AmiBlitz3.ab3@19196>   CMP.b #$60,d0                                            ;nolib $edxx
0002FF08 <AmiBlitz3.ab3@19197>   BNE 'nofpu
0002FF0A <AmiBlitz3.ab3@19198>   MOVEQ #0,d1
0002FF10 <AmiBlitz3.ab3@19199>   MOVE.w regnumstore,d1
0002FF12 <AmiBlitz3.ab3@19200>   MOVE.w d1,d0
0002FF14 <AmiBlitz3.ab3@19201>   ASL.w #7,d1
0002FF16 <AmiBlitz3.ab3@19202>   ASL.w #8,d0
0002FF18 <AmiBlitz3.ab3@19203>   ASL.w #2,d0
0002FF1A <AmiBlitz3.ab3@19204>   OR.w d0,d1
0002FF1E <AmiBlitz3.ab3@19205>   MOVE.b 25(a2),d0
0002FF22 <AmiBlitz3.ab3@19206>   CMP.b #5,d0
0002FF26 <AmiBlitz3.ab3@19207>   BNE 'nocos
0002FF2C <AmiBlitz3.ab3@19208>   OR.l #$f200001d,d1                                       ;fpu cos
0002FF30 <AmiBlitz3.ab3@19209> BRA 'exit
0002FF34 <AmiBlitz3.ab3@19212>   CMP.b #$c,d0
0002FF38 <AmiBlitz3.ab3@19213>   BNE 'nosqr
0002FF3E <AmiBlitz3.ab3@19214>   OR.l #$f2000004,d1                                       ;fpu sqr
0002FF42 <AmiBlitz3.ab3@19215> BRA 'exit
0002FF46 <AmiBlitz3.ab3@19218>   CMP.b #$d,d0
0002FF4A <AmiBlitz3.ab3@19219>   BNE 'notan
0002FF50 <AmiBlitz3.ab3@19220>   OR.l #$f200000f,d1                                       ;fpu tan
0002FF54 <AmiBlitz3.ab3@19221> BRA 'exit
0002FF58 <AmiBlitz3.ab3@19224>   CMP.b #$a,d0
0002FF5C <AmiBlitz3.ab3@19225>   BNE 'nosin
0002FF62 <AmiBlitz3.ab3@19226>   OR.l #$f200000e,d1                                       ;fpu sin
0002FF66 <AmiBlitz3.ab3@19227> BRA 'exit
0002FF6A <AmiBlitz3.ab3@19230>   CMP.b #$3,d0
0002FF6E <AmiBlitz3.ab3@19231>   BNE 'noasin
0002FF74 <AmiBlitz3.ab3@19232>   OR.l #$f200000c,d1                                       ;fpu asin
0002FF78 <AmiBlitz3.ab3@19233> BRA 'exit
0002FF7C <AmiBlitz3.ab3@19236>   CMP.b #$2,d0
0002FF80 <AmiBlitz3.ab3@19237>   BNE 'noacos
0002FF86 <AmiBlitz3.ab3@19238>   OR.l #$f200001c,d1                                       ;fpu acos
0002FF8A <AmiBlitz3.ab3@19239> BRA 'exit
0002FF8E <AmiBlitz3.ab3@19242>   CMP.b #$4,d0
0002FF92 <AmiBlitz3.ab3@19243>   BNE 'noatan
0002FF98 <AmiBlitz3.ab3@19244>   OR.l #$f200000a,d1                                       ;fpu atan
0002FF9C <AmiBlitz3.ab3@19245> BRA 'exit
0002FFA0 <AmiBlitz3.ab3@19248>   CMP.b #$e,d0
0002FFA4 <AmiBlitz3.ab3@19249>   BNE 'nohtan
0002FFAA <AmiBlitz3.ab3@19250>   OR.l #$f2000009,d1                                       ;fpu htan
0002FFAE <AmiBlitz3.ab3@19251> BRA 'exit
0002FFB2 <AmiBlitz3.ab3@19254>   CMP.b #$6,d0
0002FFB6 <AmiBlitz3.ab3@19255>   BNE 'nohcos
0002FFBC <AmiBlitz3.ab3@19256>   OR.l #$f2000019,d1                                       ;fpu hcos
0002FFC0 <AmiBlitz3.ab3@19257> BRA 'exit
0002FFC4 <AmiBlitz3.ab3@19260>   CMP.b #$b,d0
0002FFC8 <AmiBlitz3.ab3@19261>   BNE 'nohsin
0002FFCE <AmiBlitz3.ab3@19262>   OR.l #$f2000002,d1                                       ;fpu hsin
0002FFD2 <AmiBlitz3.ab3@19263> BRA 'exit
0002FFD6 <AmiBlitz3.ab3@19266>   CMP.b #$9,d0
0002FFDA <AmiBlitz3.ab3@19267>   BNE 'nolog
0002FFE0 <AmiBlitz3.ab3@19268>   OR.l #$f2000014,d1                                       ;fpu log
0002FFE4 <AmiBlitz3.ab3@19269> BRA 'exit
0002FFE8 <AmiBlitz3.ab3@19272>   CMP.b #$8,d0
0002FFEC <AmiBlitz3.ab3@19273>   BNE 'nolog10
0002FFF2 <AmiBlitz3.ab3@19274>   OR.l #$f2000015,d1                                       ;fpu log10
0002FFF6 <AmiBlitz3.ab3@19275> BRA 'exit
0002FFFA <AmiBlitz3.ab3@19278>   CMP.b #$7,d0
0002FFFE <AmiBlitz3.ab3@19279>   BNE 'noexp
00030004 <AmiBlitz3.ab3@19280>   OR.l #$f2000010,d1                                       ;fpu exp
00030008 <AmiBlitz3.ab3@19281> BRA 'exit
0003000E <AmiBlitz3.ab3@19284>   LEA fpuerr,a0
00030010 <AmiBlitz3.ab3@19285>   MOVE.l a0,-(a7)
00030016 <AmiBlitz3.ab3@19286> JMP handle_compileerror
0003001A <AmiBlitz3.ab3@19290>   CMP.b #$3c,d0
0003001E <AmiBlitz3.ab3@19291>   BNE 'nofpu2
00030020 <AmiBlitz3.ab3@19292>   MOVEQ #0,d1
00030026 <AmiBlitz3.ab3@19293>       MOVE.w regnumstore,d1
00030028 <AmiBlitz3.ab3@19294>       MOVE.w d1,d0
0003002A <AmiBlitz3.ab3@19295>       ASL.w #7,d1
0003002C <AmiBlitz3.ab3@19296>       ASL.w #8,d0
0003002E <AmiBlitz3.ab3@19297>       ASL.w #2,d0
00030030 <AmiBlitz3.ab3@19298>       OR.w d0,d1
00030036 <AmiBlitz3.ab3@19299>       CMP.b #$03,25(a2)
0003003A <AmiBlitz3.ab3@19300>       BNE 'nosgn
00030040 <AmiBlitz3.ab3@19303>       SUBQ.l #8,destpointer                                ;fpu sgn
00030046 <AmiBlitz3.ab3@19304>         OR.l #$f200003a,d1
0003004A <AmiBlitz3.ab3@19305>         BSR writelong
00030050 <AmiBlitz3.ab3@19306>         CLR.w a2offset
00030056 <AmiBlitz3.ab3@19307>          MOVE.l #$F28E0006,d1
0003005A <AmiBlitz3.ab3@19308>          BSR writelong
00030060 <AmiBlitz3.ab3@19309>   MOVE.l #$7000600a,d1
00030064 <AmiBlitz3.ab3@19310>   BSR writelong
0003006A <AmiBlitz3.ab3@19311>   MOVE.l #$70014840,d1
0003006E <AmiBlitz3.ab3@19312>   BSR writelong
00030074 <AmiBlitz3.ab3@19313>   MOVE.l #$F292,d1
00030078 <AmiBlitz3.ab3@19314>   BSR writeword
0003007E <AmiBlitz3.ab3@19315>   MOVE.l #$000470FF,d1
00030082 <AmiBlitz3.ab3@19316> BRA 'exit
0003008A <AmiBlitz3.ab3@19319>   CMP.l #"Frac",$1a(a2)
0003008E <AmiBlitz3.ab3@19320>   BNE 'nofrac
00030094 <AmiBlitz3.ab3@19321> JMP notwork
00030098 <AmiBlitz3.ab3@19362> BRA 'exit
0003009C <AmiBlitz3.ab3@19366>   BSR.w JL_0_BB14                                          ;write lib code
000300A2 <AmiBlitz3.ab3@19367>   MOVE.l (A7)+,libisat
000300A4 <AmiBlitz3.ab3@19368> RTS
000300A8 <AmiBlitz3.ab3@19371>   BSR writelong
000300AE <AmiBlitz3.ab3@19374>   MOVE.l (A7)+,libisat
000300B0 <AmiBlitz3.ab3@19375> RTS
000300B4 <AmiBlitz3.ab3@19379>   BSR.w fetchregs
000300BA <AmiBlitz3.ab3@19380>   TST.b debugmode
000300BE <AmiBlitz3.ab3@19381>    BEQ.w JL_0_BB76
000300C0 <AmiBlitz3.ab3@19382>   MOVE.l (A2),D1
000300C4 <AmiBlitz3.ab3@19383>   OR.l $8(A2),D1
000300C8 <AmiBlitz3.ab3@19384>   BCLR #$0,D1
000300CA <AmiBlitz3.ab3@19385>   TST.l D1
000300CE <AmiBlitz3.ab3@19386>    BEQ.w JL_0_BB76
000300D0 <AmiBlitz3.ab3@19387>   MOVE.l (A2)+,D1
000300D4 <AmiBlitz3.ab3@19388>   BTST #$0,D1
000300D8 <AmiBlitz3.ab3@19389>    BEQ.w JL_0_BB60
000300DE <AmiBlitz3.ab3@19390>   TST.w blitzmode
000300E2 <AmiBlitz3.ab3@19391>    BPL.w blitzerr
000300E8 <AmiBlitz3.ab3@19392>   TST.b debugmode
000300EC <AmiBlitz3.ab3@19393>    BEQ.w JL_0_BB5C
000300EE <AmiBlitz3.ab3@19394>   MOVE.l D1,-(A7)
000300F2 <AmiBlitz3.ab3@19395>   MOVE.w #$C311,D1
000300F6 <AmiBlitz3.ab3@19396>    BSR.w makebtst
000300F8 <AmiBlitz3.ab3@19397>   MOVE.l (A7)+,D1
000300FC <AmiBlitz3.ab3@19400>   BCLR #$0,D1
000300FE <AmiBlitz3.ab3@19403>   TST.l D1
00030102 <AmiBlitz3.ab3@19404>    BSR.w JL_0_BBC6
00030104 <AmiBlitz3.ab3@19405>   MOVE.l (A2)+,D1
00030108 <AmiBlitz3.ab3@19406>    BSR.w JL_0_BB98
0003010A <AmiBlitz3.ab3@19407>   MOVE.l (A2)+,D1
0003010E <AmiBlitz3.ab3@19408>    BSR.w JL_0_BBC6
00030112 <AmiBlitz3.ab3@19409> BRA.w JL_0_BB90
00030118 <AmiBlitz3.ab3@19412>   BTST #$0,$3(A2)
0003011C <AmiBlitz3.ab3@19413>    BEQ.w JL_0_BB88
00030120 <AmiBlitz3.ab3@19414>   MOVE.w blitzmode(PC),D1
00030124 <AmiBlitz3.ab3@19415>    BPL.w blitzerr
00030128 <AmiBlitz3.ab3@19418>   MOVE.l $4(A2),D1
0003012C <AmiBlitz3.ab3@19419>    BSR.w JL_0_BB98
00030132 <AmiBlitz3.ab3@19422>   MOVEA.l libisat,A2
00030134 <AmiBlitz3.ab3@19423> RTS
00030138 <AmiBlitz3.ab3@19426>   BTST #$0,D1
0003013C <AmiBlitz3.ab3@19427>    BEQ.w JL_0_BBC4
00030142 <AmiBlitz3.ab3@19428>   TST.w blitzmode
00030146 <AmiBlitz3.ab3@19429>    BMI.w amigaerr
0003014C <AmiBlitz3.ab3@19430>   TST.b debugmode
00030150 <AmiBlitz3.ab3@19431>    BEQ.w JL_0_BBC0
00030152 <AmiBlitz3.ab3@19432>   MOVE.l D1,-(A7)
00030156 <AmiBlitz3.ab3@19433>   MOVE.w #$C312,D1
0003015A <AmiBlitz3.ab3@19434>    BSR.w makebtst
0003015C <AmiBlitz3.ab3@19435>   MOVE.l (A7)+,D1
00030160 <AmiBlitz3.ab3@19438>   BCLR #$0,D1
00030162 <AmiBlitz3.ab3@19441>   TST.l D1
00030166 <AmiBlitz3.ab3@19444>    BEQ.w JL_0_BBD2
00030168 <AmiBlitz3.ab3@19445>   MOVE.l A1,-(A7)
0003016C <AmiBlitz3.ab3@19446>    BSR.w JL_0_BBD4
0003016E <AmiBlitz3.ab3@19447>   MOVEA.l (A7)+,A1
00030170 <AmiBlitz3.ab3@19450> RTS
00030176 <AmiBlitz3.ab3@19453>   MOVEA.l libisat,A0
0003017C <AmiBlitz3.ab3@19454>   TST.w cfetchmode
00030180 <AmiBlitz3.ab3@19455>    BEQ.w JL_0_BBF6
00030182 <AmiBlitz3.ab3@19456>   ADD.l A0,D1
00030184 <AmiBlitz3.ab3@19457>   MOVE.l D1,-(A7)
00030188 <AmiBlitz3.ab3@19458>   MOVE.w #$4EB9,D1
0003018C <AmiBlitz3.ab3@19459>    BSR.w writeword
0003018E <AmiBlitz3.ab3@19460>   MOVE.l (A7)+,D1
00030192 <AmiBlitz3.ab3@19461> BRA.w writelong
00030196 <AmiBlitz3.ab3@19464>   LEA $0(A0,D1.L),A1
0003019C <AmiBlitz3.ab3@19465>   CLR.w inline
000301A0 <AmiBlitz3.ab3@19468>   CMPI.b #$A0,(A1)+
000301A4 <AmiBlitz3.ab3@19469>    BNE.w JL_0_BC68
000301A6 <AmiBlitz3.ab3@19470>   TST.b (A1)+
000301AA <AmiBlitz3.ab3@19471>    BEQ.w JL_0_BC18
000301B0 <AmiBlitz3.ab3@19472>   CMPI.b #$1,-$1(A1)
000301B4 <AmiBlitz3.ab3@19473>    BEQ.w JL_0_BC24
000301BA <AmiBlitz3.ab3@19476>   MOVE.w (A1)+,inline
000301BC <AmiBlitz3.ab3@19477>   ADDQ.l #4,D1
000301C0 <AmiBlitz3.ab3@19478> BRA.w JL_0_BC00
000301C6 <AmiBlitz3.ab3@19481>   TST.w blitzmode
000301CA <AmiBlitz3.ab3@19482>    BPL.w JL_0_BC4A
000301D0 <AmiBlitz3.ab3@19483>   TST.b debugmode
000301D4 <AmiBlitz3.ab3@19484>    BEQ.w JL_0_BC40
000301D8 <AmiBlitz3.ab3@19485>   MOVE.w #$C311,D1
000301DC <AmiBlitz3.ab3@19486>    BSR.w makebtst
000301DE <AmiBlitz3.ab3@19489>   MOVE.l (A1)+,D1
000301E2 <AmiBlitz3.ab3@19490>   LEA $0(A0,D1.L),A1
000301E6 <AmiBlitz3.ab3@19491> BRA.w JL_0_BC00
000301EC <AmiBlitz3.ab3@19494>   TST.b debugmode
000301F0 <AmiBlitz3.ab3@19495>    BEQ.w JL_0_BC60
000301F2 <AmiBlitz3.ab3@19496>   MOVE.l D1,-(A7)
000301F6 <AmiBlitz3.ab3@19497>   MOVE.w #$C312,D1
000301FA <AmiBlitz3.ab3@19498>    BSR.w makebtst
000301FC <AmiBlitz3.ab3@19499>   MOVE.l (A7)+,D1
000301FE <AmiBlitz3.ab3@19502>   ADDQ.w #4,A1
00030200 <AmiBlitz3.ab3@19503>   ADDQ.l #6,D1
00030204 <AmiBlitz3.ab3@19504> BRA.w JL_0_BC00
0003020A <AmiBlitz3.ab3@19507>   TST.w inline
0003020E <AmiBlitz3.ab3@19508>    BEQ.w JL_0_BC7E
00030210 <AmiBlitz3.ab3@19509>   SUBQ.w #1,A1
00030212 <AmiBlitz3.ab3@19510>   MOVEA.l A1,A0
00030216 <AmiBlitz3.ab3@19511>   ADDA.w inline(PC),A1
0003021A <AmiBlitz3.ab3@19512> BRA.w pokecode2
0003021E <AmiBlitz3.ab3@19515>   MOVEM.l a0/D1,-(A7)
00030224 <AmiBlitz3.ab3@19516>   TST.w debugversion
00030228 <AmiBlitz3.ab3@19517>   BEQ 'l11
00030230 <AmiBlitz3.ab3@19518>   BTST #$7,link_debuginfo
00030234 <AmiBlitz3.ab3@19519>   BEQ.w 'l11
0003023A <AmiBlitz3.ab3@19520>   MOVE.l lastinstruction,d1
0003023E <AmiBlitz3.ab3@19521>   BEQ 'l11
00030244 <AmiBlitz3.ab3@19522>   CLR.l lastinstruction
0003024A <AmiBlitz3.ab3@19523>   CMP.l #$e000,d1
0003024E <AmiBlitz3.ab3@19524>   BGE 'ln99
00030254 <AmiBlitz3.ab3@19525>   LEA notf,a0
0003025A <AmiBlitz3.ab3@19526>   CMP.l #$c601,d1
0003025E <AmiBlitz3.ab3@19527>   BNE 'ln1
00030264 <AmiBlitz3.ab3@19528>   LEA strcpy,a0
00030268 <AmiBlitz3.ab3@19529> BRA 'ln3
0003026E <AmiBlitz3.ab3@19532>   CMP.l #$c700,d1
00030272 <AmiBlitz3.ab3@19533>   BNE 'ln2
00030278 <AmiBlitz3.ab3@19534>   LEA strvar,a0
0003027C <AmiBlitz3.ab3@19535> BRA 'ln3
00030282 <AmiBlitz3.ab3@19538>   CMP.l #$ce00,d1
00030286 <AmiBlitz3.ab3@19539>   BNE 'ln4
0003028C <AmiBlitz3.ab3@19540>   LEA strcmp,a0
00030290 <AmiBlitz3.ab3@19541> BRA 'ln3
00030296 <AmiBlitz3.ab3@19544>   CMP.l #$ca00,d1
0003029A <AmiBlitz3.ab3@19545>   BNE 'ln5
000302A0 <AmiBlitz3.ab3@19546>   LEA qmul,a0
000302A4 <AmiBlitz3.ab3@19547> BRA 'ln3
000302AA <AmiBlitz3.ab3@19550>   CMP.l #$d000,d1
000302AE <AmiBlitz3.ab3@19551>      BNE 'ln6
000302B4 <AmiBlitz3.ab3@19552>      LEA _MaxLen,a0
000302B8 <AmiBlitz3.ab3@19553> BRA 'ln3
000302BE <AmiBlitz3.ab3@19556>   CMP.l #$cb00,d1
000302C2 <AmiBlitz3.ab3@19557>   BNE 'ln3
000302C8 <AmiBlitz3.ab3@19558>   LEA qdiv,a0
000302CC <AmiBlitz3.ab3@19559> BRA 'ln3
000302CE <AmiBlitz3.ab3@19562>   MOVE.l d1,a0
000302D2 <AmiBlitz3.ab3@19563>   LEA $8(a0),a0
000302D6 <AmiBlitz3.ab3@19566>   CMP.w #$ffff,(a0)+
000302DA <AmiBlitz3.ab3@19567>   BNE 'l1
000302DE <AmiBlitz3.ab3@19568>   LEA 6(a0),a0
000302E2 <AmiBlitz3.ab3@19571>   MOVEM.l a1/a2/d7/d2,-(a7)
000302E4 <AmiBlitz3.ab3@19572>   MOVEQ #0,d2
000302EA <AmiBlitz3.ab3@19573>   LEA ptr_parameterstore,a1
000302EC <AmiBlitz3.ab3@19576>   ADDQ.l #1,d2
000302EE <AmiBlitz3.ab3@19577>   MOVE.b (a0)+,d0
000302F2 <AmiBlitz3.ab3@19578> 
000302F6 <AmiBlitz3.ab3@19579>   BNE 'nodollar
000302FA <AmiBlitz3.ab3@19580>   MOVE.b #"S",d0
000302FE <AmiBlitz3.ab3@19582>   CMP.b #"?",d0
00030302 <AmiBlitz3.ab3@19583>   BEQ 'nolabelwrite
00030304 <AmiBlitz3.ab3@19584>   MOVE.b d0,(a1)+
00030308 <AmiBlitz3.ab3@19585>   BNE 'l2
0003030E <AmiBlitz3.ab3@19586>   MOVE.w #"__",-1(a1)
00030310 <AmiBlitz3.ab3@19587>   ADDQ.l #2,d2
00030314 <AmiBlitz3.ab3@19588>   CLR.b 1(a1)
0003031A <AmiBlitz3.ab3@19589>   JSR findlabel2
0003031E <AmiBlitz3.ab3@19590>   BEQ 'l3
00030324 <AmiBlitz3.ab3@19591>   JSR addlabelhash
00030328 <AmiBlitz3.ab3@19594>   CLR.l 4(a2)
0003032C <AmiBlitz3.ab3@19595>   MOVE.l $14(a7),a0
00030330 <AmiBlitz3.ab3@19596>   MOVE.l $10(a7),d1
00030334 <AmiBlitz3.ab3@19597>   SUB.l $12(a0),d1
00030338 <AmiBlitz3.ab3@19598>   ADD.l $28(a0),d1
0003033C <AmiBlitz3.ab3@19599>   MOVE.l d1,8(a2)
00030340 <AmiBlitz3.ab3@19600> 'nolabelwrite MOVEM.l (a7)+,a1/a2/d7/d2
00030346 <AmiBlitz3.ab3@19603>   TST.b typecheck
0003034A <AmiBlitz3.ab3@19604>   BEQ 'p1
00030350 <AmiBlitz3.ab3@19605>   MOVE.l lasttoken,d1
00030356 <AmiBlitz3.ab3@19606>   CMP.l #$da01,d1                                          ;poke
0003035A <AmiBlitz3.ab3@19607>   BEQ 'lp1
00030360 <AmiBlitz3.ab3@19608>   CMP.l #$da02,d1                                          ;peek
00030364 <AmiBlitz3.ab3@19609>   BNE 'p1
0003036A <AmiBlitz3.ab3@19612>   TST.b peekaddrsize
0003036E <AmiBlitz3.ab3@19613>   BEQ 'p1
00030376 <AmiBlitz3.ab3@19614>   CMP.b #3,peekaddrsize
0003037A <AmiBlitz3.ab3@19615>   BNE errormsg_onlylong
00030380 <AmiBlitz3.ab3@19616>   CLR.b peekaddrsize
00030386 <AmiBlitz3.ab3@19624>    TST.b fpu
0003038A <AmiBlitz3.ab3@19625>   BNE 'optf
00030390 <AmiBlitz3.ab3@19626>   TST.b fast
00030394 <AmiBlitz3.ab3@19627>   BEQ JL11a2
0003039C <AmiBlitz3.ab3@19634>   CMP.l #"Poke",20(a2)                                     ;poke
000303A0 <AmiBlitz3.ab3@19635>   BNE peekopt
000303A4 <AmiBlitz3.ab3@19636>   TST.b 24(a2)
000303A8 <AmiBlitz3.ab3@19637>   BNE peekopt
000303AC <AmiBlitz3.ab3@19638>   CMP.b #3,d2
000303B0 <AmiBlitz3.ab3@19639>   BNE 'lw1
000303B6 <AmiBlitz3.ab3@19642>   MOVE.l #$21821990,d1
000303BA <AmiBlitz3.ab3@19643> BRA.s 'lpx
000303BE <AmiBlitz3.ab3@19646>   CMP.b #2,d2
000303C2 <AmiBlitz3.ab3@19647>   BNE 'lb1
000303C8 <AmiBlitz3.ab3@19648>   MOVE.l #$31821990,d1
000303CC <AmiBlitz3.ab3@19649> BRA.s 'lpx
000303D0 <AmiBlitz3.ab3@19652>   CMP.b #1,d2
000303D4 <AmiBlitz3.ab3@19653>   BNE 'lp3
000303DA <AmiBlitz3.ab3@19654>   MOVE.l #$11821990,d1
000303DE <AmiBlitz3.ab3@19655> BRA.s 'lpx
000303E2 <AmiBlitz3.ab3@19658>   CMP.b #5,d2
000303E6 <AmiBlitz3.ab3@19659>     BNE JL11a2
000303EC <AmiBlitz3.ab3@19660>     TST.b fpu
000303F0 <AmiBlitz3.ab3@19661>     BEQ 'll1
000303F6 <AmiBlitz3.ab3@19662>      MOVE.l destpointer,a4
000303FE <AmiBlitz3.ab3@19663>     CMP.l #$f22d4500,-6(a4)
00030402 <AmiBlitz3.ab3@19664>     BNE 'noglob
00030408 <AmiBlitz3.ab3@19665>     TST.b doublepeek
0003040C <AmiBlitz3.ab3@19666>     BNE 'noglob
00030412 <AmiBlitz3.ab3@19667>     MOVE.w -2(a4),-4(a4)
00030418 <AmiBlitz3.ab3@19668>     MOVE.w #$21ad,-6(a4)
0003041E <AmiBlitz3.ab3@19669>     MOVE.w #$1990,-2(a4)
00030426 <AmiBlitz3.ab3@19670>     MOVE.w #9,peeksize
00030428 <AmiBlitz3.ab3@19671>     ADDQ #8,a7
0003042A <AmiBlitz3.ab3@19672> RTS
00030432 <AmiBlitz3.ab3@19675>     CMP.l #$f22c4500,-6(a4)
00030436 <AmiBlitz3.ab3@19676>     BNE 'nolocal
0003043C <AmiBlitz3.ab3@19677>     MOVE.w -2(a4),-4(a4)
00030442 <AmiBlitz3.ab3@19678>     TST.b doublepeek                                       ;dont move longfix on double floats
00030446 <AmiBlitz3.ab3@19679>     BNE 'nolocal
0003044C <AmiBlitz3.ab3@19680>     MOVE.w #$21ac,-6(a4)
00030452 <AmiBlitz3.ab3@19681>     MOVE.w #$1990,-2(a4)
0003045A <AmiBlitz3.ab3@19682>     MOVE.w #9,peeksize
0003045C <AmiBlitz3.ab3@19683>     ADDQ #8,a7
0003045E <AmiBlitz3.ab3@19684> RTS
00030462 <AmiBlitz3.ab3@19687>     MOVE.w #$f230,d1
00030466 <AmiBlitz3.ab3@19688>     BSR writeword
0003046C <AmiBlitz3.ab3@19689>   MOVE.l #$65001990,d1
00030472 <AmiBlitz3.ab3@19690>   TST.b doublepeek
00030476 <AmiBlitz3.ab3@19691>   BEQ 'lpx
0003047C <AmiBlitz3.ab3@19692>   OR.l   #$10000000,d1
0003047E <AmiBlitz3.ab3@19696>   ADDQ #8,a7
00030486 <AmiBlitz3.ab3@19697>   MOVE.w #9,peeksize
0003048A <AmiBlitz3.ab3@19698> BRA writelong
00030492 <AmiBlitz3.ab3@19701>   CMP.l #"Peek",20(a2)
00030496 <AmiBlitz3.ab3@19702>   BNE 'l10
0003049A <AmiBlitz3.ab3@19703>   TST.b 24(a2)
0003049E <AmiBlitz3.ab3@19704>   BNE 'l10
000304A6 <AmiBlitz3.ab3@19705>   CMP.w #7,peeksize
000304AA <AmiBlitz3.ab3@19706>   BEQ 'l10
000304B2 <AmiBlitz3.ab3@19707>    CMP.w #3,peeksize
000304B6 <AmiBlitz3.ab3@19708>    BNE.s 'lw1
000304BC <AmiBlitz3.ab3@19711>   MOVE.l #$20301990,d1
000304C0 <AmiBlitz3.ab3@19712> BRA exitjsr
000304C8 <AmiBlitz3.ab3@19715>   CMP.w #2,peeksize
000304CC <AmiBlitz3.ab3@19716>    BNE.s 'lb1
000304D2 <AmiBlitz3.ab3@19717>    MOVE.l #$30301990,d1
000304D6 <AmiBlitz3.ab3@19718> BRA exitjsr
000304DE <AmiBlitz3.ab3@19721>   CMP.w #1,peeksize
000304E2 <AmiBlitz3.ab3@19722>    BNE.s 'lf1
000304E8 <AmiBlitz3.ab3@19723>    MOVE.l #$10301990,d1
000304EC <AmiBlitz3.ab3@19724> BRA exitjsr
000304F4 <AmiBlitz3.ab3@19727>   CMP.w #5,peeksize
000304F8 <AmiBlitz3.ab3@19728>    BNE 'l10
000304FE <AmiBlitz3.ab3@19729>    TST.b fpu
00030502 <AmiBlitz3.ab3@19730>    BEQ 'll1
00030506 <AmiBlitz3.ab3@19731>    MOVE.w #$f230,d1
0003050A <AmiBlitz3.ab3@19732>    BSR writeword
0003050C <AmiBlitz3.ab3@19733>    MOVEQ #0,d1
00030512 <AmiBlitz3.ab3@19734>    MOVE.w tempregnum,d1
00030514 <AmiBlitz3.ab3@19735>    ASL.l #7,d1
00030516 <AmiBlitz3.ab3@19736>    ASL.l #8,d1
00030518 <AmiBlitz3.ab3@19737>    ASL.l #8,d1
0003051E <AmiBlitz3.ab3@19738>    ADD.l #$44001990,d1
00030524 <AmiBlitz3.ab3@19739>     TST.b doublepeek
00030528 <AmiBlitz3.ab3@19740>     BEQ 'lpx2
0003052E <AmiBlitz3.ab3@19741>     OR.l   #$10000000,d1
00030532 <AmiBlitz3.ab3@19743> BRA exitjsr
00030536 <AmiBlitz3.ab3@19747>   MOVE.w #$4EB9,D1
0003053A <AmiBlitz3.ab3@19748>    BSR.w writeword                                         ;writesysjsr
0003053E <AmiBlitz3.ab3@19749>   MOVEM.l (A7)+,a0/D1
00030544 <AmiBlitz3.ab3@19750>    JSR addoff
00030548 <AmiBlitz3.ab3@19751>   SUB.l $12(A0),D1
0003054C <AmiBlitz3.ab3@19752>   ADD.l $28(A0),D1
00030550 <AmiBlitz3.ab3@19753> BRA.w writelong
00030552 <AmiBlitz3.ab3@19758>   MOVE.w D1,-(A7)
00030556 <AmiBlitz3.ab3@19759>   MOVE.w tstmode(PC),D1
0003055A <AmiBlitz3.ab3@19760>    BSR.w writeword
0003055E <AmiBlitz3.ab3@19761>    BSR.w getbbase
00030562 <AmiBlitz3.ab3@19762>    BSR.w writeword
00030564 <AmiBlitz3.ab3@19763>   MOVE.w (A7)+,D1
00030568 <AmiBlitz3.ab3@19764>   MOVEM.l D0/D3-D7/A0-A2/A4,-(A7)
0003056C <AmiBlitz3.ab3@19765>    BSR.w Atokejsr
00030570 <AmiBlitz3.ab3@19766>   MOVEM.l (A7)+,D0/D3-D7/A0-A2/A4
00030572 <AmiBlitz3.ab3@19767> RTS
00030576 <AmiBlitz3.ab3@19775>   MOVE.w blitzoff(PC),D1
0003057A <AmiBlitz3.ab3@19776>   CMP.w #-$1,D1
0003057E <AmiBlitz3.ab3@19777>    BNE.w getbbase__done
00030584 <AmiBlitz3.ab3@19778>   ADDQ.w #1,globalvarpointer
0003058C <AmiBlitz3.ab3@19779>   BCLR #$0,globalvarpointer+1
00030592 <AmiBlitz3.ab3@19780>   MOVE.w globalvarpointer,D1
00030598 <AmiBlitz3.ab3@19781>   MOVE.w D1,blitzoff
0003059E <AmiBlitz3.ab3@19782>   ADDQ.w #2,globalvarpointer
000305A0 <AmiBlitz3.ab3@19785> RTS
000305A4 <AmiBlitz3.ab3@19789> tstmode:    Dc.b $4A,$6D,$00,$00                           ;TST.W $0000(A5)
000305A6 <AmiBlitz3.ab3@19792> inline:     Ds.w 1
000305A8 <AmiBlitz3.ab3@19793> blitzoff:   Dc.w $FFFF                                   ;-1 org source
000305AA <AmiBlitz3.ab3@19794> blitzmode:  Ds.w 1                                       ;+=amiga, -=blitz
000305AC <AmiBlitz3.ab3@19798>   MOVE.w (A2)+,D1
000305B0 <AmiBlitz3.ab3@19799>    BEQ.w fetchregs__done
000305B2 <AmiBlitz3.ab3@19800>   MOVE.w (A2)+,D2
000305B6 <AmiBlitz3.ab3@19801>    BSR.w toreg
000305BA <AmiBlitz3.ab3@19802> BRA.w fetchregs
000305BC <AmiBlitz3.ab3@19805> RTS
000305C0 <AmiBlitz3.ab3@19810>   CMP.w #-$100,D2
000305C4 <AmiBlitz3.ab3@19811>    BCC.w toreg__yeah
000305C8 <AmiBlitz3.ab3@19813>   BCLR #$F,D2
000305CC <AmiBlitz3.ab3@19814>    BEQ.w toreg__nobm
000305D2 <AmiBlitz3.ab3@19816>   TST.w blitzmode
000305D6 <AmiBlitz3.ab3@19817>    BMI.w toreg__yeah
000305D8 <AmiBlitz3.ab3@19818> RTS
000305DC <AmiBlitz3.ab3@19821>   BCLR #$E,D2
000305E0 <AmiBlitz3.ab3@19822>    BEQ.w toreg__yeah
000305E6 <AmiBlitz3.ab3@19824>   TST.w blitzmode
000305EA <AmiBlitz3.ab3@19825>    BPL.w toreg__yeah
000305EC <AmiBlitz3.ab3@19826> RTS
000305F2 <AmiBlitz3.ab3@19829>   JSR uselib
000305F4 <AmiBlitz3.ab3@19830>   TST.b D2
000305F8 <AmiBlitz3.ab3@19831>    BEQ.w toreg__norm
000305FC <AmiBlitz3.ab3@19832>   CMP.b #$4,D2
00030600 <AmiBlitz3.ab3@19833>    BNE.w toreg__suv
00030604 <AmiBlitz3.ab3@19834>   MOVE.w #$0004,-(A7)
0003060A <AmiBlitz3.ab3@19835>   MOVE.l #$FFFFFFFA,-(A7)                                  ;#-6,-(a7) org source
0003060E <AmiBlitz3.ab3@19836> BRA.w toreg__sendmd
00030612 <AmiBlitz3.ab3@19839>   CMP.b #$3,D2
00030616 <AmiBlitz3.ab3@19840>    BNE.w toreg__notnmax
00030618 <AmiBlitz3.ab3@19841>   CLR.w -(A7)
0003061E <AmiBlitz3.ab3@19842>   MOVE.l #$FFFFFFFC,-(A7)                                  ;#-4,-(a7) org source
00030620 <AmiBlitz3.ab3@19848>   LSR.w #8,D2
00030624 <AmiBlitz3.ab3@19849>   MOVE.w #$303C,D1                                         ;move.w #x,dn
00030628 <AmiBlitz3.ab3@19850>   BTST #$7,D2
0003062C <AmiBlitz3.ab3@19851>    BEQ.w toreg__skipad
00030630 <AmiBlitz3.ab3@19852>   MOVE.w #$307C,D1                                         ;move.w #x,an
00030634 <AmiBlitz3.ab3@19853>   CMP.w #$16,D2
00030638 <AmiBlitz3.ab3@19854>    BNE.w toreg__skipad
00030640 <AmiBlitz3.ab3@19855>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
00030644 <AmiBlitz3.ab3@19858>   ANDI.w #$7,D2
00030646 <AmiBlitz3.ab3@19859>   LSL.w #8,D2
00030648 <AmiBlitz3.ab3@19860>   LSL.w #1,D2
0003064A <AmiBlitz3.ab3@19861>   OR.w D2,D1
0003064E <AmiBlitz3.ab3@19862>    BSR.w writeword
00030652 <AmiBlitz3.ab3@19863>   MOVE.l $12(A1),D1
00030654 <AmiBlitz3.ab3@19864>   ADD.l (A7)+,D1
00030658 <AmiBlitz3.ab3@19865>   MOVE.w $0(A1,D1.L),D1
0003065A <AmiBlitz3.ab3@19866>   ADD.w (A7)+,D1
0003065E <AmiBlitz3.ab3@19867> BRA.w writeword
00030660 <AmiBlitz3.ab3@19870>   MOVE.w D2,-(A7)
00030662 <AmiBlitz3.ab3@19871>   LSR.w #8,D2
00030666 <AmiBlitz3.ab3@19872>   CMP.w #$16,D2
0003066A <AmiBlitz3.ab3@19873>    BNE.w toreg__isnta6
00030672 <AmiBlitz3.ab3@19874>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
00030676 <AmiBlitz3.ab3@19877>   MOVE.l $12(A1),D1                                        ;objectspace
0003067A <AmiBlitz3.ab3@19878>   MOVE.w -$6(A1,D1.L),-(A7)
0003067E <AmiBlitz3.ab3@19879>    BSR.w makeregop
00030682 <AmiBlitz3.ab3@19880>    BSR.w writeword
00030684 <AmiBlitz3.ab3@19881>   MOVE.w (A7)+,D1
00030686 <AmiBlitz3.ab3@19882>   MOVE.w (A7)+,D2
00030688 <AmiBlitz3.ab3@19883>   TST.b D2
0003068C <AmiBlitz3.ab3@19884>    BPL.w toreg__skippy1
00030690 <AmiBlitz3.ab3@19889>    BSR.w writeword                                         ;move.l x(a5),dn
00030692 <AmiBlitz3.ab3@19890>   MOVE.w D2,-(A7)                                          ;store reg used
00030696 <AmiBlitz3.ab3@19892>   ADDA.l $12(A1),A1
00030698 <AmiBlitz3.ab3@19893>   MOVE.b D2,D1
0003069C <AmiBlitz3.ab3@19894>   ANDI.w #$7,D1
000306A2 <AmiBlitz3.ab3@19896>   TST.b debugmode
000306A6 <AmiBlitz3.ab3@19897>    BEQ.w toreg__norerr
000306A8 <AmiBlitz3.ab3@19899>   MOVE.w D1,-(A7)
000306AA <AmiBlitz3.ab3@19900>   LSL.w #8,D1
000306AC <AmiBlitz3.ab3@19901>   LSL.w #1,D1
000306B0 <AmiBlitz3.ab3@19902>   ORI.w #$B07C,D1                                          ;cmp #x,dn
000306B4 <AmiBlitz3.ab3@19903>    BSR.w writeword
000306B8 <AmiBlitz3.ab3@19904>   MOVE.w -$4(A1),D1
000306BC <AmiBlitz3.ab3@19905>    BSR.w writeword
000306C0 <AmiBlitz3.ab3@19906>   MOVE.l maxchk(PC),D1                                  ;bcs
000306C4 <AmiBlitz3.ab3@19907>    BSR.w writelong
000306C6 <AmiBlitz3.ab3@19908>   MOVE.l A2,-(A7)
000306CA <AmiBlitz3.ab3@19909>   MOVE.w #$C30A,D1
000306CE <AmiBlitz3.ab3@19910>    BSR.w Atokejsr
000306D0 <AmiBlitz3.ab3@19911>   MOVEA.l (A7)+,A2
000306D2 <AmiBlitz3.ab3@19912>   MOVE.w (A7)+,D1
000306D6 <AmiBlitz3.ab3@19915>   MOVE.w -$2(A1),D2                                        ;shift amount
000306DA <AmiBlitz3.ab3@19918>   CMP.w #$9,D2
000306DE <AmiBlitz3.ab3@19919>    BCS.w toreg__simp
000306E2 <AmiBlitz3.ab3@19920>   MOVEM.w D1-D2,-(A7)
000306E4 <AmiBlitz3.ab3@19922>   MOVEQ.l #$00,D2                                          ;!!!!!
000306E6 <AmiBlitz3.ab3@19924>   LSL.w #8,D2
000306E8 <AmiBlitz3.ab3@19925>   LSL.w #1,D2
000306EA <AmiBlitz3.ab3@19926>   OR.w D2,D1
000306EE <AmiBlitz3.ab3@19927>   OR.w lsldn(PC),D1
000306F2 <AmiBlitz3.ab3@19928>    BSR.w writeword
000306F6 <AmiBlitz3.ab3@19929>   MOVEM.w (A7)+,D1-D2
000306F8 <AmiBlitz3.ab3@19930>   SUBQ.w #8,D2
000306FC <AmiBlitz3.ab3@19931> BRA.w toreg__shloop
000306FE <AmiBlitz3.ab3@19934>   MOVE.w D1,-(A7)
00030702 <AmiBlitz3.ab3@19935>   OR.w #$48c0,d1
00030706 <AmiBlitz3.ab3@19936>   BSR writeword
00030708 <AmiBlitz3.ab3@19937>   MOVE.w (a7),d1
0003070A <AmiBlitz3.ab3@19938>   TST.w D2
0003070E <AmiBlitz3.ab3@19939>   BEQ.w toreg__simp2
00030712 <AmiBlitz3.ab3@19941>   ANDI.w #$7,D2                                            ;?????
00030714 <AmiBlitz3.ab3@19943>   LSL.w #8,D2
00030716 <AmiBlitz3.ab3@19944>   LSL.w #1,D2
00030718 <AmiBlitz3.ab3@19945>   OR.w D2,D1
0003071C <AmiBlitz3.ab3@19946>   OR.w lsldn(PC),D1
00030720 <AmiBlitz3.ab3@19947>    BSR.w writeword
00030722 <AmiBlitz3.ab3@19953>   MOVE.w (A7)+,D1
00030726 <AmiBlitz3.ab3@19954>   ANDI.w #$7,D1
0003072A <AmiBlitz3.ab3@19955>   OR.w maxdo(PC),D1
0003072C <AmiBlitz3.ab3@19956>   MOVE.w (A7)+,D2
0003072E <AmiBlitz3.ab3@19957>   LSL.w #1,D2
00030732 <AmiBlitz3.ab3@19958>   ANDI.w #$E00,D2
00030734 <AmiBlitz3.ab3@19959>   OR.w D2,D1
00030738 <AmiBlitz3.ab3@19960> BRA.w writeword
0003073C <AmiBlitz3.ab3@19963>   CMP.b #$1,D2
00030740 <AmiBlitz3.ab3@19964>    BEQ.w toreg__skippy
00030742 <AmiBlitz3.ab3@19968>   ADDQ.w #4,D1
00030748 <AmiBlitz3.ab3@19970>   TST.b debugmode
0003074C <AmiBlitz3.ab3@19971>    BEQ.w toreg__skippy
00030750 <AmiBlitz3.ab3@19973>    BSR.w writeword
00030752 <AmiBlitz3.ab3@19974>   SWAP D1
00030756 <AmiBlitz3.ab3@19975>   MOVE.w toreg__theretest(PC),D1
00030758 <AmiBlitz3.ab3@19976>   SWAP D1
0003075C <AmiBlitz3.ab3@19977>    BSR.w writelong
00030760 <AmiBlitz3.ab3@19978>   MOVE.l toreg__theretest+4(PC),D1
00030764 <AmiBlitz3.ab3@19979>    BSR.w writelong
00030768 <AmiBlitz3.ab3@19980>   MOVE.l toreg__theretest+8(PC),D1
0003076C <AmiBlitz3.ab3@19981> BRA.w writelong
00030770 <AmiBlitz3.ab3@19984> BRA.w writeword
00030774 <AmiBlitz3.ab3@19989>             Dc.b $4A,$AD,$00,$00                           ;TST.L  $0000(A5)
00030778 <AmiBlitz3.ab3@19990>             Dc.b $66,$00,$00,$06                           ;BNE.W  toreg__ttskip
0003077A <AmiBlitz3.ab3@19991>             Dc.b $70,$01                                   ;MOVEQ  #$01,D0
0003077C <AmiBlitz3.ab3@19992>             Dc.b $4E,$40                                   ;TRAP   #00
0003077E <AmiBlitz3.ab3@19997>   LSR.w #8,D2
00030782 <AmiBlitz3.ab3@19998>   CMP.b #$16,D2
00030786 <AmiBlitz3.ab3@19999>    BNE.w toreg__nota6
0003078A <AmiBlitz3.ab3@20000>   MOVE.w $A(A1),D1
00030790 <AmiBlitz3.ab3@20001>   CMP.w lasta6,D1
00030794 <AmiBlitz3.ab3@20002>    BEQ.w toreg__sk
0003079A <AmiBlitz3.ab3@20003>   MOVE.w D1,lasta6
0003079E <AmiBlitz3.ab3@20006>    BSR.w makeregop
000307A2 <AmiBlitz3.ab3@20007>   TST.w $1A(A1)
000307A6 <AmiBlitz3.ab3@20008>    BPL.w toreg__long
000307AA <AmiBlitz3.ab3@20009>   CMP.w stackop(PC),D1
000307AE <AmiBlitz3.ab3@20010>    BNE.w toreg__notst
000307B4 <AmiBlitz3.ab3@20011>   SUBQ.w #2,a2offset
000307B8 <AmiBlitz3.ab3@20014>    ORI.w #$1000,D1
000307BC <AmiBlitz3.ab3@20017>    BSR.w writeword
000307C0 <AmiBlitz3.ab3@20018>   MOVE.w $A(A1),D1
000307C4 <AmiBlitz3.ab3@20019>    BSR.w writeword
000307C6 <AmiBlitz3.ab3@20022> RTS
000307C8 <AmiBlitz3.ab3@20026> lsldn:      Dc.b $E1,$88                 ;Dc.b $48 ;object long acsess    ;LSL.L   #8,D0
000307CC <AmiBlitz3.ab3@20027> maxchk:     Dc.b $65,$00,$00,$08                                          ;BCS.W   maxchk__ok
000307D2 <AmiBlitz3.ab3@20028>             Dc.b $4E,$B9,$00,$00,$00,$00                                  ;JSR     $00000000
000307D4 <AmiBlitz3.ab3@20031> 
000307D6 <AmiBlitz3.ab3@20034>             Dc.b $00,$00
000307DA <AmiBlitz3.ab3@20035> stackop:    Dc.b $2F,$2D,$00,$00                                          ;MOVE.L  $0000(A5),-(A7)
000307DE <AmiBlitz3.ab3@20042>   CMP.b #$FF,D2
000307E2 <AmiBlitz3.ab3@20043>    BNE.w makeregop__notst
000307E6 <AmiBlitz3.ab3@20044>   MOVE.w stackop(PC),D1
000307EC <AmiBlitz3.ab3@20045>   ADDQ.w #4,a2offset
000307EE <AmiBlitz3.ab3@20046> RTS
000307F0 <AmiBlitz3.ab3@20049>   MOVE.l A3,-(A7)
000307F6 <AmiBlitz3.ab3@20050>   LEA regtransd,A3
000307FA <AmiBlitz3.ab3@20051>   BTST #$4,D2
000307FE <AmiBlitz3.ab3@20052>    BEQ.w makeregop__skip
00030804 <AmiBlitz3.ab3@20053>   LEA regtransa,A3
00030808 <AmiBlitz3.ab3@20056>   ANDI.w #$7,D2
0003080A <AmiBlitz3.ab3@20057>   MOVE.w D2,D1
0003080C <AmiBlitz3.ab3@20058>   LSL.w #8,D1
0003080E <AmiBlitz3.ab3@20059>   LSL.w #1,D1
00030810 <AmiBlitz3.ab3@20060>   OR.w (A3),D1
00030812 <AmiBlitz3.ab3@20061>   MOVEA.l (A7)+,A3
00030814 <AmiBlitz3.ab3@20062> RTS
00030818 <AmiBlitz3.ab3@20068>   CMP.w #$3C,D0
0003081C <AmiBlitz3.ab3@20069>    BCS.w ifchar__no
00030820 <AmiBlitz3.ab3@20070>   CMP.w #$3E,D0
00030824 <AmiBlitz3.ab3@20071>    BHI.w ifchar__no
00030828 <AmiBlitz3.ab3@20072>   SUBI.w #$3C,D0
0003082A <AmiBlitz3.ab3@20073>   CMP.w D0,D0
0003082C <AmiBlitz3.ab3@20076> RTS
00030836 <AmiBlitz3.ab3@20081>   MOVE.w oldqflag,instringon
0003083C <AmiBlitz3.ab3@20082>   MOVEA.l lastsourcepos,A5
00030842 <AmiBlitz3.ab3@20087>   MOVE.w regnum,-(A7)
00030848 <AmiBlitz3.ab3@20088>   CLR.w regnum
0003084E <AmiBlitz3.ab3@20089>   MOVE.l destpointer,-(A7)
00030854 <AmiBlitz3.ab3@20090>   MOVE.l destbufferend,-(A7)
0003085A <AmiBlitz3.ab3@20091>   MOVE.w dontwrite,-(A7)
00030860 <AmiBlitz3.ab3@20092>   MOVE.w lasta6,-(A7)
00030866 <AmiBlitz3.ab3@20093>   MOVE.w cfetchmode,-(A7)
0003086A <AmiBlitz3.ab3@20094>    BNE.w JL_0_BFB6
00030874 <AmiBlitz3.ab3@20095>   MOVE.l destbufferend,oldlibat
0003087A <AmiBlitz3.ab3@20096>   MOVEA.l constpcat,A0
00030880 <AmiBlitz3.ab3@20097>   MOVE.l A0,destpointer
00030884 <AmiBlitz3.ab3@20098> BRA.w JL_0_BFBC
0003088A <AmiBlitz3.ab3@20101>   MOVEA.l destpointer,A0
0003088C <AmiBlitz3.ab3@20104>   MOVE.l A0,-(A7)
00030896 <AmiBlitz3.ab3@20105>   MOVE.l constlibat,destbufferend
0003089C <AmiBlitz3.ab3@20106>   CLR.w dontwrite
000308A4 <AmiBlitz3.ab3@20108>   MOVE.w #$FFFF,lasta6
000308AC <AmiBlitz3.ab3@20109>   MOVE.w #$FFFF,cfetchmode
000308B0 <AmiBlitz3.ab3@20111>     BSR.w arreval
000308B2 <AmiBlitz3.ab3@20112>    MOVE.l (a7),a0
000309EE <AmiBlitz3.ab3@20114>  !newcalc
000309F2 <AmiBlitz3.ab3@20115>    BEQ 'l10
000309F4 <AmiBlitz3.ab3@20116>    MOVE.l d0,d3
000309F6 <AmiBlitz3.ab3@20117>    MOVEA.l (A7)+,A0
000309FA <AmiBlitz3.ab3@20118> BRA bc1
000309FE <AmiBlitz3.ab3@20121>    MOVE.w #$2600,D1
00030A04 <AmiBlitz3.ab3@20122>   OR.w regnum,D1
00030A08 <AmiBlitz3.ab3@20123>    BSR.w writeword
00030A0C <AmiBlitz3.ab3@20124>   MOVE.w #$4E75,D1
00030A10 <AmiBlitz3.ab3@20125>    BSR.w writeword
00030A16 <AmiBlitz3.ab3@20126>   MOVE.w dontwrite,D1
00030A1A <AmiBlitz3.ab3@20127>    BNE.w conmemerr
00030A1C <AmiBlitz3.ab3@20128>   MOVEA.l (A7)+,A0
00030A1E <AmiBlitz3.ab3@20129>   NOP
00030A24 <AmiBlitz3.ab3@20130>    JSR Aclearcache                                         ;simple expression
00030A26 <AmiBlitz3.ab3@20133>    JSR (A0)                                                ;writeresult
00030A2C <AmiBlitz3.ab3@20136>   MOVE.w (A7)+,cfetchmode
00030A32 <AmiBlitz3.ab3@20137>   MOVE.w (A7)+,lasta6
00030A38 <AmiBlitz3.ab3@20138>   MOVE.w (A7)+,dontwrite
00030A3E <AmiBlitz3.ab3@20139>   MOVE.l (A7)+,destbufferend
00030A44 <AmiBlitz3.ab3@20140>   MOVE.l (A7)+,destpointer
00030A4A <AmiBlitz3.ab3@20141>   MOVE.w (A7)+,regnum
00030A50 <AmiBlitz3.ab3@20144> JMP reget
00030A54 <AmiBlitz3.ab3@20147> oldlibat:   Ds.l 1
00030A5A <AmiBlitz3.ab3@20151>   LEA incdir,A0
00030A5E <AmiBlitz3.ab3@20154>   CMP.w #$22,D0
00030A62 <AmiBlitz3.ab3@20155>    BEQ.w JL_0_C052
00030A64 <AmiBlitz3.ab3@20156>   MOVE.b D0,(A0)+
00030A66 <AmiBlitz3.ab3@20157>   TST.w D0
00030A6A <AmiBlitz3.ab3@20158>    BEQ.w JL_0_C05A
00030A6E <AmiBlitz3.ab3@20159>    BMI.w syntaxerr
00030A74 <AmiBlitz3.ab3@20162>   JSR get1bytemain                                         ;_long
00030A78 <AmiBlitz3.ab3@20163> BRA.w JL_0_C03E
00030A7A <AmiBlitz3.ab3@20166> RTS
00030A80 <AmiBlitz3.ab3@20170>   LEA ptr_parameterstore,A1                                ;getparameter
00030A86 <AmiBlitz3.ab3@20171>   LEA incdir,A0
00030A88 <AmiBlitz3.ab3@20172>   MOVEQ.l #-$01,D2
00030A8A <AmiBlitz3.ab3@20175>     ADDQ.w #1,D2
00030A8C <AmiBlitz3.ab3@20176>     MOVE.b (A0)+,(A1)+
00030A90 <AmiBlitz3.ab3@20177>   BNE.w JL_0_C06A
00030A92 <AmiBlitz3.ab3@20178>   SUBQ.w #1,A1
00030A9C <AmiBlitz3.ab3@20180>   MOVE.w oldqflag,instringon
00030AA2 <AmiBlitz3.ab3@20181>   MOVEA.l lastsourcepos,A5
00030AA8 <AmiBlitz3.ab3@20185>   JSR get1bytemain
00030AAA <AmiBlitz3.ab3@20186>   TST.w D0
00030AAE <AmiBlitz3.ab3@20187>    BMI.w syntaxerr
00030AB2 <AmiBlitz3.ab3@20188>   CMP.b #$22,D0
00030AB6 <AmiBlitz3.ab3@20189>    BEQ.w JL_0_C078
00030AB8 <AmiBlitz3.ab3@20190>   MOVE.b D0,(A1)+
00030ABC <AmiBlitz3.ab3@20191>    BEQ.w JL_0_C096
00030ABE <AmiBlitz3.ab3@20192>   ADDQ.w #1,D2
00030AC2 <AmiBlitz3.ab3@20193> BRA.w JL_0_C078
00030AC4 <AmiBlitz3.ab3@20196>   TST.w D2
00030AC8 <AmiBlitz3.ab3@20197>    BEQ.w syntaxerr
00030ACA <AmiBlitz3.ab3@20198> RTS
00030AD0 <AmiBlitz3.ab3@20202>   MOVEA.l constantbase,A2
00030AD4 <AmiBlitz3.ab3@20203>   MOVEA.l $E(A2),A5
00030ADA <AmiBlitz3.ab3@20204>   MOVE.l a5,includesourceline
00030AE0 <AmiBlitz3.ab3@20205>   LEA inctab,a0
00030AE6 <AmiBlitz3.ab3@20206>   MOVE.w ininclude,d0
00030AEA <AmiBlitz3.ab3@20207>   MOVE.l $0(a0,d0*4),d0
00030AEE <AmiBlitz3.ab3@20208>   MOVEA.l $4(A2),A0
00030AF2 <AmiBlitz3.ab3@20210>   LEA $0(A0,D0.l),A0
00030AF4 <AmiBlitz3.ab3@20211>   MOVEA.l A5,A1
00030AF6 <AmiBlitz3.ab3@20214>     CMPA.l A0,A1
00030AFA <AmiBlitz3.ab3@20215>      BCC.w JL_0_C0C6
00030AFC <AmiBlitz3.ab3@20216>   TST.b (A1)+
00030B00 <AmiBlitz3.ab3@20217>   BNE.w JL_0_C0B6
00030B04 <AmiBlitz3.ab3@20218> BRA.w JL_0_C112
00030B08 <AmiBlitz3.ab3@20221>   MOVEA.l $4(A2),A1
00030B0A <AmiBlitz3.ab3@20224>   CMPA.l A0,A5
00030B0E <AmiBlitz3.ab3@20225>   BCC.w JL_0_C0D6
00030B10 <AmiBlitz3.ab3@20226>   MOVE.b (A5)+,(A1)+
00030B14 <AmiBlitz3.ab3@20227> BRA.w JL_0_C0CA
00030B16 <AmiBlitz3.ab3@20230>   MOVE.l A1,D0
00030B1A <AmiBlitz3.ab3@20231>   SUB.l $4(A2),D0
00030B20 <AmiBlitz3.ab3@20232>   LEA inctab,a0
00030B22 <AmiBlitz3.ab3@20233>   MOVEQ #0,d1
00030B28 <AmiBlitz3.ab3@20234>   MOVE.w ininclude,d1
00030B2C <AmiBlitz3.ab3@20235>   MOVE.l d0,0(a0,d1*4)
00030B32 <AmiBlitz3.ab3@20237>   MOVEA.l _dosbase,A6
00030B36 <AmiBlitz3.ab3@20238>   MOVE.l $8(A2),D1
00030B38 <AmiBlitz3.ab3@20239>   MOVE.l A1,D2
00030B3E <AmiBlitz3.ab3@20240>   MOVE.l D2,include_base
00030B44 <AmiBlitz3.ab3@20242>   MOVE.l #$10000000,d3                                     ;load whole file
00030B46 <AmiBlitz3.ab3@20243>   SUB.l D0,D3
00030B4A <AmiBlitz3.ab3@20244>    JSR _Read(A6)
00030B4C <AmiBlitz3.ab3@20245>   TST.l D0
00030B50 <AmiBlitz3.ab3@20246>    BMI.w error_reading_file
00030B54 <AmiBlitz3.ab3@20247>    BEQ.w JL_0_C120
00030B5A <AmiBlitz3.ab3@20248>    MOVE.l D0,include_length
00030B9C <AmiBlitz3.ab3@20249>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
00030BC6 <AmiBlitz3.ab3@20250>    !basic
00030BD6 <AmiBlitz3.ab3@20251>    ilen.l  = Peek.l(?include_length)
00030BE6 <AmiBlitz3.ab3@20252>    ibase.l = Peek.l(?include_base)
00030BF6 <AmiBlitz3.ab3@20253>    ido.l   = Peek.l(?include_process)
00030C06 <AmiBlitz3.ab3@20254>    *tn.preprocessor = Peek.l(?include_preprocessor)
00030C10 <AmiBlitz3.ab3@20255>    If ido
00030C22 <AmiBlitz3.ab3@20256>      ioffset.l = SkipXtraHeader{ibase,ilen}
00030C48 <AmiBlitz3.ab3@20257>      nilen.l = preproc_Tokenize{*tn,ibase+ioffset,ibase,ilen-ioffset}
00030C5A <AmiBlitz3.ab3@20258>      If nilen>0
00030C6A <AmiBlitz3.ab3@20262>        Poke.l ?include_length,nilen
00030C88 <AmiBlitz3.ab3@20265>    !asm
00030C92 <AmiBlitz3.ab3@20266>    MOVE.l #0,include_process
00030C98 <AmiBlitz3.ab3@20267>    MOVE.l include_length,D0
00030C9E <AmiBlitz3.ab3@20268>    LEA inctab,a0
00030CA0 <AmiBlitz3.ab3@20269>    MOVEQ #0,d1
00030CA6 <AmiBlitz3.ab3@20270>    MOVE.w ininclude,d1
00030CAA <AmiBlitz3.ab3@20271>    ADD.l d0,0(a0,d1*4)
00030CAE <AmiBlitz3.ab3@20273>   MOVEA.l $4(A2),A5
00030CB2 <AmiBlitz3.ab3@20275>    MOVE.l 0(a0,d1*4),d0
00030CB6 <AmiBlitz3.ab3@20276>   CLR.b $0(A5,D0.l)
00030CB8 <AmiBlitz3.ab3@20279>   MOVEA.l A5,A0
00030CBA <AmiBlitz3.ab3@20282>     TST.b (A0)+
00030CBE <AmiBlitz3.ab3@20283>   BNE.w JL_0_C114
00030CC2 <AmiBlitz3.ab3@20284>   MOVE.l A0,$E(A2)
00030CC4 <AmiBlitz3.ab3@20285> RTS
00030CC8 <AmiBlitz3.ab3@20288> include_length:        Dc.l 0                              ; for tokenizer!
00030CCC <AmiBlitz3.ab3@20289> include_base:          Dc.l 0
00030CD0 <AmiBlitz3.ab3@20290> include_process:       Dc.l 0
00030CD4 <AmiBlitz3.ab3@20291> include_preprocessor:  Dc.l 0
00030CD8 <AmiBlitz3.ab3@20295>   MOVE.l $8(A2),D1
00030CDE <AmiBlitz3.ab3@20297>   MOVEA.l _dosbase,A6
00030CE2 <AmiBlitz3.ab3@20298>   JSR _Close(a6)
00030CE8 <AmiBlitz3.ab3@20299>   MOVEA.l _execbase,A6
00030CEC <AmiBlitz3.ab3@20300>   MOVEA.l $4(A2),A1
00030CF2 <AmiBlitz3.ab3@20301>   MOVE.l #$400*8,D0                                        ;exit include
00030CF6 <AmiBlitz3.ab3@20303>   JSR _FreeVec(a6)
00030CFC <AmiBlitz3.ab3@20306>   MOVE.l (A2),constantbase
00030CFE <AmiBlitz3.ab3@20307>   MOVEA.l A2,A1
00030D00 <AmiBlitz3.ab3@20308>   MOVEQ.l #$00,D0
00030D04 <AmiBlitz3.ab3@20309>   MOVE.b $12(A2),D0
00030D0A <AmiBlitz3.ab3@20310>   MOVEA.l _execbase,A6
00030D10 <AmiBlitz3.ab3@20311>   MOVE.l mempool2,a0
00030D14 <AmiBlitz3.ab3@20312>   JSR _FreePooled(A6)
00030D1A <AmiBlitz3.ab3@20313>   JSR zero_includename
00030D20 <AmiBlitz3.ab3@20314>   SUBQ.w #1,ininclude
00030D24 <AmiBlitz3.ab3@20315>   BNE.w AJL_0_C09E
00030D2A <AmiBlitz3.ab3@20318>   LEA _include,a0
00030D2E <AmiBlitz3.ab3@20319>   MOVEM.l a0-a6/d0-d7,-(a7)
00030D34 <AmiBlitz3.ab3@20320>   LEA ptr_parameterstore,a1
00030D36 <AmiBlitz3.ab3@20323>     MOVE.b (a0)+,(a1)+
00030D3A <AmiBlitz3.ab3@20324>   BNE 'l1b
00030D3C <AmiBlitz3.ab3@20325>   MOVEQ #9,d2
00030D42 <AmiBlitz3.ab3@20326>   JSR findlabel2
00030D46 <AmiBlitz3.ab3@20327>   BNE 'd
00030D4A <AmiBlitz3.ab3@20328>   CLR.l 8(a2)
00030D4E <AmiBlitz3.ab3@20331>   MOVEM.l (a7)+,a0-a6/d0-d7
00030D50 <AmiBlitz3.ab3@20332> RTS
00030D56 <AmiBlitz3.ab3@20336>   MOVE.l unusedfunc,d0
00030D5A <AmiBlitz3.ab3@20337>   BEQ 'noclear
00030D5E <AmiBlitz3.ab3@20338>   MOVEM.l d0-d2/a0-a1/a6,-(a7)
00030D60 <AmiBlitz3.ab3@20341>     MOVE.l d0,a1
00030D64 <AmiBlitz3.ab3@20342>     MOVE.l 4(a1),d0
00030D66 <AmiBlitz3.ab3@20343>     MOVE.l (a1),d2
00030D6C <AmiBlitz3.ab3@20344>     MOVE.l _execbase,a6
00030D70 <AmiBlitz3.ab3@20345>     JSR _FreeMem(a6)
00030D72 <AmiBlitz3.ab3@20346>     MOVE.l d2,d0
00030D76 <AmiBlitz3.ab3@20347>   BNE 'f1
00030D7C <AmiBlitz3.ab3@20348>   CLR.l unusedfunc
00030D80 <AmiBlitz3.ab3@20349>   MOVEM.l (a7)+,a0-a1/a6/d0-d2
00030D82 <AmiBlitz3.ab3@20352> RTS
00030D88 <AmiBlitz3.ab3@20356>   MOVEA.l xinclude_base,A2
00030D8E <AmiBlitz3.ab3@20357>   CLR.l xinclude_base
00030D92 <AmiBlitz3.ab3@20360>     CMPA.w #$0,A2
00030D96 <AmiBlitz3.ab3@20361>      BEQ.w JL_0_C186
00030D98 <AmiBlitz3.ab3@20362>     MOVEQ.l #$00,D0
00030D9C <AmiBlitz3.ab3@20363>     MOVE.b 4+8(A2),D0
00030D9E <AmiBlitz3.ab3@20364>     MOVEA.l A2,A1
00030DA0 <AmiBlitz3.ab3@20365>     MOVEA.l (A2),A2
00030DA6 <AmiBlitz3.ab3@20366>     MOVEA.l _execbase,A6
00030DAC <AmiBlitz3.ab3@20367>     MOVE.l mempool2,a0
00030DB0 <AmiBlitz3.ab3@20368>     JSR _FreePooled(A6)
00030DB4 <AmiBlitz3.ab3@20369> BRA.w JL_0_C168
00030DB6 <AmiBlitz3.ab3@20372> RTS
00030DBC <AmiBlitz3.ab3@20376>   MOVEA.l constantbase,A2
00030DC2 <AmiBlitz3.ab3@20377>   CLR.l constantbase
00030DC6 <AmiBlitz3.ab3@20380>     CMPA.w #$0,A2
00030DCA <AmiBlitz3.ab3@20381>      BEQ.w JL_0_C1DC
00030DCE <AmiBlitz3.ab3@20382>     MOVE.l $8(A2),D1
00030DD2 <AmiBlitz3.ab3@20383>      BEQ.w JL_0_C1AE
00030DD8 <AmiBlitz3.ab3@20384>     MOVEA.l _dosbase,A6
00030DDC <AmiBlitz3.ab3@20385>      JSR _Close(A6)
00030DE0 <AmiBlitz3.ab3@20388>     MOVE.l $4(A2),D0
00030DE4 <AmiBlitz3.ab3@20389>      BEQ.w JL_0_C1C6
00030DE6 <AmiBlitz3.ab3@20390>     MOVEA.l D0,A1
00030DEC <AmiBlitz3.ab3@20391>     MOVE.l #$400*8,D0
00030DF2 <AmiBlitz3.ab3@20392>     MOVEA.l _execbase,A6
00030DF8 <AmiBlitz3.ab3@20393>     MOVE.l mempool,a0
00030DFC <AmiBlitz3.ab3@20394>     JSR _FreeVec(a6)
00030DFE <AmiBlitz3.ab3@20397>     MOVEQ.l #$00,D0
00030E02 <AmiBlitz3.ab3@20398>     MOVE.b $12(A2),D0
00030E04 <AmiBlitz3.ab3@20399>     MOVEA.l A2,A1
00030E06 <AmiBlitz3.ab3@20400>     MOVEA.l (A2),A2
00030E0C <AmiBlitz3.ab3@20401>     MOVEA.l _execbase,A6
00030E12 <AmiBlitz3.ab3@20402>     MOVE.l mempool2,a0
00030E16 <AmiBlitz3.ab3@20403>     JSR _FreePooled(A6)
00030E1A <AmiBlitz3.ab3@20404> BRA.w JL_0_C194
00030E1C <AmiBlitz3.ab3@20407> RTS
00030E1E <AmiBlitz3.ab3@20411>   SWAP D0
00030E22 <AmiBlitz3.ab3@20412>    BSR.w JL_0_C1E6
00030E24 <AmiBlitz3.ab3@20413>   SWAP D0
00030E2A <AmiBlitz3.ab3@20416>   MOVEA.l data2,A4
00030E30 <AmiBlitz3.ab3@20417>   CMPA.l allat,A4
00030E34 <AmiBlitz3.ab3@20418>    BCC.w JL_0_C200
00030E36 <AmiBlitz3.ab3@20419>   MOVE.w D0,(A4)+
00030E3C <AmiBlitz3.ab3@20420>   MOVE.l A4,data2
00030E3E <AmiBlitz3.ab3@20421> RTS
00030E46 <AmiBlitz3.ab3@20424>   MOVE.w #$FFFF,dontwrite
00030E4C <AmiBlitz3.ab3@20425>   ADDQ.l #2,data2
00030E4E <AmiBlitz3.ab3@20426> RTS
00030E54 <AmiBlitz3.ab3@20430>   MOVEA.l data2,A4
00030E5A <AmiBlitz3.ab3@20431>   CMPA.l allat,A4
00030E5E <AmiBlitz3.ab3@20432>    BCC.w JL_0_C22A
00030E60 <AmiBlitz3.ab3@20433>   MOVE.b D0,(A4)+
00030E66 <AmiBlitz3.ab3@20434>   MOVE.l A4,data2
00030E68 <AmiBlitz3.ab3@20435> RTS
00030E70 <AmiBlitz3.ab3@20438>   MOVE.w #$FFFF,dontwrite
00030E76 <AmiBlitz3.ab3@20439>   ADDQ.l #1,data2
00030E78 <AmiBlitz3.ab3@20440> RTS
00030E7C <AmiBlitz3.ab3@20444>   CMP.w #$22,D0
00030E80 <AmiBlitz3.ab3@20445>    BNE.w syntaxerr
00030E86 <AmiBlitz3.ab3@20449>   JSR get1bytemain
00030E8A <AmiBlitz3.ab3@20450>   CMP.b #$22,D0
00030E8E <AmiBlitz3.ab3@20451>    BEQ.w JL_0_C25A
00030E90 <AmiBlitz3.ab3@20452>   TST.w D0
00030E94 <AmiBlitz3.ab3@20453>    BEQ.w syntaxerr
00030E96 <AmiBlitz3.ab3@20454>   MOVE.b D0,(A0)+
00030E9A <AmiBlitz3.ab3@20455> BRA.w JL_0_C242
00030E9C <AmiBlitz3.ab3@20458>   CLR.b (A0)
00030E9E <AmiBlitz3.ab3@20459> RTS
00030EA0 <AmiBlitz3.ab3@20462>   TST.l D3
00030EA2 <AmiBlitz3.ab3@20463> RTS
00030EA8 <AmiBlitz3.ab3@20466>   LEA ptr_parameterstore,A0
00030EAE <AmiBlitz3.ab3@20467>   LEA namebuff2,A1
00030EB0 <AmiBlitz3.ab3@20470>     MOVE.b (A0)+,D0
00030EB4 <AmiBlitz3.ab3@20471>     BEQ.w JL_0_C27C
00030EB6 <AmiBlitz3.ab3@20472>   CMP.b (A1)+,D0
00030EBA <AmiBlitz3.ab3@20473>   BEQ.w JL_0_C26E
00030EBC <AmiBlitz3.ab3@20474> RTS
00030EBE <AmiBlitz3.ab3@20477>   TST.b (A1)
00030EC2 <AmiBlitz3.ab3@20478>   BNE.w JL_0_C284
00030EC4 <AmiBlitz3.ab3@20479> RTS
00030EC8 <AmiBlitz3.ab3@20482>   CMP.w #$1,D0
00030ECA <AmiBlitz3.ab3@20483> RTS
00030ECE <AmiBlitz3.ab3@20487>   CMP.w #$2E,D0                                            ;dodeftype
00030ED2 <AmiBlitz3.ab3@20488>    BNE.w syntaxerr
00030ED6 <AmiBlitz3.ab3@20489>   BSR.w getparameter2
00030EDC <AmiBlitz3.ab3@20490>   LEA newtypebase,A2
00030EE0 <AmiBlitz3.ab3@20491>   BSR.w findtype
00030EE4 <AmiBlitz3.ab3@20492>    BNE.w notypeerr
00030EEA <AmiBlitz3.ab3@20493>   TST.b declare
00030EEE <AmiBlitz3.ab3@20494>    BNE 'l1
00030EF4 <AmiBlitz3.ab3@20495>   TST.b declare2
00030EF8 <AmiBlitz3.ab3@20496>    BEQ 'l2
00030F00 <AmiBlitz3.ab3@20499>   MOVE.b #2,nowdeclare
00030F06 <AmiBlitz3.ab3@20503>   JSR reget
00030F0A <AmiBlitz3.ab3@20504>    BNE.w JL_0_C2B4
00030F10 <AmiBlitz3.ab3@20505>   MOVE.l A2,defaulttype
00030F12 <AmiBlitz3.ab3@20506> RTS
00030F18 <AmiBlitz3.ab3@20509>   MOVE.l defaulttype,-(A7)
00030F1E <AmiBlitz3.ab3@20510>   MOVE.l A2,defaulttype
00030F22 <AmiBlitz3.ab3@20513>   BSR.w getparameter
00030F26 <AmiBlitz3.ab3@20514>    BSR.w JL_0_8E3C
00030F2A <AmiBlitz3.ab3@20515>   CMP.w #$2C,D0
00030F2E <AmiBlitz3.ab3@20516>    BNE.w JL_0_C2D8
00030F34 <AmiBlitz3.ab3@20517>    JSR get1bytemain                                        ; was BSR.w
00030F38 <AmiBlitz3.ab3@20518> BRA.w JL_0_C2C0
00030F3E <AmiBlitz3.ab3@20521>   MOVE.l (A7)+,defaulttype
00030F40 <AmiBlitz3.ab3@20522> RTS
00030F44 <AmiBlitz3.ab3@20526>   LEA $4(A5),A2                                            ;fehler function
00030F46 <AmiBlitz3.ab3@20529>   MOVE.l A2,D0
00030F4A <AmiBlitz3.ab3@20532>   BSR.w getparameter
00030F4E <AmiBlitz3.ab3@20533>   BSR.w JL_0_8E3C
00030F52 <AmiBlitz3.ab3@20534>   BSR.w calcvar
00030F56 <AmiBlitz3.ab3@20535>   CMP.b #$7,D2
00030F5A <AmiBlitz3.ab3@20536>    BNE.w mismatcherr
00030F5E <AmiBlitz3.ab3@20537>   MOVE.w varmode(PC),-(A7)
00030F62 <AmiBlitz3.ab3@20538>   CMP.w #$3D,D0
00030F66 <AmiBlitz3.ab3@20539>    BNE.w syntaxerr
00030F6A <AmiBlitz3.ab3@20540>   BTST #$F,D2
00030F6E <AmiBlitz3.ab3@20541>    BNE.w JL_0_C31C
00030F72 <AmiBlitz3.ab3@20542>   MOVE.w JL_0_C2E0(PC),D1
00030F76 <AmiBlitz3.ab3@20543>   BSR.w pokewda5s
00030F78 <AmiBlitz3.ab3@20544>   MOVE.w D3,D1
00030F7C <AmiBlitz3.ab3@20545>   BSR.w writeword
00030F80 <AmiBlitz3.ab3@20548>   MOVE.w L_0_C2E4(PC),D1
00030F84 <AmiBlitz3.ab3@20549>   BSR.w writeword
00030F8A <AmiBlitz3.ab3@20550>   ADDQ.w #1,regnum
00030F8C <AmiBlitz3.ab3@20551>   MOVEQ.l #$03,D2
00030F90 <AmiBlitz3.ab3@20552>   BSR.w eval
00030F96 <AmiBlitz3.ab3@20553>   MOVE.l #$D000,D1
00030F9C <AmiBlitz3.ab3@20554>   MOVE.l d1,lastinstruction
00030F9E <AmiBlitz3.ab3@20555>   TST.w (A7)+
00030FA2 <AmiBlitz3.ab3@20556>    BEQ.w Atokejsr
00030FA4 <AmiBlitz3.ab3@20557>   ADDQ.w #1,D1
00030FA8 <AmiBlitz3.ab3@20558> BRA.w Atokejsr
00030FAA <AmiBlitz3.ab3@20562>   MOVE.w D0,D1
00030FAE <AmiBlitz3.ab3@20563>    BPL.w syntaxerr
00030FB2 <AmiBlitz3.ab3@20564>   BCLR #$F,D1
00030FB8 <AmiBlitz3.ab3@20565>    JSR searchinstr
00030FBC <AmiBlitz3.ab3@20566>   MOVE.l $12(A2),D0
00030FC0 <AmiBlitz3.ab3@20567>   TST.w -$2(A2,D0.L)
00030FC4 <AmiBlitz3.ab3@20568>    BEQ.w freeerr
00030FC6 <AmiBlitz3.ab3@20569>   MOVEQ.l #$02,D2
00030FC8 <AmiBlitz3.ab3@20570>   MOVE.l A2,-(A7)
00030FCC <AmiBlitz3.ab3@20571>    BSR.w eval
00030FCE <AmiBlitz3.ab3@20572>   MOVEA.l (A7)+,A2
00030FD4 <AmiBlitz3.ab3@20573>   MOVE.l A2,mymaxlib
00030FD8 <AmiBlitz3.ab3@20574>   ADDA.l $12(A2),A2
00030FDE <AmiBlitz3.ab3@20575>   TST.b debugmode
00030FE2 <AmiBlitz3.ab3@20576>    BEQ.w JL_0_C3A8
00030FE8 <AmiBlitz3.ab3@20577>   MOVE.w regnum,D1
00030FEA <AmiBlitz3.ab3@20578>   LSL.w #8,D1
00030FEC <AmiBlitz3.ab3@20579>   LSL.w #1,D1
00030FF0 <AmiBlitz3.ab3@20580>   ORI.w #$B07C,D1
00030FF4 <AmiBlitz3.ab3@20581>    BSR.w writeword
00030FF8 <AmiBlitz3.ab3@20582>   MOVE.w -$4(A2),D1
00030FFC <AmiBlitz3.ab3@20583>    BSR.w writeword
00031002 <AmiBlitz3.ab3@20584>   MOVE.l maxchk,D1
00031006 <AmiBlitz3.ab3@20585>    BSR.w writelong
00031008 <AmiBlitz3.ab3@20586>   MOVE.l A2,-(A7)
0003100C <AmiBlitz3.ab3@20587>   MOVE.w #$C30A,D1
00031010 <AmiBlitz3.ab3@20588>    BSR.w Atokejsr
00031012 <AmiBlitz3.ab3@20589>   MOVEA.l (A7)+,A2
00031016 <AmiBlitz3.ab3@20592>   MOVE.w -$2(A2),D2
0003101C <AmiBlitz3.ab3@20595>   MOVE.w regnum,D1
00031022 <AmiBlitz3.ab3@20596>   OR.w lslimm,D1
00031026 <AmiBlitz3.ab3@20597>   CMP.w #$8,D2
0003102A <AmiBlitz3.ab3@20598>    BCS.w JL_0_C3CE
0003102E <AmiBlitz3.ab3@20599>    BSR.w writeword
00031030 <AmiBlitz3.ab3@20600>   SUBQ.w #8,D2
00031034 <AmiBlitz3.ab3@20601>    BNE.w JL_0_C3AC
00031038 <AmiBlitz3.ab3@20602> BRA.w JL_0_C3DA
0003103A <AmiBlitz3.ab3@20605>   MOVE.w D2,D0
0003103C <AmiBlitz3.ab3@20606>   LSL.w #8,D0
0003103E <AmiBlitz3.ab3@20607>   LSL.w #1,D0
00031040 <AmiBlitz3.ab3@20608>   OR.w D0,D1
00031044 <AmiBlitz3.ab3@20609>   BSR.w writeword
00031046 <AmiBlitz3.ab3@20612> RTS
0003104A <AmiBlitz3.ab3@20617>   Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0003104C <AmiBlitz3.ab3@20618>   Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
00031050 <AmiBlitz3.ab3@20622> mymaxlib:  Ds.l 1
00031054 <AmiBlitz3.ab3@20626>   BSR.w JL_0_C340
00031058 <AmiBlitz3.ab3@20627>   LEA free(PC),A0
0003105C <AmiBlitz3.ab3@20628>   LEA freef(PC),A1
00031062 <AmiBlitz3.ab3@20629>   MOVE.w -$6(A2),$2(A0)
00031066 <AmiBlitz3.ab3@20630>   BSR.w pokecode
0003106A <AmiBlitz3.ab3@20631>   MOVE.l -$A(A2),D1
0003106E <AmiBlitz3.ab3@20634>   BEQ.w nosuperr
00031072 <AmiBlitz3.ab3@20635>   MOVEA.l mymaxlib(PC),A2
00031076 <AmiBlitz3.ab3@20636> BRA.w Amakelibsub
0003107A <AmiBlitz3.ab3@20641>   BSR.w JL_0_C340
00031080 <AmiBlitz3.ab3@20642>   LEA use,A0
00031086 <AmiBlitz3.ab3@20643>   LEA usef,A1
0003108C <AmiBlitz3.ab3@20644>   MOVE.w -$6(A2),$2(A0)
00031092 <AmiBlitz3.ab3@20645>   MOVE.w -$6(A2),-$2(A1)
00031096 <AmiBlitz3.ab3@20646>   ADDQ.w #4,-$2(A1)
0003109A <AmiBlitz3.ab3@20647>   BSR.w pokecode
0003109E <AmiBlitz3.ab3@20648>   MOVE.l -$E(A2),D1
000310A2 <AmiBlitz3.ab3@20649> BRA.w maxjsr
000310A8 <AmiBlitz3.ab3@20653>   JSR get1bytemain
000310AE <AmiBlitz3.ab3@20657>   MOVE.l firstiff,D0
000310B2 <AmiBlitz3.ab3@20658>    BEQ.w noiferr
000310B4 <AmiBlitz3.ab3@20659>   MOVEA.l D0,A0
000310BA <AmiBlitz3.ab3@20660>   CMPI.b #$1,$D(A0)
000310BE <AmiBlitz3.ab3@20661>    BEQ.w illelseerr
000310C2 <AmiBlitz3.ab3@20662>   MOVE.w #$6000,D1
000310C8 <AmiBlitz3.ab3@20664>     TST.b fast
000310CC <AmiBlitz3.ab3@20665>     BEQ 'l1
000310D2 <AmiBlitz3.ab3@20666>     OR.l #$ff,d1
000310D6 <AmiBlitz3.ab3@20667>     BSR writeword
000310D8 <AmiBlitz3.ab3@20671>   SWAP D1
000310DC <AmiBlitz3.ab3@20672>   BSR.w writelong
000310DE <AmiBlitz3.ab3@20673>   MOVEQ.l #$00,D1
000310E2 <AmiBlitz3.ab3@20674>   BSR.w AJL_0_D7B8
000310EA <AmiBlitz3.ab3@20675>   MOVE.l destpointer,$8(A0)
000310EE <AmiBlitz3.ab3@20676> BRA.w do_then
000310F4 <AmiBlitz3.ab3@20680>   LEA ptr_parameterstore,A0
000310F6 <AmiBlitz3.ab3@20681>   MOVE.l A0,-(A7)
000310FA <AmiBlitz3.ab3@20682>   BSR.w JL_0_C23A
000310FE <AmiBlitz3.ab3@20683> BRA.w handle_compileerror
00031102 <AmiBlitz3.ab3@20687>   BSR.w JL_0_BF6A
00031104 <AmiBlitz3.ab3@20688>   MOVEQ.l #$05,D1
0003110E <AmiBlitz3.ab3@20690>   MOVE.w oldqflag,instringon
00031114 <AmiBlitz3.ab3@20691>   MOVEA.l lastsourcepos,A5
0003111A <AmiBlitz3.ab3@20692>   LEA AJL_0_C25E,A0
0003111E <AmiBlitz3.ab3@20693> BRA.w JL_0_C4B4
00031124 <AmiBlitz3.ab3@20697>   LEA ptr_parameterstore,A0
00031128 <AmiBlitz3.ab3@20698>   BSR.w JL_0_C23A
0003112E <AmiBlitz3.ab3@20699>   JSR get1bytemain
00031132 <AmiBlitz3.ab3@20700>   BSR.w JL_0_CCA8
00031138 <AmiBlitz3.ab3@20701>   LEA namebuff2,A0
0003113C <AmiBlitz3.ab3@20702>   BSR.w JL_0_C23A
00031142 <AmiBlitz3.ab3@20703>   LEA AJL_0_C262,A0
00031144 <AmiBlitz3.ab3@20706>   LSL.w #2,D1
0003114A <AmiBlitz3.ab3@20707>   LEA CIF_branches,A1
0003114E <AmiBlitz3.ab3@20708>   MOVE.l $0(A1,D1.W),-(A7)
00031150 <AmiBlitz3.ab3@20709>   MOVEQ.l #-$01,D1
00031152 <AmiBlitz3.ab3@20712>   JSR (A0)
00031154 <AmiBlitz3.ab3@20714>   MOVEA.l (A7)+,A1
00031156 <AmiBlitz3.ab3@20716> JMP (A1)
0003115A <AmiBlitz3.ab3@20720>   BEQ.w JL_0_C4F6
0003115E <AmiBlitz3.ab3@20721> BRA.w JL_0_C4F4
00031162 <AmiBlitz3.ab3@20725>   BNE.w JL_0_C4F6
00031166 <AmiBlitz3.ab3@20726> BRA.w JL_0_C4F4
0003116A <AmiBlitz3.ab3@20730>   BLT.w JL_0_C4F6
0003116E <AmiBlitz3.ab3@20731> BRA.w JL_0_C4F4
00031172 <AmiBlitz3.ab3@20735>   BLE.w JL_0_C4F6
00031176 <AmiBlitz3.ab3@20736> BRA.w JL_0_C4F4
0003117A <AmiBlitz3.ab3@20740>   BGT.w JL_0_C4F6
0003117E <AmiBlitz3.ab3@20741> BRA.w JL_0_C4F4
00031182 <AmiBlitz3.ab3@20745>   BGE.w JL_0_C4F6
00031184 <AmiBlitz3.ab3@20748>   MOVEQ.l #$00,D1
0003118A <AmiBlitz3.ab3@20751>   MOVEA.l concomsp,A0
00031190 <AmiBlitz3.ab3@20752>   MOVE.w skipcode,(A0)+
00031196 <AmiBlitz3.ab3@20753>   MOVE.l A0,concomsp
0003119C <AmiBlitz3.ab3@20754>   MOVE.w D1,skipcode
000311A2 <AmiBlitz3.ab3@20755>   JSR get1bytemain
000311A6 <AmiBlitz3.ab3@20756>    BNE.w syntaxerr
000311AC <AmiBlitz3.ab3@20757> JMP bakup
000311B4 <AmiBlitz3.ab3@20761> rescode:   Dc.b $2B,$7c,$00,$00,$00,$00 :   Ds.w 1         ;MOVE.L  #$00000000,$0000(A5)
000311B8 <AmiBlitz3.ab3@20762> rescode2:  Dc.b $2B,$40                 :   Ds.w 1         ;MOVE.L  D0,$0000(A5)
000311BC <AmiBlitz3.ab3@20769>   MOVE.w #$FC17,D1
000311C2 <AmiBlitz3.ab3@20770>   JSR uselib
000311C8 <AmiBlitz3.ab3@20772>   JSR reget
000311CC <AmiBlitz3.ab3@20773>    BEQ.w do_Restore__resbeg
000311D0 <AmiBlitz3.ab3@20774>   BSR.w JL_0_AE22                                          ;get label name!
000311D4 <AmiBlitz3.ab3@20775>   MOVE.w rescode(PC),D1
000311D8 <AmiBlitz3.ab3@20776>   BSR.w writeword
000311DE <AmiBlitz3.ab3@20777>   JSR addoff                                               ;add offset
000311E2 <AmiBlitz3.ab3@20778>   MOVE.l $C(A2),D1
000311E6 <AmiBlitz3.ab3@20779>   BSR.w writelong
000311EA <AmiBlitz3.ab3@20780>   MOVE.w rescode+6(PC),D1
000311EE <AmiBlitz3.ab3@20781>   BSR.w writeword
000311F2 <AmiBlitz3.ab3@20782>   MOVE.l $4(A2),D1                                         ;is it outstanding?
000311F6 <AmiBlitz3.ab3@20783>   BEQ.w do_Restore__no
000311F8 <AmiBlitz3.ab3@20785>   MOVEA.l D1,A1
000311FC <AmiBlitz3.ab3@20786>   ADDQ.l #1,$4(A1)                                         ;make odd - flag for data reference.
000311FE <AmiBlitz3.ab3@20787> RTS
00031200 <AmiBlitz3.ab3@20792> RTS
00031204 <AmiBlitz3.ab3@20795>   MOVE.w #$CD00,D1
0003120A <AmiBlitz3.ab3@20796>   JSR Atokejsr
0003120E <AmiBlitz3.ab3@20797>   MOVE.l rescode2(PC),D1
00031214 <AmiBlitz3.ab3@20798> JMP writelong
00031218 <AmiBlitz3.ab3@20802>   MOVE.w #$FC17,D1
0003121E <AmiBlitz3.ab3@20803>   JSR uselib
00031224 <AmiBlitz3.ab3@20806>   MOVE.l dataget,D1
00031228 <AmiBlitz3.ab3@20807>   BSR.w writelong
0003122C <AmiBlitz3.ab3@20808>   BSR.w getparameter
00031230 <AmiBlitz3.ab3@20809>   BSR.w JL_0_8E3C
00031234 <AmiBlitz3.ab3@20810>   BSR.w calcvar
00031238 <AmiBlitz3.ab3@20811>   BTST #$E,D2
0003123C <AmiBlitz3.ab3@20812>    BEQ.w JL_0_C5A6
00031240 <AmiBlitz3.ab3@20813>   MOVE.b #$6,D2
00031242 <AmiBlitz3.ab3@20816>   TST.b D2
00031246 <AmiBlitz3.ab3@20817>    BEQ.w noleterr
0003124C <AmiBlitz3.ab3@20818>   TST.b debugmode
00031250 <AmiBlitz3.ab3@20819>    BEQ.w JL_0_C5D0
00031254 <AmiBlitz3.ab3@20820>   MOVE.w #$7000,D1
00031256 <AmiBlitz3.ab3@20821>   MOVE.b D2,D1
0003125A <AmiBlitz3.ab3@20822>   ANDI.b #$F,D1
0003125E <AmiBlitz3.ab3@20823>   BSR.w writeword
00031262 <AmiBlitz3.ab3@20824>   MOVE.w #$C310,D1
00031264 <AmiBlitz3.ab3@20825>   MOVE.w D2,-(A7)
00031268 <AmiBlitz3.ab3@20826>   BSR.w Atokejsr
0003126A <AmiBlitz3.ab3@20827>   MOVE.w (A7)+,D2
0003126E <AmiBlitz3.ab3@20830>   CMP.b #$7,D2
00031272 <AmiBlitz3.ab3@20831>    BEQ.w JL_0_C684
00031276 <AmiBlitz3.ab3@20832>   CMP.b #$1,D2
0003127A <AmiBlitz3.ab3@20833>    BNE.w JL_0_C62A
00031280 <AmiBlitz3.ab3@20834>   LEA dataletb2,A0
00031286 <AmiBlitz3.ab3@20835>   LEA dataletb2f,A1
0003128A <AmiBlitz3.ab3@20836>   BTST #$F,D2
0003128E <AmiBlitz3.ab3@20837>    BEQ.w JL_0_C5FC
00031292 <AmiBlitz3.ab3@20838>   BSR.w pokecode
00031296 <AmiBlitz3.ab3@20839> BRA.w JL_0_C668
0003129C <AmiBlitz3.ab3@20842>   LEA dataletb,A0
000312A2 <AmiBlitz3.ab3@20843>   LEA dataletbf,A1
000312A8 <AmiBlitz3.ab3@20844>   TST.w varmode
000312AC <AmiBlitz3.ab3@20845>    BEQ.w JL_0_C61E
000312B2 <AmiBlitz3.ab3@20846>   LEA dataletbl,A0
000312B8 <AmiBlitz3.ab3@20847>   LEA dataletblf,A1
000312BC <AmiBlitz3.ab3@20850>   MOVE.w D3,$4(A0)
000312C0 <AmiBlitz3.ab3@20851>   BSR.w pokecode
000312C4 <AmiBlitz3.ab3@20852> BRA.w JL_0_C668
000312CA <AmiBlitz3.ab3@20855>   LEA dataletw,A0
000312CE <AmiBlitz3.ab3@20856>   CMP.b #$3,D2
000312D2 <AmiBlitz3.ab3@20857>    BCS.w JL_0_C63E
000312D8 <AmiBlitz3.ab3@20858>   LEA dataletl,A0
000312DC <AmiBlitz3.ab3@20861>   BTST #$F,D2
000312E0 <AmiBlitz3.ab3@20862>    BEQ.w JL_0_C652
000312E4 <AmiBlitz3.ab3@20863>   MOVE.w $4(A0),D1
000312E8 <AmiBlitz3.ab3@20864>    BSR.w writeword
000312EC <AmiBlitz3.ab3@20865> BRA.w JL_0_C668
000312F2 <AmiBlitz3.ab3@20868>   TST.w varmode
000312F6 <AmiBlitz3.ab3@20869>    BEQ.w JL_0_C65E
000312F8 <AmiBlitz3.ab3@20870>   ADDQ.w #6,A0
000312FC <AmiBlitz3.ab3@20873>   MOVE.w D3,$2(A0)
000312FE <AmiBlitz3.ab3@20874>   MOVE.l (A0),D1
00031302 <AmiBlitz3.ab3@20875>   BSR.w writelong
00031308 <AmiBlitz3.ab3@20878>   MOVE.l dataput,D1
0003130C <AmiBlitz3.ab3@20879>    BSR.w writelong
00031310 <AmiBlitz3.ab3@20880>   CMP.w #$2C,D0
00031314 <AmiBlitz3.ab3@20881>    BEQ.w JL_0_C67C
00031316 <AmiBlitz3.ab3@20882> RTS
0003131C <AmiBlitz3.ab3@20885>   JSR get1bytemain
00031320 <AmiBlitz3.ab3@20886> BRA.w JL_0_C584
00031326 <AmiBlitz3.ab3@20890>   MOVE.w stlenget,D1
0003132A <AmiBlitz3.ab3@20891>    BSR.w writeword
0003132E <AmiBlitz3.ab3@20892>   BTST #$F,D2
00031332 <AmiBlitz3.ab3@20893>    BNE.w JL_0_C6C0
00031338 <AmiBlitz3.ab3@20894>   TST.w varmode
0003133C <AmiBlitz3.ab3@20895>    BEQ.w JL_0_C6B0
00031342 <AmiBlitz3.ab3@20896>   MOVE.w D3,leaampl+2
00031348 <AmiBlitz3.ab3@20897>   MOVE.l leaampl,D1
0003134C <AmiBlitz3.ab3@20898> BRA.w JL_0_C6BC
00031352 <AmiBlitz3.ab3@20901>   MOVE.w D3,leaamp+2
00031358 <AmiBlitz3.ab3@20902>   MOVE.l leaamp,D1
0003135C <AmiBlitz3.ab3@20905>   BSR.w writelong
00031360 <AmiBlitz3.ab3@20908>   MOVE.w #$C701,D1
00031366 <AmiBlitz3.ab3@20909>   MOVE.w varmode,D2
0003136A <AmiBlitz3.ab3@20910>    BEQ.w JL_0_C6D0
0003136C <AmiBlitz3.ab3@20911>   SUBQ.w #1,D1
00031370 <AmiBlitz3.ab3@20914>   BSR.w Atokejsr
00031378 <AmiBlitz3.ab3@20915>   MOVE.w #$FFFF,lasta6
0003137E <AmiBlitz3.ab3@20916>   LEA stalign,A0
00031384 <AmiBlitz3.ab3@20917>   LEA stalignf,A1
00031388 <AmiBlitz3.ab3@20918>   BSR.w pokecode
0003138C <AmiBlitz3.ab3@20919> BRA.w JL_0_C668
00031390 <AmiBlitz3.ab3@20923>   CMP.w #$2E,D0                                            ;definecode 'lb 'lw 'll
00031394 <AmiBlitz3.ab3@20924>    BNE.w JL_0_C720
0003139A <AmiBlitz3.ab3@20925>   JSR get1bytemain
0003139E <AmiBlitz3.ab3@20926>   CMP.w #$77,D0
000313A2 <AmiBlitz3.ab3@20927>    BEQ.w JL_0_C71C
000313A6 <AmiBlitz3.ab3@20928>   CMP.w #$62,D0
000313AA <AmiBlitz3.ab3@20929>    BEQ.w JL_0_C718
000313AE <AmiBlitz3.ab3@20930>   CMP.w #"s",d0
000313B2 <AmiBlitz3.ab3@20931>   BEQ single3
000313B6 <AmiBlitz3.ab3@20932>   CMP.w #"d",d0
000313BA <AmiBlitz3.ab3@20933>   BEQ double3
000313BE <AmiBlitz3.ab3@20934>   CMP.w #$6C,D0
000313C2 <AmiBlitz3.ab3@20935>    BNE.w syntaxerr
000313C4 <AmiBlitz3.ab3@20936>   MOVEQ.l #$02,D1
000313C6 <AmiBlitz3.ab3@20937> RTS
000313CE <AmiBlitz3.ab3@20941>   MOVE.b #1,iee
000313D0 <AmiBlitz3.ab3@20942>   MOVEQ.l #$3,d1
000313D2 <AmiBlitz3.ab3@20943> RTS
000313DA <AmiBlitz3.ab3@20947>   MOVE.b #1,iee
000313DC <AmiBlitz3.ab3@20948>   MOVEQ.l #$4,d1
000313DE <AmiBlitz3.ab3@20949> RTS
000313E0 <AmiBlitz3.ab3@20953>   MOVEQ.l #$00,D1
000313E2 <AmiBlitz3.ab3@20954> RTS
000313E4 <AmiBlitz3.ab3@20958>   MOVEQ.l #$01,D1
000313E6 <AmiBlitz3.ab3@20959> RTS
000313E8 <AmiBlitz3.ab3@20963>   MOVEQ.l #$01,D1
000313EE <AmiBlitz3.ab3@20964> JMP bakup
000313F2 <AmiBlitz3.ab3@20968>   BSR.w JL_0_C6F0
000313F4 <AmiBlitz3.ab3@20970>   MOVE.w D1,-(A7)
000313F8 <AmiBlitz3.ab3@20971>    BSR.w AJL_0_BF6E
000313FC <AmiBlitz3.ab3@20972>   CMP.w #$2C,D0
00031400 <AmiBlitz3.ab3@20973>    BNE.w syntaxerr
00031402 <AmiBlitz3.ab3@20974>   MOVE.l D3,-(A7)
00031406 <AmiBlitz3.ab3@20975>    BSR.w AJL_0_BF6E
00031408 <AmiBlitz3.ab3@20976>   MOVE.l D3,D1
0003140A <AmiBlitz3.ab3@20977>   MOVE.l (A7)+,D3
0003140C <AmiBlitz3.ab3@20978>   MOVE.w (A7)+,D2
00031410 <AmiBlitz3.ab3@20979>    BEQ.w JL_0_C774
00031414 <AmiBlitz3.ab3@20983>   CMP.w #$1,D2
00031418 <AmiBlitz3.ab3@20984>    BEQ.w JL_0_C768
0003141A <AmiBlitz3.ab3@20987>   SWAP D1
0003141E <AmiBlitz3.ab3@20988>    BSR.w writeword
00031420 <AmiBlitz3.ab3@20989>   SWAP D1
00031424 <AmiBlitz3.ab3@20990>    BSR.w writeword
00031426 <AmiBlitz3.ab3@20991>   SUBQ.l #1,D3
0003142A <AmiBlitz3.ab3@20992>    BNE.w JL_0_C754
0003142C <AmiBlitz3.ab3@20993> RTS
00031430 <AmiBlitz3.ab3@20996>    BSR.w writeword
00031432 <AmiBlitz3.ab3@20997>   SUBQ.l #1,D3
00031436 <AmiBlitz3.ab3@20998>    BNE.w JL_0_C768
00031438 <AmiBlitz3.ab3@20999> RTS
0003143C <AmiBlitz3.ab3@21002>    BSR.w writebyte
0003143E <AmiBlitz3.ab3@21003>   SUBQ.l #1,D3
00031442 <AmiBlitz3.ab3@21004>    BNE.w JL_0_C774
00031444 <AmiBlitz3.ab3@21005> RTS
00031448 <AmiBlitz3.ab3@21009>   BSR.w JL_0_C6F0                                          ;definestorage
0003144A <AmiBlitz3.ab3@21010>   MOVE.w D1,-(A7)
0003144E <AmiBlitz3.ab3@21011>   BSR.w AJL_0_BF6E
00031450 <AmiBlitz3.ab3@21012>   MOVE.w (A7)+,D1
00031452 <AmiBlitz3.ab3@21013>   LSL.l D1,D3
00031454 <AmiBlitz3.ab3@21014>   MOVE.l d3,d0
00031458 <AmiBlitz3.ab3@21015>   BEQ 'll5
0003145A <AmiBlitz3.ab3@21016>   MOVEQ #0,d1
00031460 <AmiBlitz3.ab3@21019>     JSR writebyte
00031462 <AmiBlitz3.ab3@21020>     SUBQ.l #1,d3
00031466 <AmiBlitz3.ab3@21021>   BNE.s 'll10
00031468 <AmiBlitz3.ab3@21024> RTS
0003146A <AmiBlitz3.ab3@21028>   MOVE.w D0,-(A7)
00031470 <AmiBlitz3.ab3@21029>   LEA dummyasm,A0
00031476 <AmiBlitz3.ab3@21030>   MOVEA.l destpointer,A1
00031480 <AmiBlitz3.ab3@21031>   MOVE.w asmlen2,asmlen
00031486 <AmiBlitz3.ab3@21032>   JSR insasm
00031488 <AmiBlitz3.ab3@21033>   MOVE.w (A7)+,D0
0003148A <AmiBlitz3.ab3@21034> RTS
0003148E <AmiBlitz3.ab3@21038>   BSR.w JL_0_C6F0
00031498 <AmiBlitz3.ab3@21040>   MOVE.l #ptr_parameterstore,asmbuff
0003149A <AmiBlitz3.ab3@21041>   TST.w D1
0003149E <AmiBlitz3.ab3@21042>    BEQ.w JL_0_C7EE
000314A2 <AmiBlitz3.ab3@21043>   CMP.w #$1,D1
000314A6 <AmiBlitz3.ab3@21044>    BEQ.w JL_0_C844
000314AA <AmiBlitz3.ab3@21045>   CMP.w #$2,d1
000314AE <AmiBlitz3.ab3@21046>    BEQ long
000314B2 <AmiBlitz3.ab3@21047>   CMP.w #$3,d1
000314B6 <AmiBlitz3.ab3@21048>    BEQ single
000314B8 <AmiBlitz3.ab3@21049>    MOVEQ.l #$0d,D3
000314BE <AmiBlitz3.ab3@21055>    JSR asmconst
000314C2 <AmiBlitz3.ab3@21056>    BSR.w JL_0_C796
000314C6 <AmiBlitz3.ab3@21057>    BSR.w writelong
000314CA <AmiBlitz3.ab3@21058>    BSR   writelong
000314CE <AmiBlitz3.ab3@21059>   CMP.w #$2C,D0
000314D2 <AmiBlitz3.ab3@21060>    BEQ.w JL_0_C7D8b
000314D4 <AmiBlitz3.ab3@21061> RTS
000314D6 <AmiBlitz3.ab3@21065>   MOVEQ.l #$0B,D3
000314DE <AmiBlitz3.ab3@21069>   MOVE.b #1,_dcb
000314E4 <AmiBlitz3.ab3@21072>   JSR asmconst
000314EA <AmiBlitz3.ab3@21073>   CLR.b _dcb
000314EE <AmiBlitz3.ab3@21074>   BSR.w JL_0_C796
000314F2 <AmiBlitz3.ab3@21075>   BSR writebyte
000314F6 <AmiBlitz3.ab3@21076>   BSR writebyte
000314FA <AmiBlitz3.ab3@21077>   BSR writebyte                                            ;long
000314FE <AmiBlitz3.ab3@21078>   BSR writebyte
00031502 <AmiBlitz3.ab3@21079>   CMP.w #$2C,D0
00031506 <AmiBlitz3.ab3@21080>    BEQ.w JL_0_C7D8
00031508 <AmiBlitz3.ab3@21081> RTS
0003150A <AmiBlitz3.ab3@21085>   MOVEQ.l #$0c,D3
00031512 <AmiBlitz3.ab3@21089>   MOVE.b #1,_dcb
00031518 <AmiBlitz3.ab3@21092>   JSR asmconst
0003151E <AmiBlitz3.ab3@21093>   CLR.b _dcb
00031522 <AmiBlitz3.ab3@21094>   BSR.w JL_0_C796
00031526 <AmiBlitz3.ab3@21095>   BSR.w writebyte
0003152A <AmiBlitz3.ab3@21096>   BSR.w writebyte
0003152E <AmiBlitz3.ab3@21097>   BSR.w writebyte
00031532 <AmiBlitz3.ab3@21098>   BSR.w writebyte
00031536 <AmiBlitz3.ab3@21099>   CMP.w #$2C,D0
0003153A <AmiBlitz3.ab3@21100>    BEQ.w JL_0_C7D8a
0003153C <AmiBlitz3.ab3@21101> RTS
0003153E <AmiBlitz3.ab3@21106>   MOVEQ.l #$11,D3
00031544 <AmiBlitz3.ab3@21109>   JSR get1bytemain
00031548 <AmiBlitz3.ab3@21110>   CMP.w #$22,D0
0003154C <AmiBlitz3.ab3@21111>    BNE.w JL_0_C81E
0003154E <AmiBlitz3.ab3@21114>   MOVE.b (a5)+,d0                                          ;bsr.w get1bytemain ascii dc.b
00031552 <AmiBlitz3.ab3@21115>    BEQ.w syntaxerr
00031556 <AmiBlitz3.ab3@21116>   CMP.w #$22,D0
0003155A <AmiBlitz3.ab3@21117>    BEQ.w JL_0_C816
0003155E <AmiBlitz3.ab3@21118>   CMP.b #"\",d0
00031562 <AmiBlitz3.ab3@21119>    BNE 'n1
00031566 <AmiBlitz3.ab3@21120>   CMP.b #"\",(a5)
0003156A <AmiBlitz3.ab3@21121>    BEQ 'do1
0003156C <AmiBlitz3.ab3@21124>   MOVE.w D0,D1
00031570 <AmiBlitz3.ab3@21125>   BSR.w writebyte
00031574 <AmiBlitz3.ab3@21126> BRA.w JL_0_C7FC
0003157C <AmiBlitz3.ab3@21129>   CMP.l #"__DA",1(a5)
00031580 <AmiBlitz3.ab3@21130>    BNE 'nodate1
00031588 <AmiBlitz3.ab3@21131>   CMP.l #"TE__",5(a5)
0003158C <AmiBlitz3.ab3@21132>    BEQ 'c1
00031594 <AmiBlitz3.ab3@21133>   CMP.l #"TE_G",5(a5)
00031598 <AmiBlitz3.ab3@21134>    BNE 'nodate1
000315A0 <AmiBlitz3.ab3@21135>   CMP.l #"ER__",9(a5)
000315A4 <AmiBlitz3.ab3@21136>    BNE 'nodate1
000315AA <AmiBlitz3.ab3@21137>   JSR compiledatedc_ger
000315AE <AmiBlitz3.ab3@21138> BRA 'n1
000315B4 <AmiBlitz3.ab3@21141>   JSR compiledatedc
000315B8 <AmiBlitz3.ab3@21142> BRA 'n1
000315C0 <AmiBlitz3.ab3@21145>   CMP.l #"__VE",1(a5)
000315C4 <AmiBlitz3.ab3@21146>    BNE 'n1
000315CA <AmiBlitz3.ab3@21147>   CMP.w #"R_",5(a5)
000315CE <AmiBlitz3.ab3@21148>    BNE 'n1
000315D4 <AmiBlitz3.ab3@21149>   JSR version_string_dc
000315D8 <AmiBlitz3.ab3@21150> BRA.w JL_0_C7FC
000315DE <AmiBlitz3.ab3@21154>   CLR.w instringon
000315E4 <AmiBlitz3.ab3@21155>   JSR get1bytemain
000315E8 <AmiBlitz3.ab3@21156> BRA.w JL_0_C83A
000315F2 <AmiBlitz3.ab3@21161>    MOVE.w oldqflag,instringon
000315F8 <AmiBlitz3.ab3@21162>   MOVEA.l lastsourcepos,A5
000315FE <AmiBlitz3.ab3@21163>    JSR asmconst
00031604 <AmiBlitz3.ab3@21164>   SUBQ.l #1,destpointer
00031608 <AmiBlitz3.ab3@21165>    BSR.w JL_0_C796
0003160E <AmiBlitz3.ab3@21166>   ADDQ.l #1,destpointer
00031612 <AmiBlitz3.ab3@21167>    BSR.w writebyte
00031616 <AmiBlitz3.ab3@21170>   CMP.w #$2C,D0
0003161A <AmiBlitz3.ab3@21171>    BEQ.w JL_0_C7F0
0003161C <AmiBlitz3.ab3@21172> RTS
0003161E <AmiBlitz3.ab3@21176>   MOVEQ.l #$10,D3
00031626 <AmiBlitz3.ab3@21182>   MOVE.b #1,_dcb
0003162C <AmiBlitz3.ab3@21183>   JSR asmconst
00031632 <AmiBlitz3.ab3@21184>   CLR.b _dcb
00031636 <AmiBlitz3.ab3@21185>   BSR.w JL_0_C796
0003163A <AmiBlitz3.ab3@21186>   BSR.w writebyte
0003163E <AmiBlitz3.ab3@21187>   BSR.w writebyte
00031642 <AmiBlitz3.ab3@21188>   CMP.w #$2C,D0
00031646 <AmiBlitz3.ab3@21189>    BEQ.w JL_0_C84A
00031648 <AmiBlitz3.ab3@21190> RTS
0003164E <AmiBlitz3.ab3@21194>   ADDQ.l #3,destpointer
00031656 <AmiBlitz3.ab3@21195>   ANDI.w #$FFFC,destpointer+2
00031658 <AmiBlitz3.ab3@21196> RTS
0003165E <AmiBlitz3.ab3@21200>   ADDQ.l #7,destpointer
00031666 <AmiBlitz3.ab3@21201>   ANDI.w #$FFF8,destpointer+2
00031668 <AmiBlitz3.ab3@21202> RTS
0003166E <AmiBlitz3.ab3@21206>   ADDQ.l #1,destpointer                                    ;even
00031676 <AmiBlitz3.ab3@21207>   BCLR #$0,destpointer+3
00031678 <AmiBlitz3.ab3@21208> RTS
0003167A <AmiBlitz3.ab3@21211> datasize: Ds.w 1
00031680 <AmiBlitz3.ab3@21221>   TST.b debugmode
00031684 <AmiBlitz3.ab3@21222>   BEQ.w pdt__skip
00031688 <AmiBlitz3.ab3@21223>   MOVE.w #$4420,D0                                         ;'D '
0003168C <AmiBlitz3.ab3@21224>   MOVE.b datasize+1(PC),D0
00031690 <AmiBlitz3.ab3@21225> BRA.w JL_0_C1E6
00031692 <AmiBlitz3.ab3@21228> RTS
00031696 <AmiBlitz3.ab3@21232>   MOVE.w #$FC17,D1
0003169C <AmiBlitz3.ab3@21233>    JSR uselib
000316A6 <AmiBlitz3.ab3@21235>    MOVE.w oldqflag,instringon
000316AC <AmiBlitz3.ab3@21236>   MOVEA.l lastsourcepos,A5
000316B2 <AmiBlitz3.ab3@21237>    JSR AJL_0_498A
000316B8 <AmiBlitz3.ab3@21238>   MOVE.w D1,datasize
000316BC <AmiBlitz3.ab3@21239>   CMP.w #$7,D1
000316C0 <AmiBlitz3.ab3@21240>    BEQ.w JL_0_C944
000316C2 <AmiBlitz3.ab3@21241>   MOVE.w D1,-(A7)
000316C6 <AmiBlitz3.ab3@21244>   BSR.w pdt
000316C8 <AmiBlitz3.ab3@21245>   MOVE.w (A7),D2
000316CC <AmiBlitz3.ab3@21246>    BSR.w JL_0_B1D8
000316CE <AmiBlitz3.ab3@21247>   CMP.w (A7),D2                                            ;datamode
000316D2 <AmiBlitz3.ab3@21248>    BEQ.w JL_0_C920
000316D4 <AmiBlitz3.ab3@21249>   MOVE.w D2,D1
000316D6 <AmiBlitz3.ab3@21250>   MOVE.w (A7),D2
000316DA <AmiBlitz3.ab3@21251>   CMP.w #$2,D2
000316DE <AmiBlitz3.ab3@21252>    BNE.w JL_0_C8FE
000316E2 <AmiBlitz3.ab3@21253>   CMP.w #$3,D1
000316E6 <AmiBlitz3.ab3@21254>    BNE.w baddaterr
000316EC <AmiBlitz3.ab3@21255>   CMP.l #$10000,D3
000316F0 <AmiBlitz3.ab3@21256>    BCC.w baddaterr
000316F4 <AmiBlitz3.ab3@21257> BRA.w JL_0_C920
000316F8 <AmiBlitz3.ab3@21260>   CMP.w #$1,D2
000316FC <AmiBlitz3.ab3@21261>    BNE.w JL_0_C91C
00031700 <AmiBlitz3.ab3@21262>   CMP.w #$2,D1
00031704 <AmiBlitz3.ab3@21263>    BNE.w baddaterr
0003170A <AmiBlitz3.ab3@21264>   CMP.l #$100,D3
0003170E <AmiBlitz3.ab3@21265>    BCC.w baddaterr
00031712 <AmiBlitz3.ab3@21266> BRA.w JL_0_C920
00031716 <AmiBlitz3.ab3@21269> BRA.w baddaterr
0003171A <AmiBlitz3.ab3@21272>   CMP.w #$3,D2
0003171E <AmiBlitz3.ab3@21273>   BCC.w JL_0_C930
00031722 <AmiBlitz3.ab3@21274>   BSR.w JL_0_C1E6
00031726 <AmiBlitz3.ab3@21275> BRA.w JL_0_C934
0003172C <AmiBlitz3.ab3@21278>   TST.b iee
00031730 <AmiBlitz3.ab3@21279>   BEQ 'old
00031734 <AmiBlitz3.ab3@21280>   CMP.b #5,d2
00031738 <AmiBlitz3.ab3@21281>   BNE 'old
0003173C <AmiBlitz3.ab3@21282>   Dc.l $f2006400                                           ;  fpu data write fmove.s fp0,d0
00031740 <AmiBlitz3.ab3@21286>   BSR.w JL_0_C1DE                                          ;write data >3
00031746 <AmiBlitz3.ab3@21289>   JSR reget
0003174A <AmiBlitz3.ab3@21290>   CMP.w #$2C,D0
0003174E <AmiBlitz3.ab3@21291>    BEQ.w JL_0_C8CC
00031750 <AmiBlitz3.ab3@21292>   ADDQ.w #2,A7
00031752 <AmiBlitz3.ab3@21293> RTS
00031756 <AmiBlitz3.ab3@21296>    BSR.w pdt
0003175C <AmiBlitz3.ab3@21297>   MOVE.l data2,-(A7)
00031760 <AmiBlitz3.ab3@21298>    BSR.w JL_0_C1DE
00031762 <AmiBlitz3.ab3@21299>   MOVEQ.l #$00,D1
00031768 <AmiBlitz3.ab3@21300>    JSR get1bytemain
0003176C <AmiBlitz3.ab3@21301>    BEQ.w JL_0_C9A6
00031770 <AmiBlitz3.ab3@21302>   CMP.w #$22,D0
00031774 <AmiBlitz3.ab3@21303>    BEQ.w JL_0_C988
00031778 <AmiBlitz3.ab3@21304>   CMP.w #$2C,D0
0003177C <AmiBlitz3.ab3@21305>    BEQ.w JL_0_C9A6
00031780 <AmiBlitz3.ab3@21308>    BSR.w JL_0_C210
00031782 <AmiBlitz3.ab3@21309>   ADDQ.w #1,D1
00031788 <AmiBlitz3.ab3@21310>    JSR getchar
0003178A <AmiBlitz3.ab3@21311>   TST.w D0
0003178E <AmiBlitz3.ab3@21312>    BEQ.w JL_0_C9A6
00031792 <AmiBlitz3.ab3@21313>   CMP.w #$2C,D0
00031796 <AmiBlitz3.ab3@21314>    BEQ.w JL_0_C9A6
0003179A <AmiBlitz3.ab3@21315> BRA.w JL_0_C96C
0003179C <AmiBlitz3.ab3@21319>    MOVEQ #0,d0
0003179E <AmiBlitz3.ab3@21320>    MOVE.b (a5)+,d0
000317A2 <AmiBlitz3.ab3@21321>    BEQ.w notqerr2
000317A6 <AmiBlitz3.ab3@21322>   CMP.w #$22,D0
000317AA <AmiBlitz3.ab3@21323>    BEQ.w JL_0_C9A2
000317AE <AmiBlitz3.ab3@21324>    BSR.w JL_0_C210
000317B0 <AmiBlitz3.ab3@21325>   ADDQ.w #1,D1
000317B4 <AmiBlitz3.ab3@21326> BRA.w JL_0_C988
000317BA <AmiBlitz3.ab3@21327> notqerr2 JMP notqerr
000317C0 <AmiBlitz3.ab3@21329>   CLR.w instringon
000317C6 <AmiBlitz3.ab3@21330>   JSR get1bytemain
000317C8 <AmiBlitz3.ab3@21333>   MOVEA.l (A7)+,A0
000317CE <AmiBlitz3.ab3@21334>   MOVE.w dontwrite,D2
000317D2 <AmiBlitz3.ab3@21335>    BNE.w JL_0_C9B4
000317D4 <AmiBlitz3.ab3@21336>   MOVE.l D1,(A0)
000317DA <AmiBlitz3.ab3@21339>   ADDQ.l #1,data2
000317E2 <AmiBlitz3.ab3@21340>   BCLR #$0,data2+3
000317E6 <AmiBlitz3.ab3@21341>   CMP.w #$2C,D0
000317EA <AmiBlitz3.ab3@21342>    BEQ.w JL_0_C944
000317EC <AmiBlitz3.ab3@21343> RTS
000317F2 <AmiBlitz3.ab3@21347> JMP vardeclareerr
000317F8 <AmiBlitz3.ab3@21350>   MOVE.w proceduremode,D1                                  ;doshared
000317FC <AmiBlitz3.ab3@21352>   BNE.w 'l1
000317FE <AmiBlitz3.ab3@21353>   MOVE.w D1,-(A7)
00031804 <AmiBlitz3.ab3@21354>   CLR.w proceduremode
0003180A <AmiBlitz3.ab3@21357>   LEA varbase,a2
0003180E <AmiBlitz3.ab3@21358>   BSR.w getparameter
00031810 <AmiBlitz3.ab3@21359>   MOVE.w d2,-(a7)
00031816 <AmiBlitz3.ab3@21360>    JSR findvariable
0003181A <AmiBlitz3.ab3@21361>    BEQ 'checkdim
00031820 <AmiBlitz3.ab3@21362>    LEA sharebase,a2
00031822 <AmiBlitz3.ab3@21363>    MOVEQ #$f+4,d7
00031826 <AmiBlitz3.ab3@21364>    BSR.w findlab                                         ;find var
0003182A <AmiBlitz3.ab3@21365>    BEQ.b dupsherr
0003182E <AmiBlitz3.ab3@21366>    BSR addlabel
00031832 <AmiBlitz3.ab3@21367>    CMP.b #".",d0
00031836 <AmiBlitz3.ab3@21368>    BNE JUMP_vardeclareerr
00031838 <AmiBlitz3.ab3@21369>    MOVE.l a2,a3
0003183E <AmiBlitz3.ab3@21370>    JSR JL_0_8EB8b
00031840 <AmiBlitz3.ab3@21401>   MOVE.w (a7)+,d2
00031844 <AmiBlitz3.ab3@21402>    CMP.b #",",d0
00031848 <AmiBlitz3.ab3@21403>    BNE 'ret
0003184E <AmiBlitz3.ab3@21404>    JSR get1bytemain
00031852 <AmiBlitz3.ab3@21405> BRA 'again2
00031858 <AmiBlitz3.ab3@21408>   MOVE.w (A7)+,proceduremode
0003185A <AmiBlitz3.ab3@21409> RTS
00031860 <AmiBlitz3.ab3@21416>    CMP.w #2,6(a2)
00031864 <AmiBlitz3.ab3@21417>    BEQ 'do
0003186A <AmiBlitz3.ab3@21418>    CMP.w #$102,6(a2)
0003186E <AmiBlitz3.ab3@21419>    BEQ 'do
00031874 <AmiBlitz3.ab3@21420> JMP errormsg_declaredtwice                                 ;was BRA 'errormsg_declaredtwice_
0003187A <AmiBlitz3.ab3@21423>   LEA varbase,a0
0003187C <AmiBlitz3.ab3@21426>   MOVE.l (A0),D0                                           ;find label
00031880 <AmiBlitz3.ab3@21427>    BEQ.b 'z1
00031882 <AmiBlitz3.ab3@21428>    CMP.l d0,a2
00031886 <AmiBlitz3.ab3@21429>    BEQ 'z1
00031888 <AmiBlitz3.ab3@21430>    MOVE.l d0,a0
0003188C <AmiBlitz3.ab3@21431> BRA 'm1
0003188E <AmiBlitz3.ab3@21434>   MOVE.l (a2),d1
00031890 <AmiBlitz3.ab3@21435>     MOVE.l d1,(a0)
00031892 <AmiBlitz3.ab3@21436>     CLR.l (a2)
00031898 <AmiBlitz3.ab3@21437>     LEA sharebase,a0
0003189A <AmiBlitz3.ab3@21438>     MOVE.l (a0),(a2)
0003189C <AmiBlitz3.ab3@21439>     MOVE.l a2,(a0)
000318A2 <AmiBlitz3.ab3@21440>     JSR get1bytemain
000318A8 <AmiBlitz3.ab3@21441>     JSR get1bytemain
000318AC <AmiBlitz3.ab3@21442> BRA 'domore
000318B4 <AmiBlitz3.ab3@21445>   MOVE.b #1,nowdeclare
000318B6 <AmiBlitz3.ab3@21446>   MOVE.w D1,-(A7)
000318BC <AmiBlitz3.ab3@21447>   CLR.w proceduremode
000318C0 <AmiBlitz3.ab3@21450>    BSR.w getparameter
000318C2 <AmiBlitz3.ab3@21451>   MOVE.w D2,-(A7)
000318C8 <AmiBlitz3.ab3@21452>   LEA firstglob,A2
000318CC <AmiBlitz3.ab3@21453>    BSR.w findvariable2
000318D0 <AmiBlitz3.ab3@21454>    BNE.b JL_0_CA06
000318D6 <AmiBlitz3.ab3@21457>   MOVE.b flagmask+1,D1
000318DA <AmiBlitz3.ab3@21458>   MOVE.b $7(A2),D3
000318DC <AmiBlitz3.ab3@21459>   EOR.b D3,D1
000318E0 <AmiBlitz3.ab3@21460>    BEQ.w dupsherr
000318E4 <AmiBlitz3.ab3@21461>    BSR.w findlab
000318E8 <AmiBlitz3.ab3@21462>    BEQ.b JL_0_C9F0
000318EC <AmiBlitz3.ab3@21465>    BSR.w addlabel
000318EE <AmiBlitz3.ab3@21466>   MOVE.w (A7)+,D2
000318F0 <AmiBlitz3.ab3@21467>   MOVE.l A2,-(A7)
000318F4 <AmiBlitz3.ab3@21468>    BSR.w JL_0_8E3C
000318F6 <AmiBlitz3.ab3@21469>   MOVEA.l (A7)+,A2
000318F8 <AmiBlitz3.ab3@21470>   MOVEQ.l #$04,D1
000318FA <AmiBlitz3.ab3@21471>   ADDQ.w #4,A2
000318FC <AmiBlitz3.ab3@21472>   ADDQ.w #4,A3
000318FE <AmiBlitz3.ab3@21475>     MOVE.w (A3)+,(A2)+
00031902 <AmiBlitz3.ab3@21476>   DBF D1,JL_0_CA1A
0003190A <AmiBlitz3.ab3@21478>   BTST #$1,flagmask+1
0003190E <AmiBlitz3.ab3@21479>    BEQ.w JL_0_CA3C
00031914 <AmiBlitz3.ab3@21480>    JSR get1bytemain
00031918 <AmiBlitz3.ab3@21481>   CMP.w #$29,D0
0003191C <AmiBlitz3.ab3@21482>    BNE.w syntaxerrc
00031922 <AmiBlitz3.ab3@21483>    JSR get1bytemain
00031926 <AmiBlitz3.ab3@21486>    CMP.w #$2C,D0
0003192A <AmiBlitz3.ab3@21487>    BNE.w JL_0_CA4C
00031930 <AmiBlitz3.ab3@21488>    JSR get1bytemain
00031934 <AmiBlitz3.ab3@21489> BRA.w JL_0_C9DE
0003193A <AmiBlitz3.ab3@21492>   MOVE.w (A7)+,proceduremode
0003193C <AmiBlitz3.ab3@21493> RTS
00031942 <AmiBlitz3.ab3@21495> syntaxerrc JMP syntaxerr
00031946 <AmiBlitz3.ab3@21498>    BSR.w JL_0_C05C
0003194C <AmiBlitz3.ab3@21499>    JSR check_incdir                                        ; ergebnis in d2
00031952 <AmiBlitz3.ab3@21501>    LEA ptr_parameterstore,a1
00031954 <AmiBlitz3.ab3@21502>    MOVE.l d2,-(a7)
0003195A <AmiBlitz3.ab3@21503>    LEA includetemp,a0                                      ; filename in includetemp packen
0003195C <AmiBlitz3.ab3@21506>      MOVE.b (a1)+,(a0)+
00031960 <AmiBlitz3.ab3@21507>    BNE 'l4
00031966 <AmiBlitz3.ab3@21509>    LEA ptr_parameterstore,a1
00031968 <AmiBlitz3.ab3@21510>    MOVE.l a1,a0
0003196A <AmiBlitz3.ab3@21513>     TST.b (a0)+
0003196E <AmiBlitz3.ab3@21514>    BNE 'l1
00031970 <AmiBlitz3.ab3@21517>      MOVE.b -(a0),d0
00031974 <AmiBlitz3.ab3@21518>      CMP.b #":",d0
00031978 <AmiBlitz3.ab3@21519>       BEQ 'out
0003197C <AmiBlitz3.ab3@21520>      CMP.b #"/",d0
00031980 <AmiBlitz3.ab3@21521>       BEQ 'out
00031982 <AmiBlitz3.ab3@21522>      CMP.l a1,a0
00031986 <AmiBlitz3.ab3@21523>       BEQ 'out2
0003198A <AmiBlitz3.ab3@21524> BRA 'l2
0003198C <AmiBlitz3.ab3@21527>    ADDQ.l #1,a0                                            ; dateinamen vom pfad extrahiert
0003198E <AmiBlitz3.ab3@21530>    MOVEQ.l #-$01,D2
00031990 <AmiBlitz3.ab3@21533>      ADDQ.w #1,D2
00031992 <AmiBlitz3.ab3@21534>      MOVE.b (a0)+,(a1)+
00031996 <AmiBlitz3.ab3@21535>    BNE 'l3
00031998 <AmiBlitz3.ab3@21536>    CLR.b (a1)+
0003199E <AmiBlitz3.ab3@21538>    LEA ptr_parameterstore,a1
000319A2 <AmiBlitz3.ab3@21539>    BSR.w findxinc                                         ;find include
000319A6 <AmiBlitz3.ab3@21540>     BEQ.w 'outb
000319A8 <AmiBlitz3.ab3@21542>    MOVE.w D2,-(A7)
000319AC <AmiBlitz3.ab3@21543>    BSR.w addlabel
000319AE <AmiBlitz3.ab3@21544>    MOVE.w (A7)+,D2
000319B4 <AmiBlitz3.ab3@21546>    LEA ptr_parameterstore,a1
000319BA <AmiBlitz3.ab3@21547>    LEA includetemp,a0                                      ; namen in includetemp schreiben
000319BC <AmiBlitz3.ab3@21550>     MOVE.b (a0)+,(a1)+
000319C0 <AmiBlitz3.ab3@21551>    BNE 'l4b
000319C2 <AmiBlitz3.ab3@21553>    MOVE.l (a7)+,d2
000319C8 <AmiBlitz3.ab3@21554>    LEA ptr_parameterstore,a1
000319CC <AmiBlitz3.ab3@21555> BRA.w JL_0_CB18
000319D2 <AmiBlitz3.ab3@21558>    LEA ptr_parameterstore,a1
000319D8 <AmiBlitz3.ab3@21559>    LEA includetemp,a0
000319DA <AmiBlitz3.ab3@21562>     MOVE.b (a0)+,(a1)+
000319DE <AmiBlitz3.ab3@21563>    BNE 'l4b2
000319E0 <AmiBlitz3.ab3@21565>    MOVE.l (a7)+,d2
000319E6 <AmiBlitz3.ab3@21566>    LEA ptr_parameterstore,a1
000319E8 <AmiBlitz3.ab3@21569> RTS
000319EC <AmiBlitz3.ab3@21573>   BSR.w JL_0_C05C                                              ; test and get the parameter (includestring)
000319F2 <AmiBlitz3.ab3@21575>   JSR check_IncBinDir                                          ; to fix the path problem in CLIMode  tomsmart1
000319F8 <AmiBlitz3.ab3@21577>   MOVEA.l _dosbase,A6
000319FA <AmiBlitz3.ab3@21578>   MOVE.l D0,D7                                                 ; store Lockpointer
000319FE <AmiBlitz3.ab3@21579>    BEQ.w error_cant_open_include                               ; no pointer => errormessage
00031A00 <AmiBlitz3.ab3@21580>   MOVE.l D7,D1                                                 ; begin get the size of the file to include
00031A06 <AmiBlitz3.ab3@21581>   MOVE.l ptr_macrobuffer_begin,D2
00031A0A <AmiBlitz3.ab3@21582>    JSR _Examine(A6)
00031A10 <AmiBlitz3.ab3@21583>   MOVEA.l ptr_macrobuffer_begin,A0
00031A14 <AmiBlitz3.ab3@21584>   MOVE.l $4(A0),D0
00031A18 <AmiBlitz3.ab3@21585>    BPL.w error_cant_open_include                               ; something went wrong => errormessage
00031A1C <AmiBlitz3.ab3@21586>   MOVE.l $7C(A0),D3                                            ; store the size of the file to include
00031A1E <AmiBlitz3.ab3@21587>   MOVE.l D7,D1                                                 ; begin unlock the file
00031A22 <AmiBlitz3.ab3@21588>    JSR _UnLock(A6)
00031A28 <AmiBlitz3.ab3@21590>   MOVE.l #ptr_parameterstore,D1                                ; begin Open and Load the file
00031A2E <AmiBlitz3.ab3@21591>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2                       
00031A32 <AmiBlitz3.ab3@21592>    JSR _Open(A6)
00031A34 <AmiBlitz3.ab3@21593>   MOVE.l D0,D7
00031A38 <AmiBlitz3.ab3@21594>    BEQ.w error_cant_open_include
00031A3E <AmiBlitz3.ab3@21595>   MOVE.l destpointer,D0
00031A40 <AmiBlitz3.ab3@21596>   ADD.l D3,D0
00031A46 <AmiBlitz3.ab3@21597>   CMP.l destbufferend,D0
00031A4A <AmiBlitz3.ab3@21598>    BHI.w JL_0_CAF6
00031A50 <AmiBlitz3.ab3@21599>   MOVE.l destpointer,D2
00031A52 <AmiBlitz3.ab3@21600>   MOVE.l D7,D1
00031A56 <AmiBlitz3.ab3@21601>    JSR _Read(A6)
00031A5C <AmiBlitz3.ab3@21602>   CMP.l #$FFFFFFFF,D0
00031A60 <AmiBlitz3.ab3@21603>    BEQ.w error_reading_file
00031A66 <AmiBlitz3.ab3@21604>   ADD.l D0,destpointer
00031A6A <AmiBlitz3.ab3@21605> BRA.w JL_0_CB04
00031A72 <AmiBlitz3.ab3@21608>   MOVE.w #$FFFF,dontwrite
00031A78 <AmiBlitz3.ab3@21609>   MOVE.l D0,destpointer
00031A7A <AmiBlitz3.ab3@21612>   MOVE.l D7,D1
00031A7E <AmiBlitz3.ab3@21613> JMP _Close(A6)
00031A84 <AmiBlitz3.ab3@21617> JMP illdirerr
00031A8A <AmiBlitz3.ab3@21620>   TST.w dirmode                                            ;include  open
00031A8E <AmiBlitz3.ab3@21621>    BNE.w JUMP_illdirerr
00031A92 <AmiBlitz3.ab3@21622>   BSR.w JL_0_C05C
00031A98 <AmiBlitz3.ab3@21623>   JSR check_incdir
00031A9C <AmiBlitz3.ab3@21626>   BSR.w findconstant
00031AA0 <AmiBlitz3.ab3@21627>    BEQ.w alincerr
00031AA6 <AmiBlitz3.ab3@21629>   LEA constantbase,A2
00031AAA <AmiBlitz3.ab3@21630>   BSR.w addhere2
00031AAE <AmiBlitz3.ab3@21631>   CLR.w $C(A2)
00031AB2 <AmiBlitz3.ab3@21632>   CLR.l $4(A2)
00031AB8 <AmiBlitz3.ab3@21634>   MOVE.l #ptr_parameterstore,D1
00031ABA <AmiBlitz3.ab3@21635>   MOVE.l d1,a0
00031AC0 <AmiBlitz3.ab3@21636>   LEA includetemp2,a1
00031AC2 <AmiBlitz3.ab3@21639>     MOVE.b (a0)+,(a1)+
00031AC6 <AmiBlitz3.ab3@21640>   BNE 'l1
00031ACC <AmiBlitz3.ab3@21641>   JSR save_includename
00031AD6 <AmiBlitz3.ab3@21642>   MOVE.l #0,include_process
00031ADE <AmiBlitz3.ab3@21644>   CMP.l #$62623200,-4(a0)                                  ;.bb2
00031AE2 <AmiBlitz3.ab3@21645>   BEQ 'ok
00031AEA <AmiBlitz3.ab3@21646>   CMP.l #$61623300,-4(a0)                                  ;.ab3
00031AEE <AmiBlitz3.ab3@21647>   BEQ 'ok_tokenize
00031AF6 <AmiBlitz3.ab3@21648>   CMP.l #$61623200,-4(a0)                                  ;.ab2
00031AFA <AmiBlitz3.ab3@21649>   BEQ 'ok_tokenize
00031B02 <AmiBlitz3.ab3@21650>   CMP.l #$2e626200,-4(a0)                                  ;.bb files
00031B06 <AmiBlitz3.ab3@21651>   BEQ 'ok
00031B0C <AmiBlitz3.ab3@21652> JMP errortoken                                             ;can only include
00031B16 <AmiBlitz3.ab3@21655>    MOVE.l #-1,include_process                              ; must tokenize the include
00031B1C <AmiBlitz3.ab3@21658>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00031B22 <AmiBlitz3.ab3@21659>   MOVEA.l _dosbase,A6
00031B26 <AmiBlitz3.ab3@21660>   JSR _Open(A6)
00031B2A <AmiBlitz3.ab3@21661>   MOVE.l D0,$8(A2)
00031B2E <AmiBlitz3.ab3@21662>   BEQ.w error_cant_open_include
00031B34 <AmiBlitz3.ab3@21663>   CLR.l includeline
00031B38 <AmiBlitz3.ab3@21664>   MOVE.l 8(a2),d1
00031B3A <AmiBlitz3.ab3@21665>   MOVE.l d3,-(a7)
00031B3C <AmiBlitz3.ab3@21666>   MOVEQ #0,d2
00031B3E <AmiBlitz3.ab3@21667>   MOVEQ #1,d3
00031B42 <AmiBlitz3.ab3@21668>   JSR _Seek(a6)                                            ; -66
00031B46 <AmiBlitz3.ab3@21669>   MOVE.l 8(a2),d1
00031B48 <AmiBlitz3.ab3@21670>   MOVEQ #0,d2
00031B4A <AmiBlitz3.ab3@21671>   MOVEQ #-1,d3
00031B4E <AmiBlitz3.ab3@21672>   JSR _Seek(a6)                                            ; -66
00031B50 <AmiBlitz3.ab3@21673>   MOVE.l (a7)+,d3
00031B52 <AmiBlitz3.ab3@21674>   ADDQ.l #4,d0
00031B58 <AmiBlitz3.ab3@21676>   MOVE.l #$10000,D1
00031B5E <AmiBlitz3.ab3@21677>   MOVEA.l _execbase,A6
00031B62 <AmiBlitz3.ab3@21680>   JSR _AllocVec(a6)
00031B66 <AmiBlitz3.ab3@21682>   MOVE.l D0,$4(A2)
00031B6A <AmiBlitz3.ab3@21683>   MOVE.l D0,$E(A2)
00031B6C <AmiBlitz3.ab3@21684>   MOVEA.l D0,A5
00031B72 <AmiBlitz3.ab3@21691>   ADDQ.w #1,ininclude                                      ;enter include
00031B78 <AmiBlitz3.ab3@21694>   LEA _include,a0
00031B7C <AmiBlitz3.ab3@21695>   MOVEM.l a0-a6/d0-d7,-(a7)
00031B82 <AmiBlitz3.ab3@21696>   LEA ptr_parameterstore,a1
00031B84 <AmiBlitz3.ab3@21699>     MOVE.b (a0)+,(a1)+
00031B88 <AmiBlitz3.ab3@21700>   BNE 'l1b
00031B8A <AmiBlitz3.ab3@21702>   MOVEQ #9,d2
00031B90 <AmiBlitz3.ab3@21703>   JSR findlabel2
00031B94 <AmiBlitz3.ab3@21704>   BNE 'd
00031B9C <AmiBlitz3.ab3@21705>   MOVE.l #1,8(a2)
00031BA0 <AmiBlitz3.ab3@21706>   MOVEM.l (a7)+,a0-a6/d0-d7
00031BA4 <AmiBlitz3.ab3@21707> BRA 'd2
00031BAA <AmiBlitz3.ab3@21710>   JSR addlabelhash
00031BB2 <AmiBlitz3.ab3@21711>   MOVE.l #$1,$4(A2)
00031BBA <AmiBlitz3.ab3@21712>   MOVE.l #1,8(a2)
00031BBE <AmiBlitz3.ab3@21713>   MOVEM.l (a7)+,a0-a6/d0-d7
00031BC4 <AmiBlitz3.ab3@21716>   LEA inctab,a0
00031BC6 <AmiBlitz3.ab3@21717>   MOVEQ #0,d1
00031BCC <AmiBlitz3.ab3@21718>   MOVE.w ininclude,d1
00031BD0 <AmiBlitz3.ab3@21719>   CLR.l $0(a0,d1*4)
00031BD6 <AmiBlitz3.ab3@21720>   MOVEA.l passstack,A7
00031BDC <AmiBlitz3.ab3@21721> JMP AJL_0_413A
00031BE2 <AmiBlitz3.ab3@21723> JUMP_dupmacerr JMP dupmacerr
00031BE4 <AmiBlitz3.ab3@21725> coolnest:   Ds.w 1
00031BE8 <AmiBlitz3.ab3@21726> macline:    Ds.l 1
00031BF2 <AmiBlitz3.ab3@21730>   MOVE.l linenumat,macline
00031BF6 <AmiBlitz3.ab3@21731>    BSR.w makename2
00031BFA <AmiBlitz3.ab3@21732>    BEQ.w JUMP_syntaxerr
00031C00 <AmiBlitz3.ab3@21734>    CLR.b thenmode
00031C0A <AmiBlitz3.ab3@21736>    MOVE.w oldqflag,instringon
00031C10 <AmiBlitz3.ab3@21737>   MOVEA.l lastsourcepos,A5
00031C14 <AmiBlitz3.ab3@21738>    BSR.w findmac
00031C18 <AmiBlitz3.ab3@21739>    BEQ.w JUMP_dupmacerr
00031C1C <AmiBlitz3.ab3@21740>    BSR.w addlabel
00031C20 <AmiBlitz3.ab3@21741>   CLR.w $A(A2)
00031C26 <AmiBlitz3.ab3@21742>   MOVEA.l ptr_macrobuffer_begin,A0
00031C28 <AmiBlitz3.ab3@21743>   MOVEQ.l #$00,D2
00031C2E <AmiBlitz3.ab3@21744>   CLR.w coolnest
00031C30 <AmiBlitz3.ab3@21747>   MOVE.b (a5),d0
00031C34 <AmiBlitz3.ab3@21748>      BEQ 'l3
00031C38 <AmiBlitz3.ab3@21749>      CMP.b #" ",d0
00031C3C <AmiBlitz3.ab3@21750>       BNE 'l2                                              ;space macro
00031C3E <AmiBlitz3.ab3@21751>       ADDQ.l #1,a5
00031C42 <AmiBlitz3.ab3@21752> BRA 'l1
00031C46 <AmiBlitz3.ab3@21755>    CMP.b #";",d0
00031C4A <AmiBlitz3.ab3@21756>       BNE 'l3
00031C4C <AmiBlitz3.ab3@21759>    MOVE.b (a5),d0
00031C50 <AmiBlitz3.ab3@21760>       BEQ 'l5
00031C54 <AmiBlitz3.ab3@21761>       BSR.w JL_0_CC98                                      ;add comment
00031C56 <AmiBlitz3.ab3@21762>       ADDQ.l #1,a5
00031C5A <AmiBlitz3.ab3@21763> BRA 'l4
00031C5E <AmiBlitz3.ab3@21766>    MOVE.b #":",d0
00031C62 <AmiBlitz3.ab3@21767>       BSR.w JL_0_CC98
00031C66 <AmiBlitz3.ab3@21768>       MOVE.b #"@",d0
00031C6A <AmiBlitz3.ab3@21769>       BSR.w JL_0_CC98
00031C72 <AmiBlitz3.ab3@21772>    MOVE.b #0,temp
00031C7A <AmiBlitz3.ab3@21773>       MOVE.b #0,thenmode
00031C80 <AmiBlitz3.ab3@21776>   JSR getcharb
00031C82 <AmiBlitz3.ab3@21777>   TST.w D0
00031C86 <AmiBlitz3.ab3@21778>    BNE.w JL_0_CBDE
00031C8A <AmiBlitz3.ab3@21779>   MOVEM.l D2/A0/A2,-(A7)
00031C90 <AmiBlitz3.ab3@21780>   CMP.w #"@@",-3(a5)
00031C94 <AmiBlitz3.ab3@21781>   BNE 'l2a
00031C9A <AmiBlitz3.ab3@21782>   JSR nextline
00031C9E <AmiBlitz3.ab3@21783>   BEQ.w JUMP_macenderr
00031CA2 <AmiBlitz3.ab3@21784>   MOVEM.l (A7)+,D2/A0/A2
00031CA6 <AmiBlitz3.ab3@21785> BRA.w JL_0_CBB6
00031CAC <AmiBlitz3.ab3@21788>    JSR nextline
00031CB0 <AmiBlitz3.ab3@21789>    BEQ.w JUMP_macenderr
00031CB4 <AmiBlitz3.ab3@21790>   MOVEM.l (A7)+,D2/A0/A2
00031CB6 <AmiBlitz3.ab3@21791>   TST.w D2
00031CBA <AmiBlitz3.ab3@21792>    BEQ.w JL_0_CBB6
00031CBC <AmiBlitz3.ab3@21795>   MOVE.b (a5),d0
00031CC0 <AmiBlitz3.ab3@21796>       CMP.b #" ",d0
00031CC4 <AmiBlitz3.ab3@21797>       BNE 'l1
00031CC6 <AmiBlitz3.ab3@21798>       ADDQ.w #1,a5
00031CCA <AmiBlitz3.ab3@21799> BRA 'l2
00031CD0 <AmiBlitz3.ab3@21802>   TST.b thenmode
00031CD4 <AmiBlitz3.ab3@21803>      BEQ 'l3
00031CD6 <AmiBlitz3.ab3@21804>      MOVEQ #":",d0
00031CDA <AmiBlitz3.ab3@21805>      BSR.w JL_0_CC98
00031CDE <AmiBlitz3.ab3@21806>      MOVE.w #-$7FFE,D0                                     ;write end if
00031CE2 <AmiBlitz3.ab3@21807>      BSR macputw
00031CE6 <AmiBlitz3.ab3@21808>      MOVE.w #$800b,d0
00031CEA <AmiBlitz3.ab3@21809>      BSR.w macputw
00031CF0 <AmiBlitz3.ab3@21810>      CLR.b thenmode
00031CF2 <AmiBlitz3.ab3@21813>    MOVEQ.l #$3A,D0
00031CFA <AmiBlitz3.ab3@21814>      MOVE.b #1,temp
00031CFE <AmiBlitz3.ab3@21816> BRA.w JL_0_CC2A
00031D02 <AmiBlitz3.ab3@21820>   BPL.w JL_0_CC2A
00031D06 <AmiBlitz3.ab3@21821>   CMP.w #-$7FF3,D0                                         ;macro ?
00031D0A <AmiBlitz3.ab3@21822>    BNE.w JL_0_CBF4
00031D10 <AmiBlitz3.ab3@21823>   ADDQ.w #1,coolnest
00031D14 <AmiBlitz3.ab3@21824> BRA.w JL_0_CC22
00031D1A <AmiBlitz3.ab3@21826> JUMP_macnesterr JMP macnesterr
00031D1E <AmiBlitz3.ab3@21829>   CMP.w #$80d7,d0                                          ;object ?
00031D22 <AmiBlitz3.ab3@21830>     BNE 'l1x
00031D28 <AmiBlitz3.ab3@21831>     TST.b objectcount
00031D2C <AmiBlitz3.ab3@21832>     BNE JUMP_macnesterr
00031D30 <AmiBlitz3.ab3@21835>   CMP.w #$8021,d0
00031D34 <AmiBlitz3.ab3@21836>     BNE 'nothen
00031D3C <AmiBlitz3.ab3@21837>     MOVE.b #1,thenmode
00031D42 <AmiBlitz3.ab3@21840>   TST.b thenmode
00031D46 <AmiBlitz3.ab3@21841>         BEQ 'l1
00031D4A <AmiBlitz3.ab3@21842>    CMP.w #$8002,d0                                         ;end if
00031D4E <AmiBlitz3.ab3@21843>    BNE 'l1
00031D52 <AmiBlitz3.ab3@21844>    MOVEM.l d0/a5,-(a7)
00031D58 <AmiBlitz3.ab3@21845>    JSR get1bytemain
00031D5A <AmiBlitz3.ab3@21846>    MOVE.w d0,d1
00031D5E <AmiBlitz3.ab3@21847>    MOVEM.l (a7)+,a5/d0
00031D62 <AmiBlitz3.ab3@21848>    CMP.w #$800b,d1
00031D66 <AmiBlitz3.ab3@21849>    BNE 'l1
00031D6C <AmiBlitz3.ab3@21850>    CLR.b thenmode
00031D70 <AmiBlitz3.ab3@21853>    CMP.w #-$7FFE,D0                                        ;end ?
00031D74 <AmiBlitz3.ab3@21854>    BNE.w JL_0_CC22
00031D76 <AmiBlitz3.ab3@21855>    MOVE.l a5,-(a7)
00031D7C <AmiBlitz3.ab3@21856>    JSR get1bytemain
00031D7E <AmiBlitz3.ab3@21857>    MOVE.l (a7)+,a5
00031D80 <AmiBlitz3.ab3@21858>    TST.w d0
00031D84 <AmiBlitz3.ab3@21859>    BEQ 'doend
00031D88 <AmiBlitz3.ab3@21860>    CMP.w #":",d0
00031D8C <AmiBlitz3.ab3@21861>    BEQ 'doend
00031D90 <AmiBlitz3.ab3@21862>    CMP.w #";",d0
00031D94 <AmiBlitz3.ab3@21863>    BEQ 'doend
00031D96 <AmiBlitz3.ab3@21864>    MOVE.l a5,-(a7)
00031D9C <AmiBlitz3.ab3@21865>    JSR get1bytemain
00031DA0 <AmiBlitz3.ab3@21866>    MOVE.l -1(a5),d0
00031DA2 <AmiBlitz3.ab3@21867>    MOVE.l (a7)+,a5
00031DA8 <AmiBlitz3.ab3@21868>    CMP.l #"noa7",d0
00031DAC <AmiBlitz3.ab3@21869>    BEQ 'doend
00031DB0 <AmiBlitz3.ab3@21870> BRA 'morechar
00031DB4 <AmiBlitz3.ab3@21873>   MOVE.w #$8002,D0
00031DB8 <AmiBlitz3.ab3@21874>    BSR.w macputw
00031DBC <AmiBlitz3.ab3@21875> BRA JL_0_CBB6
00031DC2 <AmiBlitz3.ab3@21878>   JSR get1bytemain
00031DC6 <AmiBlitz3.ab3@21879>    CMP.w #-$7FF3,D0                                        ;end macro
00031DCA <AmiBlitz3.ab3@21880>    BEQ.w 'lo1
00031DCE <AmiBlitz3.ab3@21881>   CMP.w #$80d7,d0                                          ;end object
00031DD2 <AmiBlitz3.ab3@21882>   BNE JL_0_CC12
00031DD8 <AmiBlitz3.ab3@21883>   SUBQ.b #1,objectcount
00031DDE <AmiBlitz3.ab3@21884>   TST.b developobject
00031DE2 <AmiBlitz3.ab3@21885>   BEQ 'lo1
00031DE6 <AmiBlitz3.ab3@21886>   BSR skiprest
00031DE8 <AmiBlitz3.ab3@21887> RTS
00031DEE <AmiBlitz3.ab3@21890>   SUBQ.w #1,coolnest
00031DF2 <AmiBlitz3.ab3@21891>    BMI.w JL_0_CC32
00031DF4 <AmiBlitz3.ab3@21894>   MOVE.w D0,-(A7)
00031DF8 <AmiBlitz3.ab3@21895>   MOVE.w #$8002,D0
00031DFC <AmiBlitz3.ab3@21896>    BSR.w macputw
00031DFE <AmiBlitz3.ab3@21897>   MOVE.w (A7)+,D0
00031E02 <AmiBlitz3.ab3@21898> BRA.w JL_0_CC22
00031E06 <AmiBlitz3.ab3@21901>   BSR.w macputw
00031E0A <AmiBlitz3.ab3@21902> BRA.w JL_0_CBB6
00031E10 <AmiBlitz3.ab3@21904> JUMP_macenderr JMP macenderr
00031E16 <AmiBlitz3.ab3@21907>     CMP.w #"@@",-1(a5)                                     ;merge lines
00031E1A <AmiBlitz3.ab3@21908>     BNE 'no
00031E1E <AmiBlitz3.ab3@21909>      MOVEM.l D2/A0/A2,-(A7)
00031E24 <AmiBlitz3.ab3@21910>    JSR nextline
00031E28 <AmiBlitz3.ab3@21911>    BEQ.w JUMP_macenderr
00031E2C <AmiBlitz3.ab3@21912>   MOVEM.l (A7)+,D2/A0/A2
00031E2E <AmiBlitz3.ab3@21913>     TST.w D2
00031E32 <AmiBlitz3.ab3@21914>    BEQ.w JL_0_CBB6
00031E36 <AmiBlitz3.ab3@21915> BRA JL_0_CBB6
00031E3A <AmiBlitz3.ab3@21919>   BSR.w JL_0_CC98
00031E3E <AmiBlitz3.ab3@21920> BRA.w JL_0_CBB6
00031E40 <AmiBlitz3.ab3@21923>   ADDQ.w #4,A7
00031E42 <AmiBlitz3.ab3@21924>   MOVE.l A0,D0
00031E48 <AmiBlitz3.ab3@21925>   SUB.l ptr_macrobuffer_begin,D0
00031E4C <AmiBlitz3.ab3@21928>    BEQ.w JL_0_CC5E
00031E50 <AmiBlitz3.ab3@21929>   CMPI.b #":",-(A0)
00031E54 <AmiBlitz3.ab3@21930>    BNE.w JL_0_CC5E
00031E58 <AmiBlitz3.ab3@21931>   CMP.w #$1,D0
00031E5C <AmiBlitz3.ab3@21932>    BEQ.w JL_0_CC58
00031E60 <AmiBlitz3.ab3@21933>   TST.b -$1(A0)
00031E64 <AmiBlitz3.ab3@21934>    BMI.w JL_0_CC5E
00031E66 <AmiBlitz3.ab3@21937>   SUBQ.w #1,D0
00031E6A <AmiBlitz3.ab3@21938> BRA.w JL_0_CC3C
00031E6E <AmiBlitz3.ab3@21941>   MOVE.w D0,$8(A2)
00031E72 <AmiBlitz3.ab3@21942>    BEQ.w JL_0_CC8E
00031E74 <AmiBlitz3.ab3@21943>   MOVEQ.l #$01,D1
00031E7A <AmiBlitz3.ab3@21944>   MOVEA.l _execbase,A6
00031E80 <AmiBlitz3.ab3@21945>   MOVE.l mempool,a0
00031E84 <AmiBlitz3.ab3@21946>   JSR _AllocPooled(a6)
00031E86 <AmiBlitz3.ab3@21948>   MOVEA.l D0,A0
00031E8A <AmiBlitz3.ab3@21949>   MOVE.l A0,$4(A2)
00031E8E <AmiBlitz3.ab3@21950>   MOVE.w $8(A2),D1
00031E92 <AmiBlitz3.ab3@21951>    BEQ.w JL_0_CC8E
00031E94 <AmiBlitz3.ab3@21952>   SUBQ.w #1,D1
00031E9A <AmiBlitz3.ab3@21953>   MOVEA.l ptr_macrobuffer_begin,A1
00031E9C <AmiBlitz3.ab3@21956>     MOVE.b (A1)+,(A0)+
00031EA0 <AmiBlitz3.ab3@21957>   DBF D1,JL_0_CC88
00031EA6 <AmiBlitz3.ab3@21960> JMP get1bytemain
00031EA8 <AmiBlitz3.ab3@21964>   MOVE.w D0,D1
00031EAA <AmiBlitz3.ab3@21965>   LSR.w #8,D1
00031EAC <AmiBlitz3.ab3@21966>   MOVE.b D1,(A0)+
00031EAE <AmiBlitz3.ab3@21969>   MOVEQ.l #-$01,D2
00031EB0 <AmiBlitz3.ab3@21970>   MOVE.b D0,(A0)+
00031EB6 <AmiBlitz3.ab3@21971>   CMPA.l ptr_macrobuffer_end,A0
00031EBA <AmiBlitz3.ab3@21972>    BCC.w macbigerr2
00031EBC <AmiBlitz3.ab3@21973> RTS
00031EC2 <AmiBlitz3.ab3@21974> macbigerr2 JMP macbigerr
00031EC4 <AmiBlitz3.ab3@21977>   MOVE.l d0,-(a7)
00031EC6 <AmiBlitz3.ab3@21978>   MOVEQ #0,d0
00031ECC <AmiBlitz3.ab3@21979>   CLR.b skiptoggle
00031ECE <AmiBlitz3.ab3@21982>     MOVE.b (a5),d0
00031ED2 <AmiBlitz3.ab3@21983>     BEQ 'l3
00031ED6 <AmiBlitz3.ab3@21984>     CMP.b #";",d0
00031EDA <AmiBlitz3.ab3@21985>     BNE 'l2
00031EE2 <AmiBlitz3.ab3@21986>     MOVE.b #1,skiptoggle
00031EE8 <AmiBlitz3.ab3@21989>     TST.b skiptoggle
00031EEC <AmiBlitz3.ab3@21990>     BNE 'l4
00031EF0 <AmiBlitz3.ab3@21991>     CMP.b #":",d0
00031EF4 <AmiBlitz3.ab3@21992>     BEQ 'l3
00031EF6 <AmiBlitz3.ab3@21995>     ADDQ #1,a5
00031EFA <AmiBlitz3.ab3@21996> BRA 'loop
00031F00 <AmiBlitz3.ab3@21999>   MOVE.w d0,lastchar
00031F02 <AmiBlitz3.ab3@22000>   MOVE.l (a7)+,d0
00031F04 <AmiBlitz3.ab3@22001> RTS
00031F08 <AmiBlitz3.ab3@22005>   BSR.w ifchar
00031F0C <AmiBlitz3.ab3@22006>    BNE.w JUMP_syntaxerr
00031F0E <AmiBlitz3.ab3@22007>   MOVE.w D0,D1
00031F14 <AmiBlitz3.ab3@22008>   JSR get1bytemain
00031F18 <AmiBlitz3.ab3@22009>   BSR.w ifchar
00031F1C <AmiBlitz3.ab3@22010>    BNE.w JL_0_CCDA
00031F1E <AmiBlitz3.ab3@22011>   ADDQ.w #1,D0
00031F20 <AmiBlitz3.ab3@22012>   MOVE.w D0,D2
00031F22 <AmiBlitz3.ab3@22013>   ADD.w D0,D0
00031F24 <AmiBlitz3.ab3@22014>   ADD.w D2,D0
00031F26 <AmiBlitz3.ab3@22015>   ADD.w D0,D1
00031F28 <AmiBlitz3.ab3@22016>   MOVE.w D1,D0
00031F2C <AmiBlitz3.ab3@22017>   ANDI.w #$3,D0
00031F30 <AmiBlitz3.ab3@22018>   CMP.w #$3,D0
00031F34 <AmiBlitz3.ab3@22019>    BEQ.w JUMP_syntaxerr
00031F3A <AmiBlitz3.ab3@22021>   JSR get1bytemain
00031F3C <AmiBlitz3.ab3@22024> RTS
00031F3E <AmiBlitz3.ab3@22030> thetst1:  TST.b D0
00031F40 <AmiBlitz3.ab3@22031> thetst2:  TST.w D0
00031F42 <AmiBlitz3.ab3@22032> thetst3:  TST.l D0
00031F44 <AmiBlitz3.ab3@22033> thetst4:  TST.l (A7)+                                      ;Any Length?
00031F48 <AmiBlitz3.ab3@22034> thetst5:  JSR _Reschedule(A6)
00031F4C <AmiBlitz3.ab3@22036> posbr:    BEQ.w posbr
00031F50 <AmiBlitz3.ab3@22037> negbr:    BNE.w negbr
00031F52 <AmiBlitz3.ab3@22041>   MOVEQ.l #-$01,D2
00031F56 <AmiBlitz3.ab3@22042> BRA.w JL_0_D04C
00031F5C <AmiBlitz3.ab3@22046>   CLR.l fp0addr
00031F5E <AmiBlitz3.ab3@22047>   MOVEQ.l #$01,D1                                          ;while flag
00031F60 <AmiBlitz3.ab3@22048>   MOVEQ.l #$00,D2                                          ;negate flag
00031F64 <AmiBlitz3.ab3@22049> BRA.w JL_0_D04E
00031F6A <AmiBlitz3.ab3@22053>   LEA firstrep,A2
00031F6C <AmiBlitz3.ab3@22054>   MOVEQ.l #$08,D2
00031F70 <AmiBlitz3.ab3@22055> BRA.w freeslist
00031F74 <AmiBlitz3.ab3@22059>   LEA firstsel(PC),A2
00031F76 <AmiBlitz3.ab3@22060>   MOVEQ.l #$0E,D2
00031F78 <AmiBlitz3.ab3@22065>   MOVEQ.l #$00,D3
00031F7A <AmiBlitz3.ab3@22073>   MOVE.l (A2),D0
00031F7C <AmiBlitz3.ab3@22074>   CLR.l (A2)
00031F7E <AmiBlitz3.ab3@22075>   MOVEA.l D0,A2
00031F84 <AmiBlitz3.ab3@22076>   MOVEA.l _execbase,A6
00031F88 <AmiBlitz3.ab3@22079>     CMPA.w #$0,A2
00031F8C <AmiBlitz3.ab3@22080>      BEQ.w freelist__done
00031F8E <AmiBlitz3.ab3@22081>     TST.w D3
00031F92 <AmiBlitz3.ab3@22082>      BEQ.w freelist__skip
00031F96 <AmiBlitz3.ab3@22083>     MOVEM.l D2-D3/A2,-(A7)
00031F98 <AmiBlitz3.ab3@22084>     ADDA.w D3,A2
00031F9A <AmiBlitz3.ab3@22085>     MOVE.l D4,D2
00031F9E <AmiBlitz3.ab3@22086>     BSR.w freeslist
00031FA2 <AmiBlitz3.ab3@22087>     MOVEM.l (A7)+,D2-D3/A2
00031FA4 <AmiBlitz3.ab3@22090>     MOVEA.l A2,A1
00031FA6 <AmiBlitz3.ab3@22091>     MOVE.l D2,D0
00031FA8 <AmiBlitz3.ab3@22092>     MOVEA.l (A2),A2
00031FAE <AmiBlitz3.ab3@22093>     MOVE.l mempool,a0
00031FB2 <AmiBlitz3.ab3@22094>     JSR _FreePooled(A6)
00031FB6 <AmiBlitz3.ab3@22095> BRA.w freelist__loop
00031FB8 <AmiBlitz3.ab3@22098> RTS
00031FBE <AmiBlitz3.ab3@22101> JMP eselerr
00031FC2 <AmiBlitz3.ab3@22104> firstsel:  Ds.l 1
00031FC6 <AmiBlitz3.ab3@22107> selpushb:   Dc.b $02,$40,$00,$FF                           ;ANDI.W  #$00FF,D0
00031FC8 <AmiBlitz3.ab3@22110> selpushw:   MOVE.w D0,-(A7)
00031FCA <AmiBlitz3.ab3@22112> selpushl:   MOVE.l D0,-(A7)
00031FCE <AmiBlitz3.ab3@22114> selpushs:   LEA $4(A7),A2                                  ;(a7)=len of string!
00031FD2 <AmiBlitz3.ab3@22117> selcomb:    ANDI.w #$FF,D0
00031FD4 <AmiBlitz3.ab3@22118> selcomw:    CMP.w (A7),D0
00031FD6 <AmiBlitz3.ab3@22120> selcoml:    CMP.l (A7),D0
00031FDA <AmiBlitz3.ab3@22122> selbne:     BNE.w selbne
00031FDC <AmiBlitz3.ab3@22124> endsel:     ADDQ.w #8,A7
00031FE0 <AmiBlitz3.ab3@22130>   MOVE.l firstsel(PC),D0                                  
00031FE4 <AmiBlitz3.ab3@22131>    BEQ.w JUMP_eselerr
00031FE6 <AmiBlitz3.ab3@22132>   MOVEA.l D0,A2
00031FEA <AmiBlitz3.ab3@22133>    BSR.w JL_0_CDFC
00031FF0 <AmiBlitz3.ab3@22136>   MOVEA.l _execbase,A6
00031FF4 <AmiBlitz3.ab3@22139>   MOVE.l $4(A2),D0
00031FF8 <AmiBlitz3.ab3@22140>    BEQ.w doendsel__done
00031FFA <AmiBlitz3.ab3@22141>   MOVEA.l D0,A3
00031FFE <AmiBlitz3.ab3@22142>   MOVEA.l $4(A3),A0
00032004 <AmiBlitz3.ab3@22143>   MOVE.l destpointer,D1
00032006 <AmiBlitz3.ab3@22144>   SUB.l A0,D1
0003200C <AmiBlitz3.ab3@22146>     TST.b fast
00032010 <AmiBlitz3.ab3@22147>     BEQ doendsel__loop_l1
00032016 <AmiBlitz3.ab3@22148>     MOVE.w dontwrite,D0
0003201A <AmiBlitz3.ab3@22149>     BNE.w doendsel__skip
0003201C <AmiBlitz3.ab3@22150>     ADDQ.l #2,d1
00032020 <AmiBlitz3.ab3@22151>     MOVE.l d1,-2(a0)
00032024 <AmiBlitz3.ab3@22152>   BRA doendsel__skip
0003202A <AmiBlitz3.ab3@22156>   TST.w dontwrite
0003202E <AmiBlitz3.ab3@22157>      BNE.w doendsel__skip
00032034 <AmiBlitz3.ab3@22158>   CMP.l #MaxWordSgnd,D1
00032038 <AmiBlitz3.ab3@22159>    BHI.w JUMP_cbraerr
0003203A <AmiBlitz3.ab3@22160>   MOVE.w D1,(A0)
0003203E <AmiBlitz3.ab3@22163>   MOVE.l (A3),$4(A2)                                       ;next of me is new first
00032040 <AmiBlitz3.ab3@22164>   MOVEA.l A3,A1
00032042 <AmiBlitz3.ab3@22165>   MOVEQ.l #$08,D0
00032048 <AmiBlitz3.ab3@22166>   MOVE.l mempool,a0
0003204C <AmiBlitz3.ab3@22167>    JSR _FreePooled(A6)
00032050 <AmiBlitz3.ab3@22168> BRA.w doendsel__loop
00032056 <AmiBlitz3.ab3@22171>   JSR popselect                                            ;fix stack on select
0003205A <AmiBlitz3.ab3@22172>   MOVEA.l firstsel(PC),A1
00032060 <AmiBlitz3.ab3@22173>   MOVE.l (A1),firstsel
00032062 <AmiBlitz3.ab3@22174>   MOVEQ.l #$0E,D0
00032068 <AmiBlitz3.ab3@22175>   MOVEA.l _execbase,A6
0003206E <AmiBlitz3.ab3@22176>   MOVE.l mempool,a0
00032072 <AmiBlitz3.ab3@22177>   JSR _FreePooled(A6)
00032078 <AmiBlitz3.ab3@22178> JMP get1bytemain
0003207A <AmiBlitz3.ab3@22182>   MOVEA.l (A7)+,A1
0003207C <AmiBlitz3.ab3@22183>   SUBQ.w #8,A1
0003207E <AmiBlitz3.ab3@22184>   MOVEQ.l #$09,D0
00032080 <AmiBlitz3.ab3@22185>   ADD.l (A1),D0
00032082 <AmiBlitz3.ab3@22188>   ADDQ.w #2,A7                                             ;for runtime errs!
00032086 <AmiBlitz3.ab3@22193>   MOVE.l firstsel(PC),D0
0003208A <AmiBlitz3.ab3@22194>    BEQ.w JUMP_defaerr
0003208C <AmiBlitz3.ab3@22195>   MOVEA.l D0,A2
00032090 <AmiBlitz3.ab3@22196>   BSR.w JL_0_CE26
00032094 <AmiBlitz3.ab3@22197>   BSR.w JL_0_CDFC
00032098 <AmiBlitz3.ab3@22198>   CLR.l $8(A2)
0003209C <AmiBlitz3.ab3@22199>   MOVE.w $C(A2),D2
000320A0 <AmiBlitz3.ab3@22200> BRA.w JL_0_CE5E
000320A6 <AmiBlitz3.ab3@22203> JMP defaerr
000320AA <AmiBlitz3.ab3@22206>   MOVE.l $8(A2),D0
000320AE <AmiBlitz3.ab3@22207>    BEQ.w JL_0_CE24
000320B0 <AmiBlitz3.ab3@22208>   MOVEA.l D0,A0
000320B6 <AmiBlitz3.ab3@22209>   MOVE.l destpointer,D1
000320B8 <AmiBlitz3.ab3@22210>   SUB.l A0,D1
000320BE <AmiBlitz3.ab3@22212>     TST.b fast
000320C2 <AmiBlitz3.ab3@22213>     BEQ 'l1
000320C8 <AmiBlitz3.ab3@22214>     TST.w dontwrite
000320CC <AmiBlitz3.ab3@22215>     BNE.w JL_0_CE24
000320CE <AmiBlitz3.ab3@22216>     ADDQ.l #2,d1
000320D2 <AmiBlitz3.ab3@22217>     MOVE.l D1,-2(A0)
000320D6 <AmiBlitz3.ab3@22218>   BRA JL_0_CE24
000320DC <AmiBlitz3.ab3@22222>   TST.w dontwrite
000320E0 <AmiBlitz3.ab3@22223>      BNE.w JL_0_CE24
000320E6 <AmiBlitz3.ab3@22224>    CMP.l #MaxWordSgnd,D1
000320EA <AmiBlitz3.ab3@22225>    BHI.w JUMP_cbraerr
000320EC <AmiBlitz3.ab3@22226>   MOVE.w D1,(A0)
000320EE <AmiBlitz3.ab3@22229> RTS
000320F4 <AmiBlitz3.ab3@22232> JMP cbraerr
000320F8 <AmiBlitz3.ab3@22236>   MOVE.l $8(A2),D0
000320FC <AmiBlitz3.ab3@22237>    BEQ.w JL_0_CE5C
000320FE <AmiBlitz3.ab3@22238>   MOVEA.l D0,A3
00032102 <AmiBlitz3.ab3@22239>   MOVE.w #$6000,D1
00032108 <AmiBlitz3.ab3@22241>    TST.b fast
0003210C <AmiBlitz3.ab3@22242>    BEQ 'l1
00032112 <AmiBlitz3.ab3@22243>    OR.l #$ff,d1
00032116 <AmiBlitz3.ab3@22244>    BSR writeword
0003211A <AmiBlitz3.ab3@22248>   BSR.w writeword
0003211C <AmiBlitz3.ab3@22249>   MOVEQ.l #$08,D0
0003211E <AmiBlitz3.ab3@22250>   MOVEQ.l #$01,D1
00032124 <AmiBlitz3.ab3@22251>   MOVEA.l _execbase,A6
0003212A <AmiBlitz3.ab3@22252>   MOVE.l mempool,a0
0003212E <AmiBlitz3.ab3@22253>   JSR _AllocPooled(a6)
00032130 <AmiBlitz3.ab3@22255>   MOVEA.l D0,A0
00032134 <AmiBlitz3.ab3@22256>   MOVE.l $4(A2),(A0)
00032138 <AmiBlitz3.ab3@22257>   MOVE.l A0,$4(A2)
00032140 <AmiBlitz3.ab3@22258>   MOVE.l destpointer,$4(A0)
00032144 <AmiBlitz3.ab3@22259> BRA.w writeword
00032146 <AmiBlitz3.ab3@22262> RTS
0003214C <AmiBlitz3.ab3@22266>   TST.b debugmode
00032150 <AmiBlitz3.ab3@22267>    BEQ.w JL_0_CE7A
00032154 <AmiBlitz3.ab3@22268>   MOVE.w #$C313,D1
00032158 <AmiBlitz3.ab3@22269>   CMP.w #$3,D2
0003215C <AmiBlitz3.ab3@22270>    BCS.w JL_0_CE76
0003215E <AmiBlitz3.ab3@22271>   ADDQ.w #1,D1
00032162 <AmiBlitz3.ab3@22274> BRA.w Atokejsr
00032164 <AmiBlitz3.ab3@22277> RTS
0003216A <AmiBlitz3.ab3@22281> JMP caseerr
0003216E <AmiBlitz3.ab3@22284>   MOVE.l firstsel(PC),D0
00032172 <AmiBlitz3.ab3@22285>    BEQ.w JUMP_caseerr
00032174 <AmiBlitz3.ab3@22286>   MOVEA.l D0,A2
00032178 <AmiBlitz3.ab3@22287>    BSR.w JL_0_CE26
0003217C <AmiBlitz3.ab3@22288>    BSR.w JL_0_CDFC
00032180 <AmiBlitz3.ab3@22289>   MOVE.w $C(A2),D2
00032182 <AmiBlitz3.ab3@22290>   MOVE.w D2,-(A7)
00032186 <AmiBlitz3.ab3@22291>    BSR.w JL_0_CE5E
00032188 <AmiBlitz3.ab3@22292>   MOVE.w (A7),D2
0003218C <AmiBlitz3.ab3@22293>    BSR.w bakeval
0003218E <AmiBlitz3.ab3@22294>   MOVE.w (A7)+,D2
00032192 <AmiBlitz3.ab3@22295>   LEA selcomb(PC),A0
00032196 <AmiBlitz3.ab3@22296>   LEA selcombf(PC),A1
0003219A <AmiBlitz3.ab3@22297>   CMP.w #$1,D2
0003219E <AmiBlitz3.ab3@22298>    BEQ.w JL_0_CED8
000321A2 <AmiBlitz3.ab3@22299>   LEA selcomw(PC),A0
000321A6 <AmiBlitz3.ab3@22300>   CMP.w #$2,D2
000321AA <AmiBlitz3.ab3@22301>    BEQ.w JL_0_CED8
000321AE <AmiBlitz3.ab3@22302>   LEA selcoml(PC),A0
000321B2 <AmiBlitz3.ab3@22303>   LEA selcomlf(PC),A1
000321B6 <AmiBlitz3.ab3@22304>   CMP.w #$7,D2
000321BA <AmiBlitz3.ab3@22305>    BCS.w JL_0_CED8
000321BE <AmiBlitz3.ab3@22307>   MOVE.w #$CE01,D1
000321C2 <AmiBlitz3.ab3@22308>    BSR.w Atokejsr
000321C6 <AmiBlitz3.ab3@22309> BRA.w JL_0_CEDC
000321CA <AmiBlitz3.ab3@22312>   BSR.w pokecode
000321CE <AmiBlitz3.ab3@22315>   MOVE.w selbne(PC),D1
000321D4 <AmiBlitz3.ab3@22317>     TST.b fast
000321D8 <AmiBlitz3.ab3@22318>     BEQ 'l1
000321DE <AmiBlitz3.ab3@22319>     ORI.l #$ff,d1
000321E2 <AmiBlitz3.ab3@22320>     BSR writeword
000321E6 <AmiBlitz3.ab3@22323>   BSR.w writeword
000321EA <AmiBlitz3.ab3@22324>   MOVEA.l firstsel(PC),A0
000321F2 <AmiBlitz3.ab3@22325>   MOVE.l destpointer,$8(A0)
000321F6 <AmiBlitz3.ab3@22326> BRA.w writeword
000321FA <AmiBlitz3.ab3@22330> pcchk:      Dc.b $3F,$3C,$73,$45                           ;MOVE.W  #$7345,-(A7)   ;#"sE",-(a7) org source
000321FC <AmiBlitz3.ab3@22331> clrst:      Dc.b $42,$A7                                   ;CLR.L   -(A7)
00032200 <AmiBlitz3.ab3@22334> sellineat:  Ds.l 1
00032206 <AmiBlitz3.ab3@22340>   TST.b debugmode
0003220A <AmiBlitz3.ab3@22341>    BEQ.w JL_0_CF0E
0003220E <AmiBlitz3.ab3@22342>   MOVE.l pcchk(PC),D1                                      ;move #"sE",-(a7)
00032212 <AmiBlitz3.ab3@22343>    BSR.w writelong
0003221C <AmiBlitz3.ab3@22346>   MOVE.l linenumat,sellineat
00032226 <AmiBlitz3.ab3@22348>    MOVE.l destpointer,pushpc
00032230 <AmiBlitz3.ab3@22349>   MOVE.l hunkoffsetbase,pushoff
00032232 <AmiBlitz3.ab3@22350>   MOVEQ.l #$00,D2
00032236 <AmiBlitz3.ab3@22351>    BSR.w bakevalu                                          ;Evaluate
0003223A <AmiBlitz3.ab3@22352>    BSR.w JL_0_B5D2
0003223E <AmiBlitz3.ab3@22353>   CMP.w #$7,D2
00032242 <AmiBlitz3.ab3@22354>    BNE.w JL_0_CF36
00032246 <AmiBlitz3.ab3@22355>   MOVE.w clrst(PC),D1
0003224A <AmiBlitz3.ab3@22356>    BSR.w writeword
0003224E <AmiBlitz3.ab3@22359>    BSR.w JL_0_B63C
00032252 <AmiBlitz3.ab3@22360>   LEA selpushb(PC),A0
00032256 <AmiBlitz3.ab3@22361>   LEA selpushbf(PC),A1
0003225A <AmiBlitz3.ab3@22362>   CMP.w #$1,D2
0003225E <AmiBlitz3.ab3@22363>    BEQ.w JL_0_CF88
00032262 <AmiBlitz3.ab3@22364>   LEA selpushw(PC),A0
00032266 <AmiBlitz3.ab3@22365>   CMP.w #$2,D2
0003226A <AmiBlitz3.ab3@22366>    BEQ.w JL_0_CF88
0003226E <AmiBlitz3.ab3@22367>   LEA selpushl(PC),A0
00032272 <AmiBlitz3.ab3@22368>   LEA selpushlf(PC),A1
00032276 <AmiBlitz3.ab3@22369>   CMP.w #$7,D2
0003227A <AmiBlitz3.ab3@22370>    BCS.w JL_0_CF88
00032280 <AmiBlitz3.ab3@22372>   MOVE.w moved0a3,D1                                       ;d0 to a3!
00032284 <AmiBlitz3.ab3@22373>    BSR.w writeword
00032288 <AmiBlitz3.ab3@22374>   LEA selpushs(PC),A0
0003228C <AmiBlitz3.ab3@22375>   LEA selpushsf(PC),A1
00032290 <AmiBlitz3.ab3@22376>    BSR.w pokecode
00032294 <AmiBlitz3.ab3@22377>   MOVE.w #$C701,D1
00032298 <AmiBlitz3.ab3@22378>    BSR.w Atokejsr
0003229C <AmiBlitz3.ab3@22379> BRA.w JL_0_CF8C
000322A0 <AmiBlitz3.ab3@22382>   BSR.w pokecode
000322A2 <AmiBlitz3.ab3@22385>   MOVEQ.l #$0E,D0
000322A4 <AmiBlitz3.ab3@22386>   MOVEQ.l #$01,D1
000322AA <AmiBlitz3.ab3@22387>   MOVEA.l _execbase,A6
000322B0 <AmiBlitz3.ab3@22389>   MOVE.l mempool,a0
000322B4 <AmiBlitz3.ab3@22390>   JSR _AllocPooled(a6)
000322B6 <AmiBlitz3.ab3@22391>   MOVEA.l D0,A0
000322BA <AmiBlitz3.ab3@22392>   MOVE.l firstsel(PC),(A0)
000322C0 <AmiBlitz3.ab3@22393>   MOVE.l A0,firstsel
000322C4 <AmiBlitz3.ab3@22394>   CLR.l $4(A0)
000322C8 <AmiBlitz3.ab3@22395>   CLR.l $8(A0)
000322CC <AmiBlitz3.ab3@22396>   MOVE.w D2,$C(A0)
000322CE <AmiBlitz3.ab3@22397> RTS
000322D4 <AmiBlitz3.ab3@22401>   MOVE.l firstrep,D0
000322D8 <AmiBlitz3.ab3@22402>    BEQ.w JUMP_unterr1
000322DC <AmiBlitz3.ab3@22403>   MOVE.w #$6000,D1
000322E0 <AmiBlitz3.ab3@22404>   BSR.w writeword
000322E2 <AmiBlitz3.ab3@22405>   MOVEA.l D0,A0
000322E6 <AmiBlitz3.ab3@22406>   MOVE.l $4(A0),D1
000322EC <AmiBlitz3.ab3@22407>   SUB.l destpointer,D1
000322EE <AmiBlitz3.ab3@22408>   TST.w D1
000322F2 <AmiBlitz3.ab3@22409>    BPL.w JUMP_unterr2
000322F6 <AmiBlitz3.ab3@22410>   BSR.w writeword
000322FC <AmiBlitz3.ab3@22411>   MOVEA.l _execbase,A6
00032300 <AmiBlitz3.ab3@22412> BRA.w JL_0_D036
00032306 <AmiBlitz3.ab3@22415> JMP unterr2
0003230C <AmiBlitz3.ab3@22418> JMP unterr1
00032312 <AmiBlitz3.ab3@22422>   MOVE.l firstrep,D0
00032316 <AmiBlitz3.ab3@22423>    BEQ.w JUMP_unterr1
0003231A <AmiBlitz3.ab3@22424>   BSR.w do_if
00032320 <AmiBlitz3.ab3@22425>   JSR reget
00032324 <AmiBlitz3.ab3@22426>    BNE.w JUMP_syntaxerr
0003232A <AmiBlitz3.ab3@22427>   MOVE.w dontwrite,D1
0003232E <AmiBlitz3.ab3@22428>    BNE.w JL_0_D020
00032334 <AmiBlitz3.ab3@22429>   MOVEA.l firstrep,A0
0003233A <AmiBlitz3.ab3@22430>   MOVEA.l destpointer,A1
00032340 <AmiBlitz3.ab3@22432>     TST.b fast
00032344 <AmiBlitz3.ab3@22433>     BEQ 'l1
00032346 <AmiBlitz3.ab3@22434>     SUBQ.w #4,a1
0003234A <AmiBlitz3.ab3@22435>     MOVE.l $4(A0),D2
0003234C <AmiBlitz3.ab3@22436>     SUB.l A1,D2
0003234E <AmiBlitz3.ab3@22437>     MOVE.l d2,(a1)
00032352 <AmiBlitz3.ab3@22438>   BRA JL_0_D020
00032354 <AmiBlitz3.ab3@22442>   SUBQ.w #2,A1
00032358 <AmiBlitz3.ab3@22443>   MOVE.l $4(A0),D2
0003235A <AmiBlitz3.ab3@22444>   SUB.l A1,D2
0003235C <AmiBlitz3.ab3@22445>   TST.w D2
00032360 <AmiBlitz3.ab3@22446>    BPL.w JUMP_unterr2
00032362 <AmiBlitz3.ab3@22447>   MOVE.w D2,(A1)
00032368 <AmiBlitz3.ab3@22450>   MOVEA.l firstiff,A1
0003236E <AmiBlitz3.ab3@22451>   MOVE.l (A1),firstiff
00032370 <AmiBlitz3.ab3@22452>   MOVEQ.l #$0E,D0
00032376 <AmiBlitz3.ab3@22453>   MOVEA.l _execbase,A6
0003237C <AmiBlitz3.ab3@22454>   MOVE.l mempool,a0
00032380 <AmiBlitz3.ab3@22455>   JSR _FreePooled(A6)
00032386 <AmiBlitz3.ab3@22458>   MOVEA.l firstrep,A1
0003238C <AmiBlitz3.ab3@22459>   MOVE.l (A1),firstrep
0003238E <AmiBlitz3.ab3@22460>   MOVEQ.l #$08,D0
00032394 <AmiBlitz3.ab3@22461>   MOVE.l mempool,a0
00032398 <AmiBlitz3.ab3@22462> JMP _FreePooled(A6)
0003239C <AmiBlitz3.ab3@22465> iflineat:   Ds.l 1
0003239E <AmiBlitz3.ab3@22469>   MOVEQ.l #$00,D2
000323A4 <AmiBlitz3.ab3@22470>   TST.b fast
000323A8 <AmiBlitz3.ab3@22471>   BEQ 'l1
000323B0 <AmiBlitz3.ab3@22472>   MOVE.b #1,nostringopt
000323B8 <AmiBlitz3.ab3@22473>   MOVE.b #1,iniffcommand
000323BA <AmiBlitz3.ab3@22477>   MOVEQ.l #$00,D1
000323BC <AmiBlitz3.ab3@22480>   MOVE.w D1,-(A7)
000323C2 <AmiBlitz3.ab3@22481>   MOVE.l destpointer,-(A7)
000323C4 <AmiBlitz3.ab3@22482>   MOVE.w D2,-(A7)
000323CE <AmiBlitz3.ab3@22483>   MOVE.l linenumat,iflineat
000323D0 <AmiBlitz3.ab3@22484>   MOVEQ.l #$00,D2
000323DA <AmiBlitz3.ab3@22485>   MOVE.b optistring,optistring2
000323E2 <AmiBlitz3.ab3@22486>   MOVE.b #1,optistring
000323E6 <AmiBlitz3.ab3@22487>   BSR.w bakevalu
000323F0 <AmiBlitz3.ab3@22488>   MOVE.b optistring2,optistring
000323F4 <AmiBlitz3.ab3@22489>   CMP.w #$5,D2
000323F8 <AmiBlitz3.ab3@22490>    BEQ.w JL_0_D09C
000323FC <AmiBlitz3.ab3@22491>   MOVE.w thetst1(PC),D1
00032400 <AmiBlitz3.ab3@22492>   CMP.w #$1,D2
00032404 <AmiBlitz3.ab3@22493>    BEQ.w writebranchcode
00032408 <AmiBlitz3.ab3@22494>   MOVE.w thetst2(PC),D1
0003240C <AmiBlitz3.ab3@22495>   CMP.w #$2,D2
00032410 <AmiBlitz3.ab3@22496>    BEQ.w writebranchcode
00032414 <AmiBlitz3.ab3@22497>   MOVE.w thetst4(PC),D1
00032418 <AmiBlitz3.ab3@22498>   CMP.w #$7,D2
0003241C <AmiBlitz3.ab3@22499>    BEQ.w writebranchcode
00032420 <AmiBlitz3.ab3@22500>   MOVE.w thetst3(PC),D1
00032424 <AmiBlitz3.ab3@22501> BRA.w writebranchcode
0003242A <AmiBlitz3.ab3@22504>   TST.b fpu
0003242E <AmiBlitz3.ab3@22505>   BEQ 'dofpu
00032434 <AmiBlitz3.ab3@22506>   MOVE.l #$f200003a,d1
00032438 <AmiBlitz3.ab3@22507>   BSR writelong
0003243C <AmiBlitz3.ab3@22508>   MOVE.w #$f2c1,d1
00032440 <AmiBlitz3.ab3@22509>   BSR writeword
00032444 <AmiBlitz3.ab3@22510>   BSR writelong
00032446 <AmiBlitz3.ab3@22511>   ADDQ.l #2,a7
0003244A <AmiBlitz3.ab3@22512> BRA.w br2
0003244E <AmiBlitz3.ab3@22515>    MOVE.w #$C900,D1
00032452 <AmiBlitz3.ab3@22516>    BSR.w Atokejsr
00032456 <AmiBlitz3.ab3@22517>   MOVE.l thetst5(PC),D1
0003245A <AmiBlitz3.ab3@22518>    BSR.w writelong
0003245E <AmiBlitz3.ab3@22519> BRA.w JL_0_D0B4
00032464 <AmiBlitz3.ab3@22523>          CLR.b iniffcommand
0003246A <AmiBlitz3.ab3@22524>          TST.b fast                                        ;branchcode
0003246E <AmiBlitz3.ab3@22525>          BEQ b6
00032474 <AmiBlitz3.ab3@22526>          TST.b fpu
00032478 <AmiBlitz3.ab3@22527>          BEQ 'nofpu
0003247E <AmiBlitz3.ab3@22531>           MOVE.l destpointer,a0
00032484 <AmiBlitz3.ab3@22532>          SUB.l load_var_addr,a0
0003248A <AmiBlitz3.ab3@22533>          CMP.l #4,a0
0003248E <AmiBlitz3.ab3@22534>          BEQ 'nofpu
00032496 <AmiBlitz3.ab3@22535>          CMP.l #$f2400014,-4(a4)                           ;<
0003249A <AmiBlitz3.ab3@22536>          BNE 'nolt
000324A0 <AmiBlitz3.ab3@22537>          SUBQ.l #2,destpointer
000324A6 <AmiBlitz3.ab3@22538>          MOVE.w #$f293,-4(a4)                              ;
000324AA <AmiBlitz3.ab3@22539> BRA 'brf
000324B2 <AmiBlitz3.ab3@22542>   CMP.l #$f2400015,-4(a4)                                  ;<=
000324B6 <AmiBlitz3.ab3@22543>          BNE 'nole
000324BC <AmiBlitz3.ab3@22544>          SUBQ.l #2,destpointer
000324C2 <AmiBlitz3.ab3@22545>          MOVE.w #$f292,-4(a4)
000324C6 <AmiBlitz3.ab3@22546> BRA 'brf
000324CE <AmiBlitz3.ab3@22549>   CMP.l #$f2400013,-4(a4)                                  ;=>
000324D2 <AmiBlitz3.ab3@22550>          BNE 'noge
000324D8 <AmiBlitz3.ab3@22551>          SUBQ.l #2,destpointer
000324DE <AmiBlitz3.ab3@22552>          MOVE.w #$f294,-4(a4)
000324E2 <AmiBlitz3.ab3@22553> BRA 'brf
000324EA <AmiBlitz3.ab3@22556>   CMP.l #$f2400012,-4(a4)                                  ;>
000324EE <AmiBlitz3.ab3@22557>          BNE 'nogt
000324F4 <AmiBlitz3.ab3@22558>          SUBQ.l #2,destpointer
000324FA <AmiBlitz3.ab3@22559>          MOVE.w #$f295,-4(a4)
000324FE <AmiBlitz3.ab3@22560> BRA 'brf
00032506 <AmiBlitz3.ab3@22563>   CMP.l #$f2400001,-4(a4)                                  ;=
0003250A <AmiBlitz3.ab3@22564>          BNE 'noeq
00032510 <AmiBlitz3.ab3@22565>          SUBQ.l #2,destpointer
00032516 <AmiBlitz3.ab3@22566>          MOVE.w #$f28e,-4(a4)
0003251A <AmiBlitz3.ab3@22567> BRA 'brf
00032522 <AmiBlitz3.ab3@22570>   CMP.l #$f240000e,-4(a4)                                  ;<>
00032526 <AmiBlitz3.ab3@22571>          BNE 'none
0003252C <AmiBlitz3.ab3@22572>          SUBQ.l #2,destpointer
00032532 <AmiBlitz3.ab3@22573>          MOVE.w #$f281,-4(a4)
00032534 <AmiBlitz3.ab3@22576>   ADDQ.l #2,a7
0003253A <AmiBlitz3.ab3@22578>     TST.b fast
0003253E <AmiBlitz3.ab3@22579>     BEQ 'l1
00032544 <AmiBlitz3.ab3@22580>     OR.b #$40,-3(a4)
00032548 <AmiBlitz3.ab3@22581>     BSR writeword
0003254C <AmiBlitz3.ab3@22585>  BSR writeword
00032550 <AmiBlitz3.ab3@22586> BRA.s br2
00032556 <AmiBlitz3.ab3@22590>   MOVE.l destpointer,a0
0003255C <AmiBlitz3.ab3@22591>          SUB.l load_var_addr,a0
00032562 <AmiBlitz3.ab3@22592>          CMP.l #4,a0
00032566 <AmiBlitz3.ab3@22593>          BEQ JL_0_D0B4
0003256C <AmiBlitz3.ab3@22594>          CMP.w #$4eb9,-6(a4)
00032570 <AmiBlitz3.ab3@22595>          BEQ b6
00032576 <AmiBlitz3.ab3@22596>          CMP.w #$5ec0,-2(a4)                               ;>
0003257A <AmiBlitz3.ab3@22597>      BNE.s 'lb1
00032580 <AmiBlitz3.ab3@22598>          MOVE.w #$6f00,-2(a4)                              ;ble
00032584 <AmiBlitz3.ab3@22599> BRA.s br
0003258A <AmiBlitz3.ab3@22602>  CMP.w #$5dc0,-2(a4)                                       ;<
0003258E <AmiBlitz3.ab3@22603>   BNE.s 'lb2
00032594 <AmiBlitz3.ab3@22604>          MOVE.w #$6c00,-2(a4)                              ;bge
00032598 <AmiBlitz3.ab3@22605> BRA.s br
0003259E <AmiBlitz3.ab3@22608>   CMP.w #$57c0,-2(a4)                                      ;=
000325A2 <AmiBlitz3.ab3@22609>   BNE.s 'lb3
000325A8 <AmiBlitz3.ab3@22610>          MOVE.w #$6600,-2(a4)                              ;bne
000325AC <AmiBlitz3.ab3@22611> BRA.s br
000325B2 <AmiBlitz3.ab3@22614>   CMP.w #$56c0,-2(a4)                                      ;<>
000325B6 <AmiBlitz3.ab3@22615>   BNE.s 'lb4
000325BC <AmiBlitz3.ab3@22616>          MOVE.w #$6700,-2(a4)                              ;beq
000325C0 <AmiBlitz3.ab3@22617> BRA.s br
000325C6 <AmiBlitz3.ab3@22620>   CMP.w #$5cc0,-2(a4)                                      ;>=
000325CA <AmiBlitz3.ab3@22621>   BNE.s 'lb5
000325D0 <AmiBlitz3.ab3@22622>          MOVE.w #$6d00,-2(a4)                              ;blt
000325D4 <AmiBlitz3.ab3@22623> BRA.s br
000325DA <AmiBlitz3.ab3@22626>   CMP.w #$5fc0,-2(a4)                                      ;<=
000325DE <AmiBlitz3.ab3@22627>         BNE.s b6
000325E4 <AmiBlitz3.ab3@22628>          MOVE.w #$6e00,-2(a4)                              ;bgt
000325E6 <AmiBlitz3.ab3@22631>   TST.w (a7)+
000325EC <AmiBlitz3.ab3@22633>         TST.b fast
000325F0 <AmiBlitz3.ab3@22634>         BEQ 'l1
000325F6 <AmiBlitz3.ab3@22635>         OR.b #$ff,-1(a4)                                   ;long branches
000325FA <AmiBlitz3.ab3@22636>         BSR writeword
000325FE <AmiBlitz3.ab3@22640>         BSR writeword
00032602 <AmiBlitz3.ab3@22641> BRA.s br2
00032606 <AmiBlitz3.ab3@22644>   BSR.w writeword
0003260A <AmiBlitz3.ab3@22647>   MOVE.l posbr(PC),D1
0003260C <AmiBlitz3.ab3@22648>   TST.w (A7)+
00032610 <AmiBlitz3.ab3@22649>    BEQ.w JL_0_D0C2
00032614 <AmiBlitz3.ab3@22650>   MOVE.l negbr(PC),D1
0003261A <AmiBlitz3.ab3@22653>   TST.b fast
0003261E <AmiBlitz3.ab3@22654>            BEQ 'l1
00032624 <AmiBlitz3.ab3@22655>            OR.l #$00ff0000,d1
00032628 <AmiBlitz3.ab3@22656>            BSR writelong
0003262C <AmiBlitz3.ab3@22657>            BSR writeword
00032630 <AmiBlitz3.ab3@22658> BRA br2
00032634 <AmiBlitz3.ab3@22661>   BSR.w writelong
00032636 <AmiBlitz3.ab3@22664>  MOVEQ.l #$0E,D0
00032638 <AmiBlitz3.ab3@22665>   MOVEQ.l #$01,D1
0003263E <AmiBlitz3.ab3@22666>   MOVEA.l _execbase,A6
00032644 <AmiBlitz3.ab3@22668>   MOVE.l mempool,a0
00032648 <AmiBlitz3.ab3@22669>   JSR _AllocPooled(a6)
0003264A <AmiBlitz3.ab3@22670>   MOVEA.l D0,A0
00032650 <AmiBlitz3.ab3@22671>   MOVE.l firstiff,(A0)
00032656 <AmiBlitz3.ab3@22672>   MOVE.l A0,firstiff
0003265A <AmiBlitz3.ab3@22673>   MOVE.l (A7)+,$4(A0)
00032662 <AmiBlitz3.ab3@22674>   MOVE.l destpointer,$8(A0)
00032666 <AmiBlitz3.ab3@22675>   MOVE.w (A7)+,$C(A0)
0003266C <AmiBlitz3.ab3@22676>    JSR reget
00032670 <AmiBlitz3.ab3@22677>    BEQ.w JL_0_D10C
00032676 <AmiBlitz3.ab3@22678>   BSET #$7,$C(A0)
00032680 <AmiBlitz3.ab3@22682>   MOVE.w oldqflag,instringon
00032686 <AmiBlitz3.ab3@22683>   MOVEA.l lastsourcepos,A5
0003268E <AmiBlitz3.ab3@22684>   MOVE.w #$003A,lastchar
00032690 <AmiBlitz3.ab3@22687> RTS
00032694 <AmiBlitz3.ab3@22691>   CMP.w #$1,D0
00032698 <AmiBlitz3.ab3@22692>    BLT.w JL_0_D128
0003269C <AmiBlitz3.ab3@22693>   CMP.w #$0,D0
000326A0 <AmiBlitz3.ab3@22694>    BGT.w JL_0_D128
000326A2 <AmiBlitz3.ab3@22695>   ADD.w D0,D0
000326A4 <AmiBlitz3.ab3@22696>   ADD.w D0,D0
000326A8 <AmiBlitz3.ab3@22697>   MOVEA.l JL_0_D128(PC,D0.W),A0
000326AA <AmiBlitz3.ab3@22700> JMP (A0)
000326AE <AmiBlitz3.ab3@22703> BRA.w JL_0_D128
000326B2 <AmiBlitz3.ab3@22707>   CMP.w #$1,D0
000326B6 <AmiBlitz3.ab3@22708>    BLT.w JL_0_D146
000326BA <AmiBlitz3.ab3@22709>   CMP.w #$0,D0
000326BE <AmiBlitz3.ab3@22710>    BGT.w JL_0_D146
000326C0 <AmiBlitz3.ab3@22711>   ADD.w D0,D0
000326C2 <AmiBlitz3.ab3@22712>   ADD.w D0,D0
000326C6 <AmiBlitz3.ab3@22713>   MOVEA.l JL_0_D146(PC,D0.W),A0
000326C8 <AmiBlitz3.ab3@22716>   JSR (A0)
000326CC <AmiBlitz3.ab3@22719> BRA.w JL_0_D146
000326D0 <AmiBlitz3.ab3@22723>   CMP.w #$1,D0
000326D4 <AmiBlitz3.ab3@22724>    BLT.w JL_0_D168
000326D8 <AmiBlitz3.ab3@22725>   CMP.w #$0,D0
000326DC <AmiBlitz3.ab3@22726>    BGT.w JL_0_D168
000326DE <AmiBlitz3.ab3@22727>   ADD.w D0,D0
000326E0 <AmiBlitz3.ab3@22728>   ADD.w D0,D0
000326E4 <AmiBlitz3.ab3@22729>   MOVEA.l JL_0_D168(PC,D0.W),A0
000326E8 <AmiBlitz3.ab3@22732>   MOVE.w #$6753,-(A7)                                      ;#'gS' ;for runtime error checking!
000326EA <AmiBlitz3.ab3@22735>    JSR (A0)
000326EE <AmiBlitz3.ab3@22738> BRA.w JL_0_D168
000326F0 <AmiBlitz3.ab3@22741> labcnt:   Ds.w 1
000326F2 <AmiBlitz3.ab3@22748>   MOVEQ.l #$02,D2
000326F6 <AmiBlitz3.ab3@22749>    BSR.w bakeval
000326FA <AmiBlitz3.ab3@22750>   LEA JL_0_D10E(PC),A0
000326FE <AmiBlitz3.ab3@22751>   LEA JL_0_D12C(PC),A1
00032702 <AmiBlitz3.ab3@22752>   MOVE.w #$001A,D1
00032706 <AmiBlitz3.ab3@22753>   CMP.w #-$7FFB,D0
0003270A <AmiBlitz3.ab3@22754>    BEQ.w JL_0_D1B6
0003270E <AmiBlitz3.ab3@22755>   CMP.w #-$7FFA,D0
00032712 <AmiBlitz3.ab3@22756>    BNE.w JUMP_syntaxerr
00032716 <AmiBlitz3.ab3@22757>   LEA JL_0_D12C(PC),A0
0003271A <AmiBlitz3.ab3@22758>   LEA JL_0_D14A(PC),A1
0003271E <AmiBlitz3.ab3@22759>   MOVE.w #$001A,D1
00032724 <AmiBlitz3.ab3@22760>   TST.b debugmode
00032728 <AmiBlitz3.ab3@22761>    BEQ.b JL_0_D1B6
0003272E <AmiBlitz3.ab3@22762>    JSR chkstak
00032732 <AmiBlitz3.ab3@22763>   LEA JL_0_D14A(PC),A0
00032736 <AmiBlitz3.ab3@22764>   LEA labcnt(PC),A1
0003273A <AmiBlitz3.ab3@22765>   MOVE.w #$001E,D1
0003273C <AmiBlitz3.ab3@22768>   MOVE.w D1,-(A7)
00032742 <AmiBlitz3.ab3@22769>   MOVE.l destpointer,-(A7)                                 ;for when we know number of labels!
00032746 <AmiBlitz3.ab3@22770>    BSR.w pokecode
0003274C <AmiBlitz3.ab3@22771>   CLR.w labcnt
00032752 <AmiBlitz3.ab3@22776>    JSR get1bytemain
00032758 <AmiBlitz3.ab3@22777>   SUBQ.l #2,destpointer                                    ;for makealab!
0003275C <AmiBlitz3.ab3@22778>    BSR.w JL_0_AE22
00032762 <AmiBlitz3.ab3@22779>   ADDQ.l #2,destpointer
00032768 <AmiBlitz3.ab3@22780>    JSR addoff
0003276C <AmiBlitz3.ab3@22781>   MOVE.l $8(A2),D1
00032770 <AmiBlitz3.ab3@22782>    BSR.w writelong
00032776 <AmiBlitz3.ab3@22783>   ADDQ.w #1,labcnt
0003277C <AmiBlitz3.ab3@22784>    JSR reget
00032780 <AmiBlitz3.ab3@22785>   CMP.w #$2C,D0
00032784 <AmiBlitz3.ab3@22786>    BEQ.w JL_0_D1C8
00032786 <AmiBlitz3.ab3@22787>   MOVEA.l (A7)+,A0
00032788 <AmiBlitz3.ab3@22788>   MOVE.w (A7)+,D2
0003278E <AmiBlitz3.ab3@22789>   MOVE.w dontwrite,D1
00032792 <AmiBlitz3.ab3@22790>    BNE.w JL_0_D21A
00032796 <AmiBlitz3.ab3@22791>   MOVE.w labcnt(PC),D1
0003279A <AmiBlitz3.ab3@22792>   MOVE.w D1,$A(A0)
0003279C <AmiBlitz3.ab3@22793>   ADD.w D1,D1
0003279E <AmiBlitz3.ab3@22794>   ADD.w D1,D1
000327A0 <AmiBlitz3.ab3@22795>   ADDQ.w #2,D1
000327A4 <AmiBlitz3.ab3@22796>   MOVE.w D1,$2(A0,D2.W)
000327A6 <AmiBlitz3.ab3@22799> RTS
000327AC <AmiBlitz3.ab3@22803>   TST.b debugmode
000327B0 <AmiBlitz3.ab3@22804>    BEQ.w JL_0_D236
000327B6 <AmiBlitz3.ab3@22805>    JSR chkstak
000327BC <AmiBlitz3.ab3@22806>   MOVE.l AL_0_D162,D1
000327C0 <AmiBlitz3.ab3@22807>    BSR.w writelong
000327C6 <AmiBlitz3.ab3@22809>   MOVE.w gosubcode,D1
000327CA <AmiBlitz3.ab3@22810> BRA.w JL_0_D246
000327D0 <AmiBlitz3.ab3@22814>   MOVE.w gotocode,D1
000327D2 <AmiBlitz3.ab3@22817>   MOVE.w D1,-(A7)
000327D6 <AmiBlitz3.ab3@22818>    BSR.w JL_0_AE22
000327D8 <AmiBlitz3.ab3@22819>   MOVE.w (A7)+,D1
000327DC <AmiBlitz3.ab3@22820>    BSR.w writeword
000327E2 <AmiBlitz3.ab3@22821>    JSR addoff
000327E6 <AmiBlitz3.ab3@22822>   MOVE.l $8(A2),D1
000327EA <AmiBlitz3.ab3@22823> BRA.w writelong
000327F0 <AmiBlitz3.ab3@22827>   MOVE.w proceduremode,D1
000327F4 <AmiBlitz3.ab3@22828>    BEQ.w JUMP_badpenderr
000327F8 <AmiBlitz3.ab3@22829>   MOVE.w #$4EF9,D1
000327FC <AmiBlitz3.ab3@22830>    BSR.w writeword
00032802 <AmiBlitz3.ab3@22831>    JSR addoff
00032808 <AmiBlitz3.ab3@22832>   MOVEA.l _execbase,A6
0003280A <AmiBlitz3.ab3@22833>   MOVEQ.l #$08,D0
0003280C <AmiBlitz3.ab3@22834>   MOVEQ.l #$01,D1
00032812 <AmiBlitz3.ab3@22836>   MOVE.l mempool,a0
00032816 <AmiBlitz3.ab3@22837>   JSR _AllocPooled(a6)
00032818 <AmiBlitz3.ab3@22838>   MOVEA.l D0,A0
0003281E <AmiBlitz3.ab3@22839>   MOVE.l firstpend,(A0)
00032824 <AmiBlitz3.ab3@22840>   MOVE.l A0,firstpend
0003282C <AmiBlitz3.ab3@22841>   MOVE.l destpointer,$4(A0)
00032830 <AmiBlitz3.ab3@22842> BRA.w writelong
00032834 <AmiBlitz3.ab3@22846>   BSR.w do_AsmExit
0003283A <AmiBlitz3.ab3@22847> JMP get1bytemain
00032842 <AmiBlitz3.ab3@22851>   MOVE.b #1,nostringopt
00032846 <AmiBlitz3.ab3@22852>   MOVEM.l a0/a1/d1,-(a7)
0003284C <AmiBlitz3.ab3@22853>   MOVEA.l currentfunction,A0
00032852 <AmiBlitz3.ab3@22854>     CMP.l #0,a0
00032856 <AmiBlitz3.ab3@22855>     BNE 'l1
0003285C <AmiBlitz3.ab3@22856>     JMP errorasmexit
0003285E <AmiBlitz3.ab3@22857> 'l1 MOVEQ.l #$00,D2
00032862 <AmiBlitz3.ab3@22858>   MOVE.b $5(A0),D2
00032866 <AmiBlitz3.ab3@22859>   BSR.w eval
0003286C <AmiBlitz3.ab3@22861>   MOVEA.l currentfunction,A0
00032870 <AmiBlitz3.ab3@22862>   MOVE.l funcstruct_returntype(a0),a0
00032876 <AmiBlitz3.ab3@22863>   CMP.l #0,a0
0003287A <AmiBlitz3.ab3@22864>   BEQ 'isstatement
00032882 <AmiBlitz3.ab3@22865>   CMP.l #$100,4(a0)
00032886 <AmiBlitz3.ab3@22866>   BLT.w 'isvar
00032888 <AmiBlitz3.ab3@22867>   MOVE.l a2,a1
0003288E <AmiBlitz3.ab3@22868>   TST.l typetocast
00032892 <AmiBlitz3.ab3@22869>   BEQ 'nocast
00032898 <AmiBlitz3.ab3@22870>   MOVE.l typetocast,a1
0003289A <AmiBlitz3.ab3@22871> 'nocast  CMP.l a0,a1
0003289E <AmiBlitz3.ab3@22872>   BEQ 'ok
000328A4 <AmiBlitz3.ab3@22873>   CLR.l typetocast
000328AA <AmiBlitz3.ab3@22874>   MOVE.l lasttoken,d1
000328AE <AmiBlitz3.ab3@22875>   CMP.w #$b581,d1                   ; ok, when token for null
000328B2 <AmiBlitz3.ab3@22876>   BEQ 'isnull
000328B8 <AmiBlitz3.ab3@22877> 'error  JMP errorconvertreturntype
000328BC <AmiBlitz3.ab3@22884>   MOVEM.l (a7)+,a0/a1/d1
000328C0 <AmiBlitz3.ab3@22885> BRA.w do_AsmExit
000328C6 <AmiBlitz3.ab3@22887> error_convert_types2 JMP error_convert_types
000328CC <AmiBlitz3.ab3@22900>   TST.b debugmode
000328D0 <AmiBlitz3.ab3@22901>    BEQ.w JL_0_D2CA
000328D4 <AmiBlitz3.ab3@22902>   MOVE.w #$C305,D1
000328D8 <AmiBlitz3.ab3@22903> BRA.w Atokejsr
000328DC <AmiBlitz3.ab3@22906>   MOVE.w #$4E75,D1
000328E0 <AmiBlitz3.ab3@22907> BRA.w writeword
000328E4 <AmiBlitz3.ab3@22910> localslist:  Ds.l 1                                        ;all locals for procs.;??Looks like obsovled data??
000328E8 <AmiBlitz3.ab3@22911> proclocals:  Ds.l 1                                        ;for debugga!
000328EA <AmiBlitz3.ab3@22912> procnum:     Ds.w 1
000328EC <AmiBlitz3.ab3@22913> procnum2:    Ds.w 1
000328F0 <AmiBlitz3.ab3@22914> prolineat:   Ds.l 1
000328F6 <AmiBlitz3.ab3@22918>    TST.w proceduremode
000328FA <AmiBlitz3.ab3@22919>    BGT JUMP_sreterr
000328FE <AmiBlitz3.ab3@22920>    CMP.w #-$7FF9,D0
00032902 <AmiBlitz3.ab3@22921>    BEQ.w JL_0_D29C
00032904 <AmiBlitz3.ab3@22922>    MOVEQ.l #-$01,D1
00032908 <AmiBlitz3.ab3@22923> BRA.w do_function2
0003290E <AmiBlitz3.ab3@22926> JMP sreterr
00032914 <AmiBlitz3.ab3@22930>   CLR.b skipfunc
0003291A <AmiBlitz3.ab3@22931>   TST.l unusedfunc
0003291E <AmiBlitz3.ab3@22932>   BEQ 'ex
00032922 <AmiBlitz3.ab3@22933>   MOVEM.l d0-d7/a0-a6,-(a7)
00032928 <AmiBlitz3.ab3@22934>   MOVE.l unusedfunc,d1
0003292E <AmiBlitz3.ab3@22935>   LEA ptr_parameterstore,a5
00032930 <AmiBlitz3.ab3@22938>   MOVE.l d1,a0
00032934 <AmiBlitz3.ab3@22939>   LEA 12(a0),a2
00032936 <AmiBlitz3.ab3@22940>   MOVE.l a5,a1
00032938 <AmiBlitz3.ab3@22942>   CMPM.b (a1)+,(a2)+
0003293C <AmiBlitz3.ab3@22943>   BNE 'neq
0003293E <AmiBlitz3.ab3@22944>   TST.b (a2)
00032942 <AmiBlitz3.ab3@22945>   BNE 'ch
00032944 <AmiBlitz3.ab3@22946>   TST.b (a1)
00032948 <AmiBlitz3.ab3@22947>   BNE 'neq
00032950 <AmiBlitz3.ab3@22948>   MOVE.b #1,skipfunc
00032954 <AmiBlitz3.ab3@22949> BRA 'out
00032956 <AmiBlitz3.ab3@22952>   MOVE.l (a0),d1
0003295A <AmiBlitz3.ab3@22953>   BNE 'ag
0003295E <AmiBlitz3.ab3@22956>   MOVEM.l (a7)+,d0-d7/a0-a6
00032960 <AmiBlitz3.ab3@22959> RTS
00032966 <AmiBlitz3.ab3@22963> JMP dupprocerr
0003296C <AmiBlitz3.ab3@22966> JMP illprocperr
00032974 <AmiBlitz3.ab3@22973>   CMP.w #-1,proceduremode                                  ;was JUMP_sreterr_2
00032978 <AmiBlitz3.ab3@22974>    BEQ JUMP_sreterr
0003297C <AmiBlitz3.ab3@22975>   CMP.w #-$7FF9,D0
00032980 <AmiBlitz3.ab3@22976>    BEQ.w do_function_return
0003298A <AmiBlitz3.ab3@22979>   MOVE.w oldqflag,instringon
00032990 <AmiBlitz3.ab3@22980>   MOVEA.l lastsourcepos,A5
00032996 <AmiBlitz3.ab3@22981>   JSR getfunctionreturntype
0003299C <AmiBlitz3.ab3@22982>   JSR get1bytemain
000329A2 <AmiBlitz3.ab3@22985>   TST.b declare
000329A6 <AmiBlitz3.ab3@22986>   BEQ 'l1
000329AE <AmiBlitz3.ab3@22987>   MOVE.b #1,nowdeclare
000329B4 <AmiBlitz3.ab3@22990>   JSR errchx                                           ;writejumpoverfunction
000329BA <AmiBlitz3.ab3@22993>   CLR.b fastfunc
000329C4 <AmiBlitz3.ab3@22994>   MOVE.l firstiff,firstiffstore
000329CC <AmiBlitz3.ab3@22995>   CMP.l #"FAST",-1(a5)
000329D0 <AmiBlitz3.ab3@22996>   BNE 'nofast
000329D6 <AmiBlitz3.ab3@22997>   CMP.b #" ",3(a5)
000329DA <AmiBlitz3.ab3@22998>   BNE 'nofast
000329DC <AmiBlitz3.ab3@22999>   ADDQ.l #3,a5
000329E0 <AmiBlitz3.ab3@23002>     CMP.b #" ",(a5)
000329E4 <AmiBlitz3.ab3@23003>      BNE 'x1
000329E6 <AmiBlitz3.ab3@23004>     ADDQ #1,a5
000329EA <AmiBlitz3.ab3@23005> BRA 'x2
000329F0 <AmiBlitz3.ab3@23008>   MOVE.l a5,lastsourcepos
000329F8 <AmiBlitz3.ab3@23009>   MOVE.b #1,fastfunc
00032A00 <AmiBlitz3.ab3@23012>   CMP.l #"NOOP",-1(a5)                                     ;compile 3* so its deactivate
00032A04 <AmiBlitz3.ab3@23013> BRA 'noopt
00032A0A <AmiBlitz3.ab3@23015>   CMP.w #"T ",3(a5)                                        ;??Looks like dead code??
00032A0E <AmiBlitz3.ab3@23016>   BNE 'noopt
00032A10 <AmiBlitz3.ab3@23017>   ADDQ.l #4,a5
00032A14 <AmiBlitz3.ab3@23020>     CMP.b #" ",(a5)
00032A18 <AmiBlitz3.ab3@23021>      BNE 'x1b
00032A1A <AmiBlitz3.ab3@23022>     ADDQ #1,a5
00032A1E <AmiBlitz3.ab3@23023> BRA 'x2b
00032A24 <AmiBlitz3.ab3@23026>   MOVE.l a5,lastsourcepos
00032A2A <AmiBlitz3.ab3@23028>   JSR makename2
00032A2E <AmiBlitz3.ab3@23029> BRA 'l1
00032A34 <AmiBlitz3.ab3@23033>   JSR makename2
00032A3A <AmiBlitz3.ab3@23034>   JSR checkused
00032A40 <AmiBlitz3.ab3@23035>   TST.b skipfunc
00032A44 <AmiBlitz3.ab3@23036>    BEQ 'l1
00032A4A <AmiBlitz3.ab3@23037>   JSR skipme
00032A50 <AmiBlitz3.ab3@23038>   CLR.b fastfunc
00032A52 <AmiBlitz3.ab3@23039> RTS
00032A5C <AmiBlitz3.ab3@23042>   MOVE.l linenumat,prolineat
00032A62 <AmiBlitz3.ab3@23043>   ADDQ.w #1,procnum2
00032A6A <AmiBlitz3.ab3@23044>   MOVE.w procnum2(PC),procnum
00032A70 <AmiBlitz3.ab3@23045>   MOVE.w D1,proceduremode
00032A76 <AmiBlitz3.ab3@23046>   CLR.w locvaroff
00032A7A <AmiBlitz3.ab3@23047>   CMP.w #$7B,D0
00032A7E <AmiBlitz3.ab3@23048>    BNE.w JUMP_syntaxerr
00032A86 <AmiBlitz3.ab3@23049>    MOVE.b #1,infunctioncode
00032A8C <AmiBlitz3.ab3@23050>   MOVEA.l tempvm,A0
00032A94 <AmiBlitz3.ab3@23051>   MOVE.w $C(A0),memlibstat
00032A9A <AmiBlitz3.ab3@23052>   BCLR #$7,$C(A0)                                          ;Bit out of range
00032A9E <AmiBlitz3.ab3@23053>   MOVE.w #$4EF9,D1
00032AA2 <AmiBlitz3.ab3@23054>    BSR.w writeword
00032AA8 <AmiBlitz3.ab3@23055>    JSR addoff
00032AAC <AmiBlitz3.ab3@23056>    BSR.w writelong
00032AB2 <AmiBlitz3.ab3@23057>    JSR findproc                                          ;findproc function
00032AB6 <AmiBlitz3.ab3@23058>    BEQ.w JUMP_dupprocerr
00032ABC <AmiBlitz3.ab3@23059>    JSR addlabel
00032AC2 <AmiBlitz3.ab3@23060>    MOVE.b #31,$20(a2)                                      ;increase if more pars
00032AC8 <AmiBlitz3.ab3@23061>    MOVE.b #0,isfunc(a2)
00032AD0 <AmiBlitz3.ab3@23062>    MOVE.l functionreturntype,funcstruct_returntype(a2)
00032AD8 <AmiBlitz3.ab3@23063>   MOVE.l destpointer,$E(A2)
00032ADE <AmiBlitz3.ab3@23064>   MOVE.l A2,currentfunction
00032AE4 <AmiBlitz3.ab3@23065>   LEA nops8,A0
00032AEA <AmiBlitz3.ab3@23066>   LEA dataget,A1
00032AEE <AmiBlitz3.ab3@23067>    BSR.w pokecode2
00032AF4 <AmiBlitz3.ab3@23068>   TST.b debugmode
00032AF8 <AmiBlitz3.ab3@23069>    BEQ.b JL_0_D3AA
00032AFA <AmiBlitz3.ab3@23070>   MOVEQ.l #$04,D1
00032B00 <AmiBlitz3.ab3@23071>    JSR writetrap
00032B0A <AmiBlitz3.ab3@23072>   MOVE.l destpointer,proclocals
00032B0E <AmiBlitz3.ab3@23073>    BSR.w writelong
00032B12 <AmiBlitz3.ab3@23074>    BSR.w writelong
00032B16 <AmiBlitz3.ab3@23077>    LEA $16(A2),A4
00032B1E <AmiBlitz3.ab3@23078>   MOVE.b proceduremode+1,$5(A2)
00032B20 <AmiBlitz3.ab3@23079>   MOVEQ.l #$00,D6
00032B22 <AmiBlitz3.ab3@23080>   MOVEQ.l #$00,D5
00032B28 <AmiBlitz3.ab3@23081>    JSR get1bytemain
00032B2C <AmiBlitz3.ab3@23082>   CMP.w #$7D,D0
00032B30 <AmiBlitz3.ab3@23083>    BEQ.w JL_0_D466
00032B34 <AmiBlitz3.ab3@23086>    CMP.b #"@",d0
00032B38 <AmiBlitz3.ab3@23087>    BNE 'l2
00032B3A <AmiBlitz3.ab3@23088>    MOVE.l a0,-(a7)
00032B40 <AmiBlitz3.ab3@23089>    MOVE.l currentfunction,a0
00032B46 <AmiBlitz3.ab3@23090>    CMP.b #31,$20(a0)                                       ;increase if morepars
00032B4A <AmiBlitz3.ab3@23091>    BNE 'l1
00032B4E <AmiBlitz3.ab3@23092>    MOVE.b d6,$20(a0)                                       ;increase if morepar
00032B54 <AmiBlitz3.ab3@23095>    JSR get1bytemain
00032B56 <AmiBlitz3.ab3@23096>    MOVE.l (a7)+,a0
00032B5A <AmiBlitz3.ab3@23099>    BSR.w getparameter
00032B5E <AmiBlitz3.ab3@23100>    BSR.w JL_0_8E3C
00032B66 <AmiBlitz3.ab3@23101>   CMPI.l #$7,$4(A2)
00032B6A <AmiBlitz3.ab3@23102>    BNE.w JL_0_D3F6
00032B70 <AmiBlitz3.ab3@23103>   LEA stbuff,A0
00032B72 <AmiBlitz3.ab3@23104>   MOVE.w D5,D1
00032B74 <AmiBlitz3.ab3@23105>   LSL.w #2,D1
00032B78 <AmiBlitz3.ab3@23106>   MOVE.w D6,$0(A0,D1.W)
00032B7E <AmiBlitz3.ab3@23107>   MOVE.w $4(A3),$2(A0,D1.W)
00032B80 <AmiBlitz3.ab3@23108>   ADDQ.w #1,D5
00032B82 <AmiBlitz3.ab3@23109>   MOVEQ.l #$07,D2
00032B86 <AmiBlitz3.ab3@23110> BRA.w JL_0_D442
00032B8C <AmiBlitz3.ab3@23113> JMP toovarerr
00032B90 <AmiBlitz3.ab3@23116>   MOVE.w #$2940,D1
00032B92 <AmiBlitz3.ab3@23117>   MOVEQ.l #$03,D2
00032B9A <AmiBlitz3.ab3@23118>   BTST #$0,flagmask+1
00032B9E <AmiBlitz3.ab3@23119>    BNE.w JL_0_D430
00032BA6 <AmiBlitz3.ab3@23120>   CMPI.l #$100,$4(A2)
00032BAA <AmiBlitz3.ab3@23121>    BCC.w JUMP_illprocperr
00032BAE <AmiBlitz3.ab3@23122>   MOVE.w $6(A2),D2
00032BB2 <AmiBlitz3.ab3@23123>   CMP.w #$2,D2
00032BB6 <AmiBlitz3.ab3@23124>    BHI.w JL_0_D430
00032BBA <AmiBlitz3.ab3@23125>    BEQ.w JL_0_D42C
00032BBE <AmiBlitz3.ab3@23126>   EORI.w #$3000,D1
00032BC2 <AmiBlitz3.ab3@23127> BRA.w JL_0_D430
00032BC8 <AmiBlitz3.ab3@23130> JMP more6pard
00032BCC <AmiBlitz3.ab3@23133>   ORI.w #$1000,D1
00032BCE <AmiBlitz3.ab3@23136>   OR.w D6,D1
00032BD4 <AmiBlitz3.ab3@23137>   TST.b fpu
00032BD8 <AmiBlitz3.ab3@23138>   BEQ 'nofpu
00032BDC <AmiBlitz3.ab3@23139>   CMP.b #5,d2
00032BE0 <AmiBlitz3.ab3@23140>   BNE 'nofpu
00032BE4 <AmiBlitz3.ab3@23141>   CMP.w #6,d6
00032BE8 <AmiBlitz3.ab3@23142>   BLT 'l10a
00032BEE <AmiBlitz3.ab3@23143>   CMP.l #newtype_double,a2
00032BF2 <AmiBlitz3.ab3@23144>   BEQ JUMP_more6pard
00032BF6 <AmiBlitz3.ab3@23145> BRA 'nofpu
00032BFC <AmiBlitz3.ab3@23148>   MOVE.l #$f22c6400,d1
00032C00 <AmiBlitz3.ab3@23149>   MOVEM.l d0/a4,-(a7)
00032C02 <AmiBlitz3.ab3@23150>   MOVE.l d6,d0
00032C04 <AmiBlitz3.ab3@23151>   ASL.l #7,d0
00032C06 <AmiBlitz3.ab3@23152>   OR.w d0,d1
00032C0C <AmiBlitz3.ab3@23153>   CMP.l #newtype_double,a2
00032C10 <AmiBlitz3.ab3@23154>   BNE 'l1
00032C16 <AmiBlitz3.ab3@23155>   OR.l #$1000,d1
00032C1A <AmiBlitz3.ab3@23158>   BSR writelong
00032C1E <AmiBlitz3.ab3@23159>   MOVE.w 4(a3),d1
00032C22 <AmiBlitz3.ab3@23160>   BSR writeword
00032C26 <AmiBlitz3.ab3@23161>   MOVEM.l (a7)+,a4/d0
00032C2A <AmiBlitz3.ab3@23162> BRA JL_0_D442
00032C2C <AmiBlitz3.ab3@23165>   MOVE.l A4,-(A7)
00032C30 <AmiBlitz3.ab3@23166>    CMP.w #6,d6
00032C34 <AmiBlitz3.ab3@23167>    BLT 'l10
00032C38 <AmiBlitz3.ab3@23168>    MOVE.w #$c500-4,d1                                      ;savetemp+regnum
00032C3A <AmiBlitz3.ab3@23169>    ADD.w d6,d1
00032C40 <AmiBlitz3.ab3@23170>    JSR Atokejsr
00032C46 <AmiBlitz3.ab3@23171>    TST.w dontwrite
00032C4A <AmiBlitz3.ab3@23172>    BNE 'l10
00032C50 <AmiBlitz3.ab3@23173>    MOVE.l data1start,d1
00032C56 <AmiBlitz3.ab3@23174>    MOVE.l destpointer,a4
00032C5A <AmiBlitz3.ab3@23175>    ADD.l d1,-6(a4)
00032C60 <AmiBlitz3.ab3@23176>    MOVE.l destpointer,d1
00032C62 <AmiBlitz3.ab3@23177>    SUBQ.l #6,d1
00032C68 <AmiBlitz3.ab3@23178>    SUB.l destbufferstart,d1
00032C6A <AmiBlitz3.ab3@23180>    MOVE.l d2,-(a7)
00032C6C <AmiBlitz3.ab3@23181>    MOVE.l d1,d2
00032C72 <AmiBlitz3.ab3@23182>    JSR addhunkoffset                                       ;move.l $0,-x(a4)
00032C74 <AmiBlitz3.ab3@23183>    MOVE.l (a7)+,d2
00032C7A <AmiBlitz3.ab3@23184>    MOVE.l destpointer,a4
00032C7E <AmiBlitz3.ab3@23185>    CMP.w #2,d2
00032C82 <AmiBlitz3.ab3@23186>    BNE 'nw1
00032C88 <AmiBlitz3.ab3@23188>    MOVE.w #$3979,-8(a4)                                    ;move.w $0,-x(a4)
00032C90 <AmiBlitz3.ab3@23189>    ADD.l #2,-6(a4)
00032C94 <AmiBlitz3.ab3@23192>    CMP.w #1,d2
00032C98 <AmiBlitz3.ab3@23193>    BNE 'nb
00032C9E <AmiBlitz3.ab3@23194>    MOVE.w #$1979,-8(a4)                                    ;move.b $0,-x(a4)
00032CA6 <AmiBlitz3.ab3@23195>    ADD.l #3,-6(a4)
00032CAC <AmiBlitz3.ab3@23198>    MOVE.w $4(a3),-2(a4)
00032CB0 <AmiBlitz3.ab3@23199> BRA 'ne1
00032CB4 <AmiBlitz3.ab3@23202>   BSR.w writeword                                          ;write storeparameter
00032CB8 <AmiBlitz3.ab3@23205>   MOVE.w $4(A3),D1
00032CBC <AmiBlitz3.ab3@23206>    BSR.w writeword
00032CBE <AmiBlitz3.ab3@23209>   MOVEA.l (A7)+,A4
00032CC4 <AmiBlitz3.ab3@23212>   CLR.l functionreturntype
00032CC6 <AmiBlitz3.ab3@23213>   ADDQ.w #1,D6
00032CCA <AmiBlitz3.ab3@23214>   CMP.w #11,D6                                             ;max function parameters
00032CCE <AmiBlitz3.ab3@23215>    BCC.w JUMP_toovarerr
00032CD4 <AmiBlitz3.ab3@23216>   MOVE.l currentfunction,a0
00032CD8 <AmiBlitz3.ab3@23217>   MOVE.l a2,funcstruct_parametertype-4(a0,d6*4)                                    ;-4 because d6 is increment before
00032CDA <AmiBlitz3.ab3@23218>   MOVE.b D2,(A4)+
00032CDE <AmiBlitz3.ab3@23219>   CMP.w #$2C,D0
00032CE2 <AmiBlitz3.ab3@23220>    BNE.w JL_0_D45E
00032CE8 <AmiBlitz3.ab3@23221>    JSR get1bytemain
00032CEC <AmiBlitz3.ab3@23233> BRA.w JL_0_D3C6
00032CF0 <AmiBlitz3.ab3@23236>   CMP.w #$7D,D0
00032CF4 <AmiBlitz3.ab3@23237>    BNE.w JUMP_syntaxerr
00032CFA <AmiBlitz3.ab3@23240>   MOVEA.l currentfunction,A2
00032CFC <AmiBlitz3.ab3@23241>   LSL.w #4,D5
00032CFE <AmiBlitz3.ab3@23242>   OR.w D5,D6
00032D02 <AmiBlitz3.ab3@23243>   MOVE.b D6,$4(A2)
00032D04 <AmiBlitz3.ab3@23244>   LSR.w #4,D6
00032D08 <AmiBlitz3.ab3@23245>    BEQ.w JL_0_D4C4
00032D0E <AmiBlitz3.ab3@23246>   LEA stbuff,A0
00032D10 <AmiBlitz3.ab3@23247>   SUBQ.w #1,D6
00032D12 <AmiBlitz3.ab3@23250>     MOVE.w D6,D1                                           ;function stringpars
00032D14 <AmiBlitz3.ab3@23251>     LSL.w #2,D1                                            ;stringsize was 2
00032D16 <AmiBlitz3.ab3@23253>       LSL.w #1,d1
00032D18 <AmiBlitz3.ab3@23254>       ADDQ.w #4,d1
00032D1A <AmiBlitz3.ab3@23256>     ADDQ.w #8,D1
00032D20 <AmiBlitz3.ab3@23257>     MOVE.w D1,funcst+2
00032D26 <AmiBlitz3.ab3@23258>     MOVE.l funcst,D1
00032D2A <AmiBlitz3.ab3@23259>     BSR.w writelong
00032D2C <AmiBlitz3.ab3@23260>     MOVE.w (A0)+,D1
00032D30 <AmiBlitz3.ab3@23261>     CMP.b #5,d1
00032D34 <AmiBlitz3.ab3@23262>     BLE 's1
00032D38 <AmiBlitz3.ab3@23263>     MOVE.w #$266c,d1                                       ;native move.l 4(a4),a3
00032D3C <AmiBlitz3.ab3@23264>     BSR writeinstruction
00032D3E <AmiBlitz3.ab3@23265>     MOVE.w D6,D1                                           ;function stringpars
00032D40 <AmiBlitz3.ab3@23266>     LSL.w #2,D1                                            ;stringsize was 2
00032D42 <AmiBlitz3.ab3@23268>       LSL.w #1,d1
00032D44 <AmiBlitz3.ab3@23270>     ADDQ.w #8,D1
00032D48 <AmiBlitz3.ab3@23271>     BSR writeword
00032D4C <AmiBlitz3.ab3@23272>   BRA 's2
00032D52 <AmiBlitz3.ab3@23275>     OR.w movedna3,D1
00032D56 <AmiBlitz3.ab3@23276>      BSR.w writeword
00032D5C <AmiBlitz3.ab3@23279>     MOVE.w (A0)+,least+2
00032D62 <AmiBlitz3.ab3@23280>     MOVE.l least,D1
00032D66 <AmiBlitz3.ab3@23281>      BSR.w writelong
00032D68 <AmiBlitz3.ab3@23282>     MOVE.l A0,-(A7)
00032D6C <AmiBlitz3.ab3@23283>     MOVE.w #$C700,D1
00032D70 <AmiBlitz3.ab3@23284>      BSR.w Atokejsr
00032D72 <AmiBlitz3.ab3@23285>     MOVEA.l (A7)+,A0
00032D76 <AmiBlitz3.ab3@23286>   DBF D6,JL_0_D482
00032D7C <AmiBlitz3.ab3@23289> JMP get1bytemain
00032D82 <AmiBlitz3.ab3@23293>   MOVE.w dontwrite,D1
00032D86 <AmiBlitz3.ab3@23294>    BNE.w JL_0_D4F6
00032D8C <AmiBlitz3.ab3@23295>   MOVE.l destpointer,-(A7)
00032D92 <AmiBlitz3.ab3@23296>   MOVE.l A0,destpointer
00032D98 <AmiBlitz3.ab3@23297>   MOVE.l linksize,D1
00032D9C <AmiBlitz3.ab3@23298>    BSR.w writelong                                         ;writefunctions jumppos
00032DA2 <AmiBlitz3.ab3@23299>    TST.b fastfunc
00032DA6 <AmiBlitz3.ab3@23300>    BNE 'skip
00032DAA <AmiBlitz3.ab3@23301>   MOVE.w #$CC00,D1
00032DAE <AmiBlitz3.ab3@23302>    BSR.w tokejsr2                                          ;write clearvars
00032DB4 <AmiBlitz3.ab3@23305>   MOVE.l (A7)+,destpointer
00032DB6 <AmiBlitz3.ab3@23308> RTS
00032DBC <AmiBlitz3.ab3@23312>   MOVEA.l currentfunction,A2
00032DC0 <AmiBlitz3.ab3@23313>   MOVEA.l $E(A2),A0
00032DC4 <AmiBlitz3.ab3@23314>   MOVE.w $6(A2),D1
00032DC8 <AmiBlitz3.ab3@23315>    BEQ.w JL_0_D538
00032DCE <AmiBlitz3.ab3@23316>   MOVE.w D1,linksize+2
00032DD2 <AmiBlitz3.ab3@23317>   MOVE.w $8(A2),D1                                         ;check if function memalloc need
00032DD6 <AmiBlitz3.ab3@23318>    BNE.w JL_0_D522
00032DD8 <AmiBlitz3.ab3@23319>   ADDQ.w #6,A0
00032DDC <AmiBlitz3.ab3@23320>   MOVE.l A0,$E(A2)
00032DE0 <AmiBlitz3.ab3@23321> BRA.w JL_0_D4C8
00032DE2 <AmiBlitz3.ab3@23324>   MOVE.l A0,-(A7)
00032DE6 <AmiBlitz3.ab3@23325>    BSR.w JL_0_D4C8
00032DE8 <AmiBlitz3.ab3@23326>   MOVEA.l (A7)+,A0
00032DEC <AmiBlitz3.ab3@23327>   LEA $A(A0),A0
00032DF2 <AmiBlitz3.ab3@23328>   MOVEA.l currentfunction,A2
00032DF6 <AmiBlitz3.ab3@23329> BRA.w JL_0_D54A
00032DFA <AmiBlitz3.ab3@23332>   MOVE.w $8(A2),D1
00032DFE <AmiBlitz3.ab3@23333>    BNE.w JL_0_D54A
00032E02 <AmiBlitz3.ab3@23334>   LEA $10(A0),A0
00032E06 <AmiBlitz3.ab3@23335>   MOVE.l A0,$E(A2)
00032E08 <AmiBlitz3.ab3@23336> RTS
00032E0E <AmiBlitz3.ab3@23340> JMP errormsg_nofast
00032E14 <AmiBlitz3.ab3@23343>    MOVE.w dontwrite,D1                                     ;writeallocmem for functions (after releasemem called)
00032E18 <AmiBlitz3.ab3@23344>    BNE.w JL_0_D580
00032E1E <AmiBlitz3.ab3@23345>    TST.b fastfunc
00032E22 <AmiBlitz3.ab3@23346>    BNE JUMP_errormsg_nofast
00032E28 <AmiBlitz3.ab3@23347>   MOVE.l destpointer,-(A7)
00032E2E <AmiBlitz3.ab3@23348>   MOVE.l A0,destpointer
00032E32 <AmiBlitz3.ab3@23349>   MOVE.w #$4EB9,D1
00032E36 <AmiBlitz3.ab3@23350>    BSR.w writeword
00032E3C <AmiBlitz3.ab3@23351>    JSR addoff
00032E40 <AmiBlitz3.ab3@23352>    BSR.w writelong
00032E42 <AmiBlitz3.ab3@23353>   MOVEA.l (A7)+,A0
00032E48 <AmiBlitz3.ab3@23354>   MOVEA.l destpointer,A1
00032E4A <AmiBlitz3.ab3@23355>   MOVE.l A0,-(A1)
00032E50 <AmiBlitz3.ab3@23356>   MOVE.l A0,destpointer
00032E54 <AmiBlitz3.ab3@23359>   MOVE.w $8(A2),D4
00032E58 <AmiBlitz3.ab3@23360>    BPL.w JL_0_D59E
00032E5C <AmiBlitz3.ab3@23361>   MOVE.w #$C004,D1
00032E60 <AmiBlitz3.ab3@23362>    BSR.w tokejsr2
00032E66 <AmiBlitz3.ab3@23363>   MOVEA.l currentfunction,A2
00032E6A <AmiBlitz3.ab3@23364>   MOVE.w $8(A2),D4
00032E6E <AmiBlitz3.ab3@23365>   ANDI.w #$7FFF,D4
00032E72 <AmiBlitz3.ab3@23368>    BEQ.w JL_0_D5E0
00032E76 <AmiBlitz3.ab3@23369>   MOVE.b $4(A2),D1
00032E7A <AmiBlitz3.ab3@23370>   ANDI.w #$F,D1
00032E7C <AmiBlitz3.ab3@23371>   MOVE.w D1,-(A7)
00032E80 <AmiBlitz3.ab3@23372>   CMP.w #$5,D1
00032E84 <AmiBlitz3.ab3@23373>    BCS.w JL_0_D5BC
00032E88 <AmiBlitz3.ab3@23374>   MOVE.w #$2F04,D1
00032E8C <AmiBlitz3.ab3@23375>    BSR.w writeword
00032E92 <AmiBlitz3.ab3@23378>   MOVE.l locdatast,D3
00032E98 <AmiBlitz3.ab3@23379>    JSR datastart
00032E9C <AmiBlitz3.ab3@23380>   MOVE.w #$C501,D1
00032EA0 <AmiBlitz3.ab3@23381>    BSR.w tokejsr2
00032EA2 <AmiBlitz3.ab3@23382>   MOVE.w (A7)+,D1
00032EA6 <AmiBlitz3.ab3@23383>   CMP.w #$5,D1
00032EAA <AmiBlitz3.ab3@23384>    BCS.w JL_0_D5E0
00032EAE <AmiBlitz3.ab3@23385>   MOVE.w #$281F,D1
00032EB2 <AmiBlitz3.ab3@23386>    BSR.w writeword
00032EB6 <AmiBlitz3.ab3@23388>   MOVE.w #$4E75,D1
00032EBA <AmiBlitz3.ab3@23389> BRA.w writeword
00032EC0 <AmiBlitz3.ab3@23393>   LEA mwait,A0
00032EC6 <AmiBlitz3.ab3@23394>   LEA mwaitf,A1
00032ECA <AmiBlitz3.ab3@23395> BRA.w pokecode
00032ED0 <AmiBlitz3.ab3@23399> JMP laberr
00032ED4 <AmiBlitz3.ab3@23402>   CMP.w #$2E,D0
00032ED8 <AmiBlitz3.ab3@23403>   BNE.w JUMP_syntaxerr
00032EDE <AmiBlitz3.ab3@23404>   JSR getparameter2
00032EE2 <AmiBlitz3.ab3@23405>   BEQ.w JUMP_laberr
00032EE8 <AmiBlitz3.ab3@23406>   LEA newtypebase,A2
00032EEE <AmiBlitz3.ab3@23407>   JSR findtype
00032EF2 <AmiBlitz3.ab3@23408>   BNE.w JL_0_D626
00032EFA <AmiBlitz3.ab3@23409>   CMPI.l #MaxByte,$4(A2)
00032EFE <AmiBlitz3.ab3@23410>   BNE.w JUMP_typeerr
00032F02 <AmiBlitz3.ab3@23411> BRA.w JL_0_D62A
00032F08 <AmiBlitz3.ab3@23414> JMP typeerr
00032F0E <AmiBlitz3.ab3@23417>   JSR addlabel
00032F12 <AmiBlitz3.ab3@23420>   CLR.l $4(A2)
00032F18 <AmiBlitz3.ab3@23421>   MOVE.l A2,thistype
00032F1E <AmiBlitz3.ab3@23422>   CLR.l prevtype
00032F24 <AmiBlitz3.ab3@23423>   CLR.w typelen
00032F2A <AmiBlitz3.ab3@23424>   CLR.w linemode
00032F30 <AmiBlitz3.ab3@23425>   JSR reget
00032F34 <AmiBlitz3.ab3@23426>   BNE.w typemode
00032F36 <AmiBlitz3.ab3@23427> RTS
00032F3A <AmiBlitz3.ab3@23430>   CMP.w #-$7FFE,D0
00032F3E <AmiBlitz3.ab3@23431>   BEQ.w JL_0_D82E
00032F48 <AmiBlitz3.ab3@23433>   MOVE.w oldqflag,instringon
00032F4E <AmiBlitz3.ab3@23434>   MOVEA.l lastsourcepos,A5
00032F50 <AmiBlitz3.ab3@23435>   MOVEQ.l #$00,D6
00032F54 <AmiBlitz3.ab3@23436>   CMP.w #$2A,D0
00032F58 <AmiBlitz3.ab3@23437>   BNE.w JL_0_D670
00032F5A <AmiBlitz3.ab3@23438>   MOVEQ.l #$01,D6
00032F60 <AmiBlitz3.ab3@23439>   JSR get1bytemain
00032F64 <AmiBlitz3.ab3@23440> BRA.w JL_0_D67E
00032F68 <AmiBlitz3.ab3@23443>   CMP.w #$40,D0
00032F6C <AmiBlitz3.ab3@23444>   BNE.w JL_0_D67E
00032F6E <AmiBlitz3.ab3@23445>   MOVEQ.l #$05,D6
00032F74 <AmiBlitz3.ab3@23446>   JSR get1bytemain
00032F7A <AmiBlitz3.ab3@23449>   MOVE.w D6,flagmask
00032F80 <AmiBlitz3.ab3@23450>   JSR getparameter2
00032F84 <AmiBlitz3.ab3@23451>   BEQ.w JUMP_syntaxerr
00032F8A <AmiBlitz3.ab3@23452>   MOVEA.l thistype,A2
00032F8C <AmiBlitz3.ab3@23453>   ADDQ.w #4,A2
00032F92 <AmiBlitz3.ab3@23454>   JSR findvariable2
00032F96 <AmiBlitz3.ab3@23455>   BEQ.w JUMP_dupofferr
00032F9C <AmiBlitz3.ab3@23456>   JSR addlabel
00032F9E <AmiBlitz3.ab3@23457>   MOVE.l A2,-(A7)
00032FA2 <AmiBlitz3.ab3@23458>   CMP.w #$2E,D0
00032FA6 <AmiBlitz3.ab3@23459>    BEQ.w JL_0_D6CE
00032FAA <AmiBlitz3.ab3@23460>   CMP.w #$24,D0
00032FAE <AmiBlitz3.ab3@23461>    BNE.w JL_0_D6C0
00032FB4 <AmiBlitz3.ab3@23462>   MOVE.l #newtype_string,D2
00032FBA <AmiBlitz3.ab3@23463>    JSR get1bytemain
00032FBE <AmiBlitz3.ab3@23464> BRA.w JL_0_D710
00032FC4 <AmiBlitz3.ab3@23467> JMP dupofferr
00032FCA <AmiBlitz3.ab3@23470>   MOVE.l prevtype,D2
00032FCE <AmiBlitz3.ab3@23471>   BEQ.w JUMP_notypeerr
00032FD2 <AmiBlitz3.ab3@23472> BRA.w JL_0_D706
00032FD8 <AmiBlitz3.ab3@23475> JMP notypeerr
00032FDE <AmiBlitz3.ab3@23478>   JSR getparameter2
00032FE2 <AmiBlitz3.ab3@23479>    BEQ.w JUMP_syntaxerr
00032FE8 <AmiBlitz3.ab3@23480>   LEA newtypebase,A2
00032FEE <AmiBlitz3.ab3@23481>    JSR findtype
00032FF2 <AmiBlitz3.ab3@23482>    BEQ.w JL_0_D704
00032FFA <AmiBlitz3.ab3@23483>   BTST #$0,flagmask+1
00032FFE <AmiBlitz3.ab3@23484>    BEQ.w JUMP_notypeerr
00033004 <AmiBlitz3.ab3@23485>   JSR addlabel
0003300C <AmiBlitz3.ab3@23488>   MOVE.w linenumat+2,$8(A2)
00033014 <AmiBlitz3.ab3@23489>   MOVE.l #MaxByte,$4(A2)
00033016 <AmiBlitz3.ab3@23492>   MOVE.l A2,D2
0003301C <AmiBlitz3.ab3@23495>   CMP.l #newtype_byte,D2
00033020 <AmiBlitz3.ab3@23496>    BEQ.w JL_0_D71E
00033026 <AmiBlitz3.ab3@23499>   ADDQ.w #1,typelen
0003302E <AmiBlitz3.ab3@23500>   BCLR #$0,typelen+1
00033030 <AmiBlitz3.ab3@23503>   MOVEQ.l #$00,D3
00033032 <AmiBlitz3.ab3@23504>   MOVEA.l D2,A2
00033038 <AmiBlitz3.ab3@23505>   MOVE.l A2,prevtype
0003303C <AmiBlitz3.ab3@23506>   MOVE.w $8(A2),D3
0003303E <AmiBlitz3.ab3@23507>   MOVEA.l (A7)+,A2
00033042 <AmiBlitz3.ab3@23508>   MOVE.l D2,$A(A2)
00033044 <AmiBlitz3.ab3@23509>   MOVEQ.l #$00,D4
0003304A <AmiBlitz3.ab3@23510>   MOVE.w typelen,D4
0003304E <AmiBlitz3.ab3@23511>   MOVE.w D4,$4(A2)
00033056 <AmiBlitz3.ab3@23512>   BTST #$0,flagmask+1
0003305A <AmiBlitz3.ab3@23513>    BEQ.w JL_0_D74C
0003305C <AmiBlitz3.ab3@23514>   MOVEQ.l #$04,D3
00033060 <AmiBlitz3.ab3@23517>   CMP.w #$5B,D0
00033064 <AmiBlitz3.ab3@23518>    BNE.w JL_0_D782
00033068 <AmiBlitz3.ab3@23519>   MOVEM.l D3-D4/A2,-(A7)
0003306C <AmiBlitz3.ab3@23520>    BSR.w AJL_0_BF6E
00033070 <AmiBlitz3.ab3@23521>   CMP.w #$5D,D0
00033074 <AmiBlitz3.ab3@23522>    BNE.w JUMP_syntaxerr
00033076 <AmiBlitz3.ab3@23523>   TST.w D6
0003307A <AmiBlitz3.ab3@23524>    BNE.w JUMP_fpconerr
0003307C <AmiBlitz3.ab3@23525>   MOVE.l D3,D1
00033080 <AmiBlitz3.ab3@23526>   MOVEM.l (A7)+,D3-D4/A2
00033086 <AmiBlitz3.ab3@23527>    JSR get1bytemain
0003308A <AmiBlitz3.ab3@23528>   MOVE.w D1,$8(A2)
0003308E <AmiBlitz3.ab3@23529>   MULU.l d1,d3                                             ;>32k fix was mulu.w
00033096 <AmiBlitz3.ab3@23530>   ORI.w #$2,flagmask
00033098 <AmiBlitz3.ab3@23533>   ADD.l D3,D4
0003309E <AmiBlitz3.ab3@23536>     CMP.l #65532,d4
000330A2 <AmiBlitz3.ab3@23541>   BCC JUMP_toolongerr
000330AA <AmiBlitz3.ab3@23542>   MOVE.w flagmask,$6(A2)
000330B0 <AmiBlitz3.ab3@23543>   MOVE.w D4,typelen
000330B2 <AmiBlitz3.ab3@23544> RTS
000330B8 <AmiBlitz3.ab3@23547> JMP badenderr
000330BE <AmiBlitz3.ab3@23550> JMP noiferr
000330C4 <AmiBlitz3.ab3@23553> JMP toolongerr
000330CA <AmiBlitz3.ab3@23556> JMP fpconerr
000330D0 <AmiBlitz3.ab3@23559>   MOVE.l firstiff,D0
000330D4 <AmiBlitz3.ab3@23560>    BEQ.w JUMP_noiferr
000330D6 <AmiBlitz3.ab3@23561>   MOVEA.l D0,A0
000330DA <AmiBlitz3.ab3@23562>   MOVE.w $C(A0),D0
000330DE <AmiBlitz3.ab3@23563>   ANDI.w #$FF,D0
000330E0 <AmiBlitz3.ab3@23564>   CMP.w D0,D1
000330E4 <AmiBlitz3.ab3@23565>    BNE.w JUMP_badenderr
000330E8 <AmiBlitz3.ab3@23568>   CMP.w #$1,D1
000330EC <AmiBlitz3.ab3@23569>   BNE.w JL_0_D7D8
000330F0 <AmiBlitz3.ab3@23570>   MOVE.w #$6000,D1
000330F6 <AmiBlitz3.ab3@23573>     TST.b fast
000330FA <AmiBlitz3.ab3@23574>     BEQ 'l1
00033100 <AmiBlitz3.ab3@23575>     OR.l #$ff,d1
00033104 <AmiBlitz3.ab3@23579>   BSR.w writeword
0003310A <AmiBlitz3.ab3@23580>   MOVEA.l destpointer,A1
0003310E <AmiBlitz3.ab3@23581>   MOVE.l $4(A0),D1
00033110 <AmiBlitz3.ab3@23582>   SUB.l A1,D1
00033116 <AmiBlitz3.ab3@23585>     TST.b fast
0003311A <AmiBlitz3.ab3@23586>     BEQ 'l2
0003311E <AmiBlitz3.ab3@23587>     BSR writelong
00033122 <AmiBlitz3.ab3@23588>   BRA JL_0_D7D8
00033126 <AmiBlitz3.ab3@23592>   BSR.w writeword
0003312A <AmiBlitz3.ab3@23595>   MOVEA.l $8(A0),A1                                        ;write if branch destination
00033130 <AmiBlitz3.ab3@23596>   MOVE.l destpointer,D1
00033132 <AmiBlitz3.ab3@23597>   SUB.l A1,D1
00033138 <AmiBlitz3.ab3@23600>     TST.b fast
0003313C <AmiBlitz3.ab3@23601>     BEQ 'l1
0003313E <AmiBlitz3.ab3@23602>     ADDQ.l #4,D1
00033144 <AmiBlitz3.ab3@23603>     MOVE.w dontwrite,D0
00033148 <AmiBlitz3.ab3@23604>     BNE.w JL_0_D7FE
0003314C <AmiBlitz3.ab3@23605>     MOVE.l d1,-$4(a1)
00033150 <AmiBlitz3.ab3@23606>   BRA JL_0_D7FE
00033152 <AmiBlitz3.ab3@23610>   ADDQ.l #2,d1
00033158 <AmiBlitz3.ab3@23611>   TST.w dontwrite
0003315C <AmiBlitz3.ab3@23612>   BNE JL_0_D7FE
00033162 <AmiBlitz3.ab3@23613>   CMP.l #MinWordSgnd,D1
00033166 <AmiBlitz3.ab3@23614>   BCC.w JUMP_bigiferr
0003316A <AmiBlitz3.ab3@23615>   MOVE.w D1,-$2(A1)
0003316C <AmiBlitz3.ab3@23618> RTS
00033172 <AmiBlitz3.ab3@23621> JMP bigiferr
0003317C <AmiBlitz3.ab3@23626>   MOVE.w oldqflag,instringon
00033182 <AmiBlitz3.ab3@23627>   MOVEA.l lastsourcepos,A5
00033184 <AmiBlitz3.ab3@23630>   MOVEQ.l #$01,D1
00033188 <AmiBlitz3.ab3@23631> BRA.w JL_0_D810
00033192 <AmiBlitz3.ab3@23635>   MOVE.w oldqflag,instringon
00033198 <AmiBlitz3.ab3@23636>   MOVEA.l lastsourcepos,A5
0003319A <AmiBlitz3.ab3@23639>   MOVEQ.l #$00,D1
0003319E <AmiBlitz3.ab3@23642>   BSR.w JL_0_D79E
000331A2 <AmiBlitz3.ab3@23643>   BSR.w AJL_0_D81C
000331A8 <AmiBlitz3.ab3@23644> JMP get1bytemain
000331AE <AmiBlitz3.ab3@23647>   MOVE.l (A0),firstiff
000331B0 <AmiBlitz3.ab3@23648>   MOVEA.l A0,A1
000331B2 <AmiBlitz3.ab3@23649>   MOVEQ.l #$0E,D0
000331B8 <AmiBlitz3.ab3@23650>   MOVEA.l _execbase,A6
000331BE <AmiBlitz3.ab3@23651>   MOVE.l mempool,a0
000331C2 <AmiBlitz3.ab3@23652> JMP _FreePooled(A6)
000331C8 <AmiBlitz3.ab3@23656>   JSR get1bytemain
000331CC <AmiBlitz3.ab3@23659>   BEQ.w JL_0_D980
000331D4 <AmiBlitz3.ab3@23660>   CMP.l #"noa7",-1(a5)
000331D8 <AmiBlitz3.ab3@23661>   BNE 'l1
000331DE <AmiBlitz3.ab3@23662>   JSR get1bytemain
000331E4 <AmiBlitz3.ab3@23663>   JSR get1bytemain
000331EA <AmiBlitz3.ab3@23664>   JSR get1bytemain
000331F2 <AmiBlitz3.ab3@23665>   MOVE.w #$3a,lastchar
000331F6 <AmiBlitz3.ab3@23666> BRA JL_0_D980
000331FC <AmiBlitz3.ab3@23669>   CMP.w #"d0",-1(a5)
00033200 <AmiBlitz3.ab3@23670>   BNE 'l2
00033208 <AmiBlitz3.ab3@23671>   MOVE.b #1,returncode
0003320E <AmiBlitz3.ab3@23672>   CLR.w lastchar
00033212 <AmiBlitz3.ab3@23673> BRA JL_0_D980
00033216 <AmiBlitz3.ab3@23676>   CMP.w #$80d7,d0
0003321A <AmiBlitz3.ab3@23677>   BNE JL_0_D836
00033220 <AmiBlitz3.ab3@23678>   JSR skiprest
00033222 <AmiBlitz3.ab3@23679> RTS
00033226 <AmiBlitz3.ab3@23682>   BSR.w JL_0_D844
0003322C <AmiBlitz3.ab3@23683>   JSR reget
00033230 <AmiBlitz3.ab3@23684>   BNE.w JL_0_D836
00033232 <AmiBlitz3.ab3@23685> RTS
00033236 <AmiBlitz3.ab3@23688>   CMP.w #-$7FFF,D0
0003323A <AmiBlitz3.ab3@23689>    BNE.w JL_0_D87E
00033240 <AmiBlitz3.ab3@23690>   MOVE.w linemode,D1
00033244 <AmiBlitz3.ab3@23691>    BNE.w JUMP_modeerr
0003324A <AmiBlitz3.ab3@23692>   ADDQ.w #1,typelen
00033252 <AmiBlitz3.ab3@23693>   BCLR #$0,typelen+1
00033258 <AmiBlitz3.ab3@23694>   MOVEA.l thistype,A0
00033260 <AmiBlitz3.ab3@23695>   MOVE.w typelen,$8(A0)
00033268 <AmiBlitz3.ab3@23696>   MOVE.w #$FFFF,linemode
0003326E <AmiBlitz3.ab3@23697> JMP get1bytemain
00033274 <AmiBlitz3.ab3@23700> JMP modeerr
00033278 <AmiBlitz3.ab3@23703>   CMP.w #-$7FF5,D0
0003327C <AmiBlitz3.ab3@23704>    BEQ.w JL_0_D80E
00033280 <AmiBlitz3.ab3@23705>   CMP.w #-$7FF4,D0
00033284 <AmiBlitz3.ab3@23706>    BEQ.w JL_0_D804
00033288 <AmiBlitz3.ab3@23707>   CMP.w #-$7FF8,D0
0003328C <AmiBlitz3.ab3@23708>    BNE.w JL_0_D89A
00033290 <AmiBlitz3.ab3@23711> BRA.w JL_0_D9E8
00033296 <AmiBlitz3.ab3@23714> JMP interr3
0003329A <AmiBlitz3.ab3@23717>   CMP.w #-$7FF7,D0
0003329E <AmiBlitz3.ab3@23718>    BNE.w JL_0_D8C8
000332A4 <AmiBlitz3.ab3@23719>    TST.b fpu
000332A8 <AmiBlitz3.ab3@23720>    BEQ 'nof
000332AE <AmiBlitz3.ab3@23721>    MOVEA.l currentfunction,A0
000332B4 <AmiBlitz3.ab3@23722>    CMP.l #0,a0
000332B8 <AmiBlitz3.ab3@23723>    BEQ 'nof
000332BE <AmiBlitz3.ab3@23724>    CMP.b #5,$5(a0)
000332C2 <AmiBlitz3.ab3@23725>     BNE 'nof
000332C8 <AmiBlitz3.ab3@23726>    MOVE.l #$f23c5000,d1
000332CC <AmiBlitz3.ab3@23727>    BSR writelong
000332D0 <AmiBlitz3.ab3@23728>    MOVE.w #0,d1
000332D4 <AmiBlitz3.ab3@23729>    BSR writeword
000332D8 <AmiBlitz3.ab3@23732>   MOVE.w #$7000,D1                                         ;end function moveq #0,d0
000332DC <AmiBlitz3.ab3@23733>    BSR.w writeword
000332E2 <AmiBlitz3.ab3@23734>   MOVEA.l currentfunction,A0
000332E8 <AmiBlitz3.ab3@23735>   CMP.l #0,a0
000332EC <AmiBlitz3.ab3@23736>   BEQ JL_0_D896
000332F2 <AmiBlitz3.ab3@23737>   MOVE.l destpointer,d1
000332F6 <AmiBlitz3.ab3@23738>   SUB.l $e(a0),d1
000332FA <AmiBlitz3.ab3@23739>   MOVE.l d1,isfunc+1(a0)
00033300 <AmiBlitz3.ab3@23740>   CMPI.b #$7,$5(A0)
00033304 <AmiBlitz3.ab3@23741>    BNE.w JL_0_D896
0003330A <AmiBlitz3.ab3@23742>   MOVE.w putstlen,D1
0003330E <AmiBlitz3.ab3@23743>    BSR.w writeword
00033312 <AmiBlitz3.ab3@23744> BRA.w JL_0_D896
00033318 <AmiBlitz3.ab3@23747> JMP interr
0003331C <AmiBlitz3.ab3@23750>  CMP.w #-$7FD0,D0
00033320 <AmiBlitz3.ab3@23751>    BNE.w JL_0_D966
00033326 <AmiBlitz3.ab3@23752>   MOVE.w proceduremode,D1
0003332A <AmiBlitz3.ab3@23753>    BNE.w JUMP_interr3
00033330 <AmiBlitz3.ab3@23754>   TST.b debugmode
00033334 <AmiBlitz3.ab3@23755>    BEQ.w JL_0_D90A
00033336 <AmiBlitz3.ab3@23756>   MOVEQ.l #$03,D1
0003333C <AmiBlitz3.ab3@23757>    JSR writetrap
00033342 <AmiBlitz3.ab3@23758>   MOVE.w dontwrite,D1
00033346 <AmiBlitz3.ab3@23759>    BNE.w JL_0_D90A
0003334C <AmiBlitz3.ab3@23760>   MOVEA.l intcleanat,A0
00033352 <AmiBlitz3.ab3@23761>   MOVE.l destpointer,(A0)
00033356 <AmiBlitz3.ab3@23762>   MOVE.w #$C30C,D1
0003335A <AmiBlitz3.ab3@23763>    BSR.w Atokejsr
00033360 <AmiBlitz3.ab3@23766>   MOVE.w intstring,D1
00033364 <AmiBlitz3.ab3@23767>    BEQ.w JUMP_interr
00033368 <AmiBlitz3.ab3@23768>    BPL.w JL_0_D934
0003336E <AmiBlitz3.ab3@23769>   MOVE.w intlevel,D1
00033372 <AmiBlitz3.ab3@23770>   ORI.w #$7200,D1
00033376 <AmiBlitz3.ab3@23771>    BSR.w writeword
0003337A <AmiBlitz3.ab3@23772>   MOVE.w #$C103,D1
0003337E <AmiBlitz3.ab3@23773>    BSR.w Atokejsr
00033384 <AmiBlitz3.ab3@23774>   CLR.w intlevel
0003338A <AmiBlitz3.ab3@23777>  CLR.w intstring
00033390 <AmiBlitz3.ab3@23778>   MOVE.l intfin,D1
00033394 <AmiBlitz3.ab3@23779>    BSR.w writelong
0003339A <AmiBlitz3.ab3@23780>   MOVE.l #$70004E75,D1
0003339E <AmiBlitz3.ab3@23781>    BSR.w writelong
000333A4 <AmiBlitz3.ab3@23782>   MOVE.w dontwrite,D1
000333A8 <AmiBlitz3.ab3@23783>    BNE.w JL_0_D962
000333AE <AmiBlitz3.ab3@23784>   MOVEA.l intjmpat,A0
000333B2 <AmiBlitz3.ab3@23785>   MOVE.l destpointer(PC),(A0)
000333B8 <AmiBlitz3.ab3@23788> JMP get1bytemain
000333BC <AmiBlitz3.ab3@23792>   CMP.w #-$7FF2,D0
000333C0 <AmiBlitz3.ab3@23793>    BEQ.w doendsel
000333C4 <AmiBlitz3.ab3@23794>   CMP.w #-$7F4C,D0
000333C8 <AmiBlitz3.ab3@23795>    BNE.w JL_0_D97C
000333CE <AmiBlitz3.ab3@23796> JMP doendseterr
000333D4 <AmiBlitz3.ab3@23800> JMP syntaxerr
000333DA <AmiBlitz3.ab3@23804>   TST.w dirmode
000333DE <AmiBlitz3.ab3@23805>   BNE.w JUMP_baddirerr
000333E2 <AmiBlitz3.ab3@23806>   MOVE.w #$C800,D1
000333E8 <AmiBlitz3.ab3@23807>   JSR Atokejsr                                            ;end
000333F0 <AmiBlitz3.ab3@23808>   CMP.l #"noa7",-4(a5)
000333F4 <AmiBlitz3.ab3@23809>   BNE 'l10
000333FA <AmiBlitz3.ab3@23810>   TST.w dontwrite
000333FE <AmiBlitz3.ab3@23811>   BNE 'l10
00033404 <AmiBlitz3.ab3@23812>   MOVE.l destpointer,d1
00033406 <AmiBlitz3.ab3@23813>   SUBQ.l #4,d1
00033408 <AmiBlitz3.ab3@23814>   MOVE.l a0,-(a7)
0003340A <AmiBlitz3.ab3@23815>   MOVE.l d1,a0
0003340C <AmiBlitz3.ab3@23816>   MOVE.l (a0),a0
00033412 <AmiBlitz3.ab3@23817>   MOVE.l #$60000002,(a0)+
00033416 <AmiBlitz3.ab3@23818>   MOVE.w #$588f,(a0)
00033418 <AmiBlitz3.ab3@23819>   MOVE.l (a7)+,a0
0003341A <AmiBlitz3.ab3@23822> RTS
00033420 <AmiBlitz3.ab3@23826>   TST.w dirmode                                            ;stop
00033424 <AmiBlitz3.ab3@23827>   BNE.w JUMP_baddirerr
00033426 <AmiBlitz3.ab3@23828>   MOVE.w d0,d1
0003342A <AmiBlitz3.ab3@23829>   BEQ 'l10
0003342E <AmiBlitz3.ab3@23830>   CMP.b #$3a,d0
00033432 <AmiBlitz3.ab3@23831>   BEQ 'l10
00033438 <AmiBlitz3.ab3@23832>   JSR get1bytemain
0003343E <AmiBlitz3.ab3@23835>   TST.b debugmode
00033442 <AmiBlitz3.ab3@23836>   BEQ.w newstop
00033446 <AmiBlitz3.ab3@23837>   MOVE.w #$D501,D1
0003344A <AmiBlitz3.ab3@23838> BRA.w Atokejsr
0003344C <AmiBlitz3.ab3@23842>     RTS
0003344E <AmiBlitz3.ab3@23844>   MOVE.w d1,d0
00033452 <AmiBlitz3.ab3@23845>   BEQ 'l10
00033456 <AmiBlitz3.ab3@23846>   CMP.b #$3a,d0
0003345A <AmiBlitz3.ab3@23847>   BEQ 'l10
0003345E <AmiBlitz3.ab3@23848>   SUB.b #$30,d0
00033462 <AmiBlitz3.ab3@23849>   MOVE.w #$4e40,d1
00033466 <AmiBlitz3.ab3@23850> BRA 'l11
0003346A <AmiBlitz3.ab3@23853>   MOVE.w #$4e4a,d1
0003346E <AmiBlitz3.ab3@23854> BRA writeword
00033470 <AmiBlitz3.ab3@23857>   ADD.b d0,d1
00033474 <AmiBlitz3.ab3@23858> BRA writeword
0003347A <AmiBlitz3.ab3@23862> JMP badconterr
0003347E <AmiBlitz3.ab3@23865>   MOVE.w #$4E71,D1
00033482 <AmiBlitz3.ab3@23866> BRA.w writeword
00033488 <AmiBlitz3.ab3@23869>   MOVEA.l firstfor,A2
0003348E <AmiBlitz3.ab3@23870>   CLR.l firstfor
00033494 <AmiBlitz3.ab3@23871>   MOVEA.l _execbase,A6
00033498 <AmiBlitz3.ab3@23874>   CMPA.w #$0,A2
0003349C <AmiBlitz3.ab3@23875>   BEQ.w JL_0_D9E6
0003349E <AmiBlitz3.ab3@23876>   MOVEA.l A2,A1
000334A0 <AmiBlitz3.ab3@23877>   MOVEA.l (A1),A2
000334A2 <AmiBlitz3.ab3@23878>   MOVEQ.l #$00,D0
000334A8 <AmiBlitz3.ab3@23879>   MOVE.l mempool2,a0
000334AC <AmiBlitz3.ab3@23880>   MOVE.b $10(A1),D0
000334B0 <AmiBlitz3.ab3@23881>   JSR _FreePooled(A6)                                      ;freememfor_error
000334B4 <AmiBlitz3.ab3@23882> BRA.w JL_0_D9CC
000334B6 <AmiBlitz3.ab3@23885> RTS
000334BC <AmiBlitz3.ab3@23889> JMP badpenderr
000334C2 <AmiBlitz3.ab3@23895>   MOVE.w proceduremode,D1
000334C6 <AmiBlitz3.ab3@23896>    BEQ.w JUMP_badpenderr
000334CC <AmiBlitz3.ab3@23898>   MOVE.w dontwrite,D1
000334D0 <AmiBlitz3.ab3@23899>    BNE.w JL_0_DA1A
000334D6 <AmiBlitz3.ab3@23900>   MOVEA.l firstpend,A2
000334DA <AmiBlitz3.ab3@23903>   CMPA.w #$0,A2
000334DE <AmiBlitz3.ab3@23904>    BEQ.w JL_0_DA1A
000334E2 <AmiBlitz3.ab3@23905>   MOVEA.l $4(A2),A0
000334E8 <AmiBlitz3.ab3@23906>   MOVE.l destpointer,(A0)
000334EA <AmiBlitz3.ab3@23907>   MOVEA.l (A2),A2
000334EE <AmiBlitz3.ab3@23908> BRA.w JL_0_DA02
000334F4 <AmiBlitz3.ab3@23911>   TST.b debugmode
000334F8 <AmiBlitz3.ab3@23912>    BEQ.b JL_0_DA2A
000334FA <AmiBlitz3.ab3@23913>   MOVEQ.l #$05,D1
00033500 <AmiBlitz3.ab3@23914>   JSR writetrap
00033506 <AmiBlitz3.ab3@23917>   MOVEA.l firstlocal,A2                                    ;firstlocal
0003350C <AmiBlitz3.ab3@23918>   JSR calcstatic2b                                           ;calcstatic
00033512 <AmiBlitz3.ab3@23919>   MOVEA.l currentfunction,A0
00033518 <AmiBlitz3.ab3@23920>   MOVE.l destpointer,d1
0003351C <AmiBlitz3.ab3@23921>   SUB.l $e(a0),d1
00033520 <AmiBlitz3.ab3@23922>   MOVE.l d1,isfunc+1(a0)                                   ;store function size
00033524 <AmiBlitz3.ab3@23923>   MOVE.w D4,$8(A0)                                         ;set if memalloc need
0003352A <AmiBlitz3.ab3@23924>   MOVE.l D3,locdatast
00033530 <AmiBlitz3.ab3@23925>   MOVEA.l tempvm,A1
00033536 <AmiBlitz3.ab3@23926>  CLR.b infunctioncode
0003353C <AmiBlitz3.ab3@23927>   MOVE.l firstiffstore,d1
00033542 <AmiBlitz3.ab3@23928>   CMP.l firstiff,d1
00033546 <AmiBlitz3.ab3@23929>   BNE JUMP_noenderr
0003354A <AmiBlitz3.ab3@23930>   TST.w $C(A1)                                             ;dim
0003354E <AmiBlitz3.ab3@23931>    BPL.w JL_0_DA64
00033554 <AmiBlitz3.ab3@23932>  BSET #$7,$8(A0)
00033558 <AmiBlitz3.ab3@23933>   MOVE.w #$C005,D1
0003355C <AmiBlitz3.ab3@23934>    BSR.w tokejsr2                                          ;writefreememstatement
00033560 <AmiBlitz3.ab3@23935> BRA.w JL_0_DA6C
00033566 <AmiBlitz3.ab3@23938> JMP noenderr
0003356E <AmiBlitz3.ab3@23941>   MOVE.w memlibstat,$C(A1)
00033574 <AmiBlitz3.ab3@23944>   MOVEA.l currentfunction,A0
00033578 <AmiBlitz3.ab3@23945>   MOVE.l $E(A0),-(A7)
00033580 <AmiBlitz3.ab3@23946>   MOVE.w locvaroff,$6(A0)
00033586 <AmiBlitz3.ab3@23947>   BCLR #$1,$7(A0)
0003358C <AmiBlitz3.ab3@23948>   BCLR #$0,$7(A0)
00033592 <AmiBlitz3.ab3@23949>   CMPI.b #$7,$5(A0)
00033596 <AmiBlitz3.ab3@23950>    BNE.w JL_0_DA9E
0003359C <AmiBlitz3.ab3@23951>   MOVE.w getstlen,D1
000335A0 <AmiBlitz3.ab3@23952>    BSR.w writeword
000335A4 <AmiBlitz3.ab3@23955>   TST.w $6(A0)
000335A8 <AmiBlitz3.ab3@23956>    BEQ.w JL_0_DAB8
000335AC <AmiBlitz3.ab3@23957>   MOVE.w #$FC7B,D1
000335B2 <AmiBlitz3.ab3@23958>    JSR uselib
000335B8 <AmiBlitz3.ab3@23959>   MOVE.w unlinka4,D1
000335BC <AmiBlitz3.ab3@23960>    BSR.w writeword
000335C2 <AmiBlitz3.ab3@23963>   MOVEA.l currentfunction,A0
000335C4 <AmiBlitz3.ab3@23964>   MOVEQ.l #$00,D1
000335C8 <AmiBlitz3.ab3@23965>   MOVE.b $4(A0),D1
000335CA <AmiBlitz3.ab3@23966>   LSR.w #4,D1
000335CE <AmiBlitz3.ab3@23967>    BEQ.w JL_0_DB24
000335D0 <AmiBlitz3.ab3@23969>      LSL.w #1,d1
000335D4 <AmiBlitz3.ab3@23971>   CMP.w #$1,D1
000335D8 <AmiBlitz3.ab3@23972>    BNE.w JL_0_DAE0
000335DE <AmiBlitz3.ab3@23973>   MOVE.w fix1,D1
000335E2 <AmiBlitz3.ab3@23974>    BSR.w writeword
000335E6 <AmiBlitz3.ab3@23975> BRA.w JL_0_DB24
000335E8 <AmiBlitz3.ab3@23978>   LSL.w #2,D1
000335EA <AmiBlitz3.ab3@23979>   MOVE.w D1,-(A7)
000335F0 <AmiBlitz3.ab3@23980>   MOVE.w D1,moverts+2
000335F6 <AmiBlitz3.ab3@23981>   MOVE.l moverts,D1
000335FC <AmiBlitz3.ab3@23982>    JSR writelong
000335FE <AmiBlitz3.ab3@23983>   MOVE.w (A7)+,D1
00033602 <AmiBlitz3.ab3@23984>   CMP.w #$8,D1
00033606 <AmiBlitz3.ab3@23985>    BHI.w JL_0_DB14
0003360A <AmiBlitz3.ab3@23986>   ANDI.w #$7,D1
0003360C <AmiBlitz3.ab3@23987>   LSL.w #8,D1
0003360E <AmiBlitz3.ab3@23988>   LSL.w #1,D1
00033614 <AmiBlitz3.ab3@23989>   OR.w fixq,D1
0003361A <AmiBlitz3.ab3@23990>    JSR writeword
0003361E <AmiBlitz3.ab3@23991> BRA.w JL_0_DB24
00033624 <AmiBlitz3.ab3@23995>    MOVE.w D1,fixstack+2
0003362A <AmiBlitz3.ab3@23996>   MOVE.l fixstack,D1
00033630 <AmiBlitz3.ab3@23997>    JSR writelong
00033634 <AmiBlitz3.ab3@24000>    BSR.w JL_0_D2CA
00033638 <AmiBlitz3.ab3@24001>    BSR.w JL_0_D4F8
0003363A <AmiBlitz3.ab3@24002>   MOVEA.l (A7)+,A0
00033640 <AmiBlitz3.ab3@24003>   MOVE.w dontwrite,D1
00033644 <AmiBlitz3.ab3@24004>    BNE.w JL_0_DB3E
0003364A <AmiBlitz3.ab3@24005>   MOVE.l destpointer,-(A0)
00033650 <AmiBlitz3.ab3@24008>   CLR.w proceduremode
00033656 <AmiBlitz3.ab3@24009>   CLR.l currentfunction
0003365C <AmiBlitz3.ab3@24010>   CLR.w procnum
00033660 <AmiBlitz3.ab3@24011>    BSR.w JL_0_DB5C
00033666 <AmiBlitz3.ab3@24012>    JSR freepends
0003366C <AmiBlitz3.ab3@24013> JMP get1bytemain
0003366E <AmiBlitz3.ab3@24016>   MOVEQ.l #$0C,D0
00033670 <AmiBlitz3.ab3@24017>   MOVEQ.l #$01,D1
00033676 <AmiBlitz3.ab3@24018>   MOVEA.l _execbase,A6
0003367C <AmiBlitz3.ab3@24020>   MOVE.l mempool,a0
00033680 <AmiBlitz3.ab3@24021>   JSR _AllocPooled(a6)
00033682 <AmiBlitz3.ab3@24022>   MOVEA.l D0,A0
00033688 <AmiBlitz3.ab3@24023>   MOVE.l alllocals,(A0)
0003368E <AmiBlitz3.ab3@24024>   MOVE.l A0,alllocals
00033694 <AmiBlitz3.ab3@24025>   MOVE.l firstlocal,D0
0003369A <AmiBlitz3.ab3@24026>   CLR.l firstlocal
0003369E <AmiBlitz3.ab3@24027>   MOVE.l D0,$4(A0)
000336A4 <AmiBlitz3.ab3@24028>   MOVE.l firstglob,D1
000336AA <AmiBlitz3.ab3@24029>   CLR.l firstglob
000336AE <AmiBlitz3.ab3@24030>   MOVE.l D1,$8(A0)
000336B4 <AmiBlitz3.ab3@24031>   TST.b debugmode
000336B8 <AmiBlitz3.ab3@24032>    BEQ.b JL_0_DBB0
000336BE <AmiBlitz3.ab3@24033>   TST.w dontwrite
000336C2 <AmiBlitz3.ab3@24034>    BNE.b JL_0_DBB0
000336C6 <AmiBlitz3.ab3@24035>   MOVEA.l proclocals(PC),A0
000336C8 <AmiBlitz3.ab3@24036>   MOVE.l D0,(A0)+
000336CA <AmiBlitz3.ab3@24037>   MOVE.l D1,(A0)
000336CC <AmiBlitz3.ab3@24040> RTS
000336D2 <AmiBlitz3.ab3@24043> JMP baddirerr
000336D8 <AmiBlitz3.ab3@24047>   TST.w dirmode
000336DC <AmiBlitz3.ab3@24048>    BNE.w JUMP_baddirerr
000336E2 <AmiBlitz3.ab3@24049>   MOVE.l firstfor,D1
000336E6 <AmiBlitz3.ab3@24050>    BEQ.w JUMP_noforerr
000336EC <AmiBlitz3.ab3@24051>   JSR reget
000336F0 <AmiBlitz3.ab3@24052>    BEQ.w JL_0_DC18
000336F4 <AmiBlitz3.ab3@24055>   BSR.w getparameter
000336F8 <AmiBlitz3.ab3@24056>   MOVEA.l firstfor(PC),A2
000336FA <AmiBlitz3.ab3@24057>   MOVEQ.l #$00,D1
000336FE <AmiBlitz3.ab3@24058>   MOVE.b $10(A2),D1
00033702 <AmiBlitz3.ab3@24059>   SUBI.w #$12,D1
00033704 <AmiBlitz3.ab3@24060>   CMP.w D1,D2
00033708 <AmiBlitz3.ab3@24061>    BNE.w JUMP_noforerr
0003370C <AmiBlitz3.ab3@24062>   LEA ptr_parameterstore(PC),A0
00033710 <AmiBlitz3.ab3@24063>   LEA $11(A2),A1
00033712 <AmiBlitz3.ab3@24064>   SUBQ.w #1,D2
00033714 <AmiBlitz3.ab3@24067>     CMPM.b (A0)+,(A1)+
00033718 <AmiBlitz3.ab3@24068>     BNE.w JUMP_noforerr
0003371C <AmiBlitz3.ab3@24069>   DBF D2,JL_0_DBF0
00033720 <AmiBlitz3.ab3@24071>    BSR.w JL_0_DC1A
00033726 <AmiBlitz3.ab3@24072>    JSR reget
0003372A <AmiBlitz3.ab3@24073>    BEQ.w JL_0_DC16
0003372E <AmiBlitz3.ab3@24074>   CMP.w #$2C,D0
00033732 <AmiBlitz3.ab3@24075>    BNE.w JUMP_syntaxerr
00033738 <AmiBlitz3.ab3@24076>    JSR get1bytemain
0003373C <AmiBlitz3.ab3@24077> BRA.w JL_0_DBCE
00033742 <AmiBlitz3.ab3@24080> JMP noforerr
00033744 <AmiBlitz3.ab3@24083> RTS
00033748 <AmiBlitz3.ab3@24087>   MOVE.l 8(a7),a2
0003374C <AmiBlitz3.ab3@24088>   Dc.l  $f2124400                                          ;fmove.s (a2),fp0
00033750 <AmiBlitz3.ab3@24089>   Dc.l  $F2174422                                          ;fadd.s (a7),fp0
00033754 <AmiBlitz3.ab3@24090>   Dc.l  $F2126400                                          ;fmove.s fp0,(a2)
00033756 <AmiBlitz3.ab3@24094>   MOVEA.l D1,A2
0003375C <AmiBlitz3.ab3@24097>   JSR popnext                                           ;error checking for next.
00033760 <AmiBlitz3.ab3@24098>   MOVE.w $C(A2),D0
00033766 <AmiBlitz3.ab3@24099>   LEA nextb,A0
0003376C <AmiBlitz3.ab3@24100>   LEA nextbf,A1
00033770 <AmiBlitz3.ab3@24101>   CMP.w #$1,D0
00033774 <AmiBlitz3.ab3@24102>    BEQ.w JL_0_DC74
0003377A <AmiBlitz3.ab3@24103>   LEA nextw,A0
00033780 <AmiBlitz3.ab3@24104>   LEA nextwf,A1
00033784 <AmiBlitz3.ab3@24105>   CMP.w #$2,D0
00033788 <AmiBlitz3.ab3@24106>    BEQ.w JL_0_DC74
0003378E <AmiBlitz3.ab3@24107>   LEA nextl,A0
00033794 <AmiBlitz3.ab3@24108>   LEA nextlf,A1
00033798 <AmiBlitz3.ab3@24109>   CMP.w #$5,D0
0003379C <AmiBlitz3.ab3@24110>    BNE.w JL_0_DC74
000337A2 <AmiBlitz3.ab3@24111>    TST.b fpu
000337A6 <AmiBlitz3.ab3@24112>    BEQ 'old
000337AC <AmiBlitz3.ab3@24113>    LEA fpu2dats,a0                                         ;fpu next code
000337B2 <AmiBlitz3.ab3@24114>    LEA fpu2date,a1
000337B6 <AmiBlitz3.ab3@24115> BRA JL_0_DC74
000337BA <AmiBlitz3.ab3@24118>   MOVE.w #$C900,D1
000337BE <AmiBlitz3.ab3@24119>    BSR.w Atokejsr
000337C4 <AmiBlitz3.ab3@24120>   LEA nextf,A0
000337CA <AmiBlitz3.ab3@24121>   LEA nextff,A1
000337D0 <AmiBlitz3.ab3@24124>   JSR pokecode
000337D6 <AmiBlitz3.ab3@24125>     TST.b fast                                             ;fast for next deactivate
000337DA <AmiBlitz3.ab3@24126> BRA 'l1
000337E0 <AmiBlitz3.ab3@24128>     TST.b onestep
000337E4 <AmiBlitz3.ab3@24129>     BEQ 'l1
000337EA <AmiBlitz3.ab3@24130>     CLR.b onestep
000337F0 <AmiBlitz3.ab3@24131>     SUBQ.l #4,destpointer
000337F4 <AmiBlitz3.ab3@24132>     MOVE.w #$5292,d1
000337FA <AmiBlitz3.ab3@24133>     JSR writeword
000337FE <AmiBlitz3.ab3@24136>   MOVE.l JL_0_DCF4(PC),D1
00033804 <AmiBlitz3.ab3@24137>    JSR writelong
0003380A <AmiBlitz3.ab3@24138>   MOVEA.l firstfor,A2
00033810 <AmiBlitz3.ab3@24139>   MOVE.l (A2),firstfor
00033814 <AmiBlitz3.ab3@24140>   MOVEA.l $8(A2),A0
0003381A <AmiBlitz3.ab3@24141>   MOVEA.l destpointer,A1
0003381C <AmiBlitz3.ab3@24142>   MOVE.l A1,D1
0003381E <AmiBlitz3.ab3@24143>   SUB.l A0,D1
00033820 <AmiBlitz3.ab3@24144>   ADDQ.l #2,D1
00033826 <AmiBlitz3.ab3@24145>   CMP.l #MinWordSgnd,D1
0003382A <AmiBlitz3.ab3@24146>    BCC.w JUMP_bigforerr
00033830 <AmiBlitz3.ab3@24147>   TST.w dontwrite
00033834 <AmiBlitz3.ab3@24148>    BNE.w JL_0_DCB4
00033838 <AmiBlitz3.ab3@24149>   MOVE.w D1,-$2(A0)
0003383A <AmiBlitz3.ab3@24152>   MOVE.l A1,D1
0003383E <AmiBlitz3.ab3@24153>   SUB.l $4(A2),D1
00033840 <AmiBlitz3.ab3@24154>   SUBQ.l #6,D1
00033846 <AmiBlitz3.ab3@24155>   CMP.l #MinWordSgnd,D1
0003384A <AmiBlitz3.ab3@24156>    BCC.w JUMP_bigforerr
00033850 <AmiBlitz3.ab3@24157>   TST.w dontwrite
00033854 <AmiBlitz3.ab3@24158>    BNE.w JL_0_DCD6
00033856 <AmiBlitz3.ab3@24159>   NEG.w D1
0003385A <AmiBlitz3.ab3@24160>   MOVE.w D1,-$2(A1)
00033860 <AmiBlitz3.ab3@24163>   JSR popnext3
00033866 <AmiBlitz3.ab3@24164>   MOVEA.l _execbase,A6
00033868 <AmiBlitz3.ab3@24165>   MOVEA.l A2,A1
0003386A <AmiBlitz3.ab3@24166>   MOVEQ.l #$00,D0
0003386E <AmiBlitz3.ab3@24167>   MOVE.b $10(A1),D0
00033874 <AmiBlitz3.ab3@24168>   MOVE.l mempool2,a0
00033878 <AmiBlitz3.ab3@24169>   JSR _FreePooled(A6)
0003387E <AmiBlitz3.ab3@24170> JMP reget
00033884 <AmiBlitz3.ab3@24173> JMP notallowd
0003388A <AmiBlitz3.ab3@24176> JMP bigforerr
0003388E <AmiBlitz3.ab3@24183>   MOVE.w #$664F,-(A7)
00033892 <AmiBlitz3.ab3@24186> BRA.w JL_0_DCF4
00033898 <AmiBlitz3.ab3@24189> JMP error_dublicate_for
0003389C <AmiBlitz3.ab3@24192> forlineat:   Ds.l 1
0003389E <AmiBlitz3.ab3@24193> fortemp:     Ds.w 1
000338A4 <AmiBlitz3.ab3@24200>   CLR.l fp0addr
000338AA <AmiBlitz3.ab3@24201>   TST.w dirmode
000338AE <AmiBlitz3.ab3@24202>    BNE.w JUMP_baddirerr
000338B8 <AmiBlitz3.ab3@24203>   MOVE.l linenumat,forlineat
000338BE <AmiBlitz3.ab3@24207>   MOVE.l A5,letstart
000338C2 <AmiBlitz3.ab3@24208>   BSR.w getparameter
000338C8 <AmiBlitz3.ab3@24209>   MOVE.w D2,fortemp
000338CE <AmiBlitz3.ab3@24210>   JSR findfor
000338D2 <AmiBlitz3.ab3@24211>    BEQ.w JUMP_error_dublicate_for
000338D8 <AmiBlitz3.ab3@24212>   LEA firstfor,A2
000338DE <AmiBlitz3.ab3@24213>   JSR addhere2
000338E0 <AmiBlitz3.ab3@24214>   MOVE.l A2,-(A7)
000338E6 <AmiBlitz3.ab3@24215>   TST.b debugmode
000338EA <AmiBlitz3.ab3@24216>    BEQ.b JL_0_DD4C
000338F0 <AmiBlitz3.ab3@24217>   JSR chkstak
000338F6 <AmiBlitz3.ab3@24218>   MOVE.l AJL_0_DCF0,D1
000338FC <AmiBlitz3.ab3@24219>   JSR  writelong
00033900 <AmiBlitz3.ab3@24222>   MOVE.w fortemp(PC),D2
00033908 <AmiBlitz3.ab3@24223>   MOVE.b #1,formode
0003390C <AmiBlitz3.ab3@24224>   BSR.w AJL_0_DEA6                                         ;for get 1. value
00033912 <AmiBlitz3.ab3@24225>   CLR.b formode
00033916 <AmiBlitz3.ab3@24226>   CMP.w #-$7FE8,D0
0003391A <AmiBlitz3.ab3@24227>    BNE.w JUMP_syntaxerr
00033920 <AmiBlitz3.ab3@24228>   MOVE.w commode,D1
00033924 <AmiBlitz3.ab3@24229>    BNE.w JUMP_syntaxerr
00033928 <AmiBlitz3.ab3@24230>   CMP.b #$6,D2
0003392C <AmiBlitz3.ab3@24231>    BCC.w JUMP_badforerr
00033930 <AmiBlitz3.ab3@24232>   BTST #$F,D2
00033934 <AmiBlitz3.ab3@24233>    BNE.w JL_0_DD86
0003393A <AmiBlitz3.ab3@24234>   MOVE.w leaamp,D1
00033940 <AmiBlitz3.ab3@24235>   JSR pokewda5s
00033942 <AmiBlitz3.ab3@24236>   MOVE.w D3,D1
00033948 <AmiBlitz3.ab3@24237>   JSR  writeword
0003394E <AmiBlitz3.ab3@24240>   MOVE.w pushindex,D1
00033954 <AmiBlitz3.ab3@24241>   JSR  writeword
00033958 <AmiBlitz3.ab3@24242>   ANDI.w #$FF,D2
0003395A <AmiBlitz3.ab3@24244>   MOVEA.l (A7),A1
0003395E <AmiBlitz3.ab3@24245>   MOVE.w D2,$C(A1)
00033960 <AmiBlitz3.ab3@24246>   MOVE.w D2,-(A7)
00033964 <AmiBlitz3.ab3@24247>    BSR.w eval
0003396A <AmiBlitz3.ab3@24248>    CLR.b onestep
0003396E <AmiBlitz3.ab3@24249>    CMP.w #$8019,d0
00033972 <AmiBlitz3.ab3@24250>    BEQ 'l1
0003397A <AmiBlitz3.ab3@24251>    MOVE.b #1,onestep
0003397C <AmiBlitz3.ab3@24254>   MOVE.w (A7),D2
00033982 <AmiBlitz3.ab3@24255>   MOVE.w pushd0l,D1
00033986 <AmiBlitz3.ab3@24256>   CMP.w #$3,D2
0003398A <AmiBlitz3.ab3@24257>    BCC.w JL_0_DDB6
00033990 <AmiBlitz3.ab3@24258>   MOVE.w pushd0wd,D1
00033992 <AmiBlitz3.ab3@24261>    MOVE.w D1,-(A7)
00033998 <AmiBlitz3.ab3@24262>    TST.b fpu
0003399C <AmiBlitz3.ab3@24263>    BEQ 'old
000339A0 <AmiBlitz3.ab3@24264>    CMP.b #5,d2
000339A4 <AmiBlitz3.ab3@24265>    BNE 'old
000339AA <AmiBlitz3.ab3@24266>    MOVE.l #$f2276400,d1
000339B0 <AmiBlitz3.ab3@24268>    JSR writelong
000339B4 <AmiBlitz3.ab3@24269> BRA 'weit
000339BA <AmiBlitz3.ab3@24272>    JSR  writeword                                          ;fpu for end value
000339BE <AmiBlitz3.ab3@24275>   CMP.w #-$7FE7,D0
000339C2 <AmiBlitz3.ab3@24276>    BNE.w JL_0_DDCC
000339C6 <AmiBlitz3.ab3@24277>    BSR.w eval
000339CC <AmiBlitz3.ab3@24278>    TST.b fpu
000339D0 <AmiBlitz3.ab3@24279>    BEQ JL_0_DE0C
000339D4 <AmiBlitz3.ab3@24280>    CMP.b #5,d2
000339D8 <AmiBlitz3.ab3@24281>    BNE JL_0_DE0C
000339DE <AmiBlitz3.ab3@24282>    MOVE.l #$f2276400,d1                                    ;write step <> 1
000339E4 <AmiBlitz3.ab3@24284>   JSR writelong
000339E6 <AmiBlitz3.ab3@24287>    MOVE.w (a7)+,d1
000339EA <AmiBlitz3.ab3@24288> BRA fpur
000339EE <AmiBlitz3.ab3@24291>   CMP.w #$4,D2
000339F2 <AmiBlitz3.ab3@24292>    BCC.w JL_0_DDE0
000339F6 <AmiBlitz3.ab3@24293>   MOVE.w #$7001,D1
000339FC <AmiBlitz3.ab3@24294>   JSR writeword
00033A00 <AmiBlitz3.ab3@24295> BRA.w JL_0_DE0C
00033A06 <AmiBlitz3.ab3@24298> JMP badforerr
00033A0A <AmiBlitz3.ab3@24301>   BNE.w JL_0_DDFA
00033A0E <AmiBlitz3.ab3@24302>   MOVE.w #$7001,D1
00033A14 <AmiBlitz3.ab3@24303>   JSR writeword
00033A1A <AmiBlitz3.ab3@24304>   MOVE.w swapd0,D1
00033A20 <AmiBlitz3.ab3@24305>   JSR writeword
00033A24 <AmiBlitz3.ab3@24306> BRA.w JL_0_DE0C
00033A2A <AmiBlitz3.ab3@24309>   TST.b fpu
00033A2E <AmiBlitz3.ab3@24310>    BEQ 'old
00033A32 <AmiBlitz3.ab3@24311>   CMP.b #5,d2
00033A36 <AmiBlitz3.ab3@24312>    BNE 'old
00033A3C <AmiBlitz3.ab3@24313>   MOVE.l #$f23c5000,d1
00033A42 <AmiBlitz3.ab3@24314>   JSR writelong
00033A46 <AmiBlitz3.ab3@24315>   MOVE.w #$1,d1
00033A4C <AmiBlitz3.ab3@24316>   JSR writeword
00033A52 <AmiBlitz3.ab3@24317>   MOVE.l #$f2276400,d1
00033A58 <AmiBlitz3.ab3@24318>   JSR writelong
00033A5A <AmiBlitz3.ab3@24319>   MOVE.w (a7)+,d1
00033A5E <AmiBlitz3.ab3@24320> BRA fpur
00033A62 <AmiBlitz3.ab3@24323>   MOVE.w #$203C,D1                                         ;write step 1
00033A68 <AmiBlitz3.ab3@24324>   JSR writeword
00033A6E <AmiBlitz3.ab3@24325>   MOVE.l #$80000041,D1                                     ;ffp '1'
00033A74 <AmiBlitz3.ab3@24326>   JSR writelong
00033A76 <AmiBlitz3.ab3@24329>   MOVE.w (A7)+,D1
00033A7C <AmiBlitz3.ab3@24330>   JSR writeword                                            ;push step on stack
00033A7E <AmiBlitz3.ab3@24333>   MOVE.w (A7)+,D2
00033A80 <AmiBlitz3.ab3@24334>   MOVEA.l (A7),A1
00033A88 <AmiBlitz3.ab3@24335>   MOVE.l destpointer,$4(A1)
00033A8E <AmiBlitz3.ab3@24336>   LEA forcompb,A0
00033A94 <AmiBlitz3.ab3@24337>   LEA forcompbf,A1
00033A98 <AmiBlitz3.ab3@24338>   CMP.w #$1,D2
00033A9C <AmiBlitz3.ab3@24339>    BEQ.w JL_0_DE7E
00033AA2 <AmiBlitz3.ab3@24340>   LEA forcompw,A0
00033AA8 <AmiBlitz3.ab3@24341>   LEA forcompwf,A1
00033AAC <AmiBlitz3.ab3@24342>   CMP.w #$2,D2
00033AB0 <AmiBlitz3.ab3@24343>    BEQ.w JL_0_DE7E
00033AB6 <AmiBlitz3.ab3@24344>   LEA forcompl,A0
00033ABC <AmiBlitz3.ab3@24345>   LEA forcomplf,A1
00033AC0 <AmiBlitz3.ab3@24346>   CMP.w #$5,D2
00033AC4 <AmiBlitz3.ab3@24347>    BNE.w JL_0_DE7E
00033ACA <AmiBlitz3.ab3@24348>   TST.b fpu
00033ACE <AmiBlitz3.ab3@24349>    BEQ 'old
00033AD4 <AmiBlitz3.ab3@24350>   LEA fpu_start,a0
00033ADA <AmiBlitz3.ab3@24351>   LEA fpu_end,a1
00033AE0 <AmiBlitz3.ab3@24352>   JSR pokecode
00033AE4 <AmiBlitz3.ab3@24353> BRA fpu3
00033AEA <AmiBlitz3.ab3@24356>   LEA forcompf,A0                                         ;
00033AF0 <AmiBlitz3.ab3@24357>   LEA forcompff,A1
00033AF6 <AmiBlitz3.ab3@24358>   JSR pokecode
00033AFA <AmiBlitz3.ab3@24359>   MOVE.w #$C900,D1
00033AFE <AmiBlitz3.ab3@24360>   BSR.w Atokejsr
00033B04 <AmiBlitz3.ab3@24361>   LEA forcompf2,A0
00033B0A <AmiBlitz3.ab3@24362>   LEA forcompf2f,A1
00033B10 <AmiBlitz3.ab3@24365>   JSR pokecode
00033B16 <AmiBlitz3.ab3@24366>   TST.b fast                                               ;fast for next
00033B1A <AmiBlitz3.ab3@24367>    BEQ 's1
00033B1E <AmiBlitz3.ab3@24368>   CMP.w #3,d2
00033B22 <AmiBlitz3.ab3@24369>    BNE 's1
00033B28 <AmiBlitz3.ab3@24370>   TST.b onestep
00033B2C <AmiBlitz3.ab3@24371>    BEQ 's1
00033B36 <AmiBlitz3.ab3@24372>   SUB.l #10,destpointer
00033B3A <AmiBlitz3.ab3@24373>   MOVE.w #$b081,d1
00033B40 <AmiBlitz3.ab3@24374>   JSR writeword
00033B44 <AmiBlitz3.ab3@24378>   MOVE.l thebgt(PC),D1
00033B4A <AmiBlitz3.ab3@24379>   JSR writelong
00033B4C <AmiBlitz3.ab3@24382>   MOVEA.l (A7)+,A1
00033B54 <AmiBlitz3.ab3@24383>   MOVE.l destpointer,$8(A1)
00033B5A <AmiBlitz3.ab3@24384> JMP reget
00033B5E <AmiBlitz3.ab3@24387>   MOVEA.l 8(a7),a2
00033B62 <AmiBlitz3.ab3@24388>   Dc.l $f2124400                                           ;fmove.s (a2),fp0
00033B68 <AmiBlitz3.ab3@24389>   fmove.s 4(a7),fp1
00033B6C <AmiBlitz3.ab3@24390>   BTST.b #7,(a7)
00033B70 <AmiBlitz3.ab3@24391>   BNE 'negi
00033B74 <AmiBlitz3.ab3@24392>   fcmp.x fp1,fp0
00033B78 <AmiBlitz3.ab3@24393> BRA 'negi2
00033B7C <AmiBlitz3.ab3@24396>   fcmp.x fp0,fp1
00033B80 <AmiBlitz3.ab3@24399>   Dc.l $f2920000                                           ;fbgt.w
00033B84 <AmiBlitz3.ab3@24403>   BGT.w thebgt
00033B8A <AmiBlitz3.ab3@24406>   MOVE.l A5,letstart
00033B8E <AmiBlitz3.ab3@24407>   BSR.w getparameter
00033B98 <AmiBlitz3.ab3@24413>   MOVE.l destpointer,pushpc
00033BA2 <AmiBlitz3.ab3@24414>   MOVE.l hunkoffsetbase,pushoff
00033BA8 <AmiBlitz3.ab3@24415>   CLR.l rightsidetype
00033BB0 <AmiBlitz3.ab3@24416>   MOVE.w #$0001,regnum
00033BB6 <AmiBlitz3.ab3@24417>   JSR JL_0_8E3C
00033BBC <AmiBlitz3.ab3@24418>   JSR calcvar
00033BC2 <AmiBlitz3.ab3@24419>   TST.b formode
00033BC6 <AmiBlitz3.ab3@24420>   BEQ 'lf1
00033BCC <AmiBlitz3.ab3@24421>   CMP.l #newtype_double,A2
00033BD0 <AmiBlitz3.ab3@24422>   BEQ JUMP_notallowd
00033BD6 <AmiBlitz3.ab3@24423>   MOVE.l a2,currtype
00033BDC <AmiBlitz3.ab3@24426>   CLR.w startoffsetmore
00033BE0 <AmiBlitz3.ab3@24427>   CMP.w #$3d,d0
00033BE4 <AmiBlitz3.ab3@24428>   BNE 'l1a
00033BE8 <AmiBlitz3.ab3@24429>   BTST #15,d2
00033BEC <AmiBlitz3.ab3@24430>   BEQ 'l1a
00033BF0 <AmiBlitz3.ab3@24431>   CMP.b #1,d2
00033BF4 <AmiBlitz3.ab3@24432>   BNE 'l1a
00033BFE <AmiBlitz3.ab3@24433>   MOVE.w leaa0a0+2,startoffsetmore
00033C04 <AmiBlitz3.ab3@24436>   CLR.w regnum
00033C08 <AmiBlitz3.ab3@24437>   BSR.w JL_0_B5D2
00033C0E <AmiBlitz3.ab3@24438>   CLR.w commode
00033C14 <AmiBlitz3.ab3@24439>   CLR.w stackcorrect
00033C1A <AmiBlitz3.ab3@24440>   CLR.w pcodd
00033C20 <AmiBlitz3.ab3@24441>   MOVE.w startoffsetmore,d1
00033C24 <AmiBlitz3.ab3@24442>   BTST #0,d1
00033C28 <AmiBlitz3.ab3@24443>   BEQ 'l2a
00033C30 <AmiBlitz3.ab3@24444>   MOVE.w #1,pcodd
00033C34 <AmiBlitz3.ab3@24447>   CMP.w #$3D,D0                                            ;=
00033C38 <AmiBlitz3.ab3@24448>   BEQ.w JL_0_DEE0
00033C3A <AmiBlitz3.ab3@24451>   MOVE.b (a5)+,d1
00033C3E <AmiBlitz3.ab3@24452>   BEQ 'l10
00033C42 <AmiBlitz3.ab3@24453>   CMP.b #":",d1
00033C46 <AmiBlitz3.ab3@24454>   BEQ 'l10
00033C4A <AmiBlitz3.ab3@24455>   CMP.b #";",d1
00033C4E <AmiBlitz3.ab3@24456>   BEQ 'l10
00033C52 <AmiBlitz3.ab3@24457>   CMP.b #"0",d1
00033C56 <AmiBlitz3.ab3@24458>   BLT 'l11
00033C5A <AmiBlitz3.ab3@24459>   CMP.b #"9",d1
00033C5E <AmiBlitz3.ab3@24460>   BGT 'l11
00033C62 <AmiBlitz3.ab3@24461> BRA.s 'l1
00033C6A <AmiBlitz3.ab3@24464>   MOVE.b #1,quickadd
00033C70 <AmiBlitz3.ab3@24467>   MOVEA.l letstart,A5
00033C72 <AmiBlitz3.ab3@24468>   SUBQ.w #1,A5
00033C76 <AmiBlitz3.ab3@24471>   CMP.b #$7,D2
00033C7A <AmiBlitz3.ab3@24472>    BNE.w JL_0_DF8A
00033C7E <AmiBlitz3.ab3@24478>   MOVEM.w D2-D3,-(A7)
00033C84 <AmiBlitz3.ab3@24479>   MOVE.l lastoffset_org,-(A7)
00033C8A <AmiBlitz3.ab3@24480>   MOVE.w varmode,-(A7)
00033C94 <AmiBlitz3.ab3@24482>    MOVE.l #forthstack,forthsp
00033C9E <AmiBlitz3.ab3@24483>    MOVE.l #precstack,precsp
00033CA4 <AmiBlitz3.ab3@24484>    CLR.w regnum
00033CAA <AmiBlitz3.ab3@24485>    CLR.w nonew
00033CB0 <AmiBlitz3.ab3@24486>    CLR.w sbasegot
00033CBA <AmiBlitz3.ab3@24487>    MOVE.w varcodelen,oldvcodelen
00033CC0 <AmiBlitz3.ab3@24488>    CLR.w varcodelen
00033CC8 <AmiBlitz3.ab3@24489>    MOVE.w #$FFFF,lasta6
00033CCA <AmiBlitz3.ab3@24492>   MOVEQ.l #$07,D2
00033CCE <AmiBlitz3.ab3@24493>    BSR.w eval
00033CD4 <AmiBlitz3.ab3@24494>   MOVE.w (A7)+,varmode
00033CDA <AmiBlitz3.ab3@24495>   MOVE.l (A7)+,lastoffset_org
00033CE0 <AmiBlitz3.ab3@24496>   MOVE.w moved0a3,D1
00033CE6 <AmiBlitz3.ab3@24497>    JSR writeword
00033CEC <AmiBlitz3.ab3@24498>   MOVE.w commode,D1
00033CF0 <AmiBlitz3.ab3@24499>    BEQ.w JL_0_DF38
00033CF6 <AmiBlitz3.ab3@24500>   LEA pulla2st,A0
00033CFC <AmiBlitz3.ab3@24501>   LEA pulla2stf,A1
00033D02 <AmiBlitz3.ab3@24502>    JSR pokecode
00033D06 <AmiBlitz3.ab3@24503> BRA.w JL_0_DF3C
00033D0A <AmiBlitz3.ab3@24506>   BSR.w JL_0_B63C
00033D0E <AmiBlitz3.ab3@24509>   MOVEM.w (A7)+,D2-D3
00033D12 <AmiBlitz3.ab3@24510>   BTST #$F,D2
00033D16 <AmiBlitz3.ab3@24511>   BNE.w JL_0_DF58
00033D1C <AmiBlitz3.ab3@24512>     MOVE.w D3,leaa5d3a2+2
00033D22 <AmiBlitz3.ab3@24513>     MOVE.l leaa5d3a2,D1
00033D28 <AmiBlitz3.ab3@24514>     JSR pokela5s
00033D2C <AmiBlitz3.ab3@24517>   MOVE.w #$FE6F,D1
00033D32 <AmiBlitz3.ab3@24518>   JSR uselib
00033D38 <AmiBlitz3.ab3@24519>   MOVE.l #$C700,D1
00033D3E <AmiBlitz3.ab3@24520>   MOVE.l d1,lastinstruction
00033D44 <AmiBlitz3.ab3@24521>   MOVE.w varmode,D2
00033D48 <AmiBlitz3.ab3@24522>   BNE.w JL_0_DF70
00033D4A <AmiBlitz3.ab3@24523>     ADDQ.w #1,D1
00033D4E <AmiBlitz3.ab3@24526>   BSR.w Atokejsr
00033D52 <AmiBlitz3.ab3@24527>   CMP.w #$2C,D0
00033D56 <AmiBlitz3.ab3@24528>   BNE.w JL_0_E0C6
00033D5C <AmiBlitz3.ab3@24530>   MOVE.w addq4a2,D1
00033D62 <AmiBlitz3.ab3@24531>   JSR writeword
00033D66 <AmiBlitz3.ab3@24532> BRA.w JL_0_E018
00033D6C <AmiBlitz3.ab3@24535> JMP error4char
00033D72 <AmiBlitz3.ab3@24538> JMP error_convert_types
00033D76 <AmiBlitz3.ab3@24542>    BTST #$E,D2
00033D7A <AmiBlitz3.ab3@24543>    BNE.w JL_0_DF9C
00033D7C <AmiBlitz3.ab3@24544>   TST.b D2
00033D80 <AmiBlitz3.ab3@24545>    BEQ.w JUMP_noleterr
00033D86 <AmiBlitz3.ab3@24546>    TST.b newsyntax
00033D8A <AmiBlitz3.ab3@24547>    BEQ JL_0_DFA0
00033D8E <AmiBlitz3.ab3@24550>    CMP.w #$4022,(a5)
00033D92 <AmiBlitz3.ab3@24551>    BNE JL_0_DFA0
00033D98 <AmiBlitz3.ab3@24552>    CMP.l #3,d2
00033D9C <AmiBlitz3.ab3@24553>    BNE  JUMP_error_convert_types
00033D9E <AmiBlitz3.ab3@24554>    ADDQ #2,a5
00033DA0 <AmiBlitz3.ab3@24555>    MOVEQ #0,d0
00033DA2 <AmiBlitz3.ab3@24556>    MOVE.b (a5)+,d0
00033DA6 <AmiBlitz3.ab3@24557>    BEQ JL_0_DFA0
00033DAA <AmiBlitz3.ab3@24558>    CMP.b #$22,d0
00033DAE <AmiBlitz3.ab3@24559>    BNE 'l1
00033DB2 <AmiBlitz3.ab3@24560>    MOVE.b #0,d0
00033DB6 <AmiBlitz3.ab3@24561> BRA 'do
00033DB8 <AmiBlitz3.ab3@24564>   ASL.l #8,d0
00033DBA <AmiBlitz3.ab3@24565>    MOVE.b (a5)+,d0
00033DBE <AmiBlitz3.ab3@24566>    BEQ JL_0_DFA0
00033DC2 <AmiBlitz3.ab3@24567>    CMP.b #$22,d0
00033DC6 <AmiBlitz3.ab3@24568>    BNE 'l2
00033DCA <AmiBlitz3.ab3@24569>    MOVE.b #0,d0
00033DCC <AmiBlitz3.ab3@24570>    ASR.l #8,d0
00033DD0 <AmiBlitz3.ab3@24571> BRA 'do
00033DD2 <AmiBlitz3.ab3@24574>   ASL.l #8,d0
00033DD4 <AmiBlitz3.ab3@24575>     MOVE.b (a5)+,d0
00033DD8 <AmiBlitz3.ab3@24576>    BEQ JL_0_DFA0
00033DDC <AmiBlitz3.ab3@24577>    CMP.b #$22,d0
00033DE0 <AmiBlitz3.ab3@24578>    BNE 'l3
00033DE4 <AmiBlitz3.ab3@24579>    MOVE.b #0,d0
00033DE6 <AmiBlitz3.ab3@24580>    ASR.l #8,d0
00033DEA <AmiBlitz3.ab3@24581> BRA 'do
00033DEC <AmiBlitz3.ab3@24584>   ASL.l #8,d0
00033DEE <AmiBlitz3.ab3@24585>     MOVE.b (a5)+,d0
00033DF2 <AmiBlitz3.ab3@24586>    BEQ JL_0_DFA0
00033DF6 <AmiBlitz3.ab3@24587>    CMP.b #$22,d0
00033DFA <AmiBlitz3.ab3@24588>    BNE 'l4
00033DFE <AmiBlitz3.ab3@24589>    MOVE.b #0,d0
00033E00 <AmiBlitz3.ab3@24590>    ASR.l #8,d0
00033E04 <AmiBlitz3.ab3@24591> BRA 'do
00033E08 <AmiBlitz3.ab3@24594>    CMP.b #$22,(a5)+
00033E0C <AmiBlitz3.ab3@24595>    BNE JUMP_error4char
00033E10 <AmiBlitz3.ab3@24598>   MOVE.w #$2b7c,d1
00033E16 <AmiBlitz3.ab3@24599>    TST.w varmode
00033E1A <AmiBlitz3.ab3@24600>    BEQ 'g3
00033E1E <AmiBlitz3.ab3@24601>    BCLR #9,d1
00033E24 <AmiBlitz3.ab3@24604>     JSR writeword
00033E26 <AmiBlitz3.ab3@24605>     MOVE.l d0,d1
00033E2C <AmiBlitz3.ab3@24606>     JSR writelong
00033E2E <AmiBlitz3.ab3@24607>     MOVE.w d3,d1
00033E34 <AmiBlitz3.ab3@24608>     JSR writeword
00033E3A <AmiBlitz3.ab3@24609>     JSR get1bytemain
00033E3C <AmiBlitz3.ab3@24610> RTS
00033E42 <AmiBlitz3.ab3@24616> JMP noleterr
00033E48 <AmiBlitz3.ab3@24620>   MOVE.w d2,vartype
00033E4C <AmiBlitz3.ab3@24621>   MOVE.b #$3,D2
00033E50 <AmiBlitz3.ab3@24624>   CMP.b #5,d2
00033E54 <AmiBlitz3.ab3@24625>   BNE 'l1
00033E5A <AmiBlitz3.ab3@24626>   MOVE.l a2,currtype
00033E5E <AmiBlitz3.ab3@24630>   MOVEM.w D2-D3,-(A7)
00033E64 <AmiBlitz3.ab3@24631>   MOVE.w varmode,-(A7)
00033E6A <AmiBlitz3.ab3@24632>   MOVE.l a2,leftsidetype
00033E6E <AmiBlitz3.ab3@24633>   BTST #$f,d2
00033E72 <AmiBlitz3.ab3@24634>   BEQ 'nomultiassign
00033E78 <AmiBlitz3.ab3@24635>   CLR.l leftsidetype                        ;its multiassign to type entries so no typecheck need
00033E7C <AmiBlitz3.ab3@24636> 'nomultiassign  ANDI.w #$FF,D2
00033E82 <AmiBlitz3.ab3@24637>   MOVE.l lastoffset_org,-(A7)
00033E86 <AmiBlitz3.ab3@24638>   BSR.w eval                                ; calc right side of var assign
00033E8A <AmiBlitz3.ab3@24640>   MOVEM.l a0/a1,-(a7)
00033E90 <AmiBlitz3.ab3@24641>   MOVE.l leftsidetype,a0
00033E96 <AmiBlitz3.ab3@24642>   CMP.l #0,a0
00033E9A <AmiBlitz3.ab3@24643>   BEQ 'nocheck
00033EA2 <AmiBlitz3.ab3@24644>   CMP.l #$100,4(a0)
00033EA6 <AmiBlitz3.ab3@24645>   BLE 'nocheck
00033EAC <AmiBlitz3.ab3@24646>   TST.l typetocast
00033EB0 <AmiBlitz3.ab3@24647>   BEQ 'nocast
00033EB6 <AmiBlitz3.ab3@24648>   MOVE.l typetocast,a1
00033EBA <AmiBlitz3.ab3@24649>   BRA 'typecheck
00033EC0 <AmiBlitz3.ab3@24650> 'nocast  TST.l rightsidetype
00033EC4 <AmiBlitz3.ab3@24651>   BEQ 'nocheck
00033ECA <AmiBlitz3.ab3@24652>   MOVE.l rightsidetype,a1
00033ED2 <AmiBlitz3.ab3@24653>   CMP.l #$100,4(a1)
00033ED6 <AmiBlitz3.ab3@24654>   BGE 'typecheck
00033EDE <AmiBlitz3.ab3@24655>   CMP.l #$3,4(a1)
00033EE2 <AmiBlitz3.ab3@24656>   BEQ 'ok                              ;long assign is allow with this codelines
00033EE6 <AmiBlitz3.ab3@24657>   BRA 'error
00033EEC <AmiBlitz3.ab3@24659>   TST.b typecheck
00033EF0 <AmiBlitz3.ab3@24660>   BEQ 'nocheck
00033EF6 <AmiBlitz3.ab3@24661>   TST.b notypecheck
00033EFA <AmiBlitz3.ab3@24662>   BNE 'ok
00033EFC <AmiBlitz3.ab3@24663>   CMP.l a0,a1
00033F00 <AmiBlitz3.ab3@24664>   BEQ 'ok
00033F04 <AmiBlitz3.ab3@24666>   MOVE.l 4(a1),a1                   ; load the address of 1. type.
00033F08 <AmiBlitz3.ab3@24667>   CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
00033F0C <AmiBlitz3.ab3@24668>   BEQ 'ok
00033F12 <AmiBlitz3.ab3@24670>  JMP   error_convert_types     ;for syntax 4  = typecheck
00033F18 <AmiBlitz3.ab3@24673>    CLR.l typetocast
00033F1C <AmiBlitz3.ab3@24674>    MOVEM.l (a7)+, a0/a1
00033F22 <AmiBlitz3.ab3@24675>   MOVE.l (A7)+,lastoffset_org
00033F28 <AmiBlitz3.ab3@24676>   MOVE.w commode,D1
00033F2C <AmiBlitz3.ab3@24677>    BNE.w JL_0_DFCC
00033F30 <AmiBlitz3.ab3@24678>    BSR.w JL_0_B63C
00033F36 <AmiBlitz3.ab3@24681>   MOVE.w (A7)+,varmode
00033F3A <AmiBlitz3.ab3@24682>   MOVEM.w (A7)+,D2-D3
00033F3E <AmiBlitz3.ab3@24684>   MOVE.w #$2B40,D1
00033F44 <AmiBlitz3.ab3@24685>   MOVE.w varmode,D4
00033F48 <AmiBlitz3.ab3@24686>    BEQ.w JL_0_DFE8
00033F4C <AmiBlitz3.ab3@24687>   BCLR #$9,D1
00033F50 <AmiBlitz3.ab3@24690>   BTST #$F,D2
00033F54 <AmiBlitz3.ab3@24691>    BEQ.w JL_0_E090
00033F5A <AmiBlitz3.ab3@24692>    TST.b stackcorrect
00033F5E <AmiBlitz3.ab3@24693>    BNE 'st1
00033F64 <AmiBlitz3.ab3@24694>   MOVE.w commode,D1
00033F68 <AmiBlitz3.ab3@24695>    BEQ.w JL_0_E004
00033F6E <AmiBlitz3.ab3@24698>   MOVE.w pulla2,D1
00033F74 <AmiBlitz3.ab3@24699>    JSR writeword
00033F78 <AmiBlitz3.ab3@24702>   MOVE.w #$2480,D1
00033F7C <AmiBlitz3.ab3@24703>    MOVEM.l a0/d0,-(a7)
00033F82 <AmiBlitz3.ab3@24704>    MOVEA.l lastoffset_org,A0
00033F84 <AmiBlitz3.ab3@24705>    MOVE.l A0,D0
00033F88 <AmiBlitz3.ab3@24706>    BEQ.w 'skip
00033F8A <AmiBlitz3.ab3@24707>    MOVEA.l D0,A0
00033F92 <AmiBlitz3.ab3@24708>    MOVE.l $A(A0),currtype
00033F96 <AmiBlitz3.ab3@24711>   MOVEM.l (a7)+,a0/d0
00033F9A <AmiBlitz3.ab3@24712>   CMP.w #$2C,D0
00033F9E <AmiBlitz3.ab3@24713>    BNE.w JL_0_E090
00033FA2 <AmiBlitz3.ab3@24714>     MOVE.w #$24C0,D1
00033FA6 <AmiBlitz3.ab3@24715>    BSR.w JL_0_E090                                         ;write store
00033FAC <AmiBlitz3.ab3@24718>    MOVE.l lastoffset_org,D0
00033FB4 <AmiBlitz3.ab3@24722>   MOVE.w #$FFFF,commode
00033FBA <AmiBlitz3.ab3@24723>   CLR.w varcodelen
00033FC2 <AmiBlitz3.ab3@24724>   MOVE.b #1,optiarray
00033FC8 <AmiBlitz3.ab3@24725>   MOVE.w pusha2,D1
00033FCE <AmiBlitz3.ab3@24726>    JSR writeword
00033FD4 <AmiBlitz3.ab3@24727>   TST.l lastoffset_org
00033FD8 <AmiBlitz3.ab3@24728>   BEQ dimmore
00033FDE <AmiBlitz3.ab3@24729>   MOVEA.l lastoffset_org,A0
00033FE0 <AmiBlitz3.ab3@24730>   MOVE.l (A0),D0
00033FE4 <AmiBlitz3.ab3@24731>    BEQ.w JUMP_comerr
00033FE6 <AmiBlitz3.ab3@24732>   MOVEA.l D0,A0
00033FEC <AmiBlitz3.ab3@24733>   MOVE.l A0,lastoffset_org
00033FF2 <AmiBlitz3.ab3@24734>   BTST #$1,$7(A0)
00033FF6 <AmiBlitz3.ab3@24735>    BNE.w JUMP_nocomerr
00033FFA <AmiBlitz3.ab3@24736>   MOVEA.l $A(A0),A1
00033FFE <AmiBlitz3.ab3@24737>   MOVE.l $4(A1),D2
00034004 <AmiBlitz3.ab3@24740>   BTST #$0,$7(A0)
00034008 <AmiBlitz3.ab3@24741>    BNE.w JL_0_E078
0003400E <AmiBlitz3.ab3@24742>   CMP.l #$100,D2
00034012 <AmiBlitz3.ab3@24743>    BCC.l JUMP_nocomerr
00034016 <AmiBlitz3.ab3@24744> BRA.w JL_0_E088                                     ; do do type\x= 10,20,30....
0003401C <AmiBlitz3.ab3@24747>         CLR.b optiarray
00034020 <AmiBlitz3.ab3@24748>         CMP.w #"@@",(a5)
00034024 <AmiBlitz3.ab3@24749>         BEQ 'n1
00034028 <AmiBlitz3.ab3@24750> BRA 'd1
0003402E <AmiBlitz3.ab3@24753>   JSR nextline
00034030 <AmiBlitz3.ab3@24754>         MOVE.l a5,-(a7)
00034032 <AmiBlitz3.ab3@24757>   MOVE.b (a5)+,d0
00034036 <AmiBlitz3.ab3@24758>         CMP.b #$20,d0
0003403A <AmiBlitz3.ab3@24759>         BEQ 'l2
0003403C <AmiBlitz3.ab3@24760>         MOVE.l (a7)+,a5
00034040 <AmiBlitz3.ab3@24761>         CMP.b #";",d0
00034044 <AmiBlitz3.ab3@24762>         BEQ 'n1
0003404A <AmiBlitz3.ab3@24765>         TST.w debugmode
0003404E <AmiBlitz3.ab3@24766>         BEQ JL_0_DEE0
00034050 <AmiBlitz3.ab3@24767>         MOVE.l a0,-(a7)
00034056 <AmiBlitz3.ab3@24768>         MOVE.l pushat,a0
0003405C <AmiBlitz3.ab3@24769>         CMP.l #0,a0
00034060 <AmiBlitz3.ab3@24770>         BNE 'o1
00034064 <AmiBlitz3.ab3@24771> BRA 'skip
0003406C <AmiBlitz3.ab3@24774>         ADD.l #1,2(a0)
00034072 <AmiBlitz3.ab3@24777>   CLR.w commode
0003407A <AmiBlitz3.ab3@24778>         MOVE.b #1,stackcorrect
0003407C <AmiBlitz3.ab3@24779>         MOVE.l (a7)+,a0
00034082 <AmiBlitz3.ab3@24780> JMP JL_0_DEE0
00034088 <AmiBlitz3.ab3@24783> JMP nocomerr
0003408E <AmiBlitz3.ab3@24786>   CMP.l #$100,D2
00034092 <AmiBlitz3.ab3@24787>    BCS.w JL_0_E084
00034094 <AmiBlitz3.ab3@24788>   MOVEQ.l #$00,D2
00034098 <AmiBlitz3.ab3@24791>   BSET #$E,D2
0003409C <AmiBlitz3.ab3@24794>   BSET #$F,D2
000340A0 <AmiBlitz3.ab3@24795> BRA.w JL_0_DEE0
000340A6 <AmiBlitz3.ab3@24798>    MOVE.l destpointer,a4
000340AE <AmiBlitz3.ab3@24799>    MOVE.l #$f22a6400,-4(a4)
000340B4 <AmiBlitz3.ab3@24800>    MOVE.w arrayoffset,d1
000340BA <AmiBlitz3.ab3@24801> JMP writeword
000340C0 <AmiBlitz3.ab3@24804> JMP comerr
000340C6 <AmiBlitz3.ab3@24807>    TST.b fpu
000340CA <AmiBlitz3.ab3@24808>    BEQ 'nofloat
000340CE <AmiBlitz3.ab3@24809>    CMP.b #5,d2
000340D2 <AmiBlitz3.ab3@24810>    BNE 'nofloat
000340D8 <AmiBlitz3.ab3@24811>    CLR.w fp0var
000340DE <AmiBlitz3.ab3@24812>    LEA regtable,a4
000340E0 <AmiBlitz3.ab3@24813>    TST.l (a4)
000340E4 <AmiBlitz3.ab3@24814>    BEQ 'noreg
000340E8 <AmiBlitz3.ab3@24815>    BTST #15,d2                                             ;regvars
000340EC <AmiBlitz3.ab3@24816>    BNE 'noreg
000340F0 <AmiBlitz3.ab3@24817>    CMP.w 0+4(a4),d3
000340F4 <AmiBlitz3.ab3@24818>    BNE 'doreg1
000340FA <AmiBlitz3.ab3@24819>    MOVE.l #$f2000380,d1
00034100 <AmiBlitz3.ab3@24820>    MOVE.w regnum,d0
00034104 <AmiBlitz3.ab3@24821>    BNE 'noopt
0003410A <AmiBlitz3.ab3@24827>    MOVE.l destpointer,a4
00034112 <AmiBlitz3.ab3@24828>    CMP.l #$f2001c80,-8(a4)
00034116 <AmiBlitz3.ab3@24829>    BNE 'noopt
0003411E <AmiBlitz3.ab3@24830>    CMP.l #$f2000422,-4(a4)
00034122 <AmiBlitz3.ab3@24831>    BNE 'noopt
00034128 <AmiBlitz3.ab3@24832>    MOVE.l #$f20003a2,d1
00034132 <AmiBlitz3.ab3@24833>    SUB.l #8,destpointer
00034134 <AmiBlitz3.ab3@24836>    ASL.w #7,d0
00034136 <AmiBlitz3.ab3@24837>    OR.w d0,d1
0003413C <AmiBlitz3.ab3@24838>    JSR writelong
0003413E <AmiBlitz3.ab3@24839> RTS
00034142 <AmiBlitz3.ab3@24842>   CMP.w 8+4(a4),d3
00034146 <AmiBlitz3.ab3@24843>    BNE 'doreg2
0003414C <AmiBlitz3.ab3@24844>    MOVE.l #$f2000300,d1
00034152 <AmiBlitz3.ab3@24845>    MOVE.w regnum,d0
00034154 <AmiBlitz3.ab3@24846>    ASL.w #7,d0
00034156 <AmiBlitz3.ab3@24847>    OR.w d0,d1
0003415C <AmiBlitz3.ab3@24848>    JSR writelong
0003415E <AmiBlitz3.ab3@24849> RTS
00034162 <AmiBlitz3.ab3@24852>   CMP.w 16+4(a4),d3
00034166 <AmiBlitz3.ab3@24853>    BNE 'doreg3
0003416C <AmiBlitz3.ab3@24854>    MOVE.l #$f2000280,d1
00034172 <AmiBlitz3.ab3@24855>    MOVE.w regnum,d0
00034174 <AmiBlitz3.ab3@24856>    ASL.w #7,d0
00034176 <AmiBlitz3.ab3@24857>    OR.w d0,d1
0003417C <AmiBlitz3.ab3@24858>    JSR  writelong
0003417E <AmiBlitz3.ab3@24859>  RTS
00034182 <AmiBlitz3.ab3@24862>   CMP.w 24+4(a4),d3
00034186 <AmiBlitz3.ab3@24863>    BNE 'doreg4
0003418C <AmiBlitz3.ab3@24864>    MOVE.l #$f2000200,d1
00034192 <AmiBlitz3.ab3@24865>    MOVE.w regnum,d0
00034194 <AmiBlitz3.ab3@24866>    ASL.w #7,d0
00034196 <AmiBlitz3.ab3@24867>    OR.w d0,d1
0003419C <AmiBlitz3.ab3@24868>    JSR writelong
0003419E <AmiBlitz3.ab3@24869> RTS
000341A2 <AmiBlitz3.ab3@24872>   CMP.w 32+4(a4),d3
000341A6 <AmiBlitz3.ab3@24873>    BNE 'noreg
000341AC <AmiBlitz3.ab3@24874>    MOVE.l #$f2000180,d1
000341B2 <AmiBlitz3.ab3@24875>    MOVE.w regnum,d0
000341B4 <AmiBlitz3.ab3@24876>    ASL.w #7,d0
000341B6 <AmiBlitz3.ab3@24877>    OR.w d0,d1
000341BC <AmiBlitz3.ab3@24878>    JSR writelong
000341BE <AmiBlitz3.ab3@24879> RTS
000341C4 <AmiBlitz3.ab3@24882>    TST.w regnum
000341C8 <AmiBlitz3.ab3@24883>    BNE 'nofp0
000341CE <AmiBlitz3.ab3@24884>    MOVE.l destpointer ,a4
000341D6 <AmiBlitz3.ab3@24885>    CMP.l #$f2304400,-6(a4)
000341DA <AmiBlitz3.ab3@24886>    BNE 'do
000341E0 <AmiBlitz3.ab3@24887>    CMP.w #$1990,-2(a4)
000341E4 <AmiBlitz3.ab3@24888>    BNE 'do
000341E8 <AmiBlitz3.ab3@24889>    BTST #15,d2                                             ;types ?
000341EC <AmiBlitz3.ab3@24890>    BNE 'do
000341F2 <AmiBlitz3.ab3@24891>   MOVE.l #$2b701990,d1                                     ;var
000341F8 <AmiBlitz3.ab3@24892>   TST.w varmode
000341FC <AmiBlitz3.ab3@24893>   BEQ 'glob1
00034200 <AmiBlitz3.ab3@24894>   BCLR #25,d1
00034204 <AmiBlitz3.ab3@24897>   MOVE.l d1,-6(a4)
00034208 <AmiBlitz3.ab3@24898>   MOVE.w d3,-2(a4)
0003420E <AmiBlitz3.ab3@24899>   CLR.w fp0var
00034216 <AmiBlitz3.ab3@24900>   MOVE.w #$ffff,fp0mode
00034218 <AmiBlitz3.ab3@24901> RTS
00034220 <AmiBlitz3.ab3@24904>    CMP.l #$f22d4400,-6(a4)                                 ;fmove.s (a5),fp0
00034224 <AmiBlitz3.ab3@24905>    BNE 'do3
0003422E <AmiBlitz3.ab3@24906>    CMP.l #newtype_double,currtype
00034232 <AmiBlitz3.ab3@24907>    BEQ 'do4
00034236 <AmiBlitz3.ab3@24910>   MOVE.w #$2b6d,d1
0003423C <AmiBlitz3.ab3@24911>    TST.w varmode
00034240 <AmiBlitz3.ab3@24912>    BEQ 'g2
00034244 <AmiBlitz3.ab3@24913>     BCLR #9,d1
00034248 <AmiBlitz3.ab3@24916>     CMP.w #$2b6d,d1
0003424C <AmiBlitz3.ab3@24917>     BNE 'd1
00034250 <AmiBlitz3.ab3@24918>     CMP.w -2(a4),d3
00034254 <AmiBlitz3.ab3@24919>     BNE 'd1
0003425A <AmiBlitz3.ab3@24920>     SUBQ.l #6,destpointer
0003425E <AmiBlitz3.ab3@24921> BRA 'd12
00034262 <AmiBlitz3.ab3@24924>     MOVE.w d1,-6(a4)                                       ;fmove.s to move.l mem,mem
00034268 <AmiBlitz3.ab3@24925>     MOVE.w -2(a4),-4(a4)
0003426C <AmiBlitz3.ab3@24926>     MOVE.w d3,-2(a4)
00034272 <AmiBlitz3.ab3@24929>   CLR.w fp0var
0003427A <AmiBlitz3.ab3@24930>     MOVE.w #$ffff,fp0mode
0003427C <AmiBlitz3.ab3@24931> RTS
00034284 <AmiBlitz3.ab3@24934>   CMP.l #$f22c4400,-6(a4)                                  ;fmove.s (a4)
00034288 <AmiBlitz3.ab3@24935>    BNE 'do4
0003428C <AmiBlitz3.ab3@24936>    MOVE.w #$2b6c,d1
00034292 <AmiBlitz3.ab3@24937>       TST.w varmode
00034296 <AmiBlitz3.ab3@24938>    BEQ 'g3
0003429A <AmiBlitz3.ab3@24939>    BCLR #9,d1
0003429E <AmiBlitz3.ab3@24942>   MOVE.w d1,-6(a4)
000342A4 <AmiBlitz3.ab3@24943>     MOVE.w -2(a4),-4(a4)
000342A8 <AmiBlitz3.ab3@24944>     MOVE.w d3,-2(a4)
000342AE <AmiBlitz3.ab3@24945>     CLR.w fp0var
000342B6 <AmiBlitz3.ab3@24946>     MOVE.w #$ffff,fp0mode
000342B8 <AmiBlitz3.ab3@24947> RTS
000342BE <AmiBlitz3.ab3@24950>   MOVE.w d3,fp0var
000342C8 <AmiBlitz3.ab3@24951>    MOVE.w varmode,fp0mode
000342CA <AmiBlitz3.ab3@24952>    ADDQ.l #6,a4
000342D0 <AmiBlitz3.ab3@24953>    MOVE.l a4,fp0addr
000342DA <AmiBlitz3.ab3@24954>    MOVE.l firstiff,fp0iff
000342DE <AmiBlitz3.ab3@24957>   MOVEM.l d0/d4,-(a7)
000342E0 <AmiBlitz3.ab3@24958>    MOVEQ #0,d0
000342E6 <AmiBlitz3.ab3@24959>     MOVE.w regnum,d0
000342E8 <AmiBlitz3.ab3@24960>    ASL.w #7,d0                                             ;fpu store var
000342EC <AmiBlitz3.ab3@24961>   BTST #15,d2
000342F0 <AmiBlitz3.ab3@24962>    BEQ 'var
000342F2 <AmiBlitz3.ab3@24963>    MOVE.w d1,d4
000342F6 <AmiBlitz3.ab3@24964>    CMP.w #$24c0,d4
000342FA <AmiBlitz3.ab3@24965>    BNE 'nopl
00034300 <AmiBlitz3.ab3@24966>    MOVE.l #$f21a6400,d1
00034302 <AmiBlitz3.ab3@24967>    MOVEQ #0,d3
00034306 <AmiBlitz3.ab3@24968> BRA 'glob
0003430C <AmiBlitz3.ab3@24972>   MOVE.l #$f2126400,d1
0003430E <AmiBlitz3.ab3@24973>    TST.w d3                                                ;offset =0
00034312 <AmiBlitz3.ab3@24974>    BNE 'offset
00034318 <AmiBlitz3.ab3@24975>    MOVE.l #$f2126400,d1
0003431A <AmiBlitz3.ab3@24983>    MOVEQ #0,d3
0003431E <AmiBlitz3.ab3@24984> BRA 'glob
00034324 <AmiBlitz3.ab3@24987>   MOVE.l #$f22d6400,d1                                     ;var
0003432A <AmiBlitz3.ab3@24988>   TST.w varmode
0003432E <AmiBlitz3.ab3@24989>   BEQ 'glob
00034332 <AmiBlitz3.ab3@24990>   BCLR #16,d1
00034334 <AmiBlitz3.ab3@24991>  'glob OR.l d0,d1
0003433E <AmiBlitz3.ab3@24994>   CMP.l #newtype_double,currtype
00034342 <AmiBlitz3.ab3@24995>   BNE 'dbl1
00034348 <AmiBlitz3.ab3@24996>   OR.l #$00001000,d1
0003434E <AmiBlitz3.ab3@24999>   JSR writelong
00034354 <AmiBlitz3.ab3@25000>   CLR.l currtype
00034358 <AmiBlitz3.ab3@25001>   MOVEM.l (a7)+,d0/d4
0003435A <AmiBlitz3.ab3@25002>   MOVE.l d3,d1
0003435E <AmiBlitz3.ab3@25003>   BEQ 'nooffs
00034364 <AmiBlitz3.ab3@25004> JMP writeword
00034366 <AmiBlitz3.ab3@25007> RTS
0003436C <AmiBlitz3.ab3@25021>     TST.b fast                                             ;write lea->xx(a2)
00034370 <AmiBlitz3.ab3@25022>    BEQ 'la10
00034376 <AmiBlitz3.ab3@25026>    TST.b quickadd
0003437C <AmiBlitz3.ab3@25028>      CLR.b quickadd
00034380 <AmiBlitz3.ab3@25029>    CMP.w #$2480,d1
00034384 <AmiBlitz3.ab3@25030>    BNE 'la10
0003438A <AmiBlitz3.ab3@25031>    TST.b optiarray
0003438E <AmiBlitz3.ab3@25032>    BNE 'la10
00034394 <AmiBlitz3.ab3@25033>    MOVE.l destpointer,a4
0003439A <AmiBlitz3.ab3@25034>    CMP.w #$45ea,-4(a4)
0003439E <AmiBlitz3.ab3@25035>    BNE 'la10
000343A6 <AmiBlitz3.ab3@25036>    CMP.w #8,pushclen
000343AA <AmiBlitz3.ab3@25037>    BEQ 'la100
000343B2 <AmiBlitz3.ab3@25038>    CMP.w #6,pushclen
000343B6 <AmiBlitz3.ab3@25039>    BNE 'la10
000343BA <AmiBlitz3.ab3@25040>    CMP.b #3,d2
000343BE <AmiBlitz3.ab3@25041>    BCS 'la110
000343C4 <AmiBlitz3.ab3@25043>    MOVE.w #$2540,-2(a4)
000343CA <AmiBlitz3.ab3@25044>    MOVE.w arrayoffset,d1
000343D0 <AmiBlitz3.ab3@25045> JMP writeword
000343D6 <AmiBlitz3.ab3@25048>    CLR.b quickadd
000343D8 <AmiBlitz3.ab3@25049> RTS
000343DC <AmiBlitz3.ab3@25052>    CMP.b #2,d2
000343E0 <AmiBlitz3.ab3@25053>    BNE 'la120
000343E6 <AmiBlitz3.ab3@25054>     MOVE.w #$3540,-2(a4)
000343EC <AmiBlitz3.ab3@25055>    MOVE.w arrayoffset,d1
000343F2 <AmiBlitz3.ab3@25056> JMP writeword
000343F6 <AmiBlitz3.ab3@25059>   CMP.b #1,d2
000343FA <AmiBlitz3.ab3@25060>    BNE.s 'la10
00034400 <AmiBlitz3.ab3@25061>     MOVE.w #$1540,-2(a4)
00034406 <AmiBlitz3.ab3@25062>    MOVE.w arrayoffset,d1
0003440C <AmiBlitz3.ab3@25063> JMP writeword
00034410 <AmiBlitz3.ab3@25066>    CMP.b #3,d2
00034414 <AmiBlitz3.ab3@25067>    BCS 'la11
0003441A <AmiBlitz3.ab3@25068>    MOVE.w #$2540,-4(a4)
0003441C <AmiBlitz3.ab3@25069> RTS
00034420 <AmiBlitz3.ab3@25072>    CMP.b #2,d2
00034424 <AmiBlitz3.ab3@25073>    BNE 'la12
0003442A <AmiBlitz3.ab3@25074>     MOVE.w #$3540,-4(a4)
0003442C <AmiBlitz3.ab3@25075> RTS
00034430 <AmiBlitz3.ab3@25077>  'la12 CMP.b #1,d2
00034434 <AmiBlitz3.ab3@25078>    BNE.s 'la10
0003443A <AmiBlitz3.ab3@25079>     MOVE.w #$1540,-4(a4)
0003443C <AmiBlitz3.ab3@25080> RTS
00034442 <AmiBlitz3.ab3@25083>   CLR.b optiarray
00034446 <AmiBlitz3.ab3@25084>    CMP.b #$1,D2
0003444A <AmiBlitz3.ab3@25085>    BEQ.w JL_0_E0AC
0003444E <AmiBlitz3.ab3@25086>    BSR.w varalign
00034452 <AmiBlitz3.ab3@25087>    CMP.b #$3,D2
00034456 <AmiBlitz3.ab3@25088>    BCC.w writevarlong
0003445C <AmiBlitz3.ab3@25089>    TST.b fast                                              ;optiimmi
00034460 <AmiBlitz3.ab3@25090>    BEQ 'l10b
00034466 <AmiBlitz3.ab3@25095>    MOVE.l destpointer,a0
0003446C <AmiBlitz3.ab3@25096>    SUB.l imm_addr,a0
00034472 <AmiBlitz3.ab3@25097>    CMP.l #4,a0
00034476 <AmiBlitz3.ab3@25098>    BNE 'l10
0003447C <AmiBlitz3.ab3@25099>    CLR.l imm_addr
00034482 <AmiBlitz3.ab3@25100>    MOVE.l destpointer,a4
00034486 <AmiBlitz3.ab3@25101>    OR.w #$107c,d1
0003448A <AmiBlitz3.ab3@25102>    MOVE.w d1,-4(a4)
0003448C <AmiBlitz3.ab3@25103>     MOVE.w D3,D1
00034492 <AmiBlitz3.ab3@25104> JMP writeword
00034498 <AmiBlitz3.ab3@25107>   MOVE.l destpointer,a0
0003449E <AmiBlitz3.ab3@25108>   SUB.l load_var_addr,a0
000344A4 <AmiBlitz3.ab3@25109>   CMP.l #4,a0
000344A8 <AmiBlitz3.ab3@25110>   BNE 'l10b
000344AE <AmiBlitz3.ab3@25111>   CMP.w #$302d,-4(a4)                                      ;check 68k opcode
000344B2 <AmiBlitz3.ab3@25112>   BNE 'l10b
000344B8 <AmiBlitz3.ab3@25114>   CLR.l load_var_addr
000344BE <AmiBlitz3.ab3@25115>   MOVE.l destpointer,a4
000344C2 <AmiBlitz3.ab3@25116>   OR.w #$102d,d1
000344C6 <AmiBlitz3.ab3@25117>   MOVE.w d1,-4(a4)
000344C8 <AmiBlitz3.ab3@25118>   MOVE.w d3,d1
000344CE <AmiBlitz3.ab3@25119> JMP writeword
000344D2 <AmiBlitz3.ab3@25122>   ORI.w #$1000,D1                                          ;word
000344D6 <AmiBlitz3.ab3@25123> BRA.w writestorevar
000344DC <AmiBlitz3.ab3@25127>    TST.b fast                                              ;optiimmi
000344E0 <AmiBlitz3.ab3@25128>    BEQ 'l10b
000344E6 <AmiBlitz3.ab3@25133>    MOVE.l destpointer,a0
000344EC <AmiBlitz3.ab3@25134>    SUB.l imm_addr,a0
000344F2 <AmiBlitz3.ab3@25135>    CMP.l #4,a0
000344F6 <AmiBlitz3.ab3@25136>    BNE 'l10
000344FC <AmiBlitz3.ab3@25137>    CLR.l imm_addr
00034502 <AmiBlitz3.ab3@25138>    MOVE.l destpointer,a4
00034506 <AmiBlitz3.ab3@25139>    OR.w #$7c,d1
0003450A <AmiBlitz3.ab3@25140>    EORI #$3000,d1
0003450E <AmiBlitz3.ab3@25141>    MOVE.w d1,-4(a4)
00034510 <AmiBlitz3.ab3@25142>       MOVE.w D3,D1
00034516 <AmiBlitz3.ab3@25143> JMP writeword
0003451C <AmiBlitz3.ab3@25146>   MOVE.l destpointer,a0
00034522 <AmiBlitz3.ab3@25147>   SUB.l load_var_addr,a0
00034528 <AmiBlitz3.ab3@25148>   CMP.l #4,a0
0003452C <AmiBlitz3.ab3@25149>   BNE 'l10b
00034532 <AmiBlitz3.ab3@25150>   CLR.l load_var_addr
00034538 <AmiBlitz3.ab3@25151>   MOVE.l destpointer,a4
0003453E <AmiBlitz3.ab3@25152>    CMP.w #$1b6d,-4(a4)
00034542 <AmiBlitz3.ab3@25153>    BNE 'l10b
00034546 <AmiBlitz3.ab3@25154>    OR.w #$2d,d1
0003454A <AmiBlitz3.ab3@25155>    EORI #$3000,d1
0003454E <AmiBlitz3.ab3@25156>    MOVE.w d1,-4(a4)
00034550 <AmiBlitz3.ab3@25157>   MOVE.w d3,d1
00034556 <AmiBlitz3.ab3@25158> JMP writeword
0003455C <AmiBlitz3.ab3@25161>   ADDQ.w #1,pcodd                                          ;byte
00034560 <AmiBlitz3.ab3@25162>   EORI.w #$3000,D1
00034566 <AmiBlitz3.ab3@25165>   JSR writeword
0003456A <AmiBlitz3.ab3@25166>   BTST #$7,D1
0003456E <AmiBlitz3.ab3@25167>    BNE JL_0_E0C6
00034570 <AmiBlitz3.ab3@25168>   MOVE.w D3,D1
00034576 <AmiBlitz3.ab3@25169> JMP writeword
0003457C <AmiBlitz3.ab3@25172>    TST.b fast                                              ;optiimmi
00034580 <AmiBlitz3.ab3@25173>    BEQ 'l10b
00034586 <AmiBlitz3.ab3@25177>    MOVE.l destpointer,a0
0003458C <AmiBlitz3.ab3@25178>    SUB.l imm_addr,a0
00034592 <AmiBlitz3.ab3@25179>    CMP.l #6,a0
00034596 <AmiBlitz3.ab3@25180>    BNE 'l10
0003459C <AmiBlitz3.ab3@25181>    CLR.l imm_addr
000345A2 <AmiBlitz3.ab3@25182>    MOVE.l destpointer,a4
000345A6 <AmiBlitz3.ab3@25183>    OR.w #$7c,d1
000345AA <AmiBlitz3.ab3@25184>    MOVE.w d1,-6(a4)
000345AC <AmiBlitz3.ab3@25185>     MOVE.w D3,D1
000345B2 <AmiBlitz3.ab3@25186> JMP writeword
000345B8 <AmiBlitz3.ab3@25189>   MOVE.l destpointer,a0
000345BE <AmiBlitz3.ab3@25190>   SUB.l load_var_addr,a0
000345C4 <AmiBlitz3.ab3@25191>   CMP.l #4,a0
000345C8 <AmiBlitz3.ab3@25192>   BNE 'l10b
000345CE <AmiBlitz3.ab3@25193>   CLR.l load_var_addr
000345D4 <AmiBlitz3.ab3@25194>   MOVE.l destpointer,a4
000345DA <AmiBlitz3.ab3@25195>   CMP.w #$245f,-2(a4)
000345DE <AmiBlitz3.ab3@25196>   BEQ 'l10b
000345E2 <AmiBlitz3.ab3@25197>   OR.w #$28,d1
000345E6 <AmiBlitz3.ab3@25198>   OR.w d1,-4(a4)
000345EC <AmiBlitz3.ab3@25199>   CMP.w #$2b6d,-4(a4)
000345F0 <AmiBlitz3.ab3@25200>   BNE 'd1
000345F4 <AmiBlitz3.ab3@25201>   CMP.w -2(a4),d3
000345F8 <AmiBlitz3.ab3@25202>   BNE 'd1
000345FE <AmiBlitz3.ab3@25203>   SUBQ.l #4,destpointer
00034600 <AmiBlitz3.ab3@25204> RTS
00034602 <AmiBlitz3.ab3@25207>   MOVE.w d3,d1
00034608 <AmiBlitz3.ab3@25208> JMP writeword
0003460E <AmiBlitz3.ab3@25211>   JSR writeword
00034612 <AmiBlitz3.ab3@25212>   BTST #$7,D1
00034616 <AmiBlitz3.ab3@25213>    BNE.b JL_0_E0C6
00034618 <AmiBlitz3.ab3@25214>   MOVE.w D3,D1
0003461E <AmiBlitz3.ab3@25215> JMP writeword
00034620 <AmiBlitz3.ab3@25218> RTS
00034622 <AmiBlitz3.ab3@25222>   MOVE.w D1,-(A7)
00034626 <AmiBlitz3.ab3@25223>   MOVE.w pcodd(PC),D1
00034628 <AmiBlitz3.ab3@25224>   LSR.w #1,D1
0003462C <AmiBlitz3.ab3@25225>    BCC.b JL_0_E0E2
00034632 <AmiBlitz3.ab3@25226>   CLR.w pcodd
00034638 <AmiBlitz3.ab3@25227>   MOVE.w add1a2,D1
0003463E <AmiBlitz3.ab3@25228>    JSR writeword
00034640 <AmiBlitz3.ab3@25231>   MOVE.w (A7)+,D1
00034642 <AmiBlitz3.ab3@25232> RTS
00034644 <AmiBlitz3.ab3@25236> add1a2:     Dc.b $52,$4A                                   ;ADDQ.W  #1,A2
00034646 <AmiBlitz3.ab3@25239> pcodd:     Ds.w 1                                          ;add 1 to this for bytes
00034648 <AmiBlitz3.ab3@25240> listadd:   Ds.w 1                                          ;set to 8 if it's a list
0003464A <AmiBlitz3.ab3@25241> listsize:  Ds.w 1
00034650 <AmiBlitz3.ab3@25245>   ADDQ.w #1,regnum
00034658 <AmiBlitz3.ab3@25246>   MOVE.b #1,nowdeclare
0003465E <AmiBlitz3.ab3@25247>   CLR.b dimkeep
00034666 <AmiBlitz3.ab3@25248>    CMP.l #"KEEP",-1(a5)
0003466A <AmiBlitz3.ab3@25249>   BNE 'nokeep
00034670 <AmiBlitz3.ab3@25250>   CMP.b #" ",3(a5)
00034674 <AmiBlitz3.ab3@25251>   BNE 'nokeep
00034676 <AmiBlitz3.ab3@25252>   ADDQ.l #3,a5
0003467A <AmiBlitz3.ab3@25255>     CMP.b #" ",(a5)
0003467E <AmiBlitz3.ab3@25256>     BNE '1
00034680 <AmiBlitz3.ab3@25257>    ADDQ #1,a5
00034684 <AmiBlitz3.ab3@25258> BRA '2
0003468A <AmiBlitz3.ab3@25261>   MOVE.l a5,lastsourcepos
00034692 <AmiBlitz3.ab3@25262>   MOVE.b #1,dimkeep
00034696 <AmiBlitz3.ab3@25270>   MOVE.w #$FF9A,D1
0003469C <AmiBlitz3.ab3@25271>   JSR uselib
000346A2 <AmiBlitz3.ab3@25274>   CLR.w listadd
000346A6 <AmiBlitz3.ab3@25275>   CMP.w #-$7F4D,D0
000346AA <AmiBlitz3.ab3@25276>    BNE.w JL_0_E11E
000346B2 <AmiBlitz3.ab3@25277>   MOVE.w #$0008,listadd
000346B6 <AmiBlitz3.ab3@25278>   MOVE.w #$FFFA,D1
000346BC <AmiBlitz3.ab3@25279>    JSR uselib
000346C2 <AmiBlitz3.ab3@25280>    JSR get1bytemain
000346C8 <AmiBlitz3.ab3@25283>   CLR.w nonew
000346CE <AmiBlitz3.ab3@25284>    JSR getparameter
000346D6 <AmiBlitz3.ab3@25285>   BTST #$1,flagmask+1
000346DA <AmiBlitz3.ab3@25286>    BEQ.w JUMP_syntaxerr
000346E0 <AmiBlitz3.ab3@25287>    JSR JL_0_8E3C
000346E6 <AmiBlitz3.ab3@25288>   MOVE.w notshared,D1
000346EA <AmiBlitz3.ab3@25289>    BNE.w JL_0_E198
000346F2 <AmiBlitz3.ab3@25290>   MOVE.w $8(A3),temp1
000346F8 <AmiBlitz3.ab3@25291>   MOVE.w proceduremode,D2
000346FC <AmiBlitz3.ab3@25292>    BNE.w JL_0_E176
00034702 <AmiBlitz3.ab3@25293>   MOVE.w globalvarpointer,-(A7)
0003470A <AmiBlitz3.ab3@25294>   MOVE.w $4(A3),globalvarpointer
00034710 <AmiBlitz3.ab3@25295>   ADDQ.w #4,globalvarpointer
00034714 <AmiBlitz3.ab3@25296>    BSR.w write_dim_code
0003471A <AmiBlitz3.ab3@25297>   MOVE.w (A7)+,globalvarpointer
0003471E <AmiBlitz3.ab3@25298> BRA.w JL_0_E1BA
00034724 <AmiBlitz3.ab3@25309>   MOVE.w globalvarpointer,-(A7)
0003472A <AmiBlitz3.ab3@25310>             MOVE.w proceduremode,-(a7)
00034730 <AmiBlitz3.ab3@25311>             CLR.w proceduremode
00034738 <AmiBlitz3.ab3@25312>   MOVE.w $4(A3),globalvarpointer
0003473E <AmiBlitz3.ab3@25313>   ADDQ.w #4,globalvarpointer
00034742 <AmiBlitz3.ab3@25314>    BSR.w write_dim_code
00034748 <AmiBlitz3.ab3@25315>    MOVE.w (a7)+,proceduremode
0003474E <AmiBlitz3.ab3@25316>   MOVE.w (A7)+,globalvarpointer
00034752 <AmiBlitz3.ab3@25317> BRA.w JL_0_E1BA
0003475A <AmiBlitz3.ab3@25320>   MOVE.w #$FFFF,temp1
0003475E <AmiBlitz3.ab3@25321>   MOVE.w listadd(PC),D1
00034762 <AmiBlitz3.ab3@25322>    BEQ.w JL_0_E1B6
0003476A <AmiBlitz3.ab3@25323>   MOVE.w #$4000,temp1
00034770 <AmiBlitz3.ab3@25324>   BSET #$0,$6(A3)
00034776 <AmiBlitz3.ab3@25327>         TST.w proceduremode
0003477A <AmiBlitz3.ab3@25328>        BNE 'l1
00034780 <AmiBlitz3.ab3@25329>        MOVE.w locvaroff,-(a7)
00034784 <AmiBlitz3.ab3@25332>   BSR.w write_dim_code
0003478A <AmiBlitz3.ab3@25333>         TST.w proceduremode
0003478E <AmiBlitz3.ab3@25334>         BNE JL_0_E1BA
00034794 <AmiBlitz3.ab3@25335>        MOVE.w (A7)+,locvaroff
0003479A <AmiBlitz3.ab3@25338>   JSR get1bytemain
0003479E <AmiBlitz3.ab3@25339>   CMP.w #$2C,D0
000347A2 <AmiBlitz3.ab3@25340>    BNE.w JL_0_E1CE
000347A8 <AmiBlitz3.ab3@25341>    JSR get1bytemain
000347AC <AmiBlitz3.ab3@25342> BRA.w JL_0_E0FC
000347AE <AmiBlitz3.ab3@25345> RTS
000347B6 <AmiBlitz3.ab3@25348>   MOVE.w #$FFFF,nonew                                      ;#-1,nonew org source
000347BC <AmiBlitz3.ab3@25349>   MOVE.w beginarr,D1
000347C2 <AmiBlitz3.ab3@25350>    JSR writeword
000347C4 <AmiBlitz3.ab3@25351>   MOVEQ.l #$00,D1
000347CA <AmiBlitz3.ab3@25352>    JSR writeword
000347CC <AmiBlitz3.ab3@25353>   MOVEQ.l #$04,D1
000347D4 <AmiBlitz3.ab3@25354>   BTST #$0,flagmask+1
000347D8 <AmiBlitz3.ab3@25355>    BNE.w write_dim_code__pointer
000347DC <AmiBlitz3.ab3@25356>   MOVE.w $8(A2),D1
000347E0 <AmiBlitz3.ab3@25359>   ADD.w listadd(PC),D1                                     ;size of one element.
000347E6 <AmiBlitz3.ab3@25360>   MOVE.w D1,listsize
000347EC <AmiBlitz3.ab3@25361>    JSR writeword
000347F2 <AmiBlitz3.ab3@25362>   CLR.w temp2                                              ;# dim's got
000347F4 <AmiBlitz3.ab3@25363>   MOVE.l A3,-(A7)
000347FA <AmiBlitz3.ab3@25366>   ADDQ.w #1,temp2
000347FC <AmiBlitz3.ab3@25367>   MOVEQ.l #$03,D2                                          ;get word
00034802 <AmiBlitz3.ab3@25368>   MOVE.w notshared,-(a7)
00034808 <AmiBlitz3.ab3@25369>    JSR eval
0003480E <AmiBlitz3.ab3@25370>   MOVE.w (a7)+,notshared
00034814 <AmiBlitz3.ab3@25371>   TST.b debugmode
00034818 <AmiBlitz3.ab3@25372>    BEQ.w write_dim_code__norerr0
0003481C <AmiBlitz3.ab3@25373>   MOVE.w #$C30F,D1
00034820 <AmiBlitz3.ab3@25379>       MOVE.w #$5281,d1
00034826 <AmiBlitz3.ab3@25380>       JSR writeword
0003482C <AmiBlitz3.ab3@25381>       MOVE.l #$4c010800,d1                                 ;dim >65536 fix
00034832 <AmiBlitz3.ab3@25382>       JSR writelong
00034838 <AmiBlitz3.ab3@25383>   MOVE.w proceduremode,D2
0003483C <AmiBlitz3.ab3@25384>    BEQ.w write_dim_code__global
00034842 <AmiBlitz3.ab3@25385>   SUBQ.w #4,locvaroff
0003484C <AmiBlitz3.ab3@25386>   MOVE.w locvaroff,putarr+2
00034850 <AmiBlitz3.ab3@25387> BRA.w write_dim_code__doit
00034856 <AmiBlitz3.ab3@25390> JMP syntaxerr
00034860 <AmiBlitz3.ab3@25393>   MOVE.w globalvarpointer,putarr+2
00034866 <AmiBlitz3.ab3@25394>   ADDQ.w #4,globalvarpointer
0003486C <AmiBlitz3.ab3@25397>   TST.b dimkeep
00034870 <AmiBlitz3.ab3@25398>            BEQ write_dim_code__doit_l1
00034872 <AmiBlitz3.ab3@25399>       MOVEQ #0,d1
00034878 <AmiBlitz3.ab3@25400>       MOVE.w putarr+2,d1
0003487E <AmiBlitz3.ab3@25401>       OR.l  #$222d0000,d1
00034884 <AmiBlitz3.ab3@25402>       MOVE.w proceduremode,D2
00034888 <AmiBlitz3.ab3@25403>       BEQ write_dim_code__doit_l2
0003488E <AmiBlitz3.ab3@25404>       TST.w notshared
00034892 <AmiBlitz3.ab3@25405>       BEQ write_dim_code__doit_l2
00034898 <AmiBlitz3.ab3@25406>       SUB.l #$00010000,d1
0003489E <AmiBlitz3.ab3@25409>   JSR writelong
000348A4 <AmiBlitz3.ab3@25412>   MOVE.l putarr,D1
000348AA <AmiBlitz3.ab3@25413>       TST.w notshared
000348AE <AmiBlitz3.ab3@25414>       BNE write_dim_code__doit_l1a
000348B4 <AmiBlitz3.ab3@25415>       JSR writelong
000348B8 <AmiBlitz3.ab3@25416> BRA write_dim_code__doit_l4
000348BE <AmiBlitz3.ab3@25419>   JSR pokela5d
000348C2 <AmiBlitz3.ab3@25422>   CMP.w #$2C,D0
000348C6 <AmiBlitz3.ab3@25423>    BEQ.w write_dim_code__loop
000348CA <AmiBlitz3.ab3@25424>   CMP.w #$29,D0
000348CE <AmiBlitz3.ab3@25425>    BNE.w JUMP_syntaxerr
000348D0 <AmiBlitz3.ab3@25426>   MOVEA.l (A7)+,A3
000348D6 <AmiBlitz3.ab3@25427>   MOVE.w temp1,D1
000348DA <AmiBlitz3.ab3@25428>    BMI.w write_dim_code__nocare
000348DE <AmiBlitz3.ab3@25432>   BTST #$E,D1
000348E2 <AmiBlitz3.ab3@25433>    BEQ.w write_dim_code__notl
000348EA <AmiBlitz3.ab3@25434>   CMPI.w #$1,temp2
000348EE <AmiBlitz3.ab3@25435>    BNE.w JUMP_redimerr
000348F2 <AmiBlitz3.ab3@25436> BRA.w write_dim_code__nocare
000348F8 <AmiBlitz3.ab3@25439> JMP redimerr
000348FE <AmiBlitz3.ab3@25442>   CMP.w temp2,D1
00034902 <AmiBlitz3.ab3@25443>    BNE.w JUMP_redimerr                                      ;range too long
00034908 <AmiBlitz3.ab3@25446>   LEA globalvarpointer,A0
0003490E <AmiBlitz3.ab3@25447>   MOVE.w proceduremode,D1
00034912 <AmiBlitz3.ab3@25448>   BEQ.w write_dim_code__gskip
00034918 <AmiBlitz3.ab3@25449>   LEA locvaroff,A0
0003491E <AmiBlitz3.ab3@25452>   MOVE.W  extraword,(A0)
00034922 <AmiBlitz3.ab3@25453>   BRA.W   write_dim_code__care
0003492A <AmiBlitz3.ab3@25456>   MOVE.w temp2,$8(A3)                                      ;set # dim's
00034930 <AmiBlitz3.ab3@25459>   LEA doarr,A0
00034936 <AmiBlitz3.ab3@25460>   MOVE.w $4(A3),$2(A0)
0003493E <AmiBlitz3.ab3@25461>   MOVE.w putarr+2,$6(A0)
00034940 <AmiBlitz3.ab3@25462>   MOVE.l (A0)+,D1
00034946 <AmiBlitz3.ab3@25463>    JSR writelong
00034948 <AmiBlitz3.ab3@25464>   MOVE.l (A0),D1
0003494E <AmiBlitz3.ab3@25465>    JSR writelong
00034954 <AmiBlitz3.ab3@25466>    TST.b dimkeep
00034958 <AmiBlitz3.ab3@25467>   BNE write_dim_code__care_l3
0003495C <AmiBlitz3.ab3@25470>   MOVE.w #$C400,D1
00034960 <AmiBlitz3.ab3@25471> BRA write_dim_code__care_l2
00034964 <AmiBlitz3.ab3@25474>   MOVE.w #$C405,d1
0003496A <AmiBlitz3.ab3@25477>   MOVE.w proceduremode,D2
0003496E <AmiBlitz3.ab3@25478>    BEQ.w write_dim_code__isg
00034974 <AmiBlitz3.ab3@25479>    TST.w notshared
00034978 <AmiBlitz3.ab3@25480>    BEQ write_dim_code__isg
0003497A <AmiBlitz3.ab3@25481>   ADDQ.w #1,D1
0003497E <AmiBlitz3.ab3@25484>   MOVE.w listadd(PC),D2
00034982 <AmiBlitz3.ab3@25485>    BEQ.w write_dim_code__isrg
00034984 <AmiBlitz3.ab3@25486>   MOVE.w D1,-(A7)
00034988 <AmiBlitz3.ab3@25487>   MOVE.w setles(PC),D1
0003498E <AmiBlitz3.ab3@25488>    JSR writeword
00034992 <AmiBlitz3.ab3@25489>   MOVE.w listsize(PC),D1
00034998 <AmiBlitz3.ab3@25490>    JSR writeword
0003499A <AmiBlitz3.ab3@25491>   MOVE.w (A7)+,D1
0003499C <AmiBlitz3.ab3@25492>   ADDQ.w #3,D1
000349A0 <AmiBlitz3.ab3@25495> BRA.w Atokejsr
000349A6 <AmiBlitz3.ab3@25502>     MOVE.l #$f23c4400,d1
000349AC <AmiBlitz3.ab3@25504>   MOVE.w regnum,d0
000349AE <AmiBlitz3.ab3@25505>   ASL.w #7,d0
000349B0 <AmiBlitz3.ab3@25506>   OR.w d0,d1
000349B6 <AmiBlitz3.ab3@25507>   JSR writelong
000349BC <AmiBlitz3.ab3@25513>     MOVE.l #$40490fd9,d1
000349C2 <AmiBlitz3.ab3@25515>   JSR writelong
000349C8 <AmiBlitz3.ab3@25516> JMP get1bytemain
000349CC <AmiBlitz3.ab3@25520> setles:   Dc.b $38,$3C,$00,$00                             ;MOVE.W  #$0000,D4
000349D0 <AmiBlitz3.ab3@25527> vbr:                Ds.l 1
000349D2 <AmiBlitz3.ab3@25528> cfetchmode:         Ds.w 1                               ;1=fetching a constant
000349D8 <AmiBlitz3.ab3@25530> constlibs           Dc.w $FDA7,$FCDF,$FD43               ;64935,64735,64835  org source
000349DC <AmiBlitz3.ab3@25534> constpcat:          Ds.l 1
000349E0 <AmiBlitz3.ab3@25535> constlibat:         Ds.l 1
000349E4 <AmiBlitz3.ab3@25536> constmaxpc:         Dc.l $400
000349E8 <AmiBlitz3.ab3@25538> stacksize:          Dc.l #DEFAULT_STACKSIZE              ;stackfuck org source
000349EC <AmiBlitz3.ab3@25539> currentlabeladdr:   Dc.l labelbase                       ;lastrescon org source
000349F0 <AmiBlitz3.ab3@25540> currentmacroaddr:   Dc.l macrobase                       ;lastresmac org source
000349F4 <AmiBlitz3.ab3@25541> lastrestype:        Dc.l newtype_string
000349F6 <AmiBlitz3.ab3@25542> rescnt:             Ds.w 1                               ;# resident
000349F8 <AmiBlitz3.ab3@25543> state_of_residents: Ds.w 1                               ;reschg org source ;flag for if res's have changed
000349FC <AmiBlitz3.ab3@25544> resat:              Dc.l residents_table                 ;??looks like not used anymore??
000349FE <AmiBlitz3.ab3@25545> linedone:           Ds.w 1
00034A14 <AmiBlitz3.ab3@25546> directbuffer:       Ds.w 11                              ;dirpcat  dc.w 0 org source
00034A18 <AmiBlitz3.ab3@25555>   Dc.l 0                                        ; bytetobyte
00034A1C <AmiBlitz3.ab3@25556>   Dc.l convert_byte_to_word                     ; bytetoword
00034A20 <AmiBlitz3.ab3@25557>   Dc.l convert_byte_to_long                     ; bytetolong
00034A24 <AmiBlitz3.ab3@25558>   Dc.l convert_byte_to_quick                    ; bytetoquick
00034A28 <AmiBlitz3.ab3@25559>   Dc.l convert_byte_to_float                    ; bytetofloat
00034A2C <AmiBlitz3.ab3@25560>   Dc.l convert_byte_to_long                     ; bytetolong
00034A30 <AmiBlitz3.ab3@25561>   Dc.l error_convert_types                      ; noconerr
00034A34 <AmiBlitz3.ab3@25564>   Dc.l convert_word_to_byte                     ; wordtobyte
00034A38 <AmiBlitz3.ab3@25565>   Dc.l 0                                        ; wordtoword
00034A3C <AmiBlitz3.ab3@25566>   Dc.l convert_word_to_long                     ; wordtolong
00034A40 <AmiBlitz3.ab3@25567>   Dc.l convert_word_to_quick                    ; wordtoquick
00034A44 <AmiBlitz3.ab3@25568>   Dc.l convert_word_to_float                    ; wordtofloat
00034A48 <AmiBlitz3.ab3@25569>   Dc.l convert_word_to_long                     ; wordtolong
00034A4C <AmiBlitz3.ab3@25570>   Dc.l error_convert_types                      ; noconerr
00034A50 <AmiBlitz3.ab3@25573>   Dc.l convert_long_to_byte                     ; longtobyte
00034A54 <AmiBlitz3.ab3@25574>   Dc.l convert_long_to_word                     ; longtoword
00034A58 <AmiBlitz3.ab3@25575>   Dc.l 0                                        ; longtolong
00034A5C <AmiBlitz3.ab3@25576>   Dc.l convert_long_to_quick                    ; longtoquick
00034A60 <AmiBlitz3.ab3@25577>   Dc.l convert_long_to_float                    ; longtofloat
00034A64 <AmiBlitz3.ab3@25578>   Dc.l 0                                        ; longtolong
00034A68 <AmiBlitz3.ab3@25579>   Dc.l error_convert_types                      ; noconerr
00034A6C <AmiBlitz3.ab3@25582>   Dc.l convert_quick_to_byte                    ; quicktobyte
00034A70 <AmiBlitz3.ab3@25583>   Dc.l convert_quick_to_word                    ; quicktoword
00034A74 <AmiBlitz3.ab3@25584>   Dc.l convert_quick_to_long                    ; quicktolong
00034A78 <AmiBlitz3.ab3@25585>   Dc.l 0                                        ; quicktoquick
00034A7C <AmiBlitz3.ab3@25586>   Dc.l convert_quick_to_float                   ; quicktofloat
00034A80 <AmiBlitz3.ab3@25587>   Dc.l convert_quick_to_long                    ; quicktolong
00034A84 <AmiBlitz3.ab3@25588>   Dc.l error_convert_types                      ; noconerr
00034A88 <AmiBlitz3.ab3@25591>   Dc.l convert_float_to_byte                    ; floattobyte
00034A8C <AmiBlitz3.ab3@25592>   Dc.l convert_float_to_word                    ; floattoword
00034A90 <AmiBlitz3.ab3@25593>   Dc.l convert_float_to_long                    ; floattolong
00034A94 <AmiBlitz3.ab3@25594>   Dc.l convert_float_to_quick                   ; floattoquick
00034A98 <AmiBlitz3.ab3@25595>   Dc.l 0                                        ; floattofloat
00034A9C <AmiBlitz3.ab3@25596>   Dc.l convert_float_to_long                    ; floattolong
00034AA0 <AmiBlitz3.ab3@25597>   Dc.l error_convert_types                      ; noconerr
00034AA4 <AmiBlitz3.ab3@25600>   Dc.l convert_long_to_byte                     ; longtobyte
00034AA8 <AmiBlitz3.ab3@25601>   Dc.l convert_long_to_word                     ; longtoword
00034AAC <AmiBlitz3.ab3@25602>   Dc.l 0                                        ; longtolong
00034AB0 <AmiBlitz3.ab3@25603>   Dc.l convert_long_to_quick                    ; longtoquick
00034AB4 <AmiBlitz3.ab3@25604>   Dc.l convert_long_to_float                    ; longtofloat
00034AB8 <AmiBlitz3.ab3@25605>   Dc.l 0                                        ; longtolong
00034ABC <AmiBlitz3.ab3@25606>   Dc.l error_convert_types                      ; noconerr
00034AC0 <AmiBlitz3.ab3@25609>   Dc.l error_convert_types                      ; noconerr
00034AC4 <AmiBlitz3.ab3@25610>   Dc.l error_convert_types                      ; noconerr
00034AC8 <AmiBlitz3.ab3@25611>   Dc.l string_to_long                           ; stringtolong
00034ACC <AmiBlitz3.ab3@25612>   Dc.l error_convert_types                      ; noconerr
00034AD0 <AmiBlitz3.ab3@25613>   Dc.l error_convert_types                      ; noconerr
00034AD4 <AmiBlitz3.ab3@25614>   Dc.l string_to_long                           ; stringtolong
00034AD8 <AmiBlitz3.ab3@25615>   Ds.l 1
00034ADA <AmiBlitz3.ab3@25621>   Dc.b $00,$2B                                  ;+ ; add
00034ADE <AmiBlitz3.ab3@25622>   Dc.l do_plus_byte                             ;doplusb
00034AE2 <AmiBlitz3.ab3@25623>   Dc.l do_plus_word                             ;doplusw
00034AE6 <AmiBlitz3.ab3@25624>   Dc.l do_plus_long                             ;doplusl
00034AEA <AmiBlitz3.ab3@25625>   Dc.l do_plus_long                             ;doplusl
00034AEE <AmiBlitz3.ab3@25626>   Dc.l do_plus_float                            ;doplusf
00034AF2 <AmiBlitz3.ab3@25627>   Ds.l 1
00034AF6 <AmiBlitz3.ab3@25628>   Dc.l add_strings                              ;addstrings
00034AF8 <AmiBlitz3.ab3@25629>   Dc.b $0B,$B8
00034AFA <AmiBlitz3.ab3@25631>   Dc.b $00,$2D                                  ;- ; sub
00034AFE <AmiBlitz3.ab3@25632>   Dc.l do_minus_byte                            ;dominusb
00034B02 <AmiBlitz3.ab3@25633>   Dc.l do_minus_word                            ;dominusw
00034B06 <AmiBlitz3.ab3@25634>   Dc.l do_minus_long                            ;dominusl
00034B0A <AmiBlitz3.ab3@25635>   Dc.l do_minus_long                            ;dominusl
00034B0E <AmiBlitz3.ab3@25636>   Dc.l do_minus_float                           ;dominusf
00034B16 <AmiBlitz3.ab3@25637>   Ds.l 2
00034B18 <AmiBlitz3.ab3@25638>   Dc.b $0B,$B8
00034B1A <AmiBlitz3.ab3@25640>   Dc.b $00,$2A                                  ;* ; mul
00034B1E <AmiBlitz3.ab3@25641>   Dc.l do_times_byte                            ;dotimesb
00034B22 <AmiBlitz3.ab3@25642>   Dc.l do_times_word                            ;dotimesw
00034B26 <AmiBlitz3.ab3@25643>   Dc.l do_times_long                            ;dotimesl
00034B2A <AmiBlitz3.ab3@25644>   Dc.l do_times_quick                           ;dotimesq
00034B2E <AmiBlitz3.ab3@25645>   Dc.l do_times_float                           ;dotimesf
00034B36 <AmiBlitz3.ab3@25646>   Ds.l 2
00034B38 <AmiBlitz3.ab3@25647>   Dc.b $0F,$A0
00034B3A <AmiBlitz3.ab3@25649>   Dc.b $00,$2F                                  ;/ ; div
00034B3E <AmiBlitz3.ab3@25650>   Dc.l do_Div_byte                              ;dodivb
00034B42 <AmiBlitz3.ab3@25651>   Dc.l do_Div_word                              ;dodivb
00034B46 <AmiBlitz3.ab3@25652>   Dc.l do_Div_long                              ;dodivl
00034B4A <AmiBlitz3.ab3@25653>   Dc.l do_Div_quick                             ;dodivq
00034B4E <AmiBlitz3.ab3@25654>   Dc.l do_Div_float                             ;dodivf
00034B56 <AmiBlitz3.ab3@25655>   Ds.l 2
00034B58 <AmiBlitz3.ab3@25656>   Dc.b $0F,$A0
00034B5A <AmiBlitz3.ab3@25658>   Dc.b $00,$26                                  ;& ; & int
00034B5E <AmiBlitz3.ab3@25659>   Dc.l do_AND_byte                              ;doandb
00034B62 <AmiBlitz3.ab3@25660>   Dc.l do_AND_word                              ;doandw
00034B66 <AmiBlitz3.ab3@25661>   Dc.l do_AND_long                              ;doandl
00034B6A <AmiBlitz3.ab3@25662>   Dc.l do_AND_long                              ;doandl
00034B76 <AmiBlitz3.ab3@25663>   Ds.l 3
00034B78 <AmiBlitz3.ab3@25664>   Dc.b $13,$88
00034B7A <AmiBlitz3.ab3@25666>   Dc.b $00,$7C                                  ;| ;or int ;
00034B7E <AmiBlitz3.ab3@25667>   Dc.l do_OR_byte                               ;doorb
00034B82 <AmiBlitz3.ab3@25668>   Dc.l do_OR_word                               ;doorw
00034B86 <AmiBlitz3.ab3@25669>   Dc.l do_OR_long                               ;doorl
00034B8A <AmiBlitz3.ab3@25670>   Dc.l do_OR_long                               ;doorl
00034B96 <AmiBlitz3.ab3@25671>   Ds.l 3
00034B98 <AmiBlitz3.ab3@25672>   Dc.b $13,$88
00034B9A <AmiBlitz3.ab3@25674>   Dc.b $80,$42                                  ; AND int  ;(opand-opabcd)/$1c+$8000+fnum
00034B9E <AmiBlitz3.ab3@25675>   Dc.l do_AND_byte                              ;doandb
00034BA2 <AmiBlitz3.ab3@25676>   Dc.l do_AND_word                              ;doandw
00034BA6 <AmiBlitz3.ab3@25677>   Dc.l do_AND_long                              ;doandl
00034BAA <AmiBlitz3.ab3@25678>   Dc.l do_AND_long                              ;doandl
00034BB6 <AmiBlitz3.ab3@25679>   Ds.l 3
00034BB8 <AmiBlitz3.ab3@25680>   Dc.b $03,$E8
00034BBA <AmiBlitz3.ab3@25682>   Dc.b $80,$8A                                  ; OR int   ;(opor-opabcd)/$1c+$8000+fnum
00034BBE <AmiBlitz3.ab3@25683>   Dc.l do_OR_byte                               ;doorb
00034BC2 <AmiBlitz3.ab3@25684>   Dc.l do_OR_word                               ;doorw
00034BC6 <AmiBlitz3.ab3@25685>   Dc.l do_OR_long                               ;doorl
00034BCA <AmiBlitz3.ab3@25686>   Dc.l do_OR_long                               ;doorl
00034BD6 <AmiBlitz3.ab3@25687>   Ds.l 3
00034BD8 <AmiBlitz3.ab3@25688>   Dc.b $03,$E8
00034BDA <AmiBlitz3.ab3@25690>   Dc.b $80,$73                                  ; EOR int  ;(opeor-opabcd)/$1c+$8000+fnum
00034BDE <AmiBlitz3.ab3@25691>   Dc.l do_EOR_byte                              ;doeorb
00034BE2 <AmiBlitz3.ab3@25692>   Dc.l do_EOR_word                              ;doeorw
00034BE6 <AmiBlitz3.ab3@25693>   Dc.l do_EOR_long                              ;doeorl
00034BEA <AmiBlitz3.ab3@25694>   Dc.l do_EOR_long                              ;doeorl
00034BF6 <AmiBlitz3.ab3@25695>   Ds.l 3
00034BF8 <AmiBlitz3.ab3@25696>   Dc.b $03,$E8
00034BFA <AmiBlitz3.ab3@25698>   Dc.b $80,$7C                                  ; LSL int  ;(oplsl-opabcd)/$1c+$8000+fnum
00034BFE <AmiBlitz3.ab3@25699>   Dc.l do_LSL                                   ;dolslb
00034C02 <AmiBlitz3.ab3@25700>   Dc.l do_LSL                                   ;dolslw
00034C06 <AmiBlitz3.ab3@25701>   Dc.l do_LSL                                   ;dolsll
00034C0A <AmiBlitz3.ab3@25702>   Dc.l do_LSL                                   ;dolsll
00034C16 <AmiBlitz3.ab3@25703>   Ds.l 3
00034C18 <AmiBlitz3.ab3@25704>   Dc.b $17,$70
00034C1A <AmiBlitz3.ab3@25706>   Dc.b $80,$44                                  ; ASL int  ;(opasl-opabcd)/$1c+$8000+fnum
00034C1E <AmiBlitz3.ab3@25707>   Dc.l do_LSL                                   ;dolslb
00034C22 <AmiBlitz3.ab3@25708>   Dc.l do_LSL                                   ;dolslw
00034C26 <AmiBlitz3.ab3@25709>   Dc.l do_LSL                                   ;dolsll
00034C2A <AmiBlitz3.ab3@25710>   Dc.l do_LSL                                   ;dolsll
00034C36 <AmiBlitz3.ab3@25711>   Ds.l 3
00034C38 <AmiBlitz3.ab3@25712>   Dc.b $17,$70
00034C3A <AmiBlitz3.ab3@25714>   Dc.b $80,$7D                                  ; LSR int  ;(oplsr-opabcd)/$1c+$8000+fnum
00034C3E <AmiBlitz3.ab3@25715>   Dc.l do_LSR                                   ;dolsrb
00034C42 <AmiBlitz3.ab3@25716>   Dc.l do_LSR                                   ;dolsrw
00034C46 <AmiBlitz3.ab3@25717>   Dc.l do_LSR                                   ;dolsrl
00034C4A <AmiBlitz3.ab3@25718>   Dc.l do_LSR                                   ;dolsrl
00034C56 <AmiBlitz3.ab3@25719>   Ds.l 3
00034C58 <AmiBlitz3.ab3@25720>   Dc.b $17,$70
00034C5A <AmiBlitz3.ab3@25722>   Dc.b $80,$45                                  ; ASR int  ;(opasr-opabcd)/$1c+$8000+fnum
00034C5E <AmiBlitz3.ab3@25723>   Dc.l do_ASR                                   ;doasrb
00034C62 <AmiBlitz3.ab3@25724>   Dc.l do_ASR                                   ;doasrw
00034C66 <AmiBlitz3.ab3@25725>   Dc.l do_ASR                                   ;doasrl
00034C6A <AmiBlitz3.ab3@25726>   Dc.l do_ASR                                   ;doasrl
00034C76 <AmiBlitz3.ab3@25727>   Ds.l 3
00034C78 <AmiBlitz3.ab3@25728>   Dc.b $17,$70
00034C7A <AmiBlitz3.ab3@25730>   Dc.b $80,$B9                                  ;mod       ;$8006+tnum
00034C7E <AmiBlitz3.ab3@25731>   Dc.l do_mod_byte                              ;domodb
00034C82 <AmiBlitz3.ab3@25732>   Dc.l do_mod_word                              ;domodw
00034C86 <AmiBlitz3.ab3@25733>   Dc.l do_mod_long                              ;domodl
00034C8A <AmiBlitz3.ab3@25734>   Dc.l do_mod_quick                             ;domodq
00034C8E <AmiBlitz3.ab3@25735>   Dc.l do_mod_float                             ;domodf
00034C96 <AmiBlitz3.ab3@25736>   Ds.l 2
00034C98 <AmiBlitz3.ab3@25737>   Dc.b $13,$88
00034C9A <AmiBlitz3.ab3@25740>   Dc.b $00,$5E                                  ;^
00034C9E <AmiBlitz3.ab3@25741>   Dc.l do_pow                                   ;dopow
00034CA2 <AmiBlitz3.ab3@25742>   Dc.l do_pow                                   ;dopow
00034CA6 <AmiBlitz3.ab3@25743>   Dc.l do_pow                                   ;dopow
00034CAA <AmiBlitz3.ab3@25744>   Dc.l do_pow                                   ;dopow
00034CAE <AmiBlitz3.ab3@25745>   Dc.l do_pow                                   ;dopow
00034CB6 <AmiBlitz3.ab3@25746>   Ds.l 2
00034CB8 <AmiBlitz3.ab3@25747>   Dc.b $1B,$58                                  ;7000
00034CBA <AmiBlitz3.ab3@25750>   Dc.b $00,$3D                                  ;=
00034CBE <AmiBlitz3.ab3@25751>   Dc.l do_equal_byte                            ;doeqb
00034CC2 <AmiBlitz3.ab3@25752>   Dc.l do_equal_word                            ;doeqw
00034CC6 <AmiBlitz3.ab3@25753>   Dc.l do_equal_long                            ;doeql
00034CCA <AmiBlitz3.ab3@25754>   Dc.l do_equal_long                            ;doeql
00034CCE <AmiBlitz3.ab3@25755>   Dc.l do_equal_float                           ;doeqf
00034CD2 <AmiBlitz3.ab3@25756>   Dc.l do_equal_long                            ;doeql
00034CD6 <AmiBlitz3.ab3@25757>   Dc.l do_equal_string                          ;doeqs
00034CD8 <AmiBlitz3.ab3@25758>   Dc.b $07,$D0                                  ;2000
00034CDA <AmiBlitz3.ab3@25761>   Dc.b $3C,$3E                                  ;<>
00034CDE <AmiBlitz3.ab3@25762>   Dc.l do_not_equal_byte                        ;doneb
00034CE2 <AmiBlitz3.ab3@25763>   Dc.l do_not_equal_word                        ;donew
00034CE6 <AmiBlitz3.ab3@25764>   Dc.l do_not_equal_long                        ;donel
00034CEA <AmiBlitz3.ab3@25765>   Dc.l do_not_equal_long                        ;donel
00034CEE <AmiBlitz3.ab3@25766>   Dc.l do_not_equal_float                       ;donef
00034CF2 <AmiBlitz3.ab3@25767>   Dc.l do_not_equal_long                        ;donel
00034CF6 <AmiBlitz3.ab3@25768>   Dc.l do_not_equal_string                      ;dones
00034CF8 <AmiBlitz3.ab3@25769>   Dc.b $07,$D0                                  ;2000
00034CFA <AmiBlitz3.ab3@25772>   Dc.b $00,$3C                                  ;<
00034CFE <AmiBlitz3.ab3@25773>   Dc.l do_littler_byte                          ;doltb
00034D02 <AmiBlitz3.ab3@25774>   Dc.l do_littler_word                          ;doltw
00034D06 <AmiBlitz3.ab3@25775>   Dc.l do_littler_long                          ;doltl
00034D0A <AmiBlitz3.ab3@25776>   Dc.l do_littler_long                          ;doltl
00034D0E <AmiBlitz3.ab3@25777>   Dc.l do_littler_float                         ;doltf
00034D12 <AmiBlitz3.ab3@25778>   Dc.l do_littler_long                          ;doltl
00034D16 <AmiBlitz3.ab3@25779>   Dc.l do_littler_string                        ;dolts
00034D18 <AmiBlitz3.ab3@25780>   Dc.b $07,$D0                                  ;2000
00034D1A <AmiBlitz3.ab3@25783>   Dc.b $3C,$3D                                  ;<=
00034D1E <AmiBlitz3.ab3@25784>   Dc.l do_littler_equal_byte                    ;doleb
00034D22 <AmiBlitz3.ab3@25785>   Dc.l do_littler_equal_word                    ;doleb
00034D26 <AmiBlitz3.ab3@25786>   Dc.l do_littler_equal_long                    ;dolel
00034D2A <AmiBlitz3.ab3@25787>   Dc.l do_littler_equal_long                    ;dolel
00034D2E <AmiBlitz3.ab3@25788>   Dc.l do_littler_equal_float                   ;dolef
00034D32 <AmiBlitz3.ab3@25789>   Dc.l do_littler_equal_long                    ;dolel
00034D36 <AmiBlitz3.ab3@25790>   Dc.l do_littler_equal_string                  ;doles
00034D38 <AmiBlitz3.ab3@25791>   Dc.b $07,$D0                                  ;2000
00034D3A <AmiBlitz3.ab3@25794>   Dc.b $00,$3E                                  ;>
00034D3E <AmiBlitz3.ab3@25795>   Dc.l do_greater_byte                          ;dogtb
00034D42 <AmiBlitz3.ab3@25796>   Dc.l do_greater_word                          ;dogtw
00034D46 <AmiBlitz3.ab3@25797>   Dc.l do_greater_long                          ;dogtl
00034D4A <AmiBlitz3.ab3@25798>   Dc.l do_greater_long                          ;dogtl
00034D4E <AmiBlitz3.ab3@25799>   Dc.l do_greater_float                         ;dogtf
00034D52 <AmiBlitz3.ab3@25800>   Dc.l do_greater_long                          ;dogtl
00034D56 <AmiBlitz3.ab3@25801>   Dc.l do_greater_string                        ;dogts
00034D58 <AmiBlitz3.ab3@25802>   Dc.b $07,$D0                                  ;2000
00034D5A <AmiBlitz3.ab3@25805>   Dc.b $3E,$3D                                  ;>=
00034D5E <AmiBlitz3.ab3@25806>   Dc.l do_greater_equal_byte                    ;dogeb
00034D62 <AmiBlitz3.ab3@25807>   Dc.l do_greater_equal_word                    ;dogew
00034D66 <AmiBlitz3.ab3@25808>   Dc.l do_greater_equal_long                    ;dogel
00034D6A <AmiBlitz3.ab3@25809>   Dc.l do_greater_equal_long                    ;dogel
00034D6E <AmiBlitz3.ab3@25810>   Dc.l do_greater_equal_float                   ;dogef
00034D72 <AmiBlitz3.ab3@25811>   Dc.l do_greater_equal_long                    ;dogel
00034D76 <AmiBlitz3.ab3@25812>   Dc.l do_greater_equal_string                  ;doges
00034D78 <AmiBlitz3.ab3@25813>   Dc.b $07,$D0                                  ;2000
00034D7A <AmiBlitz3.ab3@25815>   Dc.b $80,$CD                                  ;$8000+26+tnum
00034D7E <AmiBlitz3.ab3@25816>   Dc.l _BitTst
00034D82 <AmiBlitz3.ab3@25817>   Dc.l _BitTst
00034D86 <AmiBlitz3.ab3@25818>   Dc.l _BitTst
00034D8A <AmiBlitz3.ab3@25819>   Dc.l _BitTst
00034D96 <AmiBlitz3.ab3@25820>   Ds.l 3
00034D98 <AmiBlitz3.ab3@25821>   Dc.b $1F,$40                                  ;8000
00034D9A <AmiBlitz3.ab3@25823>   Dc.b $80,$CE                                  ;$8000+27+tnum
00034D9E <AmiBlitz3.ab3@25824>   Dc.l _BitSet
00034DA2 <AmiBlitz3.ab3@25825>   Dc.l _BitSet
00034DA6 <AmiBlitz3.ab3@25826>   Dc.l _BitSet
00034DAA <AmiBlitz3.ab3@25827>   Dc.l _BitSet
00034DB6 <AmiBlitz3.ab3@25828>   Ds.l 3
00034DB8 <AmiBlitz3.ab3@25829>   Dc.b $1F,$40                                  ;8000
00034DBA <AmiBlitz3.ab3@25831>   Dc.b $80,$CF                                  ;$8000+28+tnum
00034DBE <AmiBlitz3.ab3@25832>   Dc.l _BitClr
00034DC2 <AmiBlitz3.ab3@25833>   Dc.l _BitClr
00034DC6 <AmiBlitz3.ab3@25834>   Dc.l _BitClr
00034DCA <AmiBlitz3.ab3@25835>   Dc.l _BitClr
00034DD6 <AmiBlitz3.ab3@25836>   Ds.l 3
00034DD8 <AmiBlitz3.ab3@25837>   Dc.b $1F,$40                                  ;8000
00034DDA <AmiBlitz3.ab3@25839>   Dc.b $80,$D0                                  ;$8000+29+tnum
00034DDE <AmiBlitz3.ab3@25840>   Dc.l _BitChg
00034DE2 <AmiBlitz3.ab3@25841>   Dc.l _BitChg
00034DE6 <AmiBlitz3.ab3@25842>   Dc.l _BitChg
00034DEA <AmiBlitz3.ab3@25843>   Dc.l _BitChg
00034DF6 <AmiBlitz3.ab3@25844>   Ds.l 3
00034DF8 <AmiBlitz3.ab3@25845>   Dc.b $1F,$40                                  ;8000
00034DFA <AmiBlitz3.ab3@25847>   Dc.b $00,$00
00034DFE <AmiBlitz3.ab3@25852> modetable:   Dc.l typemode
00034E02 <AmiBlitz3.ab3@25855> newtypebase: Dc.l newtype_byte
00034E0A <AmiBlitz3.ab3@25858>   Dc.l newtype_word,$01                                    
00034E0C <AmiBlitz3.ab3@25859>   Dc.w $0001
00034E10 <AmiBlitz3.ab3@25860>   Dc.b 13,"b",0,0
00034E18 <AmiBlitz3.ab3@25863>   Dc.l newtype_long,$02
00034E1A <AmiBlitz3.ab3@25864>   Dc.w $0002
00034E1E <AmiBlitz3.ab3@25865>   Dc.b 13,"w",0,0
00034E26 <AmiBlitz3.ab3@25868>   Dc.l newtype_quick,$03                                   
00034E28 <AmiBlitz3.ab3@25869>   Dc.w $0004
00034E2C <AmiBlitz3.ab3@25870>   Dc.b 13,"l",0,0
00034E34 <AmiBlitz3.ab3@25873>   Dc.l newtype_float,$04                                   
00034E36 <AmiBlitz3.ab3@25874>   Dc.w $0004
00034E3A <AmiBlitz3.ab3@25875>   Dc.b 13,"q",0,0
00034E42 <AmiBlitz3.ab3@25879>   Dc.l newtype_double,$05                                  ;make problems on old residents
00034E44 <AmiBlitz3.ab3@25880>   Dc.w $0004
00034E48 <AmiBlitz3.ab3@25881>   Dc.b 13,"f",0,0
00034E50 <AmiBlitz3.ab3@25884>   Dc.l newtype_double,$06
00034E52 <AmiBlitz3.ab3@25885>   Dc.w $0004
00034E56 <AmiBlitz3.ab3@25886>   Dc.b 13,"a",0,0
00034E5E <AmiBlitz3.ab3@25889>   Dc.l newtype_string,$05                                  ;?? has to by $06 becous is number 6 not 5
00034E60 <AmiBlitz3.ab3@25890>   Dc.w $0008
00034E64 <AmiBlitz3.ab3@25891>   Dc.b 13,"d",0,0
00034E6C <AmiBlitz3.ab3@25895>   Dc.l $0000000,$07                                        ;stringtype
00034E6E <AmiBlitz3.ab3@25896>   Dc.w $0004
00034E72 <AmiBlitz3.ab3@25897>   Dc.b 13,"s",0,0
00034E7A <AmiBlitz3.ab3@25900>   Dc.l $00,$00
00034E7C <AmiBlitz3.ab3@25901>   Dc.w $0000
00034E80 <AmiBlitz3.ab3@25902>   Dc.b $01,$00,$00,$00
00034EE0 <AmiBlitz3.ab3@25905> incdir:               Ds.l 24                              ;dcb.b   96,0    org source
00034EE2 <AmiBlitz3.ab3@25909> dirmode:              Ds.w 1                               ;shows if directmode is on
00034EE6 <AmiBlitz3.ab3@25911>                       Ds.l 1                               ;int org source ;intuition!
00034EE8 <AmiBlitz3.ab3@25912> maxobject_pos:        Ds.w 1                               ;maxat org source ;max at
00034EEC <AmiBlitz3.ab3@25913> maxsat:               Ds.l 1                               ;data1 info pos
00034EEE <AmiBlitz3.ab3@25914> number_of_objects:    Ds.w 1                               ;nummaxs org source ;number of maximums
00034EF0 <AmiBlitz3.ab3@25916> maxsused:             Ds.w 1                               ;maximums used in prog
00034EF2 <AmiBlitz3.ab3@25920> dark:                 Ds.w 1                               ;dark compile?
00034EF4 <AmiBlitz3.ab3@25921> qlab:                 Ds.w 1                               ;quick lab allocate
00034EF8 <AmiBlitz3.ab3@25922> defaulttype:          Dc.l newtype_quick                   ;dc.l quicktype org source
00034EFA <AmiBlitz3.ab3@25927> anyerrs:              Dc.w -1                              ;Any Errors in compile ?
00034EFC <AmiBlitz3.ab3@25928> debugversion:         Ds.w 1                               ;makeexec org source ;make an executable file!
00034F00 <AmiBlitz3.ab3@25929> noinits:              Ds.l 1                               ;flag for if we have any init routines!
00034F04 <AmiBlitz3.ab3@25931> letstart:             Ds.l 1
00034F06 <AmiBlitz3.ab3@25932> dontwrite:            Ds.w 1                               ;nomemleft org source
00034F86 <AmiBlitz3.ab3@25933> lastgloballabel:      Ds.l 32                              ;lastbiglab ds.b 128 org source
00034F8A <AmiBlitz3.ab3@25935> locdatast:            Ds.l 1
00034F8E <AmiBlitz3.ab3@25936> firstpend:            Ds.l 1
00034F92 <AmiBlitz3.ab3@25940> data2at:              Ds.l 1
00034F96 <AmiBlitz3.ab3@25941> data2:                Ds.l 1
00034F9A <AmiBlitz3.ab3@25942> data1start:           Ds.l 1                               ;data1at org source
00034F9E <AmiBlitz3.ab3@25943> data1:                Ds.l 1                               ;pc for initialized data!
00034FA2 <AmiBlitz3.ab3@25944> destbufferstart:      Ds.l 1                               ;pcat org source
00034FA6 <AmiBlitz3.ab3@25948> destbufferend:        Ds.l 1                               ;libat org source
00034FAA <AmiBlitz3.ab3@25949> libend:               Ds.l 1                               ;lib org source
00034FAE <AmiBlitz3.ab3@25950> allat:                Ds.l 1                               ;highest allocmemd location for code
00034FB8 <AmiBlitz3.ab3@25951> dummyasm:             Dc.w 0,0,0,0,0
00034FBC <AmiBlitz3.ab3@25952>                       Dc.l 0
00034FBE <AmiBlitz3.ab3@25953>                       Dc.w 0
00034FC2 <AmiBlitz3.ab3@25957> buff1:                Ds.l 1                               ;buffer for text get
00034FC6 <AmiBlitz3.ab3@25958> buff2:                Ds.l 1                               ;ditto for dest
00034FC8 <AmiBlitz3.ab3@25959> constmode:            Ds.w 1                               ;0 for norm, <>0 for assembler
00034FCA <AmiBlitz3.ab3@25960> asmtype:              Ds.w 1                               ;0=contains no prog reference
00034FCC <AmiBlitz3.ab3@25961> extraword:            Ds.w 1                               ;the extension word for assembler
00034FCE <AmiBlitz3.ab3@25962> extraword2:           Ds.w 1                               ;ditto
00034FD0 <AmiBlitz3.ab3@25963> asmsize:              Ds.w 1
00034FD4 <AmiBlitz3.ab3@25964> asmbuff:              Ds.l 1
00034FD6 <AmiBlitz3.ab3@25965> asmlen:               Ds.w 1                               ;first (src) text len
00034FD8 <AmiBlitz3.ab3@25966> asmlen2:              Ds.w 1                               ;second (dest)
00034FDC <AmiBlitz3.ab3@25967> templabel:            Ds.l 1                               ;linked list of expressions to resolve
00034FDE <AmiBlitz3.ab3@25970> macnum:               Ds.w 1
00034FE2 <AmiBlitz3.ab3@25972>                       Dc.l 0                               ;address of next 0 in include fil
00034FE6 <AmiBlitz3.ab3@25973> titleat:              Ds.l 1                               ;5 longs for compile streaks
00034FF0 <AmiBlitz3.ab3@25974> progress_per_line:    Ds.w 5                               ;titleadd ds 5 org source ;5 adds for compile streaks
00034FF2 <AmiBlitz3.ab3@25975> connest:              Ds.w 1                               ;conditional nest level
00034FF6 <AmiBlitz3.ab3@25976> firstconst:           Ds.l 1                               ;first constant (#a)
00034FF8 <AmiBlitz3.ab3@25977> numarg:               Ds.w 1                               ;number of macro arguements
00034FFC <AmiBlitz3.ab3@25978> myoline:              Ds.l 1                               ;macro done yet?
00035000 <AmiBlitz3.ab3@25979> myline:               Ds.l 1                               ;pointer to some memory to create
00035004 <AmiBlitz3.ab3@25982>                       Ds.l 1
00035044 <AmiBlitz3.ab3@25983> concomstack:          Ds.l 16                              ;32 deep conditional compilation
00035048 <AmiBlitz3.ab3@25984> concomsp:             Dc.l concomstack                     ;stack pointer
0003504A <AmiBlitz3.ab3@25985> oldqflag:             Ds.w 1
0003504E <AmiBlitz3.ab3@25988>                       Ds.l 1
00035050 <AmiBlitz3.ab3@25990>                       Ds.w 1
00035054 <AmiBlitz3.ab3@25991> firstfor:             Ds.l 1                               ;first for
00035056 <AmiBlitz3.ab3@25992> stackpar:             Ds.w 1                               ;pushflag org source ;1 par to stack 0 normal
00035058 <AmiBlitz3.ab3@25993> sbgot:                Ds.w 1                               ;flag for string got 2
0003505A <AmiBlitz3.ab3@25994> convsize:             Ds.w 1                               ;usertype org source
0003505C <AmiBlitz3.ab3@25995> userp:                Ds.w 1
00035060 <AmiBlitz3.ab3@26000> ptr_userlibs_list:    Ds.l 1                               ;libslist org source
00035062 <AmiBlitz3.ab3@26001> a2offset:             Ds.w 1                               ;stackuse org source ;stack used when gathering lib parameters
00035064 <AmiBlitz3.ab3@26002> numreps:              Ds.w 1                               ;number of repeats in a repeatable
00035068 <AmiBlitz3.ab3@26004> locloc:               Ds.l 1
0003506A <AmiBlitz3.ab3@26005> locchar:              Ds.w 1
000350EA <AmiBlitz3.ab3@26006> stbuff:               Ds.l 32                              ;was 8    ;six string varoffs
000350EC <AmiBlitz3.ab3@26007> commode:              Ds.w 1                               ;in comma mode...
000350F0 <AmiBlitz3.ab3@26008> lastoffset_org:       Ds.l 1                               ;lastoffset org source ;last offset in calcvar!
000350F4 <AmiBlitz3.ab3@26009> linenumat:            Dc.l $FFFFFFFF                       ;linecounter ;dc -1 org source ;line being processed
000350F8 <AmiBlitz3.ab3@26010> compilelinecounter:   Dc.l $FFFFFFFF                       ;menuret dc -1 org source ;menu return code
000350FA <AmiBlitz3.ab3@26012>                       Ds.w 1                               ;opt reset offset
000351FA <AmiBlitz3.ab3@26014>                       Ds.l 64                              ;Ds.b vcodelen org source ;code used to generate
000352FA <AmiBlitz3.ab3@26016>                       Ds.l 64                              ;Ds.b vcodelen org source ;above for let.....
000352FC <AmiBlitz3.ab3@26017> varcodelen:           Ds.w 1                               ;and length
000352FE <AmiBlitz3.ab3@26019>                       Ds.w 1
00035304 <AmiBlitz3.ab3@26020> oldvcodelen:          Ds.w 3                               ;old varcodelen
00035308 <AmiBlitz3.ab3@26024> tempvm:               Ds.l 1                               ;memlib org source ;address of memory library
0003530A <AmiBlitz3.ab3@26025> memlibstat:           Ds.w 1                               ;status of memory library during
0003530C <AmiBlitz3.ab3@26028>                       Dc.w 0
0003530E <AmiBlitz3.ab3@26030>                       Dc.w 0
00035310 <AmiBlitz3.ab3@26032> varmode:              Ds.w 1                               ;0 a5 pointer to global
00035314 <AmiBlitz3.ab3@26034> currentfunction:      Ds.l 1                               ;thisproc org source
00035318 <AmiBlitz3.ab3@26035> firstproc:            Ds.l 1                               ;firstproc org source ;this procedure being 'done'
0003531A <AmiBlitz3.ab3@26036> 
0003531C <AmiBlitz3.ab3@26038> skipcode:             Ds.w 1                               ;nocompile ;comflag org source ;0 if no compile
00035320 <AmiBlitz3.ab3@26039> passstack:            Ds.l 1
00035324 <AmiBlitz3.ab3@26040> zero:                 Ds.l 1                               ;ZERO!
00035326 <AmiBlitz3.ab3@26041> ininclude:            Ds.w 1                               ;numincs org source ;number of include files
0003532A <AmiBlitz3.ab3@26043> xinclude_base:        Ds.l 1                               ;firstxinc org source ;first exclusive include.
0003532E <AmiBlitz3.ab3@26044> constantbase:         Ds.l 1                               ;firstinc org source ;first include
00035330 <AmiBlitz3.ab3@26045> lasta6:               Dc.w $FFFF                           ;-1 org source
00035332 <AmiBlitz3.ab3@26046> instringon:           Ds.w 1                               ;quoteflag org source
00035336 <AmiBlitz3.ab3@26047> ptr_macrobuffer_begin:Ds.l 1                               ;macrobuff org source ;pointer to macro collection buffer ;begin
0003533A <AmiBlitz3.ab3@26048> ptr_macrobuffer_end:  Ds.l 1                               ;macrobufff org source ;end of above ;end of
0003533E <AmiBlitz3.ab3@26049> macrobase:            Ds.l 1                               ;firstmacro org source ;linked list of macro's ;macrolist
00035342 <AmiBlitz3.ab3@26050> endop:                Ds.l 1                               ;end of program pc - before finishups!
00035346 <AmiBlitz3.ab3@26051> labelbase:            Ds.l 1                               ;firstlabel org source ;first lib struct
0003534A <AmiBlitz3.ab3@26052> end_of_tokenlist:     Ds.l 1                               ;lasttoken org source
0003534C <AmiBlitz3.ab3@26053> numstatic:            Ds.w 1                               ;number of static structs
00035350 <AmiBlitz3.ab3@26054> staticdata:           Ds.l 1                               ;data1 val for statics
00035354 <AmiBlitz3.ab3@26055> libpointer:           Ds.l 1                               ;firstlib org source ;first lib struct
00035356 <AmiBlitz3.ab3@26056> sbasegot:             Ds.w 1                               ;string base got?
0003535A <AmiBlitz3.ab3@26057> litdata1:             Ds.l 1
0003535E <AmiBlitz3.ab3@26061> objlen:               Ds.l 1
00035362 <AmiBlitz3.ab3@26062> hunkoffsetcounter:    Ds.l 1                               ;numoffs org source
00035366 <AmiBlitz3.ab3@26063> hunkoffsetbase:       Ds.l 1                               ;firstoff org source ;pointer to linked list
00035368 <AmiBlitz3.ab3@26065> flagmask:             Ds.w 1                               ;mask for flag of variable when
0003536A <AmiBlitz3.ab3@26067> notshared:            Ds.w 1                               ;added org source ;flag for seeing if variable was added!
0003536C <AmiBlitz3.ab3@26068> nonew:                Ds.w 1                               ;1 to inhibit new variable creation
00035370 <AmiBlitz3.ab3@26069> temp1:                Ds.l 1
00035374 <AmiBlitz3.ab3@26070> temp2:                Ds.l 1
00035378 <AmiBlitz3.ab3@26072> ptr_parameterstore:   Ds.l 1                               ;namebuff ds.b 128 org source
0003537C <AmiBlitz3.ab3@26073> fib_DirEntryType:     Ds.l 1                               ;namebuff+4 org source
000353F0 <AmiBlitz3.ab3@26074> fib_FileName:         Ds.l 29                              ;namebuff+8 org source
000353F4 <AmiBlitz3.ab3@26075> fib_Size:             Ds.l 1                               ;namebuff+124 org source
00035474 <AmiBlitz3.ab3@26077> namebuff2:            Ds.b 128
0003547C <AmiBlitz3.ab3@26078>                       Ds.b 8                               ;for fileinfoblock
000354BC <AmiBlitz3.ab3@26081> optstuff:             Ds.b 64                              ;temp opt make buffer
000354BE <AmiBlitz3.ab3@26098>   Dc.b $00,$01                                             ; 1 byte schreiben ;one byte stuff...
000354C2 <AmiBlitz3.ab3@26099>   Dc.l xtra_versionnumber                                  ; vers org source
000354C6 <AmiBlitz3.ab3@26100>   Dc.l create_iconfile                                     ; create icon for executable
000354CA <AmiBlitz3.ab3@26101>   Ds.l 1
000354CC <AmiBlitz3.ab3@26103>   Dc.b $00,$02                                             ; 2 bytes schreiben  ;two byte stuff...
000354D0 <AmiBlitz3.ab3@26106>   Dc.l set_use_debugger
000354D4 <AmiBlitz3.ab3@26107>   Dc.l AL_0_11010                                          ;+obsolet: debugger
000354D8 <AmiBlitz3.ab3@26108>   Dc.l AL_0_1103C                                          ;+obsolet: long arrays
000354DC <AmiBlitz3.ab3@26109>   Dc.l AL_0_11068                                          ;+obsolet: expand macros
000354E0 <AmiBlitz3.ab3@26110>   Dc.l AL_0_11094                                          ;+obsolet: quoted macros
000354E4 <AmiBlitz3.ab3@26111>   Dc.l set_make_smallestcode
000354E8 <AmiBlitz3.ab3@26112>   Dc.l set_link_debuginfo
000354EC <AmiBlitz3.ab3@26113>   Dc.l set_autorun
000354F0 <AmiBlitz3.ab3@26114>   Dc.l set_interruptcheck
000354F4 <AmiBlitz3.ab3@26115>   Dc.l set_assemblercheck
000354F8 <AmiBlitz3.ab3@26117>   Dc.l set_overflowcheck
000354FC <AmiBlitz3.ab3@26118>   Dc.l default_obsolete                                    ;+obsolet: ohne inhalt
00035500 <AmiBlitz3.ab3@26119>   Dc.l default_interruptcheck                              ;+obsolet: interruptcheck vorgabe
00035504 <AmiBlitz3.ab3@26120>   Dc.l default_overflowcheck                               ;+obsolet: overflow vorgabe
00035508 <AmiBlitz3.ab3@26123>   Ds.l 1
0003550A <AmiBlitz3.ab3@26125>   Dc.b $00,$04                                             ; 4 bytes schreiben..  ;four byte stuff...
0003550E <AmiBlitz3.ab3@26132>   Dc.l objectbuffer
00035512 <AmiBlitz3.ab3@26133>   Dc.l libsbuffer
00035516 <AmiBlitz3.ab3@26134>   Dc.l systembuffer
0003551A <AmiBlitz3.ab3@26135>   Dc.l databuffer
0003551E <AmiBlitz3.ab3@26136>   Dc.l macrobuffer_size
00035522 <AmiBlitz3.ab3@26137>   Dc.l stringbuffer
00035526 <AmiBlitz3.ab3@26140>   Ds.l 1
00035528 <AmiBlitz3.ab3@26144>   Dc.b $02,$20                                             ;dc 68*8; 544 bytes schreiben.
00035530 <AmiBlitz3.ab3@26145>   Dc.l residents_table,0
00035532 <AmiBlitz3.ab3@26149>   Dc.b $01,$80                                             ;dc 192*2; 384 bytes schreiben
0003553A <AmiBlitz3.ab3@26150>   Dc.l exepath,0                                           ; exepath und exefilename jeweils 192 bytes
0003553C <AmiBlitz3.ab3@26151>   Ds.w 1
00035638 <AmiBlitz3.ab3@26155>   Ds.l 63
00035734 <AmiBlitz3.ab3@26156>   Ds.l 63
00035830 <AmiBlitz3.ab3@26157>   Ds.l 63
00035912 <AmiBlitz3.ab3@26158>   Ds.w 113
00035914 <AmiBlitz3.ab3@26161> comsettings_message:  Ds.w 1                               ;allchg org source
00035916 <AmiBlitz3.ab3@26162> xtra_versionnumber:   Ds.w 1                               ;vers org source
0003591C <AmiBlitz3.ab3@26166>   CLR.b exefilename
0003591E <AmiBlitz3.ab3@26167>   TST.l d0
00035922 <AmiBlitz3.ab3@26168>   BNE read_xtrafile__l10
00035924 <AmiBlitz3.ab3@26169> RTS
0003592A <AmiBlitz3.ab3@26172>   JSR free_residents                                       ;jsr freeres2 org source
00035930 <AmiBlitz3.ab3@26173> 
00035936 <AmiBlitz3.ab3@26174>   LEA ptr_xtradata,A2
00035938 <AmiBlitz3.ab3@26175>   MOVEQ.l #$00,D4
0003593A <AmiBlitz3.ab3@26178>     MOVE.w (A2)+,D4                                        ; anzahl bytes zum lesen
0003593E <AmiBlitz3.ab3@26179>     BEQ.b read_xtrafile__done
00035940 <AmiBlitz3.ab3@26182>     MOVE.l (A2)+,D2
00035944 <AmiBlitz3.ab3@26183>   BEQ.b read_xtrafile__loop
00035946 <AmiBlitz3.ab3@26185>   MOVE.l D4,D3
00035948 <AmiBlitz3.ab3@26186>   MOVE.l D7,D1
0003594C <AmiBlitz3.ab3@26187>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
0003594E <AmiBlitz3.ab3@26188>   TST.l D0
00035952 <AmiBlitz3.ab3@26189>   BNE.b read_xtrafile__loop2
00035956 <AmiBlitz3.ab3@26190> BRA.w read_xtrafile__done2
0003595C <AmiBlitz3.ab3@26193>   TST.b xtra_versionnumber
00035960 <AmiBlitz3.ab3@26194>    BNE.b read_xtrafile__nover0
00035968 <AmiBlitz3.ab3@26195>   MOVE.w #$0080,set_autorun                                ;auto run on
00035972 <AmiBlitz3.ab3@26196>   MOVE.w default_interruptcheck,set_interruptcheck         ;interupt checking on
00035978 <AmiBlitz3.ab3@26197>   CLR.w set_assemblercheck                                 ;assembler checking off
00035982 <AmiBlitz3.ab3@26198>   MOVE.w default_overflowcheck,set_overflowcheck           ;overflow chex
00035986 <AmiBlitz3.ab3@26199> BRA.b read_xtrafile__ver0
00035988 <AmiBlitz3.ab3@26202>   MOVE.l D7,D1                                             ;load cli arg!
0003598E <AmiBlitz3.ab3@26203>   MOVE.l #str_cliarguments,D2
00035994 <AmiBlitz3.ab3@26204>   MOVE.l #116,D3                                           ; vorher 128 , jetzt 8 weniger fuer die Versionsdaten
00035998 <AmiBlitz3.ab3@26205>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
0003599E <AmiBlitz3.ab3@26206>   MOVE.l #str_cliarguments,A0
000359A4 <AmiBlitz3.ab3@26207>   ADDA.l #115,A0
000359AA <AmiBlitz3.ab3@26208>   MOVE.l #0,(a0) ; terminate it!
000359AC <AmiBlitz3.ab3@26210>   MOVE.l D7,D1                                             ; I know, I know. Honitos started this horrible thing, see below...
000359B2 <AmiBlitz3.ab3@26211>   MOVE.l #stacksize,D2
000359B8 <AmiBlitz3.ab3@26212>   MOVE.l #4,D3
000359BC <AmiBlitz3.ab3@26213>   JSR _Read(A6)
000359C6 <AmiBlitz3.ab3@26214>   CMP.l ##MIN_STACKSIZE,stacksize
000359CA <AmiBlitz3.ab3@26215>   BGE 'stackok
000359D4 <AmiBlitz3.ab3@26216>   MOVE.l ##MIN_STACKSIZE,stacksize
000359D6 <AmiBlitz3.ab3@26219>   MOVE.l D7,D1
000359DC <AmiBlitz3.ab3@26220>   MOVE.l #versioninformation,D2
000359E2 <AmiBlitz3.ab3@26221>   MOVE.l #4,D3
000359E6 <AmiBlitz3.ab3@26222>   JSR _Read(A6)
000359E8 <AmiBlitz3.ab3@26224>   MOVE.l D7,D1
000359EE <AmiBlitz3.ab3@26225>   MOVE.l #number_of_builds,D2
000359F4 <AmiBlitz3.ab3@26226>   MOVE.l #4,D3
000359F8 <AmiBlitz3.ab3@26227>   JSR _Read(A6)
000359FE <AmiBlitz3.ab3@26233> 
00035A04 <AmiBlitz3.ab3@26234>   MOVE.l A7,errstack
00035A0E <AmiBlitz3.ab3@26235>   MOVE.l #read_xtrafile__done2,errcont
00035A16 <AmiBlitz3.ab3@26236>   MOVE.w #$FFFF,ezerr
00035A1C <AmiBlitz3.ab3@26239>     MOVE.l #temp1,D2                                   ;LOAD maxobjectsvalues
00035A1E <AmiBlitz3.ab3@26240>     MOVEQ.l #$04,D3
00035A20 <AmiBlitz3.ab3@26241>     MOVE.l D7,D1
00035A24 <AmiBlitz3.ab3@26242>     JSR _Read(A6)
00035A26 <AmiBlitz3.ab3@26243>     TST.l D0
00035A2A <AmiBlitz3.ab3@26244>     BEQ.b read_xtrafile__done2
00035A30 <AmiBlitz3.ab3@26245>     MOVE.w temp1,D1
00035A32 <AmiBlitz3.ab3@26246>     TST.w d1                                               ;new
00035A36 <AmiBlitz3.ab3@26247>     BEQ read_xtrafile__done2                                         ;new
00035A3C <AmiBlitz3.ab3@26248>      JSR AJL_0_6F1A
00035A42 <AmiBlitz3.ab3@26250>     CMP.l #0,a1
00035A46 <AmiBlitz3.ab3@26251>     BEQ read_xtrafile__dloop
00035A4A <AmiBlitz3.ab3@26252>     MOVE.l $12(A1),D0
00035A52 <AmiBlitz3.ab3@26253>     MOVE.w temp1+2,-$4(A1,D0.L)
00035A56 <AmiBlitz3.ab3@26254> BRA.b read_xtrafile__dloop
00035A5A <AmiBlitz3.ab3@26260>   LEA residents_table(PC),A0
00035A5C <AmiBlitz3.ab3@26261>   MOVEQ.l #$07,D0
00035A60 <AmiBlitz3.ab3@26264>     CLR.l $40(A0)
00035A64 <AmiBlitz3.ab3@26265>     LEA ResidentEntryStep(A0),A0   ; $44
00035A68 <AmiBlitz3.ab3@26266>   DBF D0,read_xtrafile__loop3
00035A6C <AmiBlitz3.ab3@26268>   MOVEM.l D7/A6,-(A7)
00035A72 <AmiBlitz3.ab3@26269>   JSR init_buffers
00035A78 <AmiBlitz3.ab3@26270>   JSR reloadresident
00035A7C <AmiBlitz3.ab3@26271>   MOVEM.l (A7)+,D7/A6
00035A7E <AmiBlitz3.ab3@26272> RTS
00035A86 <AmiBlitz3.ab3@26276>   MOVE.b #$1,xtra_versionnumber                            ;.xtra version number...
00035A8C <AmiBlitz3.ab3@26285>   LEA ptr_xtradata,A2
00035A8E <AmiBlitz3.ab3@26286>   MOVEQ.l #$00,D4
00035A90 <AmiBlitz3.ab3@26290>   MOVE.w (A2)+,D4                                          ; anzahl bytes zu schreiben
00035A94 <AmiBlitz3.ab3@26291>   BEQ.b write_xtrafile__done
00035A96 <AmiBlitz3.ab3@26294>    MOVE.l (A2)+,D2
00035A9A <AmiBlitz3.ab3@26295>    BEQ.b write_xtrafile__loop
00035A9C <AmiBlitz3.ab3@26297>    MOVE.l D4,D3
00035A9E <AmiBlitz3.ab3@26298>    MOVE.l D7,D1                                            ; schreiben der daten in ptr_xtradata
00035AA2 <AmiBlitz3.ab3@26299>    JSR _Write(A6)                                          ; d1: file, d2: buffer, d3:length
00035AA6 <AmiBlitz3.ab3@26300> BRA.b write_xtrafile__loop2
00035AA8 <AmiBlitz3.ab3@26303>   MOVE.l D7,D1
00035AAE <AmiBlitz3.ab3@26304>   MOVE.l #str_cliarguments,D2
00035AB4 <AmiBlitz3.ab3@26305>   MOVE.l #116,D3
00035AB8 <AmiBlitz3.ab3@26306>   JSR _Write(A6)                                           ; hier werden 116 bytes an cli_arguments geschrieben !!
00035ABA <AmiBlitz3.ab3@26308>   MOVE.l D7,D1
00035AC0 <AmiBlitz3.ab3@26309>   MOVE.l #stacksize,D2
00035AC6 <AmiBlitz3.ab3@26310>   MOVE.l #4,D3
00035ACA <AmiBlitz3.ab3@26311>   JSR _Write(A6)
00035ACC <AmiBlitz3.ab3@26313>   MOVE.l D7,D1
00035AD2 <AmiBlitz3.ab3@26314>   MOVE.l #versioninformation,D2
00035AD8 <AmiBlitz3.ab3@26315>   MOVE.l #4,D3
00035ADC <AmiBlitz3.ab3@26316>   JSR _Write(A6)
00035ADE <AmiBlitz3.ab3@26318>   MOVE.l D7,D1
00035AE4 <AmiBlitz3.ab3@26319>   MOVE.l #number_of_builds,D2
00035AEA <AmiBlitz3.ab3@26320>   MOVE.l #4,D3
00035AEE <AmiBlitz3.ab3@26321>   JSR _Write(A6)
00035AF4 <AmiBlitz3.ab3@26327>   LEA libpointer,A2
00035AF6 <AmiBlitz3.ab3@26330>     MOVE.l (A2),D0
00035AFA <AmiBlitz3.ab3@26331>     BEQ.w write_xtrafile__done2
00035AFC <AmiBlitz3.ab3@26332>     MOVEA.l D0,A2
00035B00 <AmiBlitz3.ab3@26333>     MOVE.l $12(A2),D4
00035B04 <AmiBlitz3.ab3@26334>     TST.w -$2(A2,D4.L)
00035B08 <AmiBlitz3.ab3@26335>     BEQ.w write_xtrafile__loop3
00035B0C <AmiBlitz3.ab3@26337>     LEA $4(A2),A0
00035B0E <AmiBlitz3.ab3@26338>     MOVE.l A0,D2
00035B10 <AmiBlitz3.ab3@26339>     MOVEQ.l #$02,D3
00035B12 <AmiBlitz3.ab3@26340>     MOVE.l D7,D1                                           ; schreiben der Libnum mit 2 bytes
00035B16 <AmiBlitz3.ab3@26341>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
00035B1A <AmiBlitz3.ab3@26343>     LEA -$4(A2,D4.L),A0
00035B1C <AmiBlitz3.ab3@26344>     MOVE.l A0,D2
00035B1E <AmiBlitz3.ab3@26345>     MOVEQ.l #$02,D3
00035B20 <AmiBlitz3.ab3@26346>     MOVE.l D7,D1                                           ; schreiben der Max Objects mit 2 bytes
00035B24 <AmiBlitz3.ab3@26347>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
00035B28 <AmiBlitz3.ab3@26348> BRA.w write_xtrafile__loop3
00035B2E <AmiBlitz3.ab3@26353>   LEA XTRAEndPadBytes,A2 ; get the start address off the 4 fill/pad/termination bytes
00035B30 <AmiBlitz3.ab3@26354>   MOVE.l A2,D2           ; move the address to d2
00035B36 <AmiBlitz3.ab3@26355>   MOVE.l #4,D3           ; we only need 4 bytes to save
00035B38 <AmiBlitz3.ab3@26356>   MOVE.l D7,D1           ; we set the file handle
00035B3C <AmiBlitz3.ab3@26357>   JSR _Write(A6)         ; and we write it.
00035B3E <AmiBlitz3.ab3@26359> RTS
00035B44 <AmiBlitz3.ab3@26364>   LEA optssave,A0                      ; backup address
00035B4A <AmiBlitz3.ab3@26365>   LEA ptr_xtradata,A1                  ; source address
00035B4C <AmiBlitz3.ab3@26368>   MOVE.w (A1)+,D0                                          ;length of data move
00035B50 <AmiBlitz3.ab3@26369>   BEQ.b 'backupdone
00035B52 <AmiBlitz3.ab3@26370>   SUBQ.w #1,D0
00035B54 <AmiBlitz3.ab3@26373>     MOVE.l (A1)+,D1
00035B58 <AmiBlitz3.ab3@26374>     BEQ.b 'backuploop
00035B5A <AmiBlitz3.ab3@26375>     MOVEA.l D1,A2
00035B5C <AmiBlitz3.ab3@26376>     MOVE.w D0,D1
00035B5E <AmiBlitz3.ab3@26379>       MOVE.b (A2)+,(A0)+
00035B62 <AmiBlitz3.ab3@26380>   DBF D1,'backuploop3
00035B66 <AmiBlitz3.ab3@26382> BRA.w 'backuploop2
00035B6C <AmiBlitz3.ab3@26386>   LEA bufferlist,A1
00035B6E <AmiBlitz3.ab3@26389>     MOVE.l (A1)+,D2
00035B72 <AmiBlitz3.ab3@26390>     BEQ.b 'loop4done
00035B74 <AmiBlitz3.ab3@26392>     MOVEA.l D2,A0
00035B76 <AmiBlitz3.ab3@26393>     MOVE.l (A0),D2
00035B78 <AmiBlitz3.ab3@26394>     ADDQ.w #8,A0
00035B7E <AmiBlitz3.ab3@26395>     JSR makelong
00035B82 <AmiBlitz3.ab3@26396> BRA.b 'loop4
00035B88 <AmiBlitz3.ab3@26399>   CLR.w state_of_residents                                 ;resident change
00035B8E <AmiBlitz3.ab3@26400>   CLR.w comsettings_message                                ;alloc change
00035B94 <AmiBlitz3.ab3@26401>   CLR.w maxobject_pos
00035B96 <AmiBlitz3.ab3@26402> RTS   ; new tomsmart1
00035B9C <AmiBlitz3.ab3@26406>   LEA optssave,A0
00035BA2 <AmiBlitz3.ab3@26407>   LEA ptr_xtradata,A1
00035BA4 <AmiBlitz3.ab3@26410>   MOVE.w (A1)+,D0
00035BA8 <AmiBlitz3.ab3@26411>   BEQ.b 'restoredone
00035BAA <AmiBlitz3.ab3@26412>   SUBQ.w #1,D0
00035BAC <AmiBlitz3.ab3@26415>     MOVE.l (A1)+,D1
00035BB0 <AmiBlitz3.ab3@26416>     BEQ.b 'restoreloop1
00035BB2 <AmiBlitz3.ab3@26417>     MOVEA.l D1,A2
00035BB4 <AmiBlitz3.ab3@26418>     MOVE.w D0,D1
00035BB6 <AmiBlitz3.ab3@26421>       MOVE.b (A0)+,(A2)+
00035BBA <AmiBlitz3.ab3@26422>   DBF D1,'restoreloop3
00035BBE <AmiBlitz3.ab3@26424> BRA.b 'restoreloop2
00035BC0 <AmiBlitz3.ab3@26427> RTS
00035BC6 <AmiBlitz3.ab3@26431>   JSR free_residents                    ; first free the allready loaded residents
00035BCC <AmiBlitz3.ab3@26432>   JSR Clear_Residents_table             ; second clear the complete resident table
00035BCE <AmiBlitz3.ab3@26433> RTS
00035BD6 <AmiBlitz3.ab3@26437>   MOVE.w #$FFFF,state_of_residents
00035BDC <AmiBlitz3.ab3@26438>   MOVE.w state_of_residents,D0
00035BE2 <AmiBlitz3.ab3@26439>   JSR reloadresident
00035BE4 <AmiBlitz3.ab3@26440> RTS
00035BE6 <AmiBlitz3.ab3@26445>   MOVE.l d0,a1
00035BEC <AmiBlitz3.ab3@26446>   MOVEA.l libpointer,A2
00035BF0 <AmiBlitz3.ab3@26449>     MOVE.l $12(A2),D0
00035BF4 <AmiBlitz3.ab3@26450>     TST.w -$2(A2,D0.L)
00035BF8 <AmiBlitz3.ab3@26451>      BEQ.w JL_0_102AAa
00035BFA <AmiBlitz3.ab3@26452>     SUBQ.w #1,D1
00035BFE <AmiBlitz3.ab3@26453>      BPL.w JL_0_102AAa
00035C02 <AmiBlitz3.ab3@26454>     MOVEA.l -$1A(A2,D0.L),A3
00035C04 <AmiBlitz3.ab3@26455>     ADDA.l A2,A3
00035C06 <AmiBlitz3.ab3@26458>       MOVE.b (A3)+,(A1)+
00035C0A <AmiBlitz3.ab3@26459>     BNE.w JL_0_10294a
00035C0C <AmiBlitz3.ab3@26461>     CLR.b -(A1)
00035C10 <AmiBlitz3.ab3@26462>     MOVE.w -$4(A2,D0.L),D0
00035C16 <AmiBlitz3.ab3@26463>     AND.l #$ffff,d0
00035C18 <AmiBlitz3.ab3@26464> RTS
00035C1A <AmiBlitz3.ab3@26467>     MOVEA.l (A2),A2
00035C1E <AmiBlitz3.ab3@26468> BRA.w JL_0_1027Ca
00035C2E <AmiBlitz3.ab3@26473> str_maxobjects_name:   Dc.b "              ",0 : Even
00035C3E <AmiBlitz3.ab3@26474> str_maxobjects_name2:  Dc.b "              ",0 : Even
00035C42 <AmiBlitz3.ab3@26475> objectbuffer:          Dc.l #DEFAULT_OBJECTBUFFERSIZE  ; replaced with a constant tomsmart1
00035C46 <AmiBlitz3.ab3@26476>                        Dc.l $00000000
00035C52 <AmiBlitz3.ab3@26477> str_objectbuffer:      Dc.b "16384",0,0,0,0,0,0,0      ; string max 12 columns
00035C56 <AmiBlitz3.ab3@26479> libsbuffer:            Dc.l #DEFAULT_LIBSBUFFERSIZE    ; replaced with a constant tomsmart1
00035C5A <AmiBlitz3.ab3@26480>                        Dc.l $00000000
00035C66 <AmiBlitz3.ab3@26481> str_libsbuffer:        Dc.b "32768",0,0,0,0,0,0,0      ;was "16384"; string max 12 columns
00035C6A <AmiBlitz3.ab3@26483> systembuffer:          Dc.l #DEFAULT_SYSTEMBUFFERSIZE  ; system buffer  ; replaced with a constant tomsmart1
00035C6E <AmiBlitz3.ab3@26484>                        Dc.l $00000000
00035C7A <AmiBlitz3.ab3@26485> str_systembuffer:      Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
00035C7E <AmiBlitz3.ab3@26487> databuffer:            Dc.l #DEFAULT_DATABUFFERSIZE    ; data buffer   ; replaced with a constant tomsmart1
00035C82 <AmiBlitz3.ab3@26488>                        Dc.l $00000000
00035C8E <AmiBlitz3.ab3@26489> str_databuffer:        Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
00035C92 <AmiBlitz3.ab3@26491> macrobuffer_size:      Dc.l #DEFAULT_MACROBUFFERSIZE   ; macro buffer ; was $00002000 ; replaced with a constant tomsmart1
00035C96 <AmiBlitz3.ab3@26492>                        Dc.l $00000000
00035CA2 <AmiBlitz3.ab3@26493> str_macrobuffer:       Dc.b "40000",0,0,0,0,0,0,0      ; string max 12 columns
00035CA6 <AmiBlitz3.ab3@26495> stringbuffer:          Dc.l #DEFAULT_STRINGBUFFERSIZE  ; string buffer ; replaced with a constant tomsmart1
00035CAA <AmiBlitz3.ab3@26496>                        Dc.l $00000000
00035CB6 <AmiBlitz3.ab3@26497> str_stringbuffer:      Dc.b "10240",0,0,0,0,0,0,0      ; string max 12 columns
00035CB8 <AmiBlitz3.ab3@26499> maxobjects_value:      Dc.w $0064
00035CBC <AmiBlitz3.ab3@26500>                        Dc.l $00000000
00035CC8 <AmiBlitz3.ab3@26501> str_maxobjects_value:  Dc.b "100",0,0,0,0,0,0,0,0,0    ; string max 12 columns
00035CCA <AmiBlitz3.ab3@26503> maxobjects_value2:     Dc.w $0014
00035CCC <AmiBlitz3.ab3@26504>                        Dc.w $0000
00035CD8 <AmiBlitz3.ab3@26506> str_maxobjects_value2: Dc.b "20",0,0,0,0,0,0,0,0,0,0   ; string max 12 columns
00035CD9 <AmiBlitz3.ab3@26510> set_create_iconfile:   Dc.b $00
00035CDC <AmiBlitz3.ab3@26511> create_iconfile:       Dc.b $80,$01,$01                    ;create icon
00035CDE <AmiBlitz3.ab3@26512>                        Dc.b $00,$01
00035CDF <AmiBlitz3.ab3@26514> set_use_debugger:      Dc.b $00                            ; Flags.w
00035CE2 <AmiBlitz3.ab3@26515> use_debugger:          Dc.b $80,$01,$01                    ; Activation.w
00035CE4 <AmiBlitz3.ab3@26516>                        Dc.b $00,$01                        ; GadgetType.w
00035CE8 <AmiBlitz3.ab3@26517> AL_0_11010:            Dc.b $00,$80,$01,$01                ; flags, activation
00035CEC <AmiBlitz3.ab3@26518> AL_0_1103C:            Dc.b $00,$80,$01,$01                ; flags, activation
00035CF0 <AmiBlitz3.ab3@26519> AL_0_11068:            Dc.b $00,$80,$01,$01                ; flags, activation
00035CF2 <AmiBlitz3.ab3@26520> AL_0_11094:            Ds.w 1
00035CF3 <AmiBlitz3.ab3@26522> set_make_smallestcode: Ds.b 1
00035CF6 <AmiBlitz3.ab3@26523> make_smallestcode:     Dc.b $00,$01,$01                    ;make smallest
00035CF8 <AmiBlitz3.ab3@26524>                        Dc.b $00,$01
00035CF9 <AmiBlitz3.ab3@26525> set_link_debuginfo:    Ds.b 1
00035CFC <AmiBlitz3.ab3@26526> link_debuginfo:        Dc.b $00,$01,$01                    ;create debuginfo
00035CFE <AmiBlitz3.ab3@26527>                        Dc.b $00,$01
00035F1E <AmiBlitz3.ab3@26532>   Ds.l 136         ;resident files STEP $44 piece 8
00035F9E <AmiBlitz3.ab3@26537> str_calcexpression:        Ds.l 32
00035FA2 <AmiBlitz3.ab3@26538> destbufferend_backup_calc: Ds.l 1
00035FAC <AmiBlitz3.ab3@26543>   MOVE.l destbufferend,destbufferend_backup_calc
00035FB2 <AmiBlitz3.ab3@26544> 
00035FB8 <AmiBlitz3.ab3@26545>   MOVE.l A7,errstack
00035FC2 <AmiBlitz3.ab3@26546>   MOVE.l #Calc_Error_Exit,errcont
00035FEC <AmiBlitz3.ab3@26553>   !basic         ; get the flage for the conversion form the editor
00036030 <AmiBlitz3.ab3@26554>   !ComData_GetW{comWord_CalculatorButtonBinFlag,D0} : MOVE.w d0,CalculatorButtonBinFlag
00036074 <AmiBlitz3.ab3@26555>   !ComData_GetW{comWord_CalculatorButtonDecFlag,D0} : MOVE.w d0,CalculatorButtonDecFlag
00036092 <AmiBlitz3.ab3@26556>   !asm
00036098 <AmiBlitz3.ab3@26558>   LEA str_calcexpression,A0
0003609E <AmiBlitz3.ab3@26567>   JSR setcvars
000360A4 <AmiBlitz3.ab3@26568>   JSR setsvars
000360AA <AmiBlitz3.ab3@26569>   CLR.w connest
000360B0 <AmiBlitz3.ab3@26570>   LEA str_calcexpression,A5
000360B6 <AmiBlitz3.ab3@26571>   JSR AJL_0_BF6E
000360BC <AmiBlitz3.ab3@26572>   LEA str_calcexpression,A0
000360BE <AmiBlitz3.ab3@26573>   TST.l D3
000360C2 <AmiBlitz3.ab3@26574>    BPL.w JL_0_11AE8
000360C6 <AmiBlitz3.ab3@26575>   MOVE.b #$2D,(A0)+
000360C8 <AmiBlitz3.ab3@26576>   NEG.l D3
000360D0 <AmiBlitz3.ab3@26579>   CMPI.w #$80,CalculatorButtonDecFlag
000360D4 <AmiBlitz3.ab3@26580>    BEQ.w JL_0_11B74
000360D6 <AmiBlitz3.ab3@26581>   MOVEQ.l #$00,D1
000360DE <AmiBlitz3.ab3@26582>   CMPI.w #$80,CalculatorButtonBinFlag
000360E2 <AmiBlitz3.ab3@26583>    BNE.w JL_0_11B36
000360E4 <AmiBlitz3.ab3@26584>   MOVEQ.l #$1F,D0
000360E8 <AmiBlitz3.ab3@26585>   MOVE.b #$25,(A0)+
000360EA <AmiBlitz3.ab3@26588>       LSL.l #1,D3
000360EE <AmiBlitz3.ab3@26589>        BCC.w JL_0_11B18
000360F2 <AmiBlitz3.ab3@26590>       MOVE.b #"1",(A0)+
000360F4 <AmiBlitz3.ab3@26591>       MOVEQ.l #-$01,D1
000360F8 <AmiBlitz3.ab3@26592>   BRA.w JL_0_11B22
000360FA <AmiBlitz3.ab3@26595>       TST.w D1
000360FE <AmiBlitz3.ab3@26596>       BEQ.w JL_0_11B22
00036102 <AmiBlitz3.ab3@26597>       MOVE.b #"0",(A0)+
00036106 <AmiBlitz3.ab3@26600>  DBF D0,JL_0_11B08
00036108 <AmiBlitz3.ab3@26603>   TST.w D1
0003610C <AmiBlitz3.ab3@26604>   BNE.w JL_0_11B30
00036110 <AmiBlitz3.ab3@26605>   MOVE.b #"0",(A0)+
00036112 <AmiBlitz3.ab3@26608>   CLR.b (A0)
00036116 <AmiBlitz3.ab3@26609> BRA.w JL_0_11B7C
00036118 <AmiBlitz3.ab3@26612>   MOVEQ.l #$07,D0
0003611C <AmiBlitz3.ab3@26613>   MOVE.b #$24,(A0)+
0003611E <AmiBlitz3.ab3@26616>     MOVE.l D3,D2
00036120 <AmiBlitz3.ab3@26617>     SWAP D2
00036122 <AmiBlitz3.ab3@26618>     LSR.w #8,D2
00036124 <AmiBlitz3.ab3@26619>     LSR.w #4,D2
00036128 <AmiBlitz3.ab3@26620>     ADDI.w #$30,D2
0003612C <AmiBlitz3.ab3@26621>     CMP.w #$3A,D2
00036130 <AmiBlitz3.ab3@26622>      BCS.w JL_0_11B52
00036132 <AmiBlitz3.ab3@26623>     ADDQ.w #7,D2
00036136 <AmiBlitz3.ab3@26626>     CMP.w #$30,D2
0003613A <AmiBlitz3.ab3@26627>     BEQ.w JL_0_11B62
0003613C <AmiBlitz3.ab3@26628>     MOVE.b D2,(A0)+
0003613E <AmiBlitz3.ab3@26629>     MOVEQ.l #-$01,D1
00036142 <AmiBlitz3.ab3@26630>   BRA.w JL_0_11B6A
00036144 <AmiBlitz3.ab3@26633>     TST.w D1
00036148 <AmiBlitz3.ab3@26634>      BEQ.w JL_0_11B6A
0003614A <AmiBlitz3.ab3@26635>     MOVE.b D2,(A0)+
0003614C <AmiBlitz3.ab3@26638>     LSL.l #4,D3
00036150 <AmiBlitz3.ab3@26639>  DBF D0,JL_0_11B3C
00036154 <AmiBlitz3.ab3@26641> BRA.w JL_0_11B26
00036156 <AmiBlitz3.ab3@26644>   MOVE.l D3,D2
0003615C <AmiBlitz3.ab3@26645>   JSR makelong
00036166 <AmiBlitz3.ab3@26652>   MOVE.l destbufferend_backup_calc,destbufferend
00036168 <AmiBlitz3.ab3@26654> RTS                         ; added tomsmart 2012 03 07 vor Calculator in PED
00036267 <AmiBlitz3.ab3@26658> str_cliarguments: Ds.b 255   ; a command line can acutally be 255 characters long
00036268 <AmiBlitz3.ab3@26660> Even
0003626A <AmiBlitz3.ab3@26674>     MOVE.b (a5)+,d0
0003626E <AmiBlitz3.ab3@26675>     BEQ 'l2
00036272 <AmiBlitz3.ab3@26676>     CMP.b #$80,d0
00036276 <AmiBlitz3.ab3@26677>     BNE 'l1
00036278 <AmiBlitz3.ab3@26678>     MOVE.b (a5)+,d0
0003627C <AmiBlitz3.ab3@26679>     BEQ 'l2
00036280 <AmiBlitz3.ab3@26680>     CMP.b #$02,d0
00036284 <AmiBlitz3.ab3@26681>   BNE 'l1
00036288 <AmiBlitz3.ab3@26684>     CMP.b #$20,(a5)+
0003628C <AmiBlitz3.ab3@26685>   BEQ 'l3
0003628E <AmiBlitz3.ab3@26686>   SUBQ.l #1,a5
00036290 <AmiBlitz3.ab3@26687>   TST.b (a5)
00036294 <AmiBlitz3.ab3@26688>   BEQ 'l2
00036298 <AmiBlitz3.ab3@26689>   CMP.w #$8008,(a5)
0003629C <AmiBlitz3.ab3@26690>   BEQ 'l4
000362A0 <AmiBlitz3.ab3@26691>   CMP.w #$8009,(a5)
000362A4 <AmiBlitz3.ab3@26692>   BEQ 'l4
000362A8 <AmiBlitz3.ab3@26693> BRA 'l1
000362AA <AmiBlitz3.ab3@26696>   ADDQ.l #2,a5
000362B0 <AmiBlitz3.ab3@26697>   JSR skiprest
000362B2 <AmiBlitz3.ab3@26698> RTS
000362B8 <AmiBlitz3.ab3@26701>   JSR nextline
000362BC <AmiBlitz3.ab3@26702>   BNE 'l1
000362BE <AmiBlitz3.ab3@26703> RTS
000362E8 <AmiBlitz3.ab3@26707>   !basic
000362F2 <AmiBlitz3.ab3@26708>   DateFormat 1
00036300 <AmiBlitz3.ab3@26709>   i.l=SystemDate
00036326 <AmiBlitz3.ab3@26710>   a$=Date$ (i)
000363A4 <AmiBlitz3.ab3@26711>   a$=Replace$(a$,"/",".")
000363AA <AmiBlitz3.ab3@26712>   GetD0 &a$
000363AC <AmiBlitz3.ab3@26713>   MOVEQ #8,d2
000363AE <AmiBlitz3.ab3@26714>   MOVE.l d0,a0
000363B0 <AmiBlitz3.ab3@26717>     MOVE.b (a0)+,d1
000363B6 <AmiBlitz3.ab3@26718>     JSR pokedata1b
000363BA <AmiBlitz3.ab3@26719>  DBF d2,'l1
000363BC <AmiBlitz3.ab3@26721>   MOVEQ #0,d0
000363BE <AmiBlitz3.ab3@26722>   MOVE.b (a0)+,d0
000363DC <AmiBlitz3.ab3@26723>   !asm
000363E2 <AmiBlitz3.ab3@26724>   ADD.l #9,d2
000363E8 <AmiBlitz3.ab3@26725>   ADD.l #9,a5
000363EA <AmiBlitz3.ab3@26726> RTS
00036414 <AmiBlitz3.ab3@26730>   !basic
0003641E <AmiBlitz3.ab3@26731>   DateFormat 0
0003642C <AmiBlitz3.ab3@26732>   i.l=SystemDate
00036452 <AmiBlitz3.ab3@26733>   a$=Date$ (i)
000364D0 <AmiBlitz3.ab3@26734>   a$=Replace$(a$,"/",".")
000364D6 <AmiBlitz3.ab3@26735>   GetD0 &a$
000364D8 <AmiBlitz3.ab3@26736>   MOVEQ #8,d2
000364DA <AmiBlitz3.ab3@26737>   MOVE.l d0,a0
000364DC <AmiBlitz3.ab3@26740>     MOVE.b (a0)+,d1
000364E2 <AmiBlitz3.ab3@26741>     JSR pokedata1b
000364E6 <AmiBlitz3.ab3@26742>  DBF d2,'l1
000364E8 <AmiBlitz3.ab3@26744>   MOVEQ #0,d0
000364EA <AmiBlitz3.ab3@26745>   MOVE.b (a0)+,d0
00036508 <AmiBlitz3.ab3@26746>   !asm
0003650E <AmiBlitz3.ab3@26747>   ADD.l #9,d2
00036514 <AmiBlitz3.ab3@26748>   ADD.l #13,a5
00036516 <AmiBlitz3.ab3@26749> RTS
00036540 <AmiBlitz3.ab3@26753>   !basic
0003654A <AmiBlitz3.ab3@26754>   DateFormat 1
00036558 <AmiBlitz3.ab3@26755>   i.l = SystemDate
0003657E <AmiBlitz3.ab3@26756>   a$ = Date$ (i)
000365FC <AmiBlitz3.ab3@26757>   a$ = Replace$(a$,"/",".")
00036602 <AmiBlitz3.ab3@26758>   GetD0 &a$
00036604 <AmiBlitz3.ab3@26759>   MOVEQ #8,d2
00036606 <AmiBlitz3.ab3@26760>   MOVE.l d0,a0
00036608 <AmiBlitz3.ab3@26763>     MOVE.b (a0)+,d1
0003660E <AmiBlitz3.ab3@26764>     JSR writebyte
00036612 <AmiBlitz3.ab3@26765>  DBF d2,'l1
00036614 <AmiBlitz3.ab3@26767>   MOVEQ #0,d0
00036616 <AmiBlitz3.ab3@26768>   MOVE.b (a0)+,d0
00036634 <AmiBlitz3.ab3@26769>   !asm
0003663A <AmiBlitz3.ab3@26770>   ADD.l #9,a5
0003663C <AmiBlitz3.ab3@26771> RTS
00036666 <AmiBlitz3.ab3@26775>   !basic
00036670 <AmiBlitz3.ab3@26776>   DateFormat 0
0003667E <AmiBlitz3.ab3@26777>   i.l=SystemDate
000366A4 <AmiBlitz3.ab3@26778>   a$=Date$ (i)
00036722 <AmiBlitz3.ab3@26779>   a$=Replace$(a$,"/",".")
00036728 <AmiBlitz3.ab3@26780>   GetD0 &a$
0003672A <AmiBlitz3.ab3@26781>   MOVEQ #8,d2
0003672C <AmiBlitz3.ab3@26782>   MOVE.l d0,a0
0003672E <AmiBlitz3.ab3@26785>     MOVE.b (a0)+,d1
00036734 <AmiBlitz3.ab3@26786>     JSR writebyte
00036738 <AmiBlitz3.ab3@26787>  DBF d2,'l1
0003673A <AmiBlitz3.ab3@26789>   MOVEQ #0,d0
0003673C <AmiBlitz3.ab3@26790>   MOVE.b (a0)+,d0
0003675A <AmiBlitz3.ab3@26791>   !asm
00036760 <AmiBlitz3.ab3@26792>   ADD.l #13,a5
00036762 <AmiBlitz3.ab3@26793> RTS
00036764 <AmiBlitz3.ab3@26797>   MOVE.l d2,-(a7)                                          ; D2 -> stack
00036766 <AmiBlitz3.ab3@26798>   MOVE.l a5,d0
00036790 <AmiBlitz3.ab3@26799>   !basic
00036794 <AmiBlitz3.ab3@26800>   _myD0.l = PutD0
0003679E <AmiBlitz3.ab3@26801>   If _myD0
000367E4 <AmiBlitz3.ab3@26802>     verstring$ = Left$(Peek.s(_myD0),9+3)
00036836 <AmiBlitz3.ab3@26803>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
0003683C <AmiBlitz3.ab3@26804>   Else
00036876 <AmiBlitz3.ab3@26805>     error{"INTERNAL: Invalid pointer in version_string!"}
00036886 <AmiBlitz3.ab3@26810>   actual_version.l = Peek.l(?versioninformation)
00036896 <AmiBlitz3.ab3@26811>   actual_build.l   = Peek.l(?number_of_builds)
000368BA <AmiBlitz3.ab3@26813>   Format "00"
000368F0 <AmiBlitz3.ab3@26814>   Select verstring$
00036914 <AmiBlitz3.ab3@26816>     Case "VER_MAJOR"
00036950 <AmiBlitz3.ab3@26817>      put_versionstr$ = Str$(actual_version LSR 24)
0003697A <AmiBlitz3.ab3@26819>     Case "VER_MINOR"
000369BE <AmiBlitz3.ab3@26820>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
000369E8 <AmiBlitz3.ab3@26822>     Case "VER_PATCH"
00036A2C <AmiBlitz3.ab3@26823>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
00036A56 <AmiBlitz3.ab3@26825>     Case "VER_BUILD"
00036A7A <AmiBlitz3.ab3@26826>      Format ""
00036AAE <AmiBlitz3.ab3@26827>      put_versionstr$ = Str$(actual_build)
00036AB4 <AmiBlitz3.ab3@26829>     Default
00036ADC <AmiBlitz3.ab3@26830>      put_versionstr$ = "{unknown compilerconstant}"
00036AEA <AmiBlitz3.ab3@26833>   End Select
00036B0E <AmiBlitz3.ab3@26834>   Format ""
00036B1E <AmiBlitz3.ab3@26836>   GetD0 FLen(put_versionstr$)                              ; laenge zielstring -> Stack
00036B20 <AmiBlitz3.ab3@26837>   MOVE.l d0,d2
00036B22 <AmiBlitz3.ab3@26838>   MOVE.l d2,-(a7)
00036B26 <AmiBlitz3.ab3@26839>   SUB #1,d2
00036B2C <AmiBlitz3.ab3@26841>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
00036B2E <AmiBlitz3.ab3@26842>   MOVE.l d0,a0
00036B30 <AmiBlitz3.ab3@26845>     MOVE.b (a0)+,d1
00036B36 <AmiBlitz3.ab3@26846>     JSR pokedata1b
00036B3A <AmiBlitz3.ab3@26847>  DBF d2,'l1
00036B3C <AmiBlitz3.ab3@26849>   MOVEQ #0,d0
00036B5A <AmiBlitz3.ab3@26850>   !asm
00036B5C <AmiBlitz3.ab3@26851>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
00036B5E <AmiBlitz3.ab3@26852>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
00036B60 <AmiBlitz3.ab3@26853>   ADD.l d0,d2
00036B66 <AmiBlitz3.ab3@26854>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
00036B68 <AmiBlitz3.ab3@26855>   MOVEQ #0,d0
00036B6A <AmiBlitz3.ab3@26856> RTS
00036B6C <AmiBlitz3.ab3@26860>   MOVE.l a5,d0
00036B96 <AmiBlitz3.ab3@26861>   !basic
00036B9A <AmiBlitz3.ab3@26862>   _myD0.l = PutD0
00036BA4 <AmiBlitz3.ab3@26863>   If _myD0
00036BEA <AmiBlitz3.ab3@26864>     verstring$ = Left$(Peek.s(_myD0),9+3)
00036C3C <AmiBlitz3.ab3@26865>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00036C42 <AmiBlitz3.ab3@26866>   Else
00036C7C <AmiBlitz3.ab3@26867>     error{"INTERNAL: Invalid pointer in version_string_dc!"}
00036C8C <AmiBlitz3.ab3@26872>   actual_version.l = Peek.l(?versioninformation)
00036C9C <AmiBlitz3.ab3@26873>   actual_build.l   = Peek.l(?number_of_builds)
00036CC0 <AmiBlitz3.ab3@26875>   Format ""
00036CF6 <AmiBlitz3.ab3@26876>   Select verstring$
00036D1A <AmiBlitz3.ab3@26878>     Case "VER_MAJOR"
00036D56 <AmiBlitz3.ab3@26879>      put_versionstr$ = Str$(actual_version LSR 24)
00036D80 <AmiBlitz3.ab3@26881>     Case "VER_MINOR"
00036DC4 <AmiBlitz3.ab3@26882>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
00036DEE <AmiBlitz3.ab3@26884>     Case "VER_PATCH"
00036E32 <AmiBlitz3.ab3@26885>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
00036E5C <AmiBlitz3.ab3@26887>     Case "VER_BUILD"
00036E80 <AmiBlitz3.ab3@26888>      Format ""
00036EB4 <AmiBlitz3.ab3@26889>      put_versionstr$ = Str$(actual_build)
00036EBA <AmiBlitz3.ab3@26891>     Default
00036EE2 <AmiBlitz3.ab3@26892>      put_versionstr$ = "{unknown compilerconstant}"
00036EF0 <AmiBlitz3.ab3@26894>   End Select
00036F14 <AmiBlitz3.ab3@26895>   Format ""
00036F2A <AmiBlitz3.ab3@26897>   GetD0 FLen(put_versionstr$)-1
00036F2C <AmiBlitz3.ab3@26898>   MOVE.l d0,d2
00036F32 <AmiBlitz3.ab3@26900>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
00036F34 <AmiBlitz3.ab3@26901>   MOVE.l d0,a0
00036F36 <AmiBlitz3.ab3@26904>     MOVE.b (a0)+,d1
00036F3C <AmiBlitz3.ab3@26905>     JSR writebyte
00036F40 <AmiBlitz3.ab3@26906>  DBF d2,'l1
00036F42 <AmiBlitz3.ab3@26908>   MOVEQ #0,d0
00036F44 <AmiBlitz3.ab3@26909>   MOVE.b -(a0),d0                                          ; letztes Zeichen in D0
00036F62 <AmiBlitz3.ab3@26910>   !asm
00036F68 <AmiBlitz3.ab3@26911>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
00036F6A <AmiBlitz3.ab3@26912> RTS
00036F6C <AmiBlitz3.ab3@27014>  MOVE.l a5,-(a7)
00036F98 <AmiBlitz3.ab3@27015>  !fget
00036F9C <AmiBlitz3.ab3@27016>  CMP.w #".",d0
00036FA0 <AmiBlitz3.ab3@27017>  BNE 'skip
00036FA4 <AmiBlitz3.ab3@27018>  MOVEM.l a2/d2,-(a7)
00036FAA <AmiBlitz3.ab3@27019>  LEA newtypebase,a2
00036FB0 <AmiBlitz3.ab3@27020>  JSR getparameter2
00036FB4 <AmiBlitz3.ab3@27021>  BEQ.w JUMP_syntaxerr
00036FBA <AmiBlitz3.ab3@27022>  JSR findtype
00036FBE <AmiBlitz3.ab3@27023>  BNE.w JUMP_notypeerr
00036FC4 <AmiBlitz3.ab3@27024>  MOVE.l a2,typetocast
00036FC8 <AmiBlitz3.ab3@27025>  MOVEM.l (a7)+,a2/d2
00036FCC <AmiBlitz3.ab3@27026>  CMP.w #")",d0
00036FD0 <AmiBlitz3.ab3@27027>  BNE JUMP_errorbracketmiss
00036FD2 <AmiBlitz3.ab3@27028>  ADDQ.l #4,a7
00036FFE <AmiBlitz3.ab3@27029>  !fget
00037004 <AmiBlitz3.ab3@27030>  JMP nocast
00037006 <AmiBlitz3.ab3@27032> 'skip MOVE.l (a7)+,a5
0003700C <AmiBlitz3.ab3@27033>  JMP JL_0_A410
00037012 <AmiBlitz3.ab3@27035> JUMP_errorbracketmiss JMP errorbracketmiss
0003703C <AmiBlitz3.ab3@27037> Function.l ab3_GetIncludeLock{filename.s}
0003705C <AmiBlitz3.ab3@27038>   incLock.l  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub
000370B4 <AmiBlitz3.ab3@27039>   ex.s       = dos_GetExt{filename}
000370C8 <AmiBlitz3.ab3@27041>   If incLock = False
0003713C <AmiBlitz3.ab3@27042>     filename = dos_SetExt{filename,"ab3"}
0003715C <AmiBlitz3.ab3@27043>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab3
00037170 <AmiBlitz3.ab3@27046>   If incLock = False
000371E4 <AmiBlitz3.ab3@27047>     filename = dos_SetExt{filename,"ab2"}
00037204 <AmiBlitz3.ab3@27048>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab2
00037218 <AmiBlitz3.ab3@27051>   If incLock = False
0003728C <AmiBlitz3.ab3@27052>     filename = dos_SetExt{filename,"bb2"}
000372AC <AmiBlitz3.ab3@27053>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.bb2
000372C0 <AmiBlitz3.ab3@27056>   If incLock = False
00037352 <AmiBlitz3.ab3@27057>     filename = dos_SetExt{filename,ex+".ab3"}
00037372 <AmiBlitz3.ab3@27058>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab3
00037386 <AmiBlitz3.ab3@27061>   If incLock = False
000373FA <AmiBlitz3.ab3@27062>     filename = dos_SetExt{filename,"ab2"}
0003741A <AmiBlitz3.ab3@27063>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab2
0003742E <AmiBlitz3.ab3@27066>   If incLock = False
000374A2 <AmiBlitz3.ab3@27067>     filename = dos_SetExt{filename,"bb2"}
000374C2 <AmiBlitz3.ab3@27068>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.bb2
000374CC <AmiBlitz3.ab3@27071>  Function Return incLock
000374E6 <AmiBlitz3.ab3@27072> End Function
00037510 <AmiBlitz3.ab3@27076>   !basic
0003753A <AmiBlitz3.ab3@27077>   incString.s = Peek$(?ptr_parameterstore)
00037568 <AmiBlitz3.ab3@27079>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
0003756C <AmiBlitz3.ab3@27080>   incDirP.l   = PutD0                                       ;    "
00037594 <AmiBlitz3.ab3@27081>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
00037614 <AmiBlitz3.ab3@27082>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
00037646 <AmiBlitz3.ab3@27083>   incLock.l   = ab3_GetIncludeLock{incFile}                 ; check if file exist
0003765A <AmiBlitz3.ab3@27085>   If incLock = False ; not found => check default Include Directory
0003766A <AmiBlitz3.ab3@27086>     incDirP.l = Peek.l(?incd)
00037674 <AmiBlitz3.ab3@27087>     If incDirP
0003769C <AmiBlitz3.ab3@27088>       incDir_.s = Peek.s(incDirP)
000376A2 <AmiBlitz3.ab3@27089>     Else
0003770C <AmiBlitz3.ab3@27090>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
0003778C <AmiBlitz3.ab3@27092>     incFile.s = dos_AddPart{incDir_,incString}
000377BE <AmiBlitz3.ab3@27093>     incLock.l = ab3_GetIncludeLock{incFile}
000377D2 <AmiBlitz3.ab3@27096>   If incLock = False ; not found => check relative to current source
000377EA <AmiBlitz3.ab3@27097>     incDepth.l = Peek.w(?ininclude)-1
00037810 <AmiBlitz3.ab3@27098>     If incDepth >= 0 AND incDepth < #maxincludes
00037870 <AmiBlitz3.ab3@27099>       incDir_.s = dos_PathPart{incdim (incDepth)} ;= Peek.s(?includetemp2)
000378F0 <AmiBlitz3.ab3@27100>       incFile.s = dos_AddPart{incDir_,incString}
00037922 <AmiBlitz3.ab3@27101>       incLock.l = ab3_GetIncludeLock{incFile}
00037936 <AmiBlitz3.ab3@27105>   If incLock = False ; still not found => check default Include Directory and name only
00037946 <AmiBlitz3.ab3@27106>     incDirP.l = Peek.l(?incd)
00037950 <AmiBlitz3.ab3@27107>     If incDirP
00037978 <AmiBlitz3.ab3@27108>       incDir_.s = Peek.s(incDirP)
0003797E <AmiBlitz3.ab3@27109>     Else
000379E8 <AmiBlitz3.ab3@27110>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00037A96 <AmiBlitz3.ab3@27112>     incFile.s = dos_AddPart{incDir_,dos_FilePart{incString}}
00037AC8 <AmiBlitz3.ab3@27113>     incLock.l = ab3_GetIncludeLock{incFile}
00037AD2 <AmiBlitz3.ab3@27116>   If incLock
00037AE8 <AmiBlitz3.ab3@27117>     MaxLen incFile = 1024
00037B0C <AmiBlitz3.ab3@27118>     NameFromLock_ incLock,&incFile,1024
00037B36 <AmiBlitz3.ab3@27119>     incFile = Peek.s(&incFile)
00037B6E <AmiBlitz3.ab3@27120>     Poke$ ?ptr_parameterstore,incFile
00037B82 <AmiBlitz3.ab3@27121>     i = FLen(incFile)
00037B8E <AmiBlitz3.ab3@27122>     GetReg d0,i
00037B94 <AmiBlitz3.ab3@27123>     MOVE.l d0,tempstore
00037BA4 <AmiBlitz3.ab3@27124>     UnLock_ incLock
00037BC2 <AmiBlitz3.ab3@27127>   !asm
00037BC8 <AmiBlitz3.ab3@27128>   TST.l tempstore
00037BCC <AmiBlitz3.ab3@27129>    BEQ 'l1
00037BD2 <AmiBlitz3.ab3@27130>   MOVE.l tempstore,d2
00037BD4 <AmiBlitz3.ab3@27133> RTS
00037BFE <AmiBlitz3.ab3@27137>   !basic
00037C28 <AmiBlitz3.ab3@27138>   incString.s = Peek$(?ptr_parameterstore)                  ; get the string
00037C56 <AmiBlitz3.ab3@27139>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
00037C5A <AmiBlitz3.ab3@27140>   incDirP.l   = PutD0                                       ;    "
00037C82 <AmiBlitz3.ab3@27141>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
00037D02 <AmiBlitz3.ab3@27142>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
00037D22 <AmiBlitz3.ab3@27143>   incLock.l   = Lock_(&incFile,#ACCESS_READ)                ; check if file exist
00037D36 <AmiBlitz3.ab3@27145>   If incLock = False                                        ; not found => try orignal string only to find
00037D56 <AmiBlitz3.ab3@27146>     incLock.l = Lock_(&incString,#ACCESS_READ)
00037D60 <AmiBlitz3.ab3@27149>   If incLock                                                ; found => store full path
00037D76 <AmiBlitz3.ab3@27150>     MaxLen incFile = 1024
00037D9A <AmiBlitz3.ab3@27151>     NameFromLock_ incLock,&incFile,1024
00037DC4 <AmiBlitz3.ab3@27152>     incFile = Peek.s(&incFile)
00037DFC <AmiBlitz3.ab3@27153>     Poke$ ?ptr_parameterstore,incFile
00037E08 <AmiBlitz3.ab3@27156> 
00037E26 <AmiBlitz3.ab3@27157>   !asm
00037E28 <AmiBlitz3.ab3@27158> RTS
00037E2E <AmiBlitz3.ab3@27169>   JSR Aclearallvars
00037E34 <AmiBlitz3.ab3@27170>   JSR free_unusedfunctions
00037E3E <AmiBlitz3.ab3@27185>   MOVE.l #"NORE",reqmode
00037E44 <AmiBlitz3.ab3@27186> JSR handle_compileerror
00037E46 <AmiBlitz3.ab3@27189>   MOVE.l d0,-(a7)
00037E48 <AmiBlitz3.ab3@27190>   MOVE.l a5,d0
00037E52 <AmiBlitz3.ab3@27191>   !basica7
00037E56 <AmiBlitz3.ab3@27192>   i.l = PutD0
00037E60 <AmiBlitz3.ab3@27193>   If i
00037E88 <AmiBlitz3.ab3@27194>     a$ = Peek$(i)
00037EBA <AmiBlitz3.ab3@27195>     b$ = Peeks$(i-7,7)
00037FF2 <AmiBlitz3.ab3@27197> 
00037FF8 <AmiBlitz3.ab3@27198>     MOVE.l d0,result
00037FFC <AmiBlitz3.ab3@27200>   !asma7
00037FFE <AmiBlitz3.ab3@27201>   MOVE.l (a7)+,d0
00038000 <AmiBlitz3.ab3@27202> RTS
0003802A <AmiBlitz3.ab3@27206>   !basic
00038058 <AmiBlitz3.ab3@27207>   !ComData_LEA{comStr_CurrentDir,D0}
0003805C <AmiBlitz3.ab3@27208>   currentDirP.l = PutD0
0003808A <AmiBlitz3.ab3@27210>   !ComData_LEA{comStr_SourceName,D0}
0003808E <AmiBlitz3.ab3@27211>   fileNameP.l = PutD0
000380B6 <AmiBlitz3.ab3@27213>   check_dirname$  = Peek$(currentDirP)
000380DE <AmiBlitz3.ab3@27214>   check_filename$ = Peek$(fileNameP)
00038164 <AmiBlitz3.ab3@27215>   If (olddirname$<>check_dirname$) OR (oldfilename$<>check_filename$)
0003816A <AmiBlitz3.ab3@27216>     JSR free_unusedfunctions
000381B4 <AmiBlitz3.ab3@27218>   olddirname$ = Peek$(check_dirname$)
000381FE <AmiBlitz3.ab3@27219>   oldfilename$ = Peek$(check_filename$)
00038228 <AmiBlitz3.ab3@27220>   For i = 0 To #maxincludes-1
0003823C <AmiBlitz3.ab3@27221>     incline(i) = 0
0003824C <AmiBlitz3.ab3@27222>   Next
0003826A <AmiBlitz3.ab3@27223>   !asm
0003826C <AmiBlitz3.ab3@27224> RTS
0003826E <AmiBlitz3.ab3@27228>   MOVEQ #0,d1
00038270 <AmiBlitz3.ab3@27231>   MOVE.b (a5)+,d0
00038274 <AmiBlitz3.ab3@27232>   BEQ 'er1
00038278 <AmiBlitz3.ab3@27233>   CMP.b #$20,d0
0003827C <AmiBlitz3.ab3@27234>   BEQ 'l1
0003827E <AmiBlitz3.ab3@27235>   ADDQ #1,d1
00038282 <AmiBlitz3.ab3@27236>   CMP.b #$22,d0
00038286 <AmiBlitz3.ab3@27237>   BNE 'l1
00038288 <AmiBlitz3.ab3@27238> RTS
0003828E <AmiBlitz3.ab3@27241> JMP syntaxerr
000382B2 <AmiBlitz3.ab3@27252> erro1t   Dc.b "Only one BSS / Chip Segment allowed",0 : Even
000382D0 <AmiBlitz3.ab3@27253> nodata   Dc.b "BSS Segment contains Data!!!!",0       : Even
000382D6 <AmiBlitz3.ab3@27258>   TST.b exdebug
000382DA <AmiBlitz3.ab3@27259>   BNE 'l10
000382E0 <AmiBlitz3.ab3@27260>   MOVE.l #$4e71,d1
000382E6 <AmiBlitz3.ab3@27261>   JSR writeword
000382EC <AmiBlitz3.ab3@27262>   MOVE.l destpointer,d0
000382EE <AmiBlitz3.ab3@27263>   MOVE.l d0,d1
000382F0 <AmiBlitz3.ab3@27264>   ADDQ.l #3,d1
000382F6 <AmiBlitz3.ab3@27265>   AND.l #$fffffffc,d1
000382FC <AmiBlitz3.ab3@27266>   MOVE.l d1,destpointer
00038302 <AmiBlitz3.ab3@27267>   SUB.l destpointer,d0
00038306 <AmiBlitz3.ab3@27268>   BEQ 'lnf1
00038310 <AmiBlitz3.ab3@27269>   CMP.l #-1,bssstart
00038314 <AmiBlitz3.ab3@27270>   BNE 'lnf1
0003831E <AmiBlitz3.ab3@27271>   CMP.l #-1,chipstart
00038322 <AmiBlitz3.ab3@27272>   BNE 'lnf1
00038328 <AmiBlitz3.ab3@27273>   MOVE.l destpointer,a4
0003832E <AmiBlitz3.ab3@27274>   TST.w dontwrite
00038332 <AmiBlitz3.ab3@27275>   BNE 'lnf1
00038338 <AmiBlitz3.ab3@27276>   MOVE.w #$4e71,-2(a4)
00038342 <AmiBlitz3.ab3@27279>   CMP.l #-1,bssstart
00038346 <AmiBlitz3.ab3@27280>   BEQ 'l11
0003834C <AmiBlitz3.ab3@27281>   MOVE.l #erro1t,-(a7)
00038352 <AmiBlitz3.ab3@27282> JMP handle_compileerror
0003835C <AmiBlitz3.ab3@27285>   MOVE.l destpointer,bssstart
00038364 <AmiBlitz3.ab3@27286>   MOVE.b #1,bssmode
0003836A <AmiBlitz3.ab3@27289>   TST.b chipmode
0003836E <AmiBlitz3.ab3@27290>   BEQ 'l10
00038378 <AmiBlitz3.ab3@27291>   MOVE.l destpointer,chipend
0003837E <AmiBlitz3.ab3@27292>   CLR.b chipmode
00038384 <AmiBlitz3.ab3@27295>   JSR get1bytemain
00038386 <AmiBlitz3.ab3@27296> RTS
0003838C <AmiBlitz3.ab3@27300>    TST.b exdebug
00038390 <AmiBlitz3.ab3@27301>   BNE 'x1
00038396 <AmiBlitz3.ab3@27302>   MOVE.l destpointer,d0
0003839C <AmiBlitz3.ab3@27303>   MOVE.l d0,realbssend
000383A2 <AmiBlitz3.ab3@27304>   MOVE.l #$4e71,d1
000383A8 <AmiBlitz3.ab3@27305>   JSR writeword
000383AE <AmiBlitz3.ab3@27306>   MOVE.l destpointer,d0
000383B0 <AmiBlitz3.ab3@27307>   MOVE.l d0,d1
000383B2 <AmiBlitz3.ab3@27308>   ADDQ.l #3,d1
000383B8 <AmiBlitz3.ab3@27309>   AND.l #$fffffffc,d1
000383BE <AmiBlitz3.ab3@27310>   MOVE.l d1,destpointer
000383C4 <AmiBlitz3.ab3@27311>   SUB.l destpointer,d0
000383C8 <AmiBlitz3.ab3@27312>   BEQ 'lnf1
000383CE <AmiBlitz3.ab3@27313>   MOVE.l destpointer,a4
000383D8 <AmiBlitz3.ab3@27314>   CMP.l #-1,bssstart
000383DC <AmiBlitz3.ab3@27315>   BNE 'lnf1
000383E6 <AmiBlitz3.ab3@27316>   CMP.l #-1,chipstart
000383EA <AmiBlitz3.ab3@27317>   BNE 'lnf1
000383F0 <AmiBlitz3.ab3@27318>   TST.w dontwrite
000383F4 <AmiBlitz3.ab3@27319>   BNE 'lnf1
000383FA <AmiBlitz3.ab3@27320>   MOVE.w #$4e71,-2(a4)
00038400 <AmiBlitz3.ab3@27323>   TST.b bssmode
00038404 <AmiBlitz3.ab3@27324>   BEQ 'l10
0003840E <AmiBlitz3.ab3@27325>   MOVE.l destpointer,bssend
00038414 <AmiBlitz3.ab3@27326>   CLR.b bssmode
0003841E <AmiBlitz3.ab3@27331>   CMP.l #-1,chipstart
00038422 <AmiBlitz3.ab3@27332>   BEQ 'l11
00038428 <AmiBlitz3.ab3@27333>   MOVE.l #erro1t,-(a7)
0003842E <AmiBlitz3.ab3@27334> JMP handle_compileerror
00038438 <AmiBlitz3.ab3@27337>   MOVE.l destpointer,chipstart
00038440 <AmiBlitz3.ab3@27338>   MOVE.b #1,chipmode
00038446 <AmiBlitz3.ab3@27341>   JSR get1bytemain
00038448 <AmiBlitz3.ab3@27342> RTS
00038472 <AmiBlitz3.ab3@27346>   !basic
00038484 <AmiBlitz3.ab3@27356>   i.l = Peek.w(?ininclude)
000384AA <AmiBlitz3.ab3@27357>   If i>=0 AND i<#maxincludes
000384DC <AmiBlitz3.ab3@27358>     incdim (i) = Peek.s(?includetemp2)
000384F6 <AmiBlitz3.ab3@27359>     incline(i) = Peek.l(?includeline)
00038500 <AmiBlitz3.ab3@27361>     If CLIMode
000385AE <AmiBlitz3.ab3@27362>       If cli_verbose>=2 Then NPrint "Include \\22",incdim(i),"\\22..."
000385CC <AmiBlitz3.ab3@27366>   !asm
000385CE <AmiBlitz3.ab3@27367> RTS
000385F8 <AmiBlitz3.ab3@27371>   !basic
0003860A <AmiBlitz3.ab3@27372>   i.l = Peek.w(?ininclude)
00038630 <AmiBlitz3.ab3@27373>   If i>=0 AND i<#maxincludes
00038660 <AmiBlitz3.ab3@27374>     incdim (i) = ""
00038674 <AmiBlitz3.ab3@27375>     incline(i) = 0
000386AC <AmiBlitz3.ab3@27376>     If i>0 Then Poke.l (?includeline),incline(i-1)+1
000386CA <AmiBlitz3.ab3@27378>   !asm
000386CC <AmiBlitz3.ab3@27379> RTS
000386D2 <AmiBlitz3.ab3@27383>   LEA replacedat,a0
000386D6 <AmiBlitz3.ab3@27384>   Dc.w $3181,$0A00                                         ;MOVE.w d1,0(a0,d0.l*2)
000386D8 <AmiBlitz3.ab3@27385> RTS
000386DE <AmiBlitz3.ab3@27389>   TST.b fpu
000386E2 <AmiBlitz3.ab3@27390>   BEQ 'l1
000386EC <AmiBlitz3.ab3@27393>   MOVE.l destpointer,newinitaddr
000386F2 <AmiBlitz3.ab3@27394>   JSR writeword
000386F8 <AmiBlitz3.ab3@27395>   JSR writelong
000386FA <AmiBlitz3.ab3@27396> RTS
000386FC <AmiBlitz3.ab3@27401>   TST.b (a5)
00038700 <AmiBlitz3.ab3@27402>    BEQ.s 'll20
00038704 <AmiBlitz3.ab3@27403>   CMP.b #$20,(a5)
00038708 <AmiBlitz3.ab3@27404>    BNE.s 'll10
0003870A <AmiBlitz3.ab3@27405>   ADDQ.l #1,a5
0003870E <AmiBlitz3.ab3@27406> BRA.s 'll21
00038712 <AmiBlitz3.ab3@27409>   CMP.b #";",(a5)
00038716 <AmiBlitz3.ab3@27410>   BNE.s 'll20
00038718 <AmiBlitz3.ab3@27413>   TST.b (a5)+
0003871C <AmiBlitz3.ab3@27414>   BEQ.s 'll23
00038720 <AmiBlitz3.ab3@27415> BRA.s 'll25
00038722 <AmiBlitz3.ab3@27418>   SUBQ.l #1,a5
00038724 <AmiBlitz3.ab3@27421> RTS
00038728 <AmiBlitz3.ab3@27425>   MOVEM.l a2/d2,-(a7)
0003872A <AmiBlitz3.ab3@27426>   MOVEQ #0,d2
00038730 <AmiBlitz3.ab3@27427>   LEA ptr_parameterstore,a0
00038736 <AmiBlitz3.ab3@27428>   LEA chartab,a2
00038738 <AmiBlitz3.ab3@27431>   MOVE.b (a5),d0
0003873C <AmiBlitz3.ab3@27432>   TST.b 0(a2,d0)
00038740 <AmiBlitz3.ab3@27433>   BNE 'l10
00038742 <AmiBlitz3.ab3@27434>   ADDQ.l #1,a5
00038744 <AmiBlitz3.ab3@27435>   MOVE.b d0,(a0)+
00038746 <AmiBlitz3.ab3@27436>   ADDQ.l #1,d2
0003874A <AmiBlitz3.ab3@27437> BRA fc2
0003874C <AmiBlitz3.ab3@27440>   CLR.b (a0)+
00038752 <AmiBlitz3.ab3@27441>   JSR findlabel2
00038754 <AmiBlitz3.ab3@27442>   MOVE.l a2,a0
00038758 <AmiBlitz3.ab3@27443>   MOVEM.l (a7)+,a2/d2
0003875A <AmiBlitz3.ab3@27444> RTS
0003875C <AmiBlitz3.ab3@27448>   TST.l d0
00038760 <AmiBlitz3.ab3@27449>   BNE 'l10
00038766 <AmiBlitz3.ab3@27450>     MOVE.l #syntax_,-(a7)
0003876C <AmiBlitz3.ab3@27451> JMP handle_compileerror
00038772 <AmiBlitz3.ab3@27454>   CMP.l #1,d0
00038776 <AmiBlitz3.ab3@27455>   BNE 'l20
0003877C <AmiBlitz3.ab3@27456>     MOVE.l #overflow,-(a7)
00038782 <AmiBlitz3.ab3@27457> JMP handle_compileerror
00038784 <AmiBlitz3.ab3@27460>   ADD.l a2,d0
00038786 <AmiBlitz3.ab3@27461>   MOVE.l d0,-(a7)
0003878C <AmiBlitz3.ab3@27462> JMP handle_compileerror
00038792 <AmiBlitz3.ab3@27466>   JMP _return
00038798 <AmiBlitz3.ab3@27467>   JMP _return
0003879E <AmiBlitz3.ab3@27468>   JMP _return
000387A4 <AmiBlitz3.ab3@27469>   JMP _return
000387AA <AmiBlitz3.ab3@27470>   JMP _return
000387B0 <AmiBlitz3.ab3@27471>   JMP _return
000387B6 <AmiBlitz3.ab3@27472>   JMP _return
000387BC <AmiBlitz3.ab3@27473>   JMP _return
000387C2 <AmiBlitz3.ab3@27474>   JMP _return
000387C8 <AmiBlitz3.ab3@27475>   JMP _return
000387CE <AmiBlitz3.ab3@27476>   JMP Atokejsr
000387D4 <AmiBlitz3.ab3@27477>   JMP writeinit
000387DA <AmiBlitz3.ab3@27478>   JMP macroexecute
000387E0 <AmiBlitz3.ab3@27479>   JMP findnext
000387E6 <AmiBlitz3.ab3@27480>   JMP replacelib
000387EC <AmiBlitz3.ab3@27481>   JMP findconstant2
000387F2 <AmiBlitz3.ab3@27482>   JMP findchar                                             ;char in d1
000387F8 <AmiBlitz3.ab3@27483>   JMP stripspaces
000387FE <AmiBlitz3.ab3@27484>   JMP calc                                                 ;d0 varmode
00038804 <AmiBlitz3.ab3@27485>   JMP error
0003880A <AmiBlitz3.ab3@27486>   JMP writelong                                            ;d1 value
00038810 <AmiBlitz3.ab3@27487>   JMP writeword                                            ;d1 value
00038816 <AmiBlitz3.ab3@27488>   JMP writebyte                                            ;d1 value
0003881C <AmiBlitz3.ab3@27489> JMP exit
00038820 <AmiBlitz3.ab3@27493>   destpointer:    Ds.l 1                                ;pc org source      ;Ds.w 1
00038822 <AmiBlitz3.ab3@27496>   fast            Dc.w 0
00038824 <AmiBlitz3.ab3@27497>   fpu             Dc.w 0
00038826 <AmiBlitz3.ab3@27498>   newsyntax       Dc.w 0
00038827 <AmiBlitz3.ab3@27500>   optistring      Dc.b 0
00038828 <AmiBlitz3.ab3@27501>   optistring2     Dc.b 0
00038829 <AmiBlitz3.ab3@27502>   optiarray       Dc.b 0
0003882A <AmiBlitz3.ab3@27503>   quickadd        Dc.b 0
0003882C <AmiBlitz3.ab3@27504>   newmode         Dc.w 0
0003882E <AmiBlitz3.ab3@27505>   mode            Dc.w 0
00038830 <AmiBlitz3.ab3@27506>   string1         Dc.w 0
00038832 <AmiBlitz3.ab3@27507>   load_var_size   Dc.w 0
00038834 <AmiBlitz3.ab3@27508>   load_var_reg    Dc.w 0
00038838 <AmiBlitz3.ab3@27509>   load_var_addr   Dc.l 0
0003883A <AmiBlitz3.ab3@27510>   imm_size        Dc.w 0
0003883C <AmiBlitz3.ab3@27511>   imm_reg         Dc.w 0
00038840 <AmiBlitz3.ab3@27512>   imm_addr        Dc.l 0
00038841 <AmiBlitz3.ab3@27513>   iee             Dc.b 0
00038842 <AmiBlitz3.ab3@27514>   _dcb            Dc.b 0
00038846 <AmiBlitz3.ab3@27515>   nohunkoffset    Dc.l 0
0003884A <AmiBlitz3.ab3@27518> teddata:        Dc.l tokens
0003884E <AmiBlitz3.ab3@27519>                 Dc.l 0 ;compilermenu_entries               ; NOT used anymore
00038852 <AmiBlitz3.ab3@27520>                 Dc.l read_xtrafile
00038856 <AmiBlitz3.ab3@27521>                 Dc.l write_xtrafile
0003885A <AmiBlitz3.ab3@27522>                 Dc.l call_menuentry                        ; compile AND RUN ?
0003885E <AmiBlitz3.ab3@27523>                 Dc.l 0
00038862 <AmiBlitz3.ab3@27524>                 Dc.b ":",34,".;"
00038866 <AmiBlitz3.ab3@27525>                 Dc.l "NEW1"
0003886A <AmiBlitz3.ab3@27526>                 Dc.l newtypebase
0003886E <AmiBlitz3.ab3@27527> realconstbase:  Dc.l labelbase
00038872 <AmiBlitz3.ab3@27528> deflib          Dc.l 0
00038876 <AmiBlitz3.ab3@27529> incd            Dc.l 0
0003887A <AmiBlitz3.ab3@27530>                 Dc.l 0
0003887E <AmiBlitz3.ab3@27531>                 Dc.l 0
00038882 <AmiBlitz3.ab3@27532>                 Dc.l 0
00038884 <AmiBlitz3.ab3@27533> _return         RTS
00038885 <AmiBlitz3.ab3@27534>                 Dc.b 0
00038C85 <AmiBlitz3.ab3@27535> chartab2        Ds.l 256
00038C89 <AmiBlitz3.ab3@27536> codeend         Dc.l 0
00038C8D <AmiBlitz3.ab3@27537> hunkoffsetnum   Dc.l 0
00038C91 <AmiBlitz3.ab3@27538> chipsize        Dc.l 0
00038C95 <AmiBlitz3.ab3@27539> bsssize         Dc.l 0
00038C99 <AmiBlitz3.ab3@27540> bssstart        Dc.l -1
00038C9D <AmiBlitz3.ab3@27541> bssend          Dc.l -1
00038CA1 <AmiBlitz3.ab3@27542> chipstart       Dc.l -1
00038CA5 <AmiBlitz3.ab3@27543> chipend         Dc.l -1
00038CA6 <AmiBlitz3.ab3@27544> bssmode         Dc.b 0
00038CA7 <AmiBlitz3.ab3@27545> chipmode        Dc.b 0
00038CA8 <AmiBlitz3.ab3@27546> newhunk         Dc.b 0
00038CAC <AmiBlitz3.ab3@27547> bssnum          Dc.l 0
00038CB0 <AmiBlitz3.ab3@27548> chipnum         Dc.l 0
00038CB4 <AmiBlitz3.ab3@27549> lastinstruction Dc.l 0
00038CB8 <AmiBlitz3.ab3@27550> lastinstructionaddr Dc.l 0
00038CCC <AmiBlitz3.ab3@27551> hunkbegin       Dc.l $03F3,$00,$02,$00,$01
00038CD0 <AmiBlitz3.ab3@27552> tstsize1b:      Ds.l 1
00038CD4 <AmiBlitz3.ab3@27553> bsssize2        Dc.l 1
00038CD8 <AmiBlitz3.ab3@27554>                 Dc.l $03E9
00038CDC <AmiBlitz3.ab3@27555> tstsize2b:      Dc.l $100
00038CF0 <AmiBlitz3.ab3@27556> hunkbegin2      Dc.l $03F3,$00,$03,$00,$02
00038CF4 <AmiBlitz3.ab3@27557> tstsize1c:      Ds.l 1
00038CF8 <AmiBlitz3.ab3@27558> bsssize3        Dc.l 1
00038CFC <AmiBlitz3.ab3@27559> chipsize2       Dc.l 1
00038D00 <AmiBlitz3.ab3@27560>                 Dc.l $3e9
00038D04 <AmiBlitz3.ab3@27561> tstsize2c       Dc.l 0
00038D14 <AmiBlitz3.ab3@27562> hunkend         Dc.l $3f2,$3eb,0,$3f2
00038D24 <AmiBlitz3.ab3@27563> hunkend2        Dc.l $3f2,$3ea,0,$3f2
00038D2B <AmiBlitz3.ab3@27564> strcpy          Dc.b "strcpy",0
00038D32 <AmiBlitz3.ab3@27565> strcmp          Dc.b "strcmp",0
00038D39 <AmiBlitz3.ab3@27566> strvar          Dc.b "strvar",0
00038D3E <AmiBlitz3.ab3@27567> qmul            Dc.b "qmul",0
00038D43 <AmiBlitz3.ab3@27568> qdiv            Dc.b "qdiv",0
00038D4A <AmiBlitz3.ab3@27569> _MaxLen         Dc.b "maxlen",0
00038D4F <AmiBlitz3.ab3@27570> notf            Dc.b "????",0
00038D72 <AmiBlitz3.ab3@27572> errtext         Dc.b "only reg addressing Mode supported",0
00038D9C <AmiBlitz3.ab3@27573> fpuerr          Dc.b "Instruction not yet supported by 68K FPU ",0
00038DDE <AmiBlitz3.ab3@27574> cmplxerr        Dc.b "Formula too complex for 68K FPU or too much regload register used",0 : Even
00038DE0 <AmiBlitz3.ab3@27575> peeksize        Dc.w 0
00038DE4 <AmiBlitz3.ab3@27577> mainstart       Dc.l 0
00038DE5 <AmiBlitz3.ab3@27579> infunctioncode  Dc.b 0
00038DE7 <AmiBlitz3.ab3@27580> regnumstore     Dc.w 0
00038E14 <AmiBlitz3.ab3@27581>                 Dc.b "$VER: AmiBlitz3 \\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
00038E1C <AmiBlitz3.ab3@27582> testcode        Dc.b "print i",0
00038E80 <AmiBlitz3.ab3@27583>                 Ds.b 100
00038E8E <AmiBlitz3.ab3@27584> devo            Dc.b "developobject",0 : Even
00038EA0 <AmiBlitz3.ab3@27585> autostorename   Dc.b "__autoconstantnum",0
00038EAA <AmiBlitz3.ab3@27586> _include        Dc.b "__include",0
00038EB2 <AmiBlitz3.ab3@27587> _debug          Dc.b "__debug",0
00038EB6 <AmiBlitz3.ab3@27588> unusedfunc      Dc.l 0
00038EB8 <AmiBlitz3.ab3@27592>   MOVE.l a0,d0
00038EE2 <AmiBlitz3.ab3@27593>   !basic
00038EE6 <AmiBlitz3.ab3@27594>   *olderror.l= PutD0
00038F40 <AmiBlitz3.ab3@27595> 
00038F74 <AmiBlitz3.ab3@27596>   error_type$ = error$
00039010 <AmiBlitz3.ab3@27597> 
00039024 <AmiBlitz3.ab3@27598>   If Peek.l (?beforeparameterfetch)
0003903A <AmiBlitz3.ab3@27599>     MaxLen detokenline.s = 65536
0003907C <AmiBlitz3.ab3@27600>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0003908C <AmiBlitz3.ab3@27601>    *tn.preprocessor = Peek.l(?include_preprocessor)
000390B6 <AmiBlitz3.ab3@27602>     written.l = preproc_DetokenizeLine{*tn,Peek.l (?beforeparameterfetch),&detokenline}
000390DE <AmiBlitz3.ab3@27603>     If written>0 Then Poke.b &detokenline+written,0
00039108 <AmiBlitz3.ab3@27604>     sourceLineText.s = Peek.s(&detokenline)
0003910E <AmiBlitz3.ab3@27605>   Else
00039136 <AmiBlitz3.ab3@27606>     sourceLineText = "NULL"
0003916A <AmiBlitz3.ab3@27608>   error_source$ = sourceLineText
000391BC <AmiBlitz3.ab3@27609>   error$=error$+sourceLineText
000391C2 <AmiBlitz3.ab3@27610>   GetD0 &error$
000391E0 <AmiBlitz3.ab3@27611>   !asm
000391E2 <AmiBlitz3.ab3@27612>   MOVE.l d0,a0
000391E4 <AmiBlitz3.ab3@27613> RTS
000391E6 <AmiBlitz3.ab3@27617>   MOVE.l a0,-(a7)
000391E8 <AmiBlitz3.ab3@27618>   MOVE.l a0,d0
000391EA <AmiBlitz3.ab3@27619>   MOVE.l a5,a0                                             ;macro title
00039214 <AmiBlitz3.ab3@27620>   !basic
00039218 <AmiBlitz3.ab3@27621>   i = PutD0
0003921A <AmiBlitz3.ab3@27622>   MOVEQ #20,d0
0003921C <AmiBlitz3.ab3@27625>     MOVE.b -(a0),d1
00039220 <AmiBlitz3.ab3@27626>     BEQ 'l1
00039224 <AmiBlitz3.ab3@27627>     CMP.b #":",d1
00039228 <AmiBlitz3.ab3@27628>     BEQ 'l1
0003922A <AmiBlitz3.ab3@27629>     SUBQ.l #1,d0
0003922E <AmiBlitz3.ab3@27630>     BNE 'l2
00039230 <AmiBlitz3.ab3@27633>   ADDQ #1,a0
00039232 <AmiBlitz3.ab3@27634>   MOVE.l a0,d0
00039236 <AmiBlitz3.ab3@27635>   i2.l = PutD0
00039252 <AmiBlitz3.ab3@27636>   If Peek.w (?ininclude)>0
000392AC <AmiBlitz3.ab3@27637>     Poke.s (?includetemp2),incdim(Peek.w(?ininclude)-1)
000392BC <AmiBlitz3.ab3@27638>     errorline.l = Peek.l(?includeline);-1
000392E4 <AmiBlitz3.ab3@27639>     Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
0003930E <AmiBlitz3.ab3@27640>     errorfile.s = Peek.s(?includetemp2)
00039314 <AmiBlitz3.ab3@27641>   Else
0003934C <AmiBlitz3.ab3@27642>     Poke.s (?includetemp2),Peek.s(?ptr_parameterstore)
00039362 <AmiBlitz3.ab3@27643>     errorline.l = Peek.l(?compilelinecounter) + 1
00039396 <AmiBlitz3.ab3@27644>     errorfile.s = cli_sourcefile
000393A0 <AmiBlitz3.ab3@27647>   If i
00039444 <AmiBlitz3.ab3@27648>     errortext.s = !TRANS{Replace$(Peek.s(i),"\\0a","\n")}
000394C2 <AmiBlitz3.ab3@27649>     errortext.s = Replace$(errortext,"\n","\\0a")
000394C8 <AmiBlitz3.ab3@27650>   Else
000394F0 <AmiBlitz3.ab3@27651>     errortext.s = "???"
00039668 <AmiBlitz3.ab3@27654>   NPrint "\\1b[1m",!TRANS{"Compiler Error"}," #",Peek.l(?errorcounter)," <",errorfile,"@",errorline,">\\1b[0m "
00039730 <AmiBlitz3.ab3@27655>   NPrint "  ",error_type$,"\\n  ",error_source$
0003974E <AmiBlitz3.ab3@27659>   !asm
00039750 <AmiBlitz3.ab3@27660>   MOVE.l (a7)+,a0
00039752 <AmiBlitz3.ab3@27661> RTS
00039754 <AmiBlitz3.ab3@27665>   MOVE.l a0,-(a7)
00039756 <AmiBlitz3.ab3@27666>   MOVE.l a0,d0
00039758 <AmiBlitz3.ab3@27667>   MOVE.l a5,a0                                             ;macro title
00039782 <AmiBlitz3.ab3@27668>   !basic
00039786 <AmiBlitz3.ab3@27669>   i = PutD0
00039788 <AmiBlitz3.ab3@27670>   MOVEQ #20,d0
0003978A <AmiBlitz3.ab3@27673>     MOVE.b -(a0),d1
0003978E <AmiBlitz3.ab3@27674>     BEQ 'l1
00039792 <AmiBlitz3.ab3@27675>     CMP.b #":",d1
00039796 <AmiBlitz3.ab3@27676>     BEQ 'l1
00039798 <AmiBlitz3.ab3@27677>     SUBQ.l #1,d0
0003979C <AmiBlitz3.ab3@27678>     BNE 'l2
0003979E <AmiBlitz3.ab3@27681>   ADDQ #1,a0
000397A0 <AmiBlitz3.ab3@27682>   MOVE.l a0,d0
000397A4 <AmiBlitz3.ab3@27683>   i2.l = PutD0
00039828 <AmiBlitz3.ab3@27684>   fid.l = file_Open{dos_AddPart{my_systemdir$,"ab_compileerror.txt"},#file_forcewrite}
0003983C <AmiBlitz3.ab3@27685>   If fid <> -1
00039858 <AmiBlitz3.ab3@27686>     If Peek.w (?ininclude)>0
000398B2 <AmiBlitz3.ab3@27687>       Poke$(?includetemp2),incdim(Peek.w(?ininclude)-1)
000398B8 <AmiBlitz3.ab3@27688>     Else
000398E4 <AmiBlitz3.ab3@27689>       Poke$(?includetemp2),""
0003990E <AmiBlitz3.ab3@27691>     a$ = Peek$(?includetemp2)
00039980 <AmiBlitz3.ab3@27692>     x$ = Replace$(Peek$(i),"\\0a","\n")
000399B2 <AmiBlitz3.ab3@27693>     file_WriteLine{fid,x$}
000399FC <AmiBlitz3.ab3@27694>     file_WriteLine{fid,Str$(Peek.l(?compilelinecounter) + 1)}
00039A28 <AmiBlitz3.ab3@27695>     If a$
00039A5A <AmiBlitz3.ab3@27696>       file_WriteLine{fid,a$}
00039AA4 <AmiBlitz3.ab3@27697>       file_WriteLine{fid,Str$(Peek.l(?includeline)-1)}
00039ACC <AmiBlitz3.ab3@27698>       Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
00039AD2 <AmiBlitz3.ab3@27699>     Else
00039AF8 <AmiBlitz3.ab3@27700>       file_WriteLine{fid,"none"}
00039B28 <AmiBlitz3.ab3@27702>     file_WriteLine{fid,Peek$(i2)}
00039B7E <AmiBlitz3.ab3@27703>     file_WriteLine{fid,Str$(Peek.l(?globallinecount))+" line(s) compiled"}
00039BC8 <AmiBlitz3.ab3@27704>     file_WriteLine{fid,Hex$(Peek.w(?globalvarpointer))+" global var base"}
00039BD2 <AmiBlitz3.ab3@27705>     file_Close{fid}
00039BF0 <AmiBlitz3.ab3@27707>   !asm
00039BF2 <AmiBlitz3.ab3@27708>   MOVE.l (a7)+,a0
00039BF4 <AmiBlitz3.ab3@27709> RTS
00039C1E <AmiBlitz3.ab3@27713>   !basic
00039C22 <AmiBlitz3.ab3@27714>   progress.l     = PutD0
00039C34 <AmiBlitz3.ab3@27715>   total.l        = Peek.w(?progressbar_width)
00039C52 <AmiBlitz3.ab3@27716>   calcpro        = (progress * 100) / total +1
00039C64 <AmiBlitz3.ab3@27717>   pass.l         = Peek.w(?pass)
00039C76 <AmiBlitz3.ab3@27718>   typ.l          = Peek.w(?compiler_job)
00039C94 <AmiBlitz3.ab3@27721> If (pass><pass_old OR typ><typ_old)
00039CA2 <AmiBlitz3.ab3@27723>     If pass_old><pass
00039D3E <AmiBlitz3.ab3@27724>       passtatusstr.s = !TRANS{"Pass"}+" "+Str$(pass)+"..."
00039D94 <AmiBlitz3.ab3@27725>       If cli_verbose>=2 Then NPrint passtatusstr
00039D9A <AmiBlitz3.ab3@27728>     pass_old = pass
00039DA0 <AmiBlitz3.ab3@27729>     typ_old  = typ
00039DA6 <AmiBlitz3.ab3@27730>     update_comstatus_gui = True
00039DB8 <AmiBlitz3.ab3@27731>     If typ=0
00039E98 <AmiBlitz3.ab3@27732>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Compiling Sources..."}
00039EA0 <AmiBlitz3.ab3@27733>       calcpro = 0  ; set gauge to 0
00039EB2 <AmiBlitz3.ab3@27735>     If typ=1
00039F92 <AmiBlitz3.ab3@27736>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Building Executable..."}
00039F9A <AmiBlitz3.ab3@27737>       calcpro = 0  ; set gauge to 0
00039FF0 <AmiBlitz3.ab3@27740>     If cli_verbose>=3 Then NPrint comstatusstr
00039FFE <AmiBlitz3.ab3@27743>   If (calcpro >< calcpro_old)
0003A052 <AmiBlitz3.ab3@27744>     If cli_verbose>=4 Then NPrint calcpro,"% compiled..."
0003A058 <AmiBlitz3.ab3@27745>     calcpro_old = calcpro
0003A05E <AmiBlitz3.ab3@27746>     update_comstatus_gui = True
0003A078 <AmiBlitz3.ab3@27749>   If update_comstatus_gui = True                                     ; check if a update of the gui nessecary
0003A096 <AmiBlitz3.ab3@27750>     !asm
0003A0C8 <AmiBlitz3.ab3@27751> 
0003A0F2 <AmiBlitz3.ab3@27752>     !basic
0003A0F8 <AmiBlitz3.ab3@27753>     update_comstatus_gui  = False ; because we update the gui
0003A116 <AmiBlitz3.ab3@27755>   !asm
0003A118 <AmiBlitz3.ab3@27756> RTS
0003A11E <AmiBlitz3.ab3@27761>   MOVE.w maxobject_pos,D5                                  ;max objects 1. visible
0003A124 <AmiBlitz3.ab3@27762>   LEA maxobjects_value,A3                                  ;current value
0003A12A <AmiBlitz3.ab3@27763>   MOVEA.l libpointer,A2
0003A12E <AmiBlitz3.ab3@27766>   CMPA.w #$0,A2
0003A132 <AmiBlitz3.ab3@27767>   BEQ.w menu4c__igotb
0003A134 <AmiBlitz3.ab3@27768>   MOVEA.l A2,A1
0003A138 <AmiBlitz3.ab3@27769>   ADDA.l $12(A1),A1
0003A13C <AmiBlitz3.ab3@27770>   TST.w -$2(A1)
0003A140 <AmiBlitz3.ab3@27771>   BEQ.w JL_0_FFF6b
0003A142 <AmiBlitz3.ab3@27772>   SUBQ.w #1,D5
0003A146 <AmiBlitz3.ab3@27773>   BMI.w JL_0_FFFCb
0003A148 <AmiBlitz3.ab3@27776>   MOVEA.l (A2),A2
0003A14C <AmiBlitz3.ab3@27777> BRA.w JL_0_FFDAb
0003A150 <AmiBlitz3.ab3@27780>   MOVE.w (A3),-$4(A1)
0003A152 <AmiBlitz3.ab3@27783> RTS
0003A158 <AmiBlitz3.ab3@27787>   MOVE.w debugnest,d0
0003A15E <AmiBlitz3.ab3@27788>   LEA storedebugmode, a0
0003A166 <AmiBlitz3.ab3@27789>   MOVE.b 0(a0,d0.w),debugmode
0003A16C <AmiBlitz3.ab3@27790>   TST.w debugnest
0003A170 <AmiBlitz3.ab3@27791>   BEQ JUMP_unpairrunerrs
0003A176 <AmiBlitz3.ab3@27792>   SUBQ.w #1,debugnest
0003A178 <AmiBlitz3.ab3@27793> RTS
0003A17E <AmiBlitz3.ab3@27796> JMP runerrsoverflow
0003A184 <AmiBlitz3.ab3@27799> JMP unpairrunerrs
0003A18C <AmiBlitz3.ab3@27803>   BCHG #$7,use_debugger
0003A194 <AmiBlitz3.ab3@27805>   BTST #$7,use_debugger
0003A198 <AmiBlitz3.ab3@27806>   BNE 'debugon
0003A19E <AmiBlitz3.ab3@27807>   CLR.w debugmode
0003A1A2 <AmiBlitz3.ab3@27808> BRA.b 'debugoff
0003A1A8 <AmiBlitz3.ab3@27811>   SNE debugmode
0003A1AA <AmiBlitz3.ab3@27814>   MOVE.l a0,-(a7)
0003A1E2 <AmiBlitz3.ab3@27817>   !ComData_SetB{comByte_DebugMode,debugmode}
0003A1E4 <AmiBlitz3.ab3@27822>   MOVE.l (a7)+,a0
0003A1E6 <AmiBlitz3.ab3@27823> RTS
0003A1EE <AmiBlitz3.ab3@27828>   BTST #$7,use_debugger
0003A1F2 <AmiBlitz3.ab3@27829>   BNE 'debugon
0003A1F8 <AmiBlitz3.ab3@27830>   CLR.w debugmode
0003A1FC <AmiBlitz3.ab3@27831> BRA.b 'debugoff
0003A202 <AmiBlitz3.ab3@27834>   SNE debugmode
0003A204 <AmiBlitz3.ab3@27837> RTS
0003A20A <AmiBlitz3.ab3@27841>   ADDQ.w #1,debugnest
0003A210 <AmiBlitz3.ab3@27842>   MOVE.w debugnest,d0
0003A214 <AmiBlitz3.ab3@27843>   CMP.w #18,d0
0003A218 <AmiBlitz3.ab3@27844>    BGE JUMP_runerrsoverflow
0003A21E <AmiBlitz3.ab3@27845>   LEA storedebugmode, a0
0003A226 <AmiBlitz3.ab3@27846>   MOVE.b debugmode,0( a0,d0.w)
0003A22C <AmiBlitz3.ab3@27849>   SF debugmode
0003A22E <AmiBlitz3.ab3@27850> RTS
0003A2AE <AmiBlitz3.ab3@27853> usedpath:  Ds.l 32
0003A2B2 <AmiBlitz3.ab3@27857>   BEQ.w JUMP_syntaxerr
0003A2B8 <AmiBlitz3.ab3@27858>   LEA lastpath,A0
0003A2BC <AmiBlitz3.ab3@27859>   MOVEM.l a0-a1/d0,-(a7)
0003A2C2 <AmiBlitz3.ab3@27860>   LEA lastpath2,a1
0003A2C4 <AmiBlitz3.ab3@27863>     MOVE.b (a0)+,(a1)+
0003A2C8 <AmiBlitz3.ab3@27864>   BNE 'l2
0003A2CC <AmiBlitz3.ab3@27865>   MOVEM.l (a7)+,a0-a1/d0
0003A2D0 <AmiBlitz3.ab3@27866>   LEA usedpath(PC),A0
0003A2D4 <AmiBlitz3.ab3@27867>   MOVEM.l a0-a1/d0,-(a7)
0003A2DA <AmiBlitz3.ab3@27868>   LEA lastpath,a1
0003A2DC <AmiBlitz3.ab3@27871>     MOVE.b (a0)+,(a1)+
0003A2E0 <AmiBlitz3.ab3@27872>   BNE 'l1
0003A2E4 <AmiBlitz3.ab3@27873>   MOVEM.l (a7)+,a0-a1/d0
0003A2E6 <AmiBlitz3.ab3@27876>   TST.w D0
0003A2EA <AmiBlitz3.ab3@27877>    BMI.w JUMP_syntaxerr
0003A2EC <AmiBlitz3.ab3@27878>   MOVE.b D0,(A0)+
0003A2F0 <AmiBlitz3.ab3@27879>   BSR.w JUMP_get1bytemain
0003A2F4 <AmiBlitz3.ab3@27880>    BNE.w JL_0_4AA8
0003A2F8 <AmiBlitz3.ab3@27881>   MOVE.b #$2,(A0)
0003A2FA <AmiBlitz3.ab3@27882> RTS
0003A2FE <AmiBlitz3.ab3@27886>   BEQ.w JUMP_syntaxerr
0003A304 <AmiBlitz3.ab3@27887>   LEA path2,A0
0003A306 <AmiBlitz3.ab3@27897>   TST.w D0
0003A30A <AmiBlitz3.ab3@27898>    BMI.w JUMP_syntaxerr
0003A30C <AmiBlitz3.ab3@27899>   MOVE.b D0,(A0)+
0003A310 <AmiBlitz3.ab3@27900>   BSR.w JUMP_get1bytemain
0003A314 <AmiBlitz3.ab3@27901>    BNE.w JL_0_4AA8b
0003A318 <AmiBlitz3.ab3@27902>   MOVE.b #$2,(A0)
0003A31A <AmiBlitz3.ab3@27903> RTS
0003A320 <AmiBlitz3.ab3@27912> JMP errormsg_reg
0003A32A <AmiBlitz3.ab3@27916>   MOVE.l #$f22d6780,fpucodeglobal
0003A334 <AmiBlitz3.ab3@27917>   MOVE.l #$f22c6780,fpucodelocal
0003A33A <AmiBlitz3.ab3@27918>   LEA regtable,a0
0003A344 <AmiBlitz3.ab3@27919>   MOVE.l #7,maxregs
0003A346 <AmiBlitz3.ab3@27922>   MOVE.l (a0),d0
0003A34A <AmiBlitz3.ab3@27923>   BEQ 'e1
0003A34C <AmiBlitz3.ab3@27924>   CLR.l (a0)
0003A350 <AmiBlitz3.ab3@27925>   MOVE.w 4(a0),d0
0003A35A <AmiBlitz3.ab3@27926>   MOVE.l fpucodeglobal,fpucode
0003A35E <AmiBlitz3.ab3@27927>   TST.w 6(a0)
0003A362 <AmiBlitz3.ab3@27928>   BEQ 'glob
0003A36C <AmiBlitz3.ab3@27929>   MOVE.l fpucodelocal,fpucode
0003A372 <AmiBlitz3.ab3@27932>   MOVE.l fpucode,d1
0003A378 <AmiBlitz3.ab3@27933>   JSR writelong
0003A382 <AmiBlitz3.ab3@27934>   SUB.l #$80,fpucodelocal
0003A38C <AmiBlitz3.ab3@27935>   SUB.l #$80,fpucodeglobal
0003A38E <AmiBlitz3.ab3@27936>   MOVE.w d0,d1
0003A394 <AmiBlitz3.ab3@27937>   JSR writeword
0003A396 <AmiBlitz3.ab3@27938>   ADDQ #8,a0
0003A39A <AmiBlitz3.ab3@27939> BRA 'again
0003A39C <AmiBlitz3.ab3@27942> RTS
0003A3A2 <AmiBlitz3.ab3@27949> JMP notypeerr
0003A3A8 <AmiBlitz3.ab3@27952> JMP illtypeerr
0003A3B2 <AmiBlitz3.ab3@27955>   MOVE.l #$f22d4780,fpucodeglobal
0003A3BC <AmiBlitz3.ab3@27956>   MOVE.l #$f22c4780,fpucodelocal
0003A3C2 <AmiBlitz3.ab3@27957>   LEA regtable,a0
0003A3C4 <AmiBlitz3.ab3@27958>   TST.l (a0)
0003A3C8 <AmiBlitz3.ab3@27959>    BNE JUMP_errormsg_reg
0003A3CA <AmiBlitz3.ab3@27960>   MOVE.l d7,-(a7)
0003A3CC <AmiBlitz3.ab3@27961>   SUBQ.l #1,a5
0003A3D2 <AmiBlitz3.ab3@27964>   JSR getparameter2
0003A3D6 <AmiBlitz3.ab3@27965>   BEQ.w 'nopar
0003A3DC <AmiBlitz3.ab3@27966>   MOVE.w d0,lastchar
0003A3E2 <AmiBlitz3.ab3@27967>   JSR findvariable
0003A3E6 <AmiBlitz3.ab3@27968>   BNE 'islocal
0003A3F0 <AmiBlitz3.ab3@27969>   MOVE.l fpucodeglobal,fpucode
0003A3FA <AmiBlitz3.ab3@27970>   MOVE.l #3,maxregs
0003A3FC <AmiBlitz3.ab3@27971>   MOVEQ #0,d7
0003A404 <AmiBlitz3.ab3@27974>   CMP.l #newtype_float,$a(a2)                              ;is float type
0003A408 <AmiBlitz3.ab3@27975>    BEQ 'doit
0003A410 <AmiBlitz3.ab3@27976>   CMP.l #newtype_double,$a(a2)
0003A414 <AmiBlitz3.ab3@27977>    BNE JUMP_illtypeerr
0003A41A <AmiBlitz3.ab3@27980>   LEA regtable,a0
0003A41C <AmiBlitz3.ab3@27981>   MOVEQ #0,d0
0003A41E <AmiBlitz3.ab3@27984>   TST.l (a0)
0003A422 <AmiBlitz3.ab3@27985>    BEQ 'store
0003A424 <AmiBlitz3.ab3@27986>   ADDQ.l #4,d0
0003A426 <AmiBlitz3.ab3@27987>   ADDQ.l #8,a0
0003A42C <AmiBlitz3.ab3@27988>   CMP.l #16,d0
0003A430 <AmiBlitz3.ab3@27989>    BCS 'loop
0003A43A <AmiBlitz3.ab3@27990>   MOVE.l #2,maxregs
0003A440 <AmiBlitz3.ab3@27991>   CMP.l #20,d0
0003A444 <AmiBlitz3.ab3@27992>    BCS 'loop
0003A44E <AmiBlitz3.ab3@27993>   MOVE.l #1,maxregs
0003A454 <AmiBlitz3.ab3@27994>   CMP.l #24,d0
0003A458 <AmiBlitz3.ab3@27995>    BCS 'loop
0003A45E <AmiBlitz3.ab3@27996> JMP toovarerr
0003A464 <AmiBlitz3.ab3@27999>   TST.b fpu
0003A468 <AmiBlitz3.ab3@28000>    BEQ 'nofpu
0003A46A <AmiBlitz3.ab3@28001>   MOVE.l a2,(a0)
0003A470 <AmiBlitz3.ab3@28002>   MOVE.w 4(a2),4(a0)
0003A474 <AmiBlitz3.ab3@28003>   MOVE.w d7,6(a0)
0003A47A <AmiBlitz3.ab3@28004>   MOVE.l fpucode,d1
0003A484 <AmiBlitz3.ab3@28005>   SUB.l #$80,fpucodeglobal
0003A48E <AmiBlitz3.ab3@28006>   SUB.l #$80,fpucodelocal
0003A494 <AmiBlitz3.ab3@28007>   JSR writelong
0003A498 <AmiBlitz3.ab3@28008>   MOVE.w 4(a2),d1
0003A49E <AmiBlitz3.ab3@28009>   JSR writeword
0003A4A4 <AmiBlitz3.ab3@28012>   MOVE.w lastchar,d0
0003A4A8 <AmiBlitz3.ab3@28013>   CMP.w #":",d0
0003A4AC <AmiBlitz3.ab3@28014>    BEQ 'nopar
0003A4AE <AmiBlitz3.ab3@28015>   TST.w d0
0003A4B2 <AmiBlitz3.ab3@28016>    BEQ 'nopar
0003A4B6 <AmiBlitz3.ab3@28017>   CMP.w #",",d0
0003A4BA <AmiBlitz3.ab3@28018>   BNE JUMP_syntaxerr
0003A4BE <AmiBlitz3.ab3@28019> BRA 'l2
0003A4C0 <AmiBlitz3.ab3@28022>    MOVE.l (a7)+,d7
0003A4C2 <AmiBlitz3.ab3@28023> RTS
0003A4C4 <AmiBlitz3.ab3@28026>   MOVEQ #1,d7
0003A4CC <AmiBlitz3.ab3@28027>   MOVE.b #1,newvariable
0003A4D2 <AmiBlitz3.ab3@28028>   LEA firstlocal,a2
0003A4D8 <AmiBlitz3.ab3@28029>   JSR findvariable
0003A4DE <AmiBlitz3.ab3@28030>   CLR.b newvariable
0003A4E4 <AmiBlitz3.ab3@28031>   CMP.l #-1,d0
0003A4E8 <AmiBlitz3.ab3@28032>   BEQ.w JUMP_notypeerr2
0003A4F2 <AmiBlitz3.ab3@28033>   MOVE.l fpucodelocal,fpucode
0003A4F6 <AmiBlitz3.ab3@28034> BRA 'go
0003A4FA <AmiBlitz3.ab3@28037>   CMP.b #".",d0
0003A4FE <AmiBlitz3.ab3@28038>    BNE 'l1
0003A502 <AmiBlitz3.ab3@28039>   BSR JUMP_get1bytemain
0003A506 <AmiBlitz3.ab3@28040>   BSR JUMP_get1bytemain
0003A50A <AmiBlitz3.ab3@28043>   ORI .b #$20,d0
0003A50E <AmiBlitz3.ab3@28044>   CMP.b #"d",d0
0003A512 <AmiBlitz3.ab3@28045>    BNE JUMP_illeaerr
0003A516 <AmiBlitz3.ab3@28046>   BSR JUMP_get1bytemain
0003A51A <AmiBlitz3.ab3@28047>   SUB.b #$30,d0
0003A51E <AmiBlitz3.ab3@28048>   CMP.b #$7,d0
0003A522 <AmiBlitz3.ab3@28049>    BGT JUMP_syntaxerr
0003A526 <AmiBlitz3.ab3@28050>   MOVE.w #$49c0,d1
0003A528 <AmiBlitz3.ab3@28051>   ADD.b d0,d1
0003A52E <AmiBlitz3.ab3@28052>   JSR writeword
0003A532 <AmiBlitz3.ab3@28053>   BSR JUMP_get1bytemain
0003A534 <AmiBlitz3.ab3@28054> RTS
0003A53A <AmiBlitz3.ab3@28058>   LEA lastpath,a0
0003A53E <AmiBlitz3.ab3@28059>   LEA usedpath(PC),A1
0003A540 <AmiBlitz3.ab3@28062>     MOVE.b (a0)+,(a1)+
0003A544 <AmiBlitz3.ab3@28063>   BNE 'l1
0003A54A <AmiBlitz3.ab3@28065>   LEA lastpath2,a0
0003A550 <AmiBlitz3.ab3@28066>   LEA lastpath,A1
0003A552 <AmiBlitz3.ab3@28069>     MOVE.b (a0)+,(a1)+
0003A556 <AmiBlitz3.ab3@28070>   BNE 'l2
0003A558 <AmiBlitz3.ab3@28071> RTS
0003A55E <AmiBlitz3.ab3@28075>   TST.b objectcount
0003A562 <AmiBlitz3.ab3@28076>   BEQ 'l2a
0003A568 <AmiBlitz3.ab3@28077> JMP macnesterr
0003A56E <AmiBlitz3.ab3@28080>   LEA devo,a0
0003A574 <AmiBlitz3.ab3@28081>   ADDQ.b #1,objectcount
0003A578 <AmiBlitz3.ab3@28082>   MOVEM.l a1/d2,-(a7)
0003A57E <AmiBlitz3.ab3@28083>   LEA ptr_parameterstore,a1
0003A580 <AmiBlitz3.ab3@28086>     MOVE.b (a0)+,(a1)+
0003A584 <AmiBlitz3.ab3@28087>   BNE 'l1
0003A586 <AmiBlitz3.ab3@28089>   MOVEQ #13,d2
0003A58C <AmiBlitz3.ab3@28090>   JSR findlabel2
0003A590 <AmiBlitz3.ab3@28091>   BNE 'd
0003A594 <AmiBlitz3.ab3@28092>   TST.l 8(a2)
0003A598 <AmiBlitz3.ab3@28093>   BEQ 'd
0003A59E <AmiBlitz3.ab3@28094>   SUBQ.b #1,objectcount
0003A5A2 <AmiBlitz3.ab3@28095>   MOVEM.l (a7)+,a1/d2
0003A5A8 <AmiBlitz3.ab3@28096>   JSR skiprest
0003A5B0 <AmiBlitz3.ab3@28097>   MOVE.b #1,developobject
0003A5B2 <AmiBlitz3.ab3@28098> RTS
0003A5B6 <AmiBlitz3.ab3@28101>   MOVEM.l (a7)+,a1/d2
0003A5BE <AmiBlitz3.ab3@28102>   MOVE.b #1,resdisable
0003A5C4 <AmiBlitz3.ab3@28105>   CLR.b developobject
0003A5CA <AmiBlitz3.ab3@28106> JMP do_Macro
0003A5D0 <AmiBlitz3.ab3@28110> JMP illeaerr
0003A5D6 <AmiBlitz3.ab3@28114>   CLR.b typecheck
0003A5DC <AmiBlitz3.ab3@28115>   CLR.b declare
0003A5E2 <AmiBlitz3.ab3@28116>   CLR.b declare2
0003A5E6 <AmiBlitz3.ab3@28117>   SUB.b #$30,d0
0003A5EA <AmiBlitz3.ab3@28118>   BTST #0,d0
0003A5EE <AmiBlitz3.ab3@28119>   BEQ 'l1
0003A5F6 <AmiBlitz3.ab3@28120>   MOVE.b #1,declare
0003A5FA <AmiBlitz3.ab3@28123>   BTST #1,d0
0003A5FE <AmiBlitz3.ab3@28124>   BEQ 'l2
0003A606 <AmiBlitz3.ab3@28125>   MOVE.b #1,declare2
0003A60A <AmiBlitz3.ab3@28128>   BTST #2,d0
0003A60E <AmiBlitz3.ab3@28129>   BEQ 'l3
0003A616 <AmiBlitz3.ab3@28130>   MOVE.b #1,typecheck
0003A61A <AmiBlitz3.ab3@28132>   BSR.w JUMP_get1bytemain
0003A61C <AmiBlitz3.ab3@28133> RTS
0003A622 <AmiBlitz3.ab3@28136> JMP get1bytemain
0003A64C <AmiBlitz3.ab3@28140>   !basic
0003A66C <AmiBlitz3.ab3@28142>   FillMem ?residents_table,?residents_table_end-?residents_table,0
0003A68A <AmiBlitz3.ab3@28143>   !asm
0003A68C <AmiBlitz3.ab3@28144> Return
0003A68E <AmiBlitz3.ab3@28149>   MOVE.l d2,-(a7)                                          ; D2 -> stack
0003A690 <AmiBlitz3.ab3@28150>   ADDQ #1,a5
0003A692 <AmiBlitz3.ab3@28151>   MOVE.l a5,-(a7)
0003A6BC <AmiBlitz3.ab3@28152>   !basic
0003A6C2 <AmiBlitz3.ab3@28153>   MOVE.l (a7)+,d0 : _myD0.l = PutD0
0003A6CC <AmiBlitz3.ab3@28154>   If _myD0
0003A70C <AmiBlitz3.ab3@28155>     newconst$ = UCase$(Peek.s(_myD0))
0003A712 <AmiBlitz3.ab3@28156>   Else
0003A74C <AmiBlitz3.ab3@28157>     error{"INTERNAL: invalid pointer in check_newconstants!"}
0003A774 <AmiBlitz3.ab3@28158>     nwconst$="xxx"
0003A79C <AmiBlitz3.ab3@28160>   condata$ =""
0003A7AC <AmiBlitz3.ab3@28161>   Poke.b ?skip_bytes,0
0003A808 <AmiBlitz3.ab3@28162>   If Left$(newconst$,2) = "__"
0003A862 <AmiBlitz3.ab3@28163>     Select Mid$(newconst$,3,4)
0003A886 <AmiBlitz3.ab3@28165>      Case "DATE"
0003A8E0 <AmiBlitz3.ab3@28166>       Select Mid$(newconst$,3,6)
0003A91E <AmiBlitz3.ab3@28167>       Case "DATE__" : DateFormat 1 : Poke.b ?skip_bytes,8
0003A962 <AmiBlitz3.ab3@28168>       Case "DATE_G" : DateFormat 0 : Poke.b ?skip_bytes,12
0003A970 <AmiBlitz3.ab3@28169>       End Select
0003A97E <AmiBlitz3.ab3@28170>       i.l=SystemDate
0003A9A4 <AmiBlitz3.ab3@28171>       condata$ = Date$ (i)
0003AA22 <AmiBlitz3.ab3@28172>       condata$ = Replace$(condata$,"/",".")
0003AA4C <AmiBlitz3.ab3@28174>      Case "VER_"
0003AA5C <AmiBlitz3.ab3@28177>       actual_version.l = Peek.l(?versioninformation)
0003AA6C <AmiBlitz3.ab3@28178>       actual_build.l   = Peek.l(?number_of_builds)
0003AA90 <AmiBlitz3.ab3@28180>       Format ""
0003AAEA <AmiBlitz3.ab3@28181>       Select Mid$(newconst$,3,9)
0003AB0E <AmiBlitz3.ab3@28183>        Case "VER_MAJOR"
0003AB4A <AmiBlitz3.ab3@28184>         condata$ = Str$(actual_version LSR 24)
0003AB74 <AmiBlitz3.ab3@28186>        Case "VER_MINOR"
0003ABB8 <AmiBlitz3.ab3@28187>         condata$ = Str$((actual_version LSL 8) LSR 24)
0003ABE2 <AmiBlitz3.ab3@28189>        Case "VER_PATCH"
0003AC26 <AmiBlitz3.ab3@28190>         condata$ = Str$((actual_version LSL 16) LSR 24 )
0003AC50 <AmiBlitz3.ab3@28192>        Case "VER_BUILD"
0003AC74 <AmiBlitz3.ab3@28193>         Format ""
0003ACA8 <AmiBlitz3.ab3@28194>         condata$ = Str$(actual_build)
0003ACAE <AmiBlitz3.ab3@28196>        Default
0003ACD6 <AmiBlitz3.ab3@28197>         condata$ = "{unknown compiler constant}"
0003ACE4 <AmiBlitz3.ab3@28199>       End Select
0003AD08 <AmiBlitz3.ab3@28200>       Format ""
0003AD18 <AmiBlitz3.ab3@28201>       Poke.b ?skip_bytes,11
0003AD42 <AmiBlitz3.ab3@28203>      Case "THIS"
0003AD9C <AmiBlitz3.ab3@28204>       Select Mid$(newconst$,3,9)
0003ADC0 <AmiBlitz3.ab3@28206>        Case "THIS_FUNC"
0003ADD0 <AmiBlitz3.ab3@28207>         Poke.b ?skip_bytes,15
0003ADF0 <AmiBlitz3.ab3@28208>         If Peek.l(?currentfunction)<>0
0003AE3C <AmiBlitz3.ab3@28209>           condata$ = Peek.s(Peek.l(?currentfunction) + 32 + #funcentry_extend + 1)
0003AE42 <AmiBlitz3.ab3@28210>         Else
0003AE6A <AmiBlitz3.ab3@28211>           condata$ = "GLOBAL"
0003AE94 <AmiBlitz3.ab3@28214>        Case "THIS_INCL"
0003AEA4 <AmiBlitz3.ab3@28215>         Poke.b ?skip_bytes,14
0003AEC4 <AmiBlitz3.ab3@28216>         If Peek.l(?includetemp2)<>0
0003AF12 <AmiBlitz3.ab3@28217>           condata$ = dos_FilePart{Peek$(?includetemp2)}
0003AF3C <AmiBlitz3.ab3@28220>        Case "THIS_POIN"
0003AF4C <AmiBlitz3.ab3@28221>         Poke.b ?skip_bytes,14
0003AF6C <AmiBlitz3.ab3@28222>         If Peek.l(?currentfunction)<>0
0003AF9A <AmiBlitz3.ab3@28223>           condata$ = Hex$(Peek.l(?currentfunction))
0003AFA8 <AmiBlitz3.ab3@28226>       End Select
0003AFD2 <AmiBlitz3.ab3@28228>      Case "CODE"
0003AFE2 <AmiBlitz3.ab3@28229>       Poke.b ?skip_bytes,10
0003B044 <AmiBlitz3.ab3@28230>       If Mid$(newconst$,3,8) = "CODELINE"
0003B080 <AmiBlitz3.ab3@28231>         condata$ = Str$(Peek.l(?globallinecount))
0003B08E <AmiBlitz3.ab3@28234>     End Select
0003B094 <AmiBlitz3.ab3@28236>   Else
0003B0E8 <AmiBlitz3.ab3@28237>     Select Left$(newconst$,1)
0003B10C <AmiBlitz3.ab3@28239>      Case "R"
0003B11C <AmiBlitz3.ab3@28240>       Poke.b ?skip_bytes,3
0003B194 <AmiBlitz3.ab3@28241>       For i = 1 To Vallong(Mid$(newconst$,2,2))
0003B214 <AmiBlitz3.ab3@28242>         condata$ = condata$ + Mid$(newconst$,4,1)
0003B224 <AmiBlitz3.ab3@28243>       Next
0003B24E <AmiBlitz3.ab3@28245>      Case "N"
0003B25E <AmiBlitz3.ab3@28246>       Poke.b ?skip_bytes,1
0003B282 <AmiBlitz3.ab3@28247>       condata$ = Chr$(10)
0003B288 <AmiBlitz3.ab3@28249>      Default
0003B29A <AmiBlitz3.ab3@28250>       char1.b = Peek.b(&newconst$)
0003B2B2 <AmiBlitz3.ab3@28251>       char2.b = Peek.b(&newconst$+1)
0003B2BE <AmiBlitz3.ab3@28252>       nibble1.l = -1
0003B2CA <AmiBlitz3.ab3@28253>       nibble2.l = -1
0003B308 <AmiBlitz3.ab3@28255>       If (char1>=@"0" AND char1<=@"9") Then nibble1 = char1-@"0"
0003B346 <AmiBlitz3.ab3@28256>       If (char2>=@"0" AND char2<=@"9") Then nibble2 = char2-@"0"
0003B38A <AmiBlitz3.ab3@28258>       If (char1>=@"a" AND char1<=@"f") Then nibble1 = char1-@"a" + 10
0003B3CE <AmiBlitz3.ab3@28259>       If (char2>=@"a" AND char2<=@"f") Then nibble2 = char2-@"a" + 10
0003B412 <AmiBlitz3.ab3@28261>       If (char1>=@"A" AND char1<=@"F") Then nibble1 = char1-@"A" + 10
0003B456 <AmiBlitz3.ab3@28262>       If (char2>=@"A" AND char2<=@"F") Then nibble2 = char2-@"A" + 10
0003B47C <AmiBlitz3.ab3@28264>       If nibble1>=0 AND nibble2>=0
0003B492 <AmiBlitz3.ab3@28265>         newchar.l = (nibble1 LSL 4) + (nibble2)
0003B4B6 <AmiBlitz3.ab3@28266>         condata$ = Chr$(newchar)
0003B4C6 <AmiBlitz3.ab3@28267>         Poke.b ?skip_bytes,2
0003B4D4 <AmiBlitz3.ab3@28270>     End Select
0003B534 <AmiBlitz3.ab3@28272>   If condata$ = "" AND Peek.b(?skip_bytes)=0
0003B65A <AmiBlitz3.ab3@28273>     !cout{"detected unknown const: " + newconst$}
0003B68E <AmiBlitz3.ab3@28274>     condata$ = newconst$
0003B6A4 <AmiBlitz3.ab3@28277>   GetD0 FLen(condata$)-1                                    ; laenge zielstring -> Stack
0003B6A6 <AmiBlitz3.ab3@28278>   MOVE.l d0,d2
0003B6A8 <AmiBlitz3.ab3@28279>   MOVE.l d2,-(a7)
0003B6AE <AmiBlitz3.ab3@28281>   GetD0 &condata$                                          ; kopieren des neuen Strings in den Zielstring
0003B6B0 <AmiBlitz3.ab3@28282>   MOVE.l d0,a0
0003B6B2 <AmiBlitz3.ab3@28285>     MOVE.b (a0)+,d1
0003B6B8 <AmiBlitz3.ab3@28286>     JSR pokedata1b
0003B6BC <AmiBlitz3.ab3@28287>  DBF d2,'l1
0003B6DA <AmiBlitz3.ab3@28289>   !asm
0003B6DC <AmiBlitz3.ab3@28290>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
0003B6DE <AmiBlitz3.ab3@28291>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
0003B6E0 <AmiBlitz3.ab3@28292>   ADD.l d0,d2                                              ; eingefuegte chars zu D2 dazu
0003B6E6 <AmiBlitz3.ab3@28293>   ADD.l #1,d2
0003B6EC <AmiBlitz3.ab3@28295>   MOVE.l #0,d0                                             ; a5 um konstantennamen weiterschieben
0003B6F2 <AmiBlitz3.ab3@28296>   MOVE.b skip_bytes,D0
0003B6F4 <AmiBlitz3.ab3@28297>   ADD.l D0,a5
0003B6F6 <AmiBlitz3.ab3@28298> RTS
0003B6FA <AmiBlitz3.ab3@28373> MOVEM.l a3/d1,-(a7)
0003B700 <AmiBlitz3.ab3@28375> CLR.b a4a5store
0003B702 <AmiBlitz3.ab3@28376> 'continue: MOVE.b (a3)+,d1
0003B706 <AmiBlitz3.ab3@28377> CMP.b #$15,d1
0003B70A <AmiBlitz3.ab3@28378> BEQ 'find
0003B70E <AmiBlitz3.ab3@28379> CMP.b #$14,d1
0003B712 <AmiBlitz3.ab3@28380> BEQ 'find
0003B716 <AmiBlitz3.ab3@28381> CMP.b #$ff,d1
0003B71A <AmiBlitz3.ab3@28382> BNE 'continue
0003B71E <AmiBlitz3.ab3@28383> BRA 'notfind
0003B724 <AmiBlitz3.ab3@28385> MOVE.l #$48e7000c,d1                  ; write 68k movem.l a4/a5,-(a7)
0003B72A <AmiBlitz3.ab3@28386> JSR writelong
0003B732 <AmiBlitz3.ab3@28387> MOVE.b #1,a4a5store
0003B736 <AmiBlitz3.ab3@28388> 'notfind: MOVEM.l (a7)+,a3/d1
0003B738 <AmiBlitz3.ab3@28389> RTS
0003B73E <AmiBlitz3.ab3@28392> TST.b a4a5store
0003B742 <AmiBlitz3.ab3@28393> BEQ 'no
0003B748 <AmiBlitz3.ab3@28394> MOVE.l #$4cdf3000,d1                  ; write 68k movem.l (a7)+,a4/a5
0003B74E <AmiBlitz3.ab3@28395> JSR writelong
0003B754 <AmiBlitz3.ab3@28396> CLR.b a4a5store
0003B756 <AmiBlitz3.ab3@28397> 'no RTS
0003B756 <internal_commands.ab3@1> INCLUDE "internal_commands.ab3"
0003B75A <internal_commands.ab3@13> INCLUDE "internal_commands.ab3"
0003B75C <internal_commands.ab3@15> INCLUDE "internal_commands.ab3"
0003B764 <internal_commands.ab3@16> INCLUDE "internal_commands.ab3"
0003B770 <internal_commands.ab3@17> INCLUDE "internal_commands.ab3"
0003B774 <internal_commands.ab3@21> INCLUDE "internal_commands.ab3"
0003B776 <internal_commands.ab3@22> INCLUDE "internal_commands.ab3"
0003B77A <internal_commands.ab3@23> INCLUDE "internal_commands.ab3"
0003B7C3 <internal_commands.ab3@24> INCLUDE "internal_commands.ab3"
0003B7C4 <internal_commands.ab3@25> INCLUDE "internal_commands.ab3"
0003B7C8 <internal_commands.ab3@28> INCLUDE "internal_commands.ab3"
0003B7CA <internal_commands.ab3@29> INCLUDE "internal_commands.ab3"
0003B7CE <internal_commands.ab3@30> INCLUDE "internal_commands.ab3"
0003B7EA <internal_commands.ab3@31> INCLUDE "internal_commands.ab3"
0003B7EE <internal_commands.ab3@35> INCLUDE "internal_commands.ab3"
0003B7F0 <internal_commands.ab3@36> INCLUDE "internal_commands.ab3"
0003B7F4 <internal_commands.ab3@37> INCLUDE "internal_commands.ab3"
0003B851 <internal_commands.ab3@38> INCLUDE "internal_commands.ab3"
0003B852 <internal_commands.ab3@39> INCLUDE "internal_commands.ab3"
0003B856 <internal_commands.ab3@42> INCLUDE "internal_commands.ab3"
0003B858 <internal_commands.ab3@43> INCLUDE "internal_commands.ab3"
0003B85D <internal_commands.ab3@44> INCLUDE "internal_commands.ab3"
0003B86D <internal_commands.ab3@45> INCLUDE "internal_commands.ab3"
0003B86E <internal_commands.ab3@46> INCLUDE "internal_commands.ab3"
0003B872 <internal_commands.ab3@49> INCLUDE "internal_commands.ab3"
0003B874 <internal_commands.ab3@50> INCLUDE "internal_commands.ab3"
0003B87A <internal_commands.ab3@51> INCLUDE "internal_commands.ab3"
0003B88A <internal_commands.ab3@52> INCLUDE "internal_commands.ab3"
0003B88E <internal_commands.ab3@56> INCLUDE "internal_commands.ab3"
0003B890 <internal_commands.ab3@57> INCLUDE "internal_commands.ab3"
0003B897 <internal_commands.ab3@58> INCLUDE "internal_commands.ab3"
0003B898 <internal_commands.ab3@59> INCLUDE "internal_commands.ab3"
0003B89C <internal_commands.ab3@63> INCLUDE "internal_commands.ab3"
0003B89E <internal_commands.ab3@64> INCLUDE "internal_commands.ab3"
0003B8A8 <internal_commands.ab3@65> INCLUDE "internal_commands.ab3"
0003B8DB <internal_commands.ab3@66> INCLUDE "internal_commands.ab3"
0003B8DC <internal_commands.ab3@67> INCLUDE "internal_commands.ab3"
0003B8E0 <internal_commands.ab3@70> INCLUDE "internal_commands.ab3"
0003B8E2 <internal_commands.ab3@71> INCLUDE "internal_commands.ab3"
0003B8EB <internal_commands.ab3@72> INCLUDE "internal_commands.ab3"
0003B926 <internal_commands.ab3@73> INCLUDE "internal_commands.ab3"
0003B92A <internal_commands.ab3@77> INCLUDE "internal_commands.ab3"
0003B92C <internal_commands.ab3@78> INCLUDE "internal_commands.ab3"
0003B936 <internal_commands.ab3@79> INCLUDE "internal_commands.ab3"
0003B937 <internal_commands.ab3@80> INCLUDE "internal_commands.ab3"
0003B938 <internal_commands.ab3@81> INCLUDE "internal_commands.ab3"
0003B93C <internal_commands.ab3@84> INCLUDE "internal_commands.ab3"
0003B93E <internal_commands.ab3@85> INCLUDE "internal_commands.ab3"
0003B941 <internal_commands.ab3@86> INCLUDE "internal_commands.ab3"
0003B958 <internal_commands.ab3@87> INCLUDE "internal_commands.ab3"
0003B95C <internal_commands.ab3@91> INCLUDE "internal_commands.ab3"
0003B95E <internal_commands.ab3@92> INCLUDE "internal_commands.ab3"
0003B964 <internal_commands.ab3@93> INCLUDE "internal_commands.ab3"
0003B971 <internal_commands.ab3@94> INCLUDE "internal_commands.ab3"
0003B972 <internal_commands.ab3@95> INCLUDE "internal_commands.ab3"
0003B976 <internal_commands.ab3@98> INCLUDE "internal_commands.ab3"
0003B978 <internal_commands.ab3@99> INCLUDE "internal_commands.ab3"
0003B97E <internal_commands.ab3@100> INCLUDE "internal_commands.ab3"
0003B98A <internal_commands.ab3@101> INCLUDE "internal_commands.ab3"
0003B98E <internal_commands.ab3@105> INCLUDE "internal_commands.ab3"
0003B990 <internal_commands.ab3@106> INCLUDE "internal_commands.ab3"
0003B997 <internal_commands.ab3@107> INCLUDE "internal_commands.ab3"
0003B9A4 <internal_commands.ab3@108> INCLUDE "internal_commands.ab3"
0003B9A8 <internal_commands.ab3@112> INCLUDE "internal_commands.ab3"
0003B9AA <internal_commands.ab3@113> INCLUDE "internal_commands.ab3"
0003B9AF <internal_commands.ab3@114> INCLUDE "internal_commands.ab3"
0003B9BC <internal_commands.ab3@115> INCLUDE "internal_commands.ab3"
0003B9C0 <internal_commands.ab3@119> INCLUDE "internal_commands.ab3"
0003B9C2 <internal_commands.ab3@120> INCLUDE "internal_commands.ab3"
0003B9CA <internal_commands.ab3@121> INCLUDE "internal_commands.ab3"
0003B9CB <internal_commands.ab3@122> INCLUDE "internal_commands.ab3"
0003B9CC <internal_commands.ab3@123> INCLUDE "internal_commands.ab3"
0003B9D0 <internal_commands.ab3@126> INCLUDE "internal_commands.ab3"
0003B9D2 <internal_commands.ab3@127> INCLUDE "internal_commands.ab3"
0003B9DA <internal_commands.ab3@128> INCLUDE "internal_commands.ab3"
0003B9DB <internal_commands.ab3@129> INCLUDE "internal_commands.ab3"
0003B9DC <internal_commands.ab3@130> INCLUDE "internal_commands.ab3"
0003B9E0 <internal_commands.ab3@133> INCLUDE "internal_commands.ab3"
0003B9E2 <internal_commands.ab3@134> INCLUDE "internal_commands.ab3"
0003B9EB <internal_commands.ab3@135> INCLUDE "internal_commands.ab3"
0003B9F6 <internal_commands.ab3@136> INCLUDE "internal_commands.ab3"
0003B9FA <internal_commands.ab3@140> INCLUDE "internal_commands.ab3"
0003B9FC <internal_commands.ab3@141> INCLUDE "internal_commands.ab3"
0003BA04 <internal_commands.ab3@142> INCLUDE "internal_commands.ab3"
0003BA0F <internal_commands.ab3@143> INCLUDE "internal_commands.ab3"
0003BA10 <internal_commands.ab3@144> INCLUDE "internal_commands.ab3"
0003BA14 <internal_commands.ab3@147> INCLUDE "internal_commands.ab3"
0003BA16 <internal_commands.ab3@148> INCLUDE "internal_commands.ab3"
0003BA1D <internal_commands.ab3@149> INCLUDE "internal_commands.ab3"
0003BA7F <internal_commands.ab3@150> INCLUDE "internal_commands.ab3"
0003BA80 <internal_commands.ab3@151> INCLUDE "internal_commands.ab3"
0003BA84 <internal_commands.ab3@154> INCLUDE "internal_commands.ab3"
0003BA86 <internal_commands.ab3@155> INCLUDE "internal_commands.ab3"
0003BA8D <internal_commands.ab3@156> INCLUDE "internal_commands.ab3"
0003BA9C <internal_commands.ab3@157> INCLUDE "internal_commands.ab3"
0003BAA0 <internal_commands.ab3@161> INCLUDE "internal_commands.ab3"
0003BAA2 <internal_commands.ab3@162> INCLUDE "internal_commands.ab3"
0003BAA6 <internal_commands.ab3@163> INCLUDE "internal_commands.ab3"
0003BADC <internal_commands.ab3@164> INCLUDE "internal_commands.ab3"
0003BAE0 <internal_commands.ab3@168> INCLUDE "internal_commands.ab3"
0003BAE2 <internal_commands.ab3@169> INCLUDE "internal_commands.ab3"
0003BAE7 <internal_commands.ab3@170> INCLUDE "internal_commands.ab3"
0003BAF6 <internal_commands.ab3@171> INCLUDE "internal_commands.ab3"
0003BAFA <internal_commands.ab3@175> INCLUDE "internal_commands.ab3"
0003BAFC <internal_commands.ab3@176> INCLUDE "internal_commands.ab3"
0003BAFF <internal_commands.ab3@177> INCLUDE "internal_commands.ab3"
0003BB20 <internal_commands.ab3@178> INCLUDE "internal_commands.ab3"
0003BB24 <internal_commands.ab3@182> INCLUDE "internal_commands.ab3"
0003BB26 <internal_commands.ab3@183> INCLUDE "internal_commands.ab3"
0003BB2B <internal_commands.ab3@184> INCLUDE "internal_commands.ab3"
0003BB37 <internal_commands.ab3@185> INCLUDE "internal_commands.ab3"
0003BB38 <internal_commands.ab3@186> INCLUDE "internal_commands.ab3"
0003BB3C <internal_commands.ab3@189> INCLUDE "internal_commands.ab3"
0003BB3E <internal_commands.ab3@190> INCLUDE "internal_commands.ab3"
0003BB43 <internal_commands.ab3@191> INCLUDE "internal_commands.ab3"
0003BB5A <internal_commands.ab3@192> INCLUDE "internal_commands.ab3"
0003BB5E <internal_commands.ab3@196> INCLUDE "internal_commands.ab3"
0003BB60 <internal_commands.ab3@197> INCLUDE "internal_commands.ab3"
0003BB65 <internal_commands.ab3@198> INCLUDE "internal_commands.ab3"
0003BB74 <internal_commands.ab3@199> INCLUDE "internal_commands.ab3"
0003BB78 <internal_commands.ab3@203> INCLUDE "internal_commands.ab3"
0003BB7A <internal_commands.ab3@204> INCLUDE "internal_commands.ab3"
0003BB7F <internal_commands.ab3@205> INCLUDE "internal_commands.ab3"
0003BB9E <internal_commands.ab3@206> INCLUDE "internal_commands.ab3"
0003BBA2 <internal_commands.ab3@210> INCLUDE "internal_commands.ab3"
0003BBA4 <internal_commands.ab3@211> INCLUDE "internal_commands.ab3"
0003BBA9 <internal_commands.ab3@212> INCLUDE "internal_commands.ab3"
0003BBC8 <internal_commands.ab3@213> INCLUDE "internal_commands.ab3"
0003BBCC <internal_commands.ab3@217> INCLUDE "internal_commands.ab3"
0003BBCE <internal_commands.ab3@218> INCLUDE "internal_commands.ab3"
0003BBD4 <internal_commands.ab3@219> INCLUDE "internal_commands.ab3"
0003BBD5 <internal_commands.ab3@220> INCLUDE "internal_commands.ab3"
0003BBD6 <internal_commands.ab3@221> INCLUDE "internal_commands.ab3"
0003BBDA <internal_commands.ab3@224> INCLUDE "internal_commands.ab3"
0003BBDC <internal_commands.ab3@225> INCLUDE "internal_commands.ab3"
0003BBE1 <internal_commands.ab3@226> INCLUDE "internal_commands.ab3"
0003BBE2 <internal_commands.ab3@227> INCLUDE "internal_commands.ab3"
0003BBE6 <internal_commands.ab3@231> INCLUDE "internal_commands.ab3"
0003BBE8 <internal_commands.ab3@232> INCLUDE "internal_commands.ab3"
0003BBED <internal_commands.ab3@233> INCLUDE "internal_commands.ab3"
0003BBFA <internal_commands.ab3@234> INCLUDE "internal_commands.ab3"
0003BBFE <internal_commands.ab3@238> INCLUDE "internal_commands.ab3"
0003BC00 <internal_commands.ab3@239> INCLUDE "internal_commands.ab3"
0003BC05 <internal_commands.ab3@240> INCLUDE "internal_commands.ab3"
0003BC14 <internal_commands.ab3@241> INCLUDE "internal_commands.ab3"
0003BC18 <internal_commands.ab3@245> INCLUDE "internal_commands.ab3"
0003BC1A <internal_commands.ab3@246> INCLUDE "internal_commands.ab3"
0003BC1F <internal_commands.ab3@247> INCLUDE "internal_commands.ab3"
0003BC2E <internal_commands.ab3@248> INCLUDE "internal_commands.ab3"
0003BC32 <internal_commands.ab3@252> INCLUDE "internal_commands.ab3"
0003BC34 <internal_commands.ab3@253> INCLUDE "internal_commands.ab3"
0003BC3A <internal_commands.ab3@254> INCLUDE "internal_commands.ab3"
0003BC57 <internal_commands.ab3@255> INCLUDE "internal_commands.ab3"
0003BC58 <internal_commands.ab3@256> INCLUDE "internal_commands.ab3"
0003BC5C <internal_commands.ab3@259> INCLUDE "internal_commands.ab3"
0003BC5E <internal_commands.ab3@260> INCLUDE "internal_commands.ab3"
0003BC64 <internal_commands.ab3@261> INCLUDE "internal_commands.ab3"
0003BC81 <internal_commands.ab3@262> INCLUDE "internal_commands.ab3"
0003BC82 <internal_commands.ab3@263> INCLUDE "internal_commands.ab3"
0003BC86 <internal_commands.ab3@266> INCLUDE "internal_commands.ab3"
0003BC88 <internal_commands.ab3@267> INCLUDE "internal_commands.ab3"
0003BC8B <internal_commands.ab3@268> INCLUDE "internal_commands.ab3"
0003BCA2 <internal_commands.ab3@269> INCLUDE "internal_commands.ab3"
0003BCA6 <internal_commands.ab3@273> INCLUDE "internal_commands.ab3"
0003BCA8 <internal_commands.ab3@274> INCLUDE "internal_commands.ab3"
0003BCAB <internal_commands.ab3@275> INCLUDE "internal_commands.ab3"
0003BCBA <internal_commands.ab3@276> INCLUDE "internal_commands.ab3"
0003BCBE <internal_commands.ab3@280> INCLUDE "internal_commands.ab3"
0003BCC0 <internal_commands.ab3@281> INCLUDE "internal_commands.ab3"
0003BCC5 <internal_commands.ab3@282> INCLUDE "internal_commands.ab3"
0003BCC6 <internal_commands.ab3@283> INCLUDE "internal_commands.ab3"
0003BCCA <internal_commands.ab3@287> INCLUDE "internal_commands.ab3"
0003BCCC <internal_commands.ab3@288> INCLUDE "internal_commands.ab3"
0003BCD0 <internal_commands.ab3@289> INCLUDE "internal_commands.ab3"
0003BCE5 <internal_commands.ab3@290> INCLUDE "internal_commands.ab3"
0003BCE6 <internal_commands.ab3@291> INCLUDE "internal_commands.ab3"
0003BCEA <internal_commands.ab3@294> INCLUDE "internal_commands.ab3"
0003BCEC <internal_commands.ab3@295> INCLUDE "internal_commands.ab3"
0003BCF3 <internal_commands.ab3@296> INCLUDE "internal_commands.ab3"
0003BD0C <internal_commands.ab3@297> INCLUDE "internal_commands.ab3"
0003BD10 <internal_commands.ab3@301> INCLUDE "internal_commands.ab3"
0003BD12 <internal_commands.ab3@302> INCLUDE "internal_commands.ab3"
0003BD19 <internal_commands.ab3@303> INCLUDE "internal_commands.ab3"
0003BD24 <internal_commands.ab3@304> INCLUDE "internal_commands.ab3"
0003BD28 <internal_commands.ab3@308> INCLUDE "internal_commands.ab3"
0003BD2A <internal_commands.ab3@309> INCLUDE "internal_commands.ab3"
0003BD2F <internal_commands.ab3@310> INCLUDE "internal_commands.ab3"
0003BD46 <internal_commands.ab3@311> INCLUDE "internal_commands.ab3"
0003BD4A <internal_commands.ab3@315> INCLUDE "internal_commands.ab3"
0003BD4C <internal_commands.ab3@316> INCLUDE "internal_commands.ab3"
0003BD50 <internal_commands.ab3@317> INCLUDE "internal_commands.ab3"
0003BD67 <internal_commands.ab3@318> INCLUDE "internal_commands.ab3"
0003BD68 <internal_commands.ab3@319> INCLUDE "internal_commands.ab3"
0003BD6C <internal_commands.ab3@322> INCLUDE "internal_commands.ab3"
0003BD6E <internal_commands.ab3@323> INCLUDE "internal_commands.ab3"
0003BD73 <internal_commands.ab3@324> INCLUDE "internal_commands.ab3"
0003BD74 <internal_commands.ab3@325> INCLUDE "internal_commands.ab3"
0003BD78 <internal_commands.ab3@329> INCLUDE "internal_commands.ab3"
0003BD7A <internal_commands.ab3@330> INCLUDE "internal_commands.ab3"
0003BD7F <internal_commands.ab3@331> INCLUDE "internal_commands.ab3"
0003BD83 <internal_commands.ab3@332> INCLUDE "internal_commands.ab3"
0003BD84 <internal_commands.ab3@333> INCLUDE "internal_commands.ab3"
0003BD88 <internal_commands.ab3@336> INCLUDE "internal_commands.ab3"
0003BD8A <internal_commands.ab3@337> INCLUDE "internal_commands.ab3"
0003BD91 <internal_commands.ab3@338> INCLUDE "internal_commands.ab3"
0003BDA9 <internal_commands.ab3@339> INCLUDE "internal_commands.ab3"
0003BDAA <internal_commands.ab3@340> INCLUDE "internal_commands.ab3"
0003BDAE <internal_commands.ab3@343> INCLUDE "internal_commands.ab3"
0003BDB0 <internal_commands.ab3@344> INCLUDE "internal_commands.ab3"
0003BDB7 <internal_commands.ab3@345> INCLUDE "internal_commands.ab3"
0003BDBC <internal_commands.ab3@346> INCLUDE "internal_commands.ab3"
0003BDC0 <internal_commands.ab3@350> INCLUDE "internal_commands.ab3"
0003BDC2 <internal_commands.ab3@351> INCLUDE "internal_commands.ab3"
0003BDC9 <internal_commands.ab3@352> INCLUDE "internal_commands.ab3"
0003BDCE <internal_commands.ab3@353> INCLUDE "internal_commands.ab3"
0003BDD2 <internal_commands.ab3@357> INCLUDE "internal_commands.ab3"
0003BDD4 <internal_commands.ab3@358> INCLUDE "internal_commands.ab3"
0003BDDB <internal_commands.ab3@359> INCLUDE "internal_commands.ab3"
0003BDF6 <internal_commands.ab3@360> INCLUDE "internal_commands.ab3"
0003BDFA <internal_commands.ab3@364> INCLUDE "internal_commands.ab3"
0003BDFC <internal_commands.ab3@365> INCLUDE "internal_commands.ab3"
0003BE04 <internal_commands.ab3@366> INCLUDE "internal_commands.ab3"
0003BE1D <internal_commands.ab3@367> INCLUDE "internal_commands.ab3"
0003BE1E <internal_commands.ab3@368> INCLUDE "internal_commands.ab3"
0003BE22 <internal_commands.ab3@371> INCLUDE "internal_commands.ab3"
0003BE24 <internal_commands.ab3@372> INCLUDE "internal_commands.ab3"
0003BE2A <internal_commands.ab3@373> INCLUDE "internal_commands.ab3"
0003BE2B <internal_commands.ab3@374> INCLUDE "internal_commands.ab3"
0003BE2C <internal_commands.ab3@375> INCLUDE "internal_commands.ab3"
0003BE30 <internal_commands.ab3@378> INCLUDE "internal_commands.ab3"
0003BE32 <internal_commands.ab3@379> INCLUDE "internal_commands.ab3"
0003BE38 <internal_commands.ab3@380> INCLUDE "internal_commands.ab3"
0003BE39 <internal_commands.ab3@381> INCLUDE "internal_commands.ab3"
0003BE3A <internal_commands.ab3@382> INCLUDE "internal_commands.ab3"
0003BE3E <internal_commands.ab3@385> INCLUDE "internal_commands.ab3"
0003BE40 <internal_commands.ab3@386> INCLUDE "internal_commands.ab3"
0003BE47 <internal_commands.ab3@387> INCLUDE "internal_commands.ab3"
0003BE48 <internal_commands.ab3@388> INCLUDE "internal_commands.ab3"
0003BE4C <internal_commands.ab3@392> INCLUDE "internal_commands.ab3"
0003BE4E <internal_commands.ab3@393> INCLUDE "internal_commands.ab3"
0003BE54 <internal_commands.ab3@394> INCLUDE "internal_commands.ab3"
0003BE5D <internal_commands.ab3@395> INCLUDE "internal_commands.ab3"
0003BE5E <internal_commands.ab3@396> INCLUDE "internal_commands.ab3"
0003BE62 <internal_commands.ab3@399> INCLUDE "internal_commands.ab3"
0003BE64 <internal_commands.ab3@400> INCLUDE "internal_commands.ab3"
0003BE6C <internal_commands.ab3@401> INCLUDE "internal_commands.ab3"
0003BE79 <internal_commands.ab3@402> INCLUDE "internal_commands.ab3"
0003BE7A <internal_commands.ab3@403> INCLUDE "internal_commands.ab3"
0003BE7E <internal_commands.ab3@406> INCLUDE "internal_commands.ab3"
0003BE80 <internal_commands.ab3@407> INCLUDE "internal_commands.ab3"
0003BE88 <internal_commands.ab3@408> INCLUDE "internal_commands.ab3"
0003BE95 <internal_commands.ab3@409> INCLUDE "internal_commands.ab3"
0003BE96 <internal_commands.ab3@410> INCLUDE "internal_commands.ab3"
0003BE9A <internal_commands.ab3@413> INCLUDE "internal_commands.ab3"
0003BE9C <internal_commands.ab3@414> INCLUDE "internal_commands.ab3"
0003BEA4 <internal_commands.ab3@415> INCLUDE "internal_commands.ab3"
0003BEB1 <internal_commands.ab3@416> INCLUDE "internal_commands.ab3"
0003BEB2 <internal_commands.ab3@417> INCLUDE "internal_commands.ab3"
0003BEB6 <internal_commands.ab3@420> INCLUDE "internal_commands.ab3"
0003BEB8 <internal_commands.ab3@421> INCLUDE "internal_commands.ab3"
0003BEBD <internal_commands.ab3@422> INCLUDE "internal_commands.ab3"
0003BEBE <internal_commands.ab3@423> INCLUDE "internal_commands.ab3"
0003BEC2 <internal_commands.ab3@437> INCLUDE "internal_commands.ab3"
0003BEC4 <internal_commands.ab3@438> INCLUDE "internal_commands.ab3"
0003BEC9 <internal_commands.ab3@439> INCLUDE "internal_commands.ab3"
0003BECA <internal_commands.ab3@440> INCLUDE "internal_commands.ab3"
0003BECC <internal_commands.ab3@443> INCLUDE "internal_commands.ab3"
0003BED0 <internal_commands.ab3@444> INCLUDE "internal_commands.ab3"
0003BED2 <internal_commands.ab3@445> INCLUDE "internal_commands.ab3"
0003BED4 <internal_commands.ab3@446> INCLUDE "internal_commands.ab3"
0003BED8 <internal_commands.ab3@447> INCLUDE "internal_commands.ab3"
0003BEDA <internal_commands.ab3@448> INCLUDE "internal_commands.ab3"
0003BEDE <internal_commands.ab3@452> INCLUDE "internal_commands.ab3"
0003BEE0 <internal_commands.ab3@453> INCLUDE "internal_commands.ab3"
0003BEE4 <internal_commands.ab3@454> INCLUDE "internal_commands.ab3"
0003BEE5 <internal_commands.ab3@455> INCLUDE "internal_commands.ab3"
0003BEE6 <internal_commands.ab3@456> INCLUDE "internal_commands.ab3"
0003BEE8 <internal_commands.ab3@458> INCLUDE "internal_commands.ab3"
0003BEEC <internal_commands.ab3@459> INCLUDE "internal_commands.ab3"
0003BEEE <internal_commands.ab3@460> INCLUDE "internal_commands.ab3"
0003BEF0 <internal_commands.ab3@461> INCLUDE "internal_commands.ab3"
0003BEF4 <internal_commands.ab3@462> INCLUDE "internal_commands.ab3"
0003BEF6 <internal_commands.ab3@463> INCLUDE "internal_commands.ab3"
0003BEFA <internal_commands.ab3@467> INCLUDE "internal_commands.ab3"
0003BEFC <internal_commands.ab3@468> INCLUDE "internal_commands.ab3"
0003BF01 <internal_commands.ab3@469> INCLUDE "internal_commands.ab3"
0003BF02 <internal_commands.ab3@470> INCLUDE "internal_commands.ab3"
0003BF04 <internal_commands.ab3@473> INCLUDE "internal_commands.ab3"
0003BF08 <internal_commands.ab3@474> INCLUDE "internal_commands.ab3"
0003BF0A <internal_commands.ab3@475> INCLUDE "internal_commands.ab3"
0003BF0C <internal_commands.ab3@476> INCLUDE "internal_commands.ab3"
0003BF10 <internal_commands.ab3@477> INCLUDE "internal_commands.ab3"
0003BF12 <internal_commands.ab3@478> INCLUDE "internal_commands.ab3"
0003BF16 <internal_commands.ab3@482> INCLUDE "internal_commands.ab3"
0003BF18 <internal_commands.ab3@483> INCLUDE "internal_commands.ab3"
0003BF1D <internal_commands.ab3@484> INCLUDE "internal_commands.ab3"
0003BF1E <internal_commands.ab3@485> INCLUDE "internal_commands.ab3"
0003BF20 <internal_commands.ab3@488> INCLUDE "internal_commands.ab3"
0003BF24 <internal_commands.ab3@489> INCLUDE "internal_commands.ab3"
0003BF26 <internal_commands.ab3@490> INCLUDE "internal_commands.ab3"
0003BF28 <internal_commands.ab3@491> INCLUDE "internal_commands.ab3"
0003BF2C <internal_commands.ab3@492> INCLUDE "internal_commands.ab3"
0003BF2E <internal_commands.ab3@493> INCLUDE "internal_commands.ab3"
0003BF32 <internal_commands.ab3@497> INCLUDE "internal_commands.ab3"
0003BF34 <internal_commands.ab3@498> INCLUDE "internal_commands.ab3"
0003BF39 <internal_commands.ab3@499> INCLUDE "internal_commands.ab3"
0003BF3A <internal_commands.ab3@500> INCLUDE "internal_commands.ab3"
0003BF3C <internal_commands.ab3@503> INCLUDE "internal_commands.ab3"
0003BF40 <internal_commands.ab3@504> INCLUDE "internal_commands.ab3"
0003BF42 <internal_commands.ab3@505> INCLUDE "internal_commands.ab3"
0003BF44 <internal_commands.ab3@506> INCLUDE "internal_commands.ab3"
0003BF48 <internal_commands.ab3@507> INCLUDE "internal_commands.ab3"
0003BF4A <internal_commands.ab3@508> INCLUDE "internal_commands.ab3"
0003BF4E <internal_commands.ab3@512> INCLUDE "internal_commands.ab3"
0003BF50 <internal_commands.ab3@513> INCLUDE "internal_commands.ab3"
0003BF55 <internal_commands.ab3@514> INCLUDE "internal_commands.ab3"
0003BF56 <internal_commands.ab3@515> INCLUDE "internal_commands.ab3"
0003BF58 <internal_commands.ab3@518> INCLUDE "internal_commands.ab3"
0003BF5C <internal_commands.ab3@519> INCLUDE "internal_commands.ab3"
0003BF5E <internal_commands.ab3@520> INCLUDE "internal_commands.ab3"
0003BF60 <internal_commands.ab3@521> INCLUDE "internal_commands.ab3"
0003BF64 <internal_commands.ab3@522> INCLUDE "internal_commands.ab3"
0003BF66 <internal_commands.ab3@523> INCLUDE "internal_commands.ab3"
0003BF6A <internal_commands.ab3@527> INCLUDE "internal_commands.ab3"
0003BF6C <internal_commands.ab3@528> INCLUDE "internal_commands.ab3"
0003BF70 <internal_commands.ab3@529> INCLUDE "internal_commands.ab3"
0003BF71 <internal_commands.ab3@530> INCLUDE "internal_commands.ab3"
0003BF72 <internal_commands.ab3@531> INCLUDE "internal_commands.ab3"
0003BF74 <internal_commands.ab3@533> INCLUDE "internal_commands.ab3"
0003BF78 <internal_commands.ab3@534> INCLUDE "internal_commands.ab3"
0003BF7A <internal_commands.ab3@535> INCLUDE "internal_commands.ab3"
0003BF7C <internal_commands.ab3@536> INCLUDE "internal_commands.ab3"
0003BF80 <internal_commands.ab3@537> INCLUDE "internal_commands.ab3"
0003BF82 <internal_commands.ab3@538> INCLUDE "internal_commands.ab3"
0003BF86 <internal_commands.ab3@542> INCLUDE "internal_commands.ab3"
0003BF88 <internal_commands.ab3@543> INCLUDE "internal_commands.ab3"
0003BF8D <internal_commands.ab3@544> INCLUDE "internal_commands.ab3"
0003BF8E <internal_commands.ab3@545> INCLUDE "internal_commands.ab3"
0003BF90 <internal_commands.ab3@548> INCLUDE "internal_commands.ab3"
0003BF94 <internal_commands.ab3@549> INCLUDE "internal_commands.ab3"
0003BF96 <internal_commands.ab3@550> INCLUDE "internal_commands.ab3"
0003BF98 <internal_commands.ab3@551> INCLUDE "internal_commands.ab3"
0003BF9C <internal_commands.ab3@552> INCLUDE "internal_commands.ab3"
0003BF9E <internal_commands.ab3@553> INCLUDE "internal_commands.ab3"
0003BFA2 <internal_commands.ab3@557> INCLUDE "internal_commands.ab3"
0003BFA4 <internal_commands.ab3@558> INCLUDE "internal_commands.ab3"
0003BFA8 <internal_commands.ab3@559> INCLUDE "internal_commands.ab3"
0003BFA9 <internal_commands.ab3@560> INCLUDE "internal_commands.ab3"
0003BFAA <internal_commands.ab3@561> INCLUDE "internal_commands.ab3"
0003BFAC <internal_commands.ab3@563> INCLUDE "internal_commands.ab3"
0003BFB0 <internal_commands.ab3@564> INCLUDE "internal_commands.ab3"
0003BFB2 <internal_commands.ab3@565> INCLUDE "internal_commands.ab3"
0003BFB4 <internal_commands.ab3@566> INCLUDE "internal_commands.ab3"
0003BFB8 <internal_commands.ab3@567> INCLUDE "internal_commands.ab3"
0003BFBA <internal_commands.ab3@568> INCLUDE "internal_commands.ab3"
0003BFBE <internal_commands.ab3@572> INCLUDE "internal_commands.ab3"
0003BFC0 <internal_commands.ab3@573> INCLUDE "internal_commands.ab3"
0003BFC4 <internal_commands.ab3@574> INCLUDE "internal_commands.ab3"
0003BFC5 <internal_commands.ab3@575> INCLUDE "internal_commands.ab3"
0003BFC6 <internal_commands.ab3@576> INCLUDE "internal_commands.ab3"
0003BFC8 <internal_commands.ab3@578> INCLUDE "internal_commands.ab3"
0003BFCC <internal_commands.ab3@579> INCLUDE "internal_commands.ab3"
0003BFCE <internal_commands.ab3@580> INCLUDE "internal_commands.ab3"
0003BFD0 <internal_commands.ab3@581> INCLUDE "internal_commands.ab3"
0003BFD4 <internal_commands.ab3@582> INCLUDE "internal_commands.ab3"
0003BFD6 <internal_commands.ab3@583> INCLUDE "internal_commands.ab3"
0003BFDA <internal_commands.ab3@587> INCLUDE "internal_commands.ab3"
0003BFDC <internal_commands.ab3@588> INCLUDE "internal_commands.ab3"
0003BFE0 <internal_commands.ab3@589> INCLUDE "internal_commands.ab3"
0003BFE1 <internal_commands.ab3@590> INCLUDE "internal_commands.ab3"
0003BFE2 <internal_commands.ab3@591> INCLUDE "internal_commands.ab3"
0003BFE4 <internal_commands.ab3@593> INCLUDE "internal_commands.ab3"
0003BFE8 <internal_commands.ab3@594> INCLUDE "internal_commands.ab3"
0003BFEA <internal_commands.ab3@595> INCLUDE "internal_commands.ab3"
0003BFEC <internal_commands.ab3@596> INCLUDE "internal_commands.ab3"
0003BFF0 <internal_commands.ab3@597> INCLUDE "internal_commands.ab3"
0003BFF2 <internal_commands.ab3@598> INCLUDE "internal_commands.ab3"
0003BFF6 <internal_commands.ab3@602> INCLUDE "internal_commands.ab3"
0003BFF8 <internal_commands.ab3@603> INCLUDE "internal_commands.ab3"
0003BFFC <internal_commands.ab3@604> INCLUDE "internal_commands.ab3"
0003BFFD <internal_commands.ab3@605> INCLUDE "internal_commands.ab3"
0003BFFE <internal_commands.ab3@606> INCLUDE "internal_commands.ab3"
0003C000 <internal_commands.ab3@608> INCLUDE "internal_commands.ab3"
0003C004 <internal_commands.ab3@609> INCLUDE "internal_commands.ab3"
0003C006 <internal_commands.ab3@610> INCLUDE "internal_commands.ab3"
0003C008 <internal_commands.ab3@611> INCLUDE "internal_commands.ab3"
0003C00C <internal_commands.ab3@612> INCLUDE "internal_commands.ab3"
0003C00E <internal_commands.ab3@613> INCLUDE "internal_commands.ab3"
0003C012 <internal_commands.ab3@617> INCLUDE "internal_commands.ab3"
0003C014 <internal_commands.ab3@618> INCLUDE "internal_commands.ab3"
0003C018 <internal_commands.ab3@619> INCLUDE "internal_commands.ab3"
0003C019 <internal_commands.ab3@620> INCLUDE "internal_commands.ab3"
0003C01A <internal_commands.ab3@621> INCLUDE "internal_commands.ab3"
0003C01C <internal_commands.ab3@623> INCLUDE "internal_commands.ab3"
0003C020 <internal_commands.ab3@624> INCLUDE "internal_commands.ab3"
0003C022 <internal_commands.ab3@625> INCLUDE "internal_commands.ab3"
0003C024 <internal_commands.ab3@626> INCLUDE "internal_commands.ab3"
0003C028 <internal_commands.ab3@627> INCLUDE "internal_commands.ab3"
0003C02A <internal_commands.ab3@628> INCLUDE "internal_commands.ab3"
0003C02E <internal_commands.ab3@632> INCLUDE "internal_commands.ab3"
0003C030 <internal_commands.ab3@633> INCLUDE "internal_commands.ab3"
0003C034 <internal_commands.ab3@634> INCLUDE "internal_commands.ab3"
0003C035 <internal_commands.ab3@635> INCLUDE "internal_commands.ab3"
0003C036 <internal_commands.ab3@636> INCLUDE "internal_commands.ab3"
0003C038 <internal_commands.ab3@638> INCLUDE "internal_commands.ab3"
0003C03C <internal_commands.ab3@639> INCLUDE "internal_commands.ab3"
0003C03E <internal_commands.ab3@640> INCLUDE "internal_commands.ab3"
0003C040 <internal_commands.ab3@641> INCLUDE "internal_commands.ab3"
0003C044 <internal_commands.ab3@642> INCLUDE "internal_commands.ab3"
0003C046 <internal_commands.ab3@643> INCLUDE "internal_commands.ab3"
0003C04A <internal_commands.ab3@647> INCLUDE "internal_commands.ab3"
0003C04C <internal_commands.ab3@648> INCLUDE "internal_commands.ab3"
0003C050 <internal_commands.ab3@649> INCLUDE "internal_commands.ab3"
0003C051 <internal_commands.ab3@650> INCLUDE "internal_commands.ab3"
0003C052 <internal_commands.ab3@651> INCLUDE "internal_commands.ab3"
0003C054 <internal_commands.ab3@653> INCLUDE "internal_commands.ab3"
0003C058 <internal_commands.ab3@654> INCLUDE "internal_commands.ab3"
0003C05A <internal_commands.ab3@655> INCLUDE "internal_commands.ab3"
0003C05C <internal_commands.ab3@656> INCLUDE "internal_commands.ab3"
0003C060 <internal_commands.ab3@657> INCLUDE "internal_commands.ab3"
0003C062 <internal_commands.ab3@658> INCLUDE "internal_commands.ab3"
0003C066 <internal_commands.ab3@662> INCLUDE "internal_commands.ab3"
0003C068 <internal_commands.ab3@663> INCLUDE "internal_commands.ab3"
0003C06C <internal_commands.ab3@664> INCLUDE "internal_commands.ab3"
0003C06D <internal_commands.ab3@665> INCLUDE "internal_commands.ab3"
0003C06E <internal_commands.ab3@666> INCLUDE "internal_commands.ab3"
0003C070 <internal_commands.ab3@668> INCLUDE "internal_commands.ab3"
0003C074 <internal_commands.ab3@669> INCLUDE "internal_commands.ab3"
0003C076 <internal_commands.ab3@670> INCLUDE "internal_commands.ab3"
0003C078 <internal_commands.ab3@671> INCLUDE "internal_commands.ab3"
0003C07C <internal_commands.ab3@672> INCLUDE "internal_commands.ab3"
0003C07E <internal_commands.ab3@673> INCLUDE "internal_commands.ab3"
0003C082 <internal_commands.ab3@677> INCLUDE "internal_commands.ab3"
0003C084 <internal_commands.ab3@678> INCLUDE "internal_commands.ab3"
0003C088 <internal_commands.ab3@679> INCLUDE "internal_commands.ab3"
0003C089 <internal_commands.ab3@680> INCLUDE "internal_commands.ab3"
0003C08A <internal_commands.ab3@681> INCLUDE "internal_commands.ab3"
0003C08C <internal_commands.ab3@683> INCLUDE "internal_commands.ab3"
0003C090 <internal_commands.ab3@684> INCLUDE "internal_commands.ab3"
0003C092 <internal_commands.ab3@685> INCLUDE "internal_commands.ab3"
0003C094 <internal_commands.ab3@686> INCLUDE "internal_commands.ab3"
0003C098 <internal_commands.ab3@687> INCLUDE "internal_commands.ab3"
0003C09A <internal_commands.ab3@688> INCLUDE "internal_commands.ab3"
0003C09E <internal_commands.ab3@692> INCLUDE "internal_commands.ab3"
0003C0A0 <internal_commands.ab3@693> INCLUDE "internal_commands.ab3"
0003C0A4 <internal_commands.ab3@694> INCLUDE "internal_commands.ab3"
0003C0A5 <internal_commands.ab3@695> INCLUDE "internal_commands.ab3"
0003C0A6 <internal_commands.ab3@696> INCLUDE "internal_commands.ab3"
0003C0A8 <internal_commands.ab3@698> INCLUDE "internal_commands.ab3"
0003C0AC <internal_commands.ab3@699> INCLUDE "internal_commands.ab3"
0003C0AE <internal_commands.ab3@700> INCLUDE "internal_commands.ab3"
0003C0B0 <internal_commands.ab3@701> INCLUDE "internal_commands.ab3"
0003C0B4 <internal_commands.ab3@702> INCLUDE "internal_commands.ab3"
0003C0B6 <internal_commands.ab3@703> INCLUDE "internal_commands.ab3"
0003C0BA <internal_commands.ab3@707> INCLUDE "internal_commands.ab3"
0003C0BC <internal_commands.ab3@708> INCLUDE "internal_commands.ab3"
0003C0C0 <internal_commands.ab3@709> INCLUDE "internal_commands.ab3"
0003C0C1 <internal_commands.ab3@710> INCLUDE "internal_commands.ab3"
0003C0C2 <internal_commands.ab3@711> INCLUDE "internal_commands.ab3"
0003C0C4 <internal_commands.ab3@713> INCLUDE "internal_commands.ab3"
0003C0C8 <internal_commands.ab3@714> INCLUDE "internal_commands.ab3"
0003C0CA <internal_commands.ab3@715> INCLUDE "internal_commands.ab3"
0003C0CC <internal_commands.ab3@716> INCLUDE "internal_commands.ab3"
0003C0D0 <internal_commands.ab3@717> INCLUDE "internal_commands.ab3"
0003C0D2 <internal_commands.ab3@718> INCLUDE "internal_commands.ab3"
0003C0D6 <internal_commands.ab3@722> INCLUDE "internal_commands.ab3"
0003C0D8 <internal_commands.ab3@723> INCLUDE "internal_commands.ab3"
0003C0DC <internal_commands.ab3@724> INCLUDE "internal_commands.ab3"
0003C0DD <internal_commands.ab3@725> INCLUDE "internal_commands.ab3"
0003C0DE <internal_commands.ab3@726> INCLUDE "internal_commands.ab3"
0003C0E0 <internal_commands.ab3@728> INCLUDE "internal_commands.ab3"
0003C0E4 <internal_commands.ab3@729> INCLUDE "internal_commands.ab3"
0003C0E6 <internal_commands.ab3@730> INCLUDE "internal_commands.ab3"
0003C0E8 <internal_commands.ab3@731> INCLUDE "internal_commands.ab3"
0003C0EC <internal_commands.ab3@732> INCLUDE "internal_commands.ab3"
0003C0EE <internal_commands.ab3@733> INCLUDE "internal_commands.ab3"
0003C0F2 <internal_commands.ab3@737> INCLUDE "internal_commands.ab3"
0003C0F4 <internal_commands.ab3@738> INCLUDE "internal_commands.ab3"
0003C0F8 <internal_commands.ab3@739> INCLUDE "internal_commands.ab3"
0003C0F9 <internal_commands.ab3@740> INCLUDE "internal_commands.ab3"
0003C0FA <internal_commands.ab3@741> INCLUDE "internal_commands.ab3"
0003C0FC <internal_commands.ab3@743> INCLUDE "internal_commands.ab3"
0003C100 <internal_commands.ab3@744> INCLUDE "internal_commands.ab3"
0003C102 <internal_commands.ab3@745> INCLUDE "internal_commands.ab3"
0003C104 <internal_commands.ab3@746> INCLUDE "internal_commands.ab3"
0003C108 <internal_commands.ab3@747> INCLUDE "internal_commands.ab3"
0003C10A <internal_commands.ab3@748> INCLUDE "internal_commands.ab3"
0003C10E <internal_commands.ab3@752> INCLUDE "internal_commands.ab3"
0003C110 <internal_commands.ab3@753> INCLUDE "internal_commands.ab3"
0003C114 <internal_commands.ab3@754> INCLUDE "internal_commands.ab3"
0003C115 <internal_commands.ab3@755> INCLUDE "internal_commands.ab3"
0003C116 <internal_commands.ab3@756> INCLUDE "internal_commands.ab3"
0003C118 <internal_commands.ab3@758> INCLUDE "internal_commands.ab3"
0003C11C <internal_commands.ab3@759> INCLUDE "internal_commands.ab3"
0003C11E <internal_commands.ab3@760> INCLUDE "internal_commands.ab3"
0003C120 <internal_commands.ab3@761> INCLUDE "internal_commands.ab3"
0003C124 <internal_commands.ab3@762> INCLUDE "internal_commands.ab3"
0003C126 <internal_commands.ab3@763> INCLUDE "internal_commands.ab3"
0003C12A <internal_commands.ab3@767> INCLUDE "internal_commands.ab3"
0003C12C <internal_commands.ab3@768> INCLUDE "internal_commands.ab3"
0003C130 <internal_commands.ab3@769> INCLUDE "internal_commands.ab3"
0003C131 <internal_commands.ab3@770> INCLUDE "internal_commands.ab3"
0003C132 <internal_commands.ab3@771> INCLUDE "internal_commands.ab3"
0003C134 <internal_commands.ab3@773> INCLUDE "internal_commands.ab3"
0003C138 <internal_commands.ab3@774> INCLUDE "internal_commands.ab3"
0003C13A <internal_commands.ab3@775> INCLUDE "internal_commands.ab3"
0003C13C <internal_commands.ab3@776> INCLUDE "internal_commands.ab3"
0003C140 <internal_commands.ab3@777> INCLUDE "internal_commands.ab3"
0003C142 <internal_commands.ab3@778> INCLUDE "internal_commands.ab3"
0003C146 <internal_commands.ab3@782> INCLUDE "internal_commands.ab3"
0003C148 <internal_commands.ab3@783> INCLUDE "internal_commands.ab3"
0003C14C <internal_commands.ab3@784> INCLUDE "internal_commands.ab3"
0003C14D <internal_commands.ab3@785> INCLUDE "internal_commands.ab3"
0003C14E <internal_commands.ab3@786> INCLUDE "internal_commands.ab3"
0003C150 <internal_commands.ab3@788> INCLUDE "internal_commands.ab3"
0003C154 <internal_commands.ab3@789> INCLUDE "internal_commands.ab3"
0003C156 <internal_commands.ab3@790> INCLUDE "internal_commands.ab3"
0003C158 <internal_commands.ab3@791> INCLUDE "internal_commands.ab3"
0003C15C <internal_commands.ab3@792> INCLUDE "internal_commands.ab3"
0003C15E <internal_commands.ab3@793> INCLUDE "internal_commands.ab3"
0003C162 <internal_commands.ab3@797> INCLUDE "internal_commands.ab3"
0003C164 <internal_commands.ab3@798> INCLUDE "internal_commands.ab3"
0003C169 <internal_commands.ab3@799> INCLUDE "internal_commands.ab3"
0003C16A <internal_commands.ab3@800> INCLUDE "internal_commands.ab3"
0003C16C <internal_commands.ab3@803> INCLUDE "internal_commands.ab3"
0003C170 <internal_commands.ab3@804> INCLUDE "internal_commands.ab3"
0003C172 <internal_commands.ab3@805> INCLUDE "internal_commands.ab3"
0003C174 <internal_commands.ab3@806> INCLUDE "internal_commands.ab3"
0003C178 <internal_commands.ab3@807> INCLUDE "internal_commands.ab3"
0003C17A <internal_commands.ab3@808> INCLUDE "internal_commands.ab3"
0003C17E <internal_commands.ab3@812> INCLUDE "internal_commands.ab3"
0003C180 <internal_commands.ab3@813> INCLUDE "internal_commands.ab3"
0003C185 <internal_commands.ab3@814> INCLUDE "internal_commands.ab3"
0003C186 <internal_commands.ab3@815> INCLUDE "internal_commands.ab3"
0003C188 <internal_commands.ab3@818> INCLUDE "internal_commands.ab3"
0003C18C <internal_commands.ab3@819> INCLUDE "internal_commands.ab3"
0003C18E <internal_commands.ab3@820> INCLUDE "internal_commands.ab3"
0003C190 <internal_commands.ab3@821> INCLUDE "internal_commands.ab3"
0003C194 <internal_commands.ab3@822> INCLUDE "internal_commands.ab3"
0003C196 <internal_commands.ab3@823> INCLUDE "internal_commands.ab3"
0003C19A <internal_commands.ab3@827> INCLUDE "internal_commands.ab3"
0003C19C <internal_commands.ab3@828> INCLUDE "internal_commands.ab3"
0003C1A1 <internal_commands.ab3@829> INCLUDE "internal_commands.ab3"
0003C1A2 <internal_commands.ab3@830> INCLUDE "internal_commands.ab3"
0003C1A4 <internal_commands.ab3@833> INCLUDE "internal_commands.ab3"
0003C1A8 <internal_commands.ab3@834> INCLUDE "internal_commands.ab3"
0003C1AA <internal_commands.ab3@835> INCLUDE "internal_commands.ab3"
0003C1AC <internal_commands.ab3@836> INCLUDE "internal_commands.ab3"
0003C1B0 <internal_commands.ab3@837> INCLUDE "internal_commands.ab3"
0003C1B2 <internal_commands.ab3@838> INCLUDE "internal_commands.ab3"
0003C1B6 <internal_commands.ab3@842> INCLUDE "internal_commands.ab3"
0003C1B8 <internal_commands.ab3@843> INCLUDE "internal_commands.ab3"
0003C1BD <internal_commands.ab3@844> INCLUDE "internal_commands.ab3"
0003C1BE <internal_commands.ab3@845> INCLUDE "internal_commands.ab3"
0003C1C0 <internal_commands.ab3@848> INCLUDE "internal_commands.ab3"
0003C1C4 <internal_commands.ab3@849> INCLUDE "internal_commands.ab3"
0003C1C6 <internal_commands.ab3@850> INCLUDE "internal_commands.ab3"
0003C1C8 <internal_commands.ab3@851> INCLUDE "internal_commands.ab3"
0003C1CC <internal_commands.ab3@852> INCLUDE "internal_commands.ab3"
0003C1CE <internal_commands.ab3@853> INCLUDE "internal_commands.ab3"
0003C1D2 <internal_commands.ab3@857> INCLUDE "internal_commands.ab3"
0003C1D4 <internal_commands.ab3@858> INCLUDE "internal_commands.ab3"
0003C1D8 <internal_commands.ab3@859> INCLUDE "internal_commands.ab3"
0003C1D9 <internal_commands.ab3@860> INCLUDE "internal_commands.ab3"
0003C1DA <internal_commands.ab3@861> INCLUDE "internal_commands.ab3"
0003C1DC <internal_commands.ab3@863> INCLUDE "internal_commands.ab3"
0003C1E0 <internal_commands.ab3@864> INCLUDE "internal_commands.ab3"
0003C1E2 <internal_commands.ab3@865> INCLUDE "internal_commands.ab3"
0003C1E4 <internal_commands.ab3@866> INCLUDE "internal_commands.ab3"
0003C1E8 <internal_commands.ab3@867> INCLUDE "internal_commands.ab3"
0003C1EA <internal_commands.ab3@868> INCLUDE "internal_commands.ab3"
0003C1EE <internal_commands.ab3@872> INCLUDE "internal_commands.ab3"
0003C1F0 <internal_commands.ab3@873> INCLUDE "internal_commands.ab3"
0003C1F4 <internal_commands.ab3@874> INCLUDE "internal_commands.ab3"
0003C1F5 <internal_commands.ab3@875> INCLUDE "internal_commands.ab3"
0003C1F6 <internal_commands.ab3@876> INCLUDE "internal_commands.ab3"
0003C1F8 <internal_commands.ab3@878> INCLUDE "internal_commands.ab3"
0003C1FC <internal_commands.ab3@879> INCLUDE "internal_commands.ab3"
0003C1FE <internal_commands.ab3@880> INCLUDE "internal_commands.ab3"
0003C200 <internal_commands.ab3@881> INCLUDE "internal_commands.ab3"
0003C204 <internal_commands.ab3@882> INCLUDE "internal_commands.ab3"
0003C206 <internal_commands.ab3@883> INCLUDE "internal_commands.ab3"
0003C20A <internal_commands.ab3@887> INCLUDE "internal_commands.ab3"
0003C20C <internal_commands.ab3@888> INCLUDE "internal_commands.ab3"
0003C210 <internal_commands.ab3@889> INCLUDE "internal_commands.ab3"
0003C211 <internal_commands.ab3@890> INCLUDE "internal_commands.ab3"
0003C212 <internal_commands.ab3@891> INCLUDE "internal_commands.ab3"
0003C214 <internal_commands.ab3@893> INCLUDE "internal_commands.ab3"
0003C218 <internal_commands.ab3@894> INCLUDE "internal_commands.ab3"
0003C21A <internal_commands.ab3@895> INCLUDE "internal_commands.ab3"
0003C21C <internal_commands.ab3@896> INCLUDE "internal_commands.ab3"
0003C220 <internal_commands.ab3@897> INCLUDE "internal_commands.ab3"
0003C222 <internal_commands.ab3@898> INCLUDE "internal_commands.ab3"
0003C226 <internal_commands.ab3@902> INCLUDE "internal_commands.ab3"
0003C228 <internal_commands.ab3@903> INCLUDE "internal_commands.ab3"
0003C22C <internal_commands.ab3@904> INCLUDE "internal_commands.ab3"
0003C22D <internal_commands.ab3@905> INCLUDE "internal_commands.ab3"
0003C22E <internal_commands.ab3@906> INCLUDE "internal_commands.ab3"
0003C230 <internal_commands.ab3@908> INCLUDE "internal_commands.ab3"
0003C234 <internal_commands.ab3@909> INCLUDE "internal_commands.ab3"
0003C236 <internal_commands.ab3@910> INCLUDE "internal_commands.ab3"
0003C238 <internal_commands.ab3@911> INCLUDE "internal_commands.ab3"
0003C23C <internal_commands.ab3@912> INCLUDE "internal_commands.ab3"
0003C23E <internal_commands.ab3@913> INCLUDE "internal_commands.ab3"
0003C242 <internal_commands.ab3@917> INCLUDE "internal_commands.ab3"
0003C244 <internal_commands.ab3@918> INCLUDE "internal_commands.ab3"
0003C248 <internal_commands.ab3@919> INCLUDE "internal_commands.ab3"
0003C249 <internal_commands.ab3@920> INCLUDE "internal_commands.ab3"
0003C24A <internal_commands.ab3@921> INCLUDE "internal_commands.ab3"
0003C24C <internal_commands.ab3@923> INCLUDE "internal_commands.ab3"
0003C250 <internal_commands.ab3@924> INCLUDE "internal_commands.ab3"
0003C252 <internal_commands.ab3@925> INCLUDE "internal_commands.ab3"
0003C254 <internal_commands.ab3@926> INCLUDE "internal_commands.ab3"
0003C258 <internal_commands.ab3@927> INCLUDE "internal_commands.ab3"
0003C25A <internal_commands.ab3@928> INCLUDE "internal_commands.ab3"
0003C25E <internal_commands.ab3@932> INCLUDE "internal_commands.ab3"
0003C260 <internal_commands.ab3@933> INCLUDE "internal_commands.ab3"
0003C265 <internal_commands.ab3@934> INCLUDE "internal_commands.ab3"
0003C266 <internal_commands.ab3@935> INCLUDE "internal_commands.ab3"
0003C268 <internal_commands.ab3@938> INCLUDE "internal_commands.ab3"
0003C26C <internal_commands.ab3@939> INCLUDE "internal_commands.ab3"
0003C26E <internal_commands.ab3@940> INCLUDE "internal_commands.ab3"
0003C270 <internal_commands.ab3@941> INCLUDE "internal_commands.ab3"
0003C274 <internal_commands.ab3@942> INCLUDE "internal_commands.ab3"
0003C276 <internal_commands.ab3@943> INCLUDE "internal_commands.ab3"
0003C27A <internal_commands.ab3@947> INCLUDE "internal_commands.ab3"
0003C27C <internal_commands.ab3@948> INCLUDE "internal_commands.ab3"
0003C281 <internal_commands.ab3@949> INCLUDE "internal_commands.ab3"
0003C282 <internal_commands.ab3@950> INCLUDE "internal_commands.ab3"
0003C284 <internal_commands.ab3@953> INCLUDE "internal_commands.ab3"
0003C288 <internal_commands.ab3@954> INCLUDE "internal_commands.ab3"
0003C28A <internal_commands.ab3@955> INCLUDE "internal_commands.ab3"
0003C28C <internal_commands.ab3@956> INCLUDE "internal_commands.ab3"
0003C290 <internal_commands.ab3@957> INCLUDE "internal_commands.ab3"
0003C292 <internal_commands.ab3@958> INCLUDE "internal_commands.ab3"
0003C296 <internal_commands.ab3@962> INCLUDE "internal_commands.ab3"
0003C298 <internal_commands.ab3@963> INCLUDE "internal_commands.ab3"
0003C29D <internal_commands.ab3@964> INCLUDE "internal_commands.ab3"
0003C29E <internal_commands.ab3@965> INCLUDE "internal_commands.ab3"
0003C2A0 <internal_commands.ab3@968> INCLUDE "internal_commands.ab3"
0003C2A4 <internal_commands.ab3@969> INCLUDE "internal_commands.ab3"
0003C2A6 <internal_commands.ab3@970> INCLUDE "internal_commands.ab3"
0003C2A8 <internal_commands.ab3@971> INCLUDE "internal_commands.ab3"
0003C2AC <internal_commands.ab3@972> INCLUDE "internal_commands.ab3"
0003C2AE <internal_commands.ab3@973> INCLUDE "internal_commands.ab3"
0003C2B2 <internal_commands.ab3@977> INCLUDE "internal_commands.ab3"
0003C2B4 <internal_commands.ab3@978> INCLUDE "internal_commands.ab3"
0003C2B9 <internal_commands.ab3@979> INCLUDE "internal_commands.ab3"
0003C2BA <internal_commands.ab3@980> INCLUDE "internal_commands.ab3"
0003C2BC <internal_commands.ab3@983> INCLUDE "internal_commands.ab3"
0003C2C0 <internal_commands.ab3@984> INCLUDE "internal_commands.ab3"
0003C2C2 <internal_commands.ab3@985> INCLUDE "internal_commands.ab3"
0003C2C4 <internal_commands.ab3@986> INCLUDE "internal_commands.ab3"
0003C2C8 <internal_commands.ab3@987> INCLUDE "internal_commands.ab3"
0003C2CA <internal_commands.ab3@988> INCLUDE "internal_commands.ab3"
0003C2CE <internal_commands.ab3@992> INCLUDE "internal_commands.ab3"
0003C2D0 <internal_commands.ab3@993> INCLUDE "internal_commands.ab3"
0003C2D5 <internal_commands.ab3@994> INCLUDE "internal_commands.ab3"
0003C2D6 <internal_commands.ab3@995> INCLUDE "internal_commands.ab3"
0003C2D8 <internal_commands.ab3@998> INCLUDE "internal_commands.ab3"
0003C2DC <internal_commands.ab3@999> INCLUDE "internal_commands.ab3"
0003C2DE <internal_commands.ab3@1000> INCLUDE "internal_commands.ab3"
0003C2E0 <internal_commands.ab3@1001> INCLUDE "internal_commands.ab3"
0003C2E4 <internal_commands.ab3@1002> INCLUDE "internal_commands.ab3"
0003C2E6 <internal_commands.ab3@1003> INCLUDE "internal_commands.ab3"
0003C2EA <internal_commands.ab3@1007> INCLUDE "internal_commands.ab3"
0003C2EC <internal_commands.ab3@1008> INCLUDE "internal_commands.ab3"
0003C2F1 <internal_commands.ab3@1009> INCLUDE "internal_commands.ab3"
0003C2F2 <internal_commands.ab3@1010> INCLUDE "internal_commands.ab3"
0003C2F4 <internal_commands.ab3@1013> INCLUDE "internal_commands.ab3"
0003C2F8 <internal_commands.ab3@1014> INCLUDE "internal_commands.ab3"
0003C2FA <internal_commands.ab3@1015> INCLUDE "internal_commands.ab3"
0003C2FC <internal_commands.ab3@1016> INCLUDE "internal_commands.ab3"
0003C300 <internal_commands.ab3@1017> INCLUDE "internal_commands.ab3"
0003C302 <internal_commands.ab3@1018> INCLUDE "internal_commands.ab3"
0003C306 <internal_commands.ab3@1022> INCLUDE "internal_commands.ab3"
0003C308 <internal_commands.ab3@1023> INCLUDE "internal_commands.ab3"
0003C30D <internal_commands.ab3@1024> INCLUDE "internal_commands.ab3"
0003C30E <internal_commands.ab3@1025> INCLUDE "internal_commands.ab3"
0003C310 <internal_commands.ab3@1028> INCLUDE "internal_commands.ab3"
0003C314 <internal_commands.ab3@1029> INCLUDE "internal_commands.ab3"
0003C316 <internal_commands.ab3@1030> INCLUDE "internal_commands.ab3"
0003C318 <internal_commands.ab3@1031> INCLUDE "internal_commands.ab3"
0003C31C <internal_commands.ab3@1032> INCLUDE "internal_commands.ab3"
0003C31E <internal_commands.ab3@1033> INCLUDE "internal_commands.ab3"
0003C322 <internal_commands.ab3@1037> INCLUDE "internal_commands.ab3"
0003C324 <internal_commands.ab3@1038> INCLUDE "internal_commands.ab3"
0003C329 <internal_commands.ab3@1039> INCLUDE "internal_commands.ab3"
0003C32A <internal_commands.ab3@1040> INCLUDE "internal_commands.ab3"
0003C32C <internal_commands.ab3@1043> INCLUDE "internal_commands.ab3"
0003C330 <internal_commands.ab3@1044> INCLUDE "internal_commands.ab3"
0003C332 <internal_commands.ab3@1045> INCLUDE "internal_commands.ab3"
0003C334 <internal_commands.ab3@1046> INCLUDE "internal_commands.ab3"
0003C338 <internal_commands.ab3@1047> INCLUDE "internal_commands.ab3"
0003C33A <internal_commands.ab3@1048> INCLUDE "internal_commands.ab3"
0003C33E <internal_commands.ab3@1052> INCLUDE "internal_commands.ab3"
0003C340 <internal_commands.ab3@1053> INCLUDE "internal_commands.ab3"
0003C345 <internal_commands.ab3@1054> INCLUDE "internal_commands.ab3"
0003C346 <internal_commands.ab3@1055> INCLUDE "internal_commands.ab3"
0003C348 <internal_commands.ab3@1058> INCLUDE "internal_commands.ab3"
0003C34C <internal_commands.ab3@1059> INCLUDE "internal_commands.ab3"
0003C34E <internal_commands.ab3@1060> INCLUDE "internal_commands.ab3"
0003C350 <internal_commands.ab3@1061> INCLUDE "internal_commands.ab3"
0003C354 <internal_commands.ab3@1062> INCLUDE "internal_commands.ab3"
0003C356 <internal_commands.ab3@1063> INCLUDE "internal_commands.ab3"
0003C35A <internal_commands.ab3@1067> INCLUDE "internal_commands.ab3"
0003C35C <internal_commands.ab3@1068> INCLUDE "internal_commands.ab3"
0003C361 <internal_commands.ab3@1069> INCLUDE "internal_commands.ab3"
0003C362 <internal_commands.ab3@1070> INCLUDE "internal_commands.ab3"
0003C364 <internal_commands.ab3@1073> INCLUDE "internal_commands.ab3"
0003C368 <internal_commands.ab3@1074> INCLUDE "internal_commands.ab3"
0003C36A <internal_commands.ab3@1075> INCLUDE "internal_commands.ab3"
0003C36C <internal_commands.ab3@1076> INCLUDE "internal_commands.ab3"
0003C370 <internal_commands.ab3@1077> INCLUDE "internal_commands.ab3"
0003C372 <internal_commands.ab3@1078> INCLUDE "internal_commands.ab3"
0003C376 <internal_commands.ab3@1082> INCLUDE "internal_commands.ab3"
0003C378 <internal_commands.ab3@1083> INCLUDE "internal_commands.ab3"
0003C37D <internal_commands.ab3@1084> INCLUDE "internal_commands.ab3"
0003C37E <internal_commands.ab3@1085> INCLUDE "internal_commands.ab3"
0003C380 <internal_commands.ab3@1088> INCLUDE "internal_commands.ab3"
0003C384 <internal_commands.ab3@1089> INCLUDE "internal_commands.ab3"
0003C386 <internal_commands.ab3@1090> INCLUDE "internal_commands.ab3"
0003C388 <internal_commands.ab3@1091> INCLUDE "internal_commands.ab3"
0003C38C <internal_commands.ab3@1092> INCLUDE "internal_commands.ab3"
0003C38E <internal_commands.ab3@1093> INCLUDE "internal_commands.ab3"
0003C392 <internal_commands.ab3@1097> INCLUDE "internal_commands.ab3"
0003C394 <internal_commands.ab3@1098> INCLUDE "internal_commands.ab3"
0003C399 <internal_commands.ab3@1099> INCLUDE "internal_commands.ab3"
0003C39A <internal_commands.ab3@1100> INCLUDE "internal_commands.ab3"
0003C39C <internal_commands.ab3@1103> INCLUDE "internal_commands.ab3"
0003C3A0 <internal_commands.ab3@1104> INCLUDE "internal_commands.ab3"
0003C3A2 <internal_commands.ab3@1105> INCLUDE "internal_commands.ab3"
0003C3A4 <internal_commands.ab3@1106> INCLUDE "internal_commands.ab3"
0003C3A8 <internal_commands.ab3@1107> INCLUDE "internal_commands.ab3"
0003C3AA <internal_commands.ab3@1108> INCLUDE "internal_commands.ab3"
0003C3AE <internal_commands.ab3@1112> INCLUDE "internal_commands.ab3"
0003C3B0 <internal_commands.ab3@1113> INCLUDE "internal_commands.ab3"
0003C3B5 <internal_commands.ab3@1114> INCLUDE "internal_commands.ab3"
0003C3B6 <internal_commands.ab3@1115> INCLUDE "internal_commands.ab3"
0003C3B8 <internal_commands.ab3@1118> INCLUDE "internal_commands.ab3"
0003C3BC <internal_commands.ab3@1119> INCLUDE "internal_commands.ab3"
0003C3BE <internal_commands.ab3@1120> INCLUDE "internal_commands.ab3"
0003C3C0 <internal_commands.ab3@1121> INCLUDE "internal_commands.ab3"
0003C3C4 <internal_commands.ab3@1122> INCLUDE "internal_commands.ab3"
0003C3C6 <internal_commands.ab3@1123> INCLUDE "internal_commands.ab3"
0003C3CA <internal_commands.ab3@1127> INCLUDE "internal_commands.ab3"
0003C3CC <internal_commands.ab3@1128> INCLUDE "internal_commands.ab3"
0003C3D1 <internal_commands.ab3@1129> INCLUDE "internal_commands.ab3"
0003C3D2 <internal_commands.ab3@1130> INCLUDE "internal_commands.ab3"
0003C3D4 <internal_commands.ab3@1133> INCLUDE "internal_commands.ab3"
0003C3D8 <internal_commands.ab3@1134> INCLUDE "internal_commands.ab3"
0003C3DA <internal_commands.ab3@1135> INCLUDE "internal_commands.ab3"
0003C3DC <internal_commands.ab3@1136> INCLUDE "internal_commands.ab3"
0003C3E0 <internal_commands.ab3@1137> INCLUDE "internal_commands.ab3"
0003C3E2 <internal_commands.ab3@1138> INCLUDE "internal_commands.ab3"
0003C3E6 <internal_commands.ab3@1142> INCLUDE "internal_commands.ab3"
0003C3E8 <internal_commands.ab3@1143> INCLUDE "internal_commands.ab3"
0003C3ED <internal_commands.ab3@1144> INCLUDE "internal_commands.ab3"
0003C3EE <internal_commands.ab3@1145> INCLUDE "internal_commands.ab3"
0003C3F0 <internal_commands.ab3@1148> INCLUDE "internal_commands.ab3"
0003C3F4 <internal_commands.ab3@1149> INCLUDE "internal_commands.ab3"
0003C3F6 <internal_commands.ab3@1150> INCLUDE "internal_commands.ab3"
0003C3F8 <internal_commands.ab3@1151> INCLUDE "internal_commands.ab3"
0003C3FC <internal_commands.ab3@1152> INCLUDE "internal_commands.ab3"
0003C3FE <internal_commands.ab3@1153> INCLUDE "internal_commands.ab3"
0003C402 <internal_commands.ab3@1157> INCLUDE "internal_commands.ab3"
0003C404 <internal_commands.ab3@1158> INCLUDE "internal_commands.ab3"
0003C409 <internal_commands.ab3@1159> INCLUDE "internal_commands.ab3"
0003C40A <internal_commands.ab3@1160> INCLUDE "internal_commands.ab3"
0003C40C <internal_commands.ab3@1163> INCLUDE "internal_commands.ab3"
0003C410 <internal_commands.ab3@1164> INCLUDE "internal_commands.ab3"
0003C412 <internal_commands.ab3@1165> INCLUDE "internal_commands.ab3"
0003C414 <internal_commands.ab3@1166> INCLUDE "internal_commands.ab3"
0003C418 <internal_commands.ab3@1167> INCLUDE "internal_commands.ab3"
0003C41A <internal_commands.ab3@1168> INCLUDE "internal_commands.ab3"
0003C41E <internal_commands.ab3@1172> INCLUDE "internal_commands.ab3"
0003C420 <internal_commands.ab3@1173> INCLUDE "internal_commands.ab3"
0003C425 <internal_commands.ab3@1174> INCLUDE "internal_commands.ab3"
0003C426 <internal_commands.ab3@1175> INCLUDE "internal_commands.ab3"
0003C428 <internal_commands.ab3@1178> INCLUDE "internal_commands.ab3"
0003C42C <internal_commands.ab3@1179> INCLUDE "internal_commands.ab3"
0003C42E <internal_commands.ab3@1180> INCLUDE "internal_commands.ab3"
0003C430 <internal_commands.ab3@1181> INCLUDE "internal_commands.ab3"
0003C434 <internal_commands.ab3@1182> INCLUDE "internal_commands.ab3"
0003C436 <internal_commands.ab3@1183> INCLUDE "internal_commands.ab3"
0003C43A <internal_commands.ab3@1186> INCLUDE "internal_commands.ab3"
0003C43C <internal_commands.ab3@1187> INCLUDE "internal_commands.ab3"
0003C440 <internal_commands.ab3@1188> INCLUDE "internal_commands.ab3"
0003C441 <internal_commands.ab3@1189> INCLUDE "internal_commands.ab3"
0003C442 <internal_commands.ab3@1190> INCLUDE "internal_commands.ab3"
0003C444 <internal_commands.ab3@1192> INCLUDE "internal_commands.ab3"
0003C448 <internal_commands.ab3@1193> INCLUDE "internal_commands.ab3"
0003C44A <internal_commands.ab3@1194> INCLUDE "internal_commands.ab3"
0003C44C <internal_commands.ab3@1195> INCLUDE "internal_commands.ab3"
0003C450 <internal_commands.ab3@1196> INCLUDE "internal_commands.ab3"
0003C452 <internal_commands.ab3@1197> INCLUDE "internal_commands.ab3"
0003C456 <internal_commands.ab3@1201> INCLUDE "internal_commands.ab3"
0003C458 <internal_commands.ab3@1202> INCLUDE "internal_commands.ab3"
0003C45D <internal_commands.ab3@1203> INCLUDE "internal_commands.ab3"
0003C45E <internal_commands.ab3@1204> INCLUDE "internal_commands.ab3"
0003C460 <internal_commands.ab3@1207> INCLUDE "internal_commands.ab3"
0003C464 <internal_commands.ab3@1208> INCLUDE "internal_commands.ab3"
0003C466 <internal_commands.ab3@1209> INCLUDE "internal_commands.ab3"
0003C468 <internal_commands.ab3@1210> INCLUDE "internal_commands.ab3"
0003C46C <internal_commands.ab3@1211> INCLUDE "internal_commands.ab3"
0003C46E <internal_commands.ab3@1212> INCLUDE "internal_commands.ab3"
0003C472 <internal_commands.ab3@1216> INCLUDE "internal_commands.ab3"
0003C474 <internal_commands.ab3@1217> INCLUDE "internal_commands.ab3"
0003C478 <internal_commands.ab3@1218> INCLUDE "internal_commands.ab3"
0003C479 <internal_commands.ab3@1219> INCLUDE "internal_commands.ab3"
0003C47A <internal_commands.ab3@1220> INCLUDE "internal_commands.ab3"
0003C47C <internal_commands.ab3@1222> INCLUDE "internal_commands.ab3"
0003C480 <internal_commands.ab3@1223> INCLUDE "internal_commands.ab3"
0003C482 <internal_commands.ab3@1224> INCLUDE "internal_commands.ab3"
0003C484 <internal_commands.ab3@1225> INCLUDE "internal_commands.ab3"
0003C488 <internal_commands.ab3@1226> INCLUDE "internal_commands.ab3"
0003C48A <internal_commands.ab3@1227> INCLUDE "internal_commands.ab3"
0003C48E <internal_commands.ab3@1231> INCLUDE "internal_commands.ab3"
0003C490 <internal_commands.ab3@1232> INCLUDE "internal_commands.ab3"
0003C495 <internal_commands.ab3@1233> INCLUDE "internal_commands.ab3"
0003C496 <internal_commands.ab3@1234> INCLUDE "internal_commands.ab3"
0003C498 <internal_commands.ab3@1237> INCLUDE "internal_commands.ab3"
0003C49C <internal_commands.ab3@1238> INCLUDE "internal_commands.ab3"
0003C49E <internal_commands.ab3@1239> INCLUDE "internal_commands.ab3"
0003C4A0 <internal_commands.ab3@1240> INCLUDE "internal_commands.ab3"
0003C4A4 <internal_commands.ab3@1241> INCLUDE "internal_commands.ab3"
0003C4A6 <internal_commands.ab3@1242> INCLUDE "internal_commands.ab3"
0003C4AA <internal_commands.ab3@1246> INCLUDE "internal_commands.ab3"
0003C4AC <internal_commands.ab3@1247> INCLUDE "internal_commands.ab3"
0003C4B1 <internal_commands.ab3@1248> INCLUDE "internal_commands.ab3"
0003C4B2 <internal_commands.ab3@1249> INCLUDE "internal_commands.ab3"
0003C4B4 <internal_commands.ab3@1252> INCLUDE "internal_commands.ab3"
0003C4B8 <internal_commands.ab3@1253> INCLUDE "internal_commands.ab3"
0003C4BA <internal_commands.ab3@1254> INCLUDE "internal_commands.ab3"
0003C4BC <internal_commands.ab3@1255> INCLUDE "internal_commands.ab3"
0003C4C0 <internal_commands.ab3@1256> INCLUDE "internal_commands.ab3"
0003C4C2 <internal_commands.ab3@1257> INCLUDE "internal_commands.ab3"
0003C4C6 <internal_commands.ab3@1261> INCLUDE "internal_commands.ab3"
0003C4C8 <internal_commands.ab3@1262> INCLUDE "internal_commands.ab3"
0003C4CC <internal_commands.ab3@1263> INCLUDE "internal_commands.ab3"
0003C4CD <internal_commands.ab3@1264> INCLUDE "internal_commands.ab3"
0003C4CE <internal_commands.ab3@1265> INCLUDE "internal_commands.ab3"
0003C4D0 <internal_commands.ab3@1267> INCLUDE "internal_commands.ab3"
0003C4D4 <internal_commands.ab3@1268> INCLUDE "internal_commands.ab3"
0003C4D6 <internal_commands.ab3@1269> INCLUDE "internal_commands.ab3"
0003C4D8 <internal_commands.ab3@1270> INCLUDE "internal_commands.ab3"
0003C4DC <internal_commands.ab3@1271> INCLUDE "internal_commands.ab3"
0003C4DE <internal_commands.ab3@1272> INCLUDE "internal_commands.ab3"
0003C4E2 <internal_commands.ab3@1276> INCLUDE "internal_commands.ab3"
0003C4E4 <internal_commands.ab3@1277> INCLUDE "internal_commands.ab3"
0003C4E9 <internal_commands.ab3@1278> INCLUDE "internal_commands.ab3"
0003C4EA <internal_commands.ab3@1279> INCLUDE "internal_commands.ab3"
0003C4EC <internal_commands.ab3@1282> INCLUDE "internal_commands.ab3"
0003C4F0 <internal_commands.ab3@1283> INCLUDE "internal_commands.ab3"
0003C4F2 <internal_commands.ab3@1284> INCLUDE "internal_commands.ab3"
0003C4F4 <internal_commands.ab3@1285> INCLUDE "internal_commands.ab3"
0003C4F8 <internal_commands.ab3@1286> INCLUDE "internal_commands.ab3"
0003C4FA <internal_commands.ab3@1287> INCLUDE "internal_commands.ab3"
0003C4FE <internal_commands.ab3@1291> INCLUDE "internal_commands.ab3"
0003C500 <internal_commands.ab3@1292> INCLUDE "internal_commands.ab3"
0003C504 <internal_commands.ab3@1293> INCLUDE "internal_commands.ab3"
0003C505 <internal_commands.ab3@1294> INCLUDE "internal_commands.ab3"
0003C506 <internal_commands.ab3@1295> INCLUDE "internal_commands.ab3"
0003C508 <internal_commands.ab3@1297> INCLUDE "internal_commands.ab3"
0003C50C <internal_commands.ab3@1298> INCLUDE "internal_commands.ab3"
0003C50E <internal_commands.ab3@1299> INCLUDE "internal_commands.ab3"
0003C510 <internal_commands.ab3@1300> INCLUDE "internal_commands.ab3"
0003C514 <internal_commands.ab3@1301> INCLUDE "internal_commands.ab3"
0003C516 <internal_commands.ab3@1302> INCLUDE "internal_commands.ab3"
0003C51A <internal_commands.ab3@1306> INCLUDE "internal_commands.ab3"
0003C51C <internal_commands.ab3@1307> INCLUDE "internal_commands.ab3"
0003C520 <internal_commands.ab3@1308> INCLUDE "internal_commands.ab3"
0003C521 <internal_commands.ab3@1309> INCLUDE "internal_commands.ab3"
0003C522 <internal_commands.ab3@1310> INCLUDE "internal_commands.ab3"
0003C524 <internal_commands.ab3@1312> INCLUDE "internal_commands.ab3"
0003C528 <internal_commands.ab3@1313> INCLUDE "internal_commands.ab3"
0003C52A <internal_commands.ab3@1314> INCLUDE "internal_commands.ab3"
0003C52C <internal_commands.ab3@1315> INCLUDE "internal_commands.ab3"
0003C530 <internal_commands.ab3@1316> INCLUDE "internal_commands.ab3"
0003C532 <internal_commands.ab3@1317> INCLUDE "internal_commands.ab3"
0003C536 <internal_commands.ab3@1321> INCLUDE "internal_commands.ab3"
0003C538 <internal_commands.ab3@1322> INCLUDE "internal_commands.ab3"
0003C540 <internal_commands.ab3@1323> INCLUDE "internal_commands.ab3"
0003C541 <internal_commands.ab3@1324> INCLUDE "internal_commands.ab3"
0003C542 <internal_commands.ab3@1325> INCLUDE "internal_commands.ab3"
0003C544 <internal_commands.ab3@1327> INCLUDE "internal_commands.ab3"
0003C548 <internal_commands.ab3@1328> INCLUDE "internal_commands.ab3"
0003C54A <internal_commands.ab3@1329> INCLUDE "internal_commands.ab3"
0003C54C <internal_commands.ab3@1330> INCLUDE "internal_commands.ab3"
0003C550 <internal_commands.ab3@1331> INCLUDE "internal_commands.ab3"
0003C552 <internal_commands.ab3@1332> INCLUDE "internal_commands.ab3"
0003C556 <internal_commands.ab3@1336> INCLUDE "internal_commands.ab3"
0003C558 <internal_commands.ab3@1337> INCLUDE "internal_commands.ab3"
0003C55C <internal_commands.ab3@1338> INCLUDE "internal_commands.ab3"
0003C55D <internal_commands.ab3@1339> INCLUDE "internal_commands.ab3"
0003C55E <internal_commands.ab3@1340> INCLUDE "internal_commands.ab3"
0003C560 <internal_commands.ab3@1342> INCLUDE "internal_commands.ab3"
0003C564 <internal_commands.ab3@1343> INCLUDE "internal_commands.ab3"
0003C566 <internal_commands.ab3@1344> INCLUDE "internal_commands.ab3"
0003C568 <internal_commands.ab3@1345> INCLUDE "internal_commands.ab3"
0003C56C <internal_commands.ab3@1346> INCLUDE "internal_commands.ab3"
0003C56E <internal_commands.ab3@1347> INCLUDE "internal_commands.ab3"
0003C572 <internal_commands.ab3@1351> INCLUDE "internal_commands.ab3"
0003C574 <internal_commands.ab3@1352> INCLUDE "internal_commands.ab3"
0003C578 <internal_commands.ab3@1353> INCLUDE "internal_commands.ab3"
0003C579 <internal_commands.ab3@1354> INCLUDE "internal_commands.ab3"
0003C57A <internal_commands.ab3@1355> INCLUDE "internal_commands.ab3"
0003C57C <internal_commands.ab3@1357> INCLUDE "internal_commands.ab3"
0003C580 <internal_commands.ab3@1358> INCLUDE "internal_commands.ab3"
0003C582 <internal_commands.ab3@1359> INCLUDE "internal_commands.ab3"
0003C584 <internal_commands.ab3@1360> INCLUDE "internal_commands.ab3"
0003C588 <internal_commands.ab3@1361> INCLUDE "internal_commands.ab3"
0003C58A <internal_commands.ab3@1362> INCLUDE "internal_commands.ab3"
0003C58E <internal_commands.ab3@1366> INCLUDE "internal_commands.ab3"
0003C590 <internal_commands.ab3@1367> INCLUDE "internal_commands.ab3"
0003C594 <internal_commands.ab3@1368> INCLUDE "internal_commands.ab3"
0003C595 <internal_commands.ab3@1369> INCLUDE "internal_commands.ab3"
0003C596 <internal_commands.ab3@1370> INCLUDE "internal_commands.ab3"
0003C598 <internal_commands.ab3@1372> INCLUDE "internal_commands.ab3"
0003C59C <internal_commands.ab3@1373> INCLUDE "internal_commands.ab3"
0003C59E <internal_commands.ab3@1374> INCLUDE "internal_commands.ab3"
0003C5A0 <internal_commands.ab3@1375> INCLUDE "internal_commands.ab3"
0003C5A4 <internal_commands.ab3@1376> INCLUDE "internal_commands.ab3"
0003C5A6 <internal_commands.ab3@1377> INCLUDE "internal_commands.ab3"
0003C5AA <internal_commands.ab3@1381> INCLUDE "internal_commands.ab3"
0003C5AC <internal_commands.ab3@1382> INCLUDE "internal_commands.ab3"
0003C5B1 <internal_commands.ab3@1383> INCLUDE "internal_commands.ab3"
0003C5B2 <internal_commands.ab3@1384> INCLUDE "internal_commands.ab3"
0003C5B4 <internal_commands.ab3@1387> INCLUDE "internal_commands.ab3"
0003C5B8 <internal_commands.ab3@1388> INCLUDE "internal_commands.ab3"
0003C5BA <internal_commands.ab3@1389> INCLUDE "internal_commands.ab3"
0003C5BC <internal_commands.ab3@1390> INCLUDE "internal_commands.ab3"
0003C5C0 <internal_commands.ab3@1391> INCLUDE "internal_commands.ab3"
0003C5C2 <internal_commands.ab3@1392> INCLUDE "internal_commands.ab3"
0003C5C6 <internal_commands.ab3@1396> INCLUDE "internal_commands.ab3"
0003C5C8 <internal_commands.ab3@1397> INCLUDE "internal_commands.ab3"
0003C5CC <internal_commands.ab3@1398> INCLUDE "internal_commands.ab3"
0003C5CD <internal_commands.ab3@1399> INCLUDE "internal_commands.ab3"
0003C5CE <internal_commands.ab3@1400> INCLUDE "internal_commands.ab3"
0003C5D0 <internal_commands.ab3@1402> INCLUDE "internal_commands.ab3"
0003C5D4 <internal_commands.ab3@1403> INCLUDE "internal_commands.ab3"
0003C5D6 <internal_commands.ab3@1404> INCLUDE "internal_commands.ab3"
0003C5D8 <internal_commands.ab3@1405> INCLUDE "internal_commands.ab3"
0003C5DC <internal_commands.ab3@1406> INCLUDE "internal_commands.ab3"
0003C5DE <internal_commands.ab3@1407> INCLUDE "internal_commands.ab3"
0003C5E2 <internal_commands.ab3@1411> INCLUDE "internal_commands.ab3"
0003C5E4 <internal_commands.ab3@1412> INCLUDE "internal_commands.ab3"
0003C5E8 <internal_commands.ab3@1413> INCLUDE "internal_commands.ab3"
0003C5E9 <internal_commands.ab3@1414> INCLUDE "internal_commands.ab3"
0003C5EA <internal_commands.ab3@1415> INCLUDE "internal_commands.ab3"
0003C5EC <internal_commands.ab3@1417> INCLUDE "internal_commands.ab3"
0003C5F0 <internal_commands.ab3@1418> INCLUDE "internal_commands.ab3"
0003C5F2 <internal_commands.ab3@1419> INCLUDE "internal_commands.ab3"
0003C5F4 <internal_commands.ab3@1420> INCLUDE "internal_commands.ab3"
0003C5F8 <internal_commands.ab3@1421> INCLUDE "internal_commands.ab3"
0003C5FA <internal_commands.ab3@1422> INCLUDE "internal_commands.ab3"
0003C5FE <internal_commands.ab3@1426> INCLUDE "internal_commands.ab3"
0003C600 <internal_commands.ab3@1427> INCLUDE "internal_commands.ab3"
0003C605 <internal_commands.ab3@1428> INCLUDE "internal_commands.ab3"
0003C606 <internal_commands.ab3@1429> INCLUDE "internal_commands.ab3"
0003C608 <internal_commands.ab3@1432> INCLUDE "internal_commands.ab3"
0003C60C <internal_commands.ab3@1433> INCLUDE "internal_commands.ab3"
0003C60E <internal_commands.ab3@1434> INCLUDE "internal_commands.ab3"
0003C610 <internal_commands.ab3@1435> INCLUDE "internal_commands.ab3"
0003C614 <internal_commands.ab3@1436> INCLUDE "internal_commands.ab3"
0003C616 <internal_commands.ab3@1437> INCLUDE "internal_commands.ab3"
0003C61A <internal_commands.ab3@1441> INCLUDE "internal_commands.ab3"
0003C61C <internal_commands.ab3@1442> INCLUDE "internal_commands.ab3"
0003C621 <internal_commands.ab3@1443> INCLUDE "internal_commands.ab3"
0003C622 <internal_commands.ab3@1444> INCLUDE "internal_commands.ab3"
0003C624 <internal_commands.ab3@1447> INCLUDE "internal_commands.ab3"
0003C628 <internal_commands.ab3@1448> INCLUDE "internal_commands.ab3"
0003C62A <internal_commands.ab3@1449> INCLUDE "internal_commands.ab3"
0003C62C <internal_commands.ab3@1450> INCLUDE "internal_commands.ab3"
0003C630 <internal_commands.ab3@1451> INCLUDE "internal_commands.ab3"
0003C632 <internal_commands.ab3@1452> INCLUDE "internal_commands.ab3"
0003C636 <internal_commands.ab3@1457> INCLUDE "internal_commands.ab3"
0003C638 <internal_commands.ab3@1458> INCLUDE "internal_commands.ab3"
0003C63E <internal_commands.ab3@1459> INCLUDE "internal_commands.ab3"
0003C63F <internal_commands.ab3@1460> INCLUDE "internal_commands.ab3"
0003C640 <internal_commands.ab3@1461> INCLUDE "internal_commands.ab3"
0003C642 <internal_commands.ab3@1463> INCLUDE "internal_commands.ab3"
0003C646 <internal_commands.ab3@1464> INCLUDE "internal_commands.ab3"
0003C648 <internal_commands.ab3@1465> INCLUDE "internal_commands.ab3"
0003C64A <internal_commands.ab3@1466> INCLUDE "internal_commands.ab3"
0003C64E <internal_commands.ab3@1467> INCLUDE "internal_commands.ab3"
0003C650 <internal_commands.ab3@1468> INCLUDE "internal_commands.ab3"
0003C654 <internal_commands.ab3@1472> INCLUDE "internal_commands.ab3"
0003C656 <internal_commands.ab3@1473> INCLUDE "internal_commands.ab3"
0003C65C <internal_commands.ab3@1474> INCLUDE "internal_commands.ab3"
0003C65D <internal_commands.ab3@1475> INCLUDE "internal_commands.ab3"
0003C65E <internal_commands.ab3@1476> INCLUDE "internal_commands.ab3"
0003C660 <internal_commands.ab3@1478> INCLUDE "internal_commands.ab3"
0003C664 <internal_commands.ab3@1479> INCLUDE "internal_commands.ab3"
0003C666 <internal_commands.ab3@1480> INCLUDE "internal_commands.ab3"
0003C668 <internal_commands.ab3@1481> INCLUDE "internal_commands.ab3"
0003C66C <internal_commands.ab3@1482> INCLUDE "internal_commands.ab3"
0003C66E <internal_commands.ab3@1483> INCLUDE "internal_commands.ab3"
0003C672 <internal_commands.ab3@1487> INCLUDE "internal_commands.ab3"
0003C674 <internal_commands.ab3@1488> INCLUDE "internal_commands.ab3"
0003C67A <internal_commands.ab3@1489> INCLUDE "internal_commands.ab3"
0003C67B <internal_commands.ab3@1490> INCLUDE "internal_commands.ab3"
0003C67C <internal_commands.ab3@1491> INCLUDE "internal_commands.ab3"
0003C67E <internal_commands.ab3@1493> INCLUDE "internal_commands.ab3"
0003C682 <internal_commands.ab3@1494> INCLUDE "internal_commands.ab3"
0003C684 <internal_commands.ab3@1495> INCLUDE "internal_commands.ab3"
0003C686 <internal_commands.ab3@1496> INCLUDE "internal_commands.ab3"
0003C68A <internal_commands.ab3@1497> INCLUDE "internal_commands.ab3"
0003C68C <internal_commands.ab3@1498> INCLUDE "internal_commands.ab3"
0003C690 <internal_commands.ab3@1502> INCLUDE "internal_commands.ab3"
0003C692 <internal_commands.ab3@1503> INCLUDE "internal_commands.ab3"
0003C697 <internal_commands.ab3@1504> INCLUDE "internal_commands.ab3"
0003C698 <internal_commands.ab3@1505> INCLUDE "internal_commands.ab3"
0003C69A <internal_commands.ab3@1508> INCLUDE "internal_commands.ab3"
0003C69E <internal_commands.ab3@1509> INCLUDE "internal_commands.ab3"
0003C6A0 <internal_commands.ab3@1510> INCLUDE "internal_commands.ab3"
0003C6A2 <internal_commands.ab3@1511> INCLUDE "internal_commands.ab3"
0003C6A6 <internal_commands.ab3@1512> INCLUDE "internal_commands.ab3"
0003C6A8 <internal_commands.ab3@1513> INCLUDE "internal_commands.ab3"
0003C6AC <internal_commands.ab3@1517> INCLUDE "internal_commands.ab3"
0003C6AE <internal_commands.ab3@1518> INCLUDE "internal_commands.ab3"
0003C6B3 <internal_commands.ab3@1519> INCLUDE "internal_commands.ab3"
0003C6B4 <internal_commands.ab3@1520> INCLUDE "internal_commands.ab3"
0003C6B6 <internal_commands.ab3@1523> INCLUDE "internal_commands.ab3"
0003C6BA <internal_commands.ab3@1524> INCLUDE "internal_commands.ab3"
0003C6BC <internal_commands.ab3@1525> INCLUDE "internal_commands.ab3"
0003C6BE <internal_commands.ab3@1526> INCLUDE "internal_commands.ab3"
0003C6C2 <internal_commands.ab3@1527> INCLUDE "internal_commands.ab3"
0003C6C4 <internal_commands.ab3@1528> INCLUDE "internal_commands.ab3"
0003C6C8 <internal_commands.ab3@1532> INCLUDE "internal_commands.ab3"
0003C6CA <internal_commands.ab3@1533> INCLUDE "internal_commands.ab3"
0003C6CF <internal_commands.ab3@1534> INCLUDE "internal_commands.ab3"
0003C6D0 <internal_commands.ab3@1535> INCLUDE "internal_commands.ab3"
0003C6D2 <internal_commands.ab3@1538> INCLUDE "internal_commands.ab3"
0003C6D6 <internal_commands.ab3@1539> INCLUDE "internal_commands.ab3"
0003C6D8 <internal_commands.ab3@1540> INCLUDE "internal_commands.ab3"
0003C6DA <internal_commands.ab3@1541> INCLUDE "internal_commands.ab3"
0003C6DE <internal_commands.ab3@1542> INCLUDE "internal_commands.ab3"
0003C6E0 <internal_commands.ab3@1543> INCLUDE "internal_commands.ab3"
0003C6E4 <internal_commands.ab3@1547> INCLUDE "internal_commands.ab3"
0003C6E6 <internal_commands.ab3@1548> INCLUDE "internal_commands.ab3"
0003C6EA <internal_commands.ab3@1549> INCLUDE "internal_commands.ab3"
0003C6EB <internal_commands.ab3@1550> INCLUDE "internal_commands.ab3"
0003C6EC <internal_commands.ab3@1551> INCLUDE "internal_commands.ab3"
0003C6EE <internal_commands.ab3@1553> INCLUDE "internal_commands.ab3"
0003C6F2 <internal_commands.ab3@1554> INCLUDE "internal_commands.ab3"
0003C6F4 <internal_commands.ab3@1555> INCLUDE "internal_commands.ab3"
0003C6F6 <internal_commands.ab3@1556> INCLUDE "internal_commands.ab3"
0003C6FA <internal_commands.ab3@1557> INCLUDE "internal_commands.ab3"
0003C6FC <internal_commands.ab3@1558> INCLUDE "internal_commands.ab3"
0003C700 <internal_commands.ab3@1562> INCLUDE "internal_commands.ab3"
0003C702 <internal_commands.ab3@1563> INCLUDE "internal_commands.ab3"
0003C707 <internal_commands.ab3@1564> INCLUDE "internal_commands.ab3"
0003C708 <internal_commands.ab3@1565> INCLUDE "internal_commands.ab3"
0003C70A <internal_commands.ab3@1568> INCLUDE "internal_commands.ab3"
0003C70E <internal_commands.ab3@1569> INCLUDE "internal_commands.ab3"
0003C710 <internal_commands.ab3@1570> INCLUDE "internal_commands.ab3"
0003C712 <internal_commands.ab3@1571> INCLUDE "internal_commands.ab3"
0003C716 <internal_commands.ab3@1572> INCLUDE "internal_commands.ab3"
0003C718 <internal_commands.ab3@1573> INCLUDE "internal_commands.ab3"
0003C71C <internal_commands.ab3@1577> INCLUDE "internal_commands.ab3"
0003C71E <internal_commands.ab3@1578> INCLUDE "internal_commands.ab3"
0003C722 <internal_commands.ab3@1579> INCLUDE "internal_commands.ab3"
0003C723 <internal_commands.ab3@1580> INCLUDE "internal_commands.ab3"
0003C724 <internal_commands.ab3@1581> INCLUDE "internal_commands.ab3"
0003C726 <internal_commands.ab3@1583> INCLUDE "internal_commands.ab3"
0003C72A <internal_commands.ab3@1584> INCLUDE "internal_commands.ab3"
0003C72C <internal_commands.ab3@1585> INCLUDE "internal_commands.ab3"
0003C72E <internal_commands.ab3@1586> INCLUDE "internal_commands.ab3"
0003C732 <internal_commands.ab3@1587> INCLUDE "internal_commands.ab3"
0003C734 <internal_commands.ab3@1588> INCLUDE "internal_commands.ab3"
0003C738 <internal_commands.ab3@1592> INCLUDE "internal_commands.ab3"
0003C73A <internal_commands.ab3@1593> INCLUDE "internal_commands.ab3"
0003C73E <internal_commands.ab3@1594> INCLUDE "internal_commands.ab3"
0003C73F <internal_commands.ab3@1595> INCLUDE "internal_commands.ab3"
0003C740 <internal_commands.ab3@1596> INCLUDE "internal_commands.ab3"
0003C742 <internal_commands.ab3@1598> INCLUDE "internal_commands.ab3"
0003C746 <internal_commands.ab3@1599> INCLUDE "internal_commands.ab3"
0003C748 <internal_commands.ab3@1600> INCLUDE "internal_commands.ab3"
0003C74A <internal_commands.ab3@1601> INCLUDE "internal_commands.ab3"
0003C74E <internal_commands.ab3@1602> INCLUDE "internal_commands.ab3"
0003C750 <internal_commands.ab3@1603> INCLUDE "internal_commands.ab3"
0003C754 <internal_commands.ab3@1607> INCLUDE "internal_commands.ab3"
0003C756 <internal_commands.ab3@1608> INCLUDE "internal_commands.ab3"
0003C759 <internal_commands.ab3@1609> INCLUDE "internal_commands.ab3"
0003C75A <internal_commands.ab3@1610> INCLUDE "internal_commands.ab3"
0003C75C <internal_commands.ab3@1613> INCLUDE "internal_commands.ab3"
0003C760 <internal_commands.ab3@1614> INCLUDE "internal_commands.ab3"
0003C762 <internal_commands.ab3@1615> INCLUDE "internal_commands.ab3"
0003C764 <internal_commands.ab3@1616> INCLUDE "internal_commands.ab3"
0003C768 <internal_commands.ab3@1617> INCLUDE "internal_commands.ab3"
0003C76A <internal_commands.ab3@1618> INCLUDE "internal_commands.ab3"
0003C76E <internal_commands.ab3@1622> INCLUDE "internal_commands.ab3"
0003C770 <internal_commands.ab3@1623> INCLUDE "internal_commands.ab3"
0003C774 <internal_commands.ab3@1624> INCLUDE "internal_commands.ab3"
0003C775 <internal_commands.ab3@1625> INCLUDE "internal_commands.ab3"
0003C776 <internal_commands.ab3@1626> INCLUDE "internal_commands.ab3"
0003C778 <internal_commands.ab3@1628> INCLUDE "internal_commands.ab3"
0003C77C <internal_commands.ab3@1629> INCLUDE "internal_commands.ab3"
0003C77E <internal_commands.ab3@1630> INCLUDE "internal_commands.ab3"
0003C780 <internal_commands.ab3@1631> INCLUDE "internal_commands.ab3"
0003C784 <internal_commands.ab3@1632> INCLUDE "internal_commands.ab3"
0003C786 <internal_commands.ab3@1633> INCLUDE "internal_commands.ab3"
0003C78A <internal_commands.ab3@1637> INCLUDE "internal_commands.ab3"
0003C78C <internal_commands.ab3@1638> INCLUDE "internal_commands.ab3"
0003C790 <internal_commands.ab3@1639> INCLUDE "internal_commands.ab3"
0003C791 <internal_commands.ab3@1640> INCLUDE "internal_commands.ab3"
0003C792 <internal_commands.ab3@1641> INCLUDE "internal_commands.ab3"
0003C794 <internal_commands.ab3@1643> INCLUDE "internal_commands.ab3"
0003C798 <internal_commands.ab3@1644> INCLUDE "internal_commands.ab3"
0003C79A <internal_commands.ab3@1645> INCLUDE "internal_commands.ab3"
0003C79C <internal_commands.ab3@1646> INCLUDE "internal_commands.ab3"
0003C7A0 <internal_commands.ab3@1647> INCLUDE "internal_commands.ab3"
0003C7A2 <internal_commands.ab3@1648> INCLUDE "internal_commands.ab3"
0003C7A6 <internal_commands.ab3@1652> INCLUDE "internal_commands.ab3"
0003C7A8 <internal_commands.ab3@1653> INCLUDE "internal_commands.ab3"
0003C7AE <internal_commands.ab3@1654> INCLUDE "internal_commands.ab3"
0003C7AF <internal_commands.ab3@1655> INCLUDE "internal_commands.ab3"
0003C7B0 <internal_commands.ab3@1656> INCLUDE "internal_commands.ab3"
0003C7B2 <internal_commands.ab3@1658> INCLUDE "internal_commands.ab3"
0003C7B6 <internal_commands.ab3@1659> INCLUDE "internal_commands.ab3"
0003C7B8 <internal_commands.ab3@1660> INCLUDE "internal_commands.ab3"
0003C7BA <internal_commands.ab3@1661> INCLUDE "internal_commands.ab3"
0003C7BE <internal_commands.ab3@1662> INCLUDE "internal_commands.ab3"
0003C7C0 <internal_commands.ab3@1663> INCLUDE "internal_commands.ab3"
0003C7C4 <internal_commands.ab3@1667> INCLUDE "internal_commands.ab3"
0003C7C6 <internal_commands.ab3@1668> INCLUDE "internal_commands.ab3"
0003C7CA <internal_commands.ab3@1669> INCLUDE "internal_commands.ab3"
0003C7CB <internal_commands.ab3@1670> INCLUDE "internal_commands.ab3"
0003C7CC <internal_commands.ab3@1671> INCLUDE "internal_commands.ab3"
0003C7CE <internal_commands.ab3@1673> INCLUDE "internal_commands.ab3"
0003C7D2 <internal_commands.ab3@1674> INCLUDE "internal_commands.ab3"
0003C7D4 <internal_commands.ab3@1675> INCLUDE "internal_commands.ab3"
0003C7D6 <internal_commands.ab3@1676> INCLUDE "internal_commands.ab3"
0003C7DA <internal_commands.ab3@1677> INCLUDE "internal_commands.ab3"
0003C7DC <internal_commands.ab3@1678> INCLUDE "internal_commands.ab3"
0003C7E0 <internal_commands.ab3@1682> INCLUDE "internal_commands.ab3"
0003C7E2 <internal_commands.ab3@1683> INCLUDE "internal_commands.ab3"
0003C7E6 <internal_commands.ab3@1684> INCLUDE "internal_commands.ab3"
0003C7E7 <internal_commands.ab3@1685> INCLUDE "internal_commands.ab3"
0003C7E8 <internal_commands.ab3@1686> INCLUDE "internal_commands.ab3"
0003C7EA <internal_commands.ab3@1688> INCLUDE "internal_commands.ab3"
0003C7EE <internal_commands.ab3@1689> INCLUDE "internal_commands.ab3"
0003C7F0 <internal_commands.ab3@1690> INCLUDE "internal_commands.ab3"
0003C7F2 <internal_commands.ab3@1691> INCLUDE "internal_commands.ab3"
0003C7F6 <internal_commands.ab3@1692> INCLUDE "internal_commands.ab3"
0003C7F8 <internal_commands.ab3@1693> INCLUDE "internal_commands.ab3"
0003C7FC <internal_commands.ab3@1697> INCLUDE "internal_commands.ab3"
0003C7FE <internal_commands.ab3@1698> INCLUDE "internal_commands.ab3"
0003C803 <internal_commands.ab3@1699> INCLUDE "internal_commands.ab3"
0003C804 <internal_commands.ab3@1700> INCLUDE "internal_commands.ab3"
0003C806 <internal_commands.ab3@1703> INCLUDE "internal_commands.ab3"
0003C80A <internal_commands.ab3@1704> INCLUDE "internal_commands.ab3"
0003C80C <internal_commands.ab3@1705> INCLUDE "internal_commands.ab3"
0003C80E <internal_commands.ab3@1706> INCLUDE "internal_commands.ab3"
0003C812 <internal_commands.ab3@1707> INCLUDE "internal_commands.ab3"
0003C814 <internal_commands.ab3@1708> INCLUDE "internal_commands.ab3"
0003C818 <internal_commands.ab3@1712> INCLUDE "internal_commands.ab3"
0003C81A <internal_commands.ab3@1713> INCLUDE "internal_commands.ab3"
0003C81F <internal_commands.ab3@1714> INCLUDE "internal_commands.ab3"
0003C820 <internal_commands.ab3@1715> INCLUDE "internal_commands.ab3"
0003C822 <internal_commands.ab3@1718> INCLUDE "internal_commands.ab3"
0003C826 <internal_commands.ab3@1719> INCLUDE "internal_commands.ab3"
0003C828 <internal_commands.ab3@1720> INCLUDE "internal_commands.ab3"
0003C82A <internal_commands.ab3@1721> INCLUDE "internal_commands.ab3"
0003C82E <internal_commands.ab3@1722> INCLUDE "internal_commands.ab3"
0003C830 <internal_commands.ab3@1723> INCLUDE "internal_commands.ab3"
0003C834 <internal_commands.ab3@1727> INCLUDE "internal_commands.ab3"
0003C836 <internal_commands.ab3@1728> INCLUDE "internal_commands.ab3"
0003C83A <internal_commands.ab3@1729> INCLUDE "internal_commands.ab3"
0003C83B <internal_commands.ab3@1730> INCLUDE "internal_commands.ab3"
0003C83C <internal_commands.ab3@1731> INCLUDE "internal_commands.ab3"
0003C83E <internal_commands.ab3@1733> INCLUDE "internal_commands.ab3"
0003C842 <internal_commands.ab3@1734> INCLUDE "internal_commands.ab3"
0003C844 <internal_commands.ab3@1735> INCLUDE "internal_commands.ab3"
0003C846 <internal_commands.ab3@1736> INCLUDE "internal_commands.ab3"
0003C84A <internal_commands.ab3@1737> INCLUDE "internal_commands.ab3"
0003C84C <internal_commands.ab3@1738> INCLUDE "internal_commands.ab3"
0003C850 <internal_commands.ab3@1742> INCLUDE "internal_commands.ab3"
0003C852 <internal_commands.ab3@1743> INCLUDE "internal_commands.ab3"
0003C856 <internal_commands.ab3@1744> INCLUDE "internal_commands.ab3"
0003C857 <internal_commands.ab3@1745> INCLUDE "internal_commands.ab3"
0003C858 <internal_commands.ab3@1746> INCLUDE "internal_commands.ab3"
0003C85A <internal_commands.ab3@1748> INCLUDE "internal_commands.ab3"
0003C85E <internal_commands.ab3@1749> INCLUDE "internal_commands.ab3"
0003C860 <internal_commands.ab3@1750> INCLUDE "internal_commands.ab3"
0003C862 <internal_commands.ab3@1751> INCLUDE "internal_commands.ab3"
0003C866 <internal_commands.ab3@1752> INCLUDE "internal_commands.ab3"
0003C868 <internal_commands.ab3@1753> INCLUDE "internal_commands.ab3"
0003C86C <internal_commands.ab3@1757> INCLUDE "internal_commands.ab3"
0003C86E <internal_commands.ab3@1758> INCLUDE "internal_commands.ab3"
0003C872 <internal_commands.ab3@1759> INCLUDE "internal_commands.ab3"
0003C873 <internal_commands.ab3@1760> INCLUDE "internal_commands.ab3"
0003C874 <internal_commands.ab3@1761> INCLUDE "internal_commands.ab3"
0003C876 <internal_commands.ab3@1763> INCLUDE "internal_commands.ab3"
0003C87A <internal_commands.ab3@1764> INCLUDE "internal_commands.ab3"
0003C87C <internal_commands.ab3@1765> INCLUDE "internal_commands.ab3"
0003C87E <internal_commands.ab3@1766> INCLUDE "internal_commands.ab3"
0003C882 <internal_commands.ab3@1767> INCLUDE "internal_commands.ab3"
0003C884 <internal_commands.ab3@1768> INCLUDE "internal_commands.ab3"
0003C888 <internal_commands.ab3@1772> INCLUDE "internal_commands.ab3"
0003C88A <internal_commands.ab3@1773> INCLUDE "internal_commands.ab3"
0003C88F <internal_commands.ab3@1774> INCLUDE "internal_commands.ab3"
0003C890 <internal_commands.ab3@1775> INCLUDE "internal_commands.ab3"
0003C892 <internal_commands.ab3@1778> INCLUDE "internal_commands.ab3"
0003C896 <internal_commands.ab3@1779> INCLUDE "internal_commands.ab3"
0003C898 <internal_commands.ab3@1780> INCLUDE "internal_commands.ab3"
0003C89A <internal_commands.ab3@1781> INCLUDE "internal_commands.ab3"
0003C89E <internal_commands.ab3@1782> INCLUDE "internal_commands.ab3"
0003C8A0 <internal_commands.ab3@1783> INCLUDE "internal_commands.ab3"
0003C8A4 <internal_commands.ab3@1787> INCLUDE "internal_commands.ab3"
0003C8A6 <internal_commands.ab3@1788> INCLUDE "internal_commands.ab3"
0003C8AA <internal_commands.ab3@1789> INCLUDE "internal_commands.ab3"
0003C8AB <internal_commands.ab3@1790> INCLUDE "internal_commands.ab3"
0003C8AC <internal_commands.ab3@1791> INCLUDE "internal_commands.ab3"
0003C8AE <internal_commands.ab3@1793> INCLUDE "internal_commands.ab3"
0003C8B2 <internal_commands.ab3@1794> INCLUDE "internal_commands.ab3"
0003C8B4 <internal_commands.ab3@1795> INCLUDE "internal_commands.ab3"
0003C8B6 <internal_commands.ab3@1796> INCLUDE "internal_commands.ab3"
0003C8BA <internal_commands.ab3@1797> INCLUDE "internal_commands.ab3"
0003C8BC <internal_commands.ab3@1798> INCLUDE "internal_commands.ab3"
0003C8C0 <internal_commands.ab3@1802> INCLUDE "internal_commands.ab3"
0003C8C2 <internal_commands.ab3@1803> INCLUDE "internal_commands.ab3"
0003C8C6 <internal_commands.ab3@1804> INCLUDE "internal_commands.ab3"
0003C8C7 <internal_commands.ab3@1805> INCLUDE "internal_commands.ab3"
0003C8C8 <internal_commands.ab3@1806> INCLUDE "internal_commands.ab3"
0003C8CA <internal_commands.ab3@1808> INCLUDE "internal_commands.ab3"
0003C8CE <internal_commands.ab3@1809> INCLUDE "internal_commands.ab3"
0003C8D0 <internal_commands.ab3@1810> INCLUDE "internal_commands.ab3"
0003C8D2 <internal_commands.ab3@1811> INCLUDE "internal_commands.ab3"
0003C8D6 <internal_commands.ab3@1812> INCLUDE "internal_commands.ab3"
0003C8D8 <internal_commands.ab3@1813> INCLUDE "internal_commands.ab3"
0003C8DC <internal_commands.ab3@1817> INCLUDE "internal_commands.ab3"
0003C8DE <internal_commands.ab3@1818> INCLUDE "internal_commands.ab3"
0003C8E2 <internal_commands.ab3@1819> INCLUDE "internal_commands.ab3"
0003C8E3 <internal_commands.ab3@1820> INCLUDE "internal_commands.ab3"
0003C8E4 <internal_commands.ab3@1821> INCLUDE "internal_commands.ab3"
0003C8E6 <internal_commands.ab3@1823> INCLUDE "internal_commands.ab3"
0003C8EA <internal_commands.ab3@1824> INCLUDE "internal_commands.ab3"
0003C8EC <internal_commands.ab3@1825> INCLUDE "internal_commands.ab3"
0003C8EE <internal_commands.ab3@1826> INCLUDE "internal_commands.ab3"
0003C8F2 <internal_commands.ab3@1827> INCLUDE "internal_commands.ab3"
0003C8F4 <internal_commands.ab3@1828> INCLUDE "internal_commands.ab3"
0003C8F8 <internal_commands.ab3@1832> INCLUDE "internal_commands.ab3"
0003C8FA <internal_commands.ab3@1833> INCLUDE "internal_commands.ab3"
0003C8FE <internal_commands.ab3@1834> INCLUDE "internal_commands.ab3"
0003C8FF <internal_commands.ab3@1835> INCLUDE "internal_commands.ab3"
0003C900 <internal_commands.ab3@1836> INCLUDE "internal_commands.ab3"
0003C902 <internal_commands.ab3@1838> INCLUDE "internal_commands.ab3"
0003C906 <internal_commands.ab3@1839> INCLUDE "internal_commands.ab3"
0003C908 <internal_commands.ab3@1840> INCLUDE "internal_commands.ab3"
0003C90A <internal_commands.ab3@1841> INCLUDE "internal_commands.ab3"
0003C90E <internal_commands.ab3@1842> INCLUDE "internal_commands.ab3"
0003C910 <internal_commands.ab3@1843> INCLUDE "internal_commands.ab3"
0003C914 <internal_commands.ab3@1847> INCLUDE "internal_commands.ab3"
0003C916 <internal_commands.ab3@1848> INCLUDE "internal_commands.ab3"
0003C91A <internal_commands.ab3@1849> INCLUDE "internal_commands.ab3"
0003C91B <internal_commands.ab3@1850> INCLUDE "internal_commands.ab3"
0003C91C <internal_commands.ab3@1851> INCLUDE "internal_commands.ab3"
0003C91E <internal_commands.ab3@1853> INCLUDE "internal_commands.ab3"
0003C922 <internal_commands.ab3@1854> INCLUDE "internal_commands.ab3"
0003C924 <internal_commands.ab3@1855> INCLUDE "internal_commands.ab3"
0003C926 <internal_commands.ab3@1856> INCLUDE "internal_commands.ab3"
0003C92A <internal_commands.ab3@1857> INCLUDE "internal_commands.ab3"
0003C92C <internal_commands.ab3@1858> INCLUDE "internal_commands.ab3"
0003C930 <internal_commands.ab3@1862> INCLUDE "internal_commands.ab3"
0003C932 <internal_commands.ab3@1863> INCLUDE "internal_commands.ab3"
0003C936 <internal_commands.ab3@1864> INCLUDE "internal_commands.ab3"
0003C937 <internal_commands.ab3@1865> INCLUDE "internal_commands.ab3"
0003C938 <internal_commands.ab3@1866> INCLUDE "internal_commands.ab3"
0003C93A <internal_commands.ab3@1868> INCLUDE "internal_commands.ab3"
0003C93E <internal_commands.ab3@1869> INCLUDE "internal_commands.ab3"
0003C940 <internal_commands.ab3@1870> INCLUDE "internal_commands.ab3"
0003C942 <internal_commands.ab3@1871> INCLUDE "internal_commands.ab3"
0003C946 <internal_commands.ab3@1872> INCLUDE "internal_commands.ab3"
0003C948 <internal_commands.ab3@1873> INCLUDE "internal_commands.ab3"
0003C94C <internal_commands.ab3@1877> INCLUDE "internal_commands.ab3"
0003C94E <internal_commands.ab3@1878> INCLUDE "internal_commands.ab3"
0003C952 <internal_commands.ab3@1879> INCLUDE "internal_commands.ab3"
0003C953 <internal_commands.ab3@1880> INCLUDE "internal_commands.ab3"
0003C954 <internal_commands.ab3@1881> INCLUDE "internal_commands.ab3"
0003C956 <internal_commands.ab3@1883> INCLUDE "internal_commands.ab3"
0003C95A <internal_commands.ab3@1884> INCLUDE "internal_commands.ab3"
0003C95C <internal_commands.ab3@1885> INCLUDE "internal_commands.ab3"
0003C95E <internal_commands.ab3@1886> INCLUDE "internal_commands.ab3"
0003C962 <internal_commands.ab3@1887> INCLUDE "internal_commands.ab3"
0003C964 <internal_commands.ab3@1888> INCLUDE "internal_commands.ab3"
0003C968 <internal_commands.ab3@1892> INCLUDE "internal_commands.ab3"
0003C96A <internal_commands.ab3@1893> INCLUDE "internal_commands.ab3"
0003C96E <internal_commands.ab3@1894> INCLUDE "internal_commands.ab3"
0003C96F <internal_commands.ab3@1895> INCLUDE "internal_commands.ab3"
0003C970 <internal_commands.ab3@1896> INCLUDE "internal_commands.ab3"
0003C972 <internal_commands.ab3@1898> INCLUDE "internal_commands.ab3"
0003C976 <internal_commands.ab3@1899> INCLUDE "internal_commands.ab3"
0003C978 <internal_commands.ab3@1900> INCLUDE "internal_commands.ab3"
0003C97A <internal_commands.ab3@1901> INCLUDE "internal_commands.ab3"
0003C97E <internal_commands.ab3@1902> INCLUDE "internal_commands.ab3"
0003C980 <internal_commands.ab3@1903> INCLUDE "internal_commands.ab3"
0003C984 <internal_commands.ab3@1907> INCLUDE "internal_commands.ab3"
0003C986 <internal_commands.ab3@1908> INCLUDE "internal_commands.ab3"
0003C98A <internal_commands.ab3@1909> INCLUDE "internal_commands.ab3"
0003C98B <internal_commands.ab3@1910> INCLUDE "internal_commands.ab3"
0003C98C <internal_commands.ab3@1911> INCLUDE "internal_commands.ab3"
0003C98E <internal_commands.ab3@1913> INCLUDE "internal_commands.ab3"
0003C992 <internal_commands.ab3@1914> INCLUDE "internal_commands.ab3"
0003C994 <internal_commands.ab3@1915> INCLUDE "internal_commands.ab3"
0003C996 <internal_commands.ab3@1916> INCLUDE "internal_commands.ab3"
0003C99A <internal_commands.ab3@1917> INCLUDE "internal_commands.ab3"
0003C99C <internal_commands.ab3@1918> INCLUDE "internal_commands.ab3"
0003C9A0 <internal_commands.ab3@1922> INCLUDE "internal_commands.ab3"
0003C9A2 <internal_commands.ab3@1923> INCLUDE "internal_commands.ab3"
0003C9A6 <internal_commands.ab3@1924> INCLUDE "internal_commands.ab3"
0003C9A7 <internal_commands.ab3@1925> INCLUDE "internal_commands.ab3"
0003C9A8 <internal_commands.ab3@1926> INCLUDE "internal_commands.ab3"
0003C9AA <internal_commands.ab3@1928> INCLUDE "internal_commands.ab3"
0003C9AE <internal_commands.ab3@1929> INCLUDE "internal_commands.ab3"
0003C9B0 <internal_commands.ab3@1930> INCLUDE "internal_commands.ab3"
0003C9B2 <internal_commands.ab3@1931> INCLUDE "internal_commands.ab3"
0003C9B6 <internal_commands.ab3@1932> INCLUDE "internal_commands.ab3"
0003C9B8 <internal_commands.ab3@1933> INCLUDE "internal_commands.ab3"
0003C9BC <internal_commands.ab3@1937> INCLUDE "internal_commands.ab3"
0003C9BE <internal_commands.ab3@1938> INCLUDE "internal_commands.ab3"
0003C9C2 <internal_commands.ab3@1939> INCLUDE "internal_commands.ab3"
0003C9C3 <internal_commands.ab3@1940> INCLUDE "internal_commands.ab3"
0003C9C4 <internal_commands.ab3@1941> INCLUDE "internal_commands.ab3"
0003C9C6 <internal_commands.ab3@1943> INCLUDE "internal_commands.ab3"
0003C9CA <internal_commands.ab3@1944> INCLUDE "internal_commands.ab3"
0003C9CC <internal_commands.ab3@1945> INCLUDE "internal_commands.ab3"
0003C9CE <internal_commands.ab3@1946> INCLUDE "internal_commands.ab3"
0003C9D2 <internal_commands.ab3@1947> INCLUDE "internal_commands.ab3"
0003C9D4 <internal_commands.ab3@1948> INCLUDE "internal_commands.ab3"
0003C9D8 <internal_commands.ab3@1952> INCLUDE "internal_commands.ab3"
0003C9DA <internal_commands.ab3@1953> INCLUDE "internal_commands.ab3"
0003C9DE <internal_commands.ab3@1954> INCLUDE "internal_commands.ab3"
0003C9DF <internal_commands.ab3@1955> INCLUDE "internal_commands.ab3"
0003C9E0 <internal_commands.ab3@1956> INCLUDE "internal_commands.ab3"
0003C9E2 <internal_commands.ab3@1958> INCLUDE "internal_commands.ab3"
0003C9E6 <internal_commands.ab3@1959> INCLUDE "internal_commands.ab3"
0003C9E8 <internal_commands.ab3@1960> INCLUDE "internal_commands.ab3"
0003C9EA <internal_commands.ab3@1961> INCLUDE "internal_commands.ab3"
0003C9EE <internal_commands.ab3@1962> INCLUDE "internal_commands.ab3"
0003C9F0 <internal_commands.ab3@1963> INCLUDE "internal_commands.ab3"
0003C9F4 <internal_commands.ab3@1967> INCLUDE "internal_commands.ab3"
0003C9F6 <internal_commands.ab3@1968> INCLUDE "internal_commands.ab3"
0003C9FA <internal_commands.ab3@1969> INCLUDE "internal_commands.ab3"
0003C9FB <internal_commands.ab3@1970> INCLUDE "internal_commands.ab3"
0003C9FC <internal_commands.ab3@1971> INCLUDE "internal_commands.ab3"
0003C9FE <internal_commands.ab3@1973> INCLUDE "internal_commands.ab3"
0003CA02 <internal_commands.ab3@1974> INCLUDE "internal_commands.ab3"
0003CA04 <internal_commands.ab3@1975> INCLUDE "internal_commands.ab3"
0003CA06 <internal_commands.ab3@1976> INCLUDE "internal_commands.ab3"
0003CA0A <internal_commands.ab3@1977> INCLUDE "internal_commands.ab3"
0003CA0C <internal_commands.ab3@1978> INCLUDE "internal_commands.ab3"
0003CA10 <internal_commands.ab3@1982> INCLUDE "internal_commands.ab3"
0003CA12 <internal_commands.ab3@1983> INCLUDE "internal_commands.ab3"
0003CA16 <internal_commands.ab3@1984> INCLUDE "internal_commands.ab3"
0003CA17 <internal_commands.ab3@1985> INCLUDE "internal_commands.ab3"
0003CA18 <internal_commands.ab3@1986> INCLUDE "internal_commands.ab3"
0003CA1A <internal_commands.ab3@1988> INCLUDE "internal_commands.ab3"
0003CA1E <internal_commands.ab3@1989> INCLUDE "internal_commands.ab3"
0003CA20 <internal_commands.ab3@1990> INCLUDE "internal_commands.ab3"
0003CA22 <internal_commands.ab3@1991> INCLUDE "internal_commands.ab3"
0003CA26 <internal_commands.ab3@1992> INCLUDE "internal_commands.ab3"
0003CA28 <internal_commands.ab3@1993> INCLUDE "internal_commands.ab3"
0003CA2C <internal_commands.ab3@1997> INCLUDE "internal_commands.ab3"
0003CA2E <internal_commands.ab3@1998> INCLUDE "internal_commands.ab3"
0003CA31 <internal_commands.ab3@1999> INCLUDE "internal_commands.ab3"
0003CA32 <internal_commands.ab3@2000> INCLUDE "internal_commands.ab3"
0003CA34 <internal_commands.ab3@2003> INCLUDE "internal_commands.ab3"
0003CA38 <internal_commands.ab3@2004> INCLUDE "internal_commands.ab3"
0003CA3A <internal_commands.ab3@2005> INCLUDE "internal_commands.ab3"
0003CA3C <internal_commands.ab3@2006> INCLUDE "internal_commands.ab3"
0003CA40 <internal_commands.ab3@2007> INCLUDE "internal_commands.ab3"
0003CA42 <internal_commands.ab3@2008> INCLUDE "internal_commands.ab3"
0003CA46 <internal_commands.ab3@2012> INCLUDE "internal_commands.ab3"
0003CA48 <internal_commands.ab3@2013> INCLUDE "internal_commands.ab3"
0003CA4B <internal_commands.ab3@2014> INCLUDE "internal_commands.ab3"
0003CA4C <internal_commands.ab3@2015> INCLUDE "internal_commands.ab3"
0003CA4E <internal_commands.ab3@2018> INCLUDE "internal_commands.ab3"
0003CA52 <internal_commands.ab3@2019> INCLUDE "internal_commands.ab3"
0003CA54 <internal_commands.ab3@2020> INCLUDE "internal_commands.ab3"
0003CA56 <internal_commands.ab3@2021> INCLUDE "internal_commands.ab3"
0003CA5A <internal_commands.ab3@2022> INCLUDE "internal_commands.ab3"
0003CA5C <internal_commands.ab3@2023> INCLUDE "internal_commands.ab3"
0003CA60 <internal_commands.ab3@2027> INCLUDE "internal_commands.ab3"
0003CA62 <internal_commands.ab3@2028> INCLUDE "internal_commands.ab3"
0003CA67 <internal_commands.ab3@2029> INCLUDE "internal_commands.ab3"
0003CA68 <internal_commands.ab3@2030> INCLUDE "internal_commands.ab3"
0003CA6A <internal_commands.ab3@2033> INCLUDE "internal_commands.ab3"
0003CA6E <internal_commands.ab3@2034> INCLUDE "internal_commands.ab3"
0003CA70 <internal_commands.ab3@2035> INCLUDE "internal_commands.ab3"
0003CA72 <internal_commands.ab3@2036> INCLUDE "internal_commands.ab3"
0003CA76 <internal_commands.ab3@2037> INCLUDE "internal_commands.ab3"
0003CA78 <internal_commands.ab3@2038> INCLUDE "internal_commands.ab3"
0003CA7C <internal_commands.ab3@2042> INCLUDE "internal_commands.ab3"
0003CA7E <internal_commands.ab3@2043> INCLUDE "internal_commands.ab3"
0003CA82 <internal_commands.ab3@2044> INCLUDE "internal_commands.ab3"
0003CA83 <internal_commands.ab3@2045> INCLUDE "internal_commands.ab3"
0003CA84 <internal_commands.ab3@2046> INCLUDE "internal_commands.ab3"
0003CA86 <internal_commands.ab3@2048> INCLUDE "internal_commands.ab3"
0003CA8A <internal_commands.ab3@2049> INCLUDE "internal_commands.ab3"
0003CA8C <internal_commands.ab3@2050> INCLUDE "internal_commands.ab3"
0003CA8E <internal_commands.ab3@2051> INCLUDE "internal_commands.ab3"
0003CA92 <internal_commands.ab3@2052> INCLUDE "internal_commands.ab3"
0003CA94 <internal_commands.ab3@2053> INCLUDE "internal_commands.ab3"
0003CA98 <internal_commands.ab3@2057> INCLUDE "internal_commands.ab3"
0003CA9A <internal_commands.ab3@2058> INCLUDE "internal_commands.ab3"
0003CA9F <internal_commands.ab3@2059> INCLUDE "internal_commands.ab3"
0003CAA0 <internal_commands.ab3@2060> INCLUDE "internal_commands.ab3"
0003CAA2 <internal_commands.ab3@2063> INCLUDE "internal_commands.ab3"
0003CAA6 <internal_commands.ab3@2064> INCLUDE "internal_commands.ab3"
0003CAA8 <internal_commands.ab3@2065> INCLUDE "internal_commands.ab3"
0003CAAA <internal_commands.ab3@2066> INCLUDE "internal_commands.ab3"
0003CAAE <internal_commands.ab3@2067> INCLUDE "internal_commands.ab3"
0003CAB0 <internal_commands.ab3@2068> INCLUDE "internal_commands.ab3"
0003CAB4 <internal_commands.ab3@2072> INCLUDE "internal_commands.ab3"
0003CAB6 <internal_commands.ab3@2073> INCLUDE "internal_commands.ab3"
0003CABB <internal_commands.ab3@2074> INCLUDE "internal_commands.ab3"
0003CABC <internal_commands.ab3@2075> INCLUDE "internal_commands.ab3"
0003CABE <internal_commands.ab3@2078> INCLUDE "internal_commands.ab3"
0003CAC2 <internal_commands.ab3@2079> INCLUDE "internal_commands.ab3"
0003CAC4 <internal_commands.ab3@2080> INCLUDE "internal_commands.ab3"
0003CAC6 <internal_commands.ab3@2081> INCLUDE "internal_commands.ab3"
0003CACA <internal_commands.ab3@2082> INCLUDE "internal_commands.ab3"
0003CACC <internal_commands.ab3@2083> INCLUDE "internal_commands.ab3"
0003CAD0 <internal_commands.ab3@2087> INCLUDE "internal_commands.ab3"
0003CAD2 <internal_commands.ab3@2088> INCLUDE "internal_commands.ab3"
0003CAD7 <internal_commands.ab3@2089> INCLUDE "internal_commands.ab3"
0003CAD8 <internal_commands.ab3@2090> INCLUDE "internal_commands.ab3"
0003CADA <internal_commands.ab3@2093> INCLUDE "internal_commands.ab3"
0003CADE <internal_commands.ab3@2094> INCLUDE "internal_commands.ab3"
0003CAE0 <internal_commands.ab3@2095> INCLUDE "internal_commands.ab3"
0003CAE2 <internal_commands.ab3@2096> INCLUDE "internal_commands.ab3"
0003CAE6 <internal_commands.ab3@2097> INCLUDE "internal_commands.ab3"
0003CAE8 <internal_commands.ab3@2098> INCLUDE "internal_commands.ab3"
0003CAEC <internal_commands.ab3@2102> INCLUDE "internal_commands.ab3"
0003CAEE <internal_commands.ab3@2103> INCLUDE "internal_commands.ab3"
0003CAF3 <internal_commands.ab3@2104> INCLUDE "internal_commands.ab3"
0003CAF4 <internal_commands.ab3@2105> INCLUDE "internal_commands.ab3"
0003CAF6 <internal_commands.ab3@2108> INCLUDE "internal_commands.ab3"
0003CAFA <internal_commands.ab3@2109> INCLUDE "internal_commands.ab3"
0003CAFC <internal_commands.ab3@2110> INCLUDE "internal_commands.ab3"
0003CAFE <internal_commands.ab3@2111> INCLUDE "internal_commands.ab3"
0003CB02 <internal_commands.ab3@2112> INCLUDE "internal_commands.ab3"
0003CB04 <internal_commands.ab3@2113> INCLUDE "internal_commands.ab3"
0003CB08 <internal_commands.ab3@2117> INCLUDE "internal_commands.ab3"
0003CB0A <internal_commands.ab3@2118> INCLUDE "internal_commands.ab3"
0003CB0F <internal_commands.ab3@2119> INCLUDE "internal_commands.ab3"
0003CB10 <internal_commands.ab3@2120> INCLUDE "internal_commands.ab3"
0003CB12 <internal_commands.ab3@2123> INCLUDE "internal_commands.ab3"
0003CB16 <internal_commands.ab3@2124> INCLUDE "internal_commands.ab3"
0003CB18 <internal_commands.ab3@2125> INCLUDE "internal_commands.ab3"
0003CB1A <internal_commands.ab3@2126> INCLUDE "internal_commands.ab3"
0003CB1E <internal_commands.ab3@2127> INCLUDE "internal_commands.ab3"
0003CB20 <internal_commands.ab3@2128> INCLUDE "internal_commands.ab3"
0003CB24 <internal_commands.ab3@2132> INCLUDE "internal_commands.ab3"
0003CB26 <internal_commands.ab3@2133> INCLUDE "internal_commands.ab3"
0003CB2A <internal_commands.ab3@2134> INCLUDE "internal_commands.ab3"
0003CB2B <internal_commands.ab3@2135> INCLUDE "internal_commands.ab3"
0003CB2C <internal_commands.ab3@2136> INCLUDE "internal_commands.ab3"
0003CB2E <internal_commands.ab3@2138> INCLUDE "internal_commands.ab3"
0003CB32 <internal_commands.ab3@2139> INCLUDE "internal_commands.ab3"
0003CB34 <internal_commands.ab3@2140> INCLUDE "internal_commands.ab3"
0003CB36 <internal_commands.ab3@2141> INCLUDE "internal_commands.ab3"
0003CB3A <internal_commands.ab3@2142> INCLUDE "internal_commands.ab3"
0003CB3C <internal_commands.ab3@2143> INCLUDE "internal_commands.ab3"
0003CB40 <internal_commands.ab3@2147> INCLUDE "internal_commands.ab3"
0003CB42 <internal_commands.ab3@2148> INCLUDE "internal_commands.ab3"
0003CB47 <internal_commands.ab3@2149> INCLUDE "internal_commands.ab3"
0003CB48 <internal_commands.ab3@2150> INCLUDE "internal_commands.ab3"
0003CB4A <internal_commands.ab3@2153> INCLUDE "internal_commands.ab3"
0003CB4E <internal_commands.ab3@2154> INCLUDE "internal_commands.ab3"
0003CB50 <internal_commands.ab3@2155> INCLUDE "internal_commands.ab3"
0003CB52 <internal_commands.ab3@2156> INCLUDE "internal_commands.ab3"
0003CB56 <internal_commands.ab3@2157> INCLUDE "internal_commands.ab3"
0003CB58 <internal_commands.ab3@2158> INCLUDE "internal_commands.ab3"
0003CB5C <internal_commands.ab3@2162> INCLUDE "internal_commands.ab3"
0003CB5E <internal_commands.ab3@2163> INCLUDE "internal_commands.ab3"
0003CB64 <internal_commands.ab3@2164> INCLUDE "internal_commands.ab3"
0003CB65 <internal_commands.ab3@2165> INCLUDE "internal_commands.ab3"
0003CB66 <internal_commands.ab3@2166> INCLUDE "internal_commands.ab3"
0003CB68 <internal_commands.ab3@2168> INCLUDE "internal_commands.ab3"
0003CB6C <internal_commands.ab3@2169> INCLUDE "internal_commands.ab3"
0003CB6E <internal_commands.ab3@2170> INCLUDE "internal_commands.ab3"
0003CB70 <internal_commands.ab3@2171> INCLUDE "internal_commands.ab3"
0003CB74 <internal_commands.ab3@2172> INCLUDE "internal_commands.ab3"
0003CB76 <internal_commands.ab3@2173> INCLUDE "internal_commands.ab3"
0003CB7A <internal_commands.ab3@2177> INCLUDE "internal_commands.ab3"
0003CB7C <internal_commands.ab3@2178> INCLUDE "internal_commands.ab3"
0003CB80 <internal_commands.ab3@2179> INCLUDE "internal_commands.ab3"
0003CB81 <internal_commands.ab3@2180> INCLUDE "internal_commands.ab3"
0003CB82 <internal_commands.ab3@2181> INCLUDE "internal_commands.ab3"
0003CB84 <internal_commands.ab3@2183> INCLUDE "internal_commands.ab3"
0003CB88 <internal_commands.ab3@2184> INCLUDE "internal_commands.ab3"
0003CB8A <internal_commands.ab3@2185> INCLUDE "internal_commands.ab3"
0003CB8C <internal_commands.ab3@2186> INCLUDE "internal_commands.ab3"
0003CB90 <internal_commands.ab3@2187> INCLUDE "internal_commands.ab3"
0003CB92 <internal_commands.ab3@2188> INCLUDE "internal_commands.ab3"
0003CB96 <internal_commands.ab3@2192> INCLUDE "internal_commands.ab3"
0003CB98 <internal_commands.ab3@2193> INCLUDE "internal_commands.ab3"
0003CB9D <internal_commands.ab3@2194> INCLUDE "internal_commands.ab3"
0003CB9E <internal_commands.ab3@2195> INCLUDE "internal_commands.ab3"
0003CBA0 <internal_commands.ab3@2198> INCLUDE "internal_commands.ab3"
0003CBA4 <internal_commands.ab3@2199> INCLUDE "internal_commands.ab3"
0003CBA6 <internal_commands.ab3@2200> INCLUDE "internal_commands.ab3"
0003CBA8 <internal_commands.ab3@2201> INCLUDE "internal_commands.ab3"
0003CBAC <internal_commands.ab3@2202> INCLUDE "internal_commands.ab3"
0003CBAE <internal_commands.ab3@2203> INCLUDE "internal_commands.ab3"
0003CBB2 <internal_commands.ab3@2208> INCLUDE "internal_commands.ab3"
0003CBB4 <internal_commands.ab3@2209> INCLUDE "internal_commands.ab3"
0003CBBB <internal_commands.ab3@2210> INCLUDE "internal_commands.ab3"
0003CBBC <internal_commands.ab3@2211> INCLUDE "internal_commands.ab3"
0003CBBE <internal_commands.ab3@2230> INCLUDE "internal_commands.ab3"
0003CBC0 <internal_commands.ab3@2231> INCLUDE "internal_commands.ab3"
0003CBC2 <internal_commands.ab3@2235> INCLUDE "internal_commands.ab3"
0003CBC4 <internal_commands.ab3@2236> INCLUDE "internal_commands.ab3"
0003CBC6 <internal_commands.ab3@2240> INCLUDE "internal_commands.ab3"
0003CBC8 <internal_commands.ab3@2241> INCLUDE "internal_commands.ab3"
0003CBCA <internal_commands.ab3@2245> INCLUDE "internal_commands.ab3"
0003CBCC <internal_commands.ab3@2246> INCLUDE "internal_commands.ab3"
0003CBCE <internal_commands.ab3@2251> INCLUDE "internal_commands.ab3"
0003CBD2 <internal_commands.ab3@2252> INCLUDE "internal_commands.ab3"
0003CBD4 <internal_commands.ab3@2253> INCLUDE "internal_commands.ab3"
0003CBD6 <internal_commands.ab3@2254> INCLUDE "internal_commands.ab3"
0003CBD8 <internal_commands.ab3@2255> INCLUDE "internal_commands.ab3"
0003CBDA <internal_commands.ab3@2256> INCLUDE "internal_commands.ab3"
0003CBDE <internal_commands.ab3@2257> INCLUDE "internal_commands.ab3"
0003CBE4 <internal_commands.ab3@2260> INCLUDE "internal_commands.ab3"
0003CBE8 <internal_commands.ab3@2261> INCLUDE "internal_commands.ab3"
0003CBEA <internal_commands.ab3@2262> INCLUDE "internal_commands.ab3"
0003CBEC <internal_commands.ab3@2263> INCLUDE "internal_commands.ab3"
0003CBEE <internal_commands.ab3@2264> INCLUDE "internal_commands.ab3"
0003CBF0 <internal_commands.ab3@2265> INCLUDE "internal_commands.ab3"
0003CBF2 <internal_commands.ab3@2266> INCLUDE "internal_commands.ab3"
0003CBF4 <internal_commands.ab3@2273> INCLUDE "internal_commands.ab3"
0003CBF8 <internal_commands.ab3@2274> INCLUDE "internal_commands.ab3"
0003CBFC <internal_commands.ab3@2275> INCLUDE "internal_commands.ab3"
0003CC00 <internal_commands.ab3@2276> INCLUDE "internal_commands.ab3"
0003CC04 <internal_commands.ab3@2277> INCLUDE "internal_commands.ab3"
0003CC08 <internal_commands.ab3@2278> INCLUDE "internal_commands.ab3"
0003CC0A <internal_commands.ab3@2281> INCLUDE "internal_commands.ab3"
0003CC0C <internal_commands.ab3@2282> INCLUDE "internal_commands.ab3"
0003CC10 <internal_commands.ab3@2283> INCLUDE "internal_commands.ab3"
0003CC14 <internal_commands.ab3@2284> INCLUDE "internal_commands.ab3"
0003CC18 <internal_commands.ab3@2285> INCLUDE "internal_commands.ab3"
0003CC1C <internal_commands.ab3@2286> INCLUDE "internal_commands.ab3"
0003CC1E <internal_commands.ab3@2289> INCLUDE "internal_commands.ab3"
0003CC20 <internal_commands.ab3@2290> INCLUDE "internal_commands.ab3"
0003CC24 <internal_commands.ab3@2291> INCLUDE "internal_commands.ab3"
0003CC28 <internal_commands.ab3@2292> INCLUDE "internal_commands.ab3"
0003CC2C <internal_commands.ab3@2293> INCLUDE "internal_commands.ab3"
0003CC30 <internal_commands.ab3@2294> INCLUDE "internal_commands.ab3"
0003CC32 <internal_commands.ab3@2295> INCLUDE "internal_commands.ab3"
0003CC34 <internal_commands.ab3@2298> INCLUDE "internal_commands.ab3"
0003CC36 <internal_commands.ab3@2299> INCLUDE "internal_commands.ab3"
0003CC3A <internal_commands.ab3@2300> INCLUDE "internal_commands.ab3"
0003CC3C <internal_commands.ab3@2302> INCLUDE "internal_commands.ab3"
0003CC40 <internal_commands.ab3@2303> INCLUDE "internal_commands.ab3"
0003CC42 <internal_commands.ab3@2307> INCLUDE "internal_commands.ab3"
0003CC46 <internal_commands.ab3@2308> INCLUDE "internal_commands.ab3"
0003CC48 <internal_commands.ab3@2309> INCLUDE "internal_commands.ab3"
0003CC4C <internal_commands.ab3@2310> INCLUDE "internal_commands.ab3"
0003CC50 <internal_commands.ab3@2311> INCLUDE "internal_commands.ab3"
0003CC54 <internal_commands.ab3@2312> INCLUDE "internal_commands.ab3"
0003CC58 <internal_commands.ab3@2316> INCLUDE "internal_commands.ab3"
0003CC5C <internal_commands.ab3@2317> INCLUDE "internal_commands.ab3"
0003CC60 <internal_commands.ab3@2319> INCLUDE "internal_commands.ab3"
0003CC64 <internal_commands.ab3@2320> INCLUDE "internal_commands.ab3"
0003CC68 <internal_commands.ab3@2321> INCLUDE "internal_commands.ab3"
0003CC6C <internal_commands.ab3@2322> INCLUDE "internal_commands.ab3"
0003CC70 <internal_commands.ab3@2323> INCLUDE "internal_commands.ab3"
0003CC74 <internal_commands.ab3@2324> INCLUDE "internal_commands.ab3"
0003CC78 <internal_commands.ab3@2325> INCLUDE "internal_commands.ab3"
0003CC7C <internal_commands.ab3@2326> INCLUDE "internal_commands.ab3"
0003CC80 <internal_commands.ab3@2328> INCLUDE "internal_commands.ab3"
0003CC84 <internal_commands.ab3@2331> INCLUDE "internal_commands.ab3"
0003CC88 <internal_commands.ab3@2332> INCLUDE "internal_commands.ab3"
0003CC8C <internal_commands.ab3@2334> INCLUDE "internal_commands.ab3"
0003CC90 <internal_commands.ab3@2335> INCLUDE "internal_commands.ab3"
0003CC94 <internal_commands.ab3@2336> INCLUDE "internal_commands.ab3"
0003CC98 <internal_commands.ab3@2337> INCLUDE "internal_commands.ab3"
0003CC9C <internal_commands.ab3@2338> INCLUDE "internal_commands.ab3"
0003CCA0 <internal_commands.ab3@2339> INCLUDE "internal_commands.ab3"
0003CCA4 <internal_commands.ab3@2340> INCLUDE "internal_commands.ab3"
0003CCA8 <internal_commands.ab3@2341> INCLUDE "internal_commands.ab3"
0003CCAC <internal_commands.ab3@2343> INCLUDE "internal_commands.ab3"
0003CCB0 <internal_commands.ab3@2346> INCLUDE "internal_commands.ab3"
0003CCB2 <internal_commands.ab3@2347> INCLUDE "internal_commands.ab3"
0003CCB6 <internal_commands.ab3@2348> INCLUDE "internal_commands.ab3"
0003CCBA <internal_commands.ab3@2349> INCLUDE "internal_commands.ab3"
0003CCBE <internal_commands.ab3@2350> INCLUDE "internal_commands.ab3"
0003CCC2 <internal_commands.ab3@2351> INCLUDE "internal_commands.ab3"
0003CCC6 <internal_commands.ab3@2352> INCLUDE "internal_commands.ab3"
0003CCCA <internal_commands.ab3@2353> INCLUDE "internal_commands.ab3"
0003CCCE <internal_commands.ab3@2356> INCLUDE "internal_commands.ab3"
0003CCD2 <internal_commands.ab3@2357> INCLUDE "internal_commands.ab3"
0003CCD6 <internal_commands.ab3@2358> INCLUDE "internal_commands.ab3"
0003CCD8 <internal_commands.ab3@2359> INCLUDE "internal_commands.ab3"
0003CCDA <internal_commands.ab3@2362> INCLUDE "internal_commands.ab3"
0003CCDC <internal_commands.ab3@2363> INCLUDE "internal_commands.ab3"
0003CCDE <internal_commands.ab3@2364> INCLUDE "internal_commands.ab3"
0003CCE0 <internal_commands.ab3@2365> INCLUDE "internal_commands.ab3"
0003CCE4 <internal_commands.ab3@2366> INCLUDE "internal_commands.ab3"
0003CCE8 <internal_commands.ab3@2369> INCLUDE "internal_commands.ab3"
0003CCEC <internal_commands.ab3@2370> INCLUDE "internal_commands.ab3"
0003CCF0 <internal_commands.ab3@2371> INCLUDE "internal_commands.ab3"
0003CCF2 <internal_commands.ab3@2372> INCLUDE "internal_commands.ab3"
0003CCF6 <internal_commands.ab3@2373> INCLUDE "internal_commands.ab3"
0003CCFA <internal_commands.ab3@2376> INCLUDE "internal_commands.ab3"
0003CCFE <internal_commands.ab3@2379> INCLUDE "internal_commands.ab3"
0003CD02 <internal_commands.ab3@2380> INCLUDE "internal_commands.ab3"
0003CD04 <internal_commands.ab3@2381> INCLUDE "internal_commands.ab3"
0003CD06 <internal_commands.ab3@2382> INCLUDE "internal_commands.ab3"
0003CD0A <internal_commands.ab3@2383> INCLUDE "internal_commands.ab3"
0003CD0E <internal_commands.ab3@2386> INCLUDE "internal_commands.ab3"
0003CD12 <internal_commands.ab3@2387> INCLUDE "internal_commands.ab3"
0003CD16 <internal_commands.ab3@2390> INCLUDE "internal_commands.ab3"
0003CD1A <internal_commands.ab3@2393> INCLUDE "internal_commands.ab3"
0003CD1E <internal_commands.ab3@2394> INCLUDE "internal_commands.ab3"
0003CD20 <internal_commands.ab3@2395> INCLUDE "internal_commands.ab3"
0003CD22 <internal_commands.ab3@2396> INCLUDE "internal_commands.ab3"
0003CD26 <internal_commands.ab3@2397> INCLUDE "internal_commands.ab3"
0003CD2A <internal_commands.ab3@2400> INCLUDE "internal_commands.ab3"
0003CD2E <internal_commands.ab3@2401> INCLUDE "internal_commands.ab3"
0003CD30 <internal_commands.ab3@2405> INCLUDE "internal_commands.ab3"
0003CD34 <internal_commands.ab3@2406> INCLUDE "internal_commands.ab3"
0003CD38 <internal_commands.ab3@2407> INCLUDE "internal_commands.ab3"
0003CD3A <internal_commands.ab3@2408> INCLUDE "internal_commands.ab3"
0003CD3E <internal_commands.ab3@2409> INCLUDE "internal_commands.ab3"
0003CD42 <internal_commands.ab3@2410> INCLUDE "internal_commands.ab3"
0003CD44 <internal_commands.ab3@2413> INCLUDE "internal_commands.ab3"
0003CD48 <internal_commands.ab3@2414> INCLUDE "internal_commands.ab3"
0003CD4C <internal_commands.ab3@2415> INCLUDE "internal_commands.ab3"
0003CD50 <internal_commands.ab3@2416> INCLUDE "internal_commands.ab3"
0003CD54 <internal_commands.ab3@2419> INCLUDE "internal_commands.ab3"
0003CD58 <internal_commands.ab3@2420> INCLUDE "internal_commands.ab3"
0003CD5A <internal_commands.ab3@2424> INCLUDE "internal_commands.ab3"
0003CD5E <internal_commands.ab3@2425> INCLUDE "internal_commands.ab3"
0003CD60 <internal_commands.ab3@2426> INCLUDE "internal_commands.ab3"
0003CD62 <internal_commands.ab3@2427> INCLUDE "internal_commands.ab3"
0003CD64 <internal_commands.ab3@2428> INCLUDE "internal_commands.ab3"
0003CD68 <internal_commands.ab3@2429> INCLUDE "internal_commands.ab3"
0003CD6C <internal_commands.ab3@2432> INCLUDE "internal_commands.ab3"
0003CD70 <internal_commands.ab3@2433> INCLUDE "internal_commands.ab3"
0003CD74 <internal_commands.ab3@2434> INCLUDE "internal_commands.ab3"
0003CD78 <internal_commands.ab3@2435> INCLUDE "internal_commands.ab3"
0003CD7C <internal_commands.ab3@2439> INCLUDE "internal_commands.ab3"
0003CD80 <internal_commands.ab3@2440> INCLUDE "internal_commands.ab3"
0003CD84 <internal_commands.ab3@2444> INCLUDE "internal_commands.ab3"
0003CD88 <internal_commands.ab3@2445> INCLUDE "internal_commands.ab3"
0003CD8C <internal_commands.ab3@2449> INCLUDE "internal_commands.ab3"
0003CD90 <internal_commands.ab3@2450> INCLUDE "internal_commands.ab3"
0003CD94 <internal_commands.ab3@2454> INCLUDE "internal_commands.ab3"
0003CD96 <internal_commands.ab3@2456> INCLUDE "internal_commands.ab3"
0003CD9A <internal_commands.ab3@2457> INCLUDE "internal_commands.ab3"
0003CD9E <internal_commands.ab3@2458> INCLUDE "internal_commands.ab3"
0003CDA0 <internal_commands.ab3@2459> INCLUDE "internal_commands.ab3"
0003CDA2 <internal_commands.ab3@2460> INCLUDE "internal_commands.ab3"
0003CDA4 <internal_commands.ab3@2461> INCLUDE "internal_commands.ab3"
0003CDA8 <internal_commands.ab3@2462> INCLUDE "internal_commands.ab3"
0003CDAC <internal_commands.ab3@2463> INCLUDE "internal_commands.ab3"
0003CDAE <internal_commands.ab3@2464> INCLUDE "internal_commands.ab3"
0003CDB2 <internal_commands.ab3@2465> INCLUDE "internal_commands.ab3"
0003CDB4 <internal_commands.ab3@2466> INCLUDE "internal_commands.ab3"
0003CDB6 <internal_commands.ab3@2467> INCLUDE "internal_commands.ab3"
0003CDB8 <internal_commands.ab3@2468> INCLUDE "internal_commands.ab3"
0003CDBC <internal_commands.ab3@2469> INCLUDE "internal_commands.ab3"
0003CDC0 <internal_commands.ab3@2470> INCLUDE "internal_commands.ab3"
0003CDC2 <internal_commands.ab3@2473> INCLUDE "internal_commands.ab3"
0003CDC4 <internal_commands.ab3@2474> INCLUDE "internal_commands.ab3"
0003CDC8 <internal_commands.ab3@2475> INCLUDE "internal_commands.ab3"
0003CDCC <internal_commands.ab3@2476> INCLUDE "internal_commands.ab3"
0003CDD0 <internal_commands.ab3@2477> INCLUDE "internal_commands.ab3"
0003CDD4 <internal_commands.ab3@2478> INCLUDE "internal_commands.ab3"
0003CDD6 <internal_commands.ab3@2479> INCLUDE "internal_commands.ab3"
0003CDDA <internal_commands.ab3@2480> INCLUDE "internal_commands.ab3"
0003CDDE <internal_commands.ab3@2481> INCLUDE "internal_commands.ab3"
0003CDE2 <internal_commands.ab3@2482> INCLUDE "internal_commands.ab3"
0003CDE4 <internal_commands.ab3@2483> INCLUDE "internal_commands.ab3"
0003CDE6 <internal_commands.ab3@2484> INCLUDE "internal_commands.ab3"
0003CDE8 <internal_commands.ab3@2485> INCLUDE "internal_commands.ab3"
0003CDEA <internal_commands.ab3@2488> INCLUDE "internal_commands.ab3"
0003CDEC <internal_commands.ab3@2489> INCLUDE "internal_commands.ab3"
0003CDEE <internal_commands.ab3@2490> INCLUDE "internal_commands.ab3"
0003CDF2 <internal_commands.ab3@2491> INCLUDE "internal_commands.ab3"
0003CDF6 <internal_commands.ab3@2492> INCLUDE "internal_commands.ab3"
0003CDF8 <internal_commands.ab3@2496> INCLUDE "internal_commands.ab3"
0003CDFC <internal_commands.ab3@2497> INCLUDE "internal_commands.ab3"
0003CDFE <internal_commands.ab3@2498> INCLUDE "internal_commands.ab3"
0003CE02 <internal_commands.ab3@2499> INCLUDE "internal_commands.ab3"
0003CE06 <internal_commands.ab3@2500> INCLUDE "internal_commands.ab3"
0003CE08 <internal_commands.ab3@2501> INCLUDE "internal_commands.ab3"
0003CE0A <internal_commands.ab3@2504> INCLUDE "internal_commands.ab3"
0003CE0C <internal_commands.ab3@2508> INCLUDE "internal_commands.ab3"
0003CE10 <internal_commands.ab3@2509> INCLUDE "internal_commands.ab3"
0003CE12 <internal_commands.ab3@2510> INCLUDE "internal_commands.ab3"
0003CE16 <internal_commands.ab3@2511> INCLUDE "internal_commands.ab3"
0003CE1A <internal_commands.ab3@2512> INCLUDE "internal_commands.ab3"
0003CE1E <internal_commands.ab3@2513> INCLUDE "internal_commands.ab3"
0003CE20 <internal_commands.ab3@2516> INCLUDE "internal_commands.ab3"
0003CE24 <internal_commands.ab3@2520> INCLUDE "internal_commands.ab3"
0003CE28 <internal_commands.ab3@2521> INCLUDE "internal_commands.ab3"
0003CE2A <internal_commands.ab3@2522> INCLUDE "internal_commands.ab3"
0003CE2E <internal_commands.ab3@2523> INCLUDE "internal_commands.ab3"
0003CE32 <internal_commands.ab3@2524> INCLUDE "internal_commands.ab3"
0003CE36 <internal_commands.ab3@2527> INCLUDE "internal_commands.ab3"
0003CE3A <internal_commands.ab3@2528> INCLUDE "internal_commands.ab3"
0003CE3E <internal_commands.ab3@2529> INCLUDE "internal_commands.ab3"
0003CE42 <internal_commands.ab3@2530> INCLUDE "internal_commands.ab3"
0003CE46 <internal_commands.ab3@2531> INCLUDE "internal_commands.ab3"
0003CE4A <internal_commands.ab3@2538> INCLUDE "internal_commands.ab3"
0003CE4C <internal_commands.ab3@2539> INCLUDE "internal_commands.ab3"
0003CE51 <internal_commands.ab3@2540> INCLUDE "internal_commands.ab3"
0003CE52 <internal_commands.ab3@2541> INCLUDE "internal_commands.ab3"
0003CE56 <internal_commands.ab3@2545> INCLUDE "internal_commands.ab3"
0003CE58 <internal_commands.ab3@2546> INCLUDE "internal_commands.ab3"
0003CE5F <internal_commands.ab3@2547> INCLUDE "internal_commands.ab3"
0003CE60 <internal_commands.ab3@2548> INCLUDE "internal_commands.ab3"
0003CE64 <internal_commands.ab3@2552> INCLUDE "internal_commands.ab3"
0003CE66 <internal_commands.ab3@2553> INCLUDE "internal_commands.ab3"
0003CE6D <internal_commands.ab3@2554> INCLUDE "internal_commands.ab3"
0003CE6E <internal_commands.ab3@2555> INCLUDE "internal_commands.ab3"
0003CE72 <internal_commands.ab3@2559> INCLUDE "internal_commands.ab3"
0003CE74 <internal_commands.ab3@2560> INCLUDE "internal_commands.ab3"
0003CE7C <internal_commands.ab3@2561> INCLUDE "internal_commands.ab3"
0003CE7D <internal_commands.ab3@2562> INCLUDE "internal_commands.ab3"
0003CE7E <internal_commands.ab3@2563> INCLUDE "internal_commands.ab3"
0003CE82 <internal_commands.ab3@2566> INCLUDE "internal_commands.ab3"
0003CE84 <internal_commands.ab3@2567> INCLUDE "internal_commands.ab3"
0003CE89 <internal_commands.ab3@2568> INCLUDE "internal_commands.ab3"
0003CE9D <internal_commands.ab3@2569> INCLUDE "internal_commands.ab3"
0003CE9E <internal_commands.ab3@2570> INCLUDE "internal_commands.ab3"
0003CEA2 <internal_commands.ab3@2573> INCLUDE "internal_commands.ab3"
0003CEA4 <internal_commands.ab3@2574> INCLUDE "internal_commands.ab3"
0003CEA8 <internal_commands.ab3@2575> INCLUDE "internal_commands.ab3"
0003CEA9 <internal_commands.ab3@2576> INCLUDE "internal_commands.ab3"
0003CEAA <internal_commands.ab3@2577> INCLUDE "internal_commands.ab3"
0003CEAE <internal_commands.ab3@2580> INCLUDE "internal_commands.ab3"
0003CEB0 <internal_commands.ab3@2581> INCLUDE "internal_commands.ab3"
0003CEB3 <internal_commands.ab3@2582> INCLUDE "internal_commands.ab3"
0003CEB4 <internal_commands.ab3@2583> INCLUDE "internal_commands.ab3"
0003CEB8 <internal_commands.ab3@2587> INCLUDE "internal_commands.ab3"
0003CEBA <internal_commands.ab3@2588> INCLUDE "internal_commands.ab3"
0003CEC1 <internal_commands.ab3@2589> INCLUDE "internal_commands.ab3"
0003CEC2 <internal_commands.ab3@2590> INCLUDE "internal_commands.ab3"
0003CEC6 <internal_commands.ab3@2594> INCLUDE "internal_commands.ab3"
0003CEC8 <internal_commands.ab3@2595> INCLUDE "internal_commands.ab3"
0003CECE <internal_commands.ab3@2596> INCLUDE "internal_commands.ab3"
0003CEDB <internal_commands.ab3@2597> INCLUDE "internal_commands.ab3"
0003CEDC <internal_commands.ab3@2598> INCLUDE "internal_commands.ab3"
0003CEE0 <internal_commands.ab3@2601> INCLUDE "internal_commands.ab3"
0003CEE2 <internal_commands.ab3@2602> INCLUDE "internal_commands.ab3"
0003CEE9 <internal_commands.ab3@2603> INCLUDE "internal_commands.ab3"
0003CF01 <internal_commands.ab3@2604> INCLUDE "internal_commands.ab3"
0003CF02 <internal_commands.ab3@2605> INCLUDE "internal_commands.ab3"
0003CF06 <internal_commands.ab3@2608> INCLUDE "internal_commands.ab3"
0003CF08 <internal_commands.ab3@2609> INCLUDE "internal_commands.ab3"
0003CF0C <internal_commands.ab3@2610> INCLUDE "internal_commands.ab3"
0003CF2F <internal_commands.ab3@2611> INCLUDE "internal_commands.ab3"
0003CF30 <internal_commands.ab3@2612> INCLUDE "internal_commands.ab3"
0003CF34 <internal_commands.ab3@2615> INCLUDE "internal_commands.ab3"
0003CF36 <internal_commands.ab3@2616> INCLUDE "internal_commands.ab3"
0003CF3D <internal_commands.ab3@2617> INCLUDE "internal_commands.ab3"
0003CF48 <internal_commands.ab3@2618> INCLUDE "internal_commands.ab3"
0003CF4C <internal_commands.ab3@2622> INCLUDE "internal_commands.ab3"
0003CF4E <internal_commands.ab3@2623> INCLUDE "internal_commands.ab3"
0003CF54 <internal_commands.ab3@2624> INCLUDE "internal_commands.ab3"
0003CF55 <internal_commands.ab3@2625> INCLUDE "internal_commands.ab3"
0003CF56 <internal_commands.ab3@2626> INCLUDE "internal_commands.ab3"
0003CF5A <internal_commands.ab3@2629> INCLUDE "internal_commands.ab3"
0003CF5C <internal_commands.ab3@2630> INCLUDE "internal_commands.ab3"
0003CF61 <internal_commands.ab3@2631> INCLUDE "internal_commands.ab3"
0003CF62 <internal_commands.ab3@2632> INCLUDE "internal_commands.ab3"
0003CF66 <internal_commands.ab3@2636> INCLUDE "internal_commands.ab3"
0003CF68 <internal_commands.ab3@2637> INCLUDE "internal_commands.ab3"
0003CF6F <internal_commands.ab3@2638> INCLUDE "internal_commands.ab3"
0003CF81 <internal_commands.ab3@2639> INCLUDE "internal_commands.ab3"
0003CF82 <internal_commands.ab3@2640> INCLUDE "internal_commands.ab3"
0003CF86 <internal_commands.ab3@2643> INCLUDE "internal_commands.ab3"
0003CF88 <internal_commands.ab3@2644> INCLUDE "internal_commands.ab3"
0003CF92 <internal_commands.ab3@2645> INCLUDE "internal_commands.ab3"
0003CF93 <internal_commands.ab3@2646> INCLUDE "internal_commands.ab3"
0003CF94 <internal_commands.ab3@2647> INCLUDE "internal_commands.ab3"
0003CF98 <internal_commands.ab3@2650> INCLUDE "internal_commands.ab3"
0003CF9A <internal_commands.ab3@2651> INCLUDE "internal_commands.ab3"
0003CFA2 <internal_commands.ab3@2652> INCLUDE "internal_commands.ab3"
0003CFAF <internal_commands.ab3@2653> INCLUDE "internal_commands.ab3"
0003CFB0 <internal_commands.ab3@2654> INCLUDE "internal_commands.ab3"
0003CFB4 <internal_commands.ab3@2657> INCLUDE "internal_commands.ab3"
0003CFB6 <internal_commands.ab3@2658> INCLUDE "internal_commands.ab3"
0003CFB9 <internal_commands.ab3@2659> INCLUDE "internal_commands.ab3"
0003CFF4 <internal_commands.ab3@2660> INCLUDE "internal_commands.ab3"
0003CFF8 <internal_commands.ab3@2664> INCLUDE "internal_commands.ab3"
0003CFFA <internal_commands.ab3@2665> INCLUDE "internal_commands.ab3"
0003CFFE <internal_commands.ab3@2666> INCLUDE "internal_commands.ab3"
0003CFFF <internal_commands.ab3@2667> INCLUDE "internal_commands.ab3"
0003D000 <internal_commands.ab3@2668> INCLUDE "internal_commands.ab3"
0003D004 <internal_commands.ab3@2671> INCLUDE "internal_commands.ab3"
0003D006 <internal_commands.ab3@2672> INCLUDE "internal_commands.ab3"
0003D00E <internal_commands.ab3@2673> INCLUDE "internal_commands.ab3"
0003D00F <internal_commands.ab3@2674> INCLUDE "internal_commands.ab3"
0003D010 <internal_commands.ab3@2675> INCLUDE "internal_commands.ab3"
0003D014 <internal_commands.ab3@2678> INCLUDE "internal_commands.ab3"
0003D016 <internal_commands.ab3@2679> INCLUDE "internal_commands.ab3"
0003D01E <internal_commands.ab3@2680> INCLUDE "internal_commands.ab3"
0003D02E <internal_commands.ab3@2681> INCLUDE "internal_commands.ab3"
0003D032 <internal_commands.ab3@2685> INCLUDE "internal_commands.ab3"
0003D034 <internal_commands.ab3@2686> INCLUDE "internal_commands.ab3"
0003D03D <internal_commands.ab3@2687> INCLUDE "internal_commands.ab3"
0003D045 <internal_commands.ab3@2688> INCLUDE "internal_commands.ab3"
0003D046 <internal_commands.ab3@2689> INCLUDE "internal_commands.ab3"
0003D04A <internal_commands.ab3@2692> INCLUDE "internal_commands.ab3"
0003D04C <internal_commands.ab3@2693> INCLUDE "internal_commands.ab3"
0003D054 <internal_commands.ab3@2694> INCLUDE "internal_commands.ab3"
0003D05D <internal_commands.ab3@2695> INCLUDE "internal_commands.ab3"
0003D05E <internal_commands.ab3@2696> INCLUDE "internal_commands.ab3"
0003D062 <internal_commands.ab3@2699> INCLUDE "internal_commands.ab3"
0003D064 <internal_commands.ab3@2700> INCLUDE "internal_commands.ab3"
0003D06C <internal_commands.ab3@2701> INCLUDE "internal_commands.ab3"
0003D06D <internal_commands.ab3@2702> INCLUDE "internal_commands.ab3"
0003D06E <internal_commands.ab3@2703> INCLUDE "internal_commands.ab3"
0003D072 <internal_commands.ab3@2706> INCLUDE "internal_commands.ab3"
0003D074 <internal_commands.ab3@2707> INCLUDE "internal_commands.ab3"
0003D07A <internal_commands.ab3@2708> INCLUDE "internal_commands.ab3"
0003D07B <internal_commands.ab3@2709> INCLUDE "internal_commands.ab3"
0003D07C <internal_commands.ab3@2710> INCLUDE "internal_commands.ab3"
0003D080 <internal_commands.ab3@2713> INCLUDE "internal_commands.ab3"
0003D082 <internal_commands.ab3@2714> INCLUDE "internal_commands.ab3"
0003D089 <internal_commands.ab3@2715> INCLUDE "internal_commands.ab3"
0003D08A <internal_commands.ab3@2716> INCLUDE "internal_commands.ab3"
0003D08E <internal_commands.ab3@2720> INCLUDE "internal_commands.ab3"
0003D090 <internal_commands.ab3@2721> INCLUDE "internal_commands.ab3"
0003D097 <internal_commands.ab3@2722> INCLUDE "internal_commands.ab3"
0003D098 <internal_commands.ab3@2723> INCLUDE "internal_commands.ab3"
0003D09C <internal_commands.ab3@2727> INCLUDE "internal_commands.ab3"
0003D09E <internal_commands.ab3@2728> INCLUDE "internal_commands.ab3"
0003D0A5 <internal_commands.ab3@2729> INCLUDE "internal_commands.ab3"
0003D0A6 <internal_commands.ab3@2730> INCLUDE "internal_commands.ab3"
0003D0AA <internal_commands.ab3@2734> INCLUDE "internal_commands.ab3"
0003D0AC <internal_commands.ab3@2735> INCLUDE "internal_commands.ab3"
0003D0B3 <internal_commands.ab3@2736> INCLUDE "internal_commands.ab3"
0003D0B4 <internal_commands.ab3@2737> INCLUDE "internal_commands.ab3"
0003D0B8 <internal_commands.ab3@2741> INCLUDE "internal_commands.ab3"
0003D0BA <internal_commands.ab3@2742> INCLUDE "internal_commands.ab3"
0003D0BF <internal_commands.ab3@2743> INCLUDE "internal_commands.ab3"
0003D0D5 <internal_commands.ab3@2744> INCLUDE "internal_commands.ab3"
0003D0D6 <internal_commands.ab3@2745> INCLUDE "internal_commands.ab3"
0003D0DA <internal_commands.ab3@2748> INCLUDE "internal_commands.ab3"
0003D0DC <internal_commands.ab3@2749> INCLUDE "internal_commands.ab3"
0003D0E6 <internal_commands.ab3@2750> INCLUDE "internal_commands.ab3"
0003D0E7 <internal_commands.ab3@2751> INCLUDE "internal_commands.ab3"
0003D0E8 <internal_commands.ab3@2752> INCLUDE "internal_commands.ab3"
0003D0EC <internal_commands.ab3@2755> INCLUDE "internal_commands.ab3"
0003D0EE <internal_commands.ab3@2756> INCLUDE "internal_commands.ab3"
0003D0F9 <internal_commands.ab3@2757> INCLUDE "internal_commands.ab3"
0003D0FA <internal_commands.ab3@2758> INCLUDE "internal_commands.ab3"
0003D0FE <internal_commands.ab3@2762> INCLUDE "internal_commands.ab3"
0003D100 <internal_commands.ab3@2763> INCLUDE "internal_commands.ab3"
0003D10C <internal_commands.ab3@2764> INCLUDE "internal_commands.ab3"
0003D139 <internal_commands.ab3@2765> INCLUDE "internal_commands.ab3"
0003D13A <internal_commands.ab3@2766> INCLUDE "internal_commands.ab3"
0003D13E <internal_commands.ab3@2769> INCLUDE "internal_commands.ab3"
0003D140 <internal_commands.ab3@2770> INCLUDE "internal_commands.ab3"
0003D148 <internal_commands.ab3@2771> INCLUDE "internal_commands.ab3"
0003D17F <internal_commands.ab3@2772> INCLUDE "internal_commands.ab3"
0003D180 <internal_commands.ab3@2773> INCLUDE "internal_commands.ab3"
0003D184 <internal_commands.ab3@2776> INCLUDE "internal_commands.ab3"
0003D186 <internal_commands.ab3@2777> INCLUDE "internal_commands.ab3"
0003D18E <internal_commands.ab3@2778> INCLUDE "internal_commands.ab3"
0003D1AD <internal_commands.ab3@2779> INCLUDE "internal_commands.ab3"
0003D1AE <internal_commands.ab3@2780> INCLUDE "internal_commands.ab3"
0003D1B2 <internal_commands.ab3@2783> INCLUDE "internal_commands.ab3"
0003D1B4 <internal_commands.ab3@2784> INCLUDE "internal_commands.ab3"
0003D1BB <internal_commands.ab3@2785> INCLUDE "internal_commands.ab3"
0003D1F1 <internal_commands.ab3@2786> INCLUDE "internal_commands.ab3"
0003D1F2 <internal_commands.ab3@2787> INCLUDE "internal_commands.ab3"
0003D1F6 <internal_commands.ab3@2790> INCLUDE "internal_commands.ab3"
0003D1F8 <internal_commands.ab3@2791> INCLUDE "internal_commands.ab3"
0003D201 <internal_commands.ab3@2792> INCLUDE "internal_commands.ab3"
0003D236 <internal_commands.ab3@2793> INCLUDE "internal_commands.ab3"
0003D23A <internal_commands.ab3@2797> INCLUDE "internal_commands.ab3"
0003D23C <internal_commands.ab3@2798> INCLUDE "internal_commands.ab3"
0003D24C <internal_commands.ab3@2799> INCLUDE "internal_commands.ab3"
0003D283 <internal_commands.ab3@2800> INCLUDE "internal_commands.ab3"
0003D284 <internal_commands.ab3@2801> INCLUDE "internal_commands.ab3"
0003D284 <AmiBlitz3.ab3@28401> INCLUDE "internal_commands.ab3"
0003D288 <AmiBlitz3.ab3@28406>            Dc.l cif_lt                                     ;ciflt
0003D28C <AmiBlitz3.ab3@28407>            Dc.l cif_eq                                     ;cifeq
0003D290 <AmiBlitz3.ab3@28408>            Dc.l cif_gt                                     ;cifgt
0003D294 <AmiBlitz3.ab3@28409>            Ds.l 1                                          ;0
0003D298 <AmiBlitz3.ab3@28410>            Dc.l cif_le                                     ;cifle
0003D29C <AmiBlitz3.ab3@28411>            Dc.l cif_ne                                     ;cifne
0003D2A0 <AmiBlitz3.ab3@28412>            Dc.l cif_le                                     ;cifge
0003D2A4 <AmiBlitz3.ab3@28413>            Ds.l 1                                          ;0
0003D2A8 <AmiBlitz3.ab3@28414>            Dc.l cif_ge                                     ;cifge
0003D2AC <AmiBlitz3.ab3@28415>            Dc.l cif_ne                                     ;cifne
0003D2B0 <AmiBlitz3.ab3@28416>            Dc.l cif_ge                                     ;cifge
0003D2B4 <AmiBlitz3.ab3@28417>            Ds.l 1                                          ;0
0003D2B8 <AmiBlitz3.ab3@28420>            Dc.l do_newtype                                 ;donewtype
0003D2BC <AmiBlitz3.ab3@28421>            Dc.l do_end                                     ;doend
0003D2C0 <AmiBlitz3.ab3@28422>            Dc.l do_let                                     ;dolet
0003D2C4 <AmiBlitz3.ab3@28423>            Dc.l do_dim                                     ;dodim
0003D2C8 <AmiBlitz3.ab3@28424>            Dc.l do_goto                                    ;dogoto
0003D2CC <AmiBlitz3.ab3@28425>            Dc.l do_gosub                                   ;dogosub
0003D2D0 <AmiBlitz3.ab3@28426>            Dc.l do_return                                  ;doreturn
0003D2D4 <AmiBlitz3.ab3@28427>            Dc.l do_statement                               ;dostatement
0003D2D8 <AmiBlitz3.ab3@28428>            Dc.l do_function                                ;dofunc
0003D2DC <AmiBlitz3.ab3@28429>            Dc.l do_mousewait                               ;domwait
0003D2E0 <AmiBlitz3.ab3@28430>            Dc.l do_if                                      ;doif
0003D2E4 <AmiBlitz3.ab3@28431>            Dc.l do_while                                   ;dowhile
0003D2E8 <AmiBlitz3.ab3@28432>            Dc.l do_Macro                                   ;domacro
0003D2EC <AmiBlitz3.ab3@28433>            Dc.l do_select                                  ;doselect
0003D2F0 <AmiBlitz3.ab3@28434>            Dc.l do_case                                    ;docase
0003D2F4 <AmiBlitz3.ab3@28435>            Dc.l do_default                                 ;dodefault
0003D2F8 <AmiBlitz3.ab3@28436>            Dc.l do_AsmExit                                 ;doasmexit
0003D2FC <AmiBlitz3.ab3@28437>            Dc.l do_xinclude                                ;doxinclude
0003D300 <AmiBlitz3.ab3@28438>            Dc.l do_INCLUDE                                 ;doinclude
0003D304 <AmiBlitz3.ab3@28439>            Dc.l do_syntax                                  ;syntaxerr
0003D308 <AmiBlitz3.ab3@28440>            Dc.l do_shared                                  ;doshared
0003D30C <AmiBlitz3.ab3@28441>            Dc.l do_for                                     ;dofor
0003D310 <AmiBlitz3.ab3@28442>            Dc.l do_next                                    ;donext
0003D314 <AmiBlitz3.ab3@28443>            Dc.l syntaxerr                                  ; To
0003D318 <AmiBlitz3.ab3@28444>            Dc.l syntaxerr                                  ; Step
0003D31C <AmiBlitz3.ab3@28445>            Dc.l do_data                                    ;dodata
0003D320 <AmiBlitz3.ab3@28446>            Dc.l do_read                                    ;doread
0003D324 <AmiBlitz3.ab3@28450>            Dc.l syntaxerr                                  ; CNIF
0003D328 <AmiBlitz3.ab3@28451>            Dc.l syntaxerr                                  ; CSIF
0003D32C <AmiBlitz3.ab3@28452>            Dc.l syntaxerr                                  ; CELSE
0003D330 <AmiBlitz3.ab3@28453>            Dc.l syntaxerr                                  ; CEND
0003D334 <AmiBlitz3.ab3@28454>            Dc.l do_cerr                                    ;docerr
0003D338 <AmiBlitz3.ab3@28455>            Dc.l do_then                                    ;dothen
0003D33C <AmiBlitz3.ab3@28456>            Dc.l do_else                                    ;doelse
0003D340 <AmiBlitz3.ab3@28457>            Dc.l do_even4                                   ;doeven4
0003D344 <AmiBlitz3.ab3@28458>            Dc.l do_even8                                   ;doeven8
0003D348 <AmiBlitz3.ab3@28460>            Dc.l do_dc                                      ;dodc
0003D34C <AmiBlitz3.ab3@28461>            Dc.l do_ds                                      ;dods
0003D350 <AmiBlitz3.ab3@28462>            Dc.l do_even                                    ;doeven
0003D354 <AmiBlitz3.ab3@28463>            Dc.l do_dcb                                     ;dodcb
0003D358 <AmiBlitz3.ab3@28464>            Dc.l do_setreg                                  ;dosetreg
0003D35C <AmiBlitz3.ab3@28465>            Dc.l do_IncBin                                  ;doincbin
0003D360 <AmiBlitz3.ab3@28466>            Dc.l do_free                                    ;dofree
0003D364 <AmiBlitz3.ab3@28467>            Dc.l do_use                                     ;douse
0003D368 <AmiBlitz3.ab3@28468>            Dc.l do_Stop                                    ;dostop
0003D36C <AmiBlitz3.ab3@28469>            Dc.l do_Cont                                    ;docont
0003D370 <AmiBlitz3.ab3@28470>            Dc.l syntaxerr                                  ;syntaxeer
0003D374 <AmiBlitz3.ab3@28471>            Dc.l do_SetInt                                  ;dosetint
0003D378 <AmiBlitz3.ab3@28472>            Dc.l do_ClrInt                                  ;doclrint
0003D37C <AmiBlitz3.ab3@28473>            Dc.l do_MaxLen                                  ;domaxlen
0003D380 <AmiBlitz3.ab3@28474>            Dc.l do_DEFTYPE                                 ;dodeftype
0003D384 <AmiBlitz3.ab3@28475>            Dc.l do_BLITZ                                   ;doblitz
0003D388 <AmiBlitz3.ab3@28476>            Dc.l do_AMIGA                                   ;doamiga
0003D38C <AmiBlitz3.ab3@28477>            Dc.l do_QAMIGA                                  ;doqamiga
0003D390 <AmiBlitz3.ab3@28478>            Dc.l do_VWait                                   ;dovwait
0003D394 <AmiBlitz3.ab3@28479>            Dc.l do_LibJsr                                  ;dolibjsr
0003D398 <AmiBlitz3.ab3@28480>            Dc.l do_TokeJsr                                 ;dotokejsr
0003D39C <AmiBlitz3.ab3@28481>            Dc.l do_BLibJsr                                 ;doblibjsr
0003D3A0 <AmiBlitz3.ab3@28482>            Dc.l _extb                                      ;syntaxerr
0003D3A4 <AmiBlitz3.ab3@28486>            Dc.l syntaxerr                                  ;syntaxerr      ;flash2 ; for list
0003D3A8 <AmiBlitz3.ab3@28487>            Dc.l do_SetErr                                  ;doseterr
0003D3AC <AmiBlitz3.ab3@28488>            Dc.l do_ClrErr                                  ;doclrerr
0003D3B0 <AmiBlitz3.ab3@28489>            Dc.l syntaxerr                                  ;syntaxerr
0003D3B4 <AmiBlitz3.ab3@28490>            Dc.l do_ErrFail                                 ;doerrfail
0003D3B8 <AmiBlitz3.ab3@28491>            Dc.l syntaxerr
0003D3BC <AmiBlitz3.ab3@28492>            Dc.l syntaxerr                                  ;mod
0003D3C0 <AmiBlitz3.ab3@28493>            Dc.l syntaxerr                                  ;Pi
0003D3C4 <AmiBlitz3.ab3@28494>            Dc.l do_Repeat                                  ;dorepeat
0003D3C8 <AmiBlitz3.ab3@28495>            Dc.l do_Until                                   ;dountil
0003D3CC <AmiBlitz3.ab3@28496>            Dc.l do_PutReg                                  ;doputreg
0003D3D0 <AmiBlitz3.ab3@28497>            Dc.l do_Pop                                     ;dopop
0003D3D4 <AmiBlitz3.ab3@28498>            Dc.l do_INCDIR                                  ;doincdir
0003D3D8 <AmiBlitz3.ab3@28499>            Dc.l mydo_Endif2                                ;mydoendif2
0003D3DC <AmiBlitz3.ab3@28500>            Dc.l do_Wend                                    ;dowend
0003D3E0 <AmiBlitz3.ab3@28501>            Dc.l do_SysJsr                                  ;dosysjsr
0003D3E4 <AmiBlitz3.ab3@28502>            Dc.l do_WBStartup                               ;dowbstartup
0003D3E8 <AmiBlitz3.ab3@28503>            Dc.l syntaxerr
0003D3EC <AmiBlitz3.ab3@28504>            Dc.l do_Ongo                                    ;doongo
0003D3F0 <AmiBlitz3.ab3@28505>            Dc.l syntaxerr
0003D3F4 <AmiBlitz3.ab3@28506>            Dc.l do_Forever                                 ;doforever
0003D3F8 <AmiBlitz3.ab3@28507>            Dc.l do_Restore                                 ;dorestore
0003D3FC <AmiBlitz3.ab3@28508>            Dc.l do_Exchange                                ;doexchange
0003D400 <AmiBlitz3.ab3@28509>            Dc.l do_USEPATH                                 ;dousepath
0003D404 <AmiBlitz3.ab3@28510>            Dc.l do_CloseEd                                 ;doclosed
0003D408 <AmiBlitz3.ab3@28511>            Dc.l do_NoCli                                   ;donocli
0003D40C <AmiBlitz3.ab3@28512>            Dc.l syntaxerr                                  ;syntaxerr
0003D410 <AmiBlitz3.ab3@28513>            Dc.l syntaxerr                                  ;syntaxerr
0003D414 <AmiBlitz3.ab3@28514>            Dc.l syntaxerr                                  ;syntaxerr
0003D418 <AmiBlitz3.ab3@28515>            Dc.l syntaxerr                                  ;syntaxerr
0003D41C <AmiBlitz3.ab3@28516>            Dc.l syntaxerr                                  ;syntaxerr
0003D420 <AmiBlitz3.ab3@28517>            Dc.l do_runerrson                               ;dorunerrson
0003D424 <AmiBlitz3.ab3@28518>            Dc.l do_runerrsoff                              ;dorunerrsoff
0003D428 <AmiBlitz3.ab3@28519>            Dc.l do_uselastpath
0003D42C <AmiBlitz3.ab3@28520>            Dc.l do_regload
0003D430 <AmiBlitz3.ab3@28521>            Dc.l do_regsave
0003D434 <AmiBlitz3.ab3@28522>            Dc.l do_Object
0003D438 <AmiBlitz3.ab3@28523>            Dc.l do_usepath2
0003D43C <AmiBlitz3.ab3@28524>            Dc.l do_LastRunErrsMode
0003D440 <AmiBlitz3.ab3@28547> menu_items:Dc.l menu_compile_run                                ;menuadds oreg source
0003D444 <AmiBlitz3.ab3@28548>            Dc.l menu_run
0003D448 <AmiBlitz3.ab3@28549>            Dc.l menu_createexecutable
0003D44C <AmiBlitz3.ab3@28550>            Dc.l menu_dummyfunc                                  ;was menu_compileroptions
0003D450 <AmiBlitz3.ab3@28551>            Dc.l menu_createresidentfile
0003D454 <AmiBlitz3.ab3@28552> 
0003D458 <AmiBlitz3.ab3@28553> 
0003D45C <AmiBlitz3.ab3@28554>            Dc.l menu_dummyfunc                                  ;was menu_calculator
0003D460 <AmiBlitz3.ab3@28555>            Dc.l menu_reloadlibs
0003D464 <AmiBlitz3.ab3@28556>            Dc.l menu_loaddebugmodule
0003D468 <AmiBlitz3.ab3@28557>            Dc.l menu_dummyfunc
0003D46C <AmiBlitz3.ab3@28558>            Dc.l menu_newcreate
0003D470 <AmiBlitz3.ab3@28559>            Dc.l menu_dummyfunc
0003D474 <AmiBlitz3.ab3@28560>            Dc.l menu_toggledebug
0003D478 <AmiBlitz3.ab3@28561>            Dc.l menu_dummyfunc
0003D47C <AmiBlitz3.ab3@28562>            Dc.l menu_dummyfunc
0003D4A6 <AmiBlitz3.ab3@28567>   !basic
0003D508 <AmiBlitz3.ab3@28568>   error{!TRANS{"Invalid AmiBlitz3 menu item called!"} }
0003D526 <AmiBlitz3.ab3@28569>   !asm
0003D528 <AmiBlitz3.ab3@28570> RTS
0003D529 <AmiBlitz3.ab3@28576> set_autorun:               Dc.b $00
0003D52E <AmiBlitz3.ab3@28577> autorun:                   Dc.b $80,$01,$01,$00,$01
0003D52F <AmiBlitz3.ab3@28579> set_interruptcheck:        Dc.b $00
0003D534 <AmiBlitz3.ab3@28580> interruptcheck             Dc.b $80,$01,$01,$00,$01
0003D535 <AmiBlitz3.ab3@28582> set_assemblercheck:        Ds.b 1
0003D53A <AmiBlitz3.ab3@28583> assemblercheck:            Dc.b $00,$01,$01,$00,$01
0003D53B <AmiBlitz3.ab3@28585> set_overflowcheck:         Ds.b 1
0003D540 <AmiBlitz3.ab3@28586> overflowcheck:             Dc.b $00,$01,$01,$00,$01
0003D546 <AmiBlitz3.ab3@28588> default_obsolete:          Dc.b $00,$80,$01,$01,$00,$01
0003D54C <AmiBlitz3.ab3@28589> default_interruptcheck:    Dc.b $00,$80,$01,$01,$00,$01
0003D552 <AmiBlitz3.ab3@28590> default_overflowcheck:     Dc.b $00,$80,$01,$01,$00,$01
0003D554 <AmiBlitz3.ab3@28591> Even4
0003D560 <AmiBlitz3.ab3@28594> tsthead:                   Dc.l $000003F3,$00000000,$00000001
0003D568 <AmiBlitz3.ab3@28595>                            Dc.l $00000000,$00000000
0003D570 <AmiBlitz3.ab3@28596> tstsize1:                  Dc.l $00000100,$000003E9
0003D574 <AmiBlitz3.ab3@28597> tstsize2:                  Dc.l $00000100
0003D578 <AmiBlitz3.ab3@28598> tstend:                    Dc.l $000003EC
0003D580 <AmiBlitz3.ab3@28599> tstsize3:                  Ds.l 2
0003D584 <AmiBlitz3.ab3@28600> tstdone:                   Dc.l $000003F2
0003D588 <AmiBlitz3.ab3@28603> edstruct:                  Dc.l tokens                     ;data for ted
0003D58C <AmiBlitz3.ab3@28607>                            Dc.l 0
0003D590 <AmiBlitz3.ab3@28609>                            Dc.l read_xtrafile              ;load .xtra routine
0003D594 <AmiBlitz3.ab3@28610>                            Dc.l write_xtrafile             ;save .xtra routine
0003D598 <AmiBlitz3.ab3@28611>                            Dc.l call_menuentry             ;Menu Routine
0003D59C <AmiBlitz3.ab3@28612>                            Ds.l 1                          ;cleanup (?)
0003D5A0 <AmiBlitz3.ab3@28613>                            Dc.b ":",34,".;"
0003D69C <AmiBlitz3.ab3@28616> 
0003D77C <AmiBlitz3.ab3@28617>                            Ds.l 56
0003D77E <AmiBlitz3.ab3@28622> lslimm:                    Dc.b $E1,$48                                             ;LSL.W   #8,D0
0003D782 <AmiBlitz3.ab3@28625> use:                       Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0003D784 <AmiBlitz3.ab3@28626>                            Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0003D788 <AmiBlitz3.ab3@28627>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003D78E <AmiBlitz3.ab3@28631> beginarr:                  Dc.b $20,$3C,$00,$00,$00,$00                             ;MOVE.L  #$00000000,D0
0003D790 <AmiBlitz3.ab3@28635>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003D794 <AmiBlitz3.ab3@28638> putarr:                    Dc.b $2B,$40 :                            Dc.b $00,$00   ;MOVE.L  D0,$0000(A5)
0003D798 <AmiBlitz3.ab3@28641> doarr:                     Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003D79C <AmiBlitz3.ab3@28642>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003D79E <AmiBlitz3.ab3@28648>                            Dc.b $4A,$40                                             ;TST.W   D0
0003D7A0 <AmiBlitz3.ab3@28652>                            Dc.b $4A,$80                                             ;TST.L   D0
0003D7A2 <AmiBlitz3.ab3@28655> nops8:                     Dc.b $4E,$71                                             ;NOP
0003D7A4 <AmiBlitz3.ab3@28656>                            Dc.b $4E,$71                                             ;NOP
0003D7A6 <AmiBlitz3.ab3@28657>                            Dc.b $4E,$71                                             ;NOP
0003D7A8 <AmiBlitz3.ab3@28658>                            Dc.b $4E,$71                                             ;NOP
0003D7AA <AmiBlitz3.ab3@28659> nops4:                     Dc.b $4E,$71                                             ;NOP
0003D7AC <AmiBlitz3.ab3@28661>                            Dc.b $4E,$71                                             ;NOP
0003D7AE <AmiBlitz3.ab3@28662>                            Dc.b $4E,$71                                             ;NOP
0003D7B0 <AmiBlitz3.ab3@28663>                            Dc.b $4E,$71                                             ;NOP
0003D7B4 <AmiBlitz3.ab3@28667> dataget:                   Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003D7B8 <AmiBlitz3.ab3@28670> dataput:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003D7BA <AmiBlitz3.ab3@28673> stlenget:                  Dc.b $2F,$1B                                             ;MOVE.L  (A3)+,-(A7)
0003D7BC <AmiBlitz3.ab3@28676> stalign:                   Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D7BE <AmiBlitz3.ab3@28677>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003D7C2 <AmiBlitz3.ab3@28678>                            Dc.b $08,$80,$00,$00                                     ;BCLR    #0,D0
0003D7C4 <AmiBlitz3.ab3@28679>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003D7C6 <AmiBlitz3.ab3@28685> dataletb:                  Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D7CA <AmiBlitz3.ab3@28686>                            Dc.b $1B,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A5)
0003D7CC <AmiBlitz3.ab3@28691> dataletbl:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D7D0 <AmiBlitz3.ab3@28692>                            Dc.b $19,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A4)
0003D7D2 <AmiBlitz3.ab3@28696> dataletb2:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D7D4 <AmiBlitz3.ab3@28697>                            Dc.b $14,$9B                                             ;MOVE.B  (A3)+,(A2)
0003D7D8 <AmiBlitz3.ab3@28703> dataletw:                  Dc.b $3B,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A5)
0003D7DA <AmiBlitz3.ab3@28704>                            Dc.b $34,$9B                                             ;MOVE.W  (A3)+,(A2)
0003D7DE <AmiBlitz3.ab3@28705>                            Dc.b $39,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A4)
0003D7E2 <AmiBlitz3.ab3@28709> dataletl:                  Dc.b $2B,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A5)
0003D7E4 <AmiBlitz3.ab3@28710>                            Dc.b $24,$9B                                             ;MOVE.L  (A3)+,(A2)
0003D7E8 <AmiBlitz3.ab3@28711>                            Dc.b $29,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A4)
0003D7EA <AmiBlitz3.ab3@28714> nextfixw:                  Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003D7EE <AmiBlitz3.ab3@28717> nextfixw2:                 Dc.b $4F,$EF,$00,$0A                                     ;LEA $000A(A7),A7
0003D7F2 <AmiBlitz3.ab3@28720> nextfixl:                  Dc.b $4F,$EF,$00,$0C                                     ;LEA $000C(A7),A7
0003D7F6 <AmiBlitz3.ab3@28723> nextfixl2:                 Dc.b $4F,$EF,$00,$0E                                     ;LEA $000E(A7),A7
0003D7FA <AmiBlitz3.ab3@28727>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D7FC <AmiBlitz3.ab3@28728>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003D7FE <AmiBlitz3.ab3@28729>                            Dc.b $D1,$12                                             ;ADD.B   D0,(A2)
0003D802 <AmiBlitz3.ab3@28734>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D804 <AmiBlitz3.ab3@28735>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003D806 <AmiBlitz3.ab3@28736>                            Dc.b $D1,$52                                             ;ADD.W   D0,(A2)
0003D80A <AmiBlitz3.ab3@28741>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D80C <AmiBlitz3.ab3@28742>                            Dc.b $20,$17                                             ;MOVE.L  (A7),D0
0003D80E <AmiBlitz3.ab3@28743>                            Dc.b $D1,$92                                             ;ADD.L   D0,(A2)
0003D812 <AmiBlitz3.ab3@28748>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D814 <AmiBlitz3.ab3@28749>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D816 <AmiBlitz3.ab3@28750>                            Dc.b $22,$17                                             ;MOVE.L  (A7),D1
0003D81A <AmiBlitz3.ab3@28751>                            Dc.b $4E,$AE,$FF,$BE                                     ;JSR -$0042(A6)
0003D81C <AmiBlitz3.ab3@28752>                            Dc.b $24,$80                                             ;MOVE.L  D0,(A2)
0003D820 <AmiBlitz3.ab3@28757>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D822 <AmiBlitz3.ab3@28758>                            Dc.b $10,$12                                             ;MOVE.B  (A2),D0
0003D826 <AmiBlitz3.ab3@28759>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003D828 <AmiBlitz3.ab3@28760>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003D82C <AmiBlitz3.ab3@28761>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000001         ;.skip org source
0003D82E <AmiBlitz3.ab3@28762>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D830 <AmiBlitz3.ab3@28765>                            Dc.b $B0,$01                                             ;CMP.B   D1,D0
0003D834 <AmiBlitz3.ab3@28770>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D836 <AmiBlitz3.ab3@28771>                            Dc.b $30,$12                                             ;MOVE.W  (A2),D0
0003D83A <AmiBlitz3.ab3@28772>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003D83C <AmiBlitz3.ab3@28773>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003D840 <AmiBlitz3.ab3@28774>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000002         ;.skip org source
0003D842 <AmiBlitz3.ab3@28775>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D844 <AmiBlitz3.ab3@28778>                            Dc.b $B0,$41                                             ;CMP.W   D1,D0
0003D848 <AmiBlitz3.ab3@28783>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D84A <AmiBlitz3.ab3@28784>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D84E <AmiBlitz3.ab3@28785>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003D850 <AmiBlitz3.ab3@28786>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003D854 <AmiBlitz3.ab3@28787>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000003         ;.skip org source
0003D856 <AmiBlitz3.ab3@28788>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D858 <AmiBlitz3.ab3@28791>                            Dc.b $B0,$81                                             ;CMP.L   D1,D0
0003D85C <AmiBlitz3.ab3@28796>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D85E <AmiBlitz3.ab3@28797>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D862 <AmiBlitz3.ab3@28798>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003D868 <AmiBlitz3.ab3@28799>                            Dc.b $08,$2F,$00,$07,$00,$03                             ;BTST    #7,$0003(A7)
0003D86C <AmiBlitz3.ab3@28800>                            Dc.b $67,$00,$00,$04                                     ;BEQ.W   L000004
0003D86E <AmiBlitz3.ab3@28801>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D872 <AmiBlitz3.ab3@28808>                            Dc.b $4E,$AE,$FF,$D6                                     ;JSR -$002A(A6)
0003D874 <AmiBlitz3.ab3@28812> swapd0:                    Dc.b $48,$40                                             ;SWAP    D0
0003D876 <AmiBlitz3.ab3@28815> pushindex:                 Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003D87A <AmiBlitz3.ab3@28818> leaamp:                    Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003D87C <AmiBlitz3.ab3@28819> leaamp2:                   Dc.b $20,$0A                                             ;MOVE.L  A2,D0
0003D880 <AmiBlitz3.ab3@28822> leaampl:                   Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003D882 <AmiBlitz3.ab3@28825> stamp:                     Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D886 <AmiBlitz3.ab3@28828> stamp2:                    Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003D888 <AmiBlitz3.ab3@28832>                            Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
0003D88A <AmiBlitz3.ab3@28835> pushd0wd:                  Dc.b $3F,$00                                             ;MOVE.W  D0,-(A7)
0003D88C <AmiBlitz3.ab3@28838> pushd0l:                   Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D890 <AmiBlitz3.ab3@28841> movenumrep:                Dc.b $3E,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D7
0003D894 <AmiBlitz3.ab3@28844> preplibst:                 Dc.b $45,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A2
0003D898 <AmiBlitz3.ab3@28847> fixlibst:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003D89A <AmiBlitz3.ab3@28850> pushdn:                    Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D89C <AmiBlitz3.ab3@28853> movea3a7:                  Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003D8A0 <AmiBlitz3.ab3@28856> movestst2:                 Dc.b $20,$2F :                            Dc.b $00,$06   ;MOVE.L  $0006(A7),D0
0003D8A6 <AmiBlitz3.ab3@28857>                            Dc.b $3F,$6F,$00,$04,$00,$08                             ;MOVE.W  $0004(A7),$0008(A7)
0003D8A8 <AmiBlitz3.ab3@28858>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D8AC <AmiBlitz3.ab3@28862> movea7dn:                  Dc.b $20,$2F :                            Dc.b $00,$04   ;MOVE.L  $0004(A7),D0
0003D8AE <AmiBlitz3.ab3@28863>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D8B0 <AmiBlitz3.ab3@28867> moved0a3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003D8B4 <AmiBlitz3.ab3@28870> movestdn:                  Dc.b $20,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),D0
0003D8B6 <AmiBlitz3.ab3@28874>                            Dc.b $20,$0B                                             ;MOVE.L  A3,D0
0003D8B8 <AmiBlitz3.ab3@28878>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D8BA <AmiBlitz3.ab3@28882>                            Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003D8BE <AmiBlitz3.ab3@28885> moverts:                   Dc.b $2F,$57 :                            Dc.b $00,$00   ;MOVE.L  (A7),$0000(A7)
0003D8C2 <AmiBlitz3.ab3@28888> fixstack:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003D8C4 <AmiBlitz3.ab3@28891> fixq:                      Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003D8C6 <AmiBlitz3.ab3@28894> fix1:                      Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D8C8 <AmiBlitz3.ab3@28897> movedna3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003D8CC <AmiBlitz3.ab3@28900> least:                     Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003D8D0 <AmiBlitz3.ab3@28903> funcst:                    Dc.b $2F,$2C :                            Dc.b $00,$00   ;MOVE.L  $0000(A4),-(A7)
0003D8D2 <AmiBlitz3.ab3@28906> addq4a2:                   Dc.b $58,$4A                                             ;ADDQ.W  #4,A2
0003D8D4 <AmiBlitz3.ab3@28910>                            Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003D8D8 <AmiBlitz3.ab3@28913>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003D8DA <AmiBlitz3.ab3@28919>                            Dc.b $26,$5F                                             ;MOVEA.L (A7)+,A3
0003D8DE <AmiBlitz3.ab3@28922>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003D8E0 <AmiBlitz3.ab3@28928>                            Dc.b $CB,$4C                                             ;EXG A5,A4
0003D8E4 <AmiBlitz3.ab3@28932> linksize:                  Dc.b $4E,$54 :                            Dc.b $00,$00   ;LINK    A4,#-$0000
0003D8E6 <AmiBlitz3.ab3@28935> unlinka4:                  Dc.b $4E,$5C                                             ;UNLK    A4
0003D8E8 <AmiBlitz3.ab3@28939>                            Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003D8EA <AmiBlitz3.ab3@28943>                            Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003D8F0 <AmiBlitz3.ab3@28946> gotocode:                  Dc.b $4E,$F9,$00,$00,$00,$00                             ;JMP $00000000
0003D8F6 <AmiBlitz3.ab3@28949> gosubcode:                 Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003D8FE <AmiBlitz3.ab3@28953> mwait:                     Dc.b $08,$39,$00,$06,$00,$BF,$E0,$01                     ;BTST    #6,$00BFE001
0003D902 <AmiBlitz3.ab3@28954>                            Dc.b $66,$00,$FF,$F6                                     ;BNE.W   L000005       ;mwait: org source
0003D904 <AmiBlitz3.ab3@28958> libreg:                    Dc.b $20,$00                                             ;MOVE.L  D0,D0
0003D908 <AmiBlitz3.ab3@28961> libbase:                   Dc.b $2C,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A6
0003D90C <AmiBlitz3.ab3@28964> libjsr:                    Dc.b $4E,$AE :                            Dc.b $00,$00   ;JSR $0000(A6)
0003D910 <AmiBlitz3.ab3@28967> regtransd:                 Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003D914 <AmiBlitz3.ab3@28968> regtransa:                 Dc.b $20,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A0
0003D918 <AmiBlitz3.ab3@28972>                            Dc.b $26,$7C,$00,$00                                     ;MOVEA.L #$00000000,A3
0003D91C <AmiBlitz3.ab3@28974>                            Dc.l $3F1B                                               ;MOVE.W  (A3)+,-(A7)
0003D91E <AmiBlitz3.ab3@28977> movea2dn:                  Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D922 <AmiBlitz3.ab3@28980> moved3a5dn:                Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003D924 <AmiBlitz3.ab3@28983> stvarget2:                 Dc.b $70,$00                                             ;MOVEQ   #$00,D0
0003D926 <AmiBlitz3.ab3@28984>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D928 <AmiBlitz3.ab3@28985>                            Dc.b $4A,$92                                             ;TST.L   (A2)
0003D92C <AmiBlitz3.ab3@28986> 
0003D92E <AmiBlitz3.ab3@28987>                            Dc.b $20,$52                                             ;MOVEA.L (A2),A0
0003D930 <AmiBlitz3.ab3@28988>                            Dc.b $59,$48                                             ;SUBQ.W  #4,A0
0003D932 <AmiBlitz3.ab3@28989>                            Dc.b $2E,$98                                             ;MOVE.L  (A0)+,(A7)
0003D938 <AmiBlitz3.ab3@28991>                            Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003D93A <AmiBlitz3.ab3@28996> addcode:                   Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003D93C <AmiBlitz3.ab3@28997>                            Dc.b $D1,$97                                             ;ADD.L   D0,(A7)
0003D93E <AmiBlitz3.ab3@29001> pushlen:                   Dc.b $2F,$18                                             ;MOVE.L  (A0)+,-(A7)
0003D942 <AmiBlitz3.ab3@29004> leaa5d3a2:                 Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003D944 <AmiBlitz3.ab3@29007> pusha2:                    Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003D946 <AmiBlitz3.ab3@29011>                            Dc.b $24,$57                                             ;MOVEA.L (A7),A2
0003D948 <AmiBlitz3.ab3@29014> pulla2:                    Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003D94C <AmiBlitz3.ab3@29017> pulla2st:                  Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D94E <AmiBlitz3.ab3@29018>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D952 <AmiBlitz3.ab3@29022> pusha3:                    Dc.b $2F,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),-(A7)
0003D956 <AmiBlitz3.ab3@29023> pusha32:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003D95A <AmiBlitz3.ab3@29027> pulla3:                    Dc.b $2B,$5F :                            Dc.b $00,$00   ;MOVE.L  (A7)+,$0000(A5)
0003D95E <AmiBlitz3.ab3@29031> geta3:                     Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003D964 <AmiBlitz3.ab3@29035> numtoa0:                   Dc.b $20,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A0
0003D96A <AmiBlitz3.ab3@29038> numtoa2:                   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0003D96E <AmiBlitz3.ab3@29042> endarray:                  Dc.b $38,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D4
0003D972 <AmiBlitz3.ab3@29046>                            Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003D976 <AmiBlitz3.ab3@29047>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003D97C <AmiBlitz3.ab3@29052>                            Dc.b $20,$3C,$00,$00,$00,$04                             ;MOVE.L  #$00000004,D0
0003D980 <AmiBlitz3.ab3@29057>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003D982 <AmiBlitz3.ab3@29062>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003D986 <AmiBlitz3.ab3@29066>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003D988 <AmiBlitz3.ab3@29070> movea0:                    Dc.b $24,$52                                             ;MOVEA.L (A2),A2
0003D98A <AmiBlitz3.ab3@29073> adda0a0:                   Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003D98C <AmiBlitz3.ab3@29074>                            Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003D990 <AmiBlitz3.ab3@29078>                            Dc.b $2C,$78,$00,$04                                     ;MOVEA.L $0004,A6
0003D994 <AmiBlitz3.ab3@29082> movea5a0:                  Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003D998 <AmiBlitz3.ab3@29085> movea0a0:                  Dc.b $24,$6A :                            Dc.b $00,$00   ;MOVEA.L $0000(A2),A2
0003D99A <AmiBlitz3.ab3@29088> addqa0:                    Dc.b $52,$4A                                             ;ADDQ.W  #1,A2
0003D99E <AmiBlitz3.ab3@29091> leaa0a0:                   Dc.b $45,$EA :                            Dc.b $00,$00   ;LEA $0000(A2),A2
0003D9A0 <AmiBlitz3.ab3@29094> addrega2:                  Dc.b $D4,$C0                                             ;ADDA.W  D0,A2
0003D9A9 <AmiBlitz3.ab3@29098>                            Dc.b "ram:test",0
0003D9AA <AmiBlitz3.ab3@29099> Even
0003D9AE <AmiBlitz3.ab3@29103>                            Dc.l  0                          ;was  Ds.w 3 org source
0003D9B0 <AmiBlitz3.ab3@29105>                            Dc.w  0
0003D9B4 <AmiBlitz3.ab3@29108> _mathffpbase:              Ds.l 1                           ;maths org source
0003D9B6 <AmiBlitz3.ab3@29109> regnum:                    Ds.w 1                           ;regat org source       ;register being used!
0003D9B8 <AmiBlitz3.ab3@29110> typelen:                   Ds.w 1
0003D9BC <AmiBlitz3.ab3@29111> prevtype:                  Ds.l 1
0003D9C0 <AmiBlitz3.ab3@29112> lastsourcepos:             Ds.l 1                           ;prevloc org source
0003D9C2 <AmiBlitz3.ab3@29113> lastchar:                  Ds.w 1
0003D9C6 <AmiBlitz3.ab3@29114> thistype:                  Ds.l 1
0003D9CA <AmiBlitz3.ab3@29115> errstack:                  Ds.l 1
0003D9CE <AmiBlitz3.ab3@29116> errcont:                   Ds.l 1
0003D9D0 <AmiBlitz3.ab3@29117> linemode:                  Ds.w 1                          ;0 if norm, 1 if newtype
0003D9D2 <AmiBlitz3.ab3@29118> linesleft:                 Ds.w 1
0003D9D6 <AmiBlitz3.ab3@29119> sourceline:                Ds.l 1                          ;thisitem org source
0003D9DA <AmiBlitz3.ab3@29120> varbase:                   Ds.l 1                          ;firstvar org source
0003D9DE <AmiBlitz3.ab3@29121> alllocals:                 Ds.l 1
0003D9E2 <AmiBlitz3.ab3@29122> firstlocal:                Ds.l 1
0003D9E6 <AmiBlitz3.ab3@29123> firstglob:                 Ds.l 1
0003D9E8 <AmiBlitz3.ab3@29124> globalvarpointer:          Ds.w 1                          ;varoff org source
0003D9EA <AmiBlitz3.ab3@29125> locvaroff:                 Ds.w 1
0003D9EE <AmiBlitz3.ab3@29126> firstitem_:                 Ds.l 1
0003D9F0 <AmiBlitz3.ab3@29127> numlines_org:              Ds.w 1                          ;numlines org source
0003D9F2 <AmiBlitz3.ab3@29128> returncode_org:            Ds.w 1                          ;returncode org source
0003D9F6 <AmiBlitz3.ab3@29129> firstiff:                  Ds.l 1                          ;firstif org source
0003D9FA <AmiBlitz3.ab3@29130> ptr_seg_ped:               Ds.l 1                          ;segadd org source
0003DBFA <AmiBlitz3.ab3@29131> str_pedfile:               Ds.b #MAX_STRINGSIZE            ;segname org source
0003DC0A <AmiBlitz3.ab3@29132> str_mathffpname:           Dc.b "mathffp.library",0 : Even ;mathsname org source
0003DE0A <AmiBlitz3.ab3@29133> str_libfilename:           Ds.b #MAX_STRINGSIZE
0003E00A <AmiBlitz3.ab3@29134> str_path_userlibs:         Ds.b #MAX_STRINGSIZE
0003E20A <AmiBlitz3.ab3@29135> str_defaultdbug:           Ds.b #MAX_STRINGSIZE            ;debugname org source
0003E20E <AmiBlitz3.ab3@29137> ptr_seg_debugger:          Ds.l 1                          ;dseg org source
0003E40E <AmiBlitz3.ab3@29138> str_blitz3assign:          Ds.b #MAX_STRINGSIZE            ;dpath org source
0003E60E <AmiBlitz3.ab3@29140> str_path_acidlibs:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003E612 <AmiBlitz3.ab3@29141> size_acidlibs:             Ds.l 1                          ;acidlibs org source
0003E812 <AmiBlitz3.ab3@29142> str_path_deflibs:          Ds.b #MAX_STRINGSIZE            ;defname org source
0003E816 <AmiBlitz3.ab3@29143> size_deflibs:              Ds.l 1                          ;deflibs org source
0003EA16 <AmiBlitz3.ab3@29144> str_tempfilename:          Ds.b #MAX_STRINGSIZE
0003EC16 <AmiBlitz3.ab3@29146> str_temp_debugmodulename:  Ds.b #MAX_STRINGSIZE            ;dname org source
0003EC1A <AmiBlitz3.ab3@29147> ptr_temp_debugmodule:      Ds.l 1                          ;dname2 org source
0003EE1A <AmiBlitz3.ab3@29149> str_path_includes:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003EE1E <AmiBlitz3.ab3@29155>   Dc.b $E3,$10,$00,$01                                     ;icondata  
0003EE22 <AmiBlitz3.ab3@29156>   Dc.b $00,$00,$00,$00
0003EE26 <AmiBlitz3.ab3@29157>   Dc.b $00,$19,$00,$11
0003EE2A <AmiBlitz3.ab3@29158>   Dc.b $00,$2E,$00,$18
0003EE2E <AmiBlitz3.ab3@29159>   Dc.b $00,$04,$00,$03
0003EE32 <AmiBlitz3.ab3@29160>   Dc.b $00,$01,$00,$22
0003EE36 <AmiBlitz3.ab3@29161>   Dc.b $73,$68,$00,$00
0003EE3A <AmiBlitz3.ab3@29162>   Dc.b $00,$00,$00,$00
0003EE3E <AmiBlitz3.ab3@29163>   Dc.b $00,$00,$00,$00
0003EE42 <AmiBlitz3.ab3@29164>   Dc.b $00,$00,$00,$00
0003EE46 <AmiBlitz3.ab3@29165>   Dc.b $00,$00,$00,$00
0003EE4A <AmiBlitz3.ab3@29166>   Dc.b $00,$00,$00,$00
0003EE4E <AmiBlitz3.ab3@29167>   Dc.b $03,$22,$00,$21
0003EE52 <AmiBlitz3.ab3@29168>   Dc.b $3C,$28,$00,$22
0003EE56 <AmiBlitz3.ab3@29169>   Dc.b $6E,$C0,$00,$00
0003EE5A <AmiBlitz3.ab3@29170>   Dc.b $00,$12,$00,$00
0003EE5E <AmiBlitz3.ab3@29171>   Dc.b $00,$0E,$00,$00
0003EE62 <AmiBlitz3.ab3@29172>   Dc.b $00,$00,$00,$00
0003EE66 <AmiBlitz3.ab3@29173>   Dc.b $00,$00,$00,$00
0003EE6A <AmiBlitz3.ab3@29174>   Dc.b $00,$00,$00,$00
0003EE6E <AmiBlitz3.ab3@29175>   Dc.b $00,$00,$00,$2E
0003EE72 <AmiBlitz3.ab3@29176>   Dc.b $00,$17,$00,$02
0003EE76 <AmiBlitz3.ab3@29177>   Dc.b $00,$01,$8E,$80
0003EE7A <AmiBlitz3.ab3@29178>   Dc.b $03,$00,$00,$00
0003EE7E <AmiBlitz3.ab3@29179>   Dc.b $00,$00,$FF,$FF
0003EE82 <AmiBlitz3.ab3@29180>   Dc.b $FF,$FF,$FF,$FC
0003EE86 <AmiBlitz3.ab3@29181>   Dc.b $80,$00,$00,$00
0003EE8A <AmiBlitz3.ab3@29182>   Dc.b $00,$00,$80,$00
0003EE8E <AmiBlitz3.ab3@29183>   Dc.b $00,$3F,$BB,$40
0003EE92 <AmiBlitz3.ab3@29184>   Dc.b $80,$1F,$C0,$00
0003EE96 <AmiBlitz3.ab3@29185>   Dc.b $00,$00,$80,$3F
0003EE9A <AmiBlitz3.ab3@29186>   Dc.b $C0,$0F,$BB,$40
0003EE9E <AmiBlitz3.ab3@29187>   Dc.b $80,$1F,$C0,$00
0003EEA2 <AmiBlitz3.ab3@29188>   Dc.b $00,$00,$8E,$00
0003EEA6 <AmiBlitz3.ab3@29189>   Dc.b $F8,$00,$00,$00
0003EEAA <AmiBlitz3.ab3@29190>   Dc.b $8F,$01,$FF,$00
0003EEAE <AmiBlitz3.ab3@29191>   Dc.b $3B,$40,$81,$E3
0003EEB2 <AmiBlitz3.ab3@29192>   Dc.b $F7,$C0,$00,$00
0003EEB6 <AmiBlitz3.ab3@29193>   Dc.b $80,$7F,$F8,$70
0003EEBA <AmiBlitz3.ab3@29194>   Dc.b $3B,$40,$80,$0F
0003EEBE <AmiBlitz3.ab3@29195>   Dc.b $7C,$E0,$00,$00
0003EEC2 <AmiBlitz3.ab3@29196>   Dc.b $80,$00,$FD,$80
0003EEC6 <AmiBlitz3.ab3@29197>   Dc.b $00,$00,$80,$01
0003EECA <AmiBlitz3.ab3@29198>   Dc.b $F6,$00,$FB,$40
0003EECE <AmiBlitz3.ab3@29199>   Dc.b $80,$03,$EF,$00
0003EED2 <AmiBlitz3.ab3@29200>   Dc.b $00,$00,$80,$07
0003EED6 <AmiBlitz3.ab3@29201>   Dc.b $87,$80,$3B,$40
0003EEDA <AmiBlitz3.ab3@29202>   Dc.b $80,$0F,$01,$C0
0003EEDE <AmiBlitz3.ab3@29203>   Dc.b $00,$00,$80,$03
0003EEE2 <AmiBlitz3.ab3@29204>   Dc.b $F0,$70,$1D,$40
0003EEE6 <AmiBlitz3.ab3@29205>   Dc.b $80,$00,$18,$1C
0003EEEA <AmiBlitz3.ab3@29206>   Dc.b $00,$00,$80,$00
0003EEEE <AmiBlitz3.ab3@29207>   Dc.b $10,$06,$03,$40
0003EEF2 <AmiBlitz3.ab3@29208>   Dc.b $80,$00,$20,$1F
0003EEF6 <AmiBlitz3.ab3@29209>   Dc.b $00,$00,$80,$00
0003EEFA <AmiBlitz3.ab3@29210>   Dc.b $00,$00,$01,$40
0003EEFE <AmiBlitz3.ab3@29211>   Dc.b $80,$00,$00,$00
0003EF02 <AmiBlitz3.ab3@29212>   Dc.b $00,$00,$80,$00
0003EF06 <AmiBlitz3.ab3@29213>   Dc.b $00,$00,$00,$00
0003EF0A <AmiBlitz3.ab3@29214>   Dc.b $00,$00,$00,$00
0003EF0E <AmiBlitz3.ab3@29215>   Dc.b $00,$00,$00,$00
0003EF12 <AmiBlitz3.ab3@29216>   Dc.b $00,$00,$00,$04
0003EF16 <AmiBlitz3.ab3@29217>   Dc.b $00,$3F,$FC,$01
0003EF1A <AmiBlitz3.ab3@29218>   Dc.b $BB,$44,$00,$60
0003EF1E <AmiBlitz3.ab3@29219>   Dc.b $FE,$00,$00,$04
0003EF22 <AmiBlitz3.ab3@29220>   Dc.b $00,$CF,$FF,$01
0003EF26 <AmiBlitz3.ab3@29221>   Dc.b $BB,$44,$1F,$EF
0003EF2A <AmiBlitz3.ab3@29222>   Dc.b $FF,$00,$00,$04
0003EF2E <AmiBlitz3.ab3@29223>   Dc.b $33,$FF,$FF,$E0
0003EF32 <AmiBlitz3.ab3@29224>   Dc.b $00,$04,$37,$FE
0003EF36 <AmiBlitz3.ab3@29225>   Dc.b $7F,$FC,$1B,$44
0003EF3A <AmiBlitz3.ab3@29226>   Dc.b $0F,$9C,$FF,$FF
0003EF3E <AmiBlitz3.ab3@29227>   Dc.b $00,$04,$03,$E3
0003EF42 <AmiBlitz3.ab3@29228>   Dc.b $FF,$FF,$DB,$44
0003EF46 <AmiBlitz3.ab3@29229>   Dc.b $00,$7F,$BF,$FF
0003EF4A <AmiBlitz3.ab3@29230>   Dc.b $80,$04,$00,$0F
0003EF4E <AmiBlitz3.ab3@29231>   Dc.b $3F,$FE,$00,$04
0003EF52 <AmiBlitz3.ab3@29232>   Dc.b $00,$06,$7F,$F8
0003EF56 <AmiBlitz3.ab3@29233>   Dc.b $1B,$44,$00,$0C
0003EF5A <AmiBlitz3.ab3@29234>   Dc.b $F7,$FC,$00,$04
0003EF5E <AmiBlitz3.ab3@29235>   Dc.b $00,$19,$F9,$FE
0003EF62 <AmiBlitz3.ab3@29236>   Dc.b $1B,$44,$00,$33
0003EF66 <AmiBlitz3.ab3@29237>   Dc.b $FE,$7F,$00,$04
0003EF6A <AmiBlitz3.ab3@29238>   Dc.b $00,$0F,$FF,$BF
0003EF6E <AmiBlitz3.ab3@29239>   Dc.b $CD,$44,$00,$03
0003EF72 <AmiBlitz3.ab3@29240>   Dc.b $EF,$EF,$F0,$04
0003EF76 <AmiBlitz3.ab3@29241>   Dc.b $00,$00,$7F,$DF
0003EF7A <AmiBlitz3.ab3@29242>   Dc.b $FB,$44,$00,$00
0003EF7E <AmiBlitz3.ab3@29243>   Dc.b $FF,$A7,$FC,$04
0003EF82 <AmiBlitz3.ab3@29244>   Dc.b $00,$00,$7E,$3F
0003EF86 <AmiBlitz3.ab3@29245>   Dc.b $FD,$44,$00,$00
0003EF8A <AmiBlitz3.ab3@29246>   Dc.b $00,$00,$00,$04
0003EF8E <AmiBlitz3.ab3@29247>   Dc.b $7F,$FF,$FF,$FF
0003EF92 <AmiBlitz3.ab3@29248>   Dc.b $FF,$FC,$00,$00
0003EF96 <AmiBlitz3.ab3@29249>   Dc.b $00,$01,$00,$00
0003EF99 <AmiBlitz3.ab3@29250>   Dc.b $00,$00,$04
0003EF9F <AmiBlitz3.ab3@29253> str_infoextention2:  Dc.b ".info",0                           ;infoname org source
0003EFF7 <AmiBlitz3.ab3@29254> errorlimit_text:     Dc.b "There are too much errors, compiling is stop now. Please fix errors first and try again",0
0003EFF8 <AmiBlitz3.ab3@29255> Even
0003EFFC <AmiBlitz3.ab3@29257> sysdebug:            Dc.l $3F0
0003F000 <AmiBlitz3.ab3@29261> exelock              Ds.l 1
0003F004 <AmiBlitz3.ab3@29265> includesourceline    Dc.l 0
0003F008 <AmiBlitz3.ab3@29266> linenum              Ds.l 1
0003F00C <AmiBlitz3.ab3@29267> globallinecount      Ds.l 1
0003F02A <AmiBlitz3.ab3@29268> myversion            Dc.b "\\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
0003F02E <AmiBlitz3.ab3@29269> calc_option          Dc.l 1
0003F032 <AmiBlitz3.ab3@29270> versioninformation   Dc.l $00
0003F036 <AmiBlitz3.ab3@29271> number_of_builds     Dc.l $00
0003F038 <AmiBlitz3.ab3@29274> BSS
0003F03A <AmiBlitz3.ab3@29275> debugnest            Ds.w 1
0003F03E <AmiBlitz3.ab3@29276> instringf            Ds.l 1
0003F042 <AmiBlitz3.ab3@29277> funcscanon           Ds.l 1
0003F056 <AmiBlitz3.ab3@29278> storedebugmode       Ds.b 20
0003F05A <AmiBlitz3.ab3@29279> firsttimepref        Ds.l 1
0003F05B <AmiBlitz3.ab3@29280> funcparloop          Ds.b 1                   ; is 1 when function calling parameter are compile
0003F05C <AmiBlitz3.ab3@29281> blitzparloop         Ds.b 1                   ; is 1 when blitzlib calling parameters are compile
0003F05E <AmiBlitz3.ab3@29282> nostringopt          Ds.w 1
0003F0DE <AmiBlitz3.ab3@29283> path2:               Ds.l 32
0003F0E2 <AmiBlitz3.ab3@29284> typebase             Dc.l 0
0003F0E4 <AmiBlitz3.ab3@29285> doublepeek           Dc.w 0
0003F0E8 <AmiBlitz3.ab3@29286> lastoffset           Dc.l 0
0003F0EA <AmiBlitz3.ab3@29287> firsttime            Dc.w 0
0003F0EE <AmiBlitz3.ab3@29288> lastdestpointer      Dc.l 0
0003F0F2 <AmiBlitz3.ab3@29289> prevwritedat         Dc.l 0
0003F0F6 <AmiBlitz3.ab3@29290> lastsourceline       Dc.l 0
0003F0FA <AmiBlitz3.ab3@29291> lastwritedat         Dc.l 0
0003F0FC <AmiBlitz3.ab3@29292> makeexec             Dc.w 0
0003F0FE <AmiBlitz3.ab3@29293> makeexec_remember    Dc.w 0
0003F102 <AmiBlitz3.ab3@29294> sharebase            Ds.l 1
0003F106 <AmiBlitz3.ab3@29295> tempa7               Ds.l 1
0003F108 <AmiBlitz3.ab3@29296> incnif               Ds.w 1
0003F10C <AmiBlitz3.ab3@29297> tempstore            Ds.l 1
0003F110 <AmiBlitz3.ab3@29298> result               Ds.l 1
0003F112 <AmiBlitz3.ab3@29299> automode             Ds.w 1
0003F114 <AmiBlitz3.ab3@29300> stackcorrect         Ds.w 1
0003F116 <AmiBlitz3.ab3@29301> formode              Ds.w 1
0003F11A <AmiBlitz3.ab3@29302> limitregs            Ds.l 1
0003F11C <AmiBlitz3.ab3@29303> onestep              Ds.w 1
0003F120 <AmiBlitz3.ab3@29304> reqmode              Ds.l 1
0003F1C0 <AmiBlitz3.ab3@29305> inctab               Ds.l 40
0003F1C2 <AmiBlitz3.ab3@29306> funcoptimize_deprecated  Ds.w 1 ; deprecated, see comByte_FuncOptimize ; Wanderer
0003F1C6 <AmiBlitz3.ab3@29307> includeline          Ds.l 1
0003F1CA <AmiBlitz3.ab3@29308> morememadd           Ds.l 1
0003F1CC <AmiBlitz3.ab3@29309> objectcount          Ds.w 1
0003F1D0 <AmiBlitz3.ab3@29310> savefuncspace        Ds.l 1
0003F1D4 <AmiBlitz3.ab3@29311> lasttrap1            Ds.l 1
0003F1D8 <AmiBlitz3.ab3@29312> currentfunccall      Ds.l 1
0003F1D9 <AmiBlitz3.ab3@29313> skipfunc             Ds.b 1
0003F1DA <AmiBlitz3.ab3@29314> resdisable           Ds.b 1
0003F1DB <AmiBlitz3.ab3@29315> skiptoggle           Ds.b 1
0003F1DC <AmiBlitz3.ab3@29316> developobject        Ds.b 1
0003F1DE <AmiBlitz3.ab3@29317> iniffcommand         Ds.w 1
0003F1E0 <AmiBlitz3.ab3@29318> startoffsetmore      Ds.w 1
0003F1E2 <AmiBlitz3.ab3@29319> olddebugmode         Ds.w 1
0003F1E6 <AmiBlitz3.ab3@29320> fpucodeglobal        Ds.l 1
0003F1EA <AmiBlitz3.ab3@29321> fpucodelocal         Ds.l 1
0003F1EE <AmiBlitz3.ab3@29322> maxregs              Ds.l 1
0003F1F2 <AmiBlitz3.ab3@29323> fpucode              Ds.l 1
0003F1F4 <AmiBlitz3.ab3@29324> firstmline           Ds.w 1
0003F234 <AmiBlitz3.ab3@29325> regtable             Ds.l 16
0003F236 <AmiBlitz3.ab3@29326> exdebug              Ds.w 1
0003F238 <AmiBlitz3.ab3@29327> a2offset2            Ds.w 1
0003F23C <AmiBlitz3.ab3@29328> parnumtemp           Ds.l 1
0003F23D <AmiBlitz3.ab3@29329> doimmediate          Ds.b 1
0003F23E <AmiBlitz3.ab3@29330> notypecheck          Ds.b 1
0003F240 <AmiBlitz3.ab3@29331> vartype              Ds.w 1
0003F241 <AmiBlitz3.ab3@29332> peekaddrsize         Ds.b 1
0003F242 <AmiBlitz3.ab3@29333> declare2             Ds.b 1
0003F244 <AmiBlitz3.ab3@29334> parameternum         Ds.w 1
0003F248 <AmiBlitz3.ab3@29335> lasttoken            Ds.l 1
0003F24A <AmiBlitz3.ab3@29336> newvariable          Ds.w 1
0003F24B <AmiBlitz3.ab3@29337> declare              Ds.b 1
0003F24C <AmiBlitz3.ab3@29338> typecheck            Ds.b 1
0003F24D <AmiBlitz3.ab3@29339> nowdeclare           Ds.b 1
0003F24E <AmiBlitz3.ab3@29340> dimkeep              Ds.b 1
0003F24F <AmiBlitz3.ab3@29341> a4a5store            Ds.b 1
0003F250 <AmiBlitz3.ab3@29342> ___freetouse         Ds.b 1
0003F254 <AmiBlitz3.ab3@29343> firstiffstore        Ds.l 1
0003F258 <AmiBlitz3.ab3@29344> destpointer2         Ds.l 1
0003F25C <AmiBlitz3.ab3@29345> stackaddr            Ds.l 1
0003F360 <AmiBlitz3.ab3@29346> allowtab             Ds.b 260
0003F460 <AmiBlitz3.ab3@29347> templine             Ds.b 256
0003F462 <AmiBlitz3.ab3@29348> thenmode             Ds.w 1
0003F464 <AmiBlitz3.ab3@29349> temp                 Ds.w 1
0003F466 <AmiBlitz3.ab3@29350> tempregnum           Ds.w 1
0003F46A <AmiBlitz3.ab3@29352> numlines2            Ds.l 1
0003F46E <AmiBlitz3.ab3@29353> numlines             Ds.l 1
0003F470 <AmiBlitz3.ab3@29354> exmac                Ds.w 1
0003F472 <AmiBlitz3.ab3@29355> returncode           Ds.w 1
0003F476 <AmiBlitz3.ab3@29356> fp0iff               Ds.l 1
0003F47A <AmiBlitz3.ab3@29357> fp0addr              Ds.l 1
0003F47C <AmiBlitz3.ab3@29358> fp0mode              Ds.w 1
0003F47E <AmiBlitz3.ab3@29359> fp0var               Ds.w 1
0003F480 <AmiBlitz3.ab3@29360> fastfunc             Ds.w 1
0003F482 <AmiBlitz3.ab3@29361> retmode              Ds.w 1
0003F484 <AmiBlitz3.ab3@29362> parnum               Ds.w 1
0003F486 <AmiBlitz3.ab3@29363> regmask              Ds.w 1
0003F488 <AmiBlitz3.ab3@29364> regnumfunc           Ds.w 1
0003F48A <AmiBlitz3.ab3@29365> libmode              Ds.w 1
0003F48E <AmiBlitz3.ab3@29366> oldline              Ds.l 1
0003F492 <AmiBlitz3.ab3@29367> sourceline3          Ds.l 1
0003F55A <AmiBlitz3.ab3@29368> debugstore           Ds.b 200
0003F55E <AmiBlitz3.ab3@29369> deststore            Ds.l 1
0003F562 <AmiBlitz3.ab3@29371> loada                Ds.l 1
0003F566 <AmiBlitz3.ab3@29373> currtype             Ds.l 1
0003F56A <AmiBlitz3.ab3@29374> arrayoffset          Ds.l 1
0003F56E <AmiBlitz3.ab3@29375> lastlabel            Ds.l 1
0003F572 <AmiBlitz3.ab3@29376> curtemplabel         Ds.l 1
0003F576 <AmiBlitz3.ab3@29377> sourceline2          Ds.l 1
0003F676 <AmiBlitz3.ab3@29378> chartab              Ds.b 256
0003F6EE <AmiBlitz3.ab3@29379> tempspace            Ds.b 120
000BF6FE <AmiBlitz3.ab3@29380> instrtab             Ds.l 65538*2
000C76FE <AmiBlitz3.ab3@29382> labelhash            Ds.l 8192                             ;-bssstore clear every compile pass
000E7702 <AmiBlitz3.ab3@29383> replacedat           Ds.w 65538
000EF702 <AmiBlitz3.ab3@29384> variablehash         Ds.l 8192
000EF706 <AmiBlitz3.ab3@29385> newinitaddr          Ds.l 1
000EF70A <AmiBlitz3.ab3@29386> realbssend           Ds.l 1
000EF70C <AmiBlitz3.ab3@29387> saved0               Ds.w 1
000EF78C <AmiBlitz3.ab3@29388> lastpath             Ds.b 128
000EF80C <AmiBlitz3.ab3@29389> lastpath2            Ds.b 128
000EF8D4 <AmiBlitz3.ab3@29390> fpustackbase         Ds.w 100
000EF8D8 <AmiBlitz3.ab3@29391> 
000EF8DA <AmiBlitz3.ab3@29392> isconstantvalue      Dc.w 0  ; contain a type (1-7) if a constant expression is used as a Parameter or on right side of =
000EF8DE <AmiBlitz3.ab3@29393> lastfunction         Dc.l 0  ; the address of the function in the Parameter or rght side of =
000EF8E2 <AmiBlitz3.ab3@29394> leftsidetype         Dc.l 0  ;this contain the address of the type from the left side of the variable assign
000EF8E6 <AmiBlitz3.ab3@29395> rightsidetype        Dc.l 0  ; same as above but right side
000EF8EA <AmiBlitz3.ab3@29398> trap15temp           Ds.l 1
000EF8EE <AmiBlitz3.ab3@29399> trap15temp2          Ds.l 1
000EF8F2 <AmiBlitz3.ab3@29400> templibend           Ds.l 1
000EF8F6 <AmiBlitz3.ab3@29401> tempdata1start       Ds.l 1
000EF8FA <AmiBlitz3.ab3@29402> stacktrack           Ds.l 1
000EF8FE <AmiBlitz3.ab3@29403> pad                  Ds.l 1
000EF9FE <AmiBlitz3.ab3@29404> includetemp          Ds.b 256
000F03FE <AmiBlitz3.ab3@29405> includetemp2         Ds.b 256*10
000F0400 <AmiBlitz3.ab3@29406> funccall             Ds.w 1
000F0404 <AmiBlitz3.ab3@29409> ptr_resfile          Ds.l 1
000F0406 <AmiBlitz3.ab3@29410> CalculatorButtonBinFlag:    Ds.w 1
000F0408 <AmiBlitz3.ab3@29411> CalculatorButtonDecFlag:    Ds.w 1
000F040C <AmiBlitz3.ab3@29412> ped_startup_addr:    Ds.l 1
000F040D <AmiBlitz3.ab3@29413> start_without_libs:  Ds.b 1
000F040E <AmiBlitz3.ab3@29414> skip_bytes:          Ds.b 1
000F0412 <AmiBlitz3.ab3@29415> functionreturntype   Ds.l 1  ; a temp store of it.do not read this value
000F0416 <AmiBlitz3.ab3@29416> beforeparameterfetch Ds.l 1
000F041A <AmiBlitz3.ab3@29417> typetocast           Ds.l 1
000F041E <AmiBlitz3.ab3@29418> errorcounter         Ds.l 1
000F041F <AmiBlitz3.ab3@29419> iserror              Ds.b 1
000F0420 <AmiBlitz3.ab3@29420> Even
000F0424 <AmiBlitz3.ab3@29422> CLIMode:             Dc.l 0
000F0428 <AmiBlitz3.ab3@29423> XTRAEndPadBytes:     Dc.l 0                             ; 4 fill/pad/termination bytes for the xtra write function  tomsmart1
000F042C <AmiBlitz3.ab3@29424> maxerrorcount:       Ds.l 1                             ; added to make it changeable in CLI Mode tomsmart1
