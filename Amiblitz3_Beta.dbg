00000008 <AmiBlitz3.ab3@0> 
00000014 <AmiBlitz3.ab3@43> optimize 5                               ; don't use FPU (opt. 4)
00000076 <AmiBlitz3.ab3@64> !initasm                                 ; some initial mumbo jumbo
000000A0 <AmiBlitz3.ab3@65> !basic
000000AC <AmiBlitz3.ab3@70> cli_verbose = -1
000000B2 <AmiBlitz3.ab3@71> CLIMode     = False
000000C8 <AmiBlitz3.ab3@72> MaxLen cli_tempstr.s = 1024
000000E4 <AmiBlitz3.ab3@73> GetCurrentDirName_ &cli_tempstr,1024  ; get the current dir to restore it on exit
0000010E <AmiBlitz3.ab3@74> cli_path.s = Peek.s(&cli_tempstr)
0000010E <library_offsets.ab3@1> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <AmiBlitz3.ab3@78> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <dos.include.ab3@1> XINCLUDE "dos.include.ab3"
0000010E <error.include.ab3@1> XINCLUDE "dos.include.ab3"
00000146 <error.include.ab3@62> XINCLUDE "dos.include.ab3"
0000016E <error.include.ab3@63> XINCLUDE "dos.include.ab3"
00000196 <error.include.ab3@64> XINCLUDE "dos.include.ab3"
000001BE <error.include.ab3@65> XINCLUDE "dos.include.ab3"
000001C4 <error.include.ab3@66> XINCLUDE "dos.include.ab3"
000001F8 <error.include.ab3@67> XINCLUDE "dos.include.ab3"
0000022C <error.include.ab3@68> XINCLUDE "dos.include.ab3"
00000260 <error.include.ab3@69> XINCLUDE "dos.include.ab3"
0000027C <error.include.ab3@73> XINCLUDE "dos.include.ab3"
00000296 <error.include.ab3@99> XINCLUDE "dos.include.ab3"
000002A2 <error.include.ab3@101> XINCLUDE "dos.include.ab3"
000002A6 <error.include.ab3@102> XINCLUDE "dos.include.ab3"
000002B4 <error.include.ab3@104> XINCLUDE "dos.include.ab3"
000002F6 <error.include.ab3@124> XINCLUDE "dos.include.ab3"
0000037A <error.include.ab3@126> XINCLUDE "dos.include.ab3"
000003E6 <error.include.ab3@127> XINCLUDE "dos.include.ab3"
00000400 <error.include.ab3@129> XINCLUDE "dos.include.ab3"
00000438 <error.include.ab3@130> XINCLUDE "dos.include.ab3"
00000498 <error.include.ab3@131> XINCLUDE "dos.include.ab3"
000004A6 <error.include.ab3@133> XINCLUDE "dos.include.ab3"
000004B4 <error.include.ab3@134> XINCLUDE "dos.include.ab3"
000004C2 <error.include.ab3@135> XINCLUDE "dos.include.ab3"
000004D0 <error.include.ab3@136> XINCLUDE "dos.include.ab3"
000004F8 <error.include.ab3@137> XINCLUDE "dos.include.ab3"
00000506 <error.include.ab3@138> XINCLUDE "dos.include.ab3"
0000050E <error.include.ab3@139> XINCLUDE "dos.include.ab3"
00000540 <error.include.ab3@141> XINCLUDE "dos.include.ab3"
0000055A <error.include.ab3@146> XINCLUDE "dos.include.ab3"
00000592 <error.include.ab3@147> XINCLUDE "dos.include.ab3"
00000598 <error.include.ab3@148> XINCLUDE "dos.include.ab3"
000005DC <error.include.ab3@149> XINCLUDE "dos.include.ab3"
00000624 <error.include.ab3@150> XINCLUDE "dos.include.ab3"
0000062E <error.include.ab3@154> XINCLUDE "dos.include.ab3"
00000648 <error.include.ab3@156> XINCLUDE "dos.include.ab3"
00000692 <error.include.ab3@195> XINCLUDE "dos.include.ab3"
0000069A <error.include.ab3@197> XINCLUDE "dos.include.ab3"
00000706 <error.include.ab3@198> XINCLUDE "dos.include.ab3"
00000728 <error.include.ab3@199> XINCLUDE "dos.include.ab3"
00000788 <error.include.ab3@200> XINCLUDE "dos.include.ab3"
00000796 <error.include.ab3@202> XINCLUDE "dos.include.ab3"
000007A4 <error.include.ab3@203> XINCLUDE "dos.include.ab3"
000007B2 <error.include.ab3@204> XINCLUDE "dos.include.ab3"
000007C0 <error.include.ab3@205> XINCLUDE "dos.include.ab3"
00000820 <error.include.ab3@206> XINCLUDE "dos.include.ab3"
0000082E <error.include.ab3@207> XINCLUDE "dos.include.ab3"
00000864 <error.include.ab3@210> XINCLUDE "dos.include.ab3"
0000086E <error.include.ab3@214> XINCLUDE "dos.include.ab3"
0000088A <error.include.ab3@215> XINCLUDE "dos.include.ab3"
0000088A <multilist.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <strptr.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <useful.include.ab3@1> XINCLUDE "dos.include.ab3"
000008B8 <useful.include.ab3@286> XINCLUDE "dos.include.ab3"
000008C2 <useful.include.ab3@287> XINCLUDE "dos.include.ab3"
000008D6 <useful.include.ab3@288> XINCLUDE "dos.include.ab3"
000008DE <useful.include.ab3@289> XINCLUDE "dos.include.ab3"
00000906 <useful.include.ab3@290> XINCLUDE "dos.include.ab3"
0000092C <useful.include.ab3@291> XINCLUDE "dos.include.ab3"
0000094C <useful.include.ab3@294> XINCLUDE "dos.include.ab3"
0000095A <useful.include.ab3@295> XINCLUDE "dos.include.ab3"
00000980 <useful.include.ab3@296> XINCLUDE "dos.include.ab3"
00000988 <useful.include.ab3@298> XINCLUDE "dos.include.ab3"
00000990 <useful.include.ab3@299> XINCLUDE "dos.include.ab3"
00000996 <useful.include.ab3@300> XINCLUDE "dos.include.ab3"
000009B2 <useful.include.ab3@301> XINCLUDE "dos.include.ab3"
000009D6 <useful.include.ab3@302> XINCLUDE "dos.include.ab3"
000009EA <useful.include.ab3@303> XINCLUDE "dos.include.ab3"
000009F0 <useful.include.ab3@304> XINCLUDE "dos.include.ab3"
00000A3A <useful.include.ab3@305> XINCLUDE "dos.include.ab3"
00000A3C <useful.include.ab3@306> XINCLUDE "dos.include.ab3"
00000A4A <useful.include.ab3@308> XINCLUDE "dos.include.ab3"
00000A6A <useful.include.ab3@310> XINCLUDE "dos.include.ab3"
00000AC8 <useful.include.ab3@311> XINCLUDE "dos.include.ab3"
00000ACE <useful.include.ab3@312> XINCLUDE "dos.include.ab3"
00000ADC <useful.include.ab3@313> XINCLUDE "dos.include.ab3"
00000AF0 <useful.include.ab3@314> XINCLUDE "dos.include.ab3"
00000B02 <useful.include.ab3@315> XINCLUDE "dos.include.ab3"
00000B10 <useful.include.ab3@316> XINCLUDE "dos.include.ab3"
00000B16 <useful.include.ab3@317> XINCLUDE "dos.include.ab3"
00000B22 <useful.include.ab3@318> XINCLUDE "dos.include.ab3"
00000B36 <useful.include.ab3@321> XINCLUDE "dos.include.ab3"
00000B4A <useful.include.ab3@322> XINCLUDE "dos.include.ab3"
00000B5C <useful.include.ab3@323> XINCLUDE "dos.include.ab3"
00000B6A <useful.include.ab3@324> XINCLUDE "dos.include.ab3"
00000B88 <useful.include.ab3@325> XINCLUDE "dos.include.ab3"
00000B8E <useful.include.ab3@326> XINCLUDE "dos.include.ab3"
00000BA2 <useful.include.ab3@330> XINCLUDE "dos.include.ab3"
00000BAC <useful.include.ab3@331> XINCLUDE "dos.include.ab3"
00000BB4 <useful.include.ab3@332> XINCLUDE "dos.include.ab3"
00000BD2 <useful.include.ab3@333> XINCLUDE "dos.include.ab3"
00000BD8 <useful.include.ab3@334> XINCLUDE "dos.include.ab3"
00000C04 <useful.include.ab3@335> XINCLUDE "dos.include.ab3"
00000C0A <useful.include.ab3@337> XINCLUDE "dos.include.ab3"
00000C1C <useful.include.ab3@338> XINCLUDE "dos.include.ab3"
00000C34 <useful.include.ab3@339> XINCLUDE "dos.include.ab3"
00000C4C <useful.include.ab3@340> XINCLUDE "dos.include.ab3"
00000C6A <useful.include.ab3@341> XINCLUDE "dos.include.ab3"
00000C6C <useful.include.ab3@343> XINCLUDE "dos.include.ab3"
00000C7A <useful.include.ab3@344> XINCLUDE "dos.include.ab3"
00000CA0 <useful.include.ab3@345> XINCLUDE "dos.include.ab3"
00000D34 <useful.include.ab3@346> XINCLUDE "dos.include.ab3"
00000D42 <useful.include.ab3@348> XINCLUDE "dos.include.ab3"
00000D48 <useful.include.ab3@349> XINCLUDE "dos.include.ab3"
00000D72 <useful.include.ab3@350> XINCLUDE "dos.include.ab3"
00000D90 <useful.include.ab3@351> XINCLUDE "dos.include.ab3"
00000D90 <strptr.include.ab3@37> XINCLUDE "dos.include.ab3"
00000DAA <strptr.include.ab3@96> XINCLUDE "dos.include.ab3"
00000DB4 <strptr.include.ab3@97> XINCLUDE "dos.include.ab3"
00000DFC <strptr.include.ab3@98> XINCLUDE "dos.include.ab3"
00000E00 <strptr.include.ab3@100> XINCLUDE "dos.include.ab3"
00000E2E <strptr.include.ab3@197> XINCLUDE "dos.include.ab3"
00000E38 <strptr.include.ab3@198> XINCLUDE "dos.include.ab3"
00000E80 <strptr.include.ab3@199> XINCLUDE "dos.include.ab3"
00000E94 <strptr.include.ab3@200> XINCLUDE "dos.include.ab3"
00000EA6 <strptr.include.ab3@201> XINCLUDE "dos.include.ab3"
00000ECA <strptr.include.ab3@205> XINCLUDE "dos.include.ab3"
00000ED4 <strptr.include.ab3@208> XINCLUDE "dos.include.ab3"
00000EE2 <strptr.include.ab3@209> XINCLUDE "dos.include.ab3"
00000EEC <strptr.include.ab3@210> XINCLUDE "dos.include.ab3"
00000F14 <strptr.include.ab3@211> XINCLUDE "dos.include.ab3"
00000F2E <strptr.include.ab3@212> XINCLUDE "dos.include.ab3"
00000F46 <strptr.include.ab3@216> XINCLUDE "dos.include.ab3"
00000F60 <strptr.include.ab3@282> XINCLUDE "dos.include.ab3"
00000F6A <strptr.include.ab3@283> XINCLUDE "dos.include.ab3"
00000F78 <strptr.include.ab3@284> XINCLUDE "dos.include.ab3"
00000FAA <strptr.include.ab3@285> XINCLUDE "dos.include.ab3"
00000FC8 <strptr.include.ab3@287> XINCLUDE "dos.include.ab3"
00000FD2 <strptr.include.ab3@288> XINCLUDE "dos.include.ab3"
00000FD2 <multilist.include.ab3@44> XINCLUDE "dos.include.ab3"
00000FE8 <multilist.include.ab3@61> XINCLUDE "dos.include.ab3"
00001002 <multilist.include.ab3@406> XINCLUDE "dos.include.ab3"
0000100C <multilist.include.ab3@407> XINCLUDE "dos.include.ab3"
0000102E <multilist.include.ab3@408> XINCLUDE "dos.include.ab3"
00001052 <multilist.include.ab3@409> XINCLUDE "dos.include.ab3"
00001064 <multilist.include.ab3@410> XINCLUDE "dos.include.ab3"
0000107C <multilist.include.ab3@411> XINCLUDE "dos.include.ab3"
00001090 <multilist.include.ab3@412> XINCLUDE "dos.include.ab3"
000010A2 <multilist.include.ab3@415> XINCLUDE "dos.include.ab3"
000010B2 <multilist.include.ab3@416> XINCLUDE "dos.include.ab3"
000010B8 <multilist.include.ab3@417> XINCLUDE "dos.include.ab3"
000010C8 <multilist.include.ab3@418> XINCLUDE "dos.include.ab3"
000010D8 <multilist.include.ab3@419> XINCLUDE "dos.include.ab3"
000010F2 <multilist.include.ab3@420> XINCLUDE "dos.include.ab3"
000010F6 <multilist.include.ab3@422> XINCLUDE "dos.include.ab3"
00001110 <multilist.include.ab3@585> XINCLUDE "dos.include.ab3"
00001140 <multilist.include.ab3@586> XINCLUDE "dos.include.ab3"
0000114A <multilist.include.ab3@588> XINCLUDE "dos.include.ab3"
00001154 <multilist.include.ab3@589> XINCLUDE "dos.include.ab3"
00001176 <multilist.include.ab3@590> XINCLUDE "dos.include.ab3"
0000119A <multilist.include.ab3@591> XINCLUDE "dos.include.ab3"
000011AC <multilist.include.ab3@592> XINCLUDE "dos.include.ab3"
000011C4 <multilist.include.ab3@593> XINCLUDE "dos.include.ab3"
000011D8 <multilist.include.ab3@594> XINCLUDE "dos.include.ab3"
000011EA <multilist.include.ab3@597> XINCLUDE "dos.include.ab3"
000011FA <multilist.include.ab3@598> XINCLUDE "dos.include.ab3"
00001200 <multilist.include.ab3@599> XINCLUDE "dos.include.ab3"
00001210 <multilist.include.ab3@600> XINCLUDE "dos.include.ab3"
00001220 <multilist.include.ab3@601> XINCLUDE "dos.include.ab3"
0000123A <multilist.include.ab3@602> XINCLUDE "dos.include.ab3"
00001240 <multilist.include.ab3@603> XINCLUDE "dos.include.ab3"
00001246 <multilist.include.ab3@604> XINCLUDE "dos.include.ab3"
0000124A <multilist.include.ab3@605> XINCLUDE "dos.include.ab3"
00001264 <multilist.include.ab3@713> XINCLUDE "dos.include.ab3"
0000126C <multilist.include.ab3@714> XINCLUDE "dos.include.ab3"
00001276 <multilist.include.ab3@715> XINCLUDE "dos.include.ab3"
0000128C <multilist.include.ab3@716> XINCLUDE "dos.include.ab3"
000012A0 <multilist.include.ab3@717> XINCLUDE "dos.include.ab3"
000012C4 <multilist.include.ab3@718> XINCLUDE "dos.include.ab3"
000012D2 <multilist.include.ab3@721> XINCLUDE "dos.include.ab3"
000012DC <multilist.include.ab3@722> XINCLUDE "dos.include.ab3"
000012E2 <multilist.include.ab3@723> XINCLUDE "dos.include.ab3"
000012EC <multilist.include.ab3@724> XINCLUDE "dos.include.ab3"
000012F2 <multilist.include.ab3@725> XINCLUDE "dos.include.ab3"
00001310 <multilist.include.ab3@742> XINCLUDE "dos.include.ab3"
00001318 <multilist.include.ab3@743> XINCLUDE "dos.include.ab3"
00001322 <multilist.include.ab3@744> XINCLUDE "dos.include.ab3"
00001340 <multilist.include.ab3@745> XINCLUDE "dos.include.ab3"
00001356 <multilist.include.ab3@746> XINCLUDE "dos.include.ab3"
0000136A <multilist.include.ab3@747> XINCLUDE "dos.include.ab3"
0000139E <multilist.include.ab3@748> XINCLUDE "dos.include.ab3"
000013AC <multilist.include.ab3@751> XINCLUDE "dos.include.ab3"
000013B6 <multilist.include.ab3@752> XINCLUDE "dos.include.ab3"
000013BC <multilist.include.ab3@753> XINCLUDE "dos.include.ab3"
000013C6 <multilist.include.ab3@754> XINCLUDE "dos.include.ab3"
000013CA <multilist.include.ab3@756> XINCLUDE "dos.include.ab3"
000013D0 <multilist.include.ab3@757> XINCLUDE "dos.include.ab3"
000013EA <multilist.include.ab3@795> XINCLUDE "dos.include.ab3"
000013F4 <multilist.include.ab3@796> XINCLUDE "dos.include.ab3"
000013FE <multilist.include.ab3@797> XINCLUDE "dos.include.ab3"
00001414 <multilist.include.ab3@798> XINCLUDE "dos.include.ab3"
00001424 <multilist.include.ab3@799> XINCLUDE "dos.include.ab3"
0000142E <multilist.include.ab3@801> XINCLUDE "dos.include.ab3"
00001434 <multilist.include.ab3@802> XINCLUDE "dos.include.ab3"
00001438 <multilist.include.ab3@803> XINCLUDE "dos.include.ab3"
0000145A <multilist.include.ab3@821> XINCLUDE "dos.include.ab3"
00001462 <multilist.include.ab3@822> XINCLUDE "dos.include.ab3"
0000147C <multilist.include.ab3@823> XINCLUDE "dos.include.ab3"
00001486 <multilist.include.ab3@824> XINCLUDE "dos.include.ab3"
0000149C <multilist.include.ab3@825> XINCLUDE "dos.include.ab3"
000014B0 <multilist.include.ab3@826> XINCLUDE "dos.include.ab3"
00001506 <multilist.include.ab3@827> XINCLUDE "dos.include.ab3"
00001540 <multilist.include.ab3@828> XINCLUDE "dos.include.ab3"
00001552 <multilist.include.ab3@829> XINCLUDE "dos.include.ab3"
00001574 <multilist.include.ab3@830> XINCLUDE "dos.include.ab3"
0000157A <multilist.include.ab3@831> XINCLUDE "dos.include.ab3"
000015D0 <multilist.include.ab3@832> XINCLUDE "dos.include.ab3"
0000160A <multilist.include.ab3@833> XINCLUDE "dos.include.ab3"
00001610 <multilist.include.ab3@835> XINCLUDE "dos.include.ab3"
0000164A <multilist.include.ab3@836> XINCLUDE "dos.include.ab3"
00001684 <multilist.include.ab3@837> XINCLUDE "dos.include.ab3"
00001696 <multilist.include.ab3@839> XINCLUDE "dos.include.ab3"
000016A0 <multilist.include.ab3@840> XINCLUDE "dos.include.ab3"
000016A6 <multilist.include.ab3@841> XINCLUDE "dos.include.ab3"
000016B0 <multilist.include.ab3@842> XINCLUDE "dos.include.ab3"
000016C4 <multilist.include.ab3@843> XINCLUDE "dos.include.ab3"
0000170A <multilist.include.ab3@870> XINCLUDE "dos.include.ab3"
00001712 <multilist.include.ab3@871> XINCLUDE "dos.include.ab3"
00001730 <multilist.include.ab3@872> XINCLUDE "dos.include.ab3"
0000175C <multilist.include.ab3@873> XINCLUDE "dos.include.ab3"
0000177A <multilist.include.ab3@874> XINCLUDE "dos.include.ab3"
00001794 <multilist.include.ab3@875> XINCLUDE "dos.include.ab3"
000017AE <multilist.include.ab3@876> XINCLUDE "dos.include.ab3"
00001830 <multilist.include.ab3@877> XINCLUDE "dos.include.ab3"
00001844 <multilist.include.ab3@879> XINCLUDE "dos.include.ab3"
0000185C <multilist.include.ab3@880> XINCLUDE "dos.include.ab3"
00001862 <multilist.include.ab3@881> XINCLUDE "dos.include.ab3"
0000187A <multilist.include.ab3@882> XINCLUDE "dos.include.ab3"
00001890 <multilist.include.ab3@884> XINCLUDE "dos.include.ab3"
000018AA <multilist.include.ab3@886> XINCLUDE "dos.include.ab3"
000018BE <multilist.include.ab3@887> XINCLUDE "dos.include.ab3"
000018CC <multilist.include.ab3@888> XINCLUDE "dos.include.ab3"
00001922 <multilist.include.ab3@889> XINCLUDE "dos.include.ab3"
00001958 <multilist.include.ab3@890> XINCLUDE "dos.include.ab3"
00001988 <multilist.include.ab3@891> XINCLUDE "dos.include.ab3"
00001A10 <multilist.include.ab3@893> XINCLUDE "dos.include.ab3"
00001A16 <multilist.include.ab3@894> XINCLUDE "dos.include.ab3"
00001A24 <multilist.include.ab3@895> XINCLUDE "dos.include.ab3"
00001A7A <multilist.include.ab3@896> XINCLUDE "dos.include.ab3"
00001AB0 <multilist.include.ab3@897> XINCLUDE "dos.include.ab3"
00001AE0 <multilist.include.ab3@898> XINCLUDE "dos.include.ab3"
00001AE6 <multilist.include.ab3@901> XINCLUDE "dos.include.ab3"
00001B00 <multilist.include.ab3@902> XINCLUDE "dos.include.ab3"
00001B0E <multilist.include.ab3@903> XINCLUDE "dos.include.ab3"
00001B48 <multilist.include.ab3@904> XINCLUDE "dos.include.ab3"
00001B7E <multilist.include.ab3@905> XINCLUDE "dos.include.ab3"
00001BAE <multilist.include.ab3@906> XINCLUDE "dos.include.ab3"
00001BBC <multilist.include.ab3@909> XINCLUDE "dos.include.ab3"
00001BC6 <multilist.include.ab3@910> XINCLUDE "dos.include.ab3"
00001BCC <multilist.include.ab3@911> XINCLUDE "dos.include.ab3"
00001BD6 <multilist.include.ab3@912> XINCLUDE "dos.include.ab3"
00001BEA <multilist.include.ab3@913> XINCLUDE "dos.include.ab3"
00001BEA <dos.include.ab3@57> XINCLUDE "dos.include.ab3"
00001BEA <wbstart.include.ab3@1> XINCLUDE "dos.include.ab3"
00001C00 <wbstart.include.ab3@58> XINCLUDE "dos.include.ab3"
00001C0A <wbstart.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C22 <wbstart.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C24 <wbstart.include.ab3@63> XINCLUDE "dos.include.ab3"
00001C52 <wbstart.include.ab3@64> XINCLUDE "dos.include.ab3"
00001C52 <dos.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C68 <dos.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C70 <dos.include.ab3@79> XINCLUDE "dos.include.ab3"
00001C78 <dos.include.ab3@80> XINCLUDE "dos.include.ab3"
00001CA0 <dos.include.ab3@81> XINCLUDE "dos.include.ab3"
00001CA8 <dos.include.ab3@82> XINCLUDE "dos.include.ab3"
00001CD0 <dos.include.ab3@83> XINCLUDE "dos.include.ab3"
00001CF8 <dos.include.ab3@84> XINCLUDE "dos.include.ab3"
00001D20 <dos.include.ab3@85> XINCLUDE "dos.include.ab3"
00001D28 <dos.include.ab3@86> XINCLUDE "dos.include.ab3"
00001D30 <dos.include.ab3@87> XINCLUDE "dos.include.ab3"
00001D38 <dos.include.ab3@88> XINCLUDE "dos.include.ab3"
00001D40 <dos.include.ab3@89> XINCLUDE "dos.include.ab3"
00001D48 <dos.include.ab3@90> XINCLUDE "dos.include.ab3"
00001D50 <dos.include.ab3@91> XINCLUDE "dos.include.ab3"
00001D58 <dos.include.ab3@92> XINCLUDE "dos.include.ab3"
00001D60 <dos.include.ab3@93> XINCLUDE "dos.include.ab3"
00001D68 <dos.include.ab3@94> XINCLUDE "dos.include.ab3"
00001D88 <dos.include.ab3@95> XINCLUDE "dos.include.ab3"
00001D90 <dos.include.ab3@96> XINCLUDE "dos.include.ab3"
00001D98 <dos.include.ab3@97> XINCLUDE "dos.include.ab3"
00001DC0 <dos.include.ab3@99> XINCLUDE "dos.include.ab3"
00001DD6 <dos.include.ab3@130> XINCLUDE "dos.include.ab3"
00001DE2 <dos.include.ab3@131> XINCLUDE "dos.include.ab3"
00001DE6 <dos.include.ab3@132> XINCLUDE "dos.include.ab3"
00001DFC <dos.include.ab3@145> XINCLUDE "dos.include.ab3"
00001E16 <dos.include.ab3@146> XINCLUDE "dos.include.ab3"
00001E2C <dos.include.ab3@147> XINCLUDE "dos.include.ab3"
00001E56 <dos.include.ab3@148> XINCLUDE "dos.include.ab3"
00001E60 <dos.include.ab3@149> XINCLUDE "dos.include.ab3"
00001E66 <dos.include.ab3@150> XINCLUDE "dos.include.ab3"
00001E7C <dos.include.ab3@163> XINCLUDE "dos.include.ab3"
00001E96 <dos.include.ab3@164> XINCLUDE "dos.include.ab3"
00001EAC <dos.include.ab3@165> XINCLUDE "dos.include.ab3"
00001ED6 <dos.include.ab3@166> XINCLUDE "dos.include.ab3"
00001EE0 <dos.include.ab3@167> XINCLUDE "dos.include.ab3"
00001EE6 <dos.include.ab3@168> XINCLUDE "dos.include.ab3"
00001F10 <dos.include.ab3@184> XINCLUDE "dos.include.ab3"
00001F1C <dos.include.ab3@185> XINCLUDE "dos.include.ab3"
00001F3C <dos.include.ab3@186> XINCLUDE "dos.include.ab3"
00001F46 <dos.include.ab3@187> XINCLUDE "dos.include.ab3"
00001F56 <dos.include.ab3@188> XINCLUDE "dos.include.ab3"
00001F66 <dos.include.ab3@189> XINCLUDE "dos.include.ab3"
00001F70 <dos.include.ab3@191> XINCLUDE "dos.include.ab3"
00001F8A <dos.include.ab3@192> XINCLUDE "dos.include.ab3"
00001FA0 <dos.include.ab3@430> XINCLUDE "dos.include.ab3"
00001FB2 <dos.include.ab3@432> XINCLUDE "dos.include.ab3"
0000202C <dos.include.ab3@433> XINCLUDE "dos.include.ab3"
00002056 <dos.include.ab3@434> XINCLUDE "dos.include.ab3"
0000206E <dos.include.ab3@435> XINCLUDE "dos.include.ab3"
00002084 <dos.include.ab3@461> XINCLUDE "dos.include.ab3"
00002096 <dos.include.ab3@462> XINCLUDE "dos.include.ab3"
0000209A <dos.include.ab3@463> XINCLUDE "dos.include.ab3"
000020B0 <dos.include.ab3@479> XINCLUDE "dos.include.ab3"
000020B2 <dos.include.ab3@480> XINCLUDE "dos.include.ab3"
000020EC <dos.include.ab3@541> XINCLUDE "dos.include.ab3"
00002120 <dos.include.ab3@543> XINCLUDE "dos.include.ab3"
00002146 <dos.include.ab3@544> XINCLUDE "dos.include.ab3"
00002166 <dos.include.ab3@545> XINCLUDE "dos.include.ab3"
00002186 <dos.include.ab3@546> XINCLUDE "dos.include.ab3"
000021B0 <dos.include.ab3@549> XINCLUDE "dos.include.ab3"
000021FC <dos.include.ab3@551> XINCLUDE "dos.include.ab3"
0000220E <dos.include.ab3@552> XINCLUDE "dos.include.ab3"
0000225E <dos.include.ab3@553> XINCLUDE "dos.include.ab3"
00002288 <dos.include.ab3@556> XINCLUDE "dos.include.ab3"
000022A6 <dos.include.ab3@558> XINCLUDE "dos.include.ab3"
000022D0 <dos.include.ab3@674> XINCLUDE "dos.include.ab3"
000022E6 <dos.include.ab3@675> XINCLUDE "dos.include.ab3"
000022F0 <dos.include.ab3@676> XINCLUDE "dos.include.ab3"
00002318 <dos.include.ab3@677> XINCLUDE "dos.include.ab3"
0000231E <dos.include.ab3@678> XINCLUDE "dos.include.ab3"
00002346 <dos.include.ab3@679> XINCLUDE "dos.include.ab3"
00002370 <dos.include.ab3@681> XINCLUDE "dos.include.ab3"
0000238E <dos.include.ab3@682> XINCLUDE "dos.include.ab3"
000023B8 <dos.include.ab3@705> XINCLUDE "dos.include.ab3"
00002428 <dos.include.ab3@706> XINCLUDE "dos.include.ab3"
00002452 <dos.include.ab3@707> XINCLUDE "dos.include.ab3"
00002470 <dos.include.ab3@708> XINCLUDE "dos.include.ab3"
0000249A <dos.include.ab3@743> XINCLUDE "dos.include.ab3"
000024BA <dos.include.ab3@744> XINCLUDE "dos.include.ab3"
000024E6 <dos.include.ab3@745> XINCLUDE "dos.include.ab3"
000024F0 <dos.include.ab3@746> XINCLUDE "dos.include.ab3"
0000250A <dos.include.ab3@747> XINCLUDE "dos.include.ab3"
00002534 <dos.include.ab3@894> XINCLUDE "dos.include.ab3"
000025E2 <dos.include.ab3@895> XINCLUDE "dos.include.ab3"
000025F8 <dos.include.ab3@896> XINCLUDE "dos.include.ab3"
00002602 <dos.include.ab3@897> XINCLUDE "dos.include.ab3"
0000262A <dos.include.ab3@898> XINCLUDE "dos.include.ab3"
00002634 <dos.include.ab3@899> XINCLUDE "dos.include.ab3"
0000263A <dos.include.ab3@900> XINCLUDE "dos.include.ab3"
00002640 <dos.include.ab3@901> XINCLUDE "dos.include.ab3"
00002646 <dos.include.ab3@902> XINCLUDE "dos.include.ab3"
00002658 <dos.include.ab3@904> XINCLUDE "dos.include.ab3"
00002662 <dos.include.ab3@906> XINCLUDE "dos.include.ab3"
0000267C <dos.include.ab3@907> XINCLUDE "dos.include.ab3"
000026BA <dos.include.ab3@928> XINCLUDE "dos.include.ab3"
000026C2 <dos.include.ab3@929> XINCLUDE "dos.include.ab3"
00002770 <dos.include.ab3@930> XINCLUDE "dos.include.ab3"
00002784 <dos.include.ab3@931> XINCLUDE "dos.include.ab3"
000027C6 <dos.include.ab3@932> XINCLUDE "dos.include.ab3"
000027E6 <dos.include.ab3@934> XINCLUDE "dos.include.ab3"
000027F0 <dos.include.ab3@935> XINCLUDE "dos.include.ab3"
0000280C <dos.include.ab3@936> XINCLUDE "dos.include.ab3"
00002846 <dos.include.ab3@988> XINCLUDE "dos.include.ab3"
0000284E <dos.include.ab3@989> XINCLUDE "dos.include.ab3"
000028FC <dos.include.ab3@990> XINCLUDE "dos.include.ab3"
00002932 <dos.include.ab3@991> XINCLUDE "dos.include.ab3"
00002952 <dos.include.ab3@992> XINCLUDE "dos.include.ab3"
00002970 <dos.include.ab3@993> XINCLUDE "dos.include.ab3"
00002994 <dos.include.ab3@994> XINCLUDE "dos.include.ab3"
0000299E <dos.include.ab3@996> XINCLUDE "dos.include.ab3"
000029BA <dos.include.ab3@997> XINCLUDE "dos.include.ab3"
000029F4 <dos.include.ab3@1014> XINCLUDE "dos.include.ab3"
00002AA2 <dos.include.ab3@1015> XINCLUDE "dos.include.ab3"
00002ADA <dos.include.ab3@1016> XINCLUDE "dos.include.ab3"
00002AFA <dos.include.ab3@1017> XINCLUDE "dos.include.ab3"
00002B00 <dos.include.ab3@1018> XINCLUDE "dos.include.ab3"
00002B20 <dos.include.ab3@1019> XINCLUDE "dos.include.ab3"
00002B2A <dos.include.ab3@1020> XINCLUDE "dos.include.ab3"
00002B44 <dos.include.ab3@1021> XINCLUDE "dos.include.ab3"
00002B5C <dos.include.ab3@1022> XINCLUDE "dos.include.ab3"
00002B66 <dos.include.ab3@1025> XINCLUDE "dos.include.ab3"
00002B82 <dos.include.ab3@1026> XINCLUDE "dos.include.ab3"
00002BAC <dos.include.ab3@1161> XINCLUDE "dos.include.ab3"
00002BBA <dos.include.ab3@1163> XINCLUDE "dos.include.ab3"
00002C80 <dos.include.ab3@1164> XINCLUDE "dos.include.ab3"
00002CAA <dos.include.ab3@1165> XINCLUDE "dos.include.ab3"
00002CD2 <dos.include.ab3@1167> XINCLUDE "dos.include.ab3"
00002CFC <dos.include.ab3@1168> XINCLUDE "dos.include.ab3"
00002D26 <dos.include.ab3@1170> XINCLUDE "dos.include.ab3"
00002D44 <dos.include.ab3@1171> XINCLUDE "dos.include.ab3"
00002D6E <dos.include.ab3@1189> XINCLUDE "dos.include.ab3"
00002DDA <dos.include.ab3@1191> XINCLUDE "dos.include.ab3"
00002E02 <dos.include.ab3@1192> XINCLUDE "dos.include.ab3"
00002E10 <dos.include.ab3@1193> XINCLUDE "dos.include.ab3"
00002E44 <dos.include.ab3@1194> XINCLUDE "dos.include.ab3"
00002E52 <dos.include.ab3@1197> XINCLUDE "dos.include.ab3"
00002E74 <dos.include.ab3@1203> XINCLUDE "dos.include.ab3"
00002E82 <dos.include.ab3@1207> XINCLUDE "dos.include.ab3"
00002EA6 <dos.include.ab3@1208> XINCLUDE "dos.include.ab3"
00002ED0 <dos.include.ab3@1209> XINCLUDE "dos.include.ab3"
00002EFA <dos.include.ab3@1212> XINCLUDE "dos.include.ab3"
00002F18 <dos.include.ab3@1213> XINCLUDE "dos.include.ab3"
00002F42 <dos.include.ab3@1274> XINCLUDE "dos.include.ab3"
00002F9A <dos.include.ab3@1275> XINCLUDE "dos.include.ab3"
00002FC4 <dos.include.ab3@1276> XINCLUDE "dos.include.ab3"
00002FE2 <dos.include.ab3@1277> XINCLUDE "dos.include.ab3"
00002FF8 <dos.include.ab3@1351> XINCLUDE "dos.include.ab3"
00002FFE <dos.include.ab3@1353> XINCLUDE "dos.include.ab3"
00003008 <dos.include.ab3@1354> XINCLUDE "dos.include.ab3"
00003012 <dos.include.ab3@1355> XINCLUDE "dos.include.ab3"
00003030 <dos.include.ab3@1358> XINCLUDE "dos.include.ab3"
00003036 <dos.include.ab3@1359> XINCLUDE "dos.include.ab3"
0000303C <dos.include.ab3@1360> XINCLUDE "dos.include.ab3"
0000304C <dos.include.ab3@1362> XINCLUDE "dos.include.ab3"
00003052 <dos.include.ab3@1363> XINCLUDE "dos.include.ab3"
0000305A <dos.include.ab3@1364> XINCLUDE "dos.include.ab3"
00003082 <dos.include.ab3@1365> XINCLUDE "dos.include.ab3"
0000308C <dos.include.ab3@1366> XINCLUDE "dos.include.ab3"
00003096 <dos.include.ab3@1368> XINCLUDE "dos.include.ab3"
000030AA <dos.include.ab3@1369> XINCLUDE "dos.include.ab3"
000030C0 <dos.include.ab3@1474> XINCLUDE "dos.include.ab3"
000030C6 <dos.include.ab3@1480> XINCLUDE "dos.include.ab3"
000030EA <dos.include.ab3@1481> XINCLUDE "dos.include.ab3"
0000310E <dos.include.ab3@1482> XINCLUDE "dos.include.ab3"
00003132 <dos.include.ab3@1483> XINCLUDE "dos.include.ab3"
00003138 <dos.include.ab3@1484> XINCLUDE "dos.include.ab3"
00003164 <dos.include.ab3@1485> XINCLUDE "dos.include.ab3"
00003166 <dos.include.ab3@1486> XINCLUDE "dos.include.ab3"
00003194 <dos.include.ab3@1487> XINCLUDE "dos.include.ab3"
000031BE <dos.include.ab3@1503> XINCLUDE "dos.include.ab3"
00003242 <dos.include.ab3@1506> XINCLUDE "dos.include.ab3"
0000330A <dos.include.ab3@1507> XINCLUDE "dos.include.ab3"
00003314 <dos.include.ab3@1509> XINCLUDE "dos.include.ab3"
0000335E <dos.include.ab3@1510> XINCLUDE "dos.include.ab3"
000033AA <dos.include.ab3@1512> XINCLUDE "dos.include.ab3"
000033E2 <dos.include.ab3@1513> XINCLUDE "dos.include.ab3"
000033F4 <dos.include.ab3@1514> XINCLUDE "dos.include.ab3"
0000340A <dos.include.ab3@1515> XINCLUDE "dos.include.ab3"
00003410 <dos.include.ab3@1516> XINCLUDE "dos.include.ab3"
00003426 <dos.include.ab3@1517> XINCLUDE "dos.include.ab3"
0000345A <dos.include.ab3@1519> XINCLUDE "dos.include.ab3"
00003460 <dos.include.ab3@1520> XINCLUDE "dos.include.ab3"
0000346A <dos.include.ab3@1522> XINCLUDE "dos.include.ab3"
00003484 <dos.include.ab3@1523> XINCLUDE "dos.include.ab3"
000034CE <dos.include.ab3@1553> XINCLUDE "dos.include.ab3"
00003504 <dos.include.ab3@1555> XINCLUDE "dos.include.ab3"
00003528 <dos.include.ab3@1556> XINCLUDE "dos.include.ab3"
00003532 <dos.include.ab3@1557> XINCLUDE "dos.include.ab3"
0000355A <dos.include.ab3@1558> XINCLUDE "dos.include.ab3"
000035A2 <dos.include.ab3@1561> XINCLUDE "dos.include.ab3"
00003678 <dos.include.ab3@1563> XINCLUDE "dos.include.ab3"
000036A2 <dos.include.ab3@1564> XINCLUDE "dos.include.ab3"
000036C2 <dos.include.ab3@1565> XINCLUDE "dos.include.ab3"
000036FC <dos.include.ab3@1584> XINCLUDE "dos.include.ab3"
00003702 <dos.include.ab3@1586> XINCLUDE "dos.include.ab3"
00003708 <dos.include.ab3@1587> XINCLUDE "dos.include.ab3"
00003710 <dos.include.ab3@1588> XINCLUDE "dos.include.ab3"
00003746 <dos.include.ab3@1589> XINCLUDE "dos.include.ab3"
00003754 <dos.include.ab3@1590> XINCLUDE "dos.include.ab3"
0000375E <dos.include.ab3@1591> XINCLUDE "dos.include.ab3"
0000378A <dos.include.ab3@1592> XINCLUDE "dos.include.ab3"
00003798 <dos.include.ab3@1593> XINCLUDE "dos.include.ab3"
000037A2 <dos.include.ab3@1594> XINCLUDE "dos.include.ab3"
000037D0 <dos.include.ab3@1596> XINCLUDE "dos.include.ab3"
0000384E <dos.include.ab3@1599> XINCLUDE "dos.include.ab3"
000038A0 <dos.include.ab3@1602> XINCLUDE "dos.include.ab3"
000038B2 <dos.include.ab3@1603> XINCLUDE "dos.include.ab3"
00003920 <dos.include.ab3@1604> XINCLUDE "dos.include.ab3"
00003926 <dos.include.ab3@1605> XINCLUDE "dos.include.ab3"
00003972 <dos.include.ab3@1606> XINCLUDE "dos.include.ab3"
00003A40 <dos.include.ab3@1610> XINCLUDE "dos.include.ab3"
00003B20 <dos.include.ab3@1611> XINCLUDE "dos.include.ab3"
00003B8C <dos.include.ab3@1613> XINCLUDE "dos.include.ab3"
00003B92 <dos.include.ab3@1614> XINCLUDE "dos.include.ab3"
00003BAE <dos.include.ab3@1615> XINCLUDE "dos.include.ab3"
00003BBC <dos.include.ab3@1618> XINCLUDE "dos.include.ab3"
00003BC2 <dos.include.ab3@1619> XINCLUDE "dos.include.ab3"
00003BD4 <dos.include.ab3@1622> XINCLUDE "dos.include.ab3"
00003BEA <dos.include.ab3@1623> XINCLUDE "dos.include.ab3"
00003BF4 <dos.include.ab3@1624> XINCLUDE "dos.include.ab3"
00003C10 <dos.include.ab3@1625> XINCLUDE "dos.include.ab3"
00003C3A <dos.include.ab3@2220> XINCLUDE "dos.include.ab3"
00003C4E <dos.include.ab3@2221> XINCLUDE "dos.include.ab3"
00003C8C <dos.include.ab3@2222> XINCLUDE "dos.include.ab3"
00003D72 <dos.include.ab3@2223> XINCLUDE "dos.include.ab3"
00003D78 <dos.include.ab3@2224> XINCLUDE "dos.include.ab3"
00003DC8 <dos.include.ab3@2225> XINCLUDE "dos.include.ab3"
00003DF2 <dos.include.ab3@2226> XINCLUDE "dos.include.ab3"
00003E10 <dos.include.ab3@2227> XINCLUDE "dos.include.ab3"
00003E3A <dos.include.ab3@2251> XINCLUDE "dos.include.ab3"
00003E4E <dos.include.ab3@2252> XINCLUDE "dos.include.ab3"
00003E8C <dos.include.ab3@2253> XINCLUDE "dos.include.ab3"
00003F72 <dos.include.ab3@2254> XINCLUDE "dos.include.ab3"
00003F78 <dos.include.ab3@2255> XINCLUDE "dos.include.ab3"
00003FEA <dos.include.ab3@2256> XINCLUDE "dos.include.ab3"
00004014 <dos.include.ab3@2257> XINCLUDE "dos.include.ab3"
00004032 <dos.include.ab3@2258> XINCLUDE "dos.include.ab3"
0000406C <dos.include.ab3@2284> XINCLUDE "dos.include.ab3"
000040A4 <dos.include.ab3@2285> XINCLUDE "dos.include.ab3"
000040FC <dos.include.ab3@2286> XINCLUDE "dos.include.ab3"
00004160 <dos.include.ab3@2287> XINCLUDE "dos.include.ab3"
0000418A <dos.include.ab3@2289> XINCLUDE "dos.include.ab3"
000041AA <dos.include.ab3@2290> XINCLUDE "dos.include.ab3"
000041D4 <dos.include.ab3@2307> XINCLUDE "dos.include.ab3"
000041DA <dos.include.ab3@2308> XINCLUDE "dos.include.ab3"
000041F0 <dos.include.ab3@2309> XINCLUDE "dos.include.ab3"
000041FA <dos.include.ab3@2310> XINCLUDE "dos.include.ab3"
00004200 <dos.include.ab3@2311> XINCLUDE "dos.include.ab3"
00004210 <dos.include.ab3@2312> XINCLUDE "dos.include.ab3"
0000421A <dos.include.ab3@2314> XINCLUDE "dos.include.ab3"
00004234 <dos.include.ab3@2315> XINCLUDE "dos.include.ab3"
00004262 <dos.include.ab3@2557> XINCLUDE "dos.include.ab3"
00004284 <dos.include.ab3@2558> XINCLUDE "dos.include.ab3"
0000428C <dos.include.ab3@2559> XINCLUDE "dos.include.ab3"
0000429A <dos.include.ab3@2560> XINCLUDE "dos.include.ab3"
000042B4 <dos.include.ab3@2562> XINCLUDE "dos.include.ab3"
000042E2 <dos.include.ab3@2581> XINCLUDE "dos.include.ab3"
000042F6 <dos.include.ab3@2582> XINCLUDE "dos.include.ab3"
0000432A <dos.include.ab3@2583> XINCLUDE "dos.include.ab3"
00004344 <dos.include.ab3@2585> XINCLUDE "dos.include.ab3"
0000434C <dos.include.ab3@2586> XINCLUDE "dos.include.ab3"
0000435A <dos.include.ab3@2587> XINCLUDE "dos.include.ab3"
00004374 <dos.include.ab3@2589> XINCLUDE "dos.include.ab3"
0000439E <dos.include.ab3@2725> XINCLUDE "dos.include.ab3"
000043AA <dos.include.ab3@2727> XINCLUDE "dos.include.ab3"
000043CA <dos.include.ab3@2728> XINCLUDE "dos.include.ab3"
000043F0 <dos.include.ab3@2729> XINCLUDE "dos.include.ab3"
0000441C <dos.include.ab3@2730> XINCLUDE "dos.include.ab3"
00004434 <dos.include.ab3@2731> XINCLUDE "dos.include.ab3"
00004442 <dos.include.ab3@2733> XINCLUDE "dos.include.ab3"
00004448 <dos.include.ab3@2734> XINCLUDE "dos.include.ab3"
00004454 <dos.include.ab3@2735> XINCLUDE "dos.include.ab3"
0000445A <dos.include.ab3@2737> XINCLUDE "dos.include.ab3"
00004466 <dos.include.ab3@2738> XINCLUDE "dos.include.ab3"
00004476 <dos.include.ab3@2740> XINCLUDE "dos.include.ab3"
0000447C <dos.include.ab3@2741> XINCLUDE "dos.include.ab3"
00004488 <dos.include.ab3@2742> XINCLUDE "dos.include.ab3"
00004492 <dos.include.ab3@2744> XINCLUDE "dos.include.ab3"
000044AC <dos.include.ab3@2745> XINCLUDE "dos.include.ab3"
000044AC <AmiBlitz3.ab3@79> XINCLUDE "dos.include.ab3"
000044BA <AmiBlitz3.ab3@81> If dos_FromCLI{}
000044C0 <AmiBlitz3.ab3@82>   CLIMode.l=True
000044CC <AmiBlitz3.ab3@83>   error_SetFlags{#error_stdout}
000044CC <common.ab3@1> XINCLUDE "/Shared/common.ab3"
000044F4 <common.ab3@49> XINCLUDE "/Shared/common.ab3"
000044FA <common.ab3@262> XINCLUDE "/Shared/common.ab3"
000044FC <common.ab3@263> XINCLUDE "/Shared/common.ab3"
0000468C <common.ab3@264> XINCLUDE "/Shared/common.ab3"
00004690 <common.ab3@265> XINCLUDE "/Shared/common.ab3"
00004694 <common.ab3@267> XINCLUDE "/Shared/common.ab3"
00004698 <common.ab3@268> XINCLUDE "/Shared/common.ab3"
0000469C <common.ab3@270> XINCLUDE "/Shared/common.ab3"
000046A0 <common.ab3@271> XINCLUDE "/Shared/common.ab3"
000046A4 <common.ab3@272> XINCLUDE "/Shared/common.ab3"
000046A8 <common.ab3@273> XINCLUDE "/Shared/common.ab3"
000046AC <common.ab3@274> XINCLUDE "/Shared/common.ab3"
000046B0 <common.ab3@275> XINCLUDE "/Shared/common.ab3"
000046B4 <common.ab3@276> XINCLUDE "/Shared/common.ab3"
000046B8 <common.ab3@277> XINCLUDE "/Shared/common.ab3"
000046BC <common.ab3@278> XINCLUDE "/Shared/common.ab3"
000046C0 <common.ab3@280> XINCLUDE "/Shared/common.ab3"
000046C4 <common.ab3@282> XINCLUDE "/Shared/common.ab3"
000046C8 <common.ab3@283> XINCLUDE "/Shared/common.ab3"
000046CC <common.ab3@284> XINCLUDE "/Shared/common.ab3"
000046D0 <common.ab3@285> XINCLUDE "/Shared/common.ab3"
000046D4 <common.ab3@286> XINCLUDE "/Shared/common.ab3"
000046D8 <common.ab3@287> XINCLUDE "/Shared/common.ab3"
000046DC <common.ab3@288> XINCLUDE "/Shared/common.ab3"
000046E0 <common.ab3@289> XINCLUDE "/Shared/common.ab3"
000046E4 <common.ab3@290> XINCLUDE "/Shared/common.ab3"
000046E8 <common.ab3@291> XINCLUDE "/Shared/common.ab3"
000046F0 <common.ab3@294> XINCLUDE "/Shared/common.ab3"
000046F4 <common.ab3@295> XINCLUDE "/Shared/common.ab3"
000046F6 <common.ab3@296> XINCLUDE "/Shared/common.ab3"
000046FA <common.ab3@297> XINCLUDE "/Shared/common.ab3"
000046FC <common.ab3@298> XINCLUDE "/Shared/common.ab3"
00004700 <common.ab3@299> XINCLUDE "/Shared/common.ab3"
00004704 <common.ab3@300> XINCLUDE "/Shared/common.ab3"
00004708 <common.ab3@301> XINCLUDE "/Shared/common.ab3"
0000470C <common.ab3@302> XINCLUDE "/Shared/common.ab3"
00004710 <common.ab3@303> XINCLUDE "/Shared/common.ab3"
00004718 <common.ab3@304> XINCLUDE "/Shared/common.ab3"
00004720 <common.ab3@305> XINCLUDE "/Shared/common.ab3"
00004724 <common.ab3@306> XINCLUDE "/Shared/common.ab3"
00004728 <common.ab3@307> XINCLUDE "/Shared/common.ab3"
0000472C <common.ab3@308> XINCLUDE "/Shared/common.ab3"
0000472E <common.ab3@310> XINCLUDE "/Shared/common.ab3"
000047EE <common.ab3@311> XINCLUDE "/Shared/common.ab3"
00004836 <common.ab3@312> XINCLUDE "/Shared/common.ab3"
0000483A <common.ab3@314> XINCLUDE "/Shared/common.ab3"
0000483C <common.ab3@315> XINCLUDE "/Shared/common.ab3"
00004840 <common.ab3@316> XINCLUDE "/Shared/common.ab3"
00004842 <common.ab3@317> XINCLUDE "/Shared/common.ab3"
00004844 <common.ab3@318> XINCLUDE "/Shared/common.ab3"
00004846 <common.ab3@319> XINCLUDE "/Shared/common.ab3"
00004848 <common.ab3@320> XINCLUDE "/Shared/common.ab3"
0000484A <common.ab3@322> XINCLUDE "/Shared/common.ab3"
0000484C <common.ab3@323> XINCLUDE "/Shared/common.ab3"
0000484D <common.ab3@327> XINCLUDE "/Shared/common.ab3"
0000484E <common.ab3@329> XINCLUDE "/Shared/common.ab3"
00004850 <common.ab3@330> XINCLUDE "/Shared/common.ab3"
00004852 <common.ab3@331> XINCLUDE "/Shared/common.ab3"
00004854 <common.ab3@333> XINCLUDE "/Shared/common.ab3"
00004856 <common.ab3@336> XINCLUDE "/Shared/common.ab3"
00004858 <common.ab3@338> XINCLUDE "/Shared/common.ab3"
0000485A <common.ab3@340> XINCLUDE "/Shared/common.ab3"
0000485E <common.ab3@342> XINCLUDE "/Shared/common.ab3"
00004860 <common.ab3@344> XINCLUDE "/Shared/common.ab3"
00004862 <common.ab3@345> XINCLUDE "/Shared/common.ab3"
00004864 <common.ab3@347> XINCLUDE "/Shared/common.ab3"
00004868 <common.ab3@349> XINCLUDE "/Shared/common.ab3"
0000486A <common.ab3@350> XINCLUDE "/Shared/common.ab3"
0000486C <common.ab3@351> XINCLUDE "/Shared/common.ab3"
00004870 <common.ab3@354> XINCLUDE "/Shared/common.ab3"
00004872 <common.ab3@355> XINCLUDE "/Shared/common.ab3"
00004874 <common.ab3@356> XINCLUDE "/Shared/common.ab3"
00004876 <common.ab3@357> XINCLUDE "/Shared/common.ab3"
00004878 <common.ab3@359> XINCLUDE "/Shared/common.ab3"
0000487A <common.ab3@360> XINCLUDE "/Shared/common.ab3"
0000487E <common.ab3@362> XINCLUDE "/Shared/common.ab3"
00004880 <common.ab3@363> XINCLUDE "/Shared/common.ab3"
00004882 <common.ab3@364> XINCLUDE "/Shared/common.ab3"
00004884 <common.ab3@368> XINCLUDE "/Shared/common.ab3"
00004886 <common.ab3@369> XINCLUDE "/Shared/common.ab3"
0000488A <common.ab3@370> XINCLUDE "/Shared/common.ab3"
0000488C <common.ab3@376> XINCLUDE "/Shared/common.ab3"
0000488E <common.ab3@378> XINCLUDE "/Shared/common.ab3"
00004890 <common.ab3@380> XINCLUDE "/Shared/common.ab3"
00004892 <common.ab3@381> XINCLUDE "/Shared/common.ab3"
00004894 <common.ab3@382> XINCLUDE "/Shared/common.ab3"
00004898 <common.ab3@383> XINCLUDE "/Shared/common.ab3"
0000489A <common.ab3@384> XINCLUDE "/Shared/common.ab3"
0000489C <common.ab3@385> XINCLUDE "/Shared/common.ab3"
0000489E <common.ab3@386> XINCLUDE "/Shared/common.ab3"
000048A0 <common.ab3@387> XINCLUDE "/Shared/common.ab3"
000048A2 <common.ab3@389> XINCLUDE "/Shared/common.ab3"
000048A4 <common.ab3@391> XINCLUDE "/Shared/common.ab3"
000048A6 <common.ab3@393> XINCLUDE "/Shared/common.ab3"
000048AA <common.ab3@394> XINCLUDE "/Shared/common.ab3"
000048AC <common.ab3@395> XINCLUDE "/Shared/common.ab3"
000048DA <common.ab3@396> XINCLUDE "/Shared/common.ab3"
000048E4 <common.ab3@397> XINCLUDE "/Shared/common.ab3"
000048E8 <common.ab3@398> XINCLUDE "/Shared/common.ab3"
000048EA <common.ab3@400> XINCLUDE "/Shared/common.ab3"
000048EC <common.ab3@401> XINCLUDE "/Shared/common.ab3"
000048F0 <common.ab3@402> XINCLUDE "/Shared/common.ab3"
000048F4 <common.ab3@403> XINCLUDE "/Shared/common.ab3"
000048FD <common.ab3@404> XINCLUDE "/Shared/common.ab3"
00004900 <common.ab3@405> XINCLUDE "/Shared/common.ab3"
0000492D <common.ab3@406> XINCLUDE "/Shared/common.ab3"
0000496D <common.ab3@407> XINCLUDE "/Shared/common.ab3"
00004979 <common.ab3@408> XINCLUDE "/Shared/common.ab3"
000049C9 <common.ab3@409> XINCLUDE "/Shared/common.ab3"
000049D5 <common.ab3@410> XINCLUDE "/Shared/common.ab3"
00004A25 <common.ab3@411> XINCLUDE "/Shared/common.ab3"
00004B21 <common.ab3@412> XINCLUDE "/Shared/common.ab3"
00004B23 <common.ab3@413> XINCLUDE "/Shared/common.ab3"
00004BE3 <common.ab3@414> XINCLUDE "/Shared/common.ab3"
00004C23 <common.ab3@415> XINCLUDE "/Shared/common.ab3"
00004C25 <common.ab3@416> XINCLUDE "/Shared/common.ab3"
00004C26 <common.ab3@417> XINCLUDE "/Shared/common.ab3"
00004C2A <common.ab3@420> XINCLUDE "/Shared/common.ab3"
00004C2E <common.ab3@422> XINCLUDE "/Shared/common.ab3"
00004C32 <common.ab3@423> XINCLUDE "/Shared/common.ab3"
00004C36 <common.ab3@424> XINCLUDE "/Shared/common.ab3"
00004C3A <common.ab3@426> XINCLUDE "/Shared/common.ab3"
00004C3E <common.ab3@428> XINCLUDE "/Shared/common.ab3"
00004C42 <common.ab3@429> XINCLUDE "/Shared/common.ab3"
00004C46 <common.ab3@430> XINCLUDE "/Shared/common.ab3"
00004C4A <common.ab3@431> XINCLUDE "/Shared/common.ab3"
00004C4E <common.ab3@432> XINCLUDE "/Shared/common.ab3"
00004C52 <common.ab3@433> XINCLUDE "/Shared/common.ab3"
00004C56 <common.ab3@434> XINCLUDE "/Shared/common.ab3"
00004C5A <common.ab3@435> XINCLUDE "/Shared/common.ab3"
00004C5E <common.ab3@437> XINCLUDE "/Shared/common.ab3"
00004C62 <common.ab3@439> XINCLUDE "/Shared/common.ab3"
00004C66 <common.ab3@441> XINCLUDE "/Shared/common.ab3"
00004C6A <common.ab3@443> XINCLUDE "/Shared/common.ab3"
00004C6E <common.ab3@444> XINCLUDE "/Shared/common.ab3"
00004C78 <common.ab3@445> XINCLUDE "/Shared/common.ab3"
00004C7C <common.ab3@446> XINCLUDE "/Shared/common.ab3"
00004C80 <common.ab3@449> XINCLUDE "/Shared/common.ab3"
00004C82 <common.ab3@450> XINCLUDE "/Shared/common.ab3"
00004C84 <common.ab3@451> XINCLUDE "/Shared/common.ab3"
00004CA2 <common.ab3@452> XINCLUDE "/Shared/common.ab3"
00004CA6 <common.ab3@453> XINCLUDE "/Shared/common.ab3"
00004CA8 <common.ab3@455> XINCLUDE "/Shared/common.ab3"
00004CAC <common.ab3@456> XINCLUDE "/Shared/common.ab3"
00004CE0 <common.ab3@457> XINCLUDE "/Shared/common.ab3"
00004CE4 <common.ab3@458> XINCLUDE "/Shared/common.ab3"
00004CF2 <common.ab3@460> XINCLUDE "/Shared/common.ab3"
00004D04 <common.ab3@461> XINCLUDE "/Shared/common.ab3"
00004D06 <common.ab3@462> XINCLUDE "/Shared/common.ab3"
00004D1A <common.ab3@463> XINCLUDE "/Shared/common.ab3"
00004D30 <common.ab3@464> XINCLUDE "/Shared/common.ab3"
00004D46 <common.ab3@465> XINCLUDE "/Shared/common.ab3"
00004D5C <common.ab3@466> XINCLUDE "/Shared/common.ab3"
00004D72 <common.ab3@467> XINCLUDE "/Shared/common.ab3"
00004D74 <common.ab3@468> XINCLUDE "/Shared/common.ab3"
00004D76 <common.ab3@469> XINCLUDE "/Shared/common.ab3"
00004D7A <common.ab3@471> XINCLUDE "/Shared/common.ab3"
00004D7E <common.ab3@473> XINCLUDE "/Shared/common.ab3"
00004D82 <common.ab3@475> XINCLUDE "/Shared/common.ab3"
00004D86 <common.ab3@476> XINCLUDE "/Shared/common.ab3"
00004D8A <common.ab3@477> XINCLUDE "/Shared/common.ab3"
00004D8E <common.ab3@478> XINCLUDE "/Shared/common.ab3"
00004D92 <common.ab3@479> XINCLUDE "/Shared/common.ab3"
00004D96 <common.ab3@480> XINCLUDE "/Shared/common.ab3"
00004D9A <common.ab3@481> XINCLUDE "/Shared/common.ab3"
00004D9E <common.ab3@482> XINCLUDE "/Shared/common.ab3"
00004DA4 <common.ab3@483> XINCLUDE "/Shared/common.ab3"
00004DB6 <common.ab3@484> XINCLUDE "/Shared/common.ab3"
00004DB8 <common.ab3@488> XINCLUDE "/Shared/common.ab3"
00004DBC <common.ab3@489> XINCLUDE "/Shared/common.ab3"
00004DBE <common.ab3@490> XINCLUDE "/Shared/common.ab3"
00004DC2 <common.ab3@491> XINCLUDE "/Shared/common.ab3"
00004DC4 <common.ab3@492> XINCLUDE "/Shared/common.ab3"
00004DC8 <common.ab3@493> XINCLUDE "/Shared/common.ab3"
00004DCA <common.ab3@494> XINCLUDE "/Shared/common.ab3"
00004DCE <common.ab3@495> XINCLUDE "/Shared/common.ab3"
00004DD0 <common.ab3@496> XINCLUDE "/Shared/common.ab3"
00004DD4 <common.ab3@497> XINCLUDE "/Shared/common.ab3"
00004DD6 <common.ab3@498> XINCLUDE "/Shared/common.ab3"
00004DDA <common.ab3@499> XINCLUDE "/Shared/common.ab3"
00004DDC <common.ab3@500> XINCLUDE "/Shared/common.ab3"
00004DE0 <common.ab3@501> XINCLUDE "/Shared/common.ab3"
00004DE2 <common.ab3@502> XINCLUDE "/Shared/common.ab3"
00004DE6 <common.ab3@503> XINCLUDE "/Shared/common.ab3"
00004DE8 <common.ab3@504> XINCLUDE "/Shared/common.ab3"
00004DEC <common.ab3@505> XINCLUDE "/Shared/common.ab3"
00004DEE <common.ab3@506> XINCLUDE "/Shared/common.ab3"
00004DF2 <common.ab3@507> XINCLUDE "/Shared/common.ab3"
00004DF4 <common.ab3@508> XINCLUDE "/Shared/common.ab3"
00004DF8 <common.ab3@509> XINCLUDE "/Shared/common.ab3"
00004DFA <common.ab3@510> XINCLUDE "/Shared/common.ab3"
00004DFE <common.ab3@511> XINCLUDE "/Shared/common.ab3"
00004E00 <common.ab3@512> XINCLUDE "/Shared/common.ab3"
00004E04 <common.ab3@513> XINCLUDE "/Shared/common.ab3"
00004E06 <common.ab3@514> XINCLUDE "/Shared/common.ab3"
00004E0A <common.ab3@515> XINCLUDE "/Shared/common.ab3"
00004E0C <common.ab3@516> XINCLUDE "/Shared/common.ab3"
00004E20 <common.ab3@520> XINCLUDE "/Shared/common.ab3"
00004E34 <common.ab3@521> XINCLUDE "/Shared/common.ab3"
00004E48 <common.ab3@522> XINCLUDE "/Shared/common.ab3"
00004E4A <common.ab3@523> XINCLUDE "/Shared/common.ab3"
00004E4E <common.ab3@524> XINCLUDE "/Shared/common.ab3"
00004E52 <common.ab3@525> XINCLUDE "/Shared/common.ab3"
00004E56 <common.ab3@526> XINCLUDE "/Shared/common.ab3"
00004E5A <common.ab3@527> XINCLUDE "/Shared/common.ab3"
00004E5E <common.ab3@528> XINCLUDE "/Shared/common.ab3"
00004E62 <common.ab3@529> XINCLUDE "/Shared/common.ab3"
00004E66 <common.ab3@530> XINCLUDE "/Shared/common.ab3"
00004E67 <common.ab3@531> XINCLUDE "/Shared/common.ab3"
00004E68 <common.ab3@532> XINCLUDE "/Shared/common.ab3"
00004E69 <common.ab3@533> XINCLUDE "/Shared/common.ab3"
00004E6C <common.ab3@534> XINCLUDE "/Shared/common.ab3"
00004E70 <common.ab3@535> XINCLUDE "/Shared/common.ab3"
00004E74 <common.ab3@536> XINCLUDE "/Shared/common.ab3"
00004E78 <common.ab3@537> XINCLUDE "/Shared/common.ab3"
00004E7C <common.ab3@538> XINCLUDE "/Shared/common.ab3"
00004E80 <common.ab3@539> XINCLUDE "/Shared/common.ab3"
00004E84 <common.ab3@540> XINCLUDE "/Shared/common.ab3"
00004E85 <common.ab3@541> XINCLUDE "/Shared/common.ab3"
00004E86 <common.ab3@542> XINCLUDE "/Shared/common.ab3"
00004E88 <common.ab3@543> XINCLUDE "/Shared/common.ab3"
00004E8C <common.ab3@544> XINCLUDE "/Shared/common.ab3"
00004E90 <common.ab3@545> XINCLUDE "/Shared/common.ab3"
00004E94 <common.ab3@546> XINCLUDE "/Shared/common.ab3"
00004E98 <common.ab3@548> XINCLUDE "/Shared/common.ab3"
00004E9C <common.ab3@549> XINCLUDE "/Shared/common.ab3"
00004EA0 <common.ab3@550> XINCLUDE "/Shared/common.ab3"
00004EA4 <common.ab3@551> XINCLUDE "/Shared/common.ab3"
00004EA8 <common.ab3@552> XINCLUDE "/Shared/common.ab3"
00004EAC <common.ab3@553> XINCLUDE "/Shared/common.ab3"
00004EB0 <common.ab3@554> XINCLUDE "/Shared/common.ab3"
00004EB4 <common.ab3@555> XINCLUDE "/Shared/common.ab3"
00004EB8 <common.ab3@559> XINCLUDE "/Shared/common.ab3"
00004EBC <common.ab3@560> XINCLUDE "/Shared/common.ab3"
00004EC0 <common.ab3@561> XINCLUDE "/Shared/common.ab3"
00004EC2 <common.ab3@562> XINCLUDE "/Shared/common.ab3"
00004EC3 <common.ab3@563> XINCLUDE "/Shared/common.ab3"
00004EC7 <common.ab3@564> XINCLUDE "/Shared/common.ab3"
00004ECB <common.ab3@565> XINCLUDE "/Shared/common.ab3"
00004ECF <common.ab3@566> XINCLUDE "/Shared/common.ab3"
00004ED3 <common.ab3@567> XINCLUDE "/Shared/common.ab3"
00004ED4 <common.ab3@569> XINCLUDE "/Shared/common.ab3"
00004ED8 <common.ab3@571> XINCLUDE "/Shared/common.ab3"
00004EDC <common.ab3@572> XINCLUDE "/Shared/common.ab3"
00004EE0 <common.ab3@573> XINCLUDE "/Shared/common.ab3"
00004EE4 <common.ab3@574> XINCLUDE "/Shared/common.ab3"
00004EE8 <common.ab3@575> XINCLUDE "/Shared/common.ab3"
00004EE9 <common.ab3@576> XINCLUDE "/Shared/common.ab3"
00004EEA <common.ab3@578> XINCLUDE "/Shared/common.ab3"
00004EEE <common.ab3@580> XINCLUDE "/Shared/common.ab3"
00004EF2 <common.ab3@581> XINCLUDE "/Shared/common.ab3"
00004EF4 <common.ab3@582> XINCLUDE "/Shared/common.ab3"
00004EF6 <common.ab3@583> XINCLUDE "/Shared/common.ab3"
00004EFA <common.ab3@587> XINCLUDE "/Shared/common.ab3"
00004EFE <common.ab3@588> XINCLUDE "/Shared/common.ab3"
00004F02 <common.ab3@590> XINCLUDE "/Shared/common.ab3"
00004F06 <common.ab3@591> XINCLUDE "/Shared/common.ab3"
00004F0A <common.ab3@593> XINCLUDE "/Shared/common.ab3"
00004F0E <common.ab3@594> XINCLUDE "/Shared/common.ab3"
00004F12 <common.ab3@596> XINCLUDE "/Shared/common.ab3"
00004F16 <common.ab3@597> XINCLUDE "/Shared/common.ab3"
00004F1A <common.ab3@598> XINCLUDE "/Shared/common.ab3"
00004F1E <common.ab3@599> XINCLUDE "/Shared/common.ab3"
00004F22 <common.ab3@600> XINCLUDE "/Shared/common.ab3"
00004F26 <common.ab3@601> XINCLUDE "/Shared/common.ab3"
00004F2A <common.ab3@602> XINCLUDE "/Shared/common.ab3"
00004F2E <common.ab3@603> XINCLUDE "/Shared/common.ab3"
00004F32 <common.ab3@604> XINCLUDE "/Shared/common.ab3"
00004F36 <common.ab3@605> XINCLUDE "/Shared/common.ab3"
00004F3A <common.ab3@606> XINCLUDE "/Shared/common.ab3"
00004F3E <common.ab3@607> XINCLUDE "/Shared/common.ab3"
00004F42 <common.ab3@608> XINCLUDE "/Shared/common.ab3"
00004F46 <common.ab3@609> XINCLUDE "/Shared/common.ab3"
00004F46 <AmiBlitz3.ab3@86> XINCLUDE "/Shared/common.ab3"
00004F46 <preprocessor.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F46 <hashmap.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F64 <hashmap.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F6C <hashmap.include.ab3@41> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F9A <hashmap.include.ab3@42> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FCA <hashmap.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FDA <hashmap.include.ab3@44> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FE4 <hashmap.include.ab3@46> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FEA <hashmap.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
0000500C <hashmap.include.ab3@52> XINCLUDE "/Shared/preprocessor.include.ab3"
0000502C <hashmap.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
0000503E <hashmap.include.ab3@55> XINCLUDE "/Shared/preprocessor.include.ab3"
00005066 <hashmap.include.ab3@56> XINCLUDE "/Shared/preprocessor.include.ab3"
0000506C <hashmap.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00005086 <hashmap.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
000050A0 <hashmap.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
000050B2 <hashmap.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
000050C0 <hashmap.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
000050F4 <hashmap.include.ab3@67> XINCLUDE "/Shared/preprocessor.include.ab3"
00005102 <hashmap.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
0000510C <hashmap.include.ab3@69> XINCLUDE "/Shared/preprocessor.include.ab3"
0000511E <hashmap.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00005158 <hashmap.include.ab3@71> XINCLUDE "/Shared/preprocessor.include.ab3"
00005168 <hashmap.include.ab3@72> XINCLUDE "/Shared/preprocessor.include.ab3"
0000516E <hashmap.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
0000517E <hashmap.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
0000518A <hashmap.include.ab3@77> XINCLUDE "/Shared/preprocessor.include.ab3"
00005198 <hashmap.include.ab3@79> XINCLUDE "/Shared/preprocessor.include.ab3"
000051A8 <hashmap.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
000051C8 <hashmap.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
000051D4 <hashmap.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
000051E2 <hashmap.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
000051F0 <hashmap.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
000051FE <hashmap.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
0000520C <hashmap.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
0000523E <hashmap.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
0000524C <hashmap.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
0000525C <hashmap.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00005262 <hashmap.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00005266 <hashmap.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00005280 <hashmap.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
0000529A <hashmap.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
000052B4 <hashmap.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
000052D4 <hashmap.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
000052DE <hashmap.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
000052EA <hashmap.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
000052FE <hashmap.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00005330 <hashmap.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
00005348 <hashmap.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
00005354 <hashmap.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
00005362 <hashmap.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
00005370 <hashmap.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
0000537A <hashmap.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
00005388 <hashmap.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
000053B2 <hashmap.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
000053BC <hashmap.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
000053C2 <hashmap.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
000053F0 <hashmap.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
0000540A <hashmap.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
0000542A <hashmap.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
0000543E <hashmap.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
00005456 <hashmap.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
0000547E <hashmap.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00005498 <hashmap.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
000054A6 <hashmap.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
000054B4 <hashmap.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
000054C2 <hashmap.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
000054D6 <hashmap.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
0000552A <hashmap.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
00005554 <hashmap.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
00005598 <hashmap.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
000055B8 <hashmap.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000055CA <hashmap.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
000055EE <hashmap.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
000055FC <hashmap.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
00005654 <hashmap.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
0000569A <hashmap.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
000056A0 <hashmap.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
000056A6 <hashmap.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
000056CE <hashmap.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
000056E0 <hashmap.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
000056F2 <hashmap.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
0000572C <hashmap.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
0000573C <hashmap.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00005742 <hashmap.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
00005752 <hashmap.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
00005758 <hashmap.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
0000575E <hashmap.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
00005776 <hashmap.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
000057B4 <hashmap.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
000057D0 <hashmap.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
00005802 <hashmap.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
00005816 <hashmap.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
0000582A <hashmap.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
00005842 <hashmap.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
0000586A <hashmap.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
00005874 <hashmap.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
00005882 <hashmap.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
0000589A <hashmap.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
000058A0 <hashmap.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
000058A8 <hashmap.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
000058C8 <hashmap.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
000058EE <hashmap.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
000058F8 <hashmap.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
00005906 <hashmap.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
00005910 <hashmap.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
0000593C <hashmap.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00005950 <hashmap.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00005956 <hashmap.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00005964 <hashmap.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
0000599A <hashmap.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
000059E8 <hashmap.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A10 <hashmap.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A2A <hashmap.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A3C <hashmap.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A46 <hashmap.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A62 <hashmap.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A8C <hashmap.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AA8 <hashmap.include.ab3@214> XINCLUDE "/Shared/preprocessor.include.ab3"
00005ACA <hashmap.include.ab3@215> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AF8 <hashmap.include.ab3@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B12 <hashmap.include.ab3@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B3A <hashmap.include.ab3@218> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B56 <hashmap.include.ab3@219> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B72 <hashmap.include.ab3@220> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B80 <hashmap.include.ab3@221> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B94 <hashmap.include.ab3@223> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BB6 <hashmap.include.ab3@224> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BD8 <hashmap.include.ab3@225> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BE6 <hashmap.include.ab3@226> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C06 <hashmap.include.ab3@227> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C36 <hashmap.include.ab3@228> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C3C <hashmap.include.ab3@229> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C70 <hashmap.include.ab3@230> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CB2 <hashmap.include.ab3@231> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CC2 <hashmap.include.ab3@232> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CCC <hashmap.include.ab3@233> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CDC <hashmap.include.ab3@234> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CE2 <hashmap.include.ab3@238> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CEA <hashmap.include.ab3@240> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CF0 <hashmap.include.ab3@242> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D1E <hashmap.include.ab3@246> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D50 <hashmap.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D88 <hashmap.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D9C <hashmap.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DB4 <hashmap.include.ab3@251> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DDC <hashmap.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E0E <hashmap.include.ab3@253> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E2A <hashmap.include.ab3@254> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E38 <hashmap.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E4C <hashmap.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EA0 <hashmap.include.ab3@257> XINCLUDE "/Shared/preprocessor.include.ab3"
00005ECA <hashmap.include.ab3@258> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F0E <hashmap.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F34 <hashmap.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F3A <hashmap.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F58 <hashmap.include.ab3@264> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F76 <hashmap.include.ab3@266> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F94 <hashmap.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F9A <hashmap.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FBC <hashmap.include.ab3@306> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FEA <hashmap.include.ab3@308> XINCLUDE "/Shared/preprocessor.include.ab3"
00006012 <hashmap.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
00006036 <hashmap.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
0000608C <hashmap.include.ab3@313> XINCLUDE "/Shared/preprocessor.include.ab3"
000060DE <hashmap.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
00006134 <hashmap.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
00006144 <hashmap.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
00006196 <hashmap.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
000061BE <hashmap.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
000061E4 <hashmap.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
00006200 <hashmap.include.ab3@322> XINCLUDE "/Shared/preprocessor.include.ab3"
00006208 <hashmap.include.ab3@323> XINCLUDE "/Shared/preprocessor.include.ab3"
00006230 <hashmap.include.ab3@324> XINCLUDE "/Shared/preprocessor.include.ab3"
0000625E <hashmap.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
00006286 <hashmap.include.ab3@328> XINCLUDE "/Shared/preprocessor.include.ab3"
0000628E <hashmap.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
000062B2 <hashmap.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
000062E6 <hashmap.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
00006302 <hashmap.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
0000630C <hashmap.include.ab3@334> XINCLUDE "/Shared/preprocessor.include.ab3"
00006320 <hashmap.include.ab3@335> XINCLUDE "/Shared/preprocessor.include.ab3"
00006340 <hashmap.include.ab3@336> XINCLUDE "/Shared/preprocessor.include.ab3"
0000635C <hashmap.include.ab3@337> XINCLUDE "/Shared/preprocessor.include.ab3"
0000636A <hashmap.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
00006378 <hashmap.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
0000637E <hashmap.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
00006396 <hashmap.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
000063A6 <hashmap.include.ab3@343> XINCLUDE "/Shared/preprocessor.include.ab3"
000063D4 <hashmap.include.ab3@344> XINCLUDE "/Shared/preprocessor.include.ab3"
00006430 <hashmap.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
000064A6 <hashmap.include.ab3@346> XINCLUDE "/Shared/preprocessor.include.ab3"
00006502 <hashmap.include.ab3@347> XINCLUDE "/Shared/preprocessor.include.ab3"
00006508 <hashmap.include.ab3@348> XINCLUDE "/Shared/preprocessor.include.ab3"
00006512 <hashmap.include.ab3@351> XINCLUDE "/Shared/preprocessor.include.ab3"
00006518 <hashmap.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
00006546 <hashmap.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
0000654C <hashmap.include.ab3@359> XINCLUDE "/Shared/preprocessor.include.ab3"
0000656C <hashmap.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
00006576 <hashmap.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
00006588 <hashmap.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
00006598 <hashmap.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
000065A2 <hashmap.include.ab3@366> XINCLUDE "/Shared/preprocessor.include.ab3"
000065BC <hashmap.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
000065D6 <hashmap.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
000065DC <hashmap.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
000065E2 <hashmap.include.ab3@375> XINCLUDE "/Shared/preprocessor.include.ab3"
000065EC <hashmap.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
000065F4 <hashmap.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
0000661C <hashmap.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
00006622 <hashmap.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
00006636 <hashmap.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
00006672 <hashmap.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
00006698 <hashmap.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
000066A6 <hashmap.include.ab3@384> XINCLUDE "/Shared/preprocessor.include.ab3"
000066E2 <hashmap.include.ab3@386> XINCLUDE "/Shared/preprocessor.include.ab3"
000066F6 <hashmap.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00006732 <hashmap.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
00006748 <hashmap.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
0000675C <hashmap.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
00006766 <hashmap.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
0000678A <hashmap.include.ab3@394> XINCLUDE "/Shared/preprocessor.include.ab3"
000067C2 <hashmap.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
000067C8 <hashmap.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
000067D0 <hashmap.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
000067E4 <hashmap.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
000067EE <hashmap.include.ab3@401> XINCLUDE "/Shared/preprocessor.include.ab3"
00006816 <hashmap.include.ab3@402> XINCLUDE "/Shared/preprocessor.include.ab3"
0000683E <hashmap.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
00006850 <hashmap.include.ab3@404> XINCLUDE "/Shared/preprocessor.include.ab3"
0000687C <hashmap.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
000068B0 <hashmap.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
000068DC <hashmap.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
00006928 <hashmap.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
00006938 <hashmap.include.ab3@410> XINCLUDE "/Shared/preprocessor.include.ab3"
0000693E <hashmap.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
00006946 <hashmap.include.ab3@413> XINCLUDE "/Shared/preprocessor.include.ab3"
00006974 <hashmap.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
00006976 <hashmap.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
0000697C <hashmap.include.ab3@419> XINCLUDE "/Shared/preprocessor.include.ab3"
00006986 <hashmap.include.ab3@421> XINCLUDE "/Shared/preprocessor.include.ab3"
000069B0 <hashmap.include.ab3@422> XINCLUDE "/Shared/preprocessor.include.ab3"
000069BA <hashmap.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
000069C0 <hashmap.include.ab3@427> XINCLUDE "/Shared/preprocessor.include.ab3"
000069EA <hashmap.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
000069F0 <hashmap.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A10 <hashmap.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A1A <hashmap.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A28 <hashmap.include.ab3@436> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A38 <hashmap.include.ab3@437> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A42 <hashmap.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A5C <hashmap.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A5C <preprocessor.include.ab3@11> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A76 <preprocessor.include.ab3@31> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A90 <preprocessor.include.ab3@32> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AB2 <preprocessor.include.ab3@33> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AE4 <preprocessor.include.ab3@34> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AE8 <preprocessor.include.ab3@35> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B02 <preprocessor.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B1C <preprocessor.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B26 <preprocessor.include.ab3@41> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B3C <preprocessor.include.ab3@42> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B40 <preprocessor.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B5A <preprocessor.include.ab3@47> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B74 <preprocessor.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B8E <preprocessor.include.ab3@49> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BB2 <preprocessor.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BB8 <preprocessor.include.ab3@51> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BE2 <preprocessor.include.ab3@52> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BFC <preprocessor.include.ab3@53> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C0C <preprocessor.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C16 <preprocessor.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C24 <preprocessor.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C46 <preprocessor.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C7A <preprocessor.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C96 <preprocessor.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CA0 <preprocessor.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CBC <preprocessor.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CCA <preprocessor.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CDE <preprocessor.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D00 <preprocessor.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D22 <preprocessor.include.ab3@67> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D40 <preprocessor.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D6E <preprocessor.include.ab3@69> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D74 <preprocessor.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D84 <preprocessor.include.ab3@72> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D88 <preprocessor.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D9E <preprocessor.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DBE <preprocessor.include.ab3@79> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DC8 <preprocessor.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DF2 <preprocessor.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E08 <preprocessor.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E18 <preprocessor.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E34 <preprocessor.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E50 <preprocessor.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E6C <preprocessor.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E88 <preprocessor.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EA4 <preprocessor.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EC0 <preprocessor.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EDC <preprocessor.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EF8 <preprocessor.include.ab3@92> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F14 <preprocessor.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F30 <preprocessor.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F4C <preprocessor.include.ab3@95> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F68 <preprocessor.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F84 <preprocessor.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FA0 <preprocessor.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FBC <preprocessor.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FD8 <preprocessor.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FF4 <preprocessor.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
00007010 <preprocessor.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
0000702C <preprocessor.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
00007048 <preprocessor.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00007064 <preprocessor.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00007080 <preprocessor.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
0000709C <preprocessor.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
000070B8 <preprocessor.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
000070D4 <preprocessor.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
000070F0 <preprocessor.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
0000710C <preprocessor.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
00007128 <preprocessor.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
00007144 <preprocessor.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
00007160 <preprocessor.include.ab3@114> XINCLUDE "/Shared/preprocessor.include.ab3"
0000717C <preprocessor.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
00007198 <preprocessor.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
000071B4 <preprocessor.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
000071D0 <preprocessor.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
000071EC <preprocessor.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
00007208 <preprocessor.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
00007224 <preprocessor.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
00007240 <preprocessor.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
0000725C <preprocessor.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
00007278 <preprocessor.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
00007294 <preprocessor.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
000072B0 <preprocessor.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
000072CC <preprocessor.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
000072E8 <preprocessor.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00007304 <preprocessor.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
00007320 <preprocessor.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
0000733C <preprocessor.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
00007358 <preprocessor.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
00007374 <preprocessor.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
00007390 <preprocessor.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
000073AC <preprocessor.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
000073C8 <preprocessor.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
000073E4 <preprocessor.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
00007400 <preprocessor.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
0000741C <preprocessor.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
00007438 <preprocessor.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
00007454 <preprocessor.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
00007470 <preprocessor.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
0000748C <preprocessor.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
000074A8 <preprocessor.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
000074C4 <preprocessor.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
000074E0 <preprocessor.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
000074FC <preprocessor.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
00007518 <preprocessor.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
00007534 <preprocessor.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
00007550 <preprocessor.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
0000756C <preprocessor.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00007588 <preprocessor.include.ab3@152> XINCLUDE "/Shared/preprocessor.include.ab3"
000075A4 <preprocessor.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
000075C0 <preprocessor.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
000075DC <preprocessor.include.ab3@155> XINCLUDE "/Shared/preprocessor.include.ab3"
000075F8 <preprocessor.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
00007614 <preprocessor.include.ab3@157> XINCLUDE "/Shared/preprocessor.include.ab3"
00007630 <preprocessor.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
0000764C <preprocessor.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
00007668 <preprocessor.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
00007684 <preprocessor.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
000076A0 <preprocessor.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
000076BC <preprocessor.include.ab3@163> XINCLUDE "/Shared/preprocessor.include.ab3"
000076D8 <preprocessor.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
000076F4 <preprocessor.include.ab3@165> XINCLUDE "/Shared/preprocessor.include.ab3"
00007710 <preprocessor.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
0000772C <preprocessor.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
00007748 <preprocessor.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
00007764 <preprocessor.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
00007780 <preprocessor.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
0000779C <preprocessor.include.ab3@171> XINCLUDE "/Shared/preprocessor.include.ab3"
000077B8 <preprocessor.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
000077D4 <preprocessor.include.ab3@173> XINCLUDE "/Shared/preprocessor.include.ab3"
000077F0 <preprocessor.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
0000780C <preprocessor.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
00007828 <preprocessor.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
00007844 <preprocessor.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
00007860 <preprocessor.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
0000787C <preprocessor.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
00007898 <preprocessor.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
000078B4 <preprocessor.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
000078D0 <preprocessor.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
000078EC <preprocessor.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
00007908 <preprocessor.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
00007924 <preprocessor.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
00007940 <preprocessor.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
0000795C <preprocessor.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
00007978 <preprocessor.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
00007994 <preprocessor.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
000079B0 <preprocessor.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
000079CC <preprocessor.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
000079E8 <preprocessor.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A04 <preprocessor.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A20 <preprocessor.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A3C <preprocessor.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A58 <preprocessor.include.ab3@196> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A74 <preprocessor.include.ab3@197> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A90 <preprocessor.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AAC <preprocessor.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AC8 <preprocessor.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AE4 <preprocessor.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B00 <preprocessor.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B1C <preprocessor.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B38 <preprocessor.include.ab3@204> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B54 <preprocessor.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B70 <preprocessor.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B8C <preprocessor.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BA8 <preprocessor.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BC4 <preprocessor.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BE0 <preprocessor.include.ab3@210> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BFC <preprocessor.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C18 <preprocessor.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C20 <preprocessor.include.ab3@213> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C2A <preprocessor.include.ab3@214> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C34 <preprocessor.include.ab3@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C3A <preprocessor.include.ab3@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C68 <preprocessor.include.ab3@254> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C84 <preprocessor.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CB6 <preprocessor.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CC0 <preprocessor.include.ab3@257> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CE2 <preprocessor.include.ab3@258> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CEC <preprocessor.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CF6 <preprocessor.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D00 <preprocessor.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D1A <preprocessor.include.ab3@263> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D48 <preprocessor.include.ab3@267> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D64 <preprocessor.include.ab3@268> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D72 <preprocessor.include.ab3@269> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DAC <preprocessor.include.ab3@270> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DB4 <preprocessor.include.ab3@272> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DCE <preprocessor.include.ab3@273> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DF4 <preprocessor.include.ab3@280> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E16 <preprocessor.include.ab3@281> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E3A <preprocessor.include.ab3@282> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E40 <preprocessor.include.ab3@283> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E4E <preprocessor.include.ab3@284> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E54 <preprocessor.include.ab3@285> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E5C <preprocessor.include.ab3@286> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E62 <preprocessor.include.ab3@287> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E6A <preprocessor.include.ab3@288> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E7E <preprocessor.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EA4 <preprocessor.include.ab3@291> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ECC <preprocessor.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ED6 <preprocessor.include.ab3@294> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EEA <preprocessor.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EFE <preprocessor.include.ab3@296> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F0E <preprocessor.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F28 <preprocessor.include.ab3@298> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F56 <preprocessor.include.ab3@299> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F6A <preprocessor.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F92 <preprocessor.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F98 <preprocessor.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FA0 <preprocessor.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FA6 <preprocessor.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FCE <preprocessor.include.ab3@306> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FD8 <preprocessor.include.ab3@308> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FE6 <preprocessor.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
00008004 <preprocessor.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
00008012 <preprocessor.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
0000801A <preprocessor.include.ab3@312> XINCLUDE "/Shared/preprocessor.include.ab3"
00008020 <preprocessor.include.ab3@313> XINCLUDE "/Shared/preprocessor.include.ab3"
00008034 <preprocessor.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
0000803E <preprocessor.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
0000804C <preprocessor.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
00008066 <preprocessor.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
0000806C <preprocessor.include.ab3@322> XINCLUDE "/Shared/preprocessor.include.ab3"
00008074 <preprocessor.include.ab3@323> XINCLUDE "/Shared/preprocessor.include.ab3"
0000807A <preprocessor.include.ab3@325> XINCLUDE "/Shared/preprocessor.include.ab3"
0000808E <preprocessor.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
00008098 <preprocessor.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
000080A0 <preprocessor.include.ab3@328> XINCLUDE "/Shared/preprocessor.include.ab3"
000080B4 <preprocessor.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
000080C8 <preprocessor.include.ab3@334> XINCLUDE "/Shared/preprocessor.include.ab3"
000080DC <preprocessor.include.ab3@335> XINCLUDE "/Shared/preprocessor.include.ab3"
000080FA <preprocessor.include.ab3@337> XINCLUDE "/Shared/preprocessor.include.ab3"
00008108 <preprocessor.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
00008118 <preprocessor.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
00008140 <preprocessor.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
00008162 <preprocessor.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
00008176 <preprocessor.include.ab3@344> XINCLUDE "/Shared/preprocessor.include.ab3"
00008194 <preprocessor.include.ab3@346> XINCLUDE "/Shared/preprocessor.include.ab3"
000081A2 <preprocessor.include.ab3@347> XINCLUDE "/Shared/preprocessor.include.ab3"
000081C8 <preprocessor.include.ab3@348> XINCLUDE "/Shared/preprocessor.include.ab3"
000081F0 <preprocessor.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
00008212 <preprocessor.include.ab3@350> XINCLUDE "/Shared/preprocessor.include.ab3"
00008242 <preprocessor.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
00008270 <preprocessor.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
000082A2 <preprocessor.include.ab3@358> XINCLUDE "/Shared/preprocessor.include.ab3"
000082B0 <preprocessor.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
000082B6 <preprocessor.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
000082C6 <preprocessor.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
000082CC <preprocessor.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
000082F2 <preprocessor.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
00008314 <preprocessor.include.ab3@370> XINCLUDE "/Shared/preprocessor.include.ab3"
0000833C <preprocessor.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
0000835C <preprocessor.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
0000837E <preprocessor.include.ab3@373> XINCLUDE "/Shared/preprocessor.include.ab3"
00008384 <preprocessor.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
00008392 <preprocessor.include.ab3@375> XINCLUDE "/Shared/preprocessor.include.ab3"
000083A0 <preprocessor.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
000083A6 <preprocessor.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
000083AE <preprocessor.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
000083CC <preprocessor.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
000083E0 <preprocessor.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
000083F0 <preprocessor.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
00008406 <preprocessor.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
0000841E <preprocessor.include.ab3@385> XINCLUDE "/Shared/preprocessor.include.ab3"
0000843A <preprocessor.include.ab3@386> XINCLUDE "/Shared/preprocessor.include.ab3"
00008444 <preprocessor.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00008460 <preprocessor.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
00008472 <preprocessor.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
000084A0 <preprocessor.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
000084DC <preprocessor.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
000084EC <preprocessor.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
000084F2 <preprocessor.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
000084F8 <preprocessor.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
00008510 <preprocessor.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
00008520 <preprocessor.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
000085A6 <preprocessor.include.ab3@399> XINCLUDE "/Shared/preprocessor.include.ab3"
000085E0 <preprocessor.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
00008616 <preprocessor.include.ab3@401> XINCLUDE "/Shared/preprocessor.include.ab3"
00008626 <preprocessor.include.ab3@402> XINCLUDE "/Shared/preprocessor.include.ab3"
00008634 <preprocessor.include.ab3@404> XINCLUDE "/Shared/preprocessor.include.ab3"
0000863A <preprocessor.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
0000864A <preprocessor.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
00008674 <preprocessor.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
0000867A <preprocessor.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
000086A6 <preprocessor.include.ab3@409> XINCLUDE "/Shared/preprocessor.include.ab3"
000086B6 <preprocessor.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
000086C6 <preprocessor.include.ab3@414> XINCLUDE "/Shared/preprocessor.include.ab3"
000086E4 <preprocessor.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
000086F2 <preprocessor.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
00008728 <preprocessor.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
0000874C <preprocessor.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
00008760 <preprocessor.include.ab3@421> XINCLUDE "/Shared/preprocessor.include.ab3"
00008770 <preprocessor.include.ab3@423> XINCLUDE "/Shared/preprocessor.include.ab3"
0000878E <preprocessor.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
0000879C <preprocessor.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
000087C0 <preprocessor.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
000087E4 <preprocessor.include.ab3@427> XINCLUDE "/Shared/preprocessor.include.ab3"
000087F2 <preprocessor.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
00008800 <preprocessor.include.ab3@432> XINCLUDE "/Shared/preprocessor.include.ab3"
00008820 <preprocessor.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
0000882E <preprocessor.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
00008834 <preprocessor.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
0000883A <preprocessor.include.ab3@438> XINCLUDE "/Shared/preprocessor.include.ab3"
00008848 <preprocessor.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
00008856 <preprocessor.include.ab3@441> XINCLUDE "/Shared/preprocessor.include.ab3"
00008876 <preprocessor.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
00008884 <preprocessor.include.ab3@443> XINCLUDE "/Shared/preprocessor.include.ab3"
0000888A <preprocessor.include.ab3@444> XINCLUDE "/Shared/preprocessor.include.ab3"
000088B4 <preprocessor.include.ab3@447> XINCLUDE "/Shared/preprocessor.include.ab3"
000088C4 <preprocessor.include.ab3@450> XINCLUDE "/Shared/preprocessor.include.ab3"
000088CE <preprocessor.include.ab3@452> XINCLUDE "/Shared/preprocessor.include.ab3"
000088E2 <preprocessor.include.ab3@453> XINCLUDE "/Shared/preprocessor.include.ab3"
00008908 <preprocessor.include.ab3@457> XINCLUDE "/Shared/preprocessor.include.ab3"
0000892A <preprocessor.include.ab3@458> XINCLUDE "/Shared/preprocessor.include.ab3"
00008952 <preprocessor.include.ab3@459> XINCLUDE "/Shared/preprocessor.include.ab3"
00008958 <preprocessor.include.ab3@460> XINCLUDE "/Shared/preprocessor.include.ab3"
00008966 <preprocessor.include.ab3@461> XINCLUDE "/Shared/preprocessor.include.ab3"
0000896C <preprocessor.include.ab3@462> XINCLUDE "/Shared/preprocessor.include.ab3"
00008980 <preprocessor.include.ab3@463> XINCLUDE "/Shared/preprocessor.include.ab3"
00008990 <preprocessor.include.ab3@464> XINCLUDE "/Shared/preprocessor.include.ab3"
000089A6 <preprocessor.include.ab3@466> XINCLUDE "/Shared/preprocessor.include.ab3"
000089BE <preprocessor.include.ab3@468> XINCLUDE "/Shared/preprocessor.include.ab3"
000089DA <preprocessor.include.ab3@469> XINCLUDE "/Shared/preprocessor.include.ab3"
000089E4 <preprocessor.include.ab3@470> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A00 <preprocessor.include.ab3@471> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A2E <preprocessor.include.ab3@472> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A6A <preprocessor.include.ab3@473> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A7A <preprocessor.include.ab3@474> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A88 <preprocessor.include.ab3@476> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A8E <preprocessor.include.ab3@477> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A9E <preprocessor.include.ab3@478> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AC8 <preprocessor.include.ab3@479> XINCLUDE "/Shared/preprocessor.include.ab3"
00008ACE <preprocessor.include.ab3@480> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AFA <preprocessor.include.ab3@481> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B0A <preprocessor.include.ab3@483> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B1A <preprocessor.include.ab3@485> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B38 <preprocessor.include.ab3@486> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B46 <preprocessor.include.ab3@487> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B7C <preprocessor.include.ab3@488> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BA0 <preprocessor.include.ab3@489> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BB4 <preprocessor.include.ab3@492> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BC4 <preprocessor.include.ab3@494> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BE2 <preprocessor.include.ab3@495> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BF0 <preprocessor.include.ab3@496> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C14 <preprocessor.include.ab3@497> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C38 <preprocessor.include.ab3@498> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C3E <preprocessor.include.ab3@502> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C4E <preprocessor.include.ab3@503> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C54 <preprocessor.include.ab3@504> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C76 <preprocessor.include.ab3@508> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C7E <preprocessor.include.ab3@509> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CB4 <preprocessor.include.ab3@510> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CD0 <preprocessor.include.ab3@511> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CD6 <preprocessor.include.ab3@512> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D0C <preprocessor.include.ab3@516> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D28 <preprocessor.include.ab3@517> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D50 <preprocessor.include.ab3@518> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D6E <preprocessor.include.ab3@519> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D8C <preprocessor.include.ab3@520> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DBA <preprocessor.include.ab3@521> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E1C <preprocessor.include.ab3@522> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E36 <preprocessor.include.ab3@523> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E50 <preprocessor.include.ab3@527> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E5A <preprocessor.include.ab3@528> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E98 <preprocessor.include.ab3@529> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E9C <preprocessor.include.ab3@530> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EA6 <preprocessor.include.ab3@532> XINCLUDE "/Shared/preprocessor.include.ab3"
00008ED4 <preprocessor.include.ab3@533> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EF4 <preprocessor.include.ab3@534> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F0C <preprocessor.include.ab3@535> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F6A <preprocessor.include.ab3@536> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F96 <preprocessor.include.ab3@537> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FA8 <preprocessor.include.ab3@538> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FB8 <preprocessor.include.ab3@539> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FD0 <preprocessor.include.ab3@540> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FD6 <preprocessor.include.ab3@542> XINCLUDE "/Shared/preprocessor.include.ab3"
00009010 <preprocessor.include.ab3@543> XINCLUDE "/Shared/preprocessor.include.ab3"
0000901A <preprocessor.include.ab3@545> XINCLUDE "/Shared/preprocessor.include.ab3"
00009020 <preprocessor.include.ab3@546> XINCLUDE "/Shared/preprocessor.include.ab3"
0000902A <preprocessor.include.ab3@547> XINCLUDE "/Shared/preprocessor.include.ab3"
0000903C <preprocessor.include.ab3@548> XINCLUDE "/Shared/preprocessor.include.ab3"
0000903C <AmiBlitz3.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
0000903C <logging.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
0000903C <PE_Tools.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009060 <PE_Tools.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
00009068 <PE_Tools.include.ab3@84> XINCLUDE "PE/logging.include.ab3"
00009096 <PE_Tools.include.ab3@85> XINCLUDE "PE/logging.include.ab3"
000090C4 <PE_Tools.include.ab3@86> XINCLUDE "PE/logging.include.ab3"
00009134 <PE_Tools.include.ab3@87> XINCLUDE "PE/logging.include.ab3"
00009142 <PE_Tools.include.ab3@88> XINCLUDE "PE/logging.include.ab3"
00009192 <PE_Tools.include.ab3@89> XINCLUDE "PE/logging.include.ab3"
00009192 <logging.include.ab3@11> XINCLUDE "PE/logging.include.ab3"
00009192 <file.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009192 <asl.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
000091B6 <asl.include.ab3@94> XINCLUDE "PE/logging.include.ab3"
000091DE <asl.include.ab3@95> XINCLUDE "PE/logging.include.ab3"
00009202 <asl.include.ab3@96> XINCLUDE "PE/logging.include.ab3"
00009230 <asl.include.ab3@295> XINCLUDE "PE/logging.include.ab3"
0000944E <asl.include.ab3@297> XINCLUDE "PE/logging.include.ab3"
0000947C <asl.include.ab3@299> XINCLUDE "PE/logging.include.ab3"
000094A8 <asl.include.ab3@301> XINCLUDE "PE/logging.include.ab3"
000094E4 <asl.include.ab3@302> XINCLUDE "PE/logging.include.ab3"
00009510 <asl.include.ab3@303> XINCLUDE "PE/logging.include.ab3"
0000953C <asl.include.ab3@304> XINCLUDE "PE/logging.include.ab3"
00009568 <asl.include.ab3@305> XINCLUDE "PE/logging.include.ab3"
00009594 <asl.include.ab3@306> XINCLUDE "PE/logging.include.ab3"
000095C0 <asl.include.ab3@307> XINCLUDE "PE/logging.include.ab3"
000095EC <asl.include.ab3@308> XINCLUDE "PE/logging.include.ab3"
00009618 <asl.include.ab3@309> XINCLUDE "PE/logging.include.ab3"
00009644 <asl.include.ab3@310> XINCLUDE "PE/logging.include.ab3"
000096CE <asl.include.ab3@312> XINCLUDE "PE/logging.include.ab3"
00009758 <asl.include.ab3@313> XINCLUDE "PE/logging.include.ab3"
000097F6 <asl.include.ab3@314> XINCLUDE "PE/logging.include.ab3"
00009840 <asl.include.ab3@315> XINCLUDE "PE/logging.include.ab3"
00009880 <asl.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
00009886 <asl.include.ab3@317> XINCLUDE "PE/logging.include.ab3"
000098D0 <asl.include.ab3@320> XINCLUDE "PE/logging.include.ab3"
00009910 <asl.include.ab3@321> XINCLUDE "PE/logging.include.ab3"
0000993A <asl.include.ab3@322> XINCLUDE "PE/logging.include.ab3"
00009940 <asl.include.ab3@323> XINCLUDE "PE/logging.include.ab3"
0000996A <asl.include.ab3@324> XINCLUDE "PE/logging.include.ab3"
00009994 <asl.include.ab3@326> XINCLUDE "PE/logging.include.ab3"
000099BE <asl.include.ab3@328> XINCLUDE "PE/logging.include.ab3"
000099C8 <asl.include.ab3@329> XINCLUDE "PE/logging.include.ab3"
000099E6 <asl.include.ab3@330> XINCLUDE "PE/logging.include.ab3"
00009A08 <asl.include.ab3@331> XINCLUDE "PE/logging.include.ab3"
00009A36 <asl.include.ab3@332> XINCLUDE "PE/logging.include.ab3"
00009A64 <asl.include.ab3@333> XINCLUDE "PE/logging.include.ab3"
00009A92 <asl.include.ab3@334> XINCLUDE "PE/logging.include.ab3"
00009AD8 <asl.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
00009B1E <asl.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
00009B64 <asl.include.ab3@339> XINCLUDE "PE/logging.include.ab3"
00009B9C <asl.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
00009C9A <asl.include.ab3@342> XINCLUDE "PE/logging.include.ab3"
00009CB8 <asl.include.ab3@344> XINCLUDE "PE/logging.include.ab3"
00009CC2 <asl.include.ab3@346> XINCLUDE "PE/logging.include.ab3"
00009CE8 <asl.include.ab3@347> XINCLUDE "PE/logging.include.ab3"
00009CFA <asl.include.ab3@349> XINCLUDE "PE/logging.include.ab3"
00009D28 <asl.include.ab3@350> XINCLUDE "PE/logging.include.ab3"
00009D50 <asl.include.ab3@351> XINCLUDE "PE/logging.include.ab3"
00009D62 <asl.include.ab3@352> XINCLUDE "PE/logging.include.ab3"
00009DB8 <asl.include.ab3@353> XINCLUDE "PE/logging.include.ab3"
00009DEE <asl.include.ab3@354> XINCLUDE "PE/logging.include.ab3"
00009DFE <asl.include.ab3@356> XINCLUDE "PE/logging.include.ab3"
00009E04 <asl.include.ab3@357> XINCLUDE "PE/logging.include.ab3"
00009E16 <asl.include.ab3@358> XINCLUDE "PE/logging.include.ab3"
00009E20 <asl.include.ab3@359> XINCLUDE "PE/logging.include.ab3"
00009E5A <asl.include.ab3@360> XINCLUDE "PE/logging.include.ab3"
00009E60 <asl.include.ab3@361> XINCLUDE "PE/logging.include.ab3"
00009EB8 <asl.include.ab3@362> XINCLUDE "PE/logging.include.ab3"
00009ED6 <asl.include.ab3@364> XINCLUDE "PE/logging.include.ab3"
00009EDC <asl.include.ab3@367> XINCLUDE "PE/logging.include.ab3"
00009EEC <asl.include.ab3@370> XINCLUDE "PE/logging.include.ab3"
00009EFC <asl.include.ab3@371> XINCLUDE "PE/logging.include.ab3"
00009F0C <asl.include.ab3@372> XINCLUDE "PE/logging.include.ab3"
00009F1C <asl.include.ab3@373> XINCLUDE "PE/logging.include.ab3"
00009F2C <asl.include.ab3@375> XINCLUDE "PE/logging.include.ab3"
00009F36 <asl.include.ab3@377> XINCLUDE "PE/logging.include.ab3"
00009F4A <asl.include.ab3@378> XINCLUDE "PE/logging.include.ab3"
00009F60 <asl.include.ab3@394> XINCLUDE "PE/logging.include.ab3"
00009F88 <asl.include.ab3@396> XINCLUDE "PE/logging.include.ab3"
00009F92 <asl.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
00009FA4 <asl.include.ab3@398> XINCLUDE "PE/logging.include.ab3"
00009FDE <asl.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
00009FE8 <asl.include.ab3@400> XINCLUDE "PE/logging.include.ab3"
0000A012 <asl.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
0000A02A <asl.include.ab3@403> XINCLUDE "PE/logging.include.ab3"
0000A07C <asl.include.ab3@439> XINCLUDE "PE/logging.include.ab3"
0000A0AA <asl.include.ab3@441> XINCLUDE "PE/logging.include.ab3"
0000A13C <asl.include.ab3@442> XINCLUDE "PE/logging.include.ab3"
0000A182 <asl.include.ab3@443> XINCLUDE "PE/logging.include.ab3"
0000A214 <asl.include.ab3@444> XINCLUDE "PE/logging.include.ab3"
0000A22E <asl.include.ab3@445> XINCLUDE "PE/logging.include.ab3"
0000A22E <file.include.ab3@57> XINCLUDE "PE/logging.include.ab3"
0000A244 <file.include.ab3@66> XINCLUDE "PE/logging.include.ab3"
0000A25A <file.include.ab3@67> XINCLUDE "PE/logging.include.ab3"
0000A270 <file.include.ab3@68> XINCLUDE "PE/logging.include.ab3"
0000A286 <file.include.ab3@70> XINCLUDE "PE/logging.include.ab3"
0000A292 <file.include.ab3@72> XINCLUDE "PE/logging.include.ab3"
0000A29E <file.include.ab3@73> XINCLUDE "PE/logging.include.ab3"
0000A2AA <file.include.ab3@74> XINCLUDE "PE/logging.include.ab3"
0000A2B6 <file.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
0000A2DE <file.include.ab3@77> XINCLUDE "PE/logging.include.ab3"
0000A306 <file.include.ab3@78> XINCLUDE "PE/logging.include.ab3"
0000A32E <file.include.ab3@79> XINCLUDE "PE/logging.include.ab3"
0000A352 <file.include.ab3@109> XINCLUDE "PE/logging.include.ab3"
0000A376 <file.include.ab3@110> XINCLUDE "PE/logging.include.ab3"
0000A390 <file.include.ab3@156> XINCLUDE "PE/logging.include.ab3"
0000A3A0 <file.include.ab3@157> XINCLUDE "PE/logging.include.ab3"
0000A3A2 <file.include.ab3@158> XINCLUDE "PE/logging.include.ab3"
0000A3A4 <file.include.ab3@159> XINCLUDE "PE/logging.include.ab3"
0000A3A6 <file.include.ab3@160> XINCLUDE "PE/logging.include.ab3"
0000A3A8 <file.include.ab3@161> XINCLUDE "PE/logging.include.ab3"
0000A3AA <file.include.ab3@162> XINCLUDE "PE/logging.include.ab3"
0000A3AE <file.include.ab3@163> XINCLUDE "PE/logging.include.ab3"
0000A3B2 <file.include.ab3@164> XINCLUDE "PE/logging.include.ab3"
0000A3B6 <file.include.ab3@165> XINCLUDE "PE/logging.include.ab3"
0000A3B8 <file.include.ab3@166> XINCLUDE "PE/logging.include.ab3"
0000A3BA <file.include.ab3@167> XINCLUDE "PE/logging.include.ab3"
0000A3BC <file.include.ab3@168> XINCLUDE "PE/logging.include.ab3"
0000A3BE <file.include.ab3@169> XINCLUDE "PE/logging.include.ab3"
0000A3C0 <file.include.ab3@170> XINCLUDE "PE/logging.include.ab3"
0000A3C2 <file.include.ab3@171> XINCLUDE "PE/logging.include.ab3"
0000A3C4 <file.include.ab3@172> XINCLUDE "PE/logging.include.ab3"
0000A3CE <file.include.ab3@173> XINCLUDE "PE/logging.include.ab3"
0000A3D4 <file.include.ab3@174> XINCLUDE "PE/logging.include.ab3"
0000A3EE <file.include.ab3@215> XINCLUDE "PE/logging.include.ab3"
0000A40C <file.include.ab3@217> XINCLUDE "PE/logging.include.ab3"
0000A412 <file.include.ab3@218> XINCLUDE "PE/logging.include.ab3"
0000A42C <file.include.ab3@237> XINCLUDE "PE/logging.include.ab3"
0000A448 <file.include.ab3@239> XINCLUDE "PE/logging.include.ab3"
0000A46E <file.include.ab3@240> XINCLUDE "PE/logging.include.ab3"
0000A48E <file.include.ab3@241> XINCLUDE "PE/logging.include.ab3"
0000A498 <file.include.ab3@242> XINCLUDE "PE/logging.include.ab3"
0000A4C4 <file.include.ab3@243> XINCLUDE "PE/logging.include.ab3"
0000A4E6 <file.include.ab3@244> XINCLUDE "PE/logging.include.ab3"
0000A500 <file.include.ab3@245> XINCLUDE "PE/logging.include.ab3"
0000A506 <file.include.ab3@248> XINCLUDE "PE/logging.include.ab3"
0000A540 <file.include.ab3@249> XINCLUDE "PE/logging.include.ab3"
0000A55E <file.include.ab3@251> XINCLUDE "PE/logging.include.ab3"
0000A564 <file.include.ab3@252> XINCLUDE "PE/logging.include.ab3"
0000A582 <file.include.ab3@271> XINCLUDE "PE/logging.include.ab3"
0000A588 <file.include.ab3@273> XINCLUDE "PE/logging.include.ab3"
0000A5AA <file.include.ab3@274> XINCLUDE "PE/logging.include.ab3"
0000A5CA <file.include.ab3@275> XINCLUDE "PE/logging.include.ab3"
0000A602 <file.include.ab3@276> XINCLUDE "PE/logging.include.ab3"
0000A61E <file.include.ab3@277> XINCLUDE "PE/logging.include.ab3"
0000A624 <file.include.ab3@278> XINCLUDE "PE/logging.include.ab3"
0000A62A <file.include.ab3@279> XINCLUDE "PE/logging.include.ab3"
0000A630 <file.include.ab3@281> XINCLUDE "PE/logging.include.ab3"
0000A636 <file.include.ab3@282> XINCLUDE "PE/logging.include.ab3"
0000A652 <file.include.ab3@283> XINCLUDE "PE/logging.include.ab3"
0000A69E <file.include.ab3@285> XINCLUDE "PE/logging.include.ab3"
0000A6A4 <file.include.ab3@286> XINCLUDE "PE/logging.include.ab3"
0000A6DE <file.include.ab3@287> XINCLUDE "PE/logging.include.ab3"
0000A6EA <file.include.ab3@288> XINCLUDE "PE/logging.include.ab3"
0000A706 <file.include.ab3@289> XINCLUDE "PE/logging.include.ab3"
0000A70C <file.include.ab3@291> XINCLUDE "PE/logging.include.ab3"
0000A746 <file.include.ab3@292> XINCLUDE "PE/logging.include.ab3"
0000A750 <file.include.ab3@296> XINCLUDE "PE/logging.include.ab3"
0000A756 <file.include.ab3@297> XINCLUDE "PE/logging.include.ab3"
0000A774 <file.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
0000A7A2 <file.include.ab3@318> XINCLUDE "PE/logging.include.ab3"
0000A7A8 <file.include.ab3@319> XINCLUDE "PE/logging.include.ab3"
0000A7BE <file.include.ab3@335> XINCLUDE "PE/logging.include.ab3"
0000A7C6 <file.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
0000A822 <file.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
0000A830 <file.include.ab3@339> XINCLUDE "PE/logging.include.ab3"
0000A836 <file.include.ab3@340> XINCLUDE "PE/logging.include.ab3"
0000A868 <file.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
0000A872 <file.include.ab3@342> XINCLUDE "PE/logging.include.ab3"
0000A878 <file.include.ab3@343> XINCLUDE "PE/logging.include.ab3"
0000A892 <file.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
0000A8A4 <file.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
0000A902 <file.include.ab3@400> XINCLUDE "PE/logging.include.ab3"
0000A93C <file.include.ab3@401> XINCLUDE "PE/logging.include.ab3"
0000A976 <file.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
0000A994 <file.include.ab3@403> XINCLUDE "PE/logging.include.ab3"
0000A9B2 <file.include.ab3@404> XINCLUDE "PE/logging.include.ab3"
0000A9C8 <file.include.ab3@405> XINCLUDE "PE/logging.include.ab3"
0000A9E4 <file.include.ab3@406> XINCLUDE "PE/logging.include.ab3"
0000A9FE <file.include.ab3@407> XINCLUDE "PE/logging.include.ab3"
0000AA7C <file.include.ab3@408> XINCLUDE "PE/logging.include.ab3"
0000AA8E <file.include.ab3@410> XINCLUDE "PE/logging.include.ab3"
0000AAA4 <file.include.ab3@422> XINCLUDE "PE/logging.include.ab3"
0000AACE <file.include.ab3@424> XINCLUDE "PE/logging.include.ab3"
0000AAD8 <file.include.ab3@425> XINCLUDE "PE/logging.include.ab3"
0000AAE8 <file.include.ab3@426> XINCLUDE "PE/logging.include.ab3"
0000AAEC <file.include.ab3@427> XINCLUDE "PE/logging.include.ab3"
0000AB1A <file.include.ab3@428> XINCLUDE "PE/logging.include.ab3"
0000AB34 <file.include.ab3@447> XINCLUDE "PE/logging.include.ab3"
0000AB46 <file.include.ab3@449> XINCLUDE "PE/logging.include.ab3"
0000AB66 <file.include.ab3@450> XINCLUDE "PE/logging.include.ab3"
0000AB7C <file.include.ab3@451> XINCLUDE "PE/logging.include.ab3"
0000ABB4 <file.include.ab3@452> XINCLUDE "PE/logging.include.ab3"
0000ABDE <file.include.ab3@453> XINCLUDE "PE/logging.include.ab3"
0000AC08 <file.include.ab3@456> XINCLUDE "PE/logging.include.ab3"
0000AC20 <file.include.ab3@457> XINCLUDE "PE/logging.include.ab3"
0000AC36 <file.include.ab3@525> XINCLUDE "PE/logging.include.ab3"
0000AC7E <file.include.ab3@527> XINCLUDE "PE/logging.include.ab3"
0000AC9E <file.include.ab3@528> XINCLUDE "PE/logging.include.ab3"
0000ACA6 <file.include.ab3@529> XINCLUDE "PE/logging.include.ab3"
0000ACE4 <file.include.ab3@568> XINCLUDE "PE/logging.include.ab3"
0000ACF0 <file.include.ab3@570> XINCLUDE "PE/logging.include.ab3"
0000ACFA <file.include.ab3@571> XINCLUDE "PE/logging.include.ab3"
0000AD0C <file.include.ab3@572> XINCLUDE "PE/logging.include.ab3"
0000AD12 <file.include.ab3@573> XINCLUDE "PE/logging.include.ab3"
0000AD20 <file.include.ab3@574> XINCLUDE "PE/logging.include.ab3"
0000AD48 <file.include.ab3@575> XINCLUDE "PE/logging.include.ab3"
0000AD5C <file.include.ab3@576> XINCLUDE "PE/logging.include.ab3"
0000AD84 <file.include.ab3@577> XINCLUDE "PE/logging.include.ab3"
0000AD98 <file.include.ab3@578> XINCLUDE "PE/logging.include.ab3"
0000ADC0 <file.include.ab3@579> XINCLUDE "PE/logging.include.ab3"
0000ADD4 <file.include.ab3@580> XINCLUDE "PE/logging.include.ab3"
0000ADFC <file.include.ab3@581> XINCLUDE "PE/logging.include.ab3"
0000ADFE <file.include.ab3@582> XINCLUDE "PE/logging.include.ab3"
0000AE22 <file.include.ab3@584> XINCLUDE "PE/logging.include.ab3"
0000AE5A <file.include.ab3@586> XINCLUDE "PE/logging.include.ab3"
0000AEE4 <file.include.ab3@587> XINCLUDE "PE/logging.include.ab3"
0000AF0C <file.include.ab3@588> XINCLUDE "PE/logging.include.ab3"
0000AF3C <file.include.ab3@589> XINCLUDE "PE/logging.include.ab3"
0000AF74 <file.include.ab3@593> XINCLUDE "PE/logging.include.ab3"
0000AFCC <file.include.ab3@594> XINCLUDE "PE/logging.include.ab3"
0000B024 <file.include.ab3@595> XINCLUDE "PE/logging.include.ab3"
0000B0A4 <file.include.ab3@597> XINCLUDE "PE/logging.include.ab3"
0000B0D8 <file.include.ab3@598> XINCLUDE "PE/logging.include.ab3"
0000B10C <file.include.ab3@599> XINCLUDE "PE/logging.include.ab3"
0000B112 <file.include.ab3@600> XINCLUDE "PE/logging.include.ab3"
0000B120 <file.include.ab3@601> XINCLUDE "PE/logging.include.ab3"
0000B154 <file.include.ab3@602> XINCLUDE "PE/logging.include.ab3"
0000B17C <file.include.ab3@603> XINCLUDE "PE/logging.include.ab3"
0000B234 <file.include.ab3@604> XINCLUDE "PE/logging.include.ab3"
0000B2B4 <file.include.ab3@605> XINCLUDE "PE/logging.include.ab3"
0000B2E8 <file.include.ab3@606> XINCLUDE "PE/logging.include.ab3"
0000B308 <file.include.ab3@608> XINCLUDE "PE/logging.include.ab3"
0000B30E <file.include.ab3@609> XINCLUDE "PE/logging.include.ab3"
0000B314 <file.include.ab3@610> XINCLUDE "PE/logging.include.ab3"
0000B3E4 <file.include.ab3@611> XINCLUDE "PE/logging.include.ab3"
0000B3F8 <file.include.ab3@614> XINCLUDE "PE/logging.include.ab3"
0000B4B0 <file.include.ab3@615> XINCLUDE "PE/logging.include.ab3"
0000B530 <file.include.ab3@616> XINCLUDE "PE/logging.include.ab3"
0000B620 <file.include.ab3@617> XINCLUDE "PE/logging.include.ab3"
0000B62A <file.include.ab3@618> XINCLUDE "PE/logging.include.ab3"
0000B65E <file.include.ab3@619> XINCLUDE "PE/logging.include.ab3"
0000B67E <file.include.ab3@620> XINCLUDE "PE/logging.include.ab3"
0000B684 <file.include.ab3@621> XINCLUDE "PE/logging.include.ab3"
0000B68A <file.include.ab3@622> XINCLUDE "PE/logging.include.ab3"
0000B75A <file.include.ab3@623> XINCLUDE "PE/logging.include.ab3"
0000B76E <file.include.ab3@627> XINCLUDE "PE/logging.include.ab3"
0000B7A2 <file.include.ab3@628> XINCLUDE "PE/logging.include.ab3"
0000B7CA <file.include.ab3@629> XINCLUDE "PE/logging.include.ab3"
0000B882 <file.include.ab3@630> XINCLUDE "PE/logging.include.ab3"
0000B902 <file.include.ab3@631> XINCLUDE "PE/logging.include.ab3"
0000B936 <file.include.ab3@632> XINCLUDE "PE/logging.include.ab3"
0000B956 <file.include.ab3@635> XINCLUDE "PE/logging.include.ab3"
0000B95C <file.include.ab3@636> XINCLUDE "PE/logging.include.ab3"
0000B962 <file.include.ab3@637> XINCLUDE "PE/logging.include.ab3"
0000BA32 <file.include.ab3@638> XINCLUDE "PE/logging.include.ab3"
0000BA46 <file.include.ab3@641> XINCLUDE "PE/logging.include.ab3"
0000BAFE <file.include.ab3@642> XINCLUDE "PE/logging.include.ab3"
0000BB7E <file.include.ab3@643> XINCLUDE "PE/logging.include.ab3"
0000BBB2 <file.include.ab3@644> XINCLUDE "PE/logging.include.ab3"
0000BBD2 <file.include.ab3@645> XINCLUDE "PE/logging.include.ab3"
0000BBD8 <file.include.ab3@646> XINCLUDE "PE/logging.include.ab3"
0000BBDE <file.include.ab3@647> XINCLUDE "PE/logging.include.ab3"
0000BCAE <file.include.ab3@648> XINCLUDE "PE/logging.include.ab3"
0000BCB4 <file.include.ab3@651> XINCLUDE "PE/logging.include.ab3"
0000BCEE <file.include.ab3@652> XINCLUDE "PE/logging.include.ab3"
0000BCF0 <file.include.ab3@653> XINCLUDE "PE/logging.include.ab3"
0000BCF6 <file.include.ab3@655> XINCLUDE "PE/logging.include.ab3"
0000BD8E <file.include.ab3@656> XINCLUDE "PE/logging.include.ab3"
0000BDA0 <file.include.ab3@659> XINCLUDE "PE/logging.include.ab3"
0000BDB6 <file.include.ab3@660> XINCLUDE "PE/logging.include.ab3"
0000BE20 <file.include.ab3@661> XINCLUDE "PE/logging.include.ab3"
0000BE8A <file.include.ab3@662> XINCLUDE "PE/logging.include.ab3"
0000BEA4 <file.include.ab3@663> XINCLUDE "PE/logging.include.ab3"
0000BEC0 <file.include.ab3@664> XINCLUDE "PE/logging.include.ab3"
0000BEDE <file.include.ab3@665> XINCLUDE "PE/logging.include.ab3"
0000BEF8 <file.include.ab3@666> XINCLUDE "PE/logging.include.ab3"
0000BF02 <file.include.ab3@668> XINCLUDE "PE/logging.include.ab3"
0000BF1E <file.include.ab3@669> XINCLUDE "PE/logging.include.ab3"
0000BF40 <file.include.ab3@805> XINCLUDE "PE/logging.include.ab3"
0000BF46 <file.include.ab3@807> XINCLUDE "PE/logging.include.ab3"
0000BF6C <file.include.ab3@808> XINCLUDE "PE/logging.include.ab3"
0000BF88 <file.include.ab3@809> XINCLUDE "PE/logging.include.ab3"
0000BF9A <file.include.ab3@810> XINCLUDE "PE/logging.include.ab3"
0000BFF8 <file.include.ab3@811> XINCLUDE "PE/logging.include.ab3"
0000C030 <file.include.ab3@812> XINCLUDE "PE/logging.include.ab3"
0000C036 <file.include.ab3@813> XINCLUDE "PE/logging.include.ab3"
0000C07E <file.include.ab3@814> XINCLUDE "PE/logging.include.ab3"
0000C098 <file.include.ab3@815> XINCLUDE "PE/logging.include.ab3"
0000C0A6 <file.include.ab3@818> XINCLUDE "PE/logging.include.ab3"
0000C0AC <file.include.ab3@819> XINCLUDE "PE/logging.include.ab3"
0000C0B2 <file.include.ab3@820> XINCLUDE "PE/logging.include.ab3"
0000C0C4 <file.include.ab3@821> XINCLUDE "PE/logging.include.ab3"
0000C1B0 <file.include.ab3@822> XINCLUDE "PE/logging.include.ab3"
0000C1B6 <file.include.ab3@823> XINCLUDE "PE/logging.include.ab3"
0000C1FC <file.include.ab3@824> XINCLUDE "PE/logging.include.ab3"
0000C208 <file.include.ab3@825> XINCLUDE "PE/logging.include.ab3"
0000C26E <file.include.ab3@826> XINCLUDE "PE/logging.include.ab3"
0000C2B4 <file.include.ab3@827> XINCLUDE "PE/logging.include.ab3"
0000C2FC <file.include.ab3@830> XINCLUDE "PE/logging.include.ab3"
0000C364 <file.include.ab3@831> XINCLUDE "PE/logging.include.ab3"
0000C36A <file.include.ab3@832> XINCLUDE "PE/logging.include.ab3"
0000C3A4 <file.include.ab3@833> XINCLUDE "PE/logging.include.ab3"
0000C3AA <file.include.ab3@835> XINCLUDE "PE/logging.include.ab3"
0000C40C <file.include.ab3@836> XINCLUDE "PE/logging.include.ab3"
0000C416 <file.include.ab3@838> XINCLUDE "PE/logging.include.ab3"
0000C42A <file.include.ab3@839> XINCLUDE "PE/logging.include.ab3"
0000C444 <file.include.ab3@841> XINCLUDE "PE/logging.include.ab3"
0000C44A <file.include.ab3@843> XINCLUDE "PE/logging.include.ab3"
0000C470 <file.include.ab3@844> XINCLUDE "PE/logging.include.ab3"
0000C48C <file.include.ab3@845> XINCLUDE "PE/logging.include.ab3"
0000C4EA <file.include.ab3@846> XINCLUDE "PE/logging.include.ab3"
0000C4EE <file.include.ab3@849> XINCLUDE "PE/logging.include.ab3"
0000C510 <file.include.ab3@867> XINCLUDE "PE/logging.include.ab3"
0000C516 <file.include.ab3@869> XINCLUDE "PE/logging.include.ab3"
0000C532 <file.include.ab3@870> XINCLUDE "PE/logging.include.ab3"
0000C552 <file.include.ab3@871> XINCLUDE "PE/logging.include.ab3"
0000C590 <file.include.ab3@872> XINCLUDE "PE/logging.include.ab3"
0000C5DE <file.include.ab3@873> XINCLUDE "PE/logging.include.ab3"
0000C614 <file.include.ab3@874> XINCLUDE "PE/logging.include.ab3"
0000C61A <file.include.ab3@875> XINCLUDE "PE/logging.include.ab3"
0000C620 <file.include.ab3@876> XINCLUDE "PE/logging.include.ab3"
0000C650 <file.include.ab3@877> XINCLUDE "PE/logging.include.ab3"
0000C656 <file.include.ab3@878> XINCLUDE "PE/logging.include.ab3"
0000C65C <file.include.ab3@880> XINCLUDE "PE/logging.include.ab3"
0000C66E <file.include.ab3@881> XINCLUDE "PE/logging.include.ab3"
0000C6CC <file.include.ab3@882> XINCLUDE "PE/logging.include.ab3"
0000C704 <file.include.ab3@883> XINCLUDE "PE/logging.include.ab3"
0000C70A <file.include.ab3@884> XINCLUDE "PE/logging.include.ab3"
0000C752 <file.include.ab3@885> XINCLUDE "PE/logging.include.ab3"
0000C76C <file.include.ab3@886> XINCLUDE "PE/logging.include.ab3"
0000C77A <file.include.ab3@888> XINCLUDE "PE/logging.include.ab3"
0000C780 <file.include.ab3@889> XINCLUDE "PE/logging.include.ab3"
0000C786 <file.include.ab3@890> XINCLUDE "PE/logging.include.ab3"
0000C798 <file.include.ab3@891> XINCLUDE "PE/logging.include.ab3"
0000C79E <file.include.ab3@892> XINCLUDE "PE/logging.include.ab3"
0000C7A4 <file.include.ab3@893> XINCLUDE "PE/logging.include.ab3"
0000C802 <file.include.ab3@894> XINCLUDE "PE/logging.include.ab3"
0000C84A <file.include.ab3@897> XINCLUDE "PE/logging.include.ab3"
0000C854 <file.include.ab3@900> XINCLUDE "PE/logging.include.ab3"
0000C85A <file.include.ab3@901> XINCLUDE "PE/logging.include.ab3"
0000C874 <file.include.ab3@955> XINCLUDE "PE/logging.include.ab3"
0000C87A <file.include.ab3@957> XINCLUDE "PE/logging.include.ab3"
0000C8C2 <file.include.ab3@958> XINCLUDE "PE/logging.include.ab3"
0000C900 <file.include.ab3@959> XINCLUDE "PE/logging.include.ab3"
0000C90A <file.include.ab3@960> XINCLUDE "PE/logging.include.ab3"
0000C910 <file.include.ab3@961> XINCLUDE "PE/logging.include.ab3"
0000C936 <file.include.ab3@1108> XINCLUDE "PE/logging.include.ab3"
0000C93C <file.include.ab3@1110> XINCLUDE "PE/logging.include.ab3"
0000C962 <file.include.ab3@1111> XINCLUDE "PE/logging.include.ab3"
0000C9C2 <file.include.ab3@1112> XINCLUDE "PE/logging.include.ab3"
0000C9DC <file.include.ab3@1113> XINCLUDE "PE/logging.include.ab3"
0000C9E6 <file.include.ab3@1114> XINCLUDE "PE/logging.include.ab3"
0000CA00 <file.include.ab3@1115> XINCLUDE "PE/logging.include.ab3"
0000CA0A <file.include.ab3@1116> XINCLUDE "PE/logging.include.ab3"
0000CA22 <file.include.ab3@1117> XINCLUDE "PE/logging.include.ab3"
0000CA52 <file.include.ab3@1118> XINCLUDE "PE/logging.include.ab3"
0000CA6E <file.include.ab3@1119> XINCLUDE "PE/logging.include.ab3"
0000CA7C <file.include.ab3@1120> XINCLUDE "PE/logging.include.ab3"
0000CA82 <file.include.ab3@1123> XINCLUDE "PE/logging.include.ab3"
0000CABC <file.include.ab3@1124> XINCLUDE "PE/logging.include.ab3"
0000CAC6 <file.include.ab3@1126> XINCLUDE "PE/logging.include.ab3"
0000CACC <file.include.ab3@1127> XINCLUDE "PE/logging.include.ab3"
0000CAEA <file.include.ab3@1148> XINCLUDE "PE/logging.include.ab3"
0000CAF0 <file.include.ab3@1150> XINCLUDE "PE/logging.include.ab3"
0000CB02 <file.include.ab3@1151> XINCLUDE "PE/logging.include.ab3"
0000CB10 <file.include.ab3@1152> XINCLUDE "PE/logging.include.ab3"
0000CB2E <file.include.ab3@1153> XINCLUDE "PE/logging.include.ab3"
0000CB64 <file.include.ab3@1154> XINCLUDE "PE/logging.include.ab3"
0000CB76 <file.include.ab3@1155> XINCLUDE "PE/logging.include.ab3"
0000CBC0 <file.include.ab3@1156> XINCLUDE "PE/logging.include.ab3"
0000CCAA <file.include.ab3@1157> XINCLUDE "PE/logging.include.ab3"
0000CCC8 <file.include.ab3@1158> XINCLUDE "PE/logging.include.ab3"
0000CCEE <file.include.ab3@1160> XINCLUDE "PE/logging.include.ab3"
0000CD0A <file.include.ab3@1161> XINCLUDE "PE/logging.include.ab3"
0000CD36 <file.include.ab3@1162> XINCLUDE "PE/logging.include.ab3"
0000CD40 <file.include.ab3@1163> XINCLUDE "PE/logging.include.ab3"
0000CD6E <file.include.ab3@1164> XINCLUDE "PE/logging.include.ab3"
0000CD88 <file.include.ab3@1165> XINCLUDE "PE/logging.include.ab3"
0000CDA4 <file.include.ab3@1166> XINCLUDE "PE/logging.include.ab3"
0000CDAA <file.include.ab3@1167> XINCLUDE "PE/logging.include.ab3"
0000CDE4 <file.include.ab3@1168> XINCLUDE "PE/logging.include.ab3"
0000CDEA <file.include.ab3@1170> XINCLUDE "PE/logging.include.ab3"
0000CDF0 <file.include.ab3@1171> XINCLUDE "PE/logging.include.ab3"
0000CDF6 <file.include.ab3@1173> XINCLUDE "PE/logging.include.ab3"
0000CE96 <file.include.ab3@1174> XINCLUDE "PE/logging.include.ab3"
0000CE9C <file.include.ab3@1176> XINCLUDE "PE/logging.include.ab3"
0000CF3E <file.include.ab3@1177> XINCLUDE "PE/logging.include.ab3"
0000CF44 <file.include.ab3@1179> XINCLUDE "PE/logging.include.ab3"
0000CF7E <file.include.ab3@1180> XINCLUDE "PE/logging.include.ab3"
0000CF88 <file.include.ab3@1182> XINCLUDE "PE/logging.include.ab3"
0000CF8E <file.include.ab3@1183> XINCLUDE "PE/logging.include.ab3"
0000CFA8 <file.include.ab3@1245> XINCLUDE "PE/logging.include.ab3"
0000CFC6 <file.include.ab3@1247> XINCLUDE "PE/logging.include.ab3"
0000CFCC <file.include.ab3@1248> XINCLUDE "PE/logging.include.ab3"
0000CFE6 <file.include.ab3@1398> XINCLUDE "PE/logging.include.ab3"
0000D006 <file.include.ab3@1400> XINCLUDE "PE/logging.include.ab3"
0000D0BA <file.include.ab3@1401> XINCLUDE "PE/logging.include.ab3"
0000D0C0 <file.include.ab3@1402> XINCLUDE "PE/logging.include.ab3"
0000D0C6 <file.include.ab3@1403> XINCLUDE "PE/logging.include.ab3"
0000D0F0 <file.include.ab3@1404> XINCLUDE "PE/logging.include.ab3"
0000D0FC <file.include.ab3@1406> XINCLUDE "PE/logging.include.ab3"
0000D102 <file.include.ab3@1407> XINCLUDE "PE/logging.include.ab3"
0000D11C <file.include.ab3@1593> XINCLUDE "PE/logging.include.ab3"
0000D124 <file.include.ab3@1594> XINCLUDE "PE/logging.include.ab3"
0000D12C <file.include.ab3@1595> XINCLUDE "PE/logging.include.ab3"
0000D142 <file.include.ab3@1596> XINCLUDE "PE/logging.include.ab3"
0000D15A <file.include.ab3@1597> XINCLUDE "PE/logging.include.ab3"
0000D16C <file.include.ab3@1598> XINCLUDE "PE/logging.include.ab3"
0000D178 <file.include.ab3@1599> XINCLUDE "PE/logging.include.ab3"
0000D17E <file.include.ab3@1600> XINCLUDE "PE/logging.include.ab3"
0000D186 <file.include.ab3@1601> XINCLUDE "PE/logging.include.ab3"
0000D1BE <file.include.ab3@1602> XINCLUDE "PE/logging.include.ab3"
0000D1D0 <file.include.ab3@1603> XINCLUDE "PE/logging.include.ab3"
0000D1F4 <file.include.ab3@1604> XINCLUDE "PE/logging.include.ab3"
0000D206 <file.include.ab3@1605> XINCLUDE "PE/logging.include.ab3"
0000D212 <file.include.ab3@1606> XINCLUDE "PE/logging.include.ab3"
0000D218 <file.include.ab3@1607> XINCLUDE "PE/logging.include.ab3"
0000D228 <file.include.ab3@1608> XINCLUDE "PE/logging.include.ab3"
0000D246 <file.include.ab3@1613> XINCLUDE "PE/logging.include.ab3"
0000D258 <file.include.ab3@1616> XINCLUDE "PE/logging.include.ab3"
0000D2A4 <file.include.ab3@1617> XINCLUDE "PE/logging.include.ab3"
0000D2AA <file.include.ab3@1619> XINCLUDE "PE/logging.include.ab3"
0000D2D4 <file.include.ab3@1621> XINCLUDE "PE/logging.include.ab3"
0000D2EC <file.include.ab3@1622> XINCLUDE "PE/logging.include.ab3"
0000D31A <file.include.ab3@1706> XINCLUDE "PE/logging.include.ab3"
0000D32E <file.include.ab3@1707> XINCLUDE "PE/logging.include.ab3"
0000D344 <file.include.ab3@1708> XINCLUDE "PE/logging.include.ab3"
0000D364 <file.include.ab3@1709> XINCLUDE "PE/logging.include.ab3"
0000D37A <file.include.ab3@1710> XINCLUDE "PE/logging.include.ab3"
0000D384 <file.include.ab3@1711> XINCLUDE "PE/logging.include.ab3"
0000D39E <file.include.ab3@1712> XINCLUDE "PE/logging.include.ab3"
0000D3C0 <file.include.ab3@1787> XINCLUDE "PE/logging.include.ab3"
0000D3D8 <file.include.ab3@1789> XINCLUDE "PE/logging.include.ab3"
0000D3FA <file.include.ab3@1790> XINCLUDE "PE/logging.include.ab3"
0000D400 <file.include.ab3@1791> XINCLUDE "PE/logging.include.ab3"
0000D432 <file.include.ab3@1811> XINCLUDE "PE/logging.include.ab3"
0000D446 <file.include.ab3@1813> XINCLUDE "PE/logging.include.ab3"
0000D45E <file.include.ab3@1814> XINCLUDE "PE/logging.include.ab3"
0000D476 <file.include.ab3@1815> XINCLUDE "PE/logging.include.ab3"
0000D496 <file.include.ab3@1816> XINCLUDE "PE/logging.include.ab3"
0000D4C6 <file.include.ab3@1817> XINCLUDE "PE/logging.include.ab3"
0000D4F6 <file.include.ab3@1818> XINCLUDE "PE/logging.include.ab3"
0000D508 <file.include.ab3@1819> XINCLUDE "PE/logging.include.ab3"
0000D510 <file.include.ab3@1820> XINCLUDE "PE/logging.include.ab3"
0000D53A <file.include.ab3@1821> XINCLUDE "PE/logging.include.ab3"
0000D544 <file.include.ab3@1823> XINCLUDE "PE/logging.include.ab3"
0000D55E <file.include.ab3@1824> XINCLUDE "PE/logging.include.ab3"
0000D578 <file.include.ab3@1841> XINCLUDE "PE/logging.include.ab3"
0000D596 <file.include.ab3@1843> XINCLUDE "PE/logging.include.ab3"
0000D5B6 <file.include.ab3@1844> XINCLUDE "PE/logging.include.ab3"
0000D600 <file.include.ab3@1845> XINCLUDE "PE/logging.include.ab3"
0000D61A <file.include.ab3@1846> XINCLUDE "PE/logging.include.ab3"
0000D62C <file.include.ab3@1847> XINCLUDE "PE/logging.include.ab3"
0000D662 <file.include.ab3@1848> XINCLUDE "PE/logging.include.ab3"
0000D674 <file.include.ab3@1849> XINCLUDE "PE/logging.include.ab3"
0000D67C <file.include.ab3@1850> XINCLUDE "PE/logging.include.ab3"
0000D6A4 <file.include.ab3@1851> XINCLUDE "PE/logging.include.ab3"
0000D6AA <file.include.ab3@1853> XINCLUDE "PE/logging.include.ab3"
0000D6D2 <file.include.ab3@1854> XINCLUDE "PE/logging.include.ab3"
0000D6E2 <file.include.ab3@1856> XINCLUDE "PE/logging.include.ab3"
0000D6F6 <file.include.ab3@1857> XINCLUDE "PE/logging.include.ab3"
0000D70C <file.include.ab3@1870> XINCLUDE "PE/logging.include.ab3"
0000D71C <file.include.ab3@1872> XINCLUDE "PE/logging.include.ab3"
0000D720 <file.include.ab3@1873> XINCLUDE "PE/logging.include.ab3"
0000D736 <file.include.ab3@1894> XINCLUDE "PE/logging.include.ab3"
0000D760 <file.include.ab3@1896> XINCLUDE "PE/logging.include.ab3"
0000D768 <file.include.ab3@1897> XINCLUDE "PE/logging.include.ab3"
0000D768 <logging.include.ab3@13> XINCLUDE "PE/logging.include.ab3"
0000D806 <logging.include.ab3@35> XINCLUDE "PE/logging.include.ab3"
0000D80C <logging.include.ab3@36> XINCLUDE "PE/logging.include.ab3"
0000D812 <logging.include.ab3@37> XINCLUDE "PE/logging.include.ab3"
0000D818 <logging.include.ab3@38> XINCLUDE "PE/logging.include.ab3"
0000D852 <logging.include.ab3@129> XINCLUDE "PE/logging.include.ab3"
0000D884 <logging.include.ab3@131> XINCLUDE "PE/logging.include.ab3"
0000D892 <logging.include.ab3@132> XINCLUDE "PE/logging.include.ab3"
0000D8C2 <logging.include.ab3@133> XINCLUDE "PE/logging.include.ab3"
0000DC32 <logging.include.ab3@134> XINCLUDE "PE/logging.include.ab3"
0000DC40 <logging.include.ab3@135> XINCLUDE "PE/logging.include.ab3"
0000DC46 <logging.include.ab3@136> XINCLUDE "PE/logging.include.ab3"
0000DED8 <logging.include.ab3@137> XINCLUDE "PE/logging.include.ab3"
0000DEF2 <logging.include.ab3@139> XINCLUDE "PE/logging.include.ab3"
0000DF2C <logging.include.ab3@142> XINCLUDE "PE/logging.include.ab3"
0000DF7E <logging.include.ab3@143> XINCLUDE "PE/logging.include.ab3"
0000DF8C <logging.include.ab3@144> XINCLUDE "PE/logging.include.ab3"
0000DFE2 <logging.include.ab3@145> XINCLUDE "PE/logging.include.ab3"
0000DFE8 <logging.include.ab3@146> XINCLUDE "PE/logging.include.ab3"
0000E062 <logging.include.ab3@147> XINCLUDE "PE/logging.include.ab3"
0000E0D6 <logging.include.ab3@148> XINCLUDE "PE/logging.include.ab3"
0000E0F0 <logging.include.ab3@150> XINCLUDE "PE/logging.include.ab3"
0000E0F0 <AmiBlitz3.ab3@89> XINCLUDE "PE/logging.include.ab3"
0000E0F0 <translation.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0F0 <phrasebook.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0F0 <prefixtree.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0F0 <dynamicarray.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E118 <dynamicarray.include.ab3@42> XINCLUDE "translation.include.ab3"
0000E132 <dynamicarray.include.ab3@55> XINCLUDE "translation.include.ab3"
0000E13C <dynamicarray.include.ab3@56> XINCLUDE "translation.include.ab3"
0000E14E <dynamicarray.include.ab3@57> XINCLUDE "translation.include.ab3"
0000E172 <dynamicarray.include.ab3@58> XINCLUDE "translation.include.ab3"
0000E180 <dynamicarray.include.ab3@60> XINCLUDE "translation.include.ab3"
0000E18C <dynamicarray.include.ab3@61> XINCLUDE "translation.include.ab3"
0000E190 <dynamicarray.include.ab3@63> XINCLUDE "translation.include.ab3"
0000E1AE <dynamicarray.include.ab3@99> XINCLUDE "translation.include.ab3"
0000E1C8 <dynamicarray.include.ab3@101> XINCLUDE "translation.include.ab3"
0000E1E8 <dynamicarray.include.ab3@102> XINCLUDE "translation.include.ab3"
0000E1F2 <dynamicarray.include.ab3@103> XINCLUDE "translation.include.ab3"
0000E200 <dynamicarray.include.ab3@104> XINCLUDE "translation.include.ab3"
0000E20C <dynamicarray.include.ab3@105> XINCLUDE "translation.include.ab3"
0000E21A <dynamicarray.include.ab3@106> XINCLUDE "translation.include.ab3"
0000E226 <dynamicarray.include.ab3@107> XINCLUDE "translation.include.ab3"
0000E232 <dynamicarray.include.ab3@108> XINCLUDE "translation.include.ab3"
0000E244 <dynamicarray.include.ab3@109> XINCLUDE "translation.include.ab3"
0000E254 <dynamicarray.include.ab3@110> XINCLUDE "translation.include.ab3"
0000E25E <dynamicarray.include.ab3@113> XINCLUDE "translation.include.ab3"
0000E264 <dynamicarray.include.ab3@114> XINCLUDE "translation.include.ab3"
0000E27E <dynamicarray.include.ab3@425> XINCLUDE "translation.include.ab3"
0000E288 <dynamicarray.include.ab3@427> XINCLUDE "translation.include.ab3"
0000E292 <dynamicarray.include.ab3@428> XINCLUDE "translation.include.ab3"
0000E2A2 <dynamicarray.include.ab3@429> XINCLUDE "translation.include.ab3"
0000E2AC <dynamicarray.include.ab3@430> XINCLUDE "translation.include.ab3"
0000E2BE <dynamicarray.include.ab3@431> XINCLUDE "translation.include.ab3"
0000E2D4 <dynamicarray.include.ab3@432> XINCLUDE "translation.include.ab3"
0000E2DE <dynamicarray.include.ab3@433> XINCLUDE "translation.include.ab3"
0000E2E4 <dynamicarray.include.ab3@435> XINCLUDE "translation.include.ab3"
0000E2E8 <dynamicarray.include.ab3@437> XINCLUDE "translation.include.ab3"
0000E2FE <dynamicarray.include.ab3@531> XINCLUDE "translation.include.ab3"
0000E304 <dynamicarray.include.ab3@533> XINCLUDE "translation.include.ab3"
0000E30E <dynamicarray.include.ab3@535> XINCLUDE "translation.include.ab3"
0000E344 <dynamicarray.include.ab3@536> XINCLUDE "translation.include.ab3"
0000E34E <dynamicarray.include.ab3@537> XINCLUDE "translation.include.ab3"
0000E352 <dynamicarray.include.ab3@538> XINCLUDE "translation.include.ab3"
0000E380 <dynamicarray.include.ab3@539> XINCLUDE "translation.include.ab3"
0000E380 <prefixtree.include.ab3@156> XINCLUDE "translation.include.ab3"
0000E39A <prefixtree.include.ab3@221> XINCLUDE "translation.include.ab3"
0000E3A4 <prefixtree.include.ab3@223> XINCLUDE "translation.include.ab3"
0000E3CC <prefixtree.include.ab3@224> XINCLUDE "translation.include.ab3"
0000E3EE <prefixtree.include.ab3@225> XINCLUDE "translation.include.ab3"
0000E406 <prefixtree.include.ab3@226> XINCLUDE "translation.include.ab3"
0000E41C <prefixtree.include.ab3@227> XINCLUDE "translation.include.ab3"
0000E420 <prefixtree.include.ab3@230> XINCLUDE "translation.include.ab3"
0000E43A <prefixtree.include.ab3@283> XINCLUDE "translation.include.ab3"
0000E45A <prefixtree.include.ab3@284> XINCLUDE "translation.include.ab3"
0000E464 <prefixtree.include.ab3@285> XINCLUDE "translation.include.ab3"
0000E47E <prefixtree.include.ab3@286> XINCLUDE "translation.include.ab3"
0000E48C <prefixtree.include.ab3@287> XINCLUDE "translation.include.ab3"
0000E49A <prefixtree.include.ab3@288> XINCLUDE "translation.include.ab3"
0000E4A8 <prefixtree.include.ab3@289> XINCLUDE "translation.include.ab3"
0000E4B6 <prefixtree.include.ab3@290> XINCLUDE "translation.include.ab3"
0000E4C2 <prefixtree.include.ab3@291> XINCLUDE "translation.include.ab3"
0000E4CC <prefixtree.include.ab3@292> XINCLUDE "translation.include.ab3"
0000E4DA <prefixtree.include.ab3@293> XINCLUDE "translation.include.ab3"
0000E4E8 <prefixtree.include.ab3@294> XINCLUDE "translation.include.ab3"
0000E4F6 <prefixtree.include.ab3@295> XINCLUDE "translation.include.ab3"
0000E510 <prefixtree.include.ab3@296> XINCLUDE "translation.include.ab3"
0000E51E <prefixtree.include.ab3@297> XINCLUDE "translation.include.ab3"
0000E52E <prefixtree.include.ab3@298> XINCLUDE "translation.include.ab3"
0000E53E <prefixtree.include.ab3@299> XINCLUDE "translation.include.ab3"
0000E54E <prefixtree.include.ab3@300> XINCLUDE "translation.include.ab3"
0000E55C <prefixtree.include.ab3@301> XINCLUDE "translation.include.ab3"
0000E566 <prefixtree.include.ab3@303> XINCLUDE "translation.include.ab3"
0000E56C <prefixtree.include.ab3@304> XINCLUDE "translation.include.ab3"
0000E58A <prefixtree.include.ab3@322> XINCLUDE "translation.include.ab3"
0000E590 <prefixtree.include.ab3@323> XINCLUDE "translation.include.ab3"
0000E59A <prefixtree.include.ab3@324> XINCLUDE "translation.include.ab3"
0000E5BA <prefixtree.include.ab3@325> XINCLUDE "translation.include.ab3"
0000E5E8 <prefixtree.include.ab3@326> XINCLUDE "translation.include.ab3"
0000E606 <prefixtree.include.ab3@327> XINCLUDE "translation.include.ab3"
0000E610 <prefixtree.include.ab3@328> XINCLUDE "translation.include.ab3"
0000E622 <prefixtree.include.ab3@329> XINCLUDE "translation.include.ab3"
0000E64E <prefixtree.include.ab3@330> XINCLUDE "translation.include.ab3"
0000E664 <prefixtree.include.ab3@331> XINCLUDE "translation.include.ab3"
0000E670 <prefixtree.include.ab3@333> XINCLUDE "translation.include.ab3"
0000E67C <prefixtree.include.ab3@334> XINCLUDE "translation.include.ab3"
0000E682 <prefixtree.include.ab3@335> XINCLUDE "translation.include.ab3"
0000E688 <prefixtree.include.ab3@336> XINCLUDE "translation.include.ab3"
0000E68E <prefixtree.include.ab3@337> XINCLUDE "translation.include.ab3"
0000E6C6 <prefixtree.include.ab3@338> XINCLUDE "translation.include.ab3"
0000E6CC <prefixtree.include.ab3@340> XINCLUDE "translation.include.ab3"
0000E6D2 <prefixtree.include.ab3@341> XINCLUDE "translation.include.ab3"
0000E6DC <prefixtree.include.ab3@344> XINCLUDE "translation.include.ab3"
0000E6E2 <prefixtree.include.ab3@345> XINCLUDE "translation.include.ab3"
0000E714 <prefixtree.include.ab3@365> XINCLUDE "translation.include.ab3"
0000E730 <prefixtree.include.ab3@366> XINCLUDE "translation.include.ab3"
0000E74A <prefixtree.include.ab3@367> XINCLUDE "translation.include.ab3"
0000E75E <prefixtree.include.ab3@368> XINCLUDE "translation.include.ab3"
0000E7AE <prefixtree.include.ab3@369> XINCLUDE "translation.include.ab3"
0000E7D0 <prefixtree.include.ab3@371> XINCLUDE "translation.include.ab3"
0000E7E4 <prefixtree.include.ab3@372> XINCLUDE "translation.include.ab3"
0000E7F2 <prefixtree.include.ab3@373> XINCLUDE "translation.include.ab3"
0000E7FE <prefixtree.include.ab3@374> XINCLUDE "translation.include.ab3"
0000E806 <prefixtree.include.ab3@375> XINCLUDE "translation.include.ab3"
0000E80E <prefixtree.include.ab3@376> XINCLUDE "translation.include.ab3"
0000E816 <prefixtree.include.ab3@377> XINCLUDE "translation.include.ab3"
0000E81E <prefixtree.include.ab3@378> XINCLUDE "translation.include.ab3"
0000E824 <prefixtree.include.ab3@379> XINCLUDE "translation.include.ab3"
0000E832 <prefixtree.include.ab3@380> XINCLUDE "translation.include.ab3"
0000E854 <prefixtree.include.ab3@382> XINCLUDE "translation.include.ab3"
0000E880 <prefixtree.include.ab3@383> XINCLUDE "translation.include.ab3"
0000E892 <prefixtree.include.ab3@385> XINCLUDE "translation.include.ab3"
0000E898 <prefixtree.include.ab3@386> XINCLUDE "translation.include.ab3"
0000E8C0 <prefixtree.include.ab3@388> XINCLUDE "translation.include.ab3"
0000E8E4 <prefixtree.include.ab3@389> XINCLUDE "translation.include.ab3"
0000E90C <prefixtree.include.ab3@390> XINCLUDE "translation.include.ab3"
0000E940 <prefixtree.include.ab3@391> XINCLUDE "translation.include.ab3"
0000E950 <prefixtree.include.ab3@392> XINCLUDE "translation.include.ab3"
0000E95A <prefixtree.include.ab3@393> XINCLUDE "translation.include.ab3"
0000E968 <prefixtree.include.ab3@394> XINCLUDE "translation.include.ab3"
0000E97C <prefixtree.include.ab3@395> XINCLUDE "translation.include.ab3"
0000E982 <prefixtree.include.ab3@396> XINCLUDE "translation.include.ab3"
0000E9A2 <prefixtree.include.ab3@397> XINCLUDE "translation.include.ab3"
0000E9A8 <prefixtree.include.ab3@398> XINCLUDE "translation.include.ab3"
0000E9B0 <prefixtree.include.ab3@400> XINCLUDE "translation.include.ab3"
0000E9EA <prefixtree.include.ab3@402> XINCLUDE "translation.include.ab3"
0000EA10 <prefixtree.include.ab3@403> XINCLUDE "translation.include.ab3"
0000EA28 <prefixtree.include.ab3@404> XINCLUDE "translation.include.ab3"
0000EA5C <prefixtree.include.ab3@405> XINCLUDE "translation.include.ab3"
0000EA64 <prefixtree.include.ab3@406> XINCLUDE "translation.include.ab3"
0000EA72 <prefixtree.include.ab3@408> XINCLUDE "translation.include.ab3"
0000EA78 <prefixtree.include.ab3@410> XINCLUDE "translation.include.ab3"
0000EA90 <prefixtree.include.ab3@411> XINCLUDE "translation.include.ab3"
0000EA96 <prefixtree.include.ab3@412> XINCLUDE "translation.include.ab3"
0000EA9C <prefixtree.include.ab3@413> XINCLUDE "translation.include.ab3"
0000EAB6 <prefixtree.include.ab3@414> XINCLUDE "translation.include.ab3"
0000EABC <prefixtree.include.ab3@417> XINCLUDE "translation.include.ab3"
0000EAC2 <prefixtree.include.ab3@419> XINCLUDE "translation.include.ab3"
0000EAC8 <prefixtree.include.ab3@421> XINCLUDE "translation.include.ab3"
0000EAD6 <prefixtree.include.ab3@422> XINCLUDE "translation.include.ab3"
0000EAE4 <prefixtree.include.ab3@423> XINCLUDE "translation.include.ab3"
0000EB1E <prefixtree.include.ab3@425> XINCLUDE "translation.include.ab3"
0000EB44 <prefixtree.include.ab3@426> XINCLUDE "translation.include.ab3"
0000EB5C <prefixtree.include.ab3@427> XINCLUDE "translation.include.ab3"
0000EB68 <prefixtree.include.ab3@430> XINCLUDE "translation.include.ab3"
0000EB74 <prefixtree.include.ab3@431> XINCLUDE "translation.include.ab3"
0000EB80 <prefixtree.include.ab3@432> XINCLUDE "translation.include.ab3"
0000EB8C <prefixtree.include.ab3@433> XINCLUDE "translation.include.ab3"
0000EB98 <prefixtree.include.ab3@434> XINCLUDE "translation.include.ab3"
0000EBA2 <prefixtree.include.ab3@435> XINCLUDE "translation.include.ab3"
0000EBAA <prefixtree.include.ab3@437> XINCLUDE "translation.include.ab3"
0000EBC4 <prefixtree.include.ab3@438> XINCLUDE "translation.include.ab3"
0000EC02 <prefixtree.include.ab3@485> XINCLUDE "translation.include.ab3"
0000EC08 <prefixtree.include.ab3@486> XINCLUDE "translation.include.ab3"
0000EC6E <prefixtree.include.ab3@487> XINCLUDE "translation.include.ab3"
0000ECAE <prefixtree.include.ab3@489> XINCLUDE "translation.include.ab3"
0000ED04 <prefixtree.include.ab3@490> XINCLUDE "translation.include.ab3"
0000ED76 <prefixtree.include.ab3@491> XINCLUDE "translation.include.ab3"
0000ED82 <prefixtree.include.ab3@493> XINCLUDE "translation.include.ab3"
0000ED90 <prefixtree.include.ab3@494> XINCLUDE "translation.include.ab3"
0000EDD6 <prefixtree.include.ab3@495> XINCLUDE "translation.include.ab3"
0000EE20 <prefixtree.include.ab3@496> XINCLUDE "translation.include.ab3"
0000EE58 <prefixtree.include.ab3@497> XINCLUDE "translation.include.ab3"
0000EEAC <prefixtree.include.ab3@498> XINCLUDE "translation.include.ab3"
0000EEB2 <prefixtree.include.ab3@499> XINCLUDE "translation.include.ab3"
0000EEB8 <prefixtree.include.ab3@500> XINCLUDE "translation.include.ab3"
0000EEC6 <prefixtree.include.ab3@502> XINCLUDE "translation.include.ab3"
0000EECE <prefixtree.include.ab3@503> XINCLUDE "translation.include.ab3"
0000EF08 <prefixtree.include.ab3@505> XINCLUDE "translation.include.ab3"
0000EF2E <prefixtree.include.ab3@506> XINCLUDE "translation.include.ab3"
0000EF46 <prefixtree.include.ab3@507> XINCLUDE "translation.include.ab3"
0000EF7C <prefixtree.include.ab3@508> XINCLUDE "translation.include.ab3"
0000EF92 <prefixtree.include.ab3@509> XINCLUDE "translation.include.ab3"
0000EFA0 <prefixtree.include.ab3@511> XINCLUDE "translation.include.ab3"
0000EFB8 <prefixtree.include.ab3@512> XINCLUDE "translation.include.ab3"
0000EFF0 <prefixtree.include.ab3@513> XINCLUDE "translation.include.ab3"
0000F016 <prefixtree.include.ab3@514> XINCLUDE "translation.include.ab3"
0000F05E <prefixtree.include.ab3@515> XINCLUDE "translation.include.ab3"
0000F064 <prefixtree.include.ab3@516> XINCLUDE "translation.include.ab3"
0000F07E <prefixtree.include.ab3@518> XINCLUDE "translation.include.ab3"
0000F08A <prefixtree.include.ab3@519> XINCLUDE "translation.include.ab3"
0000F090 <prefixtree.include.ab3@520> XINCLUDE "translation.include.ab3"
0000F0BC <prefixtree.include.ab3@521> XINCLUDE "translation.include.ab3"
0000F0D0 <prefixtree.include.ab3@526> XINCLUDE "translation.include.ab3"
0000F0DE <prefixtree.include.ab3@528> XINCLUDE "translation.include.ab3"
0000F0E6 <prefixtree.include.ab3@529> XINCLUDE "translation.include.ab3"
0000F120 <prefixtree.include.ab3@531> XINCLUDE "translation.include.ab3"
0000F146 <prefixtree.include.ab3@532> XINCLUDE "translation.include.ab3"
0000F15E <prefixtree.include.ab3@533> XINCLUDE "translation.include.ab3"
0000F198 <prefixtree.include.ab3@534> XINCLUDE "translation.include.ab3"
0000F1C2 <prefixtree.include.ab3@535> XINCLUDE "translation.include.ab3"
0000F1DA <prefixtree.include.ab3@536> XINCLUDE "translation.include.ab3"
0000F20A <prefixtree.include.ab3@537> XINCLUDE "translation.include.ab3"
0000F236 <prefixtree.include.ab3@538> XINCLUDE "translation.include.ab3"
0000F252 <prefixtree.include.ab3@539> XINCLUDE "translation.include.ab3"
0000F260 <prefixtree.include.ab3@541> XINCLUDE "translation.include.ab3"
0000F26E <prefixtree.include.ab3@542> XINCLUDE "translation.include.ab3"
0000F2AC <prefixtree.include.ab3@543> XINCLUDE "translation.include.ab3"
0000F2E8 <prefixtree.include.ab3@544> XINCLUDE "translation.include.ab3"
0000F354 <prefixtree.include.ab3@545> XINCLUDE "translation.include.ab3"
0000F382 <prefixtree.include.ab3@546> XINCLUDE "translation.include.ab3"
0000F3B0 <prefixtree.include.ab3@547> XINCLUDE "translation.include.ab3"
0000F3F8 <prefixtree.include.ab3@548> XINCLUDE "translation.include.ab3"
0000F412 <prefixtree.include.ab3@551> XINCLUDE "translation.include.ab3"
0000F45A <prefixtree.include.ab3@552> XINCLUDE "translation.include.ab3"
0000F478 <prefixtree.include.ab3@553> XINCLUDE "translation.include.ab3"
0000F496 <prefixtree.include.ab3@554> XINCLUDE "translation.include.ab3"
0000F4B0 <prefixtree.include.ab3@557> XINCLUDE "translation.include.ab3"
0000F4BC <prefixtree.include.ab3@558> XINCLUDE "translation.include.ab3"
0000F4C2 <prefixtree.include.ab3@559> XINCLUDE "translation.include.ab3"
0000F4EE <prefixtree.include.ab3@560> XINCLUDE "translation.include.ab3"
0000F506 <prefixtree.include.ab3@562> XINCLUDE "translation.include.ab3"
0000F50C <prefixtree.include.ab3@563> XINCLUDE "translation.include.ab3"
0000F520 <prefixtree.include.ab3@566> XINCLUDE "translation.include.ab3"
0000F52E <prefixtree.include.ab3@568> XINCLUDE "translation.include.ab3"
0000F53C <prefixtree.include.ab3@569> XINCLUDE "translation.include.ab3"
0000F54A <prefixtree.include.ab3@570> XINCLUDE "translation.include.ab3"
0000F552 <prefixtree.include.ab3@571> XINCLUDE "translation.include.ab3"
0000F57E <prefixtree.include.ab3@572> XINCLUDE "translation.include.ab3"
0000F5A6 <prefixtree.include.ab3@573> XINCLUDE "translation.include.ab3"
0000F5CE <prefixtree.include.ab3@574> XINCLUDE "translation.include.ab3"
0000F63A <prefixtree.include.ab3@575> XINCLUDE "translation.include.ab3"
0000F64A <prefixtree.include.ab3@576> XINCLUDE "translation.include.ab3"
0000F676 <prefixtree.include.ab3@577> XINCLUDE "translation.include.ab3"
0000F6CC <prefixtree.include.ab3@579> XINCLUDE "translation.include.ab3"
0000F6DA <prefixtree.include.ab3@580> XINCLUDE "translation.include.ab3"
0000F6E8 <prefixtree.include.ab3@581> XINCLUDE "translation.include.ab3"
0000F6EE <prefixtree.include.ab3@582> XINCLUDE "translation.include.ab3"
0000F742 <prefixtree.include.ab3@584> XINCLUDE "translation.include.ab3"
0000F862 <prefixtree.include.ab3@585> XINCLUDE "translation.include.ab3"
0000F8B2 <prefixtree.include.ab3@587> XINCLUDE "translation.include.ab3"
0000F908 <prefixtree.include.ab3@588> XINCLUDE "translation.include.ab3"
0000F974 <prefixtree.include.ab3@589> XINCLUDE "translation.include.ab3"
0000F97C <prefixtree.include.ab3@593> XINCLUDE "translation.include.ab3"
0000F9B6 <prefixtree.include.ab3@595> XINCLUDE "translation.include.ab3"
0000F9DC <prefixtree.include.ab3@596> XINCLUDE "translation.include.ab3"
0000F9F4 <prefixtree.include.ab3@597> XINCLUDE "translation.include.ab3"
0000FA2E <prefixtree.include.ab3@598> XINCLUDE "translation.include.ab3"
0000FA58 <prefixtree.include.ab3@599> XINCLUDE "translation.include.ab3"
0000FA70 <prefixtree.include.ab3@600> XINCLUDE "translation.include.ab3"
0000FA94 <prefixtree.include.ab3@602> XINCLUDE "translation.include.ab3"
0000FAE8 <prefixtree.include.ab3@603> XINCLUDE "translation.include.ab3"
0000FAF0 <prefixtree.include.ab3@604> XINCLUDE "translation.include.ab3"
0000FAF6 <prefixtree.include.ab3@605> XINCLUDE "translation.include.ab3"
0000FB58 <prefixtree.include.ab3@606> XINCLUDE "translation.include.ab3"
0000FB84 <prefixtree.include.ab3@607> XINCLUDE "translation.include.ab3"
0000FBA0 <prefixtree.include.ab3@610> XINCLUDE "translation.include.ab3"
0000FBAE <prefixtree.include.ab3@612> XINCLUDE "translation.include.ab3"
0000FBBC <prefixtree.include.ab3@613> XINCLUDE "translation.include.ab3"
0000FBCA <prefixtree.include.ab3@615> XINCLUDE "translation.include.ab3"
0000FBD8 <prefixtree.include.ab3@616> XINCLUDE "translation.include.ab3"
0000FC1C <prefixtree.include.ab3@617> XINCLUDE "translation.include.ab3"
0000FC88 <prefixtree.include.ab3@618> XINCLUDE "translation.include.ab3"
0000FCB6 <prefixtree.include.ab3@619> XINCLUDE "translation.include.ab3"
0000FCCA <prefixtree.include.ab3@620> XINCLUDE "translation.include.ab3"
0000FCFC <prefixtree.include.ab3@621> XINCLUDE "translation.include.ab3"
0000FD46 <prefixtree.include.ab3@622> XINCLUDE "translation.include.ab3"
0000FD56 <prefixtree.include.ab3@623> XINCLUDE "translation.include.ab3"
0000FD8A <prefixtree.include.ab3@624> XINCLUDE "translation.include.ab3"
0000FDAC <prefixtree.include.ab3@625> XINCLUDE "translation.include.ab3"
0000FDBC <prefixtree.include.ab3@626> XINCLUDE "translation.include.ab3"
0000FDC4 <prefixtree.include.ab3@629> XINCLUDE "translation.include.ab3"
0000FE08 <prefixtree.include.ab3@630> XINCLUDE "translation.include.ab3"
0000FE74 <prefixtree.include.ab3@631> XINCLUDE "translation.include.ab3"
0000FEA2 <prefixtree.include.ab3@632> XINCLUDE "translation.include.ab3"
0000FEC6 <prefixtree.include.ab3@634> XINCLUDE "translation.include.ab3"
0000FF0A <prefixtree.include.ab3@635> XINCLUDE "translation.include.ab3"
0000FF76 <prefixtree.include.ab3@636> XINCLUDE "translation.include.ab3"
0000FFA4 <prefixtree.include.ab3@637> XINCLUDE "translation.include.ab3"
0000FFD2 <prefixtree.include.ab3@638> XINCLUDE "translation.include.ab3"
0000FFDA <prefixtree.include.ab3@639> XINCLUDE "translation.include.ab3"
00010008 <prefixtree.include.ab3@640> XINCLUDE "translation.include.ab3"
0001007A <prefixtree.include.ab3@641> XINCLUDE "translation.include.ab3"
00010080 <prefixtree.include.ab3@642> XINCLUDE "translation.include.ab3"
000100AE <prefixtree.include.ab3@643> XINCLUDE "translation.include.ab3"
00010120 <prefixtree.include.ab3@644> XINCLUDE "translation.include.ab3"
0001013E <prefixtree.include.ab3@647> XINCLUDE "translation.include.ab3"
00010162 <prefixtree.include.ab3@648> XINCLUDE "translation.include.ab3"
0001017A <prefixtree.include.ab3@649> XINCLUDE "translation.include.ab3"
00010180 <prefixtree.include.ab3@650> XINCLUDE "translation.include.ab3"
00010186 <prefixtree.include.ab3@653> XINCLUDE "translation.include.ab3"
00010188 <prefixtree.include.ab3@655> XINCLUDE "translation.include.ab3"
00010192 <prefixtree.include.ab3@658> XINCLUDE "translation.include.ab3"
000101BE <prefixtree.include.ab3@659> XINCLUDE "translation.include.ab3"
000101E0 <prefixtree.include.ab3@677> XINCLUDE "translation.include.ab3"
000101E8 <prefixtree.include.ab3@679> XINCLUDE "translation.include.ab3"
000101EE <prefixtree.include.ab3@680> XINCLUDE "translation.include.ab3"
000101FC <prefixtree.include.ab3@681> XINCLUDE "translation.include.ab3"
00010236 <prefixtree.include.ab3@683> XINCLUDE "translation.include.ab3"
0001025C <prefixtree.include.ab3@684> XINCLUDE "translation.include.ab3"
00010274 <prefixtree.include.ab3@685> XINCLUDE "translation.include.ab3"
000102AE <prefixtree.include.ab3@686> XINCLUDE "translation.include.ab3"
000102D8 <prefixtree.include.ab3@687> XINCLUDE "translation.include.ab3"
000102F0 <prefixtree.include.ab3@689> XINCLUDE "translation.include.ab3"
00010308 <prefixtree.include.ab3@690> XINCLUDE "translation.include.ab3"
00010340 <prefixtree.include.ab3@691> XINCLUDE "translation.include.ab3"
00010348 <prefixtree.include.ab3@693> XINCLUDE "translation.include.ab3"
00010382 <prefixtree.include.ab3@695> XINCLUDE "translation.include.ab3"
00010394 <prefixtree.include.ab3@697> XINCLUDE "translation.include.ab3"
000103BA <prefixtree.include.ab3@698> XINCLUDE "translation.include.ab3"
000103D0 <prefixtree.include.ab3@699> XINCLUDE "translation.include.ab3"
000103F6 <prefixtree.include.ab3@700> XINCLUDE "translation.include.ab3"
0001040A <prefixtree.include.ab3@701> XINCLUDE "translation.include.ab3"
00010422 <prefixtree.include.ab3@703> XINCLUDE "translation.include.ab3"
00010434 <prefixtree.include.ab3@705> XINCLUDE "translation.include.ab3"
0001043E <prefixtree.include.ab3@707> XINCLUDE "translation.include.ab3"
00010452 <prefixtree.include.ab3@709> XINCLUDE "translation.include.ab3"
0001046C <prefixtree.include.ab3@726> XINCLUDE "translation.include.ab3"
00010488 <prefixtree.include.ab3@728> XINCLUDE "translation.include.ab3"
0001049A <prefixtree.include.ab3@729> XINCLUDE "translation.include.ab3"
000104B6 <prefixtree.include.ab3@730> XINCLUDE "translation.include.ab3"
000104F2 <prefixtree.include.ab3@731> XINCLUDE "translation.include.ab3"
0001050E <prefixtree.include.ab3@732> XINCLUDE "translation.include.ab3"
0001052E <prefixtree.include.ab3@733> XINCLUDE "translation.include.ab3"
00010538 <prefixtree.include.ab3@734> XINCLUDE "translation.include.ab3"
0001053E <prefixtree.include.ab3@735> XINCLUDE "translation.include.ab3"
00010548 <prefixtree.include.ab3@736> XINCLUDE "translation.include.ab3"
00010550 <prefixtree.include.ab3@738> XINCLUDE "translation.include.ab3"
00010556 <prefixtree.include.ab3@740> XINCLUDE "translation.include.ab3"
00010584 <prefixtree.include.ab3@759> XINCLUDE "translation.include.ab3"
000105AC <prefixtree.include.ab3@760> XINCLUDE "translation.include.ab3"
000105EC <prefixtree.include.ab3@761> XINCLUDE "translation.include.ab3"
00010604 <prefixtree.include.ab3@762> XINCLUDE "translation.include.ab3"
0001064A <prefixtree.include.ab3@763> XINCLUDE "translation.include.ab3"
00010674 <prefixtree.include.ab3@766> XINCLUDE "translation.include.ab3"
000106A2 <prefixtree.include.ab3@767> XINCLUDE "translation.include.ab3"
000106BC <prefixtree.include.ab3@966> XINCLUDE "translation.include.ab3"
000106C2 <prefixtree.include.ab3@967> XINCLUDE "translation.include.ab3"
000106DA <prefixtree.include.ab3@968> XINCLUDE "translation.include.ab3"
000106E4 <prefixtree.include.ab3@969> XINCLUDE "translation.include.ab3"
000106F6 <prefixtree.include.ab3@970> XINCLUDE "translation.include.ab3"
0001072E <prefixtree.include.ab3@971> XINCLUDE "translation.include.ab3"
0001073C <prefixtree.include.ab3@972> XINCLUDE "translation.include.ab3"
00010748 <prefixtree.include.ab3@973> XINCLUDE "translation.include.ab3"
00010764 <prefixtree.include.ab3@974> XINCLUDE "translation.include.ab3"
00010786 <prefixtree.include.ab3@975> XINCLUDE "translation.include.ab3"
000107A8 <prefixtree.include.ab3@976> XINCLUDE "translation.include.ab3"
000107CA <prefixtree.include.ab3@977> XINCLUDE "translation.include.ab3"
000107EC <prefixtree.include.ab3@978> XINCLUDE "translation.include.ab3"
00010808 <prefixtree.include.ab3@979> XINCLUDE "translation.include.ab3"
00010826 <prefixtree.include.ab3@980> XINCLUDE "translation.include.ab3"
0001083A <prefixtree.include.ab3@981> XINCLUDE "translation.include.ab3"
00010840 <prefixtree.include.ab3@983> XINCLUDE "translation.include.ab3"
00010842 <prefixtree.include.ab3@985> XINCLUDE "translation.include.ab3"
00010848 <prefixtree.include.ab3@986> XINCLUDE "translation.include.ab3"
00010852 <prefixtree.include.ab3@988> XINCLUDE "translation.include.ab3"
00010858 <prefixtree.include.ab3@989> XINCLUDE "translation.include.ab3"
00010876 <prefixtree.include.ab3@1007> XINCLUDE "translation.include.ab3"
0001087C <prefixtree.include.ab3@1008> XINCLUDE "translation.include.ab3"
000108A0 <prefixtree.include.ab3@1009> XINCLUDE "translation.include.ab3"
000108BE <prefixtree.include.ab3@1010> XINCLUDE "translation.include.ab3"
000108EC <prefixtree.include.ab3@1011> XINCLUDE "translation.include.ab3"
0001091A <prefixtree.include.ab3@1012> XINCLUDE "translation.include.ab3"
00010948 <prefixtree.include.ab3@1013> XINCLUDE "translation.include.ab3"
00010976 <prefixtree.include.ab3@1014> XINCLUDE "translation.include.ab3"
000109AA <prefixtree.include.ab3@1015> XINCLUDE "translation.include.ab3"
000109BA <prefixtree.include.ab3@1016> XINCLUDE "translation.include.ab3"
000109C4 <prefixtree.include.ab3@1018> XINCLUDE "translation.include.ab3"
000109CA <prefixtree.include.ab3@1019> XINCLUDE "translation.include.ab3"
000109CA <phrasebook.include.ab3@34> XINCLUDE "translation.include.ab3"
00010A14 <phrasebook.include.ab3@58> XINCLUDE "translation.include.ab3"
00010A34 <phrasebook.include.ab3@59> XINCLUDE "translation.include.ab3"
00010A3E <phrasebook.include.ab3@60> XINCLUDE "translation.include.ab3"
00010A52 <phrasebook.include.ab3@61> XINCLUDE "translation.include.ab3"
00010A98 <phrasebook.include.ab3@62> XINCLUDE "translation.include.ab3"
00010ADE <phrasebook.include.ab3@63> XINCLUDE "translation.include.ab3"
00010B24 <phrasebook.include.ab3@64> XINCLUDE "translation.include.ab3"
00010B2E <phrasebook.include.ab3@66> XINCLUDE "translation.include.ab3"
00010B4A <phrasebook.include.ab3@67> XINCLUDE "translation.include.ab3"
00010B74 <phrasebook.include.ab3@70> XINCLUDE "translation.include.ab3"
00010BF2 <phrasebook.include.ab3@71> XINCLUDE "translation.include.ab3"
00010C70 <phrasebook.include.ab3@72> XINCLUDE "translation.include.ab3"
00010CEE <phrasebook.include.ab3@73> XINCLUDE "translation.include.ab3"
00010D6C <phrasebook.include.ab3@74> XINCLUDE "translation.include.ab3"
00010DEA <phrasebook.include.ab3@75> XINCLUDE "translation.include.ab3"
00010E68 <phrasebook.include.ab3@76> XINCLUDE "translation.include.ab3"
00010EE6 <phrasebook.include.ab3@77> XINCLUDE "translation.include.ab3"
00010F64 <phrasebook.include.ab3@78> XINCLUDE "translation.include.ab3"
00010FE2 <phrasebook.include.ab3@79> XINCLUDE "translation.include.ab3"
00011060 <phrasebook.include.ab3@80> XINCLUDE "translation.include.ab3"
000110E4 <phrasebook.include.ab3@81> XINCLUDE "translation.include.ab3"
00011114 <phrasebook.include.ab3@82> XINCLUDE "translation.include.ab3"
00011170 <phrasebook.include.ab3@84> XINCLUDE "translation.include.ab3"
0001119C <phrasebook.include.ab3@85> XINCLUDE "translation.include.ab3"
00011266 <phrasebook.include.ab3@86> XINCLUDE "translation.include.ab3"
00011274 <phrasebook.include.ab3@88> XINCLUDE "translation.include.ab3"
000112B2 <phrasebook.include.ab3@89> XINCLUDE "translation.include.ab3"
00011336 <phrasebook.include.ab3@90> XINCLUDE "translation.include.ab3"
00011360 <phrasebook.include.ab3@91> XINCLUDE "translation.include.ab3"
0001137E <phrasebook.include.ab3@92> XINCLUDE "translation.include.ab3"
00011398 <phrasebook.include.ab3@106> XINCLUDE "translation.include.ab3"
000113A2 <phrasebook.include.ab3@107> XINCLUDE "translation.include.ab3"
000113AE <phrasebook.include.ab3@108> XINCLUDE "translation.include.ab3"
000113BE <phrasebook.include.ab3@109> XINCLUDE "translation.include.ab3"
000113CE <phrasebook.include.ab3@110> XINCLUDE "translation.include.ab3"
000113DE <phrasebook.include.ab3@111> XINCLUDE "translation.include.ab3"
000113EE <phrasebook.include.ab3@112> XINCLUDE "translation.include.ab3"
000113F2 <phrasebook.include.ab3@114> XINCLUDE "translation.include.ab3"
00011430 <phrasebook.include.ab3@131> XINCLUDE "translation.include.ab3"
00011488 <phrasebook.include.ab3@132> XINCLUDE "translation.include.ab3"
000114E4 <phrasebook.include.ab3@133> XINCLUDE "translation.include.ab3"
0001156E <phrasebook.include.ab3@134> XINCLUDE "translation.include.ab3"
000115EC <phrasebook.include.ab3@135> XINCLUDE "translation.include.ab3"
00011606 <phrasebook.include.ab3@137> XINCLUDE "translation.include.ab3"
00011634 <phrasebook.include.ab3@155> XINCLUDE "translation.include.ab3"
00011670 <phrasebook.include.ab3@156> XINCLUDE "translation.include.ab3"
0001173E <phrasebook.include.ab3@158> XINCLUDE "translation.include.ab3"
0001180C <phrasebook.include.ab3@159> XINCLUDE "translation.include.ab3"
00011858 <phrasebook.include.ab3@161> XINCLUDE "translation.include.ab3"
000118D6 <phrasebook.include.ab3@162> XINCLUDE "translation.include.ab3"
00011954 <phrasebook.include.ab3@163> XINCLUDE "translation.include.ab3"
000119B2 <phrasebook.include.ab3@165> XINCLUDE "translation.include.ab3"
00011A48 <phrasebook.include.ab3@166> XINCLUDE "translation.include.ab3"
00011A80 <phrasebook.include.ab3@168> XINCLUDE "translation.include.ab3"
00011ADE <phrasebook.include.ab3@169> XINCLUDE "translation.include.ab3"
00011B66 <phrasebook.include.ab3@170> XINCLUDE "translation.include.ab3"
00011B6E <phrasebook.include.ab3@172> XINCLUDE "translation.include.ab3"
00011BD8 <phrasebook.include.ab3@174> XINCLUDE "translation.include.ab3"
00011C44 <phrasebook.include.ab3@175> XINCLUDE "translation.include.ab3"
00011C82 <phrasebook.include.ab3@176> XINCLUDE "translation.include.ab3"
00011D0A <phrasebook.include.ab3@177> XINCLUDE "translation.include.ab3"
00011D36 <phrasebook.include.ab3@187> XINCLUDE "translation.include.ab3"
00011D92 <phrasebook.include.ab3@188> XINCLUDE "translation.include.ab3"
00011E5A <phrasebook.include.ab3@189> XINCLUDE "translation.include.ab3"
00011EBE <phrasebook.include.ab3@190> XINCLUDE "translation.include.ab3"
00011EC4 <phrasebook.include.ab3@191> XINCLUDE "translation.include.ab3"
00011EF8 <phrasebook.include.ab3@192> XINCLUDE "translation.include.ab3"
00011FC6 <phrasebook.include.ab3@196> XINCLUDE "translation.include.ab3"
00012094 <phrasebook.include.ab3@197> XINCLUDE "translation.include.ab3"
000120BE <phrasebook.include.ab3@199> XINCLUDE "translation.include.ab3"
000120DC <phrasebook.include.ab3@200> XINCLUDE "translation.include.ab3"
0001210A <phrasebook.include.ab3@204> XINCLUDE "translation.include.ab3"
00012146 <phrasebook.include.ab3@205> XINCLUDE "translation.include.ab3"
000121B6 <phrasebook.include.ab3@206> XINCLUDE "translation.include.ab3"
000121BE <phrasebook.include.ab3@207> XINCLUDE "translation.include.ab3"
00012210 <phrasebook.include.ab3@208> XINCLUDE "translation.include.ab3"
00012238 <phrasebook.include.ab3@209> XINCLUDE "translation.include.ab3"
00012250 <phrasebook.include.ab3@210> XINCLUDE "translation.include.ab3"
00012304 <phrasebook.include.ab3@211> XINCLUDE "translation.include.ab3"
00012312 <phrasebook.include.ab3@212> XINCLUDE "translation.include.ab3"
00012368 <phrasebook.include.ab3@213> XINCLUDE "translation.include.ab3"
000123C6 <phrasebook.include.ab3@214> XINCLUDE "translation.include.ab3"
000123CC <phrasebook.include.ab3@215> XINCLUDE "translation.include.ab3"
00012450 <phrasebook.include.ab3@216> XINCLUDE "translation.include.ab3"
000124D4 <phrasebook.include.ab3@217> XINCLUDE "translation.include.ab3"
00012558 <phrasebook.include.ab3@218> XINCLUDE "translation.include.ab3"
000125D6 <phrasebook.include.ab3@219> XINCLUDE "translation.include.ab3"
00012654 <phrasebook.include.ab3@220> XINCLUDE "translation.include.ab3"
000126D2 <phrasebook.include.ab3@221> XINCLUDE "translation.include.ab3"
00012750 <phrasebook.include.ab3@222> XINCLUDE "translation.include.ab3"
000127CE <phrasebook.include.ab3@223> XINCLUDE "translation.include.ab3"
0001284C <phrasebook.include.ab3@224> XINCLUDE "translation.include.ab3"
000128CA <phrasebook.include.ab3@225> XINCLUDE "translation.include.ab3"
000128F4 <phrasebook.include.ab3@226> XINCLUDE "translation.include.ab3"
00012912 <phrasebook.include.ab3@227> XINCLUDE "translation.include.ab3"
00012940 <phrasebook.include.ab3@245> XINCLUDE "translation.include.ab3"
00012984 <phrasebook.include.ab3@246> XINCLUDE "translation.include.ab3"
0001298A <phrasebook.include.ab3@247> XINCLUDE "translation.include.ab3"
000129A4 <phrasebook.include.ab3@248> XINCLUDE "translation.include.ab3"
000129C0 <phrasebook.include.ab3@249> XINCLUDE "translation.include.ab3"
000129F4 <phrasebook.include.ab3@250> XINCLUDE "translation.include.ab3"
00012A18 <phrasebook.include.ab3@251> XINCLUDE "translation.include.ab3"
00012A40 <phrasebook.include.ab3@252> XINCLUDE "translation.include.ab3"
00012AAC <phrasebook.include.ab3@253> XINCLUDE "translation.include.ab3"
00012B0A <phrasebook.include.ab3@256> XINCLUDE "translation.include.ab3"
00012B68 <phrasebook.include.ab3@257> XINCLUDE "translation.include.ab3"
00012BB4 <phrasebook.include.ab3@258> XINCLUDE "translation.include.ab3"
00012C0E <phrasebook.include.ab3@259> XINCLUDE "translation.include.ab3"
00012C14 <phrasebook.include.ab3@260> XINCLUDE "translation.include.ab3"
00012C1A <phrasebook.include.ab3@262> XINCLUDE "translation.include.ab3"
00012C24 <phrasebook.include.ab3@263> XINCLUDE "translation.include.ab3"
00012C2E <phrasebook.include.ab3@264> XINCLUDE "translation.include.ab3"
00012C48 <phrasebook.include.ab3@265> XINCLUDE "translation.include.ab3"
00012C76 <phrasebook.include.ab3@282> XINCLUDE "translation.include.ab3"
00012C7C <phrasebook.include.ab3@283> XINCLUDE "translation.include.ab3"
00012CC0 <phrasebook.include.ab3@284> XINCLUDE "translation.include.ab3"
00012CDA <phrasebook.include.ab3@285> XINCLUDE "translation.include.ab3"
00012CEA <phrasebook.include.ab3@286> XINCLUDE "translation.include.ab3"
00012CF4 <phrasebook.include.ab3@287> XINCLUDE "translation.include.ab3"
00012D00 <phrasebook.include.ab3@288> XINCLUDE "translation.include.ab3"
00012D0A <phrasebook.include.ab3@289> XINCLUDE "translation.include.ab3"
00012D2E <phrasebook.include.ab3@292> XINCLUDE "translation.include.ab3"
00012D76 <phrasebook.include.ab3@293> XINCLUDE "translation.include.ab3"
00012DBE <phrasebook.include.ab3@294> XINCLUDE "translation.include.ab3"
00012E06 <phrasebook.include.ab3@295> XINCLUDE "translation.include.ab3"
00012E1C <phrasebook.include.ab3@296> XINCLUDE "translation.include.ab3"
00012E30 <phrasebook.include.ab3@297> XINCLUDE "translation.include.ab3"
00012E3A <phrasebook.include.ab3@299> XINCLUDE "translation.include.ab3"
00012E44 <phrasebook.include.ab3@300> XINCLUDE "translation.include.ab3"
00012E5E <phrasebook.include.ab3@301> XINCLUDE "translation.include.ab3"
00012E88 <phrasebook.include.ab3@317> XINCLUDE "translation.include.ab3"
00012ECC <phrasebook.include.ab3@318> XINCLUDE "translation.include.ab3"
00012EE6 <phrasebook.include.ab3@319> XINCLUDE "translation.include.ab3"
00012F44 <phrasebook.include.ab3@320> XINCLUDE "translation.include.ab3"
00012F5E <phrasebook.include.ab3@321> XINCLUDE "translation.include.ab3"
00012F76 <phrasebook.include.ab3@323> XINCLUDE "translation.include.ab3"
00012F80 <phrasebook.include.ab3@324> XINCLUDE "translation.include.ab3"
00012F9C <phrasebook.include.ab3@325> XINCLUDE "translation.include.ab3"
00012FAA <phrasebook.include.ab3@326> XINCLUDE "translation.include.ab3"
00012FB6 <phrasebook.include.ab3@327> XINCLUDE "translation.include.ab3"
00013002 <phrasebook.include.ab3@328> XINCLUDE "translation.include.ab3"
00013054 <phrasebook.include.ab3@329> XINCLUDE "translation.include.ab3"
000130A6 <phrasebook.include.ab3@330> XINCLUDE "translation.include.ab3"
000130BA <phrasebook.include.ab3@331> XINCLUDE "translation.include.ab3"
000130CA <phrasebook.include.ab3@332> XINCLUDE "translation.include.ab3"
000130D0 <phrasebook.include.ab3@333> XINCLUDE "translation.include.ab3"
000130D2 <phrasebook.include.ab3@335> XINCLUDE "translation.include.ab3"
000130D8 <phrasebook.include.ab3@336> XINCLUDE "translation.include.ab3"
000130E2 <phrasebook.include.ab3@338> XINCLUDE "translation.include.ab3"
000130EC <phrasebook.include.ab3@339> XINCLUDE "translation.include.ab3"
00013106 <phrasebook.include.ab3@340> XINCLUDE "translation.include.ab3"
00013130 <phrasebook.include.ab3@379> XINCLUDE "translation.include.ab3"
00013146 <phrasebook.include.ab3@380> XINCLUDE "translation.include.ab3"
00013150 <phrasebook.include.ab3@381> XINCLUDE "translation.include.ab3"
000131C8 <phrasebook.include.ab3@382> XINCLUDE "translation.include.ab3"
00013204 <phrasebook.include.ab3@383> XINCLUDE "translation.include.ab3"
00013214 <phrasebook.include.ab3@384> XINCLUDE "translation.include.ab3"
00013234 <phrasebook.include.ab3@385> XINCLUDE "translation.include.ab3"
00013254 <phrasebook.include.ab3@386> XINCLUDE "translation.include.ab3"
00013274 <phrasebook.include.ab3@387> XINCLUDE "translation.include.ab3"
000132AA <phrasebook.include.ab3@388> XINCLUDE "translation.include.ab3"
000132D2 <phrasebook.include.ab3@389> XINCLUDE "translation.include.ab3"
0001330A <phrasebook.include.ab3@390> XINCLUDE "translation.include.ab3"
0001336E <phrasebook.include.ab3@391> XINCLUDE "translation.include.ab3"
0001338E <phrasebook.include.ab3@392> XINCLUDE "translation.include.ab3"
0001340A <phrasebook.include.ab3@393> XINCLUDE "translation.include.ab3"
00013442 <phrasebook.include.ab3@396> XINCLUDE "translation.include.ab3"
000134B8 <phrasebook.include.ab3@397> XINCLUDE "translation.include.ab3"
000134D8 <phrasebook.include.ab3@398> XINCLUDE "translation.include.ab3"
00013554 <phrasebook.include.ab3@399> XINCLUDE "translation.include.ab3"
0001358C <phrasebook.include.ab3@402> XINCLUDE "translation.include.ab3"
00013602 <phrasebook.include.ab3@403> XINCLUDE "translation.include.ab3"
00013622 <phrasebook.include.ab3@404> XINCLUDE "translation.include.ab3"
0001369E <phrasebook.include.ab3@405> XINCLUDE "translation.include.ab3"
000136CA <phrasebook.include.ab3@408> XINCLUDE "translation.include.ab3"
000136D2 <phrasebook.include.ab3@409> XINCLUDE "translation.include.ab3"
00013718 <phrasebook.include.ab3@410> XINCLUDE "translation.include.ab3"
00013738 <phrasebook.include.ab3@411> XINCLUDE "translation.include.ab3"
00013742 <phrasebook.include.ab3@412> XINCLUDE "translation.include.ab3"
0001375A <phrasebook.include.ab3@413> XINCLUDE "translation.include.ab3"
0001376A <phrasebook.include.ab3@414> XINCLUDE "translation.include.ab3"
000137A2 <phrasebook.include.ab3@415> XINCLUDE "translation.include.ab3"
000137D4 <phrasebook.include.ab3@416> XINCLUDE "translation.include.ab3"
000137E6 <phrasebook.include.ab3@419> XINCLUDE "translation.include.ab3"
00013868 <phrasebook.include.ab3@420> XINCLUDE "translation.include.ab3"
00013872 <phrasebook.include.ab3@421> XINCLUDE "translation.include.ab3"
000138A4 <phrasebook.include.ab3@422> XINCLUDE "translation.include.ab3"
000138D6 <phrasebook.include.ab3@423> XINCLUDE "translation.include.ab3"
00013902 <phrasebook.include.ab3@428> XINCLUDE "translation.include.ab3"
0001392E <phrasebook.include.ab3@429> XINCLUDE "translation.include.ab3"
00013950 <phrasebook.include.ab3@430> XINCLUDE "translation.include.ab3"
0001395A <phrasebook.include.ab3@432> XINCLUDE "translation.include.ab3"
00013974 <phrasebook.include.ab3@433> XINCLUDE "translation.include.ab3"
00013974 <translation.include.ab3@31> XINCLUDE "translation.include.ab3"
0001398A <translation.include.ab3@43> XINCLUDE "translation.include.ab3"
000139A6 <translation.include.ab3@44> XINCLUDE "translation.include.ab3"
000139A8 <translation.include.ab3@45> XINCLUDE "translation.include.ab3"
000139D6 <translation.include.ab3@46> XINCLUDE "translation.include.ab3"
000139D6 <AmiBlitz3.ab3@91> XINCLUDE "translation.include.ab3"
000139D6 <ted.include.ab3@1> XINCLUDE "/Shared/ted.include.ab3"
000139F0 <ted.include.ab3@161> XINCLUDE "/Shared/ted.include.ab3"
000139FA <ted.include.ab3@162> XINCLUDE "/Shared/ted.include.ab3"
00013A1C <ted.include.ab3@163> XINCLUDE "/Shared/ted.include.ab3"
00013A34 <ted.include.ab3@164> XINCLUDE "/Shared/ted.include.ab3"
00013A4E <ted.include.ab3@166> XINCLUDE "/Shared/ted.include.ab3"
00013A80 <ted.include.ab3@167> XINCLUDE "/Shared/ted.include.ab3"
00013A8A <ted.include.ab3@168> XINCLUDE "/Shared/ted.include.ab3"
00013A90 <ted.include.ab3@170> XINCLUDE "/Shared/ted.include.ab3"
00013AA2 <ted.include.ab3@171> XINCLUDE "/Shared/ted.include.ab3"
00013B16 <ted.include.ab3@172> XINCLUDE "/Shared/ted.include.ab3"
00013B1C <ted.include.ab3@173> XINCLUDE "/Shared/ted.include.ab3"
00013B56 <ted.include.ab3@174> XINCLUDE "/Shared/ted.include.ab3"
00013B60 <ted.include.ab3@177> XINCLUDE "/Shared/ted.include.ab3"
00013B66 <ted.include.ab3@178> XINCLUDE "/Shared/ted.include.ab3"
00013B7C <ted.include.ab3@180> XINCLUDE "/Shared/ted.include.ab3"
00013B86 <ted.include.ab3@181> XINCLUDE "/Shared/ted.include.ab3"
00013B9E <ted.include.ab3@183> XINCLUDE "/Shared/ted.include.ab3"
00013BA0 <ted.include.ab3@185> XINCLUDE "/Shared/ted.include.ab3"
00013BCE <ted.include.ab3@186> XINCLUDE "/Shared/ted.include.ab3"
00013BE8 <ted.include.ab3@190> XINCLUDE "/Shared/ted.include.ab3"
00013BFE <ted.include.ab3@191> XINCLUDE "/Shared/ted.include.ab3"
00013C32 <ted.include.ab3@192> XINCLUDE "/Shared/ted.include.ab3"
00013C36 <ted.include.ab3@194> XINCLUDE "/Shared/ted.include.ab3"
00013C50 <ted.include.ab3@196> XINCLUDE "/Shared/ted.include.ab3"
00013C66 <ted.include.ab3@197> XINCLUDE "/Shared/ted.include.ab3"
00013C9A <ted.include.ab3@198> XINCLUDE "/Shared/ted.include.ab3"
00013C9E <ted.include.ab3@200> XINCLUDE "/Shared/ted.include.ab3"
00013CB8 <ted.include.ab3@216> XINCLUDE "/Shared/ted.include.ab3"
00013CCE <ted.include.ab3@217> XINCLUDE "/Shared/ted.include.ab3"
00013D02 <ted.include.ab3@218> XINCLUDE "/Shared/ted.include.ab3"
00013D06 <ted.include.ab3@220> XINCLUDE "/Shared/ted.include.ab3"
00013D20 <ted.include.ab3@236> XINCLUDE "/Shared/ted.include.ab3"
00013D36 <ted.include.ab3@237> XINCLUDE "/Shared/ted.include.ab3"
00013D6A <ted.include.ab3@238> XINCLUDE "/Shared/ted.include.ab3"
00013D6E <ted.include.ab3@240> XINCLUDE "/Shared/ted.include.ab3"
00013D88 <ted.include.ab3@242> XINCLUDE "/Shared/ted.include.ab3"
00013D9E <ted.include.ab3@243> XINCLUDE "/Shared/ted.include.ab3"
00013DD2 <ted.include.ab3@244> XINCLUDE "/Shared/ted.include.ab3"
00013DD6 <ted.include.ab3@246> XINCLUDE "/Shared/ted.include.ab3"
00013DD6 <AmiBlitz3.ab3@92> XINCLUDE "/Shared/ted.include.ab3"
00013DD6 <CLIModeSupport.ab3@1> XINCLUDE "CLIModeSupport.ab3"
00013DEC <CLIModeSupport.ab3@4> XINCLUDE "CLIModeSupport.ab3"
00013E02 <CLIModeSupport.ab3@7> XINCLUDE "CLIModeSupport.ab3"
00013E10 <CLIModeSupport.ab3@8> XINCLUDE "CLIModeSupport.ab3"
00013E1E <CLIModeSupport.ab3@9> XINCLUDE "CLIModeSupport.ab3"
00013E28 <CLIModeSupport.ab3@11> XINCLUDE "CLIModeSupport.ab3"
00013E3A <CLIModeSupport.ab3@12> XINCLUDE "CLIModeSupport.ab3"
00013E4C <CLIModeSupport.ab3@13> XINCLUDE "CLIModeSupport.ab3"
00013E52 <CLIModeSupport.ab3@14> XINCLUDE "CLIModeSupport.ab3"
00013E8C <CLIModeSupport.ab3@15> XINCLUDE "CLIModeSupport.ab3"
00013E90 <CLIModeSupport.ab3@18> XINCLUDE "CLIModeSupport.ab3"
00013EA6 <CLIModeSupport.ab3@21> XINCLUDE "CLIModeSupport.ab3"
00013EBC <CLIModeSupport.ab3@23> XINCLUDE "CLIModeSupport.ab3"
00013EC8 <CLIModeSupport.ab3@24> XINCLUDE "CLIModeSupport.ab3"
00013ED4 <CLIModeSupport.ab3@25> XINCLUDE "CLIModeSupport.ab3"
00013EDC <CLIModeSupport.ab3@26> XINCLUDE "CLIModeSupport.ab3"
00013EE4 <CLIModeSupport.ab3@27> XINCLUDE "CLIModeSupport.ab3"
00013EE8 <CLIModeSupport.ab3@28> XINCLUDE "CLIModeSupport.ab3"
00013F12 <CLIModeSupport.ab3@47> XINCLUDE "CLIModeSupport.ab3"
00013F3E <CLIModeSupport.ab3@49> XINCLUDE "CLIModeSupport.ab3"
00013F50 <CLIModeSupport.ab3@50> XINCLUDE "CLIModeSupport.ab3"
00013F68 <CLIModeSupport.ab3@52> XINCLUDE "CLIModeSupport.ab3"
00013F7E <CLIModeSupport.ab3@56> XINCLUDE "CLIModeSupport.ab3"
00013F84 <CLIModeSupport.ab3@58> XINCLUDE "CLIModeSupport.ab3"
00013FBA <CLIModeSupport.ab3@61> XINCLUDE "CLIModeSupport.ab3"
00013FF2 <CLIModeSupport.ab3@62> XINCLUDE "CLIModeSupport.ab3"
0001402A <CLIModeSupport.ab3@63> XINCLUDE "CLIModeSupport.ab3"
00014062 <CLIModeSupport.ab3@64> XINCLUDE "CLIModeSupport.ab3"
0001409A <CLIModeSupport.ab3@65> XINCLUDE "CLIModeSupport.ab3"
000140D2 <CLIModeSupport.ab3@66> XINCLUDE "CLIModeSupport.ab3"
0001410A <CLIModeSupport.ab3@67> XINCLUDE "CLIModeSupport.ab3"
00014142 <CLIModeSupport.ab3@68> XINCLUDE "CLIModeSupport.ab3"
0001417A <CLIModeSupport.ab3@69> XINCLUDE "CLIModeSupport.ab3"
000141B2 <CLIModeSupport.ab3@70> XINCLUDE "CLIModeSupport.ab3"
000141EA <CLIModeSupport.ab3@71> XINCLUDE "CLIModeSupport.ab3"
00014222 <CLIModeSupport.ab3@72> XINCLUDE "CLIModeSupport.ab3"
0001425A <CLIModeSupport.ab3@73> XINCLUDE "CLIModeSupport.ab3"
0001428E <CLIModeSupport.ab3@74> XINCLUDE "CLIModeSupport.ab3"
00014298 <CLIModeSupport.ab3@75> XINCLUDE "CLIModeSupport.ab3"
000142A2 <CLIModeSupport.ab3@77> XINCLUDE "CLIModeSupport.ab3"
000142AC <CLIModeSupport.ab3@78> XINCLUDE "CLIModeSupport.ab3"
000142D6 <CLIModeSupport.ab3@82> XINCLUDE "CLIModeSupport.ab3"
000142E0 <CLIModeSupport.ab3@83> XINCLUDE "CLIModeSupport.ab3"
000142E4 <CLIModeSupport.ab3@84> XINCLUDE "CLIModeSupport.ab3"
00014318 <CLIModeSupport.ab3@85> XINCLUDE "CLIModeSupport.ab3"
00014336 <CLIModeSupport.ab3@88> XINCLUDE "CLIModeSupport.ab3"
00014340 <CLIModeSupport.ab3@89> XINCLUDE "CLIModeSupport.ab3"
0001434C <CLIModeSupport.ab3@90> XINCLUDE "CLIModeSupport.ab3"
00014352 <CLIModeSupport.ab3@91> XINCLUDE "CLIModeSupport.ab3"
0001435E <CLIModeSupport.ab3@92> XINCLUDE "CLIModeSupport.ab3"
00014364 <CLIModeSupport.ab3@93> XINCLUDE "CLIModeSupport.ab3"
00014370 <CLIModeSupport.ab3@94> XINCLUDE "CLIModeSupport.ab3"
00014376 <CLIModeSupport.ab3@95> XINCLUDE "CLIModeSupport.ab3"
0001437C <CLIModeSupport.ab3@98> XINCLUDE "CLIModeSupport.ab3"
000143B6 <CLIModeSupport.ab3@99> XINCLUDE "CLIModeSupport.ab3"
000143BC <CLIModeSupport.ab3@100> XINCLUDE "CLIModeSupport.ab3"
000143D2 <CLIModeSupport.ab3@103> XINCLUDE "CLIModeSupport.ab3"
000143DC <CLIModeSupport.ab3@105> XINCLUDE "CLIModeSupport.ab3"
000143E2 <CLIModeSupport.ab3@106> XINCLUDE "CLIModeSupport.ab3"
000143E8 <CLIModeSupport.ab3@108> XINCLUDE "CLIModeSupport.ab3"
000143E9 <CLIModeSupport.ab3@110> XINCLUDE "CLIModeSupport.ab3"
000143EA <CLIModeSupport.ab3@111> XINCLUDE "CLIModeSupport.ab3"
000143EB <CLIModeSupport.ab3@112> XINCLUDE "CLIModeSupport.ab3"
000143EC <CLIModeSupport.ab3@113> XINCLUDE "CLIModeSupport.ab3"
000143EE <CLIModeSupport.ab3@118> XINCLUDE "CLIModeSupport.ab3"
000143F0 <CLIModeSupport.ab3@119> XINCLUDE "CLIModeSupport.ab3"
000143F2 <CLIModeSupport.ab3@122> XINCLUDE "CLIModeSupport.ab3"
000143F4 <CLIModeSupport.ab3@123> XINCLUDE "CLIModeSupport.ab3"
000143F8 <CLIModeSupport.ab3@124> XINCLUDE "CLIModeSupport.ab3"
000143FA <CLIModeSupport.ab3@126> XINCLUDE "CLIModeSupport.ab3"
000143FC <CLIModeSupport.ab3@127> XINCLUDE "CLIModeSupport.ab3"
00014400 <CLIModeSupport.ab3@128> XINCLUDE "CLIModeSupport.ab3"
00014402 <CLIModeSupport.ab3@129> XINCLUDE "CLIModeSupport.ab3"
00014404 <CLIModeSupport.ab3@156> XINCLUDE "CLIModeSupport.ab3"
00014406 <CLIModeSupport.ab3@157> XINCLUDE "CLIModeSupport.ab3"
00014408 <CLIModeSupport.ab3@158> XINCLUDE "CLIModeSupport.ab3"
0001440A <CLIModeSupport.ab3@159> XINCLUDE "CLIModeSupport.ab3"
0001440C <CLIModeSupport.ab3@163> XINCLUDE "CLIModeSupport.ab3"
00014410 <CLIModeSupport.ab3@164> XINCLUDE "CLIModeSupport.ab3"
00014416 <CLIModeSupport.ab3@172> XINCLUDE "CLIModeSupport.ab3"
0001441A <CLIModeSupport.ab3@173> XINCLUDE "CLIModeSupport.ab3"
0001441C <CLIModeSupport.ab3@176> XINCLUDE "CLIModeSupport.ab3"
00014420 <CLIModeSupport.ab3@177> XINCLUDE "CLIModeSupport.ab3"
00014422 <CLIModeSupport.ab3@178> XINCLUDE "CLIModeSupport.ab3"
00014424 <CLIModeSupport.ab3@179> XINCLUDE "CLIModeSupport.ab3"
00014426 <CLIModeSupport.ab3@180> XINCLUDE "CLIModeSupport.ab3"
00014428 <CLIModeSupport.ab3@181> XINCLUDE "CLIModeSupport.ab3"
0001442A <CLIModeSupport.ab3@184> XINCLUDE "CLIModeSupport.ab3"
0001442C <CLIModeSupport.ab3@186> XINCLUDE "CLIModeSupport.ab3"
00014432 <CLIModeSupport.ab3@187> XINCLUDE "CLIModeSupport.ab3"
00014438 <CLIModeSupport.ab3@192> XINCLUDE "CLIModeSupport.ab3"
0001443A <CLIModeSupport.ab3@196> XINCLUDE "CLIModeSupport.ab3"
0001443E <CLIModeSupport.ab3@198> XINCLUDE "CLIModeSupport.ab3"
00014442 <CLIModeSupport.ab3@199> XINCLUDE "CLIModeSupport.ab3"
00014448 <CLIModeSupport.ab3@200> XINCLUDE "CLIModeSupport.ab3"
0001444E <CLIModeSupport.ab3@203> XINCLUDE "CLIModeSupport.ab3"
00014452 <CLIModeSupport.ab3@204> XINCLUDE "CLIModeSupport.ab3"
00014456 <CLIModeSupport.ab3@206> XINCLUDE "CLIModeSupport.ab3"
0001445C <CLIModeSupport.ab3@209> XINCLUDE "CLIModeSupport.ab3"
00014460 <CLIModeSupport.ab3@210> XINCLUDE "CLIModeSupport.ab3"
00014466 <CLIModeSupport.ab3@213> XINCLUDE "CLIModeSupport.ab3"
0001446C <CLIModeSupport.ab3@216> XINCLUDE "CLIModeSupport.ab3"
00014470 <CLIModeSupport.ab3@217> XINCLUDE "CLIModeSupport.ab3"
00014476 <CLIModeSupport.ab3@220> XINCLUDE "CLIModeSupport.ab3"
0001447A <CLIModeSupport.ab3@221> XINCLUDE "CLIModeSupport.ab3"
00014480 <CLIModeSupport.ab3@222> XINCLUDE "CLIModeSupport.ab3"
00014484 <CLIModeSupport.ab3@223> XINCLUDE "CLIModeSupport.ab3"
00014488 <CLIModeSupport.ab3@228> XINCLUDE "CLIModeSupport.ab3"
0001448C <CLIModeSupport.ab3@229> XINCLUDE "CLIModeSupport.ab3"
00014490 <CLIModeSupport.ab3@230> XINCLUDE "CLIModeSupport.ab3"
00014494 <CLIModeSupport.ab3@231> XINCLUDE "CLIModeSupport.ab3"
00014498 <CLIModeSupport.ab3@232> XINCLUDE "CLIModeSupport.ab3"
0001449C <CLIModeSupport.ab3@236> XINCLUDE "CLIModeSupport.ab3"
000144A0 <CLIModeSupport.ab3@237> XINCLUDE "CLIModeSupport.ab3"
000144A4 <CLIModeSupport.ab3@238> XINCLUDE "CLIModeSupport.ab3"
000144A8 <CLIModeSupport.ab3@239> XINCLUDE "CLIModeSupport.ab3"
000144AC <CLIModeSupport.ab3@240> XINCLUDE "CLIModeSupport.ab3"
000144B0 <CLIModeSupport.ab3@241> XINCLUDE "CLIModeSupport.ab3"
000144B6 <CLIModeSupport.ab3@242> XINCLUDE "CLIModeSupport.ab3"
000144BA <CLIModeSupport.ab3@243> XINCLUDE "CLIModeSupport.ab3"
000144C0 <CLIModeSupport.ab3@246> XINCLUDE "CLIModeSupport.ab3"
000144C2 <CLIModeSupport.ab3@247> XINCLUDE "CLIModeSupport.ab3"
000144C6 <CLIModeSupport.ab3@248> XINCLUDE "CLIModeSupport.ab3"
000144CA <CLIModeSupport.ab3@249> XINCLUDE "CLIModeSupport.ab3"
000144CE <CLIModeSupport.ab3@253> XINCLUDE "CLIModeSupport.ab3"
000144D2 <CLIModeSupport.ab3@254> XINCLUDE "CLIModeSupport.ab3"
000144D6 <CLIModeSupport.ab3@255> XINCLUDE "CLIModeSupport.ab3"
000144DA <CLIModeSupport.ab3@256> XINCLUDE "CLIModeSupport.ab3"
000144DE <CLIModeSupport.ab3@258> XINCLUDE "CLIModeSupport.ab3"
000144E2 <CLIModeSupport.ab3@259> XINCLUDE "CLIModeSupport.ab3"
000144E8 <CLIModeSupport.ab3@262> XINCLUDE "CLIModeSupport.ab3"
000144EA <CLIModeSupport.ab3@263> XINCLUDE "CLIModeSupport.ab3"
000144EE <CLIModeSupport.ab3@264> XINCLUDE "CLIModeSupport.ab3"
000144F2 <CLIModeSupport.ab3@267> XINCLUDE "CLIModeSupport.ab3"
000144F6 <CLIModeSupport.ab3@268> XINCLUDE "CLIModeSupport.ab3"
000144FA <CLIModeSupport.ab3@269> XINCLUDE "CLIModeSupport.ab3"
000144FE <CLIModeSupport.ab3@272> XINCLUDE "CLIModeSupport.ab3"
00014502 <CLIModeSupport.ab3@273> XINCLUDE "CLIModeSupport.ab3"
00014506 <CLIModeSupport.ab3@275> XINCLUDE "CLIModeSupport.ab3"
0001450A <CLIModeSupport.ab3@276> XINCLUDE "CLIModeSupport.ab3"
0001450E <CLIModeSupport.ab3@277> XINCLUDE "CLIModeSupport.ab3"
00014512 <CLIModeSupport.ab3@278> XINCLUDE "CLIModeSupport.ab3"
00014516 <CLIModeSupport.ab3@279> XINCLUDE "CLIModeSupport.ab3"
0001451A <CLIModeSupport.ab3@280> XINCLUDE "CLIModeSupport.ab3"
0001451E <CLIModeSupport.ab3@281> XINCLUDE "CLIModeSupport.ab3"
00014522 <CLIModeSupport.ab3@282> XINCLUDE "CLIModeSupport.ab3"
00014526 <CLIModeSupport.ab3@283> XINCLUDE "CLIModeSupport.ab3"
0001452A <CLIModeSupport.ab3@284> XINCLUDE "CLIModeSupport.ab3"
0001452E <CLIModeSupport.ab3@285> XINCLUDE "CLIModeSupport.ab3"
00014532 <CLIModeSupport.ab3@286> XINCLUDE "CLIModeSupport.ab3"
00014538 <CLIModeSupport.ab3@289> XINCLUDE "CLIModeSupport.ab3"
0001453A <CLIModeSupport.ab3@290> XINCLUDE "CLIModeSupport.ab3"
0001453E <CLIModeSupport.ab3@292> XINCLUDE "CLIModeSupport.ab3"
00014542 <CLIModeSupport.ab3@293> XINCLUDE "CLIModeSupport.ab3"
00014548 <CLIModeSupport.ab3@294> XINCLUDE "CLIModeSupport.ab3"
0001454E <CLIModeSupport.ab3@297> XINCLUDE "CLIModeSupport.ab3"
00014552 <CLIModeSupport.ab3@298> XINCLUDE "CLIModeSupport.ab3"
00014556 <CLIModeSupport.ab3@300> XINCLUDE "CLIModeSupport.ab3"
0001455C <CLIModeSupport.ab3@303> XINCLUDE "CLIModeSupport.ab3"
00014560 <CLIModeSupport.ab3@304> XINCLUDE "CLIModeSupport.ab3"
00014566 <CLIModeSupport.ab3@305> XINCLUDE "CLIModeSupport.ab3"
0001456A <CLIModeSupport.ab3@306> XINCLUDE "CLIModeSupport.ab3"
0001456C <CLIModeSupport.ab3@310> XINCLUDE "CLIModeSupport.ab3"
00014572 <CLIModeSupport.ab3@311> XINCLUDE "CLIModeSupport.ab3"
00014574 <CLIModeSupport.ab3@314> XINCLUDE "CLIModeSupport.ab3"
00014576 <CLIModeSupport.ab3@315> XINCLUDE "CLIModeSupport.ab3"
00014578 <CLIModeSupport.ab3@316> XINCLUDE "CLIModeSupport.ab3"
0001457A <CLIModeSupport.ab3@319> XINCLUDE "CLIModeSupport.ab3"
0001457E <CLIModeSupport.ab3@320> XINCLUDE "CLIModeSupport.ab3"
00014580 <CLIModeSupport.ab3@321> XINCLUDE "CLIModeSupport.ab3"
00014584 <CLIModeSupport.ab3@322> XINCLUDE "CLIModeSupport.ab3"
00014588 <CLIModeSupport.ab3@323> XINCLUDE "CLIModeSupport.ab3"
0001458C <CLIModeSupport.ab3@324> XINCLUDE "CLIModeSupport.ab3"
0001458E <CLIModeSupport.ab3@325> XINCLUDE "CLIModeSupport.ab3"
00014592 <CLIModeSupport.ab3@326> XINCLUDE "CLIModeSupport.ab3"
00014594 <CLIModeSupport.ab3@330> XINCLUDE "CLIModeSupport.ab3"
00014596 <CLIModeSupport.ab3@331> XINCLUDE "CLIModeSupport.ab3"
0001459A <CLIModeSupport.ab3@332> XINCLUDE "CLIModeSupport.ab3"
0001459C <CLIModeSupport.ab3@333> XINCLUDE "CLIModeSupport.ab3"
000145A0 <CLIModeSupport.ab3@334> XINCLUDE "CLIModeSupport.ab3"
000145A2 <CLIModeSupport.ab3@338> XINCLUDE "CLIModeSupport.ab3"
000145A6 <CLIModeSupport.ab3@339> XINCLUDE "CLIModeSupport.ab3"
000145AC <CLIModeSupport.ab3@342> XINCLUDE "CLIModeSupport.ab3"
000145AE <CLIModeSupport.ab3@343> XINCLUDE "CLIModeSupport.ab3"
000145B2 <CLIModeSupport.ab3@345> XINCLUDE "CLIModeSupport.ab3"
000145B6 <CLIModeSupport.ab3@346> XINCLUDE "CLIModeSupport.ab3"
000145BC <CLIModeSupport.ab3@347> XINCLUDE "CLIModeSupport.ab3"
000145C2 <CLIModeSupport.ab3@350> XINCLUDE "CLIModeSupport.ab3"
000145C6 <CLIModeSupport.ab3@351> XINCLUDE "CLIModeSupport.ab3"
000145CA <CLIModeSupport.ab3@353> XINCLUDE "CLIModeSupport.ab3"
000145D0 <CLIModeSupport.ab3@356> XINCLUDE "CLIModeSupport.ab3"
000145D4 <CLIModeSupport.ab3@357> XINCLUDE "CLIModeSupport.ab3"
000145DA <CLIModeSupport.ab3@358> XINCLUDE "CLIModeSupport.ab3"
000145DE <CLIModeSupport.ab3@359> XINCLUDE "CLIModeSupport.ab3"
000145E2 <CLIModeSupport.ab3@360> XINCLUDE "CLIModeSupport.ab3"
000145E4 <CLIModeSupport.ab3@363> XINCLUDE "CLIModeSupport.ab3"
000145E8 <CLIModeSupport.ab3@364> XINCLUDE "CLIModeSupport.ab3"
000145EE <CLIModeSupport.ab3@365> XINCLUDE "CLIModeSupport.ab3"
000145F2 <CLIModeSupport.ab3@366> XINCLUDE "CLIModeSupport.ab3"
000145F6 <CLIModeSupport.ab3@368> XINCLUDE "CLIModeSupport.ab3"
000145FA <CLIModeSupport.ab3@369> XINCLUDE "CLIModeSupport.ab3"
000145FE <CLIModeSupport.ab3@370> XINCLUDE "CLIModeSupport.ab3"
00014602 <CLIModeSupport.ab3@371> XINCLUDE "CLIModeSupport.ab3"
00014606 <CLIModeSupport.ab3@372> XINCLUDE "CLIModeSupport.ab3"
0001460A <CLIModeSupport.ab3@376> XINCLUDE "CLIModeSupport.ab3"
0001460E <CLIModeSupport.ab3@377> XINCLUDE "CLIModeSupport.ab3"
00014610 <CLIModeSupport.ab3@378> XINCLUDE "CLIModeSupport.ab3"
00014612 <CLIModeSupport.ab3@379> XINCLUDE "CLIModeSupport.ab3"
00014614 <CLIModeSupport.ab3@382> XINCLUDE "CLIModeSupport.ab3"
00014618 <CLIModeSupport.ab3@383> XINCLUDE "CLIModeSupport.ab3"
0001461A <CLIModeSupport.ab3@384> XINCLUDE "CLIModeSupport.ab3"
0001461C <CLIModeSupport.ab3@385> XINCLUDE "CLIModeSupport.ab3"
0001461E <CLIModeSupport.ab3@386> XINCLUDE "CLIModeSupport.ab3"
00014620 <CLIModeSupport.ab3@387> XINCLUDE "CLIModeSupport.ab3"
00014622 <CLIModeSupport.ab3@388> XINCLUDE "CLIModeSupport.ab3"
00014626 <CLIModeSupport.ab3@389> XINCLUDE "CLIModeSupport.ab3"
00014628 <CLIModeSupport.ab3@390> XINCLUDE "CLIModeSupport.ab3"
0001462C <CLIModeSupport.ab3@391> XINCLUDE "CLIModeSupport.ab3"
0001462E <CLIModeSupport.ab3@395> XINCLUDE "CLIModeSupport.ab3"
00014630 <CLIModeSupport.ab3@396> XINCLUDE "CLIModeSupport.ab3"
00014632 <CLIModeSupport.ab3@397> XINCLUDE "CLIModeSupport.ab3"
00014636 <CLIModeSupport.ab3@398> XINCLUDE "CLIModeSupport.ab3"
00014638 <CLIModeSupport.ab3@399> XINCLUDE "CLIModeSupport.ab3"
0001463A <CLIModeSupport.ab3@403> XINCLUDE "CLIModeSupport.ab3"
0001463C <CLIModeSupport.ab3@406> XINCLUDE "CLIModeSupport.ab3"
00014640 <CLIModeSupport.ab3@407> XINCLUDE "CLIModeSupport.ab3"
00014644 <CLIModeSupport.ab3@412> XINCLUDE "CLIModeSupport.ab3"
00014648 <CLIModeSupport.ab3@413> XINCLUDE "CLIModeSupport.ab3"
0001464C <CLIModeSupport.ab3@414> XINCLUDE "CLIModeSupport.ab3"
00014650 <CLIModeSupport.ab3@415> XINCLUDE "CLIModeSupport.ab3"
00014654 <CLIModeSupport.ab3@416> XINCLUDE "CLIModeSupport.ab3"
00014658 <CLIModeSupport.ab3@417> XINCLUDE "CLIModeSupport.ab3"
0001465C <CLIModeSupport.ab3@418> XINCLUDE "CLIModeSupport.ab3"
00014660 <CLIModeSupport.ab3@419> XINCLUDE "CLIModeSupport.ab3"
00014662 <CLIModeSupport.ab3@422> XINCLUDE "CLIModeSupport.ab3"
00014664 <CLIModeSupport.ab3@425> XINCLUDE "CLIModeSupport.ab3"
00014666 <CLIModeSupport.ab3@429> XINCLUDE "CLIModeSupport.ab3"
0001466A <CLIModeSupport.ab3@430> XINCLUDE "CLIModeSupport.ab3"
0001466C <CLIModeSupport.ab3@431> XINCLUDE "CLIModeSupport.ab3"
0001466E <CLIModeSupport.ab3@432> XINCLUDE "CLIModeSupport.ab3"
00014684 <CLIModeSupport.ab3@437> XINCLUDE "CLIModeSupport.ab3"
0001468A <CLIModeSupport.ab3@438> XINCLUDE "CLIModeSupport.ab3"
000146C8 <CLIModeSupport.ab3@440> XINCLUDE "CLIModeSupport.ab3"
000146CC <CLIModeSupport.ab3@441> XINCLUDE "CLIModeSupport.ab3"
000146D6 <CLIModeSupport.ab3@442> XINCLUDE "CLIModeSupport.ab3"
000146D8 <CLIModeSupport.ab3@443> XINCLUDE "CLIModeSupport.ab3"
0001470C <CLIModeSupport.ab3@444> XINCLUDE "CLIModeSupport.ab3"
0001471C <CLIModeSupport.ab3@445> XINCLUDE "CLIModeSupport.ab3"
0001471E <CLIModeSupport.ab3@448> XINCLUDE "CLIModeSupport.ab3"
00014756 <CLIModeSupport.ab3@449> XINCLUDE "CLIModeSupport.ab3"
0001478E <CLIModeSupport.ab3@450> XINCLUDE "CLIModeSupport.ab3"
000147C6 <CLIModeSupport.ab3@451> XINCLUDE "CLIModeSupport.ab3"
000147D0 <CLIModeSupport.ab3@453> XINCLUDE "CLIModeSupport.ab3"
000147D6 <CLIModeSupport.ab3@454> XINCLUDE "CLIModeSupport.ab3"
000147EC <CLIModeSupport.ab3@458> XINCLUDE "CLIModeSupport.ab3"
0001482A <CLIModeSupport.ab3@459> XINCLUDE "CLIModeSupport.ab3"
0001482E <CLIModeSupport.ab3@460> XINCLUDE "CLIModeSupport.ab3"
00014836 <CLIModeSupport.ab3@461> XINCLUDE "CLIModeSupport.ab3"
00014874 <CLIModeSupport.ab3@462> XINCLUDE "CLIModeSupport.ab3"
00014876 <CLIModeSupport.ab3@463> XINCLUDE "CLIModeSupport.ab3"
0001487A <CLIModeSupport.ab3@464> XINCLUDE "CLIModeSupport.ab3"
000148B8 <CLIModeSupport.ab3@466> XINCLUDE "CLIModeSupport.ab3"
000148BC <CLIModeSupport.ab3@467> XINCLUDE "CLIModeSupport.ab3"
000148FA <CLIModeSupport.ab3@469> XINCLUDE "CLIModeSupport.ab3"
000148FE <CLIModeSupport.ab3@470> XINCLUDE "CLIModeSupport.ab3"
00014928 <CLIModeSupport.ab3@472> XINCLUDE "CLIModeSupport.ab3"
00014932 <CLIModeSupport.ab3@473> XINCLUDE "CLIModeSupport.ab3"
00014946 <CLIModeSupport.ab3@474> XINCLUDE "CLIModeSupport.ab3"
0001496C <CLIModeSupport.ab3@475> XINCLUDE "CLIModeSupport.ab3"
00014972 <CLIModeSupport.ab3@476> XINCLUDE "CLIModeSupport.ab3"
00014980 <CLIModeSupport.ab3@477> XINCLUDE "CLIModeSupport.ab3"
00014986 <CLIModeSupport.ab3@478> XINCLUDE "CLIModeSupport.ab3"
000149BE <CLIModeSupport.ab3@480> XINCLUDE "CLIModeSupport.ab3"
000149C2 <CLIModeSupport.ab3@483> XINCLUDE "CLIModeSupport.ab3"
000149EC <CLIModeSupport.ab3@486> XINCLUDE "CLIModeSupport.ab3"
000149F2 <CLIModeSupport.ab3@487> XINCLUDE "CLIModeSupport.ab3"
00014A12 <CLIModeSupport.ab3@488> XINCLUDE "CLIModeSupport.ab3"
00014A1C <CLIModeSupport.ab3@489> XINCLUDE "CLIModeSupport.ab3"
00014A20 <CLIModeSupport.ab3@490> XINCLUDE "CLIModeSupport.ab3"
00014A22 <CLIModeSupport.ab3@491> XINCLUDE "CLIModeSupport.ab3"
00014A40 <CLIModeSupport.ab3@492> XINCLUDE "CLIModeSupport.ab3"
00014A42 <CLIModeSupport.ab3@493> XINCLUDE "CLIModeSupport.ab3"
00014A48 <CLIModeSupport.ab3@494> XINCLUDE "CLIModeSupport.ab3"
00014A4E <CLIModeSupport.ab3@495> XINCLUDE "CLIModeSupport.ab3"
00014A78 <CLIModeSupport.ab3@497> XINCLUDE "CLIModeSupport.ab3"
00014A7A <CLIModeSupport.ab3@498> XINCLUDE "CLIModeSupport.ab3"
00014AA8 <CLIModeSupport.ab3@499> XINCLUDE "CLIModeSupport.ab3"
00014AAC <CLIModeSupport.ab3@500> XINCLUDE "CLIModeSupport.ab3"
00014ADA <CLIModeSupport.ab3@501> XINCLUDE "CLIModeSupport.ab3"
00014ADE <CLIModeSupport.ab3@502> XINCLUDE "CLIModeSupport.ab3"
00014B04 <CLIModeSupport.ab3@504> XINCLUDE "CLIModeSupport.ab3"
00014B14 <CLIModeSupport.ab3@505> XINCLUDE "CLIModeSupport.ab3"
00014B1A <CLIModeSupport.ab3@506> XINCLUDE "CLIModeSupport.ab3"
00014B20 <CLIModeSupport.ab3@507> XINCLUDE "CLIModeSupport.ab3"
00014B5A <CLIModeSupport.ab3@508> XINCLUDE "CLIModeSupport.ab3"
00014B64 <CLIModeSupport.ab3@510> XINCLUDE "CLIModeSupport.ab3"
00014B7E <CLIModeSupport.ab3@511> XINCLUDE "CLIModeSupport.ab3"
00014B9C <CLIModeSupport.ab3@523> XINCLUDE "CLIModeSupport.ab3"
00014BA4 <CLIModeSupport.ab3@524> XINCLUDE "CLIModeSupport.ab3"
00014BAA <CLIModeSupport.ab3@525> XINCLUDE "CLIModeSupport.ab3"
00014BB0 <CLIModeSupport.ab3@526> XINCLUDE "CLIModeSupport.ab3"
00014BD2 <CLIModeSupport.ab3@527> XINCLUDE "CLIModeSupport.ab3"
00014BEA <CLIModeSupport.ab3@529> XINCLUDE "CLIModeSupport.ab3"
00014C10 <CLIModeSupport.ab3@530> XINCLUDE "CLIModeSupport.ab3"
00014C3A <CLIModeSupport.ab3@531> XINCLUDE "CLIModeSupport.ab3"
00014C48 <CLIModeSupport.ab3@532> XINCLUDE "CLIModeSupport.ab3"
00014C4E <CLIModeSupport.ab3@533> XINCLUDE "CLIModeSupport.ab3"
00014C62 <CLIModeSupport.ab3@534> XINCLUDE "CLIModeSupport.ab3"
00014C7A <CLIModeSupport.ab3@536> XINCLUDE "CLIModeSupport.ab3"
00014C88 <CLIModeSupport.ab3@537> XINCLUDE "CLIModeSupport.ab3"
00014C9C <CLIModeSupport.ab3@538> XINCLUDE "CLIModeSupport.ab3"
00014CD2 <CLIModeSupport.ab3@539> XINCLUDE "CLIModeSupport.ab3"
00014CE0 <CLIModeSupport.ab3@540> XINCLUDE "CLIModeSupport.ab3"
00014D10 <CLIModeSupport.ab3@541> XINCLUDE "CLIModeSupport.ab3"
00014D1E <CLIModeSupport.ab3@542> XINCLUDE "CLIModeSupport.ab3"
00014D24 <CLIModeSupport.ab3@543> XINCLUDE "CLIModeSupport.ab3"
00014D32 <CLIModeSupport.ab3@544> XINCLUDE "CLIModeSupport.ab3"
00014D38 <CLIModeSupport.ab3@545> XINCLUDE "CLIModeSupport.ab3"
00014D3E <CLIModeSupport.ab3@547> XINCLUDE "CLIModeSupport.ab3"
00014D4C <CLIModeSupport.ab3@548> XINCLUDE "CLIModeSupport.ab3"
00014D4E <CLIModeSupport.ab3@549> XINCLUDE "CLIModeSupport.ab3"
00014D54 <CLIModeSupport.ab3@551> XINCLUDE "CLIModeSupport.ab3"
00014D6A <CLIModeSupport.ab3@553> XINCLUDE "CLIModeSupport.ab3"
00014D74 <CLIModeSupport.ab3@554> XINCLUDE "CLIModeSupport.ab3"
00014D7A <CLIModeSupport.ab3@555> XINCLUDE "CLIModeSupport.ab3"
00014DA4 <CLIModeSupport.ab3@559> XINCLUDE "CLIModeSupport.ab3"
00014DE2 <CLIModeSupport.ab3@562> XINCLUDE "CLIModeSupport.ab3"
00014DE6 <CLIModeSupport.ab3@563> XINCLUDE "CLIModeSupport.ab3"
00014E24 <CLIModeSupport.ab3@564> XINCLUDE "CLIModeSupport.ab3"
00014E28 <CLIModeSupport.ab3@565> XINCLUDE "CLIModeSupport.ab3"
00014E66 <CLIModeSupport.ab3@566> XINCLUDE "CLIModeSupport.ab3"
00014E6A <CLIModeSupport.ab3@567> XINCLUDE "CLIModeSupport.ab3"
00014E72 <CLIModeSupport.ab3@569> XINCLUDE "CLIModeSupport.ab3"
00014E7A <CLIModeSupport.ab3@570> XINCLUDE "CLIModeSupport.ab3"
00014EBE <CLIModeSupport.ab3@572> XINCLUDE "CLIModeSupport.ab3"
00014ED0 <CLIModeSupport.ab3@573> XINCLUDE "CLIModeSupport.ab3"
00014EDE <CLIModeSupport.ab3@574> XINCLUDE "CLIModeSupport.ab3"
00014F12 <CLIModeSupport.ab3@575> XINCLUDE "CLIModeSupport.ab3"
00014F36 <CLIModeSupport.ab3@577> XINCLUDE "CLIModeSupport.ab3"
00014F40 <CLIModeSupport.ab3@578> XINCLUDE "CLIModeSupport.ab3"
00014F5A <CLIModeSupport.ab3@579> XINCLUDE "CLIModeSupport.ab3"
00014F6E <CLIModeSupport.ab3@580> XINCLUDE "CLIModeSupport.ab3"
00014FC6 <CLIModeSupport.ab3@581> XINCLUDE "CLIModeSupport.ab3"
00015066 <CLIModeSupport.ab3@582> XINCLUDE "CLIModeSupport.ab3"
0001506E <CLIModeSupport.ab3@583> XINCLUDE "CLIModeSupport.ab3"
000150A6 <CLIModeSupport.ab3@584> XINCLUDE "CLIModeSupport.ab3"
000150AC <CLIModeSupport.ab3@585> XINCLUDE "CLIModeSupport.ab3"
000150BC <CLIModeSupport.ab3@586> XINCLUDE "CLIModeSupport.ab3"
000150E4 <CLIModeSupport.ab3@589> XINCLUDE "CLIModeSupport.ab3"
0001510C <CLIModeSupport.ab3@590> XINCLUDE "CLIModeSupport.ab3"
00015114 <CLIModeSupport.ab3@591> XINCLUDE "CLIModeSupport.ab3"
0001511A <CLIModeSupport.ab3@592> XINCLUDE "CLIModeSupport.ab3"
00015122 <CLIModeSupport.ab3@593> XINCLUDE "CLIModeSupport.ab3"
0001512A <CLIModeSupport.ab3@594> XINCLUDE "CLIModeSupport.ab3"
00015152 <CLIModeSupport.ab3@595> XINCLUDE "CLIModeSupport.ab3"
0001515A <CLIModeSupport.ab3@596> XINCLUDE "CLIModeSupport.ab3"
00015162 <CLIModeSupport.ab3@597> XINCLUDE "CLIModeSupport.ab3"
00015168 <CLIModeSupport.ab3@598> XINCLUDE "CLIModeSupport.ab3"
0001516E <CLIModeSupport.ab3@599> XINCLUDE "CLIModeSupport.ab3"
00015174 <CLIModeSupport.ab3@600> XINCLUDE "CLIModeSupport.ab3"
0001517A <CLIModeSupport.ab3@601> XINCLUDE "CLIModeSupport.ab3"
00015180 <CLIModeSupport.ab3@602> XINCLUDE "CLIModeSupport.ab3"
00015186 <CLIModeSupport.ab3@603> XINCLUDE "CLIModeSupport.ab3"
0001518C <CLIModeSupport.ab3@604> XINCLUDE "CLIModeSupport.ab3"
00015192 <CLIModeSupport.ab3@605> XINCLUDE "CLIModeSupport.ab3"
0001519A <CLIModeSupport.ab3@606> XINCLUDE "CLIModeSupport.ab3"
000151A2 <CLIModeSupport.ab3@607> XINCLUDE "CLIModeSupport.ab3"
000151CA <CLIModeSupport.ab3@608> XINCLUDE "CLIModeSupport.ab3"
000151D0 <CLIModeSupport.ab3@609> XINCLUDE "CLIModeSupport.ab3"
000151D6 <CLIModeSupport.ab3@610> XINCLUDE "CLIModeSupport.ab3"
000151DE <CLIModeSupport.ab3@611> XINCLUDE "CLIModeSupport.ab3"
000151FE <CLIModeSupport.ab3@615> XINCLUDE "CLIModeSupport.ab3"
0001520E <CLIModeSupport.ab3@617> XINCLUDE "CLIModeSupport.ab3"
0001521E <CLIModeSupport.ab3@618> XINCLUDE "CLIModeSupport.ab3"
0001522E <CLIModeSupport.ab3@620> XINCLUDE "CLIModeSupport.ab3"
0001523E <CLIModeSupport.ab3@621> XINCLUDE "CLIModeSupport.ab3"
0001524E <CLIModeSupport.ab3@622> XINCLUDE "CLIModeSupport.ab3"
0001525E <CLIModeSupport.ab3@623> XINCLUDE "CLIModeSupport.ab3"
0001526E <CLIModeSupport.ab3@624> XINCLUDE "CLIModeSupport.ab3"
0001527E <CLIModeSupport.ab3@625> XINCLUDE "CLIModeSupport.ab3"
0001528E <CLIModeSupport.ab3@626> XINCLUDE "CLIModeSupport.ab3"
0001529E <CLIModeSupport.ab3@627> XINCLUDE "CLIModeSupport.ab3"
000152AE <CLIModeSupport.ab3@628> XINCLUDE "CLIModeSupport.ab3"
000152BE <CLIModeSupport.ab3@629> XINCLUDE "CLIModeSupport.ab3"
000152CE <CLIModeSupport.ab3@630> XINCLUDE "CLIModeSupport.ab3"
000152DE <CLIModeSupport.ab3@631> XINCLUDE "CLIModeSupport.ab3"
000152EE <CLIModeSupport.ab3@632> XINCLUDE "CLIModeSupport.ab3"
000152FE <CLIModeSupport.ab3@633> XINCLUDE "CLIModeSupport.ab3"
00015312 <CLIModeSupport.ab3@635> XINCLUDE "CLIModeSupport.ab3"
00015324 <CLIModeSupport.ab3@636> XINCLUDE "CLIModeSupport.ab3"
00015336 <CLIModeSupport.ab3@637> XINCLUDE "CLIModeSupport.ab3"
00015348 <CLIModeSupport.ab3@638> XINCLUDE "CLIModeSupport.ab3"
0001535A <CLIModeSupport.ab3@639> XINCLUDE "CLIModeSupport.ab3"
00015360 <CLIModeSupport.ab3@640> XINCLUDE "CLIModeSupport.ab3"
00015372 <CLIModeSupport.ab3@641> XINCLUDE "CLIModeSupport.ab3"
00015384 <CLIModeSupport.ab3@642> XINCLUDE "CLIModeSupport.ab3"
00015396 <CLIModeSupport.ab3@643> XINCLUDE "CLIModeSupport.ab3"
000153A8 <CLIModeSupport.ab3@644> XINCLUDE "CLIModeSupport.ab3"
000153BA <CLIModeSupport.ab3@646> XINCLUDE "CLIModeSupport.ab3"
000153CC <CLIModeSupport.ab3@647> XINCLUDE "CLIModeSupport.ab3"
000153EA <CLIModeSupport.ab3@649> XINCLUDE "CLIModeSupport.ab3"
000153F0 <CLIModeSupport.ab3@650> XINCLUDE "CLIModeSupport.ab3"
000153F6 <CLIModeSupport.ab3@652> XINCLUDE "CLIModeSupport.ab3"
00015420 <CLIModeSupport.ab3@653> XINCLUDE "CLIModeSupport.ab3"
00015432 <CLIModeSupport.ab3@654> XINCLUDE "CLIModeSupport.ab3"
00015466 <CLIModeSupport.ab3@657> XINCLUDE "CLIModeSupport.ab3"
0001547E <CLIModeSupport.ab3@658> XINCLUDE "CLIModeSupport.ab3"
000154CA <CLIModeSupport.ab3@659> XINCLUDE "CLIModeSupport.ab3"
000154DC <CLIModeSupport.ab3@660> XINCLUDE "CLIModeSupport.ab3"
00015532 <CLIModeSupport.ab3@661> XINCLUDE "CLIModeSupport.ab3"
000155A4 <CLIModeSupport.ab3@662> XINCLUDE "CLIModeSupport.ab3"
000155AA <CLIModeSupport.ab3@663> XINCLUDE "CLIModeSupport.ab3"
000155DE <CLIModeSupport.ab3@664> XINCLUDE "CLIModeSupport.ab3"
00015606 <CLIModeSupport.ab3@665> XINCLUDE "CLIModeSupport.ab3"
0001562E <CLIModeSupport.ab3@667> XINCLUDE "CLIModeSupport.ab3"
00015668 <CLIModeSupport.ab3@668> XINCLUDE "CLIModeSupport.ab3"
00015680 <CLIModeSupport.ab3@669> XINCLUDE "CLIModeSupport.ab3"
00015704 <CLIModeSupport.ab3@670> XINCLUDE "CLIModeSupport.ab3"
0001571E <CLIModeSupport.ab3@671> XINCLUDE "CLIModeSupport.ab3"
0001576C <CLIModeSupport.ab3@672> XINCLUDE "CLIModeSupport.ab3"
0001577C <CLIModeSupport.ab3@674> XINCLUDE "CLIModeSupport.ab3"
00015784 <CLIModeSupport.ab3@676> XINCLUDE "CLIModeSupport.ab3"
00015798 <CLIModeSupport.ab3@677> XINCLUDE "CLIModeSupport.ab3"
000157DE <CLIModeSupport.ab3@678> XINCLUDE "CLIModeSupport.ab3"
000157E4 <CLIModeSupport.ab3@679> XINCLUDE "CLIModeSupport.ab3"
0001582E <CLIModeSupport.ab3@680> XINCLUDE "CLIModeSupport.ab3"
00015898 <CLIModeSupport.ab3@681> XINCLUDE "CLIModeSupport.ab3"
000158FE <CLIModeSupport.ab3@682> XINCLUDE "CLIModeSupport.ab3"
00015932 <CLIModeSupport.ab3@683> XINCLUDE "CLIModeSupport.ab3"
0001595E <CLIModeSupport.ab3@685> XINCLUDE "CLIModeSupport.ab3"
000159AC <CLIModeSupport.ab3@686> XINCLUDE "CLIModeSupport.ab3"
000159D0 <CLIModeSupport.ab3@687> XINCLUDE "CLIModeSupport.ab3"
000159D6 <CLIModeSupport.ab3@688> XINCLUDE "CLIModeSupport.ab3"
000159E4 <CLIModeSupport.ab3@690> XINCLUDE "CLIModeSupport.ab3"
00015A42 <CLIModeSupport.ab3@692> XINCLUDE "CLIModeSupport.ab3"
00015AA0 <CLIModeSupport.ab3@693> XINCLUDE "CLIModeSupport.ab3"
00015ACA <CLIModeSupport.ab3@694> XINCLUDE "CLIModeSupport.ab3"
00015AD4 <CLIModeSupport.ab3@695> XINCLUDE "CLIModeSupport.ab3"
00015ADC <CLIModeSupport.ab3@696> XINCLUDE "CLIModeSupport.ab3"
00015B1A <CLIModeSupport.ab3@697> XINCLUDE "CLIModeSupport.ab3"
00015B66 <CLIModeSupport.ab3@698> XINCLUDE "CLIModeSupport.ab3"
00015B78 <CLIModeSupport.ab3@699> XINCLUDE "CLIModeSupport.ab3"
00015BCE <CLIModeSupport.ab3@700> XINCLUDE "CLIModeSupport.ab3"
00015C46 <CLIModeSupport.ab3@701> XINCLUDE "CLIModeSupport.ab3"
00015C4C <CLIModeSupport.ab3@702> XINCLUDE "CLIModeSupport.ab3"
00015C80 <CLIModeSupport.ab3@703> XINCLUDE "CLIModeSupport.ab3"
00015CA8 <CLIModeSupport.ab3@704> XINCLUDE "CLIModeSupport.ab3"
00015CDE <CLIModeSupport.ab3@707> XINCLUDE "CLIModeSupport.ab3"
00015CEC <CLIModeSupport.ab3@708> XINCLUDE "CLIModeSupport.ab3"
00015CFA <CLIModeSupport.ab3@709> XINCLUDE "CLIModeSupport.ab3"
00015D6E <CLIModeSupport.ab3@710> XINCLUDE "CLIModeSupport.ab3"
00015D74 <CLIModeSupport.ab3@711> XINCLUDE "CLIModeSupport.ab3"
00015DBE <CLIModeSupport.ab3@712> XINCLUDE "CLIModeSupport.ab3"
00015E08 <CLIModeSupport.ab3@713> XINCLUDE "CLIModeSupport.ab3"
00015E38 <CLIModeSupport.ab3@714> XINCLUDE "CLIModeSupport.ab3"
00015E68 <CLIModeSupport.ab3@715> XINCLUDE "CLIModeSupport.ab3"
00015E92 <CLIModeSupport.ab3@716> XINCLUDE "CLIModeSupport.ab3"
00015EE4 <CLIModeSupport.ab3@717> XINCLUDE "CLIModeSupport.ab3"
00015F3A <CLIModeSupport.ab3@718> XINCLUDE "CLIModeSupport.ab3"
00015F8A <CLIModeSupport.ab3@719> XINCLUDE "CLIModeSupport.ab3"
00015FF0 <CLIModeSupport.ab3@720> XINCLUDE "CLIModeSupport.ab3"
0001605C <CLIModeSupport.ab3@721> XINCLUDE "CLIModeSupport.ab3"
00016088 <CLIModeSupport.ab3@722> XINCLUDE "CLIModeSupport.ab3"
000160B8 <CLIModeSupport.ab3@723> XINCLUDE "CLIModeSupport.ab3"
00016134 <CLIModeSupport.ab3@724> XINCLUDE "CLIModeSupport.ab3"
00016164 <CLIModeSupport.ab3@725> XINCLUDE "CLIModeSupport.ab3"
00016194 <CLIModeSupport.ab3@726> XINCLUDE "CLIModeSupport.ab3"
000161C4 <CLIModeSupport.ab3@727> XINCLUDE "CLIModeSupport.ab3"
000161F4 <CLIModeSupport.ab3@728> XINCLUDE "CLIModeSupport.ab3"
00016224 <CLIModeSupport.ab3@729> XINCLUDE "CLIModeSupport.ab3"
00016254 <CLIModeSupport.ab3@730> XINCLUDE "CLIModeSupport.ab3"
00016284 <CLIModeSupport.ab3@731> XINCLUDE "CLIModeSupport.ab3"
000162B4 <CLIModeSupport.ab3@732> XINCLUDE "CLIModeSupport.ab3"
000162E4 <CLIModeSupport.ab3@733> XINCLUDE "CLIModeSupport.ab3"
00016314 <CLIModeSupport.ab3@734> XINCLUDE "CLIModeSupport.ab3"
00016390 <CLIModeSupport.ab3@735> XINCLUDE "CLIModeSupport.ab3"
000163C2 <CLIModeSupport.ab3@736> XINCLUDE "CLIModeSupport.ab3"
000163F4 <CLIModeSupport.ab3@737> XINCLUDE "CLIModeSupport.ab3"
00016424 <CLIModeSupport.ab3@738> XINCLUDE "CLIModeSupport.ab3"
0001642A <CLIModeSupport.ab3@739> XINCLUDE "CLIModeSupport.ab3"
0001649E <CLIModeSupport.ab3@740> XINCLUDE "CLIModeSupport.ab3"
0001650A <CLIModeSupport.ab3@741> XINCLUDE "CLIModeSupport.ab3"
0001651C <CLIModeSupport.ab3@742> XINCLUDE "CLIModeSupport.ab3"
0001654A <CLIModeSupport.ab3@743> XINCLUDE "CLIModeSupport.ab3"
00016572 <CLIModeSupport.ab3@744> XINCLUDE "CLIModeSupport.ab3"
00016586 <CLIModeSupport.ab3@745> XINCLUDE "CLIModeSupport.ab3"
000165B0 <CLIModeSupport.ab3@746> XINCLUDE "CLIModeSupport.ab3"
000165F4 <CLIModeSupport.ab3@747> XINCLUDE "CLIModeSupport.ab3"
00016604 <CLIModeSupport.ab3@748> XINCLUDE "CLIModeSupport.ab3"
00016614 <CLIModeSupport.ab3@749> XINCLUDE "CLIModeSupport.ab3"
0001661A <CLIModeSupport.ab3@750> XINCLUDE "CLIModeSupport.ab3"
0001662A <CLIModeSupport.ab3@752> XINCLUDE "CLIModeSupport.ab3"
00016638 <CLIModeSupport.ab3@756> XINCLUDE "CLIModeSupport.ab3"
00016642 <CLIModeSupport.ab3@759> XINCLUDE "CLIModeSupport.ab3"
0001667A <CLIModeSupport.ab3@762> XINCLUDE "CLIModeSupport.ab3"
000166B2 <CLIModeSupport.ab3@763> XINCLUDE "CLIModeSupport.ab3"
000166EA <CLIModeSupport.ab3@764> XINCLUDE "CLIModeSupport.ab3"
000166FA <CLIModeSupport.ab3@765> XINCLUDE "CLIModeSupport.ab3"
00016762 <CLIModeSupport.ab3@766> XINCLUDE "CLIModeSupport.ab3"
0001679A <CLIModeSupport.ab3@767> XINCLUDE "CLIModeSupport.ab3"
000167AA <CLIModeSupport.ab3@768> XINCLUDE "CLIModeSupport.ab3"
000167BA <CLIModeSupport.ab3@769> XINCLUDE "CLIModeSupport.ab3"
00016822 <CLIModeSupport.ab3@770> XINCLUDE "CLIModeSupport.ab3"
0001688A <CLIModeSupport.ab3@771> XINCLUDE "CLIModeSupport.ab3"
000168F2 <CLIModeSupport.ab3@772> XINCLUDE "CLIModeSupport.ab3"
0001695A <CLIModeSupport.ab3@773> XINCLUDE "CLIModeSupport.ab3"
000169C2 <CLIModeSupport.ab3@774> XINCLUDE "CLIModeSupport.ab3"
00016A2A <CLIModeSupport.ab3@775> XINCLUDE "CLIModeSupport.ab3"
00016A92 <CLIModeSupport.ab3@776> XINCLUDE "CLIModeSupport.ab3"
00016AFA <CLIModeSupport.ab3@777> XINCLUDE "CLIModeSupport.ab3"
00016B0A <CLIModeSupport.ab3@778> XINCLUDE "CLIModeSupport.ab3"
00016B42 <CLIModeSupport.ab3@780> XINCLUDE "CLIModeSupport.ab3"
00016B7C <CLIModeSupport.ab3@781> XINCLUDE "CLIModeSupport.ab3"
00016BB6 <CLIModeSupport.ab3@782> XINCLUDE "CLIModeSupport.ab3"
00016BEE <CLIModeSupport.ab3@783> XINCLUDE "CLIModeSupport.ab3"
00016C0A <CLIModeSupport.ab3@784> XINCLUDE "CLIModeSupport.ab3"
00016C42 <CLIModeSupport.ab3@785> XINCLUDE "CLIModeSupport.ab3"
00016C68 <CLIModeSupport.ab3@787> XINCLUDE "CLIModeSupport.ab3"
00016C70 <CLIModeSupport.ab3@790> XINCLUDE "CLIModeSupport.ab3"
00016C78 <CLIModeSupport.ab3@792> XINCLUDE "CLIModeSupport.ab3"
00016C80 <CLIModeSupport.ab3@793> XINCLUDE "CLIModeSupport.ab3"
00016C88 <CLIModeSupport.ab3@795> XINCLUDE "CLIModeSupport.ab3"
00016C9C <CLIModeSupport.ab3@796> XINCLUDE "CLIModeSupport.ab3"
00016CCA <CLIModeSupport.ab3@797> XINCLUDE "CLIModeSupport.ab3"
00016CE4 <CLIModeSupport.ab3@798> XINCLUDE "CLIModeSupport.ab3"
00016CF2 <CLIModeSupport.ab3@799> XINCLUDE "CLIModeSupport.ab3"
00016D5E <CLIModeSupport.ab3@800> XINCLUDE "CLIModeSupport.ab3"
00016D84 <CLIModeSupport.ab3@801> XINCLUDE "CLIModeSupport.ab3"
00016DA0 <CLIModeSupport.ab3@802> XINCLUDE "CLIModeSupport.ab3"
00016DAA <CLIModeSupport.ab3@803> XINCLUDE "CLIModeSupport.ab3"
00016DB4 <CLIModeSupport.ab3@804> XINCLUDE "CLIModeSupport.ab3"
00016DC0 <CLIModeSupport.ab3@805> XINCLUDE "CLIModeSupport.ab3"
00016DCE <CLIModeSupport.ab3@806> XINCLUDE "CLIModeSupport.ab3"
00016DDA <CLIModeSupport.ab3@807> XINCLUDE "CLIModeSupport.ab3"
00016E16 <CLIModeSupport.ab3@808> XINCLUDE "CLIModeSupport.ab3"
00016E30 <CLIModeSupport.ab3@809> XINCLUDE "CLIModeSupport.ab3"
00016E3E <CLIModeSupport.ab3@810> XINCLUDE "CLIModeSupport.ab3"
00016E5E <CLIModeSupport.ab3@811> XINCLUDE "CLIModeSupport.ab3"
00016E6C <CLIModeSupport.ab3@812> XINCLUDE "CLIModeSupport.ab3"
00016E7A <CLIModeSupport.ab3@813> XINCLUDE "CLIModeSupport.ab3"
00016E80 <CLIModeSupport.ab3@815> XINCLUDE "CLIModeSupport.ab3"
00016E90 <CLIModeSupport.ab3@816> XINCLUDE "CLIModeSupport.ab3"
00016E94 <CLIModeSupport.ab3@818> XINCLUDE "CLIModeSupport.ab3"
00016EC8 <CLIModeSupport.ab3@819> XINCLUDE "CLIModeSupport.ab3"
00016EFC <CLIModeSupport.ab3@820> XINCLUDE "CLIModeSupport.ab3"
00016F00 <CLIModeSupport.ab3@821> XINCLUDE "CLIModeSupport.ab3"
00016F34 <CLIModeSupport.ab3@822> XINCLUDE "CLIModeSupport.ab3"
00016F38 <CLIModeSupport.ab3@823> XINCLUDE "CLIModeSupport.ab3"
00016F6C <CLIModeSupport.ab3@824> XINCLUDE "CLIModeSupport.ab3"
00016F72 <CLIModeSupport.ab3@825> XINCLUDE "CLIModeSupport.ab3"
00016FA8 <CLIModeSupport.ab3@827> XINCLUDE "CLIModeSupport.ab3"
00016FDE <CLIModeSupport.ab3@828> XINCLUDE "CLIModeSupport.ab3"
00017014 <CLIModeSupport.ab3@829> XINCLUDE "CLIModeSupport.ab3"
0001704C <CLIModeSupport.ab3@830> XINCLUDE "CLIModeSupport.ab3"
00017084 <CLIModeSupport.ab3@831> XINCLUDE "CLIModeSupport.ab3"
00017124 <CLIModeSupport.ab3@833> XINCLUDE "CLIModeSupport.ab3"
00017164 <CLIModeSupport.ab3@834> XINCLUDE "CLIModeSupport.ab3"
0001719A <CLIModeSupport.ab3@835> XINCLUDE "CLIModeSupport.ab3"
000171D0 <CLIModeSupport.ab3@836> XINCLUDE "CLIModeSupport.ab3"
00017208 <CLIModeSupport.ab3@839> XINCLUDE "CLIModeSupport.ab3"
00017226 <CLIModeSupport.ab3@840> XINCLUDE "CLIModeSupport.ab3"
0001722A <CLIModeSupport.ab3@841> XINCLUDE "CLIModeSupport.ab3"
00017230 <CLIModeSupport.ab3@842> XINCLUDE "CLIModeSupport.ab3"
00017236 <CLIModeSupport.ab3@843> XINCLUDE "CLIModeSupport.ab3"
0001723A <CLIModeSupport.ab3@844> XINCLUDE "CLIModeSupport.ab3"
00017264 <CLIModeSupport.ab3@845> XINCLUDE "CLIModeSupport.ab3"
00017278 <CLIModeSupport.ab3@849> XINCLUDE "CLIModeSupport.ab3"
000172B6 <CLIModeSupport.ab3@850> XINCLUDE "CLIModeSupport.ab3"
000172EA <CLIModeSupport.ab3@851> XINCLUDE "CLIModeSupport.ab3"
00017320 <CLIModeSupport.ab3@855> XINCLUDE "CLIModeSupport.ab3"
00017378 <CLIModeSupport.ab3@857> XINCLUDE "CLIModeSupport.ab3"
000173A6 <CLIModeSupport.ab3@858> XINCLUDE "CLIModeSupport.ab3"
000173AA <CLIModeSupport.ab3@859> XINCLUDE "CLIModeSupport.ab3"
000173E0 <CLIModeSupport.ab3@860> XINCLUDE "CLIModeSupport.ab3"
0001740E <CLIModeSupport.ab3@861> XINCLUDE "CLIModeSupport.ab3"
0001743C <CLIModeSupport.ab3@863> XINCLUDE "CLIModeSupport.ab3"
00017440 <CLIModeSupport.ab3@864> XINCLUDE "CLIModeSupport.ab3"
00017476 <CLIModeSupport.ab3@865> XINCLUDE "CLIModeSupport.ab3"
000174A4 <CLIModeSupport.ab3@867> XINCLUDE "CLIModeSupport.ab3"
000174A8 <CLIModeSupport.ab3@868> XINCLUDE "CLIModeSupport.ab3"
0001750C <CLIModeSupport.ab3@869> XINCLUDE "CLIModeSupport.ab3"
00017512 <CLIModeSupport.ab3@872> XINCLUDE "CLIModeSupport.ab3"
0001754C <CLIModeSupport.ab3@873> XINCLUDE "CLIModeSupport.ab3"
00017556 <CLIModeSupport.ab3@876> XINCLUDE "CLIModeSupport.ab3"
00017560 <CLIModeSupport.ab3@878> XINCLUDE "CLIModeSupport.ab3"
0001757A <CLIModeSupport.ab3@879> XINCLUDE "CLIModeSupport.ab3"
000175A4 <CLIModeSupport.ab3@882> XINCLUDE "CLIModeSupport.ab3"
000175AA <CLIModeSupport.ab3@883> XINCLUDE "CLIModeSupport.ab3"
000175CA <CLIModeSupport.ab3@884> XINCLUDE "CLIModeSupport.ab3"
000175D4 <CLIModeSupport.ab3@885> XINCLUDE "CLIModeSupport.ab3"
000175D8 <CLIModeSupport.ab3@886> XINCLUDE "CLIModeSupport.ab3"
000175DA <CLIModeSupport.ab3@887> XINCLUDE "CLIModeSupport.ab3"
000175F8 <CLIModeSupport.ab3@888> XINCLUDE "CLIModeSupport.ab3"
000175FA <CLIModeSupport.ab3@889> XINCLUDE "CLIModeSupport.ab3"
00017600 <CLIModeSupport.ab3@890> XINCLUDE "CLIModeSupport.ab3"
00017606 <CLIModeSupport.ab3@892> XINCLUDE "CLIModeSupport.ab3"
00017630 <CLIModeSupport.ab3@893> XINCLUDE "CLIModeSupport.ab3"
00017632 <CLIModeSupport.ab3@894> XINCLUDE "CLIModeSupport.ab3"
00017660 <CLIModeSupport.ab3@895> XINCLUDE "CLIModeSupport.ab3"
00017664 <CLIModeSupport.ab3@896> XINCLUDE "CLIModeSupport.ab3"
00017692 <CLIModeSupport.ab3@897> XINCLUDE "CLIModeSupport.ab3"
00017696 <CLIModeSupport.ab3@898> XINCLUDE "CLIModeSupport.ab3"
000176BC <CLIModeSupport.ab3@899> XINCLUDE "CLIModeSupport.ab3"
000176CC <CLIModeSupport.ab3@900> XINCLUDE "CLIModeSupport.ab3"
000176D2 <CLIModeSupport.ab3@901> XINCLUDE "CLIModeSupport.ab3"
000176D8 <CLIModeSupport.ab3@902> XINCLUDE "CLIModeSupport.ab3"
00017712 <CLIModeSupport.ab3@903> XINCLUDE "CLIModeSupport.ab3"
0001771C <CLIModeSupport.ab3@905> XINCLUDE "CLIModeSupport.ab3"
00017736 <CLIModeSupport.ab3@906> XINCLUDE "CLIModeSupport.ab3"
00017754 <CLIModeSupport.ab3@909> XINCLUDE "CLIModeSupport.ab3"
0001777E <CLIModeSupport.ab3@910> XINCLUDE "CLIModeSupport.ab3"
000177AC <CLIModeSupport.ab3@911> XINCLUDE "CLIModeSupport.ab3"
0001783C <CLIModeSupport.ab3@912> XINCLUDE "CLIModeSupport.ab3"
00017846 <CLIModeSupport.ab3@914> XINCLUDE "CLIModeSupport.ab3"
0001785A <CLIModeSupport.ab3@915> XINCLUDE "CLIModeSupport.ab3"
00017896 <CLIModeSupport.ab3@916> XINCLUDE "CLIModeSupport.ab3"
000178D2 <CLIModeSupport.ab3@917> XINCLUDE "CLIModeSupport.ab3"
0001790E <CLIModeSupport.ab3@918> XINCLUDE "CLIModeSupport.ab3"
0001794A <CLIModeSupport.ab3@919> XINCLUDE "CLIModeSupport.ab3"
00017986 <CLIModeSupport.ab3@920> XINCLUDE "CLIModeSupport.ab3"
0001798C <CLIModeSupport.ab3@921> XINCLUDE "CLIModeSupport.ab3"
000179C6 <CLIModeSupport.ab3@922> XINCLUDE "CLIModeSupport.ab3"
000179D8 <CLIModeSupport.ab3@927> XINCLUDE "CLIModeSupport.ab3"
000179E8 <CLIModeSupport.ab3@928> XINCLUDE "CLIModeSupport.ab3"
000179F4 <CLIModeSupport.ab3@931> XINCLUDE "CLIModeSupport.ab3"
00017A0E <CLIModeSupport.ab3@932> XINCLUDE "CLIModeSupport.ab3"
00017A10 <CLIModeSupport.ab3@934> XINCLUDE "CLIModeSupport.ab3"
00017A2E <CLIModeSupport.ab3@935> XINCLUDE "CLIModeSupport.ab3"
00017A34 <CLIModeSupport.ab3@936> XINCLUDE "CLIModeSupport.ab3"
00017A5E <CLIModeSupport.ab3@937> XINCLUDE "CLIModeSupport.ab3"
00017A60 <CLIModeSupport.ab3@938> XINCLUDE "CLIModeSupport.ab3"
00017A6A <CLIModeSupport.ab3@940> XINCLUDE "CLIModeSupport.ab3"
00017A70 <CLIModeSupport.ab3@941> XINCLUDE "CLIModeSupport.ab3"
00017A82 <CLIModeSupport.ab3@944> XINCLUDE "CLIModeSupport.ab3"
00017ABC <CLIModeSupport.ab3@961> XINCLUDE "CLIModeSupport.ab3"
00017AD6 <CLIModeSupport.ab3@966> XINCLUDE "CLIModeSupport.ab3"
00017AEA <CLIModeSupport.ab3@968> XINCLUDE "CLIModeSupport.ab3"
00017B54 <CLIModeSupport.ab3@969> XINCLUDE "CLIModeSupport.ab3"
00017B5A <CLIModeSupport.ab3@970> XINCLUDE "CLIModeSupport.ab3"
00017BC4 <CLIModeSupport.ab3@971> XINCLUDE "CLIModeSupport.ab3"
00017BD8 <CLIModeSupport.ab3@974> XINCLUDE "CLIModeSupport.ab3"
00017C42 <CLIModeSupport.ab3@975> XINCLUDE "CLIModeSupport.ab3"
00017C78 <CLIModeSupport.ab3@976> XINCLUDE "CLIModeSupport.ab3"
00017C7E <CLIModeSupport.ab3@977> XINCLUDE "CLIModeSupport.ab3"
00017CE8 <CLIModeSupport.ab3@978> XINCLUDE "CLIModeSupport.ab3"
00017CFC <CLIModeSupport.ab3@979> XINCLUDE "CLIModeSupport.ab3"
00017D32 <CLIModeSupport.ab3@980> XINCLUDE "CLIModeSupport.ab3"
00017D38 <CLIModeSupport.ab3@981> XINCLUDE "CLIModeSupport.ab3"
00017D6E <CLIModeSupport.ab3@982> XINCLUDE "CLIModeSupport.ab3"
00017D82 <CLIModeSupport.ab3@986> XINCLUDE "CLIModeSupport.ab3"
00017DEC <CLIModeSupport.ab3@987> XINCLUDE "CLIModeSupport.ab3"
00017DF2 <CLIModeSupport.ab3@988> XINCLUDE "CLIModeSupport.ab3"
00017E5C <CLIModeSupport.ab3@989> XINCLUDE "CLIModeSupport.ab3"
00017E70 <CLIModeSupport.ab3@992> XINCLUDE "CLIModeSupport.ab3"
00017EA6 <CLIModeSupport.ab3@993> XINCLUDE "CLIModeSupport.ab3"
00017EAC <CLIModeSupport.ab3@994> XINCLUDE "CLIModeSupport.ab3"
00017EE2 <CLIModeSupport.ab3@995> XINCLUDE "CLIModeSupport.ab3"
00017EFC <CLIModeSupport.ab3@1000> XINCLUDE "CLIModeSupport.ab3"
00017F10 <CLIModeSupport.ab3@1002> XINCLUDE "CLIModeSupport.ab3"
00017F7A <CLIModeSupport.ab3@1003> XINCLUDE "CLIModeSupport.ab3"
00017F80 <CLIModeSupport.ab3@1004> XINCLUDE "CLIModeSupport.ab3"
00017FEA <CLIModeSupport.ab3@1005> XINCLUDE "CLIModeSupport.ab3"
00017FFE <CLIModeSupport.ab3@1008> XINCLUDE "CLIModeSupport.ab3"
00018068 <CLIModeSupport.ab3@1009> XINCLUDE "CLIModeSupport.ab3"
0001806E <CLIModeSupport.ab3@1010> XINCLUDE "CLIModeSupport.ab3"
000180D8 <CLIModeSupport.ab3@1011> XINCLUDE "CLIModeSupport.ab3"
000180EC <CLIModeSupport.ab3@1014> XINCLUDE "CLIModeSupport.ab3"
00018156 <CLIModeSupport.ab3@1015> XINCLUDE "CLIModeSupport.ab3"
0001815C <CLIModeSupport.ab3@1016> XINCLUDE "CLIModeSupport.ab3"
000181C6 <CLIModeSupport.ab3@1017> XINCLUDE "CLIModeSupport.ab3"
000181DA <CLIModeSupport.ab3@1020> XINCLUDE "CLIModeSupport.ab3"
00018244 <CLIModeSupport.ab3@1021> XINCLUDE "CLIModeSupport.ab3"
0001824A <CLIModeSupport.ab3@1022> XINCLUDE "CLIModeSupport.ab3"
000182B4 <CLIModeSupport.ab3@1023> XINCLUDE "CLIModeSupport.ab3"
000182C6 <CLIModeSupport.ab3@1028> XINCLUDE "CLIModeSupport.ab3"
000182D6 <CLIModeSupport.ab3@1029> XINCLUDE "CLIModeSupport.ab3"
000182E0 <CLIModeSupport.ab3@1032> XINCLUDE "CLIModeSupport.ab3"
0001834A <CLIModeSupport.ab3@1033> XINCLUDE "CLIModeSupport.ab3"
00018350 <CLIModeSupport.ab3@1034> XINCLUDE "CLIModeSupport.ab3"
00018356 <CLIModeSupport.ab3@1035> XINCLUDE "CLIModeSupport.ab3"
000183C0 <CLIModeSupport.ab3@1036> XINCLUDE "CLIModeSupport.ab3"
000183C8 <CLIModeSupport.ab3@1037> XINCLUDE "CLIModeSupport.ab3"
000183D2 <CLIModeSupport.ab3@1040> XINCLUDE "CLIModeSupport.ab3"
0001843C <CLIModeSupport.ab3@1041> XINCLUDE "CLIModeSupport.ab3"
00018472 <CLIModeSupport.ab3@1042> XINCLUDE "CLIModeSupport.ab3"
000184B0 <CLIModeSupport.ab3@1043> XINCLUDE "CLIModeSupport.ab3"
000184B4 <CLIModeSupport.ab3@1044> XINCLUDE "CLIModeSupport.ab3"
000184EA <CLIModeSupport.ab3@1045> XINCLUDE "CLIModeSupport.ab3"
000184F0 <CLIModeSupport.ab3@1046> XINCLUDE "CLIModeSupport.ab3"
000184F6 <CLIModeSupport.ab3@1047> XINCLUDE "CLIModeSupport.ab3"
00018560 <CLIModeSupport.ab3@1049> XINCLUDE "CLIModeSupport.ab3"
00018596 <CLIModeSupport.ab3@1050> XINCLUDE "CLIModeSupport.ab3"
0001859C <CLIModeSupport.ab3@1052> XINCLUDE "CLIModeSupport.ab3"
000185CA <CLIModeSupport.ab3@1056> XINCLUDE "CLIModeSupport.ab3"
000185CE <CLIModeSupport.ab3@1057> XINCLUDE "CLIModeSupport.ab3"
000185F6 <CLIModeSupport.ab3@1058> XINCLUDE "CLIModeSupport.ab3"
000185FC <CLIModeSupport.ab3@1061> XINCLUDE "CLIModeSupport.ab3"
00018602 <CLIModeSupport.ab3@1062> XINCLUDE "CLIModeSupport.ab3"
00018608 <CLIModeSupport.ab3@1063> XINCLUDE "CLIModeSupport.ab3"
00018612 <CLIModeSupport.ab3@1064> XINCLUDE "CLIModeSupport.ab3"
0001861C <CLIModeSupport.ab3@1065> XINCLUDE "CLIModeSupport.ab3"
0001864A <CLIModeSupport.ab3@1067> XINCLUDE "CLIModeSupport.ab3"
00018676 <CLIModeSupport.ab3@1069> XINCLUDE "CLIModeSupport.ab3"
0001867E <CLIModeSupport.ab3@1070> XINCLUDE "CLIModeSupport.ab3"
000186E4 <CLIModeSupport.ab3@1073> XINCLUDE "CLIModeSupport.ab3"
00018718 <CLIModeSupport.ab3@1074> XINCLUDE "CLIModeSupport.ab3"
0001871E <CLIModeSupport.ab3@1075> XINCLUDE "CLIModeSupport.ab3"
0001879E <CLIModeSupport.ab3@1076> XINCLUDE "CLIModeSupport.ab3"
000187B0 <CLIModeSupport.ab3@1078> XINCLUDE "CLIModeSupport.ab3"
00018816 <CLIModeSupport.ab3@1079> XINCLUDE "CLIModeSupport.ab3"
0001887C <CLIModeSupport.ab3@1080> XINCLUDE "CLIModeSupport.ab3"
00018882 <CLIModeSupport.ab3@1081> XINCLUDE "CLIModeSupport.ab3"
0001888A <CLIModeSupport.ab3@1082> XINCLUDE "CLIModeSupport.ab3"
0001888C <CLIModeSupport.ab3@1086> XINCLUDE "CLIModeSupport.ab3"
000188AA <CLIModeSupport.ab3@1087> XINCLUDE "CLIModeSupport.ab3"
000188E8 <CLIModeSupport.ab3@1088> XINCLUDE "CLIModeSupport.ab3"
00018926 <CLIModeSupport.ab3@1089> XINCLUDE "CLIModeSupport.ab3"
0001892C <CLIModeSupport.ab3@1091> XINCLUDE "CLIModeSupport.ab3"
00018932 <CLIModeSupport.ab3@1092> XINCLUDE "CLIModeSupport.ab3"
00018938 <CLIModeSupport.ab3@1093> XINCLUDE "CLIModeSupport.ab3"
00018942 <CLIModeSupport.ab3@1096> XINCLUDE "CLIModeSupport.ab3"
00018948 <CLIModeSupport.ab3@1097> XINCLUDE "CLIModeSupport.ab3"
0001894E <CLIModeSupport.ab3@1098> XINCLUDE "CLIModeSupport.ab3"
00018954 <CLIModeSupport.ab3@1099> XINCLUDE "CLIModeSupport.ab3"
0001895A <CLIModeSupport.ab3@1100> XINCLUDE "CLIModeSupport.ab3"
0001895E <CLIModeSupport.ab3@1101> XINCLUDE "CLIModeSupport.ab3"
00018968 <CLIModeSupport.ab3@1102> XINCLUDE "CLIModeSupport.ab3"
0001896C <CLIModeSupport.ab3@1103> XINCLUDE "CLIModeSupport.ab3"
00018996 <CLIModeSupport.ab3@1106> XINCLUDE "CLIModeSupport.ab3"
00018998 <CLIModeSupport.ab3@1107> XINCLUDE "CLIModeSupport.ab3"
0001899E <CLIModeSupport.ab3@1109> XINCLUDE "CLIModeSupport.ab3"
000189A2 <CLIModeSupport.ab3@1110> XINCLUDE "CLIModeSupport.ab3"
000189A8 <CLIModeSupport.ab3@1112> XINCLUDE "CLIModeSupport.ab3"
000189AC <CLIModeSupport.ab3@1113> XINCLUDE "CLIModeSupport.ab3"
000189BC <CLIModeSupport.ab3@1115> XINCLUDE "CLIModeSupport.ab3"
00018A16 <CLIModeSupport.ab3@1116> XINCLUDE "CLIModeSupport.ab3"
00018A28 <CLIModeSupport.ab3@1118> XINCLUDE "CLIModeSupport.ab3"
00018A92 <CLIModeSupport.ab3@1119> XINCLUDE "CLIModeSupport.ab3"
00018A98 <CLIModeSupport.ab3@1120> XINCLUDE "CLIModeSupport.ab3"
00018AE2 <CLIModeSupport.ab3@1121> XINCLUDE "CLIModeSupport.ab3"
00018AF0 <CLIModeSupport.ab3@1124> XINCLUDE "CLIModeSupport.ab3"
00018B1C <CLIModeSupport.ab3@1125> XINCLUDE "CLIModeSupport.ab3"
00018BC2 <CLIModeSupport.ab3@1126> XINCLUDE "CLIModeSupport.ab3"
00018BE0 <CLIModeSupport.ab3@1127> XINCLUDE "CLIModeSupport.ab3"
00018BE6 <CLIModeSupport.ab3@1128> XINCLUDE "CLIModeSupport.ab3"
00018C10 <CLIModeSupport.ab3@1129> XINCLUDE "CLIModeSupport.ab3"
00018C16 <CLIModeSupport.ab3@1131> XINCLUDE "CLIModeSupport.ab3"
00018C4E <CLIModeSupport.ab3@1132> XINCLUDE "CLIModeSupport.ab3"
00018C5A <CLIModeSupport.ab3@1135> XINCLUDE "CLIModeSupport.ab3"
00018C74 <CLIModeSupport.ab3@1136> XINCLUDE "CLIModeSupport.ab3"
00018C80 <CLIModeSupport.ab3@1138> XINCLUDE "CLIModeSupport.ab3"
00018C9A <CLIModeSupport.ab3@1140> XINCLUDE "CLIModeSupport.ab3"
00018CC4 <CLIModeSupport.ab3@1144> XINCLUDE "CLIModeSupport.ab3"
00018CE8 <CLIModeSupport.ab3@1145> XINCLUDE "CLIModeSupport.ab3"
00018D26 <CLIModeSupport.ab3@1146> XINCLUDE "CLIModeSupport.ab3"
00018D2A <CLIModeSupport.ab3@1147> XINCLUDE "CLIModeSupport.ab3"
00018D68 <CLIModeSupport.ab3@1149> XINCLUDE "CLIModeSupport.ab3"
00018D6C <CLIModeSupport.ab3@1150> XINCLUDE "CLIModeSupport.ab3"
00018DAA <CLIModeSupport.ab3@1153> XINCLUDE "CLIModeSupport.ab3"
00018DE8 <CLIModeSupport.ab3@1154> XINCLUDE "CLIModeSupport.ab3"
00018DEA <CLIModeSupport.ab3@1155> XINCLUDE "CLIModeSupport.ab3"
00018E1E <CLIModeSupport.ab3@1156> XINCLUDE "CLIModeSupport.ab3"
00018E24 <CLIModeSupport.ab3@1158> XINCLUDE "CLIModeSupport.ab3"
00018E68 <CLIModeSupport.ab3@1159> XINCLUDE "CLIModeSupport.ab3"
00018E7A <CLIModeSupport.ab3@1160> XINCLUDE "CLIModeSupport.ab3"
00018E82 <CLIModeSupport.ab3@1162> XINCLUDE "CLIModeSupport.ab3"
00018E88 <CLIModeSupport.ab3@1163> XINCLUDE "CLIModeSupport.ab3"
00018E92 <CLIModeSupport.ab3@1165> XINCLUDE "CLIModeSupport.ab3"
00018EA0 <CLIModeSupport.ab3@1166> XINCLUDE "CLIModeSupport.ab3"
00018EA6 <CLIModeSupport.ab3@1167> XINCLUDE "CLIModeSupport.ab3"
00018ECE <CLIModeSupport.ab3@1168> XINCLUDE "CLIModeSupport.ab3"
00018EE8 <CLIModeSupport.ab3@1169> XINCLUDE "CLIModeSupport.ab3"
00018EF2 <CLIModeSupport.ab3@1170> XINCLUDE "CLIModeSupport.ab3"
00018EF8 <CLIModeSupport.ab3@1171> XINCLUDE "CLIModeSupport.ab3"
00018F16 <CLIModeSupport.ab3@1173> XINCLUDE "CLIModeSupport.ab3"
00018F20 <CLIModeSupport.ab3@1174> XINCLUDE "CLIModeSupport.ab3"
00018F26 <CLIModeSupport.ab3@1175> XINCLUDE "CLIModeSupport.ab3"
00018F2C <CLIModeSupport.ab3@1176> XINCLUDE "CLIModeSupport.ab3"
00018F36 <CLIModeSupport.ab3@1177> XINCLUDE "CLIModeSupport.ab3"
00018F44 <CLIModeSupport.ab3@1178> XINCLUDE "CLIModeSupport.ab3"
00018F4A <CLIModeSupport.ab3@1179> XINCLUDE "CLIModeSupport.ab3"
00018F5A <CLIModeSupport.ab3@1181> XINCLUDE "CLIModeSupport.ab3"
00018F86 <CLIModeSupport.ab3@1182> XINCLUDE "CLIModeSupport.ab3"
00018F9C <CLIModeSupport.ab3@1183> XINCLUDE "CLIModeSupport.ab3"
00018FA6 <CLIModeSupport.ab3@1184> XINCLUDE "CLIModeSupport.ab3"
00018FAC <CLIModeSupport.ab3@1185> XINCLUDE "CLIModeSupport.ab3"
00019004 <CLIModeSupport.ab3@1187> XINCLUDE "CLIModeSupport.ab3"
00019072 <CLIModeSupport.ab3@1189> XINCLUDE "CLIModeSupport.ab3"
0001908A <CLIModeSupport.ab3@1190> XINCLUDE "CLIModeSupport.ab3"
00019090 <CLIModeSupport.ab3@1191> XINCLUDE "CLIModeSupport.ab3"
000190C8 <CLIModeSupport.ab3@1192> XINCLUDE "CLIModeSupport.ab3"
000190F6 <CLIModeSupport.ab3@1194> XINCLUDE "CLIModeSupport.ab3"
00019120 <CLIModeSupport.ab3@1195> XINCLUDE "CLIModeSupport.ab3"
0001912A <CLIModeSupport.ab3@1197> XINCLUDE "CLIModeSupport.ab3"
00019152 <CLIModeSupport.ab3@1198> XINCLUDE "CLIModeSupport.ab3"
0001917C <CLIModeSupport.ab3@1199> XINCLUDE "CLIModeSupport.ab3"
0001921E <CLIModeSupport.ab3@1200> XINCLUDE "CLIModeSupport.ab3"
0001922C <CLIModeSupport.ab3@1201> XINCLUDE "CLIModeSupport.ab3"
0001927C <CLIModeSupport.ab3@1202> XINCLUDE "CLIModeSupport.ab3"
0001928C <CLIModeSupport.ab3@1203> XINCLUDE "CLIModeSupport.ab3"
00019354 <CLIModeSupport.ab3@1204> XINCLUDE "CLIModeSupport.ab3"
00019388 <CLIModeSupport.ab3@1206> XINCLUDE "CLIModeSupport.ab3"
000193BC <CLIModeSupport.ab3@1207> XINCLUDE "CLIModeSupport.ab3"
000193F0 <CLIModeSupport.ab3@1208> XINCLUDE "CLIModeSupport.ab3"
00019424 <CLIModeSupport.ab3@1209> XINCLUDE "CLIModeSupport.ab3"
00019458 <CLIModeSupport.ab3@1210> XINCLUDE "CLIModeSupport.ab3"
0001948C <CLIModeSupport.ab3@1211> XINCLUDE "CLIModeSupport.ab3"
000194C0 <CLIModeSupport.ab3@1212> XINCLUDE "CLIModeSupport.ab3"
000194F4 <CLIModeSupport.ab3@1213> XINCLUDE "CLIModeSupport.ab3"
000194F6 <CLIModeSupport.ab3@1215> XINCLUDE "CLIModeSupport.ab3"
00019534 <CLIModeSupport.ab3@1216> XINCLUDE "CLIModeSupport.ab3"
00019538 <CLIModeSupport.ab3@1217> XINCLUDE "CLIModeSupport.ab3"
00019576 <CLIModeSupport.ab3@1220> XINCLUDE "CLIModeSupport.ab3"
000195B4 <CLIModeSupport.ab3@1221> XINCLUDE "CLIModeSupport.ab3"
000195B6 <CLIModeSupport.ab3@1222> XINCLUDE "CLIModeSupport.ab3"
000195BC <CLIModeSupport.ab3@1223> XINCLUDE "CLIModeSupport.ab3"
000195C0 <CLIModeSupport.ab3@1224> XINCLUDE "CLIModeSupport.ab3"
000195C2 <CLIModeSupport.ab3@1226> XINCLUDE "CLIModeSupport.ab3"
00019600 <CLIModeSupport.ab3@1227> XINCLUDE "CLIModeSupport.ab3"
0001963E <CLIModeSupport.ab3@1228> XINCLUDE "CLIModeSupport.ab3"
00019640 <CLIModeSupport.ab3@1229> XINCLUDE "CLIModeSupport.ab3"
00019642 <CLIModeSupport.ab3@1230> XINCLUDE "CLIModeSupport.ab3"
00019644 <CLIModeSupport.ab3@1231> XINCLUDE "CLIModeSupport.ab3"
0001964A <CLIModeSupport.ab3@1232> XINCLUDE "CLIModeSupport.ab3"
0001964E <CLIModeSupport.ab3@1233> XINCLUDE "CLIModeSupport.ab3"
0001965E <CLIModeSupport.ab3@1235> XINCLUDE "CLIModeSupport.ab3"
00019676 <CLIModeSupport.ab3@1236> XINCLUDE "CLIModeSupport.ab3"
0001968E <CLIModeSupport.ab3@1237> XINCLUDE "CLIModeSupport.ab3"
000196A6 <CLIModeSupport.ab3@1238> XINCLUDE "CLIModeSupport.ab3"
000196D0 <CLIModeSupport.ab3@1240> XINCLUDE "CLIModeSupport.ab3"
000196FA <CLIModeSupport.ab3@1241> XINCLUDE "CLIModeSupport.ab3"
00019728 <CLIModeSupport.ab3@1243> XINCLUDE "CLIModeSupport.ab3"
0001972C <CLIModeSupport.ab3@1244> XINCLUDE "CLIModeSupport.ab3"
00019754 <CLIModeSupport.ab3@1245> XINCLUDE "CLIModeSupport.ab3"
00019756 <CLIModeSupport.ab3@1246> XINCLUDE "CLIModeSupport.ab3"
00019794 <CLIModeSupport.ab3@1247> XINCLUDE "CLIModeSupport.ab3"
00019798 <CLIModeSupport.ab3@1248> XINCLUDE "CLIModeSupport.ab3"
000197D6 <CLIModeSupport.ab3@1249> XINCLUDE "CLIModeSupport.ab3"
000197DA <CLIModeSupport.ab3@1250> XINCLUDE "CLIModeSupport.ab3"
00019818 <CLIModeSupport.ab3@1251> XINCLUDE "CLIModeSupport.ab3"
0001981C <CLIModeSupport.ab3@1252> XINCLUDE "CLIModeSupport.ab3"
0001985A <CLIModeSupport.ab3@1254> XINCLUDE "CLIModeSupport.ab3"
0001985E <CLIModeSupport.ab3@1255> XINCLUDE "CLIModeSupport.ab3"
00019884 <CLIModeSupport.ab3@1257> XINCLUDE "CLIModeSupport.ab3"
000198AA <CLIModeSupport.ab3@1258> XINCLUDE "CLIModeSupport.ab3"
000198D0 <CLIModeSupport.ab3@1259> XINCLUDE "CLIModeSupport.ab3"
000198F6 <CLIModeSupport.ab3@1260> XINCLUDE "CLIModeSupport.ab3"
0001991C <CLIModeSupport.ab3@1261> XINCLUDE "CLIModeSupport.ab3"
00019972 <CLIModeSupport.ab3@1262> XINCLUDE "CLIModeSupport.ab3"
000199C8 <CLIModeSupport.ab3@1263> XINCLUDE "CLIModeSupport.ab3"
00019A16 <CLIModeSupport.ab3@1264> XINCLUDE "CLIModeSupport.ab3"
00019A6C <CLIModeSupport.ab3@1265> XINCLUDE "CLIModeSupport.ab3"
00019A92 <CLIModeSupport.ab3@1266> XINCLUDE "CLIModeSupport.ab3"
00019AB8 <CLIModeSupport.ab3@1267> XINCLUDE "CLIModeSupport.ab3"
00019ADE <CLIModeSupport.ab3@1268> XINCLUDE "CLIModeSupport.ab3"
00019B34 <CLIModeSupport.ab3@1269> XINCLUDE "CLIModeSupport.ab3"
00019B82 <CLIModeSupport.ab3@1270> XINCLUDE "CLIModeSupport.ab3"
00019BD0 <CLIModeSupport.ab3@1271> XINCLUDE "CLIModeSupport.ab3"
00019C8A <CLIModeSupport.ab3@1272> XINCLUDE "CLIModeSupport.ab3"
00019CE0 <CLIModeSupport.ab3@1273> XINCLUDE "CLIModeSupport.ab3"
00019D06 <CLIModeSupport.ab3@1274> XINCLUDE "CLIModeSupport.ab3"
00019D2C <CLIModeSupport.ab3@1275> XINCLUDE "CLIModeSupport.ab3"
00019D52 <CLIModeSupport.ab3@1276> XINCLUDE "CLIModeSupport.ab3"
00019DA8 <CLIModeSupport.ab3@1277> XINCLUDE "CLIModeSupport.ab3"
00019DFE <CLIModeSupport.ab3@1278> XINCLUDE "CLIModeSupport.ab3"
00019E4C <CLIModeSupport.ab3@1279> XINCLUDE "CLIModeSupport.ab3"
00019E9A <CLIModeSupport.ab3@1280> XINCLUDE "CLIModeSupport.ab3"
00019EE8 <CLIModeSupport.ab3@1281> XINCLUDE "CLIModeSupport.ab3"
00019F36 <CLIModeSupport.ab3@1282> XINCLUDE "CLIModeSupport.ab3"
00019F84 <CLIModeSupport.ab3@1283> XINCLUDE "CLIModeSupport.ab3"
00019FD2 <CLIModeSupport.ab3@1284> XINCLUDE "CLIModeSupport.ab3"
0001A020 <CLIModeSupport.ab3@1285> XINCLUDE "CLIModeSupport.ab3"
0001A046 <CLIModeSupport.ab3@1286> XINCLUDE "CLIModeSupport.ab3"
0001A06C <CLIModeSupport.ab3@1287> XINCLUDE "CLIModeSupport.ab3"
0001A092 <CLIModeSupport.ab3@1288> XINCLUDE "CLIModeSupport.ab3"
0001A0E0 <CLIModeSupport.ab3@1289> XINCLUDE "CLIModeSupport.ab3"
0001A12E <CLIModeSupport.ab3@1290> XINCLUDE "CLIModeSupport.ab3"
0001A184 <CLIModeSupport.ab3@1291> XINCLUDE "CLIModeSupport.ab3"
0001A1D2 <CLIModeSupport.ab3@1292> XINCLUDE "CLIModeSupport.ab3"
0001A220 <CLIModeSupport.ab3@1293> XINCLUDE "CLIModeSupport.ab3"
0001A26E <CLIModeSupport.ab3@1294> XINCLUDE "CLIModeSupport.ab3"
0001A294 <CLIModeSupport.ab3@1295> XINCLUDE "CLIModeSupport.ab3"
0001A2BA <CLIModeSupport.ab3@1296> XINCLUDE "CLIModeSupport.ab3"
0001A2E0 <CLIModeSupport.ab3@1297> XINCLUDE "CLIModeSupport.ab3"
0001A318 <CLIModeSupport.ab3@1298> XINCLUDE "CLIModeSupport.ab3"
0001A340 <CLIModeSupport.ab3@1299> XINCLUDE "CLIModeSupport.ab3"
0001A354 <CLIModeSupport.ab3@1300> XINCLUDE "CLIModeSupport.ab3"
0001A3C8 <CLIModeSupport.ab3@1301> XINCLUDE "CLIModeSupport.ab3"
0001A40E <CLIModeSupport.ab3@1302> XINCLUDE "CLIModeSupport.ab3"
0001A4BC <CLIModeSupport.ab3@1303> XINCLUDE "CLIModeSupport.ab3"
0001A528 <CLIModeSupport.ab3@1304> XINCLUDE "CLIModeSupport.ab3"
0001A538 <CLIModeSupport.ab3@1305> XINCLUDE "CLIModeSupport.ab3"
0001A55E <CLIModeSupport.ab3@1307> XINCLUDE "CLIModeSupport.ab3"
0001A568 <CLIModeSupport.ab3@1309> XINCLUDE "CLIModeSupport.ab3"
0001A592 <CLIModeSupport.ab3@1310> XINCLUDE "CLIModeSupport.ab3"
0001A598 <CLIModeSupport.ab3@1311> XINCLUDE "CLIModeSupport.ab3"
0001A5A8 <CLIModeSupport.ab3@1313> XINCLUDE "CLIModeSupport.ab3"
0001A648 <CLIModeSupport.ab3@1315> XINCLUDE "CLIModeSupport.ab3"
0001A688 <CLIModeSupport.ab3@1316> XINCLUDE "CLIModeSupport.ab3"
0001A68E <CLIModeSupport.ab3@1318> XINCLUDE "CLIModeSupport.ab3"
0001A6F0 <CLIModeSupport.ab3@1319> XINCLUDE "CLIModeSupport.ab3"
0001A6FA <CLIModeSupport.ab3@1321> XINCLUDE "CLIModeSupport.ab3"
0001A704 <CLIModeSupport.ab3@1323> XINCLUDE "CLIModeSupport.ab3"
0001A71E <CLIModeSupport.ab3@1324> XINCLUDE "CLIModeSupport.ab3"
0001A740 <CLIModeSupport.ab3@1400> XINCLUDE "CLIModeSupport.ab3"
0001A762 <CLIModeSupport.ab3@1401> XINCLUDE "CLIModeSupport.ab3"
0001A7BC <CLIModeSupport.ab3@1402> XINCLUDE "CLIModeSupport.ab3"
0001A7DE <CLIModeSupport.ab3@1403> XINCLUDE "CLIModeSupport.ab3"
0001A800 <CLIModeSupport.ab3@1404> XINCLUDE "CLIModeSupport.ab3"
0001A85A <CLIModeSupport.ab3@1405> XINCLUDE "CLIModeSupport.ab3"
0001A89C <CLIModeSupport.ab3@1406> XINCLUDE "CLIModeSupport.ab3"
0001A8A2 <CLIModeSupport.ab3@1408> XINCLUDE "CLIModeSupport.ab3"
0001A8B0 <CLIModeSupport.ab3@1409> XINCLUDE "CLIModeSupport.ab3"
0001A8B6 <CLIModeSupport.ab3@1411> XINCLUDE "CLIModeSupport.ab3"
0001A8CA <CLIModeSupport.ab3@1412> XINCLUDE "CLIModeSupport.ab3"
0001A8D4 <CLIModeSupport.ab3@1413> XINCLUDE "CLIModeSupport.ab3"
0001A94E <CLIModeSupport.ab3@1414> XINCLUDE "CLIModeSupport.ab3"
0001A958 <CLIModeSupport.ab3@1415> XINCLUDE "CLIModeSupport.ab3"
0001A95E <CLIModeSupport.ab3@1416> XINCLUDE "CLIModeSupport.ab3"
0001A972 <CLIModeSupport.ab3@1419> XINCLUDE "CLIModeSupport.ab3"
0001A97C <CLIModeSupport.ab3@1420> XINCLUDE "CLIModeSupport.ab3"
0001A9FC <CLIModeSupport.ab3@1421> XINCLUDE "CLIModeSupport.ab3"
0001AA06 <CLIModeSupport.ab3@1422> XINCLUDE "CLIModeSupport.ab3"
0001AA0C <CLIModeSupport.ab3@1423> XINCLUDE "CLIModeSupport.ab3"
0001AA20 <CLIModeSupport.ab3@1426> XINCLUDE "CLIModeSupport.ab3"
0001AA2A <CLIModeSupport.ab3@1427> XINCLUDE "CLIModeSupport.ab3"
0001AA72 <CLIModeSupport.ab3@1428> XINCLUDE "CLIModeSupport.ab3"
0001AA80 <CLIModeSupport.ab3@1429> XINCLUDE "CLIModeSupport.ab3"
0001AAA6 <CLIModeSupport.ab3@1430> XINCLUDE "CLIModeSupport.ab3"
0001AAB0 <CLIModeSupport.ab3@1431> XINCLUDE "CLIModeSupport.ab3"
0001AB1A <CLIModeSupport.ab3@1432> XINCLUDE "CLIModeSupport.ab3"
0001ABEC <CLIModeSupport.ab3@1433> XINCLUDE "CLIModeSupport.ab3"
0001ABF6 <CLIModeSupport.ab3@1434> XINCLUDE "CLIModeSupport.ab3"
0001ABFC <CLIModeSupport.ab3@1435> XINCLUDE "CLIModeSupport.ab3"
0001AC06 <CLIModeSupport.ab3@1437> XINCLUDE "CLIModeSupport.ab3"
0001AC0C <CLIModeSupport.ab3@1438> XINCLUDE "CLIModeSupport.ab3"
0001AC20 <CLIModeSupport.ab3@1441> XINCLUDE "CLIModeSupport.ab3"
0001AC2A <CLIModeSupport.ab3@1442> XINCLUDE "CLIModeSupport.ab3"
0001AC72 <CLIModeSupport.ab3@1443> XINCLUDE "CLIModeSupport.ab3"
0001AC7C <CLIModeSupport.ab3@1444> XINCLUDE "CLIModeSupport.ab3"
0001AC82 <CLIModeSupport.ab3@1445> XINCLUDE "CLIModeSupport.ab3"
0001AC96 <CLIModeSupport.ab3@1448> XINCLUDE "CLIModeSupport.ab3"
0001ACBC <CLIModeSupport.ab3@1449> XINCLUDE "CLIModeSupport.ab3"
0001ACD0 <CLIModeSupport.ab3@1452> XINCLUDE "CLIModeSupport.ab3"
0001ACF6 <CLIModeSupport.ab3@1453> XINCLUDE "CLIModeSupport.ab3"
0001AD0A <CLIModeSupport.ab3@1456> XINCLUDE "CLIModeSupport.ab3"
0001AD30 <CLIModeSupport.ab3@1457> XINCLUDE "CLIModeSupport.ab3"
0001AD44 <CLIModeSupport.ab3@1460> XINCLUDE "CLIModeSupport.ab3"
0001AD4E <CLIModeSupport.ab3@1461> XINCLUDE "CLIModeSupport.ab3"
0001AD7C <CLIModeSupport.ab3@1462> XINCLUDE "CLIModeSupport.ab3"
0001ADCC <CLIModeSupport.ab3@1463> XINCLUDE "CLIModeSupport.ab3"
0001ADEC <CLIModeSupport.ab3@1464> XINCLUDE "CLIModeSupport.ab3"
0001AE04 <CLIModeSupport.ab3@1465> XINCLUDE "CLIModeSupport.ab3"
0001AEE8 <CLIModeSupport.ab3@1466> XINCLUDE "CLIModeSupport.ab3"
0001AEF2 <CLIModeSupport.ab3@1467> XINCLUDE "CLIModeSupport.ab3"
0001AEF8 <CLIModeSupport.ab3@1468> XINCLUDE "CLIModeSupport.ab3"
0001AEFA <CLIModeSupport.ab3@1470> XINCLUDE "CLIModeSupport.ab3"
0001AF0E <CLIModeSupport.ab3@1471> XINCLUDE "CLIModeSupport.ab3"
0001AF40 <CLIModeSupport.ab3@1474> XINCLUDE "CLIModeSupport.ab3"
0001AF46 <CLIModeSupport.ab3@1475> XINCLUDE "CLIModeSupport.ab3"
0001AF8A <CLIModeSupport.ab3@1476> XINCLUDE "CLIModeSupport.ab3"
0001AF9C <CLIModeSupport.ab3@1477> XINCLUDE "CLIModeSupport.ab3"
0001AFAE <CLIModeSupport.ab3@1478> XINCLUDE "CLIModeSupport.ab3"
0001AFB8 <CLIModeSupport.ab3@1479> XINCLUDE "CLIModeSupport.ab3"
0001AFBE <CLIModeSupport.ab3@1480> XINCLUDE "CLIModeSupport.ab3"
0001AFC8 <CLIModeSupport.ab3@1482> XINCLUDE "CLIModeSupport.ab3"
0001AFE2 <CLIModeSupport.ab3@1483> XINCLUDE "CLIModeSupport.ab3"
0001AFE2 <AmiBlitz3.ab3@93> XINCLUDE "CLIModeSupport.ab3"
0001B062 <AmiBlitz3.ab3@98> dynassign.s = dos_GetToolString{"ASSIGN",default_assign$}       ; replaced hardcoded path  tomsmart1 2012 03 09
0001B09A <AmiBlitz3.ab3@99> If dynassign <> ""
0001B0B0 <AmiBlitz3.ab3@100>     *AssignSema.SignalSemaphore = FindSemaphore_(&dynassign)    ; does it already exist?
0001B0BA <AmiBlitz3.ab3@101>     If *AssignSema
0001B0CA <AmiBlitz3.ab3@102>       ObtainSemaphoreShared_ *AssignSema
0001B0D0 <AmiBlitz3.ab3@103>     Else                                                        ; no, create one...
0001B0F0 <AmiBlitz3.ab3@104>       *AssignSema = AllocVec_ (SizeOf.SignalSemaphore,#MEMF_PUBLIC|#MEMF_CLEAR)
0001B0FA <AmiBlitz3.ab3@105>       If *AssignSema
0001B10A <AmiBlitz3.ab3@106>         InitSemaphore_ *AssignSema
0001B13E <AmiBlitz3.ab3@108>         *AssignSema\ss_Link\ln_Name = AllocVec_(FLen(dynassign)+1,#MEMF_PUBLIC|#MEMF_CLEAR)
0001B150 <AmiBlitz3.ab3@109>         If *AssignSema\ss_Link\ln_Name
0001B18C <AmiBlitz3.ab3@110>           Poke.s  *AssignSema\ss_Link\ln_Name,dynassign
0001B198 <AmiBlitz3.ab3@112>         *AssignSema\ss_Link\ln_Pri  = 1
0001B1A4 <AmiBlitz3.ab3@113>         *AssignSema\ss_Link\ln_Type = #NT_SIGNALSEM
0001B1B4 <AmiBlitz3.ab3@115>         AddSemaphore_ *AssignSema
0001B1C4 <AmiBlitz3.ab3@116>         ObtainSemaphoreShared_ *AssignSema
0001B210 <AmiBlitz3.ab3@122>   mydir.s = dos_GetProgDir{"Sys:"}
0001B270 <AmiBlitz3.ab3@123>   If dos_SetAssign{dynassign,mydir,False}
0001B304 <AmiBlitz3.ab3@124>     dos_AddAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001B33C <AmiBlitz3.ab3@127>   Poke$ ?str_blitz3assign,dynassign
0001B3BE <AmiBlitz3.ab3@128>   Poke$ ?str_defaultdbug,dos_AddPart{dynassign,"Debug/DefaultDBug"}
0001B440 <AmiBlitz3.ab3@131>   Poke$ ?str_path_acidlibs,dos_AddPart{dynassign, "BlitzLibs/AcidLibs"}
0001B4C2 <AmiBlitz3.ab3@132>   Poke$ ?str_path_deflibs ,dos_AddPart{dynassign, "BlitzLibs/DefLibs" }
0001B544 <AmiBlitz3.ab3@133>   Poke$ ?str_path_userlibs,dos_AddPart{dynassign, "BlitzLibs/UserLibs"}
0001B5C6 <AmiBlitz3.ab3@134>   Poke$ ?str_path_includes,dos_AddPart{dynassign, "Sourcecodes/Includes"}
0001B63A <AmiBlitz3.ab3@135>   my_systemdir$    = dos_AddPart{dynassign, "System"}
0001B6AE <AmiBlitz3.ab3@136>   my_residentsdir$ = dos_AddPart{dynassign, "BlitzLibs/Residents"}
0001B722 <AmiBlitz3.ab3@137>   my_blitzlibsdir$ = dos_AddPart{dynassign, "BlitzLibs"}
0001B750 <AmiBlitz3.ab3@138>   dos_CreateDir{my_blitzlibsdir$}
0001B774 <AmiBlitz3.ab3@139>   dos_CreateDir{Peek$(?str_path_userlibs)}
0001B7A2 <AmiBlitz3.ab3@140>   dos_CreateDir{my_residentsdir$}
0001B7D0 <AmiBlitz3.ab3@141>   dos_CreateDir{my_systemdir$}
0001B89A <AmiBlitz3.ab3@147> pedfile$ = dos_GetToolString{"EDITOR",dos_AddPart{my_systemdir$,"PED"}}
0001B8D2 <AmiBlitz3.ab3@148> Poke.s ?str_pedfile,pedfile$
0001B910 <AmiBlitz3.ab3@150> If dos_GetToolState{"START_WITHOUT_LIBS"} = -1
0001B920 <AmiBlitz3.ab3@151>   Poke.b ?start_without_libs,1
0001B926 <AmiBlitz3.ab3@152> Else
0001B936 <AmiBlitz3.ab3@153>   Poke.b ?start_without_libs,0
0001B974 <AmiBlitz3.ab3@156> If dos_GetToolState{"ONEPASSCOMPILING"} = -1
0001B97A <AmiBlitz3.ab3@157>   OnePassCompiling.l = True
0001B980 <AmiBlitz3.ab3@158> Else
0001B986 <AmiBlitz3.ab3@159>   OnePassCompiling   = False
0001B9AC <AmiBlitz3.ab3@162> !TRANS_INIT{"AmiBlitz3"}     ; init localization via translation.include
0001B9DA <AmiBlitz3.ab3@167> If ( FindResident_("MorphOS") )
0001B9EA <AmiBlitz3.ab3@168>   Poke.b ?MorphOS,1      ; set it to use CacheClear_E
0001B9F0 <AmiBlitz3.ab3@169> Else
0001BA00 <AmiBlitz3.ab3@170>   Poke.b ?MorphOS,0      ; set it to use CacheClear_U
0001BA06 <AmiBlitz3.ab3@175>  releaseexe.l               = False
0001BA0C <AmiBlitz3.ab3@176>  releasedbg_save.w          = 0
0001BA12 <AmiBlitz3.ab3@177>  releasemakesmall_save.b    = 0
0001BA18 <AmiBlitz3.ab3@178>  releasefuncoptimize_save.b = 0
0001BA1E <AmiBlitz3.ab3@179>  releasedebugger_save.b     = 0
0001BA34 <AmiBlitz3.ab3@182> 
0001BA84 <AmiBlitz3.ab3@183>  comstatusstr   = !TRANS{"Initializing Compiler..."} ;default settings
0001BA8C <AmiBlitz3.ab3@184>  calcpro.l      = 0
0001BA94 <AmiBlitz3.ab3@185>  calcpro_old.l  = 0
0001BAA0 <AmiBlitz3.ab3@186>  typ_old.l      = -1
0001BAAC <AmiBlitz3.ab3@187>  pass_old.l     = -1
0001BAB2 <AmiBlitz3.ab3@188>  update_comstatus_gui.b = False ; for the first
0001BABE <AmiBlitz3.ab3@191> dbg_fid.l = -1 ; no debug file id yet!
0001BAD0 <AmiBlitz3.ab3@194> Poke.l ?maxerrorcount,#defaultmaxerrorcount                ; set the default value  tomsmart1
0001BADA <AmiBlitz3.ab3@196> If CLIMode
0001BAE0 <AmiBlitz3.ab3@199>   err.l      = False                                       ; indicate that an error has occured
0001BAE6 <AmiBlitz3.ab3@200>   showhelp.l = False                                       ; show the CLI tool's help
0001BB3E <AmiBlitz3.ab3@203>   cli_progpath.s      = dos_GetProgDir{default_assign$}    ; replaced hardcoded path  tomsmart1 2012 03 09
0001BB66 <AmiBlitz3.ab3@204>   cli_sourcefile.s    = ""
0001BB8E <AmiBlitz3.ab3@205>   cli_exefile.s       = ""
0001BBB6 <AmiBlitz3.ab3@206>   cli_savefile.s      = ""
0001BBDE <AmiBlitz3.ab3@207>   cli_dumpfile.s      = ""
0001BC06 <AmiBlitz3.ab3@208>   cli_includepath.s   = ""
0001BC2E <AmiBlitz3.ab3@209>   cli_blitzlibpath.s  = ""
0001BC34 <AmiBlitz3.ab3@210>   cli_debuginfo.l     = False
0001BC3A <AmiBlitz3.ab3@211>   cli_run.l           = False
0001BC42 <AmiBlitz3.ab3@212>   cli_dumpflags.l     = $FFFFFFFF
0001BC6A <AmiBlitz3.ab3@213>   cli_info.s          = ""
0001BC70 <AmiBlitz3.ab3@214>   cli_release.l       = False
0001BC7A <AmiBlitz3.ab3@215>   cli_numargs.l       = dos_GetNumArgs{}
0001BC80 <AmiBlitz3.ab3@216>   cli_gui.l           = False
0001BC88 <AmiBlitz3.ab3@217>   cli_dumpform.l      = 1 ; 0 = bin, 1 = ASCII
0001BC90 <AmiBlitz3.ab3@218>   cli_verbose.l       = 1
0001BC98 <AmiBlitz3.ab3@219>   cli_comdbgflags.l   = $00000000             ; added to support compiler and debugger settings via CLI  tomsmart1
0001BCA0 <AmiBlitz3.ab3@220>   cli_comstrbufsize.l = 0
0001BCA8 <AmiBlitz3.ab3@221>   cli_exestacksize.l  = 0
0001BCB0 <AmiBlitz3.ab3@222>   cli_maxerrors.l     = 0                     ; added to make maxerrorcount changable in CLIMode  tomsmart1
0001BCB6 <AmiBlitz3.ab3@223>   OnePassCompiling    = False
0001BCCE <AmiBlitz3.ab3@224>   If cli_numargs=0 Then showhelp=True
0001BCFE <AmiBlitz3.ab3@228>     arg.s = dos_GetNextArg{}                               ; get the next CLI argument
0001BD4A <AmiBlitz3.ab3@229>     larg.s = LCase$(arg)                                   ; lower case the option string
0001BE12 <AmiBlitz3.ab3@230>     If Left$(larg,1)="-" Then larg = Right$(larg,FLen(larg)-1)
0001BE48 <AmiBlitz3.ab3@231>     Select larg
0001BE94 <AmiBlitz3.ab3@232>       Case "s" : larg="source"
0001BEE6 <AmiBlitz3.ab3@233>       Case "e" : larg="exe"
0001BF38 <AmiBlitz3.ab3@234>       Case "d" : larg="debug"
0001BF8A <AmiBlitz3.ab3@235>       Case "r" : larg="release"
0001BFDC <AmiBlitz3.ab3@236>       Case "h" : larg="help"
0001C02E <AmiBlitz3.ab3@237>       Case "v" : larg="verbose"
0001C080 <AmiBlitz3.ab3@238>       Case "1" : larg="1pass"
0001C08E <AmiBlitz3.ab3@239>     End Select
0001C0C4 <AmiBlitz3.ab3@241>     Select larg
0001C118 <AmiBlitz3.ab3@242>       Case "exe"      : cli_exefile     = dos_GetNextArg{}
0001C172 <AmiBlitz3.ab3@243>       Case "source"   : cli_sourcefile  = dos_GetNextArg{}
0001C1CC <AmiBlitz3.ab3@244>       Case "save"     : cli_savefile    = dos_GetNextArg{}
0001C1FC <AmiBlitz3.ab3@245>       Case "debug"    : cli_debuginfo   = True
0001C22C <AmiBlitz3.ab3@246>       Case "run"      : cli_run         = True
0001C25C <AmiBlitz3.ab3@247>       Case "release"  : cli_release     = True
0001C28C <AmiBlitz3.ab3@248>       Case "ped"      : cli_gui         = True
0001C2E6 <AmiBlitz3.ab3@249>       Case "dform"    : cli_dumpform.l  = Vallong(dos_GetNextArg{})
0001C358 <AmiBlitz3.ab3@250>       Case "dump"     : cli_info        = LCase$(dos_GetNextArg{})
0001C388 <AmiBlitz3.ab3@251>                         cli_dumpfile    = dos_GetNextArg{}
0001C390 <AmiBlitz3.ab3@252>                         cli_dumpflags   = $0
0001C3F0 <AmiBlitz3.ab3@253>                         If Instr(cli_info,"all"  ) Then cli_dumpflags | $FFFFFFFF
0001C450 <AmiBlitz3.ab3@254>                         If Instr(cli_info,"token") Then cli_dumpflags | #DUMPFLG_TOKENS
0001C4B0 <AmiBlitz3.ab3@255>                         If Instr(cli_info,"label") Then cli_dumpflags | #DUMPFLG_LABELS
0001C510 <AmiBlitz3.ab3@256>                         If Instr(cli_info,"var"  ) Then cli_dumpflags | #DUMPFLG_VARS
0001C570 <AmiBlitz3.ab3@257>                         If Instr(cli_info,"const") Then cli_dumpflags | #DUMPFLG_CONSTANTS
0001C5D0 <AmiBlitz3.ab3@258>                         If Instr(cli_info,"func" ) Then cli_dumpflags | #DUMPFLG_FUNCTIONS
0001C630 <AmiBlitz3.ab3@259>                         If Instr(cli_info,"macro") Then cli_dumpflags | #DUMPFLG_MACROS
0001C690 <AmiBlitz3.ab3@260>                         If Instr(cli_info,"type" ) Then cli_dumpflags | #DUMPFLG_NEWTYPES
0001C6F0 <AmiBlitz3.ab3@261>                         If Instr(cli_info,"lib"  ) Then cli_dumpflags | #DUMPFLG_LIBS
0001C702 <AmiBlitz3.ab3@262>                         If cli_dumpflags = $0
0001C708 <AmiBlitz3.ab3@263>                          err=True
0001C79C <AmiBlitz3.ab3@264>                          NPrint "\\1b[1m*** ERROR: Invalid flags for dumpfile \\22",cli_info,"\\22 specified!\\1b[0m"
0001C80E <AmiBlitz3.ab3@267>       Case "setcom"   : cli_setcom.s    = LCase$(dos_GetNextArg{})
0001C816 <AmiBlitz3.ab3@268>                         cli_comflags.l  = $0
0001C876 <AmiBlitz3.ab3@269>                         If Instr(cli_setcom,"icon"  ) Then cli_comflags | #CLI_COMSETICONFLAG     ; create Icon
0001C8D6 <AmiBlitz3.ab3@270>                         If Instr(cli_setcom,"small" ) Then cli_comflags | #CLI_COMSETSMALLFLAG    ; make smallest code
0001C936 <AmiBlitz3.ab3@271>                         If Instr(cli_setcom,"func"  ) Then cli_comflags | #CLI_COMSETFUNCFLAG     ; use Functionoptimizer
0001C996 <AmiBlitz3.ab3@272> 
0001C9F6 <AmiBlitz3.ab3@273>                         If Instr(cli_setcom,"dbgf"  ) Then cli_comflags | #CLI_COMSETDBGFFLAG     ; create a .dbf file
0001CA10 <AmiBlitz3.ab3@274>                         If (cli_comflags & #CLI_COMSETALLFLAGS) = 0                               ; test if args are correct
0001CA16 <AmiBlitz3.ab3@275>                           err=True                                                                ; no
0001CAAA <AmiBlitz3.ab3@276>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setcom \\22",cli_setcom,"\\22 specified!\\1b[0m"
0001CAB0 <AmiBlitz3.ab3@277>                         Else
0001CABE <AmiBlitz3.ab3@278>                           cli_comdbgflags | cli_comflags                                          ; yes then add it
0001CB30 <AmiBlitz3.ab3@281>       Case "setdbg"   : cli_setdbg.s    = LCase$(dos_GetNextArg{})
0001CB38 <AmiBlitz3.ab3@282>                         cli_dbgflags.l  = $0
0001CB98 <AmiBlitz3.ab3@283>                         If Instr(cli_setdbg,"auto" ) Then cli_dbgflags | #CLI_DEBUGAUTOFLAG       ; autorun
0001CBF8 <AmiBlitz3.ab3@284>                         If Instr(cli_setdbg,"irq"  ) Then cli_dbgflags | #CLI_DEBUGIRQFLAG        ; interrupt check
0001CC58 <AmiBlitz3.ab3@285>                         If Instr(cli_setdbg,"asm"  ) Then cli_dbgflags | #CLI_DEBUGASMFLAG        ; assembler check
0001CCB8 <AmiBlitz3.ab3@286>                         If Instr(cli_setdbg,"ofl"  ) Then cli_dbgflags | #CLI_DEBUGOFLFLAG        ; overflow check
0001CCD2 <AmiBlitz3.ab3@287>                         If (cli_dbgflags & #CLI_DEBUGALLFLAGS) = 0                                ; yes then add it
0001CCD8 <AmiBlitz3.ab3@288>                           err=True                                                                ; no
0001CD6C <AmiBlitz3.ab3@289>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setdbg \\22",cli_setdbg,"\\22 specified!\\1b[0m"
0001CD72 <AmiBlitz3.ab3@290>                         Else
0001CD80 <AmiBlitz3.ab3@291>                           cli_comdbgflags | cli_dbgflags                                          ; yes then add it
0001CDDA <AmiBlitz3.ab3@293>       Case "strbufsize": cli_comstrbufsize = Vallong(dos_GetNextArg{})
0001CE34 <AmiBlitz3.ab3@294>       Case "stacksize" : cli_exestacksize  = Vallong(dos_GetNextArg{})
0001CE8E <AmiBlitz3.ab3@295> 
0001CEB4 <AmiBlitz3.ab3@296>                          If ((cli_maxerrors > 0) AND (cli_maxerrors <4097))                        ; check
0001CEC4 <AmiBlitz3.ab3@297>                            Poke.l ?maxerrorcount,cli_maxerrors
0001CEF4 <AmiBlitz3.ab3@299>       Case "1pass"     : OnePassCompiling = True   ; added to use big buffers for compile so only 1 pass is needed  tomsmart1
0001CF4E <AmiBlitz3.ab3@300>       Case "verbose"   : cli_verbose      = Vallong(dos_GetNextArg{})
0001CF7E <AmiBlitz3.ab3@301>       Case "help"      : showhelp         = True             ; show the help and quit
0001CF84 <AmiBlitz3.ab3@302>       Default
0001CFBC <AmiBlitz3.ab3@303>         If arg><""
0001D050 <AmiBlitz3.ab3@304>           NPrint "\\1b[1m*** ERROR: Unknown option \\22",arg,"\\22 specified!\\1b[0m"
0001D056 <AmiBlitz3.ab3@305>           err = True
0001D064 <AmiBlitz3.ab3@307>     End Select
0001D0B0 <AmiBlitz3.ab3@308>   Until arg = "" OR err=True          ; until we processed all arguments
0001D0D2 <AmiBlitz3.ab3@311>   If err><False OR showhelp = True
0001D0DC <AmiBlitz3.ab3@312>     If showhelp
0001D13E <AmiBlitz3.ab3@313>     NPrint "AmiBlitz ",Peek.s(?myversion)
0001D176 <AmiBlitz3.ab3@314>     NPrint "\\nSyntax: AmiBlitz3 [options]"
0001D1AE <AmiBlitz3.ab3@315>     NPrint "\\nOptions:"
0001D1E6 <AmiBlitz3.ab3@316>     NPrint "  -(s)ource <file>    : input source code filename (bb2, ab2 or ab3)"
0001D21E <AmiBlitz3.ab3@317>     NPrint "  -(e)xe <file>       : output executable filename"
0001D256 <AmiBlitz3.ab3@318>     NPrint "  -(d)ebug            : compile and start runtime debugger"
0001D28E <AmiBlitz3.ab3@319>     NPrint "  -(r)elease          : create release executable (size optimized)"
0001D2C6 <AmiBlitz3.ab3@320>     NPrint "  -run                : run compiled program"
0001D2FE <AmiBlitz3.ab3@321>     NPrint "  -dump <info> <file> : dump compiler internals to file"
0001D336 <AmiBlitz3.ab3@322>     NPrint "                        (info=all|token|label|var|func|const|macro|type|lib)"
0001D36E <AmiBlitz3.ab3@323>     NPrint "  -setcom <options>   : set compiler settings (options=icon|small|func|ldbg|dbgf)"       ; added  tomsmart1
0001D3A6 <AmiBlitz3.ab3@324>     NPrint "  -setdbg <check>     : set debugger settings (check=auto|irq|asm|ofl)"                  ; added  tomsmart1
0001D3DE <AmiBlitz3.ab3@325>     NPrint "  -strbufsize <n>     : set the string buffer size of the compiler"                      ; added  tomsmart1
0001D416 <AmiBlitz3.ab3@326>     NPrint "  -stacksize <n>      : set the stacksize for the exe if it run/debug"                   ; added  tomsmart1
0001D44E <AmiBlitz3.ab3@327>     NPrint "  -maxerrors <n>      : set maxerrorcounter of the compiler (1-4096; default=99)"        ; added  tomsmart1
0001D486 <AmiBlitz3.ab3@328>     NPrint "  -(1)pass            : use large buffers for compile"
0001D4BE <AmiBlitz3.ab3@329>     NPrint "  -dform <n>          : format of compiler internals dump (0=bin, 1=ASCII; default=1)"
0001D4F6 <AmiBlitz3.ab3@330>     NPrint "  -PED                : start AmiBlitz3 IDE (PED)"
0001D52E <AmiBlitz3.ab3@331>     NPrint "  -save <file>        : re-save source code (convert format, if needed)"
0001D566 <AmiBlitz3.ab3@332>     NPrint "  -(v)erbose <n>      : set verbose level (0, 1 or 2; default=1)"
0001D59E <AmiBlitz3.ab3@333>     NPrint "  -(h)elp             : show this help"
0001D5D6 <AmiBlitz3.ab3@334>     NPrint "\\nExample:"
0001D60E <AmiBlitz3.ab3@335>     NPrint "  AmiBlitz3 -s \\22DH0:Sourcecodes/MyProgram.ab3\\22 -e RAM:MyProgram.exe"
0001D646 <AmiBlitz3.ab3@336>     NPrint "\\nNote: To start the AmiBlitz3 IDE, run from Workbench or with -PED option."
0001D64C <AmiBlitz3.ab3@339>     Goto abnormal_exit
0001D668 <AmiBlitz3.ab3@342>   If cli_gui        Then CLIMode = False : error_SetFlags{#error_requester}
0001D6CC <AmiBlitz3.ab3@343>   If cli_sourcefile Then Poke.s ?str_tempfilename,cli_sourcefile
0001D6DC <AmiBlitz3.ab3@346> Poke.l ?CLIMode,CLIMode
0001D700 <AmiBlitz3.ab3@381>   Dim incdim.s (#maxincludes)
0001D724 <AmiBlitz3.ab3@382>   Dim incline.l(#maxincludes)
0001D73E <AmiBlitz3.ab3@650> Function.s Get_Libinfo{addr_libnum.l}
0001D74A <AmiBlitz3.ab3@652>   lib_ab2.b = False : lib_os.b = False
0001D750 <AmiBlitz3.ab3@653>   addr_counter.l = addr_libnum
0001D758 <AmiBlitz3.ab3@654>   skip.l = 0
0001D76A <AmiBlitz3.ab3@655>   If addr_counter=0
0001D7A4 <AmiBlitz3.ab3@656>     error{"INTERNAL: \\__THIS_FUNCTION: Invalid pointer!"}
0001D7C2 <AmiBlitz3.ab3@657>     Function Return ""
0001D7D0 <AmiBlitz3.ab3@662>     mem.l = Peek.l(addr_counter)
0001D7DE <AmiBlitz3.ab3@667>     addr_counter + 2
0001D7FE <AmiBlitz3.ab3@668>     If (mem = $0000ffff) Then lib_ab2= True : skip = 8
0001D818 <AmiBlitz3.ab3@669>     If (mem LSR 16) = $ffe2
0001D81E <AmiBlitz3.ab3@671>       lib_os = True
0001D826 <AmiBlitz3.ab3@672>       skip = 10
0001D86C <AmiBlitz3.ab3@673>       If Peek$(addr_counter+skip) = "" Then skip + 4
0001D8B0 <AmiBlitz3.ab3@675>   Until (lib_ab2=True OR lib_os = True) OR (addr_counter>addr_libnum + $400)
0001D8C6 <AmiBlitz3.ab3@677>   If (addr_counter>addr_libnum + $400)
0001D8E4 <AmiBlitz3.ab3@679>     Function Return ""
0001D8EA <AmiBlitz3.ab3@680>   Else
0001D90E <AmiBlitz3.ab3@681>     Function Return Peek$(addr_counter + skip)
0001D918 <AmiBlitz3.ab3@683> End Function
0001D936 <AmiBlitz3.ab3@728>   !asm
0001D93C <AmiBlitz3.ab3@729>   MOVEA.l _execbase,A6
0001D940 <AmiBlitz3.ab3@730>   MOVEM.l d0/a0,-(a7)
0001D942 <AmiBlitz3.ab3@732>   MOVEQ #127,d0
0001D948 <AmiBlitz3.ab3@733>   LEA chartab,a0
0001D94E <AmiBlitz3.ab3@736>     MOVE.b #1,128(a0)
0001D950 <AmiBlitz3.ab3@737>     CLR.b (a0)+
0001D954 <AmiBlitz3.ab3@738>   DBF d0,'l12
0001D95A <AmiBlitz3.ab3@740>   LEA chartab,a0
0001D95E <AmiBlitz3.ab3@741>   MOVE.b #1,(a0)
0001D964 <AmiBlitz3.ab3@742>   MOVE.b #1,","(a0)
0001D96A <AmiBlitz3.ab3@743>   MOVE.b #1,";"(a0)
0001D970 <AmiBlitz3.ab3@744>   MOVE.b #1,":"(a0)
0001D976 <AmiBlitz3.ab3@745>   MOVE.b #1,"("(a0)
0001D97C <AmiBlitz3.ab3@746>   MOVE.b #1,")"(a0)
0001D982 <AmiBlitz3.ab3@747>   MOVE.b #1,"="(a0)
0001D988 <AmiBlitz3.ab3@748>   MOVE.b #1,"+"(a0)
0001D98E <AmiBlitz3.ab3@749>   MOVE.b #1,"-"(a0)
0001D994 <AmiBlitz3.ab3@750>   MOVE.b #1,"*"(a0)
0001D99A <AmiBlitz3.ab3@751>   MOVE.b #1,"/"(a0)
0001D9A0 <AmiBlitz3.ab3@752>   MOVE.b #1,"$"(a0)
0001D9A6 <AmiBlitz3.ab3@753>   MOVE.b #1,"%"(a0)
0001D9AC <AmiBlitz3.ab3@754>   MOVE.b #1,"."(a0)
0001D9B2 <AmiBlitz3.ab3@755>   MOVE.b #1,"["(a0)
0001D9B8 <AmiBlitz3.ab3@756>   MOVE.b #1,"]"(a0)
0001D9BE <AmiBlitz3.ab3@757>   MOVE.b #1,"{"(a0)
0001D9C4 <AmiBlitz3.ab3@758>   MOVE.b #1,"}"(a0)
0001D9CA <AmiBlitz3.ab3@759>   MOVE.b #1,"\"(a0)
0001D9D0 <AmiBlitz3.ab3@760>   MOVE.b #1,">"(a0)
0001D9D6 <AmiBlitz3.ab3@761>   MOVE.b #1,"<"(a0)
0001D9DC <AmiBlitz3.ab3@762>   MOVE.b #1,"&"(a0)
0001D9E2 <AmiBlitz3.ab3@763>   MOVE.b #1,"|"(a0)
0001D9E8 <AmiBlitz3.ab3@764>   MOVE.b #1,"^"(a0)
0001D9EE <AmiBlitz3.ab3@765>   MOVE.b #1,$7e(a0)
0001D9F4 <AmiBlitz3.ab3@766>   MOVE.w #$0101,1(a0)
0001D9FA <AmiBlitz3.ab3@768>   LEA instrtab,a0
0001DA00 <AmiBlitz3.ab3@769>   MOVE.l #labelhash-instrtab,d0
0001DA02 <AmiBlitz3.ab3@770>   ASR.l #2,d0
0001DA04 <AmiBlitz3.ab3@771>   SUBQ.l #1,d0
0001DA06 <AmiBlitz3.ab3@774>    CLR.l (a0)+
0001DA08 <AmiBlitz3.ab3@775>    SUBQ.l #1,d0
0001DA0C <AmiBlitz3.ab3@776>   BNE 'l10
0001DA12 <AmiBlitz3.ab3@778>   LEA allowtab,a0
0001DA18 <AmiBlitz3.ab3@779>   MOVE.l #255,d0
0001DA1A <AmiBlitz3.ab3@782>     CLR.b (a0)+
0001DA1E <AmiBlitz3.ab3@783>   DBF d0,'la1
0001DA24 <AmiBlitz3.ab3@785>   LEA allowtab,a0
0001DA2A <AmiBlitz3.ab3@786>   MOVE.b #1,$7d(a0)
0001DA30 <AmiBlitz3.ab3@787>   MOVE.b #1,$7c(a0)
0001DA36 <AmiBlitz3.ab3@788>   MOVE.b #1,$44(a0)
0001DA3C <AmiBlitz3.ab3@789>   MOVE.b #1,$45(a0)
0001DA42 <AmiBlitz3.ab3@790>   MOVE.b #1,$b9(a0)
0001DA48 <AmiBlitz3.ab3@791>   MOVE.b #1,$89(a0)
0001DA4E <AmiBlitz3.ab3@792>   MOVE.b #1,$ce(a0)
0001DA54 <AmiBlitz3.ab3@793>   MOVE.b #1,$cf(a0)
0001DA5A <AmiBlitz3.ab3@794>   MOVE.b #1,$d0(a0)
0001DA60 <AmiBlitz3.ab3@795>   MOVE.b #1,$cd(a0)
0001DA62 <AmiBlitz3.ab3@796>   MOVEQ #0,d0
0001DA68 <AmiBlitz3.ab3@798>   MOVEA.l _execbase,a6
0001DA6E <AmiBlitz3.ab3@803>   MOVE.l #$10000,d0
0001DA74 <AmiBlitz3.ab3@804>   MOVE.l #80000,d1
0001DA76 <AmiBlitz3.ab3@805>   MOVE.l d1,d2
0001DA7A <AmiBlitz3.ab3@806>   JSR _CreatePool(a6)                                      ; alloc memory for own stuff
0001DA80 <AmiBlitz3.ab3@807>   MOVE.l d0,mempool
0001DA84 <AmiBlitz3.ab3@808>   MOVEM.l (a7)+,d0/a0
0001DA8A <AmiBlitz3.ab3@809>   TST.l mempool
0001DA8E <AmiBlitz3.ab3@810>   BEQ shutdown_compiler
0001DA92 <AmiBlitz3.ab3@812>   MOVEA.l $114(A6),A4                                      ; get adress of this.Task-Structure
0001DA98 <AmiBlitz3.ab3@813>   MOVE.l A4,ptr_ThisTask
0001DA9C <AmiBlitz3.ab3@815>   BSR.w open_doslibrary
0001DAA0 <AmiBlitz3.ab3@816>   BEQ.w shutdown_compiler
0001DAA6 <AmiBlitz3.ab3@818>   MOVE.l D2,stacksize
0001DAA8 <AmiBlitz3.ab3@825>   MOVEQ.l #$00,D0
0001DAAE <AmiBlitz3.ab3@826>   LEA tokens,A0
0001DAB0 <AmiBlitz3.ab3@829>     ADDQ.w #1,D0
0001DAB2 <AmiBlitz3.ab3@830>     MOVE.l (A0),D1
0001DAB6 <AmiBlitz3.ab3@831>     BEQ.w 'gotlast
0001DAB8 <AmiBlitz3.ab3@832>     MOVEA.l D1,A0
0001DABC <AmiBlitz3.ab3@833>  BRA.w 'loop
0001DAC2 <AmiBlitz3.ab3@836>   MOVE.l A0,end_of_tokenlist
0001DAC6 <AmiBlitz3.ab3@838>   BSR.w makeasmtable
0001DACE <AmiBlitz3.ab3@840>   MOVE.w #$FFFF,returncode_org    ; was -1                         ;#-1,returncode
0001DAD2 <AmiBlitz3.ab3@842>   BSR.w open_mathlibrary
0001DAD6 <AmiBlitz3.ab3@843>   BEQ.w freemem_and_quit4
0001DADC <AmiBlitz3.ab3@845>   MOVE.l constmaxpc,D0
0001DADE <AmiBlitz3.ab3@846>   MOVEQ.l #$02,D1                                          ;chipmem            ;01 org source
0001DAE4 <AmiBlitz3.ab3@847>   MOVEA.l _execbase,A6
0001DAE8 <AmiBlitz3.ab3@848>   JSR _AllocMem(A6)                                        ;mem for branch routine
0001DAEE <AmiBlitz3.ab3@849>   MOVE.l D0,constpcat
0001DAF2 <AmiBlitz3.ab3@850>   BEQ.w freemem_and_quit3
0001DAF8 <AmiBlitz3.ab3@851>   ADD.l constmaxpc,D0
0001DAFE <AmiBlitz3.ab3@852>   MOVE.l D0,constlibat
0001DB04 <AmiBlitz3.ab3@854>   MOVE.l macrobuffer_size,D0
0001DB0A <AmiBlitz3.ab3@856>   CMP.l #DEFAULT_MACROBUFFERSIZE,d0                        ; replaced by a constant  tomsmart1
0001DB0E <AmiBlitz3.ab3@857>   BGE 'ok
0001DB14 <AmiBlitz3.ab3@858>     MOVE.l #DEFAULT_MACROBUFFERSIZE,d0
0001DB1A <AmiBlitz3.ab3@859>     MOVE.l d0,macrobuffer_size                             ; replaced with a constant tomsmart1
0001DB1C <AmiBlitz3.ab3@862>   ADDQ.l #4,d0
0001DB1E <AmiBlitz3.ab3@864>   MOVEQ.l #$01,D1
0001DB24 <AmiBlitz3.ab3@865>   MOVEA.l _execbase,A6
0001DB28 <AmiBlitz3.ab3@866>   JSR _AllocMem(A6)                                        ;macro mem
0001DB2A <AmiBlitz3.ab3@868>   MOVE.l d0,a0
0001DB30 <AmiBlitz3.ab3@869>   MOVE.l macrobuffer_size,(a0)+
0001DB32 <AmiBlitz3.ab3@870>   MOVE.l a0,d0
0001DB38 <AmiBlitz3.ab3@872>   MOVE.l D0,ptr_macrobuffer_begin
0001DB3C <AmiBlitz3.ab3@873>   BEQ.w freemem_and_quit2
0001DB42 <AmiBlitz3.ab3@874>   ADD.l macrobuffer_size,D0
0001DB48 <AmiBlitz3.ab3@875>   MOVE.l D0,ptr_macrobuffer_end
0001DB4E <AmiBlitz3.ab3@878>   TST.l CLIMode
0001DB52 <AmiBlitz3.ab3@879>   BEQ load_ped
0001DB7C <AmiBlitz3.ab3@882>   !basic
0001DB86 <AmiBlitz3.ab3@883>   succ.l = InitEmulatedPED{}
0001DB8A <AmiBlitz3.ab3@884>   GetD0 succ
0001DBA8 <AmiBlitz3.ab3@885>   !asm
0001DBAA <AmiBlitz3.ab3@886>   TST.l d0
0001DBAE <AmiBlitz3.ab3@887>   BEQ freemem_and_quit
0001DBB4 <AmiBlitz3.ab3@888> JMP skip_ped
0001DBBA <AmiBlitz3.ab3@894>   MOVE.l #str_pedfile,D1                                   ; Load PED
0001DBC0 <AmiBlitz3.ab3@895>   MOVEA.l _dosbase,A6
0001DBC4 <AmiBlitz3.ab3@896>   JSR _LoadSeg(A6)
0001DBCA <AmiBlitz3.ab3@897>   MOVE.l D0,ptr_seg_ped
0001DBCE <AmiBlitz3.ab3@899>   BEQ.w cant_load_PED         ; was freemem_and_quit  added error massage  that we can't load it  tomsmart1  2012 03
0001DBD0 <AmiBlitz3.ab3@903>   MOVEA.l D0,A2
0001DBD2 <AmiBlitz3.ab3@904>   ADDA.l A2,A2
0001DBD4 <AmiBlitz3.ab3@905>   ADDA.l A2,A2
0001DBDA <AmiBlitz3.ab3@907>   LEA teddata,a1                                           ;lea edstruct,A1
0001DBE0 <AmiBlitz3.ab3@908>   MOVE.l #"TEDY",d1
0001DBE4 <AmiBlitz3.ab3@909>   JSR 4(A2)                                                ; Run PED
0001DBEA <AmiBlitz3.ab3@911>   MOVE.l A0,ped_startup_addr                               ; PED returns address of routine "startup_code"
0001DBF0 <AmiBlitz3.ab3@912>   MOVE.l A1,comdata                                        ; PED returns address of comdata-area in A1
0001DC2E <AmiBlitz3.ab3@914>   !ComData_GetW{comWord_PEDIsAvailable,D0}                 ; if PED_IsAvailable=0, quit AmiBlitz
0001DC32 <AmiBlitz3.ab3@915>   BEQ.w unload_ped
0001DC36 <AmiBlitz3.ab3@916> 
0001DC3A <AmiBlitz3.ab3@917>   BNE old_version_of_PED                                   ; no, than exit
0001DC78 <AmiBlitz3.ab3@923>   !ComData_GetL{comData_Magic,D0}
0001DC7E <AmiBlitz3.ab3@924>   CMP.l ##MagicIdentifier_Long,D0                          ;"~::~",D0    ; replace with a constants  tomsmart1 2012 03 09
0001DC82 <AmiBlitz3.ab3@925>   BNE unload_ped
0001DCBA <AmiBlitz3.ab3@928>   !ComData_SetL{comPtr_Trap15            ,#directTrap15 }
0001DCF2 <AmiBlitz3.ab3@929>   !ComData_SetL{comPtr_DirectBuffer      ,#directbuffer}
0001DD2A <AmiBlitz3.ab3@930>   !ComData_SetL{comPtr_MacroBase         ,#macrobase}
0001DD62 <AmiBlitz3.ab3@931>   !ComData_SetL{comPtr_VarBase           ,#varbase }
0001DD9A <AmiBlitz3.ab3@932>   !ComData_SetL{comPtr_InstrBase         ,#instrtab}
0001DDD2 <AmiBlitz3.ab3@933>   !ComData_SetL{comPtr_LibPointer        ,#libpointer}
0001DE0A <AmiBlitz3.ab3@934>   !ComData_SetL{comPtr_CompilerVersion   ,#myversion }
0001DE42 <AmiBlitz3.ab3@935>   !ComData_SetL{comPtr_VersionInformation,#versioninformation}
0001DE7A <AmiBlitz3.ab3@936>   !ComData_SetL{comPtr_NumberOfBuilds    ,#number_of_builds}
0001DEB2 <AmiBlitz3.ab3@937>   !ComData_SetL{comFunc_SaveSource       ,#ab3_SaveSource}
0001DEEA <AmiBlitz3.ab3@938>   !ComData_SetL{comFunc_LoadSource       ,#ab3_LoadSource}
0001DF22 <AmiBlitz3.ab3@939>   !ComData_SetL{comFunc_ClearSource      ,#ab3_ClearSource}
0001DF5A <AmiBlitz3.ab3@942>   !ComData_SetL{comFunc_CalculatExpression       ,#menu_calculator}
0001DF92 <AmiBlitz3.ab3@943>   !ComData_SetL{comPtr_CalculatorExpressionString,#str_calcexpression}
0001DFCA <AmiBlitz3.ab3@946>   !ComData_SetL{comFunc_BackupXtraData           ,#BackupXtraData}
0001E002 <AmiBlitz3.ab3@947>   !ComData_SetL{comFunc_RestoreXtraData          ,#RestoreXtraData}
0001E03A <AmiBlitz3.ab3@949>   !ComData_SetL{comFunc_GetObjectEntry           ,#getobjectentry}
0001E072 <AmiBlitz3.ab3@950>   !ComData_SetL{comFunc_StoreMaxObjects          ,#storemaxobjects}
0001E0AA <AmiBlitz3.ab3@952>   !ComData_SetL{comFunc_ReloadResidentsForPED    ,#ReloadResidentsForPED}
0001E0E2 <AmiBlitz3.ab3@953>   !ComData_SetL{comFunc_FreeClearResidentsForPED ,#FreeClearResidentsForPED}    ; add tomsmart1 2012 06 09
0001E11A <AmiBlitz3.ab3@955>   !ComData_SetL{comPtr_Residents_Table           ,#residents_table}
0001E152 <AmiBlitz3.ab3@956>   !ComData_SetL{comPtr_StringBuffer_Long         ,#stringbuffer}
0001E18A <AmiBlitz3.ab3@957>   !ComData_SetL{comPtr_Stacksize_Long            ,#stacksize}
0001E1C2 <AmiBlitz3.ab3@958>   !ComData_SetL{comPtr_Create_IconFile_Byte      ,#create_iconfile}
0001E1FA <AmiBlitz3.ab3@959>   !ComData_SetL{comPtr_Make_SmallestCode_Byte    ,#make_smallestcode}
0001E232 <AmiBlitz3.ab3@960>   !ComData_SetL{comPtr_Link_DebugInfo_Byte       ,#link_debuginfo}
0001E26A <AmiBlitz3.ab3@961>   !ComData_SetL{comPtr_Use_Debugger_Byte         ,#use_debugger}
0001E2A2 <AmiBlitz3.ab3@962>   !ComData_SetL{comPtr_Autorun_Byte              ,#autorun}
0001E2DA <AmiBlitz3.ab3@963>   !ComData_SetL{comPtr_InterruptCheck_Byte       ,#interruptcheck}
0001E312 <AmiBlitz3.ab3@964>   !ComData_SetL{comPtr_AssemblerCheck_Byte       ,#assemblercheck}
0001E34A <AmiBlitz3.ab3@965>   !ComData_SetL{comPtr_OverflowCheck_Byte        ,#overflowcheck}
0001E382 <AmiBlitz3.ab3@966>   !ComData_SetL{comPtr_Number_of_Objects_Word    ,#number_of_objects}
0001E3BA <AmiBlitz3.ab3@967>   !ComData_SetL{comPtr_MaxObjects_Value_Word     ,#maxobjects_value}
0001E3F2 <AmiBlitz3.ab3@968>   !ComData_SetL{comPtr_MaxObject_Pos_Word        ,#maxobject_pos}
0001E42A <AmiBlitz3.ab3@971>   !ComData_SetL{comPtr_CLIArgumentsString       ,#str_cliarguments}
0001E430 <AmiBlitz3.ab3@973>   CLR.w returncode_org
0001E45A <AmiBlitz3.ab3@975>   !basic
0001E464 <AmiBlitz3.ab3@976>   If CLIMode
0001E4D6 <AmiBlitz3.ab3@977>     If cli_verbose>=3 Then NPrint !TRANS{"Loading BlitzLibs..."}
0001E4F4 <AmiBlitz3.ab3@979>   !asm
0001E4FA <AmiBlitz3.ab3@983>   TST.b start_without_libs
0001E4FE <AmiBlitz3.ab3@984>   BNE 'skip_loading_libs
0001E502 <AmiBlitz3.ab3@986>     BSR.w call_setpointerbusy
0001E50C <AmiBlitz3.ab3@987>     MOVE.l #$FFFFffff,linenumat   ; was -1
0001E510 <AmiBlitz3.ab3@988>     BSR.w get_libraries
0001E516 <AmiBlitz3.ab3@989>     JSR init_libraries
0001E51A <AmiBlitz3.ab3@990>     BSR.w init_buffers
0001E51E <AmiBlitz3.ab3@991>     BSR.w call_setpointernormal
0001E520 <AmiBlitz3.ab3@999>   MOVEQ.l #-$01,D0
0001E526 <AmiBlitz3.ab3@1000>   MOVEA.l _execbase,A6
0001E52A <AmiBlitz3.ab3@1001>   JSR _AllocSignal(A6)
0001E530 <AmiBlitz3.ab3@1002>   MOVE.l D0,signalNum
0001E532 <AmiBlitz3.ab3@1003>   MOVEQ.l #$00,D1
0001E534 <AmiBlitz3.ab3@1004>   BSET D0,D1
0001E53A <AmiBlitz3.ab3@1005>   MOVE.l D1,signals
0001E540 <AmiBlitz3.ab3@1012>   MOVE.l #str_defaultdbug,D1
0001E544 <AmiBlitz3.ab3@1013>   MOVEA.l _dosbase(PC),A6
0001E548 <AmiBlitz3.ab3@1014>   JSR _LoadSeg(A6)
0001E54E <AmiBlitz3.ab3@1015>   MOVE.l D0,ptr_seg_debugger
0001E550 <AmiBlitz3.ab3@1018>   TST.l d0
0001E554 <AmiBlitz3.ab3@1019>   BNE 'ok_12
0001E57E <AmiBlitz3.ab3@1020>     !basic
0001E5E0 <AmiBlitz3.ab3@1021>     error{!TRANS{"The Debugexecutor `Defaultdbug` was not found.\\nDebugging is not possible."}}
0001E5FE <AmiBlitz3.ab3@1022>     !asm
0001E604 <AmiBlitz3.ab3@1025>   TST.l CLIMode
0001E608 <AmiBlitz3.ab3@1026>   BEQ run_ped
0001E632 <AmiBlitz3.ab3@1032>   !basic
0001E638 <AmiBlitz3.ab3@1033>   err.l = False
0001E664 <AmiBlitz3.ab3@1041>   If cli_sourcefile
0001E684 <AmiBlitz3.ab3@1042>     lock.l = Lock_(&cli_sourcefile,#ACCESS_READ)
0001E68E <AmiBlitz3.ab3@1043>     If lock
0001E6B2 <AmiBlitz3.ab3@1044>       NameFromLock_ lock,&cli_tempstr,1024
0001E6DC <AmiBlitz3.ab3@1045>       cli_sourcefile.s = Peek.s(&cli_tempstr)
0001E6EC <AmiBlitz3.ab3@1046>       UnLock_ lock
0001E718 <AmiBlitz3.ab3@1049>     If cli_exefile
0001E76A <AmiBlitz3.ab3@1050>       SetCurrentDir{dos_PathPart{cli_sourcefile}}
0001E7C2 <AmiBlitz3.ab3@1051>       path.s = dos_PathPart{cli_exefile}
0001E7E2 <AmiBlitz3.ab3@1052>       lock.l = Lock_(&path,#ACCESS_READ)
0001E7EC <AmiBlitz3.ab3@1053>       If lock
0001E810 <AmiBlitz3.ab3@1054>         NameFromLock_ lock,&cli_tempstr,1024
0001E83A <AmiBlitz3.ab3@1055>         path.s = Peek.s(&cli_tempstr)
0001E8E8 <AmiBlitz3.ab3@1056>         cli_exefile = dos_AddPart{path,dos_FilePart{cli_exefile}}
0001E8F8 <AmiBlitz3.ab3@1057>         UnLock_ lock
0001E942 <AmiBlitz3.ab3@1068>   If cli_verbose>=3 Then NPrint "Initializing token hashmap..."
0001E9B6 <AmiBlitz3.ab3@1069> 
0001E9C0 <AmiBlitz3.ab3@1070>   *PreProcessor.preprocessor = preproc_Create{}
0001E9D0 <AmiBlitz3.ab3@1071>   Poke.l ?comPtr_PreProcessor,*PreProcessor
0001EA02 <AmiBlitz3.ab3@1072>   preproc_LoadTokens{*PreProcessor,TokenHashMapFile}
0001EA18 <AmiBlitz3.ab3@1073>   If *PreProcessor\tokens=Null
0001EA92 <AmiBlitz3.ab3@1074>     If cli_verbose>=1 Then NPrint "No hashmap found (\\22"+TokenHashMapFile+"\\22), will be created..."
0001EA9C <AmiBlitz3.ab3@1075>     preproc_QueryTokens{*PreProcessor}
0001EACE <AmiBlitz3.ab3@1076>     preproc_SaveTokens{*PreProcessor,TokenHashMapFile}
0001EB1A <AmiBlitz3.ab3@1084>   If cli_sourcefile><"" AND err=False
0001EBC0 <AmiBlitz3.ab3@1085>     If cli_verbose>=3 Then NPrint "Loading sourcecode \\22",cli_sourcefile,"\\22..."
0001EBF2 <AmiBlitz3.ab3@1086>     succ=LoadSource{cli_sourcefile}
0001EBFC <AmiBlitz3.ab3@1087>     If succ
0001EC34 <AmiBlitz3.ab3@1088> 
0001ECAE <AmiBlitz3.ab3@1089>         If cli_verbose>=1 Then NPrint "Compiling \\22"+cli_sourcefile+"\\22..."
0001ECF0 <AmiBlitz3.ab3@1090> 
0001ECFA <AmiBlitz3.ab3@1092>         If comerr
0001ED00 <AmiBlitz3.ab3@1094>         Else
0001ED06 <AmiBlitz3.ab3@1098>     Else
0001ED56 <AmiBlitz3.ab3@1099>       If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to read source file!\\1b[0m" : err=True
0001EDA2 <AmiBlitz3.ab3@1103>   If cli_savefile><"" AND err=False
0001EE1C <AmiBlitz3.ab3@1104>     If cli_verbose>=2 Then NPrint "Saving sourcefiles as "+cli_savefile+"..."
0001EE4A <AmiBlitz3.ab3@1105>     SaveSource{cli_savefile}
0001EE96 <AmiBlitz3.ab3@1108>   If cli_dumpfile><"" AND err=False
0001EEE0 <AmiBlitz3.ab3@1109>     If cli_verbose>=2 Then NPrint "Saving dumpfile..."
0001EF16 <AmiBlitz3.ab3@1110>     DumpFile{cli_dumpfile,cli_dumpflags,cli_dumpform}
0001EF20 <AmiBlitz3.ab3@1113>   If cli_run
0001EF34 <AmiBlitz3.ab3@1114>     If comerr=False
0001EF60 <AmiBlitz3.ab3@1115>       If cli_exefile
0001EFDA <AmiBlitz3.ab3@1116>         If cli_verbose>=1 Then NPrint "Recompiling "+cli_sourcefile+" for debug..."
0001F010 <AmiBlitz3.ab3@1117> 
0001F05A <AmiBlitz3.ab3@1119>       If cli_verbose>=1 Then NPrint "Running program..."
0001F068 <AmiBlitz3.ab3@1120> 
0001F06A <AmiBlitz3.ab3@1122>         CLR.l d0
0001F0A8 <AmiBlitz3.ab3@1123>         !ComData_GetB{comByte_RunningFlag,D0}
0001F0AC <AmiBlitz3.ab3@1124>         running.l = PutD0
0001F0C8 <AmiBlitz3.ab3@1125>         If running Then Delay_ 50
0001F0DC <AmiBlitz3.ab3@1127>       Until running=False
0001F0F0 <AmiBlitz3.ab3@1128>       If Peek.l(?_runerror)
0001F140 <AmiBlitz3.ab3@1129>         If cli_verbose>=0 Then NPrint "\\1b[1m*** ERROR: Unable to run compiled program!\\1b[0m" : err=True
0001F150 <AmiBlitz3.ab3@1140>   preproc_Free{*PreProcessor} : *PreProcessor=Null
0001F19A <AmiBlitz3.ab3@1141>   If cli_verbose>=3 Then NPrint "Exit AmiBlitz3."
0001F1A0 <AmiBlitz3.ab3@1142>   DeinitEmulatedPED{}
0001F1BE <AmiBlitz3.ab3@1144>   !asm
0001F1C4 <AmiBlitz3.ab3@1145> JMP terminate_ab3
0001F1CA <AmiBlitz3.ab3@1151>   MOVEA.l ped_startup_addr,A1
0001F1D0 <AmiBlitz3.ab3@1152>   LEA str_tempfilename,A0
0001F1D2 <AmiBlitz3.ab3@1153>   JSR (A1)            ;goto editor with filename!
0001F1D8 <AmiBlitz3.ab3@1160>   MOVE.l signalNum,D0
0001F1DE <AmiBlitz3.ab3@1161>   MOVEA.l _execbase,A6
0001F1E2 <AmiBlitz3.ab3@1162>   JSR _FreeSignal(A6)
0001F1E8 <AmiBlitz3.ab3@1164>   MOVE.l ptr_seg_debugger,D1
0001F1EC <AmiBlitz3.ab3@1165>   BEQ.b 'noseg
0001F1F0 <AmiBlitz3.ab3@1166>     MOVEA.l _dosbase(PC),A6
0001F1F4 <AmiBlitz3.ab3@1167>     JSR _UnLoadSeg(A6)
0001F1F8 <AmiBlitz3.ab3@1170>   BSR.w Aclearallvars
0001F1FC <AmiBlitz3.ab3@1171>   BSR.w free_residents
0001F202 <AmiBlitz3.ab3@1172>   JSR free_blitzlibs
0001F208 <AmiBlitz3.ab3@1175>   MOVE.l ptr_seg_ped,D1
0001F20C <AmiBlitz3.ab3@1176>   BEQ freemem_and_quit
0001F210 <AmiBlitz3.ab3@1177>   MOVEA.l _dosbase(PC),A6
0001F214 <AmiBlitz3.ab3@1178>   JSR _UnLoadSeg(A6)
0001F218 <AmiBlitz3.ab3@1179>   BRA freemem_and_quit     ; added by tomsmart1 for Ped errormessage
0001F242 <AmiBlitz3.ab3@1182>   !basic
0001F306 <AmiBlitz3.ab3@1183> 
0001F324 <AmiBlitz3.ab3@1184>   !asm
0001F328 <AmiBlitz3.ab3@1185>   BRA freemem_and_quit
0001F352 <AmiBlitz3.ab3@1188>   !basic
0001F416 <AmiBlitz3.ab3@1189>   error{!TRANS{"Can't load the Editor:\n"} + pedfile$ + !TRANS{"\n must quit, sorry!"} }  ; show error message  tomsmart1
0001F434 <AmiBlitz3.ab3@1190>   !asm
0001F438 <AmiBlitz3.ab3@1194>   BSR.w freeallox
0001F43E <AmiBlitz3.ab3@1196>   MOVEA.l ptr_macrobuffer_begin,A1
0001F440 <AmiBlitz3.ab3@1198>   MOVE.l -(a1),D0
0001F442 <AmiBlitz3.ab3@1199>   ADDQ.l #4,d0
0001F448 <AmiBlitz3.ab3@1201>   MOVEA.l _execbase,A6
0001F44C <AmiBlitz3.ab3@1202>   JSR _FreeMem(A6)
0001F452 <AmiBlitz3.ab3@1205>   MOVEA.l _dosbase,A1
0001F458 <AmiBlitz3.ab3@1206>   MOVEA.l _execbase,A6
0001F45C <AmiBlitz3.ab3@1207>   JSR _CloseLibrary(A6)
0001F462 <AmiBlitz3.ab3@1209>   MOVEA.l constpcat,A1
0001F468 <AmiBlitz3.ab3@1210>   MOVE.l constmaxpc,D0
0001F46E <AmiBlitz3.ab3@1211>   MOVEA.l _execbase,A6
0001F472 <AmiBlitz3.ab3@1212>   JSR _FreeMem(A6)
0001F478 <AmiBlitz3.ab3@1215>   MOVEA.l _mathffpbase,A1
0001F47E <AmiBlitz3.ab3@1216>   MOVEA.l _execbase,A6
0001F482 <AmiBlitz3.ab3@1217>   JSR _CloseLibrary(A6)
0001F488 <AmiBlitz3.ab3@1221>   TST.l mempool2                    ; test if mempool2 is allocated
0001F48C <AmiBlitz3.ab3@1222>   BEQ shutdown_compiler             ; no jump
0001F492 <AmiBlitz3.ab3@1223>   MOVEA.l _execbase,A6              ; yes delete it to free the memory
0001F498 <AmiBlitz3.ab3@1224>   MOVE.l mempool2,a0
0001F49C <AmiBlitz3.ab3@1225>   JSR _DeletePool(a6)
0001F4A2 <AmiBlitz3.ab3@1226>   CLR.l mempool2
0001F4A8 <AmiBlitz3.ab3@1229>   MOVEA.l _execbase,A6
0001F4AE <AmiBlitz3.ab3@1230>   MOVE.l mempool,a0
0001F4B2 <AmiBlitz3.ab3@1231>   JSR _DeletePool(a6)
0001F4B8 <AmiBlitz3.ab3@1232>   CLR.l pushat
0001F4BE <AmiBlitz3.ab3@1233>   CLR.l mempool
0001F4C4 <AmiBlitz3.ab3@1235>   JSR free_unusedfunctions
0001F4C6 <AmiBlitz3.ab3@1236>   MOVEQ #0,d0
0001F4D4 <AmiBlitz3.ab3@1239>   !exitasm
0001F50C <AmiBlitz3.ab3@1240>   If dynassign<>""
0001F516 <AmiBlitz3.ab3@1241>     If *AssignSema
0001F526 <AmiBlitz3.ab3@1242>       ReleaseSemaphore_ *AssignSema
0001F53E <AmiBlitz3.ab3@1243>       If (AttemptSemaphore_ (*AssignSema))                 ; we are the exclusive owner of the sema now!
0001F5D2 <AmiBlitz3.ab3@1244>         dos_RemAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001F60C <AmiBlitz3.ab3@1245>         dos_RemAssign{dynassign}
0001F61C <AmiBlitz3.ab3@1246>         RemSemaphore_ *AssignSema
0001F62C <AmiBlitz3.ab3@1247>         ReleaseSemaphore_ *AssignSema
0001F65E <AmiBlitz3.ab3@1248>         If *AssignSema\ss_Link\ln_Name Then FreeVec_ *AssignSema\ss_Link\ln_Name : *AssignSema\ss_Link\ln_Name = Null
0001F66E <AmiBlitz3.ab3@1249>         FreeVec_ *AssignSema
0001F674 <AmiBlitz3.ab3@1250>         *AssignSema = Null
0001F6A2 <AmiBlitz3.ab3@1254>   SetCurrentDir{cli_path}
0001F6C4 <AmiBlitz3.ab3@1255>   !coutclose
0001F6CA <AmiBlitz3.ab3@1256> End
0001F6D6 <AmiBlitz3.ab3@1260> str_doslibrary:     Dc.b "dos.library",0 : Even
0001F6DA <AmiBlitz3.ab3@1261> _dosbase:           Ds.l 1
0001F6E0 <AmiBlitz3.ab3@1265>   MOVEA.l _execbase,A6
0001F6E6 <AmiBlitz3.ab3@1266>   LEA str_doslibrary,A1
0001F6EA <AmiBlitz3.ab3@1267>   JSR _OldOpenLibrary(A6)
0001F6F0 <AmiBlitz3.ab3@1268>   MOVE.l D0,_dosbase
0001F6F2 <AmiBlitz3.ab3@1269> RTS
0001F6F8 <AmiBlitz3.ab3@1273>   MOVEA.l #str_mathffpname,A1
0001F6FE <AmiBlitz3.ab3@1274>   MOVEA.l _execbase,A6
0001F702 <AmiBlitz3.ab3@1275>   JSR _OldOpenLibrary(A6)
0001F708 <AmiBlitz3.ab3@1276>   MOVE.l D0,_mathffpbase
0001F70A <AmiBlitz3.ab3@1277> RTS
0001F73C <AmiBlitz3.ab3@1284> !ComData_JMP{comFunc_SetNormalPointer}
0001F76E <AmiBlitz3.ab3@1291> !ComData_JMP{comFunc_SetBusyPointer}
0001F798 <AmiBlitz3.ab3@1295>   !basic
0001F79C <AmiBlitz3.ab3@1296>   ab3save_filenameP.l = PutD0
0001F7A6 <AmiBlitz3.ab3@1297>   If ab3save_filenameP
0001F7CE <AmiBlitz3.ab3@1298>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001F7FC <AmiBlitz3.ab3@1300>     SaveSource{ab3save_filename}
0001F802 <AmiBlitz3.ab3@1301>   Else
0001F83C <AmiBlitz3.ab3@1302>     error{"INTERNAL ERROR: no filename passed in D0 to SaveSource{}!"}
0001F85A <AmiBlitz3.ab3@1304>   !asm
0001F85C <AmiBlitz3.ab3@1305>   RTS
0001F886 <AmiBlitz3.ab3@1308>   !basic
0001F88A <AmiBlitz3.ab3@1309>   ab3save_filenameP.l = PutD0
0001F894 <AmiBlitz3.ab3@1310>   If ab3save_filenameP
0001F8BC <AmiBlitz3.ab3@1311>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001F8EA <AmiBlitz3.ab3@1312>     LoadSource{ab3save_filename}
0001F8F0 <AmiBlitz3.ab3@1313>   Else
0001F92A <AmiBlitz3.ab3@1314>     error{"INTERNAL ERROR: no filename passed in D0 to LoadSource{}!"}
0001F948 <AmiBlitz3.ab3@1316>   !asm
0001F94A <AmiBlitz3.ab3@1317>   RTS
0001F974 <AmiBlitz3.ab3@1320>   !basic
0001F97A <AmiBlitz3.ab3@1321>   ClearSource{}
0001F998 <AmiBlitz3.ab3@1322>   !asm
0001F99A <AmiBlitz3.ab3@1323>   RTS
0001F9C4 <AmiBlitz3.ab3@1326>   !basic
0001F9CA <AmiBlitz3.ab3@1327>   OpenConsoleFake{}
0001F9E8 <AmiBlitz3.ab3@1328>   !asm
0001F9EA <AmiBlitz3.ab3@1329>   RTS
0001FA14 <AmiBlitz3.ab3@1333>   !basic
0001FA1A <AmiBlitz3.ab3@1334>   CloseConsoleFake{}
0001FA38 <AmiBlitz3.ab3@1335>   !asm
0001FA3A <AmiBlitz3.ab3@1336>   RTS
0001FA40 <AmiBlitz3.ab3@1341>   MOVE.w d6,menuitemdebug
0001FA6A <AmiBlitz3.ab3@1342>   !basic
0001FA7C <AmiBlitz3.ab3@1343>   menuitemx.l = Peek.w(?menuitemdebug)
0001FAA2 <AmiBlitz3.ab3@1344>   If menuitemx>16 OR  menuitemx<0
0001FB16 <AmiBlitz3.ab3@1345>     error{"Called invalid AB3 Menuitem #"+Str$(menuitemx)+"!"}
0001FB1E <AmiBlitz3.ab3@1346>     menuitemx=0
0001FB2E <AmiBlitz3.ab3@1348>   Poke.w ?menuitemdebug,menuitemx
0001FB4C <AmiBlitz3.ab3@1349>   !asm
0001FB52 <AmiBlitz3.ab3@1350>   MOVE.w menuitemdebug,d6
0001FB58 <AmiBlitz3.ab3@1354>   MOVE.l A5,firstitem_
0001FB5E <AmiBlitz3.ab3@1355>   MOVE.w D7,numlines_org
0001FB64 <AmiBlitz3.ab3@1357>   MOVE.l d7,numlines
0001FB66 <AmiBlitz3.ab3@1359>   LSL.w #2,D6
0001FB6C <AmiBlitz3.ab3@1360>   LEA menu_items,A0
0001FB70 <AmiBlitz3.ab3@1361>   MOVEA.l $0(A0,D6.W),A0
0001FB7A <AmiBlitz3.ab3@1362>   MOVE.l #$FFFFffff,linenumat             ; was -1
0001FB84 <AmiBlitz3.ab3@1363>   MOVE.l #$FFFFffff,compilelinecounter    ; was -1
0001FB86 <AmiBlitz3.ab3@1364>   JSR (A0)                              ; jsr to the function for the menuitem
0001FB8C <AmiBlitz3.ab3@1365>   MOVE.l compilelinecounter,D0
0001FB8E <AmiBlitz3.ab3@1366> RTS
0001FB92 <AmiBlitz3.ab3@1368> menuitemdebug: Dc.l 0
0001FB96 <AmiBlitz3.ab3@1370> mempool                Dc.l 0
0001FBAC <AmiBlitz3.ab3@1371> str_loaddebugmessage:  Dc.b "Debug module to load",0 : Even        ; was dtext org source
0001FBB2 <AmiBlitz3.ab3@1372> dloaderr:              JSR handle_compileerror
0001FBCE <AmiBlitz3.ab3@1373>                        Dc.b "Can't LoadSeg debug module!",0 : Even
0001FC0C <AmiBlitz3.ab3@1381>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001FC12 <AmiBlitz3.ab3@1382>   LEA str_loaddebugmessage,A2
0001FC18 <AmiBlitz3.ab3@1383>   LEA str_blitz3assign,A0
0001FC1E <AmiBlitz3.ab3@1384>   LEA str_temp_debugmodulename,A1
0001FC20 <AmiBlitz3.ab3@1385>   JSR (A3)                                                  ;open ped filerequest
0001FC24 <AmiBlitz3.ab3@1386>   BEQ.w nodload
0001FC2A <AmiBlitz3.ab3@1391>   MOVE.l D0,ptr_temp_debugmodule
0001FC2E <AmiBlitz3.ab3@1392>   BSR.w call_setpointerbusy
0001FC34 <AmiBlitz3.ab3@1394> 
0001FC3A <AmiBlitz3.ab3@1396>   MOVE.l A7,errstack
0001FC44 <AmiBlitz3.ab3@1397>   MOVE.l #nodload,errcont
0001FC4A <AmiBlitz3.ab3@1398>   MOVE.l ptr_temp_debugmodule,D1
0001FC4E <AmiBlitz3.ab3@1400>   MOVEA.l _dosbase(PC),A6
0001FC52 <AmiBlitz3.ab3@1401>   JSR _LoadSeg(A6)
0001FC54 <AmiBlitz3.ab3@1402>   MOVE.l D0,D7
0001FC58 <AmiBlitz3.ab3@1403>   BEQ.w dloaderr
0001FC5E <AmiBlitz3.ab3@1404>   MOVE.l ptr_seg_debugger,D1
0001FC62 <AmiBlitz3.ab3@1405>   BEQ.b 'ndseg
0001FC66 <AmiBlitz3.ab3@1406>   MOVEA.l _dosbase(PC),A6
0001FC6A <AmiBlitz3.ab3@1407>   JSR _UnLoadSeg(A6)
0001FC6E <AmiBlitz3.ab3@1408>   BSR.w call_setpointernormal
0001FC74 <AmiBlitz3.ab3@1411>   MOVE.l D7,ptr_seg_debugger
0001FC76 <AmiBlitz3.ab3@1414> RTS
0001FC94 <AmiBlitz3.ab3@1417> str_request_exename:   Dc.b "Name of Executable to Create:",0 : Even                        ;xtext org source
0001FD54 <AmiBlitz3.ab3@1418> exepath:               Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xpath  dcb.b 192,0 org source
0001FE14 <AmiBlitz3.ab3@1419> exefilename:           Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xname  dcb.b 192,0 org source
0001FE18 <AmiBlitz3.ab3@1420> ptr_newexefilename:    Dc.l 0                                                               ;execname org
0001FE42 <AmiBlitz3.ab3@1424>   !basic
0001FE6C <AmiBlitz3.ab3@1425>   exepath.s = Peek.s(?exepath)
0001FE96 <AmiBlitz3.ab3@1426>   exefile.s = Peek.s(?exefilename)
0001FF16 <AmiBlitz3.ab3@1427>   exefile.s = dos_AddPart{exepath,exefile}
0001FF4E <AmiBlitz3.ab3@1428>   Poke.s ?tempspace,exefile
0001FF6C <AmiBlitz3.ab3@1429>   !asm
0001FF72 <AmiBlitz3.ab3@1450>   LEA tempspace,a0
0001FF74 <AmiBlitz3.ab3@1451>   MOVE.l a0,d0
0001FF78 <AmiBlitz3.ab3@1452> BRA newcreate2
0001FFA2 <AmiBlitz3.ab3@1460>   !basic
0001FFCC <AmiBlitz3.ab3@1461>   request_exename.s = Peek.s(?str_request_exename )
00020028 <AmiBlitz3.ab3@1462>   request_exename   = !TRANS{request_exename}
0002002E <AmiBlitz3.ab3@1463>   GetD0 &request_exename
0002004C <AmiBlitz3.ab3@1464>   !asm
0002004E <AmiBlitz3.ab3@1465>   MOVE.l D0,A2
0002008C <AmiBlitz3.ab3@1469>   !ComData_GetL{comFunc_ASLFileRequest,A3}
00020092 <AmiBlitz3.ab3@1471>   LEA exepath,A0
00020098 <AmiBlitz3.ab3@1472>   LEA exefilename,A1
0002009A <AmiBlitz3.ab3@1473>   JSR (A3)                                                 ;open ped filerequest
0002009E <AmiBlitz3.ab3@1475>   BEQ.w cancel_createexe    ; was 'err
000200A8 <AmiBlitz3.ab3@1479>   ADD.l #1,number_of_builds
000200AE <AmiBlitz3.ab3@1483>   MOVE.l D0,ptr_newexefilename
000200B6 <AmiBlitz3.ab3@1484>   MOVE.w #-1,debugversion
000200BE <AmiBlitz3.ab3@1490>     MOVE.w #1,makeexec
000200C4 <AmiBlitz3.ab3@1491>     JSR ab3_OpenDebugFile
000200C8 <AmiBlitz3.ab3@1493>     BSR.w startcompile
000200CE <AmiBlitz3.ab3@1495>     JSR ab3_CloseDebugFile
000200D8 <AmiBlitz3.ab3@1497>     CMP.l #"NORE",reqmode
000200DC <AmiBlitz3.ab3@1498>   BEQ 'l1
000200E2 <AmiBlitz3.ab3@1500>   TST.w anyerrs
000200E6 <AmiBlitz3.ab3@1501>   BNE.b 'skip
000200EA <AmiBlitz3.ab3@1502>   BSR.w savefile
000200EC <AmiBlitz3.ab3@1508> RTS
000200F4 <AmiBlitz3.ab3@1512>   MOVE.w #-1,flag_noPED
000200F6 <AmiBlitz3.ab3@1513> RTS
000200FE <AmiBlitz3.ab3@1517>   MOVE.w #-1,flag_noCLI
00020100 <AmiBlitz3.ab3@1518> RTS
0002012A <AmiBlitz3.ab3@1522>   !basic
00020152 <AmiBlitz3.ab3@1523>     If dbg_fid>=0 Then file_Close{dbg_fid} : dbg_fid = -1
00020162 <AmiBlitz3.ab3@1524>     Poke.w ?word_WriteDebugFileNow,0
00020180 <AmiBlitz3.ab3@1525>   !asm
00020182 <AmiBlitz3.ab3@1526> RTS
00020186 <AmiBlitz3.ab3@1530>   BSR ab3_CloseDebugFile     ; remove double code and replaced it with a call of the subroutine  tomsmart1
000201B0 <AmiBlitz3.ab3@1531>   !basic
000201C2 <AmiBlitz3.ab3@1532>   If dbg_fid.l<0
000201C4 <AmiBlitz3.ab3@1533>     CLR.l d0
00020202 <AmiBlitz3.ab3@1534>     !ComData_GetW{comWord_CreateDebugFile,D0}
00020206 <AmiBlitz3.ab3@1535>     dbg_Create.l = PutD0
00020210 <AmiBlitz3.ab3@1536>     If (dbg_Create) ; only when set!
00020220 <AmiBlitz3.ab3@1537>       exefileP.l = Peek.l (?ptr_newexefilename)
00020248 <AmiBlitz3.ab3@1538>       exefile.s = ""
0002027A <AmiBlitz3.ab3@1539>       If exefileP Then exefile.s = Peek.s(exefileP)
000202B2 <AmiBlitz3.ab3@1540>       If exefile><""
00020308 <AmiBlitz3.ab3@1541>         dbg_fid = file_Open{exefile+".dbg",#file_forcewrite}
0002031A <AmiBlitz3.ab3@1542>         If dbg_fid>=0
0002032C <AmiBlitz3.ab3@1543>           Poke.w ?word_WriteDebugFileNow,-1
00020338 <AmiBlitz3.ab3@1546>       oldhunkoffset.l = -1
00020360 <AmiBlitz3.ab3@1547>       oldfile.s       = ""
0002037E <AmiBlitz3.ab3@1550>   !asm
00020380 <AmiBlitz3.ab3@1551> RTS
00020386 <AmiBlitz3.ab3@1555> TST.w word_WriteDebugFileNow
0002038A <AmiBlitz3.ab3@1556> BEQ 'skipdebugfile
000203B4 <AmiBlitz3.ab3@1557> !basic
000203C6 <AmiBlitz3.ab3@1558>   If dbg_fid>=0
000203D8 <AmiBlitz3.ab3@1559>     pass.l          = Peek.w(?pass)
000203EA <AmiBlitz3.ab3@1560>     makesmallest.b  = Peek.b(?make_smallestcode)               ; get the status of make_smallestcode  tomsmart1
0002040E <AmiBlitz3.ab3@1561> 
00020414 <AmiBlitz3.ab3@1562>       oldhunkoffset.l = hunkoffset.l
00020448 <AmiBlitz3.ab3@1563>       oldfile.s       = codefile.s
00020464 <AmiBlitz3.ab3@1564>       If Peek.w (?ininclude)>0
00020474 <AmiBlitz3.ab3@1565>         codeline.l = Peek.l(?includeline);-1
000204E4 <AmiBlitz3.ab3@1566>         codefile.s = dos_FilePart{incdim(Peek.w(?ininclude)-1)}
000204EA <AmiBlitz3.ab3@1567>       Else
00020518 <AmiBlitz3.ab3@1568>         !ComData_LEA{comStr_SourceName,A0}
0002051A <AmiBlitz3.ab3@1569>         MOVE.l A0,D0
0002051E <AmiBlitz3.ab3@1570>         sourceP.l = PutD0
00020546 <AmiBlitz3.ab3@1571>         codefile.s = Peek.s(sourceP)
00020556 <AmiBlitz3.ab3@1572>         codeline.l = Peek.l(?linenumat)
0002057E <AmiBlitz3.ab3@1574>       hunkoffset.l = Peek.l(?destpointer)-Peek.l(?destbufferstart)
000205D2 <AmiBlitz3.ab3@1575>       If oldhunkoffset><hunkoffset OR oldfile><codefile
000205E2 <AmiBlitz3.ab3@1582>         *sourceLine.SourceLine_t = Peek.l(?sourceline)
000205EC <AmiBlitz3.ab3@1583>         If *sourceLine
00020602 <AmiBlitz3.ab3@1584>           MaxLen detokenline.s = 65536
00020644 <AmiBlitz3.ab3@1585>          !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
00020654 <AmiBlitz3.ab3@1586>          *tn.preprocessor = Peek.l(?include_preprocessor)
00020680 <AmiBlitz3.ab3@1587>           written.l = preproc_Detokenize{*tn,&*sourceLine\Text,&detokenline,*sourceLine\CharLength}
000206AE <AmiBlitz3.ab3@1588>           If written>0 Then Poke.b &detokenline+written-1,0
000206D8 <AmiBlitz3.ab3@1589>           sourceLineText.s = Peek.s(&detokenline)
000206DE <AmiBlitz3.ab3@1590>         Else
00020706 <AmiBlitz3.ab3@1591>           sourceLineText = "NULL"
000207CE <AmiBlitz3.ab3@1594>         file_WriteLine{dbg_fid,Hex$(hunkoffset)+" <"+codefile+"@"+Str$(codeline)+"> "+sourceLineText}
000207EC <AmiBlitz3.ab3@1600> !asm
000207EE <AmiBlitz3.ab3@1602> RTS
000207F0 <AmiBlitz3.ab3@1604> word_WriteDebugFileNow: Dc.w 0
000207F2 <AmiBlitz3.ab3@1608> flag_noPED:  Ds.w 1                                        ;closeed org source
000207F4 <AmiBlitz3.ab3@1609> flag_noCLI:  Ds.w 1                                        ;nocli org source
000207F8 <AmiBlitz3.ab3@1613>   MOVEM.l A2-A3,-(A7)
000207FE <AmiBlitz3.ab3@1614>   CLR.b doublepeek
00020804 <AmiBlitz3.ab3@1615>   MOVE.l A5,lastsourcepos
0002080A <AmiBlitz3.ab3@1616>    JSR getchar
0002080E <AmiBlitz3.ab3@1617>   CMP.w #$2E,D0              ;'.'
00020812 <AmiBlitz3.ab3@1618>    BEQ.w 'ok
00020818 <AmiBlitz3.ab3@1619>   MOVEA.l defaulttype,A2
0002081C <AmiBlitz3.ab3@1620>   CMP.w #$24,D0              ;'$'
00020820 <AmiBlitz3.ab3@1621>    BNE.w 'none
00020822 <AmiBlitz3.ab3@1622>   MOVEQ.l #$07,D1
00020826 <AmiBlitz3.ab3@1623>  BRA.w 'skip
0002082C <AmiBlitz3.ab3@1626>   JSR getparameter2
00020830 <AmiBlitz3.ab3@1627>   BEQ.w JUMP_syntaxerr1
00020836 <AmiBlitz3.ab3@1628>   LEA newtypebase,A2
0002083C <AmiBlitz3.ab3@1629>   JSR findtype
00020840 <AmiBlitz3.ab3@1630>   BNE.w JUMP_notypeerr1
0002084A <AmiBlitz3.ab3@1635>   MOVE.w oldqflag,instringon
00020850 <AmiBlitz3.ab3@1636>   MOVEA.l lastsourcepos,A5
00020856 <AmiBlitz3.ab3@1638>   MOVE.l a2,functionreturntype
0002085E <AmiBlitz3.ab3@1639>   CMPI.l #$100,$4(A2)
00020862 <AmiBlitz3.ab3@1640>   BLE.w 'isvar
00020864 <AmiBlitz3.ab3@1644>   MOVEQ #3,d1
00020868 <AmiBlitz3.ab3@1645>   BRA 'skip
0002086C <AmiBlitz3.ab3@1655>   MOVE.w $6(A2),D1
00020872 <AmiBlitz3.ab3@1657>   CMP.w #8,8(a2)
00020876 <AmiBlitz3.ab3@1658>   BNE 'l1
0002087E <AmiBlitz3.ab3@1659>   MOVE.b #1,doublepeek
00020884 <AmiBlitz3.ab3@1664>   MOVE.w D1,convsize
00020888 <AmiBlitz3.ab3@1665>   MOVEM.l (A7)+,A2-A3
0002088A <AmiBlitz3.ab3@1666> RTS
00020890 <AmiBlitz3.ab3@1668> JUMP_notypeerr1  JMP notypeerr
00020896 <AmiBlitz3.ab3@1669> JUMP_illtypeerr1 JMP illtypeerr
0002089C <AmiBlitz3.ab3@1670> JUMP_syntaxerr1  JMP syntaxerr
000208A0 <AmiBlitz3.ab3@1675>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
000208A6 <AmiBlitz3.ab3@1676>   MOVEA.l _execbase,A6
000208AC <AmiBlitz3.ab3@1677>   TST.b MorphOS                    ; test if we have MorphOS ( 0 no, 1 yes)
000208B0 <AmiBlitz3.ab3@1678>    BEQ 'useclearU                  ; if we have 0 = No MorpOS then jump
000208B2 <AmiBlitz3.ab3@1680>   MOVEQ.l #8,d1
000208B8 <AmiBlitz3.ab3@1681>   MOVE.l #200,d0
000208BC <AmiBlitz3.ab3@1682>   JSR _CacheClearE(A6)
000208C0 <AmiBlitz3.ab3@1683>  BRA 'exit
000208C4 <AmiBlitz3.ab3@1722>   JSR _CacheClearU(A6)
000208C8 <AmiBlitz3.ab3@1725>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
000208CA <AmiBlitz3.ab3@1726> RTS
000208D4 <AmiBlitz3.ab3@1734>   ADD.l #1,number_of_builds
000208DA <AmiBlitz3.ab3@1736>   CLR.w debugversion
000208E0 <AmiBlitz3.ab3@1737>   CLR.w flag_noPED
000208E6 <AmiBlitz3.ab3@1738>   CLR.w flag_noCLI
000208EE <AmiBlitz3.ab3@1742>     MOVE.w #0,makeexec                                     ;MOVE.w #$FFFF,debugversion
000208F2 <AmiBlitz3.ab3@1744>     BSR.w startcompile
000208FC <AmiBlitz3.ab3@1746>     CMP.l #"NORE",reqmode
00020900 <AmiBlitz3.ab3@1747>   BEQ 'l1
00020906 <AmiBlitz3.ab3@1753>   TST.w anyerrs
0002090A <AmiBlitz3.ab3@1754>    BNE.w 'dontrun
0002090E <AmiBlitz3.ab3@1756>   MOVE.w flag_noPED(PC),D1
00020912 <AmiBlitz3.ab3@1757>    BEQ.w 'noclose
00020944 <AmiBlitz3.ab3@1761>   !ComData_JSR{comFunc_CloseGUI}
00020948 <AmiBlitz3.ab3@1762>  BRA.b 'runprogram
0002094C <AmiBlitz3.ab3@1766>   BSR.w compilerequester
00020952 <AmiBlitz3.ab3@1771>   MOVEA.l _dosbase,A6
00020958 <AmiBlitz3.ab3@1773>   LEA exepath,a0
0002095A <AmiBlitz3.ab3@1774>   MOVE.l a0,d1
0002095C <AmiBlitz3.ab3@1775>   MOVEQ #-2,d2
00020960 <AmiBlitz3.ab3@1776>   JSR _Lock(a6)                                            ;lock
00020966 <AmiBlitz3.ab3@1777>   MOVE.l d0,exelock
0002096C <AmiBlitz3.ab3@1779>   MOVE.l #0,d1
00020970 <AmiBlitz3.ab3@1780>   JSR _CurrentDir(A6)
00020976 <AmiBlitz3.ab3@1781>   MOVE.l D0,lock_currentdir
00020978 <AmiBlitz3.ab3@1782>   MOVE.l D0,D1
0002097C <AmiBlitz3.ab3@1783>   JSR _CurrentDir(A6)
00020982 <AmiBlitz3.ab3@1785>   CLR.l ptr_exetask
00020988 <AmiBlitz3.ab3@1794>   MOVE.l #str_process_name,D1
0002098A <AmiBlitz3.ab3@1795>   MOVEQ.l #$00,D2
00020990 <AmiBlitz3.ab3@1796>   MOVE.l #proc_seglist,D3
00020992 <AmiBlitz3.ab3@1797>   LSR.l #2,D3
00020998 <AmiBlitz3.ab3@1798>   MOVE.l stacksize,D4
0002099E <AmiBlitz3.ab3@1799>   MOVEA.l _dosbase,A6
000209A2 <AmiBlitz3.ab3@1800>   JSR _CreateProc(A6)                                      ;runtask
000209A4 <AmiBlitz3.ab3@1801>   TST.l D0
000209A8 <AmiBlitz3.ab3@1802>    BEQ 'ErrorRunningProg
000209DE <AmiBlitz3.ab3@1807>   !ComData_SetB{comByte_RunningFlag,#1}   ; this should be done here, straigt after it is clear that
000209E4 <AmiBlitz3.ab3@1811>   TST.w flag_noPED
000209E8 <AmiBlitz3.ab3@1812>    BNE.b 'fatal
000209EC <AmiBlitz3.ab3@1813>   BSR.w close_compilewin
000209F2 <AmiBlitz3.ab3@1816>   CLR.l firstlocal
000209F8 <AmiBlitz3.ab3@1817>   CLR.l firstglob
000209FC <AmiBlitz3.ab3@1819>   MOVE.w flag_noPED(PC),D1
00020A00 <AmiBlitz3.ab3@1820>   BEQ.w 'noopen         ;skip_openGUI
00020A32 <AmiBlitz3.ab3@1824>   !ComData_JSR{comFunc_CreateGUI}
00020A34 <AmiBlitz3.ab3@1834>  RTS
00020A3E <AmiBlitz3.ab3@1838>   MOVE.l #1,_runerror
00020A42 <AmiBlitz3.ab3@1839> BRA 'fatal
00020A46 <AmiBlitz3.ab3@1843> _runerror: Dc.l 0
00020A4A <AmiBlitz3.ab3@1844> lock_currentdir:    Ds.l 1                                          ;tasklock org source
00020A4E <AmiBlitz3.ab3@1845> ptr_exetask:        Ds.l 1                                          ;panictask org source
00020A52 <AmiBlitz3.ab3@1846> signalNum:          Ds.l 1                                          ;panicbit org source
00020A56 <AmiBlitz3.ab3@1847> signals:            Ds.l 1                                          ;panicmask org source
00020A6C <AmiBlitz3.ab3@1849> str_process_name:   Dc.b "Blitz ][ Program Proc",0 : Even           ;procname org source
00020A71 <AmiBlitz3.ab3@1850>                     Ds.b 5                                          ;cnop 0,4 :dc.l 0   ;length org source
00020A74 <AmiBlitz3.ab3@1851> Even4
00020A78 <AmiBlitz3.ab3@1853> ptr_ThisTask:       Ds.l 1                                          ;length
00020A7C <AmiBlitz3.ab3@1854> .proc_seglist:      Ds.l 1                                          ;procstart org source ;next
00020A82 <AmiBlitz3.ab3@1858>   MOVEA.l $4,A0
00020A8A <AmiBlitz3.ab3@1859>   MOVE.l  $114(A0),ptr_exetask
00020A90 <AmiBlitz3.ab3@1861>   MOVEA.l _dosbase,A6
00020A96 <AmiBlitz3.ab3@1862>   MOVE.l exelock,D1
00020A9A <AmiBlitz3.ab3@1863>   JSR _CurrentDir(A6)
00020AD0 <AmiBlitz3.ab3@1869>   !ComData_SetB{comByte_RunningFlag,#1}
00020AD4 <AmiBlitz3.ab3@1876>   MOVE.w flag_noCLI(PC),D1
00020AD8 <AmiBlitz3.ab3@1877>    BNE.b 'skip_openconsole
00020B0A <AmiBlitz3.ab3@1881>   !ComData_JSR{comFunc_OpenConsole}
00020B0E <AmiBlitz3.ab3@1884>   BSR.w calcvbr
00020B14 <AmiBlitz3.ab3@1885>   MOVEA.l vbr,A0
00020B1A <AmiBlitz3.ab3@1890>   CLR.w dirmode
00020B20 <AmiBlitz3.ab3@1891>   CLR.l firstglob
00020B26 <AmiBlitz3.ab3@1892>   CLR.l firstlocal
00020B2C <AmiBlitz3.ab3@1896>   MOVE.l stacksize,D2
00020B32 <AmiBlitz3.ab3@1897>   MOVE.l #$624C745A,D7                                      ;#'bLtZ',d7 org source ;force cli-type run
00020B38 <AmiBlitz3.ab3@1898>   LEA str_cliarguments,A0                                   ;cli arguement
00020B3E <AmiBlitz3.ab3@1899>   MOVEA.l destbufferstart,A1
00020B42 <AmiBlitz3.ab3@1901>   BSR.w Aclearcache
00020B44 <AmiBlitz3.ab3@1905>   JSR (A1)                                                 ; execute compiled code  ;Run the thing!
00020B4A <AmiBlitz3.ab3@1908>   MOVEA.l vbr,A0
00020B50 <AmiBlitz3.ab3@1910>   CLR.l firstglob
00020B56 <AmiBlitz3.ab3@1911>   CLR.l firstlocal
00020B5C <AmiBlitz3.ab3@1912>   MOVEA.l _dosbase,A6
00020B62 <AmiBlitz3.ab3@1913>   MOVE.l exelock,d1
00020B66 <AmiBlitz3.ab3@1914>   BEQ 'nolock
00020B6A <AmiBlitz3.ab3@1915>   JSR _UnLock(a6)
00020BA0 <AmiBlitz3.ab3@1920>   !ComData_SetB{comByte_RunningFlag,#0}
00020BA4 <AmiBlitz3.ab3@1924>   MOVE.w flag_noCLI(PC),D1
00020BA8 <AmiBlitz3.ab3@1925>    BNE.b 'skip_closeconsole
00020BDA <AmiBlitz3.ab3@1929>   !ComData_JSR{comFunc_CloseConsole}
00020BE2 <AmiBlitz3.ab3@1932>   MOVE.w #$0001,stopit      ;ended OK!
00020BE6 <AmiBlitz3.ab3@1933>   MOVE.l signals(PC),D0
00020BEC <AmiBlitz3.ab3@1934>   MOVEA.l ptr_ThisTask,A1
00020BF2 <AmiBlitz3.ab3@1935>   MOVEA.l _execbase,A6
00020BF6 <AmiBlitz3.ab3@1936>   JSR _Signal(A6)
00020BF8 <AmiBlitz3.ab3@1937> RTS
00020BFE <AmiBlitz3.ab3@1941>   MOVEA.l _execbase,A6
00020C02 <AmiBlitz3.ab3@1942>   MOVE.w $128(A6),D0
00020C04 <AmiBlitz3.ab3@1943>   MOVEQ.l #$00,D1
00020C08 <AmiBlitz3.ab3@1944>   ANDI.w #$F,D0
00020C0C <AmiBlitz3.ab3@1947>     BEQ.b 'skip
00020C0E <AmiBlitz3.ab3@1948>     ADDQ.w #1,D1
00020C10 <AmiBlitz3.ab3@1949>     LSR.w #1,D0
00020C14 <AmiBlitz3.ab3@1950>  BRA.b 'loop
00020C16 <AmiBlitz3.ab3@1953>   MOVEQ.l #$00,D2
00020C1A <AmiBlitz3.ab3@1954>   CMP.w #$2,D1
00020C1E <AmiBlitz3.ab3@1955>    BCS.b 'skip2
00020C24 <AmiBlitz3.ab3@1956>   MOVEA.l _execbase,A6
00020C28 <AmiBlitz3.ab3@1957>   JSR _SuperState(A6)
00020C2C <AmiBlitz3.ab3@1958>   Dc.l $4E7A2801                                           ;movec vbr,D2
00020C30 <AmiBlitz3.ab3@1959>   JSR _UserState(A6)
00020C36 <AmiBlitz3.ab3@1962>   MOVE.l D2,vbr
00020C38 <AmiBlitz3.ab3@1963> RTS
00020C3E <AmiBlitz3.ab3@1968>   LEA instrtab,a0
00020C44 <AmiBlitz3.ab3@1969>   MOVE.l #labelhash-instrtab,d0
00020C46 <AmiBlitz3.ab3@1970>   ASR.l #2,d0
00020C48 <AmiBlitz3.ab3@1971>   SUBQ.l #1,d0
00020C4A <AmiBlitz3.ab3@1974>   CLR.l (a0)+
00020C4C <AmiBlitz3.ab3@1975>   SUBQ.l #1,d0
00020C50 <AmiBlitz3.ab3@1976>   BNE 'l10
00020C54 <AmiBlitz3.ab3@1978>   BSR.w call_setpointerbusy
00020C58 <AmiBlitz3.ab3@1979>   BSR.w free_userlibs
00020C5C <AmiBlitz3.ab3@1980>   BSR.w scan_for_userlibs
00020C60 <AmiBlitz3.ab3@1981>   BSR.w loadblitzlibs
00020C64 <AmiBlitz3.ab3@1982> BRA.w call_setpointernormal
00020C8E <AmiBlitz3.ab3@1994>   !basic
00020CC8 <AmiBlitz3.ab3@1995>   Poke.l ?size_acidlibs, dos_GetFileSize{Peek$(?str_path_acidlibs)}
00020CD8 <AmiBlitz3.ab3@1997>   deflibNameP.l = Peek.l(?deflib)
00020CE2 <AmiBlitz3.ab3@1998>   If deflibNameP
00020D14 <AmiBlitz3.ab3@1999>     If Peek.s(deflibNameP)<>""
00020D5E <AmiBlitz3.ab3@2000>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(Peek.l(?deflib))}
00020D64 <AmiBlitz3.ab3@2001>     Else
00020D9E <AmiBlitz3.ab3@2002>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
00020DA4 <AmiBlitz3.ab3@2004>   Else
00020DDE <AmiBlitz3.ab3@2005>     Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
00020E18 <AmiBlitz3.ab3@2006>     error{"INTERNAL: Invalid deflib name pointer!"}
00020E36 <AmiBlitz3.ab3@2008>   !asm
00020E3C <AmiBlitz3.ab3@2014>   MOVE.l #str_path_userlibs,D1
00020E3E <AmiBlitz3.ab3@2015>   MOVEQ.l #-$02,D2
00020E44 <AmiBlitz3.ab3@2016>   MOVEA.l _dosbase,A6
00020E48 <AmiBlitz3.ab3@2017>   JSR _Lock(A6)
00020E4A <AmiBlitz3.ab3@2018>   MOVE.l D0,D7
00020E4E <AmiBlitz3.ab3@2019>    BEQ.w 'done     ;exit_get_libraries
00020E50 <AmiBlitz3.ab3@2021>   MOVE.l D7,D1
00020E56 <AmiBlitz3.ab3@2022>   MOVE.l #ptr_parameterstore,D2
00020E5A <AmiBlitz3.ab3@2023>   JSR _Examine(A6)
00020E5C <AmiBlitz3.ab3@2024>   TST.l D0
00020E60 <AmiBlitz3.ab3@2025>   BEQ.w 'done2   ;unlock_and_exit_get_libraries
00020E66 <AmiBlitz3.ab3@2026>   MOVE.l fib_DirEntryType,D0
00020E6A <AmiBlitz3.ab3@2027>   BMI.w 'done2   ;unlock_and_exit_get_libraries
00020E6C <AmiBlitz3.ab3@2035>     MOVE.l D7,D1
00020E72 <AmiBlitz3.ab3@2036>     MOVE.l #ptr_parameterstore,D2
00020E78 <AmiBlitz3.ab3@2037>     MOVEA.l _dosbase,A6
00020E7C <AmiBlitz3.ab3@2038>     JSR _ExNext(A6)
00020E7E <AmiBlitz3.ab3@2039>     TST.l D0
00020E82 <AmiBlitz3.ab3@2040>      BEQ.w 'ok    ;exit_scan_libsdrawer                            ; kein weiteres File
00020E88 <AmiBlitz3.ab3@2042>     MOVE.l fib_DirEntryType,D0                             ; positive for directoies, negative for files
00020E8C <AmiBlitz3.ab3@2043>     BPL.w 'loop    ;scan_libsdrawer                                  ; skip directories
00020E92 <AmiBlitz3.ab3@2045>     LEA fib_FileName,A0                                    ; pruefen ob infofile
00020E96 <AmiBlitz3.ab3@2046>     BSR.w check_for_infoextention
00020E9A <AmiBlitz3.ab3@2047>     BEQ.w 'loop    ;scan_libsdrawer
00020EA0 <AmiBlitz3.ab3@2049>     MOVEA.l _execbase,A6                                   ; allocate $26 = 38 bytes fuer listeneintrag
00020EA2 <AmiBlitz3.ab3@2050>     MOVEQ.l #$26,D0
00020EA4 <AmiBlitz3.ab3@2051>     MOVEQ.l #$01,D1
00020EAA <AmiBlitz3.ab3@2053>     MOVE.l mempool,a0
00020EAE <AmiBlitz3.ab3@2054>     JSR _AllocPooled(a6)
00020EB4 <AmiBlitz3.ab3@2057>     MOVEA.l _dosbase,A6
00020EB6 <AmiBlitz3.ab3@2059>     MOVE.l D0,D6                                           ; sichere speicheradresse in D6
00020EBC <AmiBlitz3.ab3@2061>     LEA ptr_userlibs_list,A0                               ; pruefe liste
00020EBE <AmiBlitz3.ab3@2064>     MOVE.l (A0),D5
00020EC2 <AmiBlitz3.ab3@2065>      BEQ.w 'here                                       ; kein pointer da? kann springe weiter
00020EC4 <AmiBlitz3.ab3@2066>     MOVEA.l D5,A2
00020EC6 <AmiBlitz3.ab3@2067>     ADDQ.w #6,A2                                       ; 6 bytes weiter gehen, um dateinamen zu speichern
00020ECC <AmiBlitz3.ab3@2069>     LEA fib_FileName,A1    ;filename                  ; vergleich, ob Dateiname schon in der liste ist
00020ECE <AmiBlitz3.ab3@2072>       MOVEQ.l #$00,D0
00020ED0 <AmiBlitz3.ab3@2073>       MOVE.b (A1)+,D0
00020ED4 <AmiBlitz3.ab3@2074>        BEQ.w 'here         ;I'm shorter                ; dateiname komplett, dann weiter
00020ED6 <AmiBlitz3.ab3@2075>       MOVEQ.l #$00,D1
00020ED8 <AmiBlitz3.ab3@2076>       MOVE.b (A2)+,D1
00020EDC <AmiBlitz3.ab3@2077>        BEQ.w 'next         ;I'm longer
00020EFE <AmiBlitz3.ab3@2079>       !compare1                                            ;bsr.w tstalpha
00020F02 <AmiBlitz3.ab3@2081>       BNE.w 'acskip
00020F06 <AmiBlitz3.ab3@2082>       ANDI.w #$DF,D0       ; was 255-32
00020F08 <AmiBlitz3.ab3@2085>       EXG.l D0,D1
00020F2A <AmiBlitz3.ab3@2087>       !compare1                                            ;bsr.w tstalpha
00020F2E <AmiBlitz3.ab3@2089>       BNE.w 'acskip2
00020F32 <AmiBlitz3.ab3@2090>       ANDI.w #$DF,D0        ; was 255-32
00020F34 <AmiBlitz3.ab3@2093>       EXG.l D0,D1
00020F36 <AmiBlitz3.ab3@2094>       CMP.b D1,D0
00020F3A <AmiBlitz3.ab3@2095>     BEQ.w 'comloop
00020F3E <AmiBlitz3.ab3@2096>     BCS.w 'here             ;I'm less than
00020F40 <AmiBlitz3.ab3@2099>     MOVEA.l D5,A0
00020F44 <AmiBlitz3.ab3@2100>  BRA.w 'insloop
00020F46 <AmiBlitz3.ab3@2103>     MOVEA.l D6,A1                                          ; hier war die adresse des allokierten Speicers drin
00020F48 <AmiBlitz3.ab3@2104>     MOVE.l (A0),(A1)            ;next of last is next of me
00020F4A <AmiBlitz3.ab3@2105>     MOVE.l A1,(A0)              ;I am next of last
00020F4C <AmiBlitz3.ab3@2106>     ADDQ.w #4,A1                                           ; pointer zum naechsten namen ueberspringen
00020F50 <AmiBlitz3.ab3@2107>     MOVE.w #$FFFF,(A1)+         ; was - 1;set 'Used' flag  ; $FFFF schreiben
00020F56 <AmiBlitz3.ab3@2108>     MOVEA.l #fib_FileName,A0    ; was #namebuff+8,         ; dateinamen in die liste kopieren
00020F58 <AmiBlitz3.ab3@2111>       MOVE.b (A0)+,(A1)+
00020F5C <AmiBlitz3.ab3@2112>     BNE.w 'coploop
00020F60 <AmiBlitz3.ab3@2113>  BRA.w 'loop    ;scan_libsdrawer
00020F62 <AmiBlitz3.ab3@2116>   MOVE.l D7,D1
00020F68 <AmiBlitz3.ab3@2117>   MOVEA.l _dosbase,A6
00020F6C <AmiBlitz3.ab3@2118>   JSR _UnLock(A6)
00020F6E <AmiBlitz3.ab3@2119>   MOVEQ.l #-$01,D0
00020F70 <AmiBlitz3.ab3@2122>  RTS
00020F72 <AmiBlitz3.ab3@2125>   MOVE.l D7,D1
00020F78 <AmiBlitz3.ab3@2126>   MOVEA.l _dosbase,A6
00020F7C <AmiBlitz3.ab3@2127>   JSR _UnLock(A6)
00020F7E <AmiBlitz3.ab3@2128>   MOVEQ.l #$00,D0
00020F80 <AmiBlitz3.ab3@2129> RTS
00020F86 <AmiBlitz3.ab3@2134>   MOVEA.l _execbase,A6
00020F8C <AmiBlitz3.ab3@2135>   MOVEA.l ptr_userlibs_list,A2
00020F92 <AmiBlitz3.ab3@2136>   CLR.l ptr_userlibs_list
00020F96 <AmiBlitz3.ab3@2139>     CMPA.w #$0,A2
00020F9A <AmiBlitz3.ab3@2140>     BEQ.w 'done
00020F9C <AmiBlitz3.ab3@2141>       MOVEA.l A2,A1
00020F9E <AmiBlitz3.ab3@2142>       MOVEQ.l #$26,D0
00020FA0 <AmiBlitz3.ab3@2143>       MOVEA.l (A2),A2
00020FA6 <AmiBlitz3.ab3@2145>       MOVE.l mempool,a0
00020FAC <AmiBlitz3.ab3@2146>       MOVEA.l _execbase,A6
00020FB0 <AmiBlitz3.ab3@2147>       JSR _FreePooled(A6)
00020FB4 <AmiBlitz3.ab3@2150>  BRA.w 'loop
00020FB6 <AmiBlitz3.ab3@2153> RTS
00020FB8 <AmiBlitz3.ab3@2157> pass:  Dc.w 0                                             ; smallpass org source
00020FBA <AmiBlitz3.ab3@2158> compiler_job: Dc.w 0                                      ; added by thilo: what the compiler is doing at the moment
00020FC0 <AmiBlitz3.ab3@2164>   MOVE.l A7,errstack                                      ;startcompile
00020FC4 <AmiBlitz3.ab3@2166>   !regs2stack
00020FCC <AmiBlitz3.ab3@2167>   BTST #$7,make_smallestcode       ; test if makesmall is set
00020FD0 <AmiBlitz3.ab3@2168>   BNE 'nobigallox                  ; yes makesmall is set, we don't change the buffers
00020FD6 <AmiBlitz3.ab3@2169>     JSR bigallox                   ; no try to make big buffers for 1 pass compile
00020FDA <AmiBlitz3.ab3@2172>   !stack2regs
00020FE0 <AmiBlitz3.ab3@2183>   CLR.l reqmode
00020FEA <AmiBlitz3.ab3@2185>   MOVE.l #Aclearallvars,errcont
00020FF4 <AmiBlitz3.ab3@2186>   MOVE.l #concomstack,concomsp
00020FF8 <AmiBlitz3.ab3@2195>   MOVE.w #1450,D0
00020FFA <AmiBlitz3.ab3@2197>   LSR.w #3,D0
00020FFC <AmiBlitz3.ab3@2198>   SUBQ.w #7,D0                                             ; 173
00021002 <AmiBlitz3.ab3@2199>   MOVE.w D0,progressbar_width
00021004 <AmiBlitz3.ab3@2200>   SWAP D0
00021006 <AmiBlitz3.ab3@2201>   CLR.w D0
0002100C <AmiBlitz3.ab3@2202>   MOVE.l numlines,d1           ; was divu numlines,d0
00021010 <AmiBlitz3.ab3@2203>   DIVU.l d1,d0                                             ; progressbar_width / numlines
00021012 <AmiBlitz3.ab3@2205>   TST.w D0
00021016 <AmiBlitz3.ab3@2206>   BNE.w 'ok
00021018 <AmiBlitz3.ab3@2207>   MOVEQ.l #-$01,D0
0002101E <AmiBlitz3.ab3@2210>   MOVE.w D0,progress_per_line
00021026 <AmiBlitz3.ab3@2220>   BTST #$7,use_debugger
0002102A <AmiBlitz3.ab3@2223>   BNE 'debugon
00021030 <AmiBlitz3.ab3@2224>   CLR.w debugmode
00021034 <AmiBlitz3.ab3@2225>  BRA.b 'debugoff
0002103A <AmiBlitz3.ab3@2228>   SNE debugmode
00021072 <AmiBlitz3.ab3@2236>   !ComData_SetB{comByte_DebugMode,debugmode}
00021078 <AmiBlitz3.ab3@2239>   CLR.w dirmode           ;direct mode flag                                  ;direct mode flag
0002107E <AmiBlitz3.ab3@2240>   CLR.w ezerr             ;quiet error                                 ;quiet error
00021084 <AmiBlitz3.ab3@2241>   CLR.l currentfunction
0002108A <AmiBlitz3.ab3@2242>   CLR.w connest
00021090 <AmiBlitz3.ab3@2243>   CLR.w varmode
00021096 <AmiBlitz3.ab3@2244>   CLR.w proceduremode
0002109C <AmiBlitz3.ab3@2245>   CLR.w ininclude
000210A2 <AmiBlitz3.ab3@2246>   CLR.w intstring
000210A8 <AmiBlitz3.ab3@2247>   CLR.w pass
000210B0 <AmiBlitz3.ab3@2249>   MOVE.w #0,compiler_job
000210B6 <AmiBlitz3.ab3@2250>   CLR.l errorcounter
000210BC <AmiBlitz3.ab3@2261>   CLR.l funcscanon
000210C0 <AmiBlitz3.ab3@2263>   BSR.w compileall
000210C6 <AmiBlitz3.ab3@2265>   ADDQ.w #1,pass
000210CA <AmiBlitz3.ab3@2266> 
000210F4 <AmiBlitz3.ab3@2267>   !basic
000210FC <AmiBlitz3.ab3@2268>   samesize.l = 0
00021124 <AmiBlitz3.ab3@2269>   needsize0.l = Peek.l(?bigpc) -Peek.l(?destbufferstart)
00021142 <AmiBlitz3.ab3@2270>   !asm
00021146 <AmiBlitz3.ab3@2271>   !stack2regs
0002114C <AmiBlitz3.ab3@2273>   TST.l errorcounter
00021150 <AmiBlitz3.ab3@2274>   BEQ 'skiperrorstop
00021152 <AmiBlitz3.ab3@2275>  RTS
00021158 <AmiBlitz3.ab3@2278>   MOVE.w dontwrite_nomemleft,d0
0002115C <AmiBlitz3.ab3@2279>   CMP.w #1,d0
00021160 <AmiBlitz3.ab3@2280>   BNE 'l3
00021166 <AmiBlitz3.ab3@2281>   TST.l errorcounter
0002116A <AmiBlitz3.ab3@2282>   BNE 'l3
00021170 <AmiBlitz3.ab3@2283>   CLR.w dontwrite_nomemleft
00021174 <AmiBlitz3.ab3@2284>   BSR compileall                                           ;if a function is not found
0002117A <AmiBlitz3.ab3@2285>   ADDQ.w #1,pass
000211B8 <AmiBlitz3.ab3@2289>   !ComData_GetB{comByte_FuncOptimize,D0}  ; now its in the xtra file and can be put to GUI settings ; Wanderer
000211BC <AmiBlitz3.ab3@2290>   BEQ 'out  ; only if func optimize is set >< 0; Wanderer
000211C2 <AmiBlitz3.ab3@2291>   LEA firstproc,a0
000211C8 <AmiBlitz3.ab3@2292>   CLR.l savefuncspace
000211CA <AmiBlitz3.ab3@2293>   MOVE.l (a0),d0
000211CC <AmiBlitz3.ab3@2297>     MOVE.l d0,a0
000211D0 <AmiBlitz3.ab3@2298>     BEQ 'out
000211D4 <AmiBlitz3.ab3@2299>     TST.b isfunc(a0)
000211D8 <AmiBlitz3.ab3@2300>     BNE 'nex
000211DC <AmiBlitz3.ab3@2301>     MOVEM.l d2/a6/a0,-(a7)
000211DE <AmiBlitz3.ab3@2303>     MOVEQ #0,d0
000211E2 <AmiBlitz3.ab3@2304>     MOVE.b $21+#funcentry_extend-1(a0),d0
000211E6 <AmiBlitz3.ab3@2305>     SUB.w #$21+#funcentry_extend,d0
000211EA <AmiBlitz3.ab3@2306>     ADD.w #16,d0
000211F0 <AmiBlitz3.ab3@2307>     MOVE.l #$10000,d1
000211F2 <AmiBlitz3.ab3@2308>     MOVE.l d0,d2
000211F8 <AmiBlitz3.ab3@2309>     MOVEA.l _execbase,A6
000211FC <AmiBlitz3.ab3@2310>     JSR _AllocMem(a6)         ; thilo: not 100% sure about this!
000211FE <AmiBlitz3.ab3@2311>     MOVE.l d0,a1
00021202 <AmiBlitz3.ab3@2312>     MOVE.l d2,4(a1)
00021208 <AmiBlitz3.ab3@2313>     MOVE.l unusedfunc,(a1)
0002120E <AmiBlitz3.ab3@2314>     MOVE.l d0,unusedfunc
00021212 <AmiBlitz3.ab3@2315>     MOVEM.l (a7)+,a6/a0/d2
00021216 <AmiBlitz3.ab3@2316>     MOVE.l isfunc+1(a0),d0
00021218 <AmiBlitz3.ab3@2317>     ADDQ.l #6,d0
0002121E <AmiBlitz3.ab3@2318>     ADD.l d0,savefuncspace
00021222 <AmiBlitz3.ab3@2321>     MOVE.l d0,8(a1)
00021226 <AmiBlitz3.ab3@2322>     LEA 12(a1),a1
00021228 <AmiBlitz3.ab3@2323>     MOVE.l a0,-(a7)
0002122C <AmiBlitz3.ab3@2324>     LEA $21+#funcentry_extend(a0),a0
0002122E <AmiBlitz3.ab3@2327>       MOVE.b (a0)+,(a1)+
00021232 <AmiBlitz3.ab3@2328>     BNE 'l1
00021234 <AmiBlitz3.ab3@2329>     MOVE.l (a7)+,a0
00021236 <AmiBlitz3.ab3@2332>     MOVE.l (a0),d0
0002123A <AmiBlitz3.ab3@2333>  BRA 'lr1
00021242 <AmiBlitz3.ab3@2336>   BTST #$7,make_smallestcode
00021246 <AmiBlitz3.ab3@2337>   BEQ.b 'nosmall                                           ;optimize for executable
0002124C <AmiBlitz3.ab3@2339>   CLR.l morememadd
00021250 <AmiBlitz3.ab3@2343>   BSR.w alloxadj
00021254 <AmiBlitz3.ab3@2344>   BEQ.w 'anerr
00021258 <AmiBlitz3.ab3@2347>   BSR.w compileall
0002125E <AmiBlitz3.ab3@2349>   ADDQ.w #1,pass
00021262 <AmiBlitz3.ab3@2350> 
0002128C <AmiBlitz3.ab3@2351>   !basic
000212A0 <AmiBlitz3.ab3@2352>   If releaseexe = True                                       ; test if we creat a releas exe
000212C8 <AmiBlitz3.ab3@2353>     needsize1.l = Peek.l(?bigpc) -Peek.l(?destbufferstart)   ; get the size form the last compile
000212E6 <AmiBlitz3.ab3@2354> 
0002131C <AmiBlitz3.ab3@2355>       !ComData_SetW{comWord_CreateDebugFile,#1}              ; set create .dbg file to one
0002133A <AmiBlitz3.ab3@2356>       !asm
00021340 <AmiBlitz3.ab3@2357>       JSR ab3_OpenDebugFile                                  ; open the .dbg flie
00021344 <AmiBlitz3.ab3@2358>       !stack2regs
00021348 <AmiBlitz3.ab3@2359>       BSR compileall                                         ; compile for the last time to creat the dbg file
0002134C <AmiBlitz3.ab3@2360>       !regs2stack
00021376 <AmiBlitz3.ab3@2361>       !basic
00021384 <AmiBlitz3.ab3@2363>     If needsize1 < needsize0   ; test if the needed size is smaller then the compile befor
0002138A <AmiBlitz3.ab3@2364>       needsize0 = needsize1    ; yes the new size is that the old size
000213A8 <AmiBlitz3.ab3@2365>       !asm
000213AC <AmiBlitz3.ab3@2366>       !stack2regs
000213B0 <AmiBlitz3.ab3@2367>       BRA 'l3                  ; back to the funcscan and compile again
000213CE <AmiBlitz3.ab3@2370>   !asm
000213D2 <AmiBlitz3.ab3@2371>   !stack2regs
000213D8 <AmiBlitz3.ab3@2375>   MOVE.w dontwrite_nomemleft,D1
000213DC <AmiBlitz3.ab3@2376>   BEQ.w 'dosave
000213E0 <AmiBlitz3.ab3@2397>  BRA.w 'inc     ; was beq
000213E8 <AmiBlitz3.ab3@2411>   MOVE.w #$FFFF,anyerrs        ; was -1
000213EC <AmiBlitz3.ab3@2412>  BRA.w 'dosave
000213F0 <AmiBlitz3.ab3@2415>   BSR.w alloxinc                                          ;increase all by 50%
000213F4 <AmiBlitz3.ab3@2416>   BEQ.w Aclearallvars
000213F8 <AmiBlitz3.ab3@2417>  BRA.w 'retry
000213FC <AmiBlitz3.ab3@2430> BRA.w qfree        ;used to go after beq .nosave                          ;???????
00021402 <AmiBlitz3.ab3@2436>   JSR freereps
00021408 <AmiBlitz3.ab3@2437>   JSR freesels
0002140E <AmiBlitz3.ab3@2438>   JSR freetlist
00021414 <AmiBlitz3.ab3@2439>   JSR freepends
0002141A <AmiBlitz3.ab3@2440>   JSR freeifs
00021420 <AmiBlitz3.ab3@2441>   JSR freeincs
00021426 <AmiBlitz3.ab3@2442>   JSR freexincs
0002142C <AmiBlitz3.ab3@2443>   JSR freefors
00021432 <AmiBlitz3.ab3@2444> JMP cleartemplabel
00021436 <AmiBlitz3.ab3@2447> mempool2:  Dc.l 0
0002143C <AmiBlitz3.ab3@2452>   JSR Aclearcache
00021444 <AmiBlitz3.ab3@2454>   BTST #$7,use_debugger
00021448 <AmiBlitz3.ab3@2456>   BNE 'debugon
0002144E <AmiBlitz3.ab3@2457>   CLR.w debugmode
00021452 <AmiBlitz3.ab3@2458>  BRA.b 'debugoff
00021458 <AmiBlitz3.ab3@2461>   SNE debugmode
00021490 <AmiBlitz3.ab3@2466>   !ComData_SetB{comByte_DebugMode,debugmode}
00021496 <AmiBlitz3.ab3@2468>   LEA regtable,a0
00021498 <AmiBlitz3.ab3@2469>   MOVEQ #10,d0
0002149A <AmiBlitz3.ab3@2472>     CLR.l (a0)+
0002149E <AmiBlitz3.ab3@2473>   DBF d0,'l1
000214A4 <AmiBlitz3.ab3@2475>   LEA includetemp2,a0
000214A6 <AmiBlitz3.ab3@2476>   CLR.b (a0)
000214B0 <AmiBlitz3.ab3@2477>   MOVE.l #7,maxregs
000214B6 <AmiBlitz3.ab3@2478>   CLR.w debugnest
000214BC <AmiBlitz3.ab3@2479>   CLR.b funcparloop
000214C2 <AmiBlitz3.ab3@2480>   CLR.b nostringopt
000214C8 <AmiBlitz3.ab3@2481>   CLR.b firsttime
000214CE <AmiBlitz3.ab3@2482>   CLR.l lastdestpointer
000214D4 <AmiBlitz3.ab3@2483>   CLR.l lastwritedat
000214DA <AmiBlitz3.ab3@2484>   CLR.l prevwritedat
000214E0 <AmiBlitz3.ab3@2485>   CLR.l includeline
000214E6 <AmiBlitz3.ab3@2486>   CLR.b incnif
000214EC <AmiBlitz3.ab3@2487>   CLR.b formode
000214F2 <AmiBlitz3.ab3@2488>   CLR.b funccall
000214F8 <AmiBlitz3.ab3@2489>   CLR.w objectcount
000214FE <AmiBlitz3.ab3@2490>   CLR.b resdisable
00021504 <AmiBlitz3.ab3@2491>   CLR.b developobject
0002150A <AmiBlitz3.ab3@2492>   CLR.b optistring
00021510 <AmiBlitz3.ab3@2493>   CLR.b optistring2
00021516 <AmiBlitz3.ab3@2494>   CLR.b optiarray
0002151C <AmiBlitz3.ab3@2495>   CLR.b quickadd
00021522 <AmiBlitz3.ab3@2496>   CLR.w newmode
00021528 <AmiBlitz3.ab3@2497>   CLR.w mode
0002152E <AmiBlitz3.ab3@2498>   CLR.w string1
00021534 <AmiBlitz3.ab3@2499>   CLR.b fastfunc
0002153A <AmiBlitz3.ab3@2500>   CLR.w load_var_size
00021540 <AmiBlitz3.ab3@2501>   CLR.w load_var_reg
00021546 <AmiBlitz3.ab3@2502>   CLR.l load_var_addr
0002154C <AmiBlitz3.ab3@2503>   CLR.w imm_size
00021552 <AmiBlitz3.ab3@2504>   CLR.w imm_reg
00021558 <AmiBlitz3.ab3@2505>   CLR.l imm_addr
0002155E <AmiBlitz3.ab3@2506>   CLR.b _dcb
00021564 <AmiBlitz3.ab3@2507>   CLR.l nohunkoffset
0002156A <AmiBlitz3.ab3@2508>   CLR.b peekaddrsize
00021570 <AmiBlitz3.ab3@2509>   CLR.b typecheck
00021576 <AmiBlitz3.ab3@2510>   CLR.b declare2
0002157C <AmiBlitz3.ab3@2511>   CLR.b declare
00021582 <AmiBlitz3.ab3@2512>   CLR.l myoline                                          ;check
00021588 <AmiBlitz3.ab3@2513>   CLR.l myline                                          ;check
0002158E <AmiBlitz3.ab3@2514>   CLR.b newvariable
00021594 <AmiBlitz3.ab3@2515>   CLR.b saved0
0002159A <AmiBlitz3.ab3@2516>   CLR.l bsssize
000215A0 <AmiBlitz3.ab3@2517>   CLR.l chipsize
000215A6 <AmiBlitz3.ab3@2518>   CLR.b infunctioncode
000215AC <AmiBlitz3.ab3@2519>   CLR.l errorcounter
000215B6 <AmiBlitz3.ab3@2520>   MOVE.l #-1,bssstart
000215C0 <AmiBlitz3.ab3@2521>   MOVE.l #-1,bssend
000215CA <AmiBlitz3.ab3@2522>   MOVE.l #-1,chipstart
000215D4 <AmiBlitz3.ab3@2523>   MOVE.l #-1,chipend
000215DC <AmiBlitz3.ab3@2524>   MOVE.w #0,bssmode
000215E2 <AmiBlitz3.ab3@2525>   CLR.w a2offset
000215E8 <AmiBlitz3.ab3@2526>   CLR.w fast
000215EE <AmiBlitz3.ab3@2527>   CLR.w fpu
000215F4 <AmiBlitz3.ab3@2528>   CLR.b iee
000215FA <AmiBlitz3.ab3@2529>   CLR.w newsyntax
000215FE <AmiBlitz3.ab3@2531>   BSR.w qfree
00021604 <AmiBlitz3.ab3@2532>   JSR killoffs              ;free up DOS offset table
0002160A <AmiBlitz3.ab3@2533>   JSR frallvars               ;free up Global vars
00021610 <AmiBlitz3.ab3@2534>   JSR fralltypes              ;free up all types
00021616 <AmiBlitz3.ab3@2535>   JSR freemacs                ;free up actual macro defines.
0002161C <AmiBlitz3.ab3@2536>   JSR clearfunctionlist       ;free up states/funcs
00021622 <AmiBlitz3.ab3@2538>   TST.w pass                  
00021628 <AmiBlitz3.ab3@2541>   JSR clearlabels             ;free up labels
0002162E <AmiBlitz3.ab3@2543>   JSR clearhash
00021634 <AmiBlitz3.ab3@2546>   LEA devo,a0
00021638 <AmiBlitz3.ab3@2547>   MOVEM.l a0-a6/d0-d7,-(a7)
0002163E <AmiBlitz3.ab3@2548>   LEA ptr_parameterstore,a1
00021640 <AmiBlitz3.ab3@2551>     MOVE.b (a0)+,(a1)+
00021644 <AmiBlitz3.ab3@2552>   BNE 'l1b
00021646 <AmiBlitz3.ab3@2553>   MOVEQ #13,d2
0002164C <AmiBlitz3.ab3@2554>   JSR findlabel2
00021650 <AmiBlitz3.ab3@2555>   BNE 'd
00021654 <AmiBlitz3.ab3@2556>   CLR.l 8(a2)
00021658 <AmiBlitz3.ab3@2559>   MOVEM.l (a7)+,a0-a6/d0-d7
00021682 <AmiBlitz3.ab3@2560>   !basic
000216F6 <AmiBlitz3.ab3@2561>   dos_Delete{dos_AddPart{my_systemdir$,"ab_compileerror.txt"}}
00021714 <AmiBlitz3.ab3@2562>   !asm
0002171A <AmiBlitz3.ab3@2563>   CLR.b returncode
00021720 <AmiBlitz3.ab3@2565> JMP freeprocvs                     ;free up outstanding proc stuff
00021726 <AmiBlitz3.ab3@2569>   MOVE.l #bssstore-labelhash,d0
00021728 <AmiBlitz3.ab3@2570>   ASR.l #2,d0
0002172E <AmiBlitz3.ab3@2571>   LEA labelhash,a0
00021730 <AmiBlitz3.ab3@2574>     CLR.l (a0)+
00021732 <AmiBlitz3.ab3@2575>     SUBQ.l #1,d0
00021736 <AmiBlitz3.ab3@2576>   BNE.s 'l10
0002173C <AmiBlitz3.ab3@2578>   LEA labelbase,a1
0002173E <AmiBlitz3.ab3@2579>   MOVE.l (a1),d0
00021742 <AmiBlitz3.ab3@2580>   BEQ 'l11
00021744 <AmiBlitz3.ab3@2583>     MOVE.l d0,a1
00021748 <AmiBlitz3.ab3@2584>     TST.l 4(a1)
0002174C <AmiBlitz3.ab3@2585>     BEQ 'l29
00021750 <AmiBlitz3.ab3@2586>     LEA $13(a1),a0
00021752 <AmiBlitz3.ab3@2587>     MOVEQ #0,d0
00021754 <AmiBlitz3.ab3@2588>     MOVEQ #0,d1
00021756 <AmiBlitz3.ab3@2591>       MOVE.b (a0)+,d1
0002175A <AmiBlitz3.ab3@2592>       BEQ 'l12
00021760 <AmiBlitz3.ab3@2593>       !hashalgo
00021764 <AmiBlitz3.ab3@2594>  BRA 'l13
0002176A <AmiBlitz3.ab3@2597>     LEA labelhash,a0
00021770 <AmiBlitz3.ab3@2598>     AND.l #hashsize,d0
00021772 <AmiBlitz3.ab3@2599>      ASL.l #2,d0
00021776 <AmiBlitz3.ab3@2600>     MOVE.l 0(a0,d0),d1                                     ;*4
0002177A <AmiBlitz3.ab3@2601>     MOVE.l d1,$c(a1)
0002177E <AmiBlitz3.ab3@2602>     MOVE.l a1,0(a0,d0)
00021780 <AmiBlitz3.ab3@2605>     MOVE.l (a1),d0
00021784 <AmiBlitz3.ab3@2606>   BNE 'l21
00021786 <AmiBlitz3.ab3@2609> RTS
0002178C <AmiBlitz3.ab3@2613>   MOVEA.l lastrestype,A0
0002178E <AmiBlitz3.ab3@2614>   MOVEA.l (A0),A2
00021790 <AmiBlitz3.ab3@2615>   CLR.l (A0)
00021796 <AmiBlitz3.ab3@2616> JMP freetypes
0002179C <AmiBlitz3.ab3@2620>   MOVEA.l varbase,A3
000217A2 <AmiBlitz3.ab3@2621>   CLR.l varbase
000217A6 <AmiBlitz3.ab3@2625>   CMPA.w #$0,A3
000217AA <AmiBlitz3.ab3@2626>   BEQ.w 'l20
000217AC <AmiBlitz3.ab3@2627>   MOVEA.l A3,A1
000217AE <AmiBlitz3.ab3@2628>   MOVEA.l (A3),A3
000217B0 <AmiBlitz3.ab3@2629>   MOVEQ.l #$00,D0
000217B4 <AmiBlitz3.ab3@2630>   MOVE.b $E+4(A1),D0
000217BA <AmiBlitz3.ab3@2631>   MOVEA.l _execbase,A6
000217C0 <AmiBlitz3.ab3@2632>   MOVE.l mempool2,a0
000217C4 <AmiBlitz3.ab3@2633>   JSR _FreePooled(A6)
000217C8 <AmiBlitz3.ab3@2634>  BRA.w 'l10
000217CA <AmiBlitz3.ab3@2637> RTS
000217D0 <AmiBlitz3.ab3@2643>   LEA firstiff,A2
000217D2 <AmiBlitz3.ab3@2644>   MOVEQ.l #$0E,D2
000217D8 <AmiBlitz3.ab3@2645> JMP freeslist
000217DA <AmiBlitz3.ab3@2651> progressbar_width:   Dc.w 100                              ;riteend org source ;right end of include strip
000217DC <AmiBlitz3.ab3@2652> inmacro:             Ds.w 1                                ;macmask org source ;macro found
000217E2 <AmiBlitz3.ab3@2659>   CLR.w inmacro
000217E8 <AmiBlitz3.ab3@2661>   ADDQ.l #1,globallinecount
000217EE <AmiBlitz3.ab3@2662>   CLR.b nostringopt
000217F2 <AmiBlitz3.ab3@2664>   BSR.w freembuff
000217F8 <AmiBlitz3.ab3@2665>   CLR.w instringon
000217FE <AmiBlitz3.ab3@2670>   TST.w ininclude
00021802 <AmiBlitz3.ab3@2671>   BEQ.w 'skip3
00021808 <AmiBlitz3.ab3@2673>   ADDQ.l #1,includeline
0002180E <AmiBlitz3.ab3@2674>     JSR ab3_WriteDebugFile
00021814 <AmiBlitz3.ab3@2676>   JSR readinc
00021818 <AmiBlitz3.ab3@2677>   BEQ.w 'skip3
0002181E <AmiBlitz3.ab3@2681>   MOVE.w ininclude,D0
00021822 <AmiBlitz3.ab3@2682>   CMP.w #$4,D0
00021826 <AmiBlitz3.ab3@2683>   BCC.w 'stskip
00021828 <AmiBlitz3.ab3@2684>   ADD.w D0,D0
0002182E <AmiBlitz3.ab3@2685>   LEA progress_per_line,A0
00021832 <AmiBlitz3.ab3@2686>   MOVE.w $0(A0,D0.W),D2     ;offset in line
00021836 <AmiBlitz3.ab3@2687>   CMP.w progressbar_width(PC),D2
0002183A <AmiBlitz3.ab3@2688>   BCC.w 'stskip
0002183E <AmiBlitz3.ab3@2689>   ADDQ.w #1,$0(A0,D0.W)
00021840 <AmiBlitz3.ab3@2691>   LSR.w #1,D0
00021842 <AmiBlitz3.ab3@2693>   MOVE.l d0,d1
00021844 <AmiBlitz3.ab3@2694>   EXT.l d1
00021846 <AmiBlitz3.ab3@2695>   MOVE.l d2,d0
00021848 <AmiBlitz3.ab3@2696>   EXT.l d0                                                 ;d0=x,d1=y
0002184E <AmiBlitz3.ab3@2698>   JSR update_progressbar
00021850 <AmiBlitz3.ab3@2702>   MOVEQ.l #-$01,D0
00021852 <AmiBlitz3.ab3@2703>  RTS
00021858 <AmiBlitz3.ab3@2708>   MOVE.l titleat,D0
0002185A <AmiBlitz3.ab3@2709>   MOVEQ.l #$00,D1
00021860 <AmiBlitz3.ab3@2710>   MOVE.w progress_per_line,D1
00021862 <AmiBlitz3.ab3@2711>   ADD.l D1,D0
00021864 <AmiBlitz3.ab3@2712>   MOVE.l D0,D1
00021866 <AmiBlitz3.ab3@2713>   SWAP D0
0002186C <AmiBlitz3.ab3@2714>   CMP.w titleat,D0
00021870 <AmiBlitz3.ab3@2715>    BEQ.w 'skip3a
00021872 <AmiBlitz3.ab3@2720>   EXT.l d0
00021874 <AmiBlitz3.ab3@2721>   MOVE.l d1,-(a7)
0002187C <AmiBlitz3.ab3@2724>   MOVE.w #1,compiler_job                                    ; set to compiler job 1 (=build executable)
00021882 <AmiBlitz3.ab3@2725>   JSR update_progressbar
0002188A <AmiBlitz3.ab3@2726>   MOVE.w #0,compiler_job                                    ; set to compiler job 0 (=compile source)
0002188C <AmiBlitz3.ab3@2732>   MOVE.l (a7)+,d1
00021892 <AmiBlitz3.ab3@2736>   MOVE.l D1,titleat
00021898 <AmiBlitz3.ab3@2739>   ADDQ.l #1,linenumat
0002189E <AmiBlitz3.ab3@2740>   CLR.w linedone
000218A4 <AmiBlitz3.ab3@2742>   JSR ab3_WriteDebugFile  ; write to DebugFile every main source line
000218AA <AmiBlitz3.ab3@2748>   SUBQ.l #1,numlines2
000218AE <AmiBlitz3.ab3@2750>    BEQ.w 'skip
000218B4 <AmiBlitz3.ab3@2751>   MOVEA.l sourceline,A0
000218B6 <AmiBlitz3.ab3@2752>   MOVEA.l (A0),A0
000218BC <AmiBlitz3.ab3@2753>   MOVE.l A0,sourceline
000218C0 <AmiBlitz3.ab3@2754>   LEA $9(A0),A5
000218C2 <AmiBlitz3.ab3@2757> RTS
000218C4 <AmiBlitz3.ab3@2761>   MOVE.w D0,-(A7)
000218C6 <AmiBlitz3.ab3@2762>   MOVEQ.l #$03,D0
000218C8 <AmiBlitz3.ab3@2765>     MOVE.w D1,D2
000218CC <AmiBlitz3.ab3@2766>     ANDI.w #$F,D2
000218D0 <AmiBlitz3.ab3@2767>     ADDI.w #$30,D2
000218D4 <AmiBlitz3.ab3@2768>     CMP.w #$3A,D2
000218D8 <AmiBlitz3.ab3@2769>      BCS.w 'skip
000218DA <AmiBlitz3.ab3@2770>     ADDQ.w #7,D2
000218DE <AmiBlitz3.ab3@2773>     MOVE.b D2,$0(A0,D0.W)
000218E0 <AmiBlitz3.ab3@2774>     LSR.w #4,D1
000218E4 <AmiBlitz3.ab3@2775>   DBF D0,'loop
000218E6 <AmiBlitz3.ab3@2777>   MOVE.w (A7)+,D0
000218E8 <AmiBlitz3.ab3@2778> RTS
000218EE <AmiBlitz3.ab3@2788>   MOVE.w skipcode,D1
000218F2 <AmiBlitz3.ab3@2789>   BNE.w 'loop0
000218F4 <AmiBlitz3.ab3@2790>  RTS
000218F6 <AmiBlitz3.ab3@2793>   MOVE.l A5,-(A7)
000218F8 <AmiBlitz3.ab3@2794>   MOVEQ.l #$3A,D1      ;':'
000218FA <AmiBlitz3.ab3@2795>   MOVEQ.l #$21,D2      ;'!'
000218FC <AmiBlitz3.ab3@2796>   MOVEQ.l #$3B,D3      ;';'
000218FE <AmiBlitz3.ab3@2797>   MOVEQ.l #$22,D4      ;'"'
00021900 <AmiBlitz3.ab3@2800>   MOVE.b (A5)+,D0
00021904 <AmiBlitz3.ab3@2801>    BEQ.w 'done
00021908 <AmiBlitz3.ab3@2802>    BPL.w 'test
0002190A <AmiBlitz3.ab3@2803>   MOVE.b (A5)+,D0
0002190E <AmiBlitz3.ab3@2804>  BRA.w 'loop
00021910 <AmiBlitz3.ab3@2807>   CMP.b D4,D0
00021914 <AmiBlitz3.ab3@2808>    BNE.w 'notq
00021916 <AmiBlitz3.ab3@2811>   MOVE.b (A5)+,D0
0002191A <AmiBlitz3.ab3@2812>    BEQ.w notqerr
0002191E <AmiBlitz3.ab3@2818>   CMP.b #$22,D0        ;'"'
00021922 <AmiBlitz3.ab3@2819>    BNE.w 'qloop
00021926 <AmiBlitz3.ab3@2820>  BRA.w 'loop
00021928 <AmiBlitz3.ab3@2823>   CMP.b D1,D0
0002192C <AmiBlitz3.ab3@2824>    BEQ.w 'done
0002192E <AmiBlitz3.ab3@2825>   CMP.b D3,D0
00021932 <AmiBlitz3.ab3@2826>    BEQ.w 'done       ;macro character!
00021934 <AmiBlitz3.ab3@2827>   CMP.b D2,D0
00021938 <AmiBlitz3.ab3@2828>    BNE.w 'loop
00021940 <AmiBlitz3.ab3@2832>   MOVE.w #$FFFF,inmacro    ; was -1                                ; no runtimecheck in macros
00021942 <AmiBlitz3.ab3@2833>   MOVEA.l A5,A3
00021948 <AmiBlitz3.ab3@2835>    JSR getparameter2
0002194C <AmiBlitz3.ab3@2836>    BNE.w 'fkitme
00021952 <AmiBlitz3.ab3@2837>  JMP syntaxerr
0002195C <AmiBlitz3.ab3@2842>    MOVE.w oldqflag,instringon
00021962 <AmiBlitz3.ab3@2843>   MOVEA.l lastsourcepos,A5
00021968 <AmiBlitz3.ab3@2846>    JSR findmac                                             ;find macro
0002196C <AmiBlitz3.ab3@2847>    BEQ.w 'kl1
00021972 <AmiBlitz3.ab3@2848>  JMP nomacerr
00021978 <AmiBlitz3.ab3@2852>   TST.b debugmode
0002197C <AmiBlitz3.ab3@2853>   BEQ 'sk1
00021980 <AmiBlitz3.ab3@2854>   MOVE.w #$4e71,d1
00021986 <AmiBlitz3.ab3@2855>   JSR writeword
00021988 <AmiBlitz3.ab3@2856>   MOVE.l a5,-(a7)
0002198A <AmiBlitz3.ab3@2857>   MOVE.l a3,a5
0002198C <AmiBlitz3.ab3@2858>   SUBQ.l #1,a5
00021994 <AmiBlitz3.ab3@2859>   MOVE.w #$0,inmacro
00021998 <AmiBlitz3.ab3@2860>   BSR debugstuffa
000219A0 <AmiBlitz3.ab3@2861>   MOVE.w #$FFFF,inmacro
000219A2 <AmiBlitz3.ab3@2862>   MOVE.l (a7)+,a5
000219A6 <AmiBlitz3.ab3@2863>   MOVE.w #$4e71,d1
000219AC <AmiBlitz3.ab3@2864>   JSR writeword
000219AE <AmiBlitz3.ab3@2868>   MOVEA.l A5,A4            ;start of parameters!
000219B2 <AmiBlitz3.ab3@2872>    CMP.b #" ",(a4)+
000219B6 <AmiBlitz3.ab3@2873>     BEQ 'l5a
000219B8 <AmiBlitz3.ab3@2874>      SUBQ.l#1,a4
000219BC <AmiBlitz3.ab3@2875>      CMP.b #",",(a4)
000219C0 <AmiBlitz3.ab3@2876>     BEQ 'nops
000219C2 <AmiBlitz3.ab3@2880>   MOVEQ.l #$00,D4          ;narg=0
000219C8 <AmiBlitz3.ab3@2882>   TST.b newsyntax
000219CC <AmiBlitz3.ab3@2883>   BEQ 'l10b
000219D0 <AmiBlitz3.ab3@2884>   MOVEM.l a0/d0,-(a7)
000219D4 <AmiBlitz3.ab3@2885>   MOVE.l 4(a2),a0
000219D8 <AmiBlitz3.ab3@2886>   MOVE.w 8(a2),d0
000219DC <AmiBlitz3.ab3@2889>   CMP.b #"`",(a0)+
000219E0 <AmiBlitz3.ab3@2890>   BEQ 'x1
000219E2 <AmiBlitz3.ab3@2891>   SUBQ.w #1,d0
000219E6 <AmiBlitz3.ab3@2892>   BNE 'x2
000219EA <AmiBlitz3.ab3@2893>  BRA 'x3
000219EE <AmiBlitz3.ab3@2896>   MOVEM.l (a7)+,a0/d0
000219F2 <AmiBlitz3.ab3@2897>  BRA 'l10
000219F6 <AmiBlitz3.ab3@2900>   MOVEM.l (a7)+,a0/d0
000219FA <AmiBlitz3.ab3@2901>  BRA 'nops
000219FE <AmiBlitz3.ab3@2905>   CMPI.b #"{",(A4)
00021A02 <AmiBlitz3.ab3@2906>    BNE.w 'nops
00021A04 <AmiBlitz3.ab3@2911>   ADDQ.l #1,a4
00021A08 <AmiBlitz3.ab3@2914>     CMP.b #" ",(a4)
00021A0C <AmiBlitz3.ab3@2915>     BEQ 'l5
00021A10 <AmiBlitz3.ab3@2916>     MOVEM.l a0/d0,-(a7)
00021A16 <AmiBlitz3.ab3@2917>     CLR.b exmac
00021A1C <AmiBlitz3.ab3@2918>     LEA chartab,a0
00021A1E <AmiBlitz3.ab3@2919>     MOVEQ #0,d0
00021A20 <AmiBlitz3.ab3@2920>     MOVE.b (a4),d0
00021A24 <AmiBlitz3.ab3@2921>     BMI 'm1
00021A28 <AmiBlitz3.ab3@2922>     TST.b 0(a0,d0)
00021A2C <AmiBlitz3.ab3@2923>     BEQ 'm1
00021A32 <AmiBlitz3.ab3@2924>     TST.b newsyntax
00021A36 <AmiBlitz3.ab3@2925>     BEQ 'ns1
00021A3A <AmiBlitz3.ab3@2926>     CMP.b #"#",d0
00021A3E <AmiBlitz3.ab3@2927>     BEQ 'm1
00021A42 <AmiBlitz3.ab3@2928>     CMP.b #"$",d0
00021A46 <AmiBlitz3.ab3@2929>     BEQ 'm1
00021A4A <AmiBlitz3.ab3@2930>     CMP.b #"-",d0
00021A4E <AmiBlitz3.ab3@2931>     BEQ 'm1
00021A52 <AmiBlitz3.ab3@2934>   CMP.b #",",d0
00021A56 <AmiBlitz3.ab3@2935>     BEQ 'm1
00021A5A <AmiBlitz3.ab3@2936>     CMP.b #"{",d0
00021A5E <AmiBlitz3.ab3@2937>     BNE 'm1b
00021A60 <AmiBlitz3.ab3@2938>     ADDQ.l #1,a4
00021A64 <AmiBlitz3.ab3@2939>  BRA 'm1
00021A6A <AmiBlitz3.ab3@2942>   TST.b newsyntax
00021A6E <AmiBlitz3.ab3@2943>     BEQ 'm1
00021A76 <AmiBlitz3.ab3@2944>     MOVE.b #1,exmac
00021A7A <AmiBlitz3.ab3@2947>   MOVEM.l (a7)+,a0/d0
00021A80 <AmiBlitz3.ab3@2948>     TST.b exmac
00021A84 <AmiBlitz3.ab3@2949>     BNE 'nops
00021A86 <AmiBlitz3.ab3@2956>   TST.b (a4)
00021A8A <AmiBlitz3.ab3@2957>   BEQ 'nops
00021A90 <AmiBlitz3.ab3@2961>   MOVEA.l ptr_macrobuffer_begin,A0    ;start of parameter collect
00021A92 <AmiBlitz3.ab3@2964>   ADDQ.w #1,D4                        ;another p
00021A94 <AmiBlitz3.ab3@2965>   MOVE.l A4,(A0)
00021A98 <AmiBlitz3.ab3@2967>   CLR.w 4(a0)
00021A9C <AmiBlitz3.ab3@2969>    BSR.w findit
00021A9E <AmiBlitz3.ab3@2972>   ADDQ.l #4,a0
00021AA0 <AmiBlitz3.ab3@2978>   SUBQ.w #1,(a0)+
00021AA4 <AmiBlitz3.ab3@2980>   CMP.b #$7D,D0     ;'}'
00021AA8 <AmiBlitz3.ab3@2982>   BEQ 'l10b1
00021AAA <AmiBlitz3.ab3@2983>   TST.b d0
00021AAE <AmiBlitz3.ab3@2984>   BEQ 'l10b1
00021AB2 <AmiBlitz3.ab3@2985>  BRA 'ppl
00021AB8 <AmiBlitz3.ab3@2991>   CLR.l sourceline3
00021ABA <AmiBlitz3.ab3@2993>   MOVEA.l A4,A5
00021AC0 <AmiBlitz3.ab3@2996>   MOVE.w D4,numarg
00021AC6 <AmiBlitz3.ab3@3007>   MOVE.l #$01,D1
00021ACC <AmiBlitz3.ab3@3008>   MOVEA.l _execbase,A6
00021AD2 <AmiBlitz3.ab3@3010>   MOVE.l mempool,a0
00021AD8 <AmiBlitz3.ab3@3011>   MOVE.l macrobuffer_size,D0
00021ADE <AmiBlitz3.ab3@3012>   CMP.l #DEFAULT_MACROBUFFERSIZE,d0                          ; replaced with a constant tomsmart1
00021AE2 <AmiBlitz3.ab3@3013>   BGE 'l1mc
00021AE8 <AmiBlitz3.ab3@3014>   MOVE.l #DEFAULT_MACROBUFFERSIZE,d0                         ; replaced with a constant tomsmart1
00021AEE <AmiBlitz3.ab3@3015>   MOVE.l d0,macrobuffer_size
00021AF2 <AmiBlitz3.ab3@3018>   JSR _AllocPooled(a6)
00021AFC <AmiBlitz3.ab3@3022>   MOVE.l myline,myoline
00021AFE <AmiBlitz3.ab3@3026>   ADDQ.l #1,d0
00021B04 <AmiBlitz3.ab3@3028>   MOVE.l D0,myline
00021B06 <AmiBlitz3.ab3@3029>   MOVEA.l D0,A1
00021B0C <AmiBlitz3.ab3@3031>   MOVE.b #":",-1(a1)
00021B0E <AmiBlitz3.ab3@3033>   MOVEA.l A1,A6
00021B14 <AmiBlitz3.ab3@3034>   ADDA.l macrobuffer_size,A6   ;end of macro buffer
00021B16 <AmiBlitz3.ab3@3036>   MOVEA.l (A7)+,A0             ;start of the line
00021B18 <AmiBlitz3.ab3@3039>   CMPA.l A6,A1
00021B1C <AmiBlitz3.ab3@3040>    BCC.w mbovererr
00021B1E <AmiBlitz3.ab3@3041>   MOVE.b (A0)+,(a1)+
00021B20 <AmiBlitz3.ab3@3042>   CMPA.l A3,A0
00021B24 <AmiBlitz3.ab3@3043>    BCS.w 'loop2
00021B26 <AmiBlitz3.ab3@3044>   SUBQ.w #1,A1                 ;back over '#'
00021B2A <AmiBlitz3.ab3@3046>   MOVE.w $8(A2),D1             ;mac len
00021B2E <AmiBlitz3.ab3@3047>    BEQ.w 'loop4
00021B36 <AmiBlitz3.ab3@3048>   MOVE.w $A(A2),macnum
00021B3A <AmiBlitz3.ab3@3049>   ADDQ.w #1,$A(A2)
00021B3E <AmiBlitz3.ab3@3050>   MOVEA.l $4(A2),A2
00021B40 <AmiBlitz3.ab3@3051>   SUBQ.w #1,D1
00021B46 <AmiBlitz3.ab3@3053>   CLR.b firstmline
00021B48 <AmiBlitz3.ab3@3057>     MOVEQ.l #$00,D0
00021B4A <AmiBlitz3.ab3@3058>     MOVE.b (A2)+,D0
00021B50 <AmiBlitz3.ab3@3060>     TST.b firstmline
00021B54 <AmiBlitz3.ab3@3061>     BNE 'c1
00021B58 <AmiBlitz3.ab3@3062>     CMP.b #$22,d0         ;'"'
00021B5C <AmiBlitz3.ab3@3063>     BNE 's1
00021B64 <AmiBlitz3.ab3@3064>     MOVE.b #1,firstmline
00021B68 <AmiBlitz3.ab3@3067>     CMP.b #":",d0
00021B6C <AmiBlitz3.ab3@3068>     BNE 'm1a
00021B74 <AmiBlitz3.ab3@3069>     MOVE.b #1,firstmline
00021B78 <AmiBlitz3.ab3@3072>     CMP.b #";",d0
00021B7C <AmiBlitz3.ab3@3073>     BNE 'c1
00021B7E <AmiBlitz3.ab3@3076>     SUBQ.w #1,d1                                           ;filter out comment
00021B80 <AmiBlitz3.ab3@3077>     MOVE.b (a2)+,d0
00021B86 <AmiBlitz3.ab3@3078>     CMP.w #":@",-1(a2)
00021B8A <AmiBlitz3.ab3@3079>     BEQ 'c2
00021B8C <AmiBlitz3.ab3@3080>     TST.w d1
00021B90 <AmiBlitz3.ab3@3081>     BNE 'l1d
00021B94 <AmiBlitz3.ab3@3082>    BRA 'oky2
00021B9A <AmiBlitz3.ab3@3085>     CMP.b #":",1(a2)
00021B9E <AmiBlitz3.ab3@3086>       BNE 'l1d
00021BA0 <AmiBlitz3.ab3@3087>       ADDQ #2,a2
00021BA2 <AmiBlitz3.ab3@3088>       SUBQ #3,d1
00021BA4 <AmiBlitz3.ab3@3089>       MOVE.b (a2)+,d0
00021BAC <AmiBlitz3.ab3@3090>       MOVE.b #1,firstmline
00021BB0 <AmiBlitz3.ab3@3094>     CMP.b #"`",D0
00021BB4 <AmiBlitz3.ab3@3095>      BNE.w 'oky
00021BB6 <AmiBlitz3.ab3@3096>     SUBQ.w #1,D1
00021BB8 <AmiBlitz3.ab3@3097>     MOVE.b (A2)+,D0
00021BBC <AmiBlitz3.ab3@3098>     CMP.w #$7B,D0       ;'{'
00021BC0 <AmiBlitz3.ab3@3099>      BEQ.w 'evalit
00021BC4 <AmiBlitz3.ab3@3100>     CMP.w #$40,D0       ;'@'
00021BC8 <AmiBlitz3.ab3@3101>      BNE.w 'notnum
00021BCA <AmiBlitz3.ab3@3105>     MOVEQ.l #$00,D2
00021BD0 <AmiBlitz3.ab3@3106>     MOVE.w macnum,D2
00021BD2 <AmiBlitz3.ab3@3107>     MOVEA.l A1,A0
00021BD4 <AmiBlitz3.ab3@3108>     MOVE.w D1,-(A7)
00021BDA <AmiBlitz3.ab3@3109>      JSR makelong
00021BDC <AmiBlitz3.ab3@3110>     MOVEA.l A0,A1
00021BDE <AmiBlitz3.ab3@3111>     MOVE.w (A7)+,D1
00021BE2 <AmiBlitz3.ab3@3113>    BRA.w 'oky2
00021BE6 <AmiBlitz3.ab3@3116>     ORI.w #$20,D0
00021BEA <AmiBlitz3.ab3@3117>     CMP.w #$7A,D0       ;'z'
00021BEE <AmiBlitz3.ab3@3118>      BCS.w 'fkit
00021BF4 <AmiBlitz3.ab3@3119>    JMP ilconsterr
00021BF8 <AmiBlitz3.ab3@3122>     SUBI.w #$30,D0
00021BFC <AmiBlitz3.ab3@3123>     CMP.w #$A,D0
00021C00 <AmiBlitz3.ab3@3124>      BCS.w 'itsgot
00021C04 <AmiBlitz3.ab3@3126>     SUBI.w #$27,D0
00021C08 <AmiBlitz3.ab3@3127>     CMP.w #$A,D0
00021C0C <AmiBlitz3.ab3@3128>      BCC.w 'fkit2
00021C12 <AmiBlitz3.ab3@3129>    JMP ilconsterr
00021C16 <AmiBlitz3.ab3@3132>    BRA.w 'itsgot
00021C18 <AmiBlitz3.ab3@3135>     MOVE.l A5,-(A7)
00021C1C <AmiBlitz3.ab3@3136>     MOVEM.l D1/A1-A2/A6,-(A7)
00021C1E <AmiBlitz3.ab3@3137>     MOVEA.l A2,A5
00021C24 <AmiBlitz3.ab3@3138>      JSR evalconst2
00021C28 <AmiBlitz3.ab3@3139>     CMP.w #$7D,D0      ;'}'
00021C2C <AmiBlitz3.ab3@3140>      BEQ.w 'allisok
00021C32 <AmiBlitz3.ab3@3141>    JMP syntaxerr
00021C36 <AmiBlitz3.ab3@3144>     MOVEM.l (A7)+,D1/A1-A2/A6
00021C38 <AmiBlitz3.ab3@3145>     MOVE.l A5,D2
00021C3A <AmiBlitz3.ab3@3146>     SUB.l A2,D2
00021C3C <AmiBlitz3.ab3@3147>     SUB.w D2,D1
00021C3E <AmiBlitz3.ab3@3148>     MOVEA.l A5,A2
00021C44 <AmiBlitz3.ab3@3150>     CLR.w instringon
00021C46 <AmiBlitz3.ab3@3151>     MOVEA.l (A7)+,A5
00021C48 <AmiBlitz3.ab3@3153>     MOVE.l D3,D0
00021C4C <AmiBlitz3.ab3@3154>     BPL.w 'itsgot
00021C52 <AmiBlitz3.ab3@3155>    JMP ilconsterr
00021C54 <AmiBlitz3.ab3@3158>     SUBQ.w #1,D0
00021C58 <AmiBlitz3.ab3@3159>      BPL.w 'ok
00021C5E <AmiBlitz3.ab3@3163>     MOVE.w numarg,D0
00021C62 <AmiBlitz3.ab3@3164>     DIVU #$A,D0
00021C66 <AmiBlitz3.ab3@3165>     ADDI.w #$30,D0
00021C68 <AmiBlitz3.ab3@3166>     CMPA.l A6,A1
00021C6C <AmiBlitz3.ab3@3167>      BCC.w mbovererr
00021C6E <AmiBlitz3.ab3@3168>     MOVE.b D0,(A1)+
00021C70 <AmiBlitz3.ab3@3169>     SWAP D0
00021C74 <AmiBlitz3.ab3@3170>     ADDI.w #$30,D0
00021C76 <AmiBlitz3.ab3@3171>     CMPA.l A6,A1
00021C7A <AmiBlitz3.ab3@3172>      BCC.w mbovererr
00021C7C <AmiBlitz3.ab3@3173>     MOVE.b D0,(A1)+
00021C80 <AmiBlitz3.ab3@3174>    BRA.w 'oky2
00021C86 <AmiBlitz3.ab3@3180>     CMP.w numarg,D0
00021C8A <AmiBlitz3.ab3@3181>      BCC.w 'oky2
00021C8C <AmiBlitz3.ab3@3182>     LSL.w #1,D0
00021C8E <AmiBlitz3.ab3@3183>     MOVE.w D0,D4
00021C90 <AmiBlitz3.ab3@3184>     LSL.w #1,D0
00021C92 <AmiBlitz3.ab3@3185>     ADD.w D4,D0          ;*6
00021C98 <AmiBlitz3.ab3@3186>     MOVEA.l ptr_macrobuffer_begin,A0
00021C9A <AmiBlitz3.ab3@3187>     ADDA.w D0,A0
00021C9E <AmiBlitz3.ab3@3188>     MOVE.w $4(A0),D4     ;len of replacetext
00021CA2 <AmiBlitz3.ab3@3189>      BEQ.w 'oky2
00021CA4 <AmiBlitz3.ab3@3190>     MOVEA.l (A0),A0
00021CA6 <AmiBlitz3.ab3@3191>     SUBQ.w #1,D4
00021CA8 <AmiBlitz3.ab3@3194>       CMPA.l A6,A1
00021CAC <AmiBlitz3.ab3@3195>        BCC.w mbovererr
00021CB0 <AmiBlitz3.ab3@3197>       CMP.w #"@@",(a0)
00021CB4 <AmiBlitz3.ab3@3198>        BNE 'l10e
00021CBA <AmiBlitz3.ab3@3199>       TST.w ininclude
00021CBE <AmiBlitz3.ab3@3200>        BNE errorjoin
00021CC4 <AmiBlitz3.ab3@3203>       MOVE.l sourceline,a0
00021CC6 <AmiBlitz3.ab3@3204>       MOVE.l (a0),a0
00021CCC <AmiBlitz3.ab3@3205>       CMP.l #0,a0
00021CD0 <AmiBlitz3.ab3@3206>       BNE 'l11e
00021CD2 <AmiBlitz3.ab3@3207>       MOVEQ #0,d0
00021CD8 <AmiBlitz3.ab3@3208>       JSR error
00021CDE <AmiBlitz3.ab3@3211>       MOVE.l a0,sourceline
00021CE4 <AmiBlitz3.ab3@3212>       ADDQ.l #1,linenumat
00021CE8 <AmiBlitz3.ab3@3213>       LEA 9(a0),a0
00021CEA <AmiBlitz3.ab3@3214>       MOVE.l a0,-(a7)
00021CEE <AmiBlitz3.ab3@3217>       CMP.b #" ",(a0)+
00021CF2 <AmiBlitz3.ab3@3218>        BEQ 'l110e
00021CF8 <AmiBlitz3.ab3@3219>       CMP.b #";",-1(a0)
00021CFA <AmiBlitz3.ab3@3220>       MOVE.l (a7)+,a0
00021CFE <AmiBlitz3.ab3@3221>        BEQ 'l111e
00021D00 <AmiBlitz3.ab3@3222>       SUBQ.l #1,d4
00021D02 <AmiBlitz3.ab3@3226>       MOVE.b (A0)+,(A1)+
00021D06 <AmiBlitz3.ab3@3227>     DBF D4,'plp
00021D0A <AmiBlitz3.ab3@3229>     BRA.w 'oky2
00021D0C <AmiBlitz3.ab3@3232>     CMPA.l A6,A1
00021D10 <AmiBlitz3.ab3@3233>      BCC.w mbovererr
00021D12 <AmiBlitz3.ab3@3234>     MOVE.b D0,(A1)+
00021D16 <AmiBlitz3.ab3@3235>      BPL.w 'oky2
00021D18 <AmiBlitz3.ab3@3236>     CMPA.l A6,A1
00021D1C <AmiBlitz3.ab3@3237>      BCC.w mbovererr
00021D1E <AmiBlitz3.ab3@3238>     MOVE.b (A2)+,(A1)+
00021D20 <AmiBlitz3.ab3@3239>     SUBQ.w #1,D1
00021D24 <AmiBlitz3.ab3@3242>    DBF D1,'loop3
00021D26 <AmiBlitz3.ab3@3252>   CMPA.l A6,A1
00021D2A <AmiBlitz3.ab3@3253>    BCC.w mbovererr
00021D2C <AmiBlitz3.ab3@3254>   MOVE.b (A5)+,(A1)+
00021D30 <AmiBlitz3.ab3@3255>    BNE.w 'loop4
00021D36 <AmiBlitz3.ab3@3257>   MOVEA.l myline,A5
00021D3C <AmiBlitz3.ab3@3259>   MOVE.l myoline,D0
00021D40 <AmiBlitz3.ab3@3260>    BEQ.w 'skip3
00021D42 <AmiBlitz3.ab3@3262>   SUBQ.l #1,d0
00021D44 <AmiBlitz3.ab3@3264>   MOVEA.l D0,A1
00021D4A <AmiBlitz3.ab3@3265>   MOVE.l macrobuffer_size,D0
00021D50 <AmiBlitz3.ab3@3266>   MOVEA.l _execbase,A6
00021D56 <AmiBlitz3.ab3@3268>   MOVE.l mempool,a0
00021D5A <AmiBlitz3.ab3@3269>   JSR _FreePooled(A6)
00021D5E <AmiBlitz3.ab3@3274>  BRA.w 'loop0
00021D60 <AmiBlitz3.ab3@3277>   MOVEA.l (A7)+,A5
00021D62 <AmiBlitz3.ab3@3278> RTS
00021D68 <AmiBlitz3.ab3@3282>   MOVE.l myline,D0
00021D6C <AmiBlitz3.ab3@3283>   BEQ.w 'no
00021D6E <AmiBlitz3.ab3@3285>   SUBQ.l #1,d0
00021D74 <AmiBlitz3.ab3@3287>   CLR.l myline
00021D76 <AmiBlitz3.ab3@3288>   MOVEA.l D0,A1
00021D7C <AmiBlitz3.ab3@3289>   MOVE.l macrobuffer_size,D0
00021D82 <AmiBlitz3.ab3@3290>   MOVEA.l _execbase,A6
00021D88 <AmiBlitz3.ab3@3292>   MOVE.l mempool,a0
00021D8C <AmiBlitz3.ab3@3293>  JMP _FreePooled(A6)
00021D8E <AmiBlitz3.ab3@3298> RTS
00021D90 <AmiBlitz3.ab3@3304>   MOVEQ.l #$00,D2    ;no nesting
00021D94 <AmiBlitz3.ab3@3308>   ADDQ.w #1,4(a0)
00021D96 <AmiBlitz3.ab3@3310>    MOVE.b (A4)+,D0
00021D9A <AmiBlitz3.ab3@3313>    BEQ exit1
00021D9E <AmiBlitz3.ab3@3315>    BPL.w 'tst
00021DA2 <AmiBlitz3.ab3@3317>   ADDQ.w #1,4(a0)
00021DA4 <AmiBlitz3.ab3@3319>   ADDQ.w #1,A4
00021DA8 <AmiBlitz3.ab3@3320>  BRA.w 'loop
00021DAE <AmiBlitz3.ab3@3324>    TST.w instringon
00021DB2 <AmiBlitz3.ab3@3325>    BNE 'lnom
00021DB6 <AmiBlitz3.ab3@3326>    CMP.b #";",d0
00021DBA <AmiBlitz3.ab3@3327>    BEQ exit2
00021DBE <AmiBlitz3.ab3@3328>    CMP.b #":",d0
00021DC2 <AmiBlitz3.ab3@3329>    BEQ exit2
00021DC6 <AmiBlitz3.ab3@3333>   CMP.b #$22,D0           ;'"'
00021DCA <AmiBlitz3.ab3@3334>    BNE.w 'notq
00021DD0 <AmiBlitz3.ab3@3335>   NOT.w instringon
00021DD4 <AmiBlitz3.ab3@3336>  BRA.w 'loop
00021DDA <AmiBlitz3.ab3@3339>   TST.w instringon
00021DDE <AmiBlitz3.ab3@3340>    BNE.w 'loop
00021DE2 <AmiBlitz3.ab3@3342>    CMP.b #"@",d0
00021DE6 <AmiBlitz3.ab3@3343>    BNE 'l10
00021DEA <AmiBlitz3.ab3@3344>    CMP.b #"@",(a4)
00021DEE <AmiBlitz3.ab3@3345>    BNE 'l10
00021DF4 <AmiBlitz3.ab3@3346>    TST.w ininclude
00021DF8 <AmiBlitz3.ab3@3347>    BNE errorjoin
00021DFE <AmiBlitz3.ab3@3348>    MOVE.l sourceline3,a4
00021E04 <AmiBlitz3.ab3@3349>    CMP.l #0,a4
00021E08 <AmiBlitz3.ab3@3350>    BNE 'l11
00021E0E <AmiBlitz3.ab3@3351>    MOVE.l sourceline,a4
00021E10 <AmiBlitz3.ab3@3354>   MOVE.l (a4),a4
00021E16 <AmiBlitz3.ab3@3355>       CMP.l #0,a4
00021E1A <AmiBlitz3.ab3@3356>       BNE 'l12
00021E1C <AmiBlitz3.ab3@3357>       MOVEQ #0,d0
00021E22 <AmiBlitz3.ab3@3358>       JSR error
00021E28 <AmiBlitz3.ab3@3361>    MOVE.l a4,sourceline3
00021E2C <AmiBlitz3.ab3@3362>    LEA 9(a4),a4
00021E2E <AmiBlitz3.ab3@3363>    MOVEQ #",",d0
00021E32 <AmiBlitz3.ab3@3367>   CMP.b #$2C,D0       ;','
00021E36 <AmiBlitz3.ab3@3368>    BNE.w 'notc
00021E38 <AmiBlitz3.ab3@3369>   TST.w D2
00021E3C <AmiBlitz3.ab3@3370>    BEQ.w 'done
00021E40 <AmiBlitz3.ab3@3371>  BRA.w 'loop
00021E44 <AmiBlitz3.ab3@3376>    CMP.b #$7B,D0      ; same as itisopen                                     ;"{"
00021E48 <AmiBlitz3.ab3@3377>    BEQ.w 'l10b
00021E4C <AmiBlitz3.ab3@3378>   CMP.b #$28,D0                                            ;"("
00021E50 <AmiBlitz3.ab3@3382>    BNE.w 'noto
00021E52 <AmiBlitz3.ab3@3383>   ADDQ.w #1,D2
00021E56 <AmiBlitz3.ab3@3384>  BRA.w 'loop
00021E5A <AmiBlitz3.ab3@3387>   CMP.b #$7D,D0       ;'}'                                    ;"}"
00021E5E <AmiBlitz3.ab3@3388>    BNE.w 'notcb
00021E60 <AmiBlitz3.ab3@3389>  TST.w D2
00021E64 <AmiBlitz3.ab3@3390>    BEQ.w 'done
00021E68 <AmiBlitz3.ab3@3395>    CMP.b #$7D,D0     ; same as isitclose                                       ;"}"
00021E6C <AmiBlitz3.ab3@3396>    BEQ.w 'l10a
00021E70 <AmiBlitz3.ab3@3397>   CMP.b #$29,D0                                            ;")"
00021E74 <AmiBlitz3.ab3@3401>    BNE.w 'loop
00021E76 <AmiBlitz3.ab3@3402>   SUBQ.w #1,D2
00021E7A <AmiBlitz3.ab3@3403> BRA.w 'loop
00021E7C <AmiBlitz3.ab3@3406> RTS
00021E7E <AmiBlitz3.ab3@3411>       SUBQ.l #1,a4
00021E84 <AmiBlitz3.ab3@3412>       CLR.l sourceline3
00021E86 <AmiBlitz3.ab3@3413> RTS
00021E88 <AmiBlitz3.ab3@3417>       MOVEQ #0,d0
00021E8A <AmiBlitz3.ab3@3418>       SUBQ.l #1,a4
00021E90 <AmiBlitz3.ab3@3419>       CLR.l sourceline3
00021E92 <AmiBlitz3.ab3@3420> RTS
00021E96 <AmiBlitz3.ab3@3425>   CMP.b #$7B,D0        ;'{'                                     ;"{"
00021E9A <AmiBlitz3.ab3@3426>   BEQ.w 'yes
00021E9E <AmiBlitz3.ab3@3427>   CMP.b #$28,D0        ;'('                                    ;"("
00021EA0 <AmiBlitz3.ab3@3430> RTS
00021EA4 <AmiBlitz3.ab3@3434>   CMP.b #$7D,D0         ;'}'                                   ;"}"
00021EA8 <AmiBlitz3.ab3@3435>   BEQ.w 'yes
00021EAC <AmiBlitz3.ab3@3436>   CMP.b #$29,D0         ;')'                                   ;")"
00021EAE <AmiBlitz3.ab3@3439> RTS
00021EB0 <AmiBlitz3.ab3@3443> stopit:     Ds.w 1
00021EB2 <AmiBlitz3.ab3@3444> clrreq:     Ds.w 1
00021EB6 <AmiBlitz3.ab3@3466>   MOVE.w clrreq(PC),D0
00021EBA <AmiBlitz3.ab3@3467>    BEQ.w 'skip
00021EEC <AmiBlitz3.ab3@3469> 
00021EF2 <AmiBlitz3.ab3@3471>   LEA clrreq,a0
00021EF4 <AmiBlitz3.ab3@3472>   NOT.w (a0)                                               ;reass
00021EFA <AmiBlitz3.ab3@3473>   MOVEA.l ptr_ThisTask,A0
00021EFE <AmiBlitz3.ab3@3474>   CLR.l $1E(A0)
00021F02 <AmiBlitz3.ab3@3475>   CLR.l $2A(A0)
00021F04 <AmiBlitz3.ab3@3478> RTS
00021F06 <AmiBlitz3.ab3@3481> intsused:  Ds.w 1
00021F0E <AmiBlitz3.ab3@3485>   MOVE.w #-1,blitzoff
00021F14 <AmiBlitz3.ab3@3486>   CLR.w intsused
00021F1A <AmiBlitz3.ab3@3487>   CLR.w anyerrs
00021F20 <AmiBlitz3.ab3@3488>   CLR.w blitzmode
00021F26 <AmiBlitz3.ab3@3489>   CLR.w dontwrite_nomemleft                                              ;nomemleft
00021F2C <AmiBlitz3.ab3@3490>   CLR.w constmode
00021F32 <AmiBlitz3.ab3@3491>   CLR.w cmake
00021F38 <AmiBlitz3.ab3@3492>   CLR.w cfetchmode
00021F3E <AmiBlitz3.ab3@3493>   CLR.l intdata1
00021F44 <AmiBlitz3.ab3@3494>   CLR.w fuckpos
00021F4A <AmiBlitz3.ab3@3495>   CLR.w procnum
00021F50 <AmiBlitz3.ab3@3496>   CLR.w procnum2
00021F56 <AmiBlitz3.ab3@3497>   CLR.w dfetch
00021F5C <AmiBlitz3.ab3@3498>   CLR.l titleat
00021F62 <AmiBlitz3.ab3@3499>   CLR.b usedpath
00021F68 <AmiBlitz3.ab3@3500>   CLR.b path2
00021F6E <AmiBlitz3.ab3@3501>   CLR.w inerr
00021F74 <AmiBlitz3.ab3@3502>   CLR.w intlevel
00021F7A <AmiBlitz3.ab3@3503>   CLR.l cont_pc
00021F80 <AmiBlitz3.ab3@3504>   CLR.l cont_pc2
00021F86 <AmiBlitz3.ab3@3505>   CLR.l lastcontlink
00021F90 <AmiBlitz3.ab3@3507>   MOVE.l destbufferstart,destpointer
00021F9A <AmiBlitz3.ab3@3508>   MOVE.l destbufferstart,bigpc
00021FA4 <AmiBlitz3.ab3@3509>   MOVE.l destbufferend,libend
00021FAE <AmiBlitz3.ab3@3510>   MOVE.l data1start,data1
00021FB8 <AmiBlitz3.ab3@3511>   MOVE.l data2at,data2
00021FC0 <AmiBlitz3.ab3@3513>   MOVE.w #-1,skipcode                                      ;#-1,comflag org source
00021FC8 <AmiBlitz3.ab3@3514>   MOVE.w #-1,linemode                                      ;#-1,linemode org soruce
00021FCE <AmiBlitz3.ab3@3515>   CLR.w oldvcodelen
00021FD4 <AmiBlitz3.ab3@3516>   CLR.b lastgloballabel                                    ;lastbiglab org source
00021FD6 <AmiBlitz3.ab3@3518> RTS
00021FD8 <AmiBlitz3.ab3@3521> debugmode:  Ds.w 1                                         ;debugga org source ;debugger enabled?
00021FDE <AmiBlitz3.ab3@3525>   LEA  clrreq,a1
00021FE2 <AmiBlitz3.ab3@3526>   MOVE.w #2000,(a1)
0002200C <AmiBlitz3.ab3@3527>   !basic
0002205C <AmiBlitz3.ab3@3528>   comstatusstr  = !TRANS{"Initializing Compiler..."} ;default settings
00022064 <AmiBlitz3.ab3@3529>   calcpro       = 0
0002206C <AmiBlitz3.ab3@3530>   calcpro_old   = 0
00022078 <AmiBlitz3.ab3@3531>   typ_old       = -1
00022084 <AmiBlitz3.ab3@3532>   pass_old      = -1
0002208A <AmiBlitz3.ab3@3533>   update_comstatus_gui = True ; for the first
000220C4 <AmiBlitz3.ab3@3535>   GetD0 &comstatusstr : !ComData_SetL{comPtr_CompileStatusString,d0}  ; set pointer of status string for gui tomsmart1 2012 05 12
000220FE <AmiBlitz3.ab3@3536>   GetD0 &calcpro      : !ComData_SetL{comPtr_CompileCalcProLong ,d0}  ; set pointer of calcpro long for gui tomsmart1 2012 05 12
0002211C <AmiBlitz3.ab3@3537>   !asm
0002214E <AmiBlitz3.ab3@3538> 
00022154 <AmiBlitz3.ab3@3540>   CLR.w stopit
00022156 <AmiBlitz3.ab3@3541> RTS
0002215C <AmiBlitz3.ab3@3548>   CLR.w storedebugmode
00022162 <AmiBlitz3.ab3@3549>   CLR.b iserror
00022166 <AmiBlitz3.ab3@3551>   BSR.w compilerequester
00022170 <AmiBlitz3.ab3@3553>   MOVE.l #0,globallinecount
00022176 <AmiBlitz3.ab3@3554>   JSR check_of_same_source
0002217A <AmiBlitz3.ab3@3557>   BSR.w call_setpointerbusy
0002217E <AmiBlitz3.ab3@3559>   BSR.w setcvars
00022186 <AmiBlitz3.ab3@3561>   MOVE.w #$8000,globalvarpointer
00022190 <AmiBlitz3.ab3@3562>   MOVE.l #newtype_quick,defaulttype
00022196 <AmiBlitz3.ab3@3564>   MOVE.l A7,passstack
000221A0 <AmiBlitz3.ab3@3565>   MOVE.l #firstitem_,sourceline
000221AA <AmiBlitz3.ab3@3566>   MOVE.w numlines_org,linesleft
000221B4 <AmiBlitz3.ab3@3568>   MOVE.l numlines,numlines2
000221BA <AmiBlitz3.ab3@3570>   ADDQ.w #1,linesleft
000221C0 <AmiBlitz3.ab3@3571>   ADDQ.l #1,numlines2
000221CA <AmiBlitz3.ab3@3572>   MOVE.l #-1,linenumat
000221CE <AmiBlitz3.ab3@3574>   BSR.w resetlibs
000221D2 <AmiBlitz3.ab3@3575>   BSR.w Aclearallvars
000221D8 <AmiBlitz3.ab3@3577>   LEA progress_per_line+2,A0
000221DA <AmiBlitz3.ab3@3578>   MOVEQ.l #$03,D0
000221DC <AmiBlitz3.ab3@3581>     CLR.w (A0)+
000221E0 <AmiBlitz3.ab3@3582>   DBF D0,'okloop
000221E6 <AmiBlitz3.ab3@3586>   LEA _include,a0
000221EA <AmiBlitz3.ab3@3587>   MOVEM.l a0-a6/d0-d7,-(a7)
000221F0 <AmiBlitz3.ab3@3588>   LEA ptr_parameterstore,a1
000221F2 <AmiBlitz3.ab3@3591>     MOVE.b (a0)+,(a1)+
000221F6 <AmiBlitz3.ab3@3592>   BNE 'l1b
000221F8 <AmiBlitz3.ab3@3594>   MOVEQ #9,d2
000221FE <AmiBlitz3.ab3@3595>   JSR findlabel2
00022202 <AmiBlitz3.ab3@3596>   BNE 'd
0002220A <AmiBlitz3.ab3@3597>   MOVE.l #0,8(a2)
0002220E <AmiBlitz3.ab3@3598>   MOVEM.l (a7)+,a0-a6/d0-d7
00022212 <AmiBlitz3.ab3@3599>  BRA 'd2
00022218 <AmiBlitz3.ab3@3602>   JSR addlabelhash
00022220 <AmiBlitz3.ab3@3603>   MOVE.l #$1,$4(A2)
00022228 <AmiBlitz3.ab3@3604>   MOVE.l #0,8(a2)
0002222C <AmiBlitz3.ab3@3605>   MOVEM.l (a7)+,a0-a6/d0-d7
00022232 <AmiBlitz3.ab3@3608>   LEA _debug,a0
00022236 <AmiBlitz3.ab3@3609>   MOVEM.l a0-a6/d0-d7,-(a7)
0002223C <AmiBlitz3.ab3@3610>   LEA ptr_parameterstore,a1
0002223E <AmiBlitz3.ab3@3613>     MOVE.b (a0)+,(a1)+
00022242 <AmiBlitz3.ab3@3614>   BNE 'l9b
00022244 <AmiBlitz3.ab3@3616>   MOVEQ #7,d2
0002224A <AmiBlitz3.ab3@3617>   JSR findlabel2
0002224E <AmiBlitz3.ab3@3618>   BNE 'd9
00022252 <AmiBlitz3.ab3@3619>   MOVE.b debugmode(PC),D0
00022254 <AmiBlitz3.ab3@3620>   EXT.w d0
00022256 <AmiBlitz3.ab3@3621>   EXT.l d0
0002225A <AmiBlitz3.ab3@3622>   MOVE.l d0,8(a2)
0002225E <AmiBlitz3.ab3@3623>   MOVEM.l (a7)+,a0-a6/d0-d7
00022262 <AmiBlitz3.ab3@3624>  BRA 'd9b
00022268 <AmiBlitz3.ab3@3627>   JSR addlabelhash
00022270 <AmiBlitz3.ab3@3628>   MOVE.l #$1,$4(A2)
00022274 <AmiBlitz3.ab3@3629>   MOVE.b debugmode(PC),D0
00022276 <AmiBlitz3.ab3@3630>   EXT.w d0
00022278 <AmiBlitz3.ab3@3631>   EXT.l d0
0002227C <AmiBlitz3.ab3@3632>   MOVE.l d0,8(a2)
00022280 <AmiBlitz3.ab3@3633>   MOVEM.l (a7)+,a0-a6/d0-d7
00022286 <AmiBlitz3.ab3@3636>   MOVE.l #firstitem_,a0
00022288 <AmiBlitz3.ab3@3637>   MOVE.l (a0),a0
0002228C <AmiBlitz3.ab3@3638>   LEA 9(a0),a0
00022294 <AmiBlitz3.ab3@3639>   MOVE.w #0,exdebug
0002229A <AmiBlitz3.ab3@3640>   TST.b debugmode
0002229E <AmiBlitz3.ab3@3641>    BEQ 'l10
000222A0 <AmiBlitz3.ab3@3644>   MOVE.b (a0)+,d0
000222A4 <AmiBlitz3.ab3@3645>    BEQ 'l10
000222A8 <AmiBlitz3.ab3@3646>   CMP.b #$20,d0
000222AC <AmiBlitz3.ab3@3647>    BEQ 'l2
000222AE <AmiBlitz3.ab3@3648>   SUBQ.l #1,a0
000222B4 <AmiBlitz3.ab3@3649>   CMP.l #"DEBU",(a0)
000222B8 <AmiBlitz3.ab3@3650>    BNE 'l10
000222BE <AmiBlitz3.ab3@3651>   CMP.b #"G",4(a0)
000222C2 <AmiBlitz3.ab3@3652>    BNE 'l10
000222CA <AmiBlitz3.ab3@3653>   MOVE.w #$0,debugversion
000222D2 <AmiBlitz3.ab3@3654>   MOVE.b #1,exdebug
000222D8 <AmiBlitz3.ab3@3661>   LEA nops4,A0
000222DE <AmiBlitz3.ab3@3662>   LEA nopsf,A1
000222E4 <AmiBlitz3.ab3@3663>   JSR pokecode2                                            ;write intro nops
000222EA <AmiBlitz3.ab3@3665>   MOVE.l #$01010101,d1
000222F0 <AmiBlitz3.ab3@3666>   JSR writedatalong                                        ;for the 4 tempregs
000222F6 <AmiBlitz3.ab3@3667>   JSR writedatalong
000222FC <AmiBlitz3.ab3@3668>   JSR writedatalong
00022302 <AmiBlitz3.ab3@3669>   JSR writedatalong
00022308 <AmiBlitz3.ab3@3670>   TST.b saved0
0002230C <AmiBlitz3.ab3@3671>    BEQ 'l1
00022312 <AmiBlitz3.ab3@3672>   MOVE.l #$4e714e71,d1
00022318 <AmiBlitz3.ab3@3673>   JSR writelong                                            ;add 2 nops
0002231E <AmiBlitz3.ab3@3674>   MOVE.l #$4e714e71,d1
00022324 <AmiBlitz3.ab3@3675>   JSR writelong                                            ;add 2 nops
0002232A <AmiBlitz3.ab3@3676>   MOVE.l #$4e714e71,d1
00022330 <AmiBlitz3.ab3@3677>   JSR writelong                                            ;add 2 nops
00022336 <AmiBlitz3.ab3@3678>    MOVE.l #$4e714e71,d1
0002233C <AmiBlitz3.ab3@3679>   JSR writelong                                            ;add 2 nops
00022340 <AmiBlitz3.ab3@3683>   MOVE.b debugmode(PC),D1
00022344 <AmiBlitz3.ab3@3684>    BEQ.b 'dskip
0002234E <AmiBlitz3.ab3@3685>   MOVE.b debugmode,storedebugmode
00022352 <AmiBlitz3.ab3@3687>   MOVE.w #$FFDC,D1        ;#runerrlib,
00022356 <AmiBlitz3.ab3@3688>    BSR.w uselib
0002235C <AmiBlitz3.ab3@3690>   TST.w debugversion                                       ;make a version for debugger
00022360 <AmiBlitz3.ab3@3691>    BNE.b 'exec
00022364 <AmiBlitz3.ab3@3695>   MOVE.w #$FA3C,D1        ;#debuglib,
00022368 <AmiBlitz3.ab3@3696>    BSR.w uselib
0002236C <AmiBlitz3.ab3@3697>   MOVE.w #$0001,D1        ;#dhandlerlib,
00022370 <AmiBlitz3.ab3@3698>    BSR.w uselib
00022374 <AmiBlitz3.ab3@3699>  BRA.b 'dskip
00022378 <AmiBlitz3.ab3@3704>   MOVE.w #$FA32,D1        ;#rundebuglib,
0002237C <AmiBlitz3.ab3@3705>   BSR.w uselib
00022380 <AmiBlitz3.ab3@3708>   BSR.w nextline
00022386 <AmiBlitz3.ab3@3710>   CLR.l linenum
0002238C <AmiBlitz3.ab3@3711>   CLR.l stacktrack
00022392 <AmiBlitz3.ab3@3717>   ADDQ.l #1,linenum
0002239C <AmiBlitz3.ab3@3718>   MOVE.l destpointer,destpointer2
000223A2 <AmiBlitz3.ab3@3719>   MOVE.l a5,sourceline2
000223A6 <AmiBlitz3.ab3@3721>   BSR.w compile_line                                        ;compile pass
000223AA <AmiBlitz3.ab3@3725>   BSR.w nextline
000223AE <AmiBlitz3.ab3@3726>    BNE.w passloop
000223B2 <AmiBlitz3.ab3@3727>   BSR.w JUMP_do_runerrson
000223B6 <AmiBlitz3.ab3@3728>   BSR.w pointchk
000223BC <AmiBlitz3.ab3@3730>   TST.b objectcount
000223C0 <AmiBlitz3.ab3@3731>    BNE macenderr
000223C6 <AmiBlitz3.ab3@3733>   CLR.l linenumat
000223CA <AmiBlitz3.ab3@3734>   BSR.w errchx2
000223D4 <AmiBlitz3.ab3@3736>   CMP.l #-1,bssend
000223D8 <AmiBlitz3.ab3@3737>    BNE 'l30
000223E2 <AmiBlitz3.ab3@3738>   MOVE.l destpointer,bssend                                ;compile end
000223E8 <AmiBlitz3.ab3@3741>   MOVE.l destpointer,d0
000223F2 <AmiBlitz3.ab3@3742>   CMP.l #-1,bssstart
000223F6 <AmiBlitz3.ab3@3743>   BNE 'lnf6
00022400 <AmiBlitz3.ab3@3744>   CMP.l #-1,chipstart
00022404 <AmiBlitz3.ab3@3745>   BNE 'lnf6
00022408 <AmiBlitz3.ab3@3746>  BRA 'leven4
0002240E <AmiBlitz3.ab3@3749>   MOVE.l destpointer,d1
00022410 <AmiBlitz3.ab3@3750>   ADDQ.l #3,d1
00022416 <AmiBlitz3.ab3@3751>   AND.l #$fffffffc,d1                                      ;bug ?
0002241C <AmiBlitz3.ab3@3752>   MOVE.l d1,destpointer
00022426 <AmiBlitz3.ab3@3755>   MOVE.l destpointer,codeend
00022430 <AmiBlitz3.ab3@3756>   CMP.l #-1,chipend
00022434 <AmiBlitz3.ab3@3757>   BNE 'l31
0002243E <AmiBlitz3.ab3@3758>   MOVE.l destpointer,chipend
00022444 <AmiBlitz3.ab3@3761>   MOVE.l destpointer,d1
00022446 <AmiBlitz3.ab3@3762>   ADDQ.l #1,d1
0002244C <AmiBlitz3.ab3@3763>   AND.l #$fffffffe,d1                                     ;new evenexit
00022452 <AmiBlitz3.ab3@3764>   MOVE.l d1,destpointer
00022456 <AmiBlitz3.ab3@3767>   MOVE.b debugmode(PC),D1
0002245A <AmiBlitz3.ab3@3768>    BEQ.b 'nodb
0002245E <AmiBlitz3.ab3@3770>    BSR.w debugstuff
00022462 <AmiBlitz3.ab3@3771>   MOVE.w #$C300,D1        ;#finalscheck,
00022468 <AmiBlitz3.ab3@3772>    JSR Atokejsr
0002246C <AmiBlitz3.ab3@3774>    BSR.w debugstuff
00022470 <AmiBlitz3.ab3@3775>   MOVE.l eopcode(PC),D1
00022476 <AmiBlitz3.ab3@3776>    JSR writelong
0002247A <AmiBlitz3.ab3@3777>   MOVE.l lastcontlink(PC),D1
0002247E <AmiBlitz3.ab3@3778>    BEQ.b 'nocl
00022480 <AmiBlitz3.ab3@3779>   MOVEA.l D1,A0
00022484 <AmiBlitz3.ab3@3780>   CLR.w $6(A0)
0002248E <AmiBlitz3.ab3@3787>   MOVE.l destpointer,endop                                ;where end goes...
00022494 <AmiBlitz3.ab3@3789>   TST.w blitzmode
00022498 <AmiBlitz3.ab3@3790>   BEQ.w 'nobl
0002249C <AmiBlitz3.ab3@3791>   BSR.w do_AMIGA                                          ;back to amiga if in blitz!
000224A2 <AmiBlitz3.ab3@3794>   TST.w intsused
000224A6 <AmiBlitz3.ab3@3795>   BEQ.b 'noints
000224AA <AmiBlitz3.ab3@3796>   MOVE.w #$C105,D1                                        ;interupts off!
000224B0 <AmiBlitz3.ab3@3797>   JSR tokejsr2
000224B4 <AmiBlitz3.ab3@3800>   BSR.w calcstatic
000224BA <AmiBlitz3.ab3@3801>   MOVE.w D4,numstatic
000224C0 <AmiBlitz3.ab3@3802>   MOVE.l D3,staticdata
000224C4 <AmiBlitz3.ab3@3803>    BSR.w calcmaxs
000224CA <AmiBlitz3.ab3@3805>   TST.l tokeslist
000224CE <AmiBlitz3.ab3@3806>    BEQ.b 'skipjsrs
000224D4 <AmiBlitz3.ab3@3808>   MOVE.w gotocode,D1                                       ;jmp!
000224DA <AmiBlitz3.ab3@3809>    JSR writeword
000224E4 <AmiBlitz3.ab3@3810>   MOVE.l destpointer,endjmpat
000224E8 <AmiBlitz3.ab3@3811>    BSR.w addoff
000224EE <AmiBlitz3.ab3@3812>    JSR writelong                                           
000224F2 <AmiBlitz3.ab3@3814>    BSR.w fixjsrs                                         ;has to be done before finits!
000224F8 <AmiBlitz3.ab3@3818>   TST.w dontwrite_nomemleft
000224FC <AmiBlitz3.ab3@3819>    BNE.b 'skipjsrs
00022500 <AmiBlitz3.ab3@3820>   MOVEA.l endjmpat(PC),A4
00022506 <AmiBlitz3.ab3@3821>   MOVE.l destpointer,(A4)
0002250C <AmiBlitz3.ab3@3825>   TST.b returncode
00022510 <AmiBlitz3.ab3@3826>   BEQ 'l2
00022514 <AmiBlitz3.ab3@3827>   MOVE.w #$2e80,d1
0002251A <AmiBlitz3.ab3@3828>   JSR writeword
00022520 <AmiBlitz3.ab3@3832>   JSR makefinits
00022526 <AmiBlitz3.ab3@3834>   TST.b returncode
0002252A <AmiBlitz3.ab3@3835>   BEQ 'l3
0002252E <AmiBlitz3.ab3@3836>   MOVE.w #$4e75,d1
00022534 <AmiBlitz3.ab3@3837>   JSR writeword
00022538 <AmiBlitz3.ab3@3838>  BRA 'l1
0002253E <AmiBlitz3.ab3@3842>   MOVE.l #$70004E75,D1
00022544 <AmiBlitz3.ab3@3843>   JSR writelong                                            ;write moveq #0,d0:rts
0002254A <AmiBlitz3.ab3@3846>   JSR makeinits
0002254E <AmiBlitz3.ab3@3847>   BSR.w asmfixer
00022552 <AmiBlitz3.ab3@3849>   BSR.w close_compilewin
00022556 <AmiBlitz3.ab3@3850> BRA.w call_setpointernormal
0002255C <AmiBlitz3.ab3@3853> JUMP_do_runerrson JMP do_runerrson
0002255E <AmiBlitz3.ab3@3857> eopcode:    Dc.b $70,$03                                   ;MOVEQ #$03,D0
00022560 <AmiBlitz3.ab3@3858>             Dc.b $4E,$40                                   ;TRAP  #00
00022564 <AmiBlitz3.ab3@3860> endjmpat:   Ds.l 1
0002256A <AmiBlitz3.ab3@3864>   MOVEA.l newtype_string,A2
00022570 <AmiBlitz3.ab3@3865>   MOVE.l #MaxByte,D0                                       ;move.l #$ff,d0 org source
00022574 <AmiBlitz3.ab3@3868>     CMPA.w #$0,A2
00022578 <AmiBlitz3.ab3@3869>      BEQ.w 'done
0002257C <AmiBlitz3.ab3@3870>     CMP.l $4(A2),D0
00022580 <AmiBlitz3.ab3@3871>      BNE.w 'next
00022588 <AmiBlitz3.ab3@3872>     MOVE.w $8(A2),linenumat+2                              ;type not found  ;move 8(a2),linenumat org source
0002258C <AmiBlitz3.ab3@3873>  BRA.w notypeerr
0002258E <AmiBlitz3.ab3@3876>     MOVEA.l (A2),A2
00022592 <AmiBlitz3.ab3@3877>  BRA.w 'loop
00022594 <AmiBlitz3.ab3@3880> RTS
0002259A <AmiBlitz3.ab3@3884>   LEA labelbase,A2
0002259C <AmiBlitz3.ab3@3888>   MOVE.l (A2),D0                                           ;testlabels
000225A0 <AmiBlitz3.ab3@3889>    BEQ.w 'done
000225A2 <AmiBlitz3.ab3@3890>   MOVEA.l D0,A2
000225A6 <AmiBlitz3.ab3@3891>   MOVE.l $4(A2),D0
000225AA <AmiBlitz3.ab3@3892>   BTST #$0,D0
000225AE <AmiBlitz3.ab3@3893>    BNE.w 'loop
000225B2 <AmiBlitz3.ab3@3894>   MOVE.l $8(A2),D0
000225B6 <AmiBlitz3.ab3@3895>    BNE.w 'loop
000225BE <AmiBlitz3.ab3@3896>   MOVE.w $10(A2),linenumat+2
000225C0 <AmiBlitz3.ab3@3897>   MOVEQ #0,d0
000225C4 <AmiBlitz3.ab3@3898>   MOVE.b $12(a2),d0
000225CC <AmiBlitz3.ab3@3899>   MOVE.w 0(a2,d0),linenumat
000225D2 <AmiBlitz3.ab3@3900>  JMP nolaberr                                               ;label not found
000225D8 <AmiBlitz3.ab3@3903>   MOVE.l concomsp,D0
000225DE <AmiBlitz3.ab3@3904>   CMP.l #concomstack,D0
000225E2 <AmiBlitz3.ab3@3905>    BNE.w chxerr4
000225E8 <AmiBlitz3.ab3@3906>   MOVE.w connest,D1
000225EC <AmiBlitz3.ab3@3907>    BNE.w chxerr4
000225EE <AmiBlitz3.ab3@3911>   MOVE.l D1,-(A7)
000225F4 <AmiBlitz3.ab3@3912>   MOVE.l firstsel,D1
000225F8 <AmiBlitz3.ab3@3913>    BNE.w 'err1
000225FE <AmiBlitz3.ab3@3914>   MOVE.l firstrep,D1
00022602 <AmiBlitz3.ab3@3915>    BNE.w 'err2
00022608 <AmiBlitz3.ab3@3916>   MOVE.w intstring,D1
0002260C <AmiBlitz3.ab3@3917>    BNE.w 'err3
00022610 <AmiBlitz3.ab3@3918>   MOVE.l 4(a7),d1
00022616 <AmiBlitz3.ab3@3919>   MOVE.w proceduremode,D1
0002261A <AmiBlitz3.ab3@3920>    BNE.w 'err6
00022620 <AmiBlitz3.ab3@3921>   MOVE.l firstiff,d1
00022624 <AmiBlitz3.ab3@3922>    BNE 'err5
0002262A <AmiBlitz3.ab3@3923>   MOVE.l firstfor,D1
0002262E <AmiBlitz3.ab3@3924>    BNE.w 'err7
00022630 <AmiBlitz3.ab3@3925>   MOVE.l (A7)+,D1
00022632 <AmiBlitz3.ab3@3926>  RTS
0002263C <AmiBlitz3.ab3@3929>   MOVE.l sellineat,linenumat
00022642 <AmiBlitz3.ab3@3930>  JMP selerrz
0002264C <AmiBlitz3.ab3@3933>   MOVE.l replineat,linenumat
00022652 <AmiBlitz3.ab3@3934>  JMP unterr3
0002265C <AmiBlitz3.ab3@3937>   MOVE.l intlineat,linenumat
00022662 <AmiBlitz3.ab3@3938>  JMP interr2
0002266C <AmiBlitz3.ab3@3941>   MOVE.l iflineat,linenumat
00022672 <AmiBlitz3.ab3@3942>  JMP noenderr
0002267C <AmiBlitz3.ab3@3945>   MOVE.l prolineat,linenumat
00022682 <AmiBlitz3.ab3@3946>  JMP nopenderr
0002268C <AmiBlitz3.ab3@3949>   MOVE.l forlineat,linenumat
00022692 <AmiBlitz3.ab3@3950> JMP nonexterr
0002269C <AmiBlitz3.ab3@3954>   MOVE.l ciflineat,linenumat
000226A2 <AmiBlitz3.ab3@3955> JMP nocenderr
000226AC <AmiBlitz3.ab3@3959>   MOVE.l data1,maxsat
000226AE <AmiBlitz3.ab3@3960>   MOVEQ.l #$00,D4
000226B4 <AmiBlitz3.ab3@3961>   MOVEA.l libpointer,A2
000226B8 <AmiBlitz3.ab3@3964>     CMPA.w #$0,A2
000226BC <AmiBlitz3.ab3@3965>      BEQ.w 'done
000226C0 <AmiBlitz3.ab3@3966>     TST.w $C(A2)
000226C4 <AmiBlitz3.ab3@3967>      BPL.w 'next
000226C8 <AmiBlitz3.ab3@3968>     MOVE.l $12(A2),D0
000226CC <AmiBlitz3.ab3@3969>     TST.w -$2(A2,D0.L)
000226D0 <AmiBlitz3.ab3@3970>      BEQ.w 'next
000226D2 <AmiBlitz3.ab3@3972>     ADDQ.w #1,D4
000226D6 <AmiBlitz3.ab3@3973>     MOVE.w -$6(A2,D0.L),D1
000226DA <AmiBlitz3.ab3@3974>     BSR.w pokedata1
000226DC <AmiBlitz3.ab3@3975>     MOVEQ.l #$01,D1
000226E0 <AmiBlitz3.ab3@3976>     MOVE.w -$2(A2,D0.L),D2
000226E2 <AmiBlitz3.ab3@3977>     LSL.w D2,D1
000226E6 <AmiBlitz3.ab3@3978>     MULU -$4(A2,D0.L),D1                                   ;write objectspacesize
000226EA <AmiBlitz3.ab3@3979>     BSR.w writedatalong
000226EC <AmiBlitz3.ab3@3982>     MOVEA.l (A2),A2
000226F0 <AmiBlitz3.ab3@3983>  BRA.w 'loop
000226F6 <AmiBlitz3.ab3@3986>   MOVE.w D4,maxsused
000226FA <AmiBlitz3.ab3@3987>    BEQ.w 'done2
000226FE <AmiBlitz3.ab3@3988>   MOVE.w #$FFFA,D1       ;was #65530    ;use memlib                                  ;;use memlib
00022702 <AmiBlitz3.ab3@3989> BRA.w uselib
00022704 <AmiBlitz3.ab3@3992> RTS
0002270A <AmiBlitz3.ab3@3998>    MOVE.l a7,stackaddr
0002270E <AmiBlitz3.ab3@4000>    BSR.w compile_term
00022712 <AmiBlitz3.ab3@4001>    BSR.w reget
00022716 <AmiBlitz3.ab3@4002>    BNE.w illeolerr
0002271C <AmiBlitz3.ab3@4004>    TST.w dontwrite_nomemleft
00022720 <AmiBlitz3.ab3@4005>    BNE 'l1
00022726 <AmiBlitz3.ab3@4006>    TST.l stacktrack
0002272A <AmiBlitz3.ab3@4007>    BNE errormsg_stack
0002272E <AmiBlitz3.ab3@4011>    CMP.w #-$7FDE,D0            ; was #$8000+34
00022732 <AmiBlitz3.ab3@4012>    BNE.w 'notelse
00022738 <AmiBlitz3.ab3@4013>    JSR do_else2
0002273C <AmiBlitz3.ab3@4014>  BRA.w compile_line
0002273E <AmiBlitz3.ab3@4017>   TST.w D0
00022742 <AmiBlitz3.ab3@4018>   BNE.w compile_line
00022748 <AmiBlitz3.ab3@4024>   MOVE.l firstiff,D0
0002274C <AmiBlitz3.ab3@4025>    BEQ.w 'done
0002274E <AmiBlitz3.ab3@4026>   MOVEA.l D0,A0
00022752 <AmiBlitz3.ab3@4027>   MOVE.w $C(A0),D1
00022756 <AmiBlitz3.ab3@4028>    BPL.w 'done
0002275A <AmiBlitz3.ab3@4032>   BCLR #$F,D1
00022760 <AmiBlitz3.ab3@4033>    JSR doendif2
00022766 <AmiBlitz3.ab3@4034>    JSR freetheifz
0002276A <AmiBlitz3.ab3@4035> BRA.w 'unthen
0002276C <AmiBlitz3.ab3@4038> RTS
00022772 <AmiBlitz3.ab3@4042>   LEA lastgloballabel,A0
00022774 <AmiBlitz3.ab3@4043>   TST.b (A0)
00022778 <AmiBlitz3.ab3@4044>   BEQ.w nolocerr
0002277E <AmiBlitz3.ab3@4045>   LEA ptr_parameterstore,A1
00022780 <AmiBlitz3.ab3@4046>   MOVEQ.l #$00,D2
00022782 <AmiBlitz3.ab3@4049>   ADDQ.w #1,D2
00022784 <AmiBlitz3.ab3@4050>   MOVE.b (A0)+,(A1)+
00022788 <AmiBlitz3.ab3@4051>    BNE.w 'loop
0002278E <AmiBlitz3.ab3@4052>   MOVE.b #$27,-$1(A1)
00022790 <AmiBlitz3.ab3@4053>   MOVE.w D2,-(A7)
00022796 <AmiBlitz3.ab3@4054>    JSR makename4
00022798 <AmiBlitz3.ab3@4055>   CMP.w (A7)+,D2
0002279C <AmiBlitz3.ab3@4056>    BEQ.w syntaxerr
0002279E <AmiBlitz3.ab3@4057>    TST.w d0
000227A2 <AmiBlitz3.ab3@4058>    BPL 'done
000227AA <AmiBlitz3.ab3@4059>    MOVE.w #$3a,lastchar
000227AC <AmiBlitz3.ab3@4060>    SUBQ.l #2,a5
000227AE <AmiBlitz3.ab3@4063> RTS
000227B8 <AmiBlitz3.ab3@4067>   MOVE.l #forthstack,forthsp
000227C2 <AmiBlitz3.ab3@4068>   MOVE.l #precstack,precsp
000227C4 <AmiBlitz3.ab3@4069> RTS
000227C6 <AmiBlitz3.ab3@4076>   MOVEQ.l #$00,D4
000227F0 <AmiBlitz3.ab3@4079>   !basic
00022832 <AmiBlitz3.ab3@4080> 
00022842 <AmiBlitz3.ab3@4082>   If (c_abort = 1)           ; check if set
00022844 <AmiBlitz3.ab3@4083>     MOVEQ.l #-$01,d4
0002284A <AmiBlitz3.ab3@4084>     MOVE.w D4,stopit
00022868 <AmiBlitz3.ab3@4085>     !asm
0002286C <AmiBlitz3.ab3@4086>     BRA 'skip
0002288A <AmiBlitz3.ab3@4088>   !asm
0002288C <AmiBlitz3.ab3@4089>   MOVEQ.l #$00,D6
0002288E <AmiBlitz3.ab3@4090>   MOVEQ.l #$00,D7                                          ; clr Z-Flag for beq.b in chkstop_chk
00022890 <AmiBlitz3.ab3@4094> RTS
00022894 <AmiBlitz3.ab3@4098>   MOVE.w stopit(PC),D0
00022898 <AmiBlitz3.ab3@4099>   BEQ 'chk
0002289E <AmiBlitz3.ab3@4101>   SUBQ.w #1,stopit
000228A0 <AmiBlitz3.ab3@4106>  RTS
000228A8 <AmiBlitz3.ab3@4110>   MOVE.w #2000,stopit
000228AC <AmiBlitz3.ab3@4112>   BSR.w chkrealstop
000228B0 <AmiBlitz3.ab3@4113>   BEQ.b 'rts
000228B4 <AmiBlitz3.ab3@4116>   BSR.w close_compilewin
000228B8 <AmiBlitz3.ab3@4117>   BSR.w call_setpointernormal
000228BE <AmiBlitz3.ab3@4119>   MOVEA.l errstack,A7
000228C4 <AmiBlitz3.ab3@4120>   MOVEA.l errcont,A0
000228CC <AmiBlitz3.ab3@4121>   MOVE.w #-1,anyerrs
000228CE <AmiBlitz3.ab3@4122> JMP (A0)
000228D2 <AmiBlitz3.ab3@4125> d_pc:           Ds.l 1
000228D6 <AmiBlitz3.ab3@4126> d_bigpc:        Ds.l 1
000228D8 <AmiBlitz3.ab3@4127> d_nomemleft:    Ds.w 1
000228DC <AmiBlitz3.ab3@4128> cont_pc:        Ds.l 1
000228E0 <AmiBlitz3.ab3@4129> cont_pc2:       Ds.l 1
000228E4 <AmiBlitz3.ab3@4130> lastcontlink:   Ds.l 1
000228E8 <AmiBlitz3.ab3@4134>   ORI.w #$4E40,D1
000228EC <AmiBlitz3.ab3@4135> BRA.w JUMP_writeword
000228F2 <AmiBlitz3.ab3@4139>   TST.b debugmode
000228F6 <AmiBlitz3.ab3@4140>   BEQ.w debugstuffa_rts
000228FC <AmiBlitz3.ab3@4151>   TST.w dirmode                                            ;or while in direct mode...
00022900 <AmiBlitz3.ab3@4152>    BNE debugstuffa_rts
0002290A <AmiBlitz3.ab3@4154>   MOVE.l destpointer,d_pc
00022914 <AmiBlitz3.ab3@4155>   MOVE.l bigpc,d_bigpc
0002291E <AmiBlitz3.ab3@4156>   MOVE.w dontwrite_nomemleft,d_nomemleft
00022922 <AmiBlitz3.ab3@4158>   MOVEM.l D0-D1,-(A7)
00022924 <AmiBlitz3.ab3@4160>   MOVEQ.l #$01,D1
00022928 <AmiBlitz3.ab3@4161>    BSR.w writetrap                                         ;write the adress to sourceline
0002292E <AmiBlitz3.ab3@4165>    MOVE.l destpointer,D0
00022934 <AmiBlitz3.ab3@4166>   MOVE.l cont_pc,D1
0002293A <AmiBlitz3.ab3@4167>   MOVE.l D0,cont_pc
00022940 <AmiBlitz3.ab3@4168>   MOVE.l D1,cont_pc2
00022944 <AmiBlitz3.ab3@4169>    BEQ.b 'skip
0002294A <AmiBlitz3.ab3@4171>   TST.w dontwrite_nomemleft
0002294E <AmiBlitz3.ab3@4172>    BNE.b 'skip
00022950 <AmiBlitz3.ab3@4174>   MOVEA.l D1,A4
00022952 <AmiBlitz3.ab3@4175>   SUB.l A4,D0
00022956 <AmiBlitz3.ab3@4176>   MOVE.w D0,$6(A4)
0002295C <AmiBlitz3.ab3@4177>   MOVE.l A4,lastcontlink
00022962 <AmiBlitz3.ab3@4181>   TST.w ininclude
00022968 <AmiBlitz3.ab3@4183>   TST.w makeexec
0002296C <AmiBlitz3.ab3@4184>   BEQ 'l1
00022972 <AmiBlitz3.ab3@4185>   TST.w exdebug
00022976 <AmiBlitz3.ab3@4186>   BEQ 'noinc
0002297A <AmiBlitz3.ab3@4189>   MOVEM.l a0-a1/d2/d3,-(a7)                                ;write source for includes
00022980 <AmiBlitz3.ab3@4190>   MOVE.l data1,d1
00022986 <AmiBlitz3.ab3@4191>   TST.b firsttime
0002298A <AmiBlitz3.ab3@4192>   BNE 'nofirst
00022992 <AmiBlitz3.ab3@4193>   MOVE.b #1,firsttime
00022998 <AmiBlitz3.ab3@4194>   MOVE.l #"DuCk",d1                                        ; to found from debugger the code start
0002299E <AmiBlitz3.ab3@4195>   JSR writedatalong
000229A4 <AmiBlitz3.ab3@4196>   MOVE.l #"AmiB",d1
000229AA <AmiBlitz3.ab3@4197>   JSR writedatalong
000229B0 <AmiBlitz3.ab3@4198>   MOVE.l destbufferstart,d1
000229B6 <AmiBlitz3.ab3@4199>   JSR writedatalong
000229BC <AmiBlitz3.ab3@4200>   TST.w dontwrite_nomemleft
000229C0 <AmiBlitz3.ab3@4201>   BNE 'nohunk
000229C6 <AmiBlitz3.ab3@4202>   MOVE.l data1,d1
000229C8 <AmiBlitz3.ab3@4203>   SUBQ.l #4,d1
000229CE <AmiBlitz3.ab3@4204>   SUB.l destbufferstart,d1
000229D0 <AmiBlitz3.ab3@4205>   MOVE.l d1,d2
000229D6 <AmiBlitz3.ab3@4206>   JSR addhunkoffset
000229DC <AmiBlitz3.ab3@4209>   MOVE.l destpointer,d2
000229E2 <AmiBlitz3.ab3@4210>   MOVE.l data1,d1
000229E8 <AmiBlitz3.ab3@4213>   MOVE.l destpointer,d2
000229EA <AmiBlitz3.ab3@4214>   MOVE.l d1,d3
000229F0 <AmiBlitz3.ab3@4215>   SUB.l destbufferstart,d1
000229F6 <AmiBlitz3.ab3@4216>   OR.l #$80000000,d1
000229FC <AmiBlitz3.ab3@4217>   JSR writelong
00022A02 <AmiBlitz3.ab3@4218>   TST.w inmacro
00022A06 <AmiBlitz3.ab3@4219>   BEQ 'sc1
00022A0C <AmiBlitz3.ab3@4220>   MOVE.l myline,a0
00022A10 <AmiBlitz3.ab3@4222>  BRA 'inc2
00022A16 <AmiBlitz3.ab3@4225>   TST.w ininclude
00022A1A <AmiBlitz3.ab3@4226>   BEQ 'inc
00022A20 <AmiBlitz3.ab3@4227>   MOVE.l includesourceline,a0
00022A24 <AmiBlitz3.ab3@4228>  BRA 'inc2
00022A2A <AmiBlitz3.ab3@4231>   MOVE.l sourceline,a0
00022A2E <AmiBlitz3.ab3@4232>   LEA 9(a0),a0
00022A30 <AmiBlitz3.ab3@4235>   MOVE.l d1,d2
00022A32 <AmiBlitz3.ab3@4236>   MOVE.l A5,D1
00022A34 <AmiBlitz3.ab3@4237>   SUB.l a0,D1
00022A3A <AmiBlitz3.ab3@4238>   ADD.l #9,d1
00022A3E <AmiBlitz3.ab3@4239>   BSR.w JUMP_writeword
00022A44 <AmiBlitz3.ab3@4240>   CMP.l #9,d1
00022A48 <AmiBlitz3.ab3@4241>   BEQ 'pos1
00022A4E <AmiBlitz3.ab3@4242>   TST.w dontwrite_nomemleft
00022A52 <AmiBlitz3.ab3@4243>   BNE 'nopad
00022A58 <AmiBlitz3.ab3@4244>   MOVE.l lastsourceline,d1
00022A5C <AmiBlitz3.ab3@4245>   MOVE.l d1,-6(a4)
00022A60 <AmiBlitz3.ab3@4246>  BRA 'nopad
00022A66 <AmiBlitz3.ab3@4249>   MOVE.l d2,lastsourceline
00022A70 <AmiBlitz3.ab3@4250>    MOVE.l destpointer,lastdestpointer
00022A72 <AmiBlitz3.ab3@4251>    MOVEQ #0,d1
00022A78 <AmiBlitz3.ab3@4252>   MOVE.l data1,d2
00022A7E <AmiBlitz3.ab3@4253>   SUB.l destbufferstart,d2
00022A84 <AmiBlitz3.ab3@4254>   JSR writedatalong
00022A8A <AmiBlitz3.ab3@4255>   TST.w dontwrite_nomemleft
00022A8E <AmiBlitz3.ab3@4256>   BNE 'no2
00022A94 <AmiBlitz3.ab3@4257>   JSR addhunkoffset
00022A9A <AmiBlitz3.ab3@4260>   MOVE.l data1,d2
00022AA0 <AmiBlitz3.ab3@4261>   SUB.l destbufferstart,d2
00022AA6 <AmiBlitz3.ab3@4262>   JSR writedatalong
00022AAC <AmiBlitz3.ab3@4263>   TST.w dontwrite_nomemleft
00022AB0 <AmiBlitz3.ab3@4264>   BNE 'no
00022AB6 <AmiBlitz3.ab3@4265>   JSR addhunkoffset
00022ABC <AmiBlitz3.ab3@4266>   MOVE.l lastwritedat,a1
00022AC2 <AmiBlitz3.ab3@4267>   CMP.l #0,a1
00022AC6 <AmiBlitz3.ab3@4268>   BEQ 'no
00022AC8 <AmiBlitz3.ab3@4269>   MOVE.l d3,(a1)
00022AD0 <AmiBlitz3.ab3@4270>   MOVE.l prevwritedat,4(a1)
00022ADA <AmiBlitz3.ab3@4271>   MOVE.l lastwritedat,prevwritedat
00022AE0 <AmiBlitz3.ab3@4274>   MOVE.l d3,lastwritedat
00022AE2 <AmiBlitz3.ab3@4275>   MOVEQ #4,d1
00022AE6 <AmiBlitz3.ab3@4276>   BSR pokedata1b
00022AE8 <AmiBlitz3.ab3@4279>   MOVE.b (a0)+,d1
00022AEC <AmiBlitz3.ab3@4280>   BEQ 'done
00022AF0 <AmiBlitz3.ab3@4281>   BSR pokedata1b
00022AF4 <AmiBlitz3.ab3@4282>  BRA 'loop
00022AF6 <AmiBlitz3.ab3@4285>   MOVEQ #0,d1
00022AFA <AmiBlitz3.ab3@4286>   BSR pokedata1b
00022B00 <AmiBlitz3.ab3@4287>   MOVE.l data1,d1
00022B04 <AmiBlitz3.ab3@4288>   BTST #0,d1
00022B08 <AmiBlitz3.ab3@4289>   BEQ 'nopad
00022B0A <AmiBlitz3.ab3@4290>   MOVEQ #0,d1
00022B0E <AmiBlitz3.ab3@4291>   BSR pokedata1b
00022B12 <AmiBlitz3.ab3@4294>   MOVEM.l (a7)+,a0-a1/d2/d3
00022B16 <AmiBlitz3.ab3@4295>  BRA 'noinc2
00022B1C <AmiBlitz3.ab3@4299>   MOVE.l sourceline,D1
00022B22 <AmiBlitz3.ab3@4300>   JSR writelong
00022B24 <AmiBlitz3.ab3@4301>   MOVE.l A5,D1
00022B2A <AmiBlitz3.ab3@4302>   SUB.l sourceline,D1
00022B30 <AmiBlitz3.ab3@4303>   JSR writeword
00022B32 <AmiBlitz3.ab3@4306>   MOVEQ.l #$00,D1
00022B38 <AmiBlitz3.ab3@4307>   JSR writeword          ;next cont goes here!                                  ; was: BSR.w writeword
00022B3C <AmiBlitz3.ab3@4309>   MOVEM.l (A7)+,D0-D1
00022B3E <AmiBlitz3.ab3@4312> RTS
00022B44 <AmiBlitz3.ab3@4316>   TST.b debugmode                                          ;extern debug
00022B48 <AmiBlitz3.ab3@4317>    BEQ.b 'rts
00022B4E <AmiBlitz3.ab3@4318>   TST.b dirmode
00022B52 <AmiBlitz3.ab3@4319>   BNE 'rts
00022B5C <AmiBlitz3.ab3@4327>   MOVE.w d_nomemleft,dontwrite_nomemleft
00022B66 <AmiBlitz3.ab3@4328>   MOVE.l d_bigpc,bigpc
00022B70 <AmiBlitz3.ab3@4329>   MOVE.l d_pc,destpointer
00022B7A <AmiBlitz3.ab3@4330>   MOVE.l cont_pc2,cont_pc
00022B7C <AmiBlitz3.ab3@4333> RTS
00022B86 <AmiBlitz3.ab3@4338>   MOVE.l #forthstack,forthsp
00022B90 <AmiBlitz3.ab3@4339>   MOVE.l #precstack,precsp
00022B96 <AmiBlitz3.ab3@4340>   CLR.w regnum
00022B9C <AmiBlitz3.ab3@4341>   CLR.w nonew
00022BA2 <AmiBlitz3.ab3@4342>   CLR.w sbasegot
00022BAC <AmiBlitz3.ab3@4343>   MOVE.w varcodelen,oldvcodelen
00022BB2 <AmiBlitz3.ab3@4344>   CLR.w varcodelen
00022BBA <AmiBlitz3.ab3@4345>   MOVE.w #-1,lasta6
00022BBC <AmiBlitz3.ab3@4346> RTS
00022BC2 <AmiBlitz3.ab3@4350>   TST.w linemode
00022BC6 <AmiBlitz3.ab3@4351>   BMI.b 'skip
00022BCA <AmiBlitz3.ab3@4352>   BSR.w undodebug
00022BD0 <AmiBlitz3.ab3@4353>   MOVE.w linemode,D1
00022BD2 <AmiBlitz3.ab3@4354>   ADDQ.w #4,A7
00022BD4 <AmiBlitz3.ab3@4355>   LSL.w #2,D1
00022BDA <AmiBlitz3.ab3@4356>   LEA modetable,A0
00022BDE <AmiBlitz3.ab3@4357>   MOVEA.l $0(A0,D1.W),A0
00022BE2 <AmiBlitz3.ab3@4358>   BSR.w reget
00022BE4 <AmiBlitz3.ab3@4359>  JMP (A0)                                                   ;jumptokenroutine
00022BE6 <AmiBlitz3.ab3@4362> RTS
00022BEE <AmiBlitz3.ab3@4370>   MOVE.w #0,leaa0a0+2
00022BF4 <AmiBlitz3.ab3@4371>   CLR.b nowdeclare
00022BFA <AmiBlitz3.ab3@4372>   CLR.b notypecheck
00022C00 <AmiBlitz3.ab3@4373>   CLR.l lasttoken
00022C06 <AmiBlitz3.ab3@4374>   CLR.b doimmediate
00022C0C <AmiBlitz3.ab3@4375>   CLR.w vartype
00022C12 <AmiBlitz3.ab3@4376>   CLR.w regnumfunc
00022C18 <AmiBlitz3.ab3@4377>   CLR.b optistring
00022C1E <AmiBlitz3.ab3@4378>   CLR.b iniffcommand
00022C24 <AmiBlitz3.ab3@4379>   CLR.w instringon  ; new
00022C2A <AmiBlitz3.ab3@4380>   CLR.b funccall
00022C30 <AmiBlitz3.ab3@4381>   CLR.l currentfunccall
00022C36 <AmiBlitz3.ab3@4382>   CLR.l leftsidetype
00022C3C <AmiBlitz3.ab3@4383>   CLR.l rightsidetype
00022C42 <AmiBlitz3.ab3@4384>   CLR.w leftsideflagmask
00022C48 <AmiBlitz3.ab3@4385>   CLR.w rightsideflagmask
00022C4E <AmiBlitz3.ab3@4386>   CLR.b peekaddrsize
00022C54 <AmiBlitz3.ab3@4387>   CLR.b blitzparloop
00022C5A <AmiBlitz3.ab3@4388>   CLR.b funcparloop
00022C60 <AmiBlitz3.ab3@4389>   CLR.w parnum           ;7.2014
00022C66 <AmiBlitz3.ab3@4390>   TST.b debugmode
00022C6A <AmiBlitz3.ab3@4391>    BEQ 'fpu
00022C74 <AmiBlitz3.ab3@4397>   MOVE.b fpu,iee
00022C78 <AmiBlitz3.ab3@4398>   MOVE.w stopit(PC),D0
00022C7C <AmiBlitz3.ab3@4399>   BNE 'chkstop_chkb
00022C80 <AmiBlitz3.ab3@4401>   BSR.w chkstop                                          ; message here
00022C86 <AmiBlitz3.ab3@4405>   SUBQ.w #1,stopit
00022C8A <AmiBlitz3.ab3@4409>   BSR.w findmacro                                          ;macro
00022C90 <AmiBlitz3.ab3@4471>   TST.b debugmode
00022C94 <AmiBlitz3.ab3@4472>    BEQ.s 'l10
00022C9A <AmiBlitz3.ab3@4473>   TST.b exdebug
00022C9E <AmiBlitz3.ab3@4474>   BEQ 'l10a
00022CA0 <AmiBlitz3.ab3@4475>   MOVE.w (a5),d0
00022CA4 <AmiBlitz3.ab3@4476>   CMP.w #$8025,d0
00022CA8 <AmiBlitz3.ab3@4477>    BEQ 'l10
00022CAC <AmiBlitz3.ab3@4480>   BSR.w debugstuffa                                         ;insert runtimecode debugcode
00022CB0 <AmiBlitz3.ab3@4484>   BSR.w get1bytemain                                       ;gettokenmain
00022CB4 <AmiBlitz3.ab3@4485>    BEQ.w undodebug
00022CB8 <AmiBlitz3.ab3@4486>   CMP.w #$002b,d0                                            ;check for + cast sign
00022CBC <AmiBlitz3.ab3@4487>     BNE 'lb2
00022CC0 <AmiBlitz3.ab3@4488>     BSR.w get1bytemain
00022CC8 <AmiBlitz3.ab3@4489>     MOVE.b #1,notypecheck
00022CD2 <AmiBlitz3.ab3@4500>   MOVE.l #forthstack,forthsp
00022CDC <AmiBlitz3.ab3@4501>   MOVE.l #precstack,precsp
00022CE2 <AmiBlitz3.ab3@4502>   CLR.w regnum
00022CE8 <AmiBlitz3.ab3@4503>   CLR.w nonew
00022CEE <AmiBlitz3.ab3@4504>   CLR.w sbasegot
00022CF8 <AmiBlitz3.ab3@4505>   MOVE.w varcodelen,oldvcodelen
00022CFE <AmiBlitz3.ab3@4507>   CLR.w varcodelen
00022D06 <AmiBlitz3.ab3@4508>   MOVE.w #$FFFF,lasta6
00022D0A <AmiBlitz3.ab3@4511>   BSR.w smode
00022D0C <AmiBlitz3.ab3@4514>   TST.w D0                 ; was behind cmp ... and befor handleascii in org source
00022D10 <AmiBlitz3.ab3@4515>   BMI.w get_tokencode      ; "
00022D14 <AmiBlitz3.ab3@4517>   CMP.w #$2E,D0            ;'.'
00022D18 <AmiBlitz3.ab3@4518>    BEQ.w handlemouse                                         ;shortlist
00022D1C <AmiBlitz3.ab3@4519>   CMP.w #"#",D0
00022D20 <AmiBlitz3.ab3@4520>    BEQ.w handleconst                                         ;constant found
00022D24 <AmiBlitz3.ab3@4521>   CMP.w #$27,D0            ;'''  ; was #loclabch
00022D28 <AmiBlitz3.ab3@4522>    BEQ.w handlelocal                                            ;local label
00022D2E <AmiBlitz3.ab3@4525>   MOVE.l A5,letstart
00022D34 <AmiBlitz3.ab3@4526>   JSR getparameter
00022D38 <AmiBlitz3.ab3@4527>   BSR.w reget
00022D3C <AmiBlitz3.ab3@4528>    BEQ.w handlelabel                                         ;label found
00022D40 <AmiBlitz3.ab3@4529>   CMP.w #$7B,D0         ;'{'
00022D44 <AmiBlitz3.ab3@4530>    BEQ.w handleproc
00022D46 <AmiBlitz3.ab3@4532>   TST.w d0
00022D4A <AmiBlitz3.ab3@4533>    BPL 'll1
00022D50 <AmiBlitz3.ab3@4534>   TST.b newsyntax
00022D54 <AmiBlitz3.ab3@4535>    BEQ 'll1
00022D5A <AmiBlitz3.ab3@4536>   LEA allowtab,a0
00022D5C <AmiBlitz3.ab3@4537>   MOVEQ #0,d1
00022D5E <AmiBlitz3.ab3@4538>   MOVE.b d0,d1
00022D62 <AmiBlitz3.ab3@4539>   TST.b 0(a0,d1.w)
00022D66 <AmiBlitz3.ab3@4540>    BNE 'll1
00022D68 <AmiBlitz3.ab3@4541>   SUBQ.l #2,a5
00022D70 <AmiBlitz3.ab3@4542>   MOVE.w #":",lastchar                                     ;no doublepoint
00022D74 <AmiBlitz3.ab3@4543>  BRA handlelabel
00022D7C <AmiBlitz3.ab3@4546>   CMP.l #"equ ",-1(a5)
00022D80 <AmiBlitz3.ab3@4547>    BEQ 'll4
00022D88 <AmiBlitz3.ab3@4548>   CMP.l #"EQU ",-1(a5)
00022D8C <AmiBlitz3.ab3@4549>    BNE 'll2
00022D8E <AmiBlitz3.ab3@4552>   ADDQ.l #2,a5
00022D92 <AmiBlitz3.ab3@4553>   BSR.w findlabel2
00022D96 <AmiBlitz3.ab3@4554>   BEQ.w 'lf1
00022D9A <AmiBlitz3.ab3@4555>   BSR.w addlabelhash
00022DA2 <AmiBlitz3.ab3@4556>   MOVE.l #$1,$4(A2)
00022DAA <AmiBlitz3.ab3@4559>   CMPI.l #$1,$4(A2)
00022DAE <AmiBlitz3.ab3@4560>    BNE.w illconerr
00022DB2 <AmiBlitz3.ab3@4561>   BSR get1bytemain
00022DB4 <AmiBlitz3.ab3@4562>   MOVE.l A2,-(A7)
00022DB6 <AmiBlitz3.ab3@4573>   SUBQ.l #1,a5
00022DB8 <AmiBlitz3.ab3@4576>   SUBQ.l #1,a5
00022DBE <AmiBlitz3.ab3@4577>   JSR evalconst2
00022DC0 <AmiBlitz3.ab3@4578>   MOVEA.l (A7)+,A2
00022DC4 <AmiBlitz3.ab3@4579>   MOVE.l D3,$8(A2)
00022DC6 <AmiBlitz3.ab3@4580>   RTS
00022DCA <AmiBlitz3.ab3@4581>   BSR get1bytemain
00022DD2 <AmiBlitz3.ab3@4584>   CMP.l #"SET ",-1(a5)
00022DD6 <AmiBlitz3.ab3@4585>   BNE 'll3
00022DDA <AmiBlitz3.ab3@4586>  BRA 'll4
00022DE0 <AmiBlitz3.ab3@4590> JMP dolet2
00022DE4 <AmiBlitz3.ab3@4594>   CMP.w #-$7FDE,D0    ; was #$8000+34,
00022DE8 <AmiBlitz3.ab3@4595>   BEQ.w get_tokencode
00022DEC <AmiBlitz3.ab3@4596> BRA.w undodebug       ;!*!*!
00022DF0 <AmiBlitz3.ab3@4600>   BSR.w undodebug    ;!***!
00022DF4 <AmiBlitz3.ab3@4601>   BSR.w createlab
00022DF8 <AmiBlitz3.ab3@4602> BRA.w handlelab2
00022DFC <AmiBlitz3.ab3@4606>   BSR.w get1bytemain
00022E00 <AmiBlitz3.ab3@4607>    BEQ.w handleeol     ;syntaxerr
00022E04 <AmiBlitz3.ab3@4608>   CMP.w #"'",D0        ; was #loclabch
00022E08 <AmiBlitz3.ab3@4609>    BEQ.w handlelocal
00022E0C <AmiBlitz3.ab3@4610>    BSR.w makename2
00022E0E <AmiBlitz3.ab3@4612>    TST.w d0
00022E12 <AmiBlitz3.ab3@4613>    BPL handlelabel
00022E14 <AmiBlitz3.ab3@4614>    SUBQ.l #2,a5
00022E1C <AmiBlitz3.ab3@4615>    MOVE.w #":",lastchar
00022E20 <AmiBlitz3.ab3@4616> BRA handlelabel                                              ;????
00022E24 <AmiBlitz3.ab3@4623>   BSR.w undodebug      ;!***!
00022E2A <AmiBlitz3.ab3@4625>   LEA ptr_parameterstore,A0
00022E30 <AmiBlitz3.ab3@4626>   LEA lastgloballabel,A1
00022E32 <AmiBlitz3.ab3@4629>   MOVE.b (A0)+,(A1)+
00022E36 <AmiBlitz3.ab3@4630>    BNE.w 'coplab
00022E3A <AmiBlitz3.ab3@4634>   BSR.w findlabel2
00022E3E <AmiBlitz3.ab3@4635>    BEQ.w 'found
00022E42 <AmiBlitz3.ab3@4637>    BSR.w addlabelhash
00022E46 <AmiBlitz3.ab3@4640>   CLR.l $4(A2)                ;no refs
00022E4E <AmiBlitz3.ab3@4641>   MOVE.l destpointer,$8(A2)   ;pc of label.
00022E56 <AmiBlitz3.ab3@4646>   MOVE.w procnum,$10(A2)
00022E58 <AmiBlitz3.ab3@4647>  RTS
00022E5C <AmiBlitz3.ab3@4650>   MOVE.l $4(A2),D0
00022E60 <AmiBlitz3.ab3@4651>   BTST #$0,D0
00022E64 <AmiBlitz3.ab3@4652>    BNE.w illlaberr
00022E6A <AmiBlitz3.ab3@4654>   TST.w pass
00022E6E <AmiBlitz3.ab3@4657>   MOVE.l $8(A2),D0
00022E72 <AmiBlitz3.ab3@4658>    BNE.w duplaberr
00022E7A <AmiBlitz3.ab3@4659>   MOVE.w procnum,$10(A2)
00022E7E <AmiBlitz3.ab3@4663>   MOVEA.l $4(A2),A3      ;start of refs list
00022E84 <AmiBlitz3.ab3@4664>   MOVEA.l _execbase,A6
00022E88 <AmiBlitz3.ab3@4667>   CMPA.w #$0,A3
00022E8C <AmiBlitz3.ab3@4668>    BEQ.w 'done
00022E90 <AmiBlitz3.ab3@4670>     MOVE.l $4(A2),D1
00022E94 <AmiBlitz3.ab3@4671>     BTST #$0,D1
00022E98 <AmiBlitz3.ab3@4672>     BNE.w illlaberr
00022E9C <AmiBlitz3.ab3@4674>   MOVE.w $8(A3),D1
00022EA0 <AmiBlitz3.ab3@4675>   CMP.w $10(A2),D1
00022EA4 <AmiBlitz3.ab3@4676>    BEQ.w 'isok
00022EAA <AmiBlitz3.ab3@4678>    TST.b newsyntax
00022EAE <AmiBlitz3.ab3@4679>    BEQ 'l1
00022EB2 <AmiBlitz3.ab3@4680>  BRA.w 'isok                                            ;label context out of range fix
00022EBA <AmiBlitz3.ab3@4686>   MOVE.w $A(A3),linenumat+2                                ;move 10(a3),linenumat org source
00022EBE <AmiBlitz3.ab3@4687>  BRA.w referr
00022EC4 <AmiBlitz3.ab3@4690>   MOVE.w dontwrite_nomemleft,D1
00022EC8 <AmiBlitz3.ab3@4691>    BNE.w 'isaskip
00022ECC <AmiBlitz3.ab3@4692>   MOVEA.l $4(A3),A1
00022ED2 <AmiBlitz3.ab3@4693>   BTST #$0,$7(A3)
00022ED6 <AmiBlitz3.ab3@4694>    BEQ.w 'pcref
00022ED8 <AmiBlitz3.ab3@4698>   SUBQ.w #1,A1
00022EDE <AmiBlitz3.ab3@4699>   MOVE.l data2,(A1)
00022EE2 <AmiBlitz3.ab3@4700>  BRA.w 'isaskip
00022EE8 <AmiBlitz3.ab3@4703>   MOVE.l destpointer,(A1)
00022EEA <AmiBlitz3.ab3@4706>   MOVEA.l A3,A1
00022EEC <AmiBlitz3.ab3@4707>   MOVEA.l (A3),A3
00022EF0 <AmiBlitz3.ab3@4708>   MOVE.l A3,$4(A2)     ;new first.
00022EF2 <AmiBlitz3.ab3@4709>   MOVEQ.l #$0C+2,D0    ; was #12
00022EF8 <AmiBlitz3.ab3@4712>   MOVE.l mempool,a0
00022EFE <AmiBlitz3.ab3@4713>   MOVEA.l _execbase,A6
00022F02 <AmiBlitz3.ab3@4714>   JSR _FreePooled(A6)
00022F06 <AmiBlitz3.ab3@4716>  BRA.w 'floop
00022F10 <AmiBlitz3.ab3@4722>    MOVE.l #forthstack,forthsp
00022F1A <AmiBlitz3.ab3@4723>   MOVE.l #precstack,precsp
00022F1E <AmiBlitz3.ab3@4725>    BSR.w getparameter2
00022F22 <AmiBlitz3.ab3@4729>   BSR.w findlabel2
00022F26 <AmiBlitz3.ab3@4730>    BEQ.w 'cfound
00022F2A <AmiBlitz3.ab3@4731>    BSR.w addlabelhash
00022F32 <AmiBlitz3.ab3@4732>   MOVE.l #$1,$4(A2)
00022F36 <AmiBlitz3.ab3@4733>  BRA.w 'cn
00022F3E <AmiBlitz3.ab3@4736>   CMPI.l #$1,$4(A2)
00022F42 <AmiBlitz3.ab3@4737>    BNE.w illconerr
00022F46 <AmiBlitz3.ab3@4748>   CMP.w #$3D,D0         ;'='
00022F4A <AmiBlitz3.ab3@4749>   BEQ.w 'asscon
00022F4C <AmiBlitz3.ab3@4750>  RTS
00022F4E <AmiBlitz3.ab3@4753>   MOVE.l A2,-(A7)
00022F54 <AmiBlitz3.ab3@4754>   JSR evalconst2
00022F56 <AmiBlitz3.ab3@4755>   MOVEA.l (A7)+,A2
00022F5A <AmiBlitz3.ab3@4756>   MOVE.l D3,$8(A2)                                         ;store constant
00022F62 <AmiBlitz3.ab3@4758>   CMP.w #$0a,lastchar
00022F66 <AmiBlitz3.ab3@4759>   BNE 'l1
00022F6E <AmiBlitz3.ab3@4760>   MOVE.w #":",lastchar                                     ;hack to read wizard include files
00022F70 <AmiBlitz3.ab3@4764> RTS
00022F74 <AmiBlitz3.ab3@4770>   BSR.w findproc                                           ;write statement call
00022F78 <AmiBlitz3.ab3@4772>   BEQ '_state
00022F7E <AmiBlitz3.ab3@4773>   TST.l unusedfunc
00022F82 <AmiBlitz3.ab3@4775>   BEQ noprocerr          ; was bne
00022F88 <AmiBlitz3.ab3@4778>   JSR gotoendsource
00022F8C <AmiBlitz3.ab3@4782>   TST.b $5(A2)
00022F92 <AmiBlitz3.ab3@4785>   MOVE.l a2,currentfunccall
00022F9A <AmiBlitz3.ab3@4786>   MOVE.b #1,funccall
00022FA0 <AmiBlitz3.ab3@4787>   MOVE.b #1,isfunc(a2)
00022FA4 <AmiBlitz3.ab3@4789>   MOVE.l $E(A2),-(A7)         ;pc of proc.
00022FA6 <AmiBlitz3.ab3@4790>   MOVEQ.l #$00,D0
00022FAA <AmiBlitz3.ab3@4791>   MOVE.b $4(A2),D0
00022FB0 <AmiBlitz3.ab3@4792>   MOVE.l d0,parnumtemp
00022FB4 <AmiBlitz3.ab3@4793>   BEQ.w 'nopars
00022FB8 <AmiBlitz3.ab3@4795>   TST.b $20(a2)                                            ;increase if morepar
00022FBC <AmiBlitz3.ab3@4796>   BNE 'no0par
00022FBE <AmiBlitz3.ab3@4797>   MOVE.l a5,a4
00022FC2 <AmiBlitz3.ab3@4800>   CMP.b #$20,(a4)+
00022FC6 <AmiBlitz3.ab3@4801>   BEQ 'l1
00022FCC <AmiBlitz3.ab3@4802>   CMP.b #"}",-1(a4)
00022FD0 <AmiBlitz3.ab3@4803>   BNE  'no0par                                             ;statementcall pars
00022FD2 <AmiBlitz3.ab3@4804>   MOVEQ #0,d0
00022FD6 <AmiBlitz3.ab3@4808>   LEA $16(A2),A1            ;pointer to var desc list
00022FD8 <AmiBlitz3.ab3@4812>   MOVE.l d1,-(a7)
00022FDA <AmiBlitz3.ab3@4813>   MOVE.b (a1),d2
00022FDC <AmiBlitz3.ab3@4814>   MOVE.l d0,d1
00022FE0 <AmiBlitz3.ab3@4815>   CMP.w #4,d2
00022FE4 <AmiBlitz3.ab3@4816>   BNE 'l1b
00022FEA <AmiBlitz3.ab3@4817>   ADD.l #$203c,d1
00022FF0 <AmiBlitz3.ab3@4818>   JSR writeword
00022FF6 <AmiBlitz3.ab3@4819>   MOVE.l #$ffff0000,d1
00022FFC <AmiBlitz3.ab3@4820>   JSR writelong
00023000 <AmiBlitz3.ab3@4821>  BRA 'l2b
00023006 <AmiBlitz3.ab3@4824>   TST.b fpu
0002300A <AmiBlitz3.ab3@4825>   BNE 'l1c
0002300E <AmiBlitz3.ab3@4826>   CMP.w #5,d2
00023012 <AmiBlitz3.ab3@4827>   BNE 'l1c
00023018 <AmiBlitz3.ab3@4828>   ADD.l #$203c,d1
0002301E <AmiBlitz3.ab3@4829>   JSR writeword
00023024 <AmiBlitz3.ab3@4830>   MOVE.l #$800000c1,d1
0002302A <AmiBlitz3.ab3@4831>   JSR writelong
0002302E <AmiBlitz3.ab3@4832>  BRA 'l2b
00023034 <AmiBlitz3.ab3@4835>   ADD.l #$70ff,d1
0002303A <AmiBlitz3.ab3@4836>   JSR writeword
00023040 <AmiBlitz3.ab3@4837>   MOVE.l #$f23c5000,d1
00023042 <AmiBlitz3.ab3@4838>   MOVE.l d0,d2
00023044 <AmiBlitz3.ab3@4839>   ASR.l #2,d2
00023046 <AmiBlitz3.ab3@4840>   ADD.l d2,d1
0002304C <AmiBlitz3.ab3@4841>   JSR writelong
00023050 <AmiBlitz3.ab3@4842>   MOVE.w #$ffff,d1
00023056 <AmiBlitz3.ab3@4843>   JSR writeword
00023058 <AmiBlitz3.ab3@4846>   MOVE.l (a7)+,d1
0002305A <AmiBlitz3.ab3@4847>   ADDQ.l #1,a1
00023060 <AmiBlitz3.ab3@4848>   ADD.l #$0200,d0
00023066 <AmiBlitz3.ab3@4849>   CMP.l #$0e00,d0
0002306A <AmiBlitz3.ab3@4850>    BEQ syntaxerr
0002306C <AmiBlitz3.ab3@4851>   TST.b (a1)
00023070 <AmiBlitz3.ab3@4852>    BNE 'again
00023074 <AmiBlitz3.ab3@4853>  BRA 'nopars
0002307E <AmiBlitz3.ab3@4856>   MOVE.w a2offset,a2offset2
00023082 <AmiBlitz3.ab3@4857>   LEA $16(A2),A2
00023088 <AmiBlitz3.ab3@4858>   MOVE.b funcparloop,-(a7)
00023090 <AmiBlitz3.ab3@4859>   MOVE.b #1,funcparloop
00023096 <AmiBlitz3.ab3@4860>   MOVE.b blitzparloop,-(a7)
0002309C <AmiBlitz3.ab3@4861>   CLR.b blitzparloop
000230A0 <AmiBlitz3.ab3@4863>   BSR.w fetchpees2
000230A6 <AmiBlitz3.ab3@4865>   MOVE.b (a7)+,blitzparloop
000230AC <AmiBlitz3.ab3@4866>   MOVE.b (a7)+,funcparloop
000230B0 <AmiBlitz3.ab3@4868>  BRA.w 'nopars3
000230B4 <AmiBlitz3.ab3@4872>   BSR.w get1bytemain
000230B8 <AmiBlitz3.ab3@4875>   CMP.w #$7D,D0        ;'}'
000230BC <AmiBlitz3.ab3@4876>    BNE.w morepar_                                          ;syntax error morepar
000230C2 <AmiBlitz3.ab3@4877>    JSR chkstak
000230C4 <AmiBlitz3.ab3@4878>   MOVE.l (A7)+,D1
000230CA <AmiBlitz3.ab3@4896>    JSR makefjsr
000230D0 <AmiBlitz3.ab3@4919>   CLR.b funccall
000230D4 <AmiBlitz3.ab3@4921> BRA.w get1bytemain
000230DA <AmiBlitz3.ab3@4928>   MOVE.l d0,lasttoken
000230DE <AmiBlitz3.ab3@4929>   CMP.w #$c09f,d0                                          ;hack to use getregd0 instead of getd0
000230E2 <AmiBlitz3.ab3@4930>   BNE 'l2
000230E6 <AmiBlitz3.ab3@4931>    MOVE.w #$dd05,d0
000230EA <AmiBlitz3.ab3@4934>   CMP.w #$c0a0,d0                                          ;hack to use getregd0 instead of getd0
000230EE <AmiBlitz3.ab3@4935>   BNE 'l3
000230F2 <AmiBlitz3.ab3@4936>    MOVE.w #$dd06,d0
000230F6 <AmiBlitz3.ab3@4940>   CMP.w #-$7FC4,D0               ; was #$8000+fnum,
000230FA <AmiBlitz3.ab3@4941>   BCS.w 'nono
000230FE <AmiBlitz3.ab3@4942>     CMP.w #-$7F4D,D0             ; was #$8000+tnum,
00023102 <AmiBlitz3.ab3@4943>     BCC.w 'nono
0002310A <AmiBlitz3.ab3@4945>       BTST #$7,assemblercheck    ; was optreq2ga3+13                            ;inline Assembler checking
0002310E <AmiBlitz3.ab3@4946>       BNE.b 'asmok
00023114 <AmiBlitz3.ab3@4948>         TST.b debugmode
00023118 <AmiBlitz3.ab3@4949>         BEQ.b 'l10
00023122 <AmiBlitz3.ab3@4954>           MOVE.w d_nomemleft,dontwrite_nomemleft
0002312C <AmiBlitz3.ab3@4955>           MOVE.l d_bigpc,bigpc
00023136 <AmiBlitz3.ab3@4956>           MOVE.l d_pc,destpointer
00023140 <AmiBlitz3.ab3@4957>           MOVE.l cont_pc2,cont_pc
00023144 <AmiBlitz3.ab3@4965>  BRA.w asmit   ;assemble the bastard
00023148 <AmiBlitz3.ab3@4972>   BCLR #$F,D0
0002314A <AmiBlitz3.ab3@4973>   MOVE.w D0,D1
0002314E <AmiBlitz3.ab3@4974>   ANDI.w #$7F00,D1
00023152 <AmiBlitz3.ab3@4975>   BNE.w handlelib
00023156 <AmiBlitz3.ab3@4977>     CMP.w #$B3,D0        ; was #tnum,                                  ;intern Instructions
0002315A <AmiBlitz3.ab3@4978>     BCS.w 'isokat
0002315E <AmiBlitz3.ab3@4980>       SUBI.w #$77,D0     ; was #tnum-fnum,
00023162 <AmiBlitz3.ab3@4981>       CMP.w #$4B,D0      ; was #fnum+15
00023166 <AmiBlitz3.ab3@4982>       BEQ.w 'noerr
0002316A <AmiBlitz3.ab3@4983>         CMP.w #$46,D0    ; was #fnum+10,
0002316E <AmiBlitz3.ab3@4984>         BEQ.w 'noerr
00023172 <AmiBlitz3.ab3@4985>  BRA.w 'doerr                                            ; change tokennum
00023176 <AmiBlitz3.ab3@4988>     CMP.w #$38,D0        ;check for things which don't want
0002317A <AmiBlitz3.ab3@4989>      BEQ.w 'noerr        ;error checking...
0002317E <AmiBlitz3.ab3@4990>     CMP.w #$39,D0
00023182 <AmiBlitz3.ab3@4991>      BEQ.w 'noerr
00023186 <AmiBlitz3.ab3@4992>     CMP.w #$D,D0
0002318A <AmiBlitz3.ab3@4993>      BEQ.w 'noerr
0002318E <AmiBlitz3.ab3@4994>     CMP.w #$12,D0
00023192 <AmiBlitz3.ab3@4995>      BEQ.w 'noerr
00023196 <AmiBlitz3.ab3@4996>     CMP.w #$13,D0
0002319A <AmiBlitz3.ab3@4997>      BEQ.w 'noerr
0002319E <AmiBlitz3.ab3@4998>     CMP.w #$1A,D0
000231A2 <AmiBlitz3.ab3@4999>      BEQ.w 'noerr
000231A6 <AmiBlitz3.ab3@5000>     CMP.w #$2A,D0
000231AA <AmiBlitz3.ab3@5001>      BHI.w 'doerr
000231AE <AmiBlitz3.ab3@5002>     CMP.w #$23,D0
000231B2 <AmiBlitz3.ab3@5003>      BCS.b 'doerr
000231B6 <AmiBlitz3.ab3@5006>   BSR.w undodebug
000231B8 <AmiBlitz3.ab3@5009>   SUBQ.w #1,D0
000231BA <AmiBlitz3.ab3@5010>   LSL.w #2,D0
000231C0 <AmiBlitz3.ab3@5020>   LEA instructionbase,A0
000231C4 <AmiBlitz3.ab3@5021>   MOVEA.l $0(A0,D0.W),A0
000231C6 <AmiBlitz3.ab3@5022>   MOVE.l A0,-(A7)
000231CA <AmiBlitz3.ab3@5023> BRA.w get1bytemain
000231CC <AmiBlitz3.ab3@5029>   MOVE.w D0,D1
000231D0 <AmiBlitz3.ab3@5030>    BSR.w searchinstr    ;toke stuff in a3
000231D6 <AmiBlitz3.ab3@5032>    TST.b newmode
000231DA <AmiBlitz3.ab3@5033>    BNE compile_term
000231E0 <AmiBlitz3.ab3@5035>   BTST #$2,$1(A3)                                          ;a3 = pointer to instr ;toke stuff in a3
000231E4 <AmiBlitz3.ab3@5036>    BNE.w stamigalib
000231EA <AmiBlitz3.ab3@5037>   BTST #$0,$1(A3)
000231EE <AmiBlitz3.ab3@5038>    BEQ.w needreturn_                                       ;syntax err need return   ;check it's a statement
000231F2 <AmiBlitz3.ab3@5040>    BSR.w sizespec                                         ;does it need a size specifier?
000231F6 <AmiBlitz3.ab3@5041>    BSR.w countpees
000231FC <AmiBlitz3.ab3@5047>   MOVE.w numreps,-(A7)
00023202 <AmiBlitz3.ab3@5048>   MOVE.w userp,-(A7)
00023208 <AmiBlitz3.ab3@5049>   MOVE.w a2offset,-(A7)
0002320A <AmiBlitz3.ab3@5050>   MOVE.l A2,-(A7)                                          ;recurs.
00023214 <AmiBlitz3.ab3@5051>   MOVE.w convsize,userp
00023218 <AmiBlitz3.ab3@5052>   LEA $6(A3),A1
0002321A <AmiBlitz3.ab3@5057>    MOVE.w (A1),D2
0002321E <AmiBlitz3.ab3@5058>    BMI.w 'SERR                                              ;statement syntax error
00023222 <AmiBlitz3.ab3@5059>   ANDI.w #$FF,D2
00023224 <AmiBlitz3.ab3@5060>   CMP.w D2,D1
00023228 <AmiBlitz3.ab3@5061>    BEQ.w 'found
0002322C <AmiBlitz3.ab3@5062>    BCS.w 'next
0002322E <AmiBlitz3.ab3@5063>   MOVE.b (A1),D3
00023232 <AmiBlitz3.ab3@5064>   ANDI.w #$7,D3
00023236 <AmiBlitz3.ab3@5065>    BEQ.w 'next
00023238 <AmiBlitz3.ab3@5066>   MOVE.w D2,D4
0002323A <AmiBlitz3.ab3@5067>   SUB.w D3,D4
0002323C <AmiBlitz3.ab3@5068>   MOVEQ.l #$00,D5
0002323E <AmiBlitz3.ab3@5069>   MOVE.w D1,D5
00023240 <AmiBlitz3.ab3@5070>   SUB.w D4,D5
00023242 <AmiBlitz3.ab3@5071>   DIVU D3,D5
00023244 <AmiBlitz3.ab3@5072>   SWAP D5
00023246 <AmiBlitz3.ab3@5073>   TST.w D5
0002324A <AmiBlitz3.ab3@5074>    BEQ.w 'found
0002324C <AmiBlitz3.ab3@5077>   ADDQ.w #2,A1
0002324E <AmiBlitz3.ab3@5078>   ADDA.w D2,A1
00023252 <AmiBlitz3.ab3@5079>    BSR.w aligna1
00023256 <AmiBlitz3.ab3@5080>    BSR.w skiplibreg
0002325A <AmiBlitz3.ab3@5081>   LEA $C(A1),A1
0002325E <AmiBlitz3.ab3@5082>  BRA.w 'loop
00023260 <AmiBlitz3.ab3@5086>   MOVE.w (a3),d2
00023264 <AmiBlitz3.ab3@5087>   BTST #1,d2
00023268 <AmiBlitz3.ab3@5088>   BEQ statement_
0002326C <AmiBlitz3.ab3@5089>   CMP.w #1,d1
00023270 <AmiBlitz3.ab3@5090>   BEQ statement_
00023274 <AmiBlitz3.ab3@5093>   CMP.b #$20,(a5)+
00023278 <AmiBlitz3.ab3@5094>   BEQ 'l2
0002327E <AmiBlitz3.ab3@5095>   CMP.b #"(",-2(a5)
00023282 <AmiBlitz3.ab3@5096>   BNE 'l1
00023286 <AmiBlitz3.ab3@5097>  BRA parameter_
0002328A <AmiBlitz3.ab3@5100>  BRA inbrackets_
0002328C <AmiBlitz3.ab3@5104>   MOVE.b (A1),D2
0002328E <AmiBlitz3.ab3@5105>   LSL.w #8,D2
00023290 <AmiBlitz3.ab3@5106>   OR.w D2,D1
00023292 <AmiBlitz3.ab3@5107>   MOVE.l A1,-(A7)
00023298 <AmiBlitz3.ab3@5108>   CLR.w a2offset
0002329A <AmiBlitz3.ab3@5109>   TST.w D1
0002329E <AmiBlitz3.ab3@5110>    BEQ.w 'nopees
000232A2 <AmiBlitz3.ab3@5111>   LEA $2(A1),A2
000232A8 <AmiBlitz3.ab3@5113>   MOVE.l lasttoken,-(a7)
000232AE <AmiBlitz3.ab3@5114>   CLR.l lasttoken
000232B2 <AmiBlitz3.ab3@5116>   BSR.w fetchlibps
000232B8 <AmiBlitz3.ab3@5118>   MOVE.l (a7)+,lasttoken
000232BC <AmiBlitz3.ab3@5120>  BRA.w 'skip
000232C0 <AmiBlitz3.ab3@5123>   BSR.w get1bytemain
000232C2 <AmiBlitz3.ab3@5126>   MOVEA.l (A7)+,A1
000232C4 <AmiBlitz3.ab3@5127>   MOVEA.l (A7)+,A2
000232CA <AmiBlitz3.ab3@5128>   MOVE.w a2offset,D1
000232CE <AmiBlitz3.ab3@5129>    BEQ.w 'skip2
000232D4 <AmiBlitz3.ab3@5130>   MOVE.w D1,preplibst+2
000232DA <AmiBlitz3.ab3@5131>   MOVE.l preplibst,D1
000232E0 <AmiBlitz3.ab3@5132>    JSR writelong                                           ;write array offset stack correct
000232EA <AmiBlitz3.ab3@5133>   MOVE.w numreps,movenumrep+2
000232EE <AmiBlitz3.ab3@5134>    BEQ.w 'skip2
000232F4 <AmiBlitz3.ab3@5135>   MOVE.l movenumrep,D1
000232FA <AmiBlitz3.ab3@5136>    JSR writelong
00023300 <AmiBlitz3.ab3@5140>   JSR userjsr
00023306 <AmiBlitz3.ab3@5145>   MOVE.w a2offset,D1
0002330A <AmiBlitz3.ab3@5146>    BEQ.w 'skip3
0002330E <AmiBlitz3.ab3@5147>   CMP.w #$8,D1
00023312 <AmiBlitz3.ab3@5148>    BHI.w 'skip4
00023316 <AmiBlitz3.ab3@5149>   ANDI.w #$7,D1
00023318 <AmiBlitz3.ab3@5150>   LSL.w #8,D1
0002331A <AmiBlitz3.ab3@5151>   LSL.w #1,D1
0002331E <AmiBlitz3.ab3@5152>   ORI.w #$504F,D1       ;addq #x,a7
00023324 <AmiBlitz3.ab3@5153>   JSR writeword
00023328 <AmiBlitz3.ab3@5154>  BRA.w 'skip3
0002332E <AmiBlitz3.ab3@5157>   MOVE.w D1,fixlibst+2
00023334 <AmiBlitz3.ab3@5158>   MOVE.l fixlibst,D1
0002333A <AmiBlitz3.ab3@5159>   JSR writelong
00023340 <AmiBlitz3.ab3@5162>   MOVE.w (A7)+,a2offset
00023346 <AmiBlitz3.ab3@5163>   MOVE.w (A7)+,userp
0002334C <AmiBlitz3.ab3@5164>   MOVE.w (A7)+,numreps
00023350 <AmiBlitz3.ab3@5165> BRA.w reget
00023354 <AmiBlitz3.ab3@5169>   MOVEM.l A2-A3,-(A7)
0002335A <AmiBlitz3.ab3@5171>   CLR.b doublepeek
00023360 <AmiBlitz3.ab3@5173>   MOVE.l A5,lastsourcepos
00023364 <AmiBlitz3.ab3@5174>    BSR.w getchar          ;','
00023368 <AmiBlitz3.ab3@5175>   CMP.w #$2E,D0
0002336C <AmiBlitz3.ab3@5176>    BEQ.w 'ok1
00023372 <AmiBlitz3.ab3@5177>   MOVEA.l defaulttype,A2
00023376 <AmiBlitz3.ab3@5178>   CMP.w #$24,D0           ;'$'
0002337A <AmiBlitz3.ab3@5179>    BNE.w 'none
0002337C <AmiBlitz3.ab3@5180>   MOVEQ.l #$07,D1
00023380 <AmiBlitz3.ab3@5181>  BRA.w 'skip
00023384 <AmiBlitz3.ab3@5184>   BSR.w getparameter2
00023388 <AmiBlitz3.ab3@5185>   BEQ.w syntaxerr
0002338E <AmiBlitz3.ab3@5186>   LEA newtypebase,A2
00023392 <AmiBlitz3.ab3@5187>   BSR.w findtype
00023396 <AmiBlitz3.ab3@5188>   BNE.w notypeerr
000233A0 <AmiBlitz3.ab3@5193>   MOVE.w oldqflag,instringon
000233A6 <AmiBlitz3.ab3@5194>   MOVEA.l lastsourcepos,A5
000233AA <AmiBlitz3.ab3@5202>   MOVE.w $6(A2),D1
000233B0 <AmiBlitz3.ab3@5204>   CMP.w #8,8(a2)
000233B4 <AmiBlitz3.ab3@5205>   BNE 'l1
000233BC <AmiBlitz3.ab3@5206>   MOVE.b #1,doublepeek
000233C2 <AmiBlitz3.ab3@5211>   MOVE.w D1,convsize
000233C6 <AmiBlitz3.ab3@5212>   MOVEM.l (A7)+,A2-A3
000233C8 <AmiBlitz3.ab3@5213> RTS
000233CE <AmiBlitz3.ab3@5218>   BTST #$3,$1(A3)
000233D2 <AmiBlitz3.ab3@5219>   BEQ.w 'skip
000233D6 <AmiBlitz3.ab3@5220>   BSR.w sizespec2                                         ;read peek/poke size
000233DA <AmiBlitz3.ab3@5222>   ORI.w #$7000,D1
000233E0 <AmiBlitz3.ab3@5223>   JSR writeword
000233E6 <AmiBlitz3.ab3@5224>   ADDQ.w #1,regnum
000233E8 <AmiBlitz3.ab3@5227> RTS
000233EA <AmiBlitz3.ab3@5234>             Dc.b $10,$12                                   ;MOVE.B  (A2),D0
000233EC <AmiBlitz3.ab3@5235>             Dc.b $14,$91                                   ;MOVE.B  (A1),(A2)
000233EE <AmiBlitz3.ab3@5236>             Dc.b $12,$80                                   ;MOVE.B  D0,(A1)
000233F0 <AmiBlitz3.ab3@5240> swapw:      Dc.b $30,$12                                   ;MOVE.W  (A2),D0
000233F2 <AmiBlitz3.ab3@5241>             Dc.b $34,$91                                   ;MOVE.W  (A1),(A2)
000233F4 <AmiBlitz3.ab3@5242>             Dc.b $32,$80                                   ;MOVE.W  D0,(A1)
000233F6 <AmiBlitz3.ab3@5246> swapl:      Dc.b $20,$12                                   ;MOVE.L  (A2),D0
000233F8 <AmiBlitz3.ab3@5247>             Dc.b $24,$91                                   ;MOVE.L  (A1),(A2)
000233FA <AmiBlitz3.ab3@5248>             Dc.b $22,$80                                   ;MOVE.L  D0,(A1)
000233FC <AmiBlitz3.ab3@5252> pulla1:     Dc.b $22,$5F                                   ;MOVEA.L (A7)+,A1
000233FE <AmiBlitz3.ab3@5255> srctype:    Ds.w 1
00023402 <AmiBlitz3.ab3@5260>   BSR.w excget
00023406 <AmiBlitz3.ab3@5261>   CMP.w #$2C,D0     ;','
0002340A <AmiBlitz3.ab3@5262>    BNE.w syntaxerr
00023410 <AmiBlitz3.ab3@5263>   MOVE.b D2,srctype
00023416 <AmiBlitz3.ab3@5264>   MOVE.w pusha2,D1
0002341C <AmiBlitz3.ab3@5265>   JSR writeword
00023420 <AmiBlitz3.ab3@5266>   BSR.w get1bytemain
00023424 <AmiBlitz3.ab3@5267>   BSR.w excget
0002342A <AmiBlitz3.ab3@5268>   CMP.b srctype,D2
0002342E <AmiBlitz3.ab3@5269>    BNE.w excerr2
00023434 <AmiBlitz3.ab3@5270>   MOVE.w pulla1,D1
0002343A <AmiBlitz3.ab3@5271>    JSR writeword
0002343E <AmiBlitz3.ab3@5273>   CMP.b #$2,D2
00023442 <AmiBlitz3.ab3@5274>    BCS.w 'byte
00023446 <AmiBlitz3.ab3@5275>    BEQ.w 'word
0002344A <AmiBlitz3.ab3@5276>   LEA swapl(PC),A0
0002344E <AmiBlitz3.ab3@5277>   LEA swaplf(PC),A1
00023454 <AmiBlitz3.ab3@5278>  JMP pokecode
00023458 <AmiBlitz3.ab3@5281>   LEA swapw(PC),A0
0002345C <AmiBlitz3.ab3@5282>   LEA swapwf(PC),A1
00023462 <AmiBlitz3.ab3@5283>  JMP pokecode
00023466 <AmiBlitz3.ab3@5286>   LEA swapb(PC),A0
0002346A <AmiBlitz3.ab3@5287>   LEA swapbf(PC),A1
00023470 <AmiBlitz3.ab3@5288> JMP pokecode
00023476 <AmiBlitz3.ab3@5292>   JSR getparameter
0002347A <AmiBlitz3.ab3@5293>   BSR.w fetchvars
00023480 <AmiBlitz3.ab3@5294>   JSR calcvar
00023484 <AmiBlitz3.ab3@5295>   BTST #$E,D2
00023488 <AmiBlitz3.ab3@5296>    BEQ.w 'skip
0002348C <AmiBlitz3.ab3@5297>   MOVE.b #$4,D2
0002348E <AmiBlitz3.ab3@5300>   TST.b D2
00023492 <AmiBlitz3.ab3@5301>    BEQ.w excerr
00023496 <AmiBlitz3.ab3@5302>   BTST #$F,D2
0002349A <AmiBlitz3.ab3@5303>    BNE.w 'done
000234A0 <AmiBlitz3.ab3@5304>   MOVE.w leaamp,D1
000234A6 <AmiBlitz3.ab3@5305>    JSR pokewda5s
000234A8 <AmiBlitz3.ab3@5306>   MOVE.w D3,D1
000234AE <AmiBlitz3.ab3@5307>  JMP writeword
000234B0 <AmiBlitz3.ab3@5310> RTS
000234B6 <AmiBlitz3.ab3@5319>   MOVE.l mempool,a0
000234BC <AmiBlitz3.ab3@5320>   MOVEA.l _execbase,A6
000234C0 <AmiBlitz3.ab3@5321> JMP _AllocPooled(a6)
000234C4 <AmiBlitz3.ab3@5326>   MOVE.w #$BF00,D1       ; was #wbstart
000234CA <AmiBlitz3.ab3@5327> JMP Atokejsr
000234CE <AmiBlitz3.ab3@5331>   CMP.w #-$7FFA,D0       ; was  #$8006
000234D2 <AmiBlitz3.ab3@5332>    BEQ.w popreturn
000234D6 <AmiBlitz3.ab3@5333>   CMP.w #-$7FEA,D0       ; was  #$8000+22,
000234DA <AmiBlitz3.ab3@5334>    BEQ.w popnext2
000234DE <AmiBlitz3.ab3@5335>   CMP.w #-$7FF2,D0       ; was  #$8000+14,
000234E2 <AmiBlitz3.ab3@5336>    BEQ.w popselect2
000234E6 <AmiBlitz3.ab3@5338>   CMP.w #-$7FF5,D0       ; was  #$8000+11
000234EA <AmiBlitz3.ab3@5339>    BEQ.w get1bytemain
000234EE <AmiBlitz3.ab3@5340>   CMP.w #-$7FF4,D0       ; was  #$8000+12
000234F2 <AmiBlitz3.ab3@5341>    BEQ.w get1bytemain
000234F6 <AmiBlitz3.ab3@5342>   CMP.w #-$7FEC,D0       ; was  #$8000+20
000234FA <AmiBlitz3.ab3@5343>    BEQ.w get1bytemain
000234FE <AmiBlitz3.ab3@5344>   CMP.w #-$7F45,D0       ; was  #$8000+tnum+8
00023502 <AmiBlitz3.ab3@5345>    BEQ.w get1bytemain
00023506 <AmiBlitz3.ab3@5346> BRA.w syntaxerr
0002350C <AmiBlitz3.ab3@5350>   TST.b debugmode
00023510 <AmiBlitz3.ab3@5351>    BEQ.w 'norerr
00023514 <AmiBlitz3.ab3@5352>   LEA 'rfix(PC),A0
00023518 <AmiBlitz3.ab3@5353>   LEA 'rfixf(PC),A1
0002351E <AmiBlitz3.ab3@5354>    JSR pokecode
00023522 <AmiBlitz3.ab3@5355>   MOVE.w #$C305,D1
00023528 <AmiBlitz3.ab3@5356>    JSR Atokejsr
0002352C <AmiBlitz3.ab3@5357>   MOVE.w 'rfix2(PC),D1
00023532 <AmiBlitz3.ab3@5359>    JSR writeword
00023536 <AmiBlitz3.ab3@5360>  BRA.w get1bytemain
0002353C <AmiBlitz3.ab3@5363>   CMPI.w #$6753,$4(A7)                                     ;#"gS",4(A7)
00023540 <AmiBlitz3.ab3@5364>   BEQ.w 'rfix2
00023546 <AmiBlitz3.ab3@5367>   JSR $20000                                               ;reass
00023548 <AmiBlitz3.ab3@5370>   ADDQ.w #6,A7
0002354C <AmiBlitz3.ab3@5373>   MOVE.w 'sfix(PC),D1
00023552 <AmiBlitz3.ab3@5374>   JSR writeword
00023556 <AmiBlitz3.ab3@5375> BRA.w get1bytemain
00023558 <AmiBlitz3.ab3@5380>   Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
0002355E <AmiBlitz3.ab3@5385>   MOVE.l firstfor,D0
00023562 <AmiBlitz3.ab3@5386>    BEQ.w noforerr
00023564 <AmiBlitz3.ab3@5387>   MOVEA.l D0,A2
00023568 <AmiBlitz3.ab3@5388>    BSR.w get1bytemain
0002356C <AmiBlitz3.ab3@5389>   BSR.w popnext
00023572 <AmiBlitz3.ab3@5392>   TST.b debugmode
00023576 <AmiBlitz3.ab3@5393>    BEQ.w 'ner
0002357C <AmiBlitz3.ab3@5394>   MOVE.l nextfixw2,D1
00023582 <AmiBlitz3.ab3@5395>   CMPI.w #$3,$C(A2)
00023586 <AmiBlitz3.ab3@5396>    BCS.w 'writelong2
0002358C <AmiBlitz3.ab3@5397>   MOVE.l nextfixl2,D1
00023592 <AmiBlitz3.ab3@5400>   JMP  writelong
00023598 <AmiBlitz3.ab3@5403>   CMPI.w #$3,$C(A2)
0002359C <AmiBlitz3.ab3@5404>    BCS.w 'skip2
000235A2 <AmiBlitz3.ab3@5405>   MOVE.l nextfixl,D1
000235A8 <AmiBlitz3.ab3@5406>   JMP writelong
000235AE <AmiBlitz3.ab3@5409>   MOVE.w nextfixw,D1
000235B4 <AmiBlitz3.ab3@5410> JMP writeword
000235B8 <AmiBlitz3.ab3@5415>   MOVE.w $C(A2),D0
000235BE <AmiBlitz3.ab3@5416>   TST.b debugmode
000235C2 <AmiBlitz3.ab3@5417>    BEQ.w 'norunerr
000235C6 <AmiBlitz3.ab3@5418>   MOVE.w #$C306,D1
000235CA <AmiBlitz3.ab3@5419>   CMP.w #$3,D0
000235CE <AmiBlitz3.ab3@5420>    BCS.w 'oktc
000235D0 <AmiBlitz3.ab3@5421>   ADDQ.w #1,D1
000235D2 <AmiBlitz3.ab3@5424>   MOVE.l A2,-(A7)
000235D8 <AmiBlitz3.ab3@5425>   JSR Atokejsr
000235DA <AmiBlitz3.ab3@5426>   MOVEA.l (A7)+,A2
000235DC <AmiBlitz3.ab3@5429> RTS
000235E2 <AmiBlitz3.ab3@5433>   MOVE.l firstsel,D0
000235E6 <AmiBlitz3.ab3@5434>    BEQ.w eselerr
000235E8 <AmiBlitz3.ab3@5435>   MOVEA.l D0,A2
000235EC <AmiBlitz3.ab3@5436>    BSR.w get1bytemain
000235F0 <AmiBlitz3.ab3@5439>   MOVE.w $C(A2),D2
000235F6 <AmiBlitz3.ab3@5440>   TST.b debugmode
000235FA <AmiBlitz3.ab3@5441>    BEQ.w 'norerr
000235FE <AmiBlitz3.ab3@5442>   MOVE.w #$C313,D1
00023602 <AmiBlitz3.ab3@5443>   CMP.w #$3,D2
00023606 <AmiBlitz3.ab3@5444>    BCS.w 'chkit
00023608 <AmiBlitz3.ab3@5445>   ADDQ.w #1,D1
0002360E <AmiBlitz3.ab3@5448>   JSR Atokejsr                                             ;make sure next thing on stack
00023610 <AmiBlitz3.ab3@5452>   MOVEQ.l #$02,D1
00023614 <AmiBlitz3.ab3@5453>   CMP.w #$3,D2
00023618 <AmiBlitz3.ab3@5454>    BCS.w 'doit
0002361A <AmiBlitz3.ab3@5455>   MOVEQ.l #$04,D1
0002361E <AmiBlitz3.ab3@5456>   CMP.w #$7,D2
00023622 <AmiBlitz3.ab3@5457>    BCS.w 'doit
00023628 <AmiBlitz3.ab3@5458>   LEA endselstr,A0
0002362E <AmiBlitz3.ab3@5459>   LEA endselstrf,A1
00023634 <AmiBlitz3.ab3@5460>   TST.b debugmode
00023638 <AmiBlitz3.ab3@5461>    BEQ.w 'norerr3
0002363E <AmiBlitz3.ab3@5462>   LEA endselstrf2,A1
00023644 <AmiBlitz3.ab3@5465>   JSR pokecode
00023648 <AmiBlitz3.ab3@5466>   MOVE.w #$C003,D1                                         ;global freemem
0002364E <AmiBlitz3.ab3@5467>  JMP Atokejsr
00023654 <AmiBlitz3.ab3@5470>   TST.b debugmode
00023658 <AmiBlitz3.ab3@5471>    BEQ.w 'norerr2
0002365A <AmiBlitz3.ab3@5472>   ADDQ.w #2,D1                                             ;for the "sE"
0002365C <AmiBlitz3.ab3@5475>   LSL.w #8,D1
0002365E <AmiBlitz3.ab3@5476>   LSL.w #1,D1
00023664 <AmiBlitz3.ab3@5477>   OR.w endsel,D1
0002366A <AmiBlitz3.ab3@5478> JMP writeword
0002366E <AmiBlitz3.ab3@5481> firstrep:    Ds.l 1
00023672 <AmiBlitz3.ab3@5482> replineat:   Ds.l 1
00023678 <AmiBlitz3.ab3@5491>   CLR.l fp0addr
00023682 <AmiBlitz3.ab3@5492>   MOVE.l linenumat,replineat
00023684 <AmiBlitz3.ab3@5493>   MOVEQ.l #$08,D0
0002368A <AmiBlitz3.ab3@5494>   MOVEA.l _execbase,A6
00023690 <AmiBlitz3.ab3@5495>   MOVE.l mempool,a0
00023694 <AmiBlitz3.ab3@5496>   JSR _AllocPooled(a6)
00023696 <AmiBlitz3.ab3@5498>   MOVEA.l D0,A0
0002369A <AmiBlitz3.ab3@5499>   MOVE.l firstrep(PC),(A0)
000236A0 <AmiBlitz3.ab3@5500>   MOVE.l A0,firstrep
000236A8 <AmiBlitz3.ab3@5501>   MOVE.l destpointer,$4(A0)
000236AA <AmiBlitz3.ab3@5502> RTS
000236B0 <AmiBlitz3.ab3@5505> str_temp:  Ds.w 3                                            ;infochk  ds.b 6 org source
000236B4 <AmiBlitz3.ab3@5508>   LEA str_temp(PC),A1
000236B6 <AmiBlitz3.ab3@5509>   CLR.w (A1)
000236BA <AmiBlitz3.ab3@5510>   CLR.l $2(A1)
000236BC <AmiBlitz3.ab3@5513>   MOVEQ.l #$04,D0
000236C0 <AmiBlitz3.ab3@5516>     MOVE.b $1(A1),(A1)+
000236C4 <AmiBlitz3.ab3@5517>   DBF D0,'loop
000236C8 <AmiBlitz3.ab3@5522>   LEA str_temp(PC),A1
000236CA <AmiBlitz3.ab3@5523>   MOVE.b (A0),D0
000236CE <AmiBlitz3.ab3@5524>   ORI.b #$20,D0
000236D2 <AmiBlitz3.ab3@5525>   MOVE.b D0,$5(A1)
000236D4 <AmiBlitz3.ab3@5526>   TST.b (A0)+
000236D8 <AmiBlitz3.ab3@5527>    BNE.w 'loop2
000236DC <AmiBlitz3.ab3@5528>   CMPI.w #$2E69,(A1)+                                      ;".i"
000236E0 <AmiBlitz3.ab3@5529>    BNE.w 'no
000236E6 <AmiBlitz3.ab3@5530>   CMPI.l #$6E666F20,(A1)                                   ;"nfo "
000236E8 <AmiBlitz3.ab3@5533> RTS
000236EC <AmiBlitz3.ab3@5537>   BPL.w 'evaltoke
000236EE <AmiBlitz3.ab3@5538>   MOVE.w D0,D1
000236F2 <AmiBlitz3.ab3@5539>   ANDI.w #$7F80,D1
000236F6 <AmiBlitz3.ab3@5540>    BEQ.w tokeerr
000236FA <AmiBlitz3.ab3@5541>   BCLR #$F,D0
000236FC <AmiBlitz3.ab3@5542>   MOVE.w D0,D4                                             ;got toke number
00023700 <AmiBlitz3.ab3@5543>   BSR.w get1bytemain
00023704 <AmiBlitz3.ab3@5544>  BRA.w 'gotnum
0002370A <AmiBlitz3.ab3@5547>   JSR evalconst
00023710 <AmiBlitz3.ab3@5548>   CMP.l #MaxWord,D3
00023714 <AmiBlitz3.ab3@5549>    BHI.w tokeerr
00023716 <AmiBlitz3.ab3@5550>   TST.w D6
0002371A <AmiBlitz3.ab3@5551>    BNE.w tokeerr
0002371C <AmiBlitz3.ab3@5552>   MOVE.w D3,D4
0002371E <AmiBlitz3.ab3@5555>   MOVEQ.l #$00,D5
00023722 <AmiBlitz3.ab3@5556>   CMP.w #$2C,D0
00023726 <AmiBlitz3.ab3@5557>    BNE.w 'gotfrom
00023728 <AmiBlitz3.ab3@5558>   MOVE.w D4,-(A7)
0002372E <AmiBlitz3.ab3@5559>    JSR evalconst2
00023734 <AmiBlitz3.ab3@5560>   CMP.l #MaxWord,D3
00023738 <AmiBlitz3.ab3@5561>    BHI.w tokeerr
0002373A <AmiBlitz3.ab3@5562>   TST.w D6
0002373E <AmiBlitz3.ab3@5563>    BNE.w tokeerr
00023740 <AmiBlitz3.ab3@5564>   MOVE.w D3,D5
00023742 <AmiBlitz3.ab3@5565>   MOVE.w (A7)+,D4
00023744 <AmiBlitz3.ab3@5568> RTS                                                        ;d4=toke, d5=form
00023746 <AmiBlitz3.ab3@5572>   TST.w D0
0002374A <AmiBlitz3.ab3@5573>    BSR.w gettokeps
0002374E <AmiBlitz3.ab3@5574>   MOVE.w #$4EB9,D1
00023754 <AmiBlitz3.ab3@5575>   JSR writeword
00023758 <AmiBlitz3.ab3@5576>   BSR.w addoff
0002375A <AmiBlitz3.ab3@5577>   MOVE.w D5,D1
0002375E <AmiBlitz3.ab3@5578>   ORI.w #$8000,D1                                          ;Toke of Amiga type.
00023760 <AmiBlitz3.ab3@5579>   SWAP D1
00023762 <AmiBlitz3.ab3@5580>   MOVE.w D4,D1
00023768 <AmiBlitz3.ab3@5581> JMP writelong
0002376A <AmiBlitz3.ab3@5585>   TST.w D0
0002376E <AmiBlitz3.ab3@5586>    BSR.w gettokeps
00023772 <AmiBlitz3.ab3@5587>   MOVE.w #$4EB9,D1
00023778 <AmiBlitz3.ab3@5588>   JSR writeword
0002377C <AmiBlitz3.ab3@5589>   BSR.w addoff
0002377E <AmiBlitz3.ab3@5590>   MOVE.w D5,D1
00023782 <AmiBlitz3.ab3@5591>   ORI.w #$C000,D1                                          ;Toke of Blitz type.
00023784 <AmiBlitz3.ab3@5592>   SWAP D1
00023786 <AmiBlitz3.ab3@5593>   MOVE.w D4,D1
0002378C <AmiBlitz3.ab3@5594>   JMP writelong
00023792 <AmiBlitz3.ab3@5598>   JSR evalconst
00023798 <AmiBlitz3.ab3@5599>   CMP.l #$10000,D3
0002379C <AmiBlitz3.ab3@5600>    BCC.w tokeerr
0002379E <AmiBlitz3.ab3@5601>   MOVE.w D3,D1
000237A4 <AmiBlitz3.ab3@5602> JMP Atokejsr
000237A8 <AmiBlitz3.ab3@5606>   BSR.w gettokeps
000237AC <AmiBlitz3.ab3@5607>   MOVE.w #$4EB9,D1
000237B2 <AmiBlitz3.ab3@5608>   JSR writeword
000237B8 <AmiBlitz3.ab3@5609>   MOVE.l destpointer,D3
000237C0 <AmiBlitz3.ab3@5610>   BTST #$7,blitzmode
000237C4 <AmiBlitz3.ab3@5611>    BEQ.w 'inamiga
000237C8 <AmiBlitz3.ab3@5612>   BSET #$E,D5
000237CC <AmiBlitz3.ab3@5615>   BSR.w maketjsr
000237D0 <AmiBlitz3.ab3@5616>   BSR.w addoff
000237D6 <AmiBlitz3.ab3@5617> JMP writelong
000237DA <AmiBlitz3.ab3@5621>   BEQ.w 'zero
000237DC <AmiBlitz3.ab3@5622>   MOVEQ.l #$02,D2                                          ;get a word
000237E2 <AmiBlitz3.ab3@5624>   JSR bakeval
000237E6 <AmiBlitz3.ab3@5625>   MOVE.w fvwait(PC),D1
000237EA <AmiBlitz3.ab3@5626>  BRA.w 'vcont
000237EE <AmiBlitz3.ab3@5629>   MOVE.w #$7000,D1                                         ;moveq #0,d0
000237F4 <AmiBlitz3.ab3@5632>   JSR writeword
000237F8 <AmiBlitz3.ab3@5633>   MOVE.w #$C104,D1
000237FE <AmiBlitz3.ab3@5634> JMP Atokejsr
00023800 <AmiBlitz3.ab3@5638>   SUBQ.w #1,D0
00023806 <AmiBlitz3.ab3@5641>   Dc.w $3b7c,$ffff,0                                       ;move.w #$FFFF,$0(A5) ;noopt
0002380A <AmiBlitz3.ab3@5644>   Dc.l $426d0001                                           ;clr.w $0(A5)
0002380E <AmiBlitz3.ab3@5648>   MOVE.b debugmode(PC),D1
00023812 <AmiBlitz3.ab3@5649>   BEQ.b 'skip
00023816 <AmiBlitz3.ab3@5650>   MOVE.w #$D500,D1
0002381C <AmiBlitz3.ab3@5651> JMP Atokejsr
0002381E <AmiBlitz3.ab3@5654> RTS
00023826 <AmiBlitz3.ab3@5658>   BSET #$0,blitzmode
0002382E <AmiBlitz3.ab3@5659>   BSET #$7,blitzmode
00023832 <AmiBlitz3.ab3@5660>   MOVE.w #$C200,D1
00023838 <AmiBlitz3.ab3@5661>   JSR Atokejsr
0002383E <AmiBlitz3.ab3@5662>   TST.b debugmode
00023842 <AmiBlitz3.ab3@5663>    BEQ.w 'done
00023846 <AmiBlitz3.ab3@5664>   MOVE.w cgoblitz(PC),D1
0002384C <AmiBlitz3.ab3@5665>   JSR writeword
0002384E <AmiBlitz3.ab3@5666>   MOVEQ.l #-$01,D1
00023854 <AmiBlitz3.ab3@5667>   JSR writeword
0002385A <AmiBlitz3.ab3@5668>   JSR getbbase
00023860 <AmiBlitz3.ab3@5669>   JSR writeword
00023864 <AmiBlitz3.ab3@5672> BRA.w debugmode_codelabel
00023868 <AmiBlitz3.ab3@5676>   MOVE.w #$C201,D1
0002386C <AmiBlitz3.ab3@5677> BRA.w do_AMIGA_toamode
00023870 <AmiBlitz3.ab3@5680>   MOVE.W  #$C202,D1
00023878 <AmiBlitz3.ab3@5683>   BSET #$0,blitzmode
00023880 <AmiBlitz3.ab3@5684>   BCLR #$7,blitzmode
00023886 <AmiBlitz3.ab3@5685>   JSR Atokejsr
0002388C <AmiBlitz3.ab3@5686>   TST.b debugmode
00023890 <AmiBlitz3.ab3@5687>    BEQ.w 'done
00023894 <AmiBlitz3.ab3@5688>   MOVE.w cgoamiga(PC),D1
0002389A <AmiBlitz3.ab3@5689>   JSR writeword
000238A0 <AmiBlitz3.ab3@5690>   JSR getbbase
000238A6 <AmiBlitz3.ab3@5691>   JSR writeword
000238AA <AmiBlitz3.ab3@5694> BRA.w debugmode_codelabel
000238AE <AmiBlitz3.ab3@5698>   MOVEM.l D2-D7/A2-A4,-(A7)
000238B2 <AmiBlitz3.ab3@5701>   MOVEM.l (A7)+,D2-D7/A2-A4
000238B8 <AmiBlitz3.ab3@5705>   JSR evalconst
000238BE <AmiBlitz3.ab3@5706>   CMP.l #$E,D3
000238C2 <AmiBlitz3.ab3@5707>    BCC.w interr4
000238C6 <AmiBlitz3.ab3@5708>   MOVE.w #$7000,D1
000238C8 <AmiBlitz3.ab3@5709>   OR.w D3,D1
000238CE <AmiBlitz3.ab3@5710>   JSR writeword
000238D2 <AmiBlitz3.ab3@5711>   MOVE.w #$C101,D1
000238D8 <AmiBlitz3.ab3@5712> JMP Atokejsr                                               ;clear the interupt
000238DA <AmiBlitz3.ab3@5715> inerr:       Ds.w 1                                        ;flag - in error trap mode
000238DE <AmiBlitz3.ab3@5716> errjmp:      Ds.l 1                                        ;where err jump is
000238E2 <AmiBlitz3.ab3@5717> errcode:     Ds.l 1
000238E6 <AmiBlitz3.ab3@5721>   MOVE.W  #$D202,D1
000238EC <AmiBlitz3.ab3@5722> JMP Atokejsr                                               ;BRA.W Atokejsr
000238F0 <AmiBlitz3.ab3@5726>   MOVE.w inerr(PC),D1
000238F4 <AmiBlitz3.ab3@5727>    BEQ.w errerr3
000238FA <AmiBlitz3.ab3@5728>   CLR.w inerr
00023900 <AmiBlitz3.ab3@5729>   MOVE.w dontwrite_nomemleft,D1
00023904 <AmiBlitz3.ab3@5730>    BNE.w 'skip
00023908 <AmiBlitz3.ab3@5731>   MOVEA.l errjmp(PC),A0
0002390E <AmiBlitz3.ab3@5732>   MOVE.l destpointer,(A0)
00023912 <AmiBlitz3.ab3@5735> BRA.w get1bytemain
00023916 <AmiBlitz3.ab3@5739>   MOVE.w #$D205,D1
0002391C <AmiBlitz3.ab3@5740> JMP Atokejsr
00023922 <AmiBlitz3.ab3@5744>   MOVE.w proceduremode,D1
00023926 <AmiBlitz3.ab3@5745>    BNE.w errerr1
0002392A <AmiBlitz3.ab3@5746>   MOVE.w inerr(PC),D1
0002392E <AmiBlitz3.ab3@5747>    BNE.w errerr2
00023934 <AmiBlitz3.ab3@5748>   LEA inerr,a0
00023936 <AmiBlitz3.ab3@5749>   NOT.w (a0)                                               ;reass
0002393A <AmiBlitz3.ab3@5750>   MOVE.w #$203C,D1                                         ;move.l #x,d0
00023940 <AmiBlitz3.ab3@5751>   JSR writeword
0002394A <AmiBlitz3.ab3@5752>   MOVE.l destpointer,errcode
0002394E <AmiBlitz3.ab3@5753>   BSR.w addoff
00023954 <AmiBlitz3.ab3@5754>   JSR writelong
00023958 <AmiBlitz3.ab3@5755>   MOVE.w #$D201,D1
0002395E <AmiBlitz3.ab3@5756>   JSR Atokejsr
00023962 <AmiBlitz3.ab3@5757>   MOVE.w #$4EF9,D1                                         ;JMP
00023968 <AmiBlitz3.ab3@5758>   JSR writeword
00023972 <AmiBlitz3.ab3@5759>   MOVE.l destpointer,errjmp
00023976 <AmiBlitz3.ab3@5760>   BSR.w addoff
0002397C <AmiBlitz3.ab3@5761>   JSR writelong
00023982 <AmiBlitz3.ab3@5762>   MOVE.w dontwrite_nomemleft,D1
00023986 <AmiBlitz3.ab3@5763>    BNE.w 'skip
0002398A <AmiBlitz3.ab3@5764>   MOVEA.l errcode(PC),A0
00023990 <AmiBlitz3.ab3@5765>   MOVE.l destpointer,(A0)
00023992 <AmiBlitz3.ab3@5768> RTS
00023996 <AmiBlitz3.ab3@5771> intlineat:  Ds.l 1
00023998 <AmiBlitz3.ab3@5775>   MOVEQ.l #-$01,D1                                        ;type - need new string space
0002399C <AmiBlitz3.ab3@5776>   BSR.w errchx
000239A2 <AmiBlitz3.ab3@5777>   MOVE.w D1,intstring
000239AC <AmiBlitz3.ab3@5778>   MOVE.l linenumat,intlineat
000239B2 <AmiBlitz3.ab3@5779>   JSR evalconst                                           ;get constant - int level
000239B8 <AmiBlitz3.ab3@5780>   CMP.l #$E,D3
000239BC <AmiBlitz3.ab3@5781>    BCC.w interr4
000239C2 <AmiBlitz3.ab3@5782>   ST intsused
000239C8 <AmiBlitz3.ab3@5783>   MOVE.w D3,intlevel
000239CC <AmiBlitz3.ab3@5784>   MOVE.w #$7000,D1
000239CE <AmiBlitz3.ab3@5785>   OR.w D3,D1                                              
000239D4 <AmiBlitz3.ab3@5786>   JSR writeword                                         ;moveq #x,d0
000239D8 <AmiBlitz3.ab3@5787>   MOVE.w #$223C,D1                                        ;move.l #x,d1
000239DE <AmiBlitz3.ab3@5788>   JSR writeword
000239E2 <AmiBlitz3.ab3@5789>   BSR.w addoff
000239E8 <AmiBlitz3.ab3@5790>   MOVE.l destpointer,-(A7)
000239EC <AmiBlitz3.ab3@5791>   BSR.w writelong
000239F0 <AmiBlitz3.ab3@5792>   MOVE.w #$C100,D1
000239F6 <AmiBlitz3.ab3@5793>   JSR Atokejsr
000239FA <AmiBlitz3.ab3@5794>   MOVE.w #$4EF9,D1                                        ;jmp
00023A00 <AmiBlitz3.ab3@5795>   JSR writeword
00023A04 <AmiBlitz3.ab3@5796>   BSR.w addoff
00023A0E <AmiBlitz3.ab3@5797>   MOVE.l destpointer,intjmpat
00023A12 <AmiBlitz3.ab3@5798>   BSR.w writelong
00023A14 <AmiBlitz3.ab3@5799>   MOVEA.l (A7)+,A0
00023A1A <AmiBlitz3.ab3@5800>   MOVE.w dontwrite_nomemleft,D1
00023A1E <AmiBlitz3.ab3@5801>   BNE.w 'dontpoke
00023A24 <AmiBlitz3.ab3@5802>   MOVE.l destpointer,(A0)
00023A28 <AmiBlitz3.ab3@5805>   MOVE.l intstart0(PC),D1
00023A2C <AmiBlitz3.ab3@5806>   BSR.w writelong
00023A32 <AmiBlitz3.ab3@5807>   TST.b debugmode
00023A36 <AmiBlitz3.ab3@5808>    BEQ.w 'norerr
00023A38 <AmiBlitz3.ab3@5812>   MOVEQ.l #$02,D1
00023A3C <AmiBlitz3.ab3@5813>   BSR.w writetrap
00023A40 <AmiBlitz3.ab3@5814>   BSR.w addoff
00023A4A <AmiBlitz3.ab3@5815>   MOVE.l destpointer,intcleanat
00023A4E <AmiBlitz3.ab3@5816>   BSR.w writelong
00023A54 <AmiBlitz3.ab3@5817>   MOVE.w intlevel,D1
00023A58 <AmiBlitz3.ab3@5818>   BSR.w writeword
00023A5C <AmiBlitz3.ab3@5819>   MOVE.w #$C30B,D1                                         ;disable stack checks
00023A62 <AmiBlitz3.ab3@5820>   JSR Atokejsr
00023A66 <AmiBlitz3.ab3@5823>   MOVE.w #$FED3,D1
00023A6A <AmiBlitz3.ab3@5824>   BSR.w uselib
00023A6E <AmiBlitz3.ab3@5825>   MOVE.w #$C102,D1
00023A74 <AmiBlitz3.ab3@5826>   JSR Atokejsr
00023A7C <AmiBlitz3.ab3@5827>   MOVE.w #-1,lasta6
00023A86 <AmiBlitz3.ab3@5828>   MOVE.l linenumat,intline
00023A88 <AmiBlitz3.ab3@5829> RTS
00023A8A <AmiBlitz3.ab3@5833>             Ds.w 1                                         ;??looks like obsolved data??
00023A8E <AmiBlitz3.ab3@5835> intdata1:   Ds.l 1                                         ;where in data1 a5 is being kept
00023A92 <AmiBlitz3.ab3@5837> intjmpat:   Ds.l 1
00023A96 <AmiBlitz3.ab3@5838> intline:    Ds.l 1
00023A98 <AmiBlitz3.ab3@5839> intstring:  Ds.w 1                                         ;flag 0 = no setint
00023A9A <AmiBlitz3.ab3@5842> intlevel:   Ds.w 1
00023A9E <AmiBlitz3.ab3@5843> intcleanat: Ds.l 1
00023AA2 <AmiBlitz3.ab3@5844> ret15add:   Ds.l 1
00023AA4 <AmiBlitz3.ab3@5845> ret15cc:    Ds.w 1
00023AAC <AmiBlitz3.ab3@5849>   ADDI.l #$12,$2(A7)
00023AB4 <AmiBlitz3.ab3@5850>   MOVE.l $2(A7),ret15add
00023ABA <AmiBlitz3.ab3@5851>   MOVE.w (A7),ret15cc
00023AC2 <AmiBlitz3.ab3@5852>   MOVE.l #directdo,$2(A7)
00023AC4 <AmiBlitz3.ab3@5853> RTE
00023AC8 <AmiBlitz3.ab3@5862>   MOVE.l ret15add(PC),-(A7)
00023ACC <AmiBlitz3.ab3@5863>   MOVE.w ret15cc(PC),-(A7)                                 ;15*4
00023AD0 <AmiBlitz3.ab3@5864>   MOVEM.l D0-D7/A0-A6,-(A7)
00023ADA <AmiBlitz3.ab3@5865>   MOVE.l destbufferend,trap15temp                          ;store high buff addr
00023AE4 <AmiBlitz3.ab3@5866>   MOVE.l destbufferstart,trap15temp2
00023AEE <AmiBlitz3.ab3@5867>   MOVE.l libend,templibend
00023AF8 <AmiBlitz3.ab3@5868>   MOVE.l data1start,tempdata1start
00023AFE <AmiBlitz3.ab3@5869>   CLR.l hunkoffsetcounter
00023B04 <AmiBlitz3.ab3@5871>   MOVE.l directbuffer,a0
00023B0A <AmiBlitz3.ab3@5875>   MOVE.l a0,destbufferstart
00023B10 <AmiBlitz3.ab3@5876>   ADD.l #3900,a0
00023B16 <AmiBlitz3.ab3@5877>   MOVE.l a0,destbufferend
00023B1C <AmiBlitz3.ab3@5878>   TST.b exdebug
00023B20 <AmiBlitz3.ab3@5879>   BEQ 'l1
00023B26 <AmiBlitz3.ab3@5880>   MOVE.l a0,libend
00023B2C <AmiBlitz3.ab3@5881>   ADD.l #4000,a0
00023B32 <AmiBlitz3.ab3@5882>   MOVE.l a0,data1start
00023B3C <AmiBlitz3.ab3@5885>   MOVE.l #'dircont,errcont
00023B42 <AmiBlitz3.ab3@5886> 
00023B48 <AmiBlitz3.ab3@5887>   MOVE.l A7,errstack
00023B50 <AmiBlitz3.ab3@5888>   MOVE.w #$FFFF,dirmode
00023B54 <AmiBlitz3.ab3@5890>     MOVEA.l ret15add(PC),A1
00023B5A <AmiBlitz3.ab3@5891>     MOVE.w -(A1),blitzmode
00023B5C <AmiBlitz3.ab3@5892>     CLR.l -(A1)
00023B62 <AmiBlitz3.ab3@5893>     MOVE.l -(A1),firstglob
00023B68 <AmiBlitz3.ab3@5894>     MOVE.l -(A1),firstlocal
00023B6E <AmiBlitz3.ab3@5896>   CLR.w proceduremode
00023B74 <AmiBlitz3.ab3@5897>   MOVE.l firstglob,D0
00023B7A <AmiBlitz3.ab3@5898>   OR.l firstlocal,D0
00023B7E <AmiBlitz3.ab3@5899>   BEQ.b 'skip
00023B84 <AmiBlitz3.ab3@5900>   NOT.w proceduremode
00023B86 <AmiBlitz3.ab3@5903>   MOVEA.l -(A1),A0                                         ;address of string
00023B88 <AmiBlitz3.ab3@5907>   MOVE.l A0,-(A7)
00023BC6 <AmiBlitz3.ab3@5910>   !ComData_GetL{comFunc_DebugTrap,A1}
00023BC8 <AmiBlitz3.ab3@5911>   JSR (A1)                                                 ;tokenise line.....
00023BCA <AmiBlitz3.ab3@5913>   MOVEA.l (A7)+,A5
00023BD4 <AmiBlitz3.ab3@5914>   MOVE.l directbuffer,destpointer
00023BDA <AmiBlitz3.ab3@5915>   TST.b exdebug
00023BDE <AmiBlitz3.ab3@5916>   BEQ 'noexdebug
00023BE0 <AmiBlitz3.ab3@5917>   MOVE.l a5,a0
00023BE6 <AmiBlitz3.ab3@5918>   MOVE.l #200,d0
00023BEC <AmiBlitz3.ab3@5921>     MOVE.b 0(a0,d0.l),8(a0,d0.l)
00023BF0 <AmiBlitz3.ab3@5922>   DBF d0,'l2
00023BF6 <AmiBlitz3.ab3@5927>   MOVE.l destpointer,a0
00023BFA <AmiBlitz3.ab3@5928>   MOVE.w #$207c,(a0)+
00023BFC <AmiBlitz3.ab3@5929>   MOVE.l a5,d0
00023C02 <AmiBlitz3.ab3@5930>   ADD.l #$206,d0                                           ;constant from debuglib
00023C04 <AmiBlitz3.ab3@5931>   MOVE.l d0,(a0)+
00023C0A <AmiBlitz3.ab3@5932>   MOVE.l a0,destpointer
00023C0C <AmiBlitz3.ab3@5933>   MOVE.l a5,a0
00023C10 <AmiBlitz3.ab3@5934>   MOVE.w #$8039,(a0)+                                      ;TokeJsr 164 (inputoutputlib) LSL 7+4
00023C16 <AmiBlitz3.ab3@5935>   MOVE.l #"$520",(a0)+
00023C1A <AmiBlitz3.ab3@5936>   MOVE.w #"4:",(a0)+
00023C20 <AmiBlitz3.ab3@5939>   CLR.w dontwrite_nomemleft
00023C28 <AmiBlitz3.ab3@5940>   MOVE.w #$FFFF,lasta6
00023C2C <AmiBlitz3.ab3@5941>   BSR.w compile_line                                        ;.....compile it
00023C32 <AmiBlitz3.ab3@5942>   TST.b exdebug
00023C36 <AmiBlitz3.ab3@5943>   BEQ 'noexdebug2
00023C3C <AmiBlitz3.ab3@5944>   JSR fixjsrs
00023C42 <AmiBlitz3.ab3@5947>   CLR.w proceduremode
00023C46 <AmiBlitz3.ab3@5948>   BSR.w errchx
00023C4A <AmiBlitz3.ab3@5949>   MOVE.w #$4EF9,D1
00023C4E <AmiBlitz3.ab3@5950>   BSR.w writeword                                          ;JMP
00023C52 <AmiBlitz3.ab3@5951>   MOVE.l ret15add(PC),D1
00023C56 <AmiBlitz3.ab3@5952>   BSR.w writelong                                          ;jmp to done
00023C5C <AmiBlitz3.ab3@5953>   MOVE.w dontwrite_nomemleft,D0
00023C60 <AmiBlitz3.ab3@5954>    BNE.w nodirmem
00023C68 <AmiBlitz3.ab3@5955>   MOVE.l directbuffer,$3E(A7)                              ;install code address
00023C6E <AmiBlitz3.ab3@5958>   CLR.w dirmode
00023C74 <AmiBlitz3.ab3@5959>   MOVE.w ret15cc(PC),$3C(A7)
00023C7E <AmiBlitz3.ab3@5960>   MOVE.l trap15temp,destbufferend
00023C88 <AmiBlitz3.ab3@5961>   MOVE.l trap15temp2,destbufferstart
00023C92 <AmiBlitz3.ab3@5962>   MOVE.l tempdata1start,data1start
00023C9C <AmiBlitz3.ab3@5963>   MOVE.l templibend,libend
00023CA0 <AmiBlitz3.ab3@5964>   MOVEM.l (A7)+,D0-D7/A0-A6
00023CA4 <AmiBlitz3.ab3@5965>   BSR.w Aclearcache                                        ;selden used
00023CA6 <AmiBlitz3.ab3@5966> RTR
00023CAA <AmiBlitz3.ab3@5969>   MOVEA.l ret15add(PC),A0
00023CAC <AmiBlitz3.ab3@5970>   SUBQ.w #2,A0
00023CAE <AmiBlitz3.ab3@5971>   MOVE.l D0,-(A0)
00023CB2 <AmiBlitz3.ab3@5972> BRA.w 'direxit
00023CB6 <AmiBlitz3.ab3@5976>   MOVE.w $6(A3),D1
00023CBA <AmiBlitz3.ab3@5977>   BSR.w uselib                                             ;get lib for base address
00023CBE <AmiBlitz3.ab3@5978>   MOVE.w $A(A1),-(A7)                                      ;libbase reg
00023CC0 <AmiBlitz3.ab3@5979>   ADDQ.w #8,A3
00023CC2 <AmiBlitz3.ab3@5980>   MOVE.w (A3)+,-(A7)                                       ;get offset for lib
00023CC4 <AmiBlitz3.ab3@5981>   MOVE.l A3,-(A7)
00023CC6 <AmiBlitz3.ab3@5985>   MOVEQ.l #$00,D3
00023CCC <AmiBlitz3.ab3@5987>   JSR checka4a5
00023CCE <AmiBlitz3.ab3@5991>   MOVE.b (A3)+,D1
00023CD2 <AmiBlitz3.ab3@5992>    BMI.w 'done
00023CD4 <AmiBlitz3.ab3@5993>   MOVEQ.l #$03,D2
00023CD6 <AmiBlitz3.ab3@5994>   ADDQ.w #1,D3
00023CDA <AmiBlitz3.ab3@5995>   MOVEM.l D3/A3,-(A7)
00023CE0 <AmiBlitz3.ab3@5997>   MOVE.b funcparloop,-(a7)
00023CE8 <AmiBlitz3.ab3@5998>   MOVE.b #0,funcparloop
00023CEE <AmiBlitz3.ab3@5999>   MOVE.l leftsidetype,-(a7)
00023CF4 <AmiBlitz3.ab3@6000>   MOVE.l rightsidetype,-(a7)
00023CFA <AmiBlitz3.ab3@6001>   MOVE.w leftsideflagmask,-(a7)
00023D00 <AmiBlitz3.ab3@6002>   MOVE.w rightsideflagmask,-(a7)
00023D06 <AmiBlitz3.ab3@6003>   CLR.l leftsidetype
00023D0C <AmiBlitz3.ab3@6004>   CLR.l rightsidetype
00023D12 <AmiBlitz3.ab3@6005>   CLR.w leftsideflagmask
00023D18 <AmiBlitz3.ab3@6006>   CLR.w rightsideflagmask
00023D1E <AmiBlitz3.ab3@6007>   MOVE.b blitzparloop,-(a7)
00023D26 <AmiBlitz3.ab3@6008>   MOVE.b #1,blitzparloop                                 ;write the parameter to stack
00023D2C <AmiBlitz3.ab3@6010>   JSR peval
00023D32 <AmiBlitz3.ab3@6012>   MOVE.b (a7)+,blitzparloop
00023D38 <AmiBlitz3.ab3@6013>   MOVE.w (a7)+,rightsideflagmask
00023D3E <AmiBlitz3.ab3@6014>   MOVE.w (a7)+,leftsideflagmask
00023D44 <AmiBlitz3.ab3@6015>   MOVE.l (a7)+,rightsidetype
00023D4A <AmiBlitz3.ab3@6016>   MOVE.l (a7)+,leftsidetype
00023D50 <AmiBlitz3.ab3@6017>   MOVE.b (a7)+,funcparloop
00023D54 <AmiBlitz3.ab3@6018>   MOVEM.l (A7)+,D3/A3
00023D58 <AmiBlitz3.ab3@6020>   CMP.w #$2C,D0     ; ','
00023D5C <AmiBlitz3.ab3@6021>    BEQ.w 'loop
00023D5E <AmiBlitz3.ab3@6022>   TST.b (A3)
00023D62 <AmiBlitz3.ab3@6023>    BPL.w syntaxerr
00023D64 <AmiBlitz3.ab3@6026>   MOVEA.l (A7)+,A3
00023D66 <AmiBlitz3.ab3@6027>   SUBQ.w #1,D3
00023D6A <AmiBlitz3.ab3@6028>    BPL.w 'toend
00023D6E <AmiBlitz3.ab3@6029>    BSR.w get1bytemain                                      ;no pars - get :
00023D72 <AmiBlitz3.ab3@6030>  BRA.w 'nopars
00023D74 <AmiBlitz3.ab3@6033>   TST.b (A3)+                                              ;go to end of params
00023D78 <AmiBlitz3.ab3@6034>    BPL.w 'toend
00023D7A <AmiBlitz3.ab3@6035>   SUBQ.w #1,A3
00023D7C <AmiBlitz3.ab3@6038>    MOVEQ.l #$00,D1
00023D7E <AmiBlitz3.ab3@6039>    MOVE.b -(A3),D1
00023D82 <AmiBlitz3.ab3@6040>    BTST #$4,D1
00023D86 <AmiBlitz3.ab3@6041>     BNE.w 'addreg
00023D88 <AmiBlitz3.ab3@6042>    LSL.w #8,D1
00023D8A <AmiBlitz3.ab3@6043>    LSL.w #1,D1
00023D8E <AmiBlitz3.ab3@6044>    ORI.w #$201F,D1
00023D92 <AmiBlitz3.ab3@6045>  BRA.w 'gotit
00023D96 <AmiBlitz3.ab3@6048>    ANDI.w #$7,D1
00023D98 <AmiBlitz3.ab3@6049>    LSL.w #8,D1
00023D9A <AmiBlitz3.ab3@6050>    LSL.w #1,D1
00023D9E <AmiBlitz3.ab3@6051>    ORI.w #$205F,D1
00023DA2 <AmiBlitz3.ab3@6054>     BSR.w writeword
00023DA6 <AmiBlitz3.ab3@6055>   DBF D3,'loop2
00023DAC <AmiBlitz3.ab3@6058>   MOVE.w (A7)+,libjsr+2
00023DB2 <AmiBlitz3.ab3@6059>   MOVE.w (A7)+,libbase+2
00023DB8 <AmiBlitz3.ab3@6060>   MOVE.l libbase,D1
00023DBC <AmiBlitz3.ab3@6061>    BSR.w writelong
00023DC2 <AmiBlitz3.ab3@6062>   MOVE.l libjsr,D1
00023DC8 <AmiBlitz3.ab3@6063>   JSR writelong
00023DCE <AmiBlitz3.ab3@6065>   JSR restorea4a5
00023DD0 <AmiBlitz3.ab3@6067> RTS
00023DD6 <AmiBlitz3.ab3@6074>   MOVE.l data1,D4
00023DDC <AmiBlitz3.ab3@6075>   SUB.l data1start,D4
00023DE2 <AmiBlitz3.ab3@6076>   ADD.l #10000,d4
00023DE8 <AmiBlitz3.ab3@6077>   MOVE.l libend,D3
00023DEE <AmiBlitz3.ab3@6078>   SUB.l destbufferend,D3
00023DF4 <AmiBlitz3.ab3@6079>   ADD.l #40000,d3
00023DFA <AmiBlitz3.ab3@6080>   MOVE.l bigpc,D2
00023E00 <AmiBlitz3.ab3@6081>   SUB.l destbufferstart,D2
00023E06 <AmiBlitz3.ab3@6082>   ADD.l #20000,d2
00023E0C <AmiBlitz3.ab3@6083>   MOVE.l databuffer,D5
00023E12 <AmiBlitz3.ab3@6084>   ADD.l #10000,D5
00023E16 <AmiBlitz3.ab3@6085>  BRA newallox
00023E1C <AmiBlitz3.ab3@6088>   MOVE.l objectbuffer,D2       ;??Looks like unused code??
00023E1E <AmiBlitz3.ab3@6089>   LSR.l #1,D2
00023E24 <AmiBlitz3.ab3@6090>   ADD.l objectbuffer,D2
00023E2A <AmiBlitz3.ab3@6092>   MOVE.l libsbuffer,D3
00023E2C <AmiBlitz3.ab3@6093>   LSR.l #1,D3
00023E32 <AmiBlitz3.ab3@6094>   ADD.l libsbuffer,D3
00023E38 <AmiBlitz3.ab3@6096>   MOVE.l systembuffer,D4
00023E3A <AmiBlitz3.ab3@6097>   LSR.l #1,D4
00023E40 <AmiBlitz3.ab3@6098>   ADD.l systembuffer,D4
00023E46 <AmiBlitz3.ab3@6100>   MOVE.l databuffer,D5
00023E48 <AmiBlitz3.ab3@6101>   LSR.l #1,D5
00023E4E <AmiBlitz3.ab3@6102>   ADD.l databuffer,D5
00023E52 <AmiBlitz3.ab3@6104> BRA.w newallox
00023E58 <AmiBlitz3.ab3@6108>   MOVE.l bigpc,D2
00023E5E <AmiBlitz3.ab3@6109>   SUB.l destbufferstart,D2                                     ;size of object buffer
00023E64 <AmiBlitz3.ab3@6110>   SUB.l savefuncspace,d2
00023E6A <AmiBlitz3.ab3@6112>   TST.w debugversion
00023E6E <AmiBlitz3.ab3@6113>    BNE.b 'skip
00023E74 <AmiBlitz3.ab3@6114>   ADDI.l #$800,D2
00023E7A <AmiBlitz3.ab3@6117>   MOVE.l libend,D3
00023E80 <AmiBlitz3.ab3@6118>   SUB.l destbufferend,D3
00023E86 <AmiBlitz3.ab3@6122>   MOVE.l data1,D4
00023E8C <AmiBlitz3.ab3@6123>   SUB.l data1start,D4
00023E92 <AmiBlitz3.ab3@6127>   MOVE.l data2,D5
00023E98 <AmiBlitz3.ab3@6128>   SUB.l data2at,D5
00023E9E <AmiBlitz3.ab3@6131>   CLR.l morememadd
00023EA2 <AmiBlitz3.ab3@6135>   BSR.w makeallox
00023EA6 <AmiBlitz3.ab3@6136>   BNE.w 'done
00023EAA <AmiBlitz3.ab3@6137>  BRA.w init_buffers
00023EAC <AmiBlitz3.ab3@6140> RTS
00023EB2 <AmiBlitz3.ab3@6144>   MOVEA.l _execbase,A6
00023EB8 <AmiBlitz3.ab3@6145>   MOVE.l objlen,D0
00023EBC <AmiBlitz3.ab3@6146>   BEQ.w 'skip
00023EC2 <AmiBlitz3.ab3@6147>   CLR.l objlen
00023EC8 <AmiBlitz3.ab3@6148>   MOVEA.l destbufferstart,A1
00023ECE <AmiBlitz3.ab3@6150>   MOVE.l mempool,a0
00023ED2 <AmiBlitz3.ab3@6151> JMP _FreeVec(A6)
00023ED4 <AmiBlitz3.ab3@6156> RTS
00023EDA <AmiBlitz3.ab3@6160>   MOVE.l objectbuffer,D2
00023EE0 <AmiBlitz3.ab3@6161>   MOVE.l libsbuffer,D3
00023EE6 <AmiBlitz3.ab3@6162>   MOVE.l systembuffer,D4
00023EEC <AmiBlitz3.ab3@6163>   MOVE.l databuffer,D5
00023EF4 <AmiBlitz3.ab3@6168>   MOVE.w #$FFFF,anyerrs      ; was -1
00023EF8 <AmiBlitz3.ab3@6169>   BSR.w freeallox
00023EFA <AmiBlitz3.ab3@6173>   ADDQ.l #1,D2
00023EFE <AmiBlitz3.ab3@6174>   BCLR #$0,D2
00023F00 <AmiBlitz3.ab3@6175>   ADDQ.l #1,D3
00023F04 <AmiBlitz3.ab3@6176>   BCLR #$0,D3
00023F06 <AmiBlitz3.ab3@6177>   ADDQ.l #1,D4
00023F0A <AmiBlitz3.ab3@6178>   BCLR #$0,D4
00023F0C <AmiBlitz3.ab3@6180>   TST.l d5        ; ??? make no sence ??
00023F10 <AmiBlitz3.ab3@6181>   BNE 'l1
00023F12 <AmiBlitz3.ab3@6185>   ADDQ.l #1,D5
00023F16 <AmiBlitz3.ab3@6186>   BCLR #$0,D5
00023F18 <AmiBlitz3.ab3@6188>   MOVE.l D2,D0
00023F1A <AmiBlitz3.ab3@6189>   ADD.l D3,D0
00023F1C <AmiBlitz3.ab3@6190>   ADD.l D4,D0
00023F1E <AmiBlitz3.ab3@6191>   ADD.l D5,D0
00023F24 <AmiBlitz3.ab3@6193>   ADD.l #moremem,d0
00023F26 <AmiBlitz3.ab3@6195>   MOVE.l D0,D6
00023F2C <AmiBlitz3.ab3@6196>   MOVE.l #MemfPublic_MemfClear,D1
00023F32 <AmiBlitz3.ab3@6198>   MOVE.l mempool,a0
00023F38 <AmiBlitz3.ab3@6199>   MOVEA.l _execbase,A6
00023F3C <AmiBlitz3.ab3@6200>   JSR _AllocVec(a6)                                        ;alloc mem for objectbuffer
00023F3E <AmiBlitz3.ab3@6203>   TST.l D0
00023F42 <AmiBlitz3.ab3@6204>   BEQ.w 'done
00023F48 <AmiBlitz3.ab3@6205>   MOVE.l D6,objlen
00023F4E <AmiBlitz3.ab3@6206>   MOVE.l D2,objectbuffer
00023F54 <AmiBlitz3.ab3@6207>   MOVE.l D3,libsbuffer
00023F5A <AmiBlitz3.ab3@6208>   MOVE.l D4,systembuffer
00023F60 <AmiBlitz3.ab3@6209>   MOVE.l D5,databuffer
00023F66 <AmiBlitz3.ab3@6210>   MOVE.l D0,destbufferstart
00023F9A <AmiBlitz3.ab3@6214>   !ComData_SetL{comPtr_DestBufferStart,D0}
00023F9C <AmiBlitz3.ab3@6216>   ADD.l D2,D0
00023FA2 <AmiBlitz3.ab3@6217>   MOVE.l D0,destbufferend
00023FA4 <AmiBlitz3.ab3@6218>   ADD.l D3,D0
00023FAA <AmiBlitz3.ab3@6219>   MOVE.l D0,data1start
00023FAC <AmiBlitz3.ab3@6220>   ADD.l D4,D0
00023FB2 <AmiBlitz3.ab3@6221>   MOVE.l D0,data2at
00023FB4 <AmiBlitz3.ab3@6222>   ADD.l D5,D0
00023FBA <AmiBlitz3.ab3@6223>   MOVE.l D0,allat
00023FBC <AmiBlitz3.ab3@6226> RTS
00023FC0 <AmiBlitz3.ab3@6230>   Dc.b $00,$00,$00,$01                                     ;         1
00023FC4 <AmiBlitz3.ab3@6231>   Dc.b $00,$00,$00,$0A                                     ;        10
00023FC8 <AmiBlitz3.ab3@6232>   Dc.b $00,$00,$00,$64                                     ;       100
00023FCC <AmiBlitz3.ab3@6233>   Dc.b $00,$00,$03,$E8                                     ;      1000
00023FD0 <AmiBlitz3.ab3@6234>   Dc.b $00,$00,$27,$10                                     ;     10000
00023FD4 <AmiBlitz3.ab3@6235>   Dc.b $00,$01,$86,$A0                                     ;    100000
00023FD8 <AmiBlitz3.ab3@6236>   Dc.b $00,$0F,$42,$40                                     ;   1000000
00023FDC <AmiBlitz3.ab3@6237>   Dc.b $00,$98,$96,$80                                     ;  10000000
00023FE0 <AmiBlitz3.ab3@6238>   Dc.b $05,$F5,$E1,$00                                     ; 100000000
00023FE4 <AmiBlitz3.ab3@6239>   Dc.b $3B,$9A,$CA,$00                                     ;1000000000
00023FE6 <AmiBlitz3.ab3@6243>   MOVEQ.l #$00,D1                                          ;no zero printed
00023FE8 <AmiBlitz3.ab3@6244>   MOVEQ.l #$24,D3                                          ; "$"
00023FEA <AmiBlitz3.ab3@6247>   MOVEQ.l #$30,D4                                          ; "0"
00023FEE <AmiBlitz3.ab3@6250>     CMP.l divisors(PC,D3.W),D2
00023FF2 <AmiBlitz3.ab3@6251>     BCS.w 'skip
00023FF6 <AmiBlitz3.ab3@6252>     SUB.l divisors(PC,D3.W),D2
00023FF8 <AmiBlitz3.ab3@6253>     ADDQ.w #1,D4
00023FFC <AmiBlitz3.ab3@6254>  BRA.w 'loop2
00024000 <AmiBlitz3.ab3@6257>   CMP.b #"0",D4
00024004 <AmiBlitz3.ab3@6258>   BNE.w 'doit
00024006 <AmiBlitz3.ab3@6259>   TST.w D1
0002400A <AmiBlitz3.ab3@6260>   BEQ.w 'skip2
0002400C <AmiBlitz3.ab3@6263>   MOVE.b D4,(A0)+
0002400E <AmiBlitz3.ab3@6264>   MOVEQ.l #$01,D1
00024010 <AmiBlitz3.ab3@6267>   SUBQ.w #4,D3
00024014 <AmiBlitz3.ab3@6268>   BPL.w 'loop
00024016 <AmiBlitz3.ab3@6269>   TST.w D1
0002401A <AmiBlitz3.ab3@6270>   BNE.w 'skip3
0002401E <AmiBlitz3.ab3@6271>   MOVE.b #"0",(A0)+
00024020 <AmiBlitz3.ab3@6274>   CLR.b (A0)
00024022 <AmiBlitz3.ab3@6275> RTS
00024042 <AmiBlitz3.ab3@6278> str_residentrequester:  Dc.b "Name of Resident File to Create",0 : Even        ;restext org source
00024102 <AmiBlitz3.ab3@6279> str_residentpath:       Ds.l 48                                                ;respath org source
000241C2 <AmiBlitz3.ab3@6280> str_residentname:       Ds.l 48                                                ;resname org source
000241C8 <AmiBlitz3.ab3@6286>   MOVE.l macrobase,D0
000241CC <AmiBlitz3.ab3@6287>    BNE.w 'skip
000241D2 <AmiBlitz3.ab3@6288>   MOVE.l newtype_string,D0
000241D6 <AmiBlitz3.ab3@6289>    BNE.w 'skip
000241DC <AmiBlitz3.ab3@6290>   MOVEA.l labelbase,A2
000241E0 <AmiBlitz3.ab3@6293>     CMPA.w #$0,A2
000241E4 <AmiBlitz3.ab3@6294>      BEQ.w 'err
000241EC <AmiBlitz3.ab3@6295>     CMPI.l #$1,$4(A2)
000241F0 <AmiBlitz3.ab3@6296>      BEQ.w 'skip
000241F2 <AmiBlitz3.ab3@6297>     MOVEA.l (A2),A2
000241F6 <AmiBlitz3.ab3@6298>  BRA.w 'loop
00024220 <AmiBlitz3.ab3@6302>   !basic
00024282 <AmiBlitz3.ab3@6303> 
000242A0 <AmiBlitz3.ab3@6304>   !asm
000242A2 <AmiBlitz3.ab3@6306>  RTS
000242E0 <AmiBlitz3.ab3@6311>   !ComData_GetL{comFunc_ASLFileRequest,A3}
000242E6 <AmiBlitz3.ab3@6312>   LEA str_residentrequester,A2
000242EC <AmiBlitz3.ab3@6313>   LEA str_residentpath,A0
000242F2 <AmiBlitz3.ab3@6314>   LEA str_residentname,A1
0002431C <AmiBlitz3.ab3@6316>   !basic
00024354 <AmiBlitz3.ab3@6317>     Poke$ ?str_residentpath,my_residentsdir$
00024380 <AmiBlitz3.ab3@6318>     Poke$ ?str_residentname,".res"
0002439E <AmiBlitz3.ab3@6319>   !asm
000243A0 <AmiBlitz3.ab3@6321>   JSR (A3)                                                 ;open ped filerequest
000243A4 <AmiBlitz3.ab3@6322>   BEQ.w 'err
000243A6 <AmiBlitz3.ab3@6326>   MOVE.l D0,D1
000243AC <AmiBlitz3.ab3@6327>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
000243B0 <AmiBlitz3.ab3@6328>   MOVEA.l _dosbase(PC),A6
000243B4 <AmiBlitz3.ab3@6329>   JSR _Open(A6)
000243B6 <AmiBlitz3.ab3@6330>   MOVE.l D0,D7               ;handle                                ;handle
000243BA <AmiBlitz3.ab3@6331>   BEQ.w 'err
000243BE <AmiBlitz3.ab3@6333>   MOVEM.l d2-d7/a0-a6,-(a7)
000243C4 <AmiBlitz3.ab3@6334>   LEA devo,a0
000243CA <AmiBlitz3.ab3@6335>   LEA ptr_parameterstore,a1
000243CC <AmiBlitz3.ab3@6338>     MOVE.b (a0)+,(a1)+
000243D0 <AmiBlitz3.ab3@6339>   BNE 'l1
000243D2 <AmiBlitz3.ab3@6340>   MOVEQ #13,d2
000243D8 <AmiBlitz3.ab3@6341>   JSR findlabel2
000243DC <AmiBlitz3.ab3@6342>   BNE 'd
000243E0 <AmiBlitz3.ab3@6343>   TST.l 8(a2)
000243E4 <AmiBlitz3.ab3@6344>   BEQ 'd2
0002440E <AmiBlitz3.ab3@6345>   !basic
00024470 <AmiBlitz3.ab3@6346>     error{!TRANS{"Cannot create Resident with develope debug 1"}}
0002448E <AmiBlitz3.ab3@6347>   !asm
00024492 <AmiBlitz3.ab3@6348>   MOVEM.l (a7)+,d2-d7/a0-a6
00024496 <AmiBlitz3.ab3@6349>   MOVEA.l _dosbase(PC),A6
00024498 <AmiBlitz3.ab3@6350>   MOVE.l d7,d1
0002449C <AmiBlitz3.ab3@6351>   JSR _Close(a6)
000244A0 <AmiBlitz3.ab3@6352>  BRA 'err
000244A4 <AmiBlitz3.ab3@6356>   MOVEM.l (a7)+,d2-d7/a0-a6
000244A8 <AmiBlitz3.ab3@6358>   BSR.w call_setpointerbusy
000244AC <AmiBlitz3.ab3@6360>   BSR.w killoffs
000244AE <AmiBlitz3.ab3@6362>   MOVE.l D7,D1
000244B4 <AmiBlitz3.ab3@6363>   MOVE.l #tsthead,D2        ;header                               ;header
000244B6 <AmiBlitz3.ab3@6364>   MOVEQ.l #$20,D3
000244BA <AmiBlitz3.ab3@6365>   MOVEA.l _dosbase(PC),A6
000244BE <AmiBlitz3.ab3@6366>   JSR _Write(A6)
000244C0 <AmiBlitz3.ab3@6368>   MOVEQ.l #$00,D6           ;offset from start of file!                               ;offset from start of file!
000244C4 <AmiBlitz3.ab3@6369>   BSR.w restypes
000244C8 <AmiBlitz3.ab3@6370>   BSR.w resmacs
000244CC <AmiBlitz3.ab3@6371>   BSR.w resconsts
000244CE <AmiBlitz3.ab3@6373>   MOVE.l D6,D3
000244D0 <AmiBlitz3.ab3@6374>   ADDQ.l #3,D3
000244D6 <AmiBlitz3.ab3@6375>   ANDI.l #$FFFFFFFC,D3      ;long word align                               ;long word align
000244D8 <AmiBlitz3.ab3@6376>   MOVE.l D3,-(A7)
000244DA <AmiBlitz3.ab3@6377>   SUB.l D6,D3
000244DE <AmiBlitz3.ab3@6378>   BEQ.w 'noalign
000244E4 <AmiBlitz3.ab3@6379>   MOVE.l #writelist,D2      ; was #hello,
000244E6 <AmiBlitz3.ab3@6380>   MOVE.l D7,D1
000244EC <AmiBlitz3.ab3@6381>   MOVEA.l _dosbase,A6
000244F0 <AmiBlitz3.ab3@6382>   JSR _Write(A6)
000244FA <AmiBlitz3.ab3@6385>    MOVE.l hunkoffsetcounter,tstsize3
000244FE <AmiBlitz3.ab3@6386>    BEQ.w 'skip2a
00024500 <AmiBlitz3.ab3@6387>   MOVE.l D7,D1
00024506 <AmiBlitz3.ab3@6388>   MOVE.l #tstend,D2
00024508 <AmiBlitz3.ab3@6389>   MOVEQ.l #$0C,D3
0002450E <AmiBlitz3.ab3@6390>   MOVEA.l _dosbase,A6
00024512 <AmiBlitz3.ab3@6391>    JSR _Write(A6)
00024518 <AmiBlitz3.ab3@6395>   MOVEA.l hunkoffsetbase,A2
0002451C <AmiBlitz3.ab3@6398>   CMPA.w #$0,A2
00024520 <AmiBlitz3.ab3@6399>    BEQ.w 'skip2
00024524 <AmiBlitz3.ab3@6400>   LEA $4(A2),A1
00024526 <AmiBlitz3.ab3@6401>   MOVE.l D7,D1
00024528 <AmiBlitz3.ab3@6402>   MOVE.l A1,D2
0002452A <AmiBlitz3.ab3@6403>   MOVEQ.l #$04,D3
00024530 <AmiBlitz3.ab3@6404>   MOVEA.l _dosbase,A6
00024534 <AmiBlitz3.ab3@6405>    JSR _Write(A6)
00024536 <AmiBlitz3.ab3@6406>   MOVEA.l (A2),A2
0002453A <AmiBlitz3.ab3@6407>  BRA.w 'oloop
0002453C <AmiBlitz3.ab3@6410>   MOVE.l D7,D1
00024542 <AmiBlitz3.ab3@6411>   MOVE.l #zero,D2
00024544 <AmiBlitz3.ab3@6412>   MOVEQ.l #$04,D3
0002454A <AmiBlitz3.ab3@6413>   MOVEA.l _dosbase,A6
0002454E <AmiBlitz3.ab3@6414>   JSR _Write(A6)
00024550 <AmiBlitz3.ab3@6417>   MOVE.l D7,D1
00024556 <AmiBlitz3.ab3@6418>   MOVE.l #tstdone,D2
00024558 <AmiBlitz3.ab3@6419>   MOVEQ.l #$04,D3
0002455E <AmiBlitz3.ab3@6420>   MOVEA.l _dosbase,A6
00024562 <AmiBlitz3.ab3@6421>    JSR _Write(A6)
00024564 <AmiBlitz3.ab3@6422>   MOVE.l (A7)+,D0
00024566 <AmiBlitz3.ab3@6423>   LSR.l #2,D0
0002456C <AmiBlitz3.ab3@6424>   MOVE.l D0,temp1
0002456E <AmiBlitz3.ab3@6426>   MOVE.l D7,D1
00024570 <AmiBlitz3.ab3@6427>   MOVEQ.l #$14,D2
00024572 <AmiBlitz3.ab3@6428>   MOVEQ.l #-$01,D3
00024576 <AmiBlitz3.ab3@6429>   JSR _Seek(A6)
00024578 <AmiBlitz3.ab3@6430>   MOVE.l D7,D1
0002457E <AmiBlitz3.ab3@6431>   MOVE.l #temp1,D2
00024580 <AmiBlitz3.ab3@6432>   MOVEQ.l #$04,D3
00024584 <AmiBlitz3.ab3@6433>    JSR _Write(A6)
00024586 <AmiBlitz3.ab3@6434>   MOVE.l D7,D1
00024588 <AmiBlitz3.ab3@6435>   MOVEQ.l #$1C,D2
0002458A <AmiBlitz3.ab3@6436>   MOVEQ.l #-$01,D3
0002458E <AmiBlitz3.ab3@6437>    JSR _Seek(A6)
00024590 <AmiBlitz3.ab3@6438>   MOVE.l D7,D1
00024596 <AmiBlitz3.ab3@6439>   MOVE.l #temp1,D2
00024598 <AmiBlitz3.ab3@6440>   MOVEQ.l #$04,D3
0002459C <AmiBlitz3.ab3@6441>    JSR _Write(A6)
0002459E <AmiBlitz3.ab3@6443>   MOVE.l D7,D1
000245A2 <AmiBlitz3.ab3@6444>    JSR _Close(A6)
000245A6 <AmiBlitz3.ab3@6445> BRA.w call_setpointernormal
000245A8 <AmiBlitz3.ab3@6451>   ADDQ.w #5,D1
000245AA <AmiBlitz3.ab3@6452>   ADDQ.b #8,D0
000245AE <AmiBlitz3.ab3@6456>     CMPA.w #$0,A2
000245B2 <AmiBlitz3.ab3@6457>     BEQ.w 'done
000245B6 <AmiBlitz3.ab3@6458>      BSR.w writeitem
000245B8 <AmiBlitz3.ab3@6459>     MOVEA.l (A2),A2
000245BC <AmiBlitz3.ab3@6460>  BRA.w 'loop
000245BE <AmiBlitz3.ab3@6463> RTS
000245C0 <AmiBlitz3.ab3@6467>   MOVEQ.l #$00,D3
000245C4 <AmiBlitz3.ab3@6468>   MOVE.b $0(A2,D5.W),D3
000245C6 <AmiBlitz3.ab3@6469>   ADDQ.w #1,D3
000245CA <AmiBlitz3.ab3@6470>   BCLR #$0,D3                                              ;word align
000245CC <AmiBlitz3.ab3@6471>   MOVE.l (A2),-(A7)
000245D0 <AmiBlitz3.ab3@6472>    BEQ.w 'skip
000245D4 <AmiBlitz3.ab3@6473>    BSR.w 'resoff
000245D6 <AmiBlitz3.ab3@6474>   ADD.l D3,D6
000245D8 <AmiBlitz3.ab3@6475>   MOVE.l D6,(A2)
000245DA <AmiBlitz3.ab3@6476>   SUB.l D3,D6
000245DC <AmiBlitz3.ab3@6479>    ADD.l D3,D6
000245DE <AmiBlitz3.ab3@6480>   MOVE.l A2,D2
000245E0 <AmiBlitz3.ab3@6481>   MOVE.l D7,D1
000245E6 <AmiBlitz3.ab3@6482>   MOVEA.l _dosbase,A6
000245EA <AmiBlitz3.ab3@6483>    JSR _Write(A6)
000245EC <AmiBlitz3.ab3@6484>   MOVE.l (A7)+,(A2)
000245EE <AmiBlitz3.ab3@6485>  RTS
000245F0 <AmiBlitz3.ab3@6488>   MOVE.l D6,D2
000245F4 <AmiBlitz3.ab3@6489> BRA.w addhunkoffset
000245F8 <AmiBlitz3.ab3@6496>     CMPA.w #$0,A2
000245FC <AmiBlitz3.ab3@6497>      BEQ.w 'done
00024602 <AmiBlitz3.ab3@6498>     MOVEA.l newtypebase,A1
00024604 <AmiBlitz3.ab3@6499>     MOVEQ.l #$00,D1
00024608 <AmiBlitz3.ab3@6502>       CMPA.w #$0,A1
0002460C <AmiBlitz3.ab3@6503>       BEQ.w 'found
00024610 <AmiBlitz3.ab3@6504>       CMPA.l $A(A2),A1
00024614 <AmiBlitz3.ab3@6505>        BEQ.w 'found
00024616 <AmiBlitz3.ab3@6506>       ADDQ.w #1,D1
00024618 <AmiBlitz3.ab3@6507>       MOVEA.l (A1),A1
0002461C <AmiBlitz3.ab3@6508>  BRA.w 'loop2
00024620 <AmiBlitz3.ab3@6511>     MOVE.w $A(A2),-(A7)
00024624 <AmiBlitz3.ab3@6512>     MOVE.w D1,$A(A2)
00024628 <AmiBlitz3.ab3@6513>      BSR.w writeitem
0002462C <AmiBlitz3.ab3@6514>     MOVE.w (A7)+,$A(A2)
0002462E <AmiBlitz3.ab3@6515>     MOVEA.l (A2),A2
00024632 <AmiBlitz3.ab3@6516>  BRA.w 'loop
00024634 <AmiBlitz3.ab3@6519> RTS
00024636 <AmiBlitz3.ab3@6523>   MOVEQ.l #$00,D0
0002463A <AmiBlitz3.ab3@6526>   CMPA.w #$0,A2
0002463E <AmiBlitz3.ab3@6527>    BEQ.w 'done
00024640 <AmiBlitz3.ab3@6528>   ADDQ.w #1,D0
00024642 <AmiBlitz3.ab3@6529>   MOVEA.l (A2),A2
00024646 <AmiBlitz3.ab3@6530>  BRA.w 'loop
0002464C <AmiBlitz3.ab3@6533>   MOVE.w D0,temp1
0002464E <AmiBlitz3.ab3@6534>   MOVE.l D7,D1
00024654 <AmiBlitz3.ab3@6535>   MOVE.l #temp1,D2
00024656 <AmiBlitz3.ab3@6536>   MOVEQ.l #$02,D3
00024658 <AmiBlitz3.ab3@6537>   ADDQ.l #2,D6
0002465E <AmiBlitz3.ab3@6538>   MOVEA.l _dosbase,A6
00024662 <AmiBlitz3.ab3@6539> JMP _Write(A6)
00024668 <AmiBlitz3.ab3@6546>    TST.b resdisable
0002466C <AmiBlitz3.ab3@6547>    BEQ 'l1
00024672 <AmiBlitz3.ab3@6548>    MOVE.l currentmacroaddr,a3
00024678 <AmiBlitz3.ab3@6549>    CMP.l #0,a3
0002467C <AmiBlitz3.ab3@6550>    BEQ 'l1
0002467E <AmiBlitz3.ab3@6551>    MOVE.l (a3),a3
00024682 <AmiBlitz3.ab3@6552>  BRA 'l2
00024688 <AmiBlitz3.ab3@6556>   MOVEA.l macrobase,A3                                     ;??begin org code??
0002468A <AmiBlitz3.ab3@6559>   MOVEA.l A3,A2
0002468E <AmiBlitz3.ab3@6560>   BSR.w countem
00024692 <AmiBlitz3.ab3@6563>    CMPA.w #$0,A3
00024696 <AmiBlitz3.ab3@6564>    BEQ.w 'done
00024698 <AmiBlitz3.ab3@6565>   MOVE.l D6,D5
0002469A <AmiBlitz3.ab3@6566>   MOVE.l (A3),-(A7)
0002469E <AmiBlitz3.ab3@6567>   MOVE.l $4(A3),-(A7)
000246A0 <AmiBlitz3.ab3@6568>   MOVEQ.l #$00,D3
000246A4 <AmiBlitz3.ab3@6569>   MOVE.b $C(A3),D3
000246A6 <AmiBlitz3.ab3@6570>   ADDQ.w #1,D3
000246AA <AmiBlitz3.ab3@6571>   BCLR #$0,D3
000246AC <AmiBlitz3.ab3@6572>   ADD.l D3,D6                                              ;add len of struct
000246B0 <AmiBlitz3.ab3@6573>   TST.w $8(A3)
000246B4 <AmiBlitz3.ab3@6574>    BEQ.w 'notext
000246B8 <AmiBlitz3.ab3@6575>   MOVE.l D6,$4(A3)
000246BA <AmiBlitz3.ab3@6576>   MOVE.l D5,D2
000246BC <AmiBlitz3.ab3@6577>   ADDQ.l #4,D2
000246C0 <AmiBlitz3.ab3@6578>    BSR.w addhunkoffset
000246C2 <AmiBlitz3.ab3@6581>   MOVEQ.l #$00,D4
000246C6 <AmiBlitz3.ab3@6582>   MOVE.w $8(A3),D4
000246C8 <AmiBlitz3.ab3@6583>   ADDQ.w #1,D4
000246CC <AmiBlitz3.ab3@6584>   BCLR #$0,D4
000246CE <AmiBlitz3.ab3@6585>   ADD.l D4,D6
000246D0 <AmiBlitz3.ab3@6586>   TST.l (A3)
000246D4 <AmiBlitz3.ab3@6587>    BEQ.w 'nomore
000246D6 <AmiBlitz3.ab3@6588>   MOVE.l D6,(A3)
000246D8 <AmiBlitz3.ab3@6589>   MOVE.l D5,D2
000246DC <AmiBlitz3.ab3@6590>    BSR.w addhunkoffset
000246DE <AmiBlitz3.ab3@6593>   MOVE.l A3,D2
000246E0 <AmiBlitz3.ab3@6594>   MOVE.l D7,D1
000246E6 <AmiBlitz3.ab3@6595>    MOVEA.l _dosbase,A6
000246EA <AmiBlitz3.ab3@6596>    JSR _Write(a6)
000246EC <AmiBlitz3.ab3@6597>   TST.l D4
000246F0 <AmiBlitz3.ab3@6598>    BEQ.w 'skip
000246F2 <AmiBlitz3.ab3@6599>   MOVE.l (A7),D2
000246F4 <AmiBlitz3.ab3@6600>   MOVE.l D4,D3
000246F6 <AmiBlitz3.ab3@6601>   MOVE.l D7,D1
000246FC <AmiBlitz3.ab3@6602>     MOVEA.l _dosbase,A6
00024700 <AmiBlitz3.ab3@6603>    JSR _Write(A6)
00024704 <AmiBlitz3.ab3@6606>   MOVE.l (A7)+,$4(A3)
00024706 <AmiBlitz3.ab3@6607>   MOVE.l (A7)+,(A3)
00024708 <AmiBlitz3.ab3@6608>   MOVEA.l (A3),A3
0002470C <AmiBlitz3.ab3@6609>  BRA.w 'loop
0002470E <AmiBlitz3.ab3@6612> RTS
00024714 <AmiBlitz3.ab3@6617>   TST.b resdisable
00024718 <AmiBlitz3.ab3@6618>   BEQ 'l1
0002471E <AmiBlitz3.ab3@6619>   MOVE.l lastrestype,a3
00024724 <AmiBlitz3.ab3@6620>   CMP.l #0,a3
00024728 <AmiBlitz3.ab3@6621>   BEQ 'l1
0002472A <AmiBlitz3.ab3@6622>   MOVE.l (a3),a3
0002472E <AmiBlitz3.ab3@6623>  BRA 'l2
00024734 <AmiBlitz3.ab3@6627>   MOVEA.l newtype_string,A3
00024736 <AmiBlitz3.ab3@6630>   MOVEA.l A3,A2
0002473A <AmiBlitz3.ab3@6631>    BSR.w countem
0002473E <AmiBlitz3.ab3@6634>    CMPA.w #$0,A3
00024742 <AmiBlitz3.ab3@6635>    BEQ.w 'done
00024744 <AmiBlitz3.ab3@6636>   MOVE.l D6,-(A7)
00024748 <AmiBlitz3.ab3@6637>   MOVEA.l $4(A3),A2
0002474A <AmiBlitz3.ab3@6638>   MOVEQ.l #$0E,D5
0002474E <AmiBlitz3.ab3@6639>    BSR.w writeoffs
00024750 <AmiBlitz3.ab3@6641>   MOVE.l (A7)+,D0
00024754 <AmiBlitz3.ab3@6642>   MOVE.l $4(A3),-(A7)
00024758 <AmiBlitz3.ab3@6643>   MOVE.l D0,$4(A3)
0002475A <AmiBlitz3.ab3@6644>   MOVE.l D6,D2
0002475C <AmiBlitz3.ab3@6645>   ADDQ.l #4,D2
00024760 <AmiBlitz3.ab3@6646>    BSR.w addhunkoffset
00024762 <AmiBlitz3.ab3@6647>   MOVEQ.l #$00,D3
00024766 <AmiBlitz3.ab3@6648>   MOVE.b $A(A3),D3
00024768 <AmiBlitz3.ab3@6649>   ADDQ.w #1,D3
0002476C <AmiBlitz3.ab3@6650>   BCLR #$0,D3
0002476E <AmiBlitz3.ab3@6651>   ADD.l D3,D6
00024770 <AmiBlitz3.ab3@6652>   MOVE.l A3,D2
00024772 <AmiBlitz3.ab3@6653>   MOVE.l D7,D1
00024778 <AmiBlitz3.ab3@6654>     MOVEA.l _dosbase,A6
0002477C <AmiBlitz3.ab3@6655>     JSR _Write(A6)
00024780 <AmiBlitz3.ab3@6656>   MOVE.l (A7)+,$4(A3)
00024782 <AmiBlitz3.ab3@6657>   MOVEA.l (A3),A3
00024786 <AmiBlitz3.ab3@6658>  BRA.w 'loop
00024788 <AmiBlitz3.ab3@6661> RTS
0002478E <AmiBlitz3.ab3@6666>    TST.b resdisable
00024792 <AmiBlitz3.ab3@6667>    BEQ 'l1
00024798 <AmiBlitz3.ab3@6668>    MOVE.l currentlabeladdr,a2
0002479E <AmiBlitz3.ab3@6669>    CMP.l #0,a2
000247A2 <AmiBlitz3.ab3@6670>    BEQ 'l1
000247A4 <AmiBlitz3.ab3@6671>    MOVE.l (a2),a2
000247A8 <AmiBlitz3.ab3@6672>  BRA 'l2
000247AE <AmiBlitz3.ab3@6676>    MOVEA.l labelbase,A2
000247B0 <AmiBlitz3.ab3@6679>    MOVEQ.l #$00,D0
000247B4 <AmiBlitz3.ab3@6682>    CMPA.w #$0,A2
000247B8 <AmiBlitz3.ab3@6683>    BEQ.w 'done
000247C0 <AmiBlitz3.ab3@6684>   CMPI.l #$1,$4(A2)
000247C4 <AmiBlitz3.ab3@6685>    BNE.w 'next
000247C6 <AmiBlitz3.ab3@6686>   ADDQ.w #1,D0
000247C8 <AmiBlitz3.ab3@6689>   MOVEA.l (A2),A2
000247CC <AmiBlitz3.ab3@6690>  BRA.w 'loop
000247D2 <AmiBlitz3.ab3@6693>   MOVE.w D0,temp1
000247D4 <AmiBlitz3.ab3@6694>   MOVE.l D7,D1
000247DA <AmiBlitz3.ab3@6695>   MOVE.l #temp1,D2
000247DC <AmiBlitz3.ab3@6696>   MOVEQ.l #$02,D3
000247DE <AmiBlitz3.ab3@6697>   ADDQ.l #2,D6
000247E4 <AmiBlitz3.ab3@6698>     MOVEA.l _dosbase,A6
000247E8 <AmiBlitz3.ab3@6699>     JSR _Write(A6)
000247EE <AmiBlitz3.ab3@6701>    TST.b resdisable
000247F2 <AmiBlitz3.ab3@6702>    BEQ 'done_l1
000247F8 <AmiBlitz3.ab3@6703>    MOVE.l currentlabeladdr,a2
000247FE <AmiBlitz3.ab3@6704>    CMP.l #0,a2
00024802 <AmiBlitz3.ab3@6705>    BEQ 'done_l1
00024804 <AmiBlitz3.ab3@6706>    MOVE.l (a2),a2
00024808 <AmiBlitz3.ab3@6707>  BRA 'loop2
0002480E <AmiBlitz3.ab3@6711>    MOVEA.l labelbase,A2                                    ;write resident labels
00024812 <AmiBlitz3.ab3@6714>    CMPA.w #$0,A2
00024816 <AmiBlitz3.ab3@6715>    BEQ.w 'done2
0002481E <AmiBlitz3.ab3@6716>   CMPI.l #$1,$4(A2)
00024822 <AmiBlitz3.ab3@6717>    BNE.w 'next2
00024824 <AmiBlitz3.ab3@6718>    MOVEQ.l #$00,D3
00024828 <AmiBlitz3.ab3@6719>   MOVE.b $12(A2),D3                                        ;length
0002482A <AmiBlitz3.ab3@6720>   ADDQ.w #1,D3
0002482E <AmiBlitz3.ab3@6721>   BCLR #$0,D3
00024830 <AmiBlitz3.ab3@6722>   MOVE.l D6,D2
00024832 <AmiBlitz3.ab3@6723>   ADD.l D3,D6
00024834 <AmiBlitz3.ab3@6724>   MOVE.l (A2),-(A7)
00024836 <AmiBlitz3.ab3@6725>   TST.l (A2)
0002483A <AmiBlitz3.ab3@6726>    BEQ.w 'nonext
0002483C <AmiBlitz3.ab3@6727>   MOVE.l D6,(A2)
00024840 <AmiBlitz3.ab3@6728>    BSR.w addhunkoffset
00024842 <AmiBlitz3.ab3@6731>   MOVE.l A2,D2
00024844 <AmiBlitz3.ab3@6732>   MOVE.l D7,D1
0002484A <AmiBlitz3.ab3@6733>     MOVEA.l _dosbase,A6
0002484E <AmiBlitz3.ab3@6734>     JSR _Write(A6)
00024850 <AmiBlitz3.ab3@6735>   MOVE.l (A7)+,(A2)
00024852 <AmiBlitz3.ab3@6738>   MOVEA.l (A2),A2
00024856 <AmiBlitz3.ab3@6739>  BRA.w 'loop2
00024858 <AmiBlitz3.ab3@6742> RTS
00024882 <AmiBlitz3.ab3@6747>    !basic
00024888 <AmiBlitz3.ab3@6748>     MOVE.l ptr_resfile,d0
00024898 <AmiBlitz3.ab3@6749>     resfileP.l = Peek.l(?ptr_resfile)
000248A2 <AmiBlitz3.ab3@6750>     If resfileP
000248CA <AmiBlitz3.ab3@6751>       resfile$ = Peek.s(resfileP)
00024916 <AmiBlitz3.ab3@6752>       tests.b = Instr(resfile$,"/")
00024962 <AmiBlitz3.ab3@6753>       testc.b = Instr(resfile$,":")
00024984 <AmiBlitz3.ab3@6754>       If tests=0 AND testc=0
00024A04 <AmiBlitz3.ab3@6755>         resfile$ = dos_AddPart{my_residentsdir$,resfile$}
00024A16 <AmiBlitz3.ab3@6756>         Poke.l ?ptr_resfile,&resfile$
00024A1C <AmiBlitz3.ab3@6758>     Else
00024A56 <AmiBlitz3.ab3@6759>       error{"INTERNAL: Invalid pointer in ptr_resfile!"}
00024A74 <AmiBlitz3.ab3@6761>    !asm
00024A76 <AmiBlitz3.ab3@6762> RTS
00024A7C <AmiBlitz3.ab3@6769> 
00024A82 <AmiBlitz3.ab3@6770>   MOVE.l A7,errstack
00024A8C <AmiBlitz3.ab3@6774>   MOVE.l #'next,errcont
00024A94 <AmiBlitz3.ab3@6775>   MOVE.w #$FFFF,ezerr         ; was -1
00024A98 <AmiBlitz3.ab3@6777>   BSR.w Aclearallvars
00024A9C <AmiBlitz3.ab3@6778>   BSR.w free_residents
00024AA2 <AmiBlitz3.ab3@6780>   LEA residents_table,A5
00024AA4 <AmiBlitz3.ab3@6781>   MOVEQ.l #$07,D6
00024AA6 <AmiBlitz3.ab3@6784>     TST.b (A5)
00024AAA <AmiBlitz3.ab3@6785>     BEQ.w 'next
00024AB0 <AmiBlitz3.ab3@6786>     MOVE.l A5,ptr_resfile
00024AB4 <AmiBlitz3.ab3@6787>     BSR check_residentpath
00024ABA <AmiBlitz3.ab3@6788>     MOVE.l ptr_resfile,d1
00024AC0 <AmiBlitz3.ab3@6789>     MOVEA.l _dosbase,A6
00024AC4 <AmiBlitz3.ab3@6790>     JSR _LoadSeg(A6)
00024AC8 <AmiBlitz3.ab3@6791>     MOVE.l D0,$40(A5)
00024ACC <AmiBlitz3.ab3@6792>     BNE.w 'yeah
00024AD0 <AmiBlitz3.ab3@6794>     BSR.w reserr
00024AD2 <AmiBlitz3.ab3@6798>     MOVEA.l D0,A3
00024AD4 <AmiBlitz3.ab3@6799>     ADDA.l A3,A3
00024AD6 <AmiBlitz3.ab3@6800>     ADDA.l A3,A3
00024AD8 <AmiBlitz3.ab3@6801>     ADDQ.w #4,A3                                           ;start of res
00024ADC <AmiBlitz3.ab3@6803>     BSR.w fixtypes
00024AE0 <AmiBlitz3.ab3@6804>     BSR.w fixmacs                                        ;add macros to list
00024AE4 <AmiBlitz3.ab3@6805>     BSR.w fixconsts                                        ;read labels
00024AE8 <AmiBlitz3.ab3@6808>     LEA ResidentEntryStep(A5),A5       ;$44
00024AEC <AmiBlitz3.ab3@6809>   DBF D6,'loop
00024AF6 <AmiBlitz3.ab3@6814>   MOVE.l #free_residents,errcont
00024AFC <AmiBlitz3.ab3@6816>   MOVEA.l newtype_string,A3
00024AFE <AmiBlitz3.ab3@6817>   MOVEQ.l #$0B,D7
00024B02 <AmiBlitz3.ab3@6818>   BSR.w checkclash
00024B08 <AmiBlitz3.ab3@6820>   MOVEA.l macrobase,A3
00024B0A <AmiBlitz3.ab3@6821>   MOVEQ.l #$d,D7
00024B0E <AmiBlitz3.ab3@6822>   BSR.w checkclash
00024B14 <AmiBlitz3.ab3@6824>   MOVEA.l firstconst,A3
00024B16 <AmiBlitz3.ab3@6825>   MOVEQ.l #$19,D7
00024B1A <AmiBlitz3.ab3@6826>   BSR.w checkclash
00024B1C <AmiBlitz3.ab3@6829> RTS
00024B1E <AmiBlitz3.ab3@6833>   MOVEA.l A3,A4
00024B22 <AmiBlitz3.ab3@6836>     CMPA.w #$0,A4
00024B26 <AmiBlitz3.ab3@6837>     BEQ.w 'done
00024B2C <AmiBlitz3.ab3@6839>     LEA ptr_parameterstore,A0
00024B30 <AmiBlitz3.ab3@6840>     LEA $0(A4,D7.W),A1
00024B32 <AmiBlitz3.ab3@6841>     MOVEQ.l #-$01,D2
00024B34 <AmiBlitz3.ab3@6844>       ADDQ.w #1,D2
00024B36 <AmiBlitz3.ab3@6845>       MOVE.b (A1)+,(A0)+
00024B3A <AmiBlitz3.ab3@6846>     BNE.w 'loop2
00024B3C <AmiBlitz3.ab3@6847>     MOVEA.l A3,A2
00024B40 <AmiBlitz3.ab3@6850>     BSR.w findlab
00024B44 <AmiBlitz3.ab3@6851>     BNE.w 'next                                  ;not found
00024B46 <AmiBlitz3.ab3@6852>     CMPA.l A2,A4
00024B4A <AmiBlitz3.ab3@6854>     BEQ.w 'l1
00024B4C <AmiBlitz3.ab3@6855>     MOVE.l a1,a5
00024B50 <AmiBlitz3.ab3@6857>  BRA clasherr      ; was bne
00024B54 <AmiBlitz3.ab3@6860>  BRA.w 'more
00024B56 <AmiBlitz3.ab3@6863>     MOVEA.l (A4),A4
00024B5A <AmiBlitz3.ab3@6864>  BRA.w 'loop
00024B5C <AmiBlitz3.ab3@6867> RTS
00024B62 <AmiBlitz3.ab3@6871>   MOVEA.l _dosbase,A6
00024B68 <AmiBlitz3.ab3@6873>   LEA newtype_string,A0
00024B6E <AmiBlitz3.ab3@6874>   MOVE.l A0,lastrestype
00024B70 <AmiBlitz3.ab3@6875>   CLR.l (A0)
00024B76 <AmiBlitz3.ab3@6877>   LEA macrobase,A0
00024B7C <AmiBlitz3.ab3@6878>   MOVE.l A0,currentmacroaddr
00024B7E <AmiBlitz3.ab3@6879>   CLR.l (A0)
00024B84 <AmiBlitz3.ab3@6881>   LEA labelbase,A0
00024B8A <AmiBlitz3.ab3@6882>   MOVE.l A0,currentlabeladdr
00024B8C <AmiBlitz3.ab3@6883>   CLR.l (A0)
00024B92 <AmiBlitz3.ab3@6884>   CLR.w rescnt
00024BCA <AmiBlitz3.ab3@6888>   !ComData_SetB{comByte_DebugMode,debugmode}
00024BD0 <AmiBlitz3.ab3@6891>   LEA residents_table,A2
00024BD2 <AmiBlitz3.ab3@6892>   MOVEQ.l #$07,D2
00024BD6 <AmiBlitz3.ab3@6895>      MOVE.l $40(A2),D1
00024BDA <AmiBlitz3.ab3@6896>      BEQ.w 'next
00024BDE <AmiBlitz3.ab3@6897>       CLR.l $40(A2)
00024BE4 <AmiBlitz3.ab3@6898>       MOVEA.l _dosbase,A6
00024BE8 <AmiBlitz3.ab3@6899>       JSR _UnLoadSeg(A6)
00024BEC <AmiBlitz3.ab3@6902>      LEA ResidentEntryStep(A2),A2   ; $44
00024BF0 <AmiBlitz3.ab3@6903>  DBF D2,'loop
00024BF2 <AmiBlitz3.ab3@6905> RTS
00024BF4 <AmiBlitz3.ab3@6909>   MOVE.w (A3)+,D1
00024BF8 <AmiBlitz3.ab3@6910>   BEQ.w 'done
00024BFE <AmiBlitz3.ab3@6911>   MOVEA.l currentlabeladdr,A2
00024C00 <AmiBlitz3.ab3@6912>   MOVE.l A3,(A2)
00024C02 <AmiBlitz3.ab3@6913>   SUBQ.w #1,D1
00024C04 <AmiBlitz3.ab3@6916>     MOVEA.l A3,A2
00024C06 <AmiBlitz3.ab3@6917>     MOVEA.l (A3),A3
00024C0A <AmiBlitz3.ab3@6918>   DBF D1,'loop
00024C0C <AmiBlitz3.ab3@6921>   CLR.l (a2)                                               ;bugfix for object
00024C12 <AmiBlitz3.ab3@6923>   MOVE.l A2,currentlabeladdr
00024C14 <AmiBlitz3.ab3@6924>   MOVEA.l A2,A3
00024C16 <AmiBlitz3.ab3@6925>   MOVEQ.l #$00,D0
00024C1A <AmiBlitz3.ab3@6926>   MOVE.b $12(A3),D0
00024C1C <AmiBlitz3.ab3@6927>   ADDQ.w #1,D0
00024C20 <AmiBlitz3.ab3@6928>   BCLR #$0,D0
00024C22 <AmiBlitz3.ab3@6929>   ADDA.w D0,A3
00024C24 <AmiBlitz3.ab3@6932> RTS
00024C26 <AmiBlitz3.ab3@6936>   MOVE.w (A3)+,D1
00024C2A <AmiBlitz3.ab3@6937>   BEQ.w 'done
00024C30 <AmiBlitz3.ab3@6938>   MOVEA.l currentmacroaddr,A2
00024C32 <AmiBlitz3.ab3@6939>   MOVE.l A3,(A2)
00024C34 <AmiBlitz3.ab3@6940>   SUBQ.w #1,D1
00024C36 <AmiBlitz3.ab3@6943>     MOVEA.l A3,A2
00024C38 <AmiBlitz3.ab3@6944>     MOVEA.l (A3),A3
00024C3C <AmiBlitz3.ab3@6945>   DBF D1,'loop
00024C42 <AmiBlitz3.ab3@6947>   MOVE.l A2,currentmacroaddr
00024C44 <AmiBlitz3.ab3@6948>   MOVEA.l A2,A3
00024C46 <AmiBlitz3.ab3@6949>   MOVEQ.l #$00,D0
00024C4A <AmiBlitz3.ab3@6950>   MOVE.b $C(A3),D0
00024C4C <AmiBlitz3.ab3@6951>   ADDQ.w #1,D0
00024C50 <AmiBlitz3.ab3@6952>   BCLR #$0,D0
00024C54 <AmiBlitz3.ab3@6953>   MOVE.w $8(A3),D1
00024C56 <AmiBlitz3.ab3@6954>   ADDQ.w #1,D1
00024C5A <AmiBlitz3.ab3@6955>   BCLR #$0,D1
00024C5C <AmiBlitz3.ab3@6956>   ADDA.w D0,A3
00024C5E <AmiBlitz3.ab3@6957>   ADDA.w D1,A3
00024C60 <AmiBlitz3.ab3@6960> RTS
00024C62 <AmiBlitz3.ab3@6965>   MOVE.w (A3)+,D1            ;number of types to do
00024C66 <AmiBlitz3.ab3@6966>   BEQ.w 'done
00024C68 <AmiBlitz3.ab3@6967>   MOVE.w D1,-(A7)
00024C6A <AmiBlitz3.ab3@6968>   SUBQ.w #1,D1
00024C70 <AmiBlitz3.ab3@6969>   MOVEA.l lastrestype,A2
00024C72 <AmiBlitz3.ab3@6970>   MOVE.l A2,-(A7)
00024C74 <AmiBlitz3.ab3@6973>       MOVE.l (A3),D0          ;skip through offsets
00024C78 <AmiBlitz3.ab3@6974>       BEQ.w 'loopme
00024C7A <AmiBlitz3.ab3@6975>       MOVEA.l D0,A3
00024C7E <AmiBlitz3.ab3@6976>  BRA.w 'loop
00024C82 <AmiBlitz3.ab3@6979>       MOVE.b $E(A3),D0
00024C84 <AmiBlitz3.ab3@6980>       ADDQ.w #1,D0
00024C88 <AmiBlitz3.ab3@6981>       BCLR #$0,D0
00024C8A <AmiBlitz3.ab3@6982>       ADDA.w D0,A3            ;a3=type
00024C8C <AmiBlitz3.ab3@6983>       MOVE.l A3,(A2)          ;link
00024C8E <AmiBlitz3.ab3@6984>       MOVEA.l A3,A2
00024C90 <AmiBlitz3.ab3@6985>       MOVEQ.l #$00,D0
00024C94 <AmiBlitz3.ab3@6986>       MOVE.b $A(A3),D0
00024C96 <AmiBlitz3.ab3@6987>       ADDQ.w #1,D0
00024C9A <AmiBlitz3.ab3@6988>       BCLR #$0,D0
00024C9C <AmiBlitz3.ab3@6989>       ADDA.w D0,A3            ;next offset
00024CA0 <AmiBlitz3.ab3@6990>   DBF D1,'loop
00024CA2 <AmiBlitz3.ab3@6994>   MOVEA.l (A7)+,A0
00024CA4 <AmiBlitz3.ab3@6995>   MOVEA.l (A0),A0
00024CA8 <AmiBlitz3.ab3@6998>     CMPA.w #$0,A0
00024CAC <AmiBlitz3.ab3@6999>     BEQ.w 'fdone
00024CB0 <AmiBlitz3.ab3@7000>     MOVEA.l $4(A0),A1          ;first offset!
00024CB4 <AmiBlitz3.ab3@7003>     CMPA.w #$0,A1
00024CB8 <AmiBlitz3.ab3@7004>     BEQ.w 'fofd
00024CBC <AmiBlitz3.ab3@7006>     MOVE.w $A(A1),D0           ;number of type
00024CC2 <AmiBlitz3.ab3@7007>     MOVEA.l newtypebase,A4
00024CC6 <AmiBlitz3.ab3@7008>     CMP.w #$7,D0
00024CCA <AmiBlitz3.ab3@7009>     BCS.w 'fsys
00024CD0 <AmiBlitz3.ab3@7010>     SUB.w rescnt,D0
00024CD2 <AmiBlitz3.ab3@7013>     SUBQ.w #1,D0
00024CD6 <AmiBlitz3.ab3@7014>     BMI.w 'fdone2
00024CD8 <AmiBlitz3.ab3@7017>        MOVEA.l (A4),A4
00024CDC <AmiBlitz3.ab3@7018>   DBF D0,'floop3
00024CE0 <AmiBlitz3.ab3@7021>     MOVE.l A4,$A(A1)
00024CE2 <AmiBlitz3.ab3@7022>     MOVEA.l (A1),A1
00024CE6 <AmiBlitz3.ab3@7023>  BRA.w 'floop2
00024CE8 <AmiBlitz3.ab3@7026>     MOVEA.l (A0),A0
00024CEC <AmiBlitz3.ab3@7027>  BRA.w 'floop
00024CEE <AmiBlitz3.ab3@7030>   MOVE.w (A7)+,D0
00024CF4 <AmiBlitz3.ab3@7031>   ADD.w D0,rescnt
00024CFA <AmiBlitz3.ab3@7032>   MOVE.l A2,lastrestype
00024CFC <AmiBlitz3.ab3@7035> RTS
00024D02 <AmiBlitz3.ab3@7042>   LEA tokens,A0
00024D06 <AmiBlitz3.ab3@7043>   MOVE.w #$003A,D0                                         ; $003A : 58 dec
00024D08 <AmiBlitz3.ab3@7046>     MOVEA.l (A0),A0
00024D0C <AmiBlitz3.ab3@7047>   DBF D0,'loop
00024D12 <AmiBlitz3.ab3@7049>   MOVEA.l #asmpnts,A1                                      ;create tokentab
00024D16 <AmiBlitz3.ab3@7050>   MOVE.w #$0076,D0        ; was #tnum-fnum-1,                                 ; $0076 : 118 dec
00024D1A <AmiBlitz3.ab3@7053>       LEA $6(A0),A2
00024D1C <AmiBlitz3.ab3@7056>         TST.b (A2)+
00024D20 <AmiBlitz3.ab3@7057>       BNE.w 'loop3
00024D22 <AmiBlitz3.ab3@7060>         TST.b (A2)+
00024D26 <AmiBlitz3.ab3@7061>       BNE.w 'loop4
00024D28 <AmiBlitz3.ab3@7063>       ADDQ.w #1,A2
00024D2A <AmiBlitz3.ab3@7064>       EXG.l D1,A2
00024D2E <AmiBlitz3.ab3@7065>       BCLR #$0,D1
00024D30 <AmiBlitz3.ab3@7066>       EXG.l D1,A2
00024D32 <AmiBlitz3.ab3@7067>       MOVE.l A2,(A1)+
00024D34 <AmiBlitz3.ab3@7068>       MOVEA.l (A0),A0
00024D38 <AmiBlitz3.ab3@7069>   DBF D0,'loop2
00024D3A <AmiBlitz3.ab3@7070> RTS
00024D3E <AmiBlitz3.ab3@7074>   BSR.w asmconst
00024D40 <AmiBlitz3.ab3@7075>   MOVEQ.l #$0B,D5
00024D42 <AmiBlitz3.ab3@7076> RTS
00024D44 <AmiBlitz3.ab3@7079> unmove:  Ds.w 1
00024D48 <AmiBlitz3.ab3@7083>   MOVE.w #$48E7,D1
00024D4C <AmiBlitz3.ab3@7084>   BSR.w writeword                                          ;movem.l -(a7)
00024D50 <AmiBlitz3.ab3@7085>   MOVE.w #$000F,D2
00024D52 <AmiBlitz3.ab3@7086>   SUB.w D4,D2
00024D54 <AmiBlitz3.ab3@7087>   MOVEQ.l #-$01,D1
00024D56 <AmiBlitz3.ab3@7088>   BCLR D2,D1
00024D5A <AmiBlitz3.ab3@7089>   BSR.w writeword
00024D5C <AmiBlitz3.ab3@7090>   MOVEQ.l #-$01,D1
00024D5E <AmiBlitz3.ab3@7091>   BCLR D4,D1
00024D64 <AmiBlitz3.ab3@7092>   MOVE.w D1,unmove
00024D66 <AmiBlitz3.ab3@7093> RTS
00024D6A <AmiBlitz3.ab3@7097>   MOVE.w #$4CDF,D1
00024D6E <AmiBlitz3.ab3@7098>   BSR.w writeword
00024D72 <AmiBlitz3.ab3@7099>   MOVE.w unmove(PC),D1
00024D76 <AmiBlitz3.ab3@7100>  BRA.w writeword
00024D7A <AmiBlitz3.ab3@7113>   BSR.w get_reg2
00024D7E <AmiBlitz3.ab3@7114>   CMP.w #$2C,D0                                            ;#','
00024D82 <AmiBlitz3.ab3@7115>    BNE.w syntaxerr
00024D88 <AmiBlitz3.ab3@7116>   MOVE.l #$48E7FFFE,D1                                     ;movem to stack
00024D8C <AmiBlitz3.ab3@7117>    BSR.w writelong
00024D8E <AmiBlitz3.ab3@7118>   MOVE.w D4,D1
00024D92 <AmiBlitz3.ab3@7119>   ORI.w #$2F00,D1
00024D96 <AmiBlitz3.ab3@7120>    BSR.w writeword
00024D9A <AmiBlitz3.ab3@7122>    BSR.w get1bytemain
00024D9E <AmiBlitz3.ab3@7123>    BSR.w getparameter
00024DA2 <AmiBlitz3.ab3@7124>    BSR.w fetchvars
00024DA6 <AmiBlitz3.ab3@7125>    BSR.w calcvar
00024DAA <AmiBlitz3.ab3@7126>    BTST #$E,D2
00024DAE <AmiBlitz3.ab3@7127>    BEQ.w 'notp
00024DB2 <AmiBlitz3.ab3@7130>    MOVE.b #$3,D2
00024DB6 <AmiBlitz3.ab3@7131>  BRA.w 'pd
00024DB8 <AmiBlitz3.ab3@7134>   TST.b D2
00024DBC <AmiBlitz3.ab3@7135>    BEQ.w 'issa
00024DC0 <AmiBlitz3.ab3@7136>   CMP.b #$7,D2
00024DC4 <AmiBlitz3.ab3@7137>    BEQ.w 'issa
00024DC8 <AmiBlitz3.ab3@7140>   BTST #$F,D2
00024DCC <AmiBlitz3.ab3@7141>    BNE.w 'nsimp
00024DD0 <AmiBlitz3.ab3@7142>   MOVE.w #$45ED,D1                                         ;lea x(a5),a2
00024DD4 <AmiBlitz3.ab3@7143>    BSR.w writeword
00024DD6 <AmiBlitz3.ab3@7144>   MOVE.w D3,D1
00024DDA <AmiBlitz3.ab3@7145>    BSR.w writeword
00024DDE <AmiBlitz3.ab3@7148>   MOVE.w #$201F,D1                                         ;move.l (a7)+,d0
00024DE2 <AmiBlitz3.ab3@7149>    BSR.w writeword
00024DE6 <AmiBlitz3.ab3@7150>   MOVE.w #$1480,D1
00024DEA <AmiBlitz3.ab3@7151>   CMP.b #$1,D2
00024DEE <AmiBlitz3.ab3@7152>    BEQ.w 'pg
00024DF2 <AmiBlitz3.ab3@7153>   EORI.w #$3000,D1
00024DF6 <AmiBlitz3.ab3@7154>   CMP.b #$2,D2
00024DFA <AmiBlitz3.ab3@7155>    BNE.w 'pg
00024DFE <AmiBlitz3.ab3@7156>   ORI.w #$1000,D1
00024E02 <AmiBlitz3.ab3@7159>   BSR.w writeword
00024E08 <AmiBlitz3.ab3@7160>   MOVE.l #$4CDF7FFF,D1
00024E0C <AmiBlitz3.ab3@7161> BRA.w writelong
00024E10 <AmiBlitz3.ab3@7165>   BSR.w get_reg2
00024E14 <AmiBlitz3.ab3@7166>   CMP.w #$2C,D0     ;','
00024E18 <AmiBlitz3.ab3@7167>    BNE.w syntaxerr
00024E1C <AmiBlitz3.ab3@7168>    BSR.w regmovems
00024E1E <AmiBlitz3.ab3@7169>   MOVE.w D4,-(A7)
00024E20 <AmiBlitz3.ab3@7170>   MOVEQ.l #$03,D2   ;get a long
00024E24 <AmiBlitz3.ab3@7171>    BSR.w eval
00024E26 <AmiBlitz3.ab3@7172>   MOVE.w (A7)+,D1
00024E2A <AmiBlitz3.ab3@7173>    BEQ.w 'done
00024E2E <AmiBlitz3.ab3@7174>   CMP.w #$8,D1
00024E32 <AmiBlitz3.ab3@7175>    BCC.w 'addreg
00024E34 <AmiBlitz3.ab3@7176>   LSL.w #8,D1
00024E36 <AmiBlitz3.ab3@7177>   LSL.w #1,D1
00024E3A <AmiBlitz3.ab3@7178>   ORI.w #$2000,D1
00024E3E <AmiBlitz3.ab3@7179>    BSR.w writeword
00024E42 <AmiBlitz3.ab3@7180>  BRA.w 'done
00024E44 <AmiBlitz3.ab3@7183>   SUBQ.w #8,D1
00024E46 <AmiBlitz3.ab3@7184>   LSL.w #8,D1
00024E48 <AmiBlitz3.ab3@7185>   LSL.w #1,D1
00024E4C <AmiBlitz3.ab3@7186>   ORI.w #$2040,D1
00024E50 <AmiBlitz3.ab3@7187>   BSR.w writeword
00024E54 <AmiBlitz3.ab3@7190> BRA.w dounmove
00024E58 <AmiBlitz3.ab3@7195>   BSR.w get1bytemain
00024E5C <AmiBlitz3.ab3@7198>   ORI.w #$20,D0
00024E60 <AmiBlitz3.ab3@7199>   CMP.w #$64,D0       ;'d'
00024E64 <AmiBlitz3.ab3@7200>    BEQ.w getan3
00024E68 <AmiBlitz3.ab3@7201>   CMP.w #$61,D0       ;'a'
00024E6C <AmiBlitz3.ab3@7202>    BNE.w syntaxerr
00024E70 <AmiBlitz3.ab3@7203>    BSR.w getan3
00024E72 <AmiBlitz3.ab3@7204>   ADDQ.w #8,D4
00024E74 <AmiBlitz3.ab3@7205> RTS
00024EA0 <AmiBlitz3.ab3@7210>   !fget                                                   ;bsr.w get1bytemain
00024EA4 <AmiBlitz3.ab3@7212>   ORI.w #$20,D0
00024EA8 <AmiBlitz3.ab3@7215>   CMP.w #$61,D0     ;'a'
00024EAC <AmiBlitz3.ab3@7216>   BNE.w syntaxerr
00024ED8 <AmiBlitz3.ab3@7220>   !fget                                                    ;bsr.w get1bytemain
00024EDC <AmiBlitz3.ab3@7222>   SUBI.w #$30,D0
00024EE0 <AmiBlitz3.ab3@7223>    BMI.w syntaxerr
00024EE4 <AmiBlitz3.ab3@7224>   CMP.w #$7,D0
00024EE8 <AmiBlitz3.ab3@7225>    BHI.w syntaxerr
00024EEA <AmiBlitz3.ab3@7226>   MOVE.w D0,D4
00024F16 <AmiBlitz3.ab3@7228>   !fget
00024F18 <AmiBlitz3.ab3@7230> RTS                                                        ;bra.w get1bytemain
00024F1A <AmiBlitz3.ab3@7234>   ADDQ.w #8,D4
00024F1C <AmiBlitz3.ab3@7237>   MOVEQ.l #$00,D5    ;bits for reg
00024F20 <AmiBlitz3.ab3@7238>   SUBI.w #$30,D4
00024F24 <AmiBlitz3.ab3@7241>   CMP.w #$2D,D0      ;'-'
00024F28 <AmiBlitz3.ab3@7242>    BEQ.w 'range
00024F2C <AmiBlitz3.ab3@7243>   CMP.w #$2F,D0      ;'/'
00024F30 <AmiBlitz3.ab3@7244>    BEQ.w 'one
00024F34 <AmiBlitz3.ab3@7245>  BRA.w syntaxerr
00024F36 <AmiBlitz3.ab3@7248>   BSET D4,D5
00024F38 <AmiBlitz3.ab3@7251>   MOVE.w D5,D4
00024F3A <AmiBlitz3.ab3@7252>   MOVEQ.l #$0F,D5
00024F3C <AmiBlitz3.ab3@7253>  RTS
00024F3E <AmiBlitz3.ab3@7256>   BSET D4,D5
00024F42 <AmiBlitz3.ab3@7257>   BSR.w get_reg
00024F54 <AmiBlitz3.ab3@7259>   !compare3                                                ;bsr.w tstend2
00024F58 <AmiBlitz3.ab3@7261>   BNE.w 'loop
00024F5C <AmiBlitz3.ab3@7262>  BRA.w 'done2
00024F5E <AmiBlitz3.ab3@7265>   MOVE.w D4,D1    ;from
00024F62 <AmiBlitz3.ab3@7266>    BSR.w get_reg
00024F64 <AmiBlitz3.ab3@7267>   CMP.w D4,D1
00024F68 <AmiBlitz3.ab3@7268>    BLS.w 'loop2
00024F6A <AmiBlitz3.ab3@7269>   EXG.l D4,D1
00024F6C <AmiBlitz3.ab3@7272>   BSET D1,D5
00024F6E <AmiBlitz3.ab3@7273>   ADDQ.w #1,D1
00024F70 <AmiBlitz3.ab3@7274>   CMP.w D4,D1
00024F74 <AmiBlitz3.ab3@7275>    BLS.w 'loop2
00024F86 <AmiBlitz3.ab3@7277>   !compare3                                                ;bsr.w tstend2
00024F8A <AmiBlitz3.ab3@7279>   BNE.w 'loop
00024F8E <AmiBlitz3.ab3@7280> BRA.w 'done
00024F90 <AmiBlitz3.ab3@7286>   MOVEA.l A5,A4                                            ;bsr.w get1bytemain
00024FBC <AmiBlitz3.ab3@7288>    !fget
00024FC0 <AmiBlitz3.ab3@7290>   CMP.w #$23,D0       ;'#'
00024FC4 <AmiBlitz3.ab3@7291>    BEQ.w getimm
00024FC8 <AmiBlitz3.ab3@7292>   CMP.w #$28,D0       ;'('
00024FCC <AmiBlitz3.ab3@7293>    BEQ.w 'ind
00024FD0 <AmiBlitz3.ab3@7294>   CMP.w #$2D,D0       ;'-'
00024FD4 <AmiBlitz3.ab3@7295>    BNE.w 'more
00025000 <AmiBlitz3.ab3@7297>    !fget                                                   ;bsr.w get1bytemain       -(
00025004 <AmiBlitz3.ab3@7299>   CMP.w #$28,D0       ;'('
00025008 <AmiBlitz3.ab3@7300>    BNE.w 'notccr
0002500C <AmiBlitz3.ab3@7301>    BSR.w getan
00025010 <AmiBlitz3.ab3@7302>   CMP.w #$29,D0       ;')'
00025014 <AmiBlitz3.ab3@7303>    BNE.w syntaxerr
00025016 <AmiBlitz3.ab3@7304>   MOVEQ.l #$04,D5
00025042 <AmiBlitz3.ab3@7306>   !fget                                                    ;bsr.w get1bytemain  
00025044 <AmiBlitz3.ab3@7307>  RTS
00025048 <AmiBlitz3.ab3@7311>   BSR.w getan
0002504C <AmiBlitz3.ab3@7312>   CMP.w #$29,D0      ;')'
00025050 <AmiBlitz3.ab3@7313>    BNE.w syntaxerr
0002507C <AmiBlitz3.ab3@7315>   !fget
00025080 <AmiBlitz3.ab3@7317>   CMP.w #$2B,D0      ;'+'
00025084 <AmiBlitz3.ab3@7318>    BEQ.w 'postinc
00025086 <AmiBlitz3.ab3@7319>   MOVEQ.l #$02,D5
00025088 <AmiBlitz3.ab3@7320>  RTS
0002508A <AmiBlitz3.ab3@7323>   MOVEQ.l #$03,D5
000250B6 <AmiBlitz3.ab3@7325>   !fget                                                    ;bra.w get1bytemain
000250B8 <AmiBlitz3.ab3@7326>  RTS
000250BC <AmiBlitz3.ab3@7330>   ORI.w #$20,D0
000250BE <AmiBlitz3.ab3@7331>   MOVE.w D0,D1      ;first
000250EA <AmiBlitz3.ab3@7333>    !fget                                                   ;bsr.w get1bytemain  ;get second
000250EE <AmiBlitz3.ab3@7335>   CMP.w #$64,D1     ;'d'
000250F2 <AmiBlitz3.ab3@7336>    BNE.w 'notdn
000250F6 <AmiBlitz3.ab3@7337>   CMP.w #$30,D0     ;'0'
000250FA <AmiBlitz3.ab3@7338>    BCS.w 'notan
000250FE <AmiBlitz3.ab3@7339>   CMP.w #$37,D0     ;'7'
00025102 <AmiBlitz3.ab3@7340>    BHI.w 'notan
00025104 <AmiBlitz3.ab3@7341>   MOVE.w D0,D4
00025130 <AmiBlitz3.ab3@7343>    !fget                                                   ;bsr.w get1bytemain
00025142 <AmiBlitz3.ab3@7344>    !compare3                                               ;bsr.w tstend2
00025146 <AmiBlitz3.ab3@7346>    BEQ.w 'dn
0002514A <AmiBlitz3.ab3@7347>   CMP.w #$2D,D0     ;'-'
0002514E <AmiBlitz3.ab3@7348>    BEQ.w getmovem
00025152 <AmiBlitz3.ab3@7349>   CMP.w #$2F,D0     ;'/'
00025156 <AmiBlitz3.ab3@7350>    BEQ.w getmovem
0002515A <AmiBlitz3.ab3@7351>  BRA.w 'notan2
0002515C <AmiBlitz3.ab3@7354>   MOVEQ.l #$00,D5
00025160 <AmiBlitz3.ab3@7355>   SUBI.w #$30,D4
00025162 <AmiBlitz3.ab3@7356>  RTS
00025166 <AmiBlitz3.ab3@7359>    CMP.w #$61,D1    ;'a'
0002516A <AmiBlitz3.ab3@7360>    BNE.w 'notan
0002516E <AmiBlitz3.ab3@7362>   CMP.w #$30,D0     ;'0'
00025172 <AmiBlitz3.ab3@7363>    BCS.w 'notan
00025176 <AmiBlitz3.ab3@7364>   CMP.w #$37,D0     ;'7'
0002517A <AmiBlitz3.ab3@7365>    BHI.w 'notan
0002517C <AmiBlitz3.ab3@7366>   MOVE.w D0,D4
000251A8 <AmiBlitz3.ab3@7368>    !fget                                                   ;bsr.w get1bytemain
000251BA <AmiBlitz3.ab3@7369>    !compare3                                               ;bsr.w tstend2
000251BE <AmiBlitz3.ab3@7371>    BEQ.w 'an
000251C2 <AmiBlitz3.ab3@7372>   CMP.w #$2D,D0     ;'-'
000251C6 <AmiBlitz3.ab3@7373>    BEQ.w getmovem2                                         ;movem
000251CA <AmiBlitz3.ab3@7374>   CMP.w #$2F,D0     ;'/'
000251CE <AmiBlitz3.ab3@7375>    BEQ.w getmovem2
000251D2 <AmiBlitz3.ab3@7376>  BRA.w 'notan2
000251D4 <AmiBlitz3.ab3@7382>   MOVEQ.l #1,d5
000251D8 <AmiBlitz3.ab3@7383>   SUBI.w #$30,D4
000251DC <AmiBlitz3.ab3@7385>   BRA 'l10
000251DE <AmiBlitz3.ab3@7386>   ADDQ.w #8,d4                             ; ??? looks like dead code ???
000251E0 <AmiBlitz3.ab3@7387>   MOVEQ #0,d5                              ;   "
000251E2 <AmiBlitz3.ab3@7388>   BSET d4,d5                               ;   "
000251E4 <AmiBlitz3.ab3@7389>   MOVE.w d5,d4                             ;   "
000251E6 <AmiBlitz3.ab3@7390>   MOVEQ.l #$0f,D5                          ;   "             ;01
000251E8 <AmiBlitz3.ab3@7394>  RTS
000251EC <AmiBlitz3.ab3@7397>   ORI.w #$20,D0
000251EE <AmiBlitz3.ab3@7398>   MOVE.w D0,D4
0002521A <AmiBlitz3.ab3@7399>    !fget                                                   ;bsr.w get1bytemain ;get third
0002522C <AmiBlitz3.ab3@7404>   !compare3                                                ;bsr.w tstend2
00025230 <AmiBlitz3.ab3@7406>    BNE.w 'notsx
00025234 <AmiBlitz3.ab3@7407>   CMP.w #$73,D1       ;'s'
00025238 <AmiBlitz3.ab3@7408>    BNE.w 'notsx
0002523C <AmiBlitz3.ab3@7409>   CMP.w #$70,D4       ;'p'
00025240 <AmiBlitz3.ab3@7410>    BNE.w 'notsp
00025252 <AmiBlitz3.ab3@7412>    !compare3                                               ;bsr.w tstend2
00025256 <AmiBlitz3.ab3@7414>    BNE.w 'notccr
00025258 <AmiBlitz3.ab3@7418>   MOVEQ.l #$07,D4
0002525A <AmiBlitz3.ab3@7419>   MOVEQ.l #$01,D5
0002525C <AmiBlitz3.ab3@7420>  RTS
00025260 <AmiBlitz3.ab3@7423>   CMP.w #$72,D4      ;'r'
00025264 <AmiBlitz3.ab3@7424>    BNE.w 'notccr
00025276 <AmiBlitz3.ab3@7426>    !compare3                                               ;bsr.w tstend2
0002527A <AmiBlitz3.ab3@7428>    BNE.w 'notccr
0002527C <AmiBlitz3.ab3@7429>   MOVEQ.l #$0D,D5
0002527E <AmiBlitz3.ab3@7430>  RTS
00025282 <AmiBlitz3.ab3@7433>   ORI.w #$20,D0
00025286 <AmiBlitz3.ab3@7434>   CMP.w #$63,D1      ;'c'
0002528A <AmiBlitz3.ab3@7435>    BNE.w 'notccr0
0002528E <AmiBlitz3.ab3@7436>   CMP.w #$63,D4      ;'c'
00025292 <AmiBlitz3.ab3@7437>    BNE.w 'notccr
00025296 <AmiBlitz3.ab3@7438>   CMP.w #$72,D0      ;'r'
0002529A <AmiBlitz3.ab3@7439>    BNE.w 'notccr
0002529E <AmiBlitz3.ab3@7440>    BSR.w get1bytemain                                      ;??wy not !fget
000252A2 <AmiBlitz3.ab3@7441>    BEQ.w 'ccr
000252A6 <AmiBlitz3.ab3@7442>   CMP.w #$2C,D0
000252AA <AmiBlitz3.ab3@7443>    BNE.w 'notccr
000252AC <AmiBlitz3.ab3@7449>   MOVEQ.l #$0C,D5
000252AE <AmiBlitz3.ab3@7450>  RTS
000252B2 <AmiBlitz3.ab3@7453>   CMP.w #$75,D1      ;'u'
000252B6 <AmiBlitz3.ab3@7454>    BNE.w 'notccr
000252BA <AmiBlitz3.ab3@7455>   CMP.w #$73,D4      ;'s'
000252BE <AmiBlitz3.ab3@7456>    BNE.w 'notccr
000252C2 <AmiBlitz3.ab3@7457>   CMP.w #$70,D0      ;'p'
000252C6 <AmiBlitz3.ab3@7458>    BNE.w 'notccr
000252CA <AmiBlitz3.ab3@7459>    BSR.w get1bytemain                                      ;??wy not !fget
000252CE <AmiBlitz3.ab3@7460>    BEQ.w 'usp
000252D2 <AmiBlitz3.ab3@7461>   CMP.w #$2C,D0      ;','
000252D6 <AmiBlitz3.ab3@7462>    BNE.w 'notccr
000252D8 <AmiBlitz3.ab3@7465>   MOVEQ.l #$0E,D5
000252DA <AmiBlitz3.ab3@7466>  RTS
000252DC <AmiBlitz3.ab3@7472>   MOVEA.l A4,A5
000252E0 <AmiBlitz3.ab3@7473>    BSR.w asmconst
000252F2 <AmiBlitz3.ab3@7476>    !compare3                                               ;bsr.w tstend2
000252F6 <AmiBlitz3.ab3@7478>    BEQ.w 'abs1
000252FA <AmiBlitz3.ab3@7479>   CMP.w #$2E,D0      ;'.'
000252FE <AmiBlitz3.ab3@7480>    BEQ.w 'absx
00025302 <AmiBlitz3.ab3@7481>   CMP.w #$28,D0      ;'('
00025306 <AmiBlitz3.ab3@7482>    BNE.w syntaxerr
0002530A <AmiBlitz3.ab3@7483>    BSR.w get1bytemain                                      ;??wy not !fget
0002530E <AmiBlitz3.ab3@7484>   ORI.w #$20,D0
00025312 <AmiBlitz3.ab3@7485>   CMP.w #$70,D0      ;'p'
00025316 <AmiBlitz3.ab3@7486>    BNE.w 'notpcrel
0002531A <AmiBlitz3.ab3@7487>    BSR.w get1bytemain                                      ;??wy not !fget
0002531E <AmiBlitz3.ab3@7488>   ORI.w #$20,D0
00025322 <AmiBlitz3.ab3@7489>   CMP.w #$63,D0      ;'c'
00025326 <AmiBlitz3.ab3@7490>    BNE.w syntaxerr
0002532A <AmiBlitz3.ab3@7491>    BSR.w get1bytemain                                      ;??wy not !fget
0002532E <AmiBlitz3.ab3@7492>    BSR.w getrest
00025330 <AmiBlitz3.ab3@7493>   ADDQ.w #4,D5
00025332 <AmiBlitz3.ab3@7494>  RTS
00025336 <AmiBlitz3.ab3@7497>   BSR.w getan2
0002533A <AmiBlitz3.ab3@7498>  BRA.w getrest
0002533E <AmiBlitz3.ab3@7501>    BSR.w get1bytemain                                     ;??wy not !fget
00025342 <AmiBlitz3.ab3@7502>   ORI.w #$20,D0
00025346 <AmiBlitz3.ab3@7503>   CMP.w #$77,D0      ;'w'
0002534A <AmiBlitz3.ab3@7504>    BEQ.w 'absw
0002534E <AmiBlitz3.ab3@7505>   CMP.w #$6C,D0      ;'l'
00025352 <AmiBlitz3.ab3@7506>    BNE.w syntaxerr
00025354 <AmiBlitz3.ab3@7509>   MOVEQ.l #$08,D5
00025356 <AmiBlitz3.ab3@7510>  RTS
00025358 <AmiBlitz3.ab3@7513>   MOVEQ.l #$07,D5
0002535A <AmiBlitz3.ab3@7514> RTS
0002535C <AmiBlitz3.ab3@7518>   TST.w D0
00025360 <AmiBlitz3.ab3@7519>    BEQ.w 'ok
00025364 <AmiBlitz3.ab3@7520>   CMP.w #$3A,D0       ;':'
00025368 <AmiBlitz3.ab3@7521>    BEQ.w 'ok
0002536C <AmiBlitz3.ab3@7522>   CMP.w #$2C,D0       ;','
0002536E <AmiBlitz3.ab3@7525> RTS
00025372 <AmiBlitz3.ab3@7529>   CMP.w #$2C,D0       ;','
00025376 <AmiBlitz3.ab3@7530>    BNE.w 'dis
0002537A <AmiBlitz3.ab3@7531>    BSR.w get1bytemain                                      ;??wy not !fget
0002537E <AmiBlitz3.ab3@7532>   ORI.w #$20,D0
00025380 <AmiBlitz3.ab3@7533>   MOVEQ.l #$00,D1
00025384 <AmiBlitz3.ab3@7534>   CMP.w #$64,D0       ;'d'
00025388 <AmiBlitz3.ab3@7535>    BEQ.w 'ianxi
0002538C <AmiBlitz3.ab3@7536>   CMP.w #$61,D0       ;'a'
00025390 <AmiBlitz3.ab3@7537>    BNE.w syntaxerr
00025394 <AmiBlitz3.ab3@7538>   BSET #$F,D1
00025398 <AmiBlitz3.ab3@7541>    BSR.w get1bytemain                                      ;??wy not !fget
0002539C <AmiBlitz3.ab3@7542>   SUBI.w #$30,D0
000253A0 <AmiBlitz3.ab3@7543>    BMI.w syntaxerr
000253A4 <AmiBlitz3.ab3@7544>   CMP.w #$7,D0
000253A8 <AmiBlitz3.ab3@7545>    BHI.w syntaxerr
000253AA <AmiBlitz3.ab3@7546>   LSL.w #8,D0
000253AC <AmiBlitz3.ab3@7547>   LSL.w #4,D0
000253AE <AmiBlitz3.ab3@7548>   OR.w D0,D1
000253B2 <AmiBlitz3.ab3@7549>    BSR.w get1bytemain                                      ;??wy not !fget
000253B6 <AmiBlitz3.ab3@7550>   CMP.w #$2E,D0       ;'.'
000253BA <AmiBlitz3.ab3@7551>    BNE.w 'ok2
000253BE <AmiBlitz3.ab3@7552>    BSR.w get1bytemain                                      ;??wy not !fget
000253C2 <AmiBlitz3.ab3@7553>   ORI.w #$20,D0
000253C6 <AmiBlitz3.ab3@7554>   CMP.w #$77,D0       ;'w'
000253CA <AmiBlitz3.ab3@7555>    BEQ.w 'ok
000253CE <AmiBlitz3.ab3@7556>   CMP.w #$6C,D0       ;'l'
000253D2 <AmiBlitz3.ab3@7557>    BNE.w syntaxerr
000253D6 <AmiBlitz3.ab3@7558>   BSET #$B,D1
000253DA <AmiBlitz3.ab3@7561>    BSR.w get1bytemain                                      ;??wy not !fget
000253DE <AmiBlitz3.ab3@7565>    CMP.b #"*",d0                                            ;020 * Mode
000253E2 <AmiBlitz3.ab3@7566>             BNE 'l1
000253E6 <AmiBlitz3.ab3@7567>             BSR.w get1bytemain                             ;??wy not !fget
000253EA <AmiBlitz3.ab3@7568>             CMP.b #"2",d0
000253EE <AmiBlitz3.ab3@7569>             BNE 'l2
000253F2 <AmiBlitz3.ab3@7570>             OR.w #$200,d1
000253F6 <AmiBlitz3.ab3@7571>  BRA 'l1b
000253FA <AmiBlitz3.ab3@7574>             CMP.b #"4",d0
000253FE <AmiBlitz3.ab3@7575>             BNE 'l3
00025402 <AmiBlitz3.ab3@7576>             OR.w #$400,d1
00025406 <AmiBlitz3.ab3@7577>  BRA 'l1b
0002540A <AmiBlitz3.ab3@7580>             CMP.b #"8",d0
0002540E <AmiBlitz3.ab3@7581>             BNE syntaxerr
00025412 <AmiBlitz3.ab3@7582>             OR.w #$600,d1
00025416 <AmiBlitz3.ab3@7585>         BSR.w get1bytemain                                 ;??wy not !fget
0002541A <AmiBlitz3.ab3@7589>   CMP.w #$29,D0       ;')'
0002541E <AmiBlitz3.ab3@7590>    BNE.w syntaxerr
00025424 <AmiBlitz3.ab3@7591>   MOVE.w D1,extraword
00025426 <AmiBlitz3.ab3@7592>   MOVEQ.l #$06,D5
0002542A <AmiBlitz3.ab3@7593>  BRA.w get1bytemain                                         ;??wy not !fget
0002542E <AmiBlitz3.ab3@7596>   CMP.w #")",D0                                            ;")"
00025432 <AmiBlitz3.ab3@7597>    BNE.w errorbracketmiss                                  ; was syntax error
00025434 <AmiBlitz3.ab3@7598>   MOVEQ.l #$05,D5
00025438 <AmiBlitz3.ab3@7599> BRA.w get1bytemain                                         ;??wy not !fget
0002543E <AmiBlitz3.ab3@7606>   MOVEA.l asmbuff,A0
00025444 <AmiBlitz3.ab3@7607>   MOVE.w ininclude,D1
0002544A <AmiBlitz3.ab3@7608>   OR.w inmacro,D1
0002544C <AmiBlitz3.ab3@7609>   MOVE.w D1,(A0)+                                          ;flag!
00025450 <AmiBlitz3.ab3@7610>    BNE.w copyconst
00025452 <AmiBlitz3.ab3@7611>   MOVE.l A5,-(A7)
00025456 <AmiBlitz3.ab3@7612>    BSR.w copyconst
0002545C <AmiBlitz3.ab3@7613>   MOVEA.l asmbuff,A0
00025460 <AmiBlitz3.ab3@7614>   CMP.w #$4,D1
00025464 <AmiBlitz3.ab3@7615>    BLS.w 'leave
0002546A <AmiBlitz3.ab3@7616>   TST.w lc
0002546E <AmiBlitz3.ab3@7617>    BNE.w 'leave
00025470 <AmiBlitz3.ab3@7618>   ADDQ.w #2,A0
00025472 <AmiBlitz3.ab3@7619>   MOVE.l (A7)+,(A0)+
00025474 <AmiBlitz3.ab3@7620>   CLR.b (A0)
0002547C <AmiBlitz3.ab3@7621>   MOVE.w #$0004,asmlen2                                    ;pointer + 0
0002547E <AmiBlitz3.ab3@7622>  RTS
00025480 <AmiBlitz3.ab3@7625>   NOT.w (A0)
00025482 <AmiBlitz3.ab3@7626>   ADDQ.w #4,A7
00025484 <AmiBlitz3.ab3@7627> RTS
00025486 <AmiBlitz3.ab3@7630> lc:  Ds.w 1
0002548C <AmiBlitz3.ab3@7634>   CLR.w lc
0002548E <AmiBlitz3.ab3@7635>   MOVEQ.l #$00,D1
00025490 <AmiBlitz3.ab3@7638>    ADDQ.w #1,D1                                            ;label name
000254BC <AmiBlitz3.ab3@7640>    !fget                                                   ;bsr.w get1bytemain
000254C0 <AmiBlitz3.ab3@7642>    BEQ.w 'done
000254C4 <AmiBlitz3.ab3@7645>    CMP.w #$22,d0
000254C8 <AmiBlitz3.ab3@7646>    BNE.s 'loop_l10
000254CE <AmiBlitz3.ab3@7647>    NOT.w instringon
000254D2 <AmiBlitz3.ab3@7650>    CMP.w #":",d0
000254D6 <AmiBlitz3.ab3@7651>    BNE.s 'loop_l11
000254DC <AmiBlitz3.ab3@7652>    TST.w instringon
000254E0 <AmiBlitz3.ab3@7653>    BEQ 'done
000254E2 <AmiBlitz3.ab3@7657>   TST.w D0
000254E6 <AmiBlitz3.ab3@7658>   BPL.w 'notmi
000254E8 <AmiBlitz3.ab3@7659>   MOVE.w D0,-(A7)
000254EA <AmiBlitz3.ab3@7660>   LSR.w #8,D0
000254EC <AmiBlitz3.ab3@7661>   MOVE.b D0,(A0)+
000254EE <AmiBlitz3.ab3@7662>   MOVE.w (A7)+,D0
000254F0 <AmiBlitz3.ab3@7663>   MOVE.b D0,(A0)+
000254F2 <AmiBlitz3.ab3@7664>   ADDQ.w #1,D1
000254F6 <AmiBlitz3.ab3@7665>  BRA.s 'loop
000254FC <AmiBlitz3.ab3@7668>    TST.w instringon
00025500 <AmiBlitz3.ab3@7669>    BNE.w 'putbyte
00025506 <AmiBlitz3.ab3@7671>    TST.b _dcb
0002550A <AmiBlitz3.ab3@7672>    BNE 'notmi_l10
0002550E <AmiBlitz3.ab3@7674>    CMP.w #$28,D0     ;'('
00025512 <AmiBlitz3.ab3@7675>    BEQ.w 'done
00025516 <AmiBlitz3.ab3@7679>    CMP.w #$2C,D0     ;','
0002551A <AmiBlitz3.ab3@7680>    BEQ.w 'done
0002551E <AmiBlitz3.ab3@7681>    CMP.b #"'",D0           ; was #loclabch
00025522 <AmiBlitz3.ab3@7682>    BNE.w 'putbyte
00025528 <AmiBlitz3.ab3@7683>    MOVE.w D0,lc                                     ;locallabels
0002552A <AmiBlitz3.ab3@7684>    MOVE.l A1,-(A7)
00025530 <AmiBlitz3.ab3@7685>    LEA lastgloballabel,A1
00025532 <AmiBlitz3.ab3@7686>    TST.b (A1)
00025536 <AmiBlitz3.ab3@7687>    BEQ.w nolocerr
00025538 <AmiBlitz3.ab3@7690>   ADDQ.w #1,D1
0002553A <AmiBlitz3.ab3@7691>   MOVE.b (A1)+,(A0)+
0002553E <AmiBlitz3.ab3@7692>    BNE.w 'cloop
00025540 <AmiBlitz3.ab3@7693>   SUBQ.w #1,D1
00025542 <AmiBlitz3.ab3@7694>   SUBQ.w #1,A0
00025544 <AmiBlitz3.ab3@7695>   MOVEA.l (A7)+,A1
00025546 <AmiBlitz3.ab3@7698>   MOVE.b D0,(A0)+
0002554A <AmiBlitz3.ab3@7699>  BRA.w 'loop
0002554C <AmiBlitz3.ab3@7702>   CLR.b (A0)
00025552 <AmiBlitz3.ab3@7703>   MOVE.w D1,asmlen2
00025554 <AmiBlitz3.ab3@7704> RTS
0002555A <AmiBlitz3.ab3@7710>   CMP.l #$80ad,d0      
0002555E <AmiBlitz3.ab3@7711>   BNE.s 'l12
00025564 <AmiBlitz3.ab3@7712>  JMP bssseg
0002556A <AmiBlitz3.ab3@7715>   CMP.l #$807f,d0
0002556E <AmiBlitz3.ab3@7716>     BNE.s 'l13
00025574 <AmiBlitz3.ab3@7717>  JMP chipseg
0002557A <AmiBlitz3.ab3@7720>   ADDQ.l #1,destpointer                                    ;even
00025582 <AmiBlitz3.ab3@7721>   BCLR #$0,destpointer+3
00025586 <AmiBlitz3.ab3@7723>   SUBI.w #$803C,D0         ; was #$8000+fnum
00025588 <AmiBlitz3.ab3@7724>   LSL.w #2,D0
0002558E <AmiBlitz3.ab3@7725>   MOVEA.l #asmpnts,A0
00025592 <AmiBlitz3.ab3@7726>   MOVEA.l $0(A0,D0.W),A0                                   ;begin inline assembler
00025598 <AmiBlitz3.ab3@7727>   MOVE.w D0,temp1
0002559A <AmiBlitz3.ab3@7728>   MOVE.l A0,-(A7)
0002559C <AmiBlitz3.ab3@7730>   MOVEQ.l #$01,D1         ;word len (byte=0, long=2)
000255C8 <AmiBlitz3.ab3@7732>    !fget                                                   ;bsr.w get1bytemain
000255CC <AmiBlitz3.ab3@7734>   CMP.w #$2E,D0           ;'.'
000255D0 <AmiBlitz3.ab3@7735>    BNE.w 'dsize
000255FC <AmiBlitz3.ab3@7737>   !fget                                                    ;bsr.w get1bytemain
00025600 <AmiBlitz3.ab3@7739>   ORI.w #$20,D0
00025604 <AmiBlitz3.ab3@7740>   CMP.w #$77,D0           ;'w'                                  ;long
00025608 <AmiBlitz3.ab3@7741>    BEQ.w 'wsize
0002560C <AmiBlitz3.ab3@7742>   CMP.w #$62,D0           ;'b'                                 ;byte
00025610 <AmiBlitz3.ab3@7743>    BEQ.w 'bsize
00025614 <AmiBlitz3.ab3@7744>   CMP.w #$6C,D0           ;'l'                                 ;word
00025618 <AmiBlitz3.ab3@7746>    BEQ.w 'lsize
0002561C <AmiBlitz3.ab3@7747>   CMP.w #"s",d0
00025620 <AmiBlitz3.ab3@7749>   BNE syntaxerr
00025624 <AmiBlitz3.ab3@7750>  BRA.w 'bsize             ; was 'lsize org source
00025626 <AmiBlitz3.ab3@7753>   MOVEQ.l #$00,D1
0002562A <AmiBlitz3.ab3@7754>   MOVE.w $8(A0),D0
0002562E <AmiBlitz3.ab3@7755>  BRA.w 'tstsize
00025630 <AmiBlitz3.ab3@7758>   MOVEQ.l #$04,D1
00025634 <AmiBlitz3.ab3@7759>  BRA.w 'putsize
00025636 <AmiBlitz3.ab3@7762>   MOVEQ.l #$04,D1
0002563A <AmiBlitz3.ab3@7763>   MOVE.w $8(A0),D0
0002563C <AmiBlitz3.ab3@7764>   LSR.w #4,D0
00025640 <AmiBlitz3.ab3@7765>  BRA.w 'tstsize
00025642 <AmiBlitz3.ab3@7768>   MOVEQ.l #$08,D1
00025646 <AmiBlitz3.ab3@7769>   MOVE.w $8(A0),D0
00025648 <AmiBlitz3.ab3@7770>   LSR.w #8,D0
0002564C <AmiBlitz3.ab3@7773>    ANDI.w #$F,D0
00025650 <AmiBlitz3.ab3@7774>   CMP.w #$F,D0
00025654 <AmiBlitz3.ab3@7776>    BNE.w 'cl60
0002565C <AmiBlitz3.ab3@7779>    CMP.l #"MULS",-6(a0)
00025660 <AmiBlitz3.ab3@7780>    BNE 'c20
00025666 <AmiBlitz3.ab3@7781>    MOVE.l #$4c000800,d1
0002566C <AmiBlitz3.ab3@7782>  JMP do32
00025674 <AmiBlitz3.ab3@7785>    CMP.l #"MULU",-6(a0)
00025678 <AmiBlitz3.ab3@7786>    BNE 'c30
0002567E <AmiBlitz3.ab3@7787>    MOVE.l #$4c000000,d1
00025684 <AmiBlitz3.ab3@7788>  JMP do32
0002568C <AmiBlitz3.ab3@7791>    CMP.l #"DIVS",-6(a0)
00025690 <AmiBlitz3.ab3@7792>    BNE 'c40
00025696 <AmiBlitz3.ab3@7793>    MOVE.l #$4c400800,d1
0002569C <AmiBlitz3.ab3@7794>  JMP do32
000256A4 <AmiBlitz3.ab3@7797>    CMP.l #"DIVU",-6(a0)
000256A8 <AmiBlitz3.ab3@7798>    BNE 'c50
000256AE <AmiBlitz3.ab3@7799>    MOVE.l #$4c400000,d1
000256B4 <AmiBlitz3.ab3@7800>  JMP do32
000256B8 <AmiBlitz3.ab3@7804>  BRA illsizeerr             ; in org source this was afte 'c160
000256E4 <AmiBlitz3.ab3@7807>   !fget                                                    ;bsr.w get1bytemain
000256EA <AmiBlitz3.ab3@7810>   MOVE.w D1,asmsize
000256EC <AmiBlitz3.ab3@7811>   MOVEQ.l #-$01,D3
000256F0 <AmiBlitz3.ab3@7812>    BSR.w reget
000256F4 <AmiBlitz3.ab3@7813>    BEQ.w 'done0
000256FE <AmiBlitz3.ab3@7814>   MOVE.l #ptr_parameterstore,asmbuff
00025708 <AmiBlitz3.ab3@7817>    MOVE.w oldqflag,instringon
0002570E <AmiBlitz3.ab3@7818>   MOVEA.l lastsourcepos,A5
00025712 <AmiBlitz3.ab3@7820>    BSR.w getea
00025714 <AmiBlitz3.ab3@7821>   MOVE.l D4,D2                                              ;to src
00025716 <AmiBlitz3.ab3@7822>   MOVE.l D5,D3
00025720 <AmiBlitz3.ab3@7823>   MOVE.w asmlen2,asmlen
00025722 <AmiBlitz3.ab3@7824>   MOVEQ.l #-$01,D5
0002572C <AmiBlitz3.ab3@7825>   MOVE.w extraword,extraword2
00025730 <AmiBlitz3.ab3@7826>   CMP.w #$2C,D0                                             ;','
00025734 <AmiBlitz3.ab3@7827>    BNE.w 'done0
0002573E <AmiBlitz3.ab3@7828>   MOVE.l #namebuff2,asmbuff
00025742 <AmiBlitz3.ab3@7829>    BSR.w getea                                              ;dest
00025744 <AmiBlitz3.ab3@7836>   MOVEA.l (A7)+,A0
0002574A <AmiBlitz3.ab3@7840>   MOVEA.l destpointer,A1    ; pc
0002574C <AmiBlitz3.ab3@7842>   MOVEA.l A1,A4
0002574E <AmiBlitz3.ab3@7843>   ADDQ.w #2,A1
00025750 <AmiBlitz3.ab3@7844>   MOVE.w (A0),D1            ;opcode
00025752 <AmiBlitz3.ab3@7845>   TST.w D3
00025756 <AmiBlitz3.ab3@7846>    BMI.w 'none              ;no src/dest ea!
0002575A <AmiBlitz3.ab3@7850>   MOVE.w $E(A0),D0
0002575E <AmiBlitz3.ab3@7851>    BPL.w 'noia
00025762 <AmiBlitz3.ab3@7852>   BTST #$0,D0
00025766 <AmiBlitz3.ab3@7853>    BEQ.w 'noa
0002576A <AmiBlitz3.ab3@7854>   CMP.w #$1,D5
0002576E <AmiBlitz3.ab3@7855>    BNE.w 'noa
00025772 <AmiBlitz3.ab3@7856>   CMP.w #$E,D3
00025776 <AmiBlitz3.ab3@7857>    BEQ.w 'noia
0002577C <AmiBlitz3.ab3@7858>   MOVE.w temp1,D0
0002577E <AmiBlitz3.ab3@7859>   ADDQ.w #4,D0
00025782 <AmiBlitz3.ab3@7860>  BRA.w 'moveon
00025786 <AmiBlitz3.ab3@7863>   BTST #$1,D0
0002578A <AmiBlitz3.ab3@7864>    BEQ.w 'noia
0002578E <AmiBlitz3.ab3@7865>   CMP.w #$B,D3
00025792 <AmiBlitz3.ab3@7866>    BNE.w 'noia
00025798 <AmiBlitz3.ab3@7867>   MOVE.w temp1,D0
0002579A <AmiBlitz3.ab3@7870>   ADDQ.w #4,D0
000257A0 <AmiBlitz3.ab3@7871>   MOVEA.l #asmpnts,A0
000257A4 <AmiBlitz3.ab3@7872>   MOVEA.l $0(A0,D0.W),A0
000257A6 <AmiBlitz3.ab3@7873>   MOVE.w (A0),D1
000257B0 <AmiBlitz3.ab3@7876>   MOVE.l #ptr_parameterstore,buff1
000257BA <AmiBlitz3.ab3@7877>   MOVE.l #namebuff2,buff2
000257BE <AmiBlitz3.ab3@7878>   MOVE.l $A(A0),D0
000257C2 <AmiBlitz3.ab3@7879>    BEQ.w 'nojsr
000257C4 <AmiBlitz3.ab3@7880>   MOVEA.l D0,A3
000257CA <AmiBlitz3.ab3@7881>   MOVE.w asmsize,D6
000257CC <AmiBlitz3.ab3@7882>    JSR (A3)
000257D0 <AmiBlitz3.ab3@7883>    BPL.w 'noerr
000257D4 <AmiBlitz3.ab3@7884>   CMP.w #-$2,D0
000257D8 <AmiBlitz3.ab3@7885>    BEQ.w illsizeerr
000257DC <AmiBlitz3.ab3@7886>  BRA.w illeaerr
000257E0 <AmiBlitz3.ab3@7889>   BEQ.w 'nojsr
000257E2 <AmiBlitz3.ab3@7891>   EXG.l D2,D4
000257E4 <AmiBlitz3.ab3@7892>   EXG.l D3,D5
000257EA <AmiBlitz3.ab3@7894>   MOVE.l extraword,D6
000257EC <AmiBlitz3.ab3@7895>   SWAP D6
000257F2 <AmiBlitz3.ab3@7896>   MOVE.l D6,extraword
000257FC <AmiBlitz3.ab3@7898>   MOVE.l #namebuff2,buff1
00025806 <AmiBlitz3.ab3@7899>   MOVE.l #ptr_parameterstore,buff2
0002580C <AmiBlitz3.ab3@7901>   MOVE.w asmlen,D6
00025812 <AmiBlitz3.ab3@7902>   MOVE.w asmlen2,D7
00025818 <AmiBlitz3.ab3@7903>   MOVE.w D6,asmlen2
0002581E <AmiBlitz3.ab3@7904>   MOVE.w D7,asmlen
00025828 <AmiBlitz3.ab3@7907>   MOVE.l buff1,asmbuff
0002582C <AmiBlitz3.ab3@7908>   MOVE.w $E(A0),D0
00025830 <AmiBlitz3.ab3@7909>    BEQ.w 'nothing
00025834 <AmiBlitz3.ab3@7910>    BMI.w 'nothing
00025838 <AmiBlitz3.ab3@7912>    CMP.w #$7000,d1
0002583C <AmiBlitz3.ab3@7913>    BNE 'skip
00025840 <AmiBlitz3.ab3@7914>    CMP.w #$b,d3
00025844 <AmiBlitz3.ab3@7915>    BNE illeaerr
00025848 <AmiBlitz3.ab3@7919>    CMP.w #$1,D0
0002584C <AmiBlitz3.ab3@7920>    BNE.w 'n1to8
00025850 <AmiBlitz3.ab3@7921>    CMP.w #$B,D3
00025854 <AmiBlitz3.ab3@7922>    BNE.w 'nothing
00025858 <AmiBlitz3.ab3@7925>    BSR.w insasm
0002585A <AmiBlitz3.ab3@7926>   MOVE.w D4,D2
0002585C <AmiBlitz3.ab3@7927>   MOVE.w D5,D3
00025860 <AmiBlitz3.ab3@7928>  BRA.w 'skipsrc2
00025864 <AmiBlitz3.ab3@7931>    CMP.w #$2,D0
00025868 <AmiBlitz3.ab3@7932>    BNE.w 'notbcc
0002586C <AmiBlitz3.ab3@7933>   CMP.w #$8,D3
00025870 <AmiBlitz3.ab3@7934>    BNE.w illeaerr
00025872 <AmiBlitz3.ab3@7935>   MOVEQ.l #$09,D3
00025876 <AmiBlitz3.ab3@7936>  BRA.w 'nothing
0002587A <AmiBlitz3.ab3@7939>    CMP.w #$3,D0
0002587E <AmiBlitz3.ab3@7940>    BEQ.w 'skipsrc
00025882 <AmiBlitz3.ab3@7943>   CMP.w #$4,D0
00025886 <AmiBlitz3.ab3@7944>    BEQ.w 'skipsrc
0002588A <AmiBlitz3.ab3@7947>   CMP.w #$5,D0
0002588E <AmiBlitz3.ab3@7948>    BNE.w 'notdbf
00025892 <AmiBlitz3.ab3@7949>   CMP.w #$8,D5
00025896 <AmiBlitz3.ab3@7950>    BNE.w illeaerr
00025898 <AmiBlitz3.ab3@7951>   OR.w D2,D1
0002589A <AmiBlitz3.ab3@7952>   MOVEQ.l #$09,D5
0002589E <AmiBlitz3.ab3@7956>   MOVE.w $2(A0),D6
000258A2 <AmiBlitz3.ab3@7957>   MOVE.b $6(A0),D7
000258A6 <AmiBlitz3.ab3@7958>   MOVEM.l D4-D5,-(A7)
000258AC <AmiBlitz3.ab3@7959>   MOVE.w extraword2,D4
000258B0 <AmiBlitz3.ab3@7960>    BSR.w doea          ;do src
000258B4 <AmiBlitz3.ab3@7962>   MOVEM.l (A7)+,D2-D3
000258B6 <AmiBlitz3.ab3@7964>   TST.w D3
000258BA <AmiBlitz3.ab3@7967>     BMI.w 'one
000258C0 <AmiBlitz3.ab3@7968>   MOVE.w extraword,D4
000258C4 <AmiBlitz3.ab3@7969>   MOVE.w $4(A0),D6
000258C8 <AmiBlitz3.ab3@7970>   MOVE.b $7(A0),D7
000258D2 <AmiBlitz3.ab3@7971>   MOVE.l buff2,asmbuff
000258DC <AmiBlitz3.ab3@7972>   MOVE.w asmlen2,asmlen
000258E0 <AmiBlitz3.ab3@7973>    BSR.w doea
000258E4 <AmiBlitz3.ab3@7974>  BRA.w 'putit
000258E8 <AmiBlitz3.ab3@7977>   MOVE.w $4(A0),D0
000258EC <AmiBlitz3.ab3@7978>    BNE.w illeaerr
000258F0 <AmiBlitz3.ab3@7979>  BRA.w 'putit
000258F4 <AmiBlitz3.ab3@7982>   MOVE.w $2(A0),D0
000258F8 <AmiBlitz3.ab3@7983>   OR.w $4(A0),D0
000258FC <AmiBlitz3.ab3@7984>    BNE.w illeaerr
00025900 <AmiBlitz3.ab3@7989>   MOVE.w $8(A0),D0
00025904 <AmiBlitz3.ab3@7990>   ANDI.w #$F000,D0
00025908 <AmiBlitz3.ab3@7991>   CMP.w #-$1000,D0    ;was #$f000
0002590C <AmiBlitz3.ab3@7992>    BEQ.w 'nosizep
0002590E <AmiBlitz3.ab3@7993>   LSR.w #8,D0
00025910 <AmiBlitz3.ab3@7994>   LSR.w #4,D0         ;shift for size
00025914 <AmiBlitz3.ab3@7996>   MOVE.w $8(A0),D2
0002591A <AmiBlitz3.ab3@7997>   MOVE.w asmsize,D3
0002591C <AmiBlitz3.ab3@7998>   LSR.w D3,D2
00025920 <AmiBlitz3.ab3@7999>   ANDI.w #$F,D2
00025922 <AmiBlitz3.ab3@8000>   LSL.w D0,D2
00025924 <AmiBlitz3.ab3@8001>   OR.w D2,D1          ;size into opcode
0002592A <AmiBlitz3.ab3@8004>   CMPA.l destbufferend,A4
0002592E <AmiBlitz3.ab3@8005>    BCS.w 'oky
00025936 <AmiBlitz3.ab3@8006>   MOVE.w #$FFFF,dontwrite_nomemleft     ; was -1
0002593A <AmiBlitz3.ab3@8007>  BRA.w 'done
0002593C <AmiBlitz3.ab3@8010>   MOVE.w D1,(A4)
00025942 <AmiBlitz3.ab3@8013>   MOVE.l A1,destpointer
00025944 <AmiBlitz3.ab3@8014> RTS
0002594A <AmiBlitz3.ab3@8018>   MOVE.l destpointer,-(A7)
00025950 <AmiBlitz3.ab3@8019>   MOVE.l A1,destpointer
00025954 <AmiBlitz3.ab3@8020>    BSR.w addoff
0002595A <AmiBlitz3.ab3@8021>   MOVEA.l destpointer,A1
00025960 <AmiBlitz3.ab3@8022>   MOVE.l (A7)+,destpointer
00025962 <AmiBlitz3.ab3@8023> RTS
00025966 <AmiBlitz3.ab3@8027>   MOVEM.l d2-d6,-(a7)
0002596C <AmiBlitz3.ab3@8028>   JSR stripspaces
00025970 <AmiBlitz3.ab3@8029>   CMP.b #"d",(a5)+
00025974 <AmiBlitz3.ab3@8030>   BNE noreg
00025976 <AmiBlitz3.ab3@8031>   MOVE.b (a5)+,d0
0002597A <AmiBlitz3.ab3@8032>   CMP.b #$30,d0
0002597E <AmiBlitz3.ab3@8033>   BLT noreg
00025982 <AmiBlitz3.ab3@8034>   CMP.b #$37,d0
00025986 <AmiBlitz3.ab3@8035>   BGT noreg
0002598A <AmiBlitz3.ab3@8036>   SUB.b #$30,d0
0002598C <AmiBlitz3.ab3@8037>   MOVEQ #0,d3
0002598E <AmiBlitz3.ab3@8038>   MOVE.b d0,d3                                             ;reg1
00025990 <AmiBlitz3.ab3@8039>   ASL.l #8,d3
00025992 <AmiBlitz3.ab3@8040>   ASL.l #8,d3
00025998 <AmiBlitz3.ab3@8041>   JSR stripspaces
0002599C <AmiBlitz3.ab3@8042>   CMP.b #",",(a5)+
000259A0 <AmiBlitz3.ab3@8043>   BNE noreg
000259A6 <AmiBlitz3.ab3@8044>   JSR stripspaces
000259AA <AmiBlitz3.ab3@8045>   CMP.b #"d",(a5)+
000259AE <AmiBlitz3.ab3@8046>   BNE noreg
000259B0 <AmiBlitz3.ab3@8047>   MOVE.b (a5)+,d0
000259B4 <AmiBlitz3.ab3@8048>   CMP.b #$30,d0
000259B8 <AmiBlitz3.ab3@8049>   BLT noreg
000259BC <AmiBlitz3.ab3@8050>   CMP.b #$37,d0
000259C0 <AmiBlitz3.ab3@8051>   BGT noreg
000259C4 <AmiBlitz3.ab3@8052>   SUB.b #$30,d0
000259C6 <AmiBlitz3.ab3@8053>   MOVEQ #0,d4
000259C8 <AmiBlitz3.ab3@8054>   MOVE.b d0,d4                                             ;reg2
000259CA <AmiBlitz3.ab3@8055>   ASL.l #8,d4
000259CC <AmiBlitz3.ab3@8056>   ASL.l #4,d4
000259CE <AmiBlitz3.ab3@8057>   OR.b d0,d1
000259D0 <AmiBlitz3.ab3@8058>   OR.l d3,d1
000259D2 <AmiBlitz3.ab3@8059>   OR.l d4,d1
000259D8 <AmiBlitz3.ab3@8060>   JSR writelong
000259DC <AmiBlitz3.ab3@8061>   MOVEM.l (a7)+,d2-d6
000259E0 <AmiBlitz3.ab3@8062>   MOVEM.l d1/a1-a3,-(a7)
000259E4 <AmiBlitz3.ab3@8063> BRA exit
000259E8 <AmiBlitz3.ab3@8067>   MOVEM.l (a7)+,d2-d6
000259EE <AmiBlitz3.ab3@8068>   LEA errtext,a0
000259F0 <AmiBlitz3.ab3@8069>   MOVE.l a0,-(a7)
000259F6 <AmiBlitz3.ab3@8070> JMP handle_compileerror
000259FC <AmiBlitz3.ab3@8075>   MOVE.w dontwrite_nomemleft,D1
00025A00 <AmiBlitz3.ab3@8076>    BNE.w 'done
00025A08 <AmiBlitz3.ab3@8077>   BTST #$7,make_smallestcode
00025A0C <AmiBlitz3.ab3@8078>    BEQ.w 'go
00025A10 <AmiBlitz3.ab3@8079>   MOVE.w pass(PC),D1
00025A14 <AmiBlitz3.ab3@8080>    BEQ.w 'done
00025A1A <AmiBlitz3.ab3@8083>   MOVEA.l templabel,A2                                     ;insert labels in Code
00025A22 <AmiBlitz3.ab3@8084>   MOVE.b #1,curtemplabel
00025A2A <AmiBlitz3.ab3@8085>   MOVE.w #$FFFF,constmode
00025A30 <AmiBlitz3.ab3@8086>   CLR.w regnum
00025A3A <AmiBlitz3.ab3@8087>           MOVE.l #forthstack,forthsp
00025A44 <AmiBlitz3.ab3@8088>           MOVE.l #precstack,precsp
00025A48 <AmiBlitz3.ab3@8089>    BSR.w prepstack
00025A4A <AmiBlitz3.ab3@8092>   MOVE.l A2,-(A7)
00025A4E <AmiBlitz3.ab3@8093>    BSR.w chkstop
00025A50 <AmiBlitz3.ab3@8094>   MOVEA.l (A7)+,A2
00025A54 <AmiBlitz3.ab3@8095>   CMPA.w #$0,A2
00025A58 <AmiBlitz3.ab3@8096>    BEQ.w 'done2
00025A5E <AmiBlitz3.ab3@8097>    CLR.b iee
00025A64 <AmiBlitz3.ab3@8098>   MOVE.l A2,asmbuff
00025A68 <AmiBlitz3.ab3@8099>   LEA $10(A2),A5
00025A6C <AmiBlitz3.ab3@8100>   TST.b $F(A2)
00025A70 <AmiBlitz3.ab3@8101>    BNE.w 'skipo
00025A72 <AmiBlitz3.ab3@8102>   MOVEA.l (A5),A5                                          ;pointer to real text
00025A78 <AmiBlitz3.ab3@8105>    CLR.w asmtype
00025A7C <AmiBlitz3.ab3@8106>    CMP.b #".",(a5)
00025A80 <AmiBlitz3.ab3@8107>    BNE.s 'skipo_l10
00025A82 <AmiBlitz3.ab3@8108>    MOVE.l a2,-(a7)
00025A84 <AmiBlitz3.ab3@8109>    ADDQ.l #1,a5
00025A8A <AmiBlitz3.ab3@8110>    LEA newtypebase,a2
00025A8E <AmiBlitz3.ab3@8111>    BSR getparameter2
00025A92 <AmiBlitz3.ab3@8112>    BEQ.w syntaxerr
00025A96 <AmiBlitz3.ab3@8113>    BSR findtype
00025A9A <AmiBlitz3.ab3@8114>    BNE.w notypeerr
00025A9E <AmiBlitz3.ab3@8115>    LEA $4(a2),a2
00025AA2 <AmiBlitz3.ab3@8116>    BSR getparameter2
00025AA6 <AmiBlitz3.ab3@8117>    BEQ.w syntaxerr
00025AAA <AmiBlitz3.ab3@8118>    BSR.w findvariable2
00025AAE <AmiBlitz3.ab3@8119>    BNE.w notypeerr
00025AB2 <AmiBlitz3.ab3@8120>    MOVE.w $4(a2),d3
00025AB4 <AmiBlitz3.ab3@8121>    EXT.l d3
00025AB8 <AmiBlitz3.ab3@8122>  BRA 'skipo_l30b
00025ABC <AmiBlitz3.ab3@8125>   CMP.b #"\",(a5)
00025AC0 <AmiBlitz3.ab3@8126>     BNE 'skipo_l20
00025AC2 <AmiBlitz3.ab3@8127>     ADDQ.l #1,a5
00025AC4 <AmiBlitz3.ab3@8128>    MOVE.l a2,-(a7)
00025AC6 <AmiBlitz3.ab3@8129>    MOVE.l a5,a4
00025ACC <AmiBlitz3.ab3@8130>    LEA usedpath,a5
00025AD0 <AmiBlitz3.ab3@8131>    CMP.b #"*",(a5)
00025AD4 <AmiBlitz3.ab3@8132>    BNE 'skipo_lm1
00025AD6 <AmiBlitz3.ab3@8133>    ADDQ.l #1,a5
00025ADA <AmiBlitz3.ab3@8136>    BSR.w getparameter2
00025ADE <AmiBlitz3.ab3@8137>    BEQ.w syntaxerr
00025AE4 <AmiBlitz3.ab3@8138>    LEA varbase,A2
00025AEC <AmiBlitz3.ab3@8139>    MOVE.b #1,newvariable
00025AF0 <AmiBlitz3.ab3@8140>    BSR.w findvariable
00025AF6 <AmiBlitz3.ab3@8141>    CLR.b newvariable
00025AFC <AmiBlitz3.ab3@8142>    CMP.l #-1,d0
00025B00 <AmiBlitz3.ab3@8143>    BEQ.w notypeerr
00025B02 <AmiBlitz3.ab3@8144>    MOVE.l a4,a5
00025B06 <AmiBlitz3.ab3@8145>    MOVE.l $a(a2),a2
00025B0A <AmiBlitz3.ab3@8146>    LEA $4(a2),a2
00025B0E <AmiBlitz3.ab3@8147>    BSR getparameter2
00025B12 <AmiBlitz3.ab3@8148>    BEQ.w syntaxerr
00025B16 <AmiBlitz3.ab3@8149>    BSR.w findvariable2
00025B1A <AmiBlitz3.ab3@8150>    BNE.w notypeerr
00025B1E <AmiBlitz3.ab3@8151>   MOVE.w $4(A2),D3
00025B20 <AmiBlitz3.ab3@8152>   EXT.l D3
00025B26 <AmiBlitz3.ab3@8155>    CMP.b #"[",-1(a5)
00025B2A <AmiBlitz3.ab3@8156>    BNE 'skipo_l30c
00025B2C <AmiBlitz3.ab3@8157>    MOVEQ #0,d0
00025B2E <AmiBlitz3.ab3@8158>    MOVE.b (a5)+,d0
00025B30 <AmiBlitz3.ab3@8159>    MOVE.l d3,-(a7)
00025B32 <AmiBlitz3.ab3@8160>    MOVEQ #0,d3
00025B38 <AmiBlitz3.ab3@8161>    JSR atoi
00025B3A <AmiBlitz3.ab3@8162>    MOVE.l (a7)+,d1
00025B3E <AmiBlitz3.ab3@8163>    MOVE.l $a(a2),a2
00025B42 <AmiBlitz3.ab3@8164>    MOVE.w 8(a2),d0
00025B44 <AmiBlitz3.ab3@8165>    MULS d0,d3
00025B46 <AmiBlitz3.ab3@8166>    ADD.l d1,d3
00025B48 <AmiBlitz3.ab3@8169>   MOVE.l (a7)+,a2
00025B4C <AmiBlitz3.ab3@8170>  BRA 'oko
00025B52 <AmiBlitz3.ab3@8173>   CMP.w #$c,$8(a2)
00025B56 <AmiBlitz3.ab3@8174>      BEQ 'skipo_lf1
00025B5C <AmiBlitz3.ab3@8175>      CMP.w #$d,$8(a2)
00025B60 <AmiBlitz3.ab3@8176>      BEQ 'skipo_lf1
00025B66 <AmiBlitz3.ab3@8179>   JSR evalconst3
00025B6C <AmiBlitz3.ab3@8182>   MOVEA.l asmbuff,A2
00025B70 <AmiBlitz3.ab3@8183>    BEQ.w 'oko
00025B74 <AmiBlitz3.ab3@8184>   CMP.w #$28,D0
00025B78 <AmiBlitz3.ab3@8185>    BEQ.w 'oko
00025B7C <AmiBlitz3.ab3@8186>   CMP.w #$2C,D0
00025B80 <AmiBlitz3.ab3@8187>    BEQ.w 'oko
00025B84 <AmiBlitz3.ab3@8188>  BRA.w syntaxerr
00025B8C <AmiBlitz3.ab3@8191>   MOVE.b #1,iee
00025B90 <AmiBlitz3.ab3@8192>  BRA 'skipo_lf2
00025B94 <AmiBlitz3.ab3@8195>   MOVEA.l $4(A2),A1
00025B98 <AmiBlitz3.ab3@8197>   MOVE.w $8(A2),D1                                         ;labelmode
00025B9C <AmiBlitz3.ab3@8198>   CMP.w #$5,D1
00025BA0 <AmiBlitz3.ab3@8199>    BNE.w 'notdan
00025BA4 <AmiBlitz3.ab3@8202>    BSR.w chkword                                           ;word
00025BA6 <AmiBlitz3.ab3@8205>   MOVE.w D3,(A1)
00025BAA <AmiBlitz3.ab3@8206>  BRA.w 'next
00025BAE <AmiBlitz3.ab3@8209>   CMP.w #$6,D1
00025BB2 <AmiBlitz3.ab3@8210>    BNE.w 'notdanxi
00025BB6 <AmiBlitz3.ab3@8213>    BSR.w chkbyte                                           ;byte
00025BBA <AmiBlitz3.ab3@8216>   MOVE.b D3,$1(A1)
00025BBE <AmiBlitz3.ab3@8217>  BRA.w 'next
00025BC2 <AmiBlitz3.ab3@8220>    CMP.w #$11,D1                                           ;byte
00025BC6 <AmiBlitz3.ab3@8221>    BEQ.w 'isbyte2
00025BCA <AmiBlitz3.ab3@8222>    CMP.w #$c,d1
00025BCE <AmiBlitz3.ab3@8223>    BEQ 'single1
00025BD2 <AmiBlitz3.ab3@8224>    CMP.w #$d,d1
00025BD6 <AmiBlitz3.ab3@8225>    BEQ 'double1
00025BDA <AmiBlitz3.ab3@8226>   CMP.w #$7,D1
00025BDE <AmiBlitz3.ab3@8227>    BEQ.w 'word                                             ;word
00025BE2 <AmiBlitz3.ab3@8228>   CMP.w #$8,D1
00025BE6 <AmiBlitz3.ab3@8229>    BNE.w 'notabsl
00025BEC <AmiBlitz3.ab3@8232>   MOVE.w asmtype,D1                                        ;long
00025BF0 <AmiBlitz3.ab3@8233>    BEQ.w 'notpcrel
00025BF4 <AmiBlitz3.ab3@8234>      BSR.w asmoff
00025BF6 <AmiBlitz3.ab3@8237>   MOVE.l D3,(A1)
00025BFA <AmiBlitz3.ab3@8238>  BRA.w 'next
00025C00 <AmiBlitz3.ab3@8241>   fmove.s fp0,0(a1)
00025C04 <AmiBlitz3.ab3@8242>  BRA.w 'next
00025C0A <AmiBlitz3.ab3@8245>   fmove.d fp0,0(a1)
00025C0E <AmiBlitz3.ab3@8246>  BRA.w 'next
00025C12 <AmiBlitz3.ab3@8249>   CMP.w #$9,D1
00025C16 <AmiBlitz3.ab3@8250>    BNE.w 'notdpc
00025C18 <AmiBlitz3.ab3@8251>   SUB.l A1,D3                                              ;branchword
00025C1C <AmiBlitz3.ab3@8252>    BSR.w chkword
00025C1E <AmiBlitz3.ab3@8253>   MOVE.w D3,(A1)
00025C22 <AmiBlitz3.ab3@8254>  BRA.w 'next
00025C26 <AmiBlitz3.ab3@8257>   CMP.w #$A,D1
00025C2A <AmiBlitz3.ab3@8258>    BNE.w 'imm
00025C2C <AmiBlitz3.ab3@8259>   SUB.l A1,D3                                              ;branchbyte
00025C30 <AmiBlitz3.ab3@8260>  BRA.w 'isbyte
00025C34 <AmiBlitz3.ab3@8263>   CMP.w #$11,d1
00025C38 <AmiBlitz3.ab3@8264>   BLE 'imm_org
00025C3A <AmiBlitz3.ab3@8265>   MOVE.l a3,-(a7)
00025C40 <AmiBlitz3.ab3@8266>   LEA pluginbase,a3
00025C44 <AmiBlitz3.ab3@8267>   MOVE.l 8(a2),a0
00025C46 <AmiBlitz3.ab3@8268>   JSR (a0)                                                 ;hook
00025C48 <AmiBlitz3.ab3@8269>   MOVE.l (a7)+,a3
00025C4C <AmiBlitz3.ab3@8270>  BRA 'next
00025C50 <AmiBlitz3.ab3@8273>   MOVE.w $A(A2),D0
00025C54 <AmiBlitz3.ab3@8274>    BEQ.w 'noflag
00025C58 <AmiBlitz3.ab3@8275>   CMP.w #$1,D0
00025C5C <AmiBlitz3.ab3@8276>    BEQ.w 'tocount
00025C60 <AmiBlitz3.ab3@8277>   CMP.w #$3,D0
00025C64 <AmiBlitz3.ab3@8278>    BEQ.w 'tomoveq
00025C68 <AmiBlitz3.ab3@8279>   CMP.w #$4,D0
00025C6C <AmiBlitz3.ab3@8280>    BEQ.w 'totrap
00025C70 <AmiBlitz3.ab3@8283>   CMP.w #$B,D1                                             ;long
00025C74 <AmiBlitz3.ab3@8284>    BEQ.w 'isabsl
00025C78 <AmiBlitz3.ab3@8285>  BRA 'word2                                                ;word
00025C7E <AmiBlitz3.ab3@8288>   CMP.l #$F,D3
00025C82 <AmiBlitz3.ab3@8289>    BHI.w illtraperr
00025C84 <AmiBlitz3.ab3@8290>   OR.b D3,-(A1)
00025C88 <AmiBlitz3.ab3@8291>  BRA.w 'next
00025C8E <AmiBlitz3.ab3@8294>   CMP.l #$8,D3
00025C92 <AmiBlitz3.ab3@8295>    BHI.w illimmerr
00025C94 <AmiBlitz3.ab3@8296>   TST.l D3
00025C98 <AmiBlitz3.ab3@8297>    BEQ.w illimmerr
00025C9C <AmiBlitz3.ab3@8298>   ANDI.w #$7,D3
00025C9E <AmiBlitz3.ab3@8299>   LSL.w #8,D3
00025CA0 <AmiBlitz3.ab3@8300>   LSL.w #1,D3
00025CA2 <AmiBlitz3.ab3@8301>   OR.w D3,-(A1)
00025CA6 <AmiBlitz3.ab3@8302>  BRA.w 'next
00025CAA <AmiBlitz3.ab3@8305>    BSR.w chkbyte
00025CAC <AmiBlitz3.ab3@8306>   MOVE.b D3,-(A1)
00025CAE <AmiBlitz3.ab3@8309>   MOVEA.l (A2),A2
00025CB2 <AmiBlitz3.ab3@8310>  BRA.w 'loop
00025CB8 <AmiBlitz3.ab3@8313>   CLR.w constmode
00025CBE <AmiBlitz3.ab3@8316>   CLR.b curtemplabel
00025CC0 <AmiBlitz3.ab3@8317> RTS
00025CC2 <AmiBlitz3.ab3@8326>   BTST D3,D6
00025CC6 <AmiBlitz3.ab3@8327>    BEQ.w illeaerr
00025CCA <AmiBlitz3.ab3@8328>    BSR.w makemode
00025CCE <AmiBlitz3.ab3@8329>   CMP.w #$7,D3
00025CD2 <AmiBlitz3.ab3@8330>    BCS.w 'skip
00025CD4 <AmiBlitz3.ab3@8331>   MOVE.w D3,D2
00025CD6 <AmiBlitz3.ab3@8332>   SUBQ.w #7,D2
00025CDA <AmiBlitz3.ab3@8333>   CMP.w #$5,D2
00025CDE <AmiBlitz3.ab3@8334>    BCS.w 'skip0
00025CE0 <AmiBlitz3.ab3@8335>   MOVEQ.l #$04,D2
00025CE2 <AmiBlitz3.ab3@8338>   MOVEQ.l #$07,D3
00025CE4 <AmiBlitz3.ab3@8341>   MOVE.b D7,D0
00025CE8 <AmiBlitz3.ab3@8342>   ANDI.w #$F,D0
00025CEC <AmiBlitz3.ab3@8343>   CMP.w #$F,D0
00025CF0 <AmiBlitz3.ab3@8344>    BEQ.w 'skip2
00025CF2 <AmiBlitz3.ab3@8345>   LSL.w D0,D3
00025CF4 <AmiBlitz3.ab3@8346>   OR.w D3,D1
00025CF6 <AmiBlitz3.ab3@8349>   LSR.w #4,D7
00025CFA <AmiBlitz3.ab3@8350>   ANDI.w #$F,D7
00025CFE <AmiBlitz3.ab3@8351>   CMP.w #$F,D7
00025D02 <AmiBlitz3.ab3@8352>    BEQ.w 'skip3
00025D04 <AmiBlitz3.ab3@8353>   LSL.w D7,D2
00025D06 <AmiBlitz3.ab3@8354>   OR.w D2,D1
00025D08 <AmiBlitz3.ab3@8357> RTS
00025D0E <AmiBlitz3.ab3@8361>   CMP.l #$7F,D3
00025D12 <AmiBlitz3.ab3@8362>    BGT.w illdiserr
00025D18 <AmiBlitz3.ab3@8363>   CMP.l #$FFFFFF80,D3                                      ;#-128,d3 org source
00025D1C <AmiBlitz3.ab3@8364>    BLT.w illdiserr
00025D1E <AmiBlitz3.ab3@8365> RTS
00025D24 <AmiBlitz3.ab3@8369>   CMP.l #$7fff,D3
00025D28 <AmiBlitz3.ab3@8370>    BGT.w illdiserr
00025D2E <AmiBlitz3.ab3@8371>   CMP.l #$FFFF8000,D3                                      ;#-32768,d3 org source
00025D32 <AmiBlitz3.ab3@8372>    BLT.w illdiserr
00025D34 <AmiBlitz3.ab3@8373> RTS
00025D36 <AmiBlitz3.ab3@8378>   MOVE.b (a5)+,d0
00025D38 <AmiBlitz3.ab3@8379>   CMP.b d1,d0
00025D3C <AmiBlitz3.ab3@8380>   BEQ 'll10
00025D3E <AmiBlitz3.ab3@8381>   TST.b d0
00025D42 <AmiBlitz3.ab3@8382>   BNE 'll20
00025D44 <AmiBlitz3.ab3@8385>   SUBQ #1,a5
00025D46 <AmiBlitz3.ab3@8386> RTS
00025D48 <AmiBlitz3.ab3@8391>   MOVE.b (a5)+,d0
00025D4C <AmiBlitz3.ab3@8392>   CMP.b #",",d0
00025D50 <AmiBlitz3.ab3@8393>   BEQ 'll10
00025D54 <AmiBlitz3.ab3@8394>   CMP.b #";",d0
00025D58 <AmiBlitz3.ab3@8395>   BEQ 'll10
00025D5C <AmiBlitz3.ab3@8396>  CMP.b #":",d0
00025D60 <AmiBlitz3.ab3@8397>   BEQ 'll10
00025D62 <AmiBlitz3.ab3@8400>   TST.b d0
00025D66 <AmiBlitz3.ab3@8401>   BNE 'll20
00025D68 <AmiBlitz3.ab3@8404>   SUBQ #1,a5
00025D6A <AmiBlitz3.ab3@8405> RTS
00025D6C <AmiBlitz3.ab3@8409>   ADD.l a2,d1
00025D72 <AmiBlitz3.ab3@8410>   LEA tempspace,a1
00025D74 <AmiBlitz3.ab3@8411>   MOVE.l d1,a0
00025D76 <AmiBlitz3.ab3@8414>   MOVE.b (a0)+,(a1)+
00025D7A <AmiBlitz3.ab3@8415>   BNE.s 'l10
00025D7C <AmiBlitz3.ab3@8416>   SUBQ.l #1,a0
00025D7E <AmiBlitz3.ab3@8417>   SUBQ.l #1,a1
00025D80 <AmiBlitz3.ab3@8420>   MOVE.b (a5)+,(a1)+
00025D84 <AmiBlitz3.ab3@8421>   BNE.s 'l20
00025D86 <AmiBlitz3.ab3@8422>   CLR.b (a1)
00025D8C <AmiBlitz3.ab3@8423>   LEA tempspace,a5
00025D8E <AmiBlitz3.ab3@8424> RTS
00025D92 <AmiBlitz3.ab3@8428>   MOVEM.l D1-D2/A0,-(A7)
00025D94 <AmiBlitz3.ab3@8429>   MOVE.l d0,d2
00025D96 <AmiBlitz3.ab3@8430>   MOVEQ #0,d1
00025D98 <AmiBlitz3.ab3@8431>   MOVE.l a5,a4
00025D9A <AmiBlitz3.ab3@8434>   ADDQ.l #1,d1
00025D9C <AmiBlitz3.ab3@8435>   MOVE.b (a5)+,d0
00025DA0 <AmiBlitz3.ab3@8436>   CMP.b #",",d0
00025DA4 <AmiBlitz3.ab3@8437>   BEQ 'll10
00025DA8 <AmiBlitz3.ab3@8438>   CMP.b #";",d0
00025DAC <AmiBlitz3.ab3@8439>   BEQ 'll10
00025DB0 <AmiBlitz3.ab3@8440>   CMP.b #":",d0
00025DB4 <AmiBlitz3.ab3@8441>   BEQ 'll10
00025DB8 <AmiBlitz3.ab3@8442>   CMP.b #"(",d0
00025DBC <AmiBlitz3.ab3@8443>   BEQ 'll10
00025DBE <AmiBlitz3.ab3@8444>   TST.b d0
00025DC2 <AmiBlitz3.ab3@8445>   BNE 'll20
00025DC4 <AmiBlitz3.ab3@8448>   SUBQ #1,a5
00025DC8 <AmiBlitz3.ab3@8449>   CMP.b #"'",(a4)
00025DCC <AmiBlitz3.ab3@8450>   BEQ 'llocal
00025DD2 <AmiBlitz3.ab3@8451>   TST.w inmacro
00025DD6 <AmiBlitz3.ab3@8452>   BNE 'lmacro
00025DD8 <AmiBlitz3.ab3@8453>   MOVEQ.l #$14+4,D0
00025DDA <AmiBlitz3.ab3@8454>   ADD.l d1,d0
00025DDC <AmiBlitz3.ab3@8455>   MOVE.l d1,-(a7)
00025DDE <AmiBlitz3.ab3@8456>   MOVEQ.l #$01,D1
00025DE4 <AmiBlitz3.ab3@8457>   MOVEA.l _execbase,A6
00025DEA <AmiBlitz3.ab3@8458>   MOVE.l mempool2,a0
00025DEE <AmiBlitz3.ab3@8459>   JSR _AllocPooled(a6)
00025DF0 <AmiBlitz3.ab3@8461>   MOVE.l (a7)+,d1
00025DF2 <AmiBlitz3.ab3@8462>   TST.l d0
00025DF6 <AmiBlitz3.ab3@8463>   BEQ nomemory
00025DF8 <AmiBlitz3.ab3@8464>   MOVEA.l D0,A0
00025E00 <AmiBlitz3.ab3@8466>   MOVE.w linenumat+2,$A(A0)
00025E06 <AmiBlitz3.ab3@8468>   MOVE.l templabel,(A0)
00025E0C <AmiBlitz3.ab3@8469>   MOVE.l A0,templabel
00025E14 <AmiBlitz3.ab3@8470>   MOVE.l destpointer,$4(A0)
00025E18 <AmiBlitz3.ab3@8471>   MOVE.l d2,$8(A0)
00025E1C <AmiBlitz3.ab3@8472>   LEA $E(A0),A0
00025E20 <AmiBlitz3.ab3@8473>   MOVE.b #$14,(A0)+
00025E22 <AmiBlitz3.ab3@8474>   CLR.b (a0)+
00025E24 <AmiBlitz3.ab3@8476>   MOVE.l a0,d2
00025E26 <AmiBlitz3.ab3@8477>   ADDQ.l #4,d2
00025E28 <AmiBlitz3.ab3@8478>   MOVE.l d2,(a0)+
00025E2A <AmiBlitz3.ab3@8481>   MOVE.b (a4)+,(a0)+
00025E2C <AmiBlitz3.ab3@8482>   SUBQ.l #1,d1
00025E30 <AmiBlitz3.ab3@8483>   BNE 'lc1
00025E32 <AmiBlitz3.ab3@8484>   CLR.b (a0)+
00025E38 <AmiBlitz3.ab3@8485>   MOVE.w linenumat,(a0)
00025E3C <AmiBlitz3.ab3@8486>   MOVEM.l (A7)+,D1-D2/A0
00025E3E <AmiBlitz3.ab3@8487>  RTS
00025E40 <AmiBlitz3.ab3@8490>   MOVEQ.l #$10+2,D0
00025E42 <AmiBlitz3.ab3@8491>   ADD.l d1,d0
00025E46 <AmiBlitz3.ab3@8492>   MOVEM.l a4/d3,-(a7)
00025E48 <AmiBlitz3.ab3@8493>   MOVE.l d1,d3
00025E4A <AmiBlitz3.ab3@8494>   MOVEQ.l #$01,D1
00025E50 <AmiBlitz3.ab3@8495>   MOVEA.l _execbase,A6
00025E56 <AmiBlitz3.ab3@8496>   MOVE.l mempool2,a0
00025E5A <AmiBlitz3.ab3@8497>   JSR _AllocPooled(a6)
00025E5C <AmiBlitz3.ab3@8499>   TST.l d0
00025E60 <AmiBlitz3.ab3@8500>   BEQ nomemory
00025E62 <AmiBlitz3.ab3@8501>   MOVEA.l D0,A0
00025E6A <AmiBlitz3.ab3@8504>   MOVE.w linenumat+2,$C(A0)
00025E70 <AmiBlitz3.ab3@8505>   MOVE.l templabel,(A0)
00025E76 <AmiBlitz3.ab3@8506>   MOVE.l A0,templabel
00025E7E <AmiBlitz3.ab3@8507>   MOVE.l destpointer,$4(A0)
00025E82 <AmiBlitz3.ab3@8508>   MOVE.l d2,$8(A0)
00025E86 <AmiBlitz3.ab3@8509>   LEA $E(A0),A0
00025E88 <AmiBlitz3.ab3@8510>   MOVE.b d3,(A0)+
00025E8E <AmiBlitz3.ab3@8511>   ADD.b #$10,-1(a0)
00025E92 <AmiBlitz3.ab3@8512>   MOVE.b #$1,(a0)+
00025E94 <AmiBlitz3.ab3@8513>   SUBQ.w #1,d3
00025E96 <AmiBlitz3.ab3@8516>   MOVE.b (a4)+,(a0)+
00025E98 <AmiBlitz3.ab3@8517>   SUBQ.l #1,d3
00025E9C <AmiBlitz3.ab3@8518>   BNE.s 'lm2
00025E9E <AmiBlitz3.ab3@8519>   CLR.b (a0)+
00025EA4 <AmiBlitz3.ab3@8520>   MOVE.w linenumat,(a0)
00025EA8 <AmiBlitz3.ab3@8521>   MOVEM.l (a7)+,d3/a4
00025EAC <AmiBlitz3.ab3@8522>   MOVEM.l (A7)+,D1-D2/A0
00025EAE <AmiBlitz3.ab3@8523>  RTS
00025EB4 <AmiBlitz3.ab3@8526>   LEA lastgloballabel,a1
00025EB6 <AmiBlitz3.ab3@8529>   ADDQ.l #1,d1
00025EB8 <AmiBlitz3.ab3@8530>   TST.b (a1)+
00025EBC <AmiBlitz3.ab3@8531>   BNE.s 'll11
00025EBE <AmiBlitz3.ab3@8532>   MOVEQ.l #$10+2,D0
00025EC0 <AmiBlitz3.ab3@8533>   ADD.l d1,d0
00025EC4 <AmiBlitz3.ab3@8534>   MOVEM.l a4/d3,-(a7)
00025EC6 <AmiBlitz3.ab3@8535>   MOVE.l d1,d3
00025EC8 <AmiBlitz3.ab3@8536>   MOVEQ.l #$01,D1
00025ECE <AmiBlitz3.ab3@8537>   MOVEA.l _execbase,A6
00025ED4 <AmiBlitz3.ab3@8538>   MOVE.l mempool2,a0
00025ED8 <AmiBlitz3.ab3@8539>   JSR _AllocPooled(a6)
00025EDA <AmiBlitz3.ab3@8541>   TST.l d0
00025EDE <AmiBlitz3.ab3@8542>   BEQ nomemory
00025EE0 <AmiBlitz3.ab3@8543>   MOVEA.l D0,A0
00025EE8 <AmiBlitz3.ab3@8546>   MOVE.w linenumat+2,$C(A0)
00025EEE <AmiBlitz3.ab3@8547>   MOVE.l templabel,(A0)
00025EF4 <AmiBlitz3.ab3@8548>   MOVE.l A0,templabel
00025EFC <AmiBlitz3.ab3@8549>   MOVE.l destpointer,$4(A0)
00025F00 <AmiBlitz3.ab3@8550>   MOVE.l d2,$8(A0)
00025F04 <AmiBlitz3.ab3@8551>   LEA $E(A0),A0
00025F06 <AmiBlitz3.ab3@8552>   MOVE.b d3,(A0)+
00025F0C <AmiBlitz3.ab3@8553>   ADD.b #$10,-1(a0)
00025F10 <AmiBlitz3.ab3@8554>   MOVE.b #$1,(a0)+
00025F12 <AmiBlitz3.ab3@8555>   SUBQ.w #1,d3
00025F18 <AmiBlitz3.ab3@8556>   LEA lastgloballabel,a1
00025F1A <AmiBlitz3.ab3@8559>   SUBQ.l #1,d3
00025F1C <AmiBlitz3.ab3@8560>   MOVE.b (a1)+,(a0)+
00025F20 <AmiBlitz3.ab3@8561>   BNE.s 'lm3
00025F22 <AmiBlitz3.ab3@8562>   SUBQ.l #1,a0
00025F24 <AmiBlitz3.ab3@8565>   MOVE.b (a4)+,(a0)+
00025F26 <AmiBlitz3.ab3@8566>   SUBQ.l #1,d3
00025F2A <AmiBlitz3.ab3@8567>   BNE.s 'lm1
00025F2C <AmiBlitz3.ab3@8568>   CLR.b (a0)+
00025F32 <AmiBlitz3.ab3@8569>   MOVE.w linenumat,(a0)
00025F36 <AmiBlitz3.ab3@8570>   MOVEM.l (a7)+,d3/a4
00025F3A <AmiBlitz3.ab3@8571>   MOVEM.l (A7)+,D1-D2/A0
00025F3C <AmiBlitz3.ab3@8572> RTS
00025F66 <AmiBlitz3.ab3@8576>   !basic
00025FC8 <AmiBlitz3.ab3@8577>   error{!TRANS{"No memory available!!!\\nAB3 will terminate due to low memory!"}}
00025FDA <AmiBlitz3.ab3@8578>   loop Delay_ 1
00025FE0 <AmiBlitz3.ab3@8579> Goto loop
00025FE4 <AmiBlitz3.ab3@8583>   MOVEM.l D0-D2/A0,-(A7)
00025FE8 <AmiBlitz3.ab3@8584>   MOVE.w $E(A0),-(A7)
00025FEC <AmiBlitz3.ab3@8585>    BPL.w 'ok
00025FEE <AmiBlitz3.ab3@8586>   CLR.w (A7)
00025FF0 <AmiBlitz3.ab3@8589>   MOVE.l A1,-(A7)
00025FF2 <AmiBlitz3.ab3@8590>   MOVEQ.l #$10+2,D0
00025FF8 <AmiBlitz3.ab3@8591>   ADD.w asmlen,D0
00025FFA <AmiBlitz3.ab3@8592>   MOVE.w D0,D2
00025FFC <AmiBlitz3.ab3@8593>   MOVEQ.l #$01,D1
00026002 <AmiBlitz3.ab3@8594>   MOVEA.l _execbase,A6
00026008 <AmiBlitz3.ab3@8595>   MOVE.l mempool2,a0
0002600C <AmiBlitz3.ab3@8596>   JSR _AllocPooled(a6)
0002600E <AmiBlitz3.ab3@8598>   MOVEA.l D0,A0
00026016 <AmiBlitz3.ab3@8601>   MOVE.w linenumat+2,$C(A0)
0002601C <AmiBlitz3.ab3@8602>   MOVE.l templabel,(A0)
00026022 <AmiBlitz3.ab3@8603>   MOVE.l A0,templabel
00026026 <AmiBlitz3.ab3@8604>   MOVE.l (A7),$4(A0)
0002602A <AmiBlitz3.ab3@8605>   MOVE.w d3,$8(A0)
00026030 <AmiBlitz3.ab3@8606>   MOVE.w $4(A7),$A(A0)
00026034 <AmiBlitz3.ab3@8607>   LEA $E(A0),A0
00026036 <AmiBlitz3.ab3@8608>   MOVE.b D2,(A0)+                                           ;length
0002603C <AmiBlitz3.ab3@8609>   MOVEA.l asmbuff,A1
0002603E <AmiBlitz3.ab3@8610>   ADDQ.w #1,A1
00026040 <AmiBlitz3.ab3@8611>   MOVE.b (A1)+,(A0)+                                        ;type - 0 = indirect,else direct
00026044 <AmiBlitz3.ab3@8612>    BNE.w 'loop
00026046 <AmiBlitz3.ab3@8613>   MOVE.l (A1)+,(A0)+
0002604C <AmiBlitz3.ab3@8614>   MOVE.w linenumat,(a0)
00026050 <AmiBlitz3.ab3@8615>  BRA.w 'loopdone
00026052 <AmiBlitz3.ab3@8618>    MOVE.b (A1)+,(A0)+
00026056 <AmiBlitz3.ab3@8619>    BNE.w 'loop
0002605C <AmiBlitz3.ab3@8620>    MOVE.w linenumat,(a0)
0002605E <AmiBlitz3.ab3@8623>   MOVEA.l (A7)+,A1
00026060 <AmiBlitz3.ab3@8624>   ADDQ.w #2,A7
00026064 <AmiBlitz3.ab3@8625>   MOVEM.l (A7)+,D0-D2/A0
00026066 <AmiBlitz3.ab3@8626> RTS
0002606A <AmiBlitz3.ab3@8630>   CMP.w #$5,D3
0002606E <AmiBlitz3.ab3@8631>    BCS.w 'done
00026072 <AmiBlitz3.ab3@8632>   CMP.w #$B,D3
00026076 <AmiBlitz3.ab3@8633>    BHI.w 'done2
0002607A <AmiBlitz3.ab3@8634>    BEQ.w 'imm
0002607E <AmiBlitz3.ab3@8635>    BSR.w insasm
00026082 <AmiBlitz3.ab3@8636>   CMP.w #$5,D3
00026086 <AmiBlitz3.ab3@8637>    BEQ.w 'word
0002608A <AmiBlitz3.ab3@8638>   CMP.w #$6,D3
0002608E <AmiBlitz3.ab3@8639>    BEQ.w 'dxi
00026092 <AmiBlitz3.ab3@8640>   CMP.w #$7,D3
00026096 <AmiBlitz3.ab3@8641>    BEQ.w 'word
0002609A <AmiBlitz3.ab3@8642>   CMP.w #$8,D3
0002609E <AmiBlitz3.ab3@8643>    BEQ.w 'long
000260A2 <AmiBlitz3.ab3@8644>   CMP.w #$9,D3
000260A6 <AmiBlitz3.ab3@8645>    BEQ.w 'word
000260AC <AmiBlitz3.ab3@8649>   CMPA.l destbufferend,A1
000260B0 <AmiBlitz3.ab3@8650>    BCS.w 'ok7
000260B2 <AmiBlitz3.ab3@8651>   ADDQ.w #2,A1
000260B4 <AmiBlitz3.ab3@8652>  RTS
000260B6 <AmiBlitz3.ab3@8655>   MOVE.w D4,(A1)+
000260B8 <AmiBlitz3.ab3@8656>  RTS
000260C0 <AmiBlitz3.ab3@8659>   CMPI.w #$8,asmsize
000260C4 <AmiBlitz3.ab3@8660>    BCC.w 'immlong
000260C6 <AmiBlitz3.ab3@8661>   MOVEQ.l #$10,D3
000260CA <AmiBlitz3.ab3@8662>    BSR.w insasm
000260CC <AmiBlitz3.ab3@8663>   MOVEQ.l #$0B,D3
000260D0 <AmiBlitz3.ab3@8664>  BRA.w 'word
000260D4 <AmiBlitz3.ab3@8667>   BSR.w insasm
000260D6 <AmiBlitz3.ab3@8670>   ADDQ.w #2,A1
000260D8 <AmiBlitz3.ab3@8673>   ADDQ.w #2,A1
000260DA <AmiBlitz3.ab3@8674>  RTS
000260DE <AmiBlitz3.ab3@8677>   CMP.w #$F,D3
000260E2 <AmiBlitz3.ab3@8678>    BNE.w 'done
000260E8 <AmiBlitz3.ab3@8679>   CMPA.l destbufferend,A1
000260EC <AmiBlitz3.ab3@8680>    BCS.w 'ok3
000260EE <AmiBlitz3.ab3@8681>   ADDQ.w #2,A1
000260F0 <AmiBlitz3.ab3@8682>   ADDQ.w #4,A7
000260F2 <AmiBlitz3.ab3@8683>  RTS
000260F4 <AmiBlitz3.ab3@8686>   MOVE.w D2,(A1)+
000260F6 <AmiBlitz3.ab3@8687>   ADDQ.w #4,A7
000260F8 <AmiBlitz3.ab3@8690> RTS
000260FC <AmiBlitz3.ab3@8699>   BSR.w storeloc
00026106 <AmiBlitz3.ab3@8701>   MOVE.l linenumat,oldline
00026108 <AmiBlitz3.ab3@8703>   MOVEQ.l #$00,D1
0002610C <AmiBlitz3.ab3@8704>    BSR.w get1bytemain    ;eol?
00026110 <AmiBlitz3.ab3@8705>    BEQ.w 'done
00026112 <AmiBlitz3.ab3@8706>   MOVEQ.l #$00,D3
00026116 <AmiBlitz3.ab3@8707>  BRA.w 'skiphelp
0002611A <AmiBlitz3.ab3@8710>    BSR.w get1bytemain
0002611E <AmiBlitz3.ab3@8711>    BNE.w 'skip
00026120 <AmiBlitz3.ab3@8715>   TST.w D3
00026124 <AmiBlitz3.ab3@8716>    BNE.w brackets_                                         ;syntax error brackets
00026128 <AmiBlitz3.ab3@8717>  BRA.w 'done2
0002612E <AmiBlitz3.ab3@8720>    MOVE.w instringon,D4
00026132 <AmiBlitz3.ab3@8723>     BEQ 'skiphelp
00026134 <AmiBlitz3.ab3@8726>     MOVEQ #0,d0
00026136 <AmiBlitz3.ab3@8727>      MOVE.b (a5)+,d0                                       ;fix "ue"
0002613C <AmiBlitz3.ab3@8728>      MOVE.w d0,lastchar
00026140 <AmiBlitz3.ab3@8729>      BEQ 'ready
00026144 <AmiBlitz3.ab3@8730>      CMP.b #$22,d0
00026148 <AmiBlitz3.ab3@8731>      BNE 'l1
0002614E <AmiBlitz3.ab3@8732>      NOT.w instringon
00026152 <AmiBlitz3.ab3@8733>  BRA 'loop
00026156 <AmiBlitz3.ab3@8738>            CMP.b #"@",d0                                   ;expand line @@ 1. for parameter
0002615A <AmiBlitz3.ab3@8739>            BNE 'l10
0002615E <AmiBlitz3.ab3@8740>            CMP.b #"@",(a5)
00026162 <AmiBlitz3.ab3@8741>            BNE 'l10
00026168 <AmiBlitz3.ab3@8744>            TST.w ininclude
0002616C <AmiBlitz3.ab3@8745>            BNE 'inc
00026172 <AmiBlitz3.ab3@8746>            MOVE.l sourceline3,a5
00026178 <AmiBlitz3.ab3@8747>            CMP.l #0,a5
0002617C <AmiBlitz3.ab3@8748>            BNE 'l11t
00026182 <AmiBlitz3.ab3@8749>            MOVEA.l sourceline,A5
00026184 <AmiBlitz3.ab3@8752>            MOVEA.l (A5),A5
0002618A <AmiBlitz3.ab3@8753>            CMP.l #0,a5
0002618E <AmiBlitz3.ab3@8754>            BEQ 'done2
00026194 <AmiBlitz3.ab3@8755>            MOVE.l a5,sourceline3
00026198 <AmiBlitz3.ab3@8756>            LEA $9(A5),A5
0002619C <AmiBlitz3.ab3@8757>   BRA 'l11
0002619E <AmiBlitz3.ab3@8760>            ADDQ.l #1,a5
000261A0 <AmiBlitz3.ab3@8761>            TST.b (a5)
000261A4 <AmiBlitz3.ab3@8762>            BNE 'inc
000261A6 <AmiBlitz3.ab3@8766>            ADDQ.l #1,a5
000261A8 <AmiBlitz3.ab3@8767>            TST.b (a5)
000261AC <AmiBlitz3.ab3@8768>            BEQ illeolerr
000261AE <AmiBlitz3.ab3@8769>            MOVE.l a5,-(a7)
000261B2 <AmiBlitz3.ab3@8772>       CMP.b #" ",(a5)+
000261B6 <AmiBlitz3.ab3@8773>       BEQ 'l110
000261BC <AmiBlitz3.ab3@8774>        CMP.b #";",-1(a5)
000261BE <AmiBlitz3.ab3@8775>        MOVE.l (a7)+,a5
000261C2 <AmiBlitz3.ab3@8776>        BEQ 'l111
000261C6 <AmiBlitz3.ab3@8777>   BRA 'loop
000261CA <AmiBlitz3.ab3@8781>    CMP.w #$29,D0      ;')'
000261CE <AmiBlitz3.ab3@8782>    BNE.w 'skip2
000261D0 <AmiBlitz3.ab3@8783>   TST.w D3
000261D4 <AmiBlitz3.ab3@8784>    BEQ.w 'done2
000261D6 <AmiBlitz3.ab3@8787>   SUBQ.w #1,D3
000261DA <AmiBlitz3.ab3@8788>  BRA.w 'loop
000261DE <AmiBlitz3.ab3@8791>    CMP.w #$7D,D0      ;'}'
000261E2 <AmiBlitz3.ab3@8792>    BEQ.w 'skip3
000261E6 <AmiBlitz3.ab3@8793>   CMP.w #$28,D0       ;'('
000261EA <AmiBlitz3.ab3@8794>    BNE.w 'skip4a
000261EC <AmiBlitz3.ab3@8797>    ADDQ.w #1,D3
000261F0 <AmiBlitz3.ab3@8798>  BRA.w 'loop
000261F4 <AmiBlitz3.ab3@8801>   CMP.w #$7B,D0        ;'{'
000261F8 <AmiBlitz3.ab3@8802>    BEQ.w 'skip4
000261FC <AmiBlitz3.ab3@8803>   CMP.w #$2C,D0        ;','
00026200 <AmiBlitz3.ab3@8804>    BNE.w 'loop
00026202 <AmiBlitz3.ab3@8805>   TST.w D3
00026206 <AmiBlitz3.ab3@8806>    BNE.w 'loop
00026208 <AmiBlitz3.ab3@8807>   ADDQ.w #1,D1
0002620C <AmiBlitz3.ab3@8808>  BRA.w 'loop
0002620E <AmiBlitz3.ab3@8811>   ADDQ.w #1,D1
00026214 <AmiBlitz3.ab3@8815>   CLR.l sourceline3
0002621E <AmiBlitz3.ab3@8816>   MOVE.l oldline,linenumat
00026222 <AmiBlitz3.ab3@8818> BRA.w resloc
00026228 <AmiBlitz3.ab3@8831>    CLR.w numreps
0002622A <AmiBlitz3.ab3@8832>   MOVE.w D1,D0
0002622E <AmiBlitz3.ab3@8833>   ANDI.w #$FF00,D0
00026232 <AmiBlitz3.ab3@8834>    BEQ.w 'noreps
00026234 <AmiBlitz3.ab3@8835>   LSR.w #8,D0
00026236 <AmiBlitz3.ab3@8836>   LSR.w #4,D0           ;d0= start of reps
0002623A <AmiBlitz3.ab3@8837>    BEQ.w 'skip
0002623C <AmiBlitz3.ab3@8838>   SUB.b D0,D1           ;new number to fetch
00026246 <AmiBlitz3.ab3@8840>    MOVE.w regnum,regnumfunc
0002624C <AmiBlitz3.ab3@8841>    MOVE.b funcparloop,-(a7)
00026254 <AmiBlitz3.ab3@8842>    MOVE.b #0,funcparloop
0002625A <AmiBlitz3.ab3@8843>    MOVE.l leftsidetype,-(a7)
00026260 <AmiBlitz3.ab3@8844>    MOVE.l rightsidetype,-(a7)
00026266 <AmiBlitz3.ab3@8845>    MOVE.w leftsideflagmask,-(a7)
0002626C <AmiBlitz3.ab3@8846>    MOVE.w rightsideflagmask,-(a7)
00026272 <AmiBlitz3.ab3@8847>    CLR.l leftsidetype
00026278 <AmiBlitz3.ab3@8848>    CLR.l rightsidetype
0002627E <AmiBlitz3.ab3@8849>    CLR.w leftsideflagmask
00026284 <AmiBlitz3.ab3@8850>    CLR.w rightsideflagmask
0002628A <AmiBlitz3.ab3@8851>    MOVE.b blitzparloop,-(a7)
00026292 <AmiBlitz3.ab3@8852>    MOVE.b #1,blitzparloop
00026296 <AmiBlitz3.ab3@8854>    BSR.w fetchpees2      ;fetch first parms
0002629C <AmiBlitz3.ab3@8856>    MOVE.b (a7)+,blitzparloop
000262A2 <AmiBlitz3.ab3@8857>    MOVE.w (a7)+,rightsideflagmask
000262A8 <AmiBlitz3.ab3@8858>    MOVE.w (a7)+,leftsideflagmask
000262AE <AmiBlitz3.ab3@8859>    MOVE.l (a7)+,rightsidetype
000262B4 <AmiBlitz3.ab3@8860>    MOVE.l (a7)+,leftsidetype
000262BA <AmiBlitz3.ab3@8861>    MOVE.b (a7)+,funcparloop
000262BE <AmiBlitz3.ab3@8863>   CMP.w #$2C,D0          ;','
000262C2 <AmiBlitz3.ab3@8864>    BNE.w syntaxerr
000262C4 <AmiBlitz3.ab3@8869>   MOVE.w D1,D2
000262C6 <AmiBlitz3.ab3@8870>   LSR.w #8,D2
000262CA <AmiBlitz3.ab3@8871>   ANDI.w #$7,D2         ;# repeatable....
000262CC <AmiBlitz3.ab3@8874>    CMP.b D2,D1
000262D0 <AmiBlitz3.ab3@8875>    BCS.w 'repsdone      ;all reps done....
000262D2 <AmiBlitz3.ab3@8876>   SUB.b D2,D1
000262D6 <AmiBlitz3.ab3@8877>   MOVEM.l D2/A2,-(A7)
000262D8 <AmiBlitz3.ab3@8878>   MOVE.w D2,D0
000262DE <AmiBlitz3.ab3@8880>   MOVE.b funcparloop,-(a7)
000262E6 <AmiBlitz3.ab3@8881>   MOVE.b #0,funcparloop
000262EC <AmiBlitz3.ab3@8882>   MOVE.l leftsidetype,-(a7)
000262F2 <AmiBlitz3.ab3@8883>   MOVE.l rightsidetype,-(a7)
000262F8 <AmiBlitz3.ab3@8884>   MOVE.w leftsideflagmask,-(a7)
000262FE <AmiBlitz3.ab3@8885>   MOVE.w rightsideflagmask,-(a7)
00026304 <AmiBlitz3.ab3@8886>   CLR.l leftsidetype
0002630A <AmiBlitz3.ab3@8887>   CLR.l rightsidetype
00026310 <AmiBlitz3.ab3@8888>   CLR.w leftsideflagmask
00026316 <AmiBlitz3.ab3@8889>   CLR.w rightsideflagmask
0002631C <AmiBlitz3.ab3@8890>   MOVE.b blitzparloop,-(a7)
00026324 <AmiBlitz3.ab3@8891>   MOVE.b #1,blitzparloop
00026328 <AmiBlitz3.ab3@8893>   BSR.w fetchpees4
0002632E <AmiBlitz3.ab3@8895>   MOVE.b (a7)+,blitzparloop
00026334 <AmiBlitz3.ab3@8896>   MOVE.w (a7)+,rightsideflagmask
0002633A <AmiBlitz3.ab3@8897>   MOVE.w (a7)+,leftsideflagmask
00026340 <AmiBlitz3.ab3@8898>   MOVE.l (a7)+,rightsidetype
00026346 <AmiBlitz3.ab3@8899>   MOVE.l (a7)+,leftsidetype
0002634C <AmiBlitz3.ab3@8900>   MOVE.b (a7)+,funcparloop
00026350 <AmiBlitz3.ab3@8902>   MOVEM.l (A7)+,D2/A2
00026356 <AmiBlitz3.ab3@8903>   ADDQ.w #1,numreps
0002635A <AmiBlitz3.ab3@8904>  BRA.w 'rloop
00026360 <AmiBlitz3.ab3@8907>    MOVE.w numreps,D3
00026364 <AmiBlitz3.ab3@8908>    BEQ.w syntaxerr
00026366 <AmiBlitz3.ab3@8909>   ADDA.w D2,A2
0002636A <AmiBlitz3.ab3@8910>   ANDI.w #$FF,D1
0002636E <AmiBlitz3.ab3@8911>    BEQ.w 'done
00026372 <AmiBlitz3.ab3@8918>   CMP.w #$2C,D0       ;','
00026376 <AmiBlitz3.ab3@8919>    BNE.w syntaxerr
00026378 <AmiBlitz3.ab3@8922>    MOVE.w D1,D0
0002637C <AmiBlitz3.ab3@8923>    BNE.w 'fetchpees2b
0002637E <AmiBlitz3.ab3@8926>  RTS
00026384 <AmiBlitz3.ab3@8930>   MOVE.b funcparloop,-(a7)
0002638A <AmiBlitz3.ab3@8931>   MOVE.l leftsidetype,-(a7)
00026390 <AmiBlitz3.ab3@8932>   MOVE.l rightsidetype,-(a7)
00026396 <AmiBlitz3.ab3@8933>   MOVE.w leftsideflagmask,-(a7)
0002639C <AmiBlitz3.ab3@8934>   MOVE.w rightsideflagmask,-(a7)
000263A2 <AmiBlitz3.ab3@8935>   CLR.l leftsidetype
000263A8 <AmiBlitz3.ab3@8936>   CLR.l rightsidetype
000263AE <AmiBlitz3.ab3@8937>   CLR.w leftsideflagmask
000263B4 <AmiBlitz3.ab3@8938>   CLR.w rightsideflagmask
000263BC <AmiBlitz3.ab3@8939>   MOVE.b #0,funcparloop
000263C2 <AmiBlitz3.ab3@8940>   MOVE.b blitzparloop,-(a7)
000263CA <AmiBlitz3.ab3@8941>   MOVE.b #1,blitzparloop
000263CE <AmiBlitz3.ab3@8942>   BSR.w fetchpees2
000263D4 <AmiBlitz3.ab3@8943>   MOVE.b (a7)+,blitzparloop
000263DA <AmiBlitz3.ab3@8944>   MOVE.w (a7)+,rightsideflagmask
000263E0 <AmiBlitz3.ab3@8945>   MOVE.w (a7)+,leftsideflagmask
000263E6 <AmiBlitz3.ab3@8946>   MOVE.l (a7)+,rightsidetype
000263EC <AmiBlitz3.ab3@8947>   MOVE.l (a7)+,leftsidetype
000263F2 <AmiBlitz3.ab3@8948>   MOVE.b (a7)+,funcparloop
000263F4 <AmiBlitz3.ab3@8949> RTS
000263F8 <AmiBlitz3.ab3@8953> ptype:    Dc.b $3F,$3C,$00,$00                             ;MOVE.W  #$0000,-(A7)
000263FA <AmiBlitz3.ab3@8956> partostack:  Ds.w 1                                        ;pmode org source
000263FC <AmiBlitz3.ab3@8960>   MOVEQ.l #$01,D2
00026400 <AmiBlitz3.ab3@8961> BRA.w fetchpees3
00026402 <AmiBlitz3.ab3@8964>   MOVEQ.l #$00,D2
00026406 <AmiBlitz3.ab3@8967>   ANDI.w #$F,D0
0002640C <AmiBlitz3.ab3@8975>   CLR.w parnum
0002640E <AmiBlitz3.ab3@8976>   MOVE.w D1,-(A7)
00026412 <AmiBlitz3.ab3@8977>   MOVE.w partostack(PC),-(A7)                              ;in case of recursion
00026418 <AmiBlitz3.ab3@8978>   MOVE.w D2,partostack
0002641A <AmiBlitz3.ab3@8979>   MOVE.w D0,-(A7)
0002641E <AmiBlitz3.ab3@8980>   CMP.w #"@@",(a5)                                        
00026422 <AmiBlitz3.ab3@8981>   BNE 'loop                                      ;was 'l15
00026428 <AmiBlitz3.ab3@8982>   TST.w ininclude                                          ;merge macrolines
0002642C <AmiBlitz3.ab3@8983>   BNE errorjoin
00026432 <AmiBlitz3.ab3@8984>        MOVEA.l sourceline,A5
00026434 <AmiBlitz3.ab3@8987>            MOVEA.l (A5),A5
0002643A <AmiBlitz3.ab3@8988>            MOVE.l a5,sourceline
0002643E <AmiBlitz3.ab3@8989>            LEA $9(A5),A5
00026444 <AmiBlitz3.ab3@8990>            ADDQ.l #1,linenumat
00026446 <AmiBlitz3.ab3@8993>   MOVE.b (A2)+,D2                                          ;parameterloop   d2=vartype
0002644A <AmiBlitz3.ab3@8994>    BNE.w 'skip0
00026450 <AmiBlitz3.ab3@8995>   MOVE.w userp,D2                                          ;user selected type
00026452 <AmiBlitz3.ab3@8998>    MOVE.l A2,-(A7)
00026458 <AmiBlitz3.ab3@8999>    ADDQ.w #1,parnum
0002645E <AmiBlitz3.ab3@9000>    TST.b funccall
00026462 <AmiBlitz3.ab3@9001>    BEQ 'skip0_l1
0002646A <AmiBlitz3.ab3@9002>    CMP.w #6,parnum
0002646E <AmiBlitz3.ab3@9003>    BLE 'skip0_l1
00026472 <AmiBlitz3.ab3@9004>    CMP.w #7,d2
00026478 <AmiBlitz3.ab3@9010>    TST.b fpu
0002647C <AmiBlitz3.ab3@9011>    BEQ 'skip0_old
00026482 <AmiBlitz3.ab3@9012>    TST.w regnumfunc
00026486 <AmiBlitz3.ab3@9013>    BEQ 'skip0_old
0002648C <AmiBlitz3.ab3@9014>    CMP.w #$48e7,-4(a4)
00026490 <AmiBlitz3.ab3@9015>    BNE 'skip0_old
00026492 <AmiBlitz3.ab3@9016>    MOVEQ #0,d1
00026498 <AmiBlitz3.ab3@9017>    MOVE.w regnum,d1
0002649E <AmiBlitz3.ab3@9018>    CMP regnumfunc,d1                                       ;fpu reg function save
000264A2 <AmiBlitz3.ab3@9019>    BGE 'skip0_old
000264A4 <AmiBlitz3.ab3@9020>    ASL.w #7,d1
000264A6 <AmiBlitz3.ab3@9021>    MOVE.l d0,-(a7)
000264AC <AmiBlitz3.ab3@9022>    MOVE.w regnumfunc,d0
000264B2 <AmiBlitz3.ab3@9023>    CLR.w regmask
000264B8 <AmiBlitz3.ab3@9026>    BSET d0,regmask
000264BA <AmiBlitz3.ab3@9027>    SUBQ #1,d0
000264BE <AmiBlitz3.ab3@9028>    BNE 'skip0_loop
000264C0 <AmiBlitz3.ab3@9029>     MOVEQ #0,d0
000264C6 <AmiBlitz3.ab3@9032>       BTST d0,regmask
000264CA <AmiBlitz3.ab3@9033>       BEQ 'skip0_noa7
000264CC <AmiBlitz3.ab3@9034>       MOVEQ #0,d1
000264CE <AmiBlitz3.ab3@9035>       MOVE.w d0,d1
000264D0 <AmiBlitz3.ab3@9036>       SUBQ.w #1,d1
000264D2 <AmiBlitz3.ab3@9037>       ASL #7,d1
000264D8 <AmiBlitz3.ab3@9038>       OR.l #$f2277400,d1                                   ;fmove.d
000264DC <AmiBlitz3.ab3@9040>       BSR writelong
000264E2 <AmiBlitz3.ab3@9042>       ADDQ.l #2,stacktrack
000264E8 <AmiBlitz3.ab3@9043>       MOVE.l stacktrack,d1
000264EE <AmiBlitz3.ab3@9044>       CMP.l #180,d1
000264F2 <AmiBlitz3.ab3@9045>       BGT conmemerr                                        ;formel too complex
000264F4 <AmiBlitz3.ab3@9046>       MOVE.l a0,-(a7)
000264FA <AmiBlitz3.ab3@9047>       LEA fpustackbase,a0
00026502 <AmiBlitz3.ab3@9048>       MOVE.w regmask,0(a0,d1)
00026504 <AmiBlitz3.ab3@9049>       MOVE.l (a7)+,a0
00026506 <AmiBlitz3.ab3@9052>       ADDQ.w #1,d0
0002650C <AmiBlitz3.ab3@9053>       CMP.w regnumfunc,d0
00026510 <AmiBlitz3.ab3@9054>       BLE 'skip0_loop2
00026512 <AmiBlitz3.ab3@9057>       MOVE.l (a7)+,d0
00026518 <AmiBlitz3.ab3@9060>      MOVE.l currentfunccall,-(a7)
0002651E <AmiBlitz3.ab3@9061>      MOVE.w parnum,-(a7)
00026524 <AmiBlitz3.ab3@9062>      TST.l rightsidetype
00026528 <AmiBlitz3.ab3@9063>      BSR.w handlep
0002652E <AmiBlitz3.ab3@9064>      MOVE.w (a7)+,parnum
00026534 <AmiBlitz3.ab3@9066>    MOVE.l (a7)+,currentfunccall
0002653A <AmiBlitz3.ab3@9069>     TST.b typecheck                            ;typecheck for function call
0002653E <AmiBlitz3.ab3@9070>     BEQ 'notypecheck
00026544 <AmiBlitz3.ab3@9071>     TST.b notypecheck
00026548 <AmiBlitz3.ab3@9072>     BNE 'notypecheck
0002654E <AmiBlitz3.ab3@9073>     TST.b blitzparloop
00026552 <AmiBlitz3.ab3@9074>     BNE 'isblitzlibcall                                    ;no typecheck for blitzlibs currently
0002655C <AmiBlitz3.ab3@9075>     CMP.l #0,currentfunccall
00026560 <AmiBlitz3.ab3@9076>     BEQ 'isblitzlibcall
00026564 <AmiBlitz3.ab3@9077>     MOVEM.l a0/a1,-(a7)
0002656A <AmiBlitz3.ab3@9078>     MOVE.l currentfunccall,a0
00026570 <AmiBlitz3.ab3@9079>     MOVE.w parnum,d1
00026576 <AmiBlitz3.ab3@9080>     TST.b isconstantvalue
0002657A <AmiBlitz3.ab3@9081>     BEQ 'noconstant
00026584 <AmiBlitz3.ab3@9082>     CMP.l #0,lastconstantvalue
00026588 <AmiBlitz3.ab3@9083>     BEQ 'isnull
0002658C <AmiBlitz3.ab3@9086>     MOVE.l funcstruct_parametertype-4(a0,d1*4),a0
00026592 <AmiBlitz3.ab3@9087>     CMP.l #0,a0
00026596 <AmiBlitz3.ab3@9088>     BEQ 'notype
0002659E <AmiBlitz3.ab3@9089>     CMP.l #$100,4(a0)
000265A2 <AmiBlitz3.ab3@9090>     BLE 'notype
000265A8 <AmiBlitz3.ab3@9091>     MOVE.l lasttoken,d1
000265AC <AmiBlitz3.ab3@9092>     CMP.w #NullTokenID,d1                   ;$b581 ok, when token for null
000265B0 <AmiBlitz3.ab3@9093>     BEQ 'isnull
000265B6 <AmiBlitz3.ab3@9094>     TST.l typetocast
000265BA <AmiBlitz3.ab3@9095>     BEQ 'nocast
000265C0 <AmiBlitz3.ab3@9096>     MOVE.l typetocast,a1
000265C4 <AmiBlitz3.ab3@9097>     BRA 'typecheck
000265CA <AmiBlitz3.ab3@9100>     MOVE.l rightsidetype,a1
000265D0 <AmiBlitz3.ab3@9101>     CMP.l #0,a1
000265D4 <AmiBlitz3.ab3@9102>     BEQ 'notype
000265DC <AmiBlitz3.ab3@9104>   'typecheck   CMP.l #$100,4(a1)
000265DE <AmiBlitz3.ab3@9106>     CMP.l a0,a1
000265E2 <AmiBlitz3.ab3@9107>     BEQ 'ok
000265EA <AmiBlitz3.ab3@9109>     CMP.l #$100,4(a1)                 ; is a type here
000265EE <AmiBlitz3.ab3@9110>     BLE 'error
000265F2 <AmiBlitz3.ab3@9111>     MOVE.l 4(a1),a1                   ; load the address of type.
000265F6 <AmiBlitz3.ab3@9112>     CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
000265FA <AmiBlitz3.ab3@9113>     BEQ 'ok
00026600 <AmiBlitz3.ab3@9116>    JMP error_convert_types            ; for syntax 4
00026606 <AmiBlitz3.ab3@9121>     CLR.l typetocast
0002660A <AmiBlitz3.ab3@9122>     MOVEM.l (a7)+,a0/a1
00026610 <AmiBlitz3.ab3@9128>    CLR.l lastfunction
00026616 <AmiBlitz3.ab3@9129>    TST.b fpu
0002661A <AmiBlitz3.ab3@9130>    BEQ 'skip0_noprint
0002661C <AmiBlitz3.ab3@9131>   MOVE.l (a7),a2
0002661E <AmiBlitz3.ab3@9132>   ADDQ.l #1,a2
00026622 <AmiBlitz3.ab3@9133>    CMP.b #5,d2
00026626 <AmiBlitz3.ab3@9134>   BNE 'skip0_noprint
0002662C <AmiBlitz3.ab3@9135>   CMP.b #$5d,24(a2)
00026630 <AmiBlitz3.ab3@9136>   BNE 'skip0_noprint
00026636 <AmiBlitz3.ab3@9137>   CMP.b #$81,25(a2)
0002663A <AmiBlitz3.ab3@9138>   BLT 'skip0_noprint
00026640 <AmiBlitz3.ab3@9139>   CMP.b #$86,25(a2)
00026644 <AmiBlitz3.ab3@9140>   BEQ 'skip0_ok
0002664A <AmiBlitz3.ab3@9141>   CMP.b #$87,25(a2)
0002664E <AmiBlitz3.ab3@9142>   BEQ 'skip0_ok
00026654 <AmiBlitz3.ab3@9143>   CMP.b #$88,25(a2)
00026658 <AmiBlitz3.ab3@9144>   BEQ 'skip0_ok
0002665E <AmiBlitz3.ab3@9145>   CMP.b #$83,25(a2)
00026662 <AmiBlitz3.ab3@9146>   BGT 'skip0_noprint
00026668 <AmiBlitz3.ab3@9149>   MOVE.l destpointer,a4
0002666E <AmiBlitz3.ab3@9150>   CMP.w #$2f00,-2(a4)
00026672 <AmiBlitz3.ab3@9151>   BNE 'skip0_noprint
00026678 <AmiBlitz3.ab3@9152>   SUBQ.l #2,destpointer
0002667E <AmiBlitz3.ab3@9154>   MOVE.l #$f2277400,d1
00026682 <AmiBlitz3.ab3@9155>   BSR writelong                                            ;fmove.d fp0,-(a7)
00026688 <AmiBlitz3.ab3@9156>   ADDQ #4,a2offset
0002668E <AmiBlitz3.ab3@9173>   CLR.b optistring
00026690 <AmiBlitz3.ab3@9174>   MOVEA.l (A7)+,A2
00026694 <AmiBlitz3.ab3@9175>    CMP.w #"@",d0
00026698 <AmiBlitz3.ab3@9176>   BNE 'skip0_l10
0002669C <AmiBlitz3.ab3@9177>    CMP.b #"@",(a5)
000266A0 <AmiBlitz3.ab3@9178>   BNE 'skip0_l10
000266A6 <AmiBlitz3.ab3@9179>   TST.w ininclude
000266AA <AmiBlitz3.ab3@9180>   BNE errorjoin
000266B0 <AmiBlitz3.ab3@9181>   MOVEA.l sourceline,A5
000266B2 <AmiBlitz3.ab3@9182>            MOVEA.l (A5),A5
000266B8 <AmiBlitz3.ab3@9183>            MOVE.l a5,sourceline
000266BE <AmiBlitz3.ab3@9184>            ADDQ.l #1,linenumat
000266C2 <AmiBlitz3.ab3@9185>            LEA $9(A5),A5
000266C4 <AmiBlitz3.ab3@9186>            MOVEQ #0,d0
000266C8 <AmiBlitz3.ab3@9187>            BSR get1bytemain
000266CC <AmiBlitz3.ab3@9190>    CMP.b #32,(a5)+ ;for space after a ,
000266D0 <AmiBlitz3.ab3@9191>    BEQ 'skip0_l10:
000266D2 <AmiBlitz3.ab3@9192>    SUBQ.l #1,a5
000266D6 <AmiBlitz3.ab3@9194>    CMP.w #"@@",(a5)                                        ;if merge
000266DA <AmiBlitz3.ab3@9195>    BNE 'skip0_l15
000266DE <AmiBlitz3.ab3@9196>    MOVEM.l d0-d7/a0-a4/a6,-(a7)
000266E4 <AmiBlitz3.ab3@9197>    JSR mergeline
000266E8 <AmiBlitz3.ab3@9198>    MOVEM.l (a7)+,d0-d7/a0-a4/a6
000266EA <AmiBlitz3.ab3@9218>       SUBQ.w #1,(A7)
000266EE <AmiBlitz3.ab3@9219>    BEQ.w 'done
000266F2 <AmiBlitz3.ab3@9221>     CMP.w #$2C,D0
000266F6 <AmiBlitz3.ab3@9223>    BNE 'overloadfunc
000266FA <AmiBlitz3.ab3@9224>  BRA.w 'loop
000266FC <AmiBlitz3.ab3@9227>   ADDQ.w #2,A7
00026702 <AmiBlitz3.ab3@9228>   MOVE.w (A7)+,partostack
00026704 <AmiBlitz3.ab3@9229>   MOVE.w (A7)+,D1
0002670A <AmiBlitz3.ab3@9230>   CLR.b isconstantvalue
00026714 <AmiBlitz3.ab3@9231>   MOVE.l currentfunccall,lastfunction
0002671A <AmiBlitz3.ab3@9232>   CLR.b funccall
00026720 <AmiBlitz3.ab3@9233>   CLR.l currentfunccall
00026722 <AmiBlitz3.ab3@9234>  RTS
00026728 <AmiBlitz3.ab3@9237>   CLR.b funccall
0002672E <AmiBlitz3.ab3@9238>   MOVE.w regnum,d1
00026734 <AmiBlitz3.ab3@9239>   MOVE.l currentfunccall,a4
00026738 <AmiBlitz3.ab3@9240>   CMP.b $20(a4),d1                                         ;increase if more pars
0002673C <AmiBlitz3.ab3@9241>   BLT notparerr
0002673E <AmiBlitz3.ab3@9244>   MOVE.b (a2)+,d2
00026746 <AmiBlitz3.ab3@9245>   ADD.w #1,parnum
0002674C <AmiBlitz3.ab3@9246>   TST.b fpu
00026750 <AmiBlitz3.ab3@9247>   BEQ 'nofpu
00026754 <AmiBlitz3.ab3@9248>   CMP.b #5,d2
00026758 <AmiBlitz3.ab3@9249>   BNE 'nofpu
0002675A <AmiBlitz3.ab3@9250>   MOVEQ #0,d1
00026760 <AmiBlitz3.ab3@9251>   MOVE.w regnum,d1
00026768 <AmiBlitz3.ab3@9252>   CMP.w #6,regnum
0002676C <AmiBlitz3.ab3@9253>   BLT 'nostack2
00026770 <AmiBlitz3.ab3@9260>   MOVE.w #$2c3c,d1
00026774 <AmiBlitz3.ab3@9261>   BSR writeword
0002677A <AmiBlitz3.ab3@9262>   MOVE.l #$bf800000,d1
0002677E <AmiBlitz3.ab3@9263>   BSR writelong
00026782 <AmiBlitz3.ab3@9264>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
00026788 <AmiBlitz3.ab3@9265>   ADD.w parnum,d1
0002678E <AmiBlitz3.ab3@9266>   JSR Atokejsr
00026794 <AmiBlitz3.ab3@9267>   TST.w dontwrite_nomemleft
00026798 <AmiBlitz3.ab3@9268>   BNE 'l1
0002679E <AmiBlitz3.ab3@9269>   MOVE.l data1start,d1
000267A4 <AmiBlitz3.ab3@9270>   MOVE.l destpointer,a4
000267A8 <AmiBlitz3.ab3@9271>   ADD.l d1,-4(a4)
000267AE <AmiBlitz3.ab3@9272>   MOVE.l destpointer,d1
000267B0 <AmiBlitz3.ab3@9273>   SUBQ.l #4,d1
000267B6 <AmiBlitz3.ab3@9274>   SUB.l destbufferstart,d1
000267B8 <AmiBlitz3.ab3@9275>   MOVE.l d2,-(a7)
000267BA <AmiBlitz3.ab3@9276>   MOVE.l d1,d2
000267C0 <AmiBlitz3.ab3@9277>   JSR addhunkoffset
000267C2 <AmiBlitz3.ab3@9278>   MOVE.l (a7)+,d2
000267C6 <AmiBlitz3.ab3@9279>  BRA 'l1
000267C8 <AmiBlitz3.ab3@9282>   ASL.l #7,d1
000267CE <AmiBlitz3.ab3@9283>   OR.l #$F23C5000,d1                                       ;fmove.w #-1,fpx
000267D2 <AmiBlitz3.ab3@9284>   BSR writelong
000267D4 <AmiBlitz3.ab3@9285>   MOVEQ #-1,d1                                             ;-1
000267D8 <AmiBlitz3.ab3@9286>   BSR writeword
000267DC <AmiBlitz3.ab3@9287>  BRA 'l1
000267E2 <AmiBlitz3.ab3@9290>   MOVE.w regnum,d1
000267EA <AmiBlitz3.ab3@9291>   CMP.w #6,regnum
000267EE <AmiBlitz3.ab3@9292>   BLT 'nostack
000267F2 <AmiBlitz3.ab3@9297>   CMP.b #2,d2
000267F6 <AmiBlitz3.ab3@9298>   BGT 'nw
000267FA <AmiBlitz3.ab3@9299>  BRA 'nos
000267FE <AmiBlitz3.ab3@9308>   CMP.w #7,d2
00026802 <AmiBlitz3.ab3@9309>   BNE 'nos
00026808 <AmiBlitz3.ab3@9310>   ADDQ #4,a2offset
0002680E <AmiBlitz3.ab3@9313>     MOVE.l #$48780000,d1
00026812 <AmiBlitz3.ab3@9314>     BSR writelong
00026818 <AmiBlitz3.ab3@9315>     ADDQ.w #4,a2offset
0002681C <AmiBlitz3.ab3@9316>     MOVE.w #$2f3c,d1
00026820 <AmiBlitz3.ab3@9317>     BSR writeword
00026826 <AmiBlitz3.ab3@9318>     MOVE.l #-1,d1
0002682A <AmiBlitz3.ab3@9319>     BSR writelong
0002682E <AmiBlitz3.ab3@9320>    BRA 'l1
00026832 <AmiBlitz3.ab3@9324>   CMP.b #4,d2
00026836 <AmiBlitz3.ab3@9325>       BNE 'noq
0002683A <AmiBlitz3.ab3@9326>       MOVE.w #$2c3c,d1
0002683E <AmiBlitz3.ab3@9327>       BSR writeword
00026844 <AmiBlitz3.ab3@9328>       MOVE.l #$ffff0000,d1
00026848 <AmiBlitz3.ab3@9329>       BSR writelong
0002684C <AmiBlitz3.ab3@9330>  BRA 'noq2
00026850 <AmiBlitz3.ab3@9333>      CMP.b #5,d2
00026854 <AmiBlitz3.ab3@9334>      BNE 'nof
00026858 <AmiBlitz3.ab3@9335>       MOVE.w #$2c3c,d1
0002685C <AmiBlitz3.ab3@9336>       BSR writeword
00026862 <AmiBlitz3.ab3@9337>       MOVE.l #$800000c1,d1
00026866 <AmiBlitz3.ab3@9338>       BSR writelong
0002686A <AmiBlitz3.ab3@9339>  BRA 'noq2
0002686E <AmiBlitz3.ab3@9342>   MOVE.w #$7cff,d1
00026872 <AmiBlitz3.ab3@9343>   BSR writeword
00026876 <AmiBlitz3.ab3@9346>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0002687C <AmiBlitz3.ab3@9347>   ADD.w parnum,d1
00026882 <AmiBlitz3.ab3@9348>   JSR Atokejsr
00026888 <AmiBlitz3.ab3@9349>    TST.w dontwrite_nomemleft
0002688C <AmiBlitz3.ab3@9350>    BNE 'l1
00026892 <AmiBlitz3.ab3@9351>    MOVE.l data1start,d1
00026898 <AmiBlitz3.ab3@9352>    MOVE.l destpointer,a4
0002689C <AmiBlitz3.ab3@9353>    ADD.l d1,-4(a4)
000268A2 <AmiBlitz3.ab3@9354>    MOVE.l destpointer,d1
000268A4 <AmiBlitz3.ab3@9355>    SUBQ.l #4,d1
000268AA <AmiBlitz3.ab3@9356>    SUB.l destbufferstart,d1
000268AC <AmiBlitz3.ab3@9357>    MOVE.l d2,-(a7)
000268AE <AmiBlitz3.ab3@9358>    MOVE.l d1,d2
000268B4 <AmiBlitz3.ab3@9359>    JSR addhunkoffset
000268B6 <AmiBlitz3.ab3@9360>    MOVE.l (a7)+,d2
000268BA <AmiBlitz3.ab3@9361>  BRA 'l1
000268BC <AmiBlitz3.ab3@9364>   ASL.l #8,d1
000268BE <AmiBlitz3.ab3@9365>   ASL.l #1,d1
000268C4 <AmiBlitz3.ab3@9366>   OR.l #$203c,d1                                           ;-1
000268C8 <AmiBlitz3.ab3@9367>   BSR writeword
000268CE <AmiBlitz3.ab3@9368>   MOVE.l #-1,d1
000268D2 <AmiBlitz3.ab3@9369>   CMP.b #4,d2
000268D6 <AmiBlitz3.ab3@9370>   BNE 'nq1
000268DC <AmiBlitz3.ab3@9371>   MOVE.l #$ffff0000,d1
000268E0 <AmiBlitz3.ab3@9374>   CMP.b #5,d2
000268E4 <AmiBlitz3.ab3@9375>   BNE 'nof2
000268EA <AmiBlitz3.ab3@9376>   TST.b fpu
000268EE <AmiBlitz3.ab3@9377>   BNE 'nof2
000268F4 <AmiBlitz3.ab3@9378>   MOVE.l #$800000c1,d1
000268F8 <AmiBlitz3.ab3@9381>    BSR writelong
000268FC <AmiBlitz3.ab3@9382>    CMP.b #7,d2
00026900 <AmiBlitz3.ab3@9383>    BNE 'l1
00026906 <AmiBlitz3.ab3@9385>      MOVE.l #$48780000,d1
0002690A <AmiBlitz3.ab3@9386>      BSR writelong
00026910 <AmiBlitz3.ab3@9388>    ADDQ.w #4,a2offset                                      ; bug fix for string parameters
00026916 <AmiBlitz3.ab3@9389>    MOVE.l #$594f,d1                                        ; subq #4,a7
0002691A <AmiBlitz3.ab3@9390>    BSR writeword
0002691C <AmiBlitz3.ab3@9393>    SUBQ.w #1,(A7)
00026920 <AmiBlitz3.ab3@9394>    BEQ.w 'done
00026926 <AmiBlitz3.ab3@9395>    ADDQ.w #1,regnum
0002692A <AmiBlitz3.ab3@9396>  BRA 'ol2
0002692C <AmiBlitz3.ab3@9409>    MOVE.w D2,D1
00026930 <AmiBlitz3.ab3@9410>    ANDI.w #$40,D1          ;push bit
00026936 <AmiBlitz3.ab3@9411>    MOVE.b D1,partostack
00026938 <AmiBlitz3.ab3@9412>    TST.b D2
0002693C <AmiBlitz3.ab3@9413>     BMI.w handlevara
00026940 <AmiBlitz3.ab3@9414>    BTST #$5,D2
00026944 <AmiBlitz3.ab3@9415>     BNE.w handlearr
0002694A <AmiBlitz3.ab3@9420>     MOVE.w regnumstore,-(a7)
00026950 <AmiBlitz3.ab3@9421>     MOVE.w tempregnum,-(a7)
00026956 <AmiBlitz3.ab3@9422>     MOVE.w parnum,-(a7)
0002695A <AmiBlitz3.ab3@9424>     BSR.w getap                                        ;recursive entry
00026960 <AmiBlitz3.ab3@9426>     MOVE.w (a7)+,parnum
00026966 <AmiBlitz3.ab3@9427>     MOVE.w (a7)+,tempregnum
0002696C <AmiBlitz3.ab3@9428>     MOVE.w (a7)+,regnumstore
00026970 <AmiBlitz3.ab3@9434>     MOVE.w partostack(PC),D1
00026974 <AmiBlitz3.ab3@9435>     BEQ.w putapincreg
0002697A <AmiBlitz3.ab3@9439>    ADDQ.w #4,a2offset
00026980 <AmiBlitz3.ab3@9441>    MOVE.w pushdn,D1
00026986 <AmiBlitz3.ab3@9442>    OR.w regnum,D1      ;push long
0002698A <AmiBlitz3.ab3@9443>    CMP.w #$3,D2
0002698E <AmiBlitz3.ab3@9444>     BCC.w 'skip
00026994 <AmiBlitz3.ab3@9445>    SUBQ.w #2,a2offset
00026998 <AmiBlitz3.ab3@9446>    ORI.w #$1000,D1    ;push word only
0002699C <AmiBlitz3.ab3@9447>    BSR.w writeword
0002699E <AmiBlitz3.ab3@9448>  RTS
000269A2 <AmiBlitz3.ab3@9452>   CMP.b #7,d2
000269A6 <AmiBlitz3.ab3@9453>    BNE 'l10a
000269AE <AmiBlitz3.ab3@9454>    CMP.b #2,optistring
000269B4 <AmiBlitz3.ab3@9458>   TST.b iee
000269B8 <AmiBlitz3.ab3@9459>   BEQ 'olda
000269BC <AmiBlitz3.ab3@9460>   CMP.b #5,d2
000269C0 <AmiBlitz3.ab3@9461>   BNE 'olda
000269C4 <AmiBlitz3.ab3@9465>   BSR.w writeword                                          ;write val to stack
000269C6 <AmiBlitz3.ab3@9466>  RTS
000269CC <AmiBlitz3.ab3@9470>   SUBQ.w #4,a2offset
000269CE <AmiBlitz3.ab3@9471> RTS
000269D4 <AmiBlitz3.ab3@9476>   ADDQ.w #1,regnum
000269D6 <AmiBlitz3.ab3@9477> RTS
000269D8 <AmiBlitz3.ab3@9481>   MOVEQ.l #$03,D2
000269DC <AmiBlitz3.ab3@9482> BRA.w putap
000269E0 <AmiBlitz3.ab3@9488>   ANDI.w #$7,D2
000269E2 <AmiBlitz3.ab3@9489>   MOVE.w D2,-(A7)
000269E6 <AmiBlitz3.ab3@9491>    BSR.w ampersand2  ;ignore pnt to $
000269EA <AmiBlitz3.ab3@9493>   CMP.b #$7,D2                                             ;ignore pnt to $
000269EE <AmiBlitz3.ab3@9494>    BEQ.w 'nop2
000269F2 <AmiBlitz3.ab3@9496>   BTST #$E,D2
000269F6 <AmiBlitz3.ab3@9497>    BEQ.w 'nop
000269FA <AmiBlitz3.ab3@9498>   MOVE.b #$3,D2      ;pointer to long                                      ;pointer to long
000269FE <AmiBlitz3.ab3@9499>  BRA.w 'nop2
00026A00 <AmiBlitz3.ab3@9502>    TST.b D2
00026A04 <AmiBlitz3.ab3@9503>    BNE.w 'nop2
00026A08 <AmiBlitz3.ab3@9504>   MOVE.b #$3,D2
00026A0A <AmiBlitz3.ab3@9507>   MOVE.w (A7)+,D3
00026A0C <AmiBlitz3.ab3@9508>   TST.b D3
00026A10 <AmiBlitz3.ab3@9509>    BEQ.w 'unp
00026A12 <AmiBlitz3.ab3@9510>   CMP.b D2,D3
00026A16 <AmiBlitz3.ab3@9511>    BEQ.w putalp
00026A1A <AmiBlitz3.ab3@9512>  BRA.w mismatcherr
00026A20 <AmiBlitz3.ab3@9515>   ADDQ.w #2,a2offset
00026A24 <AmiBlitz3.ab3@9516>   MOVE.w ptype(PC),D1
00026A28 <AmiBlitz3.ab3@9517>    BSR.w writeword
00026A2A <AmiBlitz3.ab3@9518>   MOVEQ.l #$00,D1
00026A2C <AmiBlitz3.ab3@9519>   MOVE.b D2,D1
00026A30 <AmiBlitz3.ab3@9520>    BSR.w writeword
00026A34 <AmiBlitz3.ab3@9521> BRA.w putalp
00026A36 <AmiBlitz3.ab3@9525>    MOVE.w D2,-(A7)
00026A3A <AmiBlitz3.ab3@9526>    BSR.w baseadd
00026A40 <AmiBlitz3.ab3@9527>   BTST #$4,$1(A7)
00026A44 <AmiBlitz3.ab3@9528>    BEQ.w 'nohigh
00026A48 <AmiBlitz3.ab3@9529>    BSR.w highadd
00026A4E <AmiBlitz3.ab3@9532>    BTST #$3,$1(A7)
00026A52 <AmiBlitz3.ab3@9533>    BEQ.w 'notype
00026A56 <AmiBlitz3.ab3@9534>    BSR.w sendtype
00026A58 <AmiBlitz3.ab3@9537>    MOVE.w (A7)+,D2
00026A5C <AmiBlitz3.ab3@9538> BRA.w get1bytemain
00026A62 <AmiBlitz3.ab3@9544>   MOVE.w regnum,D1
00026A64 <AmiBlitz3.ab3@9545>   LSL.w #8,D1
00026A66 <AmiBlitz3.ab3@9546>   LSL.w #1,D1
00026A6A <AmiBlitz3.ab3@9547>   ORI.w #$7000,D1
00026A70 <AmiBlitz3.ab3@9548>   BTST #$0,$7(A3)
00026A74 <AmiBlitz3.ab3@9549>    BNE.w 'isap         ;A Pointer
00026A7C <AmiBlitz3.ab3@9550>   CMPI.l #$100,$4(A2)
00026A80 <AmiBlitz3.ab3@9551>    BCC.w arrerr1       ;illegal type to send
00026A84 <AmiBlitz3.ab3@9552>   MOVE.b $7(A2),D1
00026A88 <AmiBlitz3.ab3@9555>   BSR.w writeword      ;moveq #type,d regat
00026A8A <AmiBlitz3.ab3@9556>   MOVEQ.l #$02,D2      ;just a word.
00026A8E <AmiBlitz3.ab3@9557> BRA.w pushap
00026A92 <AmiBlitz3.ab3@9560>   MOVE.b #$3,D1
00026A96 <AmiBlitz3.ab3@9561> BRA.w 'putit
00026A9A <AmiBlitz3.ab3@9567>    BSR.w get1bytemain                                      ;write array paramter code
00026A9E <AmiBlitz3.ab3@9568>    BSR.w getparameter
00026AA6 <AmiBlitz3.ab3@9569>   BTST #$1,flagmask+1
00026AAA <AmiBlitz3.ab3@9570>    BEQ.w syntaxerr
00026AAE <AmiBlitz3.ab3@9571>    BSR.w fetchvars
00026AB2 <AmiBlitz3.ab3@9573>    BSR.w get1bytemain
00026AB6 <AmiBlitz3.ab3@9574>   CMP.w #$29,D0          ;')'  ;we just want a() or whatever                                 ;we just want a() or whatever
00026ABA <AmiBlitz3.ab3@9575>    BNE.w syntaxerr
00026AC0 <AmiBlitz3.ab3@9576>   MOVE.w notshared,D1
00026AC4 <AmiBlitz3.ab3@9577>    BNE.w noarrayerr
00026ACA <AmiBlitz3.ab3@9578>   MOVE.w regnum,D1
00026ACC <AmiBlitz3.ab3@9579>   LSL.w #8,D1
00026ACE <AmiBlitz3.ab3@9580>   LSL.w #1,D1
00026AD2 <AmiBlitz3.ab3@9581>   OR.w fbase(PC),D1
00026AD8 <AmiBlitz3.ab3@9583>    TST.b varmode
00026ADC <AmiBlitz3.ab3@9584>    BEQ 'l1
00026AE0 <AmiBlitz3.ab3@9585>    BCLR #0,d1
00026AE4 <AmiBlitz3.ab3@9589>    BSR.w writeword
00026AE8 <AmiBlitz3.ab3@9590>   MOVE.w $4(A3),D1
00026AEC <AmiBlitz3.ab3@9591>    BSR.w writeword
00026AF0 <AmiBlitz3.ab3@9592> BRA.w putalp      ;OK, we've got da base reg.
00026AF6 <AmiBlitz3.ab3@9598>   MOVE.w regnum,D1
00026AF8 <AmiBlitz3.ab3@9599>   LSL.w #8,D1
00026AFA <AmiBlitz3.ab3@9600>   LSL.w #1,D1
00026AFE <AmiBlitz3.ab3@9601>   OR.w fbase(PC),D1
00026B04 <AmiBlitz3.ab3@9603>    TST.b varmode
00026B08 <AmiBlitz3.ab3@9604>    BEQ 'l1
00026B0C <AmiBlitz3.ab3@9605>    BCLR #0,d1
00026B10 <AmiBlitz3.ab3@9609>    BSR.w writeword
00026B14 <AmiBlitz3.ab3@9611>   MOVE.w $8(A3),D1
00026B16 <AmiBlitz3.ab3@9612>   LSL.w #2,D1
00026B1C <AmiBlitz3.ab3@9613>   MOVE.w varmode,D2
00026B20 <AmiBlitz3.ab3@9614>    BEQ.w 'isglob
00026B22 <AmiBlitz3.ab3@9615>   NEG.w D1
00026B26 <AmiBlitz3.ab3@9618>    ADD.w $4(A3),D1
00026B2A <AmiBlitz3.ab3@9619>    BSR.w writeword
00026B30 <AmiBlitz3.ab3@9620>   MOVE.w regnum,D1
00026B32 <AmiBlitz3.ab3@9621>   LSL.w #8,D1
00026B34 <AmiBlitz3.ab3@9622>   LSL.w #1,D1
00026B38 <AmiBlitz3.ab3@9624>   MOVE.w partostack(PC),D2
00026B3C <AmiBlitz3.ab3@9625>    BNE.w 'dopadd           ;we just pushed last parameter!
00026B44 <AmiBlitz3.ab3@9626>   CMPI.w #$7,regnum
00026B48 <AmiBlitz3.ab3@9627>    BCC.w 'dopadd           ;last was d6, it must have been
00026B4C <AmiBlitz3.ab3@9629>   OR.w pushlast(PC),D1
00026B52 <AmiBlitz3.ab3@9630>   MOVE.w regnum,D2
00026B54 <AmiBlitz3.ab3@9631>   SUBQ.w #1,D2
00026B56 <AmiBlitz3.ab3@9632>   OR.w D2,D1
00026B5A <AmiBlitz3.ab3@9633>  BRA.w 'pp
00026B5E <AmiBlitz3.ab3@9638>   OR.w pushadd(PC),D1
00026B62 <AmiBlitz3.ab3@9641>   BSR.w writeword
00026B6A <AmiBlitz3.ab3@9642>   MOVE.b #$1,partostack
00026B6E <AmiBlitz3.ab3@9643> BRA.w putalp
00026B72 <AmiBlitz3.ab3@9647> fbase:       Dc.b $20,$2D,$00,$00                           ;MOVE.L  $0000(A5),D0
00026B74 <AmiBlitz3.ab3@9648> pushadd:     Dc.b $D0,$97                                   ;ADD.L (A7),D0
00026B76 <AmiBlitz3.ab3@9649> pushlast:    Dc.b $D0,$80                                   ;ADD.L D0,D0
00026B7A <AmiBlitz3.ab3@9654>   ANDI.w #$7,D2                                            ;0-7 (unknown to string)
00026B7E <AmiBlitz3.ab3@9655>    BEQ.w evalu2
00026B82 <AmiBlitz3.ab3@9656> BRA.w eval
00026B88 <AmiBlitz3.ab3@9660>   MOVEA.l libpointer,A1
00026B8C <AmiBlitz3.ab3@9663>    CMPA.w #$0,A1
00026B90 <AmiBlitz3.ab3@9664>    BEQ.w 'done
00026B96 <AmiBlitz3.ab3@9665>   MOVE.w #-1,$A(A1)
00026B9C <AmiBlitz3.ab3@9666>   BCLR #$7,$C(A1)
00026B9E <AmiBlitz3.ab3@9667>   MOVEA.l (A1),A1
00026BA2 <AmiBlitz3.ab3@9668>  BRA.w 'loop
00026BA4 <AmiBlitz3.ab3@9671> RTS
00026BA8 <AmiBlitz3.ab3@9675>   MOVE.w #$FFFE,D1       ;#allocvars
00026BAC <AmiBlitz3.ab3@9679>    BSR.w findlib
00026BB2 <AmiBlitz3.ab3@9682>   TST.w cfetchmode
00026BB6 <AmiBlitz3.ab3@9683>    BEQ.w 'noconst
00026BBC <AmiBlitz3.ab3@9684>   BTST #$6,$C(A1)
00026BC0 <AmiBlitz3.ab3@9685>    BNE.w 'constok
00026BC4 <AmiBlitz3.ab3@9687>  BRA.w badconerr                                            ;Can't use this Library!
00026BC6 <AmiBlitz3.ab3@9690>  RTS
00026BCC <AmiBlitz3.ab3@9693>    BSET #$7,$C(A1)
00026BD0 <AmiBlitz3.ab3@9694>    BNE.w 'skip                                         ;already done....
00026BD6 <AmiBlitz3.ab3@9695>    CMPI.w #-1,$A(A1)
00026BDA <AmiBlitz3.ab3@9696>    BNE.w 'skip                                         ;something already here
00026BE0 <AmiBlitz3.ab3@9700>    TST.w dirmode
00026BE4 <AmiBlitz3.ab3@9701>    BEQ.b 'oktouse
00026BEA <AmiBlitz3.ab3@9704>    TST.b exdebug
00026BEE <AmiBlitz3.ab3@9705>    BEQ 'l1
00026BF2 <AmiBlitz3.ab3@9706>  BRA.b 'oktouse
00026BF8 <AmiBlitz3.ab3@9710>   BCLR #$7,$C(A1)
00026BFC <AmiBlitz3.ab3@9711>  BRA.w dirliberr
00026C02 <AmiBlitz3.ab3@9715>   MOVE.b debugmode,-(a7)
00026C06 <AmiBlitz3.ab3@9717>   MOVEM.l D1/A0/A2,-(A7)
00026C0E <AmiBlitz3.ab3@9727>   BTST #$7,use_debugger
00026C12 <AmiBlitz3.ab3@9728>   BNE 'debugon
00026C14 <AmiBlitz3.ab3@9729>   CLR.w D1
00026C18 <AmiBlitz3.ab3@9730>  BRA.b 'debugoff
00026C1A <AmiBlitz3.ab3@9733>   SNE D1
00026C20 <AmiBlitz3.ab3@9736>   MOVE.b d1,debugmode
00026C22 <AmiBlitz3.ab3@9741>   MOVEA.l A1,A0
00026C26 <AmiBlitz3.ab3@9742>   ADDA.l $12(A1),A0
00026C2A <AmiBlitz3.ab3@9743>   TST.w -$2(A0)
00026C2E <AmiBlitz3.ab3@9744>    BEQ.w 'notmax
00026C32 <AmiBlitz3.ab3@9745>   MOVEM.l A0-A1,-(A7)
00026C36 <AmiBlitz3.ab3@9746>   MOVE.w #$FB4F,D1            ; #64335,
00026C3A <AmiBlitz3.ab3@9747>    BSR.w uselib
00026C3E <AmiBlitz3.ab3@9748>   MOVEM.l (A7)+,A0-A1
00026C44 <AmiBlitz3.ab3@9749>   ADDQ.w #1,globalvarpointer
00026C4C <AmiBlitz3.ab3@9750>   BCLR #$0,globalvarpointer+1
00026C54 <AmiBlitz3.ab3@9751>   MOVE.w globalvarpointer,-$6(A0)
00026C5A <AmiBlitz3.ab3@9752>   ADDQ.w #4,globalvarpointer
00026C5E <AmiBlitz3.ab3@9753>   TST.l -$E(A0)
00026C62 <AmiBlitz3.ab3@9754>    BEQ.w 'notmax
00026C68 <AmiBlitz3.ab3@9755>   ADDQ.w #4,globalvarpointer
00026C70 <AmiBlitz3.ab3@9758>   MOVE.l libend,$28(A1)      ;pc of lib
00026C72 <AmiBlitz3.ab3@9759>   MOVEA.l A1,A0
00026C76 <AmiBlitz3.ab3@9760>   ADDA.l $12(A1),A0          ;start of lib
00026C78 <AmiBlitz3.ab3@9762>   MOVE.l A1,D1
00026C7C <AmiBlitz3.ab3@9763>   ADD.l $6(A1),D1            ;end of lib
00026C80 <AmiBlitz3.ab3@9764>   TST.l $2C(A1)
00026C84 <AmiBlitz3.ab3@9765>    BEQ.w 'nor
00026C8A <AmiBlitz3.ab3@9766>   TST.b debugmode
00026C8E <AmiBlitz3.ab3@9767>    BNE.w 'nor                ;errs turned on
00026C90 <AmiBlitz3.ab3@9768>   MOVE.l A1,D1
00026C94 <AmiBlitz3.ab3@9769>   ADD.l $2C(A1),D1           ;copy only non-errchks
00026C9A <AmiBlitz3.ab3@9772>   MOVEA.l libend,A2
00026CA0 <AmiBlitz3.ab3@9775>   CMPA.l data1start,A2
00026CA4 <AmiBlitz3.ab3@9776>    BCS.w 'okp
00026CAC <AmiBlitz3.ab3@9777>   MOVE.w #$FFFF,dontwrite_nomemleft     ; -1
00026CAE <AmiBlitz3.ab3@9780>   ADDQ.w #2,A0
00026CB0 <AmiBlitz3.ab3@9781>   ADDQ.w #2,A2
00026CB2 <AmiBlitz3.ab3@9782>   CMPA.l D1,A0
00026CB6 <AmiBlitz3.ab3@9783>    BCS.w 'bad
00026CBA <AmiBlitz3.ab3@9784>  BRA.w 'toreloc
00026CBC <AmiBlitz3.ab3@9787>   MOVE.w (A0)+,(A2)+                                       ;copylibcode
00026CBE <AmiBlitz3.ab3@9788>   CMPA.l D1,A0
00026CC2 <AmiBlitz3.ab3@9789>    BCS.w 'loop
00026CC8 <AmiBlitz3.ab3@9792>   MOVE.l A2,libend
00026CCC <AmiBlitz3.ab3@9793>   MOVE.l $20(A1),D1
00026CD0 <AmiBlitz3.ab3@9794>    BEQ.w 'noreloc
00026CD4 <AmiBlitz3.ab3@9796>   MOVEM.l D0/D2-D3,-(A7)
00026CD8 <AmiBlitz3.ab3@9797>   MOVEA.l $24(A1),A0         ;start of reloc table
00026CDA <AmiBlitz3.ab3@9798>   MOVEQ.l #$00,D3            ;no tokejsrs (yet!)
00026CDC <AmiBlitz3.ab3@9804>   MOVE.l (A0)+,D2
00026CE0 <AmiBlitz3.ab3@9805>   TST.l $2C(A1)
00026CE4 <AmiBlitz3.ab3@9806>    BEQ.w 'skipr
00026CEA <AmiBlitz3.ab3@9807>   TST.b debugmode
00026CEE <AmiBlitz3.ab3@9808>    BNE.w 'skipr
00026CF2 <AmiBlitz3.ab3@9809>   CMP.l $2C(A1),D2
00026CF6 <AmiBlitz3.ab3@9810>    BCC.w 'next
00026CFA <AmiBlitz3.ab3@9813>   TST.w $0(A1,D2.L)
00026CFE <AmiBlitz3.ab3@9814>    BPL.w 'notajsr
00026D00 <AmiBlitz3.ab3@9815>   TST.l D3
00026D04 <AmiBlitz3.ab3@9816>    BNE.w 'notajsr      ;already done...
00026D06 <AmiBlitz3.ab3@9817>   MOVE.l A0,D0
00026D08 <AmiBlitz3.ab3@9818>   MOVE.l D1,D3         ;number left to do!
00026D0C <AmiBlitz3.ab3@9821>   SUB.l $12(A1),D2
00026D10 <AmiBlitz3.ab3@9822>    BMI.w 'next
00026D14 <AmiBlitz3.ab3@9823>   ADD.l $28(A1),D2
00026D16 <AmiBlitz3.ab3@9824>   MOVE.l D2,-(A7)
00026D1C <AmiBlitz3.ab3@9825>   SUB.l destbufferstart,D2
00026D20 <AmiBlitz3.ab3@9826>    BSR.w addhunkoffset
00026D22 <AmiBlitz3.ab3@9827>   MOVEA.l (A7)+,A2
00026D28 <AmiBlitz3.ab3@9828>   TST.w dontwrite_nomemleft
00026D2C <AmiBlitz3.ab3@9829>    BNE.w 'next
00026D30 <AmiBlitz3.ab3@9830>   MOVE.l $28(A1),D2
00026D34 <AmiBlitz3.ab3@9831>   SUB.l $12(A1),D2
00026D36 <AmiBlitz3.ab3@9832>   ADD.l D2,(A2)
00026D38 <AmiBlitz3.ab3@9835>    SUBQ.l #1,D1
00026D3C <AmiBlitz3.ab3@9836>    BNE.w 'reloop
00026D3E <AmiBlitz3.ab3@9837>   MOVE.l D3,D2
00026D42 <AmiBlitz3.ab3@9838>    BEQ.w 'nohand
00026D44 <AmiBlitz3.ab3@9839>   MOVEA.l D0,A2
00026D46 <AmiBlitz3.ab3@9840>   SUBQ.w #4,A2
00026D4A <AmiBlitz3.ab3@9842>    BSR.w handlejsrs
00026D4E <AmiBlitz3.ab3@9845>    MOVEM.l (A7)+,D0/D2-D3
00026D52 <AmiBlitz3.ab3@9848>    MOVEM.l (A7)+,D1/A0/A2
00026D56 <AmiBlitz3.ab3@9850>   MOVEM.l D1-D2,-(A7)
00026D5A <AmiBlitz3.ab3@9851>   TST.w $1A(A1)
00026D5E <AmiBlitz3.ab3@9852>    BNE.w 'skip2a
00026D62 <AmiBlitz3.ab3@9853>   CLR.w $A(A1)
00026D66 <AmiBlitz3.ab3@9854>  BRA.w 'skip2
00026D6C <AmiBlitz3.ab3@9857>   ADDQ.w #1,globalvarpointer
00026D74 <AmiBlitz3.ab3@9858>   BCLR #$0,globalvarpointer+1
00026D7C <AmiBlitz3.ab3@9859>   MOVE.w globalvarpointer,$A(A1)
00026D80 <AmiBlitz3.ab3@9861>   CMP.w #-$12D,D1            ; was  #65235,
00026D84 <AmiBlitz3.ab3@9862>    BNE.w 'nots1
00026D8C <AmiBlitz3.ab3@9864>   MOVE.w $A(A1),movestdn+2
00026D94 <AmiBlitz3.ab3@9865>   MOVE.w $A(A1),pusha3+2
00026D9C <AmiBlitz3.ab3@9866>   MOVE.w $A(A1),pusha32+2
00026DA4 <AmiBlitz3.ab3@9867>   MOVE.w $A(A1),pulla3+2
00026DAC <AmiBlitz3.ab3@9868>   MOVE.w $A(A1),geta3+2
00026DB0 <AmiBlitz3.ab3@9871>    CMP.w #-$3E9,D1           ; was #64535,
00026DB4 <AmiBlitz3.ab3@9872>    BNE.w 'notd
00026DBC <AmiBlitz3.ab3@9874>   MOVE.w $A(A1),dataget+2
00026DC4 <AmiBlitz3.ab3@9875>   MOVE.w $A(A1),dataput+2
00026DCC <AmiBlitz3.ab3@9876>   MOVE.w $A(A1),rescode+6
00026DD4 <AmiBlitz3.ab3@9877>   MOVE.w $A(A1),rescode2+2
00026DDA <AmiBlitz3.ab3@9880>   ADDQ.w #2,globalvarpointer
00026DDE <AmiBlitz3.ab3@9881>   TST.w $1A(A1)
00026DE2 <AmiBlitz3.ab3@9882>    BMI.w 'jword
00026DE8 <AmiBlitz3.ab3@9883>   ADDQ.w #2,globalvarpointer
00026DEC <AmiBlitz3.ab3@9886>   MOVEM.l D1/A1,-(A7)
00026DF0 <AmiBlitz3.ab3@9887>   BSR.w usevars
00026DF4 <AmiBlitz3.ab3@9888>   MOVEM.l (A7)+,D1/A1
00026DF6 <AmiBlitz3.ab3@9891>   MOVE.w D1,D2
00026DFA <AmiBlitz3.ab3@9892>   MOVE.l $16(A1),D1
00026DFE <AmiBlitz3.ab3@9893>    BSR.w uselib2
00026E02 <AmiBlitz3.ab3@9894>   MOVE.l $1C(A1),D1
00026E06 <AmiBlitz3.ab3@9895>    BSR.w uselib2
00026E0A <AmiBlitz3.ab3@9896>   MOVEM.l (A7)+,D1-D2
00026E10 <AmiBlitz3.ab3@9898>   MOVE.b (a7)+,debugmode
00026E12 <AmiBlitz3.ab3@9901> RTS
00026E14 <AmiBlitz3.ab3@9908>   MOVEQ.l #$00,D2       ;do list till this...
00026E1A <AmiBlitz3.ab3@9911>   MOVEA.l tokeslist,A2
00026E1C <AmiBlitz3.ab3@9912>   CMPA.l D2,A2
00026E20 <AmiBlitz3.ab3@9913>    BEQ.w 'done
00026E22 <AmiBlitz3.ab3@9914>   MOVE.l A2,-(A7)       ;next till...
00026E24 <AmiBlitz3.ab3@9917>   MOVEQ.l #$00,D3
00026E28 <AmiBlitz3.ab3@9920>   MOVEA.l $8(A2),A3
00026E2A <AmiBlitz3.ab3@9921>   CMPA.l D3,A3
00026E2E <AmiBlitz3.ab3@9922>    BEQ.w 'done4
00026E30 <AmiBlitz3.ab3@9924>   MOVE.l A3,-(A7)
00026E34 <AmiBlitz3.ab3@9925>   MOVEM.l D2-D3/A2-A3,-(A7)
00026E38 <AmiBlitz3.ab3@9926>   MOVE.w $4(A2),D1
00026E3C <AmiBlitz3.ab3@9927>   MOVE.w $6(A2),D2
00026E40 <AmiBlitz3.ab3@9929>    BSR.w tokecode
00026E44 <AmiBlitz3.ab3@9931>   MOVEM.l (A7)+,D2-D3/A2-A3
00026E4A <AmiBlitz3.ab3@9933>   MOVE.w dontwrite_nomemleft,D0
00026E4E <AmiBlitz3.ab3@9934>    BEQ.w 'ok
00026E50 <AmiBlitz3.ab3@9937>   MOVEA.l (A3),A3
00026E52 <AmiBlitz3.ab3@9938>   CMPA.l D3,A3
00026E56 <AmiBlitz3.ab3@9939>    BNE.w 'loop5
00026E5A <AmiBlitz3.ab3@9940>  BRA.w 'skipz
00026E5E <AmiBlitz3.ab3@9943>   MOVEA.l $4(A3),A0
00026E60 <AmiBlitz3.ab3@9944>   MOVE.l D7,(A0)
00026E62 <AmiBlitz3.ab3@9945>   MOVEA.l (A3),A3
00026E64 <AmiBlitz3.ab3@9946>   CMPA.l D3,A3
00026E68 <AmiBlitz3.ab3@9947>    BNE.w 'ok
00026E6A <AmiBlitz3.ab3@9950>   MOVE.l (A7)+,D3
00026E6E <AmiBlitz3.ab3@9951>  BRA.w 'loop3
00026E70 <AmiBlitz3.ab3@9954>    MOVEA.l (A2),A2
00026E72 <AmiBlitz3.ab3@9955>   CMPA.l D2,A2
00026E76 <AmiBlitz3.ab3@9956>    BNE.w 'loop2
00026E78 <AmiBlitz3.ab3@9957>   MOVE.l (A7)+,D2
00026E7C <AmiBlitz3.ab3@9958>  BRA.w 'loop
00026E7E <AmiBlitz3.ab3@9961> RTS
00026E80 <AmiBlitz3.ab3@9969>   MOVE.w D2,-(A7)
00026E84 <AmiBlitz3.ab3@9970>    BSR.w searchinstr
00026E86 <AmiBlitz3.ab3@9971>   MOVE.w (A7)+,D2
00026E8E <AmiBlitz3.ab3@9973>   BCLR #$7,blitzmode
00026E92 <AmiBlitz3.ab3@9974>   BCLR #$E,D2
00026E96 <AmiBlitz3.ab3@9975>    BEQ.w 'isamiga
00026E9E <AmiBlitz3.ab3@9976>   BSET #$7,blitzmode
00026EA0 <AmiBlitz3.ab3@9979>   TST.w (A3)
00026EA4 <AmiBlitz3.ab3@9980>    BEQ.w 'simple
00026EAA <AmiBlitz3.ab3@9981>   BTST #$2,$1(A3)
00026EAE <AmiBlitz3.ab3@9982>    BNE.w tokeerr
00026EB4 <AmiBlitz3.ab3@9983>   BTST #$3,$1(A3)
00026EB8 <AmiBlitz3.ab3@9984>    BNE.w tokeerr
00026EBC <AmiBlitz3.ab3@9988>   LEA $6(A3),A3     ;skip node
00026EBE <AmiBlitz3.ab3@9991>   MOVE.w (A3)+,D0
00026EC2 <AmiBlitz3.ab3@9992>    BMI.w tokeerr
00026EC6 <AmiBlitz3.ab3@9993>   ANDI.w #$FF,D0
00026EC8 <AmiBlitz3.ab3@9994>   ADDA.w D0,A3
00026ECA <AmiBlitz3.ab3@9995>   ADDQ.w #1,A3
00026ECC <AmiBlitz3.ab3@9996>   EXG.l D0,A3
00026ED0 <AmiBlitz3.ab3@9997>   BCLR #$0,D0
00026ED2 <AmiBlitz3.ab3@9998>   EXG.l D0,A3
00026ED4 <AmiBlitz3.ab3@9999>   SUBQ.w #1,D2
00026ED8 <AmiBlitz3.ab3@10000>    BPL.w 'loop2
00026EDA <AmiBlitz3.ab3@10002>   TST.w (A3)
00026EDE <AmiBlitz3.ab3@10003>    BNE.w 'go4it          ;no libs to fetch....
00026EE2 <AmiBlitz3.ab3@10004>   MOVE.l $2(A3),D0
00026EE6 <AmiBlitz3.ab3@10005>   OR.l $A(A3),D0
00026EEA <AmiBlitz3.ab3@10006>    BNE.w 'go4it          ;no error chx...
00026EF0 <AmiBlitz3.ab3@10007>   BTST #$0,$9(A3)
00026EF4 <AmiBlitz3.ab3@10008>    BNE.w 'go4it          ;ditto...
00026EF8 <AmiBlitz3.ab3@10009>   MOVE.l $6(A3),D7       ;sub offset
00026EFC <AmiBlitz3.ab3@10010>   MOVE.w $0(A2,D7.L),D0
00026F00 <AmiBlitz3.ab3@10011>   ANDI.w #$F000,D0
00026F04 <AmiBlitz3.ab3@10012>   CMP.w #-$6000,D0
00026F08 <AmiBlitz3.ab3@10013>    BEQ.w 'go4it
00026F0C <AmiBlitz3.ab3@10016>   SUB.l $12(A2),D7
00026F10 <AmiBlitz3.ab3@10017>   ADD.l $28(A2),D7
00026F12 <AmiBlitz3.ab3@10018>  RTS
00026F18 <AmiBlitz3.ab3@10021>   LEA cutejsr,A0
00026F1E <AmiBlitz3.ab3@10025>   MOVE.l destpointer,-(A7)
00026F26 <AmiBlitz3.ab3@10026>   MOVE.w #$FFFF,lasta6     ; was -1
00026F28 <AmiBlitz3.ab3@10028>    JSR (A0)
00026F2C <AmiBlitz3.ab3@10029>   MOVE.w #$4E75,D1
00026F30 <AmiBlitz3.ab3@10030>    BSR.w writeword
00026F32 <AmiBlitz3.ab3@10032>   MOVE.l (A7)+,D7
00026F34 <AmiBlitz3.ab3@10033>  RTS
00026F36 <AmiBlitz3.ab3@10036>   TST.w (A3)+
00026F3A <AmiBlitz3.ab3@10037>    BEQ.w 'skip
00026F3C <AmiBlitz3.ab3@10038>   ADDQ.w #2,A3
00026F40 <AmiBlitz3.ab3@10039>  BRA.w 'loop2
00026F44 <AmiBlitz3.ab3@10042>   LEA $C(A3),A3
00026F48 <AmiBlitz3.ab3@10043>  BRA.w 'loop
00026F4A <AmiBlitz3.ab3@10046>   TST.w D2
00026F4E <AmiBlitz3.ab3@10047>    BNE.w tokeerr
00026F52 <AmiBlitz3.ab3@10049>   TST.w $6(A3)
00026F56 <AmiBlitz3.ab3@10050>    BNE.w 'be4it
00026F5A <AmiBlitz3.ab3@10051>   MOVE.l $8(A3),D0
00026F5E <AmiBlitz3.ab3@10052>   OR.l $10(A3),D0
00026F62 <AmiBlitz3.ab3@10053>    BNE.w 'be4it
00026F68 <AmiBlitz3.ab3@10054>   BTST #$0,$F(A3)
00026F6C <AmiBlitz3.ab3@10055>    BNE.w 'be4it
00026F70 <AmiBlitz3.ab3@10056>   MOVE.l $C(A3),D7
00026F74 <AmiBlitz3.ab3@10057>   MOVE.w $0(A2,D7.L),D0
00026F78 <AmiBlitz3.ab3@10058>   ANDI.w #$F000,D0
00026F7C <AmiBlitz3.ab3@10059>   CMP.w #-$6000,D0        ; was #$a000
00026F80 <AmiBlitz3.ab3@10060>    BNE.w 'penis
00026F82 <AmiBlitz3.ab3@10063>   MOVE.l A3,D1
00026F84 <AmiBlitz3.ab3@10064>   SUB.l A2,D1
00026F8A <AmiBlitz3.ab3@10065>   LEA Amakelibsub,A0
00026F8E <AmiBlitz3.ab3@10066> BRA.w 'putcode
00026F94 <AmiBlitz3.ab3@10070>   MOVEA.l _execbase,A6
00026F9A <AmiBlitz3.ab3@10071>   MOVEA.l tokeslist,A2
00026FA0 <AmiBlitz3.ab3@10072>   CLR.l tokeslist
00026FA4 <AmiBlitz3.ab3@10075>     CMPA.w #$0,A2
00026FA8 <AmiBlitz3.ab3@10076>      BEQ.w 'done2
00026FAC <AmiBlitz3.ab3@10077>     MOVEA.l $8(A2),A3
00026FB0 <AmiBlitz3.ab3@10080>       CMPA.w #$0,A3
00026FB4 <AmiBlitz3.ab3@10081>        BEQ.w 'done3
00026FB6 <AmiBlitz3.ab3@10082>       MOVEA.l A3,A1
00026FB8 <AmiBlitz3.ab3@10083>       MOVEA.l (A3),A3
00026FBA <AmiBlitz3.ab3@10084>       MOVEQ.l #$08,D0
00026FC0 <AmiBlitz3.ab3@10086>       MOVE.l mempool,a0
00026FC6 <AmiBlitz3.ab3@10087>       MOVEA.l _execbase,A6
00026FCA <AmiBlitz3.ab3@10088>       JSR _FreePooled(A6)
00026FCE <AmiBlitz3.ab3@10091>  BRA.w 'floop2
00026FD0 <AmiBlitz3.ab3@10094>     MOVEA.l A2,A1
00026FD2 <AmiBlitz3.ab3@10095>     MOVEA.l (A2),A2
00026FD4 <AmiBlitz3.ab3@10096>     MOVEQ.l #$0C,D0
00026FDA <AmiBlitz3.ab3@10098>     MOVE.l mempool,a0
00026FE0 <AmiBlitz3.ab3@10099>     MOVEA.l _execbase,A6
00026FE4 <AmiBlitz3.ab3@10100>     JSR _FreePooled(A6)
00026FE8 <AmiBlitz3.ab3@10103>  BRA.w 'floop
00026FEA <AmiBlitz3.ab3@10106> RTS
00026FEE <AmiBlitz3.ab3@10112>   MOVEM.l D3-D5/A1-A6,-(A7)
00026FF0 <AmiBlitz3.ab3@10113>   MOVEA.l A1,A4
00026FF2 <AmiBlitz3.ab3@10116>   MOVE.l (A2)+,D3
00026FF6 <AmiBlitz3.ab3@10117>   MOVE.w $0(A4,D3.L),D5
00026FFA <AmiBlitz3.ab3@10118>    BPL.w 'next
00026FFE <AmiBlitz3.ab3@10120>   TST.l $2C(A4)
00027002 <AmiBlitz3.ab3@10121>    BEQ.w 'skipr
00027008 <AmiBlitz3.ab3@10122>   TST.b debugmode
0002700C <AmiBlitz3.ab3@10123>    BNE.w 'skipr
00027010 <AmiBlitz3.ab3@10124>   CMP.l $2C(A4),D3
00027014 <AmiBlitz3.ab3@10125>    BCC.w 'next
00027018 <AmiBlitz3.ab3@10128>   BCLR #$F,D5             ;to offset number
0002701C <AmiBlitz3.ab3@10129>   MOVE.w $2(A4,D3.L),D4
00027020 <AmiBlitz3.ab3@10130>   SUB.l $12(A4),D3
00027024 <AmiBlitz3.ab3@10131>   ADD.l $28(A4),D3
00027028 <AmiBlitz3.ab3@10133>   MOVEM.l D2/A2/A4,-(A7)
0002702C <AmiBlitz3.ab3@10134>    BSR.w maketjsr
00027030 <AmiBlitz3.ab3@10135>   MOVEM.l (A7)+,D2/A2/A4
00027032 <AmiBlitz3.ab3@10138>   SUBQ.l #1,D2
00027036 <AmiBlitz3.ab3@10139>    BNE.w 'loop
0002703A <AmiBlitz3.ab3@10141>   MOVEM.l (A7)+,D3-D5/A1-A6
0002703C <AmiBlitz3.ab3@10142> RTS
00027042 <AmiBlitz3.ab3@10150>   LEA tokeslist,A3
00027048 <AmiBlitz3.ab3@10151>   MOVEA.l _execbase,A6
0002704A <AmiBlitz3.ab3@10154>   MOVE.l (A3),D0
0002704E <AmiBlitz3.ab3@10155>    BEQ.w 'notfound
00027050 <AmiBlitz3.ab3@10156>   MOVEA.l D0,A3
00027054 <AmiBlitz3.ab3@10157>   CMP.w $4(A3),D4
00027058 <AmiBlitz3.ab3@10158>    BNE.w 'loop2
0002705C <AmiBlitz3.ab3@10159>   CMP.w $6(A3),D5
00027060 <AmiBlitz3.ab3@10160>    BNE.w 'loop2
00027064 <AmiBlitz3.ab3@10161>  BRA.w 'found
00027066 <AmiBlitz3.ab3@10166>   MOVEQ.l #$0C,D0
00027068 <AmiBlitz3.ab3@10167>   MOVEQ.l #$01,D1
0002706E <AmiBlitz3.ab3@10169>   MOVE.l mempool,a0
00027072 <AmiBlitz3.ab3@10170>   JSR _AllocPooled(a6)
00027074 <AmiBlitz3.ab3@10173>   MOVEA.l D0,A3
0002707A <AmiBlitz3.ab3@10174>   MOVE.l tokeslist,(A3)
00027080 <AmiBlitz3.ab3@10175>   MOVE.l A3,tokeslist
00027084 <AmiBlitz3.ab3@10176>   MOVE.w D4,$4(A3)
00027088 <AmiBlitz3.ab3@10177>   MOVE.w D5,$6(A3)
0002708C <AmiBlitz3.ab3@10178>   CLR.l $8(A3)
0002708E <AmiBlitz3.ab3@10181>   MOVEQ.l #$08,D0
00027090 <AmiBlitz3.ab3@10182>   MOVEQ.l #$01,D1
00027096 <AmiBlitz3.ab3@10184>   MOVE.l mempool,a0
0002709A <AmiBlitz3.ab3@10185>   JSR _AllocPooled(a6)
0002709C <AmiBlitz3.ab3@10188>   MOVEA.l D0,A0
000270A0 <AmiBlitz3.ab3@10189>   MOVE.l D3,$4(A0)
000270A4 <AmiBlitz3.ab3@10190>   MOVE.l $8(A3),(A0)
000270A8 <AmiBlitz3.ab3@10191>   MOVE.l A0,$8(A3)
000270AA <AmiBlitz3.ab3@10193>   MOVE.w D4,D1
000270AE <AmiBlitz3.ab3@10194> BRA.w searchinstr       ;use this library - NOW!
000270B2 <AmiBlitz3.ab3@10197> tokeslist: Ds.l 1
000270B6 <AmiBlitz3.ab3@10210>   BEQ.w 'skip
000270B8 <AmiBlitz3.ab3@10211>   MOVE.l A1,-(A7)
000270BA <AmiBlitz3.ab3@10212>   ADDA.l D1,A1
000270BC <AmiBlitz3.ab3@10213>   ADDQ.w #6,A1
000270BE <AmiBlitz3.ab3@10216>     MOVE.w (A1)+,D1
000270C2 <AmiBlitz3.ab3@10217>     BEQ.w 'done
000270C4 <AmiBlitz3.ab3@10218>     CMP.w D2,D1
000270C8 <AmiBlitz3.ab3@10219>     BEQ.w 'skip2
000270CA <AmiBlitz3.ab3@10220>     MOVE.l A1,-(A7)
000270CE <AmiBlitz3.ab3@10221>     BSR.w uselib
000270D0 <AmiBlitz3.ab3@10222>     MOVEA.l (A7)+,A1
000270D2 <AmiBlitz3.ab3@10225>     ADDQ.w #2,A1
000270D6 <AmiBlitz3.ab3@10226>  BRA.w 'loop
000270D8 <AmiBlitz3.ab3@10229>   MOVEA.l (A7)+,A1
000270DA <AmiBlitz3.ab3@10232> RTS
000270E0 <AmiBlitz3.ab3@10236>   MOVEA.l libpointer,A1
000270E4 <AmiBlitz3.ab3@10239>   CMPA.w #$0,A1
000270E8 <AmiBlitz3.ab3@10240>    BEQ.b 'rts
000270EC <AmiBlitz3.ab3@10241>   CMP.w $4(A1),D1
000270F0 <AmiBlitz3.ab3@10242>    BEQ.w 'found
000270F2 <AmiBlitz3.ab3@10243>   MOVEA.l (A1),A1
000270F6 <AmiBlitz3.ab3@10244>  BRA.w 'loop
000270F8 <AmiBlitz3.ab3@10247>   MOVEQ.l #-$01,D1
000270FA <AmiBlitz3.ab3@10250> RTS
000270FE <AmiBlitz3.ab3@10257>   MOVEM.l d0/a2,-(a7)
00027100 <AmiBlitz3.ab3@10258>   MOVEQ #0,d0
00027106 <AmiBlitz3.ab3@10259>   LEA instrtab+4,a2
00027108 <AmiBlitz3.ab3@10260>   MOVE.w d1,d0
0002710A <AmiBlitz3.ab3@10261>   ASL.l #3,d0
0002710E <AmiBlitz3.ab3@10262>   MOVE.l 0(a2,d0.l),a1                                     ;*8
00027114 <AmiBlitz3.ab3@10263>   CMP.l #0,a1
00027118 <AmiBlitz3.ab3@10264>   BNE 'foundb
0002711E <AmiBlitz3.ab3@10266>   MOVEA.l libpointer,A1
00027122 <AmiBlitz3.ab3@10269>     CMPA.w #$0,A1
00027126 <AmiBlitz3.ab3@10271>     BEQ.w noliberr
0002712A <AmiBlitz3.ab3@10273>     CMP.w $4(A1),D1
0002712E <AmiBlitz3.ab3@10274>     BEQ.w 'found
00027130 <AmiBlitz3.ab3@10275>    MOVEA.l (A1),A1
00027134 <AmiBlitz3.ab3@10276>  BRA.w 'loop
00027138 <AmiBlitz3.ab3@10280>   MOVE.l a1,0(a2,d0.l)
0002713C <AmiBlitz3.ab3@10283>   MOVEM.l (a7)+,d0/a2
0002713E <AmiBlitz3.ab3@10285> RTS
00027142 <AmiBlitz3.ab3@10295>   MOVEM.l d0-d1/a1,-(a7)
00027144 <AmiBlitz3.ab3@10296>   MOVEQ #0,d0
0002714A <AmiBlitz3.ab3@10297>   LEA instrtab,a1
0002714C <AmiBlitz3.ab3@10298>   MOVE.w d1,d0
0002714E <AmiBlitz3.ab3@10299>   ASL.l #3,d0
00027152 <AmiBlitz3.ab3@10300>   MOVE.l 0(a1,d0.l),a3
00027156 <AmiBlitz3.ab3@10301>   MOVE.l 4(a1,d0.l),a2
0002715C <AmiBlitz3.ab3@10302>   CMP.l #0,a3
00027160 <AmiBlitz3.ab3@10303>   BNE 'foundb
00027166 <AmiBlitz3.ab3@10306>   MOVEA.l libpointer,A2
0002716A <AmiBlitz3.ab3@10309>   CMPA.w #$0,A2
0002716E <AmiBlitz3.ab3@10310>   BEQ.w notokerr
00027172 <AmiBlitz3.ab3@10311>   CMP.w $E(A2),D1
00027176 <AmiBlitz3.ab3@10312>   BCS.w 'next
0002717A <AmiBlitz3.ab3@10313>   CMP.w $10(A2),D1
0002717E <AmiBlitz3.ab3@10314>   BCC.w 'next
00027182 <AmiBlitz3.ab3@10318>   LEA $30(A2),A3
00027186 <AmiBlitz3.ab3@10319>   TST.w $4(A2)
0002718A <AmiBlitz3.ab3@10320>   BPL.w 'userlib
0002718E <AmiBlitz3.ab3@10323>     CMP.w $E(A2),D1
00027192 <AmiBlitz3.ab3@10324>     BEQ.w 'found
00027194 <AmiBlitz3.ab3@10325>     SUBQ.w #1,D1
00027198 <AmiBlitz3.ab3@10326>     MOVEA.l $2(A3),A3
0002719C <AmiBlitz3.ab3@10327>  BRA.w 'loop2
000271A0 <AmiBlitz3.ab3@10331>   MOVE.l a3,0(a1,d0.l)
000271A4 <AmiBlitz3.ab3@10332>   MOVE.l a2,4(a1,d0.l)
000271A8 <AmiBlitz3.ab3@10335>   MOVEM.l (a7)+,d0-d1/a1
000271AC <AmiBlitz3.ab3@10337>   MOVEM.l D1/A1-a3,-(A7)      ; was  movem.l d1/a1,-(a7)
000271B0 <AmiBlitz3.ab3@10339>   CMP.w #1,(a3)
000271B4 <AmiBlitz3.ab3@10340>   BNE.s 'ex10
000271BC <AmiBlitz3.ab3@10341>   CMP.l #$12345678,$e(a3)
000271C0 <AmiBlitz3.ab3@10342>   BNE.s 'ex10
000271C6 <AmiBlitz3.ab3@10343>   CMP.w #$ffff,$16(a3)
000271CA <AmiBlitz3.ab3@10344>   BNE.s 'ex10
000271CE <AmiBlitz3.ab3@10345>   MOVE.l $12(a3),d1
000271D2 <AmiBlitz3.ab3@10346>   BEQ.s 'ex10
000271D8 <AmiBlitz3.ab3@10347>   LEA pluginbase,a3
000271DC <AmiBlitz3.ab3@10349>  JMP 0(a2,d1.l)                                             ;plugin
000271DE <AmiBlitz3.ab3@10353>   MOVEA.l A2,A1
000271E4 <AmiBlitz3.ab3@10355>   CLR.b newmode
000271E8 <AmiBlitz3.ab3@10357>   MOVE.w $4(A1),D1       ;set lib#
000271EC <AmiBlitz3.ab3@10362>   BSR.w uselib3
000271F0 <AmiBlitz3.ab3@10363>   MOVEM.l (A7)+,D1/A1-a3
000271F2 <AmiBlitz3.ab3@10364>  RTS
000271F8 <AmiBlitz3.ab3@10368>   MOVE.w globalvarpointer,-(a7)         ; "
00027200 <AmiBlitz3.ab3@10369>   MOVE.w #$8004,globalvarpointer        ; "
00027204 <AmiBlitz3.ab3@10370>   BSR.w uselib3                         ; "
0002720A <AmiBlitz3.ab3@10371>   MOVE.w (a7)+,globalvarpointer         ; "
0002720E <AmiBlitz3.ab3@10372>   MOVEM.l (A7)+,D1/A1-a3
00027210 <AmiBlitz3.ab3@10373>  RTS
00027214 <AmiBlitz3.ab3@10377>     CMP.w $E(A2),D1
00027218 <AmiBlitz3.ab3@10378>     BEQ.w 'found
0002721A <AmiBlitz3.ab3@10379>     SUBQ.w #1,D1
0002721E <AmiBlitz3.ab3@10380>     MOVEA.l $2(A3),A3
00027222 <AmiBlitz3.ab3@10381>  BRA.w 'userlib
00027224 <AmiBlitz3.ab3@10384>   MOVEA.l (A2),A2
00027228 <AmiBlitz3.ab3@10385> BRA.w 'loop
0002722C <AmiBlitz3.ab3@10389>   MOVEM.l (A7)+,D1/A1-a3
00027232 <AmiBlitz3.ab3@10390>   JSR stripspaces
00027234 <AmiBlitz3.ab3@10391>   MOVEQ #0,d0
00027236 <AmiBlitz3.ab3@10392>   MOVE.b (a5)+,d0
0002723C <AmiBlitz3.ab3@10393>   MOVE.w d0,lastchar
0002723E <AmiBlitz3.ab3@10394>   ADDQ.l #4,a7
00027240 <AmiBlitz3.ab3@10395> RTS
00027246 <AmiBlitz3.ab3@10398> JUMP_writeword JMP writeword
0002724A <AmiBlitz3.ab3@10401> ptr_acidlibs:   Ds.l 1                                     ;deflibsat org source
0002724E <AmiBlitz3.ab3@10402> ptr_deflibs:    Ds.l 1                                     ;acidlibsat org source
00027252 <AmiBlitz3.ab3@10403> ptr_userlibs:   Ds.l 1                                     ;blitzlibsat org source  ;;start of blitzlibs list!
00027254 <AmiBlitz3.ab3@10413>   TST.l D0
00027258 <AmiBlitz3.ab3@10414>   BEQ.w 'rts
0002725A <AmiBlitz3.ab3@10415>     MOVE.l D0,D6                                           ;d6=len
00027260 <AmiBlitz3.ab3@10416>     MOVEA.l _dosbase,A6
00027266 <AmiBlitz3.ab3@10417>     MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
0002726A <AmiBlitz3.ab3@10418>     JSR _Open(A6)
0002726C <AmiBlitz3.ab3@10419>     MOVE.l D0,D7
00027270 <AmiBlitz3.ab3@10420>     BEQ.w 'rts
00027272 <AmiBlitz3.ab3@10421>       MOVE.l D6,D0
00027274 <AmiBlitz3.ab3@10422>       MOVEQ.l #$01,D1
0002727A <AmiBlitz3.ab3@10423>       MOVEA.l _execbase,A6
00027280 <AmiBlitz3.ab3@10426>       MOVE.l mempool,a0
00027284 <AmiBlitz3.ab3@10427>       JSR _AllocPooled(a6)
00027286 <AmiBlitz3.ab3@10429>       MOVE.l D0,D5                                         ;start address
00027288 <AmiBlitz3.ab3@10431>       MOVE.l D7,D1                                         ; handle
0002728A <AmiBlitz3.ab3@10432>       MOVE.l D5,D2                                         ; buffer addr
0002728C <AmiBlitz3.ab3@10433>       MOVE.l D6,D3                                         ; size
00027292 <AmiBlitz3.ab3@10434>       MOVEA.l _dosbase,A6
00027296 <AmiBlitz3.ab3@10435>       JSR _Read(A6)
00027298 <AmiBlitz3.ab3@10436>       MOVE.l D7,D1
0002729C <AmiBlitz3.ab3@10437>       JSR _Close(A6)
0002729E <AmiBlitz3.ab3@10439>       MOVEA.l D5,A0                                        ; buffer addr
000272A0 <AmiBlitz3.ab3@10445>         MOVE.l (A0)+,D0                                    ; naechster Longwert nach DO
000272A4 <AmiBlitz3.ab3@10446>         BEQ.b 'linkdone                                    ; wenn <> 0, dann
000272A8 <AmiBlitz3.ab3@10447>           LEA $20(A0),A1  ;link in.                        ;   lade inhalt von D0+40bytes nach A1
000272AA <AmiBlitz3.ab3@10448>           MOVE.l A1,(A3)                                   ;   kopiere Adresse in A1 zum libpointer
000272AC <AmiBlitz3.ab3@10449>           MOVEA.l A1,A3                                    ;   kopiere A1 nach A3
000272AE <AmiBlitz3.ab3@10450>           ADDA.l D0,A0                                     ;   addiere inhalt von D0 zu A0 hinzu
000272B2 <AmiBlitz3.ab3@10454>           MOVE.l -$4(A1),D0    ;number of longwords.       ;   hole die 4bytes vor nach D0
000272B4 <AmiBlitz3.ab3@10455>           ADD.l D0,D0          ;to bytes...                ;   verdoppele D0
000272B6 <AmiBlitz3.ab3@10456>           ADD.l D0,D0                                      ;   verdoppele D0 nochmal
000272BA <AmiBlitz3.ab3@10457>           MOVE.l D0,$6(A1)     ;fix 1                      ;   schreibe D0 6bytes nach A1
000272BE <AmiBlitz3.ab3@10458>           CLR.l $20(A1)        ;no relocs                  ;   loesche D0+40bytes
000272C2 <AmiBlitz3.ab3@10459>           LEA $C(A1,D0.L),A2   ;reloc info.                ;   lade inhalt von (A1)+D0+$C nach A2
000272C4 <AmiBlitz3.ab3@10460>           CMPA.l A0,A2         ;is it over?
000272C8 <AmiBlitz3.ab3@10461>           BCC.b 'linkloop                                  ; wenn A0=>A2
000272CE <AmiBlitz3.ab3@10463>             MOVE.l -$8(A2),$20(A1)  ;number of relocs.     ;
000272D2 <AmiBlitz3.ab3@10464>             MOVE.l A2,$24(A1)       ;pointer to relocs.    ;
000272D6 <AmiBlitz3.ab3@10465>   BRA.w 'linkloop
000272D8 <AmiBlitz3.ab3@10468>       MOVE.l D5,D0
000272DA <AmiBlitz3.ab3@10471> RTS
00027304 <AmiBlitz3.ab3@10476>   !basic
00027378 <AmiBlitz3.ab3@10477>    tempmapping$ = dos_AddPart{my_systemdir$,"token_mapping_userlibs.txt"}
000273AC <AmiBlitz3.ab3@10478>    dos_Delete{tempmapping$}
000273F0 <AmiBlitz3.ab3@10479>    fid.l = file_Open{tempmapping$,#file_forcewrite}
0002740E <AmiBlitz3.ab3@10480>   !asm
00027414 <AmiBlitz3.ab3@10482>   LEA libpointer,A3
0002741A <AmiBlitz3.ab3@10486>   MOVE.l size_deflibs,D0                 ; in org source was acid libs first
00027420 <AmiBlitz3.ab3@10487>   MOVE.l deflib,d1
00027424 <AmiBlitz3.ab3@10489>   BEQ 'l1
00027428 <AmiBlitz3.ab3@10490>  BRA 'l2
0002742E <AmiBlitz3.ab3@10493>   MOVE.l #str_path_deflibs,D1
00027432 <AmiBlitz3.ab3@10497>   BSR.w load_libsfile
00027438 <AmiBlitz3.ab3@10498>   MOVE.l D0,ptr_deflibs
0002743E <AmiBlitz3.ab3@10501>   MOVE.l size_acidlibs,D0               ; in org source was deflibs libs second
00027444 <AmiBlitz3.ab3@10502>   MOVE.l #str_path_acidlibs,D1
00027448 <AmiBlitz3.ab3@10503>   BSR.w load_libsfile
0002744E <AmiBlitz3.ab3@10504>   MOVE.l D0,ptr_acidlibs
00027450 <AmiBlitz3.ab3@10510>   CLR.l (A3)
00027456 <AmiBlitz3.ab3@10511>   MOVE.l A3,ptr_userlibs
0002745C <AmiBlitz3.ab3@10516>   LEA str_libfilename,A0
00027462 <AmiBlitz3.ab3@10517>   LEA str_path_userlibs,A1
00027464 <AmiBlitz3.ab3@10520>     MOVE.b (A1)+,(A0)+
00027468 <AmiBlitz3.ab3@10521>   BNE.b 'loop0
0002746A <AmiBlitz3.ab3@10524>   SUBQ.w #1,A0
0002746E <AmiBlitz3.ab3@10525>   MOVE.b #$2F,(A0)+
00027470 <AmiBlitz3.ab3@10529>   MOVE.l A0,-(A7) ;store first pos for chars        ; -- store str_path_userlibs in A7
00027476 <AmiBlitz3.ab3@10531>   LEA ptr_userlibs_list,A2   ;lib names!
0002747C <AmiBlitz3.ab3@10532>   MOVEA.l ptr_userlibs,A3
00027482 <AmiBlitz3.ab3@10533>   MOVEA.l _dosbase,A6
00027484 <AmiBlitz3.ab3@10538>       MOVE.l (A2),D0                                       ; addresse aus liste nach D0
00027488 <AmiBlitz3.ab3@10539>       BNE.b 'more                                      ; wenn nix drin, processing ueberspringen
0002748A <AmiBlitz3.ab3@10541>       CLR.l (A3)
0002748C <AmiBlitz3.ab3@10542>       ADDQ.w #4,A7
000274B6 <AmiBlitz3.ab3@10544>       !basic
000274CA <AmiBlitz3.ab3@10545>       If fid<>-1
000274D4 <AmiBlitz3.ab3@10546>         file_Close{fid}
000274E0 <AmiBlitz3.ab3@10547>         fid = -1
000274FE <AmiBlitz3.ab3@10549>       !asm
00027502 <AmiBlitz3.ab3@10551>  BRA.w process_libraries
00027504 <AmiBlitz3.ab3@10554>       MOVEA.l D0,A2                                        ; addresse zureuck nach A2
00027508 <AmiBlitz3.ab3@10555>       TST.w $4(A2)                                         ; naechste addresse pruefen
0002750C <AmiBlitz3.ab3@10556>     BEQ.b 'loop
00027510 <AmiBlitz3.ab3@10558>     LEA $6(A2),A1          ;add dir name to libsdir
00027512 <AmiBlitz3.ab3@10559>     MOVEA.l (A7),A0
00027514 <AmiBlitz3.ab3@10562>       MOVE.b (A1)+,(A0)+
00027518 <AmiBlitz3.ab3@10563>     BNE.w 'loop2
0002751A <AmiBlitz3.ab3@10567>     MOVE.l A0,-(A7)                  ;pointer for lib name
00027520 <AmiBlitz3.ab3@10569>     MOVE.l #str_libfilename,D1
00027522 <AmiBlitz3.ab3@10570>     MOVEQ.l #-$02,D2
00027528 <AmiBlitz3.ab3@10571>     MOVEA.l _dosbase,A6
0002752C <AmiBlitz3.ab3@10572>      JSR _Lock(A6)
0002752E <AmiBlitz3.ab3@10573>     MOVE.l D0,D1
00027532 <AmiBlitz3.ab3@10574>      BEQ.w 'exdone2
00027534 <AmiBlitz3.ab3@10575>     MOVEA.l (A7),A0
0002753A <AmiBlitz3.ab3@10576>     MOVE.b #$2F,-$1(A0)           ;#'/'
0002753C <AmiBlitz3.ab3@10579>     MOVE.l D1,-(A7)               ;lock
00027542 <AmiBlitz3.ab3@10580>     MOVE.l #ptr_parameterstore,D2
00027548 <AmiBlitz3.ab3@10581>     MOVEA.l _dosbase,A6
0002754C <AmiBlitz3.ab3@10582>     JSR _Examine(A6)
0002754E <AmiBlitz3.ab3@10583>     TST.l D0
00027552 <AmiBlitz3.ab3@10584>      BEQ.w 'exdone
00027558 <AmiBlitz3.ab3@10591>     LEA fib_FileName,A0
0002755C <AmiBlitz3.ab3@10592>     BSR.w check_for_infoextention
00027560 <AmiBlitz3.ab3@10593>     BEQ.w 'exdone
0002758A <AmiBlitz3.ab3@10597>     !basic
0002760E <AmiBlitz3.ab3@10598>       Poke$ ?str_libfilename,dos_AddPart{Peek$(?str_path_userlibs),Peek$(?fib_FileName)}
0002762C <AmiBlitz3.ab3@10599>     !asm
00027632 <AmiBlitz3.ab3@10600>     MOVE.l #str_libfilename,D1
00027636 <AmiBlitz3.ab3@10601>     BSR.w open_userlibfile
00027638 <AmiBlitz3.ab3@10605>     MOVE.l (A7)+,D1
0002763E <AmiBlitz3.ab3@10606>     MOVEA.l _dosbase,A6
00027642 <AmiBlitz3.ab3@10607>     JSR _UnLock(A6)
00027644 <AmiBlitz3.ab3@10610>     ADDQ.w #4,A7    ;forget namepos
00027648 <AmiBlitz3.ab3@10611> BRA.w 'loop
0002764E <AmiBlitz3.ab3@10618>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00027654 <AmiBlitz3.ab3@10619>   MOVEA.l _dosbase,A6
00027658 <AmiBlitz3.ab3@10620>    JSR _Open(A6)
0002765A <AmiBlitz3.ab3@10621>   MOVE.l D0,D7
0002765E <AmiBlitz3.ab3@10622>    BEQ.w 'openerr
00027660 <AmiBlitz3.ab3@10625>   MOVE.l D7,D1                                             ; filehandle
00027666 <AmiBlitz3.ab3@10626>   MOVE.l #optstuff,D2                                     ; buffer
0002766C <AmiBlitz3.ab3@10627>   MOVEA.l _dosbase,A6
0002766E <AmiBlitz3.ab3@10628>   MOVEQ.l #$20,D3                                          ; size
00027672 <AmiBlitz3.ab3@10629>   JSR _Read(A6)
00027678 <AmiBlitz3.ab3@10632>   MOVE.l optstuff+28,D6      ;long words to read
0002767A <AmiBlitz3.ab3@10633>   LSL.l #2,D6
0002767C <AmiBlitz3.ab3@10634>   MOVE.l D6,D0
0002767E <AmiBlitz3.ab3@10635>   MOVEQ.l #$01,D1
00027684 <AmiBlitz3.ab3@10636>   MOVEA.l _execbase,A6
0002768A <AmiBlitz3.ab3@10639>   MOVE.l mempool,a0
0002768E <AmiBlitz3.ab3@10640>   JSR _AllocPooled(a6)
00027690 <AmiBlitz3.ab3@10642>   MOVEA.l D0,A5
00027696 <AmiBlitz3.ab3@10645>   MOVEA.l _dosbase,A6
00027698 <AmiBlitz3.ab3@10646>   MOVE.l D7,D1                                             ; filehandle
0002769A <AmiBlitz3.ab3@10647>   MOVE.l A5,D2                                             ; buffer
0002769C <AmiBlitz3.ab3@10648>   MOVE.l D6,D3                                             ; size
000276A0 <AmiBlitz3.ab3@10649>    JSR _Read(A6)   ;read in struct
000276A2 <AmiBlitz3.ab3@10651>   MOVE.l A5,(A3)
000276A4 <AmiBlitz3.ab3@10654>   MOVE.l A5,d0
000276A6 <AmiBlitz3.ab3@10657>   MOVEA.l A5,A3
000276AA <AmiBlitz3.ab3@10658>   MOVE.l D6,$6(A5)
000276AE <AmiBlitz3.ab3@10659>   CLR.l $20(A5)
000276D8 <AmiBlitz3.ab3@10661>   !basic
000276E2 <AmiBlitz3.ab3@10663>   addr_libnum.l = PutD0 + 4
000276F6 <AmiBlitz3.ab3@10664>   If fid<>-1
00027796 <AmiBlitz3.ab3@10665>     currentlib$ = LSet$(Peek.s(?fib_FileName),30)+";"+LSet$(Get_Libinfo{addr_libnum},30) ;+";"+Str$(Peek.w(addr_libnum))
000277C8 <AmiBlitz3.ab3@10666>     file_WriteLine{fid,currentlib$}
000277E6 <AmiBlitz3.ab3@10668>   !asm
000277E8 <AmiBlitz3.ab3@10671>   MOVE.l D7,D1                                             ; filehandle
000277EE <AmiBlitz3.ab3@10672>   MOVE.l #optstuff,D2                                     ; buffer
000277F0 <AmiBlitz3.ab3@10673>   MOVEQ.l #$0C,D3                                          ; size
000277F6 <AmiBlitz3.ab3@10674>   MOVEA.l _dosbase,A6
000277FA <AmiBlitz3.ab3@10675>    JSR _Read(A6)
00027800 <AmiBlitz3.ab3@10678>   CMP.l #$C,D0
00027804 <AmiBlitz3.ab3@10679>    BCS.w 'closeup
0002780A <AmiBlitz3.ab3@10682>   MOVE.l optstuff+4,D0
0002780E <AmiBlitz3.ab3@10683>   MOVE.l D0,$20(A5)
00027810 <AmiBlitz3.ab3@10684>   LSL.l #2,D0
00027812 <AmiBlitz3.ab3@10685>   MOVE.l D0,D5             ;length of reloc info
00027814 <AmiBlitz3.ab3@10686>   MOVEQ.l #$01,D1
0002781A <AmiBlitz3.ab3@10687>   MOVEA.l _execbase,A6
00027820 <AmiBlitz3.ab3@10689>   MOVE.l mempool,a0
00027824 <AmiBlitz3.ab3@10690>   JSR _AllocPooled(a6)
0002782A <AmiBlitz3.ab3@10693>   MOVEA.l _dosbase,A6
0002782E <AmiBlitz3.ab3@10695>   MOVE.l D0,$24(A5)        ;pointer to reloc mem
00027830 <AmiBlitz3.ab3@10696>   MOVE.l D7,D1
00027832 <AmiBlitz3.ab3@10697>   MOVE.l D0,D2
00027834 <AmiBlitz3.ab3@10698>   MOVE.l D5,D3
00027838 <AmiBlitz3.ab3@10699>   JSR _Read(A6)
0002783A <AmiBlitz3.ab3@10702>   MOVE.l D7,D1
00027840 <AmiBlitz3.ab3@10703>   MOVEA.l _dosbase,A6
00027844 <AmiBlitz3.ab3@10704> JMP _Close(A6)
00027846 <AmiBlitz3.ab3@10707> RTS
0002784C <AmiBlitz3.ab3@10717>   CLR.w number_of_objects
00027852 <AmiBlitz3.ab3@10718>   MOVEA.l end_of_tokenlist,A3
00027858 <AmiBlitz3.ab3@10719>   MOVEA.l libpointer,A2
0002785C <AmiBlitz3.ab3@10722>     CMPA.w #$0,A2
00027860 <AmiBlitz3.ab3@10723>     BEQ.w 'done                                        ; <-- abbruch mit RTS
00027864 <AmiBlitz3.ab3@10725>     MOVE.w $4(A2),D7                                       ; <-- get tokennumber
00027868 <AmiBlitz3.ab3@10726>     BMI.w 'syslib
0002786A <AmiBlitz3.ab3@10727>       LSL.w #7,D7
0002786C <AmiBlitz3.ab3@10728>       ADDQ.w #1,D7
00027870 <AmiBlitz3.ab3@10729>       MOVE.w D7,$E(A2)
00027874 <AmiBlitz3.ab3@10732>     LEA $30(A2),A1
0002787A <AmiBlitz3.ab3@10733>     LEA temp1,A4
0002787C <AmiBlitz3.ab3@10736>       MOVE.w (A1),D0
00027880 <AmiBlitz3.ab3@10737>       BMI.w 'next
00027882 <AmiBlitz3.ab3@10738>       MOVE.l A1,(A4)
00027884 <AmiBlitz3.ab3@10739>       MOVEA.l A1,A4      ;last link for subs
00027886 <AmiBlitz3.ab3@10740>       ADDQ.w #2,A4
00027888 <AmiBlitz3.ab3@10741>       ADDQ.w #6,A1
0002788C <AmiBlitz3.ab3@10742>       CMP.w #$8,D0
00027890 <AmiBlitz3.ab3@10743>       BEQ.w 'addtoke
00027894 <AmiBlitz3.ab3@10744>         ANDI.w #$F,D0
00027898 <AmiBlitz3.ab3@10745>         BNE.w 'something
0002789C <AmiBlitz3.ab3@10749>           BSR.w skiplibreg
000278A0 <AmiBlitz3.ab3@10750>           LEA $C(A1),A1
000278A2 <AmiBlitz3.ab3@10751>           ADDQ.w #1,D7   ;in case it's a user lib
000278A6 <AmiBlitz3.ab3@10752>  BRA.w 'loop2
000278AA <AmiBlitz3.ab3@10755>     BTST #$2,D0
000278AE <AmiBlitz3.ab3@10756>     BEQ.w 'notalib
000278B0 <AmiBlitz3.ab3@10757>       ADDQ.w #4,A1
000278B2 <AmiBlitz3.ab3@10760>         TST.b (A1)+
000278B6 <AmiBlitz3.ab3@10761>       BPL.w 'alibloop
000278BA <AmiBlitz3.ab3@10762>       BSR.w aligna1
000278BE <AmiBlitz3.ab3@10763>  BRA.w 'addtoke
000278C0 <AmiBlitz3.ab3@10768>       MOVE.w (A1)+,D0
000278C4 <AmiBlitz3.ab3@10769>       BMI.w 'addtoke
000278C8 <AmiBlitz3.ab3@10770>       ANDI.w #$FF,D0
000278CA <AmiBlitz3.ab3@10771>       ADDA.w D0,A1
000278CE <AmiBlitz3.ab3@10772>       BSR.w aligna1
000278D2 <AmiBlitz3.ab3@10773>       BSR.w skiplibreg
000278D6 <AmiBlitz3.ab3@10774>       LEA $C(A1),A1
000278DA <AmiBlitz3.ab3@10775>  BRA.w 'stloop
000278DC <AmiBlitz3.ab3@10778>     MOVE.l A1,(A3)
000278DE <AmiBlitz3.ab3@10779>     MOVEA.l A1,A3
000278E0 <AmiBlitz3.ab3@10780>     ADDQ.w #4,A1
000278E2 <AmiBlitz3.ab3@10782>     MOVE.w D7,(A1)+
000278E4 <AmiBlitz3.ab3@10785>       TST.b (A1)+
000278E8 <AmiBlitz3.ab3@10786>     BNE.w 'tokeloop
000278EA <AmiBlitz3.ab3@10789>       TST.b (A1)+
000278EE <AmiBlitz3.ab3@10790>     BNE.w 'tokeloop2
000278F2 <AmiBlitz3.ab3@10791>     BSR.w aligna1
000278F4 <AmiBlitz3.ab3@10792>     ADDQ.w #1,D7
000278F8 <AmiBlitz3.ab3@10793>  BRA.w 'loop2
000278FC <AmiBlitz3.ab3@10796>     TST.w $4(A2)
00027900 <AmiBlitz3.ab3@10797>      BMI.w 'notulib
00027904 <AmiBlitz3.ab3@10798>     MOVE.w D7,$10(A2)
00027906 <AmiBlitz3.ab3@10801>     ADDQ.w #2,A1
00027908 <AmiBlitz3.ab3@10802>     TST.l (A1)+
0002790C <AmiBlitz3.ab3@10803>      BEQ.w 'nomax
00027912 <AmiBlitz3.ab3@10804>     ADDQ.w #1,number_of_objects
00027916 <AmiBlitz3.ab3@10805>     LEA $16(A1),A1
00027918 <AmiBlitz3.ab3@10808>     SUBA.l A2,A1
0002791C <AmiBlitz3.ab3@10809>     MOVE.l A1,$12(A2)
0002791E <AmiBlitz3.ab3@10810>     MOVEA.l (A2),A2
00027922 <AmiBlitz3.ab3@10811>  BRA.w 'loop
00027924 <AmiBlitz3.ab3@10814>   CLR.l (A3)
0002792A <AmiBlitz3.ab3@10816> 
00027930 <AmiBlitz3.ab3@10818>   MOVE.l A7,errstack
0002793A <AmiBlitz3.ab3@10819>   MOVE.l #'cont,errcont
00027942 <AmiBlitz3.ab3@10820>   MOVE.w #$FFFF,ezerr       ; was -1
00027946 <AmiBlitz3.ab3@10821>   MOVE.w #$FFFA,D1          ;#65530
0002794A <AmiBlitz3.ab3@10822>    BSR.w findlib            ;get address of mem lib
00027950 <AmiBlitz3.ab3@10823>   MOVE.l A1,tempvm
00027954 <AmiBlitz3.ab3@10824>   MOVE.w #$FDA7,D1          ;#64935,
00027958 <AmiBlitz3.ab3@10825>    BSR.w findlib
0002795E <AmiBlitz3.ab3@10826>   MOVE.l A1,ffplib
00027960 <AmiBlitz3.ab3@10829> RTS
00027964 <AmiBlitz3.ab3@10832> ffplib:  Ds.l 1
00027966 <AmiBlitz3.ab3@10836>     TST.w (A1)+
0002796A <AmiBlitz3.ab3@10837>     BEQ.w 'done
0002796C <AmiBlitz3.ab3@10838>     ADDQ.w #2,A1
00027970 <AmiBlitz3.ab3@10839>  BRA.w skiplibreg
00027972 <AmiBlitz3.ab3@10842> RTS
00027974 <AmiBlitz3.ab3@10846>   EXG.l A1,A0
00027978 <AmiBlitz3.ab3@10847>   BSR.w aligna1
0002797A <AmiBlitz3.ab3@10848>   EXG.l A1,A0
0002797C <AmiBlitz3.ab3@10849> RTS
0002797E <AmiBlitz3.ab3@10853>   EXG.l D0,A1
00027980 <AmiBlitz3.ab3@10854>   ADDQ.l #1,D0
00027984 <AmiBlitz3.ab3@10855>   BCLR #$0,D0
00027986 <AmiBlitz3.ab3@10856>   EXG.l D0,A1
00027988 <AmiBlitz3.ab3@10857> RTS
0002798E <AmiBlitz3.ab3@10861>   MOVEA.l _execbase,A6
00027994 <AmiBlitz3.ab3@10862>   MOVEA.l ptr_userlibs,A2
00027996 <AmiBlitz3.ab3@10863>   MOVE.l (A2),D0
00027998 <AmiBlitz3.ab3@10864>   CLR.l (A2)
0002799A <AmiBlitz3.ab3@10865>   MOVEA.l D0,A2
0002799E <AmiBlitz3.ab3@10868>     CMPA.w #$0,A2
000279A2 <AmiBlitz3.ab3@10869>     BEQ.w free_userlib
000279A6 <AmiBlitz3.ab3@10871>     MOVE.l $20(A2),D0
000279AA <AmiBlitz3.ab3@10872>     BEQ.b 'skip
000279AC <AmiBlitz3.ab3@10873>       LSL.l #2,D0
000279B2 <AmiBlitz3.ab3@10875>       MOVE.l mempool,a0
000279B6 <AmiBlitz3.ab3@10877>       MOVEA.l $24(A2),A1
000279BA <AmiBlitz3.ab3@10879>       JSR _FreePooled(A6)
000279BC <AmiBlitz3.ab3@10884>     MOVEA.l A2,A1
000279C0 <AmiBlitz3.ab3@10885>     MOVE.l $6(A1),D0
000279C6 <AmiBlitz3.ab3@10887>     MOVE.l mempool,a0
000279C8 <AmiBlitz3.ab3@10889>     MOVEA.l (A2),A2
000279CE <AmiBlitz3.ab3@10891>     MOVEA.l _execbase,A6
000279D2 <AmiBlitz3.ab3@10892>     JSR _FreePooled(A6)
000279D6 <AmiBlitz3.ab3@10895> BRA.w 'loop
000279DA <AmiBlitz3.ab3@10899>   BSR.w free_userlibs
000279E0 <AmiBlitz3.ab3@10901>   MOVEA.l _execbase,A6
000279E6 <AmiBlitz3.ab3@10902>   CLR.l libpointer
000279EC <AmiBlitz3.ab3@10903>   MOVEA.l end_of_tokenlist,A0
000279EE <AmiBlitz3.ab3@10904>   CLR.l (A0)
000279F4 <AmiBlitz3.ab3@10906>   MOVE.l size_acidlibs,D0
000279F8 <AmiBlitz3.ab3@10907>   BEQ.b 'defskip
000279FE <AmiBlitz3.ab3@10908>     MOVE.l ptr_acidlibs,D1
00027A02 <AmiBlitz3.ab3@10909>     BEQ.b 'defskip
00027A08 <AmiBlitz3.ab3@10910>       CLR.l ptr_acidlibs
00027A0A <AmiBlitz3.ab3@10911>       MOVEA.l D1,A1
00027A10 <AmiBlitz3.ab3@10913>       MOVE.l mempool,a0
00027A16 <AmiBlitz3.ab3@10914>       MOVEA.l _execbase,A6
00027A1A <AmiBlitz3.ab3@10915>       JSR _FreePooled(A6)                                 ; free acidlibs
00027A20 <AmiBlitz3.ab3@10920>   MOVE.l size_deflibs,D0
00027A24 <AmiBlitz3.ab3@10921>   BEQ.b 'acidskip
00027A2A <AmiBlitz3.ab3@10922>     MOVE.l ptr_deflibs,D1
00027A2E <AmiBlitz3.ab3@10923>     BEQ.b 'acidskip
00027A34 <AmiBlitz3.ab3@10924>       CLR.l ptr_deflibs                                    ; d0: memorySize
00027A36 <AmiBlitz3.ab3@10925>       MOVEA.l D1,A1                                        ; a1: memory
00027A3C <AmiBlitz3.ab3@10927>       MOVE.l mempool,a0                                    ; a0: poolHeader
00027A42 <AmiBlitz3.ab3@10928>       MOVEA.l _execbase,A6
00027A46 <AmiBlitz3.ab3@10929>       JSR _FreePooled(A6)                                  ; free deflibs
00027A48 <AmiBlitz3.ab3@10934> RTS
00027A4E <AmiBlitz3.ab3@10938>   MOVEA.l currentmacroaddr,A0
00027A50 <AmiBlitz3.ab3@10939>   MOVEA.l (A0),A2
00027A52 <AmiBlitz3.ab3@10940>   CLR.l (A0)
00027A58 <AmiBlitz3.ab3@10941>   MOVEA.l _execbase,A6
00027A5C <AmiBlitz3.ab3@10944>     CMPA.w #$0,A2
00027A60 <AmiBlitz3.ab3@10945>     BEQ.w 'done
00027A62 <AmiBlitz3.ab3@10946>     MOVEQ.l #$00,D0
00027A66 <AmiBlitz3.ab3@10947>     MOVE.w $8(A2),D0
00027A6A <AmiBlitz3.ab3@10948>     BEQ.w 'skip
00027A6E <AmiBlitz3.ab3@10949>     MOVEA.l $4(A2),A1
00027A74 <AmiBlitz3.ab3@10951>     MOVE.l mempool,a0
00027A78 <AmiBlitz3.ab3@10952>     JSR _FreePooled(A6)
00027A7A <AmiBlitz3.ab3@10957>     MOVEA.l A2,A1
00027A7C <AmiBlitz3.ab3@10958>     MOVEA.l (A2),A2
00027A7E <AmiBlitz3.ab3@10959>     MOVEQ.l #$00,D0
00027A82 <AmiBlitz3.ab3@10960>     MOVE.b $C(A1),D0
00027A88 <AmiBlitz3.ab3@10962>     MOVE.l mempool2,a0
00027A8C <AmiBlitz3.ab3@10963>     JSR _FreePooled(A6)
00027A90 <AmiBlitz3.ab3@10967>  BRA.w 'loop
00027A92 <AmiBlitz3.ab3@10970> RTS
00027A98 <AmiBlitz3.ab3@10974>   MOVEA.l templabel,A2
00027A9E <AmiBlitz3.ab3@10975>   CLR.l templabel
00027AA0 <AmiBlitz3.ab3@10977> RTS
00027AA6 <AmiBlitz3.ab3@10979>   MOVEA.l _execbase,A6                                     ;??looks like dead code?
00027AAA <AmiBlitz3.ab3@10982>     CMPA.w #$0,A2
00027AAE <AmiBlitz3.ab3@10983>     BEQ.w 'done
00027AB0 <AmiBlitz3.ab3@10984>     MOVEQ.l #$00,D0
00027AB4 <AmiBlitz3.ab3@10985>     MOVE.b $E(A2),D0                                       ;labeltemp
00027AB6 <AmiBlitz3.ab3@10986>     MOVEA.l A2,A1
00027AB8 <AmiBlitz3.ab3@10987>     MOVEA.l (A2),A2
00027ABE <AmiBlitz3.ab3@10989>     MOVE.l mempool2,a0
00027AC2 <AmiBlitz3.ab3@10994>  BRA.w 'loop
00027AC4 <AmiBlitz3.ab3@10997> RTS
00027ACA <AmiBlitz3.ab3@11001>   MOVEA.l data1,A4
00027AD0 <AmiBlitz3.ab3@11002>   CMPA.l data2at,A4
00027AD4 <AmiBlitz3.ab3@11003>   BCC.w 'over
00027AD6 <AmiBlitz3.ab3@11004>     MOVE.b D1,(A4)+
00027ADC <AmiBlitz3.ab3@11005>     MOVE.l A4,data1
00027ADE <AmiBlitz3.ab3@11006>  RTS
00027AE6 <AmiBlitz3.ab3@11009>   MOVE.w #$FFFF,dontwrite_nomemleft     ; was -1                             ;move #-1, org source
00027AEC <AmiBlitz3.ab3@11010>   ADDQ.l #1,data1
00027AEE <AmiBlitz3.ab3@11011> RTS
00027AF0 <AmiBlitz3.ab3@11015>   SWAP D1
00027AF4 <AmiBlitz3.ab3@11016>   BSR.w pokedata1
00027AF6 <AmiBlitz3.ab3@11017>   SWAP D1
00027AFC <AmiBlitz3.ab3@11020>   MOVEA.l data1,A4
00027B02 <AmiBlitz3.ab3@11021>   CMPA.l data2at,A4
00027B06 <AmiBlitz3.ab3@11022>    BCC.w 'over
00027B08 <AmiBlitz3.ab3@11023>   MOVE.w D1,(A4)+
00027B0E <AmiBlitz3.ab3@11024>   MOVE.l A4,data1
00027B10 <AmiBlitz3.ab3@11025>  RTS
00027B18 <AmiBlitz3.ab3@11028>   MOVE.w #$FFFF,dontwrite_nomemleft    ; was -1
00027B1E <AmiBlitz3.ab3@11029>   ADDQ.l #2,data1
00027B20 <AmiBlitz3.ab3@11030> RTS
00027B26 <AmiBlitz3.ab3@11034>   MOVE.l data1,D3                                      ;write local string/type allocs
00027B28 <AmiBlitz3.ab3@11035>   MOVEQ.l #$00,D4
00027B2C <AmiBlitz3.ab3@11038>   CMPA.w #$0,A2
00027B30 <AmiBlitz3.ab3@11039>    BEQ.w 'done
00027B34 <AmiBlitz3.ab3@11040>   TST.w $6(A2)
00027B38 <AmiBlitz3.ab3@11041>    BNE.w 'next
00027B3C <AmiBlitz3.ab3@11042>   MOVEA.l $A(A2),A3
00027B44 <AmiBlitz3.ab3@11043>   CMPI.l #$100,$4(A3)
00027B48 <AmiBlitz3.ab3@11044>    BCS.w 'next
00027B4C <AmiBlitz3.ab3@11045>   MOVE.w $4(A2),D1
00027B50 <AmiBlitz3.ab3@11046>    BSR.w pokedata1
00027B54 <AmiBlitz3.ab3@11047>   MOVE.w $8(A3),D1
00027B58 <AmiBlitz3.ab3@11048>    BSR.w pokedata1
00027B5A <AmiBlitz3.ab3@11049>   ADDQ.w #1,D4
00027B5C <AmiBlitz3.ab3@11052>    MOVEA.l (A2),A2
00027B60 <AmiBlitz3.ab3@11053>  BRA.w 'loop
00027B62 <AmiBlitz3.ab3@11056>    TST.w D4
00027B66 <AmiBlitz3.ab3@11057>    BEQ.w calcstatic2_skip
00027B6A <AmiBlitz3.ab3@11058>   MOVE.w #$FF37,D1              ;#65335
00027B6E <AmiBlitz3.ab3@11059>    BSR.w uselib                 ;use statics lib
00027B72 <AmiBlitz3.ab3@11060>   MOVE.w #$FFFA,D1              ;use memlib
00027B76 <AmiBlitz3.ab3@11061> BRA.w uselib
00027B7C <AmiBlitz3.ab3@11070>   MOVEA.l varbase,A2                                       ;add alloc mem for types/strings global
00027B82 <AmiBlitz3.ab3@11073>   MOVE.l data1,D3
00027B84 <AmiBlitz3.ab3@11074>   MOVEQ.l #$00,D4
00027B8A <AmiBlitz3.ab3@11076>   TST.b iserror
00027B8E <AmiBlitz3.ab3@11077>   BEQ 'loop
00027B90 <AmiBlitz3.ab3@11078>   RTS
00027B94 <AmiBlitz3.ab3@11082>    CMPA.w #$0,A2
00027B98 <AmiBlitz3.ab3@11083>    BEQ.w 'done
00027B9C <AmiBlitz3.ab3@11084>   TST.w $6(A2)
00027BA0 <AmiBlitz3.ab3@11085>    BNE.w 'next
00027BA4 <AmiBlitz3.ab3@11086>   MOVEA.l $A(A2),A3
00027BAC <AmiBlitz3.ab3@11087>   CMPI.l #$100,$4(A3)
00027BB0 <AmiBlitz3.ab3@11088>    BCS.w 'next
00027BB4 <AmiBlitz3.ab3@11089>   MOVE.w $4(A2),D1
00027BB8 <AmiBlitz3.ab3@11090>    BSR.w pokedata1
00027BBC <AmiBlitz3.ab3@11091>   MOVE.w $8(A3),D1
00027BC0 <AmiBlitz3.ab3@11092>    BSR.w pokedata1
00027BC2 <AmiBlitz3.ab3@11093>   ADDQ.w #1,D4
00027BC4 <AmiBlitz3.ab3@11096>   MOVEA.l (A2),A2
00027BC8 <AmiBlitz3.ab3@11097>  BRA.w 'loop
00027BCE <AmiBlitz3.ab3@11102>   MOVEA.l sharebase,A2  ; org  varbase
00027BD2 <AmiBlitz3.ab3@11105>   CMPA.w #$0,A2
00027BD6 <AmiBlitz3.ab3@11106>    BEQ.w 'doneb
00027BDA <AmiBlitz3.ab3@11108>   TST.w $6(A2)
00027BDE <AmiBlitz3.ab3@11109>    BNE.w 'nextb
00027BE2 <AmiBlitz3.ab3@11110>   MOVEA.l $A(A2),A3
00027BEA <AmiBlitz3.ab3@11111>   CMPI.l #$100,$4(A3)
00027BEE <AmiBlitz3.ab3@11112>    BCS.w 'nextb
00027BF2 <AmiBlitz3.ab3@11113>   MOVE.w $4(A2),D1
00027BF6 <AmiBlitz3.ab3@11114>    BSR.w pokedata1
00027BFA <AmiBlitz3.ab3@11115>   MOVE.w $8(A3),D1
00027BFE <AmiBlitz3.ab3@11116>    BSR.w pokedata1
00027C00 <AmiBlitz3.ab3@11117>   ADDQ.w #1,D4
00027C02 <AmiBlitz3.ab3@11120>   MOVEA.l (A2),A2
00027C06 <AmiBlitz3.ab3@11121>  BRA.w 'loopb
00027C08 <AmiBlitz3.ab3@11125>    TST.w D4
00027C0C <AmiBlitz3.ab3@11126>    BEQ.w calcstatic2_skip
00027C10 <AmiBlitz3.ab3@11127>   MOVE.w #$FF37,D1      ;#65335
00027C14 <AmiBlitz3.ab3@11128>    BSR.w uselib         ;use statics lib                                   ;use statics lib
00027C18 <AmiBlitz3.ab3@11129>   MOVE.w #$FFFA,D1      ;use memlib                                   ;use memlib
00027C1C <AmiBlitz3.ab3@11130> BRA.w uselib
00027C1E <AmiBlitz3.ab3@11133> RTS
00027C24 <AmiBlitz3.ab3@11137>   MOVE.w numtoa2,D1
00027C28 <AmiBlitz3.ab3@11138>    BSR.w writeword
00027C2C <AmiBlitz3.ab3@11139>    BSR.w addoff
00027C2E <AmiBlitz3.ab3@11140>   MOVE.l D3,D1
00027C32 <AmiBlitz3.ab3@11141>    BSR.w writelong
00027C34 <AmiBlitz3.ab3@11142>   SUBQ.w #1,D4
00027C3A <AmiBlitz3.ab3@11143>   MOVE.w D4,endarray+2
00027C40 <AmiBlitz3.ab3@11144>   MOVE.l endarray,D1
00027C44 <AmiBlitz3.ab3@11145> BRA.w writelong
00027C46 <AmiBlitz3.ab3@11149>   MOVE.l D3,-(A7)
00027C4C <AmiBlitz3.ab3@11152>   MOVEA.l _dosbase,A6
00027C50 <AmiBlitz3.ab3@11154>   JSR _Write(a6)
00027C52 <AmiBlitz3.ab3@11155>   CMP.l (A7)+,D0
00027C56 <AmiBlitz3.ab3@11156>    BNE.w 'skip
00027C58 <AmiBlitz3.ab3@11157>  RTS
00027C5A <AmiBlitz3.ab3@11160>   MOVE.l D7,D1
00027C60 <AmiBlitz3.ab3@11163>   MOVEA.l _dosbase,A6
00027C64 <AmiBlitz3.ab3@11165>   JSR _Close(a6)
00027C6A <AmiBlitz3.ab3@11168> JMP error_create_exe
00027C70 <AmiBlitz3.ab3@11177> 
00027C76 <AmiBlitz3.ab3@11179>   MOVE.l A7,errstack
00027C7A <AmiBlitz3.ab3@11181>   MOVEM.l d2-d7/a2-a6,-(a7)
00027C84 <AmiBlitz3.ab3@11183>   MOVE.l #'rts,errcont
00027C8A <AmiBlitz3.ab3@11185>    JSR call_setpointerbusy
00027C92 <AmiBlitz3.ab3@11187>   MOVE.w #$FFFF,anyerrs   ; was -1
00027C9C <AmiBlitz3.ab3@11189>   CMP.l #-1,chipstart
00027CA0 <AmiBlitz3.ab3@11190>   BEQ 'l01
00027CA6 <AmiBlitz3.ab3@11191>   MOVE.l chipend,d1
00027CA8 <AmiBlitz3.ab3@11192>   ADDQ.l #3,d1
00027CAE <AmiBlitz3.ab3@11193>   AND.l #$fffffffc,d1                                      ;bug
00027CB4 <AmiBlitz3.ab3@11194>   MOVE.l d1,chipend
00027CB6 <AmiBlitz3.ab3@11195>   MOVE.l d1,a1
00027CBC <AmiBlitz3.ab3@11196>   MOVE.l chipstart,a0
00027CBE <AmiBlitz3.ab3@11197>   MOVE.l a1,d1
00027CC0 <AmiBlitz3.ab3@11198>   SUB.l a0,d1
00027CC6 <AmiBlitz3.ab3@11199>   MOVE.l d1,chipsize
00027CD0 <AmiBlitz3.ab3@11202>   CMP.l #-1,bssstart
00027CD4 <AmiBlitz3.ab3@11203>   BEQ 'l11
00027CDA <AmiBlitz3.ab3@11204>   MOVE.l realbssend,a1
00027CE0 <AmiBlitz3.ab3@11205>   MOVE.l bssstart,a0
00027CE2 <AmiBlitz3.ab3@11206>   MOVE.l a1,d1
00027CE4 <AmiBlitz3.ab3@11207>   SUB.l a0,d1
00027CEA <AmiBlitz3.ab3@11208>   MOVE.l d1,bsssize
00027CEE <AmiBlitz3.ab3@11209>   BEQ 'l11
00027CF0 <AmiBlitz3.ab3@11212>   TST.b (a0)+
00027CF4 <AmiBlitz3.ab3@11213>   BEQ 'l31
00027CFA <AmiBlitz3.ab3@11214>   TST.b debugmode
00027CFE <AmiBlitz3.ab3@11215>   BEQ 'l1
00027D04 <AmiBlitz3.ab3@11216>   TST.b exdebug
00027D08 <AmiBlitz3.ab3@11217>   BNE 'l31
00027D0E <AmiBlitz3.ab3@11220>   MOVE.l #nodata,-(a7)
00027D14 <AmiBlitz3.ab3@11221>  JMP handle_compileerror
00027D16 <AmiBlitz3.ab3@11224>   CMP.l a0,a1
00027D1A <AmiBlitz3.ab3@11225>   BGT 'l32
00027D20 <AmiBlitz3.ab3@11226>   MOVE.l bssend,d1
00027D22 <AmiBlitz3.ab3@11227>   ADDQ.l #3,d1
00027D28 <AmiBlitz3.ab3@11228>   AND.l #$fffffffc,d1                                      ;bug
00027D2E <AmiBlitz3.ab3@11229>   MOVE.l d1,bssend
00027D30 <AmiBlitz3.ab3@11230>   MOVE.l d1,a1
00027D36 <AmiBlitz3.ab3@11231>   MOVE.l bssstart,a0
00027D38 <AmiBlitz3.ab3@11232>   MOVE.l a1,d1
00027D3A <AmiBlitz3.ab3@11233>   SUB.l a0,d1
00027D40 <AmiBlitz3.ab3@11234>   MOVE.l d1,bsssize
00027D44 <AmiBlitz3.ab3@11237>   MOVEM.l d5-d7/d3,-(a7)
00027D4A <AmiBlitz3.ab3@11239>   MOVE.w dontwrite_nomemleft,D1
00027D4E <AmiBlitz3.ab3@11240>   BNE.w 'fixdone
00027D54 <AmiBlitz3.ab3@11242>   MOVE.l chipsize,d5
00027D5A <AmiBlitz3.ab3@11243>   MOVE.l bsssize,d3
00027D60 <AmiBlitz3.ab3@11244>   MOVE.l chipstart,d7
00027D66 <AmiBlitz3.ab3@11245>   MOVE.l bssstart,d6
00027D6C <AmiBlitz3.ab3@11247>   MOVEA.l hunkoffsetbase,A2
00027D72 <AmiBlitz3.ab3@11248>   MOVEA.l destbufferstart,A1
00027D74 <AmiBlitz3.ab3@11249>   MOVE.l A1,D2
00027D7A <AmiBlitz3.ab3@11250>   ADD.l noinits,D2
00027D80 <AmiBlitz3.ab3@11252>   CLR.l hunkoffsetnum
00027D84 <AmiBlitz3.ab3@11256>   CMPA.w #$0,A2
00027D88 <AmiBlitz3.ab3@11257>    BEQ.w 'fixdone
00027D8C <AmiBlitz3.ab3@11258>   MOVE.l $4(A2),D0
00027D90 <AmiBlitz3.ab3@11260>    LEA $0(a1,d0.l),a0
00027D92 <AmiBlitz3.ab3@11261>    MOVE.l (a0),d1
00027D94 <AmiBlitz3.ab3@11262>   TST.l d1
00027D98 <AmiBlitz3.ab3@11263>    BMI.w 'lm1a
00027DA0 <AmiBlitz3.ab3@11264>   MOVE.b #0,newhunk
00027DAA <AmiBlitz3.ab3@11265>   CMP.l #-1,chipstart
00027DAE <AmiBlitz3.ab3@11266>   BEQ 'l10a
00027DB4 <AmiBlitz3.ab3@11267>   CMP.l chipstart,d1
00027DB8 <AmiBlitz3.ab3@11268>   BLT 'l10a
00027DC0 <AmiBlitz3.ab3@11269>   MOVE.b #1,newhunk
00027DC6 <AmiBlitz3.ab3@11270>   CMP.l chipend,d1
00027DCA <AmiBlitz3.ab3@11271>   BGE 'l110a
00027DCC <AmiBlitz3.ab3@11272>   SUB.l d7,(a0)
00027DD4 <AmiBlitz3.ab3@11273>   ADD.l #$80000000,4(a2)
00027DD8 <AmiBlitz3.ab3@11274>  BRA 'noway
00027DDC <AmiBlitz3.ab3@11277>   SUB.l d5,0(a0)
00027DE6 <AmiBlitz3.ab3@11280>   CMP.l #-1,bssstart
00027DEA <AmiBlitz3.ab3@11281>     BEQ 'l11a
00027DF0 <AmiBlitz3.ab3@11282>   CMP.l bssstart,d1
00027DF4 <AmiBlitz3.ab3@11283>   BLT 'l11a
00027DFA <AmiBlitz3.ab3@11284>   CMP.l bssend,d1
00027DFE <AmiBlitz3.ab3@11285>   BGE 'l111a
00027E04 <AmiBlitz3.ab3@11286>   TST.b newhunk
00027E08 <AmiBlitz3.ab3@11287>   BEQ 'ln1a
00027E0A <AmiBlitz3.ab3@11288>   ADD.l d5,(a0)
00027E0C <AmiBlitz3.ab3@11291>   SUB.l d6,(a0)
00027E14 <AmiBlitz3.ab3@11292>   ADD.l #$40000000,4(a2)
00027E18 <AmiBlitz3.ab3@11293>  BRA 'noway
00027E1C <AmiBlitz3.ab3@11296>   SUB.l d3,0(a0)
00027E1E <AmiBlitz3.ab3@11299>   SUB.l D2,(A0)
00027E24 <AmiBlitz3.ab3@11302>   ADDQ.l #1,hunkoffsetnum
00027E26 <AmiBlitz3.ab3@11306>    MOVEA.l (A2),A2
00027E2A <AmiBlitz3.ab3@11307>  BRA.w 'loop0
00027E2E <AmiBlitz3.ab3@11311>   MOVEM.l (a7)+,d5-d7/d3
00027E34 <AmiBlitz3.ab3@11313>   MOVE.l ptr_newexefilename,D1
00027E3A <AmiBlitz3.ab3@11314>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00027E40 <AmiBlitz3.ab3@11315>   MOVEA.l _dosbase,A6
00027E44 <AmiBlitz3.ab3@11316>    JSR _Open(A6)
00027E46 <AmiBlitz3.ab3@11317>   MOVE.l D0,D7
00027E4A <AmiBlitz3.ab3@11318>    BEQ.w execerr
00027E50 <AmiBlitz3.ab3@11320>   MOVE.l objlen,D0
00027E56 <AmiBlitz3.ab3@11322>   SUB.l #moremem,d0
00027E5C <AmiBlitz3.ab3@11324>   SUB.l noinits,D0
00027E66 <AmiBlitz3.ab3@11326>   CMP.l #-1,bssstart
00027E6A <AmiBlitz3.ab3@11327>   BEQ 'l60
00027E70 <AmiBlitz3.ab3@11328>   SUB.l bsssize,d0
00027E76 <AmiBlitz3.ab3@11329>   SUB.l chipsize,d0
00027E7A <AmiBlitz3.ab3@11330>  BRA.s 'l61
00027E84 <AmiBlitz3.ab3@11333>   CMP.l #-1,chipstart
00027E88 <AmiBlitz3.ab3@11334>   BEQ 'l61
00027E8E <AmiBlitz3.ab3@11335>   SUB.l bsssize,d0
00027E94 <AmiBlitz3.ab3@11336>   SUB.l chipsize,d0
00027E96 <AmiBlitz3.ab3@11340>   ADDQ.l #3,D0
00027E98 <AmiBlitz3.ab3@11341>   LSR.l #2,D0
00027E9E <AmiBlitz3.ab3@11342>   MOVE.l D0,tstsize1
00027EA4 <AmiBlitz3.ab3@11343>   MOVE.l D0,tstsize2
00027EA6 <AmiBlitz3.ab3@11344>   MOVE.l D7,D1
00027EAC <AmiBlitz3.ab3@11345>   MOVE.l #tsthead,D2                                      ;hunkbegin
00027EAE <AmiBlitz3.ab3@11346>   MOVEQ.l #$20,D3
00027EB8 <AmiBlitz3.ab3@11348>   CMP.l #-1,bssstart
00027EBC <AmiBlitz3.ab3@11349>   BEQ 'lb1
00027EC6 <AmiBlitz3.ab3@11350>   CMP.l #-1,chipstart
00027ECA <AmiBlitz3.ab3@11351>   BEQ 'lb1
00027ED4 <AmiBlitz3.ab3@11352>   MOVE.l #1,bssnum
00027EDE <AmiBlitz3.ab3@11353>   MOVE.l #2,chipnum
00027EE0 <AmiBlitz3.ab3@11354>   MOVEQ.l #$28,D3
00027EE6 <AmiBlitz3.ab3@11355>   MOVE.l bsssize,d2
00027EE8 <AmiBlitz3.ab3@11356>   ADDQ.l #3,d2
00027EEA <AmiBlitz3.ab3@11357>   ASR.l #2,d2
00027EF0 <AmiBlitz3.ab3@11358>   MOVE.l d2,hunkend+8
00027EF6 <AmiBlitz3.ab3@11359>   MOVE.l d2,bsssize3
00027EFC <AmiBlitz3.ab3@11360>   MOVE.l chipsize,d2
00027EFE <AmiBlitz3.ab3@11361>   ADDQ.l #3,d2
00027F00 <AmiBlitz3.ab3@11362>   ASR.l #2,d2
00027F06 <AmiBlitz3.ab3@11363>   MOVE.l d2,chipsize2
00027F10 <AmiBlitz3.ab3@11364>   ADD.l #$40000000,chipsize2
00027F16 <AmiBlitz3.ab3@11365>   MOVE.l d2,hunkend2+8
00027F1C <AmiBlitz3.ab3@11366>   MOVE.l D0,tstsize1c
00027F22 <AmiBlitz3.ab3@11367>   MOVE.l D0,tstsize2c
00027F28 <AmiBlitz3.ab3@11368>   MOVE.l #hunkbegin2,d2
00027F2C <AmiBlitz3.ab3@11369>  BRA 'l100b
00027F36 <AmiBlitz3.ab3@11372>   CMP.l #-1,bssstart
00027F3A <AmiBlitz3.ab3@11373>   BEQ 'l10b
00027F44 <AmiBlitz3.ab3@11374>   MOVE.l #1,bssnum
00027F46 <AmiBlitz3.ab3@11375>   MOVEQ.l #$24,D3
00027F4C <AmiBlitz3.ab3@11376>   MOVE.l bsssize,d2
00027F4E <AmiBlitz3.ab3@11377>   ADDQ.l #3,d2
00027F50 <AmiBlitz3.ab3@11378>   ASR.l #2,d2
00027F56 <AmiBlitz3.ab3@11379>   MOVE.l d2,hunkend+8
00027F5C <AmiBlitz3.ab3@11380>   MOVE.l d2,bsssize2
00027F62 <AmiBlitz3.ab3@11381>   MOVE.l D0,tstsize1b
00027F68 <AmiBlitz3.ab3@11382>   MOVE.l D0,tstsize2b
00027F6E <AmiBlitz3.ab3@11383>   MOVE.l #hunkbegin,d2
00027F78 <AmiBlitz3.ab3@11386>   CMP.l #-1,chipstart
00027F7C <AmiBlitz3.ab3@11387>   BEQ 'l100b
00027F86 <AmiBlitz3.ab3@11388>   MOVE.l #1,chipnum
00027F88 <AmiBlitz3.ab3@11389>   MOVEQ.l #$24,D3
00027F8E <AmiBlitz3.ab3@11390>   MOVE.l chipsize,d2
00027F90 <AmiBlitz3.ab3@11391>   ADDQ.l #3,d2
00027F92 <AmiBlitz3.ab3@11392>   ASR.l #2,d2
00027F98 <AmiBlitz3.ab3@11393>   MOVE.l d2,hunkend2+8
00027F9E <AmiBlitz3.ab3@11394>   MOVE.l d2,bsssize2
00027FA8 <AmiBlitz3.ab3@11395>   ADD.l #$40000000,bsssize2
00027FAE <AmiBlitz3.ab3@11396>   MOVE.l D0,tstsize1b
00027FB4 <AmiBlitz3.ab3@11397>   MOVE.l D0,tstsize2b
00027FBA <AmiBlitz3.ab3@11398>   MOVE.l #hunkbegin,d2
00027FBE <AmiBlitz3.ab3@11402>    BSR.w mywrite
00027FC4 <AmiBlitz3.ab3@11404>   MOVE.l destbufferstart,D2
00027FCA <AmiBlitz3.ab3@11405>   ADD.l noinits,D2
00027FD0 <AmiBlitz3.ab3@11406>   MOVE.l objlen,D3
00027FD6 <AmiBlitz3.ab3@11407>   SUB.l #moremem,d3
00027FDC <AmiBlitz3.ab3@11408>   SUB.l noinits,D3
00027FE6 <AmiBlitz3.ab3@11410>   CMP.l #-1,bssstart
00027FEA <AmiBlitz3.ab3@11411>   BNE 'l40
00027FF4 <AmiBlitz3.ab3@11412>   CMP.l #-1,chipstart
00027FF8 <AmiBlitz3.ab3@11413>   BNE 'l40
00027FFC <AmiBlitz3.ab3@11414>  BRA 'l41
00028002 <AmiBlitz3.ab3@11417>   MOVE.l codeend,d1
00028004 <AmiBlitz3.ab3@11418>     SUB.l d2,d1
00028006 <AmiBlitz3.ab3@11419>     MOVE.l d1,d3
0002800C <AmiBlitz3.ab3@11420>   SUB.l bsssize,d3
00028012 <AmiBlitz3.ab3@11421>   SUB.l chipsize,d3
00028014 <AmiBlitz3.ab3@11422>   MOVE.l D7,D1
00028018 <AmiBlitz3.ab3@11423>   BSR.w mywrite
0002801E <AmiBlitz3.ab3@11424>   MOVE.l objlen,D3
00028024 <AmiBlitz3.ab3@11425>   SUB.l #moremem,d3
0002802A <AmiBlitz3.ab3@11426>   SUB.l noinits,D3
0002802C <AmiBlitz3.ab3@11427>   MOVE.l d3,d1
00028032 <AmiBlitz3.ab3@11428>   MOVE.l destbufferstart,D2
00028038 <AmiBlitz3.ab3@11429>   ADD.l noinits,D2
0002803A <AmiBlitz3.ab3@11430>   ADD.l d2,d1
00028040 <AmiBlitz3.ab3@11431>   SUB.l codeend,d1
00028042 <AmiBlitz3.ab3@11432>   MOVE.l d1,d3
00028048 <AmiBlitz3.ab3@11433>   MOVE.l codeend,d2
0002804A <AmiBlitz3.ab3@11436>   MOVE.l d2,d1
0002804C <AmiBlitz3.ab3@11437>   ADD.l d3,d1
0002804E <AmiBlitz3.ab3@11439>   ADDQ.l #3,D1
00028054 <AmiBlitz3.ab3@11440>   ANDI.l #$FFFFFFFC,D1
00028056 <AmiBlitz3.ab3@11442>   SUB.l d2,d1
00028058 <AmiBlitz3.ab3@11443>   MOVE.l d1,d3
0002805A <AmiBlitz3.ab3@11444>   MOVE.l D7,D1
0002805E <AmiBlitz3.ab3@11446>    BSR.w mywrite
00028068 <AmiBlitz3.ab3@11448>   MOVE.l hunkoffsetcounter,tstsize3
0002806C <AmiBlitz3.ab3@11449>    BEQ.w 'skip
0002806E <AmiBlitz3.ab3@11450>   MOVE.l D7,D1
00028074 <AmiBlitz3.ab3@11451>   MOVE.l #tstend,D2
00028076 <AmiBlitz3.ab3@11452>   MOVEQ.l #$04,D3           ; was #12
0002807A <AmiBlitz3.ab3@11453>    BSR.w mywrite
00028080 <AmiBlitz3.ab3@11455>    MOVEA.l _execbase,A6
00028086 <AmiBlitz3.ab3@11456>    MOVE.l hunkoffsetcounter,d0
00028088 <AmiBlitz3.ab3@11457>    ASL.l #2,d0
0002808E <AmiBlitz3.ab3@11458>    ADD.l #12,d0
00028090 <AmiBlitz3.ab3@11459>    MOVEQ #0,d1
00028094 <AmiBlitz3.ab3@11460>    JSR _AllocMem(a6)
00028096 <AmiBlitz3.ab3@11461>    TST.l d0
0002809A <AmiBlitz3.ab3@11462>    BEQ 'nomem
000280A0 <AmiBlitz3.ab3@11463>    MOVE.l noinits,D4
000280A2 <AmiBlitz3.ab3@11464>    MOVE.l d5,-(a7)
000280A4 <AmiBlitz3.ab3@11465>    MOVE.l d0,d5
000280A6 <AmiBlitz3.ab3@11466>    MOVE.l d0,a1
000280AC <AmiBlitz3.ab3@11467>    MOVEA.l hunkoffsetbase,A2
000280B4 <AmiBlitz3.ab3@11468>    MOVE.b #0,newhunk
000280B8 <AmiBlitz3.ab3@11471>   CMPA.w #$0,A2
000280BC <AmiBlitz3.ab3@11472>    BEQ.w 'savehunk
000280C2 <AmiBlitz3.ab3@11473>   MOVE.l destbufferstart,D2
000280C8 <AmiBlitz3.ab3@11474>   ADD.l noinits,D2
000280CC <AmiBlitz3.ab3@11475>   MOVE.l  $4(A2),d1
000280D0 <AmiBlitz3.ab3@11476>   BTST #31,d1
000280D4 <AmiBlitz3.ab3@11477>   BEQ 'lh1
000280DC <AmiBlitz3.ab3@11478>   MOVE.b #1,newhunk
000280E0 <AmiBlitz3.ab3@11479>  BRA 'lh3
000280E4 <AmiBlitz3.ab3@11482>   BTST #30,d1
000280E8 <AmiBlitz3.ab3@11483>   BEQ 'lh2
000280F0 <AmiBlitz3.ab3@11484>   MOVE.b #1,newhunk
000280F4 <AmiBlitz3.ab3@11485>  BRA 'lh3
000280F6 <AmiBlitz3.ab3@11488>   ADD.l d1,d2
000280FC <AmiBlitz3.ab3@11489>   CMP.l chipend,d2
00028100 <AmiBlitz3.ab3@11490>   BLT 'l102c
00028106 <AmiBlitz3.ab3@11491>   SUB.l chipsize,d1
0002810C <AmiBlitz3.ab3@11494>   CMP.l bssend,d2
00028110 <AmiBlitz3.ab3@11495>   BLT 'l101c
00028116 <AmiBlitz3.ab3@11496>   SUB.l bsssize,d1
00028118 <AmiBlitz3.ab3@11499>   MOVE.l d1,(a1)
0002811A <AmiBlitz3.ab3@11500>   SUB.l D4,(A1)+
0002811C <AmiBlitz3.ab3@11503>   MOVEA.l (A2),A2
00028120 <AmiBlitz3.ab3@11504>  BRA.w 'oloopb
00028122 <AmiBlitz3.ab3@11507>   MOVE.l D7,D1
00028128 <AmiBlitz3.ab3@11508>   MOVEA.l _dosbase,A6
00028132 <AmiBlitz3.ab3@11509>   MOVE.l hunkoffsetnum,tstsize3
00028136 <AmiBlitz3.ab3@11510>   BEQ 'ln1c
0002813C <AmiBlitz3.ab3@11511>   MOVE.l #tstend+4,d2
0002813E <AmiBlitz3.ab3@11512>     MOVEQ #8,d3
00028142 <AmiBlitz3.ab3@11513>    JSR _Write(A6)
00028144 <AmiBlitz3.ab3@11514>   MOVE.l d7,d1
0002814A <AmiBlitz3.ab3@11515>   MOVE.l hunkoffsetnum,d3
0002814C <AmiBlitz3.ab3@11516>   ASL.l #2,d3
0002814E <AmiBlitz3.ab3@11517>   MOVE.l d5,D2
00028152 <AmiBlitz3.ab3@11518>   JSR _Write(a6)
00028158 <AmiBlitz3.ab3@11521>   TST.b newhunk
0002815C <AmiBlitz3.ab3@11522>   BEQ 'l10c
00028162 <AmiBlitz3.ab3@11523>   MOVEA.l hunkoffsetbase,A2
00028164 <AmiBlitz3.ab3@11524>   MOVE.l d5,a0
00028166 <AmiBlitz3.ab3@11525>   ADDQ #8,a0
0002816E <AmiBlitz3.ab3@11526>   MOVE.l bssnum,-4(a0)
00028170 <AmiBlitz3.ab3@11527>   MOVEQ #0,d6
00028174 <AmiBlitz3.ab3@11530>   CMPA.w #$0,A2
00028178 <AmiBlitz3.ab3@11531>    BEQ.w 'lh3c
0002817E <AmiBlitz3.ab3@11532>   MOVE.l destbufferstart,D2
00028184 <AmiBlitz3.ab3@11533>   ADD.l noinits,D2
00028188 <AmiBlitz3.ab3@11534>   MOVE.l  $4(A2),d1
0002818C <AmiBlitz3.ab3@11535>   BTST #30,d1
00028190 <AmiBlitz3.ab3@11536>   BEQ 'lh1c
00028194 <AmiBlitz3.ab3@11537>   BCLR #30,d1
00028196 <AmiBlitz3.ab3@11538>   MOVE.l d1,(a0)
00028198 <AmiBlitz3.ab3@11539>   SUB.l D4,(A0)+
0002819A <AmiBlitz3.ab3@11540>   ADDQ.l #1,d6
0002819C <AmiBlitz3.ab3@11543>   MOVE.l (a2),a2
000281A0 <AmiBlitz3.ab3@11544>  BRA 'lh2c
000281A2 <AmiBlitz3.ab3@11547>   TST.l d6
000281A6 <AmiBlitz3.ab3@11548>     BEQ 'lh10c
000281A8 <AmiBlitz3.ab3@11549>     MOVE.l d5,a0
000281AA <AmiBlitz3.ab3@11550>     MOVE.l d6,(a0)
000281AC <AmiBlitz3.ab3@11551>     MOVE.l d7,d1
000281AE <AmiBlitz3.ab3@11552>     MOVE.l d5,d2
000281B0 <AmiBlitz3.ab3@11553>     MOVE.l d6,d3
000281B2 <AmiBlitz3.ab3@11554>     ASL.l #2,d3
000281B4 <AmiBlitz3.ab3@11555>     ADDQ.l #8,d3
000281B8 <AmiBlitz3.ab3@11556>     BSR.w mywrite
000281BE <AmiBlitz3.ab3@11559>   MOVEA.l hunkoffsetbase,A2
000281C0 <AmiBlitz3.ab3@11560>   MOVE.l d5,a0
000281C2 <AmiBlitz3.ab3@11561>   ADDQ #8,a0
000281CA <AmiBlitz3.ab3@11562>   MOVE.l chipnum,-4(a0)
000281CC <AmiBlitz3.ab3@11563>   MOVEQ #0,d6
000281D0 <AmiBlitz3.ab3@11566>   CMPA.w #$0,A2
000281D4 <AmiBlitz3.ab3@11567>    BEQ.w 'lh30c
000281DA <AmiBlitz3.ab3@11568>   MOVE.l destbufferstart,D2
000281E0 <AmiBlitz3.ab3@11569>   ADD.l noinits,D2
000281E4 <AmiBlitz3.ab3@11570>   MOVE.l  $4(A2),d1
000281E8 <AmiBlitz3.ab3@11571>   BTST #31,d1
000281EC <AmiBlitz3.ab3@11572>   BEQ 'lh11c
000281F0 <AmiBlitz3.ab3@11573>   BCLR #31,d1
000281F2 <AmiBlitz3.ab3@11574>   MOVE.l d1,(a0)
000281F4 <AmiBlitz3.ab3@11575>   SUB.l D4,(A0)+
000281F6 <AmiBlitz3.ab3@11576>   ADDQ.l #1,d6
000281F8 <AmiBlitz3.ab3@11579>   MOVE.l (a2),a2
000281FC <AmiBlitz3.ab3@11580>  BRA 'lh20c
000281FE <AmiBlitz3.ab3@11583>   TST.l d6
00028202 <AmiBlitz3.ab3@11584>     BEQ 'l10c
00028204 <AmiBlitz3.ab3@11585>     MOVE.l d5,a0
00028206 <AmiBlitz3.ab3@11586>     MOVE.l d6,(a0)
00028208 <AmiBlitz3.ab3@11587>     MOVE.l d7,d1
0002820A <AmiBlitz3.ab3@11588>     MOVE.l d5,d2
0002820C <AmiBlitz3.ab3@11589>     MOVE.l d6,d3
0002820E <AmiBlitz3.ab3@11590>     ASL.l #2,d3
00028210 <AmiBlitz3.ab3@11591>     ADDQ.l #8,d3
00028214 <AmiBlitz3.ab3@11592>     BSR.w mywrite
0002821A <AmiBlitz3.ab3@11596>    MOVEA.l _execbase,A6
00028220 <AmiBlitz3.ab3@11597>    MOVE.l hunkoffsetcounter,d0
00028222 <AmiBlitz3.ab3@11598>    ASL.l #2,d0
00028228 <AmiBlitz3.ab3@11599>    ADD.l #12,d0
0002822A <AmiBlitz3.ab3@11600>    MOVE.l d5,a1
0002822E <AmiBlitz3.ab3@11601>    JSR _FreeMem(a6)
00028234 <AmiBlitz3.ab3@11602>    MOVEA.l _dosbase,A6
00028236 <AmiBlitz3.ab3@11603>    MOVE.l (a7)+,d5
0002823A <AmiBlitz3.ab3@11604>  BRA 'skip2
00028240 <AmiBlitz3.ab3@11608>   MOVEA.l hunkoffsetbase,A2
00028246 <AmiBlitz3.ab3@11609>   MOVE.l noinits,D4
0002824A <AmiBlitz3.ab3@11612>   CMPA.w #$0,A2                                            ;write hunkoffsets
0002824E <AmiBlitz3.ab3@11613>   BEQ.w 'skip2
00028252 <AmiBlitz3.ab3@11614>   LEA $4(A2),A1
00028254 <AmiBlitz3.ab3@11615>   SUB.l D4,(A1)
00028256 <AmiBlitz3.ab3@11616>   MOVE.l D7,D1
00028258 <AmiBlitz3.ab3@11617>   MOVE.l A1,D2
0002825A <AmiBlitz3.ab3@11618>   MOVEQ.l #$04,D3
0002825E <AmiBlitz3.ab3@11619>   BSR.w mywrite
00028262 <AmiBlitz3.ab3@11621>   ADD.l D4,$4(A2)
00028264 <AmiBlitz3.ab3@11622>   MOVEA.l (A2),A2
00028268 <AmiBlitz3.ab3@11623>  BRA.w 'loop
0002826E <AmiBlitz3.ab3@11626>   CLR.l tstsize3
00028270 <AmiBlitz3.ab3@11627>   MOVE.l D7,D1
00028276 <AmiBlitz3.ab3@11628>   MOVE.l #tstsize3,D2
00028278 <AmiBlitz3.ab3@11629>   MOVEQ.l #$04,D3
0002827C <AmiBlitz3.ab3@11630>    BSR.w mywrite
00028284 <AmiBlitz3.ab3@11633>   BTST #$7,link_debuginfo
00028288 <AmiBlitz3.ab3@11634>    BEQ.w 'nodebug
0002828E <AmiBlitz3.ab3@11636>   MOVE.l #sysdebug,D2                                      ;debughunks
00028290 <AmiBlitz3.ab3@11637>   MOVEQ.l #$04,D3
00028292 <AmiBlitz3.ab3@11638>   MOVE.l D7,D1
00028296 <AmiBlitz3.ab3@11639>    BSR.w mywrite
0002829C <AmiBlitz3.ab3@11641>   MOVEA.l labelbase,A2
000282A0 <AmiBlitz3.ab3@11644>   CMPA.w #$0,A2
000282A4 <AmiBlitz3.ab3@11645>    BEQ.w 'dedone
000282AA <AmiBlitz3.ab3@11646>   BTST #$0,$7(A2)
000282AE <AmiBlitz3.ab3@11647>    BEQ.w 'dedeb
000282B6 <AmiBlitz3.ab3@11648>   CMPI.l #$1,$4(A2)
000282BA <AmiBlitz3.ab3@11651>   BRA.w 'denext                                            ;only addr labels
000282BC <AmiBlitz3.ab3@11655>   MOVEQ.l #$00,D4
000282C0 <AmiBlitz3.ab3@11656>   MOVE.b $12(A2),D4
000282C4 <AmiBlitz3.ab3@11657>   SUBI.w #$13,D4
000282C6 <AmiBlitz3.ab3@11658>   ADDQ.w #2,D4
000282CA <AmiBlitz3.ab3@11659>   ANDI.w #$FFFC,D4     ;long align
000282CC <AmiBlitz3.ab3@11660>   MOVE.l D4,D5
000282CE <AmiBlitz3.ab3@11661>   LSR.w #2,D5
000282D4 <AmiBlitz3.ab3@11662>   MOVE.l D5,temp1
000282D6 <AmiBlitz3.ab3@11663>   LSL.w #2,D5          ;#bytes
000282DC <AmiBlitz3.ab3@11665>   MOVE.l #temp1,a1
000282E2 <AmiBlitz3.ab3@11669>   LEA debugstore,a0
000282E4 <AmiBlitz3.ab3@11670>   MOVE.l (a1),(a0)+
000282E6 <AmiBlitz3.ab3@11672>   MOVEQ.l #$04,D3
000282EA <AmiBlitz3.ab3@11676>   LEA $13(A2),A1
000282EC <AmiBlitz3.ab3@11678>   MOVE.l d4,d1
000282EE <AmiBlitz3.ab3@11679>   SUBQ.l #1,d1
000282F0 <AmiBlitz3.ab3@11682>     MOVE.b (a1)+,d0
000282F4 <AmiBlitz3.ab3@11683>     BEQ 'l21d
000282F8 <AmiBlitz3.ab3@11684>     CMP.b #"'",d0                                            ; ' does reassembler/assembler not like, so replace
000282FC <AmiBlitz3.ab3@11685>     BNE 'ok
00028300 <AmiBlitz3.ab3@11686>     MOVE.b #"_",d0
00028302 <AmiBlitz3.ab3@11689>    MOVE.b d0,(a0)+                                      ; copy labeltext to debuginfo
00028306 <AmiBlitz3.ab3@11690>   DBF d1,'l10d
0002830A <AmiBlitz3.ab3@11692>   BRA 'l22d
0002830C <AmiBlitz3.ab3@11695>       CLR.b (a0)+
00028310 <AmiBlitz3.ab3@11696>   DBF d1,'l21d
00028312 <AmiBlitz3.ab3@11699>   ADD.l d4,d3
00028314 <AmiBlitz3.ab3@11706>   SUB.l D4,D5
00028318 <AmiBlitz3.ab3@11707>    BEQ.w 'deoff
0002831E <AmiBlitz3.ab3@11709>   MOVE.l #zero,a1
00028320 <AmiBlitz3.ab3@11713>   MOVE.l (a1),(a0)+
00028322 <AmiBlitz3.ab3@11717>   ADD.l d5,d3
00028326 <AmiBlitz3.ab3@11723>   MOVE.l $8(A2),D2
0002832C <AmiBlitz3.ab3@11724>   SUB.l destbufferstart,D2
00028332 <AmiBlitz3.ab3@11725>   SUB.l noinits,D2
00028338 <AmiBlitz3.ab3@11726>   MOVE.l D2,temp1
0002833E <AmiBlitz3.ab3@11728>   MOVE.l #temp1,a1
00028340 <AmiBlitz3.ab3@11732>   MOVE.l (a1),(a0)+
00028346 <AmiBlitz3.ab3@11733>   ADD.l #4,d3
0002834C <AmiBlitz3.ab3@11734>   LEA debugstore,a0
0002834E <AmiBlitz3.ab3@11735>   MOVE.l a0,d2
00028350 <AmiBlitz3.ab3@11738>   MOVE.l D7,D1
00028354 <AmiBlitz3.ab3@11739>   BSR.w mywrite
00028356 <AmiBlitz3.ab3@11742>   MOVEA.l (A2),A2
0002835A <AmiBlitz3.ab3@11743>  BRA.w 'deloop
00028360 <AmiBlitz3.ab3@11746>   MOVE.l #zero,D2
00028362 <AmiBlitz3.ab3@11747>   MOVEQ.l #$04,D3
00028364 <AmiBlitz3.ab3@11748>   MOVE.l D7,D1
00028368 <AmiBlitz3.ab3@11749>   BSR.w mywrite
0002836A <AmiBlitz3.ab3@11752>   MOVE.l D7,D1
00028370 <AmiBlitz3.ab3@11753>   MOVE.l #tstdone,D2                                      ;hunkend
00028372 <AmiBlitz3.ab3@11754>   MOVEQ.l #$04,D3
0002837C <AmiBlitz3.ab3@11756>   CMPI.l #-1,bssstart
00028380 <AmiBlitz3.ab3@11757>   BEQ 'l10e
00028382 <AmiBlitz3.ab3@11758>   MOVEQ #16,d3
00028388 <AmiBlitz3.ab3@11759>   MOVE.l #hunkend,d2
00028392 <AmiBlitz3.ab3@11760>   CMPI.l #-1,chipstart
00028396 <AmiBlitz3.ab3@11761>   BEQ 'l10e
00028398 <AmiBlitz3.ab3@11762>   MOVE.l d7,d1
0002839A <AmiBlitz3.ab3@11763>   MOVEQ #12,d3
0002839E <AmiBlitz3.ab3@11764>   BSR.w mywrite
000283A8 <AmiBlitz3.ab3@11767>   CMPI.l #-1,chipstart
000283AC <AmiBlitz3.ab3@11768>   BEQ 'l11e
000283AE <AmiBlitz3.ab3@11769>   MOVEQ #12,d3
000283B4 <AmiBlitz3.ab3@11770>   MOVE.l #hunkend2,d2
000283B6 <AmiBlitz3.ab3@11771>   MOVE.l d7,d1
000283BA <AmiBlitz3.ab3@11772>   BSR.w mywrite
000283BC <AmiBlitz3.ab3@11773>   MOVE.l d7,d1
000283C2 <AmiBlitz3.ab3@11774>   MOVE.l chipstart,d2
000283C8 <AmiBlitz3.ab3@11775>   MOVE.l chipsize,d3
000283CC <AmiBlitz3.ab3@11776>   BSR.w mywrite
000283CE <AmiBlitz3.ab3@11777>   MOVEQ #4,d3
000283D4 <AmiBlitz3.ab3@11778>   MOVE.l #hunkend,d2
000283D6 <AmiBlitz3.ab3@11779>   MOVE.l d7,d1
000283DA <AmiBlitz3.ab3@11783>   BSR.w mywrite
000283DC <AmiBlitz3.ab3@11784>   MOVE.l D7,D1
000283E2 <AmiBlitz3.ab3@11785>   MOVEA.l _dosbase,A6
000283E6 <AmiBlitz3.ab3@11786>   JSR _Close(A6)
000283EE <AmiBlitz3.ab3@11791>   BTST #$7,create_iconfile
000283F2 <AmiBlitz3.ab3@11792>    BEQ.w 'done
000283F8 <AmiBlitz3.ab3@11796>   MOVEA.l ptr_newexefilename,A0
000283FA <AmiBlitz3.ab3@11799>     TST.b (A0)+
000283FE <AmiBlitz3.ab3@11800>   BNE.w 'iloop
00028400 <AmiBlitz3.ab3@11801>   SUBQ.w #1,A0
00028402 <AmiBlitz3.ab3@11802>   MOVE.l A0,-(A7)        ;to later null out!
00028408 <AmiBlitz3.ab3@11803>   LEA str_infoextention2,A1
0002840A <AmiBlitz3.ab3@11806>     MOVE.b (A1)+,(A0)+
0002840E <AmiBlitz3.ab3@11807>   BNE.w 'iloop2
00028414 <AmiBlitz3.ab3@11809>   MOVE.l ptr_newexefilename,D1
00028416 <AmiBlitz3.ab3@11810>   MOVEQ.l #-$02,D2
0002841C <AmiBlitz3.ab3@11811>   MOVEA.l _dosbase,A6
00028420 <AmiBlitz3.ab3@11812>   JSR _Lock(A6)
00028422 <AmiBlitz3.ab3@11813>   MOVE.l D0,D1
00028426 <AmiBlitz3.ab3@11814>   BEQ.w 'dildo      ;not exist                                    ;no icon exit so jump to create one  tomsmart1
0002842A <AmiBlitz3.ab3@11815>   JSR _UnLock(A6)                                          ;OH!! there is a Icon so we must Unlock it  tomsmart1
0002842E <AmiBlitz3.ab3@11816>  BRA.w 'ifail                                            ;and skip writing a Icon  tomsmart1
00028434 <AmiBlitz3.ab3@11819>   MOVE.l ptr_newexefilename,D1
0002843A <AmiBlitz3.ab3@11820>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00028440 <AmiBlitz3.ab3@11821>   MOVEA.l _dosbase,A6
00028444 <AmiBlitz3.ab3@11822>    JSR _Open(A6)
00028446 <AmiBlitz3.ab3@11823>   MOVE.l D0,D7
0002844A <AmiBlitz3.ab3@11824>    BEQ.w 'ifail
00028450 <AmiBlitz3.ab3@11825>   MOVE.l #icongfx_data,D2                                  ; icon graphics
00028456 <AmiBlitz3.ab3@11826>   MOVE.l #icongfx_data_end-icongfx_data,D3                 ; length of gfx-data
00028458 <AmiBlitz3.ab3@11827>   MOVE.l D7,D1
0002845E <AmiBlitz3.ab3@11828>   MOVEA.l _dosbase,A6
00028462 <AmiBlitz3.ab3@11829>   JSR _Write(A6)
00028464 <AmiBlitz3.ab3@11830>   MOVE.l D7,D1
00028468 <AmiBlitz3.ab3@11831>   JSR _Close(A6)
0002846A <AmiBlitz3.ab3@11834>   MOVEA.l (A7)+,A0
0002846C <AmiBlitz3.ab3@11835>   CLR.b (A0)
00028472 <AmiBlitz3.ab3@11841>   TST.b exdebug
00028476 <AmiBlitz3.ab3@11842>    BEQ 'fixdoneb
0002847C <AmiBlitz3.ab3@11843>   MOVE.w dontwrite_nomemleft,D1
00028480 <AmiBlitz3.ab3@11844>   BNE.w 'fixdoneb
00028486 <AmiBlitz3.ab3@11845>   MOVE.l chipsize,d5
0002848C <AmiBlitz3.ab3@11846>   MOVE.l bsssize,d3
00028492 <AmiBlitz3.ab3@11847>   MOVE.l chipstart,d7
00028498 <AmiBlitz3.ab3@11848>   MOVE.l bssstart,d6
0002849E <AmiBlitz3.ab3@11849>   MOVEA.l hunkoffsetbase,A2
000284A4 <AmiBlitz3.ab3@11850>   MOVEA.l destbufferstart,A1
000284A6 <AmiBlitz3.ab3@11851>   MOVE.l A1,D2
000284AC <AmiBlitz3.ab3@11852>   ADD.l noinits,D2
000284B2 <AmiBlitz3.ab3@11853>   CLR.l hunkoffsetnum
000284B6 <AmiBlitz3.ab3@11856>   CMPA.w #$0,A2
000284BA <AmiBlitz3.ab3@11857>    BEQ.w 'fixdoneb
000284BE <AmiBlitz3.ab3@11858>   MOVE.l $4(A2),D0
000284C2 <AmiBlitz3.ab3@11859>    LEA $0(a1,d0.l),a0
000284C4 <AmiBlitz3.ab3@11860>    MOVE.l (a0),d1
000284C6 <AmiBlitz3.ab3@11861>   TST.l d1
000284CA <AmiBlitz3.ab3@11862>    BMI.w 'lm1f
000284D2 <AmiBlitz3.ab3@11863>   MOVE.b #0,newhunk
000284DC <AmiBlitz3.ab3@11864>   CMP.l #-1,chipstart
000284E0 <AmiBlitz3.ab3@11865>   BEQ 'l10f
000284E6 <AmiBlitz3.ab3@11866>   CMP.l chipstart,d1
000284EA <AmiBlitz3.ab3@11867>   BLT 'l10f
000284F2 <AmiBlitz3.ab3@11868>   MOVE.b #1,newhunk
000284F8 <AmiBlitz3.ab3@11869>   CMP.l chipend,d1
000284FC <AmiBlitz3.ab3@11870>   BGE 'l110f
000284FE <AmiBlitz3.ab3@11871>   ADD.l d7,(a0)
00028506 <AmiBlitz3.ab3@11872>   ADD.l #$80000000,4(a2)
0002850A <AmiBlitz3.ab3@11873>  BRA 'nowayb
0002850E <AmiBlitz3.ab3@11876>   ADD.l d5,0(a0)
00028518 <AmiBlitz3.ab3@11879>   CMP.l #-1,bssstart
0002851C <AmiBlitz3.ab3@11880>     BEQ 'l11f
00028522 <AmiBlitz3.ab3@11881>   CMP.l bssstart,d1
00028526 <AmiBlitz3.ab3@11882>   BLT 'l11f
0002852C <AmiBlitz3.ab3@11883>   CMP.l bssend,d1
00028530 <AmiBlitz3.ab3@11884>   BGE 'l111f
00028536 <AmiBlitz3.ab3@11885>   TST.b newhunk
0002853A <AmiBlitz3.ab3@11886>   BEQ 'ln1f
0002853C <AmiBlitz3.ab3@11887>   ADD.l d5,(a0)
0002853E <AmiBlitz3.ab3@11890>   ADD.l d6,(a0)
00028546 <AmiBlitz3.ab3@11891>   ADD.l #$40000000,4(a2)
0002854A <AmiBlitz3.ab3@11892>  BRA 'nowayb
0002854E <AmiBlitz3.ab3@11895>   ADD.l d3,0(a0)
00028550 <AmiBlitz3.ab3@11898>   ADD.l D2,(A0)                                            ;only normal code offsets restore
00028556 <AmiBlitz3.ab3@11901>   ADDQ.l #1,hunkoffsetnum
00028558 <AmiBlitz3.ab3@11904>   MOVEA.l (A2),A2
0002855C <AmiBlitz3.ab3@11905>  BRA.w 'loop0b
00028562 <AmiBlitz3.ab3@11909>   JSR call_setpointernormal
00028566 <AmiBlitz3.ab3@11910>   MOVEM.l (a7)+,d2-d7/a2-a6
00028568 <AmiBlitz3.ab3@11913> RTS
0002856A <AmiBlitz3.ab3@11919>   MOVE.l D2,-(A7)
00028570 <AmiBlitz3.ab3@11920>   MOVE.l destpointer,D2
00028576 <AmiBlitz3.ab3@11921>   SUB.l destbufferstart,D2
0002857A <AmiBlitz3.ab3@11922>   BSR.w addhunkoffset
0002857C <AmiBlitz3.ab3@11923>   MOVE.l (A7)+,D2
0002857E <AmiBlitz3.ab3@11924> RTS
00028582 <AmiBlitz3.ab3@11930>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
00028588 <AmiBlitz3.ab3@11932>   TST.b nohunkoffset
0002858C <AmiBlitz3.ab3@11933>   BNE 'l10
0002858E <AmiBlitz3.ab3@11935>   MOVEQ.l #$8,D0
00028590 <AmiBlitz3.ab3@11936>   MOVEQ.l #$01,D1
00028596 <AmiBlitz3.ab3@11937>   MOVEA.l _execbase,A6
0002859C <AmiBlitz3.ab3@11939>   MOVE.l mempool2,a0
000285A0 <AmiBlitz3.ab3@11940>   JSR _AllocPooled(a6)
000285A6 <AmiBlitz3.ab3@11944>   ADDQ.l #1,hunkoffsetcounter
000285A8 <AmiBlitz3.ab3@11945>   MOVEA.l D0,A0
000285AE <AmiBlitz3.ab3@11946>   MOVE.l hunkoffsetbase,(A0)
000285B4 <AmiBlitz3.ab3@11947>   MOVE.l A0,hunkoffsetbase
000285B8 <AmiBlitz3.ab3@11948>   MOVE.l D2,$4(A0)
000285BC <AmiBlitz3.ab3@11953>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
000285BE <AmiBlitz3.ab3@11954> RTS
000285C4 <AmiBlitz3.ab3@11960>   CLR.l hunkoffsetbase
000285CA <AmiBlitz3.ab3@11961>   MOVEA.l _execbase,A6
000285D0 <AmiBlitz3.ab3@11962>   MOVEA.l hunkoffsetbase,A2
000285D4 <AmiBlitz3.ab3@11965>     CMPA.w #$0,A2
000285D8 <AmiBlitz3.ab3@11966>      BEQ.w 'skip
000285DA <AmiBlitz3.ab3@11967>     MOVEA.l A2,A1
000285DC <AmiBlitz3.ab3@11968>     MOVEQ.l #$08,D0
000285DE <AmiBlitz3.ab3@11969>     MOVEA.l (A2),A2
000285E4 <AmiBlitz3.ab3@11971>     MOVE.l mempool2,a0
000285E8 <AmiBlitz3.ab3@11972>     JSR _FreePooled(A6)
000285EC <AmiBlitz3.ab3@11975>  BRA.w 'loop
000285F2 <AmiBlitz3.ab3@11978>   CLR.l hunkoffsetcounter
000285F4 <AmiBlitz3.ab3@11979> RTS
0002860C <AmiBlitz3.ab3@11982> cmakebuff:  Ds.l 6                                          ;dc.w 12 org source
00028610 <AmiBlitz3.ab3@11983> cmakea5:    Ds.l 1
00028612 <AmiBlitz3.ab3@11984> cmake:      Ds.w 1
00028692 <AmiBlitz3.ab3@11985> cmakebak:   Ds.l 32                                         ;ds.b 128 org source
00028698 <AmiBlitz3.ab3@11989>   MOVE.l A5,lastsourcepos
000286A2 <AmiBlitz3.ab3@11990>   MOVE.w instringon,oldqflag
000286A4 <AmiBlitz3.ab3@11993>   MOVEQ.l #$00,D0
000286A6 <AmiBlitz3.ab3@11994>   MOVE.b (A5)+,D0
000286AA <AmiBlitz3.ab3@11995>    BEQ 'donea
000286AE <AmiBlitz3.ab3@11996>   BPL 'stuffa
000286B0 <AmiBlitz3.ab3@11997>   LSL.l #8,D0
000286B2 <AmiBlitz3.ab3@11998>   MOVE.b (A5)+,D0
000286B4 <AmiBlitz3.ab3@11999>   MOVE.l a1,-(a7)
000286BA <AmiBlitz3.ab3@12000>   LEA replacedat,a1
000286BE <AmiBlitz3.ab3@12001>   Dc.w $4a71,$0a00                                         ;TST.w 0(a1,d0.l*2)
000286C2 <AmiBlitz3.ab3@12002>   BEQ 'l10
000286C6 <AmiBlitz3.ab3@12003>   Dc.w $3031,$0a00                                         ;MOVE.w 0(a1,d0.l*2),d0
000286C8 <AmiBlitz3.ab3@12007>   MOVE.l (a7)+,a1
000286CC <AmiBlitz3.ab3@12008>  BRA 'weiter
000286D0 <AmiBlitz3.ab3@12011>   CMP.w #$22,D0
000286D4 <AmiBlitz3.ab3@12012>    BEQ.b 'swapquotea
000286D8 <AmiBlitz3.ab3@12013>   CMP.w #$3B,D0
000286DC <AmiBlitz3.ab3@12014>    BNE.b 'donea
000286E2 <AmiBlitz3.ab3@12015>   TST.w instringon
000286E6 <AmiBlitz3.ab3@12016>    BNE.b 'donea
000286E8 <AmiBlitz3.ab3@12019>   MOVE.b (A5)+,D0
000286EC <AmiBlitz3.ab3@12020>              BEQ 'l1
000286F0 <AmiBlitz3.ab3@12021>              CMP.b #":",d0
000286F4 <AmiBlitz3.ab3@12022>              BNE 'loopa                                ;:@
000286F8 <AmiBlitz3.ab3@12023>              CMP.b #"@",(a5)
000286FC <AmiBlitz3.ab3@12024>              BNE 'loopa
000286FE <AmiBlitz3.ab3@12025>              ADDQ #1,a5
00028704 <AmiBlitz3.ab3@12028>   MOVE.w D0,lastchar
00028708 <AmiBlitz3.ab3@12031>  BRA.s 'weiter
0002870E <AmiBlitz3.ab3@12034>   NOT.w instringon
00028714 <AmiBlitz3.ab3@12037>    MOVE.w D0,lastchar
00028718 <AmiBlitz3.ab3@12038>    BEQ.w 'done
0002871C <AmiBlitz3.ab3@12039>    BPL.w 'done2
00028720 <AmiBlitz3.ab3@12040>   CMP.w #-$7FE4,D0                                         ;cnif
00028724 <AmiBlitz3.ab3@12041>    BEQ.w 'cnif
00028728 <AmiBlitz3.ab3@12042>   CMP.w #-$7FE3,D0                                         ;csif
0002872C <AmiBlitz3.ab3@12043>    BEQ.w 'csif
00028730 <AmiBlitz3.ab3@12044>   CMP.w #-$7FE2,D0                                         ;celse
00028734 <AmiBlitz3.ab3@12045>    BEQ.w 'celse
00028738 <AmiBlitz3.ab3@12046>   CMP.w #-$7FE1,D0                                         ;cend
0002873C <AmiBlitz3.ab3@12047>    BEQ.w 'cend
00028742 <AmiBlitz3.ab3@12050>   TST.w skipcode
00028746 <AmiBlitz3.ab3@12051>    BEQ.w getchar
0002874A <AmiBlitz3.ab3@12052>   CMP.w #$7E,D0
0002874E <AmiBlitz3.ab3@12053>    BEQ.w 'cmake                                            ;tilde
00028752 <AmiBlitz3.ab3@12054>   CMP.w #$2,D0
00028756 <AmiBlitz3.ab3@12055>    BNE.w 'notunpath
0002875C <AmiBlitz3.ab3@12056>   MOVEA.l usedfrom,A5
00028762 <AmiBlitz3.ab3@12057>   CLR.l usedfrom
00028766 <AmiBlitz3.ab3@12058>  BRA.w getchar
0002876A <AmiBlitz3.ab3@12061>   CMP.w #$1,D0
0002876E <AmiBlitz3.ab3@12062>    BNE.w 'done
00028772 <AmiBlitz3.ab3@12066>   MOVEA.l cmakea5(PC),A5
00028776 <AmiBlitz3.ab3@12067>  BRA.w getchar
0002877C <AmiBlitz3.ab3@12070>   TST.w cmake
00028780 <AmiBlitz3.ab3@12071>    BNE.w 'done
00028784 <AmiBlitz3.ab3@12073>   MOVEM.l D0-D7/A0-A6,-(A7)
0002878A <AmiBlitz3.ab3@12074>   LEA cmake,a0                                            ;reass
0002878C <AmiBlitz3.ab3@12075>   NOT.w (a0)
00028790 <AmiBlitz3.ab3@12076>   LEA cmakebak(PC),A0
00028796 <AmiBlitz3.ab3@12077>   LEA ptr_parameterstore,A1
00028798 <AmiBlitz3.ab3@12078>   MOVEQ.l #$1F,D0
0002879A <AmiBlitz3.ab3@12081>     MOVE.l (A1)+,(A0)+
0002879E <AmiBlitz3.ab3@12082>   DBF D0,'cmloop
000287A4 <AmiBlitz3.ab3@12085>    JSR evalconst3
000287A8 <AmiBlitz3.ab3@12086>   CMP.w #$7E,D0
000287AC <AmiBlitz3.ab3@12087>    BNE.w syntaxerr
000287B2 <AmiBlitz3.ab3@12088>   MOVE.l A5,cmakea5                                      ;tilde
000287B6 <AmiBlitz3.ab3@12089>   LEA cmakebuff(PC),A0
000287B8 <AmiBlitz3.ab3@12090>   MOVE.l D3,D2
000287BC <AmiBlitz3.ab3@12091>   BSR.w makelong
000287BE <AmiBlitz3.ab3@12092>   ADDQ.b #1,(A0)
000287C4 <AmiBlitz3.ab3@12093>   LEA cmake,a0
000287C6 <AmiBlitz3.ab3@12094>   NOT.w (a0)                                               ;reass
000287CA <AmiBlitz3.ab3@12095>   LEA cmakebak(PC),A0
000287D0 <AmiBlitz3.ab3@12096>   LEA ptr_parameterstore,A1
000287D2 <AmiBlitz3.ab3@12097>   MOVEQ.l #$1F,D0
000287D4 <AmiBlitz3.ab3@12100>     MOVE.l (A0)+,(A1)+
000287D8 <AmiBlitz3.ab3@12101>   DBF D0,'cmloop2
000287DC <AmiBlitz3.ab3@12103>   MOVEM.l (A7)+,D0-D7/A0-A6
000287E0 <AmiBlitz3.ab3@12104>   LEA cmakebuff(PC),A5
000287E4 <AmiBlitz3.ab3@12105>  BRA.w getchar
000287E6 <AmiBlitz3.ab3@12108>  RTS
000287F0 <AmiBlitz3.ab3@12111>   MOVE.l linenumat,ciflineat                               ;csif
000287F6 <AmiBlitz3.ab3@12112>   TST.w skipcode
000287FA <AmiBlitz3.ab3@12113>    BEQ.w 'incnest
000287FE <AmiBlitz3.ab3@12114>    BSR.w get1bytemain
00028800 <AmiBlitz3.ab3@12115>    MOVE.l a1,-(a7)
00028806 <AmiBlitz3.ab3@12116>    JSR do_csif
00028808 <AmiBlitz3.ab3@12117>    MOVE.l (a7)+,a1
0002880C <AmiBlitz3.ab3@12118>  BRA.w getchar
00028816 <AmiBlitz3.ab3@12121>   MOVE.l linenumat,ciflineat                               ;cnif
0002881C <AmiBlitz3.ab3@12122>   TST.w skipcode
00028820 <AmiBlitz3.ab3@12123>    BEQ.w 'incnest
00028824 <AmiBlitz3.ab3@12124>    BSR.w get1bytemain
00028828 <AmiBlitz3.ab3@12125>    CMP.b #"@",d0
0002882C <AmiBlitz3.ab3@12126>    BNE 'cnif_ok2
00028830 <AmiBlitz3.ab3@12127>    BSR.w get1bytemain
00028838 <AmiBlitz3.ab3@12128>    MOVE.b #1,incnif
0002883E <AmiBlitz3.ab3@12129>    JSR findconstant2
00028842 <AmiBlitz3.ab3@12130>    BEQ 'cnif_ok2
00028848 <AmiBlitz3.ab3@12133>    MOVE.w fast,-(a7)
0002884E <AmiBlitz3.ab3@12134>    CLR.b fast
00028850 <AmiBlitz3.ab3@12135>    MOVE.l a1,-(a7)
00028856 <AmiBlitz3.ab3@12136>    JSR do_cnif
0002885C <AmiBlitz3.ab3@12137>    CLR.b incnif
0002885E <AmiBlitz3.ab3@12138>    MOVE.l (a7)+,a1
00028864 <AmiBlitz3.ab3@12139>    MOVE.w (a7)+,fast
00028868 <AmiBlitz3.ab3@12140>  BRA.w getchar
0002886E <AmiBlitz3.ab3@12143>   ADDQ.w #1,connest
00028872 <AmiBlitz3.ab3@12144>  BRA.w getchar
00028878 <AmiBlitz3.ab3@12147>   MOVE.w connest,D0                                      ;celse
0002887C <AmiBlitz3.ab3@12148>    BNE.w getchar
00028882 <AmiBlitz3.ab3@12149>   NOT.w skipcode
00028886 <AmiBlitz3.ab3@12150>  BRA.w getchar
0002888C <AmiBlitz3.ab3@12153>   SUBQ.w #1,connest                                      ;cend
00028890 <AmiBlitz3.ab3@12154>    BPL.w getchar
00028896 <AmiBlitz3.ab3@12155>   ADDQ.w #1,connest
0002889C <AmiBlitz3.ab3@12156>   MOVEA.l concomsp,A0
000288A2 <AmiBlitz3.ab3@12157>   CMPA.l #concomstack,A0
000288A6 <AmiBlitz3.ab3@12158>    BEQ.w nociferr
000288A8 <AmiBlitz3.ab3@12159>   SUBQ.w #2,A0
000288AE <AmiBlitz3.ab3@12160>   MOVE.l A0,concomsp
000288B4 <AmiBlitz3.ab3@12161>   MOVE.w (A0),skipcode
000288B8 <AmiBlitz3.ab3@12162> BRA.w getchar
000288BC <AmiBlitz3.ab3@12165> ciflineat:   Ds.l 1
000288BE <AmiBlitz3.ab3@12173>   MOVEQ.l #$00,D0
000288C0 <AmiBlitz3.ab3@12174>   MOVE.b (A5)+,D0
000288C4 <AmiBlitz3.ab3@12175>    BEQ.b 'done
000288C8 <AmiBlitz3.ab3@12176>    BPL.b 'stuff
000288CA <AmiBlitz3.ab3@12177>   LSL.w #8,D0
000288CC <AmiBlitz3.ab3@12178>   MOVE.b (A5)+,D0
000288CE <AmiBlitz3.ab3@12179>  RTS
000288D2 <AmiBlitz3.ab3@12182>   CMP.w #$22,D0
000288D6 <AmiBlitz3.ab3@12183>    BEQ.b 'swapquote
000288DA <AmiBlitz3.ab3@12184>   CMP.w #$3B,D0
000288DE <AmiBlitz3.ab3@12185>    BNE.b 'done
000288E4 <AmiBlitz3.ab3@12186>   TST.w instringon
000288E8 <AmiBlitz3.ab3@12187>    BNE.b 'done
000288EA <AmiBlitz3.ab3@12190>   MOVE.b (A5)+,D0
000288EE <AmiBlitz3.ab3@12191>             BEQ 'loop_l1
000288F2 <AmiBlitz3.ab3@12192>             CMP.b #":",d0
000288F6 <AmiBlitz3.ab3@12193>             BNE 'loop
000288FA <AmiBlitz3.ab3@12194>             CMP.b #"@",(a5)
000288FE <AmiBlitz3.ab3@12195>             BNE 'loop
00028904 <AmiBlitz3.ab3@12198>   MOVE.w D0,lastchar
00028906 <AmiBlitz3.ab3@12201>  RTS
0002890C <AmiBlitz3.ab3@12204>   NOT.w instringon
0002890E <AmiBlitz3.ab3@12205> RTS
00028912 <AmiBlitz3.ab3@12209>   BSR.w getchar
00028918 <AmiBlitz3.ab3@12210>   TST.w instringon
0002891C <AmiBlitz3.ab3@12211>    BNE.w 'skip
00028920 <AmiBlitz3.ab3@12212>   CMP.w #$20,D0        ;' '
00028924 <AmiBlitz3.ab3@12213>    BEQ.w get1byte_
00028926 <AmiBlitz3.ab3@12216> RTS
00028940 <AmiBlitz3.ab3@12219> gs:        Ds.w 13                                         ;ds.b 26  org source
00028944 <AmiBlitz3.ab3@12220>            Dc.b $F6,$E4,$FC,$D6                            ;dc.b 228,246,252,196,214,220 org source
00028946 <AmiBlitz3.ab3@12221>            Dc.b $C4,$DC
0002894A <AmiBlitz3.ab3@12228>   BSR.w getchar
00028950 <AmiBlitz3.ab3@12229>   TST.w instringon
00028954 <AmiBlitz3.ab3@12230>    BNE.w gchar2
00028958 <AmiBlitz3.ab3@12231>   CMP.w #$20,D0
0002895C <AmiBlitz3.ab3@12232>    BEQ.w get1bytemain
0002895E <AmiBlitz3.ab3@12234>   TST.w D0
00028962 <AmiBlitz3.ab3@12237>   BEQ.b 'zero
00028968 <AmiBlitz3.ab3@12238>   TST.w instringon
0002896C <AmiBlitz3.ab3@12239>    BEQ.b 'noqoute
00028970 <AmiBlitz3.ab3@12240>   CMP.b #$20,D0           ;' '
00028974 <AmiBlitz3.ab3@12241>    BCC.b 'skip
00028978 <AmiBlitz3.ab3@12242>   MOVE.b gs(PC,D0.W),D0
0002897A <AmiBlitz3.ab3@12243>  RTS
0002897E <AmiBlitz3.ab3@12246>   CMP.w #-$7FDE,D0                                         ;cmp #$8000+34,d0 org source  ;else
00028982 <AmiBlitz3.ab3@12247>    BEQ.b 'zero
00028986 <AmiBlitz3.ab3@12248>   CMP.w #$3A,D0           ;':'
0002898A <AmiBlitz3.ab3@12249>    BEQ.b 'zero
0002898C <AmiBlitz3.ab3@12252>   TST.w D0
0002898E <AmiBlitz3.ab3@12255> RTS
00028994 <AmiBlitz3.ab3@12259>   MOVE.w lastchar,D0
00028998 <AmiBlitz3.ab3@12260> BRA.w gchar2
000289A2 <AmiBlitz3.ab3@12264>   MOVE.w oldqflag,instringon
000289A8 <AmiBlitz3.ab3@12265>   MOVEA.l lastsourcepos,A5
000289AA <AmiBlitz3.ab3@12266> RTS
000289B0 <AmiBlitz3.ab3@12270>   MOVE.w D0,locchar
000289B6 <AmiBlitz3.ab3@12271>   MOVE.l A5,locloc
000289B8 <AmiBlitz3.ab3@12272> RTS
000289BE <AmiBlitz3.ab3@12276>   MOVEA.l locloc,A5
000289C4 <AmiBlitz3.ab3@12277>   MOVE.w locchar,D0
000289CA <AmiBlitz3.ab3@12278>   MOVE.w D0,lastchar
000289CC <AmiBlitz3.ab3@12279> RTS
000289CC <internal_errormsg.ab3@1> XINCLUDE "internal_errormsg.ab3"
00028A14 <internal_errormsg.ab3@9> XINCLUDE "internal_errormsg.ab3"
00028A66 <internal_errormsg.ab3@10> XINCLUDE "internal_errormsg.ab3"
00028AA4 <internal_errormsg.ab3@11> XINCLUDE "internal_errormsg.ab3"
00028AE2 <internal_errormsg.ab3@12> XINCLUDE "internal_errormsg.ab3"
00028B0C <internal_errormsg.ab3@13> XINCLUDE "internal_errormsg.ab3"
00028B3C <internal_errormsg.ab3@14> XINCLUDE "internal_errormsg.ab3"
00028B86 <internal_errormsg.ab3@15> XINCLUDE "internal_errormsg.ab3"
00028C0C <internal_errormsg.ab3@16> XINCLUDE "internal_errormsg.ab3"
00028C6E <internal_errormsg.ab3@17> XINCLUDE "internal_errormsg.ab3"
00028CB6 <internal_errormsg.ab3@18> XINCLUDE "internal_errormsg.ab3"
00028D08 <internal_errormsg.ab3@19> XINCLUDE "internal_errormsg.ab3"
00028D6A <internal_errormsg.ab3@20> XINCLUDE "internal_errormsg.ab3"
00028DB8 <internal_errormsg.ab3@21> XINCLUDE "internal_errormsg.ab3"
00028DEE <internal_errormsg.ab3@22> XINCLUDE "internal_errormsg.ab3"
00028E1C <internal_errormsg.ab3@23> XINCLUDE "internal_errormsg.ab3"
00028E36 <internal_errormsg.ab3@24> XINCLUDE "internal_errormsg.ab3"
00028E54 <internal_errormsg.ab3@25> XINCLUDE "internal_errormsg.ab3"
00028ED2 <internal_errormsg.ab3@26> XINCLUDE "internal_errormsg.ab3"
00028EFC <internal_errormsg.ab3@27> XINCLUDE "internal_errormsg.ab3"
00028F22 <internal_errormsg.ab3@28> XINCLUDE "internal_errormsg.ab3"
00028F42 <internal_errormsg.ab3@29> XINCLUDE "internal_errormsg.ab3"
00028F60 <internal_errormsg.ab3@30> XINCLUDE "internal_errormsg.ab3"
00028F80 <internal_errormsg.ab3@31> XINCLUDE "internal_errormsg.ab3"
00028FA8 <internal_errormsg.ab3@32> XINCLUDE "internal_errormsg.ab3"
00028FD2 <internal_errormsg.ab3@33> XINCLUDE "internal_errormsg.ab3"
00028FEE <internal_errormsg.ab3@34> XINCLUDE "internal_errormsg.ab3"
00029014 <internal_errormsg.ab3@35> XINCLUDE "internal_errormsg.ab3"
0002902C <internal_errormsg.ab3@36> XINCLUDE "internal_errormsg.ab3"
0002908A <internal_errormsg.ab3@37> XINCLUDE "internal_errormsg.ab3"
000290AC <internal_errormsg.ab3@38> XINCLUDE "internal_errormsg.ab3"
000290D2 <internal_errormsg.ab3@39> XINCLUDE "internal_errormsg.ab3"
000290FA <internal_errormsg.ab3@40> XINCLUDE "internal_errormsg.ab3"
0002911A <internal_errormsg.ab3@41> XINCLUDE "internal_errormsg.ab3"
0002913E <internal_errormsg.ab3@42> XINCLUDE "internal_errormsg.ab3"
00029184 <internal_errormsg.ab3@43> XINCLUDE "internal_errormsg.ab3"
000291A8 <internal_errormsg.ab3@44> XINCLUDE "internal_errormsg.ab3"
000291CC <internal_errormsg.ab3@45> XINCLUDE "internal_errormsg.ab3"
000291EC <internal_errormsg.ab3@46> XINCLUDE "internal_errormsg.ab3"
00029210 <internal_errormsg.ab3@47> XINCLUDE "internal_errormsg.ab3"
00029232 <internal_errormsg.ab3@48> XINCLUDE "internal_errormsg.ab3"
0002925E <internal_errormsg.ab3@49> XINCLUDE "internal_errormsg.ab3"
00029284 <internal_errormsg.ab3@50> XINCLUDE "internal_errormsg.ab3"
0002928E <internal_errormsg.ab3@53> XINCLUDE "internal_errormsg.ab3"
000292B4 <internal_errormsg.ab3@54> XINCLUDE "internal_errormsg.ab3"
00029306 <internal_errormsg.ab3@56> XINCLUDE "internal_errormsg.ab3"
00029370 <internal_errormsg.ab3@57> XINCLUDE "internal_errormsg.ab3"
000293CE <internal_errormsg.ab3@58> XINCLUDE "internal_errormsg.ab3"
0002943C <internal_errormsg.ab3@59> XINCLUDE "internal_errormsg.ab3"
00029478 <internal_errormsg.ab3@60> XINCLUDE "internal_errormsg.ab3"
00029496 <internal_errormsg.ab3@61> XINCLUDE "internal_errormsg.ab3"
000294BC <internal_errormsg.ab3@62> XINCLUDE "internal_errormsg.ab3"
000294EC <internal_errormsg.ab3@63> XINCLUDE "internal_errormsg.ab3"
00029510 <internal_errormsg.ab3@64> XINCLUDE "internal_errormsg.ab3"
0002953E <internal_errormsg.ab3@65> XINCLUDE "internal_errormsg.ab3"
00029562 <internal_errormsg.ab3@66> XINCLUDE "internal_errormsg.ab3"
00029578 <internal_errormsg.ab3@67> XINCLUDE "internal_errormsg.ab3"
0002958E <internal_errormsg.ab3@68> XINCLUDE "internal_errormsg.ab3"
00029594 <internal_errormsg.ab3@71> XINCLUDE "internal_errormsg.ab3"
0002959C <internal_errormsg.ab3@73> XINCLUDE "internal_errormsg.ab3"
0002959E <internal_errormsg.ab3@75> XINCLUDE "internal_errormsg.ab3"
000295A2 <internal_errormsg.ab3@76> XINCLUDE "internal_errormsg.ab3"
000295AA <internal_errormsg.ab3@77> XINCLUDE "internal_errormsg.ab3"
000295AC <internal_errormsg.ab3@79> XINCLUDE "internal_errormsg.ab3"
000295E6 <internal_errormsg.ab3@81> XINCLUDE "internal_errormsg.ab3"
00029612 <internal_errormsg.ab3@82> XINCLUDE "internal_errormsg.ab3"
00029642 <internal_errormsg.ab3@83> XINCLUDE "internal_errormsg.ab3"
0002967A <internal_errormsg.ab3@84> XINCLUDE "internal_errormsg.ab3"
000296D4 <internal_errormsg.ab3@85> XINCLUDE "internal_errormsg.ab3"
000296D6 <internal_errormsg.ab3@89> XINCLUDE "internal_errormsg.ab3"
000296DA <internal_errormsg.ab3@90> XINCLUDE "internal_errormsg.ab3"
000296DE <internal_errormsg.ab3@91> XINCLUDE "internal_errormsg.ab3"
000296E2 <internal_errormsg.ab3@92> XINCLUDE "internal_errormsg.ab3"
000296E6 <internal_errormsg.ab3@93> XINCLUDE "internal_errormsg.ab3"
000296EA <internal_errormsg.ab3@94> XINCLUDE "internal_errormsg.ab3"
000296EE <internal_errormsg.ab3@95> XINCLUDE "internal_errormsg.ab3"
000296F2 <internal_errormsg.ab3@96> XINCLUDE "internal_errormsg.ab3"
000296F6 <internal_errormsg.ab3@97> XINCLUDE "internal_errormsg.ab3"
000296FA <internal_errormsg.ab3@98> XINCLUDE "internal_errormsg.ab3"
000296FE <internal_errormsg.ab3@99> XINCLUDE "internal_errormsg.ab3"
0002973C <internal_errormsg.ab3@100> XINCLUDE "internal_errormsg.ab3"
0002976E <internal_errormsg.ab3@102> XINCLUDE "internal_errormsg.ab3"
0002978C <internal_errormsg.ab3@103> XINCLUDE "internal_errormsg.ab3"
000297B6 <internal_errormsg.ab3@104> XINCLUDE "internal_errormsg.ab3"
000297D2 <internal_errormsg.ab3@105> XINCLUDE "internal_errormsg.ab3"
000297EC <internal_errormsg.ab3@106> XINCLUDE "internal_errormsg.ab3"
0002980A <internal_errormsg.ab3@107> XINCLUDE "internal_errormsg.ab3"
0002982E <internal_errormsg.ab3@108> XINCLUDE "internal_errormsg.ab3"
00029830 <internal_errormsg.ab3@112> XINCLUDE "internal_errormsg.ab3"
00029882 <internal_errormsg.ab3@114> XINCLUDE "internal_errormsg.ab3"
000298AA <internal_errormsg.ab3@116> XINCLUDE "internal_errormsg.ab3"
000298D2 <internal_errormsg.ab3@117> XINCLUDE "internal_errormsg.ab3"
000298EE <internal_errormsg.ab3@121> XINCLUDE "internal_errormsg.ab3"
0002990E <internal_errormsg.ab3@122> XINCLUDE "internal_errormsg.ab3"
00029926 <internal_errormsg.ab3@123> XINCLUDE "internal_errormsg.ab3"
0002996A <internal_errormsg.ab3@124> XINCLUDE "internal_errormsg.ab3"
000299B2 <internal_errormsg.ab3@125> XINCLUDE "internal_errormsg.ab3"
000299DC <internal_errormsg.ab3@126> XINCLUDE "internal_errormsg.ab3"
00029A06 <internal_errormsg.ab3@127> XINCLUDE "internal_errormsg.ab3"
00029A20 <internal_errormsg.ab3@131> XINCLUDE "internal_errormsg.ab3"
00029A4A <internal_errormsg.ab3@132> XINCLUDE "internal_errormsg.ab3"
00029A9E <internal_errormsg.ab3@133> XINCLUDE "internal_errormsg.ab3"
00029AEA <internal_errormsg.ab3@134> XINCLUDE "internal_errormsg.ab3"
00029B22 <internal_errormsg.ab3@135> XINCLUDE "internal_errormsg.ab3"
00029B28 <internal_errormsg.ab3@138> XINCLUDE "internal_errormsg.ab3"
00029B36 <internal_errormsg.ab3@142> XINCLUDE "internal_errormsg.ab3"
00029B66 <internal_errormsg.ab3@145> XINCLUDE "internal_errormsg.ab3"
00029B9A <internal_errormsg.ab3@146> XINCLUDE "internal_errormsg.ab3"
00029C00 <internal_errormsg.ab3@147> XINCLUDE "internal_errormsg.ab3"
00029C1E <internal_errormsg.ab3@148> XINCLUDE "internal_errormsg.ab3"
00029C98 <internal_errormsg.ab3@149> XINCLUDE "internal_errormsg.ab3"
00029CC0 <internal_errormsg.ab3@150> XINCLUDE "internal_errormsg.ab3"
00029CD6 <internal_errormsg.ab3@151> XINCLUDE "internal_errormsg.ab3"
00029CEA <internal_errormsg.ab3@152> XINCLUDE "internal_errormsg.ab3"
00029D0A <internal_errormsg.ab3@153> XINCLUDE "internal_errormsg.ab3"
00029D10 <internal_errormsg.ab3@156> XINCLUDE "internal_errormsg.ab3"
00029D22 <internal_errormsg.ab3@160> XINCLUDE "internal_errormsg.ab3"
00029D56 <internal_errormsg.ab3@163> XINCLUDE "internal_errormsg.ab3"
00029D6E <internal_errormsg.ab3@164> XINCLUDE "internal_errormsg.ab3"
00029D8A <internal_errormsg.ab3@165> XINCLUDE "internal_errormsg.ab3"
00029DA2 <internal_errormsg.ab3@166> XINCLUDE "internal_errormsg.ab3"
00029DC2 <internal_errormsg.ab3@167> XINCLUDE "internal_errormsg.ab3"
00029DE2 <internal_errormsg.ab3@168> XINCLUDE "internal_errormsg.ab3"
00029E08 <internal_errormsg.ab3@169> XINCLUDE "internal_errormsg.ab3"
00029E1E <internal_errormsg.ab3@170> XINCLUDE "internal_errormsg.ab3"
00029E3A <internal_errormsg.ab3@171> XINCLUDE "internal_errormsg.ab3"
00029E64 <internal_errormsg.ab3@172> XINCLUDE "internal_errormsg.ab3"
00029E7C <internal_errormsg.ab3@173> XINCLUDE "internal_errormsg.ab3"
00029E98 <internal_errormsg.ab3@174> XINCLUDE "internal_errormsg.ab3"
00029EB8 <internal_errormsg.ab3@175> XINCLUDE "internal_errormsg.ab3"
00029ED0 <internal_errormsg.ab3@176> XINCLUDE "internal_errormsg.ab3"
00029ED4 <internal_errormsg.ab3@179> XINCLUDE "internal_errormsg.ab3"
00029EDA <internal_errormsg.ab3@180> XINCLUDE "internal_errormsg.ab3"
00029EE0 <internal_errormsg.ab3@181> XINCLUDE "internal_errormsg.ab3"
00029EF5 <internal_errormsg.ab3@182> XINCLUDE "internal_errormsg.ab3"
00029EFB <internal_errormsg.ab3@184> XINCLUDE "internal_errormsg.ab3"
00029EFC <internal_errormsg.ab3@185> XINCLUDE "internal_errormsg.ab3"
00029F00 <internal_errormsg.ab3@188> XINCLUDE "internal_errormsg.ab3"
00029F06 <internal_errormsg.ab3@189> XINCLUDE "internal_errormsg.ab3"
00029F0C <internal_errormsg.ab3@190> XINCLUDE "internal_errormsg.ab3"
00029F1F <internal_errormsg.ab3@191> XINCLUDE "internal_errormsg.ab3"
00029F25 <internal_errormsg.ab3@193> XINCLUDE "internal_errormsg.ab3"
00029F26 <internal_errormsg.ab3@194> XINCLUDE "internal_errormsg.ab3"
00029F44 <internal_errormsg.ab3@196> XINCLUDE "internal_errormsg.ab3"
00029F5C <internal_errormsg.ab3@197> XINCLUDE "internal_errormsg.ab3"
00029F78 <internal_errormsg.ab3@198> XINCLUDE "internal_errormsg.ab3"
00029FA2 <internal_errormsg.ab3@199> XINCLUDE "internal_errormsg.ab3"
00029FBC <internal_errormsg.ab3@200> XINCLUDE "internal_errormsg.ab3"
00029FDC <internal_errormsg.ab3@201> XINCLUDE "internal_errormsg.ab3"
00029FFA <internal_errormsg.ab3@202> XINCLUDE "internal_errormsg.ab3"
0002A028 <internal_errormsg.ab3@203> XINCLUDE "internal_errormsg.ab3"
0002A032 <internal_errormsg.ab3@206> XINCLUDE "internal_errormsg.ab3"
0002A064 <internal_errormsg.ab3@207> XINCLUDE "internal_errormsg.ab3"
0002A082 <internal_errormsg.ab3@209> XINCLUDE "internal_errormsg.ab3"
0002A0A0 <internal_errormsg.ab3@210> XINCLUDE "internal_errormsg.ab3"
0002A0C0 <internal_errormsg.ab3@211> XINCLUDE "internal_errormsg.ab3"
0002A0E6 <internal_errormsg.ab3@212> XINCLUDE "internal_errormsg.ab3"
0002A10C <internal_errormsg.ab3@213> XINCLUDE "internal_errormsg.ab3"
0002A134 <internal_errormsg.ab3@214> XINCLUDE "internal_errormsg.ab3"
0002A152 <internal_errormsg.ab3@215> XINCLUDE "internal_errormsg.ab3"
0002A172 <internal_errormsg.ab3@216> XINCLUDE "internal_errormsg.ab3"
0002A18C <internal_errormsg.ab3@217> XINCLUDE "internal_errormsg.ab3"
0002A1AE <internal_errormsg.ab3@218> XINCLUDE "internal_errormsg.ab3"
0002A1CC <internal_errormsg.ab3@219> XINCLUDE "internal_errormsg.ab3"
0002A1EE <internal_errormsg.ab3@220> XINCLUDE "internal_errormsg.ab3"
0002A212 <internal_errormsg.ab3@221> XINCLUDE "internal_errormsg.ab3"
0002A218 <internal_errormsg.ab3@225> XINCLUDE "internal_errormsg.ab3"
0002A234 <internal_errormsg.ab3@227> XINCLUDE "internal_errormsg.ab3"
0002A250 <internal_errormsg.ab3@229> XINCLUDE "internal_errormsg.ab3"
0002A26E <internal_errormsg.ab3@230> XINCLUDE "internal_errormsg.ab3"
0002A28C <internal_errormsg.ab3@231> XINCLUDE "internal_errormsg.ab3"
0002A2DA <internal_errormsg.ab3@232> XINCLUDE "internal_errormsg.ab3"
0002A2F8 <internal_errormsg.ab3@233> XINCLUDE "internal_errormsg.ab3"
0002A316 <internal_errormsg.ab3@234> XINCLUDE "internal_errormsg.ab3"
0002A330 <internal_errormsg.ab3@235> XINCLUDE "internal_errormsg.ab3"
0002A37C <internal_errormsg.ab3@236> XINCLUDE "internal_errormsg.ab3"
0002A3A2 <internal_errormsg.ab3@237> XINCLUDE "internal_errormsg.ab3"
0002A3C2 <internal_errormsg.ab3@238> XINCLUDE "internal_errormsg.ab3"
0002A3E4 <internal_errormsg.ab3@239> XINCLUDE "internal_errormsg.ab3"
0002A400 <internal_errormsg.ab3@240> XINCLUDE "internal_errormsg.ab3"
0002A426 <internal_errormsg.ab3@241> XINCLUDE "internal_errormsg.ab3"
0002A442 <internal_errormsg.ab3@242> XINCLUDE "internal_errormsg.ab3"
0002A460 <internal_errormsg.ab3@243> XINCLUDE "internal_errormsg.ab3"
0002A488 <internal_errormsg.ab3@244> XINCLUDE "internal_errormsg.ab3"
0002A4A4 <internal_errormsg.ab3@245> XINCLUDE "internal_errormsg.ab3"
0002A4B4 <internal_errormsg.ab3@246> XINCLUDE "internal_errormsg.ab3"
0002A4D6 <internal_errormsg.ab3@247> XINCLUDE "internal_errormsg.ab3"
0002A4D8 <internal_errormsg.ab3@251> XINCLUDE "internal_errormsg.ab3"
0002A4F2 <internal_errormsg.ab3@253> XINCLUDE "internal_errormsg.ab3"
0002A516 <internal_errormsg.ab3@255> XINCLUDE "internal_errormsg.ab3"
0002A536 <internal_errormsg.ab3@256> XINCLUDE "internal_errormsg.ab3"
0002A568 <internal_errormsg.ab3@257> XINCLUDE "internal_errormsg.ab3"
0002A5C6 <internal_errormsg.ab3@258> XINCLUDE "internal_errormsg.ab3"
0002A5FE <internal_errormsg.ab3@259> XINCLUDE "internal_errormsg.ab3"
0002A63C <internal_errormsg.ab3@260> XINCLUDE "internal_errormsg.ab3"
0002A672 <internal_errormsg.ab3@261> XINCLUDE "internal_errormsg.ab3"
0002A6A4 <internal_errormsg.ab3@262> XINCLUDE "internal_errormsg.ab3"
0002A6C8 <internal_errormsg.ab3@263> XINCLUDE "internal_errormsg.ab3"
0002A6EC <internal_errormsg.ab3@264> XINCLUDE "internal_errormsg.ab3"
0002A736 <internal_errormsg.ab3@265> XINCLUDE "internal_errormsg.ab3"
0002A75E <internal_errormsg.ab3@266> XINCLUDE "internal_errormsg.ab3"
0002A7A8 <internal_errormsg.ab3@267> XINCLUDE "internal_errormsg.ab3"
0002A7E8 <internal_errormsg.ab3@268> XINCLUDE "internal_errormsg.ab3"
0002A7E8 <AmiBlitz3.ab3@12283> XINCLUDE "internal_errormsg.ab3"
0002A7EA <AmiBlitz3.ab3@12287> ezerr:   Ds.w 1                                            ;for simple errors
0002A7F0 <AmiBlitz3.ab3@12294>    MOVE.l myline,d0
0002A7F4 <AmiBlitz3.ab3@12295>   BNE 'l2
0002A7FA <AmiBlitz3.ab3@12298>     MOVE.l a5,lastsourcepos
0002A7FC <AmiBlitz3.ab3@12301>     SUBA.l a5,a5
0002A802 <AmiBlitz3.ab3@12304>   TST.l usedfrom
0002A806 <AmiBlitz3.ab3@12305>   BEQ 'org
0002A80C <AmiBlitz3.ab3@12306>     MOVEA.l usedfrom,a5
0002A812 <AmiBlitz3.ab3@12310>   TST.w dirmode
0002A816 <AmiBlitz3.ab3@12311>   BNE.b 'quiet
0002A81C <AmiBlitz3.ab3@12313>     JSR call_setpointernormal
0002A820 <AmiBlitz3.ab3@12315>     MOVE.w ezerr(PC),D0
0002A824 <AmiBlitz3.ab3@12316>     BNE.w 'skip
0002A82A <AmiBlitz3.ab3@12317>       MOVE.w cfetchmode,D0
0002A82E <AmiBlitz3.ab3@12318>       BEQ.w 'skip2
0002A838 <AmiBlitz3.ab3@12319>         MOVE.l oldlibat,destbufferend                      ;fix up lib thing.
0002A83E <AmiBlitz3.ab3@12322>   MOVE.w constmode,D0
0002A842 <AmiBlitz3.ab3@12323>   BEQ.b 'skip3
0002A846 <AmiBlitz3.ab3@12324>     BSR.w asmerr2
0002A84C <AmiBlitz3.ab3@12327>   MOVE.l firstlocal,D1
0002A852 <AmiBlitz3.ab3@12328>   OR.l firstglob,D1
0002A856 <AmiBlitz3.ab3@12329>   BEQ.b 'notproc                                           ;?!?!?!
0002A85C <AmiBlitz3.ab3@12331> 
0002A860 <AmiBlitz3.ab3@12332>     BNE 'notproc                                           ; yes skip
0002A866 <AmiBlitz3.ab3@12334>       JSR droplocals                                        ; no free some data ????
0002A86E <AmiBlitz3.ab3@12337>   MOVE.w #$FFFF,anyerrs                                    ;#-1,anyerrs org source
0002A878 <AmiBlitz3.ab3@12339>   CMP.l #"NORE",reqmode                                    ;for used functions
0002A87C <AmiBlitz3.ab3@12340>   BEQ 'notproc_l1
0002A886 <AmiBlitz3.ab3@12342>     MOVE.l linenumat,compilelinecounter
0002A88C <AmiBlitz3.ab3@12345>   JSR close_compilewin
0002A88E <AmiBlitz3.ab3@12348>   MOVEA.l (A7)+,A0
0002A894 <AmiBlitz3.ab3@12350>   MOVE.l errorcounter,d0                                   ; added to make maxerrorcount changable in CLIMode  tomsmart1
0002A89A <AmiBlitz3.ab3@12351>   CMP.l maxerrorcount,d0                                   ; changed to make maxerrorcount changable in CLIMode  tomsmart1
0002A89E <AmiBlitz3.ab3@12352>   BLT 'lesserror
0002A8A4 <AmiBlitz3.ab3@12353>   LEA errorlimit_text,a0
0002A8AA <AmiBlitz3.ab3@12356>   ADDQ.l #1,errorcounter
0002A8B0 <AmiBlitz3.ab3@12357>   JSR errorstringparse
0002A8BA <AmiBlitz3.ab3@12358>   CMP.l #"NORE",reqmode                                    ;for used functions
0002A8BE <AmiBlitz3.ab3@12359>   BEQ 'skip_Lxx2
0002A8C4 <AmiBlitz3.ab3@12360>   TST.l CLIMode
0002A8C8 <AmiBlitz3.ab3@12361>   BNE 'climode_output
0002A8CE <AmiBlitz3.ab3@12364>     JSR save_errorfile
0002A8D2 <AmiBlitz3.ab3@12365>     BRA 'end_output
0002A8D8 <AmiBlitz3.ab3@12368>     JSR stdout_error
0002A8DE <AmiBlitz3.ab3@12371>        MOVE.l errorcounter,d0                          ; added to make maxerrorcount changable in CLIMode  tomsmart1
0002A8E4 <AmiBlitz3.ab3@12372>        CMP.l maxerrorcount,d0                          ; changed to make maxerrorcount changable in CLIMode  tomsmart1
0002A8E8 <AmiBlitz3.ab3@12373>        BGT 'end_output
0002A8EE <AmiBlitz3.ab3@12374>       MOVE.l lastsourcepos,a5
0002A8F0 <AmiBlitz3.ab3@12377>       TST.b (a5)
0002A8F4 <AmiBlitz3.ab3@12378>         BEQ 'ok2
0002A8F6 <AmiBlitz3.ab3@12379>       MOVE.b (a5)+,d0                                  ; position to usefull source position to avoid following errors
0002A8FA <AmiBlitz3.ab3@12380>       BEQ 'ok
0002A8FE <AmiBlitz3.ab3@12381>       CMP.b #":",d0
0002A902 <AmiBlitz3.ab3@12382>       BEQ 'ok
0002A906 <AmiBlitz3.ab3@12383>       BRA 'loop
0002A908 <AmiBlitz3.ab3@12386>     SUBQ.l #1,a5
0002A910 <AmiBlitz3.ab3@12389>       MOVE.w #0,lastchar
0002A918 <AmiBlitz3.ab3@12390>       MOVE.b #1,iserror
0002A91E <AmiBlitz3.ab3@12391>       MOVE.l stackaddr,a7
0002A920 <AmiBlitz3.ab3@12392>       RTS
0002A922 <AmiBlitz3.ab3@12400>   MOVE.l A0,-(a7)
0002A960 <AmiBlitz3.ab3@12401>   !ComData_GetL{comFunc_ErrorRequest,A1}
0002A962 <AmiBlitz3.ab3@12402>   MOVE.l (a7)+,A0
0002A966 <AmiBlitz3.ab3@12404>   MOVEM.l d6/D7/A6,-(A7)
0002A96C <AmiBlitz3.ab3@12406>   MOVE.l includeline,d7
0002A972 <AmiBlitz3.ab3@12407>   MOVE.l #"INLN",a6
0002A97C <AmiBlitz3.ab3@12408>   MOVE.l errstack,tempa7
0002A97E <AmiBlitz3.ab3@12410>   JSR (A1)                                                  ;open ped errorrequest
0002A982 <AmiBlitz3.ab3@12412>   MOVEM.l (A7)+,D7/d6/A6
0002A988 <AmiBlitz3.ab3@12416>   MOVE.l tempa7,a7
0002A98E <AmiBlitz3.ab3@12418>   MOVEA.l errcont,A0
0002A990 <AmiBlitz3.ab3@12421>  RTS
0002A996 <AmiBlitz3.ab3@12424>   MOVEA.l errstack,A7
0002A99C <AmiBlitz3.ab3@12425>   MOVEA.l errcont,A0
0002A99E <AmiBlitz3.ab3@12427>  RTS
0002A9A0 <AmiBlitz3.ab3@12431>   MOVE.l (A7),D0
0002A9A6 <AmiBlitz3.ab3@12432>   MOVEA.l errstack,A7
0002A9AC <AmiBlitz3.ab3@12433>   MOVEA.l errcont,A0
0002A9AE <AmiBlitz3.ab3@12434> JMP (A0)
0002A9B2 <AmiBlitz3.ab3@12440>   CMP.w #$7A,D0                                            ;'z'
0002A9B6 <AmiBlitz3.ab3@12441>    BHI.w 'no
0002A9BA <AmiBlitz3.ab3@12442>   CMP.w #$41,D0                                            ;'A'
0002A9BE <AmiBlitz3.ab3@12443>    BCS.w 'no
0002A9C2 <AmiBlitz3.ab3@12444>   CMP.w #$61,D0                                            ;'a'
0002A9C6 <AmiBlitz3.ab3@12445>    BCC.w 'yes
0002A9CA <AmiBlitz3.ab3@12446>   CMP.w #$5A,D0                                            ;'Z'
0002A9CE <AmiBlitz3.ab3@12447>    BHI.w 'no
0002A9D0 <AmiBlitz3.ab3@12450>   CMP.w D0,D0
0002A9D2 <AmiBlitz3.ab3@12453> RTS
0002A9D6 <AmiBlitz3.ab3@12461>   CMP.w #$30,D0                                            ;'0'
0002A9DA <AmiBlitz3.ab3@12462>    BCS.w 'skip
0002A9DE <AmiBlitz3.ab3@12463>   CMP.w #$39,D0                                            ;'9'
0002A9E2 <AmiBlitz3.ab3@12464>    BHI.w 'skip
0002A9E4 <AmiBlitz3.ab3@12465>   CMP.w D0,D0
0002A9E6 <AmiBlitz3.ab3@12468> RTS
0002AA08 <AmiBlitz3.ab3@12475>   !compare1                                                ;bsr.w tstalpha
0002AA0C <AmiBlitz3.ab3@12477>    BEQ.w 'skip
0002AA1E <AmiBlitz3.ab3@12479>   !compare2                                                ;bsr.w tstnum2
0002AA22 <AmiBlitz3.ab3@12481>    BEQ.w 'skip
0002AA26 <AmiBlitz3.ab3@12482>   CMP.w #$5F,D0                                            ;'_'
0002AA2A <AmiBlitz3.ab3@12483>    BEQ.w 'skip
0002AA2E <AmiBlitz3.ab3@12484>   CMP.w #$27,D0                                            ;''';#loclabch,d0 org source
0002AA30 <AmiBlitz3.ab3@12487> RTS
0002AA3A <AmiBlitz3.ab3@12493>   MOVE.w oldqflag,instringon
0002AA40 <AmiBlitz3.ab3@12494>   MOVEA.l lastsourcepos,A5
0002AA46 <AmiBlitz3.ab3@12503>   MOVE.l a5,beforeparameterfetch
0002AA4C <AmiBlitz3.ab3@12505>   LEA ptr_parameterstore,A1
0002AA4E <AmiBlitz3.ab3@12508>   MOVEQ.l #$00,D2
0002AA54 <AmiBlitz3.ab3@12512>   LEA chartab,a0
0002AA56 <AmiBlitz3.ab3@12513>   MOVEQ #0,d0
0002AA5C <AmiBlitz3.ab3@12514>   MOVE.l A5,lastsourcepos
0002AA66 <AmiBlitz3.ab3@12515>   MOVE.w instringon,oldqflag
0002AA68 <AmiBlitz3.ab3@12518>     MOVE.b (a5)+,d0
0002AA6C <AmiBlitz3.ab3@12519>   CMP.b #$20,d0                                            ;space deftype
0002AA70 <AmiBlitz3.ab3@12520>   BEQ 'retry
0002AA76 <AmiBlitz3.ab3@12522>   MOVE.w d0,lastchar
0002AA7A <AmiBlitz3.ab3@12523>   TST.b 0(a0,d0.w)
0002AA7E <AmiBlitz3.ab3@12524>   BNE 'done
0002AA80 <AmiBlitz3.ab3@12537>   MOVE.b D0,(A1)+
0002AA82 <AmiBlitz3.ab3@12538>   ADDQ.l #1,D2
0002AA88 <AmiBlitz3.ab3@12541>   MOVE.l A5,lastsourcepos
0002AA8A <AmiBlitz3.ab3@12544>   MOVE.b (a5)+,d0
0002AA90 <AmiBlitz3.ab3@12545>   MOVE.b d0,lastchar+1
0002AA94 <AmiBlitz3.ab3@12546>   CMP.b #$20,d0
0002AA98 <AmiBlitz3.ab3@12547>   BEQ 'loop_l20
0002AA9C <AmiBlitz3.ab3@12549>   TST.b 0(a0,d0)
0002AAA0 <AmiBlitz3.ab3@12550>   BEQ 'loop
0002AAA4 <AmiBlitz3.ab3@12551>   CMP.b #2,d0
0002AAA8 <AmiBlitz3.ab3@12552>   BNE 'loop_lf1
0002AAAE <AmiBlitz3.ab3@12553>   MOVEA.l usedfrom,A5
0002AAB4 <AmiBlitz3.ab3@12554>   CLR.l usedfrom
0002AAB8 <AmiBlitz3.ab3@12555>  BRA 'loop_ln1
0002AABC <AmiBlitz3.ab3@12558>   CMP.b #1,d0
0002AAC0 <AmiBlitz3.ab3@12559>   BNE 'loop_l20
0002AAC4 <AmiBlitz3.ab3@12560>   MOVEA.l cmakea5(PC),A5
0002AAC8 <AmiBlitz3.ab3@12561>  BRA 'loop_ln1
0002AACC <AmiBlitz3.ab3@12564>   CMP.b #$7e,d0
0002AAD0 <AmiBlitz3.ab3@12565>             BNE 'loop_lt
0002AAD6 <AmiBlitz3.ab3@12566>             TST.w cmake
0002AADA <AmiBlitz3.ab3@12567>             BNE.w 'loop_a1
0002AADC <AmiBlitz3.ab3@12568>             SUBQ.l #1,a5
0002AAE0 <AmiBlitz3.ab3@12569>             BSR.w get1bytemain
0002AAE4 <AmiBlitz3.ab3@12570>  BRA 'loop
0002AAE8 <AmiBlitz3.ab3@12574>  BRA 'loop_gpex
0002AAEC <AmiBlitz3.ab3@12578>   BSR.w getchar
0002AB0E <AmiBlitz3.ab3@12580>    !compare1                                               ;bsr.w tstalpha
0002AB12 <AmiBlitz3.ab3@12581>    BEQ.w 'loop_getp1
0002AB24 <AmiBlitz3.ab3@12582>    !compare2                                               ;bsr.w tstnum
0002AB28 <AmiBlitz3.ab3@12583>    BEQ.w 'loop_getp1
0002AB2C <AmiBlitz3.ab3@12584>   CMP.w #$5F,D0                                            ;'_'
0002AB30 <AmiBlitz3.ab3@12585>    BEQ.w 'loop_getp1
0002AB34 <AmiBlitz3.ab3@12586>   CMP.w #$27,D0                                            ;''';#loclabch,d0 org source
0002AB38 <AmiBlitz3.ab3@12590>       BNE 'loop_gpex
0002AB3C <AmiBlitz3.ab3@12591>       CMP.b #$20,d0
0002AB40 <AmiBlitz3.ab3@12593>       BNE.w 'loop
0002AB42 <AmiBlitz3.ab3@12596>      TST.b d0
0002AB46 <AmiBlitz3.ab3@12597>      BPL 'loop_l10
0002AB48 <AmiBlitz3.ab3@12598>      SUBQ.l #1,a5
0002AB4C <AmiBlitz3.ab3@12599>      BSR get1byte_
0002AB50 <AmiBlitz3.ab3@12607>    CMP.w #$20,D0
0002AB54 <AmiBlitz3.ab3@12608>    BNE.w 'done
0002AB56 <AmiBlitz3.ab3@12610>    MOVEQ #0,d0
0002AB5C <AmiBlitz3.ab3@12611>   MOVE.l a5,lastsourcepos
0002AB5E <AmiBlitz3.ab3@12614>   MOVE.b (a5)+,d0                                          ;neuneu
0002AB62 <AmiBlitz3.ab3@12615>   BPL 'loop_l101
0002AB64 <AmiBlitz3.ab3@12616>   ASL.w #8,d0
0002AB66 <AmiBlitz3.ab3@12617>   MOVE.b (a5)+,d0
0002AB6C <AmiBlitz3.ab3@12620>   TST.w instringon
0002AB70 <AmiBlitz3.ab3@12621>   BNE 'loop_l102
0002AB74 <AmiBlitz3.ab3@12622>   CMP.b #$20,d0
0002AB78 <AmiBlitz3.ab3@12623>   BEQ 'loop_l103
0002AB7C <AmiBlitz3.ab3@12624>   CMP.b #";",d0
0002AB80 <AmiBlitz3.ab3@12625>   BNE 'loop_l102
0002AB82 <AmiBlitz3.ab3@12628>   MOVE.b (A5)+,D0
0002AB86 <AmiBlitz3.ab3@12629>              BEQ 'loop_l1
0002AB8A <AmiBlitz3.ab3@12630>              CMP.b #":",d0
0002AB8E <AmiBlitz3.ab3@12631>              BNE 'loop_lr                         ;:@
0002AB92 <AmiBlitz3.ab3@12632>              CMP.b #"@",(a5)
0002AB96 <AmiBlitz3.ab3@12633>              BNE 'loop_lr
0002AB98 <AmiBlitz3.ab3@12634>              ADDQ #1,a5
0002AB9E <AmiBlitz3.ab3@12638>   MOVE.w d0,lastchar
0002ABA2 <AmiBlitz3.ab3@12644>   CMP.b #";",d0
0002ABA6 <AmiBlitz3.ab3@12645>   BEQ 'done_l11
0002ABA8 <AmiBlitz3.ab3@12647>   CLR.b (A1)
0002ABAA <AmiBlitz3.ab3@12651>   TST.w D2
0002ABAC <AmiBlitz3.ab3@12652>  RTS
0002ABAE <AmiBlitz3.ab3@12656>   CLR.b (a1)
0002ABB0 <AmiBlitz3.ab3@12657>   MOVEQ #0,d0
0002ABB6 <AmiBlitz3.ab3@12658>   MOVE.w d0,lastchar
0002ABB8 <AmiBlitz3.ab3@12661>   TST.w D2
0002ABBA <AmiBlitz3.ab3@12662> RTS
0002ABBC <AmiBlitz3.ab3@12669>   MOVE.l (A2),D0
0002ABC0 <AmiBlitz3.ab3@12672>   BEQ.w 'here
0002ABC2 <AmiBlitz3.ab3@12673>   MOVEA.l D0,A2
0002ABC6 <AmiBlitz3.ab3@12674>  BRA.w 'loop
0002ABCA <AmiBlitz3.ab3@12677> BRA.w reget
0002ABCC <AmiBlitz3.ab3@12683>   MOVE.l (A2),-(A7)
0002ABD0 <AmiBlitz3.ab3@12684>   BSR.w addlabel
0002ABD2 <AmiBlitz3.ab3@12685>   MOVE.l (A7)+,(A2)
0002ABD4 <AmiBlitz3.ab3@12686> RTS
0002ABDA <AmiBlitz3.ab3@12691>   CLR.l fp0addr
0002ABE0 <AmiBlitz3.ab3@12692>   TST.w dirmode
0002ABE4 <AmiBlitz3.ab3@12693>    BNE.w illdirerr
0002ABE6 <AmiBlitz3.ab3@12694>   MOVEQ.l #$00,D0
0002ABE8 <AmiBlitz3.ab3@12695>   MOVE.w D7,D0
0002ABEA <AmiBlitz3.ab3@12696>   ADD.w D2,D0
0002ABEC <AmiBlitz3.ab3@12697>   ADDQ.w #1,D0
0002ABEE <AmiBlitz3.ab3@12698>   MOVE.w D0,D2
0002ABF0 <AmiBlitz3.ab3@12699>   ADDQ.l #2,d0
0002ABF2 <AmiBlitz3.ab3@12700>   MOVEQ.l #$01,D1
0002ABF8 <AmiBlitz3.ab3@12701>   MOVEA.l _execbase,A6
0002ABFE <AmiBlitz3.ab3@12702>   MOVE.l mempool2,a0
0002AC02 <AmiBlitz3.ab3@12703>   JSR _AllocPooled(a6)
0002AC08 <AmiBlitz3.ab3@12705>   MOVE.l lastlabel,a2
0002AC0A <AmiBlitz3.ab3@12706>   MOVE.l D0,(A2)
0002AC0C <AmiBlitz3.ab3@12707>   MOVE.l d0,a0
0002AC0E <AmiBlitz3.ab3@12708>   CLR.l (a0)
0002AC14 <AmiBlitz3.ab3@12709>   MOVE.l a0,lastlabel
0002AC16 <AmiBlitz3.ab3@12710>   MOVE.l d0,A2
0002AC1A <AmiBlitz3.ab3@12711>   LEA -$1(A0,D7.W),A0
0002AC1C <AmiBlitz3.ab3@12712>   MOVE.b D2,(A0)+
0002AC22 <AmiBlitz3.ab3@12713>   LEA ptr_parameterstore,A1
0002AC24 <AmiBlitz3.ab3@12714>   MOVEQ #0,d0
0002AC26 <AmiBlitz3.ab3@12715>   MOVEQ #0,d1
0002AC28 <AmiBlitz3.ab3@12718>   MOVE.b (A1)+,d1
0002AC2C <AmiBlitz3.ab3@12719>    BEQ 'l1
0002AC32 <AmiBlitz3.ab3@12720>    !hashalgo
0002AC34 <AmiBlitz3.ab3@12721>    MOVE.b d1,(A0)+
0002AC38 <AmiBlitz3.ab3@12722>  BRA 'loop2a
0002AC3A <AmiBlitz3.ab3@12725>    CLR.b (a0)+
0002AC40 <AmiBlitz3.ab3@12726>    LEA labelhash,a0
0002AC46 <AmiBlitz3.ab3@12727>    AND.l #hashsize,d0
0002AC48 <AmiBlitz3.ab3@12728>    ASL.l #2,d0
0002AC4C <AmiBlitz3.ab3@12729>    MOVE.l 0(a0,d0),d1
0002AC50 <AmiBlitz3.ab3@12730>    MOVE.l d1,$c(a2)
0002AC54 <AmiBlitz3.ab3@12731>    MOVE.l a2,0(a0,d0)
0002AC56 <AmiBlitz3.ab3@12732>    MOVEQ #0,d0
0002AC5A <AmiBlitz3.ab3@12733> BRA.w reget
0002AC60 <AmiBlitz3.ab3@12737>    TST.b newvariable
0002AC64 <AmiBlitz3.ab3@12738>    BNE addlabel
0002AC6A <AmiBlitz3.ab3@12741>   TST.w dirmode
0002AC6E <AmiBlitz3.ab3@12742>    BNE.w illdirerr
0002AC70 <AmiBlitz3.ab3@12743>   MOVEQ.l #$00,D0
0002AC72 <AmiBlitz3.ab3@12744>   MOVE.w D7,D0
0002AC74 <AmiBlitz3.ab3@12745>   ADD.w D2,D0
0002AC76 <AmiBlitz3.ab3@12746>   ADDQ.w #1,D0
0002AC78 <AmiBlitz3.ab3@12747>   MOVE.w D0,D2
0002AC7A <AmiBlitz3.ab3@12748>   MOVEQ.l #$01,D1
0002AC80 <AmiBlitz3.ab3@12749>   MOVEA.l _execbase,A6
0002AC86 <AmiBlitz3.ab3@12750>   MOVE.l mempool2,a0
0002AC8A <AmiBlitz3.ab3@12751>   JSR _AllocPooled(a6)
0002AC8C <AmiBlitz3.ab3@12752>   MOVEA.l D0,A0
0002AC92 <AmiBlitz3.ab3@12754>   LEA varbase,a2
0002AC94 <AmiBlitz3.ab3@12755>   MOVE.l (a2),(a0)
0002AC96 <AmiBlitz3.ab3@12756>   MOVE.l A0,(A2)
0002AC98 <AmiBlitz3.ab3@12757>   MOVEA.l A0,A2
0002AC9C <AmiBlitz3.ab3@12758>   LEA -$1(A0,D7.W),A0
0002AC9E <AmiBlitz3.ab3@12759>   MOVE.b D2,(A0)+
0002ACA4 <AmiBlitz3.ab3@12760>   LEA ptr_parameterstore,A1
0002ACA6 <AmiBlitz3.ab3@12761>   MOVEQ #0,d0
0002ACA8 <AmiBlitz3.ab3@12762>   MOVEQ #0,d1
0002ACAA <AmiBlitz3.ab3@12765>   MOVE.b (A1)+,d1
0002ACAE <AmiBlitz3.ab3@12766>    BEQ 'l12
0002ACB4 <AmiBlitz3.ab3@12767>    !hashalgo
0002ACB6 <AmiBlitz3.ab3@12768>    MOVE.b d1,(A0)+
0002ACBA <AmiBlitz3.ab3@12769>  BRA 'l11
0002ACBC <AmiBlitz3.ab3@12772>   CLR.b (a0)+
0002ACC2 <AmiBlitz3.ab3@12773>   LEA variablehash,a0
0002ACC8 <AmiBlitz3.ab3@12774>    AND.l #hashsize,d0
0002ACCA <AmiBlitz3.ab3@12775>    ASL.l #2,d0
0002ACCE <AmiBlitz3.ab3@12776>    MOVE.l 0(a0,d0),d1
0002ACD2 <AmiBlitz3.ab3@12777>    MOVE.l d1,$e(a2)
0002ACD6 <AmiBlitz3.ab3@12778>    MOVE.l a2,0(a0,d0)
0002ACD8 <AmiBlitz3.ab3@12779>    MOVEQ #0,d0
0002ACDC <AmiBlitz3.ab3@12780> BRA.w reget
0002ACE2 <AmiBlitz3.ab3@12784>   TST.w dirmode
0002ACE6 <AmiBlitz3.ab3@12785>    BNE.w illdirerr
0002ACE8 <AmiBlitz3.ab3@12792>   MOVEQ.l #$00,D0
0002ACEA <AmiBlitz3.ab3@12793>   MOVE.w D7,D0
0002ACEC <AmiBlitz3.ab3@12794>   ADD.w D2,D0
0002ACEE <AmiBlitz3.ab3@12795>   ADDQ.w #1,D0
0002ACF0 <AmiBlitz3.ab3@12796>   MOVE.w D0,D2
0002ACF2 <AmiBlitz3.ab3@12797>   MOVEQ.l #$01,D1
0002ACF8 <AmiBlitz3.ab3@12798>   MOVEA.l _execbase,A6
0002ACFE <AmiBlitz3.ab3@12800>   MOVE.l mempool2,a0
0002AD02 <AmiBlitz3.ab3@12801>   JSR _AllocPooled(a6)
0002AD04 <AmiBlitz3.ab3@12805>   MOVEA.l D0,A0
0002AD06 <AmiBlitz3.ab3@12806>   MOVE.l A0,(A2)
0002AD08 <AmiBlitz3.ab3@12807>   CLR.l (a0)              ;clear next
0002AD0C <AmiBlitz3.ab3@12809>   CLR.l 8(a0)
0002AD0E <AmiBlitz3.ab3@12810>   MOVEA.l A0,A2
0002AD12 <AmiBlitz3.ab3@12812>   LEA -$1(A0,D7.W),A0
0002AD14 <AmiBlitz3.ab3@12813>   MOVE.b D2,(A0)+          ;put in struct length
0002AD1A <AmiBlitz3.ab3@12814>   LEA ptr_parameterstore,A1
0002AD1C <AmiBlitz3.ab3@12816>   MOVEQ #0,d0
0002AD1E <AmiBlitz3.ab3@12817>   MOVEQ #0,d1
0002AD20 <AmiBlitz3.ab3@12821> 
0002AD22 <AmiBlitz3.ab3@12822>   MOVE.b d1,(A0)+       ; "
0002AD26 <AmiBlitz3.ab3@12823>   BNE.w 'loop2
0002AD2A <AmiBlitz3.ab3@12824> BRA.w reget
0002AD2C <AmiBlitz3.ab3@12828>   MOVEQ.l #$13,D7
0002AD32 <AmiBlitz3.ab3@12829>   LEA constantbase,A2
0002AD36 <AmiBlitz3.ab3@12830> BRA.w findlab
0002AD38 <AmiBlitz3.ab3@12834>   MOVEQ.l #$05+8,D7        ; was #5                                ;#5,d7 org source
0002AD3E <AmiBlitz3.ab3@12835>   LEA xinclude_base,A2
0002AD42 <AmiBlitz3.ab3@12836> BRA.w findlab
0002AD44 <AmiBlitz3.ab3@12840>   MOVEQ.l #$09,D7
0002AD4A <AmiBlitz3.ab3@12841>   LEA firstconst,A2
0002AD4E <AmiBlitz3.ab3@12842> BRA.w findlab
0002AD50 <AmiBlitz3.ab3@12846>   MOVEQ.l #$0d,D7                                          ;find macro
0002AD56 <AmiBlitz3.ab3@12847>   LEA macrobase,A2
0002AD5A <AmiBlitz3.ab3@12848> BRA.w findlab
0002AD60 <AmiBlitz3.ab3@12852>   LEA labelhash,A2
0002AD62 <AmiBlitz3.ab3@12853>   MOVEQ.l #$13,D7
0002AD64 <AmiBlitz3.ab3@12855>   EXT.l d2
0002AD6A <AmiBlitz3.ab3@12856>   LEA ptr_parameterstore,A0
0002AD6C <AmiBlitz3.ab3@12857>   MOVEQ #0,d0
0002AD6E <AmiBlitz3.ab3@12858>   MOVEQ #0,d1
0002AD70 <AmiBlitz3.ab3@12861>     MOVE.b (a0)+,d1
0002AD74 <AmiBlitz3.ab3@12862>     BEQ 'l15
0002AD7A <AmiBlitz3.ab3@12863>     !hashalgo
0002AD7E <AmiBlitz3.ab3@12864>  BRA 'l20
0002AD84 <AmiBlitz3.ab3@12867>   AND.l #hashsize,d0
0002AD86 <AmiBlitz3.ab3@12868>   ASL.l #2,d0
0002AD8A <AmiBlitz3.ab3@12869>   MOVE.l 0(a2,d0),d0
0002AD8E <AmiBlitz3.ab3@12870>  BRA 'l11
0002AD92 <AmiBlitz3.ab3@12873>   MOVE.l $c(A2),D0          ;  begin copy of findlabel
0002AD96 <AmiBlitz3.ab3@12876>   BEQ findlab_no
0002AD98 <AmiBlitz3.ab3@12877>   MOVEA.l D0,A2
0002AD9A <AmiBlitz3.ab3@12878>   MOVEQ.l #$00,D0
0002AD9E <AmiBlitz3.ab3@12879>   MOVE.b -$1(A2,D7.l),D0
0002ADA4 <AmiBlitz3.ab3@12880>   LEA ptr_parameterstore,A0
0002ADA6 <AmiBlitz3.ab3@12881>   SUB.l D7,D0
0002ADA8 <AmiBlitz3.ab3@12882>   SUBQ.l #1,D0
0002ADAA <AmiBlitz3.ab3@12883>   CMP.l D0,D2
0002ADAE <AmiBlitz3.ab3@12884>    BNE.b 'loop
0002ADB2 <AmiBlitz3.ab3@12885>   LEA $0(A2,D7.W),A1
0002ADB4 <AmiBlitz3.ab3@12886>   SUBQ.l #1,D0
0002ADB6 <AmiBlitz3.ab3@12889>     MOVE.b (a1)+,d1
0002ADB8 <AmiBlitz3.ab3@12890>     CMP.b (a0)+,d1
0002ADBC <AmiBlitz3.ab3@12892>     BNE.b 'loop
0002ADC0 <AmiBlitz3.ab3@12893>   DBF D0,'loop2
0002ADC4 <AmiBlitz3.ab3@12895>   BSR.w reget
0002ADC6 <AmiBlitz3.ab3@12896>   CMP.w D0,D0
0002ADC8 <AmiBlitz3.ab3@12897> RTS                     ; end copy of findlab
0002ADCA <AmiBlitz3.ab3@12901>   MOVEQ.l #$0B,D7
0002ADCE <AmiBlitz3.ab3@12902> BRA.w findlab
0002ADD4 <AmiBlitz3.ab3@12906>   LEA firstproc,A2
0002ADDA <AmiBlitz3.ab3@12907>   MOVE.l #$21+#funcentry_extend,D7    ; was #33,
0002ADDE <AmiBlitz3.ab3@12908> BRA findlab
0002ADE4 <AmiBlitz3.ab3@12912>   LEA firstfor,A2
0002ADE6 <AmiBlitz3.ab3@12913>   MOVEQ.l #$11,D7
0002ADEA <AmiBlitz3.ab3@12914> BRA.w findlab
0002ADEC <AmiBlitz3.ab3@12918>   MOVEQ.l #$0F,D7
0002ADF0 <AmiBlitz3.ab3@12920> BRA.w findlab
0002ADF2 <AmiBlitz3.ab3@12924>   MOVEQ.l #$0F+4,D7
0002ADF8 <AmiBlitz3.ab3@12925>   TST.b newvariable
0002ADFC <AmiBlitz3.ab3@12926>    BNE.w findlab
0002AE02 <AmiBlitz3.ab3@12927>   LEA variablehash,A2
0002AE08 <AmiBlitz3.ab3@12928>   LEA ptr_parameterstore,A0
0002AE0A <AmiBlitz3.ab3@12929>   MOVEQ #0,d0
0002AE0C <AmiBlitz3.ab3@12930>   MOVEQ #0,d1
0002AE0E <AmiBlitz3.ab3@12933>     MOVE.b (a0)+,d1
0002AE12 <AmiBlitz3.ab3@12934>     BEQ 'l15
0002AE18 <AmiBlitz3.ab3@12935>     !hashalgo
0002AE1C <AmiBlitz3.ab3@12936>  BRA 'l20
0002AE22 <AmiBlitz3.ab3@12939>   AND.l #hashsize,d0
0002AE24 <AmiBlitz3.ab3@12940>   ASL.l #2,d0
0002AE28 <AmiBlitz3.ab3@12941>   MOVE.l 0(a2,d0),d0
0002AE2C <AmiBlitz3.ab3@12942>  BRA 'l11
0002AE30 <AmiBlitz3.ab3@12945>   MOVE.l $e(A2),D0                                         ;find label
0002AE34 <AmiBlitz3.ab3@12948>   BEQ findlab_no
0002AE36 <AmiBlitz3.ab3@12949>   MOVEA.l D0,A2
0002AE38 <AmiBlitz3.ab3@12950>   MOVEQ.l #$00,D0
0002AE3C <AmiBlitz3.ab3@12951>   MOVE.b -$1(A2,D7.W),D0
0002AE42 <AmiBlitz3.ab3@12952>   LEA ptr_parameterstore,A0
0002AE44 <AmiBlitz3.ab3@12953>   SUB.w D7,D0
0002AE46 <AmiBlitz3.ab3@12954>   SUBQ.l #1,D0
0002AE48 <AmiBlitz3.ab3@12955>   CMP.w D0,D2
0002AE4C <AmiBlitz3.ab3@12956>    BNE.b 'l10
0002AE50 <AmiBlitz3.ab3@12957>   LEA $0(A2,D7.W),A1
0002AE52 <AmiBlitz3.ab3@12958>   SUBQ.l #1,D0
0002AE54 <AmiBlitz3.ab3@12961>     MOVE.b (a1)+,d1
0002AE56 <AmiBlitz3.ab3@12962>     CMP.b (a0)+,d1
0002AE5A <AmiBlitz3.ab3@12964>     BNE.b 'l10
0002AE5E <AmiBlitz3.ab3@12965>   DBF D0,'l201
0002AE62 <AmiBlitz3.ab3@12967>   BSR.w reget
0002AE64 <AmiBlitz3.ab3@12968>   CMP.w D0,D0
0002AE66 <AmiBlitz3.ab3@12969> RTS
0002AE68 <AmiBlitz3.ab3@12982>     MOVE.l (A2),D0                                         ;find label
0002AE6C <AmiBlitz3.ab3@12983>      BEQ.b findlab_no
0002AE6E <AmiBlitz3.ab3@12984>     MOVEA.l D0,A2
0002AE70 <AmiBlitz3.ab3@12985>     MOVEQ.l #$00,D0
0002AE74 <AmiBlitz3.ab3@12986>     MOVE.b -$1(A2,D7.W),D0
0002AE76 <AmiBlitz3.ab3@12987>     SUB.l D7,D0
0002AE78 <AmiBlitz3.ab3@12988>     SUBQ.l #1,D0
0002AE7A <AmiBlitz3.ab3@12989>   CMP.w D0,D2
0002AE7E <AmiBlitz3.ab3@12990>   BNE.b 'loop
0002AE82 <AmiBlitz3.ab3@12992>   LEA $0(A2,D7.W),A1
0002AE88 <AmiBlitz3.ab3@12993>   LEA ptr_parameterstore,A0
0002AE8A <AmiBlitz3.ab3@12994>   SUBQ.l #1,D0
0002AE8C <AmiBlitz3.ab3@12998>     MOVE.b (a1)+,d1
0002AE8E <AmiBlitz3.ab3@12999>     CMP.b (a0)+,d1
0002AE92 <AmiBlitz3.ab3@13002>     BNE.b 'loop
0002AE96 <AmiBlitz3.ab3@13003>   DBF D0,'loop2
0002AE9A <AmiBlitz3.ab3@13005>   BSR.w reget
0002AE9C <AmiBlitz3.ab3@13006>   CMP.w D0,D0
0002AE9E <AmiBlitz3.ab3@13007>  RTS
0002AEA2 <AmiBlitz3.ab3@13010>   BSR.w reget
0002AEA4 <AmiBlitz3.ab3@13011>   MOVEQ.l #-$01,D1
0002AEA6 <AmiBlitz3.ab3@13012> RTS
0002AEAC <AmiBlitz3.ab3@13016>   MOVEA.l alllocals,A4
0002AEB2 <AmiBlitz3.ab3@13017>   CLR.l alllocals
0002AEB6 <AmiBlitz3.ab3@13023>     CMPA.w #$0,A4
0002AEBA <AmiBlitz3.ab3@13024>      BEQ.b 'done
0002AEBE <AmiBlitz3.ab3@13025>     MOVEA.l $4(A4),A3
0002AEC2 <AmiBlitz3.ab3@13027>     MOVEA.l $8(A4),A3
0002AEC4 <AmiBlitz3.ab3@13029>     MOVEA.l A4,A1
0002AEC6 <AmiBlitz3.ab3@13030>     MOVEA.l (A4),A4
0002AEC8 <AmiBlitz3.ab3@13031>     MOVEQ.l #$0C,D0
0002AECE <AmiBlitz3.ab3@13032>     MOVEA.l _execbase,A6
0002AED4 <AmiBlitz3.ab3@13034>     MOVE.l mempool,a0
0002AED8 <AmiBlitz3.ab3@13035>     JSR _FreePooled(A6)
0002AEDC <AmiBlitz3.ab3@13038>  BRA.b 'loop
0002AEE2 <AmiBlitz3.ab3@13042>   CLR.l firstglob                                          ;fix 2*aclearallvar called
0002AEE8 <AmiBlitz3.ab3@13043>   CLR.l firstlocal
0002AEEE <AmiBlitz3.ab3@13044>   CLR.l sharebase
0002AEF4 <AmiBlitz3.ab3@13045>   TST.l mempool2
0002AEF8 <AmiBlitz3.ab3@13046>   BEQ 'done_l10
0002AEFE <AmiBlitz3.ab3@13048>   MOVEA.l _execbase,A6
0002AF04 <AmiBlitz3.ab3@13049>   MOVE.l mempool2,a0
0002AF0A <AmiBlitz3.ab3@13050>   CLR.l mempool2
0002AF0E <AmiBlitz3.ab3@13051>   JSR _DeletePool(a6)
0002AF14 <AmiBlitz3.ab3@13054>   MOVE.l _execbase,a6
0002AF1A <AmiBlitz3.ab3@13055>   MOVE.l #$10000,d0
0002AF20 <AmiBlitz3.ab3@13056>   MOVE.l #80000,d1
0002AF22 <AmiBlitz3.ab3@13057>   MOVE.l d1,d2
0002AF26 <AmiBlitz3.ab3@13058>   JSR _CreatePool(a6)
0002AF2C <AmiBlitz3.ab3@13059>   MOVE.l d0,mempool2
0002AF2E <AmiBlitz3.ab3@13061> RTS
0002AF32 <AmiBlitz3.ab3@13066>   CMPA.w #$0,A3
0002AF36 <AmiBlitz3.ab3@13067>    BEQ.w 'done
0002AF38 <AmiBlitz3.ab3@13068>   MOVEA.l A3,A1
0002AF3A <AmiBlitz3.ab3@13069>   MOVEA.l (A3),A3
0002AF3C <AmiBlitz3.ab3@13070>   MOVEQ.l #$00,D0
0002AF40 <AmiBlitz3.ab3@13071>   MOVE.b $E(A1),D0
0002AF46 <AmiBlitz3.ab3@13072>   MOVEA.l _execbase,A6
0002AF4C <AmiBlitz3.ab3@13074>   MOVE.l mempool2,a0
0002AF50 <AmiBlitz3.ab3@13075>   JSR _FreePooled(A6)
0002AF54 <AmiBlitz3.ab3@13078>  BRA.w freevars
0002AF58 <AmiBlitz3.ab3@13082>     CMPA.w #$0,A3
0002AF5C <AmiBlitz3.ab3@13083>      BEQ.w 'done
0002AF5E <AmiBlitz3.ab3@13084>     MOVEA.l A3,A1
0002AF60 <AmiBlitz3.ab3@13085>     MOVEA.l (A3),A3
0002AF62 <AmiBlitz3.ab3@13086>     MOVEQ.l #$00,D0
0002AF66 <AmiBlitz3.ab3@13087>     MOVE.b $E+4(A1),D0
0002AF6C <AmiBlitz3.ab3@13088>     MOVEA.l _execbase,A6
0002AF72 <AmiBlitz3.ab3@13089>     MOVE.l mempool2,a0
0002AF76 <AmiBlitz3.ab3@13090>     JSR _FreePooled(A6)
0002AF7A <AmiBlitz3.ab3@13091>  BRA.w 'freevarsb
0002AF7C <AmiBlitz3.ab3@13095> RTS
0002AF82 <AmiBlitz3.ab3@13101>   MOVEA.l currentlabeladdr,A0
0002AF88 <AmiBlitz3.ab3@13102>   MOVE.l a0,lastlabel
0002AF8A <AmiBlitz3.ab3@13103>   MOVEA.l (A0),A2
0002AF8C <AmiBlitz3.ab3@13104>   CLR.l (A0)
0002AF92 <AmiBlitz3.ab3@13105>   MOVEA.l _execbase,A6
0002AF96 <AmiBlitz3.ab3@13108>   CMPA.w #$0,A2
0002AF9A <AmiBlitz3.ab3@13109>    BEQ.w 'done
0002AF9E <AmiBlitz3.ab3@13110>   MOVE.l $4(A2),D0
0002AFA2 <AmiBlitz3.ab3@13111>   BTST #$0,D0
0002AFA6 <AmiBlitz3.ab3@13112>    BNE.w 'skip
0002AFA8 <AmiBlitz3.ab3@13113>   MOVEA.l D0,A3
0002AFAC <AmiBlitz3.ab3@13116>     CMPA.w #$0,A3
0002AFB0 <AmiBlitz3.ab3@13117>      BEQ.w 'skip
0002AFB2 <AmiBlitz3.ab3@13118>     MOVEA.l A3,A1
0002AFB4 <AmiBlitz3.ab3@13119>     MOVEA.l (A3),A3
0002AFB6 <AmiBlitz3.ab3@13120>     MOVEQ.l #$0C+2,D0     ; was #12                                 ;cancel fix
0002AFBC <AmiBlitz3.ab3@13122>     MOVE.l mempool,a0
0002AFC0 <AmiBlitz3.ab3@13123>     JSR _FreePooled(A6)
0002AFC4 <AmiBlitz3.ab3@13126>  BRA.w 'loop2
0002AFC6 <AmiBlitz3.ab3@13129>   MOVEQ.l #$00,D0
0002AFCA <AmiBlitz3.ab3@13130>   MOVE.b $12(A2),D0
0002AFCC <AmiBlitz3.ab3@13131>   MOVEA.l A2,A1
0002AFCE <AmiBlitz3.ab3@13132>   MOVEA.l (A2),A2
0002AFD4 <AmiBlitz3.ab3@13134>   MOVE.l mempool2,a0
0002AFD8 <AmiBlitz3.ab3@13138>  BRA.w 'loop
0002AFDA <AmiBlitz3.ab3@13141> RTS
0002AFE0 <AmiBlitz3.ab3@13145>   MOVEA.l firstpend,A3
0002AFE6 <AmiBlitz3.ab3@13146>   CLR.l firstpend
0002AFEC <AmiBlitz3.ab3@13147>   MOVEA.l _execbase,A6
0002AFF0 <AmiBlitz3.ab3@13150>     CMPA.w #$0,A3
0002AFF4 <AmiBlitz3.ab3@13151>      BEQ.w 'done
0002AFF6 <AmiBlitz3.ab3@13152>     MOVEA.l A3,A1
0002AFF8 <AmiBlitz3.ab3@13153>     MOVEQ.l #$08,D0
0002AFFA <AmiBlitz3.ab3@13154>     MOVEA.l (A3),A3
0002B000 <AmiBlitz3.ab3@13156>     MOVE.l mempool,a0
0002B004 <AmiBlitz3.ab3@13157>     JSR _FreePooled(A6)
0002B008 <AmiBlitz3.ab3@13160>  BRA.w 'fpnd2
0002B00A <AmiBlitz3.ab3@13163> RTS
0002B010 <AmiBlitz3.ab3@13169>   MOVEA.l firstproc,A2
0002B016 <AmiBlitz3.ab3@13170>   CLR.l firstproc
0002B01C <AmiBlitz3.ab3@13171>   MOVEA.l _execbase,A6
0002B020 <AmiBlitz3.ab3@13174>     CMPA.w #$0,A2
0002B024 <AmiBlitz3.ab3@13175>      BEQ.w 'done
0002B026 <AmiBlitz3.ab3@13176>     MOVEA.l A2,A1
0002B028 <AmiBlitz3.ab3@13177>     MOVEA.l (A2),A2
0002B02A <AmiBlitz3.ab3@13178>     MOVEQ.l #$00,D0
0002B02E <AmiBlitz3.ab3@13179>     MOVE.b $20+#funcentry_extend(A1),D0    ; was 32(a1),
0002B034 <AmiBlitz3.ab3@13181>     MOVE.l mempool2,a0
0002B038 <AmiBlitz3.ab3@13182>     JSR _FreePooled(A6)
0002B03C <AmiBlitz3.ab3@13185>  BRA.w 'loop
0002B03E <AmiBlitz3.ab3@13188> RTS
0002B042 <AmiBlitz3.ab3@13193>   CMPA.w #$0,A2
0002B046 <AmiBlitz3.ab3@13194>    BEQ.w 'done
0002B04A <AmiBlitz3.ab3@13195>   MOVEA.l $4(A2),A3
0002B04E <AmiBlitz3.ab3@13196>   CMPA.w #$FF,A3
0002B052 <AmiBlitz3.ab3@13197>    BEQ.w 'noway
0002B056 <AmiBlitz3.ab3@13201>    BSR.w freevars
0002B058 <AmiBlitz3.ab3@13204>     MOVEA.l A2,A1
0002B05A <AmiBlitz3.ab3@13205>     MOVEA.l (A2),A2
0002B05C <AmiBlitz3.ab3@13206>     MOVEQ.l #$00,D0
0002B060 <AmiBlitz3.ab3@13207>     MOVE.b $A(A1),D0
0002B066 <AmiBlitz3.ab3@13208>     MOVEA.l _execbase,A6
0002B06C <AmiBlitz3.ab3@13210>     MOVE.l mempool2,a0
0002B070 <AmiBlitz3.ab3@13211>     JSR _FreePooled(A6)
0002B074 <AmiBlitz3.ab3@13214>  BRA.w freetypes
0002B076 <AmiBlitz3.ab3@13217> RTS
0002B07C <AmiBlitz3.ab3@13226>   JSR usevars
0002B082 <AmiBlitz3.ab3@13228>   CLR.w notshared
0002B088 <AmiBlitz3.ab3@13229>   CLR.w varmode           ;local mode
0002B08E <AmiBlitz3.ab3@13230>   MOVE.w proceduremode,D1
0002B092 <AmiBlitz3.ab3@13231>    BNE.w fvarlocal
0002B098 <AmiBlitz3.ab3@13233>   LEA varbase,A2
0002B09E <AmiBlitz3.ab3@13235>   LEA ptr_parameterstore,a0
0002B0A2 <AmiBlitz3.ab3@13236>   CMP.b #$22,(a0)
0002B0A6 <AmiBlitz3.ab3@13237>   BNE fvarback
0002B0A8 <AmiBlitz3.ab3@13238>   MOVEQ #0,d0
0002B0AE <AmiBlitz3.ab3@13239>  JMP error
0002B0B2 <AmiBlitz3.ab3@13244>   BSR.w findvariable
0002B0B6 <AmiBlitz3.ab3@13247>   BNE.w fvaradd
0002B0BC <AmiBlitz3.ab3@13252>   MOVE.b flagmask+1,D1
0002B0C0 <AmiBlitz3.ab3@13253>   MOVE.b $7(A2),D3
0002B0C2 <AmiBlitz3.ab3@13254>   EOR.b D3,D1
0002B0C6 <AmiBlitz3.ab3@13256>   BNE 'l2
0002B0CE <AmiBlitz3.ab3@13257>   CMP.b #2,nowdeclare
0002B0D2 <AmiBlitz3.ab3@13258>   BEQ errormsg_declaredtwice
0002B0D6 <AmiBlitz3.ab3@13259>  BRA.w fvarfound
0002B0DA <AmiBlitz3.ab3@13263>   BSR.w findlab
0002B0DE <AmiBlitz3.ab3@13265>   BNE 'l1
0002B0E6 <AmiBlitz3.ab3@13266>   CMP.b #2,nowdeclare
0002B0EA <AmiBlitz3.ab3@13267>   BEQ errormsg_declaredtwice
0002B0EC <AmiBlitz3.ab3@13268>   CMP.w d0,d0
0002B0F0 <AmiBlitz3.ab3@13272>  BRA.w 'more
0002B0F2 <AmiBlitz3.ab3@13276>    MOVE.l a2,-(a7)
0002B0F8 <AmiBlitz3.ab3@13277>    LEA sharebase,a2
0002B0FA <AmiBlitz3.ab3@13278>    MOVEQ #$f+4,d7
0002B0FE <AmiBlitz3.ab3@13279>    BSR.w findlab
0002B102 <AmiBlitz3.ab3@13280>    BEQ 'l2x
0002B104 <AmiBlitz3.ab3@13281>    MOVE.l (a7)+,a2
0002B108 <AmiBlitz3.ab3@13282>  BRA 'cont
0002B10A <AmiBlitz3.ab3@13285>   ADDQ.l #4,a7
0002B110 <AmiBlitz3.ab3@13286>   CLR.w varmode
0002B116 <AmiBlitz3.ab3@13287>   MOVE.b flagmask+1,D1
0002B11A <AmiBlitz3.ab3@13288>   MOVE.b $7(A2),D3
0002B11C <AmiBlitz3.ab3@13289>   EOR.b D3,D1
0002B120 <AmiBlitz3.ab3@13290>   BNE vardeclareerr
0002B124 <AmiBlitz3.ab3@13291>  BRA fvarfound
0002B12A <AmiBlitz3.ab3@13295>    MOVE.w nonew,D1
0002B12E <AmiBlitz3.ab3@13296>    BNE.w nonewerr
0002B134 <AmiBlitz3.ab3@13298>    TST.b nowdeclare
0002B138 <AmiBlitz3.ab3@13299>    BNE 'l2b
0002B13E <AmiBlitz3.ab3@13300>    TST.b declare2
0002B142 <AmiBlitz3.ab3@13301>    BEQ 'l1b
0002B146 <AmiBlitz3.ab3@13302>    CMP.b #$2e,d0
0002B14A <AmiBlitz3.ab3@13303>    BEQ 'l2b
0002B14E <AmiBlitz3.ab3@13304>    CMP.b #"$",d0
0002B152 <AmiBlitz3.ab3@13305>    BEQ 'l2b
0002B156 <AmiBlitz3.ab3@13306>  BRA vardeclareerr
0002B15C <AmiBlitz3.ab3@13309>   TST.b declare
0002B160 <AmiBlitz3.ab3@13310>    BNE vardeclareerr
0002B164 <AmiBlitz3.ab3@13314>   BSR.w addvariable      ;create var
0002B16A <AmiBlitz3.ab3@13315>   NOT.w notshared        ;set added flag
0002B16C <AmiBlitz3.ab3@13316>   MOVEA.l A2,A3
0002B172 <AmiBlitz3.ab3@13317>   MOVEA.l defaulttype,A2
0002B176 <AmiBlitz3.ab3@13318>   CMP.w #$2E,D0         ;'.'
0002B17A <AmiBlitz3.ab3@13319>    BEQ.w 'clapton
0002B17E <AmiBlitz3.ab3@13320>   CMP.w #$24,D0         ;'$'
0002B182 <AmiBlitz3.ab3@13321>    BNE.w 'usedef
0002B188 <AmiBlitz3.ab3@13322>   LEA newtype_string,A2
0002B18C <AmiBlitz3.ab3@13323>    BSR.w get1bytemain
0002B190 <AmiBlitz3.ab3@13324>  BRA.w 'usedef
0002B194 <AmiBlitz3.ab3@13327>   BSR.w getparameter2
0002B19A <AmiBlitz3.ab3@13328>   LEA newtypebase,A2
0002B19E <AmiBlitz3.ab3@13329>    BSR.w findtype
0002B1A2 <AmiBlitz3.ab3@13330>    BNE.w notypeerr
0002B1A8 <AmiBlitz3.ab3@13333>   CMPA.l #newtype_byte,A2
0002B1AC <AmiBlitz3.ab3@13334>    BEQ.w 'byte
0002B1B2 <AmiBlitz3.ab3@13335>   MOVE.w varmode,D1
0002B1B6 <AmiBlitz3.ab3@13336>    BNE.w 'pit
0002B1BC <AmiBlitz3.ab3@13337>   ADDQ.w #1,globalvarpointer
0002B1C4 <AmiBlitz3.ab3@13340>   BCLR #$0,globalvarpointer+1
0002B1C8 <AmiBlitz3.ab3@13343>   MOVE.l A2,$A(A3)           ;set type
0002B1D0 <AmiBlitz3.ab3@13344>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002B1D2 <AmiBlitz3.ab3@13345>   MOVEQ.l #$04,D1
0002B1DA <AmiBlitz3.ab3@13346>   BTST #$0,flagmask+1
0002B1DE <AmiBlitz3.ab3@13347>    BNE.w 'skip3
0002B1E6 <AmiBlitz3.ab3@13348>   BTST #$1,flagmask+1
0002B1EA <AmiBlitz3.ab3@13349>    BNE.w 'skip3
0002B1F2 <AmiBlitz3.ab3@13350>   CMPI.l #$100,$4(A2)
0002B1F6 <AmiBlitz3.ab3@13351>    BCC.w 'skip3
0002B1FA <AmiBlitz3.ab3@13352>   MOVE.w $8(A2),D1
0002B200 <AmiBlitz3.ab3@13355>   TST.w varmode
0002B204 <AmiBlitz3.ab3@13356>    BEQ.w fvaradd_pit2
0002B206 <AmiBlitz3.ab3@13357>   NEG.w D1
0002B20C <AmiBlitz3.ab3@13358>   ADD.w D1,globalvarpointer
0002B214 <AmiBlitz3.ab3@13359>   MOVE.w globalvarpointer,$4(A3)
0002B216 <AmiBlitz3.ab3@13360>  RTS
0002B21E <AmiBlitz3.ab3@13363>   MOVE.w globalvarpointer,$4(A3)
0002B224 <AmiBlitz3.ab3@13364>   ADD.w D1,globalvarpointer
0002B226 <AmiBlitz3.ab3@13365> RTS
0002B22A <AmiBlitz3.ab3@13370>    BSR.w getparameter2
0002B230 <AmiBlitz3.ab3@13371>   LEA newtypebase,A2
0002B234 <AmiBlitz3.ab3@13372>    BSR.w findtype
0002B238 <AmiBlitz3.ab3@13373>    BNE.w notypeerr
0002B23E <AmiBlitz3.ab3@13376>   CMPA.l #newtype_byte,A2
0002B242 <AmiBlitz3.ab3@13377>    BEQ.w 'byte
0002B248 <AmiBlitz3.ab3@13378>   MOVE.w varmode,D1
0002B24C <AmiBlitz3.ab3@13379>    BNE.w 'pit
0002B252 <AmiBlitz3.ab3@13380>   ADDQ.w #1,globalvarpointer
0002B25A <AmiBlitz3.ab3@13383>   BCLR #$0,globalvarpointer+1
0002B25E <AmiBlitz3.ab3@13386>   MOVE.l A2,$A(A3)              ;set type
0002B266 <AmiBlitz3.ab3@13387>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002B268 <AmiBlitz3.ab3@13389>   MOVEQ.l #$04,D1
0002B270 <AmiBlitz3.ab3@13390>   BTST #$0,flagmask+1
0002B274 <AmiBlitz3.ab3@13391>    BNE.w 'skip3
0002B27C <AmiBlitz3.ab3@13392>   BTST #$1,flagmask+1
0002B280 <AmiBlitz3.ab3@13393>    BNE.w 'skip3
0002B288 <AmiBlitz3.ab3@13394>   CMPI.l #$100,$4(A2)
0002B28C <AmiBlitz3.ab3@13395>    BCC.w 'skip3
0002B290 <AmiBlitz3.ab3@13396>   MOVE.w $8(A2),D1
0002B296 <AmiBlitz3.ab3@13399>   TST.w varmode
0002B29A <AmiBlitz3.ab3@13400> BRA.w fvaradd_pit2
0002B2A0 <AmiBlitz3.ab3@13410>   LEA firstglob,A2
0002B2A4 <AmiBlitz3.ab3@13411>    BSR.w findvariable2
0002B2A8 <AmiBlitz3.ab3@13414>   BNE.w 'hendrix
0002B2AE <AmiBlitz3.ab3@13415>   MOVE.b flagmask+1,D1
0002B2B2 <AmiBlitz3.ab3@13416>   MOVE.b $7(A2),D3
0002B2B4 <AmiBlitz3.ab3@13417>   EOR.b D3,D1
0002B2B8 <AmiBlitz3.ab3@13418>    BEQ.w fvarfound
0002B2BC <AmiBlitz3.ab3@13419>    BSR.w findlab
0002B2C0 <AmiBlitz3.ab3@13420>  BRA.w 'more
0002B2C8 <AmiBlitz3.ab3@13423>   MOVE.w #$FFFF,varmode           ; was -1
0002B2CE <AmiBlitz3.ab3@13424>   MOVE.w globalvarpointer,-(A7)
0002B2D8 <AmiBlitz3.ab3@13425>   MOVE.w locvaroff,globalvarpointer
0002B2DE <AmiBlitz3.ab3@13426>   LEA firstlocal,A2
0002B2E6 <AmiBlitz3.ab3@13428>   MOVE.b #1,newvariable
0002B2EA <AmiBlitz3.ab3@13430>    BSR.w fvarback
0002B2F0 <AmiBlitz3.ab3@13432>   CLR.b newvariable
0002B2FA <AmiBlitz3.ab3@13434>   MOVE.w globalvarpointer,locvaroff
0002B300 <AmiBlitz3.ab3@13435>   MOVE.w (A7)+,globalvarpointer
0002B302 <AmiBlitz3.ab3@13436> RTS
0002B304 <AmiBlitz3.ab3@13440>   MOVEA.l A2,A3
0002B308 <AmiBlitz3.ab3@13444>   CMP.w #$2E,D0         ;'.'
0002B30C <AmiBlitz3.ab3@13445>    BEQ.w 'skipsh
0002B310 <AmiBlitz3.ab3@13446>   CMP.w #$24,D0         ;'$'
0002B314 <AmiBlitz3.ab3@13447>    BNE.w 'skip4
0002B31C <AmiBlitz3.ab3@13448>   CMPI.l #newtype_string,$A(A3)
0002B320 <AmiBlitz3.ab3@13449>    BNE.w rongtypeerr
0002B324 <AmiBlitz3.ab3@13450>    BSR.w get1bytemain
0002B328 <AmiBlitz3.ab3@13451>  BRA.w 'skip4
0002B32C <AmiBlitz3.ab3@13454>    BSR.w getparameter2
0002B332 <AmiBlitz3.ab3@13455>   LEA newtypebase,A2
0002B336 <AmiBlitz3.ab3@13456>    BSR.w findtype
0002B33A <AmiBlitz3.ab3@13457>    BNE.w notypeerr
0002B33E <AmiBlitz3.ab3@13458>   CMPA.l $A(A3),A2
0002B342 <AmiBlitz3.ab3@13459>    BNE.w rongtypeerr
0002B34A <AmiBlitz3.ab3@13462>   BTST #$0,flagmask+1
0002B34E <AmiBlitz3.ab3@13463>    BEQ.w 'skipz
0002B354 <AmiBlitz3.ab3@13465>   BTST #$0,$7(A3)
0002B358 <AmiBlitz3.ab3@13466>    BEQ.w pointerr
0002B35C <AmiBlitz3.ab3@13469>   MOVEA.l $A(A3),A2
0002B35E <AmiBlitz3.ab3@13470> RTS
0002B360 <AmiBlitz3.ab3@13474>    TST.l D3                                                ;newtype >32kb  .w to .l
0002B364 <AmiBlitz3.ab3@13475>    BEQ.w 'done2a
0002B36E <AmiBlitz3.ab3@13477>    MOVE.l destpointer,loada
0002B372 <AmiBlitz3.ab3@13480>  BRA 'done3a
0002B376 <AmiBlitz3.ab3@13483>   CMP.w #$9,D3                                             ;_addq_arrays
0002B37A <AmiBlitz3.ab3@13484>    BCC.w 'done3a
0002B380 <AmiBlitz3.ab3@13486>   MOVE.w d3,arrayoffset
0002B384 <AmiBlitz3.ab3@13488>   ANDI.w #$7,D3
0002B386 <AmiBlitz3.ab3@13489>   LSL.w #8,D3
0002B388 <AmiBlitz3.ab3@13490>   LSL.w #1,D3
0002B390 <AmiBlitz3.ab3@13491>   ANDI.w #$F1FF,addqa0
0002B396 <AmiBlitz3.ab3@13492>   OR.w D3,addqa0
0002B39C <AmiBlitz3.ab3@13493>   MOVE.w addqa0,D1
0002B3A0 <AmiBlitz3.ab3@13494>  BRA.w writeword
0002B3A6 <AmiBlitz3.ab3@13498>   CMP.l #$7fff,d3                                          ;>32kb newtypes
0002B3AA <AmiBlitz3.ab3@13499>   BGT longoffset
0002B3B0 <AmiBlitz3.ab3@13501>   MOVE.w D3,leaa0a0+2
0002B3B6 <AmiBlitz3.ab3@13503>   MOVE.w d3,arrayoffset
0002B3BC <AmiBlitz3.ab3@13505>   MOVE.l leaa0a0,D1
0002B3C0 <AmiBlitz3.ab3@13506>   BSR.w writelong
0002B3C2 <AmiBlitz3.ab3@13509> RTS
0002B3C6 <AmiBlitz3.ab3@13513>    MOVE.w #$d5fc,d1
0002B3CA <AmiBlitz3.ab3@13514>    BSR writeword
0002B3CC <AmiBlitz3.ab3@13515>    MOVE.l d3,d1
0002B3D0 <AmiBlitz3.ab3@13516>    BSR.w writelong
0002B3D2 <AmiBlitz3.ab3@13517> RTS
0002B3D6 <AmiBlitz3.ab3@13521>   Dc.w $b0ad,0000                                          ;cmp.l $0(A5),D0    ;nooptimize
0002B3DA <AmiBlitz3.ab3@13524>    BCS.w arrchk3                                           
0002B3E0 <AmiBlitz3.ab3@13525>    JSR $20000                                              ;jsr 0
0002B3E6 <AmiBlitz3.ab3@13536>   TST.b fast
0002B3EA <AmiBlitz3.ab3@13537>   BEQ 'l1
0002B3EC <AmiBlitz3.ab3@13538>    MOVEQ #0,d1                                             ;faster arrays
0002B3F2 <AmiBlitz3.ab3@13539>    MOVE.w regnum,d2
0002B3F4 <AmiBlitz3.ab3@13540>    MOVE.w d2,d1
0002B3F6 <AmiBlitz3.ab3@13541>    LSL.w #8,d1
0002B3F8 <AmiBlitz3.ab3@13542>    LSL.w #4,d1
0002B3FA <AmiBlitz3.ab3@13543>    ADD.w d2,d1
0002B400 <AmiBlitz3.ab3@13544>    OR.l #$4c2d0000,d1
0002B406 <AmiBlitz3.ab3@13545>    TST.w varmode
0002B40A <AmiBlitz3.ab3@13546>    BEQ 'l1a
0002B40E <AmiBlitz3.ab3@13547>    BCLR #16,d1
0002B412 <AmiBlitz3.ab3@13550>    BSR writelong
0002B416 <AmiBlitz3.ab3@13551>    MOVE.w $4(A7),D1
0002B41A <AmiBlitz3.ab3@13552>    BSR.w writeword
0002B420 <AmiBlitz3.ab3@13553>    MOVE.w regnum,D1
0002B422 <AmiBlitz3.ab3@13554>   SUBQ.w #1,D1
0002B424 <AmiBlitz3.ab3@13555>   LSL.w #8,D1
0002B426 <AmiBlitz3.ab3@13556>   LSL.w #1,D1
0002B42A <AmiBlitz3.ab3@13557>   ORI.w #$D080,D1
0002B430 <AmiBlitz3.ab3@13558>   OR.w regnum,D1
0002B434 <AmiBlitz3.ab3@13559>    BSR.w writeword
0002B436 <AmiBlitz3.ab3@13560>  RTS
0002B43C <AmiBlitz3.ab3@13564>   MOVE.w regnum,D2
0002B440 <AmiBlitz3.ab3@13566>   MOVE.w arrmul1(PC),D1
0002B442 <AmiBlitz3.ab3@13567>   OR.w D2,D1
0002B444 <AmiBlitz3.ab3@13568>   SUBQ.w #1,D1
0002B448 <AmiBlitz3.ab3@13569>    BSR.w writeword
0002B44C <AmiBlitz3.ab3@13570>   MOVE.w arrmul2(PC),D1
0002B44E <AmiBlitz3.ab3@13571>   OR.w D2,D1
0002B450 <AmiBlitz3.ab3@13572>   MOVE.w D2,D3
0002B452 <AmiBlitz3.ab3@13573>   SUBQ.w #1,D3
0002B454 <AmiBlitz3.ab3@13574>   LSL.w #8,D3
0002B456 <AmiBlitz3.ab3@13575>   LSL.w #1,D3
0002B458 <AmiBlitz3.ab3@13576>   OR.w D3,D1
0002B45C <AmiBlitz3.ab3@13577>    BSR.w writeword
0002B460 <AmiBlitz3.ab3@13578>   MOVE.w arrmul3(PC),D1
0002B462 <AmiBlitz3.ab3@13579>   MOVE.w D2,D3
0002B464 <AmiBlitz3.ab3@13580>   LSL.w #8,D3
0002B466 <AmiBlitz3.ab3@13581>   LSL.w #1,D3
0002B468 <AmiBlitz3.ab3@13582>   OR.w D3,D1
0002B46C <AmiBlitz3.ab3@13583>    BSR.w pokewda5s
0002B470 <AmiBlitz3.ab3@13584>   MOVE.w $4(A7),D1         ; was 4+0
0002B472 <AmiBlitz3.ab3@13585>   ADDQ.w #2,D1
0002B476 <AmiBlitz3.ab3@13586>    BSR.w writeword
0002B47A <AmiBlitz3.ab3@13588>   MOVE.w arrmul4(PC),D1
0002B47C <AmiBlitz3.ab3@13589>   MOVE.w D2,D3
0002B47E <AmiBlitz3.ab3@13590>   SUBQ.w #1,D3
0002B480 <AmiBlitz3.ab3@13591>   LSL.w #8,D3
0002B482 <AmiBlitz3.ab3@13592>   LSL.w #1,D3
0002B484 <AmiBlitz3.ab3@13593>   OR.w D3,D1
0002B488 <AmiBlitz3.ab3@13594>    BSR.w pokewda5s
0002B48C <AmiBlitz3.ab3@13595>   MOVE.w $4(A7),D1       ; was 4+0
0002B490 <AmiBlitz3.ab3@13596>    BSR.w writeword
0002B494 <AmiBlitz3.ab3@13598>   MOVE.w arrmul5(PC),D1
0002B496 <AmiBlitz3.ab3@13599>   OR.w D2,D1
0002B498 <AmiBlitz3.ab3@13600>   SUBQ.w #1,D1
0002B49C <AmiBlitz3.ab3@13601>    BSR.w writeword
0002B4A0 <AmiBlitz3.ab3@13602>   MOVE.w arrmul6(PC),D1
0002B4A2 <AmiBlitz3.ab3@13603>   OR.w D2,D1
0002B4A4 <AmiBlitz3.ab3@13604>   SUBQ.w #1,D1
0002B4A8 <AmiBlitz3.ab3@13605>    BSR.w writeword
0002B4AC <AmiBlitz3.ab3@13606>   MOVE.w arrmul7(PC),D1
0002B4AE <AmiBlitz3.ab3@13607>   OR.w D2,D1
0002B4B0 <AmiBlitz3.ab3@13608>   SUBQ.w #1,D1
0002B4B2 <AmiBlitz3.ab3@13609>   MOVE.w D2,D3
0002B4B4 <AmiBlitz3.ab3@13610>   LSL.w #8,D3
0002B4B6 <AmiBlitz3.ab3@13611>   LSL.w #1,D3
0002B4B8 <AmiBlitz3.ab3@13612>   OR.w D3,D1
0002B4BC <AmiBlitz3.ab3@13613>    BSR.w writeword
0002B4C0 <AmiBlitz3.ab3@13614>   MOVE.w arrmul8(PC),D1
0002B4C2 <AmiBlitz3.ab3@13615>   MOVE.w D2,D3
0002B4C4 <AmiBlitz3.ab3@13616>   SUBQ.w #1,D3
0002B4C6 <AmiBlitz3.ab3@13617>   LSL.w #8,D3
0002B4C8 <AmiBlitz3.ab3@13618>   LSL.w #1,D3
0002B4CA <AmiBlitz3.ab3@13619>   OR.w D3,D1
0002B4CE <AmiBlitz3.ab3@13620>    BSR.w writeword
0002B4D4 <AmiBlitz3.ab3@13622>   MOVE.w regnum,D1
0002B4D6 <AmiBlitz3.ab3@13623>   SUBQ.w #1,D1
0002B4D8 <AmiBlitz3.ab3@13624>   LSL.w #8,D1
0002B4DA <AmiBlitz3.ab3@13625>   LSL.w #1,D1
0002B4DE <AmiBlitz3.ab3@13626>   ORI.w #$D080,D1
0002B4E4 <AmiBlitz3.ab3@13627>   OR.w regnum,D1
0002B4E8 <AmiBlitz3.ab3@13628> BRA.w writeword
0002B4EA <AmiBlitz3.ab3@13636> arrmul1:   MOVE.l d0,-(a7)                                ;write array access
0002B4EC <AmiBlitz3.ab3@13637> arrmul2:   MOVE  d0,d0
0002B4F0 <AmiBlitz3.ab3@13638> arrmul3:   MULU 0(a5),d0                                  ;mulu   x+2(a5),d1  ;lo*lo
0002B4F4 <AmiBlitz3.ab3@13639> arrmul4:   MULU 0(a5),d0                                  ;mulu   x(a5),d0    ;hi*lo
0002B4F6 <AmiBlitz3.ab3@13641> arrmul5:   SWAP d0
0002B4F8 <AmiBlitz3.ab3@13642> arrmul6:   CLR d0
0002B4FA <AmiBlitz3.ab3@13643> arrmul7:   ADD.l d0,d0
0002B4FC <AmiBlitz3.ab3@13644> arrmul8:   MOVE.l (a7)+,d0
0002B500 <AmiBlitz3.ab3@13649> listcode1:  Dc.b $24,$6D :              Dc.b $00,$00       ;MOVEA.L $0000(A5),A2      ;pointer to start of array data
0002B504 <AmiBlitz3.ab3@13650> listcode2:  Dc.b $24,$6A,$FF,$E0                           ;MOVEA.L -$0020(A2),A2     ;pointer to current
0002B506 <AmiBlitz3.ab3@13651> listarfix:  Dc.b $50,$4A                                   ;ADDQ.W  #8,A2
0002B50C <AmiBlitz3.ab3@13669>   CLR.l lastoffset_org
0002B512 <AmiBlitz3.ab3@13670>   BTST #$1,$7(A3)
0002B516 <AmiBlitz3.ab3@13671>    BEQ.w 'notarr
0002B51C <AmiBlitz3.ab3@13672>   MOVE.w notshared,D1
0002B520 <AmiBlitz3.ab3@13673>    BNE.w noarrerr
0002B524 <AmiBlitz3.ab3@13674>    BSR.w get1bytemain
0002B528 <AmiBlitz3.ab3@13675>   CMP.w #$29,D0
0002B52C <AmiBlitz3.ab3@13676>    BNE.w 'notalist
0002B532 <AmiBlitz3.ab3@13677>   BTST #$0,$6(A3)
0002B536 <AmiBlitz3.ab3@13678>    BEQ.w nolisterr
0002B53E <AmiBlitz3.ab3@13679>   MOVE.w $4(A3),listcode1+2
0002B542 <AmiBlitz3.ab3@13680>   MOVE.l listcode1(PC),D1
0002B546 <AmiBlitz3.ab3@13681>    BSR.w pokela5s
0002B54A <AmiBlitz3.ab3@13682>   MOVE.l listcode2(PC),D1
0002B54E <AmiBlitz3.ab3@13683>    BSR.w writelong
0002B554 <AmiBlitz3.ab3@13684>   TST.b debugmode
0002B558 <AmiBlitz3.ab3@13685>    BEQ.w 'nolrerr
0002B55A <AmiBlitz3.ab3@13689>   MOVE.l A2,-(A7)
0002B55E <AmiBlitz3.ab3@13690>   MOVE.w #$C315,D1
0002B562 <AmiBlitz3.ab3@13691>    BSR.w Atokejsr
0002B564 <AmiBlitz3.ab3@13692>   MOVEA.l (A7)+,A2
0002B568 <AmiBlitz3.ab3@13695>    MOVE.w listarfix(PC),D1                                 ;addq #8,a2
0002B56C <AmiBlitz3.ab3@13697>    BSR.w writeword
0002B570 <AmiBlitz3.ab3@13698>  BRA.w 'normalar
0002B572 <AmiBlitz3.ab3@13701>  'listoff:   Ds.w 1
0002B578 <AmiBlitz3.ab3@13704>   CLR.w 'listoff
0002B57E <AmiBlitz3.ab3@13705>   BTST #$0,$6(A3)
0002B582 <AmiBlitz3.ab3@13706>    BEQ.w 'knop
0002B58A <AmiBlitz3.ab3@13707>   MOVE.w #$0008,'listoff                            ;adjust size of one element if list.
0002B58E <AmiBlitz3.ab3@13710>   MOVEM.l A2-A3,-(A7)
0002B594 <AmiBlitz3.ab3@13711>   MOVE.w varmode,-(A7)
0002B598 <AmiBlitz3.ab3@13712>   MOVE.w $8(A3),-(A7)                                       ;number of dims
0002B59C <AmiBlitz3.ab3@13713>   MOVE.w $4(A3),-(A7)                                       ;varoff
0002B59E <AmiBlitz3.ab3@13714>   MOVE.l A2,-(A7)
0002B5A4 <AmiBlitz3.ab3@13715>   MOVE.w flagmask,-(A7)
0002B5AE <AmiBlitz3.ab3@13717>   MOVE.w oldqflag,instringon
0002B5B4 <AmiBlitz3.ab3@13718>   MOVEA.l lastsourcepos,A5
0002B5B8 <AmiBlitz3.ab3@13719>    BSR.w arreval
0002B5BE <AmiBlitz3.ab3@13720>   MOVE.w (A7)+,flagmask
0002B5C6 <AmiBlitz3.ab3@13721>   MOVE.w $8(A7),varmode
0002B5CC <AmiBlitz3.ab3@13722>   TST.b debugmode
0002B5D0 <AmiBlitz3.ab3@13723>    BEQ.w 'noszchk
0002B5D2 <AmiBlitz3.ab3@13727>   MOVEA.l (A7)+,A2
0002B5D4 <AmiBlitz3.ab3@13728>   MOVEQ.l #$04,D1
0002B5DC <AmiBlitz3.ab3@13729>   BTST #$0,flagmask+1                                      ;pointer?
0002B5E0 <AmiBlitz3.ab3@13730>    BNE.b 'domul                                          ;yes, then use 4 byte mul...
0002B5E4 <AmiBlitz3.ab3@13731>   MOVE.w $8(A2),D1
0002B5E8 <AmiBlitz3.ab3@13734>   ADD.w 'listoff(PC),D1
0002B5EC <AmiBlitz3.ab3@13735>   BSR.w muld1
0002B5F2 <AmiBlitz3.ab3@13736>   ADDQ.w #1,regnum
0002B5F4 <AmiBlitz3.ab3@13739>   ADDQ.w #4,(A7)
0002B5F8 <AmiBlitz3.ab3@13740>   TST.w $4(A7)
0002B5FC <AmiBlitz3.ab3@13741>    BEQ.w 'isglob
0002B5FE <AmiBlitz3.ab3@13742>   SUBQ.w #8,(A7)                                           ;range check local array
0002B604 <AmiBlitz3.ab3@13745>   TST.b debugmode
0002B608 <AmiBlitz3.ab3@13746>    BEQ.w 'noer1
0002B60E <AmiBlitz3.ab3@13747>   MOVE.w regnum,D1
0002B610 <AmiBlitz3.ab3@13748>   SUBQ.w #1,D1
0002B612 <AmiBlitz3.ab3@13749>   LSL.w #8,D1
0002B614 <AmiBlitz3.ab3@13750>   LSL.w #1,D1
0002B618 <AmiBlitz3.ab3@13751>   OR.w zarrchk(PC),D1
0002B61C <AmiBlitz3.ab3@13752>    BSR.w pokewda5s                                         ;cmp.l x(a5),D regat
0002B61E <AmiBlitz3.ab3@13753>   MOVE.w (A7),D1
0002B622 <AmiBlitz3.ab3@13754>    BSR.w writeword
0002B626 <AmiBlitz3.ab3@13755>   MOVE.l arrchk2(PC),D1
0002B62A <AmiBlitz3.ab3@13756>    BSR.w writelong
0002B62E <AmiBlitz3.ab3@13757>   MOVE.w #$C309,D1
0002B632 <AmiBlitz3.ab3@13758>    BSR.w Atokejsr
0002B636 <AmiBlitz3.ab3@13761>   SUBQ.w #1,$2(A7)
0002B63A <AmiBlitz3.ab3@13762>    BEQ.w 'ardone
0002B63E <AmiBlitz3.ab3@13763>   CMP.w #$2C,D0
0002B642 <AmiBlitz3.ab3@13764>    BNE.w syntaxerr
0002B648 <AmiBlitz3.ab3@13765>    TST.b fast
0002B64C <AmiBlitz3.ab3@13766>    BNE 'l1
0002B650 <AmiBlitz3.ab3@13767>    BSR.w arrevalchk
0002B654 <AmiBlitz3.ab3@13768>  BRA 'l2
0002B658 <AmiBlitz3.ab3@13771>   BSR arreval
0002B660 <AmiBlitz3.ab3@13774>   MOVE.w $4(A7),varmode
0002B664 <AmiBlitz3.ab3@13775>   BSR.w makeamul
0002B668 <AmiBlitz3.ab3@13776>  BRA.w 'arloop
0002B66C <AmiBlitz3.ab3@13779>   CMP.w #$29,D0
0002B670 <AmiBlitz3.ab3@13780>    BNE.w syntaxerr
0002B676 <AmiBlitz3.ab3@13781>   SUBQ.w #1,regnum
0002B678 <AmiBlitz3.ab3@13782>   ADDQ.w #6,A7
0002B67C <AmiBlitz3.ab3@13783>   MOVEM.l (A7)+,A2-A3
0002B684 <AmiBlitz3.ab3@13784>   MOVE.w $4(A3),movea5a0+2
0002B68A <AmiBlitz3.ab3@13785>   MOVE.l movea5a0,D1
0002B68E <AmiBlitz3.ab3@13786>    BSR.w pokela5s
0002B694 <AmiBlitz3.ab3@13787>   MOVE.w regnum,D1
0002B698 <AmiBlitz3.ab3@13788>   ORI.w #$D5C0,D1                                          ;add.l Dr,a2
0002B69C <AmiBlitz3.ab3@13789>    BSR.w writeword
0002B6A2 <AmiBlitz3.ab3@13790>   BTST #$0,$6(A3)
0002B6A6 <AmiBlitz3.ab3@13791>    BEQ.w 'normalar
0002B6AA <AmiBlitz3.ab3@13795>   MOVE.w listarfix(PC),D1
0002B6AE <AmiBlitz3.ab3@13796>    BSR.w writeword
0002B6B2 <AmiBlitz3.ab3@13799>   BSR.w get1bytemain
0002B6B8 <AmiBlitz3.ab3@13803>   BTST #$0,$7(A3)
0002B6BC <AmiBlitz3.ab3@13804>    BEQ.w 'noppnt
0002B6C0 <AmiBlitz3.ab3@13805>   CMP.w #$5C,D0
0002B6C4 <AmiBlitz3.ab3@13806>    BNE.w 'pmskip
0002B6C8 <AmiBlitz3.ab3@13807>   MOVE.w 'pfix(PC),D1
0002B6CC <AmiBlitz3.ab3@13808>    BSR.w writeword
0002B6D0 <AmiBlitz3.ab3@13811>   MOVE.w #$8000,D2
0002B6D4 <AmiBlitz3.ab3@13812>  BRA.w 'loopml
0002B6D8 <AmiBlitz3.ab3@13815>   MOVE.w #$C000,D2
0002B6DC <AmiBlitz3.ab3@13816>  BRA.w 'loopml
0002B6DE <AmiBlitz3.ab3@13819>  'pfix:   Dc.b $24,$52                                   ;MOVEA.L (A2),A2
0002B6E2 <AmiBlitz3.ab3@13824>   CMP.w #$28,D0
0002B6E6 <AmiBlitz3.ab3@13825>    BEQ.w noarrerr
0002B6EE <AmiBlitz3.ab3@13826>   CMPI.l #$100,$4(A2)
0002B6F2 <AmiBlitz3.ab3@13827>    BCS.w 'simpvar
0002B6F8 <AmiBlitz3.ab3@13828>   BTST #$0,$7(A3)
0002B6FC <AmiBlitz3.ab3@13829>    BEQ.w 'notap
0002B700 <AmiBlitz3.ab3@13833>   CMP.w #$5C,D0
0002B704 <AmiBlitz3.ab3@13834>    BEQ.w 'notap
0002B706 <AmiBlitz3.ab3@13835>   MOVEQ.l #$00,D2
0002B70A <AmiBlitz3.ab3@13836>  BRA.w 'simpvar2
0002B70E <AmiBlitz3.ab3@13839>   MOVE.w #$8000,D2
0002B716 <AmiBlitz3.ab3@13840>   MOVE.w $4(A3),movea5a0+2
0002B71C <AmiBlitz3.ab3@13841>   MOVE.l movea5a0,D1
0002B720 <AmiBlitz3.ab3@13842>    BSR.w pokela5s                                         ;move.l x(a5),a2
0002B726 <AmiBlitz3.ab3@13844>    TST.b debugmode
0002B72A <AmiBlitz3.ab3@13845>    BEQ.w 'skip
0002B72E <AmiBlitz3.ab3@13846>    MOVE.w #$c320,D1
0002B734 <AmiBlitz3.ab3@13847>    JSR Atokejsr
0002B736 <AmiBlitz3.ab3@13851>   MOVEQ.l #$00,D3
0002B73A <AmiBlitz3.ab3@13854>   CMP.w #$5C,D0
0002B73E <AmiBlitz3.ab3@13855>    BNE.w 'done
0002B746 <AmiBlitz3.ab3@13856>   CMPI.l #$100,$4(A2)
0002B74A <AmiBlitz3.ab3@13857>    BCS.w rongtypeerr
0002B74C <AmiBlitz3.ab3@13858>   MOVE.w D2,-(A7)
0002B750 <AmiBlitz3.ab3@13859>    BSR.w getparameter2
0002B754 <AmiBlitz3.ab3@13860>    BEQ.w syntaxerr
0002B756 <AmiBlitz3.ab3@13861>   ADDQ.w #4,A2
0002B75A <AmiBlitz3.ab3@13862>    BSR.w findvariable2
0002B75E <AmiBlitz3.ab3@13863>    BNE.w noofferr
0002B760 <AmiBlitz3.ab3@13864>   MOVE.w (A7)+,D2
0002B762 <AmiBlitz3.ab3@13865>   MOVEA.l A2,A3                                             ;pointer to offset
0002B766 <AmiBlitz3.ab3@13866>   MOVEA.l $A(A3),A2                                         ;pointer to type
0002B768 <AmiBlitz3.ab3@13867>   MOVEQ #0,d1
0002B76C <AmiBlitz3.ab3@13868>   MOVE.w 4(a3),d1
0002B76E <AmiBlitz3.ab3@13869>   ADD.l d1,d3
0002B774 <AmiBlitz3.ab3@13871>   MOVE.l A3,lastoffset_org
0002B778 <AmiBlitz3.ab3@13872>   CMP.w #$5B,D0
0002B77C <AmiBlitz3.ab3@13873>    BNE.w 'realdone
0002B782 <AmiBlitz3.ab3@13874>   BTST #$1,$7(A3)                                           ;a array [] in newtype is found
0002B786 <AmiBlitz3.ab3@13875>    BEQ.w rongtypeerr
0002B78A <AmiBlitz3.ab3@13876>    BSR.w addd0a0
0002B78E <AmiBlitz3.ab3@13877>   MOVEM.l A2-A3,-(A7)
0002B794 <AmiBlitz3.ab3@13878>   MOVE.w varmode,-(A7)
0002B79A <AmiBlitz3.ab3@13879>   MOVE.l lastoffset_org,-(A7)
0002B7A0 <AmiBlitz3.ab3@13880>   MOVE.w pusha2,D1
0002B7A4 <AmiBlitz3.ab3@13881>   BSR.w writeword
0002B7A6 <AmiBlitz3.ab3@13882>   MOVEQ.l #$03,D2                                          ;was 2 >32kb types
0002B7B0 <AmiBlitz3.ab3@13883>   MOVE.l destpointer,deststore
0002B7B6 <AmiBlitz3.ab3@13884>   MOVE.l leftsidetype,-(a7)
0002B7BC <AmiBlitz3.ab3@13885>   MOVE.l rightsidetype,-(a7)
0002B7C2 <AmiBlitz3.ab3@13887>   MOVE.w leftsideflagmask,-(a7)
0002B7C8 <AmiBlitz3.ab3@13888>   MOVE.w rightsideflagmask,-(a7)
0002B7CE <AmiBlitz3.ab3@13889>   CLR.l rightsidetype
0002B7D4 <AmiBlitz3.ab3@13890>   CLR.l leftsidetype
0002B7DA <AmiBlitz3.ab3@13891>   CLR.w leftsideflagmask
0002B7E0 <AmiBlitz3.ab3@13892>   CLR.w rightsideflagmask
0002B7E4 <AmiBlitz3.ab3@13893>   BSR.w eval
0002B7EA <AmiBlitz3.ab3@13894>   MOVE.w (a7)+,rightsideflagmask
0002B7F0 <AmiBlitz3.ab3@13895>   MOVE.w (a7)+,leftsideflagmask
0002B7F6 <AmiBlitz3.ab3@13896>   MOVE.l (a7)+,rightsidetype
0002B7FC <AmiBlitz3.ab3@13897>   MOVE.l (a7)+,leftsidetype
0002B800 <AmiBlitz3.ab3@13898>   CMP.w #$5D,D0
0002B804 <AmiBlitz3.ab3@13899>    BNE.w syntaxerr
0002B80A <AmiBlitz3.ab3@13900>   TST.b fast                                               ;a2,-(a7) array
0002B80E <AmiBlitz3.ab3@13901>   BEQ 'loop0_l10
0002B814 <AmiBlitz3.ab3@13907>   MOVE.l destpointer,d1
0002B81A <AmiBlitz3.ab3@13908>   SUB.l deststore,d1
0002B820 <AmiBlitz3.ab3@13909>   CMP.l #4,d1
0002B824 <AmiBlitz3.ab3@13910>   BNE 'loop0_l10
0002B82A <AmiBlitz3.ab3@13911>   MOVE.l destpointer,a4
0002B830 <AmiBlitz3.ab3@13912>   MOVE.l -4(a4),-6(a4)
0002B836 <AmiBlitz3.ab3@13913>   SUBQ.l #2,destpointer
0002B83C <AmiBlitz3.ab3@13914>   CLR.l imm_addr
0002B842 <AmiBlitz3.ab3@13915>   CLR.l load_var_addr
0002B846 <AmiBlitz3.ab3@13916>  BRA 'loop0_l20
0002B84C <AmiBlitz3.ab3@13919>   MOVE.w pulla2,D1
0002B850 <AmiBlitz3.ab3@13920>    BSR.w writeword
0002B856 <AmiBlitz3.ab3@13923>   MOVE.l (A7)+,lastoffset_org
0002B85C <AmiBlitz3.ab3@13924>   MOVE.w (A7)+,varmode
0002B860 <AmiBlitz3.ab3@13925>   MOVEM.l (A7)+,A2-A3
0002B866 <AmiBlitz3.ab3@13931>   TST.w debugmode
0002B86A <AmiBlitz3.ab3@13932>    BEQ.b 'nobchk
0002B86E <AmiBlitz3.ab3@13933>   MOVE.w $8(A3),D1
0002B872 <AmiBlitz3.ab3@13934>    BEQ.b 'nobchk                                   ;no [0] checks!
0002B878 <AmiBlitz3.ab3@13938>   MOVE.w D1,brchkcode+2
0002B87E <AmiBlitz3.ab3@13939>   MOVE.w regnum,D1
0002B880 <AmiBlitz3.ab3@13940>   LSL.w #8,D1
0002B882 <AmiBlitz3.ab3@13941>   LSL.w #1,D1
0002B886 <AmiBlitz3.ab3@13942>   OR.w brchkcode0(PC),D1
0002B88C <AmiBlitz3.ab3@13943>   MOVE.w D1,brchkcode
0002B890 <AmiBlitz3.ab3@13944>   MOVE.l brchkcode(PC),D1
0002B894 <AmiBlitz3.ab3@13945>    BSR.w writelong
0002B898 <AmiBlitz3.ab3@13946>   MOVE.l brchkcode+4(PC),D1
0002B89C <AmiBlitz3.ab3@13947>    BSR.w writelong
0002B8A0 <AmiBlitz3.ab3@13948>   MOVE.w brchkcode+8(PC),D1
0002B8A4 <AmiBlitz3.ab3@13949>    BSR.w writeword
0002B8A6 <AmiBlitz3.ab3@13952>   MOVEQ.l #$04,D1
0002B8AC <AmiBlitz3.ab3@13953>   BTST #$0,$7(A3)
0002B8B0 <AmiBlitz3.ab3@13954>    BNE.w 'dothemul
0002B8B4 <AmiBlitz3.ab3@13955>   MOVE.w $8(A2),D1
0002B8B8 <AmiBlitz3.ab3@13958>   BSR.w muld1
0002B8BE <AmiBlitz3.ab3@13959>   MOVE.w addrega2,D1
0002B8C4 <AmiBlitz3.ab3@13960>   OR.w regnum,D1
0002B8C8 <AmiBlitz3.ab3@13961>    OR.w #$100,d1                                           ;>32kb types
0002B8CC <AmiBlitz3.ab3@13962>    BSR.w writeword
0002B8D0 <AmiBlitz3.ab3@13963>    BSR.w get1bytemain
0002B8D2 <AmiBlitz3.ab3@13964>   MOVEQ.l #$00,D3
0002B8D6 <AmiBlitz3.ab3@13965>   MOVE.w #$8000,D2
0002B8DC <AmiBlitz3.ab3@13968>   BTST #$0,$7(A3)
0002B8E0 <AmiBlitz3.ab3@13969>    BNE.w 'pointer
0002B8E4 <AmiBlitz3.ab3@13970>  BRA.w 'loop0
0002B8E8 <AmiBlitz3.ab3@13973>  CMP.w #$5C,D0
0002B8EC <AmiBlitz3.ab3@13974>    BNE.w 'done3
0002B8EE <AmiBlitz3.ab3@13975>   TST.w D3
0002B8F2 <AmiBlitz3.ab3@13976>    BNE.w 'pskip
0002B8F8 <AmiBlitz3.ab3@13977>   MOVE.w movea0,D1
0002B8FC <AmiBlitz3.ab3@13978>    BSR.w writeword
0002B900 <AmiBlitz3.ab3@13979>  BRA.w 'pmore
0002B906 <AmiBlitz3.ab3@13982>   MOVE.w D3,movea0a0+2
0002B90C <AmiBlitz3.ab3@13983>   MOVE.l movea0a0,D1
0002B910 <AmiBlitz3.ab3@13984>    BSR.w writelong
0002B916 <AmiBlitz3.ab3@13987>   BTST #$2,$7(A3)
0002B91A <AmiBlitz3.ab3@13988>    BEQ.w 'loopml
0002B920 <AmiBlitz3.ab3@13989>   MOVE.l adda0a0,D1
0002B924 <AmiBlitz3.ab3@13990>    BSR.w writelong
0002B928 <AmiBlitz3.ab3@13991>  BRA.w 'loopml
0002B92C <AmiBlitz3.ab3@13994>   BSET #$E,D2
0002B932 <AmiBlitz3.ab3@13995>   BTST #$2,$7(A3)
0002B936 <AmiBlitz3.ab3@13996>    BNE.w 'done
0002B93A <AmiBlitz3.ab3@13997>   BSET #$D,D2
0002B942 <AmiBlitz3.ab3@14000>   CMPI.l #$100,$4(A2)
0002B946 <AmiBlitz3.ab3@14001>    BCC.w 'done2
0002B94A <AmiBlitz3.ab3@14002>   MOVE.b $7(A2),D2
0002B94E <AmiBlitz3.ab3@14005>  BRA.w addd0a0
0002B952 <AmiBlitz3.ab3@14008>   MOVE.w $6(A2),D2
0002B956 <AmiBlitz3.ab3@14011>   MOVE.w $4(A3),D3
0002B95C <AmiBlitz3.ab3@14012>   BTST #$0,$7(A3)
0002B960 <AmiBlitz3.ab3@14013>    BEQ.w 'nopoint
0002B964 <AmiBlitz3.ab3@14014>   BSET #$E,D2
0002B966 <AmiBlitz3.ab3@14017> RTS
0002B96A <AmiBlitz3.ab3@14021> brchkcode0:  Dc.b $B0,$7C,$00,$00                          ;CMP.W   #$0000,D0
0002B96E <AmiBlitz3.ab3@14022> brchkcode:   Dc.b $B0,$7C :             Dc.b $00,$00       ;CMP.W   #$0000,D0
0002B970 <AmiBlitz3.ab3@14023>              Dc.b $65,$04                                  ;BCS.B   brchkcode_ok
0002B972 <AmiBlitz3.ab3@14024>              Dc.b $70,$02                                  ;MOVEQ   #$02,D0
0002B974 <AmiBlitz3.ab3@14025>              Dc.b $4E,$40                                  ;TRAP    #00
0002B97A <AmiBlitz3.ab3@14033>   TST.w varmode
0002B97E <AmiBlitz3.ab3@14034>    BEQ.w writeword
0002B982 <AmiBlitz3.ab3@14035>   BCLR #$0,D1
0002B986 <AmiBlitz3.ab3@14036> BRA.w writeword
0002B98C <AmiBlitz3.ab3@14039>   TST.w varmode
0002B990 <AmiBlitz3.ab3@14040>    BEQ.w writeword
0002B994 <AmiBlitz3.ab3@14041>   BCLR #$9,D1
0002B998 <AmiBlitz3.ab3@14042> BRA.w writeword
0002B99E <AmiBlitz3.ab3@14045>   TST.w proceduremode
0002B9A2 <AmiBlitz3.ab3@14046>    BEQ.w writelong
0002B9A6 <AmiBlitz3.ab3@14047>   BCLR #$19,D1
0002B9AA <AmiBlitz3.ab3@14048> BRA.w writelong
0002B9B0 <AmiBlitz3.ab3@14051>   TST.w varmode
0002B9B4 <AmiBlitz3.ab3@14052>   BEQ.w writelong
0002B9B8 <AmiBlitz3.ab3@14053>   BCLR #$10,D1
0002B9BE <AmiBlitz3.ab3@14061>   ADDQ.l #1,destpointer                                   ; this is a copy of the writewordcode
0002B9C6 <AmiBlitz3.ab3@14062>   BCLR #$0,destpointer+3
0002B9CC <AmiBlitz3.ab3@14063>   MOVEA.l destpointer,A4
0002B9D2 <AmiBlitz3.ab3@14064>   CMPA.l destbufferend,A4
0002B9D6 <AmiBlitz3.ab3@14065>    BCC.w 'overa
0002B9D8 <AmiBlitz3.ab3@14066>   MOVE.l D1,(A4)+
0002B9DE <AmiBlitz3.ab3@14069>   MOVE.l A4,destpointer
0002B9E2 <AmiBlitz3.ab3@14070>   CMPA.l bigpc(PC),A4
0002B9E6 <AmiBlitz3.ab3@14071>    BHI.w 'nbpa
0002B9E8 <AmiBlitz3.ab3@14072>  RTS
0002B9EE <AmiBlitz3.ab3@14075>   TST.w cfetchmode                                         ; to complete the subroutine
0002B9F2 <AmiBlitz3.ab3@14076>   BNE.w 'nbp2a                                             ;
0002B9F8 <AmiBlitz3.ab3@14077>   MOVE.l A4,bigpc                                          ;
0002B9FA <AmiBlitz3.ab3@14080>  RTS
0002BA02 <AmiBlitz3.ab3@14083>   MOVE.w #$FFFF,dontwrite_nomemleft                                  ;#-1 org source
0002BA08 <AmiBlitz3.ab3@14084>   CLR.b fast
0002BA0E <AmiBlitz3.ab3@14085>   CLR.b fpu
0002BA14 <AmiBlitz3.ab3@14086>   CLR.b iee                                                ; in writeword this is #2
0002BA16 <AmiBlitz3.ab3@14087>   ADDQ.w #4,A4
0002BA1A <AmiBlitz3.ab3@14088> BRA.w 'msa
0002BA20 <AmiBlitz3.ab3@14107>   ADDQ.l #1,destpointer
0002BA28 <AmiBlitz3.ab3@14108>   BCLR #$0,destpointer+3
0002BA2E <AmiBlitz3.ab3@14109>   MOVEA.l destpointer,A4
0002BA34 <AmiBlitz3.ab3@14110>   CMPA.l destbufferend,A4
0002BA38 <AmiBlitz3.ab3@14111>    BCC.w 'over
0002BA3A <AmiBlitz3.ab3@14112>   MOVE.w D1,(A4)+
0002BA40 <AmiBlitz3.ab3@14115>   MOVE.l A4,destpointer
0002BA44 <AmiBlitz3.ab3@14116>   CMPA.l bigpc(PC),A4
0002BA48 <AmiBlitz3.ab3@14117>    BHI.w 'nbp
0002BA4A <AmiBlitz3.ab3@14118>  RTS
0002BA50 <AmiBlitz3.ab3@14121>   TST.w cfetchmode
0002BA54 <AmiBlitz3.ab3@14122>   BNE.w 'nbp2
0002BA5A <AmiBlitz3.ab3@14123>   MOVE.l A4,bigpc
0002BA5C <AmiBlitz3.ab3@14126>  RTS
0002BA64 <AmiBlitz3.ab3@14129>   MOVE.w #$FFFF,dontwrite_nomemleft                                  ;#-1 org source
0002BA66 <AmiBlitz3.ab3@14130>   ADDQ.w #2,A4
0002BA6C <AmiBlitz3.ab3@14131>   CLR.b fast
0002BA72 <AmiBlitz3.ab3@14132>   CLR.b fpu
0002BA78 <AmiBlitz3.ab3@14133>   CLR.b iee
0002BA7C <AmiBlitz3.ab3@14134> BRA.w 'ms
0002BA82 <AmiBlitz3.ab3@14138>   MOVEA.l destpointer,A4
0002BA88 <AmiBlitz3.ab3@14139>   CMPA.l destbufferend,A4
0002BA8C <AmiBlitz3.ab3@14140>    BCC.w 'over
0002BA8E <AmiBlitz3.ab3@14141>   MOVE.b D1,(A4)+
0002BA94 <AmiBlitz3.ab3@14144>   MOVE.l A4,destpointer
0002BA98 <AmiBlitz3.ab3@14145>   CMPA.l bigpc(PC),A4
0002BA9C <AmiBlitz3.ab3@14146>    BHI.w 'nbp
0002BA9E <AmiBlitz3.ab3@14147>  RTS
0002BAA4 <AmiBlitz3.ab3@14150>   TST.w cfetchmode
0002BAA8 <AmiBlitz3.ab3@14151>    BNE.w 'nbp2
0002BAAE <AmiBlitz3.ab3@14152>   MOVE.l A4,bigpc
0002BAB0 <AmiBlitz3.ab3@14155>  RTS
0002BAB8 <AmiBlitz3.ab3@14158>   MOVE.w #-1,dontwrite_nomemleft
0002BABA <AmiBlitz3.ab3@14159>   ADDQ.w #1,A4
0002BAC0 <AmiBlitz3.ab3@14160>   CLR.b fast
0002BAC6 <AmiBlitz3.ab3@14161>   CLR.b fpu
0002BACC <AmiBlitz3.ab3@14162>   CLR.b iee
0002BAD0 <AmiBlitz3.ab3@14163> BRA.w 'ms
0002BAD4 <AmiBlitz3.ab3@14166> bigpc:   Ds.l 1
0002BAD6 <AmiBlitz3.ab3@14170>   MOVE.w (A0)+,D1
0002BADA <AmiBlitz3.ab3@14171>   BSR.w writeword
0002BADC <AmiBlitz3.ab3@14174>     CMPA.l A1,A0
0002BAE0 <AmiBlitz3.ab3@14175>     BCC.w 'done
0002BAE2 <AmiBlitz3.ab3@14176>       MOVE.w (A0)+,D1
0002BAE6 <AmiBlitz3.ab3@14177>       BSR.w writeword
0002BAEA <AmiBlitz3.ab3@14178>  BRA.w 'loop
0002BAEC <AmiBlitz3.ab3@14181> RTS
0002BAEE <AmiBlitz3.ab3@14185>   MOVE.w (A0)+,D1
0002BAF2 <AmiBlitz3.ab3@14186>   BSR.w writeword
0002BAF4 <AmiBlitz3.ab3@14187>   CMPA.l A1,A0
0002BAF8 <AmiBlitz3.ab3@14188>   BCS.w pokecode2
0002BAFA <AmiBlitz3.ab3@14189> RTS
0002BB00 <AmiBlitz3.ab3@14196>   TST.b iniffcommand
0002BB04 <AmiBlitz3.ab3@14197>   BEQ 'l1
0002BB08 <AmiBlitz3.ab3@14198>     MOVE.w #$4880,D1
0002BB0E <AmiBlitz3.ab3@14199>     OR.w regnum,D1
0002BB12 <AmiBlitz3.ab3@14200>     BSR writeword
0002BB14 <AmiBlitz3.ab3@14204> RTS
0002BB18 <AmiBlitz3.ab3@14210>   BSR.w convert_byte_to_word
0002BB1E <AmiBlitz3.ab3@14214>   TST.b iee
0002BB22 <AmiBlitz3.ab3@14215>   BEQ 'old
0002BB26 <AmiBlitz3.ab3@14216>   CMP.b #5,d2
0002BB2A <AmiBlitz3.ab3@14217>   BEQ wtof
0002BB2E <AmiBlitz3.ab3@14221>   MOVE.w #$48C0,D1
0002BB34 <AmiBlitz3.ab3@14222>   OR.w regnum,D1
0002BB38 <AmiBlitz3.ab3@14223> BRA.w writeword
0002BB3A <AmiBlitz3.ab3@14227>   MOVEQ #0,d0
0002BB40 <AmiBlitz3.ab3@14228>   MOVE.w regnum,d0
0002BB42 <AmiBlitz3.ab3@14229>   ASL.l #7,d0
0002BB48 <AmiBlitz3.ab3@14230>   MOVE.l #$f2005000,d1
0002BB4A <AmiBlitz3.ab3@14231>   OR.l d0,d1
0002BB4C <AmiBlitz3.ab3@14232>   ASL.l #1,d0
0002BB4E <AmiBlitz3.ab3@14233>   ASL.l #8,d0
0002BB50 <AmiBlitz3.ab3@14234>   OR.l d0,d1
0002BB54 <AmiBlitz3.ab3@14235> BRA writelong
0002BB58 <AmiBlitz3.ab3@14239>   BSR.w convert_byte_to_word
0002BB5C <AmiBlitz3.ab3@14242>   MOVE.w #$4840,D1
0002BB62 <AmiBlitz3.ab3@14243>   OR.w regnum,D1
0002BB66 <AmiBlitz3.ab3@14244>    BSR.w writeword
0002BB6A <AmiBlitz3.ab3@14245>   MOVE.w #$4240,D1
0002BB70 <AmiBlitz3.ab3@14246>   OR.w regnum,D1
0002BB74 <AmiBlitz3.ab3@14247> BRA.w writeword
0002BB78 <AmiBlitz3.ab3@14251>   CMP.w #$ffdc,d1
0002BB7C <AmiBlitz3.ab3@14252>   BNE 'negfpu
0002BB7E <AmiBlitz3.ab3@14253>   MOVEQ #0,d0
0002BB84 <AmiBlitz3.ab3@14254>   MOVE.w regnum,d0
0002BB86 <AmiBlitz3.ab3@14255>   ASL.l #7,d0
0002BB8C <AmiBlitz3.ab3@14256>   MOVE.l #$f2004000,d1
0002BB8E <AmiBlitz3.ab3@14257>   OR.l d0,d1
0002BB90 <AmiBlitz3.ab3@14258>   ASL.l #1,d0
0002BB92 <AmiBlitz3.ab3@14259>   ASL.l #8,d0
0002BB94 <AmiBlitz3.ab3@14260>   OR.l d0,d1
0002BB98 <AmiBlitz3.ab3@14261>  BRA writelong
0002BB9A <AmiBlitz3.ab3@14264>   MOVEQ #0,d1
0002BBA0 <AmiBlitz3.ab3@14265>   MOVE.w regnum,d1                                         ;fpu neg
0002BBA2 <AmiBlitz3.ab3@14266>   ASL.l #7,d1
0002BBA8 <AmiBlitz3.ab3@14267>   OR.l #$f200001a,d1
0002BBAA <AmiBlitz3.ab3@14268>   MOVE.l d0,-(a7)
0002BBAC <AmiBlitz3.ab3@14269>   MOVEQ #0,d0
0002BBB2 <AmiBlitz3.ab3@14270>   MOVE.w regnum,d0
0002BBB4 <AmiBlitz3.ab3@14271>   ASL.l #8,d0
0002BBB6 <AmiBlitz3.ab3@14272>   ASL.l #2,d0
0002BBB8 <AmiBlitz3.ab3@14273>   OR.l d0,d1
0002BBBA <AmiBlitz3.ab3@14274>   MOVE.l (a7)+,d0
0002BBBE <AmiBlitz3.ab3@14275> BRA writelong
0002BBC4 <AmiBlitz3.ab3@14281>    TST.b iee
0002BBC8 <AmiBlitz3.ab3@14282>    BNE wtof
0002BBCC <AmiBlitz3.ab3@14284>    BSR.w convert_byte_to_long
0002BBD0 <AmiBlitz3.ab3@14287>    MOVE.w #$FFDC,D1
0002BBD6 <AmiBlitz3.ab3@14291>    TST.b iee
0002BBDA <AmiBlitz3.ab3@14292>    BNE ltof
0002BBE0 <AmiBlitz3.ab3@14294>    MOVE.w D1,libjsr+2
0002BBE4 <AmiBlitz3.ab3@14295>    BSR.w savereg
0002BBE6 <AmiBlitz3.ab3@14296>   MOVE.l D4,D1
0002BBEA <AmiBlitz3.ab3@14297>    BSR.w pokemovem
0002BBEE <AmiBlitz3.ab3@14298>   MOVE.w #$C900,D1      ; #getffpbase,
0002BBF2 <AmiBlitz3.ab3@14299>    BSR.w Atokejsr
0002BBF6 <AmiBlitz3.ab3@14300>    BSR.w ritetod0
0002BBFC <AmiBlitz3.ab3@14301>   MOVE.l libjsr,D1
0002BC00 <AmiBlitz3.ab3@14302>    BSR.w writelong
0002BC04 <AmiBlitz3.ab3@14303>    BSR.w ritefromd0
0002BC06 <AmiBlitz3.ab3@14304>   MOVE.l D5,D1
0002BC0A <AmiBlitz3.ab3@14305> BRA.w pokemovem
0002BC0C <AmiBlitz3.ab3@14307> RTS ; dead old code
0002BC10 <AmiBlitz3.ab3@14310>   MOVE.w #$C317,D1     ;#wtobover
0002BC16 <AmiBlitz3.ab3@14312>   TST.b typecheck
0002BC1A <AmiBlitz3.ab3@14313>   BEQ 'l1
0002BC20 <AmiBlitz3.ab3@14314>    TST.b notypecheck
0002BC24 <AmiBlitz3.ab3@14315>    BNE 'l1
0002BC2A <AmiBlitz3.ab3@14316>    TST.l lasttoken
0002BC30 <AmiBlitz3.ab3@14326>   TST.b debugmode
0002BC34 <AmiBlitz3.ab3@14327>    BEQ.w 'skip
0002BC3C <AmiBlitz3.ab3@14328>   BTST #$7,overflowcheck      ;;*** was 7! overflow checking?
0002BC40 <AmiBlitz3.ab3@14329>    BEQ.w 'skip
0002BC46 <AmiBlitz3.ab3@14331>   TST.w cfetchmode
0002BC4A <AmiBlitz3.ab3@14332>    BNE.w 'skip
0002BC50 <AmiBlitz3.ab3@14334>   TST.w regnum
0002BC54 <AmiBlitz3.ab3@14335>    BEQ.w 'isok
0002BC56 <AmiBlitz3.ab3@14336>   MOVE.w D1,-(A7)
0002BC5A <AmiBlitz3.ab3@14337>   MOVE.w 'code1(PC),D1
0002BC5E <AmiBlitz3.ab3@14338>    BSR.w writeword
0002BC64 <AmiBlitz3.ab3@14339>   MOVE.w regnum,D1
0002BC68 <AmiBlitz3.ab3@14340>   OR.w 'code3(PC),D1
0002BC6C <AmiBlitz3.ab3@14341>    BSR.w writeword
0002BC6E <AmiBlitz3.ab3@14342>   MOVE.w (A7)+,D1
0002BC72 <AmiBlitz3.ab3@14343>    BSR.w 'isok
0002BC76 <AmiBlitz3.ab3@14344>   MOVE.w 'code2(PC),D1
0002BC7A <AmiBlitz3.ab3@14345>  BRA.w writeword
0002BC7E <AmiBlitz3.ab3@14348>   MOVEM.l D0-D7/A0-A6,-(A7)
0002BC82 <AmiBlitz3.ab3@14349>    BSR.w Atokejsr
0002BC86 <AmiBlitz3.ab3@14350>   MOVEM.l (A7)+,D0-D7/A0-A6
0002BC88 <AmiBlitz3.ab3@14353>  RTS
0002BC8A <AmiBlitz3.ab3@14356>   MOVE.l D0,-(A7)
0002BC8C <AmiBlitz3.ab3@14359>   MOVE.l (A7)+,D0
0002BC8E <AmiBlitz3.ab3@14362>   MOVE.l D0,D0
0002BC92 <AmiBlitz3.ab3@14367>   BSR.w convert_word_to_long
0002BC98 <AmiBlitz3.ab3@14369>   TST.b iee
0002BC9C <AmiBlitz3.ab3@14370>   BEQ 'old
0002BCA0 <AmiBlitz3.ab3@14371>   CMP.b #5,d2
0002BCA4 <AmiBlitz3.ab3@14372>   BNE 'old
0002BCA6 <AmiBlitz3.ab3@14373>  RTS
0002BCAA <AmiBlitz3.ab3@14377> BRA.w bytetof2
0002BCAE <AmiBlitz3.ab3@14380>   MOVE.w #$C316,D1      ; #ltobover
0002BCB4 <AmiBlitz3.ab3@14382>   TST.b typecheck
0002BCB8 <AmiBlitz3.ab3@14383>   BEQ 'l1
0002BCBE <AmiBlitz3.ab3@14384>   TST.b peekaddrsize
0002BCC2 <AmiBlitz3.ab3@14385>   BNE 'l1
0002BCC8 <AmiBlitz3.ab3@14386>   TST.b notypecheck
0002BCCC <AmiBlitz3.ab3@14387>   BNE 'l1
0002BCD2 <AmiBlitz3.ab3@14388>   TST.l lasttoken
0002BCD6 <AmiBlitz3.ab3@14395> BRA.w overchk
0002BCDA <AmiBlitz3.ab3@14398>   MOVE.w #$C318,D1      ; #ltowover,
0002BCE0 <AmiBlitz3.ab3@14400>   TST.b typecheck
0002BCE4 <AmiBlitz3.ab3@14401>   BEQ 'l1
0002BCEA <AmiBlitz3.ab3@14402>   TST.b peekaddrsize
0002BCEE <AmiBlitz3.ab3@14403>   BNE 'l1
0002BCF4 <AmiBlitz3.ab3@14404>   TST.b notypecheck
0002BCF8 <AmiBlitz3.ab3@14405>   BNE 'l1
0002BCFE <AmiBlitz3.ab3@14406>   TST.l lasttoken
0002BD02 <AmiBlitz3.ab3@14413> BRA.w overchk
0002BD06 <AmiBlitz3.ab3@14416>   MOVE.w #$C318,D1      ;#ltowover,
0002BD0C <AmiBlitz3.ab3@14418>   TST.b typecheck
0002BD10 <AmiBlitz3.ab3@14419>   BEQ 'l1
0002BD16 <AmiBlitz3.ab3@14420>   TST.b notypecheck
0002BD1A <AmiBlitz3.ab3@14421>   BNE 'l1
0002BD20 <AmiBlitz3.ab3@14422>   TST.l lasttoken
0002BD24 <AmiBlitz3.ab3@14429>   BSR.w overchk
0002BD28 <AmiBlitz3.ab3@14430> BRA.w convert_word_to_quick
0002BD2C <AmiBlitz3.ab3@14433> BRA.w bytetof2
0002BD2E <AmiBlitz3.ab3@14435> RTS ; dead old code
0002BD32 <AmiBlitz3.ab3@14438>   MOVE.w #$C319,D1         ; #qtobover,
0002BD38 <AmiBlitz3.ab3@14440>   TST.b typecheck
0002BD3C <AmiBlitz3.ab3@14441>   BEQ 'l1
0002BD42 <AmiBlitz3.ab3@14442>   TST.b notypecheck
0002BD46 <AmiBlitz3.ab3@14443>   BNE 'l1
0002BD4C <AmiBlitz3.ab3@14444>   TST.l lasttoken
0002BD50 <AmiBlitz3.ab3@14451>   BSR.w overchk
0002BD54 <AmiBlitz3.ab3@14454>   MOVE.w #$4240,D1
0002BD5A <AmiBlitz3.ab3@14455>   OR.w regnum,D1
0002BD5E <AmiBlitz3.ab3@14456>   BSR.w writeword
0002BD62 <AmiBlitz3.ab3@14457>   MOVE.w #$4840,D1
0002BD68 <AmiBlitz3.ab3@14458>   OR.w regnum,D1
0002BD6C <AmiBlitz3.ab3@14459> BRA.w writeword
0002BD70 <AmiBlitz3.ab3@14462> BRA.w quicktob2
0002BD74 <AmiBlitz3.ab3@14465>   BSR.w quicktob2
0002BD78 <AmiBlitz3.ab3@14466> BRA.w convert_word_to_long
0002BD7A <AmiBlitz3.ab3@14471>   MOVEQ #0,d0
0002BD80 <AmiBlitz3.ab3@14472>   MOVE.w regnum,d0
0002BD82 <AmiBlitz3.ab3@14473>   ASL.l #7,d0
0002BD88 <AmiBlitz3.ab3@14474>   MOVE.l #$f2004000,d1
0002BD8A <AmiBlitz3.ab3@14475>   OR.l d0,d1
0002BD8C <AmiBlitz3.ab3@14476>   ASL.l #1,d0
0002BD8E <AmiBlitz3.ab3@14477>   ASL.l #8,d0
0002BD90 <AmiBlitz3.ab3@14478>   OR.l d0,d1
0002BD94 <AmiBlitz3.ab3@14479>   BSR writelong
0002BD9A <AmiBlitz3.ab3@14480>   MOVE.w regnum,d0
0002BD9C <AmiBlitz3.ab3@14481>   ASL.l #7,d0
0002BDA2 <AmiBlitz3.ab3@14482>   MOVE.l #$f23c4423,d1                                     ;fmul.s #1/65536,fpreg
0002BDA4 <AmiBlitz3.ab3@14483>   OR.w d0,d1
0002BDA8 <AmiBlitz3.ab3@14484>   BSR writelong
0002BDAE <AmiBlitz3.ab3@14485>   MOVE.l #$37800000,d1
0002BDB2 <AmiBlitz3.ab3@14486>   BSR writelong
0002BDB4 <AmiBlitz3.ab3@14487> RTS
0002BDBA <AmiBlitz3.ab3@14494>   TST.b iee
0002BDBE <AmiBlitz3.ab3@14495>   BNE qtof
0002BDC2 <AmiBlitz3.ab3@14497>   MOVE.w #$D300,D1       ; #qutofl,
0002BDC4 <AmiBlitz3.ab3@14500>   MOVE.w D1,-(A7)
0002BDC8 <AmiBlitz3.ab3@14501>    BSR.w savereg
0002BDCA <AmiBlitz3.ab3@14502>   MOVE.l D4,D1
0002BDCE <AmiBlitz3.ab3@14503>    BSR.w pokemovem
0002BDD2 <AmiBlitz3.ab3@14505>    BSR.w ritetod0
0002BDD4 <AmiBlitz3.ab3@14506>   MOVE.w (A7)+,D1
0002BDD8 <AmiBlitz3.ab3@14507>    BSR.w Atokejsr
0002BDDC <AmiBlitz3.ab3@14509>    BSR.w ritefromd0
0002BDDE <AmiBlitz3.ab3@14510>   MOVE.l D5,D1
0002BDE2 <AmiBlitz3.ab3@14511> BRA.w pokemovem
0002BDE4 <AmiBlitz3.ab3@14513> RTS ; dead old code
0002BDEA <AmiBlitz3.ab3@14517>   TST.b typecheck
0002BDEE <AmiBlitz3.ab3@14518>   BEQ 'l1
0002BDF4 <AmiBlitz3.ab3@14519>   TST.b notypecheck
0002BDF8 <AmiBlitz3.ab3@14520>   BNE 'l1
0002BDFE <AmiBlitz3.ab3@14521>   TST.l lasttoken
0002BE04 <AmiBlitz3.ab3@14527>   TST.b iee
0002BE08 <AmiBlitz3.ab3@14528>   BNE ftol
0002BE0C <AmiBlitz3.ab3@14530>   MOVE.w #$C31A,D1       ; #ftobover
0002BE10 <AmiBlitz3.ab3@14531>   BSR.w overchk
0002BE14 <AmiBlitz3.ab3@14533>   BSR.w floattolong2
0002BE18 <AmiBlitz3.ab3@14534> BRA.w convert_long_to_byte
0002BE1A <AmiBlitz3.ab3@14536> RTS ; dead old code
0002BE20 <AmiBlitz3.ab3@14540>   TST.b typecheck
0002BE24 <AmiBlitz3.ab3@14541>   BEQ 'l1
0002BE2A <AmiBlitz3.ab3@14542>   TST.b notypecheck
0002BE2E <AmiBlitz3.ab3@14543>   BNE 'l1
0002BE34 <AmiBlitz3.ab3@14544>   TST.l lasttoken
0002BE3A <AmiBlitz3.ab3@14550>   TST.b iee
0002BE3E <AmiBlitz3.ab3@14551>   BNE ftol
0002BE42 <AmiBlitz3.ab3@14553>   MOVE.w #$C31B,D1         ; #ftowover
0002BE46 <AmiBlitz3.ab3@14554>   BSR.w overchk
0002BE4A <AmiBlitz3.ab3@14556>   BSR.w floattolong2
0002BE4E <AmiBlitz3.ab3@14557> BRA.w convert_long_to_word
0002BE50 <AmiBlitz3.ab3@14559> RTS  ; dead old code
0002BE56 <AmiBlitz3.ab3@14563>   TST.b iee
0002BE5A <AmiBlitz3.ab3@14564>   BNE ftol
0002BE5E <AmiBlitz3.ab3@14566>   MOVE.w #$C31C,D1     ; #ftolover,
0002BE62 <AmiBlitz3.ab3@14567>   BSR.w overchk
0002BE66 <AmiBlitz3.ab3@14570>   MOVE.w #$FFE2,D1     ; #-30,
0002BE6A <AmiBlitz3.ab3@14571> BRA.w fdo2
0002BE6C <AmiBlitz3.ab3@14575>   MOVE.l d0,-(a7)
0002BE6E <AmiBlitz3.ab3@14576>   MOVEQ #0,d0
0002BE74 <AmiBlitz3.ab3@14577>   MOVE.w regnum,d0
0002BE76 <AmiBlitz3.ab3@14578>   ASL.l #7,d0
0002BE7C <AmiBlitz3.ab3@14579>   MOVE.l #$f2006000,d1
0002BE7E <AmiBlitz3.ab3@14580>   OR.l d0,d1
0002BE80 <AmiBlitz3.ab3@14581>   ASL.l #1,d0
0002BE82 <AmiBlitz3.ab3@14582>   ASL.l #8,d0
0002BE84 <AmiBlitz3.ab3@14583>   OR.l d0,d1
0002BE86 <AmiBlitz3.ab3@14584>   MOVE.l (a7)+,d0
0002BE8A <AmiBlitz3.ab3@14585> BRA writelong
0002BE8C <AmiBlitz3.ab3@14589>   MOVE.l d0,-(a7)
0002BE8E <AmiBlitz3.ab3@14590>   MOVEQ #0,d0
0002BE94 <AmiBlitz3.ab3@14591>   MOVE.l #$f23c4023,d1
0002BE9A <AmiBlitz3.ab3@14592>   MOVE.w regnum,d0
0002BE9C <AmiBlitz3.ab3@14593>   ASL.l #7,d0
0002BE9E <AmiBlitz3.ab3@14594>   OR.l d0,d1
0002BEA2 <AmiBlitz3.ab3@14595>   BSR writelong
0002BEA8 <AmiBlitz3.ab3@14596>   MOVE.l #$00010000,d1
0002BEAC <AmiBlitz3.ab3@14597>   BSR writelong
0002BEB2 <AmiBlitz3.ab3@14598>   MOVE.w regnum,d0
0002BEB4 <AmiBlitz3.ab3@14599>   ASL.l #7,d0
0002BEBA <AmiBlitz3.ab3@14600>   MOVE.l #$f2006000,d1
0002BEBC <AmiBlitz3.ab3@14601>   OR.l d0,d1
0002BEBE <AmiBlitz3.ab3@14602>   ASL.l #1,d0
0002BEC0 <AmiBlitz3.ab3@14603>   ASL.l #8,d0
0002BEC2 <AmiBlitz3.ab3@14604>   OR.l d0,d1
0002BEC6 <AmiBlitz3.ab3@14605>   BSR writelong
0002BEC8 <AmiBlitz3.ab3@14606>   MOVE.l (a7)+,d0
0002BECA <AmiBlitz3.ab3@14607> RTS
0002BECC <AmiBlitz3.ab3@14610> RTS         ; dead old code
0002BED2 <AmiBlitz3.ab3@14617>   TST.b iee
0002BED6 <AmiBlitz3.ab3@14618>   BNE ftoq
0002BEDA <AmiBlitz3.ab3@14620>   MOVE.w #$C31B,D1    ; #ftowover,
0002BEDE <AmiBlitz3.ab3@14621>   BSR.w overchk
0002BEE2 <AmiBlitz3.ab3@14623>   MOVE.w #$D301,D1    ; #fltoqu,
0002BEE6 <AmiBlitz3.ab3@14624> BRA.w qtof2
0002BEEC <AmiBlitz3.ab3@14629>    TST.b blitzparloop
0002BEF0 <AmiBlitz3.ab3@14630>    BNE 'l1
0002BEF6 <AmiBlitz3.ab3@14631>    TST.b funcparloop
0002BEFA <AmiBlitz3.ab3@14632>    BNE 'l1
0002BEFE <AmiBlitz3.ab3@14633>    BRA error_convert_types
0002BF06 <AmiBlitz3.ab3@14636>   CMP.b #2,optistring
0002BF0A <AmiBlitz3.ab3@14637>   BEQ JLrts
0002BF10 <AmiBlitz3.ab3@14639>   MOVE.w stol,D1
0002BF14 <AmiBlitz3.ab3@14640>   BSR.w writeword
0002BF1C <AmiBlitz3.ab3@14642>   CMPI.w #$2,sbgot
0002BF20 <AmiBlitz3.ab3@14644>   BCS.w sbtolong                     ; was BRA
0002BF24 <AmiBlitz3.ab3@14646>   MOVE.w ceos(PC),D1                 ; begin copy of sbtolong
0002BF28 <AmiBlitz3.ab3@14647>   BSR.w writeword
0002BF2E <AmiBlitz3.ab3@14649>   MOVE.w regnum,D1
0002BF30 <AmiBlitz3.ab3@14650>   LSL.w #8,D1
0002BF32 <AmiBlitz3.ab3@14651>   LSL.w #1,D1
0002BF3A <AmiBlitz3.ab3@14652>   CMPI.w #$2,sbgot
0002BF3E <AmiBlitz3.ab3@14653>   BCS.w sbtolong_skip2
0002BF44 <AmiBlitz3.ab3@14654>   MOVE.w a2offset,D3
0002BF4A <AmiBlitz3.ab3@14655>   SUB.w thisstuse,D3
0002BF4E <AmiBlitz3.ab3@14656>   CMP.w #$6,D3
0002BF52 <AmiBlitz3.ab3@14657>   BNE.w 'lenonly
0002BF58 <AmiBlitz3.ab3@14658>   OR.w movestst2,D1
0002BF5C <AmiBlitz3.ab3@14659>   BSR.w writeword
0002BF62 <AmiBlitz3.ab3@14660>   LEA movestst2+2,A0
0002BF68 <AmiBlitz3.ab3@14661>   LEA movestst2f,A1
0002BF6C <AmiBlitz3.ab3@14662>  BRA.w pokecode2
0002BF72 <AmiBlitz3.ab3@14665>   OR.w movea7dn,D1
0002BF76 <AmiBlitz3.ab3@14666>   BSR.w writeword
0002BF7C <AmiBlitz3.ab3@14667>   MOVE.l #0,D1
0002BF80 <AmiBlitz3.ab3@14668> BRA.w writeword                      ; end of copy
0002BF86 <AmiBlitz3.ab3@14675>   ADDQ.w #1,fuckpos
0002BF8A <AmiBlitz3.ab3@14676>   BSR.w writeconvertcode
0002BF90 <AmiBlitz3.ab3@14677>   SUBQ.w #1,fuckpos
0002BF92 <AmiBlitz3.ab3@14681> RTS
0002BF94 <AmiBlitz3.ab3@14685>   MOVE.w D3,D1
0002BF98 <AmiBlitz3.ab3@14687>   CMP.w #7,d1
0002BF9C <AmiBlitz3.ab3@14688>   BLE 'ok
0002BFA2 <AmiBlitz3.ab3@14689>   JMP errorinternalconvert
0002BFA4 <AmiBlitz3.ab3@14693>   SUBQ.w #1,D1
0002BFA8 <AmiBlitz3.ab3@14694>   MULU #$7,D1
0002BFAA <AmiBlitz3.ab3@14695>   ADD.w D2,D1
0002BFAC <AmiBlitz3.ab3@14696>   SUBQ.w #1,D1
0002BFAE <AmiBlitz3.ab3@14697>   LSL.w #2,D1
0002BFB4 <AmiBlitz3.ab3@14698>   LEA convtable,A0
0002BFB8 <AmiBlitz3.ab3@14699>   MOVE.l $0(A0,D1.W),D1
0002BFBC <AmiBlitz3.ab3@14700>   BEQ.w 'skip
0002BFBE <AmiBlitz3.ab3@14701>     MOVEA.l D1,A0
0002BFC2 <AmiBlitz3.ab3@14703>     CMP.b #$ff,d3
0002BFC6 <AmiBlitz3.ab3@14704>     BEQ 'skip
0002BFC8 <AmiBlitz3.ab3@14706>  JMP (A0)
0002BFCA <AmiBlitz3.ab3@14709> RTS
0002BFCE <AmiBlitz3.ab3@14712> usedfrom:  Ds.l 1
0002BFD2 <AmiBlitz3.ab3@14719>   CMP.w #"\",D0
0002BFD6 <AmiBlitz3.ab3@14720>   BNE.w 'skip0
0002BFDA <AmiBlitz3.ab3@14722>     CMP.b #"\",(a5)
0002BFDE <AmiBlitz3.ab3@14723>     BNE 'first
0002BFE4 <AmiBlitz3.ab3@14724>       MOVE.l A5,usedfrom
0002BFEA <AmiBlitz3.ab3@14725>       LEA path2,A5
0002BFEE <AmiBlitz3.ab3@14726>  BRA 'g1
0002BFF0 <AmiBlitz3.ab3@14730>     SUBQ.w #1,A5
0002BFF6 <AmiBlitz3.ab3@14731>   MOVE.l A5,usedfrom
0002BFFC <AmiBlitz3.ab3@14732>   LEA usedpath,A5                                          ;read path
0002C000 <AmiBlitz3.ab3@14737>   BSR.w get1bytemain
0002C006 <AmiBlitz3.ab3@14740>   CLR.w flagmask
0002C00A <AmiBlitz3.ab3@14741>   CMP.w #$2A,D0             ;'*'
0002C00E <AmiBlitz3.ab3@14742>    BNE.w 'skip
0002C016 <AmiBlitz3.ab3@14743>   MOVE.w #$0001,flagmask
0002C01A <AmiBlitz3.ab3@14746>    BSR.w getparameter2
0002C01E <AmiBlitz3.ab3@14749>    BEQ.w syntaxerr
0002C022 <AmiBlitz3.ab3@14750>   CMP.w #$28,D0             ;'('
0002C026 <AmiBlitz3.ab3@14751>    BEQ.w 'setmask
0002C02A <AmiBlitz3.ab3@14752>   CMP.w #$2E,D0             ;'.'
0002C02E <AmiBlitz3.ab3@14753>    BEQ.w 'morem
0002C032 <AmiBlitz3.ab3@14754>   CMP.w #$24,D0             ;'$'
0002C036 <AmiBlitz3.ab3@14755>    BNE.w 'done
0002C03E <AmiBlitz3.ab3@14756>   ORI.w #$8,flagmask
0002C042 <AmiBlitz3.ab3@14757>    BSR.w storeloc
0002C046 <AmiBlitz3.ab3@14758>    BSR.w get1bytemain
0002C04A <AmiBlitz3.ab3@14759>  BRA.w 'morez
0002C04E <AmiBlitz3.ab3@14763>   BSR.w storeloc
0002C050 <AmiBlitz3.ab3@14764>   MOVE.w D2,-(A7)
0002C056 <AmiBlitz3.ab3@14765>   LEA namebuff2,A1
0002C05A <AmiBlitz3.ab3@14766>    BSR.w makename3
0002C05E <AmiBlitz3.ab3@14767>    BEQ.w syntaxerr
0002C060 <AmiBlitz3.ab3@14768>   MOVE.w (A7)+,D2
0002C062 <AmiBlitz3.ab3@14771>    MOVE.w D0,D1
0002C066 <AmiBlitz3.ab3@14772>    BSR.w resloc
0002C06A <AmiBlitz3.ab3@14773>    CMP.w #$28,D1             ;'('
0002C06E <AmiBlitz3.ab3@14774>    BNE.w 'done
0002C076 <AmiBlitz3.ab3@14777>   ORI.w #$2,flagmask
0002C078 <AmiBlitz3.ab3@14780>  RTS
0002C07C <AmiBlitz3.ab3@14783>   CMP.w #$40,D0              ;'@'
0002C080 <AmiBlitz3.ab3@14784>    BNE.w 'skip2
0002C088 <AmiBlitz3.ab3@14785>   MOVE.w #$0005,flagmask
0002C08C <AmiBlitz3.ab3@14786>  BRA.w 'more2
0002C090 <AmiBlitz3.ab3@14789>   BSR.w makename2
0002C094 <AmiBlitz3.ab3@14790> BRA.w 'more
0002C098 <AmiBlitz3.ab3@14794>   MOVE.w #$FED3,D1          ; #65235
0002C09C <AmiBlitz3.ab3@14795>    BSR.w uselib
0002C0A2 <AmiBlitz3.ab3@14796>   LEA pusha3,A0
0002C0A8 <AmiBlitz3.ab3@14797>   LEA pusha3f,A1
0002C0AC <AmiBlitz3.ab3@14798> BRA.w pokecode
0002C0B0 <AmiBlitz3.ab3@14802>   MOVE.w #$FED3,D1          ; #65235
0002C0B4 <AmiBlitz3.ab3@14803>    BSR.w uselib
0002C0BA <AmiBlitz3.ab3@14804>   LEA pulla3,A0
0002C0C0 <AmiBlitz3.ab3@14805>   LEA pulla3f,A1
0002C0C4 <AmiBlitz3.ab3@14806> BRA.w pokecode
0002C0C6 <AmiBlitz3.ab3@14810> ceos:   Dc.b $42,$1B                                       ;CLR.B   (A3)+             ;*!
0002C0CE <AmiBlitz3.ab3@14816>     CMP.b #2,optistring
0002C0D2 <AmiBlitz3.ab3@14817>    BEQ 'l10
0002C0D6 <AmiBlitz3.ab3@14819>    MOVE.w ceos(PC),D1
0002C0DA <AmiBlitz3.ab3@14820>    BSR.w writeword                                         ;clr.b (a3)
0002C0E0 <AmiBlitz3.ab3@14825>   MOVE.w regnum,D1
0002C0E2 <AmiBlitz3.ab3@14826>   LSL.w #8,D1
0002C0E4 <AmiBlitz3.ab3@14827>   LSL.w #1,D1
0002C0EC <AmiBlitz3.ab3@14828>   CMPI.w #$2,sbgot
0002C0F0 <AmiBlitz3.ab3@14829>    BCS.w sbtolong_skip2
0002C0F6 <AmiBlitz3.ab3@14830>   MOVE.w a2offset,D3                                       ;stackuse,d3 org source
0002C0FC <AmiBlitz3.ab3@14831>   SUB.w thisstuse,D3
0002C100 <AmiBlitz3.ab3@14832>   CMP.w #$6,D3
0002C104 <AmiBlitz3.ab3@14833>    BNE.w 'lenonly
0002C10A <AmiBlitz3.ab3@14834>   OR.w movestst2,D1
0002C10E <AmiBlitz3.ab3@14835>    BSR.w writeword
0002C114 <AmiBlitz3.ab3@14836>   LEA movestst2+2,A0
0002C11A <AmiBlitz3.ab3@14837>   LEA movestst2f,A1
0002C11E <AmiBlitz3.ab3@14838>  BRA.w pokecode2
0002C124 <AmiBlitz3.ab3@14841>    OR.w movea7dn,D1
0002C128 <AmiBlitz3.ab3@14842>    BSR.w writeword
0002C12E <AmiBlitz3.ab3@14843>   MOVE.l movea7dn+2,D1
0002C132 <AmiBlitz3.ab3@14856>   BSR writelong
0002C13A <AmiBlitz3.ab3@14859>    CMP.w #6,regnum
0002C13E <AmiBlitz3.ab3@14860>    BEQ 'l1
0002C144 <AmiBlitz3.ab3@14861>    TST.w stackpar
0002C148 <AmiBlitz3.ab3@14862>    BNE 'l1
0002C14E <AmiBlitz3.ab3@14863>    TST.b funcparloop
0002C152 <AmiBlitz3.ab3@14864>    BEQ 'l1
0002C158 <AmiBlitz3.ab3@14865>    MOVE.l #$48780000,d1
0002C15C <AmiBlitz3.ab3@14866>    BSR writelong
0002C15E <AmiBlitz3.ab3@14870>  RTS
0002C160 <AmiBlitz3.ab3@14876>      MOVE.l d1,-(a7)
0002C168 <AmiBlitz3.ab3@14877>      CMP.w #6,regnum
0002C16C <AmiBlitz3.ab3@14878>      BEQ 'l1
0002C172 <AmiBlitz3.ab3@14879>      TST.w stackpar
0002C176 <AmiBlitz3.ab3@14880>      BNE 'l1
0002C17C <AmiBlitz3.ab3@14881>      TST.b funcparloop
0002C180 <AmiBlitz3.ab3@14882>      BEQ 'l1
0002C186 <AmiBlitz3.ab3@14883>      MOVE.l #$48780000,d1
0002C18A <AmiBlitz3.ab3@14884>      BSR writelong
0002C18C <AmiBlitz3.ab3@14887>      MOVE.l (a7)+,d1
0002C192 <AmiBlitz3.ab3@14890>    OR.w movestdn,D1
0002C196 <AmiBlitz3.ab3@14891>    BSR.w writeword
0002C19A <AmiBlitz3.ab3@14892>   MOVE.w #$FED3,D1        ;#65235
0002C19E <AmiBlitz3.ab3@14893>    BSR.w uselib
0002C1A2 <AmiBlitz3.ab3@14894>   MOVE.w $A(A1),D1
0002C1A6 <AmiBlitz3.ab3@14895> BRA.w writeword
0002C1A8 <AmiBlitz3.ab3@14898> unknown:    Ds.w 1
0002C1AE <AmiBlitz3.ab3@14901> somecode:   Dc.b $0C,$80,$00,$01,$00,$00                   ;CMPI.L  #$00010000,D0
0002C1B2 <AmiBlitz3.ab3@14902> somecode2:  Dc.b $65,$00,$00,$08                           ;BCS.W   codeisok
0002C1B8 <AmiBlitz3.ab3@14903>             Dc.b $4E,$B9,$00,$00,$00,$00                   ;JSR $00000000
0002C1BE <AmiBlitz3.ab3@14909>   TST.b debugmode
0002C1C2 <AmiBlitz3.ab3@14910>   BEQ.w sharreval
0002C1C6 <AmiBlitz3.ab3@14911>  BSR.w arreval
0002C1CA <AmiBlitz3.ab3@14914>   MOVE.w somecode(PC),D1
0002C1D0 <AmiBlitz3.ab3@14915>   OR.w regnum,D1
0002C1D4 <AmiBlitz3.ab3@14916>    BSR.w writeword
0002C1D6 <AmiBlitz3.ab3@14917>   MOVEQ.l #$01,D1
0002C1D8 <AmiBlitz3.ab3@14918>   SWAP D1
0002C1DC <AmiBlitz3.ab3@14919>    BSR.w writelong
0002C1E0 <AmiBlitz3.ab3@14920>   MOVE.l somecode2(PC),D1
0002C1E4 <AmiBlitz3.ab3@14921>    BSR.w writelong
0002C1E8 <AmiBlitz3.ab3@14922>   MOVE.w #$C309,D1     ; was #arrerr,
0002C1EC <AmiBlitz3.ab3@14923> BRA.w Atokejsr
0002C1EE <AmiBlitz3.ab3@14927>   MOVEQ.l #$02,D2
0002C1F0 <AmiBlitz3.ab3@14928>   MOVEQ.l #$00,D1
0002C1F2 <AmiBlitz3.ab3@14929>   MOVEQ.l #$00,D3
0002C1F6 <AmiBlitz3.ab3@14930> BRA.w maineval2
0002C1F8 <AmiBlitz3.ab3@14934>   MOVEQ.l #$03,D2           ;getlong
0002C1FA <AmiBlitz3.ab3@14935>   MOVEQ.l #$00,D1           ;no push
0002C1FC <AmiBlitz3.ab3@14936>   MOVEQ.l #$00,D3           ;and convert
0002C202 <AmiBlitz3.ab3@14937>   MOVE.b notypecheck,-(a7)
0002C20A <AmiBlitz3.ab3@14938>   MOVE.b #1,notypecheck                                    ;typecheck need switch off for array offset calculation code
0002C210 <AmiBlitz3.ab3@14939>   JSR maineval2             ;2!* ;was bra
0002C216 <AmiBlitz3.ab3@14941>   MOVE.b (a7)+,notypecheck                                 ;now its switch to old state
0002C218 <AmiBlitz3.ab3@14942> RTS
0002C222 <AmiBlitz3.ab3@14948>   MOVE.w oldqflag,instringon
0002C228 <AmiBlitz3.ab3@14949>   MOVEA.l lastsourcepos,A5
0002C22A <AmiBlitz3.ab3@14951>   MOVEQ.l #-$01,D1
0002C22C <AmiBlitz3.ab3@14952>   MOVEQ.l #-$01,D3
0002C230 <AmiBlitz3.ab3@14953> BRA.w peval
0002C23A <AmiBlitz3.ab3@14959>   MOVE.w oldqflag,instringon
0002C240 <AmiBlitz3.ab3@14960>   MOVEA.l lastsourcepos,A5
0002C242 <AmiBlitz3.ab3@14963>   MOVEQ.l #-$01,D1
0002C244 <AmiBlitz3.ab3@14964>   MOVEQ.l #$00,D3
0002C24A <AmiBlitz3.ab3@14966>   MOVE.l leftsidetype,-(a7)
0002C250 <AmiBlitz3.ab3@14967>   MOVE.l rightsidetype,-(a7)
0002C256 <AmiBlitz3.ab3@14968>   MOVE.w leftsideflagmask,-(a7)
0002C25C <AmiBlitz3.ab3@14969>   MOVE.w rightsideflagmask,-(a7)
0002C262 <AmiBlitz3.ab3@14970>   CLR.l leftsidetype
0002C268 <AmiBlitz3.ab3@14971>   CLR.l rightsidetype
0002C26E <AmiBlitz3.ab3@14972>   CLR.w leftsideflagmask
0002C274 <AmiBlitz3.ab3@14973>   CLR.w rightsideflagmask
0002C27A <AmiBlitz3.ab3@14975>   JSR maineval                    ; was bra
0002C280 <AmiBlitz3.ab3@14977>   MOVE.w (a7)+,rightsideflagmask
0002C286 <AmiBlitz3.ab3@14978>   MOVE.w (a7)+,leftsideflagmask
0002C28C <AmiBlitz3.ab3@14979>   MOVE.l (a7)+,rightsidetype
0002C292 <AmiBlitz3.ab3@14980>   MOVE.l (a7)+,leftsidetype
0002C294 <AmiBlitz3.ab3@14981> RTS
0002C29E <AmiBlitz3.ab3@14987>   MOVE.w oldqflag,instringon
0002C2A4 <AmiBlitz3.ab3@14988>   MOVEA.l lastsourcepos,A5
0002C2A6 <AmiBlitz3.ab3@14991>   MOVEQ.l #$00,D1
0002C2A8 <AmiBlitz3.ab3@14992>   MOVEQ.l #-$01,D3
0002C2AC <AmiBlitz3.ab3@14993> BRA.w maineval
0002C2AE <AmiBlitz3.ab3@14997>   MOVEQ.l #$01,D1
0002C2B0 <AmiBlitz3.ab3@14998>   MOVEQ.l #-$01,D3
0002C2B4 <AmiBlitz3.ab3@14999> BRA.w maineval
0002C2BE <AmiBlitz3.ab3@15005>   MOVE.w oldqflag,instringon
0002C2C4 <AmiBlitz3.ab3@15006>   MOVEA.l lastsourcepos,A5
0002C2C6 <AmiBlitz3.ab3@15010>   MOVEQ.l #$00,D1      ;no push
0002C2C8 <AmiBlitz3.ab3@15011>   MOVEQ.l #$00,D3
0002C2D0 <AmiBlitz3.ab3@15032>    CMPI.w #$6,regnum
0002C2D4 <AmiBlitz3.ab3@15033>    BCS.w maineval2
0002C2D6 <AmiBlitz3.ab3@15035>    MOVEQ #0,d1
0002C2DC <AmiBlitz3.ab3@15036>    MOVE.l destpointer,a4
0002C2E2 <AmiBlitz3.ab3@15038>    CMPA.l destbufferend,A4
0002C2E6 <AmiBlitz3.ab3@15039>    BCC.w 'l2
0002C2EC <AmiBlitz3.ab3@15041>    CMP.w #$2f0a,-2(a4)                                    ;bug is a move.l a2,-(a7) before (show temp calc)?
0002C2F0 <AmiBlitz3.ab3@15043>    BNE 'l2
0002C2F4 <AmiBlitz3.ab3@15047> BRA 'l1
0002C2F6 <AmiBlitz3.ab3@15051>   MOVEQ.l #-$01,D1                                         ;do stackpar write
0002C2FE <AmiBlitz3.ab3@15054>   MOVE.w #$0006,regnum                                     ;write a func par To stack
0002C304 <AmiBlitz3.ab3@15060>   MOVE.w thisstuse,-(A7)
0002C30E <AmiBlitz3.ab3@15061>   MOVE.w a2offset,thisstuse
0002C314 <AmiBlitz3.ab3@15063>   MOVE.w stackpar,-(A7)
0002C31A <AmiBlitz3.ab3@15064>   MOVE.w D1,stackpar
0002C320 <AmiBlitz3.ab3@15065>   MOVE.w sbgot,-(A7)
0002C326 <AmiBlitz3.ab3@15066>   CLR.w sbgot                ;not pushed yet
0002C32A <AmiBlitz3.ab3@15067>   MOVE.w unknown(PC),-(A7)
0002C330 <AmiBlitz3.ab3@15068>   MOVE.w D3,unknown
0002C332 <AmiBlitz3.ab3@15070>   MOVE.w D2,-(a7)
0002C338 <AmiBlitz3.ab3@15072>   MOVE.w d2,mode
0002C33C <AmiBlitz3.ab3@15074>    BSR.w eval3
0002C33E <AmiBlitz3.ab3@15075>   MOVE.w (a7)+,d3            ;type asked for
0002C342 <AmiBlitz3.ab3@15076>    BEQ.w 'noconv
0002C346 <AmiBlitz3.ab3@15077>   MOVE.w unknown(PC),D1
0002C34A <AmiBlitz3.ab3@15078>    BNE.w 'noconv
0002C34C <AmiBlitz3.ab3@15079>   EXG.l D2,D3
0002C34E <AmiBlitz3.ab3@15081>    MOVE.l a2,-(a7)
0002C354 <AmiBlitz3.ab3@15082>    TST.b curtemplabel
0002C358 <AmiBlitz3.ab3@15083>    BEQ 'l10
0002C35E <AmiBlitz3.ab3@15084>    MOVE.l asmbuff,a2
0002C364 <AmiBlitz3.ab3@15085>    CMP.w #$c,$8(a2)
0002C368 <AmiBlitz3.ab3@15086>    BEQ 'l20
0002C36E <AmiBlitz3.ab3@15087>    CMP.w #$d,$8(a2)
0002C372 <AmiBlitz3.ab3@15088>    BEQ 'l20
0002C374 <AmiBlitz3.ab3@15091>   CMP.w d2,d3
0002C378 <AmiBlitz3.ab3@15092>   BEQ 'l20
0002C37C <AmiBlitz3.ab3@15093>   BSR.w writeconvertcode
0002C382 <AmiBlitz3.ab3@15094>   CLR.b doimmediate
0002C384 <AmiBlitz3.ab3@15097>   MOVE.l (a7)+,a2
0002C38A <AmiBlitz3.ab3@15101>   MOVE.w (A7)+,unknown
0002C390 <AmiBlitz3.ab3@15102>   MOVE.w stackpar,D1
0002C394 <AmiBlitz3.ab3@15103>    BEQ.w 'skipme
0002C398 <AmiBlitz3.ab3@15104>    BMI.w 'skipme
0002C39E <AmiBlitz3.ab3@15108>   MOVE.w regnum,D1
0002C3A0 <AmiBlitz3.ab3@15109>   LSL.w #8,D1
0002C3A2 <AmiBlitz3.ab3@15110>   LSL.w #1,D1
0002C3A6 <AmiBlitz3.ab3@15111>   CMP.w #$7,D2
0002C3AA <AmiBlitz3.ab3@15112>    BNE.w 'hi1
0002C3B2 <AmiBlitz3.ab3@15114>    CMP.b #2,optistring
0002C3B6 <AmiBlitz3.ab3@15115>    BEQ 'hi1a
0002C3B8 <AmiBlitz3.ab3@15117>   MOVE.w D1,-(A7)
0002C3BE <AmiBlitz3.ab3@15118>   OR.w getstlen,D1
0002C3C2 <AmiBlitz3.ab3@15119>    BSR.w writeword
0002C3C4 <AmiBlitz3.ab3@15120>   MOVE.w (A7)+,D1
0002C3CA <AmiBlitz3.ab3@15123>   ADDQ.w #2,a2offset                                        ;lib mode to stack
0002C3CE <AmiBlitz3.ab3@15128>   MOVE.w #$3f3c,d1
0002C3D2 <AmiBlitz3.ab3@15130>    BSR.w writeword
0002C3D4 <AmiBlitz3.ab3@15135>   MOVE.w d2,d1
0002C3DA <AmiBlitz3.ab3@15136>   MOVE.w d1,libmode
0002C3DE <AmiBlitz3.ab3@15138>    BSR.w writeword
0002C3E2 <AmiBlitz3.ab3@15140>   CMP.w #$7,D2
0002C3E6 <AmiBlitz3.ab3@15141>    BNE.w 'skipme
0002C3EC <AmiBlitz3.ab3@15142>   MOVE.w putstlen,D1
0002C3F2 <AmiBlitz3.ab3@15143>   OR.w regnum,D1
0002C3F6 <AmiBlitz3.ab3@15144>    BSR.w writeword
0002C3FA <AmiBlitz3.ab3@15147>    CMP.w #$7,D2
0002C3FE <AmiBlitz3.ab3@15148>    BNE.w 'notst
0002C406 <AmiBlitz3.ab3@15161>    CMP.b #2,optistring
0002C40A <AmiBlitz3.ab3@15162>    BEQ 'skipme_l10
0002C410 <AmiBlitz3.ab3@15164>    ADDQ.w #4,a2offset     ;a length on da stack.....
0002C414 <AmiBlitz3.ab3@15165>    BSR.w sbtolong
0002C418 <AmiBlitz3.ab3@15166>  BRA.w 'notst2
0002C420 <AmiBlitz3.ab3@15171>     CMP.w #6,regnum
0002C424 <AmiBlitz3.ab3@15172>     BEQ 'skipme_l10_l1
0002C42A <AmiBlitz3.ab3@15173>     TST.b funcparloop
0002C42E <AmiBlitz3.ab3@15174>     BEQ 'skipme_l10_l1
0002C434 <AmiBlitz3.ab3@15175>     MOVE.l #$48780000,d1
0002C438 <AmiBlitz3.ab3@15176>     BSR writelong
0002C43C <AmiBlitz3.ab3@15180>  BRA.w 'notst2
0002C442 <AmiBlitz3.ab3@15183>   ADDQ.w #2,a2offset
0002C446 <AmiBlitz3.ab3@15184>  BRA 'skipme
0002C44E <AmiBlitz3.ab3@15188>   CMPI.w #$2,sbgot
0002C452 <AmiBlitz3.ab3@15189>    BCS.w 'notst2                                         ;correct stack
0002C456 <AmiBlitz3.ab3@15190>   MOVE.w ststfix(PC),D1
0002C45A <AmiBlitz3.ab3@15191>    BSR.w writeword
0002C460 <AmiBlitz3.ab3@15194>   MOVE.w (A7)+,sbgot
0002C466 <AmiBlitz3.ab3@15196>   MOVE.w stackpar,D1
0002C46A <AmiBlitz3.ab3@15197>    BPL.w 'skip
0002C46E <AmiBlitz3.ab3@15199>    CMP.b #7,d2
0002C472 <AmiBlitz3.ab3@15200>    BEQ 'notst2_l1
0002C478 <AmiBlitz3.ab3@15201>   TST.b funcparloop
0002C47C <AmiBlitz3.ab3@15202>   BEQ 'notst2_l1
0002C480 <AmiBlitz3.ab3@15203>   CMP.b #5,d2
0002C484 <AmiBlitz3.ab3@15204>   BNE 'notst2_skip
0002C48A <AmiBlitz3.ab3@15205>   TST.b fpu
0002C48E <AmiBlitz3.ab3@15206>   BEQ 'notst2_skip
0002C494 <AmiBlitz3.ab3@15207>   MOVE.l #$f2066700,d1                                     ;fmove.s fp6,d6
0002C49A <AmiBlitz3.ab3@15208>   JSR writelong
0002C49E <AmiBlitz3.ab3@15211>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0002C4A4 <AmiBlitz3.ab3@15212>   ADD.w parnum,d1
0002C4AA <AmiBlitz3.ab3@15213>   JSR Atokejsr
0002C4B0 <AmiBlitz3.ab3@15214>    TST.w dontwrite_nomemleft
0002C4B4 <AmiBlitz3.ab3@15215>    BNE 'notst2_l1
0002C4BA <AmiBlitz3.ab3@15216>    MOVE.l data1start,d1
0002C4C0 <AmiBlitz3.ab3@15217>    MOVE.l destpointer,a4
0002C4C4 <AmiBlitz3.ab3@15218>    ADD.l d1,-4(a4)
0002C4CA <AmiBlitz3.ab3@15219>    MOVE.l destpointer,d1
0002C4CC <AmiBlitz3.ab3@15220>    SUBQ.l #4,d1
0002C4D2 <AmiBlitz3.ab3@15221>    SUB.l destbufferstart,d1
0002C4D4 <AmiBlitz3.ab3@15222>    MOVE.l d2,-(a7)
0002C4D6 <AmiBlitz3.ab3@15223>    MOVE.l d1,d2
0002C4DC <AmiBlitz3.ab3@15224>    JSR addhunkoffset
0002C4DE <AmiBlitz3.ab3@15225>    MOVE.l (a7)+,d2
0002C4E2 <AmiBlitz3.ab3@15226>  BRA 'skip
0002C4E8 <AmiBlitz3.ab3@15230>   ADDQ.w #2,a2offset
0002C4EE <AmiBlitz3.ab3@15231>   MOVE.w pushd0wd,D1
0002C4F2 <AmiBlitz3.ab3@15232>   CMP.w #$3,D2                                             ;write parameter to stack
0002C4F6 <AmiBlitz3.ab3@15233>    BCS.w 'ok
0002C4FC <AmiBlitz3.ab3@15234>   ADDQ.w #2,a2offset
0002C502 <AmiBlitz3.ab3@15236>   TST.b fpu
0002C506 <AmiBlitz3.ab3@15237>   BEQ 'notst2_nofpu
0002C50A <AmiBlitz3.ab3@15238>   CMP.w #5,d2
0002C50E <AmiBlitz3.ab3@15239>   BNE 'notst2_nofpu
0002C510 <AmiBlitz3.ab3@15240>   MOVEQ #0,d1
0002C516 <AmiBlitz3.ab3@15241>   MOVE.w regnum,d1
0002C518 <AmiBlitz3.ab3@15242>   ASL.l #7,d1
0002C51E <AmiBlitz3.ab3@15243>   OR.l #$f2276400,d1
0002C522 <AmiBlitz3.ab3@15244>   BSR writelong
0002C526 <AmiBlitz3.ab3@15245>  BRA 'skip
0002C52C <AmiBlitz3.ab3@15249>   MOVE.w pushd0l,D1
0002C532 <AmiBlitz3.ab3@15252>    OR.w regnum,D1
0002C536 <AmiBlitz3.ab3@15253>    BSR.w writeword                                         ;nat
0002C53C <AmiBlitz3.ab3@15256>   MOVE.w (A7)+,stackpar
0002C542 <AmiBlitz3.ab3@15257>   MOVE.w (A7)+,thisstuse
0002C544 <AmiBlitz3.ab3@15258> RTS
0002C546 <AmiBlitz3.ab3@15261> thisstuse: Ds.w 1
0002C548 <AmiBlitz3.ab3@15264> ststfix:   Dc.b $58,$4F                                    ;ADDQ.W  #4,A7
0002C54A <AmiBlitz3.ab3@15265> pushut:    Dc.b $3F,$00                                    ;MOVE.W  D0,-(A7)
0002C54E <AmiBlitz3.ab3@15270>   BSR.w eval4
0002C558 <AmiBlitz3.ab3@15271>   SUBI.l #$12,forthsp
0002C55A <AmiBlitz3.ab3@15272> RTS
0002C55C <AmiBlitz3.ab3@15276>   MOVEQ.l #$01,D1
0002C560 <AmiBlitz3.ab3@15279>       MOVEA.l precsp(PC),A1
0002C562 <AmiBlitz3.ab3@15280>       MOVE.l A0,(A1)+
0002C564 <AmiBlitz3.ab3@15281>       MOVE.w D1,(A1)+
0002C56A <AmiBlitz3.ab3@15282>       MOVE.l A1,precsp
0002C56E <AmiBlitz3.ab3@15284>    BSR.w calcloop
0002C570 <AmiBlitz3.ab3@15285>   TST.w D1
0002C574 <AmiBlitz3.ab3@15286>    BNE.w syntaxerr
0002C57A <AmiBlitz3.ab3@15288>   SUBQ.l #6,precsp           ;pop the prec set up
0002C57C <AmiBlitz3.ab3@15289> RTS
0002C580 <AmiBlitz3.ab3@15293>   BSR.w eval2
0002C584 <AmiBlitz3.ab3@15296>   MOVEA.l precsp(PC),A1
0002C586 <AmiBlitz3.ab3@15297>   CMP.w -(A1),D1
0002C58A <AmiBlitz3.ab3@15298>    BHI.w 'higher
0002C58C <AmiBlitz3.ab3@15299>  RTS
0002C590 <AmiBlitz3.ab3@15305>   MOVEA.l precsp(PC),A1
0002C592 <AmiBlitz3.ab3@15306>   MOVE.l A0,(A1)+
0002C594 <AmiBlitz3.ab3@15307>   MOVE.w D1,(A1)+
0002C59A <AmiBlitz3.ab3@15308>   MOVE.l A1,precsp
0002C59C <AmiBlitz3.ab3@15310>   MOVE.w D2,-(A7)
0002C5A2 <AmiBlitz3.ab3@15311>   ADDQ.w #1,regnum
0002C5A6 <AmiBlitz3.ab3@15312>    BSR.w calcloop               ;constant optimizer
0002C5AC <AmiBlitz3.ab3@15313>   SUBQ.w #1,regnum
0002C5AE <AmiBlitz3.ab3@15314>   MOVE.w (A7)+,D3
0002C5B2 <AmiBlitz3.ab3@15315>   MOVEM.l D1/A0,-(A7)
0002C5B6 <AmiBlitz3.ab3@15316>    BEQ.w 'skip
0002C5BA <AmiBlitz3.ab3@15317>    BSR.w convtypef     ;could possibly fuck regat+1 !
0002C5BE <AmiBlitz3.ab3@15320>   BSR.w popprec
0002C5C2 <AmiBlitz3.ab3@15321>   BSR.w writecode
0002C5C6 <AmiBlitz3.ab3@15328>   MOVEA.l forthsp(PC),A0
0002C5CA <AmiBlitz3.ab3@15329>   MOVE.w -$2(A0),D1
0002C5CE <AmiBlitz3.ab3@15330>   OR.w -$14(A0),D1
0002C5D2 <AmiBlitz3.ab3@15331>   MOVE.w D1,-$14(A0)
0002C5D6 <AmiBlitz3.ab3@15332>    BNE.w 'no
0002C5DC <AmiBlitz3.ab3@15333>   MOVE.w dontwrite_nomemleft,D1
0002C5E0 <AmiBlitz3.ab3@15334>    BNE.w 'no
0002C5E4 <AmiBlitz3.ab3@15341>    MOVEA.l -$24(A0),A0
0002C720 <AmiBlitz3.ab3@15343>   !newcalc
0002C724 <AmiBlitz3.ab3@15344>    BEQ 'l10
0002C728 <AmiBlitz3.ab3@15345>    MOVEA.l forthsp(PC),A0
0002C730 <AmiBlitz3.ab3@15346>    MOVE.w -$18(A0),lasta6
0002C738 <AmiBlitz3.ab3@15347>    MOVE.l -$1C(A0),lasta6
0002C73C <AmiBlitz3.ab3@15348>    MOVEA.l -$24(A0),A0
0002C742 <AmiBlitz3.ab3@15349>    MOVE.l A0,destpointer
0002C748 <AmiBlitz3.ab3@15350>    MOVEA.l _mathffpbase,A6
0002C74E <AmiBlitz3.ab3@15351>    MOVEA.l ffplib,A1
0002C752 <AmiBlitz3.ab3@15352>  BRA 'cont1
0002C756 <AmiBlitz3.ab3@15356>   MOVE.w #$2000,D1
0002C75C <AmiBlitz3.ab3@15357>   OR.w regnum,D1            ; was regat(pc),
0002C760 <AmiBlitz3.ab3@15358>    BSR.w writeword
0002C762 <AmiBlitz3.ab3@15360>     MOVEQ #0,d1
0002C768 <AmiBlitz3.ab3@15361>     MOVE.w regnum,D1
0002C76A <AmiBlitz3.ab3@15362>     ASL.l #8,d1
0002C76C <AmiBlitz3.ab3@15363>     ASL.l #2,d1
0002C772 <AmiBlitz3.ab3@15364>     OR.l #$f2000000,d1
0002C776 <AmiBlitz3.ab3@15365>     BSR writelong
0002C77A <AmiBlitz3.ab3@15367>   MOVE.w #$4E75,D1
0002C77E <AmiBlitz3.ab3@15368>    BSR.w writeword
0002C786 <AmiBlitz3.ab3@15369>   MOVE.w -$18(A0),lasta6
0002C78E <AmiBlitz3.ab3@15370>   MOVE.l -$1C(A0),lasta6
0002C792 <AmiBlitz3.ab3@15371>   MOVEA.l -$24(A0),A0
0002C798 <AmiBlitz3.ab3@15372>   MOVE.l A0,destpointer
0002C79C <AmiBlitz3.ab3@15374>   MOVEM.l D2/A5,-(A7)
0002C7A2 <AmiBlitz3.ab3@15376>   MOVEA.l _mathffpbase,A6
0002C7A8 <AmiBlitz3.ab3@15377>   MOVEA.l ffplib,A1
0002C7AC <AmiBlitz3.ab3@15378>   MOVE.w $A(A1),D0
0002C7B2 <AmiBlitz3.ab3@15379>   LEA _mathffpbase,A5
0002C7B4 <AmiBlitz3.ab3@15380>   SUBA.w D0,A5
0002C7BA <AmiBlitz3.ab3@15382>   JSR Aclearcache                                          ;neg +
0002C7C0 <AmiBlitz3.ab3@15384>   CLR.l load_var_addr
0002C7C6 <AmiBlitz3.ab3@15385>   CLR.l imm_addr
0002C7CC <AmiBlitz3.ab3@15386>   TST.w dontwrite_nomemleft
0002C7D0 <AmiBlitz3.ab3@15387>   BNE '1
0002C7D2 <AmiBlitz3.ab3@15389>   JSR (A0)                                                 ;calc constant inline expression
0002C7D6 <AmiBlitz3.ab3@15393>   MOVEM.l (A7)+,D2/A5
0002C7DC <AmiBlitz3.ab3@15400>   MOVE.b d2,isconstantvalue
0002C7E2 <AmiBlitz3.ab3@15401>   MOVE.l d0,lastconstantvalue
0002C7E8 <AmiBlitz3.ab3@15403>   MOVE.w regnum,D1
0002C7EA <AmiBlitz3.ab3@15404>   LSL.w #8,D1
0002C7EC <AmiBlitz3.ab3@15405>   LSL.w #1,D1
0002C7F0 <AmiBlitz3.ab3@15406>   ORI.w #$203C,D1      ;move.l #x,dn
0002C7F4 <AmiBlitz3.ab3@15407>   CMP.w #$3,D2
0002C7F8 <AmiBlitz3.ab3@15408>    BCC.w 'ok
0002C7FC <AmiBlitz3.ab3@15409>   ORI.w #$1000,D1
0002C800 <AmiBlitz3.ab3@15410>    BSR.w writeword
0002C802 <AmiBlitz3.ab3@15411>   MOVE.w D0,D1
0002C806 <AmiBlitz3.ab3@15412>    BSR.w writeword
0002C80A <AmiBlitz3.ab3@15413>  BRA.w 'mode
0002C810 <AmiBlitz3.ab3@15417>   TST.b iee                                                ;fpu constant
0002C814 <AmiBlitz3.ab3@15418>   BEQ 'l10b
0002C818 <AmiBlitz3.ab3@15419>   CMP.b #5,d2
0002C81C <AmiBlitz3.ab3@15420>   BNE 'l10b
0002C81E <AmiBlitz3.ab3@15421>   MOVEQ #0,d1
0002C824 <AmiBlitz3.ab3@15422>   MOVE.w regnum,D1
0002C826 <AmiBlitz3.ab3@15423>   ASL.l #7,d1
0002C82C <AmiBlitz3.ab3@15424>   OR.l #$f23c5400,d1
0002C830 <AmiBlitz3.ab3@15425>   BSR writelong
0002C832 <AmiBlitz3.ab3@15426>   SUBQ.l #8,a7
0002C838 <AmiBlitz3.ab3@15427>   fmove.d fp0,0(a7)
0002C83A <AmiBlitz3.ab3@15428>   MOVE.l (a7)+,d1
0002C83E <AmiBlitz3.ab3@15429>   BSR writelong
0002C840 <AmiBlitz3.ab3@15430>   MOVE.l (a7)+,d1
0002C844 <AmiBlitz3.ab3@15431>   BSR writelong
0002C848 <AmiBlitz3.ab3@15432>  BRA 'mode
0002C84C <AmiBlitz3.ab3@15436>   BSR.w writeword
0002C84E <AmiBlitz3.ab3@15437>   MOVE.l D0,D1
0002C852 <AmiBlitz3.ab3@15438>   BSR.w writelong
0002C856 <AmiBlitz3.ab3@15445>   MOVEA.l forthsp(PC),A0
0002C85A <AmiBlitz3.ab3@15446>   MOVEA.l -$20(A0),A3
0002C860 <AmiBlitz3.ab3@15447>   MOVEA.l hunkoffsetbase,A2
0002C866 <AmiBlitz3.ab3@15448>   MOVE.l A3,hunkoffsetbase
0002C86C <AmiBlitz3.ab3@15449>   MOVEA.l _execbase,A6
0002C86E <AmiBlitz3.ab3@15452>   CMPA.l A3,A2
0002C872 <AmiBlitz3.ab3@15453>   BEQ.w 'done
0002C878 <AmiBlitz3.ab3@15454>   SUBQ.l #1,hunkoffsetcounter
0002C87A <AmiBlitz3.ab3@15455>   MOVEA.l A2,A1
0002C87C <AmiBlitz3.ab3@15456>   MOVEA.l (A2),A2
0002C87E <AmiBlitz3.ab3@15457>   MOVEQ.l #$8,D0
0002C884 <AmiBlitz3.ab3@15459>   MOVE.l mempool2,a0
0002C888 <AmiBlitz3.ab3@15460>    JSR _FreePooled(A6)
0002C88C <AmiBlitz3.ab3@15463>  BRA.w 'loop
0002C890 <AmiBlitz3.ab3@15466>   MOVEA.l forthsp(PC),A0
0002C894 <AmiBlitz3.ab3@15469>   LEA -$12(A0),A0
0002C89A <AmiBlitz3.ab3@15470>   MOVE.l A0,forthsp
0002C89E <AmiBlitz3.ab3@15472>   MOVEM.l (A7)+,D1/A0
0002C8A2 <AmiBlitz3.ab3@15473>   BSR.w reget
0002C8A6 <AmiBlitz3.ab3@15474> BRA.w 'more
0002C8AA <AmiBlitz3.ab3@15483>   BSR.w getelement
0002C8AC <AmiBlitz3.ab3@15485>   TST.w d0
0002C8B0 <AmiBlitz3.ab3@15486>   BEQ 'done
0002C8B4 <AmiBlitz3.ab3@15487>   CMP.b #",",d0
0002C8B8 <AmiBlitz3.ab3@15488>   BEQ 'done
0002C8BC <AmiBlitz3.ab3@15489>   CMP.b #"@",d0                                            ;expandline @@
0002C8C0 <AmiBlitz3.ab3@15490>   BEQ 'done
0002C8C6 <AmiBlitz3.ab3@15493>   LEA operators,A0
0002C8C8 <AmiBlitz3.ab3@15496>    TST.w (A0)
0002C8CC <AmiBlitz3.ab3@15497>    BEQ.w 'done
0002C8CE <AmiBlitz3.ab3@15498>   CMP.w (A0),D0
0002C8D2 <AmiBlitz3.ab3@15499>    BEQ.w 'found
0002C8D6 <AmiBlitz3.ab3@15500>   LEA $20(A0),A0
0002C8DA <AmiBlitz3.ab3@15501>  BRA.w 'loop
0002C8DC <AmiBlitz3.ab3@15504>   MOVEQ.l #$00,D1
0002C8DE <AmiBlitz3.ab3@15505>  RTS
0002C8E2 <AmiBlitz3.ab3@15508>   CMP.w #$3C,D0
0002C8E6 <AmiBlitz3.ab3@15509>    BNE.w 'notlt
0002C8EA <AmiBlitz3.ab3@15510>    BSR.w get1bytemain
0002C8EE <AmiBlitz3.ab3@15511>   CMP.w #$3D,D0
0002C8F2 <AmiBlitz3.ab3@15512>    BNE.w 'notlteq
0002C8F8 <AmiBlitz3.ab3@15513>   LEA ople,A0
0002C8FC <AmiBlitz3.ab3@15514>  BRA.w 'found2
0002C900 <AmiBlitz3.ab3@15517>   CMP.w #$3E,D0          ;'>'
0002C904 <AmiBlitz3.ab3@15518>    BNE.w 'found3
0002C908 <AmiBlitz3.ab3@15519>  BRA.w 'isne
0002C90C <AmiBlitz3.ab3@15522>   CMP.w #$3E,D0          ;'>'
0002C910 <AmiBlitz3.ab3@15523>    BNE.w 'notqt
0002C914 <AmiBlitz3.ab3@15524>    BSR.w get1bytemain
0002C918 <AmiBlitz3.ab3@15525>   CMP.w #$3D,D0          ;'='
0002C91C <AmiBlitz3.ab3@15526>    BNE.w 'notgteq
0002C922 <AmiBlitz3.ab3@15527>   LEA opge,A0
0002C926 <AmiBlitz3.ab3@15528>  BRA.w 'found2
0002C92A <AmiBlitz3.ab3@15531>   CMP.w #$3C,D0          ;'<'
0002C92E <AmiBlitz3.ab3@15532>    BEQ.w 'isne
0002C938 <AmiBlitz3.ab3@15537>     MOVE.w oldqflag,instringon
0002C93E <AmiBlitz3.ab3@15538>     MOVEA.l lastsourcepos,A5
0002C942 <AmiBlitz3.ab3@15540>  BRA.w 'found2
0002C946 <AmiBlitz3.ab3@15543>   CMP.w #$3D,D0          ;'='
0002C94A <AmiBlitz3.ab3@15544>    BNE.w 'found2
0002C94E <AmiBlitz3.ab3@15545>    BSR.w get1bytemain
0002C952 <AmiBlitz3.ab3@15546>   CMP.w #$3E,D0          ;'>'
0002C956 <AmiBlitz3.ab3@15547>    BNE.w 'noteqgt
0002C95C <AmiBlitz3.ab3@15548>   LEA opge,A0
0002C960 <AmiBlitz3.ab3@15549>  BRA.w 'found2
0002C964 <AmiBlitz3.ab3@15552>   CMP.w #$3C,D0          ;'<'
0002C968 <AmiBlitz3.ab3@15553>   BNE.w 'found3
0002C96E <AmiBlitz3.ab3@15556>   LEA opne,A0
0002C972 <AmiBlitz3.ab3@15562>   MOVE.w $1E(A0),D1
0002C974 <AmiBlitz3.ab3@15563> RTS
0002C976 <AmiBlitz3.ab3@15572>   MOVE.w d2,d1
0002C978 <AmiBlitz3.ab3@15573>   SUBQ.w #1,D1
0002C97C <AmiBlitz3.ab3@15574>    BMI.w illoperr
0002C97E <AmiBlitz3.ab3@15575>   LSL.w #2,D1
0002C982 <AmiBlitz3.ab3@15576>   MOVE.l $2(A0,D1.W),D1
0002C986 <AmiBlitz3.ab3@15577>    BEQ.w illoperr
0002C988 <AmiBlitz3.ab3@15578>   MOVEA.l D1,A0
0002C98A <AmiBlitz3.ab3@15579> JMP (A0)
0002C98E <AmiBlitz3.ab3@15595>   MOVEA.l precsp(PC),A1
0002C994 <AmiBlitz3.ab3@15596>   CMPA.l #precstackf,A1
0002C998 <AmiBlitz3.ab3@15597>    BCC.w pserr
0002C99A <AmiBlitz3.ab3@15598>   MOVE.w -(A1),D1
0002C99C <AmiBlitz3.ab3@15599>   MOVEA.l -(A1),A0
0002C9A2 <AmiBlitz3.ab3@15600>   MOVE.l A1,precsp
0002C9A4 <AmiBlitz3.ab3@15601> RTS
0002C9A8 <AmiBlitz3.ab3@15604> precsp:      Dc.l precstack
0002CAA4 <AmiBlitz3.ab3@15605> precstack:   Ds.l 63                                       ;ds 6*32 org source   ;Lotsa Room?
0002CB28 <AmiBlitz3.ab3@15606>              Ds.l 33
0002CB2A <AmiBlitz3.ab3@15612> mseq:  SEQ D0
0002CB2C <AmiBlitz3.ab3@15613> msne:    SNE D0
0002CB2E <AmiBlitz3.ab3@15614> mslt:    SLT D0
0002CB30 <AmiBlitz3.ab3@15615> msle:    SLE D0
0002CB32 <AmiBlitz3.ab3@15616> msgt:    SGT D0
0002CB34 <AmiBlitz3.ab3@15617> msge:    SGE D0
0002CB36 <AmiBlitz3.ab3@15619> cmp0:    CMP.b D0,D0
0002CB38 <AmiBlitz3.ab3@15620> cmp1:    CMP.w D0,D0
0002CB3A <AmiBlitz3.ab3@15621> cmp2:    CMP.l D0,D0
0002CB3E <AmiBlitz3.ab3@15625>   MOVE.w cmp0(PC),D1
0002CB42 <AmiBlitz3.ab3@15626> BRA.w doeqcmp2                                            ;writecompare
0002CB46 <AmiBlitz3.ab3@15630>   MOVE.w cmp0(PC),D1
0002CB4A <AmiBlitz3.ab3@15631> BRA.w donecmp2
0002CB4E <AmiBlitz3.ab3@15635>   MOVE.w cmp0(PC),D1
0002CB52 <AmiBlitz3.ab3@15636> BRA.w doltcmp2
0002CB56 <AmiBlitz3.ab3@15640>   MOVE.w cmp0(PC),D1
0002CB5A <AmiBlitz3.ab3@15641> BRA.w dolecmp2
0002CB5E <AmiBlitz3.ab3@15645>   MOVE.w cmp0(PC),D1
0002CB62 <AmiBlitz3.ab3@15646> BRA.w dogtcmp2
0002CB66 <AmiBlitz3.ab3@15651>   MOVE.w cmp0(PC),D1
0002CB6A <AmiBlitz3.ab3@15652> BRA.w dogecmp2
0002CB6E <AmiBlitz3.ab3@15656>   MOVE.w cmp1(PC),D1
0002CB72 <AmiBlitz3.ab3@15657> BRA.w doeqcmp2
0002CB76 <AmiBlitz3.ab3@15661>   MOVE.w cmp1(PC),D1
0002CB7A <AmiBlitz3.ab3@15662> BRA.w donecmp2
0002CB7E <AmiBlitz3.ab3@15666>   MOVE.w cmp1(PC),D1
0002CB82 <AmiBlitz3.ab3@15667> BRA.w doltcmp2
0002CB86 <AmiBlitz3.ab3@15671>   MOVE.w cmp1(PC),D1
0002CB8A <AmiBlitz3.ab3@15672> BRA.w dolecmp2
0002CB8E <AmiBlitz3.ab3@15676>   MOVE.w cmp1(PC),D1
0002CB92 <AmiBlitz3.ab3@15677> BRA.w dogtcmp2
0002CB96 <AmiBlitz3.ab3@15682>   MOVE.w cmp1(PC),D1
0002CB9A <AmiBlitz3.ab3@15683> BRA.w dogecmp2
0002CB9E <AmiBlitz3.ab3@15687>   MOVE.w cmp2(PC),D1                                   ;writecomparelong
0002CBA2 <AmiBlitz3.ab3@15688> BRA doeqcmp2
0002CBA6 <AmiBlitz3.ab3@15691>   MOVE.w cmp2(PC),D1
0002CBAA <AmiBlitz3.ab3@15692> BRA donecmp2
0002CBAE <AmiBlitz3.ab3@15696>   MOVE.w cmp2(PC),D1
0002CBB2 <AmiBlitz3.ab3@15697> BRA.w doltcmp2
0002CBB6 <AmiBlitz3.ab3@15701>   MOVE.w cmp2(PC),D1
0002CBBA <AmiBlitz3.ab3@15702> BRA.w dolecmp2
0002CBBE <AmiBlitz3.ab3@15706>   MOVE.w cmp2(PC),D1
0002CBC2 <AmiBlitz3.ab3@15707> BRA.w dogtcmp2
0002CBC6 <AmiBlitz3.ab3@15711>   MOVE.w cmp2(PC),D1
0002CBCA <AmiBlitz3.ab3@15712> BRA.w dogecmp2
0002CBCC <AmiBlitz3.ab3@15715> cfregat:  Ds.w 1
0002CBD2 <AmiBlitz3.ab3@15719>   MOVE.w D1,libjsr+2
0002CBD6 <AmiBlitz3.ab3@15720>    BSR.w savereg
0002CBD8 <AmiBlitz3.ab3@15721>   MOVE.l D4,D1
0002CBDC <AmiBlitz3.ab3@15722>    BSR.w pokemovem
0002CBE0 <AmiBlitz3.ab3@15723>   MOVE.w #$C900,D1
0002CBE4 <AmiBlitz3.ab3@15724>    BSR.w Atokejsr
0002CBE8 <AmiBlitz3.ab3@15725>    BSR.w ritetod0
0002CBEE <AmiBlitz3.ab3@15726>   MOVE.l libjsr,D1
0002CBF2 <AmiBlitz3.ab3@15727>    BSR.w writelong
0002CBFC <AmiBlitz3.ab3@15728>   MOVE.w regnum,cfregat
0002CC02 <AmiBlitz3.ab3@15729>   CLR.w regnum
0002CC04 <AmiBlitz3.ab3@15730> RTS
0002CC0E <AmiBlitz3.ab3@15734>   MOVE.w cfregat,regnum
0002CC12 <AmiBlitz3.ab3@15735>    BSR.w ritefromd0
0002CC14 <AmiBlitz3.ab3@15736>   MOVE.l D5,D1
0002CC18 <AmiBlitz3.ab3@15737> BRA.w pokemovem
0002CC1A <AmiBlitz3.ab3@15741>    MOVEQ.l #-$2A,D1
0002CC20 <AmiBlitz3.ab3@15742>    TST.b fpu
0002CC24 <AmiBlitz3.ab3@15743>    BEQ 'nofpu
0002CC26 <AmiBlitz3.ab3@15744>    MOVEQ #0,d1
0002CC2C <AmiBlitz3.ab3@15745>    MOVE.w regnum,d1
0002CC2E <AmiBlitz3.ab3@15746>    MOVE.l d1,d2
0002CC30 <AmiBlitz3.ab3@15747>    ASL.l #7,d1
0002CC32 <AmiBlitz3.ab3@15748>    ADDQ  #1,d2
0002CC34 <AmiBlitz3.ab3@15749>    ASL.l #8,d2
0002CC36 <AmiBlitz3.ab3@15750>    ASL.l #2,d2
0002CC38 <AmiBlitz3.ab3@15751>    OR.l d2,d1
0002CC3E <AmiBlitz3.ab3@15752>    OR.l #$f2000038,d1
0002CC44 <AmiBlitz3.ab3@15753>    JSR writelong
0002CC48 <AmiBlitz3.ab3@15754>    MOVE.w #$f240,d1
0002CC4E <AmiBlitz3.ab3@15755>    OR.w regnum,d1
0002CC52 <AmiBlitz3.ab3@15756>    BSR writeword
0002CC54 <AmiBlitz3.ab3@15757>    MOVEQ.l #1,d2
0002CC58 <AmiBlitz3.ab3@15758>    MOVE.w #1,d1                                            ;fpu comp fseq
0002CC5C <AmiBlitz3.ab3@15759>    BSR writeword
0002CC5E <AmiBlitz3.ab3@15760>  RTS
0002CC62 <AmiBlitz3.ab3@15763>    BSR.w docflib
0002CC66 <AmiBlitz3.ab3@15764>    BSR.w doeqcmp
0002CC6A <AmiBlitz3.ab3@15765> BRA.w docflib2
0002CC6C <AmiBlitz3.ab3@15769>   MOVEQ.l #-$2A,D1
0002CC72 <AmiBlitz3.ab3@15770>   TST.b fpu
0002CC76 <AmiBlitz3.ab3@15771>    BEQ 'nofpu
0002CC78 <AmiBlitz3.ab3@15772>    MOVEQ #0,d1
0002CC7E <AmiBlitz3.ab3@15773>    MOVE.w regnum,d1
0002CC80 <AmiBlitz3.ab3@15774>    MOVE.l d1,d2
0002CC82 <AmiBlitz3.ab3@15775>    ASL.l #7,d1
0002CC84 <AmiBlitz3.ab3@15776>    ADDQ  #1,d2
0002CC86 <AmiBlitz3.ab3@15777>    ASL.l #8,d2
0002CC88 <AmiBlitz3.ab3@15778>    ASL.l #2,d2
0002CC8A <AmiBlitz3.ab3@15779>    OR.l d2,d1
0002CC90 <AmiBlitz3.ab3@15780>    OR.l #$f2000038,d1
0002CC96 <AmiBlitz3.ab3@15781>    JSR writelong
0002CC9A <AmiBlitz3.ab3@15782>    MOVE.w #$f240,d1
0002CCA0 <AmiBlitz3.ab3@15783>    OR.w regnum,d1
0002CCA4 <AmiBlitz3.ab3@15784>    BSR writeword
0002CCAA <AmiBlitz3.ab3@15785>    MOVE.l #1,d2
0002CCAE <AmiBlitz3.ab3@15786>    MOVE.w #$e,d1                                           ;fpu comp fsne
0002CCB2 <AmiBlitz3.ab3@15787>    BSR writeword
0002CCB4 <AmiBlitz3.ab3@15788>  RTS
0002CCB8 <AmiBlitz3.ab3@15791>    BSR.w docflib
0002CCBC <AmiBlitz3.ab3@15792>    BSR.w donecmp
0002CCC0 <AmiBlitz3.ab3@15793> BRA.w docflib2
0002CCC2 <AmiBlitz3.ab3@15797>   MOVEQ.l #-$2A,D1
0002CCC8 <AmiBlitz3.ab3@15798>     TST.b fpu
0002CCCC <AmiBlitz3.ab3@15799>    BEQ 'nofpu
0002CCCE <AmiBlitz3.ab3@15800>    MOVEQ #0,d1
0002CCD4 <AmiBlitz3.ab3@15801>    MOVE.w regnum,d1
0002CCD6 <AmiBlitz3.ab3@15802>    MOVE.l d1,d2
0002CCD8 <AmiBlitz3.ab3@15803>    ASL.l #7,d1
0002CCDA <AmiBlitz3.ab3@15804>    ADDQ  #1,d2
0002CCDC <AmiBlitz3.ab3@15805>    ASL.l #8,d2
0002CCDE <AmiBlitz3.ab3@15806>    ASL.l #2,d2
0002CCE0 <AmiBlitz3.ab3@15807>    OR.l d2,d1
0002CCE6 <AmiBlitz3.ab3@15808>    OR.l #$f2000038,d1
0002CCEC <AmiBlitz3.ab3@15809>    JSR writelong
0002CCF0 <AmiBlitz3.ab3@15810>    MOVE.w #$f240,d1
0002CCF6 <AmiBlitz3.ab3@15811>    OR.w regnum,d1
0002CCFA <AmiBlitz3.ab3@15812>    BSR writeword
0002CD00 <AmiBlitz3.ab3@15813>    MOVE.l #$1,d2
0002CD04 <AmiBlitz3.ab3@15814>    MOVE.w #$14,d1                                          ;fpu comp fslt
0002CD08 <AmiBlitz3.ab3@15815>    BSR writeword
0002CD0A <AmiBlitz3.ab3@15816>  RTS
0002CD0E <AmiBlitz3.ab3@15819>    BSR.w docflib
0002CD12 <AmiBlitz3.ab3@15820>    BSR.w doltcmp
0002CD16 <AmiBlitz3.ab3@15821> BRA.w docflib2
0002CD18 <AmiBlitz3.ab3@15825>   MOVEQ.l #-$2A,D1
0002CD1E <AmiBlitz3.ab3@15826>   TST.b fpu
0002CD22 <AmiBlitz3.ab3@15827>    BEQ 'nofpu
0002CD24 <AmiBlitz3.ab3@15828>    MOVEQ #0,d1
0002CD2A <AmiBlitz3.ab3@15829>    MOVE.w regnum,d1
0002CD2C <AmiBlitz3.ab3@15830>    MOVE.l d1,d2
0002CD2E <AmiBlitz3.ab3@15831>    ASL.l #7,d1
0002CD30 <AmiBlitz3.ab3@15832>    ADDQ  #1,d2
0002CD32 <AmiBlitz3.ab3@15833>    ASL.l #8,d2
0002CD34 <AmiBlitz3.ab3@15834>    ASL.l #2,d2
0002CD36 <AmiBlitz3.ab3@15835>    OR.l d2,d1
0002CD3C <AmiBlitz3.ab3@15836>    OR.l #$f2000038,d1
0002CD42 <AmiBlitz3.ab3@15837>    JSR writelong
0002CD46 <AmiBlitz3.ab3@15838>    MOVE.w #$f240,d1
0002CD4C <AmiBlitz3.ab3@15839>    OR.w regnum,d1
0002CD50 <AmiBlitz3.ab3@15840>    BSR writeword
0002CD56 <AmiBlitz3.ab3@15841>    MOVE.l #1,d2
0002CD5A <AmiBlitz3.ab3@15842>    MOVE.w #$15,d1                                          ;fpu comp fsle
0002CD5E <AmiBlitz3.ab3@15843>    BSR writeword
0002CD60 <AmiBlitz3.ab3@15844>  RTS
0002CD64 <AmiBlitz3.ab3@15847>    BSR.w docflib
0002CD68 <AmiBlitz3.ab3@15848>    BSR.w dolecmp
0002CD6C <AmiBlitz3.ab3@15849> BRA.w docflib2
0002CD6E <AmiBlitz3.ab3@15853>   MOVEQ.l #-$2A,D1
0002CD74 <AmiBlitz3.ab3@15854>    TST.b fpu
0002CD78 <AmiBlitz3.ab3@15855>    BEQ 'nofpu
0002CD7A <AmiBlitz3.ab3@15856>     MOVEQ #0,d1
0002CD80 <AmiBlitz3.ab3@15857>    MOVE.w regnum,d1
0002CD82 <AmiBlitz3.ab3@15858>    MOVE.l d1,d2
0002CD84 <AmiBlitz3.ab3@15859>    ASL.l #7,d1
0002CD86 <AmiBlitz3.ab3@15860>    ADDQ  #1,d2
0002CD88 <AmiBlitz3.ab3@15861>    ASL.l #8,d2
0002CD8A <AmiBlitz3.ab3@15862>    ASL.l #2,d2
0002CD8C <AmiBlitz3.ab3@15863>    OR.l d2,d1
0002CD92 <AmiBlitz3.ab3@15864>    OR.l #$f2000038,d1
0002CD98 <AmiBlitz3.ab3@15865>    JSR writelong
0002CD9C <AmiBlitz3.ab3@15866>    MOVE.w #$f240,d1
0002CDA2 <AmiBlitz3.ab3@15867>    OR.w regnum,d1
0002CDA6 <AmiBlitz3.ab3@15868>    BSR writeword
0002CDAC <AmiBlitz3.ab3@15869>    MOVE.l #1,d2
0002CDB0 <AmiBlitz3.ab3@15870>    MOVE.w #$12,d1                                          ;fpu comp fsgt
0002CDB4 <AmiBlitz3.ab3@15871>    BSR writeword
0002CDB6 <AmiBlitz3.ab3@15872>  RTS
0002CDBA <AmiBlitz3.ab3@15875>    BSR.w docflib
0002CDBE <AmiBlitz3.ab3@15876>    BSR.w dogtcmp
0002CDC2 <AmiBlitz3.ab3@15877> BRA.w docflib2
0002CDC4 <AmiBlitz3.ab3@15881>   MOVEQ.l #-$2A,D1
0002CDCA <AmiBlitz3.ab3@15882>  TST.b fpu
0002CDCE <AmiBlitz3.ab3@15883>    BEQ 'nofpu
0002CDD0 <AmiBlitz3.ab3@15884>    MOVEQ #0,d1
0002CDD6 <AmiBlitz3.ab3@15885>    MOVE.w regnum,d1
0002CDD8 <AmiBlitz3.ab3@15886>    MOVE.l d1,d2
0002CDDA <AmiBlitz3.ab3@15887>    ASL.l #7,d1
0002CDDC <AmiBlitz3.ab3@15888>    ADDQ  #1,d2
0002CDDE <AmiBlitz3.ab3@15889>    ASL.l #8,d2
0002CDE0 <AmiBlitz3.ab3@15890>    ASL.l #2,d2
0002CDE2 <AmiBlitz3.ab3@15891>    OR.l d2,d1
0002CDE8 <AmiBlitz3.ab3@15892>    OR.l #$f2000038,d1
0002CDEE <AmiBlitz3.ab3@15893>    JSR writelong
0002CDF2 <AmiBlitz3.ab3@15894>    MOVE.w #$f240,d1
0002CDF8 <AmiBlitz3.ab3@15895>    OR.w regnum,d1
0002CDFC <AmiBlitz3.ab3@15896>    BSR writeword
0002CE02 <AmiBlitz3.ab3@15897>    MOVE.l #1,d2
0002CE06 <AmiBlitz3.ab3@15898>    MOVE.w #$13,d1                                          ;fpu comp fsge
0002CE0A <AmiBlitz3.ab3@15899>    BSR writeword
0002CE0C <AmiBlitz3.ab3@15900>  RTS
0002CE10 <AmiBlitz3.ab3@15903>    BSR.w docflib
0002CE14 <AmiBlitz3.ab3@15904>    BSR.w dogecmp
0002CE18 <AmiBlitz3.ab3@15905> BRA.w docflib2
0002CE1E <AmiBlitz3.ab3@15910>   MOVE.l #$CE00,D1
0002CE24 <AmiBlitz3.ab3@15911>    MOVE.l d1,lastinstruction
0002CE28 <AmiBlitz3.ab3@15912>    BSR.w Atokejsr
0002CE2C <AmiBlitz3.ab3@15913> BRA.w doeqcmp
0002CE32 <AmiBlitz3.ab3@15917>   MOVE.l #$CE00,D1
0002CE38 <AmiBlitz3.ab3@15918>    MOVE.l d1,lastinstruction
0002CE3C <AmiBlitz3.ab3@15919>    BSR.w Atokejsr
0002CE40 <AmiBlitz3.ab3@15920> BRA.w donecmp
0002CE46 <AmiBlitz3.ab3@15924>   MOVE.l #$CE00,D1
0002CE4C <AmiBlitz3.ab3@15925>    MOVE.l d1,lastinstruction
0002CE50 <AmiBlitz3.ab3@15926>    BSR.w Atokejsr
0002CE54 <AmiBlitz3.ab3@15927> BRA.w doltcmp
0002CE5A <AmiBlitz3.ab3@15931>   MOVE.l #$CE00,D1
0002CE60 <AmiBlitz3.ab3@15932>    MOVE.l d1,lastinstruction
0002CE64 <AmiBlitz3.ab3@15933>    BSR.w Atokejsr
0002CE68 <AmiBlitz3.ab3@15934> BRA.w dolecmp
0002CE6E <AmiBlitz3.ab3@15938>   MOVE.l #$CE00,D1
0002CE74 <AmiBlitz3.ab3@15939>    MOVE.l d1,lastinstruction
0002CE78 <AmiBlitz3.ab3@15940>    BSR.w Atokejsr
0002CE7C <AmiBlitz3.ab3@15941> BRA.w dogtcmp
0002CE82 <AmiBlitz3.ab3@15945>   MOVE.l #$CE00,D1
0002CE88 <AmiBlitz3.ab3@15946>    MOVE.l d1,lastinstruction
0002CE8C <AmiBlitz3.ab3@15947>    BSR.w Atokejsr
0002CE90 <AmiBlitz3.ab3@15948> BRA.w dogecmp
0002CE96 <AmiBlitz3.ab3@15953>   TST.b fast                                               ;compare
0002CE9A <AmiBlitz3.ab3@15954>   BEQ 'org
0002CEA0 <AmiBlitz3.ab3@15958>   MOVE.l destpointer,a0
0002CEA6 <AmiBlitz3.ab3@15959>   SUB.l imm_addr,a0
0002CEAC <AmiBlitz3.ab3@15960>   CMP.l #6,a0
0002CEB0 <AmiBlitz3.ab3@15961>   BNE 'l11
0002CEB6 <AmiBlitz3.ab3@15962>   MOVE.l imm_addr,a0
0002CEBE <AmiBlitz3.ab3@15963>   CMP.w #$223c,imm_addr
0002CEC2 <AmiBlitz3.ab3@15964>   BNE 'org
0002CEC8 <AmiBlitz3.ab3@15965>   ADD.w #$8e80,-6(a4)
0002CECE <AmiBlitz3.ab3@15968>   CLR.l imm_addr
0002CED0 <AmiBlitz3.ab3@15969>  RTS
0002CED6 <AmiBlitz3.ab3@15972>   CMP.l #4,a0
0002CEDA <AmiBlitz3.ab3@15973>   BNE 'l10
0002CEDE <AmiBlitz3.ab3@15974>   CMP.b #2,d3
0002CEE2 <AmiBlitz3.ab3@15975>   BNE 'l11b
0002CEE8 <AmiBlitz3.ab3@15976>   ADD.w #$7e40,-4(a4)
0002CEEA <AmiBlitz3.ab3@15977>  RTS
0002CEF0 <AmiBlitz3.ab3@15980>   ADD.w #$7e00,-4(a4)
0002CEF2 <AmiBlitz3.ab3@15981>  RTS
0002CEF8 <AmiBlitz3.ab3@15984>    MOVE.l destpointer,a0
0002CEFE <AmiBlitz3.ab3@15985>    SUB.l load_var_addr,a0
0002CF02 <AmiBlitz3.ab3@15986>    CMP.w #4,a0
0002CF06 <AmiBlitz3.ab3@15987>    BNE 'org
0002CF0A <AmiBlitz3.ab3@15988>    CMP.b #3,d3
0002CF0E <AmiBlitz3.ab3@15989>    BCS 'lv1
0002CF14 <AmiBlitz3.ab3@15990>    CLR.l load_var_addr
0002CF1A <AmiBlitz3.ab3@15991>    ADD.w #$9080-$200,-4(a4)
0002CF1C <AmiBlitz3.ab3@15992>  RTS
0002CF20 <AmiBlitz3.ab3@15995>   CMP.b #2,d3
0002CF24 <AmiBlitz3.ab3@15996>    BNE 'org
0002CF2A <AmiBlitz3.ab3@15997>    CLR.l load_var_addr
0002CF30 <AmiBlitz3.ab3@15998>    ADD.w #$8040-$200,-4(a4)
0002CF32 <AmiBlitz3.ab3@15999>  RTS
0002CF38 <AmiBlitz3.ab3@16002>   MOVE.w regnum,D3
0002CF3A <AmiBlitz3.ab3@16003>   OR.w D3,D1
0002CF3C <AmiBlitz3.ab3@16004>   LSL.w #8,D3
0002CF3E <AmiBlitz3.ab3@16005>   LSL.w #1,D3
0002CF40 <AmiBlitz3.ab3@16006>   OR.w D3,D1
0002CF42 <AmiBlitz3.ab3@16007>   ADDQ.w #1,D1
0002CF46 <AmiBlitz3.ab3@16008> BRA.w writeword
0002CF4A <AmiBlitz3.ab3@16012>    BSR.w cmpit
0002CF4E <AmiBlitz3.ab3@16015>    MOVE.w mseq(PC),D1
0002CF52 <AmiBlitz3.ab3@16016> BRA.w cpoke
0002CF56 <AmiBlitz3.ab3@16020>   BSR.w cmpit
0002CF5A <AmiBlitz3.ab3@16023>   MOVE.w msne(PC),D1
0002CF5E <AmiBlitz3.ab3@16024> BRA.w cpoke
0002CF62 <AmiBlitz3.ab3@16028>   BSR.w cmpit
0002CF66 <AmiBlitz3.ab3@16031>    MOVE.w mslt(PC),D1
0002CF6A <AmiBlitz3.ab3@16032> BRA.w cpoke
0002CF6E <AmiBlitz3.ab3@16036>    BSR.w cmpit
0002CF72 <AmiBlitz3.ab3@16039>    MOVE.w msle(PC),D1
0002CF76 <AmiBlitz3.ab3@16040> BRA.w cpoke
0002CF7A <AmiBlitz3.ab3@16044>    BSR.w cmpit
0002CF7E <AmiBlitz3.ab3@16047>    MOVE.w msgt(PC),D1
0002CF82 <AmiBlitz3.ab3@16048> BRA.w cpoke
0002CF86 <AmiBlitz3.ab3@16052>   BSR.w cmpit
0002CF8A <AmiBlitz3.ab3@16055>    MOVE.w msge(PC),D1
0002CF90 <AmiBlitz3.ab3@16058>    OR.w regnum,D1
0002CF94 <AmiBlitz3.ab3@16059>    CMP.w #5,d2
0002CF98 <AmiBlitz3.ab3@16060>    BNE 'nod0
0002CF9C <AmiBlitz3.ab3@16061>    CMP.w #5,d3
0002CFA0 <AmiBlitz3.ab3@16062>    BNE 'nod0
0002CFA2 <AmiBlitz3.ab3@16063>    MOVE.l d1,-(a7)
0002CFA8 <AmiBlitz3.ab3@16064>    MOVE.l #$44004a00,d1                                    ;68k neg.b:tst.b
0002CFAC <AmiBlitz3.ab3@16065>    BSR writelong
0002CFAE <AmiBlitz3.ab3@16066>    MOVE.l (a7)+,d1
0002CFB2 <AmiBlitz3.ab3@16069>    BSR.w writeword                                         ;writeseq
0002CFB4 <AmiBlitz3.ab3@16070>    MOVEQ.l #1,d2
0002CFBA <AmiBlitz3.ab3@16071>    MOVE.l lasttoken,d1
0002CFC0 <AmiBlitz3.ab3@16072>     TST.b fast
0002CFC4 <AmiBlitz3.ab3@16073>     BEQ.s 'l11
0002CFCA <AmiBlitz3.ab3@16074>    CMP.l #$800b,d1
0002CFCE <AmiBlitz3.ab3@16075>    BEQ 'l10
0002CFD2 <AmiBlitz3.ab3@16078>   MOVE.w #$4880,D1                                         ;ext.w D regat
0002CFD8 <AmiBlitz3.ab3@16079>   OR.w regnum,D1
0002CFDC <AmiBlitz3.ab3@16080>    BSR.w writeword                                         ;writeext.w
0002CFDE <AmiBlitz3.ab3@16081>   MOVEQ.l #$02,D2                                          ;type now WORD!
0002CFE0 <AmiBlitz3.ab3@16084> RTS
0002CFE4 <AmiBlitz3.ab3@16089>   MOVE.w #$D040,D1
0002CFE6 <AmiBlitz3.ab3@16090>   MOVEQ.l #$02,D2                                          ;writeaddword   ;now a word
0002CFEA <AmiBlitz3.ab3@16091> BRA.w doplus2
0002CFEE <AmiBlitz3.ab3@16095>   MOVE.w #$D040,D1
0002CFF0 <AmiBlitz3.ab3@16096>   MOVEQ.l #$03,D2                                          ;now a long
0002CFF4 <AmiBlitz3.ab3@16097>    BSR.w doplus2
0002CFF8 <AmiBlitz3.ab3@16098> BRA.w convert_word_to_long
0002CFFC <AmiBlitz3.ab3@16102>   MOVE.w #$D080,D1                                         ;writeaddlong
0002CFFE <AmiBlitz3.ab3@16105>   MOVE.w d1,a1
0002D004 <AmiBlitz3.ab3@16106>   TST.b fast
0002D008 <AmiBlitz3.ab3@16107>   BEQ 'l10
0002D00A <AmiBlitz3.ab3@16111>   ASR.w #8,d1
0002D00E <AmiBlitz3.ab3@16112>   CMP.b #$90,d1
0002D012 <AmiBlitz3.ab3@16113>   BEQ 'sub1
0002D016 <AmiBlitz3.ab3@16114>   CMP.b #$d0,d1
0002D01A <AmiBlitz3.ab3@16115>   BNE 'l10
0002D01E <AmiBlitz3.ab3@16116>   CMP.b #3,d3
0002D022 <AmiBlitz3.ab3@16117>   BCS 'lq10
0002D028 <AmiBlitz3.ab3@16118>   TST.b quickadd
0002D02E <AmiBlitz3.ab3@16122>    MOVE.l destpointer,a0
0002D034 <AmiBlitz3.ab3@16123>    CLR.b quickadd
0002D03A <AmiBlitz3.ab3@16124>    CLR.l load_var_addr
0002D040 <AmiBlitz3.ab3@16125>    SUB.l imm_addr,a0
0002D044 <AmiBlitz3.ab3@16126>    CMP.w #6,a0
0002D048 <AmiBlitz3.ab3@16127>    BEQ 'li10
0002D04C <AmiBlitz3.ab3@16128>    CMP.w #4,a0
0002D050 <AmiBlitz3.ab3@16129>    BNE.s 'li1
0002D056 <AmiBlitz3.ab3@16130>    CLR.l imm_addr
0002D05C <AmiBlitz3.ab3@16131>    ADD.w #$a040-$200,-4(a4)
0002D05E <AmiBlitz3.ab3@16132>  RTS
0002D060 <AmiBlitz3.ab3@16135>    MOVE.l a4,a0
0002D066 <AmiBlitz3.ab3@16136>    SUB.l load_var_addr,a0
0002D06C <AmiBlitz3.ab3@16137>    CMP.l #$a,a0
0002D070 <AmiBlitz3.ab3@16138>    BNE 'l10e
0002D076 <AmiBlitz3.ab3@16139>    CLR.l load_var_addr
0002D07A <AmiBlitz3.ab3@16140>    MOVE.w -$8(a4),d1
0002D080 <AmiBlitz3.ab3@16141>    MOVE.l -$4(a4),-$8(a4)
0002D084 <AmiBlitz3.ab3@16142>    MOVE.w d1,-$4(a4)
0002D08A <AmiBlitz3.ab3@16143>    SUB.w #$1980,-$a(a4)
0002D090 <AmiBlitz3.ab3@16144>    SUBQ.l #2,destpointer
0002D092 <AmiBlitz3.ab3@16145>  RTS
0002D098 <AmiBlitz3.ab3@16148>   CLR.b quickadd
0002D09C <AmiBlitz3.ab3@16149>  BRA 'l10
0002D0A2 <AmiBlitz3.ab3@16152>    CLR.l imm_addr
0002D0A6 <AmiBlitz3.ab3@16153>    TST.l -4(a4)                                            ;skip If ADD.l #0,dx
0002D0AA <AmiBlitz3.ab3@16154>    BNE 'doit
0002D0B0 <AmiBlitz3.ab3@16155>    SUBQ.l #6,destpointer
0002D0B2 <AmiBlitz3.ab3@16156>  RTS
0002D0B8 <AmiBlitz3.ab3@16159>    ADD.w #$b080-$200,-6(a4)
0002D0BA <AmiBlitz3.ab3@16160>  RTS
0002D0C0 <AmiBlitz3.ab3@16163>    MOVE.l destpointer,a0
0002D0C6 <AmiBlitz3.ab3@16164>    SUB.l load_var_addr,a0
0002D0CA <AmiBlitz3.ab3@16165>    CMP.w #4,a0
0002D0CE <AmiBlitz3.ab3@16166>    BNE 'l10
0002D0D2 <AmiBlitz3.ab3@16167>    CMP.b #3,d3
0002D0D6 <AmiBlitz3.ab3@16168>    BNE 'lv1
0002D0DC <AmiBlitz3.ab3@16169>    CLR.l load_var_addr
0002D0E2 <AmiBlitz3.ab3@16170>    ADD.w #$b080-$200,-4(a4)
0002D0E4 <AmiBlitz3.ab3@16171>  RTS
0002D0E8 <AmiBlitz3.ab3@16174>   CMP.b #2,d3
0002D0EC <AmiBlitz3.ab3@16175>   BNE 'l10
0002D0F2 <AmiBlitz3.ab3@16176>   CLR.l load_var_addr
0002D0F8 <AmiBlitz3.ab3@16177>   ADD.w #$a040-$200,-4(a4)
0002D0FA <AmiBlitz3.ab3@16178>  RTS
0002D100 <AmiBlitz3.ab3@16181>   MOVE.w regnum,D3
0002D102 <AmiBlitz3.ab3@16182>   MOVE.w a1,d1
0002D104 <AmiBlitz3.ab3@16183>   OR.w D3,D1
0002D106 <AmiBlitz3.ab3@16184>   ADDQ.w #1,D1
0002D108 <AmiBlitz3.ab3@16185>   LSL.w #8,D3
0002D10A <AmiBlitz3.ab3@16186>   LSL.w #1,D3
0002D10C <AmiBlitz3.ab3@16187>   OR.w D3,D1
0002D110 <AmiBlitz3.ab3@16188>  BRA.w writeword
0002D114 <AmiBlitz3.ab3@16191>    CMP.b #3,d3
0002D118 <AmiBlitz3.ab3@16192>    BCS 'sub1_lq10
0002D11E <AmiBlitz3.ab3@16193>    TST.b quickadd
0002D124 <AmiBlitz3.ab3@16197>    MOVE.l destpointer,a0
0002D12A <AmiBlitz3.ab3@16198>    CLR.b quickadd
0002D130 <AmiBlitz3.ab3@16199>    CLR.l load_var_addr
0002D136 <AmiBlitz3.ab3@16200>    SUB.l imm_addr,a0
0002D13A <AmiBlitz3.ab3@16201>    CMP.w #6,a0
0002D13E <AmiBlitz3.ab3@16202>    BEQ 'sub1_li10
0002D142 <AmiBlitz3.ab3@16203>    CMP.w #4,a0
0002D146 <AmiBlitz3.ab3@16204>    BNE.s 'sub1_li1
0002D14C <AmiBlitz3.ab3@16205>    CLR.l imm_addr
0002D152 <AmiBlitz3.ab3@16206>    ADD.w #$6040-$200,-4(a4)
0002D154 <AmiBlitz3.ab3@16207>  RTS
0002D156 <AmiBlitz3.ab3@16210>    MOVE.l a4,a0
0002D15C <AmiBlitz3.ab3@16211>     SUB.l load_var_addr,a0
0002D162 <AmiBlitz3.ab3@16212>     CMP.l #$a,a0
0002D166 <AmiBlitz3.ab3@16213>     BNE 'sub1_l10e
0002D16C <AmiBlitz3.ab3@16214>    CLR.l load_var_addr
0002D170 <AmiBlitz3.ab3@16215>    MOVE.w -$8(a4),d1
0002D176 <AmiBlitz3.ab3@16216>    MOVE.l -$4(a4),-$8(a4)
0002D17A <AmiBlitz3.ab3@16217>    MOVE.w d1,-$4(a4)
0002D180 <AmiBlitz3.ab3@16218>    SUB.w #$1b80,-$a(a4)
0002D186 <AmiBlitz3.ab3@16219>    SUBQ.l #2,destpointer
0002D188 <AmiBlitz3.ab3@16220>  RTS
0002D18E <AmiBlitz3.ab3@16223>   CLR.b quickadd
0002D192 <AmiBlitz3.ab3@16224>  BRA 'sub1_l10
0002D198 <AmiBlitz3.ab3@16227>    CLR.l imm_addr
0002D19E <AmiBlitz3.ab3@16228>    ADD.w #$7080-$200,-6(a4)
0002D1A0 <AmiBlitz3.ab3@16229>  RTS
0002D1A6 <AmiBlitz3.ab3@16232>    MOVE.l destpointer,a0
0002D1AC <AmiBlitz3.ab3@16233>    SUB.l load_var_addr,a0
0002D1B0 <AmiBlitz3.ab3@16234>    CMP.w #4,a0
0002D1B4 <AmiBlitz3.ab3@16235>    BNE 'sub1_l10
0002D1B8 <AmiBlitz3.ab3@16236>    CMP.b #3,d3
0002D1BC <AmiBlitz3.ab3@16237>    BNE 'sub1_lv1
0002D1C2 <AmiBlitz3.ab3@16238>    CLR.l load_var_addr
0002D1C8 <AmiBlitz3.ab3@16239>    ADD.w #$7080-$200,-4(a4)
0002D1CA <AmiBlitz3.ab3@16240>  RTS
0002D1CE <AmiBlitz3.ab3@16243>    CMP.b #2,d3
0002D1D2 <AmiBlitz3.ab3@16244>    BNE 'sub1_l10
0002D1D8 <AmiBlitz3.ab3@16245>    CLR.l load_var_addr
0002D1DE <AmiBlitz3.ab3@16246>    ADD.w #$6040-$200,-4(a4)
0002D1E0 <AmiBlitz3.ab3@16247>  RTS
0002D1E6 <AmiBlitz3.ab3@16250>   MOVE.w regnum,D3
0002D1E8 <AmiBlitz3.ab3@16251>   MOVE.w a1,d1
0002D1EA <AmiBlitz3.ab3@16252>   OR.w D3,D1
0002D1EC <AmiBlitz3.ab3@16253>   ADDQ.w #1,D1
0002D1EE <AmiBlitz3.ab3@16254>   LSL.w #8,D3
0002D1F0 <AmiBlitz3.ab3@16255>   LSL.w #1,D3
0002D1F2 <AmiBlitz3.ab3@16256>   OR.w D3,D1
0002D1F6 <AmiBlitz3.ab3@16257> BRA.w writeword
0002D1F8 <AmiBlitz3.ab3@16261>   MOVEQ #0,d0
0002D1FE <AmiBlitz3.ab3@16262>   MOVE.w regnum,d0
0002D200 <AmiBlitz3.ab3@16263>   ADDQ #1,d0
0002D202 <AmiBlitz3.ab3@16264>   ASL.w #8,d0
0002D204 <AmiBlitz3.ab3@16265>   ASL.w #2,d0
0002D20A <AmiBlitz3.ab3@16266>   MOVE.l #$f2000022,d1                                     ;fpu add
0002D20C <AmiBlitz3.ab3@16267>   OR.l d0,d1
0002D212 <AmiBlitz3.ab3@16268>   MOVE.w regnum,d0
0002D214 <AmiBlitz3.ab3@16269>   ASL.w #7,d0
0002D216 <AmiBlitz3.ab3@16270>   OR.l d0,d1
0002D21A <AmiBlitz3.ab3@16271> BRA.w writelong
0002D220 <AmiBlitz3.ab3@16278>   TST.b iee
0002D224 <AmiBlitz3.ab3@16279>   BNE do_plus_float_fadd1
0002D228 <AmiBlitz3.ab3@16280>   MOVE.w #$FFBE,D1                                         ;#-66,d1 org soruce ;floatadd
0002D22E <AmiBlitz3.ab3@16283>    MOVE.w D1,libjsr+2
0002D232 <AmiBlitz3.ab3@16284>    BSR.w savereg
0002D234 <AmiBlitz3.ab3@16285>   MOVE.l D4,D1
0002D238 <AmiBlitz3.ab3@16286>    BSR.w pokemovem
0002D23C <AmiBlitz3.ab3@16287>   MOVE.w #$C900,D1
0002D240 <AmiBlitz3.ab3@16288>    BSR.w Atokejsr
0002D244 <AmiBlitz3.ab3@16289>    BSR.w ritetod0
0002D24A <AmiBlitz3.ab3@16290>   MOVE.l libjsr,D1
0002D24E <AmiBlitz3.ab3@16291>    BSR.w writelong
0002D252 <AmiBlitz3.ab3@16292>    BSR.w ritefromd0
0002D254 <AmiBlitz3.ab3@16293>   MOVE.l D5,D1
0002D258 <AmiBlitz3.ab3@16294> BRA.w pokemovem
0002D25E <AmiBlitz3.ab3@16298>   MOVE.w regnum,D1
0002D260 <AmiBlitz3.ab3@16299>   LSL.w #8,D1
0002D262 <AmiBlitz3.ab3@16300>   LSL.w #1,D1
0002D264 <AmiBlitz3.ab3@16301>   MOVE.w D1,-(A7)
0002D268 <AmiBlitz3.ab3@16302>   CMP.w #3072,d1
0002D26C <AmiBlitz3.ab3@16303>   BEQ 'l1
0002D272 <AmiBlitz3.ab3@16304>   OR.w addcode,D1                                          ;move.l (a7)+,d0
0002D276 <AmiBlitz3.ab3@16305> BRA 'l2
0002D27A <AmiBlitz3.ab3@16308>    MOVE.w #$588f,d1                                        ;addq.l #4,a7
0002D27E <AmiBlitz3.ab3@16311>    BSR.w writeword
0002D280 <AmiBlitz3.ab3@16312>   MOVE.w (A7)+,D1
0002D286 <AmiBlitz3.ab3@16313>   OR.w addcode+2,D1                                        ;native string add.l d0,(a7)
0002D28A <AmiBlitz3.ab3@16314> BRA.w writeword
0002D28E <AmiBlitz3.ab3@16320>   MOVE.w #$9040,D1
0002D292 <AmiBlitz3.ab3@16321> BRA.w doplus2
0002D296 <AmiBlitz3.ab3@16325>   MOVE.w #$9040,D1
0002D29A <AmiBlitz3.ab3@16326> BRA.w doplus2
0002D29E <AmiBlitz3.ab3@16330>   MOVE.w #$9080,D1
0002D2A2 <AmiBlitz3.ab3@16331> BRA.w doplus2
0002D2A8 <AmiBlitz3.ab3@16335>    TST.b iee
0002D2AC <AmiBlitz3.ab3@16336>     BNE 'fs1
0002D2B0 <AmiBlitz3.ab3@16337>   MOVE.w #$FFB8,D1                                         ;floatsub
0002D2B4 <AmiBlitz3.ab3@16338> BRA.w doflib
0002D2B6 <AmiBlitz3.ab3@16341>   MOVEQ #0,d0
0002D2BC <AmiBlitz3.ab3@16342>   MOVE.w regnum,d0
0002D2BE <AmiBlitz3.ab3@16343>   ADDQ #1,d0
0002D2C0 <AmiBlitz3.ab3@16344>   ASL.w #8,d0
0002D2C2 <AmiBlitz3.ab3@16345>   ASL.w #2,d0
0002D2C8 <AmiBlitz3.ab3@16346>   MOVE.l #$f2000028,d1
0002D2CA <AmiBlitz3.ab3@16347>   OR.l d0,d1
0002D2D0 <AmiBlitz3.ab3@16348>   MOVE.w regnum,d0
0002D2D2 <AmiBlitz3.ab3@16349>   ASL.w #7,d0
0002D2D4 <AmiBlitz3.ab3@16350>   OR.l d0,d1
0002D2D8 <AmiBlitz3.ab3@16351> BRA.w writelong
0002D2DC <AmiBlitz3.ab3@16357>   MOVE.w #$C1C0,D1
0002D2DE <AmiBlitz3.ab3@16358>   MOVEQ.l #$02,D2                                          ;now a word
0002D2E2 <AmiBlitz3.ab3@16359> BRA.w doplus2
0002D2E6 <AmiBlitz3.ab3@16363>   MOVE.w #$C1C0,D1
0002D2E8 <AmiBlitz3.ab3@16364>   MOVEQ.l #$03,D2                                          ;now a long.
0002D2EC <AmiBlitz3.ab3@16365> BRA.w doplus2
0002D2F0 <AmiBlitz3.ab3@16369>   MOVE.w #$CA00,D1                                         ;quickmul
0002D2F4 <AmiBlitz3.ab3@16370> BRA.w domylib
0002D2FA <AmiBlitz3.ab3@16374>   TST.b fast
0002D2FE <AmiBlitz3.ab3@16375>   BNE.s 'l10
0002D302 <AmiBlitz3.ab3@16376>   MOVE.w #$CA01,D1                                         ;writelongmul
0002D306 <AmiBlitz3.ab3@16377> BRA.w domylib
0002D30C <AmiBlitz3.ab3@16386>    MOVE.l destpointer,a0
0002D312 <AmiBlitz3.ab3@16387>    SUB.l imm_addr,a0
0002D316 <AmiBlitz3.ab3@16388>    CMP.w #6,a0
0002D31A <AmiBlitz3.ab3@16389>    BNE 'li1
0002D31C <AmiBlitz3.ab3@16390>    MOVEQ.l #2,d1
0002D31E <AmiBlitz3.ab3@16391>    MOVEQ #1,d3
0002D322 <AmiBlitz3.ab3@16394>   CMP.l -4(a4),d1
0002D326 <AmiBlitz3.ab3@16395>    BEQ 'oklsl
0002D328 <AmiBlitz3.ab3@16396>     LSL.l #1,d1
0002D32E <AmiBlitz3.ab3@16397>     ADD.l #1,d3
0002D334 <AmiBlitz3.ab3@16398>     CMP.l #9,d3
0002D338 <AmiBlitz3.ab3@16399>     BNE 'ag
0002D33C <AmiBlitz3.ab3@16400>    MOVE.w -2(a4),d1
0002D340 <AmiBlitz3.ab3@16401>    BSR writeword
0002D346 <AmiBlitz3.ab3@16402>    MOVE.w -6(a4),-4(a4)
0002D34E <AmiBlitz3.ab3@16403>    MOVE.l #$4c3c0800,-8(a4)
0002D354 <AmiBlitz3.ab3@16404>    MOVE.w regnum,D3
0002D358 <AmiBlitz3.ab3@16405>    MULS #$1000,D3
0002D35C <AmiBlitz3.ab3@16406>    OR.w D3,-6(a4)
0002D362 <AmiBlitz3.ab3@16407>    CLR.l load_var_addr
0002D368 <AmiBlitz3.ab3@16408>    CLR.l imm_addr
0002D36C <AmiBlitz3.ab3@16409> BRA 'li3
0002D370 <AmiBlitz3.ab3@16412>    CMP.w #8,d3
0002D374 <AmiBlitz3.ab3@16413>    BEQ 'ok
0002D376 <AmiBlitz3.ab3@16414>    ASL.l #1,d3
0002D378 <AmiBlitz3.ab3@16415>    ASL.l #8,d3
0002D37C <AmiBlitz3.ab3@16416>    MOVE.w #$e188,d1
0002D37E <AmiBlitz3.ab3@16417>    OR.w d3,d1
0002D382 <AmiBlitz3.ab3@16418>    MOVE.w d1,-6(a4)
0002D386 <AmiBlitz3.ab3@16419> BRA 'okls
0002D38C <AmiBlitz3.ab3@16422>   MOVE.w #$e188,-6(a4)                                     ;lsl.l #,dx
0002D392 <AmiBlitz3.ab3@16425>   MOVE.w regnum,d3
0002D396 <AmiBlitz3.ab3@16426>    OR.b d3,-5(a4)
0002D39C <AmiBlitz3.ab3@16427>    SUBQ.l #4,destpointer
0002D3A2 <AmiBlitz3.ab3@16428>    CLR.l load_var_addr
0002D3A8 <AmiBlitz3.ab3@16429>    CLR.l imm_addr
0002D3AC <AmiBlitz3.ab3@16430> BRA 'li3
0002D3B2 <AmiBlitz3.ab3@16433>    MOVE.l destpointer,a0
0002D3B8 <AmiBlitz3.ab3@16434>    SUB.l load_var_addr,a0
0002D3BC <AmiBlitz3.ab3@16435>    CMP.w #4,a0
0002D3C0 <AmiBlitz3.ab3@16436>    BNE 'li2
0002D3C4 <AmiBlitz3.ab3@16437>    MOVE.w -2(a4),d1
0002D3C8 <AmiBlitz3.ab3@16438>    BSR writeword
0002D3CE <AmiBlitz3.ab3@16439>    MOVE.b #$4c,-6(a4)
0002D3D4 <AmiBlitz3.ab3@16440>    MOVE.w #$0800,-4(a4)
0002D3DA <AmiBlitz3.ab3@16441>    MOVE.w regnum,D3
0002D3DE <AmiBlitz3.ab3@16442>    MULS #$1000,d3
0002D3E2 <AmiBlitz3.ab3@16443>    OR.w D3,-4(a4)
0002D3E6 <AmiBlitz3.ab3@16444> BRA 'li3
0002D3EC <AmiBlitz3.ab3@16447>    MOVE.l #$4c010800,d1
0002D3F2 <AmiBlitz3.ab3@16448>    MOVE.w regnum,D3
0002D3F4 <AmiBlitz3.ab3@16449>    EXT.l d3
0002D3F8 <AmiBlitz3.ab3@16450>    MULS #$1000,d3
0002D3FA <AmiBlitz3.ab3@16451>    OR.w D3,d1
0002D3FE <AmiBlitz3.ab3@16452>    MULS #$10,d3
0002D400 <AmiBlitz3.ab3@16453>    ADD.l d3,d1
0002D404 <AmiBlitz3.ab3@16454>    BSR writelong
0002D406 <AmiBlitz3.ab3@16459> RTS
0002D408 <AmiBlitz3.ab3@16463>   MOVE.w D1,-(A7)
0002D40C <AmiBlitz3.ab3@16464>    BSR.w savereg
0002D40E <AmiBlitz3.ab3@16465>   MOVE.l D4,D1
0002D412 <AmiBlitz3.ab3@16466>    BSR.w pokemovem
0002D416 <AmiBlitz3.ab3@16467>    BSR.w ritetod0
0002D418 <AmiBlitz3.ab3@16468>   MOVEQ #0,d1
0002D41A <AmiBlitz3.ab3@16469>   MOVE.w (A7)+,D1
0002D420 <AmiBlitz3.ab3@16470>   MOVE.l d1,lastinstruction
0002D424 <AmiBlitz3.ab3@16471>    BSR.w Atokejsr
0002D428 <AmiBlitz3.ab3@16472>    BSR.w ritefromd0
0002D42A <AmiBlitz3.ab3@16473>   MOVE.l D5,D1
0002D42E <AmiBlitz3.ab3@16474> BRA.w pokemovem
0002D434 <AmiBlitz3.ab3@16478>    TST.b iee
0002D438 <AmiBlitz3.ab3@16479>     BNE fm1
0002D43C <AmiBlitz3.ab3@16480>  MOVE.w #$FFB2,D1                                          ;floatmul
0002D440 <AmiBlitz3.ab3@16481> BRA.w doflib
0002D442 <AmiBlitz3.ab3@16484>   MOVEQ #0,d0
0002D448 <AmiBlitz3.ab3@16485>  MOVE.w regnum,d0
0002D44A <AmiBlitz3.ab3@16486>  ADDQ #1,d0
0002D44C <AmiBlitz3.ab3@16487>  ASL.w #8,d0
0002D44E <AmiBlitz3.ab3@16488>  ASL.w #2,d0
0002D454 <AmiBlitz3.ab3@16489>  MOVE.l #$f2000023,d1
0002D456 <AmiBlitz3.ab3@16490>  OR.l d0,d1
0002D45C <AmiBlitz3.ab3@16491>  MOVE.w regnum,d0
0002D45E <AmiBlitz3.ab3@16492>  ASL.w #7,d0
0002D460 <AmiBlitz3.ab3@16493>  OR.l d0,d1
0002D464 <AmiBlitz3.ab3@16494> BRA.w writelong
0002D466 <AmiBlitz3.ab3@16498>   MOVE.w D2,-(A7)                                          ;dopow
0002D468 <AmiBlitz3.ab3@16499>   MOVE.w D2,D3
0002D46A <AmiBlitz3.ab3@16500>   MOVEQ.l #$05,D2
0002D46E <AmiBlitz3.ab3@16501>    BSR.w convtypef
0002D474 <AmiBlitz3.ab3@16502>   ADDQ.w #1,regnum
0002D476 <AmiBlitz3.ab3@16503>   MOVE.w (A7)+,D3
0002D478 <AmiBlitz3.ab3@16504>   MOVEQ.l #$05,D2
0002D47C <AmiBlitz3.ab3@16505>    BSR.w writeconvertcode
0002D482 <AmiBlitz3.ab3@16506>   SUBQ.w #1,regnum
0002D486 <AmiBlitz3.ab3@16507>    BSR.w nocando
0002D48C <AmiBlitz3.ab3@16508>    TST.b fpu
0002D490 <AmiBlitz3.ab3@16509>    BEQ 'old
0002D492 <AmiBlitz3.ab3@16510>    MOVEQ #0,d1
0002D498 <AmiBlitz3.ab3@16511>    MOVE.w regnum,d1
0002D49A <AmiBlitz3.ab3@16512>   MOVE.l d1,d0
0002D49C <AmiBlitz3.ab3@16513>   ASL.w #7,d1
0002D49E <AmiBlitz3.ab3@16514>   ASL.w #8,d0
0002D4A0 <AmiBlitz3.ab3@16515>   ASL.w #2,d0
0002D4A2 <AmiBlitz3.ab3@16516>   OR.w d0,d1
0002D4A4 <AmiBlitz3.ab3@16517>   MOVE.l d1,-(a7)
0002D4AA <AmiBlitz3.ab3@16519>    OR.l #$f2000016,d1                                       ;flog2.x fp0      ;fpu ^ pow
0002D4AE <AmiBlitz3.ab3@16520>    BSR writelong
0002D4B4 <AmiBlitz3.ab3@16521>    MOVE.w regnum,d0
0002D4B6 <AmiBlitz3.ab3@16522>  ADDQ #1,d0
0002D4B8 <AmiBlitz3.ab3@16523>  ASL.w #8,d0
0002D4BA <AmiBlitz3.ab3@16524>  ASL.w #2,d0
0002D4C0 <AmiBlitz3.ab3@16525>  MOVE.l #$f2000023,d1
0002D4C2 <AmiBlitz3.ab3@16526>  OR.l d0,d1
0002D4C8 <AmiBlitz3.ab3@16527>  MOVE.w regnum,d0
0002D4CA <AmiBlitz3.ab3@16528>  ASL.w #7,d0
0002D4CC <AmiBlitz3.ab3@16529>  OR.l d0,d1
0002D4D2 <AmiBlitz3.ab3@16530>    OR.l #$f2000023,d1                                      ;fmulx.x fp1,fp0
0002D4D6 <AmiBlitz3.ab3@16531>    BSR writelong
0002D4D8 <AmiBlitz3.ab3@16532>    MOVE.l (a7)+,d1
0002D4DE <AmiBlitz3.ab3@16534>    OR.l #$f2000011,d1                                      ;ftwotox.x fp0
0002D4E2 <AmiBlitz3.ab3@16535>    BSR writelong
0002D4E4 <AmiBlitz3.ab3@16536> RTS
0002D4E8 <AmiBlitz3.ab3@16539>   MOVE.w #$6001,D1
0002D4EC <AmiBlitz3.ab3@16540> BRA.w domylib
0002D4F0 <AmiBlitz3.ab3@16546>   MOVEA.l forthsp(PC),A0
0002D4F4 <AmiBlitz3.ab3@16547>   MOVE.w #$FFFF,-(A0)                                      ;#-1,-(a0) org source
0002D4F6 <AmiBlitz3.ab3@16548> RTS
0002D4FA <AmiBlitz3.ab3@16554>   MOVE.w #$D400,D1
0002D4FE <AmiBlitz3.ab3@16555> BRA.w domylib
0002D502 <AmiBlitz3.ab3@16559>   MOVE.w #$D401,D1
0002D506 <AmiBlitz3.ab3@16560> BRA.w domylib
0002D50A <AmiBlitz3.ab3@16564>    BSR.w nocando                                           ;modlib uses an alibjsr here!
0002D50E <AmiBlitz3.ab3@16565>   MOVE.w #$D402,D1
0002D512 <AmiBlitz3.ab3@16566> BRA.w domylib
0002D516 <AmiBlitz3.ab3@16570>   MOVE.w #$D403,D1
0002D518 <AmiBlitz3.ab3@16571>   MOVEQ.l #$02,D2                                          ;now a word.
0002D51C <AmiBlitz3.ab3@16572> BRA.w domylib
0002D520 <AmiBlitz3.ab3@16576>    BSR.w nocando                                           ;modlib lib uses an alibjsr!  ;domod float
0002D526 <AmiBlitz3.ab3@16577>   TST.b fpu
0002D52A <AmiBlitz3.ab3@16578>   BEQ 'old
0002D52C <AmiBlitz3.ab3@16579>   MOVEQ #0,d1
0002D532 <AmiBlitz3.ab3@16580>   MOVE.w regnum,d1                                         ;fpu mod
0002D534 <AmiBlitz3.ab3@16581>   MOVE.l d1,d0
0002D536 <AmiBlitz3.ab3@16582>   ADDQ.l #1,d1
0002D538 <AmiBlitz3.ab3@16583>   ASL.l #7,d0
0002D53A <AmiBlitz3.ab3@16584>   ASL.l #8,d1
0002D53C <AmiBlitz3.ab3@16585>   ASL.l #2,d1
0002D53E <AmiBlitz3.ab3@16586>   OR.l d0,d1
0002D540 <AmiBlitz3.ab3@16587>   MOVE.l d0,-(a7)
0002D546 <AmiBlitz3.ab3@16588>   OR.l #$f2000021,d1
0002D54A <AmiBlitz3.ab3@16589>   BSR writelong
0002D54C <AmiBlitz3.ab3@16590>   MOVE.l (a7)+,d0
0002D54E <AmiBlitz3.ab3@16591>  RTS
0002D552 <AmiBlitz3.ab3@16594>   MOVE.w #$D404,D1
0002D554 <AmiBlitz3.ab3@16595>   MOVEQ.l #$03,D2                                          ;now a long
0002D558 <AmiBlitz3.ab3@16596> BRA.w domylib
0002D55C <AmiBlitz3.ab3@16604>   MOVE.w #$48C0,D1
0002D562 <AmiBlitz3.ab3@16605>   OR.w regnum,D1
0002D566 <AmiBlitz3.ab3@16606>    BSR.w writeword
0002D568 <AmiBlitz3.ab3@16607>   ADDQ.w #1,D1
0002D56C <AmiBlitz3.ab3@16608>    BSR.w writeword
0002D570 <AmiBlitz3.ab3@16611>    MOVE.w #$48C0,D1
0002D576 <AmiBlitz3.ab3@16612>   OR.w regnum,D1
0002D57A <AmiBlitz3.ab3@16613>    BSR.w writeword
0002D57E <AmiBlitz3.ab3@16614>   MOVE.w #$81C0,D1
0002D582 <AmiBlitz3.ab3@16615> BRA.w doplus2
0002D588 <AmiBlitz3.ab3@16619>   TST.b fast
0002D58C <AmiBlitz3.ab3@16620>   BNE.s 'l10
0002D590 <AmiBlitz3.ab3@16621>   MOVE.w #$CB01,D1
0002D594 <AmiBlitz3.ab3@16622> BRA.w domylib
0002D598 <AmiBlitz3.ab3@16628>   BSR.w savereg
0002D59A <AmiBlitz3.ab3@16629>   MOVE.l D4,D1
0002D59E <AmiBlitz3.ab3@16630>    BSR.w pokemovem
0002D5A2 <AmiBlitz3.ab3@16631>    BSR.w ritetod0
0002D5A8 <AmiBlitz3.ab3@16645>    MOVE.l #$4c410800,d1
0002D5AC <AmiBlitz3.ab3@16646>    BSR writelong
0002D5B0 <AmiBlitz3.ab3@16649>   MOVE.w #$4e71,d1
0002D5B4 <AmiBlitz3.ab3@16651>    BSR.w ritefromd0
0002D5B6 <AmiBlitz3.ab3@16652>   MOVE.l D5,D1
0002D5BA <AmiBlitz3.ab3@16653> BRA.w pokemovem
0002D5BE <AmiBlitz3.ab3@16656>     CMP.w #8,d3
0002D5C2 <AmiBlitz3.ab3@16657>     BEQ 'ok
0002D5C4 <AmiBlitz3.ab3@16658>     ASL.l #1,d3
0002D5C6 <AmiBlitz3.ab3@16659>     ASL.l #8,d3
0002D5CA <AmiBlitz3.ab3@16660>     MOVE.w #$e080,d1
0002D5CC <AmiBlitz3.ab3@16661>     OR.w d3,d1
0002D5D0 <AmiBlitz3.ab3@16662> BRA 'oklsr2
0002D5D4 <AmiBlitz3.ab3@16665>   MOVE.w #$e080,d1                                         ;lsr.l #,dx
0002D5DA <AmiBlitz3.ab3@16668>      SUBQ.l #6,destpointer
0002D5DE <AmiBlitz3.ab3@16669>      BSR writeword
0002D5E0 <AmiBlitz3.ab3@16670>      MOVE.l (a7)+,d3
0002D5E2 <AmiBlitz3.ab3@16671>      MOVEQ #0,d1
0002D5E8 <AmiBlitz3.ab3@16672>      CLR.l load_var_addr
0002D5EE <AmiBlitz3.ab3@16673>      CLR.l imm_addr
0002D5F2 <AmiBlitz3.ab3@16674> BRA pokemovem
0002D5F6 <AmiBlitz3.ab3@16678>   MOVE.w #$CB00,D1                                         ;quickdiv
0002D5FA <AmiBlitz3.ab3@16679> BRA.w domylib
0002D600 <AmiBlitz3.ab3@16683>    TST.b iee
0002D604 <AmiBlitz3.ab3@16684>    BNE fdiv1
0002D608 <AmiBlitz3.ab3@16685>    MOVE.w #$FFAC,D1                                        ;floatdiv
0002D60C <AmiBlitz3.ab3@16686> BRA.w doflib
0002D60E <AmiBlitz3.ab3@16690>   MOVEQ #0,d0
0002D614 <AmiBlitz3.ab3@16691>   MOVE.w regnum,d0
0002D616 <AmiBlitz3.ab3@16692>   ADDQ #1,d0
0002D618 <AmiBlitz3.ab3@16693>   ASL.w #8,d0
0002D61A <AmiBlitz3.ab3@16694>   ASL.w #2,d0
0002D620 <AmiBlitz3.ab3@16695>   MOVE.l #$f2000020,d1                                     ;fpu div
0002D622 <AmiBlitz3.ab3@16696>   OR.l d0,d1
0002D628 <AmiBlitz3.ab3@16697>   MOVE.w regnum,d0
0002D62A <AmiBlitz3.ab3@16698>   ASL.w #7,d0
0002D62C <AmiBlitz3.ab3@16699>   OR.l d0,d1
0002D630 <AmiBlitz3.ab3@16700> BRA.w writelong
0002D634 <AmiBlitz3.ab3@16704>   MOVE.w #$C000,D1
0002D638 <AmiBlitz3.ab3@16705> BRA.w doplus2
0002D63C <AmiBlitz3.ab3@16709>   MOVE.w #$C040,D1
0002D640 <AmiBlitz3.ab3@16710> BRA.w doplus2
0002D644 <AmiBlitz3.ab3@16714>   MOVE.w #$C080,D1
0002D648 <AmiBlitz3.ab3@16715> BRA.w doplus2
0002D64C <AmiBlitz3.ab3@16719>   MOVE.w #$8000,D1
0002D650 <AmiBlitz3.ab3@16720> BRA.w doplus2
0002D654 <AmiBlitz3.ab3@16724>   MOVE.w #$8040,D1
0002D658 <AmiBlitz3.ab3@16725> BRA.w doplus2
0002D65C <AmiBlitz3.ab3@16729>   MOVE.w #$8080,D1
0002D660 <AmiBlitz3.ab3@16730> BRA.w doplus2
0002D664 <AmiBlitz3.ab3@16734>   MOVE.w #$B100,D1
0002D66A <AmiBlitz3.ab3@16737>    MOVE.w regnum,D3
0002D66C <AmiBlitz3.ab3@16738>   OR.w D3,D1
0002D66E <AmiBlitz3.ab3@16739>   ADDQ.w #1,D3
0002D670 <AmiBlitz3.ab3@16740>   LSL.w #8,D3
0002D672 <AmiBlitz3.ab3@16741>   LSL.w #1,D3
0002D674 <AmiBlitz3.ab3@16742>   OR.w D3,D1
0002D678 <AmiBlitz3.ab3@16743> BRA.w writeword
0002D67C <AmiBlitz3.ab3@16747>   MOVE.w #$B140,D1
0002D680 <AmiBlitz3.ab3@16748> BRA.w doeor2
0002D684 <AmiBlitz3.ab3@16752>   MOVE.w #$B180,D1
0002D688 <AmiBlitz3.ab3@16753> BRA.w doeor2
0002D68C <AmiBlitz3.ab3@16757>   MOVE.w #$E1A8,D1
0002D690 <AmiBlitz3.ab3@16758> BRA.w shpoke
0002D694 <AmiBlitz3.ab3@16762>   MOVE.w #$E0A8,D1
0002D698 <AmiBlitz3.ab3@16763> BRA.w shpoke
0002D69C <AmiBlitz3.ab3@16767>   MOVE.w #$E0A0,D1
0002D6A0 <AmiBlitz3.ab3@16768> BRA.w shpoke
0002D6A2 <AmiBlitz3.ab3@16772>   MOVE.w D1,-(A7)
0002D6A8 <AmiBlitz3.ab3@16773>   ADDQ.w #1,regnum   ;make second a word!
0002D6AA <AmiBlitz3.ab3@16774>   MOVE.w D2,-(A7)
0002D6AC <AmiBlitz3.ab3@16775>   MOVE.w D2,D3
0002D6AE <AmiBlitz3.ab3@16776>   MOVEQ.l #$02,D2
0002D6B2 <AmiBlitz3.ab3@16783>    BSR.w writeconvertcode
0002D6B4 <AmiBlitz3.ab3@16787>   MOVE.w (A7)+,D2     ;type
0002D6BA <AmiBlitz3.ab3@16788>   SUBQ.w #1,regnum
0002D6BE <AmiBlitz3.ab3@16789>   CMP.w #$4,D2        ;don't fuck with quix
0002D6C2 <AmiBlitz3.ab3@16790>    BEQ.w 'skip
0002D6C4 <AmiBlitz3.ab3@16791>   MOVE.w D2,D3
0002D6C6 <AmiBlitz3.ab3@16792>   MOVEQ.l #$03,D2
0002D6CA <AmiBlitz3.ab3@16793>    BSR.w convtypef    ;make first (and current) a long
0002D6CC <AmiBlitz3.ab3@16796>    MOVE.w (A7)+,D1
0002D6D2 <AmiBlitz3.ab3@16798>   MOVE.w regnum,D3
0002D6D4 <AmiBlitz3.ab3@16799>   OR.w D3,D1
0002D6D6 <AmiBlitz3.ab3@16800>   ADDQ.w #1,D3
0002D6D8 <AmiBlitz3.ab3@16801>   LSL.w #8,D3
0002D6DA <AmiBlitz3.ab3@16802>   LSL.w #1,D3
0002D6DC <AmiBlitz3.ab3@16803>   OR.w D3,D1
0002D6E0 <AmiBlitz3.ab3@16804> BRA.w writeword
0002D6E4 <AmiBlitz3.ab3@16808>   MOVE.w #$0100,D1
0002D6E8 <AmiBlitz3.ab3@16809>    BSR.w dothebit
0002D6EE <AmiBlitz3.ab3@16811>   MOVE.w regnum,D1
0002D6F2 <AmiBlitz3.ab3@16812>   ORI.w #$56C0,D1    ;sne regat
0002D6F6 <AmiBlitz3.ab3@16813>    BSR.w writeword
0002D6FC <AmiBlitz3.ab3@16815>   MOVE.w regnum,D1
0002D700 <AmiBlitz3.ab3@16816>   ORI.w #$4880,D1    ;ext.w D regat
0002D704 <AmiBlitz3.ab3@16817>    BSR.w writeword
0002D706 <AmiBlitz3.ab3@16819>   MOVEQ.l #$02,D2    ;type now WORD!
0002D708 <AmiBlitz3.ab3@16820> RTS
0002D70C <AmiBlitz3.ab3@16824>   MOVE.w #$01C0,D1
0002D710 <AmiBlitz3.ab3@16827>    BSR.w dothebit
0002D712 <AmiBlitz3.ab3@16829>   MOVEQ.l #$03,D2    ;type now LONG!
0002D714 <AmiBlitz3.ab3@16830> RTS
0002D718 <AmiBlitz3.ab3@16834>   MOVE.w #$0180,D1
0002D71C <AmiBlitz3.ab3@16835> BRA.w dothemip
0002D720 <AmiBlitz3.ab3@16839>   MOVE.w #$0140,D1
0002D724 <AmiBlitz3.ab3@16840> BRA.w dothemip
0002D726 <AmiBlitz3.ab3@16844>   MOVE.w D1,-(A7)
0002D728 <AmiBlitz3.ab3@16848>   MOVE.w D2,-(A7)
0002D72A <AmiBlitz3.ab3@16849>   MOVE.w D2,D3
0002D72C <AmiBlitz3.ab3@16850>   MOVEQ.l #$03,D2         ;first to long!
0002D730 <AmiBlitz3.ab3@16851>    BSR.w convtypef
0002D732 <AmiBlitz3.ab3@16853>   MOVE.w (A7)+,D3
0002D734 <AmiBlitz3.ab3@16854>   MOVEQ.l #$01,D2         ;second to byte!
0002D73A <AmiBlitz3.ab3@16855>   ADDQ.w #1,regnum
0002D73E <AmiBlitz3.ab3@16856>    BSR.w writeconvertcode
0002D744 <AmiBlitz3.ab3@16857>   SUBQ.w #1,regnum
0002D74A <AmiBlitz3.ab3@16859>   MOVE.w regnum,D1
0002D74C <AmiBlitz3.ab3@16860>   MOVE.w D1,D2
0002D74E <AmiBlitz3.ab3@16861>   ADDQ.w #1,D2
0002D750 <AmiBlitz3.ab3@16862>   LSL.w #8,D2
0002D752 <AmiBlitz3.ab3@16863>   LSL.w #1,D2
0002D754 <AmiBlitz3.ab3@16864>   OR.w (A7)+,D1
0002D756 <AmiBlitz3.ab3@16865>   OR.w D2,D1
0002D75A <AmiBlitz3.ab3@16866> BRA.w writeword        ;btst regat+1,regat
0002D760 <AmiBlitz3.ab3@16872>   MOVE.w regnum,D1
0002D764 <AmiBlitz3.ab3@16873>    BEQ.w 'skip
0002D768 <AmiBlitz3.ab3@16874>   ORI.w #$2000,D1
0002D76C <AmiBlitz3.ab3@16875>    BSR.w writeword
0002D770 <AmiBlitz3.ab3@16876>   ADDI.w #$201,D1
0002D774 <AmiBlitz3.ab3@16877>    BSR.w writeword
0002D776 <AmiBlitz3.ab3@16880> RTS
0002D77C <AmiBlitz3.ab3@16886>   MOVE.w regnum,D1
0002D780 <AmiBlitz3.ab3@16887>    BEQ.w 'skip
0002D782 <AmiBlitz3.ab3@16888>   LSL.w #8,D1
0002D784 <AmiBlitz3.ab3@16889>   LSL.w #1,D1
0002D788 <AmiBlitz3.ab3@16890>   ORI.w #$2000,D1
0002D78C <AmiBlitz3.ab3@16891>    BSR.w writeword
0002D78E <AmiBlitz3.ab3@16894> RTS
0002D794 <AmiBlitz3.ab3@16899>    CLR.b isconstantvalue
0002D79A <AmiBlitz3.ab3@16900>    CLR.l lastconstantvalue
0002D7A2 <AmiBlitz3.ab3@16902>    CMPI.w #$7,regnum
0002D7A6 <AmiBlitz3.ab3@16903>    BCS.w getelement2
0002D7AC <AmiBlitz3.ab3@16905>   MOVE.l #$f2277700,d1                                     ;fmove.d fp6,-(a7)
0002D7B0 <AmiBlitz3.ab3@16906>   BSR writelong
0002D7B4 <AmiBlitz3.ab3@16907>   MOVE.w #$2F06,D1                                         ;d6 to stack
0002D7B8 <AmiBlitz3.ab3@16910>   CMP.w #$3,D2
0002D7BC <AmiBlitz3.ab3@16911>    BCS.w 'skip
0002D7C0 <AmiBlitz3.ab3@16912>   MOVE.w #$2F06,D1
0002D7C4 <AmiBlitz3.ab3@16915>   BSR.w writeword
0002D7C6 <AmiBlitz3.ab3@16916>   MOVE.w D1,-(A7)
0002D7CC <AmiBlitz3.ab3@16918>   SUBQ.w #1,regnum
0002D7D0 <AmiBlitz3.ab3@16919>    BSR.w getelement2
0002D7D6 <AmiBlitz3.ab3@16920>   ADDQ.w #1,regnum
0002D7DC <AmiBlitz3.ab3@16923>   MOVE.l #$f2001b80,d1
0002D7E0 <AmiBlitz3.ab3@16924>   BSR writelong
0002D7E4 <AmiBlitz3.ab3@16926>   MOVE.w #$3E06,D1
0002D7E8 <AmiBlitz3.ab3@16927>   CMP.w #$3,D2
0002D7EC <AmiBlitz3.ab3@16928>    BCS.w 'skip2
0002D7F0 <AmiBlitz3.ab3@16929>   MOVE.w #$2E06,D1
0002D7F4 <AmiBlitz3.ab3@16932>   BSR.w writeword
0002D7F6 <AmiBlitz3.ab3@16934>   MOVE.w (A7)+,D1
0002D7FA <AmiBlitz3.ab3@16935>   ANDI.w #$F000,D1
0002D7FE <AmiBlitz3.ab3@16936>   ORI.w #$C1F,D1
0002D804 <AmiBlitz3.ab3@16937>   JSR writeword
0002D80A <AmiBlitz3.ab3@16939>   MOVE.l #$f21f5700,d1                                     ;fmove.d (a7)+,fp6
0002D80E <AmiBlitz3.ab3@16940> BRA writelong
0002D812 <AmiBlitz3.ab3@16945>   BSR.w getelement2
0002D816 <AmiBlitz3.ab3@16946>   MOVE.w #$4440,D1
0002D81A <AmiBlitz3.ab3@16947>   CMP.w #$3,D2
0002D81E <AmiBlitz3.ab3@16948>    BCS.w 'doneg
0002D822 <AmiBlitz3.ab3@16949>   MOVE.w #$4480,D1
0002D826 <AmiBlitz3.ab3@16950>   CMP.w #$5,D2
0002D82A <AmiBlitz3.ab3@16951>    BCS.w 'doneg
0002D82E <AmiBlitz3.ab3@16952>   CMP.w #$6,D2
0002D832 <AmiBlitz3.ab3@16953>    BCC.w illoperr
0002D836 <AmiBlitz3.ab3@16954>   MOVE.w #$FFC4,D1   ; was -60
0002D83A <AmiBlitz3.ab3@16955>  BRA.w fdo2
0002D840 <AmiBlitz3.ab3@16958>   OR.w regnum,D1                                           ;negate
0002D846 <AmiBlitz3.ab3@16960>   CLR.l imm_addr
0002D84A <AmiBlitz3.ab3@16962> BRA.w writeword
0002D84E <AmiBlitz3.ab3@16966>    BSR.w eval4
0002D852 <AmiBlitz3.ab3@16967>   CMP.w #")",D0
0002D856 <AmiBlitz3.ab3@16968>    BEQ.w 'done
0002D85A <AmiBlitz3.ab3@16969>   CMP.w #"}",D0
0002D85E <AmiBlitz3.ab3@16970>    BNE.w brackets_                                         ;syntax error brackets
0002D862 <AmiBlitz3.ab3@16973> BRA.w get1bytemain
0002D866 <AmiBlitz3.ab3@16979>    BSR.w eval4
0002D86A <AmiBlitz3.ab3@16980>   CMP.w #$5,D2
0002D86E <AmiBlitz3.ab3@16981>    BCC.w illoperr
0002D874 <AmiBlitz3.ab3@16982>   MOVE.w regnum,D1
0002D878 <AmiBlitz3.ab3@16983>   ORI.w #$4640,D1     ;not.w
0002D87C <AmiBlitz3.ab3@16984>   CMP.w #$3,D2
0002D880 <AmiBlitz3.ab3@16985>    BCS.w writeword
0002D884 <AmiBlitz3.ab3@16986>   EORI.w #$C0,D1
0002D888 <AmiBlitz3.ab3@16987> BRA.w writeword
0002D88A <AmiBlitz3.ab3@16991>   MOVEQ.l #$05,D2         ;return Pi.;move.l #x,dnf
0002D890 <AmiBlitz3.ab3@16993>    TST.b fpu
0002D894 <AmiBlitz3.ab3@16994>   BEQ 'old
0002D89A <AmiBlitz3.ab3@16995> JMP fpupi
0002D8A0 <AmiBlitz3.ab3@16999>   MOVE.w regnum,D1
0002D8A2 <AmiBlitz3.ab3@17000>   LSL.w #8,D1
0002D8A4 <AmiBlitz3.ab3@17001>   LSL.w #1,D1
0002D8A8 <AmiBlitz3.ab3@17002>   ORI.w #$203C,D1
0002D8AC <AmiBlitz3.ab3@17003>    BSR.w writeword      ;move.l #x,dn
0002D8B2 <AmiBlitz3.ab3@17004>   MOVE.l #$C90FDA42,D1
0002D8B6 <AmiBlitz3.ab3@17005>    BSR.w writelong
0002D8BA <AmiBlitz3.ab3@17006> BRA.w get1bytemain
0002D9B6 <AmiBlitz3.ab3@17014> forthstack:  Ds.l 63                                       ;ds.b  18*32 org source
0002DAB2 <AmiBlitz3.ab3@17015>              Ds.l 63
0002DAFA <AmiBlitz3.ab3@17016>              Ds.l 18
0002DAFE <AmiBlitz3.ab3@17017> forthsp:     Dc.l forthstack
0002DB04 <AmiBlitz3.ab3@17020> JUMP_checkcast     JMP checkcast
0002DB0A <AmiBlitz3.ab3@17021> JUMP_syntaxerropt4 JMP syntaxerropt4
0002DB36 <AmiBlitz3.ab3@17029>    !fget
0002DB3A <AmiBlitz3.ab3@17030>    CMP.b #$7e,d0
0002DB3E <AmiBlitz3.ab3@17031>    BNE 'noc
0002DB40 <AmiBlitz3.ab3@17032>    SUBQ.l #1,a5
0002DB44 <AmiBlitz3.ab3@17033>    BSR get1bytemain
0002DB48 <AmiBlitz3.ab3@17036>    CMP.b #"#",d0
0002DB4C <AmiBlitz3.ab3@17037>    BNE 'ld1
0002DB50 <AmiBlitz3.ab3@17038>    CMP.b #$22,(a5)
0002DB54 <AmiBlitz3.ab3@17039>    BNE 'ld1
0002DB5A <AmiBlitz3.ab3@17040>    JSR addimmi
0002DB5E <AmiBlitz3.ab3@17043>    CMP.b #$22,d0
0002DB62 <AmiBlitz3.ab3@17044>    BNE 'l11
0002DB68 <AmiBlitz3.ab3@17054>    NOT.w instringon
0002DB6A <AmiBlitz3.ab3@17057>    TST.b d0
0002DB6E <AmiBlitz3.ab3@17058>    BPL 'l10
0002DB70 <AmiBlitz3.ab3@17059>    LSL.w #8,d0
0002DB72 <AmiBlitz3.ab3@17060>    MOVE.b (a5)+,d0                      ; get blitzlib instruction with returnvalue(called in functions/statement)
0002DB78 <AmiBlitz3.ab3@17061>    MOVE.l d0,lasttoken
0002DB7E <AmiBlitz3.ab3@17062>    MOVE.w d0,lastchar
0002DB84 <AmiBlitz3.ab3@17063>    CLR.l rightsidetype                  ; blitzlibs do currently no type check
0002DB8A <AmiBlitz3.ab3@17064>    CLR.w rightsideflagmask
0002DB8E <AmiBlitz3.ab3@17068>   CMP.w #"(",D0
0002DB92 <AmiBlitz3.ab3@17069>    BEQ.w JUMP_checkcast                 ; was  beq bracket org source
0002DB96 <AmiBlitz3.ab3@17074>   CMP.w #"{",D0
0002DB9A <AmiBlitz3.ab3@17075>    BEQ.w bracket
0002DB9E <AmiBlitz3.ab3@17076>   CMP.w #$2D,D0         ;'-'
0002DBA2 <AmiBlitz3.ab3@17077>    BEQ.w negate
0002DBA6 <AmiBlitz3.ab3@17078>   CMP.w #-$7F77,D0      ; was #(opnot-opabcd)/$1c+$8000+fnum,
0002DBAA <AmiBlitz3.ab3@17079>    BEQ.w notit
0002DBAE <AmiBlitz3.ab3@17081>   MOVEA.l forthsp(PC),A1
0002DBB4 <AmiBlitz3.ab3@17082>   CMPA.l #forthsp,A1
0002DBB8 <AmiBlitz3.ab3@17083>    BCC.w conmemerr
0002DBBE <AmiBlitz3.ab3@17085>   MOVE.l destpointer,(A1)+
0002DBC4 <AmiBlitz3.ab3@17086>   MOVE.l hunkoffsetbase,(A1)+
0002DBCA <AmiBlitz3.ab3@17087>   MOVE.l lasta6,(A1)+
0002DBD0 <AmiBlitz3.ab3@17088>   MOVE.w lasta6,(A1)+
0002DBD2 <AmiBlitz3.ab3@17089>   CLR.w (A1)+
0002DBD4 <AmiBlitz3.ab3@17091>   CLR.w (A1)+
0002DBDA <AmiBlitz3.ab3@17092>   MOVE.l A1,forthsp
0002DBEC <AmiBlitz3.ab3@17098>    !compare2
0002DBF0 <AmiBlitz3.ab3@17100>    BEQ.w fetchnum
0002DBF4 <AmiBlitz3.ab3@17101>   CMP.w #".",D0
0002DBF8 <AmiBlitz3.ab3@17102>    BEQ.w fetchfrac
0002DBFC <AmiBlitz3.ab3@17103>   CMP.w #"#",D0
0002DC00 <AmiBlitz3.ab3@17104>    BEQ.w get_constant
0002DC04 <AmiBlitz3.ab3@17105>   CMP.w #"$",D0
0002DC08 <AmiBlitz3.ab3@17106>    BEQ.w get_hexconstant
0002DC0C <AmiBlitz3.ab3@17107>   CMP.w #"%",D0
0002DC10 <AmiBlitz3.ab3@17108>    BEQ.w fetchbin
0002DC14 <AmiBlitz3.ab3@17109>   CMP.w #-$7FD1,D0    ; was #$8000+47,
0002DC18 <AmiBlitz3.ab3@17110>    BEQ.w fetchsize
0002DC1C <AmiBlitz3.ab3@17111>   CMP.w #-$7F46,D0    ; was #$8007+tnum,
0002DC20 <AmiBlitz3.ab3@17112>    BEQ.w fetchpi
0002DC24 <AmiBlitz3.ab3@17113>   CMP.w #-$7F3B,D0    ; was #$8000+tnum+18,
0002DC28 <AmiBlitz3.ab3@17114>    BEQ.w fetchon
0002DC2C <AmiBlitz3.ab3@17115>   CMP.w #-$7F3A,D0    ; was #$8000+tnum+19,
0002DC30 <AmiBlitz3.ab3@17116>    BEQ.w fetchoff
0002DC36 <AmiBlitz3.ab3@17118>   MOVE.w constmode,D1
0002DC3A <AmiBlitz3.ab3@17119>    BEQ.w 'noasm
0002DC5C <AmiBlitz3.ab3@17121>    !compare1                                               ;bsr.w tstalpha
0002DC60 <AmiBlitz3.ab3@17123>    BEQ.w fetchasm
0002DC64 <AmiBlitz3.ab3@17124>   CMP.w #$5F,D0     ;'_'
0002DC68 <AmiBlitz3.ab3@17125>    BEQ.w fetchasm
0002DC6C <AmiBlitz3.ab3@17126>   CMP.w #$22,D0     ;'"'
0002DC70 <AmiBlitz3.ab3@17127>    BEQ.w fetchqasm
0002DC74 <AmiBlitz3.ab3@17129>  BRA.w syntaxerr
0002DC7A <AmiBlitz3.ab3@17132>   MOVE.w cfetchmode,D1
0002DC7E <AmiBlitz3.ab3@17133>   BEQ.w 'asmok
0002DC82 <AmiBlitz3.ab3@17134>  BRA.w badconerr       ;we're trying to get a const here! 
0002DC84 <AmiBlitz3.ab3@17137>   NOT.w -(A1)    ;set forth stack type to non-const
0002DCA6 <AmiBlitz3.ab3@17142>   !compare1                                                ;bsr.w tstalpha
0002DCAA <AmiBlitz3.ab3@17144>    BEQ.w variable
0002DCAE <AmiBlitz3.ab3@17145>   CMP.w #$2A,D0     ;'*'
0002DCB2 <AmiBlitz3.ab3@17146>    BEQ.w variable
0002DCB6 <AmiBlitz3.ab3@17147>   CMP.w #$5C,D0     ;'\'
0002DCBA <AmiBlitz3.ab3@17148>    BEQ.w variable
0002DCBE <AmiBlitz3.ab3@17149>   CMP.w #$22,D0     ;'"'
0002DCC2 <AmiBlitz3.ab3@17150>    BEQ.w litstring
0002DCC6 <AmiBlitz3.ab3@17151>   BTST #$F,D0
0002DCCA <AmiBlitz3.ab3@17152>    BNE.w f_unction
0002DCCE <AmiBlitz3.ab3@17153>   CMP.w #"&",D0
0002DCD2 <AmiBlitz3.ab3@17154>    BEQ.w getvaraddr                                          ;jump to & address of var code
0002DCD6 <AmiBlitz3.ab3@17155>   CMP.w #"?",D0
0002DCDA <AmiBlitz3.ab3@17156>    BEQ.w qmark
0002DCDE <AmiBlitz3.ab3@17160>   CMP.b #"@",d0
0002DCE2 <AmiBlitz3.ab3@17161>    BNE syntaxerr
0002DCE8 <AmiBlitz3.ab3@17162>   TST.b newsyntax
0002DCEC <AmiBlitz3.ab3@17163>    BEQ JUMP_syntaxerropt4
0002DCF2 <AmiBlitz3.ab3@17164>   MOVE.w regnum,D1
0002DCF4 <AmiBlitz3.ab3@17165>   LSL.w #8,D1
0002DCF6 <AmiBlitz3.ab3@17166>   LSL.w #1,D1
0002DCFA <AmiBlitz3.ab3@17167>   ORI.w #$203C,D1
0002DCFE <AmiBlitz3.ab3@17168>   BSR.w writeword
0002DD02 <AmiBlitz3.ab3@17169>   CMP.b #$22,(a5)
0002DD06 <AmiBlitz3.ab3@17170>    BNE syntaxerr
0002DD08 <AmiBlitz3.ab3@17171>   ADDQ #1,a5
0002DD0A <AmiBlitz3.ab3@17172>   MOVEQ #0,d0
0002DD0E <AmiBlitz3.ab3@17173>   CMP.b #1,d2
0002DD12 <AmiBlitz3.ab3@17174>    BEQ 'l3b
0002DD16 <AmiBlitz3.ab3@17175>   CMP.b #2,d2
0002DD1A <AmiBlitz3.ab3@17176>    BEQ 'l2b
0002DD1E <AmiBlitz3.ab3@17177>   CMP.b #4,d2
0002DD22 <AmiBlitz3.ab3@17178>    BEQ error_convert_types
0002DD24 <AmiBlitz3.ab3@17179>   MOVE.b (a5)+,d0
0002DD28 <AmiBlitz3.ab3@17180>   BEQ syntaxerr
0002DD2C <AmiBlitz3.ab3@17181>   CMP.b #$22,d0
0002DD30 <AmiBlitz3.ab3@17182>   BNE 'l1
0002DD34 <AmiBlitz3.ab3@17183>     MOVE.b #0,d0
0002DD38 <AmiBlitz3.ab3@17184>  BRA 'do
0002DD3A <AmiBlitz3.ab3@17187>   ASL.l #8,d0
0002DD3C <AmiBlitz3.ab3@17188>   MOVE.b (a5)+,d0
0002DD40 <AmiBlitz3.ab3@17189>   BEQ syntaxerr
0002DD44 <AmiBlitz3.ab3@17190>   CMP.b #$22,d0
0002DD48 <AmiBlitz3.ab3@17191>   BNE 'l2
0002DD4C <AmiBlitz3.ab3@17192>     MOVE.b #0,d0
0002DD4E <AmiBlitz3.ab3@17193>     ASR.l #8,d0
0002DD52 <AmiBlitz3.ab3@17194>  BRA 'do
0002DD54 <AmiBlitz3.ab3@17197>   ASL.l #8,d0
0002DD56 <AmiBlitz3.ab3@17200>   MOVE.b (a5)+,d0
0002DD5A <AmiBlitz3.ab3@17201>    BEQ syntaxerr
0002DD5E <AmiBlitz3.ab3@17202>    CMP.b #$22,d0
0002DD62 <AmiBlitz3.ab3@17203>    BNE 'l3
0002DD66 <AmiBlitz3.ab3@17204>    MOVE.b #0,d0
0002DD68 <AmiBlitz3.ab3@17205>    ASR.l #8,d0
0002DD6C <AmiBlitz3.ab3@17206>  BRA 'do
0002DD6E <AmiBlitz3.ab3@17209>   ASL.l #8,d0
0002DD70 <AmiBlitz3.ab3@17212>   MOVE.b (a5)+,d0
0002DD74 <AmiBlitz3.ab3@17213>    BEQ syntaxerr
0002DD78 <AmiBlitz3.ab3@17214>    CMP.b #$22,d0
0002DD7C <AmiBlitz3.ab3@17215>    BNE 'l4
0002DD80 <AmiBlitz3.ab3@17216>    MOVE.b #0,d0
0002DD82 <AmiBlitz3.ab3@17217>    ASR.l #8,d0
0002DD86 <AmiBlitz3.ab3@17218>  BRA 'do
0002DD8A <AmiBlitz3.ab3@17221>    CMP.b #$22,(a5)+
0002DD8E <AmiBlitz3.ab3@17222>    BNE error4char
0002DD90 <AmiBlitz3.ab3@17225>   MOVE.l d0,d1
0002DD94 <AmiBlitz3.ab3@17226>     BSR writelong
0002DD98 <AmiBlitz3.ab3@17227>     BSR get1bytemain
0002DD9A <AmiBlitz3.ab3@17228> RTS
0002DD9E <AmiBlitz3.ab3@17233>   BSR.w get1bytemain
0002DDA2 <AmiBlitz3.ab3@17234>   CMP.w #$2E,D0     ; '.'
0002DDA6 <AmiBlitz3.ab3@17235>    BEQ.b sizeobj
0002DDB0 <AmiBlitz3.ab3@17241>   MOVE.w oldqflag,instringon
0002DDB6 <AmiBlitz3.ab3@17242>   MOVEA.l lastsourcepos,A5
0002DDB8 <AmiBlitz3.ab3@17244>   MOVE.w D2,-(A7)
0002DDBC <AmiBlitz3.ab3@17245>    BSR.w getparameter2
0002DDC0 <AmiBlitz3.ab3@17246>    BEQ.w syntaxerr
0002DDC6 <AmiBlitz3.ab3@17247>   LEA varbase,A2
0002DDCA <AmiBlitz3.ab3@17248>    BSR.w findvariable
0002DDCE <AmiBlitz3.ab3@17249>    BNE.w notypeerr         ;!
0002DDD2 <AmiBlitz3.ab3@17252>   MOVE.w $4(A2),D3
0002DDD4 <AmiBlitz3.ab3@17253>   EXT.l D3
0002DDD6 <AmiBlitz3.ab3@17254>   MOVE.w (A7)+,D2
0002DDDA <AmiBlitz3.ab3@17255> BRA.w fetchnum2
0002DDDC <AmiBlitz3.ab3@17259>   MOVE.w D2,-(A7)
0002DDE0 <AmiBlitz3.ab3@17260>    BSR.w getparameter2
0002DDE4 <AmiBlitz3.ab3@17261>    BEQ.w syntaxerr
0002DDEA <AmiBlitz3.ab3@17262>   LEA newtypebase,A2
0002DDEE <AmiBlitz3.ab3@17263>    BSR.w findtype
0002DDF2 <AmiBlitz3.ab3@17264>    BNE.w notypeerr
0002DDF4 <AmiBlitz3.ab3@17265>   MOVEQ.l #$00,D3
0002DDF8 <AmiBlitz3.ab3@17266>   CMP.w #$5C,D0     ;'\'
0002DDFC <AmiBlitz3.ab3@17267>    BNE.w 'jty
0002DE00 <AmiBlitz3.ab3@17268>    BSR.w getparameter2
0002DE04 <AmiBlitz3.ab3@17269>    BEQ.w syntaxerr
0002DE08 <AmiBlitz3.ab3@17270>   LEA $4(A2),A2
0002DE0C <AmiBlitz3.ab3@17271>    BSR.w findvariable2
0002DE10 <AmiBlitz3.ab3@17272>    BNE.w noofferr
0002DE14 <AmiBlitz3.ab3@17273>   MOVE.w $4(A2),D3
0002DE18 <AmiBlitz3.ab3@17274>  BRA.w 'jty2
0002DE1C <AmiBlitz3.ab3@17277>   MOVE.w $8(A2),D3
0002DE1E <AmiBlitz3.ab3@17280>   MOVE.w (A7)+,D2
0002DE22 <AmiBlitz3.ab3@17281> BRA.w fetchnum2
0002DE24 <AmiBlitz3.ab3@17285>   MOVEQ.l #-$01,D3
0002DE28 <AmiBlitz3.ab3@17286>    BSR.w get1bytemain
0002DE2C <AmiBlitz3.ab3@17287> BRA.w fetchnum2
0002DE2E <AmiBlitz3.ab3@17291>   MOVEQ.l #$00,D3
0002DE32 <AmiBlitz3.ab3@17292>    BSR.w get1bytemain
0002DE36 <AmiBlitz3.ab3@17293> BRA.w fetchnum2
0002DE3A <AmiBlitz3.ab3@17299>   CMP.w #$30,D0     ;'0'
0002DE3E <AmiBlitz3.ab3@17300>    BCS.w 'no
0002DE42 <AmiBlitz3.ab3@17301>   CMP.w #$39,D0     ;'9'
0002DE46 <AmiBlitz3.ab3@17302>    BLS.w 'yes
0002DE4A <AmiBlitz3.ab3@17303>   ANDI.w #$FFDF,D0
0002DE4E <AmiBlitz3.ab3@17304>   CMP.w #$46,D0     ;'F'
0002DE52 <AmiBlitz3.ab3@17305>    BHI.w 'no
0002DE56 <AmiBlitz3.ab3@17306>   CMP.w #$41,D0     ;'A'
0002DE5A <AmiBlitz3.ab3@17307>    BCS.w 'no
0002DE5C <AmiBlitz3.ab3@17310>    CMP.w D0,D0
0002DE5E <AmiBlitz3.ab3@17313> RTS
0002DE62 <AmiBlitz3.ab3@17317>   CMP.w #$31,D0    ;'1'
0002DE66 <AmiBlitz3.ab3@17318>    BEQ.w 'ok
0002DE6A <AmiBlitz3.ab3@17319>   CMP.w #$30,D0    ;'0'
0002DE6C <AmiBlitz3.ab3@17322> RTS
0002DE6E <AmiBlitz3.ab3@17327>    MOVEQ #0,d0
0002DE70 <AmiBlitz3.ab3@17328>    MOVE.b (a5)+,d0
0002DE72 <AmiBlitz3.ab3@17329>    MOVE.b (a5)+,d0
0002DE76 <AmiBlitz3.ab3@17330>    BSR ishex
0002DE7A <AmiBlitz3.ab3@17331>    BNE syntaxerr
0002DE7E <AmiBlitz3.ab3@17332>    SUBI.w #$30,D0
0002DE82 <AmiBlitz3.ab3@17333>    CMP.w #$9,D0
0002DE86 <AmiBlitz3.ab3@17334>    BLS.w 'l1
0002DE88 <AmiBlitz3.ab3@17335>    SUBQ.w #7,D0
0002DE8A <AmiBlitz3.ab3@17338>    MOVE.l d0,d1
0002DE8C <AmiBlitz3.ab3@17339>    MOVE.b (a5)+,d0
0002DE90 <AmiBlitz3.ab3@17340>      BSR ishex
0002DE94 <AmiBlitz3.ab3@17341>     BNE syntaxerr
0002DE96 <AmiBlitz3.ab3@17342>     LSL.l #4,d1
0002DE9A <AmiBlitz3.ab3@17343>     SUBI.w #$30,D0
0002DE9E <AmiBlitz3.ab3@17344>    CMP.w #$9,D0
0002DEA2 <AmiBlitz3.ab3@17345>    BLS.w 'l2
0002DEA4 <AmiBlitz3.ab3@17346>    SUBQ.w #7,D0
0002DEA6 <AmiBlitz3.ab3@17349>   ADD.l d1,d0
0002DEA8 <AmiBlitz3.ab3@17350> RTS
0002DEAC <AmiBlitz3.ab3@17354>    BSR.w get1bytemain
0002DEB0 <AmiBlitz3.ab3@17355>    BSR.w ishex
0002DEB4 <AmiBlitz3.ab3@17356>    BNE.w syntaxerr
0002DEB6 <AmiBlitz3.ab3@17357>   MOVEQ.l #$00,D3
0002DEBA <AmiBlitz3.ab3@17359>   CMP.w #5,d2
0002DEBE <AmiBlitz3.ab3@17360>   BNE 'loop
0002DEC4 <AmiBlitz3.ab3@17361>   CMP.l #newtype_double,a2
0002DEC8 <AmiBlitz3.ab3@17362>   BEQ 'doit
0002DECE <AmiBlitz3.ab3@17363>   CMP.l #newtype_float,a2
0002DED2 <AmiBlitz3.ab3@17364>   BNE 'loop
0002DEDA <AmiBlitz3.ab3@17367>    fmove.s #0,fp0
0002DEE0 <AmiBlitz3.ab3@17370>   TST.b fpu
0002DEE4 <AmiBlitz3.ab3@17371>   BEQ 'loop
0002DEEA <AmiBlitz3.ab3@17372>   fmove.w #16,fp1
0002DEEE <AmiBlitz3.ab3@17373>   fmul.x fp1,fp0
0002DEF2 <AmiBlitz3.ab3@17374>   SUBI.w #$30,D0
0002DEF6 <AmiBlitz3.ab3@17375>   CMP.w #$9,D0
0002DEFA <AmiBlitz3.ab3@17376>    BLS.w 'skipa
0002DEFC <AmiBlitz3.ab3@17377>   SUBQ.w #7,D0
0002DF00 <AmiBlitz3.ab3@17380>    fmove.w d0,fp1
0002DF04 <AmiBlitz3.ab3@17381>    fadd.x fp1,fp0
0002DF08 <AmiBlitz3.ab3@17382>    BSR.w get1bytemain
0002DF0C <AmiBlitz3.ab3@17383>    BSR.w ishex
0002DF10 <AmiBlitz3.ab3@17384>    BEQ.w 'loopa
0002DF14 <AmiBlitz3.ab3@17385>  BRA.w nofpregload
0002DF1A <AmiBlitz3.ab3@17389>   CMP.l #$10000000,D3
0002DF1E <AmiBlitz3.ab3@17390>    BCC.w overerr
0002DF20 <AmiBlitz3.ab3@17391>   LSL.l #4,D3
0002DF24 <AmiBlitz3.ab3@17392>   SUBI.w #$30,D0
0002DF28 <AmiBlitz3.ab3@17393>   CMP.w #$9,D0
0002DF2C <AmiBlitz3.ab3@17394>    BLS.w 'skip
0002DF2E <AmiBlitz3.ab3@17395>   SUBQ.w #7,D0
0002DF30 <AmiBlitz3.ab3@17398>   OR.w D0,D3
0002DF34 <AmiBlitz3.ab3@17399>    BSR.w get1bytemain
0002DF38 <AmiBlitz3.ab3@17400>    BSR.w ishex
0002DF3C <AmiBlitz3.ab3@17401>    BEQ.w 'loop
0002DF40 <AmiBlitz3.ab3@17402> BRA.w fetchnum2
0002DF44 <AmiBlitz3.ab3@17406>    BSR.w get1bytemain
0002DF48 <AmiBlitz3.ab3@17407>    BSR.w checkbin
0002DF4C <AmiBlitz3.ab3@17408>    BNE.w syntaxerr
0002DF4E <AmiBlitz3.ab3@17409>    MOVEQ.l #$00,D3
0002DF50 <AmiBlitz3.ab3@17412>    LSL.l #1,D3
0002DF54 <AmiBlitz3.ab3@17413>    BCS.w overerr
0002DF58 <AmiBlitz3.ab3@17414>   SUBI.w #$30,D0
0002DF5A <AmiBlitz3.ab3@17415>   OR.w D0,D3
0002DF5E <AmiBlitz3.ab3@17416>    BSR.w get1bytemain
0002DF62 <AmiBlitz3.ab3@17417>    BSR.w checkbin
0002DF66 <AmiBlitz3.ab3@17418>    BEQ.w 'loop
0002DF6A <AmiBlitz3.ab3@17419> BRA.w fetchnum2
0002DF6C <AmiBlitz3.ab3@17423>    MOVE.w d2,-(A7)
0002DF74 <AmiBlitz3.ab3@17425>    MOVE.b #0,automode
0002DF78 <AmiBlitz3.ab3@17426>    CMP.b #"@",(a5)
0002DF7C <AmiBlitz3.ab3@17427>    BNE 'l1
0002DF7E <AmiBlitz3.ab3@17428>    ADDQ.l #1,a5
0002DF86 <AmiBlitz3.ab3@17429>    MOVE.b #1,automode
0002DF8A <AmiBlitz3.ab3@17430>    BSR getparameter2
0002DF8E <AmiBlitz3.ab3@17431>    BSR findlabel2
0002DF92 <AmiBlitz3.ab3@17432>    BNE 'addit
0002DF96 <AmiBlitz3.ab3@17433>  BRA errormsg_autocount
0002DF9A <AmiBlitz3.ab3@17436>   BSR.w addlabelhash
0002DFA2 <AmiBlitz3.ab3@17437>   MOVE.l #$1,$4(A2)
0002DFA6 <AmiBlitz3.ab3@17438>   MOVEM.l a2/a5,-(a7)
0002DFAC <AmiBlitz3.ab3@17439>   MOVE.w lastchar,-(a7)
0002DFB2 <AmiBlitz3.ab3@17440>   LEA autostorename,a5
0002DFB6 <AmiBlitz3.ab3@17441>   BSR getparameter2
0002DFBA <AmiBlitz3.ab3@17442>   BSR findlabel2
0002DFBE <AmiBlitz3.ab3@17443>   BEQ 'found
0002DFC2 <AmiBlitz3.ab3@17444>   BSR.w addlabelhash
0002DFCA <AmiBlitz3.ab3@17445>   MOVE.l #$1,$4(A2)
0002DFD2 <AmiBlitz3.ab3@17446>   MOVE.l #0,8(a2)
0002DFD4 <AmiBlitz3.ab3@17449>    MOVE.w (a7)+,d0
0002DFDA <AmiBlitz3.ab3@17450>    MOVE.w d0,lastchar
0002DFDE <AmiBlitz3.ab3@17451>   MOVE.l 8(a2),d3
0002DFE6 <AmiBlitz3.ab3@17452>   ADD.l #1,8(a2)
0002DFEA <AmiBlitz3.ab3@17453>   MOVEM.l (a7)+,a2/a5
0002DFEE <AmiBlitz3.ab3@17454>   MOVE.l d3,8(a2)
0002DFF2 <AmiBlitz3.ab3@17455>   MOVE.l $8(A2),D3
0002DFF6 <AmiBlitz3.ab3@17456>  BRA.l 'l3
0002DFFA <AmiBlitz3.ab3@17460>   BSR.w getparameter2
0002E000 <AmiBlitz3.ab3@17462>     TST.b incnif
0002E004 <AmiBlitz3.ab3@17463>     BEQ 'lc1
0002E008 <AmiBlitz3.ab3@17464>     BSR.w findlabel2
0002E00C <AmiBlitz3.ab3@17465>     BNE 'l5
0002E00E <AmiBlitz3.ab3@17466>     MOVEQ #1,d3
0002E010 <AmiBlitz3.ab3@17467>     MOVE.w (A7)+,D2
0002E014 <AmiBlitz3.ab3@17468>  BRA fetchnum2
0002E016 <AmiBlitz3.ab3@17471>   MOVEQ #0,d3
0002E018 <AmiBlitz3.ab3@17472>     MOVE.w (A7)+,D2
0002E01C <AmiBlitz3.ab3@17473>  BRA fetchnum2
0002E020 <AmiBlitz3.ab3@17477>    BSR.w findlabel2
0002E024 <AmiBlitz3.ab3@17478>    BNE.w cnferr
0002E02C <AmiBlitz3.ab3@17481>    CMPI.l #$1,$4(A2)
0002E030 <AmiBlitz3.ab3@17482>    BNE.w cnferr
0002E034 <AmiBlitz3.ab3@17485>    MOVE.l $8(A2),D3
0002E036 <AmiBlitz3.ab3@17486>    MOVE.w (A7)+,D2
0002E03A <AmiBlitz3.ab3@17487> BRA.w fetchnum2     ;to right type.
0002E040 <AmiBlitz3.ab3@17492>   CLR.w vartype
0002E048 <AmiBlitz3.ab3@17493>   MOVE.b #3,peekaddrsize
0002E04C <AmiBlitz3.ab3@17495>   BSR.w ampersand2
0002E052 <AmiBlitz3.ab3@17497>   MOVE.l a2,rightsidetype
0002E05C <AmiBlitz3.ab3@17498>   MOVE.w flagmask,rightsideflagmask
0002E05E <AmiBlitz3.ab3@17500>   MOVEQ.l #$03,D2
0002E060 <AmiBlitz3.ab3@17501> RTS
0002E064 <AmiBlitz3.ab3@17505>    BSR.w get1bytemain
0002E076 <AmiBlitz3.ab3@17507>    !compare2
0002E07A <AmiBlitz3.ab3@17508>    BEQ andop2
0002E07E <AmiBlitz3.ab3@17510>    BSR.w getparameter
0002E082 <AmiBlitz3.ab3@17511>    BSR.w fetchvars
0002E086 <AmiBlitz3.ab3@17512>    BSR.w calcvar
0002E08A <AmiBlitz3.ab3@17514>   CMP.b #$7,D2
0002E08E <AmiBlitz3.ab3@17515>    BNE.w 'notst
0002E092 <AmiBlitz3.ab3@17516>   BTST #$F,D2
0002E096 <AmiBlitz3.ab3@17517>    BNE.w 'algot2
0002E09C <AmiBlitz3.ab3@17518>   MOVE.w D3,stamp2+2
0002E0A2 <AmiBlitz3.ab3@17519>   MOVE.l stamp2,D1
0002E0A6 <AmiBlitz3.ab3@17520>    BSR.w pokela5s
0002E0AA <AmiBlitz3.ab3@17521>  BRA.w 'algot
0002E0B0 <AmiBlitz3.ab3@17524>   MOVE.w regnum,D1
0002E0B2 <AmiBlitz3.ab3@17525>   LSL.w #8,D1
0002E0B4 <AmiBlitz3.ab3@17526>   LSL.w #1,D1
0002E0BA <AmiBlitz3.ab3@17527>   OR.w stamp,D1
0002E0BE <AmiBlitz3.ab3@17528>    BSR.w writeword
0002E0C0 <AmiBlitz3.ab3@17529>  RTS
0002E0C4 <AmiBlitz3.ab3@17532>   BTST #$F,D2
0002E0C8 <AmiBlitz3.ab3@17533>    BNE.w 'algot
0002E0CE <AmiBlitz3.ab3@17534>   MOVE.w D3,leaamp+2
0002E0D4 <AmiBlitz3.ab3@17535>   MOVE.l leaamp,D1
0002E0D8 <AmiBlitz3.ab3@17536>    BSR.w pokela5s
0002E0DE <AmiBlitz3.ab3@17539>   MOVE.w regnum,D1
0002E0E0 <AmiBlitz3.ab3@17540>   LSL.w #8,D1
0002E0E2 <AmiBlitz3.ab3@17541>   LSL.w #1,D1
0002E0E8 <AmiBlitz3.ab3@17542>   OR.w leaamp2,D1
0002E0EC <AmiBlitz3.ab3@17543> BRA.w writeword
0002E0F0 <AmiBlitz3.ab3@17548>   MOVE.w #$D200,D1     ; was #ern,
0002E0F4 <AmiBlitz3.ab3@17549>    BSR.w Atokejsr
0002E0F6 <AmiBlitz3.ab3@17550>   MOVEQ.l #$03,D2
0002E0F8 <AmiBlitz3.ab3@17551> RTS
0002E0FC <AmiBlitz3.ab3@17555> addrcode:  Dc.b $20,$6D,$00,$00                            ;MOVEA.L $0000(A5),A0
0002E0FE <AmiBlitz3.ab3@17556>            Dc.b $D0,$C0                                    ;ADDA.W  D0,A0
0002E100 <AmiBlitz3.ab3@17557>            Dc.b $20,$08                                    ;MOVE.L  A0,D0
0002E104 <AmiBlitz3.ab3@17563>    BSR.w get1bytemain
0002E106 <AmiBlitz3.ab3@17565>   MOVE.w D0,D1
0002E10A <AmiBlitz3.ab3@17566>    BPL.w syntaxerr
0002E10C <AmiBlitz3.ab3@17567>   MOVE.w D2,-(A7)
0002E110 <AmiBlitz3.ab3@17568>   BCLR #$F,D1
0002E114 <AmiBlitz3.ab3@17569>    BSR.w searchinstr
0002E118 <AmiBlitz3.ab3@17570>   MOVE.l $12(A2),D0
0002E11C <AmiBlitz3.ab3@17571>   TST.w -$2(A2,D0.L)
0002E120 <AmiBlitz3.ab3@17572>    BEQ.w freeerr
0002E122 <AmiBlitz3.ab3@17573>   MOVE.w (A7)+,D2
0002E124 <AmiBlitz3.ab3@17574> RTS
0002E128 <AmiBlitz3.ab3@17578>   MOVE.l $0(A5),D0
0002E12C <AmiBlitz3.ab3@17579>    BNE.b ucodeskip
0002E12E <AmiBlitz3.ab3@17580>   MOVEQ.l #-$01,D0
0002E132 <AmiBlitz3.ab3@17581> BRA.b usedcodef
0002E136 <AmiBlitz3.ab3@17584>   SUB.l $0(A5),D0
0002E138 <AmiBlitz3.ab3@17587>   LSR.w #8,D0
0002E13C <AmiBlitz3.ab3@17592>    MOVE.l $0(A5),D0
0002E140 <AmiBlitz3.ab3@17593>    BNE.b ucodeskip2
0002E142 <AmiBlitz3.ab3@17594>   MOVEQ.l #-$01,D0
0002E146 <AmiBlitz3.ab3@17595> BRA.b usedcode2f
0002E14A <AmiBlitz3.ab3@17598>   SUB.l $0(A5),D0                                          ;usedcode2
0002E14C <AmiBlitz3.ab3@17599>   LSR.w #8,D0
0002E14E <AmiBlitz3.ab3@17602>   LSR.w #8,D0
0002E150 <AmiBlitz3.ab3@17607>   MOVE.l D0,-(A7)
0002E152 <AmiBlitz3.ab3@17610>   MOVE.l (A7)+,D0
0002E154 <AmiBlitz3.ab3@17613>   MOVE.l D0,D0
0002E158 <AmiBlitz3.ab3@17619>   BSR.w fetchit
0002E15C <AmiBlitz3.ab3@17621>   MOVE.w -$2(A2,D0.L),D3
0002E160 <AmiBlitz3.ab3@17622>   CMP.w #$9,D3
0002E164 <AmiBlitz3.ab3@17623>    BCC.w 'skip
0002E168 <AmiBlitz3.ab3@17627>   LEA usedcode(PC),A0
0002E16C <AmiBlitz3.ab3@17628>   LEA usedcodef(PC),A1
0002E172 <AmiBlitz3.ab3@17630>   ANDI.w #$F1FF,$E+4(A0)                                   ;and #$f1ff,ucodediv-usedcode(a0) org source
0002E176 <AmiBlitz3.ab3@17631>   ANDI.w #$7,D3
0002E178 <AmiBlitz3.ab3@17632>   LSL.w #8,D3
0002E17A <AmiBlitz3.ab3@17633>   LSL.w #1,D3
0002E17E <AmiBlitz3.ab3@17634>   OR.w D3,$E+4(A0)                                         ;or  d3,ucodediv-usedcode(a0) org source
0002E182 <AmiBlitz3.ab3@17635>  BRA.w 'skip2
0002E186 <AmiBlitz3.ab3@17640>   LEA usedcode2(PC),A0
0002E18A <AmiBlitz3.ab3@17641>   LEA usedcode2f(PC),A1
0002E190 <AmiBlitz3.ab3@17643>   ANDI.w #$F1FF,$10+4(A0)                                  ;and #$f1ff,ucodediv2-usedcode2(a0) org source
0002E192 <AmiBlitz3.ab3@17644>   SUBQ.w #8,D3
0002E194 <AmiBlitz3.ab3@17645>   LSL.w #8,D3
0002E196 <AmiBlitz3.ab3@17646>   LSL.w #1,D3
0002E19A <AmiBlitz3.ab3@17647>   OR.w D3,$10+4(A0)                                        ;or  d3,ucodediv2-usedcode2(a0) org source
0002E19E <AmiBlitz3.ab3@17650>   MOVE.w -$6(A2,D0.L),D3
0002E1A2 <AmiBlitz3.ab3@17651>   MOVE.w D3,$C+4(A0)                                       ;move d3,ucodeskip-usedcode+2(a0) org source
0002E1A4 <AmiBlitz3.ab3@17652>   ADDQ.w #4,D3
0002E1A8 <AmiBlitz3.ab3@17653>   MOVE.w D3,$2(A0)
0002E1AE <AmiBlitz3.ab3@17654>   MOVE.w regnum,D1
0002E1B2 <AmiBlitz3.ab3@17655>    BEQ.w 'skip3
0002E1B6 <AmiBlitz3.ab3@17656>   MOVE.w usedprep(PC),D1
0002E1BA <AmiBlitz3.ab3@17657>    BSR.w writeword
0002E1BE <AmiBlitz3.ab3@17660>   BSR.w pokecode
0002E1C4 <AmiBlitz3.ab3@17661>   MOVE.w regnum,D1
0002E1C8 <AmiBlitz3.ab3@17662>    BEQ.w 'skip4
0002E1CA <AmiBlitz3.ab3@17663>   LSL.w #8,D1
0002E1CC <AmiBlitz3.ab3@17664>   LSL.w #1,D1
0002E1D0 <AmiBlitz3.ab3@17665>   OR.w usedfix(PC),D1
0002E1D4 <AmiBlitz3.ab3@17666>    BSR.w writeword
0002E1D8 <AmiBlitz3.ab3@17667>   MOVE.w useddone(PC),D1
0002E1DC <AmiBlitz3.ab3@17668>    BSR.w writeword
0002E1DE <AmiBlitz3.ab3@17671>    MOVEQ.l #$02,D2
0002E1E2 <AmiBlitz3.ab3@17672> BRA.w get1bytemain
0002E1E6 <AmiBlitz3.ab3@17680>    BSR.w fetchit
0002E1E8 <AmiBlitz3.ab3@17682>   MOVEQ.l #$00,D3
0002E1EC <AmiBlitz3.ab3@17683>   MOVE.w -$4(A2,D0.L),D3
0002E1F0 <AmiBlitz3.ab3@17684>    BSR.w get1bytemain
0002E1F4 <AmiBlitz3.ab3@17685> BRA.w fetchnum2
0002E1F8 <AmiBlitz3.ab3@17692>    BSR.w get1bytemain    ;get the token
0002E1FA <AmiBlitz3.ab3@17693>   MOVE.w D0,-(A7)
0002E1FE <AmiBlitz3.ab3@17694>    BSR.w get1bytemain    ;and the bracket?
0002E202 <AmiBlitz3.ab3@17695>   CMP.w #$28,D0          ;'('
0002E206 <AmiBlitz3.ab3@17696>    BNE.w syntaxerr
0002E208 <AmiBlitz3.ab3@17697>   MOVE.w (A7)+,D0
0002E20C <AmiBlitz3.ab3@17698>    BSR.w getmaxel
0002E210 <AmiBlitz3.ab3@17699>    BSR.w reget
0002E214 <AmiBlitz3.ab3@17700>   CMP.w #$29,D0          ;')'
0002E218 <AmiBlitz3.ab3@17701>    BNE.w syntaxerr
0002E21C <AmiBlitz3.ab3@17705>   LEA addrcode(PC),A0
0002E220 <AmiBlitz3.ab3@17706>   LEA addrcodef(PC),A1
0002E226 <AmiBlitz3.ab3@17707>   MOVE.w -$6(A2),$2(A0) ;x(a5)
0002E22A <AmiBlitz3.ab3@17708>   MOVE.w $4(A0),D1
0002E22E <AmiBlitz3.ab3@17709>   ANDI.w #$FFF8,D1
0002E234 <AmiBlitz3.ab3@17710>   OR.w regnum,D1
0002E238 <AmiBlitz3.ab3@17711>   MOVE.w D1,$4(A0)      ;add Dregat,a0
0002E23C <AmiBlitz3.ab3@17712>   MOVE.w $6(A0),D1
0002E240 <AmiBlitz3.ab3@17713>   ANDI.w #$F1FF,D1
0002E246 <AmiBlitz3.ab3@17714>   MOVE.w regnum,D0
0002E248 <AmiBlitz3.ab3@17715>   LSL.w #8,D0
0002E24A <AmiBlitz3.ab3@17716>   LSL.w #1,D0
0002E24C <AmiBlitz3.ab3@17717>   OR.w D0,D1
0002E250 <AmiBlitz3.ab3@17718>   MOVE.w D1,$6(A0)      ;move.l a0,Dregat
0002E254 <AmiBlitz3.ab3@17719>    BSR.w pokecode
0002E256 <AmiBlitz3.ab3@17720>   MOVEQ.l #$03,D2       ;now a long
0002E25A <AmiBlitz3.ab3@17721> BRA.w get1bytemain
0002E25E <AmiBlitz3.ab3@17727>   CMP.w #-$7F4D,D0     ; was #$8000+tnum,
0002E262 <AmiBlitz3.ab3@17728>    BHI.w 'overasm
0002E266 <AmiBlitz3.ab3@17729>  BRA.w syntaxerr
0002E26A <AmiBlitz3.ab3@17734>   CMP.w #NullTokenID,d0                                ;#$b581 check for lib 107 token 1 "NULL" form elomorsyslib
0002E26E <AmiBlitz3.ab3@17735>    BNE 'nonull
0002E274 <AmiBlitz3.ab3@17736>    MOVE.l d0,lastinstruction
0002E278 <AmiBlitz3.ab3@17737>    MOVE.w #$7000,d1                                            ;asm instr moveq #0,dx
0002E27E <AmiBlitz3.ab3@17738>    MOVE.w regnum,d0
0002E280 <AmiBlitz3.ab3@17739>    ASL.l #7,d0
0002E282 <AmiBlitz3.ab3@17740>    ASL.l #2,d0
0002E284 <AmiBlitz3.ab3@17741>    OR.l d0,d1
0002E288 <AmiBlitz3.ab3@17742>    BSR writeword
0002E28E <AmiBlitz3.ab3@17743>    JSR get1bytemain
0002E290 <AmiBlitz3.ab3@17744>   RTS
0002E294 <AmiBlitz3.ab3@17747>   CMP.w #$c982,d0
0002E298 <AmiBlitz3.ab3@17748>    BNE nonew_
0002E29A <AmiBlitz3.ab3@17751>   MOVE.l a5,-(a7)
0002E2A0 <AmiBlitz3.ab3@17752>   MOVE.w lastchar,-(a7)
0002E2A6 <AmiBlitz3.ab3@17753>   JSR get1bytemain
0002E2AA <AmiBlitz3.ab3@17754>   CMP.w #"(",d0                                             ; use oldcode
0002E2AE <AmiBlitz3.ab3@17755>   BNE 'newcode
0002E2B4 <AmiBlitz3.ab3@17756>   JSR get1bytemain
0002E2B8 <AmiBlitz3.ab3@17757>   CMP.w #")",d0
0002E2BC <AmiBlitz3.ab3@17758>   BEQ 'newcode
0002E2C2 <AmiBlitz3.ab3@17759>   MOVE.w (a7)+,lastchar
0002E2C4 <AmiBlitz3.ab3@17760>   MOVE.l (a7)+,a5
0002E2CA <AmiBlitz3.ab3@17761>   MOVE.w lastchar,d0
0002E2CE <AmiBlitz3.ab3@17762>   BRA nonew_
0002E2D0 <AmiBlitz3.ab3@17765>   MOVE.l a0,-(a7)
0002E2D6 <AmiBlitz3.ab3@17766>   TST.b blitzparloop
0002E2DA <AmiBlitz3.ab3@17767>   BNE 'err
0002E2E0 <AmiBlitz3.ab3@17768>   TST.b funcparloop
0002E2E4 <AmiBlitz3.ab3@17769>   BNE 'err
0002E2E8 <AmiBlitz3.ab3@17770>   BRA 'ok
0002E2EE <AmiBlitz3.ab3@17773>   JMP errornewnotincalls
0002E2F4 <AmiBlitz3.ab3@17776>   MOVE.l #$203c0000,d1
0002E2F8 <AmiBlitz3.ab3@17777>   BSR writelong                                            ; 68k asm move.l #$xx,d0
0002E2FA <AmiBlitz3.ab3@17778>   MOVEQ #0,d1
0002E2FE <AmiBlitz3.ab3@17779>   MOVE.w 8(a0),d1
0002E302 <AmiBlitz3.ab3@17780>   BSR writeword
0002E306 <AmiBlitz3.ab3@17781>   MOVE.w #$7200,d1                                         ; 68k asm "moveq #0,d1"
0002E30A <AmiBlitz3.ab3@17782>   BSR writeword
0002E30E <AmiBlitz3.ab3@17783>   MOVE.w #$C002,D1                                         ;call function to alloc global mem
0002E312 <AmiBlitz3.ab3@17784>   BSR.w tokejsr2
0002E314 <AmiBlitz3.ab3@17785>   MOVE.l (a7)+,a0
0002E316 <AmiBlitz3.ab3@17786>   ADDQ.l #6,a7                      ; a5 need not restore
0002E31A <AmiBlitz3.ab3@17787>   CMP.w #")",d0
0002E31E <AmiBlitz3.ab3@17788>   BNE 'nobracket
0002E324 <AmiBlitz3.ab3@17789>   JSR get1bytemain
0002E326 <AmiBlitz3.ab3@17792> RTS
0002E32A <AmiBlitz3.ab3@17796>   CMP.w #-$7F4A,D0      ; was #$8003+tnum,
0002E32E <AmiBlitz3.ab3@17797>    BEQ.w doern
0002E332 <AmiBlitz3.ab3@17798>   CMP.w #-$7F48,D0      ; was #$8005+tnum,
0002E336 <AmiBlitz3.ab3@17799>    BEQ.w doaddr
0002E33A <AmiBlitz3.ab3@17800>   CMP.w #-$7F3C,D0      ; was #$8011+tnum,
0002E33E <AmiBlitz3.ab3@17801>    BEQ.w domaximum
0002E342 <AmiBlitz3.ab3@17802>   CMP.w #-$7F2F,D0      ; was #$801e+tnum,
0002E346 <AmiBlitz3.ab3@17803>    BEQ.w doused
0002E348 <AmiBlitz3.ab3@17805>   MOVE.w D2,-(A7)       ;remember old type!
0002E34A <AmiBlitz3.ab3@17806>   MOVE.w D0,D1
0002E34E <AmiBlitz3.ab3@17807>   BCLR #$F,D1
0002E352 <AmiBlitz3.ab3@17811>    BSR.w searchinstr
0002E354 <AmiBlitz3.ab3@17812>   MOVE.w (A3),D1
0002E358 <AmiBlitz3.ab3@17813>   BTST #$1,D1
0002E35C <AmiBlitz3.ab3@17814>    BEQ.w noreturn_                                         ;syntax error noreturn
0002E360 <AmiBlitz3.ab3@17815>   BTST #$2,D1
0002E364 <AmiBlitz3.ab3@17816>    BNE.w amigalib
0002E366 <AmiBlitz3.ab3@17822>   LSR.w #8,D1
0002E36C <AmiBlitz3.ab3@17823>   BTST #$3,$1(A3)
0002E370 <AmiBlitz3.ab3@17824>    BEQ.w 'no0
0002E376 <AmiBlitz3.ab3@17826>    JSR sizespec2
0002E37C <AmiBlitz3.ab3@17830>    CLR.l rightsidetype
0002E382 <AmiBlitz3.ab3@17831>    CLR.w rightsideflagmask
0002E384 <AmiBlitz3.ab3@17833>    MOVE.w D1,-(A7)                                         ;is library instruction
0002E388 <AmiBlitz3.ab3@17834>   CMP.w #$7,D1
0002E38C <AmiBlitz3.ab3@17835>    BNE.w 'notst0
0002E38E <AmiBlitz3.ab3@17836>   MOVE.l A2,-(A7)
0002E392 <AmiBlitz3.ab3@17837>    BSR.w makesbase
0002E394 <AmiBlitz3.ab3@17838>   MOVEA.l (A7)+,A2
0002E398 <AmiBlitz3.ab3@17841>     BSR.w savem
0002E39A <AmiBlitz3.ab3@17842>   MOVE.w D3,-(A7)        ;the movem regs
0002E39E <AmiBlitz3.ab3@17844>    BSR.w get1bytemain
0002E3A0 <AmiBlitz3.ab3@17845>   MOVEQ.l #$00,D1
0002E3A4 <AmiBlitz3.ab3@17846>   CMP.w #$28,D0          ;'('
0002E3A8 <AmiBlitz3.ab3@17847>    BNE.w 'nopars
0002E3AE <AmiBlitz3.ab3@17848>    JSR countpees
0002E3B0 <AmiBlitz3.ab3@17849>   TST.w D1
0002E3B4 <AmiBlitz3.ab3@17850>    BEQ.w syntaxerr
0002E3B8 <AmiBlitz3.ab3@17851>  BRA.w 'skip0
0002E3C2 <AmiBlitz3.ab3@17856>   MOVE.w oldqflag,instringon
0002E3C8 <AmiBlitz3.ab3@17857>   MOVEA.l lastsourcepos,A5
0002E3CE <AmiBlitz3.ab3@17861>    MOVE.w regnum,-(A7)
0002E3D8 <AmiBlitz3.ab3@17863>    MOVE.w regnum,regnumstore
0002E3DE <AmiBlitz3.ab3@17864>    TST.b fpu
0002E3E2 <AmiBlitz3.ab3@17865>             BEQ 'nofloat
0002E3E8 <AmiBlitz3.ab3@17866>             CMP.w #$ffff,28(a3)
0002E3EC <AmiBlitz3.ab3@17867>             BNE 'nofloat
0002E3F2 <AmiBlitz3.ab3@17868>             CMP.w #$3c01,34(a3)                            ;val do nofpu stuff
0002E3F6 <AmiBlitz3.ab3@17869>             BEQ 'nofloat
0002E3FC <AmiBlitz3.ab3@17870>             CMP.w #$3c02,34(a3)                            ;int skip
0002E400 <AmiBlitz3.ab3@17871>             BEQ 'quick1
0002E404 <AmiBlitz3.ab3@17872>             CMP.b #5,(a3)
0002E408 <AmiBlitz3.ab3@17873>             BNE 'nofloat
0002E40E <AmiBlitz3.ab3@17876>             CLR.l load_var_addr
0002E412 <AmiBlitz3.ab3@17877>  BRA 'isfpu
0002E418 <AmiBlitz3.ab3@17881>    CLR.w regnum
0002E41A <AmiBlitz3.ab3@17884>    MOVE.w D1,-(A7)
0002E420 <AmiBlitz3.ab3@17885>   BTST #$3,$1(A3)
0002E424 <AmiBlitz3.ab3@17886>    BEQ.w 'no2
0002E428 <AmiBlitz3.ab3@17907>   MOVE.w $6(A7),D1
0002E42E <AmiBlitz3.ab3@17909>   MOVE.w d1,peeksize
0002E432 <AmiBlitz3.ab3@17920>   ORI.w #$7000,D1
0002E436 <AmiBlitz3.ab3@17921>   BSR.w writeword                                          ;write peekmode
0002E43C <AmiBlitz3.ab3@17924>   ADDQ.w #1,regnum
0002E43E <AmiBlitz3.ab3@17925>   MOVE.w (A7),D1
0002E446 <AmiBlitz3.ab3@17929>   MOVE.w 2(a7),tempregnum
0002E44C <AmiBlitz3.ab3@17930>   MOVE.w parnum,-(a7)                                       ;7.2014 parnum need store to allow functioncall in parameter >6
0002E452 <AmiBlitz3.ab3@17931>   CLR.w parnum                                              ;7.2014
0002E458 <AmiBlitz3.ab3@17933>   JSR dolibtoke                                             ;write code of blitzfunc
0002E45E <AmiBlitz3.ab3@17935>   MOVE.w (a7)+,parnum                                       ;7.2014 new restore parnum
0002E460 <AmiBlitz3.ab3@17937>   TST.w (A7)+
0002E464 <AmiBlitz3.ab3@17938>   BEQ.w 'skip
0002E468 <AmiBlitz3.ab3@17939>   CMP.w #")",D0                                             ; check if ) here for correct end of blitzlib function call
0002E46C <AmiBlitz3.ab3@17940>   BNE.w errorbracketmiss                                    ; was syntax error
0002E472 <AmiBlitz3.ab3@17942>   CLR.l lasttoken
0002E476 <AmiBlitz3.ab3@17944>   BSR.w get1bytemain
0002E478 <AmiBlitz3.ab3@17947>    MOVE.w (A7)+,D1
0002E47E <AmiBlitz3.ab3@17948>    MOVE.w D1,regnum
0002E482 <AmiBlitz3.ab3@17949>    BEQ.w 'skip2
0002E488 <AmiBlitz3.ab3@17951>    CMP.w #$3c01,24(a2)                                     ;val skipped
0002E48C <AmiBlitz3.ab3@17952>    BNE 'noval
0002E492 <AmiBlitz3.ab3@17953>    TST.b fpu
0002E496 <AmiBlitz3.ab3@17954>    BEQ 'noval
0002E49C <AmiBlitz3.ab3@17955>    CLR.l load_var_addr
0002E49E <AmiBlitz3.ab3@17956>    MOVEQ #0,d1
0002E4A4 <AmiBlitz3.ab3@17957>    MOVE.w regnum,d1
0002E4A6 <AmiBlitz3.ab3@17958>    LSL.l #7,d1
0002E4AC <AmiBlitz3.ab3@17959>    OR.l #$f2000000,d1
0002E4B0 <AmiBlitz3.ab3@17960>    BSR writelong
0002E4B4 <AmiBlitz3.ab3@17961>  BRA 'skip2
0002E4BA <AmiBlitz3.ab3@17964>    CMP.w #$3c02,24(a2)                                     ;int skipped
0002E4BE <AmiBlitz3.ab3@17965>    BEQ 'quick
0002E4C2 <AmiBlitz3.ab3@17966>    CMP.b #5,d2
0002E4C6 <AmiBlitz3.ab3@17967>    BNE 'nofpu2
0002E4CC <AmiBlitz3.ab3@17968>    TST.b fpu
0002E4D0 <AmiBlitz3.ab3@17969>    BEQ 'nofpu2
0002E4D6 <AmiBlitz3.ab3@17974>    CLR.l load_var_addr
0002E4DA <AmiBlitz3.ab3@17975>  BRA 'skip2
0002E4DC <AmiBlitz3.ab3@17979>   LSL.w #8,D1
0002E4DE <AmiBlitz3.ab3@17980>   LSL.w #1,D1
0002E4E2 <AmiBlitz3.ab3@17981>   ORI.w #$2000,D1
0002E4E6 <AmiBlitz3.ab3@17982>   BSR.w writeword      ;move.l d0,regat                                    ;write move.l d0,dx
0002E4EC <AmiBlitz3.ab3@17984>   TST.b fpu
0002E4F0 <AmiBlitz3.ab3@17985>   BEQ 'skip2
0002E4F2 <AmiBlitz3.ab3@17986>   MOVEQ #0,d1
0002E4F8 <AmiBlitz3.ab3@17987>   MOVE.w regnum,d1
0002E4FA <AmiBlitz3.ab3@17988>   LSL.l #7,d1
0002E500 <AmiBlitz3.ab3@17989>   OR.l #$f2000000,d1
0002E502 <AmiBlitz3.ab3@17994>        MOVE.w (A7)+,D3
0002E506 <AmiBlitz3.ab3@17995>        BEQ.w 'nomovem
0002E50C <AmiBlitz3.ab3@17997>        TST.b fpu
0002E510 <AmiBlitz3.ab3@17998>        BEQ 'nofpu3
0002E512 <AmiBlitz3.ab3@17999>       MOVE.l d0,-(a7)
0002E514 <AmiBlitz3.ab3@18000>        MOVE.l a0,-(a7)
0002E51A <AmiBlitz3.ab3@18001>        MOVE.l stacktrack,d1
0002E520 <AmiBlitz3.ab3@18002>        LEA fpustackbase,a0
0002E528 <AmiBlitz3.ab3@18003>        MOVE.w 0(a0,d1),regmask
0002E52A <AmiBlitz3.ab3@18004>        MOVE.l (a7)+,a0
0002E52E <AmiBlitz3.ab3@18005>       MOVE.w #8,d0
0002E532 <AmiBlitz3.ab3@18008>       BEQ 'ready
0002E538 <AmiBlitz3.ab3@18009>       BTST d0,regmask
0002E53C <AmiBlitz3.ab3@18010>       BEQ 'noa7
0002E53E <AmiBlitz3.ab3@18011>       MOVEQ #0,d1
0002E540 <AmiBlitz3.ab3@18012>       MOVE.w d0,d1
0002E542 <AmiBlitz3.ab3@18013>       SUBQ.w #1,d1
0002E544 <AmiBlitz3.ab3@18014>       ASL #7,d1
0002E54A <AmiBlitz3.ab3@18016>       OR.l #$f21f5400,d1                                   ;fmove.d (a7)+
0002E54E <AmiBlitz3.ab3@18017>       BSR writelong
0002E554 <AmiBlitz3.ab3@18018>       SUBQ.l #2,stacktrack
0002E556 <AmiBlitz3.ab3@18021>       SUBQ.w #1,d0
0002E55A <AmiBlitz3.ab3@18022>       BNE 'loop
0002E55C <AmiBlitz3.ab3@18025>       MOVE.l (a7)+,d0
0002E562 <AmiBlitz3.ab3@18026>       SUBQ.l #2,stacktrack                                 ;int track
0002E566 <AmiBlitz3.ab3@18030>    MOVE.w #$4CDF,D1
0002E56A <AmiBlitz3.ab3@18031>    BSR.w writeword                                         ;write movem.l (a7)+,
0002E56C <AmiBlitz3.ab3@18032>   MOVEQ.l #$00,D1
0002E56E <AmiBlitz3.ab3@18033>   MOVEQ.l #$0F,D4
0002E570 <AmiBlitz3.ab3@18036>     LSL.w #1,D3
0002E572 <AmiBlitz3.ab3@18037>     ROXR.w #1,D1
0002E576 <AmiBlitz3.ab3@18038>   DBF D4,'loopsw
0002E57A <AmiBlitz3.ab3@18039>    BSR.w writeword      ;poke movem (a7)+...
0002E580 <AmiBlitz3.ab3@18041>    TST.b fast
0002E584 <AmiBlitz3.ab3@18042>    BEQ 'nomovem
0002E58A <AmiBlitz3.ab3@18043>    TST.w regnum
0002E58E <AmiBlitz3.ab3@18044>    BEQ 'nomovem
0002E594 <AmiBlitz3.ab3@18045>    CMP.w #$3c0e,$1c(a3)                                    ;true
0002E598 <AmiBlitz3.ab3@18046>    BNE 'l1b
0002E59E <AmiBlitz3.ab3@18047>    MOVE.w regnum,d1
0002E5A0 <AmiBlitz3.ab3@18048>    ASL.l #8,d1
0002E5A2 <AmiBlitz3.ab3@18049>    ASL.l #1,d1
0002E5A6 <AmiBlitz3.ab3@18050>    OR.w #$70ff,d1
0002E5B0 <AmiBlitz3.ab3@18051>    SUB.l #12,destpointer
0002E5B4 <AmiBlitz3.ab3@18052>    BSR writeword
0002E5BA <AmiBlitz3.ab3@18055>   CMP.w #$3c0f,$1c(a3)                                     ;false
0002E5BE <AmiBlitz3.ab3@18056>    BNE 'l2b
0002E5C4 <AmiBlitz3.ab3@18057>     MOVE.w regnum,d1
0002E5C6 <AmiBlitz3.ab3@18058>     ASL.l #8,d1
0002E5C8 <AmiBlitz3.ab3@18059>     ASL.l #1,d1
0002E5CC <AmiBlitz3.ab3@18060>     OR.w #$7000,d1
0002E5D6 <AmiBlitz3.ab3@18061>     SUB.l #12,destpointer
0002E5DA <AmiBlitz3.ab3@18062>     BSR writeword
0002E5DC <AmiBlitz3.ab3@18067>    MOVE.w (A7)+,D2
0002E5E0 <AmiBlitz3.ab3@18068>   CMP.w #$7,D2                                             ;destination var type
0002E5E4 <AmiBlitz3.ab3@18069>    BNE.w 'notst
0002E5EA <AmiBlitz3.ab3@18070>   MOVE.w putstlen,D1
0002E5F0 <AmiBlitz3.ab3@18071>   OR.w regnum,D1
0002E5F4 <AmiBlitz3.ab3@18072>    BSR.w writeword
0002E5F8 <AmiBlitz3.ab3@18075> BRA.w varcont
0002E5FC <AmiBlitz3.ab3@18080>   MOVE.w $6(A3),D1
0002E600 <AmiBlitz3.ab3@18081>    BSR.w uselib           ;get lib for base address
0002E604 <AmiBlitz3.ab3@18082>    BSR.w savereg
0002E606 <AmiBlitz3.ab3@18083>   MOVE.l D4,D1
0002E608 <AmiBlitz3.ab3@18084>   MOVE.l D5,-(A7)
0002E60C <AmiBlitz3.ab3@18085>    BSR.w pokemovem
0002E610 <AmiBlitz3.ab3@18086>   MOVE.w $A(A1),-(A7)     ;libbase reg
0002E612 <AmiBlitz3.ab3@18087>   ADDQ.w #8,A3
0002E614 <AmiBlitz3.ab3@18088>   MOVE.w (A3)+,-(A7)      ;get offset for lib
0002E616 <AmiBlitz3.ab3@18089>   MOVE.l A3,-(A7)
0002E61A <AmiBlitz3.ab3@18090>    BSR.w get1bytemain
0002E61C <AmiBlitz3.ab3@18091>   MOVE.w D0,-(A7)         ;remember first bracket....
0002E61E <AmiBlitz3.ab3@18095>   MOVEQ.l #$00,D3
0002E624 <AmiBlitz3.ab3@18097>   JSR checka4a5
0002E626 <AmiBlitz3.ab3@18101>   MOVE.b (A3)+,D1
0002E62A <AmiBlitz3.ab3@18102>    BMI.w 'done
0002E62C <AmiBlitz3.ab3@18103>   MOVEQ.l #$03,D2
0002E62E <AmiBlitz3.ab3@18104>   ADDQ.w #1,D3
0002E632 <AmiBlitz3.ab3@18105>   MOVEM.l D3/A3,-(A7)
0002E638 <AmiBlitz3.ab3@18107>   MOVE.b funcparloop,-(a7)
0002E63E <AmiBlitz3.ab3@18108>   CLR.b funcparloop
0002E644 <AmiBlitz3.ab3@18109>   MOVE.b blitzparloop,-(a7)
0002E64C <AmiBlitz3.ab3@18110>   MOVE.b #1,blitzparloop
0002E652 <AmiBlitz3.ab3@18111>   MOVE.l lasttoken,-(a7)
0002E658 <AmiBlitz3.ab3@18112>   MOVE.l leftsidetype,-(a7)
0002E65E <AmiBlitz3.ab3@18113>   MOVE.l rightsidetype,-(a7)
0002E662 <AmiBlitz3.ab3@18115>   BSR.w peval
0002E668 <AmiBlitz3.ab3@18117>   MOVE.l (a7)+,rightsidetype
0002E66E <AmiBlitz3.ab3@18118>   MOVE.l (a7)+,leftsidetype
0002E674 <AmiBlitz3.ab3@18119>   MOVE.l (a7)+,lasttoken
0002E67A <AmiBlitz3.ab3@18120>   MOVE.b (a7)+,blitzparloop
0002E680 <AmiBlitz3.ab3@18121>   MOVE.b (a7)+,funcparloop
0002E686 <AmiBlitz3.ab3@18123>   SUBQ.w #4,a2offset              ;readjust stack! it's coming off later!
0002E68A <AmiBlitz3.ab3@18124>   MOVEM.l (A7)+,D3/A3
0002E68E <AmiBlitz3.ab3@18125>   CMP.w #$2C,D0                   ;','
0002E692 <AmiBlitz3.ab3@18126>    BEQ.w 'loop
0002E694 <AmiBlitz3.ab3@18127>   TST.b (A3)
0002E698 <AmiBlitz3.ab3@18128>    BPL.w syntaxerr
0002E69A <AmiBlitz3.ab3@18131>   MOVE.w (A7)+,D1
0002E69E <AmiBlitz3.ab3@18132>    BSR.w tstbras
0002E6A0 <AmiBlitz3.ab3@18133>   MOVEA.l (A7)+,A3
0002E6A2 <AmiBlitz3.ab3@18134>   SUBQ.w #1,D3
0002E6A6 <AmiBlitz3.ab3@18135>    BMI.w 'nopars
0002E6A8 <AmiBlitz3.ab3@18138>   TST.b (A3)+                     ;go to end of params
0002E6AC <AmiBlitz3.ab3@18139>    BPL.w 'toend
0002E6AE <AmiBlitz3.ab3@18140>   SUBQ.w #1,A3
0002E6B0 <AmiBlitz3.ab3@18143>     MOVEQ.l #$00,D1
0002E6B2 <AmiBlitz3.ab3@18144>     MOVE.b -(A3),D1
0002E6B6 <AmiBlitz3.ab3@18145>     BTST #$4,D1
0002E6BA <AmiBlitz3.ab3@18146>      BNE.w 'addreg
0002E6C0 <AmiBlitz3.ab3@18147>     CMP.w regnum,D1
0002E6C4 <AmiBlitz3.ab3@18148>      BCC.w 'nomovem
0002E6C6 <AmiBlitz3.ab3@18149>     BSET D1,D5
0002E6C8 <AmiBlitz3.ab3@18150>     MOVEQ.l #$0F,D0
0002E6CA <AmiBlitz3.ab3@18151>     SUB.w D1,D0
0002E6CC <AmiBlitz3.ab3@18152>     BSET D0,D4
0002E6CE <AmiBlitz3.ab3@18155>     LSL.w #8,D1
0002E6D0 <AmiBlitz3.ab3@18156>     LSL.w #1,D1
0002E6D4 <AmiBlitz3.ab3@18157>     ORI.w #$201F,D1
0002E6D8 <AmiBlitz3.ab3@18158>    BRA.w 'gotit
0002E6DC <AmiBlitz3.ab3@18161>     ANDI.w #$7,D1
0002E6DE <AmiBlitz3.ab3@18162>     LSL.w #8,D1
0002E6E0 <AmiBlitz3.ab3@18163>     LSL.w #1,D1
0002E6E4 <AmiBlitz3.ab3@18164>     ORI.w #$205F,D1
0002E6E8 <AmiBlitz3.ab3@18167>      BSR.w writeword
0002E6EC <AmiBlitz3.ab3@18168>   DBF D3,'loop2
0002E6F2 <AmiBlitz3.ab3@18171>   MOVE.w (A7)+,libjsr+2
0002E6F8 <AmiBlitz3.ab3@18172>   MOVE.w (A7)+,libbase+2
0002E6FE <AmiBlitz3.ab3@18173>   MOVE.l libbase,D1
0002E702 <AmiBlitz3.ab3@18174>    BSR.w writelong
0002E708 <AmiBlitz3.ab3@18175>   MOVE.l libjsr,D1
0002E70C <AmiBlitz3.ab3@18176>    BSR.w writelong
0002E712 <AmiBlitz3.ab3@18177>   MOVE.w regnum,D1
0002E716 <AmiBlitz3.ab3@18178>    BEQ.w 'nofin
0002E718 <AmiBlitz3.ab3@18179>   LSL.w #8,D1
0002E71A <AmiBlitz3.ab3@18180>   LSL.w #1,D1
0002E71E <AmiBlitz3.ab3@18181>   ORI.w #$2000,D1
0002E722 <AmiBlitz3.ab3@18182>    BSR.w writeword
0002E724 <AmiBlitz3.ab3@18185>   MOVE.l (A7)+,D1
0002E728 <AmiBlitz3.ab3@18186>    BSR.w pokemovem
0002E72E <AmiBlitz3.ab3@18188>    JSR restorea4a5
0002E730 <AmiBlitz3.ab3@18190>   MOVEQ.l #$03,D2
0002E734 <AmiBlitz3.ab3@18191>    BSR.w reget
0002E738 <AmiBlitz3.ab3@18192> BRA.w varcont
0002E73A <AmiBlitz3.ab3@18201>   TST.w D3
0002E73E <AmiBlitz3.ab3@18202>    BEQ.w 'nopars
0002E742 <AmiBlitz3.ab3@18203>   CMP.w #$28,D1      ;'('
0002E746 <AmiBlitz3.ab3@18204>    BNE.w syntaxerr
0002E74A <AmiBlitz3.ab3@18205>   CMP.w #$29,D0      ;')'
0002E74E <AmiBlitz3.ab3@18206>    BNE.w syntaxerr
0002E752 <AmiBlitz3.ab3@18207>  BRA.w get1bytemain
0002E756 <AmiBlitz3.ab3@18210>   CMP.w #$28,D1       ;'('
0002E75A <AmiBlitz3.ab3@18211>    BNE.w 'skip
0002E75E <AmiBlitz3.ab3@18212>    BSR.w get1bytemain
0002E762 <AmiBlitz3.ab3@18213>   CMP.w #$29,D0       ;')'
0002E766 <AmiBlitz3.ab3@18214>    BNE.w syntaxerr
0002E76A <AmiBlitz3.ab3@18215>  BRA.w get1bytemain
0002E76C <AmiBlitz3.ab3@18218> RTS
0002E76E <AmiBlitz3.ab3@18222>   TST.w D1
0002E772 <AmiBlitz3.ab3@18223>    BNE.w writelong
0002E774 <AmiBlitz3.ab3@18224> RTS
0002E778 <AmiBlitz3.ab3@18229>   MOVE.w #$48E7,D4
0002E77A <AmiBlitz3.ab3@18230>   SWAP D4
0002E77C <AmiBlitz3.ab3@18231>   CLR.w D4
0002E780 <AmiBlitz3.ab3@18232>   MOVE.w #$4CDF,D5
0002E782 <AmiBlitz3.ab3@18233>   SWAP D5
0002E784 <AmiBlitz3.ab3@18234>   CLR.w D5
0002E78A <AmiBlitz3.ab3@18235>   MOVE.w regnum,D1
0002E78E <AmiBlitz3.ab3@18236>    BEQ.w 'skip
0002E792 <AmiBlitz3.ab3@18237>   BSET #$F,D4
0002E796 <AmiBlitz3.ab3@18238>   BSET #$0,D5
0002E79A <AmiBlitz3.ab3@18239>   CMP.w #$2,D1
0002E79E <AmiBlitz3.ab3@18240>    BCS.w 'skip2
0002E7A2 <AmiBlitz3.ab3@18243>   BSET #$E,D4
0002E7A6 <AmiBlitz3.ab3@18244>   BSET #$1,D5
0002E7A8 <AmiBlitz3.ab3@18247>  RTS
0002E7AE <AmiBlitz3.ab3@18250>   TST.w fuckpos
0002E7B2 <AmiBlitz3.ab3@18251>   BNE.w 'skip3
0002E7B4 <AmiBlitz3.ab3@18252> RTS
0002E7B6 <AmiBlitz3.ab3@18255> fuckpos:  Ds.w 1
0002E7BC <AmiBlitz3.ab3@18259>   MOVE.w sbasegot,D1
0002E7C0 <AmiBlitz3.ab3@18260>    BEQ.w 'skip
0002E7C4 <AmiBlitz3.ab3@18264>   MOVE.w sbgot(PC),D1
0002E7C8 <AmiBlitz3.ab3@18265>    BNE.w 'skip2
0002E7D0 <AmiBlitz3.ab3@18269>   MOVE.w #$0002,sbgot
0002E7D6 <AmiBlitz3.ab3@18270>   MOVE.w movea3a7,D1
0002E7DA <AmiBlitz3.ab3@18271>  BRA.w writeword
0002E7DC <AmiBlitz3.ab3@18274>  RTS
0002E7E4 <AmiBlitz3.ab3@18279>   MOVE.w #$0001,sbgot                                      ;voodoo magic! - Will it work?
0002E7EA <AmiBlitz3.ab3@18281>   MOVE.l #$C601,D1                  ; was #workstart,
0002E7F2 <AmiBlitz3.ab3@18282>   MOVE.w #-1,sbasegot               
0002E7F8 <AmiBlitz3.ab3@18284>   MOVE.l d1,lastinstruction
0002E7FC <AmiBlitz3.ab3@18286>   BSR.w Atokejsr
0002E7FE <AmiBlitz3.ab3@18287> RTS
0002E808 <AmiBlitz3.ab3@18292>   MOVE.l data1,litdata1
0002E80E <AmiBlitz3.ab3@18294>   TST.b fast
0002E812 <AmiBlitz3.ab3@18295>   BEQ 'l50                                                 ;optistring  seem impossible to get work
0002E816 <AmiBlitz3.ab3@18299>  BRA 'l50                                                  ;to deactivate
0002E81C <AmiBlitz3.ab3@18305>   TST.b optistring
0002E820 <AmiBlitz3.ab3@18306>   BNE.s 'l21
0002E826 <AmiBlitz3.ab3@18307>   CLR.b string1
0002E82E <AmiBlitz3.ab3@18308>   MOVE.b #1,optistring
0002E834 <AmiBlitz3.ab3@18309>   TST.b nostringopt
0002E838 <AmiBlitz3.ab3@18310>   BNE 'l21
0002E83A <AmiBlitz3.ab3@18311>   MOVE.l a5,a4
0002E83C <AmiBlitz3.ab3@18312>   SUBQ.l #1,a4
0002E83E <AmiBlitz3.ab3@18315>     TST.b (a4)
0002E842 <AmiBlitz3.ab3@18316>     BMI 'l19a
0002E846 <AmiBlitz3.ab3@18317>     BEQ.s 'l20
0002E84A <AmiBlitz3.ab3@18318>     CMP.b #$22,(a4)
0002E84E <AmiBlitz3.ab3@18319>     BEQ.s 'l19
0002E854 <AmiBlitz3.ab3@18322>     TST.w string1
0002E858 <AmiBlitz3.ab3@18323>     BNE 'l11
0002E85C <AmiBlitz3.ab3@18324>     CMP.b #":",(a4)
0002E860 <AmiBlitz3.ab3@18325>     BEQ.s 'l20
0002E864 <AmiBlitz3.ab3@18326>     CMP.b #";",(a4)
0002E868 <AmiBlitz3.ab3@18327>     BEQ.s 'l20
0002E86C <AmiBlitz3.ab3@18328>     CMP.b #"+",(a4)
0002E870 <AmiBlitz3.ab3@18329>     BEQ.s 'l21
0002E874 <AmiBlitz3.ab3@18330>     CMP.b #",",(a4)
0002E878 <AmiBlitz3.ab3@18331>     BEQ.s 'l20                                             ;was l21
0002E87C <AmiBlitz3.ab3@18332>     CMP.b #")",(a4)
0002E880 <AmiBlitz3.ab3@18333>     BEQ.s 'l20                                             ;was l21
0002E882 <AmiBlitz3.ab3@18336>     ADDQ.l #1,a4
0002E886 <AmiBlitz3.ab3@18337>  BRA.s 'l10
0002E88E <AmiBlitz3.ab3@18340>   BCHG #0,string1
0002E892 <AmiBlitz3.ab3@18341>  BRA 'l18
0002E894 <AmiBlitz3.ab3@18344>   ADDQ.l #1,a4
0002E896 <AmiBlitz3.ab3@18345>   TST.b (a4)
0002E89A <AmiBlitz3.ab3@18346>   BEQ 'l21
0002E89E <AmiBlitz3.ab3@18347>  BRA 'l11
0002E8A0 <AmiBlitz3.ab3@18350>   MOVE.l a5,a4
0002E8A2 <AmiBlitz3.ab3@18351>   SUBQ.l #1,a4
0002E8A6 <AmiBlitz3.ab3@18354>   CMP.b #$20,-(a4)
0002E8AA <AmiBlitz3.ab3@18355>   BEQ 'll1
0002E8AE <AmiBlitz3.ab3@18356>   CMP.b #"+",(a4)
0002E8B2 <AmiBlitz3.ab3@18357>   BEQ 'l21
0002E8BA <AmiBlitz3.ab3@18372>   MOVE.b #2,optistring
0002E8C2 <AmiBlitz3.ab3@18375>   CMP.b #2,optistring
0002E8C6 <AmiBlitz3.ab3@18376>   BEQ.s 'l100
0002E8CA <AmiBlitz3.ab3@18379>   BSR.w makesbase
0002E8CE <AmiBlitz3.ab3@18381>   BSR.w pokedata1                                          ;writestringsizespace
0002E8D2 <AmiBlitz3.ab3@18382>   BSR.w pokedata1
0002E8D4 <AmiBlitz3.ab3@18385>   MOVEQ.l #$00,D2
0002E8DA <AmiBlitz3.ab3@18389>     MOVE.l a5,lastsourcepos
0002E8DC <AmiBlitz3.ab3@18390>     MOVEQ #0,d0
0002E8DE <AmiBlitz3.ab3@18391>     MOVE.b (a5)+,d0
0002E8E0 <AmiBlitz3.ab3@18393>     TST.w D0
0002E8E4 <AmiBlitz3.ab3@18394>      BEQ.w notqerr
0002E8E8 <AmiBlitz3.ab3@18395>     CMP.w #$22,D0     ; '"'                                     ; --- " ---
0002E8EC <AmiBlitz3.ab3@18396>      BEQ.w 'done
0002E8F0 <AmiBlitz3.ab3@18398>     CMP.b #"\",d0
0002E8F4 <AmiBlitz3.ab3@18399>      BNE 'l1
0002E8F8 <AmiBlitz3.ab3@18400>     CMP.b #"\",(a5)
0002E8FC <AmiBlitz3.ab3@18401>      BNE 'l1
0002E902 <AmiBlitz3.ab3@18402>     TST.b newsyntax
0002E906 <AmiBlitz3.ab3@18403>      BEQ 'l1
0002E90C <AmiBlitz3.ab3@18404>     CMP.w #"\\",1(a5)                                      ; new compiler constants
0002E910 <AmiBlitz3.ab3@18405>     BNE 'l2
0002E912 <AmiBlitz3.ab3@18406>     ADDQ #2,a5
0002E914 <AmiBlitz3.ab3@18409>     ADDQ.w #1,D2
0002E916 <AmiBlitz3.ab3@18410>     MOVE.w D0,D1
0002E91A <AmiBlitz3.ab3@18411>     BSR.w pokedata1b                                        ;writestring
0002E91E <AmiBlitz3.ab3@18412>  BRA.w 'writestring
0002E924 <AmiBlitz3.ab3@18415>     JSR check_newconstants
0002E928 <AmiBlitz3.ab3@18416>  BRA 'writestring
0002E92E <AmiBlitz3.ab3@18421>   NOT instringon
0002E934 <AmiBlitz3.ab3@18423>   MOVE.w dontwrite_nomemleft,D1
0002E938 <AmiBlitz3.ab3@18424>   BNE.w 'skip
0002E940 <AmiBlitz3.ab3@18426>   CMP.b #2,optistring
0002E944 <AmiBlitz3.ab3@18427>   BEQ 'skip
0002E94A <AmiBlitz3.ab3@18429>     MOVEA.l litdata1,A0
0002E94C <AmiBlitz3.ab3@18430>     CLR.w (A0)+                                            ;writesize
0002E94E <AmiBlitz3.ab3@18431>     MOVE.w D2,(A0)
0002E952 <AmiBlitz3.ab3@18434>   BSR.w makelit                                          ;writestringconstantcode
0002E958 <AmiBlitz3.ab3@18435>   ADDQ.l #1,data1
0002E960 <AmiBlitz3.ab3@18436>   BCLR #$0,data1+3
0002E962 <AmiBlitz3.ab3@18437>   MOVEQ.l #$07,D2
0002E966 <AmiBlitz3.ab3@18438> BRA.w get1bytemain
0002E96A <AmiBlitz3.ab3@18443>   BSR.w makename2
0002E96E <AmiBlitz3.ab3@18445>   BSR.w findlabel2
0002E972 <AmiBlitz3.ab3@18446>   BEQ.w 'found
0002E976 <AmiBlitz3.ab3@18448>   BSR.w addlabelhash
0002E97A <AmiBlitz3.ab3@18449>   CLR.l $4(A2)           ;no refs
0002E97E <AmiBlitz3.ab3@18450>   CLR.l $8(A2)           ;not created yet (no PC)
0002E986 <AmiBlitz3.ab3@18452>   MOVE.w linenumat+2,$10(A2)  ; was linenumat,    ;context
0002E98C <AmiBlitz3.ab3@18454>   MOVE.w linenumat,d0
0002E98E <AmiBlitz3.ab3@18455>   MOVEQ #0,d1
0002E992 <AmiBlitz3.ab3@18456>   MOVE.b -1(a2,d7),d1
0002E996 <AmiBlitz3.ab3@18457>   MOVE.w d0,0(a2,d1)
0002E99A <AmiBlitz3.ab3@18459>  BRA.w 'makeit
0002E99E <AmiBlitz3.ab3@18462>   TST.l $8(A2)
0002E9A2 <AmiBlitz3.ab3@18463>   BNE.w 'gotit    ;already made
0002E9A8 <AmiBlitz3.ab3@18469>   MOVEA.l _execbase,A6
0002E9AA <AmiBlitz3.ab3@18470>   MOVEQ.l #$0C+2,D0      ; was 12
0002E9AC <AmiBlitz3.ab3@18471>   MOVEQ.l #$01,D1
0002E9B2 <AmiBlitz3.ab3@18473>   MOVE.l mempool,a0
0002E9B6 <AmiBlitz3.ab3@18474>   JSR _AllocPooled(a6)
0002E9B8 <AmiBlitz3.ab3@18477>   MOVEA.l D0,A0
0002E9BC <AmiBlitz3.ab3@18478>   MOVE.l $4(A2),(A0)
0002E9C0 <AmiBlitz3.ab3@18479>   MOVE.l A0,$4(A2)
0002E9C8 <AmiBlitz3.ab3@18480>   MOVE.l destpointer,$4(A0)
0002E9CC <AmiBlitz3.ab3@18481>   ADDQ.l #2,$4(A0)
0002E9D4 <AmiBlitz3.ab3@18482>   MOVE.w procnum,$8(A0)
0002E9DC <AmiBlitz3.ab3@18483>   MOVE.w linenumat+2,$A(A0)   ; was linenumat,
0002E9E4 <AmiBlitz3.ab3@18485>   MOVE.w linenumat,$c(a0)
0002E9E6 <AmiBlitz3.ab3@18487>  RTS
0002E9EA <AmiBlitz3.ab3@18490>   MOVE.l $4(A2),D1
0002E9EE <AmiBlitz3.ab3@18491>   BTST #$0,D1
0002E9F2 <AmiBlitz3.ab3@18492>    BNE.w illlaberr
0002E9F8 <AmiBlitz3.ab3@18493>   MOVE.w procnum,D1
0002E9FC <AmiBlitz3.ab3@18494>   CMP.w $10(A2),D1
0002EA00 <AmiBlitz3.ab3@18495>    BNE.w referr
0002EA02 <AmiBlitz3.ab3@18498> RTS
0002EA04 <AmiBlitz3.ab3@18504>   MOVE.w D0,-(A7)
0002EA0C <AmiBlitz3.ab3@18506>   CMP.b #2,optistring
0002EA10 <AmiBlitz3.ab3@18507>   BEQ 'l10
0002EA16 <AmiBlitz3.ab3@18511>   MOVE.w numtoa0,D1
0002EA1A <AmiBlitz3.ab3@18512>    BSR.w writeword
0002EA1E <AmiBlitz3.ab3@18513>    BSR.w addoff
0002EA24 <AmiBlitz3.ab3@18514>   MOVE.l litdata1,D1
0002EA28 <AmiBlitz3.ab3@18515>    BSR.w writelong
0002EA2E <AmiBlitz3.ab3@18516>   MOVE.w pushlen,D1
0002EA32 <AmiBlitz3.ab3@18517>    BSR.w writeword
0002EA36 <AmiBlitz3.ab3@18518>   MOVE.w #$C600,D1        ; was #copstring
0002EA3A <AmiBlitz3.ab3@18519>    BSR.w Atokejsr
0002EA3C <AmiBlitz3.ab3@18520>   MOVE.w (A7)+,D0
0002EA3E <AmiBlitz3.ab3@18521>  RTS
0002EA40 <AmiBlitz3.ab3@18525>   MOVEQ #0,d1
0002EA44 <AmiBlitz3.ab3@18526>   BSR.w pokedata1b
0002EA4A <AmiBlitz3.ab3@18527>   MOVE.l destpointer,a4
0002EA4E <AmiBlitz3.ab3@18528>   MOVE.w #$203c,d1
0002EA54 <AmiBlitz3.ab3@18529>   TST.w mode
0002EA58 <AmiBlitz3.ab3@18530>   BNE 'lm10
0002EA5E <AmiBlitz3.ab3@18531>    ADDQ.w #4,a2offset
0002EA62 <AmiBlitz3.ab3@18532>   MOVE.w #$2f3c,d1
0002EA68 <AmiBlitz3.ab3@18535>   TST.w mode
0002EA6C <AmiBlitz3.ab3@18536>   BEQ 'lm3
0002EA72 <AmiBlitz3.ab3@18537>   MOVE.w regnum,D0
0002EA74 <AmiBlitz3.ab3@18538>   LSL.w #8,D0
0002EA76 <AmiBlitz3.ab3@18539>   LSL.w #1,D0
0002EA78 <AmiBlitz3.ab3@18540>   OR.w d0,d1
0002EA7C <AmiBlitz3.ab3@18541>   BSR writeword
0002EA80 <AmiBlitz3.ab3@18542>   BSR.w addoff
0002EA86 <AmiBlitz3.ab3@18543>   MOVE.l litdata1,D1
0002EA8A <AmiBlitz3.ab3@18544>   BSR.w writelong
0002EA92 <AmiBlitz3.ab3@18545>   CMP.w #3,mode
0002EA96 <AmiBlitz3.ab3@18546>   BEQ 'l30
0002EA9C <AmiBlitz3.ab3@18547>    ADDQ.w #4,a2offset
0002EAA0 <AmiBlitz3.ab3@18548>   MOVE.w #$4878,D1
0002EAA4 <AmiBlitz3.ab3@18549>   BSR.w writeword
0002EAA6 <AmiBlitz3.ab3@18550>   MOVE.l d2,d1
0002EAAA <AmiBlitz3.ab3@18551>   BSR writeword
0002EAAC <AmiBlitz3.ab3@18554>   MOVE.w (A7)+,D0
0002EAAE <AmiBlitz3.ab3@18555>  RTS
0002EAB4 <AmiBlitz3.ab3@18558>   MOVE.l #$3f3c0007,d1
0002EAB8 <AmiBlitz3.ab3@18559>   BSR writelong
0002EABE <AmiBlitz3.ab3@18560>   MOVE.w regnum,D1
0002EAC0 <AmiBlitz3.ab3@18561>   LSL.w #8,D1
0002EAC2 <AmiBlitz3.ab3@18562>   LSL.w #1,D1
0002EAC6 <AmiBlitz3.ab3@18563>   ORI.w #$2f3c,d1
0002EACA <AmiBlitz3.ab3@18564>   BSR writeword
0002EAD0 <AmiBlitz3.ab3@18565>    ADDQ.w #4,a2offset
0002EAD2 <AmiBlitz3.ab3@18566>   MOVE.l d2,d1
0002EAD6 <AmiBlitz3.ab3@18567>   BSR writelong
0002EADA <AmiBlitz3.ab3@18568>   MOVE.w #$2f3c,d1
0002EADE <AmiBlitz3.ab3@18569>   BSR writeword
0002EAE2 <AmiBlitz3.ab3@18570>   BSR.w addoff
0002EAE8 <AmiBlitz3.ab3@18571>   MOVE.l litdata1,D1
0002EAEC <AmiBlitz3.ab3@18572>   BSR.w writelong
0002EAEE <AmiBlitz3.ab3@18573>   MOVE.w (A7)+,D0
0002EAF0 <AmiBlitz3.ab3@18574> RTS
0002EAF4 <AmiBlitz3.ab3@18579>   BSR.w get1bytemain
0002EAF8 <AmiBlitz3.ab3@18580>    BSR.w makealab2
0002EAFE <AmiBlitz3.ab3@18582>   MOVE.w regnum,D1
0002EB00 <AmiBlitz3.ab3@18583>   LSL.w #8,D1
0002EB02 <AmiBlitz3.ab3@18584>   LSL.w #1,D1
0002EB06 <AmiBlitz3.ab3@18585>   ORI.w #$203C,D1
0002EB0A <AmiBlitz3.ab3@18586>    BSR.w writeword        ;create move.l #loc,dn
0002EB0E <AmiBlitz3.ab3@18587>    BSR.w addoff
0002EB12 <AmiBlitz3.ab3@18588>   MOVE.l $8(A2),D1
0002EB16 <AmiBlitz3.ab3@18589>    BSR.w writelong
0002EB18 <AmiBlitz3.ab3@18590>   MOVEQ.l #$03,D2
0002EB1E <AmiBlitz3.ab3@18592>   CLR.b peekaddrsize
0002EB22 <AmiBlitz3.ab3@18594> BRA.w reget
0002EB24 <AmiBlitz3.ab3@18598>   MOVEQ.l #$00,D3
0002EB28 <AmiBlitz3.ab3@18601>   BSR.w get1bytemain
0002EB2C <AmiBlitz3.ab3@18602>    BEQ.w syntaxerr
0002EB30 <AmiBlitz3.ab3@18603>   CMP.w #$22,D0         ;'"'
0002EB34 <AmiBlitz3.ab3@18604>    BEQ.w 'done
0002EB36 <AmiBlitz3.ab3@18605>   LSL.l #8,D3
0002EB38 <AmiBlitz3.ab3@18606>   MOVE.b D0,D3
0002EB3C <AmiBlitz3.ab3@18607>  BRA.w 'loop
0002EB40 <AmiBlitz3.ab3@18610>   BSR.w get1bytemain
0002EB44 <AmiBlitz3.ab3@18611> BRA.w fetchnum2
0002EB46 <AmiBlitz3.ab3@18615>   MOVE.w D2,-(A7)                                          ;basicvarsforasm
0002EB4A <AmiBlitz3.ab3@18616>    BSR.w makename2              ;get the things name
0002EB4E <AmiBlitz3.ab3@18617>    BSR.w findlabel2
0002EB52 <AmiBlitz3.ab3@18619>    BEQ.w 'l10
0002EB58 <AmiBlitz3.ab3@18620>    LEA ptr_parameterstore,a0
0002EB5E <AmiBlitz3.ab3@18621>    CMP.b #"@",-1(a0,d2.w)
0002EB62 <AmiBlitz3.ab3@18623>    BNE cnferr
0002EB66 <AmiBlitz3.ab3@18625>    CLR.b -1(a0,d2.w)
0002EB68 <AmiBlitz3.ab3@18626>    SUBQ.l #1,d2
0002EB6E <AmiBlitz3.ab3@18627>    LEA varbase,a2
0002EB72 <AmiBlitz3.ab3@18628>    BSR findvariable
0002EB76 <AmiBlitz3.ab3@18629>    BNE cnferr
0002EB7A <AmiBlitz3.ab3@18630>    CMP.b #"\",d0
0002EB7E <AmiBlitz3.ab3@18631>    BNE 'l6
0002EB84 <AmiBlitz3.ab3@18632>    ADDQ #1,lastsourcepos
0002EB88 <AmiBlitz3.ab3@18633>    MOVE.l $a(a2),a2
0002EB8A <AmiBlitz3.ab3@18634>    ADDQ.l #4,a2
0002EB8E <AmiBlitz3.ab3@18635>    BSR.w makename2
0002EB92 <AmiBlitz3.ab3@18636>    BSR findvariable2
0002EB96 <AmiBlitz3.ab3@18637>    BNE cnferr
0002EB9A <AmiBlitz3.ab3@18638>  BRA.s 'l6                                                  ;???
0002EB9E <AmiBlitz3.ab3@18641>    MOVE.w $4(a2),d3
0002EBA0 <AmiBlitz3.ab3@18642>    EXT.l d3
0002EBA4 <AmiBlitz3.ab3@18643>  BRA 'npc
0002EBA8 <AmiBlitz3.ab3@18647>   MOVE.l $8(A2),D3          ;val.
0002EBB0 <AmiBlitz3.ab3@18648>   CMPI.l #$1,$4(A2)
0002EBB4 <AmiBlitz3.ab3@18649>    BEQ.w 'npc
0002EBBA <AmiBlitz3.ab3@18650>   NOT.w asmtype
0002EBBC <AmiBlitz3.ab3@18653>   MOVE.w (A7)+,D2
0002EBC0 <AmiBlitz3.ab3@18654> BRA.w fetchnum2
0002EBC2 <AmiBlitz3.ab3@18658>   MOVE.w D2,-(A7)           ;remember old type
0002EBC6 <AmiBlitz3.ab3@18659>    BSR.w getparameter
0002EBCA <AmiBlitz3.ab3@18660>   CMP.w #"{",D0                                          ;test if var = function{}
0002EBCE <AmiBlitz3.ab3@18661>    BEQ.w isfunction
0002EBD2 <AmiBlitz3.ab3@18662>    BSR.w fetchvars
0002EBD6 <AmiBlitz3.ab3@18664>    BSR.w calcvar                                         ;getvaroffset+type
0002EBDA <AmiBlitz3.ab3@18665>    BSR.w variable2
0002EBE0 <AmiBlitz3.ab3@18667>    MOVE.l a2,rightsidetype
0002EBEA <AmiBlitz3.ab3@18668>    MOVE.w flagmask, rightsideflagmask
0002EBF0 <AmiBlitz3.ab3@18680>    TST.b typecheck
0002EBF4 <AmiBlitz3.ab3@18681>    BEQ varcont
0002EBFE <AmiBlitz3.ab3@18682>    CMP.l #$da01,lasttoken                                  ;poke
0002EC02 <AmiBlitz3.ab3@18683>    BEQ 'l1
0002EC0C <AmiBlitz3.ab3@18684>    CMP.l #$da02,lasttoken                                  ;peek
0002EC10 <AmiBlitz3.ab3@18685>    BNE 'l2
0002EC18 <AmiBlitz3.ab3@18688>    CMP.w #1,parnum                                         ; is not call when & is used in parameter
0002EC1C <AmiBlitz3.ab3@18689>    BNE varcont
0002EC22 <AmiBlitz3.ab3@18690>    MOVE.b d2,peekaddrsize
0002EC26 <AmiBlitz3.ab3@18691>    BRA varcont
0002EC2C <AmiBlitz3.ab3@18694>   CLR.b peekaddrsize
0002EC30 <AmiBlitz3.ab3@18698>   CMP.w #$1,D2
0002EC34 <AmiBlitz3.ab3@18699>    BNE.w 'notabyte
0002EC3A <AmiBlitz3.ab3@18703>   MOVE.w regnum,D1
0002EC3E <AmiBlitz3.ab3@18704>   ORI.w #$4880,D1      ;ext.w Dn
0002EC42 <AmiBlitz3.ab3@18705>    BSR.w writeword
0002EC44 <AmiBlitz3.ab3@18708>   MOVE.w (A7)+,D3      ;old type
0002EC48 <AmiBlitz3.ab3@18709>    BEQ.w 'done         ;type not set yet...
0002EC4E <AmiBlitz3.ab3@18712>    MOVE.l lastinstructionaddr,a0
0002EC52 <AmiBlitz3.ab3@18714>   CMP.w #$3,D3
0002EC56 <AmiBlitz3.ab3@18715>    BNE.w 'nob
0002EC5A <AmiBlitz3.ab3@18716>   CMP.w #$4,D2
0002EC5E <AmiBlitz3.ab3@18717>    BEQ.w 'conv2
0002EC60 <AmiBlitz3.ab3@18720>   CMP.w D2,D3
0002EC64 <AmiBlitz3.ab3@18721>    BLS.w 'done
0002EC66 <AmiBlitz3.ab3@18724>   EXG.l D2,D3
0002EC68 <AmiBlitz3.ab3@18726>   MOVE.l a0,-(a7)
0002EC6E <AmiBlitz3.ab3@18727>   TST.b typecheck
0002EC72 <AmiBlitz3.ab3@18728>   BEQ 'ok
0002EC78 <AmiBlitz3.ab3@18729>   TST.b notypecheck
0002EC7C <AmiBlitz3.ab3@18730>   BNE 'ok
0002EC82 <AmiBlitz3.ab3@18731>   MOVE.l leftsidetype,a0
0002EC8C <AmiBlitz3.ab3@18732>   CMP.l #0,leftsidetype
0002EC90 <AmiBlitz3.ab3@18733>   BEQ 'ok
0002EC98 <AmiBlitz3.ab3@18734>   CMP.w #1,leftsideflagmask
0002EC9C <AmiBlitz3.ab3@18735>   BEQ 'isptr
0002ECA4 <AmiBlitz3.ab3@18736>   CMP.l #$100,4(a0)
0002ECA8 <AmiBlitz3.ab3@18737>   BLE 'ok
0002ECAC <AmiBlitz3.ab3@18740>   CMP.b #3,d3
0002ECB0 <AmiBlitz3.ab3@18741>   BEQ 'ok
0002ECB4 <AmiBlitz3.ab3@18742>   CMP.b #7,d3
0002ECB8 <AmiBlitz3.ab3@18743>   BEQ 'ok
0002ECBE <AmiBlitz3.ab3@18744>   JMP   error_convert_types      ;for all syntax only long and string allowed to assign to a type
0002ECC0 <AmiBlitz3.ab3@18747>   MOVE.l (a7)+,a0
0002ECC4 <AmiBlitz3.ab3@18749>   BSR.w writeconvertcode         ;called from var assign      ;bump up new type to old...
0002ECC8 <AmiBlitz3.ab3@18752> BRA.w reget
0002ECCA <AmiBlitz3.ab3@18756>   MOVEQ.l #$00,D3
0002ECD0 <AmiBlitz3.ab3@18757>   MOVE.w regnum,D1
0002ECD4 <AmiBlitz3.ab3@18758>    BEQ.w savem_skip
0002ECD6 <AmiBlitz3.ab3@18759>   SUBQ.w #1,D1
0002ECD8 <AmiBlitz3.ab3@18762>      LSR.l #1,D3
0002ECDC <AmiBlitz3.ab3@18763>      BSET #$F,D3
0002ECE0 <AmiBlitz3.ab3@18764>   DBF D1,'loop
0002ECE6 <AmiBlitz3.ab3@18766>    TST.b fpu
0002ECEA <AmiBlitz3.ab3@18767>    BEQ 'l1
0002ECF0 <AmiBlitz3.ab3@18768>    ADDQ.l #2,stacktrack                                    ;intern command
0002ECF2 <AmiBlitz3.ab3@18769>     MOVE.l a0,-(a7)
0002ECF8 <AmiBlitz3.ab3@18770>     MOVE.l stacktrack,d1
0002ECFE <AmiBlitz3.ab3@18771>     LEA fpustackbase,a0
0002ED02 <AmiBlitz3.ab3@18772>     CLR.w 0(a0,d1)
0002ED08 <AmiBlitz3.ab3@18773>     CLR.w regmask
0002ED0A <AmiBlitz3.ab3@18774>     MOVE.l (a7)+,a0
0002ED0E <AmiBlitz3.ab3@18778>   MOVE.w #$48E7,D1
0002ED12 <AmiBlitz3.ab3@18779>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002ED14 <AmiBlitz3.ab3@18780>   MOVE.w D3,D1
0002ED18 <AmiBlitz3.ab3@18781> BRA.w writeword
0002ED1A <AmiBlitz3.ab3@18786>   MOVEQ.l #$00,D3
0002ED20 <AmiBlitz3.ab3@18787>   MOVE.w regnum,D1
0002ED24 <AmiBlitz3.ab3@18788>    BEQ.w savem_skip
0002ED26 <AmiBlitz3.ab3@18789>   SUBQ.w #1,D1
0002ED28 <AmiBlitz3.ab3@18792>     LSR.l #1,D3
0002ED2C <AmiBlitz3.ab3@18793>     BSET #$F,D3
0002ED30 <AmiBlitz3.ab3@18794>   DBF D1,'loop
0002ED36 <AmiBlitz3.ab3@18796>    TST.b fpu
0002ED3A <AmiBlitz3.ab3@18797>    BEQ 'l1
0002ED40 <AmiBlitz3.ab3@18798>    ADDQ.l #2,stacktrack                                    ;intern command
0002ED42 <AmiBlitz3.ab3@18799>     MOVE.l a0,-(a7)
0002ED48 <AmiBlitz3.ab3@18800>     MOVE.l stacktrack,d1
0002ED4E <AmiBlitz3.ab3@18801>     LEA fpustackbase,a0
0002ED52 <AmiBlitz3.ab3@18802>     CLR.w 0(a0,d1)
0002ED56 <AmiBlitz3.ab3@18803>    CMP.b #5,(a3)                                           ;result float ?
0002ED5A <AmiBlitz3.ab3@18804>     BNE 'nofpu
0002ED64 <AmiBlitz3.ab3@18806>     MOVE.w regnum,regnumfunc
0002ED6A <AmiBlitz3.ab3@18809>   CLR.w regmask
0002ED6C <AmiBlitz3.ab3@18810>     MOVE.l (a7)+,a0
0002ED70 <AmiBlitz3.ab3@18814>   MOVE.w #$48E7,D1
0002ED74 <AmiBlitz3.ab3@18815>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002ED76 <AmiBlitz3.ab3@18816>   MOVE.w D3,D1
0002ED7A <AmiBlitz3.ab3@18817>  BRA.w writeword
0002ED7C <AmiBlitz3.ab3@18820> RTS
0002ED7E <AmiBlitz3.ab3@18824>   MOVE.l D1,-(A7)
0002ED82 <AmiBlitz3.ab3@18825>   MOVE.w #$4EB9,D1
0002ED86 <AmiBlitz3.ab3@18826>    BSR.w writeword
0002ED8A <AmiBlitz3.ab3@18827>    BSR.w addoff
0002ED8C <AmiBlitz3.ab3@18828>   MOVE.l (A7)+,D1
0002ED90 <AmiBlitz3.ab3@18829> BRA.w writelong
0002ED94 <AmiBlitz3.ab3@18836>    BSR.w findproc                                          ;write function call
0002ED98 <AmiBlitz3.ab3@18838>    BEQ 'l1a
0002ED9E <AmiBlitz3.ab3@18839>    TST.l unusedfunc
0002EDA2 <AmiBlitz3.ab3@18841>    BEQ noprocerr
0002EDA8 <AmiBlitz3.ab3@18844>    JSR gotoendsource
0002EDB0 <AmiBlitz3.ab3@18847>   MOVE.l funcstruct_returntype(a2),rightsidetype
0002EDB6 <AmiBlitz3.ab3@18848>   TST.l typetocast
0002EDBA <AmiBlitz3.ab3@18849>   BEQ 'nocast
0002EDC4 <AmiBlitz3.ab3@18850>   MOVE.l typetocast,rightsidetype
0002EDCA <AmiBlitz3.ab3@18851>   CLR.l typetocast
0002EDCC <AmiBlitz3.ab3@18852>   MOVE.l a1,-(a7)
0002EDD2 <AmiBlitz3.ab3@18853>   MOVE.l rightsidetype,a1
0002EDD8 <AmiBlitz3.ab3@18854>   CMP.l leftsidetype,a1
0002EDDC <AmiBlitz3.ab3@18855>   BEQ 'ok
0002EDE2 <AmiBlitz3.ab3@18856>   JMP errorconvertreturntype2
0002EDE4 <AmiBlitz3.ab3@18859>   MOVE.l (a7)+,a1
0002EDE6 <AmiBlitz3.ab3@18863>   MOVEQ.l #$00,D1
0002EDEA <AmiBlitz3.ab3@18864>   MOVE.b $5(A2),D1
0002EDF0 <AmiBlitz3.ab3@18866>   MOVE.b d1,retmode
0002EDF4 <AmiBlitz3.ab3@18868>    BMI.w illprocerr
0002EDFA <AmiBlitz3.ab3@18870>    MOVE.b #1,isfunc(a2)
0002EDFC <AmiBlitz3.ab3@18872>   MOVE.w D1,-(A7)
0002EDFE <AmiBlitz3.ab3@18873>   MOVEQ.l #$00,D1
0002EE02 <AmiBlitz3.ab3@18874>   MOVE.b $4(A2),D1
0002EE04 <AmiBlitz3.ab3@18875>   LSR.w #4,D1
0002EE08 <AmiBlitz3.ab3@18876>    BEQ.w 'skip
0002EE0A <AmiBlitz3.ab3@18877>   LSL.w #2,D1
0002EE10 <AmiBlitz3.ab3@18878>   SUB.w D1,a2offset
0002EE14 <AmiBlitz3.ab3@18881>   CMPI.w #$7,(A7)       ;function type!
0002EE18 <AmiBlitz3.ab3@18882>    BNE.b 'sss
0002EE1A <AmiBlitz3.ab3@18883>   MOVE.l A2,-(A7)
0002EE1E <AmiBlitz3.ab3@18884>    BSR.w makesbase
0002EE20 <AmiBlitz3.ab3@18885>   MOVEA.l (A7)+,A2
0002EE26 <AmiBlitz3.ab3@18888>   MOVE.w sbasegot,-(A7)
0002EE2A <AmiBlitz3.ab3@18889>    BEQ.b 'sssz
0002EE2E <AmiBlitz3.ab3@18890>    BSR.w dopusha3
0002EE32 <AmiBlitz3.ab3@18893>   BSR.w savemfunc
0002EE34 <AmiBlitz3.ab3@18894>   MOVE.w D3,-(A7)             ;the movem regs
0002EE38 <AmiBlitz3.ab3@18896>   MOVE.l $E(A2),D1            ;pc of function call
0002EE3C <AmiBlitz3.ab3@18898>   TST.b $20(a2)                                            ;increase if morepar
0002EE40 <AmiBlitz3.ab3@18899>   BNE 'no0par
0002EE42 <AmiBlitz3.ab3@18900>   MOVE.l a5,a4
0002EE46 <AmiBlitz3.ab3@18903>   CMP.b #$20,(a4)+
0002EE4A <AmiBlitz3.ab3@18904>   BEQ 'l1
0002EE50 <AmiBlitz3.ab3@18905>   CMP.b #"}",-1(a4)
0002EE54 <AmiBlitz3.ab3@18906>   BNE  'no0par
0002EE56 <AmiBlitz3.ab3@18907>   MOVEQ #0,d0
0002EE5A <AmiBlitz3.ab3@18910>   LEA $16(A2),A1
0002EE5C <AmiBlitz3.ab3@18913>   MOVE.l d1,-(a7)
0002EE5E <AmiBlitz3.ab3@18914>   MOVE.b (a1),d2
0002EE60 <AmiBlitz3.ab3@18915>   MOVE.l d0,d1
0002EE64 <AmiBlitz3.ab3@18916>   CMP.w #4,d2
0002EE68 <AmiBlitz3.ab3@18917>   BNE 'l1b
0002EE6E <AmiBlitz3.ab3@18918>   ADD.l #$203c,d1
0002EE72 <AmiBlitz3.ab3@18919>   BSR writeword
0002EE78 <AmiBlitz3.ab3@18920>   MOVE.l #$ffff0000,d1
0002EE7C <AmiBlitz3.ab3@18921>   BSR writelong
0002EE80 <AmiBlitz3.ab3@18922>  BRA 'l2b
0002EE86 <AmiBlitz3.ab3@18925>    TST.b fpu
0002EE8A <AmiBlitz3.ab3@18926>    BNE 'l1c
0002EE8E <AmiBlitz3.ab3@18927>    CMP.w #5,d2
0002EE92 <AmiBlitz3.ab3@18928>    BNE 'l1c
0002EE98 <AmiBlitz3.ab3@18929>    ADD.l #$203c,d1
0002EE9C <AmiBlitz3.ab3@18930>    BSR writeword
0002EEA2 <AmiBlitz3.ab3@18931>    MOVE.l #$800000c1,d1
0002EEA6 <AmiBlitz3.ab3@18932>    BSR writelong
0002EEAA <AmiBlitz3.ab3@18933>  BRA 'l2b
0002EEB0 <AmiBlitz3.ab3@18936>   ADD.l #$70ff,d1
0002EEB4 <AmiBlitz3.ab3@18937>   BSR writeword
0002EEB8 <AmiBlitz3.ab3@18938>   CMP.w #7,d2
0002EEBC <AmiBlitz3.ab3@18939>   BNE 'l1d
0002EEC2 <AmiBlitz3.ab3@18940>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002EEC6 <AmiBlitz3.ab3@18941>   BSR writelong
0002EEC8 <AmiBlitz3.ab3@18942>   MOVEQ #0,d1
0002EECC <AmiBlitz3.ab3@18943>   BSR writeword
0002EED2 <AmiBlitz3.ab3@18944>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002EED6 <AmiBlitz3.ab3@18945>   BSR writelong
0002EED8 <AmiBlitz3.ab3@18946>   MOVEQ #0,d1
0002EEDC <AmiBlitz3.ab3@18947>   BSR writeword
0002EEE2 <AmiBlitz3.ab3@18950>   MOVE.l #$f23c5000,d1
0002EEE4 <AmiBlitz3.ab3@18951>   MOVE.l d0,d2
0002EEE6 <AmiBlitz3.ab3@18952>   ASR.l #2,d2
0002EEE8 <AmiBlitz3.ab3@18953>   ADD.l d2,d1
0002EEEC <AmiBlitz3.ab3@18954>   BSR writelong
0002EEF0 <AmiBlitz3.ab3@18955>   MOVE.w #$ffff,d1
0002EEF4 <AmiBlitz3.ab3@18956>   BSR writeword
0002EEF6 <AmiBlitz3.ab3@18960>   MOVE.l (a7)+,d1
0002EEF8 <AmiBlitz3.ab3@18961>      ADDQ.l #1,a1
0002EEFE <AmiBlitz3.ab3@18962>      ADD.l #$0200,d0
0002EF04 <AmiBlitz3.ab3@18963>      CMP.l #$0e00,d0
0002EF08 <AmiBlitz3.ab3@18964>      BEQ syntaxerr
0002EF0A <AmiBlitz3.ab3@18965>      TST.b (a1)
0002EF0E <AmiBlitz3.ab3@18966>      BNE 'again
0002EF12 <AmiBlitz3.ab3@18967>  BRA 'p1
0002EF16 <AmiBlitz3.ab3@18971>   TST.b $4(A2)
0002EF1A <AmiBlitz3.ab3@18972>    BNE.w 'somepars
0002EF1E <AmiBlitz3.ab3@18977>   BSR.w makefjsr
0002EF22 <AmiBlitz3.ab3@18978>    BSR.w get1bytemain
0002EF26 <AmiBlitz3.ab3@18979>  BRA.w 'nopars
0002EF2C <AmiBlitz3.ab3@18984>   MOVE.w parnum,-(a7)                                      ;7.2014 need store so function calls in parameter >6 can work
0002EF32 <AmiBlitz3.ab3@18986>   MOVE.w regnum,-(A7)         ;old regat
0002EF3C <AmiBlitz3.ab3@18988>   MOVE.w regnum,regnumfunc
0002EF3E <AmiBlitz3.ab3@18992>   MOVE.l D1,-(A7)                                          ;write functioncall with pars
0002EF46 <AmiBlitz3.ab3@18994>   MOVE.b #1,funccall
0002EF48 <AmiBlitz3.ab3@18996>   MOVEQ.l #$00,D0
0002EF4C <AmiBlitz3.ab3@18997>   MOVE.b $4(A2),D0
0002EF56 <AmiBlitz3.ab3@18999>   MOVE.w a2offset,a2offset2
0002EF5E <AmiBlitz3.ab3@19000>   MOVE.b 5(a2),retmode
0002EF64 <AmiBlitz3.ab3@19001>   MOVE.l a2,currentfunccall
0002EF68 <AmiBlitz3.ab3@19003>   LEA $16(A2),A2              ;pointer to var desc
0002EF6E <AmiBlitz3.ab3@19004>   CLR.w regnum
0002EF74 <AmiBlitz3.ab3@19006>   CLR.w regmask
0002EF7A <AmiBlitz3.ab3@19007>   MOVE.b isconstantvalue,-(a7)
0002EF80 <AmiBlitz3.ab3@19008>   MOVE.b funcparloop,-(a7)
0002EF88 <AmiBlitz3.ab3@19009>   MOVE.b #1,funcparloop
0002EF8E <AmiBlitz3.ab3@19010>   MOVE.l rightsidetype,-(a7)
0002EF94 <AmiBlitz3.ab3@19011>   MOVE.l leftsidetype,-(a7)                               ;store values To stack so it can work recursive
0002EF9A <AmiBlitz3.ab3@19012>   MOVE.b blitzparloop,-(a7)
0002EFA0 <AmiBlitz3.ab3@19013>   CLR.b blitzparloop
0002EFA6 <AmiBlitz3.ab3@19015>   JSR fetchpees2
0002EFAC <AmiBlitz3.ab3@19018>   MOVE.b (a7)+,blitzparloop
0002EFB2 <AmiBlitz3.ab3@19019>   MOVE.l (a7)+,leftsidetype
0002EFB8 <AmiBlitz3.ab3@19020>   MOVE.l (a7)+,rightsidetype
0002EFBE <AmiBlitz3.ab3@19021>   MOVE.b (a7)+,funcparloop
0002EFC4 <AmiBlitz3.ab3@19022>   MOVE.b (a7)+,isconstantvalue
0002EFCA <AmiBlitz3.ab3@19024>   JSR chkstak
0002EFCC <AmiBlitz3.ab3@19025>   MOVE.l (A7)+,D1
0002EFD0 <AmiBlitz3.ab3@19042>    BTST #0,d1
0002EFD4 <AmiBlitz3.ab3@19043>    BNE intern1
0002EFD8 <AmiBlitz3.ab3@19045>    BSR.w makefjsr
0002EFDE <AmiBlitz3.ab3@19069>   MOVE.w (A7)+,regnum
0002EFE4 <AmiBlitz3.ab3@19071>   MOVE.w (a7)+,parnum                                     ;07.2014
0002EFE8 <AmiBlitz3.ab3@19075>   CMP.w #"}",D0
0002EFEC <AmiBlitz3.ab3@19076>    BNE.w errorbracketmiss2
0002EFEE <AmiBlitz3.ab3@19079>    MOVEQ #0,d1                                            ; end of function call pars
0002EFF4 <AmiBlitz3.ab3@19081>   MOVE.w regnum,D1
0002EFF8 <AmiBlitz3.ab3@19082>    BEQ.w 'nopars3
0002EFFE <AmiBlitz3.ab3@19084>    TST.b fpu
0002F002 <AmiBlitz3.ab3@19085>    BEQ 'old
0002F00A <AmiBlitz3.ab3@19086>    CMP.b #5,retmode
0002F00E <AmiBlitz3.ab3@19087>    BNE 'old
0002F010 <AmiBlitz3.ab3@19088>    ASL.l #7,d1
0002F016 <AmiBlitz3.ab3@19089>    OR.l #$f2000000,d1
0002F01A <AmiBlitz3.ab3@19090>    BSR writelong
0002F01E <AmiBlitz3.ab3@19091>  BRA 'nopars3
0002F020 <AmiBlitz3.ab3@19095>   LSL.w #8,D1
0002F022 <AmiBlitz3.ab3@19096>   LSL.w #1,D1
0002F026 <AmiBlitz3.ab3@19097>   ORI.w #$2000,D1
0002F02A <AmiBlitz3.ab3@19098>    BSR.w writeword         ;move.l d0,regat
0002F02C <AmiBlitz3.ab3@19101>    MOVE.w (A7)+,D3
0002F030 <AmiBlitz3.ab3@19102>    BEQ.w 'nomovem
0002F036 <AmiBlitz3.ab3@19104>    TST.b fpu
0002F03A <AmiBlitz3.ab3@19105>    BEQ 'old2
0002F03C <AmiBlitz3.ab3@19106>    MOVE.l d0,-(a7)
0002F040 <AmiBlitz3.ab3@19107>    MOVE.w #8,d0
0002F042 <AmiBlitz3.ab3@19108>    MOVE.l a0,-(a7)
0002F048 <AmiBlitz3.ab3@19109>    MOVE.l stacktrack,d1
0002F04E <AmiBlitz3.ab3@19110>    LEA fpustackbase,a0
0002F056 <AmiBlitz3.ab3@19111>    MOVE.w 0(a0,d1),regmask
0002F058 <AmiBlitz3.ab3@19112>    MOVE.l (a7)+,a0
0002F05C <AmiBlitz3.ab3@19115>   BEQ 'ready
0002F062 <AmiBlitz3.ab3@19116>    BTST d0,regmask
0002F066 <AmiBlitz3.ab3@19117>    BEQ 'noa7
0002F068 <AmiBlitz3.ab3@19118>    MOVEQ #0,d1
0002F06A <AmiBlitz3.ab3@19119>    MOVE.w d0,d1
0002F06C <AmiBlitz3.ab3@19120>    SUBQ.w #1,d1
0002F06E <AmiBlitz3.ab3@19121>    ASL #7,d1
0002F074 <AmiBlitz3.ab3@19123>    OR.l #$f21f5400,d1                                      ;fmove.d (a7)+
0002F078 <AmiBlitz3.ab3@19124>    BSR writelong
0002F07E <AmiBlitz3.ab3@19125>    SUBQ.l #2,stacktrack
0002F080 <AmiBlitz3.ab3@19128>    SUBQ.w #1,d0
0002F084 <AmiBlitz3.ab3@19129>    BNE 'loop
0002F08A <AmiBlitz3.ab3@19132>   SUBQ.l #2,stacktrack                                     ;integer sub
0002F08C <AmiBlitz3.ab3@19133>   MOVE.l (a7)+,d0
0002F090 <AmiBlitz3.ab3@19137>   MOVE.w #$4CDF,D1
0002F094 <AmiBlitz3.ab3@19138>    BSR.w writeword
0002F096 <AmiBlitz3.ab3@19139>   MOVEQ.l #$00,D1
0002F098 <AmiBlitz3.ab3@19140>   MOVEQ.l #$0F,D4
0002F09A <AmiBlitz3.ab3@19143>     LSL.w #1,D3
0002F09C <AmiBlitz3.ab3@19144>     ROXR.w #1,D1
0002F0A0 <AmiBlitz3.ab3@19145>   DBF D4,'loopsw                                         ;movem.l (a7)+,dx
0002F0A4 <AmiBlitz3.ab3@19147>     BSR.w writeword        ;poke movem (a7)+...
0002F0AA <AmiBlitz3.ab3@19149>    CLR.w regnumfunc
0002F0AC <AmiBlitz3.ab3@19153>   MOVE.w (A7)+,D1
0002F0B0 <AmiBlitz3.ab3@19154>    BEQ.b 'nores
0002F0B4 <AmiBlitz3.ab3@19155>   CMPI.w #$7,(A7)
0002F0B8 <AmiBlitz3.ab3@19156>    BEQ.b 'issb
0002F0BE <AmiBlitz3.ab3@19158>   LEA geta3,A0
0002F0C4 <AmiBlitz3.ab3@19159>   LEA geta3f,A1
0002F0C8 <AmiBlitz3.ab3@19160>    BSR.w pokecode
0002F0CC <AmiBlitz3.ab3@19161>  BRA.b 'nosb
0002F0D2 <AmiBlitz3.ab3@19165>   MOVE.w deca3,D1
0002F0D6 <AmiBlitz3.ab3@19166>    BSR.w writeword
0002F0DA <AmiBlitz3.ab3@19169>   BSR.w dopulla3          ;fix up string base
0002F0DC <AmiBlitz3.ab3@19172>   MOVE.w (A7)+,D2         ;what it returns!
0002F0E0 <AmiBlitz3.ab3@19173>   CMP.w #$7,D2
0002F0E4 <AmiBlitz3.ab3@19174>    BNE.w 'notst
0002F0EA <AmiBlitz3.ab3@19175>   MOVE.w putstlen,D1
0002F0F0 <AmiBlitz3.ab3@19176>   OR.w regnum,D1
0002F0F4 <AmiBlitz3.ab3@19177>    BSR.w writeword
0002F0F8 <AmiBlitz3.ab3@19180>   BSR.w get1bytemain
0002F0FC <AmiBlitz3.ab3@19181> BRA.w varcont
0002F0FE <AmiBlitz3.ab3@19185> deca3:   Dc.b $53,$4B                                      ;SUBQ.W  #1,A3
0002F106 <AmiBlitz3.ab3@19193>   CMP.b #2,optistring
0002F10A <AmiBlitz3.ab3@19194>   BEQ 'fs2
0002F10E <AmiBlitz3.ab3@19196>   BSR.w makesbase                                          ;writestringvariable
0002F112 <AmiBlitz3.ab3@19197>   BTST #$F,D2
0002F116 <AmiBlitz3.ab3@19198>    BNE.w 'already
0002F11C <AmiBlitz3.ab3@19199>   MOVE.w D3,leaa5d3a2+2
0002F122 <AmiBlitz3.ab3@19200>   MOVE.l leaa5d3a2,D1
0002F126 <AmiBlitz3.ab3@19201>    BSR.w pokela5s
0002F12C <AmiBlitz3.ab3@19204>   MOVE.w regnum,D1
0002F12E <AmiBlitz3.ab3@19205>   LSL.w #8,D1
0002F130 <AmiBlitz3.ab3@19206>   LSL.w #1,D1
0002F134 <AmiBlitz3.ab3@19207>   ORI.w #$7000,D1
0002F13A <AmiBlitz3.ab3@19208>   LEA stvarget2,A0
0002F13C <AmiBlitz3.ab3@19209>   MOVE.w D1,(A0)
0002F142 <AmiBlitz3.ab3@19210>   MOVE.w regnum,D1
0002F148 <AmiBlitz3.ab3@19211>   ANDI.w #$FFF8,$2(A0)
0002F14C <AmiBlitz3.ab3@19212>   OR.w D1,$2(A0)
0002F152 <AmiBlitz3.ab3@19213>   LEA stvarget2f,A1
0002F156 <AmiBlitz3.ab3@19214>    BSR.w pokecode
0002F15A <AmiBlitz3.ab3@19215>   MOVE.w #$C600,D1     ; was #copstring,
0002F15E <AmiBlitz3.ab3@19216>    BSR.w Atokejsr
0002F160 <AmiBlitz3.ab3@19217>   MOVEQ.l #$07,D2
0002F164 <AmiBlitz3.ab3@19218>  BRA.w reget
0002F16A <AmiBlitz3.ab3@19222>      TST.w stackpar
0002F16E <AmiBlitz3.ab3@19223>      BMI 'l10
0002F174 <AmiBlitz3.ab3@19224>      MOVE.l #$3f3c0007,d1
0002F17A <AmiBlitz3.ab3@19225>      ADDQ.w #2,a2offset
0002F17E <AmiBlitz3.ab3@19226>      BSR writelong
0002F182 <AmiBlitz3.ab3@19229>   MOVE.w #$4878,d1
0002F188 <AmiBlitz3.ab3@19230>      CLR.w stackpar
0002F18C <AmiBlitz3.ab3@19231>      BSR writeword
0002F190 <AmiBlitz3.ab3@19232>      MOVE.w #$0,d1
0002F194 <AmiBlitz3.ab3@19233>      BSR writeword
0002F198 <AmiBlitz3.ab3@19234>      MOVE.w #$246d,d1
0002F19C <AmiBlitz3.ab3@19235>      BSR writeword
0002F19E <AmiBlitz3.ab3@19236>      MOVE.w d3,d1
0002F1A2 <AmiBlitz3.ab3@19237>      BSR writeword
0002F1A8 <AmiBlitz3.ab3@19238>      MOVE.l #$4a926704,d1
0002F1AC <AmiBlitz3.ab3@19239>      BSR writelong
0002F1B2 <AmiBlitz3.ab3@19240>      MOVE.l #$2eaafffc,d1
0002F1B6 <AmiBlitz3.ab3@19241>      BSR writelong
0002F1BA <AmiBlitz3.ab3@19242>      MOVE.w #$2f0a,d1
0002F1C0 <AmiBlitz3.ab3@19243>      ADDQ.w #8,a2offset
0002F1C4 <AmiBlitz3.ab3@19244>      BSR writeword
0002F1C8 <AmiBlitz3.ab3@19245> BRA.w reget
0002F1CC <AmiBlitz3.ab3@19250>   CMP.b #$7,D2                                             ;load basic var
0002F1D0 <AmiBlitz3.ab3@19251>    BEQ.w stvar
0002F1D6 <AmiBlitz3.ab3@19253>    TST.b iee
0002F1DA <AmiBlitz3.ab3@19254>    BEQ 'noiee
0002F1DE <AmiBlitz3.ab3@19255>    CMP.b #5,d2
0002F1E2 <AmiBlitz3.ab3@19256>    BNE 'noiee
0002F1E4 <AmiBlitz3.ab3@19257>    MOVE.l d0,-(a7)                                         ;fpu load var
0002F1E8 <AmiBlitz3.ab3@19258>    BTST #15,d2
0002F1EC <AmiBlitz3.ab3@19259>    BEQ 'var
0002F1F2 <AmiBlitz3.ab3@19260>    CMP.l #$7fff,d3
0002F1F6 <AmiBlitz3.ab3@19261>    BGT 'longoffset
0002F1FC <AmiBlitz3.ab3@19262>    MOVE.l #$f22a4400,d1                                    ;newtype     >32kb
0002F1FE <AmiBlitz3.ab3@19263>    TST.w d3                                                ;offset =0
0002F202 <AmiBlitz3.ab3@19264>    BNE 'offset
0002F208 <AmiBlitz3.ab3@19267>   MOVE.l #$f2124400,d1
0002F20A <AmiBlitz3.ab3@19268>    MOVEQ #0,d3
0002F20E <AmiBlitz3.ab3@19269>  BRA 'glob
0002F214 <AmiBlitz3.ab3@19272>   SUBQ.l #4,destpointer
0002F218 <AmiBlitz3.ab3@19273>  BRA 'glob
0002F21E <AmiBlitz3.ab3@19276>   TST.b fast
0002F222 <AmiBlitz3.ab3@19277>    BEQ 'nofastload
0002F228 <AmiBlitz3.ab3@19278>    TST.w regnum
0002F22C <AmiBlitz3.ab3@19279>    BNE 'nofastload
0002F232 <AmiBlitz3.ab3@19280>    CMP.l fp0addr,a4
0002F236 <AmiBlitz3.ab3@19281>    BNE 'nofastload
0002F23C <AmiBlitz3.ab3@19282>    MOVE.l fp0iff,d1
0002F242 <AmiBlitz3.ab3@19283>    CMP.l firstiff,d1
0002F246 <AmiBlitz3.ab3@19284>    BNE 'nofastload
0002F24C <AmiBlitz3.ab3@19285>    MOVE.w varmode,d1
0002F252 <AmiBlitz3.ab3@19286>    CMP.w fp0mode,d1
0002F256 <AmiBlitz3.ab3@19287>    BNE 'nofastload
0002F25C <AmiBlitz3.ab3@19288>    CMP.w fp0var,d3
0002F260 <AmiBlitz3.ab3@19289>    BNE 'nofastload
0002F264 <AmiBlitz3.ab3@19290>    BCLR #16,d2
0002F266 <AmiBlitz3.ab3@19291>    MOVE.l (a7)+,d0
0002F268 <AmiBlitz3.ab3@19292>  RTS
0002F26A <AmiBlitz3.ab3@19295>    MOVEQ #0,d0
0002F270 <AmiBlitz3.ab3@19296>    MOVE.w regnum,d0
0002F276 <AmiBlitz3.ab3@19297>    CMP.l maxregs,d0
0002F27A <AmiBlitz3.ab3@19298>    BLE 'ok
0002F280 <AmiBlitz3.ab3@19299>    LEA cmplxerr,a0
0002F282 <AmiBlitz3.ab3@19300>   MOVE.l a0,-(a7)
0002F288 <AmiBlitz3.ab3@19301>  JMP handle_compileerror
0002F28E <AmiBlitz3.ab3@19304>    LEA regtable,a4
0002F290 <AmiBlitz3.ab3@19305>    TST.l (a4)
0002F294 <AmiBlitz3.ab3@19306>    BEQ 'noreg
0002F298 <AmiBlitz3.ab3@19307>    CMP.w 0+4(a4),d3
0002F29C <AmiBlitz3.ab3@19308>    BNE 'doreg1
0002F2A2 <AmiBlitz3.ab3@19309>    MOVE.l #$f2001c00,d1
0002F2A8 <AmiBlitz3.ab3@19310>    MOVE.w regnum,d0
0002F2AA <AmiBlitz3.ab3@19311>    ASL.w #7,d0
0002F2AC <AmiBlitz3.ab3@19312>    OR.w d0,d1
0002F2B0 <AmiBlitz3.ab3@19313>    BSR writelong
0002F2B2 <AmiBlitz3.ab3@19314>    MOVE.l (a7)+,d0
0002F2B4 <AmiBlitz3.ab3@19315>  RTS
0002F2B8 <AmiBlitz3.ab3@19318>   CMP.w 8+4(a4),d3
0002F2BC <AmiBlitz3.ab3@19319>    BNE 'doreg2
0002F2C2 <AmiBlitz3.ab3@19320>    MOVE.l #$f2001800,d1
0002F2C8 <AmiBlitz3.ab3@19321>    MOVE.w regnum,d0
0002F2CA <AmiBlitz3.ab3@19322>    ASL.w #7,d0
0002F2CC <AmiBlitz3.ab3@19323>    OR.w d0,d1
0002F2D0 <AmiBlitz3.ab3@19324>    BSR writelong
0002F2D2 <AmiBlitz3.ab3@19325>    MOVE.l (a7)+,d0
0002F2D4 <AmiBlitz3.ab3@19326>  RTS
0002F2D8 <AmiBlitz3.ab3@19329>   CMP.w 16+4(a4),d3
0002F2DC <AmiBlitz3.ab3@19330>    BNE 'doreg3
0002F2E2 <AmiBlitz3.ab3@19331>    MOVE.l #$f2001400,d1
0002F2E8 <AmiBlitz3.ab3@19332>    MOVE.w regnum,d0
0002F2EA <AmiBlitz3.ab3@19333>    ASL.w #7,d0
0002F2EC <AmiBlitz3.ab3@19334>    OR.w d0,d1
0002F2F0 <AmiBlitz3.ab3@19335>    BSR  writelong
0002F2F2 <AmiBlitz3.ab3@19336>    MOVE.l (a7)+,d0
0002F2F4 <AmiBlitz3.ab3@19337>  RTS
0002F2F8 <AmiBlitz3.ab3@19340>   CMP.w 24+4(a4),d3
0002F2FC <AmiBlitz3.ab3@19341>    BNE 'doreg4
0002F302 <AmiBlitz3.ab3@19342>    MOVE.l #$f2001000,d1
0002F308 <AmiBlitz3.ab3@19343>    MOVE.w regnum,d0
0002F30A <AmiBlitz3.ab3@19344>    ASL.w #7,d0
0002F30C <AmiBlitz3.ab3@19345>    OR.w d0,d1
0002F310 <AmiBlitz3.ab3@19346>    BSR writelong
0002F312 <AmiBlitz3.ab3@19347>    MOVE.l (a7)+,d0
0002F314 <AmiBlitz3.ab3@19348>  RTS
0002F318 <AmiBlitz3.ab3@19351>    CMP.w 32+4(a4),d3
0002F31C <AmiBlitz3.ab3@19352>    BNE 'noreg
0002F322 <AmiBlitz3.ab3@19353>    MOVE.l #$f2000c00,d1
0002F328 <AmiBlitz3.ab3@19354>    MOVE.w regnum,d0
0002F32A <AmiBlitz3.ab3@19355>    ASL.w #7,d0
0002F32C <AmiBlitz3.ab3@19356>    OR.w d0,d1
0002F330 <AmiBlitz3.ab3@19357>    BSR writelong
0002F332 <AmiBlitz3.ab3@19358>    MOVE.l (a7)+,d0
0002F334 <AmiBlitz3.ab3@19359>  RTS
0002F33A <AmiBlitz3.ab3@19362>    MOVE.l #$f22d4400,d1                                    ;var
0002F340 <AmiBlitz3.ab3@19363>    TST.w varmode
0002F344 <AmiBlitz3.ab3@19364>   BEQ 'glob
0002F348 <AmiBlitz3.ab3@19365>   BCLR #16,d1                                              ;local
0002F34A <AmiBlitz3.ab3@19368>    MOVEQ #0,d0
0002F350 <AmiBlitz3.ab3@19369>    MOVE.w regnum,d0
0002F354 <AmiBlitz3.ab3@19370>    CMP.w #7,d0
0002F358 <AmiBlitz3.ab3@19371>    BLE 'ok2
0002F35E <AmiBlitz3.ab3@19372>    LEA cmplxerr,a0
0002F360 <AmiBlitz3.ab3@19373>   MOVE.l a0,-(a7)
0002F366 <AmiBlitz3.ab3@19374>  JMP handle_compileerror
0002F368 <AmiBlitz3.ab3@19377>      ASL.w #7,d0
0002F36A <AmiBlitz3.ab3@19378>    OR.l d0,d1
0002F372 <AmiBlitz3.ab3@19379>    CMP.l #doublecheck,8(a2)
0002F376 <AmiBlitz3.ab3@19380>    BNE 'dbl
0002F37C <AmiBlitz3.ab3@19381>    OR.l #$00001000,d1
0002F380 <AmiBlitz3.ab3@19384>   BSR writelong
0002F382 <AmiBlitz3.ab3@19385>    MOVE.l (a7)+,d0
0002F386 <AmiBlitz3.ab3@19386>    AND.w #$ff,d2
0002F388 <AmiBlitz3.ab3@19387>    MOVE.w d3,d1
0002F38C <AmiBlitz3.ab3@19388>    BEQ 'nooffs
0002F390 <AmiBlitz3.ab3@19389>  BRA writeword
0002F392 <AmiBlitz3.ab3@19394>  RTS
0002F398 <AmiBlitz3.ab3@19397>   MOVE.w regnum,D1
0002F39E <AmiBlitz3.ab3@19399>   MOVE.w d1,load_var_reg
0002F3A0 <AmiBlitz3.ab3@19401>   LSL.w #8,D1
0002F3AA <AmiBlitz3.ab3@19403>   MOVE.l destpointer,load_var_addr
0002F3B0 <AmiBlitz3.ab3@19404>   MOVE.w d2,load_var_size
0002F3B2 <AmiBlitz3.ab3@19406>   LSL.w #1,D1
0002F3B6 <AmiBlitz3.ab3@19407>   BTST #$E,D2
0002F3BA <AmiBlitz3.ab3@19408>    BNE.w 'pointer
0002F3BC <AmiBlitz3.ab3@19409>   TST.b D2
0002F3C0 <AmiBlitz3.ab3@19410>    BNE.w 'skip2
0002F3C2 <AmiBlitz3.ab3@19411>   MOVEQ.l #$03,D2
0002F3C6 <AmiBlitz3.ab3@19412>   ORI.w #$200A,D1
0002F3CA <AmiBlitz3.ab3@19413>  BRA.w writeword
0002F3CE <AmiBlitz3.ab3@19416>   MOVE.b #$3,D2
0002F3D2 <AmiBlitz3.ab3@19419>   BTST #$F,D2
0002F3D6 <AmiBlitz3.ab3@19420>    BEQ.w 'simpvar                                         ;loadarray
0002F3DC <AmiBlitz3.ab3@19422>    TST.b fast                                              ;lea->move xx(a2)
0002F3E0 <AmiBlitz3.ab3@19423>    BEQ 'la10
0002F3E6 <AmiBlitz3.ab3@19428>    CLR.l load_var_addr
0002F3EA <AmiBlitz3.ab3@19429>  BRA 'la10
0002F3F2 <AmiBlitz3.ab3@19431>    CMP.w #$2012,movea2dn                                  ;??Looks like dead code??
0002F3F6 <AmiBlitz3.ab3@19432>    BNE 'la10
0002F3FC <AmiBlitz3.ab3@19433>    TST.b optiarray
0002F400 <AmiBlitz3.ab3@19434>    BNE 'la10
0002F406 <AmiBlitz3.ab3@19435>    MOVE.l destpointer,a4
0002F40C <AmiBlitz3.ab3@19436>    SUB.l loada,a4
0002F410 <AmiBlitz3.ab3@19437>    CMP.w #4,a4
0002F414 <AmiBlitz3.ab3@19438>    BEQ 'la100
0002F418 <AmiBlitz3.ab3@19439>    CMP.w #2,a4
0002F41C <AmiBlitz3.ab3@19440>    BNE 'la10
0002F422 <AmiBlitz3.ab3@19441>    MOVE.l destpointer,a4
0002F426 <AmiBlitz3.ab3@19442>    CMP.b #3,d2
0002F42A <AmiBlitz3.ab3@19443>    BCS 'la110
0002F430 <AmiBlitz3.ab3@19444>    MOVE.w #$202a,-2(a4)
0002F434 <AmiBlitz3.ab3@19445>    OR.w d1,-2(a4)
0002F43A <AmiBlitz3.ab3@19446>    MOVE.w arrayoffset,d1
0002F43E <AmiBlitz3.ab3@19447>    BSR writeword
0002F442 <AmiBlitz3.ab3@19448>  BRA 'more
0002F446 <AmiBlitz3.ab3@19451>    CMP.b #2,d2
0002F44A <AmiBlitz3.ab3@19452>    BNE 'la120
0002F450 <AmiBlitz3.ab3@19453>     MOVE.w #$302a,-2(a4)
0002F454 <AmiBlitz3.ab3@19454>    OR.w d1,-2(a4)
0002F45A <AmiBlitz3.ab3@19456>    MOVE.w arrayoffset,d1
0002F45E <AmiBlitz3.ab3@19457>    BSR writeword
0002F462 <AmiBlitz3.ab3@19458>  BRA 'more
0002F466 <AmiBlitz3.ab3@19461>   CMP.b #1,d2
0002F46A <AmiBlitz3.ab3@19462>    BNE.s 'la10
0002F470 <AmiBlitz3.ab3@19463>     MOVE.w #$102a,-2(a4)
0002F474 <AmiBlitz3.ab3@19464>    OR.w d1,-2(a4)
0002F47A <AmiBlitz3.ab3@19465>    MOVE.w arrayoffset,d1
0002F47E <AmiBlitz3.ab3@19466>    BSR writeword
0002F482 <AmiBlitz3.ab3@19467>  BRA 'more
0002F488 <AmiBlitz3.ab3@19470>   MOVE.l destpointer,a4
0002F48E <AmiBlitz3.ab3@19471>    CMP.w #$45ea,-2(a4)
0002F492 <AmiBlitz3.ab3@19472>    BNE 'la10
0002F496 <AmiBlitz3.ab3@19473>    CMP.b #3,d2
0002F49A <AmiBlitz3.ab3@19474>    BCS 'la11
0002F4A0 <AmiBlitz3.ab3@19475>    MOVE.w #$202a,-4(a4)
0002F4A4 <AmiBlitz3.ab3@19476>    OR.w d1,-4(a4)
0002F4A8 <AmiBlitz3.ab3@19477>  BRA 'more
0002F4AC <AmiBlitz3.ab3@19480>    CMP.b #2,d2
0002F4B0 <AmiBlitz3.ab3@19481>    BNE 'la12
0002F4B6 <AmiBlitz3.ab3@19482>     MOVE.w #$302a,-4(a4)
0002F4BA <AmiBlitz3.ab3@19483>    OR.w d1,-4(a4)
0002F4BE <AmiBlitz3.ab3@19484>  BRA 'more
0002F4C2 <AmiBlitz3.ab3@19487>   CMP.b #1,d2
0002F4C6 <AmiBlitz3.ab3@19488>    BNE.s 'la10
0002F4CC <AmiBlitz3.ab3@19489>     MOVE.w #$102a,-4(a4)
0002F4D0 <AmiBlitz3.ab3@19490>    OR.w d1,-4(a4)
0002F4D4 <AmiBlitz3.ab3@19491>  BRA 'more
0002F4DA <AmiBlitz3.ab3@19495>    OR.w movea2dn,D1
0002F4DE <AmiBlitz3.ab3@19496>    BSR.w 'size
0002F4E2 <AmiBlitz3.ab3@19497>    BSR.w writeword
0002F4E6 <AmiBlitz3.ab3@19500>   ANDI.w #$FF,D2
0002F4E8 <AmiBlitz3.ab3@19501>  RTS
0002F4EE <AmiBlitz3.ab3@19505>    MOVE.l destpointer,a4              ; "
0002F4F6 <AmiBlitz3.ab3@19506>    MOVE.l #$f22a4400,-4(a4)           ; "
0002F4FC <AmiBlitz3.ab3@19507>    MOVE.w arrayoffset,d1              ; "
0002F500 <AmiBlitz3.ab3@19508>  BRA writeword
0002F506 <AmiBlitz3.ab3@19512>   OR.w moved3a5dn,D1                                        ;write move.l 0(a5),reg
0002F50A <AmiBlitz3.ab3@19513>    BSR.w 'size
0002F50E <AmiBlitz3.ab3@19514>    BSR.w pokewda5s
0002F510 <AmiBlitz3.ab3@19515>   MOVE.w D3,D1
0002F514 <AmiBlitz3.ab3@19516>    BSR.w writeword
0002F518 <AmiBlitz3.ab3@19517>  BRA.w 'more
0002F51C <AmiBlitz3.ab3@19522>   BTST #$E,D2
0002F520 <AmiBlitz3.ab3@19523>    BNE.w 'long
0002F524 <AmiBlitz3.ab3@19524>   CMP.b #$1,D2
0002F528 <AmiBlitz3.ab3@19525>    BEQ.w 'byte
0002F52C <AmiBlitz3.ab3@19526>   CMP.b #$2,D2
0002F530 <AmiBlitz3.ab3@19527>    BEQ.w 'word
0002F532 <AmiBlitz3.ab3@19530>  RTS
0002F536 <AmiBlitz3.ab3@19533>   EORI.w #$3000,D1
0002F538 <AmiBlitz3.ab3@19534>  RTS
0002F53C <AmiBlitz3.ab3@19537>   ORI.w #$1000,D1
0002F53E <AmiBlitz3.ab3@19538> RTS
0002F546 <AmiBlitz3.ab3@19544>   MOVE.w #$FFFF,dfetch    ; was -1
0002F54A <AmiBlitz3.ab3@19545>   BSR.w get1bytemain
0002F54E <AmiBlitz3.ab3@19546>   CMP.w #$2D,D0           ;'-'
0002F552 <AmiBlitz3.ab3@19547>    BNE.w 'datado
0002F556 <AmiBlitz3.ab3@19548>   BSR.w get1bytemain
0002F55A <AmiBlitz3.ab3@19549>   BSR.w 'datado
0002F55E <AmiBlitz3.ab3@19551>   CMP.w #$5,D2
0002F562 <AmiBlitz3.ab3@19552>    BCC.w 'nfp
0002F564 <AmiBlitz3.ab3@19553>   NEG.l D0
0002F566 <AmiBlitz3.ab3@19554>  RTS
0002F56C <AmiBlitz3.ab3@19558>   TST.b fpu
0002F570 <AmiBlitz3.ab3@19559>   BEQ 'noneg
0002F574 <AmiBlitz3.ab3@19560>   fneg.x fp0
0002F576 <AmiBlitz3.ab3@19561>  RTS
0002F57A <AmiBlitz3.ab3@19566>   BCHG #$7,D0
0002F57C <AmiBlitz3.ab3@19567>  RTS
0002F580 <AmiBlitz3.ab3@19571>   CMP.w #$24,D0          ;'$'
0002F584 <AmiBlitz3.ab3@19572>    BEQ.w get_hexconstant
0002F588 <AmiBlitz3.ab3@19573>   CMP.w #$25,D0          ;'%'
0002F58C <AmiBlitz3.ab3@19574>    BEQ.w fetchbin
0002F590 <AmiBlitz3.ab3@19577>   CMP.w #$2E,D0          ;'.'
0002F594 <AmiBlitz3.ab3@19578>    BNE.w fetchnum
0002F596 <AmiBlitz3.ab3@19582>   MOVEQ.l #$00,D3
0002F59A <AmiBlitz3.ab3@19583> BRA.w fetchpoint2
0002F59C <AmiBlitz3.ab3@19587>   MOVEQ.l #$00,D3                                          ;number
0002F5A0 <AmiBlitz3.ab3@19589>    BSR.w atoi
0002F5A4 <AmiBlitz3.ab3@19591>   CMP.w #$2E,D0             ;'.'
0002F5A8 <AmiBlitz3.ab3@19592>    BEQ.w fetchpoint
0002F5AC <AmiBlitz3.ab3@19593>   ORI.w #$20,D0
0002F5B0 <AmiBlitz3.ab3@19594>   CMP.w #$65,D0             ;'e'
0002F5B4 <AmiBlitz3.ab3@19595>    BNE.w fetchnum2
0002F5BA <AmiBlitz3.ab3@19596>   CMP.l #$800000,D3
0002F5BE <AmiBlitz3.ab3@19597>    BCC.w overerr
0002F5C0 <AmiBlitz3.ab3@19598>   MOVEQ.l #-$01,D6
0002F5C4 <AmiBlitz3.ab3@19600>   fmove.l d3,fp0
0002F5C6 <AmiBlitz3.ab3@19602>   MOVE.l D3,D0
0002F5CC <AmiBlitz3.ab3@19603>   MOVEA.l _mathffpbase,A6
0002F5D0 <AmiBlitz3.ab3@19604>    JSR -$24(A6)             ;int to ffp
0002F5D2 <AmiBlitz3.ab3@19605>   MOVE.l D0,D3
0002F5D6 <AmiBlitz3.ab3@19606>    BSR.w dothee
0002F5DA <AmiBlitz3.ab3@19607>    BSR.w reget
0002F5DE <AmiBlitz3.ab3@19608>    BSR.w consttype2
0002F5E2 <AmiBlitz3.ab3@19609> BRA.w fetchnum3
0002F5E6 <AmiBlitz3.ab3@19614>   CMP.b #4,d2
0002F5EA <AmiBlitz3.ab3@19615>   BEQ 'l4
0002F5EE <AmiBlitz3.ab3@19616>   MOVE.b #5,d2                                             ;nprint 2/0.5 bugfix
0002F5F4 <AmiBlitz3.ab3@19619>    TST.b fpu
0002F5F8 <AmiBlitz3.ab3@19620>    BNE 'l1
0002F5FE <AmiBlitz3.ab3@19622>    CMP.l #$800000,D3
0002F602 <AmiBlitz3.ab3@19623>    BCC.w overerr
0002F606 <AmiBlitz3.ab3@19625>  BRA fetchpoint2
0002F60C <AmiBlitz3.ab3@19628>   CMP.l #$7fffffff,d3
0002F610 <AmiBlitz3.ab3@19629>     BCC.w overerr
0002F612 <AmiBlitz3.ab3@19634>   MOVEQ.l #-$01,D6         ;now a float.
0002F614 <AmiBlitz3.ab3@19635>   MOVE.l D3,D0
0002F618 <AmiBlitz3.ab3@19637>   fmove.l d3,fp0
0002F61E <AmiBlitz3.ab3@19639>   MOVEA.l _mathffpbase,A6
0002F622 <AmiBlitz3.ab3@19640>    JSR -$24(A6)            ;int to ffp                                       ;integer to ffp
0002F624 <AmiBlitz3.ab3@19641>   MOVE.l D0,-(A7)          ;save whole number
0002F628 <AmiBlitz3.ab3@19642>    BSR.w get1bytemain
0002F62C <AmiBlitz3.ab3@19643>    BSR.w tstnum
0002F630 <AmiBlitz3.ab3@19644>    BNE.w syntaxerr
0002F632 <AmiBlitz3.ab3@19645>   MOVEQ.l #$00,D3
0002F636 <AmiBlitz3.ab3@19646>    BSR.w atoi              ;get int frac
0002F638 <AmiBlitz3.ab3@19647>   TST.l D3
0002F63C <AmiBlitz3.ab3@19648>    BEQ.w 'pskip
0002F642 <AmiBlitz3.ab3@19650>   TST.b fpu
0002F646 <AmiBlitz3.ab3@19651>   BNE 'l1
0002F64C <AmiBlitz3.ab3@19653>   CMP.l #$800000,D3
0002F650 <AmiBlitz3.ab3@19654>    BCC.w overerr
0002F654 <AmiBlitz3.ab3@19656>  BRA 'l2
0002F65A <AmiBlitz3.ab3@19659>   CMP.l #$7fffffff,d3
0002F65E <AmiBlitz3.ab3@19660>   BCC overerr
0002F662 <AmiBlitz3.ab3@19663>   fmove.l d5,fp1
0002F664 <AmiBlitz3.ab3@19665>   MOVE.l D5,D0
0002F668 <AmiBlitz3.ab3@19666>    JSR -$24(A6)        ;divisor to ffp
0002F66A <AmiBlitz3.ab3@19667>   MOVE.l D0,D5
0002F66E <AmiBlitz3.ab3@19669>   fmove.l d3,fp2
0002F670 <AmiBlitz3.ab3@19671>   MOVE.l D3,D0
0002F674 <AmiBlitz3.ab3@19672>    JSR -$24(A6)        ;to ffp
0002F678 <AmiBlitz3.ab3@19674>   fdiv.x fp1,fp2
0002F67A <AmiBlitz3.ab3@19676>   MOVE.l D5,D1
0002F67E <AmiBlitz3.ab3@19677>    JSR -$54(A6)       ;num/divisor (eg .25=25/100)
0002F682 <AmiBlitz3.ab3@19679>   fadd.x fp2,fp0
0002F684 <AmiBlitz3.ab3@19681>   MOVE.l (A7)+,D1
0002F688 <AmiBlitz3.ab3@19682>    JSR -$42(A6)       ;add 'em
0002F68A <AmiBlitz3.ab3@19683>   MOVE.l D0,D3
0002F68E <AmiBlitz3.ab3@19684>    BSR.w reget
0002F692 <AmiBlitz3.ab3@19685>   ORI.w #$20,D0
0002F696 <AmiBlitz3.ab3@19686>   CMP.w #$65,D0       ;'e'
0002F69A <AmiBlitz3.ab3@19687>    BNE.w 'pskip2
0002F69E <AmiBlitz3.ab3@19690>    BSR.w dothee
0002F6A2 <AmiBlitz3.ab3@19693>    BSR.w reget
0002F6A6 <AmiBlitz3.ab3@19694>    BSR.w consttype2
0002F6AA <AmiBlitz3.ab3@19695> BRA.w fetchnum3
0002F6AC <AmiBlitz3.ab3@19698>   MOVE.l (A7)+,D3
0002F6B0 <AmiBlitz3.ab3@19699> BRA.w 'pskip2
0002F6B4 <AmiBlitz3.ab3@19704>   BSR.w get1bytemain
0002F6B8 <AmiBlitz3.ab3@19705>   CMP.w #$2B,D0       ;'+'
0002F6BC <AmiBlitz3.ab3@19706>    BEQ.w 'pos
0002F6C0 <AmiBlitz3.ab3@19707>   CMP.w #$2D,D0       ;'-'
0002F6C4 <AmiBlitz3.ab3@19708>    BNE.w 'pos2
0002F6C8 <AmiBlitz3.ab3@19710>    BSR.w get1bytemain
0002F6CC <AmiBlitz3.ab3@19711>    BSR.w getsign
0002F6CE <AmiBlitz3.ab3@19715>   MOVE.l D3,D0
0002F6D2 <AmiBlitz3.ab3@19717>   fdiv.x fp1,fp0
0002F6D4 <AmiBlitz3.ab3@19719>   MOVE.l D4,D1
0002F6D8 <AmiBlitz3.ab3@19720>    JSR -$54(A6)
0002F6DA <AmiBlitz3.ab3@19721>   MOVE.l D0,D3
0002F6DC <AmiBlitz3.ab3@19722> RTS
0002F6E0 <AmiBlitz3.ab3@19725>   BSR.w get1bytemain
0002F6E4 <AmiBlitz3.ab3@19728>   BSR.w getsign
0002F6E8 <AmiBlitz3.ab3@19732>   fmul.x fp1,fp0
0002F6EA <AmiBlitz3.ab3@19733>   MOVE.l D3,D0
0002F6EC <AmiBlitz3.ab3@19734>   MOVE.l D4,D1
0002F6F0 <AmiBlitz3.ab3@19735>    JSR -$4E(A6)
0002F6F2 <AmiBlitz3.ab3@19736>   MOVE.l D0,D3
0002F6F4 <AmiBlitz3.ab3@19737> RTS
0002F6F8 <AmiBlitz3.ab3@19741>   BSR.w tstnum
0002F6FC <AmiBlitz3.ab3@19742>    BNE.w syntaxerr
0002F6FE <AmiBlitz3.ab3@19743>   MOVE.w D0,D4
0002F702 <AmiBlitz3.ab3@19744>   SUBI.w #$30,D4
0002F706 <AmiBlitz3.ab3@19745>    BSR.w get1bytemain
0002F70A <AmiBlitz3.ab3@19746>    BSR.w tstnum
0002F70E <AmiBlitz3.ab3@19747>    BNE.w 'skip
0002F712 <AmiBlitz3.ab3@19748>   MULU #$A,D4
0002F716 <AmiBlitz3.ab3@19749>   SUBI.w #$30,D0
0002F718 <AmiBlitz3.ab3@19750>   ADD.w D0,D4
0002F71C <AmiBlitz3.ab3@19751>    BSR.w get1bytemain
0002F720 <AmiBlitz3.ab3@19755>   CMP.w #$12,D4
0002F724 <AmiBlitz3.ab3@19756>    BHI.w overerr
0002F726 <AmiBlitz3.ab3@19758>   LSL.w #3,D4
0002F72C <AmiBlitz3.ab3@19759>   LEA fputab,a0
0002F72E <AmiBlitz3.ab3@19760>   ADD.l d4,a0
0002F734 <AmiBlitz3.ab3@19761>   fmove.d 0(a0),fp1
0002F736 <AmiBlitz3.ab3@19763>   LSR.w #1,d4               ; was #2
0002F73A <AmiBlitz3.ab3@19764>   MOVE.l facts(PC,D4.W),D4
0002F73C <AmiBlitz3.ab3@19765> RTS
0002F784 <AmiBlitz3.ab3@19769>   Dc.d 1,10,100,1000,10000,100000,1000000,10000000,100000000  ;,1000000000,10000000000
0002F788 <AmiBlitz3.ab3@19774>   Dc.l $80000041
0002F78C <AmiBlitz3.ab3@19775>   Dc.l $A0000044
0002F790 <AmiBlitz3.ab3@19776>   Dc.l $C8000047
0002F794 <AmiBlitz3.ab3@19777>   Dc.l $FA00004A
0002F798 <AmiBlitz3.ab3@19778>   Dc.l $9C40004E
0002F79C <AmiBlitz3.ab3@19779>   Dc.l $C3500051
0002F7A0 <AmiBlitz3.ab3@19780>   Dc.l $F4240054
0002F7A4 <AmiBlitz3.ab3@19781>   Dc.l $98968058
0002F7A8 <AmiBlitz3.ab3@19782>   Dc.l $BEBC205B
0002F7AC <AmiBlitz3.ab3@19783>   Dc.l $EE6B285E
0002F7B0 <AmiBlitz3.ab3@19784>   Dc.l $9502F962
0002F7B4 <AmiBlitz3.ab3@19785>   Dc.l $BA43B765
0002F7B8 <AmiBlitz3.ab3@19786>   Dc.l $E8D4A568
0002F7BC <AmiBlitz3.ab3@19787>   Dc.l $9184E76C
0002F7C0 <AmiBlitz3.ab3@19788>   Dc.l $B5E6A96F
0002F7C4 <AmiBlitz3.ab3@19789>   Dc.l $E35F2972
0002F7C8 <AmiBlitz3.ab3@19790>   Dc.l $8E1BCA76
0002F7CC <AmiBlitz3.ab3@19791>   Dc.l $B1A2BD79
0002F7D0 <AmiBlitz3.ab3@19792>   Dc.l $DE0B6C7C
0002F7D2 <AmiBlitz3.ab3@19796>   MOVEQ.l #$01,D5
0002F7D4 <AmiBlitz3.ab3@19799>   LSL.l #1,D5
0002F7D6 <AmiBlitz3.ab3@19800>   MOVE.l D5,D1
0002F7D8 <AmiBlitz3.ab3@19801>   LSL.l #2,D5
0002F7DA <AmiBlitz3.ab3@19802>   ADD.l D1,D5                                              ;divisor for frac convert!
0002F7DC <AmiBlitz3.ab3@19804>   LSL.l #1,D3
0002F7E0 <AmiBlitz3.ab3@19805>    BCS.w overerr
0002F7E2 <AmiBlitz3.ab3@19806>   MOVE.l D3,D1
0002F7E4 <AmiBlitz3.ab3@19807>   LSL.l #1,D3
0002F7E8 <AmiBlitz3.ab3@19808>    BCS.w overerr
0002F7EA <AmiBlitz3.ab3@19809>   LSL.l #1,D3
0002F7EE <AmiBlitz3.ab3@19810>    BCS.w overerr
0002F7F0 <AmiBlitz3.ab3@19811>   ADD.l D1,D3
0002F7F4 <AmiBlitz3.ab3@19812>   SUBI.w #$30,D0
0002F7F6 <AmiBlitz3.ab3@19813>   ADD.l D0,D3
0002F822 <AmiBlitz3.ab3@19815>    !fget                                                   ;bsr.w get1bytemain
0002F826 <AmiBlitz3.ab3@19816>    CMP.b #1,d0
0002F82A <AmiBlitz3.ab3@19817>    BNE 'cm1
0002F82C <AmiBlitz3.ab3@19818>    SUBQ.l #1,a5
0002F830 <AmiBlitz3.ab3@19819>    BSR get1bytemain                                        ;??wy not !fget
0002F834 <AmiBlitz3.ab3@19822>   CMP.b #$7e,d0
0002F838 <AmiBlitz3.ab3@19823>    BNE 'cm2
0002F83A <AmiBlitz3.ab3@19824>    SUBQ.l #1,a5
0002F83E <AmiBlitz3.ab3@19825>    BSR get1bytemain
0002F840 <AmiBlitz3.ab3@19828>   TST.b d0
0002F844 <AmiBlitz3.ab3@19829>    BPL 'l10
0002F846 <AmiBlitz3.ab3@19830>    LSL.w #8,d0
0002F848 <AmiBlitz3.ab3@19831>    MOVE.b (a5)+,d0
0002F84E <AmiBlitz3.ab3@19832>    MOVE.w d0,lastchar
0002F860 <AmiBlitz3.ab3@19835>   !compare2                                                ;bsr.w tstnum ;cmake bug
0002F864 <AmiBlitz3.ab3@19837>    BEQ.w 'loop
0002F866 <AmiBlitz3.ab3@19838> RTS
0002F868 <AmiBlitz3.ab3@19841> dfetch:  Ds.w 1                                            ;fetching data?
0002F86C <AmiBlitz3.ab3@19845>   MOVE.w dfetch(PC),D1
0002F870 <AmiBlitz3.ab3@19846>    BEQ.w 'doit
0002F876 <AmiBlitz3.ab3@19847>   CLR.w dfetch
0002F878 <AmiBlitz3.ab3@19848>  RTS
0002F87E <AmiBlitz3.ab3@19852>   MOVE.b d2,isconstantvalue
0002F884 <AmiBlitz3.ab3@19853>   MOVE.l d0,lastconstantvalue
0002F88A <AmiBlitz3.ab3@19854>   MOVE.w d2,imm_size
0002F894 <AmiBlitz3.ab3@19855>   MOVE.w regnum,imm_reg
0002F89E <AmiBlitz3.ab3@19856>   MOVE.l destpointer,imm_addr                           ; long
0002F8A2 <AmiBlitz3.ab3@19858>   CMP.w #$3,D2          ; order of cmp/beq in org soure is different
0002F8A6 <AmiBlitz3.ab3@19859>   BEQ.w 'long
0002F8AA <AmiBlitz3.ab3@19860>   CMP.w #$5,D2                                          ;float
0002F8AE <AmiBlitz3.ab3@19861>   BEQ.w 'long
0002F8B2 <AmiBlitz3.ab3@19862>   CMP.w #$1,D2
0002F8B6 <AmiBlitz3.ab3@19863>   BEQ.w 'word
0002F8BA <AmiBlitz3.ab3@19864>   CMP.w #$2,D2
0002F8BE <AmiBlitz3.ab3@19865>   BEQ.w 'word
0002F8C2 <AmiBlitz3.ab3@19866>   CMP.w #$4,D2
0002F8C6 <AmiBlitz3.ab3@19867>   BEQ.w 'long
0002F8CA <AmiBlitz3.ab3@19868>  BRA.w mismatcherr
0002F8D0 <AmiBlitz3.ab3@19871>   MOVE.w regnum,D1
0002F8D2 <AmiBlitz3.ab3@19872>   LSL.w #8,D1
0002F8D4 <AmiBlitz3.ab3@19873>   LSL.w #1,D1
0002F8D8 <AmiBlitz3.ab3@19874>   ORI.w #$303C,D1
0002F8DC <AmiBlitz3.ab3@19875>    BSR.w writeword
0002F8DE <AmiBlitz3.ab3@19876>   MOVE.w D0,D1
0002F8E2 <AmiBlitz3.ab3@19877>    BSR.w writeword
0002F8E6 <AmiBlitz3.ab3@19878>  BRA.w reget
0002F8E8 <AmiBlitz3.ab3@19882>   MOVEQ #0,d1
0002F8EE <AmiBlitz3.ab3@19884>   MOVE.w regnum,D1
0002F8F4 <AmiBlitz3.ab3@19886>   TST.b fpu
0002F8F8 <AmiBlitz3.ab3@19887>   BEQ 'f1
0002F8FC <AmiBlitz3.ab3@19888>   CMP.w #5,d2
0002F900 <AmiBlitz3.ab3@19889>   BEQ 'l10
0002F904 <AmiBlitz3.ab3@19890>  BRA 'f2
0002F90A <AmiBlitz3.ab3@19893>   TST.b iee
0002F90E <AmiBlitz3.ab3@19894>   BNE 'l10
0002F910 <AmiBlitz3.ab3@19898>   LSL.w #8,D1
0002F912 <AmiBlitz3.ab3@19899>   LSL.w #1,D1
0002F916 <AmiBlitz3.ab3@19900>   ORI.w #$203C,D1
0002F91A <AmiBlitz3.ab3@19901>    BSR.w writeword
0002F91C <AmiBlitz3.ab3@19902>   MOVE.l D0,D1
0002F920 <AmiBlitz3.ab3@19903>    BSR.w writelong
0002F924 <AmiBlitz3.ab3@19904>  BRA.w reget
0002F926 <AmiBlitz3.ab3@19908>   MOVEQ #5,d2
0002F928 <AmiBlitz3.ab3@19909>   ASL.l #7,d1
0002F92A <AmiBlitz3.ab3@19910>   SUBQ.l #8,a7
0002F930 <AmiBlitz3.ab3@19915>       OR.l #$f23c4400,d1                                   ;fmove.s
0002F936 <AmiBlitz3.ab3@19916>        fmove.s fp0,0(a7)
0002F93A <AmiBlitz3.ab3@19918>   BSR writelong
0002F93C <AmiBlitz3.ab3@19919>   MOVE.l (a7)+,d1
0002F940 <AmiBlitz3.ab3@19920>   BSR writelong
0002F942 <AmiBlitz3.ab3@19921>   MOVE.l (a7)+,d1
0002F946 <AmiBlitz3.ab3@19925> BRA.w reget
0002F948 <AmiBlitz3.ab3@19932>  MOVE.l D3,D0
0002F94A <AmiBlitz3.ab3@19933>   TST.w D6
0002F94E <AmiBlitz3.ab3@19934>    BEQ.w 'skip            ;already integer
0002F954 <AmiBlitz3.ab3@19935>   MOVEA.l _mathffpbase,A6
0002F958 <AmiBlitz3.ab3@19936>    JSR -$1E(A6)
0002F95C <AmiBlitz3.ab3@19937>    BVC.w 'skip
0002F95E <AmiBlitz3.ab3@19938>   ADDQ.w #4,A7
0002F962 <AmiBlitz3.ab3@19939>  BRA.w numdofloat
0002F964 <AmiBlitz3.ab3@19942> RTS
0002F966 <AmiBlitz3.ab3@19946>   MOVEQ.l #$00,D6          ;no frac
0002F96A <AmiBlitz3.ab3@19948>    fmove.l d3,fp0
0002F96E <AmiBlitz3.ab3@19952>   BSR.w consttype2
0002F972 <AmiBlitz3.ab3@19953> BRA.w fetchnum3
0002F974 <AmiBlitz3.ab3@19961>   MOVE.w D2,-(A7)                       ;
0002F978 <AmiBlitz3.ab3@19962>    BSR.w evalconst                      ;  "
0002F97A <AmiBlitz3.ab3@19963>   MOVE.w (A7)+,D2
0002F97C <AmiBlitz3.ab3@19966>   TST.w D2
0002F980 <AmiBlitz3.ab3@19967>    BNE.w 'something
0002F982 <AmiBlitz3.ab3@19971>   TST.w D6
0002F986 <AmiBlitz3.ab3@19972>    BEQ.w 'nofrac
0002F988 <AmiBlitz3.ab3@19973>   MOVEQ.l #$04,D2
0002F98C <AmiBlitz3.ab3@19974>  BRA.w 'quick2
0002F98E <AmiBlitz3.ab3@19977>   MOVEQ.l #$02,D2
0002F992 <AmiBlitz3.ab3@19978>  BRA.w 'byte
0002F996 <AmiBlitz3.ab3@19981>   CMP.w #$1,D2
0002F99A <AmiBlitz3.ab3@19982>    BEQ.w 'byte
0002F99E <AmiBlitz3.ab3@19983>   CMP.w #$2,D2
0002F9A2 <AmiBlitz3.ab3@19984>    BEQ.w 'word
0002F9A6 <AmiBlitz3.ab3@19985>   CMP.w #$3,D2
0002F9AA <AmiBlitz3.ab3@19986>    BEQ.w 'long
0002F9AE <AmiBlitz3.ab3@19987>   CMP.w #$4,D2
0002F9B2 <AmiBlitz3.ab3@19988>    BEQ.w 'quick
0002F9B6 <AmiBlitz3.ab3@19989>   CMP.w #$5,D2
0002F9BA <AmiBlitz3.ab3@19990>    BEQ.w 'float
0002F9BE <AmiBlitz3.ab3@19991>  BRA.w mismatcherr
0002F9C2 <AmiBlitz3.ab3@19994>   BSR.w makeint                                          ;bugfix if a.b=$90 bug fix
0002F9C8 <AmiBlitz3.ab3@19995>   CMP.l #$7f,D0             ;127
0002F9CC <AmiBlitz3.ab3@19996>    BGT.w 'over1
0002F9D2 <AmiBlitz3.ab3@19997>   CMP.l #$FFFFFF80,D0       ;-128
0002F9D6 <AmiBlitz3.ab3@19998>    BGE.w 'dobword
0002F9D8 <AmiBlitz3.ab3@20001>   MOVEQ.l #$02,D2                                          ;was 2 before
0002F9DE <AmiBlitz3.ab3@20002>   CMP.l #$7fff,D0           ;32767
0002F9E2 <AmiBlitz3.ab3@20003>    BGT.w 'byte2
0002F9E8 <AmiBlitz3.ab3@20004>   CMP.l #$FFFF8000,D0       ;32768
0002F9EC <AmiBlitz3.ab3@20005>    BGE.w 'dobword
0002F9EE <AmiBlitz3.ab3@20008>   MOVEQ.l #$03,D2
0002F9F2 <AmiBlitz3.ab3@20009>  BRA.w 'dobword
0002F9F4 <AmiBlitz3.ab3@20036>   TST.w D6
0002F9F8 <AmiBlitz3.ab3@20037>    BNE.w 'quick2
0002F9FC <AmiBlitz3.ab3@20038>    BSR.w makeint
0002FA00 <AmiBlitz3.ab3@20039>  BRA.w 'over1
0002FA04 <AmiBlitz3.ab3@20042>   BSR.w makeint
0002FA06 <AmiBlitz3.ab3@20043>   TST.w D6
0002FA0A <AmiBlitz3.ab3@20044>   BEQ.w 'qint
0002FA10 <AmiBlitz3.ab3@20047>   CMP.l #MaxWordSgnd,D0   ;32767
0002FA14 <AmiBlitz3.ab3@20048>    BGT.w numdofloat
0002FA1A <AmiBlitz3.ab3@20049>   CMP.l #$FFFF8000,D0     ;-32768
0002FA1E <AmiBlitz3.ab3@20050>    BLT.w numdofloat
0002FA20 <AmiBlitz3.ab3@20052>   MOVE.w D0,-(A7)         ;save whole part
0002FA24 <AmiBlitz3.ab3@20053>    JSR -$24(A6)           ;back to ffp
0002FA26 <AmiBlitz3.ab3@20054>   MOVE.l D0,D1
0002FA28 <AmiBlitz3.ab3@20055>   MOVE.l D3,D0
0002FA2C <AmiBlitz3.ab3@20056>    JSR -$48(A6)           ;subtract - d0=fraction!
0002FA32 <AmiBlitz3.ab3@20057>   MOVE.l #$80000051,D1    ;65536
0002FA36 <AmiBlitz3.ab3@20058>    JSR -$4E(A6)           ;*65536
0002FA3A <AmiBlitz3.ab3@20059>    JSR -$1E(A6)           ;back to int
0002FA3E <AmiBlitz3.ab3@20061>    BEQ.w 'knob            ;numdofloat
0002FA44 <AmiBlitz3.ab3@20062>   CMP.l #$10000,D0        ;65536
0002FA48 <AmiBlitz3.ab3@20063>    BCC.w 'knob            ;numdofloat
0002FA4A <AmiBlitz3.ab3@20064>   MOVE.w D0,D1
0002FA4C <AmiBlitz3.ab3@20065>   MOVE.w (A7)+,D0
0002FA4E <AmiBlitz3.ab3@20066>   SWAP D0
0002FA50 <AmiBlitz3.ab3@20067>   MOVE.w D1,D0
0002FA54 <AmiBlitz3.ab3@20068>  BRA.w 'dolong
0002FA56 <AmiBlitz3.ab3@20071>   ADDQ.w #2,A7
0002FA5A <AmiBlitz3.ab3@20072>  BRA.w numdofloat
0002FA60 <AmiBlitz3.ab3@20075>   CMP.l #MaxWordSgnd,D0   ;#32767
0002FA64 <AmiBlitz3.ab3@20076>    BGT.w 'byte2
0002FA6A <AmiBlitz3.ab3@20077>   CMP.l #$FFFF8000,D0     ;#32768
0002FA6E <AmiBlitz3.ab3@20078>    BLT.w 'byte2
0002FA70 <AmiBlitz3.ab3@20079>   SWAP D0
0002FA74 <AmiBlitz3.ab3@20080>  BRA.w 'dolong
0002FA76 <AmiBlitz3.ab3@20083>   TST.w D6
0002FA7A <AmiBlitz3.ab3@20084>   BNE.w numdofloat
0002FA7C <AmiBlitz3.ab3@20085>   MOVE.l D3,D0
0002FA80 <AmiBlitz3.ab3@20086>  BRA.w 'dolong
0002FA82 <AmiBlitz3.ab3@20089>   TST.w D6
0002FA86 <AmiBlitz3.ab3@20090>   BNE.w numdofloat
0002FA88 <AmiBlitz3.ab3@20091>   MOVE.l D3,D0
0002FA8E <AmiBlitz3.ab3@20092>   MOVEA.l _mathffpbase,A6
0002FA92 <AmiBlitz3.ab3@20093>   JSR -$24(A6)           ;int to float
0002FA94 <AmiBlitz3.ab3@20094>   MOVE.l D0,D3
0002FA98 <AmiBlitz3.ab3@20095>  BRA.w numdofloat
0002FA9A <AmiBlitz3.ab3@20099> RTS
0002FA9C <AmiBlitz3.ab3@20103>   MOVEQ.l #$05,D2
0002FA9E <AmiBlitz3.ab3@20104>   MOVE.l D3,D0
0002FAA0 <AmiBlitz3.ab3@20105> RTS
0002FAA4 <AmiBlitz3.ab3@20109>             Ds.l 1                                         ;??Looks like unused data??
0002FAA8 <AmiBlitz3.ab3@20110> pushpc:     Ds.l 1
0002FAAC <AmiBlitz3.ab3@20111> pushoff:    Ds.l 1
0002FAB0 <AmiBlitz3.ab3@20112> pushdooff:  Ds.l 1
0002FAB2 <AmiBlitz3.ab3@20113> pushclen:   Ds.w 1
0002FAB6 <AmiBlitz3.ab3@20114> pushat:     Ds.l 1
0002FAC0 <AmiBlitz3.ab3@20120>   MOVE.l destpointer,pushpc
0002FACA <AmiBlitz3.ab3@20121>   MOVE.l hunkoffsetbase,pushoff
0002FACC <AmiBlitz3.ab3@20122>  RTS
0002FAD0 <AmiBlitz3.ab3@20128>   MOVEM.l D0-D1/A0-A1,-(A7)
0002FAD6 <AmiBlitz3.ab3@20130>   MOVE.l destpointer,D0
0002FADA <AmiBlitz3.ab3@20131>   MOVE.l pushpc(PC),D1
0002FAE0 <AmiBlitz3.ab3@20132>   MOVE.l D1,destpointer    ;New PC
0002FAE2 <AmiBlitz3.ab3@20133>   SUB.l D1,D0              ;len
0002FAE8 <AmiBlitz3.ab3@20134>   MOVE.w D0,pushclen
0002FAEC <AmiBlitz3.ab3@20135>    BEQ.w 'skip
0002FAF2 <AmiBlitz3.ab3@20136>   MOVE.w dontwrite_nomemleft,D1
0002FAF6 <AmiBlitz3.ab3@20137>    BNE.w 'skip
0002FAFE <AmiBlitz3.ab3@20140>    CMP.w #1000,pushclen
0002FB02 <AmiBlitz3.ab3@20141>    BGE conmemerr
0002FB08 <AmiBlitz3.ab3@20142>    MOVE.l pushat,d0
0002FB0C <AmiBlitz3.ab3@20143>    BNE 'nomem
0002FB12 <AmiBlitz3.ab3@20144>    MOVE.l #1024,d0
0002FB14 <AmiBlitz3.ab3@20146>   MOVEQ.l #$01,D1
0002FB1A <AmiBlitz3.ab3@20147>   MOVEA.l _execbase,A6
0002FB20 <AmiBlitz3.ab3@20149>   MOVE.l mempool,a0
0002FB24 <AmiBlitz3.ab3@20150>   JSR _AllocPooled(a6)
0002FB2A <AmiBlitz3.ab3@20153>   MOVE.l D0,pushat
0002FB2C <AmiBlitz3.ab3@20158>   MOVEA.l D0,A0          ;destination
0002FB32 <AmiBlitz3.ab3@20159>   MOVEA.l pushpc,A1      ;source
0002FB38 <AmiBlitz3.ab3@20160>   MOVE.l A1,destpointer
0002FB3E <AmiBlitz3.ab3@20161>   MOVE.w pushclen,D0
0002FB40 <AmiBlitz3.ab3@20162>   LSR.w #1,D0
0002FB42 <AmiBlitz3.ab3@20163>   SUBQ.w #1,D0           ;to word dbf
0002FB44 <AmiBlitz3.ab3@20166>     MOVE.w (A1)+,(A0)+
0002FB48 <AmiBlitz3.ab3@20167>   DBF D0,'loop
0002FB52 <AmiBlitz3.ab3@20169>    MOVE.l hunkoffsetbase,pushdooff
0002FB56 <AmiBlitz3.ab3@20172>   MOVEM.l (A7)+,D0-D1/A0-A1
0002FB58 <AmiBlitz3.ab3@20173> RTS
0002FB5C <AmiBlitz3.ab3@20179>   MOVEM.l D0-D1/A0-A1,-(A7)
0002FB5E <AmiBlitz3.ab3@20180>   MOVEQ.l #$00,D0
0002FB64 <AmiBlitz3.ab3@20181>   MOVE.w pushclen,D0
0002FB68 <AmiBlitz3.ab3@20182>    BEQ.w 'skip
0002FB6E <AmiBlitz3.ab3@20183>   MOVE.l destpointer,D1     ;pc before put
0002FB74 <AmiBlitz3.ab3@20184>   ADD.l D0,destpointer
0002FB7A <AmiBlitz3.ab3@20185>   TST.w dontwrite_nomemleft
0002FB7E <AmiBlitz3.ab3@20186>    BNE.w 'skip
0002FB80 <AmiBlitz3.ab3@20188>   LSR.w #1,D0
0002FB82 <AmiBlitz3.ab3@20189>   SUBQ.w #1,D0
0002FB84 <AmiBlitz3.ab3@20191>   MOVEA.l D1,A1
0002FB8A <AmiBlitz3.ab3@20192>   MOVEA.l pushat,A0
0002FB90 <AmiBlitz3.ab3@20195>     CMPA.l destbufferend,A1
0002FB94 <AmiBlitz3.ab3@20196>     BCS.w 'ok
0002FB9C <AmiBlitz3.ab3@20198>     MOVE.w #$FFFF,dontwrite_nomemleft    ; was -1
0002FBA0 <AmiBlitz3.ab3@20199>   BRA.w 'skip
0002FBA2 <AmiBlitz3.ab3@20202>      MOVE.w (A0)+,(A1)+                                    ;copylibcode
0002FBA6 <AmiBlitz3.ab3@20203>   DBF D0,'loop
0002FBAC <AmiBlitz3.ab3@20208>   SUB.l pushpc,D1
0002FBB0 <AmiBlitz3.ab3@20209>   BEQ.w 'skip2
0002FBB6 <AmiBlitz3.ab3@20210>   MOVEA.l pushdooff,A0
0002FBBC <AmiBlitz3.ab3@20213>   CMPA.l pushoff,A0
0002FBC0 <AmiBlitz3.ab3@20214>   BEQ.w 'done
0002FBC4 <AmiBlitz3.ab3@20215>   MOVEA.l $4(A0),A1          ;address in prog.
0002FBCA <AmiBlitz3.ab3@20216>   ADDA.l destbufferstart,A1
0002FBD0 <AmiBlitz3.ab3@20217>   CMPA.l destbufferend,A1
0002FBD4 <AmiBlitz3.ab3@20218>   BCC.w 'next                ;leave offs >= lib
0002FBD8 <AmiBlitz3.ab3@20219>   ADD.l D1,$4(A0)
0002FBDA <AmiBlitz3.ab3@20222>   MOVEA.l (A0),A0
0002FBDE <AmiBlitz3.ab3@20223>  BRA.w 'loop2
0002FBE4 <AmiBlitz3.ab3@20227>   MOVEA.l pushat,A1
0002FBE6 <AmiBlitz3.ab3@20228>   MOVEQ.l #$00,D0
0002FBEC <AmiBlitz3.ab3@20229>   MOVE.w pushclen,D0
0002FBF2 <AmiBlitz3.ab3@20230>   MOVEA.l _execbase,A6
0002FBF8 <AmiBlitz3.ab3@20231>   MOVE.l mempool,a0
0002FBFC <AmiBlitz3.ab3@20235>   MOVEM.l (A7)+,D0-D1/A0-A1
0002FBFE <AmiBlitz3.ab3@20236> RTS
0002FC00 <AmiBlitz3.ab3@20242>   MOVE.l D1,-(A7)                                          ;array mul
0002FC02 <AmiBlitz3.ab3@20243>   MOVEQ.l #$00,D2
0002FC04 <AmiBlitz3.ab3@20244>   MOVEQ.l #$0F,D3
0002FC06 <AmiBlitz3.ab3@20247>     LSL.w #1,D1
0002FC0A <AmiBlitz3.ab3@20248>     BCC.w 'shskip
0002FC0C <AmiBlitz3.ab3@20249>     ADDQ.w #1,D2
0002FC0E <AmiBlitz3.ab3@20250>     MOVE.w D3,D4
0002FC12 <AmiBlitz3.ab3@20253>   DBF D3,'shloop
0002FC14 <AmiBlitz3.ab3@20255>   SUBQ.w #1,D2
0002FC18 <AmiBlitz3.ab3@20256>    BNE.w 'domul
0002FC1A <AmiBlitz3.ab3@20257>   ADDQ.w #4,A7           ; was 2
0002FC1C <AmiBlitz3.ab3@20258>   MOVE.w D4,D1
0002FC20 <AmiBlitz3.ab3@20259>    BEQ.w 'done
0002FC24 <AmiBlitz3.ab3@20260>   CMP.w #$8,D1
0002FC28 <AmiBlitz3.ab3@20261>    BCS.w 'once
0002FC2C <AmiBlitz3.ab3@20262>   SUBI.w #$8,D1
0002FC30 <AmiBlitz3.ab3@20263>    BSR.w 'once
0002FC32 <AmiBlitz3.ab3@20264>   MOVEQ.l #$00,D1
0002FC34 <AmiBlitz3.ab3@20267>   LSL.w #8,D1
0002FC36 <AmiBlitz3.ab3@20268>   LSL.w #1,D1
0002FC3A <AmiBlitz3.ab3@20269>   ORI.w #$E188,D1
0002FC40 <AmiBlitz3.ab3@20270>   OR.w regnum,D1
0002FC44 <AmiBlitz3.ab3@20271>  BRA.w writeword
0002FC46 <AmiBlitz3.ab3@20274>  RTS
0002FC48 <AmiBlitz3.ab3@20278>   MOVEQ #0,d1
0002FC4E <AmiBlitz3.ab3@20279>   MOVE.w regnum,D1
0002FC50 <AmiBlitz3.ab3@20281>   LSL.l #8,D1
0002FC52 <AmiBlitz3.ab3@20284>   LSL.l #4,d1
0002FC58 <AmiBlitz3.ab3@20288>   OR.l #$4c3c0000,d1
0002FC5E <AmiBlitz3.ab3@20289>   OR.w regnum,d1
0002FC62 <AmiBlitz3.ab3@20290>   BSR.w writelong          ; was writeword
0002FC64 <AmiBlitz3.ab3@20292>   MOVE.l (A7)+,D1
0002FC68 <AmiBlitz3.ab3@20295> BRA writelong
0002FC6E <AmiBlitz3.ab3@20302>   MOVE.l destpointer,-(A7)
0002FC70 <AmiBlitz3.ab3@20303>   MOVEQ.l #-$01,D7
0002FC74 <AmiBlitz3.ab3@20306>     BSR.w findhilib
0002FC78 <AmiBlitz3.ab3@20307>      BEQ.w 'done
0002FC7C <AmiBlitz3.ab3@20308>     TST.w $C(A2)
0002FC80 <AmiBlitz3.ab3@20309>      BPL.w 'loop
0002FC84 <AmiBlitz3.ab3@20310>     MOVE.l $16(A2),D1
0002FC88 <AmiBlitz3.ab3@20311>     BEQ.w 'loop
0002FC8C <AmiBlitz3.ab3@20313>     MOVE.w $4(A2),D1                                       ; check state in D1 and do some things
0002FC90 <AmiBlitz3.ab3@20314>     CMP.w #-$2,D1          ; was #allocvars
0002FC94 <AmiBlitz3.ab3@20315>      BNE.w 'notvar
0002FC98 <AmiBlitz3.ab3@20316>     BSR.w makevsize
0002FC9C <AmiBlitz3.ab3@20317>  BRA.w 'more
0002FCA0 <AmiBlitz3.ab3@20320>     CMP.w #-$5C4,D1       ; was #debuglib
0002FCA4 <AmiBlitz3.ab3@20321>      BNE.w 'notdebuglib
0002FCA8 <AmiBlitz3.ab3@20325>     MOVE.w #$7000,D1      ;moveq #0,d0
0002FCB0 <AmiBlitz3.ab3@20326>     BTST #$7,autorun
0002FCB2 <AmiBlitz3.ab3@20327>     SNE D1
0002FCB6 <AmiBlitz3.ab3@20328>     BSR.w writeword
0002FCBA <AmiBlitz3.ab3@20329>  BRA.w 'more
0002FCBE <AmiBlitz3.ab3@20332>     CMP.w #-$12D,D1       ; was 65235
0002FCC2 <AmiBlitz3.ab3@20333>      BNE.w 'notstring1
0002FCC6 <AmiBlitz3.ab3@20334>     BSR.w makessize
0002FCCA <AmiBlitz3.ab3@20335>  BRA.w 'more
0002FCCE <AmiBlitz3.ab3@20338>     CMP.w #-$1F5,D1       ; was 65035
0002FCD2 <AmiBlitz3.ab3@20339>      BNE.w 'notexit
0002FCD6 <AmiBlitz3.ab3@20341>     MOVE.w #$203C,D1
0002FCDA <AmiBlitz3.ab3@20342>     BSR.w writeword
0002FCDE <AmiBlitz3.ab3@20343>     BSR.w addoff
0002FCE4 <AmiBlitz3.ab3@20344>     MOVE.l endop,D1
0002FCE8 <AmiBlitz3.ab3@20345>     BSR.w writelong
0002FCEC <AmiBlitz3.ab3@20346>  BRA.w 'more
0002FCF0 <AmiBlitz3.ab3@20349>     CMP.w #-$3E9,D1       ; was 64535
0002FCF4 <AmiBlitz3.ab3@20350>      BNE.w 'notdatalib
0002FCF8 <AmiBlitz3.ab3@20351>     MOVE.w #$203C,D1
0002FCFC <AmiBlitz3.ab3@20352>     BSR.w writeword
0002FD00 <AmiBlitz3.ab3@20353>     BSR.w addoff
0002FD06 <AmiBlitz3.ab3@20354>     MOVE.l data2at,D1
0002FD0A <AmiBlitz3.ab3@20355>     BSR.w writelong
0002FD0E <AmiBlitz3.ab3@20356>  BRA.w 'more
0002FD12 <AmiBlitz3.ab3@20359>     CMP.w #$1,D1          ; was #dhandlerlib
0002FD16 <AmiBlitz3.ab3@20360>      BNE.w 'notdhandler
0002FD1A <AmiBlitz3.ab3@20361>     MOVE.w #$203C,D1
0002FD1E <AmiBlitz3.ab3@20362>     BSR.w writeword
0002FD24 <AmiBlitz3.ab3@20363>     MOVE.l ptr_seg_debugger,D1
0002FD28 <AmiBlitz3.ab3@20364>     BSR.w writelong
0002FD2C <AmiBlitz3.ab3@20368>     MOVE.l $16(A2),D1
0002FD34 <AmiBlitz3.ab3@20369>     MOVE.w #$FFFF,lasta6     ; was -1
0002FD38 <AmiBlitz3.ab3@20370>     BSR.w Amakelibsub
0002FD3E <AmiBlitz3.ab3@20371>     CMPI.w #$FFFE,$4(A2)     ; was #allocvars
0002FD42 <AmiBlitz3.ab3@20372>      BNE.w 'notvar2
0002FD48 <AmiBlitz3.ab3@20374>     MOVE.l intdata1,D1
0002FD4C <AmiBlitz3.ab3@20375>      BEQ.w 'notvar2
0002FD52 <AmiBlitz3.ab3@20376>     MOVE.w putidata1,D1
0002FD56 <AmiBlitz3.ab3@20377>     BSR.w writeword
0002FD5A <AmiBlitz3.ab3@20378>     BSR.w addoff
0002FD60 <AmiBlitz3.ab3@20379>     MOVE.l intdata1,D1
0002FD64 <AmiBlitz3.ab3@20380>     BSR.w writelong
0002FD68 <AmiBlitz3.ab3@20383>     MOVE.w #$2B40,D1
0002FD6C <AmiBlitz3.ab3@20384>     TST.w $1A(A2)
0002FD70 <AmiBlitz3.ab3@20385>      BEQ.w 'loop
0002FD74 <AmiBlitz3.ab3@20386>      BPL.w 'long
0002FD78 <AmiBlitz3.ab3@20387>     MOVE.w #$3B40,D1
0002FD7C <AmiBlitz3.ab3@20390>     BSR.w writeword
0002FD80 <AmiBlitz3.ab3@20391>     MOVE.w $A(A2),D1
0002FD84 <AmiBlitz3.ab3@20392>      BSR.w writeword
0002FD8A <AmiBlitz3.ab3@20393>     CMPI.w #$FFFA,$4(A2)   ; was #65530
0002FD8E <AmiBlitz3.ab3@20394>      BNE.w 'loop
0002FD90 <AmiBlitz3.ab3@20396>     MOVE.w D7,-(A7)
0002FD96 <AmiBlitz3.ab3@20397>     MOVE.w numstatic,D4
0002FD9A <AmiBlitz3.ab3@20398>      BEQ.w 'nostats
0002FDA0 <AmiBlitz3.ab3@20399>     MOVE.l staticdata,D3
0002FDA6 <AmiBlitz3.ab3@20400>      JSR datastart
0002FDAA <AmiBlitz3.ab3@20401>     MOVE.w #$C500,D1       ; was #alstat
0002FDAE <AmiBlitz3.ab3@20402>      BSR.w tokejsr2
0002FDB4 <AmiBlitz3.ab3@20405>     MOVE.w maxsused,D4
0002FDB8 <AmiBlitz3.ab3@20406>      BEQ.w 'nomaxs
0002FDBE <AmiBlitz3.ab3@20407>     MOVE.l maxsat,D3
0002FDC4 <AmiBlitz3.ab3@20408>      JSR datastart
0002FDC8 <AmiBlitz3.ab3@20409>     MOVE.w #$CF00,D1      ; was #setmaxs
0002FDCC <AmiBlitz3.ab3@20410>      BSR.w tokejsr2
0002FDCE <AmiBlitz3.ab3@20413>     MOVE.w (A7)+,D7
0002FDD2 <AmiBlitz3.ab3@20415>  BRA.w 'loop
0002FDD8 <AmiBlitz3.ab3@20421>   MOVE.l destpointer,D1
0002FDDA <AmiBlitz3.ab3@20422>   CMP.l (A7),D1
0002FDDE <AmiBlitz3.ab3@20423>    BNE.w 'yi
0002FDE6 <AmiBlitz3.ab3@20424>   MOVE.w #$0008,noinits+2
0002FDEA <AmiBlitz3.ab3@20425>  BRA.w 'yi3
0002FDF0 <AmiBlitz3.ab3@20428>   CLR.w noinits+2
0002FDF6 <AmiBlitz3.ab3@20429>   MOVE.w dontwrite_nomemleft,D1
0002FDFA <AmiBlitz3.ab3@20430>    BNE.w 'yi2
0002FE00 <AmiBlitz3.ab3@20432>   TST.l newinitaddr
0002FE04 <AmiBlitz3.ab3@20433>    BEQ 'l10
0002FE0A <AmiBlitz3.ab3@20434>   MOVE.l newinitaddr,D2
0002FE10 <AmiBlitz3.ab3@20435>   SUB.l destbufferstart,D2
0002FE12 <AmiBlitz3.ab3@20436>   ADDQ.l #2,d2
0002FE18 <AmiBlitz3.ab3@20438>   MOVEA.l newinitaddr,A0                                   ;write newinitcode
0002FE1C <AmiBlitz3.ab3@20442>   MOVE.w #$4EB9,(A0)+
0002FE1E <AmiBlitz3.ab3@20443>   MOVE.l (A7),(A0)+
0002FE22 <AmiBlitz3.ab3@20446>  BRA 'l20
0002FE28 <AmiBlitz3.ab3@20449>   MOVEA.l destbufferstart,A0                               ;write initcode
0002FE2E <AmiBlitz3.ab3@20450>   TST.b saved0
0002FE32 <AmiBlitz3.ab3@20451>   BEQ 'l1
0002FE36 <AmiBlitz3.ab3@20452>   MOVE.w #$23c0,(a0)+
0002FE38 <AmiBlitz3.ab3@20453>   MOVE.l a0,a1
0002FE3A <AmiBlitz3.ab3@20454>   ADDQ.l #6,a1
0002FE3C <AmiBlitz3.ab3@20455>   MOVE.l a1,(a0)+
0002FE3E <AmiBlitz3.ab3@20457>   MOVEQ.l #$02,D2
0002FE42 <AmiBlitz3.ab3@20458>   BSR.w addhunkoffset
0002FE46 <AmiBlitz3.ab3@20460>   MOVE.w #$6004,(a0)+
0002FE4C <AmiBlitz3.ab3@20461>   MOVE.l #$4e714e71,(a0)+
0002FE50 <AmiBlitz3.ab3@20464>   MOVE.w #$4EB9,(A0)+
0002FE52 <AmiBlitz3.ab3@20465>   MOVE.l (A7),(A0)+
0002FE54 <AmiBlitz3.ab3@20466>   MOVEQ #2,d2
0002FE5A <AmiBlitz3.ab3@20467>   TST.b saved0
0002FE5E <AmiBlitz3.ab3@20468>   BEQ 'l20
0002FE60 <AmiBlitz3.ab3@20469>   MOVEQ.l #14,D2
0002FE64 <AmiBlitz3.ab3@20472>   BSR.w addhunkoffset
0002FE68 <AmiBlitz3.ab3@20473>   MOVE.w #$2039,(a0)+
0002FE6A <AmiBlitz3.ab3@20474>   MOVE.l a1,(a0)+
0002FE6C <AmiBlitz3.ab3@20475>   MOVEQ.l #20,d2
0002FE70 <AmiBlitz3.ab3@20478>   BSR.w addhunkoffset
0002FE74 <AmiBlitz3.ab3@20482>   MOVE.w #$4E75,D1
0002FE78 <AmiBlitz3.ab3@20483>   BSR.w writeword
0002FE7A <AmiBlitz3.ab3@20486>   ADDQ.w #4,A7
0002FE7C <AmiBlitz3.ab3@20487> RTS
0002FE80 <AmiBlitz3.ab3@20492>   Dc.b $22,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D1
0002FE86 <AmiBlitz3.ab3@20494>   Dc.b $23,$CD,$00,$00,$00,$00                             ;MOVE.L  A5,$00000000
0002FE8C <AmiBlitz3.ab3@20496>   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0002FE92 <AmiBlitz3.ab3@20501>   MOVE.l stringbuffer,D1
0002FE96 <AmiBlitz3.ab3@20502> BRA.w makesize
0002FE98 <AmiBlitz3.ab3@20507>   MOVEQ.l #$00,D1
0002FE9E <AmiBlitz3.ab3@20508>   MOVE.w globalvarpointer,D1
0002FEA2 <AmiBlitz3.ab3@20509>   SUBI.w #$8000,D1
0002FEA6 <AmiBlitz3.ab3@20510>   BNE.w makesize
0002FEA8 <AmiBlitz3.ab3@20511>     MOVEQ.l #$08,D1
0002FEAA <AmiBlitz3.ab3@20516>   MOVE.l D1,-(A7)
0002FEAE <AmiBlitz3.ab3@20517>   MOVE.w #$203C,D1
0002FEB2 <AmiBlitz3.ab3@20518>   BSR.w writeword
0002FEB4 <AmiBlitz3.ab3@20519>   MOVE.l (A7)+,D1
0002FEB8 <AmiBlitz3.ab3@20520> BRA.w writelong
0002FEBA <AmiBlitz3.ab3@20528>   MOVEQ.l #$00,D1
0002FEC0 <AmiBlitz3.ab3@20529>   MOVEA.l libpointer,A1
0002FEC4 <AmiBlitz3.ab3@20532>     CMPA.w #$0,A1
0002FEC8 <AmiBlitz3.ab3@20533>     BEQ.w 'done
0002FECC <AmiBlitz3.ab3@20534>       CMP.w $4(A1),D7
0002FED0 <AmiBlitz3.ab3@20535>       BLS.w 'next
0002FED4 <AmiBlitz3.ab3@20536>         CMP.w $4(A1),D1
0002FED8 <AmiBlitz3.ab3@20537>         BCC.w 'next
0002FEDC <AmiBlitz3.ab3@20538>           MOVE.w $4(A1),D1
0002FEDE <AmiBlitz3.ab3@20539>           MOVEA.l A1,A2
0002FEE0 <AmiBlitz3.ab3@20542>     MOVEA.l (A1),A1
0002FEE4 <AmiBlitz3.ab3@20543>  BRA.w 'loop
0002FEE6 <AmiBlitz3.ab3@20546>   MOVE.w D1,D7
0002FEE8 <AmiBlitz3.ab3@20547> RTS
0002FEEA <AmiBlitz3.ab3@20555>   MOVEQ.l #-$01,D1
0002FEF0 <AmiBlitz3.ab3@20556>   MOVEA.l libpointer,A1
0002FEF4 <AmiBlitz3.ab3@20559>     CMPA.w #$0,A1
0002FEF8 <AmiBlitz3.ab3@20560>      BEQ.w 'done
0002FEFC <AmiBlitz3.ab3@20561>     CMP.w $4(A1),D7
0002FF00 <AmiBlitz3.ab3@20562>      BCC.w 'next
0002FF04 <AmiBlitz3.ab3@20563>     CMP.w $4(A1),D1
0002FF08 <AmiBlitz3.ab3@20564>      BLS.w 'next
0002FF0C <AmiBlitz3.ab3@20565>     MOVE.w $4(A1),D1
0002FF0E <AmiBlitz3.ab3@20566>     MOVEA.l A1,A2
0002FF10 <AmiBlitz3.ab3@20569>     MOVEA.l (A1),A1
0002FF14 <AmiBlitz3.ab3@20570> BRA.w 'loop
0002FF16 <AmiBlitz3.ab3@20573>   MOVE.w D1,D7
0002FF1A <AmiBlitz3.ab3@20574>   CMP.w #-$1,D1
0002FF1C <AmiBlitz3.ab3@20575> RTS
0002FF22 <AmiBlitz3.ab3@20583>   ADDQ.w #1,globalvarpointer
0002FF2A <AmiBlitz3.ab3@20584>   BCLR #$0,globalvarpointer+1
0002FF2C <AmiBlitz3.ab3@20585>   MOVEQ.l #$00,D7
0002FF30 <AmiBlitz3.ab3@20588>     BSR.w findlolib
0002FF34 <AmiBlitz3.ab3@20589>     BEQ.w 'azdone
0002FF38 <AmiBlitz3.ab3@20590>     TST.w $C(A2)
0002FF3C <AmiBlitz3.ab3@20591>     BPL.w 'loop
0002FF3E <AmiBlitz3.ab3@20594>     MOVEA.l A2,A1
0002FF42 <AmiBlitz3.ab3@20595>     ADDA.l $12(A1),A1
0002FF46 <AmiBlitz3.ab3@20596>     TST.w -$2(A1)
0002FF4A <AmiBlitz3.ab3@20597>     BEQ.w 'nomax
0002FF4E <AmiBlitz3.ab3@20601>     MOVE.l -$A(A1),D1
0002FF52 <AmiBlitz3.ab3@20602>     LEA $6(A2,D1.L),A3
0002FF54 <AmiBlitz3.ab3@20605>       TST.w (A3)+
0002FF58 <AmiBlitz3.ab3@20606>       BEQ.w 'plopf
0002FF5A <AmiBlitz3.ab3@20607>         ADDQ.w #2,A3
0002FF5E <AmiBlitz3.ab3@20608>  BRA.w 'plop
0002FF62 <AmiBlitz3.ab3@20611>     TST.l $4(A3)
0002FF66 <AmiBlitz3.ab3@20612>     BEQ.w 'nomax
0002FF6A <AmiBlitz3.ab3@20616>       MOVE.w freemax(PC),D1    ;move.w #x,-(a7)
0002FF6E <AmiBlitz3.ab3@20617>       BSR.w writeword
0002FF72 <AmiBlitz3.ab3@20618>       MOVE.w -$4(A1),D1
0002FF76 <AmiBlitz3.ab3@20619>       BSR.w writeword          ;x (max)
0002FF7C <AmiBlitz3.ab3@20620>       MOVE.l free,D1
0002FF80 <AmiBlitz3.ab3@20621>       MOVE.w -$6(A1),D1
0002FF84 <AmiBlitz3.ab3@20622>       BSR.w writelong          ;move.l x(a5),a3
0002FF8A <AmiBlitz3.ab3@20624>       MOVE.l destpointer,-(A7)
0002FF8C <AmiBlitz3.ab3@20625>       MOVEQ.l #$01,D1
0002FF90 <AmiBlitz3.ab3@20626>       MOVE.w -$2(A1),D2
0002FF92 <AmiBlitz3.ab3@20627>       LSL.w D2,D1
0002FF94 <AmiBlitz3.ab3@20628>       MOVE.w D1,-(A7)
0002FF98 <AmiBlitz3.ab3@20629>       MOVE.l -$A(A1),D1
0002FF9C <AmiBlitz3.ab3@20630>       BSR.w Amakelibsub
0002FFA0 <AmiBlitz3.ab3@20631>       MOVE.w freemax3(PC),D1
0002FFA4 <AmiBlitz3.ab3@20632>       BSR.w writeword          ;lea x(a3),a3
0002FFA6 <AmiBlitz3.ab3@20633>       MOVE.w (A7)+,D1
0002FFAA <AmiBlitz3.ab3@20634>       BSR.w writeword
0002FFAE <AmiBlitz3.ab3@20635>       MOVE.l freemax2(PC),D1
0002FFB2 <AmiBlitz3.ab3@20636>       BSR.w writelong
0002FFB4 <AmiBlitz3.ab3@20637>       MOVE.l (A7)+,D1
0002FFBA <AmiBlitz3.ab3@20638>       SUB.l destpointer,D1
0002FFBE <AmiBlitz3.ab3@20639>       BSR.w writeword
0002FFC2 <AmiBlitz3.ab3@20640>       MOVE.w freemax4(PC),D1
0002FFC6 <AmiBlitz3.ab3@20641>       BSR.w writeword
0002FFCA <AmiBlitz3.ab3@20644>     MOVE.l $1C(A2),D1
0002FFCE <AmiBlitz3.ab3@20645>     BEQ.w 'loop
0002FFD2 <AmiBlitz3.ab3@20649>     MOVE.w $4(A2),D1
0002FFD6 <AmiBlitz3.ab3@20650>     CMP.w #-$2,D1              ; was #allocvars
0002FFDA <AmiBlitz3.ab3@20651>     BNE.w 'notvfin
0002FFDE <AmiBlitz3.ab3@20652>       BSR.w makevsize
0002FFE2 <AmiBlitz3.ab3@20653>  BRA.w 'more
0002FFE6 <AmiBlitz3.ab3@20656>     CMP.w #-$12D,D1            ; was #65235
0002FFEA <AmiBlitz3.ab3@20657>     BNE.w 'more
0002FFEE <AmiBlitz3.ab3@20658>       BSR.w makessize
0002FFF2 <AmiBlitz3.ab3@20659>  BRA.w 'more
0002FFF6 <AmiBlitz3.ab3@20663>     MOVE.l $1C(A2),D1
0002FFFE <AmiBlitz3.ab3@20664>     MOVE.w #$FFFF,lasta6       ; was -1
00030002 <AmiBlitz3.ab3@20665>     BSR.w Amakelibsub
00030006 <AmiBlitz3.ab3@20666>  BRA.w 'loop
00030008 <AmiBlitz3.ab3@20669> RTS
0003000C <AmiBlitz3.ab3@20673> freemax:   Dc.b $3F,$3C,$00,$00                            ;MOVE.W  #$0000,-(A7)
0003000E <AmiBlitz3.ab3@20675> freemax2:  Dc.b $53,$57                                    ;SUBQ.W  #1,(A7)
00030012 <AmiBlitz3.ab3@20676>            Dc.b $66,$00,$FF,$FC                            ;BNE.W freemax2
00030014 <AmiBlitz3.ab3@20677> freemax4:  Dc.b $54,$4F                                    ;ADDQ.W  #2,A7
00030018 <AmiBlitz3.ab3@20678> freemax3:  Dc.b $47,$EB,$00,$00                            ;LEA $0000(A3),A3
0003001E <AmiBlitz3.ab3@20683>   TST.b debugmode
00030022 <AmiBlitz3.ab3@20684>    BEQ.b 'skip
00030028 <AmiBlitz3.ab3@20685>   TST.w debugversion
0003002C <AmiBlitz3.ab3@20686>    BNE.b 'skip
00030030 <AmiBlitz3.ab3@20687>   MOVE.w #$C308,D1
00030034 <AmiBlitz3.ab3@20688>  BRA.w Atokejsr
00030036 <AmiBlitz3.ab3@20691> RTS
0003003E <AmiBlitz3.ab3@20695>   MOVE.w #$FFFF,lasta6
00030042 <AmiBlitz3.ab3@20700>   MOVEM.l D0-d7/A0-a6,-(A7)
0003004A <AmiBlitz3.ab3@20701>   MOVE.b #1,nostringopt
00030050 <AmiBlitz3.ab3@20702>   JSR searchinstr
00030052 <AmiBlitz3.ab3@20703>   MOVE.l A3,D1
00030054 <AmiBlitz3.ab3@20704>   SUB.l A2,D1
00030058 <AmiBlitz3.ab3@20705>   BSR.w Amakelibsub
0003005C <AmiBlitz3.ab3@20706>   MOVEM.l (A7)+,d0-d7/a0-a6
0003005E <AmiBlitz3.ab3@20707> RTS
00030064 <AmiBlitz3.ab3@20714>   MOVE.l libisat,-(A7)                                   ;library write
0003006A <AmiBlitz3.ab3@20715>   MOVE.l A2,libisat
0003006C <AmiBlitz3.ab3@20717>   MOVEA.l A1,A2
0003006E <AmiBlitz3.ab3@20718>   MOVE.w (A2)+,D1
00030074 <AmiBlitz3.ab3@20719>   MOVE.l a2,lastinstructionaddr
00030078 <AmiBlitz3.ab3@20720>   ANDI.w #$FF,D1
0003007A <AmiBlitz3.ab3@20721>   ADDA.w D1,A2
0003007C <AmiBlitz3.ab3@20722>   EXG.l D0,A2
0003007E <AmiBlitz3.ab3@20723>   ADDQ.l #1,D0
00030082 <AmiBlitz3.ab3@20724>   BCLR #$0,D0
00030084 <AmiBlitz3.ab3@20725>   EXG.l D0,A2
00030088 <AmiBlitz3.ab3@20726> BRA.w makelsub2
0003008E <AmiBlitz3.ab3@20730>   MOVE.l libisat,-(A7)
00030094 <AmiBlitz3.ab3@20731>   MOVE.l A2,libisat
00030096 <AmiBlitz3.ab3@20732>   MOVEA.l A3,A2
0003009A <AmiBlitz3.ab3@20733> BRA.w makelsub2
0003009C <AmiBlitz3.ab3@20737>   MOVE.l a1,-(a7)
0003009E <AmiBlitz3.ab3@20740>   MOVE.l d0,a0
000300A2 <AmiBlitz3.ab3@20741>   MOVE.l $a(a0),d0
000300A4 <AmiBlitz3.ab3@20742>   MOVE.l d0,a1
000300AC <AmiBlitz3.ab3@20743>   CMP.l #8,4(a1)
000300B0 <AmiBlitz3.ab3@20744>   BLE 'norec
000300B2 <AmiBlitz3.ab3@20745>   MOVE.l a0,-(a7)
000300B8 <AmiBlitz3.ab3@20746>   MOVE.l typebase,-(a7)
000300BA <AmiBlitz3.ab3@20747>   MOVEQ #0,d0
000300BE <AmiBlitz3.ab3@20748>   MOVE.w 4(a0),d0
000300C4 <AmiBlitz3.ab3@20749>   ADD.l d0,typebase
000300C8 <AmiBlitz3.ab3@20750>   MOVE.l $4(a1),d0
000300CC <AmiBlitz3.ab3@20751>   BSR scantype
000300D2 <AmiBlitz3.ab3@20752>   MOVE.l (a7)+,typebase
000300D4 <AmiBlitz3.ab3@20753>   MOVE.l (a7)+,a0
000300DA <AmiBlitz3.ab3@20756>   CMP.l #newtype_string,d0
000300DE <AmiBlitz3.ab3@20757>   BNE 'nostring
000300E4 <AmiBlitz3.ab3@20758>   ADDQ #2,a2offset
000300EA <AmiBlitz3.ab3@20759>   MOVE.l #$3f3c0000,d1
000300EC <AmiBlitz3.ab3@20760>   MOVEQ #0,d0
000300F0 <AmiBlitz3.ab3@20761>   MOVE.w 4(a0),d0
000300F6 <AmiBlitz3.ab3@20762>   ADD.l typebase,d0
000300F8 <AmiBlitz3.ab3@20763>   MOVE.w d0,d1
000300FC <AmiBlitz3.ab3@20764>   BSR writelong
00030102 <AmiBlitz3.ab3@20765>   TST.b debugmode
00030106 <AmiBlitz3.ab3@20766>   BEQ 'l1a
00030108 <AmiBlitz3.ab3@20767>   MOVE.l d1,-(a7)
0003010E <AmiBlitz3.ab3@20768>   MOVE.l #$c308,d1
00030114 <AmiBlitz3.ab3@20769>   JSR Atokejsr
00030116 <AmiBlitz3.ab3@20770>   MOVE.l (a7)+,d1
0003011A <AmiBlitz3.ab3@20773>   TST.w 8(a0)
0003011E <AmiBlitz3.ab3@20774>   BEQ 'nostring
00030122 <AmiBlitz3.ab3@20775>   MOVEM.l d2/d3,-(a7)
00030124 <AmiBlitz3.ab3@20776>   MOVE.l d1,d2
00030126 <AmiBlitz3.ab3@20777>   MOVEQ #0,d3
0003012A <AmiBlitz3.ab3@20778>   MOVE.w 8(a0),d3
0003012C <AmiBlitz3.ab3@20779>   SUBQ.l #1,d3
00030130 <AmiBlitz3.ab3@20780>   BEQ 'nostring2
00030132 <AmiBlitz3.ab3@20783>   ADDQ.l #4,d2
00030134 <AmiBlitz3.ab3@20784>   MOVE.l d2,d1
00030138 <AmiBlitz3.ab3@20785>   BSR writelong
0003013E <AmiBlitz3.ab3@20786>   TST.b debugmode
00030142 <AmiBlitz3.ab3@20787>   BEQ 'l1
00030148 <AmiBlitz3.ab3@20788>   MOVE.l #$c308,d1
0003014E <AmiBlitz3.ab3@20789>   JSR Atokejsr
00030154 <AmiBlitz3.ab3@20792>   ADDQ #2,a2offset
00030156 <AmiBlitz3.ab3@20793>   SUBQ.l #1,d3
0003015A <AmiBlitz3.ab3@20794>   BNE 'loop
0003015E <AmiBlitz3.ab3@20797>   MOVEM.l (a7)+,d2/d3
00030160 <AmiBlitz3.ab3@20800>   MOVE.l (a0),d0
00030164 <AmiBlitz3.ab3@20801>   BNE 'more
00030166 <AmiBlitz3.ab3@20802>   MOVE.l (a7)+,a1
00030168 <AmiBlitz3.ab3@20803> RTS
0003016C <AmiBlitz3.ab3@20806> libisat:   Ds.l 1
00030172 <AmiBlitz3.ab3@20812>   MOVE.l libisat,-(A7)                                   
00030178 <AmiBlitz3.ab3@20813>   MOVE.l A2,libisat
0003017C <AmiBlitz3.ab3@20814>   LEA $6(A2,D1.L),A2
00030184 <AmiBlitz3.ab3@20819>   CMP.l #$3e19436c,$1c-8(a2)                               ;clear type
00030188 <AmiBlitz3.ab3@20820>   BEQ 'dowritevar
00030190 <AmiBlitz3.ab3@20821>   CMP.l #$3e18436f,$1c-8(a2)                               ;copy type
00030194 <AmiBlitz3.ab3@20822>   BEQ 'dowritevar
0003019C <AmiBlitz3.ab3@20823>   CMP.l #$3e175265,$1c(a2)
000301A0 <AmiBlitz3.ab3@20824>   BEQ 'dowritevar
000301A8 <AmiBlitz3.ab3@20825>   CMP.l #$3e165772,$1c(a2)
000301AC <AmiBlitz3.ab3@20826>   BNE 'nowritef
000301B0 <AmiBlitz3.ab3@20829>   MOVEM.l a0-a2/d2,-(a7)
000301B2 <AmiBlitz3.ab3@20830>   MOVEQ #0,d1
000301BC <AmiBlitz3.ab3@20831>   MOVE.l #0,typebase
000301C0 <AmiBlitz3.ab3@20832>   MOVE.l $a(a3),a0
000301C4 <AmiBlitz3.ab3@20833>   MOVE.l $4(a0),d0
000301CA <AmiBlitz3.ab3@20834>   CMP.l #8,d0
000301CE <AmiBlitz3.ab3@20835>   BLE 'notype
000301D2 <AmiBlitz3.ab3@20836>   BSR scantype
000301D8 <AmiBlitz3.ab3@20839>   MOVE.l #$3f3c0000,d1
000301DE <AmiBlitz3.ab3@20840>   MOVE.w a2offset,d1
000301E2 <AmiBlitz3.ab3@20841>   BSR writelong
000301E8 <AmiBlitz3.ab3@20842>   MOVE.l #$3f3c0000,d1
000301EC <AmiBlitz3.ab3@20843>   MOVE.l $a(a3),a0
000301F0 <AmiBlitz3.ab3@20844>   MOVE.w 8(a0),d1
000301F4 <AmiBlitz3.ab3@20845>   BSR writelong
000301FA <AmiBlitz3.ab3@20846>   MOVE.l #$3f3cab12,d1
000301FE <AmiBlitz3.ab3@20847>   BSR writelong
00030204 <AmiBlitz3.ab3@20848>   ADDQ.w #6,a2offset
00030208 <AmiBlitz3.ab3@20849>   MOVEM.l (a7)+,a0-a2/d2
0003020E <AmiBlitz3.ab3@20852>   TST.b fpu
00030212 <AmiBlitz3.ab3@20853>   BEQ 'nofpu2
0003021A <AmiBlitz3.ab3@20854>   CMP.l #$496e7400,$1a(a2)
0003021E <AmiBlitz3.ab3@20855>   BNE 'noint
00030220 <AmiBlitz3.ab3@20856>   MOVEQ #0,d1
00030226 <AmiBlitz3.ab3@20857>   SUBQ.l #8,destpointer                                    ;fpu int
0003022C <AmiBlitz3.ab3@20858>   CLR.w a2offset
00030230 <AmiBlitz3.ab3@20859>   CMP.b #2,d2
00030234 <AmiBlitz3.ab3@20860>   BGT 'noword
00030238 <AmiBlitz3.ab3@20861>   MOVE.w #$48c0,d1
0003023E <AmiBlitz3.ab3@20862>   OR.w regnumstore,d1
00030242 <AmiBlitz3.ab3@20863>   BSR writeword
00030246 <AmiBlitz3.ab3@20864>  BRA 'exit2
0003024A <AmiBlitz3.ab3@20867>    CMP.b #3,d2
0003024E <AmiBlitz3.ab3@20868>         BNE 'nolong
00030252 <AmiBlitz3.ab3@20869>  BRA 'exit2
00030256 <AmiBlitz3.ab3@20872>    CMP.b #4,d2
0003025A <AmiBlitz3.ab3@20873>         BNE 'noquick
0003025E <AmiBlitz3.ab3@20874>         MOVE.w #$e080,d1
00030264 <AmiBlitz3.ab3@20875>         OR.w regnumstore,d1
00030268 <AmiBlitz3.ab3@20876>         BSR writeword
0003026C <AmiBlitz3.ab3@20877>         MOVE.w #$e080,d1
00030272 <AmiBlitz3.ab3@20878>         OR.w regnumstore,d1
00030276 <AmiBlitz3.ab3@20879>         BSR writeword
0003027A <AmiBlitz3.ab3@20880>  BRA 'exit2
0003027C <AmiBlitz3.ab3@20883>         MOVEQ #0,d0
0003027E <AmiBlitz3.ab3@20884>         MOVEQ #0,d1
00030284 <AmiBlitz3.ab3@20885>         MOVE.w regnumstore,d0
00030286 <AmiBlitz3.ab3@20886>         ASL.l #7,d0
0003028C <AmiBlitz3.ab3@20887>         OR.l #$f23c4428,d1                                 ;fsub.s 0.5,fpx
0003028E <AmiBlitz3.ab3@20888>         OR.l d0,d1
00030294 <AmiBlitz3.ab3@20890>         MOVE.l #$3f000000,d1
00030296 <AmiBlitz3.ab3@20892>         MOVEQ #0,d0
00030298 <AmiBlitz3.ab3@20893>         MOVEQ #0,d1
0003029E <AmiBlitz3.ab3@20894>         MOVE.w regnumstore,d0
000302A0 <AmiBlitz3.ab3@20895>         ASL.l #7,d0
000302A2 <AmiBlitz3.ab3@20896>         MOVE.l d0,d1
000302A8 <AmiBlitz3.ab3@20897>         OR.l #$f2000003,d1                                 ;fintrz fpx
000302AA <AmiBlitz3.ab3@20898>         ASL.l #3,d0
000302AC <AmiBlitz3.ab3@20899>         OR.l d0,d1
000302B0 <AmiBlitz3.ab3@20900>         BSR writelong
000302B2 <AmiBlitz3.ab3@20901>         MOVEQ #0,d0
000302B8 <AmiBlitz3.ab3@20902>         MOVE.w regnumstore,d0
000302BA <AmiBlitz3.ab3@20903>         ASL.l #7,d0
000302C0 <AmiBlitz3.ab3@20904>         MOVE.l #$f2006000,d1                               ;fmove.l fp0,d0
000302C2 <AmiBlitz3.ab3@20905>         OR.l d0,d1
000302C4 <AmiBlitz3.ab3@20906>         ASL.l #1,d0
000302C6 <AmiBlitz3.ab3@20907>         ASL.l #8,d0
000302C8 <AmiBlitz3.ab3@20908>         OR.l d0,d1
000302CC <AmiBlitz3.ab3@20909>  BRA 'exit
000302D2 <AmiBlitz3.ab3@20912>   CMP.w #$3c01,24(a2)
000302D6 <AmiBlitz3.ab3@20913>   BNE 'noval
000302D8 <AmiBlitz3.ab3@20914>   MOVE.l a2,-(a7)
000302DC <AmiBlitz3.ab3@20915>   BSR.w makelsub3
000302DE <AmiBlitz3.ab3@20916>   MOVE.l (a7)+,a2
000302E2 <AmiBlitz3.ab3@20917>  BRA 'exit2
000302EA <AmiBlitz3.ab3@20934>   CMP.l #$41627300,$1a(a2)
000302EE <AmiBlitz3.ab3@20935>   BNE 'noabs
000302F0 <AmiBlitz3.ab3@20936>   MOVEQ #0,d1
000302F6 <AmiBlitz3.ab3@20937>   MOVE.w regnumstore,d1
000302F8 <AmiBlitz3.ab3@20938>   MOVE.w d1,d0
000302FA <AmiBlitz3.ab3@20939>   ASL.w #7,d1
000302FC <AmiBlitz3.ab3@20940>   ASL.w #8,d0
000302FE <AmiBlitz3.ab3@20941>   ASL.w #2,d0
00030300 <AmiBlitz3.ab3@20942>   OR.w d0,d1
00030306 <AmiBlitz3.ab3@20943>   SUBQ.l #8,destpointer                                    ;fpu abs
0003030A <AmiBlitz3.ab3@20944>   MOVEM.l d3/d1,-(a7)
0003030E <AmiBlitz3.ab3@20945>   MOVE.w #5,d3
00030310 <AmiBlitz3.ab3@20946>   EXG d2,d3
00030316 <AmiBlitz3.ab3@20947>   MOVE.w regnum,-(a7)
00030320 <AmiBlitz3.ab3@20948>   MOVE.w regnumstore,regnum
00030324 <AmiBlitz3.ab3@20949>   BSR writeconvertcode
0003032A <AmiBlitz3.ab3@20950>   MOVE.w (a7)+,regnum
0003032C <AmiBlitz3.ab3@20951>   EXG d2,d3
00030330 <AmiBlitz3.ab3@20952>   MOVEM.l (a7)+,d3/d1
00030336 <AmiBlitz3.ab3@20953>   OR.l #$f2000018,d1
0003033C <AmiBlitz3.ab3@20954>   CLR.w a2offset
00030340 <AmiBlitz3.ab3@20955>  BRA 'exit
00030344 <AmiBlitz3.ab3@20958>   CMP.b #5,d2
00030348 <AmiBlitz3.ab3@20959>   BNE 'nofpu2
0003034C <AmiBlitz3.ab3@20960>   MOVE.b 24(a2),d0
00030350 <AmiBlitz3.ab3@20961>   CMP.b #$60,d0                                            ;nolib $edxx
00030354 <AmiBlitz3.ab3@20962>   BNE 'nofpu
00030356 <AmiBlitz3.ab3@20963>   MOVEQ #0,d1
0003035C <AmiBlitz3.ab3@20964>   MOVE.w regnumstore,d1
0003035E <AmiBlitz3.ab3@20965>   MOVE.w d1,d0
00030360 <AmiBlitz3.ab3@20966>   ASL.w #7,d1
00030362 <AmiBlitz3.ab3@20967>   ASL.w #8,d0
00030364 <AmiBlitz3.ab3@20968>   ASL.w #2,d0
00030366 <AmiBlitz3.ab3@20969>   OR.w d0,d1
0003036A <AmiBlitz3.ab3@20970>   MOVE.b 25(a2),d0
0003036E <AmiBlitz3.ab3@20971>   CMP.b #5,d0
00030372 <AmiBlitz3.ab3@20972>   BNE 'nocos
00030378 <AmiBlitz3.ab3@20973>   OR.l #$f200001d,d1                                       ;fpu cos
0003037C <AmiBlitz3.ab3@20974>  BRA 'exit
00030380 <AmiBlitz3.ab3@20977>   CMP.b #$c,d0
00030384 <AmiBlitz3.ab3@20978>   BNE 'nosqr
0003038A <AmiBlitz3.ab3@20979>   OR.l #$f2000004,d1                                       ;fpu sqr
0003038E <AmiBlitz3.ab3@20980>  BRA 'exit
00030392 <AmiBlitz3.ab3@20983>   CMP.b #$d,d0
00030396 <AmiBlitz3.ab3@20984>   BNE 'notan
0003039C <AmiBlitz3.ab3@20985>   OR.l #$f200000f,d1                                       ;fpu tan
000303A0 <AmiBlitz3.ab3@20986>  BRA 'exit
000303A4 <AmiBlitz3.ab3@20989>   CMP.b #$a,d0
000303A8 <AmiBlitz3.ab3@20990>   BNE 'nosin
000303AE <AmiBlitz3.ab3@20991>   OR.l #$f200000e,d1                                       ;fpu sin
000303B2 <AmiBlitz3.ab3@20992>  BRA 'exit
000303B6 <AmiBlitz3.ab3@20995>   CMP.b #$3,d0
000303BA <AmiBlitz3.ab3@20996>   BNE 'noasin
000303C0 <AmiBlitz3.ab3@20997>   OR.l #$f200000c,d1                                       ;fpu asin
000303C4 <AmiBlitz3.ab3@20998>  BRA 'exit
000303C8 <AmiBlitz3.ab3@21001>   CMP.b #$2,d0
000303CC <AmiBlitz3.ab3@21002>   BNE 'noacos
000303D2 <AmiBlitz3.ab3@21003>   OR.l #$f200001c,d1                                       ;fpu acos
000303D6 <AmiBlitz3.ab3@21004>  BRA 'exit
000303DA <AmiBlitz3.ab3@21007>   CMP.b #$4,d0
000303DE <AmiBlitz3.ab3@21008>   BNE 'noatan
000303E4 <AmiBlitz3.ab3@21009>   OR.l #$f200000a,d1                                       ;fpu atan
000303E8 <AmiBlitz3.ab3@21010>  BRA 'exit
000303EC <AmiBlitz3.ab3@21013>   CMP.b #$e,d0
000303F0 <AmiBlitz3.ab3@21014>   BNE 'nohtan
000303F6 <AmiBlitz3.ab3@21015>   OR.l #$f2000009,d1                                       ;fpu htan
000303FA <AmiBlitz3.ab3@21016>  BRA 'exit
000303FE <AmiBlitz3.ab3@21019>   CMP.b #$6,d0
00030402 <AmiBlitz3.ab3@21020>   BNE 'nohcos
00030408 <AmiBlitz3.ab3@21021>   OR.l #$f2000019,d1                                       ;fpu hcos
0003040C <AmiBlitz3.ab3@21022>  BRA 'exit
00030410 <AmiBlitz3.ab3@21025>   CMP.b #$b,d0
00030414 <AmiBlitz3.ab3@21026>   BNE 'nohsin
0003041A <AmiBlitz3.ab3@21027>   OR.l #$f2000002,d1                                       ;fpu hsin
0003041E <AmiBlitz3.ab3@21028>  BRA 'exit
00030422 <AmiBlitz3.ab3@21031>   CMP.b #$9,d0
00030426 <AmiBlitz3.ab3@21032>   BNE 'nolog
0003042C <AmiBlitz3.ab3@21033>   OR.l #$f2000014,d1                                       ;fpu log
00030430 <AmiBlitz3.ab3@21034>  BRA 'exit
00030434 <AmiBlitz3.ab3@21037>   CMP.b #$8,d0
00030438 <AmiBlitz3.ab3@21038>   BNE 'nolog10
0003043E <AmiBlitz3.ab3@21039>   OR.l #$f2000015,d1                                       ;fpu log10
00030442 <AmiBlitz3.ab3@21040>  BRA 'exit
00030446 <AmiBlitz3.ab3@21043>   CMP.b #$7,d0
0003044A <AmiBlitz3.ab3@21044>   BNE 'noexp
00030450 <AmiBlitz3.ab3@21045>   OR.l #$f2000010,d1                                       ;fpu exp
00030454 <AmiBlitz3.ab3@21046>  BRA 'exit
0003045A <AmiBlitz3.ab3@21049>   LEA fpuerr,a0
0003045C <AmiBlitz3.ab3@21050>   MOVE.l a0,-(a7)
00030462 <AmiBlitz3.ab3@21051>  JMP handle_compileerror
00030466 <AmiBlitz3.ab3@21055>   CMP.b #$3c,d0
0003046A <AmiBlitz3.ab3@21056>   BNE 'nofpu2
0003046C <AmiBlitz3.ab3@21057>   MOVEQ #0,d1
00030472 <AmiBlitz3.ab3@21058>       MOVE.w regnumstore,d1
00030474 <AmiBlitz3.ab3@21059>       MOVE.w d1,d0
00030476 <AmiBlitz3.ab3@21060>       ASL.w #7,d1
00030478 <AmiBlitz3.ab3@21061>       ASL.w #8,d0
0003047A <AmiBlitz3.ab3@21062>       ASL.w #2,d0
0003047C <AmiBlitz3.ab3@21063>       OR.w d0,d1
00030482 <AmiBlitz3.ab3@21064>       CMP.b #$03,25(a2)
00030486 <AmiBlitz3.ab3@21065>       BNE 'nosgn
0003048C <AmiBlitz3.ab3@21068>       SUBQ.l #8,destpointer                                ;fpu sgn
00030492 <AmiBlitz3.ab3@21069>         OR.l #$f200003a,d1
00030496 <AmiBlitz3.ab3@21070>         BSR writelong
0003049C <AmiBlitz3.ab3@21071>         CLR.w a2offset
000304A2 <AmiBlitz3.ab3@21072>          MOVE.l #$F28E0006,d1
000304A6 <AmiBlitz3.ab3@21073>          BSR writelong
000304AC <AmiBlitz3.ab3@21074>   MOVE.l #$7000600a,d1
000304B0 <AmiBlitz3.ab3@21075>   BSR writelong
000304B6 <AmiBlitz3.ab3@21076>   MOVE.l #$70014840,d1
000304BA <AmiBlitz3.ab3@21077>   BSR writelong
000304C0 <AmiBlitz3.ab3@21078>   MOVE.l #$F292,d1
000304C4 <AmiBlitz3.ab3@21079>   BSR writeword
000304CA <AmiBlitz3.ab3@21080>   MOVE.l #$000470FF,d1
000304CE <AmiBlitz3.ab3@21081>  BRA 'exit
000304D6 <AmiBlitz3.ab3@21084>   CMP.l #"Frac",$1a(a2)
000304DA <AmiBlitz3.ab3@21085>   BNE 'nofrac
000304E0 <AmiBlitz3.ab3@21086>  JMP notwork
000304E4 <AmiBlitz3.ab3@21127>  BRA 'exit
000304E8 <AmiBlitz3.ab3@21132>   BSR.w makelsub3                                          ;write lib code
000304EE <AmiBlitz3.ab3@21133>   MOVE.l (A7)+,libisat
000304F0 <AmiBlitz3.ab3@21134>  RTS
000304F4 <AmiBlitz3.ab3@21138>   BSR writelong
000304FA <AmiBlitz3.ab3@21141>   MOVE.l (A7)+,libisat
000304FC <AmiBlitz3.ab3@21142> RTS
00030500 <AmiBlitz3.ab3@21146>   BSR.w fetchregs
00030506 <AmiBlitz3.ab3@21148>   TST.b debugmode
0003050A <AmiBlitz3.ab3@21149>    BEQ.w 'norerr
0003050C <AmiBlitz3.ab3@21151>   MOVE.l (A2),D1
00030510 <AmiBlitz3.ab3@21152>   OR.l $8(A2),D1
00030514 <AmiBlitz3.ab3@21153>   BCLR #$0,D1
00030516 <AmiBlitz3.ab3@21154>   TST.l D1
0003051A <AmiBlitz3.ab3@21155>    BEQ.w 'norerr
0003051C <AmiBlitz3.ab3@21157>   MOVE.l (A2)+,D1
00030520 <AmiBlitz3.ab3@21158>   BTST #$0,D1
00030524 <AmiBlitz3.ab3@21159>    BEQ.w 'skiptt
0003052A <AmiBlitz3.ab3@21160>   TST.w blitzmode
0003052E <AmiBlitz3.ab3@21161>    BPL.w blitzerr
00030534 <AmiBlitz3.ab3@21162>   TST.b debugmode
00030538 <AmiBlitz3.ab3@21163>    BEQ.w 'skiptt2
0003053A <AmiBlitz3.ab3@21164>   MOVE.l D1,-(A7)
0003053E <AmiBlitz3.ab3@21165>   MOVE.w #$C311,D1   ; was #inblitz,
00030542 <AmiBlitz3.ab3@21166>    BSR.w makebtst
00030544 <AmiBlitz3.ab3@21167>   MOVE.l (A7)+,D1
00030548 <AmiBlitz3.ab3@21170>   BCLR #$0,D1
0003054A <AmiBlitz3.ab3@21173>   TST.l D1
0003054E <AmiBlitz3.ab3@21175>    BSR.w doajsr
00030550 <AmiBlitz3.ab3@21176>   MOVE.l (A2)+,D1
00030554 <AmiBlitz3.ab3@21177>    BSR.w doajsrrout
00030556 <AmiBlitz3.ab3@21178>   MOVE.l (A2)+,D1
0003055A <AmiBlitz3.ab3@21179>    BSR.w doajsr
0003055E <AmiBlitz3.ab3@21180>  BRA.w 'more
00030564 <AmiBlitz3.ab3@21183>   BTST #$0,$3(A2)
00030568 <AmiBlitz3.ab3@21184>    BEQ.w 'penis
0003056C <AmiBlitz3.ab3@21188>   MOVE.w blitzmode(PC),D1
00030570 <AmiBlitz3.ab3@21189>    BPL.w blitzerr
00030574 <AmiBlitz3.ab3@21192>   MOVE.l $4(A2),D1
00030578 <AmiBlitz3.ab3@21193>    BSR.w doajsrrout
0003057E <AmiBlitz3.ab3@21196>   MOVEA.l libisat,A2
00030580 <AmiBlitz3.ab3@21197> RTS
00030584 <AmiBlitz3.ab3@21204>   BTST #$0,D1
00030588 <AmiBlitz3.ab3@21205>    BEQ.w 'doajsr
0003058E <AmiBlitz3.ab3@21206>   TST.w blitzmode
00030592 <AmiBlitz3.ab3@21207>    BMI.w amigaerr
00030598 <AmiBlitz3.ab3@21208>   TST.b debugmode
0003059C <AmiBlitz3.ab3@21209>    BEQ.w 'doajsr2      
0003059E <AmiBlitz3.ab3@21210>   MOVE.l D1,-(A7)
000305A2 <AmiBlitz3.ab3@21211>   MOVE.w #$C312,D1     ; #inamiga,
000305A6 <AmiBlitz3.ab3@21212>    BSR.w makebtst
000305A8 <AmiBlitz3.ab3@21213>   MOVE.l (A7)+,D1
000305AC <AmiBlitz3.ab3@21216>   BCLR #$0,D1
000305AE <AmiBlitz3.ab3@21219>   TST.l D1
000305B2 <AmiBlitz3.ab3@21222>    BEQ.w 'skip
000305B4 <AmiBlitz3.ab3@21223>   MOVE.l A1,-(A7)
000305B8 <AmiBlitz3.ab3@21224>    BSR.w doajsr2
000305BA <AmiBlitz3.ab3@21225>   MOVEA.l (A7)+,A1
000305BC <AmiBlitz3.ab3@21228> RTS
000305C2 <AmiBlitz3.ab3@21232>   MOVEA.l libisat,A0
000305C8 <AmiBlitz3.ab3@21233>   TST.w cfetchmode
000305CC <AmiBlitz3.ab3@21234>    BEQ.w 'nfetch
000305CE <AmiBlitz3.ab3@21235>   ADD.l A0,D1
000305D0 <AmiBlitz3.ab3@21236>   MOVE.l D1,-(A7)
000305D4 <AmiBlitz3.ab3@21237>   MOVE.w #$4EB9,D1
000305D8 <AmiBlitz3.ab3@21238>    BSR.w writeword
000305DA <AmiBlitz3.ab3@21239>   MOVE.l (A7)+,D1
000305DE <AmiBlitz3.ab3@21240>  BRA.w writelong
000305E2 <AmiBlitz3.ab3@21247>   LEA $0(A0,D1.L),A1
000305E8 <AmiBlitz3.ab3@21248>   CLR.w inline
000305EC <AmiBlitz3.ab3@21251>   CMPI.b #$A0,(A1)+
000305F0 <AmiBlitz3.ab3@21252>    BNE.w 'ugly
000305F2 <AmiBlitz3.ab3@21253>   TST.b (A1)+
000305F6 <AmiBlitz3.ab3@21254>    BEQ.w 'iszero
000305FC <AmiBlitz3.ab3@21255>   CMPI.b #$1,-$1(A1)
00030600 <AmiBlitz3.ab3@21256>    BEQ.w 'isone
00030606 <AmiBlitz3.ab3@21260>   MOVE.w (A1)+,inline
00030608 <AmiBlitz3.ab3@21261>   ADDQ.l #4,D1
0003060C <AmiBlitz3.ab3@21262>  BRA.w 'cute
00030612 <AmiBlitz3.ab3@21267>   TST.w blitzmode
00030616 <AmiBlitz3.ab3@21268>    BPL.w 'inamiga
0003061C <AmiBlitz3.ab3@21270>   TST.b debugmode
00030620 <AmiBlitz3.ab3@21271>    BEQ.w 'nobrerr
00030624 <AmiBlitz3.ab3@21272>   MOVE.w #$C311,D1       ; was #inblitz,
00030628 <AmiBlitz3.ab3@21273>    BSR.w makebtst
0003062A <AmiBlitz3.ab3@21276>   MOVE.l (A1)+,D1
0003062E <AmiBlitz3.ab3@21277>   LEA $0(A0,D1.L),A1
00030632 <AmiBlitz3.ab3@21278>  BRA.w 'cute
00030638 <AmiBlitz3.ab3@21281>   TST.b debugmode
0003063C <AmiBlitz3.ab3@21282>    BEQ.w 'noarerr        
0003063E <AmiBlitz3.ab3@21283>   MOVE.l D1,-(A7)
00030642 <AmiBlitz3.ab3@21284>   MOVE.w #$C312,D1       ; was #inamiga,
00030646 <AmiBlitz3.ab3@21285>    BSR.w makebtst
00030648 <AmiBlitz3.ab3@21286>   MOVE.l (A7)+,D1
0003064A <AmiBlitz3.ab3@21289>   ADDQ.w #4,A1
0003064C <AmiBlitz3.ab3@21290>   ADDQ.l #6,D1
00030650 <AmiBlitz3.ab3@21291>  BRA.w 'cute
00030656 <AmiBlitz3.ab3@21294>   TST.w inline
0003065A <AmiBlitz3.ab3@21295>    BEQ.w 'notin
0003065C <AmiBlitz3.ab3@21297>   SUBQ.w #1,A1
0003065E <AmiBlitz3.ab3@21298>   MOVEA.l A1,A0
00030662 <AmiBlitz3.ab3@21299>   ADDA.w inline(PC),A1
00030666 <AmiBlitz3.ab3@21300>  BRA.w pokecode2
0003066A <AmiBlitz3.ab3@21303>   MOVEM.l a0/D1,-(A7)          ; was  d1,-(a7)
00030670 <AmiBlitz3.ab3@21305>   TST.w debugversion
00030674 <AmiBlitz3.ab3@21306>   BEQ 'l11
0003067C <AmiBlitz3.ab3@21307>   BTST #$7,link_debuginfo
00030680 <AmiBlitz3.ab3@21308>   BEQ.w 'l11
00030686 <AmiBlitz3.ab3@21309>   MOVE.l lastinstruction,d1
0003068A <AmiBlitz3.ab3@21310>   BEQ 'l11
00030690 <AmiBlitz3.ab3@21311>   CLR.l lastinstruction
00030696 <AmiBlitz3.ab3@21312>   CMP.l #$e000,d1
0003069A <AmiBlitz3.ab3@21313>   BGE 'ln99
000306A0 <AmiBlitz3.ab3@21314>   LEA notf,a0
000306A6 <AmiBlitz3.ab3@21315>   CMP.l #$c601,d1
000306AA <AmiBlitz3.ab3@21316>   BNE 'ln1
000306B0 <AmiBlitz3.ab3@21317>   LEA strcpy,a0
000306B4 <AmiBlitz3.ab3@21318>  BRA 'ln3
000306BA <AmiBlitz3.ab3@21321>   CMP.l #$c700,d1
000306BE <AmiBlitz3.ab3@21322>   BNE 'ln2
000306C4 <AmiBlitz3.ab3@21323>   LEA strvar,a0
000306C8 <AmiBlitz3.ab3@21324>  BRA 'ln3
000306CE <AmiBlitz3.ab3@21327>   CMP.l #$ce00,d1
000306D2 <AmiBlitz3.ab3@21328>   BNE 'ln4
000306D8 <AmiBlitz3.ab3@21329>   LEA strcmp,a0
000306DC <AmiBlitz3.ab3@21330>  BRA 'ln3
000306E2 <AmiBlitz3.ab3@21333>   CMP.l #$ca00,d1
000306E6 <AmiBlitz3.ab3@21334>   BNE 'ln5
000306EC <AmiBlitz3.ab3@21335>   LEA qmul,a0
000306F0 <AmiBlitz3.ab3@21336>  BRA 'ln3
000306F6 <AmiBlitz3.ab3@21339>   CMP.l #$d000,d1
000306FA <AmiBlitz3.ab3@21340>      BNE 'ln6
00030700 <AmiBlitz3.ab3@21341>      LEA _MaxLen,a0
00030704 <AmiBlitz3.ab3@21342>  BRA 'ln3
0003070A <AmiBlitz3.ab3@21345>   CMP.l #$cb00,d1
0003070E <AmiBlitz3.ab3@21346>   BNE 'ln3
00030714 <AmiBlitz3.ab3@21347>   LEA qdiv,a0
00030718 <AmiBlitz3.ab3@21348>  BRA 'ln3
0003071A <AmiBlitz3.ab3@21351>   MOVE.l d1,a0
0003071E <AmiBlitz3.ab3@21352>   LEA $8(a0),a0
00030722 <AmiBlitz3.ab3@21355>   CMP.w #$ffff,(a0)+
00030726 <AmiBlitz3.ab3@21356>   BNE 'l1
0003072A <AmiBlitz3.ab3@21357>   LEA 6(a0),a0
0003072E <AmiBlitz3.ab3@21360>   MOVEM.l a1/a2/d7/d2,-(a7)
00030730 <AmiBlitz3.ab3@21361>   MOVEQ #0,d2
00030736 <AmiBlitz3.ab3@21362>   LEA ptr_parameterstore,a1
00030738 <AmiBlitz3.ab3@21365>   ADDQ.l #1,d2
0003073A <AmiBlitz3.ab3@21366>   MOVE.b (a0)+,d0
0003073E <AmiBlitz3.ab3@21367> 
00030742 <AmiBlitz3.ab3@21368>   BNE 'nodollar
00030746 <AmiBlitz3.ab3@21369>   MOVE.b #"S",d0
0003074A <AmiBlitz3.ab3@21372>   CMP.b #"?",d0
0003074E <AmiBlitz3.ab3@21373>   BEQ 'nolabelwrite
00030750 <AmiBlitz3.ab3@21374>   MOVE.b d0,(a1)+
00030754 <AmiBlitz3.ab3@21375>   BNE 'l2
0003075A <AmiBlitz3.ab3@21376>   MOVE.w #"__",-1(a1)
0003075C <AmiBlitz3.ab3@21377>   ADDQ.l #2,d2
00030760 <AmiBlitz3.ab3@21378>   CLR.b 1(a1)
00030766 <AmiBlitz3.ab3@21379>   JSR findlabel2
0003076A <AmiBlitz3.ab3@21380>   BEQ 'l3
00030770 <AmiBlitz3.ab3@21381>   JSR addlabelhash
00030774 <AmiBlitz3.ab3@21384>   CLR.l 4(a2)
00030778 <AmiBlitz3.ab3@21385>   MOVE.l $14(a7),a0
0003077C <AmiBlitz3.ab3@21386>   MOVE.l $10(a7),d1
00030780 <AmiBlitz3.ab3@21387>   SUB.l $12(a0),d1
00030784 <AmiBlitz3.ab3@21388>   ADD.l $28(a0),d1
00030788 <AmiBlitz3.ab3@21389>   MOVE.l d1,8(a2)
0003078C <AmiBlitz3.ab3@21392>   MOVEM.l (a7)+,a1/a2/d7/d2
00030792 <AmiBlitz3.ab3@21395>   TST.b typecheck
00030796 <AmiBlitz3.ab3@21396>   BEQ 'p1
0003079C <AmiBlitz3.ab3@21397>   MOVE.l lasttoken,d1
000307A2 <AmiBlitz3.ab3@21398>   CMP.l #$da01,d1                                          ;poke
000307A6 <AmiBlitz3.ab3@21399>   BEQ 'lp1
000307AC <AmiBlitz3.ab3@21400>   CMP.l #$da02,d1                                          ;peek
000307B0 <AmiBlitz3.ab3@21401>   BNE 'p1
000307B6 <AmiBlitz3.ab3@21404>   TST.b peekaddrsize
000307BA <AmiBlitz3.ab3@21405>   BEQ 'p1
000307C2 <AmiBlitz3.ab3@21406>   CMP.b #3,peekaddrsize
000307C6 <AmiBlitz3.ab3@21407>   BNE errormsg_onlylong
000307CC <AmiBlitz3.ab3@21408>   CLR.b peekaddrsize
000307D2 <AmiBlitz3.ab3@21416>    TST.b fpu
000307D6 <AmiBlitz3.ab3@21417>   BNE 'optf
000307DC <AmiBlitz3.ab3@21418>   TST.b fast
000307E0 <AmiBlitz3.ab3@21419>   BEQ 'l10
000307E8 <AmiBlitz3.ab3@21425>   CMP.l #"Poke",20(a2)                                     ;poke
000307EC <AmiBlitz3.ab3@21426>   BNE 'peekopt
000307F0 <AmiBlitz3.ab3@21427>   TST.b 24(a2)
000307F4 <AmiBlitz3.ab3@21428>   BNE 'peekopt
000307F8 <AmiBlitz3.ab3@21429>   CMP.b #3,d2
000307FC <AmiBlitz3.ab3@21430>   BNE 'lw1
00030802 <AmiBlitz3.ab3@21433>   MOVE.l #$21821990,d1
00030806 <AmiBlitz3.ab3@21434>  BRA.s 'exitjsr
0003080A <AmiBlitz3.ab3@21437>   CMP.b #2,d2
0003080E <AmiBlitz3.ab3@21438>   BNE 'lb1
00030814 <AmiBlitz3.ab3@21439>   MOVE.l #$31821990,d1
00030818 <AmiBlitz3.ab3@21440>  BRA.s 'exitjsr
0003081C <AmiBlitz3.ab3@21443>   CMP.b #1,d2
00030820 <AmiBlitz3.ab3@21444>   BNE 'lp3
00030826 <AmiBlitz3.ab3@21445>   MOVE.l #$11821990,d1
0003082A <AmiBlitz3.ab3@21446>  BRA.s 'exitjsr
0003082E <AmiBlitz3.ab3@21449>   CMP.b #5,d2
00030832 <AmiBlitz3.ab3@21450>     BNE 'l10
00030838 <AmiBlitz3.ab3@21451>     TST.b fpu
0003083C <AmiBlitz3.ab3@21452>     BEQ 'll1
00030842 <AmiBlitz3.ab3@21453>      MOVE.l destpointer,a4
0003084A <AmiBlitz3.ab3@21454>     CMP.l #$f22d4500,-6(a4)
0003084E <AmiBlitz3.ab3@21455>     BNE 'noglob
00030854 <AmiBlitz3.ab3@21456>     TST.b doublepeek
00030858 <AmiBlitz3.ab3@21457>     BNE 'noglob
0003085E <AmiBlitz3.ab3@21458>     MOVE.w -2(a4),-4(a4)
00030864 <AmiBlitz3.ab3@21459>     MOVE.w #$21ad,-6(a4)
0003086A <AmiBlitz3.ab3@21460>     MOVE.w #$1990,-2(a4)
00030872 <AmiBlitz3.ab3@21461>     MOVE.w #9,peeksize
00030874 <AmiBlitz3.ab3@21462>     ADDQ #8,a7
00030876 <AmiBlitz3.ab3@21463>  RTS
0003087E <AmiBlitz3.ab3@21466>     CMP.l #$f22c4500,-6(a4)
00030882 <AmiBlitz3.ab3@21467>     BNE 'nolocal
00030888 <AmiBlitz3.ab3@21468>     MOVE.w -2(a4),-4(a4)
0003088E <AmiBlitz3.ab3@21469>     TST.b doublepeek                                       ;dont move longfix on double floats
00030892 <AmiBlitz3.ab3@21470>     BNE 'nolocal
00030898 <AmiBlitz3.ab3@21471>     MOVE.w #$21ac,-6(a4)
0003089E <AmiBlitz3.ab3@21472>     MOVE.w #$1990,-2(a4)
000308A6 <AmiBlitz3.ab3@21473>     MOVE.w #9,peeksize
000308A8 <AmiBlitz3.ab3@21474>     ADDQ #8,a7
000308AA <AmiBlitz3.ab3@21475>  RTS
000308AE <AmiBlitz3.ab3@21478>     MOVE.w #$f230,d1
000308B2 <AmiBlitz3.ab3@21479>     BSR writeword
000308B8 <AmiBlitz3.ab3@21480>   MOVE.l #$65001990,d1
000308BE <AmiBlitz3.ab3@21481>   TST.b doublepeek
000308C2 <AmiBlitz3.ab3@21482>   BEQ 'exitjsr
000308C8 <AmiBlitz3.ab3@21483>   OR.l   #$10000000,d1
000308CA <AmiBlitz3.ab3@21486>   ADDQ #8,a7
000308D2 <AmiBlitz3.ab3@21487>   MOVE.w #9,peeksize
000308D6 <AmiBlitz3.ab3@21488>  BRA writelong
000308DE <AmiBlitz3.ab3@21491>   CMP.l #"Peek",20(a2)
000308E2 <AmiBlitz3.ab3@21492>   BNE 'l10
000308E6 <AmiBlitz3.ab3@21493>   TST.b 24(a2)
000308EA <AmiBlitz3.ab3@21494>   BNE 'l10
000308F2 <AmiBlitz3.ab3@21495>   CMP.w #7,peeksize
000308F6 <AmiBlitz3.ab3@21496>   BEQ 'l10
000308FE <AmiBlitz3.ab3@21497>    CMP.w #3,peeksize
00030902 <AmiBlitz3.ab3@21498>    BNE.s 'lw1a
00030908 <AmiBlitz3.ab3@21501>   MOVE.l #$20301990,d1
0003090C <AmiBlitz3.ab3@21502>  BRA 'exitjsr
00030914 <AmiBlitz3.ab3@21505>   CMP.w #2,peeksize
00030918 <AmiBlitz3.ab3@21506>    BNE.s 'lb1a
0003091E <AmiBlitz3.ab3@21507>    MOVE.l #$30301990,d1
00030922 <AmiBlitz3.ab3@21508>  BRA 'exitjsr
0003092A <AmiBlitz3.ab3@21511>   CMP.w #1,peeksize
0003092E <AmiBlitz3.ab3@21512>    BNE.s 'lf1
00030934 <AmiBlitz3.ab3@21513>    MOVE.l #$10301990,d1
00030938 <AmiBlitz3.ab3@21514>  BRA 'exitjsr
00030940 <AmiBlitz3.ab3@21517>   CMP.w #5,peeksize
00030944 <AmiBlitz3.ab3@21518>    BNE 'l10
0003094A <AmiBlitz3.ab3@21519>    TST.b fpu
0003094E <AmiBlitz3.ab3@21520>    BEQ 'll1a
00030952 <AmiBlitz3.ab3@21521>    MOVE.w #$f230,d1
00030956 <AmiBlitz3.ab3@21522>    BSR writeword
00030958 <AmiBlitz3.ab3@21523>    MOVEQ #0,d1
0003095E <AmiBlitz3.ab3@21524>    MOVE.w tempregnum,d1
00030960 <AmiBlitz3.ab3@21525>    ASL.l #7,d1
00030962 <AmiBlitz3.ab3@21526>    ASL.l #8,d1
00030964 <AmiBlitz3.ab3@21527>    ASL.l #8,d1
0003096A <AmiBlitz3.ab3@21528>    ADD.l #$44001990,d1
00030970 <AmiBlitz3.ab3@21529>     TST.b doublepeek
00030974 <AmiBlitz3.ab3@21530>     BEQ 'exitjsr2
0003097A <AmiBlitz3.ab3@21531>     OR.l   #$10000000,d1
0003097E <AmiBlitz3.ab3@21534>  BRA 'exitjsr
00030982 <AmiBlitz3.ab3@21538>   MOVE.w #$4EB9,D1
00030986 <AmiBlitz3.ab3@21539>    BSR.w writeword                                         ;writesysjsr
0003098A <AmiBlitz3.ab3@21540>   MOVEM.l (A7)+,a0/D1        ; was  (a7)+,d1
00030990 <AmiBlitz3.ab3@21541>    JSR addoff
00030994 <AmiBlitz3.ab3@21542>   SUB.l $12(A0),D1
00030998 <AmiBlitz3.ab3@21543>   ADD.l $28(A0),D1
0003099C <AmiBlitz3.ab3@21544> BRA.w writelong
0003099E <AmiBlitz3.ab3@21549>   MOVE.w D1,-(A7)
000309A2 <AmiBlitz3.ab3@21550>   MOVE.w tstmode(PC),D1
000309A6 <AmiBlitz3.ab3@21551>    BSR.w writeword
000309AA <AmiBlitz3.ab3@21552>    BSR.w getbbase
000309AE <AmiBlitz3.ab3@21553>    BSR.w writeword
000309B0 <AmiBlitz3.ab3@21554>   MOVE.w (A7)+,D1
000309B4 <AmiBlitz3.ab3@21555>   MOVEM.l D0/D3-D7/A0-A2/A4,-(A7)
000309B8 <AmiBlitz3.ab3@21556>    BSR.w Atokejsr
000309BC <AmiBlitz3.ab3@21557>   MOVEM.l (A7)+,D0/D3-D7/A0-A2/A4
000309BE <AmiBlitz3.ab3@21558> RTS
000309C2 <AmiBlitz3.ab3@21566>   MOVE.w blitzoff(PC),D1
000309C6 <AmiBlitz3.ab3@21567>   CMP.w #-$1,D1
000309CA <AmiBlitz3.ab3@21568>    BNE.w 'done
000309D0 <AmiBlitz3.ab3@21569>   ADDQ.w #1,globalvarpointer
000309D8 <AmiBlitz3.ab3@21570>   BCLR #$0,globalvarpointer+1
000309DE <AmiBlitz3.ab3@21571>   MOVE.w globalvarpointer,D1
000309E4 <AmiBlitz3.ab3@21572>   MOVE.w D1,blitzoff
000309EA <AmiBlitz3.ab3@21573>   ADDQ.w #2,globalvarpointer
000309EC <AmiBlitz3.ab3@21576> RTS
000309F0 <AmiBlitz3.ab3@21580> tstmode:    Dc.b $4A,$6D,$00,$00                           ;TST.W $0000(A5)
000309F2 <AmiBlitz3.ab3@21583> inline:     Ds.w 1
000309F4 <AmiBlitz3.ab3@21584> blitzoff:   Dc.w $FFFF                                   ;-1 org source
000309F6 <AmiBlitz3.ab3@21585> blitzmode:  Ds.w 1                                       ;+=amiga, -=blitz
000309F8 <AmiBlitz3.ab3@21589>   MOVE.w (A2)+,D1
000309FC <AmiBlitz3.ab3@21590>    BEQ.w 'done
000309FE <AmiBlitz3.ab3@21591>   MOVE.w (A2)+,D2
00030A02 <AmiBlitz3.ab3@21592>    BSR.w toreg
00030A06 <AmiBlitz3.ab3@21593>  BRA.w fetchregs
00030A08 <AmiBlitz3.ab3@21596> RTS
00030A0C <AmiBlitz3.ab3@21602>   CMP.w #-$100,D2
00030A10 <AmiBlitz3.ab3@21603>    BCC.w 'yeah
00030A14 <AmiBlitz3.ab3@21605>   BCLR #$F,D2
00030A18 <AmiBlitz3.ab3@21606>    BEQ.w 'nobm
00030A1E <AmiBlitz3.ab3@21608>   TST.w blitzmode
00030A22 <AmiBlitz3.ab3@21609>    BMI.w 'yeah
00030A24 <AmiBlitz3.ab3@21610>  RTS
00030A28 <AmiBlitz3.ab3@21613>   BCLR #$E,D2
00030A2C <AmiBlitz3.ab3@21614>    BEQ.w 'yeah
00030A32 <AmiBlitz3.ab3@21616>   TST.w blitzmode
00030A36 <AmiBlitz3.ab3@21617>    BPL.w 'yeah
00030A38 <AmiBlitz3.ab3@21618>  RTS
00030A3E <AmiBlitz3.ab3@21621>   JSR uselib
00030A40 <AmiBlitz3.ab3@21622>   TST.b D2
00030A44 <AmiBlitz3.ab3@21623>    BEQ.w 'norm
00030A48 <AmiBlitz3.ab3@21624>   CMP.b #$4,D2
00030A4C <AmiBlitz3.ab3@21625>    BNE.w 'suv
00030A50 <AmiBlitz3.ab3@21626>   MOVE.w #$0004,-(A7)
00030A56 <AmiBlitz3.ab3@21627>   MOVE.l #$FFFFFFFA,-(A7)                                  ;#-6,-(a7) org source
00030A5A <AmiBlitz3.ab3@21628>  BRA.w 'sendmd
00030A5E <AmiBlitz3.ab3@21631>   CMP.b #$3,D2
00030A62 <AmiBlitz3.ab3@21632>    BNE.w 'notnmax
00030A64 <AmiBlitz3.ab3@21633>   CLR.w -(A7)
00030A6A <AmiBlitz3.ab3@21634>   MOVE.l #$FFFFFFFC,-(A7)                                  ;#-4,-(a7) org source
00030A6C <AmiBlitz3.ab3@21640>   LSR.w #8,D2
00030A70 <AmiBlitz3.ab3@21641>   MOVE.w #$303C,D1                                         ;move.w #x,dn
00030A74 <AmiBlitz3.ab3@21642>   BTST #$7,D2
00030A78 <AmiBlitz3.ab3@21643>    BEQ.w 'skipad
00030A7C <AmiBlitz3.ab3@21644>   MOVE.w #$307C,D1                                         ;move.w #x,an
00030A80 <AmiBlitz3.ab3@21645>   CMP.w #$16,D2
00030A84 <AmiBlitz3.ab3@21646>    BNE.w 'skipad
00030A8C <AmiBlitz3.ab3@21647>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
00030A90 <AmiBlitz3.ab3@21650>   ANDI.w #$7,D2
00030A92 <AmiBlitz3.ab3@21651>   LSL.w #8,D2
00030A94 <AmiBlitz3.ab3@21652>   LSL.w #1,D2
00030A96 <AmiBlitz3.ab3@21653>   OR.w D2,D1
00030A9A <AmiBlitz3.ab3@21654>    BSR.w writeword
00030A9E <AmiBlitz3.ab3@21655>   MOVE.l $12(A1),D1
00030AA0 <AmiBlitz3.ab3@21656>   ADD.l (A7)+,D1
00030AA4 <AmiBlitz3.ab3@21657>   MOVE.w $0(A1,D1.L),D1
00030AA6 <AmiBlitz3.ab3@21658>   ADD.w (A7)+,D1
00030AAA <AmiBlitz3.ab3@21659>  BRA.w writeword
00030AAC <AmiBlitz3.ab3@21662>   MOVE.w D2,-(A7)
00030AAE <AmiBlitz3.ab3@21663>   LSR.w #8,D2
00030AB2 <AmiBlitz3.ab3@21664>   CMP.w #$16,D2
00030AB6 <AmiBlitz3.ab3@21665>    BNE.w 'isnta6
00030ABE <AmiBlitz3.ab3@21666>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
00030AC2 <AmiBlitz3.ab3@21669>   MOVE.l $12(A1),D1                                        ;objectspace
00030AC6 <AmiBlitz3.ab3@21670>   MOVE.w -$6(A1,D1.L),-(A7)
00030ACA <AmiBlitz3.ab3@21671>    BSR.w makeregop
00030ACE <AmiBlitz3.ab3@21672>    BSR.w writeword
00030AD0 <AmiBlitz3.ab3@21673>   MOVE.w (A7)+,D1
00030AD2 <AmiBlitz3.ab3@21674>   MOVE.w (A7)+,D2
00030AD4 <AmiBlitz3.ab3@21675>   TST.b D2
00030AD8 <AmiBlitz3.ab3@21676>    BPL.w 'skippy1
00030ADC <AmiBlitz3.ab3@21681>    BSR.w writeword                                         ;move.l x(a5),dn
00030ADE <AmiBlitz3.ab3@21682>   MOVE.w D2,-(A7)                                          ;store reg used
00030AE2 <AmiBlitz3.ab3@21684>   ADDA.l $12(A1),A1
00030AE4 <AmiBlitz3.ab3@21685>   MOVE.b D2,D1
00030AE8 <AmiBlitz3.ab3@21686>   ANDI.w #$7,D1
00030AEE <AmiBlitz3.ab3@21688>   TST.b debugmode
00030AF2 <AmiBlitz3.ab3@21689>    BEQ.w 'norerr
00030AF4 <AmiBlitz3.ab3@21691>   MOVE.w D1,-(A7)
00030AF6 <AmiBlitz3.ab3@21692>   LSL.w #8,D1
00030AF8 <AmiBlitz3.ab3@21693>   LSL.w #1,D1
00030AFC <AmiBlitz3.ab3@21694>   ORI.w #$B07C,D1                                          ;cmp #x,dn
00030B00 <AmiBlitz3.ab3@21695>    BSR.w writeword
00030B04 <AmiBlitz3.ab3@21696>   MOVE.w -$4(A1),D1
00030B08 <AmiBlitz3.ab3@21697>    BSR.w writeword
00030B0C <AmiBlitz3.ab3@21698>   MOVE.l maxchk(PC),D1                                  ;bcs
00030B10 <AmiBlitz3.ab3@21699>    BSR.w writelong
00030B12 <AmiBlitz3.ab3@21700>   MOVE.l A2,-(A7)
00030B16 <AmiBlitz3.ab3@21701>   MOVE.w #$C30A,D1
00030B1A <AmiBlitz3.ab3@21702>    BSR.w Atokejsr
00030B1C <AmiBlitz3.ab3@21703>   MOVEA.l (A7)+,A2
00030B1E <AmiBlitz3.ab3@21704>   MOVE.w (A7)+,D1
00030B22 <AmiBlitz3.ab3@21707>   MOVE.w -$2(A1),D2                                        ;shift amount
00030B26 <AmiBlitz3.ab3@21710>   CMP.w #$9,D2
00030B2A <AmiBlitz3.ab3@21711>    BCS.w 'simp
00030B2E <AmiBlitz3.ab3@21712>   MOVEM.w D1-D2,-(A7)
00030B30 <AmiBlitz3.ab3@21714>   MOVEQ.l #$00,D2                                          ;!!!!!
00030B32 <AmiBlitz3.ab3@21716>   LSL.w #8,D2
00030B34 <AmiBlitz3.ab3@21717>   LSL.w #1,D2
00030B36 <AmiBlitz3.ab3@21718>   OR.w D2,D1
00030B3A <AmiBlitz3.ab3@21719>   OR.w lsldn(PC),D1
00030B3E <AmiBlitz3.ab3@21720>    BSR.w writeword
00030B42 <AmiBlitz3.ab3@21721>   MOVEM.w (A7)+,D1-D2
00030B44 <AmiBlitz3.ab3@21722>   SUBQ.w #8,D2
00030B48 <AmiBlitz3.ab3@21723>  BRA.w 'shloop
00030B4A <AmiBlitz3.ab3@21726>   MOVE.w D1,-(A7)
00030B4E <AmiBlitz3.ab3@21727>   OR.w #$48c0,d1
00030B52 <AmiBlitz3.ab3@21728>   BSR writeword
00030B54 <AmiBlitz3.ab3@21729>   MOVE.w (a7),d1
00030B56 <AmiBlitz3.ab3@21730>   TST.w D2
00030B5A <AmiBlitz3.ab3@21731>   BEQ.w 'simp2
00030B5E <AmiBlitz3.ab3@21733>   ANDI.w #$7,D2                                            ;?????
00030B60 <AmiBlitz3.ab3@21735>   LSL.w #8,D2
00030B62 <AmiBlitz3.ab3@21736>   LSL.w #1,D2
00030B64 <AmiBlitz3.ab3@21737>   OR.w D2,D1
00030B68 <AmiBlitz3.ab3@21738>   OR.w lsldn(PC),D1
00030B6C <AmiBlitz3.ab3@21739>    BSR.w writeword
00030B6E <AmiBlitz3.ab3@21745>   MOVE.w (A7)+,D1
00030B72 <AmiBlitz3.ab3@21746>   ANDI.w #$7,D1
00030B76 <AmiBlitz3.ab3@21747>   OR.w maxdo(PC),D1
00030B78 <AmiBlitz3.ab3@21748>   MOVE.w (A7)+,D2
00030B7A <AmiBlitz3.ab3@21749>   LSL.w #1,D2
00030B7E <AmiBlitz3.ab3@21750>   ANDI.w #$E00,D2
00030B80 <AmiBlitz3.ab3@21751>   OR.w D2,D1
00030B84 <AmiBlitz3.ab3@21752>  BRA.w writeword
00030B88 <AmiBlitz3.ab3@21755>   CMP.b #$1,D2
00030B8C <AmiBlitz3.ab3@21756>    BEQ.w 'skippy
00030B8E <AmiBlitz3.ab3@21760>   ADDQ.w #4,D1
00030B94 <AmiBlitz3.ab3@21762>   TST.b debugmode
00030B98 <AmiBlitz3.ab3@21763>    BEQ.w 'skippy
00030B9C <AmiBlitz3.ab3@21765>    BSR.w writeword
00030B9E <AmiBlitz3.ab3@21766>   SWAP D1
00030BA2 <AmiBlitz3.ab3@21767>   MOVE.w 'theretest(PC),D1
00030BA4 <AmiBlitz3.ab3@21768>   SWAP D1
00030BA8 <AmiBlitz3.ab3@21769>    BSR.w writelong
00030BAC <AmiBlitz3.ab3@21770>   MOVE.l 'theretest+4(PC),D1
00030BB0 <AmiBlitz3.ab3@21771>    BSR.w writelong
00030BB4 <AmiBlitz3.ab3@21772>   MOVE.l 'theretest+8(PC),D1
00030BB8 <AmiBlitz3.ab3@21773>  BRA.w writelong
00030BBC <AmiBlitz3.ab3@21776>  BRA.w writeword
00030BC0 <AmiBlitz3.ab3@21781>             Dc.b $4A,$AD,$00,$00                           ;TST.L  $0000(A5)
00030BC4 <AmiBlitz3.ab3@21782>             Dc.b $66,$00,$00,$06                           ;BNE.W  'ttskip
00030BC6 <AmiBlitz3.ab3@21783>             Dc.b $70,$01                                   ;MOVEQ  #$01,D0
00030BC8 <AmiBlitz3.ab3@21784>             Dc.b $4E,$40                                   ;TRAP   #00
00030BCA <AmiBlitz3.ab3@21789>   LSR.w #8,D2
00030BCE <AmiBlitz3.ab3@21790>   CMP.b #$16,D2
00030BD2 <AmiBlitz3.ab3@21791>    BNE.w 'nota6
00030BD6 <AmiBlitz3.ab3@21792>   MOVE.w $A(A1),D1
00030BDC <AmiBlitz3.ab3@21793>   CMP.w lasta6,D1
00030BE0 <AmiBlitz3.ab3@21794>    BEQ.w 'sk
00030BE6 <AmiBlitz3.ab3@21795>   MOVE.w D1,lasta6
00030BEA <AmiBlitz3.ab3@21798>    BSR.w makeregop
00030BEE <AmiBlitz3.ab3@21799>   TST.w $1A(A1)
00030BF2 <AmiBlitz3.ab3@21800>    BPL.w 'long
00030BF6 <AmiBlitz3.ab3@21801>   CMP.w stackop(PC),D1
00030BFA <AmiBlitz3.ab3@21802>    BNE.w 'notst
00030C00 <AmiBlitz3.ab3@21803>   SUBQ.w #2,a2offset
00030C04 <AmiBlitz3.ab3@21806>    ORI.w #$1000,D1
00030C08 <AmiBlitz3.ab3@21809>    BSR.w writeword
00030C0C <AmiBlitz3.ab3@21810>   MOVE.w $A(A1),D1
00030C10 <AmiBlitz3.ab3@21811>    BSR.w writeword
00030C12 <AmiBlitz3.ab3@21814> RTS
00030C14 <AmiBlitz3.ab3@21818> lsldn:      Dc.b $E1,$88                 ;Dc.b $48 ;object long acsess    ;LSL.L   #8,D0
00030C18 <AmiBlitz3.ab3@21819> maxchk:     Dc.b $65,$00,$00,$08                                          ;BCS.W   maxchk_ok
00030C1E <AmiBlitz3.ab3@21820>             Dc.b $4E,$B9,$00,$00,$00,$00                                  ;JSR     $00000000
00030C20 <AmiBlitz3.ab3@21823> 
00030C22 <AmiBlitz3.ab3@21826>             Dc.b $00,$00
00030C26 <AmiBlitz3.ab3@21827> stackop:    Dc.b $2F,$2D,$00,$00                                          ;MOVE.L  $0000(A5),-(A7)
00030C2A <AmiBlitz3.ab3@21834>   CMP.b #$FF,D2
00030C2E <AmiBlitz3.ab3@21835>    BNE.w 'notst
00030C32 <AmiBlitz3.ab3@21836>   MOVE.w stackop(PC),D1
00030C38 <AmiBlitz3.ab3@21837>   ADDQ.w #4,a2offset
00030C3A <AmiBlitz3.ab3@21838>  RTS
00030C3C <AmiBlitz3.ab3@21841>   MOVE.l A3,-(A7)
00030C42 <AmiBlitz3.ab3@21842>   LEA regtransd,A3
00030C46 <AmiBlitz3.ab3@21843>   BTST #$4,D2
00030C4A <AmiBlitz3.ab3@21844>    BEQ.w 'skip
00030C50 <AmiBlitz3.ab3@21845>   LEA regtransa,A3
00030C54 <AmiBlitz3.ab3@21848>   ANDI.w #$7,D2
00030C56 <AmiBlitz3.ab3@21849>   MOVE.w D2,D1
00030C58 <AmiBlitz3.ab3@21850>   LSL.w #8,D1
00030C5A <AmiBlitz3.ab3@21851>   LSL.w #1,D1
00030C5C <AmiBlitz3.ab3@21852>   OR.w (A3),D1
00030C5E <AmiBlitz3.ab3@21853>   MOVEA.l (A7)+,A3
00030C60 <AmiBlitz3.ab3@21854> RTS
00030C64 <AmiBlitz3.ab3@21860>   CMP.w #$3C,D0
00030C68 <AmiBlitz3.ab3@21861>    BCS.w 'no
00030C6C <AmiBlitz3.ab3@21862>   CMP.w #$3E,D0
00030C70 <AmiBlitz3.ab3@21863>    BHI.w 'no
00030C74 <AmiBlitz3.ab3@21864>   SUBI.w #$3C,D0
00030C76 <AmiBlitz3.ab3@21865>   CMP.w D0,D0
00030C78 <AmiBlitz3.ab3@21868> RTS
00030C82 <AmiBlitz3.ab3@21881>   MOVE.w oldqflag,instringon
00030C88 <AmiBlitz3.ab3@21882>   MOVEA.l lastsourcepos,A5
00030C8E <AmiBlitz3.ab3@21891>   MOVE.w regnum,-(A7)
00030C94 <AmiBlitz3.ab3@21892>   CLR.w regnum
00030C9A <AmiBlitz3.ab3@21893>   MOVE.l destpointer,-(A7)
00030CA0 <AmiBlitz3.ab3@21894>   MOVE.l destbufferend,-(A7)
00030CA6 <AmiBlitz3.ab3@21895>   MOVE.w dontwrite_nomemleft,-(A7)
00030CAC <AmiBlitz3.ab3@21896>   MOVE.w lasta6,-(A7)
00030CB2 <AmiBlitz3.ab3@21897>   MOVE.w cfetchmode,-(A7)
00030CB6 <AmiBlitz3.ab3@21898>    BNE.w 'something
00030CC0 <AmiBlitz3.ab3@21899>   MOVE.l destbufferend,oldlibat
00030CC6 <AmiBlitz3.ab3@21900>   MOVEA.l constpcat,A0
00030CCC <AmiBlitz3.ab3@21901>   MOVE.l A0,destpointer
00030CD0 <AmiBlitz3.ab3@21902>  BRA.w 'some2
00030CD6 <AmiBlitz3.ab3@21907>   MOVEA.l destpointer,A0     ;continue in cmode buff
00030CD8 <AmiBlitz3.ab3@21910>   MOVE.l A0,-(A7)
00030CE2 <AmiBlitz3.ab3@21911>   MOVE.l constlibat,destbufferend      ;for overflow
00030CE8 <AmiBlitz3.ab3@21912>   CLR.w dontwrite_nomemleft
00030CF0 <AmiBlitz3.ab3@21914>   MOVE.w #$FFFF,lasta6                 ; was -1
00030CF8 <AmiBlitz3.ab3@21915>   MOVE.w #$FFFF,cfetchmode             ; was -1
00030CFC <AmiBlitz3.ab3@21919>     BSR.w arreval                      ;!
00030CFE <AmiBlitz3.ab3@21921>    MOVE.l (a7),a0
00030E3A <AmiBlitz3.ab3@21923>  !newcalc
00030E3E <AmiBlitz3.ab3@21924>    BEQ 'l10
00030E40 <AmiBlitz3.ab3@21925>    MOVE.l d0,d3
00030E42 <AmiBlitz3.ab3@21926>    MOVEA.l (A7)+,A0
00030E46 <AmiBlitz3.ab3@21927>  BRA 'bc1
00030E4A <AmiBlitz3.ab3@21931>    MOVE.w #$2600,D1              ;move.l d0,d3
00030E50 <AmiBlitz3.ab3@21932>   OR.w regnum,D1
00030E54 <AmiBlitz3.ab3@21933>    BSR.w writeword
00030E58 <AmiBlitz3.ab3@21934>   MOVE.w #$4E75,D1               ;rts!
00030E5C <AmiBlitz3.ab3@21935>    BSR.w writeword
00030E62 <AmiBlitz3.ab3@21937>   MOVE.w dontwrite_nomemleft,D1
00030E66 <AmiBlitz3.ab3@21938>    BNE.w conmemerr
00030E68 <AmiBlitz3.ab3@21940>   MOVEA.l (A7)+,A0
00030E6A <AmiBlitz3.ab3@21942>   NOP
00030E70 <AmiBlitz3.ab3@21944>    JSR Aclearcache                                         ;simple expression
00030E72 <AmiBlitz3.ab3@21946>    JSR (A0)                                                ;writeresult
00030E78 <AmiBlitz3.ab3@21949>   MOVE.w (A7)+,cfetchmode
00030E7E <AmiBlitz3.ab3@21950>   MOVE.w (A7)+,lasta6
00030E84 <AmiBlitz3.ab3@21951>   MOVE.w (A7)+,dontwrite_nomemleft
00030E8A <AmiBlitz3.ab3@21952>   MOVE.l (A7)+,destbufferend
00030E90 <AmiBlitz3.ab3@21953>   MOVE.l (A7)+,destpointer
00030E96 <AmiBlitz3.ab3@21954>   MOVE.w (A7)+,regnum
00030E9C <AmiBlitz3.ab3@21959> JMP reget
00030EA0 <AmiBlitz3.ab3@21962> oldlibat:   Ds.l 1
00030EA6 <AmiBlitz3.ab3@21966>   LEA incdir,A0
00030EAA <AmiBlitz3.ab3@21969>   CMP.w #$22,D0     ;'"'
00030EAE <AmiBlitz3.ab3@21970>    BEQ.w 'skip
00030EB0 <AmiBlitz3.ab3@21971>   MOVE.b D0,(A0)+
00030EB2 <AmiBlitz3.ab3@21972>   TST.w D0
00030EB6 <AmiBlitz3.ab3@21973>    BEQ.w 'done
00030EBA <AmiBlitz3.ab3@21974>    BMI.w syntaxerr
00030EC0 <AmiBlitz3.ab3@21977>   JSR get1bytemain                                         ;_long
00030EC4 <AmiBlitz3.ab3@21978>  BRA.w 'loop
00030EC6 <AmiBlitz3.ab3@21981> RTS
00030ECC <AmiBlitz3.ab3@21988>   LEA ptr_parameterstore,A1                                ;getparameter
00030ED2 <AmiBlitz3.ab3@21989>   LEA incdir,A0
00030ED4 <AmiBlitz3.ab3@21990>   MOVEQ.l #-$01,D2
00030ED6 <AmiBlitz3.ab3@21993>     ADDQ.w #1,D2
00030ED8 <AmiBlitz3.ab3@21994>     MOVE.b (A0)+,(A1)+
00030EDC <AmiBlitz3.ab3@21995>   BNE.w 'loop0
00030EDE <AmiBlitz3.ab3@21996>   SUBQ.w #1,A1
00030EE8 <AmiBlitz3.ab3@21999>   MOVE.w oldqflag,instringon
00030EEE <AmiBlitz3.ab3@22000>   MOVEA.l lastsourcepos,A5
00030EF4 <AmiBlitz3.ab3@22004>   JSR get1bytemain
00030EF6 <AmiBlitz3.ab3@22005>   TST.w D0
00030EFA <AmiBlitz3.ab3@22006>    BMI.w syntaxerr
00030EFE <AmiBlitz3.ab3@22007>   CMP.b #$22,D0         ;'"'
00030F02 <AmiBlitz3.ab3@22008>    BEQ.w 'loop
00030F04 <AmiBlitz3.ab3@22009>   MOVE.b D0,(A1)+
00030F08 <AmiBlitz3.ab3@22010>    BEQ.w 'done
00030F0A <AmiBlitz3.ab3@22011>   ADDQ.w #1,D2
00030F0E <AmiBlitz3.ab3@22012>  BRA.w 'loop
00030F10 <AmiBlitz3.ab3@22015>   TST.w D2
00030F14 <AmiBlitz3.ab3@22016>    BEQ.w syntaxerr
00030F16 <AmiBlitz3.ab3@22017> RTS
00030F1C <AmiBlitz3.ab3@22024>   MOVEA.l constantbase,A2
00030F20 <AmiBlitz3.ab3@22026>   MOVEA.l $E(A2),A5
00030F26 <AmiBlitz3.ab3@22028>   MOVE.l a5,includesourceline
00030F2C <AmiBlitz3.ab3@22029>   LEA inctab,a0
00030F32 <AmiBlitz3.ab3@22030>   MOVE.w ininclude,d0
00030F36 <AmiBlitz3.ab3@22031>   MOVE.l $0(a0,d0*4),d0
00030F3A <AmiBlitz3.ab3@22033>   MOVEA.l $4(A2),A0
00030F3E <AmiBlitz3.ab3@22035>   LEA $0(A0,D0.l),A0   ;end of buffer!
00030F40 <AmiBlitz3.ab3@22036>   MOVEA.l A5,A1
00030F42 <AmiBlitz3.ab3@22039>     CMPA.l A0,A1
00030F46 <AmiBlitz3.ab3@22040>      BCC.w readpend
00030F48 <AmiBlitz3.ab3@22041>   TST.b (A1)+
00030F4C <AmiBlitz3.ab3@22042>   BNE.w 'loop
00030F50 <AmiBlitz3.ab3@22043> BRA.w imakeend
00030F54 <AmiBlitz3.ab3@22048>   MOVEA.l $4(A2),A1
00030F56 <AmiBlitz3.ab3@22051>   CMPA.l A0,A5
00030F5A <AmiBlitz3.ab3@22052>   BCC.w 'skip
00030F5C <AmiBlitz3.ab3@22053>   MOVE.b (A5)+,(A1)+
00030F60 <AmiBlitz3.ab3@22054>  BRA.w 'loop
00030F62 <AmiBlitz3.ab3@22057>   MOVE.l A1,D0
00030F66 <AmiBlitz3.ab3@22058>   SUB.l $4(A2),D0
00030F6C <AmiBlitz3.ab3@22060>   LEA inctab,a0
00030F6E <AmiBlitz3.ab3@22061>   MOVEQ #0,d1
00030F74 <AmiBlitz3.ab3@22062>   MOVE.w ininclude,d1
00030F78 <AmiBlitz3.ab3@22063>   MOVE.l d0,0(a0,d1*4)
00030F7E <AmiBlitz3.ab3@22066>   MOVEA.l _dosbase,A6
00030F82 <AmiBlitz3.ab3@22067>   MOVE.l $8(A2),D1
00030F84 <AmiBlitz3.ab3@22068>   MOVE.l A1,D2
00030F8A <AmiBlitz3.ab3@22070>   MOVE.l D2,include_base
00030F90 <AmiBlitz3.ab3@22071>   MOVE.l #$10000000,d3                                     ;load whole file
00030F92 <AmiBlitz3.ab3@22074>   SUB.l D0,D3
00030F96 <AmiBlitz3.ab3@22076>    JSR _Read(A6)
00030F98 <AmiBlitz3.ab3@22078>   TST.l D0
00030F9C <AmiBlitz3.ab3@22079>    BMI.w error_reading_file
00030FA0 <AmiBlitz3.ab3@22081>    BEQ.w closeinc
00030FA6 <AmiBlitz3.ab3@22082>    MOVE.l D0,include_length
00030FE8 <AmiBlitz3.ab3@22083>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
00031012 <AmiBlitz3.ab3@22084>    !basic
00031022 <AmiBlitz3.ab3@22085>    ilen.l  = Peek.l(?include_length)
00031032 <AmiBlitz3.ab3@22086>    ibase.l = Peek.l(?include_base)
00031042 <AmiBlitz3.ab3@22087>    ido.l   = Peek.l(?include_process)
00031052 <AmiBlitz3.ab3@22088>    *tn.preprocessor = Peek.l(?include_preprocessor)
0003105C <AmiBlitz3.ab3@22089>    If ido
0003106E <AmiBlitz3.ab3@22090>      ioffset.l = SkipXtraHeader{ibase,ilen}
00031094 <AmiBlitz3.ab3@22091>      nilen.l = preproc_Tokenize{*tn,ibase+ioffset,ibase,ilen-ioffset}
000310A6 <AmiBlitz3.ab3@22092>      If nilen>0
000310B6 <AmiBlitz3.ab3@22096>        Poke.l ?include_length,nilen
000310D4 <AmiBlitz3.ab3@22099>    !asm
000310DE <AmiBlitz3.ab3@22100>    MOVE.l #0,include_process
000310E4 <AmiBlitz3.ab3@22101>    MOVE.l include_length,D0
000310EA <AmiBlitz3.ab3@22102>    LEA inctab,a0
000310EC <AmiBlitz3.ab3@22103>    MOVEQ #0,d1
000310F2 <AmiBlitz3.ab3@22104>    MOVE.w ininclude,d1
000310F6 <AmiBlitz3.ab3@22105>    ADD.l d0,0(a0,d1*4)
000310FA <AmiBlitz3.ab3@22109>   MOVEA.l $4(A2),A5
000310FE <AmiBlitz3.ab3@22112>    MOVE.l 0(a0,d1*4),d0
00031102 <AmiBlitz3.ab3@22114>   CLR.b $0(A5,D0.l)
00031104 <AmiBlitz3.ab3@22117>   MOVEA.l A5,A0
00031106 <AmiBlitz3.ab3@22120>     TST.b (A0)+
0003110A <AmiBlitz3.ab3@22121>   BNE.w 'loop2
0003110E <AmiBlitz3.ab3@22122>   MOVE.l A0,$E(A2)
00031110 <AmiBlitz3.ab3@22123> RTS
00031114 <AmiBlitz3.ab3@22126> include_length:        Dc.l 0                              ; for tokenizer!
00031118 <AmiBlitz3.ab3@22127> include_base:          Dc.l 0
0003111C <AmiBlitz3.ab3@22128> include_process:       Dc.l 0
00031120 <AmiBlitz3.ab3@22129> include_preprocessor:  Dc.l 0
00031124 <AmiBlitz3.ab3@22133>   MOVE.l $8(A2),D1
0003112A <AmiBlitz3.ab3@22134>   MOVEA.l _dosbase,A6
0003112E <AmiBlitz3.ab3@22135>   JSR _Close(a6)
00031134 <AmiBlitz3.ab3@22136>   MOVEA.l _execbase,A6
00031138 <AmiBlitz3.ab3@22137>   MOVEA.l $4(A2),A1
0003113E <AmiBlitz3.ab3@22138>   MOVE.l #$400*8,D0         ; #inclen                               ;exit include
00031142 <AmiBlitz3.ab3@22143>   JSR _FreeVec(a6)
00031148 <AmiBlitz3.ab3@22146>   MOVE.l (A2),constantbase
0003114A <AmiBlitz3.ab3@22147>   MOVEA.l A2,A1
0003114C <AmiBlitz3.ab3@22148>   MOVEQ.l #$00,D0
00031150 <AmiBlitz3.ab3@22149>   MOVE.b $12(A2),D0
00031156 <AmiBlitz3.ab3@22150>   MOVEA.l _execbase,A6
0003115C <AmiBlitz3.ab3@22153>   MOVE.l mempool2,a0
00031160 <AmiBlitz3.ab3@22154>   JSR _FreePooled(A6)
00031166 <AmiBlitz3.ab3@22155>   JSR zero_includename
0003116C <AmiBlitz3.ab3@22157>   SUBQ.w #1,ininclude
00031170 <AmiBlitz3.ab3@22158>   BNE.w readinc
00031176 <AmiBlitz3.ab3@22162>   LEA _include,a0
0003117A <AmiBlitz3.ab3@22163>   MOVEM.l a0-a6/d0-d7,-(a7)
00031180 <AmiBlitz3.ab3@22164>   LEA ptr_parameterstore,a1
00031182 <AmiBlitz3.ab3@22167>     MOVE.b (a0)+,(a1)+
00031186 <AmiBlitz3.ab3@22168>   BNE 'l1b
00031188 <AmiBlitz3.ab3@22169>   MOVEQ #9,d2
0003118E <AmiBlitz3.ab3@22170>   JSR findlabel2
00031192 <AmiBlitz3.ab3@22171>   BNE 'd
00031196 <AmiBlitz3.ab3@22172>   CLR.l 8(a2)
0003119A <AmiBlitz3.ab3@22175>   MOVEM.l (a7)+,a0-a6/d0-d7
0003119C <AmiBlitz3.ab3@22177> RTS
000311A2 <AmiBlitz3.ab3@22182>   MOVE.l unusedfunc,d0
000311A6 <AmiBlitz3.ab3@22183>   BEQ 'noclear
000311AA <AmiBlitz3.ab3@22184>   MOVEM.l d0-d2/a0-a1/a6,-(a7)
000311AC <AmiBlitz3.ab3@22187>     MOVE.l d0,a1
000311B0 <AmiBlitz3.ab3@22188>     MOVE.l 4(a1),d0
000311B2 <AmiBlitz3.ab3@22189>     MOVE.l (a1),d2
000311B8 <AmiBlitz3.ab3@22190>     MOVE.l _execbase,a6
000311BC <AmiBlitz3.ab3@22191>     JSR _FreeMem(a6)
000311BE <AmiBlitz3.ab3@22192>     MOVE.l d2,d0
000311C2 <AmiBlitz3.ab3@22193>   BNE 'f1
000311C8 <AmiBlitz3.ab3@22194>   CLR.l unusedfunc
000311CC <AmiBlitz3.ab3@22195>   MOVEM.l (a7)+,a0-a1/a6/d0-d2
000311CE <AmiBlitz3.ab3@22198> RTS
000311D4 <AmiBlitz3.ab3@22203>   MOVEA.l xinclude_base,A2
000311DA <AmiBlitz3.ab3@22204>   CLR.l xinclude_base
000311DE <AmiBlitz3.ab3@22207>     CMPA.w #$0,A2
000311E2 <AmiBlitz3.ab3@22208>      BEQ.w 'done
000311E4 <AmiBlitz3.ab3@22209>     MOVEQ.l #$00,D0
000311E8 <AmiBlitz3.ab3@22210>     MOVE.b 4+8(A2),D0           ; was 4 org
000311EA <AmiBlitz3.ab3@22211>     MOVEA.l A2,A1
000311EC <AmiBlitz3.ab3@22212>     MOVEA.l (A2),A2
000311F2 <AmiBlitz3.ab3@22213>     MOVEA.l _execbase,A6
000311F8 <AmiBlitz3.ab3@22216>     MOVE.l mempool2,a0
000311FC <AmiBlitz3.ab3@22217>     JSR _FreePooled(A6)
00031200 <AmiBlitz3.ab3@22219>  BRA.w 'loop
00031202 <AmiBlitz3.ab3@22222> RTS
00031208 <AmiBlitz3.ab3@22226>   MOVEA.l constantbase,A2
0003120E <AmiBlitz3.ab3@22227>   CLR.l constantbase
00031212 <AmiBlitz3.ab3@22230>     CMPA.w #$0,A2
00031216 <AmiBlitz3.ab3@22231>      BEQ.w 'done
0003121A <AmiBlitz3.ab3@22232>     MOVE.l $8(A2),D1
0003121E <AmiBlitz3.ab3@22233>      BEQ.w 'noclose
00031224 <AmiBlitz3.ab3@22234>     MOVEA.l _dosbase,A6
00031228 <AmiBlitz3.ab3@22235>      JSR _Close(A6)
0003122C <AmiBlitz3.ab3@22238>     MOVE.l $4(A2),D0
00031230 <AmiBlitz3.ab3@22239>      BEQ.w 'skip
00031232 <AmiBlitz3.ab3@22240>     MOVEA.l D0,A1
00031238 <AmiBlitz3.ab3@22241>     MOVE.l #$400*8,D0          ; was #inclen
0003123E <AmiBlitz3.ab3@22242>     MOVEA.l _execbase,A6
00031244 <AmiBlitz3.ab3@22245>     MOVE.l mempool,a0
00031248 <AmiBlitz3.ab3@22246>     JSR _FreeVec(a6)
0003124A <AmiBlitz3.ab3@22250>     MOVEQ.l #$00,D0
0003124E <AmiBlitz3.ab3@22251>     MOVE.b $12(A2),D0
00031250 <AmiBlitz3.ab3@22252>     MOVEA.l A2,A1
00031252 <AmiBlitz3.ab3@22253>     MOVEA.l (A2),A2
00031258 <AmiBlitz3.ab3@22254>     MOVEA.l _execbase,A6
0003125E <AmiBlitz3.ab3@22257>     MOVE.l mempool2,a0
00031262 <AmiBlitz3.ab3@22258>     JSR _FreePooled(A6)
00031266 <AmiBlitz3.ab3@22260>  BRA.w 'loop
00031268 <AmiBlitz3.ab3@22263> RTS
0003126A <AmiBlitz3.ab3@22270>   SWAP D0
0003126E <AmiBlitz3.ab3@22271>    BSR.w pokedata2
00031270 <AmiBlitz3.ab3@22272>   SWAP D0
00031276 <AmiBlitz3.ab3@22277>   MOVEA.l data2,A4
0003127C <AmiBlitz3.ab3@22278>   CMPA.l allat,A4
00031280 <AmiBlitz3.ab3@22279>    BCC.w 'over
00031282 <AmiBlitz3.ab3@22280>   MOVE.w D0,(A4)+
00031288 <AmiBlitz3.ab3@22281>   MOVE.l A4,data2
0003128A <AmiBlitz3.ab3@22282>  RTS
00031292 <AmiBlitz3.ab3@22285>   MOVE.w #$FFFF,dontwrite_nomemleft        ; was -1
00031298 <AmiBlitz3.ab3@22286>   ADDQ.l #2,data2
0003129A <AmiBlitz3.ab3@22287> RTS
000312A0 <AmiBlitz3.ab3@22291>   MOVEA.l data2,A4
000312A6 <AmiBlitz3.ab3@22292>   CMPA.l allat,A4
000312AA <AmiBlitz3.ab3@22293>    BCC.w 'over
000312AC <AmiBlitz3.ab3@22294>   MOVE.b D0,(A4)+
000312B2 <AmiBlitz3.ab3@22295>   MOVE.l A4,data2
000312B4 <AmiBlitz3.ab3@22296>  RTS
000312BC <AmiBlitz3.ab3@22299>   MOVE.w #$FFFF,dontwrite_nomemleft        ; was -1
000312C2 <AmiBlitz3.ab3@22300>   ADDQ.l #1,data2
000312C4 <AmiBlitz3.ab3@22301> RTS
000312C8 <AmiBlitz3.ab3@22307>   CMP.w #$22,D0          ;'"'
000312CC <AmiBlitz3.ab3@22308>    BNE.w syntaxerr
000312D2 <AmiBlitz3.ab3@22311>   JSR get1bytemain
000312D6 <AmiBlitz3.ab3@22312>   CMP.b #$22,D0
000312DA <AmiBlitz3.ab3@22313>    BEQ.w 'done
000312DC <AmiBlitz3.ab3@22314>   TST.w D0
000312E0 <AmiBlitz3.ab3@22315>    BEQ.w syntaxerr
000312E2 <AmiBlitz3.ab3@22316>   MOVE.b D0,(A0)+
000312E6 <AmiBlitz3.ab3@22317>  BRA.w 'getsp2
000312E8 <AmiBlitz3.ab3@22320>   CLR.b (A0)
000312EA <AmiBlitz3.ab3@22321> RTS
000312EC <AmiBlitz3.ab3@22325>   TST.l D3
000312EE <AmiBlitz3.ab3@22326> RTS
000312F4 <AmiBlitz3.ab3@22332>   LEA ptr_parameterstore,A0
000312FA <AmiBlitz3.ab3@22333>   LEA namebuff2,A1
000312FC <AmiBlitz3.ab3@22336>     MOVE.b (A0)+,D0
00031300 <AmiBlitz3.ab3@22337>     BEQ.w 'short
00031302 <AmiBlitz3.ab3@22338>   CMP.b (A1)+,D0
00031306 <AmiBlitz3.ab3@22339>   BEQ.w 'loop
00031308 <AmiBlitz3.ab3@22340>  RTS
0003130A <AmiBlitz3.ab3@22343>   TST.b (A1)
0003130E <AmiBlitz3.ab3@22344>   BNE.w 'lt
00031310 <AmiBlitz3.ab3@22345>  RTS
00031314 <AmiBlitz3.ab3@22348>   CMP.w #$1,D0
00031316 <AmiBlitz3.ab3@22349> RTS
0003131A <AmiBlitz3.ab3@22356>   CMP.w #$2E,D0                ;"."                            ;dodeftype
0003131E <AmiBlitz3.ab3@22357>    BNE.w syntaxerr
00031322 <AmiBlitz3.ab3@22358>   BSR.w getparameter2
00031328 <AmiBlitz3.ab3@22359>   LEA newtypebase,A2
0003132C <AmiBlitz3.ab3@22360>   BSR.w findtype
00031330 <AmiBlitz3.ab3@22361>    BNE.w notypeerr
00031336 <AmiBlitz3.ab3@22363>   TST.b declare
0003133A <AmiBlitz3.ab3@22364>    BNE 'l1
00031340 <AmiBlitz3.ab3@22365>   TST.b declare2
00031344 <AmiBlitz3.ab3@22366>    BEQ 'l2
0003134C <AmiBlitz3.ab3@22369>   MOVE.b #2,nowdeclare
00031352 <AmiBlitz3.ab3@22373>   JSR reget
00031356 <AmiBlitz3.ab3@22374>    BNE.w 'more
0003135C <AmiBlitz3.ab3@22375>   MOVE.l A2,defaulttype
0003135E <AmiBlitz3.ab3@22376>  RTS
00031364 <AmiBlitz3.ab3@22382>   MOVE.l defaulttype,-(A7)
0003136A <AmiBlitz3.ab3@22383>   MOVE.l A2,defaulttype
0003136E <AmiBlitz3.ab3@22386>   BSR.w getparameter
00031372 <AmiBlitz3.ab3@22387>    BSR.w fetchvars
00031376 <AmiBlitz3.ab3@22388>   CMP.w #$2C,D0            ;","
0003137A <AmiBlitz3.ab3@22389>    BNE.w 'done
00031380 <AmiBlitz3.ab3@22390>    JSR get1bytemain                                        ; was BSR.w
00031384 <AmiBlitz3.ab3@22391>  BRA.w 'loopz
0003138A <AmiBlitz3.ab3@22394>   MOVE.l (A7)+,defaulttype
0003138C <AmiBlitz3.ab3@22395> RTS
00031390 <AmiBlitz3.ab3@22399>   LEA $4(A5),A2                                            ;fehler function
00031392 <AmiBlitz3.ab3@22402>   MOVE.l A2,D0
00031396 <AmiBlitz3.ab3@22407>   BSR.w getparameter
0003139A <AmiBlitz3.ab3@22408>   BSR.w fetchvars
0003139E <AmiBlitz3.ab3@22409>   BSR.w calcvar
000313A2 <AmiBlitz3.ab3@22411>   CMP.b #$7,D2
000313A6 <AmiBlitz3.ab3@22412>    BNE.w mismatcherr
000313AA <AmiBlitz3.ab3@22413>   MOVE.w varmode(PC),-(A7)
000313AE <AmiBlitz3.ab3@22414>   CMP.w #$3D,D0            ;"="
000313B2 <AmiBlitz3.ab3@22415>    BNE.w syntaxerr
000313B6 <AmiBlitz3.ab3@22416>   BTST #$F,D2
000313BA <AmiBlitz3.ab3@22417>    BNE.w 'already
000313BE <AmiBlitz3.ab3@22418>   MOVE.w maxprep1(PC),D1
000313C2 <AmiBlitz3.ab3@22419>   BSR.w pokewda5s
000313C4 <AmiBlitz3.ab3@22420>   MOVE.w D3,D1
000313C8 <AmiBlitz3.ab3@22421>   BSR.w writeword
000313CC <AmiBlitz3.ab3@22424>   MOVE.w maxprep2(PC),D1
000313D0 <AmiBlitz3.ab3@22425>   BSR.w writeword
000313D6 <AmiBlitz3.ab3@22426>   ADDQ.w #1,regnum
000313D8 <AmiBlitz3.ab3@22427>   MOVEQ.l #$03,D2
000313DC <AmiBlitz3.ab3@22428>   BSR.w eval
000313E2 <AmiBlitz3.ab3@22429>   MOVE.l #$D000,D1              ; was #maxlen
000313E8 <AmiBlitz3.ab3@22431>   MOVE.l d1,lastinstruction
000313EA <AmiBlitz3.ab3@22433>   TST.w (A7)+
000313EE <AmiBlitz3.ab3@22434>    BEQ.w Atokejsr
000313F0 <AmiBlitz3.ab3@22435>   ADDQ.w #1,D1
000313F4 <AmiBlitz3.ab3@22436> BRA.w Atokejsr
000313F6 <AmiBlitz3.ab3@22440>   MOVE.w D0,D1
000313FA <AmiBlitz3.ab3@22441>    BPL.w syntaxerr
000313FE <AmiBlitz3.ab3@22442>   BCLR #$F,D1
00031404 <AmiBlitz3.ab3@22443>    JSR searchinstr
00031408 <AmiBlitz3.ab3@22444>   MOVE.l $12(A2),D0
0003140C <AmiBlitz3.ab3@22445>   TST.w -$2(A2,D0.L)
00031410 <AmiBlitz3.ab3@22446>    BEQ.w freeerr
00031412 <AmiBlitz3.ab3@22447>   MOVEQ.l #$02,D2
00031414 <AmiBlitz3.ab3@22448>   MOVE.l A2,-(A7)
00031418 <AmiBlitz3.ab3@22450>    BSR.w eval
0003141A <AmiBlitz3.ab3@22452>   MOVEA.l (A7)+,A2
00031420 <AmiBlitz3.ab3@22453>   MOVE.l A2,mymaxlib
00031424 <AmiBlitz3.ab3@22455>   ADDA.l $12(A2),A2
0003142A <AmiBlitz3.ab3@22456>   TST.b debugmode
0003142E <AmiBlitz3.ab3@22457>    BEQ.w 'pen
00031434 <AmiBlitz3.ab3@22461>   MOVE.w regnum,D1
00031436 <AmiBlitz3.ab3@22462>   LSL.w #8,D1
00031438 <AmiBlitz3.ab3@22463>   LSL.w #1,D1
0003143C <AmiBlitz3.ab3@22464>   ORI.w #$B07C,D1       ;cmp #x,dn
00031440 <AmiBlitz3.ab3@22465>    BSR.w writeword
00031444 <AmiBlitz3.ab3@22466>   MOVE.w -$4(A2),D1
00031448 <AmiBlitz3.ab3@22467>    BSR.w writeword
0003144E <AmiBlitz3.ab3@22468>   MOVE.l maxchk,D1      ;bcs
00031452 <AmiBlitz3.ab3@22469>    BSR.w writelong
00031454 <AmiBlitz3.ab3@22470>   MOVE.l A2,-(A7)
00031458 <AmiBlitz3.ab3@22471>   MOVE.w #$C30A,D1      ; was #maxerr,
0003145C <AmiBlitz3.ab3@22472>    BSR.w Atokejsr
0003145E <AmiBlitz3.ab3@22473>   MOVEA.l (A7)+,A2
00031462 <AmiBlitz3.ab3@22476>   MOVE.w -$2(A2),D2     ;# shifts
00031468 <AmiBlitz3.ab3@22479>   MOVE.w regnum,D1
0003146E <AmiBlitz3.ab3@22480>   OR.w lslimm,D1
00031472 <AmiBlitz3.ab3@22481>   CMP.w #$8,D2
00031476 <AmiBlitz3.ab3@22482>    BCS.w 'under
0003147A <AmiBlitz3.ab3@22483>    BSR.w writeword
0003147C <AmiBlitz3.ab3@22484>   SUBQ.w #8,D2
00031480 <AmiBlitz3.ab3@22485>    BNE.w 'loop
00031484 <AmiBlitz3.ab3@22486>  BRA.w 'shdone
00031486 <AmiBlitz3.ab3@22489>   MOVE.w D2,D0
00031488 <AmiBlitz3.ab3@22490>   LSL.w #8,D0
0003148A <AmiBlitz3.ab3@22491>   LSL.w #1,D0
0003148C <AmiBlitz3.ab3@22492>   OR.w D0,D1
00031490 <AmiBlitz3.ab3@22493>   BSR.w writeword
00031492 <AmiBlitz3.ab3@22496> RTS
00031496 <AmiBlitz3.ab3@22501>   Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
00031498 <AmiBlitz3.ab3@22502>   Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0003149C <AmiBlitz3.ab3@22506> mymaxlib:  Ds.l 1
000314A0 <AmiBlitz3.ab3@22510>   BSR.w getmaxel
000314A4 <AmiBlitz3.ab3@22512>   LEA free(PC),A0
000314A8 <AmiBlitz3.ab3@22513>   LEA freef(PC),A1
000314AE <AmiBlitz3.ab3@22514>   MOVE.w -$6(A2),$2(A0)
000314B2 <AmiBlitz3.ab3@22515>   BSR.w pokecode
000314B6 <AmiBlitz3.ab3@22517>   MOVE.l -$A(A2),D1
000314BA <AmiBlitz3.ab3@22520>   BEQ.w nosuperr
000314BE <AmiBlitz3.ab3@22521>   MOVEA.l mymaxlib(PC),A2
000314C2 <AmiBlitz3.ab3@22522> BRA.w Amakelibsub
000314C6 <AmiBlitz3.ab3@22526>   BSR.w getmaxel
000314CC <AmiBlitz3.ab3@22528>   LEA use,A0
000314D2 <AmiBlitz3.ab3@22529>   LEA usef,A1
000314D8 <AmiBlitz3.ab3@22530>   MOVE.w -$6(A2),$2(A0)
000314DE <AmiBlitz3.ab3@22531>   MOVE.w -$6(A2),-$2(A1)
000314E2 <AmiBlitz3.ab3@22532>   ADDQ.w #4,-$2(A1)
000314E6 <AmiBlitz3.ab3@22533>   BSR.w pokecode
000314EA <AmiBlitz3.ab3@22535>   MOVE.l -$E(A2),D1
000314EE <AmiBlitz3.ab3@22537> BRA.w maxjsr
000314F4 <AmiBlitz3.ab3@22542>   JSR get1bytemain
000314FA <AmiBlitz3.ab3@22545>   MOVE.l firstiff,D0
000314FE <AmiBlitz3.ab3@22546>    BEQ.w noiferr
00031500 <AmiBlitz3.ab3@22547>   MOVEA.l D0,A0
00031506 <AmiBlitz3.ab3@22548>   CMPI.b #$1,$D(A0)
0003150A <AmiBlitz3.ab3@22549>    BEQ.w illelseerr
0003150E <AmiBlitz3.ab3@22550>   MOVE.w #$6000,D1
00031514 <AmiBlitz3.ab3@22553>     TST.b fast
00031518 <AmiBlitz3.ab3@22554>     BEQ 'l1
0003151E <AmiBlitz3.ab3@22555>     OR.l #$ff,d1
00031522 <AmiBlitz3.ab3@22556>     BSR writeword
00031524 <AmiBlitz3.ab3@22561>   SWAP D1
00031528 <AmiBlitz3.ab3@22562>   BSR.w writelong
0003152A <AmiBlitz3.ab3@22563>   MOVEQ.l #$00,D1
0003152E <AmiBlitz3.ab3@22564>   BSR.w doendif2
00031536 <AmiBlitz3.ab3@22565>   MOVE.l destpointer,$8(A0)
0003153A <AmiBlitz3.ab3@22566> BRA.w do_then
00031540 <AmiBlitz3.ab3@22570>   LEA ptr_parameterstore,A0
00031542 <AmiBlitz3.ab3@22571>   MOVE.l A0,-(A7)
00031546 <AmiBlitz3.ab3@22572>   BSR.w getsp
0003154A <AmiBlitz3.ab3@22573> BRA.w handle_compileerror
0003154E <AmiBlitz3.ab3@22577>   BSR.w evalconst
00031550 <AmiBlitz3.ab3@22578>   MOVEQ.l #$05,D1       ;beq
0003155A <AmiBlitz3.ab3@22581>   MOVE.w oldqflag,instringon
00031560 <AmiBlitz3.ab3@22582>   MOVEA.l lastsourcepos,A5
00031566 <AmiBlitz3.ab3@22584>   LEA numcom,A0
0003156A <AmiBlitz3.ab3@22585> BRA.w compare
00031570 <AmiBlitz3.ab3@22589>   LEA ptr_parameterstore,A0
00031574 <AmiBlitz3.ab3@22590>   BSR.w getsp
0003157A <AmiBlitz3.ab3@22591>   JSR get1bytemain
0003157E <AmiBlitz3.ab3@22592>   BSR.w collif
00031584 <AmiBlitz3.ab3@22593>   LEA namebuff2,A0
00031588 <AmiBlitz3.ab3@22594>   BSR.w getsp
0003158E <AmiBlitz3.ab3@22595>   LEA strcom,A0
00031590 <AmiBlitz3.ab3@22603>   LSL.w #2,D1
00031596 <AmiBlitz3.ab3@22604>   LEA CIF_branches,A1
0003159A <AmiBlitz3.ab3@22605>   MOVE.l $0(A1,D1.W),-(A7)
0003159C <AmiBlitz3.ab3@22606>   MOVEQ.l #-$01,D1           ;comp flag
0003159E <AmiBlitz3.ab3@22608>   JSR (A0)
000315A0 <AmiBlitz3.ab3@22610>   MOVEA.l (A7)+,A1
000315A2 <AmiBlitz3.ab3@22611> JMP (A1)
000315A6 <AmiBlitz3.ab3@22615>   BEQ.w cifdo
000315AA <AmiBlitz3.ab3@22616> BRA.w cifdont
000315AE <AmiBlitz3.ab3@22619>   BNE.w cifdo
000315B2 <AmiBlitz3.ab3@22620> BRA.w cifdont
000315B6 <AmiBlitz3.ab3@22623>   BLT.w cifdo
000315BA <AmiBlitz3.ab3@22624> BRA.w cifdont
000315BE <AmiBlitz3.ab3@22627>   BLE.w cifdo
000315C2 <AmiBlitz3.ab3@22628> BRA.w cifdont
000315C6 <AmiBlitz3.ab3@22631>   BGT.w cifdo
000315CA <AmiBlitz3.ab3@22632> BRA.w cifdont
000315CE <AmiBlitz3.ab3@22635>   BGE.w cifdo
000315D0 <AmiBlitz3.ab3@22638>   MOVEQ.l #$00,D1
000315D6 <AmiBlitz3.ab3@22641>   MOVEA.l concomsp,A0
000315DC <AmiBlitz3.ab3@22642>   MOVE.w skipcode,(A0)+
000315E2 <AmiBlitz3.ab3@22643>   MOVE.l A0,concomsp
000315E8 <AmiBlitz3.ab3@22644>   MOVE.w D1,skipcode
000315EE <AmiBlitz3.ab3@22645>   JSR get1bytemain
000315F2 <AmiBlitz3.ab3@22646>    BNE.w syntaxerr
000315F8 <AmiBlitz3.ab3@22647> JMP bakup
00031600 <AmiBlitz3.ab3@22651> rescode:   Dc.b $2B,$7c,$00,$00,$00,$00 :   Ds.w 1         ;MOVE.L  #$00000000,$0000(A5)
00031604 <AmiBlitz3.ab3@22652> rescode2:  Dc.b $2B,$40                 :   Ds.w 1         ;MOVE.L  D0,$0000(A5)
00031608 <AmiBlitz3.ab3@22659>   MOVE.w #$FC17,D1
0003160E <AmiBlitz3.ab3@22660>   JSR uselib
00031614 <AmiBlitz3.ab3@22662>   JSR reget
00031618 <AmiBlitz3.ab3@22663>    BEQ.w 'resbeg
0003161C <AmiBlitz3.ab3@22664>   BSR.w makealab2                                          ;get label name!
00031620 <AmiBlitz3.ab3@22665>   MOVE.w rescode(PC),D1
00031624 <AmiBlitz3.ab3@22666>   BSR.w writeword
0003162A <AmiBlitz3.ab3@22667>   JSR addoff                                               ;add offset
0003162E <AmiBlitz3.ab3@22668>   MOVE.l $C(A2),D1
00031632 <AmiBlitz3.ab3@22669>   BSR.w writelong
00031636 <AmiBlitz3.ab3@22670>   MOVE.w rescode+6(PC),D1
0003163A <AmiBlitz3.ab3@22671>   BSR.w writeword
0003163E <AmiBlitz3.ab3@22672>   MOVE.l $4(A2),D1                                         ;is it outstanding?
00031642 <AmiBlitz3.ab3@22673>   BEQ.w 'no
00031644 <AmiBlitz3.ab3@22675>   MOVEA.l D1,A1
00031648 <AmiBlitz3.ab3@22676>   ADDQ.l #1,$4(A1)                                         ;make odd - flag for data reference.
0003164A <AmiBlitz3.ab3@22677>  RTS
0003164C <AmiBlitz3.ab3@22682>  RTS
00031650 <AmiBlitz3.ab3@22685>   MOVE.w #$CD00,D1
00031656 <AmiBlitz3.ab3@22686>   JSR Atokejsr
0003165A <AmiBlitz3.ab3@22687>   MOVE.l rescode2(PC),D1
00031660 <AmiBlitz3.ab3@22688> JMP writelong
00031664 <AmiBlitz3.ab3@22692>   MOVE.w #$FC17,D1
0003166A <AmiBlitz3.ab3@22693>   JSR uselib
00031670 <AmiBlitz3.ab3@22696>   MOVE.l dataget,D1
00031674 <AmiBlitz3.ab3@22697>   BSR.w writelong
00031678 <AmiBlitz3.ab3@22698>   BSR.w getparameter
0003167C <AmiBlitz3.ab3@22699>   BSR.w fetchvars
00031680 <AmiBlitz3.ab3@22700>   BSR.w calcvar
00031684 <AmiBlitz3.ab3@22701>   BTST #$E,D2
00031688 <AmiBlitz3.ab3@22702>    BEQ.w 'notap
0003168C <AmiBlitz3.ab3@22704>   MOVE.b #$6,D2      ;pointer becomes an address!
0003168E <AmiBlitz3.ab3@22707>   TST.b D2
00031692 <AmiBlitz3.ab3@22708>    BEQ.w noleterr   ;read in a whole struct....later!
00031698 <AmiBlitz3.ab3@22709>   TST.b debugmode
0003169C <AmiBlitz3.ab3@22710>    BEQ.w 'norerr
000316A0 <AmiBlitz3.ab3@22712>   MOVE.w #$7000,D1
000316A2 <AmiBlitz3.ab3@22713>   MOVE.b D2,D1
000316A6 <AmiBlitz3.ab3@22714>   ANDI.b #$F,D1
000316AA <AmiBlitz3.ab3@22715>   BSR.w writeword
000316AE <AmiBlitz3.ab3@22716>   MOVE.w #$C310,D1     ; was  #datachk
000316B0 <AmiBlitz3.ab3@22717>   MOVE.w D2,-(A7)
000316B4 <AmiBlitz3.ab3@22718>   BSR.w Atokejsr
000316B6 <AmiBlitz3.ab3@22719>   MOVE.w (A7)+,D2
000316BA <AmiBlitz3.ab3@22722>   CMP.b #$7,D2
000316BE <AmiBlitz3.ab3@22723>    BEQ.w 'string
000316C2 <AmiBlitz3.ab3@22724>   CMP.b #$1,D2
000316C6 <AmiBlitz3.ab3@22725>    BNE.w 'notbyte
000316CC <AmiBlitz3.ab3@22727>   LEA dataletb2,A0
000316D2 <AmiBlitz3.ab3@22728>   LEA dataletb2f,A1
000316D6 <AmiBlitz3.ab3@22729>   BTST #$F,D2
000316DA <AmiBlitz3.ab3@22730>    BEQ.w 'bimm
000316DE <AmiBlitz3.ab3@22731>   BSR.w pokecode
000316E2 <AmiBlitz3.ab3@22732>  BRA.w 'next
000316E8 <AmiBlitz3.ab3@22735>   LEA dataletb,A0
000316EE <AmiBlitz3.ab3@22736>   LEA dataletbf,A1
000316F4 <AmiBlitz3.ab3@22738>   TST.w varmode
000316F8 <AmiBlitz3.ab3@22739>    BEQ.w 'byteglobal
000316FE <AmiBlitz3.ab3@22740>   LEA dataletbl,A0
00031704 <AmiBlitz3.ab3@22741>   LEA dataletblf,A1
00031708 <AmiBlitz3.ab3@22744>   MOVE.w D3,$4(A0)
0003170C <AmiBlitz3.ab3@22745>   BSR.w pokecode
00031710 <AmiBlitz3.ab3@22746>  BRA.w 'next
00031716 <AmiBlitz3.ab3@22749>   LEA dataletw,A0
0003171A <AmiBlitz3.ab3@22750>   CMP.b #$3,D2
0003171E <AmiBlitz3.ab3@22751>    BCS.w 'word
00031724 <AmiBlitz3.ab3@22752>   LEA dataletl,A0
00031728 <AmiBlitz3.ab3@22755>   BTST #$F,D2
0003172C <AmiBlitz3.ab3@22756>    BEQ.w 'imm
00031730 <AmiBlitz3.ab3@22757>   MOVE.w $4(A0),D1
00031734 <AmiBlitz3.ab3@22758>    BSR.w writeword
00031738 <AmiBlitz3.ab3@22759>  BRA.w 'next
0003173E <AmiBlitz3.ab3@22762>   TST.w varmode
00031742 <AmiBlitz3.ab3@22763>    BEQ.w 'wlglobal
00031744 <AmiBlitz3.ab3@22764>   ADDQ.w #6,A0
00031748 <AmiBlitz3.ab3@22767>   MOVE.w D3,$2(A0)
0003174A <AmiBlitz3.ab3@22768>   MOVE.l (A0),D1
0003174E <AmiBlitz3.ab3@22769>   BSR.w writelong
00031754 <AmiBlitz3.ab3@22772>   MOVE.l dataput,D1
00031758 <AmiBlitz3.ab3@22773>    BSR.w writelong
0003175C <AmiBlitz3.ab3@22774>   CMP.w #$2C,D0        ;','
00031760 <AmiBlitz3.ab3@22775>    BEQ.w 'more
00031762 <AmiBlitz3.ab3@22776>  RTS
00031768 <AmiBlitz3.ab3@22779>   JSR get1bytemain
0003176C <AmiBlitz3.ab3@22780>  BRA.w 'loop
00031772 <AmiBlitz3.ab3@22783>   MOVE.w stlenget,D1
00031776 <AmiBlitz3.ab3@22784>    BSR.w writeword     ;move.l (a3)+,-(a7)
0003177A <AmiBlitz3.ab3@22785>   BTST #$F,D2
0003177E <AmiBlitz3.ab3@22786>    BNE.w 'ok
00031784 <AmiBlitz3.ab3@22788>   TST.w varmode
00031788 <AmiBlitz3.ab3@22789>    BEQ.w 'sglobal
0003178E <AmiBlitz3.ab3@22790>   MOVE.w D3,leaampl+2
00031794 <AmiBlitz3.ab3@22791>   MOVE.l leaampl,D1
00031798 <AmiBlitz3.ab3@22792>  BRA.w 'sskip
0003179E <AmiBlitz3.ab3@22795>   MOVE.w D3,leaamp+2
000317A4 <AmiBlitz3.ab3@22796>   MOVE.l leaamp,D1
000317A8 <AmiBlitz3.ab3@22799>   BSR.w writelong
000317AC <AmiBlitz3.ab3@22802>   MOVE.w #$C701,D1     ;was  #astring
000317B2 <AmiBlitz3.ab3@22803>   MOVE.w varmode,D2
000317B6 <AmiBlitz3.ab3@22804>    BEQ.w 'global
000317B8 <AmiBlitz3.ab3@22805>   SUBQ.w #1,D1
000317BC <AmiBlitz3.ab3@22808>   BSR.w Atokejsr
000317C4 <AmiBlitz3.ab3@22809>   MOVE.w #$FFFF,lasta6    ; was -1
000317CA <AmiBlitz3.ab3@22810>   LEA stalign,A0
000317D0 <AmiBlitz3.ab3@22811>   LEA stalignf,A1
000317D4 <AmiBlitz3.ab3@22812>   BSR.w pokecode
000317D8 <AmiBlitz3.ab3@22813> BRA.w 'next
000317DC <AmiBlitz3.ab3@22817>   CMP.w #$2E,D0        ;'.'                                    ;definecode 'lb 'lw 'll
000317E0 <AmiBlitz3.ab3@22818>    BNE.w 'word
000317E6 <AmiBlitz3.ab3@22819>   JSR get1bytemain
000317EA <AmiBlitz3.ab3@22820>   CMP.w #$77,D0        ;'w'
000317EE <AmiBlitz3.ab3@22821>    BEQ.w 'word2
000317F2 <AmiBlitz3.ab3@22822>   CMP.w #$62,D0        ;'b'
000317F6 <AmiBlitz3.ab3@22823>    BEQ.w 'byte
000317FA <AmiBlitz3.ab3@22825>   CMP.w #"s",d0        ;'s'
000317FE <AmiBlitz3.ab3@22826>   BEQ 'single3         
00031802 <AmiBlitz3.ab3@22827>   CMP.w #"d",d0        ;'d'
00031806 <AmiBlitz3.ab3@22828>   BEQ 'double3
0003180A <AmiBlitz3.ab3@22830>   CMP.w #$6C,D0        ;'l'
0003180E <AmiBlitz3.ab3@22831>    BNE.w syntaxerr
00031810 <AmiBlitz3.ab3@22832>   MOVEQ.l #$02,D1
00031812 <AmiBlitz3.ab3@22833>  RTS
0003181A <AmiBlitz3.ab3@22837>   MOVE.b #1,iee
0003181C <AmiBlitz3.ab3@22838>   MOVEQ.l #$3,d1
0003181E <AmiBlitz3.ab3@22839>  RTS
00031826 <AmiBlitz3.ab3@22842>   MOVE.b #1,iee
00031828 <AmiBlitz3.ab3@22843>   MOVEQ.l #$4,d1
0003182A <AmiBlitz3.ab3@22844>  RTS
0003182C <AmiBlitz3.ab3@22848>   MOVEQ.l #$00,D1
0003182E <AmiBlitz3.ab3@22849>  RTS
00031830 <AmiBlitz3.ab3@22852>   MOVEQ.l #$01,D1
00031832 <AmiBlitz3.ab3@22853>  RTS
00031834 <AmiBlitz3.ab3@22856>   MOVEQ.l #$01,D1
0003183A <AmiBlitz3.ab3@22857> JMP bakup
0003183E <AmiBlitz3.ab3@22861>   BSR.w getsize2
00031840 <AmiBlitz3.ab3@22863>   MOVE.w D1,-(A7)
00031844 <AmiBlitz3.ab3@22864>    BSR.w evalconst2
00031848 <AmiBlitz3.ab3@22865>   CMP.w #$2C,D0        ;','
0003184C <AmiBlitz3.ab3@22866>    BNE.w syntaxerr
0003184E <AmiBlitz3.ab3@22867>   MOVE.l D3,-(A7)
00031852 <AmiBlitz3.ab3@22868>    BSR.w evalconst2
00031854 <AmiBlitz3.ab3@22869>   MOVE.l D3,D1        ;to put in memory
00031856 <AmiBlitz3.ab3@22870>   MOVE.l (A7)+,D3     ;number of times
00031858 <AmiBlitz3.ab3@22871>   MOVE.w (A7)+,D2
0003185C <AmiBlitz3.ab3@22872>    BEQ.w 'byte
00031860 <AmiBlitz3.ab3@22878>   CMP.w #$1,D2
00031864 <AmiBlitz3.ab3@22879>    BEQ.w 'word
00031866 <AmiBlitz3.ab3@22882>   SWAP D1
0003186A <AmiBlitz3.ab3@22883>    BSR.w writeword
0003186C <AmiBlitz3.ab3@22884>   SWAP D1
00031870 <AmiBlitz3.ab3@22885>    BSR.w writeword
00031872 <AmiBlitz3.ab3@22886>   SUBQ.l #1,D3
00031876 <AmiBlitz3.ab3@22887>    BNE.w 'long
00031878 <AmiBlitz3.ab3@22888>  RTS
0003187C <AmiBlitz3.ab3@22891>    BSR.w writeword
0003187E <AmiBlitz3.ab3@22892>   SUBQ.l #1,D3
00031882 <AmiBlitz3.ab3@22893>    BNE.w 'word
00031884 <AmiBlitz3.ab3@22894>  RTS
00031888 <AmiBlitz3.ab3@22897>    BSR.w writebyte
0003188A <AmiBlitz3.ab3@22898>   SUBQ.l #1,D3
0003188E <AmiBlitz3.ab3@22899>    BNE.w 'byte
00031890 <AmiBlitz3.ab3@22900> RTS
00031894 <AmiBlitz3.ab3@22904>   BSR.w getsize2                                          ;definestorage
00031896 <AmiBlitz3.ab3@22905>   MOVE.w D1,-(A7)
0003189A <AmiBlitz3.ab3@22906>   BSR.w evalconst3
0003189C <AmiBlitz3.ab3@22907>   MOVE.w (A7)+,D1
0003189E <AmiBlitz3.ab3@22908>   LSL.l D1,D3
000318A0 <AmiBlitz3.ab3@22910>   MOVE.l d3,d0
000318A4 <AmiBlitz3.ab3@22911>   BEQ 'll5
000318A6 <AmiBlitz3.ab3@22912>   MOVEQ #0,d1
000318AC <AmiBlitz3.ab3@22915>     JSR writebyte
000318AE <AmiBlitz3.ab3@22916>     SUBQ.l #1,d3
000318B2 <AmiBlitz3.ab3@22917>   BNE.s 'll10
000318B4 <AmiBlitz3.ab3@22922> RTS
000318B6 <AmiBlitz3.ab3@22926>   MOVE.w D0,-(A7)
000318BC <AmiBlitz3.ab3@22927>   LEA dummyasm,A0
000318C2 <AmiBlitz3.ab3@22928>   MOVEA.l destpointer,A1
000318CC <AmiBlitz3.ab3@22929>   MOVE.w asmlen2,asmlen
000318D2 <AmiBlitz3.ab3@22930>   JSR insasm
000318D4 <AmiBlitz3.ab3@22931>   MOVE.w (A7)+,D0
000318D6 <AmiBlitz3.ab3@22932> RTS
000318DA <AmiBlitz3.ab3@22936>   BSR.w getsize2
000318E4 <AmiBlitz3.ab3@22938>   MOVE.l #ptr_parameterstore,asmbuff
000318E6 <AmiBlitz3.ab3@22939>   TST.w D1
000318EA <AmiBlitz3.ab3@22940>    BEQ.w 'byte
000318EE <AmiBlitz3.ab3@22941>   CMP.w #$1,D1
000318F2 <AmiBlitz3.ab3@22942>    BEQ.w 'word
000318F6 <AmiBlitz3.ab3@22944>   CMP.w #$2,d1
000318FA <AmiBlitz3.ab3@22945>    BEQ 'long
000318FE <AmiBlitz3.ab3@22946>   CMP.w #$3,d1
00031902 <AmiBlitz3.ab3@22947>    BEQ 'single
00031904 <AmiBlitz3.ab3@22952>    MOVEQ.l #$0d,D3
0003190A <AmiBlitz3.ab3@22960>    JSR asmconst
0003190E <AmiBlitz3.ab3@22961>    BSR.w insasm2
00031912 <AmiBlitz3.ab3@22962>    BSR.w writelong
00031916 <AmiBlitz3.ab3@22964>    BSR   writelong
0003191A <AmiBlitz3.ab3@22966>   CMP.w #$2C,D0    ; ','
0003191E <AmiBlitz3.ab3@22967>    BEQ.w 'lloop
00031920 <AmiBlitz3.ab3@22968>  RTS
00031922 <AmiBlitz3.ab3@22972>   MOVEQ.l #$0B,D3
0003192A <AmiBlitz3.ab3@22976>   MOVE.b #1,_dcb
00031930 <AmiBlitz3.ab3@22979>   JSR asmconst
00031936 <AmiBlitz3.ab3@22980>   CLR.b _dcb
0003193A <AmiBlitz3.ab3@22981>   BSR.w insasm2
0003193E <AmiBlitz3.ab3@22982>   BSR writebyte
00031942 <AmiBlitz3.ab3@22983>   BSR writebyte
00031946 <AmiBlitz3.ab3@22984>   BSR writebyte                                            ;long
0003194A <AmiBlitz3.ab3@22985>   BSR writebyte
0003194E <AmiBlitz3.ab3@22986>   CMP.w #$2C,D0
00031952 <AmiBlitz3.ab3@22987>    BEQ.w 'lloopb
00031954 <AmiBlitz3.ab3@22988>  RTS
00031956 <AmiBlitz3.ab3@22991>   MOVEQ.l #$0c,D3
0003195E <AmiBlitz3.ab3@22995>   MOVE.b #1,_dcb
00031964 <AmiBlitz3.ab3@22998>   JSR asmconst
0003196A <AmiBlitz3.ab3@22999>   CLR.b _dcb
0003196E <AmiBlitz3.ab3@23000>   BSR.w insasm2
00031972 <AmiBlitz3.ab3@23001>   BSR.w writebyte
00031976 <AmiBlitz3.ab3@23002>   BSR.w writebyte
0003197A <AmiBlitz3.ab3@23003>   BSR.w writebyte
0003197E <AmiBlitz3.ab3@23004>   BSR.w writebyte
00031982 <AmiBlitz3.ab3@23005>   CMP.w #$2C,D0
00031986 <AmiBlitz3.ab3@23006>    BEQ.w 'lloopa
00031988 <AmiBlitz3.ab3@23007>  RTS
0003198A <AmiBlitz3.ab3@23013>   MOVEQ.l #$11,D3
00031990 <AmiBlitz3.ab3@23016>   JSR get1bytemain
00031994 <AmiBlitz3.ab3@23017>   CMP.w #$22,D0     ;'"'
00031998 <AmiBlitz3.ab3@23018>    BNE.w 'notq
0003199A <AmiBlitz3.ab3@23023>   MOVE.b (a5)+,d0                                          ;bsr.w get1bytemain ascii dc.b
0003199E <AmiBlitz3.ab3@23025>    BEQ.w syntaxerr
000319A2 <AmiBlitz3.ab3@23026>   CMP.w #$22,D0   ;'"'
000319A6 <AmiBlitz3.ab3@23027>    BEQ.w 'qdone
000319AA <AmiBlitz3.ab3@23029>   CMP.b #"\",d0
000319AE <AmiBlitz3.ab3@23030>    BNE 'n1
000319B2 <AmiBlitz3.ab3@23031>   CMP.b #"\",(a5)
000319B6 <AmiBlitz3.ab3@23032>    BEQ 'do1
000319B8 <AmiBlitz3.ab3@23036>   MOVE.w D0,D1
000319BC <AmiBlitz3.ab3@23037>   BSR.w writebyte
000319C0 <AmiBlitz3.ab3@23038>  BRA.w 'qloop
000319C8 <AmiBlitz3.ab3@23042>   CMP.l #"__DA",1(a5)
000319CC <AmiBlitz3.ab3@23043>    BNE 'nodate1
000319D4 <AmiBlitz3.ab3@23044>   CMP.l #"TE__",5(a5)
000319D8 <AmiBlitz3.ab3@23045>    BEQ 'c1
000319E0 <AmiBlitz3.ab3@23046>   CMP.l #"TE_G",5(a5)
000319E4 <AmiBlitz3.ab3@23047>    BNE 'nodate1
000319EC <AmiBlitz3.ab3@23048>   CMP.l #"ER__",9(a5)
000319F0 <AmiBlitz3.ab3@23049>    BNE 'nodate1
000319F6 <AmiBlitz3.ab3@23050>   JSR compiledatedc_ger
000319FA <AmiBlitz3.ab3@23051>  BRA 'n1
00031A00 <AmiBlitz3.ab3@23054>   JSR compiledatedc
00031A04 <AmiBlitz3.ab3@23055>  BRA 'n1
00031A0C <AmiBlitz3.ab3@23058>   CMP.l #"__VE",1(a5)
00031A10 <AmiBlitz3.ab3@23059>    BNE 'n1
00031A16 <AmiBlitz3.ab3@23060>   CMP.w #"R_",5(a5)
00031A1A <AmiBlitz3.ab3@23061>    BNE 'n1
00031A20 <AmiBlitz3.ab3@23062>   JSR version_string_dc
00031A24 <AmiBlitz3.ab3@23063>  BRA.w 'qloop
00031A2A <AmiBlitz3.ab3@23067>   CLR.w instringon
00031A30 <AmiBlitz3.ab3@23069>   JSR get1bytemain
00031A34 <AmiBlitz3.ab3@23070>  BRA.w 'bdone
00031A3E <AmiBlitz3.ab3@23075>    MOVE.w oldqflag,instringon
00031A44 <AmiBlitz3.ab3@23076>   MOVEA.l lastsourcepos,A5
00031A4A <AmiBlitz3.ab3@23078>    JSR asmconst
00031A50 <AmiBlitz3.ab3@23079>   SUBQ.l #1,destpointer
00031A54 <AmiBlitz3.ab3@23080>    BSR.w insasm2
00031A5A <AmiBlitz3.ab3@23081>   ADDQ.l #1,destpointer
00031A5E <AmiBlitz3.ab3@23082>    BSR.w writebyte
00031A62 <AmiBlitz3.ab3@23085>   CMP.w #$2C,D0   ;','
00031A66 <AmiBlitz3.ab3@23086>    BEQ.w 'bloop
00031A68 <AmiBlitz3.ab3@23087>  RTS
00031A6A <AmiBlitz3.ab3@23090>   MOVEQ.l #$10,D3
00031A72 <AmiBlitz3.ab3@23099>   MOVE.b #1,_dcb
00031A78 <AmiBlitz3.ab3@23101>   JSR asmconst
00031A7E <AmiBlitz3.ab3@23103>   CLR.b _dcb
00031A82 <AmiBlitz3.ab3@23105>   BSR.w insasm2
00031A86 <AmiBlitz3.ab3@23108>   BSR.w writebyte
00031A8A <AmiBlitz3.ab3@23109>   BSR.w writebyte
00031A8E <AmiBlitz3.ab3@23111>   CMP.w #$2C,D0      ;','
00031A92 <AmiBlitz3.ab3@23112>    BEQ.w 'wloop
00031A94 <AmiBlitz3.ab3@23113> RTS
00031A9A <AmiBlitz3.ab3@23117>   ADDQ.l #3,destpointer
00031AA2 <AmiBlitz3.ab3@23118>   ANDI.w #$FFFC,destpointer+2
00031AA4 <AmiBlitz3.ab3@23119> RTS
00031AAA <AmiBlitz3.ab3@23123>   ADDQ.l #7,destpointer
00031AB2 <AmiBlitz3.ab3@23124>   ANDI.w #$FFF8,destpointer+2
00031AB4 <AmiBlitz3.ab3@23125> RTS
00031ABA <AmiBlitz3.ab3@23129>   ADDQ.l #1,destpointer                                    ;even
00031AC2 <AmiBlitz3.ab3@23130>   BCLR #$0,destpointer+3
00031AC4 <AmiBlitz3.ab3@23131> RTS
00031AC6 <AmiBlitz3.ab3@23134> datasize: Ds.w 1
00031ACC <AmiBlitz3.ab3@23144>   TST.b debugmode
00031AD0 <AmiBlitz3.ab3@23145>   BEQ.w 'skip
00031AD4 <AmiBlitz3.ab3@23146>   MOVE.w #$4420,D0                                         ;'D '
00031AD8 <AmiBlitz3.ab3@23147>   MOVE.b datasize+1(PC),D0
00031ADC <AmiBlitz3.ab3@23148>  BRA.w pokedata2
00031ADE <AmiBlitz3.ab3@23151> RTS
00031AE2 <AmiBlitz3.ab3@23155>   MOVE.w #$FC17,D1           ;#64535
00031AE8 <AmiBlitz3.ab3@23156>    JSR uselib
00031AF2 <AmiBlitz3.ab3@23159>    MOVE.w oldqflag,instringon
00031AF8 <AmiBlitz3.ab3@23160>   MOVEA.l lastsourcepos,A5
00031AFE <AmiBlitz3.ab3@23162>    JSR sizespec2        ;get size of it into d1
00031B04 <AmiBlitz3.ab3@23163>   MOVE.w D1,datasize
00031B08 <AmiBlitz3.ab3@23167>   CMP.w #$7,D1
00031B0C <AmiBlitz3.ab3@23168>    BEQ.w 'string
00031B0E <AmiBlitz3.ab3@23170>   MOVE.w D1,-(A7)
00031B12 <AmiBlitz3.ab3@23173>   BSR.w pdt
00031B14 <AmiBlitz3.ab3@23174>   MOVE.w (A7),D2
00031B18 <AmiBlitz3.ab3@23175>    BSR.w fetchdata
00031B1A <AmiBlitz3.ab3@23176>   CMP.w (A7),D2                                            ;datamode
00031B1E <AmiBlitz3.ab3@23177>    BEQ.w 'dataok
00031B20 <AmiBlitz3.ab3@23179>   MOVE.w D2,D1
00031B22 <AmiBlitz3.ab3@23180>   MOVE.w (A7),D2
00031B26 <AmiBlitz3.ab3@23181>   CMP.w #$2,D2
00031B2A <AmiBlitz3.ab3@23182>    BNE.w 'notw
00031B2E <AmiBlitz3.ab3@23183>   CMP.w #$3,D1
00031B32 <AmiBlitz3.ab3@23184>    BNE.w baddaterr
00031B38 <AmiBlitz3.ab3@23185>   CMP.l #$10000,D3        ; was  #65536
00031B3C <AmiBlitz3.ab3@23186>    BCC.w baddaterr
00031B40 <AmiBlitz3.ab3@23187>  BRA.w 'dataok
00031B44 <AmiBlitz3.ab3@23190>   CMP.w #$1,D2
00031B48 <AmiBlitz3.ab3@23191>    BNE.w 'notb
00031B4C <AmiBlitz3.ab3@23192>   CMP.w #$2,D1
00031B50 <AmiBlitz3.ab3@23193>    BNE.w baddaterr
00031B56 <AmiBlitz3.ab3@23194>   CMP.l #$100,D3
00031B5A <AmiBlitz3.ab3@23195>    BCC.w baddaterr
00031B5E <AmiBlitz3.ab3@23196>  BRA.w 'dataok
00031B62 <AmiBlitz3.ab3@23199>  BRA.w baddaterr
00031B66 <AmiBlitz3.ab3@23202>   CMP.w #$3,D2
00031B6A <AmiBlitz3.ab3@23203>   BCC.w 'notword
00031B6E <AmiBlitz3.ab3@23204>   BSR.w pokedata2
00031B72 <AmiBlitz3.ab3@23205>  BRA.w 'next
00031B78 <AmiBlitz3.ab3@23209>   TST.b iee
00031B7C <AmiBlitz3.ab3@23210>   BEQ 'old
00031B80 <AmiBlitz3.ab3@23211>   CMP.b #5,d2
00031B84 <AmiBlitz3.ab3@23212>   BNE 'old
00031B88 <AmiBlitz3.ab3@23213>   Dc.l $f2006400                                           ;  fpu data write fmove.s fp0,d0
00031B8C <AmiBlitz3.ab3@23218>   BSR.w pokedata2l                                          ;write data >3
00031B92 <AmiBlitz3.ab3@23221>   JSR reget
00031B96 <AmiBlitz3.ab3@23222>   CMP.w #$2C,D0     ;','
00031B9A <AmiBlitz3.ab3@23223>    BEQ.w 'more
00031B9C <AmiBlitz3.ab3@23224>   ADDQ.w #2,A7
00031B9E <AmiBlitz3.ab3@23225>  RTS
00031BA2 <AmiBlitz3.ab3@23228>    BSR.w pdt
00031BA8 <AmiBlitz3.ab3@23229>   MOVE.l data2,-(A7)
00031BAC <AmiBlitz3.ab3@23230>    BSR.w pokedata2l
00031BAE <AmiBlitz3.ab3@23231>   MOVEQ.l #$00,D1
00031BB4 <AmiBlitz3.ab3@23233>    JSR get1bytemain
00031BB8 <AmiBlitz3.ab3@23234>    BEQ.w 'done
00031BBC <AmiBlitz3.ab3@23235>   CMP.w #$22,D0       ;'"'
00031BC0 <AmiBlitz3.ab3@23236>    BEQ.w 'quoted
00031BC4 <AmiBlitz3.ab3@23237>   CMP.w #$2C,D0       ;','
00031BC8 <AmiBlitz3.ab3@23238>    BEQ.w 'done
00031BCC <AmiBlitz3.ab3@23241>    BSR.w pokedata2b
00031BCE <AmiBlitz3.ab3@23242>   ADDQ.w #1,D1
00031BD4 <AmiBlitz3.ab3@23243>    JSR getchar
00031BD6 <AmiBlitz3.ab3@23244>   TST.w D0
00031BDA <AmiBlitz3.ab3@23245>    BEQ.w 'done
00031BDE <AmiBlitz3.ab3@23246>   CMP.w #$2C,D0
00031BE2 <AmiBlitz3.ab3@23247>    BEQ.w 'done       ;','
00031BE6 <AmiBlitz3.ab3@23248>  BRA.w 'loop2
00031BE8 <AmiBlitz3.ab3@23253>    MOVEQ #0,d0
00031BEA <AmiBlitz3.ab3@23254>    MOVE.b (a5)+,d0
00031BEE <AmiBlitz3.ab3@23256>    BEQ.w notqerr2
00031BF2 <AmiBlitz3.ab3@23257>   CMP.w #$22,D0       ;'"'
00031BF6 <AmiBlitz3.ab3@23258>    BEQ.w 'done2
00031BFA <AmiBlitz3.ab3@23259>    BSR.w pokedata2b
00031BFC <AmiBlitz3.ab3@23260>   ADDQ.w #1,D1
00031C00 <AmiBlitz3.ab3@23261>  BRA.w 'quoted
00031C06 <AmiBlitz3.ab3@23265>   CLR.w instringon
00031C0C <AmiBlitz3.ab3@23267>   JSR get1bytemain
00031C0E <AmiBlitz3.ab3@23270>   MOVEA.l (A7)+,A0
00031C14 <AmiBlitz3.ab3@23271>   MOVE.w dontwrite_nomemleft,D2
00031C18 <AmiBlitz3.ab3@23272>    BNE.w 'nopoke
00031C1A <AmiBlitz3.ab3@23273>   MOVE.l D1,(A0)
00031C20 <AmiBlitz3.ab3@23276>   ADDQ.l #1,data2
00031C28 <AmiBlitz3.ab3@23277>   BCLR #$0,data2+3
00031C2C <AmiBlitz3.ab3@23278>   CMP.w #$2C,D0      ;','
00031C30 <AmiBlitz3.ab3@23279>    BEQ.w 'string
00031C32 <AmiBlitz3.ab3@23280> RTS
00031C38 <AmiBlitz3.ab3@23284> notqerr2           JMP notqerr
00031C3E <AmiBlitz3.ab3@23285> JUMP_vardeclareerr JMP vardeclareerr
00031C44 <AmiBlitz3.ab3@23293>   MOVE.w proceduremode,D1                                  ;doshared
00031C48 <AmiBlitz3.ab3@23296>   BNE.w 'l1
00031C4A <AmiBlitz3.ab3@23297>   MOVE.w D1,-(A7)
00031C50 <AmiBlitz3.ab3@23298>   CLR.w proceduremode
00031C56 <AmiBlitz3.ab3@23301>   LEA varbase,a2
00031C5A <AmiBlitz3.ab3@23302>   BSR.w getparameter
00031C5C <AmiBlitz3.ab3@23303>   MOVE.w d2,-(a7)
00031C62 <AmiBlitz3.ab3@23304>    JSR findvariable
00031C66 <AmiBlitz3.ab3@23305>    BEQ 'checkdim
00031C6C <AmiBlitz3.ab3@23306>    LEA sharebase,a2
00031C6E <AmiBlitz3.ab3@23307>    MOVEQ #$f+4,d7
00031C72 <AmiBlitz3.ab3@23308>    BSR.w findlab                                         ;find var
00031C76 <AmiBlitz3.ab3@23309>    BEQ.b dupsherr
00031C7A <AmiBlitz3.ab3@23310>    BSR addlabel
00031C7E <AmiBlitz3.ab3@23311>    CMP.b #".",d0
00031C82 <AmiBlitz3.ab3@23312>    BNE JUMP_vardeclareerr
00031C84 <AmiBlitz3.ab3@23313>    MOVE.l a2,a3
00031C8A <AmiBlitz3.ab3@23314>    JSR claptonb       ; jump to a copy of fvaradd 'clapton
00031C8C <AmiBlitz3.ab3@23345>   MOVE.w (a7)+,d2
00031C90 <AmiBlitz3.ab3@23346>    CMP.b #",",d0
00031C94 <AmiBlitz3.ab3@23347>    BNE 'ret
00031C9A <AmiBlitz3.ab3@23348>    JSR get1bytemain
00031C9E <AmiBlitz3.ab3@23349>  BRA 'again2
00031CA4 <AmiBlitz3.ab3@23352>   MOVE.w (A7)+,proceduremode
00031CA6 <AmiBlitz3.ab3@23353>  RTS
00031CAC <AmiBlitz3.ab3@23356>    CMP.w #2,6(a2)
00031CB0 <AmiBlitz3.ab3@23357>    BEQ 'do
00031CB6 <AmiBlitz3.ab3@23358>    CMP.w #$102,6(a2)
00031CBA <AmiBlitz3.ab3@23359>    BEQ 'do
00031CC0 <AmiBlitz3.ab3@23360>  JMP errormsg_declaredtwice                                 ;was BRA 'errormsg_declaredtwice_
00031CC6 <AmiBlitz3.ab3@23363>   LEA varbase,a0
00031CC8 <AmiBlitz3.ab3@23366>   MOVE.l (A0),D0                                           ;find label
00031CCC <AmiBlitz3.ab3@23367>    BEQ.b 'z1
00031CCE <AmiBlitz3.ab3@23368>    CMP.l d0,a2
00031CD2 <AmiBlitz3.ab3@23369>    BEQ 'z1
00031CD4 <AmiBlitz3.ab3@23370>    MOVE.l d0,a0
00031CD8 <AmiBlitz3.ab3@23371>  BRA 'm1
00031CDA <AmiBlitz3.ab3@23374>   MOVE.l (a2),d1
00031CDC <AmiBlitz3.ab3@23375>     MOVE.l d1,(a0)
00031CDE <AmiBlitz3.ab3@23376>     CLR.l (a2)
00031CE4 <AmiBlitz3.ab3@23377>     LEA sharebase,a0
00031CE6 <AmiBlitz3.ab3@23378>     MOVE.l (a0),(a2)
00031CE8 <AmiBlitz3.ab3@23379>     MOVE.l a2,(a0)
00031CEE <AmiBlitz3.ab3@23380>     JSR get1bytemain
00031CF4 <AmiBlitz3.ab3@23381>     JSR get1bytemain
00031CF8 <AmiBlitz3.ab3@23382>  BRA 'domore
00031D00 <AmiBlitz3.ab3@23385>   MOVE.b #1,nowdeclare
00031D02 <AmiBlitz3.ab3@23387>   MOVE.w D1,-(A7)
00031D08 <AmiBlitz3.ab3@23388>   CLR.w proceduremode
00031D0C <AmiBlitz3.ab3@23391>    BSR.w getparameter
00031D0E <AmiBlitz3.ab3@23392>   MOVE.w D2,-(A7)
00031D14 <AmiBlitz3.ab3@23394>   LEA firstglob,A2
00031D18 <AmiBlitz3.ab3@23395>    BSR.w findvariable2
00031D1C <AmiBlitz3.ab3@23396>    BNE.b 'notfound
00031D22 <AmiBlitz3.ab3@23399>   MOVE.b flagmask+1,D1
00031D26 <AmiBlitz3.ab3@23400>   MOVE.b $7(A2),D3
00031D28 <AmiBlitz3.ab3@23401>   EOR.b D3,D1
00031D2C <AmiBlitz3.ab3@23402>    BEQ.w dupsherr
00031D30 <AmiBlitz3.ab3@23403>    BSR.w findlab
00031D34 <AmiBlitz3.ab3@23404>    BEQ.b 'try2
00031D38 <AmiBlitz3.ab3@23407>    BSR.w addlabel
00031D3A <AmiBlitz3.ab3@23408>   MOVE.w (A7)+,D2
00031D3C <AmiBlitz3.ab3@23409>   MOVE.l A2,-(A7)   ;new glob
00031D40 <AmiBlitz3.ab3@23410>    BSR.w fetchvars     
00031D42 <AmiBlitz3.ab3@23411>   MOVEA.l (A7)+,A2
00031D44 <AmiBlitz3.ab3@23412>   MOVEQ.l #$04,D1
00031D46 <AmiBlitz3.ab3@23413>   ADDQ.w #4,A2
00031D48 <AmiBlitz3.ab3@23414>   ADDQ.w #4,A3
00031D4A <AmiBlitz3.ab3@23417>     MOVE.w (A3)+,(A2)+
00031D4E <AmiBlitz3.ab3@23418>   DBF D1,'loop
00031D56 <AmiBlitz3.ab3@23420>   BTST #$1,flagmask+1
00031D5A <AmiBlitz3.ab3@23421>    BEQ.w 'done
00031D60 <AmiBlitz3.ab3@23422>    JSR get1bytemain
00031D64 <AmiBlitz3.ab3@23423>   CMP.w #$29,D0         ;')'
00031D68 <AmiBlitz3.ab3@23424>    BNE.w JUMP_syntaxerr
00031D6E <AmiBlitz3.ab3@23425>    JSR get1bytemain
00031D72 <AmiBlitz3.ab3@23428>    CMP.w #$2C,D0         ;','
00031D76 <AmiBlitz3.ab3@23429>    BNE.w 'done2
00031D7C <AmiBlitz3.ab3@23430>    JSR get1bytemain
00031D80 <AmiBlitz3.ab3@23431>  BRA.w 'loop2
00031D86 <AmiBlitz3.ab3@23434>   MOVE.w (A7)+,proceduremode
00031D88 <AmiBlitz3.ab3@23435> RTS
00031D8C <AmiBlitz3.ab3@23442>    BSR.w makeiname
00031D92 <AmiBlitz3.ab3@23443>    JSR check_incdir                                        ; ergebnis in d2
00031D98 <AmiBlitz3.ab3@23445>    LEA ptr_parameterstore,a1
00031D9A <AmiBlitz3.ab3@23446>    MOVE.l d2,-(a7)
00031DA0 <AmiBlitz3.ab3@23447>    LEA includetemp,a0                                      ; filename in includetemp packen
00031DA2 <AmiBlitz3.ab3@23450>      MOVE.b (a1)+,(a0)+
00031DA6 <AmiBlitz3.ab3@23451>    BNE 'l4
00031DAC <AmiBlitz3.ab3@23453>    LEA ptr_parameterstore,a1
00031DAE <AmiBlitz3.ab3@23454>    MOVE.l a1,a0
00031DB0 <AmiBlitz3.ab3@23457>     TST.b (a0)+
00031DB4 <AmiBlitz3.ab3@23458>    BNE 'l1
00031DB6 <AmiBlitz3.ab3@23461>      MOVE.b -(a0),d0
00031DBA <AmiBlitz3.ab3@23462>      CMP.b #":",d0
00031DBE <AmiBlitz3.ab3@23463>       BEQ 'out
00031DC2 <AmiBlitz3.ab3@23464>      CMP.b #"/",d0
00031DC6 <AmiBlitz3.ab3@23465>       BEQ 'out
00031DC8 <AmiBlitz3.ab3@23466>      CMP.l a1,a0
00031DCC <AmiBlitz3.ab3@23467>       BEQ 'out2
00031DD0 <AmiBlitz3.ab3@23468>  BRA 'l2
00031DD2 <AmiBlitz3.ab3@23471>    ADDQ.l #1,a0                                            ; dateinamen vom pfad extrahiert
00031DD4 <AmiBlitz3.ab3@23474>    MOVEQ.l #-$01,D2
00031DD6 <AmiBlitz3.ab3@23477>      ADDQ.w #1,D2
00031DD8 <AmiBlitz3.ab3@23478>      MOVE.b (a0)+,(a1)+
00031DDC <AmiBlitz3.ab3@23479>    BNE 'l3
00031DDE <AmiBlitz3.ab3@23480>    CLR.b (a1)+
00031DE4 <AmiBlitz3.ab3@23482>    LEA ptr_parameterstore,a1
00031DE8 <AmiBlitz3.ab3@23483>    BSR.w findxinc                                         ;find include
00031DEC <AmiBlitz3.ab3@23484>     BEQ.w 'outb
00031DEE <AmiBlitz3.ab3@23486>    MOVE.w D2,-(A7)
00031DF2 <AmiBlitz3.ab3@23487>    BSR.w addlabel
00031DF4 <AmiBlitz3.ab3@23488>    MOVE.w (A7)+,D2
00031DFA <AmiBlitz3.ab3@23490>    LEA ptr_parameterstore,a1
00031E00 <AmiBlitz3.ab3@23491>    LEA includetemp,a0                                      ; namen in includetemp schreiben
00031E02 <AmiBlitz3.ab3@23494>     MOVE.b (a0)+,(a1)+
00031E06 <AmiBlitz3.ab3@23495>    BNE 'l4b
00031E08 <AmiBlitz3.ab3@23497>    MOVE.l (a7)+,d2
00031E0E <AmiBlitz3.ab3@23498>    LEA ptr_parameterstore,a1
00031E12 <AmiBlitz3.ab3@23500>  BRA.w doinc2
00031E18 <AmiBlitz3.ab3@23504>    LEA ptr_parameterstore,a1
00031E1E <AmiBlitz3.ab3@23505>    LEA includetemp,a0
00031E20 <AmiBlitz3.ab3@23508>     MOVE.b (a0)+,(a1)+
00031E24 <AmiBlitz3.ab3@23509>    BNE 'l4b2
00031E26 <AmiBlitz3.ab3@23511>    MOVE.l (a7)+,d2
00031E2C <AmiBlitz3.ab3@23512>    LEA ptr_parameterstore,a1
00031E2E <AmiBlitz3.ab3@23514> RTS
00031E32 <AmiBlitz3.ab3@23518>   BSR.w makeiname                                              ; test and get the parameter (includestring)
00031E38 <AmiBlitz3.ab3@23522>   JSR check_IncBinDir                                          ; to fix the path problem in CLIMode  tomsmart1
00031E3E <AmiBlitz3.ab3@23524>   MOVEA.l _dosbase,A6
00031E40 <AmiBlitz3.ab3@23526>   MOVE.l D0,D7                                                 ; store Lockpointer
00031E44 <AmiBlitz3.ab3@23527>    BEQ.w error_cant_open_include                               ; no pointer => errormessage
00031E46 <AmiBlitz3.ab3@23528>   MOVE.l D7,D1                                                 ; begin get the size of the file to include
00031E4C <AmiBlitz3.ab3@23529>   MOVE.l ptr_macrobuffer_begin,D2
00031E50 <AmiBlitz3.ab3@23530>    JSR _Examine(A6)
00031E56 <AmiBlitz3.ab3@23531>   MOVEA.l ptr_macrobuffer_begin,A0
00031E5A <AmiBlitz3.ab3@23532>   MOVE.l $4(A0),D0
00031E5E <AmiBlitz3.ab3@23533>    BPL.w error_cant_open_include                               ; something went wrong => errormessage
00031E62 <AmiBlitz3.ab3@23534>   MOVE.l $7C(A0),D3      ;length                                       ; store the size of the file to include
00031E64 <AmiBlitz3.ab3@23535>   MOVE.l D7,D1                                                 ; begin unlock the file
00031E68 <AmiBlitz3.ab3@23536>    JSR _UnLock(A6)
00031E6E <AmiBlitz3.ab3@23538>   MOVE.l #ptr_parameterstore,D1                                ; begin Open and Load the file
00031E74 <AmiBlitz3.ab3@23539>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2                       
00031E78 <AmiBlitz3.ab3@23540>    JSR _Open(A6)
00031E7A <AmiBlitz3.ab3@23541>   MOVE.l D0,D7
00031E7E <AmiBlitz3.ab3@23542>    BEQ.w error_cant_open_include
00031E84 <AmiBlitz3.ab3@23543>   MOVE.l destpointer,D0
00031E86 <AmiBlitz3.ab3@23544>   ADD.l D3,D0
00031E8C <AmiBlitz3.ab3@23545>   CMP.l destbufferend,D0
00031E90 <AmiBlitz3.ab3@23546>    BHI.w 'over
00031E96 <AmiBlitz3.ab3@23547>   MOVE.l destpointer,D2
00031E98 <AmiBlitz3.ab3@23548>   MOVE.l D7,D1
00031E9C <AmiBlitz3.ab3@23549>    JSR _Read(A6)
00031EA2 <AmiBlitz3.ab3@23550>   CMP.l #$FFFFFFFF,D0              ; was -1
00031EA6 <AmiBlitz3.ab3@23551>    BEQ.w error_reading_file
00031EAC <AmiBlitz3.ab3@23552>   ADD.l D0,destpointer
00031EB0 <AmiBlitz3.ab3@23553>  BRA.w 'close
00031EB8 <AmiBlitz3.ab3@23556>   MOVE.w #$FFFF,dontwrite_nomemleft          ; was -1
00031EBE <AmiBlitz3.ab3@23557>   MOVE.l D0,destpointer
00031EC0 <AmiBlitz3.ab3@23560>   MOVE.l D7,D1
00031EC4 <AmiBlitz3.ab3@23561> JMP _Close(A6)
00031ECA <AmiBlitz3.ab3@23564> JUMP_illdirerr JMP illdirerr
00031ED0 <AmiBlitz3.ab3@23570>   TST.w dirmode                                            ;include  open
00031ED4 <AmiBlitz3.ab3@23571>    BNE.w JUMP_illdirerr
00031ED8 <AmiBlitz3.ab3@23573>   BSR.w makeiname
00031EDE <AmiBlitz3.ab3@23575>   JSR check_incdir
00031EE2 <AmiBlitz3.ab3@23579>   BSR.w findconstant
00031EE6 <AmiBlitz3.ab3@23580>    BEQ.w alincerr
00031EEC <AmiBlitz3.ab3@23582>   LEA constantbase,A2
00031EF0 <AmiBlitz3.ab3@23583>   BSR.w addhere2
00031EF4 <AmiBlitz3.ab3@23585>   CLR.w $C(A2)
00031EF8 <AmiBlitz3.ab3@23586>   CLR.l $4(A2)
00031EFE <AmiBlitz3.ab3@23588>   MOVE.l #ptr_parameterstore,D1
00031F00 <AmiBlitz3.ab3@23589>   MOVE.l d1,a0
00031F06 <AmiBlitz3.ab3@23590>   LEA includetemp2,a1
00031F08 <AmiBlitz3.ab3@23593>     MOVE.b (a0)+,(a1)+
00031F0C <AmiBlitz3.ab3@23594>   BNE 'l1
00031F12 <AmiBlitz3.ab3@23595>   JSR save_includename
00031F1C <AmiBlitz3.ab3@23596>   MOVE.l #0,include_process
00031F24 <AmiBlitz3.ab3@23598>   CMP.l #$62623200,-4(a0)                                  ;.bb2
00031F28 <AmiBlitz3.ab3@23599>   BEQ 'ok
00031F30 <AmiBlitz3.ab3@23600>   CMP.l #$61623300,-4(a0)                                  ;.ab3
00031F34 <AmiBlitz3.ab3@23601>   BEQ 'ok_tokenize
00031F3C <AmiBlitz3.ab3@23602>   CMP.l #$61623200,-4(a0)                                  ;.ab2
00031F40 <AmiBlitz3.ab3@23603>   BEQ 'ok_tokenize
00031F48 <AmiBlitz3.ab3@23604>   CMP.l #$2e626200,-4(a0)                                  ;.bb files
00031F4C <AmiBlitz3.ab3@23605>   BEQ 'ok
00031F52 <AmiBlitz3.ab3@23606>  JMP errortoken                                             ;can only include
00031F5C <AmiBlitz3.ab3@23609>    MOVE.l #-1,include_process                              ; must tokenize the include
00031F62 <AmiBlitz3.ab3@23612>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00031F68 <AmiBlitz3.ab3@23613>   MOVEA.l _dosbase,A6
00031F6C <AmiBlitz3.ab3@23614>   JSR _Open(A6)
00031F70 <AmiBlitz3.ab3@23615>   MOVE.l D0,$8(A2)
00031F74 <AmiBlitz3.ab3@23616>   BEQ.w error_cant_open_include
00031F7A <AmiBlitz3.ab3@23617>   CLR.l includeline
00031F7E <AmiBlitz3.ab3@23618>   MOVE.l 8(a2),d1
00031F80 <AmiBlitz3.ab3@23619>   MOVE.l d3,-(a7)
00031F82 <AmiBlitz3.ab3@23620>   MOVEQ #0,d2
00031F84 <AmiBlitz3.ab3@23621>   MOVEQ #1,d3
00031F88 <AmiBlitz3.ab3@23622>   JSR _Seek(a6)                                            ; -66
00031F8C <AmiBlitz3.ab3@23623>   MOVE.l 8(a2),d1
00031F8E <AmiBlitz3.ab3@23624>   MOVEQ #0,d2
00031F90 <AmiBlitz3.ab3@23625>   MOVEQ #-1,d3
00031F94 <AmiBlitz3.ab3@23626>   JSR _Seek(a6)                                            ; -66
00031F96 <AmiBlitz3.ab3@23627>   MOVE.l (a7)+,d3
00031F98 <AmiBlitz3.ab3@23628>   ADDQ.l #4,d0
00031F9E <AmiBlitz3.ab3@23632>   MOVE.l #$10000,D1
00031FA4 <AmiBlitz3.ab3@23634>   MOVEA.l _execbase,A6
00031FA8 <AmiBlitz3.ab3@23638>   JSR _AllocVec(a6)
00031FAC <AmiBlitz3.ab3@23642>   MOVE.l D0,$4(A2)
00031FB0 <AmiBlitz3.ab3@23643>   MOVE.l D0,$E(A2)
00031FB2 <AmiBlitz3.ab3@23644>   MOVEA.l D0,A5
00031FB8 <AmiBlitz3.ab3@23652>   ADDQ.w #1,ininclude                                      ;enter include
00031FBE <AmiBlitz3.ab3@23656>   LEA _include,a0
00031FC2 <AmiBlitz3.ab3@23657>   MOVEM.l a0-a6/d0-d7,-(a7)
00031FC8 <AmiBlitz3.ab3@23658>   LEA ptr_parameterstore,a1
00031FCA <AmiBlitz3.ab3@23661>     MOVE.b (a0)+,(a1)+
00031FCE <AmiBlitz3.ab3@23662>   BNE 'l1b
00031FD0 <AmiBlitz3.ab3@23664>   MOVEQ #9,d2
00031FD6 <AmiBlitz3.ab3@23665>   JSR findlabel2
00031FDA <AmiBlitz3.ab3@23666>   BNE 'd
00031FE2 <AmiBlitz3.ab3@23667>   MOVE.l #1,8(a2)
00031FE6 <AmiBlitz3.ab3@23668>   MOVEM.l (a7)+,a0-a6/d0-d7
00031FEA <AmiBlitz3.ab3@23669>  BRA 'd2
00031FF0 <AmiBlitz3.ab3@23672>   JSR addlabelhash
00031FF8 <AmiBlitz3.ab3@23673>   MOVE.l #$1,$4(A2)
00032000 <AmiBlitz3.ab3@23674>   MOVE.l #1,8(a2)
00032004 <AmiBlitz3.ab3@23675>   MOVEM.l (a7)+,a0-a6/d0-d7
0003200A <AmiBlitz3.ab3@23678>   LEA inctab,a0
0003200C <AmiBlitz3.ab3@23679>   MOVEQ #0,d1
00032012 <AmiBlitz3.ab3@23680>   MOVE.w ininclude,d1
00032016 <AmiBlitz3.ab3@23681>   CLR.l $0(a0,d1*4)
0003201C <AmiBlitz3.ab3@23683>   MOVEA.l passstack,A7
00032022 <AmiBlitz3.ab3@23684> JMP passnxt
00032028 <AmiBlitz3.ab3@23687> JUMP_dupmacerr  JMP dupmacerr
0003202E <AmiBlitz3.ab3@23688> JUMP_macenderr  JMP macenderr
00032034 <AmiBlitz3.ab3@23689> JUMP_macnesterr JMP macnesterr
00032036 <AmiBlitz3.ab3@23692> coolnest:   Ds.w 1
0003203A <AmiBlitz3.ab3@23693> macline:    Ds.l 1
00032044 <AmiBlitz3.ab3@23699>   MOVE.l linenumat,macline
00032048 <AmiBlitz3.ab3@23701>    BSR.w makename2
0003204C <AmiBlitz3.ab3@23702>    BEQ.w JUMP_syntaxerr
00032052 <AmiBlitz3.ab3@23704>    CLR.b thenmode
0003205C <AmiBlitz3.ab3@23708>    MOVE.w oldqflag,instringon
00032062 <AmiBlitz3.ab3@23709>   MOVEA.l lastsourcepos,A5
00032066 <AmiBlitz3.ab3@23711>    BSR.w findmac
0003206A <AmiBlitz3.ab3@23712>    BEQ.w JUMP_dupmacerr
0003206E <AmiBlitz3.ab3@23713>    BSR.w addlabel
00032072 <AmiBlitz3.ab3@23714>   CLR.w $A(A2)
00032078 <AmiBlitz3.ab3@23715>   MOVEA.l ptr_macrobuffer_begin,A0
0003207A <AmiBlitz3.ab3@23716>   MOVEQ.l #$00,D2     ;flag for nothing got yet!
00032080 <AmiBlitz3.ab3@23717>   CLR.w coolnest
00032082 <AmiBlitz3.ab3@23721>   MOVE.b (a5),d0
00032086 <AmiBlitz3.ab3@23722>      BEQ 'l3
0003208A <AmiBlitz3.ab3@23723>      CMP.b #" ",d0
0003208E <AmiBlitz3.ab3@23724>       BNE 'l2                                              ;space macro
00032090 <AmiBlitz3.ab3@23725>       ADDQ.l #1,a5
00032094 <AmiBlitz3.ab3@23726>  BRA 'l1
00032098 <AmiBlitz3.ab3@23729>    CMP.b #";",d0
0003209C <AmiBlitz3.ab3@23730>       BNE 'l3
0003209E <AmiBlitz3.ab3@23733>    MOVE.b (a5),d0
000320A2 <AmiBlitz3.ab3@23734>       BEQ 'l5
000320A6 <AmiBlitz3.ab3@23735>       BSR.w macputb                                      ;add comment
000320A8 <AmiBlitz3.ab3@23736>       ADDQ.l #1,a5
000320AC <AmiBlitz3.ab3@23737>  BRA 'l4
000320B0 <AmiBlitz3.ab3@23740>    MOVE.b #":",d0
000320B4 <AmiBlitz3.ab3@23741>       BSR.w macputb
000320B8 <AmiBlitz3.ab3@23742>       MOVE.b #"@",d0
000320BC <AmiBlitz3.ab3@23743>       BSR.w macputb
000320C4 <AmiBlitz3.ab3@23746>    MOVE.b #0,temp
000320CC <AmiBlitz3.ab3@23747>       MOVE.b #0,thenmode
000320D2 <AmiBlitz3.ab3@23750>   JSR getcharb   ;get next character
000320D4 <AmiBlitz3.ab3@23752>   TST.w D0
000320D8 <AmiBlitz3.ab3@23753>    BNE.w 'skip
000320DC <AmiBlitz3.ab3@23754>   MOVEM.l D2/A0/A2,-(A7)
000320E2 <AmiBlitz3.ab3@23756>   CMP.w #"@@",-3(a5)
000320E6 <AmiBlitz3.ab3@23757>   BNE 'l2a
000320EC <AmiBlitz3.ab3@23758>   JSR nextline
000320F0 <AmiBlitz3.ab3@23759>   BEQ.w JUMP_macenderr
000320F4 <AmiBlitz3.ab3@23760>   MOVEM.l (A7)+,D2/A0/A2
000320F8 <AmiBlitz3.ab3@23761>  BRA.w 'gather
000320FE <AmiBlitz3.ab3@23765>    JSR nextline
00032102 <AmiBlitz3.ab3@23766>    BEQ.w JUMP_macenderr
00032106 <AmiBlitz3.ab3@23767>   MOVEM.l (A7)+,D2/A0/A2
00032108 <AmiBlitz3.ab3@23768>   TST.w D2
0003210C <AmiBlitz3.ab3@23769>    BEQ.w 'gather
0003210E <AmiBlitz3.ab3@23773>   MOVE.b (a5),d0
00032112 <AmiBlitz3.ab3@23774>       CMP.b #" ",d0
00032116 <AmiBlitz3.ab3@23775>       BNE 'l1a
00032118 <AmiBlitz3.ab3@23776>       ADDQ.w #1,a5
0003211C <AmiBlitz3.ab3@23777>  BRA 'l2b
00032122 <AmiBlitz3.ab3@23780>   TST.b thenmode
00032126 <AmiBlitz3.ab3@23781>      BEQ 'l3a
00032128 <AmiBlitz3.ab3@23782>      MOVEQ #":",d0
0003212C <AmiBlitz3.ab3@23783>      BSR.w macputb
00032130 <AmiBlitz3.ab3@23784>      MOVE.w #-$7FFE,D0                                     ;write end if
00032134 <AmiBlitz3.ab3@23785>      BSR macputw
00032138 <AmiBlitz3.ab3@23786>      MOVE.w #$800b,d0
0003213C <AmiBlitz3.ab3@23787>      BSR.w macputw
00032142 <AmiBlitz3.ab3@23788>      CLR.b thenmode
00032144 <AmiBlitz3.ab3@23792>    MOVEQ.l #$3A,D0
0003214C <AmiBlitz3.ab3@23794>      MOVE.b #1,temp
00032150 <AmiBlitz3.ab3@23797>  BRA.w 'notend2
00032154 <AmiBlitz3.ab3@23800>   BPL.w 'notend2
00032158 <AmiBlitz3.ab3@23801>   CMP.w #-$7FF3,D0         ; was #$800d                                ;macro ?
0003215C <AmiBlitz3.ab3@23802>    BNE.w 'notamac
00032162 <AmiBlitz3.ab3@23803>   ADDQ.w #1,coolnest
00032166 <AmiBlitz3.ab3@23804>  BRA.w 'notend
0003216A <AmiBlitz3.ab3@23808>   CMP.w #$80d7,d0                                          ;object ?
0003216E <AmiBlitz3.ab3@23809>     BNE 'l1x
00032174 <AmiBlitz3.ab3@23810>     TST.b objectcount
00032178 <AmiBlitz3.ab3@23811>     BNE JUMP_macnesterr
0003217C <AmiBlitz3.ab3@23814>   CMP.w #$8021,d0
00032180 <AmiBlitz3.ab3@23815>     BNE 'nothen
00032188 <AmiBlitz3.ab3@23816>     MOVE.b #1,thenmode
0003218E <AmiBlitz3.ab3@23819>   TST.b thenmode
00032192 <AmiBlitz3.ab3@23820>         BEQ 'l1c
00032196 <AmiBlitz3.ab3@23821>    CMP.w #$8002,d0                                         ;end if
0003219A <AmiBlitz3.ab3@23822>    BNE 'l1c
0003219E <AmiBlitz3.ab3@23823>    MOVEM.l d0/a5,-(a7)
000321A4 <AmiBlitz3.ab3@23824>    JSR get1bytemain
000321A6 <AmiBlitz3.ab3@23825>    MOVE.w d0,d1
000321AA <AmiBlitz3.ab3@23826>    MOVEM.l (a7)+,a5/d0
000321AE <AmiBlitz3.ab3@23827>    CMP.w #$800b,d1
000321B2 <AmiBlitz3.ab3@23828>    BNE 'l1c
000321B8 <AmiBlitz3.ab3@23829>    CLR.b thenmode
000321BC <AmiBlitz3.ab3@23833>    CMP.w #-$7FFE,D0   ; was #$8002                                     ;end ?
000321C0 <AmiBlitz3.ab3@23834>    BNE.w 'notend
000321C2 <AmiBlitz3.ab3@23836>    MOVE.l a5,-(a7)
000321C8 <AmiBlitz3.ab3@23837>    JSR get1bytemain
000321CA <AmiBlitz3.ab3@23838>    MOVE.l (a7)+,a5
000321CC <AmiBlitz3.ab3@23839>    TST.w d0
000321D0 <AmiBlitz3.ab3@23840>    BEQ 'doend
000321D4 <AmiBlitz3.ab3@23841>    CMP.w #":",d0
000321D8 <AmiBlitz3.ab3@23842>    BEQ 'doend
000321DC <AmiBlitz3.ab3@23843>    CMP.w #";",d0
000321E0 <AmiBlitz3.ab3@23844>    BEQ 'doend
000321E2 <AmiBlitz3.ab3@23845>    MOVE.l a5,-(a7)
000321E8 <AmiBlitz3.ab3@23846>    JSR get1bytemain
000321EC <AmiBlitz3.ab3@23847>    MOVE.l -1(a5),d0
000321EE <AmiBlitz3.ab3@23848>    MOVE.l (a7)+,a5
000321F4 <AmiBlitz3.ab3@23849>    CMP.l #"noa7",d0
000321F8 <AmiBlitz3.ab3@23850>    BEQ 'doend
000321FC <AmiBlitz3.ab3@23851>  BRA 'morechar
00032200 <AmiBlitz3.ab3@23854>   MOVE.w #$8002,D0
00032204 <AmiBlitz3.ab3@23855>    BSR.w macputw
00032208 <AmiBlitz3.ab3@23856>  BRA 'gather
0003220E <AmiBlitz3.ab3@23860>   JSR get1bytemain
00032212 <AmiBlitz3.ab3@23861>    CMP.w #-$7FF3,D0        ;was #$800d,                                ;end macro
00032216 <AmiBlitz3.ab3@23863>    BEQ.w 'lo1
0003221A <AmiBlitz3.ab3@23864>   CMP.w #$80d7,d0                                          ;end object
0003221E <AmiBlitz3.ab3@23866>   BNE 'notem
00032224 <AmiBlitz3.ab3@23868>   SUBQ.b #1,objectcount
0003222A <AmiBlitz3.ab3@23869>   TST.b developobject
0003222E <AmiBlitz3.ab3@23870>   BEQ 'lo1
00032232 <AmiBlitz3.ab3@23871>   BSR skiprest
00032234 <AmiBlitz3.ab3@23872>  RTS
0003223A <AmiBlitz3.ab3@23876>   SUBQ.w #1,coolnest
0003223E <AmiBlitz3.ab3@23877>    BMI.w 'macdone
00032240 <AmiBlitz3.ab3@23880>   MOVE.w D0,-(A7)
00032244 <AmiBlitz3.ab3@23881>   MOVE.w #$8002,D0
00032248 <AmiBlitz3.ab3@23882>    BSR.w macputw
0003224A <AmiBlitz3.ab3@23883>   MOVE.w (A7)+,D0
0003224E <AmiBlitz3.ab3@23884>  BRA.w 'notend
00032252 <AmiBlitz3.ab3@23887>   BSR.w macputw
00032256 <AmiBlitz3.ab3@23888>  BRA.w 'gather
0003225C <AmiBlitz3.ab3@23892>     CMP.w #"@@",-1(a5)                                     ;merge lines
00032260 <AmiBlitz3.ab3@23893>     BNE 'no
00032264 <AmiBlitz3.ab3@23894>      MOVEM.l D2/A0/A2,-(A7)
0003226A <AmiBlitz3.ab3@23895>    JSR nextline
0003226E <AmiBlitz3.ab3@23896>    BEQ.w JUMP_macenderr
00032272 <AmiBlitz3.ab3@23897>   MOVEM.l (A7)+,D2/A0/A2
00032274 <AmiBlitz3.ab3@23898>     TST.w D2
00032278 <AmiBlitz3.ab3@23899>    BEQ.w 'gather
0003227C <AmiBlitz3.ab3@23900>  BRA 'gather
00032280 <AmiBlitz3.ab3@23904>   BSR.w macputb
00032284 <AmiBlitz3.ab3@23905>  BRA.w 'gather
00032286 <AmiBlitz3.ab3@23908>   ADDQ.w #4,A7
00032288 <AmiBlitz3.ab3@23909>   MOVE.l A0,D0
0003228E <AmiBlitz3.ab3@23910>   SUB.l ptr_macrobuffer_begin,D0
00032292 <AmiBlitz3.ab3@23916>    BEQ.w 'cdone
00032296 <AmiBlitz3.ab3@23917>   CMPI.b #":",-(A0)
0003229A <AmiBlitz3.ab3@23918>    BNE.w 'cdone
0003229E <AmiBlitz3.ab3@23919>   CMP.w #$1,D0
000322A2 <AmiBlitz3.ab3@23920>    BEQ.w 'cdo
000322A6 <AmiBlitz3.ab3@23921>   TST.b -$1(A0)
000322AA <AmiBlitz3.ab3@23922>    BMI.w 'cdone
000322AC <AmiBlitz3.ab3@23925>   SUBQ.w #1,D0
000322B0 <AmiBlitz3.ab3@23926>  BRA.w 'mclean
000322B4 <AmiBlitz3.ab3@23929>   MOVE.w D0,$8(A2)
000322B8 <AmiBlitz3.ab3@23930>    BEQ.w 'skip2
000322BA <AmiBlitz3.ab3@23931>   MOVEQ.l #$01,D1
000322C0 <AmiBlitz3.ab3@23932>   MOVEA.l _execbase,A6
000322C6 <AmiBlitz3.ab3@23934>   MOVE.l mempool,a0
000322CA <AmiBlitz3.ab3@23935>   JSR _AllocPooled(a6)
000322CC <AmiBlitz3.ab3@23938>   MOVEA.l D0,A0
000322D0 <AmiBlitz3.ab3@23939>   MOVE.l A0,$4(A2)
000322D4 <AmiBlitz3.ab3@23940>   MOVE.w $8(A2),D1
000322D8 <AmiBlitz3.ab3@23941>    BEQ.w 'skip2
000322DA <AmiBlitz3.ab3@23942>   SUBQ.w #1,D1
000322E0 <AmiBlitz3.ab3@23943>   MOVEA.l ptr_macrobuffer_begin,A1
000322E2 <AmiBlitz3.ab3@23946>     MOVE.b (A1)+,(A0)+
000322E6 <AmiBlitz3.ab3@23947>   DBF D1,'lll
000322EC <AmiBlitz3.ab3@23950> JMP get1bytemain
000322EE <AmiBlitz3.ab3@23954>   MOVE.w D0,D1
000322F0 <AmiBlitz3.ab3@23955>   LSR.w #8,D1
000322F2 <AmiBlitz3.ab3@23956>   MOVE.b D1,(A0)+
000322F4 <AmiBlitz3.ab3@23959>   MOVEQ.l #-$01,D2
000322F6 <AmiBlitz3.ab3@23960>   MOVE.b D0,(A0)+
000322FC <AmiBlitz3.ab3@23961>   CMPA.l ptr_macrobuffer_end,A0
00032300 <AmiBlitz3.ab3@23962>    BCC.w macbigerr2
00032302 <AmiBlitz3.ab3@23963> RTS
00032308 <AmiBlitz3.ab3@23966> macbigerr2 JMP macbigerr
0003230A <AmiBlitz3.ab3@23970>   MOVE.l d0,-(a7)
0003230C <AmiBlitz3.ab3@23971>   MOVEQ #0,d0
00032312 <AmiBlitz3.ab3@23972>   CLR.b skiptoggle
00032314 <AmiBlitz3.ab3@23975>     MOVE.b (a5),d0
00032318 <AmiBlitz3.ab3@23976>     BEQ 'l3
0003231C <AmiBlitz3.ab3@23977>     CMP.b #";",d0
00032320 <AmiBlitz3.ab3@23978>     BNE 'l2
00032328 <AmiBlitz3.ab3@23979>     MOVE.b #1,skiptoggle
0003232E <AmiBlitz3.ab3@23982>     TST.b skiptoggle
00032332 <AmiBlitz3.ab3@23983>     BNE 'l4
00032336 <AmiBlitz3.ab3@23984>     CMP.b #":",d0
0003233A <AmiBlitz3.ab3@23985>     BEQ 'l3
0003233C <AmiBlitz3.ab3@23988>     ADDQ #1,a5
00032340 <AmiBlitz3.ab3@23989>  BRA 'loop
00032346 <AmiBlitz3.ab3@23992>   MOVE.w d0,lastchar
00032348 <AmiBlitz3.ab3@23993>   MOVE.l (a7)+,d0
0003234A <AmiBlitz3.ab3@23994> RTS
0003234E <AmiBlitz3.ab3@24001>   BSR.w ifchar
00032352 <AmiBlitz3.ab3@24002>    BNE.w JUMP_syntaxerr
00032354 <AmiBlitz3.ab3@24003>   MOVE.w D0,D1
0003235A <AmiBlitz3.ab3@24004>   JSR get1bytemain
0003235E <AmiBlitz3.ab3@24005>   BSR.w ifchar
00032362 <AmiBlitz3.ab3@24006>    BNE.w 'skip
00032364 <AmiBlitz3.ab3@24007>   ADDQ.w #1,D0
00032366 <AmiBlitz3.ab3@24008>   MOVE.w D0,D2
00032368 <AmiBlitz3.ab3@24009>   ADD.w D0,D0
0003236A <AmiBlitz3.ab3@24010>   ADD.w D2,D0
0003236C <AmiBlitz3.ab3@24011>   ADD.w D0,D1
0003236E <AmiBlitz3.ab3@24012>   MOVE.w D1,D0
00032372 <AmiBlitz3.ab3@24013>   ANDI.w #$3,D0
00032376 <AmiBlitz3.ab3@24014>   CMP.w #$3,D0
0003237A <AmiBlitz3.ab3@24015>    BEQ.w JUMP_syntaxerr
00032380 <AmiBlitz3.ab3@24017>   JSR get1bytemain
00032382 <AmiBlitz3.ab3@24020> RTS
00032384 <AmiBlitz3.ab3@24023> thetst1:  TST.b D0
00032386 <AmiBlitz3.ab3@24024> thetst2:  TST.w D0
00032388 <AmiBlitz3.ab3@24025> thetst3:  TST.l D0
0003238A <AmiBlitz3.ab3@24026> thetst4:  TST.l (A7)+                                      ;Any Length?
0003238E <AmiBlitz3.ab3@24027> thetst5:  JSR _Reschedule(A6)
00032392 <AmiBlitz3.ab3@24029> posbr:    BEQ.w posbr
00032396 <AmiBlitz3.ab3@24030> negbr:    BNE.w negbr
00032398 <AmiBlitz3.ab3@24034>   MOVEQ.l #-$01,D2
0003239C <AmiBlitz3.ab3@24035> BRA.w doifm
000323A2 <AmiBlitz3.ab3@24039>   CLR.l fp0addr
000323A4 <AmiBlitz3.ab3@24040>   MOVEQ.l #$01,D1                                          ;while flag
000323A6 <AmiBlitz3.ab3@24041>   MOVEQ.l #$00,D2                                          ;negate flag
000323AA <AmiBlitz3.ab3@24042> BRA.w doif2
000323B0 <AmiBlitz3.ab3@24046>   LEA firstrep,A2
000323B2 <AmiBlitz3.ab3@24047>   MOVEQ.l #$08,D2
000323B6 <AmiBlitz3.ab3@24048> BRA.w freeslist
000323BA <AmiBlitz3.ab3@24052>   LEA firstsel(PC),A2
000323BC <AmiBlitz3.ab3@24053>   MOVEQ.l #$0E,D2
000323BE <AmiBlitz3.ab3@24058>   MOVEQ.l #$00,D3
000323C0 <AmiBlitz3.ab3@24066>   MOVE.l (A2),D0
000323C2 <AmiBlitz3.ab3@24067>   CLR.l (A2)
000323C4 <AmiBlitz3.ab3@24068>   MOVEA.l D0,A2
000323CA <AmiBlitz3.ab3@24069>   MOVEA.l _execbase,A6
000323CE <AmiBlitz3.ab3@24072>     CMPA.w #$0,A2
000323D2 <AmiBlitz3.ab3@24073>      BEQ.w 'done
000323D4 <AmiBlitz3.ab3@24074>     TST.w D3
000323D8 <AmiBlitz3.ab3@24075>      BEQ.w 'skip
000323DC <AmiBlitz3.ab3@24076>     MOVEM.l D2-D3/A2,-(A7)
000323DE <AmiBlitz3.ab3@24077>     ADDA.w D3,A2
000323E0 <AmiBlitz3.ab3@24078>     MOVE.l D4,D2
000323E4 <AmiBlitz3.ab3@24079>     BSR.w freeslist
000323E8 <AmiBlitz3.ab3@24080>     MOVEM.l (A7)+,D2-D3/A2
000323EA <AmiBlitz3.ab3@24083>     MOVEA.l A2,A1
000323EC <AmiBlitz3.ab3@24084>     MOVE.l D2,D0
000323EE <AmiBlitz3.ab3@24085>     MOVEA.l (A2),A2
000323F4 <AmiBlitz3.ab3@24086>     MOVE.l mempool,a0
000323F8 <AmiBlitz3.ab3@24087>     JSR _FreePooled(A6)
000323FC <AmiBlitz3.ab3@24088>  BRA.w 'loop
000323FE <AmiBlitz3.ab3@24091> RTS
00032404 <AmiBlitz3.ab3@24093> JUMP_eselerr JMP eselerr
00032408 <AmiBlitz3.ab3@24096> firstsel:  Ds.l 1
0003240C <AmiBlitz3.ab3@24099> selpushb:   Dc.b $02,$40,$00,$FF                           ;ANDI.W  #$00FF,D0
0003240E <AmiBlitz3.ab3@24102> selpushw:   MOVE.w D0,-(A7)
00032410 <AmiBlitz3.ab3@24104> selpushl:   MOVE.l D0,-(A7)
00032414 <AmiBlitz3.ab3@24106> selpushs:   LEA $4(A7),A2                                  ;(a7)=len of string!
00032418 <AmiBlitz3.ab3@24109> selcomb:    ANDI.w #$FF,D0
0003241A <AmiBlitz3.ab3@24110> selcomw:    CMP.w (A7),D0
0003241C <AmiBlitz3.ab3@24112> selcoml:    CMP.l (A7),D0
00032420 <AmiBlitz3.ab3@24114> selbne:     BNE.w selbne
00032422 <AmiBlitz3.ab3@24116> endsel:     ADDQ.w #8,A7
00032426 <AmiBlitz3.ab3@24122>   MOVE.l firstsel(PC),D0                                  
0003242A <AmiBlitz3.ab3@24123>    BEQ.w JUMP_eselerr
0003242C <AmiBlitz3.ab3@24124>   MOVEA.l D0,A2
00032430 <AmiBlitz3.ab3@24125>    BSR.w fillbne
00032436 <AmiBlitz3.ab3@24128>   MOVEA.l _execbase,A6
0003243A <AmiBlitz3.ab3@24131>   MOVE.l $4(A2),D0
0003243E <AmiBlitz3.ab3@24132>    BEQ.w 'done
00032440 <AmiBlitz3.ab3@24133>   MOVEA.l D0,A3
00032444 <AmiBlitz3.ab3@24134>   MOVEA.l $4(A3),A0
0003244A <AmiBlitz3.ab3@24135>   MOVE.l destpointer,D1
0003244C <AmiBlitz3.ab3@24136>   SUB.l A0,D1
00032452 <AmiBlitz3.ab3@24138>     TST.b fast
00032456 <AmiBlitz3.ab3@24139>     BEQ 'loop_l1
0003245C <AmiBlitz3.ab3@24140>     MOVE.w dontwrite_nomemleft,D0
00032460 <AmiBlitz3.ab3@24141>     BNE.w 'skip
00032462 <AmiBlitz3.ab3@24142>     ADDQ.l #2,d1
00032466 <AmiBlitz3.ab3@24143>     MOVE.l d1,-2(a0)
0003246A <AmiBlitz3.ab3@24144>   BRA 'skip
00032470 <AmiBlitz3.ab3@24148>   TST.w dontwrite_nomemleft
00032474 <AmiBlitz3.ab3@24149>      BNE.w 'skip
0003247A <AmiBlitz3.ab3@24150>   CMP.l #MaxWordSgnd,D1
0003247E <AmiBlitz3.ab3@24151>    BHI.w JUMP_cbraerr
00032480 <AmiBlitz3.ab3@24152>   MOVE.w D1,(A0)
00032484 <AmiBlitz3.ab3@24155>   MOVE.l (A3),$4(A2)                                       ;next of me is new first
00032486 <AmiBlitz3.ab3@24156>   MOVEA.l A3,A1
00032488 <AmiBlitz3.ab3@24157>   MOVEQ.l #$08,D0
0003248E <AmiBlitz3.ab3@24158>   MOVE.l mempool,a0
00032492 <AmiBlitz3.ab3@24159>    JSR _FreePooled(A6)
00032496 <AmiBlitz3.ab3@24160>  BRA.w 'loop
0003249C <AmiBlitz3.ab3@24163>   JSR popselect                                            ;fix stack on select
000324A0 <AmiBlitz3.ab3@24164>   MOVEA.l firstsel(PC),A1
000324A6 <AmiBlitz3.ab3@24165>   MOVE.l (A1),firstsel
000324A8 <AmiBlitz3.ab3@24166>   MOVEQ.l #$0E,D0
000324AE <AmiBlitz3.ab3@24167>   MOVEA.l _execbase,A6
000324B4 <AmiBlitz3.ab3@24168>   MOVE.l mempool,a0
000324B8 <AmiBlitz3.ab3@24169>   JSR _FreePooled(A6)
000324BE <AmiBlitz3.ab3@24170> JMP get1bytemain
000324C0 <AmiBlitz3.ab3@24174>   MOVEA.l (A7)+,A1
000324C2 <AmiBlitz3.ab3@24175>   SUBQ.w #8,A1
000324C4 <AmiBlitz3.ab3@24176>   MOVEQ.l #$09,D0
000324C6 <AmiBlitz3.ab3@24177>   ADD.l (A1),D0
000324C8 <AmiBlitz3.ab3@24180>   ADDQ.w #2,A7                                             ;for runtime errs!
000324CC <AmiBlitz3.ab3@24185>   MOVE.l firstsel(PC),D0
000324D0 <AmiBlitz3.ab3@24186>    BEQ.w JUMP_defaerr
000324D2 <AmiBlitz3.ab3@24187>   MOVEA.l D0,A2
000324D6 <AmiBlitz3.ab3@24188>   BSR.w fillbra
000324DA <AmiBlitz3.ab3@24189>   BSR.w fillbne
000324DE <AmiBlitz3.ab3@24190>   CLR.l $8(A2)
000324E2 <AmiBlitz3.ab3@24191>   MOVE.w $C(A2),D2
000324E6 <AmiBlitz3.ab3@24192> BRA.w casechk
000324EC <AmiBlitz3.ab3@24194> JUMP_defaerr JMP defaerr
000324F0 <AmiBlitz3.ab3@24199>   MOVE.l $8(A2),D0
000324F4 <AmiBlitz3.ab3@24200>    BEQ.w 'skip   ;none to do!
000324F6 <AmiBlitz3.ab3@24201>   MOVEA.l D0,A0
000324FC <AmiBlitz3.ab3@24202>   MOVE.l destpointer,D1
000324FE <AmiBlitz3.ab3@24203>   SUB.l A0,D1
00032504 <AmiBlitz3.ab3@24206>     TST.b fast
00032508 <AmiBlitz3.ab3@24207>     BEQ 'l1
0003250E <AmiBlitz3.ab3@24208>     TST.w dontwrite_nomemleft
00032512 <AmiBlitz3.ab3@24209>     BNE.w 'skip
00032514 <AmiBlitz3.ab3@24210>     ADDQ.l #2,d1
00032518 <AmiBlitz3.ab3@24211>     MOVE.l D1,-2(A0)
0003251C <AmiBlitz3.ab3@24212>   BRA 'skip
00032522 <AmiBlitz3.ab3@24216>   TST.w dontwrite_nomemleft
00032526 <AmiBlitz3.ab3@24217>      BNE.w 'skip
0003252C <AmiBlitz3.ab3@24219>    CMP.l #MaxWordSgnd,D1
00032530 <AmiBlitz3.ab3@24220>    BHI.w JUMP_cbraerr
00032532 <AmiBlitz3.ab3@24221>   MOVE.w D1,(A0)
00032534 <AmiBlitz3.ab3@24224> RTS
0003253A <AmiBlitz3.ab3@24226> JUMP_cbraerr JMP cbraerr
0003253E <AmiBlitz3.ab3@24232>   MOVE.l $8(A2),D0
00032542 <AmiBlitz3.ab3@24233>    BEQ.w 'skip
00032544 <AmiBlitz3.ab3@24237>   MOVEA.l D0,A3
00032548 <AmiBlitz3.ab3@24238>   MOVE.w #$6000,D1
0003254E <AmiBlitz3.ab3@24241>    TST.b fast
00032552 <AmiBlitz3.ab3@24242>    BEQ 'l1
00032558 <AmiBlitz3.ab3@24243>    OR.l #$ff,d1
0003255C <AmiBlitz3.ab3@24244>    BSR writeword
00032560 <AmiBlitz3.ab3@24249>   BSR.w writeword
00032562 <AmiBlitz3.ab3@24250>   MOVEQ.l #$08,D0
00032564 <AmiBlitz3.ab3@24251>   MOVEQ.l #$01,D1
0003256A <AmiBlitz3.ab3@24252>   MOVEA.l _execbase,A6
00032570 <AmiBlitz3.ab3@24254>   MOVE.l mempool,a0
00032574 <AmiBlitz3.ab3@24255>   JSR _AllocPooled(a6)
00032576 <AmiBlitz3.ab3@24258>   MOVEA.l D0,A0
0003257A <AmiBlitz3.ab3@24259>   MOVE.l $4(A2),(A0)
0003257E <AmiBlitz3.ab3@24260>   MOVE.l A0,$4(A2)
00032586 <AmiBlitz3.ab3@24261>   MOVE.l destpointer,$4(A0)
0003258A <AmiBlitz3.ab3@24262>  BRA.w writeword
0003258C <AmiBlitz3.ab3@24265> RTS
00032592 <AmiBlitz3.ab3@24269>   TST.b debugmode
00032596 <AmiBlitz3.ab3@24270>    BEQ.w 'norerr
0003259A <AmiBlitz3.ab3@24271>   MOVE.w #$C313,D1
0003259E <AmiBlitz3.ab3@24272>   CMP.w #$3,D2
000325A2 <AmiBlitz3.ab3@24273>    BCS.w 'dochk
000325A4 <AmiBlitz3.ab3@24274>   ADDQ.w #1,D1
000325A8 <AmiBlitz3.ab3@24277>  BRA.w Atokejsr
000325AA <AmiBlitz3.ab3@24280> RTS
000325B0 <AmiBlitz3.ab3@24283> JUMP_caseerr JMP caseerr
000325B4 <AmiBlitz3.ab3@24290>   MOVE.l firstsel(PC),D0
000325B8 <AmiBlitz3.ab3@24291>    BEQ.w JUMP_caseerr
000325BA <AmiBlitz3.ab3@24292>   MOVEA.l D0,A2
000325BE <AmiBlitz3.ab3@24293>    BSR.w fillbra
000325C2 <AmiBlitz3.ab3@24294>    BSR.w fillbne
000325C6 <AmiBlitz3.ab3@24296>   MOVE.w $C(A2),D2    ;type to get!
000325C8 <AmiBlitz3.ab3@24297>   MOVE.w D2,-(A7)
000325CC <AmiBlitz3.ab3@24298>    BSR.w casechk
000325CE <AmiBlitz3.ab3@24299>   MOVE.w (A7),D2
000325D2 <AmiBlitz3.ab3@24302>    BSR.w bakeval
000325D4 <AmiBlitz3.ab3@24303>   MOVE.w (A7)+,D2    ;types to compare
000325D8 <AmiBlitz3.ab3@24304>   LEA selcomb(PC),A0
000325DC <AmiBlitz3.ab3@24305>   LEA selcombf(PC),A1
000325E0 <AmiBlitz3.ab3@24306>   CMP.w #$1,D2
000325E4 <AmiBlitz3.ab3@24307>    BEQ.w 'doit
000325E8 <AmiBlitz3.ab3@24308>   LEA selcomw(PC),A0
000325EC <AmiBlitz3.ab3@24309>   CMP.w #$2,D2
000325F0 <AmiBlitz3.ab3@24310>    BEQ.w 'doit
000325F4 <AmiBlitz3.ab3@24311>   LEA selcoml(PC),A0
000325F8 <AmiBlitz3.ab3@24312>   LEA selcomlf(PC),A1
000325FC <AmiBlitz3.ab3@24313>   CMP.w #$7,D2
00032600 <AmiBlitz3.ab3@24314>    BCS.w 'doit
00032604 <AmiBlitz3.ab3@24316>   MOVE.w #$CE01,D1     ; was #casestrcomp
00032608 <AmiBlitz3.ab3@24317>    BSR.w Atokejsr
0003260C <AmiBlitz3.ab3@24318>  BRA.w 'doneit
00032610 <AmiBlitz3.ab3@24321>   BSR.w pokecode
00032614 <AmiBlitz3.ab3@24324>   MOVE.w selbne(PC),D1
0003261A <AmiBlitz3.ab3@24327>     TST.b fast
0003261E <AmiBlitz3.ab3@24328>     BEQ 'l1
00032624 <AmiBlitz3.ab3@24329>     ORI.l #$ff,d1
00032628 <AmiBlitz3.ab3@24330>     BSR writeword
0003262C <AmiBlitz3.ab3@24335>   BSR.w writeword
00032630 <AmiBlitz3.ab3@24336>   MOVEA.l firstsel(PC),A0
00032638 <AmiBlitz3.ab3@24337>   MOVE.l destpointer,$8(A0)
0003263C <AmiBlitz3.ab3@24338> BRA.w writeword
00032640 <AmiBlitz3.ab3@24342> pcchk:      Dc.b $3F,$3C,$73,$45                           ;MOVE.W  #$7345,-(A7)   ;#"sE",-(a7) org source
00032642 <AmiBlitz3.ab3@24343> clrst:      Dc.b $42,$A7                                   ;CLR.L   -(A7)
00032646 <AmiBlitz3.ab3@24346> sellineat:  Ds.l 1
0003264C <AmiBlitz3.ab3@24352>   TST.b debugmode
00032650 <AmiBlitz3.ab3@24353>    BEQ.w 'norerr
00032654 <AmiBlitz3.ab3@24354>   MOVE.l pcchk(PC),D1                                      ;move #"sE",-(a7)
00032658 <AmiBlitz3.ab3@24355>    BSR.w writelong
00032662 <AmiBlitz3.ab3@24358>   MOVE.l linenumat,sellineat
0003266C <AmiBlitz3.ab3@24361>    MOVE.l destpointer,pushpc
00032676 <AmiBlitz3.ab3@24362>   MOVE.l hunkoffsetbase,pushoff
00032678 <AmiBlitz3.ab3@24364>   MOVEQ.l #$00,D2
0003267C <AmiBlitz3.ab3@24365>    BSR.w bakevalu                                          ;Evaluate
00032680 <AmiBlitz3.ab3@24366>    BSR.w pushdo
00032684 <AmiBlitz3.ab3@24367>   CMP.w #$7,D2
00032688 <AmiBlitz3.ab3@24368>    BNE.w 'nos
0003268C <AmiBlitz3.ab3@24369>   MOVE.w clrst(PC),D1
00032690 <AmiBlitz3.ab3@24370>    BSR.w writeword
00032694 <AmiBlitz3.ab3@24373>    BSR.w pushput
00032698 <AmiBlitz3.ab3@24374>   LEA selpushb(PC),A0
0003269C <AmiBlitz3.ab3@24375>   LEA selpushbf(PC),A1
000326A0 <AmiBlitz3.ab3@24376>   CMP.w #$1,D2
000326A4 <AmiBlitz3.ab3@24377>    BEQ.w 'doit
000326A8 <AmiBlitz3.ab3@24378>   LEA selpushw(PC),A0
000326AC <AmiBlitz3.ab3@24379>   CMP.w #$2,D2
000326B0 <AmiBlitz3.ab3@24380>    BEQ.w 'doit
000326B4 <AmiBlitz3.ab3@24381>   LEA selpushl(PC),A0
000326B8 <AmiBlitz3.ab3@24382>   LEA selpushlf(PC),A1
000326BC <AmiBlitz3.ab3@24383>   CMP.w #$7,D2
000326C0 <AmiBlitz3.ab3@24384>    BCS.w 'doit
000326C6 <AmiBlitz3.ab3@24386>   MOVE.w moved0a3,D1                                       ;d0 to a3!
000326CA <AmiBlitz3.ab3@24387>    BSR.w writeword
000326CE <AmiBlitz3.ab3@24388>   LEA selpushs(PC),A0
000326D2 <AmiBlitz3.ab3@24389>   LEA selpushsf(PC),A1
000326D6 <AmiBlitz3.ab3@24390>    BSR.w pokecode
000326DA <AmiBlitz3.ab3@24391>   MOVE.w #$C701,D1     ; was #astring
000326DE <AmiBlitz3.ab3@24392>    BSR.w Atokejsr
000326E2 <AmiBlitz3.ab3@24393>  BRA.w 'doneit
000326E6 <AmiBlitz3.ab3@24396>   BSR.w pokecode
000326E8 <AmiBlitz3.ab3@24399>   MOVEQ.l #$0E,D0
000326EA <AmiBlitz3.ab3@24400>   MOVEQ.l #$01,D1
000326F0 <AmiBlitz3.ab3@24401>   MOVEA.l _execbase,A6
000326F6 <AmiBlitz3.ab3@24404>   MOVE.l mempool,a0
000326FA <AmiBlitz3.ab3@24405>   JSR _AllocPooled(a6)
000326FC <AmiBlitz3.ab3@24407>   MOVEA.l D0,A0
00032700 <AmiBlitz3.ab3@24408>   MOVE.l firstsel(PC),(A0)
00032706 <AmiBlitz3.ab3@24409>   MOVE.l A0,firstsel
0003270A <AmiBlitz3.ab3@24410>   CLR.l $4(A0)
0003270E <AmiBlitz3.ab3@24411>   CLR.l $8(A0)        ;default mode!
00032712 <AmiBlitz3.ab3@24412>   MOVE.w D2,$C(A0)
00032714 <AmiBlitz3.ab3@24413> RTS
0003271A <AmiBlitz3.ab3@24417>   MOVE.l firstrep,D0
0003271E <AmiBlitz3.ab3@24418>    BEQ.w JUMP_unterr1
00032722 <AmiBlitz3.ab3@24419>   MOVE.w #$6000,D1      ;BRA
00032726 <AmiBlitz3.ab3@24420>   BSR.w writeword
00032728 <AmiBlitz3.ab3@24421>   MOVEA.l D0,A0
0003272C <AmiBlitz3.ab3@24422>   MOVE.l $4(A0),D1      ;dest pc
00032732 <AmiBlitz3.ab3@24423>   SUB.l destpointer,D1
00032734 <AmiBlitz3.ab3@24424>   TST.w D1
00032738 <AmiBlitz3.ab3@24425>    BPL.w JUMP_unterr2
0003273C <AmiBlitz3.ab3@24426>   BSR.w writeword
00032742 <AmiBlitz3.ab3@24427>   MOVEA.l _execbase,A6
00032746 <AmiBlitz3.ab3@24428> BRA.w unlinkrep
0003274C <AmiBlitz3.ab3@24430> JUMP_unterr2 JMP unterr2
00032752 <AmiBlitz3.ab3@24431> JUMP_unterr1 JMP unterr1
00032758 <AmiBlitz3.ab3@24435>   MOVE.l firstrep,D0
0003275C <AmiBlitz3.ab3@24436>    BEQ.w JUMP_unterr1    ;no repeat!
00032760 <AmiBlitz3.ab3@24437>   BSR.w do_if            ;do the until
00032766 <AmiBlitz3.ab3@24439>   JSR reget
0003276A <AmiBlitz3.ab3@24440>    BNE.w JUMP_syntaxerr
00032770 <AmiBlitz3.ab3@24442>   MOVE.w dontwrite_nomemleft,D1
00032774 <AmiBlitz3.ab3@24443>    BNE.w 'skip
0003277A <AmiBlitz3.ab3@24444>   MOVEA.l firstrep,A0
00032780 <AmiBlitz3.ab3@24445>   MOVEA.l destpointer,A1
00032786 <AmiBlitz3.ab3@24448>     TST.b fast
0003278A <AmiBlitz3.ab3@24449>     BEQ 'l1
0003278C <AmiBlitz3.ab3@24450>     SUBQ.w #4,a1
00032790 <AmiBlitz3.ab3@24451>     MOVE.l $4(A0),D2
00032792 <AmiBlitz3.ab3@24452>     SUB.l A1,D2
00032794 <AmiBlitz3.ab3@24453>     MOVE.l d2,(a1)
00032798 <AmiBlitz3.ab3@24454>   BRA 'skip
0003279A <AmiBlitz3.ab3@24459>   SUBQ.w #2,A1
0003279E <AmiBlitz3.ab3@24460>   MOVE.l $4(A0),D2    ;dest pc.
000327A0 <AmiBlitz3.ab3@24461>   SUB.l A1,D2
000327A2 <AmiBlitz3.ab3@24462>   TST.w D2
000327A6 <AmiBlitz3.ab3@24463>    BPL.w JUMP_unterr2
000327A8 <AmiBlitz3.ab3@24464>   MOVE.w D2,(A1)      ;put in pra dest.
000327AE <AmiBlitz3.ab3@24467>   MOVEA.l firstiff,A1
000327B4 <AmiBlitz3.ab3@24468>   MOVE.l (A1),firstiff
000327B6 <AmiBlitz3.ab3@24469>   MOVEQ.l #$0E,D0
000327BC <AmiBlitz3.ab3@24470>   MOVEA.l _execbase,A6
000327C2 <AmiBlitz3.ab3@24473>   MOVE.l mempool,a0
000327C6 <AmiBlitz3.ab3@24474>   JSR _FreePooled(A6)
000327CC <AmiBlitz3.ab3@24478>   MOVEA.l firstrep,A1
000327D2 <AmiBlitz3.ab3@24479>   MOVE.l (A1),firstrep
000327D4 <AmiBlitz3.ab3@24480>   MOVEQ.l #$08,D0
000327DA <AmiBlitz3.ab3@24483>   MOVE.l mempool,a0
000327DE <AmiBlitz3.ab3@24484> JMP _FreePooled(A6)
000327E2 <AmiBlitz3.ab3@24487> iflineat:   Ds.l 1
000327E4 <AmiBlitz3.ab3@24491>   MOVEQ.l #$00,D2   ;negate flag
000327EA <AmiBlitz3.ab3@24493>   TST.b fast
000327EE <AmiBlitz3.ab3@24494>   BEQ 'l1
000327F6 <AmiBlitz3.ab3@24495>   MOVE.b #1,nostringopt
000327FE <AmiBlitz3.ab3@24496>   MOVE.b #1,iniffcommand
00032800 <AmiBlitz3.ab3@24501>   MOVEQ.l #$00,D1  ;if flag
00032802 <AmiBlitz3.ab3@24507>   MOVE.w D1,-(A7)
00032808 <AmiBlitz3.ab3@24508>   MOVE.l destpointer,-(A7)
0003280A <AmiBlitz3.ab3@24509>   MOVE.w D2,-(A7)
00032814 <AmiBlitz3.ab3@24510>   MOVE.l linenumat,iflineat
00032816 <AmiBlitz3.ab3@24512>   MOVEQ.l #$00,D2
00032820 <AmiBlitz3.ab3@24514>   MOVE.b optistring,optistring2
00032828 <AmiBlitz3.ab3@24515>   MOVE.b #1,optistring
0003282C <AmiBlitz3.ab3@24517>   BSR.w bakevalu       ;Get True/False Expression!
00032836 <AmiBlitz3.ab3@24519>   MOVE.b optistring2,optistring
0003283A <AmiBlitz3.ab3@24521>   CMP.w #$5,D2
0003283E <AmiBlitz3.ab3@24522>    BEQ.w 'float
00032842 <AmiBlitz3.ab3@24523>   MOVE.w thetst1(PC),D1
00032846 <AmiBlitz3.ab3@24524>   CMP.w #$1,D2
0003284A <AmiBlitz3.ab3@24525>    BEQ.w 'writebranchcode
0003284E <AmiBlitz3.ab3@24526>   MOVE.w thetst2(PC),D1
00032852 <AmiBlitz3.ab3@24527>   CMP.w #$2,D2
00032856 <AmiBlitz3.ab3@24528>    BEQ.w 'writebranchcode
0003285A <AmiBlitz3.ab3@24529>   MOVE.w thetst4(PC),D1
0003285E <AmiBlitz3.ab3@24530>   CMP.w #$7,D2
00032862 <AmiBlitz3.ab3@24531>    BEQ.w 'writebranchcode
00032866 <AmiBlitz3.ab3@24532>   MOVE.w thetst3(PC),D1
0003286A <AmiBlitz3.ab3@24533>  BRA.w 'writebranchcode
00032870 <AmiBlitz3.ab3@24537>   TST.b fpu
00032874 <AmiBlitz3.ab3@24538>   BEQ 'dofpu
0003287A <AmiBlitz3.ab3@24539>   MOVE.l #$f200003a,d1
0003287E <AmiBlitz3.ab3@24540>   BSR writelong
00032882 <AmiBlitz3.ab3@24541>   MOVE.w #$f2c1,d1       
00032886 <AmiBlitz3.ab3@24542>   BSR writeword
0003288A <AmiBlitz3.ab3@24543>   BSR writelong
0003288C <AmiBlitz3.ab3@24544>   ADDQ.l #2,a7
00032890 <AmiBlitz3.ab3@24545>  BRA.w 'br2
00032894 <AmiBlitz3.ab3@24549>    MOVE.w #$C900,D1     ;was #getffpbase
00032898 <AmiBlitz3.ab3@24550>    BSR.w Atokejsr
0003289C <AmiBlitz3.ab3@24551>   MOVE.l thetst5(PC),D1
000328A0 <AmiBlitz3.ab3@24552>    BSR.w writelong
000328A4 <AmiBlitz3.ab3@24553>  BRA.w 'gotst2
000328AA <AmiBlitz3.ab3@24557>          CLR.b iniffcommand
000328B0 <AmiBlitz3.ab3@24558>          TST.b fast                                        ;branchcode
000328B4 <AmiBlitz3.ab3@24559>          BEQ 'b6
000328BA <AmiBlitz3.ab3@24560>          TST.b fpu
000328BE <AmiBlitz3.ab3@24561>          BEQ 'nofpu
000328C4 <AmiBlitz3.ab3@24565>           MOVE.l destpointer,a0
000328CA <AmiBlitz3.ab3@24566>          SUB.l load_var_addr,a0
000328D0 <AmiBlitz3.ab3@24567>          CMP.l #4,a0
000328D4 <AmiBlitz3.ab3@24568>          BEQ 'nofpu
000328DC <AmiBlitz3.ab3@24569>          CMP.l #$f2400014,-4(a4)                           ;<
000328E0 <AmiBlitz3.ab3@24570>          BNE 'nolt
000328E6 <AmiBlitz3.ab3@24571>          SUBQ.l #2,destpointer
000328EC <AmiBlitz3.ab3@24572>          MOVE.w #$f293,-4(a4)                              ;
000328F0 <AmiBlitz3.ab3@24573>  BRA 'brf
000328F8 <AmiBlitz3.ab3@24576>   CMP.l #$f2400015,-4(a4)                                  ;<=
000328FC <AmiBlitz3.ab3@24577>          BNE 'nole
00032902 <AmiBlitz3.ab3@24578>          SUBQ.l #2,destpointer
00032908 <AmiBlitz3.ab3@24579>          MOVE.w #$f292,-4(a4)
0003290C <AmiBlitz3.ab3@24580>  BRA 'brf
00032914 <AmiBlitz3.ab3@24583>   CMP.l #$f2400013,-4(a4)                                  ;=>
00032918 <AmiBlitz3.ab3@24584>          BNE 'noge
0003291E <AmiBlitz3.ab3@24585>          SUBQ.l #2,destpointer
00032924 <AmiBlitz3.ab3@24586>          MOVE.w #$f294,-4(a4)
00032928 <AmiBlitz3.ab3@24587>  BRA 'brf
00032930 <AmiBlitz3.ab3@24590>   CMP.l #$f2400012,-4(a4)                                  ;>
00032934 <AmiBlitz3.ab3@24591>          BNE 'nogt
0003293A <AmiBlitz3.ab3@24592>          SUBQ.l #2,destpointer
00032940 <AmiBlitz3.ab3@24593>          MOVE.w #$f295,-4(a4)
00032944 <AmiBlitz3.ab3@24594>  BRA 'brf
0003294C <AmiBlitz3.ab3@24597>   CMP.l #$f2400001,-4(a4)                                  ;=
00032950 <AmiBlitz3.ab3@24598>          BNE 'noeq
00032956 <AmiBlitz3.ab3@24599>          SUBQ.l #2,destpointer
0003295C <AmiBlitz3.ab3@24600>          MOVE.w #$f28e,-4(a4)
00032960 <AmiBlitz3.ab3@24601>  BRA 'brf
00032968 <AmiBlitz3.ab3@24604>   CMP.l #$f240000e,-4(a4)                                  ;<>
0003296C <AmiBlitz3.ab3@24605>          BNE 'none
00032972 <AmiBlitz3.ab3@24606>          SUBQ.l #2,destpointer
00032978 <AmiBlitz3.ab3@24607>          MOVE.w #$f281,-4(a4)
0003297A <AmiBlitz3.ab3@24610>   ADDQ.l #2,a7
00032980 <AmiBlitz3.ab3@24612>     TST.b fast
00032984 <AmiBlitz3.ab3@24613>     BEQ 'l1
0003298A <AmiBlitz3.ab3@24614>     OR.b #$40,-3(a4)
0003298E <AmiBlitz3.ab3@24615>     BSR writeword
00032992 <AmiBlitz3.ab3@24619>   BSR writeword
00032996 <AmiBlitz3.ab3@24620>  BRA.s 'br2
0003299C <AmiBlitz3.ab3@24624>   MOVE.l destpointer,a0
000329A2 <AmiBlitz3.ab3@24625>          SUB.l load_var_addr,a0
000329A8 <AmiBlitz3.ab3@24626>          CMP.l #4,a0
000329AC <AmiBlitz3.ab3@24627>          BEQ 'gotst2
000329B2 <AmiBlitz3.ab3@24628>          CMP.w #$4eb9,-6(a4)
000329B6 <AmiBlitz3.ab3@24629>          BEQ 'b6
000329BC <AmiBlitz3.ab3@24630>          CMP.w #$5ec0,-2(a4)                               ;>
000329C0 <AmiBlitz3.ab3@24631>      BNE.s 'lb1
000329C6 <AmiBlitz3.ab3@24632>          MOVE.w #$6f00,-2(a4)                              ;ble
000329CA <AmiBlitz3.ab3@24633>  BRA.s 'br
000329D0 <AmiBlitz3.ab3@24636>   CMP.w #$5dc0,-2(a4)                                       ;<
000329D4 <AmiBlitz3.ab3@24637>   BNE.s 'lb2
000329DA <AmiBlitz3.ab3@24638>          MOVE.w #$6c00,-2(a4)                              ;bge
000329DE <AmiBlitz3.ab3@24639>  BRA.s 'br
000329E4 <AmiBlitz3.ab3@24642>   CMP.w #$57c0,-2(a4)                                      ;=
000329E8 <AmiBlitz3.ab3@24643>   BNE.s 'lb3
000329EE <AmiBlitz3.ab3@24644>          MOVE.w #$6600,-2(a4)                              ;bne
000329F2 <AmiBlitz3.ab3@24645>  BRA.s 'br
000329F8 <AmiBlitz3.ab3@24648>   CMP.w #$56c0,-2(a4)                                      ;<>
000329FC <AmiBlitz3.ab3@24649>   BNE.s 'lb4
00032A02 <AmiBlitz3.ab3@24650>          MOVE.w #$6700,-2(a4)                              ;beq
00032A06 <AmiBlitz3.ab3@24651>  BRA.s 'br
00032A0C <AmiBlitz3.ab3@24654>   CMP.w #$5cc0,-2(a4)                                      ;>=
00032A10 <AmiBlitz3.ab3@24655>   BNE.s 'lb5
00032A16 <AmiBlitz3.ab3@24656>          MOVE.w #$6d00,-2(a4)                              ;blt
00032A1A <AmiBlitz3.ab3@24657>  BRA.s 'br
00032A20 <AmiBlitz3.ab3@24660>   CMP.w #$5fc0,-2(a4)                                      ;<=
00032A24 <AmiBlitz3.ab3@24661>         BNE.s 'b6
00032A2A <AmiBlitz3.ab3@24662>          MOVE.w #$6e00,-2(a4)                              ;bgt
00032A2C <AmiBlitz3.ab3@24665>   TST.w (a7)+
00032A32 <AmiBlitz3.ab3@24667>         TST.b fast
00032A36 <AmiBlitz3.ab3@24668>         BEQ 'l1a
00032A3C <AmiBlitz3.ab3@24669>         OR.b #$ff,-1(a4)                                   ;long branches
00032A40 <AmiBlitz3.ab3@24670>         BSR writeword
00032A44 <AmiBlitz3.ab3@24674>         BSR writeword
00032A48 <AmiBlitz3.ab3@24675>  BRA.s 'br2
00032A4C <AmiBlitz3.ab3@24679>   BSR.w writeword
00032A50 <AmiBlitz3.ab3@24682>   MOVE.l posbr(PC),D1
00032A52 <AmiBlitz3.ab3@24683>   TST.w (A7)+
00032A56 <AmiBlitz3.ab3@24684>    BEQ.w 'skip
00032A5A <AmiBlitz3.ab3@24685>   MOVE.l negbr(PC),D1
00032A60 <AmiBlitz3.ab3@24689>   TST.b fast
00032A64 <AmiBlitz3.ab3@24690>            BEQ 'l1b
00032A6A <AmiBlitz3.ab3@24691>            OR.l #$00ff0000,d1
00032A6E <AmiBlitz3.ab3@24692>            BSR writelong
00032A72 <AmiBlitz3.ab3@24693>            BSR writeword
00032A76 <AmiBlitz3.ab3@24694>  BRA 'br2
00032A7A <AmiBlitz3.ab3@24697>   BSR.w writelong
00032A7C <AmiBlitz3.ab3@24701>   MOVEQ.l #$0E,D0
00032A7E <AmiBlitz3.ab3@24702>   MOVEQ.l #$01,D1
00032A84 <AmiBlitz3.ab3@24703>   MOVEA.l _execbase,A6
00032A8A <AmiBlitz3.ab3@24706>   MOVE.l mempool,a0
00032A8E <AmiBlitz3.ab3@24707>   JSR _AllocPooled(a6)
00032A90 <AmiBlitz3.ab3@24710>   MOVEA.l D0,A0
00032A96 <AmiBlitz3.ab3@24711>   MOVE.l firstiff,(A0)
00032A9C <AmiBlitz3.ab3@24712>   MOVE.l A0,firstiff
00032AA0 <AmiBlitz3.ab3@24713>   MOVE.l (A7)+,$4(A0)
00032AA8 <AmiBlitz3.ab3@24714>   MOVE.l destpointer,$8(A0)
00032AAC <AmiBlitz3.ab3@24715>   MOVE.w (A7)+,$C(A0)
00032AB2 <AmiBlitz3.ab3@24716>    JSR reget
00032AB6 <AmiBlitz3.ab3@24717>    BEQ.w ifdone
00032ABC <AmiBlitz3.ab3@24718>   BSET #$7,$C(A0)    ;one liner
00032AC6 <AmiBlitz3.ab3@24724>   MOVE.w oldqflag,instringon
00032ACC <AmiBlitz3.ab3@24725>   MOVEA.l lastsourcepos,A5
00032AD4 <AmiBlitz3.ab3@24727>   MOVE.w #$003A,lastchar      ; ':'
00032AD6 <AmiBlitz3.ab3@24730> RTS
00032ADA <AmiBlitz3.ab3@24734>   CMP.w #$1,D0     ;4
00032ADE <AmiBlitz3.ab3@24735>    BLT.w gc1skip   ;4
00032AE2 <AmiBlitz3.ab3@24736>   CMP.w #$0,D0     ;2
00032AE6 <AmiBlitz3.ab3@24737>    BGT.w gc1skip
00032AE8 <AmiBlitz3.ab3@24738>   ADD.w D0,D0
00032AEA <AmiBlitz3.ab3@24739>   ADD.w D0,D0
00032AEE <AmiBlitz3.ab3@24740>   MOVEA.l gc1labs-4(PC,D0.W),A0
00032AF0 <AmiBlitz3.ab3@24741>  JMP (A0)
00032AF4 <AmiBlitz3.ab3@24744>  BRA.w gc1skip
00032AF8 <AmiBlitz3.ab3@24750>   CMP.w #$1,D0     ;4
00032AFC <AmiBlitz3.ab3@24751>    BLT.w gc2skip   ;4
00032B00 <AmiBlitz3.ab3@24752>   CMP.w #$0,D0     ;2
00032B04 <AmiBlitz3.ab3@24753>    BGT.w gc2skip
00032B06 <AmiBlitz3.ab3@24754>   ADD.w D0,D0
00032B08 <AmiBlitz3.ab3@24755>   ADD.w D0,D0
00032B0C <AmiBlitz3.ab3@24756>   MOVEA.l gc2labs-4(PC,D0.W),A0
00032B0E <AmiBlitz3.ab3@24757>   JSR (A0)
00032B12 <AmiBlitz3.ab3@24760>  BRA.w gc2skip
00032B16 <AmiBlitz3.ab3@24766>   CMP.w #$1,D0    ;4
00032B1A <AmiBlitz3.ab3@24767>    BLT.w gc3skip  ;4
00032B1E <AmiBlitz3.ab3@24768>   CMP.w #$0,D0    ;2
00032B22 <AmiBlitz3.ab3@24769>    BGT.w gc3skip
00032B24 <AmiBlitz3.ab3@24770>   ADD.w D0,D0
00032B26 <AmiBlitz3.ab3@24771>   ADD.w D0,D0
00032B2A <AmiBlitz3.ab3@24772>   MOVEA.l gc3labs-4(PC,D0.W),A0
00032B2E <AmiBlitz3.ab3@24775>   MOVE.w #$6753,-(A7)                                      ;#'gS' ;for runtime error checking!
00032B30 <AmiBlitz3.ab3@24776>    JSR (A0)
00032B34 <AmiBlitz3.ab3@24779>  BRA.w gc3skip
00032B36 <AmiBlitz3.ab3@24784> labcnt:   Ds.w 1
00032B38 <AmiBlitz3.ab3@24791>   MOVEQ.l #$02,D2
00032B3C <AmiBlitz3.ab3@24792>    BSR.w bakeval
00032B40 <AmiBlitz3.ab3@24794>   LEA ongotocode(PC),A0
00032B44 <AmiBlitz3.ab3@24795>   LEA ongotocodef(PC),A1
00032B48 <AmiBlitz3.ab3@24796>   MOVE.w #gc1skip-ongotocode,D1      ; is #$001A
00032B4C <AmiBlitz3.ab3@24797>   CMP.w #-$7FFB,D0                   ; was #$8005
00032B50 <AmiBlitz3.ab3@24798>    BEQ.w 'isok
00032B54 <AmiBlitz3.ab3@24799>   CMP.w #-$7FFA,D0                   ; was #$8006
00032B58 <AmiBlitz3.ab3@24800>    BNE.w JUMP_syntaxerr
00032B5C <AmiBlitz3.ab3@24801>   LEA ongosubcode(PC),A0
00032B60 <AmiBlitz3.ab3@24802>   LEA ongosubcodef(PC),A1
00032B64 <AmiBlitz3.ab3@24803>   MOVE.w #gc2skip-ongosubcode,D1     ; is #$001A
00032B6A <AmiBlitz3.ab3@24805>   TST.b debugmode
00032B6E <AmiBlitz3.ab3@24806>    BEQ.b 'isok
00032B74 <AmiBlitz3.ab3@24808>    JSR chkstak
00032B78 <AmiBlitz3.ab3@24809>   LEA ongcode(PC),A0
00032B7C <AmiBlitz3.ab3@24810>   LEA ongcodef(PC),A1
00032B80 <AmiBlitz3.ab3@24811>   MOVE.w #gc3skip-ongcode,D1         ; is #$001E
00032B82 <AmiBlitz3.ab3@24814>   MOVE.w D1,-(A7)
00032B88 <AmiBlitz3.ab3@24815>   MOVE.l destpointer,-(A7)                                 ;for when we know number of labels!
00032B8C <AmiBlitz3.ab3@24816>    BSR.w pokecode
00032B92 <AmiBlitz3.ab3@24817>   CLR.w labcnt
00032B98 <AmiBlitz3.ab3@24823>    JSR get1bytemain
00032B9E <AmiBlitz3.ab3@24824>   SUBQ.l #2,destpointer                                    ;for makealab!
00032BA2 <AmiBlitz3.ab3@24825>    BSR.w makealab2
00032BA8 <AmiBlitz3.ab3@24826>   ADDQ.l #2,destpointer
00032BAE <AmiBlitz3.ab3@24827>    JSR addoff
00032BB2 <AmiBlitz3.ab3@24828>   MOVE.l $8(A2),D1
00032BB6 <AmiBlitz3.ab3@24829>    BSR.w writelong
00032BBC <AmiBlitz3.ab3@24830>   ADDQ.w #1,labcnt
00032BC2 <AmiBlitz3.ab3@24831>    JSR reget
00032BC6 <AmiBlitz3.ab3@24832>   CMP.w #$2C,D0 ; ','
00032BCA <AmiBlitz3.ab3@24833>    BEQ.w 'loop
00032BCC <AmiBlitz3.ab3@24835>   MOVEA.l (A7)+,A0
00032BCE <AmiBlitz3.ab3@24836>   MOVE.w (A7)+,D2
00032BD4 <AmiBlitz3.ab3@24837>   MOVE.w dontwrite_nomemleft,D1
00032BD8 <AmiBlitz3.ab3@24838>    BNE.w 'done
00032BDC <AmiBlitz3.ab3@24840>   MOVE.w labcnt(PC),D1
00032BE0 <AmiBlitz3.ab3@24841>   MOVE.w D1,$A(A0)       ;for cmp#
00032BE2 <AmiBlitz3.ab3@24842>   ADD.w D1,D1
00032BE4 <AmiBlitz3.ab3@24843>   ADD.w D1,D1
00032BE6 <AmiBlitz3.ab3@24844>   ADDQ.w #2,D1
00032BEA <AmiBlitz3.ab3@24845>   MOVE.w D1,$2(A0,D2.W)  ;for bra!
00032BEC <AmiBlitz3.ab3@24848> RTS
00032BF2 <AmiBlitz3.ab3@24852>   TST.b debugmode
00032BF6 <AmiBlitz3.ab3@24853>    BEQ.w 'noerr
00032BFC <AmiBlitz3.ab3@24855>    JSR chkstak
00032C02 <AmiBlitz3.ab3@24856>   MOVE.l goset,D1
00032C06 <AmiBlitz3.ab3@24857>    BSR.w writelong
00032C0C <AmiBlitz3.ab3@24860>   MOVE.w gosubcode,D1
00032C10 <AmiBlitz3.ab3@24861> BRA.w dogoto2
00032C16 <AmiBlitz3.ab3@24865>   MOVE.w gotocode,D1
00032C18 <AmiBlitz3.ab3@24868>   MOVE.w D1,-(A7)
00032C1C <AmiBlitz3.ab3@24869>    BSR.w makealab2
00032C1E <AmiBlitz3.ab3@24870>   MOVE.w (A7)+,D1
00032C22 <AmiBlitz3.ab3@24871>    BSR.w writeword
00032C28 <AmiBlitz3.ab3@24872>    JSR addoff
00032C2C <AmiBlitz3.ab3@24873>   MOVE.l $8(A2),D1
00032C30 <AmiBlitz3.ab3@24874> BRA.w writelong
00032C36 <AmiBlitz3.ab3@24878>   MOVE.w proceduremode,D1
00032C3A <AmiBlitz3.ab3@24879>    BEQ.w JUMP_badpenderr
00032C3E <AmiBlitz3.ab3@24881>   MOVE.w #$4EF9,D1
00032C42 <AmiBlitz3.ab3@24882>    BSR.w writeword
00032C48 <AmiBlitz3.ab3@24883>    JSR addoff
00032C4E <AmiBlitz3.ab3@24885>   MOVEA.l _execbase,A6
00032C50 <AmiBlitz3.ab3@24886>   MOVEQ.l #$08,D0
00032C52 <AmiBlitz3.ab3@24887>   MOVEQ.l #$01,D1
00032C58 <AmiBlitz3.ab3@24890>   MOVE.l mempool,a0
00032C5C <AmiBlitz3.ab3@24891>   JSR _AllocPooled(a6)
00032C5E <AmiBlitz3.ab3@24893>   MOVEA.l D0,A0
00032C64 <AmiBlitz3.ab3@24894>   MOVE.l firstpend,(A0)
00032C6A <AmiBlitz3.ab3@24895>   MOVE.l A0,firstpend
00032C72 <AmiBlitz3.ab3@24896>   MOVE.l destpointer,$4(A0)
00032C76 <AmiBlitz3.ab3@24898> BRA.w writelong
00032C7A <AmiBlitz3.ab3@24902>   BSR.w do_AsmExit
00032C80 <AmiBlitz3.ab3@24903> JMP get1bytemain
00032C88 <AmiBlitz3.ab3@24908>   MOVE.b #1,nostringopt
00032C8C <AmiBlitz3.ab3@24909>   MOVEM.l a0/a1/d1,-(a7)
00032C92 <AmiBlitz3.ab3@24911>   MOVEA.l currentfunction,A0
00032C98 <AmiBlitz3.ab3@24913>     CMP.l #0,a0
00032C9C <AmiBlitz3.ab3@24914>     BNE 'l1
00032CA2 <AmiBlitz3.ab3@24915>     JMP errorasmexit
00032CA4 <AmiBlitz3.ab3@24918>   MOVEQ.l #$00,D2
00032CA8 <AmiBlitz3.ab3@24920>   MOVE.b $5(A0),D2      ;type returning!
00032CAC <AmiBlitz3.ab3@24921>   BSR.w eval            ;put return val in d0.
00032CB2 <AmiBlitz3.ab3@24924>   MOVEA.l currentfunction,A0
00032CB6 <AmiBlitz3.ab3@24925>   MOVE.l funcstruct_returntype(a0),a0
00032CBC <AmiBlitz3.ab3@24926>   CMP.l #0,a0
00032CC0 <AmiBlitz3.ab3@24927>   BEQ 'isstatement
00032CC8 <AmiBlitz3.ab3@24928>   CMP.l #$100,4(a0)
00032CCC <AmiBlitz3.ab3@24929>   BLT.w 'isvar
00032CCE <AmiBlitz3.ab3@24930>   MOVE.l a2,a1
00032CD4 <AmiBlitz3.ab3@24931>   TST.l typetocast
00032CD8 <AmiBlitz3.ab3@24932>   BEQ 'nocast
00032CDE <AmiBlitz3.ab3@24933>   MOVE.l typetocast,a1
00032CE0 <AmiBlitz3.ab3@24936>   CMP.l a0,a1
00032CE4 <AmiBlitz3.ab3@24937>   BEQ 'ok
00032CEA <AmiBlitz3.ab3@24938>   CLR.l typetocast
00032CF0 <AmiBlitz3.ab3@24939>   MOVE.l lasttoken,d1
00032CF4 <AmiBlitz3.ab3@24940>   CMP.w #NullTokenID,d1                   ;$b581 ok, when token for null
00032CF8 <AmiBlitz3.ab3@24941>   BEQ 'isnull
00032CFE <AmiBlitz3.ab3@24944>   JMP errorconvertreturntype
00032D02 <AmiBlitz3.ab3@24953>   MOVEM.l (a7)+,a0/a1/d1
00032D06 <AmiBlitz3.ab3@24956> BRA.w do_AsmExit
00032D0C <AmiBlitz3.ab3@24958> error_convert_types2 JMP error_convert_types
00032D12 <AmiBlitz3.ab3@24974>   TST.b debugmode
00032D16 <AmiBlitz3.ab3@24975>    BEQ.w normret
00032D1A <AmiBlitz3.ab3@24976>   MOVE.w #$C305,D1        ; was #chkret,
00032D1E <AmiBlitz3.ab3@24977> BRA.w Atokejsr
00032D22 <AmiBlitz3.ab3@24984>   MOVE.w #$4E75,D1
00032D26 <AmiBlitz3.ab3@24985> BRA.w writeword
00032D2A <AmiBlitz3.ab3@24988> localslist:  Ds.l 1                                        ;all locals for procs.;??Looks like obsovled data??
00032D2E <AmiBlitz3.ab3@24989> proclocals:  Ds.l 1                                        ;for debugga!
00032D30 <AmiBlitz3.ab3@24990> procnum:     Ds.w 1
00032D32 <AmiBlitz3.ab3@24991> procnum2:    Ds.w 1
00032D36 <AmiBlitz3.ab3@24992> prolineat:   Ds.l 1
00032D3C <AmiBlitz3.ab3@24997>    TST.w proceduremode
00032D40 <AmiBlitz3.ab3@24998>    BGT JUMP_sreterr
00032D44 <AmiBlitz3.ab3@25000>    CMP.w #-$7FF9,D0     ;was #$8007
00032D48 <AmiBlitz3.ab3@25001>    BEQ.w stateret
00032D4A <AmiBlitz3.ab3@25002>    MOVEQ.l #-$01,D1  ;statement flag
00032D4E <AmiBlitz3.ab3@25003> BRA.w do_function2
00032D54 <AmiBlitz3.ab3@25005> JUMP_sreterr JMP sreterr
00032D5A <AmiBlitz3.ab3@25009>   CLR.b skipfunc
00032D60 <AmiBlitz3.ab3@25010>   TST.l unusedfunc
00032D64 <AmiBlitz3.ab3@25011>   BEQ 'ex
00032D68 <AmiBlitz3.ab3@25012>   MOVEM.l d0-d7/a0-a6,-(a7)
00032D6E <AmiBlitz3.ab3@25013>   MOVE.l unusedfunc,d1
00032D74 <AmiBlitz3.ab3@25014>   LEA ptr_parameterstore,a5
00032D76 <AmiBlitz3.ab3@25017>   MOVE.l d1,a0
00032D7A <AmiBlitz3.ab3@25018>   LEA 12(a0),a2
00032D7C <AmiBlitz3.ab3@25019>   MOVE.l a5,a1
00032D7E <AmiBlitz3.ab3@25021>   CMPM.b (a1)+,(a2)+
00032D82 <AmiBlitz3.ab3@25022>   BNE 'neq
00032D84 <AmiBlitz3.ab3@25023>   TST.b (a2)
00032D88 <AmiBlitz3.ab3@25024>   BNE 'ch
00032D8A <AmiBlitz3.ab3@25025>   TST.b (a1)
00032D8E <AmiBlitz3.ab3@25026>   BNE 'neq
00032D96 <AmiBlitz3.ab3@25027>   MOVE.b #1,skipfunc
00032D9A <AmiBlitz3.ab3@25028>  BRA 'out
00032D9C <AmiBlitz3.ab3@25031>   MOVE.l (a0),d1
00032DA0 <AmiBlitz3.ab3@25032>   BNE 'ag
00032DA4 <AmiBlitz3.ab3@25035>   MOVEM.l (a7)+,d0-d7/a0-a6
00032DA6 <AmiBlitz3.ab3@25038> RTS
00032DAC <AmiBlitz3.ab3@25041> JUMP_dupprocerr  JMP dupprocerr
00032DB2 <AmiBlitz3.ab3@25042> JUMP_illprocperr JMP illprocperr
00032DB8 <AmiBlitz3.ab3@25043> JUMP_toovarerr   JMP toovarerr
00032DBE <AmiBlitz3.ab3@25044> JUMP_more6pard   JMP more6pard
00032DC6 <AmiBlitz3.ab3@25048>   CMP.w #-1,proceduremode                                  
00032DCA <AmiBlitz3.ab3@25049>    BEQ JUMP_sreterr
00032DCE <AmiBlitz3.ab3@25050>   CMP.w #-$7FF9,D0      ; was #$8007
00032DD2 <AmiBlitz3.ab3@25051>    BEQ.w do_function_return
00032DDC <AmiBlitz3.ab3@25055>   MOVE.w oldqflag,instringon
00032DE2 <AmiBlitz3.ab3@25056>   MOVEA.l lastsourcepos,A5
00032DE8 <AmiBlitz3.ab3@25058>   JSR getfunctionreturntype
00032DEE <AmiBlitz3.ab3@25059>   JSR get1bytemain
00032DF4 <AmiBlitz3.ab3@25065>   TST.b declare
00032DF8 <AmiBlitz3.ab3@25066>   BEQ 'l3
00032E00 <AmiBlitz3.ab3@25067>   MOVE.b #1,nowdeclare
00032E06 <AmiBlitz3.ab3@25071>   JSR errchx                                           ;writejumpoverfunction
00032E0C <AmiBlitz3.ab3@25075>   CLR.b fastfunc
00032E16 <AmiBlitz3.ab3@25076>   MOVE.l firstiff,firstiffstore
00032E1E <AmiBlitz3.ab3@25077>   CMP.l #"FAST",-1(a5)
00032E22 <AmiBlitz3.ab3@25078>   BNE 'nofast
00032E28 <AmiBlitz3.ab3@25079>   CMP.b #" ",3(a5)
00032E2C <AmiBlitz3.ab3@25080>   BNE 'nofast
00032E2E <AmiBlitz3.ab3@25081>   ADDQ.l #3,a5
00032E32 <AmiBlitz3.ab3@25084>     CMP.b #" ",(a5)
00032E36 <AmiBlitz3.ab3@25085>      BNE 'x1
00032E38 <AmiBlitz3.ab3@25086>     ADDQ #1,a5
00032E3C <AmiBlitz3.ab3@25087>  BRA 'x2
00032E42 <AmiBlitz3.ab3@25090>   MOVE.l a5,lastsourcepos
00032E4A <AmiBlitz3.ab3@25091>   MOVE.b #1,fastfunc
00032E52 <AmiBlitz3.ab3@25094>   CMP.l #"NOOP",-1(a5)                                     ;compile 3* so its deactivate
00032E56 <AmiBlitz3.ab3@25095>  BRA 'noopt
00032E5C <AmiBlitz3.ab3@25097>   CMP.w #"T ",3(a5)                                        ;??Looks like dead code??
00032E60 <AmiBlitz3.ab3@25098>   BNE 'noopt                                               ;          "
00032E62 <AmiBlitz3.ab3@25099>   ADDQ.l #4,a5                                             ;          "
00032E66 <AmiBlitz3.ab3@25102>     CMP.b #" ",(a5)                                        ;          "
00032E6A <AmiBlitz3.ab3@25103>      BNE 'x1b                                              ;          "
00032E6C <AmiBlitz3.ab3@25104>     ADDQ #1,a5                                             ;          "
00032E70 <AmiBlitz3.ab3@25105>  BRA 'x2b
00032E76 <AmiBlitz3.ab3@25108>   MOVE.l a5,lastsourcepos                                  ;          "
00032E7C <AmiBlitz3.ab3@25109>   JSR makename2                                            ;          "
00032E80 <AmiBlitz3.ab3@25110>  BRA 'l1                                                   ;          "
00032E86 <AmiBlitz3.ab3@25113>   JSR makename2
00032E8C <AmiBlitz3.ab3@25114>   JSR checkused
00032E92 <AmiBlitz3.ab3@25115>   TST.b skipfunc
00032E96 <AmiBlitz3.ab3@25116>    BEQ 'l1
00032E9C <AmiBlitz3.ab3@25117>   JSR skipme
00032EA2 <AmiBlitz3.ab3@25118>   CLR.b fastfunc
00032EA4 <AmiBlitz3.ab3@25119>  RTS
00032EAE <AmiBlitz3.ab3@25123>   MOVE.l linenumat,prolineat
00032EB4 <AmiBlitz3.ab3@25125>   ADDQ.w #1,procnum2
00032EBC <AmiBlitz3.ab3@25126>   MOVE.w procnum2(PC),procnum
00032EC2 <AmiBlitz3.ab3@25127>   MOVE.w D1,proceduremode
00032EC8 <AmiBlitz3.ab3@25128>   CLR.w locvaroff
00032ECC <AmiBlitz3.ab3@25130>   CMP.w #$7B,D0   ;'{'
00032ED0 <AmiBlitz3.ab3@25131>    BNE.w JUMP_syntaxerr
00032ED8 <AmiBlitz3.ab3@25133>    MOVE.b #1,infunctioncode
00032EDE <AmiBlitz3.ab3@25135>   MOVEA.l tempvm,A0
00032EE6 <AmiBlitz3.ab3@25136>   MOVE.w $C(A0),memlibstat
00032EEC <AmiBlitz3.ab3@25137>   BCLR #$7,$C(A0)                                          ;Bit out of range
00032EF0 <AmiBlitz3.ab3@25138>   MOVE.w #$4EF9,D1  ;make a jump around the proc
00032EF4 <AmiBlitz3.ab3@25139>    BSR.w writeword
00032EFA <AmiBlitz3.ab3@25140>    JSR addoff
00032EFE <AmiBlitz3.ab3@25141>    BSR.w writelong
00032F04 <AmiBlitz3.ab3@25143>    JSR findproc                                          ;findproc function
00032F08 <AmiBlitz3.ab3@25144>    BEQ.w JUMP_dupprocerr
00032F0E <AmiBlitz3.ab3@25145>    JSR addlabel
00032F14 <AmiBlitz3.ab3@25147>    MOVE.b #31,$20(a2)                                      ;increase if more pars
00032F1A <AmiBlitz3.ab3@25148>    MOVE.b #0,isfunc(a2)
00032F22 <AmiBlitz3.ab3@25149>    MOVE.l functionreturntype,funcstruct_returntype(a2)
00032F2A <AmiBlitz3.ab3@25151>   MOVE.l destpointer,$E(A2)    ;new!
00032F30 <AmiBlitz3.ab3@25152>   MOVE.l A2,currentfunction
00032F36 <AmiBlitz3.ab3@25154>   LEA nops8,A0
00032F3C <AmiBlitz3.ab3@25155>   LEA nopsf,A1
00032F40 <AmiBlitz3.ab3@25156>    BSR.w pokecode2
00032F46 <AmiBlitz3.ab3@25158>   TST.b debugmode
00032F4A <AmiBlitz3.ab3@25159>    BEQ.b 'nodebug
00032F4C <AmiBlitz3.ab3@25161>   MOVEQ.l #$04,D1
00032F52 <AmiBlitz3.ab3@25162>    JSR writetrap
00032F5C <AmiBlitz3.ab3@25163>   MOVE.l destpointer,proclocals
00032F60 <AmiBlitz3.ab3@25164>    BSR.w writelong
00032F64 <AmiBlitz3.ab3@25165>    BSR.w writelong
00032F68 <AmiBlitz3.ab3@25168>    LEA $16(A2),A4
00032F70 <AmiBlitz3.ab3@25169>   MOVE.b proceduremode+1,$5(A2)
00032F72 <AmiBlitz3.ab3@25170>   MOVEQ.l #$00,D6
00032F74 <AmiBlitz3.ab3@25171>   MOVEQ.l #$00,D5
00032F7A <AmiBlitz3.ab3@25172>    JSR get1bytemain
00032F7E <AmiBlitz3.ab3@25173>   CMP.w #$7D,D0        ; '}'
00032F82 <AmiBlitz3.ab3@25174>    BEQ.w 'done
00032F86 <AmiBlitz3.ab3@25178>    CMP.b #"@",d0
00032F8A <AmiBlitz3.ab3@25179>    BNE 'l2
00032F8C <AmiBlitz3.ab3@25180>    MOVE.l a0,-(a7)
00032F92 <AmiBlitz3.ab3@25181>    MOVE.l currentfunction,a0
00032F98 <AmiBlitz3.ab3@25182>    CMP.b #31,$20(a0)                                       ;increase if morepars
00032F9C <AmiBlitz3.ab3@25183>    BNE 'l4
00032FA0 <AmiBlitz3.ab3@25184>    MOVE.b d6,$20(a0)                                       ;increase if morepar
00032FA6 <AmiBlitz3.ab3@25187>    JSR get1bytemain
00032FA8 <AmiBlitz3.ab3@25188>    MOVE.l (a7)+,a0
00032FAC <AmiBlitz3.ab3@25192>    BSR.w getparameter
00032FB0 <AmiBlitz3.ab3@25193>    BSR.w fetchvars
00032FB8 <AmiBlitz3.ab3@25194>   CMPI.l #$7,$4(A2)
00032FBC <AmiBlitz3.ab3@25195>    BNE.w 'notst
00032FC2 <AmiBlitz3.ab3@25196>   LEA stbuff,A0
00032FC4 <AmiBlitz3.ab3@25197>   MOVE.w D5,D1
00032FC6 <AmiBlitz3.ab3@25198>   LSL.w #2,D1
00032FCA <AmiBlitz3.ab3@25199>   MOVE.w D6,$0(A0,D1.W)
00032FD0 <AmiBlitz3.ab3@25200>   MOVE.w $4(A3),$2(A0,D1.W)
00032FD2 <AmiBlitz3.ab3@25201>   ADDQ.w #1,D5
00032FD4 <AmiBlitz3.ab3@25202>   MOVEQ.l #$07,D2
00032FD8 <AmiBlitz3.ab3@25203>  BRA.w 'pgot
00032FDC <AmiBlitz3.ab3@25206>   MOVE.w #$2940,D1
00032FDE <AmiBlitz3.ab3@25207>   MOVEQ.l #$03,D2
00032FE6 <AmiBlitz3.ab3@25208>   BTST #$0,flagmask+1
00032FEA <AmiBlitz3.ab3@25209>    BNE.w 'sgot
00032FF2 <AmiBlitz3.ab3@25210>   CMPI.l #$100,$4(A2)
00032FF6 <AmiBlitz3.ab3@25211>    BCC.w JUMP_illprocperr
00032FFA <AmiBlitz3.ab3@25212>   MOVE.w $6(A2),D2
00032FFE <AmiBlitz3.ab3@25213>   CMP.w #$2,D2
00033002 <AmiBlitz3.ab3@25214>    BHI.w 'sgot
00033006 <AmiBlitz3.ab3@25215>    BEQ.w 'wgot
0003300A <AmiBlitz3.ab3@25216>   EORI.w #$3000,D1
0003300E <AmiBlitz3.ab3@25217>  BRA.w 'sgot
00033012 <AmiBlitz3.ab3@25220>   ORI.w #$1000,D1
00033014 <AmiBlitz3.ab3@25223>   OR.w D6,D1
0003301A <AmiBlitz3.ab3@25225>   TST.b fpu
0003301E <AmiBlitz3.ab3@25226>   BEQ 'nofpu
00033022 <AmiBlitz3.ab3@25227>   CMP.b #5,d2
00033026 <AmiBlitz3.ab3@25228>   BNE 'nofpu
0003302A <AmiBlitz3.ab3@25229>   CMP.w #6,d6
0003302E <AmiBlitz3.ab3@25230>   BLT 'l10a
00033034 <AmiBlitz3.ab3@25231>   CMP.l #newtype_double,a2
00033038 <AmiBlitz3.ab3@25232>   BEQ JUMP_more6pard
0003303C <AmiBlitz3.ab3@25233>  BRA 'nofpu
00033042 <AmiBlitz3.ab3@25236>   MOVE.l #$f22c6400,d1
00033046 <AmiBlitz3.ab3@25237>   MOVEM.l d0/a4,-(a7)
00033048 <AmiBlitz3.ab3@25238>   MOVE.l d6,d0
0003304A <AmiBlitz3.ab3@25239>   ASL.l #7,d0
0003304C <AmiBlitz3.ab3@25240>   OR.w d0,d1
00033052 <AmiBlitz3.ab3@25241>   CMP.l #newtype_double,a2
00033056 <AmiBlitz3.ab3@25242>   BNE 'l5
0003305C <AmiBlitz3.ab3@25243>   OR.l #$1000,d1
00033060 <AmiBlitz3.ab3@25246>   BSR writelong
00033064 <AmiBlitz3.ab3@25247>   MOVE.w 4(a3),d1
00033068 <AmiBlitz3.ab3@25248>   BSR writeword
0003306C <AmiBlitz3.ab3@25249>   MOVEM.l (a7)+,a4/d0
00033070 <AmiBlitz3.ab3@25250>  BRA 'pgot
00033072 <AmiBlitz3.ab3@25254>   MOVE.l A4,-(A7)
00033076 <AmiBlitz3.ab3@25256>    CMP.w #6,d6
0003307A <AmiBlitz3.ab3@25257>    BLT 'l10
0003307E <AmiBlitz3.ab3@25258>    MOVE.w #$c500-4,d1                                      ;savetemp+regnum
00033080 <AmiBlitz3.ab3@25259>    ADD.w d6,d1
00033086 <AmiBlitz3.ab3@25260>    JSR Atokejsr
0003308C <AmiBlitz3.ab3@25261>    TST.w dontwrite_nomemleft
00033090 <AmiBlitz3.ab3@25262>    BNE 'l10
00033096 <AmiBlitz3.ab3@25263>    MOVE.l data1start,d1
0003309C <AmiBlitz3.ab3@25264>    MOVE.l destpointer,a4
000330A0 <AmiBlitz3.ab3@25265>    ADD.l d1,-6(a4)
000330A6 <AmiBlitz3.ab3@25266>    MOVE.l destpointer,d1
000330A8 <AmiBlitz3.ab3@25267>    SUBQ.l #6,d1
000330AE <AmiBlitz3.ab3@25268>    SUB.l destbufferstart,d1
000330B0 <AmiBlitz3.ab3@25270>    MOVE.l d2,-(a7)
000330B2 <AmiBlitz3.ab3@25271>    MOVE.l d1,d2
000330B8 <AmiBlitz3.ab3@25272>    JSR addhunkoffset                                       ;move.l $0,-x(a4)
000330BA <AmiBlitz3.ab3@25273>    MOVE.l (a7)+,d2
000330C0 <AmiBlitz3.ab3@25274>    MOVE.l destpointer,a4
000330C4 <AmiBlitz3.ab3@25275>    CMP.w #2,d2
000330C8 <AmiBlitz3.ab3@25276>    BNE 'nw1
000330CE <AmiBlitz3.ab3@25278>    MOVE.w #$3979,-8(a4)                                    ;move.w $0,-x(a4)
000330D6 <AmiBlitz3.ab3@25279>    ADD.l #2,-6(a4)
000330DA <AmiBlitz3.ab3@25282>    CMP.w #1,d2
000330DE <AmiBlitz3.ab3@25283>    BNE 'nb
000330E4 <AmiBlitz3.ab3@25284>    MOVE.w #$1979,-8(a4)                                    ;move.b $0,-x(a4)
000330EC <AmiBlitz3.ab3@25285>    ADD.l #3,-6(a4)
000330F2 <AmiBlitz3.ab3@25288>    MOVE.w $4(a3),-2(a4)
000330F6 <AmiBlitz3.ab3@25289>  BRA 'ne1
000330FA <AmiBlitz3.ab3@25293>   BSR.w writeword                                          ;write storeparameter
000330FE <AmiBlitz3.ab3@25296>   MOVE.w $4(A3),D1
00033102 <AmiBlitz3.ab3@25297>    BSR.w writeword
00033104 <AmiBlitz3.ab3@25300>   MOVEA.l (A7)+,A4
0003310A <AmiBlitz3.ab3@25304>   CLR.l functionreturntype
0003310C <AmiBlitz3.ab3@25306>   ADDQ.w #1,D6
00033110 <AmiBlitz3.ab3@25307>   CMP.w #11,D6          ; was #7                            ;max function parameters
00033114 <AmiBlitz3.ab3@25308>    BCC.w JUMP_toovarerr
0003311A <AmiBlitz3.ab3@25310>   MOVE.l currentfunction,a0
0003311E <AmiBlitz3.ab3@25311>   MOVE.l a2,funcstruct_parametertype-4(a0,d6*4)             ;-4 because d6 is increment before
00033120 <AmiBlitz3.ab3@25313>   MOVE.b D2,(A4)+
00033124 <AmiBlitz3.ab3@25314>   CMP.w #$2C,D0      ;','
00033128 <AmiBlitz3.ab3@25315>    BNE.w 'nomore
0003312E <AmiBlitz3.ab3@25316>    JSR get1bytemain
00033132 <AmiBlitz3.ab3@25330>  BRA.w 'more
00033136 <AmiBlitz3.ab3@25333>   CMP.w #$7D,D0
0003313A <AmiBlitz3.ab3@25334>    BNE.w JUMP_syntaxerr
00033140 <AmiBlitz3.ab3@25337>   MOVEA.l currentfunction,A2
00033142 <AmiBlitz3.ab3@25338>   LSL.w #4,D5
00033144 <AmiBlitz3.ab3@25339>   OR.w D5,D6
00033148 <AmiBlitz3.ab3@25340>   MOVE.b D6,$4(A2)
0003314A <AmiBlitz3.ab3@25341>   LSR.w #4,D6
0003314E <AmiBlitz3.ab3@25342>    BEQ.w 'nostrings
00033154 <AmiBlitz3.ab3@25343>   LEA stbuff,A0
00033156 <AmiBlitz3.ab3@25344>   SUBQ.w #1,D6
00033158 <AmiBlitz3.ab3@25350>     MOVE.w D6,D1                                           ;function stringpars
0003315A <AmiBlitz3.ab3@25351>     LSL.w #2,D1                                            ;stringsize was 2
0003315C <AmiBlitz3.ab3@25354>       LSL.w #1,d1
0003315E <AmiBlitz3.ab3@25355>       ADDQ.w #4,d1
00033160 <AmiBlitz3.ab3@25358>     ADDQ.w #8,D1
00033166 <AmiBlitz3.ab3@25359>     MOVE.w D1,funcst+2
0003316C <AmiBlitz3.ab3@25360>     MOVE.l funcst,D1
00033170 <AmiBlitz3.ab3@25361>     BSR.w writelong
00033172 <AmiBlitz3.ab3@25362>     MOVE.w (A0)+,D1
00033176 <AmiBlitz3.ab3@25364>     CMP.b #5,d1
0003317A <AmiBlitz3.ab3@25365>     BLE 's1
0003317E <AmiBlitz3.ab3@25366>     MOVE.w #$266c,d1                                       ;native move.l 4(a4),a3
00033182 <AmiBlitz3.ab3@25367>     BSR writeword    ; was writeinstruction  tomsmart1
00033184 <AmiBlitz3.ab3@25368>     MOVE.w D6,D1                                           ;function stringpars
00033186 <AmiBlitz3.ab3@25369>     LSL.w #2,D1                                            ;stringsize was 2
00033188 <AmiBlitz3.ab3@25371>       LSL.w #1,d1
0003318A <AmiBlitz3.ab3@25373>     ADDQ.w #8,D1
0003318E <AmiBlitz3.ab3@25374>     BSR writeword
00033192 <AmiBlitz3.ab3@25375>   BRA 's2
00033198 <AmiBlitz3.ab3@25379>     OR.w movedna3,D1
0003319C <AmiBlitz3.ab3@25380>      BSR.w writeword
000331A2 <AmiBlitz3.ab3@25383>     MOVE.w (A0)+,least+2
000331A8 <AmiBlitz3.ab3@25384>     MOVE.l least,D1
000331AC <AmiBlitz3.ab3@25385>      BSR.w writelong
000331AE <AmiBlitz3.ab3@25386>     MOVE.l A0,-(A7)
000331B2 <AmiBlitz3.ab3@25387>     MOVE.w #$C700,D1
000331B6 <AmiBlitz3.ab3@25388>      BSR.w Atokejsr
000331B8 <AmiBlitz3.ab3@25389>     MOVEA.l (A7)+,A0
000331BC <AmiBlitz3.ab3@25390>   DBF D6,'stloop
000331C2 <AmiBlitz3.ab3@25393> JMP get1bytemain
000331C8 <AmiBlitz3.ab3@25397>   MOVE.w dontwrite_nomemleft,D1
000331CC <AmiBlitz3.ab3@25398>    BNE.w 'skip
000331D2 <AmiBlitz3.ab3@25399>   MOVE.l destpointer,-(A7)
000331D8 <AmiBlitz3.ab3@25401>   MOVE.l A0,destpointer
000331DE <AmiBlitz3.ab3@25402>   MOVE.l linksize,D1
000331E2 <AmiBlitz3.ab3@25403>    BSR.w writelong                                         ;writefunctions jumppos
000331E8 <AmiBlitz3.ab3@25405>    TST.b fastfunc
000331EC <AmiBlitz3.ab3@25406>    BNE 'skip1
000331F0 <AmiBlitz3.ab3@25408>   MOVE.w #$CC00,D1      ; was #clrloc
000331F4 <AmiBlitz3.ab3@25409>    BSR.w tokejsr2                                          ;write clearvars
000331FA <AmiBlitz3.ab3@25412>   MOVE.l (A7)+,destpointer
000331FC <AmiBlitz3.ab3@25415> RTS
00033202 <AmiBlitz3.ab3@25418> JUMP_errormsg_nofast  JMP errormsg_nofast
00033208 <AmiBlitz3.ab3@25423>   MOVEA.l currentfunction,A2
0003320C <AmiBlitz3.ab3@25424>   MOVEA.l $E(A2),A0          ;pc of proc
00033210 <AmiBlitz3.ab3@25425>   MOVE.w $6(A2),D1
00033214 <AmiBlitz3.ab3@25426>    BEQ.w 'skiplink
0003321A <AmiBlitz3.ab3@25427>   MOVE.w D1,linksize+2
0003321E <AmiBlitz3.ab3@25428>   MOVE.w $8(A2),D1                                         ;check if function memalloc need
00033222 <AmiBlitz3.ab3@25429>    BNE.w 'howdy
00033224 <AmiBlitz3.ab3@25433>   ADDQ.w #6,A0
00033228 <AmiBlitz3.ab3@25434>   MOVE.l A0,$E(A2)
0003322C <AmiBlitz3.ab3@25435>  BRA.w linkput
0003322E <AmiBlitz3.ab3@25440>   MOVE.l A0,-(A7)
00033232 <AmiBlitz3.ab3@25441>    BSR.w linkput
00033234 <AmiBlitz3.ab3@25442>   MOVEA.l (A7)+,A0
00033238 <AmiBlitz3.ab3@25443>   LEA $A(A0),A0
0003323E <AmiBlitz3.ab3@25444>   MOVEA.l currentfunction,A2
00033242 <AmiBlitz3.ab3@25445>  BRA.w 'cont
00033246 <AmiBlitz3.ab3@25448>   MOVE.w $8(A2),D1
0003324A <AmiBlitz3.ab3@25449>    BNE.w 'cont
0003324E <AmiBlitz3.ab3@25450>   LEA $10(A0),A0
00033252 <AmiBlitz3.ab3@25451>   MOVE.l A0,$E(A2)
00033254 <AmiBlitz3.ab3@25452>  RTS
0003325A <AmiBlitz3.ab3@25455>    MOVE.w dontwrite_nomemleft,D1                                     ;writeallocmem for functions (after releasemem called)
0003325E <AmiBlitz3.ab3@25456>    BNE.w 'contskip
00033264 <AmiBlitz3.ab3@25459>    TST.b fastfunc
00033268 <AmiBlitz3.ab3@25460>    BNE JUMP_errormsg_nofast
0003326E <AmiBlitz3.ab3@25462>   MOVE.l destpointer,-(A7)
00033274 <AmiBlitz3.ab3@25463>   MOVE.l A0,destpointer
00033278 <AmiBlitz3.ab3@25464>   MOVE.w #$4EB9,D1      ;jsr
0003327C <AmiBlitz3.ab3@25465>    BSR.w writeword
00033282 <AmiBlitz3.ab3@25466>    JSR addoff
00033286 <AmiBlitz3.ab3@25467>    BSR.w writelong
00033288 <AmiBlitz3.ab3@25469>   MOVEA.l (A7)+,A0
0003328E <AmiBlitz3.ab3@25470>   MOVEA.l destpointer,A1
00033290 <AmiBlitz3.ab3@25471>   MOVE.l A0,-(A1)
00033296 <AmiBlitz3.ab3@25472>   MOVE.l A0,destpointer
0003329A <AmiBlitz3.ab3@25475>   MOVE.w $8(A2),D4
0003329E <AmiBlitz3.ab3@25476>    BPL.w 'linky
000332A2 <AmiBlitz3.ab3@25477>   MOVE.w #$C004,D1   ; was  #newmem
000332A6 <AmiBlitz3.ab3@25478>    BSR.w tokejsr2
000332AC <AmiBlitz3.ab3@25479>   MOVEA.l currentfunction,A2
000332B0 <AmiBlitz3.ab3@25480>   MOVE.w $8(A2),D4
000332B4 <AmiBlitz3.ab3@25481>   ANDI.w #$7FFF,D4        ;#32767,
000332B8 <AmiBlitz3.ab3@25484>    BEQ.w 'skipstat
000332BC <AmiBlitz3.ab3@25488>   MOVE.b $4(A2),D1
000332C0 <AmiBlitz3.ab3@25489>   ANDI.w #$F,D1
000332C2 <AmiBlitz3.ab3@25490>   MOVE.w D1,-(A7)
000332C6 <AmiBlitz3.ab3@25491>   CMP.w #$5,D1
000332CA <AmiBlitz3.ab3@25492>    BCS.w 'npush
000332CE <AmiBlitz3.ab3@25493>   MOVE.w #$2F04,D1
000332D2 <AmiBlitz3.ab3@25494>    BSR.w writeword
000332D8 <AmiBlitz3.ab3@25497>   MOVE.l locdatast,D3
000332DE <AmiBlitz3.ab3@25498>    JSR datastart
000332E2 <AmiBlitz3.ab3@25499>   MOVE.w #$C501,D1    ; was #localstat
000332E6 <AmiBlitz3.ab3@25500>    BSR.w tokejsr2
000332E8 <AmiBlitz3.ab3@25502>   MOVE.w (A7)+,D1
000332EC <AmiBlitz3.ab3@25503>   CMP.w #$5,D1
000332F0 <AmiBlitz3.ab3@25504>    BCS.w 'skipstat
000332F4 <AmiBlitz3.ab3@25505>   MOVE.w #$281F,D1
000332F8 <AmiBlitz3.ab3@25506>    BSR.w writeword
000332FC <AmiBlitz3.ab3@25509>   MOVE.w #$4E75,D1
00033300 <AmiBlitz3.ab3@25510> BRA.w writeword
00033306 <AmiBlitz3.ab3@25514>   LEA mwait,A0
0003330C <AmiBlitz3.ab3@25515>   LEA mwaitf,A1
00033310 <AmiBlitz3.ab3@25516> BRA.w pokecode
00033316 <AmiBlitz3.ab3@25519> JUMP_laberr    JMP laberr
0003331C <AmiBlitz3.ab3@25520> JUMP_typeerr   JMP typeerr
00033322 <AmiBlitz3.ab3@25521> JUMP_dupofferr JMP dupofferr
00033326 <AmiBlitz3.ab3@25524>   CMP.w #$2E,D0           ;'.'
0003332A <AmiBlitz3.ab3@25525>   BNE.w JUMP_syntaxerr
00033330 <AmiBlitz3.ab3@25526>   JSR getparameter2
00033334 <AmiBlitz3.ab3@25527>   BEQ.w JUMP_laberr
0003333A <AmiBlitz3.ab3@25528>   LEA newtypebase,A2
00033340 <AmiBlitz3.ab3@25529>   JSR findtype
00033344 <AmiBlitz3.ab3@25530>   BNE.w 'ok1
0003334C <AmiBlitz3.ab3@25531>   CMPI.l #MaxByte,$4(A2)    ; was #$FF
00033350 <AmiBlitz3.ab3@25532>   BNE.w JUMP_typeerr
00033354 <AmiBlitz3.ab3@25533>  BRA.w 'ok2
0003335A <AmiBlitz3.ab3@25536>   JSR addlabel
0003335E <AmiBlitz3.ab3@25539>   CLR.l $4(A2)
00033364 <AmiBlitz3.ab3@25540>   MOVE.l A2,thistype
0003336A <AmiBlitz3.ab3@25541>   CLR.l prevtype
00033370 <AmiBlitz3.ab3@25542>   CLR.w typelen
00033376 <AmiBlitz3.ab3@25543>   CLR.w linemode
0003337C <AmiBlitz3.ab3@25544>   JSR reget
00033380 <AmiBlitz3.ab3@25545>   BNE.w typemode
00033382 <AmiBlitz3.ab3@25546> RTS
00033386 <AmiBlitz3.ab3@25550>   CMP.w #-$7FFE,D0      ; was #$8002
0003338A <AmiBlitz3.ab3@25551>   BEQ.w doend2
00033394 <AmiBlitz3.ab3@25554>   MOVE.w oldqflag,instringon
0003339A <AmiBlitz3.ab3@25555>   MOVEA.l lastsourcepos,A5
0003339C <AmiBlitz3.ab3@25557>   MOVEQ.l #$00,D6      ;not pointer
000333A0 <AmiBlitz3.ab3@25558>   CMP.w #$2A,D0        ;'*'
000333A4 <AmiBlitz3.ab3@25559>   BNE.w 'skip
000333A6 <AmiBlitz3.ab3@25560>   MOVEQ.l #$01,D6
000333AC <AmiBlitz3.ab3@25561>   JSR get1bytemain
000333B0 <AmiBlitz3.ab3@25562>  BRA.w 'skipv
000333B4 <AmiBlitz3.ab3@25565>   CMP.w #$40,D0         ;'@'
000333B8 <AmiBlitz3.ab3@25566>   BNE.w 'skipv
000333BA <AmiBlitz3.ab3@25567>   MOVEQ.l #$05,D6
000333C0 <AmiBlitz3.ab3@25568>   JSR get1bytemain
000333C6 <AmiBlitz3.ab3@25571>   MOVE.w D6,flagmask
000333CC <AmiBlitz3.ab3@25572>   JSR getparameter2
000333D0 <AmiBlitz3.ab3@25573>   BEQ.w JUMP_syntaxerr
000333D6 <AmiBlitz3.ab3@25574>   MOVEA.l thistype,A2
000333D8 <AmiBlitz3.ab3@25575>   ADDQ.w #4,A2
000333DE <AmiBlitz3.ab3@25576>   JSR findvariable2
000333E2 <AmiBlitz3.ab3@25577>   BEQ.w JUMP_dupofferr     ;beq    .skip2
000333E8 <AmiBlitz3.ab3@25579>   JSR addlabel
000333EA <AmiBlitz3.ab3@25582>   MOVE.l A2,-(A7)
000333EE <AmiBlitz3.ab3@25583>   CMP.w #$2E,D0           ;'.'
000333F2 <AmiBlitz3.ab3@25584>    BEQ.w 'skip3
000333F6 <AmiBlitz3.ab3@25585>   CMP.w #$24,D0           ;'$'
000333FA <AmiBlitz3.ab3@25586>    BNE.w 'notstring
00033400 <AmiBlitz3.ab3@25587>   MOVE.l #newtype_string,D2
00033406 <AmiBlitz3.ab3@25588>    JSR get1bytemain
0003340A <AmiBlitz3.ab3@25589>  BRA.w 'skip4a
00033410 <AmiBlitz3.ab3@25592>   MOVE.l prevtype,D2
00033414 <AmiBlitz3.ab3@25593>   BEQ.w JUMP_notypeerr2
00033418 <AmiBlitz3.ab3@25594>  BRA.w 'skip4
0003341E <AmiBlitz3.ab3@25597>   JSR getparameter2
00033422 <AmiBlitz3.ab3@25598>    BEQ.w JUMP_syntaxerr
00033428 <AmiBlitz3.ab3@25599>   LEA newtypebase,A2
0003342E <AmiBlitz3.ab3@25600>    JSR findtype
00033432 <AmiBlitz3.ab3@25601>    BEQ.w 'gotit
0003343A <AmiBlitz3.ab3@25602>   BTST #$0,flagmask+1
0003343E <AmiBlitz3.ab3@25603>    BEQ.w JUMP_notypeerr2
00033444 <AmiBlitz3.ab3@25607>   JSR addlabel
0003344C <AmiBlitz3.ab3@25612>   MOVE.w linenumat+2,$8(A2)
00033454 <AmiBlitz3.ab3@25613>   MOVE.l #MaxByte,$4(A2)       ; was $FF  ;set to pointer crap
00033456 <AmiBlitz3.ab3@25616>   MOVE.l A2,D2
0003345C <AmiBlitz3.ab3@25619>   CMP.l #newtype_byte,D2
00033460 <AmiBlitz3.ab3@25620>    BEQ.w 'byte
00033466 <AmiBlitz3.ab3@25623>   ADDQ.w #1,typelen
0003346E <AmiBlitz3.ab3@25624>   BCLR #$0,typelen+1
00033470 <AmiBlitz3.ab3@25627>   MOVEQ.l #$00,D3
00033472 <AmiBlitz3.ab3@25628>   MOVEA.l D2,A2
00033478 <AmiBlitz3.ab3@25629>   MOVE.l A2,prevtype
0003347C <AmiBlitz3.ab3@25630>   MOVE.w $8(A2),D3
0003347E <AmiBlitz3.ab3@25631>   MOVEA.l (A7)+,A2
00033482 <AmiBlitz3.ab3@25632>   MOVE.l D2,$A(A2)
00033484 <AmiBlitz3.ab3@25633>   MOVEQ.l #$00,D4
0003348A <AmiBlitz3.ab3@25634>   MOVE.w typelen,D4
0003348E <AmiBlitz3.ab3@25635>   MOVE.w D4,$4(A2)
00033496 <AmiBlitz3.ab3@25636>   BTST #$0,flagmask+1
0003349A <AmiBlitz3.ab3@25637>    BEQ.w 'skipz
0003349C <AmiBlitz3.ab3@25638>   MOVEQ.l #$04,D3
000334A0 <AmiBlitz3.ab3@25641>   CMP.w #$5B,D0            ;'['
000334A4 <AmiBlitz3.ab3@25642>    BNE.w 'skipzz
000334A8 <AmiBlitz3.ab3@25646>   MOVEM.l D3-D4/A2,-(A7)
000334AC <AmiBlitz3.ab3@25647>    BSR.w evalconst3
000334B0 <AmiBlitz3.ab3@25648>   CMP.w #$5D,D0            ;']'
000334B4 <AmiBlitz3.ab3@25649>    BNE.w JUMP_syntaxerr
000334B6 <AmiBlitz3.ab3@25650>   TST.w D6
000334BA <AmiBlitz3.ab3@25651>    BNE.w JUMP_fpconerr
000334BC <AmiBlitz3.ab3@25652>   MOVE.l D3,D1
000334C0 <AmiBlitz3.ab3@25653>   MOVEM.l (A7)+,D3-D4/A2
000334C6 <AmiBlitz3.ab3@25654>    JSR get1bytemain
000334CA <AmiBlitz3.ab3@25655>   MOVE.w D1,$8(A2)
000334CE <AmiBlitz3.ab3@25656>   MULU.l d1,d3                                             ;>32k fix was mulu.w
000334D6 <AmiBlitz3.ab3@25657>   ORI.w #$2,flagmask
000334D8 <AmiBlitz3.ab3@25660>   ADD.l D3,D4
000334DE <AmiBlitz3.ab3@25663>     CMP.l #65532,d4
000334E2 <AmiBlitz3.ab3@25669>   BCC JUMP_toolongerr
000334EA <AmiBlitz3.ab3@25670>   MOVE.w flagmask,$6(A2)
000334F0 <AmiBlitz3.ab3@25671>   MOVE.w D4,typelen
000334F2 <AmiBlitz3.ab3@25672> RTS
000334F8 <AmiBlitz3.ab3@25675> JUMP_badenderr  JMP badenderr
000334FE <AmiBlitz3.ab3@25676> JUMP_noiferr    JMP noiferr
00033504 <AmiBlitz3.ab3@25677> JUMP_toolongerr JMP toolongerr
0003350A <AmiBlitz3.ab3@25678> JUMP_fpconerr   JMP fpconerr
00033510 <AmiBlitz3.ab3@25682>   MOVE.l firstiff,D0
00033514 <AmiBlitz3.ab3@25683>    BEQ.w JUMP_noiferr
00033516 <AmiBlitz3.ab3@25684>   MOVEA.l D0,A0
0003351A <AmiBlitz3.ab3@25685>   MOVE.w $C(A0),D0
0003351E <AmiBlitz3.ab3@25686>   ANDI.w #$FF,D0
00033520 <AmiBlitz3.ab3@25687>   CMP.w D0,D1
00033524 <AmiBlitz3.ab3@25688>    BNE.w JUMP_badenderr
00033528 <AmiBlitz3.ab3@25691>   CMP.w #$1,D1
0003352C <AmiBlitz3.ab3@25692>   BNE.w 'calcbra
00033530 <AmiBlitz3.ab3@25694>   MOVE.w #$6000,D1
00033536 <AmiBlitz3.ab3@25697>     TST.b fast
0003353A <AmiBlitz3.ab3@25698>     BEQ 'l1
00033540 <AmiBlitz3.ab3@25699>     OR.l #$ff,d1
00033544 <AmiBlitz3.ab3@25704>   BSR.w writeword
0003354A <AmiBlitz3.ab3@25705>   MOVEA.l destpointer,A1
0003354E <AmiBlitz3.ab3@25706>   MOVE.l $4(A0),D1
00033550 <AmiBlitz3.ab3@25707>   SUB.l A1,D1
00033556 <AmiBlitz3.ab3@25710>     TST.b fast
0003355A <AmiBlitz3.ab3@25711>     BEQ 'l2
0003355E <AmiBlitz3.ab3@25712>     BSR writelong
00033562 <AmiBlitz3.ab3@25713>   BRA 'calcbra
00033566 <AmiBlitz3.ab3@25718>   BSR.w writeword
0003356A <AmiBlitz3.ab3@25721>   MOVEA.l $8(A0),A1                                        ;write if branch destination
00033570 <AmiBlitz3.ab3@25722>   MOVE.l destpointer,D1
00033572 <AmiBlitz3.ab3@25723>   SUB.l A1,D1
00033578 <AmiBlitz3.ab3@25726>     TST.b fast
0003357C <AmiBlitz3.ab3@25727>     BEQ 'l3
0003357E <AmiBlitz3.ab3@25728>     ADDQ.l #4,D1
00033584 <AmiBlitz3.ab3@25729>     MOVE.w dontwrite_nomemleft,D0
00033588 <AmiBlitz3.ab3@25730>     BNE.w 'skip
0003358C <AmiBlitz3.ab3@25731>     MOVE.l d1,-$4(a1)
00033590 <AmiBlitz3.ab3@25732>   BRA 'skip
00033592 <AmiBlitz3.ab3@25737>   ADDQ.l #2,d1
00033598 <AmiBlitz3.ab3@25739>   TST.w dontwrite_nomemleft
0003359C <AmiBlitz3.ab3@25741>   BNE 'skip
000335A2 <AmiBlitz3.ab3@25743>   CMP.l #MinWordSgnd,D1
000335A6 <AmiBlitz3.ab3@25744>   BCC.w JUMP_bigiferr
000335AA <AmiBlitz3.ab3@25746>   MOVE.w D1,-$2(A1)
000335AC <AmiBlitz3.ab3@25749> RTS
000335B2 <AmiBlitz3.ab3@25751> JUMP_bigiferr JMP bigiferr
000335BC <AmiBlitz3.ab3@25756>   MOVE.w oldqflag,instringon
000335C2 <AmiBlitz3.ab3@25757>   MOVEA.l lastsourcepos,A5
000335C4 <AmiBlitz3.ab3@25760>   MOVEQ.l #$01,D1
000335C8 <AmiBlitz3.ab3@25761> BRA.w doendif
000335D2 <AmiBlitz3.ab3@25765>   MOVE.w oldqflag,instringon
000335D8 <AmiBlitz3.ab3@25766>   MOVEA.l lastsourcepos,A5
000335DA <AmiBlitz3.ab3@25769>   MOVEQ.l #$00,D1
000335DE <AmiBlitz3.ab3@25772>   BSR.w doendif3
000335E2 <AmiBlitz3.ab3@25773>   BSR.w freetheifz
000335E8 <AmiBlitz3.ab3@25774> JMP get1bytemain
000335EE <AmiBlitz3.ab3@25778>   MOVE.l (A0),firstiff
000335F0 <AmiBlitz3.ab3@25779>   MOVEA.l A0,A1
000335F2 <AmiBlitz3.ab3@25780>   MOVEQ.l #$0E,D0
000335F8 <AmiBlitz3.ab3@25781>   MOVEA.l _execbase,A6
000335FE <AmiBlitz3.ab3@25784>   MOVE.l mempool,a0
00033602 <AmiBlitz3.ab3@25785> JMP _FreePooled(A6)
00033608 <AmiBlitz3.ab3@25789> JUMP_modeerr JMP modeerr
0003360E <AmiBlitz3.ab3@25790> JUMP_interr3 JMP interr3
00033614 <AmiBlitz3.ab3@25791> JUMP_interr JMP interr
0003361A <AmiBlitz3.ab3@25795>   JSR get1bytemain
0003361E <AmiBlitz3.ab3@25798>   BEQ.w 'done
00033626 <AmiBlitz3.ab3@25800>   CMP.l #"noa7",-1(a5)
0003362A <AmiBlitz3.ab3@25801>   BNE 'l1
00033630 <AmiBlitz3.ab3@25802>   JSR get1bytemain
00033636 <AmiBlitz3.ab3@25803>   JSR get1bytemain
0003363C <AmiBlitz3.ab3@25804>   JSR get1bytemain
00033644 <AmiBlitz3.ab3@25805>   MOVE.w #$3a,lastchar
00033648 <AmiBlitz3.ab3@25806>  BRA 'done
0003364E <AmiBlitz3.ab3@25809>   CMP.w #"d0",-1(a5)
00033652 <AmiBlitz3.ab3@25810>   BNE 'l2
0003365A <AmiBlitz3.ab3@25811>   MOVE.b #1,returncode
00033660 <AmiBlitz3.ab3@25812>   CLR.w lastchar
00033664 <AmiBlitz3.ab3@25813>  BRA 'done
00033668 <AmiBlitz3.ab3@25816>   CMP.w #$80d7,d0
0003366C <AmiBlitz3.ab3@25817>   BNE 'loop
00033672 <AmiBlitz3.ab3@25818>   JSR skiprest
00033674 <AmiBlitz3.ab3@25819>  RTS
00033678 <AmiBlitz3.ab3@25823>   BSR.w 'doend3
0003367E <AmiBlitz3.ab3@25824>   JSR reget
00033682 <AmiBlitz3.ab3@25825>   BNE.w 'loop
00033684 <AmiBlitz3.ab3@25826>  RTS
00033688 <AmiBlitz3.ab3@25829>   CMP.w #-$7FFF,D0        ; was #$8001
0003368C <AmiBlitz3.ab3@25830>    BNE.w 'nottype
00033692 <AmiBlitz3.ab3@25831>   MOVE.w linemode,D1
00033696 <AmiBlitz3.ab3@25832>    BNE.w JUMP_modeerr
0003369C <AmiBlitz3.ab3@25833>   ADDQ.w #1,typelen
000336A4 <AmiBlitz3.ab3@25834>   BCLR #$0,typelen+1
000336AA <AmiBlitz3.ab3@25835>   MOVEA.l thistype,A0
000336B2 <AmiBlitz3.ab3@25836>   MOVE.w typelen,$8(A0)
000336BA <AmiBlitz3.ab3@25837>   MOVE.w #$FFFF,linemode        ; was -1
000336C0 <AmiBlitz3.ab3@25838>  JMP get1bytemain
000336C4 <AmiBlitz3.ab3@25841>   CMP.w #-$7FF5,D0    ; was #$800b
000336C8 <AmiBlitz3.ab3@25842>    BEQ.w mydoendif
000336CC <AmiBlitz3.ab3@25845>   CMP.w #-$7FF4,D0    ; was #$800c
000336D0 <AmiBlitz3.ab3@25846>    BEQ.w dowend2
000336D4 <AmiBlitz3.ab3@25849>   CMP.w #-$7FF8,D0    ; was #$8008
000336D8 <AmiBlitz3.ab3@25850>    BNE.w 'notstate
000336DC <AmiBlitz3.ab3@25855>  BRA.w endstate
000336E0 <AmiBlitz3.ab3@25858>   CMP.w #-$7FF7,D0        ; was #$8009
000336E4 <AmiBlitz3.ab3@25859>    BNE.w 'notfunc
000336EA <AmiBlitz3.ab3@25861>    TST.b fpu
000336EE <AmiBlitz3.ab3@25862>    BEQ 'nof
000336F4 <AmiBlitz3.ab3@25863>    MOVEA.l currentfunction,A0
000336FA <AmiBlitz3.ab3@25864>    CMP.l #0,a0
000336FE <AmiBlitz3.ab3@25865>    BEQ 'nof
00033704 <AmiBlitz3.ab3@25866>    CMP.b #5,$5(a0)
00033708 <AmiBlitz3.ab3@25867>     BNE 'nof
0003370E <AmiBlitz3.ab3@25868>    MOVE.l #$f23c5000,d1
00033712 <AmiBlitz3.ab3@25869>    BSR writelong
00033716 <AmiBlitz3.ab3@25870>    MOVE.w #0,d1
0003371A <AmiBlitz3.ab3@25871>    BSR writeword
0003371E <AmiBlitz3.ab3@25875>   MOVE.w #$7000,D1                                         ;end function moveq #0,d0
00033722 <AmiBlitz3.ab3@25876>    BSR.w writeword
00033728 <AmiBlitz3.ab3@25877>   MOVEA.l currentfunction,A0
0003372E <AmiBlitz3.ab3@25879>   CMP.l #0,a0
00033732 <AmiBlitz3.ab3@25880>   BEQ 'state
00033738 <AmiBlitz3.ab3@25881>   MOVE.l destpointer,d1
0003373C <AmiBlitz3.ab3@25882>   SUB.l $e(a0),d1
00033740 <AmiBlitz3.ab3@25883>   MOVE.l d1,isfunc+1(a0)
00033746 <AmiBlitz3.ab3@25885>   CMPI.b #$7,$5(A0)
0003374A <AmiBlitz3.ab3@25886>    BNE.w 'state
00033750 <AmiBlitz3.ab3@25887>   MOVE.w putstlen,D1
00033754 <AmiBlitz3.ab3@25888>    BSR.w writeword
00033758 <AmiBlitz3.ab3@25889>  BRA.w 'state
0003375C <AmiBlitz3.ab3@25892>   CMP.w #-$7FD0,D0         ; was #$8000+48
00033760 <AmiBlitz3.ab3@25893>    BNE.w 'notsetint
00033766 <AmiBlitz3.ab3@25895>   MOVE.w proceduremode,D1
0003376A <AmiBlitz3.ab3@25896>    BNE.w JUMP_interr3
00033770 <AmiBlitz3.ab3@25898>   TST.b debugmode
00033774 <AmiBlitz3.ab3@25899>    BEQ.w 'norerrf1
00033776 <AmiBlitz3.ab3@25901>   MOVEQ.l #$03,D1
0003377C <AmiBlitz3.ab3@25902>    JSR writetrap
00033782 <AmiBlitz3.ab3@25904>   MOVE.w dontwrite_nomemleft,D1
00033786 <AmiBlitz3.ab3@25905>    BNE.w 'norerrf1
0003378C <AmiBlitz3.ab3@25907>   MOVEA.l intcleanat,A0
00033792 <AmiBlitz3.ab3@25908>   MOVE.l destpointer,(A0)
00033796 <AmiBlitz3.ab3@25910>   MOVE.w #$C30C,D1       ; was #gouse
0003379A <AmiBlitz3.ab3@25911>    BSR.w Atokejsr        ;for runerrlib stack chex
000337A0 <AmiBlitz3.ab3@25914>   MOVE.w intstring,D1
000337A4 <AmiBlitz3.ab3@25915>    BEQ.w JUMP_interr
000337A8 <AmiBlitz3.ab3@25916>    BPL.w 'nosp
000337AE <AmiBlitz3.ab3@25918>   MOVE.w intlevel,D1
000337B2 <AmiBlitz3.ab3@25919>   ORI.w #$7200,D1
000337B6 <AmiBlitz3.ab3@25920>    BSR.w writeword       ;moveq #level,d1
000337BA <AmiBlitz3.ab3@25921>   MOVE.w #$C103,D1       ; was #oldint,
000337BE <AmiBlitz3.ab3@25922>    BSR.w Atokejsr
000337C4 <AmiBlitz3.ab3@25923>   CLR.w intlevel
000337CA <AmiBlitz3.ab3@25926>   CLR.w intstring
000337D0 <AmiBlitz3.ab3@25928>   MOVE.l intfin,D1
000337D4 <AmiBlitz3.ab3@25929>    BSR.w writelong
000337DA <AmiBlitz3.ab3@25931>   MOVE.l #$70004E75,D1
000337DE <AmiBlitz3.ab3@25932>    BSR.w writelong
000337E4 <AmiBlitz3.ab3@25934>   MOVE.w dontwrite_nomemleft,D1
000337E8 <AmiBlitz3.ab3@25935>    BNE.w 'sintdone
000337EE <AmiBlitz3.ab3@25936>   MOVEA.l intjmpat,A0
000337F2 <AmiBlitz3.ab3@25937>   MOVE.l destpointer(PC),(A0)
000337F8 <AmiBlitz3.ab3@25940>  JMP get1bytemain
000337FC <AmiBlitz3.ab3@25943>   CMP.w #-$7FF2,D0   ; was #$800e     ;end select?
00033800 <AmiBlitz3.ab3@25944>    BEQ.w doendsel
00033804 <AmiBlitz3.ab3@25945>   CMP.w #-$7F4C,D0  ; was #$8001+tnum
00033808 <AmiBlitz3.ab3@25946>    BNE.w 'notseterr
0003380E <AmiBlitz3.ab3@25947>  JMP doendseterr
00033814 <AmiBlitz3.ab3@25951>  JMP syntaxerr
0003381A <AmiBlitz3.ab3@25954>   TST.w dirmode
0003381E <AmiBlitz3.ab3@25955>   BNE.w JUMP_baddirerr
00033822 <AmiBlitz3.ab3@25956>   MOVE.w #$C800,D1      ; #endjmp
00033828 <AmiBlitz3.ab3@25957>   JSR Atokejsr          ; was bra org source                                  ;end
00033830 <AmiBlitz3.ab3@25959>   CMP.l #"noa7",-4(a5)
00033834 <AmiBlitz3.ab3@25960>   BNE 'l10
0003383A <AmiBlitz3.ab3@25961>   TST.w dontwrite_nomemleft
0003383E <AmiBlitz3.ab3@25962>   BNE 'l10
00033844 <AmiBlitz3.ab3@25963>   MOVE.l destpointer,d1
00033846 <AmiBlitz3.ab3@25964>   SUBQ.l #4,d1
00033848 <AmiBlitz3.ab3@25965>   MOVE.l a0,-(a7)
0003384A <AmiBlitz3.ab3@25966>   MOVE.l d1,a0
0003384C <AmiBlitz3.ab3@25967>   MOVE.l (a0),a0
00033852 <AmiBlitz3.ab3@25968>   MOVE.l #$60000002,(a0)+
00033856 <AmiBlitz3.ab3@25969>   MOVE.w #$588f,(a0)
00033858 <AmiBlitz3.ab3@25970>   MOVE.l (a7)+,a0
0003385A <AmiBlitz3.ab3@25973> RTS
00033860 <AmiBlitz3.ab3@25978>   TST.w dirmode                                            ;stop
00033864 <AmiBlitz3.ab3@25979>   BNE.w JUMP_baddirerr
00033866 <AmiBlitz3.ab3@25981>   MOVE.w d0,d1
0003386A <AmiBlitz3.ab3@25982>   BEQ 'l10
0003386E <AmiBlitz3.ab3@25983>   CMP.b #$3a,d0
00033872 <AmiBlitz3.ab3@25984>   BEQ 'l10
00033878 <AmiBlitz3.ab3@25985>   JSR get1bytemain
0003387E <AmiBlitz3.ab3@25989>   TST.b debugmode
00033882 <AmiBlitz3.ab3@25990>   BEQ.w newstop
00033886 <AmiBlitz3.ab3@25991>   MOVE.w #$D501,D1
0003388A <AmiBlitz3.ab3@25992> BRA.w Atokejsr
0003388C <AmiBlitz3.ab3@25998>     RTS
0003388E <AmiBlitz3.ab3@26000>   MOVE.w d1,d0
00033892 <AmiBlitz3.ab3@26001>   BEQ 'l10
00033896 <AmiBlitz3.ab3@26002>   CMP.b #$3a,d0
0003389A <AmiBlitz3.ab3@26003>   BEQ 'l10
0003389E <AmiBlitz3.ab3@26004>   SUB.b #$30,d0
000338A2 <AmiBlitz3.ab3@26005>   MOVE.w #$4e40,d1
000338A6 <AmiBlitz3.ab3@26006>  BRA 'l11
000338AA <AmiBlitz3.ab3@26009>   MOVE.w #$4e4a,d1
000338AE <AmiBlitz3.ab3@26010>  BRA writeword
000338B0 <AmiBlitz3.ab3@26013>   ADD.b d0,d1
000338B4 <AmiBlitz3.ab3@26014> BRA writeword
000338BA <AmiBlitz3.ab3@26018> JMP badconterr        ;cont not currently supported!
000338BE <AmiBlitz3.ab3@26021>   MOVE.w #$4E71,D1
000338C2 <AmiBlitz3.ab3@26022> BRA.w writeword
000338C8 <AmiBlitz3.ab3@26027>   MOVEA.l firstfor,A2
000338CE <AmiBlitz3.ab3@26028>   CLR.l firstfor
000338D4 <AmiBlitz3.ab3@26029>   MOVEA.l _execbase,A6
000338D8 <AmiBlitz3.ab3@26032>   CMPA.w #$0,A2
000338DC <AmiBlitz3.ab3@26033>   BEQ.w 'done
000338DE <AmiBlitz3.ab3@26034>   MOVEA.l A2,A1
000338E0 <AmiBlitz3.ab3@26035>   MOVEA.l (A1),A2
000338E2 <AmiBlitz3.ab3@26036>   MOVEQ.l #$00,D0
000338E6 <AmiBlitz3.ab3@26037>   MOVE.b $10(A1),D0
000338EC <AmiBlitz3.ab3@26040>   MOVE.l mempool2,a0  
000338F0 <AmiBlitz3.ab3@26041>   JSR _FreePooled(A6)                                      ;freememfor_error
000338F4 <AmiBlitz3.ab3@26043>  BRA.w 'loop
000338F6 <AmiBlitz3.ab3@26046> RTS
000338FC <AmiBlitz3.ab3@26049> JUMP_badpenderr JMP badpenderr
00033902 <AmiBlitz3.ab3@26050> JUMP_noenderr   JMP noenderr
00033908 <AmiBlitz3.ab3@26056>   MOVE.w proceduremode,D1
0003390C <AmiBlitz3.ab3@26057>    BEQ.w JUMP_badpenderr
00033912 <AmiBlitz3.ab3@26059>   MOVE.w dontwrite_nomemleft,D1
00033916 <AmiBlitz3.ab3@26060>    BNE.w 'ship
0003391C <AmiBlitz3.ab3@26061>   MOVEA.l firstpend,A2
00033920 <AmiBlitz3.ab3@26064>   CMPA.w #$0,A2
00033924 <AmiBlitz3.ab3@26065>    BEQ.w 'ship
00033928 <AmiBlitz3.ab3@26066>   MOVEA.l $4(A2),A0
0003392E <AmiBlitz3.ab3@26067>   MOVE.l destpointer,(A0)
00033930 <AmiBlitz3.ab3@26068>   MOVEA.l (A2),A2
00033934 <AmiBlitz3.ab3@26069>  BRA.w 'loop0
0003393A <AmiBlitz3.ab3@26072>   TST.b debugmode
0003393E <AmiBlitz3.ab3@26073>    BEQ.b 'ship2
00033940 <AmiBlitz3.ab3@26075>   MOVEQ.l #$05,D1
00033946 <AmiBlitz3.ab3@26076>   JSR writetrap
0003394C <AmiBlitz3.ab3@26079>   MOVEA.l firstlocal,A2                                    ;firstlocal
00033952 <AmiBlitz3.ab3@26080>   JSR calcstatic2b                                           ;calcstatic
00033958 <AmiBlitz3.ab3@26081>   MOVEA.l currentfunction,A0
0003395E <AmiBlitz3.ab3@26083>   MOVE.l destpointer,d1
00033962 <AmiBlitz3.ab3@26084>   SUB.l $e(a0),d1
00033966 <AmiBlitz3.ab3@26085>   MOVE.l d1,isfunc+1(a0)                                   ;store function size
0003396A <AmiBlitz3.ab3@26087>   MOVE.w D4,$8(A0)                                         ;set if memalloc need
00033970 <AmiBlitz3.ab3@26088>   MOVE.l D3,locdatast
00033976 <AmiBlitz3.ab3@26089>   MOVEA.l tempvm,A1
0003397C <AmiBlitz3.ab3@26091>   CLR.b infunctioncode
00033982 <AmiBlitz3.ab3@26092>   MOVE.l firstiffstore,d1
00033988 <AmiBlitz3.ab3@26093>   CMP.l firstiff,d1
0003398C <AmiBlitz3.ab3@26094>   BNE JUMP_noenderr
00033990 <AmiBlitz3.ab3@26096>   TST.w $C(A1)                                             ;dim
00033994 <AmiBlitz3.ab3@26097>    BPL.w 'nolskip
0003399A <AmiBlitz3.ab3@26098>  BSET #$7,$8(A0)
0003399E <AmiBlitz3.ab3@26099>   MOVE.w #$C005,D1      ;#freelast,
000339A2 <AmiBlitz3.ab3@26100>    BSR.w tokejsr2                                          ;writefreememstatement
000339A6 <AmiBlitz3.ab3@26101>  BRA.w 'lskip2
000339AE <AmiBlitz3.ab3@26104>   MOVE.w memlibstat,$C(A1)
000339B4 <AmiBlitz3.ab3@26107>   MOVEA.l currentfunction,A0
000339B8 <AmiBlitz3.ab3@26108>   MOVE.l $E(A0),-(A7)
000339C0 <AmiBlitz3.ab3@26109>   MOVE.w locvaroff,$6(A0)
000339C6 <AmiBlitz3.ab3@26110>   BCLR #$1,$7(A0)
000339CC <AmiBlitz3.ab3@26111>   BCLR #$0,$7(A0)
000339D2 <AmiBlitz3.ab3@26112>   CMPI.b #$7,$5(A0)
000339D6 <AmiBlitz3.ab3@26113>    BNE.w 'penis
000339DC <AmiBlitz3.ab3@26114>   MOVE.w getstlen,D1
000339E0 <AmiBlitz3.ab3@26115>    BSR.w writeword
000339E4 <AmiBlitz3.ab3@26118>   TST.w $6(A0)
000339E8 <AmiBlitz3.ab3@26119>    BEQ.w 'nolink
000339EC <AmiBlitz3.ab3@26120>   MOVE.w #$FC7B,D1   ;#64635
000339F2 <AmiBlitz3.ab3@26121>    JSR uselib
000339F8 <AmiBlitz3.ab3@26122>   MOVE.w unlinka4,D1
000339FE <AmiBlitz3.ab3@26123>    JSR writeword
00033A04 <AmiBlitz3.ab3@26129>   MOVEA.l currentfunction,A0
00033A06 <AmiBlitz3.ab3@26130>   MOVEQ.l #$00,D1
00033A0A <AmiBlitz3.ab3@26131>   MOVE.b $4(A0),D1
00033A0C <AmiBlitz3.ab3@26132>   LSR.w #4,D1
00033A10 <AmiBlitz3.ab3@26133>    BEQ.w 'nofix
00033A12 <AmiBlitz3.ab3@26136>      LSL.w #1,d1
00033A16 <AmiBlitz3.ab3@26139>   CMP.w #$1,D1
00033A1A <AmiBlitz3.ab3@26140>    BNE.w 'not1
00033A20 <AmiBlitz3.ab3@26141>   MOVE.w fix1,D1
00033A26 <AmiBlitz3.ab3@26142>    JSR writeword
00033A2A <AmiBlitz3.ab3@26143>  BRA.w 'nofix
00033A2C <AmiBlitz3.ab3@26146>   LSL.w #2,D1
00033A2E <AmiBlitz3.ab3@26147>   MOVE.w D1,-(A7)
00033A34 <AmiBlitz3.ab3@26148>   MOVE.w D1,moverts+2
00033A3A <AmiBlitz3.ab3@26149>   MOVE.l moverts,D1
00033A40 <AmiBlitz3.ab3@26150>    JSR writelong
00033A42 <AmiBlitz3.ab3@26151>   MOVE.w (A7)+,D1
00033A46 <AmiBlitz3.ab3@26152>   CMP.w #$8,D1
00033A4A <AmiBlitz3.ab3@26153>    BHI.w 'fix
00033A4E <AmiBlitz3.ab3@26154>   ANDI.w #$7,D1
00033A50 <AmiBlitz3.ab3@26155>   LSL.w #8,D1
00033A52 <AmiBlitz3.ab3@26156>   LSL.w #1,D1
00033A58 <AmiBlitz3.ab3@26157>   OR.w fixq,D1
00033A5E <AmiBlitz3.ab3@26158>    JSR writeword
00033A62 <AmiBlitz3.ab3@26159>  BRA.w 'nofix
00033A68 <AmiBlitz3.ab3@26162>    MOVE.w D1,fixstack+2
00033A6E <AmiBlitz3.ab3@26163>   MOVE.l fixstack,D1
00033A74 <AmiBlitz3.ab3@26164>    JSR writelong
00033A78 <AmiBlitz3.ab3@26167>    BSR.w normret
00033A7C <AmiBlitz3.ab3@26171>    BSR.w procfixer
00033A7E <AmiBlitz3.ab3@26173>   MOVEA.l (A7)+,A0
00033A84 <AmiBlitz3.ab3@26174>   MOVE.w dontwrite_nomemleft,D1
00033A88 <AmiBlitz3.ab3@26175>    BNE.w 'skipjp
00033A8E <AmiBlitz3.ab3@26176>   MOVE.l destpointer,-(A0)
00033A94 <AmiBlitz3.ab3@26179>   CLR.w proceduremode
00033A9A <AmiBlitz3.ab3@26180>   CLR.l currentfunction
00033AA0 <AmiBlitz3.ab3@26181>   CLR.w procnum
00033AA4 <AmiBlitz3.ab3@26182>    BSR.w droplocals
00033AAA <AmiBlitz3.ab3@26183>    JSR freepends
00033AB0 <AmiBlitz3.ab3@26184> JMP get1bytemain
00033AB2 <AmiBlitz3.ab3@26188>   MOVEQ.l #$0C,D0
00033AB4 <AmiBlitz3.ab3@26189>   MOVEQ.l #$01,D1
00033ABA <AmiBlitz3.ab3@26190>   MOVEA.l _execbase,A6
00033AC0 <AmiBlitz3.ab3@26193>   MOVE.l mempool,a0
00033AC4 <AmiBlitz3.ab3@26194>   JSR _AllocPooled(a6)
00033AC6 <AmiBlitz3.ab3@26196>   MOVEA.l D0,A0
00033ACC <AmiBlitz3.ab3@26197>   MOVE.l alllocals,(A0)
00033AD2 <AmiBlitz3.ab3@26198>   MOVE.l A0,alllocals
00033AD8 <AmiBlitz3.ab3@26200>   MOVE.l firstlocal,D0
00033ADE <AmiBlitz3.ab3@26201>   CLR.l firstlocal
00033AE2 <AmiBlitz3.ab3@26202>   MOVE.l D0,$4(A0)
00033AE8 <AmiBlitz3.ab3@26203>   MOVE.l firstglob,D1
00033AEE <AmiBlitz3.ab3@26204>   CLR.l firstglob
00033AF2 <AmiBlitz3.ab3@26205>   MOVE.l D1,$8(A0)
00033AF8 <AmiBlitz3.ab3@26207>   TST.b debugmode
00033AFC <AmiBlitz3.ab3@26208>    BEQ.b 'skip
00033B02 <AmiBlitz3.ab3@26209>   TST.w dontwrite_nomemleft
00033B06 <AmiBlitz3.ab3@26210>    BNE.b 'skip
00033B0A <AmiBlitz3.ab3@26212>   MOVEA.l proclocals(PC),A0
00033B0C <AmiBlitz3.ab3@26213>   MOVE.l D0,(A0)+
00033B0E <AmiBlitz3.ab3@26214>   MOVE.l D1,(A0)
00033B10 <AmiBlitz3.ab3@26217> RTS
00033B16 <AmiBlitz3.ab3@26220> JUMP_baddirerr JMP baddirerr
00033B1C <AmiBlitz3.ab3@26221> JUMP_noforerr  JMP noforerr
00033B22 <AmiBlitz3.ab3@26225>   TST.w dirmode
00033B26 <AmiBlitz3.ab3@26226>    BNE.w JUMP_baddirerr
00033B2C <AmiBlitz3.ab3@26227>   MOVE.l firstfor,D1
00033B30 <AmiBlitz3.ab3@26228>    BEQ.w JUMP_noforerr
00033B36 <AmiBlitz3.ab3@26229>   JSR reget
00033B3A <AmiBlitz3.ab3@26230>    BEQ.w 'unknown
00033B3E <AmiBlitz3.ab3@26236>   BSR.w getparameter
00033B42 <AmiBlitz3.ab3@26237>   MOVEA.l firstfor(PC),A2
00033B44 <AmiBlitz3.ab3@26238>   MOVEQ.l #$00,D1
00033B48 <AmiBlitz3.ab3@26239>   MOVE.b $10(A2),D1
00033B4C <AmiBlitz3.ab3@26240>   SUBI.w #$12,D1
00033B4E <AmiBlitz3.ab3@26241>   CMP.w D1,D2
00033B52 <AmiBlitz3.ab3@26242>    BNE.w JUMP_noforerr
00033B56 <AmiBlitz3.ab3@26243>   LEA ptr_parameterstore(PC),A0
00033B5A <AmiBlitz3.ab3@26244>   LEA $11(A2),A1
00033B5C <AmiBlitz3.ab3@26245>   SUBQ.w #1,D2
00033B5E <AmiBlitz3.ab3@26248>     CMPM.b (A0)+,(A1)+
00033B62 <AmiBlitz3.ab3@26249>     BNE.w JUMP_noforerr
00033B66 <AmiBlitz3.ab3@26250>   DBF D2,'chkname
00033B6A <AmiBlitz3.ab3@26252>    BSR.w 'unknown2
00033B70 <AmiBlitz3.ab3@26253>    JSR reget
00033B74 <AmiBlitz3.ab3@26254>    BEQ.w 'byebye
00033B78 <AmiBlitz3.ab3@26255>   CMP.w #$2C,D0           ; ','
00033B7C <AmiBlitz3.ab3@26256>    BNE.w JUMP_syntaxerr
00033B82 <AmiBlitz3.ab3@26257>    JSR get1bytemain
00033B86 <AmiBlitz3.ab3@26258>  BRA.w 'nextnext
00033B88 <AmiBlitz3.ab3@26261>  RTS
00033B8C <AmiBlitz3.ab3@26265>   MOVE.l 8(a7),a2
00033B90 <AmiBlitz3.ab3@26266>   Dc.l  $f2124400                                          ;fmove.s (a2),fp0
00033B94 <AmiBlitz3.ab3@26267>   Dc.l  $F2174422                                          ;fadd.s (a7),fp0
00033B98 <AmiBlitz3.ab3@26268>   Dc.l  $F2126400                                          ;fmove.s fp0,(a2)
00033B9A <AmiBlitz3.ab3@26273>   MOVEA.l D1,A2
00033BA0 <AmiBlitz3.ab3@26276>   JSR popnext                                           ;error checking for next.
00033BA4 <AmiBlitz3.ab3@26277>   MOVE.w $C(A2),D0
00033BAA <AmiBlitz3.ab3@26279>   LEA nextb,A0
00033BB0 <AmiBlitz3.ab3@26280>   LEA nextbf,A1
00033BB4 <AmiBlitz3.ab3@26281>   CMP.w #$1,D0
00033BB8 <AmiBlitz3.ab3@26282>    BEQ.w 'donext
00033BBE <AmiBlitz3.ab3@26283>   LEA nextw,A0
00033BC4 <AmiBlitz3.ab3@26284>   LEA nextwf,A1
00033BC8 <AmiBlitz3.ab3@26285>   CMP.w #$2,D0
00033BCC <AmiBlitz3.ab3@26286>    BEQ.w 'donext
00033BD2 <AmiBlitz3.ab3@26287>   LEA nextl,A0
00033BD8 <AmiBlitz3.ab3@26288>   LEA nextlf,A1
00033BDC <AmiBlitz3.ab3@26289>   CMP.w #$5,D0
00033BE0 <AmiBlitz3.ab3@26290>    BNE.w 'donext
00033BE6 <AmiBlitz3.ab3@26292>    TST.b fpu
00033BEA <AmiBlitz3.ab3@26293>    BEQ 'old
00033BF0 <AmiBlitz3.ab3@26294>    LEA 'fpu2dats,a0                                         ;fpu next code
00033BF6 <AmiBlitz3.ab3@26295>    LEA 'fpu2date,a1
00033BFA <AmiBlitz3.ab3@26296>  BRA 'donext
00033BFE <AmiBlitz3.ab3@26300>   MOVE.w #$C900,D1     ; #getffpbase
00033C02 <AmiBlitz3.ab3@26301>    BSR.w Atokejsr
00033C08 <AmiBlitz3.ab3@26302>   LEA nextf,A0
00033C0E <AmiBlitz3.ab3@26303>   LEA nextff,A1
00033C14 <AmiBlitz3.ab3@26306>   JSR pokecode
00033C1A <AmiBlitz3.ab3@26308>    TST.b fast                                             ;fast for next deactivate
00033C1E <AmiBlitz3.ab3@26309>  BRA 'l1
00033C24 <AmiBlitz3.ab3@26311>     TST.b onestep
00033C28 <AmiBlitz3.ab3@26312>     BEQ 'l1
00033C2E <AmiBlitz3.ab3@26313>     CLR.b onestep
00033C34 <AmiBlitz3.ab3@26314>     SUBQ.l #4,destpointer
00033C38 <AmiBlitz3.ab3@26315>     MOVE.w #$5292,d1
00033C3E <AmiBlitz3.ab3@26316>     JSR writeword
00033C42 <AmiBlitz3.ab3@26320>   MOVE.l thebra(PC),D1
00033C48 <AmiBlitz3.ab3@26321>    JSR writelong
00033C4E <AmiBlitz3.ab3@26323>   MOVEA.l firstfor,A2
00033C54 <AmiBlitz3.ab3@26324>   MOVE.l (A2),firstfor
00033C58 <AmiBlitz3.ab3@26328>   MOVEA.l $8(A2),A0
00033C5E <AmiBlitz3.ab3@26329>   MOVEA.l destpointer,A1
00033C60 <AmiBlitz3.ab3@26330>   MOVE.l A1,D1
00033C62 <AmiBlitz3.ab3@26331>   SUB.l A0,D1            ;d1=positive bra
00033C64 <AmiBlitz3.ab3@26332>   ADDQ.l #2,D1
00033C6A <AmiBlitz3.ab3@26333>   CMP.l #MinWordSgnd,D1  ; #32768,
00033C6E <AmiBlitz3.ab3@26334>    BCC.w JUMP_bigforerr
00033C74 <AmiBlitz3.ab3@26335>   TST.w dontwrite_nomemleft
00033C78 <AmiBlitz3.ab3@26336>    BNE.w 'nopoke1
00033C7C <AmiBlitz3.ab3@26337>   MOVE.w D1,-$2(A0)
00033C7E <AmiBlitz3.ab3@26340>   MOVE.l A1,D1
00033C82 <AmiBlitz3.ab3@26341>   SUB.l $4(A2),D1
00033C84 <AmiBlitz3.ab3@26342>   SUBQ.l #6,D1
00033C8A <AmiBlitz3.ab3@26343>   CMP.l #MinWordSgnd,D1 ;#32768,
00033C8E <AmiBlitz3.ab3@26344>    BCC.w JUMP_bigforerr
00033C94 <AmiBlitz3.ab3@26345>   TST.w dontwrite_nomemleft
00033C98 <AmiBlitz3.ab3@26346>    BNE.w 'skip
00033C9A <AmiBlitz3.ab3@26347>   NEG.w D1
00033C9E <AmiBlitz3.ab3@26348>   MOVE.w D1,-$2(A1)
00033CA4 <AmiBlitz3.ab3@26351>   JSR popnext3                ;fix stack
00033CAA <AmiBlitz3.ab3@26353>   MOVEA.l _execbase,A6
00033CAC <AmiBlitz3.ab3@26354>   MOVEA.l A2,A1
00033CAE <AmiBlitz3.ab3@26355>   MOVEQ.l #$00,D0
00033CB2 <AmiBlitz3.ab3@26356>   MOVE.b $10(A1),D0
00033CB8 <AmiBlitz3.ab3@26359>   MOVE.l mempool2,a0
00033CBC <AmiBlitz3.ab3@26360>   JSR _FreePooled(A6)
00033CC2 <AmiBlitz3.ab3@26362> JMP reget
00033CC8 <AmiBlitz3.ab3@26365> JUMP_notallowd JMP notallowd
00033CCE <AmiBlitz3.ab3@26366> JUMP_bigforerr JMP bigforerr
00033CD2 <AmiBlitz3.ab3@26370>   MOVE.w #$664F,-(A7)          ;#'fO',
00033CD6 <AmiBlitz3.ab3@26373>  BRA.w thebra
00033CDC <AmiBlitz3.ab3@26376> JUMP_error_dublicate_for JMP error_dublicate_for
00033CE2 <AmiBlitz3.ab3@26377> JUMP_badforerr           JMP badforerr
00033CE6 <AmiBlitz3.ab3@26380> forlineat:   Ds.l 1
00033CE8 <AmiBlitz3.ab3@26381> fortemp:     Ds.w 1
00033CEE <AmiBlitz3.ab3@26389>   CLR.l fp0addr
00033CF4 <AmiBlitz3.ab3@26391>   TST.w dirmode
00033CF8 <AmiBlitz3.ab3@26392>    BNE.w JUMP_baddirerr
00033D02 <AmiBlitz3.ab3@26393>   MOVE.l linenumat,forlineat
00033D08 <AmiBlitz3.ab3@26397>   MOVE.l A5,letstart
00033D0C <AmiBlitz3.ab3@26398>   BSR.w getparameter
00033D12 <AmiBlitz3.ab3@26399>   MOVE.w D2,fortemp
00033D18 <AmiBlitz3.ab3@26401>   JSR findfor
00033D1C <AmiBlitz3.ab3@26402>    BEQ.w JUMP_error_dublicate_for
00033D22 <AmiBlitz3.ab3@26403>   LEA firstfor,A2
00033D28 <AmiBlitz3.ab3@26404>   JSR addhere2
00033D2A <AmiBlitz3.ab3@26405>   MOVE.l A2,-(A7)
00033D30 <AmiBlitz3.ab3@26407>   TST.b debugmode
00033D34 <AmiBlitz3.ab3@26408>    BEQ.b 'noerr
00033D3A <AmiBlitz3.ab3@26410>   JSR chkstak
00033D40 <AmiBlitz3.ab3@26411>   MOVE.l forset,D1
00033D46 <AmiBlitz3.ab3@26412>   JSR  writelong
00033D4A <AmiBlitz3.ab3@26415>   MOVE.w fortemp(PC),D2
00033D52 <AmiBlitz3.ab3@26417>   MOVE.b #1,formode
00033D56 <AmiBlitz3.ab3@26419>   BSR.w dolet2                                         ;for get 1. value
00033D5C <AmiBlitz3.ab3@26420>   CLR.b formode
00033D60 <AmiBlitz3.ab3@26421>   CMP.w #-$7FE8,D0       ; was #$8018,
00033D64 <AmiBlitz3.ab3@26422>    BNE.w JUMP_syntaxerr
00033D6A <AmiBlitz3.ab3@26423>   MOVE.w commode,D1
00033D6E <AmiBlitz3.ab3@26424>    BNE.w JUMP_syntaxerr
00033D72 <AmiBlitz3.ab3@26425>   CMP.b #$6,D2
00033D76 <AmiBlitz3.ab3@26426>    BCC.w JUMP_badforerr
00033D7A <AmiBlitz3.ab3@26427>   BTST #$F,D2
00033D7E <AmiBlitz3.ab3@26428>    BNE.w 'skip
00033D84 <AmiBlitz3.ab3@26429>   MOVE.w leaamp,D1
00033D8A <AmiBlitz3.ab3@26430>   JSR pokewda5s
00033D8C <AmiBlitz3.ab3@26431>   MOVE.w D3,D1
00033D92 <AmiBlitz3.ab3@26432>   JSR  writeword
00033D98 <AmiBlitz3.ab3@26435>   MOVE.w pushindex,D1
00033D9E <AmiBlitz3.ab3@26436>   JSR  writeword         ;index lea on stack
00033DA2 <AmiBlitz3.ab3@26437>   ANDI.w #$FF,D2
00033DA4 <AmiBlitz3.ab3@26439>   MOVEA.l (A7),A1
00033DA8 <AmiBlitz3.ab3@26440>   MOVE.w D2,$C(A1)
00033DAA <AmiBlitz3.ab3@26442>   MOVE.w D2,-(A7)
00033DAE <AmiBlitz3.ab3@26443>    BSR.w eval             ;get fin
00033DB4 <AmiBlitz3.ab3@26445>    CLR.b onestep
00033DB8 <AmiBlitz3.ab3@26446>    CMP.w #$8019,d0
00033DBC <AmiBlitz3.ab3@26447>    BEQ 'l1
00033DC4 <AmiBlitz3.ab3@26448>    MOVE.b #1,onestep
00033DC6 <AmiBlitz3.ab3@26452>   MOVE.w (A7),D2
00033DCC <AmiBlitz3.ab3@26454>   MOVE.w pushd0l,D1
00033DD0 <AmiBlitz3.ab3@26455>   CMP.w #$3,D2
00033DD4 <AmiBlitz3.ab3@26456>    BCC.w 'skip1
00033DDA <AmiBlitz3.ab3@26457>   MOVE.w pushd0wd,D1
00033DDC <AmiBlitz3.ab3@26460>    MOVE.w D1,-(A7)
00033DE2 <AmiBlitz3.ab3@26462>    TST.b fpu
00033DE6 <AmiBlitz3.ab3@26463>    BEQ 'old
00033DEA <AmiBlitz3.ab3@26464>    CMP.b #5,d2
00033DEE <AmiBlitz3.ab3@26465>    BNE 'old
00033DF4 <AmiBlitz3.ab3@26466>    MOVE.l #$f2276400,d1
00033DFA <AmiBlitz3.ab3@26468>    JSR writelong
00033DFE <AmiBlitz3.ab3@26469>  BRA 'weit
00033E04 <AmiBlitz3.ab3@26473>    JSR  writeword        ;push fin on stack                                   ;fpu for end value
00033E08 <AmiBlitz3.ab3@26476>   CMP.w #-$7FE7,D0      ; was #$8019,
00033E0C <AmiBlitz3.ab3@26477>    BNE.w 'defstep
00033E10 <AmiBlitz3.ab3@26479>    BSR.w eval           ;get step
00033E16 <AmiBlitz3.ab3@26481>    TST.b fpu
00033E1A <AmiBlitz3.ab3@26482>    BEQ 'pushstep
00033E1E <AmiBlitz3.ab3@26483>    CMP.b #5,d2
00033E22 <AmiBlitz3.ab3@26484>    BNE 'pushstep
00033E28 <AmiBlitz3.ab3@26485>    MOVE.l #$f2276400,d1                                    ;write step <> 1
00033E2E <AmiBlitz3.ab3@26487>   JSR writelong
00033E30 <AmiBlitz3.ab3@26492>    MOVE.w (a7)+,d1
00033E34 <AmiBlitz3.ab3@26493>  BRA 'fpur
00033E38 <AmiBlitz3.ab3@26497>   CMP.w #$4,D2
00033E3C <AmiBlitz3.ab3@26498>    BCC.w 'qup
00033E40 <AmiBlitz3.ab3@26499>   MOVE.w #$7001,D1
00033E46 <AmiBlitz3.ab3@26500>   JSR writeword
00033E4A <AmiBlitz3.ab3@26501>  BRA.w 'pushstep
00033E4E <AmiBlitz3.ab3@26504>   BNE.w 'notq
00033E52 <AmiBlitz3.ab3@26505>   MOVE.w #$7001,D1
00033E58 <AmiBlitz3.ab3@26506>   JSR writeword
00033E5E <AmiBlitz3.ab3@26507>   MOVE.w swapd0,D1
00033E64 <AmiBlitz3.ab3@26508>   JSR writeword
00033E68 <AmiBlitz3.ab3@26509>  BRA.w 'pushstep
00033E6E <AmiBlitz3.ab3@26513>   TST.b fpu
00033E72 <AmiBlitz3.ab3@26514>    BEQ 'old2
00033E76 <AmiBlitz3.ab3@26515>   CMP.b #5,d2
00033E7A <AmiBlitz3.ab3@26516>    BNE 'old2
00033E80 <AmiBlitz3.ab3@26517>   MOVE.l #$f23c5000,d1
00033E86 <AmiBlitz3.ab3@26518>   JSR writelong
00033E8A <AmiBlitz3.ab3@26519>   MOVE.w #$1,d1
00033E90 <AmiBlitz3.ab3@26520>   JSR writeword
00033E96 <AmiBlitz3.ab3@26521>   MOVE.l #$f2276400,d1
00033E9C <AmiBlitz3.ab3@26522>   JSR writelong
00033E9E <AmiBlitz3.ab3@26523>   MOVE.w (a7)+,d1
00033EA2 <AmiBlitz3.ab3@26524>  BRA 'fpur
00033EA6 <AmiBlitz3.ab3@26528>   MOVE.w #$203C,D1                                         ;write step 1
00033EAC <AmiBlitz3.ab3@26529>   JSR writeword
00033EB2 <AmiBlitz3.ab3@26530>   MOVE.l #$80000041,D1     ;ffp '1'                                ;ffp '1'
00033EB8 <AmiBlitz3.ab3@26531>   JSR writelong
00033EBA <AmiBlitz3.ab3@26534>   MOVE.w (A7)+,D1
00033EC0 <AmiBlitz3.ab3@26535>   JSR writeword           ;push step on stack                                 ;push step on stack
00033EC2 <AmiBlitz3.ab3@26540>   MOVE.w (A7)+,D2
00033EC4 <AmiBlitz3.ab3@26541>   MOVEA.l (A7),A1
00033ECC <AmiBlitz3.ab3@26542>   MOVE.l destpointer,$4(A1)
00033ED2 <AmiBlitz3.ab3@26543>   LEA forcompb,A0
00033ED8 <AmiBlitz3.ab3@26544>   LEA forcompbf,A1
00033EDC <AmiBlitz3.ab3@26545>   CMP.w #$1,D2
00033EE0 <AmiBlitz3.ab3@26546>    BEQ.w 'docomp
00033EE6 <AmiBlitz3.ab3@26547>   LEA forcompw,A0
00033EEC <AmiBlitz3.ab3@26548>   LEA forcompwf,A1
00033EF0 <AmiBlitz3.ab3@26549>   CMP.w #$2,D2
00033EF4 <AmiBlitz3.ab3@26550>    BEQ.w 'docomp
00033EFA <AmiBlitz3.ab3@26551>   LEA forcompl,A0
00033F00 <AmiBlitz3.ab3@26552>   LEA forcomplf,A1
00033F04 <AmiBlitz3.ab3@26553>   CMP.w #$5,D2
00033F08 <AmiBlitz3.ab3@26554>    BNE.w 'docomp
00033F0E <AmiBlitz3.ab3@26556>   TST.b fpu
00033F12 <AmiBlitz3.ab3@26557>    BEQ 'old3
00033F18 <AmiBlitz3.ab3@26558>   LEA fpu_start,a0
00033F1E <AmiBlitz3.ab3@26559>   LEA fpu_end,a1
00033F24 <AmiBlitz3.ab3@26560>   JSR pokecode
00033F28 <AmiBlitz3.ab3@26561>  BRA 'fpu3
00033F2E <AmiBlitz3.ab3@26565>   LEA forcompf,A0                                         ;
00033F34 <AmiBlitz3.ab3@26566>   LEA forcompff,A1
00033F3A <AmiBlitz3.ab3@26567>   JSR pokecode
00033F3E <AmiBlitz3.ab3@26568>   MOVE.w #$C900,D1       ; #getffpbase,
00033F42 <AmiBlitz3.ab3@26569>   BSR.w Atokejsr
00033F48 <AmiBlitz3.ab3@26570>   LEA forcompf2,A0
00033F4E <AmiBlitz3.ab3@26571>   LEA forcompf2f,A1
00033F54 <AmiBlitz3.ab3@26574>   JSR pokecode
00033F5A <AmiBlitz3.ab3@26576>   TST.b fast                                               ;fast for next
00033F5E <AmiBlitz3.ab3@26577>    BEQ 's1
00033F62 <AmiBlitz3.ab3@26578>   CMP.w #3,d2
00033F66 <AmiBlitz3.ab3@26579>    BNE 's1
00033F6C <AmiBlitz3.ab3@26580>   TST.b onestep
00033F70 <AmiBlitz3.ab3@26581>    BEQ 's1
00033F7A <AmiBlitz3.ab3@26582>   SUB.l #10,destpointer
00033F7E <AmiBlitz3.ab3@26583>   MOVE.w #$b081,d1
00033F84 <AmiBlitz3.ab3@26584>   JSR writeword
00033F88 <AmiBlitz3.ab3@26589>   MOVE.l thebgt(PC),D1
00033F8E <AmiBlitz3.ab3@26590>   JSR writelong
00033F90 <AmiBlitz3.ab3@26595>   MOVEA.l (A7)+,A1
00033F98 <AmiBlitz3.ab3@26596>   MOVE.l destpointer,$8(A1)
00033F9E <AmiBlitz3.ab3@26597> JMP reget
00033FA2 <AmiBlitz3.ab3@26602>   MOVEA.l 8(a7),a2
00033FA6 <AmiBlitz3.ab3@26603>   Dc.l $f2124400                                           ;fmove.s (a2),fp0
00033FAC <AmiBlitz3.ab3@26604>   fmove.s 4(a7),fp1
00033FB0 <AmiBlitz3.ab3@26605>   BTST.b #7,(a7)
00033FB4 <AmiBlitz3.ab3@26606>   BNE 'negi
00033FB8 <AmiBlitz3.ab3@26607>   fcmp.x fp1,fp0
00033FBC <AmiBlitz3.ab3@26608>  BRA 'negi2
00033FC0 <AmiBlitz3.ab3@26611>   fcmp.x fp0,fp1
00033FC4 <AmiBlitz3.ab3@26614>   Dc.l $f2920000                                           ;fbgt.w
00033FC8 <AmiBlitz3.ab3@26620>   BGT.w thebgt
00033FCE <AmiBlitz3.ab3@26623> JUMP_error4char          JMP error4char
00033FD4 <AmiBlitz3.ab3@26624> JUMP_error_convert_types JMP error_convert_types
00033FDA <AmiBlitz3.ab3@26625> JUMP_noleterr            JMP noleterr
00033FE0 <AmiBlitz3.ab3@26626> JUMP_nocomerr            JMP nocomerr
00033FE6 <AmiBlitz3.ab3@26627> JUMP_comerr              JMP comerr
00033FEC <AmiBlitz3.ab3@26631>   MOVE.l A5,letstart
00033FF2 <AmiBlitz3.ab3@26632>   JSR getparameter
00033FFC <AmiBlitz3.ab3@26639>   MOVE.l destpointer,pushpc
00034006 <AmiBlitz3.ab3@26640>   MOVE.l hunkoffsetbase,pushoff
0003400C <AmiBlitz3.ab3@26641>   CLR.l rightsidetype
00034012 <AmiBlitz3.ab3@26642>   CLR.w rightsideflagmask
0003401A <AmiBlitz3.ab3@26644>   MOVE.w #$0001,regnum            ;don't disturb this reg!
00034020 <AmiBlitz3.ab3@26645>   JSR fetchvars                   ;var in a3, type in a2
00034026 <AmiBlitz3.ab3@26646>   JSR calcvar                     ;get offset stuff
0003402C <AmiBlitz3.ab3@26648>   TST.b formode
00034030 <AmiBlitz3.ab3@26649>   BEQ 'lf1
00034036 <AmiBlitz3.ab3@26650>   CMP.l #newtype_double,A2
0003403A <AmiBlitz3.ab3@26651>   BEQ JUMP_notallowd
00034040 <AmiBlitz3.ab3@26652>   MOVE.l a2,currtype
00034046 <AmiBlitz3.ab3@26655>   CLR.w startoffsetmore
0003404A <AmiBlitz3.ab3@26656>   CMP.w #$3d,d0
0003404E <AmiBlitz3.ab3@26657>   BNE 'l1a
00034052 <AmiBlitz3.ab3@26658>   BTST #15,d2
00034056 <AmiBlitz3.ab3@26659>   BEQ 'l1a
0003405A <AmiBlitz3.ab3@26660>   CMP.b #1,d2
0003405E <AmiBlitz3.ab3@26661>   BNE 'l1a
00034068 <AmiBlitz3.ab3@26662>   MOVE.w leaa0a0+2,startoffsetmore
0003406E <AmiBlitz3.ab3@26666>   CLR.w regnum                     ;don't disturb this reg
00034072 <AmiBlitz3.ab3@26667>   BSR.w pushdo
00034078 <AmiBlitz3.ab3@26668>   CLR.w commode
0003407E <AmiBlitz3.ab3@26670>   CLR.w stackcorrect
00034084 <AmiBlitz3.ab3@26672>   CLR.w pcodd
0003408A <AmiBlitz3.ab3@26674>   MOVE.w startoffsetmore,d1
0003408E <AmiBlitz3.ab3@26675>   BTST #0,d1
00034092 <AmiBlitz3.ab3@26676>   BEQ 'l2a
0003409A <AmiBlitz3.ab3@26677>   MOVE.w #1,pcodd
0003409E <AmiBlitz3.ab3@26682>   CMP.w #$3D,D0              ;'='                              ;=
000340A2 <AmiBlitz3.ab3@26683>   BEQ.w 'nextcom
000340A4 <AmiBlitz3.ab3@26687>   MOVE.b (a5)+,d1
000340A8 <AmiBlitz3.ab3@26688>   BEQ 'l10
000340AC <AmiBlitz3.ab3@26689>   CMP.b #":",d1
000340B0 <AmiBlitz3.ab3@26690>   BEQ 'l10
000340B4 <AmiBlitz3.ab3@26691>   CMP.b #";",d1
000340B8 <AmiBlitz3.ab3@26692>   BEQ 'l10
000340BC <AmiBlitz3.ab3@26693>   CMP.b #"0",d1
000340C0 <AmiBlitz3.ab3@26694>   BLT 'l11
000340C4 <AmiBlitz3.ab3@26695>   CMP.b #"9",d1
000340C8 <AmiBlitz3.ab3@26696>   BGT 'l11
000340CC <AmiBlitz3.ab3@26697>  BRA.s 'l1
000340D4 <AmiBlitz3.ab3@26700>   MOVE.b #1,quickadd
000340DA <AmiBlitz3.ab3@26707>   MOVEA.l letstart,A5
000340DC <AmiBlitz3.ab3@26708>   SUBQ.w #1,A5
000340E0 <AmiBlitz3.ab3@26711>   CMP.b #$7,D2
000340E4 <AmiBlitz3.ab3@26712>    BNE.w 'notstring
000340E8 <AmiBlitz3.ab3@26723>   MOVEM.w D2-D3,-(A7)
000340EE <AmiBlitz3.ab3@26724>   MOVE.l lastoffset_org,-(A7)
000340F4 <AmiBlitz3.ab3@26725>   MOVE.w varmode,-(A7)
000340FE <AmiBlitz3.ab3@26728>     MOVE.l #forthstack,forthsp
00034108 <AmiBlitz3.ab3@26729>    MOVE.l #precstack,precsp
0003410E <AmiBlitz3.ab3@26730>    CLR.w regnum
00034114 <AmiBlitz3.ab3@26731>    CLR.w nonew
0003411A <AmiBlitz3.ab3@26732>    CLR.w sbasegot
00034124 <AmiBlitz3.ab3@26733>    MOVE.w varcodelen,oldvcodelen
0003412A <AmiBlitz3.ab3@26734>    CLR.w varcodelen
00034132 <AmiBlitz3.ab3@26735>    MOVE.w #$FFFF,lasta6
00034134 <AmiBlitz3.ab3@26739>   MOVEQ.l #$07,D2
00034138 <AmiBlitz3.ab3@26740>    BSR.w eval
0003413E <AmiBlitz3.ab3@26741>   MOVE.w (A7)+,varmode
00034144 <AmiBlitz3.ab3@26742>   MOVE.l (A7)+,lastoffset_org
0003414A <AmiBlitz3.ab3@26743>   MOVE.w moved0a3,D1
00034150 <AmiBlitz3.ab3@26744>    JSR writeword
00034156 <AmiBlitz3.ab3@26745>   MOVE.w commode,D1
0003415A <AmiBlitz3.ab3@26746>    BEQ.w 'stconti
00034160 <AmiBlitz3.ab3@26747>   LEA pulla2st,A0
00034166 <AmiBlitz3.ab3@26748>   LEA pulla2stf,A1
0003416C <AmiBlitz3.ab3@26749>    JSR pokecode
00034170 <AmiBlitz3.ab3@26750>  BRA.w 'stconti2
00034174 <AmiBlitz3.ab3@26753>   BSR.w pushput
00034178 <AmiBlitz3.ab3@26756>   MOVEM.w (A7)+,D2-D3
0003417C <AmiBlitz3.ab3@26757>   BTST #$F,D2
00034180 <AmiBlitz3.ab3@26758>   BNE.w 'already
00034186 <AmiBlitz3.ab3@26759>     MOVE.w D3,leaa5d3a2+2
0003418C <AmiBlitz3.ab3@26760>     MOVE.l leaa5d3a2,D1
00034192 <AmiBlitz3.ab3@26761>     JSR pokela5s
00034196 <AmiBlitz3.ab3@26764>   MOVE.w #$FE6F,D1         ; was #65135,
0003419C <AmiBlitz3.ab3@26765>   JSR uselib
000341A2 <AmiBlitz3.ab3@26766>   MOVE.l #$C700,D1         ; was #lastring,
000341A8 <AmiBlitz3.ab3@26767>   MOVE.l d1,lastinstruction
000341AE <AmiBlitz3.ab3@26768>   MOVE.w varmode,D2
000341B2 <AmiBlitz3.ab3@26769>   BNE.w 'local
000341B4 <AmiBlitz3.ab3@26770>     ADDQ.w #1,D1           ;use global allocmem
000341B8 <AmiBlitz3.ab3@26773>   BSR.w Atokejsr
000341BC <AmiBlitz3.ab3@26774>   CMP.w #$2C,D0           ;','
000341C0 <AmiBlitz3.ab3@26775>   BNE.w 'done
000341C6 <AmiBlitz3.ab3@26777>   MOVE.w addq4a2,D1
000341CC <AmiBlitz3.ab3@26778>   JSR writeword
000341D0 <AmiBlitz3.ab3@26779>  BRA.w 'nextstr
000341D4 <AmiBlitz3.ab3@26782>    BTST #$E,D2             ;pointer, ignore!
000341D8 <AmiBlitz3.ab3@26783>    BNE.w 'skip
000341DA <AmiBlitz3.ab3@26784>   TST.b D2
000341DE <AmiBlitz3.ab3@26785>    BEQ.w JUMP_noleterr     ;tried to assign a struct - later!
000341E4 <AmiBlitz3.ab3@26787>    TST.b newsyntax
000341E8 <AmiBlitz3.ab3@26788>    BEQ 'skip2
000341EC <AmiBlitz3.ab3@26791>    CMP.w #$4022,(a5)
000341F0 <AmiBlitz3.ab3@26792>    BNE 'skip2
000341F6 <AmiBlitz3.ab3@26793>    CMP.l #3,d2
000341FA <AmiBlitz3.ab3@26794>    BNE  JUMP_error_convert_types
000341FC <AmiBlitz3.ab3@26795>    ADDQ #2,a5
000341FE <AmiBlitz3.ab3@26796>    MOVEQ #0,d0
00034200 <AmiBlitz3.ab3@26797>    MOVE.b (a5)+,d0
00034204 <AmiBlitz3.ab3@26798>    BEQ 'skip2
00034208 <AmiBlitz3.ab3@26799>    CMP.b #$22,d0
0003420C <AmiBlitz3.ab3@26800>    BNE 'l5
00034210 <AmiBlitz3.ab3@26801>    MOVE.b #0,d0
00034214 <AmiBlitz3.ab3@26802>  BRA 'do
00034216 <AmiBlitz3.ab3@26805>   ASL.l #8,d0
00034218 <AmiBlitz3.ab3@26806>    MOVE.b (a5)+,d0
0003421C <AmiBlitz3.ab3@26807>    BEQ 'skip2
00034220 <AmiBlitz3.ab3@26808>    CMP.b #$22,d0
00034224 <AmiBlitz3.ab3@26809>    BNE 'l2
00034228 <AmiBlitz3.ab3@26810>    MOVE.b #0,d0
0003422A <AmiBlitz3.ab3@26811>    ASR.l #8,d0
0003422E <AmiBlitz3.ab3@26812>  BRA 'do
00034230 <AmiBlitz3.ab3@26815>   ASL.l #8,d0
00034232 <AmiBlitz3.ab3@26816>     MOVE.b (a5)+,d0
00034236 <AmiBlitz3.ab3@26817>    BEQ 'skip2
0003423A <AmiBlitz3.ab3@26818>    CMP.b #$22,d0
0003423E <AmiBlitz3.ab3@26819>    BNE 'l3
00034242 <AmiBlitz3.ab3@26820>    MOVE.b #0,d0
00034244 <AmiBlitz3.ab3@26821>    ASR.l #8,d0
00034248 <AmiBlitz3.ab3@26822>  BRA 'do
0003424A <AmiBlitz3.ab3@26825>   ASL.l #8,d0
0003424C <AmiBlitz3.ab3@26826>     MOVE.b (a5)+,d0
00034250 <AmiBlitz3.ab3@26827>    BEQ 'skip2
00034254 <AmiBlitz3.ab3@26828>    CMP.b #$22,d0
00034258 <AmiBlitz3.ab3@26829>    BNE 'l4
0003425C <AmiBlitz3.ab3@26830>    MOVE.b #0,d0
0003425E <AmiBlitz3.ab3@26831>    ASR.l #8,d0
00034262 <AmiBlitz3.ab3@26832>  BRA 'do
00034266 <AmiBlitz3.ab3@26835>    CMP.b #$22,(a5)+
0003426A <AmiBlitz3.ab3@26836>    BNE JUMP_error4char
0003426E <AmiBlitz3.ab3@26839>   MOVE.w #$2b7c,d1
00034274 <AmiBlitz3.ab3@26840>    TST.w varmode
00034278 <AmiBlitz3.ab3@26841>    BEQ 'g3
0003427C <AmiBlitz3.ab3@26842>    BCLR #9,d1
00034282 <AmiBlitz3.ab3@26845>     JSR writeword
00034284 <AmiBlitz3.ab3@26846>     MOVE.l d0,d1
0003428A <AmiBlitz3.ab3@26847>     JSR writelong
0003428C <AmiBlitz3.ab3@26848>     MOVE.w d3,d1
00034292 <AmiBlitz3.ab3@26849>     JSR writeword
00034298 <AmiBlitz3.ab3@26850>     JSR get1bytemain
0003429A <AmiBlitz3.ab3@26851>  RTS
000342A0 <AmiBlitz3.ab3@26858>   MOVE.w d2,vartype
000342A4 <AmiBlitz3.ab3@26860>   MOVE.b #$3,D2
000342A8 <AmiBlitz3.ab3@26867>   CMP.b #5,d2
000342AC <AmiBlitz3.ab3@26868>   BNE 'l1aa
000342B2 <AmiBlitz3.ab3@26869>   MOVE.l a2,currtype
000342B6 <AmiBlitz3.ab3@26874>   MOVEM.w D2-D3,-(A7)
000342BC <AmiBlitz3.ab3@26875>   MOVE.w varmode,-(A7)
000342C2 <AmiBlitz3.ab3@26877>   MOVE.l a2,leftsidetype
000342CC <AmiBlitz3.ab3@26878>   MOVE.w flagmask,leftsideflagmask
000342D0 <AmiBlitz3.ab3@26879>   BTST #$f,d2
000342D4 <AmiBlitz3.ab3@26880>   BEQ 'nomultiassign
000342DA <AmiBlitz3.ab3@26881>   CLR.l leftsidetype                        ;its multiassign to type entries so no typecheck need
000342E0 <AmiBlitz3.ab3@26882>   CLR.w leftsideflagmask
000342E4 <AmiBlitz3.ab3@26886>   ANDI.w #$FF,D2
000342EA <AmiBlitz3.ab3@26887>   MOVE.l lastoffset_org,-(A7)
000342F0 <AmiBlitz3.ab3@26888>   JSR eval                                ; calc right side of var assign
000342F4 <AmiBlitz3.ab3@26890>   MOVEM.l a0/a1,-(a7)
000342FA <AmiBlitz3.ab3@26891>   MOVE.l leftsidetype,a0
00034300 <AmiBlitz3.ab3@26892>   CMP.l #0,a0
00034304 <AmiBlitz3.ab3@26893>   BEQ 'nocheck
0003430C <AmiBlitz3.ab3@26894>   CMP.w #1,leftsideflagmask
00034310 <AmiBlitz3.ab3@26895>   BEQ 'isptr
00034318 <AmiBlitz3.ab3@26896>   CMP.l #$100,4(a0)
0003431C <AmiBlitz3.ab3@26897>   BLE 'nocheck
00034322 <AmiBlitz3.ab3@26900>   TST.l typetocast
00034326 <AmiBlitz3.ab3@26901>   BEQ 'nocast
0003432C <AmiBlitz3.ab3@26902>   MOVE.l typetocast,a1
00034330 <AmiBlitz3.ab3@26903>   BRA 'typecheck
00034336 <AmiBlitz3.ab3@26906>   TST.l rightsidetype
0003433A <AmiBlitz3.ab3@26907>   BEQ 'nocheck
00034340 <AmiBlitz3.ab3@26908>   MOVE.l rightsidetype,a1
00034348 <AmiBlitz3.ab3@26909>   CMP.w #1,rightsideflagmask
0003434C <AmiBlitz3.ab3@26910>   BEQ 'ok
00034354 <AmiBlitz3.ab3@26911>   CMP.l #$100,4(a1)
00034358 <AmiBlitz3.ab3@26912>   BGE 'typecheck
00034360 <AmiBlitz3.ab3@26913>   CMP.l #$3,4(a1)
00034364 <AmiBlitz3.ab3@26914>   BEQ 'ok                              ;long assign is allow with this codelines
00034368 <AmiBlitz3.ab3@26915>   BRA 'error
0003436E <AmiBlitz3.ab3@26918>   TST.b typecheck
00034372 <AmiBlitz3.ab3@26919>   BEQ 'nocheck
00034378 <AmiBlitz3.ab3@26920>   TST.b notypecheck
0003437C <AmiBlitz3.ab3@26921>   BNE 'ok
0003437E <AmiBlitz3.ab3@26922>   CMP.l a0,a1
00034382 <AmiBlitz3.ab3@26923>   BEQ 'ok
00034386 <AmiBlitz3.ab3@26925>   MOVE.l 4(a1),a1                   ; load the address of 1. type.
0003438A <AmiBlitz3.ab3@26926>   CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
0003438E <AmiBlitz3.ab3@26927>   BEQ 'ok
00034394 <AmiBlitz3.ab3@26930>  JMP   error_convert_types     ;for syntax 4  = typecheck
0003439A <AmiBlitz3.ab3@26934>    CLR.l typetocast
0003439E <AmiBlitz3.ab3@26935>    MOVEM.l (a7)+, a0/a1
000343A4 <AmiBlitz3.ab3@26937>   MOVE.l (A7)+,lastoffset_org
000343AA <AmiBlitz3.ab3@26938>   MOVE.w commode,D1
000343AE <AmiBlitz3.ab3@26939>    BNE.w 'conti
000343B2 <AmiBlitz3.ab3@26940>    BSR.w pushput
000343B8 <AmiBlitz3.ab3@26943>   MOVE.w (A7)+,varmode
000343BC <AmiBlitz3.ab3@26944>   MOVEM.w (A7)+,D2-D3
000343C0 <AmiBlitz3.ab3@26949>   MOVE.w #$2B40,D1
000343C6 <AmiBlitz3.ab3@26950>   MOVE.w varmode,D4
000343CA <AmiBlitz3.ab3@26951>    BEQ.w 'skip1
000343CE <AmiBlitz3.ab3@26952>   BCLR #$9,D1
000343D2 <AmiBlitz3.ab3@26955>   BTST #$F,D2
000343D6 <AmiBlitz3.ab3@26956>    BEQ.w 'code
000343DC <AmiBlitz3.ab3@26959>    TST.b stackcorrect
000343E0 <AmiBlitz3.ab3@26960>    BNE 'st1
000343E6 <AmiBlitz3.ab3@26962>   MOVE.w commode,D1
000343EA <AmiBlitz3.ab3@26963>    BEQ.w 'skipc1
000343F0 <AmiBlitz3.ab3@26968>   MOVE.w pulla2,D1
000343F6 <AmiBlitz3.ab3@26969>    JSR writeword
000343FA <AmiBlitz3.ab3@26972>   MOVE.w #$2480,D1               ;move.l d0,(a2)
000343FE <AmiBlitz3.ab3@26975>    MOVEM.l a0/d0,-(a7)
00034404 <AmiBlitz3.ab3@26976>    MOVEA.l lastoffset_org,A0
00034406 <AmiBlitz3.ab3@26977>    MOVE.l A0,D0
0003440A <AmiBlitz3.ab3@26978>    BEQ.w 'skipa
0003440C <AmiBlitz3.ab3@26979>    MOVEA.l D0,A0
00034414 <AmiBlitz3.ab3@26980>    MOVE.l $A(A0),currtype
00034418 <AmiBlitz3.ab3@26983>   MOVEM.l (a7)+,a0/d0
0003441C <AmiBlitz3.ab3@26985>   CMP.w #$2C,D0                ; ','
00034420 <AmiBlitz3.ab3@26986>    BNE.w 'code
00034424 <AmiBlitz3.ab3@26988>     MOVE.w #$24C0,D1           ;move.l d0,(a2)+
00034428 <AmiBlitz3.ab3@26989>    BSR.w 'code                                         ;write store
0003442E <AmiBlitz3.ab3@26992>    MOVE.l lastoffset_org,D0
00034436 <AmiBlitz3.ab3@26998>   MOVE.w #$FFFF,commode    ; -1
0003443C <AmiBlitz3.ab3@26999>   CLR.w varcodelen
00034444 <AmiBlitz3.ab3@27001>   MOVE.b #1,optiarray
0003444A <AmiBlitz3.ab3@27003>   MOVE.w pusha2,D1
00034450 <AmiBlitz3.ab3@27004>    JSR writeword
00034456 <AmiBlitz3.ab3@27006>   TST.l lastoffset_org
0003445A <AmiBlitz3.ab3@27007>   BEQ 'dimmore
00034460 <AmiBlitz3.ab3@27008>   MOVEA.l lastoffset_org,A0
00034462 <AmiBlitz3.ab3@27010>   MOVE.l (A0),D0
00034466 <AmiBlitz3.ab3@27011>    BEQ.w JUMP_comerr          ;comma past end of struct
00034468 <AmiBlitz3.ab3@27012>   MOVEA.l D0,A0
0003446E <AmiBlitz3.ab3@27013>   MOVE.l A0,lastoffset_org
00034474 <AmiBlitz3.ab3@27014>   BTST #$1,$7(A0)
00034478 <AmiBlitz3.ab3@27015>    BNE.w JUMP_nocomerr        ;can't use comma on multiple entries
0003447C <AmiBlitz3.ab3@27016>   MOVEA.l $A(A0),A1
00034480 <AmiBlitz3.ab3@27017>   MOVE.l $4(A1),D2
00034486 <AmiBlitz3.ab3@27021>   BTST #$0,$7(A0)
0003448A <AmiBlitz3.ab3@27022>    BNE.w 'nextpnt             ;pointer
00034490 <AmiBlitz3.ab3@27023>   CMP.l #$100,D2
00034494 <AmiBlitz3.ab3@27024>    BCC.l JUMP_nocomerr        ;or on structs
00034498 <AmiBlitz3.ab3@27025>  BRA.w 'docom                                     ; do do type\x= 10,20,30....
0003449E <AmiBlitz3.ab3@27029>         CLR.b optiarray
000344A2 <AmiBlitz3.ab3@27030>         CMP.w #"@@",(a5)
000344A6 <AmiBlitz3.ab3@27031>         BEQ 'n1
000344AA <AmiBlitz3.ab3@27032>  BRA 'd1
000344B0 <AmiBlitz3.ab3@27035>   JSR nextline
000344B2 <AmiBlitz3.ab3@27036>         MOVE.l a5,-(a7)
000344B4 <AmiBlitz3.ab3@27039>   MOVE.b (a5)+,d0
000344B8 <AmiBlitz3.ab3@27040>         CMP.b #$20,d0
000344BC <AmiBlitz3.ab3@27041>         BEQ 'l6
000344BE <AmiBlitz3.ab3@27042>         MOVE.l (a7)+,a5
000344C2 <AmiBlitz3.ab3@27043>         CMP.b #";",d0
000344C6 <AmiBlitz3.ab3@27044>         BEQ 'n1
000344CC <AmiBlitz3.ab3@27047>         TST.w debugmode
000344D0 <AmiBlitz3.ab3@27048>         BEQ 'nextcom
000344D2 <AmiBlitz3.ab3@27049>         MOVE.l a0,-(a7)
000344D8 <AmiBlitz3.ab3@27050>         MOVE.l pushat,a0
000344DE <AmiBlitz3.ab3@27051>         CMP.l #0,a0
000344E2 <AmiBlitz3.ab3@27052>         BNE 'o1
000344E6 <AmiBlitz3.ab3@27053>  BRA 'skipb
000344EE <AmiBlitz3.ab3@27056>         ADD.l #1,2(a0)
000344F4 <AmiBlitz3.ab3@27059>   CLR.w commode
000344FC <AmiBlitz3.ab3@27060>         MOVE.b #1,stackcorrect
000344FE <AmiBlitz3.ab3@27061>         MOVE.l (a7)+,a0
00034504 <AmiBlitz3.ab3@27062>  JMP 'nextcom
0003450A <AmiBlitz3.ab3@27066>   CMP.l #$100,D2
0003450E <AmiBlitz3.ab3@27067>    BCS.w 'nextpnt2
00034510 <AmiBlitz3.ab3@27068>   MOVEQ.l #$00,D2
00034514 <AmiBlitz3.ab3@27071>   BSET #$E,D2
00034518 <AmiBlitz3.ab3@27074>   BSET #$F,D2
0003451C <AmiBlitz3.ab3@27075>  BRA.w 'nextcom
00034522 <AmiBlitz3.ab3@27079>    MOVE.l destpointer,a4                   ;
0003452A <AmiBlitz3.ab3@27080>    MOVE.l #$f22a6400,-4(a4)                ;
00034530 <AmiBlitz3.ab3@27081>    MOVE.w arrayoffset,d1                   ;
00034536 <AmiBlitz3.ab3@27082>  JMP writeword                             ;
0003453C <AmiBlitz3.ab3@27087>    TST.b fpu
00034540 <AmiBlitz3.ab3@27088>    BEQ 'nofloat
00034544 <AmiBlitz3.ab3@27089>    CMP.b #5,d2
00034548 <AmiBlitz3.ab3@27090>    BNE 'nofloat
0003454E <AmiBlitz3.ab3@27091>    CLR.w fp0var
00034554 <AmiBlitz3.ab3@27092>    LEA regtable,a4
00034556 <AmiBlitz3.ab3@27093>    TST.l (a4)
0003455A <AmiBlitz3.ab3@27094>    BEQ 'noreg
0003455E <AmiBlitz3.ab3@27095>    BTST #15,d2                                             ;regvars
00034562 <AmiBlitz3.ab3@27096>    BNE 'noreg
00034566 <AmiBlitz3.ab3@27097>    CMP.w 0+4(a4),d3
0003456A <AmiBlitz3.ab3@27098>    BNE 'doreg1
00034570 <AmiBlitz3.ab3@27099>    MOVE.l #$f2000380,d1
00034576 <AmiBlitz3.ab3@27100>    MOVE.w regnum,d0
0003457A <AmiBlitz3.ab3@27101>    BNE 'noopt
00034580 <AmiBlitz3.ab3@27107>    MOVE.l destpointer,a4
00034588 <AmiBlitz3.ab3@27108>    CMP.l #$f2001c80,-8(a4)
0003458C <AmiBlitz3.ab3@27109>    BNE 'noopt
00034594 <AmiBlitz3.ab3@27110>    CMP.l #$f2000422,-4(a4)
00034598 <AmiBlitz3.ab3@27111>    BNE 'noopt
0003459E <AmiBlitz3.ab3@27112>    MOVE.l #$f20003a2,d1
000345A8 <AmiBlitz3.ab3@27113>    SUB.l #8,destpointer
000345AA <AmiBlitz3.ab3@27116>    ASL.w #7,d0
000345AC <AmiBlitz3.ab3@27117>    OR.w d0,d1
000345B2 <AmiBlitz3.ab3@27118>    JSR writelong
000345B4 <AmiBlitz3.ab3@27119>  RTS
000345B8 <AmiBlitz3.ab3@27122>   CMP.w 8+4(a4),d3
000345BC <AmiBlitz3.ab3@27123>    BNE 'doreg2
000345C2 <AmiBlitz3.ab3@27124>    MOVE.l #$f2000300,d1
000345C8 <AmiBlitz3.ab3@27125>    MOVE.w regnum,d0
000345CA <AmiBlitz3.ab3@27126>    ASL.w #7,d0
000345CC <AmiBlitz3.ab3@27127>    OR.w d0,d1
000345D2 <AmiBlitz3.ab3@27128>    JSR writelong
000345D4 <AmiBlitz3.ab3@27129>  RTS
000345D8 <AmiBlitz3.ab3@27132>   CMP.w 16+4(a4),d3
000345DC <AmiBlitz3.ab3@27133>    BNE 'doreg3
000345E2 <AmiBlitz3.ab3@27134>    MOVE.l #$f2000280,d1
000345E8 <AmiBlitz3.ab3@27135>    MOVE.w regnum,d0
000345EA <AmiBlitz3.ab3@27136>    ASL.w #7,d0
000345EC <AmiBlitz3.ab3@27137>    OR.w d0,d1
000345F2 <AmiBlitz3.ab3@27138>    JSR  writelong
000345F4 <AmiBlitz3.ab3@27139>  RTS
000345F8 <AmiBlitz3.ab3@27142>   CMP.w 24+4(a4),d3
000345FC <AmiBlitz3.ab3@27143>    BNE 'doreg4
00034602 <AmiBlitz3.ab3@27144>    MOVE.l #$f2000200,d1
00034608 <AmiBlitz3.ab3@27145>    MOVE.w regnum,d0
0003460A <AmiBlitz3.ab3@27146>    ASL.w #7,d0
0003460C <AmiBlitz3.ab3@27147>    OR.w d0,d1
00034612 <AmiBlitz3.ab3@27148>    JSR writelong
00034614 <AmiBlitz3.ab3@27149>  RTS
00034618 <AmiBlitz3.ab3@27152>   CMP.w 32+4(a4),d3
0003461C <AmiBlitz3.ab3@27153>    BNE 'noreg
00034622 <AmiBlitz3.ab3@27154>    MOVE.l #$f2000180,d1
00034628 <AmiBlitz3.ab3@27155>    MOVE.w regnum,d0
0003462A <AmiBlitz3.ab3@27156>    ASL.w #7,d0
0003462C <AmiBlitz3.ab3@27157>    OR.w d0,d1
00034632 <AmiBlitz3.ab3@27158>    JSR writelong
00034634 <AmiBlitz3.ab3@27159>  RTS
0003463A <AmiBlitz3.ab3@27162>    TST.w regnum
0003463E <AmiBlitz3.ab3@27163>    BNE 'nofp0
00034644 <AmiBlitz3.ab3@27164>    MOVE.l destpointer ,a4
0003464C <AmiBlitz3.ab3@27165>    CMP.l #$f2304400,-6(a4)
00034650 <AmiBlitz3.ab3@27166>    BNE 'do5
00034656 <AmiBlitz3.ab3@27167>    CMP.w #$1990,-2(a4)
0003465A <AmiBlitz3.ab3@27168>    BNE 'do5
0003465E <AmiBlitz3.ab3@27169>    BTST #15,d2                                             ;types ?
00034662 <AmiBlitz3.ab3@27170>    BNE 'do5
00034668 <AmiBlitz3.ab3@27171>   MOVE.l #$2b701990,d1                                     ;var
0003466E <AmiBlitz3.ab3@27172>   TST.w varmode
00034672 <AmiBlitz3.ab3@27173>   BEQ 'glob1
00034676 <AmiBlitz3.ab3@27174>   BCLR #25,d1
0003467A <AmiBlitz3.ab3@27177>   MOVE.l d1,-6(a4)
0003467E <AmiBlitz3.ab3@27178>   MOVE.w d3,-2(a4)
00034684 <AmiBlitz3.ab3@27179>   CLR.w fp0var
0003468C <AmiBlitz3.ab3@27180>   MOVE.w #$ffff,fp0mode
0003468E <AmiBlitz3.ab3@27181>  RTS
00034696 <AmiBlitz3.ab3@27184>    CMP.l #$f22d4400,-6(a4)                                 ;fmove.s (a5),fp0
0003469A <AmiBlitz3.ab3@27185>    BNE 'do3
000346A4 <AmiBlitz3.ab3@27186>    CMP.l #newtype_double,currtype
000346A8 <AmiBlitz3.ab3@27187>    BEQ 'do4
000346AC <AmiBlitz3.ab3@27190>   MOVE.w #$2b6d,d1
000346B2 <AmiBlitz3.ab3@27191>    TST.w varmode
000346B6 <AmiBlitz3.ab3@27192>    BEQ 'g2
000346BA <AmiBlitz3.ab3@27193>     BCLR #9,d1
000346BE <AmiBlitz3.ab3@27196>     CMP.w #$2b6d,d1
000346C2 <AmiBlitz3.ab3@27197>     BNE 'd1a
000346C6 <AmiBlitz3.ab3@27198>     CMP.w -2(a4),d3
000346CA <AmiBlitz3.ab3@27199>     BNE 'd1a
000346D0 <AmiBlitz3.ab3@27200>     SUBQ.l #6,destpointer
000346D4 <AmiBlitz3.ab3@27201>  BRA 'd12
000346D8 <AmiBlitz3.ab3@27204>     MOVE.w d1,-6(a4)                                       ;fmove.s to move.l mem,mem
000346DE <AmiBlitz3.ab3@27205>     MOVE.w -2(a4),-4(a4)
000346E2 <AmiBlitz3.ab3@27206>     MOVE.w d3,-2(a4)
000346E8 <AmiBlitz3.ab3@27209>   CLR.w fp0var
000346F0 <AmiBlitz3.ab3@27210>     MOVE.w #$ffff,fp0mode
000346F2 <AmiBlitz3.ab3@27211>  RTS
000346FA <AmiBlitz3.ab3@27214>   CMP.l #$f22c4400,-6(a4)                                  ;fmove.s (a4)
000346FE <AmiBlitz3.ab3@27215>    BNE 'do4
00034702 <AmiBlitz3.ab3@27216>    MOVE.w #$2b6c,d1
00034708 <AmiBlitz3.ab3@27217>       TST.w varmode
0003470C <AmiBlitz3.ab3@27218>    BEQ 'g3a
00034710 <AmiBlitz3.ab3@27219>    BCLR #9,d1
00034714 <AmiBlitz3.ab3@27222>   MOVE.w d1,-6(a4)
0003471A <AmiBlitz3.ab3@27223>     MOVE.w -2(a4),-4(a4)
0003471E <AmiBlitz3.ab3@27224>     MOVE.w d3,-2(a4)
00034724 <AmiBlitz3.ab3@27225>     CLR.w fp0var
0003472C <AmiBlitz3.ab3@27226>     MOVE.w #$ffff,fp0mode
0003472E <AmiBlitz3.ab3@27227>  RTS
00034734 <AmiBlitz3.ab3@27230>   MOVE.w d3,fp0var
0003473E <AmiBlitz3.ab3@27231>    MOVE.w varmode,fp0mode
00034740 <AmiBlitz3.ab3@27232>    ADDQ.l #6,a4
00034746 <AmiBlitz3.ab3@27233>    MOVE.l a4,fp0addr
00034750 <AmiBlitz3.ab3@27234>    MOVE.l firstiff,fp0iff
00034754 <AmiBlitz3.ab3@27237>   MOVEM.l d0/d4,-(a7)
00034756 <AmiBlitz3.ab3@27238>    MOVEQ #0,d0
0003475C <AmiBlitz3.ab3@27239>     MOVE.w regnum,d0
0003475E <AmiBlitz3.ab3@27240>    ASL.w #7,d0                                             ;fpu store var
00034762 <AmiBlitz3.ab3@27241>   BTST #15,d2
00034766 <AmiBlitz3.ab3@27242>    BEQ 'var
00034768 <AmiBlitz3.ab3@27243>    MOVE.w d1,d4
0003476C <AmiBlitz3.ab3@27244>    CMP.w #$24c0,d4
00034770 <AmiBlitz3.ab3@27245>    BNE 'nopl
00034776 <AmiBlitz3.ab3@27246>    MOVE.l #$f21a6400,d1
00034778 <AmiBlitz3.ab3@27247>    MOVEQ #0,d3
0003477C <AmiBlitz3.ab3@27248>  BRA 'glob
00034782 <AmiBlitz3.ab3@27252>   MOVE.l #$f2126400,d1
00034784 <AmiBlitz3.ab3@27253>    TST.w d3                                                ;offset =0
00034788 <AmiBlitz3.ab3@27254>    BNE 'offset
0003478E <AmiBlitz3.ab3@27255>    MOVE.l #$f2126400,d1
00034790 <AmiBlitz3.ab3@27263>    MOVEQ #0,d3
00034794 <AmiBlitz3.ab3@27264>  BRA 'glob
0003479A <AmiBlitz3.ab3@27267>   MOVE.l #$f22d6400,d1                                     ;var
000347A0 <AmiBlitz3.ab3@27268>   TST.w varmode
000347A4 <AmiBlitz3.ab3@27269>   BEQ 'glob
000347A8 <AmiBlitz3.ab3@27270>   BCLR #16,d1
000347AA <AmiBlitz3.ab3@27271>  'glob OR.l d0,d1
000347B4 <AmiBlitz3.ab3@27274>   CMP.l #newtype_double,currtype
000347B8 <AmiBlitz3.ab3@27275>   BNE 'dbl1
000347BE <AmiBlitz3.ab3@27276>   OR.l #$00001000,d1
000347C4 <AmiBlitz3.ab3@27279>   JSR writelong
000347CA <AmiBlitz3.ab3@27280>   CLR.l currtype
000347CE <AmiBlitz3.ab3@27281>   MOVEM.l (a7)+,d0/d4
000347D0 <AmiBlitz3.ab3@27282>   MOVE.l d3,d1
000347D4 <AmiBlitz3.ab3@27283>   BEQ 'nooffs
000347DA <AmiBlitz3.ab3@27284>  JMP writeword
000347DC <AmiBlitz3.ab3@27287>  RTS
000347E2 <AmiBlitz3.ab3@27301>     TST.b fast                                             ;write lea->xx(a2)
000347E6 <AmiBlitz3.ab3@27302>    BEQ 'la10
000347EC <AmiBlitz3.ab3@27306>    TST.b quickadd
000347F2 <AmiBlitz3.ab3@27308>      CLR.b quickadd
000347F6 <AmiBlitz3.ab3@27309>    CMP.w #$2480,d1
000347FA <AmiBlitz3.ab3@27310>    BNE 'la10
00034800 <AmiBlitz3.ab3@27311>    TST.b optiarray
00034804 <AmiBlitz3.ab3@27312>    BNE 'la10
0003480A <AmiBlitz3.ab3@27313>    MOVE.l destpointer,a4
00034810 <AmiBlitz3.ab3@27314>    CMP.w #$45ea,-4(a4)
00034814 <AmiBlitz3.ab3@27315>    BNE 'la10
0003481C <AmiBlitz3.ab3@27316>    CMP.w #8,pushclen
00034820 <AmiBlitz3.ab3@27317>    BEQ 'la100
00034828 <AmiBlitz3.ab3@27318>    CMP.w #6,pushclen
0003482C <AmiBlitz3.ab3@27319>    BNE 'la10
00034830 <AmiBlitz3.ab3@27320>    CMP.b #3,d2
00034834 <AmiBlitz3.ab3@27321>    BCS 'la110
0003483A <AmiBlitz3.ab3@27323>    MOVE.w #$2540,-2(a4)
00034840 <AmiBlitz3.ab3@27324>    MOVE.w arrayoffset,d1
00034846 <AmiBlitz3.ab3@27325>  JMP writeword
0003484C <AmiBlitz3.ab3@27328>    CLR.b quickadd
0003484E <AmiBlitz3.ab3@27329>  RTS
00034852 <AmiBlitz3.ab3@27332>    CMP.b #2,d2
00034856 <AmiBlitz3.ab3@27333>    BNE 'la120
0003485C <AmiBlitz3.ab3@27334>     MOVE.w #$3540,-2(a4)
00034862 <AmiBlitz3.ab3@27335>    MOVE.w arrayoffset,d1
00034868 <AmiBlitz3.ab3@27336>  JMP writeword
0003486C <AmiBlitz3.ab3@27339>   CMP.b #1,d2
00034870 <AmiBlitz3.ab3@27340>    BNE.s 'la10
00034876 <AmiBlitz3.ab3@27341>     MOVE.w #$1540,-2(a4)
0003487C <AmiBlitz3.ab3@27342>    MOVE.w arrayoffset,d1
00034882 <AmiBlitz3.ab3@27343>  JMP writeword
00034886 <AmiBlitz3.ab3@27346>    CMP.b #3,d2
0003488A <AmiBlitz3.ab3@27347>    BCS 'la11
00034890 <AmiBlitz3.ab3@27348>    MOVE.w #$2540,-4(a4)
00034892 <AmiBlitz3.ab3@27349>  RTS
00034896 <AmiBlitz3.ab3@27352>    CMP.b #2,d2
0003489A <AmiBlitz3.ab3@27353>    BNE 'la12
000348A0 <AmiBlitz3.ab3@27354>     MOVE.w #$3540,-4(a4)
000348A2 <AmiBlitz3.ab3@27355>  RTS
000348A6 <AmiBlitz3.ab3@27358>    CMP.b #1,d2
000348AA <AmiBlitz3.ab3@27359>    BNE.s 'la10
000348B0 <AmiBlitz3.ab3@27360>     MOVE.w #$1540,-4(a4)
000348B2 <AmiBlitz3.ab3@27361>  RTS
000348B8 <AmiBlitz3.ab3@27364>   CLR.b optiarray
000348BC <AmiBlitz3.ab3@27366>    CMP.b #$1,D2
000348C0 <AmiBlitz3.ab3@27367>    BEQ.w 'byte
000348C4 <AmiBlitz3.ab3@27368>    BSR.w varalign
000348C8 <AmiBlitz3.ab3@27369>    CMP.b #$3,D2
000348CC <AmiBlitz3.ab3@27370>    BCC.w 'writevarlong
000348D2 <AmiBlitz3.ab3@27372>    TST.b fast                                              ;optiimmi
000348D6 <AmiBlitz3.ab3@27373>    BEQ 'l10bc
000348DC <AmiBlitz3.ab3@27378>    MOVE.l destpointer,a0
000348E2 <AmiBlitz3.ab3@27379>    SUB.l imm_addr,a0
000348E8 <AmiBlitz3.ab3@27380>    CMP.l #4,a0
000348EC <AmiBlitz3.ab3@27381>    BNE 'l10c
000348F2 <AmiBlitz3.ab3@27382>    CLR.l imm_addr
000348F8 <AmiBlitz3.ab3@27383>    MOVE.l destpointer,a4
000348FC <AmiBlitz3.ab3@27384>    OR.w #$107c,d1
00034900 <AmiBlitz3.ab3@27385>    MOVE.w d1,-4(a4)
00034902 <AmiBlitz3.ab3@27386>     MOVE.w D3,D1
00034908 <AmiBlitz3.ab3@27387>  JMP writeword
0003490E <AmiBlitz3.ab3@27390>   MOVE.l destpointer,a0
00034914 <AmiBlitz3.ab3@27391>   SUB.l load_var_addr,a0
0003491A <AmiBlitz3.ab3@27392>   CMP.l #4,a0
0003491E <AmiBlitz3.ab3@27393>   BNE 'l10bc
00034924 <AmiBlitz3.ab3@27394>   CMP.w #$302d,-4(a4)                                      ;check 68k opcode
00034928 <AmiBlitz3.ab3@27395>   BNE 'l10bc
0003492E <AmiBlitz3.ab3@27397>   CLR.l load_var_addr
00034934 <AmiBlitz3.ab3@27398>   MOVE.l destpointer,a4
00034938 <AmiBlitz3.ab3@27399>   OR.w #$102d,d1
0003493C <AmiBlitz3.ab3@27400>   MOVE.w d1,-4(a4)
0003493E <AmiBlitz3.ab3@27401>   MOVE.w d3,d1
00034944 <AmiBlitz3.ab3@27402>  JMP writeword
00034948 <AmiBlitz3.ab3@27406>   ORI.w #$1000,D1                                          ;word
0003494C <AmiBlitz3.ab3@27407>  BRA.w 'writestorevar
00034952 <AmiBlitz3.ab3@27412>    TST.b fast                                              ;optiimmi
00034956 <AmiBlitz3.ab3@27413>    BEQ 'l10bb
0003495C <AmiBlitz3.ab3@27418>    MOVE.l destpointer,a0
00034962 <AmiBlitz3.ab3@27419>    SUB.l imm_addr,a0
00034968 <AmiBlitz3.ab3@27420>    CMP.l #4,a0
0003496C <AmiBlitz3.ab3@27421>    BNE 'l10d
00034972 <AmiBlitz3.ab3@27422>    CLR.l imm_addr
00034978 <AmiBlitz3.ab3@27423>    MOVE.l destpointer,a4
0003497C <AmiBlitz3.ab3@27424>    OR.w #$7c,d1
00034980 <AmiBlitz3.ab3@27425>    EORI #$3000,d1
00034984 <AmiBlitz3.ab3@27426>    MOVE.w d1,-4(a4)
00034986 <AmiBlitz3.ab3@27427>       MOVE.w D3,D1
0003498C <AmiBlitz3.ab3@27428>  JMP writeword
00034992 <AmiBlitz3.ab3@27431>   MOVE.l destpointer,a0
00034998 <AmiBlitz3.ab3@27432>   SUB.l load_var_addr,a0
0003499E <AmiBlitz3.ab3@27433>   CMP.l #4,a0
000349A2 <AmiBlitz3.ab3@27434>   BNE 'l10bb
000349A8 <AmiBlitz3.ab3@27435>   CLR.l load_var_addr
000349AE <AmiBlitz3.ab3@27436>   MOVE.l destpointer,a4
000349B4 <AmiBlitz3.ab3@27437>    CMP.w #$1b6d,-4(a4)
000349B8 <AmiBlitz3.ab3@27438>    BNE 'l10bb
000349BC <AmiBlitz3.ab3@27439>    OR.w #$2d,d1
000349C0 <AmiBlitz3.ab3@27440>    EORI #$3000,d1
000349C4 <AmiBlitz3.ab3@27441>    MOVE.w d1,-4(a4)
000349C6 <AmiBlitz3.ab3@27442>   MOVE.w d3,d1
000349CC <AmiBlitz3.ab3@27443>  JMP writeword
000349D2 <AmiBlitz3.ab3@27447>   ADDQ.w #1,pcodd                                          ;byte
000349D6 <AmiBlitz3.ab3@27448>   EORI.w #$3000,D1
000349DC <AmiBlitz3.ab3@27451>   JSR writeword
000349E0 <AmiBlitz3.ab3@27452>   BTST #$7,D1
000349E4 <AmiBlitz3.ab3@27453>    BNE 'done
000349E6 <AmiBlitz3.ab3@27454>   MOVE.w D3,D1
000349EC <AmiBlitz3.ab3@27455>  JMP writeword
000349F2 <AmiBlitz3.ab3@27458>    TST.b fast                                              ;optiimmi
000349F6 <AmiBlitz3.ab3@27459>    BEQ 'l10ba
000349FC <AmiBlitz3.ab3@27463>    MOVE.l destpointer,a0
00034A02 <AmiBlitz3.ab3@27464>    SUB.l imm_addr,a0
00034A08 <AmiBlitz3.ab3@27465>    CMP.l #6,a0
00034A0C <AmiBlitz3.ab3@27466>    BNE 'l10e
00034A12 <AmiBlitz3.ab3@27467>    CLR.l imm_addr
00034A18 <AmiBlitz3.ab3@27468>    MOVE.l destpointer,a4
00034A1C <AmiBlitz3.ab3@27469>    OR.w #$7c,d1
00034A20 <AmiBlitz3.ab3@27470>    MOVE.w d1,-6(a4)
00034A22 <AmiBlitz3.ab3@27471>     MOVE.w D3,D1
00034A28 <AmiBlitz3.ab3@27472>  JMP writeword
00034A2E <AmiBlitz3.ab3@27475>   MOVE.l destpointer,a0
00034A34 <AmiBlitz3.ab3@27476>   SUB.l load_var_addr,a0
00034A3A <AmiBlitz3.ab3@27477>   CMP.l #4,a0
00034A3E <AmiBlitz3.ab3@27478>   BNE 'l10ba
00034A44 <AmiBlitz3.ab3@27479>   CLR.l load_var_addr
00034A4A <AmiBlitz3.ab3@27480>   MOVE.l destpointer,a4
00034A50 <AmiBlitz3.ab3@27481>   CMP.w #$245f,-2(a4)
00034A54 <AmiBlitz3.ab3@27482>   BEQ 'l10ba
00034A58 <AmiBlitz3.ab3@27483>   OR.w #$28,d1
00034A5C <AmiBlitz3.ab3@27484>   OR.w d1,-4(a4)
00034A62 <AmiBlitz3.ab3@27485>   CMP.w #$2b6d,-4(a4)
00034A66 <AmiBlitz3.ab3@27486>   BNE 'd1aa
00034A6A <AmiBlitz3.ab3@27487>   CMP.w -2(a4),d3
00034A6E <AmiBlitz3.ab3@27488>   BNE 'd1aa
00034A74 <AmiBlitz3.ab3@27489>   SUBQ.l #4,destpointer
00034A76 <AmiBlitz3.ab3@27490>  RTS
00034A78 <AmiBlitz3.ab3@27493>   MOVE.w d3,d1
00034A7E <AmiBlitz3.ab3@27494>  JMP writeword
00034A84 <AmiBlitz3.ab3@27498>   JSR writeword
00034A88 <AmiBlitz3.ab3@27499>   BTST #$7,D1
00034A8C <AmiBlitz3.ab3@27500>    BNE.b 'done
00034A8E <AmiBlitz3.ab3@27501>   MOVE.w D3,D1
00034A94 <AmiBlitz3.ab3@27502>  JMP writeword
00034A96 <AmiBlitz3.ab3@27505> RTS
00034A98 <AmiBlitz3.ab3@27509>   MOVE.w D1,-(A7)
00034A9C <AmiBlitz3.ab3@27510>   MOVE.w pcodd(PC),D1
00034A9E <AmiBlitz3.ab3@27511>   LSR.w #1,D1
00034AA2 <AmiBlitz3.ab3@27512>    BCC.b 'done
00034AA8 <AmiBlitz3.ab3@27513>   CLR.w pcodd
00034AAE <AmiBlitz3.ab3@27514>   MOVE.w add1a2,D1
00034AB4 <AmiBlitz3.ab3@27515>    JSR writeword
00034AB6 <AmiBlitz3.ab3@27518>   MOVE.w (A7)+,D1
00034AB8 <AmiBlitz3.ab3@27519> RTS
00034ABA <AmiBlitz3.ab3@27523> add1a2:     Dc.b $52,$4A                                   ;ADDQ.W  #1,A2
00034ABC <AmiBlitz3.ab3@27526> pcodd:     Ds.w 1                                          ;add 1 to this for bytes
00034ABE <AmiBlitz3.ab3@27527> listadd:   Ds.w 1                                          ;set to 8 if it's a list
00034AC0 <AmiBlitz3.ab3@27528> listsize:  Ds.w 1
00034AC6 <AmiBlitz3.ab3@27534>   ADDQ.w #1,regnum               ;get things into d1
00034ACE <AmiBlitz3.ab3@27536>   MOVE.b #1,nowdeclare
00034AD4 <AmiBlitz3.ab3@27537>   CLR.b dimkeep
00034ADC <AmiBlitz3.ab3@27538>    CMP.l #"KEEP",-1(a5)
00034AE0 <AmiBlitz3.ab3@27539>   BNE 'nokeep
00034AE6 <AmiBlitz3.ab3@27540>   CMP.b #" ",3(a5)
00034AEA <AmiBlitz3.ab3@27541>   BNE 'nokeep
00034AEC <AmiBlitz3.ab3@27542>   ADDQ.l #3,a5
00034AF0 <AmiBlitz3.ab3@27545>     CMP.b #" ",(a5)
00034AF4 <AmiBlitz3.ab3@27546>     BNE '1
00034AF6 <AmiBlitz3.ab3@27547>    ADDQ #1,a5
00034AFA <AmiBlitz3.ab3@27548>  BRA '2
00034B00 <AmiBlitz3.ab3@27551>   MOVE.l a5,lastsourcepos
00034B08 <AmiBlitz3.ab3@27552>   MOVE.b #1,dimkeep
00034B0C <AmiBlitz3.ab3@27561>   MOVE.w #$FF9A,D1           ; is #65434,
00034B12 <AmiBlitz3.ab3@27562>   JSR uselib                 ;arrays lib!
00034B18 <AmiBlitz3.ab3@27565>   CLR.w listadd
00034B1C <AmiBlitz3.ab3@27566>   CMP.w #-$7F4D,D0           ; was #$8000+tnum,d0
00034B20 <AmiBlitz3.ab3@27567>    BNE.w 'notlist
00034B28 <AmiBlitz3.ab3@27568>   MOVE.w #$0008,listadd      ;it's a list
00034B2C <AmiBlitz3.ab3@27569>   MOVE.w #$FFFA,D1           ; is #65530
00034B32 <AmiBlitz3.ab3@27570>    JSR uselib                ;use memlib
00034B38 <AmiBlitz3.ab3@27571>    JSR get1bytemain
00034B3E <AmiBlitz3.ab3@27574>   CLR.w nonew
00034B44 <AmiBlitz3.ab3@27575>    JSR getparameter
00034B4A <AmiBlitz3.ab3@27577>   JSR checkdoubledeclare
00034B52 <AmiBlitz3.ab3@27579>   BTST #$1,flagmask+1
00034B56 <AmiBlitz3.ab3@27580>    BEQ.w JUMP_syntaxerr
00034B5C <AmiBlitz3.ab3@27581>    JSR fetchvars
00034B62 <AmiBlitz3.ab3@27582>   MOVE.w notshared,D1      ; added,
00034B66 <AmiBlitz3.ab3@27583>    BNE.w 'added
00034B6E <AmiBlitz3.ab3@27587>   MOVE.w $8(A3),temp1
00034B74 <AmiBlitz3.ab3@27588>   MOVE.w proceduremode,D2
00034B78 <AmiBlitz3.ab3@27589>    BNE.w 'reloc
00034B7E <AmiBlitz3.ab3@27591>   MOVE.w globalvarpointer,-(A7)
00034B86 <AmiBlitz3.ab3@27592>   MOVE.w $4(A3),globalvarpointer
00034B8C <AmiBlitz3.ab3@27593>   ADDQ.w #4,globalvarpointer
00034B90 <AmiBlitz3.ab3@27594>    BSR.w write_dim_code
00034B96 <AmiBlitz3.ab3@27595>   MOVE.w (A7)+,globalvarpointer
00034B9A <AmiBlitz3.ab3@27596>  BRA.w 'next
00034BA0 <AmiBlitz3.ab3@27611>   MOVE.w globalvarpointer,-(A7)
00034BA6 <AmiBlitz3.ab3@27612>             MOVE.w proceduremode,-(a7)
00034BAC <AmiBlitz3.ab3@27613>             CLR.w proceduremode
00034BB4 <AmiBlitz3.ab3@27614>   MOVE.w $4(A3),globalvarpointer
00034BBA <AmiBlitz3.ab3@27615>   ADDQ.w #4,globalvarpointer
00034BBE <AmiBlitz3.ab3@27616>    BSR.w write_dim_code
00034BC4 <AmiBlitz3.ab3@27617>    MOVE.w (a7)+,proceduremode
00034BCA <AmiBlitz3.ab3@27618>   MOVE.w (A7)+,globalvarpointer
00034BCE <AmiBlitz3.ab3@27620>  BRA.w 'next
00034BD6 <AmiBlitz3.ab3@27625>   MOVE.w #$FFFF,temp1                ; was -1  ;no care on # dims
00034BDA <AmiBlitz3.ab3@27626>   MOVE.w listadd(PC),D1
00034BDE <AmiBlitz3.ab3@27627>    BEQ.w 'isok
00034BE6 <AmiBlitz3.ab3@27628>   MOVE.w #$4000,temp1                ;yes, we do care - must be 1
00034BEC <AmiBlitz3.ab3@27630>   BSET #$0,$6(A3)                    ;set to list type of array
00034BF2 <AmiBlitz3.ab3@27634>         TST.w proceduremode
00034BF6 <AmiBlitz3.ab3@27635>        BNE 'l1
00034BFC <AmiBlitz3.ab3@27636>        MOVE.w locvaroff,-(a7)
00034C00 <AmiBlitz3.ab3@27640>   BSR.w write_dim_code
00034C06 <AmiBlitz3.ab3@27642>         TST.w proceduremode
00034C0A <AmiBlitz3.ab3@27643>         BNE 'next
00034C10 <AmiBlitz3.ab3@27644>        MOVE.w (A7)+,locvaroff
00034C16 <AmiBlitz3.ab3@27648>   JSR get1bytemain
00034C1A <AmiBlitz3.ab3@27649>   CMP.w #$2C,D0                ; ","
00034C1E <AmiBlitz3.ab3@27650>    BNE.w 'done
00034C24 <AmiBlitz3.ab3@27651>    JSR get1bytemain
00034C28 <AmiBlitz3.ab3@27652>  BRA.w dodim2
00034C2A <AmiBlitz3.ab3@27655> RTS
00034C30 <AmiBlitz3.ab3@27658> JUMP_syntaxerr JMP syntaxerr
00034C36 <AmiBlitz3.ab3@27659> JUMP_redimerr JMP redimerr
00034C3E <AmiBlitz3.ab3@27663>   MOVE.w #$FFFF,nonew                                      ;#-1,nonew org source
00034C44 <AmiBlitz3.ab3@27664>   MOVE.w beginarr,D1
00034C4A <AmiBlitz3.ab3@27665>    JSR writeword
00034C4C <AmiBlitz3.ab3@27666>   MOVEQ.l #$00,D1
00034C52 <AmiBlitz3.ab3@27667>    JSR writeword
00034C54 <AmiBlitz3.ab3@27668>   MOVEQ.l #$04,D1
00034C5C <AmiBlitz3.ab3@27669>   BTST #$0,flagmask+1
00034C60 <AmiBlitz3.ab3@27670>    BNE.w 'pointer
00034C64 <AmiBlitz3.ab3@27671>   MOVE.w $8(A2),D1
00034C68 <AmiBlitz3.ab3@27674>   ADD.w listadd(PC),D1                                     ;size of one element.
00034C6E <AmiBlitz3.ab3@27675>   MOVE.w D1,listsize
00034C74 <AmiBlitz3.ab3@27676>    JSR writeword
00034C7A <AmiBlitz3.ab3@27677>   CLR.w temp2                                              ;# dim's got
00034C7C <AmiBlitz3.ab3@27678>   MOVE.l A3,-(A7)
00034C82 <AmiBlitz3.ab3@27681>   ADDQ.w #1,temp2
00034C84 <AmiBlitz3.ab3@27682>   MOVEQ.l #$03,D2                                          ;get word
00034C8A <AmiBlitz3.ab3@27683>   MOVE.w notshared,-(a7)
00034C90 <AmiBlitz3.ab3@27684>    JSR eval
00034C96 <AmiBlitz3.ab3@27685>   MOVE.w (a7)+,notshared
00034C9C <AmiBlitz3.ab3@27686>   TST.b debugmode
00034CA0 <AmiBlitz3.ab3@27687>    BEQ.w 'norerr0
00034CA4 <AmiBlitz3.ab3@27688>   MOVE.w #$C30F,D1
00034CA8 <AmiBlitz3.ab3@27694>       MOVE.w #$5281,d1
00034CAE <AmiBlitz3.ab3@27695>       JSR writeword
00034CB4 <AmiBlitz3.ab3@27696>       MOVE.l #$4c010800,d1                                 ;dim >65536 fix
00034CBA <AmiBlitz3.ab3@27697>       JSR writelong
00034CC0 <AmiBlitz3.ab3@27698>   MOVE.w proceduremode,D2
00034CC4 <AmiBlitz3.ab3@27699>    BEQ.w 'global
00034CCA <AmiBlitz3.ab3@27700>   SUBQ.w #4,locvaroff
00034CD4 <AmiBlitz3.ab3@27701>   MOVE.w locvaroff,putarr+2
00034CD8 <AmiBlitz3.ab3@27702>  BRA.w 'doit
00034CE2 <AmiBlitz3.ab3@27705>   MOVE.w globalvarpointer,putarr+2
00034CE8 <AmiBlitz3.ab3@27706>   ADDQ.w #4,globalvarpointer
00034CEE <AmiBlitz3.ab3@27709>   TST.b dimkeep
00034CF2 <AmiBlitz3.ab3@27710>            BEQ 'doit_l1
00034CF4 <AmiBlitz3.ab3@27711>       MOVEQ #0,d1
00034CFA <AmiBlitz3.ab3@27712>       MOVE.w putarr+2,d1
00034D00 <AmiBlitz3.ab3@27713>       OR.l  #$222d0000,d1
00034D06 <AmiBlitz3.ab3@27714>       MOVE.w proceduremode,D2
00034D0A <AmiBlitz3.ab3@27715>       BEQ 'doit_l2
00034D10 <AmiBlitz3.ab3@27716>       TST.w notshared
00034D14 <AmiBlitz3.ab3@27717>       BEQ 'doit_l2
00034D1A <AmiBlitz3.ab3@27718>       SUB.l #$00010000,d1
00034D20 <AmiBlitz3.ab3@27721>   JSR writelong
00034D26 <AmiBlitz3.ab3@27724>   MOVE.l putarr,D1
00034D2C <AmiBlitz3.ab3@27725>       TST.w notshared
00034D30 <AmiBlitz3.ab3@27726>       BNE 'doit_l1a
00034D36 <AmiBlitz3.ab3@27727>       JSR writelong
00034D3A <AmiBlitz3.ab3@27728>  BRA 'doit_l4
00034D40 <AmiBlitz3.ab3@27731>   JSR pokela5d
00034D44 <AmiBlitz3.ab3@27734>   CMP.w #$2C,D0
00034D48 <AmiBlitz3.ab3@27735>    BEQ.w 'loop
00034D4C <AmiBlitz3.ab3@27736>   CMP.w #$29,D0
00034D50 <AmiBlitz3.ab3@27737>    BNE.w JUMP_syntaxerr
00034D52 <AmiBlitz3.ab3@27738>   MOVEA.l (A7)+,A3
00034D58 <AmiBlitz3.ab3@27739>   MOVE.w temp1,D1
00034D5C <AmiBlitz3.ab3@27740>    BMI.w 'nocare
00034D60 <AmiBlitz3.ab3@27744>   BTST #$E,D1
00034D64 <AmiBlitz3.ab3@27745>    BEQ.w 'notl
00034D6C <AmiBlitz3.ab3@27746>   CMPI.w #$1,temp2
00034D70 <AmiBlitz3.ab3@27747>    BNE.w JUMP_redimerr
00034D74 <AmiBlitz3.ab3@27748>  BRA.w 'nocare
00034D7A <AmiBlitz3.ab3@27751>   CMP.w temp2,D1
00034D7E <AmiBlitz3.ab3@27752>    BNE.w JUMP_redimerr                                     ;range too long
00034D84 <AmiBlitz3.ab3@27755>   LEA globalvarpointer,A0
00034D8A <AmiBlitz3.ab3@27756>   MOVE.w proceduremode,D1
00034D8E <AmiBlitz3.ab3@27757>   BEQ.w 'gskip
00034D94 <AmiBlitz3.ab3@27758>   LEA locvaroff,A0
00034D9A <AmiBlitz3.ab3@27761>   MOVE.W  extraword,(A0)
00034D9E <AmiBlitz3.ab3@27762>   BRA.W   'care
00034DA6 <AmiBlitz3.ab3@27765>   MOVE.w temp2,$8(A3)                                      ;set # dim's
00034DAC <AmiBlitz3.ab3@27768>   LEA doarr,A0
00034DB2 <AmiBlitz3.ab3@27769>   MOVE.w $4(A3),$2(A0)
00034DBA <AmiBlitz3.ab3@27770>   MOVE.w putarr+2,$6(A0)
00034DBC <AmiBlitz3.ab3@27771>   MOVE.l (A0)+,D1
00034DC2 <AmiBlitz3.ab3@27772>    JSR writelong
00034DC4 <AmiBlitz3.ab3@27773>   MOVE.l (A0),D1
00034DCA <AmiBlitz3.ab3@27774>    JSR writelong
00034DD0 <AmiBlitz3.ab3@27775>    TST.b dimkeep
00034DD4 <AmiBlitz3.ab3@27776>   BNE 'care_l3
00034DD8 <AmiBlitz3.ab3@27779>   MOVE.w #$C400,D1
00034DDC <AmiBlitz3.ab3@27780>  BRA 'care_l2
00034DE0 <AmiBlitz3.ab3@27783>   MOVE.w #$C405,d1
00034DE6 <AmiBlitz3.ab3@27786>   MOVE.w proceduremode,D2
00034DEA <AmiBlitz3.ab3@27787>    BEQ.w 'isg
00034DF0 <AmiBlitz3.ab3@27788>    TST.w notshared
00034DF4 <AmiBlitz3.ab3@27789>    BEQ 'isg
00034DF6 <AmiBlitz3.ab3@27790>   ADDQ.w #1,D1
00034DFA <AmiBlitz3.ab3@27793>   MOVE.w listadd(PC),D2
00034DFE <AmiBlitz3.ab3@27794>    BEQ.w 'isrg
00034E00 <AmiBlitz3.ab3@27795>   MOVE.w D1,-(A7)
00034E04 <AmiBlitz3.ab3@27796>   MOVE.w setles(PC),D1
00034E0A <AmiBlitz3.ab3@27797>    JSR writeword
00034E0E <AmiBlitz3.ab3@27798>   MOVE.w listsize(PC),D1
00034E14 <AmiBlitz3.ab3@27799>    JSR writeword
00034E16 <AmiBlitz3.ab3@27800>   MOVE.w (A7)+,D1
00034E18 <AmiBlitz3.ab3@27801>   ADDQ.w #3,D1
00034E1C <AmiBlitz3.ab3@27804> BRA.w Atokejsr
00034E20 <AmiBlitz3.ab3@27807> setles:   Dc.b $38,$3C,$00,$00                             ;MOVE.W  #$0000,D4
00034E26 <AmiBlitz3.ab3@27816>     MOVE.l #$f23c4400,d1
00034E2C <AmiBlitz3.ab3@27818>   MOVE.w regnum,d0
00034E2E <AmiBlitz3.ab3@27819>   ASL.w #7,d0
00034E30 <AmiBlitz3.ab3@27820>   OR.w d0,d1
00034E36 <AmiBlitz3.ab3@27821>   JSR writelong
00034E3C <AmiBlitz3.ab3@27827>     MOVE.l #$40490fd9,d1
00034E42 <AmiBlitz3.ab3@27829>   JSR writelong
00034E48 <AmiBlitz3.ab3@27830> JMP get1bytemain
00034E4C <AmiBlitz3.ab3@27837> vbr:                Ds.l 1
00034E4E <AmiBlitz3.ab3@27838> cfetchmode:         Ds.w 1                               ;1=fetching a constant
00034E54 <AmiBlitz3.ab3@27840> constlibs           Dc.w $FDA7,$FCDF,$FD43               ;64935,64735,64835  org source
00034E58 <AmiBlitz3.ab3@27844> constpcat:          Ds.l 1
00034E5C <AmiBlitz3.ab3@27845> constlibat:         Ds.l 1
00034E60 <AmiBlitz3.ab3@27846> constmaxpc:         Dc.l $400
00034E64 <AmiBlitz3.ab3@27848> stacksize:          Dc.l #DEFAULT_STACKSIZE              ;stackfuck org source
00034E68 <AmiBlitz3.ab3@27849> currentlabeladdr:   Dc.l labelbase                       ;lastrescon org source
00034E6C <AmiBlitz3.ab3@27850> currentmacroaddr:   Dc.l macrobase                       ;lastresmac org source
00034E70 <AmiBlitz3.ab3@27851> lastrestype:        Dc.l newtype_string
00034E72 <AmiBlitz3.ab3@27852> rescnt:             Ds.w 1                               ;# resident
00034E74 <AmiBlitz3.ab3@27853> state_of_residents: Ds.w 1                               ;reschg org source ;flag for if res's have changed
00034E78 <AmiBlitz3.ab3@27854> resat:              Dc.l residents_table                 ;??looks like not used anymore??
00034E7A <AmiBlitz3.ab3@27855> linedone:           Ds.w 1
00034E90 <AmiBlitz3.ab3@27856> directbuffer:       Ds.w 11                              ;dirpcat  dc.w 0 org source
00034E94 <AmiBlitz3.ab3@27865>   Dc.l 0                                        ; bytetobyte
00034E98 <AmiBlitz3.ab3@27866>   Dc.l convert_byte_to_word                     ; bytetoword
00034E9C <AmiBlitz3.ab3@27867>   Dc.l convert_byte_to_long                     ; bytetolong
00034EA0 <AmiBlitz3.ab3@27868>   Dc.l convert_byte_to_quick                    ; bytetoquick
00034EA4 <AmiBlitz3.ab3@27869>   Dc.l convert_byte_to_float                    ; bytetofloat
00034EA8 <AmiBlitz3.ab3@27870>   Dc.l convert_byte_to_long                     ; bytetolong
00034EAC <AmiBlitz3.ab3@27871>   Dc.l error_convert_types                      ; noconerr
00034EB0 <AmiBlitz3.ab3@27874>   Dc.l convert_word_to_byte                     ; wordtobyte
00034EB4 <AmiBlitz3.ab3@27875>   Dc.l 0                                        ; wordtoword
00034EB8 <AmiBlitz3.ab3@27876>   Dc.l convert_word_to_long                     ; wordtolong
00034EBC <AmiBlitz3.ab3@27877>   Dc.l convert_word_to_quick                    ; wordtoquick
00034EC0 <AmiBlitz3.ab3@27878>   Dc.l convert_word_to_float                    ; wordtofloat
00034EC4 <AmiBlitz3.ab3@27879>   Dc.l convert_word_to_long                     ; wordtolong
00034EC8 <AmiBlitz3.ab3@27880>   Dc.l error_convert_types                      ; noconerr
00034ECC <AmiBlitz3.ab3@27883>   Dc.l convert_long_to_byte                     ; longtobyte
00034ED0 <AmiBlitz3.ab3@27884>   Dc.l convert_long_to_word                     ; longtoword
00034ED4 <AmiBlitz3.ab3@27885>   Dc.l 0                                        ; longtolong
00034ED8 <AmiBlitz3.ab3@27886>   Dc.l convert_long_to_quick                    ; longtoquick
00034EDC <AmiBlitz3.ab3@27887>   Dc.l convert_long_to_float                    ; longtofloat
00034EE0 <AmiBlitz3.ab3@27888>   Dc.l 0                                        ; longtolong
00034EE4 <AmiBlitz3.ab3@27889>   Dc.l error_convert_types                      ; noconerr
00034EE8 <AmiBlitz3.ab3@27892>   Dc.l convert_quick_to_byte                    ; quicktobyte
00034EEC <AmiBlitz3.ab3@27893>   Dc.l convert_quick_to_word                    ; quicktoword
00034EF0 <AmiBlitz3.ab3@27894>   Dc.l convert_quick_to_long                    ; quicktolong
00034EF4 <AmiBlitz3.ab3@27895>   Dc.l 0                                        ; quicktoquick
00034EF8 <AmiBlitz3.ab3@27896>   Dc.l convert_quick_to_float                   ; quicktofloat
00034EFC <AmiBlitz3.ab3@27897>   Dc.l convert_quick_to_long                    ; quicktolong
00034F00 <AmiBlitz3.ab3@27898>   Dc.l error_convert_types                      ; noconerr
00034F04 <AmiBlitz3.ab3@27901>   Dc.l convert_float_to_byte                    ; floattobyte
00034F08 <AmiBlitz3.ab3@27902>   Dc.l convert_float_to_word                    ; floattoword
00034F0C <AmiBlitz3.ab3@27903>   Dc.l convert_float_to_long                    ; floattolong
00034F10 <AmiBlitz3.ab3@27904>   Dc.l convert_float_to_quick                   ; floattoquick
00034F14 <AmiBlitz3.ab3@27905>   Dc.l 0                                        ; floattofloat
00034F18 <AmiBlitz3.ab3@27906>   Dc.l convert_float_to_long                    ; floattolong
00034F1C <AmiBlitz3.ab3@27907>   Dc.l error_convert_types                      ; noconerr
00034F20 <AmiBlitz3.ab3@27910>   Dc.l convert_long_to_byte                     ; longtobyte
00034F24 <AmiBlitz3.ab3@27911>   Dc.l convert_long_to_word                     ; longtoword
00034F28 <AmiBlitz3.ab3@27912>   Dc.l 0                                        ; longtolong
00034F2C <AmiBlitz3.ab3@27913>   Dc.l convert_long_to_quick                    ; longtoquick
00034F30 <AmiBlitz3.ab3@27914>   Dc.l convert_long_to_float                    ; longtofloat
00034F34 <AmiBlitz3.ab3@27915>   Dc.l 0                                        ; longtolong
00034F38 <AmiBlitz3.ab3@27916>   Dc.l error_convert_types                      ; noconerr
00034F3C <AmiBlitz3.ab3@27919>   Dc.l error_convert_types                      ; noconerr
00034F40 <AmiBlitz3.ab3@27920>   Dc.l error_convert_types                      ; noconerr
00034F44 <AmiBlitz3.ab3@27921>   Dc.l string_to_long                           ; stringtolong
00034F48 <AmiBlitz3.ab3@27922>   Dc.l error_convert_types                      ; noconerr
00034F4C <AmiBlitz3.ab3@27923>   Dc.l error_convert_types                      ; noconerr
00034F50 <AmiBlitz3.ab3@27924>   Dc.l string_to_long                           ; stringtolong
00034F54 <AmiBlitz3.ab3@27925>   Ds.l 1
00034F56 <AmiBlitz3.ab3@27931>   Dc.b $00,$2B                                  ;+ ; add
00034F5A <AmiBlitz3.ab3@27932>   Dc.l do_plus_byte                             ;doplusb
00034F5E <AmiBlitz3.ab3@27933>   Dc.l do_plus_word                             ;doplusw
00034F62 <AmiBlitz3.ab3@27934>   Dc.l do_plus_long                             ;doplusl
00034F66 <AmiBlitz3.ab3@27935>   Dc.l do_plus_long                             ;doplusl
00034F6A <AmiBlitz3.ab3@27936>   Dc.l do_plus_float                            ;doplusf
00034F6E <AmiBlitz3.ab3@27937>   Ds.l 1
00034F72 <AmiBlitz3.ab3@27938>   Dc.l add_strings                              ;addstrings
00034F74 <AmiBlitz3.ab3@27939>   Dc.b $0B,$B8
00034F76 <AmiBlitz3.ab3@27941>   Dc.b $00,$2D                                  ;- ; sub
00034F7A <AmiBlitz3.ab3@27942>   Dc.l do_minus_byte                            ;dominusb
00034F7E <AmiBlitz3.ab3@27943>   Dc.l do_minus_word                            ;dominusw
00034F82 <AmiBlitz3.ab3@27944>   Dc.l do_minus_long                            ;dominusl
00034F86 <AmiBlitz3.ab3@27945>   Dc.l do_minus_long                            ;dominusl
00034F8A <AmiBlitz3.ab3@27946>   Dc.l do_minus_float                           ;dominusf
00034F92 <AmiBlitz3.ab3@27947>   Ds.l 2
00034F94 <AmiBlitz3.ab3@27948>   Dc.b $0B,$B8
00034F96 <AmiBlitz3.ab3@27950>   Dc.b $00,$2A                                  ;* ; mul
00034F9A <AmiBlitz3.ab3@27951>   Dc.l do_times_byte                            ;dotimesb
00034F9E <AmiBlitz3.ab3@27952>   Dc.l do_times_word                            ;dotimesw
00034FA2 <AmiBlitz3.ab3@27953>   Dc.l do_times_long                            ;dotimesl
00034FA6 <AmiBlitz3.ab3@27954>   Dc.l do_times_quick                           ;dotimesq
00034FAA <AmiBlitz3.ab3@27955>   Dc.l do_times_float                           ;dotimesf
00034FB2 <AmiBlitz3.ab3@27956>   Ds.l 2
00034FB4 <AmiBlitz3.ab3@27957>   Dc.b $0F,$A0
00034FB6 <AmiBlitz3.ab3@27959>   Dc.b $00,$2F                                  ;/ ; div
00034FBA <AmiBlitz3.ab3@27960>   Dc.l do_Div_byte                              ;dodivb
00034FBE <AmiBlitz3.ab3@27961>   Dc.l do_Div_word                              ;dodivb
00034FC2 <AmiBlitz3.ab3@27962>   Dc.l do_Div_long                              ;dodivl
00034FC6 <AmiBlitz3.ab3@27963>   Dc.l do_Div_quick                             ;dodivq
00034FCA <AmiBlitz3.ab3@27964>   Dc.l do_Div_float                             ;dodivf
00034FD2 <AmiBlitz3.ab3@27965>   Ds.l 2
00034FD4 <AmiBlitz3.ab3@27966>   Dc.b $0F,$A0
00034FD6 <AmiBlitz3.ab3@27968>   Dc.b $00,$26                                  ;& ; & int
00034FDA <AmiBlitz3.ab3@27969>   Dc.l do_AND_byte                              ;doandb
00034FDE <AmiBlitz3.ab3@27970>   Dc.l do_AND_word                              ;doandw
00034FE2 <AmiBlitz3.ab3@27971>   Dc.l do_AND_long                              ;doandl
00034FE6 <AmiBlitz3.ab3@27972>   Dc.l do_AND_long                              ;doandl
00034FF2 <AmiBlitz3.ab3@27973>   Ds.l 3
00034FF4 <AmiBlitz3.ab3@27974>   Dc.b $13,$88
00034FF6 <AmiBlitz3.ab3@27976>   Dc.b $00,$7C                                  ;| ;or int ;
00034FFA <AmiBlitz3.ab3@27977>   Dc.l do_OR_byte                               ;doorb
00034FFE <AmiBlitz3.ab3@27978>   Dc.l do_OR_word                               ;doorw
00035002 <AmiBlitz3.ab3@27979>   Dc.l do_OR_long                               ;doorl
00035006 <AmiBlitz3.ab3@27980>   Dc.l do_OR_long                               ;doorl
00035012 <AmiBlitz3.ab3@27981>   Ds.l 3
00035014 <AmiBlitz3.ab3@27982>   Dc.b $13,$88
00035016 <AmiBlitz3.ab3@27984>   Dc.b $80,$42                                  ; AND int  ;(opand-opabcd)/$1c+$8000+fnum
0003501A <AmiBlitz3.ab3@27985>   Dc.l do_AND_byte                              ;doandb
0003501E <AmiBlitz3.ab3@27986>   Dc.l do_AND_word                              ;doandw
00035022 <AmiBlitz3.ab3@27987>   Dc.l do_AND_long                              ;doandl
00035026 <AmiBlitz3.ab3@27988>   Dc.l do_AND_long                              ;doandl
00035032 <AmiBlitz3.ab3@27989>   Ds.l 3
00035034 <AmiBlitz3.ab3@27990>   Dc.b $03,$E8
00035036 <AmiBlitz3.ab3@27992>   Dc.b $80,$8A                                  ; OR int   ;(opor-opabcd)/$1c+$8000+fnum
0003503A <AmiBlitz3.ab3@27993>   Dc.l do_OR_byte                               ;doorb
0003503E <AmiBlitz3.ab3@27994>   Dc.l do_OR_word                               ;doorw
00035042 <AmiBlitz3.ab3@27995>   Dc.l do_OR_long                               ;doorl
00035046 <AmiBlitz3.ab3@27996>   Dc.l do_OR_long                               ;doorl
00035052 <AmiBlitz3.ab3@27997>   Ds.l 3
00035054 <AmiBlitz3.ab3@27998>   Dc.b $03,$E8
00035056 <AmiBlitz3.ab3@28000>   Dc.b $80,$73                                  ; EOR int  ;(opeor-opabcd)/$1c+$8000+fnum
0003505A <AmiBlitz3.ab3@28001>   Dc.l do_EOR_byte                              ;doeorb
0003505E <AmiBlitz3.ab3@28002>   Dc.l do_EOR_word                              ;doeorw
00035062 <AmiBlitz3.ab3@28003>   Dc.l do_EOR_long                              ;doeorl
00035066 <AmiBlitz3.ab3@28004>   Dc.l do_EOR_long                              ;doeorl
00035072 <AmiBlitz3.ab3@28005>   Ds.l 3
00035074 <AmiBlitz3.ab3@28006>   Dc.b $03,$E8
00035076 <AmiBlitz3.ab3@28008>   Dc.b $80,$7C                                  ; LSL int  ;(oplsl-opabcd)/$1c+$8000+fnum
0003507A <AmiBlitz3.ab3@28009>   Dc.l do_LSL                                   ;dolslb
0003507E <AmiBlitz3.ab3@28010>   Dc.l do_LSL                                   ;dolslw
00035082 <AmiBlitz3.ab3@28011>   Dc.l do_LSL                                   ;dolsll
00035086 <AmiBlitz3.ab3@28012>   Dc.l do_LSL                                   ;dolsll
00035092 <AmiBlitz3.ab3@28013>   Ds.l 3
00035094 <AmiBlitz3.ab3@28014>   Dc.b $17,$70
00035096 <AmiBlitz3.ab3@28016>   Dc.b $80,$44                                  ; ASL int  ;(opasl-opabcd)/$1c+$8000+fnum
0003509A <AmiBlitz3.ab3@28017>   Dc.l do_LSL                                   ;dolslb
0003509E <AmiBlitz3.ab3@28018>   Dc.l do_LSL                                   ;dolslw
000350A2 <AmiBlitz3.ab3@28019>   Dc.l do_LSL                                   ;dolsll
000350A6 <AmiBlitz3.ab3@28020>   Dc.l do_LSL                                   ;dolsll
000350B2 <AmiBlitz3.ab3@28021>   Ds.l 3
000350B4 <AmiBlitz3.ab3@28022>   Dc.b $17,$70
000350B6 <AmiBlitz3.ab3@28024>   Dc.b $80,$7D                                  ; LSR int  ;(oplsr-opabcd)/$1c+$8000+fnum
000350BA <AmiBlitz3.ab3@28025>   Dc.l do_LSR                                   ;dolsrb
000350BE <AmiBlitz3.ab3@28026>   Dc.l do_LSR                                   ;dolsrw
000350C2 <AmiBlitz3.ab3@28027>   Dc.l do_LSR                                   ;dolsrl
000350C6 <AmiBlitz3.ab3@28028>   Dc.l do_LSR                                   ;dolsrl
000350D2 <AmiBlitz3.ab3@28029>   Ds.l 3
000350D4 <AmiBlitz3.ab3@28030>   Dc.b $17,$70
000350D6 <AmiBlitz3.ab3@28032>   Dc.b $80,$45                                  ; ASR int  ;(opasr-opabcd)/$1c+$8000+fnum
000350DA <AmiBlitz3.ab3@28033>   Dc.l do_ASR                                   ;doasrb
000350DE <AmiBlitz3.ab3@28034>   Dc.l do_ASR                                   ;doasrw
000350E2 <AmiBlitz3.ab3@28035>   Dc.l do_ASR                                   ;doasrl
000350E6 <AmiBlitz3.ab3@28036>   Dc.l do_ASR                                   ;doasrl
000350F2 <AmiBlitz3.ab3@28037>   Ds.l 3
000350F4 <AmiBlitz3.ab3@28038>   Dc.b $17,$70
000350F6 <AmiBlitz3.ab3@28040>   Dc.b $80,$B9                                  ;mod       ;$8006+tnum
000350FA <AmiBlitz3.ab3@28041>   Dc.l do_mod_byte                              ;domodb
000350FE <AmiBlitz3.ab3@28042>   Dc.l do_mod_word                              ;domodw
00035102 <AmiBlitz3.ab3@28043>   Dc.l do_mod_long                              ;domodl
00035106 <AmiBlitz3.ab3@28044>   Dc.l do_mod_quick                             ;domodq
0003510A <AmiBlitz3.ab3@28045>   Dc.l do_mod_float                             ;domodf
00035112 <AmiBlitz3.ab3@28046>   Ds.l 2
00035114 <AmiBlitz3.ab3@28047>   Dc.b $13,$88
00035116 <AmiBlitz3.ab3@28050>   Dc.b $00,$5E                                  ;^
0003511A <AmiBlitz3.ab3@28051>   Dc.l do_pow                                   ;dopow
0003511E <AmiBlitz3.ab3@28052>   Dc.l do_pow                                   ;dopow
00035122 <AmiBlitz3.ab3@28053>   Dc.l do_pow                                   ;dopow
00035126 <AmiBlitz3.ab3@28054>   Dc.l do_pow                                   ;dopow
0003512A <AmiBlitz3.ab3@28055>   Dc.l do_pow                                   ;dopow
00035132 <AmiBlitz3.ab3@28056>   Ds.l 2
00035134 <AmiBlitz3.ab3@28057>   Dc.b $1B,$58                                  ;7000
00035136 <AmiBlitz3.ab3@28060>   Dc.b $00,$3D                                  ;=
0003513A <AmiBlitz3.ab3@28061>   Dc.l do_equal_byte                            ;doeqb
0003513E <AmiBlitz3.ab3@28062>   Dc.l do_equal_word                            ;doeqw
00035142 <AmiBlitz3.ab3@28063>   Dc.l do_equal_long                            ;doeql
00035146 <AmiBlitz3.ab3@28064>   Dc.l do_equal_long                            ;doeql
0003514A <AmiBlitz3.ab3@28065>   Dc.l do_equal_float                           ;doeqf
0003514E <AmiBlitz3.ab3@28066>   Dc.l do_equal_long                            ;doeql
00035152 <AmiBlitz3.ab3@28067>   Dc.l do_equal_string                          ;doeqs
00035154 <AmiBlitz3.ab3@28068>   Dc.b $07,$D0                                  ;2000
00035156 <AmiBlitz3.ab3@28071>   Dc.b $3C,$3E                                  ;<>
0003515A <AmiBlitz3.ab3@28072>   Dc.l do_not_equal_byte                        ;doneb
0003515E <AmiBlitz3.ab3@28073>   Dc.l do_not_equal_word                        ;donew
00035162 <AmiBlitz3.ab3@28074>   Dc.l do_not_equal_long                        ;donel
00035166 <AmiBlitz3.ab3@28075>   Dc.l do_not_equal_long                        ;donel
0003516A <AmiBlitz3.ab3@28076>   Dc.l do_not_equal_float                       ;donef
0003516E <AmiBlitz3.ab3@28077>   Dc.l do_not_equal_long                        ;donel
00035172 <AmiBlitz3.ab3@28078>   Dc.l do_not_equal_string                      ;dones
00035174 <AmiBlitz3.ab3@28079>   Dc.b $07,$D0                                  ;2000
00035176 <AmiBlitz3.ab3@28082>   Dc.b $00,$3C                                  ;<
0003517A <AmiBlitz3.ab3@28083>   Dc.l do_littler_byte                          ;doltb
0003517E <AmiBlitz3.ab3@28084>   Dc.l do_littler_word                          ;doltw
00035182 <AmiBlitz3.ab3@28085>   Dc.l do_littler_long                          ;doltl
00035186 <AmiBlitz3.ab3@28086>   Dc.l do_littler_long                          ;doltl
0003518A <AmiBlitz3.ab3@28087>   Dc.l do_littler_float                         ;doltf
0003518E <AmiBlitz3.ab3@28088>   Dc.l do_littler_long                          ;doltl
00035192 <AmiBlitz3.ab3@28089>   Dc.l do_littler_string                        ;dolts
00035194 <AmiBlitz3.ab3@28090>   Dc.b $07,$D0                                  ;2000
00035196 <AmiBlitz3.ab3@28093>   Dc.b $3C,$3D                                  ;<=
0003519A <AmiBlitz3.ab3@28094>   Dc.l do_littler_equal_byte                    ;doleb
0003519E <AmiBlitz3.ab3@28095>   Dc.l do_littler_equal_word                    ;doleb
000351A2 <AmiBlitz3.ab3@28096>   Dc.l do_littler_equal_long                    ;dolel
000351A6 <AmiBlitz3.ab3@28097>   Dc.l do_littler_equal_long                    ;dolel
000351AA <AmiBlitz3.ab3@28098>   Dc.l do_littler_equal_float                   ;dolef
000351AE <AmiBlitz3.ab3@28099>   Dc.l do_littler_equal_long                    ;dolel
000351B2 <AmiBlitz3.ab3@28100>   Dc.l do_littler_equal_string                  ;doles
000351B4 <AmiBlitz3.ab3@28101>   Dc.b $07,$D0                                  ;2000
000351B6 <AmiBlitz3.ab3@28104>   Dc.b $00,$3E                                  ;>
000351BA <AmiBlitz3.ab3@28105>   Dc.l do_greater_byte                          ;dogtb
000351BE <AmiBlitz3.ab3@28106>   Dc.l do_greater_word                          ;dogtw
000351C2 <AmiBlitz3.ab3@28107>   Dc.l do_greater_long                          ;dogtl
000351C6 <AmiBlitz3.ab3@28108>   Dc.l do_greater_long                          ;dogtl
000351CA <AmiBlitz3.ab3@28109>   Dc.l do_greater_float                         ;dogtf
000351CE <AmiBlitz3.ab3@28110>   Dc.l do_greater_long                          ;dogtl
000351D2 <AmiBlitz3.ab3@28111>   Dc.l do_greater_string                        ;dogts
000351D4 <AmiBlitz3.ab3@28112>   Dc.b $07,$D0                                  ;2000
000351D6 <AmiBlitz3.ab3@28115>   Dc.b $3E,$3D                                  ;>=
000351DA <AmiBlitz3.ab3@28116>   Dc.l do_greater_equal_byte                    ;dogeb
000351DE <AmiBlitz3.ab3@28117>   Dc.l do_greater_equal_word                    ;dogew
000351E2 <AmiBlitz3.ab3@28118>   Dc.l do_greater_equal_long                    ;dogel
000351E6 <AmiBlitz3.ab3@28119>   Dc.l do_greater_equal_long                    ;dogel
000351EA <AmiBlitz3.ab3@28120>   Dc.l do_greater_equal_float                   ;dogef
000351EE <AmiBlitz3.ab3@28121>   Dc.l do_greater_equal_long                    ;dogel
000351F2 <AmiBlitz3.ab3@28122>   Dc.l do_greater_equal_string                  ;doges
000351F4 <AmiBlitz3.ab3@28123>   Dc.b $07,$D0                                  ;2000
000351F6 <AmiBlitz3.ab3@28125>   Dc.b $80,$CD                                  ;$8000+26+tnum
000351FA <AmiBlitz3.ab3@28126>   Dc.l _BitTst
000351FE <AmiBlitz3.ab3@28127>   Dc.l _BitTst
00035202 <AmiBlitz3.ab3@28128>   Dc.l _BitTst
00035206 <AmiBlitz3.ab3@28129>   Dc.l _BitTst
00035212 <AmiBlitz3.ab3@28130>   Ds.l 3
00035214 <AmiBlitz3.ab3@28131>   Dc.b $1F,$40                                  ;8000
00035216 <AmiBlitz3.ab3@28133>   Dc.b $80,$CE                                  ;$8000+27+tnum
0003521A <AmiBlitz3.ab3@28134>   Dc.l _BitSet
0003521E <AmiBlitz3.ab3@28135>   Dc.l _BitSet
00035222 <AmiBlitz3.ab3@28136>   Dc.l _BitSet
00035226 <AmiBlitz3.ab3@28137>   Dc.l _BitSet
00035232 <AmiBlitz3.ab3@28138>   Ds.l 3
00035234 <AmiBlitz3.ab3@28139>   Dc.b $1F,$40                                  ;8000
00035236 <AmiBlitz3.ab3@28141>   Dc.b $80,$CF                                  ;$8000+28+tnum
0003523A <AmiBlitz3.ab3@28142>   Dc.l _BitClr
0003523E <AmiBlitz3.ab3@28143>   Dc.l _BitClr
00035242 <AmiBlitz3.ab3@28144>   Dc.l _BitClr
00035246 <AmiBlitz3.ab3@28145>   Dc.l _BitClr
00035252 <AmiBlitz3.ab3@28146>   Ds.l 3
00035254 <AmiBlitz3.ab3@28147>   Dc.b $1F,$40                                  ;8000
00035256 <AmiBlitz3.ab3@28149>   Dc.b $80,$D0                                  ;$8000+29+tnum
0003525A <AmiBlitz3.ab3@28150>   Dc.l _BitChg
0003525E <AmiBlitz3.ab3@28151>   Dc.l _BitChg
00035262 <AmiBlitz3.ab3@28152>   Dc.l _BitChg
00035266 <AmiBlitz3.ab3@28153>   Dc.l _BitChg
00035272 <AmiBlitz3.ab3@28154>   Ds.l 3
00035274 <AmiBlitz3.ab3@28155>   Dc.b $1F,$40                                  ;8000
00035276 <AmiBlitz3.ab3@28157>   Dc.b $00,$00
0003527A <AmiBlitz3.ab3@28162> modetable:   Dc.l typemode
0003527E <AmiBlitz3.ab3@28165> newtypebase: Dc.l newtype_byte
00035286 <AmiBlitz3.ab3@28168>   Dc.l newtype_word,$01                                    
00035288 <AmiBlitz3.ab3@28169>   Dc.w $0001
0003528C <AmiBlitz3.ab3@28170>   Dc.b 13,"b",0,0
00035294 <AmiBlitz3.ab3@28173>   Dc.l newtype_long,$02
00035296 <AmiBlitz3.ab3@28174>   Dc.w $0002
0003529A <AmiBlitz3.ab3@28175>   Dc.b 13,"w",0,0
000352A2 <AmiBlitz3.ab3@28178>   Dc.l newtype_quick,$03                                   
000352A4 <AmiBlitz3.ab3@28179>   Dc.w $0004
000352A8 <AmiBlitz3.ab3@28180>   Dc.b 13,"l",0,0
000352B0 <AmiBlitz3.ab3@28183>   Dc.l newtype_float,$04                                   
000352B2 <AmiBlitz3.ab3@28184>   Dc.w $0004
000352B6 <AmiBlitz3.ab3@28185>   Dc.b 13,"q",0,0
000352BE <AmiBlitz3.ab3@28189>   Dc.l newtype_double,$05                                  ;make problems on old residents
000352C0 <AmiBlitz3.ab3@28190>   Dc.w $0004
000352C4 <AmiBlitz3.ab3@28191>   Dc.b 13,"f",0,0
000352CC <AmiBlitz3.ab3@28194>   Dc.l newtype_double,$06
000352CE <AmiBlitz3.ab3@28195>   Dc.w $0004
000352D2 <AmiBlitz3.ab3@28196>   Dc.b 13,"a",0,0
000352DA <AmiBlitz3.ab3@28199>   Dc.l newtype_string,$05                                  ;?? has to by $06 becous is number 6 not 5
000352DC <AmiBlitz3.ab3@28200>   Dc.w $0008
000352E0 <AmiBlitz3.ab3@28201>   Dc.b 13,"d",0,0
000352E8 <AmiBlitz3.ab3@28205>   Dc.l $0000000,$07                                        ;stringtype
000352EA <AmiBlitz3.ab3@28206>   Dc.w $0004
000352EE <AmiBlitz3.ab3@28207>   Dc.b 13,"s",0,0
000352F6 <AmiBlitz3.ab3@28210>   Dc.l $00,$00
000352F8 <AmiBlitz3.ab3@28211>   Dc.w $0000
000352FC <AmiBlitz3.ab3@28212>   Dc.b $01,$00,$00,$00
0003535C <AmiBlitz3.ab3@28215> incdir:               Ds.l 24                              ;dcb.b   96,0    org source
0003535E <AmiBlitz3.ab3@28219> dirmode:              Ds.w 1                               ;shows if directmode is on
00035362 <AmiBlitz3.ab3@28221>                       Ds.l 1                               ;int org source ;intuition!
00035364 <AmiBlitz3.ab3@28222> maxobject_pos:        Ds.w 1                               ;maxat org source ;max at
00035368 <AmiBlitz3.ab3@28223> maxsat:               Ds.l 1                               ;data1 info pos
0003536A <AmiBlitz3.ab3@28224> number_of_objects:    Ds.w 1                               ;nummaxs org source ;number of maximums
0003536C <AmiBlitz3.ab3@28226> maxsused:             Ds.w 1                               ;maximums used in prog
0003536E <AmiBlitz3.ab3@28230> dark:                 Ds.w 1                               ;dark compile?
00035370 <AmiBlitz3.ab3@28231> qlab:                 Ds.w 1                               ;quick lab allocate
00035374 <AmiBlitz3.ab3@28232> defaulttype:          Dc.l newtype_quick                   ;dc.l quicktype org source
00035376 <AmiBlitz3.ab3@28237> anyerrs:              Dc.w -1                              ;Any Errors in compile ?
00035378 <AmiBlitz3.ab3@28238> debugversion:         Ds.w 1                               ;makeexec org source ;make an executable file!
0003537C <AmiBlitz3.ab3@28239> noinits:              Ds.l 1                               ;flag for if we have any init routines!
00035380 <AmiBlitz3.ab3@28241> letstart:             Ds.l 1
00035382 <AmiBlitz3.ab3@28242> dontwrite_nomemleft:  Ds.w 1                               ;nomemleft org source
00035402 <AmiBlitz3.ab3@28243> lastgloballabel:      Ds.l 32                              ;lastbiglab ds.b 128 org source
00035406 <AmiBlitz3.ab3@28245> locdatast:            Ds.l 1
0003540A <AmiBlitz3.ab3@28246> firstpend:            Ds.l 1
0003540E <AmiBlitz3.ab3@28250> data2at:              Ds.l 1
00035412 <AmiBlitz3.ab3@28251> data2:                Ds.l 1
00035416 <AmiBlitz3.ab3@28252> data1start:           Ds.l 1                               ;data1at org source
0003541A <AmiBlitz3.ab3@28253> data1:                Ds.l 1                               ;pc for initialized data!
0003541E <AmiBlitz3.ab3@28254> destbufferstart:      Ds.l 1                               ;pcat org source
00035422 <AmiBlitz3.ab3@28258> destbufferend:        Ds.l 1                               ;libat org source
00035426 <AmiBlitz3.ab3@28259> libend:               Ds.l 1                               ;lib org source
0003542A <AmiBlitz3.ab3@28260> allat:                Ds.l 1                               ;highest allocmemd location for code
00035434 <AmiBlitz3.ab3@28261> dummyasm:             Dc.w 0,0,0,0,0
00035438 <AmiBlitz3.ab3@28262>                       Dc.l 0
0003543A <AmiBlitz3.ab3@28263>                       Dc.w 0
0003543E <AmiBlitz3.ab3@28267> buff1:                Ds.l 1                               ;buffer for text get
00035442 <AmiBlitz3.ab3@28268> buff2:                Ds.l 1                               ;ditto for dest
00035444 <AmiBlitz3.ab3@28269> constmode:            Ds.w 1                               ;0 for norm, <>0 for assembler
00035446 <AmiBlitz3.ab3@28270> asmtype:              Ds.w 1                               ;0=contains no prog reference
00035448 <AmiBlitz3.ab3@28271> extraword:            Ds.w 1                               ;the extension word for assembler
0003544A <AmiBlitz3.ab3@28272> extraword2:           Ds.w 1                               ;ditto
0003544C <AmiBlitz3.ab3@28273> asmsize:              Ds.w 1
00035450 <AmiBlitz3.ab3@28274> asmbuff:              Ds.l 1
00035452 <AmiBlitz3.ab3@28275> asmlen:               Ds.w 1                               ;first (src) text len
00035454 <AmiBlitz3.ab3@28276> asmlen2:              Ds.w 1                               ;second (dest)
00035458 <AmiBlitz3.ab3@28277> templabel:            Ds.l 1                               ;linked list of expressions to resolve
0003545A <AmiBlitz3.ab3@28280> macnum:               Ds.w 1
0003545E <AmiBlitz3.ab3@28282>                       Dc.l 0                               ;address of next 0 in include fil
00035462 <AmiBlitz3.ab3@28283> titleat:              Ds.l 1                               ;5 longs for compile streaks
0003546C <AmiBlitz3.ab3@28284> progress_per_line:    Ds.w 5                               ;titleadd ds 5 org source ;5 adds for compile streaks
0003546E <AmiBlitz3.ab3@28285> connest:              Ds.w 1                               ;conditional nest level
00035472 <AmiBlitz3.ab3@28286> firstconst:           Ds.l 1                               ;first constant (#a)
00035474 <AmiBlitz3.ab3@28287> numarg:               Ds.w 1                               ;number of macro arguements
00035478 <AmiBlitz3.ab3@28288> myoline:              Ds.l 1                               ;macro done yet?
0003547C <AmiBlitz3.ab3@28289> myline:               Ds.l 1                               ;pointer to some memory to create
00035480 <AmiBlitz3.ab3@28292>                       Ds.l 1
000354C0 <AmiBlitz3.ab3@28293> concomstack:          Ds.l 16                              ;32 deep conditional compilation
000354C4 <AmiBlitz3.ab3@28294> concomsp:             Dc.l concomstack                     ;stack pointer
000354C6 <AmiBlitz3.ab3@28295> oldqflag:             Ds.w 1
000354CA <AmiBlitz3.ab3@28298>                       Ds.l 1
000354CC <AmiBlitz3.ab3@28300>                       Ds.w 1
000354D0 <AmiBlitz3.ab3@28301> firstfor:             Ds.l 1                               ;first for
000354D2 <AmiBlitz3.ab3@28302> stackpar:             Ds.w 1                               ;pushflag org source ;1 par to stack 0 normal
000354D4 <AmiBlitz3.ab3@28303> sbgot:                Ds.w 1                               ;flag for string got 2
000354D6 <AmiBlitz3.ab3@28304> convsize:             Ds.w 1                               ;usertype org source
000354D8 <AmiBlitz3.ab3@28305> userp:                Ds.w 1
000354DC <AmiBlitz3.ab3@28310> ptr_userlibs_list:    Ds.l 1                               ;libslist org source
000354DE <AmiBlitz3.ab3@28311> a2offset:             Ds.w 1                               ;stackuse org source ;stack used when gathering lib parameters
000354E0 <AmiBlitz3.ab3@28312> numreps:              Ds.w 1                               ;number of repeats in a repeatable
000354E4 <AmiBlitz3.ab3@28314> locloc:               Ds.l 1
000354E6 <AmiBlitz3.ab3@28315> locchar:              Ds.w 1
00035566 <AmiBlitz3.ab3@28316> stbuff:               Ds.l 32                              ;was 8    ;six string varoffs
00035568 <AmiBlitz3.ab3@28317> commode:              Ds.w 1                               ;in comma mode...
0003556C <AmiBlitz3.ab3@28318> lastoffset_org:       Ds.l 1                               ;lastoffset org source ;last offset in calcvar!
00035570 <AmiBlitz3.ab3@28319> linenumat:            Dc.l $FFFFFFFF                       ;linecounter ;dc -1 org source ;line being processed
00035574 <AmiBlitz3.ab3@28320> compilelinecounter:   Dc.l $FFFFFFFF                       ;menuret dc -1 org source ;menu return code
00035576 <AmiBlitz3.ab3@28322>                       Ds.w 1                               ;opt reset offset
00035676 <AmiBlitz3.ab3@28324>                       Ds.l 64                              ;Ds.b vcodelen org source ;code used to generate
00035776 <AmiBlitz3.ab3@28326>                       Ds.l 64                              ;Ds.b vcodelen org source ;above for let.....
00035778 <AmiBlitz3.ab3@28327> varcodelen:           Ds.w 1                               ;and length
0003577A <AmiBlitz3.ab3@28329>                       Ds.w 1
00035780 <AmiBlitz3.ab3@28330> oldvcodelen:          Ds.w 3                               ;old varcodelen
00035784 <AmiBlitz3.ab3@28334> tempvm:               Ds.l 1                               ;memlib org source ;address of memory library
00035786 <AmiBlitz3.ab3@28335> memlibstat:           Ds.w 1                               ;status of memory library during
00035788 <AmiBlitz3.ab3@28338>                       Dc.w 0
0003578A <AmiBlitz3.ab3@28340>                       Dc.w 0
0003578C <AmiBlitz3.ab3@28342> varmode:              Ds.w 1                               ;0 a5 pointer to global
00035790 <AmiBlitz3.ab3@28344> currentfunction:      Ds.l 1                               ;thisproc org source
00035794 <AmiBlitz3.ab3@28345> firstproc:            Ds.l 1                               ;firstproc org source ;this procedure being 'done'
00035796 <AmiBlitz3.ab3@28346> 
00035798 <AmiBlitz3.ab3@28348> skipcode:             Ds.w 1                               ;nocompile ;comflag org source ;0 if no compile
0003579C <AmiBlitz3.ab3@28349> passstack:            Ds.l 1
000357A0 <AmiBlitz3.ab3@28350> zero:                 Ds.l 1                               ;ZERO!
000357A2 <AmiBlitz3.ab3@28351> ininclude:            Ds.w 1                               ;numincs org source ;number of include files
000357A6 <AmiBlitz3.ab3@28353> xinclude_base:        Ds.l 1                               ;firstxinc org source ;first exclusive include.
000357AA <AmiBlitz3.ab3@28354> constantbase:         Ds.l 1                               ;firstinc org source ;first include
000357AC <AmiBlitz3.ab3@28355> lasta6:               Dc.w $FFFF                           ;-1 org source
000357AE <AmiBlitz3.ab3@28356> instringon:           Ds.w 1                               ;quoteflag org source
000357B2 <AmiBlitz3.ab3@28357> ptr_macrobuffer_begin:Ds.l 1                               ;macrobuff org source ;pointer to macro collection buffer ;begin
000357B6 <AmiBlitz3.ab3@28358> ptr_macrobuffer_end:  Ds.l 1                               ;macrobufff org source ;end of above ;end of
000357BA <AmiBlitz3.ab3@28359> macrobase:            Ds.l 1                               ;firstmacro org source ;linked list of macro's ;macrolist
000357BE <AmiBlitz3.ab3@28360> endop:                Ds.l 1                               ;end of program pc - before finishups!
000357C2 <AmiBlitz3.ab3@28361> labelbase:            Ds.l 1                               ;firstlabel org source ;first lib struct
000357C6 <AmiBlitz3.ab3@28362> end_of_tokenlist:     Ds.l 1                               ;lasttoken org source
000357C8 <AmiBlitz3.ab3@28363> numstatic:            Ds.w 1                               ;number of static structs
000357CC <AmiBlitz3.ab3@28364> staticdata:           Ds.l 1                               ;data1 val for statics
000357D0 <AmiBlitz3.ab3@28365> libpointer:           Ds.l 1                               ;firstlib org source ;first lib struct
000357D2 <AmiBlitz3.ab3@28366> sbasegot:             Ds.w 1                               ;string base got?
000357D6 <AmiBlitz3.ab3@28367> litdata1:             Ds.l 1
000357DA <AmiBlitz3.ab3@28371> objlen:               Ds.l 1
000357DE <AmiBlitz3.ab3@28372> hunkoffsetcounter:    Ds.l 1                               ;numoffs org source
000357E2 <AmiBlitz3.ab3@28373> hunkoffsetbase:       Ds.l 1                               ;firstoff org source ;pointer to linked list
000357E4 <AmiBlitz3.ab3@28375> flagmask:             Ds.w 1                               ;mask for flag of variable when
000357E6 <AmiBlitz3.ab3@28377> notshared:            Ds.w 1                               ;added org source ;flag for seeing if variable was added!
000357E8 <AmiBlitz3.ab3@28378> nonew:                Ds.w 1                               ;1 to inhibit new variable creation
000357EC <AmiBlitz3.ab3@28379> temp1:                Ds.l 1
000357F0 <AmiBlitz3.ab3@28380> temp2:                Ds.l 1
000357F4 <AmiBlitz3.ab3@28382> ptr_parameterstore:   Ds.l 1                               ;namebuff ds.b 128 org source
000357F8 <AmiBlitz3.ab3@28383> fib_DirEntryType:     Ds.l 1                               ;namebuff+4 org source
0003586C <AmiBlitz3.ab3@28384> fib_FileName:         Ds.l 29                              ;namebuff+8 org source
00035870 <AmiBlitz3.ab3@28385> fib_Size:             Ds.l 1                               ;namebuff+124 org source
000358F0 <AmiBlitz3.ab3@28387> namebuff2:            Ds.b 128
000358F8 <AmiBlitz3.ab3@28388>                       Ds.b 8                               ;for fileinfoblock
00035938 <AmiBlitz3.ab3@28391> optstuff:             Ds.b 64                              ;temp opt make buffer
0003593A <AmiBlitz3.ab3@28408>   Dc.b $00,$01                                             ; 1 byte schreiben ;one byte stuff...
0003593E <AmiBlitz3.ab3@28409>   Dc.l xtra_versionnumber                                  ; vers org source
00035942 <AmiBlitz3.ab3@28410>   Dc.l create_iconfile                                     ; create icon for executable
00035946 <AmiBlitz3.ab3@28411>   Ds.l 1
00035948 <AmiBlitz3.ab3@28413>   Dc.b $00,$02                                             ; 2 bytes schreiben  ;two byte stuff...
0003594C <AmiBlitz3.ab3@28416>   Dc.l set_use_debugger
00035950 <AmiBlitz3.ab3@28417>   Dc.l AL_0_11010                                          ;+obsolet: debugger
00035954 <AmiBlitz3.ab3@28418>   Dc.l AL_0_1103C                                          ;+obsolet: long arrays
00035958 <AmiBlitz3.ab3@28419>   Dc.l AL_0_11068                                          ;+obsolet: expand macros
0003595C <AmiBlitz3.ab3@28420>   Dc.l AL_0_11094                                          ;+obsolet: quoted macros
00035960 <AmiBlitz3.ab3@28421>   Dc.l set_make_smallestcode
00035964 <AmiBlitz3.ab3@28422>   Dc.l set_link_debuginfo
00035968 <AmiBlitz3.ab3@28423>   Dc.l set_autorun
0003596C <AmiBlitz3.ab3@28424>   Dc.l set_interruptcheck
00035970 <AmiBlitz3.ab3@28425>   Dc.l set_assemblercheck
00035974 <AmiBlitz3.ab3@28427>   Dc.l set_overflowcheck
00035978 <AmiBlitz3.ab3@28428>   Dc.l default_obsolete                                    ;+obsolet: ohne inhalt
0003597C <AmiBlitz3.ab3@28429>   Dc.l default_interruptcheck                              ;+obsolet: interruptcheck vorgabe
00035980 <AmiBlitz3.ab3@28430>   Dc.l default_overflowcheck                               ;+obsolet: overflow vorgabe
00035984 <AmiBlitz3.ab3@28433>   Ds.l 1
00035986 <AmiBlitz3.ab3@28435>   Dc.b $00,$04                                             ; 4 bytes schreiben..  ;four byte stuff...
0003598A <AmiBlitz3.ab3@28442>   Dc.l objectbuffer
0003598E <AmiBlitz3.ab3@28443>   Dc.l libsbuffer
00035992 <AmiBlitz3.ab3@28444>   Dc.l systembuffer
00035996 <AmiBlitz3.ab3@28445>   Dc.l databuffer
0003599A <AmiBlitz3.ab3@28446>   Dc.l macrobuffer_size
0003599E <AmiBlitz3.ab3@28447>   Dc.l stringbuffer
000359A2 <AmiBlitz3.ab3@28450>   Ds.l 1
000359A4 <AmiBlitz3.ab3@28454>   Dc.b $02,$20                                             ;dc 68*8; 544 bytes schreiben.
000359AC <AmiBlitz3.ab3@28455>   Dc.l residents_table,0
000359AE <AmiBlitz3.ab3@28459>   Dc.b $01,$80                                             ;dc 192*2; 384 bytes schreiben
000359B6 <AmiBlitz3.ab3@28460>   Dc.l exepath,0                                           ; exepath und exefilename jeweils 192 bytes
000359B8 <AmiBlitz3.ab3@28461>   Ds.w 1
00035AB4 <AmiBlitz3.ab3@28465>   Ds.l 63
00035BB0 <AmiBlitz3.ab3@28466>   Ds.l 63
00035CAC <AmiBlitz3.ab3@28467>   Ds.l 63
00035D8E <AmiBlitz3.ab3@28468>   Ds.w 113
00035D90 <AmiBlitz3.ab3@28471> comsettings_message:  Ds.w 1                               ;allchg org source
00035D92 <AmiBlitz3.ab3@28472> xtra_versionnumber:   Ds.w 1                               ;vers org source
00035D98 <AmiBlitz3.ab3@28476>   CLR.b exefilename
00035D9A <AmiBlitz3.ab3@28477>   TST.l d0
00035D9E <AmiBlitz3.ab3@28478>   BNE 'l10
00035DA0 <AmiBlitz3.ab3@28479>  RTS
00035DA6 <AmiBlitz3.ab3@28482>   JSR free_residents                                       ;jsr freeres2 org source
00035DAC <AmiBlitz3.ab3@28483> 
00035DB2 <AmiBlitz3.ab3@28484>   LEA ptr_xtradata,A2
00035DB4 <AmiBlitz3.ab3@28485>   MOVEQ.l #$00,D4
00035DB6 <AmiBlitz3.ab3@28488>     MOVE.w (A2)+,D4                                        ; anzahl bytes zum lesen
00035DBA <AmiBlitz3.ab3@28489>     BEQ.b 'done
00035DBC <AmiBlitz3.ab3@28492>     MOVE.l (A2)+,D2
00035DC0 <AmiBlitz3.ab3@28493>   BEQ.b 'loop
00035DC2 <AmiBlitz3.ab3@28495>   MOVE.l D4,D3
00035DC4 <AmiBlitz3.ab3@28496>   MOVE.l D7,D1
00035DC8 <AmiBlitz3.ab3@28497>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
00035DCA <AmiBlitz3.ab3@28498>   TST.l D0
00035DCE <AmiBlitz3.ab3@28499>   BNE.b 'loop2
00035DD2 <AmiBlitz3.ab3@28500>  BRA.w 'done2
00035DD8 <AmiBlitz3.ab3@28503>   TST.b xtra_versionnumber
00035DDC <AmiBlitz3.ab3@28504>    BNE.b 'nover0
00035DE4 <AmiBlitz3.ab3@28505>   MOVE.w #$0080,set_autorun                                ;auto run on
00035DEE <AmiBlitz3.ab3@28506>   MOVE.w default_interruptcheck,set_interruptcheck         ;interupt checking on
00035DF4 <AmiBlitz3.ab3@28507>   CLR.w set_assemblercheck                                 ;assembler checking off
00035DFE <AmiBlitz3.ab3@28508>   MOVE.w default_overflowcheck,set_overflowcheck           ;overflow chex
00035E02 <AmiBlitz3.ab3@28509>  BRA.b 'ver0
00035E04 <AmiBlitz3.ab3@28512>   MOVE.l D7,D1                                             ;load cli arg!
00035E0A <AmiBlitz3.ab3@28513>   MOVE.l #str_cliarguments,D2
00035E10 <AmiBlitz3.ab3@28514>   MOVE.l #116,D3                                           ; vorher 128 , jetzt 8 weniger fuer die Versionsdaten
00035E14 <AmiBlitz3.ab3@28515>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
00035E1A <AmiBlitz3.ab3@28516>   MOVE.l #str_cliarguments,A0
00035E20 <AmiBlitz3.ab3@28517>   ADDA.l #115,A0
00035E26 <AmiBlitz3.ab3@28518>   MOVE.l #0,(a0) ; terminate it!
00035E28 <AmiBlitz3.ab3@28520>   MOVE.l D7,D1                                             ; I know, I know. Honitos started this horrible thing, see below...
00035E2E <AmiBlitz3.ab3@28521>   MOVE.l #stacksize,D2
00035E34 <AmiBlitz3.ab3@28522>   MOVE.l #4,D3
00035E38 <AmiBlitz3.ab3@28523>   JSR _Read(A6)
00035E42 <AmiBlitz3.ab3@28524>   CMP.l ##MIN_STACKSIZE,stacksize
00035E46 <AmiBlitz3.ab3@28525>   BGE 'stackok
00035E50 <AmiBlitz3.ab3@28526>   MOVE.l ##MIN_STACKSIZE,stacksize
00035E52 <AmiBlitz3.ab3@28529>   MOVE.l D7,D1
00035E58 <AmiBlitz3.ab3@28530>   MOVE.l #versioninformation,D2
00035E5E <AmiBlitz3.ab3@28531>   MOVE.l #4,D3
00035E62 <AmiBlitz3.ab3@28532>   JSR _Read(A6)
00035E64 <AmiBlitz3.ab3@28534>   MOVE.l D7,D1
00035E6A <AmiBlitz3.ab3@28535>   MOVE.l #number_of_builds,D2
00035E70 <AmiBlitz3.ab3@28536>   MOVE.l #4,D3
00035E74 <AmiBlitz3.ab3@28537>   JSR _Read(A6)
00035E7A <AmiBlitz3.ab3@28543> 
00035E80 <AmiBlitz3.ab3@28544>   MOVE.l A7,errstack
00035E8A <AmiBlitz3.ab3@28545>   MOVE.l #'done2,errcont
00035E92 <AmiBlitz3.ab3@28546>   MOVE.w #$FFFF,ezerr
00035E98 <AmiBlitz3.ab3@28549>     MOVE.l #temp1,D2                                   ;LOAD maxobjectsvalues
00035E9A <AmiBlitz3.ab3@28550>     MOVEQ.l #$04,D3
00035E9C <AmiBlitz3.ab3@28551>     MOVE.l D7,D1
00035EA0 <AmiBlitz3.ab3@28552>     JSR _Read(A6)
00035EA2 <AmiBlitz3.ab3@28553>     TST.l D0
00035EA6 <AmiBlitz3.ab3@28554>     BEQ.b 'done2
00035EAC <AmiBlitz3.ab3@28555>     MOVE.w temp1,D1
00035EAE <AmiBlitz3.ab3@28556>     TST.w d1                                               ;new
00035EB2 <AmiBlitz3.ab3@28557>     BEQ 'done2                                         ;new
00035EB8 <AmiBlitz3.ab3@28558>      JSR findlibnoerr
00035EBE <AmiBlitz3.ab3@28560>     CMP.l #0,a1
00035EC2 <AmiBlitz3.ab3@28561>     BEQ 'dloop
00035EC6 <AmiBlitz3.ab3@28562>     MOVE.l $12(A1),D0
00035ECE <AmiBlitz3.ab3@28563>     MOVE.w temp1+2,-$4(A1,D0.L)
00035ED2 <AmiBlitz3.ab3@28564>  BRA.b 'dloop
00035ED6 <AmiBlitz3.ab3@28570>   LEA residents_table(PC),A0
00035ED8 <AmiBlitz3.ab3@28571>   MOVEQ.l #$07,D0
00035EDC <AmiBlitz3.ab3@28574>     CLR.l $40(A0)
00035EE0 <AmiBlitz3.ab3@28575>     LEA ResidentEntryStep(A0),A0   ; $44
00035EE4 <AmiBlitz3.ab3@28576>   DBF D0,'loop3
00035EE8 <AmiBlitz3.ab3@28578>   MOVEM.l D7/A6,-(A7)
00035EEE <AmiBlitz3.ab3@28579>   JSR init_buffers
00035EF4 <AmiBlitz3.ab3@28580>   JSR reloadresident
00035EF8 <AmiBlitz3.ab3@28581>   MOVEM.l (A7)+,D7/A6
00035EFA <AmiBlitz3.ab3@28582> RTS
00035F02 <AmiBlitz3.ab3@28586>   MOVE.b #$1,xtra_versionnumber                            ;.xtra version number...
00035F08 <AmiBlitz3.ab3@28595>   LEA ptr_xtradata,A2
00035F0A <AmiBlitz3.ab3@28596>   MOVEQ.l #$00,D4
00035F0C <AmiBlitz3.ab3@28600>   MOVE.w (A2)+,D4                                          ; anzahl bytes zu schreiben
00035F10 <AmiBlitz3.ab3@28601>   BEQ.b 'done
00035F12 <AmiBlitz3.ab3@28604>    MOVE.l (A2)+,D2
00035F16 <AmiBlitz3.ab3@28605>    BEQ.b 'loop
00035F18 <AmiBlitz3.ab3@28607>    MOVE.l D4,D3
00035F1A <AmiBlitz3.ab3@28608>    MOVE.l D7,D1                                            ; schreiben der daten in ptr_xtradata
00035F1E <AmiBlitz3.ab3@28609>    JSR _Write(A6)                                          ; d1: file, d2: buffer, d3:length
00035F22 <AmiBlitz3.ab3@28610>  BRA.b 'loop2
00035F24 <AmiBlitz3.ab3@28613>   MOVE.l D7,D1
00035F2A <AmiBlitz3.ab3@28614>   MOVE.l #str_cliarguments,D2
00035F30 <AmiBlitz3.ab3@28615>   MOVE.l #116,D3
00035F34 <AmiBlitz3.ab3@28616>   JSR _Write(A6)                                           ; hier werden 116 bytes an cli_arguments geschrieben !!
00035F36 <AmiBlitz3.ab3@28618>   MOVE.l D7,D1
00035F3C <AmiBlitz3.ab3@28619>   MOVE.l #stacksize,D2
00035F42 <AmiBlitz3.ab3@28620>   MOVE.l #4,D3
00035F46 <AmiBlitz3.ab3@28621>   JSR _Write(A6)
00035F48 <AmiBlitz3.ab3@28623>   MOVE.l D7,D1
00035F4E <AmiBlitz3.ab3@28624>   MOVE.l #versioninformation,D2
00035F54 <AmiBlitz3.ab3@28625>   MOVE.l #4,D3
00035F58 <AmiBlitz3.ab3@28626>   JSR _Write(A6)
00035F5A <AmiBlitz3.ab3@28628>   MOVE.l D7,D1
00035F60 <AmiBlitz3.ab3@28629>   MOVE.l #number_of_builds,D2
00035F66 <AmiBlitz3.ab3@28630>   MOVE.l #4,D3
00035F6A <AmiBlitz3.ab3@28631>   JSR _Write(A6)
00035F70 <AmiBlitz3.ab3@28637>   LEA libpointer,A2
00035F72 <AmiBlitz3.ab3@28640>     MOVE.l (A2),D0
00035F76 <AmiBlitz3.ab3@28641>     BEQ.w 'done2
00035F78 <AmiBlitz3.ab3@28642>     MOVEA.l D0,A2
00035F7C <AmiBlitz3.ab3@28643>     MOVE.l $12(A2),D4
00035F80 <AmiBlitz3.ab3@28644>     TST.w -$2(A2,D4.L)
00035F84 <AmiBlitz3.ab3@28645>     BEQ.w 'loop3
00035F88 <AmiBlitz3.ab3@28647>     LEA $4(A2),A0
00035F8A <AmiBlitz3.ab3@28648>     MOVE.l A0,D2
00035F8C <AmiBlitz3.ab3@28649>     MOVEQ.l #$02,D3
00035F8E <AmiBlitz3.ab3@28650>     MOVE.l D7,D1                                           ; schreiben der Libnum mit 2 bytes
00035F92 <AmiBlitz3.ab3@28651>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
00035F96 <AmiBlitz3.ab3@28653>     LEA -$4(A2,D4.L),A0
00035F98 <AmiBlitz3.ab3@28654>     MOVE.l A0,D2
00035F9A <AmiBlitz3.ab3@28655>     MOVEQ.l #$02,D3
00035F9C <AmiBlitz3.ab3@28656>     MOVE.l D7,D1                                           ; schreiben der Max Objects mit 2 bytes
00035FA0 <AmiBlitz3.ab3@28657>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
00035FA4 <AmiBlitz3.ab3@28658>  BRA.w 'loop3
00035FAA <AmiBlitz3.ab3@28663>   LEA XTRAEndPadBytes,A2 ; get the start address off the 4 fill/pad/termination bytes
00035FAC <AmiBlitz3.ab3@28664>   MOVE.l A2,D2           ; move the address to d2
00035FB2 <AmiBlitz3.ab3@28665>   MOVE.l #4,D3           ; we only need 4 bytes to save
00035FB4 <AmiBlitz3.ab3@28666>   MOVE.l D7,D1           ; we set the file handle
00035FB8 <AmiBlitz3.ab3@28667>   JSR _Write(A6)         ; and we write it.
00035FBA <AmiBlitz3.ab3@28669> RTS
00035FC0 <AmiBlitz3.ab3@28674>   LEA optssave,A0                      ; backup address
00035FC6 <AmiBlitz3.ab3@28675>   LEA ptr_xtradata,A1                  ; source address
00035FC8 <AmiBlitz3.ab3@28678>   MOVE.w (A1)+,D0                                          ;length of data move
00035FCC <AmiBlitz3.ab3@28679>   BEQ.b 'backupdone
00035FCE <AmiBlitz3.ab3@28680>   SUBQ.w #1,D0
00035FD0 <AmiBlitz3.ab3@28683>     MOVE.l (A1)+,D1
00035FD4 <AmiBlitz3.ab3@28684>     BEQ.b 'backuploop
00035FD6 <AmiBlitz3.ab3@28685>     MOVEA.l D1,A2
00035FD8 <AmiBlitz3.ab3@28686>     MOVE.w D0,D1
00035FDA <AmiBlitz3.ab3@28689>       MOVE.b (A2)+,(A0)+
00035FDE <AmiBlitz3.ab3@28690>   DBF D1,'backuploop3
00035FE2 <AmiBlitz3.ab3@28692>  BRA.w 'backuploop2
00035FE8 <AmiBlitz3.ab3@28696>   LEA bufferlist,A1
00035FEA <AmiBlitz3.ab3@28699>     MOVE.l (A1)+,D2
00035FEE <AmiBlitz3.ab3@28700>     BEQ.b 'loop4done
00035FF0 <AmiBlitz3.ab3@28702>     MOVEA.l D2,A0
00035FF2 <AmiBlitz3.ab3@28703>     MOVE.l (A0),D2
00035FF4 <AmiBlitz3.ab3@28704>     ADDQ.w #8,A0
00035FFA <AmiBlitz3.ab3@28705>     JSR makelong
00035FFE <AmiBlitz3.ab3@28706>  BRA.b 'loop4
00036004 <AmiBlitz3.ab3@28709>   CLR.w state_of_residents                                 ;resident change
0003600A <AmiBlitz3.ab3@28710>   CLR.w comsettings_message                                ;alloc change
00036010 <AmiBlitz3.ab3@28711>   CLR.w maxobject_pos
00036012 <AmiBlitz3.ab3@28712> RTS   ; new tomsmart1
00036018 <AmiBlitz3.ab3@28716>   LEA optssave,A0
0003601E <AmiBlitz3.ab3@28717>   LEA ptr_xtradata,A1
00036020 <AmiBlitz3.ab3@28720>   MOVE.w (A1)+,D0
00036024 <AmiBlitz3.ab3@28721>   BEQ.b 'restoredone
00036026 <AmiBlitz3.ab3@28722>   SUBQ.w #1,D0
00036028 <AmiBlitz3.ab3@28725>     MOVE.l (A1)+,D1
0003602C <AmiBlitz3.ab3@28726>     BEQ.b 'restoreloop1
0003602E <AmiBlitz3.ab3@28727>     MOVEA.l D1,A2
00036030 <AmiBlitz3.ab3@28728>     MOVE.w D0,D1
00036032 <AmiBlitz3.ab3@28731>       MOVE.b (A0)+,(A2)+
00036036 <AmiBlitz3.ab3@28732>   DBF D1,'restoreloop3
0003603A <AmiBlitz3.ab3@28734>  BRA.b 'restoreloop2
0003603C <AmiBlitz3.ab3@28737> RTS
00036042 <AmiBlitz3.ab3@28741>   JSR free_residents                    ; first free the allready loaded residents
00036048 <AmiBlitz3.ab3@28742>   JSR Clear_Residents_table             ; second clear the complete resident table
0003604A <AmiBlitz3.ab3@28743> RTS
00036052 <AmiBlitz3.ab3@28747>   MOVE.w #$FFFF,state_of_residents
00036058 <AmiBlitz3.ab3@28748>   MOVE.w state_of_residents,D0
0003605E <AmiBlitz3.ab3@28749>   JSR reloadresident
00036060 <AmiBlitz3.ab3@28750> RTS
00036062 <AmiBlitz3.ab3@28756>   MOVE.l d0,a1
00036068 <AmiBlitz3.ab3@28758>   MOVEA.l libpointer,A2
0003606C <AmiBlitz3.ab3@28761>     MOVE.l $12(A2),D0
00036070 <AmiBlitz3.ab3@28762>     TST.w -$2(A2,D0.L)
00036074 <AmiBlitz3.ab3@28763>      BEQ.w 'next
00036076 <AmiBlitz3.ab3@28764>     SUBQ.w #1,D1
0003607A <AmiBlitz3.ab3@28765>      BPL.w 'next
0003607E <AmiBlitz3.ab3@28767>     MOVEA.l -$1A(A2,D0.L),A3    ;token offset
00036080 <AmiBlitz3.ab3@28768>     ADDA.l A2,A3
00036082 <AmiBlitz3.ab3@28771>       MOVE.b (A3)+,(A1)+
00036086 <AmiBlitz3.ab3@28772>     BNE.w 'tt1
00036088 <AmiBlitz3.ab3@28774>     CLR.b -(A1)
0003608C <AmiBlitz3.ab3@28776>     MOVE.w -$4(A2,D0.L),D0
00036092 <AmiBlitz3.ab3@28778>     AND.l #$ffff,d0
00036094 <AmiBlitz3.ab3@28779>  RTS
00036096 <AmiBlitz3.ab3@28783>     MOVEA.l (A2),A2
0003609A <AmiBlitz3.ab3@28784> BRA.w 'loop
000360AA <AmiBlitz3.ab3@28789> str_maxobjects_name:   Dc.b "              ",0 : Even
000360BA <AmiBlitz3.ab3@28790> str_maxobjects_name2:  Dc.b "              ",0 : Even
000360BE <AmiBlitz3.ab3@28791> objectbuffer:          Dc.l #DEFAULT_OBJECTBUFFERSIZE  ; replaced with a constant tomsmart1
000360C2 <AmiBlitz3.ab3@28792>                        Dc.l $00000000
000360CE <AmiBlitz3.ab3@28793> str_objectbuffer:      Dc.b "16384",0,0,0,0,0,0,0      ; string max 12 columns
000360D2 <AmiBlitz3.ab3@28795> libsbuffer:            Dc.l #DEFAULT_LIBSBUFFERSIZE    ; replaced with a constant tomsmart1
000360D6 <AmiBlitz3.ab3@28796>                        Dc.l $00000000
000360E2 <AmiBlitz3.ab3@28797> str_libsbuffer:        Dc.b "32768",0,0,0,0,0,0,0      ;was "16384"; string max 12 columns
000360E6 <AmiBlitz3.ab3@28799> systembuffer:          Dc.l #DEFAULT_SYSTEMBUFFERSIZE  ; system buffer  ; replaced with a constant tomsmart1
000360EA <AmiBlitz3.ab3@28800>                        Dc.l $00000000
000360F6 <AmiBlitz3.ab3@28801> str_systembuffer:      Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
000360FA <AmiBlitz3.ab3@28803> databuffer:            Dc.l #DEFAULT_DATABUFFERSIZE    ; data buffer   ; replaced with a constant tomsmart1
000360FE <AmiBlitz3.ab3@28804>                        Dc.l $00000000
0003610A <AmiBlitz3.ab3@28805> str_databuffer:        Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
0003610E <AmiBlitz3.ab3@28807> macrobuffer_size:      Dc.l #DEFAULT_MACROBUFFERSIZE   ; macro buffer ; was $00002000 ; replaced with a constant tomsmart1
00036112 <AmiBlitz3.ab3@28808>                        Dc.l $00000000
0003611E <AmiBlitz3.ab3@28809> str_macrobuffer:       Dc.b "40000",0,0,0,0,0,0,0      ; string max 12 columns
00036122 <AmiBlitz3.ab3@28811> stringbuffer:          Dc.l #DEFAULT_STRINGBUFFERSIZE  ; string buffer ; replaced with a constant tomsmart1
00036126 <AmiBlitz3.ab3@28812>                        Dc.l $00000000
00036132 <AmiBlitz3.ab3@28813> str_stringbuffer:      Dc.b "10240",0,0,0,0,0,0,0      ; string max 12 columns
00036134 <AmiBlitz3.ab3@28815> maxobjects_value:      Dc.w $0064
00036138 <AmiBlitz3.ab3@28816>                        Dc.l $00000000
00036144 <AmiBlitz3.ab3@28817> str_maxobjects_value:  Dc.b "100",0,0,0,0,0,0,0,0,0    ; string max 12 columns
00036146 <AmiBlitz3.ab3@28819> maxobjects_value2:     Dc.w $0014
00036148 <AmiBlitz3.ab3@28820>                        Dc.w $0000
00036154 <AmiBlitz3.ab3@28822> str_maxobjects_value2: Dc.b "20",0,0,0,0,0,0,0,0,0,0   ; string max 12 columns
00036155 <AmiBlitz3.ab3@28826> set_create_iconfile:   Dc.b $00
00036158 <AmiBlitz3.ab3@28827> create_iconfile:       Dc.b $80,$01,$01                    ;create icon
0003615A <AmiBlitz3.ab3@28828>                        Dc.b $00,$01
0003615B <AmiBlitz3.ab3@28830> set_use_debugger:      Dc.b $00                            ; Flags.w
0003615E <AmiBlitz3.ab3@28831> use_debugger:          Dc.b $80,$01,$01                    ; Activation.w
00036160 <AmiBlitz3.ab3@28832>                        Dc.b $00,$01                        ; GadgetType.w
00036164 <AmiBlitz3.ab3@28833> AL_0_11010:            Dc.b $00,$80,$01,$01                ; flags, activation
00036168 <AmiBlitz3.ab3@28834> AL_0_1103C:            Dc.b $00,$80,$01,$01                ; flags, activation
0003616C <AmiBlitz3.ab3@28835> AL_0_11068:            Dc.b $00,$80,$01,$01                ; flags, activation
0003616E <AmiBlitz3.ab3@28836> AL_0_11094:            Ds.w 1
0003616F <AmiBlitz3.ab3@28838> set_make_smallestcode: Ds.b 1
00036172 <AmiBlitz3.ab3@28839> make_smallestcode:     Dc.b $00,$01,$01                    ;make smallest
00036174 <AmiBlitz3.ab3@28840>                        Dc.b $00,$01
00036175 <AmiBlitz3.ab3@28841> set_link_debuginfo:    Ds.b 1
00036178 <AmiBlitz3.ab3@28842> link_debuginfo:        Dc.b $00,$01,$01                    ;create debuginfo
0003617A <AmiBlitz3.ab3@28843>                        Dc.b $00,$01
0003639A <AmiBlitz3.ab3@28848>   Ds.l 136         ;resident files STEP $44 piece 8
0003641A <AmiBlitz3.ab3@28853> str_calcexpression:        Ds.l 32
0003641E <AmiBlitz3.ab3@28854> destbufferend_backup_calc: Ds.l 1             ; was calclibat
00036428 <AmiBlitz3.ab3@28862>   MOVE.l destbufferend,destbufferend_backup_calc
0003642E <AmiBlitz3.ab3@28864> 
00036434 <AmiBlitz3.ab3@28866>   MOVE.l A7,errstack
0003643E <AmiBlitz3.ab3@28867>   MOVE.l #Calc_Error_Exit,errcont
00036468 <AmiBlitz3.ab3@28875>   !basic         ; get the flage for the conversion form the editor
000364AC <AmiBlitz3.ab3@28876>   !ComData_GetW{comWord_CalculatorButtonBinFlag,D0} : MOVE.w d0,CalculatorButtonBinFlag
000364F0 <AmiBlitz3.ab3@28877>   !ComData_GetW{comWord_CalculatorButtonDecFlag,D0} : MOVE.w d0,CalculatorButtonDecFlag
0003650E <AmiBlitz3.ab3@28878>   !asm
00036514 <AmiBlitz3.ab3@28881>   LEA str_calcexpression,A0
0003651A <AmiBlitz3.ab3@28889>   JSR setcvars
00036520 <AmiBlitz3.ab3@28890>   JSR setsvars
00036526 <AmiBlitz3.ab3@28892>   CLR.w connest             ;no idea...
0003652C <AmiBlitz3.ab3@28893>   LEA str_calcexpression,A5
00036532 <AmiBlitz3.ab3@28894>   JSR evalconst3            ;evaluate constant
00036538 <AmiBlitz3.ab3@28896>   LEA str_calcexpression,A0
0003653A <AmiBlitz3.ab3@28897>   TST.l D3
0003653E <AmiBlitz3.ab3@28898>    BPL.w 'ispos
00036542 <AmiBlitz3.ab3@28899>   MOVE.b #$2D,(A0)+         ;'-'
00036544 <AmiBlitz3.ab3@28900>   NEG.l D3
0003654C <AmiBlitz3.ab3@28903>   CMPI.w #$80,CalculatorButtonDecFlag
00036550 <AmiBlitz3.ab3@28904>    BEQ.w 'dec
00036552 <AmiBlitz3.ab3@28905>   MOVEQ.l #$00,D1
0003655A <AmiBlitz3.ab3@28906>   CMPI.w #$80,CalculatorButtonBinFlag
0003655E <AmiBlitz3.ab3@28907>    BNE.w 'hex
00036560 <AmiBlitz3.ab3@28910>   MOVEQ.l #$1F,D0
00036564 <AmiBlitz3.ab3@28911>   MOVE.b #$25,(A0)+      ;'%'
00036566 <AmiBlitz3.ab3@28914>       LSL.l #1,D3
0003656A <AmiBlitz3.ab3@28915>        BCC.w 'bzero
0003656E <AmiBlitz3.ab3@28916>       MOVE.b #"1",(A0)+
00036570 <AmiBlitz3.ab3@28917>       MOVEQ.l #-$01,D1
00036574 <AmiBlitz3.ab3@28918>   BRA.w 'bnext
00036576 <AmiBlitz3.ab3@28921>       TST.w D1
0003657A <AmiBlitz3.ab3@28922>       BEQ.w 'bnext
0003657E <AmiBlitz3.ab3@28923>       MOVE.b #"0",(A0)+
00036582 <AmiBlitz3.ab3@28926>  DBF D0,'bloop
00036584 <AmiBlitz3.ab3@28929>   TST.w D1
00036588 <AmiBlitz3.ab3@28930>   BNE.w 'pc1
0003658C <AmiBlitz3.ab3@28931>   MOVE.b #"0",(A0)+
0003658E <AmiBlitz3.ab3@28934>   CLR.b (A0)
00036592 <AmiBlitz3.ab3@28935>  BRA.w 'pc
00036594 <AmiBlitz3.ab3@28938>   MOVEQ.l #$07,D0
00036598 <AmiBlitz3.ab3@28939>   MOVE.b #$24,(A0)+  ;'$'
0003659A <AmiBlitz3.ab3@28942>     MOVE.l D3,D2
0003659C <AmiBlitz3.ab3@28943>     SWAP D2
0003659E <AmiBlitz3.ab3@28944>     LSR.w #8,D2
000365A0 <AmiBlitz3.ab3@28945>     LSR.w #4,D2
000365A4 <AmiBlitz3.ab3@28946>     ADDI.w #$30,D2
000365A8 <AmiBlitz3.ab3@28947>     CMP.w #$3A,D2
000365AC <AmiBlitz3.ab3@28948>      BCS.w 'hok
000365AE <AmiBlitz3.ab3@28949>     ADDQ.w #7,D2
000365B2 <AmiBlitz3.ab3@28952>     CMP.w #$30,D2
000365B6 <AmiBlitz3.ab3@28953>     BEQ.w 'hzero
000365B8 <AmiBlitz3.ab3@28954>     MOVE.b D2,(A0)+
000365BA <AmiBlitz3.ab3@28955>     MOVEQ.l #-$01,D1
000365BE <AmiBlitz3.ab3@28956>   BRA.w 'hnext
000365C0 <AmiBlitz3.ab3@28959>     TST.w D1
000365C4 <AmiBlitz3.ab3@28960>      BEQ.w 'hnext
000365C6 <AmiBlitz3.ab3@28961>     MOVE.b D2,(A0)+
000365C8 <AmiBlitz3.ab3@28964>     LSL.l #4,D3
000365CC <AmiBlitz3.ab3@28965>  DBF D0,'hloop
000365D0 <AmiBlitz3.ab3@28967>  BRA.w 'bdone
000365D2 <AmiBlitz3.ab3@28970>   MOVE.l D3,D2
000365D8 <AmiBlitz3.ab3@28971>   JSR makelong          ;to long...
000365E2 <AmiBlitz3.ab3@28978>   MOVE.l destbufferend_backup_calc,destbufferend
000365E4 <AmiBlitz3.ab3@28980> RTS                         ; added tomsmart 2012 03 07 vor Calculator in PED
000366E3 <AmiBlitz3.ab3@28984> str_cliarguments: Ds.b 255   ; a command line can acutally be 255 characters long
000366E4 <AmiBlitz3.ab3@28986> Even
000366E6 <AmiBlitz3.ab3@29004>     MOVE.b (a5)+,d0
000366EA <AmiBlitz3.ab3@29005>     BEQ 'l2
000366EE <AmiBlitz3.ab3@29006>     CMP.b #$80,d0
000366F2 <AmiBlitz3.ab3@29007>     BNE 'l1
000366F4 <AmiBlitz3.ab3@29008>     MOVE.b (a5)+,d0
000366F8 <AmiBlitz3.ab3@29009>     BEQ 'l2
000366FC <AmiBlitz3.ab3@29010>     CMP.b #$02,d0
00036700 <AmiBlitz3.ab3@29011>   BNE 'l1
00036704 <AmiBlitz3.ab3@29014>     CMP.b #$20,(a5)+
00036708 <AmiBlitz3.ab3@29015>   BEQ 'l3
0003670A <AmiBlitz3.ab3@29016>   SUBQ.l #1,a5
0003670C <AmiBlitz3.ab3@29017>   TST.b (a5)
00036710 <AmiBlitz3.ab3@29018>   BEQ 'l2
00036714 <AmiBlitz3.ab3@29019>   CMP.w #$8008,(a5)
00036718 <AmiBlitz3.ab3@29020>   BEQ 'l4
0003671C <AmiBlitz3.ab3@29021>   CMP.w #$8009,(a5)
00036720 <AmiBlitz3.ab3@29022>   BEQ 'l4
00036724 <AmiBlitz3.ab3@29023>  BRA 'l1
00036726 <AmiBlitz3.ab3@29026>   ADDQ.l #2,a5
0003672C <AmiBlitz3.ab3@29027>   JSR skiprest
0003672E <AmiBlitz3.ab3@29028> RTS
00036734 <AmiBlitz3.ab3@29031>   JSR nextline
00036738 <AmiBlitz3.ab3@29032>   BNE 'l1
0003673A <AmiBlitz3.ab3@29033> RTS
00036764 <AmiBlitz3.ab3@29037>   !basic
0003676E <AmiBlitz3.ab3@29038>   DateFormat 1
0003677C <AmiBlitz3.ab3@29039>   i.l=SystemDate
000367A2 <AmiBlitz3.ab3@29040>   a$=Date$ (i)
00036820 <AmiBlitz3.ab3@29041>   a$=Replace$(a$,"/",".")
00036826 <AmiBlitz3.ab3@29042>   GetD0 &a$
00036828 <AmiBlitz3.ab3@29043>   MOVEQ #8,d2
0003682A <AmiBlitz3.ab3@29044>   MOVE.l d0,a0
0003682C <AmiBlitz3.ab3@29047>     MOVE.b (a0)+,d1
00036832 <AmiBlitz3.ab3@29048>     JSR pokedata1b
00036836 <AmiBlitz3.ab3@29049>  DBF d2,'l1
00036838 <AmiBlitz3.ab3@29051>   MOVEQ #0,d0
0003683A <AmiBlitz3.ab3@29052>   MOVE.b (a0)+,d0
00036858 <AmiBlitz3.ab3@29053>   !asm
0003685E <AmiBlitz3.ab3@29054>   ADD.l #9,d2
00036864 <AmiBlitz3.ab3@29055>   ADD.l #9,a5
00036866 <AmiBlitz3.ab3@29056> RTS
00036890 <AmiBlitz3.ab3@29060>   !basic
0003689A <AmiBlitz3.ab3@29061>   DateFormat 0
000368A8 <AmiBlitz3.ab3@29062>   i.l=SystemDate
000368CE <AmiBlitz3.ab3@29063>   a$=Date$ (i)
0003694C <AmiBlitz3.ab3@29064>   a$=Replace$(a$,"/",".")
00036952 <AmiBlitz3.ab3@29065>   GetD0 &a$
00036954 <AmiBlitz3.ab3@29066>   MOVEQ #8,d2
00036956 <AmiBlitz3.ab3@29067>   MOVE.l d0,a0
00036958 <AmiBlitz3.ab3@29070>     MOVE.b (a0)+,d1
0003695E <AmiBlitz3.ab3@29071>     JSR pokedata1b
00036962 <AmiBlitz3.ab3@29072>  DBF d2,'l1
00036964 <AmiBlitz3.ab3@29074>   MOVEQ #0,d0
00036966 <AmiBlitz3.ab3@29075>   MOVE.b (a0)+,d0
00036984 <AmiBlitz3.ab3@29076>   !asm
0003698A <AmiBlitz3.ab3@29077>   ADD.l #9,d2
00036990 <AmiBlitz3.ab3@29078>   ADD.l #13,a5
00036992 <AmiBlitz3.ab3@29079> RTS
000369BC <AmiBlitz3.ab3@29083>   !basic
000369C6 <AmiBlitz3.ab3@29084>   DateFormat 1
000369D4 <AmiBlitz3.ab3@29085>   i.l = SystemDate
000369FA <AmiBlitz3.ab3@29086>   a$ = Date$ (i)
00036A78 <AmiBlitz3.ab3@29087>   a$ = Replace$(a$,"/",".")
00036A7E <AmiBlitz3.ab3@29088>   GetD0 &a$
00036A80 <AmiBlitz3.ab3@29089>   MOVEQ #8,d2
00036A82 <AmiBlitz3.ab3@29090>   MOVE.l d0,a0
00036A84 <AmiBlitz3.ab3@29093>     MOVE.b (a0)+,d1
00036A8A <AmiBlitz3.ab3@29094>     JSR writebyte
00036A8E <AmiBlitz3.ab3@29095>  DBF d2,'l1
00036A90 <AmiBlitz3.ab3@29097>   MOVEQ #0,d0
00036A92 <AmiBlitz3.ab3@29098>   MOVE.b (a0)+,d0
00036AB0 <AmiBlitz3.ab3@29099>   !asm
00036AB6 <AmiBlitz3.ab3@29100>   ADD.l #9,a5
00036AB8 <AmiBlitz3.ab3@29101> RTS
00036AE2 <AmiBlitz3.ab3@29105>   !basic
00036AEC <AmiBlitz3.ab3@29106>   DateFormat 0
00036AFA <AmiBlitz3.ab3@29107>   i.l=SystemDate
00036B20 <AmiBlitz3.ab3@29108>   a$=Date$ (i)
00036B9E <AmiBlitz3.ab3@29109>   a$=Replace$(a$,"/",".")
00036BA4 <AmiBlitz3.ab3@29110>   GetD0 &a$
00036BA6 <AmiBlitz3.ab3@29111>   MOVEQ #8,d2
00036BA8 <AmiBlitz3.ab3@29112>   MOVE.l d0,a0
00036BAA <AmiBlitz3.ab3@29115>     MOVE.b (a0)+,d1
00036BB0 <AmiBlitz3.ab3@29116>     JSR writebyte
00036BB4 <AmiBlitz3.ab3@29117>  DBF d2,'l1
00036BB6 <AmiBlitz3.ab3@29119>   MOVEQ #0,d0
00036BB8 <AmiBlitz3.ab3@29120>   MOVE.b (a0)+,d0
00036BD6 <AmiBlitz3.ab3@29121>   !asm
00036BDC <AmiBlitz3.ab3@29122>   ADD.l #13,a5
00036BDE <AmiBlitz3.ab3@29123> RTS
00036BE0 <AmiBlitz3.ab3@29127>   MOVE.l d2,-(a7)                                          ; D2 -> stack
00036BE2 <AmiBlitz3.ab3@29128>   MOVE.l a5,d0
00036C0C <AmiBlitz3.ab3@29129>   !basic
00036C10 <AmiBlitz3.ab3@29130>   _myD0.l = PutD0
00036C1A <AmiBlitz3.ab3@29131>   If _myD0
00036C60 <AmiBlitz3.ab3@29132>     verstring$ = Left$(Peek.s(_myD0),9+3)
00036CB2 <AmiBlitz3.ab3@29133>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00036CB8 <AmiBlitz3.ab3@29134>   Else
00036CF2 <AmiBlitz3.ab3@29135>     error{"INTERNAL: Invalid pointer in version_string!"}
00036D02 <AmiBlitz3.ab3@29140>   actual_version.l = Peek.l(?versioninformation)
00036D12 <AmiBlitz3.ab3@29141>   actual_build.l   = Peek.l(?number_of_builds)
00036D36 <AmiBlitz3.ab3@29143>   Format "00"
00036D6C <AmiBlitz3.ab3@29144>   Select verstring$
00036D90 <AmiBlitz3.ab3@29146>     Case "VER_MAJOR"
00036DCC <AmiBlitz3.ab3@29147>      put_versionstr$ = Str$(actual_version LSR 24)
00036DF6 <AmiBlitz3.ab3@29149>     Case "VER_MINOR"
00036E3A <AmiBlitz3.ab3@29150>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
00036E64 <AmiBlitz3.ab3@29152>     Case "VER_PATCH"
00036EA8 <AmiBlitz3.ab3@29153>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
00036ED2 <AmiBlitz3.ab3@29155>     Case "VER_BUILD"
00036EF6 <AmiBlitz3.ab3@29156>      Format ""
00036F2A <AmiBlitz3.ab3@29157>      put_versionstr$ = Str$(actual_build)
00036F30 <AmiBlitz3.ab3@29159>     Default
00036F58 <AmiBlitz3.ab3@29160>      put_versionstr$ = "{unknown compilerconstant}"
00036F66 <AmiBlitz3.ab3@29163>   End Select
00036F8A <AmiBlitz3.ab3@29164>   Format ""
00036F9A <AmiBlitz3.ab3@29166>   GetD0 FLen(put_versionstr$)                              ; laenge zielstring -> Stack
00036F9C <AmiBlitz3.ab3@29167>   MOVE.l d0,d2
00036F9E <AmiBlitz3.ab3@29168>   MOVE.l d2,-(a7)
00036FA2 <AmiBlitz3.ab3@29169>   SUB #1,d2
00036FA8 <AmiBlitz3.ab3@29171>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
00036FAA <AmiBlitz3.ab3@29172>   MOVE.l d0,a0
00036FAC <AmiBlitz3.ab3@29175>     MOVE.b (a0)+,d1
00036FB2 <AmiBlitz3.ab3@29176>     JSR pokedata1b
00036FB6 <AmiBlitz3.ab3@29177>  DBF d2,'l1
00036FB8 <AmiBlitz3.ab3@29179>   MOVEQ #0,d0
00036FD6 <AmiBlitz3.ab3@29180>   !asm
00036FD8 <AmiBlitz3.ab3@29181>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
00036FDA <AmiBlitz3.ab3@29182>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
00036FDC <AmiBlitz3.ab3@29183>   ADD.l d0,d2
00036FE2 <AmiBlitz3.ab3@29184>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
00036FE4 <AmiBlitz3.ab3@29185>   MOVEQ #0,d0
00036FE6 <AmiBlitz3.ab3@29186> RTS
00036FE8 <AmiBlitz3.ab3@29190>   MOVE.l a5,d0
00037012 <AmiBlitz3.ab3@29191>   !basic
00037016 <AmiBlitz3.ab3@29192>   _myD0.l = PutD0
00037020 <AmiBlitz3.ab3@29193>   If _myD0
00037066 <AmiBlitz3.ab3@29194>     verstring$ = Left$(Peek.s(_myD0),9+3)
000370B8 <AmiBlitz3.ab3@29195>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
000370BE <AmiBlitz3.ab3@29196>   Else
000370F8 <AmiBlitz3.ab3@29197>     error{"INTERNAL: Invalid pointer in version_string_dc!"}
00037108 <AmiBlitz3.ab3@29202>   actual_version.l = Peek.l(?versioninformation)
00037118 <AmiBlitz3.ab3@29203>   actual_build.l   = Peek.l(?number_of_builds)
0003713C <AmiBlitz3.ab3@29205>   Format ""
00037172 <AmiBlitz3.ab3@29206>   Select verstring$
00037196 <AmiBlitz3.ab3@29208>     Case "VER_MAJOR"
000371D2 <AmiBlitz3.ab3@29209>      put_versionstr$ = Str$(actual_version LSR 24)
000371FC <AmiBlitz3.ab3@29211>     Case "VER_MINOR"
00037240 <AmiBlitz3.ab3@29212>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
0003726A <AmiBlitz3.ab3@29214>     Case "VER_PATCH"
000372AE <AmiBlitz3.ab3@29215>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
000372D8 <AmiBlitz3.ab3@29217>     Case "VER_BUILD"
000372FC <AmiBlitz3.ab3@29218>      Format ""
00037330 <AmiBlitz3.ab3@29219>      put_versionstr$ = Str$(actual_build)
00037336 <AmiBlitz3.ab3@29221>     Default
0003735E <AmiBlitz3.ab3@29222>      put_versionstr$ = "{unknown compilerconstant}"
0003736C <AmiBlitz3.ab3@29224>   End Select
00037390 <AmiBlitz3.ab3@29225>   Format ""
000373A6 <AmiBlitz3.ab3@29227>   GetD0 FLen(put_versionstr$)-1
000373A8 <AmiBlitz3.ab3@29228>   MOVE.l d0,d2
000373AE <AmiBlitz3.ab3@29230>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
000373B0 <AmiBlitz3.ab3@29231>   MOVE.l d0,a0
000373B2 <AmiBlitz3.ab3@29234>     MOVE.b (a0)+,d1
000373B8 <AmiBlitz3.ab3@29235>     JSR writebyte
000373BC <AmiBlitz3.ab3@29236>  DBF d2,'l1
000373BE <AmiBlitz3.ab3@29238>   MOVEQ #0,d0
000373C0 <AmiBlitz3.ab3@29239>   MOVE.b -(a0),d0                                          ; letztes Zeichen in D0
000373DE <AmiBlitz3.ab3@29240>   !asm
000373E4 <AmiBlitz3.ab3@29241>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
000373E6 <AmiBlitz3.ab3@29242> RTS
000373E8 <AmiBlitz3.ab3@29344>   MOVE.l a5,-(a7)
00037414 <AmiBlitz3.ab3@29345>   !fget
00037418 <AmiBlitz3.ab3@29346>   CMP.w #".",d0
0003741C <AmiBlitz3.ab3@29347>   BNE 'skip
00037420 <AmiBlitz3.ab3@29348>   MOVEM.l a2/d2,-(a7)
00037426 <AmiBlitz3.ab3@29349>   LEA newtypebase,a2
0003742C <AmiBlitz3.ab3@29350>   JSR getparameter2
00037430 <AmiBlitz3.ab3@29351>   BEQ.w JUMP_syntaxerr
00037436 <AmiBlitz3.ab3@29352>   JSR findtype
0003743A <AmiBlitz3.ab3@29353>   BNE.w JUMP_notypeerr2
00037440 <AmiBlitz3.ab3@29354>   MOVE.l a2,typetocast
00037444 <AmiBlitz3.ab3@29355>   MOVEM.l (a7)+,a2/d2
00037448 <AmiBlitz3.ab3@29356>   CMP.w #")",d0
0003744C <AmiBlitz3.ab3@29357>   BNE JUMP_errorbracketmiss
0003744E <AmiBlitz3.ab3@29358>   ADDQ.l #4,a7
0003747A <AmiBlitz3.ab3@29359>   !fget
00037480 <AmiBlitz3.ab3@29360>   JMP nocast
00037482 <AmiBlitz3.ab3@29363>   MOVE.l (a7)+,a5
00037488 <AmiBlitz3.ab3@29364> JMP bracket
0003748E <AmiBlitz3.ab3@29367> JUMP_errorbracketmiss JMP errorbracketmiss
000374B8 <AmiBlitz3.ab3@29370> Function.l ab3_GetIncludeLock{filename.s}
000374D8 <AmiBlitz3.ab3@29371>   incLock.l  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub
00037530 <AmiBlitz3.ab3@29372>   ex.s       = dos_GetExt{filename}
00037544 <AmiBlitz3.ab3@29374>   If incLock = False
000375B8 <AmiBlitz3.ab3@29375>     filename = dos_SetExt{filename,"ab3"}
000375D8 <AmiBlitz3.ab3@29376>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab3
000375EC <AmiBlitz3.ab3@29379>   If incLock = False
00037660 <AmiBlitz3.ab3@29380>     filename = dos_SetExt{filename,"ab2"}
00037680 <AmiBlitz3.ab3@29381>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab2
00037694 <AmiBlitz3.ab3@29384>   If incLock = False
00037708 <AmiBlitz3.ab3@29385>     filename = dos_SetExt{filename,"bb2"}
00037728 <AmiBlitz3.ab3@29386>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.bb2
0003773C <AmiBlitz3.ab3@29389>   If incLock = False
000377CE <AmiBlitz3.ab3@29390>     filename = dos_SetExt{filename,ex+".ab3"}
000377EE <AmiBlitz3.ab3@29391>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab3
00037802 <AmiBlitz3.ab3@29394>   If incLock = False
00037876 <AmiBlitz3.ab3@29395>     filename = dos_SetExt{filename,"ab2"}
00037896 <AmiBlitz3.ab3@29396>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab2
000378AA <AmiBlitz3.ab3@29399>   If incLock = False
0003791E <AmiBlitz3.ab3@29400>     filename = dos_SetExt{filename,"bb2"}
0003793E <AmiBlitz3.ab3@29401>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.bb2
00037948 <AmiBlitz3.ab3@29404>  Function Return incLock
00037962 <AmiBlitz3.ab3@29405> End Function
0003798C <AmiBlitz3.ab3@29409>   !basic
000379B6 <AmiBlitz3.ab3@29410>   incString.s = Peek$(?ptr_parameterstore)
000379E4 <AmiBlitz3.ab3@29412>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
000379E8 <AmiBlitz3.ab3@29413>   incDirP.l   = PutD0                                       ;    "
00037A10 <AmiBlitz3.ab3@29414>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
00037A90 <AmiBlitz3.ab3@29415>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
00037AC2 <AmiBlitz3.ab3@29416>   incLock.l   = ab3_GetIncludeLock{incFile}                 ; check if file exist
00037AD6 <AmiBlitz3.ab3@29418>   If incLock = False ; not found => check default Include Directory
00037AE6 <AmiBlitz3.ab3@29419>     incDirP.l = Peek.l(?incd)
00037AF0 <AmiBlitz3.ab3@29420>     If incDirP
00037B18 <AmiBlitz3.ab3@29421>       incDir_.s = Peek.s(incDirP)
00037B1E <AmiBlitz3.ab3@29422>     Else
00037B88 <AmiBlitz3.ab3@29423>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00037C08 <AmiBlitz3.ab3@29425>     incFile.s = dos_AddPart{incDir_,incString}
00037C3A <AmiBlitz3.ab3@29426>     incLock.l = ab3_GetIncludeLock{incFile}
00037C4E <AmiBlitz3.ab3@29429>   If incLock = False ; not found => check relative to current source
00037C66 <AmiBlitz3.ab3@29430>     incDepth.l = Peek.w(?ininclude)-1
00037C8C <AmiBlitz3.ab3@29431>     If incDepth >= 0 AND incDepth < #maxincludes
00037CEC <AmiBlitz3.ab3@29432>       incDir_.s = dos_PathPart{incdim (incDepth)} ;= Peek.s(?includetemp2)
00037D6C <AmiBlitz3.ab3@29433>       incFile.s = dos_AddPart{incDir_,incString}
00037D9E <AmiBlitz3.ab3@29434>       incLock.l = ab3_GetIncludeLock{incFile}
00037DB2 <AmiBlitz3.ab3@29438>   If incLock = False ; still not found => check default Include Directory and name only
00037DC2 <AmiBlitz3.ab3@29439>     incDirP.l = Peek.l(?incd)
00037DCC <AmiBlitz3.ab3@29440>     If incDirP
00037DF4 <AmiBlitz3.ab3@29441>       incDir_.s = Peek.s(incDirP)
00037DFA <AmiBlitz3.ab3@29442>     Else
00037E64 <AmiBlitz3.ab3@29443>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00037F12 <AmiBlitz3.ab3@29445>     incFile.s = dos_AddPart{incDir_,dos_FilePart{incString}}
00037F44 <AmiBlitz3.ab3@29446>     incLock.l = ab3_GetIncludeLock{incFile}
00037F4E <AmiBlitz3.ab3@29449>   If incLock
00037F64 <AmiBlitz3.ab3@29450>     MaxLen incFile = 1024
00037F88 <AmiBlitz3.ab3@29451>     NameFromLock_ incLock,&incFile,1024
00037FB2 <AmiBlitz3.ab3@29452>     incFile = Peek.s(&incFile)
00037FEA <AmiBlitz3.ab3@29453>     Poke$ ?ptr_parameterstore,incFile
00037FFE <AmiBlitz3.ab3@29454>     i = FLen(incFile)
0003800A <AmiBlitz3.ab3@29455>     GetReg d0,i
00038010 <AmiBlitz3.ab3@29456>     MOVE.l d0,tempstore
00038020 <AmiBlitz3.ab3@29457>     UnLock_ incLock
0003803E <AmiBlitz3.ab3@29460>   !asm
00038044 <AmiBlitz3.ab3@29461>   TST.l tempstore
00038048 <AmiBlitz3.ab3@29462>    BEQ 'l1
0003804E <AmiBlitz3.ab3@29463>   MOVE.l tempstore,d2
00038050 <AmiBlitz3.ab3@29466> RTS
0003807A <AmiBlitz3.ab3@29470>   !basic
000380A4 <AmiBlitz3.ab3@29471>   incString.s = Peek$(?ptr_parameterstore)                  ; get the string
000380D2 <AmiBlitz3.ab3@29472>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
000380D6 <AmiBlitz3.ab3@29473>   incDirP.l   = PutD0                                       ;    "
000380FE <AmiBlitz3.ab3@29474>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
0003817E <AmiBlitz3.ab3@29475>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
0003819E <AmiBlitz3.ab3@29476>   incLock.l   = Lock_(&incFile,#ACCESS_READ)                ; check if file exist
000381B2 <AmiBlitz3.ab3@29478>   If incLock = False                                        ; not found => try orignal string only to find
000381D2 <AmiBlitz3.ab3@29479>     incLock.l = Lock_(&incString,#ACCESS_READ)
000381DC <AmiBlitz3.ab3@29482>   If incLock                                                ; found => store full path
000381F2 <AmiBlitz3.ab3@29483>     MaxLen incFile = 1024
00038216 <AmiBlitz3.ab3@29484>     NameFromLock_ incLock,&incFile,1024
00038240 <AmiBlitz3.ab3@29485>     incFile = Peek.s(&incFile)
00038278 <AmiBlitz3.ab3@29486>     Poke$ ?ptr_parameterstore,incFile
00038284 <AmiBlitz3.ab3@29489> 
000382A2 <AmiBlitz3.ab3@29490>   !asm
000382A4 <AmiBlitz3.ab3@29491> RTS
000382AA <AmiBlitz3.ab3@29502>   JSR Aclearallvars
000382B0 <AmiBlitz3.ab3@29503>   JSR free_unusedfunctions
000382BA <AmiBlitz3.ab3@29518>   MOVE.l #"NORE",reqmode
000382C0 <AmiBlitz3.ab3@29519> JSR handle_compileerror
000382C2 <AmiBlitz3.ab3@29522>   MOVE.l d0,-(a7)
000382C4 <AmiBlitz3.ab3@29523>   MOVE.l a5,d0
000382CE <AmiBlitz3.ab3@29524>   !basica7
000382D2 <AmiBlitz3.ab3@29525>   i.l = PutD0
000382DC <AmiBlitz3.ab3@29526>   If i
00038304 <AmiBlitz3.ab3@29527>     a$ = Peek$(i)
00038336 <AmiBlitz3.ab3@29528>     b$ = Peeks$(i-7,7)
0003846E <AmiBlitz3.ab3@29530> 
00038474 <AmiBlitz3.ab3@29531>     MOVE.l d0,result
00038478 <AmiBlitz3.ab3@29533>   !asma7
0003847A <AmiBlitz3.ab3@29534>   MOVE.l (a7)+,d0
0003847C <AmiBlitz3.ab3@29535> RTS
000384A6 <AmiBlitz3.ab3@29539>   !basic
000384D4 <AmiBlitz3.ab3@29540>   !ComData_LEA{comStr_CurrentDir,D0}
000384D8 <AmiBlitz3.ab3@29541>   currentDirP.l = PutD0
00038506 <AmiBlitz3.ab3@29543>   !ComData_LEA{comStr_SourceName,D0}
0003850A <AmiBlitz3.ab3@29544>   fileNameP.l = PutD0
00038532 <AmiBlitz3.ab3@29546>   check_dirname$  = Peek$(currentDirP)
0003855A <AmiBlitz3.ab3@29547>   check_filename$ = Peek$(fileNameP)
000385E0 <AmiBlitz3.ab3@29548>   If (olddirname$<>check_dirname$) OR (oldfilename$<>check_filename$)
000385E6 <AmiBlitz3.ab3@29549>     JSR free_unusedfunctions
00038630 <AmiBlitz3.ab3@29551>   olddirname$ = Peek$(check_dirname$)
0003867A <AmiBlitz3.ab3@29552>   oldfilename$ = Peek$(check_filename$)
000386A4 <AmiBlitz3.ab3@29553>   For i = 0 To #maxincludes-1
000386B8 <AmiBlitz3.ab3@29554>     incline(i) = 0
000386C8 <AmiBlitz3.ab3@29555>   Next
000386E6 <AmiBlitz3.ab3@29556>   !asm
000386E8 <AmiBlitz3.ab3@29557> RTS
000386EA <AmiBlitz3.ab3@29561>   MOVEQ #0,d1
000386EC <AmiBlitz3.ab3@29564>   MOVE.b (a5)+,d0
000386F0 <AmiBlitz3.ab3@29565>   BEQ 'er1
000386F4 <AmiBlitz3.ab3@29566>   CMP.b #$20,d0
000386F8 <AmiBlitz3.ab3@29567>   BEQ 'l1
000386FA <AmiBlitz3.ab3@29568>   ADDQ #1,d1
000386FE <AmiBlitz3.ab3@29569>   CMP.b #$22,d0
00038702 <AmiBlitz3.ab3@29570>   BNE 'l1
00038704 <AmiBlitz3.ab3@29571>  RTS
0003870A <AmiBlitz3.ab3@29574> JMP syntaxerr
0003872E <AmiBlitz3.ab3@29578> erro1t   Dc.b "Only one BSS / Chip Segment allowed",0 : Even
0003874C <AmiBlitz3.ab3@29579> nodata   Dc.b "BSS Segment contains Data!!!!",0       : Even
00038752 <AmiBlitz3.ab3@29584>   TST.b exdebug
00038756 <AmiBlitz3.ab3@29585>   BNE 'l10
0003875C <AmiBlitz3.ab3@29586>   MOVE.l #$4e71,d1
00038762 <AmiBlitz3.ab3@29587>   JSR writeword
00038768 <AmiBlitz3.ab3@29588>   MOVE.l destpointer,d0
0003876A <AmiBlitz3.ab3@29589>   MOVE.l d0,d1
0003876C <AmiBlitz3.ab3@29590>   ADDQ.l #3,d1
00038772 <AmiBlitz3.ab3@29591>   AND.l #$fffffffc,d1
00038778 <AmiBlitz3.ab3@29592>   MOVE.l d1,destpointer
0003877E <AmiBlitz3.ab3@29593>   SUB.l destpointer,d0
00038782 <AmiBlitz3.ab3@29594>   BEQ 'lnf1
0003878C <AmiBlitz3.ab3@29595>   CMP.l #-1,bssstart
00038790 <AmiBlitz3.ab3@29596>   BNE 'lnf1
0003879A <AmiBlitz3.ab3@29597>   CMP.l #-1,chipstart
0003879E <AmiBlitz3.ab3@29598>   BNE 'lnf1
000387A4 <AmiBlitz3.ab3@29599>   MOVE.l destpointer,a4
000387AA <AmiBlitz3.ab3@29600>   TST.w dontwrite_nomemleft
000387AE <AmiBlitz3.ab3@29601>   BNE 'lnf1
000387B4 <AmiBlitz3.ab3@29602>   MOVE.w #$4e71,-2(a4)
000387BE <AmiBlitz3.ab3@29605>   CMP.l #-1,bssstart
000387C2 <AmiBlitz3.ab3@29606>   BEQ 'l11
000387C8 <AmiBlitz3.ab3@29607>   MOVE.l #erro1t,-(a7)
000387CE <AmiBlitz3.ab3@29608>  JMP handle_compileerror
000387D8 <AmiBlitz3.ab3@29611>   MOVE.l destpointer,bssstart
000387E0 <AmiBlitz3.ab3@29612>   MOVE.b #1,bssmode
000387E6 <AmiBlitz3.ab3@29615>   TST.b chipmode
000387EA <AmiBlitz3.ab3@29616>   BEQ 'l10
000387F4 <AmiBlitz3.ab3@29617>   MOVE.l destpointer,chipend
000387FA <AmiBlitz3.ab3@29618>   CLR.b chipmode
00038800 <AmiBlitz3.ab3@29621>   JSR get1bytemain
00038802 <AmiBlitz3.ab3@29622> RTS
00038808 <AmiBlitz3.ab3@29626>    TST.b exdebug
0003880C <AmiBlitz3.ab3@29627>   BNE 'x1
00038812 <AmiBlitz3.ab3@29628>   MOVE.l destpointer,d0
00038818 <AmiBlitz3.ab3@29629>   MOVE.l d0,realbssend
0003881E <AmiBlitz3.ab3@29630>   MOVE.l #$4e71,d1
00038824 <AmiBlitz3.ab3@29631>   JSR writeword
0003882A <AmiBlitz3.ab3@29632>   MOVE.l destpointer,d0
0003882C <AmiBlitz3.ab3@29633>   MOVE.l d0,d1
0003882E <AmiBlitz3.ab3@29634>   ADDQ.l #3,d1
00038834 <AmiBlitz3.ab3@29635>   AND.l #$fffffffc,d1
0003883A <AmiBlitz3.ab3@29636>   MOVE.l d1,destpointer
00038840 <AmiBlitz3.ab3@29637>   SUB.l destpointer,d0
00038844 <AmiBlitz3.ab3@29638>   BEQ 'lnf1
0003884A <AmiBlitz3.ab3@29639>   MOVE.l destpointer,a4
00038854 <AmiBlitz3.ab3@29640>   CMP.l #-1,bssstart
00038858 <AmiBlitz3.ab3@29641>   BNE 'lnf1
00038862 <AmiBlitz3.ab3@29642>   CMP.l #-1,chipstart
00038866 <AmiBlitz3.ab3@29643>   BNE 'lnf1
0003886C <AmiBlitz3.ab3@29644>   TST.w dontwrite_nomemleft
00038870 <AmiBlitz3.ab3@29645>   BNE 'lnf1
00038876 <AmiBlitz3.ab3@29646>   MOVE.w #$4e71,-2(a4)
0003887C <AmiBlitz3.ab3@29649>   TST.b bssmode
00038880 <AmiBlitz3.ab3@29650>   BEQ 'l10
0003888A <AmiBlitz3.ab3@29651>   MOVE.l destpointer,bssend
00038890 <AmiBlitz3.ab3@29652>   CLR.b bssmode
0003889A <AmiBlitz3.ab3@29657>   CMP.l #-1,chipstart
0003889E <AmiBlitz3.ab3@29658>   BEQ 'l11
000388A4 <AmiBlitz3.ab3@29659>   MOVE.l #erro1t,-(a7)
000388AA <AmiBlitz3.ab3@29660>  JMP handle_compileerror
000388B4 <AmiBlitz3.ab3@29663>   MOVE.l destpointer,chipstart
000388BC <AmiBlitz3.ab3@29664>   MOVE.b #1,chipmode
000388C2 <AmiBlitz3.ab3@29667>   JSR get1bytemain
000388C4 <AmiBlitz3.ab3@29668> RTS
000388EE <AmiBlitz3.ab3@29672>   !basic
00038900 <AmiBlitz3.ab3@29682>   i.l = Peek.w(?ininclude)
00038926 <AmiBlitz3.ab3@29683>   If i>=0 AND i<#maxincludes
00038958 <AmiBlitz3.ab3@29684>     incdim (i) = Peek.s(?includetemp2)
00038972 <AmiBlitz3.ab3@29685>     incline(i) = Peek.l(?includeline)
0003897C <AmiBlitz3.ab3@29687>     If CLIMode
00038A2A <AmiBlitz3.ab3@29688>       If cli_verbose>=2 Then NPrint "Include \\22",incdim(i),"\\22..."
00038A48 <AmiBlitz3.ab3@29692>   !asm
00038A4A <AmiBlitz3.ab3@29693> RTS
00038A74 <AmiBlitz3.ab3@29697>   !basic
00038A86 <AmiBlitz3.ab3@29698>   i.l = Peek.w(?ininclude)
00038AAC <AmiBlitz3.ab3@29699>   If i>=0 AND i<#maxincludes
00038ADC <AmiBlitz3.ab3@29700>     incdim (i) = ""
00038AF0 <AmiBlitz3.ab3@29701>     incline(i) = 0
00038B28 <AmiBlitz3.ab3@29702>     If i>0 Then Poke.l (?includeline),incline(i-1)+1
00038B46 <AmiBlitz3.ab3@29704>   !asm
00038B48 <AmiBlitz3.ab3@29705> RTS
00038B4E <AmiBlitz3.ab3@29709>   LEA replacedat,a0
00038B52 <AmiBlitz3.ab3@29710>   Dc.w $3181,$0A00                                         ;MOVE.w d1,0(a0,d0.l*2)
00038B54 <AmiBlitz3.ab3@29711> RTS
00038B5A <AmiBlitz3.ab3@29715>   TST.b fpu
00038B5E <AmiBlitz3.ab3@29716>   BEQ 'l1
00038B68 <AmiBlitz3.ab3@29719>   MOVE.l destpointer,newinitaddr
00038B6E <AmiBlitz3.ab3@29720>   JSR writeword
00038B74 <AmiBlitz3.ab3@29721>   JSR writelong
00038B76 <AmiBlitz3.ab3@29722> RTS
00038B78 <AmiBlitz3.ab3@29727>   TST.b (a5)
00038B7C <AmiBlitz3.ab3@29728>    BEQ.s 'll20
00038B80 <AmiBlitz3.ab3@29729>   CMP.b #$20,(a5)
00038B84 <AmiBlitz3.ab3@29730>    BNE.s 'll10
00038B86 <AmiBlitz3.ab3@29731>   ADDQ.l #1,a5
00038B8A <AmiBlitz3.ab3@29732>  BRA.s 'll21
00038B8E <AmiBlitz3.ab3@29735>   CMP.b #";",(a5)
00038B92 <AmiBlitz3.ab3@29736>   BNE.s 'll20
00038B94 <AmiBlitz3.ab3@29739>   TST.b (a5)+
00038B98 <AmiBlitz3.ab3@29740>   BEQ.s 'll23
00038B9C <AmiBlitz3.ab3@29741>  BRA.s 'll25
00038B9E <AmiBlitz3.ab3@29744>   SUBQ.l #1,a5
00038BA0 <AmiBlitz3.ab3@29747> RTS
00038BA4 <AmiBlitz3.ab3@29751>   MOVEM.l a2/d2,-(a7)
00038BA6 <AmiBlitz3.ab3@29752>   MOVEQ #0,d2
00038BAC <AmiBlitz3.ab3@29753>   LEA ptr_parameterstore,a0
00038BB2 <AmiBlitz3.ab3@29754>   LEA chartab,a2
00038BB4 <AmiBlitz3.ab3@29757>   MOVE.b (a5),d0
00038BB8 <AmiBlitz3.ab3@29758>   TST.b 0(a2,d0)
00038BBC <AmiBlitz3.ab3@29759>   BNE 'l10
00038BBE <AmiBlitz3.ab3@29760>   ADDQ.l #1,a5
00038BC0 <AmiBlitz3.ab3@29761>   MOVE.b d0,(a0)+
00038BC2 <AmiBlitz3.ab3@29762>   ADDQ.l #1,d2
00038BC6 <AmiBlitz3.ab3@29763>  BRA fc2
00038BC8 <AmiBlitz3.ab3@29766>   CLR.b (a0)+
00038BCE <AmiBlitz3.ab3@29767>   JSR findlabel2
00038BD0 <AmiBlitz3.ab3@29768>   MOVE.l a2,a0
00038BD4 <AmiBlitz3.ab3@29769>   MOVEM.l (a7)+,a2/d2
00038BD6 <AmiBlitz3.ab3@29770> RTS
00038BD8 <AmiBlitz3.ab3@29774>   TST.l d0
00038BDC <AmiBlitz3.ab3@29775>   BNE 'l10
00038BE2 <AmiBlitz3.ab3@29776>     MOVE.l #syntax_,-(a7)
00038BE8 <AmiBlitz3.ab3@29777>  JMP handle_compileerror
00038BEE <AmiBlitz3.ab3@29780>   CMP.l #1,d0
00038BF2 <AmiBlitz3.ab3@29781>   BNE 'l20
00038BF8 <AmiBlitz3.ab3@29782>     MOVE.l #overflow,-(a7)
00038BFE <AmiBlitz3.ab3@29783>  JMP handle_compileerror
00038C00 <AmiBlitz3.ab3@29786>   ADD.l a2,d0
00038C02 <AmiBlitz3.ab3@29787>   MOVE.l d0,-(a7)
00038C08 <AmiBlitz3.ab3@29788> JMP handle_compileerror
00038C0E <AmiBlitz3.ab3@29792>   JMP _return
00038C14 <AmiBlitz3.ab3@29793>   JMP _return
00038C1A <AmiBlitz3.ab3@29794>   JMP _return
00038C20 <AmiBlitz3.ab3@29795>   JMP _return
00038C26 <AmiBlitz3.ab3@29796>   JMP _return
00038C2C <AmiBlitz3.ab3@29797>   JMP _return
00038C32 <AmiBlitz3.ab3@29798>   JMP _return
00038C38 <AmiBlitz3.ab3@29799>   JMP _return
00038C3E <AmiBlitz3.ab3@29800>   JMP _return
00038C44 <AmiBlitz3.ab3@29801>   JMP _return
00038C4A <AmiBlitz3.ab3@29802>   JMP Atokejsr
00038C50 <AmiBlitz3.ab3@29803>   JMP writeinit
00038C56 <AmiBlitz3.ab3@29804>   JMP macroexecute
00038C5C <AmiBlitz3.ab3@29805>   JMP findnext
00038C62 <AmiBlitz3.ab3@29806>   JMP replacelib
00038C68 <AmiBlitz3.ab3@29807>   JMP findconstant2
00038C6E <AmiBlitz3.ab3@29808>   JMP findchar                                             ;char in d1
00038C74 <AmiBlitz3.ab3@29809>   JMP stripspaces
00038C7A <AmiBlitz3.ab3@29810>   JMP calc                                                 ;d0 varmode
00038C80 <AmiBlitz3.ab3@29811>   JMP error
00038C86 <AmiBlitz3.ab3@29812>   JMP writelong                                            ;d1 value
00038C8C <AmiBlitz3.ab3@29813>   JMP writeword                                            ;d1 value
00038C92 <AmiBlitz3.ab3@29814>   JMP writebyte                                            ;d1 value
00038C98 <AmiBlitz3.ab3@29815> JMP exit
00038C9C <AmiBlitz3.ab3@29819>   destpointer:    Ds.l 1                                ;pc org source      ;Ds.w 1
00038C9E <AmiBlitz3.ab3@29822>   fast            Dc.w 0
00038CA0 <AmiBlitz3.ab3@29823>   fpu             Dc.w 0
00038CA2 <AmiBlitz3.ab3@29824>   newsyntax       Dc.w 0
00038CA3 <AmiBlitz3.ab3@29826>   optistring      Dc.b 0
00038CA4 <AmiBlitz3.ab3@29827>   optistring2     Dc.b 0
00038CA5 <AmiBlitz3.ab3@29828>   optiarray       Dc.b 0
00038CA6 <AmiBlitz3.ab3@29829>   quickadd        Dc.b 0
00038CA8 <AmiBlitz3.ab3@29830>   newmode         Dc.w 0
00038CAA <AmiBlitz3.ab3@29831>   mode            Dc.w 0
00038CAC <AmiBlitz3.ab3@29832>   string1         Dc.w 0
00038CAE <AmiBlitz3.ab3@29833>   load_var_size   Dc.w 0
00038CB0 <AmiBlitz3.ab3@29834>   load_var_reg    Dc.w 0
00038CB4 <AmiBlitz3.ab3@29835>   load_var_addr   Dc.l 0
00038CB6 <AmiBlitz3.ab3@29836>   imm_size        Dc.w 0
00038CB8 <AmiBlitz3.ab3@29837>   imm_reg         Dc.w 0
00038CBC <AmiBlitz3.ab3@29838>   imm_addr        Dc.l 0
00038CBD <AmiBlitz3.ab3@29839>   iee             Dc.b 0
00038CBE <AmiBlitz3.ab3@29840>   _dcb            Dc.b 0
00038CC2 <AmiBlitz3.ab3@29841>   nohunkoffset    Dc.l 0
00038CC6 <AmiBlitz3.ab3@29844> teddata:        Dc.l tokens
00038CCA <AmiBlitz3.ab3@29845>                 Dc.l 0 ;compilermenu_entries               ; NOT used anymore
00038CCE <AmiBlitz3.ab3@29846>                 Dc.l read_xtrafile
00038CD2 <AmiBlitz3.ab3@29847>                 Dc.l write_xtrafile
00038CD6 <AmiBlitz3.ab3@29848>                 Dc.l call_menuentry                        ; compile AND RUN ?
00038CDA <AmiBlitz3.ab3@29849>                 Dc.l 0
00038CDE <AmiBlitz3.ab3@29850>                 Dc.b ":",34,".;"
00038CE2 <AmiBlitz3.ab3@29851>                 Dc.l "NEW1"
00038CE6 <AmiBlitz3.ab3@29852>                 Dc.l newtypebase
00038CEA <AmiBlitz3.ab3@29853> realconstbase:  Dc.l labelbase
00038CEE <AmiBlitz3.ab3@29854> deflib          Dc.l 0
00038CF2 <AmiBlitz3.ab3@29855> incd            Dc.l 0
00038CF6 <AmiBlitz3.ab3@29856>                 Dc.l 0
00038CFA <AmiBlitz3.ab3@29857>                 Dc.l 0
00038CFE <AmiBlitz3.ab3@29858>                 Dc.l 0
00038D00 <AmiBlitz3.ab3@29859> _return         RTS
00038D01 <AmiBlitz3.ab3@29860>                 Dc.b 0
00039101 <AmiBlitz3.ab3@29861> chartab2        Ds.l 256
00039105 <AmiBlitz3.ab3@29862> codeend         Dc.l 0
00039109 <AmiBlitz3.ab3@29863> hunkoffsetnum   Dc.l 0
0003910D <AmiBlitz3.ab3@29864> chipsize        Dc.l 0
00039111 <AmiBlitz3.ab3@29865> bsssize         Dc.l 0
00039115 <AmiBlitz3.ab3@29866> bssstart        Dc.l -1
00039119 <AmiBlitz3.ab3@29867> bssend          Dc.l -1
0003911D <AmiBlitz3.ab3@29868> chipstart       Dc.l -1
00039121 <AmiBlitz3.ab3@29869> chipend         Dc.l -1
00039122 <AmiBlitz3.ab3@29870> bssmode         Dc.b 0
00039123 <AmiBlitz3.ab3@29871> chipmode        Dc.b 0
00039124 <AmiBlitz3.ab3@29872> newhunk         Dc.b 0
00039128 <AmiBlitz3.ab3@29873> bssnum          Dc.l 0
0003912C <AmiBlitz3.ab3@29874> chipnum         Dc.l 0
00039130 <AmiBlitz3.ab3@29875> lastinstruction Dc.l 0
00039134 <AmiBlitz3.ab3@29876> lastinstructionaddr Dc.l 0
00039148 <AmiBlitz3.ab3@29877> hunkbegin       Dc.l $03F3,$00,$02,$00,$01
0003914C <AmiBlitz3.ab3@29878> tstsize1b:      Ds.l 1
00039150 <AmiBlitz3.ab3@29879> bsssize2        Dc.l 1
00039154 <AmiBlitz3.ab3@29880>                 Dc.l $03E9
00039158 <AmiBlitz3.ab3@29881> tstsize2b:      Dc.l $100
0003916C <AmiBlitz3.ab3@29882> hunkbegin2      Dc.l $03F3,$00,$03,$00,$02
00039170 <AmiBlitz3.ab3@29883> tstsize1c:      Ds.l 1
00039174 <AmiBlitz3.ab3@29884> bsssize3        Dc.l 1
00039178 <AmiBlitz3.ab3@29885> chipsize2       Dc.l 1
0003917C <AmiBlitz3.ab3@29886>                 Dc.l $3e9
00039180 <AmiBlitz3.ab3@29887> tstsize2c       Dc.l 0
00039190 <AmiBlitz3.ab3@29888> hunkend         Dc.l $3f2,$3eb,0,$3f2
000391A0 <AmiBlitz3.ab3@29889> hunkend2        Dc.l $3f2,$3ea,0,$3f2
000391A7 <AmiBlitz3.ab3@29890> strcpy          Dc.b "strcpy",0
000391AE <AmiBlitz3.ab3@29891> strcmp          Dc.b "strcmp",0
000391B5 <AmiBlitz3.ab3@29892> strvar          Dc.b "strvar",0
000391BA <AmiBlitz3.ab3@29893> qmul            Dc.b "qmul",0
000391BF <AmiBlitz3.ab3@29894> qdiv            Dc.b "qdiv",0
000391C6 <AmiBlitz3.ab3@29895> _MaxLen         Dc.b "maxlen",0
000391CB <AmiBlitz3.ab3@29896> notf            Dc.b "????",0
000391EE <AmiBlitz3.ab3@29898> errtext         Dc.b "only reg addressing Mode supported",0
00039218 <AmiBlitz3.ab3@29899> fpuerr          Dc.b "Instruction not yet supported by 68K FPU ",0
0003925A <AmiBlitz3.ab3@29900> cmplxerr        Dc.b "Formula too complex for 68K FPU or too much regload register used",0 : Even
0003925C <AmiBlitz3.ab3@29901> peeksize        Dc.w 0
00039260 <AmiBlitz3.ab3@29903> mainstart       Dc.l 0
00039261 <AmiBlitz3.ab3@29905> infunctioncode  Dc.b 0
00039263 <AmiBlitz3.ab3@29906> regnumstore     Dc.w 0
00039290 <AmiBlitz3.ab3@29907>                 Dc.b "$VER: AmiBlitz3 \\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
00039298 <AmiBlitz3.ab3@29908> testcode        Dc.b "print i",0
000392FC <AmiBlitz3.ab3@29909>                 Ds.b 100
0003930A <AmiBlitz3.ab3@29910> devo            Dc.b "developobject",0 : Even
0003931C <AmiBlitz3.ab3@29911> autostorename   Dc.b "__autoconstantnum",0
00039326 <AmiBlitz3.ab3@29912> _include        Dc.b "__include",0
0003932E <AmiBlitz3.ab3@29913> _debug          Dc.b "__debug",0
00039332 <AmiBlitz3.ab3@29914> unusedfunc      Dc.l 0
00039334 <AmiBlitz3.ab3@29918>   MOVE.l a0,d0
0003935E <AmiBlitz3.ab3@29919>   !basic
00039362 <AmiBlitz3.ab3@29920>   *olderror.l= PutD0
000393BC <AmiBlitz3.ab3@29921> 
000393F0 <AmiBlitz3.ab3@29922>   error_type$ = error$
0003948C <AmiBlitz3.ab3@29923> 
000394A0 <AmiBlitz3.ab3@29924>   If Peek.l (?beforeparameterfetch)
000394B6 <AmiBlitz3.ab3@29925>     MaxLen detokenline.s = 65536
000394F8 <AmiBlitz3.ab3@29926>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
00039508 <AmiBlitz3.ab3@29927>    *tn.preprocessor = Peek.l(?include_preprocessor)
00039532 <AmiBlitz3.ab3@29928>     written.l = preproc_DetokenizeLine{*tn,Peek.l (?beforeparameterfetch),&detokenline}
0003955A <AmiBlitz3.ab3@29929>     If written>0 Then Poke.b &detokenline+written,0
0003959E <AmiBlitz3.ab3@29930>     If written>40 Then Poke.s &detokenline+36,"..."   ; added to limit the wide of the error requester  tomsmart1
000395C8 <AmiBlitz3.ab3@29931>     sourceLineText.s = Peek.s(&detokenline)
000395CE <AmiBlitz3.ab3@29932>   Else
000395F6 <AmiBlitz3.ab3@29933>     sourceLineText = "NULL"
0003962A <AmiBlitz3.ab3@29935>   error_source$ = sourceLineText
0003967C <AmiBlitz3.ab3@29936>   error$ + sourceLineText
00039682 <AmiBlitz3.ab3@29937>   GetD0 &error$
000396A0 <AmiBlitz3.ab3@29938>   !asm
000396A2 <AmiBlitz3.ab3@29939>   MOVE.l d0,a0
000396A4 <AmiBlitz3.ab3@29940> RTS
000396A6 <AmiBlitz3.ab3@29944>   MOVE.l a0,-(a7)
000396A8 <AmiBlitz3.ab3@29945>   MOVE.l a0,d0
000396AA <AmiBlitz3.ab3@29946>   MOVE.l a5,a0                                             ;macro title
000396D4 <AmiBlitz3.ab3@29947>   !basic
000396D8 <AmiBlitz3.ab3@29948>   i = PutD0
000396DA <AmiBlitz3.ab3@29949>   MOVEQ #20,d0
000396DC <AmiBlitz3.ab3@29952>     MOVE.b -(a0),d1
000396E0 <AmiBlitz3.ab3@29953>     BEQ 'l1
000396E4 <AmiBlitz3.ab3@29954>     CMP.b #":",d1
000396E8 <AmiBlitz3.ab3@29955>     BEQ 'l1
000396EA <AmiBlitz3.ab3@29956>     SUBQ.l #1,d0
000396EE <AmiBlitz3.ab3@29957>     BNE 'l2
000396F0 <AmiBlitz3.ab3@29960>   ADDQ #1,a0
000396F2 <AmiBlitz3.ab3@29961>   MOVE.l a0,d0
000396F6 <AmiBlitz3.ab3@29962>   i2.l = PutD0
00039712 <AmiBlitz3.ab3@29963>   If Peek.w (?ininclude)>0
0003976C <AmiBlitz3.ab3@29964>     Poke.s (?includetemp2),incdim(Peek.w(?ininclude)-1)
0003977C <AmiBlitz3.ab3@29965>     errorline.l = Peek.l(?includeline);-1
000397A4 <AmiBlitz3.ab3@29966>     Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
000397CE <AmiBlitz3.ab3@29967>     errorfile.s = Peek.s(?includetemp2)
000397D4 <AmiBlitz3.ab3@29968>   Else
0003980C <AmiBlitz3.ab3@29969>     Poke.s (?includetemp2),Peek.s(?ptr_parameterstore)
00039822 <AmiBlitz3.ab3@29970>     errorline.l = Peek.l(?compilelinecounter) + 1
00039856 <AmiBlitz3.ab3@29971>     errorfile.s = cli_sourcefile
00039860 <AmiBlitz3.ab3@29974>   If i
00039904 <AmiBlitz3.ab3@29975>     errortext.s = !TRANS{Replace$(Peek.s(i),"\\0a","\n")}
00039982 <AmiBlitz3.ab3@29976>     errortext.s = Replace$(errortext,"\n","\\0a")
00039988 <AmiBlitz3.ab3@29977>   Else
000399B0 <AmiBlitz3.ab3@29978>     errortext.s = "???"
00039B28 <AmiBlitz3.ab3@29981>   NPrint "\\1b[1m",!TRANS{"Compiler Error"}," #",Peek.l(?errorcounter)," <",errorfile,"@",errorline,">\\1b[0m "
00039BF0 <AmiBlitz3.ab3@29982>   NPrint "  ",error_type$,"\\n  ",error_source$
00039C0E <AmiBlitz3.ab3@29986>   !asm
00039C10 <AmiBlitz3.ab3@29987>   MOVE.l (a7)+,a0
00039C12 <AmiBlitz3.ab3@29988> RTS
00039C14 <AmiBlitz3.ab3@29992>   MOVE.l a0,-(a7)
00039C16 <AmiBlitz3.ab3@29993>   MOVE.l a0,d0
00039C18 <AmiBlitz3.ab3@29994>   MOVE.l a5,a0                                             ;macro title
00039C42 <AmiBlitz3.ab3@29995>   !basic
00039C46 <AmiBlitz3.ab3@29996>   i = PutD0
00039C48 <AmiBlitz3.ab3@29997>   MOVEQ #20,d0
00039C4A <AmiBlitz3.ab3@30000>     MOVE.b -(a0),d1
00039C4E <AmiBlitz3.ab3@30001>     BEQ 'l1
00039C52 <AmiBlitz3.ab3@30002>     CMP.b #":",d1
00039C56 <AmiBlitz3.ab3@30003>     BEQ 'l1
00039C58 <AmiBlitz3.ab3@30004>     SUBQ.l #1,d0
00039C5C <AmiBlitz3.ab3@30005>     BNE 'l2
00039C5E <AmiBlitz3.ab3@30008>   ADDQ #1,a0
00039C60 <AmiBlitz3.ab3@30009>   MOVE.l a0,d0
00039C64 <AmiBlitz3.ab3@30010>   i2.l = PutD0
00039CE8 <AmiBlitz3.ab3@30011>   fid.l = file_Open{dos_AddPart{my_systemdir$,"ab_compileerror.txt"},#file_forcewrite}
00039CFC <AmiBlitz3.ab3@30012>   If fid <> -1
00039D18 <AmiBlitz3.ab3@30013>     If Peek.w (?ininclude)>0
00039D72 <AmiBlitz3.ab3@30014>       Poke$(?includetemp2),incdim(Peek.w(?ininclude)-1)
00039D78 <AmiBlitz3.ab3@30015>     Else
00039DA4 <AmiBlitz3.ab3@30016>       Poke$(?includetemp2),""
00039DCE <AmiBlitz3.ab3@30018>     a$ = Peek$(?includetemp2)
00039E40 <AmiBlitz3.ab3@30019>     x$ = Replace$(Peek$(i),"\\0a","\n")
00039E72 <AmiBlitz3.ab3@30020>     file_WriteLine{fid,x$}
00039EBC <AmiBlitz3.ab3@30021>     file_WriteLine{fid,Str$(Peek.l(?compilelinecounter) + 1)}
00039EE8 <AmiBlitz3.ab3@30022>     If a$
00039F1A <AmiBlitz3.ab3@30023>       file_WriteLine{fid,a$}
00039F64 <AmiBlitz3.ab3@30024>       file_WriteLine{fid,Str$(Peek.l(?includeline)-1)}
00039F8C <AmiBlitz3.ab3@30025>       Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
00039F92 <AmiBlitz3.ab3@30026>     Else
00039FB8 <AmiBlitz3.ab3@30027>       file_WriteLine{fid,"none"}
00039FE8 <AmiBlitz3.ab3@30029>     file_WriteLine{fid,Peek$(i2)}
0003A03E <AmiBlitz3.ab3@30030>     file_WriteLine{fid,Str$(Peek.l(?globallinecount))+" line(s) compiled"}
0003A088 <AmiBlitz3.ab3@30031>     file_WriteLine{fid,Hex$(Peek.w(?globalvarpointer))+" global var base"}
0003A092 <AmiBlitz3.ab3@30032>     file_Close{fid}
0003A0B0 <AmiBlitz3.ab3@30034>   !asm
0003A0B2 <AmiBlitz3.ab3@30035>   MOVE.l (a7)+,a0
0003A0B4 <AmiBlitz3.ab3@30036> RTS
0003A0DE <AmiBlitz3.ab3@30040>   !basic
0003A0E2 <AmiBlitz3.ab3@30041>   progress.l     = PutD0
0003A0F4 <AmiBlitz3.ab3@30042>   total.l        = Peek.w(?progressbar_width)
0003A112 <AmiBlitz3.ab3@30043>   calcpro        = (progress * 100) / total +1
0003A12A <AmiBlitz3.ab3@30044>   pass.l         = Peek.w(?pass) + 1           ; added +1 so the shown status info begin with 1 instead of 0  tomsmart1
0003A13C <AmiBlitz3.ab3@30045>   typ.l          = Peek.w(?compiler_job)
0003A15A <AmiBlitz3.ab3@30048>   If (pass><pass_old) OR (typ><typ_old)
0003A168 <AmiBlitz3.ab3@30050>     If pass_old><pass
0003A204 <AmiBlitz3.ab3@30051>       passtatusstr.s = !TRANS{"Pass"}+" "+Str$(pass)+"..."
0003A25A <AmiBlitz3.ab3@30052>       If cli_verbose>=1 Then NPrint passtatusstr        ; changed form 2 to get compilepass number in verbose mode 1  tomsmart1
0003A260 <AmiBlitz3.ab3@30055>     pass_old = pass
0003A266 <AmiBlitz3.ab3@30056>     typ_old  = typ
0003A26C <AmiBlitz3.ab3@30057>     update_comstatus_gui = True
0003A27E <AmiBlitz3.ab3@30058>     If typ=0
0003A35E <AmiBlitz3.ab3@30059>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Compiling Sources..."}
0003A366 <AmiBlitz3.ab3@30060>       calcpro = 0  ; set gauge to 0
0003A378 <AmiBlitz3.ab3@30062>     If typ=1
0003A458 <AmiBlitz3.ab3@30063>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Building Executable..."}
0003A460 <AmiBlitz3.ab3@30064>       calcpro = 0  ; set gauge to 0
0003A4B6 <AmiBlitz3.ab3@30067>     If cli_verbose>=3 Then NPrint comstatusstr
0003A4C4 <AmiBlitz3.ab3@30070>   If (calcpro >< calcpro_old)
0003A518 <AmiBlitz3.ab3@30071>     If cli_verbose>=4 Then NPrint calcpro,"% compiled..."
0003A51E <AmiBlitz3.ab3@30072>     calcpro_old = calcpro
0003A524 <AmiBlitz3.ab3@30073>     update_comstatus_gui = True
0003A53E <AmiBlitz3.ab3@30076>   If update_comstatus_gui = True                                     ; check if a update of the gui nessecary
0003A55C <AmiBlitz3.ab3@30077>     !asm
0003A58E <AmiBlitz3.ab3@30078> 
0003A5B8 <AmiBlitz3.ab3@30079>     !basic
0003A5BE <AmiBlitz3.ab3@30080>     update_comstatus_gui  = False ; because we update the gui
0003A5DC <AmiBlitz3.ab3@30082>   !asm
0003A5DE <AmiBlitz3.ab3@30083> RTS
0003A5E4 <AmiBlitz3.ab3@30088>   MOVE.w maxobject_pos,D5                                  ;max objects 1. visible
0003A5EA <AmiBlitz3.ab3@30089>   LEA maxobjects_value,A3                                  ;current value
0003A5F0 <AmiBlitz3.ab3@30090>   MOVEA.l libpointer,A2
0003A5F4 <AmiBlitz3.ab3@30093>   CMPA.w #$0,A2
0003A5F8 <AmiBlitz3.ab3@30094>   BEQ.w 'igot
0003A5FA <AmiBlitz3.ab3@30095>   MOVEA.l A2,A1
0003A5FE <AmiBlitz3.ab3@30096>   ADDA.l $12(A1),A1
0003A602 <AmiBlitz3.ab3@30097>   TST.w -$2(A1)
0003A606 <AmiBlitz3.ab3@30098>   BEQ.w 'ugwl2
0003A608 <AmiBlitz3.ab3@30099>   SUBQ.w #1,D5
0003A60C <AmiBlitz3.ab3@30100>   BMI.w 'ugw2
0003A60E <AmiBlitz3.ab3@30103>   MOVEA.l (A2),A2
0003A612 <AmiBlitz3.ab3@30104>  BRA.w 'ugwl
0003A616 <AmiBlitz3.ab3@30107>   MOVE.w (A3),-$4(A1)
0003A618 <AmiBlitz3.ab3@30110> RTS
0003A61E <AmiBlitz3.ab3@30114>   MOVE.w debugnest,d0
0003A624 <AmiBlitz3.ab3@30115>   LEA storedebugmode, a0
0003A62C <AmiBlitz3.ab3@30116>   MOVE.b 0(a0,d0.w),debugmode
0003A632 <AmiBlitz3.ab3@30117>   TST.w debugnest
0003A636 <AmiBlitz3.ab3@30118>   BEQ JUMP_unpairrunerrs
0003A63C <AmiBlitz3.ab3@30119>   SUBQ.w #1,debugnest
0003A63E <AmiBlitz3.ab3@30120> RTS
0003A644 <AmiBlitz3.ab3@30122> JUMP_runerrsoverflow JMP runerrsoverflow
0003A64A <AmiBlitz3.ab3@30123> JUMP_unpairrunerrs   JMP unpairrunerrs
0003A652 <AmiBlitz3.ab3@30127>   BCHG #$7,use_debugger
0003A65A <AmiBlitz3.ab3@30129>   BTST #$7,use_debugger
0003A65E <AmiBlitz3.ab3@30130>   BNE 'debugon
0003A664 <AmiBlitz3.ab3@30131>   CLR.w debugmode
0003A668 <AmiBlitz3.ab3@30132>  BRA.b 'debugoff
0003A66E <AmiBlitz3.ab3@30135>   SNE debugmode
0003A670 <AmiBlitz3.ab3@30138>   MOVE.l a0,-(a7)
0003A6A8 <AmiBlitz3.ab3@30141>   !ComData_SetB{comByte_DebugMode,debugmode}
0003A6AA <AmiBlitz3.ab3@30146>   MOVE.l (a7)+,a0
0003A6AC <AmiBlitz3.ab3@30147> RTS
0003A6B4 <AmiBlitz3.ab3@30152>   BTST #$7,use_debugger
0003A6B8 <AmiBlitz3.ab3@30154>   BNE 'debugon
0003A6BE <AmiBlitz3.ab3@30155>   CLR.w debugmode
0003A6C2 <AmiBlitz3.ab3@30156>  BRA.b 'debugoff
0003A6C8 <AmiBlitz3.ab3@30160>   SNE debugmode
0003A6CA <AmiBlitz3.ab3@30163> RTS
0003A6D0 <AmiBlitz3.ab3@30168>   ADDQ.w #1,debugnest
0003A6D6 <AmiBlitz3.ab3@30169>   MOVE.w debugnest,d0
0003A6DA <AmiBlitz3.ab3@30170>   CMP.w #18,d0
0003A6DE <AmiBlitz3.ab3@30171>    BGE JUMP_runerrsoverflow
0003A6E4 <AmiBlitz3.ab3@30172>   LEA storedebugmode, a0
0003A6EC <AmiBlitz3.ab3@30173>   MOVE.b debugmode,0( a0,d0.w)
0003A6F2 <AmiBlitz3.ab3@30177>   SF debugmode
0003A6F4 <AmiBlitz3.ab3@30178> RTS
0003A774 <AmiBlitz3.ab3@30181> usedpath:  Ds.l 32
0003A778 <AmiBlitz3.ab3@30185>   BEQ.w JUMP_syntaxerr
0003A77E <AmiBlitz3.ab3@30186>   LEA lastpath,A0
0003A782 <AmiBlitz3.ab3@30188>   MOVEM.l a0-a1/d0,-(a7)
0003A788 <AmiBlitz3.ab3@30189>   LEA lastpath2,a1
0003A78A <AmiBlitz3.ab3@30192>     MOVE.b (a0)+,(a1)+
0003A78E <AmiBlitz3.ab3@30193>   BNE 'l2
0003A792 <AmiBlitz3.ab3@30194>   MOVEM.l (a7)+,a0-a1/d0
0003A796 <AmiBlitz3.ab3@30195>   LEA usedpath(PC),A0
0003A79A <AmiBlitz3.ab3@30196>   MOVEM.l a0-a1/d0,-(a7)
0003A7A0 <AmiBlitz3.ab3@30197>   LEA lastpath,a1
0003A7A2 <AmiBlitz3.ab3@30200>     MOVE.b (a0)+,(a1)+
0003A7A6 <AmiBlitz3.ab3@30201>   BNE 'l1
0003A7AA <AmiBlitz3.ab3@30202>   MOVEM.l (a7)+,a0-a1/d0
0003A7AC <AmiBlitz3.ab3@30206>   TST.w D0
0003A7B0 <AmiBlitz3.ab3@30207>    BMI.w JUMP_syntaxerr
0003A7B2 <AmiBlitz3.ab3@30208>   MOVE.b D0,(A0)+
0003A7B6 <AmiBlitz3.ab3@30209>   BSR.w JUMP_get1bytemain
0003A7BA <AmiBlitz3.ab3@30210>    BNE.w 'loop
0003A7BE <AmiBlitz3.ab3@30213>   MOVE.b #$2,(A0)
0003A7C0 <AmiBlitz3.ab3@30214> RTS
0003A7C4 <AmiBlitz3.ab3@30218>   BEQ.w JUMP_syntaxerr
0003A7CA <AmiBlitz3.ab3@30219>   LEA path2,A0
0003A7CC <AmiBlitz3.ab3@30231>   TST.w D0
0003A7D0 <AmiBlitz3.ab3@30232>    BMI.w JUMP_syntaxerr
0003A7D2 <AmiBlitz3.ab3@30233>   MOVE.b D0,(A0)+
0003A7D6 <AmiBlitz3.ab3@30234>   BSR.w JUMP_get1bytemain
0003A7DA <AmiBlitz3.ab3@30235>    BNE.w 'loop
0003A7DE <AmiBlitz3.ab3@30238>   MOVE.b #$2,(A0)
0003A7E0 <AmiBlitz3.ab3@30239> RTS
0003A7E6 <AmiBlitz3.ab3@30242> JUMP_errormsg_reg JMP errormsg_reg
0003A7F0 <AmiBlitz3.ab3@30246>   MOVE.l #$f22d6780,fpucodeglobal
0003A7FA <AmiBlitz3.ab3@30247>   MOVE.l #$f22c6780,fpucodelocal
0003A800 <AmiBlitz3.ab3@30248>   LEA regtable,a0
0003A80A <AmiBlitz3.ab3@30249>   MOVE.l #7,maxregs
0003A80C <AmiBlitz3.ab3@30252>   MOVE.l (a0),d0
0003A810 <AmiBlitz3.ab3@30253>   BEQ 'e1
0003A812 <AmiBlitz3.ab3@30254>   CLR.l (a0)
0003A816 <AmiBlitz3.ab3@30255>   MOVE.w 4(a0),d0
0003A820 <AmiBlitz3.ab3@30256>   MOVE.l fpucodeglobal,fpucode
0003A824 <AmiBlitz3.ab3@30257>   TST.w 6(a0)
0003A828 <AmiBlitz3.ab3@30258>   BEQ 'glob
0003A832 <AmiBlitz3.ab3@30259>   MOVE.l fpucodelocal,fpucode
0003A838 <AmiBlitz3.ab3@30262>   MOVE.l fpucode,d1
0003A83E <AmiBlitz3.ab3@30263>   JSR writelong
0003A848 <AmiBlitz3.ab3@30264>   SUB.l #$80,fpucodelocal
0003A852 <AmiBlitz3.ab3@30265>   SUB.l #$80,fpucodeglobal
0003A854 <AmiBlitz3.ab3@30266>   MOVE.w d0,d1
0003A85A <AmiBlitz3.ab3@30267>   JSR writeword
0003A85C <AmiBlitz3.ab3@30268>   ADDQ #8,a0
0003A860 <AmiBlitz3.ab3@30269>  BRA 'again
0003A862 <AmiBlitz3.ab3@30272> RTS
0003A868 <AmiBlitz3.ab3@30275> JUMP_notypeerr2 JMP notypeerr
0003A86E <AmiBlitz3.ab3@30276> JUMP_illtypeerr JMP illtypeerr
0003A878 <AmiBlitz3.ab3@30279>   MOVE.l #$f22d4780,fpucodeglobal
0003A882 <AmiBlitz3.ab3@30280>   MOVE.l #$f22c4780,fpucodelocal
0003A888 <AmiBlitz3.ab3@30281>   LEA regtable,a0
0003A88A <AmiBlitz3.ab3@30282>   TST.l (a0)
0003A88E <AmiBlitz3.ab3@30283>    BNE JUMP_errormsg_reg
0003A890 <AmiBlitz3.ab3@30284>   MOVE.l d7,-(a7)
0003A892 <AmiBlitz3.ab3@30285>   SUBQ.l #1,a5
0003A898 <AmiBlitz3.ab3@30288>   JSR getparameter2
0003A89C <AmiBlitz3.ab3@30289>   BEQ.w 'nopar
0003A8A2 <AmiBlitz3.ab3@30290>   MOVE.w d0,lastchar
0003A8A8 <AmiBlitz3.ab3@30291>   JSR findvariable
0003A8AC <AmiBlitz3.ab3@30292>   BNE 'islocal
0003A8B6 <AmiBlitz3.ab3@30293>   MOVE.l fpucodeglobal,fpucode
0003A8C0 <AmiBlitz3.ab3@30294>   MOVE.l #3,maxregs
0003A8C2 <AmiBlitz3.ab3@30295>   MOVEQ #0,d7
0003A8CA <AmiBlitz3.ab3@30298>   CMP.l #newtype_float,$a(a2)                              ;is float type
0003A8CE <AmiBlitz3.ab3@30299>    BEQ 'doit
0003A8D6 <AmiBlitz3.ab3@30300>   CMP.l #newtype_double,$a(a2)
0003A8DA <AmiBlitz3.ab3@30301>    BNE JUMP_illtypeerr
0003A8E0 <AmiBlitz3.ab3@30304>   LEA regtable,a0
0003A8E2 <AmiBlitz3.ab3@30305>   MOVEQ #0,d0
0003A8E4 <AmiBlitz3.ab3@30308>   TST.l (a0)
0003A8E8 <AmiBlitz3.ab3@30309>    BEQ 'store
0003A8EA <AmiBlitz3.ab3@30310>   ADDQ.l #4,d0
0003A8EC <AmiBlitz3.ab3@30311>   ADDQ.l #8,a0
0003A8F2 <AmiBlitz3.ab3@30312>   CMP.l #16,d0
0003A8F6 <AmiBlitz3.ab3@30313>    BCS 'loop
0003A900 <AmiBlitz3.ab3@30314>   MOVE.l #2,maxregs
0003A906 <AmiBlitz3.ab3@30315>   CMP.l #20,d0
0003A90A <AmiBlitz3.ab3@30316>    BCS 'loop
0003A914 <AmiBlitz3.ab3@30317>   MOVE.l #1,maxregs
0003A91A <AmiBlitz3.ab3@30318>   CMP.l #24,d0
0003A91E <AmiBlitz3.ab3@30319>    BCS 'loop
0003A924 <AmiBlitz3.ab3@30320>  JMP toovarerr
0003A92A <AmiBlitz3.ab3@30323>   TST.b fpu
0003A92E <AmiBlitz3.ab3@30324>    BEQ 'nofpu
0003A930 <AmiBlitz3.ab3@30325>   MOVE.l a2,(a0)
0003A936 <AmiBlitz3.ab3@30326>   MOVE.w 4(a2),4(a0)
0003A93A <AmiBlitz3.ab3@30327>   MOVE.w d7,6(a0)
0003A940 <AmiBlitz3.ab3@30328>   MOVE.l fpucode,d1
0003A94A <AmiBlitz3.ab3@30329>   SUB.l #$80,fpucodeglobal
0003A954 <AmiBlitz3.ab3@30330>   SUB.l #$80,fpucodelocal
0003A95A <AmiBlitz3.ab3@30331>   JSR writelong
0003A95E <AmiBlitz3.ab3@30332>   MOVE.w 4(a2),d1
0003A964 <AmiBlitz3.ab3@30333>   JSR writeword
0003A96A <AmiBlitz3.ab3@30336>   MOVE.w lastchar,d0
0003A96E <AmiBlitz3.ab3@30337>   CMP.w #":",d0
0003A972 <AmiBlitz3.ab3@30338>    BEQ 'nopar
0003A974 <AmiBlitz3.ab3@30339>   TST.w d0
0003A978 <AmiBlitz3.ab3@30340>    BEQ 'nopar
0003A97C <AmiBlitz3.ab3@30341>   CMP.w #",",d0
0003A980 <AmiBlitz3.ab3@30342>   BNE JUMP_syntaxerr
0003A984 <AmiBlitz3.ab3@30343>  BRA 'l2
0003A986 <AmiBlitz3.ab3@30346>    MOVE.l (a7)+,d7
0003A988 <AmiBlitz3.ab3@30347>  RTS
0003A98A <AmiBlitz3.ab3@30350>   MOVEQ #1,d7
0003A992 <AmiBlitz3.ab3@30351>   MOVE.b #1,newvariable
0003A998 <AmiBlitz3.ab3@30352>   LEA firstlocal,a2
0003A99E <AmiBlitz3.ab3@30353>   JSR findvariable
0003A9A4 <AmiBlitz3.ab3@30354>   CLR.b newvariable
0003A9AA <AmiBlitz3.ab3@30355>   CMP.l #-1,d0
0003A9AE <AmiBlitz3.ab3@30356>   BEQ.w JUMP_notypeerr2
0003A9B8 <AmiBlitz3.ab3@30357>   MOVE.l fpucodelocal,fpucode
0003A9BC <AmiBlitz3.ab3@30358>  BRA 'go
0003A9C0 <AmiBlitz3.ab3@30361>   CMP.b #".",d0
0003A9C4 <AmiBlitz3.ab3@30362>    BNE 'l1
0003A9C8 <AmiBlitz3.ab3@30363>   BSR JUMP_get1bytemain
0003A9CC <AmiBlitz3.ab3@30364>   BSR JUMP_get1bytemain
0003A9D0 <AmiBlitz3.ab3@30367>   ORI .b #$20,d0
0003A9D4 <AmiBlitz3.ab3@30368>   CMP.b #"d",d0
0003A9D8 <AmiBlitz3.ab3@30369>    BNE JUMP_illeaerr
0003A9DC <AmiBlitz3.ab3@30370>   BSR JUMP_get1bytemain
0003A9E0 <AmiBlitz3.ab3@30371>   SUB.b #$30,d0
0003A9E4 <AmiBlitz3.ab3@30372>   CMP.b #$7,d0
0003A9E8 <AmiBlitz3.ab3@30373>    BGT JUMP_syntaxerr
0003A9EC <AmiBlitz3.ab3@30374>   MOVE.w #$49c0,d1
0003A9EE <AmiBlitz3.ab3@30375>   ADD.b d0,d1
0003A9F4 <AmiBlitz3.ab3@30376>   JSR writeword
0003A9F8 <AmiBlitz3.ab3@30377>   BSR JUMP_get1bytemain
0003A9FA <AmiBlitz3.ab3@30378> RTS
0003AA00 <AmiBlitz3.ab3@30382>   LEA lastpath,a0
0003AA04 <AmiBlitz3.ab3@30383>   LEA usedpath(PC),A1
0003AA06 <AmiBlitz3.ab3@30386>     MOVE.b (a0)+,(a1)+
0003AA0A <AmiBlitz3.ab3@30387>   BNE 'l1
0003AA10 <AmiBlitz3.ab3@30389>   LEA lastpath2,a0
0003AA16 <AmiBlitz3.ab3@30390>   LEA lastpath,A1
0003AA18 <AmiBlitz3.ab3@30393>     MOVE.b (a0)+,(a1)+
0003AA1C <AmiBlitz3.ab3@30394>   BNE 'l2
0003AA1E <AmiBlitz3.ab3@30395> RTS
0003AA24 <AmiBlitz3.ab3@30399>   TST.b objectcount
0003AA28 <AmiBlitz3.ab3@30400>   BEQ 'l2a
0003AA2E <AmiBlitz3.ab3@30401>  JMP macnesterr
0003AA34 <AmiBlitz3.ab3@30404>   LEA devo,a0
0003AA3A <AmiBlitz3.ab3@30405>   ADDQ.b #1,objectcount
0003AA3E <AmiBlitz3.ab3@30406>   MOVEM.l a1/d2,-(a7)
0003AA44 <AmiBlitz3.ab3@30407>   LEA ptr_parameterstore,a1
0003AA46 <AmiBlitz3.ab3@30410>     MOVE.b (a0)+,(a1)+
0003AA4A <AmiBlitz3.ab3@30411>   BNE 'l1
0003AA4C <AmiBlitz3.ab3@30413>   MOVEQ #13,d2
0003AA52 <AmiBlitz3.ab3@30414>   JSR findlabel2
0003AA56 <AmiBlitz3.ab3@30415>   BNE 'd
0003AA5A <AmiBlitz3.ab3@30416>   TST.l 8(a2)
0003AA5E <AmiBlitz3.ab3@30417>   BEQ 'd
0003AA64 <AmiBlitz3.ab3@30418>   SUBQ.b #1,objectcount
0003AA68 <AmiBlitz3.ab3@30419>   MOVEM.l (a7)+,a1/d2
0003AA6E <AmiBlitz3.ab3@30420>   JSR skiprest
0003AA76 <AmiBlitz3.ab3@30421>   MOVE.b #1,developobject
0003AA78 <AmiBlitz3.ab3@30422>  RTS
0003AA7C <AmiBlitz3.ab3@30425>   MOVEM.l (a7)+,a1/d2
0003AA84 <AmiBlitz3.ab3@30426>   MOVE.b #1,resdisable
0003AA8A <AmiBlitz3.ab3@30429>   CLR.b developobject
0003AA90 <AmiBlitz3.ab3@30430> JMP do_Macro
0003AA96 <AmiBlitz3.ab3@30433> JUMP_illeaerr JMP illeaerr
0003AA9C <AmiBlitz3.ab3@30437>   CLR.b typecheck
0003AAA2 <AmiBlitz3.ab3@30438>   CLR.b declare
0003AAA8 <AmiBlitz3.ab3@30439>   CLR.b declare2
0003AAAC <AmiBlitz3.ab3@30440>   SUB.b #$30,d0
0003AAB0 <AmiBlitz3.ab3@30441>   BTST #0,d0
0003AAB4 <AmiBlitz3.ab3@30442>   BEQ 'l1
0003AABC <AmiBlitz3.ab3@30443>   MOVE.b #1,declare
0003AAC0 <AmiBlitz3.ab3@30446>   BTST #1,d0
0003AAC4 <AmiBlitz3.ab3@30447>   BEQ 'l2
0003AACC <AmiBlitz3.ab3@30448>   MOVE.b #1,declare2
0003AAD0 <AmiBlitz3.ab3@30451>   BTST #2,d0
0003AAD4 <AmiBlitz3.ab3@30452>   BEQ 'l3
0003AADC <AmiBlitz3.ab3@30453>   MOVE.b #1,typecheck
0003AAE0 <AmiBlitz3.ab3@30456>   BSR.w JUMP_get1bytemain
0003AAE2 <AmiBlitz3.ab3@30457> RTS
0003AAE8 <AmiBlitz3.ab3@30459> JUMP_get1bytemain JMP get1bytemain
0003AB12 <AmiBlitz3.ab3@30463>   !basic
0003AB32 <AmiBlitz3.ab3@30465>   FillMem ?residents_table,?residents_table_end-?residents_table,0
0003AB50 <AmiBlitz3.ab3@30466>   !asm
0003AB52 <AmiBlitz3.ab3@30467> Return
0003AB54 <AmiBlitz3.ab3@30472>   MOVE.l d2,-(a7)                                          ; D2 -> stack
0003AB56 <AmiBlitz3.ab3@30473>   ADDQ #1,a5
0003AB58 <AmiBlitz3.ab3@30474>   MOVE.l a5,-(a7)
0003AB82 <AmiBlitz3.ab3@30475>   !basic
0003AB88 <AmiBlitz3.ab3@30476>   MOVE.l (a7)+,d0 : _myD0.l = PutD0
0003AB92 <AmiBlitz3.ab3@30477>   If _myD0
0003ABD2 <AmiBlitz3.ab3@30478>     newconst$ = UCase$(Peek.s(_myD0))
0003ABD8 <AmiBlitz3.ab3@30479>   Else
0003AC12 <AmiBlitz3.ab3@30480>     error{"INTERNAL: invalid pointer in check_newconstants!"}
0003AC3A <AmiBlitz3.ab3@30481>     nwconst$="xxx"
0003AC62 <AmiBlitz3.ab3@30483>   condata$ =""
0003AC72 <AmiBlitz3.ab3@30484>   Poke.b ?skip_bytes,0
0003ACCE <AmiBlitz3.ab3@30485>   If Left$(newconst$,2) = "__"
0003AD28 <AmiBlitz3.ab3@30486>     Select Mid$(newconst$,3,4)
0003AD4C <AmiBlitz3.ab3@30488>      Case "DATE"
0003ADA6 <AmiBlitz3.ab3@30489>       Select Mid$(newconst$,3,6)
0003ADE4 <AmiBlitz3.ab3@30490>       Case "DATE__" : DateFormat 1 : Poke.b ?skip_bytes,8
0003AE28 <AmiBlitz3.ab3@30491>       Case "DATE_G" : DateFormat 0 : Poke.b ?skip_bytes,12
0003AE36 <AmiBlitz3.ab3@30492>       End Select
0003AE44 <AmiBlitz3.ab3@30493>       i.l=SystemDate
0003AE6A <AmiBlitz3.ab3@30494>       condata$ = Date$ (i)
0003AEE8 <AmiBlitz3.ab3@30495>       condata$ = Replace$(condata$,"/",".")
0003AF12 <AmiBlitz3.ab3@30497>      Case "VER_"
0003AF22 <AmiBlitz3.ab3@30500>       actual_version.l = Peek.l(?versioninformation)
0003AF32 <AmiBlitz3.ab3@30501>       actual_build.l   = Peek.l(?number_of_builds)
0003AF56 <AmiBlitz3.ab3@30503>       Format ""
0003AFB0 <AmiBlitz3.ab3@30504>       Select Mid$(newconst$,3,9)
0003AFD4 <AmiBlitz3.ab3@30506>        Case "VER_MAJOR"
0003B010 <AmiBlitz3.ab3@30507>         condata$ = Str$(actual_version LSR 24)
0003B03A <AmiBlitz3.ab3@30509>        Case "VER_MINOR"
0003B07E <AmiBlitz3.ab3@30510>         condata$ = Str$((actual_version LSL 8) LSR 24)
0003B0A8 <AmiBlitz3.ab3@30512>        Case "VER_PATCH"
0003B0EC <AmiBlitz3.ab3@30513>         condata$ = Str$((actual_version LSL 16) LSR 24 )
0003B116 <AmiBlitz3.ab3@30515>        Case "VER_BUILD"
0003B13A <AmiBlitz3.ab3@30516>         Format ""
0003B16E <AmiBlitz3.ab3@30517>         condata$ = Str$(actual_build)
0003B174 <AmiBlitz3.ab3@30519>        Default
0003B19C <AmiBlitz3.ab3@30520>         condata$ = "{unknown compiler constant}"
0003B1AA <AmiBlitz3.ab3@30522>       End Select
0003B1CE <AmiBlitz3.ab3@30523>       Format ""
0003B1DE <AmiBlitz3.ab3@30524>       Poke.b ?skip_bytes,11
0003B208 <AmiBlitz3.ab3@30526>      Case "THIS"
0003B262 <AmiBlitz3.ab3@30527>       Select Mid$(newconst$,3,9)
0003B286 <AmiBlitz3.ab3@30529>        Case "THIS_FUNC"
0003B296 <AmiBlitz3.ab3@30530>         Poke.b ?skip_bytes,15
0003B2B6 <AmiBlitz3.ab3@30531>         If Peek.l(?currentfunction)<>0
0003B302 <AmiBlitz3.ab3@30532>           condata$ = Peek.s(Peek.l(?currentfunction) + 32 + #funcentry_extend + 1)
0003B308 <AmiBlitz3.ab3@30533>         Else
0003B330 <AmiBlitz3.ab3@30534>           condata$ = "GLOBAL"
0003B35A <AmiBlitz3.ab3@30537>        Case "THIS_INCL"
0003B36A <AmiBlitz3.ab3@30538>         Poke.b ?skip_bytes,14
0003B38A <AmiBlitz3.ab3@30539>         If Peek.l(?includetemp2)<>0
0003B3D8 <AmiBlitz3.ab3@30540>           condata$ = dos_FilePart{Peek$(?includetemp2)}
0003B402 <AmiBlitz3.ab3@30543>        Case "THIS_POIN"
0003B412 <AmiBlitz3.ab3@30544>         Poke.b ?skip_bytes,14
0003B432 <AmiBlitz3.ab3@30545>         If Peek.l(?currentfunction)<>0
0003B460 <AmiBlitz3.ab3@30546>           condata$ = Hex$(Peek.l(?currentfunction))
0003B46E <AmiBlitz3.ab3@30549>       End Select
0003B498 <AmiBlitz3.ab3@30551>      Case "CODE"
0003B4A8 <AmiBlitz3.ab3@30552>       Poke.b ?skip_bytes,10
0003B50A <AmiBlitz3.ab3@30553>       If Mid$(newconst$,3,8) = "CODELINE"
0003B546 <AmiBlitz3.ab3@30554>         condata$ = Str$(Peek.l(?globallinecount))
0003B554 <AmiBlitz3.ab3@30557>     End Select
0003B55A <AmiBlitz3.ab3@30559>   Else
0003B5AE <AmiBlitz3.ab3@30560>     Select Left$(newconst$,1)
0003B5D2 <AmiBlitz3.ab3@30562>      Case "R"
0003B5E2 <AmiBlitz3.ab3@30563>       Poke.b ?skip_bytes,3
0003B65A <AmiBlitz3.ab3@30564>       For i = 1 To Vallong(Mid$(newconst$,2,2))
0003B6DA <AmiBlitz3.ab3@30565>         condata$ = condata$ + Mid$(newconst$,4,1)
0003B6EA <AmiBlitz3.ab3@30566>       Next
0003B714 <AmiBlitz3.ab3@30568>      Case "N"
0003B724 <AmiBlitz3.ab3@30569>       Poke.b ?skip_bytes,1
0003B748 <AmiBlitz3.ab3@30570>       condata$ = Chr$(10)
0003B74E <AmiBlitz3.ab3@30572>      Default
0003B760 <AmiBlitz3.ab3@30573>       char1.b = Peek.b(&newconst$)
0003B778 <AmiBlitz3.ab3@30574>       char2.b = Peek.b(&newconst$+1)
0003B784 <AmiBlitz3.ab3@30575>       nibble1.l = -1
0003B790 <AmiBlitz3.ab3@30576>       nibble2.l = -1
0003B7CE <AmiBlitz3.ab3@30578>       If (char1>=@"0" AND char1<=@"9") Then nibble1 = char1-@"0"
0003B80C <AmiBlitz3.ab3@30579>       If (char2>=@"0" AND char2<=@"9") Then nibble2 = char2-@"0"
0003B850 <AmiBlitz3.ab3@30581>       If (char1>=@"a" AND char1<=@"f") Then nibble1 = char1-@"a" + 10
0003B894 <AmiBlitz3.ab3@30582>       If (char2>=@"a" AND char2<=@"f") Then nibble2 = char2-@"a" + 10
0003B8D8 <AmiBlitz3.ab3@30584>       If (char1>=@"A" AND char1<=@"F") Then nibble1 = char1-@"A" + 10
0003B91C <AmiBlitz3.ab3@30585>       If (char2>=@"A" AND char2<=@"F") Then nibble2 = char2-@"A" + 10
0003B942 <AmiBlitz3.ab3@30587>       If nibble1>=0 AND nibble2>=0
0003B958 <AmiBlitz3.ab3@30588>         newchar.l = (nibble1 LSL 4) + (nibble2)
0003B97C <AmiBlitz3.ab3@30589>         condata$ = Chr$(newchar)
0003B98C <AmiBlitz3.ab3@30590>         Poke.b ?skip_bytes,2
0003B99A <AmiBlitz3.ab3@30593>     End Select
0003B9FA <AmiBlitz3.ab3@30595>   If condata$ = "" AND Peek.b(?skip_bytes)=0
0003BB20 <AmiBlitz3.ab3@30596>     !cout{"detected unknown const: " + newconst$}
0003BB54 <AmiBlitz3.ab3@30597>     condata$ = newconst$
0003BB6A <AmiBlitz3.ab3@30600>   GetD0 FLen(condata$)-1                                    ; laenge zielstring -> Stack
0003BB6C <AmiBlitz3.ab3@30601>   MOVE.l d0,d2
0003BB6E <AmiBlitz3.ab3@30602>   MOVE.l d2,-(a7)
0003BB74 <AmiBlitz3.ab3@30604>   GetD0 &condata$                                          ; kopieren des neuen Strings in den Zielstring
0003BB76 <AmiBlitz3.ab3@30605>   MOVE.l d0,a0
0003BB78 <AmiBlitz3.ab3@30608>     MOVE.b (a0)+,d1
0003BB7E <AmiBlitz3.ab3@30609>     JSR pokedata1b
0003BB82 <AmiBlitz3.ab3@30610>  DBF d2,'l1
0003BBA0 <AmiBlitz3.ab3@30612>   !asm
0003BBA2 <AmiBlitz3.ab3@30613>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
0003BBA4 <AmiBlitz3.ab3@30614>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
0003BBA6 <AmiBlitz3.ab3@30615>   ADD.l d0,d2                                              ; eingefuegte chars zu D2 dazu
0003BBAC <AmiBlitz3.ab3@30616>   ADD.l #1,d2
0003BBB2 <AmiBlitz3.ab3@30618>   MOVE.l #0,d0                                             ; a5 um konstantennamen weiterschieben
0003BBB8 <AmiBlitz3.ab3@30619>   MOVE.b skip_bytes,D0
0003BBBA <AmiBlitz3.ab3@30620>   ADD.l D0,a5
0003BBBC <AmiBlitz3.ab3@30621> RTS
0003BBC0 <AmiBlitz3.ab3@30697>   MOVEM.l d0-d2/a0-a5,-(a7)
0003BBC6 <AmiBlitz3.ab3@30698>   TST.w proceduremode                                     ;1 in function
0003BBCA <AmiBlitz3.ab3@30699>   BEQ 'global
0003BBD0 <AmiBlitz3.ab3@30700>   LEA firstglob,a2
0003BBD6 <AmiBlitz3.ab3@30701>   JSR findvariable2
0003BBDA <AmiBlitz3.ab3@30702>   BEQ 'isused
0003BBE2 <AmiBlitz3.ab3@30703>   MOVE.b #1,newvariable
0003BBE8 <AmiBlitz3.ab3@30704>   LEA firstlocal,a2
0003BBEE <AmiBlitz3.ab3@30705>   JSR findvariable
0003BBF2 <AmiBlitz3.ab3@30706>   BEQ 'isused
0003BBF8 <AmiBlitz3.ab3@30707>   CLR.b newvariable
0003BBFC <AmiBlitz3.ab3@30708>   MOVEM.l (a7)+,d0-d2/a0-a5
0003BBFE <AmiBlitz3.ab3@30709>   RTS
0003BC04 <AmiBlitz3.ab3@30712>   JSR findvariable
0003BC08 <AmiBlitz3.ab3@30713>   BNE 'isunused
0003BC0E <AmiBlitz3.ab3@30716>    MOVE.w lastchar,-(a7)                                  ;get the typename from source
0003BC14 <AmiBlitz3.ab3@30717>    JSR getparameter2
0003BC1A <AmiBlitz3.ab3@30718>    MOVE.w (a7)+,lastchar
0003BC1E <AmiBlitz3.ab3@30719>    MOVE.l $a(a2),a0                                       ; get the name of the type
0003BC22 <AmiBlitz3.ab3@30720>    LEA $b(a0),a0
0003BC28 <AmiBlitz3.ab3@30721>    LEA ptr_parameterstore,a1
0003BC2A <AmiBlitz3.ab3@30724>    CMPM.b (a0)+,(a1)+                                     ; compare name
0003BC2E <AmiBlitz3.ab3@30725>    BNE'error
0003BC30 <AmiBlitz3.ab3@30726>    TST.b (a1)
0003BC34 <AmiBlitz3.ab3@30727> 
0003BC36 <AmiBlitz3.ab3@30728>    TST.b (a0)
0003BC3A <AmiBlitz3.ab3@30729>    BNE 'error
0003BC3E <AmiBlitz3.ab3@30732>   MOVEM.l (a7)+,d0-d2/a0-a5
0003BC40 <AmiBlitz3.ab3@30733>  RTS
0003BC46 <AmiBlitz3.ab3@30736> JMP errormsg_declaredtwice
0003BC4A <AmiBlitz3.ab3@30740>   MOVEM.l a3/d1,-(a7)
0003BC50 <AmiBlitz3.ab3@30742>   CLR.b a4a5store
0003BC52 <AmiBlitz3.ab3@30745>   MOVE.b (a3)+,d1
0003BC56 <AmiBlitz3.ab3@30746>   CMP.b #$15,d1
0003BC5A <AmiBlitz3.ab3@30747>   BEQ 'find
0003BC5E <AmiBlitz3.ab3@30748>   CMP.b #$14,d1
0003BC62 <AmiBlitz3.ab3@30749>   BEQ 'find
0003BC66 <AmiBlitz3.ab3@30750>   CMP.b #$ff,d1
0003BC6A <AmiBlitz3.ab3@30751>   BNE 'continue
0003BC6E <AmiBlitz3.ab3@30752>   BRA 'notfind
0003BC74 <AmiBlitz3.ab3@30755>   MOVE.l #$48e7000c,d1                  ; write 68k movem.l a4/a5,-(a7)
0003BC7A <AmiBlitz3.ab3@30756>   JSR writelong
0003BC82 <AmiBlitz3.ab3@30757>   MOVE.b #1,a4a5store
0003BC86 <AmiBlitz3.ab3@30760>   MOVEM.l (a7)+,a3/d1
0003BC88 <AmiBlitz3.ab3@30761> RTS
0003BC8E <AmiBlitz3.ab3@30765>   TST.b a4a5store
0003BC92 <AmiBlitz3.ab3@30766>   BEQ 'no
0003BC98 <AmiBlitz3.ab3@30767>   MOVE.l #$4cdf3000,d1                  ; write 68k movem.l (a7)+,a4/a5
0003BC9E <AmiBlitz3.ab3@30768>   JSR writelong
0003BCA4 <AmiBlitz3.ab3@30769>   CLR.b a4a5store
0003BCA6 <AmiBlitz3.ab3@30772> RTS
0003BCA6 <internal_commands.ab3@1> INCLUDE "internal_commands.ab3"
0003BCAA <internal_commands.ab3@13> INCLUDE "internal_commands.ab3"
0003BCAC <internal_commands.ab3@15> INCLUDE "internal_commands.ab3"
0003BCB4 <internal_commands.ab3@16> INCLUDE "internal_commands.ab3"
0003BCC0 <internal_commands.ab3@17> INCLUDE "internal_commands.ab3"
0003BCC4 <internal_commands.ab3@21> INCLUDE "internal_commands.ab3"
0003BCC6 <internal_commands.ab3@22> INCLUDE "internal_commands.ab3"
0003BCCA <internal_commands.ab3@23> INCLUDE "internal_commands.ab3"
0003BD13 <internal_commands.ab3@24> INCLUDE "internal_commands.ab3"
0003BD14 <internal_commands.ab3@25> INCLUDE "internal_commands.ab3"
0003BD18 <internal_commands.ab3@28> INCLUDE "internal_commands.ab3"
0003BD1A <internal_commands.ab3@29> INCLUDE "internal_commands.ab3"
0003BD1E <internal_commands.ab3@30> INCLUDE "internal_commands.ab3"
0003BD3A <internal_commands.ab3@31> INCLUDE "internal_commands.ab3"
0003BD3E <internal_commands.ab3@35> INCLUDE "internal_commands.ab3"
0003BD40 <internal_commands.ab3@36> INCLUDE "internal_commands.ab3"
0003BD44 <internal_commands.ab3@37> INCLUDE "internal_commands.ab3"
0003BDA1 <internal_commands.ab3@38> INCLUDE "internal_commands.ab3"
0003BDA2 <internal_commands.ab3@39> INCLUDE "internal_commands.ab3"
0003BDA6 <internal_commands.ab3@42> INCLUDE "internal_commands.ab3"
0003BDA8 <internal_commands.ab3@43> INCLUDE "internal_commands.ab3"
0003BDAD <internal_commands.ab3@44> INCLUDE "internal_commands.ab3"
0003BDBD <internal_commands.ab3@45> INCLUDE "internal_commands.ab3"
0003BDBE <internal_commands.ab3@46> INCLUDE "internal_commands.ab3"
0003BDC2 <internal_commands.ab3@49> INCLUDE "internal_commands.ab3"
0003BDC4 <internal_commands.ab3@50> INCLUDE "internal_commands.ab3"
0003BDCA <internal_commands.ab3@51> INCLUDE "internal_commands.ab3"
0003BDDA <internal_commands.ab3@52> INCLUDE "internal_commands.ab3"
0003BDDE <internal_commands.ab3@56> INCLUDE "internal_commands.ab3"
0003BDE0 <internal_commands.ab3@57> INCLUDE "internal_commands.ab3"
0003BDE7 <internal_commands.ab3@58> INCLUDE "internal_commands.ab3"
0003BDE8 <internal_commands.ab3@59> INCLUDE "internal_commands.ab3"
0003BDEC <internal_commands.ab3@63> INCLUDE "internal_commands.ab3"
0003BDEE <internal_commands.ab3@64> INCLUDE "internal_commands.ab3"
0003BDF8 <internal_commands.ab3@65> INCLUDE "internal_commands.ab3"
0003BE2B <internal_commands.ab3@66> INCLUDE "internal_commands.ab3"
0003BE2C <internal_commands.ab3@67> INCLUDE "internal_commands.ab3"
0003BE30 <internal_commands.ab3@70> INCLUDE "internal_commands.ab3"
0003BE32 <internal_commands.ab3@71> INCLUDE "internal_commands.ab3"
0003BE3B <internal_commands.ab3@72> INCLUDE "internal_commands.ab3"
0003BE76 <internal_commands.ab3@73> INCLUDE "internal_commands.ab3"
0003BE7A <internal_commands.ab3@77> INCLUDE "internal_commands.ab3"
0003BE7C <internal_commands.ab3@78> INCLUDE "internal_commands.ab3"
0003BE86 <internal_commands.ab3@79> INCLUDE "internal_commands.ab3"
0003BE87 <internal_commands.ab3@80> INCLUDE "internal_commands.ab3"
0003BE88 <internal_commands.ab3@81> INCLUDE "internal_commands.ab3"
0003BE8C <internal_commands.ab3@84> INCLUDE "internal_commands.ab3"
0003BE8E <internal_commands.ab3@85> INCLUDE "internal_commands.ab3"
0003BE91 <internal_commands.ab3@86> INCLUDE "internal_commands.ab3"
0003BEA8 <internal_commands.ab3@87> INCLUDE "internal_commands.ab3"
0003BEAC <internal_commands.ab3@91> INCLUDE "internal_commands.ab3"
0003BEAE <internal_commands.ab3@92> INCLUDE "internal_commands.ab3"
0003BEB4 <internal_commands.ab3@93> INCLUDE "internal_commands.ab3"
0003BEC1 <internal_commands.ab3@94> INCLUDE "internal_commands.ab3"
0003BEC2 <internal_commands.ab3@95> INCLUDE "internal_commands.ab3"
0003BEC6 <internal_commands.ab3@98> INCLUDE "internal_commands.ab3"
0003BEC8 <internal_commands.ab3@99> INCLUDE "internal_commands.ab3"
0003BECE <internal_commands.ab3@100> INCLUDE "internal_commands.ab3"
0003BEDA <internal_commands.ab3@101> INCLUDE "internal_commands.ab3"
0003BEDE <internal_commands.ab3@105> INCLUDE "internal_commands.ab3"
0003BEE0 <internal_commands.ab3@106> INCLUDE "internal_commands.ab3"
0003BEE7 <internal_commands.ab3@107> INCLUDE "internal_commands.ab3"
0003BEF4 <internal_commands.ab3@108> INCLUDE "internal_commands.ab3"
0003BEF8 <internal_commands.ab3@112> INCLUDE "internal_commands.ab3"
0003BEFA <internal_commands.ab3@113> INCLUDE "internal_commands.ab3"
0003BEFF <internal_commands.ab3@114> INCLUDE "internal_commands.ab3"
0003BF0C <internal_commands.ab3@115> INCLUDE "internal_commands.ab3"
0003BF10 <internal_commands.ab3@119> INCLUDE "internal_commands.ab3"
0003BF12 <internal_commands.ab3@120> INCLUDE "internal_commands.ab3"
0003BF1A <internal_commands.ab3@121> INCLUDE "internal_commands.ab3"
0003BF1B <internal_commands.ab3@122> INCLUDE "internal_commands.ab3"
0003BF1C <internal_commands.ab3@123> INCLUDE "internal_commands.ab3"
0003BF20 <internal_commands.ab3@126> INCLUDE "internal_commands.ab3"
0003BF22 <internal_commands.ab3@127> INCLUDE "internal_commands.ab3"
0003BF2A <internal_commands.ab3@128> INCLUDE "internal_commands.ab3"
0003BF2B <internal_commands.ab3@129> INCLUDE "internal_commands.ab3"
0003BF2C <internal_commands.ab3@130> INCLUDE "internal_commands.ab3"
0003BF30 <internal_commands.ab3@133> INCLUDE "internal_commands.ab3"
0003BF32 <internal_commands.ab3@134> INCLUDE "internal_commands.ab3"
0003BF3B <internal_commands.ab3@135> INCLUDE "internal_commands.ab3"
0003BF46 <internal_commands.ab3@136> INCLUDE "internal_commands.ab3"
0003BF4A <internal_commands.ab3@140> INCLUDE "internal_commands.ab3"
0003BF4C <internal_commands.ab3@141> INCLUDE "internal_commands.ab3"
0003BF54 <internal_commands.ab3@142> INCLUDE "internal_commands.ab3"
0003BF5F <internal_commands.ab3@143> INCLUDE "internal_commands.ab3"
0003BF60 <internal_commands.ab3@144> INCLUDE "internal_commands.ab3"
0003BF64 <internal_commands.ab3@147> INCLUDE "internal_commands.ab3"
0003BF66 <internal_commands.ab3@148> INCLUDE "internal_commands.ab3"
0003BF6D <internal_commands.ab3@149> INCLUDE "internal_commands.ab3"
0003BFCF <internal_commands.ab3@150> INCLUDE "internal_commands.ab3"
0003BFD0 <internal_commands.ab3@151> INCLUDE "internal_commands.ab3"
0003BFD4 <internal_commands.ab3@154> INCLUDE "internal_commands.ab3"
0003BFD6 <internal_commands.ab3@155> INCLUDE "internal_commands.ab3"
0003BFDD <internal_commands.ab3@156> INCLUDE "internal_commands.ab3"
0003BFEC <internal_commands.ab3@157> INCLUDE "internal_commands.ab3"
0003BFF0 <internal_commands.ab3@161> INCLUDE "internal_commands.ab3"
0003BFF2 <internal_commands.ab3@162> INCLUDE "internal_commands.ab3"
0003BFF6 <internal_commands.ab3@163> INCLUDE "internal_commands.ab3"
0003C02C <internal_commands.ab3@164> INCLUDE "internal_commands.ab3"
0003C030 <internal_commands.ab3@168> INCLUDE "internal_commands.ab3"
0003C032 <internal_commands.ab3@169> INCLUDE "internal_commands.ab3"
0003C037 <internal_commands.ab3@170> INCLUDE "internal_commands.ab3"
0003C046 <internal_commands.ab3@171> INCLUDE "internal_commands.ab3"
0003C04A <internal_commands.ab3@175> INCLUDE "internal_commands.ab3"
0003C04C <internal_commands.ab3@176> INCLUDE "internal_commands.ab3"
0003C04F <internal_commands.ab3@177> INCLUDE "internal_commands.ab3"
0003C070 <internal_commands.ab3@178> INCLUDE "internal_commands.ab3"
0003C074 <internal_commands.ab3@182> INCLUDE "internal_commands.ab3"
0003C076 <internal_commands.ab3@183> INCLUDE "internal_commands.ab3"
0003C07B <internal_commands.ab3@184> INCLUDE "internal_commands.ab3"
0003C087 <internal_commands.ab3@185> INCLUDE "internal_commands.ab3"
0003C088 <internal_commands.ab3@186> INCLUDE "internal_commands.ab3"
0003C08C <internal_commands.ab3@189> INCLUDE "internal_commands.ab3"
0003C08E <internal_commands.ab3@190> INCLUDE "internal_commands.ab3"
0003C093 <internal_commands.ab3@191> INCLUDE "internal_commands.ab3"
0003C0AA <internal_commands.ab3@192> INCLUDE "internal_commands.ab3"
0003C0AE <internal_commands.ab3@196> INCLUDE "internal_commands.ab3"
0003C0B0 <internal_commands.ab3@197> INCLUDE "internal_commands.ab3"
0003C0B5 <internal_commands.ab3@198> INCLUDE "internal_commands.ab3"
0003C0C4 <internal_commands.ab3@199> INCLUDE "internal_commands.ab3"
0003C0C8 <internal_commands.ab3@203> INCLUDE "internal_commands.ab3"
0003C0CA <internal_commands.ab3@204> INCLUDE "internal_commands.ab3"
0003C0CF <internal_commands.ab3@205> INCLUDE "internal_commands.ab3"
0003C0EE <internal_commands.ab3@206> INCLUDE "internal_commands.ab3"
0003C0F2 <internal_commands.ab3@210> INCLUDE "internal_commands.ab3"
0003C0F4 <internal_commands.ab3@211> INCLUDE "internal_commands.ab3"
0003C0F9 <internal_commands.ab3@212> INCLUDE "internal_commands.ab3"
0003C118 <internal_commands.ab3@213> INCLUDE "internal_commands.ab3"
0003C11C <internal_commands.ab3@217> INCLUDE "internal_commands.ab3"
0003C11E <internal_commands.ab3@218> INCLUDE "internal_commands.ab3"
0003C124 <internal_commands.ab3@219> INCLUDE "internal_commands.ab3"
0003C125 <internal_commands.ab3@220> INCLUDE "internal_commands.ab3"
0003C126 <internal_commands.ab3@221> INCLUDE "internal_commands.ab3"
0003C12A <internal_commands.ab3@224> INCLUDE "internal_commands.ab3"
0003C12C <internal_commands.ab3@225> INCLUDE "internal_commands.ab3"
0003C131 <internal_commands.ab3@226> INCLUDE "internal_commands.ab3"
0003C132 <internal_commands.ab3@227> INCLUDE "internal_commands.ab3"
0003C136 <internal_commands.ab3@231> INCLUDE "internal_commands.ab3"
0003C138 <internal_commands.ab3@232> INCLUDE "internal_commands.ab3"
0003C13D <internal_commands.ab3@233> INCLUDE "internal_commands.ab3"
0003C14A <internal_commands.ab3@234> INCLUDE "internal_commands.ab3"
0003C14E <internal_commands.ab3@238> INCLUDE "internal_commands.ab3"
0003C150 <internal_commands.ab3@239> INCLUDE "internal_commands.ab3"
0003C155 <internal_commands.ab3@240> INCLUDE "internal_commands.ab3"
0003C164 <internal_commands.ab3@241> INCLUDE "internal_commands.ab3"
0003C168 <internal_commands.ab3@245> INCLUDE "internal_commands.ab3"
0003C16A <internal_commands.ab3@246> INCLUDE "internal_commands.ab3"
0003C16F <internal_commands.ab3@247> INCLUDE "internal_commands.ab3"
0003C17E <internal_commands.ab3@248> INCLUDE "internal_commands.ab3"
0003C182 <internal_commands.ab3@254> INCLUDE "internal_commands.ab3"
0003C184 <internal_commands.ab3@255> INCLUDE "internal_commands.ab3"
0003C18A <internal_commands.ab3@256> INCLUDE "internal_commands.ab3"
0003C1A7 <internal_commands.ab3@257> INCLUDE "internal_commands.ab3"
0003C1A8 <internal_commands.ab3@258> INCLUDE "internal_commands.ab3"
0003C1AC <internal_commands.ab3@261> INCLUDE "internal_commands.ab3"
0003C1AE <internal_commands.ab3@262> INCLUDE "internal_commands.ab3"
0003C1B4 <internal_commands.ab3@263> INCLUDE "internal_commands.ab3"
0003C1D1 <internal_commands.ab3@264> INCLUDE "internal_commands.ab3"
0003C1D2 <internal_commands.ab3@265> INCLUDE "internal_commands.ab3"
0003C1D6 <internal_commands.ab3@268> INCLUDE "internal_commands.ab3"
0003C1D8 <internal_commands.ab3@269> INCLUDE "internal_commands.ab3"
0003C1DB <internal_commands.ab3@270> INCLUDE "internal_commands.ab3"
0003C1F2 <internal_commands.ab3@271> INCLUDE "internal_commands.ab3"
0003C1F6 <internal_commands.ab3@275> INCLUDE "internal_commands.ab3"
0003C1F8 <internal_commands.ab3@276> INCLUDE "internal_commands.ab3"
0003C1FB <internal_commands.ab3@277> INCLUDE "internal_commands.ab3"
0003C20A <internal_commands.ab3@278> INCLUDE "internal_commands.ab3"
0003C20E <internal_commands.ab3@282> INCLUDE "internal_commands.ab3"
0003C210 <internal_commands.ab3@283> INCLUDE "internal_commands.ab3"
0003C215 <internal_commands.ab3@284> INCLUDE "internal_commands.ab3"
0003C216 <internal_commands.ab3@285> INCLUDE "internal_commands.ab3"
0003C21A <internal_commands.ab3@289> INCLUDE "internal_commands.ab3"
0003C21C <internal_commands.ab3@290> INCLUDE "internal_commands.ab3"
0003C220 <internal_commands.ab3@291> INCLUDE "internal_commands.ab3"
0003C235 <internal_commands.ab3@292> INCLUDE "internal_commands.ab3"
0003C236 <internal_commands.ab3@293> INCLUDE "internal_commands.ab3"
0003C23A <internal_commands.ab3@296> INCLUDE "internal_commands.ab3"
0003C23C <internal_commands.ab3@297> INCLUDE "internal_commands.ab3"
0003C243 <internal_commands.ab3@298> INCLUDE "internal_commands.ab3"
0003C25C <internal_commands.ab3@299> INCLUDE "internal_commands.ab3"
0003C260 <internal_commands.ab3@303> INCLUDE "internal_commands.ab3"
0003C262 <internal_commands.ab3@304> INCLUDE "internal_commands.ab3"
0003C269 <internal_commands.ab3@305> INCLUDE "internal_commands.ab3"
0003C274 <internal_commands.ab3@306> INCLUDE "internal_commands.ab3"
0003C278 <internal_commands.ab3@312> INCLUDE "internal_commands.ab3"
0003C27A <internal_commands.ab3@313> INCLUDE "internal_commands.ab3"
0003C27F <internal_commands.ab3@314> INCLUDE "internal_commands.ab3"
0003C296 <internal_commands.ab3@315> INCLUDE "internal_commands.ab3"
0003C29A <internal_commands.ab3@319> INCLUDE "internal_commands.ab3"
0003C29C <internal_commands.ab3@320> INCLUDE "internal_commands.ab3"
0003C2A0 <internal_commands.ab3@321> INCLUDE "internal_commands.ab3"
0003C2B7 <internal_commands.ab3@322> INCLUDE "internal_commands.ab3"
0003C2B8 <internal_commands.ab3@323> INCLUDE "internal_commands.ab3"
0003C2BC <internal_commands.ab3@326> INCLUDE "internal_commands.ab3"
0003C2BE <internal_commands.ab3@327> INCLUDE "internal_commands.ab3"
0003C2C3 <internal_commands.ab3@328> INCLUDE "internal_commands.ab3"
0003C2C4 <internal_commands.ab3@329> INCLUDE "internal_commands.ab3"
0003C2C8 <internal_commands.ab3@333> INCLUDE "internal_commands.ab3"
0003C2CA <internal_commands.ab3@334> INCLUDE "internal_commands.ab3"
0003C2CF <internal_commands.ab3@335> INCLUDE "internal_commands.ab3"
0003C2D3 <internal_commands.ab3@336> INCLUDE "internal_commands.ab3"
0003C2D4 <internal_commands.ab3@337> INCLUDE "internal_commands.ab3"
0003C2D8 <internal_commands.ab3@340> INCLUDE "internal_commands.ab3"
0003C2DA <internal_commands.ab3@341> INCLUDE "internal_commands.ab3"
0003C2E1 <internal_commands.ab3@342> INCLUDE "internal_commands.ab3"
0003C2F9 <internal_commands.ab3@343> INCLUDE "internal_commands.ab3"
0003C2FA <internal_commands.ab3@344> INCLUDE "internal_commands.ab3"
0003C2FE <internal_commands.ab3@347> INCLUDE "internal_commands.ab3"
0003C300 <internal_commands.ab3@348> INCLUDE "internal_commands.ab3"
0003C307 <internal_commands.ab3@349> INCLUDE "internal_commands.ab3"
0003C30C <internal_commands.ab3@350> INCLUDE "internal_commands.ab3"
0003C310 <internal_commands.ab3@354> INCLUDE "internal_commands.ab3"
0003C312 <internal_commands.ab3@355> INCLUDE "internal_commands.ab3"
0003C319 <internal_commands.ab3@356> INCLUDE "internal_commands.ab3"
0003C31E <internal_commands.ab3@357> INCLUDE "internal_commands.ab3"
0003C322 <internal_commands.ab3@361> INCLUDE "internal_commands.ab3"
0003C324 <internal_commands.ab3@362> INCLUDE "internal_commands.ab3"
0003C32B <internal_commands.ab3@363> INCLUDE "internal_commands.ab3"
0003C346 <internal_commands.ab3@364> INCLUDE "internal_commands.ab3"
0003C34A <internal_commands.ab3@368> INCLUDE "internal_commands.ab3"
0003C34C <internal_commands.ab3@369> INCLUDE "internal_commands.ab3"
0003C354 <internal_commands.ab3@370> INCLUDE "internal_commands.ab3"
0003C36D <internal_commands.ab3@371> INCLUDE "internal_commands.ab3"
0003C36E <internal_commands.ab3@372> INCLUDE "internal_commands.ab3"
0003C372 <internal_commands.ab3@375> INCLUDE "internal_commands.ab3"
0003C374 <internal_commands.ab3@376> INCLUDE "internal_commands.ab3"
0003C37A <internal_commands.ab3@377> INCLUDE "internal_commands.ab3"
0003C37B <internal_commands.ab3@378> INCLUDE "internal_commands.ab3"
0003C37C <internal_commands.ab3@379> INCLUDE "internal_commands.ab3"
0003C380 <internal_commands.ab3@382> INCLUDE "internal_commands.ab3"
0003C382 <internal_commands.ab3@383> INCLUDE "internal_commands.ab3"
0003C388 <internal_commands.ab3@384> INCLUDE "internal_commands.ab3"
0003C389 <internal_commands.ab3@385> INCLUDE "internal_commands.ab3"
0003C38A <internal_commands.ab3@386> INCLUDE "internal_commands.ab3"
0003C38E <internal_commands.ab3@389> INCLUDE "internal_commands.ab3"
0003C390 <internal_commands.ab3@390> INCLUDE "internal_commands.ab3"
0003C397 <internal_commands.ab3@391> INCLUDE "internal_commands.ab3"
0003C398 <internal_commands.ab3@392> INCLUDE "internal_commands.ab3"
0003C39C <internal_commands.ab3@396> INCLUDE "internal_commands.ab3"
0003C39E <internal_commands.ab3@397> INCLUDE "internal_commands.ab3"
0003C3A4 <internal_commands.ab3@398> INCLUDE "internal_commands.ab3"
0003C3AD <internal_commands.ab3@399> INCLUDE "internal_commands.ab3"
0003C3AE <internal_commands.ab3@400> INCLUDE "internal_commands.ab3"
0003C3B2 <internal_commands.ab3@403> INCLUDE "internal_commands.ab3"
0003C3B4 <internal_commands.ab3@404> INCLUDE "internal_commands.ab3"
0003C3BC <internal_commands.ab3@405> INCLUDE "internal_commands.ab3"
0003C3C9 <internal_commands.ab3@406> INCLUDE "internal_commands.ab3"
0003C3CA <internal_commands.ab3@407> INCLUDE "internal_commands.ab3"
0003C3CE <internal_commands.ab3@410> INCLUDE "internal_commands.ab3"
0003C3D0 <internal_commands.ab3@411> INCLUDE "internal_commands.ab3"
0003C3D8 <internal_commands.ab3@412> INCLUDE "internal_commands.ab3"
0003C3E5 <internal_commands.ab3@413> INCLUDE "internal_commands.ab3"
0003C3E6 <internal_commands.ab3@414> INCLUDE "internal_commands.ab3"
0003C3EA <internal_commands.ab3@417> INCLUDE "internal_commands.ab3"
0003C3EC <internal_commands.ab3@418> INCLUDE "internal_commands.ab3"
0003C3F4 <internal_commands.ab3@419> INCLUDE "internal_commands.ab3"
0003C401 <internal_commands.ab3@420> INCLUDE "internal_commands.ab3"
0003C402 <internal_commands.ab3@421> INCLUDE "internal_commands.ab3"
0003C406 <internal_commands.ab3@424> INCLUDE "internal_commands.ab3"
0003C408 <internal_commands.ab3@425> INCLUDE "internal_commands.ab3"
0003C40D <internal_commands.ab3@426> INCLUDE "internal_commands.ab3"
0003C40E <internal_commands.ab3@427> INCLUDE "internal_commands.ab3"
0003C412 <internal_commands.ab3@517> INCLUDE "internal_commands.ab3"
0003C414 <internal_commands.ab3@518> INCLUDE "internal_commands.ab3"
0003C419 <internal_commands.ab3@519> INCLUDE "internal_commands.ab3"
0003C41A <internal_commands.ab3@520> INCLUDE "internal_commands.ab3"
0003C41C <internal_commands.ab3@523> INCLUDE "internal_commands.ab3"
0003C420 <internal_commands.ab3@524> INCLUDE "internal_commands.ab3"
0003C422 <internal_commands.ab3@525> INCLUDE "internal_commands.ab3"
0003C424 <internal_commands.ab3@526> INCLUDE "internal_commands.ab3"
0003C428 <internal_commands.ab3@527> INCLUDE "internal_commands.ab3"
0003C42A <internal_commands.ab3@528> INCLUDE "internal_commands.ab3"
0003C42E <internal_commands.ab3@532> INCLUDE "internal_commands.ab3"
0003C430 <internal_commands.ab3@533> INCLUDE "internal_commands.ab3"
0003C434 <internal_commands.ab3@534> INCLUDE "internal_commands.ab3"
0003C435 <internal_commands.ab3@535> INCLUDE "internal_commands.ab3"
0003C436 <internal_commands.ab3@536> INCLUDE "internal_commands.ab3"
0003C438 <internal_commands.ab3@538> INCLUDE "internal_commands.ab3"
0003C43C <internal_commands.ab3@539> INCLUDE "internal_commands.ab3"
0003C43E <internal_commands.ab3@540> INCLUDE "internal_commands.ab3"
0003C440 <internal_commands.ab3@541> INCLUDE "internal_commands.ab3"
0003C444 <internal_commands.ab3@542> INCLUDE "internal_commands.ab3"
0003C446 <internal_commands.ab3@543> INCLUDE "internal_commands.ab3"
0003C44A <internal_commands.ab3@547> INCLUDE "internal_commands.ab3"
0003C44C <internal_commands.ab3@548> INCLUDE "internal_commands.ab3"
0003C451 <internal_commands.ab3@549> INCLUDE "internal_commands.ab3"
0003C452 <internal_commands.ab3@550> INCLUDE "internal_commands.ab3"
0003C454 <internal_commands.ab3@553> INCLUDE "internal_commands.ab3"
0003C458 <internal_commands.ab3@554> INCLUDE "internal_commands.ab3"
0003C45A <internal_commands.ab3@555> INCLUDE "internal_commands.ab3"
0003C45C <internal_commands.ab3@556> INCLUDE "internal_commands.ab3"
0003C460 <internal_commands.ab3@557> INCLUDE "internal_commands.ab3"
0003C462 <internal_commands.ab3@558> INCLUDE "internal_commands.ab3"
0003C466 <internal_commands.ab3@562> INCLUDE "internal_commands.ab3"
0003C468 <internal_commands.ab3@563> INCLUDE "internal_commands.ab3"
0003C46D <internal_commands.ab3@564> INCLUDE "internal_commands.ab3"
0003C46E <internal_commands.ab3@565> INCLUDE "internal_commands.ab3"
0003C470 <internal_commands.ab3@568> INCLUDE "internal_commands.ab3"
0003C474 <internal_commands.ab3@569> INCLUDE "internal_commands.ab3"
0003C476 <internal_commands.ab3@570> INCLUDE "internal_commands.ab3"
0003C478 <internal_commands.ab3@571> INCLUDE "internal_commands.ab3"
0003C47C <internal_commands.ab3@572> INCLUDE "internal_commands.ab3"
0003C47E <internal_commands.ab3@573> INCLUDE "internal_commands.ab3"
0003C482 <internal_commands.ab3@577> INCLUDE "internal_commands.ab3"
0003C484 <internal_commands.ab3@578> INCLUDE "internal_commands.ab3"
0003C489 <internal_commands.ab3@579> INCLUDE "internal_commands.ab3"
0003C48A <internal_commands.ab3@580> INCLUDE "internal_commands.ab3"
0003C48C <internal_commands.ab3@583> INCLUDE "internal_commands.ab3"
0003C490 <internal_commands.ab3@584> INCLUDE "internal_commands.ab3"
0003C492 <internal_commands.ab3@585> INCLUDE "internal_commands.ab3"
0003C494 <internal_commands.ab3@586> INCLUDE "internal_commands.ab3"
0003C498 <internal_commands.ab3@587> INCLUDE "internal_commands.ab3"
0003C49A <internal_commands.ab3@588> INCLUDE "internal_commands.ab3"
0003C49E <internal_commands.ab3@592> INCLUDE "internal_commands.ab3"
0003C4A0 <internal_commands.ab3@593> INCLUDE "internal_commands.ab3"
0003C4A5 <internal_commands.ab3@594> INCLUDE "internal_commands.ab3"
0003C4A6 <internal_commands.ab3@595> INCLUDE "internal_commands.ab3"
0003C4A8 <internal_commands.ab3@598> INCLUDE "internal_commands.ab3"
0003C4AC <internal_commands.ab3@599> INCLUDE "internal_commands.ab3"
0003C4AE <internal_commands.ab3@600> INCLUDE "internal_commands.ab3"
0003C4B0 <internal_commands.ab3@601> INCLUDE "internal_commands.ab3"
0003C4B4 <internal_commands.ab3@602> INCLUDE "internal_commands.ab3"
0003C4B6 <internal_commands.ab3@603> INCLUDE "internal_commands.ab3"
0003C4BA <internal_commands.ab3@607> INCLUDE "internal_commands.ab3"
0003C4BC <internal_commands.ab3@608> INCLUDE "internal_commands.ab3"
0003C4C0 <internal_commands.ab3@609> INCLUDE "internal_commands.ab3"
0003C4C1 <internal_commands.ab3@610> INCLUDE "internal_commands.ab3"
0003C4C2 <internal_commands.ab3@611> INCLUDE "internal_commands.ab3"
0003C4C4 <internal_commands.ab3@613> INCLUDE "internal_commands.ab3"
0003C4C8 <internal_commands.ab3@614> INCLUDE "internal_commands.ab3"
0003C4CA <internal_commands.ab3@615> INCLUDE "internal_commands.ab3"
0003C4CC <internal_commands.ab3@616> INCLUDE "internal_commands.ab3"
0003C4D0 <internal_commands.ab3@617> INCLUDE "internal_commands.ab3"
0003C4D2 <internal_commands.ab3@618> INCLUDE "internal_commands.ab3"
0003C4D6 <internal_commands.ab3@622> INCLUDE "internal_commands.ab3"
0003C4D8 <internal_commands.ab3@623> INCLUDE "internal_commands.ab3"
0003C4DD <internal_commands.ab3@624> INCLUDE "internal_commands.ab3"
0003C4DE <internal_commands.ab3@625> INCLUDE "internal_commands.ab3"
0003C4E0 <internal_commands.ab3@628> INCLUDE "internal_commands.ab3"
0003C4E4 <internal_commands.ab3@629> INCLUDE "internal_commands.ab3"
0003C4E6 <internal_commands.ab3@630> INCLUDE "internal_commands.ab3"
0003C4E8 <internal_commands.ab3@631> INCLUDE "internal_commands.ab3"
0003C4EC <internal_commands.ab3@632> INCLUDE "internal_commands.ab3"
0003C4EE <internal_commands.ab3@633> INCLUDE "internal_commands.ab3"
0003C4F2 <internal_commands.ab3@637> INCLUDE "internal_commands.ab3"
0003C4F4 <internal_commands.ab3@638> INCLUDE "internal_commands.ab3"
0003C4F8 <internal_commands.ab3@639> INCLUDE "internal_commands.ab3"
0003C4F9 <internal_commands.ab3@640> INCLUDE "internal_commands.ab3"
0003C4FA <internal_commands.ab3@641> INCLUDE "internal_commands.ab3"
0003C4FC <internal_commands.ab3@643> INCLUDE "internal_commands.ab3"
0003C500 <internal_commands.ab3@644> INCLUDE "internal_commands.ab3"
0003C502 <internal_commands.ab3@645> INCLUDE "internal_commands.ab3"
0003C504 <internal_commands.ab3@646> INCLUDE "internal_commands.ab3"
0003C508 <internal_commands.ab3@647> INCLUDE "internal_commands.ab3"
0003C50A <internal_commands.ab3@648> INCLUDE "internal_commands.ab3"
0003C50E <internal_commands.ab3@652> INCLUDE "internal_commands.ab3"
0003C510 <internal_commands.ab3@653> INCLUDE "internal_commands.ab3"
0003C514 <internal_commands.ab3@654> INCLUDE "internal_commands.ab3"
0003C515 <internal_commands.ab3@655> INCLUDE "internal_commands.ab3"
0003C516 <internal_commands.ab3@656> INCLUDE "internal_commands.ab3"
0003C518 <internal_commands.ab3@658> INCLUDE "internal_commands.ab3"
0003C51C <internal_commands.ab3@659> INCLUDE "internal_commands.ab3"
0003C51E <internal_commands.ab3@660> INCLUDE "internal_commands.ab3"
0003C520 <internal_commands.ab3@661> INCLUDE "internal_commands.ab3"
0003C524 <internal_commands.ab3@662> INCLUDE "internal_commands.ab3"
0003C526 <internal_commands.ab3@663> INCLUDE "internal_commands.ab3"
0003C52A <internal_commands.ab3@667> INCLUDE "internal_commands.ab3"
0003C52C <internal_commands.ab3@668> INCLUDE "internal_commands.ab3"
0003C530 <internal_commands.ab3@669> INCLUDE "internal_commands.ab3"
0003C531 <internal_commands.ab3@670> INCLUDE "internal_commands.ab3"
0003C532 <internal_commands.ab3@671> INCLUDE "internal_commands.ab3"
0003C534 <internal_commands.ab3@673> INCLUDE "internal_commands.ab3"
0003C538 <internal_commands.ab3@674> INCLUDE "internal_commands.ab3"
0003C53A <internal_commands.ab3@675> INCLUDE "internal_commands.ab3"
0003C53C <internal_commands.ab3@676> INCLUDE "internal_commands.ab3"
0003C540 <internal_commands.ab3@677> INCLUDE "internal_commands.ab3"
0003C542 <internal_commands.ab3@678> INCLUDE "internal_commands.ab3"
0003C546 <internal_commands.ab3@682> INCLUDE "internal_commands.ab3"
0003C548 <internal_commands.ab3@683> INCLUDE "internal_commands.ab3"
0003C54C <internal_commands.ab3@684> INCLUDE "internal_commands.ab3"
0003C54D <internal_commands.ab3@685> INCLUDE "internal_commands.ab3"
0003C54E <internal_commands.ab3@686> INCLUDE "internal_commands.ab3"
0003C550 <internal_commands.ab3@688> INCLUDE "internal_commands.ab3"
0003C554 <internal_commands.ab3@689> INCLUDE "internal_commands.ab3"
0003C556 <internal_commands.ab3@690> INCLUDE "internal_commands.ab3"
0003C558 <internal_commands.ab3@691> INCLUDE "internal_commands.ab3"
0003C55C <internal_commands.ab3@692> INCLUDE "internal_commands.ab3"
0003C55E <internal_commands.ab3@693> INCLUDE "internal_commands.ab3"
0003C562 <internal_commands.ab3@697> INCLUDE "internal_commands.ab3"
0003C564 <internal_commands.ab3@698> INCLUDE "internal_commands.ab3"
0003C568 <internal_commands.ab3@699> INCLUDE "internal_commands.ab3"
0003C569 <internal_commands.ab3@700> INCLUDE "internal_commands.ab3"
0003C56A <internal_commands.ab3@701> INCLUDE "internal_commands.ab3"
0003C56C <internal_commands.ab3@703> INCLUDE "internal_commands.ab3"
0003C570 <internal_commands.ab3@704> INCLUDE "internal_commands.ab3"
0003C572 <internal_commands.ab3@705> INCLUDE "internal_commands.ab3"
0003C574 <internal_commands.ab3@706> INCLUDE "internal_commands.ab3"
0003C578 <internal_commands.ab3@707> INCLUDE "internal_commands.ab3"
0003C57A <internal_commands.ab3@708> INCLUDE "internal_commands.ab3"
0003C57E <internal_commands.ab3@712> INCLUDE "internal_commands.ab3"
0003C580 <internal_commands.ab3@713> INCLUDE "internal_commands.ab3"
0003C584 <internal_commands.ab3@714> INCLUDE "internal_commands.ab3"
0003C585 <internal_commands.ab3@715> INCLUDE "internal_commands.ab3"
0003C586 <internal_commands.ab3@716> INCLUDE "internal_commands.ab3"
0003C588 <internal_commands.ab3@718> INCLUDE "internal_commands.ab3"
0003C58C <internal_commands.ab3@719> INCLUDE "internal_commands.ab3"
0003C58E <internal_commands.ab3@720> INCLUDE "internal_commands.ab3"
0003C590 <internal_commands.ab3@721> INCLUDE "internal_commands.ab3"
0003C594 <internal_commands.ab3@722> INCLUDE "internal_commands.ab3"
0003C596 <internal_commands.ab3@723> INCLUDE "internal_commands.ab3"
0003C59A <internal_commands.ab3@727> INCLUDE "internal_commands.ab3"
0003C59C <internal_commands.ab3@728> INCLUDE "internal_commands.ab3"
0003C5A0 <internal_commands.ab3@729> INCLUDE "internal_commands.ab3"
0003C5A1 <internal_commands.ab3@730> INCLUDE "internal_commands.ab3"
0003C5A2 <internal_commands.ab3@731> INCLUDE "internal_commands.ab3"
0003C5A4 <internal_commands.ab3@733> INCLUDE "internal_commands.ab3"
0003C5A8 <internal_commands.ab3@734> INCLUDE "internal_commands.ab3"
0003C5AA <internal_commands.ab3@735> INCLUDE "internal_commands.ab3"
0003C5AC <internal_commands.ab3@736> INCLUDE "internal_commands.ab3"
0003C5B0 <internal_commands.ab3@737> INCLUDE "internal_commands.ab3"
0003C5B2 <internal_commands.ab3@738> INCLUDE "internal_commands.ab3"
0003C5B6 <internal_commands.ab3@742> INCLUDE "internal_commands.ab3"
0003C5B8 <internal_commands.ab3@743> INCLUDE "internal_commands.ab3"
0003C5BC <internal_commands.ab3@744> INCLUDE "internal_commands.ab3"
0003C5BD <internal_commands.ab3@745> INCLUDE "internal_commands.ab3"
0003C5BE <internal_commands.ab3@746> INCLUDE "internal_commands.ab3"
0003C5C0 <internal_commands.ab3@748> INCLUDE "internal_commands.ab3"
0003C5C4 <internal_commands.ab3@749> INCLUDE "internal_commands.ab3"
0003C5C6 <internal_commands.ab3@750> INCLUDE "internal_commands.ab3"
0003C5C8 <internal_commands.ab3@751> INCLUDE "internal_commands.ab3"
0003C5CC <internal_commands.ab3@752> INCLUDE "internal_commands.ab3"
0003C5CE <internal_commands.ab3@753> INCLUDE "internal_commands.ab3"
0003C5D2 <internal_commands.ab3@757> INCLUDE "internal_commands.ab3"
0003C5D4 <internal_commands.ab3@758> INCLUDE "internal_commands.ab3"
0003C5D8 <internal_commands.ab3@759> INCLUDE "internal_commands.ab3"
0003C5D9 <internal_commands.ab3@760> INCLUDE "internal_commands.ab3"
0003C5DA <internal_commands.ab3@761> INCLUDE "internal_commands.ab3"
0003C5DC <internal_commands.ab3@763> INCLUDE "internal_commands.ab3"
0003C5E0 <internal_commands.ab3@764> INCLUDE "internal_commands.ab3"
0003C5E2 <internal_commands.ab3@765> INCLUDE "internal_commands.ab3"
0003C5E4 <internal_commands.ab3@766> INCLUDE "internal_commands.ab3"
0003C5E8 <internal_commands.ab3@767> INCLUDE "internal_commands.ab3"
0003C5EA <internal_commands.ab3@768> INCLUDE "internal_commands.ab3"
0003C5EE <internal_commands.ab3@772> INCLUDE "internal_commands.ab3"
0003C5F0 <internal_commands.ab3@773> INCLUDE "internal_commands.ab3"
0003C5F4 <internal_commands.ab3@774> INCLUDE "internal_commands.ab3"
0003C5F5 <internal_commands.ab3@775> INCLUDE "internal_commands.ab3"
0003C5F6 <internal_commands.ab3@776> INCLUDE "internal_commands.ab3"
0003C5F8 <internal_commands.ab3@778> INCLUDE "internal_commands.ab3"
0003C5FC <internal_commands.ab3@779> INCLUDE "internal_commands.ab3"
0003C5FE <internal_commands.ab3@780> INCLUDE "internal_commands.ab3"
0003C600 <internal_commands.ab3@781> INCLUDE "internal_commands.ab3"
0003C604 <internal_commands.ab3@782> INCLUDE "internal_commands.ab3"
0003C606 <internal_commands.ab3@783> INCLUDE "internal_commands.ab3"
0003C60A <internal_commands.ab3@787> INCLUDE "internal_commands.ab3"
0003C60C <internal_commands.ab3@788> INCLUDE "internal_commands.ab3"
0003C610 <internal_commands.ab3@789> INCLUDE "internal_commands.ab3"
0003C611 <internal_commands.ab3@790> INCLUDE "internal_commands.ab3"
0003C612 <internal_commands.ab3@791> INCLUDE "internal_commands.ab3"
0003C614 <internal_commands.ab3@793> INCLUDE "internal_commands.ab3"
0003C618 <internal_commands.ab3@794> INCLUDE "internal_commands.ab3"
0003C61A <internal_commands.ab3@795> INCLUDE "internal_commands.ab3"
0003C61C <internal_commands.ab3@796> INCLUDE "internal_commands.ab3"
0003C620 <internal_commands.ab3@797> INCLUDE "internal_commands.ab3"
0003C622 <internal_commands.ab3@798> INCLUDE "internal_commands.ab3"
0003C626 <internal_commands.ab3@802> INCLUDE "internal_commands.ab3"
0003C628 <internal_commands.ab3@803> INCLUDE "internal_commands.ab3"
0003C62C <internal_commands.ab3@804> INCLUDE "internal_commands.ab3"
0003C62D <internal_commands.ab3@805> INCLUDE "internal_commands.ab3"
0003C62E <internal_commands.ab3@806> INCLUDE "internal_commands.ab3"
0003C630 <internal_commands.ab3@808> INCLUDE "internal_commands.ab3"
0003C634 <internal_commands.ab3@809> INCLUDE "internal_commands.ab3"
0003C636 <internal_commands.ab3@810> INCLUDE "internal_commands.ab3"
0003C638 <internal_commands.ab3@811> INCLUDE "internal_commands.ab3"
0003C63C <internal_commands.ab3@812> INCLUDE "internal_commands.ab3"
0003C63E <internal_commands.ab3@813> INCLUDE "internal_commands.ab3"
0003C642 <internal_commands.ab3@817> INCLUDE "internal_commands.ab3"
0003C644 <internal_commands.ab3@818> INCLUDE "internal_commands.ab3"
0003C648 <internal_commands.ab3@819> INCLUDE "internal_commands.ab3"
0003C649 <internal_commands.ab3@820> INCLUDE "internal_commands.ab3"
0003C64A <internal_commands.ab3@821> INCLUDE "internal_commands.ab3"
0003C64C <internal_commands.ab3@823> INCLUDE "internal_commands.ab3"
0003C650 <internal_commands.ab3@824> INCLUDE "internal_commands.ab3"
0003C652 <internal_commands.ab3@825> INCLUDE "internal_commands.ab3"
0003C654 <internal_commands.ab3@826> INCLUDE "internal_commands.ab3"
0003C658 <internal_commands.ab3@827> INCLUDE "internal_commands.ab3"
0003C65A <internal_commands.ab3@828> INCLUDE "internal_commands.ab3"
0003C65E <internal_commands.ab3@832> INCLUDE "internal_commands.ab3"
0003C660 <internal_commands.ab3@833> INCLUDE "internal_commands.ab3"
0003C664 <internal_commands.ab3@834> INCLUDE "internal_commands.ab3"
0003C665 <internal_commands.ab3@835> INCLUDE "internal_commands.ab3"
0003C666 <internal_commands.ab3@836> INCLUDE "internal_commands.ab3"
0003C668 <internal_commands.ab3@838> INCLUDE "internal_commands.ab3"
0003C66C <internal_commands.ab3@839> INCLUDE "internal_commands.ab3"
0003C66E <internal_commands.ab3@840> INCLUDE "internal_commands.ab3"
0003C670 <internal_commands.ab3@841> INCLUDE "internal_commands.ab3"
0003C674 <internal_commands.ab3@842> INCLUDE "internal_commands.ab3"
0003C676 <internal_commands.ab3@843> INCLUDE "internal_commands.ab3"
0003C67A <internal_commands.ab3@847> INCLUDE "internal_commands.ab3"
0003C67C <internal_commands.ab3@848> INCLUDE "internal_commands.ab3"
0003C680 <internal_commands.ab3@849> INCLUDE "internal_commands.ab3"
0003C681 <internal_commands.ab3@850> INCLUDE "internal_commands.ab3"
0003C682 <internal_commands.ab3@851> INCLUDE "internal_commands.ab3"
0003C684 <internal_commands.ab3@853> INCLUDE "internal_commands.ab3"
0003C688 <internal_commands.ab3@854> INCLUDE "internal_commands.ab3"
0003C68A <internal_commands.ab3@855> INCLUDE "internal_commands.ab3"
0003C68C <internal_commands.ab3@856> INCLUDE "internal_commands.ab3"
0003C690 <internal_commands.ab3@857> INCLUDE "internal_commands.ab3"
0003C692 <internal_commands.ab3@858> INCLUDE "internal_commands.ab3"
0003C696 <internal_commands.ab3@862> INCLUDE "internal_commands.ab3"
0003C698 <internal_commands.ab3@863> INCLUDE "internal_commands.ab3"
0003C69C <internal_commands.ab3@864> INCLUDE "internal_commands.ab3"
0003C69D <internal_commands.ab3@865> INCLUDE "internal_commands.ab3"
0003C69E <internal_commands.ab3@866> INCLUDE "internal_commands.ab3"
0003C6A0 <internal_commands.ab3@868> INCLUDE "internal_commands.ab3"
0003C6A4 <internal_commands.ab3@869> INCLUDE "internal_commands.ab3"
0003C6A6 <internal_commands.ab3@870> INCLUDE "internal_commands.ab3"
0003C6A8 <internal_commands.ab3@871> INCLUDE "internal_commands.ab3"
0003C6AC <internal_commands.ab3@872> INCLUDE "internal_commands.ab3"
0003C6AE <internal_commands.ab3@873> INCLUDE "internal_commands.ab3"
0003C6B2 <internal_commands.ab3@877> INCLUDE "internal_commands.ab3"
0003C6B4 <internal_commands.ab3@878> INCLUDE "internal_commands.ab3"
0003C6B9 <internal_commands.ab3@879> INCLUDE "internal_commands.ab3"
0003C6BA <internal_commands.ab3@880> INCLUDE "internal_commands.ab3"
0003C6BC <internal_commands.ab3@883> INCLUDE "internal_commands.ab3"
0003C6C0 <internal_commands.ab3@884> INCLUDE "internal_commands.ab3"
0003C6C2 <internal_commands.ab3@885> INCLUDE "internal_commands.ab3"
0003C6C4 <internal_commands.ab3@886> INCLUDE "internal_commands.ab3"
0003C6C8 <internal_commands.ab3@887> INCLUDE "internal_commands.ab3"
0003C6CA <internal_commands.ab3@888> INCLUDE "internal_commands.ab3"
0003C6CE <internal_commands.ab3@892> INCLUDE "internal_commands.ab3"
0003C6D0 <internal_commands.ab3@893> INCLUDE "internal_commands.ab3"
0003C6D5 <internal_commands.ab3@894> INCLUDE "internal_commands.ab3"
0003C6D6 <internal_commands.ab3@895> INCLUDE "internal_commands.ab3"
0003C6D8 <internal_commands.ab3@898> INCLUDE "internal_commands.ab3"
0003C6DC <internal_commands.ab3@899> INCLUDE "internal_commands.ab3"
0003C6DE <internal_commands.ab3@900> INCLUDE "internal_commands.ab3"
0003C6E0 <internal_commands.ab3@901> INCLUDE "internal_commands.ab3"
0003C6E4 <internal_commands.ab3@902> INCLUDE "internal_commands.ab3"
0003C6E6 <internal_commands.ab3@903> INCLUDE "internal_commands.ab3"
0003C6EA <internal_commands.ab3@907> INCLUDE "internal_commands.ab3"
0003C6EC <internal_commands.ab3@908> INCLUDE "internal_commands.ab3"
0003C6F1 <internal_commands.ab3@909> INCLUDE "internal_commands.ab3"
0003C6F2 <internal_commands.ab3@910> INCLUDE "internal_commands.ab3"
0003C6F4 <internal_commands.ab3@913> INCLUDE "internal_commands.ab3"
0003C6F8 <internal_commands.ab3@914> INCLUDE "internal_commands.ab3"
0003C6FA <internal_commands.ab3@915> INCLUDE "internal_commands.ab3"
0003C6FC <internal_commands.ab3@916> INCLUDE "internal_commands.ab3"
0003C700 <internal_commands.ab3@917> INCLUDE "internal_commands.ab3"
0003C702 <internal_commands.ab3@918> INCLUDE "internal_commands.ab3"
0003C706 <internal_commands.ab3@922> INCLUDE "internal_commands.ab3"
0003C708 <internal_commands.ab3@923> INCLUDE "internal_commands.ab3"
0003C70D <internal_commands.ab3@924> INCLUDE "internal_commands.ab3"
0003C70E <internal_commands.ab3@925> INCLUDE "internal_commands.ab3"
0003C710 <internal_commands.ab3@928> INCLUDE "internal_commands.ab3"
0003C714 <internal_commands.ab3@929> INCLUDE "internal_commands.ab3"
0003C716 <internal_commands.ab3@930> INCLUDE "internal_commands.ab3"
0003C718 <internal_commands.ab3@931> INCLUDE "internal_commands.ab3"
0003C71C <internal_commands.ab3@932> INCLUDE "internal_commands.ab3"
0003C71E <internal_commands.ab3@933> INCLUDE "internal_commands.ab3"
0003C722 <internal_commands.ab3@937> INCLUDE "internal_commands.ab3"
0003C724 <internal_commands.ab3@938> INCLUDE "internal_commands.ab3"
0003C728 <internal_commands.ab3@939> INCLUDE "internal_commands.ab3"
0003C729 <internal_commands.ab3@940> INCLUDE "internal_commands.ab3"
0003C72A <internal_commands.ab3@941> INCLUDE "internal_commands.ab3"
0003C72C <internal_commands.ab3@943> INCLUDE "internal_commands.ab3"
0003C730 <internal_commands.ab3@944> INCLUDE "internal_commands.ab3"
0003C732 <internal_commands.ab3@945> INCLUDE "internal_commands.ab3"
0003C734 <internal_commands.ab3@946> INCLUDE "internal_commands.ab3"
0003C738 <internal_commands.ab3@947> INCLUDE "internal_commands.ab3"
0003C73A <internal_commands.ab3@948> INCLUDE "internal_commands.ab3"
0003C73E <internal_commands.ab3@952> INCLUDE "internal_commands.ab3"
0003C740 <internal_commands.ab3@953> INCLUDE "internal_commands.ab3"
0003C744 <internal_commands.ab3@954> INCLUDE "internal_commands.ab3"
0003C745 <internal_commands.ab3@955> INCLUDE "internal_commands.ab3"
0003C746 <internal_commands.ab3@956> INCLUDE "internal_commands.ab3"
0003C748 <internal_commands.ab3@958> INCLUDE "internal_commands.ab3"
0003C74C <internal_commands.ab3@959> INCLUDE "internal_commands.ab3"
0003C74E <internal_commands.ab3@960> INCLUDE "internal_commands.ab3"
0003C750 <internal_commands.ab3@961> INCLUDE "internal_commands.ab3"
0003C754 <internal_commands.ab3@962> INCLUDE "internal_commands.ab3"
0003C756 <internal_commands.ab3@963> INCLUDE "internal_commands.ab3"
0003C75A <internal_commands.ab3@967> INCLUDE "internal_commands.ab3"
0003C75C <internal_commands.ab3@968> INCLUDE "internal_commands.ab3"
0003C760 <internal_commands.ab3@969> INCLUDE "internal_commands.ab3"
0003C761 <internal_commands.ab3@970> INCLUDE "internal_commands.ab3"
0003C762 <internal_commands.ab3@971> INCLUDE "internal_commands.ab3"
0003C764 <internal_commands.ab3@973> INCLUDE "internal_commands.ab3"
0003C768 <internal_commands.ab3@974> INCLUDE "internal_commands.ab3"
0003C76A <internal_commands.ab3@975> INCLUDE "internal_commands.ab3"
0003C76C <internal_commands.ab3@976> INCLUDE "internal_commands.ab3"
0003C770 <internal_commands.ab3@977> INCLUDE "internal_commands.ab3"
0003C772 <internal_commands.ab3@978> INCLUDE "internal_commands.ab3"
0003C776 <internal_commands.ab3@982> INCLUDE "internal_commands.ab3"
0003C778 <internal_commands.ab3@983> INCLUDE "internal_commands.ab3"
0003C77C <internal_commands.ab3@984> INCLUDE "internal_commands.ab3"
0003C77D <internal_commands.ab3@985> INCLUDE "internal_commands.ab3"
0003C77E <internal_commands.ab3@986> INCLUDE "internal_commands.ab3"
0003C780 <internal_commands.ab3@988> INCLUDE "internal_commands.ab3"
0003C784 <internal_commands.ab3@989> INCLUDE "internal_commands.ab3"
0003C786 <internal_commands.ab3@990> INCLUDE "internal_commands.ab3"
0003C788 <internal_commands.ab3@991> INCLUDE "internal_commands.ab3"
0003C78C <internal_commands.ab3@992> INCLUDE "internal_commands.ab3"
0003C78E <internal_commands.ab3@993> INCLUDE "internal_commands.ab3"
0003C792 <internal_commands.ab3@997> INCLUDE "internal_commands.ab3"
0003C794 <internal_commands.ab3@998> INCLUDE "internal_commands.ab3"
0003C798 <internal_commands.ab3@999> INCLUDE "internal_commands.ab3"
0003C799 <internal_commands.ab3@1000> INCLUDE "internal_commands.ab3"
0003C79A <internal_commands.ab3@1001> INCLUDE "internal_commands.ab3"
0003C79C <internal_commands.ab3@1003> INCLUDE "internal_commands.ab3"
0003C7A0 <internal_commands.ab3@1004> INCLUDE "internal_commands.ab3"
0003C7A2 <internal_commands.ab3@1005> INCLUDE "internal_commands.ab3"
0003C7A4 <internal_commands.ab3@1006> INCLUDE "internal_commands.ab3"
0003C7A8 <internal_commands.ab3@1007> INCLUDE "internal_commands.ab3"
0003C7AA <internal_commands.ab3@1008> INCLUDE "internal_commands.ab3"
0003C7AE <internal_commands.ab3@1012> INCLUDE "internal_commands.ab3"
0003C7B0 <internal_commands.ab3@1013> INCLUDE "internal_commands.ab3"
0003C7B5 <internal_commands.ab3@1014> INCLUDE "internal_commands.ab3"
0003C7B6 <internal_commands.ab3@1015> INCLUDE "internal_commands.ab3"
0003C7B8 <internal_commands.ab3@1018> INCLUDE "internal_commands.ab3"
0003C7BC <internal_commands.ab3@1019> INCLUDE "internal_commands.ab3"
0003C7BE <internal_commands.ab3@1020> INCLUDE "internal_commands.ab3"
0003C7C0 <internal_commands.ab3@1021> INCLUDE "internal_commands.ab3"
0003C7C4 <internal_commands.ab3@1022> INCLUDE "internal_commands.ab3"
0003C7C6 <internal_commands.ab3@1023> INCLUDE "internal_commands.ab3"
0003C7CA <internal_commands.ab3@1027> INCLUDE "internal_commands.ab3"
0003C7CC <internal_commands.ab3@1028> INCLUDE "internal_commands.ab3"
0003C7D1 <internal_commands.ab3@1029> INCLUDE "internal_commands.ab3"
0003C7D2 <internal_commands.ab3@1030> INCLUDE "internal_commands.ab3"
0003C7D4 <internal_commands.ab3@1033> INCLUDE "internal_commands.ab3"
0003C7D8 <internal_commands.ab3@1034> INCLUDE "internal_commands.ab3"
0003C7DA <internal_commands.ab3@1035> INCLUDE "internal_commands.ab3"
0003C7DC <internal_commands.ab3@1036> INCLUDE "internal_commands.ab3"
0003C7E0 <internal_commands.ab3@1037> INCLUDE "internal_commands.ab3"
0003C7E2 <internal_commands.ab3@1038> INCLUDE "internal_commands.ab3"
0003C7E6 <internal_commands.ab3@1042> INCLUDE "internal_commands.ab3"
0003C7E8 <internal_commands.ab3@1043> INCLUDE "internal_commands.ab3"
0003C7ED <internal_commands.ab3@1044> INCLUDE "internal_commands.ab3"
0003C7EE <internal_commands.ab3@1045> INCLUDE "internal_commands.ab3"
0003C7F0 <internal_commands.ab3@1048> INCLUDE "internal_commands.ab3"
0003C7F4 <internal_commands.ab3@1049> INCLUDE "internal_commands.ab3"
0003C7F6 <internal_commands.ab3@1050> INCLUDE "internal_commands.ab3"
0003C7F8 <internal_commands.ab3@1051> INCLUDE "internal_commands.ab3"
0003C7FC <internal_commands.ab3@1052> INCLUDE "internal_commands.ab3"
0003C7FE <internal_commands.ab3@1053> INCLUDE "internal_commands.ab3"
0003C802 <internal_commands.ab3@1057> INCLUDE "internal_commands.ab3"
0003C804 <internal_commands.ab3@1058> INCLUDE "internal_commands.ab3"
0003C809 <internal_commands.ab3@1059> INCLUDE "internal_commands.ab3"
0003C80A <internal_commands.ab3@1060> INCLUDE "internal_commands.ab3"
0003C80C <internal_commands.ab3@1063> INCLUDE "internal_commands.ab3"
0003C810 <internal_commands.ab3@1064> INCLUDE "internal_commands.ab3"
0003C812 <internal_commands.ab3@1065> INCLUDE "internal_commands.ab3"
0003C814 <internal_commands.ab3@1066> INCLUDE "internal_commands.ab3"
0003C818 <internal_commands.ab3@1067> INCLUDE "internal_commands.ab3"
0003C81A <internal_commands.ab3@1068> INCLUDE "internal_commands.ab3"
0003C81E <internal_commands.ab3@1072> INCLUDE "internal_commands.ab3"
0003C820 <internal_commands.ab3@1073> INCLUDE "internal_commands.ab3"
0003C825 <internal_commands.ab3@1074> INCLUDE "internal_commands.ab3"
0003C826 <internal_commands.ab3@1075> INCLUDE "internal_commands.ab3"
0003C828 <internal_commands.ab3@1078> INCLUDE "internal_commands.ab3"
0003C82C <internal_commands.ab3@1079> INCLUDE "internal_commands.ab3"
0003C82E <internal_commands.ab3@1080> INCLUDE "internal_commands.ab3"
0003C830 <internal_commands.ab3@1081> INCLUDE "internal_commands.ab3"
0003C834 <internal_commands.ab3@1082> INCLUDE "internal_commands.ab3"
0003C836 <internal_commands.ab3@1083> INCLUDE "internal_commands.ab3"
0003C83A <internal_commands.ab3@1087> INCLUDE "internal_commands.ab3"
0003C83C <internal_commands.ab3@1088> INCLUDE "internal_commands.ab3"
0003C841 <internal_commands.ab3@1089> INCLUDE "internal_commands.ab3"
0003C842 <internal_commands.ab3@1090> INCLUDE "internal_commands.ab3"
0003C844 <internal_commands.ab3@1093> INCLUDE "internal_commands.ab3"
0003C848 <internal_commands.ab3@1094> INCLUDE "internal_commands.ab3"
0003C84A <internal_commands.ab3@1095> INCLUDE "internal_commands.ab3"
0003C84C <internal_commands.ab3@1096> INCLUDE "internal_commands.ab3"
0003C850 <internal_commands.ab3@1097> INCLUDE "internal_commands.ab3"
0003C852 <internal_commands.ab3@1098> INCLUDE "internal_commands.ab3"
0003C856 <internal_commands.ab3@1102> INCLUDE "internal_commands.ab3"
0003C858 <internal_commands.ab3@1103> INCLUDE "internal_commands.ab3"
0003C85D <internal_commands.ab3@1104> INCLUDE "internal_commands.ab3"
0003C85E <internal_commands.ab3@1105> INCLUDE "internal_commands.ab3"
0003C860 <internal_commands.ab3@1108> INCLUDE "internal_commands.ab3"
0003C864 <internal_commands.ab3@1109> INCLUDE "internal_commands.ab3"
0003C866 <internal_commands.ab3@1110> INCLUDE "internal_commands.ab3"
0003C868 <internal_commands.ab3@1111> INCLUDE "internal_commands.ab3"
0003C86C <internal_commands.ab3@1112> INCLUDE "internal_commands.ab3"
0003C86E <internal_commands.ab3@1113> INCLUDE "internal_commands.ab3"
0003C872 <internal_commands.ab3@1117> INCLUDE "internal_commands.ab3"
0003C874 <internal_commands.ab3@1118> INCLUDE "internal_commands.ab3"
0003C879 <internal_commands.ab3@1119> INCLUDE "internal_commands.ab3"
0003C87A <internal_commands.ab3@1120> INCLUDE "internal_commands.ab3"
0003C87C <internal_commands.ab3@1123> INCLUDE "internal_commands.ab3"
0003C880 <internal_commands.ab3@1124> INCLUDE "internal_commands.ab3"
0003C882 <internal_commands.ab3@1125> INCLUDE "internal_commands.ab3"
0003C884 <internal_commands.ab3@1126> INCLUDE "internal_commands.ab3"
0003C888 <internal_commands.ab3@1127> INCLUDE "internal_commands.ab3"
0003C88A <internal_commands.ab3@1128> INCLUDE "internal_commands.ab3"
0003C88E <internal_commands.ab3@1132> INCLUDE "internal_commands.ab3"
0003C890 <internal_commands.ab3@1133> INCLUDE "internal_commands.ab3"
0003C895 <internal_commands.ab3@1134> INCLUDE "internal_commands.ab3"
0003C896 <internal_commands.ab3@1135> INCLUDE "internal_commands.ab3"
0003C898 <internal_commands.ab3@1138> INCLUDE "internal_commands.ab3"
0003C89C <internal_commands.ab3@1139> INCLUDE "internal_commands.ab3"
0003C89E <internal_commands.ab3@1140> INCLUDE "internal_commands.ab3"
0003C8A0 <internal_commands.ab3@1141> INCLUDE "internal_commands.ab3"
0003C8A4 <internal_commands.ab3@1142> INCLUDE "internal_commands.ab3"
0003C8A6 <internal_commands.ab3@1143> INCLUDE "internal_commands.ab3"
0003C8AA <internal_commands.ab3@1147> INCLUDE "internal_commands.ab3"
0003C8AC <internal_commands.ab3@1148> INCLUDE "internal_commands.ab3"
0003C8B1 <internal_commands.ab3@1149> INCLUDE "internal_commands.ab3"
0003C8B2 <internal_commands.ab3@1150> INCLUDE "internal_commands.ab3"
0003C8B4 <internal_commands.ab3@1153> INCLUDE "internal_commands.ab3"
0003C8B8 <internal_commands.ab3@1154> INCLUDE "internal_commands.ab3"
0003C8BA <internal_commands.ab3@1155> INCLUDE "internal_commands.ab3"
0003C8BC <internal_commands.ab3@1156> INCLUDE "internal_commands.ab3"
0003C8C0 <internal_commands.ab3@1157> INCLUDE "internal_commands.ab3"
0003C8C2 <internal_commands.ab3@1158> INCLUDE "internal_commands.ab3"
0003C8C6 <internal_commands.ab3@1162> INCLUDE "internal_commands.ab3"
0003C8C8 <internal_commands.ab3@1163> INCLUDE "internal_commands.ab3"
0003C8CD <internal_commands.ab3@1164> INCLUDE "internal_commands.ab3"
0003C8CE <internal_commands.ab3@1165> INCLUDE "internal_commands.ab3"
0003C8D0 <internal_commands.ab3@1168> INCLUDE "internal_commands.ab3"
0003C8D4 <internal_commands.ab3@1169> INCLUDE "internal_commands.ab3"
0003C8D6 <internal_commands.ab3@1170> INCLUDE "internal_commands.ab3"
0003C8D8 <internal_commands.ab3@1171> INCLUDE "internal_commands.ab3"
0003C8DC <internal_commands.ab3@1172> INCLUDE "internal_commands.ab3"
0003C8DE <internal_commands.ab3@1173> INCLUDE "internal_commands.ab3"
0003C8E2 <internal_commands.ab3@1177> INCLUDE "internal_commands.ab3"
0003C8E4 <internal_commands.ab3@1178> INCLUDE "internal_commands.ab3"
0003C8E9 <internal_commands.ab3@1179> INCLUDE "internal_commands.ab3"
0003C8EA <internal_commands.ab3@1180> INCLUDE "internal_commands.ab3"
0003C8EC <internal_commands.ab3@1183> INCLUDE "internal_commands.ab3"
0003C8F0 <internal_commands.ab3@1184> INCLUDE "internal_commands.ab3"
0003C8F2 <internal_commands.ab3@1185> INCLUDE "internal_commands.ab3"
0003C8F4 <internal_commands.ab3@1186> INCLUDE "internal_commands.ab3"
0003C8F8 <internal_commands.ab3@1187> INCLUDE "internal_commands.ab3"
0003C8FA <internal_commands.ab3@1188> INCLUDE "internal_commands.ab3"
0003C8FE <internal_commands.ab3@1192> INCLUDE "internal_commands.ab3"
0003C900 <internal_commands.ab3@1193> INCLUDE "internal_commands.ab3"
0003C905 <internal_commands.ab3@1194> INCLUDE "internal_commands.ab3"
0003C906 <internal_commands.ab3@1195> INCLUDE "internal_commands.ab3"
0003C908 <internal_commands.ab3@1198> INCLUDE "internal_commands.ab3"
0003C90C <internal_commands.ab3@1199> INCLUDE "internal_commands.ab3"
0003C90E <internal_commands.ab3@1200> INCLUDE "internal_commands.ab3"
0003C910 <internal_commands.ab3@1201> INCLUDE "internal_commands.ab3"
0003C914 <internal_commands.ab3@1202> INCLUDE "internal_commands.ab3"
0003C916 <internal_commands.ab3@1203> INCLUDE "internal_commands.ab3"
0003C91A <internal_commands.ab3@1207> INCLUDE "internal_commands.ab3"
0003C91C <internal_commands.ab3@1208> INCLUDE "internal_commands.ab3"
0003C921 <internal_commands.ab3@1209> INCLUDE "internal_commands.ab3"
0003C922 <internal_commands.ab3@1210> INCLUDE "internal_commands.ab3"
0003C924 <internal_commands.ab3@1213> INCLUDE "internal_commands.ab3"
0003C928 <internal_commands.ab3@1214> INCLUDE "internal_commands.ab3"
0003C92A <internal_commands.ab3@1215> INCLUDE "internal_commands.ab3"
0003C92C <internal_commands.ab3@1216> INCLUDE "internal_commands.ab3"
0003C930 <internal_commands.ab3@1217> INCLUDE "internal_commands.ab3"
0003C932 <internal_commands.ab3@1218> INCLUDE "internal_commands.ab3"
0003C936 <internal_commands.ab3@1222> INCLUDE "internal_commands.ab3"
0003C938 <internal_commands.ab3@1223> INCLUDE "internal_commands.ab3"
0003C93D <internal_commands.ab3@1224> INCLUDE "internal_commands.ab3"
0003C93E <internal_commands.ab3@1225> INCLUDE "internal_commands.ab3"
0003C940 <internal_commands.ab3@1228> INCLUDE "internal_commands.ab3"
0003C944 <internal_commands.ab3@1229> INCLUDE "internal_commands.ab3"
0003C946 <internal_commands.ab3@1230> INCLUDE "internal_commands.ab3"
0003C948 <internal_commands.ab3@1231> INCLUDE "internal_commands.ab3"
0003C94C <internal_commands.ab3@1232> INCLUDE "internal_commands.ab3"
0003C94E <internal_commands.ab3@1233> INCLUDE "internal_commands.ab3"
0003C952 <internal_commands.ab3@1237> INCLUDE "internal_commands.ab3"
0003C954 <internal_commands.ab3@1238> INCLUDE "internal_commands.ab3"
0003C959 <internal_commands.ab3@1239> INCLUDE "internal_commands.ab3"
0003C95A <internal_commands.ab3@1240> INCLUDE "internal_commands.ab3"
0003C95C <internal_commands.ab3@1243> INCLUDE "internal_commands.ab3"
0003C960 <internal_commands.ab3@1244> INCLUDE "internal_commands.ab3"
0003C962 <internal_commands.ab3@1245> INCLUDE "internal_commands.ab3"
0003C964 <internal_commands.ab3@1246> INCLUDE "internal_commands.ab3"
0003C968 <internal_commands.ab3@1247> INCLUDE "internal_commands.ab3"
0003C96A <internal_commands.ab3@1248> INCLUDE "internal_commands.ab3"
0003C96E <internal_commands.ab3@1252> INCLUDE "internal_commands.ab3"
0003C970 <internal_commands.ab3@1253> INCLUDE "internal_commands.ab3"
0003C975 <internal_commands.ab3@1254> INCLUDE "internal_commands.ab3"
0003C976 <internal_commands.ab3@1255> INCLUDE "internal_commands.ab3"
0003C978 <internal_commands.ab3@1258> INCLUDE "internal_commands.ab3"
0003C97C <internal_commands.ab3@1259> INCLUDE "internal_commands.ab3"
0003C97E <internal_commands.ab3@1260> INCLUDE "internal_commands.ab3"
0003C980 <internal_commands.ab3@1261> INCLUDE "internal_commands.ab3"
0003C984 <internal_commands.ab3@1262> INCLUDE "internal_commands.ab3"
0003C986 <internal_commands.ab3@1263> INCLUDE "internal_commands.ab3"
0003C98A <internal_commands.ab3@1266> INCLUDE "internal_commands.ab3"
0003C98C <internal_commands.ab3@1267> INCLUDE "internal_commands.ab3"
0003C990 <internal_commands.ab3@1268> INCLUDE "internal_commands.ab3"
0003C991 <internal_commands.ab3@1269> INCLUDE "internal_commands.ab3"
0003C992 <internal_commands.ab3@1270> INCLUDE "internal_commands.ab3"
0003C994 <internal_commands.ab3@1272> INCLUDE "internal_commands.ab3"
0003C998 <internal_commands.ab3@1273> INCLUDE "internal_commands.ab3"
0003C99A <internal_commands.ab3@1274> INCLUDE "internal_commands.ab3"
0003C99C <internal_commands.ab3@1275> INCLUDE "internal_commands.ab3"
0003C9A0 <internal_commands.ab3@1276> INCLUDE "internal_commands.ab3"
0003C9A2 <internal_commands.ab3@1277> INCLUDE "internal_commands.ab3"
0003C9A6 <internal_commands.ab3@1281> INCLUDE "internal_commands.ab3"
0003C9A8 <internal_commands.ab3@1282> INCLUDE "internal_commands.ab3"
0003C9AD <internal_commands.ab3@1283> INCLUDE "internal_commands.ab3"
0003C9AE <internal_commands.ab3@1284> INCLUDE "internal_commands.ab3"
0003C9B0 <internal_commands.ab3@1287> INCLUDE "internal_commands.ab3"
0003C9B4 <internal_commands.ab3@1288> INCLUDE "internal_commands.ab3"
0003C9B6 <internal_commands.ab3@1289> INCLUDE "internal_commands.ab3"
0003C9B8 <internal_commands.ab3@1290> INCLUDE "internal_commands.ab3"
0003C9BC <internal_commands.ab3@1291> INCLUDE "internal_commands.ab3"
0003C9BE <internal_commands.ab3@1292> INCLUDE "internal_commands.ab3"
0003C9C2 <internal_commands.ab3@1296> INCLUDE "internal_commands.ab3"
0003C9C4 <internal_commands.ab3@1297> INCLUDE "internal_commands.ab3"
0003C9C8 <internal_commands.ab3@1298> INCLUDE "internal_commands.ab3"
0003C9C9 <internal_commands.ab3@1299> INCLUDE "internal_commands.ab3"
0003C9CA <internal_commands.ab3@1300> INCLUDE "internal_commands.ab3"
0003C9CC <internal_commands.ab3@1302> INCLUDE "internal_commands.ab3"
0003C9D0 <internal_commands.ab3@1303> INCLUDE "internal_commands.ab3"
0003C9D2 <internal_commands.ab3@1304> INCLUDE "internal_commands.ab3"
0003C9D4 <internal_commands.ab3@1305> INCLUDE "internal_commands.ab3"
0003C9D8 <internal_commands.ab3@1306> INCLUDE "internal_commands.ab3"
0003C9DA <internal_commands.ab3@1307> INCLUDE "internal_commands.ab3"
0003C9DE <internal_commands.ab3@1311> INCLUDE "internal_commands.ab3"
0003C9E0 <internal_commands.ab3@1312> INCLUDE "internal_commands.ab3"
0003C9E5 <internal_commands.ab3@1313> INCLUDE "internal_commands.ab3"
0003C9E6 <internal_commands.ab3@1314> INCLUDE "internal_commands.ab3"
0003C9E8 <internal_commands.ab3@1317> INCLUDE "internal_commands.ab3"
0003C9EC <internal_commands.ab3@1318> INCLUDE "internal_commands.ab3"
0003C9EE <internal_commands.ab3@1319> INCLUDE "internal_commands.ab3"
0003C9F0 <internal_commands.ab3@1320> INCLUDE "internal_commands.ab3"
0003C9F4 <internal_commands.ab3@1321> INCLUDE "internal_commands.ab3"
0003C9F6 <internal_commands.ab3@1322> INCLUDE "internal_commands.ab3"
0003C9FA <internal_commands.ab3@1326> INCLUDE "internal_commands.ab3"
0003C9FC <internal_commands.ab3@1327> INCLUDE "internal_commands.ab3"
0003CA01 <internal_commands.ab3@1328> INCLUDE "internal_commands.ab3"
0003CA02 <internal_commands.ab3@1329> INCLUDE "internal_commands.ab3"
0003CA04 <internal_commands.ab3@1332> INCLUDE "internal_commands.ab3"
0003CA08 <internal_commands.ab3@1333> INCLUDE "internal_commands.ab3"
0003CA0A <internal_commands.ab3@1334> INCLUDE "internal_commands.ab3"
0003CA0C <internal_commands.ab3@1335> INCLUDE "internal_commands.ab3"
0003CA10 <internal_commands.ab3@1336> INCLUDE "internal_commands.ab3"
0003CA12 <internal_commands.ab3@1337> INCLUDE "internal_commands.ab3"
0003CA16 <internal_commands.ab3@1341> INCLUDE "internal_commands.ab3"
0003CA18 <internal_commands.ab3@1342> INCLUDE "internal_commands.ab3"
0003CA1C <internal_commands.ab3@1343> INCLUDE "internal_commands.ab3"
0003CA1D <internal_commands.ab3@1344> INCLUDE "internal_commands.ab3"
0003CA1E <internal_commands.ab3@1345> INCLUDE "internal_commands.ab3"
0003CA20 <internal_commands.ab3@1347> INCLUDE "internal_commands.ab3"
0003CA24 <internal_commands.ab3@1348> INCLUDE "internal_commands.ab3"
0003CA26 <internal_commands.ab3@1349> INCLUDE "internal_commands.ab3"
0003CA28 <internal_commands.ab3@1350> INCLUDE "internal_commands.ab3"
0003CA2C <internal_commands.ab3@1351> INCLUDE "internal_commands.ab3"
0003CA2E <internal_commands.ab3@1352> INCLUDE "internal_commands.ab3"
0003CA32 <internal_commands.ab3@1356> INCLUDE "internal_commands.ab3"
0003CA34 <internal_commands.ab3@1357> INCLUDE "internal_commands.ab3"
0003CA39 <internal_commands.ab3@1358> INCLUDE "internal_commands.ab3"
0003CA3A <internal_commands.ab3@1359> INCLUDE "internal_commands.ab3"
0003CA3C <internal_commands.ab3@1362> INCLUDE "internal_commands.ab3"
0003CA40 <internal_commands.ab3@1363> INCLUDE "internal_commands.ab3"
0003CA42 <internal_commands.ab3@1364> INCLUDE "internal_commands.ab3"
0003CA44 <internal_commands.ab3@1365> INCLUDE "internal_commands.ab3"
0003CA48 <internal_commands.ab3@1366> INCLUDE "internal_commands.ab3"
0003CA4A <internal_commands.ab3@1367> INCLUDE "internal_commands.ab3"
0003CA4E <internal_commands.ab3@1371> INCLUDE "internal_commands.ab3"
0003CA50 <internal_commands.ab3@1372> INCLUDE "internal_commands.ab3"
0003CA54 <internal_commands.ab3@1373> INCLUDE "internal_commands.ab3"
0003CA55 <internal_commands.ab3@1374> INCLUDE "internal_commands.ab3"
0003CA56 <internal_commands.ab3@1375> INCLUDE "internal_commands.ab3"
0003CA58 <internal_commands.ab3@1377> INCLUDE "internal_commands.ab3"
0003CA5C <internal_commands.ab3@1378> INCLUDE "internal_commands.ab3"
0003CA5E <internal_commands.ab3@1379> INCLUDE "internal_commands.ab3"
0003CA60 <internal_commands.ab3@1380> INCLUDE "internal_commands.ab3"
0003CA64 <internal_commands.ab3@1381> INCLUDE "internal_commands.ab3"
0003CA66 <internal_commands.ab3@1382> INCLUDE "internal_commands.ab3"
0003CA6A <internal_commands.ab3@1386> INCLUDE "internal_commands.ab3"
0003CA6C <internal_commands.ab3@1387> INCLUDE "internal_commands.ab3"
0003CA70 <internal_commands.ab3@1388> INCLUDE "internal_commands.ab3"
0003CA71 <internal_commands.ab3@1389> INCLUDE "internal_commands.ab3"
0003CA72 <internal_commands.ab3@1390> INCLUDE "internal_commands.ab3"
0003CA74 <internal_commands.ab3@1392> INCLUDE "internal_commands.ab3"
0003CA78 <internal_commands.ab3@1393> INCLUDE "internal_commands.ab3"
0003CA7A <internal_commands.ab3@1394> INCLUDE "internal_commands.ab3"
0003CA7C <internal_commands.ab3@1395> INCLUDE "internal_commands.ab3"
0003CA80 <internal_commands.ab3@1396> INCLUDE "internal_commands.ab3"
0003CA82 <internal_commands.ab3@1397> INCLUDE "internal_commands.ab3"
0003CA86 <internal_commands.ab3@1401> INCLUDE "internal_commands.ab3"
0003CA88 <internal_commands.ab3@1402> INCLUDE "internal_commands.ab3"
0003CA90 <internal_commands.ab3@1403> INCLUDE "internal_commands.ab3"
0003CA91 <internal_commands.ab3@1404> INCLUDE "internal_commands.ab3"
0003CA92 <internal_commands.ab3@1405> INCLUDE "internal_commands.ab3"
0003CA94 <internal_commands.ab3@1407> INCLUDE "internal_commands.ab3"
0003CA98 <internal_commands.ab3@1408> INCLUDE "internal_commands.ab3"
0003CA9A <internal_commands.ab3@1409> INCLUDE "internal_commands.ab3"
0003CA9C <internal_commands.ab3@1410> INCLUDE "internal_commands.ab3"
0003CAA0 <internal_commands.ab3@1411> INCLUDE "internal_commands.ab3"
0003CAA2 <internal_commands.ab3@1412> INCLUDE "internal_commands.ab3"
0003CAA6 <internal_commands.ab3@1416> INCLUDE "internal_commands.ab3"
0003CAA8 <internal_commands.ab3@1417> INCLUDE "internal_commands.ab3"
0003CAAC <internal_commands.ab3@1418> INCLUDE "internal_commands.ab3"
0003CAAD <internal_commands.ab3@1419> INCLUDE "internal_commands.ab3"
0003CAAE <internal_commands.ab3@1420> INCLUDE "internal_commands.ab3"
0003CAB0 <internal_commands.ab3@1422> INCLUDE "internal_commands.ab3"
0003CAB4 <internal_commands.ab3@1423> INCLUDE "internal_commands.ab3"
0003CAB6 <internal_commands.ab3@1424> INCLUDE "internal_commands.ab3"
0003CAB8 <internal_commands.ab3@1425> INCLUDE "internal_commands.ab3"
0003CABC <internal_commands.ab3@1426> INCLUDE "internal_commands.ab3"
0003CABE <internal_commands.ab3@1427> INCLUDE "internal_commands.ab3"
0003CAC2 <internal_commands.ab3@1431> INCLUDE "internal_commands.ab3"
0003CAC4 <internal_commands.ab3@1432> INCLUDE "internal_commands.ab3"
0003CAC8 <internal_commands.ab3@1433> INCLUDE "internal_commands.ab3"
0003CAC9 <internal_commands.ab3@1434> INCLUDE "internal_commands.ab3"
0003CACA <internal_commands.ab3@1435> INCLUDE "internal_commands.ab3"
0003CACC <internal_commands.ab3@1437> INCLUDE "internal_commands.ab3"
0003CAD0 <internal_commands.ab3@1438> INCLUDE "internal_commands.ab3"
0003CAD2 <internal_commands.ab3@1439> INCLUDE "internal_commands.ab3"
0003CAD4 <internal_commands.ab3@1440> INCLUDE "internal_commands.ab3"
0003CAD8 <internal_commands.ab3@1441> INCLUDE "internal_commands.ab3"
0003CADA <internal_commands.ab3@1442> INCLUDE "internal_commands.ab3"
0003CADE <internal_commands.ab3@1446> INCLUDE "internal_commands.ab3"
0003CAE0 <internal_commands.ab3@1447> INCLUDE "internal_commands.ab3"
0003CAE4 <internal_commands.ab3@1448> INCLUDE "internal_commands.ab3"
0003CAE5 <internal_commands.ab3@1449> INCLUDE "internal_commands.ab3"
0003CAE6 <internal_commands.ab3@1450> INCLUDE "internal_commands.ab3"
0003CAE8 <internal_commands.ab3@1452> INCLUDE "internal_commands.ab3"
0003CAEC <internal_commands.ab3@1453> INCLUDE "internal_commands.ab3"
0003CAEE <internal_commands.ab3@1454> INCLUDE "internal_commands.ab3"
0003CAF0 <internal_commands.ab3@1455> INCLUDE "internal_commands.ab3"
0003CAF4 <internal_commands.ab3@1456> INCLUDE "internal_commands.ab3"
0003CAF6 <internal_commands.ab3@1457> INCLUDE "internal_commands.ab3"
0003CAFA <internal_commands.ab3@1461> INCLUDE "internal_commands.ab3"
0003CAFC <internal_commands.ab3@1462> INCLUDE "internal_commands.ab3"
0003CB01 <internal_commands.ab3@1463> INCLUDE "internal_commands.ab3"
0003CB02 <internal_commands.ab3@1464> INCLUDE "internal_commands.ab3"
0003CB04 <internal_commands.ab3@1467> INCLUDE "internal_commands.ab3"
0003CB08 <internal_commands.ab3@1468> INCLUDE "internal_commands.ab3"
0003CB0A <internal_commands.ab3@1469> INCLUDE "internal_commands.ab3"
0003CB0C <internal_commands.ab3@1470> INCLUDE "internal_commands.ab3"
0003CB10 <internal_commands.ab3@1471> INCLUDE "internal_commands.ab3"
0003CB12 <internal_commands.ab3@1472> INCLUDE "internal_commands.ab3"
0003CB16 <internal_commands.ab3@1476> INCLUDE "internal_commands.ab3"
0003CB18 <internal_commands.ab3@1477> INCLUDE "internal_commands.ab3"
0003CB1C <internal_commands.ab3@1478> INCLUDE "internal_commands.ab3"
0003CB1D <internal_commands.ab3@1479> INCLUDE "internal_commands.ab3"
0003CB1E <internal_commands.ab3@1480> INCLUDE "internal_commands.ab3"
0003CB20 <internal_commands.ab3@1482> INCLUDE "internal_commands.ab3"
0003CB24 <internal_commands.ab3@1483> INCLUDE "internal_commands.ab3"
0003CB26 <internal_commands.ab3@1484> INCLUDE "internal_commands.ab3"
0003CB28 <internal_commands.ab3@1485> INCLUDE "internal_commands.ab3"
0003CB2C <internal_commands.ab3@1486> INCLUDE "internal_commands.ab3"
0003CB2E <internal_commands.ab3@1487> INCLUDE "internal_commands.ab3"
0003CB32 <internal_commands.ab3@1491> INCLUDE "internal_commands.ab3"
0003CB34 <internal_commands.ab3@1492> INCLUDE "internal_commands.ab3"
0003CB38 <internal_commands.ab3@1493> INCLUDE "internal_commands.ab3"
0003CB39 <internal_commands.ab3@1494> INCLUDE "internal_commands.ab3"
0003CB3A <internal_commands.ab3@1495> INCLUDE "internal_commands.ab3"
0003CB3C <internal_commands.ab3@1497> INCLUDE "internal_commands.ab3"
0003CB40 <internal_commands.ab3@1498> INCLUDE "internal_commands.ab3"
0003CB42 <internal_commands.ab3@1499> INCLUDE "internal_commands.ab3"
0003CB44 <internal_commands.ab3@1500> INCLUDE "internal_commands.ab3"
0003CB48 <internal_commands.ab3@1501> INCLUDE "internal_commands.ab3"
0003CB4A <internal_commands.ab3@1502> INCLUDE "internal_commands.ab3"
0003CB4E <internal_commands.ab3@1506> INCLUDE "internal_commands.ab3"
0003CB50 <internal_commands.ab3@1507> INCLUDE "internal_commands.ab3"
0003CB55 <internal_commands.ab3@1508> INCLUDE "internal_commands.ab3"
0003CB56 <internal_commands.ab3@1509> INCLUDE "internal_commands.ab3"
0003CB58 <internal_commands.ab3@1512> INCLUDE "internal_commands.ab3"
0003CB5C <internal_commands.ab3@1513> INCLUDE "internal_commands.ab3"
0003CB5E <internal_commands.ab3@1514> INCLUDE "internal_commands.ab3"
0003CB60 <internal_commands.ab3@1515> INCLUDE "internal_commands.ab3"
0003CB64 <internal_commands.ab3@1516> INCLUDE "internal_commands.ab3"
0003CB66 <internal_commands.ab3@1517> INCLUDE "internal_commands.ab3"
0003CB6A <internal_commands.ab3@1521> INCLUDE "internal_commands.ab3"
0003CB6C <internal_commands.ab3@1522> INCLUDE "internal_commands.ab3"
0003CB71 <internal_commands.ab3@1523> INCLUDE "internal_commands.ab3"
0003CB72 <internal_commands.ab3@1524> INCLUDE "internal_commands.ab3"
0003CB74 <internal_commands.ab3@1527> INCLUDE "internal_commands.ab3"
0003CB78 <internal_commands.ab3@1528> INCLUDE "internal_commands.ab3"
0003CB7A <internal_commands.ab3@1529> INCLUDE "internal_commands.ab3"
0003CB7C <internal_commands.ab3@1530> INCLUDE "internal_commands.ab3"
0003CB80 <internal_commands.ab3@1531> INCLUDE "internal_commands.ab3"
0003CB82 <internal_commands.ab3@1532> INCLUDE "internal_commands.ab3"
0003CB86 <internal_commands.ab3@1537> INCLUDE "internal_commands.ab3"
0003CB88 <internal_commands.ab3@1538> INCLUDE "internal_commands.ab3"
0003CB8E <internal_commands.ab3@1539> INCLUDE "internal_commands.ab3"
0003CB8F <internal_commands.ab3@1540> INCLUDE "internal_commands.ab3"
0003CB90 <internal_commands.ab3@1541> INCLUDE "internal_commands.ab3"
0003CB92 <internal_commands.ab3@1543> INCLUDE "internal_commands.ab3"
0003CB96 <internal_commands.ab3@1544> INCLUDE "internal_commands.ab3"
0003CB98 <internal_commands.ab3@1545> INCLUDE "internal_commands.ab3"
0003CB9A <internal_commands.ab3@1546> INCLUDE "internal_commands.ab3"
0003CB9E <internal_commands.ab3@1547> INCLUDE "internal_commands.ab3"
0003CBA0 <internal_commands.ab3@1548> INCLUDE "internal_commands.ab3"
0003CBA4 <internal_commands.ab3@1552> INCLUDE "internal_commands.ab3"
0003CBA6 <internal_commands.ab3@1553> INCLUDE "internal_commands.ab3"
0003CBAC <internal_commands.ab3@1554> INCLUDE "internal_commands.ab3"
0003CBAD <internal_commands.ab3@1555> INCLUDE "internal_commands.ab3"
0003CBAE <internal_commands.ab3@1556> INCLUDE "internal_commands.ab3"
0003CBB0 <internal_commands.ab3@1558> INCLUDE "internal_commands.ab3"
0003CBB4 <internal_commands.ab3@1559> INCLUDE "internal_commands.ab3"
0003CBB6 <internal_commands.ab3@1560> INCLUDE "internal_commands.ab3"
0003CBB8 <internal_commands.ab3@1561> INCLUDE "internal_commands.ab3"
0003CBBC <internal_commands.ab3@1562> INCLUDE "internal_commands.ab3"
0003CBBE <internal_commands.ab3@1563> INCLUDE "internal_commands.ab3"
0003CBC2 <internal_commands.ab3@1567> INCLUDE "internal_commands.ab3"
0003CBC4 <internal_commands.ab3@1568> INCLUDE "internal_commands.ab3"
0003CBCA <internal_commands.ab3@1569> INCLUDE "internal_commands.ab3"
0003CBCB <internal_commands.ab3@1570> INCLUDE "internal_commands.ab3"
0003CBCC <internal_commands.ab3@1571> INCLUDE "internal_commands.ab3"
0003CBCE <internal_commands.ab3@1573> INCLUDE "internal_commands.ab3"
0003CBD2 <internal_commands.ab3@1574> INCLUDE "internal_commands.ab3"
0003CBD4 <internal_commands.ab3@1575> INCLUDE "internal_commands.ab3"
0003CBD6 <internal_commands.ab3@1576> INCLUDE "internal_commands.ab3"
0003CBDA <internal_commands.ab3@1577> INCLUDE "internal_commands.ab3"
0003CBDC <internal_commands.ab3@1578> INCLUDE "internal_commands.ab3"
0003CBE0 <internal_commands.ab3@1582> INCLUDE "internal_commands.ab3"
0003CBE2 <internal_commands.ab3@1583> INCLUDE "internal_commands.ab3"
0003CBE7 <internal_commands.ab3@1584> INCLUDE "internal_commands.ab3"
0003CBE8 <internal_commands.ab3@1585> INCLUDE "internal_commands.ab3"
0003CBEA <internal_commands.ab3@1588> INCLUDE "internal_commands.ab3"
0003CBEE <internal_commands.ab3@1589> INCLUDE "internal_commands.ab3"
0003CBF0 <internal_commands.ab3@1590> INCLUDE "internal_commands.ab3"
0003CBF2 <internal_commands.ab3@1591> INCLUDE "internal_commands.ab3"
0003CBF6 <internal_commands.ab3@1592> INCLUDE "internal_commands.ab3"
0003CBF8 <internal_commands.ab3@1593> INCLUDE "internal_commands.ab3"
0003CBFC <internal_commands.ab3@1597> INCLUDE "internal_commands.ab3"
0003CBFE <internal_commands.ab3@1598> INCLUDE "internal_commands.ab3"
0003CC03 <internal_commands.ab3@1599> INCLUDE "internal_commands.ab3"
0003CC04 <internal_commands.ab3@1600> INCLUDE "internal_commands.ab3"
0003CC06 <internal_commands.ab3@1603> INCLUDE "internal_commands.ab3"
0003CC0A <internal_commands.ab3@1604> INCLUDE "internal_commands.ab3"
0003CC0C <internal_commands.ab3@1605> INCLUDE "internal_commands.ab3"
0003CC0E <internal_commands.ab3@1606> INCLUDE "internal_commands.ab3"
0003CC12 <internal_commands.ab3@1607> INCLUDE "internal_commands.ab3"
0003CC14 <internal_commands.ab3@1608> INCLUDE "internal_commands.ab3"
0003CC18 <internal_commands.ab3@1612> INCLUDE "internal_commands.ab3"
0003CC1A <internal_commands.ab3@1613> INCLUDE "internal_commands.ab3"
0003CC1F <internal_commands.ab3@1614> INCLUDE "internal_commands.ab3"
0003CC20 <internal_commands.ab3@1615> INCLUDE "internal_commands.ab3"
0003CC22 <internal_commands.ab3@1618> INCLUDE "internal_commands.ab3"
0003CC26 <internal_commands.ab3@1619> INCLUDE "internal_commands.ab3"
0003CC28 <internal_commands.ab3@1620> INCLUDE "internal_commands.ab3"
0003CC2A <internal_commands.ab3@1621> INCLUDE "internal_commands.ab3"
0003CC2E <internal_commands.ab3@1622> INCLUDE "internal_commands.ab3"
0003CC30 <internal_commands.ab3@1623> INCLUDE "internal_commands.ab3"
0003CC34 <internal_commands.ab3@1627> INCLUDE "internal_commands.ab3"
0003CC36 <internal_commands.ab3@1628> INCLUDE "internal_commands.ab3"
0003CC3A <internal_commands.ab3@1629> INCLUDE "internal_commands.ab3"
0003CC3B <internal_commands.ab3@1630> INCLUDE "internal_commands.ab3"
0003CC3C <internal_commands.ab3@1631> INCLUDE "internal_commands.ab3"
0003CC3E <internal_commands.ab3@1633> INCLUDE "internal_commands.ab3"
0003CC42 <internal_commands.ab3@1634> INCLUDE "internal_commands.ab3"
0003CC44 <internal_commands.ab3@1635> INCLUDE "internal_commands.ab3"
0003CC46 <internal_commands.ab3@1636> INCLUDE "internal_commands.ab3"
0003CC4A <internal_commands.ab3@1637> INCLUDE "internal_commands.ab3"
0003CC4C <internal_commands.ab3@1638> INCLUDE "internal_commands.ab3"
0003CC50 <internal_commands.ab3@1642> INCLUDE "internal_commands.ab3"
0003CC52 <internal_commands.ab3@1643> INCLUDE "internal_commands.ab3"
0003CC57 <internal_commands.ab3@1644> INCLUDE "internal_commands.ab3"
0003CC58 <internal_commands.ab3@1645> INCLUDE "internal_commands.ab3"
0003CC5A <internal_commands.ab3@1648> INCLUDE "internal_commands.ab3"
0003CC5E <internal_commands.ab3@1649> INCLUDE "internal_commands.ab3"
0003CC60 <internal_commands.ab3@1650> INCLUDE "internal_commands.ab3"
0003CC62 <internal_commands.ab3@1651> INCLUDE "internal_commands.ab3"
0003CC66 <internal_commands.ab3@1652> INCLUDE "internal_commands.ab3"
0003CC68 <internal_commands.ab3@1653> INCLUDE "internal_commands.ab3"
0003CC6C <internal_commands.ab3@1657> INCLUDE "internal_commands.ab3"
0003CC6E <internal_commands.ab3@1658> INCLUDE "internal_commands.ab3"
0003CC72 <internal_commands.ab3@1659> INCLUDE "internal_commands.ab3"
0003CC73 <internal_commands.ab3@1660> INCLUDE "internal_commands.ab3"
0003CC74 <internal_commands.ab3@1661> INCLUDE "internal_commands.ab3"
0003CC76 <internal_commands.ab3@1663> INCLUDE "internal_commands.ab3"
0003CC7A <internal_commands.ab3@1664> INCLUDE "internal_commands.ab3"
0003CC7C <internal_commands.ab3@1665> INCLUDE "internal_commands.ab3"
0003CC7E <internal_commands.ab3@1666> INCLUDE "internal_commands.ab3"
0003CC82 <internal_commands.ab3@1667> INCLUDE "internal_commands.ab3"
0003CC84 <internal_commands.ab3@1668> INCLUDE "internal_commands.ab3"
0003CC88 <internal_commands.ab3@1672> INCLUDE "internal_commands.ab3"
0003CC8A <internal_commands.ab3@1673> INCLUDE "internal_commands.ab3"
0003CC8E <internal_commands.ab3@1674> INCLUDE "internal_commands.ab3"
0003CC8F <internal_commands.ab3@1675> INCLUDE "internal_commands.ab3"
0003CC90 <internal_commands.ab3@1676> INCLUDE "internal_commands.ab3"
0003CC92 <internal_commands.ab3@1678> INCLUDE "internal_commands.ab3"
0003CC96 <internal_commands.ab3@1679> INCLUDE "internal_commands.ab3"
0003CC98 <internal_commands.ab3@1680> INCLUDE "internal_commands.ab3"
0003CC9A <internal_commands.ab3@1681> INCLUDE "internal_commands.ab3"
0003CC9E <internal_commands.ab3@1682> INCLUDE "internal_commands.ab3"
0003CCA0 <internal_commands.ab3@1683> INCLUDE "internal_commands.ab3"
0003CCA4 <internal_commands.ab3@1687> INCLUDE "internal_commands.ab3"
0003CCA6 <internal_commands.ab3@1688> INCLUDE "internal_commands.ab3"
0003CCA9 <internal_commands.ab3@1689> INCLUDE "internal_commands.ab3"
0003CCAA <internal_commands.ab3@1690> INCLUDE "internal_commands.ab3"
0003CCAC <internal_commands.ab3@1693> INCLUDE "internal_commands.ab3"
0003CCB0 <internal_commands.ab3@1694> INCLUDE "internal_commands.ab3"
0003CCB2 <internal_commands.ab3@1695> INCLUDE "internal_commands.ab3"
0003CCB4 <internal_commands.ab3@1696> INCLUDE "internal_commands.ab3"
0003CCB8 <internal_commands.ab3@1697> INCLUDE "internal_commands.ab3"
0003CCBA <internal_commands.ab3@1698> INCLUDE "internal_commands.ab3"
0003CCBE <internal_commands.ab3@1702> INCLUDE "internal_commands.ab3"
0003CCC0 <internal_commands.ab3@1703> INCLUDE "internal_commands.ab3"
0003CCC4 <internal_commands.ab3@1704> INCLUDE "internal_commands.ab3"
0003CCC5 <internal_commands.ab3@1705> INCLUDE "internal_commands.ab3"
0003CCC6 <internal_commands.ab3@1706> INCLUDE "internal_commands.ab3"
0003CCC8 <internal_commands.ab3@1708> INCLUDE "internal_commands.ab3"
0003CCCC <internal_commands.ab3@1709> INCLUDE "internal_commands.ab3"
0003CCCE <internal_commands.ab3@1710> INCLUDE "internal_commands.ab3"
0003CCD0 <internal_commands.ab3@1711> INCLUDE "internal_commands.ab3"
0003CCD4 <internal_commands.ab3@1712> INCLUDE "internal_commands.ab3"
0003CCD6 <internal_commands.ab3@1713> INCLUDE "internal_commands.ab3"
0003CCDA <internal_commands.ab3@1717> INCLUDE "internal_commands.ab3"
0003CCDC <internal_commands.ab3@1718> INCLUDE "internal_commands.ab3"
0003CCE0 <internal_commands.ab3@1719> INCLUDE "internal_commands.ab3"
0003CCE1 <internal_commands.ab3@1720> INCLUDE "internal_commands.ab3"
0003CCE2 <internal_commands.ab3@1721> INCLUDE "internal_commands.ab3"
0003CCE4 <internal_commands.ab3@1723> INCLUDE "internal_commands.ab3"
0003CCE8 <internal_commands.ab3@1724> INCLUDE "internal_commands.ab3"
0003CCEA <internal_commands.ab3@1725> INCLUDE "internal_commands.ab3"
0003CCEC <internal_commands.ab3@1726> INCLUDE "internal_commands.ab3"
0003CCF0 <internal_commands.ab3@1727> INCLUDE "internal_commands.ab3"
0003CCF2 <internal_commands.ab3@1728> INCLUDE "internal_commands.ab3"
0003CCF6 <internal_commands.ab3@1732> INCLUDE "internal_commands.ab3"
0003CCF8 <internal_commands.ab3@1733> INCLUDE "internal_commands.ab3"
0003CCFE <internal_commands.ab3@1734> INCLUDE "internal_commands.ab3"
0003CCFF <internal_commands.ab3@1735> INCLUDE "internal_commands.ab3"
0003CD00 <internal_commands.ab3@1736> INCLUDE "internal_commands.ab3"
0003CD02 <internal_commands.ab3@1738> INCLUDE "internal_commands.ab3"
0003CD06 <internal_commands.ab3@1739> INCLUDE "internal_commands.ab3"
0003CD08 <internal_commands.ab3@1740> INCLUDE "internal_commands.ab3"
0003CD0A <internal_commands.ab3@1741> INCLUDE "internal_commands.ab3"
0003CD0E <internal_commands.ab3@1742> INCLUDE "internal_commands.ab3"
0003CD10 <internal_commands.ab3@1743> INCLUDE "internal_commands.ab3"
0003CD14 <internal_commands.ab3@1747> INCLUDE "internal_commands.ab3"
0003CD16 <internal_commands.ab3@1748> INCLUDE "internal_commands.ab3"
0003CD1A <internal_commands.ab3@1749> INCLUDE "internal_commands.ab3"
0003CD1B <internal_commands.ab3@1750> INCLUDE "internal_commands.ab3"
0003CD1C <internal_commands.ab3@1751> INCLUDE "internal_commands.ab3"
0003CD1E <internal_commands.ab3@1753> INCLUDE "internal_commands.ab3"
0003CD22 <internal_commands.ab3@1754> INCLUDE "internal_commands.ab3"
0003CD24 <internal_commands.ab3@1755> INCLUDE "internal_commands.ab3"
0003CD26 <internal_commands.ab3@1756> INCLUDE "internal_commands.ab3"
0003CD2A <internal_commands.ab3@1757> INCLUDE "internal_commands.ab3"
0003CD2C <internal_commands.ab3@1758> INCLUDE "internal_commands.ab3"
0003CD30 <internal_commands.ab3@1762> INCLUDE "internal_commands.ab3"
0003CD32 <internal_commands.ab3@1763> INCLUDE "internal_commands.ab3"
0003CD36 <internal_commands.ab3@1764> INCLUDE "internal_commands.ab3"
0003CD37 <internal_commands.ab3@1765> INCLUDE "internal_commands.ab3"
0003CD38 <internal_commands.ab3@1766> INCLUDE "internal_commands.ab3"
0003CD3A <internal_commands.ab3@1768> INCLUDE "internal_commands.ab3"
0003CD3E <internal_commands.ab3@1769> INCLUDE "internal_commands.ab3"
0003CD40 <internal_commands.ab3@1770> INCLUDE "internal_commands.ab3"
0003CD42 <internal_commands.ab3@1771> INCLUDE "internal_commands.ab3"
0003CD46 <internal_commands.ab3@1772> INCLUDE "internal_commands.ab3"
0003CD48 <internal_commands.ab3@1773> INCLUDE "internal_commands.ab3"
0003CD4C <internal_commands.ab3@1777> INCLUDE "internal_commands.ab3"
0003CD4E <internal_commands.ab3@1778> INCLUDE "internal_commands.ab3"
0003CD53 <internal_commands.ab3@1779> INCLUDE "internal_commands.ab3"
0003CD54 <internal_commands.ab3@1780> INCLUDE "internal_commands.ab3"
0003CD56 <internal_commands.ab3@1783> INCLUDE "internal_commands.ab3"
0003CD5A <internal_commands.ab3@1784> INCLUDE "internal_commands.ab3"
0003CD5C <internal_commands.ab3@1785> INCLUDE "internal_commands.ab3"
0003CD5E <internal_commands.ab3@1786> INCLUDE "internal_commands.ab3"
0003CD62 <internal_commands.ab3@1787> INCLUDE "internal_commands.ab3"
0003CD64 <internal_commands.ab3@1788> INCLUDE "internal_commands.ab3"
0003CD68 <internal_commands.ab3@1792> INCLUDE "internal_commands.ab3"
0003CD6A <internal_commands.ab3@1793> INCLUDE "internal_commands.ab3"
0003CD6F <internal_commands.ab3@1794> INCLUDE "internal_commands.ab3"
0003CD70 <internal_commands.ab3@1795> INCLUDE "internal_commands.ab3"
0003CD72 <internal_commands.ab3@1798> INCLUDE "internal_commands.ab3"
0003CD76 <internal_commands.ab3@1799> INCLUDE "internal_commands.ab3"
0003CD78 <internal_commands.ab3@1800> INCLUDE "internal_commands.ab3"
0003CD7A <internal_commands.ab3@1801> INCLUDE "internal_commands.ab3"
0003CD7E <internal_commands.ab3@1802> INCLUDE "internal_commands.ab3"
0003CD80 <internal_commands.ab3@1803> INCLUDE "internal_commands.ab3"
0003CD84 <internal_commands.ab3@1807> INCLUDE "internal_commands.ab3"
0003CD86 <internal_commands.ab3@1808> INCLUDE "internal_commands.ab3"
0003CD8A <internal_commands.ab3@1809> INCLUDE "internal_commands.ab3"
0003CD8B <internal_commands.ab3@1810> INCLUDE "internal_commands.ab3"
0003CD8C <internal_commands.ab3@1811> INCLUDE "internal_commands.ab3"
0003CD8E <internal_commands.ab3@1813> INCLUDE "internal_commands.ab3"
0003CD92 <internal_commands.ab3@1814> INCLUDE "internal_commands.ab3"
0003CD94 <internal_commands.ab3@1815> INCLUDE "internal_commands.ab3"
0003CD96 <internal_commands.ab3@1816> INCLUDE "internal_commands.ab3"
0003CD9A <internal_commands.ab3@1817> INCLUDE "internal_commands.ab3"
0003CD9C <internal_commands.ab3@1818> INCLUDE "internal_commands.ab3"
0003CDA0 <internal_commands.ab3@1822> INCLUDE "internal_commands.ab3"
0003CDA2 <internal_commands.ab3@1823> INCLUDE "internal_commands.ab3"
0003CDA6 <internal_commands.ab3@1824> INCLUDE "internal_commands.ab3"
0003CDA7 <internal_commands.ab3@1825> INCLUDE "internal_commands.ab3"
0003CDA8 <internal_commands.ab3@1826> INCLUDE "internal_commands.ab3"
0003CDAA <internal_commands.ab3@1828> INCLUDE "internal_commands.ab3"
0003CDAE <internal_commands.ab3@1829> INCLUDE "internal_commands.ab3"
0003CDB0 <internal_commands.ab3@1830> INCLUDE "internal_commands.ab3"
0003CDB2 <internal_commands.ab3@1831> INCLUDE "internal_commands.ab3"
0003CDB6 <internal_commands.ab3@1832> INCLUDE "internal_commands.ab3"
0003CDB8 <internal_commands.ab3@1833> INCLUDE "internal_commands.ab3"
0003CDBC <internal_commands.ab3@1837> INCLUDE "internal_commands.ab3"
0003CDBE <internal_commands.ab3@1838> INCLUDE "internal_commands.ab3"
0003CDC2 <internal_commands.ab3@1839> INCLUDE "internal_commands.ab3"
0003CDC3 <internal_commands.ab3@1840> INCLUDE "internal_commands.ab3"
0003CDC4 <internal_commands.ab3@1841> INCLUDE "internal_commands.ab3"
0003CDC6 <internal_commands.ab3@1843> INCLUDE "internal_commands.ab3"
0003CDCA <internal_commands.ab3@1844> INCLUDE "internal_commands.ab3"
0003CDCC <internal_commands.ab3@1845> INCLUDE "internal_commands.ab3"
0003CDCE <internal_commands.ab3@1846> INCLUDE "internal_commands.ab3"
0003CDD2 <internal_commands.ab3@1847> INCLUDE "internal_commands.ab3"
0003CDD4 <internal_commands.ab3@1848> INCLUDE "internal_commands.ab3"
0003CDD8 <internal_commands.ab3@1852> INCLUDE "internal_commands.ab3"
0003CDDA <internal_commands.ab3@1853> INCLUDE "internal_commands.ab3"
0003CDDF <internal_commands.ab3@1854> INCLUDE "internal_commands.ab3"
0003CDE0 <internal_commands.ab3@1855> INCLUDE "internal_commands.ab3"
0003CDE2 <internal_commands.ab3@1858> INCLUDE "internal_commands.ab3"
0003CDE6 <internal_commands.ab3@1859> INCLUDE "internal_commands.ab3"
0003CDE8 <internal_commands.ab3@1860> INCLUDE "internal_commands.ab3"
0003CDEA <internal_commands.ab3@1861> INCLUDE "internal_commands.ab3"
0003CDEE <internal_commands.ab3@1862> INCLUDE "internal_commands.ab3"
0003CDF0 <internal_commands.ab3@1863> INCLUDE "internal_commands.ab3"
0003CDF4 <internal_commands.ab3@1867> INCLUDE "internal_commands.ab3"
0003CDF6 <internal_commands.ab3@1868> INCLUDE "internal_commands.ab3"
0003CDFA <internal_commands.ab3@1869> INCLUDE "internal_commands.ab3"
0003CDFB <internal_commands.ab3@1870> INCLUDE "internal_commands.ab3"
0003CDFC <internal_commands.ab3@1871> INCLUDE "internal_commands.ab3"
0003CDFE <internal_commands.ab3@1873> INCLUDE "internal_commands.ab3"
0003CE02 <internal_commands.ab3@1874> INCLUDE "internal_commands.ab3"
0003CE04 <internal_commands.ab3@1875> INCLUDE "internal_commands.ab3"
0003CE06 <internal_commands.ab3@1876> INCLUDE "internal_commands.ab3"
0003CE0A <internal_commands.ab3@1877> INCLUDE "internal_commands.ab3"
0003CE0C <internal_commands.ab3@1878> INCLUDE "internal_commands.ab3"
0003CE10 <internal_commands.ab3@1882> INCLUDE "internal_commands.ab3"
0003CE12 <internal_commands.ab3@1883> INCLUDE "internal_commands.ab3"
0003CE16 <internal_commands.ab3@1884> INCLUDE "internal_commands.ab3"
0003CE17 <internal_commands.ab3@1885> INCLUDE "internal_commands.ab3"
0003CE18 <internal_commands.ab3@1886> INCLUDE "internal_commands.ab3"
0003CE1A <internal_commands.ab3@1888> INCLUDE "internal_commands.ab3"
0003CE1E <internal_commands.ab3@1889> INCLUDE "internal_commands.ab3"
0003CE20 <internal_commands.ab3@1890> INCLUDE "internal_commands.ab3"
0003CE22 <internal_commands.ab3@1891> INCLUDE "internal_commands.ab3"
0003CE26 <internal_commands.ab3@1892> INCLUDE "internal_commands.ab3"
0003CE28 <internal_commands.ab3@1893> INCLUDE "internal_commands.ab3"
0003CE2C <internal_commands.ab3@1897> INCLUDE "internal_commands.ab3"
0003CE2E <internal_commands.ab3@1898> INCLUDE "internal_commands.ab3"
0003CE32 <internal_commands.ab3@1899> INCLUDE "internal_commands.ab3"
0003CE33 <internal_commands.ab3@1900> INCLUDE "internal_commands.ab3"
0003CE34 <internal_commands.ab3@1901> INCLUDE "internal_commands.ab3"
0003CE36 <internal_commands.ab3@1903> INCLUDE "internal_commands.ab3"
0003CE3A <internal_commands.ab3@1904> INCLUDE "internal_commands.ab3"
0003CE3C <internal_commands.ab3@1905> INCLUDE "internal_commands.ab3"
0003CE3E <internal_commands.ab3@1906> INCLUDE "internal_commands.ab3"
0003CE42 <internal_commands.ab3@1907> INCLUDE "internal_commands.ab3"
0003CE44 <internal_commands.ab3@1908> INCLUDE "internal_commands.ab3"
0003CE48 <internal_commands.ab3@1912> INCLUDE "internal_commands.ab3"
0003CE4A <internal_commands.ab3@1913> INCLUDE "internal_commands.ab3"
0003CE4E <internal_commands.ab3@1914> INCLUDE "internal_commands.ab3"
0003CE4F <internal_commands.ab3@1915> INCLUDE "internal_commands.ab3"
0003CE50 <internal_commands.ab3@1916> INCLUDE "internal_commands.ab3"
0003CE52 <internal_commands.ab3@1918> INCLUDE "internal_commands.ab3"
0003CE56 <internal_commands.ab3@1919> INCLUDE "internal_commands.ab3"
0003CE58 <internal_commands.ab3@1920> INCLUDE "internal_commands.ab3"
0003CE5A <internal_commands.ab3@1921> INCLUDE "internal_commands.ab3"
0003CE5E <internal_commands.ab3@1922> INCLUDE "internal_commands.ab3"
0003CE60 <internal_commands.ab3@1923> INCLUDE "internal_commands.ab3"
0003CE64 <internal_commands.ab3@1927> INCLUDE "internal_commands.ab3"
0003CE66 <internal_commands.ab3@1928> INCLUDE "internal_commands.ab3"
0003CE6A <internal_commands.ab3@1929> INCLUDE "internal_commands.ab3"
0003CE6B <internal_commands.ab3@1930> INCLUDE "internal_commands.ab3"
0003CE6C <internal_commands.ab3@1931> INCLUDE "internal_commands.ab3"
0003CE6E <internal_commands.ab3@1933> INCLUDE "internal_commands.ab3"
0003CE72 <internal_commands.ab3@1934> INCLUDE "internal_commands.ab3"
0003CE74 <internal_commands.ab3@1935> INCLUDE "internal_commands.ab3"
0003CE76 <internal_commands.ab3@1936> INCLUDE "internal_commands.ab3"
0003CE7A <internal_commands.ab3@1937> INCLUDE "internal_commands.ab3"
0003CE7C <internal_commands.ab3@1938> INCLUDE "internal_commands.ab3"
0003CE80 <internal_commands.ab3@1942> INCLUDE "internal_commands.ab3"
0003CE82 <internal_commands.ab3@1943> INCLUDE "internal_commands.ab3"
0003CE86 <internal_commands.ab3@1944> INCLUDE "internal_commands.ab3"
0003CE87 <internal_commands.ab3@1945> INCLUDE "internal_commands.ab3"
0003CE88 <internal_commands.ab3@1946> INCLUDE "internal_commands.ab3"
0003CE8A <internal_commands.ab3@1948> INCLUDE "internal_commands.ab3"
0003CE8E <internal_commands.ab3@1949> INCLUDE "internal_commands.ab3"
0003CE90 <internal_commands.ab3@1950> INCLUDE "internal_commands.ab3"
0003CE92 <internal_commands.ab3@1951> INCLUDE "internal_commands.ab3"
0003CE96 <internal_commands.ab3@1952> INCLUDE "internal_commands.ab3"
0003CE98 <internal_commands.ab3@1953> INCLUDE "internal_commands.ab3"
0003CE9C <internal_commands.ab3@1957> INCLUDE "internal_commands.ab3"
0003CE9E <internal_commands.ab3@1958> INCLUDE "internal_commands.ab3"
0003CEA2 <internal_commands.ab3@1959> INCLUDE "internal_commands.ab3"
0003CEA3 <internal_commands.ab3@1960> INCLUDE "internal_commands.ab3"
0003CEA4 <internal_commands.ab3@1961> INCLUDE "internal_commands.ab3"
0003CEA6 <internal_commands.ab3@1963> INCLUDE "internal_commands.ab3"
0003CEAA <internal_commands.ab3@1964> INCLUDE "internal_commands.ab3"
0003CEAC <internal_commands.ab3@1965> INCLUDE "internal_commands.ab3"
0003CEAE <internal_commands.ab3@1966> INCLUDE "internal_commands.ab3"
0003CEB2 <internal_commands.ab3@1967> INCLUDE "internal_commands.ab3"
0003CEB4 <internal_commands.ab3@1968> INCLUDE "internal_commands.ab3"
0003CEB8 <internal_commands.ab3@1972> INCLUDE "internal_commands.ab3"
0003CEBA <internal_commands.ab3@1973> INCLUDE "internal_commands.ab3"
0003CEBE <internal_commands.ab3@1974> INCLUDE "internal_commands.ab3"
0003CEBF <internal_commands.ab3@1975> INCLUDE "internal_commands.ab3"
0003CEC0 <internal_commands.ab3@1976> INCLUDE "internal_commands.ab3"
0003CEC2 <internal_commands.ab3@1978> INCLUDE "internal_commands.ab3"
0003CEC6 <internal_commands.ab3@1979> INCLUDE "internal_commands.ab3"
0003CEC8 <internal_commands.ab3@1980> INCLUDE "internal_commands.ab3"
0003CECA <internal_commands.ab3@1981> INCLUDE "internal_commands.ab3"
0003CECE <internal_commands.ab3@1982> INCLUDE "internal_commands.ab3"
0003CED0 <internal_commands.ab3@1983> INCLUDE "internal_commands.ab3"
0003CED4 <internal_commands.ab3@1987> INCLUDE "internal_commands.ab3"
0003CED6 <internal_commands.ab3@1988> INCLUDE "internal_commands.ab3"
0003CEDA <internal_commands.ab3@1989> INCLUDE "internal_commands.ab3"
0003CEDB <internal_commands.ab3@1990> INCLUDE "internal_commands.ab3"
0003CEDC <internal_commands.ab3@1991> INCLUDE "internal_commands.ab3"
0003CEDE <internal_commands.ab3@1993> INCLUDE "internal_commands.ab3"
0003CEE2 <internal_commands.ab3@1994> INCLUDE "internal_commands.ab3"
0003CEE4 <internal_commands.ab3@1995> INCLUDE "internal_commands.ab3"
0003CEE6 <internal_commands.ab3@1996> INCLUDE "internal_commands.ab3"
0003CEEA <internal_commands.ab3@1997> INCLUDE "internal_commands.ab3"
0003CEEC <internal_commands.ab3@1998> INCLUDE "internal_commands.ab3"
0003CEF0 <internal_commands.ab3@2002> INCLUDE "internal_commands.ab3"
0003CEF2 <internal_commands.ab3@2003> INCLUDE "internal_commands.ab3"
0003CEF6 <internal_commands.ab3@2004> INCLUDE "internal_commands.ab3"
0003CEF7 <internal_commands.ab3@2005> INCLUDE "internal_commands.ab3"
0003CEF8 <internal_commands.ab3@2006> INCLUDE "internal_commands.ab3"
0003CEFA <internal_commands.ab3@2008> INCLUDE "internal_commands.ab3"
0003CEFE <internal_commands.ab3@2009> INCLUDE "internal_commands.ab3"
0003CF00 <internal_commands.ab3@2010> INCLUDE "internal_commands.ab3"
0003CF02 <internal_commands.ab3@2011> INCLUDE "internal_commands.ab3"
0003CF06 <internal_commands.ab3@2012> INCLUDE "internal_commands.ab3"
0003CF08 <internal_commands.ab3@2013> INCLUDE "internal_commands.ab3"
0003CF0C <internal_commands.ab3@2017> INCLUDE "internal_commands.ab3"
0003CF0E <internal_commands.ab3@2018> INCLUDE "internal_commands.ab3"
0003CF12 <internal_commands.ab3@2019> INCLUDE "internal_commands.ab3"
0003CF13 <internal_commands.ab3@2020> INCLUDE "internal_commands.ab3"
0003CF14 <internal_commands.ab3@2021> INCLUDE "internal_commands.ab3"
0003CF16 <internal_commands.ab3@2023> INCLUDE "internal_commands.ab3"
0003CF1A <internal_commands.ab3@2024> INCLUDE "internal_commands.ab3"
0003CF1C <internal_commands.ab3@2025> INCLUDE "internal_commands.ab3"
0003CF1E <internal_commands.ab3@2026> INCLUDE "internal_commands.ab3"
0003CF22 <internal_commands.ab3@2027> INCLUDE "internal_commands.ab3"
0003CF24 <internal_commands.ab3@2028> INCLUDE "internal_commands.ab3"
0003CF28 <internal_commands.ab3@2032> INCLUDE "internal_commands.ab3"
0003CF2A <internal_commands.ab3@2033> INCLUDE "internal_commands.ab3"
0003CF2E <internal_commands.ab3@2034> INCLUDE "internal_commands.ab3"
0003CF2F <internal_commands.ab3@2035> INCLUDE "internal_commands.ab3"
0003CF30 <internal_commands.ab3@2036> INCLUDE "internal_commands.ab3"
0003CF32 <internal_commands.ab3@2038> INCLUDE "internal_commands.ab3"
0003CF36 <internal_commands.ab3@2039> INCLUDE "internal_commands.ab3"
0003CF38 <internal_commands.ab3@2040> INCLUDE "internal_commands.ab3"
0003CF3A <internal_commands.ab3@2041> INCLUDE "internal_commands.ab3"
0003CF3E <internal_commands.ab3@2042> INCLUDE "internal_commands.ab3"
0003CF40 <internal_commands.ab3@2043> INCLUDE "internal_commands.ab3"
0003CF44 <internal_commands.ab3@2047> INCLUDE "internal_commands.ab3"
0003CF46 <internal_commands.ab3@2048> INCLUDE "internal_commands.ab3"
0003CF4A <internal_commands.ab3@2049> INCLUDE "internal_commands.ab3"
0003CF4B <internal_commands.ab3@2050> INCLUDE "internal_commands.ab3"
0003CF4C <internal_commands.ab3@2051> INCLUDE "internal_commands.ab3"
0003CF4E <internal_commands.ab3@2053> INCLUDE "internal_commands.ab3"
0003CF52 <internal_commands.ab3@2054> INCLUDE "internal_commands.ab3"
0003CF54 <internal_commands.ab3@2055> INCLUDE "internal_commands.ab3"
0003CF56 <internal_commands.ab3@2056> INCLUDE "internal_commands.ab3"
0003CF5A <internal_commands.ab3@2057> INCLUDE "internal_commands.ab3"
0003CF5C <internal_commands.ab3@2058> INCLUDE "internal_commands.ab3"
0003CF60 <internal_commands.ab3@2062> INCLUDE "internal_commands.ab3"
0003CF62 <internal_commands.ab3@2063> INCLUDE "internal_commands.ab3"
0003CF66 <internal_commands.ab3@2064> INCLUDE "internal_commands.ab3"
0003CF67 <internal_commands.ab3@2065> INCLUDE "internal_commands.ab3"
0003CF68 <internal_commands.ab3@2066> INCLUDE "internal_commands.ab3"
0003CF6A <internal_commands.ab3@2068> INCLUDE "internal_commands.ab3"
0003CF6E <internal_commands.ab3@2069> INCLUDE "internal_commands.ab3"
0003CF70 <internal_commands.ab3@2070> INCLUDE "internal_commands.ab3"
0003CF72 <internal_commands.ab3@2071> INCLUDE "internal_commands.ab3"
0003CF76 <internal_commands.ab3@2072> INCLUDE "internal_commands.ab3"
0003CF78 <internal_commands.ab3@2073> INCLUDE "internal_commands.ab3"
0003CF7C <internal_commands.ab3@2077> INCLUDE "internal_commands.ab3"
0003CF7E <internal_commands.ab3@2078> INCLUDE "internal_commands.ab3"
0003CF81 <internal_commands.ab3@2079> INCLUDE "internal_commands.ab3"
0003CF82 <internal_commands.ab3@2080> INCLUDE "internal_commands.ab3"
0003CF84 <internal_commands.ab3@2083> INCLUDE "internal_commands.ab3"
0003CF88 <internal_commands.ab3@2084> INCLUDE "internal_commands.ab3"
0003CF8A <internal_commands.ab3@2085> INCLUDE "internal_commands.ab3"
0003CF8C <internal_commands.ab3@2086> INCLUDE "internal_commands.ab3"
0003CF90 <internal_commands.ab3@2087> INCLUDE "internal_commands.ab3"
0003CF92 <internal_commands.ab3@2088> INCLUDE "internal_commands.ab3"
0003CF96 <internal_commands.ab3@2092> INCLUDE "internal_commands.ab3"
0003CF98 <internal_commands.ab3@2093> INCLUDE "internal_commands.ab3"
0003CF9B <internal_commands.ab3@2094> INCLUDE "internal_commands.ab3"
0003CF9C <internal_commands.ab3@2095> INCLUDE "internal_commands.ab3"
0003CF9E <internal_commands.ab3@2098> INCLUDE "internal_commands.ab3"
0003CFA2 <internal_commands.ab3@2099> INCLUDE "internal_commands.ab3"
0003CFA4 <internal_commands.ab3@2100> INCLUDE "internal_commands.ab3"
0003CFA6 <internal_commands.ab3@2101> INCLUDE "internal_commands.ab3"
0003CFAA <internal_commands.ab3@2102> INCLUDE "internal_commands.ab3"
0003CFAC <internal_commands.ab3@2103> INCLUDE "internal_commands.ab3"
0003CFB0 <internal_commands.ab3@2107> INCLUDE "internal_commands.ab3"
0003CFB2 <internal_commands.ab3@2108> INCLUDE "internal_commands.ab3"
0003CFB7 <internal_commands.ab3@2109> INCLUDE "internal_commands.ab3"
0003CFB8 <internal_commands.ab3@2110> INCLUDE "internal_commands.ab3"
0003CFBA <internal_commands.ab3@2113> INCLUDE "internal_commands.ab3"
0003CFBE <internal_commands.ab3@2114> INCLUDE "internal_commands.ab3"
0003CFC0 <internal_commands.ab3@2115> INCLUDE "internal_commands.ab3"
0003CFC2 <internal_commands.ab3@2116> INCLUDE "internal_commands.ab3"
0003CFC6 <internal_commands.ab3@2117> INCLUDE "internal_commands.ab3"
0003CFC8 <internal_commands.ab3@2118> INCLUDE "internal_commands.ab3"
0003CFCC <internal_commands.ab3@2122> INCLUDE "internal_commands.ab3"
0003CFCE <internal_commands.ab3@2123> INCLUDE "internal_commands.ab3"
0003CFD2 <internal_commands.ab3@2124> INCLUDE "internal_commands.ab3"
0003CFD3 <internal_commands.ab3@2125> INCLUDE "internal_commands.ab3"
0003CFD4 <internal_commands.ab3@2126> INCLUDE "internal_commands.ab3"
0003CFD6 <internal_commands.ab3@2128> INCLUDE "internal_commands.ab3"
0003CFDA <internal_commands.ab3@2129> INCLUDE "internal_commands.ab3"
0003CFDC <internal_commands.ab3@2130> INCLUDE "internal_commands.ab3"
0003CFDE <internal_commands.ab3@2131> INCLUDE "internal_commands.ab3"
0003CFE2 <internal_commands.ab3@2132> INCLUDE "internal_commands.ab3"
0003CFE4 <internal_commands.ab3@2133> INCLUDE "internal_commands.ab3"
0003CFE8 <internal_commands.ab3@2137> INCLUDE "internal_commands.ab3"
0003CFEA <internal_commands.ab3@2138> INCLUDE "internal_commands.ab3"
0003CFEF <internal_commands.ab3@2139> INCLUDE "internal_commands.ab3"
0003CFF0 <internal_commands.ab3@2140> INCLUDE "internal_commands.ab3"
0003CFF2 <internal_commands.ab3@2143> INCLUDE "internal_commands.ab3"
0003CFF6 <internal_commands.ab3@2144> INCLUDE "internal_commands.ab3"
0003CFF8 <internal_commands.ab3@2145> INCLUDE "internal_commands.ab3"
0003CFFA <internal_commands.ab3@2146> INCLUDE "internal_commands.ab3"
0003CFFE <internal_commands.ab3@2147> INCLUDE "internal_commands.ab3"
0003D000 <internal_commands.ab3@2148> INCLUDE "internal_commands.ab3"
0003D004 <internal_commands.ab3@2152> INCLUDE "internal_commands.ab3"
0003D006 <internal_commands.ab3@2153> INCLUDE "internal_commands.ab3"
0003D00B <internal_commands.ab3@2154> INCLUDE "internal_commands.ab3"
0003D00C <internal_commands.ab3@2155> INCLUDE "internal_commands.ab3"
0003D00E <internal_commands.ab3@2158> INCLUDE "internal_commands.ab3"
0003D012 <internal_commands.ab3@2159> INCLUDE "internal_commands.ab3"
0003D014 <internal_commands.ab3@2160> INCLUDE "internal_commands.ab3"
0003D016 <internal_commands.ab3@2161> INCLUDE "internal_commands.ab3"
0003D01A <internal_commands.ab3@2162> INCLUDE "internal_commands.ab3"
0003D01C <internal_commands.ab3@2163> INCLUDE "internal_commands.ab3"
0003D020 <internal_commands.ab3@2167> INCLUDE "internal_commands.ab3"
0003D022 <internal_commands.ab3@2168> INCLUDE "internal_commands.ab3"
0003D027 <internal_commands.ab3@2169> INCLUDE "internal_commands.ab3"
0003D028 <internal_commands.ab3@2170> INCLUDE "internal_commands.ab3"
0003D02A <internal_commands.ab3@2173> INCLUDE "internal_commands.ab3"
0003D02E <internal_commands.ab3@2174> INCLUDE "internal_commands.ab3"
0003D030 <internal_commands.ab3@2175> INCLUDE "internal_commands.ab3"
0003D032 <internal_commands.ab3@2176> INCLUDE "internal_commands.ab3"
0003D036 <internal_commands.ab3@2177> INCLUDE "internal_commands.ab3"
0003D038 <internal_commands.ab3@2178> INCLUDE "internal_commands.ab3"
0003D03C <internal_commands.ab3@2182> INCLUDE "internal_commands.ab3"
0003D03E <internal_commands.ab3@2183> INCLUDE "internal_commands.ab3"
0003D043 <internal_commands.ab3@2184> INCLUDE "internal_commands.ab3"
0003D044 <internal_commands.ab3@2185> INCLUDE "internal_commands.ab3"
0003D046 <internal_commands.ab3@2188> INCLUDE "internal_commands.ab3"
0003D04A <internal_commands.ab3@2189> INCLUDE "internal_commands.ab3"
0003D04C <internal_commands.ab3@2190> INCLUDE "internal_commands.ab3"
0003D04E <internal_commands.ab3@2191> INCLUDE "internal_commands.ab3"
0003D052 <internal_commands.ab3@2192> INCLUDE "internal_commands.ab3"
0003D054 <internal_commands.ab3@2193> INCLUDE "internal_commands.ab3"
0003D058 <internal_commands.ab3@2197> INCLUDE "internal_commands.ab3"
0003D05A <internal_commands.ab3@2198> INCLUDE "internal_commands.ab3"
0003D05F <internal_commands.ab3@2199> INCLUDE "internal_commands.ab3"
0003D060 <internal_commands.ab3@2200> INCLUDE "internal_commands.ab3"
0003D062 <internal_commands.ab3@2203> INCLUDE "internal_commands.ab3"
0003D066 <internal_commands.ab3@2204> INCLUDE "internal_commands.ab3"
0003D068 <internal_commands.ab3@2205> INCLUDE "internal_commands.ab3"
0003D06A <internal_commands.ab3@2206> INCLUDE "internal_commands.ab3"
0003D06E <internal_commands.ab3@2207> INCLUDE "internal_commands.ab3"
0003D070 <internal_commands.ab3@2208> INCLUDE "internal_commands.ab3"
0003D074 <internal_commands.ab3@2212> INCLUDE "internal_commands.ab3"
0003D076 <internal_commands.ab3@2213> INCLUDE "internal_commands.ab3"
0003D07A <internal_commands.ab3@2214> INCLUDE "internal_commands.ab3"
0003D07B <internal_commands.ab3@2215> INCLUDE "internal_commands.ab3"
0003D07C <internal_commands.ab3@2216> INCLUDE "internal_commands.ab3"
0003D07E <internal_commands.ab3@2218> INCLUDE "internal_commands.ab3"
0003D082 <internal_commands.ab3@2219> INCLUDE "internal_commands.ab3"
0003D084 <internal_commands.ab3@2220> INCLUDE "internal_commands.ab3"
0003D086 <internal_commands.ab3@2221> INCLUDE "internal_commands.ab3"
0003D08A <internal_commands.ab3@2222> INCLUDE "internal_commands.ab3"
0003D08C <internal_commands.ab3@2223> INCLUDE "internal_commands.ab3"
0003D090 <internal_commands.ab3@2227> INCLUDE "internal_commands.ab3"
0003D092 <internal_commands.ab3@2228> INCLUDE "internal_commands.ab3"
0003D097 <internal_commands.ab3@2229> INCLUDE "internal_commands.ab3"
0003D098 <internal_commands.ab3@2230> INCLUDE "internal_commands.ab3"
0003D09A <internal_commands.ab3@2233> INCLUDE "internal_commands.ab3"
0003D09E <internal_commands.ab3@2234> INCLUDE "internal_commands.ab3"
0003D0A0 <internal_commands.ab3@2235> INCLUDE "internal_commands.ab3"
0003D0A2 <internal_commands.ab3@2236> INCLUDE "internal_commands.ab3"
0003D0A6 <internal_commands.ab3@2237> INCLUDE "internal_commands.ab3"
0003D0A8 <internal_commands.ab3@2238> INCLUDE "internal_commands.ab3"
0003D0AC <internal_commands.ab3@2242> INCLUDE "internal_commands.ab3"
0003D0AE <internal_commands.ab3@2243> INCLUDE "internal_commands.ab3"
0003D0B4 <internal_commands.ab3@2244> INCLUDE "internal_commands.ab3"
0003D0B5 <internal_commands.ab3@2245> INCLUDE "internal_commands.ab3"
0003D0B6 <internal_commands.ab3@2246> INCLUDE "internal_commands.ab3"
0003D0B8 <internal_commands.ab3@2248> INCLUDE "internal_commands.ab3"
0003D0BC <internal_commands.ab3@2249> INCLUDE "internal_commands.ab3"
0003D0BE <internal_commands.ab3@2250> INCLUDE "internal_commands.ab3"
0003D0C0 <internal_commands.ab3@2251> INCLUDE "internal_commands.ab3"
0003D0C4 <internal_commands.ab3@2252> INCLUDE "internal_commands.ab3"
0003D0C6 <internal_commands.ab3@2253> INCLUDE "internal_commands.ab3"
0003D0CA <internal_commands.ab3@2257> INCLUDE "internal_commands.ab3"
0003D0CC <internal_commands.ab3@2258> INCLUDE "internal_commands.ab3"
0003D0D0 <internal_commands.ab3@2259> INCLUDE "internal_commands.ab3"
0003D0D1 <internal_commands.ab3@2260> INCLUDE "internal_commands.ab3"
0003D0D2 <internal_commands.ab3@2261> INCLUDE "internal_commands.ab3"
0003D0D4 <internal_commands.ab3@2263> INCLUDE "internal_commands.ab3"
0003D0D8 <internal_commands.ab3@2264> INCLUDE "internal_commands.ab3"
0003D0DA <internal_commands.ab3@2265> INCLUDE "internal_commands.ab3"
0003D0DC <internal_commands.ab3@2266> INCLUDE "internal_commands.ab3"
0003D0E0 <internal_commands.ab3@2267> INCLUDE "internal_commands.ab3"
0003D0E2 <internal_commands.ab3@2268> INCLUDE "internal_commands.ab3"
0003D0E6 <internal_commands.ab3@2272> INCLUDE "internal_commands.ab3"
0003D0E8 <internal_commands.ab3@2273> INCLUDE "internal_commands.ab3"
0003D0ED <internal_commands.ab3@2274> INCLUDE "internal_commands.ab3"
0003D0EE <internal_commands.ab3@2275> INCLUDE "internal_commands.ab3"
0003D0F0 <internal_commands.ab3@2278> INCLUDE "internal_commands.ab3"
0003D0F4 <internal_commands.ab3@2279> INCLUDE "internal_commands.ab3"
0003D0F6 <internal_commands.ab3@2280> INCLUDE "internal_commands.ab3"
0003D0F8 <internal_commands.ab3@2281> INCLUDE "internal_commands.ab3"
0003D0FC <internal_commands.ab3@2282> INCLUDE "internal_commands.ab3"
0003D0FE <internal_commands.ab3@2283> INCLUDE "internal_commands.ab3"
0003D102 <internal_commands.ab3@2288> INCLUDE "internal_commands.ab3"
0003D104 <internal_commands.ab3@2289> INCLUDE "internal_commands.ab3"
0003D10B <internal_commands.ab3@2290> INCLUDE "internal_commands.ab3"
0003D10C <internal_commands.ab3@2291> INCLUDE "internal_commands.ab3"
0003D10E <internal_commands.ab3@2310> INCLUDE "internal_commands.ab3"
0003D110 <internal_commands.ab3@2311> INCLUDE "internal_commands.ab3"
0003D112 <internal_commands.ab3@2315> INCLUDE "internal_commands.ab3"
0003D114 <internal_commands.ab3@2316> INCLUDE "internal_commands.ab3"
0003D116 <internal_commands.ab3@2320> INCLUDE "internal_commands.ab3"
0003D118 <internal_commands.ab3@2321> INCLUDE "internal_commands.ab3"
0003D11A <internal_commands.ab3@2325> INCLUDE "internal_commands.ab3"
0003D11C <internal_commands.ab3@2326> INCLUDE "internal_commands.ab3"
0003D11E <internal_commands.ab3@2332> INCLUDE "internal_commands.ab3"
0003D122 <internal_commands.ab3@2333> INCLUDE "internal_commands.ab3"
0003D124 <internal_commands.ab3@2334> INCLUDE "internal_commands.ab3"
0003D126 <internal_commands.ab3@2335> INCLUDE "internal_commands.ab3"
0003D128 <internal_commands.ab3@2336> INCLUDE "internal_commands.ab3"
0003D12A <internal_commands.ab3@2337> INCLUDE "internal_commands.ab3"
0003D12E <internal_commands.ab3@2338> INCLUDE "internal_commands.ab3"
0003D134 <internal_commands.ab3@2341> INCLUDE "internal_commands.ab3"
0003D138 <internal_commands.ab3@2342> INCLUDE "internal_commands.ab3"
0003D13A <internal_commands.ab3@2343> INCLUDE "internal_commands.ab3"
0003D13C <internal_commands.ab3@2344> INCLUDE "internal_commands.ab3"
0003D13E <internal_commands.ab3@2345> INCLUDE "internal_commands.ab3"
0003D140 <internal_commands.ab3@2346> INCLUDE "internal_commands.ab3"
0003D142 <internal_commands.ab3@2347> INCLUDE "internal_commands.ab3"
0003D144 <internal_commands.ab3@2354> INCLUDE "internal_commands.ab3"
0003D148 <internal_commands.ab3@2355> INCLUDE "internal_commands.ab3"
0003D14C <internal_commands.ab3@2356> INCLUDE "internal_commands.ab3"
0003D150 <internal_commands.ab3@2357> INCLUDE "internal_commands.ab3"
0003D154 <internal_commands.ab3@2358> INCLUDE "internal_commands.ab3"
0003D158 <internal_commands.ab3@2359> INCLUDE "internal_commands.ab3"
0003D15A <internal_commands.ab3@2362> INCLUDE "internal_commands.ab3"
0003D15C <internal_commands.ab3@2363> INCLUDE "internal_commands.ab3"
0003D160 <internal_commands.ab3@2364> INCLUDE "internal_commands.ab3"
0003D164 <internal_commands.ab3@2365> INCLUDE "internal_commands.ab3"
0003D168 <internal_commands.ab3@2366> INCLUDE "internal_commands.ab3"
0003D16C <internal_commands.ab3@2367> INCLUDE "internal_commands.ab3"
0003D16E <internal_commands.ab3@2370> INCLUDE "internal_commands.ab3"
0003D170 <internal_commands.ab3@2371> INCLUDE "internal_commands.ab3"
0003D174 <internal_commands.ab3@2372> INCLUDE "internal_commands.ab3"
0003D178 <internal_commands.ab3@2373> INCLUDE "internal_commands.ab3"
0003D17C <internal_commands.ab3@2374> INCLUDE "internal_commands.ab3"
0003D180 <internal_commands.ab3@2375> INCLUDE "internal_commands.ab3"
0003D182 <internal_commands.ab3@2376> INCLUDE "internal_commands.ab3"
0003D184 <internal_commands.ab3@2379> INCLUDE "internal_commands.ab3"
0003D186 <internal_commands.ab3@2380> INCLUDE "internal_commands.ab3"
0003D18A <internal_commands.ab3@2381> INCLUDE "internal_commands.ab3"
0003D18C <internal_commands.ab3@2383> INCLUDE "internal_commands.ab3"
0003D190 <internal_commands.ab3@2384> INCLUDE "internal_commands.ab3"
0003D192 <internal_commands.ab3@2388> INCLUDE "internal_commands.ab3"
0003D196 <internal_commands.ab3@2389> INCLUDE "internal_commands.ab3"
0003D198 <internal_commands.ab3@2390> INCLUDE "internal_commands.ab3"
0003D19C <internal_commands.ab3@2391> INCLUDE "internal_commands.ab3"
0003D1A0 <internal_commands.ab3@2392> INCLUDE "internal_commands.ab3"
0003D1A4 <internal_commands.ab3@2393> INCLUDE "internal_commands.ab3"
0003D1A8 <internal_commands.ab3@2397> INCLUDE "internal_commands.ab3"
0003D1AC <internal_commands.ab3@2398> INCLUDE "internal_commands.ab3"
0003D1B0 <internal_commands.ab3@2400> INCLUDE "internal_commands.ab3"
0003D1B4 <internal_commands.ab3@2401> INCLUDE "internal_commands.ab3"
0003D1B8 <internal_commands.ab3@2402> INCLUDE "internal_commands.ab3"
0003D1BC <internal_commands.ab3@2403> INCLUDE "internal_commands.ab3"
0003D1C0 <internal_commands.ab3@2404> INCLUDE "internal_commands.ab3"
0003D1C4 <internal_commands.ab3@2405> INCLUDE "internal_commands.ab3"
0003D1C8 <internal_commands.ab3@2406> INCLUDE "internal_commands.ab3"
0003D1CC <internal_commands.ab3@2407> INCLUDE "internal_commands.ab3"
0003D1D0 <internal_commands.ab3@2409> INCLUDE "internal_commands.ab3"
0003D1D4 <internal_commands.ab3@2412> INCLUDE "internal_commands.ab3"
0003D1D8 <internal_commands.ab3@2413> INCLUDE "internal_commands.ab3"
0003D1DC <internal_commands.ab3@2415> INCLUDE "internal_commands.ab3"
0003D1E0 <internal_commands.ab3@2416> INCLUDE "internal_commands.ab3"
0003D1E4 <internal_commands.ab3@2417> INCLUDE "internal_commands.ab3"
0003D1E8 <internal_commands.ab3@2418> INCLUDE "internal_commands.ab3"
0003D1EC <internal_commands.ab3@2419> INCLUDE "internal_commands.ab3"
0003D1F0 <internal_commands.ab3@2420> INCLUDE "internal_commands.ab3"
0003D1F4 <internal_commands.ab3@2421> INCLUDE "internal_commands.ab3"
0003D1F8 <internal_commands.ab3@2422> INCLUDE "internal_commands.ab3"
0003D1FC <internal_commands.ab3@2424> INCLUDE "internal_commands.ab3"
0003D200 <internal_commands.ab3@2427> INCLUDE "internal_commands.ab3"
0003D202 <internal_commands.ab3@2428> INCLUDE "internal_commands.ab3"
0003D206 <internal_commands.ab3@2429> INCLUDE "internal_commands.ab3"
0003D20A <internal_commands.ab3@2430> INCLUDE "internal_commands.ab3"
0003D20E <internal_commands.ab3@2431> INCLUDE "internal_commands.ab3"
0003D212 <internal_commands.ab3@2432> INCLUDE "internal_commands.ab3"
0003D216 <internal_commands.ab3@2433> INCLUDE "internal_commands.ab3"
0003D21A <internal_commands.ab3@2434> INCLUDE "internal_commands.ab3"
0003D21E <internal_commands.ab3@2437> INCLUDE "internal_commands.ab3"
0003D222 <internal_commands.ab3@2438> INCLUDE "internal_commands.ab3"
0003D226 <internal_commands.ab3@2439> INCLUDE "internal_commands.ab3"
0003D228 <internal_commands.ab3@2440> INCLUDE "internal_commands.ab3"
0003D22A <internal_commands.ab3@2443> INCLUDE "internal_commands.ab3"
0003D22C <internal_commands.ab3@2444> INCLUDE "internal_commands.ab3"
0003D22E <internal_commands.ab3@2445> INCLUDE "internal_commands.ab3"
0003D230 <internal_commands.ab3@2446> INCLUDE "internal_commands.ab3"
0003D234 <internal_commands.ab3@2447> INCLUDE "internal_commands.ab3"
0003D238 <internal_commands.ab3@2450> INCLUDE "internal_commands.ab3"
0003D23C <internal_commands.ab3@2451> INCLUDE "internal_commands.ab3"
0003D240 <internal_commands.ab3@2452> INCLUDE "internal_commands.ab3"
0003D242 <internal_commands.ab3@2453> INCLUDE "internal_commands.ab3"
0003D246 <internal_commands.ab3@2454> INCLUDE "internal_commands.ab3"
0003D24A <internal_commands.ab3@2458> INCLUDE "internal_commands.ab3"
0003D24E <internal_commands.ab3@2461> INCLUDE "internal_commands.ab3"
0003D252 <internal_commands.ab3@2462> INCLUDE "internal_commands.ab3"
0003D254 <internal_commands.ab3@2463> INCLUDE "internal_commands.ab3"
0003D256 <internal_commands.ab3@2464> INCLUDE "internal_commands.ab3"
0003D25A <internal_commands.ab3@2465> INCLUDE "internal_commands.ab3"
0003D25E <internal_commands.ab3@2468> INCLUDE "internal_commands.ab3"
0003D262 <internal_commands.ab3@2469> INCLUDE "internal_commands.ab3"
0003D266 <internal_commands.ab3@2473> INCLUDE "internal_commands.ab3"
0003D26A <internal_commands.ab3@2476> INCLUDE "internal_commands.ab3"
0003D26E <internal_commands.ab3@2477> INCLUDE "internal_commands.ab3"
0003D270 <internal_commands.ab3@2478> INCLUDE "internal_commands.ab3"
0003D272 <internal_commands.ab3@2479> INCLUDE "internal_commands.ab3"
0003D276 <internal_commands.ab3@2480> INCLUDE "internal_commands.ab3"
0003D27A <internal_commands.ab3@2483> INCLUDE "internal_commands.ab3"
0003D27E <internal_commands.ab3@2484> INCLUDE "internal_commands.ab3"
0003D280 <internal_commands.ab3@2488> INCLUDE "internal_commands.ab3"
0003D284 <internal_commands.ab3@2489> INCLUDE "internal_commands.ab3"
0003D288 <internal_commands.ab3@2490> INCLUDE "internal_commands.ab3"
0003D28A <internal_commands.ab3@2491> INCLUDE "internal_commands.ab3"
0003D28E <internal_commands.ab3@2492> INCLUDE "internal_commands.ab3"
0003D292 <internal_commands.ab3@2493> INCLUDE "internal_commands.ab3"
0003D294 <internal_commands.ab3@2496> INCLUDE "internal_commands.ab3"
0003D298 <internal_commands.ab3@2497> INCLUDE "internal_commands.ab3"
0003D29C <internal_commands.ab3@2498> INCLUDE "internal_commands.ab3"
0003D2A0 <internal_commands.ab3@2499> INCLUDE "internal_commands.ab3"
0003D2A4 <internal_commands.ab3@2502> INCLUDE "internal_commands.ab3"
0003D2A8 <internal_commands.ab3@2503> INCLUDE "internal_commands.ab3"
0003D2AA <internal_commands.ab3@2507> INCLUDE "internal_commands.ab3"
0003D2AE <internal_commands.ab3@2508> INCLUDE "internal_commands.ab3"
0003D2B0 <internal_commands.ab3@2509> INCLUDE "internal_commands.ab3"
0003D2B2 <internal_commands.ab3@2510> INCLUDE "internal_commands.ab3"
0003D2B4 <internal_commands.ab3@2511> INCLUDE "internal_commands.ab3"
0003D2B8 <internal_commands.ab3@2512> INCLUDE "internal_commands.ab3"
0003D2BC <internal_commands.ab3@2515> INCLUDE "internal_commands.ab3"
0003D2C0 <internal_commands.ab3@2516> INCLUDE "internal_commands.ab3"
0003D2C4 <internal_commands.ab3@2517> INCLUDE "internal_commands.ab3"
0003D2C8 <internal_commands.ab3@2518> INCLUDE "internal_commands.ab3"
0003D2CC <internal_commands.ab3@2522> INCLUDE "internal_commands.ab3"
0003D2D0 <internal_commands.ab3@2523> INCLUDE "internal_commands.ab3"
0003D2D4 <internal_commands.ab3@2527> INCLUDE "internal_commands.ab3"
0003D2D8 <internal_commands.ab3@2528> INCLUDE "internal_commands.ab3"
0003D2DC <internal_commands.ab3@2532> INCLUDE "internal_commands.ab3"
0003D2E0 <internal_commands.ab3@2533> INCLUDE "internal_commands.ab3"
0003D2E4 <internal_commands.ab3@2537> INCLUDE "internal_commands.ab3"
0003D2E6 <internal_commands.ab3@2540> INCLUDE "internal_commands.ab3"
0003D2EA <internal_commands.ab3@2541> INCLUDE "internal_commands.ab3"
0003D2EE <internal_commands.ab3@2542> INCLUDE "internal_commands.ab3"
0003D2F0 <internal_commands.ab3@2543> INCLUDE "internal_commands.ab3"
0003D2F2 <internal_commands.ab3@2544> INCLUDE "internal_commands.ab3"
0003D2F4 <internal_commands.ab3@2545> INCLUDE "internal_commands.ab3"
0003D2F8 <internal_commands.ab3@2546> INCLUDE "internal_commands.ab3"
0003D2FC <internal_commands.ab3@2547> INCLUDE "internal_commands.ab3"
0003D2FE <internal_commands.ab3@2548> INCLUDE "internal_commands.ab3"
0003D302 <internal_commands.ab3@2549> INCLUDE "internal_commands.ab3"
0003D304 <internal_commands.ab3@2550> INCLUDE "internal_commands.ab3"
0003D306 <internal_commands.ab3@2551> INCLUDE "internal_commands.ab3"
0003D308 <internal_commands.ab3@2552> INCLUDE "internal_commands.ab3"
0003D30C <internal_commands.ab3@2553> INCLUDE "internal_commands.ab3"
0003D310 <internal_commands.ab3@2554> INCLUDE "internal_commands.ab3"
0003D312 <internal_commands.ab3@2557> INCLUDE "internal_commands.ab3"
0003D314 <internal_commands.ab3@2558> INCLUDE "internal_commands.ab3"
0003D318 <internal_commands.ab3@2559> INCLUDE "internal_commands.ab3"
0003D31C <internal_commands.ab3@2560> INCLUDE "internal_commands.ab3"
0003D320 <internal_commands.ab3@2561> INCLUDE "internal_commands.ab3"
0003D324 <internal_commands.ab3@2562> INCLUDE "internal_commands.ab3"
0003D326 <internal_commands.ab3@2563> INCLUDE "internal_commands.ab3"
0003D32A <internal_commands.ab3@2564> INCLUDE "internal_commands.ab3"
0003D32E <internal_commands.ab3@2565> INCLUDE "internal_commands.ab3"
0003D332 <internal_commands.ab3@2566> INCLUDE "internal_commands.ab3"
0003D334 <internal_commands.ab3@2567> INCLUDE "internal_commands.ab3"
0003D336 <internal_commands.ab3@2568> INCLUDE "internal_commands.ab3"
0003D338 <internal_commands.ab3@2569> INCLUDE "internal_commands.ab3"
0003D33A <internal_commands.ab3@2572> INCLUDE "internal_commands.ab3"
0003D33C <internal_commands.ab3@2573> INCLUDE "internal_commands.ab3"
0003D33E <internal_commands.ab3@2574> INCLUDE "internal_commands.ab3"
0003D342 <internal_commands.ab3@2575> INCLUDE "internal_commands.ab3"
0003D346 <internal_commands.ab3@2576> INCLUDE "internal_commands.ab3"
0003D348 <internal_commands.ab3@2580> INCLUDE "internal_commands.ab3"
0003D34C <internal_commands.ab3@2581> INCLUDE "internal_commands.ab3"
0003D34E <internal_commands.ab3@2582> INCLUDE "internal_commands.ab3"
0003D352 <internal_commands.ab3@2583> INCLUDE "internal_commands.ab3"
0003D356 <internal_commands.ab3@2584> INCLUDE "internal_commands.ab3"
0003D358 <internal_commands.ab3@2585> INCLUDE "internal_commands.ab3"
0003D35A <internal_commands.ab3@2588> INCLUDE "internal_commands.ab3"
0003D35C <internal_commands.ab3@2592> INCLUDE "internal_commands.ab3"
0003D360 <internal_commands.ab3@2593> INCLUDE "internal_commands.ab3"
0003D362 <internal_commands.ab3@2594> INCLUDE "internal_commands.ab3"
0003D366 <internal_commands.ab3@2595> INCLUDE "internal_commands.ab3"
0003D36A <internal_commands.ab3@2596> INCLUDE "internal_commands.ab3"
0003D36E <internal_commands.ab3@2597> INCLUDE "internal_commands.ab3"
0003D370 <internal_commands.ab3@2600> INCLUDE "internal_commands.ab3"
0003D374 <internal_commands.ab3@2604> INCLUDE "internal_commands.ab3"
0003D378 <internal_commands.ab3@2605> INCLUDE "internal_commands.ab3"
0003D37A <internal_commands.ab3@2606> INCLUDE "internal_commands.ab3"
0003D37E <internal_commands.ab3@2607> INCLUDE "internal_commands.ab3"
0003D382 <internal_commands.ab3@2608> INCLUDE "internal_commands.ab3"
0003D386 <internal_commands.ab3@2611> INCLUDE "internal_commands.ab3"
0003D38A <internal_commands.ab3@2612> INCLUDE "internal_commands.ab3"
0003D38E <internal_commands.ab3@2613> INCLUDE "internal_commands.ab3"
0003D392 <internal_commands.ab3@2614> INCLUDE "internal_commands.ab3"
0003D396 <internal_commands.ab3@2615> INCLUDE "internal_commands.ab3"
0003D39A <internal_commands.ab3@2624> INCLUDE "internal_commands.ab3"
0003D39C <internal_commands.ab3@2625> INCLUDE "internal_commands.ab3"
0003D3A1 <internal_commands.ab3@2626> INCLUDE "internal_commands.ab3"
0003D3A2 <internal_commands.ab3@2627> INCLUDE "internal_commands.ab3"
0003D3A6 <internal_commands.ab3@2631> INCLUDE "internal_commands.ab3"
0003D3A8 <internal_commands.ab3@2632> INCLUDE "internal_commands.ab3"
0003D3AF <internal_commands.ab3@2633> INCLUDE "internal_commands.ab3"
0003D3B0 <internal_commands.ab3@2634> INCLUDE "internal_commands.ab3"
0003D3B4 <internal_commands.ab3@2638> INCLUDE "internal_commands.ab3"
0003D3B6 <internal_commands.ab3@2639> INCLUDE "internal_commands.ab3"
0003D3BD <internal_commands.ab3@2640> INCLUDE "internal_commands.ab3"
0003D3BE <internal_commands.ab3@2641> INCLUDE "internal_commands.ab3"
0003D3C2 <internal_commands.ab3@2651> INCLUDE "internal_commands.ab3"
0003D3C4 <internal_commands.ab3@2652> INCLUDE "internal_commands.ab3"
0003D3CC <internal_commands.ab3@2653> INCLUDE "internal_commands.ab3"
0003D3CD <internal_commands.ab3@2654> INCLUDE "internal_commands.ab3"
0003D3CE <internal_commands.ab3@2655> INCLUDE "internal_commands.ab3"
0003D3D2 <internal_commands.ab3@2658> INCLUDE "internal_commands.ab3"
0003D3D4 <internal_commands.ab3@2659> INCLUDE "internal_commands.ab3"
0003D3D9 <internal_commands.ab3@2660> INCLUDE "internal_commands.ab3"
0003D3ED <internal_commands.ab3@2661> INCLUDE "internal_commands.ab3"
0003D3EE <internal_commands.ab3@2662> INCLUDE "internal_commands.ab3"
0003D3F2 <internal_commands.ab3@2665> INCLUDE "internal_commands.ab3"
0003D3F4 <internal_commands.ab3@2666> INCLUDE "internal_commands.ab3"
0003D3F8 <internal_commands.ab3@2667> INCLUDE "internal_commands.ab3"
0003D3F9 <internal_commands.ab3@2668> INCLUDE "internal_commands.ab3"
0003D3FA <internal_commands.ab3@2669> INCLUDE "internal_commands.ab3"
0003D3FE <internal_commands.ab3@2672> INCLUDE "internal_commands.ab3"
0003D400 <internal_commands.ab3@2673> INCLUDE "internal_commands.ab3"
0003D403 <internal_commands.ab3@2674> INCLUDE "internal_commands.ab3"
0003D404 <internal_commands.ab3@2675> INCLUDE "internal_commands.ab3"
0003D408 <internal_commands.ab3@2679> INCLUDE "internal_commands.ab3"
0003D40A <internal_commands.ab3@2680> INCLUDE "internal_commands.ab3"
0003D411 <internal_commands.ab3@2681> INCLUDE "internal_commands.ab3"
0003D412 <internal_commands.ab3@2682> INCLUDE "internal_commands.ab3"
0003D416 <internal_commands.ab3@2686> INCLUDE "internal_commands.ab3"
0003D418 <internal_commands.ab3@2687> INCLUDE "internal_commands.ab3"
0003D41E <internal_commands.ab3@2688> INCLUDE "internal_commands.ab3"
0003D42B <internal_commands.ab3@2689> INCLUDE "internal_commands.ab3"
0003D42C <internal_commands.ab3@2690> INCLUDE "internal_commands.ab3"
0003D430 <internal_commands.ab3@2693> INCLUDE "internal_commands.ab3"
0003D432 <internal_commands.ab3@2694> INCLUDE "internal_commands.ab3"
0003D439 <internal_commands.ab3@2695> INCLUDE "internal_commands.ab3"
0003D451 <internal_commands.ab3@2696> INCLUDE "internal_commands.ab3"
0003D452 <internal_commands.ab3@2697> INCLUDE "internal_commands.ab3"
0003D456 <internal_commands.ab3@2700> INCLUDE "internal_commands.ab3"
0003D458 <internal_commands.ab3@2701> INCLUDE "internal_commands.ab3"
0003D45C <internal_commands.ab3@2702> INCLUDE "internal_commands.ab3"
0003D47F <internal_commands.ab3@2703> INCLUDE "internal_commands.ab3"
0003D480 <internal_commands.ab3@2704> INCLUDE "internal_commands.ab3"
0003D484 <internal_commands.ab3@2707> INCLUDE "internal_commands.ab3"
0003D486 <internal_commands.ab3@2708> INCLUDE "internal_commands.ab3"
0003D48D <internal_commands.ab3@2709> INCLUDE "internal_commands.ab3"
0003D498 <internal_commands.ab3@2710> INCLUDE "internal_commands.ab3"
0003D49C <internal_commands.ab3@2714> INCLUDE "internal_commands.ab3"
0003D49E <internal_commands.ab3@2715> INCLUDE "internal_commands.ab3"
0003D4A4 <internal_commands.ab3@2716> INCLUDE "internal_commands.ab3"
0003D4A5 <internal_commands.ab3@2717> INCLUDE "internal_commands.ab3"
0003D4A6 <internal_commands.ab3@2718> INCLUDE "internal_commands.ab3"
0003D4AA <internal_commands.ab3@2721> INCLUDE "internal_commands.ab3"
0003D4AC <internal_commands.ab3@2722> INCLUDE "internal_commands.ab3"
0003D4B1 <internal_commands.ab3@2723> INCLUDE "internal_commands.ab3"
0003D4B2 <internal_commands.ab3@2724> INCLUDE "internal_commands.ab3"
0003D4B6 <internal_commands.ab3@2728> INCLUDE "internal_commands.ab3"
0003D4B8 <internal_commands.ab3@2729> INCLUDE "internal_commands.ab3"
0003D4BF <internal_commands.ab3@2730> INCLUDE "internal_commands.ab3"
0003D4D1 <internal_commands.ab3@2731> INCLUDE "internal_commands.ab3"
0003D4D2 <internal_commands.ab3@2732> INCLUDE "internal_commands.ab3"
0003D4D6 <internal_commands.ab3@2735> INCLUDE "internal_commands.ab3"
0003D4D8 <internal_commands.ab3@2736> INCLUDE "internal_commands.ab3"
0003D4E2 <internal_commands.ab3@2737> INCLUDE "internal_commands.ab3"
0003D4E3 <internal_commands.ab3@2738> INCLUDE "internal_commands.ab3"
0003D4E4 <internal_commands.ab3@2739> INCLUDE "internal_commands.ab3"
0003D4E8 <internal_commands.ab3@2742> INCLUDE "internal_commands.ab3"
0003D4EA <internal_commands.ab3@2743> INCLUDE "internal_commands.ab3"
0003D4F2 <internal_commands.ab3@2744> INCLUDE "internal_commands.ab3"
0003D4FF <internal_commands.ab3@2745> INCLUDE "internal_commands.ab3"
0003D500 <internal_commands.ab3@2746> INCLUDE "internal_commands.ab3"
0003D504 <internal_commands.ab3@2749> INCLUDE "internal_commands.ab3"
0003D506 <internal_commands.ab3@2750> INCLUDE "internal_commands.ab3"
0003D509 <internal_commands.ab3@2751> INCLUDE "internal_commands.ab3"
0003D544 <internal_commands.ab3@2752> INCLUDE "internal_commands.ab3"
0003D548 <internal_commands.ab3@2756> INCLUDE "internal_commands.ab3"
0003D54A <internal_commands.ab3@2757> INCLUDE "internal_commands.ab3"
0003D54E <internal_commands.ab3@2758> INCLUDE "internal_commands.ab3"
0003D54F <internal_commands.ab3@2759> INCLUDE "internal_commands.ab3"
0003D550 <internal_commands.ab3@2760> INCLUDE "internal_commands.ab3"
0003D554 <internal_commands.ab3@2763> INCLUDE "internal_commands.ab3"
0003D556 <internal_commands.ab3@2764> INCLUDE "internal_commands.ab3"
0003D55E <internal_commands.ab3@2765> INCLUDE "internal_commands.ab3"
0003D55F <internal_commands.ab3@2766> INCLUDE "internal_commands.ab3"
0003D560 <internal_commands.ab3@2767> INCLUDE "internal_commands.ab3"
0003D564 <internal_commands.ab3@2770> INCLUDE "internal_commands.ab3"
0003D566 <internal_commands.ab3@2771> INCLUDE "internal_commands.ab3"
0003D56E <internal_commands.ab3@2772> INCLUDE "internal_commands.ab3"
0003D57E <internal_commands.ab3@2773> INCLUDE "internal_commands.ab3"
0003D582 <internal_commands.ab3@2777> INCLUDE "internal_commands.ab3"
0003D584 <internal_commands.ab3@2778> INCLUDE "internal_commands.ab3"
0003D58D <internal_commands.ab3@2779> INCLUDE "internal_commands.ab3"
0003D595 <internal_commands.ab3@2780> INCLUDE "internal_commands.ab3"
0003D596 <internal_commands.ab3@2781> INCLUDE "internal_commands.ab3"
0003D59A <internal_commands.ab3@2784> INCLUDE "internal_commands.ab3"
0003D59C <internal_commands.ab3@2785> INCLUDE "internal_commands.ab3"
0003D5A4 <internal_commands.ab3@2786> INCLUDE "internal_commands.ab3"
0003D5AD <internal_commands.ab3@2787> INCLUDE "internal_commands.ab3"
0003D5AE <internal_commands.ab3@2788> INCLUDE "internal_commands.ab3"
0003D5B2 <internal_commands.ab3@2791> INCLUDE "internal_commands.ab3"
0003D5B4 <internal_commands.ab3@2792> INCLUDE "internal_commands.ab3"
0003D5BC <internal_commands.ab3@2793> INCLUDE "internal_commands.ab3"
0003D5BD <internal_commands.ab3@2794> INCLUDE "internal_commands.ab3"
0003D5BE <internal_commands.ab3@2795> INCLUDE "internal_commands.ab3"
0003D5C2 <internal_commands.ab3@2798> INCLUDE "internal_commands.ab3"
0003D5C4 <internal_commands.ab3@2799> INCLUDE "internal_commands.ab3"
0003D5CA <internal_commands.ab3@2800> INCLUDE "internal_commands.ab3"
0003D5CB <internal_commands.ab3@2801> INCLUDE "internal_commands.ab3"
0003D5CC <internal_commands.ab3@2802> INCLUDE "internal_commands.ab3"
0003D5D0 <internal_commands.ab3@2805> INCLUDE "internal_commands.ab3"
0003D5D2 <internal_commands.ab3@2806> INCLUDE "internal_commands.ab3"
0003D5D9 <internal_commands.ab3@2807> INCLUDE "internal_commands.ab3"
0003D5DA <internal_commands.ab3@2808> INCLUDE "internal_commands.ab3"
0003D5DE <internal_commands.ab3@2812> INCLUDE "internal_commands.ab3"
0003D5E0 <internal_commands.ab3@2813> INCLUDE "internal_commands.ab3"
0003D5E7 <internal_commands.ab3@2814> INCLUDE "internal_commands.ab3"
0003D5E8 <internal_commands.ab3@2815> INCLUDE "internal_commands.ab3"
0003D5EC <internal_commands.ab3@2819> INCLUDE "internal_commands.ab3"
0003D5EE <internal_commands.ab3@2820> INCLUDE "internal_commands.ab3"
0003D5F5 <internal_commands.ab3@2821> INCLUDE "internal_commands.ab3"
0003D5F6 <internal_commands.ab3@2822> INCLUDE "internal_commands.ab3"
0003D5FA <internal_commands.ab3@2826> INCLUDE "internal_commands.ab3"
0003D5FC <internal_commands.ab3@2827> INCLUDE "internal_commands.ab3"
0003D603 <internal_commands.ab3@2828> INCLUDE "internal_commands.ab3"
0003D604 <internal_commands.ab3@2829> INCLUDE "internal_commands.ab3"
0003D608 <internal_commands.ab3@2833> INCLUDE "internal_commands.ab3"
0003D60A <internal_commands.ab3@2834> INCLUDE "internal_commands.ab3"
0003D60F <internal_commands.ab3@2835> INCLUDE "internal_commands.ab3"
0003D625 <internal_commands.ab3@2836> INCLUDE "internal_commands.ab3"
0003D626 <internal_commands.ab3@2837> INCLUDE "internal_commands.ab3"
0003D62A <internal_commands.ab3@2840> INCLUDE "internal_commands.ab3"
0003D62C <internal_commands.ab3@2841> INCLUDE "internal_commands.ab3"
0003D636 <internal_commands.ab3@2842> INCLUDE "internal_commands.ab3"
0003D637 <internal_commands.ab3@2843> INCLUDE "internal_commands.ab3"
0003D638 <internal_commands.ab3@2844> INCLUDE "internal_commands.ab3"
0003D63C <internal_commands.ab3@2847> INCLUDE "internal_commands.ab3"
0003D63E <internal_commands.ab3@2848> INCLUDE "internal_commands.ab3"
0003D649 <internal_commands.ab3@2849> INCLUDE "internal_commands.ab3"
0003D64A <internal_commands.ab3@2850> INCLUDE "internal_commands.ab3"
0003D64E <internal_commands.ab3@2854> INCLUDE "internal_commands.ab3"
0003D650 <internal_commands.ab3@2855> INCLUDE "internal_commands.ab3"
0003D65C <internal_commands.ab3@2856> INCLUDE "internal_commands.ab3"
0003D689 <internal_commands.ab3@2857> INCLUDE "internal_commands.ab3"
0003D68A <internal_commands.ab3@2858> INCLUDE "internal_commands.ab3"
0003D68E <internal_commands.ab3@2861> INCLUDE "internal_commands.ab3"
0003D690 <internal_commands.ab3@2862> INCLUDE "internal_commands.ab3"
0003D698 <internal_commands.ab3@2863> INCLUDE "internal_commands.ab3"
0003D6CF <internal_commands.ab3@2864> INCLUDE "internal_commands.ab3"
0003D6D0 <internal_commands.ab3@2865> INCLUDE "internal_commands.ab3"
0003D6D4 <internal_commands.ab3@2868> INCLUDE "internal_commands.ab3"
0003D6D6 <internal_commands.ab3@2869> INCLUDE "internal_commands.ab3"
0003D6DE <internal_commands.ab3@2870> INCLUDE "internal_commands.ab3"
0003D6FD <internal_commands.ab3@2871> INCLUDE "internal_commands.ab3"
0003D6FE <internal_commands.ab3@2872> INCLUDE "internal_commands.ab3"
0003D702 <internal_commands.ab3@2875> INCLUDE "internal_commands.ab3"
0003D704 <internal_commands.ab3@2876> INCLUDE "internal_commands.ab3"
0003D70B <internal_commands.ab3@2877> INCLUDE "internal_commands.ab3"
0003D741 <internal_commands.ab3@2878> INCLUDE "internal_commands.ab3"
0003D742 <internal_commands.ab3@2879> INCLUDE "internal_commands.ab3"
0003D746 <internal_commands.ab3@2882> INCLUDE "internal_commands.ab3"
0003D748 <internal_commands.ab3@2883> INCLUDE "internal_commands.ab3"
0003D751 <internal_commands.ab3@2884> INCLUDE "internal_commands.ab3"
0003D786 <internal_commands.ab3@2885> INCLUDE "internal_commands.ab3"
0003D78A <internal_commands.ab3@2889> INCLUDE "internal_commands.ab3"
0003D78C <internal_commands.ab3@2890> INCLUDE "internal_commands.ab3"
0003D79C <internal_commands.ab3@2891> INCLUDE "internal_commands.ab3"
0003D7D3 <internal_commands.ab3@2892> INCLUDE "internal_commands.ab3"
0003D7D4 <internal_commands.ab3@2893> INCLUDE "internal_commands.ab3"
0003D7D4 <AmiBlitz3.ab3@30777> INCLUDE "internal_commands.ab3"
0003D7D8 <AmiBlitz3.ab3@30782>            Dc.l cif_lt                                     ;ciflt
0003D7DC <AmiBlitz3.ab3@30783>            Dc.l cif_eq                                     ;cifeq
0003D7E0 <AmiBlitz3.ab3@30784>            Dc.l cif_gt                                     ;cifgt
0003D7E4 <AmiBlitz3.ab3@30785>            Ds.l 1                                          ;0
0003D7E8 <AmiBlitz3.ab3@30786>            Dc.l cif_le                                     ;cifle
0003D7EC <AmiBlitz3.ab3@30787>            Dc.l cif_ne                                     ;cifne
0003D7F0 <AmiBlitz3.ab3@30788>            Dc.l cif_le                                     ;cifge
0003D7F4 <AmiBlitz3.ab3@30789>            Ds.l 1                                          ;0
0003D7F8 <AmiBlitz3.ab3@30790>            Dc.l cif_ge                                     ;cifge
0003D7FC <AmiBlitz3.ab3@30791>            Dc.l cif_ne                                     ;cifne
0003D800 <AmiBlitz3.ab3@30792>            Dc.l cif_ge                                     ;cifge
0003D804 <AmiBlitz3.ab3@30793>            Ds.l 1                                          ;0
0003D808 <AmiBlitz3.ab3@30796>            Dc.l do_newtype                                 ;donewtype
0003D80C <AmiBlitz3.ab3@30797>            Dc.l do_end                                     ;doend
0003D810 <AmiBlitz3.ab3@30798>            Dc.l do_let                                     ;dolet
0003D814 <AmiBlitz3.ab3@30799>            Dc.l do_dim                                     ;dodim
0003D818 <AmiBlitz3.ab3@30800>            Dc.l do_goto                                    ;dogoto
0003D81C <AmiBlitz3.ab3@30801>            Dc.l do_gosub                                   ;dogosub
0003D820 <AmiBlitz3.ab3@30802>            Dc.l do_return                                  ;doreturn
0003D824 <AmiBlitz3.ab3@30803>            Dc.l do_statement                               ;dostate
0003D828 <AmiBlitz3.ab3@30804>            Dc.l do_function                                ;dofunc
0003D82C <AmiBlitz3.ab3@30805>            Dc.l do_mousewait                               ;domwait
0003D830 <AmiBlitz3.ab3@30806>            Dc.l do_if                                      ;doif
0003D834 <AmiBlitz3.ab3@30807>            Dc.l do_while                                   ;dowhile
0003D838 <AmiBlitz3.ab3@30808>            Dc.l do_Macro                                   ;domacro
0003D83C <AmiBlitz3.ab3@30809>            Dc.l do_select                                  ;doselect
0003D840 <AmiBlitz3.ab3@30810>            Dc.l do_case                                    ;docase
0003D844 <AmiBlitz3.ab3@30811>            Dc.l do_default                                 ;dodefault
0003D848 <AmiBlitz3.ab3@30812>            Dc.l do_AsmExit                                 ;doasmexit
0003D84C <AmiBlitz3.ab3@30813>            Dc.l do_xinclude                                ;doxinclude
0003D850 <AmiBlitz3.ab3@30814>            Dc.l do_INCLUDE                                 ;doinclude
0003D854 <AmiBlitz3.ab3@30815>            Dc.l do_syntax                                  ;syntaxerr
0003D858 <AmiBlitz3.ab3@30816>            Dc.l do_shared                                  ;doshared
0003D85C <AmiBlitz3.ab3@30817>            Dc.l do_for                                     ;dofor
0003D860 <AmiBlitz3.ab3@30818>            Dc.l do_next                                    ;donext
0003D864 <AmiBlitz3.ab3@30819>            Dc.l syntaxerr                                  ; To
0003D868 <AmiBlitz3.ab3@30820>            Dc.l syntaxerr                                  ; Step
0003D86C <AmiBlitz3.ab3@30821>            Dc.l do_data                                    ;dodata
0003D870 <AmiBlitz3.ab3@30822>            Dc.l do_read                                    ;doread
0003D874 <AmiBlitz3.ab3@30826>            Dc.l syntaxerr                                  ; CNIF
0003D878 <AmiBlitz3.ab3@30827>            Dc.l syntaxerr                                  ; CSIF
0003D87C <AmiBlitz3.ab3@30828>            Dc.l syntaxerr                                  ; CELSE
0003D880 <AmiBlitz3.ab3@30829>            Dc.l syntaxerr                                  ; CEND
0003D884 <AmiBlitz3.ab3@30830>            Dc.l do_cerr                                    ;docerr
0003D888 <AmiBlitz3.ab3@30831>            Dc.l do_then                                    ;dothen
0003D88C <AmiBlitz3.ab3@30832>            Dc.l do_else                                    ;doelse
0003D890 <AmiBlitz3.ab3@30833>            Dc.l do_even4                                   ;doeven4
0003D894 <AmiBlitz3.ab3@30834>            Dc.l do_even8                                   ;doeven8
0003D898 <AmiBlitz3.ab3@30836>            Dc.l do_dc                                      ;dodc
0003D89C <AmiBlitz3.ab3@30837>            Dc.l do_ds                                      ;dods
0003D8A0 <AmiBlitz3.ab3@30838>            Dc.l do_even                                    ;doeven
0003D8A4 <AmiBlitz3.ab3@30839>            Dc.l do_dcb                                     ;dodcb
0003D8A8 <AmiBlitz3.ab3@30840>            Dc.l do_setreg                                  ;dosetreg
0003D8AC <AmiBlitz3.ab3@30841>            Dc.l do_IncBin                                  ;doincbin
0003D8B0 <AmiBlitz3.ab3@30842>            Dc.l do_free                                    ;dofree
0003D8B4 <AmiBlitz3.ab3@30843>            Dc.l do_use                                     ;douse
0003D8B8 <AmiBlitz3.ab3@30844>            Dc.l do_Stop                                    ;dostop
0003D8BC <AmiBlitz3.ab3@30845>            Dc.l do_Cont                                    ;docont
0003D8C0 <AmiBlitz3.ab3@30846>            Dc.l syntaxerr                                  ;syntaxeer
0003D8C4 <AmiBlitz3.ab3@30847>            Dc.l do_SetInt                                  ;dosetint
0003D8C8 <AmiBlitz3.ab3@30848>            Dc.l do_ClrInt                                  ;doclrint
0003D8CC <AmiBlitz3.ab3@30849>            Dc.l do_MaxLen                                  ;domaxlen
0003D8D0 <AmiBlitz3.ab3@30850>            Dc.l do_DEFTYPE                                 ;dodeftype
0003D8D4 <AmiBlitz3.ab3@30851>            Dc.l do_BLITZ                                   ;doblitz
0003D8D8 <AmiBlitz3.ab3@30852>            Dc.l do_AMIGA                                   ;doamiga
0003D8DC <AmiBlitz3.ab3@30853>            Dc.l do_QAMIGA                                  ;doqamiga
0003D8E0 <AmiBlitz3.ab3@30854>            Dc.l do_VWait                                   ;dovwait
0003D8E4 <AmiBlitz3.ab3@30855>            Dc.l do_LibJsr                                  ;dolibjsr
0003D8E8 <AmiBlitz3.ab3@30856>            Dc.l do_TokeJsr                                 ;dotokejsr
0003D8EC <AmiBlitz3.ab3@30857>            Dc.l do_BLibJsr                                 ;doblibjsr
0003D8F0 <AmiBlitz3.ab3@30858>            Dc.l _extb                                      ;syntaxerr
0003D8F4 <AmiBlitz3.ab3@30862>            Dc.l syntaxerr                                  ;syntaxerr      ;flash2 ; for list
0003D8F8 <AmiBlitz3.ab3@30863>            Dc.l do_SetErr                                  ;doseterr
0003D8FC <AmiBlitz3.ab3@30864>            Dc.l do_ClrErr                                  ;doclrerr
0003D900 <AmiBlitz3.ab3@30865>            Dc.l syntaxerr                                  ;syntaxerr
0003D904 <AmiBlitz3.ab3@30866>            Dc.l do_ErrFail                                 ;doerrfail
0003D908 <AmiBlitz3.ab3@30867>            Dc.l syntaxerr
0003D90C <AmiBlitz3.ab3@30868>            Dc.l syntaxerr                                  ;mod
0003D910 <AmiBlitz3.ab3@30869>            Dc.l syntaxerr                                  ;Pi
0003D914 <AmiBlitz3.ab3@30870>            Dc.l do_Repeat                                  ;dorepeat
0003D918 <AmiBlitz3.ab3@30871>            Dc.l do_Until                                   ;dountil
0003D91C <AmiBlitz3.ab3@30872>            Dc.l do_PutReg                                  ;doputreg
0003D920 <AmiBlitz3.ab3@30873>            Dc.l do_Pop                                     ;dopop
0003D924 <AmiBlitz3.ab3@30874>            Dc.l do_INCDIR                                  ;doincdir
0003D928 <AmiBlitz3.ab3@30875>            Dc.l mydo_Endif2                                ;mydoendif2
0003D92C <AmiBlitz3.ab3@30876>            Dc.l do_Wend                                    ;dowend
0003D930 <AmiBlitz3.ab3@30877>            Dc.l do_SysJsr                                  ;dosysjsr
0003D934 <AmiBlitz3.ab3@30878>            Dc.l do_WBStartup                               ;dowbstartup
0003D938 <AmiBlitz3.ab3@30879>            Dc.l syntaxerr
0003D93C <AmiBlitz3.ab3@30880>            Dc.l do_Ongo                                    ;doongo
0003D940 <AmiBlitz3.ab3@30881>            Dc.l syntaxerr
0003D944 <AmiBlitz3.ab3@30882>            Dc.l do_Forever                                 ;doforever
0003D948 <AmiBlitz3.ab3@30883>            Dc.l do_Restore                                 ;dorestore
0003D94C <AmiBlitz3.ab3@30884>            Dc.l do_Exchange                                ;doexchange
0003D950 <AmiBlitz3.ab3@30885>            Dc.l do_USEPATH                                 ;dousepath
0003D954 <AmiBlitz3.ab3@30886>            Dc.l do_CloseEd                                 ;doclosed
0003D958 <AmiBlitz3.ab3@30887>            Dc.l do_NoCli                                   ;donocli
0003D95C <AmiBlitz3.ab3@30888>            Dc.l syntaxerr                                  ;syntaxerr
0003D960 <AmiBlitz3.ab3@30889>            Dc.l syntaxerr                                  ;syntaxerr
0003D964 <AmiBlitz3.ab3@30890>            Dc.l syntaxerr                                  ;syntaxerr
0003D968 <AmiBlitz3.ab3@30891>            Dc.l syntaxerr                                  ;syntaxerr
0003D96C <AmiBlitz3.ab3@30892>            Dc.l syntaxerr                                  ;syntaxerr
0003D970 <AmiBlitz3.ab3@30893>            Dc.l do_runerrson                               ;dorunerrson
0003D974 <AmiBlitz3.ab3@30894>            Dc.l do_runerrsoff                              ;dorunerrsoff
0003D978 <AmiBlitz3.ab3@30895>            Dc.l do_uselastpath
0003D97C <AmiBlitz3.ab3@30896>            Dc.l do_regload
0003D980 <AmiBlitz3.ab3@30897>            Dc.l do_regsave
0003D984 <AmiBlitz3.ab3@30898>            Dc.l do_Object
0003D988 <AmiBlitz3.ab3@30899>            Dc.l do_usepath2
0003D98C <AmiBlitz3.ab3@30900>            Dc.l do_LastRunErrsMode
0003D990 <AmiBlitz3.ab3@30923> menu_items:Dc.l menu_compile_run                                ;menuadds oreg source
0003D994 <AmiBlitz3.ab3@30924>            Dc.l menu_run
0003D998 <AmiBlitz3.ab3@30925>            Dc.l menu_createexecutable
0003D99C <AmiBlitz3.ab3@30926>            Dc.l menu_dummyfunc                                  ;was menu_compileroptions
0003D9A0 <AmiBlitz3.ab3@30927>            Dc.l menu_createresidentfile
0003D9A4 <AmiBlitz3.ab3@30928> 
0003D9A8 <AmiBlitz3.ab3@30929> 
0003D9AC <AmiBlitz3.ab3@30930>            Dc.l menu_dummyfunc                                  ;was menu_calculator
0003D9B0 <AmiBlitz3.ab3@30931>            Dc.l menu_reloadlibs
0003D9B4 <AmiBlitz3.ab3@30932>            Dc.l menu_loaddebugmodule
0003D9B8 <AmiBlitz3.ab3@30933>            Dc.l menu_dummyfunc
0003D9BC <AmiBlitz3.ab3@30934>            Dc.l menu_newcreate
0003D9C0 <AmiBlitz3.ab3@30935>            Dc.l menu_dummyfunc
0003D9C4 <AmiBlitz3.ab3@30936>            Dc.l menu_toggledebug
0003D9C8 <AmiBlitz3.ab3@30937> 
0003D9CC <AmiBlitz3.ab3@30938>            Dc.l menu_dummyfunc
0003D9F6 <AmiBlitz3.ab3@30943>   !basic
0003DA58 <AmiBlitz3.ab3@30944>   error{!TRANS{"Invalid AmiBlitz3 menu item called!"} }
0003DA76 <AmiBlitz3.ab3@30945>   !asm
0003DA78 <AmiBlitz3.ab3@30946> RTS
0003DA79 <AmiBlitz3.ab3@30952> set_autorun:               Dc.b $00
0003DA7E <AmiBlitz3.ab3@30953> autorun:                   Dc.b $80,$01,$01,$00,$01
0003DA7F <AmiBlitz3.ab3@30955> set_interruptcheck:        Dc.b $00
0003DA84 <AmiBlitz3.ab3@30956> interruptcheck             Dc.b $80,$01,$01,$00,$01
0003DA85 <AmiBlitz3.ab3@30958> set_assemblercheck:        Ds.b 1
0003DA8A <AmiBlitz3.ab3@30959> assemblercheck:            Dc.b $00,$01,$01,$00,$01
0003DA8B <AmiBlitz3.ab3@30961> set_overflowcheck:         Ds.b 1
0003DA90 <AmiBlitz3.ab3@30962> overflowcheck:             Dc.b $00,$01,$01,$00,$01
0003DA96 <AmiBlitz3.ab3@30964> default_obsolete:          Dc.b $00,$80,$01,$01,$00,$01
0003DA9C <AmiBlitz3.ab3@30965> default_interruptcheck:    Dc.b $00,$80,$01,$01,$00,$01
0003DAA2 <AmiBlitz3.ab3@30966> default_overflowcheck:     Dc.b $00,$80,$01,$01,$00,$01
0003DAA4 <AmiBlitz3.ab3@30967> Even4
0003DAB0 <AmiBlitz3.ab3@30970> tsthead:                   Dc.l $000003F3,$00000000,$00000001
0003DAB8 <AmiBlitz3.ab3@30971>                            Dc.l $00000000,$00000000
0003DAC0 <AmiBlitz3.ab3@30972> tstsize1:                  Dc.l $00000100,$000003E9
0003DAC4 <AmiBlitz3.ab3@30973> tstsize2:                  Dc.l $00000100
0003DAC8 <AmiBlitz3.ab3@30974> tstend:                    Dc.l $000003EC
0003DAD0 <AmiBlitz3.ab3@30975> tstsize3:                  Ds.l 2
0003DAD4 <AmiBlitz3.ab3@30976> tstdone:                   Dc.l $000003F2
0003DAD8 <AmiBlitz3.ab3@30979> edstruct:                  Dc.l tokens                     ;data for ted
0003DADC <AmiBlitz3.ab3@30983>                            Dc.l 0
0003DAE0 <AmiBlitz3.ab3@30985>                            Dc.l read_xtrafile              ;load .xtra routine
0003DAE4 <AmiBlitz3.ab3@30986>                            Dc.l write_xtrafile             ;save .xtra routine
0003DAE8 <AmiBlitz3.ab3@30987>                            Dc.l call_menuentry             ;Menu Routine
0003DAEC <AmiBlitz3.ab3@30988>                            Ds.l 1                          ;cleanup (?)
0003DAF0 <AmiBlitz3.ab3@30989>                            Dc.b ":",34,".;"
0003DBEC <AmiBlitz3.ab3@30992> 
0003DCCC <AmiBlitz3.ab3@30993>                            Ds.l 56
0003DCCE <AmiBlitz3.ab3@30998> lslimm:                    Dc.b $E1,$48                                             ;LSL.W   #8,D0
0003DCD2 <AmiBlitz3.ab3@31001> use:                       Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0003DCD4 <AmiBlitz3.ab3@31002>                            Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0003DCD8 <AmiBlitz3.ab3@31003>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003DCDE <AmiBlitz3.ab3@31007> beginarr:                  Dc.b $20,$3C,$00,$00,$00,$00                             ;MOVE.L  #$00000000,D0
0003DCE0 <AmiBlitz3.ab3@31011>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003DCE4 <AmiBlitz3.ab3@31014> putarr:                    Dc.b $2B,$40 :                            Dc.b $00,$00   ;MOVE.L  D0,$0000(A5)
0003DCE8 <AmiBlitz3.ab3@31017> doarr:                     Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003DCEC <AmiBlitz3.ab3@31018>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003DCEE <AmiBlitz3.ab3@31024>                            Dc.b $4A,$40                                             ;TST.W   D0
0003DCF0 <AmiBlitz3.ab3@31028>                            Dc.b $4A,$80                                             ;TST.L   D0
0003DCF2 <AmiBlitz3.ab3@31031> nops8:                     Dc.b $4E,$71                                             ;NOP
0003DCF4 <AmiBlitz3.ab3@31032>                            Dc.b $4E,$71                                             ;NOP
0003DCF6 <AmiBlitz3.ab3@31033>                            Dc.b $4E,$71                                             ;NOP
0003DCF8 <AmiBlitz3.ab3@31034>                            Dc.b $4E,$71                                             ;NOP
0003DCFA <AmiBlitz3.ab3@31035> nops4:                     Dc.b $4E,$71                                             ;NOP
0003DCFC <AmiBlitz3.ab3@31037>                            Dc.b $4E,$71                                             ;NOP
0003DCFE <AmiBlitz3.ab3@31038>                            Dc.b $4E,$71                                             ;NOP
0003DD00 <AmiBlitz3.ab3@31039>                            Dc.b $4E,$71                                             ;NOP
0003DD04 <AmiBlitz3.ab3@31043> dataget:                   Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003DD08 <AmiBlitz3.ab3@31046> dataput:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003DD0A <AmiBlitz3.ab3@31049> stlenget:                  Dc.b $2F,$1B                                             ;MOVE.L  (A3)+,-(A7)
0003DD0C <AmiBlitz3.ab3@31052> stalign:                   Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003DD0E <AmiBlitz3.ab3@31053>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003DD12 <AmiBlitz3.ab3@31054>                            Dc.b $08,$80,$00,$00                                     ;BCLR    #0,D0
0003DD14 <AmiBlitz3.ab3@31055>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003DD16 <AmiBlitz3.ab3@31061> dataletb:                  Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003DD1A <AmiBlitz3.ab3@31062>                            Dc.b $1B,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A5)
0003DD1C <AmiBlitz3.ab3@31067> dataletbl:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003DD20 <AmiBlitz3.ab3@31068>                            Dc.b $19,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A4)
0003DD22 <AmiBlitz3.ab3@31072> dataletb2:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003DD24 <AmiBlitz3.ab3@31073>                            Dc.b $14,$9B                                             ;MOVE.B  (A3)+,(A2)
0003DD28 <AmiBlitz3.ab3@31079> dataletw:                  Dc.b $3B,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A5)
0003DD2A <AmiBlitz3.ab3@31080>                            Dc.b $34,$9B                                             ;MOVE.W  (A3)+,(A2)
0003DD2E <AmiBlitz3.ab3@31081>                            Dc.b $39,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A4)
0003DD32 <AmiBlitz3.ab3@31085> dataletl:                  Dc.b $2B,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A5)
0003DD34 <AmiBlitz3.ab3@31086>                            Dc.b $24,$9B                                             ;MOVE.L  (A3)+,(A2)
0003DD38 <AmiBlitz3.ab3@31087>                            Dc.b $29,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A4)
0003DD3A <AmiBlitz3.ab3@31090> nextfixw:                  Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003DD3E <AmiBlitz3.ab3@31093> nextfixw2:                 Dc.b $4F,$EF,$00,$0A                                     ;LEA $000A(A7),A7
0003DD42 <AmiBlitz3.ab3@31096> nextfixl:                  Dc.b $4F,$EF,$00,$0C                                     ;LEA $000C(A7),A7
0003DD46 <AmiBlitz3.ab3@31099> nextfixl2:                 Dc.b $4F,$EF,$00,$0E                                     ;LEA $000E(A7),A7
0003DD4A <AmiBlitz3.ab3@31103>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003DD4C <AmiBlitz3.ab3@31104>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003DD4E <AmiBlitz3.ab3@31105>                            Dc.b $D1,$12                                             ;ADD.B   D0,(A2)
0003DD52 <AmiBlitz3.ab3@31110>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003DD54 <AmiBlitz3.ab3@31111>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003DD56 <AmiBlitz3.ab3@31112>                            Dc.b $D1,$52                                             ;ADD.W   D0,(A2)
0003DD5A <AmiBlitz3.ab3@31117>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003DD5C <AmiBlitz3.ab3@31118>                            Dc.b $20,$17                                             ;MOVE.L  (A7),D0
0003DD5E <AmiBlitz3.ab3@31119>                            Dc.b $D1,$92                                             ;ADD.L   D0,(A2)
0003DD62 <AmiBlitz3.ab3@31124>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003DD64 <AmiBlitz3.ab3@31125>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003DD66 <AmiBlitz3.ab3@31126>                            Dc.b $22,$17                                             ;MOVE.L  (A7),D1
0003DD6A <AmiBlitz3.ab3@31127>                            Dc.b $4E,$AE,$FF,$BE                                     ;JSR -$0042(A6)
0003DD6C <AmiBlitz3.ab3@31128>                            Dc.b $24,$80                                             ;MOVE.L  D0,(A2)
0003DD70 <AmiBlitz3.ab3@31133>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003DD72 <AmiBlitz3.ab3@31134>                            Dc.b $10,$12                                             ;MOVE.B  (A2),D0
0003DD76 <AmiBlitz3.ab3@31135>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003DD78 <AmiBlitz3.ab3@31136>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003DD7C <AmiBlitz3.ab3@31137>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000001         ;.skip org source
0003DD7E <AmiBlitz3.ab3@31138>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003DD80 <AmiBlitz3.ab3@31141>                            Dc.b $B0,$01                                             ;CMP.B   D1,D0
0003DD84 <AmiBlitz3.ab3@31146>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003DD86 <AmiBlitz3.ab3@31147>                            Dc.b $30,$12                                             ;MOVE.W  (A2),D0
0003DD8A <AmiBlitz3.ab3@31148>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003DD8C <AmiBlitz3.ab3@31149>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003DD90 <AmiBlitz3.ab3@31150>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000002         ;.skip org source
0003DD92 <AmiBlitz3.ab3@31151>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003DD94 <AmiBlitz3.ab3@31154>                            Dc.b $B0,$41                                             ;CMP.W   D1,D0
0003DD98 <AmiBlitz3.ab3@31159>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003DD9A <AmiBlitz3.ab3@31160>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003DD9E <AmiBlitz3.ab3@31161>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003DDA0 <AmiBlitz3.ab3@31162>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003DDA4 <AmiBlitz3.ab3@31163>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000003         ;.skip org source
0003DDA6 <AmiBlitz3.ab3@31164>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003DDA8 <AmiBlitz3.ab3@31167>                            Dc.b $B0,$81                                             ;CMP.L   D1,D0
0003DDAC <AmiBlitz3.ab3@31172>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003DDAE <AmiBlitz3.ab3@31173>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003DDB2 <AmiBlitz3.ab3@31174>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003DDB8 <AmiBlitz3.ab3@31175>                            Dc.b $08,$2F,$00,$07,$00,$03                             ;BTST    #7,$0003(A7)
0003DDBC <AmiBlitz3.ab3@31176>                            Dc.b $67,$00,$00,$04                                     ;BEQ.W   L000004
0003DDBE <AmiBlitz3.ab3@31177>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003DDC2 <AmiBlitz3.ab3@31184>                            Dc.b $4E,$AE,$FF,$D6                                     ;JSR -$002A(A6)
0003DDC4 <AmiBlitz3.ab3@31188> swapd0:                    Dc.b $48,$40                                             ;SWAP    D0
0003DDC6 <AmiBlitz3.ab3@31191> pushindex:                 Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003DDCA <AmiBlitz3.ab3@31194> leaamp:                    Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003DDCC <AmiBlitz3.ab3@31195> leaamp2:                   Dc.b $20,$0A                                             ;MOVE.L  A2,D0
0003DDD0 <AmiBlitz3.ab3@31198> leaampl:                   Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003DDD2 <AmiBlitz3.ab3@31201> stamp:                     Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003DDD6 <AmiBlitz3.ab3@31204> stamp2:                    Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003DDD8 <AmiBlitz3.ab3@31208>                            Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
0003DDDA <AmiBlitz3.ab3@31211> pushd0wd:                  Dc.b $3F,$00                                             ;MOVE.W  D0,-(A7)
0003DDDC <AmiBlitz3.ab3@31214> pushd0l:                   Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003DDE0 <AmiBlitz3.ab3@31217> movenumrep:                Dc.b $3E,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D7
0003DDE4 <AmiBlitz3.ab3@31220> preplibst:                 Dc.b $45,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A2
0003DDE8 <AmiBlitz3.ab3@31223> fixlibst:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003DDEA <AmiBlitz3.ab3@31226> pushdn:                    Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003DDEC <AmiBlitz3.ab3@31229> movea3a7:                  Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003DDF0 <AmiBlitz3.ab3@31232> movestst2:                 Dc.b $20,$2F :                            Dc.b $00,$06   ;MOVE.L  $0006(A7),D0
0003DDF6 <AmiBlitz3.ab3@31233>                            Dc.b $3F,$6F,$00,$04,$00,$08                             ;MOVE.W  $0004(A7),$0008(A7)
0003DDF8 <AmiBlitz3.ab3@31234>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003DDFC <AmiBlitz3.ab3@31238> movea7dn:                  Dc.b $20,$2F :                            Dc.b $00,$04   ;MOVE.L  $0004(A7),D0
0003DDFE <AmiBlitz3.ab3@31239>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003DE00 <AmiBlitz3.ab3@31243> moved0a3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003DE04 <AmiBlitz3.ab3@31246> movestdn:                  Dc.b $20,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),D0
0003DE06 <AmiBlitz3.ab3@31250>                            Dc.b $20,$0B                                             ;MOVE.L  A3,D0
0003DE08 <AmiBlitz3.ab3@31254>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003DE0A <AmiBlitz3.ab3@31258>                            Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003DE0E <AmiBlitz3.ab3@31261> moverts:                   Dc.b $2F,$57 :                            Dc.b $00,$00   ;MOVE.L  (A7),$0000(A7)
0003DE12 <AmiBlitz3.ab3@31264> fixstack:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003DE14 <AmiBlitz3.ab3@31267> fixq:                      Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003DE16 <AmiBlitz3.ab3@31270> fix1:                      Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003DE18 <AmiBlitz3.ab3@31273> movedna3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003DE1C <AmiBlitz3.ab3@31276> least:                     Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003DE20 <AmiBlitz3.ab3@31279> funcst:                    Dc.b $2F,$2C :                            Dc.b $00,$00   ;MOVE.L  $0000(A4),-(A7)
0003DE22 <AmiBlitz3.ab3@31282> addq4a2:                   Dc.b $58,$4A                                             ;ADDQ.W  #4,A2
0003DE24 <AmiBlitz3.ab3@31286>                            Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003DE28 <AmiBlitz3.ab3@31289>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003DE2A <AmiBlitz3.ab3@31295>                            Dc.b $26,$5F                                             ;MOVEA.L (A7)+,A3
0003DE2E <AmiBlitz3.ab3@31298>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003DE30 <AmiBlitz3.ab3@31304>                            Dc.b $CB,$4C                                             ;EXG A5,A4
0003DE34 <AmiBlitz3.ab3@31308> linksize:                  Dc.b $4E,$54 :                            Dc.b $00,$00   ;LINK    A4,#-$0000
0003DE36 <AmiBlitz3.ab3@31311> unlinka4:                  Dc.b $4E,$5C                                             ;UNLK    A4
0003DE38 <AmiBlitz3.ab3@31315>                            Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003DE3A <AmiBlitz3.ab3@31319>                            Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003DE40 <AmiBlitz3.ab3@31322> gotocode:                  Dc.b $4E,$F9,$00,$00,$00,$00                             ;JMP $00000000
0003DE46 <AmiBlitz3.ab3@31325> gosubcode:                 Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003DE4E <AmiBlitz3.ab3@31329> mwait:                     Dc.b $08,$39,$00,$06,$00,$BF,$E0,$01                     ;BTST    #6,$00BFE001
0003DE52 <AmiBlitz3.ab3@31330>                            Dc.b $66,$00,$FF,$F6                                     ;BNE.W   L000005       ;mwait: org source
0003DE54 <AmiBlitz3.ab3@31334> libreg:                    Dc.b $20,$00                                             ;MOVE.L  D0,D0
0003DE58 <AmiBlitz3.ab3@31337> libbase:                   Dc.b $2C,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A6
0003DE5C <AmiBlitz3.ab3@31340> libjsr:                    Dc.b $4E,$AE :                            Dc.b $00,$00   ;JSR $0000(A6)
0003DE60 <AmiBlitz3.ab3@31343> regtransd:                 Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003DE64 <AmiBlitz3.ab3@31344> regtransa:                 Dc.b $20,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A0
0003DE68 <AmiBlitz3.ab3@31348>                            Dc.b $26,$7C,$00,$00                                     ;MOVEA.L #$00000000,A3
0003DE6C <AmiBlitz3.ab3@31350>                            Dc.l $3F1B                                               ;MOVE.W  (A3)+,-(A7)
0003DE6E <AmiBlitz3.ab3@31353> movea2dn:                  Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003DE72 <AmiBlitz3.ab3@31356> moved3a5dn:                Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003DE74 <AmiBlitz3.ab3@31359> stvarget2:                 Dc.b $70,$00                                             ;MOVEQ   #$00,D0
0003DE76 <AmiBlitz3.ab3@31360>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003DE78 <AmiBlitz3.ab3@31361>                            Dc.b $4A,$92                                             ;TST.L   (A2)
0003DE7C <AmiBlitz3.ab3@31362> 
0003DE7E <AmiBlitz3.ab3@31363>                            Dc.b $20,$52                                             ;MOVEA.L (A2),A0
0003DE80 <AmiBlitz3.ab3@31364>                            Dc.b $59,$48                                             ;SUBQ.W  #4,A0
0003DE82 <AmiBlitz3.ab3@31365>                            Dc.b $2E,$98                                             ;MOVE.L  (A0)+,(A7)
0003DE88 <AmiBlitz3.ab3@31367>                            Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003DE8A <AmiBlitz3.ab3@31372> addcode:                   Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003DE8C <AmiBlitz3.ab3@31373>                            Dc.b $D1,$97                                             ;ADD.L   D0,(A7)
0003DE8E <AmiBlitz3.ab3@31377> pushlen:                   Dc.b $2F,$18                                             ;MOVE.L  (A0)+,-(A7)
0003DE92 <AmiBlitz3.ab3@31380> leaa5d3a2:                 Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003DE94 <AmiBlitz3.ab3@31383> pusha2:                    Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003DE96 <AmiBlitz3.ab3@31387>                            Dc.b $24,$57                                             ;MOVEA.L (A7),A2
0003DE98 <AmiBlitz3.ab3@31390> pulla2:                    Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003DE9C <AmiBlitz3.ab3@31393> pulla2st:                  Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003DE9E <AmiBlitz3.ab3@31394>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003DEA2 <AmiBlitz3.ab3@31398> pusha3:                    Dc.b $2F,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),-(A7)
0003DEA6 <AmiBlitz3.ab3@31399> pusha32:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003DEAA <AmiBlitz3.ab3@31403> pulla3:                    Dc.b $2B,$5F :                            Dc.b $00,$00   ;MOVE.L  (A7)+,$0000(A5)
0003DEAE <AmiBlitz3.ab3@31407> geta3:                     Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003DEB4 <AmiBlitz3.ab3@31411> numtoa0:                   Dc.b $20,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A0
0003DEBA <AmiBlitz3.ab3@31414> numtoa2:                   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0003DEBE <AmiBlitz3.ab3@31418> endarray:                  Dc.b $38,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D4
0003DEC2 <AmiBlitz3.ab3@31422>                            Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003DEC6 <AmiBlitz3.ab3@31423>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003DECC <AmiBlitz3.ab3@31428>                            Dc.b $20,$3C,$00,$00,$00,$04                             ;MOVE.L  #$00000004,D0
0003DED0 <AmiBlitz3.ab3@31433>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003DED2 <AmiBlitz3.ab3@31438>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003DED6 <AmiBlitz3.ab3@31442>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003DED8 <AmiBlitz3.ab3@31446> movea0:                    Dc.b $24,$52                                             ;MOVEA.L (A2),A2
0003DEDA <AmiBlitz3.ab3@31449> adda0a0:                   Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003DEDC <AmiBlitz3.ab3@31450>                            Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003DEE0 <AmiBlitz3.ab3@31454>                            Dc.b $2C,$78,$00,$04                                     ;MOVEA.L $0004,A6
0003DEE4 <AmiBlitz3.ab3@31458> movea5a0:                  Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003DEE8 <AmiBlitz3.ab3@31461> movea0a0:                  Dc.b $24,$6A :                            Dc.b $00,$00   ;MOVEA.L $0000(A2),A2
0003DEEA <AmiBlitz3.ab3@31464> addqa0:                    Dc.b $52,$4A                                             ;ADDQ.W  #1,A2
0003DEEE <AmiBlitz3.ab3@31467> leaa0a0:                   Dc.b $45,$EA :                            Dc.b $00,$00   ;LEA $0000(A2),A2
0003DEF0 <AmiBlitz3.ab3@31470> addrega2:                  Dc.b $D4,$C0                                             ;ADDA.W  D0,A2
0003DEF9 <AmiBlitz3.ab3@31474>                            Dc.b "ram:test",0
0003DEFA <AmiBlitz3.ab3@31475> Even
0003DEFE <AmiBlitz3.ab3@31479>                            Dc.l  0                          ;was  Ds.w 3 org source
0003DF00 <AmiBlitz3.ab3@31481>                            Dc.w  0
0003DF04 <AmiBlitz3.ab3@31484> _mathffpbase:              Ds.l 1                           ;maths org source
0003DF06 <AmiBlitz3.ab3@31485> regnum:                    Ds.w 1                           ;regat org source       ;register being used!
0003DF08 <AmiBlitz3.ab3@31486> typelen:                   Ds.w 1
0003DF0C <AmiBlitz3.ab3@31487> prevtype:                  Ds.l 1
0003DF10 <AmiBlitz3.ab3@31488> lastsourcepos:             Ds.l 1                           ;prevloc org source
0003DF12 <AmiBlitz3.ab3@31489> lastchar:                  Ds.w 1
0003DF16 <AmiBlitz3.ab3@31490> thistype:                  Ds.l 1
0003DF1A <AmiBlitz3.ab3@31491> errstack:                  Ds.l 1
0003DF1E <AmiBlitz3.ab3@31492> errcont:                   Ds.l 1
0003DF20 <AmiBlitz3.ab3@31493> linemode:                  Ds.w 1                          ;0 if norm, 1 if newtype
0003DF22 <AmiBlitz3.ab3@31494> linesleft:                 Ds.w 1
0003DF26 <AmiBlitz3.ab3@31495> sourceline:                Ds.l 1                          ;thisitem org source
0003DF2A <AmiBlitz3.ab3@31496> varbase:                   Ds.l 1                          ;firstvar org source
0003DF2E <AmiBlitz3.ab3@31497> alllocals:                 Ds.l 1
0003DF32 <AmiBlitz3.ab3@31498> firstlocal:                Ds.l 1
0003DF36 <AmiBlitz3.ab3@31499> firstglob:                 Ds.l 1
0003DF38 <AmiBlitz3.ab3@31500> globalvarpointer:          Ds.w 1                          ;varoff org source
0003DF3A <AmiBlitz3.ab3@31501> locvaroff:                 Ds.w 1
0003DF3E <AmiBlitz3.ab3@31502> firstitem_:                 Ds.l 1
0003DF40 <AmiBlitz3.ab3@31503> numlines_org:              Ds.w 1                          ;numlines org source
0003DF42 <AmiBlitz3.ab3@31504> returncode_org:            Ds.w 1                          ;returncode org source
0003DF46 <AmiBlitz3.ab3@31505> firstiff:                  Ds.l 1                          ;firstif org source
0003DF4A <AmiBlitz3.ab3@31506> ptr_seg_ped:               Ds.l 1                          ;segadd org source
0003E14A <AmiBlitz3.ab3@31507> str_pedfile:               Ds.b #MAX_STRINGSIZE            ;segname org source
0003E15A <AmiBlitz3.ab3@31508> str_mathffpname:           Dc.b "mathffp.library",0 : Even ;mathsname org source
0003E35A <AmiBlitz3.ab3@31509> str_libfilename:           Ds.b #MAX_STRINGSIZE
0003E55A <AmiBlitz3.ab3@31510> str_path_userlibs:         Ds.b #MAX_STRINGSIZE
0003E75A <AmiBlitz3.ab3@31511> str_defaultdbug:           Ds.b #MAX_STRINGSIZE            ;debugname org source
0003E75E <AmiBlitz3.ab3@31513> ptr_seg_debugger:          Ds.l 1                          ;dseg org source
0003E95E <AmiBlitz3.ab3@31514> str_blitz3assign:          Ds.b #MAX_STRINGSIZE            ;dpath org source
0003EB5E <AmiBlitz3.ab3@31516> str_path_acidlibs:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003EB62 <AmiBlitz3.ab3@31517> size_acidlibs:             Ds.l 1                          ;acidlibs org source
0003ED62 <AmiBlitz3.ab3@31518> str_path_deflibs:          Ds.b #MAX_STRINGSIZE            ;defname org source
0003ED66 <AmiBlitz3.ab3@31519> size_deflibs:              Ds.l 1                          ;deflibs org source
0003EF66 <AmiBlitz3.ab3@31520> str_tempfilename:          Ds.b #MAX_STRINGSIZE
0003F166 <AmiBlitz3.ab3@31522> str_temp_debugmodulename:  Ds.b #MAX_STRINGSIZE            ;dname org source
0003F16A <AmiBlitz3.ab3@31523> ptr_temp_debugmodule:      Ds.l 1                          ;dname2 org source
0003F36A <AmiBlitz3.ab3@31525> str_path_includes:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003F36E <AmiBlitz3.ab3@31531>   Dc.b $E3,$10,$00,$01                                     ;icondata  
0003F372 <AmiBlitz3.ab3@31532>   Dc.b $00,$00,$00,$00
0003F376 <AmiBlitz3.ab3@31533>   Dc.b $00,$19,$00,$11
0003F37A <AmiBlitz3.ab3@31534>   Dc.b $00,$2E,$00,$18
0003F37E <AmiBlitz3.ab3@31535>   Dc.b $00,$04,$00,$03
0003F382 <AmiBlitz3.ab3@31536>   Dc.b $00,$01,$00,$22
0003F386 <AmiBlitz3.ab3@31537>   Dc.b $73,$68,$00,$00
0003F38A <AmiBlitz3.ab3@31538>   Dc.b $00,$00,$00,$00
0003F38E <AmiBlitz3.ab3@31539>   Dc.b $00,$00,$00,$00
0003F392 <AmiBlitz3.ab3@31540>   Dc.b $00,$00,$00,$00
0003F396 <AmiBlitz3.ab3@31541>   Dc.b $00,$00,$00,$00
0003F39A <AmiBlitz3.ab3@31542>   Dc.b $00,$00,$00,$00
0003F39E <AmiBlitz3.ab3@31543>   Dc.b $03,$22,$00,$21
0003F3A2 <AmiBlitz3.ab3@31544>   Dc.b $3C,$28,$00,$22
0003F3A6 <AmiBlitz3.ab3@31545>   Dc.b $6E,$C0,$00,$00
0003F3AA <AmiBlitz3.ab3@31546>   Dc.b $00,$12,$00,$00
0003F3AE <AmiBlitz3.ab3@31547>   Dc.b $00,$0E,$00,$00
0003F3B2 <AmiBlitz3.ab3@31548>   Dc.b $00,$00,$00,$00
0003F3B6 <AmiBlitz3.ab3@31549>   Dc.b $00,$00,$00,$00
0003F3BA <AmiBlitz3.ab3@31550>   Dc.b $00,$00,$00,$00
0003F3BE <AmiBlitz3.ab3@31551>   Dc.b $00,$00,$00,$2E
0003F3C2 <AmiBlitz3.ab3@31552>   Dc.b $00,$17,$00,$02
0003F3C6 <AmiBlitz3.ab3@31553>   Dc.b $00,$01,$8E,$80
0003F3CA <AmiBlitz3.ab3@31554>   Dc.b $03,$00,$00,$00
0003F3CE <AmiBlitz3.ab3@31555>   Dc.b $00,$00,$FF,$FF
0003F3D2 <AmiBlitz3.ab3@31556>   Dc.b $FF,$FF,$FF,$FC
0003F3D6 <AmiBlitz3.ab3@31557>   Dc.b $80,$00,$00,$00
0003F3DA <AmiBlitz3.ab3@31558>   Dc.b $00,$00,$80,$00
0003F3DE <AmiBlitz3.ab3@31559>   Dc.b $00,$3F,$BB,$40
0003F3E2 <AmiBlitz3.ab3@31560>   Dc.b $80,$1F,$C0,$00
0003F3E6 <AmiBlitz3.ab3@31561>   Dc.b $00,$00,$80,$3F
0003F3EA <AmiBlitz3.ab3@31562>   Dc.b $C0,$0F,$BB,$40
0003F3EE <AmiBlitz3.ab3@31563>   Dc.b $80,$1F,$C0,$00
0003F3F2 <AmiBlitz3.ab3@31564>   Dc.b $00,$00,$8E,$00
0003F3F6 <AmiBlitz3.ab3@31565>   Dc.b $F8,$00,$00,$00
0003F3FA <AmiBlitz3.ab3@31566>   Dc.b $8F,$01,$FF,$00
0003F3FE <AmiBlitz3.ab3@31567>   Dc.b $3B,$40,$81,$E3
0003F402 <AmiBlitz3.ab3@31568>   Dc.b $F7,$C0,$00,$00
0003F406 <AmiBlitz3.ab3@31569>   Dc.b $80,$7F,$F8,$70
0003F40A <AmiBlitz3.ab3@31570>   Dc.b $3B,$40,$80,$0F
0003F40E <AmiBlitz3.ab3@31571>   Dc.b $7C,$E0,$00,$00
0003F412 <AmiBlitz3.ab3@31572>   Dc.b $80,$00,$FD,$80
0003F416 <AmiBlitz3.ab3@31573>   Dc.b $00,$00,$80,$01
0003F41A <AmiBlitz3.ab3@31574>   Dc.b $F6,$00,$FB,$40
0003F41E <AmiBlitz3.ab3@31575>   Dc.b $80,$03,$EF,$00
0003F422 <AmiBlitz3.ab3@31576>   Dc.b $00,$00,$80,$07
0003F426 <AmiBlitz3.ab3@31577>   Dc.b $87,$80,$3B,$40
0003F42A <AmiBlitz3.ab3@31578>   Dc.b $80,$0F,$01,$C0
0003F42E <AmiBlitz3.ab3@31579>   Dc.b $00,$00,$80,$03
0003F432 <AmiBlitz3.ab3@31580>   Dc.b $F0,$70,$1D,$40
0003F436 <AmiBlitz3.ab3@31581>   Dc.b $80,$00,$18,$1C
0003F43A <AmiBlitz3.ab3@31582>   Dc.b $00,$00,$80,$00
0003F43E <AmiBlitz3.ab3@31583>   Dc.b $10,$06,$03,$40
0003F442 <AmiBlitz3.ab3@31584>   Dc.b $80,$00,$20,$1F
0003F446 <AmiBlitz3.ab3@31585>   Dc.b $00,$00,$80,$00
0003F44A <AmiBlitz3.ab3@31586>   Dc.b $00,$00,$01,$40
0003F44E <AmiBlitz3.ab3@31587>   Dc.b $80,$00,$00,$00
0003F452 <AmiBlitz3.ab3@31588>   Dc.b $00,$00,$80,$00
0003F456 <AmiBlitz3.ab3@31589>   Dc.b $00,$00,$00,$00
0003F45A <AmiBlitz3.ab3@31590>   Dc.b $00,$00,$00,$00
0003F45E <AmiBlitz3.ab3@31591>   Dc.b $00,$00,$00,$00
0003F462 <AmiBlitz3.ab3@31592>   Dc.b $00,$00,$00,$04
0003F466 <AmiBlitz3.ab3@31593>   Dc.b $00,$3F,$FC,$01
0003F46A <AmiBlitz3.ab3@31594>   Dc.b $BB,$44,$00,$60
0003F46E <AmiBlitz3.ab3@31595>   Dc.b $FE,$00,$00,$04
0003F472 <AmiBlitz3.ab3@31596>   Dc.b $00,$CF,$FF,$01
0003F476 <AmiBlitz3.ab3@31597>   Dc.b $BB,$44,$1F,$EF
0003F47A <AmiBlitz3.ab3@31598>   Dc.b $FF,$00,$00,$04
0003F47E <AmiBlitz3.ab3@31599>   Dc.b $33,$FF,$FF,$E0
0003F482 <AmiBlitz3.ab3@31600>   Dc.b $00,$04,$37,$FE
0003F486 <AmiBlitz3.ab3@31601>   Dc.b $7F,$FC,$1B,$44
0003F48A <AmiBlitz3.ab3@31602>   Dc.b $0F,$9C,$FF,$FF
0003F48E <AmiBlitz3.ab3@31603>   Dc.b $00,$04,$03,$E3
0003F492 <AmiBlitz3.ab3@31604>   Dc.b $FF,$FF,$DB,$44
0003F496 <AmiBlitz3.ab3@31605>   Dc.b $00,$7F,$BF,$FF
0003F49A <AmiBlitz3.ab3@31606>   Dc.b $80,$04,$00,$0F
0003F49E <AmiBlitz3.ab3@31607>   Dc.b $3F,$FE,$00,$04
0003F4A2 <AmiBlitz3.ab3@31608>   Dc.b $00,$06,$7F,$F8
0003F4A6 <AmiBlitz3.ab3@31609>   Dc.b $1B,$44,$00,$0C
0003F4AA <AmiBlitz3.ab3@31610>   Dc.b $F7,$FC,$00,$04
0003F4AE <AmiBlitz3.ab3@31611>   Dc.b $00,$19,$F9,$FE
0003F4B2 <AmiBlitz3.ab3@31612>   Dc.b $1B,$44,$00,$33
0003F4B6 <AmiBlitz3.ab3@31613>   Dc.b $FE,$7F,$00,$04
0003F4BA <AmiBlitz3.ab3@31614>   Dc.b $00,$0F,$FF,$BF
0003F4BE <AmiBlitz3.ab3@31615>   Dc.b $CD,$44,$00,$03
0003F4C2 <AmiBlitz3.ab3@31616>   Dc.b $EF,$EF,$F0,$04
0003F4C6 <AmiBlitz3.ab3@31617>   Dc.b $00,$00,$7F,$DF
0003F4CA <AmiBlitz3.ab3@31618>   Dc.b $FB,$44,$00,$00
0003F4CE <AmiBlitz3.ab3@31619>   Dc.b $FF,$A7,$FC,$04
0003F4D2 <AmiBlitz3.ab3@31620>   Dc.b $00,$00,$7E,$3F
0003F4D6 <AmiBlitz3.ab3@31621>   Dc.b $FD,$44,$00,$00
0003F4DA <AmiBlitz3.ab3@31622>   Dc.b $00,$00,$00,$04
0003F4DE <AmiBlitz3.ab3@31623>   Dc.b $7F,$FF,$FF,$FF
0003F4E2 <AmiBlitz3.ab3@31624>   Dc.b $FF,$FC,$00,$00
0003F4E6 <AmiBlitz3.ab3@31625>   Dc.b $00,$01,$00,$00
0003F4E9 <AmiBlitz3.ab3@31626>   Dc.b $00,$00,$04
0003F4EF <AmiBlitz3.ab3@31629> str_infoextention2:  Dc.b ".info",0                           ;infoname org source
0003F547 <AmiBlitz3.ab3@31630> errorlimit_text:     Dc.b "There are too much errors, compiling is stop now. Please fix errors first and try again",0
0003F548 <AmiBlitz3.ab3@31631> Even
0003F54C <AmiBlitz3.ab3@31633> sysdebug:            Dc.l $3F0
0003F576 <AmiBlitz3.ab3@31638>  !basic
0003F58A <AmiBlitz3.ab3@31639>  If OnePassCompiling = True
0003F5A8 <AmiBlitz3.ab3@31640>    maxmem.l = (AvailMem_ (#MEMF_PUBLIC) LSR 2)  ; 1/4 of the available free mem
0003F5B8 <AmiBlitz3.ab3@31641>    objectlength.l = Peek.l(?objlen)
0003F5D6 <AmiBlitz3.ab3@31642>    If Peek.b(?use_debugger) = 0
0003F5FC <AmiBlitz3.ab3@31643>      If (objectlength < 3670056) AND (maxmem > 3670056)
0003F602 <AmiBlitz3.ab3@31644>        MOVE.l #3145727,d2     ; objectbuffersize
0003F608 <AmiBlitz3.ab3@31645>        MOVE.l  #262143,d3     ; libsbuffersize
0003F60E <AmiBlitz3.ab3@31646>        MOVE.l  #131071,d4     ; systembuffersize
0003F614 <AmiBlitz3.ab3@31647>        MOVE.l  #131071,d5     ; databuffersize
0003F61A <AmiBlitz3.ab3@31648>        JSR makeallox  ; added 40 buffer more
0003F644 <AmiBlitz3.ab3@31649>        !basic
0003F64A <AmiBlitz3.ab3@31650>      Else
0003F670 <AmiBlitz3.ab3@31651>        If (objectlength < 1572904) AND (maxmem > 1572904)
0003F68E <AmiBlitz3.ab3@31652>          !asm
0003F694 <AmiBlitz3.ab3@31653>          MOVE.l #1310719,d2     ; objectbuffersize
0003F69A <AmiBlitz3.ab3@31654>          MOVE.l  #131071,d3     ; libsbuffersize
0003F6A0 <AmiBlitz3.ab3@31655>          MOVE.l   #65535,d4     ; systembuffersize
0003F6A6 <AmiBlitz3.ab3@31656>          MOVE.l   #65535,d5     ; databuffersize
0003F6AC <AmiBlitz3.ab3@31657>          JSR makeallox ; added 40 buffer more
0003F6D6 <AmiBlitz3.ab3@31658>          !basic
0003F6DC <AmiBlitz3.ab3@31661>    Else
0003F6EC <AmiBlitz3.ab3@31662>      maxmem LSL 1 ; for debug test for 1/2 of the available mem
0003F712 <AmiBlitz3.ab3@31663>      If (objectlength < 12058664) AND (maxmem > 12058664)
0003F718 <AmiBlitz3.ab3@31664>        MOVE.l #5242879,d2     ; objectbuffersize
0003F71E <AmiBlitz3.ab3@31665>        MOVE.l  #262143,d3     ; libsbuffersize
0003F724 <AmiBlitz3.ab3@31666>        MOVE.l #6291455,d4     ; systembuffersize
0003F72A <AmiBlitz3.ab3@31667>        MOVE.l  #262143,d5     ; databuffersize
0003F730 <AmiBlitz3.ab3@31668>        JSR makeallox ; added 40 buffer more
0003F75A <AmiBlitz3.ab3@31669>        !basic
0003F760 <AmiBlitz3.ab3@31670>      Else
0003F786 <AmiBlitz3.ab3@31671>        If (objectlength < 6094888) AND (maxmem > 6094888)
0003F7A4 <AmiBlitz3.ab3@31672>          !asm
0003F7AA <AmiBlitz3.ab3@31673>          MOVE.l #2621439,d2     ; objectbuffersize
0003F7B0 <AmiBlitz3.ab3@31674>          MOVE.l  #262143,d3     ; libsbuffersize
0003F7B6 <AmiBlitz3.ab3@31675>          MOVE.l #3145727,d4     ; systembuffersize
0003F7BC <AmiBlitz3.ab3@31676>          MOVE.l   #65535,d5     ; databuffersize
0003F7C2 <AmiBlitz3.ab3@31677>          JSR makeallox ; added 40 buffer more
0003F7EC <AmiBlitz3.ab3@31678>          !basic
0003F80A <AmiBlitz3.ab3@31683>  !asm
0003F80C <AmiBlitz3.ab3@31684> RTS
0003F836 <AmiBlitz3.ab3@31687>  !basic
0003F83C <AmiBlitz3.ab3@31688>    releaseexe = True                                  ; set release modus to on
0003F87A <AmiBlitz3.ab3@31689>    !ComData_GetW{comWord_CreateDebugFile,D0}          ; get the status for creating .dbg file
0003F87E <AmiBlitz3.ab3@31690>    releasedbg_save = PutD0                            ; save the status
0003F8B4 <AmiBlitz3.ab3@31691>    !ComData_SetW{comWord_CreateDebugFile,#0}          ; set it of so it will not create with every needed compile run
0003F8C6 <AmiBlitz3.ab3@31692>    releasemakesmall_save = Peek.b(?make_smallestcode) ; save the status of make smallest code
0003F8D8 <AmiBlitz3.ab3@31693> 
0003F916 <AmiBlitz3.ab3@31694>    !ComData_GetB{comByte_FuncOptimize,D0}             ; get the status of function optimizer
0003F91A <AmiBlitz3.ab3@31695>    releasefuncoptimize_save = PutD0                   ; save it
0003F950 <AmiBlitz3.ab3@31696>    !ComData_SetB{comByte_FuncOptimize,#1}             ; set it on
0003F962 <AmiBlitz3.ab3@31697>    releasedebugger_save = Peek.b(?use_debugger)       ; save the status of the use of the debugger
0003F972 <AmiBlitz3.ab3@31698>    Poke.b ?use_debugger,0                             ; set if off because we create a release verion and need no debugging code
0003F990 <AmiBlitz3.ab3@31699>  !asm
0003F996 <AmiBlitz3.ab3@31700>  JSR menu_newcreate                                   ; jump to start the compiling
0003F99A <AmiBlitz3.ab3@31701>  !regs2stack                                          ; save the registers
0003F9C4 <AmiBlitz3.ab3@31702>  !basic
0003F9CA <AmiBlitz3.ab3@31703>    releaseexe = False                                 ; set creat release exe off
0003F9D0 <AmiBlitz3.ab3@31704>    GetD0 releasedbg_save                              ; set the old status of create .dbg file back
0003FA04 <AmiBlitz3.ab3@31705>    !ComData_SetW{comWord_CreateDebugFile,D0}          ;                      "
0003FA16 <AmiBlitz3.ab3@31706>    Poke.b ?use_debugger,releasedebugger_save          ; set the old status of use Debugger back
0003FA1E <AmiBlitz3.ab3@31707>    GetD0 releasefuncoptimize_save                     ; set the old status of function optimizer back
0003FA52 <AmiBlitz3.ab3@31708>    !ComData_SetB{comByte_FuncOptimize,D0}             ;                       "
0003FA64 <AmiBlitz3.ab3@31709>    Poke.b ?make_smallestcode,releasemakesmall_save    ; set the old status of make smallest code back
0003FA82 <AmiBlitz3.ab3@31710>  !asm
0003FA86 <AmiBlitz3.ab3@31711>  !stack2regs                                          ; set registers back
0003FA88 <AmiBlitz3.ab3@31712> RTS
0003FA8C <AmiBlitz3.ab3@31717> exelock              Ds.l 1
0003FA90 <AmiBlitz3.ab3@31721> includesourceline    Dc.l 0
0003FA94 <AmiBlitz3.ab3@31722> linenum              Ds.l 1
0003FA98 <AmiBlitz3.ab3@31723> globallinecount      Ds.l 1
0003FAB6 <AmiBlitz3.ab3@31724> myversion            Dc.b "\\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
0003FABA <AmiBlitz3.ab3@31725> calc_option          Dc.l 1
0003FABE <AmiBlitz3.ab3@31726> versioninformation   Dc.l $00
0003FAC2 <AmiBlitz3.ab3@31727> number_of_builds     Dc.l $00
0003FAC4 <AmiBlitz3.ab3@31728> leftsideflagmask     Ds.w 1    ;this contain the flag if pointer (1) or not
0003FAC6 <AmiBlitz3.ab3@31729> rightsideflagmask    Ds.w 1
0003FAC8 <AmiBlitz3.ab3@31731> BSS
0003FACA <AmiBlitz3.ab3@31732> debugnest            Ds.w 1
0003FACE <AmiBlitz3.ab3@31733> instringf            Ds.l 1
0003FAD2 <AmiBlitz3.ab3@31734> funcscanon           Ds.l 1
0003FAE6 <AmiBlitz3.ab3@31735> storedebugmode       Ds.b 20
0003FAEA <AmiBlitz3.ab3@31736> firsttimepref        Ds.l 1
0003FAEB <AmiBlitz3.ab3@31737> funcparloop          Ds.b 1                   ; is 1 when function calling parameter are compile
0003FAEC <AmiBlitz3.ab3@31738> blitzparloop         Ds.b 1                   ; is 1 when blitzlib calling parameters are compile
0003FAEE <AmiBlitz3.ab3@31739> nostringopt          Ds.w 1
0003FB6E <AmiBlitz3.ab3@31740> path2:               Ds.l 32
0003FB72 <AmiBlitz3.ab3@31741> typebase             Dc.l 0
0003FB74 <AmiBlitz3.ab3@31742> doublepeek           Dc.w 0
0003FB78 <AmiBlitz3.ab3@31743> lastoffset           Dc.l 0
0003FB7A <AmiBlitz3.ab3@31744> firsttime            Dc.w 0
0003FB7E <AmiBlitz3.ab3@31745> lastdestpointer      Dc.l 0
0003FB82 <AmiBlitz3.ab3@31746> prevwritedat         Dc.l 0
0003FB86 <AmiBlitz3.ab3@31747> lastsourceline       Dc.l 0
0003FB8A <AmiBlitz3.ab3@31748> lastwritedat         Dc.l 0
0003FB8C <AmiBlitz3.ab3@31749> makeexec             Dc.w 0
0003FB8E <AmiBlitz3.ab3@31750> makeexec_remember    Dc.w 0
0003FB92 <AmiBlitz3.ab3@31751> sharebase            Ds.l 1
0003FB96 <AmiBlitz3.ab3@31752> tempa7               Ds.l 1
0003FB98 <AmiBlitz3.ab3@31753> incnif               Ds.w 1
0003FB9C <AmiBlitz3.ab3@31754> tempstore            Ds.l 1
0003FBA0 <AmiBlitz3.ab3@31755> result               Ds.l 1
0003FBA2 <AmiBlitz3.ab3@31756> automode             Ds.w 1
0003FBA4 <AmiBlitz3.ab3@31757> stackcorrect         Ds.w 1
0003FBA6 <AmiBlitz3.ab3@31758> formode              Ds.w 1
0003FBAA <AmiBlitz3.ab3@31759> limitregs            Ds.l 1
0003FBAC <AmiBlitz3.ab3@31760> onestep              Ds.w 1
0003FBB0 <AmiBlitz3.ab3@31761> reqmode              Ds.l 1
0003FC50 <AmiBlitz3.ab3@31762> inctab               Ds.l 40
0003FC52 <AmiBlitz3.ab3@31763> funcoptimize_deprecated  Ds.w 1 ; deprecated, see comByte_FuncOptimize ; Wanderer
0003FC56 <AmiBlitz3.ab3@31764> includeline          Ds.l 1
0003FC5A <AmiBlitz3.ab3@31765> morememadd           Ds.l 1
0003FC5C <AmiBlitz3.ab3@31766> objectcount          Ds.w 1
0003FC60 <AmiBlitz3.ab3@31767> savefuncspace        Ds.l 1
0003FC64 <AmiBlitz3.ab3@31768> lasttrap1            Ds.l 1
0003FC68 <AmiBlitz3.ab3@31769> currentfunccall      Ds.l 1
0003FC69 <AmiBlitz3.ab3@31770> skipfunc             Ds.b 1
0003FC6A <AmiBlitz3.ab3@31771> resdisable           Ds.b 1
0003FC6B <AmiBlitz3.ab3@31772> skiptoggle           Ds.b 1
0003FC6C <AmiBlitz3.ab3@31773> developobject        Ds.b 1
0003FC6E <AmiBlitz3.ab3@31774> iniffcommand         Ds.w 1
0003FC70 <AmiBlitz3.ab3@31775> startoffsetmore      Ds.w 1
0003FC72 <AmiBlitz3.ab3@31776> olddebugmode         Ds.w 1
0003FC76 <AmiBlitz3.ab3@31777> fpucodeglobal        Ds.l 1
0003FC7A <AmiBlitz3.ab3@31778> fpucodelocal         Ds.l 1
0003FC7E <AmiBlitz3.ab3@31779> maxregs              Ds.l 1
0003FC82 <AmiBlitz3.ab3@31780> fpucode              Ds.l 1
0003FC84 <AmiBlitz3.ab3@31781> firstmline           Ds.w 1
0003FCC4 <AmiBlitz3.ab3@31782> regtable             Ds.l 16
0003FCC6 <AmiBlitz3.ab3@31783> exdebug              Ds.w 1
0003FCC8 <AmiBlitz3.ab3@31784> a2offset2            Ds.w 1
0003FCCC <AmiBlitz3.ab3@31785> parnumtemp           Ds.l 1
0003FCCD <AmiBlitz3.ab3@31786> doimmediate          Ds.b 1
0003FCCE <AmiBlitz3.ab3@31787> notypecheck          Ds.b 1
0003FCD0 <AmiBlitz3.ab3@31788> vartype              Ds.w 1
0003FCD1 <AmiBlitz3.ab3@31789> peekaddrsize         Ds.b 1
0003FCD2 <AmiBlitz3.ab3@31790> declare2             Ds.b 1
0003FCD4 <AmiBlitz3.ab3@31791> parameternum         Ds.w 1
0003FCD8 <AmiBlitz3.ab3@31792> lasttoken            Ds.l 1
0003FCDA <AmiBlitz3.ab3@31793> newvariable          Ds.w 1
0003FCDB <AmiBlitz3.ab3@31794> declare              Ds.b 1
0003FCDC <AmiBlitz3.ab3@31795> typecheck            Ds.b 1
0003FCDD <AmiBlitz3.ab3@31796> nowdeclare           Ds.b 1
0003FCDE <AmiBlitz3.ab3@31797> dimkeep              Ds.b 1
0003FCDF <AmiBlitz3.ab3@31798> a4a5store            Ds.b 1
0003FCE0 <AmiBlitz3.ab3@31799> ___freetouse         Ds.b 1
0003FCE4 <AmiBlitz3.ab3@31800> firstiffstore        Ds.l 1
0003FCE8 <AmiBlitz3.ab3@31801> destpointer2         Ds.l 1
0003FCEC <AmiBlitz3.ab3@31802> stackaddr            Ds.l 1
0003FDF0 <AmiBlitz3.ab3@31803> allowtab             Ds.b 260
0003FEF0 <AmiBlitz3.ab3@31804> templine             Ds.b 256
0003FEF2 <AmiBlitz3.ab3@31805> thenmode             Ds.w 1
0003FEF4 <AmiBlitz3.ab3@31806> temp                 Ds.w 1
0003FEF6 <AmiBlitz3.ab3@31807> tempregnum           Ds.w 1
0003FEFA <AmiBlitz3.ab3@31809> numlines2            Ds.l 1
0003FEFE <AmiBlitz3.ab3@31810> numlines             Ds.l 1
0003FF00 <AmiBlitz3.ab3@31811> exmac                Ds.w 1
0003FF02 <AmiBlitz3.ab3@31812> returncode           Ds.w 1
0003FF06 <AmiBlitz3.ab3@31813> fp0iff               Ds.l 1
0003FF0A <AmiBlitz3.ab3@31814> fp0addr              Ds.l 1
0003FF0C <AmiBlitz3.ab3@31815> fp0mode              Ds.w 1
0003FF0E <AmiBlitz3.ab3@31816> fp0var               Ds.w 1
0003FF10 <AmiBlitz3.ab3@31817> fastfunc             Ds.w 1
0003FF12 <AmiBlitz3.ab3@31818> retmode              Ds.w 1
0003FF14 <AmiBlitz3.ab3@31819> parnum               Ds.w 1
0003FF16 <AmiBlitz3.ab3@31820> regmask              Ds.w 1
0003FF18 <AmiBlitz3.ab3@31821> regnumfunc           Ds.w 1
0003FF1A <AmiBlitz3.ab3@31822> libmode              Ds.w 1
0003FF1E <AmiBlitz3.ab3@31823> oldline              Ds.l 1
0003FF22 <AmiBlitz3.ab3@31824> sourceline3          Ds.l 1
0003FFEA <AmiBlitz3.ab3@31825> debugstore           Ds.b 200
0003FFEE <AmiBlitz3.ab3@31826> deststore            Ds.l 1
0003FFF2 <AmiBlitz3.ab3@31828> loada                Ds.l 1
0003FFF6 <AmiBlitz3.ab3@31830> currtype             Ds.l 1
0003FFFA <AmiBlitz3.ab3@31831> arrayoffset          Ds.l 1
0003FFFE <AmiBlitz3.ab3@31832> lastlabel            Ds.l 1
00040002 <AmiBlitz3.ab3@31833> curtemplabel         Ds.l 1
00040006 <AmiBlitz3.ab3@31834> sourceline2          Ds.l 1
00040106 <AmiBlitz3.ab3@31835> chartab              Ds.b 256
0004017E <AmiBlitz3.ab3@31836> tempspace            Ds.b 120
000C018E <AmiBlitz3.ab3@31837> instrtab             Ds.l 65538*2
000C818E <AmiBlitz3.ab3@31839> labelhash            Ds.l 8192                             ;-bssstore clear every compile pass
000E8192 <AmiBlitz3.ab3@31840> replacedat           Ds.w 65538
000F0192 <AmiBlitz3.ab3@31841> variablehash         Ds.l 8192
000F0196 <AmiBlitz3.ab3@31842> newinitaddr          Ds.l 1
000F019A <AmiBlitz3.ab3@31843> realbssend           Ds.l 1
000F019C <AmiBlitz3.ab3@31844> saved0               Ds.w 1
000F021C <AmiBlitz3.ab3@31845> lastpath             Ds.b 128
000F029C <AmiBlitz3.ab3@31846> lastpath2            Ds.b 128
000F0364 <AmiBlitz3.ab3@31847> fpustackbase         Ds.w 100
000F0368 <AmiBlitz3.ab3@31848> 
000F036A <AmiBlitz3.ab3@31849> isconstantvalue      Dc.w 0  ; contain a type (1-7) if a constant expression is used as a Parameter or on right side of =
000F036E <AmiBlitz3.ab3@31850> lastfunction         Dc.l 0  ; the address of the function in the Parameter or rght side of =
000F0372 <AmiBlitz3.ab3@31851> leftsidetype         Dc.l 0  ;this contain the address of the type from the left side of the variable assign
000F0376 <AmiBlitz3.ab3@31852> rightsidetype        Dc.l 0  ; same as above but right side
000F037A <AmiBlitz3.ab3@31855> trap15temp           Ds.l 1
000F037E <AmiBlitz3.ab3@31856> trap15temp2          Ds.l 1
000F0382 <AmiBlitz3.ab3@31857> templibend           Ds.l 1
000F0386 <AmiBlitz3.ab3@31858> tempdata1start       Ds.l 1
000F038A <AmiBlitz3.ab3@31859> stacktrack           Ds.l 1
000F038E <AmiBlitz3.ab3@31860> pad                  Ds.l 1
000F048E <AmiBlitz3.ab3@31861> includetemp          Ds.b 256
000F0E8E <AmiBlitz3.ab3@31862> includetemp2         Ds.b 256*10
000F0E90 <AmiBlitz3.ab3@31863> funccall             Ds.w 1
000F0E94 <AmiBlitz3.ab3@31866> ptr_resfile          Ds.l 1
000F0E96 <AmiBlitz3.ab3@31867> CalculatorButtonBinFlag:    Ds.w 1
000F0E98 <AmiBlitz3.ab3@31868> CalculatorButtonDecFlag:    Ds.w 1
000F0E9C <AmiBlitz3.ab3@31869> ped_startup_addr:    Ds.l 1
000F0E9D <AmiBlitz3.ab3@31870> start_without_libs:  Ds.b 1
000F0E9E <AmiBlitz3.ab3@31871> skip_bytes:          Ds.b 1
000F0EA2 <AmiBlitz3.ab3@31872> functionreturntype   Ds.l 1  ; a temp store of it.do not read this value
000F0EA6 <AmiBlitz3.ab3@31873> beforeparameterfetch Ds.l 1
000F0EAA <AmiBlitz3.ab3@31874> typetocast           Ds.l 1
000F0EAE <AmiBlitz3.ab3@31875> errorcounter         Ds.l 1
000F0EAF <AmiBlitz3.ab3@31876> iserror              Ds.b 1
000F0EB0 <AmiBlitz3.ab3@31877> MorphOS:             Ds.b 1 ; added to be able to select the cacheclear function 0=AOS, 1=MorphOS  tomsmart1
000F0EB4 <AmiBlitz3.ab3@31880> CLIMode:             Dc.l 0
000F0EB8 <AmiBlitz3.ab3@31881> XTRAEndPadBytes:     Dc.l 0                             ; 4 fill/pad/termination bytes for the xtra write function  tomsmart1
000F0EBC <AmiBlitz3.ab3@31882> maxerrorcount:       Ds.l 1                             ; added to make it changeable in CLI Mode tomsmart1
