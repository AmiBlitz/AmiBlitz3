00000008 <AmiBlitz3.ab3@0> 
00000014 <AmiBlitz3.ab3@43> optimize 5                               ; don't use FPU (opt. 4)
00000076 <AmiBlitz3.ab3@64> !initasm                                 ; some initial mumbo jumbo
000000A0 <AmiBlitz3.ab3@65> !basic
000000AC <AmiBlitz3.ab3@70> cli_verbose = -1
000000B2 <AmiBlitz3.ab3@71> CLIMode     = False
000000C8 <AmiBlitz3.ab3@72> MaxLen cli_tempstr.s = 1024
000000E4 <AmiBlitz3.ab3@73> GetCurrentDirName_ &cli_tempstr,1024  ; get the current dir to restore it on exit
0000010E <AmiBlitz3.ab3@74> cli_path.s = Peek.s(&cli_tempstr)
0000010E <library_offsets.ab3@1> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <AmiBlitz3.ab3@78> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <dos.include.ab3@1> XINCLUDE "dos.include.ab3"
0000010E <error.include.ab3@1> XINCLUDE "dos.include.ab3"
00000146 <error.include.ab3@62> XINCLUDE "dos.include.ab3"
0000016E <error.include.ab3@63> XINCLUDE "dos.include.ab3"
00000196 <error.include.ab3@64> XINCLUDE "dos.include.ab3"
000001BE <error.include.ab3@65> XINCLUDE "dos.include.ab3"
000001C4 <error.include.ab3@66> XINCLUDE "dos.include.ab3"
000001F8 <error.include.ab3@67> XINCLUDE "dos.include.ab3"
0000022C <error.include.ab3@68> XINCLUDE "dos.include.ab3"
00000260 <error.include.ab3@69> XINCLUDE "dos.include.ab3"
0000027C <error.include.ab3@73> XINCLUDE "dos.include.ab3"
00000296 <error.include.ab3@99> XINCLUDE "dos.include.ab3"
000002A2 <error.include.ab3@101> XINCLUDE "dos.include.ab3"
000002A6 <error.include.ab3@102> XINCLUDE "dos.include.ab3"
000002B4 <error.include.ab3@104> XINCLUDE "dos.include.ab3"
000002F6 <error.include.ab3@124> XINCLUDE "dos.include.ab3"
0000037A <error.include.ab3@126> XINCLUDE "dos.include.ab3"
000003E6 <error.include.ab3@127> XINCLUDE "dos.include.ab3"
00000400 <error.include.ab3@129> XINCLUDE "dos.include.ab3"
00000438 <error.include.ab3@130> XINCLUDE "dos.include.ab3"
00000498 <error.include.ab3@131> XINCLUDE "dos.include.ab3"
000004A6 <error.include.ab3@133> XINCLUDE "dos.include.ab3"
000004B4 <error.include.ab3@134> XINCLUDE "dos.include.ab3"
000004C2 <error.include.ab3@135> XINCLUDE "dos.include.ab3"
000004D0 <error.include.ab3@136> XINCLUDE "dos.include.ab3"
000004F8 <error.include.ab3@137> XINCLUDE "dos.include.ab3"
00000506 <error.include.ab3@138> XINCLUDE "dos.include.ab3"
0000050E <error.include.ab3@139> XINCLUDE "dos.include.ab3"
00000540 <error.include.ab3@141> XINCLUDE "dos.include.ab3"
0000055A <error.include.ab3@146> XINCLUDE "dos.include.ab3"
00000592 <error.include.ab3@147> XINCLUDE "dos.include.ab3"
00000598 <error.include.ab3@148> XINCLUDE "dos.include.ab3"
000005DC <error.include.ab3@149> XINCLUDE "dos.include.ab3"
00000624 <error.include.ab3@150> XINCLUDE "dos.include.ab3"
0000062E <error.include.ab3@154> XINCLUDE "dos.include.ab3"
00000648 <error.include.ab3@156> XINCLUDE "dos.include.ab3"
00000692 <error.include.ab3@195> XINCLUDE "dos.include.ab3"
0000069A <error.include.ab3@197> XINCLUDE "dos.include.ab3"
00000706 <error.include.ab3@198> XINCLUDE "dos.include.ab3"
00000728 <error.include.ab3@199> XINCLUDE "dos.include.ab3"
00000788 <error.include.ab3@200> XINCLUDE "dos.include.ab3"
00000796 <error.include.ab3@202> XINCLUDE "dos.include.ab3"
000007A4 <error.include.ab3@203> XINCLUDE "dos.include.ab3"
000007B2 <error.include.ab3@204> XINCLUDE "dos.include.ab3"
000007C0 <error.include.ab3@205> XINCLUDE "dos.include.ab3"
00000820 <error.include.ab3@206> XINCLUDE "dos.include.ab3"
0000082E <error.include.ab3@207> XINCLUDE "dos.include.ab3"
00000864 <error.include.ab3@210> XINCLUDE "dos.include.ab3"
0000086E <error.include.ab3@214> XINCLUDE "dos.include.ab3"
0000088A <error.include.ab3@215> XINCLUDE "dos.include.ab3"
0000088A <multilist.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <strptr.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <useful.include.ab3@1> XINCLUDE "dos.include.ab3"
000008B8 <useful.include.ab3@286> XINCLUDE "dos.include.ab3"
000008C2 <useful.include.ab3@287> XINCLUDE "dos.include.ab3"
000008D6 <useful.include.ab3@288> XINCLUDE "dos.include.ab3"
000008DE <useful.include.ab3@289> XINCLUDE "dos.include.ab3"
00000906 <useful.include.ab3@290> XINCLUDE "dos.include.ab3"
0000092C <useful.include.ab3@291> XINCLUDE "dos.include.ab3"
0000094C <useful.include.ab3@294> XINCLUDE "dos.include.ab3"
0000095A <useful.include.ab3@295> XINCLUDE "dos.include.ab3"
00000980 <useful.include.ab3@296> XINCLUDE "dos.include.ab3"
00000988 <useful.include.ab3@298> XINCLUDE "dos.include.ab3"
00000990 <useful.include.ab3@299> XINCLUDE "dos.include.ab3"
00000996 <useful.include.ab3@300> XINCLUDE "dos.include.ab3"
000009B2 <useful.include.ab3@301> XINCLUDE "dos.include.ab3"
000009D6 <useful.include.ab3@302> XINCLUDE "dos.include.ab3"
000009EA <useful.include.ab3@303> XINCLUDE "dos.include.ab3"
000009F0 <useful.include.ab3@304> XINCLUDE "dos.include.ab3"
00000A3A <useful.include.ab3@305> XINCLUDE "dos.include.ab3"
00000A3C <useful.include.ab3@306> XINCLUDE "dos.include.ab3"
00000A4A <useful.include.ab3@308> XINCLUDE "dos.include.ab3"
00000A6A <useful.include.ab3@310> XINCLUDE "dos.include.ab3"
00000AC8 <useful.include.ab3@311> XINCLUDE "dos.include.ab3"
00000ACE <useful.include.ab3@312> XINCLUDE "dos.include.ab3"
00000ADC <useful.include.ab3@313> XINCLUDE "dos.include.ab3"
00000AF0 <useful.include.ab3@314> XINCLUDE "dos.include.ab3"
00000B02 <useful.include.ab3@315> XINCLUDE "dos.include.ab3"
00000B10 <useful.include.ab3@316> XINCLUDE "dos.include.ab3"
00000B16 <useful.include.ab3@317> XINCLUDE "dos.include.ab3"
00000B22 <useful.include.ab3@318> XINCLUDE "dos.include.ab3"
00000B36 <useful.include.ab3@321> XINCLUDE "dos.include.ab3"
00000B4A <useful.include.ab3@322> XINCLUDE "dos.include.ab3"
00000B5C <useful.include.ab3@323> XINCLUDE "dos.include.ab3"
00000B6A <useful.include.ab3@324> XINCLUDE "dos.include.ab3"
00000B88 <useful.include.ab3@325> XINCLUDE "dos.include.ab3"
00000B8E <useful.include.ab3@326> XINCLUDE "dos.include.ab3"
00000BA2 <useful.include.ab3@330> XINCLUDE "dos.include.ab3"
00000BAC <useful.include.ab3@331> XINCLUDE "dos.include.ab3"
00000BB4 <useful.include.ab3@332> XINCLUDE "dos.include.ab3"
00000BD2 <useful.include.ab3@333> XINCLUDE "dos.include.ab3"
00000BD8 <useful.include.ab3@334> XINCLUDE "dos.include.ab3"
00000C04 <useful.include.ab3@335> XINCLUDE "dos.include.ab3"
00000C0A <useful.include.ab3@337> XINCLUDE "dos.include.ab3"
00000C1C <useful.include.ab3@338> XINCLUDE "dos.include.ab3"
00000C34 <useful.include.ab3@339> XINCLUDE "dos.include.ab3"
00000C4C <useful.include.ab3@340> XINCLUDE "dos.include.ab3"
00000C6A <useful.include.ab3@341> XINCLUDE "dos.include.ab3"
00000C6C <useful.include.ab3@343> XINCLUDE "dos.include.ab3"
00000C7A <useful.include.ab3@344> XINCLUDE "dos.include.ab3"
00000CA0 <useful.include.ab3@345> XINCLUDE "dos.include.ab3"
00000D34 <useful.include.ab3@346> XINCLUDE "dos.include.ab3"
00000D42 <useful.include.ab3@348> XINCLUDE "dos.include.ab3"
00000D48 <useful.include.ab3@349> XINCLUDE "dos.include.ab3"
00000D72 <useful.include.ab3@350> XINCLUDE "dos.include.ab3"
00000D90 <useful.include.ab3@351> XINCLUDE "dos.include.ab3"
00000D90 <strptr.include.ab3@37> XINCLUDE "dos.include.ab3"
00000DAA <strptr.include.ab3@96> XINCLUDE "dos.include.ab3"
00000DB4 <strptr.include.ab3@97> XINCLUDE "dos.include.ab3"
00000DFC <strptr.include.ab3@98> XINCLUDE "dos.include.ab3"
00000E00 <strptr.include.ab3@100> XINCLUDE "dos.include.ab3"
00000E2E <strptr.include.ab3@197> XINCLUDE "dos.include.ab3"
00000E38 <strptr.include.ab3@198> XINCLUDE "dos.include.ab3"
00000E80 <strptr.include.ab3@199> XINCLUDE "dos.include.ab3"
00000E94 <strptr.include.ab3@200> XINCLUDE "dos.include.ab3"
00000EA6 <strptr.include.ab3@201> XINCLUDE "dos.include.ab3"
00000ECA <strptr.include.ab3@205> XINCLUDE "dos.include.ab3"
00000ED4 <strptr.include.ab3@208> XINCLUDE "dos.include.ab3"
00000EE2 <strptr.include.ab3@209> XINCLUDE "dos.include.ab3"
00000EEC <strptr.include.ab3@210> XINCLUDE "dos.include.ab3"
00000F14 <strptr.include.ab3@211> XINCLUDE "dos.include.ab3"
00000F2E <strptr.include.ab3@212> XINCLUDE "dos.include.ab3"
00000F46 <strptr.include.ab3@216> XINCLUDE "dos.include.ab3"
00000F60 <strptr.include.ab3@302> XINCLUDE "dos.include.ab3"
00000F6A <strptr.include.ab3@303> XINCLUDE "dos.include.ab3"
00000F78 <strptr.include.ab3@304> XINCLUDE "dos.include.ab3"
00000FAA <strptr.include.ab3@305> XINCLUDE "dos.include.ab3"
00000FC8 <strptr.include.ab3@307> XINCLUDE "dos.include.ab3"
00000FD2 <strptr.include.ab3@308> XINCLUDE "dos.include.ab3"
00000FD2 <multilist.include.ab3@44> XINCLUDE "dos.include.ab3"
00000FE8 <multilist.include.ab3@61> XINCLUDE "dos.include.ab3"
00001002 <multilist.include.ab3@406> XINCLUDE "dos.include.ab3"
0000100C <multilist.include.ab3@407> XINCLUDE "dos.include.ab3"
0000102E <multilist.include.ab3@408> XINCLUDE "dos.include.ab3"
00001052 <multilist.include.ab3@409> XINCLUDE "dos.include.ab3"
00001064 <multilist.include.ab3@410> XINCLUDE "dos.include.ab3"
0000107C <multilist.include.ab3@411> XINCLUDE "dos.include.ab3"
00001090 <multilist.include.ab3@412> XINCLUDE "dos.include.ab3"
000010A2 <multilist.include.ab3@415> XINCLUDE "dos.include.ab3"
000010B2 <multilist.include.ab3@416> XINCLUDE "dos.include.ab3"
000010B8 <multilist.include.ab3@417> XINCLUDE "dos.include.ab3"
000010C8 <multilist.include.ab3@418> XINCLUDE "dos.include.ab3"
000010D8 <multilist.include.ab3@419> XINCLUDE "dos.include.ab3"
000010F2 <multilist.include.ab3@420> XINCLUDE "dos.include.ab3"
000010F6 <multilist.include.ab3@422> XINCLUDE "dos.include.ab3"
00001110 <multilist.include.ab3@585> XINCLUDE "dos.include.ab3"
00001140 <multilist.include.ab3@586> XINCLUDE "dos.include.ab3"
0000114A <multilist.include.ab3@588> XINCLUDE "dos.include.ab3"
00001154 <multilist.include.ab3@589> XINCLUDE "dos.include.ab3"
00001176 <multilist.include.ab3@590> XINCLUDE "dos.include.ab3"
0000119A <multilist.include.ab3@591> XINCLUDE "dos.include.ab3"
000011AC <multilist.include.ab3@592> XINCLUDE "dos.include.ab3"
000011C4 <multilist.include.ab3@593> XINCLUDE "dos.include.ab3"
000011D8 <multilist.include.ab3@594> XINCLUDE "dos.include.ab3"
000011EA <multilist.include.ab3@597> XINCLUDE "dos.include.ab3"
000011FA <multilist.include.ab3@598> XINCLUDE "dos.include.ab3"
00001200 <multilist.include.ab3@599> XINCLUDE "dos.include.ab3"
00001210 <multilist.include.ab3@600> XINCLUDE "dos.include.ab3"
00001220 <multilist.include.ab3@601> XINCLUDE "dos.include.ab3"
0000123A <multilist.include.ab3@602> XINCLUDE "dos.include.ab3"
00001240 <multilist.include.ab3@603> XINCLUDE "dos.include.ab3"
00001246 <multilist.include.ab3@604> XINCLUDE "dos.include.ab3"
0000124A <multilist.include.ab3@605> XINCLUDE "dos.include.ab3"
00001264 <multilist.include.ab3@713> XINCLUDE "dos.include.ab3"
0000126C <multilist.include.ab3@714> XINCLUDE "dos.include.ab3"
00001276 <multilist.include.ab3@715> XINCLUDE "dos.include.ab3"
0000128C <multilist.include.ab3@716> XINCLUDE "dos.include.ab3"
000012A0 <multilist.include.ab3@717> XINCLUDE "dos.include.ab3"
000012C4 <multilist.include.ab3@718> XINCLUDE "dos.include.ab3"
000012D2 <multilist.include.ab3@721> XINCLUDE "dos.include.ab3"
000012DC <multilist.include.ab3@722> XINCLUDE "dos.include.ab3"
000012E2 <multilist.include.ab3@723> XINCLUDE "dos.include.ab3"
000012EC <multilist.include.ab3@724> XINCLUDE "dos.include.ab3"
000012F2 <multilist.include.ab3@725> XINCLUDE "dos.include.ab3"
00001310 <multilist.include.ab3@742> XINCLUDE "dos.include.ab3"
00001318 <multilist.include.ab3@743> XINCLUDE "dos.include.ab3"
00001322 <multilist.include.ab3@744> XINCLUDE "dos.include.ab3"
00001340 <multilist.include.ab3@745> XINCLUDE "dos.include.ab3"
00001356 <multilist.include.ab3@746> XINCLUDE "dos.include.ab3"
0000136A <multilist.include.ab3@747> XINCLUDE "dos.include.ab3"
0000139E <multilist.include.ab3@748> XINCLUDE "dos.include.ab3"
000013AC <multilist.include.ab3@751> XINCLUDE "dos.include.ab3"
000013B6 <multilist.include.ab3@752> XINCLUDE "dos.include.ab3"
000013BC <multilist.include.ab3@753> XINCLUDE "dos.include.ab3"
000013C6 <multilist.include.ab3@754> XINCLUDE "dos.include.ab3"
000013CA <multilist.include.ab3@756> XINCLUDE "dos.include.ab3"
000013D0 <multilist.include.ab3@757> XINCLUDE "dos.include.ab3"
000013EA <multilist.include.ab3@795> XINCLUDE "dos.include.ab3"
000013F4 <multilist.include.ab3@796> XINCLUDE "dos.include.ab3"
000013FE <multilist.include.ab3@797> XINCLUDE "dos.include.ab3"
00001414 <multilist.include.ab3@798> XINCLUDE "dos.include.ab3"
00001424 <multilist.include.ab3@799> XINCLUDE "dos.include.ab3"
0000142E <multilist.include.ab3@801> XINCLUDE "dos.include.ab3"
00001434 <multilist.include.ab3@802> XINCLUDE "dos.include.ab3"
00001438 <multilist.include.ab3@803> XINCLUDE "dos.include.ab3"
0000145A <multilist.include.ab3@821> XINCLUDE "dos.include.ab3"
00001462 <multilist.include.ab3@822> XINCLUDE "dos.include.ab3"
0000147C <multilist.include.ab3@823> XINCLUDE "dos.include.ab3"
00001486 <multilist.include.ab3@824> XINCLUDE "dos.include.ab3"
0000149C <multilist.include.ab3@825> XINCLUDE "dos.include.ab3"
000014B0 <multilist.include.ab3@826> XINCLUDE "dos.include.ab3"
00001506 <multilist.include.ab3@827> XINCLUDE "dos.include.ab3"
00001540 <multilist.include.ab3@828> XINCLUDE "dos.include.ab3"
00001552 <multilist.include.ab3@829> XINCLUDE "dos.include.ab3"
00001574 <multilist.include.ab3@830> XINCLUDE "dos.include.ab3"
0000157A <multilist.include.ab3@831> XINCLUDE "dos.include.ab3"
000015D0 <multilist.include.ab3@832> XINCLUDE "dos.include.ab3"
0000160A <multilist.include.ab3@833> XINCLUDE "dos.include.ab3"
00001610 <multilist.include.ab3@835> XINCLUDE "dos.include.ab3"
0000164A <multilist.include.ab3@836> XINCLUDE "dos.include.ab3"
00001684 <multilist.include.ab3@837> XINCLUDE "dos.include.ab3"
00001696 <multilist.include.ab3@839> XINCLUDE "dos.include.ab3"
000016A0 <multilist.include.ab3@840> XINCLUDE "dos.include.ab3"
000016A6 <multilist.include.ab3@841> XINCLUDE "dos.include.ab3"
000016B0 <multilist.include.ab3@842> XINCLUDE "dos.include.ab3"
000016C4 <multilist.include.ab3@843> XINCLUDE "dos.include.ab3"
0000170A <multilist.include.ab3@870> XINCLUDE "dos.include.ab3"
00001712 <multilist.include.ab3@871> XINCLUDE "dos.include.ab3"
00001730 <multilist.include.ab3@872> XINCLUDE "dos.include.ab3"
0000175C <multilist.include.ab3@873> XINCLUDE "dos.include.ab3"
0000177A <multilist.include.ab3@874> XINCLUDE "dos.include.ab3"
00001794 <multilist.include.ab3@875> XINCLUDE "dos.include.ab3"
000017AE <multilist.include.ab3@876> XINCLUDE "dos.include.ab3"
00001830 <multilist.include.ab3@877> XINCLUDE "dos.include.ab3"
00001844 <multilist.include.ab3@879> XINCLUDE "dos.include.ab3"
0000185C <multilist.include.ab3@880> XINCLUDE "dos.include.ab3"
00001862 <multilist.include.ab3@881> XINCLUDE "dos.include.ab3"
0000187A <multilist.include.ab3@882> XINCLUDE "dos.include.ab3"
00001890 <multilist.include.ab3@884> XINCLUDE "dos.include.ab3"
000018AA <multilist.include.ab3@886> XINCLUDE "dos.include.ab3"
000018BE <multilist.include.ab3@887> XINCLUDE "dos.include.ab3"
000018CC <multilist.include.ab3@888> XINCLUDE "dos.include.ab3"
00001922 <multilist.include.ab3@889> XINCLUDE "dos.include.ab3"
00001958 <multilist.include.ab3@890> XINCLUDE "dos.include.ab3"
00001988 <multilist.include.ab3@891> XINCLUDE "dos.include.ab3"
00001A10 <multilist.include.ab3@893> XINCLUDE "dos.include.ab3"
00001A16 <multilist.include.ab3@894> XINCLUDE "dos.include.ab3"
00001A24 <multilist.include.ab3@895> XINCLUDE "dos.include.ab3"
00001A7A <multilist.include.ab3@896> XINCLUDE "dos.include.ab3"
00001AB0 <multilist.include.ab3@897> XINCLUDE "dos.include.ab3"
00001AE0 <multilist.include.ab3@898> XINCLUDE "dos.include.ab3"
00001AE6 <multilist.include.ab3@901> XINCLUDE "dos.include.ab3"
00001B00 <multilist.include.ab3@902> XINCLUDE "dos.include.ab3"
00001B0E <multilist.include.ab3@903> XINCLUDE "dos.include.ab3"
00001B48 <multilist.include.ab3@904> XINCLUDE "dos.include.ab3"
00001B7E <multilist.include.ab3@905> XINCLUDE "dos.include.ab3"
00001BAE <multilist.include.ab3@906> XINCLUDE "dos.include.ab3"
00001BBC <multilist.include.ab3@909> XINCLUDE "dos.include.ab3"
00001BC6 <multilist.include.ab3@910> XINCLUDE "dos.include.ab3"
00001BCC <multilist.include.ab3@911> XINCLUDE "dos.include.ab3"
00001BD6 <multilist.include.ab3@912> XINCLUDE "dos.include.ab3"
00001BEA <multilist.include.ab3@913> XINCLUDE "dos.include.ab3"
00001BEA <dos.include.ab3@57> XINCLUDE "dos.include.ab3"
00001BEA <wbstart.include.ab3@1> XINCLUDE "dos.include.ab3"
00001C00 <wbstart.include.ab3@58> XINCLUDE "dos.include.ab3"
00001C0A <wbstart.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C22 <wbstart.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C24 <wbstart.include.ab3@63> XINCLUDE "dos.include.ab3"
00001C52 <wbstart.include.ab3@64> XINCLUDE "dos.include.ab3"
00001C52 <dos.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C68 <dos.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C70 <dos.include.ab3@79> XINCLUDE "dos.include.ab3"
00001C78 <dos.include.ab3@80> XINCLUDE "dos.include.ab3"
00001CA0 <dos.include.ab3@81> XINCLUDE "dos.include.ab3"
00001CA8 <dos.include.ab3@82> XINCLUDE "dos.include.ab3"
00001CD0 <dos.include.ab3@83> XINCLUDE "dos.include.ab3"
00001CF8 <dos.include.ab3@84> XINCLUDE "dos.include.ab3"
00001D20 <dos.include.ab3@85> XINCLUDE "dos.include.ab3"
00001D28 <dos.include.ab3@86> XINCLUDE "dos.include.ab3"
00001D30 <dos.include.ab3@87> XINCLUDE "dos.include.ab3"
00001D38 <dos.include.ab3@88> XINCLUDE "dos.include.ab3"
00001D40 <dos.include.ab3@89> XINCLUDE "dos.include.ab3"
00001D48 <dos.include.ab3@90> XINCLUDE "dos.include.ab3"
00001D50 <dos.include.ab3@91> XINCLUDE "dos.include.ab3"
00001D58 <dos.include.ab3@92> XINCLUDE "dos.include.ab3"
00001D60 <dos.include.ab3@93> XINCLUDE "dos.include.ab3"
00001D68 <dos.include.ab3@94> XINCLUDE "dos.include.ab3"
00001D88 <dos.include.ab3@95> XINCLUDE "dos.include.ab3"
00001D90 <dos.include.ab3@96> XINCLUDE "dos.include.ab3"
00001D98 <dos.include.ab3@97> XINCLUDE "dos.include.ab3"
00001DC0 <dos.include.ab3@99> XINCLUDE "dos.include.ab3"
00001DD6 <dos.include.ab3@130> XINCLUDE "dos.include.ab3"
00001DE2 <dos.include.ab3@131> XINCLUDE "dos.include.ab3"
00001DE6 <dos.include.ab3@132> XINCLUDE "dos.include.ab3"
00001DFC <dos.include.ab3@145> XINCLUDE "dos.include.ab3"
00001E16 <dos.include.ab3@146> XINCLUDE "dos.include.ab3"
00001E2C <dos.include.ab3@147> XINCLUDE "dos.include.ab3"
00001E56 <dos.include.ab3@148> XINCLUDE "dos.include.ab3"
00001E60 <dos.include.ab3@149> XINCLUDE "dos.include.ab3"
00001E66 <dos.include.ab3@150> XINCLUDE "dos.include.ab3"
00001E7C <dos.include.ab3@163> XINCLUDE "dos.include.ab3"
00001E96 <dos.include.ab3@164> XINCLUDE "dos.include.ab3"
00001EAC <dos.include.ab3@165> XINCLUDE "dos.include.ab3"
00001ED6 <dos.include.ab3@166> XINCLUDE "dos.include.ab3"
00001EE0 <dos.include.ab3@167> XINCLUDE "dos.include.ab3"
00001EE6 <dos.include.ab3@168> XINCLUDE "dos.include.ab3"
00001F10 <dos.include.ab3@184> XINCLUDE "dos.include.ab3"
00001F1C <dos.include.ab3@185> XINCLUDE "dos.include.ab3"
00001F3C <dos.include.ab3@186> XINCLUDE "dos.include.ab3"
00001F46 <dos.include.ab3@187> XINCLUDE "dos.include.ab3"
00001F56 <dos.include.ab3@188> XINCLUDE "dos.include.ab3"
00001F66 <dos.include.ab3@189> XINCLUDE "dos.include.ab3"
00001F70 <dos.include.ab3@191> XINCLUDE "dos.include.ab3"
00001F8A <dos.include.ab3@192> XINCLUDE "dos.include.ab3"
00001FA0 <dos.include.ab3@430> XINCLUDE "dos.include.ab3"
00001FB2 <dos.include.ab3@432> XINCLUDE "dos.include.ab3"
0000202C <dos.include.ab3@433> XINCLUDE "dos.include.ab3"
00002056 <dos.include.ab3@434> XINCLUDE "dos.include.ab3"
0000206E <dos.include.ab3@435> XINCLUDE "dos.include.ab3"
00002084 <dos.include.ab3@461> XINCLUDE "dos.include.ab3"
00002096 <dos.include.ab3@462> XINCLUDE "dos.include.ab3"
0000209A <dos.include.ab3@463> XINCLUDE "dos.include.ab3"
000020B0 <dos.include.ab3@479> XINCLUDE "dos.include.ab3"
000020B2 <dos.include.ab3@480> XINCLUDE "dos.include.ab3"
000020EC <dos.include.ab3@541> XINCLUDE "dos.include.ab3"
00002120 <dos.include.ab3@543> XINCLUDE "dos.include.ab3"
00002146 <dos.include.ab3@544> XINCLUDE "dos.include.ab3"
00002166 <dos.include.ab3@545> XINCLUDE "dos.include.ab3"
00002186 <dos.include.ab3@546> XINCLUDE "dos.include.ab3"
000021B0 <dos.include.ab3@549> XINCLUDE "dos.include.ab3"
000021FC <dos.include.ab3@551> XINCLUDE "dos.include.ab3"
0000220E <dos.include.ab3@552> XINCLUDE "dos.include.ab3"
0000225E <dos.include.ab3@553> XINCLUDE "dos.include.ab3"
00002288 <dos.include.ab3@556> XINCLUDE "dos.include.ab3"
000022A6 <dos.include.ab3@558> XINCLUDE "dos.include.ab3"
000022D0 <dos.include.ab3@674> XINCLUDE "dos.include.ab3"
000022E6 <dos.include.ab3@675> XINCLUDE "dos.include.ab3"
000022F0 <dos.include.ab3@676> XINCLUDE "dos.include.ab3"
00002318 <dos.include.ab3@677> XINCLUDE "dos.include.ab3"
0000231E <dos.include.ab3@678> XINCLUDE "dos.include.ab3"
00002346 <dos.include.ab3@679> XINCLUDE "dos.include.ab3"
00002370 <dos.include.ab3@681> XINCLUDE "dos.include.ab3"
0000238E <dos.include.ab3@682> XINCLUDE "dos.include.ab3"
000023B8 <dos.include.ab3@705> XINCLUDE "dos.include.ab3"
00002428 <dos.include.ab3@706> XINCLUDE "dos.include.ab3"
00002452 <dos.include.ab3@707> XINCLUDE "dos.include.ab3"
00002470 <dos.include.ab3@708> XINCLUDE "dos.include.ab3"
0000249A <dos.include.ab3@743> XINCLUDE "dos.include.ab3"
000024BA <dos.include.ab3@744> XINCLUDE "dos.include.ab3"
000024E6 <dos.include.ab3@745> XINCLUDE "dos.include.ab3"
000024F0 <dos.include.ab3@746> XINCLUDE "dos.include.ab3"
0000250A <dos.include.ab3@747> XINCLUDE "dos.include.ab3"
00002534 <dos.include.ab3@894> XINCLUDE "dos.include.ab3"
000025E2 <dos.include.ab3@895> XINCLUDE "dos.include.ab3"
000025F8 <dos.include.ab3@896> XINCLUDE "dos.include.ab3"
00002602 <dos.include.ab3@897> XINCLUDE "dos.include.ab3"
0000262A <dos.include.ab3@898> XINCLUDE "dos.include.ab3"
00002634 <dos.include.ab3@899> XINCLUDE "dos.include.ab3"
0000263A <dos.include.ab3@900> XINCLUDE "dos.include.ab3"
00002640 <dos.include.ab3@901> XINCLUDE "dos.include.ab3"
00002646 <dos.include.ab3@902> XINCLUDE "dos.include.ab3"
00002658 <dos.include.ab3@904> XINCLUDE "dos.include.ab3"
00002662 <dos.include.ab3@906> XINCLUDE "dos.include.ab3"
0000267C <dos.include.ab3@907> XINCLUDE "dos.include.ab3"
000026BA <dos.include.ab3@928> XINCLUDE "dos.include.ab3"
000026C2 <dos.include.ab3@929> XINCLUDE "dos.include.ab3"
00002770 <dos.include.ab3@930> XINCLUDE "dos.include.ab3"
00002784 <dos.include.ab3@931> XINCLUDE "dos.include.ab3"
000027C6 <dos.include.ab3@932> XINCLUDE "dos.include.ab3"
000027E6 <dos.include.ab3@934> XINCLUDE "dos.include.ab3"
000027F0 <dos.include.ab3@935> XINCLUDE "dos.include.ab3"
0000280C <dos.include.ab3@936> XINCLUDE "dos.include.ab3"
00002846 <dos.include.ab3@988> XINCLUDE "dos.include.ab3"
0000284E <dos.include.ab3@989> XINCLUDE "dos.include.ab3"
000028FC <dos.include.ab3@990> XINCLUDE "dos.include.ab3"
00002932 <dos.include.ab3@991> XINCLUDE "dos.include.ab3"
00002952 <dos.include.ab3@992> XINCLUDE "dos.include.ab3"
00002970 <dos.include.ab3@993> XINCLUDE "dos.include.ab3"
00002994 <dos.include.ab3@994> XINCLUDE "dos.include.ab3"
0000299E <dos.include.ab3@996> XINCLUDE "dos.include.ab3"
000029BA <dos.include.ab3@997> XINCLUDE "dos.include.ab3"
000029F4 <dos.include.ab3@1014> XINCLUDE "dos.include.ab3"
00002AA2 <dos.include.ab3@1015> XINCLUDE "dos.include.ab3"
00002ADA <dos.include.ab3@1016> XINCLUDE "dos.include.ab3"
00002AFA <dos.include.ab3@1017> XINCLUDE "dos.include.ab3"
00002B00 <dos.include.ab3@1018> XINCLUDE "dos.include.ab3"
00002B20 <dos.include.ab3@1019> XINCLUDE "dos.include.ab3"
00002B2A <dos.include.ab3@1020> XINCLUDE "dos.include.ab3"
00002B44 <dos.include.ab3@1021> XINCLUDE "dos.include.ab3"
00002B5C <dos.include.ab3@1022> XINCLUDE "dos.include.ab3"
00002B66 <dos.include.ab3@1025> XINCLUDE "dos.include.ab3"
00002B82 <dos.include.ab3@1026> XINCLUDE "dos.include.ab3"
00002BAC <dos.include.ab3@1171> XINCLUDE "dos.include.ab3"
00002BBA <dos.include.ab3@1173> XINCLUDE "dos.include.ab3"
00002C80 <dos.include.ab3@1174> XINCLUDE "dos.include.ab3"
00002CAA <dos.include.ab3@1175> XINCLUDE "dos.include.ab3"
00002CD2 <dos.include.ab3@1177> XINCLUDE "dos.include.ab3"
00002CFC <dos.include.ab3@1178> XINCLUDE "dos.include.ab3"
00002D26 <dos.include.ab3@1180> XINCLUDE "dos.include.ab3"
00002D44 <dos.include.ab3@1181> XINCLUDE "dos.include.ab3"
00002D6E <dos.include.ab3@1199> XINCLUDE "dos.include.ab3"
00002DDA <dos.include.ab3@1201> XINCLUDE "dos.include.ab3"
00002E02 <dos.include.ab3@1202> XINCLUDE "dos.include.ab3"
00002E10 <dos.include.ab3@1203> XINCLUDE "dos.include.ab3"
00002E44 <dos.include.ab3@1204> XINCLUDE "dos.include.ab3"
00002E52 <dos.include.ab3@1207> XINCLUDE "dos.include.ab3"
00002E74 <dos.include.ab3@1213> XINCLUDE "dos.include.ab3"
00002E82 <dos.include.ab3@1217> XINCLUDE "dos.include.ab3"
00002EA6 <dos.include.ab3@1218> XINCLUDE "dos.include.ab3"
00002ED0 <dos.include.ab3@1219> XINCLUDE "dos.include.ab3"
00002EFA <dos.include.ab3@1225> XINCLUDE "dos.include.ab3"
00002F18 <dos.include.ab3@1226> XINCLUDE "dos.include.ab3"
00002F42 <dos.include.ab3@1298> XINCLUDE "dos.include.ab3"
00002F9A <dos.include.ab3@1299> XINCLUDE "dos.include.ab3"
00002FC4 <dos.include.ab3@1300> XINCLUDE "dos.include.ab3"
00002FE2 <dos.include.ab3@1301> XINCLUDE "dos.include.ab3"
00002FF8 <dos.include.ab3@1375> XINCLUDE "dos.include.ab3"
00002FFE <dos.include.ab3@1377> XINCLUDE "dos.include.ab3"
00003008 <dos.include.ab3@1378> XINCLUDE "dos.include.ab3"
00003012 <dos.include.ab3@1379> XINCLUDE "dos.include.ab3"
00003030 <dos.include.ab3@1382> XINCLUDE "dos.include.ab3"
00003036 <dos.include.ab3@1383> XINCLUDE "dos.include.ab3"
0000303C <dos.include.ab3@1384> XINCLUDE "dos.include.ab3"
0000304C <dos.include.ab3@1386> XINCLUDE "dos.include.ab3"
00003052 <dos.include.ab3@1387> XINCLUDE "dos.include.ab3"
0000305A <dos.include.ab3@1388> XINCLUDE "dos.include.ab3"
00003082 <dos.include.ab3@1389> XINCLUDE "dos.include.ab3"
0000308C <dos.include.ab3@1390> XINCLUDE "dos.include.ab3"
00003096 <dos.include.ab3@1392> XINCLUDE "dos.include.ab3"
000030AA <dos.include.ab3@1393> XINCLUDE "dos.include.ab3"
000030C0 <dos.include.ab3@1498> XINCLUDE "dos.include.ab3"
000030C6 <dos.include.ab3@1504> XINCLUDE "dos.include.ab3"
000030EA <dos.include.ab3@1505> XINCLUDE "dos.include.ab3"
0000310E <dos.include.ab3@1506> XINCLUDE "dos.include.ab3"
00003132 <dos.include.ab3@1507> XINCLUDE "dos.include.ab3"
00003138 <dos.include.ab3@1508> XINCLUDE "dos.include.ab3"
00003164 <dos.include.ab3@1509> XINCLUDE "dos.include.ab3"
00003166 <dos.include.ab3@1510> XINCLUDE "dos.include.ab3"
00003194 <dos.include.ab3@1511> XINCLUDE "dos.include.ab3"
000031BE <dos.include.ab3@1527> XINCLUDE "dos.include.ab3"
00003242 <dos.include.ab3@1530> XINCLUDE "dos.include.ab3"
0000330A <dos.include.ab3@1531> XINCLUDE "dos.include.ab3"
00003314 <dos.include.ab3@1533> XINCLUDE "dos.include.ab3"
0000335E <dos.include.ab3@1534> XINCLUDE "dos.include.ab3"
000033AA <dos.include.ab3@1536> XINCLUDE "dos.include.ab3"
000033E2 <dos.include.ab3@1537> XINCLUDE "dos.include.ab3"
000033F4 <dos.include.ab3@1538> XINCLUDE "dos.include.ab3"
0000340A <dos.include.ab3@1539> XINCLUDE "dos.include.ab3"
00003410 <dos.include.ab3@1540> XINCLUDE "dos.include.ab3"
00003426 <dos.include.ab3@1541> XINCLUDE "dos.include.ab3"
0000345A <dos.include.ab3@1543> XINCLUDE "dos.include.ab3"
00003460 <dos.include.ab3@1544> XINCLUDE "dos.include.ab3"
0000346A <dos.include.ab3@1546> XINCLUDE "dos.include.ab3"
00003484 <dos.include.ab3@1547> XINCLUDE "dos.include.ab3"
000034CE <dos.include.ab3@1577> XINCLUDE "dos.include.ab3"
00003504 <dos.include.ab3@1579> XINCLUDE "dos.include.ab3"
00003528 <dos.include.ab3@1580> XINCLUDE "dos.include.ab3"
00003532 <dos.include.ab3@1581> XINCLUDE "dos.include.ab3"
0000355A <dos.include.ab3@1582> XINCLUDE "dos.include.ab3"
000035A2 <dos.include.ab3@1585> XINCLUDE "dos.include.ab3"
00003678 <dos.include.ab3@1587> XINCLUDE "dos.include.ab3"
000036A2 <dos.include.ab3@1588> XINCLUDE "dos.include.ab3"
000036C2 <dos.include.ab3@1589> XINCLUDE "dos.include.ab3"
000036FC <dos.include.ab3@1608> XINCLUDE "dos.include.ab3"
00003702 <dos.include.ab3@1610> XINCLUDE "dos.include.ab3"
00003708 <dos.include.ab3@1611> XINCLUDE "dos.include.ab3"
00003710 <dos.include.ab3@1612> XINCLUDE "dos.include.ab3"
00003746 <dos.include.ab3@1613> XINCLUDE "dos.include.ab3"
00003754 <dos.include.ab3@1614> XINCLUDE "dos.include.ab3"
0000375E <dos.include.ab3@1615> XINCLUDE "dos.include.ab3"
0000378A <dos.include.ab3@1616> XINCLUDE "dos.include.ab3"
00003798 <dos.include.ab3@1617> XINCLUDE "dos.include.ab3"
000037A2 <dos.include.ab3@1618> XINCLUDE "dos.include.ab3"
000037D0 <dos.include.ab3@1620> XINCLUDE "dos.include.ab3"
0000384E <dos.include.ab3@1623> XINCLUDE "dos.include.ab3"
000038A0 <dos.include.ab3@1626> XINCLUDE "dos.include.ab3"
000038B2 <dos.include.ab3@1627> XINCLUDE "dos.include.ab3"
00003920 <dos.include.ab3@1628> XINCLUDE "dos.include.ab3"
00003926 <dos.include.ab3@1629> XINCLUDE "dos.include.ab3"
00003972 <dos.include.ab3@1630> XINCLUDE "dos.include.ab3"
00003A40 <dos.include.ab3@1634> XINCLUDE "dos.include.ab3"
00003B20 <dos.include.ab3@1635> XINCLUDE "dos.include.ab3"
00003B8C <dos.include.ab3@1637> XINCLUDE "dos.include.ab3"
00003B92 <dos.include.ab3@1638> XINCLUDE "dos.include.ab3"
00003BAE <dos.include.ab3@1639> XINCLUDE "dos.include.ab3"
00003BBC <dos.include.ab3@1642> XINCLUDE "dos.include.ab3"
00003BC2 <dos.include.ab3@1643> XINCLUDE "dos.include.ab3"
00003BD4 <dos.include.ab3@1646> XINCLUDE "dos.include.ab3"
00003BEA <dos.include.ab3@1647> XINCLUDE "dos.include.ab3"
00003BF4 <dos.include.ab3@1648> XINCLUDE "dos.include.ab3"
00003C10 <dos.include.ab3@1649> XINCLUDE "dos.include.ab3"
00003C3A <dos.include.ab3@2244> XINCLUDE "dos.include.ab3"
00003C4E <dos.include.ab3@2245> XINCLUDE "dos.include.ab3"
00003C8C <dos.include.ab3@2246> XINCLUDE "dos.include.ab3"
00003D72 <dos.include.ab3@2247> XINCLUDE "dos.include.ab3"
00003D78 <dos.include.ab3@2248> XINCLUDE "dos.include.ab3"
00003DC8 <dos.include.ab3@2249> XINCLUDE "dos.include.ab3"
00003DF2 <dos.include.ab3@2250> XINCLUDE "dos.include.ab3"
00003E10 <dos.include.ab3@2251> XINCLUDE "dos.include.ab3"
00003E3A <dos.include.ab3@2275> XINCLUDE "dos.include.ab3"
00003E4E <dos.include.ab3@2276> XINCLUDE "dos.include.ab3"
00003E8C <dos.include.ab3@2277> XINCLUDE "dos.include.ab3"
00003F72 <dos.include.ab3@2278> XINCLUDE "dos.include.ab3"
00003F78 <dos.include.ab3@2279> XINCLUDE "dos.include.ab3"
00003FEA <dos.include.ab3@2280> XINCLUDE "dos.include.ab3"
00004014 <dos.include.ab3@2281> XINCLUDE "dos.include.ab3"
00004032 <dos.include.ab3@2282> XINCLUDE "dos.include.ab3"
0000406C <dos.include.ab3@2308> XINCLUDE "dos.include.ab3"
000040A4 <dos.include.ab3@2309> XINCLUDE "dos.include.ab3"
000040FC <dos.include.ab3@2310> XINCLUDE "dos.include.ab3"
00004160 <dos.include.ab3@2311> XINCLUDE "dos.include.ab3"
0000418A <dos.include.ab3@2313> XINCLUDE "dos.include.ab3"
000041AA <dos.include.ab3@2314> XINCLUDE "dos.include.ab3"
000041D4 <dos.include.ab3@2331> XINCLUDE "dos.include.ab3"
000041DA <dos.include.ab3@2332> XINCLUDE "dos.include.ab3"
000041F0 <dos.include.ab3@2333> XINCLUDE "dos.include.ab3"
000041FA <dos.include.ab3@2334> XINCLUDE "dos.include.ab3"
00004200 <dos.include.ab3@2335> XINCLUDE "dos.include.ab3"
00004210 <dos.include.ab3@2336> XINCLUDE "dos.include.ab3"
0000421A <dos.include.ab3@2338> XINCLUDE "dos.include.ab3"
00004234 <dos.include.ab3@2339> XINCLUDE "dos.include.ab3"
00004262 <dos.include.ab3@2581> XINCLUDE "dos.include.ab3"
00004284 <dos.include.ab3@2582> XINCLUDE "dos.include.ab3"
0000428C <dos.include.ab3@2583> XINCLUDE "dos.include.ab3"
0000429A <dos.include.ab3@2584> XINCLUDE "dos.include.ab3"
000042B4 <dos.include.ab3@2586> XINCLUDE "dos.include.ab3"
000042E2 <dos.include.ab3@2605> XINCLUDE "dos.include.ab3"
000042F6 <dos.include.ab3@2606> XINCLUDE "dos.include.ab3"
0000432A <dos.include.ab3@2607> XINCLUDE "dos.include.ab3"
00004344 <dos.include.ab3@2609> XINCLUDE "dos.include.ab3"
0000434C <dos.include.ab3@2610> XINCLUDE "dos.include.ab3"
0000435A <dos.include.ab3@2611> XINCLUDE "dos.include.ab3"
00004374 <dos.include.ab3@2613> XINCLUDE "dos.include.ab3"
0000439E <dos.include.ab3@2749> XINCLUDE "dos.include.ab3"
000043AA <dos.include.ab3@2751> XINCLUDE "dos.include.ab3"
000043CA <dos.include.ab3@2752> XINCLUDE "dos.include.ab3"
000043F0 <dos.include.ab3@2753> XINCLUDE "dos.include.ab3"
0000441C <dos.include.ab3@2754> XINCLUDE "dos.include.ab3"
00004434 <dos.include.ab3@2755> XINCLUDE "dos.include.ab3"
00004442 <dos.include.ab3@2757> XINCLUDE "dos.include.ab3"
00004448 <dos.include.ab3@2758> XINCLUDE "dos.include.ab3"
00004454 <dos.include.ab3@2759> XINCLUDE "dos.include.ab3"
0000445A <dos.include.ab3@2761> XINCLUDE "dos.include.ab3"
00004466 <dos.include.ab3@2762> XINCLUDE "dos.include.ab3"
00004476 <dos.include.ab3@2764> XINCLUDE "dos.include.ab3"
0000447C <dos.include.ab3@2765> XINCLUDE "dos.include.ab3"
00004488 <dos.include.ab3@2766> XINCLUDE "dos.include.ab3"
00004492 <dos.include.ab3@2768> XINCLUDE "dos.include.ab3"
000044AC <dos.include.ab3@2769> XINCLUDE "dos.include.ab3"
000044AC <AmiBlitz3.ab3@79> XINCLUDE "dos.include.ab3"
000044BA <AmiBlitz3.ab3@81> If dos_FromCLI{}
000044C0 <AmiBlitz3.ab3@82>   CLIMode.l=True
000044CC <AmiBlitz3.ab3@83>   error_SetFlags{#error_stdout}
000044CC <common.ab3@1> XINCLUDE "/Shared/common.ab3"
000044F4 <common.ab3@49> XINCLUDE "/Shared/common.ab3"
000044FA <common.ab3@264> XINCLUDE "/Shared/common.ab3"
000044FC <common.ab3@265> XINCLUDE "/Shared/common.ab3"
0000468C <common.ab3@266> XINCLUDE "/Shared/common.ab3"
00004690 <common.ab3@267> XINCLUDE "/Shared/common.ab3"
00004694 <common.ab3@269> XINCLUDE "/Shared/common.ab3"
00004698 <common.ab3@270> XINCLUDE "/Shared/common.ab3"
0000469C <common.ab3@272> XINCLUDE "/Shared/common.ab3"
000046A0 <common.ab3@273> XINCLUDE "/Shared/common.ab3"
000046A4 <common.ab3@274> XINCLUDE "/Shared/common.ab3"
000046A8 <common.ab3@275> XINCLUDE "/Shared/common.ab3"
000046AC <common.ab3@276> XINCLUDE "/Shared/common.ab3"
000046B0 <common.ab3@277> XINCLUDE "/Shared/common.ab3"
000046B4 <common.ab3@278> XINCLUDE "/Shared/common.ab3"
000046B8 <common.ab3@279> XINCLUDE "/Shared/common.ab3"
000046BC <common.ab3@280> XINCLUDE "/Shared/common.ab3"
000046C0 <common.ab3@282> XINCLUDE "/Shared/common.ab3"
000046C4 <common.ab3@284> XINCLUDE "/Shared/common.ab3"
000046C8 <common.ab3@285> XINCLUDE "/Shared/common.ab3"
000046CC <common.ab3@286> XINCLUDE "/Shared/common.ab3"
000046D0 <common.ab3@287> XINCLUDE "/Shared/common.ab3"
000046D4 <common.ab3@288> XINCLUDE "/Shared/common.ab3"
000046D8 <common.ab3@289> XINCLUDE "/Shared/common.ab3"
000046DC <common.ab3@290> XINCLUDE "/Shared/common.ab3"
000046E0 <common.ab3@291> XINCLUDE "/Shared/common.ab3"
000046E4 <common.ab3@292> XINCLUDE "/Shared/common.ab3"
000046E8 <common.ab3@293> XINCLUDE "/Shared/common.ab3"
000046F0 <common.ab3@296> XINCLUDE "/Shared/common.ab3"
000046F4 <common.ab3@297> XINCLUDE "/Shared/common.ab3"
000046F6 <common.ab3@298> XINCLUDE "/Shared/common.ab3"
000046FA <common.ab3@299> XINCLUDE "/Shared/common.ab3"
000046FC <common.ab3@300> XINCLUDE "/Shared/common.ab3"
00004700 <common.ab3@301> XINCLUDE "/Shared/common.ab3"
00004704 <common.ab3@302> XINCLUDE "/Shared/common.ab3"
00004708 <common.ab3@303> XINCLUDE "/Shared/common.ab3"
0000470C <common.ab3@304> XINCLUDE "/Shared/common.ab3"
00004710 <common.ab3@305> XINCLUDE "/Shared/common.ab3"
00004718 <common.ab3@306> XINCLUDE "/Shared/common.ab3"
00004720 <common.ab3@307> XINCLUDE "/Shared/common.ab3"
00004724 <common.ab3@308> XINCLUDE "/Shared/common.ab3"
00004728 <common.ab3@309> XINCLUDE "/Shared/common.ab3"
0000472C <common.ab3@310> XINCLUDE "/Shared/common.ab3"
0000472E <common.ab3@312> XINCLUDE "/Shared/common.ab3"
000047EE <common.ab3@313> XINCLUDE "/Shared/common.ab3"
00004836 <common.ab3@314> XINCLUDE "/Shared/common.ab3"
0000483A <common.ab3@316> XINCLUDE "/Shared/common.ab3"
0000483C <common.ab3@317> XINCLUDE "/Shared/common.ab3"
00004840 <common.ab3@318> XINCLUDE "/Shared/common.ab3"
00004842 <common.ab3@319> XINCLUDE "/Shared/common.ab3"
00004844 <common.ab3@320> XINCLUDE "/Shared/common.ab3"
00004846 <common.ab3@321> XINCLUDE "/Shared/common.ab3"
00004848 <common.ab3@322> XINCLUDE "/Shared/common.ab3"
0000484A <common.ab3@324> XINCLUDE "/Shared/common.ab3"
0000484C <common.ab3@325> XINCLUDE "/Shared/common.ab3"
0000484D <common.ab3@329> XINCLUDE "/Shared/common.ab3"
0000484E <common.ab3@331> XINCLUDE "/Shared/common.ab3"
00004850 <common.ab3@332> XINCLUDE "/Shared/common.ab3"
00004852 <common.ab3@333> XINCLUDE "/Shared/common.ab3"
00004854 <common.ab3@335> XINCLUDE "/Shared/common.ab3"
00004856 <common.ab3@338> XINCLUDE "/Shared/common.ab3"
00004858 <common.ab3@340> XINCLUDE "/Shared/common.ab3"
0000485A <common.ab3@342> XINCLUDE "/Shared/common.ab3"
0000485E <common.ab3@344> XINCLUDE "/Shared/common.ab3"
00004860 <common.ab3@346> XINCLUDE "/Shared/common.ab3"
00004862 <common.ab3@347> XINCLUDE "/Shared/common.ab3"
00004864 <common.ab3@349> XINCLUDE "/Shared/common.ab3"
00004868 <common.ab3@351> XINCLUDE "/Shared/common.ab3"
0000486A <common.ab3@352> XINCLUDE "/Shared/common.ab3"
0000486C <common.ab3@353> XINCLUDE "/Shared/common.ab3"
00004870 <common.ab3@356> XINCLUDE "/Shared/common.ab3"
00004872 <common.ab3@357> XINCLUDE "/Shared/common.ab3"
00004874 <common.ab3@358> XINCLUDE "/Shared/common.ab3"
00004876 <common.ab3@359> XINCLUDE "/Shared/common.ab3"
00004878 <common.ab3@361> XINCLUDE "/Shared/common.ab3"
0000487A <common.ab3@362> XINCLUDE "/Shared/common.ab3"
0000487E <common.ab3@364> XINCLUDE "/Shared/common.ab3"
00004880 <common.ab3@365> XINCLUDE "/Shared/common.ab3"
00004882 <common.ab3@366> XINCLUDE "/Shared/common.ab3"
00004884 <common.ab3@370> XINCLUDE "/Shared/common.ab3"
00004886 <common.ab3@371> XINCLUDE "/Shared/common.ab3"
0000488A <common.ab3@372> XINCLUDE "/Shared/common.ab3"
0000488E <common.ab3@377> XINCLUDE "/Shared/common.ab3"
00004890 <common.ab3@383> XINCLUDE "/Shared/common.ab3"
00004892 <common.ab3@384> XINCLUDE "/Shared/common.ab3"
00004894 <common.ab3@385> XINCLUDE "/Shared/common.ab3"
00004898 <common.ab3@386> XINCLUDE "/Shared/common.ab3"
0000489A <common.ab3@387> XINCLUDE "/Shared/common.ab3"
0000489C <common.ab3@388> XINCLUDE "/Shared/common.ab3"
0000489E <common.ab3@389> XINCLUDE "/Shared/common.ab3"
000048A0 <common.ab3@390> XINCLUDE "/Shared/common.ab3"
000048A2 <common.ab3@392> XINCLUDE "/Shared/common.ab3"
000048A4 <common.ab3@394> XINCLUDE "/Shared/common.ab3"
000048A6 <common.ab3@396> XINCLUDE "/Shared/common.ab3"
000048AA <common.ab3@397> XINCLUDE "/Shared/common.ab3"
000048AC <common.ab3@398> XINCLUDE "/Shared/common.ab3"
000048DA <common.ab3@399> XINCLUDE "/Shared/common.ab3"
000048E4 <common.ab3@400> XINCLUDE "/Shared/common.ab3"
000048E8 <common.ab3@401> XINCLUDE "/Shared/common.ab3"
000048EA <common.ab3@403> XINCLUDE "/Shared/common.ab3"
000048EC <common.ab3@404> XINCLUDE "/Shared/common.ab3"
000048F0 <common.ab3@405> XINCLUDE "/Shared/common.ab3"
000048F4 <common.ab3@406> XINCLUDE "/Shared/common.ab3"
000048FD <common.ab3@407> XINCLUDE "/Shared/common.ab3"
00004900 <common.ab3@408> XINCLUDE "/Shared/common.ab3"
0000492D <common.ab3@409> XINCLUDE "/Shared/common.ab3"
0000496D <common.ab3@410> XINCLUDE "/Shared/common.ab3"
00004979 <common.ab3@411> XINCLUDE "/Shared/common.ab3"
000049C9 <common.ab3@412> XINCLUDE "/Shared/common.ab3"
000049D5 <common.ab3@413> XINCLUDE "/Shared/common.ab3"
00004A25 <common.ab3@414> XINCLUDE "/Shared/common.ab3"
00004B21 <common.ab3@415> XINCLUDE "/Shared/common.ab3"
00004B23 <common.ab3@416> XINCLUDE "/Shared/common.ab3"
00004BE3 <common.ab3@417> XINCLUDE "/Shared/common.ab3"
00004C23 <common.ab3@418> XINCLUDE "/Shared/common.ab3"
00004C25 <common.ab3@419> XINCLUDE "/Shared/common.ab3"
00004C26 <common.ab3@420> XINCLUDE "/Shared/common.ab3"
00004C2A <common.ab3@423> XINCLUDE "/Shared/common.ab3"
00004C2E <common.ab3@425> XINCLUDE "/Shared/common.ab3"
00004C32 <common.ab3@426> XINCLUDE "/Shared/common.ab3"
00004C36 <common.ab3@427> XINCLUDE "/Shared/common.ab3"
00004C3A <common.ab3@429> XINCLUDE "/Shared/common.ab3"
00004C3E <common.ab3@431> XINCLUDE "/Shared/common.ab3"
00004C42 <common.ab3@432> XINCLUDE "/Shared/common.ab3"
00004C46 <common.ab3@433> XINCLUDE "/Shared/common.ab3"
00004C4A <common.ab3@434> XINCLUDE "/Shared/common.ab3"
00004C4E <common.ab3@435> XINCLUDE "/Shared/common.ab3"
00004C52 <common.ab3@436> XINCLUDE "/Shared/common.ab3"
00004C56 <common.ab3@437> XINCLUDE "/Shared/common.ab3"
00004C5A <common.ab3@438> XINCLUDE "/Shared/common.ab3"
00004C5E <common.ab3@440> XINCLUDE "/Shared/common.ab3"
00004C62 <common.ab3@442> XINCLUDE "/Shared/common.ab3"
00004C66 <common.ab3@444> XINCLUDE "/Shared/common.ab3"
00004C6A <common.ab3@446> XINCLUDE "/Shared/common.ab3"
00004C6E <common.ab3@447> XINCLUDE "/Shared/common.ab3"
00004C78 <common.ab3@448> XINCLUDE "/Shared/common.ab3"
00004C7C <common.ab3@449> XINCLUDE "/Shared/common.ab3"
00004C80 <common.ab3@452> XINCLUDE "/Shared/common.ab3"
00004C82 <common.ab3@453> XINCLUDE "/Shared/common.ab3"
00004C84 <common.ab3@454> XINCLUDE "/Shared/common.ab3"
00004CA2 <common.ab3@455> XINCLUDE "/Shared/common.ab3"
00004CA6 <common.ab3@456> XINCLUDE "/Shared/common.ab3"
00004CA8 <common.ab3@458> XINCLUDE "/Shared/common.ab3"
00004CAC <common.ab3@459> XINCLUDE "/Shared/common.ab3"
00004CE0 <common.ab3@460> XINCLUDE "/Shared/common.ab3"
00004CE4 <common.ab3@461> XINCLUDE "/Shared/common.ab3"
00004CF2 <common.ab3@463> XINCLUDE "/Shared/common.ab3"
00004D04 <common.ab3@464> XINCLUDE "/Shared/common.ab3"
00004D06 <common.ab3@465> XINCLUDE "/Shared/common.ab3"
00004D1A <common.ab3@466> XINCLUDE "/Shared/common.ab3"
00004D30 <common.ab3@467> XINCLUDE "/Shared/common.ab3"
00004D46 <common.ab3@468> XINCLUDE "/Shared/common.ab3"
00004D5C <common.ab3@469> XINCLUDE "/Shared/common.ab3"
00004D72 <common.ab3@470> XINCLUDE "/Shared/common.ab3"
00004D74 <common.ab3@471> XINCLUDE "/Shared/common.ab3"
00004D76 <common.ab3@472> XINCLUDE "/Shared/common.ab3"
00004D7A <common.ab3@474> XINCLUDE "/Shared/common.ab3"
00004D7E <common.ab3@476> XINCLUDE "/Shared/common.ab3"
00004D82 <common.ab3@478> XINCLUDE "/Shared/common.ab3"
00004D86 <common.ab3@479> XINCLUDE "/Shared/common.ab3"
00004D8A <common.ab3@480> XINCLUDE "/Shared/common.ab3"
00004D8E <common.ab3@481> XINCLUDE "/Shared/common.ab3"
00004D92 <common.ab3@482> XINCLUDE "/Shared/common.ab3"
00004D96 <common.ab3@483> XINCLUDE "/Shared/common.ab3"
00004D9A <common.ab3@484> XINCLUDE "/Shared/common.ab3"
00004D9E <common.ab3@485> XINCLUDE "/Shared/common.ab3"
00004DA4 <common.ab3@486> XINCLUDE "/Shared/common.ab3"
00004DB6 <common.ab3@487> XINCLUDE "/Shared/common.ab3"
00004DB8 <common.ab3@491> XINCLUDE "/Shared/common.ab3"
00004DBC <common.ab3@492> XINCLUDE "/Shared/common.ab3"
00004DBE <common.ab3@493> XINCLUDE "/Shared/common.ab3"
00004DC2 <common.ab3@494> XINCLUDE "/Shared/common.ab3"
00004DC4 <common.ab3@495> XINCLUDE "/Shared/common.ab3"
00004DC8 <common.ab3@496> XINCLUDE "/Shared/common.ab3"
00004DCA <common.ab3@497> XINCLUDE "/Shared/common.ab3"
00004DCE <common.ab3@498> XINCLUDE "/Shared/common.ab3"
00004DD0 <common.ab3@499> XINCLUDE "/Shared/common.ab3"
00004DD4 <common.ab3@500> XINCLUDE "/Shared/common.ab3"
00004DD6 <common.ab3@501> XINCLUDE "/Shared/common.ab3"
00004DDA <common.ab3@502> XINCLUDE "/Shared/common.ab3"
00004DDC <common.ab3@503> XINCLUDE "/Shared/common.ab3"
00004DE0 <common.ab3@504> XINCLUDE "/Shared/common.ab3"
00004DE2 <common.ab3@505> XINCLUDE "/Shared/common.ab3"
00004DE6 <common.ab3@506> XINCLUDE "/Shared/common.ab3"
00004DE8 <common.ab3@507> XINCLUDE "/Shared/common.ab3"
00004DEC <common.ab3@508> XINCLUDE "/Shared/common.ab3"
00004DEE <common.ab3@509> XINCLUDE "/Shared/common.ab3"
00004DF2 <common.ab3@510> XINCLUDE "/Shared/common.ab3"
00004DF4 <common.ab3@511> XINCLUDE "/Shared/common.ab3"
00004DF8 <common.ab3@512> XINCLUDE "/Shared/common.ab3"
00004DFA <common.ab3@513> XINCLUDE "/Shared/common.ab3"
00004DFE <common.ab3@514> XINCLUDE "/Shared/common.ab3"
00004E00 <common.ab3@515> XINCLUDE "/Shared/common.ab3"
00004E04 <common.ab3@516> XINCLUDE "/Shared/common.ab3"
00004E06 <common.ab3@517> XINCLUDE "/Shared/common.ab3"
00004E0A <common.ab3@518> XINCLUDE "/Shared/common.ab3"
00004E0C <common.ab3@519> XINCLUDE "/Shared/common.ab3"
00004E20 <common.ab3@523> XINCLUDE "/Shared/common.ab3"
00004E34 <common.ab3@524> XINCLUDE "/Shared/common.ab3"
00004E48 <common.ab3@525> XINCLUDE "/Shared/common.ab3"
00004E4A <common.ab3@526> XINCLUDE "/Shared/common.ab3"
00004E4E <common.ab3@527> XINCLUDE "/Shared/common.ab3"
00004E52 <common.ab3@528> XINCLUDE "/Shared/common.ab3"
00004E56 <common.ab3@529> XINCLUDE "/Shared/common.ab3"
00004E5A <common.ab3@530> XINCLUDE "/Shared/common.ab3"
00004E5E <common.ab3@531> XINCLUDE "/Shared/common.ab3"
00004E62 <common.ab3@532> XINCLUDE "/Shared/common.ab3"
00004E66 <common.ab3@533> XINCLUDE "/Shared/common.ab3"
00004E67 <common.ab3@534> XINCLUDE "/Shared/common.ab3"
00004E68 <common.ab3@535> XINCLUDE "/Shared/common.ab3"
00004E69 <common.ab3@536> XINCLUDE "/Shared/common.ab3"
00004E6C <common.ab3@537> XINCLUDE "/Shared/common.ab3"
00004E70 <common.ab3@538> XINCLUDE "/Shared/common.ab3"
00004E74 <common.ab3@539> XINCLUDE "/Shared/common.ab3"
00004E78 <common.ab3@540> XINCLUDE "/Shared/common.ab3"
00004E7C <common.ab3@541> XINCLUDE "/Shared/common.ab3"
00004E80 <common.ab3@542> XINCLUDE "/Shared/common.ab3"
00004E84 <common.ab3@543> XINCLUDE "/Shared/common.ab3"
00004E85 <common.ab3@544> XINCLUDE "/Shared/common.ab3"
00004E86 <common.ab3@545> XINCLUDE "/Shared/common.ab3"
00004E88 <common.ab3@546> XINCLUDE "/Shared/common.ab3"
00004E8C <common.ab3@547> XINCLUDE "/Shared/common.ab3"
00004E90 <common.ab3@548> XINCLUDE "/Shared/common.ab3"
00004E94 <common.ab3@549> XINCLUDE "/Shared/common.ab3"
00004E98 <common.ab3@551> XINCLUDE "/Shared/common.ab3"
00004E9C <common.ab3@552> XINCLUDE "/Shared/common.ab3"
00004EA0 <common.ab3@553> XINCLUDE "/Shared/common.ab3"
00004EA4 <common.ab3@554> XINCLUDE "/Shared/common.ab3"
00004EA8 <common.ab3@555> XINCLUDE "/Shared/common.ab3"
00004EAC <common.ab3@556> XINCLUDE "/Shared/common.ab3"
00004EB0 <common.ab3@557> XINCLUDE "/Shared/common.ab3"
00004EB4 <common.ab3@558> XINCLUDE "/Shared/common.ab3"
00004EB8 <common.ab3@562> XINCLUDE "/Shared/common.ab3"
00004EBC <common.ab3@563> XINCLUDE "/Shared/common.ab3"
00004EC0 <common.ab3@564> XINCLUDE "/Shared/common.ab3"
00004EC2 <common.ab3@565> XINCLUDE "/Shared/common.ab3"
00004EC3 <common.ab3@566> XINCLUDE "/Shared/common.ab3"
00004EC7 <common.ab3@567> XINCLUDE "/Shared/common.ab3"
00004ECB <common.ab3@568> XINCLUDE "/Shared/common.ab3"
00004ECF <common.ab3@569> XINCLUDE "/Shared/common.ab3"
00004ED3 <common.ab3@570> XINCLUDE "/Shared/common.ab3"
00004ED4 <common.ab3@572> XINCLUDE "/Shared/common.ab3"
00004ED8 <common.ab3@575> XINCLUDE "/Shared/common.ab3"
00004EDC <common.ab3@576> XINCLUDE "/Shared/common.ab3"
00004EE0 <common.ab3@577> XINCLUDE "/Shared/common.ab3"
00004EE1 <common.ab3@578> XINCLUDE "/Shared/common.ab3"
00004EE2 <common.ab3@580> XINCLUDE "/Shared/common.ab3"
00004EE6 <common.ab3@582> XINCLUDE "/Shared/common.ab3"
00004EEA <common.ab3@583> XINCLUDE "/Shared/common.ab3"
00004EEC <common.ab3@584> XINCLUDE "/Shared/common.ab3"
00004EEE <common.ab3@585> XINCLUDE "/Shared/common.ab3"
00004EF2 <common.ab3@589> XINCLUDE "/Shared/common.ab3"
00004EF6 <common.ab3@590> XINCLUDE "/Shared/common.ab3"
00004EFA <common.ab3@592> XINCLUDE "/Shared/common.ab3"
00004EFE <common.ab3@593> XINCLUDE "/Shared/common.ab3"
00004F02 <common.ab3@595> XINCLUDE "/Shared/common.ab3"
00004F06 <common.ab3@596> XINCLUDE "/Shared/common.ab3"
00004F0A <common.ab3@598> XINCLUDE "/Shared/common.ab3"
00004F0E <common.ab3@599> XINCLUDE "/Shared/common.ab3"
00004F12 <common.ab3@600> XINCLUDE "/Shared/common.ab3"
00004F16 <common.ab3@601> XINCLUDE "/Shared/common.ab3"
00004F1A <common.ab3@602> XINCLUDE "/Shared/common.ab3"
00004F1E <common.ab3@603> XINCLUDE "/Shared/common.ab3"
00004F22 <common.ab3@604> XINCLUDE "/Shared/common.ab3"
00004F26 <common.ab3@605> XINCLUDE "/Shared/common.ab3"
00004F2A <common.ab3@606> XINCLUDE "/Shared/common.ab3"
00004F2E <common.ab3@607> XINCLUDE "/Shared/common.ab3"
00004F32 <common.ab3@608> XINCLUDE "/Shared/common.ab3"
00004F36 <common.ab3@609> XINCLUDE "/Shared/common.ab3"
00004F3A <common.ab3@610> XINCLUDE "/Shared/common.ab3"
00004F3E <common.ab3@611> XINCLUDE "/Shared/common.ab3"
00004F3E <AmiBlitz3.ab3@86> XINCLUDE "/Shared/common.ab3"
00004F3E <preprocessor.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F3E <hashmap.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F5C <hashmap.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F64 <hashmap.include.ab3@41> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F92 <hashmap.include.ab3@42> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FC2 <hashmap.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FD2 <hashmap.include.ab3@44> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FDC <hashmap.include.ab3@46> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FE2 <hashmap.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00005004 <hashmap.include.ab3@52> XINCLUDE "/Shared/preprocessor.include.ab3"
00005024 <hashmap.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00005036 <hashmap.include.ab3@55> XINCLUDE "/Shared/preprocessor.include.ab3"
0000505E <hashmap.include.ab3@56> XINCLUDE "/Shared/preprocessor.include.ab3"
00005064 <hashmap.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
0000507E <hashmap.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00005098 <hashmap.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
000050AA <hashmap.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
000050B8 <hashmap.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
000050EC <hashmap.include.ab3@67> XINCLUDE "/Shared/preprocessor.include.ab3"
000050FA <hashmap.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00005104 <hashmap.include.ab3@69> XINCLUDE "/Shared/preprocessor.include.ab3"
00005116 <hashmap.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00005150 <hashmap.include.ab3@71> XINCLUDE "/Shared/preprocessor.include.ab3"
00005160 <hashmap.include.ab3@72> XINCLUDE "/Shared/preprocessor.include.ab3"
00005166 <hashmap.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00005176 <hashmap.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
00005182 <hashmap.include.ab3@77> XINCLUDE "/Shared/preprocessor.include.ab3"
00005190 <hashmap.include.ab3@79> XINCLUDE "/Shared/preprocessor.include.ab3"
000051A0 <hashmap.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
000051C0 <hashmap.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
000051CC <hashmap.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
000051DA <hashmap.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
000051E8 <hashmap.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
000051F6 <hashmap.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00005204 <hashmap.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00005236 <hashmap.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
00005244 <hashmap.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
00005254 <hashmap.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
0000525A <hashmap.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
0000525E <hashmap.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00005278 <hashmap.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
00005292 <hashmap.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
000052AC <hashmap.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
000052CC <hashmap.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
000052D6 <hashmap.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
000052E2 <hashmap.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
000052F6 <hashmap.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00005328 <hashmap.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
00005340 <hashmap.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
0000534C <hashmap.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
0000535A <hashmap.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
00005368 <hashmap.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
00005372 <hashmap.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
00005380 <hashmap.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
000053AA <hashmap.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
000053B4 <hashmap.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
000053BA <hashmap.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
000053E8 <hashmap.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
00005402 <hashmap.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
00005422 <hashmap.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
00005436 <hashmap.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
0000544E <hashmap.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
00005476 <hashmap.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00005490 <hashmap.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
0000549E <hashmap.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
000054AC <hashmap.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
000054BA <hashmap.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
000054CE <hashmap.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
00005522 <hashmap.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
0000554C <hashmap.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
00005590 <hashmap.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
000055B0 <hashmap.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000055C2 <hashmap.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
000055E6 <hashmap.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
000055F4 <hashmap.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
0000564C <hashmap.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
00005692 <hashmap.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
00005698 <hashmap.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
0000569E <hashmap.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
000056C6 <hashmap.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
000056D8 <hashmap.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
000056EA <hashmap.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
00005724 <hashmap.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
00005734 <hashmap.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
0000573A <hashmap.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
0000574A <hashmap.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
00005750 <hashmap.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
00005756 <hashmap.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
0000576E <hashmap.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
000057AC <hashmap.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
000057C8 <hashmap.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
000057FA <hashmap.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
0000580E <hashmap.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
00005822 <hashmap.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
0000583A <hashmap.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
00005862 <hashmap.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
0000586C <hashmap.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
0000587A <hashmap.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
00005892 <hashmap.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
00005898 <hashmap.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
000058A0 <hashmap.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
000058C0 <hashmap.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
000058E6 <hashmap.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
000058F0 <hashmap.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
000058FE <hashmap.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
00005908 <hashmap.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
00005934 <hashmap.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00005948 <hashmap.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
0000594E <hashmap.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
0000595C <hashmap.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00005992 <hashmap.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
000059E0 <hashmap.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A08 <hashmap.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A22 <hashmap.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A34 <hashmap.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A3E <hashmap.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A5A <hashmap.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A84 <hashmap.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AA0 <hashmap.include.ab3@214> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AC2 <hashmap.include.ab3@215> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AF0 <hashmap.include.ab3@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B0A <hashmap.include.ab3@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B32 <hashmap.include.ab3@218> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B4E <hashmap.include.ab3@219> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B6A <hashmap.include.ab3@220> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B78 <hashmap.include.ab3@221> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B8C <hashmap.include.ab3@223> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BAE <hashmap.include.ab3@224> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BD0 <hashmap.include.ab3@225> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BDE <hashmap.include.ab3@226> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BFE <hashmap.include.ab3@227> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C2E <hashmap.include.ab3@228> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C34 <hashmap.include.ab3@229> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C68 <hashmap.include.ab3@230> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CAA <hashmap.include.ab3@231> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CBA <hashmap.include.ab3@232> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CC4 <hashmap.include.ab3@233> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CD4 <hashmap.include.ab3@234> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CDA <hashmap.include.ab3@238> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CE2 <hashmap.include.ab3@240> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CE8 <hashmap.include.ab3@242> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D16 <hashmap.include.ab3@246> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D48 <hashmap.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D80 <hashmap.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D94 <hashmap.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DAC <hashmap.include.ab3@251> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DD4 <hashmap.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E06 <hashmap.include.ab3@253> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E22 <hashmap.include.ab3@254> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E30 <hashmap.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E44 <hashmap.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E98 <hashmap.include.ab3@257> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EC2 <hashmap.include.ab3@258> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F06 <hashmap.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F2C <hashmap.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F32 <hashmap.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F50 <hashmap.include.ab3@264> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F6E <hashmap.include.ab3@266> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F8C <hashmap.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F92 <hashmap.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FB4 <hashmap.include.ab3@306> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FE2 <hashmap.include.ab3@308> XINCLUDE "/Shared/preprocessor.include.ab3"
0000600A <hashmap.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
0000602E <hashmap.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
00006084 <hashmap.include.ab3@313> XINCLUDE "/Shared/preprocessor.include.ab3"
000060D6 <hashmap.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
0000612C <hashmap.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
0000613C <hashmap.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
0000618E <hashmap.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
000061B6 <hashmap.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
000061DC <hashmap.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
000061F8 <hashmap.include.ab3@322> XINCLUDE "/Shared/preprocessor.include.ab3"
00006200 <hashmap.include.ab3@323> XINCLUDE "/Shared/preprocessor.include.ab3"
00006228 <hashmap.include.ab3@324> XINCLUDE "/Shared/preprocessor.include.ab3"
00006256 <hashmap.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
0000627E <hashmap.include.ab3@328> XINCLUDE "/Shared/preprocessor.include.ab3"
00006286 <hashmap.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
000062AA <hashmap.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
000062DE <hashmap.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
000062FA <hashmap.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
00006304 <hashmap.include.ab3@334> XINCLUDE "/Shared/preprocessor.include.ab3"
00006318 <hashmap.include.ab3@335> XINCLUDE "/Shared/preprocessor.include.ab3"
00006338 <hashmap.include.ab3@336> XINCLUDE "/Shared/preprocessor.include.ab3"
00006354 <hashmap.include.ab3@337> XINCLUDE "/Shared/preprocessor.include.ab3"
00006362 <hashmap.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
00006370 <hashmap.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
00006376 <hashmap.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
0000638E <hashmap.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
0000639E <hashmap.include.ab3@343> XINCLUDE "/Shared/preprocessor.include.ab3"
000063CC <hashmap.include.ab3@344> XINCLUDE "/Shared/preprocessor.include.ab3"
00006428 <hashmap.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
0000649E <hashmap.include.ab3@346> XINCLUDE "/Shared/preprocessor.include.ab3"
000064FA <hashmap.include.ab3@347> XINCLUDE "/Shared/preprocessor.include.ab3"
00006500 <hashmap.include.ab3@348> XINCLUDE "/Shared/preprocessor.include.ab3"
0000650A <hashmap.include.ab3@351> XINCLUDE "/Shared/preprocessor.include.ab3"
00006510 <hashmap.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
0000653E <hashmap.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
00006544 <hashmap.include.ab3@359> XINCLUDE "/Shared/preprocessor.include.ab3"
00006564 <hashmap.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
0000656E <hashmap.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
00006580 <hashmap.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
00006590 <hashmap.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
0000659A <hashmap.include.ab3@366> XINCLUDE "/Shared/preprocessor.include.ab3"
000065B4 <hashmap.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
000065CE <hashmap.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
000065D4 <hashmap.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
000065DA <hashmap.include.ab3@375> XINCLUDE "/Shared/preprocessor.include.ab3"
000065E4 <hashmap.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
000065EC <hashmap.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
00006614 <hashmap.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
0000661A <hashmap.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
0000662E <hashmap.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
0000666A <hashmap.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
00006690 <hashmap.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
0000669E <hashmap.include.ab3@384> XINCLUDE "/Shared/preprocessor.include.ab3"
000066DA <hashmap.include.ab3@386> XINCLUDE "/Shared/preprocessor.include.ab3"
000066EE <hashmap.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
0000672A <hashmap.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
00006740 <hashmap.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
00006754 <hashmap.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
0000675E <hashmap.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
00006782 <hashmap.include.ab3@394> XINCLUDE "/Shared/preprocessor.include.ab3"
000067BA <hashmap.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
000067C0 <hashmap.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
000067C8 <hashmap.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
000067DC <hashmap.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
000067E6 <hashmap.include.ab3@401> XINCLUDE "/Shared/preprocessor.include.ab3"
0000680E <hashmap.include.ab3@402> XINCLUDE "/Shared/preprocessor.include.ab3"
00006836 <hashmap.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
00006848 <hashmap.include.ab3@404> XINCLUDE "/Shared/preprocessor.include.ab3"
00006874 <hashmap.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
000068A8 <hashmap.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
000068D4 <hashmap.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
00006920 <hashmap.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
00006930 <hashmap.include.ab3@410> XINCLUDE "/Shared/preprocessor.include.ab3"
00006936 <hashmap.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
0000693E <hashmap.include.ab3@413> XINCLUDE "/Shared/preprocessor.include.ab3"
0000696C <hashmap.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
0000696E <hashmap.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
00006974 <hashmap.include.ab3@419> XINCLUDE "/Shared/preprocessor.include.ab3"
0000697E <hashmap.include.ab3@421> XINCLUDE "/Shared/preprocessor.include.ab3"
000069A8 <hashmap.include.ab3@422> XINCLUDE "/Shared/preprocessor.include.ab3"
000069B2 <hashmap.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
000069B8 <hashmap.include.ab3@427> XINCLUDE "/Shared/preprocessor.include.ab3"
000069E2 <hashmap.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
000069E8 <hashmap.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A08 <hashmap.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A12 <hashmap.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A20 <hashmap.include.ab3@436> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A30 <hashmap.include.ab3@437> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A3A <hashmap.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A54 <hashmap.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A54 <preprocessor.include.ab3@11> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A6E <preprocessor.include.ab3@31> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A88 <preprocessor.include.ab3@32> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AAA <preprocessor.include.ab3@33> XINCLUDE "/Shared/preprocessor.include.ab3"
00006ADC <preprocessor.include.ab3@34> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AE0 <preprocessor.include.ab3@35> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AFA <preprocessor.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B14 <preprocessor.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B1E <preprocessor.include.ab3@41> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B34 <preprocessor.include.ab3@42> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B38 <preprocessor.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B52 <preprocessor.include.ab3@47> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B6C <preprocessor.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B86 <preprocessor.include.ab3@49> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BAA <preprocessor.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BB0 <preprocessor.include.ab3@51> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BDA <preprocessor.include.ab3@52> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BF4 <preprocessor.include.ab3@53> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C04 <preprocessor.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C0E <preprocessor.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C1C <preprocessor.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C3E <preprocessor.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C72 <preprocessor.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C8E <preprocessor.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C98 <preprocessor.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CB4 <preprocessor.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CC2 <preprocessor.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CD6 <preprocessor.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CF8 <preprocessor.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D1A <preprocessor.include.ab3@67> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D38 <preprocessor.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D66 <preprocessor.include.ab3@69> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D6C <preprocessor.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D7C <preprocessor.include.ab3@72> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D80 <preprocessor.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D96 <preprocessor.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DB6 <preprocessor.include.ab3@79> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DC0 <preprocessor.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DEA <preprocessor.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E00 <preprocessor.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E10 <preprocessor.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E2C <preprocessor.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E48 <preprocessor.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E64 <preprocessor.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E80 <preprocessor.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E9C <preprocessor.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EB8 <preprocessor.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00006ED4 <preprocessor.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EF0 <preprocessor.include.ab3@92> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F0C <preprocessor.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F28 <preprocessor.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F44 <preprocessor.include.ab3@95> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F60 <preprocessor.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F7C <preprocessor.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F98 <preprocessor.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FB4 <preprocessor.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FD0 <preprocessor.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FEC <preprocessor.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
00007008 <preprocessor.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
00007024 <preprocessor.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
00007040 <preprocessor.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
0000705C <preprocessor.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00007078 <preprocessor.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
00007094 <preprocessor.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
000070B0 <preprocessor.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
000070CC <preprocessor.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
000070E8 <preprocessor.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
00007104 <preprocessor.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
00007120 <preprocessor.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
0000713C <preprocessor.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
00007158 <preprocessor.include.ab3@114> XINCLUDE "/Shared/preprocessor.include.ab3"
00007174 <preprocessor.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
00007190 <preprocessor.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
000071AC <preprocessor.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
000071C8 <preprocessor.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
000071E4 <preprocessor.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
00007200 <preprocessor.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
0000721C <preprocessor.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
00007238 <preprocessor.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
00007254 <preprocessor.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
00007270 <preprocessor.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
0000728C <preprocessor.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
000072A8 <preprocessor.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
000072C4 <preprocessor.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
000072E0 <preprocessor.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
000072FC <preprocessor.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
00007318 <preprocessor.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
00007334 <preprocessor.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
00007350 <preprocessor.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
0000736C <preprocessor.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
00007388 <preprocessor.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
000073A4 <preprocessor.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
000073C0 <preprocessor.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
000073DC <preprocessor.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
000073F8 <preprocessor.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
00007414 <preprocessor.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
00007430 <preprocessor.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
0000744C <preprocessor.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
00007468 <preprocessor.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
00007484 <preprocessor.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
000074A0 <preprocessor.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
000074BC <preprocessor.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
000074D8 <preprocessor.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
000074F4 <preprocessor.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
00007510 <preprocessor.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
0000752C <preprocessor.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
00007548 <preprocessor.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
00007564 <preprocessor.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00007580 <preprocessor.include.ab3@152> XINCLUDE "/Shared/preprocessor.include.ab3"
0000759C <preprocessor.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
000075B8 <preprocessor.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
000075D4 <preprocessor.include.ab3@155> XINCLUDE "/Shared/preprocessor.include.ab3"
000075F0 <preprocessor.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
0000760C <preprocessor.include.ab3@157> XINCLUDE "/Shared/preprocessor.include.ab3"
00007628 <preprocessor.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
00007644 <preprocessor.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
00007660 <preprocessor.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
0000767C <preprocessor.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
00007698 <preprocessor.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
000076B4 <preprocessor.include.ab3@163> XINCLUDE "/Shared/preprocessor.include.ab3"
000076D0 <preprocessor.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
000076EC <preprocessor.include.ab3@165> XINCLUDE "/Shared/preprocessor.include.ab3"
00007708 <preprocessor.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
00007724 <preprocessor.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
00007740 <preprocessor.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
0000775C <preprocessor.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
00007778 <preprocessor.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
00007794 <preprocessor.include.ab3@171> XINCLUDE "/Shared/preprocessor.include.ab3"
000077B0 <preprocessor.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
000077CC <preprocessor.include.ab3@173> XINCLUDE "/Shared/preprocessor.include.ab3"
000077E8 <preprocessor.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
00007804 <preprocessor.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
00007820 <preprocessor.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
0000783C <preprocessor.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
00007858 <preprocessor.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
00007874 <preprocessor.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
00007890 <preprocessor.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
000078AC <preprocessor.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
000078C8 <preprocessor.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
000078E4 <preprocessor.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
00007900 <preprocessor.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
0000791C <preprocessor.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
00007938 <preprocessor.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
00007954 <preprocessor.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
00007970 <preprocessor.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
0000798C <preprocessor.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
000079A8 <preprocessor.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
000079C4 <preprocessor.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
000079E0 <preprocessor.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
000079FC <preprocessor.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A18 <preprocessor.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A34 <preprocessor.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A50 <preprocessor.include.ab3@196> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A6C <preprocessor.include.ab3@197> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A88 <preprocessor.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AA4 <preprocessor.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AC0 <preprocessor.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ADC <preprocessor.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AF8 <preprocessor.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B14 <preprocessor.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B30 <preprocessor.include.ab3@204> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B4C <preprocessor.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B68 <preprocessor.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B84 <preprocessor.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BA0 <preprocessor.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BBC <preprocessor.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BD8 <preprocessor.include.ab3@210> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BF4 <preprocessor.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C10 <preprocessor.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C18 <preprocessor.include.ab3@213> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C22 <preprocessor.include.ab3@214> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C2C <preprocessor.include.ab3@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C32 <preprocessor.include.ab3@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C60 <preprocessor.include.ab3@254> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C7C <preprocessor.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CAE <preprocessor.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CB8 <preprocessor.include.ab3@257> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CDA <preprocessor.include.ab3@258> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CE4 <preprocessor.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CEE <preprocessor.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CF8 <preprocessor.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D12 <preprocessor.include.ab3@263> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D40 <preprocessor.include.ab3@267> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D5C <preprocessor.include.ab3@268> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D6A <preprocessor.include.ab3@269> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DA4 <preprocessor.include.ab3@270> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DAC <preprocessor.include.ab3@272> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DC6 <preprocessor.include.ab3@273> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DEC <preprocessor.include.ab3@280> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E0E <preprocessor.include.ab3@281> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E32 <preprocessor.include.ab3@282> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E38 <preprocessor.include.ab3@283> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E46 <preprocessor.include.ab3@284> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E4C <preprocessor.include.ab3@285> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E54 <preprocessor.include.ab3@286> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E5A <preprocessor.include.ab3@287> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E62 <preprocessor.include.ab3@288> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E76 <preprocessor.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E9C <preprocessor.include.ab3@291> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EC4 <preprocessor.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ECE <preprocessor.include.ab3@294> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EE2 <preprocessor.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EF6 <preprocessor.include.ab3@296> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F06 <preprocessor.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F20 <preprocessor.include.ab3@298> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F4E <preprocessor.include.ab3@299> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F62 <preprocessor.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F8A <preprocessor.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F90 <preprocessor.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F98 <preprocessor.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F9E <preprocessor.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FC6 <preprocessor.include.ab3@306> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FD0 <preprocessor.include.ab3@308> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FDE <preprocessor.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FFC <preprocessor.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
0000800A <preprocessor.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
00008012 <preprocessor.include.ab3@312> XINCLUDE "/Shared/preprocessor.include.ab3"
00008018 <preprocessor.include.ab3@313> XINCLUDE "/Shared/preprocessor.include.ab3"
0000802C <preprocessor.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
00008036 <preprocessor.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
00008044 <preprocessor.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
0000805E <preprocessor.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
00008064 <preprocessor.include.ab3@322> XINCLUDE "/Shared/preprocessor.include.ab3"
0000806C <preprocessor.include.ab3@323> XINCLUDE "/Shared/preprocessor.include.ab3"
00008072 <preprocessor.include.ab3@325> XINCLUDE "/Shared/preprocessor.include.ab3"
00008086 <preprocessor.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
00008090 <preprocessor.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
00008098 <preprocessor.include.ab3@328> XINCLUDE "/Shared/preprocessor.include.ab3"
000080AC <preprocessor.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
000080C0 <preprocessor.include.ab3@334> XINCLUDE "/Shared/preprocessor.include.ab3"
000080D4 <preprocessor.include.ab3@335> XINCLUDE "/Shared/preprocessor.include.ab3"
000080F2 <preprocessor.include.ab3@337> XINCLUDE "/Shared/preprocessor.include.ab3"
00008100 <preprocessor.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
00008110 <preprocessor.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
00008138 <preprocessor.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
0000815A <preprocessor.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
0000816E <preprocessor.include.ab3@344> XINCLUDE "/Shared/preprocessor.include.ab3"
0000818C <preprocessor.include.ab3@346> XINCLUDE "/Shared/preprocessor.include.ab3"
0000819A <preprocessor.include.ab3@347> XINCLUDE "/Shared/preprocessor.include.ab3"
000081C0 <preprocessor.include.ab3@348> XINCLUDE "/Shared/preprocessor.include.ab3"
000081E8 <preprocessor.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
0000820A <preprocessor.include.ab3@350> XINCLUDE "/Shared/preprocessor.include.ab3"
0000823A <preprocessor.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
00008268 <preprocessor.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
0000829A <preprocessor.include.ab3@358> XINCLUDE "/Shared/preprocessor.include.ab3"
000082A8 <preprocessor.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
000082AE <preprocessor.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
000082BE <preprocessor.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
000082C4 <preprocessor.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
000082EA <preprocessor.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
0000830C <preprocessor.include.ab3@370> XINCLUDE "/Shared/preprocessor.include.ab3"
00008334 <preprocessor.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
00008354 <preprocessor.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
00008376 <preprocessor.include.ab3@373> XINCLUDE "/Shared/preprocessor.include.ab3"
0000837C <preprocessor.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
0000838A <preprocessor.include.ab3@375> XINCLUDE "/Shared/preprocessor.include.ab3"
00008398 <preprocessor.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
0000839E <preprocessor.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
000083A6 <preprocessor.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
000083C4 <preprocessor.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
000083D8 <preprocessor.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
000083E8 <preprocessor.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
000083FE <preprocessor.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
00008416 <preprocessor.include.ab3@385> XINCLUDE "/Shared/preprocessor.include.ab3"
00008432 <preprocessor.include.ab3@386> XINCLUDE "/Shared/preprocessor.include.ab3"
0000843C <preprocessor.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00008458 <preprocessor.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
0000846A <preprocessor.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
00008498 <preprocessor.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
000084D4 <preprocessor.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
000084E4 <preprocessor.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
000084EA <preprocessor.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
000084F0 <preprocessor.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
00008508 <preprocessor.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
00008518 <preprocessor.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
0000859E <preprocessor.include.ab3@399> XINCLUDE "/Shared/preprocessor.include.ab3"
000085D8 <preprocessor.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
0000860E <preprocessor.include.ab3@401> XINCLUDE "/Shared/preprocessor.include.ab3"
0000861E <preprocessor.include.ab3@402> XINCLUDE "/Shared/preprocessor.include.ab3"
0000862C <preprocessor.include.ab3@404> XINCLUDE "/Shared/preprocessor.include.ab3"
00008632 <preprocessor.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
00008642 <preprocessor.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
0000866C <preprocessor.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
00008672 <preprocessor.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
0000869E <preprocessor.include.ab3@409> XINCLUDE "/Shared/preprocessor.include.ab3"
000086AE <preprocessor.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
000086BE <preprocessor.include.ab3@414> XINCLUDE "/Shared/preprocessor.include.ab3"
000086DC <preprocessor.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
000086EA <preprocessor.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
00008720 <preprocessor.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
00008744 <preprocessor.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
00008758 <preprocessor.include.ab3@421> XINCLUDE "/Shared/preprocessor.include.ab3"
00008768 <preprocessor.include.ab3@423> XINCLUDE "/Shared/preprocessor.include.ab3"
00008786 <preprocessor.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
00008794 <preprocessor.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
000087B8 <preprocessor.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
000087DC <preprocessor.include.ab3@427> XINCLUDE "/Shared/preprocessor.include.ab3"
000087EA <preprocessor.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
000087F8 <preprocessor.include.ab3@432> XINCLUDE "/Shared/preprocessor.include.ab3"
00008818 <preprocessor.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
00008826 <preprocessor.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
0000882C <preprocessor.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
00008832 <preprocessor.include.ab3@438> XINCLUDE "/Shared/preprocessor.include.ab3"
00008840 <preprocessor.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
0000884E <preprocessor.include.ab3@441> XINCLUDE "/Shared/preprocessor.include.ab3"
0000886E <preprocessor.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
0000887C <preprocessor.include.ab3@443> XINCLUDE "/Shared/preprocessor.include.ab3"
00008882 <preprocessor.include.ab3@444> XINCLUDE "/Shared/preprocessor.include.ab3"
000088AC <preprocessor.include.ab3@447> XINCLUDE "/Shared/preprocessor.include.ab3"
000088BC <preprocessor.include.ab3@450> XINCLUDE "/Shared/preprocessor.include.ab3"
000088C6 <preprocessor.include.ab3@452> XINCLUDE "/Shared/preprocessor.include.ab3"
000088DA <preprocessor.include.ab3@453> XINCLUDE "/Shared/preprocessor.include.ab3"
00008900 <preprocessor.include.ab3@457> XINCLUDE "/Shared/preprocessor.include.ab3"
00008922 <preprocessor.include.ab3@458> XINCLUDE "/Shared/preprocessor.include.ab3"
0000894A <preprocessor.include.ab3@459> XINCLUDE "/Shared/preprocessor.include.ab3"
00008950 <preprocessor.include.ab3@460> XINCLUDE "/Shared/preprocessor.include.ab3"
0000895E <preprocessor.include.ab3@461> XINCLUDE "/Shared/preprocessor.include.ab3"
00008964 <preprocessor.include.ab3@462> XINCLUDE "/Shared/preprocessor.include.ab3"
00008978 <preprocessor.include.ab3@463> XINCLUDE "/Shared/preprocessor.include.ab3"
00008988 <preprocessor.include.ab3@464> XINCLUDE "/Shared/preprocessor.include.ab3"
0000899E <preprocessor.include.ab3@466> XINCLUDE "/Shared/preprocessor.include.ab3"
000089B6 <preprocessor.include.ab3@468> XINCLUDE "/Shared/preprocessor.include.ab3"
000089D2 <preprocessor.include.ab3@469> XINCLUDE "/Shared/preprocessor.include.ab3"
000089DC <preprocessor.include.ab3@470> XINCLUDE "/Shared/preprocessor.include.ab3"
000089F8 <preprocessor.include.ab3@471> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A26 <preprocessor.include.ab3@472> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A62 <preprocessor.include.ab3@473> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A72 <preprocessor.include.ab3@474> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A80 <preprocessor.include.ab3@476> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A86 <preprocessor.include.ab3@477> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A96 <preprocessor.include.ab3@478> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AC0 <preprocessor.include.ab3@479> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AC6 <preprocessor.include.ab3@480> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AF2 <preprocessor.include.ab3@481> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B02 <preprocessor.include.ab3@483> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B12 <preprocessor.include.ab3@485> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B30 <preprocessor.include.ab3@486> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B3E <preprocessor.include.ab3@487> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B74 <preprocessor.include.ab3@488> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B98 <preprocessor.include.ab3@489> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BAC <preprocessor.include.ab3@492> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BBC <preprocessor.include.ab3@494> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BDA <preprocessor.include.ab3@495> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BE8 <preprocessor.include.ab3@496> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C0C <preprocessor.include.ab3@497> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C30 <preprocessor.include.ab3@498> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C36 <preprocessor.include.ab3@502> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C46 <preprocessor.include.ab3@503> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C4C <preprocessor.include.ab3@504> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C6E <preprocessor.include.ab3@508> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C76 <preprocessor.include.ab3@509> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CAC <preprocessor.include.ab3@510> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CC8 <preprocessor.include.ab3@511> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CCE <preprocessor.include.ab3@512> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D04 <preprocessor.include.ab3@516> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D20 <preprocessor.include.ab3@517> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D48 <preprocessor.include.ab3@518> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D66 <preprocessor.include.ab3@519> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D84 <preprocessor.include.ab3@520> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DB2 <preprocessor.include.ab3@521> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E14 <preprocessor.include.ab3@522> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E2E <preprocessor.include.ab3@523> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E48 <preprocessor.include.ab3@527> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E52 <preprocessor.include.ab3@528> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E90 <preprocessor.include.ab3@529> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E94 <preprocessor.include.ab3@530> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E9E <preprocessor.include.ab3@532> XINCLUDE "/Shared/preprocessor.include.ab3"
00008ECC <preprocessor.include.ab3@533> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EEC <preprocessor.include.ab3@534> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F04 <preprocessor.include.ab3@535> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F62 <preprocessor.include.ab3@536> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F8E <preprocessor.include.ab3@537> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FA0 <preprocessor.include.ab3@538> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FB0 <preprocessor.include.ab3@539> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FC8 <preprocessor.include.ab3@540> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FCE <preprocessor.include.ab3@542> XINCLUDE "/Shared/preprocessor.include.ab3"
00009008 <preprocessor.include.ab3@543> XINCLUDE "/Shared/preprocessor.include.ab3"
00009012 <preprocessor.include.ab3@545> XINCLUDE "/Shared/preprocessor.include.ab3"
00009018 <preprocessor.include.ab3@546> XINCLUDE "/Shared/preprocessor.include.ab3"
00009022 <preprocessor.include.ab3@547> XINCLUDE "/Shared/preprocessor.include.ab3"
00009034 <preprocessor.include.ab3@548> XINCLUDE "/Shared/preprocessor.include.ab3"
00009034 <AmiBlitz3.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00009034 <logging.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009034 <PE_Tools.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009058 <PE_Tools.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
00009060 <PE_Tools.include.ab3@84> XINCLUDE "PE/logging.include.ab3"
0000908E <PE_Tools.include.ab3@85> XINCLUDE "PE/logging.include.ab3"
000090BC <PE_Tools.include.ab3@86> XINCLUDE "PE/logging.include.ab3"
0000912C <PE_Tools.include.ab3@87> XINCLUDE "PE/logging.include.ab3"
0000913A <PE_Tools.include.ab3@88> XINCLUDE "PE/logging.include.ab3"
0000918A <PE_Tools.include.ab3@89> XINCLUDE "PE/logging.include.ab3"
0000918A <logging.include.ab3@11> XINCLUDE "PE/logging.include.ab3"
0000918A <file.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
0000918A <asl.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
000091AE <asl.include.ab3@94> XINCLUDE "PE/logging.include.ab3"
000091D6 <asl.include.ab3@95> XINCLUDE "PE/logging.include.ab3"
000091FA <asl.include.ab3@96> XINCLUDE "PE/logging.include.ab3"
00009228 <asl.include.ab3@295> XINCLUDE "PE/logging.include.ab3"
00009446 <asl.include.ab3@297> XINCLUDE "PE/logging.include.ab3"
00009474 <asl.include.ab3@299> XINCLUDE "PE/logging.include.ab3"
000094A0 <asl.include.ab3@301> XINCLUDE "PE/logging.include.ab3"
000094DC <asl.include.ab3@302> XINCLUDE "PE/logging.include.ab3"
00009508 <asl.include.ab3@303> XINCLUDE "PE/logging.include.ab3"
00009534 <asl.include.ab3@304> XINCLUDE "PE/logging.include.ab3"
00009560 <asl.include.ab3@305> XINCLUDE "PE/logging.include.ab3"
0000958C <asl.include.ab3@306> XINCLUDE "PE/logging.include.ab3"
000095B8 <asl.include.ab3@307> XINCLUDE "PE/logging.include.ab3"
000095E4 <asl.include.ab3@308> XINCLUDE "PE/logging.include.ab3"
00009610 <asl.include.ab3@309> XINCLUDE "PE/logging.include.ab3"
0000963C <asl.include.ab3@310> XINCLUDE "PE/logging.include.ab3"
000096C6 <asl.include.ab3@312> XINCLUDE "PE/logging.include.ab3"
00009750 <asl.include.ab3@313> XINCLUDE "PE/logging.include.ab3"
000097EE <asl.include.ab3@314> XINCLUDE "PE/logging.include.ab3"
00009838 <asl.include.ab3@315> XINCLUDE "PE/logging.include.ab3"
00009878 <asl.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
0000987E <asl.include.ab3@317> XINCLUDE "PE/logging.include.ab3"
000098C8 <asl.include.ab3@320> XINCLUDE "PE/logging.include.ab3"
00009908 <asl.include.ab3@321> XINCLUDE "PE/logging.include.ab3"
00009932 <asl.include.ab3@322> XINCLUDE "PE/logging.include.ab3"
00009938 <asl.include.ab3@323> XINCLUDE "PE/logging.include.ab3"
00009962 <asl.include.ab3@324> XINCLUDE "PE/logging.include.ab3"
0000998C <asl.include.ab3@326> XINCLUDE "PE/logging.include.ab3"
000099B6 <asl.include.ab3@328> XINCLUDE "PE/logging.include.ab3"
000099C0 <asl.include.ab3@329> XINCLUDE "PE/logging.include.ab3"
000099DE <asl.include.ab3@330> XINCLUDE "PE/logging.include.ab3"
00009A00 <asl.include.ab3@331> XINCLUDE "PE/logging.include.ab3"
00009A2E <asl.include.ab3@332> XINCLUDE "PE/logging.include.ab3"
00009A5C <asl.include.ab3@333> XINCLUDE "PE/logging.include.ab3"
00009A8A <asl.include.ab3@334> XINCLUDE "PE/logging.include.ab3"
00009AD0 <asl.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
00009B16 <asl.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
00009B5C <asl.include.ab3@339> XINCLUDE "PE/logging.include.ab3"
00009B94 <asl.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
00009C92 <asl.include.ab3@342> XINCLUDE "PE/logging.include.ab3"
00009CB0 <asl.include.ab3@344> XINCLUDE "PE/logging.include.ab3"
00009CBA <asl.include.ab3@346> XINCLUDE "PE/logging.include.ab3"
00009CE0 <asl.include.ab3@347> XINCLUDE "PE/logging.include.ab3"
00009CF2 <asl.include.ab3@349> XINCLUDE "PE/logging.include.ab3"
00009D20 <asl.include.ab3@350> XINCLUDE "PE/logging.include.ab3"
00009D48 <asl.include.ab3@351> XINCLUDE "PE/logging.include.ab3"
00009D5A <asl.include.ab3@352> XINCLUDE "PE/logging.include.ab3"
00009DB0 <asl.include.ab3@353> XINCLUDE "PE/logging.include.ab3"
00009DE6 <asl.include.ab3@354> XINCLUDE "PE/logging.include.ab3"
00009DF6 <asl.include.ab3@356> XINCLUDE "PE/logging.include.ab3"
00009DFC <asl.include.ab3@357> XINCLUDE "PE/logging.include.ab3"
00009E0E <asl.include.ab3@358> XINCLUDE "PE/logging.include.ab3"
00009E18 <asl.include.ab3@359> XINCLUDE "PE/logging.include.ab3"
00009E52 <asl.include.ab3@360> XINCLUDE "PE/logging.include.ab3"
00009E58 <asl.include.ab3@361> XINCLUDE "PE/logging.include.ab3"
00009EB0 <asl.include.ab3@362> XINCLUDE "PE/logging.include.ab3"
00009ECE <asl.include.ab3@364> XINCLUDE "PE/logging.include.ab3"
00009ED4 <asl.include.ab3@367> XINCLUDE "PE/logging.include.ab3"
00009EE4 <asl.include.ab3@370> XINCLUDE "PE/logging.include.ab3"
00009EF4 <asl.include.ab3@371> XINCLUDE "PE/logging.include.ab3"
00009F04 <asl.include.ab3@372> XINCLUDE "PE/logging.include.ab3"
00009F14 <asl.include.ab3@373> XINCLUDE "PE/logging.include.ab3"
00009F24 <asl.include.ab3@375> XINCLUDE "PE/logging.include.ab3"
00009F2E <asl.include.ab3@377> XINCLUDE "PE/logging.include.ab3"
00009F42 <asl.include.ab3@378> XINCLUDE "PE/logging.include.ab3"
00009F58 <asl.include.ab3@394> XINCLUDE "PE/logging.include.ab3"
00009F80 <asl.include.ab3@396> XINCLUDE "PE/logging.include.ab3"
00009F8A <asl.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
00009F9C <asl.include.ab3@398> XINCLUDE "PE/logging.include.ab3"
00009FD6 <asl.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
00009FE0 <asl.include.ab3@400> XINCLUDE "PE/logging.include.ab3"
0000A00A <asl.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
0000A022 <asl.include.ab3@403> XINCLUDE "PE/logging.include.ab3"
0000A074 <asl.include.ab3@439> XINCLUDE "PE/logging.include.ab3"
0000A0A2 <asl.include.ab3@441> XINCLUDE "PE/logging.include.ab3"
0000A134 <asl.include.ab3@442> XINCLUDE "PE/logging.include.ab3"
0000A17A <asl.include.ab3@443> XINCLUDE "PE/logging.include.ab3"
0000A20C <asl.include.ab3@444> XINCLUDE "PE/logging.include.ab3"
0000A226 <asl.include.ab3@445> XINCLUDE "PE/logging.include.ab3"
0000A226 <file.include.ab3@57> XINCLUDE "PE/logging.include.ab3"
0000A23C <file.include.ab3@66> XINCLUDE "PE/logging.include.ab3"
0000A252 <file.include.ab3@67> XINCLUDE "PE/logging.include.ab3"
0000A268 <file.include.ab3@68> XINCLUDE "PE/logging.include.ab3"
0000A27E <file.include.ab3@70> XINCLUDE "PE/logging.include.ab3"
0000A28A <file.include.ab3@72> XINCLUDE "PE/logging.include.ab3"
0000A296 <file.include.ab3@73> XINCLUDE "PE/logging.include.ab3"
0000A2A2 <file.include.ab3@74> XINCLUDE "PE/logging.include.ab3"
0000A2AE <file.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
0000A2D6 <file.include.ab3@77> XINCLUDE "PE/logging.include.ab3"
0000A2FE <file.include.ab3@78> XINCLUDE "PE/logging.include.ab3"
0000A326 <file.include.ab3@79> XINCLUDE "PE/logging.include.ab3"
0000A34A <file.include.ab3@109> XINCLUDE "PE/logging.include.ab3"
0000A36E <file.include.ab3@110> XINCLUDE "PE/logging.include.ab3"
0000A388 <file.include.ab3@156> XINCLUDE "PE/logging.include.ab3"
0000A398 <file.include.ab3@157> XINCLUDE "PE/logging.include.ab3"
0000A39A <file.include.ab3@158> XINCLUDE "PE/logging.include.ab3"
0000A39C <file.include.ab3@159> XINCLUDE "PE/logging.include.ab3"
0000A39E <file.include.ab3@160> XINCLUDE "PE/logging.include.ab3"
0000A3A0 <file.include.ab3@161> XINCLUDE "PE/logging.include.ab3"
0000A3A2 <file.include.ab3@162> XINCLUDE "PE/logging.include.ab3"
0000A3A6 <file.include.ab3@163> XINCLUDE "PE/logging.include.ab3"
0000A3AA <file.include.ab3@164> XINCLUDE "PE/logging.include.ab3"
0000A3AE <file.include.ab3@165> XINCLUDE "PE/logging.include.ab3"
0000A3B0 <file.include.ab3@166> XINCLUDE "PE/logging.include.ab3"
0000A3B2 <file.include.ab3@167> XINCLUDE "PE/logging.include.ab3"
0000A3B4 <file.include.ab3@168> XINCLUDE "PE/logging.include.ab3"
0000A3B6 <file.include.ab3@169> XINCLUDE "PE/logging.include.ab3"
0000A3B8 <file.include.ab3@170> XINCLUDE "PE/logging.include.ab3"
0000A3BA <file.include.ab3@171> XINCLUDE "PE/logging.include.ab3"
0000A3BC <file.include.ab3@172> XINCLUDE "PE/logging.include.ab3"
0000A3C6 <file.include.ab3@173> XINCLUDE "PE/logging.include.ab3"
0000A3CC <file.include.ab3@174> XINCLUDE "PE/logging.include.ab3"
0000A3E6 <file.include.ab3@215> XINCLUDE "PE/logging.include.ab3"
0000A404 <file.include.ab3@217> XINCLUDE "PE/logging.include.ab3"
0000A40A <file.include.ab3@218> XINCLUDE "PE/logging.include.ab3"
0000A424 <file.include.ab3@237> XINCLUDE "PE/logging.include.ab3"
0000A440 <file.include.ab3@239> XINCLUDE "PE/logging.include.ab3"
0000A466 <file.include.ab3@240> XINCLUDE "PE/logging.include.ab3"
0000A486 <file.include.ab3@241> XINCLUDE "PE/logging.include.ab3"
0000A490 <file.include.ab3@242> XINCLUDE "PE/logging.include.ab3"
0000A4BC <file.include.ab3@243> XINCLUDE "PE/logging.include.ab3"
0000A4DE <file.include.ab3@244> XINCLUDE "PE/logging.include.ab3"
0000A4F8 <file.include.ab3@245> XINCLUDE "PE/logging.include.ab3"
0000A4FE <file.include.ab3@248> XINCLUDE "PE/logging.include.ab3"
0000A538 <file.include.ab3@249> XINCLUDE "PE/logging.include.ab3"
0000A556 <file.include.ab3@251> XINCLUDE "PE/logging.include.ab3"
0000A55C <file.include.ab3@252> XINCLUDE "PE/logging.include.ab3"
0000A57A <file.include.ab3@271> XINCLUDE "PE/logging.include.ab3"
0000A580 <file.include.ab3@273> XINCLUDE "PE/logging.include.ab3"
0000A5A2 <file.include.ab3@274> XINCLUDE "PE/logging.include.ab3"
0000A5C2 <file.include.ab3@275> XINCLUDE "PE/logging.include.ab3"
0000A5FA <file.include.ab3@276> XINCLUDE "PE/logging.include.ab3"
0000A616 <file.include.ab3@277> XINCLUDE "PE/logging.include.ab3"
0000A61C <file.include.ab3@278> XINCLUDE "PE/logging.include.ab3"
0000A622 <file.include.ab3@279> XINCLUDE "PE/logging.include.ab3"
0000A628 <file.include.ab3@281> XINCLUDE "PE/logging.include.ab3"
0000A62E <file.include.ab3@282> XINCLUDE "PE/logging.include.ab3"
0000A64A <file.include.ab3@283> XINCLUDE "PE/logging.include.ab3"
0000A696 <file.include.ab3@285> XINCLUDE "PE/logging.include.ab3"
0000A69C <file.include.ab3@286> XINCLUDE "PE/logging.include.ab3"
0000A6D6 <file.include.ab3@287> XINCLUDE "PE/logging.include.ab3"
0000A6E2 <file.include.ab3@288> XINCLUDE "PE/logging.include.ab3"
0000A6FE <file.include.ab3@289> XINCLUDE "PE/logging.include.ab3"
0000A704 <file.include.ab3@291> XINCLUDE "PE/logging.include.ab3"
0000A73E <file.include.ab3@292> XINCLUDE "PE/logging.include.ab3"
0000A748 <file.include.ab3@296> XINCLUDE "PE/logging.include.ab3"
0000A74E <file.include.ab3@297> XINCLUDE "PE/logging.include.ab3"
0000A76C <file.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
0000A79A <file.include.ab3@318> XINCLUDE "PE/logging.include.ab3"
0000A7A0 <file.include.ab3@319> XINCLUDE "PE/logging.include.ab3"
0000A7B6 <file.include.ab3@335> XINCLUDE "PE/logging.include.ab3"
0000A7BE <file.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
0000A81A <file.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
0000A828 <file.include.ab3@339> XINCLUDE "PE/logging.include.ab3"
0000A82E <file.include.ab3@340> XINCLUDE "PE/logging.include.ab3"
0000A860 <file.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
0000A86A <file.include.ab3@342> XINCLUDE "PE/logging.include.ab3"
0000A870 <file.include.ab3@343> XINCLUDE "PE/logging.include.ab3"
0000A88A <file.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
0000A89C <file.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
0000A8FA <file.include.ab3@400> XINCLUDE "PE/logging.include.ab3"
0000A934 <file.include.ab3@401> XINCLUDE "PE/logging.include.ab3"
0000A96E <file.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
0000A98C <file.include.ab3@403> XINCLUDE "PE/logging.include.ab3"
0000A9AA <file.include.ab3@404> XINCLUDE "PE/logging.include.ab3"
0000A9C0 <file.include.ab3@405> XINCLUDE "PE/logging.include.ab3"
0000A9DC <file.include.ab3@406> XINCLUDE "PE/logging.include.ab3"
0000A9F6 <file.include.ab3@407> XINCLUDE "PE/logging.include.ab3"
0000AA74 <file.include.ab3@408> XINCLUDE "PE/logging.include.ab3"
0000AA86 <file.include.ab3@410> XINCLUDE "PE/logging.include.ab3"
0000AA9C <file.include.ab3@422> XINCLUDE "PE/logging.include.ab3"
0000AAC6 <file.include.ab3@424> XINCLUDE "PE/logging.include.ab3"
0000AAD0 <file.include.ab3@425> XINCLUDE "PE/logging.include.ab3"
0000AAE0 <file.include.ab3@426> XINCLUDE "PE/logging.include.ab3"
0000AAE4 <file.include.ab3@427> XINCLUDE "PE/logging.include.ab3"
0000AB12 <file.include.ab3@428> XINCLUDE "PE/logging.include.ab3"
0000AB2C <file.include.ab3@447> XINCLUDE "PE/logging.include.ab3"
0000AB3E <file.include.ab3@449> XINCLUDE "PE/logging.include.ab3"
0000AB5E <file.include.ab3@450> XINCLUDE "PE/logging.include.ab3"
0000AB74 <file.include.ab3@451> XINCLUDE "PE/logging.include.ab3"
0000ABAC <file.include.ab3@452> XINCLUDE "PE/logging.include.ab3"
0000ABD6 <file.include.ab3@453> XINCLUDE "PE/logging.include.ab3"
0000AC00 <file.include.ab3@456> XINCLUDE "PE/logging.include.ab3"
0000AC18 <file.include.ab3@457> XINCLUDE "PE/logging.include.ab3"
0000AC2E <file.include.ab3@525> XINCLUDE "PE/logging.include.ab3"
0000AC76 <file.include.ab3@527> XINCLUDE "PE/logging.include.ab3"
0000AC96 <file.include.ab3@528> XINCLUDE "PE/logging.include.ab3"
0000AC9E <file.include.ab3@529> XINCLUDE "PE/logging.include.ab3"
0000ACDC <file.include.ab3@568> XINCLUDE "PE/logging.include.ab3"
0000ACE8 <file.include.ab3@570> XINCLUDE "PE/logging.include.ab3"
0000ACF2 <file.include.ab3@571> XINCLUDE "PE/logging.include.ab3"
0000AD04 <file.include.ab3@572> XINCLUDE "PE/logging.include.ab3"
0000AD0A <file.include.ab3@573> XINCLUDE "PE/logging.include.ab3"
0000AD18 <file.include.ab3@574> XINCLUDE "PE/logging.include.ab3"
0000AD40 <file.include.ab3@575> XINCLUDE "PE/logging.include.ab3"
0000AD54 <file.include.ab3@576> XINCLUDE "PE/logging.include.ab3"
0000AD7C <file.include.ab3@577> XINCLUDE "PE/logging.include.ab3"
0000AD90 <file.include.ab3@578> XINCLUDE "PE/logging.include.ab3"
0000ADB8 <file.include.ab3@579> XINCLUDE "PE/logging.include.ab3"
0000ADCC <file.include.ab3@580> XINCLUDE "PE/logging.include.ab3"
0000ADF4 <file.include.ab3@581> XINCLUDE "PE/logging.include.ab3"
0000ADF6 <file.include.ab3@582> XINCLUDE "PE/logging.include.ab3"
0000AE1A <file.include.ab3@584> XINCLUDE "PE/logging.include.ab3"
0000AE52 <file.include.ab3@586> XINCLUDE "PE/logging.include.ab3"
0000AEDC <file.include.ab3@587> XINCLUDE "PE/logging.include.ab3"
0000AF04 <file.include.ab3@588> XINCLUDE "PE/logging.include.ab3"
0000AF34 <file.include.ab3@589> XINCLUDE "PE/logging.include.ab3"
0000AF6C <file.include.ab3@593> XINCLUDE "PE/logging.include.ab3"
0000AFC4 <file.include.ab3@594> XINCLUDE "PE/logging.include.ab3"
0000B01C <file.include.ab3@595> XINCLUDE "PE/logging.include.ab3"
0000B09C <file.include.ab3@597> XINCLUDE "PE/logging.include.ab3"
0000B0D0 <file.include.ab3@598> XINCLUDE "PE/logging.include.ab3"
0000B104 <file.include.ab3@599> XINCLUDE "PE/logging.include.ab3"
0000B10A <file.include.ab3@600> XINCLUDE "PE/logging.include.ab3"
0000B118 <file.include.ab3@601> XINCLUDE "PE/logging.include.ab3"
0000B14C <file.include.ab3@602> XINCLUDE "PE/logging.include.ab3"
0000B174 <file.include.ab3@603> XINCLUDE "PE/logging.include.ab3"
0000B22C <file.include.ab3@604> XINCLUDE "PE/logging.include.ab3"
0000B2AC <file.include.ab3@605> XINCLUDE "PE/logging.include.ab3"
0000B2E0 <file.include.ab3@606> XINCLUDE "PE/logging.include.ab3"
0000B300 <file.include.ab3@608> XINCLUDE "PE/logging.include.ab3"
0000B306 <file.include.ab3@609> XINCLUDE "PE/logging.include.ab3"
0000B30C <file.include.ab3@610> XINCLUDE "PE/logging.include.ab3"
0000B3DC <file.include.ab3@611> XINCLUDE "PE/logging.include.ab3"
0000B3F0 <file.include.ab3@614> XINCLUDE "PE/logging.include.ab3"
0000B4A8 <file.include.ab3@615> XINCLUDE "PE/logging.include.ab3"
0000B528 <file.include.ab3@616> XINCLUDE "PE/logging.include.ab3"
0000B618 <file.include.ab3@617> XINCLUDE "PE/logging.include.ab3"
0000B622 <file.include.ab3@618> XINCLUDE "PE/logging.include.ab3"
0000B656 <file.include.ab3@619> XINCLUDE "PE/logging.include.ab3"
0000B676 <file.include.ab3@620> XINCLUDE "PE/logging.include.ab3"
0000B67C <file.include.ab3@621> XINCLUDE "PE/logging.include.ab3"
0000B682 <file.include.ab3@622> XINCLUDE "PE/logging.include.ab3"
0000B752 <file.include.ab3@623> XINCLUDE "PE/logging.include.ab3"
0000B766 <file.include.ab3@627> XINCLUDE "PE/logging.include.ab3"
0000B79A <file.include.ab3@628> XINCLUDE "PE/logging.include.ab3"
0000B7C2 <file.include.ab3@629> XINCLUDE "PE/logging.include.ab3"
0000B87A <file.include.ab3@630> XINCLUDE "PE/logging.include.ab3"
0000B8FA <file.include.ab3@631> XINCLUDE "PE/logging.include.ab3"
0000B92E <file.include.ab3@632> XINCLUDE "PE/logging.include.ab3"
0000B94E <file.include.ab3@635> XINCLUDE "PE/logging.include.ab3"
0000B954 <file.include.ab3@636> XINCLUDE "PE/logging.include.ab3"
0000B95A <file.include.ab3@637> XINCLUDE "PE/logging.include.ab3"
0000BA2A <file.include.ab3@638> XINCLUDE "PE/logging.include.ab3"
0000BA3E <file.include.ab3@641> XINCLUDE "PE/logging.include.ab3"
0000BAF6 <file.include.ab3@642> XINCLUDE "PE/logging.include.ab3"
0000BB76 <file.include.ab3@643> XINCLUDE "PE/logging.include.ab3"
0000BBAA <file.include.ab3@644> XINCLUDE "PE/logging.include.ab3"
0000BBCA <file.include.ab3@645> XINCLUDE "PE/logging.include.ab3"
0000BBD0 <file.include.ab3@646> XINCLUDE "PE/logging.include.ab3"
0000BBD6 <file.include.ab3@647> XINCLUDE "PE/logging.include.ab3"
0000BCA6 <file.include.ab3@648> XINCLUDE "PE/logging.include.ab3"
0000BCAC <file.include.ab3@651> XINCLUDE "PE/logging.include.ab3"
0000BCE6 <file.include.ab3@652> XINCLUDE "PE/logging.include.ab3"
0000BCE8 <file.include.ab3@653> XINCLUDE "PE/logging.include.ab3"
0000BCEE <file.include.ab3@655> XINCLUDE "PE/logging.include.ab3"
0000BD86 <file.include.ab3@656> XINCLUDE "PE/logging.include.ab3"
0000BD98 <file.include.ab3@659> XINCLUDE "PE/logging.include.ab3"
0000BDAE <file.include.ab3@660> XINCLUDE "PE/logging.include.ab3"
0000BE18 <file.include.ab3@661> XINCLUDE "PE/logging.include.ab3"
0000BE82 <file.include.ab3@662> XINCLUDE "PE/logging.include.ab3"
0000BE9C <file.include.ab3@663> XINCLUDE "PE/logging.include.ab3"
0000BEB8 <file.include.ab3@664> XINCLUDE "PE/logging.include.ab3"
0000BED6 <file.include.ab3@665> XINCLUDE "PE/logging.include.ab3"
0000BEF0 <file.include.ab3@666> XINCLUDE "PE/logging.include.ab3"
0000BEFA <file.include.ab3@668> XINCLUDE "PE/logging.include.ab3"
0000BF16 <file.include.ab3@669> XINCLUDE "PE/logging.include.ab3"
0000BF38 <file.include.ab3@805> XINCLUDE "PE/logging.include.ab3"
0000BF3E <file.include.ab3@807> XINCLUDE "PE/logging.include.ab3"
0000BF64 <file.include.ab3@808> XINCLUDE "PE/logging.include.ab3"
0000BF80 <file.include.ab3@809> XINCLUDE "PE/logging.include.ab3"
0000BF92 <file.include.ab3@810> XINCLUDE "PE/logging.include.ab3"
0000BFF0 <file.include.ab3@811> XINCLUDE "PE/logging.include.ab3"
0000C028 <file.include.ab3@812> XINCLUDE "PE/logging.include.ab3"
0000C02E <file.include.ab3@813> XINCLUDE "PE/logging.include.ab3"
0000C076 <file.include.ab3@814> XINCLUDE "PE/logging.include.ab3"
0000C090 <file.include.ab3@815> XINCLUDE "PE/logging.include.ab3"
0000C09E <file.include.ab3@818> XINCLUDE "PE/logging.include.ab3"
0000C0A4 <file.include.ab3@819> XINCLUDE "PE/logging.include.ab3"
0000C0AA <file.include.ab3@820> XINCLUDE "PE/logging.include.ab3"
0000C0BC <file.include.ab3@821> XINCLUDE "PE/logging.include.ab3"
0000C1A8 <file.include.ab3@822> XINCLUDE "PE/logging.include.ab3"
0000C1AE <file.include.ab3@823> XINCLUDE "PE/logging.include.ab3"
0000C1F4 <file.include.ab3@824> XINCLUDE "PE/logging.include.ab3"
0000C200 <file.include.ab3@825> XINCLUDE "PE/logging.include.ab3"
0000C266 <file.include.ab3@826> XINCLUDE "PE/logging.include.ab3"
0000C2AC <file.include.ab3@827> XINCLUDE "PE/logging.include.ab3"
0000C2F4 <file.include.ab3@830> XINCLUDE "PE/logging.include.ab3"
0000C35C <file.include.ab3@831> XINCLUDE "PE/logging.include.ab3"
0000C362 <file.include.ab3@832> XINCLUDE "PE/logging.include.ab3"
0000C39C <file.include.ab3@833> XINCLUDE "PE/logging.include.ab3"
0000C3A2 <file.include.ab3@835> XINCLUDE "PE/logging.include.ab3"
0000C404 <file.include.ab3@836> XINCLUDE "PE/logging.include.ab3"
0000C40E <file.include.ab3@838> XINCLUDE "PE/logging.include.ab3"
0000C422 <file.include.ab3@839> XINCLUDE "PE/logging.include.ab3"
0000C43C <file.include.ab3@841> XINCLUDE "PE/logging.include.ab3"
0000C442 <file.include.ab3@843> XINCLUDE "PE/logging.include.ab3"
0000C468 <file.include.ab3@844> XINCLUDE "PE/logging.include.ab3"
0000C484 <file.include.ab3@845> XINCLUDE "PE/logging.include.ab3"
0000C4E2 <file.include.ab3@846> XINCLUDE "PE/logging.include.ab3"
0000C4E6 <file.include.ab3@849> XINCLUDE "PE/logging.include.ab3"
0000C508 <file.include.ab3@867> XINCLUDE "PE/logging.include.ab3"
0000C50E <file.include.ab3@869> XINCLUDE "PE/logging.include.ab3"
0000C52A <file.include.ab3@870> XINCLUDE "PE/logging.include.ab3"
0000C54A <file.include.ab3@871> XINCLUDE "PE/logging.include.ab3"
0000C588 <file.include.ab3@872> XINCLUDE "PE/logging.include.ab3"
0000C5D6 <file.include.ab3@873> XINCLUDE "PE/logging.include.ab3"
0000C60C <file.include.ab3@874> XINCLUDE "PE/logging.include.ab3"
0000C612 <file.include.ab3@875> XINCLUDE "PE/logging.include.ab3"
0000C618 <file.include.ab3@876> XINCLUDE "PE/logging.include.ab3"
0000C648 <file.include.ab3@877> XINCLUDE "PE/logging.include.ab3"
0000C64E <file.include.ab3@878> XINCLUDE "PE/logging.include.ab3"
0000C654 <file.include.ab3@880> XINCLUDE "PE/logging.include.ab3"
0000C666 <file.include.ab3@881> XINCLUDE "PE/logging.include.ab3"
0000C6C4 <file.include.ab3@882> XINCLUDE "PE/logging.include.ab3"
0000C6FC <file.include.ab3@883> XINCLUDE "PE/logging.include.ab3"
0000C702 <file.include.ab3@884> XINCLUDE "PE/logging.include.ab3"
0000C74A <file.include.ab3@885> XINCLUDE "PE/logging.include.ab3"
0000C764 <file.include.ab3@886> XINCLUDE "PE/logging.include.ab3"
0000C772 <file.include.ab3@888> XINCLUDE "PE/logging.include.ab3"
0000C778 <file.include.ab3@889> XINCLUDE "PE/logging.include.ab3"
0000C77E <file.include.ab3@890> XINCLUDE "PE/logging.include.ab3"
0000C790 <file.include.ab3@891> XINCLUDE "PE/logging.include.ab3"
0000C796 <file.include.ab3@892> XINCLUDE "PE/logging.include.ab3"
0000C79C <file.include.ab3@893> XINCLUDE "PE/logging.include.ab3"
0000C7FA <file.include.ab3@894> XINCLUDE "PE/logging.include.ab3"
0000C842 <file.include.ab3@897> XINCLUDE "PE/logging.include.ab3"
0000C84C <file.include.ab3@900> XINCLUDE "PE/logging.include.ab3"
0000C852 <file.include.ab3@901> XINCLUDE "PE/logging.include.ab3"
0000C86C <file.include.ab3@955> XINCLUDE "PE/logging.include.ab3"
0000C872 <file.include.ab3@957> XINCLUDE "PE/logging.include.ab3"
0000C8BA <file.include.ab3@958> XINCLUDE "PE/logging.include.ab3"
0000C8F8 <file.include.ab3@959> XINCLUDE "PE/logging.include.ab3"
0000C902 <file.include.ab3@960> XINCLUDE "PE/logging.include.ab3"
0000C908 <file.include.ab3@961> XINCLUDE "PE/logging.include.ab3"
0000C92E <file.include.ab3@1108> XINCLUDE "PE/logging.include.ab3"
0000C934 <file.include.ab3@1110> XINCLUDE "PE/logging.include.ab3"
0000C95A <file.include.ab3@1111> XINCLUDE "PE/logging.include.ab3"
0000C9BA <file.include.ab3@1112> XINCLUDE "PE/logging.include.ab3"
0000C9D4 <file.include.ab3@1113> XINCLUDE "PE/logging.include.ab3"
0000C9DE <file.include.ab3@1114> XINCLUDE "PE/logging.include.ab3"
0000C9F8 <file.include.ab3@1115> XINCLUDE "PE/logging.include.ab3"
0000CA02 <file.include.ab3@1116> XINCLUDE "PE/logging.include.ab3"
0000CA1A <file.include.ab3@1117> XINCLUDE "PE/logging.include.ab3"
0000CA4A <file.include.ab3@1118> XINCLUDE "PE/logging.include.ab3"
0000CA66 <file.include.ab3@1119> XINCLUDE "PE/logging.include.ab3"
0000CA74 <file.include.ab3@1120> XINCLUDE "PE/logging.include.ab3"
0000CA7A <file.include.ab3@1123> XINCLUDE "PE/logging.include.ab3"
0000CAB4 <file.include.ab3@1124> XINCLUDE "PE/logging.include.ab3"
0000CABE <file.include.ab3@1126> XINCLUDE "PE/logging.include.ab3"
0000CAC4 <file.include.ab3@1127> XINCLUDE "PE/logging.include.ab3"
0000CAE2 <file.include.ab3@1148> XINCLUDE "PE/logging.include.ab3"
0000CAE8 <file.include.ab3@1150> XINCLUDE "PE/logging.include.ab3"
0000CAFA <file.include.ab3@1151> XINCLUDE "PE/logging.include.ab3"
0000CB08 <file.include.ab3@1152> XINCLUDE "PE/logging.include.ab3"
0000CB26 <file.include.ab3@1153> XINCLUDE "PE/logging.include.ab3"
0000CB5C <file.include.ab3@1154> XINCLUDE "PE/logging.include.ab3"
0000CB6E <file.include.ab3@1155> XINCLUDE "PE/logging.include.ab3"
0000CBB8 <file.include.ab3@1156> XINCLUDE "PE/logging.include.ab3"
0000CCA2 <file.include.ab3@1157> XINCLUDE "PE/logging.include.ab3"
0000CCC0 <file.include.ab3@1158> XINCLUDE "PE/logging.include.ab3"
0000CCE6 <file.include.ab3@1160> XINCLUDE "PE/logging.include.ab3"
0000CD02 <file.include.ab3@1161> XINCLUDE "PE/logging.include.ab3"
0000CD2E <file.include.ab3@1162> XINCLUDE "PE/logging.include.ab3"
0000CD38 <file.include.ab3@1163> XINCLUDE "PE/logging.include.ab3"
0000CD66 <file.include.ab3@1164> XINCLUDE "PE/logging.include.ab3"
0000CD80 <file.include.ab3@1165> XINCLUDE "PE/logging.include.ab3"
0000CD9C <file.include.ab3@1166> XINCLUDE "PE/logging.include.ab3"
0000CDA2 <file.include.ab3@1167> XINCLUDE "PE/logging.include.ab3"
0000CDDC <file.include.ab3@1168> XINCLUDE "PE/logging.include.ab3"
0000CDE2 <file.include.ab3@1170> XINCLUDE "PE/logging.include.ab3"
0000CDE8 <file.include.ab3@1171> XINCLUDE "PE/logging.include.ab3"
0000CDEE <file.include.ab3@1173> XINCLUDE "PE/logging.include.ab3"
0000CE8E <file.include.ab3@1174> XINCLUDE "PE/logging.include.ab3"
0000CE94 <file.include.ab3@1176> XINCLUDE "PE/logging.include.ab3"
0000CF36 <file.include.ab3@1177> XINCLUDE "PE/logging.include.ab3"
0000CF3C <file.include.ab3@1179> XINCLUDE "PE/logging.include.ab3"
0000CF76 <file.include.ab3@1180> XINCLUDE "PE/logging.include.ab3"
0000CF80 <file.include.ab3@1182> XINCLUDE "PE/logging.include.ab3"
0000CF86 <file.include.ab3@1183> XINCLUDE "PE/logging.include.ab3"
0000CFA0 <file.include.ab3@1245> XINCLUDE "PE/logging.include.ab3"
0000CFBE <file.include.ab3@1247> XINCLUDE "PE/logging.include.ab3"
0000CFC4 <file.include.ab3@1248> XINCLUDE "PE/logging.include.ab3"
0000CFDE <file.include.ab3@1398> XINCLUDE "PE/logging.include.ab3"
0000CFFE <file.include.ab3@1400> XINCLUDE "PE/logging.include.ab3"
0000D0B2 <file.include.ab3@1401> XINCLUDE "PE/logging.include.ab3"
0000D0B8 <file.include.ab3@1402> XINCLUDE "PE/logging.include.ab3"
0000D0BE <file.include.ab3@1403> XINCLUDE "PE/logging.include.ab3"
0000D0E8 <file.include.ab3@1404> XINCLUDE "PE/logging.include.ab3"
0000D0F4 <file.include.ab3@1406> XINCLUDE "PE/logging.include.ab3"
0000D0FA <file.include.ab3@1407> XINCLUDE "PE/logging.include.ab3"
0000D114 <file.include.ab3@1593> XINCLUDE "PE/logging.include.ab3"
0000D11C <file.include.ab3@1594> XINCLUDE "PE/logging.include.ab3"
0000D124 <file.include.ab3@1595> XINCLUDE "PE/logging.include.ab3"
0000D13A <file.include.ab3@1596> XINCLUDE "PE/logging.include.ab3"
0000D152 <file.include.ab3@1597> XINCLUDE "PE/logging.include.ab3"
0000D164 <file.include.ab3@1598> XINCLUDE "PE/logging.include.ab3"
0000D170 <file.include.ab3@1599> XINCLUDE "PE/logging.include.ab3"
0000D176 <file.include.ab3@1600> XINCLUDE "PE/logging.include.ab3"
0000D17E <file.include.ab3@1601> XINCLUDE "PE/logging.include.ab3"
0000D1B6 <file.include.ab3@1602> XINCLUDE "PE/logging.include.ab3"
0000D1C8 <file.include.ab3@1603> XINCLUDE "PE/logging.include.ab3"
0000D1EC <file.include.ab3@1604> XINCLUDE "PE/logging.include.ab3"
0000D1FE <file.include.ab3@1605> XINCLUDE "PE/logging.include.ab3"
0000D20A <file.include.ab3@1606> XINCLUDE "PE/logging.include.ab3"
0000D210 <file.include.ab3@1607> XINCLUDE "PE/logging.include.ab3"
0000D220 <file.include.ab3@1608> XINCLUDE "PE/logging.include.ab3"
0000D23E <file.include.ab3@1613> XINCLUDE "PE/logging.include.ab3"
0000D250 <file.include.ab3@1616> XINCLUDE "PE/logging.include.ab3"
0000D29C <file.include.ab3@1617> XINCLUDE "PE/logging.include.ab3"
0000D2A2 <file.include.ab3@1619> XINCLUDE "PE/logging.include.ab3"
0000D2CC <file.include.ab3@1621> XINCLUDE "PE/logging.include.ab3"
0000D2E4 <file.include.ab3@1622> XINCLUDE "PE/logging.include.ab3"
0000D312 <file.include.ab3@1706> XINCLUDE "PE/logging.include.ab3"
0000D326 <file.include.ab3@1707> XINCLUDE "PE/logging.include.ab3"
0000D33C <file.include.ab3@1708> XINCLUDE "PE/logging.include.ab3"
0000D35C <file.include.ab3@1709> XINCLUDE "PE/logging.include.ab3"
0000D372 <file.include.ab3@1710> XINCLUDE "PE/logging.include.ab3"
0000D37C <file.include.ab3@1711> XINCLUDE "PE/logging.include.ab3"
0000D396 <file.include.ab3@1712> XINCLUDE "PE/logging.include.ab3"
0000D3B8 <file.include.ab3@1787> XINCLUDE "PE/logging.include.ab3"
0000D3D0 <file.include.ab3@1789> XINCLUDE "PE/logging.include.ab3"
0000D3F2 <file.include.ab3@1790> XINCLUDE "PE/logging.include.ab3"
0000D3F8 <file.include.ab3@1791> XINCLUDE "PE/logging.include.ab3"
0000D42A <file.include.ab3@1811> XINCLUDE "PE/logging.include.ab3"
0000D43E <file.include.ab3@1813> XINCLUDE "PE/logging.include.ab3"
0000D456 <file.include.ab3@1814> XINCLUDE "PE/logging.include.ab3"
0000D46E <file.include.ab3@1815> XINCLUDE "PE/logging.include.ab3"
0000D48E <file.include.ab3@1816> XINCLUDE "PE/logging.include.ab3"
0000D4BE <file.include.ab3@1817> XINCLUDE "PE/logging.include.ab3"
0000D4EE <file.include.ab3@1818> XINCLUDE "PE/logging.include.ab3"
0000D500 <file.include.ab3@1819> XINCLUDE "PE/logging.include.ab3"
0000D508 <file.include.ab3@1820> XINCLUDE "PE/logging.include.ab3"
0000D532 <file.include.ab3@1821> XINCLUDE "PE/logging.include.ab3"
0000D53C <file.include.ab3@1823> XINCLUDE "PE/logging.include.ab3"
0000D556 <file.include.ab3@1824> XINCLUDE "PE/logging.include.ab3"
0000D570 <file.include.ab3@1841> XINCLUDE "PE/logging.include.ab3"
0000D58E <file.include.ab3@1843> XINCLUDE "PE/logging.include.ab3"
0000D5AE <file.include.ab3@1844> XINCLUDE "PE/logging.include.ab3"
0000D5F8 <file.include.ab3@1845> XINCLUDE "PE/logging.include.ab3"
0000D612 <file.include.ab3@1846> XINCLUDE "PE/logging.include.ab3"
0000D624 <file.include.ab3@1847> XINCLUDE "PE/logging.include.ab3"
0000D65A <file.include.ab3@1848> XINCLUDE "PE/logging.include.ab3"
0000D66C <file.include.ab3@1849> XINCLUDE "PE/logging.include.ab3"
0000D674 <file.include.ab3@1850> XINCLUDE "PE/logging.include.ab3"
0000D69C <file.include.ab3@1851> XINCLUDE "PE/logging.include.ab3"
0000D6A2 <file.include.ab3@1853> XINCLUDE "PE/logging.include.ab3"
0000D6CA <file.include.ab3@1854> XINCLUDE "PE/logging.include.ab3"
0000D6DA <file.include.ab3@1856> XINCLUDE "PE/logging.include.ab3"
0000D6EE <file.include.ab3@1857> XINCLUDE "PE/logging.include.ab3"
0000D704 <file.include.ab3@1870> XINCLUDE "PE/logging.include.ab3"
0000D714 <file.include.ab3@1872> XINCLUDE "PE/logging.include.ab3"
0000D718 <file.include.ab3@1873> XINCLUDE "PE/logging.include.ab3"
0000D72E <file.include.ab3@1894> XINCLUDE "PE/logging.include.ab3"
0000D758 <file.include.ab3@1896> XINCLUDE "PE/logging.include.ab3"
0000D760 <file.include.ab3@1897> XINCLUDE "PE/logging.include.ab3"
0000D760 <logging.include.ab3@13> XINCLUDE "PE/logging.include.ab3"
0000D7FE <logging.include.ab3@35> XINCLUDE "PE/logging.include.ab3"
0000D804 <logging.include.ab3@36> XINCLUDE "PE/logging.include.ab3"
0000D80A <logging.include.ab3@37> XINCLUDE "PE/logging.include.ab3"
0000D810 <logging.include.ab3@38> XINCLUDE "PE/logging.include.ab3"
0000D84A <logging.include.ab3@129> XINCLUDE "PE/logging.include.ab3"
0000D87C <logging.include.ab3@131> XINCLUDE "PE/logging.include.ab3"
0000D88A <logging.include.ab3@132> XINCLUDE "PE/logging.include.ab3"
0000D8BA <logging.include.ab3@133> XINCLUDE "PE/logging.include.ab3"
0000DC2A <logging.include.ab3@134> XINCLUDE "PE/logging.include.ab3"
0000DC38 <logging.include.ab3@135> XINCLUDE "PE/logging.include.ab3"
0000DC3E <logging.include.ab3@136> XINCLUDE "PE/logging.include.ab3"
0000DED0 <logging.include.ab3@137> XINCLUDE "PE/logging.include.ab3"
0000DEEA <logging.include.ab3@139> XINCLUDE "PE/logging.include.ab3"
0000DF24 <logging.include.ab3@142> XINCLUDE "PE/logging.include.ab3"
0000DF76 <logging.include.ab3@143> XINCLUDE "PE/logging.include.ab3"
0000DF84 <logging.include.ab3@144> XINCLUDE "PE/logging.include.ab3"
0000DFDA <logging.include.ab3@145> XINCLUDE "PE/logging.include.ab3"
0000DFE0 <logging.include.ab3@146> XINCLUDE "PE/logging.include.ab3"
0000E05A <logging.include.ab3@147> XINCLUDE "PE/logging.include.ab3"
0000E0CE <logging.include.ab3@148> XINCLUDE "PE/logging.include.ab3"
0000E0E8 <logging.include.ab3@150> XINCLUDE "PE/logging.include.ab3"
0000E0E8 <AmiBlitz3.ab3@89> XINCLUDE "PE/logging.include.ab3"
0000E0E8 <translation.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0E8 <phrasebook.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0E8 <prefixtree.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0E8 <dynamicarray.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E110 <dynamicarray.include.ab3@42> XINCLUDE "translation.include.ab3"
0000E12A <dynamicarray.include.ab3@55> XINCLUDE "translation.include.ab3"
0000E134 <dynamicarray.include.ab3@56> XINCLUDE "translation.include.ab3"
0000E146 <dynamicarray.include.ab3@57> XINCLUDE "translation.include.ab3"
0000E16A <dynamicarray.include.ab3@58> XINCLUDE "translation.include.ab3"
0000E178 <dynamicarray.include.ab3@60> XINCLUDE "translation.include.ab3"
0000E184 <dynamicarray.include.ab3@61> XINCLUDE "translation.include.ab3"
0000E188 <dynamicarray.include.ab3@63> XINCLUDE "translation.include.ab3"
0000E1A6 <dynamicarray.include.ab3@99> XINCLUDE "translation.include.ab3"
0000E1C0 <dynamicarray.include.ab3@101> XINCLUDE "translation.include.ab3"
0000E1E0 <dynamicarray.include.ab3@102> XINCLUDE "translation.include.ab3"
0000E1EA <dynamicarray.include.ab3@103> XINCLUDE "translation.include.ab3"
0000E1F8 <dynamicarray.include.ab3@104> XINCLUDE "translation.include.ab3"
0000E204 <dynamicarray.include.ab3@105> XINCLUDE "translation.include.ab3"
0000E212 <dynamicarray.include.ab3@106> XINCLUDE "translation.include.ab3"
0000E21E <dynamicarray.include.ab3@107> XINCLUDE "translation.include.ab3"
0000E22A <dynamicarray.include.ab3@108> XINCLUDE "translation.include.ab3"
0000E23C <dynamicarray.include.ab3@109> XINCLUDE "translation.include.ab3"
0000E24C <dynamicarray.include.ab3@110> XINCLUDE "translation.include.ab3"
0000E256 <dynamicarray.include.ab3@113> XINCLUDE "translation.include.ab3"
0000E25C <dynamicarray.include.ab3@114> XINCLUDE "translation.include.ab3"
0000E276 <dynamicarray.include.ab3@425> XINCLUDE "translation.include.ab3"
0000E280 <dynamicarray.include.ab3@427> XINCLUDE "translation.include.ab3"
0000E28A <dynamicarray.include.ab3@428> XINCLUDE "translation.include.ab3"
0000E29A <dynamicarray.include.ab3@429> XINCLUDE "translation.include.ab3"
0000E2A4 <dynamicarray.include.ab3@430> XINCLUDE "translation.include.ab3"
0000E2B6 <dynamicarray.include.ab3@431> XINCLUDE "translation.include.ab3"
0000E2CC <dynamicarray.include.ab3@432> XINCLUDE "translation.include.ab3"
0000E2D6 <dynamicarray.include.ab3@433> XINCLUDE "translation.include.ab3"
0000E2DC <dynamicarray.include.ab3@435> XINCLUDE "translation.include.ab3"
0000E2E0 <dynamicarray.include.ab3@437> XINCLUDE "translation.include.ab3"
0000E2F6 <dynamicarray.include.ab3@531> XINCLUDE "translation.include.ab3"
0000E2FC <dynamicarray.include.ab3@533> XINCLUDE "translation.include.ab3"
0000E306 <dynamicarray.include.ab3@535> XINCLUDE "translation.include.ab3"
0000E33C <dynamicarray.include.ab3@536> XINCLUDE "translation.include.ab3"
0000E346 <dynamicarray.include.ab3@537> XINCLUDE "translation.include.ab3"
0000E34A <dynamicarray.include.ab3@538> XINCLUDE "translation.include.ab3"
0000E378 <dynamicarray.include.ab3@539> XINCLUDE "translation.include.ab3"
0000E378 <prefixtree.include.ab3@156> XINCLUDE "translation.include.ab3"
0000E392 <prefixtree.include.ab3@221> XINCLUDE "translation.include.ab3"
0000E39C <prefixtree.include.ab3@223> XINCLUDE "translation.include.ab3"
0000E3C4 <prefixtree.include.ab3@224> XINCLUDE "translation.include.ab3"
0000E3E6 <prefixtree.include.ab3@225> XINCLUDE "translation.include.ab3"
0000E3FE <prefixtree.include.ab3@226> XINCLUDE "translation.include.ab3"
0000E414 <prefixtree.include.ab3@227> XINCLUDE "translation.include.ab3"
0000E418 <prefixtree.include.ab3@230> XINCLUDE "translation.include.ab3"
0000E432 <prefixtree.include.ab3@283> XINCLUDE "translation.include.ab3"
0000E452 <prefixtree.include.ab3@284> XINCLUDE "translation.include.ab3"
0000E45C <prefixtree.include.ab3@285> XINCLUDE "translation.include.ab3"
0000E476 <prefixtree.include.ab3@286> XINCLUDE "translation.include.ab3"
0000E484 <prefixtree.include.ab3@287> XINCLUDE "translation.include.ab3"
0000E492 <prefixtree.include.ab3@288> XINCLUDE "translation.include.ab3"
0000E4A0 <prefixtree.include.ab3@289> XINCLUDE "translation.include.ab3"
0000E4AE <prefixtree.include.ab3@290> XINCLUDE "translation.include.ab3"
0000E4BA <prefixtree.include.ab3@291> XINCLUDE "translation.include.ab3"
0000E4C4 <prefixtree.include.ab3@292> XINCLUDE "translation.include.ab3"
0000E4D2 <prefixtree.include.ab3@293> XINCLUDE "translation.include.ab3"
0000E4E0 <prefixtree.include.ab3@294> XINCLUDE "translation.include.ab3"
0000E4EE <prefixtree.include.ab3@295> XINCLUDE "translation.include.ab3"
0000E508 <prefixtree.include.ab3@296> XINCLUDE "translation.include.ab3"
0000E516 <prefixtree.include.ab3@297> XINCLUDE "translation.include.ab3"
0000E526 <prefixtree.include.ab3@298> XINCLUDE "translation.include.ab3"
0000E536 <prefixtree.include.ab3@299> XINCLUDE "translation.include.ab3"
0000E546 <prefixtree.include.ab3@300> XINCLUDE "translation.include.ab3"
0000E554 <prefixtree.include.ab3@301> XINCLUDE "translation.include.ab3"
0000E55E <prefixtree.include.ab3@303> XINCLUDE "translation.include.ab3"
0000E564 <prefixtree.include.ab3@304> XINCLUDE "translation.include.ab3"
0000E582 <prefixtree.include.ab3@322> XINCLUDE "translation.include.ab3"
0000E588 <prefixtree.include.ab3@323> XINCLUDE "translation.include.ab3"
0000E592 <prefixtree.include.ab3@324> XINCLUDE "translation.include.ab3"
0000E5B2 <prefixtree.include.ab3@325> XINCLUDE "translation.include.ab3"
0000E5E0 <prefixtree.include.ab3@326> XINCLUDE "translation.include.ab3"
0000E5FE <prefixtree.include.ab3@327> XINCLUDE "translation.include.ab3"
0000E608 <prefixtree.include.ab3@328> XINCLUDE "translation.include.ab3"
0000E61A <prefixtree.include.ab3@329> XINCLUDE "translation.include.ab3"
0000E646 <prefixtree.include.ab3@330> XINCLUDE "translation.include.ab3"
0000E65C <prefixtree.include.ab3@331> XINCLUDE "translation.include.ab3"
0000E668 <prefixtree.include.ab3@333> XINCLUDE "translation.include.ab3"
0000E674 <prefixtree.include.ab3@334> XINCLUDE "translation.include.ab3"
0000E67A <prefixtree.include.ab3@335> XINCLUDE "translation.include.ab3"
0000E680 <prefixtree.include.ab3@336> XINCLUDE "translation.include.ab3"
0000E686 <prefixtree.include.ab3@337> XINCLUDE "translation.include.ab3"
0000E6BE <prefixtree.include.ab3@338> XINCLUDE "translation.include.ab3"
0000E6C4 <prefixtree.include.ab3@340> XINCLUDE "translation.include.ab3"
0000E6CA <prefixtree.include.ab3@341> XINCLUDE "translation.include.ab3"
0000E6D4 <prefixtree.include.ab3@344> XINCLUDE "translation.include.ab3"
0000E6DA <prefixtree.include.ab3@345> XINCLUDE "translation.include.ab3"
0000E70C <prefixtree.include.ab3@365> XINCLUDE "translation.include.ab3"
0000E728 <prefixtree.include.ab3@366> XINCLUDE "translation.include.ab3"
0000E742 <prefixtree.include.ab3@367> XINCLUDE "translation.include.ab3"
0000E756 <prefixtree.include.ab3@368> XINCLUDE "translation.include.ab3"
0000E7A6 <prefixtree.include.ab3@369> XINCLUDE "translation.include.ab3"
0000E7C8 <prefixtree.include.ab3@371> XINCLUDE "translation.include.ab3"
0000E7DC <prefixtree.include.ab3@372> XINCLUDE "translation.include.ab3"
0000E7EA <prefixtree.include.ab3@373> XINCLUDE "translation.include.ab3"
0000E7F6 <prefixtree.include.ab3@374> XINCLUDE "translation.include.ab3"
0000E7FE <prefixtree.include.ab3@375> XINCLUDE "translation.include.ab3"
0000E806 <prefixtree.include.ab3@376> XINCLUDE "translation.include.ab3"
0000E80E <prefixtree.include.ab3@377> XINCLUDE "translation.include.ab3"
0000E816 <prefixtree.include.ab3@378> XINCLUDE "translation.include.ab3"
0000E81C <prefixtree.include.ab3@379> XINCLUDE "translation.include.ab3"
0000E82A <prefixtree.include.ab3@380> XINCLUDE "translation.include.ab3"
0000E84C <prefixtree.include.ab3@382> XINCLUDE "translation.include.ab3"
0000E878 <prefixtree.include.ab3@383> XINCLUDE "translation.include.ab3"
0000E88A <prefixtree.include.ab3@385> XINCLUDE "translation.include.ab3"
0000E890 <prefixtree.include.ab3@386> XINCLUDE "translation.include.ab3"
0000E8B8 <prefixtree.include.ab3@388> XINCLUDE "translation.include.ab3"
0000E8DC <prefixtree.include.ab3@389> XINCLUDE "translation.include.ab3"
0000E904 <prefixtree.include.ab3@390> XINCLUDE "translation.include.ab3"
0000E938 <prefixtree.include.ab3@391> XINCLUDE "translation.include.ab3"
0000E948 <prefixtree.include.ab3@392> XINCLUDE "translation.include.ab3"
0000E952 <prefixtree.include.ab3@393> XINCLUDE "translation.include.ab3"
0000E960 <prefixtree.include.ab3@394> XINCLUDE "translation.include.ab3"
0000E974 <prefixtree.include.ab3@395> XINCLUDE "translation.include.ab3"
0000E97A <prefixtree.include.ab3@396> XINCLUDE "translation.include.ab3"
0000E99A <prefixtree.include.ab3@397> XINCLUDE "translation.include.ab3"
0000E9A0 <prefixtree.include.ab3@398> XINCLUDE "translation.include.ab3"
0000E9A8 <prefixtree.include.ab3@400> XINCLUDE "translation.include.ab3"
0000E9E2 <prefixtree.include.ab3@402> XINCLUDE "translation.include.ab3"
0000EA08 <prefixtree.include.ab3@403> XINCLUDE "translation.include.ab3"
0000EA20 <prefixtree.include.ab3@404> XINCLUDE "translation.include.ab3"
0000EA54 <prefixtree.include.ab3@405> XINCLUDE "translation.include.ab3"
0000EA5C <prefixtree.include.ab3@406> XINCLUDE "translation.include.ab3"
0000EA6A <prefixtree.include.ab3@408> XINCLUDE "translation.include.ab3"
0000EA70 <prefixtree.include.ab3@410> XINCLUDE "translation.include.ab3"
0000EA88 <prefixtree.include.ab3@411> XINCLUDE "translation.include.ab3"
0000EA8E <prefixtree.include.ab3@412> XINCLUDE "translation.include.ab3"
0000EA94 <prefixtree.include.ab3@413> XINCLUDE "translation.include.ab3"
0000EAAE <prefixtree.include.ab3@414> XINCLUDE "translation.include.ab3"
0000EAB4 <prefixtree.include.ab3@417> XINCLUDE "translation.include.ab3"
0000EABA <prefixtree.include.ab3@419> XINCLUDE "translation.include.ab3"
0000EAC0 <prefixtree.include.ab3@421> XINCLUDE "translation.include.ab3"
0000EACE <prefixtree.include.ab3@422> XINCLUDE "translation.include.ab3"
0000EADC <prefixtree.include.ab3@423> XINCLUDE "translation.include.ab3"
0000EB16 <prefixtree.include.ab3@425> XINCLUDE "translation.include.ab3"
0000EB3C <prefixtree.include.ab3@426> XINCLUDE "translation.include.ab3"
0000EB54 <prefixtree.include.ab3@427> XINCLUDE "translation.include.ab3"
0000EB60 <prefixtree.include.ab3@430> XINCLUDE "translation.include.ab3"
0000EB6C <prefixtree.include.ab3@431> XINCLUDE "translation.include.ab3"
0000EB78 <prefixtree.include.ab3@432> XINCLUDE "translation.include.ab3"
0000EB84 <prefixtree.include.ab3@433> XINCLUDE "translation.include.ab3"
0000EB90 <prefixtree.include.ab3@434> XINCLUDE "translation.include.ab3"
0000EB9A <prefixtree.include.ab3@435> XINCLUDE "translation.include.ab3"
0000EBA2 <prefixtree.include.ab3@437> XINCLUDE "translation.include.ab3"
0000EBBC <prefixtree.include.ab3@438> XINCLUDE "translation.include.ab3"
0000EBFA <prefixtree.include.ab3@485> XINCLUDE "translation.include.ab3"
0000EC00 <prefixtree.include.ab3@486> XINCLUDE "translation.include.ab3"
0000EC66 <prefixtree.include.ab3@487> XINCLUDE "translation.include.ab3"
0000ECA6 <prefixtree.include.ab3@489> XINCLUDE "translation.include.ab3"
0000ECFC <prefixtree.include.ab3@490> XINCLUDE "translation.include.ab3"
0000ED6E <prefixtree.include.ab3@491> XINCLUDE "translation.include.ab3"
0000ED7A <prefixtree.include.ab3@493> XINCLUDE "translation.include.ab3"
0000ED88 <prefixtree.include.ab3@494> XINCLUDE "translation.include.ab3"
0000EDCE <prefixtree.include.ab3@495> XINCLUDE "translation.include.ab3"
0000EE18 <prefixtree.include.ab3@496> XINCLUDE "translation.include.ab3"
0000EE50 <prefixtree.include.ab3@497> XINCLUDE "translation.include.ab3"
0000EEA4 <prefixtree.include.ab3@498> XINCLUDE "translation.include.ab3"
0000EEAA <prefixtree.include.ab3@499> XINCLUDE "translation.include.ab3"
0000EEB0 <prefixtree.include.ab3@500> XINCLUDE "translation.include.ab3"
0000EEBE <prefixtree.include.ab3@502> XINCLUDE "translation.include.ab3"
0000EEC6 <prefixtree.include.ab3@503> XINCLUDE "translation.include.ab3"
0000EF00 <prefixtree.include.ab3@505> XINCLUDE "translation.include.ab3"
0000EF26 <prefixtree.include.ab3@506> XINCLUDE "translation.include.ab3"
0000EF3E <prefixtree.include.ab3@507> XINCLUDE "translation.include.ab3"
0000EF74 <prefixtree.include.ab3@508> XINCLUDE "translation.include.ab3"
0000EF8A <prefixtree.include.ab3@509> XINCLUDE "translation.include.ab3"
0000EF98 <prefixtree.include.ab3@511> XINCLUDE "translation.include.ab3"
0000EFB0 <prefixtree.include.ab3@512> XINCLUDE "translation.include.ab3"
0000EFE8 <prefixtree.include.ab3@513> XINCLUDE "translation.include.ab3"
0000F00E <prefixtree.include.ab3@514> XINCLUDE "translation.include.ab3"
0000F056 <prefixtree.include.ab3@515> XINCLUDE "translation.include.ab3"
0000F05C <prefixtree.include.ab3@516> XINCLUDE "translation.include.ab3"
0000F076 <prefixtree.include.ab3@518> XINCLUDE "translation.include.ab3"
0000F082 <prefixtree.include.ab3@519> XINCLUDE "translation.include.ab3"
0000F088 <prefixtree.include.ab3@520> XINCLUDE "translation.include.ab3"
0000F0B4 <prefixtree.include.ab3@521> XINCLUDE "translation.include.ab3"
0000F0C8 <prefixtree.include.ab3@526> XINCLUDE "translation.include.ab3"
0000F0D6 <prefixtree.include.ab3@528> XINCLUDE "translation.include.ab3"
0000F0DE <prefixtree.include.ab3@529> XINCLUDE "translation.include.ab3"
0000F118 <prefixtree.include.ab3@531> XINCLUDE "translation.include.ab3"
0000F13E <prefixtree.include.ab3@532> XINCLUDE "translation.include.ab3"
0000F156 <prefixtree.include.ab3@533> XINCLUDE "translation.include.ab3"
0000F190 <prefixtree.include.ab3@534> XINCLUDE "translation.include.ab3"
0000F1BA <prefixtree.include.ab3@535> XINCLUDE "translation.include.ab3"
0000F1D2 <prefixtree.include.ab3@536> XINCLUDE "translation.include.ab3"
0000F202 <prefixtree.include.ab3@537> XINCLUDE "translation.include.ab3"
0000F22E <prefixtree.include.ab3@538> XINCLUDE "translation.include.ab3"
0000F24A <prefixtree.include.ab3@539> XINCLUDE "translation.include.ab3"
0000F258 <prefixtree.include.ab3@541> XINCLUDE "translation.include.ab3"
0000F266 <prefixtree.include.ab3@542> XINCLUDE "translation.include.ab3"
0000F2A4 <prefixtree.include.ab3@543> XINCLUDE "translation.include.ab3"
0000F2E0 <prefixtree.include.ab3@544> XINCLUDE "translation.include.ab3"
0000F34C <prefixtree.include.ab3@545> XINCLUDE "translation.include.ab3"
0000F37A <prefixtree.include.ab3@546> XINCLUDE "translation.include.ab3"
0000F3A8 <prefixtree.include.ab3@547> XINCLUDE "translation.include.ab3"
0000F3F0 <prefixtree.include.ab3@548> XINCLUDE "translation.include.ab3"
0000F40A <prefixtree.include.ab3@551> XINCLUDE "translation.include.ab3"
0000F452 <prefixtree.include.ab3@552> XINCLUDE "translation.include.ab3"
0000F470 <prefixtree.include.ab3@553> XINCLUDE "translation.include.ab3"
0000F48E <prefixtree.include.ab3@554> XINCLUDE "translation.include.ab3"
0000F4A8 <prefixtree.include.ab3@557> XINCLUDE "translation.include.ab3"
0000F4B4 <prefixtree.include.ab3@558> XINCLUDE "translation.include.ab3"
0000F4BA <prefixtree.include.ab3@559> XINCLUDE "translation.include.ab3"
0000F4E6 <prefixtree.include.ab3@560> XINCLUDE "translation.include.ab3"
0000F4FE <prefixtree.include.ab3@562> XINCLUDE "translation.include.ab3"
0000F504 <prefixtree.include.ab3@563> XINCLUDE "translation.include.ab3"
0000F518 <prefixtree.include.ab3@566> XINCLUDE "translation.include.ab3"
0000F526 <prefixtree.include.ab3@568> XINCLUDE "translation.include.ab3"
0000F534 <prefixtree.include.ab3@569> XINCLUDE "translation.include.ab3"
0000F542 <prefixtree.include.ab3@570> XINCLUDE "translation.include.ab3"
0000F54A <prefixtree.include.ab3@571> XINCLUDE "translation.include.ab3"
0000F576 <prefixtree.include.ab3@572> XINCLUDE "translation.include.ab3"
0000F59E <prefixtree.include.ab3@573> XINCLUDE "translation.include.ab3"
0000F5C6 <prefixtree.include.ab3@574> XINCLUDE "translation.include.ab3"
0000F632 <prefixtree.include.ab3@575> XINCLUDE "translation.include.ab3"
0000F642 <prefixtree.include.ab3@576> XINCLUDE "translation.include.ab3"
0000F66E <prefixtree.include.ab3@577> XINCLUDE "translation.include.ab3"
0000F6C4 <prefixtree.include.ab3@579> XINCLUDE "translation.include.ab3"
0000F6D2 <prefixtree.include.ab3@580> XINCLUDE "translation.include.ab3"
0000F6E0 <prefixtree.include.ab3@581> XINCLUDE "translation.include.ab3"
0000F6E6 <prefixtree.include.ab3@582> XINCLUDE "translation.include.ab3"
0000F73A <prefixtree.include.ab3@584> XINCLUDE "translation.include.ab3"
0000F85A <prefixtree.include.ab3@585> XINCLUDE "translation.include.ab3"
0000F8AA <prefixtree.include.ab3@587> XINCLUDE "translation.include.ab3"
0000F900 <prefixtree.include.ab3@588> XINCLUDE "translation.include.ab3"
0000F96C <prefixtree.include.ab3@589> XINCLUDE "translation.include.ab3"
0000F974 <prefixtree.include.ab3@593> XINCLUDE "translation.include.ab3"
0000F9AE <prefixtree.include.ab3@595> XINCLUDE "translation.include.ab3"
0000F9D4 <prefixtree.include.ab3@596> XINCLUDE "translation.include.ab3"
0000F9EC <prefixtree.include.ab3@597> XINCLUDE "translation.include.ab3"
0000FA26 <prefixtree.include.ab3@598> XINCLUDE "translation.include.ab3"
0000FA50 <prefixtree.include.ab3@599> XINCLUDE "translation.include.ab3"
0000FA68 <prefixtree.include.ab3@600> XINCLUDE "translation.include.ab3"
0000FA8C <prefixtree.include.ab3@602> XINCLUDE "translation.include.ab3"
0000FAE0 <prefixtree.include.ab3@603> XINCLUDE "translation.include.ab3"
0000FAE8 <prefixtree.include.ab3@604> XINCLUDE "translation.include.ab3"
0000FAEE <prefixtree.include.ab3@605> XINCLUDE "translation.include.ab3"
0000FB50 <prefixtree.include.ab3@606> XINCLUDE "translation.include.ab3"
0000FB7C <prefixtree.include.ab3@607> XINCLUDE "translation.include.ab3"
0000FB98 <prefixtree.include.ab3@610> XINCLUDE "translation.include.ab3"
0000FBA6 <prefixtree.include.ab3@612> XINCLUDE "translation.include.ab3"
0000FBB4 <prefixtree.include.ab3@613> XINCLUDE "translation.include.ab3"
0000FBC2 <prefixtree.include.ab3@615> XINCLUDE "translation.include.ab3"
0000FBD0 <prefixtree.include.ab3@616> XINCLUDE "translation.include.ab3"
0000FC14 <prefixtree.include.ab3@617> XINCLUDE "translation.include.ab3"
0000FC80 <prefixtree.include.ab3@618> XINCLUDE "translation.include.ab3"
0000FCAE <prefixtree.include.ab3@619> XINCLUDE "translation.include.ab3"
0000FCC2 <prefixtree.include.ab3@620> XINCLUDE "translation.include.ab3"
0000FCF4 <prefixtree.include.ab3@621> XINCLUDE "translation.include.ab3"
0000FD3E <prefixtree.include.ab3@622> XINCLUDE "translation.include.ab3"
0000FD4E <prefixtree.include.ab3@623> XINCLUDE "translation.include.ab3"
0000FD82 <prefixtree.include.ab3@624> XINCLUDE "translation.include.ab3"
0000FDA4 <prefixtree.include.ab3@625> XINCLUDE "translation.include.ab3"
0000FDB4 <prefixtree.include.ab3@626> XINCLUDE "translation.include.ab3"
0000FDBC <prefixtree.include.ab3@629> XINCLUDE "translation.include.ab3"
0000FE00 <prefixtree.include.ab3@630> XINCLUDE "translation.include.ab3"
0000FE6C <prefixtree.include.ab3@631> XINCLUDE "translation.include.ab3"
0000FE9A <prefixtree.include.ab3@632> XINCLUDE "translation.include.ab3"
0000FEBE <prefixtree.include.ab3@634> XINCLUDE "translation.include.ab3"
0000FF02 <prefixtree.include.ab3@635> XINCLUDE "translation.include.ab3"
0000FF6E <prefixtree.include.ab3@636> XINCLUDE "translation.include.ab3"
0000FF9C <prefixtree.include.ab3@637> XINCLUDE "translation.include.ab3"
0000FFCA <prefixtree.include.ab3@638> XINCLUDE "translation.include.ab3"
0000FFD2 <prefixtree.include.ab3@639> XINCLUDE "translation.include.ab3"
00010000 <prefixtree.include.ab3@640> XINCLUDE "translation.include.ab3"
00010072 <prefixtree.include.ab3@641> XINCLUDE "translation.include.ab3"
00010078 <prefixtree.include.ab3@642> XINCLUDE "translation.include.ab3"
000100A6 <prefixtree.include.ab3@643> XINCLUDE "translation.include.ab3"
00010118 <prefixtree.include.ab3@644> XINCLUDE "translation.include.ab3"
00010136 <prefixtree.include.ab3@647> XINCLUDE "translation.include.ab3"
0001015A <prefixtree.include.ab3@648> XINCLUDE "translation.include.ab3"
00010172 <prefixtree.include.ab3@649> XINCLUDE "translation.include.ab3"
00010178 <prefixtree.include.ab3@650> XINCLUDE "translation.include.ab3"
0001017E <prefixtree.include.ab3@653> XINCLUDE "translation.include.ab3"
00010180 <prefixtree.include.ab3@655> XINCLUDE "translation.include.ab3"
0001018A <prefixtree.include.ab3@658> XINCLUDE "translation.include.ab3"
000101B6 <prefixtree.include.ab3@659> XINCLUDE "translation.include.ab3"
000101D8 <prefixtree.include.ab3@677> XINCLUDE "translation.include.ab3"
000101E0 <prefixtree.include.ab3@679> XINCLUDE "translation.include.ab3"
000101E6 <prefixtree.include.ab3@680> XINCLUDE "translation.include.ab3"
000101F4 <prefixtree.include.ab3@681> XINCLUDE "translation.include.ab3"
0001022E <prefixtree.include.ab3@683> XINCLUDE "translation.include.ab3"
00010254 <prefixtree.include.ab3@684> XINCLUDE "translation.include.ab3"
0001026C <prefixtree.include.ab3@685> XINCLUDE "translation.include.ab3"
000102A6 <prefixtree.include.ab3@686> XINCLUDE "translation.include.ab3"
000102D0 <prefixtree.include.ab3@687> XINCLUDE "translation.include.ab3"
000102E8 <prefixtree.include.ab3@689> XINCLUDE "translation.include.ab3"
00010300 <prefixtree.include.ab3@690> XINCLUDE "translation.include.ab3"
00010338 <prefixtree.include.ab3@691> XINCLUDE "translation.include.ab3"
00010340 <prefixtree.include.ab3@693> XINCLUDE "translation.include.ab3"
0001037A <prefixtree.include.ab3@695> XINCLUDE "translation.include.ab3"
0001038C <prefixtree.include.ab3@697> XINCLUDE "translation.include.ab3"
000103B2 <prefixtree.include.ab3@698> XINCLUDE "translation.include.ab3"
000103C8 <prefixtree.include.ab3@699> XINCLUDE "translation.include.ab3"
000103EE <prefixtree.include.ab3@700> XINCLUDE "translation.include.ab3"
00010402 <prefixtree.include.ab3@701> XINCLUDE "translation.include.ab3"
0001041A <prefixtree.include.ab3@703> XINCLUDE "translation.include.ab3"
0001042C <prefixtree.include.ab3@705> XINCLUDE "translation.include.ab3"
00010436 <prefixtree.include.ab3@707> XINCLUDE "translation.include.ab3"
0001044A <prefixtree.include.ab3@709> XINCLUDE "translation.include.ab3"
00010464 <prefixtree.include.ab3@726> XINCLUDE "translation.include.ab3"
00010480 <prefixtree.include.ab3@728> XINCLUDE "translation.include.ab3"
00010492 <prefixtree.include.ab3@729> XINCLUDE "translation.include.ab3"
000104AE <prefixtree.include.ab3@730> XINCLUDE "translation.include.ab3"
000104EA <prefixtree.include.ab3@731> XINCLUDE "translation.include.ab3"
00010506 <prefixtree.include.ab3@732> XINCLUDE "translation.include.ab3"
00010526 <prefixtree.include.ab3@733> XINCLUDE "translation.include.ab3"
00010530 <prefixtree.include.ab3@734> XINCLUDE "translation.include.ab3"
00010536 <prefixtree.include.ab3@735> XINCLUDE "translation.include.ab3"
00010540 <prefixtree.include.ab3@736> XINCLUDE "translation.include.ab3"
00010548 <prefixtree.include.ab3@738> XINCLUDE "translation.include.ab3"
0001054E <prefixtree.include.ab3@740> XINCLUDE "translation.include.ab3"
0001057C <prefixtree.include.ab3@759> XINCLUDE "translation.include.ab3"
000105A4 <prefixtree.include.ab3@760> XINCLUDE "translation.include.ab3"
000105E4 <prefixtree.include.ab3@761> XINCLUDE "translation.include.ab3"
000105FC <prefixtree.include.ab3@762> XINCLUDE "translation.include.ab3"
00010642 <prefixtree.include.ab3@763> XINCLUDE "translation.include.ab3"
0001066C <prefixtree.include.ab3@766> XINCLUDE "translation.include.ab3"
0001069A <prefixtree.include.ab3@767> XINCLUDE "translation.include.ab3"
000106B4 <prefixtree.include.ab3@966> XINCLUDE "translation.include.ab3"
000106BA <prefixtree.include.ab3@967> XINCLUDE "translation.include.ab3"
000106D2 <prefixtree.include.ab3@968> XINCLUDE "translation.include.ab3"
000106DC <prefixtree.include.ab3@969> XINCLUDE "translation.include.ab3"
000106EE <prefixtree.include.ab3@970> XINCLUDE "translation.include.ab3"
00010726 <prefixtree.include.ab3@971> XINCLUDE "translation.include.ab3"
00010734 <prefixtree.include.ab3@972> XINCLUDE "translation.include.ab3"
00010740 <prefixtree.include.ab3@973> XINCLUDE "translation.include.ab3"
0001075C <prefixtree.include.ab3@974> XINCLUDE "translation.include.ab3"
0001077E <prefixtree.include.ab3@975> XINCLUDE "translation.include.ab3"
000107A0 <prefixtree.include.ab3@976> XINCLUDE "translation.include.ab3"
000107C2 <prefixtree.include.ab3@977> XINCLUDE "translation.include.ab3"
000107E4 <prefixtree.include.ab3@978> XINCLUDE "translation.include.ab3"
00010800 <prefixtree.include.ab3@979> XINCLUDE "translation.include.ab3"
0001081E <prefixtree.include.ab3@980> XINCLUDE "translation.include.ab3"
00010832 <prefixtree.include.ab3@981> XINCLUDE "translation.include.ab3"
00010838 <prefixtree.include.ab3@983> XINCLUDE "translation.include.ab3"
0001083A <prefixtree.include.ab3@985> XINCLUDE "translation.include.ab3"
00010840 <prefixtree.include.ab3@986> XINCLUDE "translation.include.ab3"
0001084A <prefixtree.include.ab3@988> XINCLUDE "translation.include.ab3"
00010850 <prefixtree.include.ab3@989> XINCLUDE "translation.include.ab3"
0001086E <prefixtree.include.ab3@1007> XINCLUDE "translation.include.ab3"
00010874 <prefixtree.include.ab3@1008> XINCLUDE "translation.include.ab3"
00010898 <prefixtree.include.ab3@1009> XINCLUDE "translation.include.ab3"
000108B6 <prefixtree.include.ab3@1010> XINCLUDE "translation.include.ab3"
000108E4 <prefixtree.include.ab3@1011> XINCLUDE "translation.include.ab3"
00010912 <prefixtree.include.ab3@1012> XINCLUDE "translation.include.ab3"
00010940 <prefixtree.include.ab3@1013> XINCLUDE "translation.include.ab3"
0001096E <prefixtree.include.ab3@1014> XINCLUDE "translation.include.ab3"
000109A2 <prefixtree.include.ab3@1015> XINCLUDE "translation.include.ab3"
000109B2 <prefixtree.include.ab3@1016> XINCLUDE "translation.include.ab3"
000109BC <prefixtree.include.ab3@1018> XINCLUDE "translation.include.ab3"
000109C2 <prefixtree.include.ab3@1019> XINCLUDE "translation.include.ab3"
000109C2 <phrasebook.include.ab3@34> XINCLUDE "translation.include.ab3"
00010A0C <phrasebook.include.ab3@58> XINCLUDE "translation.include.ab3"
00010A2C <phrasebook.include.ab3@59> XINCLUDE "translation.include.ab3"
00010A36 <phrasebook.include.ab3@60> XINCLUDE "translation.include.ab3"
00010A4A <phrasebook.include.ab3@61> XINCLUDE "translation.include.ab3"
00010A90 <phrasebook.include.ab3@62> XINCLUDE "translation.include.ab3"
00010AD6 <phrasebook.include.ab3@63> XINCLUDE "translation.include.ab3"
00010B1C <phrasebook.include.ab3@64> XINCLUDE "translation.include.ab3"
00010B26 <phrasebook.include.ab3@66> XINCLUDE "translation.include.ab3"
00010B42 <phrasebook.include.ab3@67> XINCLUDE "translation.include.ab3"
00010B6C <phrasebook.include.ab3@70> XINCLUDE "translation.include.ab3"
00010BEA <phrasebook.include.ab3@71> XINCLUDE "translation.include.ab3"
00010C68 <phrasebook.include.ab3@72> XINCLUDE "translation.include.ab3"
00010CE6 <phrasebook.include.ab3@73> XINCLUDE "translation.include.ab3"
00010D64 <phrasebook.include.ab3@74> XINCLUDE "translation.include.ab3"
00010DE2 <phrasebook.include.ab3@75> XINCLUDE "translation.include.ab3"
00010E60 <phrasebook.include.ab3@76> XINCLUDE "translation.include.ab3"
00010EDE <phrasebook.include.ab3@77> XINCLUDE "translation.include.ab3"
00010F5C <phrasebook.include.ab3@78> XINCLUDE "translation.include.ab3"
00010FDA <phrasebook.include.ab3@79> XINCLUDE "translation.include.ab3"
00011058 <phrasebook.include.ab3@80> XINCLUDE "translation.include.ab3"
000110DC <phrasebook.include.ab3@81> XINCLUDE "translation.include.ab3"
0001110C <phrasebook.include.ab3@82> XINCLUDE "translation.include.ab3"
00011168 <phrasebook.include.ab3@84> XINCLUDE "translation.include.ab3"
00011194 <phrasebook.include.ab3@85> XINCLUDE "translation.include.ab3"
0001125E <phrasebook.include.ab3@86> XINCLUDE "translation.include.ab3"
0001126C <phrasebook.include.ab3@88> XINCLUDE "translation.include.ab3"
000112AA <phrasebook.include.ab3@89> XINCLUDE "translation.include.ab3"
0001132E <phrasebook.include.ab3@90> XINCLUDE "translation.include.ab3"
00011358 <phrasebook.include.ab3@91> XINCLUDE "translation.include.ab3"
00011376 <phrasebook.include.ab3@92> XINCLUDE "translation.include.ab3"
00011390 <phrasebook.include.ab3@106> XINCLUDE "translation.include.ab3"
0001139A <phrasebook.include.ab3@107> XINCLUDE "translation.include.ab3"
000113A6 <phrasebook.include.ab3@108> XINCLUDE "translation.include.ab3"
000113B6 <phrasebook.include.ab3@109> XINCLUDE "translation.include.ab3"
000113C6 <phrasebook.include.ab3@110> XINCLUDE "translation.include.ab3"
000113D6 <phrasebook.include.ab3@111> XINCLUDE "translation.include.ab3"
000113E6 <phrasebook.include.ab3@112> XINCLUDE "translation.include.ab3"
000113EA <phrasebook.include.ab3@114> XINCLUDE "translation.include.ab3"
00011428 <phrasebook.include.ab3@131> XINCLUDE "translation.include.ab3"
00011480 <phrasebook.include.ab3@132> XINCLUDE "translation.include.ab3"
000114DC <phrasebook.include.ab3@133> XINCLUDE "translation.include.ab3"
00011566 <phrasebook.include.ab3@134> XINCLUDE "translation.include.ab3"
000115E4 <phrasebook.include.ab3@135> XINCLUDE "translation.include.ab3"
000115FE <phrasebook.include.ab3@137> XINCLUDE "translation.include.ab3"
0001162C <phrasebook.include.ab3@155> XINCLUDE "translation.include.ab3"
00011668 <phrasebook.include.ab3@156> XINCLUDE "translation.include.ab3"
00011736 <phrasebook.include.ab3@158> XINCLUDE "translation.include.ab3"
00011804 <phrasebook.include.ab3@159> XINCLUDE "translation.include.ab3"
00011850 <phrasebook.include.ab3@161> XINCLUDE "translation.include.ab3"
000118CE <phrasebook.include.ab3@162> XINCLUDE "translation.include.ab3"
0001194C <phrasebook.include.ab3@163> XINCLUDE "translation.include.ab3"
000119AA <phrasebook.include.ab3@165> XINCLUDE "translation.include.ab3"
00011A40 <phrasebook.include.ab3@166> XINCLUDE "translation.include.ab3"
00011A78 <phrasebook.include.ab3@168> XINCLUDE "translation.include.ab3"
00011AD6 <phrasebook.include.ab3@169> XINCLUDE "translation.include.ab3"
00011B5E <phrasebook.include.ab3@170> XINCLUDE "translation.include.ab3"
00011B66 <phrasebook.include.ab3@172> XINCLUDE "translation.include.ab3"
00011BD0 <phrasebook.include.ab3@174> XINCLUDE "translation.include.ab3"
00011C3C <phrasebook.include.ab3@175> XINCLUDE "translation.include.ab3"
00011C7A <phrasebook.include.ab3@176> XINCLUDE "translation.include.ab3"
00011D02 <phrasebook.include.ab3@177> XINCLUDE "translation.include.ab3"
00011D2E <phrasebook.include.ab3@187> XINCLUDE "translation.include.ab3"
00011D8A <phrasebook.include.ab3@188> XINCLUDE "translation.include.ab3"
00011E52 <phrasebook.include.ab3@189> XINCLUDE "translation.include.ab3"
00011EB6 <phrasebook.include.ab3@190> XINCLUDE "translation.include.ab3"
00011EBC <phrasebook.include.ab3@191> XINCLUDE "translation.include.ab3"
00011EF0 <phrasebook.include.ab3@192> XINCLUDE "translation.include.ab3"
00011FBE <phrasebook.include.ab3@196> XINCLUDE "translation.include.ab3"
0001208C <phrasebook.include.ab3@197> XINCLUDE "translation.include.ab3"
000120B6 <phrasebook.include.ab3@199> XINCLUDE "translation.include.ab3"
000120D4 <phrasebook.include.ab3@200> XINCLUDE "translation.include.ab3"
00012102 <phrasebook.include.ab3@204> XINCLUDE "translation.include.ab3"
0001213E <phrasebook.include.ab3@205> XINCLUDE "translation.include.ab3"
000121AE <phrasebook.include.ab3@206> XINCLUDE "translation.include.ab3"
000121B6 <phrasebook.include.ab3@207> XINCLUDE "translation.include.ab3"
00012208 <phrasebook.include.ab3@208> XINCLUDE "translation.include.ab3"
00012230 <phrasebook.include.ab3@209> XINCLUDE "translation.include.ab3"
00012248 <phrasebook.include.ab3@210> XINCLUDE "translation.include.ab3"
000122FC <phrasebook.include.ab3@211> XINCLUDE "translation.include.ab3"
0001230A <phrasebook.include.ab3@212> XINCLUDE "translation.include.ab3"
00012360 <phrasebook.include.ab3@213> XINCLUDE "translation.include.ab3"
000123BE <phrasebook.include.ab3@214> XINCLUDE "translation.include.ab3"
000123C4 <phrasebook.include.ab3@215> XINCLUDE "translation.include.ab3"
00012448 <phrasebook.include.ab3@216> XINCLUDE "translation.include.ab3"
000124CC <phrasebook.include.ab3@217> XINCLUDE "translation.include.ab3"
00012550 <phrasebook.include.ab3@218> XINCLUDE "translation.include.ab3"
000125CE <phrasebook.include.ab3@219> XINCLUDE "translation.include.ab3"
0001264C <phrasebook.include.ab3@220> XINCLUDE "translation.include.ab3"
000126CA <phrasebook.include.ab3@221> XINCLUDE "translation.include.ab3"
00012748 <phrasebook.include.ab3@222> XINCLUDE "translation.include.ab3"
000127C6 <phrasebook.include.ab3@223> XINCLUDE "translation.include.ab3"
00012844 <phrasebook.include.ab3@224> XINCLUDE "translation.include.ab3"
000128C2 <phrasebook.include.ab3@225> XINCLUDE "translation.include.ab3"
000128EC <phrasebook.include.ab3@226> XINCLUDE "translation.include.ab3"
0001290A <phrasebook.include.ab3@227> XINCLUDE "translation.include.ab3"
00012938 <phrasebook.include.ab3@245> XINCLUDE "translation.include.ab3"
0001297C <phrasebook.include.ab3@246> XINCLUDE "translation.include.ab3"
00012982 <phrasebook.include.ab3@247> XINCLUDE "translation.include.ab3"
0001299C <phrasebook.include.ab3@248> XINCLUDE "translation.include.ab3"
000129B8 <phrasebook.include.ab3@249> XINCLUDE "translation.include.ab3"
000129EC <phrasebook.include.ab3@250> XINCLUDE "translation.include.ab3"
00012A10 <phrasebook.include.ab3@251> XINCLUDE "translation.include.ab3"
00012A38 <phrasebook.include.ab3@252> XINCLUDE "translation.include.ab3"
00012AA4 <phrasebook.include.ab3@253> XINCLUDE "translation.include.ab3"
00012B02 <phrasebook.include.ab3@256> XINCLUDE "translation.include.ab3"
00012B60 <phrasebook.include.ab3@257> XINCLUDE "translation.include.ab3"
00012BAC <phrasebook.include.ab3@258> XINCLUDE "translation.include.ab3"
00012C06 <phrasebook.include.ab3@259> XINCLUDE "translation.include.ab3"
00012C0C <phrasebook.include.ab3@260> XINCLUDE "translation.include.ab3"
00012C12 <phrasebook.include.ab3@262> XINCLUDE "translation.include.ab3"
00012C1C <phrasebook.include.ab3@263> XINCLUDE "translation.include.ab3"
00012C26 <phrasebook.include.ab3@264> XINCLUDE "translation.include.ab3"
00012C40 <phrasebook.include.ab3@265> XINCLUDE "translation.include.ab3"
00012C6E <phrasebook.include.ab3@282> XINCLUDE "translation.include.ab3"
00012C74 <phrasebook.include.ab3@283> XINCLUDE "translation.include.ab3"
00012CB8 <phrasebook.include.ab3@284> XINCLUDE "translation.include.ab3"
00012CD2 <phrasebook.include.ab3@285> XINCLUDE "translation.include.ab3"
00012CE2 <phrasebook.include.ab3@286> XINCLUDE "translation.include.ab3"
00012CEC <phrasebook.include.ab3@287> XINCLUDE "translation.include.ab3"
00012CF8 <phrasebook.include.ab3@288> XINCLUDE "translation.include.ab3"
00012D02 <phrasebook.include.ab3@289> XINCLUDE "translation.include.ab3"
00012D26 <phrasebook.include.ab3@292> XINCLUDE "translation.include.ab3"
00012D6E <phrasebook.include.ab3@293> XINCLUDE "translation.include.ab3"
00012DB6 <phrasebook.include.ab3@294> XINCLUDE "translation.include.ab3"
00012DFE <phrasebook.include.ab3@295> XINCLUDE "translation.include.ab3"
00012E14 <phrasebook.include.ab3@296> XINCLUDE "translation.include.ab3"
00012E28 <phrasebook.include.ab3@297> XINCLUDE "translation.include.ab3"
00012E32 <phrasebook.include.ab3@299> XINCLUDE "translation.include.ab3"
00012E3C <phrasebook.include.ab3@300> XINCLUDE "translation.include.ab3"
00012E56 <phrasebook.include.ab3@301> XINCLUDE "translation.include.ab3"
00012E80 <phrasebook.include.ab3@317> XINCLUDE "translation.include.ab3"
00012EC4 <phrasebook.include.ab3@318> XINCLUDE "translation.include.ab3"
00012EDE <phrasebook.include.ab3@319> XINCLUDE "translation.include.ab3"
00012F3C <phrasebook.include.ab3@320> XINCLUDE "translation.include.ab3"
00012F56 <phrasebook.include.ab3@321> XINCLUDE "translation.include.ab3"
00012F6E <phrasebook.include.ab3@323> XINCLUDE "translation.include.ab3"
00012F78 <phrasebook.include.ab3@324> XINCLUDE "translation.include.ab3"
00012F94 <phrasebook.include.ab3@325> XINCLUDE "translation.include.ab3"
00012FA2 <phrasebook.include.ab3@326> XINCLUDE "translation.include.ab3"
00012FAE <phrasebook.include.ab3@327> XINCLUDE "translation.include.ab3"
00012FFA <phrasebook.include.ab3@328> XINCLUDE "translation.include.ab3"
0001304C <phrasebook.include.ab3@329> XINCLUDE "translation.include.ab3"
0001309E <phrasebook.include.ab3@330> XINCLUDE "translation.include.ab3"
000130B2 <phrasebook.include.ab3@331> XINCLUDE "translation.include.ab3"
000130C2 <phrasebook.include.ab3@332> XINCLUDE "translation.include.ab3"
000130C8 <phrasebook.include.ab3@333> XINCLUDE "translation.include.ab3"
000130CA <phrasebook.include.ab3@335> XINCLUDE "translation.include.ab3"
000130D0 <phrasebook.include.ab3@336> XINCLUDE "translation.include.ab3"
000130DA <phrasebook.include.ab3@338> XINCLUDE "translation.include.ab3"
000130E4 <phrasebook.include.ab3@339> XINCLUDE "translation.include.ab3"
000130FE <phrasebook.include.ab3@340> XINCLUDE "translation.include.ab3"
00013128 <phrasebook.include.ab3@379> XINCLUDE "translation.include.ab3"
0001313E <phrasebook.include.ab3@380> XINCLUDE "translation.include.ab3"
00013148 <phrasebook.include.ab3@381> XINCLUDE "translation.include.ab3"
000131C0 <phrasebook.include.ab3@382> XINCLUDE "translation.include.ab3"
000131FC <phrasebook.include.ab3@383> XINCLUDE "translation.include.ab3"
0001320C <phrasebook.include.ab3@384> XINCLUDE "translation.include.ab3"
0001322C <phrasebook.include.ab3@385> XINCLUDE "translation.include.ab3"
0001324C <phrasebook.include.ab3@386> XINCLUDE "translation.include.ab3"
0001326C <phrasebook.include.ab3@387> XINCLUDE "translation.include.ab3"
000132A2 <phrasebook.include.ab3@388> XINCLUDE "translation.include.ab3"
000132CA <phrasebook.include.ab3@389> XINCLUDE "translation.include.ab3"
00013302 <phrasebook.include.ab3@390> XINCLUDE "translation.include.ab3"
00013366 <phrasebook.include.ab3@391> XINCLUDE "translation.include.ab3"
00013386 <phrasebook.include.ab3@392> XINCLUDE "translation.include.ab3"
00013402 <phrasebook.include.ab3@393> XINCLUDE "translation.include.ab3"
0001343A <phrasebook.include.ab3@396> XINCLUDE "translation.include.ab3"
000134B0 <phrasebook.include.ab3@397> XINCLUDE "translation.include.ab3"
000134D0 <phrasebook.include.ab3@398> XINCLUDE "translation.include.ab3"
0001354C <phrasebook.include.ab3@399> XINCLUDE "translation.include.ab3"
00013584 <phrasebook.include.ab3@402> XINCLUDE "translation.include.ab3"
000135FA <phrasebook.include.ab3@403> XINCLUDE "translation.include.ab3"
0001361A <phrasebook.include.ab3@404> XINCLUDE "translation.include.ab3"
00013696 <phrasebook.include.ab3@405> XINCLUDE "translation.include.ab3"
000136C2 <phrasebook.include.ab3@408> XINCLUDE "translation.include.ab3"
000136CA <phrasebook.include.ab3@409> XINCLUDE "translation.include.ab3"
00013710 <phrasebook.include.ab3@410> XINCLUDE "translation.include.ab3"
00013730 <phrasebook.include.ab3@411> XINCLUDE "translation.include.ab3"
0001373A <phrasebook.include.ab3@412> XINCLUDE "translation.include.ab3"
00013752 <phrasebook.include.ab3@413> XINCLUDE "translation.include.ab3"
00013762 <phrasebook.include.ab3@414> XINCLUDE "translation.include.ab3"
0001379A <phrasebook.include.ab3@415> XINCLUDE "translation.include.ab3"
000137CC <phrasebook.include.ab3@416> XINCLUDE "translation.include.ab3"
000137DE <phrasebook.include.ab3@419> XINCLUDE "translation.include.ab3"
00013860 <phrasebook.include.ab3@420> XINCLUDE "translation.include.ab3"
0001386A <phrasebook.include.ab3@421> XINCLUDE "translation.include.ab3"
0001389C <phrasebook.include.ab3@422> XINCLUDE "translation.include.ab3"
000138CE <phrasebook.include.ab3@423> XINCLUDE "translation.include.ab3"
000138FA <phrasebook.include.ab3@428> XINCLUDE "translation.include.ab3"
00013926 <phrasebook.include.ab3@429> XINCLUDE "translation.include.ab3"
00013948 <phrasebook.include.ab3@430> XINCLUDE "translation.include.ab3"
00013952 <phrasebook.include.ab3@432> XINCLUDE "translation.include.ab3"
0001396C <phrasebook.include.ab3@433> XINCLUDE "translation.include.ab3"
0001396C <translation.include.ab3@31> XINCLUDE "translation.include.ab3"
00013982 <translation.include.ab3@43> XINCLUDE "translation.include.ab3"
0001399E <translation.include.ab3@44> XINCLUDE "translation.include.ab3"
000139A0 <translation.include.ab3@45> XINCLUDE "translation.include.ab3"
000139CE <translation.include.ab3@46> XINCLUDE "translation.include.ab3"
000139CE <AmiBlitz3.ab3@91> XINCLUDE "translation.include.ab3"
000139CE <ted.include.ab3@1> XINCLUDE "/Shared/ted.include.ab3"
000139E8 <ted.include.ab3@161> XINCLUDE "/Shared/ted.include.ab3"
000139F2 <ted.include.ab3@162> XINCLUDE "/Shared/ted.include.ab3"
00013A14 <ted.include.ab3@163> XINCLUDE "/Shared/ted.include.ab3"
00013A2C <ted.include.ab3@164> XINCLUDE "/Shared/ted.include.ab3"
00013A46 <ted.include.ab3@166> XINCLUDE "/Shared/ted.include.ab3"
00013A78 <ted.include.ab3@167> XINCLUDE "/Shared/ted.include.ab3"
00013A82 <ted.include.ab3@168> XINCLUDE "/Shared/ted.include.ab3"
00013A88 <ted.include.ab3@170> XINCLUDE "/Shared/ted.include.ab3"
00013A9A <ted.include.ab3@171> XINCLUDE "/Shared/ted.include.ab3"
00013B0E <ted.include.ab3@172> XINCLUDE "/Shared/ted.include.ab3"
00013B14 <ted.include.ab3@173> XINCLUDE "/Shared/ted.include.ab3"
00013B4E <ted.include.ab3@174> XINCLUDE "/Shared/ted.include.ab3"
00013B58 <ted.include.ab3@177> XINCLUDE "/Shared/ted.include.ab3"
00013B5E <ted.include.ab3@178> XINCLUDE "/Shared/ted.include.ab3"
00013B74 <ted.include.ab3@180> XINCLUDE "/Shared/ted.include.ab3"
00013B7E <ted.include.ab3@181> XINCLUDE "/Shared/ted.include.ab3"
00013B96 <ted.include.ab3@183> XINCLUDE "/Shared/ted.include.ab3"
00013B98 <ted.include.ab3@185> XINCLUDE "/Shared/ted.include.ab3"
00013BC6 <ted.include.ab3@186> XINCLUDE "/Shared/ted.include.ab3"
00013BE0 <ted.include.ab3@190> XINCLUDE "/Shared/ted.include.ab3"
00013BF6 <ted.include.ab3@191> XINCLUDE "/Shared/ted.include.ab3"
00013C2A <ted.include.ab3@192> XINCLUDE "/Shared/ted.include.ab3"
00013C2E <ted.include.ab3@194> XINCLUDE "/Shared/ted.include.ab3"
00013C48 <ted.include.ab3@196> XINCLUDE "/Shared/ted.include.ab3"
00013C5E <ted.include.ab3@197> XINCLUDE "/Shared/ted.include.ab3"
00013C92 <ted.include.ab3@198> XINCLUDE "/Shared/ted.include.ab3"
00013C96 <ted.include.ab3@200> XINCLUDE "/Shared/ted.include.ab3"
00013CB0 <ted.include.ab3@216> XINCLUDE "/Shared/ted.include.ab3"
00013CC6 <ted.include.ab3@217> XINCLUDE "/Shared/ted.include.ab3"
00013CFA <ted.include.ab3@218> XINCLUDE "/Shared/ted.include.ab3"
00013CFE <ted.include.ab3@220> XINCLUDE "/Shared/ted.include.ab3"
00013D18 <ted.include.ab3@236> XINCLUDE "/Shared/ted.include.ab3"
00013D2E <ted.include.ab3@237> XINCLUDE "/Shared/ted.include.ab3"
00013D62 <ted.include.ab3@238> XINCLUDE "/Shared/ted.include.ab3"
00013D66 <ted.include.ab3@240> XINCLUDE "/Shared/ted.include.ab3"
00013D80 <ted.include.ab3@242> XINCLUDE "/Shared/ted.include.ab3"
00013D96 <ted.include.ab3@243> XINCLUDE "/Shared/ted.include.ab3"
00013DCA <ted.include.ab3@244> XINCLUDE "/Shared/ted.include.ab3"
00013DCE <ted.include.ab3@246> XINCLUDE "/Shared/ted.include.ab3"
00013DCE <AmiBlitz3.ab3@92> XINCLUDE "/Shared/ted.include.ab3"
00013DCE <CLIModeSupport.ab3@1> XINCLUDE "CLIModeSupport.ab3"
00013DE4 <CLIModeSupport.ab3@4> XINCLUDE "CLIModeSupport.ab3"
00013DFA <CLIModeSupport.ab3@7> XINCLUDE "CLIModeSupport.ab3"
00013E08 <CLIModeSupport.ab3@8> XINCLUDE "CLIModeSupport.ab3"
00013E16 <CLIModeSupport.ab3@9> XINCLUDE "CLIModeSupport.ab3"
00013E20 <CLIModeSupport.ab3@11> XINCLUDE "CLIModeSupport.ab3"
00013E32 <CLIModeSupport.ab3@12> XINCLUDE "CLIModeSupport.ab3"
00013E44 <CLIModeSupport.ab3@13> XINCLUDE "CLIModeSupport.ab3"
00013E4A <CLIModeSupport.ab3@14> XINCLUDE "CLIModeSupport.ab3"
00013E84 <CLIModeSupport.ab3@15> XINCLUDE "CLIModeSupport.ab3"
00013E88 <CLIModeSupport.ab3@18> XINCLUDE "CLIModeSupport.ab3"
00013E9E <CLIModeSupport.ab3@21> XINCLUDE "CLIModeSupport.ab3"
00013EB4 <CLIModeSupport.ab3@23> XINCLUDE "CLIModeSupport.ab3"
00013EC0 <CLIModeSupport.ab3@24> XINCLUDE "CLIModeSupport.ab3"
00013ECC <CLIModeSupport.ab3@25> XINCLUDE "CLIModeSupport.ab3"
00013ED4 <CLIModeSupport.ab3@26> XINCLUDE "CLIModeSupport.ab3"
00013EDC <CLIModeSupport.ab3@27> XINCLUDE "CLIModeSupport.ab3"
00013EE0 <CLIModeSupport.ab3@28> XINCLUDE "CLIModeSupport.ab3"
00013F0A <CLIModeSupport.ab3@47> XINCLUDE "CLIModeSupport.ab3"
00013F36 <CLIModeSupport.ab3@49> XINCLUDE "CLIModeSupport.ab3"
00013F48 <CLIModeSupport.ab3@50> XINCLUDE "CLIModeSupport.ab3"
00013F60 <CLIModeSupport.ab3@52> XINCLUDE "CLIModeSupport.ab3"
00013F76 <CLIModeSupport.ab3@56> XINCLUDE "CLIModeSupport.ab3"
00013F7C <CLIModeSupport.ab3@58> XINCLUDE "CLIModeSupport.ab3"
00013FB2 <CLIModeSupport.ab3@61> XINCLUDE "CLIModeSupport.ab3"
00013FEA <CLIModeSupport.ab3@62> XINCLUDE "CLIModeSupport.ab3"
00014020 <CLIModeSupport.ab3@63> XINCLUDE "CLIModeSupport.ab3"
00014058 <CLIModeSupport.ab3@64> XINCLUDE "CLIModeSupport.ab3"
00014090 <CLIModeSupport.ab3@65> XINCLUDE "CLIModeSupport.ab3"
000140C8 <CLIModeSupport.ab3@66> XINCLUDE "CLIModeSupport.ab3"
00014100 <CLIModeSupport.ab3@67> XINCLUDE "CLIModeSupport.ab3"
00014138 <CLIModeSupport.ab3@68> XINCLUDE "CLIModeSupport.ab3"
00014170 <CLIModeSupport.ab3@69> XINCLUDE "CLIModeSupport.ab3"
000141A8 <CLIModeSupport.ab3@70> XINCLUDE "CLIModeSupport.ab3"
000141E0 <CLIModeSupport.ab3@71> XINCLUDE "CLIModeSupport.ab3"
00014218 <CLIModeSupport.ab3@72> XINCLUDE "CLIModeSupport.ab3"
00014250 <CLIModeSupport.ab3@73> XINCLUDE "CLIModeSupport.ab3"
00014288 <CLIModeSupport.ab3@74> XINCLUDE "CLIModeSupport.ab3"
000142BC <CLIModeSupport.ab3@75> XINCLUDE "CLIModeSupport.ab3"
000142C6 <CLIModeSupport.ab3@76> XINCLUDE "CLIModeSupport.ab3"
000142D0 <CLIModeSupport.ab3@78> XINCLUDE "CLIModeSupport.ab3"
000142DA <CLIModeSupport.ab3@79> XINCLUDE "CLIModeSupport.ab3"
00014304 <CLIModeSupport.ab3@83> XINCLUDE "CLIModeSupport.ab3"
0001430E <CLIModeSupport.ab3@84> XINCLUDE "CLIModeSupport.ab3"
00014312 <CLIModeSupport.ab3@85> XINCLUDE "CLIModeSupport.ab3"
00014346 <CLIModeSupport.ab3@86> XINCLUDE "CLIModeSupport.ab3"
00014364 <CLIModeSupport.ab3@89> XINCLUDE "CLIModeSupport.ab3"
0001436E <CLIModeSupport.ab3@90> XINCLUDE "CLIModeSupport.ab3"
0001437A <CLIModeSupport.ab3@91> XINCLUDE "CLIModeSupport.ab3"
00014380 <CLIModeSupport.ab3@92> XINCLUDE "CLIModeSupport.ab3"
0001438C <CLIModeSupport.ab3@93> XINCLUDE "CLIModeSupport.ab3"
00014392 <CLIModeSupport.ab3@94> XINCLUDE "CLIModeSupport.ab3"
0001439E <CLIModeSupport.ab3@95> XINCLUDE "CLIModeSupport.ab3"
000143A4 <CLIModeSupport.ab3@96> XINCLUDE "CLIModeSupport.ab3"
000143AA <CLIModeSupport.ab3@99> XINCLUDE "CLIModeSupport.ab3"
000143E4 <CLIModeSupport.ab3@100> XINCLUDE "CLIModeSupport.ab3"
000143EA <CLIModeSupport.ab3@101> XINCLUDE "CLIModeSupport.ab3"
00014400 <CLIModeSupport.ab3@104> XINCLUDE "CLIModeSupport.ab3"
0001440A <CLIModeSupport.ab3@106> XINCLUDE "CLIModeSupport.ab3"
00014410 <CLIModeSupport.ab3@107> XINCLUDE "CLIModeSupport.ab3"
00014416 <CLIModeSupport.ab3@109> XINCLUDE "CLIModeSupport.ab3"
00014417 <CLIModeSupport.ab3@111> XINCLUDE "CLIModeSupport.ab3"
00014418 <CLIModeSupport.ab3@112> XINCLUDE "CLIModeSupport.ab3"
00014419 <CLIModeSupport.ab3@113> XINCLUDE "CLIModeSupport.ab3"
0001441A <CLIModeSupport.ab3@114> XINCLUDE "CLIModeSupport.ab3"
0001441C <CLIModeSupport.ab3@119> XINCLUDE "CLIModeSupport.ab3"
0001441E <CLIModeSupport.ab3@120> XINCLUDE "CLIModeSupport.ab3"
00014420 <CLIModeSupport.ab3@123> XINCLUDE "CLIModeSupport.ab3"
00014422 <CLIModeSupport.ab3@124> XINCLUDE "CLIModeSupport.ab3"
00014426 <CLIModeSupport.ab3@125> XINCLUDE "CLIModeSupport.ab3"
00014428 <CLIModeSupport.ab3@127> XINCLUDE "CLIModeSupport.ab3"
0001442A <CLIModeSupport.ab3@128> XINCLUDE "CLIModeSupport.ab3"
0001442E <CLIModeSupport.ab3@129> XINCLUDE "CLIModeSupport.ab3"
00014430 <CLIModeSupport.ab3@130> XINCLUDE "CLIModeSupport.ab3"
00014432 <CLIModeSupport.ab3@157> XINCLUDE "CLIModeSupport.ab3"
00014434 <CLIModeSupport.ab3@158> XINCLUDE "CLIModeSupport.ab3"
00014436 <CLIModeSupport.ab3@159> XINCLUDE "CLIModeSupport.ab3"
00014438 <CLIModeSupport.ab3@160> XINCLUDE "CLIModeSupport.ab3"
0001443A <CLIModeSupport.ab3@164> XINCLUDE "CLIModeSupport.ab3"
0001443E <CLIModeSupport.ab3@165> XINCLUDE "CLIModeSupport.ab3"
00014444 <CLIModeSupport.ab3@173> XINCLUDE "CLIModeSupport.ab3"
00014448 <CLIModeSupport.ab3@174> XINCLUDE "CLIModeSupport.ab3"
0001444A <CLIModeSupport.ab3@177> XINCLUDE "CLIModeSupport.ab3"
0001444E <CLIModeSupport.ab3@178> XINCLUDE "CLIModeSupport.ab3"
00014450 <CLIModeSupport.ab3@179> XINCLUDE "CLIModeSupport.ab3"
00014452 <CLIModeSupport.ab3@180> XINCLUDE "CLIModeSupport.ab3"
00014454 <CLIModeSupport.ab3@181> XINCLUDE "CLIModeSupport.ab3"
00014456 <CLIModeSupport.ab3@182> XINCLUDE "CLIModeSupport.ab3"
00014458 <CLIModeSupport.ab3@185> XINCLUDE "CLIModeSupport.ab3"
0001445A <CLIModeSupport.ab3@187> XINCLUDE "CLIModeSupport.ab3"
00014460 <CLIModeSupport.ab3@188> XINCLUDE "CLIModeSupport.ab3"
00014466 <CLIModeSupport.ab3@193> XINCLUDE "CLIModeSupport.ab3"
00014468 <CLIModeSupport.ab3@197> XINCLUDE "CLIModeSupport.ab3"
0001446C <CLIModeSupport.ab3@199> XINCLUDE "CLIModeSupport.ab3"
00014470 <CLIModeSupport.ab3@200> XINCLUDE "CLIModeSupport.ab3"
00014476 <CLIModeSupport.ab3@201> XINCLUDE "CLIModeSupport.ab3"
0001447C <CLIModeSupport.ab3@204> XINCLUDE "CLIModeSupport.ab3"
00014480 <CLIModeSupport.ab3@205> XINCLUDE "CLIModeSupport.ab3"
00014484 <CLIModeSupport.ab3@207> XINCLUDE "CLIModeSupport.ab3"
0001448A <CLIModeSupport.ab3@210> XINCLUDE "CLIModeSupport.ab3"
0001448E <CLIModeSupport.ab3@211> XINCLUDE "CLIModeSupport.ab3"
00014494 <CLIModeSupport.ab3@214> XINCLUDE "CLIModeSupport.ab3"
0001449A <CLIModeSupport.ab3@217> XINCLUDE "CLIModeSupport.ab3"
0001449E <CLIModeSupport.ab3@218> XINCLUDE "CLIModeSupport.ab3"
000144A4 <CLIModeSupport.ab3@221> XINCLUDE "CLIModeSupport.ab3"
000144A8 <CLIModeSupport.ab3@222> XINCLUDE "CLIModeSupport.ab3"
000144AE <CLIModeSupport.ab3@223> XINCLUDE "CLIModeSupport.ab3"
000144B2 <CLIModeSupport.ab3@224> XINCLUDE "CLIModeSupport.ab3"
000144B6 <CLIModeSupport.ab3@229> XINCLUDE "CLIModeSupport.ab3"
000144BA <CLIModeSupport.ab3@230> XINCLUDE "CLIModeSupport.ab3"
000144BE <CLIModeSupport.ab3@231> XINCLUDE "CLIModeSupport.ab3"
000144C2 <CLIModeSupport.ab3@232> XINCLUDE "CLIModeSupport.ab3"
000144C6 <CLIModeSupport.ab3@233> XINCLUDE "CLIModeSupport.ab3"
000144CA <CLIModeSupport.ab3@237> XINCLUDE "CLIModeSupport.ab3"
000144CE <CLIModeSupport.ab3@238> XINCLUDE "CLIModeSupport.ab3"
000144D2 <CLIModeSupport.ab3@239> XINCLUDE "CLIModeSupport.ab3"
000144D6 <CLIModeSupport.ab3@240> XINCLUDE "CLIModeSupport.ab3"
000144DA <CLIModeSupport.ab3@241> XINCLUDE "CLIModeSupport.ab3"
000144DE <CLIModeSupport.ab3@242> XINCLUDE "CLIModeSupport.ab3"
000144E4 <CLIModeSupport.ab3@243> XINCLUDE "CLIModeSupport.ab3"
000144E8 <CLIModeSupport.ab3@244> XINCLUDE "CLIModeSupport.ab3"
000144EE <CLIModeSupport.ab3@247> XINCLUDE "CLIModeSupport.ab3"
000144F0 <CLIModeSupport.ab3@248> XINCLUDE "CLIModeSupport.ab3"
000144F4 <CLIModeSupport.ab3@249> XINCLUDE "CLIModeSupport.ab3"
000144F8 <CLIModeSupport.ab3@250> XINCLUDE "CLIModeSupport.ab3"
000144FC <CLIModeSupport.ab3@254> XINCLUDE "CLIModeSupport.ab3"
00014500 <CLIModeSupport.ab3@255> XINCLUDE "CLIModeSupport.ab3"
00014504 <CLIModeSupport.ab3@256> XINCLUDE "CLIModeSupport.ab3"
00014508 <CLIModeSupport.ab3@257> XINCLUDE "CLIModeSupport.ab3"
0001450C <CLIModeSupport.ab3@259> XINCLUDE "CLIModeSupport.ab3"
00014510 <CLIModeSupport.ab3@260> XINCLUDE "CLIModeSupport.ab3"
00014516 <CLIModeSupport.ab3@263> XINCLUDE "CLIModeSupport.ab3"
00014518 <CLIModeSupport.ab3@264> XINCLUDE "CLIModeSupport.ab3"
0001451C <CLIModeSupport.ab3@265> XINCLUDE "CLIModeSupport.ab3"
00014520 <CLIModeSupport.ab3@268> XINCLUDE "CLIModeSupport.ab3"
00014524 <CLIModeSupport.ab3@269> XINCLUDE "CLIModeSupport.ab3"
00014528 <CLIModeSupport.ab3@270> XINCLUDE "CLIModeSupport.ab3"
0001452C <CLIModeSupport.ab3@273> XINCLUDE "CLIModeSupport.ab3"
00014530 <CLIModeSupport.ab3@274> XINCLUDE "CLIModeSupport.ab3"
00014534 <CLIModeSupport.ab3@276> XINCLUDE "CLIModeSupport.ab3"
00014538 <CLIModeSupport.ab3@277> XINCLUDE "CLIModeSupport.ab3"
0001453C <CLIModeSupport.ab3@278> XINCLUDE "CLIModeSupport.ab3"
00014540 <CLIModeSupport.ab3@279> XINCLUDE "CLIModeSupport.ab3"
00014544 <CLIModeSupport.ab3@280> XINCLUDE "CLIModeSupport.ab3"
00014548 <CLIModeSupport.ab3@281> XINCLUDE "CLIModeSupport.ab3"
0001454C <CLIModeSupport.ab3@282> XINCLUDE "CLIModeSupport.ab3"
00014550 <CLIModeSupport.ab3@283> XINCLUDE "CLIModeSupport.ab3"
00014554 <CLIModeSupport.ab3@284> XINCLUDE "CLIModeSupport.ab3"
00014558 <CLIModeSupport.ab3@285> XINCLUDE "CLIModeSupport.ab3"
0001455C <CLIModeSupport.ab3@286> XINCLUDE "CLIModeSupport.ab3"
00014560 <CLIModeSupport.ab3@287> XINCLUDE "CLIModeSupport.ab3"
00014566 <CLIModeSupport.ab3@290> XINCLUDE "CLIModeSupport.ab3"
00014568 <CLIModeSupport.ab3@291> XINCLUDE "CLIModeSupport.ab3"
0001456C <CLIModeSupport.ab3@293> XINCLUDE "CLIModeSupport.ab3"
00014570 <CLIModeSupport.ab3@294> XINCLUDE "CLIModeSupport.ab3"
00014576 <CLIModeSupport.ab3@295> XINCLUDE "CLIModeSupport.ab3"
0001457C <CLIModeSupport.ab3@298> XINCLUDE "CLIModeSupport.ab3"
00014580 <CLIModeSupport.ab3@299> XINCLUDE "CLIModeSupport.ab3"
00014584 <CLIModeSupport.ab3@301> XINCLUDE "CLIModeSupport.ab3"
0001458A <CLIModeSupport.ab3@304> XINCLUDE "CLIModeSupport.ab3"
0001458E <CLIModeSupport.ab3@305> XINCLUDE "CLIModeSupport.ab3"
00014594 <CLIModeSupport.ab3@306> XINCLUDE "CLIModeSupport.ab3"
00014598 <CLIModeSupport.ab3@307> XINCLUDE "CLIModeSupport.ab3"
0001459A <CLIModeSupport.ab3@311> XINCLUDE "CLIModeSupport.ab3"
000145A0 <CLIModeSupport.ab3@312> XINCLUDE "CLIModeSupport.ab3"
000145A2 <CLIModeSupport.ab3@315> XINCLUDE "CLIModeSupport.ab3"
000145A4 <CLIModeSupport.ab3@316> XINCLUDE "CLIModeSupport.ab3"
000145A6 <CLIModeSupport.ab3@317> XINCLUDE "CLIModeSupport.ab3"
000145A8 <CLIModeSupport.ab3@320> XINCLUDE "CLIModeSupport.ab3"
000145AC <CLIModeSupport.ab3@321> XINCLUDE "CLIModeSupport.ab3"
000145AE <CLIModeSupport.ab3@322> XINCLUDE "CLIModeSupport.ab3"
000145B2 <CLIModeSupport.ab3@323> XINCLUDE "CLIModeSupport.ab3"
000145B6 <CLIModeSupport.ab3@324> XINCLUDE "CLIModeSupport.ab3"
000145BA <CLIModeSupport.ab3@325> XINCLUDE "CLIModeSupport.ab3"
000145BC <CLIModeSupport.ab3@326> XINCLUDE "CLIModeSupport.ab3"
000145C0 <CLIModeSupport.ab3@327> XINCLUDE "CLIModeSupport.ab3"
000145C2 <CLIModeSupport.ab3@331> XINCLUDE "CLIModeSupport.ab3"
000145C4 <CLIModeSupport.ab3@332> XINCLUDE "CLIModeSupport.ab3"
000145C8 <CLIModeSupport.ab3@333> XINCLUDE "CLIModeSupport.ab3"
000145CA <CLIModeSupport.ab3@334> XINCLUDE "CLIModeSupport.ab3"
000145CE <CLIModeSupport.ab3@335> XINCLUDE "CLIModeSupport.ab3"
000145D0 <CLIModeSupport.ab3@339> XINCLUDE "CLIModeSupport.ab3"
000145D4 <CLIModeSupport.ab3@340> XINCLUDE "CLIModeSupport.ab3"
000145DA <CLIModeSupport.ab3@343> XINCLUDE "CLIModeSupport.ab3"
000145DC <CLIModeSupport.ab3@344> XINCLUDE "CLIModeSupport.ab3"
000145E0 <CLIModeSupport.ab3@346> XINCLUDE "CLIModeSupport.ab3"
000145E4 <CLIModeSupport.ab3@347> XINCLUDE "CLIModeSupport.ab3"
000145EA <CLIModeSupport.ab3@348> XINCLUDE "CLIModeSupport.ab3"
000145F0 <CLIModeSupport.ab3@351> XINCLUDE "CLIModeSupport.ab3"
000145F4 <CLIModeSupport.ab3@352> XINCLUDE "CLIModeSupport.ab3"
000145F8 <CLIModeSupport.ab3@354> XINCLUDE "CLIModeSupport.ab3"
000145FE <CLIModeSupport.ab3@357> XINCLUDE "CLIModeSupport.ab3"
00014602 <CLIModeSupport.ab3@358> XINCLUDE "CLIModeSupport.ab3"
00014608 <CLIModeSupport.ab3@359> XINCLUDE "CLIModeSupport.ab3"
0001460C <CLIModeSupport.ab3@360> XINCLUDE "CLIModeSupport.ab3"
00014610 <CLIModeSupport.ab3@361> XINCLUDE "CLIModeSupport.ab3"
00014612 <CLIModeSupport.ab3@364> XINCLUDE "CLIModeSupport.ab3"
00014616 <CLIModeSupport.ab3@365> XINCLUDE "CLIModeSupport.ab3"
0001461C <CLIModeSupport.ab3@366> XINCLUDE "CLIModeSupport.ab3"
00014620 <CLIModeSupport.ab3@367> XINCLUDE "CLIModeSupport.ab3"
00014624 <CLIModeSupport.ab3@369> XINCLUDE "CLIModeSupport.ab3"
00014628 <CLIModeSupport.ab3@370> XINCLUDE "CLIModeSupport.ab3"
0001462C <CLIModeSupport.ab3@371> XINCLUDE "CLIModeSupport.ab3"
00014630 <CLIModeSupport.ab3@372> XINCLUDE "CLIModeSupport.ab3"
00014634 <CLIModeSupport.ab3@373> XINCLUDE "CLIModeSupport.ab3"
00014638 <CLIModeSupport.ab3@377> XINCLUDE "CLIModeSupport.ab3"
0001463C <CLIModeSupport.ab3@378> XINCLUDE "CLIModeSupport.ab3"
0001463E <CLIModeSupport.ab3@379> XINCLUDE "CLIModeSupport.ab3"
00014640 <CLIModeSupport.ab3@380> XINCLUDE "CLIModeSupport.ab3"
00014642 <CLIModeSupport.ab3@383> XINCLUDE "CLIModeSupport.ab3"
00014646 <CLIModeSupport.ab3@384> XINCLUDE "CLIModeSupport.ab3"
00014648 <CLIModeSupport.ab3@385> XINCLUDE "CLIModeSupport.ab3"
0001464A <CLIModeSupport.ab3@386> XINCLUDE "CLIModeSupport.ab3"
0001464C <CLIModeSupport.ab3@387> XINCLUDE "CLIModeSupport.ab3"
0001464E <CLIModeSupport.ab3@388> XINCLUDE "CLIModeSupport.ab3"
00014650 <CLIModeSupport.ab3@389> XINCLUDE "CLIModeSupport.ab3"
00014654 <CLIModeSupport.ab3@390> XINCLUDE "CLIModeSupport.ab3"
00014656 <CLIModeSupport.ab3@391> XINCLUDE "CLIModeSupport.ab3"
0001465A <CLIModeSupport.ab3@392> XINCLUDE "CLIModeSupport.ab3"
0001465C <CLIModeSupport.ab3@396> XINCLUDE "CLIModeSupport.ab3"
0001465E <CLIModeSupport.ab3@397> XINCLUDE "CLIModeSupport.ab3"
00014660 <CLIModeSupport.ab3@398> XINCLUDE "CLIModeSupport.ab3"
00014664 <CLIModeSupport.ab3@399> XINCLUDE "CLIModeSupport.ab3"
00014666 <CLIModeSupport.ab3@400> XINCLUDE "CLIModeSupport.ab3"
00014668 <CLIModeSupport.ab3@404> XINCLUDE "CLIModeSupport.ab3"
0001466A <CLIModeSupport.ab3@407> XINCLUDE "CLIModeSupport.ab3"
0001466E <CLIModeSupport.ab3@408> XINCLUDE "CLIModeSupport.ab3"
00014672 <CLIModeSupport.ab3@413> XINCLUDE "CLIModeSupport.ab3"
00014676 <CLIModeSupport.ab3@414> XINCLUDE "CLIModeSupport.ab3"
0001467A <CLIModeSupport.ab3@415> XINCLUDE "CLIModeSupport.ab3"
0001467E <CLIModeSupport.ab3@416> XINCLUDE "CLIModeSupport.ab3"
00014682 <CLIModeSupport.ab3@417> XINCLUDE "CLIModeSupport.ab3"
00014686 <CLIModeSupport.ab3@418> XINCLUDE "CLIModeSupport.ab3"
0001468A <CLIModeSupport.ab3@419> XINCLUDE "CLIModeSupport.ab3"
0001468E <CLIModeSupport.ab3@420> XINCLUDE "CLIModeSupport.ab3"
00014690 <CLIModeSupport.ab3@423> XINCLUDE "CLIModeSupport.ab3"
00014692 <CLIModeSupport.ab3@426> XINCLUDE "CLIModeSupport.ab3"
00014694 <CLIModeSupport.ab3@430> XINCLUDE "CLIModeSupport.ab3"
00014698 <CLIModeSupport.ab3@431> XINCLUDE "CLIModeSupport.ab3"
0001469A <CLIModeSupport.ab3@432> XINCLUDE "CLIModeSupport.ab3"
0001469C <CLIModeSupport.ab3@433> XINCLUDE "CLIModeSupport.ab3"
000146B2 <CLIModeSupport.ab3@438> XINCLUDE "CLIModeSupport.ab3"
000146B8 <CLIModeSupport.ab3@439> XINCLUDE "CLIModeSupport.ab3"
000146F6 <CLIModeSupport.ab3@441> XINCLUDE "CLIModeSupport.ab3"
000146FA <CLIModeSupport.ab3@442> XINCLUDE "CLIModeSupport.ab3"
00014704 <CLIModeSupport.ab3@443> XINCLUDE "CLIModeSupport.ab3"
00014706 <CLIModeSupport.ab3@444> XINCLUDE "CLIModeSupport.ab3"
0001473A <CLIModeSupport.ab3@445> XINCLUDE "CLIModeSupport.ab3"
0001474A <CLIModeSupport.ab3@446> XINCLUDE "CLIModeSupport.ab3"
0001474C <CLIModeSupport.ab3@449> XINCLUDE "CLIModeSupport.ab3"
00014784 <CLIModeSupport.ab3@450> XINCLUDE "CLIModeSupport.ab3"
000147BC <CLIModeSupport.ab3@451> XINCLUDE "CLIModeSupport.ab3"
000147F4 <CLIModeSupport.ab3@452> XINCLUDE "CLIModeSupport.ab3"
000147FE <CLIModeSupport.ab3@454> XINCLUDE "CLIModeSupport.ab3"
00014804 <CLIModeSupport.ab3@455> XINCLUDE "CLIModeSupport.ab3"
0001481A <CLIModeSupport.ab3@459> XINCLUDE "CLIModeSupport.ab3"
00014858 <CLIModeSupport.ab3@460> XINCLUDE "CLIModeSupport.ab3"
0001485C <CLIModeSupport.ab3@461> XINCLUDE "CLIModeSupport.ab3"
00014864 <CLIModeSupport.ab3@462> XINCLUDE "CLIModeSupport.ab3"
000148A2 <CLIModeSupport.ab3@463> XINCLUDE "CLIModeSupport.ab3"
000148A4 <CLIModeSupport.ab3@464> XINCLUDE "CLIModeSupport.ab3"
000148A8 <CLIModeSupport.ab3@465> XINCLUDE "CLIModeSupport.ab3"
000148E6 <CLIModeSupport.ab3@467> XINCLUDE "CLIModeSupport.ab3"
000148EA <CLIModeSupport.ab3@468> XINCLUDE "CLIModeSupport.ab3"
00014928 <CLIModeSupport.ab3@470> XINCLUDE "CLIModeSupport.ab3"
0001492C <CLIModeSupport.ab3@471> XINCLUDE "CLIModeSupport.ab3"
00014956 <CLIModeSupport.ab3@473> XINCLUDE "CLIModeSupport.ab3"
00014960 <CLIModeSupport.ab3@474> XINCLUDE "CLIModeSupport.ab3"
00014974 <CLIModeSupport.ab3@475> XINCLUDE "CLIModeSupport.ab3"
0001499A <CLIModeSupport.ab3@476> XINCLUDE "CLIModeSupport.ab3"
000149A0 <CLIModeSupport.ab3@477> XINCLUDE "CLIModeSupport.ab3"
000149AE <CLIModeSupport.ab3@478> XINCLUDE "CLIModeSupport.ab3"
000149B4 <CLIModeSupport.ab3@479> XINCLUDE "CLIModeSupport.ab3"
000149EC <CLIModeSupport.ab3@481> XINCLUDE "CLIModeSupport.ab3"
000149F0 <CLIModeSupport.ab3@484> XINCLUDE "CLIModeSupport.ab3"
00014A1A <CLIModeSupport.ab3@487> XINCLUDE "CLIModeSupport.ab3"
00014A20 <CLIModeSupport.ab3@488> XINCLUDE "CLIModeSupport.ab3"
00014A40 <CLIModeSupport.ab3@489> XINCLUDE "CLIModeSupport.ab3"
00014A4A <CLIModeSupport.ab3@490> XINCLUDE "CLIModeSupport.ab3"
00014A4E <CLIModeSupport.ab3@491> XINCLUDE "CLIModeSupport.ab3"
00014A50 <CLIModeSupport.ab3@492> XINCLUDE "CLIModeSupport.ab3"
00014A6E <CLIModeSupport.ab3@493> XINCLUDE "CLIModeSupport.ab3"
00014A70 <CLIModeSupport.ab3@494> XINCLUDE "CLIModeSupport.ab3"
00014A76 <CLIModeSupport.ab3@495> XINCLUDE "CLIModeSupport.ab3"
00014A7C <CLIModeSupport.ab3@496> XINCLUDE "CLIModeSupport.ab3"
00014AA6 <CLIModeSupport.ab3@498> XINCLUDE "CLIModeSupport.ab3"
00014AA8 <CLIModeSupport.ab3@499> XINCLUDE "CLIModeSupport.ab3"
00014AD6 <CLIModeSupport.ab3@500> XINCLUDE "CLIModeSupport.ab3"
00014ADA <CLIModeSupport.ab3@501> XINCLUDE "CLIModeSupport.ab3"
00014B08 <CLIModeSupport.ab3@502> XINCLUDE "CLIModeSupport.ab3"
00014B0C <CLIModeSupport.ab3@503> XINCLUDE "CLIModeSupport.ab3"
00014B32 <CLIModeSupport.ab3@505> XINCLUDE "CLIModeSupport.ab3"
00014B42 <CLIModeSupport.ab3@506> XINCLUDE "CLIModeSupport.ab3"
00014B48 <CLIModeSupport.ab3@507> XINCLUDE "CLIModeSupport.ab3"
00014B4E <CLIModeSupport.ab3@508> XINCLUDE "CLIModeSupport.ab3"
00014B88 <CLIModeSupport.ab3@509> XINCLUDE "CLIModeSupport.ab3"
00014B92 <CLIModeSupport.ab3@511> XINCLUDE "CLIModeSupport.ab3"
00014BAC <CLIModeSupport.ab3@512> XINCLUDE "CLIModeSupport.ab3"
00014BCA <CLIModeSupport.ab3@524> XINCLUDE "CLIModeSupport.ab3"
00014BD2 <CLIModeSupport.ab3@525> XINCLUDE "CLIModeSupport.ab3"
00014BD8 <CLIModeSupport.ab3@526> XINCLUDE "CLIModeSupport.ab3"
00014BDE <CLIModeSupport.ab3@527> XINCLUDE "CLIModeSupport.ab3"
00014C00 <CLIModeSupport.ab3@528> XINCLUDE "CLIModeSupport.ab3"
00014C18 <CLIModeSupport.ab3@530> XINCLUDE "CLIModeSupport.ab3"
00014C3E <CLIModeSupport.ab3@531> XINCLUDE "CLIModeSupport.ab3"
00014C68 <CLIModeSupport.ab3@532> XINCLUDE "CLIModeSupport.ab3"
00014C76 <CLIModeSupport.ab3@533> XINCLUDE "CLIModeSupport.ab3"
00014C7C <CLIModeSupport.ab3@534> XINCLUDE "CLIModeSupport.ab3"
00014C90 <CLIModeSupport.ab3@535> XINCLUDE "CLIModeSupport.ab3"
00014CA8 <CLIModeSupport.ab3@537> XINCLUDE "CLIModeSupport.ab3"
00014CB6 <CLIModeSupport.ab3@538> XINCLUDE "CLIModeSupport.ab3"
00014CCA <CLIModeSupport.ab3@539> XINCLUDE "CLIModeSupport.ab3"
00014D00 <CLIModeSupport.ab3@540> XINCLUDE "CLIModeSupport.ab3"
00014D0E <CLIModeSupport.ab3@541> XINCLUDE "CLIModeSupport.ab3"
00014D3E <CLIModeSupport.ab3@542> XINCLUDE "CLIModeSupport.ab3"
00014D4C <CLIModeSupport.ab3@543> XINCLUDE "CLIModeSupport.ab3"
00014D52 <CLIModeSupport.ab3@544> XINCLUDE "CLIModeSupport.ab3"
00014D60 <CLIModeSupport.ab3@545> XINCLUDE "CLIModeSupport.ab3"
00014D66 <CLIModeSupport.ab3@546> XINCLUDE "CLIModeSupport.ab3"
00014D6C <CLIModeSupport.ab3@548> XINCLUDE "CLIModeSupport.ab3"
00014D7A <CLIModeSupport.ab3@549> XINCLUDE "CLIModeSupport.ab3"
00014D7C <CLIModeSupport.ab3@550> XINCLUDE "CLIModeSupport.ab3"
00014D82 <CLIModeSupport.ab3@552> XINCLUDE "CLIModeSupport.ab3"
00014D98 <CLIModeSupport.ab3@554> XINCLUDE "CLIModeSupport.ab3"
00014DA2 <CLIModeSupport.ab3@555> XINCLUDE "CLIModeSupport.ab3"
00014DA8 <CLIModeSupport.ab3@556> XINCLUDE "CLIModeSupport.ab3"
00014DD2 <CLIModeSupport.ab3@560> XINCLUDE "CLIModeSupport.ab3"
00014E10 <CLIModeSupport.ab3@563> XINCLUDE "CLIModeSupport.ab3"
00014E14 <CLIModeSupport.ab3@564> XINCLUDE "CLIModeSupport.ab3"
00014E52 <CLIModeSupport.ab3@565> XINCLUDE "CLIModeSupport.ab3"
00014E56 <CLIModeSupport.ab3@566> XINCLUDE "CLIModeSupport.ab3"
00014E94 <CLIModeSupport.ab3@567> XINCLUDE "CLIModeSupport.ab3"
00014E98 <CLIModeSupport.ab3@568> XINCLUDE "CLIModeSupport.ab3"
00014EA0 <CLIModeSupport.ab3@570> XINCLUDE "CLIModeSupport.ab3"
00014EA8 <CLIModeSupport.ab3@571> XINCLUDE "CLIModeSupport.ab3"
00014EEC <CLIModeSupport.ab3@573> XINCLUDE "CLIModeSupport.ab3"
00014EFE <CLIModeSupport.ab3@574> XINCLUDE "CLIModeSupport.ab3"
00014F0C <CLIModeSupport.ab3@575> XINCLUDE "CLIModeSupport.ab3"
00014F40 <CLIModeSupport.ab3@576> XINCLUDE "CLIModeSupport.ab3"
00014F64 <CLIModeSupport.ab3@578> XINCLUDE "CLIModeSupport.ab3"
00014F6E <CLIModeSupport.ab3@579> XINCLUDE "CLIModeSupport.ab3"
00014F88 <CLIModeSupport.ab3@580> XINCLUDE "CLIModeSupport.ab3"
00014F9C <CLIModeSupport.ab3@581> XINCLUDE "CLIModeSupport.ab3"
00014FF4 <CLIModeSupport.ab3@582> XINCLUDE "CLIModeSupport.ab3"
00015094 <CLIModeSupport.ab3@583> XINCLUDE "CLIModeSupport.ab3"
0001509C <CLIModeSupport.ab3@584> XINCLUDE "CLIModeSupport.ab3"
000150D4 <CLIModeSupport.ab3@585> XINCLUDE "CLIModeSupport.ab3"
000150DA <CLIModeSupport.ab3@586> XINCLUDE "CLIModeSupport.ab3"
000150EA <CLIModeSupport.ab3@587> XINCLUDE "CLIModeSupport.ab3"
00015112 <CLIModeSupport.ab3@590> XINCLUDE "CLIModeSupport.ab3"
0001513A <CLIModeSupport.ab3@591> XINCLUDE "CLIModeSupport.ab3"
00015142 <CLIModeSupport.ab3@592> XINCLUDE "CLIModeSupport.ab3"
00015148 <CLIModeSupport.ab3@593> XINCLUDE "CLIModeSupport.ab3"
00015150 <CLIModeSupport.ab3@594> XINCLUDE "CLIModeSupport.ab3"
00015158 <CLIModeSupport.ab3@595> XINCLUDE "CLIModeSupport.ab3"
00015180 <CLIModeSupport.ab3@596> XINCLUDE "CLIModeSupport.ab3"
00015188 <CLIModeSupport.ab3@597> XINCLUDE "CLIModeSupport.ab3"
00015190 <CLIModeSupport.ab3@598> XINCLUDE "CLIModeSupport.ab3"
00015196 <CLIModeSupport.ab3@599> XINCLUDE "CLIModeSupport.ab3"
0001519C <CLIModeSupport.ab3@600> XINCLUDE "CLIModeSupport.ab3"
000151A2 <CLIModeSupport.ab3@601> XINCLUDE "CLIModeSupport.ab3"
000151A8 <CLIModeSupport.ab3@602> XINCLUDE "CLIModeSupport.ab3"
000151AE <CLIModeSupport.ab3@603> XINCLUDE "CLIModeSupport.ab3"
000151B4 <CLIModeSupport.ab3@604> XINCLUDE "CLIModeSupport.ab3"
000151BA <CLIModeSupport.ab3@605> XINCLUDE "CLIModeSupport.ab3"
000151C0 <CLIModeSupport.ab3@606> XINCLUDE "CLIModeSupport.ab3"
000151C8 <CLIModeSupport.ab3@607> XINCLUDE "CLIModeSupport.ab3"
000151D0 <CLIModeSupport.ab3@608> XINCLUDE "CLIModeSupport.ab3"
000151F8 <CLIModeSupport.ab3@609> XINCLUDE "CLIModeSupport.ab3"
000151FE <CLIModeSupport.ab3@610> XINCLUDE "CLIModeSupport.ab3"
00015204 <CLIModeSupport.ab3@611> XINCLUDE "CLIModeSupport.ab3"
0001520C <CLIModeSupport.ab3@612> XINCLUDE "CLIModeSupport.ab3"
0001522C <CLIModeSupport.ab3@616> XINCLUDE "CLIModeSupport.ab3"
0001523C <CLIModeSupport.ab3@618> XINCLUDE "CLIModeSupport.ab3"
0001524C <CLIModeSupport.ab3@619> XINCLUDE "CLIModeSupport.ab3"
0001525C <CLIModeSupport.ab3@621> XINCLUDE "CLIModeSupport.ab3"
0001526C <CLIModeSupport.ab3@622> XINCLUDE "CLIModeSupport.ab3"
0001527C <CLIModeSupport.ab3@623> XINCLUDE "CLIModeSupport.ab3"
0001528C <CLIModeSupport.ab3@624> XINCLUDE "CLIModeSupport.ab3"
0001529C <CLIModeSupport.ab3@625> XINCLUDE "CLIModeSupport.ab3"
000152AC <CLIModeSupport.ab3@626> XINCLUDE "CLIModeSupport.ab3"
000152BC <CLIModeSupport.ab3@627> XINCLUDE "CLIModeSupport.ab3"
000152CC <CLIModeSupport.ab3@628> XINCLUDE "CLIModeSupport.ab3"
000152DC <CLIModeSupport.ab3@629> XINCLUDE "CLIModeSupport.ab3"
000152EC <CLIModeSupport.ab3@630> XINCLUDE "CLIModeSupport.ab3"
000152FC <CLIModeSupport.ab3@631> XINCLUDE "CLIModeSupport.ab3"
0001530C <CLIModeSupport.ab3@632> XINCLUDE "CLIModeSupport.ab3"
0001531C <CLIModeSupport.ab3@633> XINCLUDE "CLIModeSupport.ab3"
0001532C <CLIModeSupport.ab3@634> XINCLUDE "CLIModeSupport.ab3"
00015340 <CLIModeSupport.ab3@636> XINCLUDE "CLIModeSupport.ab3"
00015352 <CLIModeSupport.ab3@637> XINCLUDE "CLIModeSupport.ab3"
00015364 <CLIModeSupport.ab3@638> XINCLUDE "CLIModeSupport.ab3"
00015376 <CLIModeSupport.ab3@639> XINCLUDE "CLIModeSupport.ab3"
00015388 <CLIModeSupport.ab3@640> XINCLUDE "CLIModeSupport.ab3"
0001538E <CLIModeSupport.ab3@641> XINCLUDE "CLIModeSupport.ab3"
000153A0 <CLIModeSupport.ab3@642> XINCLUDE "CLIModeSupport.ab3"
000153B2 <CLIModeSupport.ab3@643> XINCLUDE "CLIModeSupport.ab3"
000153C4 <CLIModeSupport.ab3@644> XINCLUDE "CLIModeSupport.ab3"
000153D6 <CLIModeSupport.ab3@645> XINCLUDE "CLIModeSupport.ab3"
000153E8 <CLIModeSupport.ab3@647> XINCLUDE "CLIModeSupport.ab3"
000153FA <CLIModeSupport.ab3@648> XINCLUDE "CLIModeSupport.ab3"
00015418 <CLIModeSupport.ab3@650> XINCLUDE "CLIModeSupport.ab3"
0001541E <CLIModeSupport.ab3@651> XINCLUDE "CLIModeSupport.ab3"
00015424 <CLIModeSupport.ab3@653> XINCLUDE "CLIModeSupport.ab3"
0001544E <CLIModeSupport.ab3@654> XINCLUDE "CLIModeSupport.ab3"
00015460 <CLIModeSupport.ab3@655> XINCLUDE "CLIModeSupport.ab3"
00015494 <CLIModeSupport.ab3@658> XINCLUDE "CLIModeSupport.ab3"
000154AC <CLIModeSupport.ab3@659> XINCLUDE "CLIModeSupport.ab3"
000154F8 <CLIModeSupport.ab3@660> XINCLUDE "CLIModeSupport.ab3"
0001550A <CLIModeSupport.ab3@661> XINCLUDE "CLIModeSupport.ab3"
00015560 <CLIModeSupport.ab3@662> XINCLUDE "CLIModeSupport.ab3"
000155D2 <CLIModeSupport.ab3@663> XINCLUDE "CLIModeSupport.ab3"
000155D8 <CLIModeSupport.ab3@664> XINCLUDE "CLIModeSupport.ab3"
0001560C <CLIModeSupport.ab3@665> XINCLUDE "CLIModeSupport.ab3"
00015634 <CLIModeSupport.ab3@666> XINCLUDE "CLIModeSupport.ab3"
0001565C <CLIModeSupport.ab3@668> XINCLUDE "CLIModeSupport.ab3"
00015696 <CLIModeSupport.ab3@669> XINCLUDE "CLIModeSupport.ab3"
000156AE <CLIModeSupport.ab3@670> XINCLUDE "CLIModeSupport.ab3"
00015732 <CLIModeSupport.ab3@671> XINCLUDE "CLIModeSupport.ab3"
0001574C <CLIModeSupport.ab3@672> XINCLUDE "CLIModeSupport.ab3"
0001579A <CLIModeSupport.ab3@673> XINCLUDE "CLIModeSupport.ab3"
000157AA <CLIModeSupport.ab3@675> XINCLUDE "CLIModeSupport.ab3"
000157B2 <CLIModeSupport.ab3@677> XINCLUDE "CLIModeSupport.ab3"
000157C6 <CLIModeSupport.ab3@678> XINCLUDE "CLIModeSupport.ab3"
0001580C <CLIModeSupport.ab3@679> XINCLUDE "CLIModeSupport.ab3"
00015812 <CLIModeSupport.ab3@680> XINCLUDE "CLIModeSupport.ab3"
0001585C <CLIModeSupport.ab3@681> XINCLUDE "CLIModeSupport.ab3"
000158C6 <CLIModeSupport.ab3@682> XINCLUDE "CLIModeSupport.ab3"
0001592C <CLIModeSupport.ab3@683> XINCLUDE "CLIModeSupport.ab3"
00015960 <CLIModeSupport.ab3@684> XINCLUDE "CLIModeSupport.ab3"
0001598C <CLIModeSupport.ab3@686> XINCLUDE "CLIModeSupport.ab3"
000159DA <CLIModeSupport.ab3@687> XINCLUDE "CLIModeSupport.ab3"
000159FE <CLIModeSupport.ab3@688> XINCLUDE "CLIModeSupport.ab3"
00015A04 <CLIModeSupport.ab3@689> XINCLUDE "CLIModeSupport.ab3"
00015A12 <CLIModeSupport.ab3@691> XINCLUDE "CLIModeSupport.ab3"
00015A70 <CLIModeSupport.ab3@693> XINCLUDE "CLIModeSupport.ab3"
00015ACE <CLIModeSupport.ab3@694> XINCLUDE "CLIModeSupport.ab3"
00015AF8 <CLIModeSupport.ab3@695> XINCLUDE "CLIModeSupport.ab3"
00015B02 <CLIModeSupport.ab3@696> XINCLUDE "CLIModeSupport.ab3"
00015B0A <CLIModeSupport.ab3@697> XINCLUDE "CLIModeSupport.ab3"
00015B48 <CLIModeSupport.ab3@698> XINCLUDE "CLIModeSupport.ab3"
00015B94 <CLIModeSupport.ab3@699> XINCLUDE "CLIModeSupport.ab3"
00015BA6 <CLIModeSupport.ab3@700> XINCLUDE "CLIModeSupport.ab3"
00015BFC <CLIModeSupport.ab3@701> XINCLUDE "CLIModeSupport.ab3"
00015C74 <CLIModeSupport.ab3@702> XINCLUDE "CLIModeSupport.ab3"
00015C7A <CLIModeSupport.ab3@703> XINCLUDE "CLIModeSupport.ab3"
00015CAE <CLIModeSupport.ab3@704> XINCLUDE "CLIModeSupport.ab3"
00015CD6 <CLIModeSupport.ab3@705> XINCLUDE "CLIModeSupport.ab3"
00015D0C <CLIModeSupport.ab3@708> XINCLUDE "CLIModeSupport.ab3"
00015D1A <CLIModeSupport.ab3@709> XINCLUDE "CLIModeSupport.ab3"
00015D28 <CLIModeSupport.ab3@710> XINCLUDE "CLIModeSupport.ab3"
00015D9C <CLIModeSupport.ab3@711> XINCLUDE "CLIModeSupport.ab3"
00015DA2 <CLIModeSupport.ab3@712> XINCLUDE "CLIModeSupport.ab3"
00015DEC <CLIModeSupport.ab3@713> XINCLUDE "CLIModeSupport.ab3"
00015E36 <CLIModeSupport.ab3@714> XINCLUDE "CLIModeSupport.ab3"
00015E66 <CLIModeSupport.ab3@715> XINCLUDE "CLIModeSupport.ab3"
00015E96 <CLIModeSupport.ab3@716> XINCLUDE "CLIModeSupport.ab3"
00015EC0 <CLIModeSupport.ab3@717> XINCLUDE "CLIModeSupport.ab3"
00015F12 <CLIModeSupport.ab3@718> XINCLUDE "CLIModeSupport.ab3"
00015F68 <CLIModeSupport.ab3@719> XINCLUDE "CLIModeSupport.ab3"
00015FB8 <CLIModeSupport.ab3@720> XINCLUDE "CLIModeSupport.ab3"
0001601E <CLIModeSupport.ab3@721> XINCLUDE "CLIModeSupport.ab3"
0001608A <CLIModeSupport.ab3@722> XINCLUDE "CLIModeSupport.ab3"
000160B6 <CLIModeSupport.ab3@723> XINCLUDE "CLIModeSupport.ab3"
000160E6 <CLIModeSupport.ab3@724> XINCLUDE "CLIModeSupport.ab3"
00016162 <CLIModeSupport.ab3@725> XINCLUDE "CLIModeSupport.ab3"
00016192 <CLIModeSupport.ab3@726> XINCLUDE "CLIModeSupport.ab3"
000161C2 <CLIModeSupport.ab3@727> XINCLUDE "CLIModeSupport.ab3"
000161F2 <CLIModeSupport.ab3@728> XINCLUDE "CLIModeSupport.ab3"
00016222 <CLIModeSupport.ab3@729> XINCLUDE "CLIModeSupport.ab3"
00016252 <CLIModeSupport.ab3@730> XINCLUDE "CLIModeSupport.ab3"
00016282 <CLIModeSupport.ab3@731> XINCLUDE "CLIModeSupport.ab3"
000162B2 <CLIModeSupport.ab3@732> XINCLUDE "CLIModeSupport.ab3"
000162E2 <CLIModeSupport.ab3@733> XINCLUDE "CLIModeSupport.ab3"
00016312 <CLIModeSupport.ab3@734> XINCLUDE "CLIModeSupport.ab3"
00016342 <CLIModeSupport.ab3@735> XINCLUDE "CLIModeSupport.ab3"
000163BE <CLIModeSupport.ab3@736> XINCLUDE "CLIModeSupport.ab3"
000163F0 <CLIModeSupport.ab3@737> XINCLUDE "CLIModeSupport.ab3"
00016422 <CLIModeSupport.ab3@738> XINCLUDE "CLIModeSupport.ab3"
00016452 <CLIModeSupport.ab3@739> XINCLUDE "CLIModeSupport.ab3"
00016458 <CLIModeSupport.ab3@740> XINCLUDE "CLIModeSupport.ab3"
000164CC <CLIModeSupport.ab3@741> XINCLUDE "CLIModeSupport.ab3"
00016538 <CLIModeSupport.ab3@742> XINCLUDE "CLIModeSupport.ab3"
0001654A <CLIModeSupport.ab3@743> XINCLUDE "CLIModeSupport.ab3"
00016578 <CLIModeSupport.ab3@744> XINCLUDE "CLIModeSupport.ab3"
000165A0 <CLIModeSupport.ab3@745> XINCLUDE "CLIModeSupport.ab3"
000165B4 <CLIModeSupport.ab3@746> XINCLUDE "CLIModeSupport.ab3"
000165DE <CLIModeSupport.ab3@747> XINCLUDE "CLIModeSupport.ab3"
00016622 <CLIModeSupport.ab3@748> XINCLUDE "CLIModeSupport.ab3"
00016632 <CLIModeSupport.ab3@749> XINCLUDE "CLIModeSupport.ab3"
00016642 <CLIModeSupport.ab3@750> XINCLUDE "CLIModeSupport.ab3"
00016648 <CLIModeSupport.ab3@751> XINCLUDE "CLIModeSupport.ab3"
00016658 <CLIModeSupport.ab3@753> XINCLUDE "CLIModeSupport.ab3"
00016666 <CLIModeSupport.ab3@757> XINCLUDE "CLIModeSupport.ab3"
00016670 <CLIModeSupport.ab3@760> XINCLUDE "CLIModeSupport.ab3"
000166A8 <CLIModeSupport.ab3@763> XINCLUDE "CLIModeSupport.ab3"
000166E0 <CLIModeSupport.ab3@764> XINCLUDE "CLIModeSupport.ab3"
00016718 <CLIModeSupport.ab3@765> XINCLUDE "CLIModeSupport.ab3"
00016728 <CLIModeSupport.ab3@766> XINCLUDE "CLIModeSupport.ab3"
00016790 <CLIModeSupport.ab3@767> XINCLUDE "CLIModeSupport.ab3"
000167C8 <CLIModeSupport.ab3@768> XINCLUDE "CLIModeSupport.ab3"
000167D8 <CLIModeSupport.ab3@769> XINCLUDE "CLIModeSupport.ab3"
000167E8 <CLIModeSupport.ab3@770> XINCLUDE "CLIModeSupport.ab3"
00016850 <CLIModeSupport.ab3@771> XINCLUDE "CLIModeSupport.ab3"
000168B8 <CLIModeSupport.ab3@772> XINCLUDE "CLIModeSupport.ab3"
00016920 <CLIModeSupport.ab3@773> XINCLUDE "CLIModeSupport.ab3"
00016988 <CLIModeSupport.ab3@774> XINCLUDE "CLIModeSupport.ab3"
000169F0 <CLIModeSupport.ab3@775> XINCLUDE "CLIModeSupport.ab3"
00016A58 <CLIModeSupport.ab3@776> XINCLUDE "CLIModeSupport.ab3"
00016AC0 <CLIModeSupport.ab3@777> XINCLUDE "CLIModeSupport.ab3"
00016B28 <CLIModeSupport.ab3@778> XINCLUDE "CLIModeSupport.ab3"
00016B38 <CLIModeSupport.ab3@779> XINCLUDE "CLIModeSupport.ab3"
00016B70 <CLIModeSupport.ab3@781> XINCLUDE "CLIModeSupport.ab3"
00016BAA <CLIModeSupport.ab3@782> XINCLUDE "CLIModeSupport.ab3"
00016BE4 <CLIModeSupport.ab3@783> XINCLUDE "CLIModeSupport.ab3"
00016C1C <CLIModeSupport.ab3@784> XINCLUDE "CLIModeSupport.ab3"
00016C38 <CLIModeSupport.ab3@785> XINCLUDE "CLIModeSupport.ab3"
00016C70 <CLIModeSupport.ab3@786> XINCLUDE "CLIModeSupport.ab3"
00016C96 <CLIModeSupport.ab3@788> XINCLUDE "CLIModeSupport.ab3"
00016C9E <CLIModeSupport.ab3@791> XINCLUDE "CLIModeSupport.ab3"
00016CA6 <CLIModeSupport.ab3@793> XINCLUDE "CLIModeSupport.ab3"
00016CAE <CLIModeSupport.ab3@794> XINCLUDE "CLIModeSupport.ab3"
00016CB6 <CLIModeSupport.ab3@796> XINCLUDE "CLIModeSupport.ab3"
00016CCA <CLIModeSupport.ab3@797> XINCLUDE "CLIModeSupport.ab3"
00016CF8 <CLIModeSupport.ab3@798> XINCLUDE "CLIModeSupport.ab3"
00016D12 <CLIModeSupport.ab3@799> XINCLUDE "CLIModeSupport.ab3"
00016D20 <CLIModeSupport.ab3@800> XINCLUDE "CLIModeSupport.ab3"
00016D8C <CLIModeSupport.ab3@801> XINCLUDE "CLIModeSupport.ab3"
00016DB2 <CLIModeSupport.ab3@802> XINCLUDE "CLIModeSupport.ab3"
00016DCE <CLIModeSupport.ab3@803> XINCLUDE "CLIModeSupport.ab3"
00016DD8 <CLIModeSupport.ab3@804> XINCLUDE "CLIModeSupport.ab3"
00016DE2 <CLIModeSupport.ab3@805> XINCLUDE "CLIModeSupport.ab3"
00016DEE <CLIModeSupport.ab3@806> XINCLUDE "CLIModeSupport.ab3"
00016DFC <CLIModeSupport.ab3@807> XINCLUDE "CLIModeSupport.ab3"
00016E08 <CLIModeSupport.ab3@808> XINCLUDE "CLIModeSupport.ab3"
00016E44 <CLIModeSupport.ab3@809> XINCLUDE "CLIModeSupport.ab3"
00016E5E <CLIModeSupport.ab3@810> XINCLUDE "CLIModeSupport.ab3"
00016E6C <CLIModeSupport.ab3@811> XINCLUDE "CLIModeSupport.ab3"
00016E8C <CLIModeSupport.ab3@812> XINCLUDE "CLIModeSupport.ab3"
00016E9A <CLIModeSupport.ab3@813> XINCLUDE "CLIModeSupport.ab3"
00016EA8 <CLIModeSupport.ab3@814> XINCLUDE "CLIModeSupport.ab3"
00016EAE <CLIModeSupport.ab3@816> XINCLUDE "CLIModeSupport.ab3"
00016EBE <CLIModeSupport.ab3@817> XINCLUDE "CLIModeSupport.ab3"
00016EC2 <CLIModeSupport.ab3@819> XINCLUDE "CLIModeSupport.ab3"
00016EF6 <CLIModeSupport.ab3@820> XINCLUDE "CLIModeSupport.ab3"
00016F2A <CLIModeSupport.ab3@821> XINCLUDE "CLIModeSupport.ab3"
00016F2E <CLIModeSupport.ab3@822> XINCLUDE "CLIModeSupport.ab3"
00016F62 <CLIModeSupport.ab3@823> XINCLUDE "CLIModeSupport.ab3"
00016F66 <CLIModeSupport.ab3@824> XINCLUDE "CLIModeSupport.ab3"
00016F9A <CLIModeSupport.ab3@825> XINCLUDE "CLIModeSupport.ab3"
00016FA0 <CLIModeSupport.ab3@826> XINCLUDE "CLIModeSupport.ab3"
00016FD6 <CLIModeSupport.ab3@828> XINCLUDE "CLIModeSupport.ab3"
0001700C <CLIModeSupport.ab3@829> XINCLUDE "CLIModeSupport.ab3"
00017042 <CLIModeSupport.ab3@830> XINCLUDE "CLIModeSupport.ab3"
0001707A <CLIModeSupport.ab3@831> XINCLUDE "CLIModeSupport.ab3"
000170B2 <CLIModeSupport.ab3@832> XINCLUDE "CLIModeSupport.ab3"
00017152 <CLIModeSupport.ab3@834> XINCLUDE "CLIModeSupport.ab3"
00017192 <CLIModeSupport.ab3@835> XINCLUDE "CLIModeSupport.ab3"
000171C8 <CLIModeSupport.ab3@836> XINCLUDE "CLIModeSupport.ab3"
000171FE <CLIModeSupport.ab3@837> XINCLUDE "CLIModeSupport.ab3"
00017236 <CLIModeSupport.ab3@840> XINCLUDE "CLIModeSupport.ab3"
00017254 <CLIModeSupport.ab3@841> XINCLUDE "CLIModeSupport.ab3"
00017258 <CLIModeSupport.ab3@842> XINCLUDE "CLIModeSupport.ab3"
0001725E <CLIModeSupport.ab3@843> XINCLUDE "CLIModeSupport.ab3"
00017264 <CLIModeSupport.ab3@844> XINCLUDE "CLIModeSupport.ab3"
0001726A <CLIModeSupport.ab3@845> XINCLUDE "CLIModeSupport.ab3"
0001726E <CLIModeSupport.ab3@846> XINCLUDE "CLIModeSupport.ab3"
00017298 <CLIModeSupport.ab3@847> XINCLUDE "CLIModeSupport.ab3"
000172AC <CLIModeSupport.ab3@851> XINCLUDE "CLIModeSupport.ab3"
000172EA <CLIModeSupport.ab3@852> XINCLUDE "CLIModeSupport.ab3"
0001731E <CLIModeSupport.ab3@853> XINCLUDE "CLIModeSupport.ab3"
00017354 <CLIModeSupport.ab3@857> XINCLUDE "CLIModeSupport.ab3"
000173AC <CLIModeSupport.ab3@859> XINCLUDE "CLIModeSupport.ab3"
000173DA <CLIModeSupport.ab3@860> XINCLUDE "CLIModeSupport.ab3"
000173DE <CLIModeSupport.ab3@861> XINCLUDE "CLIModeSupport.ab3"
00017414 <CLIModeSupport.ab3@862> XINCLUDE "CLIModeSupport.ab3"
00017442 <CLIModeSupport.ab3@863> XINCLUDE "CLIModeSupport.ab3"
00017470 <CLIModeSupport.ab3@865> XINCLUDE "CLIModeSupport.ab3"
00017474 <CLIModeSupport.ab3@866> XINCLUDE "CLIModeSupport.ab3"
000174AA <CLIModeSupport.ab3@867> XINCLUDE "CLIModeSupport.ab3"
000174D8 <CLIModeSupport.ab3@869> XINCLUDE "CLIModeSupport.ab3"
000174DC <CLIModeSupport.ab3@870> XINCLUDE "CLIModeSupport.ab3"
00017540 <CLIModeSupport.ab3@871> XINCLUDE "CLIModeSupport.ab3"
00017546 <CLIModeSupport.ab3@874> XINCLUDE "CLIModeSupport.ab3"
00017580 <CLIModeSupport.ab3@875> XINCLUDE "CLIModeSupport.ab3"
0001758A <CLIModeSupport.ab3@878> XINCLUDE "CLIModeSupport.ab3"
00017594 <CLIModeSupport.ab3@880> XINCLUDE "CLIModeSupport.ab3"
000175AE <CLIModeSupport.ab3@881> XINCLUDE "CLIModeSupport.ab3"
000175D8 <CLIModeSupport.ab3@884> XINCLUDE "CLIModeSupport.ab3"
000175DE <CLIModeSupport.ab3@885> XINCLUDE "CLIModeSupport.ab3"
000175FE <CLIModeSupport.ab3@886> XINCLUDE "CLIModeSupport.ab3"
00017608 <CLIModeSupport.ab3@887> XINCLUDE "CLIModeSupport.ab3"
0001760C <CLIModeSupport.ab3@888> XINCLUDE "CLIModeSupport.ab3"
0001760E <CLIModeSupport.ab3@889> XINCLUDE "CLIModeSupport.ab3"
0001762C <CLIModeSupport.ab3@890> XINCLUDE "CLIModeSupport.ab3"
0001762E <CLIModeSupport.ab3@891> XINCLUDE "CLIModeSupport.ab3"
00017634 <CLIModeSupport.ab3@892> XINCLUDE "CLIModeSupport.ab3"
0001763A <CLIModeSupport.ab3@894> XINCLUDE "CLIModeSupport.ab3"
00017664 <CLIModeSupport.ab3@895> XINCLUDE "CLIModeSupport.ab3"
00017666 <CLIModeSupport.ab3@896> XINCLUDE "CLIModeSupport.ab3"
00017694 <CLIModeSupport.ab3@897> XINCLUDE "CLIModeSupport.ab3"
00017698 <CLIModeSupport.ab3@898> XINCLUDE "CLIModeSupport.ab3"
000176C6 <CLIModeSupport.ab3@899> XINCLUDE "CLIModeSupport.ab3"
000176CA <CLIModeSupport.ab3@900> XINCLUDE "CLIModeSupport.ab3"
000176F0 <CLIModeSupport.ab3@901> XINCLUDE "CLIModeSupport.ab3"
00017700 <CLIModeSupport.ab3@902> XINCLUDE "CLIModeSupport.ab3"
00017706 <CLIModeSupport.ab3@903> XINCLUDE "CLIModeSupport.ab3"
0001770C <CLIModeSupport.ab3@904> XINCLUDE "CLIModeSupport.ab3"
00017746 <CLIModeSupport.ab3@905> XINCLUDE "CLIModeSupport.ab3"
00017750 <CLIModeSupport.ab3@907> XINCLUDE "CLIModeSupport.ab3"
0001776A <CLIModeSupport.ab3@908> XINCLUDE "CLIModeSupport.ab3"
00017788 <CLIModeSupport.ab3@911> XINCLUDE "CLIModeSupport.ab3"
000177B2 <CLIModeSupport.ab3@912> XINCLUDE "CLIModeSupport.ab3"
000177E0 <CLIModeSupport.ab3@913> XINCLUDE "CLIModeSupport.ab3"
00017870 <CLIModeSupport.ab3@914> XINCLUDE "CLIModeSupport.ab3"
0001787A <CLIModeSupport.ab3@916> XINCLUDE "CLIModeSupport.ab3"
0001788E <CLIModeSupport.ab3@917> XINCLUDE "CLIModeSupport.ab3"
000178CA <CLIModeSupport.ab3@918> XINCLUDE "CLIModeSupport.ab3"
00017906 <CLIModeSupport.ab3@919> XINCLUDE "CLIModeSupport.ab3"
00017942 <CLIModeSupport.ab3@920> XINCLUDE "CLIModeSupport.ab3"
0001797E <CLIModeSupport.ab3@921> XINCLUDE "CLIModeSupport.ab3"
000179BA <CLIModeSupport.ab3@922> XINCLUDE "CLIModeSupport.ab3"
000179C0 <CLIModeSupport.ab3@923> XINCLUDE "CLIModeSupport.ab3"
000179FA <CLIModeSupport.ab3@924> XINCLUDE "CLIModeSupport.ab3"
00017A0C <CLIModeSupport.ab3@929> XINCLUDE "CLIModeSupport.ab3"
00017A1C <CLIModeSupport.ab3@930> XINCLUDE "CLIModeSupport.ab3"
00017A28 <CLIModeSupport.ab3@933> XINCLUDE "CLIModeSupport.ab3"
00017A42 <CLIModeSupport.ab3@934> XINCLUDE "CLIModeSupport.ab3"
00017A44 <CLIModeSupport.ab3@936> XINCLUDE "CLIModeSupport.ab3"
00017A62 <CLIModeSupport.ab3@937> XINCLUDE "CLIModeSupport.ab3"
00017A68 <CLIModeSupport.ab3@938> XINCLUDE "CLIModeSupport.ab3"
00017A92 <CLIModeSupport.ab3@939> XINCLUDE "CLIModeSupport.ab3"
00017A94 <CLIModeSupport.ab3@940> XINCLUDE "CLIModeSupport.ab3"
00017A9E <CLIModeSupport.ab3@942> XINCLUDE "CLIModeSupport.ab3"
00017AA4 <CLIModeSupport.ab3@943> XINCLUDE "CLIModeSupport.ab3"
00017AB6 <CLIModeSupport.ab3@946> XINCLUDE "CLIModeSupport.ab3"
00017AF0 <CLIModeSupport.ab3@963> XINCLUDE "CLIModeSupport.ab3"
00017B0A <CLIModeSupport.ab3@968> XINCLUDE "CLIModeSupport.ab3"
00017B1E <CLIModeSupport.ab3@970> XINCLUDE "CLIModeSupport.ab3"
00017B88 <CLIModeSupport.ab3@971> XINCLUDE "CLIModeSupport.ab3"
00017B8E <CLIModeSupport.ab3@972> XINCLUDE "CLIModeSupport.ab3"
00017BF8 <CLIModeSupport.ab3@973> XINCLUDE "CLIModeSupport.ab3"
00017C0C <CLIModeSupport.ab3@976> XINCLUDE "CLIModeSupport.ab3"
00017C76 <CLIModeSupport.ab3@977> XINCLUDE "CLIModeSupport.ab3"
00017CAC <CLIModeSupport.ab3@978> XINCLUDE "CLIModeSupport.ab3"
00017CB2 <CLIModeSupport.ab3@979> XINCLUDE "CLIModeSupport.ab3"
00017D1C <CLIModeSupport.ab3@980> XINCLUDE "CLIModeSupport.ab3"
00017D30 <CLIModeSupport.ab3@981> XINCLUDE "CLIModeSupport.ab3"
00017D66 <CLIModeSupport.ab3@982> XINCLUDE "CLIModeSupport.ab3"
00017D6C <CLIModeSupport.ab3@983> XINCLUDE "CLIModeSupport.ab3"
00017DA2 <CLIModeSupport.ab3@984> XINCLUDE "CLIModeSupport.ab3"
00017DB6 <CLIModeSupport.ab3@988> XINCLUDE "CLIModeSupport.ab3"
00017E20 <CLIModeSupport.ab3@989> XINCLUDE "CLIModeSupport.ab3"
00017E26 <CLIModeSupport.ab3@990> XINCLUDE "CLIModeSupport.ab3"
00017E90 <CLIModeSupport.ab3@991> XINCLUDE "CLIModeSupport.ab3"
00017EA4 <CLIModeSupport.ab3@994> XINCLUDE "CLIModeSupport.ab3"
00017EDA <CLIModeSupport.ab3@995> XINCLUDE "CLIModeSupport.ab3"
00017EE0 <CLIModeSupport.ab3@996> XINCLUDE "CLIModeSupport.ab3"
00017F16 <CLIModeSupport.ab3@997> XINCLUDE "CLIModeSupport.ab3"
00017F30 <CLIModeSupport.ab3@1002> XINCLUDE "CLIModeSupport.ab3"
00017F44 <CLIModeSupport.ab3@1004> XINCLUDE "CLIModeSupport.ab3"
00017FAE <CLIModeSupport.ab3@1005> XINCLUDE "CLIModeSupport.ab3"
00017FB4 <CLIModeSupport.ab3@1006> XINCLUDE "CLIModeSupport.ab3"
0001801E <CLIModeSupport.ab3@1007> XINCLUDE "CLIModeSupport.ab3"
00018032 <CLIModeSupport.ab3@1010> XINCLUDE "CLIModeSupport.ab3"
0001809C <CLIModeSupport.ab3@1011> XINCLUDE "CLIModeSupport.ab3"
000180A2 <CLIModeSupport.ab3@1012> XINCLUDE "CLIModeSupport.ab3"
0001810C <CLIModeSupport.ab3@1013> XINCLUDE "CLIModeSupport.ab3"
00018120 <CLIModeSupport.ab3@1016> XINCLUDE "CLIModeSupport.ab3"
0001818A <CLIModeSupport.ab3@1017> XINCLUDE "CLIModeSupport.ab3"
00018190 <CLIModeSupport.ab3@1018> XINCLUDE "CLIModeSupport.ab3"
000181FA <CLIModeSupport.ab3@1019> XINCLUDE "CLIModeSupport.ab3"
0001820E <CLIModeSupport.ab3@1022> XINCLUDE "CLIModeSupport.ab3"
00018278 <CLIModeSupport.ab3@1023> XINCLUDE "CLIModeSupport.ab3"
0001827E <CLIModeSupport.ab3@1024> XINCLUDE "CLIModeSupport.ab3"
000182E8 <CLIModeSupport.ab3@1025> XINCLUDE "CLIModeSupport.ab3"
000182FA <CLIModeSupport.ab3@1030> XINCLUDE "CLIModeSupport.ab3"
0001830A <CLIModeSupport.ab3@1031> XINCLUDE "CLIModeSupport.ab3"
00018314 <CLIModeSupport.ab3@1034> XINCLUDE "CLIModeSupport.ab3"
0001837E <CLIModeSupport.ab3@1035> XINCLUDE "CLIModeSupport.ab3"
00018384 <CLIModeSupport.ab3@1036> XINCLUDE "CLIModeSupport.ab3"
0001838A <CLIModeSupport.ab3@1037> XINCLUDE "CLIModeSupport.ab3"
000183F4 <CLIModeSupport.ab3@1038> XINCLUDE "CLIModeSupport.ab3"
000183FC <CLIModeSupport.ab3@1039> XINCLUDE "CLIModeSupport.ab3"
00018406 <CLIModeSupport.ab3@1042> XINCLUDE "CLIModeSupport.ab3"
00018470 <CLIModeSupport.ab3@1043> XINCLUDE "CLIModeSupport.ab3"
000184A6 <CLIModeSupport.ab3@1044> XINCLUDE "CLIModeSupport.ab3"
000184EA <CLIModeSupport.ab3@1045> XINCLUDE "CLIModeSupport.ab3"
000184EE <CLIModeSupport.ab3@1046> XINCLUDE "CLIModeSupport.ab3"
00018524 <CLIModeSupport.ab3@1047> XINCLUDE "CLIModeSupport.ab3"
0001852A <CLIModeSupport.ab3@1048> XINCLUDE "CLIModeSupport.ab3"
00018530 <CLIModeSupport.ab3@1049> XINCLUDE "CLIModeSupport.ab3"
0001859A <CLIModeSupport.ab3@1051> XINCLUDE "CLIModeSupport.ab3"
000185D0 <CLIModeSupport.ab3@1052> XINCLUDE "CLIModeSupport.ab3"
000185D6 <CLIModeSupport.ab3@1054> XINCLUDE "CLIModeSupport.ab3"
00018604 <CLIModeSupport.ab3@1058> XINCLUDE "CLIModeSupport.ab3"
00018608 <CLIModeSupport.ab3@1059> XINCLUDE "CLIModeSupport.ab3"
00018630 <CLIModeSupport.ab3@1060> XINCLUDE "CLIModeSupport.ab3"
00018636 <CLIModeSupport.ab3@1063> XINCLUDE "CLIModeSupport.ab3"
0001863C <CLIModeSupport.ab3@1064> XINCLUDE "CLIModeSupport.ab3"
00018642 <CLIModeSupport.ab3@1065> XINCLUDE "CLIModeSupport.ab3"
0001864C <CLIModeSupport.ab3@1066> XINCLUDE "CLIModeSupport.ab3"
00018656 <CLIModeSupport.ab3@1067> XINCLUDE "CLIModeSupport.ab3"
00018684 <CLIModeSupport.ab3@1069> XINCLUDE "CLIModeSupport.ab3"
000186B0 <CLIModeSupport.ab3@1071> XINCLUDE "CLIModeSupport.ab3"
000186B8 <CLIModeSupport.ab3@1072> XINCLUDE "CLIModeSupport.ab3"
0001871E <CLIModeSupport.ab3@1075> XINCLUDE "CLIModeSupport.ab3"
00018752 <CLIModeSupport.ab3@1076> XINCLUDE "CLIModeSupport.ab3"
00018758 <CLIModeSupport.ab3@1077> XINCLUDE "CLIModeSupport.ab3"
000187D8 <CLIModeSupport.ab3@1078> XINCLUDE "CLIModeSupport.ab3"
000187EA <CLIModeSupport.ab3@1080> XINCLUDE "CLIModeSupport.ab3"
00018850 <CLIModeSupport.ab3@1081> XINCLUDE "CLIModeSupport.ab3"
000188B6 <CLIModeSupport.ab3@1082> XINCLUDE "CLIModeSupport.ab3"
000188BC <CLIModeSupport.ab3@1083> XINCLUDE "CLIModeSupport.ab3"
000188C4 <CLIModeSupport.ab3@1084> XINCLUDE "CLIModeSupport.ab3"
000188C6 <CLIModeSupport.ab3@1088> XINCLUDE "CLIModeSupport.ab3"
000188E4 <CLIModeSupport.ab3@1089> XINCLUDE "CLIModeSupport.ab3"
00018922 <CLIModeSupport.ab3@1090> XINCLUDE "CLIModeSupport.ab3"
00018960 <CLIModeSupport.ab3@1091> XINCLUDE "CLIModeSupport.ab3"
00018966 <CLIModeSupport.ab3@1093> XINCLUDE "CLIModeSupport.ab3"
0001896C <CLIModeSupport.ab3@1094> XINCLUDE "CLIModeSupport.ab3"
00018972 <CLIModeSupport.ab3@1095> XINCLUDE "CLIModeSupport.ab3"
0001897C <CLIModeSupport.ab3@1098> XINCLUDE "CLIModeSupport.ab3"
00018982 <CLIModeSupport.ab3@1099> XINCLUDE "CLIModeSupport.ab3"
00018988 <CLIModeSupport.ab3@1100> XINCLUDE "CLIModeSupport.ab3"
0001898E <CLIModeSupport.ab3@1101> XINCLUDE "CLIModeSupport.ab3"
00018994 <CLIModeSupport.ab3@1102> XINCLUDE "CLIModeSupport.ab3"
00018998 <CLIModeSupport.ab3@1103> XINCLUDE "CLIModeSupport.ab3"
000189A2 <CLIModeSupport.ab3@1104> XINCLUDE "CLIModeSupport.ab3"
000189A6 <CLIModeSupport.ab3@1105> XINCLUDE "CLIModeSupport.ab3"
000189D0 <CLIModeSupport.ab3@1108> XINCLUDE "CLIModeSupport.ab3"
000189D2 <CLIModeSupport.ab3@1109> XINCLUDE "CLIModeSupport.ab3"
000189D8 <CLIModeSupport.ab3@1111> XINCLUDE "CLIModeSupport.ab3"
000189DC <CLIModeSupport.ab3@1112> XINCLUDE "CLIModeSupport.ab3"
000189E2 <CLIModeSupport.ab3@1114> XINCLUDE "CLIModeSupport.ab3"
000189E6 <CLIModeSupport.ab3@1115> XINCLUDE "CLIModeSupport.ab3"
000189F6 <CLIModeSupport.ab3@1117> XINCLUDE "CLIModeSupport.ab3"
00018A50 <CLIModeSupport.ab3@1118> XINCLUDE "CLIModeSupport.ab3"
00018A62 <CLIModeSupport.ab3@1120> XINCLUDE "CLIModeSupport.ab3"
00018ACC <CLIModeSupport.ab3@1121> XINCLUDE "CLIModeSupport.ab3"
00018AD2 <CLIModeSupport.ab3@1122> XINCLUDE "CLIModeSupport.ab3"
00018B1C <CLIModeSupport.ab3@1123> XINCLUDE "CLIModeSupport.ab3"
00018B2A <CLIModeSupport.ab3@1126> XINCLUDE "CLIModeSupport.ab3"
00018B56 <CLIModeSupport.ab3@1127> XINCLUDE "CLIModeSupport.ab3"
00018BFC <CLIModeSupport.ab3@1128> XINCLUDE "CLIModeSupport.ab3"
00018C1A <CLIModeSupport.ab3@1129> XINCLUDE "CLIModeSupport.ab3"
00018C20 <CLIModeSupport.ab3@1130> XINCLUDE "CLIModeSupport.ab3"
00018C4A <CLIModeSupport.ab3@1131> XINCLUDE "CLIModeSupport.ab3"
00018C50 <CLIModeSupport.ab3@1133> XINCLUDE "CLIModeSupport.ab3"
00018C88 <CLIModeSupport.ab3@1134> XINCLUDE "CLIModeSupport.ab3"
00018C94 <CLIModeSupport.ab3@1137> XINCLUDE "CLIModeSupport.ab3"
00018CAE <CLIModeSupport.ab3@1138> XINCLUDE "CLIModeSupport.ab3"
00018CBA <CLIModeSupport.ab3@1140> XINCLUDE "CLIModeSupport.ab3"
00018CD4 <CLIModeSupport.ab3@1142> XINCLUDE "CLIModeSupport.ab3"
00018CFE <CLIModeSupport.ab3@1146> XINCLUDE "CLIModeSupport.ab3"
00018D22 <CLIModeSupport.ab3@1147> XINCLUDE "CLIModeSupport.ab3"
00018D60 <CLIModeSupport.ab3@1148> XINCLUDE "CLIModeSupport.ab3"
00018D64 <CLIModeSupport.ab3@1149> XINCLUDE "CLIModeSupport.ab3"
00018DA2 <CLIModeSupport.ab3@1151> XINCLUDE "CLIModeSupport.ab3"
00018DA6 <CLIModeSupport.ab3@1152> XINCLUDE "CLIModeSupport.ab3"
00018DE4 <CLIModeSupport.ab3@1155> XINCLUDE "CLIModeSupport.ab3"
00018E22 <CLIModeSupport.ab3@1156> XINCLUDE "CLIModeSupport.ab3"
00018E24 <CLIModeSupport.ab3@1157> XINCLUDE "CLIModeSupport.ab3"
00018E58 <CLIModeSupport.ab3@1158> XINCLUDE "CLIModeSupport.ab3"
00018E5E <CLIModeSupport.ab3@1160> XINCLUDE "CLIModeSupport.ab3"
00018EA2 <CLIModeSupport.ab3@1161> XINCLUDE "CLIModeSupport.ab3"
00018EB4 <CLIModeSupport.ab3@1162> XINCLUDE "CLIModeSupport.ab3"
00018EBC <CLIModeSupport.ab3@1164> XINCLUDE "CLIModeSupport.ab3"
00018EC2 <CLIModeSupport.ab3@1165> XINCLUDE "CLIModeSupport.ab3"
00018ECC <CLIModeSupport.ab3@1167> XINCLUDE "CLIModeSupport.ab3"
00018EDA <CLIModeSupport.ab3@1168> XINCLUDE "CLIModeSupport.ab3"
00018EE0 <CLIModeSupport.ab3@1169> XINCLUDE "CLIModeSupport.ab3"
00018F08 <CLIModeSupport.ab3@1170> XINCLUDE "CLIModeSupport.ab3"
00018F22 <CLIModeSupport.ab3@1171> XINCLUDE "CLIModeSupport.ab3"
00018F2C <CLIModeSupport.ab3@1172> XINCLUDE "CLIModeSupport.ab3"
00018F32 <CLIModeSupport.ab3@1173> XINCLUDE "CLIModeSupport.ab3"
00018F50 <CLIModeSupport.ab3@1175> XINCLUDE "CLIModeSupport.ab3"
00018F5A <CLIModeSupport.ab3@1176> XINCLUDE "CLIModeSupport.ab3"
00018F60 <CLIModeSupport.ab3@1177> XINCLUDE "CLIModeSupport.ab3"
00018F66 <CLIModeSupport.ab3@1178> XINCLUDE "CLIModeSupport.ab3"
00018F70 <CLIModeSupport.ab3@1179> XINCLUDE "CLIModeSupport.ab3"
00018F7E <CLIModeSupport.ab3@1180> XINCLUDE "CLIModeSupport.ab3"
00018F84 <CLIModeSupport.ab3@1181> XINCLUDE "CLIModeSupport.ab3"
00018F94 <CLIModeSupport.ab3@1183> XINCLUDE "CLIModeSupport.ab3"
00018FC0 <CLIModeSupport.ab3@1184> XINCLUDE "CLIModeSupport.ab3"
00018FD6 <CLIModeSupport.ab3@1185> XINCLUDE "CLIModeSupport.ab3"
00018FE0 <CLIModeSupport.ab3@1186> XINCLUDE "CLIModeSupport.ab3"
00018FE6 <CLIModeSupport.ab3@1187> XINCLUDE "CLIModeSupport.ab3"
0001903E <CLIModeSupport.ab3@1189> XINCLUDE "CLIModeSupport.ab3"
000190AC <CLIModeSupport.ab3@1191> XINCLUDE "CLIModeSupport.ab3"
000190C4 <CLIModeSupport.ab3@1192> XINCLUDE "CLIModeSupport.ab3"
000190CA <CLIModeSupport.ab3@1193> XINCLUDE "CLIModeSupport.ab3"
00019102 <CLIModeSupport.ab3@1194> XINCLUDE "CLIModeSupport.ab3"
00019130 <CLIModeSupport.ab3@1196> XINCLUDE "CLIModeSupport.ab3"
0001915A <CLIModeSupport.ab3@1197> XINCLUDE "CLIModeSupport.ab3"
00019164 <CLIModeSupport.ab3@1199> XINCLUDE "CLIModeSupport.ab3"
0001918C <CLIModeSupport.ab3@1200> XINCLUDE "CLIModeSupport.ab3"
000191B6 <CLIModeSupport.ab3@1201> XINCLUDE "CLIModeSupport.ab3"
00019258 <CLIModeSupport.ab3@1202> XINCLUDE "CLIModeSupport.ab3"
00019266 <CLIModeSupport.ab3@1203> XINCLUDE "CLIModeSupport.ab3"
000192B6 <CLIModeSupport.ab3@1204> XINCLUDE "CLIModeSupport.ab3"
000192C6 <CLIModeSupport.ab3@1205> XINCLUDE "CLIModeSupport.ab3"
0001938E <CLIModeSupport.ab3@1206> XINCLUDE "CLIModeSupport.ab3"
000193C2 <CLIModeSupport.ab3@1208> XINCLUDE "CLIModeSupport.ab3"
000193F6 <CLIModeSupport.ab3@1209> XINCLUDE "CLIModeSupport.ab3"
0001942A <CLIModeSupport.ab3@1210> XINCLUDE "CLIModeSupport.ab3"
0001945E <CLIModeSupport.ab3@1211> XINCLUDE "CLIModeSupport.ab3"
00019492 <CLIModeSupport.ab3@1212> XINCLUDE "CLIModeSupport.ab3"
000194C6 <CLIModeSupport.ab3@1213> XINCLUDE "CLIModeSupport.ab3"
000194FA <CLIModeSupport.ab3@1214> XINCLUDE "CLIModeSupport.ab3"
0001952E <CLIModeSupport.ab3@1215> XINCLUDE "CLIModeSupport.ab3"
00019530 <CLIModeSupport.ab3@1217> XINCLUDE "CLIModeSupport.ab3"
00019574 <CLIModeSupport.ab3@1218> XINCLUDE "CLIModeSupport.ab3"
00019578 <CLIModeSupport.ab3@1219> XINCLUDE "CLIModeSupport.ab3"
000195B6 <CLIModeSupport.ab3@1222> XINCLUDE "CLIModeSupport.ab3"
000195F4 <CLIModeSupport.ab3@1223> XINCLUDE "CLIModeSupport.ab3"
000195F6 <CLIModeSupport.ab3@1224> XINCLUDE "CLIModeSupport.ab3"
000195FC <CLIModeSupport.ab3@1225> XINCLUDE "CLIModeSupport.ab3"
00019600 <CLIModeSupport.ab3@1226> XINCLUDE "CLIModeSupport.ab3"
00019602 <CLIModeSupport.ab3@1228> XINCLUDE "CLIModeSupport.ab3"
00019646 <CLIModeSupport.ab3@1229> XINCLUDE "CLIModeSupport.ab3"
0001968A <CLIModeSupport.ab3@1230> XINCLUDE "CLIModeSupport.ab3"
0001968C <CLIModeSupport.ab3@1231> XINCLUDE "CLIModeSupport.ab3"
0001968E <CLIModeSupport.ab3@1232> XINCLUDE "CLIModeSupport.ab3"
00019690 <CLIModeSupport.ab3@1233> XINCLUDE "CLIModeSupport.ab3"
00019696 <CLIModeSupport.ab3@1234> XINCLUDE "CLIModeSupport.ab3"
0001969A <CLIModeSupport.ab3@1235> XINCLUDE "CLIModeSupport.ab3"
000196AA <CLIModeSupport.ab3@1237> XINCLUDE "CLIModeSupport.ab3"
000196C2 <CLIModeSupport.ab3@1238> XINCLUDE "CLIModeSupport.ab3"
000196DA <CLIModeSupport.ab3@1239> XINCLUDE "CLIModeSupport.ab3"
000196F2 <CLIModeSupport.ab3@1240> XINCLUDE "CLIModeSupport.ab3"
0001971C <CLIModeSupport.ab3@1242> XINCLUDE "CLIModeSupport.ab3"
00019746 <CLIModeSupport.ab3@1243> XINCLUDE "CLIModeSupport.ab3"
00019774 <CLIModeSupport.ab3@1245> XINCLUDE "CLIModeSupport.ab3"
00019778 <CLIModeSupport.ab3@1246> XINCLUDE "CLIModeSupport.ab3"
000197A0 <CLIModeSupport.ab3@1247> XINCLUDE "CLIModeSupport.ab3"
000197A2 <CLIModeSupport.ab3@1248> XINCLUDE "CLIModeSupport.ab3"
000197E6 <CLIModeSupport.ab3@1249> XINCLUDE "CLIModeSupport.ab3"
000197EA <CLIModeSupport.ab3@1250> XINCLUDE "CLIModeSupport.ab3"
0001982E <CLIModeSupport.ab3@1251> XINCLUDE "CLIModeSupport.ab3"
00019832 <CLIModeSupport.ab3@1252> XINCLUDE "CLIModeSupport.ab3"
00019870 <CLIModeSupport.ab3@1253> XINCLUDE "CLIModeSupport.ab3"
00019874 <CLIModeSupport.ab3@1254> XINCLUDE "CLIModeSupport.ab3"
000198B8 <CLIModeSupport.ab3@1256> XINCLUDE "CLIModeSupport.ab3"
000198BC <CLIModeSupport.ab3@1257> XINCLUDE "CLIModeSupport.ab3"
000198E2 <CLIModeSupport.ab3@1259> XINCLUDE "CLIModeSupport.ab3"
00019908 <CLIModeSupport.ab3@1260> XINCLUDE "CLIModeSupport.ab3"
0001992E <CLIModeSupport.ab3@1261> XINCLUDE "CLIModeSupport.ab3"
00019954 <CLIModeSupport.ab3@1262> XINCLUDE "CLIModeSupport.ab3"
0001997A <CLIModeSupport.ab3@1263> XINCLUDE "CLIModeSupport.ab3"
000199D0 <CLIModeSupport.ab3@1264> XINCLUDE "CLIModeSupport.ab3"
00019A26 <CLIModeSupport.ab3@1265> XINCLUDE "CLIModeSupport.ab3"
00019A74 <CLIModeSupport.ab3@1266> XINCLUDE "CLIModeSupport.ab3"
00019ACA <CLIModeSupport.ab3@1267> XINCLUDE "CLIModeSupport.ab3"
00019AF0 <CLIModeSupport.ab3@1268> XINCLUDE "CLIModeSupport.ab3"
00019B16 <CLIModeSupport.ab3@1269> XINCLUDE "CLIModeSupport.ab3"
00019B3C <CLIModeSupport.ab3@1270> XINCLUDE "CLIModeSupport.ab3"
00019B92 <CLIModeSupport.ab3@1271> XINCLUDE "CLIModeSupport.ab3"
00019BE0 <CLIModeSupport.ab3@1272> XINCLUDE "CLIModeSupport.ab3"
00019C2E <CLIModeSupport.ab3@1273> XINCLUDE "CLIModeSupport.ab3"
00019CE8 <CLIModeSupport.ab3@1274> XINCLUDE "CLIModeSupport.ab3"
00019D3E <CLIModeSupport.ab3@1275> XINCLUDE "CLIModeSupport.ab3"
00019D64 <CLIModeSupport.ab3@1276> XINCLUDE "CLIModeSupport.ab3"
00019D8A <CLIModeSupport.ab3@1277> XINCLUDE "CLIModeSupport.ab3"
00019DB0 <CLIModeSupport.ab3@1278> XINCLUDE "CLIModeSupport.ab3"
00019E06 <CLIModeSupport.ab3@1279> XINCLUDE "CLIModeSupport.ab3"
00019E5C <CLIModeSupport.ab3@1280> XINCLUDE "CLIModeSupport.ab3"
00019EAA <CLIModeSupport.ab3@1281> XINCLUDE "CLIModeSupport.ab3"
00019EF8 <CLIModeSupport.ab3@1282> XINCLUDE "CLIModeSupport.ab3"
00019F46 <CLIModeSupport.ab3@1283> XINCLUDE "CLIModeSupport.ab3"
00019F94 <CLIModeSupport.ab3@1284> XINCLUDE "CLIModeSupport.ab3"
00019FE2 <CLIModeSupport.ab3@1285> XINCLUDE "CLIModeSupport.ab3"
0001A030 <CLIModeSupport.ab3@1286> XINCLUDE "CLIModeSupport.ab3"
0001A07E <CLIModeSupport.ab3@1287> XINCLUDE "CLIModeSupport.ab3"
0001A0A4 <CLIModeSupport.ab3@1288> XINCLUDE "CLIModeSupport.ab3"
0001A0CA <CLIModeSupport.ab3@1289> XINCLUDE "CLIModeSupport.ab3"
0001A0F0 <CLIModeSupport.ab3@1290> XINCLUDE "CLIModeSupport.ab3"
0001A13E <CLIModeSupport.ab3@1291> XINCLUDE "CLIModeSupport.ab3"
0001A18C <CLIModeSupport.ab3@1292> XINCLUDE "CLIModeSupport.ab3"
0001A1E2 <CLIModeSupport.ab3@1293> XINCLUDE "CLIModeSupport.ab3"
0001A230 <CLIModeSupport.ab3@1294> XINCLUDE "CLIModeSupport.ab3"
0001A27E <CLIModeSupport.ab3@1295> XINCLUDE "CLIModeSupport.ab3"
0001A2CC <CLIModeSupport.ab3@1296> XINCLUDE "CLIModeSupport.ab3"
0001A2F2 <CLIModeSupport.ab3@1297> XINCLUDE "CLIModeSupport.ab3"
0001A318 <CLIModeSupport.ab3@1298> XINCLUDE "CLIModeSupport.ab3"
0001A33E <CLIModeSupport.ab3@1299> XINCLUDE "CLIModeSupport.ab3"
0001A376 <CLIModeSupport.ab3@1300> XINCLUDE "CLIModeSupport.ab3"
0001A39E <CLIModeSupport.ab3@1301> XINCLUDE "CLIModeSupport.ab3"
0001A3B2 <CLIModeSupport.ab3@1302> XINCLUDE "CLIModeSupport.ab3"
0001A426 <CLIModeSupport.ab3@1303> XINCLUDE "CLIModeSupport.ab3"
0001A46C <CLIModeSupport.ab3@1304> XINCLUDE "CLIModeSupport.ab3"
0001A51A <CLIModeSupport.ab3@1305> XINCLUDE "CLIModeSupport.ab3"
0001A586 <CLIModeSupport.ab3@1306> XINCLUDE "CLIModeSupport.ab3"
0001A596 <CLIModeSupport.ab3@1307> XINCLUDE "CLIModeSupport.ab3"
0001A5BC <CLIModeSupport.ab3@1309> XINCLUDE "CLIModeSupport.ab3"
0001A5C6 <CLIModeSupport.ab3@1311> XINCLUDE "CLIModeSupport.ab3"
0001A5F0 <CLIModeSupport.ab3@1312> XINCLUDE "CLIModeSupport.ab3"
0001A5F6 <CLIModeSupport.ab3@1313> XINCLUDE "CLIModeSupport.ab3"
0001A606 <CLIModeSupport.ab3@1315> XINCLUDE "CLIModeSupport.ab3"
0001A6A6 <CLIModeSupport.ab3@1317> XINCLUDE "CLIModeSupport.ab3"
0001A6E6 <CLIModeSupport.ab3@1318> XINCLUDE "CLIModeSupport.ab3"
0001A6EC <CLIModeSupport.ab3@1320> XINCLUDE "CLIModeSupport.ab3"
0001A74E <CLIModeSupport.ab3@1321> XINCLUDE "CLIModeSupport.ab3"
0001A758 <CLIModeSupport.ab3@1323> XINCLUDE "CLIModeSupport.ab3"
0001A762 <CLIModeSupport.ab3@1325> XINCLUDE "CLIModeSupport.ab3"
0001A77C <CLIModeSupport.ab3@1326> XINCLUDE "CLIModeSupport.ab3"
0001A79E <CLIModeSupport.ab3@1402> XINCLUDE "CLIModeSupport.ab3"
0001A7C0 <CLIModeSupport.ab3@1403> XINCLUDE "CLIModeSupport.ab3"
0001A81A <CLIModeSupport.ab3@1404> XINCLUDE "CLIModeSupport.ab3"
0001A83C <CLIModeSupport.ab3@1405> XINCLUDE "CLIModeSupport.ab3"
0001A85E <CLIModeSupport.ab3@1406> XINCLUDE "CLIModeSupport.ab3"
0001A8B8 <CLIModeSupport.ab3@1407> XINCLUDE "CLIModeSupport.ab3"
0001A8FA <CLIModeSupport.ab3@1408> XINCLUDE "CLIModeSupport.ab3"
0001A900 <CLIModeSupport.ab3@1410> XINCLUDE "CLIModeSupport.ab3"
0001A90E <CLIModeSupport.ab3@1411> XINCLUDE "CLIModeSupport.ab3"
0001A914 <CLIModeSupport.ab3@1413> XINCLUDE "CLIModeSupport.ab3"
0001A928 <CLIModeSupport.ab3@1414> XINCLUDE "CLIModeSupport.ab3"
0001A932 <CLIModeSupport.ab3@1415> XINCLUDE "CLIModeSupport.ab3"
0001A9AC <CLIModeSupport.ab3@1416> XINCLUDE "CLIModeSupport.ab3"
0001A9B6 <CLIModeSupport.ab3@1417> XINCLUDE "CLIModeSupport.ab3"
0001A9BC <CLIModeSupport.ab3@1418> XINCLUDE "CLIModeSupport.ab3"
0001A9D0 <CLIModeSupport.ab3@1421> XINCLUDE "CLIModeSupport.ab3"
0001A9DA <CLIModeSupport.ab3@1422> XINCLUDE "CLIModeSupport.ab3"
0001AA5A <CLIModeSupport.ab3@1423> XINCLUDE "CLIModeSupport.ab3"
0001AA64 <CLIModeSupport.ab3@1424> XINCLUDE "CLIModeSupport.ab3"
0001AA6A <CLIModeSupport.ab3@1425> XINCLUDE "CLIModeSupport.ab3"
0001AA7E <CLIModeSupport.ab3@1428> XINCLUDE "CLIModeSupport.ab3"
0001AA88 <CLIModeSupport.ab3@1429> XINCLUDE "CLIModeSupport.ab3"
0001AAD0 <CLIModeSupport.ab3@1430> XINCLUDE "CLIModeSupport.ab3"
0001AADE <CLIModeSupport.ab3@1431> XINCLUDE "CLIModeSupport.ab3"
0001AB04 <CLIModeSupport.ab3@1432> XINCLUDE "CLIModeSupport.ab3"
0001AB0E <CLIModeSupport.ab3@1433> XINCLUDE "CLIModeSupport.ab3"
0001AB78 <CLIModeSupport.ab3@1434> XINCLUDE "CLIModeSupport.ab3"
0001AC4A <CLIModeSupport.ab3@1435> XINCLUDE "CLIModeSupport.ab3"
0001AC54 <CLIModeSupport.ab3@1436> XINCLUDE "CLIModeSupport.ab3"
0001AC5A <CLIModeSupport.ab3@1437> XINCLUDE "CLIModeSupport.ab3"
0001AC64 <CLIModeSupport.ab3@1439> XINCLUDE "CLIModeSupport.ab3"
0001AC6A <CLIModeSupport.ab3@1440> XINCLUDE "CLIModeSupport.ab3"
0001AC7E <CLIModeSupport.ab3@1443> XINCLUDE "CLIModeSupport.ab3"
0001AC88 <CLIModeSupport.ab3@1444> XINCLUDE "CLIModeSupport.ab3"
0001ACD0 <CLIModeSupport.ab3@1445> XINCLUDE "CLIModeSupport.ab3"
0001ACDA <CLIModeSupport.ab3@1446> XINCLUDE "CLIModeSupport.ab3"
0001ACE0 <CLIModeSupport.ab3@1447> XINCLUDE "CLIModeSupport.ab3"
0001ACF4 <CLIModeSupport.ab3@1450> XINCLUDE "CLIModeSupport.ab3"
0001AD1A <CLIModeSupport.ab3@1451> XINCLUDE "CLIModeSupport.ab3"
0001AD2E <CLIModeSupport.ab3@1454> XINCLUDE "CLIModeSupport.ab3"
0001AD54 <CLIModeSupport.ab3@1455> XINCLUDE "CLIModeSupport.ab3"
0001AD68 <CLIModeSupport.ab3@1458> XINCLUDE "CLIModeSupport.ab3"
0001AD8E <CLIModeSupport.ab3@1459> XINCLUDE "CLIModeSupport.ab3"
0001ADA2 <CLIModeSupport.ab3@1462> XINCLUDE "CLIModeSupport.ab3"
0001ADAC <CLIModeSupport.ab3@1463> XINCLUDE "CLIModeSupport.ab3"
0001ADDA <CLIModeSupport.ab3@1464> XINCLUDE "CLIModeSupport.ab3"
0001AE2A <CLIModeSupport.ab3@1465> XINCLUDE "CLIModeSupport.ab3"
0001AE4A <CLIModeSupport.ab3@1466> XINCLUDE "CLIModeSupport.ab3"
0001AE62 <CLIModeSupport.ab3@1467> XINCLUDE "CLIModeSupport.ab3"
0001AF46 <CLIModeSupport.ab3@1468> XINCLUDE "CLIModeSupport.ab3"
0001AF50 <CLIModeSupport.ab3@1469> XINCLUDE "CLIModeSupport.ab3"
0001AF56 <CLIModeSupport.ab3@1470> XINCLUDE "CLIModeSupport.ab3"
0001AF58 <CLIModeSupport.ab3@1472> XINCLUDE "CLIModeSupport.ab3"
0001AF6C <CLIModeSupport.ab3@1473> XINCLUDE "CLIModeSupport.ab3"
0001AF9E <CLIModeSupport.ab3@1476> XINCLUDE "CLIModeSupport.ab3"
0001AFA4 <CLIModeSupport.ab3@1477> XINCLUDE "CLIModeSupport.ab3"
0001AFE8 <CLIModeSupport.ab3@1478> XINCLUDE "CLIModeSupport.ab3"
0001AFFA <CLIModeSupport.ab3@1479> XINCLUDE "CLIModeSupport.ab3"
0001B00C <CLIModeSupport.ab3@1480> XINCLUDE "CLIModeSupport.ab3"
0001B016 <CLIModeSupport.ab3@1481> XINCLUDE "CLIModeSupport.ab3"
0001B01C <CLIModeSupport.ab3@1482> XINCLUDE "CLIModeSupport.ab3"
0001B026 <CLIModeSupport.ab3@1484> XINCLUDE "CLIModeSupport.ab3"
0001B040 <CLIModeSupport.ab3@1485> XINCLUDE "CLIModeSupport.ab3"
0001B040 <AmiBlitz3.ab3@93> XINCLUDE "CLIModeSupport.ab3"
0001B0C0 <AmiBlitz3.ab3@98> dynassign.s = dos_GetToolString{"ASSIGN",default_assign$}       ; replaced hardcoded path  tomsmart1 2012 03 09
0001B0F8 <AmiBlitz3.ab3@99> If dynassign <> ""
0001B10E <AmiBlitz3.ab3@100>     *AssignSema.SignalSemaphore = FindSemaphore_(&dynassign)    ; does it already exist?
0001B118 <AmiBlitz3.ab3@101>     If *AssignSema
0001B128 <AmiBlitz3.ab3@102>       ObtainSemaphoreShared_ *AssignSema
0001B12E <AmiBlitz3.ab3@103>     Else                                                        ; no, create one...
0001B14E <AmiBlitz3.ab3@104>       *AssignSema = AllocVec_ (SizeOf.SignalSemaphore,#MEMF_PUBLIC|#MEMF_CLEAR)
0001B158 <AmiBlitz3.ab3@105>       If *AssignSema
0001B168 <AmiBlitz3.ab3@106>         InitSemaphore_ *AssignSema
0001B19C <AmiBlitz3.ab3@108>         *AssignSema\ss_Link\ln_Name = AllocVec_(FLen(dynassign)+1,#MEMF_PUBLIC|#MEMF_CLEAR)
0001B1AE <AmiBlitz3.ab3@109>         If *AssignSema\ss_Link\ln_Name
0001B1EA <AmiBlitz3.ab3@110>           Poke.s  *AssignSema\ss_Link\ln_Name,dynassign
0001B1F6 <AmiBlitz3.ab3@112>         *AssignSema\ss_Link\ln_Pri  = 1
0001B202 <AmiBlitz3.ab3@113>         *AssignSema\ss_Link\ln_Type = #NT_SIGNALSEM
0001B212 <AmiBlitz3.ab3@115>         AddSemaphore_ *AssignSema
0001B222 <AmiBlitz3.ab3@116>         ObtainSemaphoreShared_ *AssignSema
0001B26E <AmiBlitz3.ab3@122>   mydir.s = dos_GetProgDir{"Sys:"}
0001B2CE <AmiBlitz3.ab3@123>   If dos_SetAssign{dynassign,mydir,False}
0001B362 <AmiBlitz3.ab3@124>     dos_AddAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001B39A <AmiBlitz3.ab3@127>   Poke$ ?str_blitz3assign,dynassign
0001B41C <AmiBlitz3.ab3@128>   Poke$ ?str_defaultdbug,dos_AddPart{dynassign,"Debug/DefaultDBug"}
0001B49E <AmiBlitz3.ab3@131>   Poke$ ?str_path_acidlibs,dos_AddPart{dynassign, "BlitzLibs/AcidLibs"}
0001B520 <AmiBlitz3.ab3@132>   Poke$ ?str_path_deflibs ,dos_AddPart{dynassign, "BlitzLibs/DefLibs" }
0001B5A2 <AmiBlitz3.ab3@133>   Poke$ ?str_path_userlibs,dos_AddPart{dynassign, "BlitzLibs/UserLibs"}
0001B624 <AmiBlitz3.ab3@134>   Poke$ ?str_path_includes,dos_AddPart{dynassign, "Sourcecodes/Includes"}
0001B698 <AmiBlitz3.ab3@135>   my_systemdir$    = dos_AddPart{dynassign, "System"}
0001B70C <AmiBlitz3.ab3@136>   my_residentsdir$ = dos_AddPart{dynassign, "BlitzLibs/Residents"}
0001B780 <AmiBlitz3.ab3@137>   my_blitzlibsdir$ = dos_AddPart{dynassign, "BlitzLibs"}
0001B7AE <AmiBlitz3.ab3@138>   dos_CreateDir{my_blitzlibsdir$}
0001B7D2 <AmiBlitz3.ab3@139>   dos_CreateDir{Peek$(?str_path_userlibs)}
0001B800 <AmiBlitz3.ab3@140>   dos_CreateDir{my_residentsdir$}
0001B82E <AmiBlitz3.ab3@141>   dos_CreateDir{my_systemdir$}
0001B8F8 <AmiBlitz3.ab3@147> pedfile$ = dos_GetToolString{"EDITOR",dos_AddPart{my_systemdir$,"PED"}}
0001B930 <AmiBlitz3.ab3@148> Poke.s ?str_pedfile,pedfile$
0001B96E <AmiBlitz3.ab3@150> If dos_GetToolState{"START_WITHOUT_LIBS"} = -1
0001B97E <AmiBlitz3.ab3@151>   Poke.b ?start_without_libs,1
0001B984 <AmiBlitz3.ab3@152> Else
0001B994 <AmiBlitz3.ab3@153>   Poke.b ?start_without_libs,0
0001B9D2 <AmiBlitz3.ab3@156> If dos_GetToolState{"ONEPASSCOMPILING"} = -1
0001B9D8 <AmiBlitz3.ab3@157>   OnePassCompiling.l = True
0001B9DE <AmiBlitz3.ab3@158> Else
0001B9E4 <AmiBlitz3.ab3@159>   OnePassCompiling   = False
0001BA0A <AmiBlitz3.ab3@162> !TRANS_INIT{"AmiBlitz3"}     ; init localization via translation.include
0001BA38 <AmiBlitz3.ab3@167> If ( FindResident_("MorphOS") )
0001BA48 <AmiBlitz3.ab3@168>   Poke.b ?MorphOS,1      ; set it to use CacheClear_E
0001BA4E <AmiBlitz3.ab3@169> Else
0001BA5E <AmiBlitz3.ab3@170>   Poke.b ?MorphOS,0      ; set it to use CacheClear_U
0001BA64 <AmiBlitz3.ab3@175>  releaseexe.l               = False
0001BA6A <AmiBlitz3.ab3@176>  releasedbg_save.w          = 0
0001BA70 <AmiBlitz3.ab3@177>  releasemakesmall_save.b    = 0
0001BA76 <AmiBlitz3.ab3@178>  releasefuncoptimize_save.b = 0
0001BA7C <AmiBlitz3.ab3@179>  releasedebugger_save.b     = 0
0001BA92 <AmiBlitz3.ab3@182> 
0001BAE2 <AmiBlitz3.ab3@183>  comstatusstr   = !TRANS{"Initializing Compiler..."} ;default settings
0001BAEA <AmiBlitz3.ab3@184>  calcpro.l      = 0
0001BAF2 <AmiBlitz3.ab3@185>  calcpro_old.l  = 0
0001BAFE <AmiBlitz3.ab3@186>  typ_old.l      = -1
0001BB0A <AmiBlitz3.ab3@187>  pass_old.l     = -1
0001BB10 <AmiBlitz3.ab3@188>  update_comstatus_gui.b = False ; for the first
0001BB26 <AmiBlitz3.ab3@192> MaxLen dbg_detokenlinesBuffer.s = #MAX_dbg_detokenlinesBufferSize
0001BB32 <AmiBlitz3.ab3@193> dbg_fid.l = -1 ; no debug file id yet!
0001BB44 <AmiBlitz3.ab3@196> Poke.l ?maxerrorcount,#defaultmaxerrorcount                ; set the default value  tomsmart1
0001BB4E <AmiBlitz3.ab3@198> If CLIMode
0001BB54 <AmiBlitz3.ab3@201>   err.l      = False                                       ; indicate that an error has occured
0001BB5A <AmiBlitz3.ab3@202>   showhelp.l = False                                       ; show the CLI tool's help
0001BBB2 <AmiBlitz3.ab3@205>   cli_progpath.s      = dos_GetProgDir{default_assign$}    ; replaced hardcoded path  tomsmart1 2012 03 09
0001BBDA <AmiBlitz3.ab3@206>   cli_sourcefile.s    = ""
0001BC02 <AmiBlitz3.ab3@207>   cli_exefile.s       = ""
0001BC2A <AmiBlitz3.ab3@208>   cli_savefile.s      = ""
0001BC52 <AmiBlitz3.ab3@209>   cli_dumpfile.s      = ""
0001BC7A <AmiBlitz3.ab3@210>   cli_includepath.s   = ""
0001BCA2 <AmiBlitz3.ab3@211>   cli_blitzlibpath.s  = ""
0001BCA8 <AmiBlitz3.ab3@212>   cli_debuginfo.l     = False
0001BCAE <AmiBlitz3.ab3@213>   cli_run.l           = False
0001BCB6 <AmiBlitz3.ab3@214>   cli_dumpflags.l     = $FFFFFFFF
0001BCDE <AmiBlitz3.ab3@215>   cli_info.s          = ""
0001BCE4 <AmiBlitz3.ab3@216>   cli_release.l       = False
0001BCEE <AmiBlitz3.ab3@217>   cli_numargs.l       = dos_GetNumArgs{}
0001BCF4 <AmiBlitz3.ab3@218>   cli_gui.l           = False
0001BCFC <AmiBlitz3.ab3@219>   cli_dumpform.l      = 1 ; 0 = bin, 1 = ASCII
0001BD04 <AmiBlitz3.ab3@220>   cli_verbose.l       = 1
0001BD0C <AmiBlitz3.ab3@221>   cli_comdbgflags.l   = $00000000             ; added to support compiler and debugger settings via CLI  tomsmart1
0001BD14 <AmiBlitz3.ab3@222>   cli_comstrbufsize.l = 0
0001BD1C <AmiBlitz3.ab3@223>   cli_exestacksize.l  = 0
0001BD24 <AmiBlitz3.ab3@224>   cli_maxerrors.l     = 0                     ; added to make maxerrorcount changable in CLIMode  tomsmart1
0001BD2A <AmiBlitz3.ab3@225>   OnePassCompiling    = False
0001BD42 <AmiBlitz3.ab3@226>   If cli_numargs=0 Then showhelp=True
0001BD72 <AmiBlitz3.ab3@230>     arg.s = dos_GetNextArg{}                               ; get the next CLI argument
0001BDBE <AmiBlitz3.ab3@231>     larg.s = LCase$(arg)                                   ; lower case the option string
0001BE86 <AmiBlitz3.ab3@232>     If Left$(larg,1)="-" Then larg = Right$(larg,FLen(larg)-1)
0001BEBC <AmiBlitz3.ab3@233>     Select larg
0001BF08 <AmiBlitz3.ab3@234>       Case "s" : larg="source"
0001BF5A <AmiBlitz3.ab3@235>       Case "e" : larg="exe"
0001BFAC <AmiBlitz3.ab3@236>       Case "d" : larg="debug"
0001BFFE <AmiBlitz3.ab3@237>       Case "r" : larg="release"
0001C050 <AmiBlitz3.ab3@238>       Case "h" : larg="help"
0001C0A2 <AmiBlitz3.ab3@239>       Case "v" : larg="verbose"
0001C0F4 <AmiBlitz3.ab3@240>       Case "1" : larg="1pass"
0001C102 <AmiBlitz3.ab3@241>     End Select
0001C138 <AmiBlitz3.ab3@243>     Select larg
0001C18C <AmiBlitz3.ab3@244>       Case "exe"      : cli_exefile     = dos_GetNextArg{}
0001C1E6 <AmiBlitz3.ab3@245>       Case "source"   : cli_sourcefile  = dos_GetNextArg{}
0001C240 <AmiBlitz3.ab3@246>       Case "save"     : cli_savefile    = dos_GetNextArg{}
0001C270 <AmiBlitz3.ab3@247>       Case "debug"    : cli_debuginfo   = True
0001C2A0 <AmiBlitz3.ab3@248>       Case "run"      : cli_run         = True
0001C2D0 <AmiBlitz3.ab3@249>       Case "release"  : cli_release     = True
0001C300 <AmiBlitz3.ab3@250>       Case "ped"      : cli_gui         = True
0001C35A <AmiBlitz3.ab3@251>       Case "dform"    : cli_dumpform.l  = Vallong(dos_GetNextArg{})
0001C3CC <AmiBlitz3.ab3@252>       Case "dump"     : cli_info        = LCase$(dos_GetNextArg{})
0001C3FC <AmiBlitz3.ab3@253>                         cli_dumpfile    = dos_GetNextArg{}
0001C404 <AmiBlitz3.ab3@254>                         cli_dumpflags   = $0
0001C464 <AmiBlitz3.ab3@255>                         If Instr(cli_info,"all"  ) Then cli_dumpflags | $FFFFFFFF
0001C4C4 <AmiBlitz3.ab3@256>                         If Instr(cli_info,"token") Then cli_dumpflags | #DUMPFLG_TOKENS
0001C524 <AmiBlitz3.ab3@257>                         If Instr(cli_info,"label") Then cli_dumpflags | #DUMPFLG_LABELS
0001C584 <AmiBlitz3.ab3@258>                         If Instr(cli_info,"var"  ) Then cli_dumpflags | #DUMPFLG_VARS
0001C5E4 <AmiBlitz3.ab3@259>                         If Instr(cli_info,"const") Then cli_dumpflags | #DUMPFLG_CONSTANTS
0001C644 <AmiBlitz3.ab3@260>                         If Instr(cli_info,"func" ) Then cli_dumpflags | #DUMPFLG_FUNCTIONS
0001C6A4 <AmiBlitz3.ab3@261>                         If Instr(cli_info,"macro") Then cli_dumpflags | #DUMPFLG_MACROS
0001C704 <AmiBlitz3.ab3@262>                         If Instr(cli_info,"type" ) Then cli_dumpflags | #DUMPFLG_NEWTYPES
0001C764 <AmiBlitz3.ab3@263>                         If Instr(cli_info,"lib"  ) Then cli_dumpflags | #DUMPFLG_LIBS
0001C776 <AmiBlitz3.ab3@264>                         If cli_dumpflags = $0
0001C77C <AmiBlitz3.ab3@265>                          err=True
0001C810 <AmiBlitz3.ab3@266>                          NPrint "\\1b[1m*** ERROR: Invalid flags for dumpfile \\22",cli_info,"\\22 specified!\\1b[0m"
0001C882 <AmiBlitz3.ab3@269>       Case "setcom"   : cli_setcom.s    = LCase$(dos_GetNextArg{})
0001C88A <AmiBlitz3.ab3@270>                         cli_comflags.l  = $0
0001C8EA <AmiBlitz3.ab3@271>                         If Instr(cli_setcom,"icon"  ) Then cli_comflags | #CLI_COMSETICONFLAG     ; create Icon
0001C94A <AmiBlitz3.ab3@272>                         If Instr(cli_setcom,"small" ) Then cli_comflags | #CLI_COMSETSMALLFLAG    ; make smallest code
0001C9AA <AmiBlitz3.ab3@273>                         If Instr(cli_setcom,"func"  ) Then cli_comflags | #CLI_COMSETFUNCFLAG     ; use Functionoptimizer
0001CA0A <AmiBlitz3.ab3@274> 
0001CA6A <AmiBlitz3.ab3@275>                         If Instr(cli_setcom,"dbgf"  ) Then cli_comflags | #CLI_COMSETDBGFFLAG     ; create a .dbf file
0001CA84 <AmiBlitz3.ab3@276>                         If (cli_comflags & #CLI_COMSETALLFLAGS) = 0                               ; test if args are correct
0001CA8A <AmiBlitz3.ab3@277>                           err=True                                                                ; no
0001CB1E <AmiBlitz3.ab3@278>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setcom \\22",cli_setcom,"\\22 specified!\\1b[0m"
0001CB24 <AmiBlitz3.ab3@279>                         Else
0001CB32 <AmiBlitz3.ab3@280>                           cli_comdbgflags | cli_comflags                                          ; yes then add it
0001CBA4 <AmiBlitz3.ab3@283>       Case "setdbg"   : cli_setdbg.s    = LCase$(dos_GetNextArg{})
0001CBAC <AmiBlitz3.ab3@284>                         cli_dbgflags.l  = $0
0001CC0C <AmiBlitz3.ab3@285>                         If Instr(cli_setdbg,"auto" ) Then cli_dbgflags | #CLI_DEBUGAUTOFLAG       ; autorun
0001CC6C <AmiBlitz3.ab3@286>                         If Instr(cli_setdbg,"irq"  ) Then cli_dbgflags | #CLI_DEBUGIRQFLAG        ; interrupt check
0001CCCC <AmiBlitz3.ab3@287>                         If Instr(cli_setdbg,"asm"  ) Then cli_dbgflags | #CLI_DEBUGASMFLAG        ; assembler check
0001CD2C <AmiBlitz3.ab3@288>                         If Instr(cli_setdbg,"ofl"  ) Then cli_dbgflags | #CLI_DEBUGOFLFLAG        ; overflow check
0001CD46 <AmiBlitz3.ab3@289>                         If (cli_dbgflags & #CLI_DEBUGALLFLAGS) = 0                                ; yes then add it
0001CD4C <AmiBlitz3.ab3@290>                           err=True                                                                ; no
0001CDE0 <AmiBlitz3.ab3@291>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setdbg \\22",cli_setdbg,"\\22 specified!\\1b[0m"
0001CDE6 <AmiBlitz3.ab3@292>                         Else
0001CDF4 <AmiBlitz3.ab3@293>                           cli_comdbgflags | cli_dbgflags                                          ; yes then add it
0001CE4E <AmiBlitz3.ab3@295>       Case "strbufsize": cli_comstrbufsize = Vallong(dos_GetNextArg{})
0001CEA8 <AmiBlitz3.ab3@296>       Case "stacksize" : cli_exestacksize  = Vallong(dos_GetNextArg{})
0001CF02 <AmiBlitz3.ab3@297> 
0001CF28 <AmiBlitz3.ab3@298>                          If ((cli_maxerrors > 0) AND (cli_maxerrors <4097))                        ; check
0001CF38 <AmiBlitz3.ab3@299>                            Poke.l ?maxerrorcount,cli_maxerrors
0001CF68 <AmiBlitz3.ab3@301>       Case "1pass"     : OnePassCompiling = True   ; added to use big buffers for compile so only 1 pass is needed  tomsmart1
0001CFC2 <AmiBlitz3.ab3@302>       Case "verbose"   : cli_verbose      = Vallong(dos_GetNextArg{})
0001CFF2 <AmiBlitz3.ab3@303>       Case "help"      : showhelp         = True             ; show the help and quit
0001CFF8 <AmiBlitz3.ab3@304>       Default
0001D030 <AmiBlitz3.ab3@305>         If arg><""
0001D0C4 <AmiBlitz3.ab3@306>           NPrint "\\1b[1m*** ERROR: Unknown option \\22",arg,"\\22 specified!\\1b[0m"
0001D0CA <AmiBlitz3.ab3@307>           err = True
0001D0D8 <AmiBlitz3.ab3@309>     End Select
0001D124 <AmiBlitz3.ab3@310>   Until arg = "" OR err=True          ; until we processed all arguments
0001D146 <AmiBlitz3.ab3@313>   If err><False OR showhelp = True
0001D150 <AmiBlitz3.ab3@314>     If showhelp
0001D1B2 <AmiBlitz3.ab3@315>     NPrint "AmiBlitz ",Peek.s(?myversion)
0001D1EA <AmiBlitz3.ab3@316>     NPrint "\\nSyntax: AmiBlitz3 [options]"
0001D222 <AmiBlitz3.ab3@317>     NPrint "\\nOptions:"
0001D25A <AmiBlitz3.ab3@318>     NPrint "  -(s)ource <file>    : input source code filename (bb2, ab2 or ab3)"
0001D292 <AmiBlitz3.ab3@319>     NPrint "  -(e)xe <file>       : output executable filename"
0001D2CA <AmiBlitz3.ab3@320>     NPrint "  -(d)ebug            : compile and start runtime debugger"
0001D302 <AmiBlitz3.ab3@321>     NPrint "  -(r)elease          : create release executable (size optimized)"
0001D33A <AmiBlitz3.ab3@322>     NPrint "  -run                : run compiled program"
0001D372 <AmiBlitz3.ab3@323>     NPrint "  -dump <info> <file> : dump compiler internals to file"
0001D3AA <AmiBlitz3.ab3@324>     NPrint "                        (info=all|token|label|var|func|const|macro|type|lib)"
0001D3E2 <AmiBlitz3.ab3@325>     NPrint "  -setcom <options>   : set compiler settings (options=icon|small|func|ldbg|dbgf)"       ; added  tomsmart1
0001D41A <AmiBlitz3.ab3@326>     NPrint "  -setdbg <check>     : set debugger settings (check=auto|irq|asm|ofl)"                  ; added  tomsmart1
0001D452 <AmiBlitz3.ab3@327>     NPrint "  -strbufsize <n>     : set the string buffer size of the compiler"                      ; added  tomsmart1
0001D48A <AmiBlitz3.ab3@328>     NPrint "  -stacksize <n>      : set the stacksize for the exe if it run/debug"                   ; added  tomsmart1
0001D4C2 <AmiBlitz3.ab3@329>     NPrint "  -maxerrors <n>      : set maxerrorcounter of the compiler (1-4096; default=99)"        ; added  tomsmart1
0001D4FA <AmiBlitz3.ab3@330>     NPrint "  -(1)pass            : use large buffers for compile"
0001D532 <AmiBlitz3.ab3@331>     NPrint "  -dform <n>          : format of compiler internals dump (0=bin, 1=ASCII; default=1)"
0001D56A <AmiBlitz3.ab3@332>     NPrint "  -PED                : start AmiBlitz3 IDE (PED)"
0001D5A2 <AmiBlitz3.ab3@333>     NPrint "  -save <file>        : re-save source code (convert format, if needed)"
0001D5DA <AmiBlitz3.ab3@334>     NPrint "  -(v)erbose <n>      : set verbose level (0, 1 or 2; default=1)"
0001D612 <AmiBlitz3.ab3@335>     NPrint "  -(h)elp             : show this help"
0001D64A <AmiBlitz3.ab3@336>     NPrint "\\nExample:"
0001D682 <AmiBlitz3.ab3@337>     NPrint "  AmiBlitz3 -s \\22DH0:Sourcecodes/MyProgram.ab3\\22 -e RAM:MyProgram.exe"
0001D6BA <AmiBlitz3.ab3@338>     NPrint "\\nNote: To start the AmiBlitz3 IDE, run from Workbench or with -PED option."
0001D6C0 <AmiBlitz3.ab3@341>     Goto abnormal_exit
0001D6DC <AmiBlitz3.ab3@344>   If cli_gui        Then CLIMode = False : error_SetFlags{#error_requester}
0001D740 <AmiBlitz3.ab3@345>   If cli_sourcefile Then Poke.s ?str_tempfilename,cli_sourcefile
0001D750 <AmiBlitz3.ab3@348> Poke.l ?CLIMode,CLIMode
0001D774 <AmiBlitz3.ab3@383>   Dim incdim.s (#maxincludes)
0001D798 <AmiBlitz3.ab3@384>   Dim incline.l(#maxincludes)
0001D7B2 <AmiBlitz3.ab3@652> Function.s Get_Libinfo{addr_libnum.l}
0001D7BE <AmiBlitz3.ab3@654>   lib_ab2.b = False : lib_os.b = False
0001D7C4 <AmiBlitz3.ab3@655>   addr_counter.l = addr_libnum
0001D7CC <AmiBlitz3.ab3@656>   skip.l = 0
0001D7DE <AmiBlitz3.ab3@657>   If addr_counter=0
0001D818 <AmiBlitz3.ab3@658>     error{"INTERNAL: \\__THIS_FUNCTION: Invalid pointer!"}
0001D836 <AmiBlitz3.ab3@659>     Function Return ""
0001D844 <AmiBlitz3.ab3@664>     mem.l = Peek.l(addr_counter)
0001D852 <AmiBlitz3.ab3@669>     addr_counter + 2
0001D872 <AmiBlitz3.ab3@670>     If (mem = $0000ffff) Then lib_ab2= True : skip = 8
0001D88C <AmiBlitz3.ab3@671>     If (mem LSR 16) = $ffe2
0001D892 <AmiBlitz3.ab3@673>       lib_os = True
0001D89A <AmiBlitz3.ab3@674>       skip = 10
0001D8E0 <AmiBlitz3.ab3@675>       If Peek$(addr_counter+skip) = "" Then skip + 4
0001D924 <AmiBlitz3.ab3@677>   Until (lib_ab2=True OR lib_os = True) OR (addr_counter>addr_libnum + $400)
0001D93A <AmiBlitz3.ab3@679>   If (addr_counter>addr_libnum + $400)
0001D958 <AmiBlitz3.ab3@681>     Function Return ""
0001D95E <AmiBlitz3.ab3@682>   Else
0001D982 <AmiBlitz3.ab3@683>     Function Return Peek$(addr_counter + skip)
0001D98C <AmiBlitz3.ab3@685> End Function
0001D9AA <AmiBlitz3.ab3@730>   !asm
0001D9B0 <AmiBlitz3.ab3@731>   MOVEA.l _execbase,A6
0001D9B4 <AmiBlitz3.ab3@732>   MOVEM.l d0/a0,-(a7)
0001D9B6 <AmiBlitz3.ab3@734>   MOVEQ #127,d0
0001D9BC <AmiBlitz3.ab3@735>   LEA chartab,a0
0001D9C2 <AmiBlitz3.ab3@738>     MOVE.b #1,128(a0)
0001D9C4 <AmiBlitz3.ab3@739>     CLR.b (a0)+
0001D9C8 <AmiBlitz3.ab3@740>   DBF d0,'l12
0001D9CE <AmiBlitz3.ab3@742>   LEA chartab,a0
0001D9D2 <AmiBlitz3.ab3@743>   MOVE.b #1,(a0)
0001D9D8 <AmiBlitz3.ab3@744>   MOVE.b #1,","(a0)
0001D9DE <AmiBlitz3.ab3@745>   MOVE.b #1,";"(a0)
0001D9E4 <AmiBlitz3.ab3@746>   MOVE.b #1,":"(a0)
0001D9EA <AmiBlitz3.ab3@747>   MOVE.b #1,"("(a0)
0001D9F0 <AmiBlitz3.ab3@748>   MOVE.b #1,")"(a0)
0001D9F6 <AmiBlitz3.ab3@749>   MOVE.b #1,"="(a0)
0001D9FC <AmiBlitz3.ab3@750>   MOVE.b #1,"+"(a0)
0001DA02 <AmiBlitz3.ab3@751>   MOVE.b #1,"-"(a0)
0001DA08 <AmiBlitz3.ab3@752>   MOVE.b #1,"*"(a0)
0001DA0E <AmiBlitz3.ab3@753>   MOVE.b #1,"/"(a0)
0001DA14 <AmiBlitz3.ab3@754>   MOVE.b #1,"$"(a0)
0001DA1A <AmiBlitz3.ab3@755>   MOVE.b #1,"%"(a0)
0001DA20 <AmiBlitz3.ab3@756>   MOVE.b #1,"."(a0)
0001DA26 <AmiBlitz3.ab3@757>   MOVE.b #1,"["(a0)
0001DA2C <AmiBlitz3.ab3@758>   MOVE.b #1,"]"(a0)
0001DA32 <AmiBlitz3.ab3@759>   MOVE.b #1,"{"(a0)
0001DA38 <AmiBlitz3.ab3@760>   MOVE.b #1,"}"(a0)
0001DA3E <AmiBlitz3.ab3@761>   MOVE.b #1,"\"(a0)
0001DA44 <AmiBlitz3.ab3@762>   MOVE.b #1,">"(a0)
0001DA4A <AmiBlitz3.ab3@763>   MOVE.b #1,"<"(a0)
0001DA50 <AmiBlitz3.ab3@764>   MOVE.b #1,"&"(a0)
0001DA56 <AmiBlitz3.ab3@765>   MOVE.b #1,"|"(a0)
0001DA5C <AmiBlitz3.ab3@766>   MOVE.b #1,"^"(a0)
0001DA62 <AmiBlitz3.ab3@767>   MOVE.b #1,$7e(a0)
0001DA68 <AmiBlitz3.ab3@768>   MOVE.w #$0101,1(a0)
0001DA6E <AmiBlitz3.ab3@770>   LEA instrtab,a0
0001DA74 <AmiBlitz3.ab3@771>   MOVE.l #labelhash-instrtab,d0
0001DA76 <AmiBlitz3.ab3@772>   ASR.l #2,d0
0001DA78 <AmiBlitz3.ab3@773>   SUBQ.l #1,d0
0001DA7A <AmiBlitz3.ab3@776>    CLR.l (a0)+
0001DA7C <AmiBlitz3.ab3@777>    SUBQ.l #1,d0
0001DA80 <AmiBlitz3.ab3@778>   BNE 'l10
0001DA86 <AmiBlitz3.ab3@780>   LEA allowtab,a0
0001DA8C <AmiBlitz3.ab3@781>   MOVE.l #255,d0
0001DA8E <AmiBlitz3.ab3@784>     CLR.b (a0)+
0001DA92 <AmiBlitz3.ab3@785>   DBF d0,'la1
0001DA98 <AmiBlitz3.ab3@787>   LEA allowtab,a0
0001DA9E <AmiBlitz3.ab3@788>   MOVE.b #1,$7d(a0)
0001DAA4 <AmiBlitz3.ab3@789>   MOVE.b #1,$7c(a0)
0001DAAA <AmiBlitz3.ab3@790>   MOVE.b #1,$44(a0)
0001DAB0 <AmiBlitz3.ab3@791>   MOVE.b #1,$45(a0)
0001DAB6 <AmiBlitz3.ab3@792>   MOVE.b #1,$b9(a0)
0001DABC <AmiBlitz3.ab3@793>   MOVE.b #1,$89(a0)
0001DAC2 <AmiBlitz3.ab3@794>   MOVE.b #1,$ce(a0)
0001DAC8 <AmiBlitz3.ab3@795>   MOVE.b #1,$cf(a0)
0001DACE <AmiBlitz3.ab3@796>   MOVE.b #1,$d0(a0)
0001DAD4 <AmiBlitz3.ab3@797>   MOVE.b #1,$cd(a0)
0001DAD6 <AmiBlitz3.ab3@798>   MOVEQ #0,d0
0001DADC <AmiBlitz3.ab3@800>   MOVEA.l _execbase,a6
0001DAE2 <AmiBlitz3.ab3@805>   MOVE.l #$10000,d0
0001DAE8 <AmiBlitz3.ab3@806>   MOVE.l #80000,d1
0001DAEA <AmiBlitz3.ab3@807>   MOVE.l d1,d2
0001DAEE <AmiBlitz3.ab3@808>   JSR _CreatePool(a6)                                      ; alloc memory for own stuff
0001DAF4 <AmiBlitz3.ab3@809>   MOVE.l d0,mempool
0001DAF8 <AmiBlitz3.ab3@810>   MOVEM.l (a7)+,d0/a0
0001DAFE <AmiBlitz3.ab3@811>   TST.l mempool
0001DB02 <AmiBlitz3.ab3@812>   BEQ shutdown_compiler
0001DB06 <AmiBlitz3.ab3@814>   MOVEA.l $114(A6),A4                                      ; get adress of this.Task-Structure
0001DB0C <AmiBlitz3.ab3@815>   MOVE.l A4,ptr_ThisTask
0001DB10 <AmiBlitz3.ab3@817>   BSR.w open_doslibrary
0001DB14 <AmiBlitz3.ab3@818>   BEQ.w shutdown_compiler
0001DB1A <AmiBlitz3.ab3@820>   MOVE.l D2,stacksize
0001DB1C <AmiBlitz3.ab3@827>   MOVEQ.l #$00,D0
0001DB22 <AmiBlitz3.ab3@828>   LEA tokens,A0
0001DB24 <AmiBlitz3.ab3@831>     ADDQ.w #1,D0
0001DB26 <AmiBlitz3.ab3@832>     MOVE.l (A0),D1
0001DB2A <AmiBlitz3.ab3@833>     BEQ.w 'gotlast
0001DB2C <AmiBlitz3.ab3@834>     MOVEA.l D1,A0
0001DB30 <AmiBlitz3.ab3@835>  BRA.w 'loop
0001DB36 <AmiBlitz3.ab3@838>   MOVE.l A0,end_of_tokenlist
0001DB3A <AmiBlitz3.ab3@840>   BSR.w makeasmtable
0001DB42 <AmiBlitz3.ab3@842>   MOVE.w #$FFFF,returncode_org    ; was -1                         ;#-1,returncode
0001DB46 <AmiBlitz3.ab3@844>   BSR.w open_mathlibrary
0001DB4A <AmiBlitz3.ab3@845>   BEQ.w freemem_and_quit4
0001DB50 <AmiBlitz3.ab3@847>   MOVE.l constmaxpc,D0
0001DB52 <AmiBlitz3.ab3@848>   MOVEQ.l #$02,D1                                          ;chipmem            ;01 org source
0001DB58 <AmiBlitz3.ab3@849>   MOVEA.l _execbase,A6
0001DB5C <AmiBlitz3.ab3@850>   JSR _AllocMem(A6)                                        ;mem for branch routine
0001DB62 <AmiBlitz3.ab3@851>   MOVE.l D0,constpcat
0001DB66 <AmiBlitz3.ab3@852>   BEQ.w freemem_and_quit3
0001DB6C <AmiBlitz3.ab3@853>   ADD.l constmaxpc,D0
0001DB72 <AmiBlitz3.ab3@854>   MOVE.l D0,constlibat
0001DB78 <AmiBlitz3.ab3@856>   MOVE.l macrobuffer_size,D0
0001DB7E <AmiBlitz3.ab3@858>   CMP.l #DEFAULT_MACROBUFFERSIZE,d0                        ; replaced by a constant  tomsmart1
0001DB82 <AmiBlitz3.ab3@859>   BGE 'ok
0001DB88 <AmiBlitz3.ab3@860>     MOVE.l #DEFAULT_MACROBUFFERSIZE,d0
0001DB8E <AmiBlitz3.ab3@861>     MOVE.l d0,macrobuffer_size                             ; replaced with a constant tomsmart1
0001DB90 <AmiBlitz3.ab3@864>   ADDQ.l #4,d0
0001DB92 <AmiBlitz3.ab3@866>   MOVEQ.l #$01,D1
0001DB98 <AmiBlitz3.ab3@867>   MOVEA.l _execbase,A6
0001DB9C <AmiBlitz3.ab3@868>   JSR _AllocMem(A6)                                        ;macro mem
0001DB9E <AmiBlitz3.ab3@870>   MOVE.l d0,a0
0001DBA4 <AmiBlitz3.ab3@871>   MOVE.l macrobuffer_size,(a0)+
0001DBA6 <AmiBlitz3.ab3@872>   MOVE.l a0,d0
0001DBAC <AmiBlitz3.ab3@874>   MOVE.l D0,ptr_macrobuffer_begin
0001DBB0 <AmiBlitz3.ab3@875>   BEQ.w freemem_and_quit2
0001DBB6 <AmiBlitz3.ab3@876>   ADD.l macrobuffer_size,D0
0001DBBC <AmiBlitz3.ab3@877>   MOVE.l D0,ptr_macrobuffer_end
0001DBC2 <AmiBlitz3.ab3@880>   TST.l CLIMode
0001DBC6 <AmiBlitz3.ab3@881>   BEQ load_ped
0001DBF0 <AmiBlitz3.ab3@884>   !basic
0001DBFA <AmiBlitz3.ab3@885>   succ.l = InitEmulatedPED{}
0001DBFE <AmiBlitz3.ab3@886>   GetD0 succ
0001DC1C <AmiBlitz3.ab3@887>   !asm
0001DC1E <AmiBlitz3.ab3@888>   TST.l d0
0001DC22 <AmiBlitz3.ab3@889>   BEQ freemem_and_quit
0001DC28 <AmiBlitz3.ab3@890> JMP skip_ped
0001DC2E <AmiBlitz3.ab3@896>   MOVE.l #str_pedfile,D1                                   ; Load PED
0001DC34 <AmiBlitz3.ab3@897>   MOVEA.l _dosbase,A6
0001DC38 <AmiBlitz3.ab3@898>   JSR _LoadSeg(A6)
0001DC3E <AmiBlitz3.ab3@899>   MOVE.l D0,ptr_seg_ped
0001DC42 <AmiBlitz3.ab3@901>   BEQ.w cant_load_PED         ; was freemem_and_quit  added error massage  that we can't load it  tomsmart1  2012 03
0001DC44 <AmiBlitz3.ab3@905>   MOVEA.l D0,A2
0001DC46 <AmiBlitz3.ab3@906>   ADDA.l A2,A2
0001DC48 <AmiBlitz3.ab3@907>   ADDA.l A2,A2
0001DC4E <AmiBlitz3.ab3@909>   LEA teddata,a1                                           ;lea edstruct,A1
0001DC54 <AmiBlitz3.ab3@910>   MOVE.l #"TEDY",d1
0001DC58 <AmiBlitz3.ab3@911>   JSR 4(A2)                                                ; Run PED
0001DC5E <AmiBlitz3.ab3@913>   MOVE.l A0,ped_startup_addr                               ; PED returns address of routine "startup_code"
0001DC64 <AmiBlitz3.ab3@914>   MOVE.l A1,comdata                                        ; PED returns address of comdata-area in A1
0001DCA8 <AmiBlitz3.ab3@916>   !ComData_GetW{comWord_PEDIsAvailable,D0}                 ; if PED_IsAvailable=0, quit AmiBlitz
0001DCAC <AmiBlitz3.ab3@917>   BEQ.w unload_ped
0001DCB0 <AmiBlitz3.ab3@918> 
0001DCB4 <AmiBlitz3.ab3@919>   BNE old_version_of_PED                                   ; no, than exit
0001DCF2 <AmiBlitz3.ab3@925>   !ComData_GetL{comData_Magic,D0}
0001DCF8 <AmiBlitz3.ab3@926>   CMP.l ##MagicIdentifier_Long,D0                          ;"~::~",D0    ; replace with a constants  tomsmart1 2012 03 09
0001DCFC <AmiBlitz3.ab3@927>   BNE unload_ped
0001DD34 <AmiBlitz3.ab3@930>   !ComData_SetL{comPtr_Trap15            ,#directTrap15 }
0001DD6C <AmiBlitz3.ab3@931>   !ComData_SetL{comPtr_DirectBuffer      ,#directbuffer}
0001DDA4 <AmiBlitz3.ab3@932>   !ComData_SetL{comPtr_MacroBase         ,#macrobase}
0001DDDC <AmiBlitz3.ab3@933>   !ComData_SetL{comPtr_VarBase           ,#varbase }
0001DE14 <AmiBlitz3.ab3@934>   !ComData_SetL{comPtr_InstrBase         ,#instrtab}
0001DE4C <AmiBlitz3.ab3@935>   !ComData_SetL{comPtr_LibPointer        ,#libpointer}
0001DE84 <AmiBlitz3.ab3@936>   !ComData_SetL{comPtr_CompilerVersion   ,#myversion }
0001DEBC <AmiBlitz3.ab3@937>   !ComData_SetL{comPtr_VersionInformation,#versioninformation}
0001DEF4 <AmiBlitz3.ab3@938>   !ComData_SetL{comPtr_NumberOfBuilds    ,#number_of_builds}
0001DF2C <AmiBlitz3.ab3@939>   !ComData_SetL{comFunc_SaveSource       ,#ab3_SaveSource}
0001DF64 <AmiBlitz3.ab3@940>   !ComData_SetL{comFunc_LoadSource       ,#ab3_LoadSource}
0001DF9C <AmiBlitz3.ab3@941>   !ComData_SetL{comFunc_ClearSource      ,#ab3_ClearSource}
0001DFD4 <AmiBlitz3.ab3@944>   !ComData_SetL{comFunc_CalculatExpression       ,#menu_calculator}
0001E00C <AmiBlitz3.ab3@945>   !ComData_SetL{comPtr_CalculatorExpressionString,#str_calcexpression}
0001E044 <AmiBlitz3.ab3@948>   !ComData_SetL{comFunc_BackupXtraData           ,#BackupXtraData}
0001E07C <AmiBlitz3.ab3@949>   !ComData_SetL{comFunc_RestoreXtraData          ,#RestoreXtraData}
0001E0B4 <AmiBlitz3.ab3@951>   !ComData_SetL{comFunc_GetObjectEntry           ,#getobjectentry}
0001E0EC <AmiBlitz3.ab3@952>   !ComData_SetL{comFunc_StoreMaxObjects          ,#storemaxobjects}
0001E124 <AmiBlitz3.ab3@954>   !ComData_SetL{comFunc_ReloadResidentsForPED    ,#ReloadResidentsForPED}
0001E15C <AmiBlitz3.ab3@955>   !ComData_SetL{comFunc_FreeClearResidentsForPED ,#FreeClearResidentsForPED}    ; add tomsmart1 2012 06 09
0001E194 <AmiBlitz3.ab3@957>   !ComData_SetL{comPtr_Residents_Table           ,#residents_table}
0001E1CC <AmiBlitz3.ab3@958>   !ComData_SetL{comPtr_StringBuffer_Long         ,#stringbuffer}
0001E204 <AmiBlitz3.ab3@959>   !ComData_SetL{comPtr_Stacksize_Long            ,#stacksize}
0001E23C <AmiBlitz3.ab3@960>   !ComData_SetL{comPtr_Create_IconFile_Byte      ,#create_iconfile}
0001E274 <AmiBlitz3.ab3@961>   !ComData_SetL{comPtr_Make_SmallestCode_Byte    ,#make_smallestcode}
0001E2AC <AmiBlitz3.ab3@962>   !ComData_SetL{comPtr_Link_DebugInfo_Byte       ,#link_debuginfo}
0001E2E4 <AmiBlitz3.ab3@963>   !ComData_SetL{comPtr_Use_Debugger_Byte         ,#use_debugger}
0001E31C <AmiBlitz3.ab3@964>   !ComData_SetL{comPtr_Autorun_Byte              ,#autorun}
0001E354 <AmiBlitz3.ab3@965>   !ComData_SetL{comPtr_InterruptCheck_Byte       ,#interruptcheck}
0001E38C <AmiBlitz3.ab3@966>   !ComData_SetL{comPtr_AssemblerCheck_Byte       ,#assemblercheck}
0001E3C4 <AmiBlitz3.ab3@967>   !ComData_SetL{comPtr_OverflowCheck_Byte        ,#overflowcheck}
0001E3FC <AmiBlitz3.ab3@968>   !ComData_SetL{comPtr_Number_of_Objects_Word    ,#number_of_objects}
0001E434 <AmiBlitz3.ab3@969>   !ComData_SetL{comPtr_MaxObjects_Value_Word     ,#maxobjects_value}
0001E46C <AmiBlitz3.ab3@970>   !ComData_SetL{comPtr_MaxObject_Pos_Word        ,#maxobject_pos}
0001E4A4 <AmiBlitz3.ab3@973>   !ComData_SetL{comPtr_CLIArgumentsString       ,#str_cliarguments}
0001E4AA <AmiBlitz3.ab3@975>   CLR.w returncode_org
0001E4D4 <AmiBlitz3.ab3@977>   !basic
0001E4DE <AmiBlitz3.ab3@978>   If CLIMode
0001E550 <AmiBlitz3.ab3@979>     If cli_verbose>=3 Then NPrint !TRANS{"Loading BlitzLibs..."}
0001E56E <AmiBlitz3.ab3@981>   !asm
0001E574 <AmiBlitz3.ab3@985>   TST.b start_without_libs
0001E578 <AmiBlitz3.ab3@986>   BNE 'skip_loading_libs
0001E57C <AmiBlitz3.ab3@988>     BSR.w call_setpointerbusy
0001E586 <AmiBlitz3.ab3@989>     MOVE.l #$FFFFffff,linenumat   ; was -1
0001E58A <AmiBlitz3.ab3@990>     BSR.w get_libraries
0001E590 <AmiBlitz3.ab3@991>     JSR init_libraries
0001E594 <AmiBlitz3.ab3@992>     BSR.w init_buffers
0001E598 <AmiBlitz3.ab3@993>     BSR.w call_setpointernormal
0001E59A <AmiBlitz3.ab3@1001>   MOVEQ.l #-$01,D0
0001E5A0 <AmiBlitz3.ab3@1002>   MOVEA.l _execbase,A6
0001E5A4 <AmiBlitz3.ab3@1003>   JSR _AllocSignal(A6)
0001E5AA <AmiBlitz3.ab3@1004>   MOVE.l D0,signalNum
0001E5AC <AmiBlitz3.ab3@1005>   MOVEQ.l #$00,D1
0001E5AE <AmiBlitz3.ab3@1006>   BSET D0,D1
0001E5B4 <AmiBlitz3.ab3@1007>   MOVE.l D1,signals
0001E5BA <AmiBlitz3.ab3@1014>   MOVE.l #str_defaultdbug,D1
0001E5BE <AmiBlitz3.ab3@1015>   MOVEA.l _dosbase(PC),A6
0001E5C2 <AmiBlitz3.ab3@1016>   JSR _LoadSeg(A6)
0001E5C8 <AmiBlitz3.ab3@1017>   MOVE.l D0,ptr_seg_debugger
0001E5CA <AmiBlitz3.ab3@1020>   TST.l d0
0001E5CE <AmiBlitz3.ab3@1021>   BNE 'ok_12
0001E5F8 <AmiBlitz3.ab3@1022>     !basic
0001E65A <AmiBlitz3.ab3@1023>     error{!TRANS{"The Debugexecutor `Defaultdbug` was not found.\\nDebugging is not possible."}}
0001E678 <AmiBlitz3.ab3@1024>     !asm
0001E67E <AmiBlitz3.ab3@1027>   TST.l CLIMode
0001E682 <AmiBlitz3.ab3@1028>   BEQ run_ped
0001E6AC <AmiBlitz3.ab3@1034>   !basic
0001E6B2 <AmiBlitz3.ab3@1035>   err.l = False
0001E6DE <AmiBlitz3.ab3@1043>   If cli_sourcefile
0001E6FE <AmiBlitz3.ab3@1044>     lock.l = Lock_(&cli_sourcefile,#ACCESS_READ)
0001E708 <AmiBlitz3.ab3@1045>     If lock
0001E72C <AmiBlitz3.ab3@1046>       NameFromLock_ lock,&cli_tempstr,1024
0001E756 <AmiBlitz3.ab3@1047>       cli_sourcefile.s = Peek.s(&cli_tempstr)
0001E766 <AmiBlitz3.ab3@1048>       UnLock_ lock
0001E792 <AmiBlitz3.ab3@1051>     If cli_exefile
0001E7E4 <AmiBlitz3.ab3@1052>       SetCurrentDir{dos_PathPart{cli_sourcefile}}
0001E83C <AmiBlitz3.ab3@1053>       path.s = dos_PathPart{cli_exefile}
0001E85C <AmiBlitz3.ab3@1054>       lock.l = Lock_(&path,#ACCESS_READ)
0001E866 <AmiBlitz3.ab3@1055>       If lock
0001E88A <AmiBlitz3.ab3@1056>         NameFromLock_ lock,&cli_tempstr,1024
0001E8B4 <AmiBlitz3.ab3@1057>         path.s = Peek.s(&cli_tempstr)
0001E962 <AmiBlitz3.ab3@1058>         cli_exefile = dos_AddPart{path,dos_FilePart{cli_exefile}}
0001E972 <AmiBlitz3.ab3@1059>         UnLock_ lock
0001E9BC <AmiBlitz3.ab3@1070>   If cli_verbose>=3 Then NPrint "Initializing token hashmap..."
0001EA30 <AmiBlitz3.ab3@1071> 
0001EA3A <AmiBlitz3.ab3@1072>   *PreProcessor.preprocessor = preproc_Create{}
0001EA4A <AmiBlitz3.ab3@1073>   Poke.l ?comPtr_PreProcessor,*PreProcessor
0001EA7C <AmiBlitz3.ab3@1074>   preproc_LoadTokens{*PreProcessor,TokenHashMapFile}
0001EA92 <AmiBlitz3.ab3@1075>   If *PreProcessor\tokens=Null
0001EB0C <AmiBlitz3.ab3@1076>     If cli_verbose>=1 Then NPrint "No hashmap found (\\22"+TokenHashMapFile+"\\22), will be created..."
0001EB16 <AmiBlitz3.ab3@1077>     preproc_QueryTokens{*PreProcessor}
0001EB48 <AmiBlitz3.ab3@1078>     preproc_SaveTokens{*PreProcessor,TokenHashMapFile}
0001EB94 <AmiBlitz3.ab3@1086>   If cli_sourcefile><"" AND err=False
0001EC3A <AmiBlitz3.ab3@1087>     If cli_verbose>=3 Then NPrint "Loading sourcecode \\22",cli_sourcefile,"\\22..."
0001EC6C <AmiBlitz3.ab3@1088>     succ=LoadSource{cli_sourcefile}
0001EC76 <AmiBlitz3.ab3@1089>     If succ
0001ECAE <AmiBlitz3.ab3@1090> 
0001ED28 <AmiBlitz3.ab3@1091>         If cli_verbose>=1 Then NPrint "Compiling \\22"+cli_sourcefile+"\\22..."
0001ED6A <AmiBlitz3.ab3@1092> 
0001ED74 <AmiBlitz3.ab3@1094>         If comerr
0001ED7A <AmiBlitz3.ab3@1096>         Else
0001ED80 <AmiBlitz3.ab3@1100>     Else
0001EDD0 <AmiBlitz3.ab3@1101>       If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to read source file!\\1b[0m" : err=True
0001EE1C <AmiBlitz3.ab3@1105>   If cli_savefile><"" AND err=False
0001EE96 <AmiBlitz3.ab3@1106>     If cli_verbose>=2 Then NPrint "Saving sourcefiles as "+cli_savefile+"..."
0001EEC4 <AmiBlitz3.ab3@1107>     SaveSource{cli_savefile}
0001EF10 <AmiBlitz3.ab3@1110>   If cli_dumpfile><"" AND err=False
0001EF5A <AmiBlitz3.ab3@1111>     If cli_verbose>=2 Then NPrint "Saving dumpfile..."
0001EF90 <AmiBlitz3.ab3@1112>     DumpFile{cli_dumpfile,cli_dumpflags,cli_dumpform}
0001EF9A <AmiBlitz3.ab3@1115>   If cli_run
0001EFAE <AmiBlitz3.ab3@1116>     If comerr=False
0001EFDA <AmiBlitz3.ab3@1117>       If cli_exefile
0001F054 <AmiBlitz3.ab3@1118>         If cli_verbose>=1 Then NPrint "Recompiling "+cli_sourcefile+" for debug..."
0001F08A <AmiBlitz3.ab3@1119> 
0001F0D4 <AmiBlitz3.ab3@1121>       If cli_verbose>=1 Then NPrint "Running program..."
0001F0E2 <AmiBlitz3.ab3@1122> 
0001F0E4 <AmiBlitz3.ab3@1124>         CLR.l d0
0001F128 <AmiBlitz3.ab3@1125>         !ComData_GetB{comByte_RunningFlag,D0}
0001F12C <AmiBlitz3.ab3@1126>         running.l = PutD0
0001F148 <AmiBlitz3.ab3@1127>         If running Then Delay_ 50
0001F15C <AmiBlitz3.ab3@1129>       Until running=False
0001F170 <AmiBlitz3.ab3@1130>       If Peek.l(?_runerror)
0001F1C0 <AmiBlitz3.ab3@1131>         If cli_verbose>=0 Then NPrint "\\1b[1m*** ERROR: Unable to run compiled program!\\1b[0m" : err=True
0001F1D0 <AmiBlitz3.ab3@1142>   preproc_Free{*PreProcessor} : *PreProcessor=Null
0001F21A <AmiBlitz3.ab3@1143>   If cli_verbose>=3 Then NPrint "Exit AmiBlitz3."
0001F220 <AmiBlitz3.ab3@1144>   DeinitEmulatedPED{}
0001F23E <AmiBlitz3.ab3@1146>   !asm
0001F244 <AmiBlitz3.ab3@1147> JMP terminate_ab3
0001F24A <AmiBlitz3.ab3@1153>   MOVEA.l ped_startup_addr,A1
0001F250 <AmiBlitz3.ab3@1154>   LEA str_tempfilename,A0
0001F252 <AmiBlitz3.ab3@1155>   JSR (A1)            ;goto editor with filename!
0001F258 <AmiBlitz3.ab3@1162>   MOVE.l signalNum,D0
0001F25E <AmiBlitz3.ab3@1163>   MOVEA.l _execbase,A6
0001F262 <AmiBlitz3.ab3@1164>   JSR _FreeSignal(A6)
0001F268 <AmiBlitz3.ab3@1166>   MOVE.l ptr_seg_debugger,D1
0001F26C <AmiBlitz3.ab3@1167>   BEQ.b 'noseg
0001F270 <AmiBlitz3.ab3@1168>     MOVEA.l _dosbase(PC),A6
0001F274 <AmiBlitz3.ab3@1169>     JSR _UnLoadSeg(A6)
0001F278 <AmiBlitz3.ab3@1172>   BSR.w Aclearallvars
0001F27C <AmiBlitz3.ab3@1173>   BSR.w free_residents
0001F282 <AmiBlitz3.ab3@1174>   JSR free_blitzlibs
0001F288 <AmiBlitz3.ab3@1177>   MOVE.l ptr_seg_ped,D1
0001F28C <AmiBlitz3.ab3@1178>   BEQ freemem_and_quit
0001F290 <AmiBlitz3.ab3@1179>   MOVEA.l _dosbase(PC),A6
0001F294 <AmiBlitz3.ab3@1180>   JSR _UnLoadSeg(A6)
0001F298 <AmiBlitz3.ab3@1181>   BRA freemem_and_quit     ; added by tomsmart1 for Ped errormessage
0001F2C2 <AmiBlitz3.ab3@1184>   !basic
0001F386 <AmiBlitz3.ab3@1185> 
0001F3A4 <AmiBlitz3.ab3@1186>   !asm
0001F3A8 <AmiBlitz3.ab3@1187>   BRA freemem_and_quit
0001F3D2 <AmiBlitz3.ab3@1190>   !basic
0001F496 <AmiBlitz3.ab3@1191>   error{!TRANS{"Can't load the Editor:\n"} + pedfile$ + !TRANS{"\n must quit, sorry!"} }  ; show error message  tomsmart1
0001F4B4 <AmiBlitz3.ab3@1192>   !asm
0001F4B8 <AmiBlitz3.ab3@1196>   BSR.w freeallox
0001F4BE <AmiBlitz3.ab3@1198>   MOVEA.l ptr_macrobuffer_begin,A1
0001F4C0 <AmiBlitz3.ab3@1200>   MOVE.l -(a1),D0
0001F4C2 <AmiBlitz3.ab3@1201>   ADDQ.l #4,d0
0001F4C8 <AmiBlitz3.ab3@1203>   MOVEA.l _execbase,A6
0001F4CC <AmiBlitz3.ab3@1204>   JSR _FreeMem(A6)
0001F4D2 <AmiBlitz3.ab3@1207>   MOVEA.l _dosbase,A1
0001F4D8 <AmiBlitz3.ab3@1208>   MOVEA.l _execbase,A6
0001F4DC <AmiBlitz3.ab3@1209>   JSR _CloseLibrary(A6)
0001F4E2 <AmiBlitz3.ab3@1211>   MOVEA.l constpcat,A1
0001F4E8 <AmiBlitz3.ab3@1212>   MOVE.l constmaxpc,D0
0001F4EE <AmiBlitz3.ab3@1213>   MOVEA.l _execbase,A6
0001F4F2 <AmiBlitz3.ab3@1214>   JSR _FreeMem(A6)
0001F4F8 <AmiBlitz3.ab3@1217>   MOVEA.l _mathffpbase,A1
0001F4FE <AmiBlitz3.ab3@1218>   MOVEA.l _execbase,A6
0001F502 <AmiBlitz3.ab3@1219>   JSR _CloseLibrary(A6)
0001F508 <AmiBlitz3.ab3@1223>   TST.l mempool2                    ; test if mempool2 is allocated
0001F50C <AmiBlitz3.ab3@1224>   BEQ shutdown_compiler             ; no jump
0001F512 <AmiBlitz3.ab3@1225>   MOVEA.l _execbase,A6              ; yes delete it to free the memory
0001F518 <AmiBlitz3.ab3@1226>   MOVE.l mempool2,a0
0001F51C <AmiBlitz3.ab3@1227>   JSR _DeletePool(a6)
0001F522 <AmiBlitz3.ab3@1228>   CLR.l mempool2
0001F528 <AmiBlitz3.ab3@1231>   MOVEA.l _execbase,A6
0001F52E <AmiBlitz3.ab3@1232>   MOVE.l mempool,a0
0001F532 <AmiBlitz3.ab3@1233>   JSR _DeletePool(a6)
0001F538 <AmiBlitz3.ab3@1234>   CLR.l pushat
0001F53E <AmiBlitz3.ab3@1235>   CLR.l mempool
0001F544 <AmiBlitz3.ab3@1237>   JSR free_unusedfunctions
0001F546 <AmiBlitz3.ab3@1238>   MOVEQ #0,d0
0001F554 <AmiBlitz3.ab3@1241>   !exitasm
0001F58C <AmiBlitz3.ab3@1242>   If dynassign<>""
0001F596 <AmiBlitz3.ab3@1243>     If *AssignSema
0001F5A6 <AmiBlitz3.ab3@1244>       ReleaseSemaphore_ *AssignSema
0001F5BE <AmiBlitz3.ab3@1245>       If (AttemptSemaphore_ (*AssignSema))                 ; we are the exclusive owner of the sema now!
0001F652 <AmiBlitz3.ab3@1246>         dos_RemAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001F68C <AmiBlitz3.ab3@1247>         dos_RemAssign{dynassign}
0001F69C <AmiBlitz3.ab3@1248>         RemSemaphore_ *AssignSema
0001F6AC <AmiBlitz3.ab3@1249>         ReleaseSemaphore_ *AssignSema
0001F6DE <AmiBlitz3.ab3@1250>         If *AssignSema\ss_Link\ln_Name Then FreeVec_ *AssignSema\ss_Link\ln_Name : *AssignSema\ss_Link\ln_Name = Null
0001F6EE <AmiBlitz3.ab3@1251>         FreeVec_ *AssignSema
0001F6F4 <AmiBlitz3.ab3@1252>         *AssignSema = Null
0001F722 <AmiBlitz3.ab3@1256>   SetCurrentDir{cli_path}
0001F744 <AmiBlitz3.ab3@1257>   !coutclose
0001F74A <AmiBlitz3.ab3@1258> End
0001F756 <AmiBlitz3.ab3@1262> str_doslibrary:     Dc.b "dos.library",0 : Even
0001F75A <AmiBlitz3.ab3@1263> _dosbase:           Ds.l 1
0001F760 <AmiBlitz3.ab3@1267>   MOVEA.l _execbase,A6
0001F766 <AmiBlitz3.ab3@1268>   LEA str_doslibrary,A1
0001F76A <AmiBlitz3.ab3@1269>   JSR _OldOpenLibrary(A6)
0001F770 <AmiBlitz3.ab3@1270>   MOVE.l D0,_dosbase
0001F772 <AmiBlitz3.ab3@1271> RTS
0001F778 <AmiBlitz3.ab3@1275>   MOVEA.l #str_mathffpname,A1
0001F77E <AmiBlitz3.ab3@1276>   MOVEA.l _execbase,A6
0001F782 <AmiBlitz3.ab3@1277>   JSR _OldOpenLibrary(A6)
0001F788 <AmiBlitz3.ab3@1278>   MOVE.l D0,_mathffpbase
0001F78A <AmiBlitz3.ab3@1279> RTS
0001F7BC <AmiBlitz3.ab3@1286> !ComData_JMP{comFunc_SetNormalPointer}
0001F7EE <AmiBlitz3.ab3@1293> !ComData_JMP{comFunc_SetBusyPointer}
0001F818 <AmiBlitz3.ab3@1297>   !basic
0001F81C <AmiBlitz3.ab3@1298>   ab3save_filenameP.l = PutD0
0001F826 <AmiBlitz3.ab3@1299>   If ab3save_filenameP
0001F84E <AmiBlitz3.ab3@1300>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001F87C <AmiBlitz3.ab3@1302>     SaveSource{ab3save_filename}
0001F882 <AmiBlitz3.ab3@1303>   Else
0001F8BC <AmiBlitz3.ab3@1304>     error{"INTERNAL ERROR: no filename passed in D0 to SaveSource{}!"}
0001F8DA <AmiBlitz3.ab3@1306>   !asm
0001F8DC <AmiBlitz3.ab3@1307>   RTS
0001F906 <AmiBlitz3.ab3@1310>   !basic
0001F90A <AmiBlitz3.ab3@1311>   ab3save_filenameP.l = PutD0
0001F914 <AmiBlitz3.ab3@1312>   If ab3save_filenameP
0001F93C <AmiBlitz3.ab3@1313>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001F96A <AmiBlitz3.ab3@1314>     LoadSource{ab3save_filename}
0001F970 <AmiBlitz3.ab3@1315>   Else
0001F9AA <AmiBlitz3.ab3@1316>     error{"INTERNAL ERROR: no filename passed in D0 to LoadSource{}!"}
0001F9C8 <AmiBlitz3.ab3@1318>   !asm
0001F9CA <AmiBlitz3.ab3@1319>   RTS
0001F9F4 <AmiBlitz3.ab3@1322>   !basic
0001F9FA <AmiBlitz3.ab3@1323>   ClearSource{}
0001FA18 <AmiBlitz3.ab3@1324>   !asm
0001FA1A <AmiBlitz3.ab3@1325>   RTS
0001FA44 <AmiBlitz3.ab3@1328>   !basic
0001FA4A <AmiBlitz3.ab3@1329>   OpenConsoleFake{}
0001FA68 <AmiBlitz3.ab3@1330>   !asm
0001FA6A <AmiBlitz3.ab3@1331>   RTS
0001FA94 <AmiBlitz3.ab3@1335>   !basic
0001FA9A <AmiBlitz3.ab3@1336>   CloseConsoleFake{}
0001FAB8 <AmiBlitz3.ab3@1337>   !asm
0001FABA <AmiBlitz3.ab3@1338>   RTS
0001FAC0 <AmiBlitz3.ab3@1343>   MOVE.w d6,menuitemdebug
0001FAEA <AmiBlitz3.ab3@1344>   !basic
0001FAFC <AmiBlitz3.ab3@1345>   menuitemx.l = Peek.w(?menuitemdebug)
0001FB22 <AmiBlitz3.ab3@1346>   If menuitemx>16 OR  menuitemx<0
0001FB96 <AmiBlitz3.ab3@1347>     error{"Called invalid AB3 Menuitem #"+Str$(menuitemx)+"!"}
0001FB9E <AmiBlitz3.ab3@1348>     menuitemx=0
0001FBAE <AmiBlitz3.ab3@1350>   Poke.w ?menuitemdebug,menuitemx
0001FBCC <AmiBlitz3.ab3@1351>   !asm
0001FBD2 <AmiBlitz3.ab3@1352>   MOVE.w menuitemdebug,d6
0001FBD8 <AmiBlitz3.ab3@1356>   MOVE.l A5,firstitem_
0001FBDE <AmiBlitz3.ab3@1357>   MOVE.w D7,numlines_org
0001FBE4 <AmiBlitz3.ab3@1359>   MOVE.l d7,numlines
0001FBE6 <AmiBlitz3.ab3@1361>   LSL.w #2,D6
0001FBEC <AmiBlitz3.ab3@1362>   LEA menu_items,A0
0001FBF0 <AmiBlitz3.ab3@1363>   MOVEA.l $0(A0,D6.W),A0
0001FBFA <AmiBlitz3.ab3@1364>   MOVE.l #$FFFFffff,linenumat             ; was -1
0001FC04 <AmiBlitz3.ab3@1365>   MOVE.l #$FFFFffff,compilelinecounter    ; was -1
0001FC06 <AmiBlitz3.ab3@1366>   JSR (A0)                              ; jsr to the function for the menuitem
0001FC0C <AmiBlitz3.ab3@1367>   MOVE.l compilelinecounter,D0
0001FC0E <AmiBlitz3.ab3@1368> RTS
0001FC12 <AmiBlitz3.ab3@1370> menuitemdebug: Dc.l 0
0001FC16 <AmiBlitz3.ab3@1372> mempool                Dc.l 0
0001FC2C <AmiBlitz3.ab3@1373> str_loaddebugmessage:  Dc.b "Debug module to load",0 : Even        ; was dtext org source
0001FC32 <AmiBlitz3.ab3@1374> dloaderr:              JSR handle_compileerror
0001FC4E <AmiBlitz3.ab3@1375>                        Dc.b "Can't LoadSeg debug module!",0 : Even
0001FC8C <AmiBlitz3.ab3@1383>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001FC92 <AmiBlitz3.ab3@1384>   LEA str_loaddebugmessage,A2
0001FC98 <AmiBlitz3.ab3@1385>   LEA str_blitz3assign,A0
0001FC9E <AmiBlitz3.ab3@1386>   LEA str_temp_debugmodulename,A1
0001FCA0 <AmiBlitz3.ab3@1387>   JSR (A3)                                                  ;open ped filerequest
0001FCA4 <AmiBlitz3.ab3@1388>   BEQ.w nodload
0001FCAA <AmiBlitz3.ab3@1393>   MOVE.l D0,ptr_temp_debugmodule
0001FCAE <AmiBlitz3.ab3@1394>   BSR.w call_setpointerbusy
0001FCB4 <AmiBlitz3.ab3@1396> 
0001FCBA <AmiBlitz3.ab3@1398>   MOVE.l A7,errstack
0001FCC4 <AmiBlitz3.ab3@1399>   MOVE.l #nodload,errcont
0001FCCA <AmiBlitz3.ab3@1400>   MOVE.l ptr_temp_debugmodule,D1
0001FCCE <AmiBlitz3.ab3@1402>   MOVEA.l _dosbase(PC),A6
0001FCD2 <AmiBlitz3.ab3@1403>   JSR _LoadSeg(A6)
0001FCD4 <AmiBlitz3.ab3@1404>   MOVE.l D0,D7
0001FCD8 <AmiBlitz3.ab3@1405>   BEQ.w dloaderr
0001FCDE <AmiBlitz3.ab3@1406>   MOVE.l ptr_seg_debugger,D1
0001FCE2 <AmiBlitz3.ab3@1407>   BEQ.b 'ndseg
0001FCE6 <AmiBlitz3.ab3@1408>   MOVEA.l _dosbase(PC),A6
0001FCEA <AmiBlitz3.ab3@1409>   JSR _UnLoadSeg(A6)
0001FCEE <AmiBlitz3.ab3@1410>   BSR.w call_setpointernormal
0001FCF4 <AmiBlitz3.ab3@1413>   MOVE.l D7,ptr_seg_debugger
0001FCF6 <AmiBlitz3.ab3@1416> RTS
0001FD14 <AmiBlitz3.ab3@1419> str_request_exename:   Dc.b "Name of Executable to Create:",0 : Even                        ;xtext org source
0001FDD4 <AmiBlitz3.ab3@1420> exepath:               Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xpath  dcb.b 192,0 org source
0001FE94 <AmiBlitz3.ab3@1421> exefilename:           Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xname  dcb.b 192,0 org source
0001FE98 <AmiBlitz3.ab3@1422> ptr_newexefilename:    Dc.l 0                                                               ;execname org
0001FEC2 <AmiBlitz3.ab3@1426>   !basic
0001FEEC <AmiBlitz3.ab3@1427>   exepath.s = Peek.s(?exepath)
0001FF16 <AmiBlitz3.ab3@1428>   exefile.s = Peek.s(?exefilename)
0001FF4E <AmiBlitz3.ab3@1429>   If exefile <> ""                                         ; test if we have a filename
0001FF86 <AmiBlitz3.ab3@1430>     If exepath <> ""                                       ; yes we have a filename ,test if we have a path
0001FFCA <AmiBlitz3.ab3@1431>       If dos_Exist{exepath}= False Then Goto nonexistpath  ; yes we have a path, test if he exist
0002004A <AmiBlitz3.ab3@1433>     exefile.s = dos_AddPart{exepath,exefile}               ; combinat path and filename
00020082 <AmiBlitz3.ab3@1434>     Poke.s ?tempspace,exefile
000200A0 <AmiBlitz3.ab3@1435>     !asm
000200A6 <AmiBlitz3.ab3@1456>     LEA tempspace,a0
000200A8 <AmiBlitz3.ab3@1457>     MOVE.l a0,d0
000200AC <AmiBlitz3.ab3@1458>    BRA newcreate2                                         ; jump to the compile
000200CA <AmiBlitz3.ab3@1462>    !asm
000200F4 <AmiBlitz3.ab3@1468>   !basic
0002011E <AmiBlitz3.ab3@1469>   request_exename.s = Peek.s(?str_request_exename )
0002017A <AmiBlitz3.ab3@1470>   request_exename   = !TRANS{request_exename}
00020180 <AmiBlitz3.ab3@1471>   GetD0 &request_exename
0002019E <AmiBlitz3.ab3@1472>   !asm
000201A0 <AmiBlitz3.ab3@1473>   MOVE.l D0,A2
000201DE <AmiBlitz3.ab3@1477>   !ComData_GetL{comFunc_ASLFileRequest,A3}
000201E4 <AmiBlitz3.ab3@1479>   LEA exepath,A0
000201EA <AmiBlitz3.ab3@1480>   LEA exefilename,A1
000201EC <AmiBlitz3.ab3@1481>   JSR (A3)                                                 ;open ped filerequest
000201F0 <AmiBlitz3.ab3@1483>   BEQ.w cancel_createexe    ; was 'err
000201FA <AmiBlitz3.ab3@1487>   ADD.l #1,number_of_builds
00020200 <AmiBlitz3.ab3@1491>   MOVE.l D0,ptr_newexefilename
00020208 <AmiBlitz3.ab3@1492>   MOVE.w #-1,debugversion
00020210 <AmiBlitz3.ab3@1498>     MOVE.w #1,makeexec
00020216 <AmiBlitz3.ab3@1499>     JSR ab3_OpenDebugFile
0002021A <AmiBlitz3.ab3@1501>     BSR.w startcompile
00020220 <AmiBlitz3.ab3@1503>     JSR ab3_CloseDebugFile
0002022A <AmiBlitz3.ab3@1505>     CMP.l #"NORE",reqmode
0002022E <AmiBlitz3.ab3@1506>   BEQ 'l1
00020234 <AmiBlitz3.ab3@1508>   TST.w anyerrs
00020238 <AmiBlitz3.ab3@1509>   BNE.b 'skip
0002023C <AmiBlitz3.ab3@1510>   BSR.w savefile
0002023E <AmiBlitz3.ab3@1516> RTS
00020246 <AmiBlitz3.ab3@1520>   MOVE.w #-1,flag_noPED
00020248 <AmiBlitz3.ab3@1521> RTS
00020250 <AmiBlitz3.ab3@1525>   MOVE.w #-1,flag_noCLI
00020252 <AmiBlitz3.ab3@1526> RTS
0002027C <AmiBlitz3.ab3@1530>   !basic
0002028E <AmiBlitz3.ab3@1531>     If dbg_fid>=0
000202A0 <AmiBlitz3.ab3@1532> 
000202B4 <AmiBlitz3.ab3@1533>         file_WriteMem{dbg_fid,&dbg_detokenlinesBuffer,fillcount} ; yes save it
000202BC <AmiBlitz3.ab3@1534>         fillcount = 0                                            ; set it back to zero bytes
000202C6 <AmiBlitz3.ab3@1536>       file_Close{dbg_fid}
000202D2 <AmiBlitz3.ab3@1537>       dbg_fid = -1
000202E2 <AmiBlitz3.ab3@1539>     Poke.w ?word_WriteDebugFileNow,0
00020300 <AmiBlitz3.ab3@1540>   !asm
00020302 <AmiBlitz3.ab3@1541> RTS
00020306 <AmiBlitz3.ab3@1545>   BSR ab3_CloseDebugFile     ; remove double code and replaced it with a call of the subroutine  tomsmart1
00020330 <AmiBlitz3.ab3@1546>   !basic
00020342 <AmiBlitz3.ab3@1547>     If dbg_fid.l<0
00020344 <AmiBlitz3.ab3@1548>       CLR.l d0
00020388 <AmiBlitz3.ab3@1549>       !ComData_GetW{comWord_CreateDebugFile,D0}
0002038C <AmiBlitz3.ab3@1550>       dbg_Create.l = PutD0
00020396 <AmiBlitz3.ab3@1551>       If (dbg_Create) ; only when set!
000203A6 <AmiBlitz3.ab3@1552>         exefileP.l = Peek.l (?ptr_newexefilename)
000203CE <AmiBlitz3.ab3@1553>         exefile.s = ""
00020400 <AmiBlitz3.ab3@1554>         If exefileP Then exefile.s = Peek.s(exefileP)
00020438 <AmiBlitz3.ab3@1555>         If exefile><""
0002048E <AmiBlitz3.ab3@1556>           dbg_fid = file_Open{exefile+".dbg",#file_forcewrite}
000204A0 <AmiBlitz3.ab3@1557>           If dbg_fid>=0
000204B2 <AmiBlitz3.ab3@1558>             Poke.w ?word_WriteDebugFileNow,-1
000204BE <AmiBlitz3.ab3@1561>         oldhunkoffset.l = -1
000204E6 <AmiBlitz3.ab3@1562>         oldfile.s       = ""
000204EE <AmiBlitz3.ab3@1563>         fillcount       = 0       ; set it to zero bytes in the buffer
0002050C <AmiBlitz3.ab3@1566>   !asm
0002050E <AmiBlitz3.ab3@1567> RTS
00020514 <AmiBlitz3.ab3@1571>   TST.w word_WriteDebugFileNow
00020518 <AmiBlitz3.ab3@1572>   BEQ 'skipdebugfile
00020542 <AmiBlitz3.ab3@1573>   !basic
00020554 <AmiBlitz3.ab3@1574>     If dbg_fid>=0
00020566 <AmiBlitz3.ab3@1575>       pass.l          = Peek.w(?pass)
00020578 <AmiBlitz3.ab3@1576>       makesmallest.b  = Peek.b(?make_smallestcode)               ; get the status of make_smallestcode  tomsmart1
0002059C <AmiBlitz3.ab3@1577> 
000205A2 <AmiBlitz3.ab3@1578>         oldhunkoffset.l = hunkoffset.l
000205D6 <AmiBlitz3.ab3@1579>         oldfile.s       = codefile.s
000205F2 <AmiBlitz3.ab3@1580>         If Peek.w (?ininclude)>0
00020602 <AmiBlitz3.ab3@1581>           codeline.l = Peek.l(?includeline);-1
00020672 <AmiBlitz3.ab3@1582>           codefile.s = dos_FilePart{incdim(Peek.w(?ininclude)-1)}
00020678 <AmiBlitz3.ab3@1583>         Else
000206A6 <AmiBlitz3.ab3@1584>           !ComData_LEA{comStr_SourceName,A0}
000206A8 <AmiBlitz3.ab3@1585>           MOVE.l A0,D0
000206AC <AmiBlitz3.ab3@1586>           sourceP.l = PutD0
000206D4 <AmiBlitz3.ab3@1587>           codefile.s = Peek.s(sourceP)
000206E4 <AmiBlitz3.ab3@1588>           codeline.l = Peek.l(?linenumat)
0002070C <AmiBlitz3.ab3@1590>         hunkoffset.l = Peek.l(?destpointer)-Peek.l(?destbufferstart)
00020760 <AmiBlitz3.ab3@1591>         If oldhunkoffset><hunkoffset OR oldfile><codefile
00020802 <AmiBlitz3.ab3@1592>           linebegintext.s = Hex$(hunkoffset)+" <"+codefile+"@"+Str$(codeline)+"> "
00020816 <AmiBlitz3.ab3@1593>           linebeginlen.l  = FLen(linebegintext)
00020854 <AmiBlitz3.ab3@1594>           Poke.s &dbg_detokenlinesBuffer+fillcount,linebegintext           ; copy the begin of the line text to the buffer
00020862 <AmiBlitz3.ab3@1595>           fillcount + linebeginlen
00020872 <AmiBlitz3.ab3@1597>           *sourceLine.SourceLine_t = Peek.l(?sourceline)
0002087C <AmiBlitz3.ab3@1598>           If *sourceLine
000208BE <AmiBlitz3.ab3@1599>             !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
000208CE <AmiBlitz3.ab3@1600>             *tn.preprocessor = Peek.l(?include_preprocessor)
00020900 <AmiBlitz3.ab3@1601>             written.l = preproc_Detokenize{*tn,&*sourceLine\Text,&dbg_detokenlinesBuffer+fillcount,*sourceLine\CharLength}
00020912 <AmiBlitz3.ab3@1602>             If written>0
00020920 <AmiBlitz3.ab3@1603>               written-1
0002092E <AmiBlitz3.ab3@1605>             fillcount + written                                            ; added the dekotenline size to the count
00020934 <AmiBlitz3.ab3@1606>           Else
00020966 <AmiBlitz3.ab3@1607>             Poke.s &dbg_detokenlinesBuffer+fillcount,"NULL"                ; copy it to the buffer
00020974 <AmiBlitz3.ab3@1608>             fillcount + 4                                                  ; added the size to the count
0002098A <AmiBlitz3.ab3@1611>           Poke.b &dbg_detokenlinesBuffer+fillcount,10                      ; copy line end (return) in to the buffer
00020998 <AmiBlitz3.ab3@1612>           fillcount +1                                                     ; count +1
000209AA <AmiBlitz3.ab3@1614>           If fillcount >= (#MAX_dbg_detokenlinesBufferSize - #MAX_Columns) ; check if we have no room for a nother line
000209BE <AmiBlitz3.ab3@1615>             file_WriteMem{dbg_fid,&dbg_detokenlinesBuffer,fillcount}       ; no room write the buffer it do disk
000209C6 <AmiBlitz3.ab3@1616>             fillcount = 0                                                  ; set it back to zero bytes
000209E4 <AmiBlitz3.ab3@1622>   !asm
000209E6 <AmiBlitz3.ab3@1625> RTS
000209E8 <AmiBlitz3.ab3@1627> word_WriteDebugFileNow: Dc.w 0
000209EA <AmiBlitz3.ab3@1631> flag_noPED:  Ds.w 1                                        ;closeed org source
000209EC <AmiBlitz3.ab3@1632> flag_noCLI:  Ds.w 1                                        ;nocli org source
000209F0 <AmiBlitz3.ab3@1636>   MOVEM.l A2-A3,-(A7)
000209F6 <AmiBlitz3.ab3@1637>   CLR.b doublepeek
000209FC <AmiBlitz3.ab3@1638>   MOVE.l A5,lastsourcepos
00020A02 <AmiBlitz3.ab3@1639>    JSR getchar
00020A06 <AmiBlitz3.ab3@1640>   CMP.w #$2E,D0              ;'.'
00020A0A <AmiBlitz3.ab3@1641>    BEQ.w 'ok
00020A10 <AmiBlitz3.ab3@1642>   MOVEA.l defaulttype,A2
00020A14 <AmiBlitz3.ab3@1643>   CMP.w #$24,D0              ;'$'
00020A18 <AmiBlitz3.ab3@1644>    BNE.w 'none
00020A1A <AmiBlitz3.ab3@1645>   MOVEQ.l #$07,D1
00020A1E <AmiBlitz3.ab3@1646>  BRA.w 'skip
00020A24 <AmiBlitz3.ab3@1649>   JSR getparameter2
00020A28 <AmiBlitz3.ab3@1650>   BEQ.w JUMP_syntaxerr1
00020A2E <AmiBlitz3.ab3@1651>   LEA newtypebase,A2
00020A34 <AmiBlitz3.ab3@1652>   JSR findtype
00020A38 <AmiBlitz3.ab3@1653>   BNE.w JUMP_notypeerr1
00020A42 <AmiBlitz3.ab3@1658>   MOVE.w oldqflag,instringon
00020A48 <AmiBlitz3.ab3@1659>   MOVEA.l lastsourcepos,A5
00020A4E <AmiBlitz3.ab3@1661>   MOVE.l a2,functionreturntype
00020A56 <AmiBlitz3.ab3@1662>   CMPI.l #$100,$4(A2)
00020A5A <AmiBlitz3.ab3@1663>   BLE.w 'isvar
00020A5C <AmiBlitz3.ab3@1667>   MOVEQ #3,d1
00020A60 <AmiBlitz3.ab3@1668>   BRA 'skip
00020A64 <AmiBlitz3.ab3@1678>   MOVE.w $6(A2),D1
00020A6A <AmiBlitz3.ab3@1680>   CMP.w #8,8(a2)
00020A6E <AmiBlitz3.ab3@1681>   BNE 'l1
00020A76 <AmiBlitz3.ab3@1682>   MOVE.b #1,doublepeek
00020A7C <AmiBlitz3.ab3@1687>   MOVE.w D1,convsize
00020A80 <AmiBlitz3.ab3@1688>   MOVEM.l (A7)+,A2-A3
00020A82 <AmiBlitz3.ab3@1689> RTS
00020A88 <AmiBlitz3.ab3@1691> JUMP_notypeerr1  JMP notypeerr
00020A8E <AmiBlitz3.ab3@1692> JUMP_illtypeerr1 JMP illtypeerr
00020A94 <AmiBlitz3.ab3@1693> JUMP_syntaxerr1  JMP syntaxerr
00020A98 <AmiBlitz3.ab3@1698>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
00020A9E <AmiBlitz3.ab3@1699>   MOVEA.l _execbase,A6
00020AA4 <AmiBlitz3.ab3@1700>   TST.b MorphOS                    ; test if we have MorphOS ( 0 no, 1 yes)
00020AA8 <AmiBlitz3.ab3@1701>    BEQ 'useclearU                  ; if we have 0 = No MorpOS then jump
00020AAA <AmiBlitz3.ab3@1703>   MOVEQ.l #8,d1
00020AB0 <AmiBlitz3.ab3@1704>   MOVE.l #200,d0
00020AB4 <AmiBlitz3.ab3@1705>   JSR _CacheClearE(A6)
00020AB8 <AmiBlitz3.ab3@1706>  BRA 'exit
00020ABC <AmiBlitz3.ab3@1745>   JSR _CacheClearU(A6)
00020AC0 <AmiBlitz3.ab3@1748>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
00020AC2 <AmiBlitz3.ab3@1749> RTS
00020ACC <AmiBlitz3.ab3@1757>   ADD.l #1,number_of_builds
00020AD2 <AmiBlitz3.ab3@1759>   CLR.w debugversion
00020AD8 <AmiBlitz3.ab3@1760>   CLR.w flag_noPED
00020ADE <AmiBlitz3.ab3@1761>   CLR.w flag_noCLI
00020AE6 <AmiBlitz3.ab3@1765>     MOVE.w #0,makeexec                                     ;MOVE.w #$FFFF,debugversion
00020AEA <AmiBlitz3.ab3@1767>     BSR.w startcompile
00020AF4 <AmiBlitz3.ab3@1769>     CMP.l #"NORE",reqmode
00020AF8 <AmiBlitz3.ab3@1770>   BEQ 'l1
00020AFE <AmiBlitz3.ab3@1776>   TST.w anyerrs
00020B02 <AmiBlitz3.ab3@1777>    BNE.w 'dontrun
00020B06 <AmiBlitz3.ab3@1779>   MOVE.w flag_noPED(PC),D1
00020B0A <AmiBlitz3.ab3@1780>    BEQ.w 'noclose
00020B3C <AmiBlitz3.ab3@1784>   !ComData_JSR{comFunc_CloseGUI}
00020B40 <AmiBlitz3.ab3@1785>  BRA.b 'runprogram
00020B44 <AmiBlitz3.ab3@1789>   BSR.w compilerequester
00020B4A <AmiBlitz3.ab3@1794>   MOVEA.l _dosbase,A6
00020B50 <AmiBlitz3.ab3@1796>   LEA exepath,a0
00020B52 <AmiBlitz3.ab3@1797>   MOVE.l a0,d1
00020B54 <AmiBlitz3.ab3@1798>   MOVEQ #-2,d2
00020B58 <AmiBlitz3.ab3@1799>   JSR _Lock(a6)                                            ;lock
00020B5E <AmiBlitz3.ab3@1800>   MOVE.l d0,exelock
00020B64 <AmiBlitz3.ab3@1802>   MOVE.l #0,d1
00020B68 <AmiBlitz3.ab3@1803>   JSR _CurrentDir(A6)
00020B6E <AmiBlitz3.ab3@1804>   MOVE.l D0,lock_currentdir
00020B70 <AmiBlitz3.ab3@1805>   MOVE.l D0,D1
00020B74 <AmiBlitz3.ab3@1806>   JSR _CurrentDir(A6)
00020B7A <AmiBlitz3.ab3@1808>   CLR.l ptr_exetask
00020B80 <AmiBlitz3.ab3@1817>   MOVE.l #str_process_name,D1
00020B82 <AmiBlitz3.ab3@1818>   MOVEQ.l #$00,D2
00020B88 <AmiBlitz3.ab3@1819>   MOVE.l #proc_seglist,D3
00020B8A <AmiBlitz3.ab3@1820>   LSR.l #2,D3
00020B90 <AmiBlitz3.ab3@1821>   MOVE.l stacksize,D4
00020B96 <AmiBlitz3.ab3@1822>   MOVEA.l _dosbase,A6
00020B9A <AmiBlitz3.ab3@1823>   JSR _CreateProc(A6)                                      ;runtask
00020B9C <AmiBlitz3.ab3@1824>   TST.l D0
00020BA0 <AmiBlitz3.ab3@1825>    BEQ 'ErrorRunningProg
00020BD6 <AmiBlitz3.ab3@1830>   !ComData_SetB{comByte_RunningFlag,#1}   ; this should be done here, straigt after it is clear that
00020BDC <AmiBlitz3.ab3@1834>   TST.w flag_noPED
00020BE0 <AmiBlitz3.ab3@1835>    BNE.b 'fatal
00020BE4 <AmiBlitz3.ab3@1836>   BSR.w close_compilewin
00020BEA <AmiBlitz3.ab3@1839>   CLR.l firstlocal
00020BF0 <AmiBlitz3.ab3@1840>   CLR.l firstglob
00020BF4 <AmiBlitz3.ab3@1842>   MOVE.w flag_noPED(PC),D1
00020BF8 <AmiBlitz3.ab3@1843>   BEQ.w 'noopen         ;skip_openGUI
00020C2A <AmiBlitz3.ab3@1847>   !ComData_JSR{comFunc_CreateGUI}
00020C2C <AmiBlitz3.ab3@1857>  RTS
00020C36 <AmiBlitz3.ab3@1861>   MOVE.l #1,_runerror
00020C3A <AmiBlitz3.ab3@1862> BRA 'fatal
00020C3E <AmiBlitz3.ab3@1866> _runerror: Dc.l 0
00020C42 <AmiBlitz3.ab3@1867> lock_currentdir:    Ds.l 1                                          ;tasklock org source
00020C46 <AmiBlitz3.ab3@1868> ptr_exetask:        Ds.l 1                                          ;panictask org source
00020C4A <AmiBlitz3.ab3@1869> signalNum:          Ds.l 1                                          ;panicbit org source
00020C4E <AmiBlitz3.ab3@1870> signals:            Ds.l 1                                          ;panicmask org source
00020C64 <AmiBlitz3.ab3@1872> str_process_name:   Dc.b "Blitz ][ Program Proc",0 : Even           ;procname org source
00020C69 <AmiBlitz3.ab3@1873>                     Ds.b 5                                          ;cnop 0,4 :dc.l 0   ;length org source
00020C6C <AmiBlitz3.ab3@1874> Even4
00020C70 <AmiBlitz3.ab3@1876> ptr_ThisTask:       Ds.l 1                                          ;length
00020C74 <AmiBlitz3.ab3@1877> .proc_seglist:      Ds.l 1                                          ;procstart org source ;next
00020C7A <AmiBlitz3.ab3@1881>   MOVEA.l $4,A0
00020C82 <AmiBlitz3.ab3@1882>   MOVE.l  $114(A0),ptr_exetask
00020C88 <AmiBlitz3.ab3@1884>   MOVEA.l _dosbase,A6
00020C8E <AmiBlitz3.ab3@1885>   MOVE.l exelock,D1
00020C92 <AmiBlitz3.ab3@1886>   JSR _CurrentDir(A6)
00020CC8 <AmiBlitz3.ab3@1892>   !ComData_SetB{comByte_RunningFlag,#1}
00020CCC <AmiBlitz3.ab3@1899>   MOVE.w flag_noCLI(PC),D1
00020CD0 <AmiBlitz3.ab3@1900>    BNE.b 'skip_openconsole
00020D02 <AmiBlitz3.ab3@1904>   !ComData_JSR{comFunc_OpenConsole}
00020D06 <AmiBlitz3.ab3@1907>   BSR.w calcvbr
00020D0C <AmiBlitz3.ab3@1908>   MOVEA.l vbr,A0
00020D12 <AmiBlitz3.ab3@1913>   CLR.w dirmode
00020D18 <AmiBlitz3.ab3@1914>   CLR.l firstglob
00020D1E <AmiBlitz3.ab3@1915>   CLR.l firstlocal
00020D24 <AmiBlitz3.ab3@1919>   MOVE.l stacksize,D2
00020D2A <AmiBlitz3.ab3@1920>   MOVE.l #$624C745A,D7                                      ;#'bLtZ',d7 org source ;force cli-type run
00020D30 <AmiBlitz3.ab3@1921>   LEA str_cliarguments,A0                                   ;cli arguement
00020D36 <AmiBlitz3.ab3@1922>   MOVEA.l destbufferstart,A1
00020D3A <AmiBlitz3.ab3@1924>   BSR.w Aclearcache
00020D3C <AmiBlitz3.ab3@1928>   JSR (A1)                                                 ; execute compiled code  ;Run the thing!
00020D42 <AmiBlitz3.ab3@1931>   MOVEA.l vbr,A0
00020D48 <AmiBlitz3.ab3@1933>   CLR.l firstglob
00020D4E <AmiBlitz3.ab3@1934>   CLR.l firstlocal
00020D54 <AmiBlitz3.ab3@1935>   MOVEA.l _dosbase,A6
00020D5A <AmiBlitz3.ab3@1936>   MOVE.l exelock,d1
00020D5E <AmiBlitz3.ab3@1937>   BEQ 'nolock
00020D62 <AmiBlitz3.ab3@1938>   JSR _UnLock(a6)
00020D98 <AmiBlitz3.ab3@1943>   !ComData_SetB{comByte_RunningFlag,#0}
00020D9C <AmiBlitz3.ab3@1947>   MOVE.w flag_noCLI(PC),D1
00020DA0 <AmiBlitz3.ab3@1948>    BNE.b 'skip_closeconsole
00020DD2 <AmiBlitz3.ab3@1952>   !ComData_JSR{comFunc_CloseConsole}
00020DDA <AmiBlitz3.ab3@1955>   MOVE.w #$0001,stopit      ;ended OK!
00020DDE <AmiBlitz3.ab3@1956>   MOVE.l signals(PC),D0
00020DE4 <AmiBlitz3.ab3@1957>   MOVEA.l ptr_ThisTask,A1
00020DEA <AmiBlitz3.ab3@1958>   MOVEA.l _execbase,A6
00020DEE <AmiBlitz3.ab3@1959>   JSR _Signal(A6)
00020DF0 <AmiBlitz3.ab3@1960> RTS
00020DF6 <AmiBlitz3.ab3@1964>   MOVEA.l _execbase,A6
00020DFA <AmiBlitz3.ab3@1965>   MOVE.w $128(A6),D0
00020DFC <AmiBlitz3.ab3@1966>   MOVEQ.l #$00,D1
00020E00 <AmiBlitz3.ab3@1967>   ANDI.w #$F,D0
00020E04 <AmiBlitz3.ab3@1970>     BEQ.b 'skip
00020E06 <AmiBlitz3.ab3@1971>     ADDQ.w #1,D1
00020E08 <AmiBlitz3.ab3@1972>     LSR.w #1,D0
00020E0C <AmiBlitz3.ab3@1973>  BRA.b 'loop
00020E0E <AmiBlitz3.ab3@1976>   MOVEQ.l #$00,D2
00020E12 <AmiBlitz3.ab3@1977>   CMP.w #$2,D1
00020E16 <AmiBlitz3.ab3@1978>    BCS.b 'skip2
00020E1C <AmiBlitz3.ab3@1979>   MOVEA.l _execbase,A6
00020E20 <AmiBlitz3.ab3@1980>   JSR _SuperState(A6)
00020E24 <AmiBlitz3.ab3@1981>   Dc.l $4E7A2801                                           ;movec vbr,D2
00020E28 <AmiBlitz3.ab3@1982>   JSR _UserState(A6)
00020E2E <AmiBlitz3.ab3@1985>   MOVE.l D2,vbr
00020E30 <AmiBlitz3.ab3@1986> RTS
00020E36 <AmiBlitz3.ab3@1991>   LEA instrtab,a0
00020E3C <AmiBlitz3.ab3@1992>   MOVE.l #labelhash-instrtab,d0
00020E3E <AmiBlitz3.ab3@1993>   ASR.l #2,d0
00020E40 <AmiBlitz3.ab3@1994>   SUBQ.l #1,d0
00020E42 <AmiBlitz3.ab3@1997>   CLR.l (a0)+
00020E44 <AmiBlitz3.ab3@1998>   SUBQ.l #1,d0
00020E48 <AmiBlitz3.ab3@1999>   BNE 'l10
00020E4C <AmiBlitz3.ab3@2001>   BSR.w call_setpointerbusy
00020E50 <AmiBlitz3.ab3@2002>   BSR.w free_userlibs
00020E54 <AmiBlitz3.ab3@2003>   BSR.w scan_for_userlibs
00020E58 <AmiBlitz3.ab3@2004>   BSR.w loadblitzlibs
00020E5C <AmiBlitz3.ab3@2005> BRA.w call_setpointernormal
00020E86 <AmiBlitz3.ab3@2017>   !basic
00020EC0 <AmiBlitz3.ab3@2018>   Poke.l ?size_acidlibs, dos_GetFileSize{Peek$(?str_path_acidlibs)}
00020ED0 <AmiBlitz3.ab3@2020>   deflibNameP.l = Peek.l(?deflib)
00020EDA <AmiBlitz3.ab3@2021>   If deflibNameP
00020F0C <AmiBlitz3.ab3@2022>     If Peek.s(deflibNameP)<>""
00020F56 <AmiBlitz3.ab3@2023>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(Peek.l(?deflib))}
00020F5C <AmiBlitz3.ab3@2024>     Else
00020F96 <AmiBlitz3.ab3@2025>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
00020F9C <AmiBlitz3.ab3@2027>   Else
00020FD6 <AmiBlitz3.ab3@2028>     Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
00021010 <AmiBlitz3.ab3@2029>     error{"INTERNAL: Invalid deflib name pointer!"}
0002102E <AmiBlitz3.ab3@2031>   !asm
00021034 <AmiBlitz3.ab3@2037>   MOVE.l #str_path_userlibs,D1
00021036 <AmiBlitz3.ab3@2038>   MOVEQ.l #-$02,D2
0002103C <AmiBlitz3.ab3@2039>   MOVEA.l _dosbase,A6
00021040 <AmiBlitz3.ab3@2040>   JSR _Lock(A6)
00021042 <AmiBlitz3.ab3@2041>   MOVE.l D0,D7
00021046 <AmiBlitz3.ab3@2042>    BEQ.w 'done     ;exit_get_libraries
00021048 <AmiBlitz3.ab3@2044>   MOVE.l D7,D1
0002104E <AmiBlitz3.ab3@2045>   MOVE.l #ptr_parameterstore,D2
00021052 <AmiBlitz3.ab3@2046>   JSR _Examine(A6)
00021054 <AmiBlitz3.ab3@2047>   TST.l D0
00021058 <AmiBlitz3.ab3@2048>   BEQ.w 'done2   ;unlock_and_exit_get_libraries
0002105E <AmiBlitz3.ab3@2049>   MOVE.l fib_DirEntryType,D0
00021062 <AmiBlitz3.ab3@2050>   BMI.w 'done2   ;unlock_and_exit_get_libraries
00021064 <AmiBlitz3.ab3@2058>     MOVE.l D7,D1
0002106A <AmiBlitz3.ab3@2059>     MOVE.l #ptr_parameterstore,D2
00021070 <AmiBlitz3.ab3@2060>     MOVEA.l _dosbase,A6
00021074 <AmiBlitz3.ab3@2061>     JSR _ExNext(A6)
00021076 <AmiBlitz3.ab3@2062>     TST.l D0
0002107A <AmiBlitz3.ab3@2063>      BEQ.w 'ok    ;exit_scan_libsdrawer                            ; kein weiteres File
00021080 <AmiBlitz3.ab3@2065>     MOVE.l fib_DirEntryType,D0                             ; positive for directoies, negative for files
00021084 <AmiBlitz3.ab3@2066>     BPL.w 'loop    ;scan_libsdrawer                                  ; skip directories
0002108A <AmiBlitz3.ab3@2068>     LEA fib_FileName,A0                                    ; pruefen ob infofile
0002108E <AmiBlitz3.ab3@2069>     BSR.w check_for_infoextention
00021092 <AmiBlitz3.ab3@2070>     BEQ.w 'loop    ;scan_libsdrawer
00021098 <AmiBlitz3.ab3@2072>     MOVEA.l _execbase,A6                                   ; allocate $26 = 38 bytes fuer listeneintrag
0002109A <AmiBlitz3.ab3@2073>     MOVEQ.l #$26,D0
0002109C <AmiBlitz3.ab3@2074>     MOVEQ.l #$01,D1
000210A2 <AmiBlitz3.ab3@2076>     MOVE.l mempool,a0
000210A6 <AmiBlitz3.ab3@2077>     JSR _AllocPooled(a6)
000210AC <AmiBlitz3.ab3@2080>     MOVEA.l _dosbase,A6
000210AE <AmiBlitz3.ab3@2082>     MOVE.l D0,D6                                           ; sichere speicheradresse in D6
000210B4 <AmiBlitz3.ab3@2084>     LEA ptr_userlibs_list,A0                               ; pruefe liste
000210B6 <AmiBlitz3.ab3@2087>     MOVE.l (A0),D5
000210BA <AmiBlitz3.ab3@2088>      BEQ.w 'here                                       ; kein pointer da? kann springe weiter
000210BC <AmiBlitz3.ab3@2089>     MOVEA.l D5,A2
000210BE <AmiBlitz3.ab3@2090>     ADDQ.w #6,A2                                       ; 6 bytes weiter gehen, um dateinamen zu speichern
000210C4 <AmiBlitz3.ab3@2092>     LEA fib_FileName,A1    ;filename                  ; vergleich, ob Dateiname schon in der liste ist
000210C6 <AmiBlitz3.ab3@2095>       MOVEQ.l #$00,D0
000210C8 <AmiBlitz3.ab3@2096>       MOVE.b (A1)+,D0
000210CC <AmiBlitz3.ab3@2097>        BEQ.w 'here         ;I'm shorter                ; dateiname komplett, dann weiter
000210CE <AmiBlitz3.ab3@2098>       MOVEQ.l #$00,D1
000210D0 <AmiBlitz3.ab3@2099>       MOVE.b (A2)+,D1
000210D4 <AmiBlitz3.ab3@2100>        BEQ.w 'next         ;I'm longer
000210F6 <AmiBlitz3.ab3@2102>       !compare1                                            ;bsr.w tstalpha
000210FA <AmiBlitz3.ab3@2104>       BNE.w 'acskip
000210FE <AmiBlitz3.ab3@2105>       ANDI.w #$DF,D0       ; was 255-32
00021100 <AmiBlitz3.ab3@2108>       EXG.l D0,D1
00021122 <AmiBlitz3.ab3@2110>       !compare1                                            ;bsr.w tstalpha
00021126 <AmiBlitz3.ab3@2112>       BNE.w 'acskip2
0002112A <AmiBlitz3.ab3@2113>       ANDI.w #$DF,D0        ; was 255-32
0002112C <AmiBlitz3.ab3@2116>       EXG.l D0,D1
0002112E <AmiBlitz3.ab3@2117>       CMP.b D1,D0
00021132 <AmiBlitz3.ab3@2118>     BEQ.w 'comloop
00021136 <AmiBlitz3.ab3@2119>     BCS.w 'here             ;I'm less than
00021138 <AmiBlitz3.ab3@2122>     MOVEA.l D5,A0
0002113C <AmiBlitz3.ab3@2123>  BRA.w 'insloop
0002113E <AmiBlitz3.ab3@2126>     MOVEA.l D6,A1                                          ; hier war die adresse des allokierten Speicers drin
00021140 <AmiBlitz3.ab3@2127>     MOVE.l (A0),(A1)            ;next of last is next of me
00021142 <AmiBlitz3.ab3@2128>     MOVE.l A1,(A0)              ;I am next of last
00021144 <AmiBlitz3.ab3@2129>     ADDQ.w #4,A1                                           ; pointer zum naechsten namen ueberspringen
00021148 <AmiBlitz3.ab3@2130>     MOVE.w #$FFFF,(A1)+         ; was - 1;set 'Used' flag  ; $FFFF schreiben
0002114E <AmiBlitz3.ab3@2131>     MOVEA.l #fib_FileName,A0    ; was #namebuff+8,         ; dateinamen in die liste kopieren
00021150 <AmiBlitz3.ab3@2134>       MOVE.b (A0)+,(A1)+
00021154 <AmiBlitz3.ab3@2135>     BNE.w 'coploop
00021158 <AmiBlitz3.ab3@2136>  BRA.w 'loop    ;scan_libsdrawer
0002115A <AmiBlitz3.ab3@2139>   MOVE.l D7,D1
00021160 <AmiBlitz3.ab3@2140>   MOVEA.l _dosbase,A6
00021164 <AmiBlitz3.ab3@2141>   JSR _UnLock(A6)
00021166 <AmiBlitz3.ab3@2142>   MOVEQ.l #-$01,D0
00021168 <AmiBlitz3.ab3@2145>  RTS
0002116A <AmiBlitz3.ab3@2148>   MOVE.l D7,D1
00021170 <AmiBlitz3.ab3@2149>   MOVEA.l _dosbase,A6
00021174 <AmiBlitz3.ab3@2150>   JSR _UnLock(A6)
00021176 <AmiBlitz3.ab3@2151>   MOVEQ.l #$00,D0
00021178 <AmiBlitz3.ab3@2152> RTS
0002117E <AmiBlitz3.ab3@2157>   MOVEA.l _execbase,A6
00021184 <AmiBlitz3.ab3@2158>   MOVEA.l ptr_userlibs_list,A2
0002118A <AmiBlitz3.ab3@2159>   CLR.l ptr_userlibs_list
0002118E <AmiBlitz3.ab3@2162>     CMPA.w #$0,A2
00021192 <AmiBlitz3.ab3@2163>     BEQ.w 'done
00021194 <AmiBlitz3.ab3@2164>       MOVEA.l A2,A1
00021196 <AmiBlitz3.ab3@2165>       MOVEQ.l #$26,D0
00021198 <AmiBlitz3.ab3@2166>       MOVEA.l (A2),A2
0002119E <AmiBlitz3.ab3@2168>       MOVE.l mempool,a0
000211A4 <AmiBlitz3.ab3@2169>       MOVEA.l _execbase,A6
000211A8 <AmiBlitz3.ab3@2170>       JSR _FreePooled(A6)
000211AC <AmiBlitz3.ab3@2173>  BRA.w 'loop
000211AE <AmiBlitz3.ab3@2176> RTS
000211B0 <AmiBlitz3.ab3@2180> pass:  Dc.w 0                                             ; smallpass org source
000211B2 <AmiBlitz3.ab3@2181> compiler_job: Dc.w 0                                      ; added by thilo: what the compiler is doing at the moment
000211B8 <AmiBlitz3.ab3@2187>   MOVE.l A7,errstack                                      ;startcompile
000211BC <AmiBlitz3.ab3@2189>   !regs2stack
000211C4 <AmiBlitz3.ab3@2190>   BTST #$7,make_smallestcode       ; test if makesmall is set
000211C8 <AmiBlitz3.ab3@2191>   BNE 'nobigallox                  ; yes makesmall is set, we don't change the buffers
000211CE <AmiBlitz3.ab3@2192>     JSR bigallox                   ; no try to make big buffers for 1 pass compile
000211D2 <AmiBlitz3.ab3@2195>   !stack2regs
000211D8 <AmiBlitz3.ab3@2206>   CLR.l reqmode
000211E2 <AmiBlitz3.ab3@2208>   MOVE.l #Aclearallvars,errcont
000211EC <AmiBlitz3.ab3@2209>   MOVE.l #concomstack,concomsp
000211F0 <AmiBlitz3.ab3@2218>   MOVE.w #1450,D0
000211F2 <AmiBlitz3.ab3@2220>   LSR.w #3,D0
000211F4 <AmiBlitz3.ab3@2221>   SUBQ.w #7,D0                                             ; 173
000211FA <AmiBlitz3.ab3@2222>   MOVE.w D0,progressbar_width
000211FC <AmiBlitz3.ab3@2223>   SWAP D0
000211FE <AmiBlitz3.ab3@2224>   CLR.w D0
00021204 <AmiBlitz3.ab3@2225>   MOVE.l numlines,d1           ; was divu numlines,d0
00021208 <AmiBlitz3.ab3@2226>   DIVU.l d1,d0                                             ; progressbar_width / numlines
0002120A <AmiBlitz3.ab3@2228>   TST.w D0
0002120E <AmiBlitz3.ab3@2229>   BNE.w 'ok
00021210 <AmiBlitz3.ab3@2230>   MOVEQ.l #-$01,D0
00021216 <AmiBlitz3.ab3@2233>   MOVE.w D0,progress_per_line
0002121E <AmiBlitz3.ab3@2243>   BTST #$7,use_debugger
00021222 <AmiBlitz3.ab3@2246>   BNE 'debugon
00021228 <AmiBlitz3.ab3@2247>   CLR.w debugmode
0002122C <AmiBlitz3.ab3@2248>  BRA.b 'debugoff
00021232 <AmiBlitz3.ab3@2251>   SNE debugmode
0002126A <AmiBlitz3.ab3@2259>   !ComData_SetB{comByte_DebugMode,debugmode}
00021270 <AmiBlitz3.ab3@2262>   CLR.w dirmode           ;direct mode flag                                  ;direct mode flag
00021276 <AmiBlitz3.ab3@2263>   CLR.w ezerr             ;quiet error                                 ;quiet error
0002127C <AmiBlitz3.ab3@2264>   CLR.l currentfunction
00021282 <AmiBlitz3.ab3@2265>   CLR.w connest
00021288 <AmiBlitz3.ab3@2266>   CLR.w varmode
0002128E <AmiBlitz3.ab3@2267>   CLR.w proceduremode
00021294 <AmiBlitz3.ab3@2268>   CLR.w ininclude
0002129A <AmiBlitz3.ab3@2269>   CLR.w intstring
000212A0 <AmiBlitz3.ab3@2270>   CLR.w pass
000212A8 <AmiBlitz3.ab3@2272>   MOVE.w #0,compiler_job
000212AE <AmiBlitz3.ab3@2273>   CLR.l errorcounter
000212B4 <AmiBlitz3.ab3@2274> 
000212BA <AmiBlitz3.ab3@2286>   CLR.l funcscanon
000212BE <AmiBlitz3.ab3@2288>   BSR.w compileall
000212C4 <AmiBlitz3.ab3@2290>   ADDQ.w #1,pass
000212C8 <AmiBlitz3.ab3@2291> 
000212F2 <AmiBlitz3.ab3@2292>   !basic
000212FA <AmiBlitz3.ab3@2293>   samesize.l = 0
00021322 <AmiBlitz3.ab3@2294>   needsize0.l = Peek.l(?bigpc) -Peek.l(?destbufferstart)
00021340 <AmiBlitz3.ab3@2295>   !asm
00021344 <AmiBlitz3.ab3@2296>   !stack2regs
0002134A <AmiBlitz3.ab3@2298>   TST.l errorcounter
0002134E <AmiBlitz3.ab3@2299>   BEQ 'skiperrorstop
00021350 <AmiBlitz3.ab3@2300>  RTS
00021356 <AmiBlitz3.ab3@2303>   MOVE.w dontwrite_nomemleft,d0
0002135A <AmiBlitz3.ab3@2304>   CMP.w #1,d0
0002135E <AmiBlitz3.ab3@2305>   BNE 'l3
00021364 <AmiBlitz3.ab3@2306>   TST.l errorcounter
00021368 <AmiBlitz3.ab3@2307>   BNE 'l3
0002136E <AmiBlitz3.ab3@2308>   CLR.w dontwrite_nomemleft
00021374 <AmiBlitz3.ab3@2309> 
00021378 <AmiBlitz3.ab3@2310>   BSR compileall                                           ;if a function is not found
0002137E <AmiBlitz3.ab3@2311>   ADDQ.w #1,pass
000213C2 <AmiBlitz3.ab3@2315>   !ComData_GetB{comByte_FuncOptimize,D0}  ; now its in the xtra file and can be put to GUI settings ; Wanderer
000213C6 <AmiBlitz3.ab3@2316>   BEQ 'out  ; only if func optimize is set >< 0; Wanderer
000213CC <AmiBlitz3.ab3@2317>   LEA firstproc,a0
000213D2 <AmiBlitz3.ab3@2318>   CLR.l savefuncspace
000213D4 <AmiBlitz3.ab3@2319>   MOVE.l (a0),d0
000213D6 <AmiBlitz3.ab3@2323>     MOVE.l d0,a0
000213DA <AmiBlitz3.ab3@2324>     BEQ 'out
000213DE <AmiBlitz3.ab3@2325>     TST.b isfunc(a0)
000213E2 <AmiBlitz3.ab3@2326>     BNE 'nex
000213E6 <AmiBlitz3.ab3@2327>     MOVEM.l d2/a6/a0,-(a7)
000213E8 <AmiBlitz3.ab3@2329>     MOVEQ #0,d0
000213EC <AmiBlitz3.ab3@2330>     MOVE.b $21+#funcentry_extend-1(a0),d0
000213F0 <AmiBlitz3.ab3@2331>     SUB.w #$21+#funcentry_extend,d0
000213F4 <AmiBlitz3.ab3@2332>     ADD.w #16,d0
000213FA <AmiBlitz3.ab3@2333>     MOVE.l #$10000,d1
000213FC <AmiBlitz3.ab3@2334>     MOVE.l d0,d2
00021402 <AmiBlitz3.ab3@2335>     MOVEA.l _execbase,A6
00021406 <AmiBlitz3.ab3@2336>     JSR _AllocMem(a6)         ; thilo: not 100% sure about this!
00021408 <AmiBlitz3.ab3@2337>     MOVE.l d0,a1
0002140C <AmiBlitz3.ab3@2338>     MOVE.l d2,4(a1)
00021412 <AmiBlitz3.ab3@2339>     MOVE.l unusedfunc,(a1)
00021418 <AmiBlitz3.ab3@2340>     MOVE.l d0,unusedfunc
0002141C <AmiBlitz3.ab3@2341>     MOVEM.l (a7)+,a6/a0/d2
00021420 <AmiBlitz3.ab3@2342>     MOVE.l isfunc+1(a0),d0
00021422 <AmiBlitz3.ab3@2343>     ADDQ.l #6,d0
00021428 <AmiBlitz3.ab3@2344>     ADD.l d0,savefuncspace
0002142C <AmiBlitz3.ab3@2347>     MOVE.l d0,8(a1)
00021430 <AmiBlitz3.ab3@2348>     LEA 12(a1),a1
00021432 <AmiBlitz3.ab3@2349>     MOVE.l a0,-(a7)
00021436 <AmiBlitz3.ab3@2350>     LEA $21+#funcentry_extend(a0),a0
00021438 <AmiBlitz3.ab3@2353>       MOVE.b (a0)+,(a1)+
0002143C <AmiBlitz3.ab3@2354>     BNE 'l1
0002143E <AmiBlitz3.ab3@2355>     MOVE.l (a7)+,a0
00021440 <AmiBlitz3.ab3@2358>     MOVE.l (a0),d0
00021444 <AmiBlitz3.ab3@2359>  BRA 'lr1
0002144C <AmiBlitz3.ab3@2362>   BTST #$7,make_smallestcode
00021450 <AmiBlitz3.ab3@2363>   BEQ.b 'nosmall                                           ;optimize for executable
00021456 <AmiBlitz3.ab3@2365>   CLR.l morememadd
0002145A <AmiBlitz3.ab3@2369>   BSR.w alloxadj
0002145E <AmiBlitz3.ab3@2370>   BEQ.w 'anerr
00021464 <AmiBlitz3.ab3@2372> 
00021468 <AmiBlitz3.ab3@2373>   BSR.w compileall
0002146E <AmiBlitz3.ab3@2375>   ADDQ.w #1,pass
00021472 <AmiBlitz3.ab3@2376> 
0002149C <AmiBlitz3.ab3@2377>   !basic
000214B0 <AmiBlitz3.ab3@2378>   If releaseexe = True                                       ; test if we creat a releas exe
000214D8 <AmiBlitz3.ab3@2379>     needsize1.l = Peek.l(?bigpc) -Peek.l(?destbufferstart)   ; get the size form the last compile
000214F6 <AmiBlitz3.ab3@2380> 
0002152C <AmiBlitz3.ab3@2381>       !ComData_SetW{comWord_CreateDebugFile,#1}              ; set create .dbg file to one
0002154A <AmiBlitz3.ab3@2382>       !asm
00021550 <AmiBlitz3.ab3@2383>       JSR ab3_OpenDebugFile                                  ; open the .dbg flie
00021554 <AmiBlitz3.ab3@2384>       !stack2regs
00021558 <AmiBlitz3.ab3@2385>       BSR compileall                                         ; compile for the last time to creat the dbg file
0002155C <AmiBlitz3.ab3@2386>       !regs2stack
00021586 <AmiBlitz3.ab3@2387>       !basic
00021594 <AmiBlitz3.ab3@2389>     If needsize1 < needsize0   ; test if the needed size is smaller then the compile befor
0002159A <AmiBlitz3.ab3@2390>       needsize0 = needsize1    ; yes the new size is that the old size
000215B8 <AmiBlitz3.ab3@2391>       !asm
000215BC <AmiBlitz3.ab3@2392>       !stack2regs
000215C0 <AmiBlitz3.ab3@2393>       BRA 'l3                  ; back to the funcscan and compile again
000215DE <AmiBlitz3.ab3@2396>   !asm
000215E2 <AmiBlitz3.ab3@2397>   !stack2regs
000215E8 <AmiBlitz3.ab3@2401>   MOVE.w dontwrite_nomemleft,D1
000215EC <AmiBlitz3.ab3@2402>   BEQ.w 'dosave
000215F0 <AmiBlitz3.ab3@2423>  BRA.w 'inc     ; was beq
000215F8 <AmiBlitz3.ab3@2437>   MOVE.w #$FFFF,anyerrs        ; was -1
000215FC <AmiBlitz3.ab3@2438>  BRA.w 'dosave
00021600 <AmiBlitz3.ab3@2441>   BSR.w alloxinc                                          ;increase all by 50%
00021604 <AmiBlitz3.ab3@2442>   BEQ.w Aclearallvars
0002160A <AmiBlitz3.ab3@2443> 
0002160E <AmiBlitz3.ab3@2444>  BRA.w 'retry
00021612 <AmiBlitz3.ab3@2457> BRA.w qfree        ;used to go after beq .nosave                          ;???????
00021618 <AmiBlitz3.ab3@2463>   JSR freereps
0002161E <AmiBlitz3.ab3@2464>   JSR freesels
00021624 <AmiBlitz3.ab3@2465>   JSR freetlist
0002162A <AmiBlitz3.ab3@2466>   JSR freepends
00021630 <AmiBlitz3.ab3@2467>   JSR freeifs
00021636 <AmiBlitz3.ab3@2468>   JSR freeincs
0002163C <AmiBlitz3.ab3@2469>   JSR freexincs
00021642 <AmiBlitz3.ab3@2470>   JSR freefors
00021648 <AmiBlitz3.ab3@2471> JMP cleartemplabel
0002164C <AmiBlitz3.ab3@2474> mempool2:  Dc.l 0
00021652 <AmiBlitz3.ab3@2479>   JSR Aclearcache
0002165A <AmiBlitz3.ab3@2481>   BTST #$7,use_debugger
0002165E <AmiBlitz3.ab3@2483>   BNE 'debugon
00021664 <AmiBlitz3.ab3@2484>   CLR.w debugmode
00021668 <AmiBlitz3.ab3@2485>  BRA.b 'debugoff
0002166E <AmiBlitz3.ab3@2488>   SNE debugmode
000216A6 <AmiBlitz3.ab3@2493>   !ComData_SetB{comByte_DebugMode,debugmode}
000216AC <AmiBlitz3.ab3@2495>   LEA regtable,a0
000216AE <AmiBlitz3.ab3@2496>   MOVEQ #10,d0
000216B0 <AmiBlitz3.ab3@2499>     CLR.l (a0)+
000216B4 <AmiBlitz3.ab3@2500>   DBF d0,'l1
000216BA <AmiBlitz3.ab3@2502>   LEA includetemp2,a0
000216BC <AmiBlitz3.ab3@2503>   CLR.b (a0)
000216C6 <AmiBlitz3.ab3@2504>   MOVE.l #7,maxregs
000216CC <AmiBlitz3.ab3@2505>   CLR.w debugnest
000216D2 <AmiBlitz3.ab3@2506>   CLR.b funcparloop
000216D8 <AmiBlitz3.ab3@2507>   CLR.b nostringopt
000216DE <AmiBlitz3.ab3@2508>   CLR.b firsttime
000216E4 <AmiBlitz3.ab3@2509>   CLR.l lastdestpointer
000216EA <AmiBlitz3.ab3@2510>   CLR.l lastwritedat
000216F0 <AmiBlitz3.ab3@2511>   CLR.l prevwritedat
000216F6 <AmiBlitz3.ab3@2512>   CLR.l includeline
000216FC <AmiBlitz3.ab3@2513>   CLR.b incnif
00021702 <AmiBlitz3.ab3@2514>   CLR.b formode
00021708 <AmiBlitz3.ab3@2515>   CLR.b funccall
0002170E <AmiBlitz3.ab3@2516>   CLR.w objectcount
00021714 <AmiBlitz3.ab3@2517>   CLR.b resdisable
0002171A <AmiBlitz3.ab3@2518>   CLR.b developobject
00021720 <AmiBlitz3.ab3@2519>   CLR.b optistring
00021726 <AmiBlitz3.ab3@2520>   CLR.b optistring2
0002172C <AmiBlitz3.ab3@2521>   CLR.b optiarray
00021732 <AmiBlitz3.ab3@2522>   CLR.b quickadd
00021738 <AmiBlitz3.ab3@2523>   CLR.w newmode
0002173E <AmiBlitz3.ab3@2524>   CLR.w mode
00021744 <AmiBlitz3.ab3@2525>   CLR.w string1
0002174A <AmiBlitz3.ab3@2526>   CLR.b fastfunc
00021750 <AmiBlitz3.ab3@2527>   CLR.w load_var_size
00021756 <AmiBlitz3.ab3@2528>   CLR.w load_var_reg
0002175C <AmiBlitz3.ab3@2529>   CLR.l load_var_addr
00021762 <AmiBlitz3.ab3@2530>   CLR.w imm_size
00021768 <AmiBlitz3.ab3@2531>   CLR.w imm_reg
0002176E <AmiBlitz3.ab3@2532>   CLR.l imm_addr
00021774 <AmiBlitz3.ab3@2533>   CLR.b _dcb
0002177A <AmiBlitz3.ab3@2534>   CLR.l nohunkoffset
00021780 <AmiBlitz3.ab3@2535>   CLR.b peekaddrsize
00021786 <AmiBlitz3.ab3@2536>   CLR.b typecheck
0002178C <AmiBlitz3.ab3@2537>   CLR.b declare2
00021792 <AmiBlitz3.ab3@2538>   CLR.b declare
00021798 <AmiBlitz3.ab3@2539>   CLR.l myoline                                          ;check
0002179E <AmiBlitz3.ab3@2540>   CLR.l myline                                          ;check
000217A4 <AmiBlitz3.ab3@2541>   CLR.b newvariable
000217AA <AmiBlitz3.ab3@2542>   CLR.b saved0
000217B0 <AmiBlitz3.ab3@2543>   CLR.l bsssize
000217B6 <AmiBlitz3.ab3@2544>   CLR.l chipsize
000217BC <AmiBlitz3.ab3@2545>   CLR.b infunctioncode
000217C2 <AmiBlitz3.ab3@2546>   CLR.l errorcounter
000217CC <AmiBlitz3.ab3@2547>   MOVE.l #-1,bssstart
000217D6 <AmiBlitz3.ab3@2548>   MOVE.l #-1,bssend
000217E0 <AmiBlitz3.ab3@2549>   MOVE.l #-1,chipstart
000217EA <AmiBlitz3.ab3@2550>   MOVE.l #-1,chipend
000217F2 <AmiBlitz3.ab3@2551>   MOVE.w #0,bssmode
000217F8 <AmiBlitz3.ab3@2552>   CLR.w a2offset
000217FE <AmiBlitz3.ab3@2553>   CLR.w fast
00021804 <AmiBlitz3.ab3@2554>   CLR.w fpu
0002180A <AmiBlitz3.ab3@2555>   CLR.b iee
00021810 <AmiBlitz3.ab3@2556>   CLR.w newsyntax
00021814 <AmiBlitz3.ab3@2558>   BSR.w qfree
0002181A <AmiBlitz3.ab3@2559>   JSR killoffs              ;free up DOS offset table
00021820 <AmiBlitz3.ab3@2560>   JSR frallvars               ;free up Global vars
00021826 <AmiBlitz3.ab3@2561>   JSR fralltypes              ;free up all types
0002182C <AmiBlitz3.ab3@2562>   JSR freemacs                ;free up actual macro defines.
00021832 <AmiBlitz3.ab3@2563>   JSR clearfunctionlist       ;free up states/funcs
00021838 <AmiBlitz3.ab3@2565>   TST.w pass                  
0002183E <AmiBlitz3.ab3@2568>   JSR clearlabels             ;free up labels
00021844 <AmiBlitz3.ab3@2570>   JSR clearhash
0002184A <AmiBlitz3.ab3@2573>   LEA devo,a0
0002184E <AmiBlitz3.ab3@2574>   MOVEM.l a0-a6/d0-d7,-(a7)
00021854 <AmiBlitz3.ab3@2575>   LEA ptr_parameterstore,a1
00021856 <AmiBlitz3.ab3@2578>     MOVE.b (a0)+,(a1)+
0002185A <AmiBlitz3.ab3@2579>   BNE 'l1b
0002185C <AmiBlitz3.ab3@2580>   MOVEQ #13,d2
00021862 <AmiBlitz3.ab3@2581>   JSR findlabel2
00021866 <AmiBlitz3.ab3@2582>   BNE 'd
0002186A <AmiBlitz3.ab3@2583>   CLR.l 8(a2)
0002186E <AmiBlitz3.ab3@2586>   MOVEM.l (a7)+,a0-a6/d0-d7
00021898 <AmiBlitz3.ab3@2587>   !basic
0002190C <AmiBlitz3.ab3@2588>   dos_Delete{dos_AddPart{my_systemdir$,"ab_compileerror.txt"}}
0002192A <AmiBlitz3.ab3@2589>   !asm
00021930 <AmiBlitz3.ab3@2590>   CLR.b returncode
00021936 <AmiBlitz3.ab3@2592> JMP freeprocvs                     ;free up outstanding proc stuff
0002193C <AmiBlitz3.ab3@2596>   MOVE.l #bssstore-labelhash,d0
0002193E <AmiBlitz3.ab3@2597>   ASR.l #2,d0
00021944 <AmiBlitz3.ab3@2598>   LEA labelhash,a0
00021946 <AmiBlitz3.ab3@2601>     CLR.l (a0)+
00021948 <AmiBlitz3.ab3@2602>     SUBQ.l #1,d0
0002194C <AmiBlitz3.ab3@2603>   BNE.s 'l10
00021952 <AmiBlitz3.ab3@2605>   LEA labelbase,a1
00021954 <AmiBlitz3.ab3@2606>   MOVE.l (a1),d0
00021958 <AmiBlitz3.ab3@2607>   BEQ 'l11
0002195A <AmiBlitz3.ab3@2610>     MOVE.l d0,a1
0002195E <AmiBlitz3.ab3@2611>     TST.l 4(a1)
00021962 <AmiBlitz3.ab3@2612>     BEQ 'l29
00021966 <AmiBlitz3.ab3@2613>     LEA $13(a1),a0
00021968 <AmiBlitz3.ab3@2614>     MOVEQ #0,d0
0002196A <AmiBlitz3.ab3@2615>     MOVEQ #0,d1
0002196C <AmiBlitz3.ab3@2618>       MOVE.b (a0)+,d1
00021970 <AmiBlitz3.ab3@2619>       BEQ 'l12
00021976 <AmiBlitz3.ab3@2620>       !hashalgo
0002197A <AmiBlitz3.ab3@2621>  BRA 'l13
00021980 <AmiBlitz3.ab3@2624>     LEA labelhash,a0
00021986 <AmiBlitz3.ab3@2625>     AND.l #hashsize,d0
00021988 <AmiBlitz3.ab3@2626>      ASL.l #2,d0
0002198C <AmiBlitz3.ab3@2627>     MOVE.l 0(a0,d0),d1                                     ;*4
00021990 <AmiBlitz3.ab3@2628>     MOVE.l d1,$c(a1)
00021994 <AmiBlitz3.ab3@2629>     MOVE.l a1,0(a0,d0)
00021996 <AmiBlitz3.ab3@2632>     MOVE.l (a1),d0
0002199A <AmiBlitz3.ab3@2633>   BNE 'l21
0002199C <AmiBlitz3.ab3@2636> RTS
000219A2 <AmiBlitz3.ab3@2640>   MOVEA.l lastrestype,A0
000219A4 <AmiBlitz3.ab3@2641>   MOVEA.l (A0),A2
000219A6 <AmiBlitz3.ab3@2642>   CLR.l (A0)
000219AC <AmiBlitz3.ab3@2643> JMP freetypes
000219B2 <AmiBlitz3.ab3@2647>   MOVEA.l varbase,A3
000219B8 <AmiBlitz3.ab3@2648>   CLR.l varbase
000219BC <AmiBlitz3.ab3@2652>   CMPA.w #$0,A3
000219C0 <AmiBlitz3.ab3@2653>   BEQ.w 'l20
000219C2 <AmiBlitz3.ab3@2654>   MOVEA.l A3,A1
000219C4 <AmiBlitz3.ab3@2655>   MOVEA.l (A3),A3
000219C6 <AmiBlitz3.ab3@2656>   MOVEQ.l #$00,D0
000219CA <AmiBlitz3.ab3@2657>   MOVE.b $E+4(A1),D0
000219D0 <AmiBlitz3.ab3@2658>   MOVEA.l _execbase,A6
000219D6 <AmiBlitz3.ab3@2659>   MOVE.l mempool2,a0
000219DA <AmiBlitz3.ab3@2660>   JSR _FreePooled(A6)
000219DE <AmiBlitz3.ab3@2661>  BRA.w 'l10
000219E0 <AmiBlitz3.ab3@2664> RTS
000219E6 <AmiBlitz3.ab3@2670>   LEA firstiff,A2
000219E8 <AmiBlitz3.ab3@2671>   MOVEQ.l #$0E,D2
000219EE <AmiBlitz3.ab3@2672> JMP freeslist
000219F0 <AmiBlitz3.ab3@2678> progressbar_width:   Dc.w 100                              ;riteend org source ;right end of include strip
000219F2 <AmiBlitz3.ab3@2679> inmacro:             Ds.w 1                                ;macmask org source ;macro found
000219F8 <AmiBlitz3.ab3@2686>   CLR.w inmacro
000219FE <AmiBlitz3.ab3@2688>   ADDQ.l #1,globallinecount
00021A04 <AmiBlitz3.ab3@2689>   CLR.b nostringopt
00021A08 <AmiBlitz3.ab3@2691>   BSR.w freembuff
00021A0E <AmiBlitz3.ab3@2692>   CLR.w instringon
00021A14 <AmiBlitz3.ab3@2697>   TST.w ininclude
00021A18 <AmiBlitz3.ab3@2698>   BEQ.w 'skip3
00021A1E <AmiBlitz3.ab3@2700>   ADDQ.l #1,includeline
00021A24 <AmiBlitz3.ab3@2701>     JSR ab3_WriteDebugFile
00021A2A <AmiBlitz3.ab3@2703>   JSR readinc
00021A2E <AmiBlitz3.ab3@2704>   BEQ.w 'skip3
00021A34 <AmiBlitz3.ab3@2708>   MOVE.w ininclude,D0
00021A38 <AmiBlitz3.ab3@2709>   CMP.w #$4,D0
00021A3C <AmiBlitz3.ab3@2710>   BCC.w 'stskip
00021A3E <AmiBlitz3.ab3@2711>   ADD.w D0,D0
00021A44 <AmiBlitz3.ab3@2712>   LEA progress_per_line,A0
00021A48 <AmiBlitz3.ab3@2713>   MOVE.w $0(A0,D0.W),D2     ;offset in line
00021A4C <AmiBlitz3.ab3@2714>   CMP.w progressbar_width(PC),D2
00021A50 <AmiBlitz3.ab3@2715>   BCC.w 'stskip
00021A54 <AmiBlitz3.ab3@2716>   ADDQ.w #1,$0(A0,D0.W)
00021A56 <AmiBlitz3.ab3@2718>   LSR.w #1,D0
00021A58 <AmiBlitz3.ab3@2720>   MOVE.l d0,d1
00021A5A <AmiBlitz3.ab3@2721>   EXT.l d1
00021A5C <AmiBlitz3.ab3@2722>   MOVE.l d2,d0
00021A5E <AmiBlitz3.ab3@2723>   EXT.l d0                                                 ;d0=x,d1=y
00021A64 <AmiBlitz3.ab3@2725>   JSR update_progressbar
00021A66 <AmiBlitz3.ab3@2729>   MOVEQ.l #-$01,D0
00021A68 <AmiBlitz3.ab3@2730>  RTS
00021A6E <AmiBlitz3.ab3@2735>   MOVE.l titleat,D0
00021A70 <AmiBlitz3.ab3@2736>   MOVEQ.l #$00,D1
00021A76 <AmiBlitz3.ab3@2737>   MOVE.w progress_per_line,D1
00021A78 <AmiBlitz3.ab3@2738>   ADD.l D1,D0
00021A7A <AmiBlitz3.ab3@2739>   MOVE.l D0,D1
00021A7C <AmiBlitz3.ab3@2740>   SWAP D0
00021A82 <AmiBlitz3.ab3@2741>   CMP.w titleat,D0
00021A86 <AmiBlitz3.ab3@2742>    BEQ.w 'skip3a
00021A88 <AmiBlitz3.ab3@2747>   EXT.l d0
00021A8A <AmiBlitz3.ab3@2748>   MOVE.l d1,-(a7)
00021A92 <AmiBlitz3.ab3@2751>   MOVE.w #1,compiler_job                                    ; set to compiler job 1 (=build executable)
00021A98 <AmiBlitz3.ab3@2752>   JSR update_progressbar
00021AA0 <AmiBlitz3.ab3@2753>   MOVE.w #0,compiler_job                                    ; set to compiler job 0 (=compile source)
00021AA2 <AmiBlitz3.ab3@2759>   MOVE.l (a7)+,d1
00021AA8 <AmiBlitz3.ab3@2763>   MOVE.l D1,titleat
00021AAE <AmiBlitz3.ab3@2766>   ADDQ.l #1,linenumat
00021AB4 <AmiBlitz3.ab3@2767>   CLR.w linedone
00021ABA <AmiBlitz3.ab3@2769>   JSR ab3_WriteDebugFile  ; write to DebugFile every main source line
00021AC0 <AmiBlitz3.ab3@2775>   SUBQ.l #1,numlines2
00021AC4 <AmiBlitz3.ab3@2777>    BEQ.w 'skip
00021ACA <AmiBlitz3.ab3@2778>   MOVEA.l sourceline,A0
00021ACC <AmiBlitz3.ab3@2779>   MOVEA.l (A0),A0
00021AD2 <AmiBlitz3.ab3@2780>   MOVE.l A0,sourceline
00021AD6 <AmiBlitz3.ab3@2781>   LEA $9(A0),A5
00021AD8 <AmiBlitz3.ab3@2784> RTS
00021ADA <AmiBlitz3.ab3@2788>   MOVE.w D0,-(A7)
00021ADC <AmiBlitz3.ab3@2789>   MOVEQ.l #$03,D0
00021ADE <AmiBlitz3.ab3@2792>     MOVE.w D1,D2
00021AE2 <AmiBlitz3.ab3@2793>     ANDI.w #$F,D2
00021AE6 <AmiBlitz3.ab3@2794>     ADDI.w #$30,D2
00021AEA <AmiBlitz3.ab3@2795>     CMP.w #$3A,D2
00021AEE <AmiBlitz3.ab3@2796>      BCS.w 'skip
00021AF0 <AmiBlitz3.ab3@2797>     ADDQ.w #7,D2
00021AF4 <AmiBlitz3.ab3@2800>     MOVE.b D2,$0(A0,D0.W)
00021AF6 <AmiBlitz3.ab3@2801>     LSR.w #4,D1
00021AFA <AmiBlitz3.ab3@2802>   DBF D0,'loop
00021AFC <AmiBlitz3.ab3@2804>   MOVE.w (A7)+,D0
00021AFE <AmiBlitz3.ab3@2805> RTS
00021B04 <AmiBlitz3.ab3@2815>   MOVE.w skipcode,D1
00021B08 <AmiBlitz3.ab3@2816>   BNE.w 'loop0
00021B0A <AmiBlitz3.ab3@2817>  RTS
00021B0C <AmiBlitz3.ab3@2820>   MOVE.l A5,-(A7)
00021B0E <AmiBlitz3.ab3@2821>   MOVEQ.l #$3A,D1      ;':'
00021B10 <AmiBlitz3.ab3@2822>   MOVEQ.l #$21,D2      ;'!'
00021B12 <AmiBlitz3.ab3@2823>   MOVEQ.l #$3B,D3      ;';'
00021B14 <AmiBlitz3.ab3@2824>   MOVEQ.l #$22,D4      ;'"'
00021B16 <AmiBlitz3.ab3@2827>   MOVE.b (A5)+,D0
00021B1A <AmiBlitz3.ab3@2828>    BEQ.w 'done
00021B1E <AmiBlitz3.ab3@2829>    BPL.w 'test
00021B20 <AmiBlitz3.ab3@2830>   MOVE.b (A5)+,D0
00021B24 <AmiBlitz3.ab3@2831>  BRA.w 'loop
00021B26 <AmiBlitz3.ab3@2834>   CMP.b D4,D0
00021B2A <AmiBlitz3.ab3@2835>    BNE.w 'notq
00021B2C <AmiBlitz3.ab3@2838>   MOVE.b (A5)+,D0
00021B30 <AmiBlitz3.ab3@2839>    BEQ.w notqerr
00021B34 <AmiBlitz3.ab3@2845>   CMP.b #$22,D0        ;'"'
00021B38 <AmiBlitz3.ab3@2846>    BNE.w 'qloop
00021B3C <AmiBlitz3.ab3@2847>  BRA.w 'loop
00021B3E <AmiBlitz3.ab3@2850>   CMP.b D1,D0
00021B42 <AmiBlitz3.ab3@2851>    BEQ.w 'done
00021B44 <AmiBlitz3.ab3@2852>   CMP.b D3,D0
00021B48 <AmiBlitz3.ab3@2853>    BEQ.w 'done       ;macro character!
00021B4A <AmiBlitz3.ab3@2854>   CMP.b D2,D0
00021B4E <AmiBlitz3.ab3@2855>    BNE.w 'loop
00021B56 <AmiBlitz3.ab3@2859>   MOVE.w #$FFFF,inmacro    ; was -1                                ; no runtimecheck in macros
00021B58 <AmiBlitz3.ab3@2860>   MOVEA.l A5,A3
00021B5E <AmiBlitz3.ab3@2862>    JSR getparameter2
00021B62 <AmiBlitz3.ab3@2863>    BNE.w 'fkitme
00021B68 <AmiBlitz3.ab3@2864>  JMP syntaxerr
00021B72 <AmiBlitz3.ab3@2869>    MOVE.w oldqflag,instringon
00021B78 <AmiBlitz3.ab3@2870>   MOVEA.l lastsourcepos,A5
00021B7E <AmiBlitz3.ab3@2873>    JSR findmac                                             ;find macro
00021B82 <AmiBlitz3.ab3@2874>    BEQ.w 'kl1
00021B88 <AmiBlitz3.ab3@2875>  JMP nomacerr
00021B8E <AmiBlitz3.ab3@2879>   TST.b debugmode
00021B92 <AmiBlitz3.ab3@2880>   BEQ 'sk1
00021B96 <AmiBlitz3.ab3@2881>   MOVE.w #$4e71,d1
00021B9C <AmiBlitz3.ab3@2882>   JSR writeword
00021B9E <AmiBlitz3.ab3@2883>   MOVE.l a5,-(a7)
00021BA0 <AmiBlitz3.ab3@2884>   MOVE.l a3,a5
00021BA2 <AmiBlitz3.ab3@2885>   SUBQ.l #1,a5
00021BAA <AmiBlitz3.ab3@2886>   MOVE.w #$0,inmacro
00021BAE <AmiBlitz3.ab3@2887>   BSR debugstuffa
00021BB6 <AmiBlitz3.ab3@2888>   MOVE.w #$FFFF,inmacro
00021BB8 <AmiBlitz3.ab3@2889>   MOVE.l (a7)+,a5
00021BBC <AmiBlitz3.ab3@2890>   MOVE.w #$4e71,d1
00021BC2 <AmiBlitz3.ab3@2891>   JSR writeword
00021BC4 <AmiBlitz3.ab3@2895>   MOVEA.l A5,A4            ;start of parameters!
00021BC8 <AmiBlitz3.ab3@2899>    CMP.b #" ",(a4)+
00021BCC <AmiBlitz3.ab3@2900>     BEQ 'l5a
00021BCE <AmiBlitz3.ab3@2901>      SUBQ.l#1,a4
00021BD2 <AmiBlitz3.ab3@2902>      CMP.b #",",(a4)
00021BD6 <AmiBlitz3.ab3@2903>     BEQ 'nops
00021BD8 <AmiBlitz3.ab3@2907>   MOVEQ.l #$00,D4          ;narg=0
00021BDE <AmiBlitz3.ab3@2909>   TST.b newsyntax
00021BE2 <AmiBlitz3.ab3@2910>   BEQ 'l10b
00021BE6 <AmiBlitz3.ab3@2911>   MOVEM.l a0/d0,-(a7)
00021BEA <AmiBlitz3.ab3@2912>   MOVE.l 4(a2),a0
00021BEE <AmiBlitz3.ab3@2913>   MOVE.w 8(a2),d0
00021BF2 <AmiBlitz3.ab3@2916>   CMP.b #"`",(a0)+
00021BF6 <AmiBlitz3.ab3@2917>   BEQ 'x1
00021BF8 <AmiBlitz3.ab3@2918>   SUBQ.w #1,d0
00021BFC <AmiBlitz3.ab3@2919>   BNE 'x2
00021C00 <AmiBlitz3.ab3@2920>  BRA 'x3
00021C04 <AmiBlitz3.ab3@2923>   MOVEM.l (a7)+,a0/d0
00021C08 <AmiBlitz3.ab3@2924>  BRA 'l10
00021C0C <AmiBlitz3.ab3@2927>   MOVEM.l (a7)+,a0/d0
00021C10 <AmiBlitz3.ab3@2928>  BRA 'nops
00021C14 <AmiBlitz3.ab3@2932>   CMPI.b #"{",(A4)
00021C18 <AmiBlitz3.ab3@2933>    BNE.w 'nops
00021C1A <AmiBlitz3.ab3@2938>   ADDQ.l #1,a4
00021C1E <AmiBlitz3.ab3@2941>     CMP.b #" ",(a4)
00021C22 <AmiBlitz3.ab3@2942>     BEQ 'l5
00021C26 <AmiBlitz3.ab3@2943>     MOVEM.l a0/d0,-(a7)
00021C2C <AmiBlitz3.ab3@2944>     CLR.b exmac
00021C32 <AmiBlitz3.ab3@2945>     LEA chartab,a0
00021C34 <AmiBlitz3.ab3@2946>     MOVEQ #0,d0
00021C36 <AmiBlitz3.ab3@2947>     MOVE.b (a4),d0
00021C3A <AmiBlitz3.ab3@2948>     BMI 'm1
00021C3E <AmiBlitz3.ab3@2949>     TST.b 0(a0,d0)
00021C42 <AmiBlitz3.ab3@2950>     BEQ 'm1
00021C48 <AmiBlitz3.ab3@2951>     TST.b newsyntax
00021C4C <AmiBlitz3.ab3@2952>     BEQ 'ns1
00021C50 <AmiBlitz3.ab3@2953>     CMP.b #"#",d0
00021C54 <AmiBlitz3.ab3@2954>     BEQ 'm1
00021C58 <AmiBlitz3.ab3@2955>     CMP.b #"$",d0
00021C5C <AmiBlitz3.ab3@2956>     BEQ 'm1
00021C60 <AmiBlitz3.ab3@2957>     CMP.b #"-",d0
00021C64 <AmiBlitz3.ab3@2958>     BEQ 'm1
00021C68 <AmiBlitz3.ab3@2961>   CMP.b #",",d0
00021C6C <AmiBlitz3.ab3@2962>     BEQ 'm1
00021C70 <AmiBlitz3.ab3@2963>     CMP.b #"{",d0
00021C74 <AmiBlitz3.ab3@2964>     BNE 'm1b
00021C76 <AmiBlitz3.ab3@2965>     ADDQ.l #1,a4
00021C7A <AmiBlitz3.ab3@2966>  BRA 'm1
00021C80 <AmiBlitz3.ab3@2969>   TST.b newsyntax
00021C84 <AmiBlitz3.ab3@2970>     BEQ 'm1
00021C8C <AmiBlitz3.ab3@2971>     MOVE.b #1,exmac
00021C90 <AmiBlitz3.ab3@2974>   MOVEM.l (a7)+,a0/d0
00021C96 <AmiBlitz3.ab3@2975>     TST.b exmac
00021C9A <AmiBlitz3.ab3@2976>     BNE 'nops
00021C9C <AmiBlitz3.ab3@2983>   TST.b (a4)
00021CA0 <AmiBlitz3.ab3@2984>   BEQ 'nops
00021CA6 <AmiBlitz3.ab3@2988>   MOVEA.l ptr_macrobuffer_begin,A0    ;start of parameter collect
00021CA8 <AmiBlitz3.ab3@2991>   ADDQ.w #1,D4                        ;another p
00021CAA <AmiBlitz3.ab3@2992>   MOVE.l A4,(A0)
00021CAE <AmiBlitz3.ab3@2994>   CLR.w 4(a0)
00021CB2 <AmiBlitz3.ab3@2996>    BSR.w findit
00021CB4 <AmiBlitz3.ab3@2999>   ADDQ.l #4,a0
00021CB6 <AmiBlitz3.ab3@3005>   SUBQ.w #1,(a0)+
00021CBA <AmiBlitz3.ab3@3007>   CMP.b #$7D,D0     ;'}'
00021CBE <AmiBlitz3.ab3@3009>   BEQ 'l10b1
00021CC0 <AmiBlitz3.ab3@3010>   TST.b d0
00021CC4 <AmiBlitz3.ab3@3011>   BEQ 'l10b1
00021CC8 <AmiBlitz3.ab3@3012>  BRA 'ppl
00021CCE <AmiBlitz3.ab3@3018>   CLR.l sourceline3
00021CD0 <AmiBlitz3.ab3@3020>   MOVEA.l A4,A5
00021CD6 <AmiBlitz3.ab3@3023>   MOVE.w D4,numarg
00021CDC <AmiBlitz3.ab3@3034>   MOVE.l #$01,D1
00021CE2 <AmiBlitz3.ab3@3035>   MOVEA.l _execbase,A6
00021CE8 <AmiBlitz3.ab3@3037>   MOVE.l mempool,a0
00021CEE <AmiBlitz3.ab3@3038>   MOVE.l macrobuffer_size,D0
00021CF4 <AmiBlitz3.ab3@3039>   CMP.l #DEFAULT_MACROBUFFERSIZE,d0                          ; replaced with a constant tomsmart1
00021CF8 <AmiBlitz3.ab3@3040>   BGE 'l1mc
00021CFE <AmiBlitz3.ab3@3041>   MOVE.l #DEFAULT_MACROBUFFERSIZE,d0                         ; replaced with a constant tomsmart1
00021D04 <AmiBlitz3.ab3@3042>   MOVE.l d0,macrobuffer_size
00021D08 <AmiBlitz3.ab3@3045>   JSR _AllocPooled(a6)
00021D12 <AmiBlitz3.ab3@3049>   MOVE.l myline,myoline
00021D14 <AmiBlitz3.ab3@3053>   ADDQ.l #1,d0
00021D1A <AmiBlitz3.ab3@3055>   MOVE.l D0,myline
00021D1C <AmiBlitz3.ab3@3056>   MOVEA.l D0,A1
00021D22 <AmiBlitz3.ab3@3058>   MOVE.b #":",-1(a1)
00021D24 <AmiBlitz3.ab3@3060>   MOVEA.l A1,A6
00021D2A <AmiBlitz3.ab3@3061>   ADDA.l macrobuffer_size,A6   ;end of macro buffer
00021D2C <AmiBlitz3.ab3@3063>   MOVEA.l (A7)+,A0             ;start of the line
00021D2E <AmiBlitz3.ab3@3066>   CMPA.l A6,A1
00021D32 <AmiBlitz3.ab3@3067>    BCC.w mbovererr
00021D34 <AmiBlitz3.ab3@3068>   MOVE.b (A0)+,(a1)+
00021D36 <AmiBlitz3.ab3@3069>   CMPA.l A3,A0
00021D3A <AmiBlitz3.ab3@3070>    BCS.w 'loop2
00021D3C <AmiBlitz3.ab3@3071>   SUBQ.w #1,A1                 ;back over '#'
00021D40 <AmiBlitz3.ab3@3073>   MOVE.w $8(A2),D1             ;mac len
00021D44 <AmiBlitz3.ab3@3074>    BEQ.w 'loop4
00021D4C <AmiBlitz3.ab3@3075>   MOVE.w $A(A2),macnum
00021D50 <AmiBlitz3.ab3@3076>   ADDQ.w #1,$A(A2)
00021D54 <AmiBlitz3.ab3@3077>   MOVEA.l $4(A2),A2
00021D56 <AmiBlitz3.ab3@3078>   SUBQ.w #1,D1
00021D5C <AmiBlitz3.ab3@3080>   CLR.b firstmline
00021D5E <AmiBlitz3.ab3@3084>     MOVEQ.l #$00,D0
00021D60 <AmiBlitz3.ab3@3085>     MOVE.b (A2)+,D0
00021D66 <AmiBlitz3.ab3@3087>     TST.b firstmline
00021D6A <AmiBlitz3.ab3@3088>     BNE 'c1
00021D6E <AmiBlitz3.ab3@3089>     CMP.b #$22,d0         ;'"'
00021D72 <AmiBlitz3.ab3@3090>     BNE 's1
00021D7A <AmiBlitz3.ab3@3091>     MOVE.b #1,firstmline
00021D7E <AmiBlitz3.ab3@3094>     CMP.b #":",d0
00021D82 <AmiBlitz3.ab3@3095>     BNE 'm1a
00021D8A <AmiBlitz3.ab3@3096>     MOVE.b #1,firstmline
00021D8E <AmiBlitz3.ab3@3099>     CMP.b #";",d0
00021D92 <AmiBlitz3.ab3@3100>     BNE 'c1
00021D94 <AmiBlitz3.ab3@3103>     SUBQ.w #1,d1                                           ;filter out comment
00021D96 <AmiBlitz3.ab3@3104>     MOVE.b (a2)+,d0
00021D9C <AmiBlitz3.ab3@3105>     CMP.w #":@",-1(a2)
00021DA0 <AmiBlitz3.ab3@3106>     BEQ 'c2
00021DA2 <AmiBlitz3.ab3@3107>     TST.w d1
00021DA6 <AmiBlitz3.ab3@3108>     BNE 'l1d
00021DAA <AmiBlitz3.ab3@3109>    BRA 'oky2
00021DB0 <AmiBlitz3.ab3@3112>     CMP.b #":",1(a2)
00021DB4 <AmiBlitz3.ab3@3113>       BNE 'l1d
00021DB6 <AmiBlitz3.ab3@3114>       ADDQ #2,a2
00021DB8 <AmiBlitz3.ab3@3115>       SUBQ #3,d1
00021DBA <AmiBlitz3.ab3@3116>       MOVE.b (a2)+,d0
00021DC2 <AmiBlitz3.ab3@3117>       MOVE.b #1,firstmline
00021DC6 <AmiBlitz3.ab3@3121>     CMP.b #"`",D0
00021DCA <AmiBlitz3.ab3@3122>      BNE.w 'oky
00021DCC <AmiBlitz3.ab3@3123>     SUBQ.w #1,D1
00021DCE <AmiBlitz3.ab3@3124>     MOVE.b (A2)+,D0
00021DD2 <AmiBlitz3.ab3@3125>     CMP.w #$7B,D0       ;'{'
00021DD6 <AmiBlitz3.ab3@3126>      BEQ.w 'evalit
00021DDA <AmiBlitz3.ab3@3127>     CMP.w #$40,D0       ;'@'
00021DDE <AmiBlitz3.ab3@3128>      BNE.w 'notnum
00021DE0 <AmiBlitz3.ab3@3132>     MOVEQ.l #$00,D2
00021DE6 <AmiBlitz3.ab3@3133>     MOVE.w macnum,D2
00021DE8 <AmiBlitz3.ab3@3134>     MOVEA.l A1,A0
00021DEA <AmiBlitz3.ab3@3135>     MOVE.w D1,-(A7)
00021DF0 <AmiBlitz3.ab3@3136>      JSR makelong
00021DF2 <AmiBlitz3.ab3@3137>     MOVEA.l A0,A1
00021DF4 <AmiBlitz3.ab3@3138>     MOVE.w (A7)+,D1
00021DF8 <AmiBlitz3.ab3@3140>    BRA.w 'oky2
00021DFC <AmiBlitz3.ab3@3143>     ORI.w #$20,D0
00021E00 <AmiBlitz3.ab3@3144>     CMP.w #$7A,D0       ;'z'
00021E04 <AmiBlitz3.ab3@3145>      BCS.w 'fkit
00021E0A <AmiBlitz3.ab3@3146>    JMP ilconsterr
00021E0E <AmiBlitz3.ab3@3149>     SUBI.w #$30,D0
00021E12 <AmiBlitz3.ab3@3150>     CMP.w #$A,D0
00021E16 <AmiBlitz3.ab3@3151>      BCS.w 'itsgot
00021E1A <AmiBlitz3.ab3@3153>     SUBI.w #$27,D0
00021E1E <AmiBlitz3.ab3@3154>     CMP.w #$A,D0
00021E22 <AmiBlitz3.ab3@3155>      BCC.w 'fkit2
00021E28 <AmiBlitz3.ab3@3156>    JMP ilconsterr
00021E2C <AmiBlitz3.ab3@3159>    BRA.w 'itsgot
00021E2E <AmiBlitz3.ab3@3162>     MOVE.l A5,-(A7)
00021E32 <AmiBlitz3.ab3@3163>     MOVEM.l D1/A1-A2/A6,-(A7)
00021E34 <AmiBlitz3.ab3@3164>     MOVEA.l A2,A5
00021E3A <AmiBlitz3.ab3@3165>      JSR evalconst2
00021E3E <AmiBlitz3.ab3@3166>     CMP.w #$7D,D0      ;'}'
00021E42 <AmiBlitz3.ab3@3167>      BEQ.w 'allisok
00021E48 <AmiBlitz3.ab3@3168>    JMP syntaxerr
00021E4C <AmiBlitz3.ab3@3171>     MOVEM.l (A7)+,D1/A1-A2/A6
00021E4E <AmiBlitz3.ab3@3172>     MOVE.l A5,D2
00021E50 <AmiBlitz3.ab3@3173>     SUB.l A2,D2
00021E52 <AmiBlitz3.ab3@3174>     SUB.w D2,D1
00021E54 <AmiBlitz3.ab3@3175>     MOVEA.l A5,A2
00021E5A <AmiBlitz3.ab3@3177>     CLR.w instringon
00021E5C <AmiBlitz3.ab3@3178>     MOVEA.l (A7)+,A5
00021E5E <AmiBlitz3.ab3@3180>     MOVE.l D3,D0
00021E62 <AmiBlitz3.ab3@3181>     BPL.w 'itsgot
00021E68 <AmiBlitz3.ab3@3182>    JMP ilconsterr
00021E6A <AmiBlitz3.ab3@3185>     SUBQ.w #1,D0
00021E6E <AmiBlitz3.ab3@3186>      BPL.w 'ok
00021E74 <AmiBlitz3.ab3@3190>     MOVE.w numarg,D0
00021E78 <AmiBlitz3.ab3@3191>     DIVU #$A,D0
00021E7C <AmiBlitz3.ab3@3192>     ADDI.w #$30,D0
00021E7E <AmiBlitz3.ab3@3193>     CMPA.l A6,A1
00021E82 <AmiBlitz3.ab3@3194>      BCC.w mbovererr
00021E84 <AmiBlitz3.ab3@3195>     MOVE.b D0,(A1)+
00021E86 <AmiBlitz3.ab3@3196>     SWAP D0
00021E8A <AmiBlitz3.ab3@3197>     ADDI.w #$30,D0
00021E8C <AmiBlitz3.ab3@3198>     CMPA.l A6,A1
00021E90 <AmiBlitz3.ab3@3199>      BCC.w mbovererr
00021E92 <AmiBlitz3.ab3@3200>     MOVE.b D0,(A1)+
00021E96 <AmiBlitz3.ab3@3201>    BRA.w 'oky2
00021E9C <AmiBlitz3.ab3@3207>     CMP.w numarg,D0
00021EA0 <AmiBlitz3.ab3@3208>      BCC.w 'oky2
00021EA2 <AmiBlitz3.ab3@3209>     LSL.w #1,D0
00021EA4 <AmiBlitz3.ab3@3210>     MOVE.w D0,D4
00021EA6 <AmiBlitz3.ab3@3211>     LSL.w #1,D0
00021EA8 <AmiBlitz3.ab3@3212>     ADD.w D4,D0          ;*6
00021EAE <AmiBlitz3.ab3@3213>     MOVEA.l ptr_macrobuffer_begin,A0
00021EB0 <AmiBlitz3.ab3@3214>     ADDA.w D0,A0
00021EB4 <AmiBlitz3.ab3@3215>     MOVE.w $4(A0),D4     ;len of replacetext
00021EB8 <AmiBlitz3.ab3@3216>      BEQ.w 'oky2
00021EBA <AmiBlitz3.ab3@3217>     MOVEA.l (A0),A0
00021EBC <AmiBlitz3.ab3@3218>     SUBQ.w #1,D4
00021EBE <AmiBlitz3.ab3@3221>       CMPA.l A6,A1
00021EC2 <AmiBlitz3.ab3@3222>        BCC.w mbovererr
00021EC6 <AmiBlitz3.ab3@3224>       CMP.w #"@@",(a0)
00021ECA <AmiBlitz3.ab3@3225>        BNE 'l10e
00021ED0 <AmiBlitz3.ab3@3226>       TST.w ininclude
00021ED4 <AmiBlitz3.ab3@3227>        BNE errorjoin
00021EDA <AmiBlitz3.ab3@3230>       MOVE.l sourceline,a0
00021EDC <AmiBlitz3.ab3@3231>       MOVE.l (a0),a0
00021EE2 <AmiBlitz3.ab3@3232>       CMP.l #0,a0
00021EE6 <AmiBlitz3.ab3@3233>       BNE 'l11e
00021EE8 <AmiBlitz3.ab3@3234>       MOVEQ #0,d0
00021EEE <AmiBlitz3.ab3@3235>       JSR error
00021EF4 <AmiBlitz3.ab3@3238>       MOVE.l a0,sourceline
00021EFA <AmiBlitz3.ab3@3239>       ADDQ.l #1,linenumat
00021EFE <AmiBlitz3.ab3@3240>       LEA 9(a0),a0
00021F00 <AmiBlitz3.ab3@3241>       MOVE.l a0,-(a7)
00021F04 <AmiBlitz3.ab3@3244>       CMP.b #" ",(a0)+
00021F08 <AmiBlitz3.ab3@3245>        BEQ 'l110e
00021F0E <AmiBlitz3.ab3@3246>       CMP.b #";",-1(a0)
00021F10 <AmiBlitz3.ab3@3247>       MOVE.l (a7)+,a0
00021F14 <AmiBlitz3.ab3@3248>        BEQ 'l111e
00021F16 <AmiBlitz3.ab3@3249>       SUBQ.l #1,d4
00021F18 <AmiBlitz3.ab3@3253>       MOVE.b (A0)+,(A1)+
00021F1C <AmiBlitz3.ab3@3254>     DBF D4,'plp
00021F20 <AmiBlitz3.ab3@3256>     BRA.w 'oky2
00021F22 <AmiBlitz3.ab3@3259>     CMPA.l A6,A1
00021F26 <AmiBlitz3.ab3@3260>      BCC.w mbovererr
00021F28 <AmiBlitz3.ab3@3261>     MOVE.b D0,(A1)+
00021F2C <AmiBlitz3.ab3@3262>      BPL.w 'oky2
00021F2E <AmiBlitz3.ab3@3263>     CMPA.l A6,A1
00021F32 <AmiBlitz3.ab3@3264>      BCC.w mbovererr
00021F34 <AmiBlitz3.ab3@3265>     MOVE.b (A2)+,(A1)+
00021F36 <AmiBlitz3.ab3@3266>     SUBQ.w #1,D1
00021F3A <AmiBlitz3.ab3@3269>    DBF D1,'loop3
00021F3C <AmiBlitz3.ab3@3279>   CMPA.l A6,A1
00021F40 <AmiBlitz3.ab3@3280>    BCC.w mbovererr
00021F42 <AmiBlitz3.ab3@3281>   MOVE.b (A5)+,(A1)+
00021F46 <AmiBlitz3.ab3@3282>    BNE.w 'loop4
00021F4C <AmiBlitz3.ab3@3284>   MOVEA.l myline,A5
00021F52 <AmiBlitz3.ab3@3286>   MOVE.l myoline,D0
00021F56 <AmiBlitz3.ab3@3287>    BEQ.w 'skip3
00021F58 <AmiBlitz3.ab3@3289>   SUBQ.l #1,d0
00021F5A <AmiBlitz3.ab3@3291>   MOVEA.l D0,A1
00021F60 <AmiBlitz3.ab3@3292>   MOVE.l macrobuffer_size,D0
00021F66 <AmiBlitz3.ab3@3293>   MOVEA.l _execbase,A6
00021F6C <AmiBlitz3.ab3@3295>   MOVE.l mempool,a0
00021F70 <AmiBlitz3.ab3@3296>   JSR _FreePooled(A6)
00021F74 <AmiBlitz3.ab3@3301>  BRA.w 'loop0
00021F76 <AmiBlitz3.ab3@3304>   MOVEA.l (A7)+,A5
00021F78 <AmiBlitz3.ab3@3305> RTS
00021F7E <AmiBlitz3.ab3@3309>   MOVE.l myline,D0
00021F82 <AmiBlitz3.ab3@3310>   BEQ.w 'no
00021F84 <AmiBlitz3.ab3@3312>   SUBQ.l #1,d0
00021F8A <AmiBlitz3.ab3@3314>   CLR.l myline
00021F8C <AmiBlitz3.ab3@3315>   MOVEA.l D0,A1
00021F92 <AmiBlitz3.ab3@3316>   MOVE.l macrobuffer_size,D0
00021F98 <AmiBlitz3.ab3@3317>   MOVEA.l _execbase,A6
00021F9E <AmiBlitz3.ab3@3319>   MOVE.l mempool,a0
00021FA2 <AmiBlitz3.ab3@3320>  JMP _FreePooled(A6)
00021FA4 <AmiBlitz3.ab3@3325> RTS
00021FA6 <AmiBlitz3.ab3@3331>   MOVEQ.l #$00,D2    ;no nesting
00021FAA <AmiBlitz3.ab3@3335>   ADDQ.w #1,4(a0)
00021FAC <AmiBlitz3.ab3@3337>    MOVE.b (A4)+,D0
00021FB0 <AmiBlitz3.ab3@3340>    BEQ exit1
00021FB4 <AmiBlitz3.ab3@3342>    BPL.w 'tst
00021FB8 <AmiBlitz3.ab3@3344>   ADDQ.w #1,4(a0)
00021FBA <AmiBlitz3.ab3@3346>   ADDQ.w #1,A4
00021FBE <AmiBlitz3.ab3@3347>  BRA.w 'loop
00021FC4 <AmiBlitz3.ab3@3351>    TST.w instringon
00021FC8 <AmiBlitz3.ab3@3352>    BNE 'lnom
00021FCC <AmiBlitz3.ab3@3353>    CMP.b #";",d0
00021FD0 <AmiBlitz3.ab3@3354>    BEQ exit2
00021FD4 <AmiBlitz3.ab3@3355>    CMP.b #":",d0
00021FD8 <AmiBlitz3.ab3@3356>    BEQ exit2
00021FDC <AmiBlitz3.ab3@3360>   CMP.b #$22,D0           ;'"'
00021FE0 <AmiBlitz3.ab3@3361>    BNE.w 'notq
00021FE6 <AmiBlitz3.ab3@3362>   NOT.w instringon
00021FEA <AmiBlitz3.ab3@3363>  BRA.w 'loop
00021FF0 <AmiBlitz3.ab3@3366>   TST.w instringon
00021FF4 <AmiBlitz3.ab3@3367>    BNE.w 'loop
00021FF8 <AmiBlitz3.ab3@3369>    CMP.b #"@",d0
00021FFC <AmiBlitz3.ab3@3370>    BNE 'l10
00022000 <AmiBlitz3.ab3@3371>    CMP.b #"@",(a4)
00022004 <AmiBlitz3.ab3@3372>    BNE 'l10
0002200A <AmiBlitz3.ab3@3373>    TST.w ininclude
0002200E <AmiBlitz3.ab3@3374>    BNE errorjoin
00022014 <AmiBlitz3.ab3@3375>    MOVE.l sourceline3,a4
0002201A <AmiBlitz3.ab3@3376>    CMP.l #0,a4
0002201E <AmiBlitz3.ab3@3377>    BNE 'l11
00022024 <AmiBlitz3.ab3@3378>    MOVE.l sourceline,a4
00022026 <AmiBlitz3.ab3@3381>   MOVE.l (a4),a4
0002202C <AmiBlitz3.ab3@3382>       CMP.l #0,a4
00022030 <AmiBlitz3.ab3@3383>       BNE 'l12
00022032 <AmiBlitz3.ab3@3384>       MOVEQ #0,d0
00022038 <AmiBlitz3.ab3@3385>       JSR error
0002203E <AmiBlitz3.ab3@3388>    MOVE.l a4,sourceline3
00022042 <AmiBlitz3.ab3@3389>    LEA 9(a4),a4
00022044 <AmiBlitz3.ab3@3390>    MOVEQ #",",d0
00022048 <AmiBlitz3.ab3@3394>   CMP.b #$2C,D0       ;','
0002204C <AmiBlitz3.ab3@3395>    BNE.w 'notc
0002204E <AmiBlitz3.ab3@3396>   TST.w D2
00022052 <AmiBlitz3.ab3@3397>    BEQ.w 'done
00022056 <AmiBlitz3.ab3@3398>  BRA.w 'loop
0002205A <AmiBlitz3.ab3@3403>    CMP.b #$7B,D0      ; same as itisopen                                     ;"{"
0002205E <AmiBlitz3.ab3@3404>    BEQ.w 'l10b
00022062 <AmiBlitz3.ab3@3405>   CMP.b #$28,D0                                            ;"("
00022066 <AmiBlitz3.ab3@3409>    BNE.w 'noto
00022068 <AmiBlitz3.ab3@3410>   ADDQ.w #1,D2
0002206C <AmiBlitz3.ab3@3411>  BRA.w 'loop
00022070 <AmiBlitz3.ab3@3414>   CMP.b #$7D,D0       ;'}'                                    ;"}"
00022074 <AmiBlitz3.ab3@3415>    BNE.w 'notcb
00022076 <AmiBlitz3.ab3@3416>  TST.w D2
0002207A <AmiBlitz3.ab3@3417>    BEQ.w 'done
0002207E <AmiBlitz3.ab3@3422>    CMP.b #$7D,D0     ; same as isitclose                                       ;"}"
00022082 <AmiBlitz3.ab3@3423>    BEQ.w 'l10a
00022086 <AmiBlitz3.ab3@3424>   CMP.b #$29,D0                                            ;")"
0002208A <AmiBlitz3.ab3@3428>    BNE.w 'loop
0002208C <AmiBlitz3.ab3@3429>   SUBQ.w #1,D2
00022090 <AmiBlitz3.ab3@3430> BRA.w 'loop
00022092 <AmiBlitz3.ab3@3433> RTS
00022094 <AmiBlitz3.ab3@3438>       SUBQ.l #1,a4
0002209A <AmiBlitz3.ab3@3439>       CLR.l sourceline3
0002209C <AmiBlitz3.ab3@3440> RTS
0002209E <AmiBlitz3.ab3@3444>       MOVEQ #0,d0
000220A0 <AmiBlitz3.ab3@3445>       SUBQ.l #1,a4
000220A6 <AmiBlitz3.ab3@3446>       CLR.l sourceline3
000220A8 <AmiBlitz3.ab3@3447> RTS
000220AC <AmiBlitz3.ab3@3452>   CMP.b #$7B,D0        ;'{'                                     ;"{"
000220B0 <AmiBlitz3.ab3@3453>   BEQ.w 'yes
000220B4 <AmiBlitz3.ab3@3454>   CMP.b #$28,D0        ;'('                                    ;"("
000220B6 <AmiBlitz3.ab3@3457> RTS
000220BA <AmiBlitz3.ab3@3461>   CMP.b #$7D,D0         ;'}'                                   ;"}"
000220BE <AmiBlitz3.ab3@3462>   BEQ.w 'yes
000220C2 <AmiBlitz3.ab3@3463>   CMP.b #$29,D0         ;')'                                   ;")"
000220C4 <AmiBlitz3.ab3@3466> RTS
000220C6 <AmiBlitz3.ab3@3470> stopit:     Ds.w 1
000220C8 <AmiBlitz3.ab3@3471> clrreq:     Ds.w 1
000220CC <AmiBlitz3.ab3@3493>   MOVE.w clrreq(PC),D0
000220D0 <AmiBlitz3.ab3@3494>    BEQ.w 'skip
000220D6 <AmiBlitz3.ab3@3498>   LEA clrreq,a0
000220D8 <AmiBlitz3.ab3@3499>   NOT.w (a0)                                               ;reass
000220DE <AmiBlitz3.ab3@3500>   MOVEA.l ptr_ThisTask,A0
000220E2 <AmiBlitz3.ab3@3501>   CLR.l $1E(A0)
000220E6 <AmiBlitz3.ab3@3502>   CLR.l $2A(A0)
000220E8 <AmiBlitz3.ab3@3505> RTS
000220EA <AmiBlitz3.ab3@3508> intsused:  Ds.w 1
000220F2 <AmiBlitz3.ab3@3512>   MOVE.w #-1,blitzoff
000220F8 <AmiBlitz3.ab3@3513>   CLR.w intsused
000220FE <AmiBlitz3.ab3@3514>   CLR.w anyerrs
00022104 <AmiBlitz3.ab3@3515>   CLR.w blitzmode
0002210A <AmiBlitz3.ab3@3516>   CLR.w dontwrite_nomemleft                                              ;nomemleft
00022110 <AmiBlitz3.ab3@3517>   CLR.w constmode
00022116 <AmiBlitz3.ab3@3518>   CLR.w cmake
0002211C <AmiBlitz3.ab3@3519>   CLR.w cfetchmode
00022122 <AmiBlitz3.ab3@3520>   CLR.l intdata1
00022128 <AmiBlitz3.ab3@3521>   CLR.w fuckpos
0002212E <AmiBlitz3.ab3@3522>   CLR.w procnum
00022134 <AmiBlitz3.ab3@3523>   CLR.w procnum2
0002213A <AmiBlitz3.ab3@3524>   CLR.w dfetch
00022140 <AmiBlitz3.ab3@3525>   CLR.l titleat
00022146 <AmiBlitz3.ab3@3526>   CLR.b usedpath
0002214C <AmiBlitz3.ab3@3527>   CLR.b path2
00022152 <AmiBlitz3.ab3@3528>   CLR.w inerr
00022158 <AmiBlitz3.ab3@3529>   CLR.w intlevel
0002215E <AmiBlitz3.ab3@3530>   CLR.l cont_pc
00022164 <AmiBlitz3.ab3@3531>   CLR.l cont_pc2
0002216A <AmiBlitz3.ab3@3532>   CLR.l lastcontlink
00022174 <AmiBlitz3.ab3@3534>   MOVE.l destbufferstart,destpointer
0002217E <AmiBlitz3.ab3@3535>   MOVE.l destbufferstart,bigpc
00022188 <AmiBlitz3.ab3@3536>   MOVE.l destbufferend,libend
00022192 <AmiBlitz3.ab3@3537>   MOVE.l data1start,data1
0002219C <AmiBlitz3.ab3@3538>   MOVE.l data2at,data2
000221A4 <AmiBlitz3.ab3@3540>   MOVE.w #-1,skipcode                                      ;#-1,comflag org source
000221AC <AmiBlitz3.ab3@3541>   MOVE.w #-1,linemode                                      ;#-1,linemode org soruce
000221B2 <AmiBlitz3.ab3@3542>   CLR.w oldvcodelen
000221B8 <AmiBlitz3.ab3@3543>   CLR.b lastgloballabel                                    ;lastbiglab org source
000221BA <AmiBlitz3.ab3@3545> RTS
000221BC <AmiBlitz3.ab3@3548> debugmode:  Ds.w 1                                         ;debugga org source ;debugger enabled?
000221C2 <AmiBlitz3.ab3@3552>   LEA  clrreq,a1
000221C6 <AmiBlitz3.ab3@3553>   MOVE.w #2000,(a1)
000221F0 <AmiBlitz3.ab3@3554>   !basic
00022240 <AmiBlitz3.ab3@3555>   comstatusstr  = !TRANS{"Initializing Compiler..."} ;default settings
00022248 <AmiBlitz3.ab3@3556>   calcpro       = 0
00022250 <AmiBlitz3.ab3@3557>   calcpro_old   = 0
0002225C <AmiBlitz3.ab3@3558>   typ_old       = -1
00022268 <AmiBlitz3.ab3@3559>   pass_old      = -1
0002226E <AmiBlitz3.ab3@3560>   update_comstatus_gui = True ; for the first
000222A8 <AmiBlitz3.ab3@3562>   GetD0 &comstatusstr : !ComData_SetL{comPtr_CompileStatusString,d0}  ; set pointer of status string for gui tomsmart1 2012 05 12
000222E2 <AmiBlitz3.ab3@3563>   GetD0 &calcpro      : !ComData_SetL{comPtr_CompileCalcProLong ,d0}  ; set pointer of calcpro long for gui tomsmart1 2012 05 12
00022300 <AmiBlitz3.ab3@3564>   !asm
00022306 <AmiBlitz3.ab3@3567>   CLR.w stopit
00022308 <AmiBlitz3.ab3@3568> RTS
0002230E <AmiBlitz3.ab3@3575>   CLR.w storedebugmode
00022314 <AmiBlitz3.ab3@3576>   CLR.b iserror
00022318 <AmiBlitz3.ab3@3578>   BSR.w compilerequester
00022322 <AmiBlitz3.ab3@3580>   MOVE.l #0,globallinecount
00022328 <AmiBlitz3.ab3@3581>   JSR check_of_same_source
0002232C <AmiBlitz3.ab3@3584>   BSR.w call_setpointerbusy
00022330 <AmiBlitz3.ab3@3586>   BSR.w setcvars
00022338 <AmiBlitz3.ab3@3588>   MOVE.w #$8000,globalvarpointer
00022342 <AmiBlitz3.ab3@3589>   MOVE.l #newtype_quick,defaulttype
00022348 <AmiBlitz3.ab3@3591>   MOVE.l A7,passstack
00022352 <AmiBlitz3.ab3@3592>   MOVE.l #firstitem_,sourceline
0002235C <AmiBlitz3.ab3@3593>   MOVE.w numlines_org,linesleft
00022366 <AmiBlitz3.ab3@3595>   MOVE.l numlines,numlines2
0002236C <AmiBlitz3.ab3@3597>   ADDQ.w #1,linesleft
00022372 <AmiBlitz3.ab3@3598>   ADDQ.l #1,numlines2
0002237C <AmiBlitz3.ab3@3599>   MOVE.l #-1,linenumat
00022380 <AmiBlitz3.ab3@3601>   BSR.w resetlibs
00022384 <AmiBlitz3.ab3@3602>   BSR.w Aclearallvars
0002238A <AmiBlitz3.ab3@3604>   LEA progress_per_line+2,A0
0002238C <AmiBlitz3.ab3@3605>   MOVEQ.l #$03,D0
0002238E <AmiBlitz3.ab3@3608>     CLR.w (A0)+
00022392 <AmiBlitz3.ab3@3609>   DBF D0,'okloop
00022398 <AmiBlitz3.ab3@3613>   LEA _include,a0
0002239C <AmiBlitz3.ab3@3614>   MOVEM.l a0-a6/d0-d7,-(a7)
000223A2 <AmiBlitz3.ab3@3615>   LEA ptr_parameterstore,a1
000223A4 <AmiBlitz3.ab3@3618>     MOVE.b (a0)+,(a1)+
000223A8 <AmiBlitz3.ab3@3619>   BNE 'l1b
000223AA <AmiBlitz3.ab3@3621>   MOVEQ #9,d2
000223B0 <AmiBlitz3.ab3@3622>   JSR findlabel2
000223B4 <AmiBlitz3.ab3@3623>   BNE 'd
000223BC <AmiBlitz3.ab3@3624>   MOVE.l #0,8(a2)
000223C0 <AmiBlitz3.ab3@3625>   MOVEM.l (a7)+,a0-a6/d0-d7
000223C4 <AmiBlitz3.ab3@3626>  BRA 'd2
000223CA <AmiBlitz3.ab3@3629>   JSR addlabelhash
000223D2 <AmiBlitz3.ab3@3630>   MOVE.l #$1,$4(A2)
000223DA <AmiBlitz3.ab3@3631>   MOVE.l #0,8(a2)
000223DE <AmiBlitz3.ab3@3632>   MOVEM.l (a7)+,a0-a6/d0-d7
000223E4 <AmiBlitz3.ab3@3635>   LEA _debug,a0
000223E8 <AmiBlitz3.ab3@3636>   MOVEM.l a0-a6/d0-d7,-(a7)
000223EE <AmiBlitz3.ab3@3637>   LEA ptr_parameterstore,a1
000223F0 <AmiBlitz3.ab3@3640>     MOVE.b (a0)+,(a1)+
000223F4 <AmiBlitz3.ab3@3641>   BNE 'l9b
000223F6 <AmiBlitz3.ab3@3643>   MOVEQ #7,d2
000223FC <AmiBlitz3.ab3@3644>   JSR findlabel2
00022400 <AmiBlitz3.ab3@3645>   BNE 'd9
00022404 <AmiBlitz3.ab3@3646>   MOVE.b debugmode(PC),D0
00022406 <AmiBlitz3.ab3@3647>   EXT.w d0
00022408 <AmiBlitz3.ab3@3648>   EXT.l d0
0002240C <AmiBlitz3.ab3@3649>   MOVE.l d0,8(a2)
00022410 <AmiBlitz3.ab3@3650>   MOVEM.l (a7)+,a0-a6/d0-d7
00022414 <AmiBlitz3.ab3@3651>  BRA 'd9b
0002241A <AmiBlitz3.ab3@3654>   JSR addlabelhash
00022422 <AmiBlitz3.ab3@3655>   MOVE.l #$1,$4(A2)
00022426 <AmiBlitz3.ab3@3656>   MOVE.b debugmode(PC),D0
00022428 <AmiBlitz3.ab3@3657>   EXT.w d0
0002242A <AmiBlitz3.ab3@3658>   EXT.l d0
0002242E <AmiBlitz3.ab3@3659>   MOVE.l d0,8(a2)
00022432 <AmiBlitz3.ab3@3660>   MOVEM.l (a7)+,a0-a6/d0-d7
00022438 <AmiBlitz3.ab3@3663>   MOVE.l #firstitem_,a0
0002243A <AmiBlitz3.ab3@3664>   MOVE.l (a0),a0
0002243E <AmiBlitz3.ab3@3665>   LEA 9(a0),a0
00022446 <AmiBlitz3.ab3@3666>   MOVE.w #0,exdebug
0002244C <AmiBlitz3.ab3@3667>   TST.b debugmode
00022450 <AmiBlitz3.ab3@3668>    BEQ 'l10
00022452 <AmiBlitz3.ab3@3671>   MOVE.b (a0)+,d0
00022456 <AmiBlitz3.ab3@3672>    BEQ 'l10
0002245A <AmiBlitz3.ab3@3673>   CMP.b #$20,d0
0002245E <AmiBlitz3.ab3@3674>    BEQ 'l2
00022460 <AmiBlitz3.ab3@3675>   SUBQ.l #1,a0
00022466 <AmiBlitz3.ab3@3676>   CMP.l #"DEBU",(a0)
0002246A <AmiBlitz3.ab3@3677>    BNE 'l10
00022470 <AmiBlitz3.ab3@3678>   CMP.b #"G",4(a0)
00022474 <AmiBlitz3.ab3@3679>    BNE 'l10
0002247C <AmiBlitz3.ab3@3680>   MOVE.w #$0,debugversion
00022484 <AmiBlitz3.ab3@3681>   MOVE.b #1,exdebug
0002248A <AmiBlitz3.ab3@3688>   LEA nops4,A0
00022490 <AmiBlitz3.ab3@3689>   LEA nopsf,A1
00022496 <AmiBlitz3.ab3@3690>   JSR pokecode2                                            ;write intro nops
0002249C <AmiBlitz3.ab3@3692>   MOVE.l #$01010101,d1
000224A2 <AmiBlitz3.ab3@3693>   JSR writedatalong                                        ;for the 4 tempregs
000224A8 <AmiBlitz3.ab3@3694>   JSR writedatalong
000224AE <AmiBlitz3.ab3@3695>   JSR writedatalong
000224B4 <AmiBlitz3.ab3@3696>   JSR writedatalong
000224BA <AmiBlitz3.ab3@3697>   TST.b saved0
000224BE <AmiBlitz3.ab3@3698>    BEQ 'l1
000224C4 <AmiBlitz3.ab3@3699>   MOVE.l #$4e714e71,d1
000224CA <AmiBlitz3.ab3@3700>   JSR writelong                                            ;add 2 nops
000224D0 <AmiBlitz3.ab3@3701>   MOVE.l #$4e714e71,d1
000224D6 <AmiBlitz3.ab3@3702>   JSR writelong                                            ;add 2 nops
000224DC <AmiBlitz3.ab3@3703>   MOVE.l #$4e714e71,d1
000224E2 <AmiBlitz3.ab3@3704>   JSR writelong                                            ;add 2 nops
000224E8 <AmiBlitz3.ab3@3705>    MOVE.l #$4e714e71,d1
000224EE <AmiBlitz3.ab3@3706>   JSR writelong                                            ;add 2 nops
000224F2 <AmiBlitz3.ab3@3710>   MOVE.b debugmode(PC),D1
000224F6 <AmiBlitz3.ab3@3711>    BEQ.b 'dskip
00022500 <AmiBlitz3.ab3@3712>   MOVE.b debugmode,storedebugmode
00022504 <AmiBlitz3.ab3@3714>   MOVE.w #$FFDC,D1        ;#runerrlib,
00022508 <AmiBlitz3.ab3@3715>    BSR.w uselib
0002250E <AmiBlitz3.ab3@3717>   TST.w debugversion                                       ;make a version for debugger
00022512 <AmiBlitz3.ab3@3718>    BNE.b 'exec
00022516 <AmiBlitz3.ab3@3722>   MOVE.w #$FA3C,D1        ;#debuglib,
0002251A <AmiBlitz3.ab3@3723>    BSR.w uselib
0002251E <AmiBlitz3.ab3@3724>   MOVE.w #$0001,D1        ;#dhandlerlib,
00022522 <AmiBlitz3.ab3@3725>    BSR.w uselib
00022526 <AmiBlitz3.ab3@3726>  BRA.b 'dskip
0002252A <AmiBlitz3.ab3@3731>   MOVE.w #$FA32,D1        ;#rundebuglib,
0002252E <AmiBlitz3.ab3@3732>   BSR.w uselib
00022532 <AmiBlitz3.ab3@3735>   BSR.w nextline
00022538 <AmiBlitz3.ab3@3737>   CLR.l linenum
0002253E <AmiBlitz3.ab3@3738>   CLR.l stacktrack
00022544 <AmiBlitz3.ab3@3744>   ADDQ.l #1,linenum
0002254E <AmiBlitz3.ab3@3745>   MOVE.l destpointer,destpointer2
00022554 <AmiBlitz3.ab3@3746>   MOVE.l a5,sourceline2
00022558 <AmiBlitz3.ab3@3748>   BSR.w compile_line                                        ;compile pass
0002255C <AmiBlitz3.ab3@3752>   BSR.w nextline
00022560 <AmiBlitz3.ab3@3753>    BNE.w passloop
00022564 <AmiBlitz3.ab3@3754>   BSR.w JUMP_do_runerrson
00022568 <AmiBlitz3.ab3@3755>   BSR.w pointchk
0002256E <AmiBlitz3.ab3@3757>   TST.b objectcount
00022572 <AmiBlitz3.ab3@3758>    BNE macenderr
00022578 <AmiBlitz3.ab3@3760>   CLR.l linenumat
0002257C <AmiBlitz3.ab3@3761>   BSR.w errchx2
00022586 <AmiBlitz3.ab3@3763>   CMP.l #-1,bssend
0002258A <AmiBlitz3.ab3@3764>    BNE 'l30
00022594 <AmiBlitz3.ab3@3765>   MOVE.l destpointer,bssend                                ;compile end
0002259A <AmiBlitz3.ab3@3768>   MOVE.l destpointer,d0
000225A4 <AmiBlitz3.ab3@3769>   CMP.l #-1,bssstart
000225A8 <AmiBlitz3.ab3@3770>   BNE 'lnf6
000225B2 <AmiBlitz3.ab3@3771>   CMP.l #-1,chipstart
000225B6 <AmiBlitz3.ab3@3772>   BNE 'lnf6
000225BA <AmiBlitz3.ab3@3773>  BRA 'leven4
000225C0 <AmiBlitz3.ab3@3776>   MOVE.l destpointer,d1
000225C2 <AmiBlitz3.ab3@3777>   ADDQ.l #3,d1
000225C8 <AmiBlitz3.ab3@3778>   AND.l #$fffffffc,d1                                      ;bug ?
000225CE <AmiBlitz3.ab3@3779>   MOVE.l d1,destpointer
000225D8 <AmiBlitz3.ab3@3782>   MOVE.l destpointer,codeend
000225E2 <AmiBlitz3.ab3@3783>   CMP.l #-1,chipend
000225E6 <AmiBlitz3.ab3@3784>   BNE 'l31
000225F0 <AmiBlitz3.ab3@3785>   MOVE.l destpointer,chipend
000225F6 <AmiBlitz3.ab3@3788>   MOVE.l destpointer,d1
000225F8 <AmiBlitz3.ab3@3789>   ADDQ.l #1,d1
000225FE <AmiBlitz3.ab3@3790>   AND.l #$fffffffe,d1                                     ;new evenexit
00022604 <AmiBlitz3.ab3@3791>   MOVE.l d1,destpointer
00022608 <AmiBlitz3.ab3@3794>   MOVE.b debugmode(PC),D1
0002260C <AmiBlitz3.ab3@3795>    BEQ.b 'nodb
00022610 <AmiBlitz3.ab3@3797>    BSR.w debugstuff
00022614 <AmiBlitz3.ab3@3798>   MOVE.w #$C300,D1        ;#finalscheck,
0002261A <AmiBlitz3.ab3@3799>    JSR Atokejsr
0002261E <AmiBlitz3.ab3@3801>    BSR.w debugstuff
00022622 <AmiBlitz3.ab3@3802>   MOVE.l eopcode(PC),D1
00022628 <AmiBlitz3.ab3@3803>    JSR writelong
0002262C <AmiBlitz3.ab3@3804>   MOVE.l lastcontlink(PC),D1
00022630 <AmiBlitz3.ab3@3805>    BEQ.b 'nocl
00022632 <AmiBlitz3.ab3@3806>   MOVEA.l D1,A0
00022636 <AmiBlitz3.ab3@3807>   CLR.w $6(A0)
00022640 <AmiBlitz3.ab3@3814>   MOVE.l destpointer,endop                                ;where end goes...
00022646 <AmiBlitz3.ab3@3816>   TST.w blitzmode
0002264A <AmiBlitz3.ab3@3817>   BEQ.w 'nobl
0002264E <AmiBlitz3.ab3@3818>   BSR.w do_AMIGA                                          ;back to amiga if in blitz!
00022654 <AmiBlitz3.ab3@3821>   TST.w intsused
00022658 <AmiBlitz3.ab3@3822>   BEQ.b 'noints
0002265C <AmiBlitz3.ab3@3823>   MOVE.w #$C105,D1                                        ;interupts off!
00022662 <AmiBlitz3.ab3@3824>   JSR tokejsr2
00022666 <AmiBlitz3.ab3@3827>   BSR.w calcstatic
0002266C <AmiBlitz3.ab3@3828>   MOVE.w D4,numstatic
00022672 <AmiBlitz3.ab3@3829>   MOVE.l D3,staticdata
00022676 <AmiBlitz3.ab3@3830>    BSR.w calcmaxs
0002267C <AmiBlitz3.ab3@3832>   TST.l tokeslist
00022680 <AmiBlitz3.ab3@3833>    BEQ.b 'skipjsrs
00022686 <AmiBlitz3.ab3@3835>   MOVE.w gotocode,D1                                       ;jmp!
0002268C <AmiBlitz3.ab3@3836>    JSR writeword
00022696 <AmiBlitz3.ab3@3837>   MOVE.l destpointer,endjmpat
0002269A <AmiBlitz3.ab3@3838>    BSR.w addoff
000226A0 <AmiBlitz3.ab3@3839>    JSR writelong                                           
000226A4 <AmiBlitz3.ab3@3841>    BSR.w fixjsrs                                         ;has to be done before finits!
000226AA <AmiBlitz3.ab3@3845>   TST.w dontwrite_nomemleft
000226AE <AmiBlitz3.ab3@3846>    BNE.b 'skipjsrs
000226B2 <AmiBlitz3.ab3@3847>   MOVEA.l endjmpat(PC),A4
000226B8 <AmiBlitz3.ab3@3848>   MOVE.l destpointer,(A4)
000226BE <AmiBlitz3.ab3@3852>   TST.b returncode
000226C2 <AmiBlitz3.ab3@3853>   BEQ 'l2
000226C6 <AmiBlitz3.ab3@3854>   MOVE.w #$2e80,d1
000226CC <AmiBlitz3.ab3@3855>   JSR writeword
000226D2 <AmiBlitz3.ab3@3859>   JSR makefinits
000226D8 <AmiBlitz3.ab3@3861>   TST.b returncode
000226DC <AmiBlitz3.ab3@3862>   BEQ 'l3
000226E0 <AmiBlitz3.ab3@3863>   MOVE.w #$4e75,d1
000226E6 <AmiBlitz3.ab3@3864>   JSR writeword
000226EA <AmiBlitz3.ab3@3865>  BRA 'l1
000226F0 <AmiBlitz3.ab3@3869>   MOVE.l #$70004E75,D1
000226F6 <AmiBlitz3.ab3@3870>   JSR writelong                                            ;write moveq #0,d0:rts
000226FC <AmiBlitz3.ab3@3873>   JSR makeinits
00022700 <AmiBlitz3.ab3@3874>   BSR.w asmfixer
00022704 <AmiBlitz3.ab3@3876>   BSR.w close_compilewin
00022708 <AmiBlitz3.ab3@3877> BRA.w call_setpointernormal
0002270E <AmiBlitz3.ab3@3880> JUMP_do_runerrson JMP do_runerrson
00022710 <AmiBlitz3.ab3@3884> eopcode:    Dc.b $70,$03                                   ;MOVEQ #$03,D0
00022712 <AmiBlitz3.ab3@3885>             Dc.b $4E,$40                                   ;TRAP  #00
00022716 <AmiBlitz3.ab3@3887> endjmpat:   Ds.l 1
0002271C <AmiBlitz3.ab3@3891>   MOVEA.l newtype_string,A2
00022722 <AmiBlitz3.ab3@3892>   MOVE.l #MaxByte,D0                                       ;move.l #$ff,d0 org source
00022726 <AmiBlitz3.ab3@3895>     CMPA.w #$0,A2
0002272A <AmiBlitz3.ab3@3896>      BEQ.w 'done
0002272E <AmiBlitz3.ab3@3897>     CMP.l $4(A2),D0
00022732 <AmiBlitz3.ab3@3898>      BNE.w 'next
0002273A <AmiBlitz3.ab3@3899>     MOVE.w $8(A2),linenumat+2                              ;type not found  ;move 8(a2),linenumat org source
0002273E <AmiBlitz3.ab3@3900>  BRA.w notypeerr
00022740 <AmiBlitz3.ab3@3903>     MOVEA.l (A2),A2
00022744 <AmiBlitz3.ab3@3904>  BRA.w 'loop
00022746 <AmiBlitz3.ab3@3907> RTS
0002274C <AmiBlitz3.ab3@3911>   LEA labelbase,A2
0002274E <AmiBlitz3.ab3@3915>   MOVE.l (A2),D0                                           ;testlabels
00022752 <AmiBlitz3.ab3@3916>    BEQ.w 'done
00022754 <AmiBlitz3.ab3@3917>   MOVEA.l D0,A2
00022758 <AmiBlitz3.ab3@3918>   MOVE.l $4(A2),D0
0002275C <AmiBlitz3.ab3@3919>   BTST #$0,D0
00022760 <AmiBlitz3.ab3@3920>    BNE.w 'loop
00022764 <AmiBlitz3.ab3@3921>   MOVE.l $8(A2),D0
00022768 <AmiBlitz3.ab3@3922>    BNE.w 'loop
00022770 <AmiBlitz3.ab3@3923>   MOVE.w $10(A2),linenumat+2
00022772 <AmiBlitz3.ab3@3924>   MOVEQ #0,d0
00022776 <AmiBlitz3.ab3@3925>   MOVE.b $12(a2),d0
0002277E <AmiBlitz3.ab3@3926>   MOVE.w 0(a2,d0),linenumat
00022784 <AmiBlitz3.ab3@3927>  JMP nolaberr                                               ;label not found
0002278A <AmiBlitz3.ab3@3930>   MOVE.l concomsp,D0
00022790 <AmiBlitz3.ab3@3931>   CMP.l #concomstack,D0
00022794 <AmiBlitz3.ab3@3932>    BNE.w chxerr4
0002279A <AmiBlitz3.ab3@3933>   MOVE.w connest,D1
0002279E <AmiBlitz3.ab3@3934>    BNE.w chxerr4
000227A0 <AmiBlitz3.ab3@3938>   MOVE.l D1,-(A7)
000227A6 <AmiBlitz3.ab3@3939>   MOVE.l firstsel,D1
000227AA <AmiBlitz3.ab3@3940>    BNE.w 'err1
000227B0 <AmiBlitz3.ab3@3941>   MOVE.l firstrep,D1
000227B4 <AmiBlitz3.ab3@3942>    BNE.w 'err2
000227BA <AmiBlitz3.ab3@3943>   MOVE.w intstring,D1
000227BE <AmiBlitz3.ab3@3944>    BNE.w 'err3
000227C2 <AmiBlitz3.ab3@3945>   MOVE.l 4(a7),d1
000227C8 <AmiBlitz3.ab3@3946>   MOVE.w proceduremode,D1
000227CC <AmiBlitz3.ab3@3947>    BNE.w 'err6
000227D2 <AmiBlitz3.ab3@3948>   MOVE.l firstiff,d1
000227D6 <AmiBlitz3.ab3@3949>    BNE 'err5
000227DC <AmiBlitz3.ab3@3950>   MOVE.l firstfor,D1
000227E0 <AmiBlitz3.ab3@3951>    BNE.w 'err7
000227E2 <AmiBlitz3.ab3@3952>   MOVE.l (A7)+,D1
000227E4 <AmiBlitz3.ab3@3953>  RTS
000227EE <AmiBlitz3.ab3@3956>   MOVE.l sellineat,linenumat
000227F4 <AmiBlitz3.ab3@3957>  JMP selerrz
000227FE <AmiBlitz3.ab3@3960>   MOVE.l replineat,linenumat
00022804 <AmiBlitz3.ab3@3961>  JMP unterr3
0002280E <AmiBlitz3.ab3@3964>   MOVE.l intlineat,linenumat
00022814 <AmiBlitz3.ab3@3965>  JMP interr2
0002281E <AmiBlitz3.ab3@3968>   MOVE.l iflineat,linenumat
00022824 <AmiBlitz3.ab3@3969>  JMP noenderr
0002282E <AmiBlitz3.ab3@3972>   MOVE.l prolineat,linenumat
00022834 <AmiBlitz3.ab3@3973>  JMP nopenderr
0002283E <AmiBlitz3.ab3@3976>   MOVE.l forlineat,linenumat
00022844 <AmiBlitz3.ab3@3977> JMP nonexterr
0002284E <AmiBlitz3.ab3@3981>   MOVE.l ciflineat,linenumat
00022854 <AmiBlitz3.ab3@3982> JMP nocenderr
0002285E <AmiBlitz3.ab3@3986>   MOVE.l data1,maxsat
00022860 <AmiBlitz3.ab3@3987>   MOVEQ.l #$00,D4
00022866 <AmiBlitz3.ab3@3988>   MOVEA.l libpointer,A2
0002286A <AmiBlitz3.ab3@3991>     CMPA.w #$0,A2
0002286E <AmiBlitz3.ab3@3992>      BEQ.w 'done
00022872 <AmiBlitz3.ab3@3993>     TST.w $C(A2)
00022876 <AmiBlitz3.ab3@3994>      BPL.w 'next
0002287A <AmiBlitz3.ab3@3995>     MOVE.l $12(A2),D0
0002287E <AmiBlitz3.ab3@3996>     TST.w -$2(A2,D0.L)
00022882 <AmiBlitz3.ab3@3997>      BEQ.w 'next
00022884 <AmiBlitz3.ab3@3999>     ADDQ.w #1,D4
00022888 <AmiBlitz3.ab3@4000>     MOVE.w -$6(A2,D0.L),D1
0002288C <AmiBlitz3.ab3@4001>     BSR.w pokedata1
0002288E <AmiBlitz3.ab3@4002>     MOVEQ.l #$01,D1
00022892 <AmiBlitz3.ab3@4003>     MOVE.w -$2(A2,D0.L),D2
00022894 <AmiBlitz3.ab3@4004>     LSL.w D2,D1
00022898 <AmiBlitz3.ab3@4005>     MULU -$4(A2,D0.L),D1                                   ;write objectspacesize
0002289C <AmiBlitz3.ab3@4006>     BSR.w writedatalong
0002289E <AmiBlitz3.ab3@4009>     MOVEA.l (A2),A2
000228A2 <AmiBlitz3.ab3@4010>  BRA.w 'loop
000228A8 <AmiBlitz3.ab3@4013>   MOVE.w D4,maxsused
000228AC <AmiBlitz3.ab3@4014>    BEQ.w 'done2
000228B0 <AmiBlitz3.ab3@4015>   MOVE.w #$FFFA,D1       ;was #65530    ;use memlib                                  ;;use memlib
000228B4 <AmiBlitz3.ab3@4016> BRA.w uselib
000228B6 <AmiBlitz3.ab3@4019> RTS
000228BC <AmiBlitz3.ab3@4025>    MOVE.l a7,stackaddr
000228C0 <AmiBlitz3.ab3@4027>    BSR.w compile_term
000228C4 <AmiBlitz3.ab3@4028>    BSR.w reget
000228C8 <AmiBlitz3.ab3@4029>    BNE.w illeolerr
000228CE <AmiBlitz3.ab3@4031>    TST.w dontwrite_nomemleft
000228D2 <AmiBlitz3.ab3@4032>    BNE 'l1
000228D8 <AmiBlitz3.ab3@4033>    TST.l stacktrack
000228DC <AmiBlitz3.ab3@4034>    BNE errormsg_stack
000228E0 <AmiBlitz3.ab3@4038>    CMP.w #-$7FDE,D0            ; was #$8000+34
000228E4 <AmiBlitz3.ab3@4039>    BNE.w 'notelse
000228EA <AmiBlitz3.ab3@4040>    JSR do_else2
000228EE <AmiBlitz3.ab3@4041>  BRA.w compile_line
000228F0 <AmiBlitz3.ab3@4044>   TST.w D0
000228F4 <AmiBlitz3.ab3@4045>   BNE.w compile_line
000228FA <AmiBlitz3.ab3@4051>   MOVE.l firstiff,D0
000228FE <AmiBlitz3.ab3@4052>    BEQ.w 'done
00022900 <AmiBlitz3.ab3@4053>   MOVEA.l D0,A0
00022904 <AmiBlitz3.ab3@4054>   MOVE.w $C(A0),D1
00022908 <AmiBlitz3.ab3@4055>    BPL.w 'done
0002290C <AmiBlitz3.ab3@4059>   BCLR #$F,D1
00022912 <AmiBlitz3.ab3@4060>    JSR doendif2
00022918 <AmiBlitz3.ab3@4061>    JSR freetheifz
0002291C <AmiBlitz3.ab3@4062> BRA.w 'unthen
0002291E <AmiBlitz3.ab3@4065> RTS
00022924 <AmiBlitz3.ab3@4069>   LEA lastgloballabel,A0
00022926 <AmiBlitz3.ab3@4070>   TST.b (A0)
0002292A <AmiBlitz3.ab3@4071>   BEQ.w nolocerr
00022930 <AmiBlitz3.ab3@4072>   LEA ptr_parameterstore,A1
00022932 <AmiBlitz3.ab3@4073>   MOVEQ.l #$00,D2
00022934 <AmiBlitz3.ab3@4076>   ADDQ.w #1,D2
00022936 <AmiBlitz3.ab3@4077>   MOVE.b (A0)+,(A1)+
0002293A <AmiBlitz3.ab3@4078>    BNE.w 'loop
00022940 <AmiBlitz3.ab3@4079>   MOVE.b #$27,-$1(A1)
00022942 <AmiBlitz3.ab3@4080>   MOVE.w D2,-(A7)
00022948 <AmiBlitz3.ab3@4081>    JSR makename4
0002294A <AmiBlitz3.ab3@4082>   CMP.w (A7)+,D2
0002294E <AmiBlitz3.ab3@4083>    BEQ.w syntaxerr
00022950 <AmiBlitz3.ab3@4084>    TST.w d0
00022954 <AmiBlitz3.ab3@4085>    BPL 'done
0002295C <AmiBlitz3.ab3@4086>    MOVE.w #$3a,lastchar
0002295E <AmiBlitz3.ab3@4087>    SUBQ.l #2,a5
00022960 <AmiBlitz3.ab3@4090> RTS
0002296A <AmiBlitz3.ab3@4094>   MOVE.l #forthstack,forthsp
00022974 <AmiBlitz3.ab3@4095>   MOVE.l #precstack,precsp
00022976 <AmiBlitz3.ab3@4096> RTS
00022978 <AmiBlitz3.ab3@4103>   MOVEQ.l #$00,D4
000229A2 <AmiBlitz3.ab3@4106>   !basic
000229EA <AmiBlitz3.ab3@4107> 
000229FA <AmiBlitz3.ab3@4109>   If (c_abort = 1)           ; check if set
000229FC <AmiBlitz3.ab3@4110>     MOVEQ.l #-$01,d4
00022A02 <AmiBlitz3.ab3@4111>     MOVE.w D4,stopit
00022A20 <AmiBlitz3.ab3@4112>     !asm
00022A24 <AmiBlitz3.ab3@4113>     BRA 'skip
00022A42 <AmiBlitz3.ab3@4115>   !asm
00022A44 <AmiBlitz3.ab3@4116>   MOVEQ.l #$00,D6
00022A46 <AmiBlitz3.ab3@4117>   MOVEQ.l #$00,D7                                          ; clr Z-Flag for beq.b in chkstop_chk
00022A48 <AmiBlitz3.ab3@4121> RTS
00022A4C <AmiBlitz3.ab3@4125>   MOVE.w stopit(PC),D0
00022A50 <AmiBlitz3.ab3@4126>   BEQ 'chk
00022A56 <AmiBlitz3.ab3@4128>   SUBQ.w #1,stopit
00022A58 <AmiBlitz3.ab3@4133>  RTS
00022A60 <AmiBlitz3.ab3@4137>   MOVE.w #2000,stopit
00022A64 <AmiBlitz3.ab3@4139>   BSR.w chkrealstop
00022A68 <AmiBlitz3.ab3@4140>   BEQ.b 'rts
00022A6C <AmiBlitz3.ab3@4143>   BSR.w close_compilewin
00022A70 <AmiBlitz3.ab3@4144>   BSR.w call_setpointernormal
00022A76 <AmiBlitz3.ab3@4146>   MOVEA.l errstack,A7
00022A7C <AmiBlitz3.ab3@4147>   MOVEA.l errcont,A0
00022A84 <AmiBlitz3.ab3@4148>   MOVE.w #-1,anyerrs
00022A86 <AmiBlitz3.ab3@4149> JMP (A0)
00022A8A <AmiBlitz3.ab3@4152> d_pc:           Ds.l 1
00022A8E <AmiBlitz3.ab3@4153> d_bigpc:        Ds.l 1
00022A90 <AmiBlitz3.ab3@4154> d_nomemleft:    Ds.w 1
00022A94 <AmiBlitz3.ab3@4155> cont_pc:        Ds.l 1
00022A98 <AmiBlitz3.ab3@4156> cont_pc2:       Ds.l 1
00022A9C <AmiBlitz3.ab3@4157> lastcontlink:   Ds.l 1
00022AA0 <AmiBlitz3.ab3@4161>   ORI.w #$4E40,D1
00022AA4 <AmiBlitz3.ab3@4162> BRA.w JUMP_writeword
00022AAA <AmiBlitz3.ab3@4166>   TST.b debugmode
00022AAE <AmiBlitz3.ab3@4167>   BEQ.w debugstuffa_rts
00022AB4 <AmiBlitz3.ab3@4178>   TST.w dirmode                                            ;or while in direct mode...
00022AB8 <AmiBlitz3.ab3@4179>    BNE debugstuffa_rts
00022AC2 <AmiBlitz3.ab3@4181>   MOVE.l destpointer,d_pc
00022ACC <AmiBlitz3.ab3@4182>   MOVE.l bigpc,d_bigpc
00022AD6 <AmiBlitz3.ab3@4183>   MOVE.w dontwrite_nomemleft,d_nomemleft
00022ADA <AmiBlitz3.ab3@4185>   MOVEM.l D0-D1,-(A7)
00022ADC <AmiBlitz3.ab3@4187>   MOVEQ.l #$01,D1
00022AE0 <AmiBlitz3.ab3@4188>    BSR.w writetrap                                         ;write the adress to sourceline
00022AE6 <AmiBlitz3.ab3@4192>    MOVE.l destpointer,D0
00022AEC <AmiBlitz3.ab3@4193>   MOVE.l cont_pc,D1
00022AF2 <AmiBlitz3.ab3@4194>   MOVE.l D0,cont_pc
00022AF8 <AmiBlitz3.ab3@4195>   MOVE.l D1,cont_pc2
00022AFC <AmiBlitz3.ab3@4196>    BEQ.b 'skip
00022B02 <AmiBlitz3.ab3@4198>   TST.w dontwrite_nomemleft
00022B06 <AmiBlitz3.ab3@4199>    BNE.b 'skip
00022B08 <AmiBlitz3.ab3@4201>   MOVEA.l D1,A4
00022B0A <AmiBlitz3.ab3@4202>   SUB.l A4,D0
00022B0E <AmiBlitz3.ab3@4203>   MOVE.w D0,$6(A4)
00022B14 <AmiBlitz3.ab3@4204>   MOVE.l A4,lastcontlink
00022B1A <AmiBlitz3.ab3@4208>   TST.w ininclude
00022B20 <AmiBlitz3.ab3@4210>   TST.w makeexec
00022B24 <AmiBlitz3.ab3@4211>   BEQ 'l1
00022B2A <AmiBlitz3.ab3@4212>   TST.w exdebug
00022B2E <AmiBlitz3.ab3@4213>   BEQ 'noinc
00022B32 <AmiBlitz3.ab3@4216>   MOVEM.l a0-a1/d2/d3,-(a7)                                ;write source for includes
00022B38 <AmiBlitz3.ab3@4217>   MOVE.l data1,d1
00022B3E <AmiBlitz3.ab3@4218>   TST.b firsttime
00022B42 <AmiBlitz3.ab3@4219>   BNE 'nofirst
00022B4A <AmiBlitz3.ab3@4220>   MOVE.b #1,firsttime
00022B50 <AmiBlitz3.ab3@4221>   MOVE.l #"DuCk",d1                                        ; to found from debugger the code start
00022B56 <AmiBlitz3.ab3@4222>   JSR writedatalong
00022B5C <AmiBlitz3.ab3@4223>   MOVE.l #"AmiB",d1
00022B62 <AmiBlitz3.ab3@4224>   JSR writedatalong
00022B68 <AmiBlitz3.ab3@4225>   MOVE.l destbufferstart,d1
00022B6E <AmiBlitz3.ab3@4226>   JSR writedatalong
00022B74 <AmiBlitz3.ab3@4227>   TST.w dontwrite_nomemleft
00022B78 <AmiBlitz3.ab3@4228>   BNE 'nohunk
00022B7E <AmiBlitz3.ab3@4229>   MOVE.l data1,d1
00022B80 <AmiBlitz3.ab3@4230>   SUBQ.l #4,d1
00022B86 <AmiBlitz3.ab3@4231>   SUB.l destbufferstart,d1
00022B88 <AmiBlitz3.ab3@4232>   MOVE.l d1,d2
00022B8E <AmiBlitz3.ab3@4233>   JSR addhunkoffset
00022B94 <AmiBlitz3.ab3@4236>   MOVE.l destpointer,d2
00022B9A <AmiBlitz3.ab3@4237>   MOVE.l data1,d1
00022BA0 <AmiBlitz3.ab3@4240>   MOVE.l destpointer,d2
00022BA2 <AmiBlitz3.ab3@4241>   MOVE.l d1,d3
00022BA8 <AmiBlitz3.ab3@4242>   SUB.l destbufferstart,d1
00022BAE <AmiBlitz3.ab3@4243>   OR.l #$80000000,d1
00022BB4 <AmiBlitz3.ab3@4244>   JSR writelong
00022BBA <AmiBlitz3.ab3@4245>   TST.w inmacro
00022BBE <AmiBlitz3.ab3@4246>   BEQ 'sc1
00022BC4 <AmiBlitz3.ab3@4247>   MOVE.l myline,a0
00022BC8 <AmiBlitz3.ab3@4249>  BRA 'inc2
00022BCE <AmiBlitz3.ab3@4252>   TST.w ininclude
00022BD2 <AmiBlitz3.ab3@4253>   BEQ 'inc
00022BD8 <AmiBlitz3.ab3@4254>   MOVE.l includesourceline,a0
00022BDC <AmiBlitz3.ab3@4255>  BRA 'inc2
00022BE2 <AmiBlitz3.ab3@4258>   MOVE.l sourceline,a0
00022BE6 <AmiBlitz3.ab3@4259>   LEA 9(a0),a0
00022BE8 <AmiBlitz3.ab3@4262>   MOVE.l d1,d2
00022BEA <AmiBlitz3.ab3@4263>   MOVE.l A5,D1
00022BEC <AmiBlitz3.ab3@4264>   SUB.l a0,D1
00022BF2 <AmiBlitz3.ab3@4265>   ADD.l #9,d1
00022BF6 <AmiBlitz3.ab3@4266>   BSR.w JUMP_writeword
00022BFC <AmiBlitz3.ab3@4267>   CMP.l #9,d1
00022C00 <AmiBlitz3.ab3@4268>   BEQ 'pos1
00022C06 <AmiBlitz3.ab3@4269>   TST.w dontwrite_nomemleft
00022C0A <AmiBlitz3.ab3@4270>   BNE 'nopad
00022C10 <AmiBlitz3.ab3@4271>   MOVE.l lastsourceline,d1
00022C14 <AmiBlitz3.ab3@4272>   MOVE.l d1,-6(a4)
00022C18 <AmiBlitz3.ab3@4273>  BRA 'nopad
00022C1E <AmiBlitz3.ab3@4276>   MOVE.l d2,lastsourceline
00022C28 <AmiBlitz3.ab3@4277>    MOVE.l destpointer,lastdestpointer
00022C2A <AmiBlitz3.ab3@4278>    MOVEQ #0,d1
00022C30 <AmiBlitz3.ab3@4279>   MOVE.l data1,d2
00022C36 <AmiBlitz3.ab3@4280>   SUB.l destbufferstart,d2
00022C3C <AmiBlitz3.ab3@4281>   JSR writedatalong
00022C42 <AmiBlitz3.ab3@4282>   TST.w dontwrite_nomemleft
00022C46 <AmiBlitz3.ab3@4283>   BNE 'no2
00022C4C <AmiBlitz3.ab3@4284>   JSR addhunkoffset
00022C52 <AmiBlitz3.ab3@4287>   MOVE.l data1,d2
00022C58 <AmiBlitz3.ab3@4288>   SUB.l destbufferstart,d2
00022C5E <AmiBlitz3.ab3@4289>   JSR writedatalong
00022C64 <AmiBlitz3.ab3@4290>   TST.w dontwrite_nomemleft
00022C68 <AmiBlitz3.ab3@4291>   BNE 'no
00022C6E <AmiBlitz3.ab3@4292>   JSR addhunkoffset
00022C74 <AmiBlitz3.ab3@4293>   MOVE.l lastwritedat,a1
00022C7A <AmiBlitz3.ab3@4294>   CMP.l #0,a1
00022C7E <AmiBlitz3.ab3@4295>   BEQ 'no
00022C80 <AmiBlitz3.ab3@4296>   MOVE.l d3,(a1)
00022C88 <AmiBlitz3.ab3@4297>   MOVE.l prevwritedat,4(a1)
00022C92 <AmiBlitz3.ab3@4298>   MOVE.l lastwritedat,prevwritedat
00022C98 <AmiBlitz3.ab3@4301>   MOVE.l d3,lastwritedat
00022C9A <AmiBlitz3.ab3@4302>   MOVEQ #4,d1
00022C9E <AmiBlitz3.ab3@4303>   BSR pokedata1b
00022CA0 <AmiBlitz3.ab3@4306>   MOVE.b (a0)+,d1
00022CA4 <AmiBlitz3.ab3@4307>   BEQ 'done
00022CA8 <AmiBlitz3.ab3@4308>   BSR pokedata1b
00022CAC <AmiBlitz3.ab3@4309>  BRA 'loop
00022CAE <AmiBlitz3.ab3@4312>   MOVEQ #0,d1
00022CB2 <AmiBlitz3.ab3@4313>   BSR pokedata1b
00022CB8 <AmiBlitz3.ab3@4314>   MOVE.l data1,d1
00022CBC <AmiBlitz3.ab3@4315>   BTST #0,d1
00022CC0 <AmiBlitz3.ab3@4316>   BEQ 'nopad
00022CC2 <AmiBlitz3.ab3@4317>   MOVEQ #0,d1
00022CC6 <AmiBlitz3.ab3@4318>   BSR pokedata1b
00022CCA <AmiBlitz3.ab3@4321>   MOVEM.l (a7)+,a0-a1/d2/d3
00022CCE <AmiBlitz3.ab3@4322>  BRA 'noinc2
00022CD4 <AmiBlitz3.ab3@4326>   MOVE.l sourceline,D1
00022CDA <AmiBlitz3.ab3@4327>   JSR writelong
00022CDC <AmiBlitz3.ab3@4328>   MOVE.l A5,D1
00022CE2 <AmiBlitz3.ab3@4329>   SUB.l sourceline,D1
00022CE8 <AmiBlitz3.ab3@4330>   JSR writeword
00022CEA <AmiBlitz3.ab3@4333>   MOVEQ.l #$00,D1
00022CF0 <AmiBlitz3.ab3@4334>   JSR writeword          ;next cont goes here!                                  ; was: BSR.w writeword
00022CF4 <AmiBlitz3.ab3@4336>   MOVEM.l (A7)+,D0-D1
00022CF6 <AmiBlitz3.ab3@4339> RTS
00022CFC <AmiBlitz3.ab3@4343>   TST.b debugmode                                          ;extern debug
00022D00 <AmiBlitz3.ab3@4344>    BEQ.b 'rts
00022D06 <AmiBlitz3.ab3@4345>   TST.b dirmode
00022D0A <AmiBlitz3.ab3@4346>   BNE 'rts
00022D14 <AmiBlitz3.ab3@4354>   MOVE.w d_nomemleft,dontwrite_nomemleft
00022D1E <AmiBlitz3.ab3@4355>   MOVE.l d_bigpc,bigpc
00022D28 <AmiBlitz3.ab3@4356>   MOVE.l d_pc,destpointer
00022D32 <AmiBlitz3.ab3@4357>   MOVE.l cont_pc2,cont_pc
00022D34 <AmiBlitz3.ab3@4360> RTS
00022D3E <AmiBlitz3.ab3@4365>   MOVE.l #forthstack,forthsp
00022D48 <AmiBlitz3.ab3@4366>   MOVE.l #precstack,precsp
00022D4E <AmiBlitz3.ab3@4367>   CLR.w regnum
00022D54 <AmiBlitz3.ab3@4368>   CLR.w nonew
00022D5A <AmiBlitz3.ab3@4369>   CLR.w sbasegot
00022D64 <AmiBlitz3.ab3@4370>   MOVE.w varcodelen,oldvcodelen
00022D6A <AmiBlitz3.ab3@4371>   CLR.w varcodelen
00022D72 <AmiBlitz3.ab3@4372>   MOVE.w #-1,lasta6
00022D74 <AmiBlitz3.ab3@4373> RTS
00022D7A <AmiBlitz3.ab3@4377>   TST.w linemode
00022D7E <AmiBlitz3.ab3@4378>   BMI.b 'skip
00022D82 <AmiBlitz3.ab3@4379>   BSR.w undodebug
00022D88 <AmiBlitz3.ab3@4380>   MOVE.w linemode,D1
00022D8A <AmiBlitz3.ab3@4381>   ADDQ.w #4,A7
00022D8C <AmiBlitz3.ab3@4382>   LSL.w #2,D1
00022D92 <AmiBlitz3.ab3@4383>   LEA modetable,A0
00022D96 <AmiBlitz3.ab3@4384>   MOVEA.l $0(A0,D1.W),A0
00022D9A <AmiBlitz3.ab3@4385>   BSR.w reget
00022D9C <AmiBlitz3.ab3@4386>  JMP (A0)                                                   ;jumptokenroutine
00022D9E <AmiBlitz3.ab3@4389> RTS
00022DA6 <AmiBlitz3.ab3@4397>   MOVE.w #0,leaa0a0+2
00022DAC <AmiBlitz3.ab3@4398>   CLR.b nowdeclare
00022DB2 <AmiBlitz3.ab3@4399>   CLR.b notypecheck
00022DB8 <AmiBlitz3.ab3@4400>   CLR.l lasttoken
00022DBE <AmiBlitz3.ab3@4401>   CLR.b doimmediate
00022DC4 <AmiBlitz3.ab3@4402>   CLR.w vartype
00022DCA <AmiBlitz3.ab3@4403>   CLR.w regnumfunc
00022DD0 <AmiBlitz3.ab3@4404>   CLR.b optistring
00022DD6 <AmiBlitz3.ab3@4405>   CLR.b iniffcommand
00022DDC <AmiBlitz3.ab3@4406>   CLR.w instringon  ; new
00022DE2 <AmiBlitz3.ab3@4407>   CLR.b funccall
00022DE8 <AmiBlitz3.ab3@4408>   CLR.l currentfunccall
00022DEE <AmiBlitz3.ab3@4409>   CLR.l leftsidetype
00022DF4 <AmiBlitz3.ab3@4410>   CLR.l rightsidetype
00022DFA <AmiBlitz3.ab3@4411>   CLR.w leftsideflagmask
00022E00 <AmiBlitz3.ab3@4412>   CLR.w rightsideflagmask
00022E06 <AmiBlitz3.ab3@4413>   CLR.b peekaddrsize
00022E0C <AmiBlitz3.ab3@4414>   CLR.b blitzparloop
00022E12 <AmiBlitz3.ab3@4415>   CLR.b funcparloop
00022E18 <AmiBlitz3.ab3@4416>   CLR.w parnum           ;7.2014
00022E1E <AmiBlitz3.ab3@4417>   TST.b debugmode
00022E22 <AmiBlitz3.ab3@4418>    BEQ 'fpu
00022E2C <AmiBlitz3.ab3@4424>   MOVE.b fpu,iee
00022E30 <AmiBlitz3.ab3@4425>   MOVE.w stopit(PC),D0
00022E34 <AmiBlitz3.ab3@4426>   BNE 'chkstop_chkb
00022E38 <AmiBlitz3.ab3@4428>   BSR.w chkstop                                          ; message here
00022E3E <AmiBlitz3.ab3@4432>   SUBQ.w #1,stopit
00022E42 <AmiBlitz3.ab3@4436>   BSR.w findmacro                                          ;macro
00022E48 <AmiBlitz3.ab3@4498>   TST.b debugmode
00022E4C <AmiBlitz3.ab3@4499>    BEQ.s 'l10
00022E52 <AmiBlitz3.ab3@4500>   TST.b exdebug
00022E56 <AmiBlitz3.ab3@4501>   BEQ 'l10a
00022E58 <AmiBlitz3.ab3@4502>   MOVE.w (a5),d0
00022E5C <AmiBlitz3.ab3@4503>   CMP.w #$8025,d0
00022E60 <AmiBlitz3.ab3@4504>    BEQ 'l10
00022E64 <AmiBlitz3.ab3@4507>   BSR.w debugstuffa                                         ;insert runtimecode debugcode
00022E68 <AmiBlitz3.ab3@4511>   BSR.w get1bytemain                                       ;gettokenmain
00022E6C <AmiBlitz3.ab3@4512>    BEQ.w undodebug
00022E70 <AmiBlitz3.ab3@4513>   CMP.w #$002b,d0                                            ;check for + cast sign
00022E74 <AmiBlitz3.ab3@4514>     BNE 'lb2
00022E78 <AmiBlitz3.ab3@4515>     BSR.w get1bytemain
00022E80 <AmiBlitz3.ab3@4516>     MOVE.b #1,notypecheck
00022E8A <AmiBlitz3.ab3@4527>   MOVE.l #forthstack,forthsp
00022E94 <AmiBlitz3.ab3@4528>   MOVE.l #precstack,precsp
00022E9A <AmiBlitz3.ab3@4529>   CLR.w regnum
00022EA0 <AmiBlitz3.ab3@4530>   CLR.w nonew
00022EA6 <AmiBlitz3.ab3@4531>   CLR.w sbasegot
00022EB0 <AmiBlitz3.ab3@4532>   MOVE.w varcodelen,oldvcodelen
00022EB6 <AmiBlitz3.ab3@4534>   CLR.w varcodelen
00022EBE <AmiBlitz3.ab3@4535>   MOVE.w #$FFFF,lasta6
00022EC2 <AmiBlitz3.ab3@4538>   BSR.w smode
00022EC4 <AmiBlitz3.ab3@4541>   TST.w D0                 ; was behind cmp ... and befor handleascii in org source
00022EC8 <AmiBlitz3.ab3@4542>   BMI.w get_tokencode      ; "
00022ECC <AmiBlitz3.ab3@4544>   CMP.w #$2E,D0            ;'.'
00022ED0 <AmiBlitz3.ab3@4545>    BEQ.w handlemouse                                         ;shortlist
00022ED4 <AmiBlitz3.ab3@4546>   CMP.w #"#",D0
00022ED8 <AmiBlitz3.ab3@4547>    BEQ.w handleconst                                         ;constant found
00022EDC <AmiBlitz3.ab3@4548>   CMP.w #$27,D0            ;'''  ; was #loclabch
00022EE0 <AmiBlitz3.ab3@4549>    BEQ.w handlelocal                                            ;local label
00022EE6 <AmiBlitz3.ab3@4552>   MOVE.l A5,letstart
00022EEC <AmiBlitz3.ab3@4553>   JSR getparameter
00022EF0 <AmiBlitz3.ab3@4554>   BSR.w reget
00022EF4 <AmiBlitz3.ab3@4555>    BEQ.w handlelabel                                         ;label found
00022EF8 <AmiBlitz3.ab3@4556>   CMP.w #$7B,D0         ;'{'
00022EFC <AmiBlitz3.ab3@4557>    BEQ.w handleproc
00022EFE <AmiBlitz3.ab3@4559>   TST.w d0
00022F02 <AmiBlitz3.ab3@4560>    BPL 'll1
00022F08 <AmiBlitz3.ab3@4561>   TST.b newsyntax
00022F0C <AmiBlitz3.ab3@4562>    BEQ 'll1
00022F12 <AmiBlitz3.ab3@4563>   LEA allowtab,a0
00022F14 <AmiBlitz3.ab3@4564>   MOVEQ #0,d1
00022F16 <AmiBlitz3.ab3@4565>   MOVE.b d0,d1
00022F1A <AmiBlitz3.ab3@4566>   TST.b 0(a0,d1.w)
00022F1E <AmiBlitz3.ab3@4567>    BNE 'll1
00022F20 <AmiBlitz3.ab3@4568>   SUBQ.l #2,a5
00022F28 <AmiBlitz3.ab3@4569>   MOVE.w #":",lastchar                                     ;no doublepoint
00022F2C <AmiBlitz3.ab3@4570>  BRA handlelabel
00022F34 <AmiBlitz3.ab3@4573>   CMP.l #"equ ",-1(a5)
00022F38 <AmiBlitz3.ab3@4574>    BEQ 'll4
00022F40 <AmiBlitz3.ab3@4575>   CMP.l #"EQU ",-1(a5)
00022F44 <AmiBlitz3.ab3@4576>    BNE 'll2
00022F46 <AmiBlitz3.ab3@4579>   ADDQ.l #2,a5
00022F4C <AmiBlitz3.ab3@4580>   JSR findlabel2
00022F50 <AmiBlitz3.ab3@4581>   BEQ.w 'lf1
00022F54 <AmiBlitz3.ab3@4582>   BSR.w addlabelhash
00022F5C <AmiBlitz3.ab3@4583>   MOVE.l #$1,$4(A2)
00022F64 <AmiBlitz3.ab3@4586>   CMPI.l #$1,$4(A2)
00022F68 <AmiBlitz3.ab3@4587>    BNE.w illconerr
00022F6C <AmiBlitz3.ab3@4588>   BSR get1bytemain
00022F6E <AmiBlitz3.ab3@4589>   MOVE.l A2,-(A7)
00022F70 <AmiBlitz3.ab3@4600>   SUBQ.l #1,a5
00022F72 <AmiBlitz3.ab3@4603>   SUBQ.l #1,a5
00022F78 <AmiBlitz3.ab3@4604>   JSR evalconst2
00022F7A <AmiBlitz3.ab3@4605>   MOVEA.l (A7)+,A2
00022F7E <AmiBlitz3.ab3@4606>   MOVE.l D3,$8(A2)
00022F80 <AmiBlitz3.ab3@4607>   RTS
00022F84 <AmiBlitz3.ab3@4608>   BSR get1bytemain
00022F8C <AmiBlitz3.ab3@4611>   CMP.l #"SET ",-1(a5)
00022F90 <AmiBlitz3.ab3@4612>   BNE 'll3
00022F94 <AmiBlitz3.ab3@4613>  BRA 'll4
00022F9A <AmiBlitz3.ab3@4617> JMP dolet2
00022F9E <AmiBlitz3.ab3@4621>   CMP.w #-$7FDE,D0    ; was #$8000+34,
00022FA2 <AmiBlitz3.ab3@4622>   BEQ.w get_tokencode
00022FA6 <AmiBlitz3.ab3@4623> BRA.w undodebug       ;!*!*!
00022FAA <AmiBlitz3.ab3@4627>   BSR.w undodebug    ;!***!
00022FAE <AmiBlitz3.ab3@4628>   BSR.w createlab
00022FB2 <AmiBlitz3.ab3@4629> BRA.w handlelab2
00022FB6 <AmiBlitz3.ab3@4633>   BSR.w get1bytemain
00022FBA <AmiBlitz3.ab3@4634>    BEQ.w handleeol     ;syntaxerr
00022FBE <AmiBlitz3.ab3@4635>   CMP.w #"'",D0        ; was #loclabch
00022FC2 <AmiBlitz3.ab3@4636>    BEQ.w handlelocal
00022FC6 <AmiBlitz3.ab3@4637>    BSR.w makename2
00022FC8 <AmiBlitz3.ab3@4639>    TST.w d0
00022FCC <AmiBlitz3.ab3@4640>    BPL handlelabel
00022FCE <AmiBlitz3.ab3@4641>    SUBQ.l #2,a5
00022FD6 <AmiBlitz3.ab3@4642>    MOVE.w #":",lastchar
00022FDA <AmiBlitz3.ab3@4643> BRA handlelabel                                              ;????
00022FDE <AmiBlitz3.ab3@4650>   BSR.w undodebug      ;!***!
00022FE4 <AmiBlitz3.ab3@4652>   LEA ptr_parameterstore,A0
00022FEA <AmiBlitz3.ab3@4653>   LEA lastgloballabel,A1
00022FEC <AmiBlitz3.ab3@4656>   MOVE.b (A0)+,(A1)+
00022FF0 <AmiBlitz3.ab3@4657>    BNE.w 'coplab
00022FF4 <AmiBlitz3.ab3@4661>   BSR.w findlabel2
00022FF8 <AmiBlitz3.ab3@4662>    BEQ.w 'found
00022FFC <AmiBlitz3.ab3@4664>    BSR.w addlabelhash
00023000 <AmiBlitz3.ab3@4667>   CLR.l $4(A2)                ;no refs
00023008 <AmiBlitz3.ab3@4668>   MOVE.l destpointer,$8(A2)   ;pc of label.
00023010 <AmiBlitz3.ab3@4673>   MOVE.w procnum,$10(A2)
00023012 <AmiBlitz3.ab3@4674>  RTS
00023016 <AmiBlitz3.ab3@4677>   MOVE.l $4(A2),D0
0002301A <AmiBlitz3.ab3@4678>   BTST #$0,D0
0002301E <AmiBlitz3.ab3@4679>    BNE.w illlaberr
00023024 <AmiBlitz3.ab3@4681>   TST.w pass
00023028 <AmiBlitz3.ab3@4684>   MOVE.l $8(A2),D0
0002302C <AmiBlitz3.ab3@4685>    BNE.w duplaberr
00023034 <AmiBlitz3.ab3@4686>   MOVE.w procnum,$10(A2)
00023038 <AmiBlitz3.ab3@4690>   MOVEA.l $4(A2),A3      ;start of refs list
0002303E <AmiBlitz3.ab3@4691>   MOVEA.l _execbase,A6
00023042 <AmiBlitz3.ab3@4694>   CMPA.w #$0,A3
00023046 <AmiBlitz3.ab3@4695>    BEQ.w 'done
0002304A <AmiBlitz3.ab3@4697>     MOVE.l $4(A2),D1
0002304E <AmiBlitz3.ab3@4698>     BTST #$0,D1
00023052 <AmiBlitz3.ab3@4699>     BNE.w illlaberr
00023056 <AmiBlitz3.ab3@4701>   MOVE.w $8(A3),D1
0002305A <AmiBlitz3.ab3@4702>   CMP.w $10(A2),D1
0002305E <AmiBlitz3.ab3@4703>    BEQ.w 'isok
00023064 <AmiBlitz3.ab3@4705>    TST.b newsyntax
00023068 <AmiBlitz3.ab3@4706>    BEQ 'l1
0002306C <AmiBlitz3.ab3@4707>  BRA.w 'isok                                            ;label context out of range fix
00023074 <AmiBlitz3.ab3@4713>   MOVE.w $A(A3),linenumat+2                                ;move 10(a3),linenumat org source
00023078 <AmiBlitz3.ab3@4714>  BRA.w referr
0002307E <AmiBlitz3.ab3@4717>   MOVE.w dontwrite_nomemleft,D1
00023082 <AmiBlitz3.ab3@4718>    BNE.w 'isaskip
00023086 <AmiBlitz3.ab3@4719>   MOVEA.l $4(A3),A1
0002308C <AmiBlitz3.ab3@4720>   BTST #$0,$7(A3)
00023090 <AmiBlitz3.ab3@4721>    BEQ.w 'pcref
00023092 <AmiBlitz3.ab3@4725>   SUBQ.w #1,A1
00023098 <AmiBlitz3.ab3@4726>   MOVE.l data2,(A1)
0002309C <AmiBlitz3.ab3@4727>  BRA.w 'isaskip
000230A2 <AmiBlitz3.ab3@4730>   MOVE.l destpointer,(A1)
000230A4 <AmiBlitz3.ab3@4733>   MOVEA.l A3,A1
000230A6 <AmiBlitz3.ab3@4734>   MOVEA.l (A3),A3
000230AA <AmiBlitz3.ab3@4735>   MOVE.l A3,$4(A2)     ;new first.
000230AC <AmiBlitz3.ab3@4736>   MOVEQ.l #$0C+2,D0    ; was #12
000230B2 <AmiBlitz3.ab3@4739>   MOVE.l mempool,a0
000230B8 <AmiBlitz3.ab3@4740>   MOVEA.l _execbase,A6
000230BC <AmiBlitz3.ab3@4741>   JSR _FreePooled(A6)
000230C0 <AmiBlitz3.ab3@4743>  BRA.w 'floop
000230CA <AmiBlitz3.ab3@4749>    MOVE.l #forthstack,forthsp
000230D4 <AmiBlitz3.ab3@4750>   MOVE.l #precstack,precsp
000230D8 <AmiBlitz3.ab3@4752>    BSR.w getparameter2
000230DC <AmiBlitz3.ab3@4756>   BSR.w findlabel2
000230E0 <AmiBlitz3.ab3@4757>    BEQ.w 'cfound
000230E4 <AmiBlitz3.ab3@4758>    BSR.w addlabelhash
000230EC <AmiBlitz3.ab3@4759>   MOVE.l #$1,$4(A2)
000230F0 <AmiBlitz3.ab3@4760>  BRA.w 'cn
000230F8 <AmiBlitz3.ab3@4763>   CMPI.l #$1,$4(A2)
000230FC <AmiBlitz3.ab3@4764>    BNE.w illconerr
00023100 <AmiBlitz3.ab3@4775>   CMP.w #$3D,D0         ;'='
00023104 <AmiBlitz3.ab3@4776>   BEQ.w 'asscon
00023106 <AmiBlitz3.ab3@4777>  RTS
00023108 <AmiBlitz3.ab3@4780>   MOVE.l A2,-(A7)
0002310E <AmiBlitz3.ab3@4781>   JSR evalconst2
00023110 <AmiBlitz3.ab3@4782>   MOVEA.l (A7)+,A2
00023114 <AmiBlitz3.ab3@4783>   MOVE.l D3,$8(A2)                                         ;store constant
0002311C <AmiBlitz3.ab3@4785>   CMP.w #$0a,lastchar
00023120 <AmiBlitz3.ab3@4786>   BNE 'l1
00023128 <AmiBlitz3.ab3@4787>   MOVE.w #":",lastchar                                     ;hack to read wizard include files
0002312A <AmiBlitz3.ab3@4791> RTS
0002312E <AmiBlitz3.ab3@4797>   BSR.w findproc                                           ;write statement call
00023132 <AmiBlitz3.ab3@4799>   BEQ '_state
00023138 <AmiBlitz3.ab3@4800>   TST.l unusedfunc
0002313C <AmiBlitz3.ab3@4802>   BEQ noprocerr          ; was bne
00023142 <AmiBlitz3.ab3@4805>   JSR gotoendsource
00023146 <AmiBlitz3.ab3@4809>   TST.b $5(A2)
0002314C <AmiBlitz3.ab3@4812>   MOVE.l a2,currentfunccall
00023154 <AmiBlitz3.ab3@4813>   MOVE.b #1,funccall
0002315A <AmiBlitz3.ab3@4814>   MOVE.b #1,isfunc(a2)
0002315E <AmiBlitz3.ab3@4816>   MOVE.l $E(A2),-(A7)         ;pc of proc.
00023160 <AmiBlitz3.ab3@4817>   MOVEQ.l #$00,D0
00023164 <AmiBlitz3.ab3@4818>   MOVE.b $4(A2),D0
0002316A <AmiBlitz3.ab3@4819>   MOVE.l d0,parnumtemp
0002316E <AmiBlitz3.ab3@4820>   BEQ.w 'nopars
00023172 <AmiBlitz3.ab3@4822>   TST.b $20(a2)                                            ;increase if morepar
00023176 <AmiBlitz3.ab3@4823>   BNE 'no0par
00023178 <AmiBlitz3.ab3@4824>   MOVE.l a5,a4
0002317C <AmiBlitz3.ab3@4827>   CMP.b #$20,(a4)+
00023180 <AmiBlitz3.ab3@4828>   BEQ 'l1
00023186 <AmiBlitz3.ab3@4829>   CMP.b #"}",-1(a4)
0002318A <AmiBlitz3.ab3@4830>   BNE  'no0par                                             ;statementcall pars
0002318C <AmiBlitz3.ab3@4831>   MOVEQ #0,d0
00023190 <AmiBlitz3.ab3@4835>   LEA $16(A2),A1            ;pointer to var desc list
00023192 <AmiBlitz3.ab3@4839>   MOVE.l d1,-(a7)
00023194 <AmiBlitz3.ab3@4840>   MOVE.b (a1),d2
00023196 <AmiBlitz3.ab3@4841>   MOVE.l d0,d1
0002319A <AmiBlitz3.ab3@4842>   CMP.w #4,d2
0002319E <AmiBlitz3.ab3@4843>   BNE 'l1b
000231A4 <AmiBlitz3.ab3@4844>   ADD.l #$203c,d1
000231AA <AmiBlitz3.ab3@4845>   JSR writeword
000231B0 <AmiBlitz3.ab3@4846>   MOVE.l #$ffff0000,d1
000231B6 <AmiBlitz3.ab3@4847>   JSR writelong
000231BA <AmiBlitz3.ab3@4848>  BRA 'l2b
000231C0 <AmiBlitz3.ab3@4851>   TST.b fpu
000231C4 <AmiBlitz3.ab3@4852>   BNE 'l1c
000231C8 <AmiBlitz3.ab3@4853>   CMP.w #5,d2
000231CC <AmiBlitz3.ab3@4854>   BNE 'l1c
000231D2 <AmiBlitz3.ab3@4855>   ADD.l #$203c,d1
000231D8 <AmiBlitz3.ab3@4856>   JSR writeword
000231DE <AmiBlitz3.ab3@4857>   MOVE.l #$800000c1,d1
000231E4 <AmiBlitz3.ab3@4858>   JSR writelong
000231E8 <AmiBlitz3.ab3@4859>  BRA 'l2b
000231EE <AmiBlitz3.ab3@4862>   ADD.l #$70ff,d1
000231F4 <AmiBlitz3.ab3@4863>   JSR writeword
000231FA <AmiBlitz3.ab3@4864>   MOVE.l #$f23c5000,d1
000231FC <AmiBlitz3.ab3@4865>   MOVE.l d0,d2
000231FE <AmiBlitz3.ab3@4866>   ASR.l #2,d2
00023200 <AmiBlitz3.ab3@4867>   ADD.l d2,d1
00023206 <AmiBlitz3.ab3@4868>   JSR writelong
0002320A <AmiBlitz3.ab3@4869>   MOVE.w #$ffff,d1
00023210 <AmiBlitz3.ab3@4870>   JSR writeword
00023212 <AmiBlitz3.ab3@4873>   MOVE.l (a7)+,d1
00023214 <AmiBlitz3.ab3@4874>   ADDQ.l #1,a1
0002321A <AmiBlitz3.ab3@4875>   ADD.l #$0200,d0
00023220 <AmiBlitz3.ab3@4876>   CMP.l #$0e00,d0
00023224 <AmiBlitz3.ab3@4877>    BEQ syntaxerr
00023226 <AmiBlitz3.ab3@4878>   TST.b (a1)
0002322A <AmiBlitz3.ab3@4879>    BNE 'again
0002322E <AmiBlitz3.ab3@4880>  BRA 'nopars
00023238 <AmiBlitz3.ab3@4883>   MOVE.w a2offset,a2offset2
0002323C <AmiBlitz3.ab3@4884>   LEA $16(A2),A2
00023242 <AmiBlitz3.ab3@4885>   MOVE.b funcparloop,-(a7)
0002324A <AmiBlitz3.ab3@4886>   MOVE.b #1,funcparloop
00023250 <AmiBlitz3.ab3@4887>   MOVE.b blitzparloop,-(a7)
00023256 <AmiBlitz3.ab3@4888>   CLR.b blitzparloop
0002325A <AmiBlitz3.ab3@4890>   BSR.w fetchpees2
00023260 <AmiBlitz3.ab3@4892>   MOVE.b (a7)+,blitzparloop
00023266 <AmiBlitz3.ab3@4893>   MOVE.b (a7)+,funcparloop
0002326A <AmiBlitz3.ab3@4895>  BRA.w 'nopars3
0002326E <AmiBlitz3.ab3@4899>   BSR.w get1bytemain
00023272 <AmiBlitz3.ab3@4902>   CMP.w #$7D,D0        ;'}'
00023276 <AmiBlitz3.ab3@4903>    BNE.w morepar_                                          ;syntax error morepar
0002327C <AmiBlitz3.ab3@4904>    JSR chkstak
0002327E <AmiBlitz3.ab3@4905>   MOVE.l (A7)+,D1
00023284 <AmiBlitz3.ab3@4923>    JSR makefjsr
0002328A <AmiBlitz3.ab3@4946>   CLR.b funccall
0002328E <AmiBlitz3.ab3@4948> BRA.w get1bytemain
00023294 <AmiBlitz3.ab3@4955>   MOVE.l d0,lasttoken
00023298 <AmiBlitz3.ab3@4956>   CMP.w #$c09f,d0                                          ;hack to use getregd0 instead of getd0
0002329C <AmiBlitz3.ab3@4957>   BNE 'l2
000232A0 <AmiBlitz3.ab3@4958>    MOVE.w #$dd05,d0
000232A4 <AmiBlitz3.ab3@4961>   CMP.w #$c0a0,d0                                          ;hack to use getregd0 instead of getd0
000232A8 <AmiBlitz3.ab3@4962>   BNE 'l3
000232AC <AmiBlitz3.ab3@4963>    MOVE.w #$dd06,d0
000232B0 <AmiBlitz3.ab3@4967>   CMP.w #-$7FC4,D0               ; was #$8000+fnum,
000232B4 <AmiBlitz3.ab3@4968>   BCS.w 'nono
000232B8 <AmiBlitz3.ab3@4969>     CMP.w #-$7F4D,D0             ; was #$8000+tnum,
000232BC <AmiBlitz3.ab3@4970>     BCC.w 'nono
000232C4 <AmiBlitz3.ab3@4972>       BTST #$7,assemblercheck    ; was optreq2ga3+13                            ;inline Assembler checking
000232C8 <AmiBlitz3.ab3@4973>       BNE.b 'asmok
000232CE <AmiBlitz3.ab3@4975>         TST.b debugmode
000232D2 <AmiBlitz3.ab3@4976>         BEQ.b 'l10
000232DC <AmiBlitz3.ab3@4981>           MOVE.w d_nomemleft,dontwrite_nomemleft
000232E6 <AmiBlitz3.ab3@4982>           MOVE.l d_bigpc,bigpc
000232F0 <AmiBlitz3.ab3@4983>           MOVE.l d_pc,destpointer
000232FA <AmiBlitz3.ab3@4984>           MOVE.l cont_pc2,cont_pc
000232FE <AmiBlitz3.ab3@4992>  BRA.w asmit   ;assemble the bastard
00023302 <AmiBlitz3.ab3@4999>   BCLR #$F,D0
00023304 <AmiBlitz3.ab3@5000>   MOVE.w D0,D1
00023308 <AmiBlitz3.ab3@5001>   ANDI.w #$7F00,D1
0002330C <AmiBlitz3.ab3@5002>   BNE.w handlelib
00023310 <AmiBlitz3.ab3@5004>     CMP.w #$B3,D0        ; was #tnum,                                  ;intern Instructions
00023314 <AmiBlitz3.ab3@5005>     BCS.w 'isokat
00023318 <AmiBlitz3.ab3@5007>       SUBI.w #$77,D0     ; was #tnum-fnum,
0002331C <AmiBlitz3.ab3@5008>       CMP.w #$4B,D0      ; was #fnum+15
00023320 <AmiBlitz3.ab3@5009>       BEQ.w 'noerr
00023324 <AmiBlitz3.ab3@5010>         CMP.w #$46,D0    ; was #fnum+10,
00023328 <AmiBlitz3.ab3@5011>         BEQ.w 'noerr
0002332C <AmiBlitz3.ab3@5012>  BRA.w 'doerr                                            ; change tokennum
00023330 <AmiBlitz3.ab3@5015>     CMP.w #$38,D0        ;check for things which don't want
00023334 <AmiBlitz3.ab3@5016>      BEQ.w 'noerr        ;error checking...
00023338 <AmiBlitz3.ab3@5017>     CMP.w #$39,D0
0002333C <AmiBlitz3.ab3@5018>      BEQ.w 'noerr
00023340 <AmiBlitz3.ab3@5019>     CMP.w #$D,D0
00023344 <AmiBlitz3.ab3@5020>      BEQ.w 'noerr
00023348 <AmiBlitz3.ab3@5021>     CMP.w #$12,D0
0002334C <AmiBlitz3.ab3@5022>      BEQ.w 'noerr
00023350 <AmiBlitz3.ab3@5023>     CMP.w #$13,D0
00023354 <AmiBlitz3.ab3@5024>      BEQ.w 'noerr
00023358 <AmiBlitz3.ab3@5025>     CMP.w #$1A,D0
0002335C <AmiBlitz3.ab3@5026>      BEQ.w 'noerr
00023360 <AmiBlitz3.ab3@5027>     CMP.w #$2A,D0
00023364 <AmiBlitz3.ab3@5028>      BHI.w 'doerr
00023368 <AmiBlitz3.ab3@5029>     CMP.w #$23,D0
0002336C <AmiBlitz3.ab3@5030>      BCS.b 'doerr
00023370 <AmiBlitz3.ab3@5033>   BSR.w undodebug
00023372 <AmiBlitz3.ab3@5036>   SUBQ.w #1,D0
00023374 <AmiBlitz3.ab3@5037>   LSL.w #2,D0
0002337A <AmiBlitz3.ab3@5047>   LEA instructionbase,A0
0002337E <AmiBlitz3.ab3@5048>   MOVEA.l $0(A0,D0.W),A0
00023380 <AmiBlitz3.ab3@5049>   MOVE.l A0,-(A7)
00023384 <AmiBlitz3.ab3@5050> BRA.w get1bytemain
00023386 <AmiBlitz3.ab3@5056>   MOVE.w D0,D1
0002338A <AmiBlitz3.ab3@5057>    BSR.w searchinstr    ;toke stuff in a3
00023390 <AmiBlitz3.ab3@5059>    TST.b newmode
00023394 <AmiBlitz3.ab3@5060>    BNE compile_term
0002339A <AmiBlitz3.ab3@5062>   BTST #$2,$1(A3)                                          ;a3 = pointer to instr ;toke stuff in a3
0002339E <AmiBlitz3.ab3@5063>    BNE.w stamigalib
000233A4 <AmiBlitz3.ab3@5064>   BTST #$0,$1(A3)
000233A8 <AmiBlitz3.ab3@5065>    BEQ.w needreturn_                                       ;syntax err need return   ;check it's a statement
000233AC <AmiBlitz3.ab3@5067>    BSR.w sizespec                                         ;does it need a size specifier?
000233B0 <AmiBlitz3.ab3@5068>    BSR.w countpees
000233B6 <AmiBlitz3.ab3@5074>   MOVE.w numreps,-(A7)
000233BC <AmiBlitz3.ab3@5075>   MOVE.w userp,-(A7)
000233C2 <AmiBlitz3.ab3@5076>   MOVE.w a2offset,-(A7)
000233C4 <AmiBlitz3.ab3@5077>   MOVE.l A2,-(A7)                                          ;recurs.
000233CE <AmiBlitz3.ab3@5078>   MOVE.w convsize,userp
000233D2 <AmiBlitz3.ab3@5079>   LEA $6(A3),A1
000233D4 <AmiBlitz3.ab3@5084>    MOVE.w (A1),D2
000233D8 <AmiBlitz3.ab3@5085>    BMI.w 'SERR                                              ;statement syntax error
000233DC <AmiBlitz3.ab3@5086>   ANDI.w #$FF,D2
000233DE <AmiBlitz3.ab3@5087>   CMP.w D2,D1
000233E2 <AmiBlitz3.ab3@5088>    BEQ.w 'found
000233E6 <AmiBlitz3.ab3@5089>    BCS.w 'next
000233E8 <AmiBlitz3.ab3@5090>   MOVE.b (A1),D3
000233EC <AmiBlitz3.ab3@5091>   ANDI.w #$7,D3
000233F0 <AmiBlitz3.ab3@5092>    BEQ.w 'next
000233F2 <AmiBlitz3.ab3@5093>   MOVE.w D2,D4
000233F4 <AmiBlitz3.ab3@5094>   SUB.w D3,D4
000233F6 <AmiBlitz3.ab3@5095>   MOVEQ.l #$00,D5
000233F8 <AmiBlitz3.ab3@5096>   MOVE.w D1,D5
000233FA <AmiBlitz3.ab3@5097>   SUB.w D4,D5
000233FC <AmiBlitz3.ab3@5098>   DIVU D3,D5
000233FE <AmiBlitz3.ab3@5099>   SWAP D5
00023400 <AmiBlitz3.ab3@5100>   TST.w D5
00023404 <AmiBlitz3.ab3@5101>    BEQ.w 'found
00023406 <AmiBlitz3.ab3@5104>   ADDQ.w #2,A1
00023408 <AmiBlitz3.ab3@5105>   ADDA.w D2,A1
0002340C <AmiBlitz3.ab3@5106>    BSR.w aligna1
00023410 <AmiBlitz3.ab3@5107>    BSR.w skiplibreg
00023414 <AmiBlitz3.ab3@5108>   LEA $C(A1),A1
00023418 <AmiBlitz3.ab3@5109>  BRA.w 'loop
0002341A <AmiBlitz3.ab3@5113>   MOVE.w (a3),d2
0002341E <AmiBlitz3.ab3@5114>   BTST #1,d2
00023422 <AmiBlitz3.ab3@5115>   BEQ statement_
00023426 <AmiBlitz3.ab3@5116>   CMP.w #1,d1
0002342A <AmiBlitz3.ab3@5117>   BEQ statement_
0002342E <AmiBlitz3.ab3@5120>   CMP.b #$20,(a5)+
00023432 <AmiBlitz3.ab3@5121>   BEQ 'l2
00023438 <AmiBlitz3.ab3@5122>   CMP.b #"(",-2(a5)
0002343C <AmiBlitz3.ab3@5123>   BNE 'l1
00023440 <AmiBlitz3.ab3@5124>  BRA parameter_
00023444 <AmiBlitz3.ab3@5127>  BRA inbrackets_
00023446 <AmiBlitz3.ab3@5131>   MOVE.b (A1),D2
00023448 <AmiBlitz3.ab3@5132>   LSL.w #8,D2
0002344A <AmiBlitz3.ab3@5133>   OR.w D2,D1
0002344C <AmiBlitz3.ab3@5134>   MOVE.l A1,-(A7)
00023452 <AmiBlitz3.ab3@5135>   CLR.w a2offset
00023454 <AmiBlitz3.ab3@5136>   TST.w D1
00023458 <AmiBlitz3.ab3@5137>    BEQ.w 'nopees
0002345C <AmiBlitz3.ab3@5138>   LEA $2(A1),A2
00023462 <AmiBlitz3.ab3@5140>   MOVE.l lasttoken,-(a7)
00023468 <AmiBlitz3.ab3@5141>   CLR.l lasttoken
0002346C <AmiBlitz3.ab3@5143>   BSR.w fetchlibps
00023472 <AmiBlitz3.ab3@5145>   MOVE.l (a7)+,lasttoken
00023476 <AmiBlitz3.ab3@5147>  BRA.w 'skip
0002347A <AmiBlitz3.ab3@5150>   BSR.w get1bytemain
0002347C <AmiBlitz3.ab3@5153>   MOVEA.l (A7)+,A1
0002347E <AmiBlitz3.ab3@5154>   MOVEA.l (A7)+,A2
00023484 <AmiBlitz3.ab3@5155>   MOVE.w a2offset,D1
00023488 <AmiBlitz3.ab3@5156>    BEQ.w 'skip2
0002348E <AmiBlitz3.ab3@5157>   MOVE.w D1,preplibst+2
00023494 <AmiBlitz3.ab3@5158>   MOVE.l preplibst,D1
0002349A <AmiBlitz3.ab3@5159>    JSR writelong                                           ;write array offset stack correct
000234A4 <AmiBlitz3.ab3@5160>   MOVE.w numreps,movenumrep+2
000234A8 <AmiBlitz3.ab3@5161>    BEQ.w 'skip2
000234AE <AmiBlitz3.ab3@5162>   MOVE.l movenumrep,D1
000234B4 <AmiBlitz3.ab3@5163>    JSR writelong
000234BA <AmiBlitz3.ab3@5167>   JSR userjsr
000234C0 <AmiBlitz3.ab3@5172>   MOVE.w a2offset,D1
000234C4 <AmiBlitz3.ab3@5173>    BEQ.w 'skip3
000234C8 <AmiBlitz3.ab3@5174>   CMP.w #$8,D1
000234CC <AmiBlitz3.ab3@5175>    BHI.w 'skip4
000234D0 <AmiBlitz3.ab3@5176>   ANDI.w #$7,D1
000234D2 <AmiBlitz3.ab3@5177>   LSL.w #8,D1
000234D4 <AmiBlitz3.ab3@5178>   LSL.w #1,D1
000234D8 <AmiBlitz3.ab3@5179>   ORI.w #$504F,D1       ;addq #x,a7
000234DE <AmiBlitz3.ab3@5180>   JSR writeword
000234E2 <AmiBlitz3.ab3@5181>  BRA.w 'skip3
000234E8 <AmiBlitz3.ab3@5184>   MOVE.w D1,fixlibst+2
000234EE <AmiBlitz3.ab3@5185>   MOVE.l fixlibst,D1
000234F4 <AmiBlitz3.ab3@5186>   JSR writelong
000234FA <AmiBlitz3.ab3@5189>   MOVE.w (A7)+,a2offset
00023500 <AmiBlitz3.ab3@5190>   MOVE.w (A7)+,userp
00023506 <AmiBlitz3.ab3@5191>   MOVE.w (A7)+,numreps
0002350A <AmiBlitz3.ab3@5192> BRA.w reget
0002350E <AmiBlitz3.ab3@5196>   MOVEM.l A2-A3,-(A7)
00023514 <AmiBlitz3.ab3@5198>   CLR.b doublepeek
0002351A <AmiBlitz3.ab3@5200>   MOVE.l A5,lastsourcepos
0002351E <AmiBlitz3.ab3@5201>    BSR.w getchar          ;','
00023522 <AmiBlitz3.ab3@5202>   CMP.w #$2E,D0
00023526 <AmiBlitz3.ab3@5203>    BEQ.w 'ok1
0002352C <AmiBlitz3.ab3@5204>   MOVEA.l defaulttype,A2
00023530 <AmiBlitz3.ab3@5205>   CMP.w #$24,D0           ;'$'
00023534 <AmiBlitz3.ab3@5206>    BNE.w 'none
00023536 <AmiBlitz3.ab3@5207>   MOVEQ.l #$07,D1
0002353A <AmiBlitz3.ab3@5208>  BRA.w 'skip
0002353E <AmiBlitz3.ab3@5211>   BSR.w getparameter2
00023542 <AmiBlitz3.ab3@5212>   BEQ.w syntaxerr
00023548 <AmiBlitz3.ab3@5213>   LEA newtypebase,A2
0002354C <AmiBlitz3.ab3@5214>   BSR.w findtype
00023550 <AmiBlitz3.ab3@5215>   BNE.w notypeerr
0002355A <AmiBlitz3.ab3@5220>   MOVE.w oldqflag,instringon
00023560 <AmiBlitz3.ab3@5221>   MOVEA.l lastsourcepos,A5
00023564 <AmiBlitz3.ab3@5229>   MOVE.w $6(A2),D1
0002356A <AmiBlitz3.ab3@5231>   CMP.w #8,8(a2)
0002356E <AmiBlitz3.ab3@5232>   BNE 'l1
00023576 <AmiBlitz3.ab3@5233>   MOVE.b #1,doublepeek
0002357C <AmiBlitz3.ab3@5238>   MOVE.w D1,convsize
00023580 <AmiBlitz3.ab3@5239>   MOVEM.l (A7)+,A2-A3
00023582 <AmiBlitz3.ab3@5240> RTS
00023588 <AmiBlitz3.ab3@5245>   BTST #$3,$1(A3)
0002358C <AmiBlitz3.ab3@5246>   BEQ.w 'skip
00023590 <AmiBlitz3.ab3@5247>   BSR.w sizespec2                                         ;read peek/poke size
00023594 <AmiBlitz3.ab3@5249>   ORI.w #$7000,D1
0002359A <AmiBlitz3.ab3@5250>   JSR writeword
000235A0 <AmiBlitz3.ab3@5251>   ADDQ.w #1,regnum
000235A2 <AmiBlitz3.ab3@5254> RTS
000235A4 <AmiBlitz3.ab3@5261>             Dc.b $10,$12                                   ;MOVE.B  (A2),D0
000235A6 <AmiBlitz3.ab3@5262>             Dc.b $14,$91                                   ;MOVE.B  (A1),(A2)
000235A8 <AmiBlitz3.ab3@5263>             Dc.b $12,$80                                   ;MOVE.B  D0,(A1)
000235AA <AmiBlitz3.ab3@5267> swapw:      Dc.b $30,$12                                   ;MOVE.W  (A2),D0
000235AC <AmiBlitz3.ab3@5268>             Dc.b $34,$91                                   ;MOVE.W  (A1),(A2)
000235AE <AmiBlitz3.ab3@5269>             Dc.b $32,$80                                   ;MOVE.W  D0,(A1)
000235B0 <AmiBlitz3.ab3@5273> swapl:      Dc.b $20,$12                                   ;MOVE.L  (A2),D0
000235B2 <AmiBlitz3.ab3@5274>             Dc.b $24,$91                                   ;MOVE.L  (A1),(A2)
000235B4 <AmiBlitz3.ab3@5275>             Dc.b $22,$80                                   ;MOVE.L  D0,(A1)
000235B6 <AmiBlitz3.ab3@5279> pulla1:     Dc.b $22,$5F                                   ;MOVEA.L (A7)+,A1
000235B8 <AmiBlitz3.ab3@5282> srctype:    Ds.w 1
000235BC <AmiBlitz3.ab3@5287>   BSR.w excget
000235C0 <AmiBlitz3.ab3@5288>   CMP.w #$2C,D0     ;','
000235C4 <AmiBlitz3.ab3@5289>    BNE.w syntaxerr
000235CA <AmiBlitz3.ab3@5290>   MOVE.b D2,srctype
000235D0 <AmiBlitz3.ab3@5291>   MOVE.w pusha2,D1
000235D6 <AmiBlitz3.ab3@5292>   JSR writeword
000235DA <AmiBlitz3.ab3@5293>   BSR.w get1bytemain
000235DE <AmiBlitz3.ab3@5294>   BSR.w excget
000235E4 <AmiBlitz3.ab3@5295>   CMP.b srctype,D2
000235E8 <AmiBlitz3.ab3@5296>    BNE.w excerr2
000235EE <AmiBlitz3.ab3@5297>   MOVE.w pulla1,D1
000235F4 <AmiBlitz3.ab3@5298>    JSR writeword
000235F8 <AmiBlitz3.ab3@5300>   CMP.b #$2,D2
000235FC <AmiBlitz3.ab3@5301>    BCS.w 'byte
00023600 <AmiBlitz3.ab3@5302>    BEQ.w 'word
00023604 <AmiBlitz3.ab3@5303>   LEA swapl(PC),A0
00023608 <AmiBlitz3.ab3@5304>   LEA swaplf(PC),A1
0002360E <AmiBlitz3.ab3@5305>  JMP pokecode
00023612 <AmiBlitz3.ab3@5308>   LEA swapw(PC),A0
00023616 <AmiBlitz3.ab3@5309>   LEA swapwf(PC),A1
0002361C <AmiBlitz3.ab3@5310>  JMP pokecode
00023620 <AmiBlitz3.ab3@5313>   LEA swapb(PC),A0
00023624 <AmiBlitz3.ab3@5314>   LEA swapbf(PC),A1
0002362A <AmiBlitz3.ab3@5315> JMP pokecode
00023630 <AmiBlitz3.ab3@5319>   JSR getparameter
00023634 <AmiBlitz3.ab3@5320>   BSR.w fetchvars
0002363A <AmiBlitz3.ab3@5321>   JSR calcvar
0002363E <AmiBlitz3.ab3@5322>   BTST #$E,D2
00023642 <AmiBlitz3.ab3@5323>    BEQ.w 'skip
00023646 <AmiBlitz3.ab3@5324>   MOVE.b #$4,D2
00023648 <AmiBlitz3.ab3@5327>   TST.b D2
0002364C <AmiBlitz3.ab3@5328>    BEQ.w excerr
00023650 <AmiBlitz3.ab3@5329>   BTST #$F,D2
00023654 <AmiBlitz3.ab3@5330>    BNE.w 'done
0002365A <AmiBlitz3.ab3@5331>   MOVE.w leaamp,D1
00023660 <AmiBlitz3.ab3@5332>    JSR pokewda5s
00023662 <AmiBlitz3.ab3@5333>   MOVE.w D3,D1
00023668 <AmiBlitz3.ab3@5334>  JMP writeword
0002366A <AmiBlitz3.ab3@5337> RTS
00023670 <AmiBlitz3.ab3@5346>   MOVE.l mempool,a0
00023676 <AmiBlitz3.ab3@5347>   MOVEA.l _execbase,A6
0002367A <AmiBlitz3.ab3@5348> JMP _AllocPooled(a6)
0002367E <AmiBlitz3.ab3@5353>   MOVE.w #$BF00,D1       ; was #wbstart
00023684 <AmiBlitz3.ab3@5354> JMP Atokejsr
00023688 <AmiBlitz3.ab3@5358>   CMP.w #-$7FFA,D0       ; was  #$8006
0002368C <AmiBlitz3.ab3@5359>    BEQ.w popreturn
00023690 <AmiBlitz3.ab3@5360>   CMP.w #-$7FEA,D0       ; was  #$8000+22,
00023694 <AmiBlitz3.ab3@5361>    BEQ.w popnext2
00023698 <AmiBlitz3.ab3@5362>   CMP.w #-$7FF2,D0       ; was  #$8000+14,
0002369C <AmiBlitz3.ab3@5363>    BEQ.w popselect2
000236A0 <AmiBlitz3.ab3@5365>   CMP.w #-$7FF5,D0       ; was  #$8000+11
000236A4 <AmiBlitz3.ab3@5366>    BEQ.w get1bytemain
000236A8 <AmiBlitz3.ab3@5367>   CMP.w #-$7FF4,D0       ; was  #$8000+12
000236AC <AmiBlitz3.ab3@5368>    BEQ.w get1bytemain
000236B0 <AmiBlitz3.ab3@5369>   CMP.w #-$7FEC,D0       ; was  #$8000+20
000236B4 <AmiBlitz3.ab3@5370>    BEQ.w get1bytemain
000236B8 <AmiBlitz3.ab3@5371>   CMP.w #-$7F45,D0       ; was  #$8000+tnum+8
000236BC <AmiBlitz3.ab3@5372>    BEQ.w get1bytemain
000236C0 <AmiBlitz3.ab3@5373> BRA.w syntaxerr
000236C6 <AmiBlitz3.ab3@5377>   TST.b debugmode
000236CA <AmiBlitz3.ab3@5378>    BEQ.w 'norerr
000236CE <AmiBlitz3.ab3@5379>   LEA 'rfix(PC),A0
000236D2 <AmiBlitz3.ab3@5380>   LEA 'rfixf(PC),A1
000236D8 <AmiBlitz3.ab3@5381>    JSR pokecode
000236DC <AmiBlitz3.ab3@5382>   MOVE.w #$C305,D1
000236E2 <AmiBlitz3.ab3@5383>    JSR Atokejsr
000236E6 <AmiBlitz3.ab3@5384>   MOVE.w 'rfix2(PC),D1
000236EC <AmiBlitz3.ab3@5386>    JSR writeword
000236F0 <AmiBlitz3.ab3@5387>  BRA.w get1bytemain
000236F6 <AmiBlitz3.ab3@5390>   CMPI.w #$6753,$4(A7)                                     ;#"gS",4(A7)
000236FA <AmiBlitz3.ab3@5391>   BEQ.w 'rfix2
00023700 <AmiBlitz3.ab3@5394>   JSR $20000                                               ;reass
00023702 <AmiBlitz3.ab3@5397>   ADDQ.w #6,A7
00023706 <AmiBlitz3.ab3@5400>   MOVE.w 'sfix(PC),D1
0002370C <AmiBlitz3.ab3@5401>   JSR writeword
00023710 <AmiBlitz3.ab3@5402> BRA.w get1bytemain
00023712 <AmiBlitz3.ab3@5407>   Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
00023718 <AmiBlitz3.ab3@5412>   MOVE.l firstfor,D0
0002371C <AmiBlitz3.ab3@5413>    BEQ.w noforerr
0002371E <AmiBlitz3.ab3@5414>   MOVEA.l D0,A2
00023722 <AmiBlitz3.ab3@5415>    BSR.w get1bytemain
00023726 <AmiBlitz3.ab3@5416>   BSR.w popnext
0002372C <AmiBlitz3.ab3@5419>   TST.b debugmode
00023730 <AmiBlitz3.ab3@5420>    BEQ.w 'ner
00023736 <AmiBlitz3.ab3@5421>   MOVE.l nextfixw2,D1
0002373C <AmiBlitz3.ab3@5422>   CMPI.w #$3,$C(A2)
00023740 <AmiBlitz3.ab3@5423>    BCS.w 'writelong2
00023746 <AmiBlitz3.ab3@5424>   MOVE.l nextfixl2,D1
0002374C <AmiBlitz3.ab3@5427>   JMP  writelong
00023752 <AmiBlitz3.ab3@5430>   CMPI.w #$3,$C(A2)
00023756 <AmiBlitz3.ab3@5431>    BCS.w 'skip2
0002375C <AmiBlitz3.ab3@5432>   MOVE.l nextfixl,D1
00023762 <AmiBlitz3.ab3@5433>   JMP writelong
00023768 <AmiBlitz3.ab3@5436>   MOVE.w nextfixw,D1
0002376E <AmiBlitz3.ab3@5437> JMP writeword
00023772 <AmiBlitz3.ab3@5442>   MOVE.w $C(A2),D0
00023778 <AmiBlitz3.ab3@5443>   TST.b debugmode
0002377C <AmiBlitz3.ab3@5444>    BEQ.w 'norunerr
00023780 <AmiBlitz3.ab3@5445>   MOVE.w #$C306,D1
00023784 <AmiBlitz3.ab3@5446>   CMP.w #$3,D0
00023788 <AmiBlitz3.ab3@5447>    BCS.w 'oktc
0002378A <AmiBlitz3.ab3@5448>   ADDQ.w #1,D1
0002378C <AmiBlitz3.ab3@5451>   MOVE.l A2,-(A7)
00023792 <AmiBlitz3.ab3@5452>   JSR Atokejsr
00023794 <AmiBlitz3.ab3@5453>   MOVEA.l (A7)+,A2
00023796 <AmiBlitz3.ab3@5456> RTS
0002379C <AmiBlitz3.ab3@5460>   MOVE.l firstsel,D0
000237A0 <AmiBlitz3.ab3@5461>    BEQ.w eselerr
000237A2 <AmiBlitz3.ab3@5462>   MOVEA.l D0,A2
000237A6 <AmiBlitz3.ab3@5463>    BSR.w get1bytemain
000237AA <AmiBlitz3.ab3@5466>   MOVE.w $C(A2),D2
000237B0 <AmiBlitz3.ab3@5467>   TST.b debugmode
000237B4 <AmiBlitz3.ab3@5468>    BEQ.w 'norerr
000237B8 <AmiBlitz3.ab3@5469>   MOVE.w #$C313,D1
000237BC <AmiBlitz3.ab3@5470>   CMP.w #$3,D2
000237C0 <AmiBlitz3.ab3@5471>    BCS.w 'chkit
000237C2 <AmiBlitz3.ab3@5472>   ADDQ.w #1,D1
000237C8 <AmiBlitz3.ab3@5475>   JSR Atokejsr                                             ;make sure next thing on stack
000237CA <AmiBlitz3.ab3@5479>   MOVEQ.l #$02,D1
000237CE <AmiBlitz3.ab3@5480>   CMP.w #$3,D2
000237D2 <AmiBlitz3.ab3@5481>    BCS.w 'doit
000237D4 <AmiBlitz3.ab3@5482>   MOVEQ.l #$04,D1
000237D8 <AmiBlitz3.ab3@5483>   CMP.w #$7,D2
000237DC <AmiBlitz3.ab3@5484>    BCS.w 'doit
000237E2 <AmiBlitz3.ab3@5485>   LEA endselstr,A0
000237E8 <AmiBlitz3.ab3@5486>   LEA endselstrf,A1
000237EE <AmiBlitz3.ab3@5487>   TST.b debugmode
000237F2 <AmiBlitz3.ab3@5488>    BEQ.w 'norerr3
000237F8 <AmiBlitz3.ab3@5489>   LEA endselstrf2,A1
000237FE <AmiBlitz3.ab3@5492>   JSR pokecode
00023802 <AmiBlitz3.ab3@5493>   MOVE.w #$C003,D1                                         ;global freemem
00023808 <AmiBlitz3.ab3@5494>  JMP Atokejsr
0002380E <AmiBlitz3.ab3@5497>   TST.b debugmode
00023812 <AmiBlitz3.ab3@5498>    BEQ.w 'norerr2
00023814 <AmiBlitz3.ab3@5499>   ADDQ.w #2,D1                                             ;for the "sE"
00023816 <AmiBlitz3.ab3@5502>   LSL.w #8,D1
00023818 <AmiBlitz3.ab3@5503>   LSL.w #1,D1
0002381E <AmiBlitz3.ab3@5504>   OR.w endsel,D1
00023824 <AmiBlitz3.ab3@5505> JMP writeword
00023828 <AmiBlitz3.ab3@5508> firstrep:    Ds.l 1
0002382C <AmiBlitz3.ab3@5509> replineat:   Ds.l 1
00023832 <AmiBlitz3.ab3@5518>   CLR.l fp0addr
0002383C <AmiBlitz3.ab3@5519>   MOVE.l linenumat,replineat
0002383E <AmiBlitz3.ab3@5520>   MOVEQ.l #$08,D0
00023844 <AmiBlitz3.ab3@5521>   MOVEA.l _execbase,A6
0002384A <AmiBlitz3.ab3@5522>   MOVE.l mempool,a0
0002384E <AmiBlitz3.ab3@5523>   JSR _AllocPooled(a6)
00023850 <AmiBlitz3.ab3@5525>   MOVEA.l D0,A0
00023854 <AmiBlitz3.ab3@5526>   MOVE.l firstrep(PC),(A0)
0002385A <AmiBlitz3.ab3@5527>   MOVE.l A0,firstrep
00023862 <AmiBlitz3.ab3@5528>   MOVE.l destpointer,$4(A0)
00023864 <AmiBlitz3.ab3@5529> RTS
0002386A <AmiBlitz3.ab3@5532> str_temp:  Ds.w 3                                            ;infochk  ds.b 6 org source
0002386E <AmiBlitz3.ab3@5535>   LEA str_temp(PC),A1
00023870 <AmiBlitz3.ab3@5536>   CLR.w (A1)
00023874 <AmiBlitz3.ab3@5537>   CLR.l $2(A1)
00023876 <AmiBlitz3.ab3@5540>   MOVEQ.l #$04,D0
0002387A <AmiBlitz3.ab3@5543>     MOVE.b $1(A1),(A1)+
0002387E <AmiBlitz3.ab3@5544>   DBF D0,'loop
00023882 <AmiBlitz3.ab3@5549>   LEA str_temp(PC),A1
00023884 <AmiBlitz3.ab3@5550>   MOVE.b (A0),D0
00023888 <AmiBlitz3.ab3@5551>   ORI.b #$20,D0
0002388C <AmiBlitz3.ab3@5552>   MOVE.b D0,$5(A1)
0002388E <AmiBlitz3.ab3@5553>   TST.b (A0)+
00023892 <AmiBlitz3.ab3@5554>    BNE.w 'loop2
00023896 <AmiBlitz3.ab3@5555>   CMPI.w #$2E69,(A1)+                                      ;".i"
0002389A <AmiBlitz3.ab3@5556>    BNE.w 'no
000238A0 <AmiBlitz3.ab3@5557>   CMPI.l #$6E666F20,(A1)                                   ;"nfo "
000238A2 <AmiBlitz3.ab3@5560> RTS
000238A6 <AmiBlitz3.ab3@5564>   BPL.w 'evaltoke
000238A8 <AmiBlitz3.ab3@5565>   MOVE.w D0,D1
000238AC <AmiBlitz3.ab3@5566>   ANDI.w #$7F80,D1
000238B0 <AmiBlitz3.ab3@5567>    BEQ.w tokeerr
000238B4 <AmiBlitz3.ab3@5568>   BCLR #$F,D0
000238B6 <AmiBlitz3.ab3@5569>   MOVE.w D0,D4                                             ;got toke number
000238BA <AmiBlitz3.ab3@5570>   BSR.w get1bytemain
000238BE <AmiBlitz3.ab3@5571>  BRA.w 'gotnum
000238C4 <AmiBlitz3.ab3@5574>   JSR evalconst
000238CA <AmiBlitz3.ab3@5575>   CMP.l #MaxWord,D3
000238CE <AmiBlitz3.ab3@5576>    BHI.w tokeerr
000238D0 <AmiBlitz3.ab3@5577>   TST.w D6
000238D4 <AmiBlitz3.ab3@5578>    BNE.w tokeerr
000238D6 <AmiBlitz3.ab3@5579>   MOVE.w D3,D4
000238D8 <AmiBlitz3.ab3@5582>   MOVEQ.l #$00,D5
000238DC <AmiBlitz3.ab3@5583>   CMP.w #$2C,D0
000238E0 <AmiBlitz3.ab3@5584>    BNE.w 'gotfrom
000238E2 <AmiBlitz3.ab3@5585>   MOVE.w D4,-(A7)
000238E8 <AmiBlitz3.ab3@5586>    JSR evalconst2
000238EE <AmiBlitz3.ab3@5587>   CMP.l #MaxWord,D3
000238F2 <AmiBlitz3.ab3@5588>    BHI.w tokeerr
000238F4 <AmiBlitz3.ab3@5589>   TST.w D6
000238F8 <AmiBlitz3.ab3@5590>    BNE.w tokeerr
000238FA <AmiBlitz3.ab3@5591>   MOVE.w D3,D5
000238FC <AmiBlitz3.ab3@5592>   MOVE.w (A7)+,D4
000238FE <AmiBlitz3.ab3@5595> RTS                                                        ;d4=toke, d5=form
00023900 <AmiBlitz3.ab3@5599>   TST.w D0
00023904 <AmiBlitz3.ab3@5600>    BSR.w gettokeps
00023908 <AmiBlitz3.ab3@5601>   MOVE.w #$4EB9,D1
0002390E <AmiBlitz3.ab3@5602>   JSR writeword
00023912 <AmiBlitz3.ab3@5603>   BSR.w addoff
00023914 <AmiBlitz3.ab3@5604>   MOVE.w D5,D1
00023918 <AmiBlitz3.ab3@5605>   ORI.w #$8000,D1                                          ;Toke of Amiga type.
0002391A <AmiBlitz3.ab3@5606>   SWAP D1
0002391C <AmiBlitz3.ab3@5607>   MOVE.w D4,D1
00023922 <AmiBlitz3.ab3@5608> JMP writelong
00023924 <AmiBlitz3.ab3@5612>   TST.w D0
00023928 <AmiBlitz3.ab3@5613>    BSR.w gettokeps
0002392C <AmiBlitz3.ab3@5614>   MOVE.w #$4EB9,D1
00023932 <AmiBlitz3.ab3@5615>   JSR writeword
00023936 <AmiBlitz3.ab3@5616>   BSR.w addoff
00023938 <AmiBlitz3.ab3@5617>   MOVE.w D5,D1
0002393C <AmiBlitz3.ab3@5618>   ORI.w #$C000,D1                                          ;Toke of Blitz type.
0002393E <AmiBlitz3.ab3@5619>   SWAP D1
00023940 <AmiBlitz3.ab3@5620>   MOVE.w D4,D1
00023946 <AmiBlitz3.ab3@5621>   JMP writelong
0002394C <AmiBlitz3.ab3@5625>   JSR evalconst
00023952 <AmiBlitz3.ab3@5626>   CMP.l #$10000,D3
00023956 <AmiBlitz3.ab3@5627>    BCC.w tokeerr
00023958 <AmiBlitz3.ab3@5628>   MOVE.w D3,D1
0002395E <AmiBlitz3.ab3@5629> JMP Atokejsr
00023962 <AmiBlitz3.ab3@5633>   BSR.w gettokeps
00023966 <AmiBlitz3.ab3@5634>   MOVE.w #$4EB9,D1
0002396C <AmiBlitz3.ab3@5635>   JSR writeword
00023972 <AmiBlitz3.ab3@5636>   MOVE.l destpointer,D3
0002397A <AmiBlitz3.ab3@5637>   BTST #$7,blitzmode
0002397E <AmiBlitz3.ab3@5638>    BEQ.w 'inamiga
00023982 <AmiBlitz3.ab3@5639>   BSET #$E,D5
00023986 <AmiBlitz3.ab3@5642>   BSR.w maketjsr
0002398A <AmiBlitz3.ab3@5643>   BSR.w addoff
00023990 <AmiBlitz3.ab3@5644> JMP writelong
00023994 <AmiBlitz3.ab3@5648>   BEQ.w 'zero
00023996 <AmiBlitz3.ab3@5649>   MOVEQ.l #$02,D2                                          ;get a word
0002399C <AmiBlitz3.ab3@5651>   JSR bakeval
000239A0 <AmiBlitz3.ab3@5652>   MOVE.w fvwait(PC),D1
000239A4 <AmiBlitz3.ab3@5653>  BRA.w 'vcont
000239A8 <AmiBlitz3.ab3@5656>   MOVE.w #$7000,D1                                         ;moveq #0,d0
000239AE <AmiBlitz3.ab3@5659>   JSR writeword
000239B2 <AmiBlitz3.ab3@5660>   MOVE.w #$C104,D1
000239B8 <AmiBlitz3.ab3@5661> JMP Atokejsr
000239BA <AmiBlitz3.ab3@5665>   SUBQ.w #1,D0
000239C0 <AmiBlitz3.ab3@5668>   Dc.w $3b7c,$ffff,0                                       ;move.w #$FFFF,$0(A5) ;noopt
000239C4 <AmiBlitz3.ab3@5671>   Dc.l $426d0001                                           ;clr.w $0(A5)
000239C8 <AmiBlitz3.ab3@5675>   MOVE.b debugmode(PC),D1
000239CC <AmiBlitz3.ab3@5676>   BEQ.b 'skip
000239D0 <AmiBlitz3.ab3@5677>   MOVE.w #$D500,D1
000239D6 <AmiBlitz3.ab3@5678> JMP Atokejsr
000239D8 <AmiBlitz3.ab3@5681> RTS
000239E0 <AmiBlitz3.ab3@5685>   BSET #$0,blitzmode
000239E8 <AmiBlitz3.ab3@5686>   BSET #$7,blitzmode
000239EC <AmiBlitz3.ab3@5687>   MOVE.w #$C200,D1
000239F2 <AmiBlitz3.ab3@5688>   JSR Atokejsr
000239F8 <AmiBlitz3.ab3@5689>   TST.b debugmode
000239FC <AmiBlitz3.ab3@5690>    BEQ.w 'done
00023A00 <AmiBlitz3.ab3@5691>   MOVE.w cgoblitz(PC),D1
00023A06 <AmiBlitz3.ab3@5692>   JSR writeword
00023A08 <AmiBlitz3.ab3@5693>   MOVEQ.l #-$01,D1
00023A0E <AmiBlitz3.ab3@5694>   JSR writeword
00023A14 <AmiBlitz3.ab3@5695>   JSR getbbase
00023A1A <AmiBlitz3.ab3@5696>   JSR writeword
00023A1E <AmiBlitz3.ab3@5699> BRA.w debugmode_codelabel
00023A22 <AmiBlitz3.ab3@5703>   MOVE.w #$C201,D1
00023A26 <AmiBlitz3.ab3@5704> BRA.w do_AMIGA_toamode
00023A2A <AmiBlitz3.ab3@5707>   MOVE.W  #$C202,D1
00023A32 <AmiBlitz3.ab3@5710>   BSET #$0,blitzmode
00023A3A <AmiBlitz3.ab3@5711>   BCLR #$7,blitzmode
00023A40 <AmiBlitz3.ab3@5712>   JSR Atokejsr
00023A46 <AmiBlitz3.ab3@5713>   TST.b debugmode
00023A4A <AmiBlitz3.ab3@5714>    BEQ.w 'done
00023A4E <AmiBlitz3.ab3@5715>   MOVE.w cgoamiga(PC),D1
00023A54 <AmiBlitz3.ab3@5716>   JSR writeword
00023A5A <AmiBlitz3.ab3@5717>   JSR getbbase
00023A60 <AmiBlitz3.ab3@5718>   JSR writeword
00023A64 <AmiBlitz3.ab3@5721> BRA.w debugmode_codelabel
00023A68 <AmiBlitz3.ab3@5725>   MOVEM.l D2-D7/A2-A4,-(A7)
00023A6C <AmiBlitz3.ab3@5728>   MOVEM.l (A7)+,D2-D7/A2-A4
00023A72 <AmiBlitz3.ab3@5732>   JSR evalconst
00023A78 <AmiBlitz3.ab3@5733>   CMP.l #$E,D3
00023A7C <AmiBlitz3.ab3@5734>    BCC.w interr4
00023A80 <AmiBlitz3.ab3@5735>   MOVE.w #$7000,D1
00023A82 <AmiBlitz3.ab3@5736>   OR.w D3,D1
00023A88 <AmiBlitz3.ab3@5737>   JSR writeword
00023A8C <AmiBlitz3.ab3@5738>   MOVE.w #$C101,D1
00023A92 <AmiBlitz3.ab3@5739> JMP Atokejsr                                               ;clear the interupt
00023A94 <AmiBlitz3.ab3@5742> inerr:       Ds.w 1                                        ;flag - in error trap mode
00023A98 <AmiBlitz3.ab3@5743> errjmp:      Ds.l 1                                        ;where err jump is
00023A9C <AmiBlitz3.ab3@5744> errcode:     Ds.l 1
00023AA0 <AmiBlitz3.ab3@5748>   MOVE.W  #$D202,D1
00023AA6 <AmiBlitz3.ab3@5749> JMP Atokejsr                                               ;BRA.W Atokejsr
00023AAA <AmiBlitz3.ab3@5753>   MOVE.w inerr(PC),D1
00023AAE <AmiBlitz3.ab3@5754>    BEQ.w errerr3
00023AB4 <AmiBlitz3.ab3@5755>   CLR.w inerr
00023ABA <AmiBlitz3.ab3@5756>   MOVE.w dontwrite_nomemleft,D1
00023ABE <AmiBlitz3.ab3@5757>    BNE.w 'skip
00023AC2 <AmiBlitz3.ab3@5758>   MOVEA.l errjmp(PC),A0
00023AC8 <AmiBlitz3.ab3@5759>   MOVE.l destpointer,(A0)
00023ACC <AmiBlitz3.ab3@5762> BRA.w get1bytemain
00023AD0 <AmiBlitz3.ab3@5766>   MOVE.w #$D205,D1
00023AD6 <AmiBlitz3.ab3@5767> JMP Atokejsr
00023ADC <AmiBlitz3.ab3@5771>   MOVE.w proceduremode,D1
00023AE0 <AmiBlitz3.ab3@5772>    BNE.w errerr1
00023AE4 <AmiBlitz3.ab3@5773>   MOVE.w inerr(PC),D1
00023AE8 <AmiBlitz3.ab3@5774>    BNE.w errerr2
00023AEE <AmiBlitz3.ab3@5775>   LEA inerr,a0
00023AF0 <AmiBlitz3.ab3@5776>   NOT.w (a0)                                               ;reass
00023AF4 <AmiBlitz3.ab3@5777>   MOVE.w #$203C,D1                                         ;move.l #x,d0
00023AFA <AmiBlitz3.ab3@5778>   JSR writeword
00023B04 <AmiBlitz3.ab3@5779>   MOVE.l destpointer,errcode
00023B08 <AmiBlitz3.ab3@5780>   BSR.w addoff
00023B0E <AmiBlitz3.ab3@5781>   JSR writelong
00023B12 <AmiBlitz3.ab3@5782>   MOVE.w #$D201,D1
00023B18 <AmiBlitz3.ab3@5783>   JSR Atokejsr
00023B1C <AmiBlitz3.ab3@5784>   MOVE.w #$4EF9,D1                                         ;JMP
00023B22 <AmiBlitz3.ab3@5785>   JSR writeword
00023B2C <AmiBlitz3.ab3@5786>   MOVE.l destpointer,errjmp
00023B30 <AmiBlitz3.ab3@5787>   BSR.w addoff
00023B36 <AmiBlitz3.ab3@5788>   JSR writelong
00023B3C <AmiBlitz3.ab3@5789>   MOVE.w dontwrite_nomemleft,D1
00023B40 <AmiBlitz3.ab3@5790>    BNE.w 'skip
00023B44 <AmiBlitz3.ab3@5791>   MOVEA.l errcode(PC),A0
00023B4A <AmiBlitz3.ab3@5792>   MOVE.l destpointer,(A0)
00023B4C <AmiBlitz3.ab3@5795> RTS
00023B50 <AmiBlitz3.ab3@5798> intlineat:  Ds.l 1
00023B52 <AmiBlitz3.ab3@5802>   MOVEQ.l #-$01,D1                                        ;type - need new string space
00023B56 <AmiBlitz3.ab3@5803>   BSR.w errchx
00023B5C <AmiBlitz3.ab3@5804>   MOVE.w D1,intstring
00023B66 <AmiBlitz3.ab3@5805>   MOVE.l linenumat,intlineat
00023B6C <AmiBlitz3.ab3@5806>   JSR evalconst                                           ;get constant - int level
00023B72 <AmiBlitz3.ab3@5807>   CMP.l #$E,D3
00023B76 <AmiBlitz3.ab3@5808>    BCC.w interr4
00023B7C <AmiBlitz3.ab3@5809>   ST intsused
00023B82 <AmiBlitz3.ab3@5810>   MOVE.w D3,intlevel
00023B86 <AmiBlitz3.ab3@5811>   MOVE.w #$7000,D1
00023B88 <AmiBlitz3.ab3@5812>   OR.w D3,D1                                              
00023B8E <AmiBlitz3.ab3@5813>   JSR writeword                                         ;moveq #x,d0
00023B92 <AmiBlitz3.ab3@5814>   MOVE.w #$223C,D1                                        ;move.l #x,d1
00023B98 <AmiBlitz3.ab3@5815>   JSR writeword
00023B9C <AmiBlitz3.ab3@5816>   BSR.w addoff
00023BA2 <AmiBlitz3.ab3@5817>   MOVE.l destpointer,-(A7)
00023BA8 <AmiBlitz3.ab3@5818>   JSR writelong
00023BAC <AmiBlitz3.ab3@5819>   MOVE.w #$C100,D1
00023BB2 <AmiBlitz3.ab3@5820>   JSR Atokejsr
00023BB6 <AmiBlitz3.ab3@5821>   MOVE.w #$4EF9,D1                                        ;jmp
00023BBC <AmiBlitz3.ab3@5822>   JSR writeword
00023BC0 <AmiBlitz3.ab3@5823>   BSR.w addoff
00023BCA <AmiBlitz3.ab3@5824>   MOVE.l destpointer,intjmpat
00023BCE <AmiBlitz3.ab3@5825>   BSR.w writelong
00023BD0 <AmiBlitz3.ab3@5826>   MOVEA.l (A7)+,A0
00023BD6 <AmiBlitz3.ab3@5827>   MOVE.w dontwrite_nomemleft,D1
00023BDA <AmiBlitz3.ab3@5828>   BNE.w 'dontpoke
00023BE0 <AmiBlitz3.ab3@5829>   MOVE.l destpointer,(A0)
00023BE4 <AmiBlitz3.ab3@5832>   MOVE.l intstart0(PC),D1
00023BE8 <AmiBlitz3.ab3@5833>   BSR.w writelong
00023BEE <AmiBlitz3.ab3@5834>   TST.b debugmode
00023BF2 <AmiBlitz3.ab3@5835>    BEQ.w 'norerr
00023BF4 <AmiBlitz3.ab3@5839>   MOVEQ.l #$02,D1
00023BF8 <AmiBlitz3.ab3@5840>   BSR.w writetrap
00023BFC <AmiBlitz3.ab3@5841>   BSR.w addoff
00023C06 <AmiBlitz3.ab3@5842>   MOVE.l destpointer,intcleanat
00023C0A <AmiBlitz3.ab3@5843>   BSR.w writelong
00023C10 <AmiBlitz3.ab3@5844>   MOVE.w intlevel,D1
00023C14 <AmiBlitz3.ab3@5845>   BSR.w writeword
00023C18 <AmiBlitz3.ab3@5846>   MOVE.w #$C30B,D1                                         ;disable stack checks
00023C1E <AmiBlitz3.ab3@5847>   JSR Atokejsr
00023C22 <AmiBlitz3.ab3@5850>   MOVE.w #$FED3,D1
00023C26 <AmiBlitz3.ab3@5851>   BSR.w uselib
00023C2A <AmiBlitz3.ab3@5852>   MOVE.w #$C102,D1
00023C30 <AmiBlitz3.ab3@5853>   JSR Atokejsr
00023C38 <AmiBlitz3.ab3@5854>   MOVE.w #-1,lasta6
00023C42 <AmiBlitz3.ab3@5855>   MOVE.l linenumat,intline
00023C44 <AmiBlitz3.ab3@5856> RTS
00023C46 <AmiBlitz3.ab3@5860>             Ds.w 1                                         ;??looks like obsolved data??
00023C4A <AmiBlitz3.ab3@5862> intdata1:   Ds.l 1                                         ;where in data1 a5 is being kept
00023C4E <AmiBlitz3.ab3@5864> intjmpat:   Ds.l 1
00023C52 <AmiBlitz3.ab3@5865> intline:    Ds.l 1
00023C54 <AmiBlitz3.ab3@5866> intstring:  Ds.w 1                                         ;flag 0 = no setint
00023C56 <AmiBlitz3.ab3@5869> intlevel:   Ds.w 1
00023C5A <AmiBlitz3.ab3@5870> intcleanat: Ds.l 1
00023C5E <AmiBlitz3.ab3@5871> ret15add:   Ds.l 1
00023C60 <AmiBlitz3.ab3@5872> ret15cc:    Ds.w 1
00023C68 <AmiBlitz3.ab3@5876>   ADDI.l #$12,$2(A7)
00023C70 <AmiBlitz3.ab3@5877>   MOVE.l $2(A7),ret15add
00023C76 <AmiBlitz3.ab3@5878>   MOVE.w (A7),ret15cc
00023C7E <AmiBlitz3.ab3@5879>   MOVE.l #directdo,$2(A7)
00023C80 <AmiBlitz3.ab3@5880> RTE
00023C84 <AmiBlitz3.ab3@5889>   MOVE.l ret15add(PC),-(A7)
00023C88 <AmiBlitz3.ab3@5890>   MOVE.w ret15cc(PC),-(A7)                                 ;15*4
00023C8C <AmiBlitz3.ab3@5891>   MOVEM.l D0-D7/A0-A6,-(A7)
00023C96 <AmiBlitz3.ab3@5892>   MOVE.l destbufferend,trap15temp                          ;store high buff addr
00023CA0 <AmiBlitz3.ab3@5893>   MOVE.l destbufferstart,trap15temp2
00023CAA <AmiBlitz3.ab3@5894>   MOVE.l libend,templibend
00023CB4 <AmiBlitz3.ab3@5895>   MOVE.l data1start,tempdata1start
00023CBA <AmiBlitz3.ab3@5896>   CLR.l hunkoffsetcounter
00023CC0 <AmiBlitz3.ab3@5898>   MOVE.l directbuffer,a0
00023CC6 <AmiBlitz3.ab3@5902>   MOVE.l a0,destbufferstart
00023CCC <AmiBlitz3.ab3@5903>   ADD.l #3900,a0
00023CD2 <AmiBlitz3.ab3@5904>   MOVE.l a0,destbufferend
00023CD8 <AmiBlitz3.ab3@5905>   TST.b exdebug
00023CDC <AmiBlitz3.ab3@5906>   BEQ 'l1
00023CE2 <AmiBlitz3.ab3@5907>   MOVE.l a0,libend
00023CE8 <AmiBlitz3.ab3@5908>   ADD.l #4000,a0
00023CEE <AmiBlitz3.ab3@5909>   MOVE.l a0,data1start
00023CF8 <AmiBlitz3.ab3@5912>   MOVE.l #'dircont,errcont
00023CFE <AmiBlitz3.ab3@5913> 
00023D04 <AmiBlitz3.ab3@5914>   MOVE.l A7,errstack
00023D0C <AmiBlitz3.ab3@5915>   MOVE.w #$FFFF,dirmode
00023D10 <AmiBlitz3.ab3@5917>     MOVEA.l ret15add(PC),A1
00023D16 <AmiBlitz3.ab3@5918>     MOVE.w -(A1),blitzmode
00023D18 <AmiBlitz3.ab3@5919>     CLR.l -(A1)
00023D1E <AmiBlitz3.ab3@5920>     MOVE.l -(A1),firstglob
00023D24 <AmiBlitz3.ab3@5921>     MOVE.l -(A1),firstlocal
00023D2A <AmiBlitz3.ab3@5923>   CLR.w proceduremode
00023D30 <AmiBlitz3.ab3@5924>   MOVE.l firstglob,D0
00023D36 <AmiBlitz3.ab3@5925>   OR.l firstlocal,D0
00023D3A <AmiBlitz3.ab3@5926>   BEQ.b 'skip
00023D40 <AmiBlitz3.ab3@5927>   NOT.w proceduremode
00023D42 <AmiBlitz3.ab3@5930>   MOVEA.l -(A1),A0                                         ;address of string
00023D44 <AmiBlitz3.ab3@5934>   MOVE.l A0,-(A7)
00023D82 <AmiBlitz3.ab3@5937>   !ComData_GetL{comFunc_DebugTrap,A1}
00023D84 <AmiBlitz3.ab3@5938>   JSR (A1)                                                 ;tokenise line.....
00023D86 <AmiBlitz3.ab3@5940>   MOVEA.l (A7)+,A5
00023D90 <AmiBlitz3.ab3@5941>   MOVE.l directbuffer,destpointer
00023D96 <AmiBlitz3.ab3@5942>   TST.b exdebug
00023D9A <AmiBlitz3.ab3@5943>   BEQ 'noexdebug
00023D9C <AmiBlitz3.ab3@5944>   MOVE.l a5,a0
00023DA2 <AmiBlitz3.ab3@5945>   MOVE.l #200,d0
00023DA8 <AmiBlitz3.ab3@5948>     MOVE.b 0(a0,d0.l),8(a0,d0.l)
00023DAC <AmiBlitz3.ab3@5949>   DBF d0,'l2
00023DB2 <AmiBlitz3.ab3@5954>   MOVE.l destpointer,a0
00023DB6 <AmiBlitz3.ab3@5955>   MOVE.w #$207c,(a0)+
00023DB8 <AmiBlitz3.ab3@5956>   MOVE.l a5,d0
00023DBE <AmiBlitz3.ab3@5957>   ADD.l #$206,d0                                           ;constant from debuglib
00023DC0 <AmiBlitz3.ab3@5958>   MOVE.l d0,(a0)+
00023DC6 <AmiBlitz3.ab3@5959>   MOVE.l a0,destpointer
00023DC8 <AmiBlitz3.ab3@5960>   MOVE.l a5,a0
00023DCC <AmiBlitz3.ab3@5961>   MOVE.w #$8039,(a0)+                                      ;TokeJsr 164 (inputoutputlib) LSL 7+4
00023DD2 <AmiBlitz3.ab3@5962>   MOVE.l #"$520",(a0)+
00023DD6 <AmiBlitz3.ab3@5963>   MOVE.w #"4:",(a0)+
00023DDC <AmiBlitz3.ab3@5966>   CLR.w dontwrite_nomemleft
00023DE4 <AmiBlitz3.ab3@5967>   MOVE.w #$FFFF,lasta6
00023DE8 <AmiBlitz3.ab3@5968>   BSR.w compile_line                                        ;.....compile it
00023DEE <AmiBlitz3.ab3@5969>   TST.b exdebug
00023DF2 <AmiBlitz3.ab3@5970>   BEQ 'noexdebug2
00023DF8 <AmiBlitz3.ab3@5971>   JSR fixjsrs
00023DFE <AmiBlitz3.ab3@5974>   CLR.w proceduremode
00023E02 <AmiBlitz3.ab3@5975>   BSR.w errchx
00023E06 <AmiBlitz3.ab3@5976>   MOVE.w #$4EF9,D1
00023E0A <AmiBlitz3.ab3@5977>   BSR.w writeword                                          ;JMP
00023E0E <AmiBlitz3.ab3@5978>   MOVE.l ret15add(PC),D1
00023E12 <AmiBlitz3.ab3@5979>   BSR.w writelong                                          ;jmp to done
00023E18 <AmiBlitz3.ab3@5980>   MOVE.w dontwrite_nomemleft,D0
00023E1C <AmiBlitz3.ab3@5981>    BNE.w nodirmem
00023E24 <AmiBlitz3.ab3@5982>   MOVE.l directbuffer,$3E(A7)                              ;install code address
00023E2A <AmiBlitz3.ab3@5985>   CLR.w dirmode
00023E30 <AmiBlitz3.ab3@5986>   MOVE.w ret15cc(PC),$3C(A7)
00023E3A <AmiBlitz3.ab3@5987>   MOVE.l trap15temp,destbufferend
00023E44 <AmiBlitz3.ab3@5988>   MOVE.l trap15temp2,destbufferstart
00023E4E <AmiBlitz3.ab3@5989>   MOVE.l tempdata1start,data1start
00023E58 <AmiBlitz3.ab3@5990>   MOVE.l templibend,libend
00023E5C <AmiBlitz3.ab3@5991>   MOVEM.l (A7)+,D0-D7/A0-A6
00023E60 <AmiBlitz3.ab3@5992>   BSR.w Aclearcache                                        ;selden used
00023E62 <AmiBlitz3.ab3@5993> RTR
00023E66 <AmiBlitz3.ab3@5996>   MOVEA.l ret15add(PC),A0
00023E68 <AmiBlitz3.ab3@5997>   SUBQ.w #2,A0
00023E6A <AmiBlitz3.ab3@5998>   MOVE.l D0,-(A0)
00023E6E <AmiBlitz3.ab3@5999> BRA.w 'direxit
00023E72 <AmiBlitz3.ab3@6003>   MOVE.w $6(A3),D1
00023E76 <AmiBlitz3.ab3@6004>   BSR.w uselib                                             ;get lib for base address
00023E7A <AmiBlitz3.ab3@6005>   MOVE.w $A(A1),-(A7)                                      ;libbase reg
00023E7C <AmiBlitz3.ab3@6006>   ADDQ.w #8,A3
00023E7E <AmiBlitz3.ab3@6007>   MOVE.w (A3)+,-(A7)                                       ;get offset for lib
00023E80 <AmiBlitz3.ab3@6008>   MOVE.l A3,-(A7)
00023E82 <AmiBlitz3.ab3@6012>   MOVEQ.l #$00,D3
00023E88 <AmiBlitz3.ab3@6014>   JSR checka4a5
00023E8A <AmiBlitz3.ab3@6018>   MOVE.b (A3)+,D1
00023E8E <AmiBlitz3.ab3@6019>    BMI.w 'done
00023E90 <AmiBlitz3.ab3@6020>   MOVEQ.l #$03,D2
00023E92 <AmiBlitz3.ab3@6021>   ADDQ.w #1,D3
00023E96 <AmiBlitz3.ab3@6022>   MOVEM.l D3/A3,-(A7)
00023E9C <AmiBlitz3.ab3@6024>   MOVE.b funcparloop,-(a7)
00023EA4 <AmiBlitz3.ab3@6025>   MOVE.b #0,funcparloop
00023EAA <AmiBlitz3.ab3@6026>   MOVE.l leftsidetype,-(a7)
00023EB0 <AmiBlitz3.ab3@6027>   MOVE.l rightsidetype,-(a7)
00023EB6 <AmiBlitz3.ab3@6028>   MOVE.w leftsideflagmask,-(a7)
00023EBC <AmiBlitz3.ab3@6029>   MOVE.w rightsideflagmask,-(a7)
00023EC2 <AmiBlitz3.ab3@6030>   CLR.l leftsidetype
00023EC8 <AmiBlitz3.ab3@6031>   CLR.l rightsidetype
00023ECE <AmiBlitz3.ab3@6032>   CLR.w leftsideflagmask
00023ED4 <AmiBlitz3.ab3@6033>   CLR.w rightsideflagmask
00023EDA <AmiBlitz3.ab3@6034>   MOVE.b blitzparloop,-(a7)
00023EE2 <AmiBlitz3.ab3@6035>   MOVE.b #1,blitzparloop                                 ;write the parameter to stack
00023EE8 <AmiBlitz3.ab3@6037>   JSR peval
00023EEE <AmiBlitz3.ab3@6039>   MOVE.b (a7)+,blitzparloop
00023EF4 <AmiBlitz3.ab3@6040>   MOVE.w (a7)+,rightsideflagmask
00023EFA <AmiBlitz3.ab3@6041>   MOVE.w (a7)+,leftsideflagmask
00023F00 <AmiBlitz3.ab3@6042>   MOVE.l (a7)+,rightsidetype
00023F06 <AmiBlitz3.ab3@6043>   MOVE.l (a7)+,leftsidetype
00023F0C <AmiBlitz3.ab3@6044>   MOVE.b (a7)+,funcparloop
00023F10 <AmiBlitz3.ab3@6045>   MOVEM.l (A7)+,D3/A3
00023F14 <AmiBlitz3.ab3@6047>   CMP.w #$2C,D0     ; ','
00023F18 <AmiBlitz3.ab3@6048>    BEQ.w 'loop
00023F1A <AmiBlitz3.ab3@6049>   TST.b (A3)
00023F1E <AmiBlitz3.ab3@6050>    BPL.w syntaxerr
00023F20 <AmiBlitz3.ab3@6053>   MOVEA.l (A7)+,A3
00023F22 <AmiBlitz3.ab3@6054>   SUBQ.w #1,D3
00023F26 <AmiBlitz3.ab3@6055>    BPL.w 'toend
00023F2A <AmiBlitz3.ab3@6056>    BSR.w get1bytemain                                      ;no pars - get :
00023F2E <AmiBlitz3.ab3@6057>  BRA.w 'nopars
00023F30 <AmiBlitz3.ab3@6060>   TST.b (A3)+                                              ;go to end of params
00023F34 <AmiBlitz3.ab3@6061>    BPL.w 'toend
00023F36 <AmiBlitz3.ab3@6062>   SUBQ.w #1,A3
00023F38 <AmiBlitz3.ab3@6065>    MOVEQ.l #$00,D1
00023F3A <AmiBlitz3.ab3@6066>    MOVE.b -(A3),D1
00023F3E <AmiBlitz3.ab3@6067>    BTST #$4,D1
00023F42 <AmiBlitz3.ab3@6068>     BNE.w 'addreg
00023F44 <AmiBlitz3.ab3@6069>    LSL.w #8,D1
00023F46 <AmiBlitz3.ab3@6070>    LSL.w #1,D1
00023F4A <AmiBlitz3.ab3@6071>    ORI.w #$201F,D1
00023F4E <AmiBlitz3.ab3@6072>  BRA.w 'gotit
00023F52 <AmiBlitz3.ab3@6075>    ANDI.w #$7,D1
00023F54 <AmiBlitz3.ab3@6076>    LSL.w #8,D1
00023F56 <AmiBlitz3.ab3@6077>    LSL.w #1,D1
00023F5A <AmiBlitz3.ab3@6078>    ORI.w #$205F,D1
00023F5E <AmiBlitz3.ab3@6081>     BSR.w writeword
00023F62 <AmiBlitz3.ab3@6082>   DBF D3,'loop2
00023F68 <AmiBlitz3.ab3@6085>   MOVE.w (A7)+,libjsr+2
00023F6E <AmiBlitz3.ab3@6086>   MOVE.w (A7)+,libbase+2
00023F74 <AmiBlitz3.ab3@6087>   MOVE.l libbase,D1
00023F78 <AmiBlitz3.ab3@6088>    BSR.w writelong
00023F7E <AmiBlitz3.ab3@6089>   MOVE.l libjsr,D1
00023F84 <AmiBlitz3.ab3@6090>   JSR writelong
00023F8A <AmiBlitz3.ab3@6092>   JSR restorea4a5
00023F8C <AmiBlitz3.ab3@6094> RTS
00023F92 <AmiBlitz3.ab3@6101>   MOVE.l data1,D4
00023F98 <AmiBlitz3.ab3@6102>   SUB.l data1start,D4
00023F9E <AmiBlitz3.ab3@6103>   ADD.l #10000,d4
00023FA4 <AmiBlitz3.ab3@6104>   MOVE.l libend,D3
00023FAA <AmiBlitz3.ab3@6105>   SUB.l destbufferend,D3
00023FB0 <AmiBlitz3.ab3@6106>   ADD.l #40000,d3
00023FB6 <AmiBlitz3.ab3@6107>   MOVE.l bigpc,D2
00023FBC <AmiBlitz3.ab3@6108>   SUB.l destbufferstart,D2
00023FC2 <AmiBlitz3.ab3@6109>   ADD.l #20000,d2
00023FC8 <AmiBlitz3.ab3@6110>   MOVE.l databuffer,D5
00023FCE <AmiBlitz3.ab3@6111>   ADD.l #10000,D5
00023FD2 <AmiBlitz3.ab3@6112>  BRA newallox
00023FD8 <AmiBlitz3.ab3@6115>   MOVE.l objectbuffer,D2       ;??Looks like unused code??
00023FDA <AmiBlitz3.ab3@6116>   LSR.l #1,D2
00023FE0 <AmiBlitz3.ab3@6117>   ADD.l objectbuffer,D2
00023FE6 <AmiBlitz3.ab3@6119>   MOVE.l libsbuffer,D3
00023FE8 <AmiBlitz3.ab3@6120>   LSR.l #1,D3
00023FEE <AmiBlitz3.ab3@6121>   ADD.l libsbuffer,D3
00023FF4 <AmiBlitz3.ab3@6123>   MOVE.l systembuffer,D4
00023FF6 <AmiBlitz3.ab3@6124>   LSR.l #1,D4
00023FFC <AmiBlitz3.ab3@6125>   ADD.l systembuffer,D4
00024002 <AmiBlitz3.ab3@6127>   MOVE.l databuffer,D5
00024004 <AmiBlitz3.ab3@6128>   LSR.l #1,D5
0002400A <AmiBlitz3.ab3@6129>   ADD.l databuffer,D5
0002400E <AmiBlitz3.ab3@6131> BRA.w newallox
00024014 <AmiBlitz3.ab3@6135>   MOVE.l bigpc,D2
0002401A <AmiBlitz3.ab3@6136>   SUB.l destbufferstart,D2                                     ;size of object buffer
00024020 <AmiBlitz3.ab3@6137>   SUB.l savefuncspace,d2
00024026 <AmiBlitz3.ab3@6139>   TST.w debugversion
0002402A <AmiBlitz3.ab3@6140>    BNE.b 'skip
00024030 <AmiBlitz3.ab3@6141>   ADDI.l #$800,D2
00024036 <AmiBlitz3.ab3@6144>   MOVE.l libend,D3
0002403C <AmiBlitz3.ab3@6145>   SUB.l destbufferend,D3
00024042 <AmiBlitz3.ab3@6149>   MOVE.l data1,D4
00024048 <AmiBlitz3.ab3@6150>   SUB.l data1start,D4
0002404E <AmiBlitz3.ab3@6154>   MOVE.l data2,D5
00024054 <AmiBlitz3.ab3@6155>   SUB.l data2at,D5
0002405A <AmiBlitz3.ab3@6158>   CLR.l morememadd
0002405E <AmiBlitz3.ab3@6162>   BSR.w makeallox
00024062 <AmiBlitz3.ab3@6163>   BNE.w 'done
00024066 <AmiBlitz3.ab3@6164>  BRA.w init_buffers
00024068 <AmiBlitz3.ab3@6167> RTS
0002406E <AmiBlitz3.ab3@6171>   MOVEA.l _execbase,A6
00024074 <AmiBlitz3.ab3@6172>   MOVE.l objlen,D0
00024078 <AmiBlitz3.ab3@6173>   BEQ.w 'skip
0002407E <AmiBlitz3.ab3@6174>   CLR.l objlen
00024084 <AmiBlitz3.ab3@6175>   MOVEA.l destbufferstart,A1
0002408A <AmiBlitz3.ab3@6177>   MOVE.l mempool,a0
0002408E <AmiBlitz3.ab3@6178> JMP _FreeVec(A6)
00024090 <AmiBlitz3.ab3@6183> RTS
00024096 <AmiBlitz3.ab3@6187>   MOVE.l objectbuffer,D2
0002409C <AmiBlitz3.ab3@6188>   MOVE.l libsbuffer,D3
000240A2 <AmiBlitz3.ab3@6189>   MOVE.l systembuffer,D4
000240A8 <AmiBlitz3.ab3@6190>   MOVE.l databuffer,D5
000240B0 <AmiBlitz3.ab3@6195>   MOVE.w #$FFFF,anyerrs      ; was -1
000240B4 <AmiBlitz3.ab3@6196>   BSR.w freeallox
000240B6 <AmiBlitz3.ab3@6200>   ADDQ.l #1,D2
000240BA <AmiBlitz3.ab3@6201>   BCLR #$0,D2
000240BC <AmiBlitz3.ab3@6202>   ADDQ.l #1,D3
000240C0 <AmiBlitz3.ab3@6203>   BCLR #$0,D3
000240C2 <AmiBlitz3.ab3@6204>   ADDQ.l #1,D4
000240C6 <AmiBlitz3.ab3@6205>   BCLR #$0,D4
000240C8 <AmiBlitz3.ab3@6207>   TST.l d5        ; ??? make no sence ??
000240CC <AmiBlitz3.ab3@6208>   BNE 'l1
000240CE <AmiBlitz3.ab3@6212>   ADDQ.l #1,D5
000240D2 <AmiBlitz3.ab3@6213>   BCLR #$0,D5
000240D4 <AmiBlitz3.ab3@6215>   MOVE.l D2,D0
000240D6 <AmiBlitz3.ab3@6216>   ADD.l D3,D0
000240D8 <AmiBlitz3.ab3@6217>   ADD.l D4,D0
000240DA <AmiBlitz3.ab3@6218>   ADD.l D5,D0
000240E0 <AmiBlitz3.ab3@6220>   ADD.l #moremem,d0
000240E2 <AmiBlitz3.ab3@6222>   MOVE.l D0,D6
000240E8 <AmiBlitz3.ab3@6223>   MOVE.l #MemfPublic_MemfClear,D1
000240EE <AmiBlitz3.ab3@6225>   MOVE.l mempool,a0
000240F4 <AmiBlitz3.ab3@6226>   MOVEA.l _execbase,A6
000240F8 <AmiBlitz3.ab3@6227>   JSR _AllocVec(a6)                                        ;alloc mem for objectbuffer
000240FA <AmiBlitz3.ab3@6230>   TST.l D0
000240FE <AmiBlitz3.ab3@6231>   BEQ.w 'done
00024104 <AmiBlitz3.ab3@6232>   MOVE.l D6,objlen
0002410A <AmiBlitz3.ab3@6233>   MOVE.l D2,objectbuffer
00024110 <AmiBlitz3.ab3@6234>   MOVE.l D3,libsbuffer
00024116 <AmiBlitz3.ab3@6235>   MOVE.l D4,systembuffer
0002411C <AmiBlitz3.ab3@6236>   MOVE.l D5,databuffer
00024122 <AmiBlitz3.ab3@6237>   MOVE.l D0,destbufferstart
00024156 <AmiBlitz3.ab3@6241>   !ComData_SetL{comPtr_DestBufferStart,D0}
0002418A <AmiBlitz3.ab3@6242>   !ComData_SetL{comLong_DestBufferSize,D6} ; add that the Debugger have the right size of the buffer  tomsmart1 2016 02 06
0002418C <AmiBlitz3.ab3@6244>   ADD.l D2,D0
00024192 <AmiBlitz3.ab3@6245>   MOVE.l D0,destbufferend
00024194 <AmiBlitz3.ab3@6246>   ADD.l D3,D0
0002419A <AmiBlitz3.ab3@6247>   MOVE.l D0,data1start
0002419C <AmiBlitz3.ab3@6248>   ADD.l D4,D0
000241A2 <AmiBlitz3.ab3@6249>   MOVE.l D0,data2at
000241A4 <AmiBlitz3.ab3@6250>   ADD.l D5,D0
000241AA <AmiBlitz3.ab3@6251>   MOVE.l D0,allat
000241AC <AmiBlitz3.ab3@6254> RTS
000241B0 <AmiBlitz3.ab3@6258>   Dc.b $00,$00,$00,$01                                     ;         1
000241B4 <AmiBlitz3.ab3@6259>   Dc.b $00,$00,$00,$0A                                     ;        10
000241B8 <AmiBlitz3.ab3@6260>   Dc.b $00,$00,$00,$64                                     ;       100
000241BC <AmiBlitz3.ab3@6261>   Dc.b $00,$00,$03,$E8                                     ;      1000
000241C0 <AmiBlitz3.ab3@6262>   Dc.b $00,$00,$27,$10                                     ;     10000
000241C4 <AmiBlitz3.ab3@6263>   Dc.b $00,$01,$86,$A0                                     ;    100000
000241C8 <AmiBlitz3.ab3@6264>   Dc.b $00,$0F,$42,$40                                     ;   1000000
000241CC <AmiBlitz3.ab3@6265>   Dc.b $00,$98,$96,$80                                     ;  10000000
000241D0 <AmiBlitz3.ab3@6266>   Dc.b $05,$F5,$E1,$00                                     ; 100000000
000241D4 <AmiBlitz3.ab3@6267>   Dc.b $3B,$9A,$CA,$00                                     ;1000000000
000241D6 <AmiBlitz3.ab3@6271>   MOVEQ.l #$00,D1                                          ;no zero printed
000241D8 <AmiBlitz3.ab3@6272>   MOVEQ.l #$24,D3                                          ; "$"
000241DA <AmiBlitz3.ab3@6275>   MOVEQ.l #$30,D4                                          ; "0"
000241DE <AmiBlitz3.ab3@6278>     CMP.l divisors(PC,D3.W),D2
000241E2 <AmiBlitz3.ab3@6279>     BCS.w 'skip
000241E6 <AmiBlitz3.ab3@6280>     SUB.l divisors(PC,D3.W),D2
000241E8 <AmiBlitz3.ab3@6281>     ADDQ.w #1,D4
000241EC <AmiBlitz3.ab3@6282>  BRA.w 'loop2
000241F0 <AmiBlitz3.ab3@6285>   CMP.b #"0",D4
000241F4 <AmiBlitz3.ab3@6286>   BNE.w 'doit
000241F6 <AmiBlitz3.ab3@6287>   TST.w D1
000241FA <AmiBlitz3.ab3@6288>   BEQ.w 'skip2
000241FC <AmiBlitz3.ab3@6291>   MOVE.b D4,(A0)+
000241FE <AmiBlitz3.ab3@6292>   MOVEQ.l #$01,D1
00024200 <AmiBlitz3.ab3@6295>   SUBQ.w #4,D3
00024204 <AmiBlitz3.ab3@6296>   BPL.w 'loop
00024206 <AmiBlitz3.ab3@6297>   TST.w D1
0002420A <AmiBlitz3.ab3@6298>   BNE.w 'skip3
0002420E <AmiBlitz3.ab3@6299>   MOVE.b #"0",(A0)+
00024210 <AmiBlitz3.ab3@6302>   CLR.b (A0)
00024212 <AmiBlitz3.ab3@6303> RTS
00024232 <AmiBlitz3.ab3@6306> str_residentrequester:  Dc.b "Name of Resident File to Create",0 : Even        ;restext org source
000242F2 <AmiBlitz3.ab3@6307> str_residentpath:       Ds.l 48                                                ;respath org source
000243B2 <AmiBlitz3.ab3@6308> str_residentname:       Ds.l 48                                                ;resname org source
000243B8 <AmiBlitz3.ab3@6314>   MOVE.l macrobase,D0
000243BC <AmiBlitz3.ab3@6315>    BNE.w 'skip
000243C2 <AmiBlitz3.ab3@6316>   MOVE.l newtype_string,D0
000243C6 <AmiBlitz3.ab3@6317>    BNE.w 'skip
000243CC <AmiBlitz3.ab3@6318>   MOVEA.l labelbase,A2
000243D0 <AmiBlitz3.ab3@6321>     CMPA.w #$0,A2
000243D4 <AmiBlitz3.ab3@6322>      BEQ.w 'err
000243DC <AmiBlitz3.ab3@6323>     CMPI.l #$1,$4(A2)
000243E0 <AmiBlitz3.ab3@6324>      BEQ.w 'skip
000243E2 <AmiBlitz3.ab3@6325>     MOVEA.l (A2),A2
000243E6 <AmiBlitz3.ab3@6326>  BRA.w 'loop
00024410 <AmiBlitz3.ab3@6330>   !basic
00024472 <AmiBlitz3.ab3@6331> 
00024490 <AmiBlitz3.ab3@6332>   !asm
00024492 <AmiBlitz3.ab3@6334>  RTS
000244D0 <AmiBlitz3.ab3@6339>   !ComData_GetL{comFunc_ASLFileRequest,A3}
000244D6 <AmiBlitz3.ab3@6340>   LEA str_residentrequester,A2
000244DC <AmiBlitz3.ab3@6341>   LEA str_residentpath,A0
000244E2 <AmiBlitz3.ab3@6342>   LEA str_residentname,A1
0002450C <AmiBlitz3.ab3@6344>   !basic
00024544 <AmiBlitz3.ab3@6345>     Poke$ ?str_residentpath,my_residentsdir$
00024570 <AmiBlitz3.ab3@6346>     Poke$ ?str_residentname,".res"
0002458E <AmiBlitz3.ab3@6347>   !asm
00024590 <AmiBlitz3.ab3@6349>   JSR (A3)                                                 ;open ped filerequest
00024594 <AmiBlitz3.ab3@6350>   BEQ.w 'err
00024596 <AmiBlitz3.ab3@6354>   MOVE.l D0,D1
0002459C <AmiBlitz3.ab3@6355>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
000245A0 <AmiBlitz3.ab3@6356>   MOVEA.l _dosbase(PC),A6
000245A4 <AmiBlitz3.ab3@6357>   JSR _Open(A6)
000245A6 <AmiBlitz3.ab3@6358>   MOVE.l D0,D7               ;handle                                ;handle
000245AA <AmiBlitz3.ab3@6359>   BEQ.w 'err
000245AE <AmiBlitz3.ab3@6361>   MOVEM.l d2-d7/a0-a6,-(a7)
000245B4 <AmiBlitz3.ab3@6362>   LEA devo,a0
000245BA <AmiBlitz3.ab3@6363>   LEA ptr_parameterstore,a1
000245BC <AmiBlitz3.ab3@6366>     MOVE.b (a0)+,(a1)+
000245C0 <AmiBlitz3.ab3@6367>   BNE 'l1
000245C2 <AmiBlitz3.ab3@6368>   MOVEQ #13,d2
000245C8 <AmiBlitz3.ab3@6369>   JSR findlabel2
000245CC <AmiBlitz3.ab3@6370>   BNE 'd
000245D0 <AmiBlitz3.ab3@6371>   TST.l 8(a2)
000245D4 <AmiBlitz3.ab3@6372>   BEQ 'd2
000245FE <AmiBlitz3.ab3@6373>   !basic
00024660 <AmiBlitz3.ab3@6374>     error{!TRANS{"Cannot create Resident with develope debug 1"}}
0002467E <AmiBlitz3.ab3@6375>   !asm
00024682 <AmiBlitz3.ab3@6376>   MOVEM.l (a7)+,d2-d7/a0-a6
00024686 <AmiBlitz3.ab3@6377>   MOVEA.l _dosbase(PC),A6
00024688 <AmiBlitz3.ab3@6378>   MOVE.l d7,d1
0002468C <AmiBlitz3.ab3@6379>   JSR _Close(a6)
00024690 <AmiBlitz3.ab3@6380>  BRA 'err
00024694 <AmiBlitz3.ab3@6384>   MOVEM.l (a7)+,d2-d7/a0-a6
00024698 <AmiBlitz3.ab3@6386>   BSR.w call_setpointerbusy
0002469C <AmiBlitz3.ab3@6388>   BSR.w killoffs
0002469E <AmiBlitz3.ab3@6390>   MOVE.l D7,D1
000246A4 <AmiBlitz3.ab3@6391>   MOVE.l #tsthead,D2        ;header                               ;header
000246A6 <AmiBlitz3.ab3@6392>   MOVEQ.l #$20,D3
000246AA <AmiBlitz3.ab3@6393>   MOVEA.l _dosbase(PC),A6
000246AE <AmiBlitz3.ab3@6394>   JSR _Write(A6)
000246B0 <AmiBlitz3.ab3@6396>   MOVEQ.l #$00,D6           ;offset from start of file!                               ;offset from start of file!
000246B4 <AmiBlitz3.ab3@6397>   BSR.w restypes
000246B8 <AmiBlitz3.ab3@6398>   BSR.w resmacs
000246BC <AmiBlitz3.ab3@6399>   BSR.w resconsts
000246BE <AmiBlitz3.ab3@6401>   MOVE.l D6,D3
000246C0 <AmiBlitz3.ab3@6402>   ADDQ.l #3,D3
000246C6 <AmiBlitz3.ab3@6403>   ANDI.l #$FFFFFFFC,D3      ;long word align                               ;long word align
000246C8 <AmiBlitz3.ab3@6404>   MOVE.l D3,-(A7)
000246CA <AmiBlitz3.ab3@6405>   SUB.l D6,D3
000246CE <AmiBlitz3.ab3@6406>   BEQ.w 'noalign
000246D4 <AmiBlitz3.ab3@6407>   MOVE.l #writelist,D2      ; was #hello,
000246D6 <AmiBlitz3.ab3@6408>   MOVE.l D7,D1
000246DC <AmiBlitz3.ab3@6409>   MOVEA.l _dosbase,A6
000246E0 <AmiBlitz3.ab3@6410>   JSR _Write(A6)
000246EA <AmiBlitz3.ab3@6413>    MOVE.l hunkoffsetcounter,tstsize3
000246EE <AmiBlitz3.ab3@6414>    BEQ.w 'skip2a
000246F0 <AmiBlitz3.ab3@6415>   MOVE.l D7,D1
000246F6 <AmiBlitz3.ab3@6416>   MOVE.l #tstend,D2
000246F8 <AmiBlitz3.ab3@6417>   MOVEQ.l #$0C,D3
000246FE <AmiBlitz3.ab3@6418>   MOVEA.l _dosbase,A6
00024702 <AmiBlitz3.ab3@6419>    JSR _Write(A6)
00024708 <AmiBlitz3.ab3@6423>   MOVEA.l hunkoffsetbase,A2
0002470C <AmiBlitz3.ab3@6426>   CMPA.w #$0,A2
00024710 <AmiBlitz3.ab3@6427>    BEQ.w 'skip2
00024714 <AmiBlitz3.ab3@6428>   LEA $4(A2),A1
00024716 <AmiBlitz3.ab3@6429>   MOVE.l D7,D1
00024718 <AmiBlitz3.ab3@6430>   MOVE.l A1,D2
0002471A <AmiBlitz3.ab3@6431>   MOVEQ.l #$04,D3
00024720 <AmiBlitz3.ab3@6432>   MOVEA.l _dosbase,A6
00024724 <AmiBlitz3.ab3@6433>    JSR _Write(A6)
00024726 <AmiBlitz3.ab3@6434>   MOVEA.l (A2),A2
0002472A <AmiBlitz3.ab3@6435>  BRA.w 'oloop
0002472C <AmiBlitz3.ab3@6438>   MOVE.l D7,D1
00024732 <AmiBlitz3.ab3@6439>   MOVE.l #zero,D2
00024734 <AmiBlitz3.ab3@6440>   MOVEQ.l #$04,D3
0002473A <AmiBlitz3.ab3@6441>   MOVEA.l _dosbase,A6
0002473E <AmiBlitz3.ab3@6442>   JSR _Write(A6)
00024740 <AmiBlitz3.ab3@6445>   MOVE.l D7,D1
00024746 <AmiBlitz3.ab3@6446>   MOVE.l #tstdone,D2
00024748 <AmiBlitz3.ab3@6447>   MOVEQ.l #$04,D3
0002474E <AmiBlitz3.ab3@6448>   MOVEA.l _dosbase,A6
00024752 <AmiBlitz3.ab3@6449>    JSR _Write(A6)
00024754 <AmiBlitz3.ab3@6450>   MOVE.l (A7)+,D0
00024756 <AmiBlitz3.ab3@6451>   LSR.l #2,D0
0002475C <AmiBlitz3.ab3@6452>   MOVE.l D0,temp1
0002475E <AmiBlitz3.ab3@6454>   MOVE.l D7,D1
00024760 <AmiBlitz3.ab3@6455>   MOVEQ.l #$14,D2
00024762 <AmiBlitz3.ab3@6456>   MOVEQ.l #-$01,D3
00024766 <AmiBlitz3.ab3@6457>   JSR _Seek(A6)
00024768 <AmiBlitz3.ab3@6458>   MOVE.l D7,D1
0002476E <AmiBlitz3.ab3@6459>   MOVE.l #temp1,D2
00024770 <AmiBlitz3.ab3@6460>   MOVEQ.l #$04,D3
00024774 <AmiBlitz3.ab3@6461>    JSR _Write(A6)
00024776 <AmiBlitz3.ab3@6462>   MOVE.l D7,D1
00024778 <AmiBlitz3.ab3@6463>   MOVEQ.l #$1C,D2
0002477A <AmiBlitz3.ab3@6464>   MOVEQ.l #-$01,D3
0002477E <AmiBlitz3.ab3@6465>    JSR _Seek(A6)
00024780 <AmiBlitz3.ab3@6466>   MOVE.l D7,D1
00024786 <AmiBlitz3.ab3@6467>   MOVE.l #temp1,D2
00024788 <AmiBlitz3.ab3@6468>   MOVEQ.l #$04,D3
0002478C <AmiBlitz3.ab3@6469>    JSR _Write(A6)
0002478E <AmiBlitz3.ab3@6471>   MOVE.l D7,D1
00024792 <AmiBlitz3.ab3@6472>    JSR _Close(A6)
00024796 <AmiBlitz3.ab3@6473> BRA.w call_setpointernormal
00024798 <AmiBlitz3.ab3@6479>   ADDQ.w #5,D1
0002479A <AmiBlitz3.ab3@6480>   ADDQ.b #8,D0
0002479E <AmiBlitz3.ab3@6484>     CMPA.w #$0,A2
000247A2 <AmiBlitz3.ab3@6485>     BEQ.w 'done
000247A6 <AmiBlitz3.ab3@6486>      BSR.w writeitem
000247A8 <AmiBlitz3.ab3@6487>     MOVEA.l (A2),A2
000247AC <AmiBlitz3.ab3@6488>  BRA.w 'loop
000247AE <AmiBlitz3.ab3@6491> RTS
000247B0 <AmiBlitz3.ab3@6495>   MOVEQ.l #$00,D3
000247B4 <AmiBlitz3.ab3@6496>   MOVE.b $0(A2,D5.W),D3
000247B6 <AmiBlitz3.ab3@6497>   ADDQ.w #1,D3
000247BA <AmiBlitz3.ab3@6498>   BCLR #$0,D3                                              ;word align
000247BC <AmiBlitz3.ab3@6499>   MOVE.l (A2),-(A7)
000247C0 <AmiBlitz3.ab3@6500>    BEQ.w 'skip
000247C4 <AmiBlitz3.ab3@6501>    BSR.w 'resoff
000247C6 <AmiBlitz3.ab3@6502>   ADD.l D3,D6
000247C8 <AmiBlitz3.ab3@6503>   MOVE.l D6,(A2)
000247CA <AmiBlitz3.ab3@6504>   SUB.l D3,D6
000247CC <AmiBlitz3.ab3@6507>    ADD.l D3,D6
000247CE <AmiBlitz3.ab3@6508>   MOVE.l A2,D2
000247D0 <AmiBlitz3.ab3@6509>   MOVE.l D7,D1
000247D6 <AmiBlitz3.ab3@6510>   MOVEA.l _dosbase,A6
000247DA <AmiBlitz3.ab3@6511>    JSR _Write(A6)
000247DC <AmiBlitz3.ab3@6512>   MOVE.l (A7)+,(A2)
000247DE <AmiBlitz3.ab3@6513>  RTS
000247E0 <AmiBlitz3.ab3@6516>   MOVE.l D6,D2
000247E4 <AmiBlitz3.ab3@6517> BRA.w addhunkoffset
000247E8 <AmiBlitz3.ab3@6524>     CMPA.w #$0,A2
000247EC <AmiBlitz3.ab3@6525>      BEQ.w 'done
000247F2 <AmiBlitz3.ab3@6526>     MOVEA.l newtypebase,A1
000247F4 <AmiBlitz3.ab3@6527>     MOVEQ.l #$00,D1
000247F8 <AmiBlitz3.ab3@6530>       CMPA.w #$0,A1
000247FC <AmiBlitz3.ab3@6531>       BEQ.w 'found
00024800 <AmiBlitz3.ab3@6532>       CMPA.l $A(A2),A1
00024804 <AmiBlitz3.ab3@6533>        BEQ.w 'found
00024806 <AmiBlitz3.ab3@6534>       ADDQ.w #1,D1
00024808 <AmiBlitz3.ab3@6535>       MOVEA.l (A1),A1
0002480C <AmiBlitz3.ab3@6536>  BRA.w 'loop2
00024810 <AmiBlitz3.ab3@6539>     MOVE.w $A(A2),-(A7)
00024814 <AmiBlitz3.ab3@6540>     MOVE.w D1,$A(A2)
00024818 <AmiBlitz3.ab3@6541>      BSR.w writeitem
0002481C <AmiBlitz3.ab3@6542>     MOVE.w (A7)+,$A(A2)
0002481E <AmiBlitz3.ab3@6543>     MOVEA.l (A2),A2
00024822 <AmiBlitz3.ab3@6544>  BRA.w 'loop
00024824 <AmiBlitz3.ab3@6547> RTS
00024826 <AmiBlitz3.ab3@6551>   MOVEQ.l #$00,D0
0002482A <AmiBlitz3.ab3@6554>   CMPA.w #$0,A2
0002482E <AmiBlitz3.ab3@6555>    BEQ.w 'done
00024830 <AmiBlitz3.ab3@6556>   ADDQ.w #1,D0
00024832 <AmiBlitz3.ab3@6557>   MOVEA.l (A2),A2
00024836 <AmiBlitz3.ab3@6558>  BRA.w 'loop
0002483C <AmiBlitz3.ab3@6561>   MOVE.w D0,temp1
0002483E <AmiBlitz3.ab3@6562>   MOVE.l D7,D1
00024844 <AmiBlitz3.ab3@6563>   MOVE.l #temp1,D2
00024846 <AmiBlitz3.ab3@6564>   MOVEQ.l #$02,D3
00024848 <AmiBlitz3.ab3@6565>   ADDQ.l #2,D6
0002484E <AmiBlitz3.ab3@6566>   MOVEA.l _dosbase,A6
00024852 <AmiBlitz3.ab3@6567> JMP _Write(A6)
00024858 <AmiBlitz3.ab3@6574>    TST.b resdisable
0002485C <AmiBlitz3.ab3@6575>    BEQ 'l1
00024862 <AmiBlitz3.ab3@6576>    MOVE.l currentmacroaddr,a3
00024868 <AmiBlitz3.ab3@6577>    CMP.l #0,a3
0002486C <AmiBlitz3.ab3@6578>    BEQ 'l1
0002486E <AmiBlitz3.ab3@6579>    MOVE.l (a3),a3
00024872 <AmiBlitz3.ab3@6580>  BRA 'l2
00024878 <AmiBlitz3.ab3@6584>   MOVEA.l macrobase,A3                                     ;??begin org code??
0002487A <AmiBlitz3.ab3@6587>   MOVEA.l A3,A2
0002487E <AmiBlitz3.ab3@6588>   BSR.w countem
00024882 <AmiBlitz3.ab3@6591>    CMPA.w #$0,A3
00024886 <AmiBlitz3.ab3@6592>    BEQ.w 'done
00024888 <AmiBlitz3.ab3@6593>   MOVE.l D6,D5
0002488A <AmiBlitz3.ab3@6594>   MOVE.l (A3),-(A7)
0002488E <AmiBlitz3.ab3@6595>   MOVE.l $4(A3),-(A7)
00024890 <AmiBlitz3.ab3@6596>   MOVEQ.l #$00,D3
00024894 <AmiBlitz3.ab3@6597>   MOVE.b $C(A3),D3
00024896 <AmiBlitz3.ab3@6598>   ADDQ.w #1,D3
0002489A <AmiBlitz3.ab3@6599>   BCLR #$0,D3
0002489C <AmiBlitz3.ab3@6600>   ADD.l D3,D6                                              ;add len of struct
000248A0 <AmiBlitz3.ab3@6601>   TST.w $8(A3)
000248A4 <AmiBlitz3.ab3@6602>    BEQ.w 'notext
000248A8 <AmiBlitz3.ab3@6603>   MOVE.l D6,$4(A3)
000248AA <AmiBlitz3.ab3@6604>   MOVE.l D5,D2
000248AC <AmiBlitz3.ab3@6605>   ADDQ.l #4,D2
000248B0 <AmiBlitz3.ab3@6606>    BSR.w addhunkoffset
000248B2 <AmiBlitz3.ab3@6609>   MOVEQ.l #$00,D4
000248B6 <AmiBlitz3.ab3@6610>   MOVE.w $8(A3),D4
000248B8 <AmiBlitz3.ab3@6611>   ADDQ.w #1,D4
000248BC <AmiBlitz3.ab3@6612>   BCLR #$0,D4
000248BE <AmiBlitz3.ab3@6613>   ADD.l D4,D6
000248C0 <AmiBlitz3.ab3@6614>   TST.l (A3)
000248C4 <AmiBlitz3.ab3@6615>    BEQ.w 'nomore
000248C6 <AmiBlitz3.ab3@6616>   MOVE.l D6,(A3)
000248C8 <AmiBlitz3.ab3@6617>   MOVE.l D5,D2
000248CC <AmiBlitz3.ab3@6618>    BSR.w addhunkoffset
000248CE <AmiBlitz3.ab3@6621>   MOVE.l A3,D2
000248D0 <AmiBlitz3.ab3@6622>   MOVE.l D7,D1
000248D6 <AmiBlitz3.ab3@6623>    MOVEA.l _dosbase,A6
000248DA <AmiBlitz3.ab3@6624>    JSR _Write(a6)
000248DC <AmiBlitz3.ab3@6625>   TST.l D4
000248E0 <AmiBlitz3.ab3@6626>    BEQ.w 'skip
000248E2 <AmiBlitz3.ab3@6627>   MOVE.l (A7),D2
000248E4 <AmiBlitz3.ab3@6628>   MOVE.l D4,D3
000248E6 <AmiBlitz3.ab3@6629>   MOVE.l D7,D1
000248EC <AmiBlitz3.ab3@6630>     MOVEA.l _dosbase,A6
000248F0 <AmiBlitz3.ab3@6631>    JSR _Write(A6)
000248F4 <AmiBlitz3.ab3@6634>   MOVE.l (A7)+,$4(A3)
000248F6 <AmiBlitz3.ab3@6635>   MOVE.l (A7)+,(A3)
000248F8 <AmiBlitz3.ab3@6636>   MOVEA.l (A3),A3
000248FC <AmiBlitz3.ab3@6637>  BRA.w 'loop
000248FE <AmiBlitz3.ab3@6640> RTS
00024904 <AmiBlitz3.ab3@6645>   TST.b resdisable
00024908 <AmiBlitz3.ab3@6646>   BEQ 'l1
0002490E <AmiBlitz3.ab3@6647>   MOVE.l lastrestype,a3
00024914 <AmiBlitz3.ab3@6648>   CMP.l #0,a3
00024918 <AmiBlitz3.ab3@6649>   BEQ 'l1
0002491A <AmiBlitz3.ab3@6650>   MOVE.l (a3),a3
0002491E <AmiBlitz3.ab3@6651>  BRA 'l2
00024924 <AmiBlitz3.ab3@6655>   MOVEA.l newtype_string,A3
00024926 <AmiBlitz3.ab3@6658>   MOVEA.l A3,A2
0002492A <AmiBlitz3.ab3@6659>    BSR.w countem
0002492E <AmiBlitz3.ab3@6662>    CMPA.w #$0,A3
00024932 <AmiBlitz3.ab3@6663>    BEQ.w 'done
00024934 <AmiBlitz3.ab3@6664>   MOVE.l D6,-(A7)
00024938 <AmiBlitz3.ab3@6665>   MOVEA.l $4(A3),A2
0002493A <AmiBlitz3.ab3@6666>   MOVEQ.l #$0E,D5
0002493E <AmiBlitz3.ab3@6667>    BSR.w writeoffs
00024940 <AmiBlitz3.ab3@6669>   MOVE.l (A7)+,D0
00024944 <AmiBlitz3.ab3@6670>   MOVE.l $4(A3),-(A7)
00024948 <AmiBlitz3.ab3@6671>   MOVE.l D0,$4(A3)
0002494A <AmiBlitz3.ab3@6672>   MOVE.l D6,D2
0002494C <AmiBlitz3.ab3@6673>   ADDQ.l #4,D2
00024950 <AmiBlitz3.ab3@6674>    BSR.w addhunkoffset
00024952 <AmiBlitz3.ab3@6675>   MOVEQ.l #$00,D3
00024956 <AmiBlitz3.ab3@6676>   MOVE.b $A(A3),D3
00024958 <AmiBlitz3.ab3@6677>   ADDQ.w #1,D3
0002495C <AmiBlitz3.ab3@6678>   BCLR #$0,D3
0002495E <AmiBlitz3.ab3@6679>   ADD.l D3,D6
00024960 <AmiBlitz3.ab3@6680>   MOVE.l A3,D2
00024962 <AmiBlitz3.ab3@6681>   MOVE.l D7,D1
00024968 <AmiBlitz3.ab3@6682>     MOVEA.l _dosbase,A6
0002496C <AmiBlitz3.ab3@6683>     JSR _Write(A6)
00024970 <AmiBlitz3.ab3@6684>   MOVE.l (A7)+,$4(A3)
00024972 <AmiBlitz3.ab3@6685>   MOVEA.l (A3),A3
00024976 <AmiBlitz3.ab3@6686>  BRA.w 'loop
00024978 <AmiBlitz3.ab3@6689> RTS
0002497E <AmiBlitz3.ab3@6694>    TST.b resdisable
00024982 <AmiBlitz3.ab3@6695>    BEQ 'l1
00024988 <AmiBlitz3.ab3@6696>    MOVE.l currentlabeladdr,a2
0002498E <AmiBlitz3.ab3@6697>    CMP.l #0,a2
00024992 <AmiBlitz3.ab3@6698>    BEQ 'l1
00024994 <AmiBlitz3.ab3@6699>    MOVE.l (a2),a2
00024998 <AmiBlitz3.ab3@6700>  BRA 'l2
0002499E <AmiBlitz3.ab3@6704>    MOVEA.l labelbase,A2
000249A0 <AmiBlitz3.ab3@6707>    MOVEQ.l #$00,D0
000249A4 <AmiBlitz3.ab3@6710>    CMPA.w #$0,A2
000249A8 <AmiBlitz3.ab3@6711>    BEQ.w 'done
000249B0 <AmiBlitz3.ab3@6712>   CMPI.l #$1,$4(A2)
000249B4 <AmiBlitz3.ab3@6713>    BNE.w 'next
000249B6 <AmiBlitz3.ab3@6714>   ADDQ.w #1,D0
000249B8 <AmiBlitz3.ab3@6717>   MOVEA.l (A2),A2
000249BC <AmiBlitz3.ab3@6718>  BRA.w 'loop
000249C2 <AmiBlitz3.ab3@6721>   MOVE.w D0,temp1
000249C4 <AmiBlitz3.ab3@6722>   MOVE.l D7,D1
000249CA <AmiBlitz3.ab3@6723>   MOVE.l #temp1,D2
000249CC <AmiBlitz3.ab3@6724>   MOVEQ.l #$02,D3
000249CE <AmiBlitz3.ab3@6725>   ADDQ.l #2,D6
000249D4 <AmiBlitz3.ab3@6726>     MOVEA.l _dosbase,A6
000249D8 <AmiBlitz3.ab3@6727>     JSR _Write(A6)
000249DE <AmiBlitz3.ab3@6729>    TST.b resdisable
000249E2 <AmiBlitz3.ab3@6730>    BEQ 'done_l1
000249E8 <AmiBlitz3.ab3@6731>    MOVE.l currentlabeladdr,a2
000249EE <AmiBlitz3.ab3@6732>    CMP.l #0,a2
000249F2 <AmiBlitz3.ab3@6733>    BEQ 'done_l1
000249F4 <AmiBlitz3.ab3@6734>    MOVE.l (a2),a2
000249F8 <AmiBlitz3.ab3@6735>  BRA 'loop2
000249FE <AmiBlitz3.ab3@6739>    MOVEA.l labelbase,A2                                    ;write resident labels
00024A02 <AmiBlitz3.ab3@6742>    CMPA.w #$0,A2
00024A06 <AmiBlitz3.ab3@6743>    BEQ.w 'done2
00024A0E <AmiBlitz3.ab3@6744>   CMPI.l #$1,$4(A2)
00024A12 <AmiBlitz3.ab3@6745>    BNE.w 'next2
00024A14 <AmiBlitz3.ab3@6746>    MOVEQ.l #$00,D3
00024A18 <AmiBlitz3.ab3@6747>   MOVE.b $12(A2),D3                                        ;length
00024A1A <AmiBlitz3.ab3@6748>   ADDQ.w #1,D3
00024A1E <AmiBlitz3.ab3@6749>   BCLR #$0,D3
00024A20 <AmiBlitz3.ab3@6750>   MOVE.l D6,D2
00024A22 <AmiBlitz3.ab3@6751>   ADD.l D3,D6
00024A24 <AmiBlitz3.ab3@6752>   MOVE.l (A2),-(A7)
00024A26 <AmiBlitz3.ab3@6753>   TST.l (A2)
00024A2A <AmiBlitz3.ab3@6754>    BEQ.w 'nonext
00024A2C <AmiBlitz3.ab3@6755>   MOVE.l D6,(A2)
00024A30 <AmiBlitz3.ab3@6756>    BSR.w addhunkoffset
00024A32 <AmiBlitz3.ab3@6759>   MOVE.l A2,D2
00024A34 <AmiBlitz3.ab3@6760>   MOVE.l D7,D1
00024A3A <AmiBlitz3.ab3@6761>     MOVEA.l _dosbase,A6
00024A3E <AmiBlitz3.ab3@6762>     JSR _Write(A6)
00024A40 <AmiBlitz3.ab3@6763>   MOVE.l (A7)+,(A2)
00024A42 <AmiBlitz3.ab3@6766>   MOVEA.l (A2),A2
00024A46 <AmiBlitz3.ab3@6767>  BRA.w 'loop2
00024A48 <AmiBlitz3.ab3@6770> RTS
00024A72 <AmiBlitz3.ab3@6775>    !basic
00024A78 <AmiBlitz3.ab3@6776>     MOVE.l ptr_resfile,d0
00024A88 <AmiBlitz3.ab3@6777>     resfileP.l = Peek.l(?ptr_resfile)
00024A92 <AmiBlitz3.ab3@6778>     If resfileP
00024ABA <AmiBlitz3.ab3@6779>       resfile$ = Peek.s(resfileP)
00024B06 <AmiBlitz3.ab3@6780>       tests.b = Instr(resfile$,"/")
00024B52 <AmiBlitz3.ab3@6781>       testc.b = Instr(resfile$,":")
00024B74 <AmiBlitz3.ab3@6782>       If tests=0 AND testc=0
00024BF4 <AmiBlitz3.ab3@6783>         resfile$ = dos_AddPart{my_residentsdir$,resfile$}
00024C06 <AmiBlitz3.ab3@6784>         Poke.l ?ptr_resfile,&resfile$
00024C0C <AmiBlitz3.ab3@6786>     Else
00024C46 <AmiBlitz3.ab3@6787>       error{"INTERNAL: Invalid pointer in ptr_resfile!"}
00024C64 <AmiBlitz3.ab3@6789>    !asm
00024C66 <AmiBlitz3.ab3@6790> RTS
00024C6C <AmiBlitz3.ab3@6797> 
00024C72 <AmiBlitz3.ab3@6798>   MOVE.l A7,errstack
00024C7C <AmiBlitz3.ab3@6802>   MOVE.l #'next,errcont
00024C84 <AmiBlitz3.ab3@6803>   MOVE.w #$FFFF,ezerr         ; was -1
00024C88 <AmiBlitz3.ab3@6805>   BSR.w Aclearallvars
00024C8C <AmiBlitz3.ab3@6806>   BSR.w free_residents
00024C92 <AmiBlitz3.ab3@6808>   LEA residents_table,A5
00024C94 <AmiBlitz3.ab3@6809>   MOVEQ.l #$07,D6
00024C96 <AmiBlitz3.ab3@6812>     TST.b (A5)
00024C9A <AmiBlitz3.ab3@6813>     BEQ.w 'next
00024CA0 <AmiBlitz3.ab3@6814>     MOVE.l A5,ptr_resfile
00024CA4 <AmiBlitz3.ab3@6815>     BSR check_residentpath
00024CAA <AmiBlitz3.ab3@6816>     MOVE.l ptr_resfile,d1
00024CB0 <AmiBlitz3.ab3@6817>     MOVEA.l _dosbase,A6
00024CB4 <AmiBlitz3.ab3@6818>     JSR _LoadSeg(A6)
00024CB8 <AmiBlitz3.ab3@6819>     MOVE.l D0,$40(A5)
00024CBC <AmiBlitz3.ab3@6820>     BNE.w 'yeah
00024CC0 <AmiBlitz3.ab3@6822>     BSR.w reserr
00024CC2 <AmiBlitz3.ab3@6826>     MOVEA.l D0,A3
00024CC4 <AmiBlitz3.ab3@6827>     ADDA.l A3,A3
00024CC6 <AmiBlitz3.ab3@6828>     ADDA.l A3,A3
00024CC8 <AmiBlitz3.ab3@6829>     ADDQ.w #4,A3                                           ;start of res
00024CCC <AmiBlitz3.ab3@6831>     BSR.w fixtypes
00024CD0 <AmiBlitz3.ab3@6832>     BSR.w fixmacs                                        ;add macros to list
00024CD4 <AmiBlitz3.ab3@6833>     BSR.w fixconsts                                        ;read labels
00024CD8 <AmiBlitz3.ab3@6836>     LEA ResidentEntryStep(A5),A5       ;$44
00024CDC <AmiBlitz3.ab3@6837>   DBF D6,'loop
00024CE6 <AmiBlitz3.ab3@6842>   MOVE.l #free_residents,errcont
00024CEC <AmiBlitz3.ab3@6844>   MOVEA.l newtype_string,A3
00024CEE <AmiBlitz3.ab3@6845>   MOVEQ.l #$0B,D7
00024CF2 <AmiBlitz3.ab3@6846>   BSR.w checkclash
00024CF8 <AmiBlitz3.ab3@6848>   MOVEA.l macrobase,A3
00024CFA <AmiBlitz3.ab3@6849>   MOVEQ.l #$d,D7
00024CFE <AmiBlitz3.ab3@6850>   BSR.w checkclash
00024D04 <AmiBlitz3.ab3@6852>   MOVEA.l firstconst,A3
00024D06 <AmiBlitz3.ab3@6853>   MOVEQ.l #$19,D7
00024D0A <AmiBlitz3.ab3@6854>   BSR.w checkclash
00024D0C <AmiBlitz3.ab3@6857> RTS
00024D0E <AmiBlitz3.ab3@6861>   MOVEA.l A3,A4
00024D12 <AmiBlitz3.ab3@6864>     CMPA.w #$0,A4
00024D16 <AmiBlitz3.ab3@6865>     BEQ.w 'done
00024D1C <AmiBlitz3.ab3@6867>     LEA ptr_parameterstore,A0
00024D20 <AmiBlitz3.ab3@6868>     LEA $0(A4,D7.W),A1
00024D22 <AmiBlitz3.ab3@6869>     MOVEQ.l #-$01,D2
00024D24 <AmiBlitz3.ab3@6872>       ADDQ.w #1,D2
00024D26 <AmiBlitz3.ab3@6873>       MOVE.b (A1)+,(A0)+
00024D2A <AmiBlitz3.ab3@6874>     BNE.w 'loop2
00024D2C <AmiBlitz3.ab3@6875>     MOVEA.l A3,A2
00024D30 <AmiBlitz3.ab3@6878>     BSR.w findlab
00024D34 <AmiBlitz3.ab3@6879>     BNE.w 'next                                  ;not found
00024D36 <AmiBlitz3.ab3@6880>     CMPA.l A2,A4
00024D3A <AmiBlitz3.ab3@6882>     BEQ.w 'l1
00024D3C <AmiBlitz3.ab3@6883>     MOVE.l a1,a5
00024D40 <AmiBlitz3.ab3@6885>  BRA clasherr      ; was bne
00024D44 <AmiBlitz3.ab3@6888>  BRA.w 'more
00024D46 <AmiBlitz3.ab3@6891>     MOVEA.l (A4),A4
00024D4A <AmiBlitz3.ab3@6892>  BRA.w 'loop
00024D4C <AmiBlitz3.ab3@6895> RTS
00024D52 <AmiBlitz3.ab3@6899>   MOVEA.l _dosbase,A6
00024D58 <AmiBlitz3.ab3@6901>   LEA newtype_string,A0
00024D5E <AmiBlitz3.ab3@6902>   MOVE.l A0,lastrestype
00024D60 <AmiBlitz3.ab3@6903>   CLR.l (A0)
00024D66 <AmiBlitz3.ab3@6905>   LEA macrobase,A0
00024D6C <AmiBlitz3.ab3@6906>   MOVE.l A0,currentmacroaddr
00024D6E <AmiBlitz3.ab3@6907>   CLR.l (A0)
00024D74 <AmiBlitz3.ab3@6909>   LEA labelbase,A0
00024D7A <AmiBlitz3.ab3@6910>   MOVE.l A0,currentlabeladdr
00024D7C <AmiBlitz3.ab3@6911>   CLR.l (A0)
00024D82 <AmiBlitz3.ab3@6912>   CLR.w rescnt
00024DBA <AmiBlitz3.ab3@6916>   !ComData_SetB{comByte_DebugMode,debugmode}
00024DC0 <AmiBlitz3.ab3@6919>   LEA residents_table,A2
00024DC2 <AmiBlitz3.ab3@6920>   MOVEQ.l #$07,D2
00024DC6 <AmiBlitz3.ab3@6923>      MOVE.l $40(A2),D1
00024DCA <AmiBlitz3.ab3@6924>      BEQ.w 'next
00024DCE <AmiBlitz3.ab3@6925>       CLR.l $40(A2)
00024DD4 <AmiBlitz3.ab3@6926>       MOVEA.l _dosbase,A6
00024DD8 <AmiBlitz3.ab3@6927>       JSR _UnLoadSeg(A6)
00024DDC <AmiBlitz3.ab3@6930>      LEA ResidentEntryStep(A2),A2   ; $44
00024DE0 <AmiBlitz3.ab3@6931>  DBF D2,'loop
00024DE2 <AmiBlitz3.ab3@6933> RTS
00024DE4 <AmiBlitz3.ab3@6937>   MOVE.w (A3)+,D1
00024DE8 <AmiBlitz3.ab3@6938>   BEQ.w 'done
00024DEE <AmiBlitz3.ab3@6939>   MOVEA.l currentlabeladdr,A2
00024DF0 <AmiBlitz3.ab3@6940>   MOVE.l A3,(A2)
00024DF2 <AmiBlitz3.ab3@6941>   SUBQ.w #1,D1
00024DF4 <AmiBlitz3.ab3@6944>     MOVEA.l A3,A2
00024DF6 <AmiBlitz3.ab3@6945>     MOVEA.l (A3),A3
00024DFA <AmiBlitz3.ab3@6946>   DBF D1,'loop
00024DFC <AmiBlitz3.ab3@6949>   CLR.l (a2)                                               ;bugfix for object
00024E02 <AmiBlitz3.ab3@6951>   MOVE.l A2,currentlabeladdr
00024E04 <AmiBlitz3.ab3@6952>   MOVEA.l A2,A3
00024E06 <AmiBlitz3.ab3@6953>   MOVEQ.l #$00,D0
00024E0A <AmiBlitz3.ab3@6954>   MOVE.b $12(A3),D0
00024E0C <AmiBlitz3.ab3@6955>   ADDQ.w #1,D0
00024E10 <AmiBlitz3.ab3@6956>   BCLR #$0,D0
00024E12 <AmiBlitz3.ab3@6957>   ADDA.w D0,A3
00024E14 <AmiBlitz3.ab3@6960> RTS
00024E16 <AmiBlitz3.ab3@6964>   MOVE.w (A3)+,D1
00024E1A <AmiBlitz3.ab3@6965>   BEQ.w 'done
00024E20 <AmiBlitz3.ab3@6966>   MOVEA.l currentmacroaddr,A2
00024E22 <AmiBlitz3.ab3@6967>   MOVE.l A3,(A2)
00024E24 <AmiBlitz3.ab3@6968>   SUBQ.w #1,D1
00024E26 <AmiBlitz3.ab3@6971>     MOVEA.l A3,A2
00024E28 <AmiBlitz3.ab3@6972>     MOVEA.l (A3),A3
00024E2C <AmiBlitz3.ab3@6973>   DBF D1,'loop
00024E32 <AmiBlitz3.ab3@6975>   MOVE.l A2,currentmacroaddr
00024E34 <AmiBlitz3.ab3@6976>   MOVEA.l A2,A3
00024E36 <AmiBlitz3.ab3@6977>   MOVEQ.l #$00,D0
00024E3A <AmiBlitz3.ab3@6978>   MOVE.b $C(A3),D0
00024E3C <AmiBlitz3.ab3@6979>   ADDQ.w #1,D0
00024E40 <AmiBlitz3.ab3@6980>   BCLR #$0,D0
00024E44 <AmiBlitz3.ab3@6981>   MOVE.w $8(A3),D1
00024E46 <AmiBlitz3.ab3@6982>   ADDQ.w #1,D1
00024E4A <AmiBlitz3.ab3@6983>   BCLR #$0,D1
00024E4C <AmiBlitz3.ab3@6984>   ADDA.w D0,A3
00024E4E <AmiBlitz3.ab3@6985>   ADDA.w D1,A3
00024E50 <AmiBlitz3.ab3@6988> RTS
00024E52 <AmiBlitz3.ab3@6993>   MOVE.w (A3)+,D1            ;number of types to do
00024E56 <AmiBlitz3.ab3@6994>   BEQ.w 'done
00024E58 <AmiBlitz3.ab3@6995>   MOVE.w D1,-(A7)
00024E5A <AmiBlitz3.ab3@6996>   SUBQ.w #1,D1
00024E60 <AmiBlitz3.ab3@6997>   MOVEA.l lastrestype,A2
00024E62 <AmiBlitz3.ab3@6998>   MOVE.l A2,-(A7)
00024E64 <AmiBlitz3.ab3@7001>       MOVE.l (A3),D0          ;skip through offsets
00024E68 <AmiBlitz3.ab3@7002>       BEQ.w 'loopme
00024E6A <AmiBlitz3.ab3@7003>       MOVEA.l D0,A3
00024E6E <AmiBlitz3.ab3@7004>  BRA.w 'loop
00024E72 <AmiBlitz3.ab3@7007>       MOVE.b $E(A3),D0
00024E74 <AmiBlitz3.ab3@7008>       ADDQ.w #1,D0
00024E78 <AmiBlitz3.ab3@7009>       BCLR #$0,D0
00024E7A <AmiBlitz3.ab3@7010>       ADDA.w D0,A3            ;a3=type
00024E7C <AmiBlitz3.ab3@7011>       MOVE.l A3,(A2)          ;link
00024E7E <AmiBlitz3.ab3@7012>       MOVEA.l A3,A2
00024E80 <AmiBlitz3.ab3@7013>       MOVEQ.l #$00,D0
00024E84 <AmiBlitz3.ab3@7014>       MOVE.b $A(A3),D0
00024E86 <AmiBlitz3.ab3@7015>       ADDQ.w #1,D0
00024E8A <AmiBlitz3.ab3@7016>       BCLR #$0,D0
00024E8C <AmiBlitz3.ab3@7017>       ADDA.w D0,A3            ;next offset
00024E90 <AmiBlitz3.ab3@7018>   DBF D1,'loop
00024E92 <AmiBlitz3.ab3@7022>   MOVEA.l (A7)+,A0
00024E94 <AmiBlitz3.ab3@7023>   MOVEA.l (A0),A0
00024E98 <AmiBlitz3.ab3@7026>     CMPA.w #$0,A0
00024E9C <AmiBlitz3.ab3@7027>     BEQ.w 'fdone
00024EA0 <AmiBlitz3.ab3@7028>     MOVEA.l $4(A0),A1          ;first offset!
00024EA4 <AmiBlitz3.ab3@7031>     CMPA.w #$0,A1
00024EA8 <AmiBlitz3.ab3@7032>     BEQ.w 'fofd
00024EAC <AmiBlitz3.ab3@7034>     MOVE.w $A(A1),D0           ;number of type
00024EB2 <AmiBlitz3.ab3@7035>     MOVEA.l newtypebase,A4
00024EB6 <AmiBlitz3.ab3@7036>     CMP.w #$7,D0
00024EBA <AmiBlitz3.ab3@7037>     BCS.w 'fsys
00024EC0 <AmiBlitz3.ab3@7038>     SUB.w rescnt,D0
00024EC2 <AmiBlitz3.ab3@7041>     SUBQ.w #1,D0
00024EC6 <AmiBlitz3.ab3@7042>     BMI.w 'fdone2
00024EC8 <AmiBlitz3.ab3@7045>        MOVEA.l (A4),A4
00024ECC <AmiBlitz3.ab3@7046>   DBF D0,'floop3
00024ED0 <AmiBlitz3.ab3@7049>     MOVE.l A4,$A(A1)
00024ED2 <AmiBlitz3.ab3@7050>     MOVEA.l (A1),A1
00024ED6 <AmiBlitz3.ab3@7051>  BRA.w 'floop2
00024ED8 <AmiBlitz3.ab3@7054>     MOVEA.l (A0),A0
00024EDC <AmiBlitz3.ab3@7055>  BRA.w 'floop
00024EDE <AmiBlitz3.ab3@7058>   MOVE.w (A7)+,D0
00024EE4 <AmiBlitz3.ab3@7059>   ADD.w D0,rescnt
00024EEA <AmiBlitz3.ab3@7060>   MOVE.l A2,lastrestype
00024EEC <AmiBlitz3.ab3@7063> RTS
00024EF2 <AmiBlitz3.ab3@7070>   LEA tokens,A0
00024EF6 <AmiBlitz3.ab3@7071>   MOVE.w #$003A,D0                                         ; $003A : 58 dec
00024EF8 <AmiBlitz3.ab3@7074>     MOVEA.l (A0),A0
00024EFC <AmiBlitz3.ab3@7075>   DBF D0,'loop
00024F02 <AmiBlitz3.ab3@7077>   MOVEA.l #asmpnts,A1                                      ;create tokentab
00024F06 <AmiBlitz3.ab3@7078>   MOVE.w #$0076,D0        ; was #tnum-fnum-1,                                 ; $0076 : 118 dec
00024F0A <AmiBlitz3.ab3@7081>       LEA $6(A0),A2
00024F0C <AmiBlitz3.ab3@7084>         TST.b (A2)+
00024F10 <AmiBlitz3.ab3@7085>       BNE.w 'loop3
00024F12 <AmiBlitz3.ab3@7088>         TST.b (A2)+
00024F16 <AmiBlitz3.ab3@7089>       BNE.w 'loop4
00024F18 <AmiBlitz3.ab3@7091>       ADDQ.w #1,A2
00024F1A <AmiBlitz3.ab3@7092>       EXG.l D1,A2
00024F1E <AmiBlitz3.ab3@7093>       BCLR #$0,D1
00024F20 <AmiBlitz3.ab3@7094>       EXG.l D1,A2
00024F22 <AmiBlitz3.ab3@7095>       MOVE.l A2,(A1)+
00024F24 <AmiBlitz3.ab3@7096>       MOVEA.l (A0),A0
00024F28 <AmiBlitz3.ab3@7097>   DBF D0,'loop2
00024F2A <AmiBlitz3.ab3@7098> RTS
00024F2E <AmiBlitz3.ab3@7102>   BSR.w asmconst
00024F30 <AmiBlitz3.ab3@7103>   MOVEQ.l #$0B,D5
00024F32 <AmiBlitz3.ab3@7104> RTS
00024F34 <AmiBlitz3.ab3@7107> unmove:  Ds.w 1
00024F38 <AmiBlitz3.ab3@7111>   MOVE.w #$48E7,D1
00024F3C <AmiBlitz3.ab3@7112>   BSR.w writeword                                          ;movem.l -(a7)
00024F40 <AmiBlitz3.ab3@7113>   MOVE.w #$000F,D2
00024F42 <AmiBlitz3.ab3@7114>   SUB.w D4,D2
00024F44 <AmiBlitz3.ab3@7115>   MOVEQ.l #-$01,D1
00024F46 <AmiBlitz3.ab3@7116>   BCLR D2,D1
00024F4A <AmiBlitz3.ab3@7117>   BSR.w writeword
00024F4C <AmiBlitz3.ab3@7118>   MOVEQ.l #-$01,D1
00024F4E <AmiBlitz3.ab3@7119>   BCLR D4,D1
00024F54 <AmiBlitz3.ab3@7120>   MOVE.w D1,unmove
00024F56 <AmiBlitz3.ab3@7121> RTS
00024F5A <AmiBlitz3.ab3@7125>   MOVE.w #$4CDF,D1
00024F5E <AmiBlitz3.ab3@7126>   BSR.w writeword
00024F62 <AmiBlitz3.ab3@7127>   MOVE.w unmove(PC),D1
00024F66 <AmiBlitz3.ab3@7128>  BRA.w writeword
00024F6A <AmiBlitz3.ab3@7141>   BSR.w get_reg2
00024F6E <AmiBlitz3.ab3@7142>   CMP.w #$2C,D0                                            ;#','
00024F72 <AmiBlitz3.ab3@7143>    BNE.w syntaxerr
00024F78 <AmiBlitz3.ab3@7144>   MOVE.l #$48E7FFFE,D1                                     ;movem to stack
00024F7C <AmiBlitz3.ab3@7145>    BSR.w writelong
00024F7E <AmiBlitz3.ab3@7146>   MOVE.w D4,D1
00024F82 <AmiBlitz3.ab3@7147>   ORI.w #$2F00,D1
00024F86 <AmiBlitz3.ab3@7148>    BSR.w writeword
00024F8A <AmiBlitz3.ab3@7150>    BSR.w get1bytemain
00024F8E <AmiBlitz3.ab3@7151>    BSR.w getparameter
00024F92 <AmiBlitz3.ab3@7152>    BSR.w fetchvars
00024F96 <AmiBlitz3.ab3@7153>    BSR.w calcvar
00024F9A <AmiBlitz3.ab3@7154>    BTST #$E,D2
00024F9E <AmiBlitz3.ab3@7155>    BEQ.w 'notp
00024FA2 <AmiBlitz3.ab3@7158>    MOVE.b #$3,D2
00024FA6 <AmiBlitz3.ab3@7159>  BRA.w 'pd
00024FA8 <AmiBlitz3.ab3@7162>   TST.b D2
00024FAC <AmiBlitz3.ab3@7163>    BEQ.w 'issa
00024FB0 <AmiBlitz3.ab3@7164>   CMP.b #$7,D2
00024FB4 <AmiBlitz3.ab3@7165>    BEQ.w 'issa
00024FB8 <AmiBlitz3.ab3@7168>   BTST #$F,D2
00024FBC <AmiBlitz3.ab3@7169>    BNE.w 'nsimp
00024FC0 <AmiBlitz3.ab3@7170>   MOVE.w #$45ED,D1                                         ;lea x(a5),a2
00024FC4 <AmiBlitz3.ab3@7171>    BSR.w writeword
00024FC6 <AmiBlitz3.ab3@7172>   MOVE.w D3,D1
00024FCA <AmiBlitz3.ab3@7173>    BSR.w writeword
00024FCE <AmiBlitz3.ab3@7176>   MOVE.w #$201F,D1                                         ;move.l (a7)+,d0
00024FD2 <AmiBlitz3.ab3@7177>    BSR.w writeword
00024FD6 <AmiBlitz3.ab3@7178>   MOVE.w #$1480,D1
00024FDA <AmiBlitz3.ab3@7179>   CMP.b #$1,D2
00024FDE <AmiBlitz3.ab3@7180>    BEQ.w 'pg
00024FE2 <AmiBlitz3.ab3@7181>   EORI.w #$3000,D1
00024FE6 <AmiBlitz3.ab3@7182>   CMP.b #$2,D2
00024FEA <AmiBlitz3.ab3@7183>    BNE.w 'pg
00024FEE <AmiBlitz3.ab3@7184>   ORI.w #$1000,D1
00024FF2 <AmiBlitz3.ab3@7187>   BSR.w writeword
00024FF8 <AmiBlitz3.ab3@7188>   MOVE.l #$4CDF7FFF,D1
00024FFC <AmiBlitz3.ab3@7189> BRA.w writelong
00025000 <AmiBlitz3.ab3@7193>   BSR.w get_reg2
00025004 <AmiBlitz3.ab3@7194>   CMP.w #$2C,D0     ;','
00025008 <AmiBlitz3.ab3@7195>    BNE.w syntaxerr
0002500C <AmiBlitz3.ab3@7196>    BSR.w regmovems
0002500E <AmiBlitz3.ab3@7197>   MOVE.w D4,-(A7)
00025010 <AmiBlitz3.ab3@7198>   MOVEQ.l #$03,D2   ;get a long
00025014 <AmiBlitz3.ab3@7199>    BSR.w eval
00025016 <AmiBlitz3.ab3@7200>   MOVE.w (A7)+,D1
0002501A <AmiBlitz3.ab3@7201>    BEQ.w 'done
0002501E <AmiBlitz3.ab3@7202>   CMP.w #$8,D1
00025022 <AmiBlitz3.ab3@7203>    BCC.w 'addreg
00025024 <AmiBlitz3.ab3@7204>   LSL.w #8,D1
00025026 <AmiBlitz3.ab3@7205>   LSL.w #1,D1
0002502A <AmiBlitz3.ab3@7206>   ORI.w #$2000,D1
0002502E <AmiBlitz3.ab3@7207>    BSR.w writeword
00025032 <AmiBlitz3.ab3@7208>  BRA.w 'done
00025034 <AmiBlitz3.ab3@7211>   SUBQ.w #8,D1
00025036 <AmiBlitz3.ab3@7212>   LSL.w #8,D1
00025038 <AmiBlitz3.ab3@7213>   LSL.w #1,D1
0002503C <AmiBlitz3.ab3@7214>   ORI.w #$2040,D1
00025040 <AmiBlitz3.ab3@7215>   BSR.w writeword
00025044 <AmiBlitz3.ab3@7218> BRA.w dounmove
00025048 <AmiBlitz3.ab3@7223>   BSR.w get1bytemain
0002504C <AmiBlitz3.ab3@7226>   ORI.w #$20,D0
00025050 <AmiBlitz3.ab3@7227>   CMP.w #$64,D0       ;'d'
00025054 <AmiBlitz3.ab3@7228>    BEQ.w getan3
00025058 <AmiBlitz3.ab3@7229>   CMP.w #$61,D0       ;'a'
0002505C <AmiBlitz3.ab3@7230>    BNE.w syntaxerr
00025060 <AmiBlitz3.ab3@7231>    BSR.w getan3
00025062 <AmiBlitz3.ab3@7232>   ADDQ.w #8,D4
00025064 <AmiBlitz3.ab3@7233> RTS
00025090 <AmiBlitz3.ab3@7238>   !fget                                                   ;bsr.w get1bytemain
00025094 <AmiBlitz3.ab3@7240>   ORI.w #$20,D0
00025098 <AmiBlitz3.ab3@7243>   CMP.w #$61,D0     ;'a'
0002509C <AmiBlitz3.ab3@7244>   BNE.w syntaxerr
000250C8 <AmiBlitz3.ab3@7248>   !fget                                                    ;bsr.w get1bytemain
000250CC <AmiBlitz3.ab3@7250>   SUBI.w #$30,D0
000250D0 <AmiBlitz3.ab3@7251>    BMI.w syntaxerr
000250D4 <AmiBlitz3.ab3@7252>   CMP.w #$7,D0
000250D8 <AmiBlitz3.ab3@7253>    BHI.w syntaxerr
000250DA <AmiBlitz3.ab3@7254>   MOVE.w D0,D4
00025106 <AmiBlitz3.ab3@7256>   !fget
00025108 <AmiBlitz3.ab3@7258> RTS                                                        ;bra.w get1bytemain
0002510A <AmiBlitz3.ab3@7262>   ADDQ.w #8,D4
0002510C <AmiBlitz3.ab3@7265>   MOVEQ.l #$00,D5    ;bits for reg
00025110 <AmiBlitz3.ab3@7266>   SUBI.w #$30,D4
00025114 <AmiBlitz3.ab3@7269>   CMP.w #$2D,D0      ;'-'
00025118 <AmiBlitz3.ab3@7270>    BEQ.w 'range
0002511C <AmiBlitz3.ab3@7271>   CMP.w #$2F,D0      ;'/'
00025120 <AmiBlitz3.ab3@7272>    BEQ.w 'one
00025124 <AmiBlitz3.ab3@7273>  BRA.w syntaxerr
00025126 <AmiBlitz3.ab3@7276>   BSET D4,D5
00025128 <AmiBlitz3.ab3@7279>   MOVE.w D5,D4
0002512A <AmiBlitz3.ab3@7280>   MOVEQ.l #$0F,D5
0002512C <AmiBlitz3.ab3@7281>  RTS
0002512E <AmiBlitz3.ab3@7284>   BSET D4,D5
00025132 <AmiBlitz3.ab3@7285>   BSR.w get_reg
00025144 <AmiBlitz3.ab3@7287>   !compare3                                                ;bsr.w tstend2
00025148 <AmiBlitz3.ab3@7289>   BNE.w 'loop
0002514C <AmiBlitz3.ab3@7290>  BRA.w 'done2
0002514E <AmiBlitz3.ab3@7293>   MOVE.w D4,D1    ;from
00025152 <AmiBlitz3.ab3@7294>    BSR.w get_reg
00025154 <AmiBlitz3.ab3@7295>   CMP.w D4,D1
00025158 <AmiBlitz3.ab3@7296>    BLS.w 'loop2
0002515A <AmiBlitz3.ab3@7297>   EXG.l D4,D1
0002515C <AmiBlitz3.ab3@7300>   BSET D1,D5
0002515E <AmiBlitz3.ab3@7301>   ADDQ.w #1,D1
00025160 <AmiBlitz3.ab3@7302>   CMP.w D4,D1
00025164 <AmiBlitz3.ab3@7303>    BLS.w 'loop2
00025176 <AmiBlitz3.ab3@7305>   !compare3                                                ;bsr.w tstend2
0002517A <AmiBlitz3.ab3@7307>   BNE.w 'loop
0002517E <AmiBlitz3.ab3@7308> BRA.w 'done
00025180 <AmiBlitz3.ab3@7314>   MOVEA.l A5,A4                                            ;bsr.w get1bytemain
000251AC <AmiBlitz3.ab3@7316>    !fget
000251B0 <AmiBlitz3.ab3@7318>   CMP.w #$23,D0       ;'#'
000251B4 <AmiBlitz3.ab3@7319>    BEQ.w getimm
000251B8 <AmiBlitz3.ab3@7320>   CMP.w #$28,D0       ;'('
000251BC <AmiBlitz3.ab3@7321>    BEQ.w 'ind
000251C0 <AmiBlitz3.ab3@7322>   CMP.w #$2D,D0       ;'-'
000251C4 <AmiBlitz3.ab3@7323>    BNE.w 'more
000251F0 <AmiBlitz3.ab3@7325>    !fget                                                   ;bsr.w get1bytemain       -(
000251F4 <AmiBlitz3.ab3@7327>   CMP.w #$28,D0       ;'('
000251F8 <AmiBlitz3.ab3@7328>    BNE.w 'notccr
000251FC <AmiBlitz3.ab3@7329>    BSR.w getan
00025200 <AmiBlitz3.ab3@7330>   CMP.w #$29,D0       ;')'
00025204 <AmiBlitz3.ab3@7331>    BNE.w syntaxerr
00025206 <AmiBlitz3.ab3@7332>   MOVEQ.l #$04,D5
00025232 <AmiBlitz3.ab3@7334>   !fget                                                    ;bsr.w get1bytemain  
00025234 <AmiBlitz3.ab3@7335>  RTS
00025238 <AmiBlitz3.ab3@7339>   BSR.w getan
0002523C <AmiBlitz3.ab3@7340>   CMP.w #$29,D0      ;')'
00025240 <AmiBlitz3.ab3@7341>    BNE.w syntaxerr
0002526C <AmiBlitz3.ab3@7343>   !fget
00025270 <AmiBlitz3.ab3@7345>   CMP.w #$2B,D0      ;'+'
00025274 <AmiBlitz3.ab3@7346>    BEQ.w 'postinc
00025276 <AmiBlitz3.ab3@7347>   MOVEQ.l #$02,D5
00025278 <AmiBlitz3.ab3@7348>  RTS
0002527A <AmiBlitz3.ab3@7351>   MOVEQ.l #$03,D5
000252A6 <AmiBlitz3.ab3@7353>   !fget                                                    ;bra.w get1bytemain
000252A8 <AmiBlitz3.ab3@7354>  RTS
000252AC <AmiBlitz3.ab3@7358>   ORI.w #$20,D0
000252AE <AmiBlitz3.ab3@7359>   MOVE.w D0,D1      ;first
000252DA <AmiBlitz3.ab3@7361>    !fget                                                   ;bsr.w get1bytemain  ;get second
000252DE <AmiBlitz3.ab3@7363>   CMP.w #$64,D1     ;'d'
000252E2 <AmiBlitz3.ab3@7364>    BNE.w 'notdn
000252E6 <AmiBlitz3.ab3@7365>   CMP.w #$30,D0     ;'0'
000252EA <AmiBlitz3.ab3@7366>    BCS.w 'notan
000252EE <AmiBlitz3.ab3@7367>   CMP.w #$37,D0     ;'7'
000252F2 <AmiBlitz3.ab3@7368>    BHI.w 'notan
000252F4 <AmiBlitz3.ab3@7369>   MOVE.w D0,D4
00025320 <AmiBlitz3.ab3@7371>    !fget                                                   ;bsr.w get1bytemain
00025332 <AmiBlitz3.ab3@7372>    !compare3                                               ;bsr.w tstend2
00025336 <AmiBlitz3.ab3@7374>    BEQ.w 'dn
0002533A <AmiBlitz3.ab3@7375>   CMP.w #$2D,D0     ;'-'
0002533E <AmiBlitz3.ab3@7376>    BEQ.w getmovem
00025342 <AmiBlitz3.ab3@7377>   CMP.w #$2F,D0     ;'/'
00025346 <AmiBlitz3.ab3@7378>    BEQ.w getmovem
0002534A <AmiBlitz3.ab3@7379>  BRA.w 'notan2
0002534C <AmiBlitz3.ab3@7382>   MOVEQ.l #$00,D5
00025350 <AmiBlitz3.ab3@7383>   SUBI.w #$30,D4
00025352 <AmiBlitz3.ab3@7384>  RTS
00025356 <AmiBlitz3.ab3@7387>    CMP.w #$61,D1    ;'a'
0002535A <AmiBlitz3.ab3@7388>    BNE.w 'notan
0002535E <AmiBlitz3.ab3@7390>   CMP.w #$30,D0     ;'0'
00025362 <AmiBlitz3.ab3@7391>    BCS.w 'notan
00025366 <AmiBlitz3.ab3@7392>   CMP.w #$37,D0     ;'7'
0002536A <AmiBlitz3.ab3@7393>    BHI.w 'notan
0002536C <AmiBlitz3.ab3@7394>   MOVE.w D0,D4
00025398 <AmiBlitz3.ab3@7396>    !fget                                                   ;bsr.w get1bytemain
000253AA <AmiBlitz3.ab3@7397>    !compare3                                               ;bsr.w tstend2
000253AE <AmiBlitz3.ab3@7399>    BEQ.w 'an
000253B2 <AmiBlitz3.ab3@7400>   CMP.w #$2D,D0     ;'-'
000253B6 <AmiBlitz3.ab3@7401>    BEQ.w getmovem2                                         ;movem
000253BA <AmiBlitz3.ab3@7402>   CMP.w #$2F,D0     ;'/'
000253BE <AmiBlitz3.ab3@7403>    BEQ.w getmovem2
000253C2 <AmiBlitz3.ab3@7404>  BRA.w 'notan2
000253C4 <AmiBlitz3.ab3@7410>   MOVEQ.l #1,d5
000253C8 <AmiBlitz3.ab3@7411>   SUBI.w #$30,D4
000253CC <AmiBlitz3.ab3@7413>   BRA 'l10
000253CE <AmiBlitz3.ab3@7414>   ADDQ.w #8,d4                             ; ??? looks like dead code ???
000253D0 <AmiBlitz3.ab3@7415>   MOVEQ #0,d5                              ;   "
000253D2 <AmiBlitz3.ab3@7416>   BSET d4,d5                               ;   "
000253D4 <AmiBlitz3.ab3@7417>   MOVE.w d5,d4                             ;   "
000253D6 <AmiBlitz3.ab3@7418>   MOVEQ.l #$0f,D5                          ;   "             ;01
000253D8 <AmiBlitz3.ab3@7422>  RTS
000253DC <AmiBlitz3.ab3@7425>   ORI.w #$20,D0
000253DE <AmiBlitz3.ab3@7426>   MOVE.w D0,D4
0002540A <AmiBlitz3.ab3@7427>    !fget                                                   ;bsr.w get1bytemain ;get third
0002541C <AmiBlitz3.ab3@7432>   !compare3                                                ;bsr.w tstend2
00025420 <AmiBlitz3.ab3@7434>    BNE.w 'notsx
00025424 <AmiBlitz3.ab3@7435>   CMP.w #$73,D1       ;'s'
00025428 <AmiBlitz3.ab3@7436>    BNE.w 'notsx
0002542C <AmiBlitz3.ab3@7437>   CMP.w #$70,D4       ;'p'
00025430 <AmiBlitz3.ab3@7438>    BNE.w 'notsp
00025442 <AmiBlitz3.ab3@7440>    !compare3                                               ;bsr.w tstend2
00025446 <AmiBlitz3.ab3@7442>    BNE.w 'notccr
00025448 <AmiBlitz3.ab3@7446>   MOVEQ.l #$07,D4
0002544A <AmiBlitz3.ab3@7447>   MOVEQ.l #$01,D5
0002544C <AmiBlitz3.ab3@7448>  RTS
00025450 <AmiBlitz3.ab3@7451>   CMP.w #$72,D4      ;'r'
00025454 <AmiBlitz3.ab3@7452>    BNE.w 'notccr
00025466 <AmiBlitz3.ab3@7454>    !compare3                                               ;bsr.w tstend2
0002546A <AmiBlitz3.ab3@7456>    BNE.w 'notccr
0002546C <AmiBlitz3.ab3@7457>   MOVEQ.l #$0D,D5
0002546E <AmiBlitz3.ab3@7458>  RTS
00025472 <AmiBlitz3.ab3@7461>   ORI.w #$20,D0
00025476 <AmiBlitz3.ab3@7462>   CMP.w #$63,D1      ;'c'
0002547A <AmiBlitz3.ab3@7463>    BNE.w 'notccr0
0002547E <AmiBlitz3.ab3@7464>   CMP.w #$63,D4      ;'c'
00025482 <AmiBlitz3.ab3@7465>    BNE.w 'notccr
00025486 <AmiBlitz3.ab3@7466>   CMP.w #$72,D0      ;'r'
0002548A <AmiBlitz3.ab3@7467>    BNE.w 'notccr
0002548E <AmiBlitz3.ab3@7468>    BSR.w get1bytemain                                      ;??wy not !fget
00025492 <AmiBlitz3.ab3@7469>    BEQ.w 'ccr
00025496 <AmiBlitz3.ab3@7470>   CMP.w #$2C,D0
0002549A <AmiBlitz3.ab3@7471>    BNE.w 'notccr
0002549C <AmiBlitz3.ab3@7477>   MOVEQ.l #$0C,D5
0002549E <AmiBlitz3.ab3@7478>  RTS
000254A2 <AmiBlitz3.ab3@7481>   CMP.w #$75,D1      ;'u'
000254A6 <AmiBlitz3.ab3@7482>    BNE.w 'notccr
000254AA <AmiBlitz3.ab3@7483>   CMP.w #$73,D4      ;'s'
000254AE <AmiBlitz3.ab3@7484>    BNE.w 'notccr
000254B2 <AmiBlitz3.ab3@7485>   CMP.w #$70,D0      ;'p'
000254B6 <AmiBlitz3.ab3@7486>    BNE.w 'notccr
000254BA <AmiBlitz3.ab3@7487>    BSR.w get1bytemain                                      ;??wy not !fget
000254BE <AmiBlitz3.ab3@7488>    BEQ.w 'usp
000254C2 <AmiBlitz3.ab3@7489>   CMP.w #$2C,D0      ;','
000254C6 <AmiBlitz3.ab3@7490>    BNE.w 'notccr
000254C8 <AmiBlitz3.ab3@7493>   MOVEQ.l #$0E,D5
000254CA <AmiBlitz3.ab3@7494>  RTS
000254CC <AmiBlitz3.ab3@7500>   MOVEA.l A4,A5
000254D0 <AmiBlitz3.ab3@7501>    BSR.w asmconst
000254E2 <AmiBlitz3.ab3@7504>    !compare3                                               ;bsr.w tstend2
000254E6 <AmiBlitz3.ab3@7506>    BEQ.w 'abs1
000254EA <AmiBlitz3.ab3@7507>   CMP.w #$2E,D0      ;'.'
000254EE <AmiBlitz3.ab3@7508>    BEQ.w 'absx
000254F2 <AmiBlitz3.ab3@7509>   CMP.w #$28,D0      ;'('
000254F6 <AmiBlitz3.ab3@7510>    BNE.w syntaxerr
000254FA <AmiBlitz3.ab3@7511>    BSR.w get1bytemain                                      ;??wy not !fget
000254FE <AmiBlitz3.ab3@7512>   ORI.w #$20,D0
00025502 <AmiBlitz3.ab3@7513>   CMP.w #$70,D0      ;'p'
00025506 <AmiBlitz3.ab3@7514>    BNE.w 'notpcrel
0002550A <AmiBlitz3.ab3@7515>    BSR.w get1bytemain                                      ;??wy not !fget
0002550E <AmiBlitz3.ab3@7516>   ORI.w #$20,D0
00025512 <AmiBlitz3.ab3@7517>   CMP.w #$63,D0      ;'c'
00025516 <AmiBlitz3.ab3@7518>    BNE.w syntaxerr
0002551A <AmiBlitz3.ab3@7519>    BSR.w get1bytemain                                      ;??wy not !fget
0002551E <AmiBlitz3.ab3@7520>    BSR.w getrest
00025520 <AmiBlitz3.ab3@7521>   ADDQ.w #4,D5
00025522 <AmiBlitz3.ab3@7522>  RTS
00025526 <AmiBlitz3.ab3@7525>   BSR.w getan2
0002552A <AmiBlitz3.ab3@7526>  BRA.w getrest
0002552E <AmiBlitz3.ab3@7529>    BSR.w get1bytemain                                     ;??wy not !fget
00025532 <AmiBlitz3.ab3@7530>   ORI.w #$20,D0
00025536 <AmiBlitz3.ab3@7531>   CMP.w #$77,D0      ;'w'
0002553A <AmiBlitz3.ab3@7532>    BEQ.w 'absw
0002553E <AmiBlitz3.ab3@7533>   CMP.w #$6C,D0      ;'l'
00025542 <AmiBlitz3.ab3@7534>    BNE.w syntaxerr
00025544 <AmiBlitz3.ab3@7537>   MOVEQ.l #$08,D5
00025546 <AmiBlitz3.ab3@7538>  RTS
00025548 <AmiBlitz3.ab3@7541>   MOVEQ.l #$07,D5
0002554A <AmiBlitz3.ab3@7542> RTS
0002554C <AmiBlitz3.ab3@7546>   TST.w D0
00025550 <AmiBlitz3.ab3@7547>    BEQ.w 'ok
00025554 <AmiBlitz3.ab3@7548>   CMP.w #$3A,D0       ;':'
00025558 <AmiBlitz3.ab3@7549>    BEQ.w 'ok
0002555C <AmiBlitz3.ab3@7550>   CMP.w #$2C,D0       ;','
0002555E <AmiBlitz3.ab3@7553> RTS
00025562 <AmiBlitz3.ab3@7557>   CMP.w #$2C,D0       ;','
00025566 <AmiBlitz3.ab3@7558>    BNE.w 'dis
0002556A <AmiBlitz3.ab3@7559>    BSR.w get1bytemain                                      ;??wy not !fget
0002556E <AmiBlitz3.ab3@7560>   ORI.w #$20,D0
00025570 <AmiBlitz3.ab3@7561>   MOVEQ.l #$00,D1
00025574 <AmiBlitz3.ab3@7562>   CMP.w #$64,D0       ;'d'
00025578 <AmiBlitz3.ab3@7563>    BEQ.w 'ianxi
0002557C <AmiBlitz3.ab3@7564>   CMP.w #$61,D0       ;'a'
00025580 <AmiBlitz3.ab3@7565>    BNE.w syntaxerr
00025584 <AmiBlitz3.ab3@7566>   BSET #$F,D1
00025588 <AmiBlitz3.ab3@7569>    BSR.w get1bytemain                                      ;??wy not !fget
0002558C <AmiBlitz3.ab3@7570>   SUBI.w #$30,D0
00025590 <AmiBlitz3.ab3@7571>    BMI.w syntaxerr
00025594 <AmiBlitz3.ab3@7572>   CMP.w #$7,D0
00025598 <AmiBlitz3.ab3@7573>    BHI.w syntaxerr
0002559A <AmiBlitz3.ab3@7574>   LSL.w #8,D0
0002559C <AmiBlitz3.ab3@7575>   LSL.w #4,D0
0002559E <AmiBlitz3.ab3@7576>   OR.w D0,D1
000255A2 <AmiBlitz3.ab3@7577>    BSR.w get1bytemain                                      ;??wy not !fget
000255A6 <AmiBlitz3.ab3@7578>   CMP.w #$2E,D0       ;'.'
000255AA <AmiBlitz3.ab3@7579>    BNE.w 'ok2
000255AE <AmiBlitz3.ab3@7580>    BSR.w get1bytemain                                      ;??wy not !fget
000255B2 <AmiBlitz3.ab3@7581>   ORI.w #$20,D0
000255B6 <AmiBlitz3.ab3@7582>   CMP.w #$77,D0       ;'w'
000255BA <AmiBlitz3.ab3@7583>    BEQ.w 'ok
000255BE <AmiBlitz3.ab3@7584>   CMP.w #$6C,D0       ;'l'
000255C2 <AmiBlitz3.ab3@7585>    BNE.w syntaxerr
000255C6 <AmiBlitz3.ab3@7586>   BSET #$B,D1
000255CA <AmiBlitz3.ab3@7589>    BSR.w get1bytemain                                      ;??wy not !fget
000255CE <AmiBlitz3.ab3@7593>    CMP.b #"*",d0                                            ;020 * Mode
000255D2 <AmiBlitz3.ab3@7594>             BNE 'l1
000255D6 <AmiBlitz3.ab3@7595>             BSR.w get1bytemain                             ;??wy not !fget
000255DA <AmiBlitz3.ab3@7596>             CMP.b #"2",d0
000255DE <AmiBlitz3.ab3@7597>             BNE 'l2
000255E2 <AmiBlitz3.ab3@7598>             OR.w #$200,d1
000255E6 <AmiBlitz3.ab3@7599>  BRA 'l1b
000255EA <AmiBlitz3.ab3@7602>             CMP.b #"4",d0
000255EE <AmiBlitz3.ab3@7603>             BNE 'l3
000255F2 <AmiBlitz3.ab3@7604>             OR.w #$400,d1
000255F6 <AmiBlitz3.ab3@7605>  BRA 'l1b
000255FA <AmiBlitz3.ab3@7608>             CMP.b #"8",d0
000255FE <AmiBlitz3.ab3@7609>             BNE syntaxerr
00025602 <AmiBlitz3.ab3@7610>             OR.w #$600,d1
00025606 <AmiBlitz3.ab3@7613>         BSR.w get1bytemain                                 ;??wy not !fget
0002560A <AmiBlitz3.ab3@7617>   CMP.w #$29,D0       ;')'
0002560E <AmiBlitz3.ab3@7618>    BNE.w syntaxerr
00025614 <AmiBlitz3.ab3@7619>   MOVE.w D1,extraword
00025616 <AmiBlitz3.ab3@7620>   MOVEQ.l #$06,D5
0002561A <AmiBlitz3.ab3@7621>  BRA.w get1bytemain                                         ;??wy not !fget
0002561E <AmiBlitz3.ab3@7624>   CMP.w #")",D0                                            ;")"
00025622 <AmiBlitz3.ab3@7625>    BNE.w errorbracketmiss                                  ; was syntax error
00025624 <AmiBlitz3.ab3@7626>   MOVEQ.l #$05,D5
00025628 <AmiBlitz3.ab3@7627> BRA.w get1bytemain                                         ;??wy not !fget
0002562E <AmiBlitz3.ab3@7634>   MOVEA.l asmbuff,A0
00025634 <AmiBlitz3.ab3@7635>   MOVE.w ininclude,D1
0002563A <AmiBlitz3.ab3@7636>   OR.w inmacro,D1
0002563C <AmiBlitz3.ab3@7637>   MOVE.w D1,(A0)+                                          ;flag!
00025640 <AmiBlitz3.ab3@7638>    BNE.w copyconst
00025642 <AmiBlitz3.ab3@7639>   MOVE.l A5,-(A7)
00025646 <AmiBlitz3.ab3@7640>    BSR.w copyconst
0002564C <AmiBlitz3.ab3@7641>   MOVEA.l asmbuff,A0
00025650 <AmiBlitz3.ab3@7642>   CMP.w #$4,D1
00025654 <AmiBlitz3.ab3@7643>    BLS.w 'leave
0002565A <AmiBlitz3.ab3@7644>   TST.w lc
0002565E <AmiBlitz3.ab3@7645>    BNE.w 'leave
00025660 <AmiBlitz3.ab3@7646>   ADDQ.w #2,A0
00025662 <AmiBlitz3.ab3@7647>   MOVE.l (A7)+,(A0)+
00025664 <AmiBlitz3.ab3@7648>   CLR.b (A0)
0002566C <AmiBlitz3.ab3@7649>   MOVE.w #$0004,asmlen2                                    ;pointer + 0
0002566E <AmiBlitz3.ab3@7650>  RTS
00025670 <AmiBlitz3.ab3@7653>   NOT.w (A0)
00025672 <AmiBlitz3.ab3@7654>   ADDQ.w #4,A7
00025674 <AmiBlitz3.ab3@7655> RTS
00025676 <AmiBlitz3.ab3@7658> lc:  Ds.w 1
0002567C <AmiBlitz3.ab3@7662>   CLR.w lc
0002567E <AmiBlitz3.ab3@7663>   MOVEQ.l #$00,D1
00025680 <AmiBlitz3.ab3@7666>    ADDQ.w #1,D1                                            ;label name
000256AC <AmiBlitz3.ab3@7668>    !fget                                                   ;bsr.w get1bytemain
000256B0 <AmiBlitz3.ab3@7670>    BEQ.w 'done
000256B4 <AmiBlitz3.ab3@7673>    CMP.w #$22,d0
000256B8 <AmiBlitz3.ab3@7674>    BNE.s 'loop_l10
000256BE <AmiBlitz3.ab3@7675>    NOT.w instringon
000256C2 <AmiBlitz3.ab3@7678>    CMP.w #":",d0
000256C6 <AmiBlitz3.ab3@7679>    BNE.s 'loop_l11
000256CC <AmiBlitz3.ab3@7680>    TST.w instringon
000256D0 <AmiBlitz3.ab3@7681>    BEQ 'done
000256D2 <AmiBlitz3.ab3@7685>   TST.w D0
000256D6 <AmiBlitz3.ab3@7686>   BPL.w 'notmi
000256D8 <AmiBlitz3.ab3@7687>   MOVE.w D0,-(A7)
000256DA <AmiBlitz3.ab3@7688>   LSR.w #8,D0
000256DC <AmiBlitz3.ab3@7689>   MOVE.b D0,(A0)+
000256DE <AmiBlitz3.ab3@7690>   MOVE.w (A7)+,D0
000256E0 <AmiBlitz3.ab3@7691>   MOVE.b D0,(A0)+
000256E2 <AmiBlitz3.ab3@7692>   ADDQ.w #1,D1
000256E6 <AmiBlitz3.ab3@7693>  BRA.s 'loop
000256EC <AmiBlitz3.ab3@7696>    TST.w instringon
000256F0 <AmiBlitz3.ab3@7697>    BNE.w 'putbyte
000256F6 <AmiBlitz3.ab3@7699>    TST.b _dcb
000256FA <AmiBlitz3.ab3@7700>    BNE 'notmi_l10
000256FE <AmiBlitz3.ab3@7702>    CMP.w #$28,D0     ;'('
00025702 <AmiBlitz3.ab3@7703>    BEQ.w 'done
00025706 <AmiBlitz3.ab3@7707>    CMP.w #$2C,D0     ;','
0002570A <AmiBlitz3.ab3@7708>    BEQ.w 'done
0002570E <AmiBlitz3.ab3@7709>    CMP.b #"'",D0           ; was #loclabch
00025712 <AmiBlitz3.ab3@7710>    BNE.w 'putbyte
00025718 <AmiBlitz3.ab3@7711>    MOVE.w D0,lc                                     ;locallabels
0002571A <AmiBlitz3.ab3@7712>    MOVE.l A1,-(A7)
00025720 <AmiBlitz3.ab3@7713>    LEA lastgloballabel,A1
00025722 <AmiBlitz3.ab3@7714>    TST.b (A1)
00025726 <AmiBlitz3.ab3@7715>    BEQ.w nolocerr
00025728 <AmiBlitz3.ab3@7718>   ADDQ.w #1,D1
0002572A <AmiBlitz3.ab3@7719>   MOVE.b (A1)+,(A0)+
0002572E <AmiBlitz3.ab3@7720>    BNE.w 'cloop
00025730 <AmiBlitz3.ab3@7721>   SUBQ.w #1,D1
00025732 <AmiBlitz3.ab3@7722>   SUBQ.w #1,A0
00025734 <AmiBlitz3.ab3@7723>   MOVEA.l (A7)+,A1
00025736 <AmiBlitz3.ab3@7726>   MOVE.b D0,(A0)+
0002573A <AmiBlitz3.ab3@7727>  BRA.w 'loop
0002573C <AmiBlitz3.ab3@7730>   CLR.b (A0)
00025742 <AmiBlitz3.ab3@7731>   MOVE.w D1,asmlen2
00025744 <AmiBlitz3.ab3@7732> RTS
0002574A <AmiBlitz3.ab3@7738>   CMP.l #$80ad,d0      
0002574E <AmiBlitz3.ab3@7739>   BNE.s 'l12
00025754 <AmiBlitz3.ab3@7740>  JMP bssseg
0002575A <AmiBlitz3.ab3@7743>   CMP.l #$807f,d0
0002575E <AmiBlitz3.ab3@7744>     BNE.s 'l13
00025764 <AmiBlitz3.ab3@7745>  JMP chipseg
0002576A <AmiBlitz3.ab3@7748>   ADDQ.l #1,destpointer                                    ;even
00025772 <AmiBlitz3.ab3@7749>   BCLR #$0,destpointer+3
00025776 <AmiBlitz3.ab3@7751>   SUBI.w #$803C,D0         ; was #$8000+fnum
00025778 <AmiBlitz3.ab3@7752>   LSL.w #2,D0
0002577E <AmiBlitz3.ab3@7753>   MOVEA.l #asmpnts,A0
00025782 <AmiBlitz3.ab3@7754>   MOVEA.l $0(A0,D0.W),A0                                   ;begin inline assembler
00025788 <AmiBlitz3.ab3@7755>   MOVE.w D0,temp1
0002578A <AmiBlitz3.ab3@7756>   MOVE.l A0,-(A7)
0002578C <AmiBlitz3.ab3@7758>   MOVEQ.l #$01,D1         ;word len (byte=0, long=2)
000257B8 <AmiBlitz3.ab3@7760>    !fget                                                   ;bsr.w get1bytemain
000257BC <AmiBlitz3.ab3@7762>   CMP.w #$2E,D0           ;'.'
000257C0 <AmiBlitz3.ab3@7763>    BNE.w 'dsize
000257EC <AmiBlitz3.ab3@7765>   !fget                                                    ;bsr.w get1bytemain
000257F0 <AmiBlitz3.ab3@7767>   ORI.w #$20,D0
000257F4 <AmiBlitz3.ab3@7768>   CMP.w #$77,D0           ;'w'                                  ;long
000257F8 <AmiBlitz3.ab3@7769>    BEQ.w 'wsize
000257FC <AmiBlitz3.ab3@7770>   CMP.w #$62,D0           ;'b'                                 ;byte
00025800 <AmiBlitz3.ab3@7771>    BEQ.w 'bsize
00025804 <AmiBlitz3.ab3@7772>   CMP.w #$6C,D0           ;'l'                                 ;word
00025808 <AmiBlitz3.ab3@7774>    BEQ.w 'lsize
0002580C <AmiBlitz3.ab3@7775>   CMP.w #"s",d0
00025810 <AmiBlitz3.ab3@7777>   BNE syntaxerr
00025814 <AmiBlitz3.ab3@7778>  BRA.w 'bsize             ; was 'lsize org source
00025816 <AmiBlitz3.ab3@7781>   MOVEQ.l #$00,D1
0002581A <AmiBlitz3.ab3@7782>   MOVE.w $8(A0),D0
0002581E <AmiBlitz3.ab3@7783>  BRA.w 'tstsize
00025820 <AmiBlitz3.ab3@7786>   MOVEQ.l #$04,D1
00025824 <AmiBlitz3.ab3@7787>  BRA.w 'putsize
00025826 <AmiBlitz3.ab3@7790>   MOVEQ.l #$04,D1
0002582A <AmiBlitz3.ab3@7791>   MOVE.w $8(A0),D0
0002582C <AmiBlitz3.ab3@7792>   LSR.w #4,D0
00025830 <AmiBlitz3.ab3@7793>  BRA.w 'tstsize
00025832 <AmiBlitz3.ab3@7796>   MOVEQ.l #$08,D1
00025836 <AmiBlitz3.ab3@7797>   MOVE.w $8(A0),D0
00025838 <AmiBlitz3.ab3@7798>   LSR.w #8,D0
0002583C <AmiBlitz3.ab3@7801>    ANDI.w #$F,D0
00025840 <AmiBlitz3.ab3@7802>   CMP.w #$F,D0
00025844 <AmiBlitz3.ab3@7804>    BNE.w 'cl60
0002584C <AmiBlitz3.ab3@7807>    CMP.l #"MULS",-6(a0)
00025850 <AmiBlitz3.ab3@7808>    BNE 'c20
00025856 <AmiBlitz3.ab3@7809>    MOVE.l #$4c000800,d1
0002585C <AmiBlitz3.ab3@7810>  JMP do32
00025864 <AmiBlitz3.ab3@7813>    CMP.l #"MULU",-6(a0)
00025868 <AmiBlitz3.ab3@7814>    BNE 'c30
0002586E <AmiBlitz3.ab3@7815>    MOVE.l #$4c000000,d1
00025874 <AmiBlitz3.ab3@7816>  JMP do32
0002587C <AmiBlitz3.ab3@7819>    CMP.l #"DIVS",-6(a0)
00025880 <AmiBlitz3.ab3@7820>    BNE 'c40
00025886 <AmiBlitz3.ab3@7821>    MOVE.l #$4c400800,d1
0002588C <AmiBlitz3.ab3@7822>  JMP do32
00025894 <AmiBlitz3.ab3@7825>    CMP.l #"DIVU",-6(a0)
00025898 <AmiBlitz3.ab3@7826>    BNE 'c50
0002589E <AmiBlitz3.ab3@7827>    MOVE.l #$4c400000,d1
000258A4 <AmiBlitz3.ab3@7828>  JMP do32
000258A8 <AmiBlitz3.ab3@7832>  BRA illsizeerr             ; in org source this was afte 'c160
000258D4 <AmiBlitz3.ab3@7835>   !fget                                                    ;bsr.w get1bytemain
000258DA <AmiBlitz3.ab3@7838>   MOVE.w D1,asmsize
000258DC <AmiBlitz3.ab3@7839>   MOVEQ.l #-$01,D3
000258E0 <AmiBlitz3.ab3@7840>    BSR.w reget
000258E4 <AmiBlitz3.ab3@7841>    BEQ.w 'done0
000258EE <AmiBlitz3.ab3@7842>   MOVE.l #ptr_parameterstore,asmbuff
000258F8 <AmiBlitz3.ab3@7845>    MOVE.w oldqflag,instringon
000258FE <AmiBlitz3.ab3@7846>   MOVEA.l lastsourcepos,A5
00025902 <AmiBlitz3.ab3@7848>    BSR.w getea
00025904 <AmiBlitz3.ab3@7849>   MOVE.l D4,D2                                              ;to src
00025906 <AmiBlitz3.ab3@7850>   MOVE.l D5,D3
00025910 <AmiBlitz3.ab3@7851>   MOVE.w asmlen2,asmlen
00025912 <AmiBlitz3.ab3@7852>   MOVEQ.l #-$01,D5
0002591C <AmiBlitz3.ab3@7853>   MOVE.w extraword,extraword2
00025920 <AmiBlitz3.ab3@7854>   CMP.w #$2C,D0                                             ;','
00025924 <AmiBlitz3.ab3@7855>    BNE.w 'done0
0002592E <AmiBlitz3.ab3@7856>   MOVE.l #namebuff2,asmbuff
00025932 <AmiBlitz3.ab3@7857>    BSR.w getea                                              ;dest
00025934 <AmiBlitz3.ab3@7864>   MOVEA.l (A7)+,A0
0002593A <AmiBlitz3.ab3@7868>   MOVEA.l destpointer,A1    ; pc
0002593C <AmiBlitz3.ab3@7870>   MOVEA.l A1,A4
0002593E <AmiBlitz3.ab3@7871>   ADDQ.w #2,A1
00025940 <AmiBlitz3.ab3@7872>   MOVE.w (A0),D1            ;opcode
00025942 <AmiBlitz3.ab3@7873>   TST.w D3
00025946 <AmiBlitz3.ab3@7874>    BMI.w 'none              ;no src/dest ea!
0002594A <AmiBlitz3.ab3@7878>   MOVE.w $E(A0),D0
0002594E <AmiBlitz3.ab3@7879>    BPL.w 'noia
00025952 <AmiBlitz3.ab3@7880>   BTST #$0,D0
00025956 <AmiBlitz3.ab3@7881>    BEQ.w 'noa
0002595A <AmiBlitz3.ab3@7882>   CMP.w #$1,D5
0002595E <AmiBlitz3.ab3@7883>    BNE.w 'noa
00025962 <AmiBlitz3.ab3@7884>   CMP.w #$E,D3
00025966 <AmiBlitz3.ab3@7885>    BEQ.w 'noia
0002596C <AmiBlitz3.ab3@7886>   MOVE.w temp1,D0
0002596E <AmiBlitz3.ab3@7887>   ADDQ.w #4,D0
00025972 <AmiBlitz3.ab3@7888>  BRA.w 'moveon
00025976 <AmiBlitz3.ab3@7891>   BTST #$1,D0
0002597A <AmiBlitz3.ab3@7892>    BEQ.w 'noia
0002597E <AmiBlitz3.ab3@7893>   CMP.w #$B,D3
00025982 <AmiBlitz3.ab3@7894>    BNE.w 'noia
00025988 <AmiBlitz3.ab3@7895>   MOVE.w temp1,D0
0002598A <AmiBlitz3.ab3@7898>   ADDQ.w #4,D0
00025990 <AmiBlitz3.ab3@7899>   MOVEA.l #asmpnts,A0
00025994 <AmiBlitz3.ab3@7900>   MOVEA.l $0(A0,D0.W),A0
00025996 <AmiBlitz3.ab3@7901>   MOVE.w (A0),D1
000259A0 <AmiBlitz3.ab3@7904>   MOVE.l #ptr_parameterstore,buff1
000259AA <AmiBlitz3.ab3@7905>   MOVE.l #namebuff2,buff2
000259AE <AmiBlitz3.ab3@7906>   MOVE.l $A(A0),D0
000259B2 <AmiBlitz3.ab3@7907>    BEQ.w 'nojsr
000259B4 <AmiBlitz3.ab3@7908>   MOVEA.l D0,A3
000259BA <AmiBlitz3.ab3@7909>   MOVE.w asmsize,D6
000259BC <AmiBlitz3.ab3@7910>    JSR (A3)
000259C0 <AmiBlitz3.ab3@7911>    BPL.w 'noerr
000259C4 <AmiBlitz3.ab3@7912>   CMP.w #-$2,D0
000259C8 <AmiBlitz3.ab3@7913>    BEQ.w illsizeerr
000259CC <AmiBlitz3.ab3@7914>  BRA.w illeaerr
000259D0 <AmiBlitz3.ab3@7917>   BEQ.w 'nojsr
000259D2 <AmiBlitz3.ab3@7919>   EXG.l D2,D4
000259D4 <AmiBlitz3.ab3@7920>   EXG.l D3,D5
000259DA <AmiBlitz3.ab3@7922>   MOVE.l extraword,D6
000259DC <AmiBlitz3.ab3@7923>   SWAP D6
000259E2 <AmiBlitz3.ab3@7924>   MOVE.l D6,extraword
000259EC <AmiBlitz3.ab3@7926>   MOVE.l #namebuff2,buff1
000259F6 <AmiBlitz3.ab3@7927>   MOVE.l #ptr_parameterstore,buff2
000259FC <AmiBlitz3.ab3@7929>   MOVE.w asmlen,D6
00025A02 <AmiBlitz3.ab3@7930>   MOVE.w asmlen2,D7
00025A08 <AmiBlitz3.ab3@7931>   MOVE.w D6,asmlen2
00025A0E <AmiBlitz3.ab3@7932>   MOVE.w D7,asmlen
00025A18 <AmiBlitz3.ab3@7935>   MOVE.l buff1,asmbuff
00025A1C <AmiBlitz3.ab3@7936>   MOVE.w $E(A0),D0
00025A20 <AmiBlitz3.ab3@7937>    BEQ.w 'nothing
00025A24 <AmiBlitz3.ab3@7938>    BMI.w 'nothing
00025A28 <AmiBlitz3.ab3@7940>    CMP.w #$7000,d1
00025A2C <AmiBlitz3.ab3@7941>    BNE 'skip
00025A30 <AmiBlitz3.ab3@7942>    CMP.w #$b,d3
00025A34 <AmiBlitz3.ab3@7943>    BNE illeaerr
00025A38 <AmiBlitz3.ab3@7947>    CMP.w #$1,D0
00025A3C <AmiBlitz3.ab3@7948>    BNE.w 'n1to8
00025A40 <AmiBlitz3.ab3@7949>    CMP.w #$B,D3
00025A44 <AmiBlitz3.ab3@7950>    BNE.w 'nothing
00025A48 <AmiBlitz3.ab3@7953>    BSR.w insasm
00025A4A <AmiBlitz3.ab3@7954>   MOVE.w D4,D2
00025A4C <AmiBlitz3.ab3@7955>   MOVE.w D5,D3
00025A50 <AmiBlitz3.ab3@7956>  BRA.w 'skipsrc2
00025A54 <AmiBlitz3.ab3@7959>    CMP.w #$2,D0
00025A58 <AmiBlitz3.ab3@7960>    BNE.w 'notbcc
00025A5C <AmiBlitz3.ab3@7961>   CMP.w #$8,D3
00025A60 <AmiBlitz3.ab3@7962>    BNE.w illeaerr
00025A62 <AmiBlitz3.ab3@7963>   MOVEQ.l #$09,D3
00025A66 <AmiBlitz3.ab3@7964>  BRA.w 'nothing
00025A6A <AmiBlitz3.ab3@7967>    CMP.w #$3,D0
00025A6E <AmiBlitz3.ab3@7968>    BEQ.w 'skipsrc
00025A72 <AmiBlitz3.ab3@7971>   CMP.w #$4,D0
00025A76 <AmiBlitz3.ab3@7972>    BEQ.w 'skipsrc
00025A7A <AmiBlitz3.ab3@7975>   CMP.w #$5,D0
00025A7E <AmiBlitz3.ab3@7976>    BNE.w 'notdbf
00025A82 <AmiBlitz3.ab3@7977>   CMP.w #$8,D5
00025A86 <AmiBlitz3.ab3@7978>    BNE.w illeaerr
00025A88 <AmiBlitz3.ab3@7979>   OR.w D2,D1
00025A8A <AmiBlitz3.ab3@7980>   MOVEQ.l #$09,D5
00025A8E <AmiBlitz3.ab3@7984>   MOVE.w $2(A0),D6
00025A92 <AmiBlitz3.ab3@7985>   MOVE.b $6(A0),D7
00025A96 <AmiBlitz3.ab3@7986>   MOVEM.l D4-D5,-(A7)
00025A9C <AmiBlitz3.ab3@7987>   MOVE.w extraword2,D4
00025AA0 <AmiBlitz3.ab3@7988>    BSR.w doea          ;do src
00025AA4 <AmiBlitz3.ab3@7990>   MOVEM.l (A7)+,D2-D3
00025AA6 <AmiBlitz3.ab3@7992>   TST.w D3
00025AAA <AmiBlitz3.ab3@7995>     BMI.w 'one
00025AB0 <AmiBlitz3.ab3@7996>   MOVE.w extraword,D4
00025AB4 <AmiBlitz3.ab3@7997>   MOVE.w $4(A0),D6
00025AB8 <AmiBlitz3.ab3@7998>   MOVE.b $7(A0),D7
00025AC2 <AmiBlitz3.ab3@7999>   MOVE.l buff2,asmbuff
00025ACC <AmiBlitz3.ab3@8000>   MOVE.w asmlen2,asmlen
00025AD0 <AmiBlitz3.ab3@8001>    BSR.w doea
00025AD4 <AmiBlitz3.ab3@8002>  BRA.w 'putit
00025AD8 <AmiBlitz3.ab3@8005>   MOVE.w $4(A0),D0
00025ADC <AmiBlitz3.ab3@8006>    BNE.w illeaerr
00025AE0 <AmiBlitz3.ab3@8007>  BRA.w 'putit
00025AE4 <AmiBlitz3.ab3@8010>   MOVE.w $2(A0),D0
00025AE8 <AmiBlitz3.ab3@8011>   OR.w $4(A0),D0
00025AEC <AmiBlitz3.ab3@8012>    BNE.w illeaerr
00025AF0 <AmiBlitz3.ab3@8017>   MOVE.w $8(A0),D0
00025AF4 <AmiBlitz3.ab3@8018>   ANDI.w #$F000,D0
00025AF8 <AmiBlitz3.ab3@8019>   CMP.w #-$1000,D0    ;was #$f000
00025AFC <AmiBlitz3.ab3@8020>    BEQ.w 'nosizep
00025AFE <AmiBlitz3.ab3@8021>   LSR.w #8,D0
00025B00 <AmiBlitz3.ab3@8022>   LSR.w #4,D0         ;shift for size
00025B04 <AmiBlitz3.ab3@8024>   MOVE.w $8(A0),D2
00025B0A <AmiBlitz3.ab3@8025>   MOVE.w asmsize,D3
00025B0C <AmiBlitz3.ab3@8026>   LSR.w D3,D2
00025B10 <AmiBlitz3.ab3@8027>   ANDI.w #$F,D2
00025B12 <AmiBlitz3.ab3@8028>   LSL.w D0,D2
00025B14 <AmiBlitz3.ab3@8029>   OR.w D2,D1          ;size into opcode
00025B1A <AmiBlitz3.ab3@8032>   CMPA.l destbufferend,A4
00025B1E <AmiBlitz3.ab3@8033>    BCS.w 'oky
00025B26 <AmiBlitz3.ab3@8034>   MOVE.w #$FFFF,dontwrite_nomemleft     ; was -1
00025B2A <AmiBlitz3.ab3@8035>  BRA.w 'done
00025B2C <AmiBlitz3.ab3@8038>   MOVE.w D1,(A4)
00025B32 <AmiBlitz3.ab3@8041>   MOVE.l A1,destpointer
00025B34 <AmiBlitz3.ab3@8042> RTS
00025B3A <AmiBlitz3.ab3@8046>   MOVE.l destpointer,-(A7)
00025B40 <AmiBlitz3.ab3@8047>   MOVE.l A1,destpointer
00025B44 <AmiBlitz3.ab3@8048>    BSR.w addoff
00025B4A <AmiBlitz3.ab3@8049>   MOVEA.l destpointer,A1
00025B50 <AmiBlitz3.ab3@8050>   MOVE.l (A7)+,destpointer
00025B52 <AmiBlitz3.ab3@8051> RTS
00025B56 <AmiBlitz3.ab3@8055>   MOVEM.l d2-d6,-(a7)
00025B5C <AmiBlitz3.ab3@8056>   JSR stripspaces
00025B60 <AmiBlitz3.ab3@8057>   CMP.b #"d",(a5)+
00025B64 <AmiBlitz3.ab3@8058>   BNE noreg
00025B66 <AmiBlitz3.ab3@8059>   MOVE.b (a5)+,d0
00025B6A <AmiBlitz3.ab3@8060>   CMP.b #$30,d0
00025B6E <AmiBlitz3.ab3@8061>   BLT noreg
00025B72 <AmiBlitz3.ab3@8062>   CMP.b #$37,d0
00025B76 <AmiBlitz3.ab3@8063>   BGT noreg
00025B7A <AmiBlitz3.ab3@8064>   SUB.b #$30,d0
00025B7C <AmiBlitz3.ab3@8065>   MOVEQ #0,d3
00025B7E <AmiBlitz3.ab3@8066>   MOVE.b d0,d3                                             ;reg1
00025B80 <AmiBlitz3.ab3@8067>   ASL.l #8,d3
00025B82 <AmiBlitz3.ab3@8068>   ASL.l #8,d3
00025B88 <AmiBlitz3.ab3@8069>   JSR stripspaces
00025B8C <AmiBlitz3.ab3@8070>   CMP.b #",",(a5)+
00025B90 <AmiBlitz3.ab3@8071>   BNE noreg
00025B96 <AmiBlitz3.ab3@8072>   JSR stripspaces
00025B9A <AmiBlitz3.ab3@8073>   CMP.b #"d",(a5)+
00025B9E <AmiBlitz3.ab3@8074>   BNE noreg
00025BA0 <AmiBlitz3.ab3@8075>   MOVE.b (a5)+,d0
00025BA4 <AmiBlitz3.ab3@8076>   CMP.b #$30,d0
00025BA8 <AmiBlitz3.ab3@8077>   BLT noreg
00025BAC <AmiBlitz3.ab3@8078>   CMP.b #$37,d0
00025BB0 <AmiBlitz3.ab3@8079>   BGT noreg
00025BB4 <AmiBlitz3.ab3@8080>   SUB.b #$30,d0
00025BB6 <AmiBlitz3.ab3@8081>   MOVEQ #0,d4
00025BB8 <AmiBlitz3.ab3@8082>   MOVE.b d0,d4                                             ;reg2
00025BBA <AmiBlitz3.ab3@8083>   ASL.l #8,d4
00025BBC <AmiBlitz3.ab3@8084>   ASL.l #4,d4
00025BBE <AmiBlitz3.ab3@8085>   OR.b d0,d1
00025BC0 <AmiBlitz3.ab3@8086>   OR.l d3,d1
00025BC2 <AmiBlitz3.ab3@8087>   OR.l d4,d1
00025BC8 <AmiBlitz3.ab3@8088>   JSR writelong
00025BCC <AmiBlitz3.ab3@8089>   MOVEM.l (a7)+,d2-d6
00025BD0 <AmiBlitz3.ab3@8090>   MOVEM.l d1/a1-a3,-(a7)
00025BD4 <AmiBlitz3.ab3@8091> BRA exit
00025BD8 <AmiBlitz3.ab3@8095>   MOVEM.l (a7)+,d2-d6
00025BDE <AmiBlitz3.ab3@8096>   LEA errtext,a0
00025BE0 <AmiBlitz3.ab3@8097>   MOVE.l a0,-(a7)
00025BE6 <AmiBlitz3.ab3@8098> JMP handle_compileerror
00025BEC <AmiBlitz3.ab3@8103>   MOVE.w dontwrite_nomemleft,D1
00025BF0 <AmiBlitz3.ab3@8104>    BNE.w 'done
00025BF8 <AmiBlitz3.ab3@8105>   BTST #$7,make_smallestcode
00025BFC <AmiBlitz3.ab3@8106>    BEQ.w 'go
00025C00 <AmiBlitz3.ab3@8107>   MOVE.w pass(PC),D1
00025C04 <AmiBlitz3.ab3@8108>    BEQ.w 'done
00025C0A <AmiBlitz3.ab3@8111>   MOVEA.l templabel,A2                                     ;insert labels in Code
00025C12 <AmiBlitz3.ab3@8112>   MOVE.b #1,curtemplabel
00025C1A <AmiBlitz3.ab3@8113>   MOVE.w #$FFFF,constmode
00025C20 <AmiBlitz3.ab3@8114>   CLR.w regnum
00025C2A <AmiBlitz3.ab3@8115>           MOVE.l #forthstack,forthsp
00025C34 <AmiBlitz3.ab3@8116>           MOVE.l #precstack,precsp
00025C38 <AmiBlitz3.ab3@8117>    BSR.w prepstack
00025C3A <AmiBlitz3.ab3@8120>   MOVE.l A2,-(A7)
00025C3E <AmiBlitz3.ab3@8121>    BSR.w chkstop
00025C40 <AmiBlitz3.ab3@8122>   MOVEA.l (A7)+,A2
00025C44 <AmiBlitz3.ab3@8123>   CMPA.w #$0,A2
00025C48 <AmiBlitz3.ab3@8124>    BEQ.w 'done2
00025C4E <AmiBlitz3.ab3@8125>    CLR.b iee
00025C54 <AmiBlitz3.ab3@8126>   MOVE.l A2,asmbuff
00025C58 <AmiBlitz3.ab3@8127>   LEA $10(A2),A5
00025C5C <AmiBlitz3.ab3@8128>   TST.b $F(A2)
00025C60 <AmiBlitz3.ab3@8129>    BNE.w 'skipo
00025C62 <AmiBlitz3.ab3@8130>   MOVEA.l (A5),A5                                          ;pointer to real text
00025C68 <AmiBlitz3.ab3@8133>    CLR.w asmtype
00025C6C <AmiBlitz3.ab3@8134>    CMP.b #".",(a5)
00025C70 <AmiBlitz3.ab3@8135>    BNE.s 'skipo_l10
00025C72 <AmiBlitz3.ab3@8136>    MOVE.l a2,-(a7)
00025C74 <AmiBlitz3.ab3@8137>    ADDQ.l #1,a5
00025C7A <AmiBlitz3.ab3@8138>    LEA newtypebase,a2
00025C7E <AmiBlitz3.ab3@8139>    BSR getparameter2
00025C82 <AmiBlitz3.ab3@8140>    BEQ.w syntaxerr
00025C86 <AmiBlitz3.ab3@8141>    BSR findtype
00025C8A <AmiBlitz3.ab3@8142>    BNE.w notypeerr
00025C8E <AmiBlitz3.ab3@8143>    LEA $4(a2),a2
00025C92 <AmiBlitz3.ab3@8144>    BSR getparameter2
00025C96 <AmiBlitz3.ab3@8145>    BEQ.w syntaxerr
00025C9A <AmiBlitz3.ab3@8146>    BSR.w findvariable2
00025C9E <AmiBlitz3.ab3@8147>    BNE.w notypeerr
00025CA2 <AmiBlitz3.ab3@8148>    MOVE.w $4(a2),d3
00025CA4 <AmiBlitz3.ab3@8149>    EXT.l d3
00025CA8 <AmiBlitz3.ab3@8150>  BRA 'skipo_l30b
00025CAC <AmiBlitz3.ab3@8153>   CMP.b #"\",(a5)
00025CB0 <AmiBlitz3.ab3@8154>     BNE 'skipo_l20
00025CB2 <AmiBlitz3.ab3@8155>     ADDQ.l #1,a5
00025CB4 <AmiBlitz3.ab3@8156>    MOVE.l a2,-(a7)
00025CB6 <AmiBlitz3.ab3@8157>    MOVE.l a5,a4
00025CBC <AmiBlitz3.ab3@8158>    LEA usedpath,a5
00025CC0 <AmiBlitz3.ab3@8159>    CMP.b #"*",(a5)
00025CC4 <AmiBlitz3.ab3@8160>    BNE 'skipo_lm1
00025CC6 <AmiBlitz3.ab3@8161>    ADDQ.l #1,a5
00025CCA <AmiBlitz3.ab3@8164>    BSR.w getparameter2
00025CCE <AmiBlitz3.ab3@8165>    BEQ.w syntaxerr
00025CD4 <AmiBlitz3.ab3@8166>    LEA varbase,A2
00025CDC <AmiBlitz3.ab3@8167>    MOVE.b #1,newvariable
00025CE0 <AmiBlitz3.ab3@8168>    BSR.w findvariable
00025CE6 <AmiBlitz3.ab3@8169>    CLR.b newvariable
00025CEC <AmiBlitz3.ab3@8170>    CMP.l #-1,d0
00025CF0 <AmiBlitz3.ab3@8171>    BEQ.w notypeerr
00025CF2 <AmiBlitz3.ab3@8172>    MOVE.l a4,a5
00025CF6 <AmiBlitz3.ab3@8173>    MOVE.l $a(a2),a2
00025CFA <AmiBlitz3.ab3@8174>    LEA $4(a2),a2
00025CFE <AmiBlitz3.ab3@8175>    BSR getparameter2
00025D02 <AmiBlitz3.ab3@8176>    BEQ.w syntaxerr
00025D06 <AmiBlitz3.ab3@8177>    BSR.w findvariable2
00025D0A <AmiBlitz3.ab3@8178>    BNE.w notypeerr
00025D0E <AmiBlitz3.ab3@8179>   MOVE.w $4(A2),D3
00025D10 <AmiBlitz3.ab3@8180>   EXT.l D3
00025D16 <AmiBlitz3.ab3@8183>    CMP.b #"[",-1(a5)
00025D1A <AmiBlitz3.ab3@8184>    BNE 'skipo_l30c
00025D1C <AmiBlitz3.ab3@8185>    MOVEQ #0,d0
00025D1E <AmiBlitz3.ab3@8186>    MOVE.b (a5)+,d0
00025D20 <AmiBlitz3.ab3@8187>    MOVE.l d3,-(a7)
00025D22 <AmiBlitz3.ab3@8188>    MOVEQ #0,d3
00025D28 <AmiBlitz3.ab3@8189>    JSR atoi
00025D2A <AmiBlitz3.ab3@8190>    MOVE.l (a7)+,d1
00025D2E <AmiBlitz3.ab3@8191>    MOVE.l $a(a2),a2
00025D32 <AmiBlitz3.ab3@8192>    MOVE.w 8(a2),d0
00025D34 <AmiBlitz3.ab3@8193>    MULS d0,d3
00025D36 <AmiBlitz3.ab3@8194>    ADD.l d1,d3
00025D38 <AmiBlitz3.ab3@8197>   MOVE.l (a7)+,a2
00025D3C <AmiBlitz3.ab3@8198>  BRA 'oko
00025D42 <AmiBlitz3.ab3@8201>   CMP.w #$c,$8(a2)
00025D46 <AmiBlitz3.ab3@8202>      BEQ 'skipo_lf1
00025D4C <AmiBlitz3.ab3@8203>      CMP.w #$d,$8(a2)
00025D50 <AmiBlitz3.ab3@8204>      BEQ 'skipo_lf1
00025D56 <AmiBlitz3.ab3@8207>   JSR evalconst3
00025D5C <AmiBlitz3.ab3@8210>   MOVEA.l asmbuff,A2
00025D60 <AmiBlitz3.ab3@8211>    BEQ.w 'oko
00025D64 <AmiBlitz3.ab3@8212>   CMP.w #$28,D0
00025D68 <AmiBlitz3.ab3@8213>    BEQ.w 'oko
00025D6C <AmiBlitz3.ab3@8214>   CMP.w #$2C,D0
00025D70 <AmiBlitz3.ab3@8215>    BEQ.w 'oko
00025D74 <AmiBlitz3.ab3@8216>  BRA.w syntaxerr
00025D7C <AmiBlitz3.ab3@8219>   MOVE.b #1,iee
00025D80 <AmiBlitz3.ab3@8220>  BRA 'skipo_lf2
00025D84 <AmiBlitz3.ab3@8223>   MOVEA.l $4(A2),A1
00025D88 <AmiBlitz3.ab3@8225>   MOVE.w $8(A2),D1                                         ;labelmode
00025D8C <AmiBlitz3.ab3@8226>   CMP.w #$5,D1
00025D90 <AmiBlitz3.ab3@8227>    BNE.w 'notdan
00025D94 <AmiBlitz3.ab3@8230>    BSR.w chkword                                           ;word
00025D96 <AmiBlitz3.ab3@8233>   MOVE.w D3,(A1)
00025D9A <AmiBlitz3.ab3@8234>  BRA.w 'next
00025D9E <AmiBlitz3.ab3@8237>   CMP.w #$6,D1
00025DA2 <AmiBlitz3.ab3@8238>    BNE.w 'notdanxi
00025DA6 <AmiBlitz3.ab3@8241>    BSR.w chkbyte                                           ;byte
00025DAA <AmiBlitz3.ab3@8244>   MOVE.b D3,$1(A1)
00025DAE <AmiBlitz3.ab3@8245>  BRA.w 'next
00025DB2 <AmiBlitz3.ab3@8248>    CMP.w #$11,D1                                           ;byte
00025DB6 <AmiBlitz3.ab3@8249>    BEQ.w 'isbyte2
00025DBA <AmiBlitz3.ab3@8250>    CMP.w #$c,d1
00025DBE <AmiBlitz3.ab3@8251>    BEQ 'single1
00025DC2 <AmiBlitz3.ab3@8252>    CMP.w #$d,d1
00025DC6 <AmiBlitz3.ab3@8253>    BEQ 'double1
00025DCA <AmiBlitz3.ab3@8254>   CMP.w #$7,D1
00025DCE <AmiBlitz3.ab3@8255>    BEQ.w 'word                                             ;word
00025DD2 <AmiBlitz3.ab3@8256>   CMP.w #$8,D1
00025DD6 <AmiBlitz3.ab3@8257>    BNE.w 'notabsl
00025DDC <AmiBlitz3.ab3@8260>   MOVE.w asmtype,D1                                        ;long
00025DE0 <AmiBlitz3.ab3@8261>    BEQ.w 'notpcrel
00025DE4 <AmiBlitz3.ab3@8262>      BSR.w asmoff
00025DE6 <AmiBlitz3.ab3@8265>   MOVE.l D3,(A1)
00025DEA <AmiBlitz3.ab3@8266>  BRA.w 'next
00025DF0 <AmiBlitz3.ab3@8269>   fmove.s fp0,0(a1)
00025DF4 <AmiBlitz3.ab3@8270>  BRA.w 'next
00025DFA <AmiBlitz3.ab3@8273>   fmove.d fp0,0(a1)
00025DFE <AmiBlitz3.ab3@8274>  BRA.w 'next
00025E02 <AmiBlitz3.ab3@8277>   CMP.w #$9,D1
00025E06 <AmiBlitz3.ab3@8278>    BNE.w 'notdpc
00025E08 <AmiBlitz3.ab3@8279>   SUB.l A1,D3                                              ;branchword
00025E0C <AmiBlitz3.ab3@8280>    BSR.w chkword
00025E0E <AmiBlitz3.ab3@8281>   MOVE.w D3,(A1)
00025E12 <AmiBlitz3.ab3@8282>  BRA.w 'next
00025E16 <AmiBlitz3.ab3@8285>   CMP.w #$A,D1
00025E1A <AmiBlitz3.ab3@8286>    BNE.w 'imm
00025E1C <AmiBlitz3.ab3@8287>   SUB.l A1,D3                                              ;branchbyte
00025E20 <AmiBlitz3.ab3@8288>  BRA.w 'isbyte
00025E24 <AmiBlitz3.ab3@8291>   CMP.w #$11,d1
00025E28 <AmiBlitz3.ab3@8292>   BLE 'imm_org
00025E2A <AmiBlitz3.ab3@8293>   MOVE.l a3,-(a7)
00025E30 <AmiBlitz3.ab3@8294>   LEA pluginbase,a3
00025E34 <AmiBlitz3.ab3@8295>   MOVE.l 8(a2),a0
00025E36 <AmiBlitz3.ab3@8296>   JSR (a0)                                                 ;hook
00025E38 <AmiBlitz3.ab3@8297>   MOVE.l (a7)+,a3
00025E3C <AmiBlitz3.ab3@8298>  BRA 'next
00025E40 <AmiBlitz3.ab3@8301>   MOVE.w $A(A2),D0
00025E44 <AmiBlitz3.ab3@8302>    BEQ.w 'noflag
00025E48 <AmiBlitz3.ab3@8303>   CMP.w #$1,D0
00025E4C <AmiBlitz3.ab3@8304>    BEQ.w 'tocount
00025E50 <AmiBlitz3.ab3@8305>   CMP.w #$3,D0
00025E54 <AmiBlitz3.ab3@8306>    BEQ.w 'tomoveq
00025E58 <AmiBlitz3.ab3@8307>   CMP.w #$4,D0
00025E5C <AmiBlitz3.ab3@8308>    BEQ.w 'totrap
00025E60 <AmiBlitz3.ab3@8311>   CMP.w #$B,D1                                             ;long
00025E64 <AmiBlitz3.ab3@8312>    BEQ.w 'isabsl
00025E68 <AmiBlitz3.ab3@8313>  BRA 'word2                                                ;word
00025E6E <AmiBlitz3.ab3@8316>   CMP.l #$F,D3
00025E72 <AmiBlitz3.ab3@8317>    BHI.w illtraperr
00025E74 <AmiBlitz3.ab3@8318>   OR.b D3,-(A1)
00025E78 <AmiBlitz3.ab3@8319>  BRA.w 'next
00025E7E <AmiBlitz3.ab3@8322>   CMP.l #$8,D3
00025E82 <AmiBlitz3.ab3@8323>    BHI.w illimmerr
00025E84 <AmiBlitz3.ab3@8324>   TST.l D3
00025E88 <AmiBlitz3.ab3@8325>    BEQ.w illimmerr
00025E8C <AmiBlitz3.ab3@8326>   ANDI.w #$7,D3
00025E8E <AmiBlitz3.ab3@8327>   LSL.w #8,D3
00025E90 <AmiBlitz3.ab3@8328>   LSL.w #1,D3
00025E92 <AmiBlitz3.ab3@8329>   OR.w D3,-(A1)
00025E96 <AmiBlitz3.ab3@8330>  BRA.w 'next
00025E9A <AmiBlitz3.ab3@8333>    BSR.w chkbyte
00025E9C <AmiBlitz3.ab3@8334>   MOVE.b D3,-(A1)
00025E9E <AmiBlitz3.ab3@8337>   MOVEA.l (A2),A2
00025EA2 <AmiBlitz3.ab3@8338>  BRA.w 'loop
00025EA8 <AmiBlitz3.ab3@8341>   CLR.w constmode
00025EAE <AmiBlitz3.ab3@8344>   CLR.b curtemplabel
00025EB0 <AmiBlitz3.ab3@8345> RTS
00025EB2 <AmiBlitz3.ab3@8354>   BTST D3,D6
00025EB6 <AmiBlitz3.ab3@8355>    BEQ.w illeaerr
00025EBA <AmiBlitz3.ab3@8356>    BSR.w makemode
00025EBE <AmiBlitz3.ab3@8357>   CMP.w #$7,D3
00025EC2 <AmiBlitz3.ab3@8358>    BCS.w 'skip
00025EC4 <AmiBlitz3.ab3@8359>   MOVE.w D3,D2
00025EC6 <AmiBlitz3.ab3@8360>   SUBQ.w #7,D2
00025ECA <AmiBlitz3.ab3@8361>   CMP.w #$5,D2
00025ECE <AmiBlitz3.ab3@8362>    BCS.w 'skip0
00025ED0 <AmiBlitz3.ab3@8363>   MOVEQ.l #$04,D2
00025ED2 <AmiBlitz3.ab3@8366>   MOVEQ.l #$07,D3
00025ED4 <AmiBlitz3.ab3@8369>   MOVE.b D7,D0
00025ED8 <AmiBlitz3.ab3@8370>   ANDI.w #$F,D0
00025EDC <AmiBlitz3.ab3@8371>   CMP.w #$F,D0
00025EE0 <AmiBlitz3.ab3@8372>    BEQ.w 'skip2
00025EE2 <AmiBlitz3.ab3@8373>   LSL.w D0,D3
00025EE4 <AmiBlitz3.ab3@8374>   OR.w D3,D1
00025EE6 <AmiBlitz3.ab3@8377>   LSR.w #4,D7
00025EEA <AmiBlitz3.ab3@8378>   ANDI.w #$F,D7
00025EEE <AmiBlitz3.ab3@8379>   CMP.w #$F,D7
00025EF2 <AmiBlitz3.ab3@8380>    BEQ.w 'skip3
00025EF4 <AmiBlitz3.ab3@8381>   LSL.w D7,D2
00025EF6 <AmiBlitz3.ab3@8382>   OR.w D2,D1
00025EF8 <AmiBlitz3.ab3@8385> RTS
00025EFE <AmiBlitz3.ab3@8389>   CMP.l #$7F,D3
00025F02 <AmiBlitz3.ab3@8390>    BGT.w illdiserr
00025F08 <AmiBlitz3.ab3@8391>   CMP.l #$FFFFFF80,D3                                      ;#-128,d3 org source
00025F0C <AmiBlitz3.ab3@8392>    BLT.w illdiserr
00025F0E <AmiBlitz3.ab3@8393> RTS
00025F14 <AmiBlitz3.ab3@8397>   CMP.l #$7fff,D3
00025F18 <AmiBlitz3.ab3@8398>    BGT.w illdiserr
00025F1E <AmiBlitz3.ab3@8399>   CMP.l #$FFFF8000,D3                                      ;#-32768,d3 org source
00025F22 <AmiBlitz3.ab3@8400>    BLT.w illdiserr
00025F24 <AmiBlitz3.ab3@8401> RTS
00025F26 <AmiBlitz3.ab3@8406>   MOVE.b (a5)+,d0
00025F28 <AmiBlitz3.ab3@8407>   CMP.b d1,d0
00025F2C <AmiBlitz3.ab3@8408>   BEQ 'll10
00025F2E <AmiBlitz3.ab3@8409>   TST.b d0
00025F32 <AmiBlitz3.ab3@8410>   BNE 'll20
00025F34 <AmiBlitz3.ab3@8413>   SUBQ #1,a5
00025F36 <AmiBlitz3.ab3@8414> RTS
00025F38 <AmiBlitz3.ab3@8419>   MOVE.b (a5)+,d0
00025F3C <AmiBlitz3.ab3@8420>   CMP.b #",",d0
00025F40 <AmiBlitz3.ab3@8421>   BEQ 'll10
00025F44 <AmiBlitz3.ab3@8422>   CMP.b #";",d0
00025F48 <AmiBlitz3.ab3@8423>   BEQ 'll10
00025F4C <AmiBlitz3.ab3@8424>  CMP.b #":",d0
00025F50 <AmiBlitz3.ab3@8425>   BEQ 'll10
00025F52 <AmiBlitz3.ab3@8428>   TST.b d0
00025F56 <AmiBlitz3.ab3@8429>   BNE 'll20
00025F58 <AmiBlitz3.ab3@8432>   SUBQ #1,a5
00025F5A <AmiBlitz3.ab3@8433> RTS
00025F5C <AmiBlitz3.ab3@8437>   ADD.l a2,d1
00025F62 <AmiBlitz3.ab3@8438>   LEA tempspace,a1
00025F64 <AmiBlitz3.ab3@8439>   MOVE.l d1,a0
00025F66 <AmiBlitz3.ab3@8442>   MOVE.b (a0)+,(a1)+
00025F6A <AmiBlitz3.ab3@8443>   BNE.s 'l10
00025F6C <AmiBlitz3.ab3@8444>   SUBQ.l #1,a0
00025F6E <AmiBlitz3.ab3@8445>   SUBQ.l #1,a1
00025F70 <AmiBlitz3.ab3@8448>   MOVE.b (a5)+,(a1)+
00025F74 <AmiBlitz3.ab3@8449>   BNE.s 'l20
00025F76 <AmiBlitz3.ab3@8450>   CLR.b (a1)
00025F7C <AmiBlitz3.ab3@8451>   LEA tempspace,a5
00025F7E <AmiBlitz3.ab3@8452> RTS
00025F82 <AmiBlitz3.ab3@8456>   MOVEM.l D1-D2/A0,-(A7)
00025F84 <AmiBlitz3.ab3@8457>   MOVE.l d0,d2
00025F86 <AmiBlitz3.ab3@8458>   MOVEQ #0,d1
00025F88 <AmiBlitz3.ab3@8459>   MOVE.l a5,a4
00025F8A <AmiBlitz3.ab3@8462>   ADDQ.l #1,d1
00025F8C <AmiBlitz3.ab3@8463>   MOVE.b (a5)+,d0
00025F90 <AmiBlitz3.ab3@8464>   CMP.b #",",d0
00025F94 <AmiBlitz3.ab3@8465>   BEQ 'll10
00025F98 <AmiBlitz3.ab3@8466>   CMP.b #";",d0
00025F9C <AmiBlitz3.ab3@8467>   BEQ 'll10
00025FA0 <AmiBlitz3.ab3@8468>   CMP.b #":",d0
00025FA4 <AmiBlitz3.ab3@8469>   BEQ 'll10
00025FA8 <AmiBlitz3.ab3@8470>   CMP.b #"(",d0
00025FAC <AmiBlitz3.ab3@8471>   BEQ 'll10
00025FAE <AmiBlitz3.ab3@8472>   TST.b d0
00025FB2 <AmiBlitz3.ab3@8473>   BNE 'll20
00025FB4 <AmiBlitz3.ab3@8476>   SUBQ #1,a5
00025FB8 <AmiBlitz3.ab3@8477>   CMP.b #"'",(a4)
00025FBC <AmiBlitz3.ab3@8478>   BEQ 'llocal
00025FC2 <AmiBlitz3.ab3@8479>   TST.w inmacro
00025FC6 <AmiBlitz3.ab3@8480>   BNE 'lmacro
00025FC8 <AmiBlitz3.ab3@8481>   MOVEQ.l #$14+4,D0
00025FCA <AmiBlitz3.ab3@8482>   ADD.l d1,d0
00025FCC <AmiBlitz3.ab3@8483>   MOVE.l d1,-(a7)
00025FCE <AmiBlitz3.ab3@8484>   MOVEQ.l #$01,D1
00025FD4 <AmiBlitz3.ab3@8485>   MOVEA.l _execbase,A6
00025FDA <AmiBlitz3.ab3@8486>   MOVE.l mempool2,a0
00025FDE <AmiBlitz3.ab3@8487>   JSR _AllocPooled(a6)
00025FE0 <AmiBlitz3.ab3@8489>   MOVE.l (a7)+,d1
00025FE2 <AmiBlitz3.ab3@8490>   TST.l d0
00025FE6 <AmiBlitz3.ab3@8491>   BEQ nomemory
00025FE8 <AmiBlitz3.ab3@8492>   MOVEA.l D0,A0
00025FF0 <AmiBlitz3.ab3@8494>   MOVE.w linenumat+2,$A(A0)
00025FF6 <AmiBlitz3.ab3@8496>   MOVE.l templabel,(A0)
00025FFC <AmiBlitz3.ab3@8497>   MOVE.l A0,templabel
00026004 <AmiBlitz3.ab3@8498>   MOVE.l destpointer,$4(A0)
00026008 <AmiBlitz3.ab3@8499>   MOVE.l d2,$8(A0)
0002600C <AmiBlitz3.ab3@8500>   LEA $E(A0),A0
00026010 <AmiBlitz3.ab3@8501>   MOVE.b #$14,(A0)+
00026012 <AmiBlitz3.ab3@8502>   CLR.b (a0)+
00026014 <AmiBlitz3.ab3@8504>   MOVE.l a0,d2
00026016 <AmiBlitz3.ab3@8505>   ADDQ.l #4,d2
00026018 <AmiBlitz3.ab3@8506>   MOVE.l d2,(a0)+
0002601A <AmiBlitz3.ab3@8509>   MOVE.b (a4)+,(a0)+
0002601C <AmiBlitz3.ab3@8510>   SUBQ.l #1,d1
00026020 <AmiBlitz3.ab3@8511>   BNE 'lc1
00026022 <AmiBlitz3.ab3@8512>   CLR.b (a0)+
00026028 <AmiBlitz3.ab3@8513>   MOVE.w linenumat,(a0)
0002602C <AmiBlitz3.ab3@8514>   MOVEM.l (A7)+,D1-D2/A0
0002602E <AmiBlitz3.ab3@8515>  RTS
00026030 <AmiBlitz3.ab3@8518>   MOVEQ.l #$10+2,D0
00026032 <AmiBlitz3.ab3@8519>   ADD.l d1,d0
00026036 <AmiBlitz3.ab3@8520>   MOVEM.l a4/d3,-(a7)
00026038 <AmiBlitz3.ab3@8521>   MOVE.l d1,d3
0002603A <AmiBlitz3.ab3@8522>   MOVEQ.l #$01,D1
00026040 <AmiBlitz3.ab3@8523>   MOVEA.l _execbase,A6
00026046 <AmiBlitz3.ab3@8524>   MOVE.l mempool2,a0
0002604A <AmiBlitz3.ab3@8525>   JSR _AllocPooled(a6)
0002604C <AmiBlitz3.ab3@8527>   TST.l d0
00026050 <AmiBlitz3.ab3@8528>   BEQ nomemory
00026052 <AmiBlitz3.ab3@8529>   MOVEA.l D0,A0
0002605A <AmiBlitz3.ab3@8532>   MOVE.w linenumat+2,$C(A0)
00026060 <AmiBlitz3.ab3@8533>   MOVE.l templabel,(A0)
00026066 <AmiBlitz3.ab3@8534>   MOVE.l A0,templabel
0002606E <AmiBlitz3.ab3@8535>   MOVE.l destpointer,$4(A0)
00026072 <AmiBlitz3.ab3@8536>   MOVE.l d2,$8(A0)
00026076 <AmiBlitz3.ab3@8537>   LEA $E(A0),A0
00026078 <AmiBlitz3.ab3@8538>   MOVE.b d3,(A0)+
0002607E <AmiBlitz3.ab3@8539>   ADD.b #$10,-1(a0)
00026082 <AmiBlitz3.ab3@8540>   MOVE.b #$1,(a0)+
00026084 <AmiBlitz3.ab3@8541>   SUBQ.w #1,d3
00026086 <AmiBlitz3.ab3@8544>   MOVE.b (a4)+,(a0)+
00026088 <AmiBlitz3.ab3@8545>   SUBQ.l #1,d3
0002608C <AmiBlitz3.ab3@8546>   BNE.s 'lm2
0002608E <AmiBlitz3.ab3@8547>   CLR.b (a0)+
00026094 <AmiBlitz3.ab3@8548>   MOVE.w linenumat,(a0)
00026098 <AmiBlitz3.ab3@8549>   MOVEM.l (a7)+,d3/a4
0002609C <AmiBlitz3.ab3@8550>   MOVEM.l (A7)+,D1-D2/A0
0002609E <AmiBlitz3.ab3@8551>  RTS
000260A4 <AmiBlitz3.ab3@8554>   LEA lastgloballabel,a1
000260A6 <AmiBlitz3.ab3@8557>   ADDQ.l #1,d1
000260A8 <AmiBlitz3.ab3@8558>   TST.b (a1)+
000260AC <AmiBlitz3.ab3@8559>   BNE.s 'll11
000260AE <AmiBlitz3.ab3@8560>   MOVEQ.l #$10+2,D0
000260B0 <AmiBlitz3.ab3@8561>   ADD.l d1,d0
000260B4 <AmiBlitz3.ab3@8562>   MOVEM.l a4/d3,-(a7)
000260B6 <AmiBlitz3.ab3@8563>   MOVE.l d1,d3
000260B8 <AmiBlitz3.ab3@8564>   MOVEQ.l #$01,D1
000260BE <AmiBlitz3.ab3@8565>   MOVEA.l _execbase,A6
000260C4 <AmiBlitz3.ab3@8566>   MOVE.l mempool2,a0
000260C8 <AmiBlitz3.ab3@8567>   JSR _AllocPooled(a6)
000260CA <AmiBlitz3.ab3@8569>   TST.l d0
000260CE <AmiBlitz3.ab3@8570>   BEQ nomemory
000260D0 <AmiBlitz3.ab3@8571>   MOVEA.l D0,A0
000260D8 <AmiBlitz3.ab3@8574>   MOVE.w linenumat+2,$C(A0)
000260DE <AmiBlitz3.ab3@8575>   MOVE.l templabel,(A0)
000260E4 <AmiBlitz3.ab3@8576>   MOVE.l A0,templabel
000260EC <AmiBlitz3.ab3@8577>   MOVE.l destpointer,$4(A0)
000260F0 <AmiBlitz3.ab3@8578>   MOVE.l d2,$8(A0)
000260F4 <AmiBlitz3.ab3@8579>   LEA $E(A0),A0
000260F6 <AmiBlitz3.ab3@8580>   MOVE.b d3,(A0)+
000260FC <AmiBlitz3.ab3@8581>   ADD.b #$10,-1(a0)
00026100 <AmiBlitz3.ab3@8582>   MOVE.b #$1,(a0)+
00026102 <AmiBlitz3.ab3@8583>   SUBQ.w #1,d3
00026108 <AmiBlitz3.ab3@8584>   LEA lastgloballabel,a1
0002610A <AmiBlitz3.ab3@8587>   SUBQ.l #1,d3
0002610C <AmiBlitz3.ab3@8588>   MOVE.b (a1)+,(a0)+
00026110 <AmiBlitz3.ab3@8589>   BNE.s 'lm3
00026112 <AmiBlitz3.ab3@8590>   SUBQ.l #1,a0
00026114 <AmiBlitz3.ab3@8593>   MOVE.b (a4)+,(a0)+
00026116 <AmiBlitz3.ab3@8594>   SUBQ.l #1,d3
0002611A <AmiBlitz3.ab3@8595>   BNE.s 'lm1
0002611C <AmiBlitz3.ab3@8596>   CLR.b (a0)+
00026122 <AmiBlitz3.ab3@8597>   MOVE.w linenumat,(a0)
00026126 <AmiBlitz3.ab3@8598>   MOVEM.l (a7)+,d3/a4
0002612A <AmiBlitz3.ab3@8599>   MOVEM.l (A7)+,D1-D2/A0
0002612C <AmiBlitz3.ab3@8600> RTS
00026156 <AmiBlitz3.ab3@8604>   !basic
000261B8 <AmiBlitz3.ab3@8605>   error{!TRANS{"No memory available!!!\\nAB3 will terminate due to low memory!"}}
000261CA <AmiBlitz3.ab3@8606>   loop Delay_ 1
000261D0 <AmiBlitz3.ab3@8607> Goto loop
000261D4 <AmiBlitz3.ab3@8611>   MOVEM.l D0-D2/A0,-(A7)
000261D8 <AmiBlitz3.ab3@8612>   MOVE.w $E(A0),-(A7)
000261DC <AmiBlitz3.ab3@8613>    BPL.w 'ok
000261DE <AmiBlitz3.ab3@8614>   CLR.w (A7)
000261E0 <AmiBlitz3.ab3@8617>   MOVE.l A1,-(A7)
000261E2 <AmiBlitz3.ab3@8618>   MOVEQ.l #$10+2,D0
000261E8 <AmiBlitz3.ab3@8619>   ADD.w asmlen,D0
000261EA <AmiBlitz3.ab3@8620>   MOVE.w D0,D2
000261EC <AmiBlitz3.ab3@8621>   MOVEQ.l #$01,D1
000261F2 <AmiBlitz3.ab3@8622>   MOVEA.l _execbase,A6
000261F8 <AmiBlitz3.ab3@8623>   MOVE.l mempool2,a0
000261FC <AmiBlitz3.ab3@8624>   JSR _AllocPooled(a6)
000261FE <AmiBlitz3.ab3@8626>   MOVEA.l D0,A0
00026206 <AmiBlitz3.ab3@8629>   MOVE.w linenumat+2,$C(A0)
0002620C <AmiBlitz3.ab3@8630>   MOVE.l templabel,(A0)
00026212 <AmiBlitz3.ab3@8631>   MOVE.l A0,templabel
00026216 <AmiBlitz3.ab3@8632>   MOVE.l (A7),$4(A0)
0002621A <AmiBlitz3.ab3@8633>   MOVE.w d3,$8(A0)
00026220 <AmiBlitz3.ab3@8634>   MOVE.w $4(A7),$A(A0)
00026224 <AmiBlitz3.ab3@8635>   LEA $E(A0),A0
00026226 <AmiBlitz3.ab3@8636>   MOVE.b D2,(A0)+                                           ;length
0002622C <AmiBlitz3.ab3@8637>   MOVEA.l asmbuff,A1
0002622E <AmiBlitz3.ab3@8638>   ADDQ.w #1,A1
00026230 <AmiBlitz3.ab3@8639>   MOVE.b (A1)+,(A0)+                                        ;type - 0 = indirect,else direct
00026234 <AmiBlitz3.ab3@8640>    BNE.w 'loop
00026236 <AmiBlitz3.ab3@8641>   MOVE.l (A1)+,(A0)+
0002623C <AmiBlitz3.ab3@8642>   MOVE.w linenumat,(a0)
00026240 <AmiBlitz3.ab3@8643>  BRA.w 'loopdone
00026242 <AmiBlitz3.ab3@8646>    MOVE.b (A1)+,(A0)+
00026246 <AmiBlitz3.ab3@8647>    BNE.w 'loop
0002624C <AmiBlitz3.ab3@8648>    MOVE.w linenumat,(a0)
0002624E <AmiBlitz3.ab3@8651>   MOVEA.l (A7)+,A1
00026250 <AmiBlitz3.ab3@8652>   ADDQ.w #2,A7
00026254 <AmiBlitz3.ab3@8653>   MOVEM.l (A7)+,D0-D2/A0
00026256 <AmiBlitz3.ab3@8654> RTS
0002625A <AmiBlitz3.ab3@8658>   CMP.w #$5,D3
0002625E <AmiBlitz3.ab3@8659>    BCS.w 'done
00026262 <AmiBlitz3.ab3@8660>   CMP.w #$B,D3
00026266 <AmiBlitz3.ab3@8661>    BHI.w 'done2
0002626A <AmiBlitz3.ab3@8662>    BEQ.w 'imm
0002626E <AmiBlitz3.ab3@8663>    BSR.w insasm
00026272 <AmiBlitz3.ab3@8664>   CMP.w #$5,D3
00026276 <AmiBlitz3.ab3@8665>    BEQ.w 'word
0002627A <AmiBlitz3.ab3@8666>   CMP.w #$6,D3
0002627E <AmiBlitz3.ab3@8667>    BEQ.w 'dxi
00026282 <AmiBlitz3.ab3@8668>   CMP.w #$7,D3
00026286 <AmiBlitz3.ab3@8669>    BEQ.w 'word
0002628A <AmiBlitz3.ab3@8670>   CMP.w #$8,D3
0002628E <AmiBlitz3.ab3@8671>    BEQ.w 'long
00026292 <AmiBlitz3.ab3@8672>   CMP.w #$9,D3
00026296 <AmiBlitz3.ab3@8673>    BEQ.w 'word
0002629C <AmiBlitz3.ab3@8677>   CMPA.l destbufferend,A1
000262A0 <AmiBlitz3.ab3@8678>    BCS.w 'ok7
000262A2 <AmiBlitz3.ab3@8679>   ADDQ.w #2,A1
000262A4 <AmiBlitz3.ab3@8680>  RTS
000262A6 <AmiBlitz3.ab3@8683>   MOVE.w D4,(A1)+
000262A8 <AmiBlitz3.ab3@8684>  RTS
000262B0 <AmiBlitz3.ab3@8687>   CMPI.w #$8,asmsize
000262B4 <AmiBlitz3.ab3@8688>    BCC.w 'immlong
000262B6 <AmiBlitz3.ab3@8689>   MOVEQ.l #$10,D3
000262BA <AmiBlitz3.ab3@8690>    BSR.w insasm
000262BC <AmiBlitz3.ab3@8691>   MOVEQ.l #$0B,D3
000262C0 <AmiBlitz3.ab3@8692>  BRA.w 'word
000262C4 <AmiBlitz3.ab3@8695>   BSR.w insasm
000262C6 <AmiBlitz3.ab3@8698>   ADDQ.w #2,A1
000262C8 <AmiBlitz3.ab3@8701>   ADDQ.w #2,A1
000262CA <AmiBlitz3.ab3@8702>  RTS
000262CE <AmiBlitz3.ab3@8705>   CMP.w #$F,D3
000262D2 <AmiBlitz3.ab3@8706>    BNE.w 'done
000262D8 <AmiBlitz3.ab3@8707>   CMPA.l destbufferend,A1
000262DC <AmiBlitz3.ab3@8708>    BCS.w 'ok3
000262DE <AmiBlitz3.ab3@8709>   ADDQ.w #2,A1
000262E0 <AmiBlitz3.ab3@8710>   ADDQ.w #4,A7
000262E2 <AmiBlitz3.ab3@8711>  RTS
000262E4 <AmiBlitz3.ab3@8714>   MOVE.w D2,(A1)+
000262E6 <AmiBlitz3.ab3@8715>   ADDQ.w #4,A7
000262E8 <AmiBlitz3.ab3@8718> RTS
000262EC <AmiBlitz3.ab3@8727>   BSR.w storeloc
000262F6 <AmiBlitz3.ab3@8729>   MOVE.l linenumat,oldline
000262F8 <AmiBlitz3.ab3@8731>   MOVEQ.l #$00,D1
000262FC <AmiBlitz3.ab3@8732>    BSR.w get1bytemain    ;eol?
00026300 <AmiBlitz3.ab3@8733>    BEQ.w 'done
00026302 <AmiBlitz3.ab3@8734>   MOVEQ.l #$00,D3
00026306 <AmiBlitz3.ab3@8735>  BRA.w 'skiphelp
0002630A <AmiBlitz3.ab3@8738>    BSR.w get1bytemain
0002630E <AmiBlitz3.ab3@8739>    BNE.w 'skip
00026310 <AmiBlitz3.ab3@8743>   TST.w D3
00026314 <AmiBlitz3.ab3@8744>    BNE.w brackets_                                         ;syntax error brackets
00026318 <AmiBlitz3.ab3@8745>  BRA.w 'done2
0002631E <AmiBlitz3.ab3@8748>    MOVE.w instringon,D4
00026322 <AmiBlitz3.ab3@8751>     BEQ 'skiphelp
00026324 <AmiBlitz3.ab3@8754>     MOVEQ #0,d0
00026326 <AmiBlitz3.ab3@8755>      MOVE.b (a5)+,d0                                       ;fix "ue"
0002632C <AmiBlitz3.ab3@8756>      MOVE.w d0,lastchar
00026330 <AmiBlitz3.ab3@8757>      BEQ 'ready
00026334 <AmiBlitz3.ab3@8758>      CMP.b #$22,d0
00026338 <AmiBlitz3.ab3@8759>      BNE 'l1
0002633E <AmiBlitz3.ab3@8760>      NOT.w instringon
00026342 <AmiBlitz3.ab3@8761>  BRA 'loop
00026346 <AmiBlitz3.ab3@8766>            CMP.b #"@",d0                                   ;expand line @@ 1. for parameter
0002634A <AmiBlitz3.ab3@8767>            BNE 'l10
0002634E <AmiBlitz3.ab3@8768>            CMP.b #"@",(a5)
00026352 <AmiBlitz3.ab3@8769>            BNE 'l10
00026358 <AmiBlitz3.ab3@8772>            TST.w ininclude
0002635C <AmiBlitz3.ab3@8773>            BNE 'inc
00026362 <AmiBlitz3.ab3@8774>            MOVE.l sourceline3,a5
00026368 <AmiBlitz3.ab3@8775>            CMP.l #0,a5
0002636C <AmiBlitz3.ab3@8776>            BNE 'l11t
00026372 <AmiBlitz3.ab3@8777>            MOVEA.l sourceline,A5
00026374 <AmiBlitz3.ab3@8780>            MOVEA.l (A5),A5
0002637A <AmiBlitz3.ab3@8781>            CMP.l #0,a5
0002637E <AmiBlitz3.ab3@8782>            BEQ 'done2
00026384 <AmiBlitz3.ab3@8783>            MOVE.l a5,sourceline3
00026388 <AmiBlitz3.ab3@8784>            LEA $9(A5),A5
0002638C <AmiBlitz3.ab3@8785>   BRA 'l11
0002638E <AmiBlitz3.ab3@8788>            ADDQ.l #1,a5
00026390 <AmiBlitz3.ab3@8789>            TST.b (a5)
00026394 <AmiBlitz3.ab3@8790>            BNE 'inc
00026396 <AmiBlitz3.ab3@8794>            ADDQ.l #1,a5
00026398 <AmiBlitz3.ab3@8795>            TST.b (a5)
0002639C <AmiBlitz3.ab3@8796>            BEQ illeolerr
0002639E <AmiBlitz3.ab3@8797>            MOVE.l a5,-(a7)
000263A2 <AmiBlitz3.ab3@8800>       CMP.b #" ",(a5)+
000263A6 <AmiBlitz3.ab3@8801>       BEQ 'l110
000263AC <AmiBlitz3.ab3@8802>        CMP.b #";",-1(a5)
000263AE <AmiBlitz3.ab3@8803>        MOVE.l (a7)+,a5
000263B2 <AmiBlitz3.ab3@8804>        BEQ 'l111
000263B6 <AmiBlitz3.ab3@8805>   BRA 'loop
000263BA <AmiBlitz3.ab3@8809>    CMP.w #$29,D0      ;')'
000263BE <AmiBlitz3.ab3@8810>    BNE.w 'skip2
000263C0 <AmiBlitz3.ab3@8811>   TST.w D3
000263C4 <AmiBlitz3.ab3@8812>    BEQ.w 'done2
000263C6 <AmiBlitz3.ab3@8815>   SUBQ.w #1,D3
000263CA <AmiBlitz3.ab3@8816>  BRA.w 'loop
000263CE <AmiBlitz3.ab3@8819>    CMP.w #$7D,D0      ;'}'
000263D2 <AmiBlitz3.ab3@8820>    BEQ.w 'skip3
000263D6 <AmiBlitz3.ab3@8821>   CMP.w #$28,D0       ;'('
000263DA <AmiBlitz3.ab3@8822>    BNE.w 'skip4a
000263DC <AmiBlitz3.ab3@8825>    ADDQ.w #1,D3
000263E0 <AmiBlitz3.ab3@8826>  BRA.w 'loop
000263E4 <AmiBlitz3.ab3@8829>   CMP.w #$7B,D0        ;'{'
000263E8 <AmiBlitz3.ab3@8830>    BEQ.w 'skip4
000263EC <AmiBlitz3.ab3@8831>   CMP.w #$2C,D0        ;','
000263F0 <AmiBlitz3.ab3@8832>    BNE.w 'loop
000263F2 <AmiBlitz3.ab3@8833>   TST.w D3
000263F6 <AmiBlitz3.ab3@8834>    BNE.w 'loop
000263F8 <AmiBlitz3.ab3@8835>   ADDQ.w #1,D1
000263FC <AmiBlitz3.ab3@8836>  BRA.w 'loop
000263FE <AmiBlitz3.ab3@8839>   ADDQ.w #1,D1
00026404 <AmiBlitz3.ab3@8843>   CLR.l sourceline3
0002640E <AmiBlitz3.ab3@8844>   MOVE.l oldline,linenumat
00026412 <AmiBlitz3.ab3@8846> BRA.w resloc
00026418 <AmiBlitz3.ab3@8859>    CLR.w numreps
0002641A <AmiBlitz3.ab3@8860>   MOVE.w D1,D0
0002641E <AmiBlitz3.ab3@8861>   ANDI.w #$FF00,D0
00026422 <AmiBlitz3.ab3@8862>    BEQ.w 'noreps
00026424 <AmiBlitz3.ab3@8863>   LSR.w #8,D0
00026426 <AmiBlitz3.ab3@8864>   LSR.w #4,D0           ;d0= start of reps
0002642A <AmiBlitz3.ab3@8865>    BEQ.w 'skip
0002642C <AmiBlitz3.ab3@8866>   SUB.b D0,D1           ;new number to fetch
00026436 <AmiBlitz3.ab3@8868>    MOVE.w regnum,regnumfunc
0002643C <AmiBlitz3.ab3@8869>    MOVE.b funcparloop,-(a7)
00026444 <AmiBlitz3.ab3@8870>    MOVE.b #0,funcparloop
0002644A <AmiBlitz3.ab3@8871>    MOVE.l leftsidetype,-(a7)
00026450 <AmiBlitz3.ab3@8872>    MOVE.l rightsidetype,-(a7)
00026456 <AmiBlitz3.ab3@8873>    MOVE.w leftsideflagmask,-(a7)
0002645C <AmiBlitz3.ab3@8874>    MOVE.w rightsideflagmask,-(a7)
00026462 <AmiBlitz3.ab3@8875>    CLR.l leftsidetype
00026468 <AmiBlitz3.ab3@8876>    CLR.l rightsidetype
0002646E <AmiBlitz3.ab3@8877>    CLR.w leftsideflagmask
00026474 <AmiBlitz3.ab3@8878>    CLR.w rightsideflagmask
0002647A <AmiBlitz3.ab3@8879>    MOVE.b blitzparloop,-(a7)
00026482 <AmiBlitz3.ab3@8880>    MOVE.b #1,blitzparloop
00026486 <AmiBlitz3.ab3@8882>    BSR.w fetchpees2      ;fetch first parms
0002648C <AmiBlitz3.ab3@8884>    MOVE.b (a7)+,blitzparloop
00026492 <AmiBlitz3.ab3@8885>    MOVE.w (a7)+,rightsideflagmask
00026498 <AmiBlitz3.ab3@8886>    MOVE.w (a7)+,leftsideflagmask
0002649E <AmiBlitz3.ab3@8887>    MOVE.l (a7)+,rightsidetype
000264A4 <AmiBlitz3.ab3@8888>    MOVE.l (a7)+,leftsidetype
000264AA <AmiBlitz3.ab3@8889>    MOVE.b (a7)+,funcparloop
000264AE <AmiBlitz3.ab3@8891>   CMP.w #$2C,D0          ;','
000264B2 <AmiBlitz3.ab3@8892>    BNE.w syntaxerr
000264B4 <AmiBlitz3.ab3@8897>   MOVE.w D1,D2
000264B6 <AmiBlitz3.ab3@8898>   LSR.w #8,D2
000264BA <AmiBlitz3.ab3@8899>   ANDI.w #$7,D2         ;# repeatable....
000264BC <AmiBlitz3.ab3@8902>    CMP.b D2,D1
000264C0 <AmiBlitz3.ab3@8903>    BCS.w 'repsdone      ;all reps done....
000264C2 <AmiBlitz3.ab3@8904>   SUB.b D2,D1
000264C6 <AmiBlitz3.ab3@8905>   MOVEM.l D2/A2,-(A7)
000264C8 <AmiBlitz3.ab3@8906>   MOVE.w D2,D0
000264CE <AmiBlitz3.ab3@8908>   MOVE.b funcparloop,-(a7)
000264D6 <AmiBlitz3.ab3@8909>   MOVE.b #0,funcparloop
000264DC <AmiBlitz3.ab3@8910>   MOVE.l leftsidetype,-(a7)
000264E2 <AmiBlitz3.ab3@8911>   MOVE.l rightsidetype,-(a7)
000264E8 <AmiBlitz3.ab3@8912>   MOVE.w leftsideflagmask,-(a7)
000264EE <AmiBlitz3.ab3@8913>   MOVE.w rightsideflagmask,-(a7)
000264F4 <AmiBlitz3.ab3@8914>   CLR.l leftsidetype
000264FA <AmiBlitz3.ab3@8915>   CLR.l rightsidetype
00026500 <AmiBlitz3.ab3@8916>   CLR.w leftsideflagmask
00026506 <AmiBlitz3.ab3@8917>   CLR.w rightsideflagmask
0002650C <AmiBlitz3.ab3@8918>   MOVE.b blitzparloop,-(a7)
00026514 <AmiBlitz3.ab3@8919>   MOVE.b #1,blitzparloop
00026518 <AmiBlitz3.ab3@8921>   BSR.w fetchpees4
0002651E <AmiBlitz3.ab3@8923>   MOVE.b (a7)+,blitzparloop
00026524 <AmiBlitz3.ab3@8924>   MOVE.w (a7)+,rightsideflagmask
0002652A <AmiBlitz3.ab3@8925>   MOVE.w (a7)+,leftsideflagmask
00026530 <AmiBlitz3.ab3@8926>   MOVE.l (a7)+,rightsidetype
00026536 <AmiBlitz3.ab3@8927>   MOVE.l (a7)+,leftsidetype
0002653C <AmiBlitz3.ab3@8928>   MOVE.b (a7)+,funcparloop
00026540 <AmiBlitz3.ab3@8930>   MOVEM.l (A7)+,D2/A2
00026546 <AmiBlitz3.ab3@8931>   ADDQ.w #1,numreps
0002654A <AmiBlitz3.ab3@8932>  BRA.w 'rloop
00026550 <AmiBlitz3.ab3@8935>    MOVE.w numreps,D3
00026554 <AmiBlitz3.ab3@8936>    BEQ.w syntaxerr
00026556 <AmiBlitz3.ab3@8937>   ADDA.w D2,A2
0002655A <AmiBlitz3.ab3@8938>   ANDI.w #$FF,D1
0002655E <AmiBlitz3.ab3@8939>    BEQ.w 'done
00026562 <AmiBlitz3.ab3@8946>   CMP.w #$2C,D0       ;','
00026566 <AmiBlitz3.ab3@8947>    BNE.w syntaxerr
00026568 <AmiBlitz3.ab3@8950>    MOVE.w D1,D0
0002656C <AmiBlitz3.ab3@8951>    BNE.w 'fetchpees2b
0002656E <AmiBlitz3.ab3@8954>  RTS
00026574 <AmiBlitz3.ab3@8958>   MOVE.b funcparloop,-(a7)
0002657A <AmiBlitz3.ab3@8959>   MOVE.l leftsidetype,-(a7)
00026580 <AmiBlitz3.ab3@8960>   MOVE.l rightsidetype,-(a7)
00026586 <AmiBlitz3.ab3@8961>   MOVE.w leftsideflagmask,-(a7)
0002658C <AmiBlitz3.ab3@8962>   MOVE.w rightsideflagmask,-(a7)
00026592 <AmiBlitz3.ab3@8963>   CLR.l leftsidetype
00026598 <AmiBlitz3.ab3@8964>   CLR.l rightsidetype
0002659E <AmiBlitz3.ab3@8965>   CLR.w leftsideflagmask
000265A4 <AmiBlitz3.ab3@8966>   CLR.w rightsideflagmask
000265AC <AmiBlitz3.ab3@8967>   MOVE.b #0,funcparloop
000265B2 <AmiBlitz3.ab3@8968>   MOVE.b blitzparloop,-(a7)
000265BA <AmiBlitz3.ab3@8969>   MOVE.b #1,blitzparloop
000265BE <AmiBlitz3.ab3@8970>   BSR.w fetchpees2
000265C4 <AmiBlitz3.ab3@8971>   MOVE.b (a7)+,blitzparloop
000265CA <AmiBlitz3.ab3@8972>   MOVE.w (a7)+,rightsideflagmask
000265D0 <AmiBlitz3.ab3@8973>   MOVE.w (a7)+,leftsideflagmask
000265D6 <AmiBlitz3.ab3@8974>   MOVE.l (a7)+,rightsidetype
000265DC <AmiBlitz3.ab3@8975>   MOVE.l (a7)+,leftsidetype
000265E2 <AmiBlitz3.ab3@8976>   MOVE.b (a7)+,funcparloop
000265E4 <AmiBlitz3.ab3@8977> RTS
000265E8 <AmiBlitz3.ab3@8981> ptype:    Dc.b $3F,$3C,$00,$00                             ;MOVE.W  #$0000,-(A7)
000265EA <AmiBlitz3.ab3@8984> partostack:  Ds.w 1                                        ;pmode org source
000265EC <AmiBlitz3.ab3@8988>   MOVEQ.l #$01,D2
000265F0 <AmiBlitz3.ab3@8989> BRA.w fetchpees3
000265F2 <AmiBlitz3.ab3@8992>   MOVEQ.l #$00,D2
000265F6 <AmiBlitz3.ab3@8995>   ANDI.w #$F,D0
000265FC <AmiBlitz3.ab3@9003>   CLR.w parnum
000265FE <AmiBlitz3.ab3@9004>   MOVE.w D1,-(A7)
00026602 <AmiBlitz3.ab3@9005>   MOVE.w partostack(PC),-(A7)                              ;in case of recursion
00026608 <AmiBlitz3.ab3@9006>   MOVE.w D2,partostack
0002660A <AmiBlitz3.ab3@9007>   MOVE.w D0,-(A7)
0002660E <AmiBlitz3.ab3@9008>   CMP.w #"@@",(a5)                                        
00026612 <AmiBlitz3.ab3@9009>   BNE 'loop                                      ;was 'l15
00026618 <AmiBlitz3.ab3@9010>   TST.w ininclude                                          ;merge macrolines
0002661C <AmiBlitz3.ab3@9011>   BNE errorjoin
00026622 <AmiBlitz3.ab3@9012>        MOVEA.l sourceline,A5
00026624 <AmiBlitz3.ab3@9015>            MOVEA.l (A5),A5
0002662A <AmiBlitz3.ab3@9016>            MOVE.l a5,sourceline
0002662E <AmiBlitz3.ab3@9017>            LEA $9(A5),A5
00026634 <AmiBlitz3.ab3@9018>            ADDQ.l #1,linenumat
00026636 <AmiBlitz3.ab3@9021>   MOVE.b (A2)+,D2                                          ;parameterloop   d2=vartype
0002663A <AmiBlitz3.ab3@9022>    BNE.w 'skip0
00026640 <AmiBlitz3.ab3@9023>   MOVE.w userp,D2                                          ;user selected type
00026642 <AmiBlitz3.ab3@9026>    MOVE.l A2,-(A7)
00026648 <AmiBlitz3.ab3@9027>    ADDQ.w #1,parnum
0002664E <AmiBlitz3.ab3@9028>    TST.b funccall
00026652 <AmiBlitz3.ab3@9029>    BEQ 'skip0_l1
0002665A <AmiBlitz3.ab3@9030>    CMP.w #6,parnum
0002665E <AmiBlitz3.ab3@9031>    BLE 'skip0_l1
00026662 <AmiBlitz3.ab3@9032>    CMP.w #7,d2
00026668 <AmiBlitz3.ab3@9038>    TST.b fpu
0002666C <AmiBlitz3.ab3@9039>    BEQ 'skip0_old
00026672 <AmiBlitz3.ab3@9040>    TST.w regnumfunc
00026676 <AmiBlitz3.ab3@9041>    BEQ 'skip0_old
0002667C <AmiBlitz3.ab3@9042>    CMP.w #$48e7,-4(a4)
00026680 <AmiBlitz3.ab3@9043>    BNE 'skip0_old
00026682 <AmiBlitz3.ab3@9044>    MOVEQ #0,d1
00026688 <AmiBlitz3.ab3@9045>    MOVE.w regnum,d1
0002668E <AmiBlitz3.ab3@9046>    CMP regnumfunc,d1                                       ;fpu reg function save
00026692 <AmiBlitz3.ab3@9047>    BGE 'skip0_old
00026694 <AmiBlitz3.ab3@9048>    ASL.w #7,d1
00026696 <AmiBlitz3.ab3@9049>    MOVE.l d0,-(a7)
0002669C <AmiBlitz3.ab3@9050>    MOVE.w regnumfunc,d0
000266A2 <AmiBlitz3.ab3@9051>    CLR.w regmask
000266A8 <AmiBlitz3.ab3@9054>    BSET d0,regmask
000266AA <AmiBlitz3.ab3@9055>    SUBQ #1,d0
000266AE <AmiBlitz3.ab3@9056>    BNE 'skip0_loop
000266B0 <AmiBlitz3.ab3@9057>     MOVEQ #0,d0
000266B6 <AmiBlitz3.ab3@9060>       BTST d0,regmask
000266BA <AmiBlitz3.ab3@9061>       BEQ 'skip0_noa7
000266BC <AmiBlitz3.ab3@9062>       MOVEQ #0,d1
000266BE <AmiBlitz3.ab3@9063>       MOVE.w d0,d1
000266C0 <AmiBlitz3.ab3@9064>       SUBQ.w #1,d1
000266C2 <AmiBlitz3.ab3@9065>       ASL #7,d1
000266C8 <AmiBlitz3.ab3@9066>       OR.l #$f2277400,d1                                   ;fmove.d
000266CC <AmiBlitz3.ab3@9068>       BSR writelong
000266D2 <AmiBlitz3.ab3@9070>       ADDQ.l #2,stacktrack
000266D8 <AmiBlitz3.ab3@9071>       MOVE.l stacktrack,d1
000266DE <AmiBlitz3.ab3@9072>       CMP.l #180,d1
000266E2 <AmiBlitz3.ab3@9073>       BGT conmemerr                                        ;formel too complex
000266E4 <AmiBlitz3.ab3@9074>       MOVE.l a0,-(a7)
000266EA <AmiBlitz3.ab3@9075>       LEA fpustackbase,a0
000266F2 <AmiBlitz3.ab3@9076>       MOVE.w regmask,0(a0,d1)
000266F4 <AmiBlitz3.ab3@9077>       MOVE.l (a7)+,a0
000266F6 <AmiBlitz3.ab3@9080>       ADDQ.w #1,d0
000266FC <AmiBlitz3.ab3@9081>       CMP.w regnumfunc,d0
00026700 <AmiBlitz3.ab3@9082>       BLE 'skip0_loop2
00026702 <AmiBlitz3.ab3@9085>       MOVE.l (a7)+,d0
00026708 <AmiBlitz3.ab3@9088>      MOVE.l currentfunccall,-(a7)
0002670E <AmiBlitz3.ab3@9089>      MOVE.w parnum,-(a7)
00026714 <AmiBlitz3.ab3@9090>      TST.l rightsidetype
00026718 <AmiBlitz3.ab3@9091>      BSR.w handlep
0002671E <AmiBlitz3.ab3@9092>      MOVE.w (a7)+,parnum
00026724 <AmiBlitz3.ab3@9094>    MOVE.l (a7)+,currentfunccall
0002672A <AmiBlitz3.ab3@9097>     TST.b typecheck                            ;typecheck for function call
0002672E <AmiBlitz3.ab3@9098>     BEQ 'notypecheck
00026734 <AmiBlitz3.ab3@9099>     TST.b notypecheck
00026738 <AmiBlitz3.ab3@9100>     BNE 'notypecheck
0002673E <AmiBlitz3.ab3@9101>     TST.b blitzparloop
00026742 <AmiBlitz3.ab3@9102>     BNE 'isblitzlibcall                                    ;no typecheck for blitzlibs currently
0002674C <AmiBlitz3.ab3@9103>     CMP.l #0,currentfunccall
00026750 <AmiBlitz3.ab3@9104>     BEQ 'isblitzlibcall
00026754 <AmiBlitz3.ab3@9105>     MOVEM.l a0/a1,-(a7)
0002675A <AmiBlitz3.ab3@9106>     MOVE.l currentfunccall,a0
00026760 <AmiBlitz3.ab3@9107>     MOVE.w parnum,d1
00026766 <AmiBlitz3.ab3@9108>     TST.b isconstantvalue
0002676A <AmiBlitz3.ab3@9109>     BEQ 'noconstant
00026774 <AmiBlitz3.ab3@9110>     CMP.l #0,lastconstantvalue
00026778 <AmiBlitz3.ab3@9111>     BEQ 'isnull
0002677C <AmiBlitz3.ab3@9114>     MOVE.l funcstruct_parametertype-4(a0,d1*4),a0
00026782 <AmiBlitz3.ab3@9115>     CMP.l #0,a0
00026786 <AmiBlitz3.ab3@9116>     BEQ 'notype
0002678E <AmiBlitz3.ab3@9117>     CMP.l #$100,4(a0)
00026792 <AmiBlitz3.ab3@9118>     BLE 'notype
00026798 <AmiBlitz3.ab3@9119>     MOVE.l lasttoken,d1
0002679C <AmiBlitz3.ab3@9120>     CMP.w #NullTokenID,d1                   ;$b581 ok, when token for null
000267A0 <AmiBlitz3.ab3@9121>     BEQ 'isnull
000267A6 <AmiBlitz3.ab3@9122>     TST.l typetocast
000267AA <AmiBlitz3.ab3@9123>     BEQ 'nocast
000267B0 <AmiBlitz3.ab3@9124>     MOVE.l typetocast,a1
000267B4 <AmiBlitz3.ab3@9125>     BRA 'typecheck
000267BA <AmiBlitz3.ab3@9128>     MOVE.l rightsidetype,a1
000267C0 <AmiBlitz3.ab3@9129>     CMP.l #0,a1
000267C4 <AmiBlitz3.ab3@9130>     BEQ 'notype
000267CC <AmiBlitz3.ab3@9132>   'typecheck   CMP.l #$100,4(a1)
000267CE <AmiBlitz3.ab3@9134>     CMP.l a0,a1
000267D2 <AmiBlitz3.ab3@9135>     BEQ 'ok
000267DA <AmiBlitz3.ab3@9137>     CMP.l #$100,4(a1)                 ; is a type here
000267DE <AmiBlitz3.ab3@9138>     BLE 'error
000267E2 <AmiBlitz3.ab3@9139>     MOVE.l 4(a1),a1                   ; load the address of type.
000267E6 <AmiBlitz3.ab3@9140>     CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
000267EA <AmiBlitz3.ab3@9141>     BEQ 'ok
000267F0 <AmiBlitz3.ab3@9144>    JMP error_convert_types            ; for syntax 4
000267F6 <AmiBlitz3.ab3@9149>     CLR.l typetocast
000267FA <AmiBlitz3.ab3@9150>     MOVEM.l (a7)+,a0/a1
00026800 <AmiBlitz3.ab3@9156>    CLR.l lastfunction
00026806 <AmiBlitz3.ab3@9157>    TST.b fpu
0002680A <AmiBlitz3.ab3@9158>    BEQ 'skip0_noprint
0002680C <AmiBlitz3.ab3@9159>   MOVE.l (a7),a2
0002680E <AmiBlitz3.ab3@9160>   ADDQ.l #1,a2
00026812 <AmiBlitz3.ab3@9161>    CMP.b #5,d2
00026816 <AmiBlitz3.ab3@9162>   BNE 'skip0_noprint
0002681C <AmiBlitz3.ab3@9163>   CMP.b #$5d,24(a2)
00026820 <AmiBlitz3.ab3@9164>   BNE 'skip0_noprint
00026826 <AmiBlitz3.ab3@9165>   CMP.b #$81,25(a2)
0002682A <AmiBlitz3.ab3@9166>   BLT 'skip0_noprint
00026830 <AmiBlitz3.ab3@9167>   CMP.b #$86,25(a2)
00026834 <AmiBlitz3.ab3@9168>   BEQ 'skip0_ok
0002683A <AmiBlitz3.ab3@9169>   CMP.b #$87,25(a2)
0002683E <AmiBlitz3.ab3@9170>   BEQ 'skip0_ok
00026844 <AmiBlitz3.ab3@9171>   CMP.b #$88,25(a2)
00026848 <AmiBlitz3.ab3@9172>   BEQ 'skip0_ok
0002684E <AmiBlitz3.ab3@9173>   CMP.b #$83,25(a2)
00026852 <AmiBlitz3.ab3@9174>   BGT 'skip0_noprint
00026858 <AmiBlitz3.ab3@9177>   MOVE.l destpointer,a4
0002685E <AmiBlitz3.ab3@9178>   CMP.w #$2f00,-2(a4)
00026862 <AmiBlitz3.ab3@9179>   BNE 'skip0_noprint
00026868 <AmiBlitz3.ab3@9180>   SUBQ.l #2,destpointer
0002686E <AmiBlitz3.ab3@9182>   MOVE.l #$f2277400,d1
00026872 <AmiBlitz3.ab3@9183>   BSR writelong                                            ;fmove.d fp0,-(a7)
00026878 <AmiBlitz3.ab3@9184>   ADDQ #4,a2offset
0002687E <AmiBlitz3.ab3@9201>   CLR.b optistring
00026880 <AmiBlitz3.ab3@9202>   MOVEA.l (A7)+,A2
00026884 <AmiBlitz3.ab3@9203>    CMP.w #"@",d0
00026888 <AmiBlitz3.ab3@9204>   BNE 'skip0_l10
0002688C <AmiBlitz3.ab3@9205>    CMP.b #"@",(a5)
00026890 <AmiBlitz3.ab3@9206>   BNE 'skip0_l10
00026896 <AmiBlitz3.ab3@9207>   TST.w ininclude
0002689A <AmiBlitz3.ab3@9208>   BNE errorjoin
000268A0 <AmiBlitz3.ab3@9209>   MOVEA.l sourceline,A5
000268A2 <AmiBlitz3.ab3@9210>            MOVEA.l (A5),A5
000268A8 <AmiBlitz3.ab3@9211>            MOVE.l a5,sourceline
000268AE <AmiBlitz3.ab3@9212>            ADDQ.l #1,linenumat
000268B2 <AmiBlitz3.ab3@9213>            LEA $9(A5),A5
000268B4 <AmiBlitz3.ab3@9214>            MOVEQ #0,d0
000268B8 <AmiBlitz3.ab3@9215>            BSR get1bytemain
000268BC <AmiBlitz3.ab3@9218>    CMP.b #32,(a5)+ ;for space after a ,
000268C0 <AmiBlitz3.ab3@9219>    BEQ 'skip0_l10:
000268C2 <AmiBlitz3.ab3@9220>    SUBQ.l #1,a5
000268C6 <AmiBlitz3.ab3@9222>    CMP.w #"@@",(a5)                                        ;if merge
000268CA <AmiBlitz3.ab3@9223>    BNE 'skip0_l15
000268CE <AmiBlitz3.ab3@9224>    MOVEM.l d0-d7/a0-a4/a6,-(a7)
000268D4 <AmiBlitz3.ab3@9225>    JSR mergeline
000268D8 <AmiBlitz3.ab3@9226>    MOVEM.l (a7)+,d0-d7/a0-a4/a6
000268DA <AmiBlitz3.ab3@9246>       SUBQ.w #1,(A7)
000268DE <AmiBlitz3.ab3@9247>    BEQ.w 'done
000268E2 <AmiBlitz3.ab3@9249>     CMP.w #$2C,D0
000268E6 <AmiBlitz3.ab3@9251>    BNE 'overloadfunc
000268EA <AmiBlitz3.ab3@9252>  BRA.w 'loop
000268EC <AmiBlitz3.ab3@9255>   ADDQ.w #2,A7
000268F2 <AmiBlitz3.ab3@9256>   MOVE.w (A7)+,partostack
000268F4 <AmiBlitz3.ab3@9257>   MOVE.w (A7)+,D1
000268FA <AmiBlitz3.ab3@9258>   CLR.b isconstantvalue
00026904 <AmiBlitz3.ab3@9259>   MOVE.l currentfunccall,lastfunction
0002690A <AmiBlitz3.ab3@9260>   CLR.b funccall
00026910 <AmiBlitz3.ab3@9261>   CLR.l currentfunccall
00026912 <AmiBlitz3.ab3@9262>  RTS
00026918 <AmiBlitz3.ab3@9265>   CLR.b funccall
0002691E <AmiBlitz3.ab3@9266>   MOVE.w regnum,d1
00026924 <AmiBlitz3.ab3@9267>   MOVE.l currentfunccall,a4
00026928 <AmiBlitz3.ab3@9268>   CMP.b $20(a4),d1                                         ;increase if more pars
0002692C <AmiBlitz3.ab3@9269>   BLT notparerr
0002692E <AmiBlitz3.ab3@9272>   MOVE.b (a2)+,d2
00026936 <AmiBlitz3.ab3@9273>   ADD.w #1,parnum
0002693C <AmiBlitz3.ab3@9274>   TST.b fpu
00026940 <AmiBlitz3.ab3@9275>   BEQ 'nofpu
00026944 <AmiBlitz3.ab3@9276>   CMP.b #5,d2
00026948 <AmiBlitz3.ab3@9277>   BNE 'nofpu
0002694A <AmiBlitz3.ab3@9278>   MOVEQ #0,d1
00026950 <AmiBlitz3.ab3@9279>   MOVE.w regnum,d1
00026958 <AmiBlitz3.ab3@9280>   CMP.w #6,regnum
0002695C <AmiBlitz3.ab3@9281>   BLT 'nostack2
00026960 <AmiBlitz3.ab3@9288>   MOVE.w #$2c3c,d1
00026964 <AmiBlitz3.ab3@9289>   BSR writeword
0002696A <AmiBlitz3.ab3@9290>   MOVE.l #$bf800000,d1
0002696E <AmiBlitz3.ab3@9291>   BSR writelong
00026972 <AmiBlitz3.ab3@9292>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
00026978 <AmiBlitz3.ab3@9293>   ADD.w parnum,d1
0002697E <AmiBlitz3.ab3@9294>   JSR Atokejsr
00026984 <AmiBlitz3.ab3@9295>   TST.w dontwrite_nomemleft
00026988 <AmiBlitz3.ab3@9296>   BNE 'l1
0002698E <AmiBlitz3.ab3@9297>   MOVE.l data1start,d1
00026994 <AmiBlitz3.ab3@9298>   MOVE.l destpointer,a4
00026998 <AmiBlitz3.ab3@9299>   ADD.l d1,-4(a4)
0002699E <AmiBlitz3.ab3@9300>   MOVE.l destpointer,d1
000269A0 <AmiBlitz3.ab3@9301>   SUBQ.l #4,d1
000269A6 <AmiBlitz3.ab3@9302>   SUB.l destbufferstart,d1
000269A8 <AmiBlitz3.ab3@9303>   MOVE.l d2,-(a7)
000269AA <AmiBlitz3.ab3@9304>   MOVE.l d1,d2
000269B0 <AmiBlitz3.ab3@9305>   JSR addhunkoffset
000269B2 <AmiBlitz3.ab3@9306>   MOVE.l (a7)+,d2
000269B6 <AmiBlitz3.ab3@9307>  BRA 'l1
000269B8 <AmiBlitz3.ab3@9310>   ASL.l #7,d1
000269BE <AmiBlitz3.ab3@9311>   OR.l #$F23C5000,d1                                       ;fmove.w #-1,fpx
000269C2 <AmiBlitz3.ab3@9312>   BSR writelong
000269C4 <AmiBlitz3.ab3@9313>   MOVEQ #-1,d1                                             ;-1
000269C8 <AmiBlitz3.ab3@9314>   BSR writeword
000269CC <AmiBlitz3.ab3@9315>  BRA 'l1
000269D2 <AmiBlitz3.ab3@9318>   MOVE.w regnum,d1
000269DA <AmiBlitz3.ab3@9319>   CMP.w #6,regnum
000269DE <AmiBlitz3.ab3@9320>   BLT 'nostack
000269E2 <AmiBlitz3.ab3@9325>   CMP.b #2,d2
000269E6 <AmiBlitz3.ab3@9326>   BGT 'nw
000269EA <AmiBlitz3.ab3@9327>  BRA 'nos
000269EE <AmiBlitz3.ab3@9336>   CMP.w #7,d2
000269F2 <AmiBlitz3.ab3@9337>   BNE 'nos
000269F8 <AmiBlitz3.ab3@9338>   ADDQ #4,a2offset
000269FE <AmiBlitz3.ab3@9341>     MOVE.l #$48780000,d1
00026A02 <AmiBlitz3.ab3@9342>     BSR writelong
00026A08 <AmiBlitz3.ab3@9343>     ADDQ.w #4,a2offset
00026A0C <AmiBlitz3.ab3@9344>     MOVE.w #$2f3c,d1
00026A10 <AmiBlitz3.ab3@9345>     BSR writeword
00026A16 <AmiBlitz3.ab3@9346>     MOVE.l #-1,d1
00026A1A <AmiBlitz3.ab3@9347>     BSR writelong
00026A1E <AmiBlitz3.ab3@9348>    BRA 'l1
00026A22 <AmiBlitz3.ab3@9352>   CMP.b #4,d2
00026A26 <AmiBlitz3.ab3@9353>       BNE 'noq
00026A2A <AmiBlitz3.ab3@9354>       MOVE.w #$2c3c,d1
00026A2E <AmiBlitz3.ab3@9355>       BSR writeword
00026A34 <AmiBlitz3.ab3@9356>       MOVE.l #$ffff0000,d1
00026A38 <AmiBlitz3.ab3@9357>       BSR writelong
00026A3C <AmiBlitz3.ab3@9358>  BRA 'noq2
00026A40 <AmiBlitz3.ab3@9361>      CMP.b #5,d2
00026A44 <AmiBlitz3.ab3@9362>      BNE 'nof
00026A48 <AmiBlitz3.ab3@9363>       MOVE.w #$2c3c,d1
00026A4C <AmiBlitz3.ab3@9364>       BSR writeword
00026A52 <AmiBlitz3.ab3@9365>       MOVE.l #$800000c1,d1
00026A56 <AmiBlitz3.ab3@9366>       BSR writelong
00026A5A <AmiBlitz3.ab3@9367>  BRA 'noq2
00026A5E <AmiBlitz3.ab3@9370>   MOVE.w #$7cff,d1
00026A62 <AmiBlitz3.ab3@9371>   BSR writeword
00026A66 <AmiBlitz3.ab3@9374>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
00026A6C <AmiBlitz3.ab3@9375>   ADD.w parnum,d1
00026A72 <AmiBlitz3.ab3@9376>   JSR Atokejsr
00026A78 <AmiBlitz3.ab3@9377>    TST.w dontwrite_nomemleft
00026A7C <AmiBlitz3.ab3@9378>    BNE 'l1
00026A82 <AmiBlitz3.ab3@9379>    MOVE.l data1start,d1
00026A88 <AmiBlitz3.ab3@9380>    MOVE.l destpointer,a4
00026A8C <AmiBlitz3.ab3@9381>    ADD.l d1,-4(a4)
00026A92 <AmiBlitz3.ab3@9382>    MOVE.l destpointer,d1
00026A94 <AmiBlitz3.ab3@9383>    SUBQ.l #4,d1
00026A9A <AmiBlitz3.ab3@9384>    SUB.l destbufferstart,d1
00026A9C <AmiBlitz3.ab3@9385>    MOVE.l d2,-(a7)
00026A9E <AmiBlitz3.ab3@9386>    MOVE.l d1,d2
00026AA4 <AmiBlitz3.ab3@9387>    JSR addhunkoffset
00026AA6 <AmiBlitz3.ab3@9388>    MOVE.l (a7)+,d2
00026AAA <AmiBlitz3.ab3@9389>  BRA 'l1
00026AAC <AmiBlitz3.ab3@9392>   ASL.l #8,d1
00026AAE <AmiBlitz3.ab3@9393>   ASL.l #1,d1
00026AB4 <AmiBlitz3.ab3@9394>   OR.l #$203c,d1                                           ;-1
00026AB8 <AmiBlitz3.ab3@9395>   BSR writeword
00026ABE <AmiBlitz3.ab3@9396>   MOVE.l #-1,d1
00026AC2 <AmiBlitz3.ab3@9397>   CMP.b #4,d2
00026AC6 <AmiBlitz3.ab3@9398>   BNE 'nq1
00026ACC <AmiBlitz3.ab3@9399>   MOVE.l #$ffff0000,d1
00026AD0 <AmiBlitz3.ab3@9402>   CMP.b #5,d2
00026AD4 <AmiBlitz3.ab3@9403>   BNE 'nof2
00026ADA <AmiBlitz3.ab3@9404>   TST.b fpu
00026ADE <AmiBlitz3.ab3@9405>   BNE 'nof2
00026AE4 <AmiBlitz3.ab3@9406>   MOVE.l #$800000c1,d1
00026AE8 <AmiBlitz3.ab3@9409>    BSR writelong
00026AEC <AmiBlitz3.ab3@9410>    CMP.b #7,d2
00026AF0 <AmiBlitz3.ab3@9411>    BNE 'l1
00026AF6 <AmiBlitz3.ab3@9413>      MOVE.l #$48780000,d1
00026AFA <AmiBlitz3.ab3@9414>      BSR writelong
00026B00 <AmiBlitz3.ab3@9416>    ADDQ.w #4,a2offset                                      ; bug fix for string parameters
00026B06 <AmiBlitz3.ab3@9417>    MOVE.l #$594f,d1                                        ; subq #4,a7
00026B0A <AmiBlitz3.ab3@9418>    BSR writeword
00026B0C <AmiBlitz3.ab3@9421>    SUBQ.w #1,(A7)
00026B10 <AmiBlitz3.ab3@9422>    BEQ.w 'done
00026B16 <AmiBlitz3.ab3@9423>    ADDQ.w #1,regnum
00026B1A <AmiBlitz3.ab3@9424>  BRA 'ol2
00026B1C <AmiBlitz3.ab3@9437>    MOVE.w D2,D1
00026B20 <AmiBlitz3.ab3@9438>    ANDI.w #$40,D1          ;push bit
00026B26 <AmiBlitz3.ab3@9439>    MOVE.b D1,partostack
00026B28 <AmiBlitz3.ab3@9440>    TST.b D2
00026B2C <AmiBlitz3.ab3@9441>     BMI.w handlevara
00026B30 <AmiBlitz3.ab3@9442>    BTST #$5,D2
00026B34 <AmiBlitz3.ab3@9443>     BNE.w handlearr
00026B3A <AmiBlitz3.ab3@9448>     MOVE.w regnumstore,-(a7)
00026B40 <AmiBlitz3.ab3@9449>     MOVE.w tempregnum,-(a7)
00026B46 <AmiBlitz3.ab3@9450>     MOVE.w parnum,-(a7)
00026B4A <AmiBlitz3.ab3@9452>     BSR.w getap                                        ;recursive entry
00026B50 <AmiBlitz3.ab3@9454>     MOVE.w (a7)+,parnum
00026B56 <AmiBlitz3.ab3@9455>     MOVE.w (a7)+,tempregnum
00026B5C <AmiBlitz3.ab3@9456>     MOVE.w (a7)+,regnumstore
00026B60 <AmiBlitz3.ab3@9462>     MOVE.w partostack(PC),D1
00026B64 <AmiBlitz3.ab3@9463>     BEQ.w putapincreg
00026B6A <AmiBlitz3.ab3@9467>    ADDQ.w #4,a2offset
00026B70 <AmiBlitz3.ab3@9469>    MOVE.w pushdn,D1
00026B76 <AmiBlitz3.ab3@9470>    OR.w regnum,D1      ;push long
00026B7A <AmiBlitz3.ab3@9471>    CMP.w #$3,D2
00026B7E <AmiBlitz3.ab3@9472>     BCC.w 'skip
00026B84 <AmiBlitz3.ab3@9473>    SUBQ.w #2,a2offset
00026B88 <AmiBlitz3.ab3@9474>    ORI.w #$1000,D1    ;push word only
00026B8C <AmiBlitz3.ab3@9475>    BSR.w writeword
00026B8E <AmiBlitz3.ab3@9476>  RTS
00026B92 <AmiBlitz3.ab3@9480>   CMP.b #7,d2
00026B96 <AmiBlitz3.ab3@9481>    BNE 'l10a
00026B9E <AmiBlitz3.ab3@9482>    CMP.b #2,optistring
00026BA4 <AmiBlitz3.ab3@9486>   TST.b iee
00026BA8 <AmiBlitz3.ab3@9487>   BEQ 'olda
00026BAC <AmiBlitz3.ab3@9488>   CMP.b #5,d2
00026BB0 <AmiBlitz3.ab3@9489>   BNE 'olda
00026BB4 <AmiBlitz3.ab3@9493>   BSR.w writeword                                          ;write val to stack
00026BB6 <AmiBlitz3.ab3@9494>  RTS
00026BBC <AmiBlitz3.ab3@9498>   SUBQ.w #4,a2offset
00026BBE <AmiBlitz3.ab3@9499> RTS
00026BC4 <AmiBlitz3.ab3@9504>   ADDQ.w #1,regnum
00026BC6 <AmiBlitz3.ab3@9505> RTS
00026BC8 <AmiBlitz3.ab3@9509>   MOVEQ.l #$03,D2
00026BCC <AmiBlitz3.ab3@9510> BRA.w putap
00026BD0 <AmiBlitz3.ab3@9516>   ANDI.w #$7,D2
00026BD2 <AmiBlitz3.ab3@9517>   MOVE.w D2,-(A7)
00026BD6 <AmiBlitz3.ab3@9519>    BSR.w ampersand2  ;ignore pnt to $
00026BDA <AmiBlitz3.ab3@9521>   CMP.b #$7,D2                                             ;ignore pnt to $
00026BDE <AmiBlitz3.ab3@9522>    BEQ.w 'nop2
00026BE2 <AmiBlitz3.ab3@9524>   BTST #$E,D2
00026BE6 <AmiBlitz3.ab3@9525>    BEQ.w 'nop
00026BEA <AmiBlitz3.ab3@9526>   MOVE.b #$3,D2      ;pointer to long                                      ;pointer to long
00026BEE <AmiBlitz3.ab3@9527>  BRA.w 'nop2
00026BF0 <AmiBlitz3.ab3@9530>    TST.b D2
00026BF4 <AmiBlitz3.ab3@9531>    BNE.w 'nop2
00026BF8 <AmiBlitz3.ab3@9532>   MOVE.b #$3,D2
00026BFA <AmiBlitz3.ab3@9535>   MOVE.w (A7)+,D3
00026BFC <AmiBlitz3.ab3@9536>   TST.b D3
00026C00 <AmiBlitz3.ab3@9537>    BEQ.w 'unp
00026C02 <AmiBlitz3.ab3@9538>   CMP.b D2,D3
00026C06 <AmiBlitz3.ab3@9539>    BEQ.w putalp
00026C0A <AmiBlitz3.ab3@9540>  BRA.w mismatcherr
00026C10 <AmiBlitz3.ab3@9543>   ADDQ.w #2,a2offset
00026C14 <AmiBlitz3.ab3@9544>   MOVE.w ptype(PC),D1
00026C18 <AmiBlitz3.ab3@9545>    BSR.w writeword
00026C1A <AmiBlitz3.ab3@9546>   MOVEQ.l #$00,D1
00026C1C <AmiBlitz3.ab3@9547>   MOVE.b D2,D1
00026C20 <AmiBlitz3.ab3@9548>    BSR.w writeword
00026C24 <AmiBlitz3.ab3@9549> BRA.w putalp
00026C26 <AmiBlitz3.ab3@9553>    MOVE.w D2,-(A7)
00026C2A <AmiBlitz3.ab3@9554>    BSR.w baseadd
00026C30 <AmiBlitz3.ab3@9555>   BTST #$4,$1(A7)
00026C34 <AmiBlitz3.ab3@9556>    BEQ.w 'nohigh
00026C38 <AmiBlitz3.ab3@9557>    BSR.w highadd
00026C3E <AmiBlitz3.ab3@9560>    BTST #$3,$1(A7)
00026C42 <AmiBlitz3.ab3@9561>    BEQ.w 'notype
00026C46 <AmiBlitz3.ab3@9562>    BSR.w sendtype
00026C48 <AmiBlitz3.ab3@9565>    MOVE.w (A7)+,D2
00026C4C <AmiBlitz3.ab3@9566> BRA.w get1bytemain
00026C52 <AmiBlitz3.ab3@9572>   MOVE.w regnum,D1
00026C54 <AmiBlitz3.ab3@9573>   LSL.w #8,D1
00026C56 <AmiBlitz3.ab3@9574>   LSL.w #1,D1
00026C5A <AmiBlitz3.ab3@9575>   ORI.w #$7000,D1
00026C60 <AmiBlitz3.ab3@9576>   BTST #$0,$7(A3)
00026C64 <AmiBlitz3.ab3@9577>    BNE.w 'isap         ;A Pointer
00026C6C <AmiBlitz3.ab3@9578>   CMPI.l #$100,$4(A2)
00026C70 <AmiBlitz3.ab3@9579>    BCC.w arrerr1       ;illegal type to send
00026C74 <AmiBlitz3.ab3@9580>   MOVE.b $7(A2),D1
00026C78 <AmiBlitz3.ab3@9583>   BSR.w writeword      ;moveq #type,d regat
00026C7A <AmiBlitz3.ab3@9584>   MOVEQ.l #$02,D2      ;just a word.
00026C7E <AmiBlitz3.ab3@9585> BRA.w pushap
00026C82 <AmiBlitz3.ab3@9588>   MOVE.b #$3,D1
00026C86 <AmiBlitz3.ab3@9589> BRA.w 'putit
00026C8A <AmiBlitz3.ab3@9595>    BSR.w get1bytemain                                      ;write array paramter code
00026C8E <AmiBlitz3.ab3@9596>    BSR.w getparameter
00026C96 <AmiBlitz3.ab3@9597>   BTST #$1,flagmask+1
00026C9A <AmiBlitz3.ab3@9598>    BEQ.w syntaxerr
00026C9E <AmiBlitz3.ab3@9599>    BSR.w fetchvars
00026CA2 <AmiBlitz3.ab3@9601>    BSR.w get1bytemain
00026CA6 <AmiBlitz3.ab3@9602>   CMP.w #$29,D0          ;')'  ;we just want a() or whatever                                 ;we just want a() or whatever
00026CAA <AmiBlitz3.ab3@9603>    BNE.w syntaxerr
00026CB0 <AmiBlitz3.ab3@9604>   MOVE.w notshared,D1
00026CB4 <AmiBlitz3.ab3@9605>    BNE.w noarrayerr
00026CBA <AmiBlitz3.ab3@9606>   MOVE.w regnum,D1
00026CBC <AmiBlitz3.ab3@9607>   LSL.w #8,D1
00026CBE <AmiBlitz3.ab3@9608>   LSL.w #1,D1
00026CC2 <AmiBlitz3.ab3@9609>   OR.w fbase(PC),D1
00026CC8 <AmiBlitz3.ab3@9611>    TST.b varmode
00026CCC <AmiBlitz3.ab3@9612>    BEQ 'l1
00026CD0 <AmiBlitz3.ab3@9613>    BCLR #0,d1
00026CD4 <AmiBlitz3.ab3@9617>    BSR.w writeword
00026CD8 <AmiBlitz3.ab3@9618>   MOVE.w $4(A3),D1
00026CDC <AmiBlitz3.ab3@9619>    BSR.w writeword
00026CE0 <AmiBlitz3.ab3@9620> BRA.w putalp      ;OK, we've got da base reg.
00026CE6 <AmiBlitz3.ab3@9626>   MOVE.w regnum,D1
00026CE8 <AmiBlitz3.ab3@9627>   LSL.w #8,D1
00026CEA <AmiBlitz3.ab3@9628>   LSL.w #1,D1
00026CEE <AmiBlitz3.ab3@9629>   OR.w fbase(PC),D1
00026CF4 <AmiBlitz3.ab3@9631>    TST.b varmode
00026CF8 <AmiBlitz3.ab3@9632>    BEQ 'l1
00026CFC <AmiBlitz3.ab3@9633>    BCLR #0,d1
00026D00 <AmiBlitz3.ab3@9637>    BSR.w writeword
00026D04 <AmiBlitz3.ab3@9639>   MOVE.w $8(A3),D1
00026D06 <AmiBlitz3.ab3@9640>   LSL.w #2,D1
00026D0C <AmiBlitz3.ab3@9641>   MOVE.w varmode,D2
00026D10 <AmiBlitz3.ab3@9642>    BEQ.w 'isglob
00026D12 <AmiBlitz3.ab3@9643>   NEG.w D1
00026D16 <AmiBlitz3.ab3@9646>    ADD.w $4(A3),D1
00026D1A <AmiBlitz3.ab3@9647>    BSR.w writeword
00026D20 <AmiBlitz3.ab3@9648>   MOVE.w regnum,D1
00026D22 <AmiBlitz3.ab3@9649>   LSL.w #8,D1
00026D24 <AmiBlitz3.ab3@9650>   LSL.w #1,D1
00026D28 <AmiBlitz3.ab3@9652>   MOVE.w partostack(PC),D2
00026D2C <AmiBlitz3.ab3@9653>    BNE.w 'dopadd           ;we just pushed last parameter!
00026D34 <AmiBlitz3.ab3@9654>   CMPI.w #$7,regnum
00026D38 <AmiBlitz3.ab3@9655>    BCC.w 'dopadd           ;last was d6, it must have been
00026D3C <AmiBlitz3.ab3@9657>   OR.w pushlast(PC),D1
00026D42 <AmiBlitz3.ab3@9658>   MOVE.w regnum,D2
00026D44 <AmiBlitz3.ab3@9659>   SUBQ.w #1,D2
00026D46 <AmiBlitz3.ab3@9660>   OR.w D2,D1
00026D4A <AmiBlitz3.ab3@9661>  BRA.w 'pp
00026D4E <AmiBlitz3.ab3@9666>   OR.w pushadd(PC),D1
00026D52 <AmiBlitz3.ab3@9669>   BSR.w writeword
00026D5A <AmiBlitz3.ab3@9670>   MOVE.b #$1,partostack
00026D5E <AmiBlitz3.ab3@9671> BRA.w putalp
00026D62 <AmiBlitz3.ab3@9675> fbase:       Dc.b $20,$2D,$00,$00                           ;MOVE.L  $0000(A5),D0
00026D64 <AmiBlitz3.ab3@9676> pushadd:     Dc.b $D0,$97                                   ;ADD.L (A7),D0
00026D66 <AmiBlitz3.ab3@9677> pushlast:    Dc.b $D0,$80                                   ;ADD.L D0,D0
00026D6A <AmiBlitz3.ab3@9682>   ANDI.w #$7,D2                                            ;0-7 (unknown to string)
00026D6E <AmiBlitz3.ab3@9683>    BEQ.w evalu2
00026D72 <AmiBlitz3.ab3@9684> BRA.w eval
00026D78 <AmiBlitz3.ab3@9688>   MOVEA.l libpointer,A1
00026D7C <AmiBlitz3.ab3@9691>    CMPA.w #$0,A1
00026D80 <AmiBlitz3.ab3@9692>    BEQ.w 'done
00026D86 <AmiBlitz3.ab3@9693>   MOVE.w #-1,$A(A1)
00026D8C <AmiBlitz3.ab3@9694>   BCLR #$7,$C(A1)
00026D8E <AmiBlitz3.ab3@9695>   MOVEA.l (A1),A1
00026D92 <AmiBlitz3.ab3@9696>  BRA.w 'loop
00026D94 <AmiBlitz3.ab3@9699> RTS
00026D98 <AmiBlitz3.ab3@9703>   MOVE.w #$FFFE,D1       ;#allocvars
00026D9C <AmiBlitz3.ab3@9707>    BSR.w findlib
00026DA2 <AmiBlitz3.ab3@9710>   TST.w cfetchmode
00026DA6 <AmiBlitz3.ab3@9711>    BEQ.w 'noconst
00026DAC <AmiBlitz3.ab3@9712>   BTST #$6,$C(A1)
00026DB0 <AmiBlitz3.ab3@9713>    BNE.w 'constok
00026DB4 <AmiBlitz3.ab3@9715>  BRA.w badconerr                                            ;Can't use this Library!
00026DB6 <AmiBlitz3.ab3@9718>  RTS
00026DBC <AmiBlitz3.ab3@9721>    BSET #$7,$C(A1)
00026DC0 <AmiBlitz3.ab3@9722>    BNE.w 'skip                                         ;already done....
00026DC6 <AmiBlitz3.ab3@9723>    CMPI.w #-1,$A(A1)
00026DCA <AmiBlitz3.ab3@9724>    BNE.w 'skip                                         ;something already here
00026DD0 <AmiBlitz3.ab3@9728>    TST.w dirmode
00026DD4 <AmiBlitz3.ab3@9729>    BEQ.b 'oktouse
00026DDA <AmiBlitz3.ab3@9732>    TST.b exdebug
00026DDE <AmiBlitz3.ab3@9733>    BEQ 'l1
00026DE2 <AmiBlitz3.ab3@9734>  BRA.b 'oktouse
00026DE8 <AmiBlitz3.ab3@9738>   BCLR #$7,$C(A1)
00026DEC <AmiBlitz3.ab3@9739>  BRA.w dirliberr
00026DF2 <AmiBlitz3.ab3@9743>   MOVE.b debugmode,-(a7)
00026DF6 <AmiBlitz3.ab3@9745>   MOVEM.l D1/A0/A2,-(A7)
00026DFE <AmiBlitz3.ab3@9755>   BTST #$7,use_debugger
00026E02 <AmiBlitz3.ab3@9756>   BNE 'debugon
00026E04 <AmiBlitz3.ab3@9757>   CLR.w D1
00026E08 <AmiBlitz3.ab3@9758>  BRA.b 'debugoff
00026E0A <AmiBlitz3.ab3@9761>   SNE D1
00026E10 <AmiBlitz3.ab3@9764>   MOVE.b d1,debugmode
00026E12 <AmiBlitz3.ab3@9769>   MOVEA.l A1,A0
00026E16 <AmiBlitz3.ab3@9770>   ADDA.l $12(A1),A0
00026E1A <AmiBlitz3.ab3@9771>   TST.w -$2(A0)
00026E1E <AmiBlitz3.ab3@9772>    BEQ.w 'notmax
00026E22 <AmiBlitz3.ab3@9773>   MOVEM.l A0-A1,-(A7)
00026E26 <AmiBlitz3.ab3@9774>   MOVE.w #$FB4F,D1            ; #64335,
00026E2A <AmiBlitz3.ab3@9775>    BSR.w uselib
00026E2E <AmiBlitz3.ab3@9776>   MOVEM.l (A7)+,A0-A1
00026E34 <AmiBlitz3.ab3@9777>   ADDQ.w #1,globalvarpointer
00026E3C <AmiBlitz3.ab3@9778>   BCLR #$0,globalvarpointer+1
00026E44 <AmiBlitz3.ab3@9779>   MOVE.w globalvarpointer,-$6(A0)
00026E4A <AmiBlitz3.ab3@9780>   ADDQ.w #4,globalvarpointer
00026E4E <AmiBlitz3.ab3@9781>   TST.l -$E(A0)
00026E52 <AmiBlitz3.ab3@9782>    BEQ.w 'notmax
00026E58 <AmiBlitz3.ab3@9783>   ADDQ.w #4,globalvarpointer
00026E60 <AmiBlitz3.ab3@9786>   MOVE.l libend,$28(A1)      ;pc of lib
00026E62 <AmiBlitz3.ab3@9787>   MOVEA.l A1,A0
00026E66 <AmiBlitz3.ab3@9788>   ADDA.l $12(A1),A0          ;start of lib
00026E68 <AmiBlitz3.ab3@9790>   MOVE.l A1,D1
00026E6C <AmiBlitz3.ab3@9791>   ADD.l $6(A1),D1            ;end of lib
00026E70 <AmiBlitz3.ab3@9792>   TST.l $2C(A1)
00026E74 <AmiBlitz3.ab3@9793>    BEQ.w 'nor
00026E7A <AmiBlitz3.ab3@9794>   TST.b debugmode
00026E7E <AmiBlitz3.ab3@9795>    BNE.w 'nor                ;errs turned on
00026E80 <AmiBlitz3.ab3@9796>   MOVE.l A1,D1
00026E84 <AmiBlitz3.ab3@9797>   ADD.l $2C(A1),D1           ;copy only non-errchks
00026E8A <AmiBlitz3.ab3@9800>   MOVEA.l libend,A2
00026E90 <AmiBlitz3.ab3@9803>   CMPA.l data1start,A2
00026E94 <AmiBlitz3.ab3@9804>    BCS.w 'okp
00026E9C <AmiBlitz3.ab3@9805>   MOVE.w #$FFFF,dontwrite_nomemleft     ; -1
00026E9E <AmiBlitz3.ab3@9808>   ADDQ.w #2,A0
00026EA0 <AmiBlitz3.ab3@9809>   ADDQ.w #2,A2
00026EA2 <AmiBlitz3.ab3@9810>   CMPA.l D1,A0
00026EA6 <AmiBlitz3.ab3@9811>    BCS.w 'bad
00026EAA <AmiBlitz3.ab3@9812>  BRA.w 'toreloc
00026EAC <AmiBlitz3.ab3@9815>   MOVE.w (A0)+,(A2)+                                       ;copylibcode
00026EAE <AmiBlitz3.ab3@9816>   CMPA.l D1,A0
00026EB2 <AmiBlitz3.ab3@9817>    BCS.w 'loop
00026EB8 <AmiBlitz3.ab3@9820>   MOVE.l A2,libend
00026EBC <AmiBlitz3.ab3@9821>   MOVE.l $20(A1),D1
00026EC0 <AmiBlitz3.ab3@9822>    BEQ.w 'noreloc
00026EC4 <AmiBlitz3.ab3@9824>   MOVEM.l D0/D2-D3,-(A7)
00026EC8 <AmiBlitz3.ab3@9825>   MOVEA.l $24(A1),A0         ;start of reloc table
00026ECA <AmiBlitz3.ab3@9826>   MOVEQ.l #$00,D3            ;no tokejsrs (yet!)
00026ECC <AmiBlitz3.ab3@9832>   MOVE.l (A0)+,D2
00026ED0 <AmiBlitz3.ab3@9833>   TST.l $2C(A1)
00026ED4 <AmiBlitz3.ab3@9834>    BEQ.w 'skipr
00026EDA <AmiBlitz3.ab3@9835>   TST.b debugmode
00026EDE <AmiBlitz3.ab3@9836>    BNE.w 'skipr
00026EE2 <AmiBlitz3.ab3@9837>   CMP.l $2C(A1),D2
00026EE6 <AmiBlitz3.ab3@9838>    BCC.w 'next
00026EEA <AmiBlitz3.ab3@9841>   TST.w $0(A1,D2.L)
00026EEE <AmiBlitz3.ab3@9842>    BPL.w 'notajsr
00026EF0 <AmiBlitz3.ab3@9843>   TST.l D3
00026EF4 <AmiBlitz3.ab3@9844>    BNE.w 'notajsr      ;already done...
00026EF6 <AmiBlitz3.ab3@9845>   MOVE.l A0,D0
00026EF8 <AmiBlitz3.ab3@9846>   MOVE.l D1,D3         ;number left to do!
00026EFC <AmiBlitz3.ab3@9849>   SUB.l $12(A1),D2
00026F00 <AmiBlitz3.ab3@9850>    BMI.w 'next
00026F04 <AmiBlitz3.ab3@9851>   ADD.l $28(A1),D2
00026F06 <AmiBlitz3.ab3@9852>   MOVE.l D2,-(A7)
00026F0C <AmiBlitz3.ab3@9853>   SUB.l destbufferstart,D2
00026F10 <AmiBlitz3.ab3@9854>    BSR.w addhunkoffset
00026F12 <AmiBlitz3.ab3@9855>   MOVEA.l (A7)+,A2
00026F18 <AmiBlitz3.ab3@9856>   TST.w dontwrite_nomemleft
00026F1C <AmiBlitz3.ab3@9857>    BNE.w 'next
00026F20 <AmiBlitz3.ab3@9858>   MOVE.l $28(A1),D2
00026F24 <AmiBlitz3.ab3@9859>   SUB.l $12(A1),D2
00026F26 <AmiBlitz3.ab3@9860>   ADD.l D2,(A2)
00026F28 <AmiBlitz3.ab3@9863>    SUBQ.l #1,D1
00026F2C <AmiBlitz3.ab3@9864>    BNE.w 'reloop
00026F2E <AmiBlitz3.ab3@9865>   MOVE.l D3,D2
00026F32 <AmiBlitz3.ab3@9866>    BEQ.w 'nohand
00026F34 <AmiBlitz3.ab3@9867>   MOVEA.l D0,A2
00026F36 <AmiBlitz3.ab3@9868>   SUBQ.w #4,A2
00026F3A <AmiBlitz3.ab3@9870>    BSR.w handlejsrs
00026F3E <AmiBlitz3.ab3@9873>    MOVEM.l (A7)+,D0/D2-D3
00026F42 <AmiBlitz3.ab3@9876>    MOVEM.l (A7)+,D1/A0/A2
00026F46 <AmiBlitz3.ab3@9878>   MOVEM.l D1-D2,-(A7)
00026F4A <AmiBlitz3.ab3@9879>   TST.w $1A(A1)
00026F4E <AmiBlitz3.ab3@9880>    BNE.w 'skip2a
00026F52 <AmiBlitz3.ab3@9881>   CLR.w $A(A1)
00026F56 <AmiBlitz3.ab3@9882>  BRA.w 'skip2
00026F5C <AmiBlitz3.ab3@9885>   ADDQ.w #1,globalvarpointer
00026F64 <AmiBlitz3.ab3@9886>   BCLR #$0,globalvarpointer+1
00026F6C <AmiBlitz3.ab3@9887>   MOVE.w globalvarpointer,$A(A1)
00026F70 <AmiBlitz3.ab3@9889>   CMP.w #-$12D,D1            ; was  #65235,
00026F74 <AmiBlitz3.ab3@9890>    BNE.w 'nots1
00026F7C <AmiBlitz3.ab3@9892>   MOVE.w $A(A1),movestdn+2
00026F84 <AmiBlitz3.ab3@9893>   MOVE.w $A(A1),pusha3+2
00026F8C <AmiBlitz3.ab3@9894>   MOVE.w $A(A1),pusha32+2
00026F94 <AmiBlitz3.ab3@9895>   MOVE.w $A(A1),pulla3+2
00026F9C <AmiBlitz3.ab3@9896>   MOVE.w $A(A1),geta3+2
00026FA0 <AmiBlitz3.ab3@9899>    CMP.w #-$3E9,D1           ; was #64535,
00026FA4 <AmiBlitz3.ab3@9900>    BNE.w 'notd
00026FAC <AmiBlitz3.ab3@9902>   MOVE.w $A(A1),dataget+2
00026FB4 <AmiBlitz3.ab3@9903>   MOVE.w $A(A1),dataput+2
00026FBC <AmiBlitz3.ab3@9904>   MOVE.w $A(A1),rescode+6
00026FC4 <AmiBlitz3.ab3@9905>   MOVE.w $A(A1),rescode2+2
00026FCA <AmiBlitz3.ab3@9908>   ADDQ.w #2,globalvarpointer
00026FCE <AmiBlitz3.ab3@9909>   TST.w $1A(A1)
00026FD2 <AmiBlitz3.ab3@9910>    BMI.w 'jword
00026FD8 <AmiBlitz3.ab3@9911>   ADDQ.w #2,globalvarpointer
00026FDC <AmiBlitz3.ab3@9914>   MOVEM.l D1/A1,-(A7)
00026FE0 <AmiBlitz3.ab3@9915>   BSR.w usevars
00026FE4 <AmiBlitz3.ab3@9916>   MOVEM.l (A7)+,D1/A1
00026FE6 <AmiBlitz3.ab3@9919>   MOVE.w D1,D2
00026FEA <AmiBlitz3.ab3@9920>   MOVE.l $16(A1),D1
00026FEE <AmiBlitz3.ab3@9921>    BSR.w uselib2
00026FF2 <AmiBlitz3.ab3@9922>   MOVE.l $1C(A1),D1
00026FF6 <AmiBlitz3.ab3@9923>    BSR.w uselib2
00026FFA <AmiBlitz3.ab3@9924>   MOVEM.l (A7)+,D1-D2
00027000 <AmiBlitz3.ab3@9926>   MOVE.b (a7)+,debugmode
00027002 <AmiBlitz3.ab3@9929> RTS
00027004 <AmiBlitz3.ab3@9936>   MOVEQ.l #$00,D2       ;do list till this...
0002700A <AmiBlitz3.ab3@9939>   MOVEA.l tokeslist,A2
0002700C <AmiBlitz3.ab3@9940>   CMPA.l D2,A2
00027010 <AmiBlitz3.ab3@9941>    BEQ.w 'done
00027012 <AmiBlitz3.ab3@9942>   MOVE.l A2,-(A7)       ;next till...
00027014 <AmiBlitz3.ab3@9945>   MOVEQ.l #$00,D3
00027018 <AmiBlitz3.ab3@9948>   MOVEA.l $8(A2),A3
0002701A <AmiBlitz3.ab3@9949>   CMPA.l D3,A3
0002701E <AmiBlitz3.ab3@9950>    BEQ.w 'done4
00027020 <AmiBlitz3.ab3@9952>   MOVE.l A3,-(A7)
00027024 <AmiBlitz3.ab3@9953>   MOVEM.l D2-D3/A2-A3,-(A7)
00027028 <AmiBlitz3.ab3@9954>   MOVE.w $4(A2),D1
0002702C <AmiBlitz3.ab3@9955>   MOVE.w $6(A2),D2
00027030 <AmiBlitz3.ab3@9957>    BSR.w tokecode
00027034 <AmiBlitz3.ab3@9959>   MOVEM.l (A7)+,D2-D3/A2-A3
0002703A <AmiBlitz3.ab3@9961>   MOVE.w dontwrite_nomemleft,D0
0002703E <AmiBlitz3.ab3@9962>    BEQ.w 'ok
00027040 <AmiBlitz3.ab3@9965>   MOVEA.l (A3),A3
00027042 <AmiBlitz3.ab3@9966>   CMPA.l D3,A3
00027046 <AmiBlitz3.ab3@9967>    BNE.w 'loop5
0002704A <AmiBlitz3.ab3@9968>  BRA.w 'skipz
0002704E <AmiBlitz3.ab3@9971>   MOVEA.l $4(A3),A0
00027050 <AmiBlitz3.ab3@9972>   MOVE.l D7,(A0)
00027052 <AmiBlitz3.ab3@9973>   MOVEA.l (A3),A3
00027054 <AmiBlitz3.ab3@9974>   CMPA.l D3,A3
00027058 <AmiBlitz3.ab3@9975>    BNE.w 'ok
0002705A <AmiBlitz3.ab3@9978>   MOVE.l (A7)+,D3
0002705E <AmiBlitz3.ab3@9979>  BRA.w 'loop3
00027060 <AmiBlitz3.ab3@9982>    MOVEA.l (A2),A2
00027062 <AmiBlitz3.ab3@9983>   CMPA.l D2,A2
00027066 <AmiBlitz3.ab3@9984>    BNE.w 'loop2
00027068 <AmiBlitz3.ab3@9985>   MOVE.l (A7)+,D2
0002706C <AmiBlitz3.ab3@9986>  BRA.w 'loop
0002706E <AmiBlitz3.ab3@9989> RTS
00027070 <AmiBlitz3.ab3@9997>   MOVE.w D2,-(A7)
00027074 <AmiBlitz3.ab3@9998>    BSR.w searchinstr
00027076 <AmiBlitz3.ab3@9999>   MOVE.w (A7)+,D2
0002707E <AmiBlitz3.ab3@10001>   BCLR #$7,blitzmode
00027082 <AmiBlitz3.ab3@10002>   BCLR #$E,D2
00027086 <AmiBlitz3.ab3@10003>    BEQ.w 'isamiga
0002708E <AmiBlitz3.ab3@10004>   BSET #$7,blitzmode
00027090 <AmiBlitz3.ab3@10007>   TST.w (A3)
00027094 <AmiBlitz3.ab3@10008>    BEQ.w 'simple
0002709A <AmiBlitz3.ab3@10009>   BTST #$2,$1(A3)
0002709E <AmiBlitz3.ab3@10010>    BNE.w tokeerr
000270A4 <AmiBlitz3.ab3@10011>   BTST #$3,$1(A3)
000270A8 <AmiBlitz3.ab3@10012>    BNE.w tokeerr
000270AC <AmiBlitz3.ab3@10016>   LEA $6(A3),A3     ;skip node
000270AE <AmiBlitz3.ab3@10019>   MOVE.w (A3)+,D0
000270B2 <AmiBlitz3.ab3@10020>    BMI.w tokeerr
000270B6 <AmiBlitz3.ab3@10021>   ANDI.w #$FF,D0
000270B8 <AmiBlitz3.ab3@10022>   ADDA.w D0,A3
000270BA <AmiBlitz3.ab3@10023>   ADDQ.w #1,A3
000270BC <AmiBlitz3.ab3@10024>   EXG.l D0,A3
000270C0 <AmiBlitz3.ab3@10025>   BCLR #$0,D0
000270C2 <AmiBlitz3.ab3@10026>   EXG.l D0,A3
000270C4 <AmiBlitz3.ab3@10027>   SUBQ.w #1,D2
000270C8 <AmiBlitz3.ab3@10028>    BPL.w 'loop2
000270CA <AmiBlitz3.ab3@10030>   TST.w (A3)
000270CE <AmiBlitz3.ab3@10031>    BNE.w 'go4it          ;no libs to fetch....
000270D2 <AmiBlitz3.ab3@10032>   MOVE.l $2(A3),D0
000270D6 <AmiBlitz3.ab3@10033>   OR.l $A(A3),D0
000270DA <AmiBlitz3.ab3@10034>    BNE.w 'go4it          ;no error chx...
000270E0 <AmiBlitz3.ab3@10035>   BTST #$0,$9(A3)
000270E4 <AmiBlitz3.ab3@10036>    BNE.w 'go4it          ;ditto...
000270E8 <AmiBlitz3.ab3@10037>   MOVE.l $6(A3),D7       ;sub offset
000270EC <AmiBlitz3.ab3@10038>   MOVE.w $0(A2,D7.L),D0
000270F0 <AmiBlitz3.ab3@10039>   ANDI.w #$F000,D0
000270F4 <AmiBlitz3.ab3@10040>   CMP.w #-$6000,D0
000270F8 <AmiBlitz3.ab3@10041>    BEQ.w 'go4it
000270FC <AmiBlitz3.ab3@10044>   SUB.l $12(A2),D7
00027100 <AmiBlitz3.ab3@10045>   ADD.l $28(A2),D7
00027102 <AmiBlitz3.ab3@10046>  RTS
00027108 <AmiBlitz3.ab3@10049>   LEA cutejsr,A0
0002710E <AmiBlitz3.ab3@10053>   MOVE.l destpointer,-(A7)
00027116 <AmiBlitz3.ab3@10054>   MOVE.w #$FFFF,lasta6     ; was -1
00027118 <AmiBlitz3.ab3@10056>    JSR (A0)
0002711C <AmiBlitz3.ab3@10057>   MOVE.w #$4E75,D1
00027120 <AmiBlitz3.ab3@10058>    BSR.w writeword
00027122 <AmiBlitz3.ab3@10060>   MOVE.l (A7)+,D7
00027124 <AmiBlitz3.ab3@10061>  RTS
00027126 <AmiBlitz3.ab3@10064>   TST.w (A3)+
0002712A <AmiBlitz3.ab3@10065>    BEQ.w 'skip
0002712C <AmiBlitz3.ab3@10066>   ADDQ.w #2,A3
00027130 <AmiBlitz3.ab3@10067>  BRA.w 'loop2
00027134 <AmiBlitz3.ab3@10070>   LEA $C(A3),A3
00027138 <AmiBlitz3.ab3@10071>  BRA.w 'loop
0002713A <AmiBlitz3.ab3@10074>   TST.w D2
0002713E <AmiBlitz3.ab3@10075>    BNE.w tokeerr
00027142 <AmiBlitz3.ab3@10077>   TST.w $6(A3)
00027146 <AmiBlitz3.ab3@10078>    BNE.w 'be4it
0002714A <AmiBlitz3.ab3@10079>   MOVE.l $8(A3),D0
0002714E <AmiBlitz3.ab3@10080>   OR.l $10(A3),D0
00027152 <AmiBlitz3.ab3@10081>    BNE.w 'be4it
00027158 <AmiBlitz3.ab3@10082>   BTST #$0,$F(A3)
0002715C <AmiBlitz3.ab3@10083>    BNE.w 'be4it
00027160 <AmiBlitz3.ab3@10084>   MOVE.l $C(A3),D7
00027164 <AmiBlitz3.ab3@10085>   MOVE.w $0(A2,D7.L),D0
00027168 <AmiBlitz3.ab3@10086>   ANDI.w #$F000,D0
0002716C <AmiBlitz3.ab3@10087>   CMP.w #-$6000,D0        ; was #$a000
00027170 <AmiBlitz3.ab3@10088>    BNE.w 'penis
00027172 <AmiBlitz3.ab3@10091>   MOVE.l A3,D1
00027174 <AmiBlitz3.ab3@10092>   SUB.l A2,D1
0002717A <AmiBlitz3.ab3@10093>   LEA Amakelibsub,A0
0002717E <AmiBlitz3.ab3@10094> BRA.w 'putcode
00027184 <AmiBlitz3.ab3@10098>   MOVEA.l _execbase,A6
0002718A <AmiBlitz3.ab3@10099>   MOVEA.l tokeslist,A2
00027190 <AmiBlitz3.ab3@10100>   CLR.l tokeslist
00027194 <AmiBlitz3.ab3@10103>     CMPA.w #$0,A2
00027198 <AmiBlitz3.ab3@10104>      BEQ.w 'done2
0002719C <AmiBlitz3.ab3@10105>     MOVEA.l $8(A2),A3
000271A0 <AmiBlitz3.ab3@10108>       CMPA.w #$0,A3
000271A4 <AmiBlitz3.ab3@10109>        BEQ.w 'done3
000271A6 <AmiBlitz3.ab3@10110>       MOVEA.l A3,A1
000271A8 <AmiBlitz3.ab3@10111>       MOVEA.l (A3),A3
000271AA <AmiBlitz3.ab3@10112>       MOVEQ.l #$08,D0
000271B0 <AmiBlitz3.ab3@10114>       MOVE.l mempool,a0
000271B6 <AmiBlitz3.ab3@10115>       MOVEA.l _execbase,A6
000271BA <AmiBlitz3.ab3@10116>       JSR _FreePooled(A6)
000271BE <AmiBlitz3.ab3@10119>  BRA.w 'floop2
000271C0 <AmiBlitz3.ab3@10122>     MOVEA.l A2,A1
000271C2 <AmiBlitz3.ab3@10123>     MOVEA.l (A2),A2
000271C4 <AmiBlitz3.ab3@10124>     MOVEQ.l #$0C,D0
000271CA <AmiBlitz3.ab3@10126>     MOVE.l mempool,a0
000271D0 <AmiBlitz3.ab3@10127>     MOVEA.l _execbase,A6
000271D4 <AmiBlitz3.ab3@10128>     JSR _FreePooled(A6)
000271D8 <AmiBlitz3.ab3@10131>  BRA.w 'floop
000271DA <AmiBlitz3.ab3@10134> RTS
000271DE <AmiBlitz3.ab3@10140>   MOVEM.l D3-D5/A1-A6,-(A7)
000271E0 <AmiBlitz3.ab3@10141>   MOVEA.l A1,A4
000271E2 <AmiBlitz3.ab3@10144>   MOVE.l (A2)+,D3
000271E6 <AmiBlitz3.ab3@10145>   MOVE.w $0(A4,D3.L),D5
000271EA <AmiBlitz3.ab3@10146>    BPL.w 'next
000271EE <AmiBlitz3.ab3@10148>   TST.l $2C(A4)
000271F2 <AmiBlitz3.ab3@10149>    BEQ.w 'skipr
000271F8 <AmiBlitz3.ab3@10150>   TST.b debugmode
000271FC <AmiBlitz3.ab3@10151>    BNE.w 'skipr
00027200 <AmiBlitz3.ab3@10152>   CMP.l $2C(A4),D3
00027204 <AmiBlitz3.ab3@10153>    BCC.w 'next
00027208 <AmiBlitz3.ab3@10156>   BCLR #$F,D5             ;to offset number
0002720C <AmiBlitz3.ab3@10157>   MOVE.w $2(A4,D3.L),D4
00027210 <AmiBlitz3.ab3@10158>   SUB.l $12(A4),D3
00027214 <AmiBlitz3.ab3@10159>   ADD.l $28(A4),D3
00027218 <AmiBlitz3.ab3@10161>   MOVEM.l D2/A2/A4,-(A7)
0002721C <AmiBlitz3.ab3@10162>    BSR.w maketjsr
00027220 <AmiBlitz3.ab3@10163>   MOVEM.l (A7)+,D2/A2/A4
00027222 <AmiBlitz3.ab3@10166>   SUBQ.l #1,D2
00027226 <AmiBlitz3.ab3@10167>    BNE.w 'loop
0002722A <AmiBlitz3.ab3@10169>   MOVEM.l (A7)+,D3-D5/A1-A6
0002722C <AmiBlitz3.ab3@10170> RTS
00027232 <AmiBlitz3.ab3@10178>   LEA tokeslist,A3
00027238 <AmiBlitz3.ab3@10179>   MOVEA.l _execbase,A6
0002723A <AmiBlitz3.ab3@10182>   MOVE.l (A3),D0
0002723E <AmiBlitz3.ab3@10183>    BEQ.w 'notfound
00027240 <AmiBlitz3.ab3@10184>   MOVEA.l D0,A3
00027244 <AmiBlitz3.ab3@10185>   CMP.w $4(A3),D4
00027248 <AmiBlitz3.ab3@10186>    BNE.w 'loop2
0002724C <AmiBlitz3.ab3@10187>   CMP.w $6(A3),D5
00027250 <AmiBlitz3.ab3@10188>    BNE.w 'loop2
00027254 <AmiBlitz3.ab3@10189>  BRA.w 'found
00027256 <AmiBlitz3.ab3@10194>   MOVEQ.l #$0C,D0
00027258 <AmiBlitz3.ab3@10195>   MOVEQ.l #$01,D1
0002725E <AmiBlitz3.ab3@10197>   MOVE.l mempool,a0
00027262 <AmiBlitz3.ab3@10198>   JSR _AllocPooled(a6)
00027264 <AmiBlitz3.ab3@10201>   MOVEA.l D0,A3
0002726A <AmiBlitz3.ab3@10202>   MOVE.l tokeslist,(A3)
00027270 <AmiBlitz3.ab3@10203>   MOVE.l A3,tokeslist
00027274 <AmiBlitz3.ab3@10204>   MOVE.w D4,$4(A3)
00027278 <AmiBlitz3.ab3@10205>   MOVE.w D5,$6(A3)
0002727C <AmiBlitz3.ab3@10206>   CLR.l $8(A3)
0002727E <AmiBlitz3.ab3@10209>   MOVEQ.l #$08,D0
00027280 <AmiBlitz3.ab3@10210>   MOVEQ.l #$01,D1
00027286 <AmiBlitz3.ab3@10212>   MOVE.l mempool,a0
0002728A <AmiBlitz3.ab3@10213>   JSR _AllocPooled(a6)
0002728C <AmiBlitz3.ab3@10216>   MOVEA.l D0,A0
00027290 <AmiBlitz3.ab3@10217>   MOVE.l D3,$4(A0)
00027294 <AmiBlitz3.ab3@10218>   MOVE.l $8(A3),(A0)
00027298 <AmiBlitz3.ab3@10219>   MOVE.l A0,$8(A3)
0002729A <AmiBlitz3.ab3@10221>   MOVE.w D4,D1
0002729E <AmiBlitz3.ab3@10222> BRA.w searchinstr       ;use this library - NOW!
000272A2 <AmiBlitz3.ab3@10225> tokeslist: Ds.l 1
000272A6 <AmiBlitz3.ab3@10238>   BEQ.w 'skip
000272A8 <AmiBlitz3.ab3@10239>   MOVE.l A1,-(A7)
000272AA <AmiBlitz3.ab3@10240>   ADDA.l D1,A1
000272AC <AmiBlitz3.ab3@10241>   ADDQ.w #6,A1
000272AE <AmiBlitz3.ab3@10244>     MOVE.w (A1)+,D1
000272B2 <AmiBlitz3.ab3@10245>     BEQ.w 'done
000272B4 <AmiBlitz3.ab3@10246>     CMP.w D2,D1
000272B8 <AmiBlitz3.ab3@10247>     BEQ.w 'skip2
000272BA <AmiBlitz3.ab3@10248>     MOVE.l A1,-(A7)
000272BE <AmiBlitz3.ab3@10249>     BSR.w uselib
000272C0 <AmiBlitz3.ab3@10250>     MOVEA.l (A7)+,A1
000272C2 <AmiBlitz3.ab3@10253>     ADDQ.w #2,A1
000272C6 <AmiBlitz3.ab3@10254>  BRA.w 'loop
000272C8 <AmiBlitz3.ab3@10257>   MOVEA.l (A7)+,A1
000272CA <AmiBlitz3.ab3@10260> RTS
000272D0 <AmiBlitz3.ab3@10264>   MOVEA.l libpointer,A1
000272D4 <AmiBlitz3.ab3@10267>   CMPA.w #$0,A1
000272D8 <AmiBlitz3.ab3@10268>    BEQ.b 'rts
000272DC <AmiBlitz3.ab3@10269>   CMP.w $4(A1),D1
000272E0 <AmiBlitz3.ab3@10270>    BEQ.w 'found
000272E2 <AmiBlitz3.ab3@10271>   MOVEA.l (A1),A1
000272E6 <AmiBlitz3.ab3@10272>  BRA.w 'loop
000272E8 <AmiBlitz3.ab3@10275>   MOVEQ.l #-$01,D1
000272EA <AmiBlitz3.ab3@10278> RTS
000272EE <AmiBlitz3.ab3@10285>   MOVEM.l d0/a2,-(a7)
000272F0 <AmiBlitz3.ab3@10286>   MOVEQ #0,d0
000272F6 <AmiBlitz3.ab3@10287>   LEA instrtab+4,a2
000272F8 <AmiBlitz3.ab3@10288>   MOVE.w d1,d0
000272FA <AmiBlitz3.ab3@10289>   ASL.l #3,d0
000272FE <AmiBlitz3.ab3@10290>   MOVE.l 0(a2,d0.l),a1                                     ;*8
00027304 <AmiBlitz3.ab3@10291>   CMP.l #0,a1
00027308 <AmiBlitz3.ab3@10292>   BNE 'foundb
0002730E <AmiBlitz3.ab3@10294>   MOVEA.l libpointer,A1
00027312 <AmiBlitz3.ab3@10297>     CMPA.w #$0,A1
00027316 <AmiBlitz3.ab3@10299>     BEQ.w noliberr
0002731A <AmiBlitz3.ab3@10301>     CMP.w $4(A1),D1
0002731E <AmiBlitz3.ab3@10302>     BEQ.w 'found
00027320 <AmiBlitz3.ab3@10303>    MOVEA.l (A1),A1
00027324 <AmiBlitz3.ab3@10304>  BRA.w 'loop
00027328 <AmiBlitz3.ab3@10308>   MOVE.l a1,0(a2,d0.l)
0002732C <AmiBlitz3.ab3@10311>   MOVEM.l (a7)+,d0/a2
0002732E <AmiBlitz3.ab3@10313> RTS
00027332 <AmiBlitz3.ab3@10323>   MOVEM.l d0-d1/a1,-(a7)
00027334 <AmiBlitz3.ab3@10324>   MOVEQ #0,d0
0002733A <AmiBlitz3.ab3@10325>   LEA instrtab,a1
0002733C <AmiBlitz3.ab3@10326>   MOVE.w d1,d0
0002733E <AmiBlitz3.ab3@10327>   ASL.l #3,d0
00027342 <AmiBlitz3.ab3@10328>   MOVE.l 0(a1,d0.l),a3
00027346 <AmiBlitz3.ab3@10329>   MOVE.l 4(a1,d0.l),a2
0002734C <AmiBlitz3.ab3@10330>   CMP.l #0,a3
00027350 <AmiBlitz3.ab3@10331>   BNE 'foundb
00027356 <AmiBlitz3.ab3@10334>   MOVEA.l libpointer,A2
0002735A <AmiBlitz3.ab3@10337>   CMPA.w #$0,A2
0002735E <AmiBlitz3.ab3@10338>   BEQ.w notokerr
00027362 <AmiBlitz3.ab3@10339>   CMP.w $E(A2),D1
00027366 <AmiBlitz3.ab3@10340>   BCS.w 'next
0002736A <AmiBlitz3.ab3@10341>   CMP.w $10(A2),D1
0002736E <AmiBlitz3.ab3@10342>   BCC.w 'next
00027372 <AmiBlitz3.ab3@10346>   LEA $30(A2),A3
00027376 <AmiBlitz3.ab3@10347>   TST.w $4(A2)
0002737A <AmiBlitz3.ab3@10348>   BPL.w 'userlib
0002737E <AmiBlitz3.ab3@10351>     CMP.w $E(A2),D1
00027382 <AmiBlitz3.ab3@10352>     BEQ.w 'found
00027384 <AmiBlitz3.ab3@10353>     SUBQ.w #1,D1
00027388 <AmiBlitz3.ab3@10354>     MOVEA.l $2(A3),A3
0002738C <AmiBlitz3.ab3@10355>  BRA.w 'loop2
00027390 <AmiBlitz3.ab3@10359>   MOVE.l a3,0(a1,d0.l)
00027394 <AmiBlitz3.ab3@10360>   MOVE.l a2,4(a1,d0.l)
00027398 <AmiBlitz3.ab3@10363>   MOVEM.l (a7)+,d0-d1/a1
0002739C <AmiBlitz3.ab3@10365>   MOVEM.l D1/A1-a3,-(A7)      ; was  movem.l d1/a1,-(a7)
000273A0 <AmiBlitz3.ab3@10367>   CMP.w #1,(a3)
000273A4 <AmiBlitz3.ab3@10368>   BNE.s 'ex10
000273AC <AmiBlitz3.ab3@10369>   CMP.l #$12345678,$e(a3)
000273B0 <AmiBlitz3.ab3@10370>   BNE.s 'ex10
000273B6 <AmiBlitz3.ab3@10371>   CMP.w #$ffff,$16(a3)
000273BA <AmiBlitz3.ab3@10372>   BNE.s 'ex10
000273BE <AmiBlitz3.ab3@10373>   MOVE.l $12(a3),d1
000273C2 <AmiBlitz3.ab3@10374>   BEQ.s 'ex10
000273C8 <AmiBlitz3.ab3@10375>   LEA pluginbase,a3
000273CC <AmiBlitz3.ab3@10377>  JMP 0(a2,d1.l)                                             ;plugin
000273CE <AmiBlitz3.ab3@10381>   MOVEA.l A2,A1
000273D4 <AmiBlitz3.ab3@10383>   CLR.b newmode
000273D8 <AmiBlitz3.ab3@10385>   MOVE.w $4(A1),D1       ;set lib#
000273DC <AmiBlitz3.ab3@10390>   BSR.w uselib3
000273E0 <AmiBlitz3.ab3@10391>   MOVEM.l (A7)+,D1/A1-a3
000273E2 <AmiBlitz3.ab3@10392>  RTS
000273E8 <AmiBlitz3.ab3@10396>   MOVE.w globalvarpointer,-(a7)         ; "
000273F0 <AmiBlitz3.ab3@10397>   MOVE.w #$8004,globalvarpointer        ; "
000273F4 <AmiBlitz3.ab3@10398>   BSR.w uselib3                         ; "
000273FA <AmiBlitz3.ab3@10399>   MOVE.w (a7)+,globalvarpointer         ; "
000273FE <AmiBlitz3.ab3@10400>   MOVEM.l (A7)+,D1/A1-a3
00027400 <AmiBlitz3.ab3@10401>  RTS
00027404 <AmiBlitz3.ab3@10405>     CMP.w $E(A2),D1
00027408 <AmiBlitz3.ab3@10406>     BEQ.w 'found
0002740A <AmiBlitz3.ab3@10407>     SUBQ.w #1,D1
0002740E <AmiBlitz3.ab3@10408>     MOVEA.l $2(A3),A3
00027412 <AmiBlitz3.ab3@10409>  BRA.w 'userlib
00027414 <AmiBlitz3.ab3@10412>   MOVEA.l (A2),A2
00027418 <AmiBlitz3.ab3@10413> BRA.w 'loop
0002741C <AmiBlitz3.ab3@10417>   MOVEM.l (A7)+,D1/A1-a3
00027422 <AmiBlitz3.ab3@10418>   JSR stripspaces
00027424 <AmiBlitz3.ab3@10419>   MOVEQ #0,d0
00027426 <AmiBlitz3.ab3@10420>   MOVE.b (a5)+,d0
0002742C <AmiBlitz3.ab3@10421>   MOVE.w d0,lastchar
0002742E <AmiBlitz3.ab3@10422>   ADDQ.l #4,a7
00027430 <AmiBlitz3.ab3@10423> RTS
00027436 <AmiBlitz3.ab3@10426> JUMP_writeword JMP writeword
0002743A <AmiBlitz3.ab3@10429> ptr_acidlibs:   Ds.l 1                                     ;deflibsat org source
0002743E <AmiBlitz3.ab3@10430> ptr_deflibs:    Ds.l 1                                     ;acidlibsat org source
00027442 <AmiBlitz3.ab3@10431> ptr_userlibs:   Ds.l 1                                     ;blitzlibsat org source  ;;start of blitzlibs list!
00027444 <AmiBlitz3.ab3@10441>   TST.l D0
00027448 <AmiBlitz3.ab3@10442>   BEQ.w 'rts
0002744A <AmiBlitz3.ab3@10443>     MOVE.l D0,D6                                           ;d6=len
00027450 <AmiBlitz3.ab3@10444>     MOVEA.l _dosbase,A6
00027456 <AmiBlitz3.ab3@10445>     MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
0002745A <AmiBlitz3.ab3@10446>     JSR _Open(A6)
0002745C <AmiBlitz3.ab3@10447>     MOVE.l D0,D7
00027460 <AmiBlitz3.ab3@10448>     BEQ.w 'rts
00027462 <AmiBlitz3.ab3@10449>       MOVE.l D6,D0
00027464 <AmiBlitz3.ab3@10450>       MOVEQ.l #$01,D1
0002746A <AmiBlitz3.ab3@10451>       MOVEA.l _execbase,A6
00027470 <AmiBlitz3.ab3@10454>       MOVE.l mempool,a0
00027474 <AmiBlitz3.ab3@10455>       JSR _AllocPooled(a6)
00027476 <AmiBlitz3.ab3@10457>       MOVE.l D0,D5                                         ;start address
00027478 <AmiBlitz3.ab3@10459>       MOVE.l D7,D1                                         ; handle
0002747A <AmiBlitz3.ab3@10460>       MOVE.l D5,D2                                         ; buffer addr
0002747C <AmiBlitz3.ab3@10461>       MOVE.l D6,D3                                         ; size
00027482 <AmiBlitz3.ab3@10462>       MOVEA.l _dosbase,A6
00027486 <AmiBlitz3.ab3@10463>       JSR _Read(A6)
00027488 <AmiBlitz3.ab3@10464>       MOVE.l D7,D1
0002748C <AmiBlitz3.ab3@10465>       JSR _Close(A6)
0002748E <AmiBlitz3.ab3@10467>       MOVEA.l D5,A0                                        ; buffer addr
00027490 <AmiBlitz3.ab3@10473>         MOVE.l (A0)+,D0                                    ; naechster Longwert nach DO
00027494 <AmiBlitz3.ab3@10474>         BEQ.b 'linkdone                                    ; wenn <> 0, dann
00027498 <AmiBlitz3.ab3@10475>           LEA $20(A0),A1  ;link in.                        ;   lade inhalt von D0+40bytes nach A1
0002749A <AmiBlitz3.ab3@10476>           MOVE.l A1,(A3)                                   ;   kopiere Adresse in A1 zum libpointer
0002749C <AmiBlitz3.ab3@10477>           MOVEA.l A1,A3                                    ;   kopiere A1 nach A3
0002749E <AmiBlitz3.ab3@10478>           ADDA.l D0,A0                                     ;   addiere inhalt von D0 zu A0 hinzu
000274A2 <AmiBlitz3.ab3@10482>           MOVE.l -$4(A1),D0    ;number of longwords.       ;   hole die 4bytes vor nach D0
000274A4 <AmiBlitz3.ab3@10483>           ADD.l D0,D0          ;to bytes...                ;   verdoppele D0
000274A6 <AmiBlitz3.ab3@10484>           ADD.l D0,D0                                      ;   verdoppele D0 nochmal
000274AA <AmiBlitz3.ab3@10485>           MOVE.l D0,$6(A1)     ;fix 1                      ;   schreibe D0 6bytes nach A1
000274AE <AmiBlitz3.ab3@10486>           CLR.l $20(A1)        ;no relocs                  ;   loesche D0+40bytes
000274B2 <AmiBlitz3.ab3@10487>           LEA $C(A1,D0.L),A2   ;reloc info.                ;   lade inhalt von (A1)+D0+$C nach A2
000274B4 <AmiBlitz3.ab3@10488>           CMPA.l A0,A2         ;is it over?
000274B8 <AmiBlitz3.ab3@10489>           BCC.b 'linkloop                                  ; wenn A0=>A2
000274BE <AmiBlitz3.ab3@10491>             MOVE.l -$8(A2),$20(A1)  ;number of relocs.     ;
000274C2 <AmiBlitz3.ab3@10492>             MOVE.l A2,$24(A1)       ;pointer to relocs.    ;
000274C6 <AmiBlitz3.ab3@10493>   BRA.w 'linkloop
000274C8 <AmiBlitz3.ab3@10496>       MOVE.l D5,D0
000274CA <AmiBlitz3.ab3@10499> RTS
000274F4 <AmiBlitz3.ab3@10504>   !basic
00027568 <AmiBlitz3.ab3@10505>    tempmapping$ = dos_AddPart{my_systemdir$,"token_mapping_userlibs.txt"}
0002759C <AmiBlitz3.ab3@10506>    dos_Delete{tempmapping$}
000275E0 <AmiBlitz3.ab3@10507>    fid.l = file_Open{tempmapping$,#file_forcewrite}
000275FE <AmiBlitz3.ab3@10508>   !asm
00027604 <AmiBlitz3.ab3@10510>   LEA libpointer,A3
0002760A <AmiBlitz3.ab3@10514>   MOVE.l size_deflibs,D0                 ; in org source was acid libs first
00027610 <AmiBlitz3.ab3@10515>   MOVE.l deflib,d1
00027614 <AmiBlitz3.ab3@10517>   BEQ 'l1
00027618 <AmiBlitz3.ab3@10518>  BRA 'l2
0002761E <AmiBlitz3.ab3@10521>   MOVE.l #str_path_deflibs,D1
00027622 <AmiBlitz3.ab3@10525>   BSR.w load_libsfile
00027628 <AmiBlitz3.ab3@10526>   MOVE.l D0,ptr_deflibs
0002762E <AmiBlitz3.ab3@10529>   MOVE.l size_acidlibs,D0               ; in org source was deflibs libs second
00027634 <AmiBlitz3.ab3@10530>   MOVE.l #str_path_acidlibs,D1
00027638 <AmiBlitz3.ab3@10531>   BSR.w load_libsfile
0002763E <AmiBlitz3.ab3@10532>   MOVE.l D0,ptr_acidlibs
00027640 <AmiBlitz3.ab3@10538>   CLR.l (A3)
00027646 <AmiBlitz3.ab3@10539>   MOVE.l A3,ptr_userlibs
0002764C <AmiBlitz3.ab3@10544>   LEA str_libfilename,A0
00027652 <AmiBlitz3.ab3@10545>   LEA str_path_userlibs,A1
00027654 <AmiBlitz3.ab3@10548>     MOVE.b (A1)+,(A0)+
00027658 <AmiBlitz3.ab3@10549>   BNE.b 'loop0
0002765A <AmiBlitz3.ab3@10552>   SUBQ.w #1,A0
0002765E <AmiBlitz3.ab3@10553>   MOVE.b #$2F,(A0)+
00027660 <AmiBlitz3.ab3@10557>   MOVE.l A0,-(A7) ;store first pos for chars        ; -- store str_path_userlibs in A7
00027666 <AmiBlitz3.ab3@10559>   LEA ptr_userlibs_list,A2   ;lib names!
0002766C <AmiBlitz3.ab3@10560>   MOVEA.l ptr_userlibs,A3
00027672 <AmiBlitz3.ab3@10561>   MOVEA.l _dosbase,A6
00027674 <AmiBlitz3.ab3@10566>       MOVE.l (A2),D0                                       ; addresse aus liste nach D0
00027678 <AmiBlitz3.ab3@10567>       BNE.b 'more                                      ; wenn nix drin, processing ueberspringen
0002767A <AmiBlitz3.ab3@10569>       CLR.l (A3)
0002767C <AmiBlitz3.ab3@10570>       ADDQ.w #4,A7
000276A6 <AmiBlitz3.ab3@10572>       !basic
000276BA <AmiBlitz3.ab3@10573>       If fid<>-1
000276C4 <AmiBlitz3.ab3@10574>         file_Close{fid}
000276D0 <AmiBlitz3.ab3@10575>         fid = -1
000276EE <AmiBlitz3.ab3@10577>       !asm
000276F2 <AmiBlitz3.ab3@10579>  BRA.w process_libraries
000276F4 <AmiBlitz3.ab3@10582>       MOVEA.l D0,A2                                        ; addresse zureuck nach A2
000276F8 <AmiBlitz3.ab3@10583>       TST.w $4(A2)                                         ; naechste addresse pruefen
000276FC <AmiBlitz3.ab3@10584>     BEQ.b 'loop
00027700 <AmiBlitz3.ab3@10586>     LEA $6(A2),A1          ;add dir name to libsdir
00027702 <AmiBlitz3.ab3@10587>     MOVEA.l (A7),A0
00027704 <AmiBlitz3.ab3@10590>       MOVE.b (A1)+,(A0)+
00027708 <AmiBlitz3.ab3@10591>     BNE.w 'loop2
0002770A <AmiBlitz3.ab3@10595>     MOVE.l A0,-(A7)                  ;pointer for lib name
00027710 <AmiBlitz3.ab3@10597>     MOVE.l #str_libfilename,D1
00027712 <AmiBlitz3.ab3@10598>     MOVEQ.l #-$02,D2
00027718 <AmiBlitz3.ab3@10599>     MOVEA.l _dosbase,A6
0002771C <AmiBlitz3.ab3@10600>      JSR _Lock(A6)
0002771E <AmiBlitz3.ab3@10601>     MOVE.l D0,D1
00027722 <AmiBlitz3.ab3@10602>      BEQ.w 'exdone2
00027724 <AmiBlitz3.ab3@10603>     MOVEA.l (A7),A0
0002772A <AmiBlitz3.ab3@10604>     MOVE.b #$2F,-$1(A0)           ;#'/'
0002772C <AmiBlitz3.ab3@10607>     MOVE.l D1,-(A7)               ;lock
00027732 <AmiBlitz3.ab3@10608>     MOVE.l #ptr_parameterstore,D2
00027738 <AmiBlitz3.ab3@10609>     MOVEA.l _dosbase,A6
0002773C <AmiBlitz3.ab3@10610>     JSR _Examine(A6)
0002773E <AmiBlitz3.ab3@10611>     TST.l D0
00027742 <AmiBlitz3.ab3@10612>      BEQ.w 'exdone
00027748 <AmiBlitz3.ab3@10619>     LEA fib_FileName,A0
0002774C <AmiBlitz3.ab3@10620>     BSR.w check_for_infoextention
00027750 <AmiBlitz3.ab3@10621>     BEQ.w 'exdone
0002777A <AmiBlitz3.ab3@10625>     !basic
000277FE <AmiBlitz3.ab3@10626>       Poke$ ?str_libfilename,dos_AddPart{Peek$(?str_path_userlibs),Peek$(?fib_FileName)}
0002781C <AmiBlitz3.ab3@10627>     !asm
00027822 <AmiBlitz3.ab3@10628>     MOVE.l #str_libfilename,D1
00027826 <AmiBlitz3.ab3@10629>     BSR.w open_userlibfile
00027828 <AmiBlitz3.ab3@10633>     MOVE.l (A7)+,D1
0002782E <AmiBlitz3.ab3@10634>     MOVEA.l _dosbase,A6
00027832 <AmiBlitz3.ab3@10635>     JSR _UnLock(A6)
00027834 <AmiBlitz3.ab3@10638>     ADDQ.w #4,A7    ;forget namepos
00027838 <AmiBlitz3.ab3@10639> BRA.w 'loop
0002783E <AmiBlitz3.ab3@10646>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00027844 <AmiBlitz3.ab3@10647>   MOVEA.l _dosbase,A6
00027848 <AmiBlitz3.ab3@10648>    JSR _Open(A6)
0002784A <AmiBlitz3.ab3@10649>   MOVE.l D0,D7
0002784E <AmiBlitz3.ab3@10650>    BEQ.w 'openerr
00027850 <AmiBlitz3.ab3@10653>   MOVE.l D7,D1                                             ; filehandle
00027856 <AmiBlitz3.ab3@10654>   MOVE.l #optstuff,D2                                     ; buffer
0002785C <AmiBlitz3.ab3@10655>   MOVEA.l _dosbase,A6
0002785E <AmiBlitz3.ab3@10656>   MOVEQ.l #$20,D3                                          ; size
00027862 <AmiBlitz3.ab3@10657>   JSR _Read(A6)
00027868 <AmiBlitz3.ab3@10660>   MOVE.l optstuff+28,D6      ;long words to read
0002786A <AmiBlitz3.ab3@10661>   LSL.l #2,D6
0002786C <AmiBlitz3.ab3@10662>   MOVE.l D6,D0
0002786E <AmiBlitz3.ab3@10663>   MOVEQ.l #$01,D1
00027874 <AmiBlitz3.ab3@10664>   MOVEA.l _execbase,A6
0002787A <AmiBlitz3.ab3@10667>   MOVE.l mempool,a0
0002787E <AmiBlitz3.ab3@10668>   JSR _AllocPooled(a6)
00027880 <AmiBlitz3.ab3@10670>   MOVEA.l D0,A5
00027886 <AmiBlitz3.ab3@10673>   MOVEA.l _dosbase,A6
00027888 <AmiBlitz3.ab3@10674>   MOVE.l D7,D1                                             ; filehandle
0002788A <AmiBlitz3.ab3@10675>   MOVE.l A5,D2                                             ; buffer
0002788C <AmiBlitz3.ab3@10676>   MOVE.l D6,D3                                             ; size
00027890 <AmiBlitz3.ab3@10677>    JSR _Read(A6)   ;read in struct
00027892 <AmiBlitz3.ab3@10679>   MOVE.l A5,(A3)
00027894 <AmiBlitz3.ab3@10682>   MOVE.l A5,d0
00027896 <AmiBlitz3.ab3@10685>   MOVEA.l A5,A3
0002789A <AmiBlitz3.ab3@10686>   MOVE.l D6,$6(A5)
0002789E <AmiBlitz3.ab3@10687>   CLR.l $20(A5)
000278C8 <AmiBlitz3.ab3@10689>   !basic
000278D2 <AmiBlitz3.ab3@10691>   addr_libnum.l = PutD0 + 4
000278E6 <AmiBlitz3.ab3@10692>   If fid<>-1
00027986 <AmiBlitz3.ab3@10693>     currentlib$ = LSet$(Peek.s(?fib_FileName),30)+";"+LSet$(Get_Libinfo{addr_libnum},30) ;+";"+Str$(Peek.w(addr_libnum))
000279B8 <AmiBlitz3.ab3@10694>     file_WriteLine{fid,currentlib$}
000279D6 <AmiBlitz3.ab3@10696>   !asm
000279D8 <AmiBlitz3.ab3@10699>   MOVE.l D7,D1                                             ; filehandle
000279DE <AmiBlitz3.ab3@10700>   MOVE.l #optstuff,D2                                     ; buffer
000279E0 <AmiBlitz3.ab3@10701>   MOVEQ.l #$0C,D3                                          ; size
000279E6 <AmiBlitz3.ab3@10702>   MOVEA.l _dosbase,A6
000279EA <AmiBlitz3.ab3@10703>    JSR _Read(A6)
000279F0 <AmiBlitz3.ab3@10706>   CMP.l #$C,D0
000279F4 <AmiBlitz3.ab3@10707>    BCS.w 'closeup
000279FA <AmiBlitz3.ab3@10710>   MOVE.l optstuff+4,D0
000279FE <AmiBlitz3.ab3@10711>   MOVE.l D0,$20(A5)
00027A00 <AmiBlitz3.ab3@10712>   LSL.l #2,D0
00027A02 <AmiBlitz3.ab3@10713>   MOVE.l D0,D5             ;length of reloc info
00027A04 <AmiBlitz3.ab3@10714>   MOVEQ.l #$01,D1
00027A0A <AmiBlitz3.ab3@10715>   MOVEA.l _execbase,A6
00027A10 <AmiBlitz3.ab3@10717>   MOVE.l mempool,a0
00027A14 <AmiBlitz3.ab3@10718>   JSR _AllocPooled(a6)
00027A1A <AmiBlitz3.ab3@10721>   MOVEA.l _dosbase,A6
00027A1E <AmiBlitz3.ab3@10723>   MOVE.l D0,$24(A5)        ;pointer to reloc mem
00027A20 <AmiBlitz3.ab3@10724>   MOVE.l D7,D1
00027A22 <AmiBlitz3.ab3@10725>   MOVE.l D0,D2
00027A24 <AmiBlitz3.ab3@10726>   MOVE.l D5,D3
00027A28 <AmiBlitz3.ab3@10727>   JSR _Read(A6)
00027A2A <AmiBlitz3.ab3@10730>   MOVE.l D7,D1
00027A30 <AmiBlitz3.ab3@10731>   MOVEA.l _dosbase,A6
00027A34 <AmiBlitz3.ab3@10732> JMP _Close(A6)
00027A36 <AmiBlitz3.ab3@10735> RTS
00027A3C <AmiBlitz3.ab3@10745>   CLR.w number_of_objects
00027A42 <AmiBlitz3.ab3@10746>   MOVEA.l end_of_tokenlist,A3
00027A48 <AmiBlitz3.ab3@10747>   MOVEA.l libpointer,A2
00027A4C <AmiBlitz3.ab3@10750>     CMPA.w #$0,A2
00027A50 <AmiBlitz3.ab3@10751>     BEQ.w 'done                                        ; <-- abbruch mit RTS
00027A54 <AmiBlitz3.ab3@10753>     MOVE.w $4(A2),D7                                       ; <-- get tokennumber
00027A58 <AmiBlitz3.ab3@10754>     BMI.w 'syslib
00027A5A <AmiBlitz3.ab3@10755>       LSL.w #7,D7
00027A5C <AmiBlitz3.ab3@10756>       ADDQ.w #1,D7
00027A60 <AmiBlitz3.ab3@10757>       MOVE.w D7,$E(A2)
00027A64 <AmiBlitz3.ab3@10760>     LEA $30(A2),A1
00027A6A <AmiBlitz3.ab3@10761>     LEA temp1,A4
00027A6C <AmiBlitz3.ab3@10764>       MOVE.w (A1),D0
00027A70 <AmiBlitz3.ab3@10765>       BMI.w 'next
00027A72 <AmiBlitz3.ab3@10766>       MOVE.l A1,(A4)
00027A74 <AmiBlitz3.ab3@10767>       MOVEA.l A1,A4      ;last link for subs
00027A76 <AmiBlitz3.ab3@10768>       ADDQ.w #2,A4
00027A78 <AmiBlitz3.ab3@10769>       ADDQ.w #6,A1
00027A7C <AmiBlitz3.ab3@10770>       CMP.w #$8,D0
00027A80 <AmiBlitz3.ab3@10771>       BEQ.w 'addtoke
00027A84 <AmiBlitz3.ab3@10772>         ANDI.w #$F,D0
00027A88 <AmiBlitz3.ab3@10773>         BNE.w 'something
00027A8C <AmiBlitz3.ab3@10777>           BSR.w skiplibreg
00027A90 <AmiBlitz3.ab3@10778>           LEA $C(A1),A1
00027A92 <AmiBlitz3.ab3@10779>           ADDQ.w #1,D7   ;in case it's a user lib
00027A96 <AmiBlitz3.ab3@10780>  BRA.w 'loop2
00027A9A <AmiBlitz3.ab3@10783>     BTST #$2,D0
00027A9E <AmiBlitz3.ab3@10784>     BEQ.w 'notalib
00027AA0 <AmiBlitz3.ab3@10785>       ADDQ.w #4,A1
00027AA2 <AmiBlitz3.ab3@10788>         TST.b (A1)+
00027AA6 <AmiBlitz3.ab3@10789>       BPL.w 'alibloop
00027AAA <AmiBlitz3.ab3@10790>       BSR.w aligna1
00027AAE <AmiBlitz3.ab3@10791>  BRA.w 'addtoke
00027AB0 <AmiBlitz3.ab3@10796>       MOVE.w (A1)+,D0
00027AB4 <AmiBlitz3.ab3@10797>       BMI.w 'addtoke
00027AB8 <AmiBlitz3.ab3@10798>       ANDI.w #$FF,D0
00027ABA <AmiBlitz3.ab3@10799>       ADDA.w D0,A1
00027ABE <AmiBlitz3.ab3@10800>       BSR.w aligna1
00027AC2 <AmiBlitz3.ab3@10801>       BSR.w skiplibreg
00027AC6 <AmiBlitz3.ab3@10802>       LEA $C(A1),A1
00027ACA <AmiBlitz3.ab3@10803>  BRA.w 'stloop
00027ACC <AmiBlitz3.ab3@10806>     MOVE.l A1,(A3)
00027ACE <AmiBlitz3.ab3@10807>     MOVEA.l A1,A3
00027AD0 <AmiBlitz3.ab3@10808>     ADDQ.w #4,A1
00027AD2 <AmiBlitz3.ab3@10810>     MOVE.w D7,(A1)+
00027AD4 <AmiBlitz3.ab3@10813>       TST.b (A1)+
00027AD8 <AmiBlitz3.ab3@10814>     BNE.w 'tokeloop
00027ADA <AmiBlitz3.ab3@10817>       TST.b (A1)+
00027ADE <AmiBlitz3.ab3@10818>     BNE.w 'tokeloop2
00027AE2 <AmiBlitz3.ab3@10819>     BSR.w aligna1
00027AE4 <AmiBlitz3.ab3@10820>     ADDQ.w #1,D7
00027AE8 <AmiBlitz3.ab3@10821>  BRA.w 'loop2
00027AEC <AmiBlitz3.ab3@10824>     TST.w $4(A2)
00027AF0 <AmiBlitz3.ab3@10825>      BMI.w 'notulib
00027AF4 <AmiBlitz3.ab3@10826>     MOVE.w D7,$10(A2)
00027AF6 <AmiBlitz3.ab3@10829>     ADDQ.w #2,A1
00027AF8 <AmiBlitz3.ab3@10830>     TST.l (A1)+
00027AFC <AmiBlitz3.ab3@10831>      BEQ.w 'nomax
00027B02 <AmiBlitz3.ab3@10832>     ADDQ.w #1,number_of_objects
00027B06 <AmiBlitz3.ab3@10833>     LEA $16(A1),A1
00027B08 <AmiBlitz3.ab3@10836>     SUBA.l A2,A1
00027B0C <AmiBlitz3.ab3@10837>     MOVE.l A1,$12(A2)
00027B0E <AmiBlitz3.ab3@10838>     MOVEA.l (A2),A2
00027B12 <AmiBlitz3.ab3@10839>  BRA.w 'loop
00027B14 <AmiBlitz3.ab3@10842>   CLR.l (A3)
00027B1A <AmiBlitz3.ab3@10844> 
00027B20 <AmiBlitz3.ab3@10846>   MOVE.l A7,errstack
00027B2A <AmiBlitz3.ab3@10847>   MOVE.l #'cont,errcont
00027B32 <AmiBlitz3.ab3@10848>   MOVE.w #$FFFF,ezerr       ; was -1
00027B36 <AmiBlitz3.ab3@10849>   MOVE.w #$FFFA,D1          ;#65530
00027B3A <AmiBlitz3.ab3@10850>    BSR.w findlib            ;get address of mem lib
00027B40 <AmiBlitz3.ab3@10851>   MOVE.l A1,tempvm
00027B44 <AmiBlitz3.ab3@10852>   MOVE.w #$FDA7,D1          ;#64935,
00027B48 <AmiBlitz3.ab3@10853>    BSR.w findlib
00027B4E <AmiBlitz3.ab3@10854>   MOVE.l A1,ffplib
00027B50 <AmiBlitz3.ab3@10857> RTS
00027B54 <AmiBlitz3.ab3@10860> ffplib:  Ds.l 1
00027B56 <AmiBlitz3.ab3@10864>     TST.w (A1)+
00027B5A <AmiBlitz3.ab3@10865>     BEQ.w 'done
00027B5C <AmiBlitz3.ab3@10866>     ADDQ.w #2,A1
00027B60 <AmiBlitz3.ab3@10867>  BRA.w skiplibreg
00027B62 <AmiBlitz3.ab3@10870> RTS
00027B64 <AmiBlitz3.ab3@10874>   EXG.l A1,A0
00027B68 <AmiBlitz3.ab3@10875>   BSR.w aligna1
00027B6A <AmiBlitz3.ab3@10876>   EXG.l A1,A0
00027B6C <AmiBlitz3.ab3@10877> RTS
00027B6E <AmiBlitz3.ab3@10881>   EXG.l D0,A1
00027B70 <AmiBlitz3.ab3@10882>   ADDQ.l #1,D0
00027B74 <AmiBlitz3.ab3@10883>   BCLR #$0,D0
00027B76 <AmiBlitz3.ab3@10884>   EXG.l D0,A1
00027B78 <AmiBlitz3.ab3@10885> RTS
00027B7E <AmiBlitz3.ab3@10889>   MOVEA.l _execbase,A6
00027B84 <AmiBlitz3.ab3@10890>   MOVEA.l ptr_userlibs,A2
00027B86 <AmiBlitz3.ab3@10891>   MOVE.l (A2),D0
00027B88 <AmiBlitz3.ab3@10892>   CLR.l (A2)
00027B8A <AmiBlitz3.ab3@10893>   MOVEA.l D0,A2
00027B8E <AmiBlitz3.ab3@10896>     CMPA.w #$0,A2
00027B92 <AmiBlitz3.ab3@10897>     BEQ.w free_userlib
00027B96 <AmiBlitz3.ab3@10899>     MOVE.l $20(A2),D0
00027B9A <AmiBlitz3.ab3@10900>     BEQ.b 'skip
00027B9C <AmiBlitz3.ab3@10901>       LSL.l #2,D0
00027BA2 <AmiBlitz3.ab3@10903>       MOVE.l mempool,a0
00027BA6 <AmiBlitz3.ab3@10905>       MOVEA.l $24(A2),A1
00027BAA <AmiBlitz3.ab3@10907>       JSR _FreePooled(A6)
00027BAC <AmiBlitz3.ab3@10912>     MOVEA.l A2,A1
00027BB0 <AmiBlitz3.ab3@10913>     MOVE.l $6(A1),D0
00027BB6 <AmiBlitz3.ab3@10915>     MOVE.l mempool,a0
00027BB8 <AmiBlitz3.ab3@10917>     MOVEA.l (A2),A2
00027BBE <AmiBlitz3.ab3@10919>     MOVEA.l _execbase,A6
00027BC2 <AmiBlitz3.ab3@10920>     JSR _FreePooled(A6)
00027BC6 <AmiBlitz3.ab3@10923> BRA.w 'loop
00027BCA <AmiBlitz3.ab3@10927>   BSR.w free_userlibs
00027BD0 <AmiBlitz3.ab3@10929>   MOVEA.l _execbase,A6
00027BD6 <AmiBlitz3.ab3@10930>   CLR.l libpointer
00027BDC <AmiBlitz3.ab3@10931>   MOVEA.l end_of_tokenlist,A0
00027BDE <AmiBlitz3.ab3@10932>   CLR.l (A0)
00027BE4 <AmiBlitz3.ab3@10934>   MOVE.l size_acidlibs,D0
00027BE8 <AmiBlitz3.ab3@10935>   BEQ.b 'defskip
00027BEE <AmiBlitz3.ab3@10936>     MOVE.l ptr_acidlibs,D1
00027BF2 <AmiBlitz3.ab3@10937>     BEQ.b 'defskip
00027BF8 <AmiBlitz3.ab3@10938>       CLR.l ptr_acidlibs
00027BFA <AmiBlitz3.ab3@10939>       MOVEA.l D1,A1
00027C00 <AmiBlitz3.ab3@10941>       MOVE.l mempool,a0
00027C06 <AmiBlitz3.ab3@10942>       MOVEA.l _execbase,A6
00027C0A <AmiBlitz3.ab3@10943>       JSR _FreePooled(A6)                                 ; free acidlibs
00027C10 <AmiBlitz3.ab3@10948>   MOVE.l size_deflibs,D0
00027C14 <AmiBlitz3.ab3@10949>   BEQ.b 'acidskip
00027C1A <AmiBlitz3.ab3@10950>     MOVE.l ptr_deflibs,D1
00027C1E <AmiBlitz3.ab3@10951>     BEQ.b 'acidskip
00027C24 <AmiBlitz3.ab3@10952>       CLR.l ptr_deflibs                                    ; d0: memorySize
00027C26 <AmiBlitz3.ab3@10953>       MOVEA.l D1,A1                                        ; a1: memory
00027C2C <AmiBlitz3.ab3@10955>       MOVE.l mempool,a0                                    ; a0: poolHeader
00027C32 <AmiBlitz3.ab3@10956>       MOVEA.l _execbase,A6
00027C36 <AmiBlitz3.ab3@10957>       JSR _FreePooled(A6)                                  ; free deflibs
00027C38 <AmiBlitz3.ab3@10962> RTS
00027C3E <AmiBlitz3.ab3@10966>   MOVEA.l currentmacroaddr,A0
00027C40 <AmiBlitz3.ab3@10967>   MOVEA.l (A0),A2
00027C42 <AmiBlitz3.ab3@10968>   CLR.l (A0)
00027C48 <AmiBlitz3.ab3@10969>   MOVEA.l _execbase,A6
00027C4C <AmiBlitz3.ab3@10972>     CMPA.w #$0,A2
00027C50 <AmiBlitz3.ab3@10973>     BEQ.w 'done
00027C52 <AmiBlitz3.ab3@10974>     MOVEQ.l #$00,D0
00027C56 <AmiBlitz3.ab3@10975>     MOVE.w $8(A2),D0
00027C5A <AmiBlitz3.ab3@10976>     BEQ.w 'skip
00027C5E <AmiBlitz3.ab3@10977>     MOVEA.l $4(A2),A1
00027C64 <AmiBlitz3.ab3@10979>     MOVE.l mempool,a0
00027C68 <AmiBlitz3.ab3@10980>     JSR _FreePooled(A6)
00027C6A <AmiBlitz3.ab3@10985>     MOVEA.l A2,A1
00027C6C <AmiBlitz3.ab3@10986>     MOVEA.l (A2),A2
00027C6E <AmiBlitz3.ab3@10987>     MOVEQ.l #$00,D0
00027C72 <AmiBlitz3.ab3@10988>     MOVE.b $C(A1),D0
00027C78 <AmiBlitz3.ab3@10990>     MOVE.l mempool2,a0
00027C7C <AmiBlitz3.ab3@10991>     JSR _FreePooled(A6)
00027C80 <AmiBlitz3.ab3@10995>  BRA.w 'loop
00027C82 <AmiBlitz3.ab3@10998> RTS
00027C88 <AmiBlitz3.ab3@11002>   MOVEA.l templabel,A2
00027C8E <AmiBlitz3.ab3@11003>   CLR.l templabel
00027C90 <AmiBlitz3.ab3@11005> RTS
00027C96 <AmiBlitz3.ab3@11007>   MOVEA.l _execbase,A6                                     ;??looks like dead code?
00027C9A <AmiBlitz3.ab3@11010>     CMPA.w #$0,A2
00027C9E <AmiBlitz3.ab3@11011>     BEQ.w 'done
00027CA0 <AmiBlitz3.ab3@11012>     MOVEQ.l #$00,D0
00027CA4 <AmiBlitz3.ab3@11013>     MOVE.b $E(A2),D0                                       ;labeltemp
00027CA6 <AmiBlitz3.ab3@11014>     MOVEA.l A2,A1
00027CA8 <AmiBlitz3.ab3@11015>     MOVEA.l (A2),A2
00027CAE <AmiBlitz3.ab3@11017>     MOVE.l mempool2,a0
00027CB2 <AmiBlitz3.ab3@11022>  BRA.w 'loop
00027CB4 <AmiBlitz3.ab3@11025> RTS
00027CBA <AmiBlitz3.ab3@11029>   MOVEA.l data1,A4
00027CC0 <AmiBlitz3.ab3@11030>   CMPA.l data2at,A4
00027CC4 <AmiBlitz3.ab3@11031>   BCC.w 'over
00027CC6 <AmiBlitz3.ab3@11032>     MOVE.b D1,(A4)+
00027CCC <AmiBlitz3.ab3@11033>     MOVE.l A4,data1
00027CCE <AmiBlitz3.ab3@11034>  RTS
00027CD6 <AmiBlitz3.ab3@11037>   MOVE.w #$FFFF,dontwrite_nomemleft     ; was -1                             ;move #-1, org source
00027CDC <AmiBlitz3.ab3@11038>   ADDQ.l #1,data1
00027CDE <AmiBlitz3.ab3@11039> RTS
00027CE0 <AmiBlitz3.ab3@11043>   SWAP D1
00027CE4 <AmiBlitz3.ab3@11044>   BSR.w pokedata1
00027CE6 <AmiBlitz3.ab3@11045>   SWAP D1
00027CEC <AmiBlitz3.ab3@11048>   MOVEA.l data1,A4
00027CF2 <AmiBlitz3.ab3@11049>   CMPA.l data2at,A4
00027CF6 <AmiBlitz3.ab3@11050>    BCC.w 'over
00027CF8 <AmiBlitz3.ab3@11051>   MOVE.w D1,(A4)+
00027CFE <AmiBlitz3.ab3@11052>   MOVE.l A4,data1
00027D00 <AmiBlitz3.ab3@11053>  RTS
00027D08 <AmiBlitz3.ab3@11056>   MOVE.w #$FFFF,dontwrite_nomemleft    ; was -1
00027D0E <AmiBlitz3.ab3@11057>   ADDQ.l #2,data1
00027D10 <AmiBlitz3.ab3@11058> RTS
00027D16 <AmiBlitz3.ab3@11062>   MOVE.l data1,D3                                      ;write local string/type allocs
00027D18 <AmiBlitz3.ab3@11063>   MOVEQ.l #$00,D4
00027D1C <AmiBlitz3.ab3@11066>   CMPA.w #$0,A2
00027D20 <AmiBlitz3.ab3@11067>    BEQ.w 'done
00027D24 <AmiBlitz3.ab3@11068>   TST.w $6(A2)
00027D28 <AmiBlitz3.ab3@11069>    BNE.w 'next
00027D2C <AmiBlitz3.ab3@11070>   MOVEA.l $A(A2),A3
00027D34 <AmiBlitz3.ab3@11071>   CMPI.l #$100,$4(A3)
00027D38 <AmiBlitz3.ab3@11072>    BCS.w 'next
00027D3C <AmiBlitz3.ab3@11073>   MOVE.w $4(A2),D1
00027D40 <AmiBlitz3.ab3@11074>    BSR.w pokedata1
00027D44 <AmiBlitz3.ab3@11075>   MOVE.w $8(A3),D1
00027D48 <AmiBlitz3.ab3@11076>    BSR.w pokedata1
00027D4A <AmiBlitz3.ab3@11077>   ADDQ.w #1,D4
00027D4C <AmiBlitz3.ab3@11080>    MOVEA.l (A2),A2
00027D50 <AmiBlitz3.ab3@11081>  BRA.w 'loop
00027D52 <AmiBlitz3.ab3@11084>    TST.w D4
00027D56 <AmiBlitz3.ab3@11085>    BEQ.w calcstatic2_skip
00027D5A <AmiBlitz3.ab3@11086>   MOVE.w #$FF37,D1              ;#65335
00027D5E <AmiBlitz3.ab3@11087>    BSR.w uselib                 ;use statics lib
00027D62 <AmiBlitz3.ab3@11088>   MOVE.w #$FFFA,D1              ;use memlib
00027D66 <AmiBlitz3.ab3@11089> BRA.w uselib
00027D6C <AmiBlitz3.ab3@11098>   MOVEA.l varbase,A2                                       ;add alloc mem for types/strings global
00027D72 <AmiBlitz3.ab3@11101>   MOVE.l data1,D3
00027D74 <AmiBlitz3.ab3@11102>   MOVEQ.l #$00,D4
00027D7A <AmiBlitz3.ab3@11104>   TST.b iserror
00027D7E <AmiBlitz3.ab3@11105>   BEQ 'loop
00027D80 <AmiBlitz3.ab3@11106>   RTS
00027D84 <AmiBlitz3.ab3@11110>    CMPA.w #$0,A2
00027D88 <AmiBlitz3.ab3@11111>    BEQ.w 'done
00027D8C <AmiBlitz3.ab3@11112>   TST.w $6(A2)
00027D90 <AmiBlitz3.ab3@11113>    BNE.w 'next
00027D94 <AmiBlitz3.ab3@11114>   MOVEA.l $A(A2),A3
00027D9C <AmiBlitz3.ab3@11115>   CMPI.l #$100,$4(A3)
00027DA0 <AmiBlitz3.ab3@11116>    BCS.w 'next
00027DA4 <AmiBlitz3.ab3@11117>   MOVE.w $4(A2),D1
00027DA8 <AmiBlitz3.ab3@11118>    BSR.w pokedata1
00027DAC <AmiBlitz3.ab3@11119>   MOVE.w $8(A3),D1
00027DB0 <AmiBlitz3.ab3@11120>    BSR.w pokedata1
00027DB2 <AmiBlitz3.ab3@11121>   ADDQ.w #1,D4
00027DB4 <AmiBlitz3.ab3@11124>   MOVEA.l (A2),A2
00027DB8 <AmiBlitz3.ab3@11125>  BRA.w 'loop
00027DBE <AmiBlitz3.ab3@11130>   MOVEA.l sharebase,A2  ; org  varbase
00027DC2 <AmiBlitz3.ab3@11133>   CMPA.w #$0,A2
00027DC6 <AmiBlitz3.ab3@11134>    BEQ.w 'doneb
00027DCA <AmiBlitz3.ab3@11136>   TST.w $6(A2)
00027DCE <AmiBlitz3.ab3@11137>    BNE.w 'nextb
00027DD2 <AmiBlitz3.ab3@11138>   MOVEA.l $A(A2),A3
00027DDA <AmiBlitz3.ab3@11139>   CMPI.l #$100,$4(A3)
00027DDE <AmiBlitz3.ab3@11140>    BCS.w 'nextb
00027DE2 <AmiBlitz3.ab3@11141>   MOVE.w $4(A2),D1
00027DE6 <AmiBlitz3.ab3@11142>    BSR.w pokedata1
00027DEA <AmiBlitz3.ab3@11143>   MOVE.w $8(A3),D1
00027DEE <AmiBlitz3.ab3@11144>    BSR.w pokedata1
00027DF0 <AmiBlitz3.ab3@11145>   ADDQ.w #1,D4
00027DF2 <AmiBlitz3.ab3@11148>   MOVEA.l (A2),A2
00027DF6 <AmiBlitz3.ab3@11149>  BRA.w 'loopb
00027DF8 <AmiBlitz3.ab3@11153>    TST.w D4
00027DFC <AmiBlitz3.ab3@11154>    BEQ.w calcstatic2_skip
00027E00 <AmiBlitz3.ab3@11155>   MOVE.w #$FF37,D1      ;#65335
00027E04 <AmiBlitz3.ab3@11156>    BSR.w uselib         ;use statics lib                                   ;use statics lib
00027E08 <AmiBlitz3.ab3@11157>   MOVE.w #$FFFA,D1      ;use memlib                                   ;use memlib
00027E0C <AmiBlitz3.ab3@11158> BRA.w uselib
00027E0E <AmiBlitz3.ab3@11161> RTS
00027E14 <AmiBlitz3.ab3@11165>   MOVE.w numtoa2,D1
00027E18 <AmiBlitz3.ab3@11166>    BSR.w writeword
00027E1C <AmiBlitz3.ab3@11167>    BSR.w addoff
00027E1E <AmiBlitz3.ab3@11168>   MOVE.l D3,D1
00027E22 <AmiBlitz3.ab3@11169>    BSR.w writelong
00027E24 <AmiBlitz3.ab3@11170>   SUBQ.w #1,D4
00027E2A <AmiBlitz3.ab3@11171>   MOVE.w D4,endarray+2
00027E30 <AmiBlitz3.ab3@11172>   MOVE.l endarray,D1
00027E34 <AmiBlitz3.ab3@11173> BRA.w writelong
00027E36 <AmiBlitz3.ab3@11177>   MOVE.l D3,-(A7)
00027E3C <AmiBlitz3.ab3@11180>   MOVEA.l _dosbase,A6
00027E40 <AmiBlitz3.ab3@11182>   JSR _Write(a6)
00027E42 <AmiBlitz3.ab3@11183>   CMP.l (A7)+,D0
00027E46 <AmiBlitz3.ab3@11184>    BNE.w 'skip
00027E48 <AmiBlitz3.ab3@11185>  RTS
00027E4A <AmiBlitz3.ab3@11188>   MOVE.l D7,D1
00027E50 <AmiBlitz3.ab3@11191>   MOVEA.l _dosbase,A6
00027E54 <AmiBlitz3.ab3@11193>   JSR _Close(a6)
00027E5A <AmiBlitz3.ab3@11196> JMP error_create_exe
00027E60 <AmiBlitz3.ab3@11205> 
00027E66 <AmiBlitz3.ab3@11207>   MOVE.l A7,errstack
00027E6A <AmiBlitz3.ab3@11209>   MOVEM.l d2-d7/a2-a6,-(a7)
00027E74 <AmiBlitz3.ab3@11211>   MOVE.l #'rts,errcont
00027E7A <AmiBlitz3.ab3@11213>    JSR call_setpointerbusy
00027E82 <AmiBlitz3.ab3@11215>   MOVE.w #$FFFF,anyerrs   ; was -1
00027E8C <AmiBlitz3.ab3@11217>   CMP.l #-1,chipstart
00027E90 <AmiBlitz3.ab3@11218>   BEQ 'l01
00027E96 <AmiBlitz3.ab3@11219>   MOVE.l chipend,d1
00027E98 <AmiBlitz3.ab3@11220>   ADDQ.l #3,d1
00027E9E <AmiBlitz3.ab3@11221>   AND.l #$fffffffc,d1                                      ;bug
00027EA4 <AmiBlitz3.ab3@11222>   MOVE.l d1,chipend
00027EA6 <AmiBlitz3.ab3@11223>   MOVE.l d1,a1
00027EAC <AmiBlitz3.ab3@11224>   MOVE.l chipstart,a0
00027EAE <AmiBlitz3.ab3@11225>   MOVE.l a1,d1
00027EB0 <AmiBlitz3.ab3@11226>   SUB.l a0,d1
00027EB6 <AmiBlitz3.ab3@11227>   MOVE.l d1,chipsize
00027EC0 <AmiBlitz3.ab3@11230>   CMP.l #-1,bssstart
00027EC4 <AmiBlitz3.ab3@11231>   BEQ 'l11
00027ECA <AmiBlitz3.ab3@11232>   MOVE.l realbssend,a1
00027ED0 <AmiBlitz3.ab3@11233>   MOVE.l bssstart,a0
00027ED2 <AmiBlitz3.ab3@11234>   MOVE.l a1,d1
00027ED4 <AmiBlitz3.ab3@11235>   SUB.l a0,d1
00027EDA <AmiBlitz3.ab3@11236>   MOVE.l d1,bsssize
00027EDE <AmiBlitz3.ab3@11237>   BEQ 'l11
00027EE0 <AmiBlitz3.ab3@11240>   TST.b (a0)+
00027EE4 <AmiBlitz3.ab3@11241>   BEQ 'l31
00027EEA <AmiBlitz3.ab3@11242>   TST.b debugmode
00027EEE <AmiBlitz3.ab3@11243>   BEQ 'l1
00027EF4 <AmiBlitz3.ab3@11244>   TST.b exdebug
00027EF8 <AmiBlitz3.ab3@11245>   BNE 'l31
00027EFE <AmiBlitz3.ab3@11248>   MOVE.l #nodata,-(a7)
00027F04 <AmiBlitz3.ab3@11249>  JMP handle_compileerror
00027F06 <AmiBlitz3.ab3@11252>   CMP.l a0,a1
00027F0A <AmiBlitz3.ab3@11253>   BGT 'l32
00027F10 <AmiBlitz3.ab3@11254>   MOVE.l bssend,d1
00027F12 <AmiBlitz3.ab3@11255>   ADDQ.l #3,d1
00027F18 <AmiBlitz3.ab3@11256>   AND.l #$fffffffc,d1                                      ;bug
00027F1E <AmiBlitz3.ab3@11257>   MOVE.l d1,bssend
00027F20 <AmiBlitz3.ab3@11258>   MOVE.l d1,a1
00027F26 <AmiBlitz3.ab3@11259>   MOVE.l bssstart,a0
00027F28 <AmiBlitz3.ab3@11260>   MOVE.l a1,d1
00027F2A <AmiBlitz3.ab3@11261>   SUB.l a0,d1
00027F30 <AmiBlitz3.ab3@11262>   MOVE.l d1,bsssize
00027F34 <AmiBlitz3.ab3@11265>   MOVEM.l d5-d7/d3,-(a7)
00027F3A <AmiBlitz3.ab3@11267>   MOVE.w dontwrite_nomemleft,D1
00027F3E <AmiBlitz3.ab3@11268>   BNE.w 'fixdone
00027F44 <AmiBlitz3.ab3@11270>   MOVE.l chipsize,d5
00027F4A <AmiBlitz3.ab3@11271>   MOVE.l bsssize,d3
00027F50 <AmiBlitz3.ab3@11272>   MOVE.l chipstart,d7
00027F56 <AmiBlitz3.ab3@11273>   MOVE.l bssstart,d6
00027F5C <AmiBlitz3.ab3@11275>   MOVEA.l hunkoffsetbase,A2
00027F62 <AmiBlitz3.ab3@11276>   MOVEA.l destbufferstart,A1
00027F64 <AmiBlitz3.ab3@11277>   MOVE.l A1,D2
00027F6A <AmiBlitz3.ab3@11278>   ADD.l noinits,D2
00027F70 <AmiBlitz3.ab3@11280>   CLR.l hunkoffsetnum
00027F74 <AmiBlitz3.ab3@11284>   CMPA.w #$0,A2
00027F78 <AmiBlitz3.ab3@11285>    BEQ.w 'fixdone
00027F7C <AmiBlitz3.ab3@11286>   MOVE.l $4(A2),D0
00027F80 <AmiBlitz3.ab3@11288>    LEA $0(a1,d0.l),a0
00027F82 <AmiBlitz3.ab3@11289>    MOVE.l (a0),d1
00027F84 <AmiBlitz3.ab3@11290>   TST.l d1
00027F88 <AmiBlitz3.ab3@11291>    BMI.w 'lm1a
00027F90 <AmiBlitz3.ab3@11292>   MOVE.b #0,newhunk
00027F9A <AmiBlitz3.ab3@11293>   CMP.l #-1,chipstart
00027F9E <AmiBlitz3.ab3@11294>   BEQ 'l10a
00027FA4 <AmiBlitz3.ab3@11295>   CMP.l chipstart,d1
00027FA8 <AmiBlitz3.ab3@11296>   BLT 'l10a
00027FB0 <AmiBlitz3.ab3@11297>   MOVE.b #1,newhunk
00027FB6 <AmiBlitz3.ab3@11298>   CMP.l chipend,d1
00027FBA <AmiBlitz3.ab3@11299>   BGE 'l110a
00027FBC <AmiBlitz3.ab3@11300>   SUB.l d7,(a0)
00027FC4 <AmiBlitz3.ab3@11301>   ADD.l #$80000000,4(a2)
00027FC8 <AmiBlitz3.ab3@11302>  BRA 'noway
00027FCC <AmiBlitz3.ab3@11305>   SUB.l d5,0(a0)
00027FD6 <AmiBlitz3.ab3@11308>   CMP.l #-1,bssstart
00027FDA <AmiBlitz3.ab3@11309>     BEQ 'l11a
00027FE0 <AmiBlitz3.ab3@11310>   CMP.l bssstart,d1
00027FE4 <AmiBlitz3.ab3@11311>   BLT 'l11a
00027FEA <AmiBlitz3.ab3@11312>   CMP.l bssend,d1
00027FEE <AmiBlitz3.ab3@11313>   BGE 'l111a
00027FF4 <AmiBlitz3.ab3@11314>   TST.b newhunk
00027FF8 <AmiBlitz3.ab3@11315>   BEQ 'ln1a
00027FFA <AmiBlitz3.ab3@11316>   ADD.l d5,(a0)
00027FFC <AmiBlitz3.ab3@11319>   SUB.l d6,(a0)
00028004 <AmiBlitz3.ab3@11320>   ADD.l #$40000000,4(a2)
00028008 <AmiBlitz3.ab3@11321>  BRA 'noway
0002800C <AmiBlitz3.ab3@11324>   SUB.l d3,0(a0)
0002800E <AmiBlitz3.ab3@11327>   SUB.l D2,(A0)
00028014 <AmiBlitz3.ab3@11330>   ADDQ.l #1,hunkoffsetnum
00028016 <AmiBlitz3.ab3@11334>    MOVEA.l (A2),A2
0002801A <AmiBlitz3.ab3@11335>  BRA.w 'loop0
0002801E <AmiBlitz3.ab3@11339>   MOVEM.l (a7)+,d5-d7/d3
00028024 <AmiBlitz3.ab3@11341>   MOVE.l ptr_newexefilename,D1
0002802A <AmiBlitz3.ab3@11342>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00028030 <AmiBlitz3.ab3@11343>   MOVEA.l _dosbase,A6
00028034 <AmiBlitz3.ab3@11344>    JSR _Open(A6)
00028036 <AmiBlitz3.ab3@11345>   MOVE.l D0,D7
0002803A <AmiBlitz3.ab3@11346>    BEQ.w execerr
00028040 <AmiBlitz3.ab3@11348>   MOVE.l objlen,D0
00028046 <AmiBlitz3.ab3@11350>   SUB.l #moremem,d0
0002804C <AmiBlitz3.ab3@11352>   SUB.l noinits,D0
00028056 <AmiBlitz3.ab3@11354>   CMP.l #-1,bssstart
0002805A <AmiBlitz3.ab3@11355>   BEQ 'l60
00028060 <AmiBlitz3.ab3@11356>   SUB.l bsssize,d0
00028066 <AmiBlitz3.ab3@11357>   SUB.l chipsize,d0
0002806A <AmiBlitz3.ab3@11358>  BRA.s 'l61
00028074 <AmiBlitz3.ab3@11361>   CMP.l #-1,chipstart
00028078 <AmiBlitz3.ab3@11362>   BEQ 'l61
0002807E <AmiBlitz3.ab3@11363>   SUB.l bsssize,d0
00028084 <AmiBlitz3.ab3@11364>   SUB.l chipsize,d0
00028086 <AmiBlitz3.ab3@11368>   ADDQ.l #3,D0
00028088 <AmiBlitz3.ab3@11369>   LSR.l #2,D0
0002808E <AmiBlitz3.ab3@11370>   MOVE.l D0,tstsize1
00028094 <AmiBlitz3.ab3@11371>   MOVE.l D0,tstsize2
00028096 <AmiBlitz3.ab3@11372>   MOVE.l D7,D1
0002809C <AmiBlitz3.ab3@11373>   MOVE.l #tsthead,D2                                      ;hunkbegin
0002809E <AmiBlitz3.ab3@11374>   MOVEQ.l #$20,D3
000280A8 <AmiBlitz3.ab3@11376>   CMP.l #-1,bssstart
000280AC <AmiBlitz3.ab3@11377>   BEQ 'lb1
000280B6 <AmiBlitz3.ab3@11378>   CMP.l #-1,chipstart
000280BA <AmiBlitz3.ab3@11379>   BEQ 'lb1
000280C4 <AmiBlitz3.ab3@11380>   MOVE.l #1,bssnum
000280CE <AmiBlitz3.ab3@11381>   MOVE.l #2,chipnum
000280D0 <AmiBlitz3.ab3@11382>   MOVEQ.l #$28,D3
000280D6 <AmiBlitz3.ab3@11383>   MOVE.l bsssize,d2
000280D8 <AmiBlitz3.ab3@11384>   ADDQ.l #3,d2
000280DA <AmiBlitz3.ab3@11385>   ASR.l #2,d2
000280E0 <AmiBlitz3.ab3@11386>   MOVE.l d2,hunkend+8
000280E6 <AmiBlitz3.ab3@11387>   MOVE.l d2,bsssize3
000280EC <AmiBlitz3.ab3@11388>   MOVE.l chipsize,d2
000280EE <AmiBlitz3.ab3@11389>   ADDQ.l #3,d2
000280F0 <AmiBlitz3.ab3@11390>   ASR.l #2,d2
000280F6 <AmiBlitz3.ab3@11391>   MOVE.l d2,chipsize2
00028100 <AmiBlitz3.ab3@11392>   ADD.l #$40000000,chipsize2
00028106 <AmiBlitz3.ab3@11393>   MOVE.l d2,hunkend2+8
0002810C <AmiBlitz3.ab3@11394>   MOVE.l D0,tstsize1c
00028112 <AmiBlitz3.ab3@11395>   MOVE.l D0,tstsize2c
00028118 <AmiBlitz3.ab3@11396>   MOVE.l #hunkbegin2,d2
0002811C <AmiBlitz3.ab3@11397>  BRA 'l100b
00028126 <AmiBlitz3.ab3@11400>   CMP.l #-1,bssstart
0002812A <AmiBlitz3.ab3@11401>   BEQ 'l10b
00028134 <AmiBlitz3.ab3@11402>   MOVE.l #1,bssnum
00028136 <AmiBlitz3.ab3@11403>   MOVEQ.l #$24,D3
0002813C <AmiBlitz3.ab3@11404>   MOVE.l bsssize,d2
0002813E <AmiBlitz3.ab3@11405>   ADDQ.l #3,d2
00028140 <AmiBlitz3.ab3@11406>   ASR.l #2,d2
00028146 <AmiBlitz3.ab3@11407>   MOVE.l d2,hunkend+8
0002814C <AmiBlitz3.ab3@11408>   MOVE.l d2,bsssize2
00028152 <AmiBlitz3.ab3@11409>   MOVE.l D0,tstsize1b
00028158 <AmiBlitz3.ab3@11410>   MOVE.l D0,tstsize2b
0002815E <AmiBlitz3.ab3@11411>   MOVE.l #hunkbegin,d2
00028168 <AmiBlitz3.ab3@11414>   CMP.l #-1,chipstart
0002816C <AmiBlitz3.ab3@11415>   BEQ 'l100b
00028176 <AmiBlitz3.ab3@11416>   MOVE.l #1,chipnum
00028178 <AmiBlitz3.ab3@11417>   MOVEQ.l #$24,D3
0002817E <AmiBlitz3.ab3@11418>   MOVE.l chipsize,d2
00028180 <AmiBlitz3.ab3@11419>   ADDQ.l #3,d2
00028182 <AmiBlitz3.ab3@11420>   ASR.l #2,d2
00028188 <AmiBlitz3.ab3@11421>   MOVE.l d2,hunkend2+8
0002818E <AmiBlitz3.ab3@11422>   MOVE.l d2,bsssize2
00028198 <AmiBlitz3.ab3@11423>   ADD.l #$40000000,bsssize2
0002819E <AmiBlitz3.ab3@11424>   MOVE.l D0,tstsize1b
000281A4 <AmiBlitz3.ab3@11425>   MOVE.l D0,tstsize2b
000281AA <AmiBlitz3.ab3@11426>   MOVE.l #hunkbegin,d2
000281AE <AmiBlitz3.ab3@11430>    BSR.w mywrite
000281B4 <AmiBlitz3.ab3@11432>   MOVE.l destbufferstart,D2
000281BA <AmiBlitz3.ab3@11433>   ADD.l noinits,D2
000281C0 <AmiBlitz3.ab3@11434>   MOVE.l objlen,D3
000281C6 <AmiBlitz3.ab3@11435>   SUB.l #moremem,d3
000281CC <AmiBlitz3.ab3@11436>   SUB.l noinits,D3
000281D6 <AmiBlitz3.ab3@11438>   CMP.l #-1,bssstart
000281DA <AmiBlitz3.ab3@11439>   BNE 'l40
000281E4 <AmiBlitz3.ab3@11440>   CMP.l #-1,chipstart
000281E8 <AmiBlitz3.ab3@11441>   BNE 'l40
000281EC <AmiBlitz3.ab3@11442>  BRA 'l41
000281F2 <AmiBlitz3.ab3@11445>   MOVE.l codeend,d1
000281F4 <AmiBlitz3.ab3@11446>     SUB.l d2,d1
000281F6 <AmiBlitz3.ab3@11447>     MOVE.l d1,d3
000281FC <AmiBlitz3.ab3@11448>   SUB.l bsssize,d3
00028202 <AmiBlitz3.ab3@11449>   SUB.l chipsize,d3
00028204 <AmiBlitz3.ab3@11450>   MOVE.l D7,D1
00028208 <AmiBlitz3.ab3@11451>   BSR.w mywrite
0002820E <AmiBlitz3.ab3@11452>   MOVE.l objlen,D3
00028214 <AmiBlitz3.ab3@11453>   SUB.l #moremem,d3
0002821A <AmiBlitz3.ab3@11454>   SUB.l noinits,D3
0002821C <AmiBlitz3.ab3@11455>   MOVE.l d3,d1
00028222 <AmiBlitz3.ab3@11456>   MOVE.l destbufferstart,D2
00028228 <AmiBlitz3.ab3@11457>   ADD.l noinits,D2
0002822A <AmiBlitz3.ab3@11458>   ADD.l d2,d1
00028230 <AmiBlitz3.ab3@11459>   SUB.l codeend,d1
00028232 <AmiBlitz3.ab3@11460>   MOVE.l d1,d3
00028238 <AmiBlitz3.ab3@11461>   MOVE.l codeend,d2
0002823A <AmiBlitz3.ab3@11464>   MOVE.l d2,d1
0002823C <AmiBlitz3.ab3@11465>   ADD.l d3,d1
0002823E <AmiBlitz3.ab3@11467>   ADDQ.l #3,D1
00028244 <AmiBlitz3.ab3@11468>   ANDI.l #$FFFFFFFC,D1
00028246 <AmiBlitz3.ab3@11470>   SUB.l d2,d1
00028248 <AmiBlitz3.ab3@11471>   MOVE.l d1,d3
0002824A <AmiBlitz3.ab3@11472>   MOVE.l D7,D1
0002824E <AmiBlitz3.ab3@11474>    BSR.w mywrite
00028258 <AmiBlitz3.ab3@11476>   MOVE.l hunkoffsetcounter,tstsize3
0002825C <AmiBlitz3.ab3@11477>    BEQ.w 'skip
0002825E <AmiBlitz3.ab3@11478>   MOVE.l D7,D1
00028264 <AmiBlitz3.ab3@11479>   MOVE.l #tstend,D2
00028266 <AmiBlitz3.ab3@11480>   MOVEQ.l #$04,D3           ; was #12
0002826A <AmiBlitz3.ab3@11481>    BSR.w mywrite
00028270 <AmiBlitz3.ab3@11483>    MOVEA.l _execbase,A6
00028276 <AmiBlitz3.ab3@11484>    MOVE.l hunkoffsetcounter,d0
00028278 <AmiBlitz3.ab3@11485>    ASL.l #2,d0
0002827E <AmiBlitz3.ab3@11486>    ADD.l #12,d0
00028280 <AmiBlitz3.ab3@11487>    MOVEQ #0,d1
00028284 <AmiBlitz3.ab3@11488>    JSR _AllocMem(a6)
00028286 <AmiBlitz3.ab3@11489>    TST.l d0
0002828A <AmiBlitz3.ab3@11490>    BEQ 'nomem
00028290 <AmiBlitz3.ab3@11491>    MOVE.l noinits,D4
00028292 <AmiBlitz3.ab3@11492>    MOVE.l d5,-(a7)
00028294 <AmiBlitz3.ab3@11493>    MOVE.l d0,d5
00028296 <AmiBlitz3.ab3@11494>    MOVE.l d0,a1
0002829C <AmiBlitz3.ab3@11495>    MOVEA.l hunkoffsetbase,A2
000282A4 <AmiBlitz3.ab3@11496>    MOVE.b #0,newhunk
000282A8 <AmiBlitz3.ab3@11499>   CMPA.w #$0,A2
000282AC <AmiBlitz3.ab3@11500>    BEQ.w 'savehunk
000282B2 <AmiBlitz3.ab3@11501>   MOVE.l destbufferstart,D2
000282B8 <AmiBlitz3.ab3@11502>   ADD.l noinits,D2
000282BC <AmiBlitz3.ab3@11503>   MOVE.l  $4(A2),d1
000282C0 <AmiBlitz3.ab3@11504>   BTST #31,d1
000282C4 <AmiBlitz3.ab3@11505>   BEQ 'lh1
000282CC <AmiBlitz3.ab3@11506>   MOVE.b #1,newhunk
000282D0 <AmiBlitz3.ab3@11507>  BRA 'lh3
000282D4 <AmiBlitz3.ab3@11510>   BTST #30,d1
000282D8 <AmiBlitz3.ab3@11511>   BEQ 'lh2
000282E0 <AmiBlitz3.ab3@11512>   MOVE.b #1,newhunk
000282E4 <AmiBlitz3.ab3@11513>  BRA 'lh3
000282E6 <AmiBlitz3.ab3@11516>   ADD.l d1,d2
000282EC <AmiBlitz3.ab3@11517>   CMP.l chipend,d2
000282F0 <AmiBlitz3.ab3@11518>   BLT 'l102c
000282F6 <AmiBlitz3.ab3@11519>   SUB.l chipsize,d1
000282FC <AmiBlitz3.ab3@11522>   CMP.l bssend,d2
00028300 <AmiBlitz3.ab3@11523>   BLT 'l101c
00028306 <AmiBlitz3.ab3@11524>   SUB.l bsssize,d1
00028308 <AmiBlitz3.ab3@11527>   MOVE.l d1,(a1)
0002830A <AmiBlitz3.ab3@11528>   SUB.l D4,(A1)+
0002830C <AmiBlitz3.ab3@11531>   MOVEA.l (A2),A2
00028310 <AmiBlitz3.ab3@11532>  BRA.w 'oloopb
00028312 <AmiBlitz3.ab3@11535>   MOVE.l D7,D1
00028318 <AmiBlitz3.ab3@11536>   MOVEA.l _dosbase,A6
00028322 <AmiBlitz3.ab3@11537>   MOVE.l hunkoffsetnum,tstsize3
00028326 <AmiBlitz3.ab3@11538>   BEQ 'ln1c
0002832C <AmiBlitz3.ab3@11539>   MOVE.l #tstend+4,d2
0002832E <AmiBlitz3.ab3@11540>     MOVEQ #8,d3
00028332 <AmiBlitz3.ab3@11541>    JSR _Write(A6)
00028334 <AmiBlitz3.ab3@11542>   MOVE.l d7,d1
0002833A <AmiBlitz3.ab3@11543>   MOVE.l hunkoffsetnum,d3
0002833C <AmiBlitz3.ab3@11544>   ASL.l #2,d3
0002833E <AmiBlitz3.ab3@11545>   MOVE.l d5,D2
00028342 <AmiBlitz3.ab3@11546>   JSR _Write(a6)
00028348 <AmiBlitz3.ab3@11549>   TST.b newhunk
0002834C <AmiBlitz3.ab3@11550>   BEQ 'l10c
00028352 <AmiBlitz3.ab3@11551>   MOVEA.l hunkoffsetbase,A2
00028354 <AmiBlitz3.ab3@11552>   MOVE.l d5,a0
00028356 <AmiBlitz3.ab3@11553>   ADDQ #8,a0
0002835E <AmiBlitz3.ab3@11554>   MOVE.l bssnum,-4(a0)
00028360 <AmiBlitz3.ab3@11555>   MOVEQ #0,d6
00028364 <AmiBlitz3.ab3@11558>   CMPA.w #$0,A2
00028368 <AmiBlitz3.ab3@11559>    BEQ.w 'lh3c
0002836E <AmiBlitz3.ab3@11560>   MOVE.l destbufferstart,D2
00028374 <AmiBlitz3.ab3@11561>   ADD.l noinits,D2
00028378 <AmiBlitz3.ab3@11562>   MOVE.l  $4(A2),d1
0002837C <AmiBlitz3.ab3@11563>   BTST #30,d1
00028380 <AmiBlitz3.ab3@11564>   BEQ 'lh1c
00028384 <AmiBlitz3.ab3@11565>   BCLR #30,d1
00028386 <AmiBlitz3.ab3@11566>   MOVE.l d1,(a0)
00028388 <AmiBlitz3.ab3@11567>   SUB.l D4,(A0)+
0002838A <AmiBlitz3.ab3@11568>   ADDQ.l #1,d6
0002838C <AmiBlitz3.ab3@11571>   MOVE.l (a2),a2
00028390 <AmiBlitz3.ab3@11572>  BRA 'lh2c
00028392 <AmiBlitz3.ab3@11575>   TST.l d6
00028396 <AmiBlitz3.ab3@11576>     BEQ 'lh10c
00028398 <AmiBlitz3.ab3@11577>     MOVE.l d5,a0
0002839A <AmiBlitz3.ab3@11578>     MOVE.l d6,(a0)
0002839C <AmiBlitz3.ab3@11579>     MOVE.l d7,d1
0002839E <AmiBlitz3.ab3@11580>     MOVE.l d5,d2
000283A0 <AmiBlitz3.ab3@11581>     MOVE.l d6,d3
000283A2 <AmiBlitz3.ab3@11582>     ASL.l #2,d3
000283A4 <AmiBlitz3.ab3@11583>     ADDQ.l #8,d3
000283A8 <AmiBlitz3.ab3@11584>     BSR.w mywrite
000283AE <AmiBlitz3.ab3@11587>   MOVEA.l hunkoffsetbase,A2
000283B0 <AmiBlitz3.ab3@11588>   MOVE.l d5,a0
000283B2 <AmiBlitz3.ab3@11589>   ADDQ #8,a0
000283BA <AmiBlitz3.ab3@11590>   MOVE.l chipnum,-4(a0)
000283BC <AmiBlitz3.ab3@11591>   MOVEQ #0,d6
000283C0 <AmiBlitz3.ab3@11594>   CMPA.w #$0,A2
000283C4 <AmiBlitz3.ab3@11595>    BEQ.w 'lh30c
000283CA <AmiBlitz3.ab3@11596>   MOVE.l destbufferstart,D2
000283D0 <AmiBlitz3.ab3@11597>   ADD.l noinits,D2
000283D4 <AmiBlitz3.ab3@11598>   MOVE.l  $4(A2),d1
000283D8 <AmiBlitz3.ab3@11599>   BTST #31,d1
000283DC <AmiBlitz3.ab3@11600>   BEQ 'lh11c
000283E0 <AmiBlitz3.ab3@11601>   BCLR #31,d1
000283E2 <AmiBlitz3.ab3@11602>   MOVE.l d1,(a0)
000283E4 <AmiBlitz3.ab3@11603>   SUB.l D4,(A0)+
000283E6 <AmiBlitz3.ab3@11604>   ADDQ.l #1,d6
000283E8 <AmiBlitz3.ab3@11607>   MOVE.l (a2),a2
000283EC <AmiBlitz3.ab3@11608>  BRA 'lh20c
000283EE <AmiBlitz3.ab3@11611>   TST.l d6
000283F2 <AmiBlitz3.ab3@11612>     BEQ 'l10c
000283F4 <AmiBlitz3.ab3@11613>     MOVE.l d5,a0
000283F6 <AmiBlitz3.ab3@11614>     MOVE.l d6,(a0)
000283F8 <AmiBlitz3.ab3@11615>     MOVE.l d7,d1
000283FA <AmiBlitz3.ab3@11616>     MOVE.l d5,d2
000283FC <AmiBlitz3.ab3@11617>     MOVE.l d6,d3
000283FE <AmiBlitz3.ab3@11618>     ASL.l #2,d3
00028400 <AmiBlitz3.ab3@11619>     ADDQ.l #8,d3
00028404 <AmiBlitz3.ab3@11620>     BSR.w mywrite
0002840A <AmiBlitz3.ab3@11624>    MOVEA.l _execbase,A6
00028410 <AmiBlitz3.ab3@11625>    MOVE.l hunkoffsetcounter,d0
00028412 <AmiBlitz3.ab3@11626>    ASL.l #2,d0
00028418 <AmiBlitz3.ab3@11627>    ADD.l #12,d0
0002841A <AmiBlitz3.ab3@11628>    MOVE.l d5,a1
0002841E <AmiBlitz3.ab3@11629>    JSR _FreeMem(a6)
00028424 <AmiBlitz3.ab3@11630>    MOVEA.l _dosbase,A6
00028426 <AmiBlitz3.ab3@11631>    MOVE.l (a7)+,d5
0002842A <AmiBlitz3.ab3@11632>  BRA 'skip2
00028430 <AmiBlitz3.ab3@11636>   MOVEA.l hunkoffsetbase,A2
00028436 <AmiBlitz3.ab3@11637>   MOVE.l noinits,D4
0002843A <AmiBlitz3.ab3@11640>   CMPA.w #$0,A2                                            ;write hunkoffsets
0002843E <AmiBlitz3.ab3@11641>   BEQ.w 'skip2
00028442 <AmiBlitz3.ab3@11642>   LEA $4(A2),A1
00028444 <AmiBlitz3.ab3@11643>   SUB.l D4,(A1)
00028446 <AmiBlitz3.ab3@11644>   MOVE.l D7,D1
00028448 <AmiBlitz3.ab3@11645>   MOVE.l A1,D2
0002844A <AmiBlitz3.ab3@11646>   MOVEQ.l #$04,D3
0002844E <AmiBlitz3.ab3@11647>   BSR.w mywrite
00028452 <AmiBlitz3.ab3@11649>   ADD.l D4,$4(A2)
00028454 <AmiBlitz3.ab3@11650>   MOVEA.l (A2),A2
00028458 <AmiBlitz3.ab3@11651>  BRA.w 'loop
0002845E <AmiBlitz3.ab3@11654>   CLR.l tstsize3
00028460 <AmiBlitz3.ab3@11655>   MOVE.l D7,D1
00028466 <AmiBlitz3.ab3@11656>   MOVE.l #tstsize3,D2
00028468 <AmiBlitz3.ab3@11657>   MOVEQ.l #$04,D3
0002846C <AmiBlitz3.ab3@11658>    BSR.w mywrite
00028474 <AmiBlitz3.ab3@11661>   BTST #$7,link_debuginfo
00028478 <AmiBlitz3.ab3@11662>    BEQ.w 'nodebug
0002847E <AmiBlitz3.ab3@11664>   MOVE.l #sysdebug,D2                                      ;debughunks
00028480 <AmiBlitz3.ab3@11665>   MOVEQ.l #$04,D3
00028482 <AmiBlitz3.ab3@11666>   MOVE.l D7,D1
00028486 <AmiBlitz3.ab3@11667>    BSR.w mywrite
0002848C <AmiBlitz3.ab3@11669>   MOVEA.l labelbase,A2
00028490 <AmiBlitz3.ab3@11672>   CMPA.w #$0,A2
00028494 <AmiBlitz3.ab3@11673>    BEQ.w 'dedone
0002849A <AmiBlitz3.ab3@11674>   BTST #$0,$7(A2)
0002849E <AmiBlitz3.ab3@11675>    BEQ.w 'dedeb
000284A6 <AmiBlitz3.ab3@11676>   CMPI.l #$1,$4(A2)
000284AA <AmiBlitz3.ab3@11679>   BRA.w 'denext                                            ;only addr labels
000284AC <AmiBlitz3.ab3@11683>   MOVEQ.l #$00,D4
000284B0 <AmiBlitz3.ab3@11684>   MOVE.b $12(A2),D4
000284B4 <AmiBlitz3.ab3@11685>   SUBI.w #$13,D4
000284B6 <AmiBlitz3.ab3@11686>   ADDQ.w #2,D4
000284BA <AmiBlitz3.ab3@11687>   ANDI.w #$FFFC,D4     ;long align
000284BC <AmiBlitz3.ab3@11688>   MOVE.l D4,D5
000284BE <AmiBlitz3.ab3@11689>   LSR.w #2,D5
000284C4 <AmiBlitz3.ab3@11690>   MOVE.l D5,temp1
000284C6 <AmiBlitz3.ab3@11691>   LSL.w #2,D5          ;#bytes
000284CC <AmiBlitz3.ab3@11693>   MOVE.l #temp1,a1
000284D2 <AmiBlitz3.ab3@11697>   LEA debugstore,a0
000284D4 <AmiBlitz3.ab3@11698>   MOVE.l (a1),(a0)+
000284D6 <AmiBlitz3.ab3@11700>   MOVEQ.l #$04,D3
000284DA <AmiBlitz3.ab3@11704>   LEA $13(A2),A1
000284DC <AmiBlitz3.ab3@11706>   MOVE.l d4,d1
000284DE <AmiBlitz3.ab3@11707>   SUBQ.l #1,d1
000284E0 <AmiBlitz3.ab3@11710>     MOVE.b (a1)+,d0
000284E4 <AmiBlitz3.ab3@11711>     BEQ 'l21d
000284E8 <AmiBlitz3.ab3@11712>     CMP.b #"'",d0                                            ; ' does reassembler/assembler not like, so replace
000284EC <AmiBlitz3.ab3@11713>     BNE 'ok
000284F0 <AmiBlitz3.ab3@11714>     MOVE.b #"_",d0
000284F2 <AmiBlitz3.ab3@11717>    MOVE.b d0,(a0)+                                      ; copy labeltext to debuginfo
000284F6 <AmiBlitz3.ab3@11718>   DBF d1,'l10d
000284FA <AmiBlitz3.ab3@11720>   BRA 'l22d
000284FC <AmiBlitz3.ab3@11723>       CLR.b (a0)+
00028500 <AmiBlitz3.ab3@11724>   DBF d1,'l21d
00028502 <AmiBlitz3.ab3@11727>   ADD.l d4,d3
00028504 <AmiBlitz3.ab3@11734>   SUB.l D4,D5
00028508 <AmiBlitz3.ab3@11735>    BEQ.w 'deoff
0002850E <AmiBlitz3.ab3@11737>   MOVE.l #zero,a1
00028510 <AmiBlitz3.ab3@11741>   MOVE.l (a1),(a0)+
00028512 <AmiBlitz3.ab3@11745>   ADD.l d5,d3
00028516 <AmiBlitz3.ab3@11751>   MOVE.l $8(A2),D2
0002851C <AmiBlitz3.ab3@11752>   SUB.l destbufferstart,D2
00028522 <AmiBlitz3.ab3@11753>   SUB.l noinits,D2
00028528 <AmiBlitz3.ab3@11754>   MOVE.l D2,temp1
0002852E <AmiBlitz3.ab3@11756>   MOVE.l #temp1,a1
00028530 <AmiBlitz3.ab3@11760>   MOVE.l (a1),(a0)+
00028536 <AmiBlitz3.ab3@11761>   ADD.l #4,d3
0002853C <AmiBlitz3.ab3@11762>   LEA debugstore,a0
0002853E <AmiBlitz3.ab3@11763>   MOVE.l a0,d2
00028540 <AmiBlitz3.ab3@11766>   MOVE.l D7,D1
00028544 <AmiBlitz3.ab3@11767>   BSR.w mywrite
00028546 <AmiBlitz3.ab3@11770>   MOVEA.l (A2),A2
0002854A <AmiBlitz3.ab3@11771>  BRA.w 'deloop
00028550 <AmiBlitz3.ab3@11774>   MOVE.l #zero,D2
00028552 <AmiBlitz3.ab3@11775>   MOVEQ.l #$04,D3
00028554 <AmiBlitz3.ab3@11776>   MOVE.l D7,D1
00028558 <AmiBlitz3.ab3@11777>   BSR.w mywrite
0002855A <AmiBlitz3.ab3@11780>   MOVE.l D7,D1
00028560 <AmiBlitz3.ab3@11781>   MOVE.l #tstdone,D2                                      ;hunkend
00028562 <AmiBlitz3.ab3@11782>   MOVEQ.l #$04,D3
0002856C <AmiBlitz3.ab3@11784>   CMPI.l #-1,bssstart
00028570 <AmiBlitz3.ab3@11785>   BEQ 'l10e
00028572 <AmiBlitz3.ab3@11786>   MOVEQ #16,d3
00028578 <AmiBlitz3.ab3@11787>   MOVE.l #hunkend,d2
00028582 <AmiBlitz3.ab3@11788>   CMPI.l #-1,chipstart
00028586 <AmiBlitz3.ab3@11789>   BEQ 'l10e
00028588 <AmiBlitz3.ab3@11790>   MOVE.l d7,d1
0002858A <AmiBlitz3.ab3@11791>   MOVEQ #12,d3
0002858E <AmiBlitz3.ab3@11792>   BSR.w mywrite
00028598 <AmiBlitz3.ab3@11795>   CMPI.l #-1,chipstart
0002859C <AmiBlitz3.ab3@11796>   BEQ 'l11e
0002859E <AmiBlitz3.ab3@11797>   MOVEQ #12,d3
000285A4 <AmiBlitz3.ab3@11798>   MOVE.l #hunkend2,d2
000285A6 <AmiBlitz3.ab3@11799>   MOVE.l d7,d1
000285AA <AmiBlitz3.ab3@11800>   BSR.w mywrite
000285AC <AmiBlitz3.ab3@11801>   MOVE.l d7,d1
000285B2 <AmiBlitz3.ab3@11802>   MOVE.l chipstart,d2
000285B8 <AmiBlitz3.ab3@11803>   MOVE.l chipsize,d3
000285BC <AmiBlitz3.ab3@11804>   BSR.w mywrite
000285BE <AmiBlitz3.ab3@11805>   MOVEQ #4,d3
000285C4 <AmiBlitz3.ab3@11806>   MOVE.l #hunkend,d2
000285C6 <AmiBlitz3.ab3@11807>   MOVE.l d7,d1
000285CA <AmiBlitz3.ab3@11811>   BSR.w mywrite
000285CC <AmiBlitz3.ab3@11812>   MOVE.l D7,D1
000285D2 <AmiBlitz3.ab3@11813>   MOVEA.l _dosbase,A6
000285D6 <AmiBlitz3.ab3@11814>   JSR _Close(A6)
000285DE <AmiBlitz3.ab3@11819>   BTST #$7,create_iconfile
000285E2 <AmiBlitz3.ab3@11820>    BEQ.w 'done
000285E8 <AmiBlitz3.ab3@11824>   MOVEA.l ptr_newexefilename,A0
000285EA <AmiBlitz3.ab3@11827>     TST.b (A0)+
000285EE <AmiBlitz3.ab3@11828>   BNE.w 'iloop
000285F0 <AmiBlitz3.ab3@11829>   SUBQ.w #1,A0
000285F2 <AmiBlitz3.ab3@11830>   MOVE.l A0,-(A7)        ;to later null out!
000285F8 <AmiBlitz3.ab3@11831>   LEA str_infoextention2,A1
000285FA <AmiBlitz3.ab3@11834>     MOVE.b (A1)+,(A0)+
000285FE <AmiBlitz3.ab3@11835>   BNE.w 'iloop2
00028604 <AmiBlitz3.ab3@11837>   MOVE.l ptr_newexefilename,D1
00028606 <AmiBlitz3.ab3@11838>   MOVEQ.l #-$02,D2
0002860C <AmiBlitz3.ab3@11839>   MOVEA.l _dosbase,A6
00028610 <AmiBlitz3.ab3@11840>   JSR _Lock(A6)
00028612 <AmiBlitz3.ab3@11841>   MOVE.l D0,D1
00028616 <AmiBlitz3.ab3@11842>   BEQ.w 'dildo      ;not exist                                    ;no icon exit so jump to create one  tomsmart1
0002861A <AmiBlitz3.ab3@11843>   JSR _UnLock(A6)                                          ;OH!! there is a Icon so we must Unlock it  tomsmart1
0002861E <AmiBlitz3.ab3@11844>  BRA.w 'ifail                                            ;and skip writing a Icon  tomsmart1
00028624 <AmiBlitz3.ab3@11847>   MOVE.l ptr_newexefilename,D1
0002862A <AmiBlitz3.ab3@11848>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00028630 <AmiBlitz3.ab3@11849>   MOVEA.l _dosbase,A6
00028634 <AmiBlitz3.ab3@11850>    JSR _Open(A6)
00028636 <AmiBlitz3.ab3@11851>   MOVE.l D0,D7
0002863A <AmiBlitz3.ab3@11852>    BEQ.w 'ifail
00028640 <AmiBlitz3.ab3@11853>   MOVE.l #icongfx_data,D2                                  ; icon graphics
00028646 <AmiBlitz3.ab3@11854>   MOVE.l #icongfx_data_end-icongfx_data,D3                 ; length of gfx-data
00028648 <AmiBlitz3.ab3@11855>   MOVE.l D7,D1
0002864E <AmiBlitz3.ab3@11856>   MOVEA.l _dosbase,A6
00028652 <AmiBlitz3.ab3@11857>   JSR _Write(A6)
00028654 <AmiBlitz3.ab3@11858>   MOVE.l D7,D1
00028658 <AmiBlitz3.ab3@11859>   JSR _Close(A6)
0002865A <AmiBlitz3.ab3@11862>   MOVEA.l (A7)+,A0
0002865C <AmiBlitz3.ab3@11863>   CLR.b (A0)
00028662 <AmiBlitz3.ab3@11869>   TST.b exdebug
00028666 <AmiBlitz3.ab3@11870>    BEQ 'fixdoneb
0002866C <AmiBlitz3.ab3@11871>   MOVE.w dontwrite_nomemleft,D1
00028670 <AmiBlitz3.ab3@11872>   BNE.w 'fixdoneb
00028676 <AmiBlitz3.ab3@11873>   MOVE.l chipsize,d5
0002867C <AmiBlitz3.ab3@11874>   MOVE.l bsssize,d3
00028682 <AmiBlitz3.ab3@11875>   MOVE.l chipstart,d7
00028688 <AmiBlitz3.ab3@11876>   MOVE.l bssstart,d6
0002868E <AmiBlitz3.ab3@11877>   MOVEA.l hunkoffsetbase,A2
00028694 <AmiBlitz3.ab3@11878>   MOVEA.l destbufferstart,A1
00028696 <AmiBlitz3.ab3@11879>   MOVE.l A1,D2
0002869C <AmiBlitz3.ab3@11880>   ADD.l noinits,D2
000286A2 <AmiBlitz3.ab3@11881>   CLR.l hunkoffsetnum
000286A6 <AmiBlitz3.ab3@11884>   CMPA.w #$0,A2
000286AA <AmiBlitz3.ab3@11885>    BEQ.w 'fixdoneb
000286AE <AmiBlitz3.ab3@11886>   MOVE.l $4(A2),D0
000286B2 <AmiBlitz3.ab3@11887>    LEA $0(a1,d0.l),a0
000286B4 <AmiBlitz3.ab3@11888>    MOVE.l (a0),d1
000286B6 <AmiBlitz3.ab3@11889>   TST.l d1
000286BA <AmiBlitz3.ab3@11890>    BMI.w 'lm1f
000286C2 <AmiBlitz3.ab3@11891>   MOVE.b #0,newhunk
000286CC <AmiBlitz3.ab3@11892>   CMP.l #-1,chipstart
000286D0 <AmiBlitz3.ab3@11893>   BEQ 'l10f
000286D6 <AmiBlitz3.ab3@11894>   CMP.l chipstart,d1
000286DA <AmiBlitz3.ab3@11895>   BLT 'l10f
000286E2 <AmiBlitz3.ab3@11896>   MOVE.b #1,newhunk
000286E8 <AmiBlitz3.ab3@11897>   CMP.l chipend,d1
000286EC <AmiBlitz3.ab3@11898>   BGE 'l110f
000286EE <AmiBlitz3.ab3@11899>   ADD.l d7,(a0)
000286F6 <AmiBlitz3.ab3@11900>   ADD.l #$80000000,4(a2)
000286FA <AmiBlitz3.ab3@11901>  BRA 'nowayb
000286FE <AmiBlitz3.ab3@11904>   ADD.l d5,0(a0)
00028708 <AmiBlitz3.ab3@11907>   CMP.l #-1,bssstart
0002870C <AmiBlitz3.ab3@11908>     BEQ 'l11f
00028712 <AmiBlitz3.ab3@11909>   CMP.l bssstart,d1
00028716 <AmiBlitz3.ab3@11910>   BLT 'l11f
0002871C <AmiBlitz3.ab3@11911>   CMP.l bssend,d1
00028720 <AmiBlitz3.ab3@11912>   BGE 'l111f
00028726 <AmiBlitz3.ab3@11913>   TST.b newhunk
0002872A <AmiBlitz3.ab3@11914>   BEQ 'ln1f
0002872C <AmiBlitz3.ab3@11915>   ADD.l d5,(a0)
0002872E <AmiBlitz3.ab3@11918>   ADD.l d6,(a0)
00028736 <AmiBlitz3.ab3@11919>   ADD.l #$40000000,4(a2)
0002873A <AmiBlitz3.ab3@11920>  BRA 'nowayb
0002873E <AmiBlitz3.ab3@11923>   ADD.l d3,0(a0)
00028740 <AmiBlitz3.ab3@11926>   ADD.l D2,(A0)                                            ;only normal code offsets restore
00028746 <AmiBlitz3.ab3@11929>   ADDQ.l #1,hunkoffsetnum
00028748 <AmiBlitz3.ab3@11932>   MOVEA.l (A2),A2
0002874C <AmiBlitz3.ab3@11933>  BRA.w 'loop0b
00028752 <AmiBlitz3.ab3@11937>   JSR call_setpointernormal
00028756 <AmiBlitz3.ab3@11938>   MOVEM.l (a7)+,d2-d7/a2-a6
00028758 <AmiBlitz3.ab3@11941> RTS
0002875A <AmiBlitz3.ab3@11947>   MOVE.l D2,-(A7)
00028760 <AmiBlitz3.ab3@11948>   MOVE.l destpointer,D2
00028766 <AmiBlitz3.ab3@11949>   SUB.l destbufferstart,D2
0002876A <AmiBlitz3.ab3@11950>   BSR.w addhunkoffset
0002876C <AmiBlitz3.ab3@11951>   MOVE.l (A7)+,D2
0002876E <AmiBlitz3.ab3@11952> RTS
00028772 <AmiBlitz3.ab3@11958>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
00028778 <AmiBlitz3.ab3@11960>   TST.b nohunkoffset
0002877C <AmiBlitz3.ab3@11961>   BNE 'l10
0002877E <AmiBlitz3.ab3@11963>   MOVEQ.l #$8,D0
00028780 <AmiBlitz3.ab3@11964>   MOVEQ.l #$01,D1
00028786 <AmiBlitz3.ab3@11965>   MOVEA.l _execbase,A6
0002878C <AmiBlitz3.ab3@11967>   MOVE.l mempool2,a0
00028790 <AmiBlitz3.ab3@11968>   JSR _AllocPooled(a6)
00028796 <AmiBlitz3.ab3@11972>   ADDQ.l #1,hunkoffsetcounter
00028798 <AmiBlitz3.ab3@11973>   MOVEA.l D0,A0
0002879E <AmiBlitz3.ab3@11974>   MOVE.l hunkoffsetbase,(A0)
000287A4 <AmiBlitz3.ab3@11975>   MOVE.l A0,hunkoffsetbase
000287A8 <AmiBlitz3.ab3@11976>   MOVE.l D2,$4(A0)
000287AC <AmiBlitz3.ab3@11981>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
000287AE <AmiBlitz3.ab3@11982> RTS
000287B4 <AmiBlitz3.ab3@11988>   CLR.l hunkoffsetbase
000287BA <AmiBlitz3.ab3@11989>   MOVEA.l _execbase,A6
000287C0 <AmiBlitz3.ab3@11990>   MOVEA.l hunkoffsetbase,A2
000287C4 <AmiBlitz3.ab3@11993>     CMPA.w #$0,A2
000287C8 <AmiBlitz3.ab3@11994>      BEQ.w 'skip
000287CA <AmiBlitz3.ab3@11995>     MOVEA.l A2,A1
000287CC <AmiBlitz3.ab3@11996>     MOVEQ.l #$08,D0
000287CE <AmiBlitz3.ab3@11997>     MOVEA.l (A2),A2
000287D4 <AmiBlitz3.ab3@11999>     MOVE.l mempool2,a0
000287D8 <AmiBlitz3.ab3@12000>     JSR _FreePooled(A6)
000287DC <AmiBlitz3.ab3@12003>  BRA.w 'loop
000287E2 <AmiBlitz3.ab3@12006>   CLR.l hunkoffsetcounter
000287E4 <AmiBlitz3.ab3@12007> RTS
000287FC <AmiBlitz3.ab3@12010> cmakebuff:  Ds.l 6                                          ;dc.w 12 org source
00028800 <AmiBlitz3.ab3@12011> cmakea5:    Ds.l 1
00028802 <AmiBlitz3.ab3@12012> cmake:      Ds.w 1
00028882 <AmiBlitz3.ab3@12013> cmakebak:   Ds.l 32                                         ;ds.b 128 org source
00028888 <AmiBlitz3.ab3@12017>   MOVE.l A5,lastsourcepos
00028892 <AmiBlitz3.ab3@12018>   MOVE.w instringon,oldqflag
00028894 <AmiBlitz3.ab3@12021>   MOVEQ.l #$00,D0
00028896 <AmiBlitz3.ab3@12022>   MOVE.b (A5)+,D0
0002889A <AmiBlitz3.ab3@12023>    BEQ 'donea
0002889E <AmiBlitz3.ab3@12024>   BPL 'stuffa
000288A0 <AmiBlitz3.ab3@12025>   LSL.l #8,D0
000288A2 <AmiBlitz3.ab3@12026>   MOVE.b (A5)+,D0
000288A4 <AmiBlitz3.ab3@12027>   MOVE.l a1,-(a7)
000288AA <AmiBlitz3.ab3@12028>   LEA replacedat,a1
000288AE <AmiBlitz3.ab3@12029>   Dc.w $4a71,$0a00                                         ;TST.w 0(a1,d0.l*2)
000288B2 <AmiBlitz3.ab3@12030>   BEQ 'l10
000288B6 <AmiBlitz3.ab3@12031>   Dc.w $3031,$0a00                                         ;MOVE.w 0(a1,d0.l*2),d0
000288B8 <AmiBlitz3.ab3@12035>   MOVE.l (a7)+,a1
000288BC <AmiBlitz3.ab3@12036>  BRA 'weiter
000288C0 <AmiBlitz3.ab3@12039>   CMP.w #$22,D0
000288C4 <AmiBlitz3.ab3@12040>    BEQ.b 'swapquotea
000288C8 <AmiBlitz3.ab3@12041>   CMP.w #$3B,D0
000288CC <AmiBlitz3.ab3@12042>    BNE.b 'donea
000288D2 <AmiBlitz3.ab3@12043>   TST.w instringon
000288D6 <AmiBlitz3.ab3@12044>    BNE.b 'donea
000288D8 <AmiBlitz3.ab3@12047>   MOVE.b (A5)+,D0
000288DC <AmiBlitz3.ab3@12048>              BEQ 'l1
000288E0 <AmiBlitz3.ab3@12049>              CMP.b #":",d0
000288E4 <AmiBlitz3.ab3@12050>              BNE 'loopa                                ;:@
000288E8 <AmiBlitz3.ab3@12051>              CMP.b #"@",(a5)
000288EC <AmiBlitz3.ab3@12052>              BNE 'loopa
000288EE <AmiBlitz3.ab3@12053>              ADDQ #1,a5
000288F4 <AmiBlitz3.ab3@12056>   MOVE.w D0,lastchar
000288F8 <AmiBlitz3.ab3@12059>  BRA.s 'weiter
000288FE <AmiBlitz3.ab3@12062>   NOT.w instringon
00028904 <AmiBlitz3.ab3@12065>    MOVE.w D0,lastchar
00028908 <AmiBlitz3.ab3@12066>    BEQ.w 'done
0002890C <AmiBlitz3.ab3@12067>    BPL.w 'done2
00028910 <AmiBlitz3.ab3@12068>   CMP.w #-$7FE4,D0                                         ;cnif
00028914 <AmiBlitz3.ab3@12069>    BEQ.w 'cnif
00028918 <AmiBlitz3.ab3@12070>   CMP.w #-$7FE3,D0                                         ;csif
0002891C <AmiBlitz3.ab3@12071>    BEQ.w 'csif
00028920 <AmiBlitz3.ab3@12072>   CMP.w #-$7FE2,D0                                         ;celse
00028924 <AmiBlitz3.ab3@12073>    BEQ.w 'celse
00028928 <AmiBlitz3.ab3@12074>   CMP.w #-$7FE1,D0                                         ;cend
0002892C <AmiBlitz3.ab3@12075>    BEQ.w 'cend
00028932 <AmiBlitz3.ab3@12078>   TST.w skipcode
00028936 <AmiBlitz3.ab3@12079>    BEQ.w getchar
0002893A <AmiBlitz3.ab3@12080>   CMP.w #$7E,D0
0002893E <AmiBlitz3.ab3@12081>    BEQ.w 'cmake                                            ;tilde
00028942 <AmiBlitz3.ab3@12082>   CMP.w #$2,D0
00028946 <AmiBlitz3.ab3@12083>    BNE.w 'notunpath
0002894C <AmiBlitz3.ab3@12084>   MOVEA.l usedfrom,A5
00028952 <AmiBlitz3.ab3@12085>   CLR.l usedfrom
00028956 <AmiBlitz3.ab3@12086>  BRA.w getchar
0002895A <AmiBlitz3.ab3@12089>   CMP.w #$1,D0
0002895E <AmiBlitz3.ab3@12090>    BNE.w 'done
00028962 <AmiBlitz3.ab3@12094>   MOVEA.l cmakea5(PC),A5
00028966 <AmiBlitz3.ab3@12095>  BRA.w getchar
0002896C <AmiBlitz3.ab3@12098>   TST.w cmake
00028970 <AmiBlitz3.ab3@12099>    BNE.w 'done
00028974 <AmiBlitz3.ab3@12101>   MOVEM.l D0-D7/A0-A6,-(A7)
0002897A <AmiBlitz3.ab3@12102>   LEA cmake,a0                                            ;reass
0002897C <AmiBlitz3.ab3@12103>   NOT.w (a0)
00028980 <AmiBlitz3.ab3@12104>   LEA cmakebak(PC),A0
00028986 <AmiBlitz3.ab3@12105>   LEA ptr_parameterstore,A1
00028988 <AmiBlitz3.ab3@12106>   MOVEQ.l #$1F,D0
0002898A <AmiBlitz3.ab3@12109>     MOVE.l (A1)+,(A0)+
0002898E <AmiBlitz3.ab3@12110>   DBF D0,'cmloop
00028994 <AmiBlitz3.ab3@12113>    JSR evalconst3
00028998 <AmiBlitz3.ab3@12114>   CMP.w #$7E,D0
0002899C <AmiBlitz3.ab3@12115>    BNE.w syntaxerr
000289A2 <AmiBlitz3.ab3@12116>   MOVE.l A5,cmakea5                                      ;tilde
000289A6 <AmiBlitz3.ab3@12117>   LEA cmakebuff(PC),A0
000289A8 <AmiBlitz3.ab3@12118>   MOVE.l D3,D2
000289AC <AmiBlitz3.ab3@12119>   BSR.w makelong
000289AE <AmiBlitz3.ab3@12120>   ADDQ.b #1,(A0)
000289B4 <AmiBlitz3.ab3@12121>   LEA cmake,a0
000289B6 <AmiBlitz3.ab3@12122>   NOT.w (a0)                                               ;reass
000289BA <AmiBlitz3.ab3@12123>   LEA cmakebak(PC),A0
000289C0 <AmiBlitz3.ab3@12124>   LEA ptr_parameterstore,A1
000289C2 <AmiBlitz3.ab3@12125>   MOVEQ.l #$1F,D0
000289C4 <AmiBlitz3.ab3@12128>     MOVE.l (A0)+,(A1)+
000289C8 <AmiBlitz3.ab3@12129>   DBF D0,'cmloop2
000289CC <AmiBlitz3.ab3@12131>   MOVEM.l (A7)+,D0-D7/A0-A6
000289D0 <AmiBlitz3.ab3@12132>   LEA cmakebuff(PC),A5
000289D4 <AmiBlitz3.ab3@12133>  BRA.w getchar
000289D6 <AmiBlitz3.ab3@12136>  RTS
000289E0 <AmiBlitz3.ab3@12139>   MOVE.l linenumat,ciflineat                               ;csif
000289E6 <AmiBlitz3.ab3@12140>   TST.w skipcode
000289EA <AmiBlitz3.ab3@12141>    BEQ.w 'incnest
000289EE <AmiBlitz3.ab3@12142>    BSR.w get1bytemain
000289F0 <AmiBlitz3.ab3@12143>    MOVE.l a1,-(a7)
000289F6 <AmiBlitz3.ab3@12144>    JSR do_csif
000289F8 <AmiBlitz3.ab3@12145>    MOVE.l (a7)+,a1
000289FC <AmiBlitz3.ab3@12146>  BRA.w getchar
00028A06 <AmiBlitz3.ab3@12149>   MOVE.l linenumat,ciflineat                               ;cnif
00028A0C <AmiBlitz3.ab3@12150>   TST.w skipcode
00028A10 <AmiBlitz3.ab3@12151>    BEQ.w 'incnest
00028A14 <AmiBlitz3.ab3@12152>    BSR.w get1bytemain
00028A18 <AmiBlitz3.ab3@12153>    CMP.b #"@",d0
00028A1C <AmiBlitz3.ab3@12154>    BNE 'cnif_ok2
00028A20 <AmiBlitz3.ab3@12155>    BSR.w get1bytemain
00028A28 <AmiBlitz3.ab3@12156>    MOVE.b #1,incnif
00028A2E <AmiBlitz3.ab3@12157>    JSR findconstant2
00028A32 <AmiBlitz3.ab3@12158>    BEQ 'cnif_ok2
00028A38 <AmiBlitz3.ab3@12161>    MOVE.w fast,-(a7)
00028A3E <AmiBlitz3.ab3@12162>    CLR.b fast
00028A40 <AmiBlitz3.ab3@12163>    MOVE.l a1,-(a7)
00028A46 <AmiBlitz3.ab3@12164>    JSR do_cnif
00028A4C <AmiBlitz3.ab3@12165>    CLR.b incnif
00028A4E <AmiBlitz3.ab3@12166>    MOVE.l (a7)+,a1
00028A54 <AmiBlitz3.ab3@12167>    MOVE.w (a7)+,fast
00028A58 <AmiBlitz3.ab3@12168>  BRA.w getchar
00028A5E <AmiBlitz3.ab3@12171>   ADDQ.w #1,connest
00028A62 <AmiBlitz3.ab3@12172>  BRA.w getchar
00028A68 <AmiBlitz3.ab3@12175>   MOVE.w connest,D0                                      ;celse
00028A6C <AmiBlitz3.ab3@12176>    BNE.w getchar
00028A72 <AmiBlitz3.ab3@12177>   NOT.w skipcode
00028A76 <AmiBlitz3.ab3@12178>  BRA.w getchar
00028A7C <AmiBlitz3.ab3@12181>   SUBQ.w #1,connest                                      ;cend
00028A80 <AmiBlitz3.ab3@12182>    BPL.w getchar
00028A86 <AmiBlitz3.ab3@12183>   ADDQ.w #1,connest
00028A8C <AmiBlitz3.ab3@12184>   MOVEA.l concomsp,A0
00028A92 <AmiBlitz3.ab3@12185>   CMPA.l #concomstack,A0
00028A96 <AmiBlitz3.ab3@12186>    BEQ.w nociferr
00028A98 <AmiBlitz3.ab3@12187>   SUBQ.w #2,A0
00028A9E <AmiBlitz3.ab3@12188>   MOVE.l A0,concomsp
00028AA4 <AmiBlitz3.ab3@12189>   MOVE.w (A0),skipcode
00028AA8 <AmiBlitz3.ab3@12190> BRA.w getchar
00028AAC <AmiBlitz3.ab3@12193> ciflineat:   Ds.l 1
00028AAE <AmiBlitz3.ab3@12201>   MOVEQ.l #$00,D0
00028AB0 <AmiBlitz3.ab3@12202>   MOVE.b (A5)+,D0
00028AB4 <AmiBlitz3.ab3@12203>    BEQ.b 'done
00028AB8 <AmiBlitz3.ab3@12204>    BPL.b 'stuff
00028ABA <AmiBlitz3.ab3@12205>   LSL.w #8,D0
00028ABC <AmiBlitz3.ab3@12206>   MOVE.b (A5)+,D0
00028ABE <AmiBlitz3.ab3@12207>  RTS
00028AC2 <AmiBlitz3.ab3@12210>   CMP.w #$22,D0
00028AC6 <AmiBlitz3.ab3@12211>    BEQ.b 'swapquote
00028ACA <AmiBlitz3.ab3@12212>   CMP.w #$3B,D0
00028ACE <AmiBlitz3.ab3@12213>    BNE.b 'done
00028AD4 <AmiBlitz3.ab3@12214>   TST.w instringon
00028AD8 <AmiBlitz3.ab3@12215>    BNE.b 'done
00028ADA <AmiBlitz3.ab3@12218>   MOVE.b (A5)+,D0
00028ADE <AmiBlitz3.ab3@12219>             BEQ 'loop_l1
00028AE2 <AmiBlitz3.ab3@12220>             CMP.b #":",d0
00028AE6 <AmiBlitz3.ab3@12221>             BNE 'loop
00028AEA <AmiBlitz3.ab3@12222>             CMP.b #"@",(a5)
00028AEE <AmiBlitz3.ab3@12223>             BNE 'loop
00028AF4 <AmiBlitz3.ab3@12226>   MOVE.w D0,lastchar
00028AF6 <AmiBlitz3.ab3@12229>  RTS
00028AFC <AmiBlitz3.ab3@12232>   NOT.w instringon
00028AFE <AmiBlitz3.ab3@12233> RTS
00028B02 <AmiBlitz3.ab3@12237>   BSR.w getchar
00028B08 <AmiBlitz3.ab3@12238>   TST.w instringon
00028B0C <AmiBlitz3.ab3@12239>    BNE.w 'skip
00028B10 <AmiBlitz3.ab3@12240>   CMP.w #$20,D0        ;' '
00028B14 <AmiBlitz3.ab3@12241>    BEQ.w get1byte_
00028B16 <AmiBlitz3.ab3@12244> RTS
00028B30 <AmiBlitz3.ab3@12247> gs:        Ds.w 13                                         ;ds.b 26  org source
00028B34 <AmiBlitz3.ab3@12248>            Dc.b $F6,$E4,$FC,$D6                            ;dc.b 228,246,252,196,214,220 org source
00028B36 <AmiBlitz3.ab3@12249>            Dc.b $C4,$DC
00028B3A <AmiBlitz3.ab3@12256>   BSR.w getchar
00028B40 <AmiBlitz3.ab3@12257>   TST.w instringon
00028B44 <AmiBlitz3.ab3@12258>    BNE.w gchar2
00028B48 <AmiBlitz3.ab3@12259>   CMP.w #$20,D0
00028B4C <AmiBlitz3.ab3@12260>    BEQ.w get1bytemain
00028B4E <AmiBlitz3.ab3@12262>   TST.w D0
00028B52 <AmiBlitz3.ab3@12265>   BEQ.b 'zero
00028B58 <AmiBlitz3.ab3@12266>   TST.w instringon
00028B5C <AmiBlitz3.ab3@12267>    BEQ.b 'noqoute
00028B60 <AmiBlitz3.ab3@12268>   CMP.b #$20,D0           ;' '
00028B64 <AmiBlitz3.ab3@12269>    BCC.b 'skip
00028B68 <AmiBlitz3.ab3@12270>   MOVE.b gs(PC,D0.W),D0
00028B6A <AmiBlitz3.ab3@12271>  RTS
00028B6E <AmiBlitz3.ab3@12274>   CMP.w #-$7FDE,D0                                         ;cmp #$8000+34,d0 org source  ;else
00028B72 <AmiBlitz3.ab3@12275>    BEQ.b 'zero
00028B76 <AmiBlitz3.ab3@12276>   CMP.w #$3A,D0           ;':'
00028B7A <AmiBlitz3.ab3@12277>    BEQ.b 'zero
00028B7C <AmiBlitz3.ab3@12280>   TST.w D0
00028B7E <AmiBlitz3.ab3@12283> RTS
00028B84 <AmiBlitz3.ab3@12287>   MOVE.w lastchar,D0
00028B88 <AmiBlitz3.ab3@12288> BRA.w gchar2
00028B92 <AmiBlitz3.ab3@12292>   MOVE.w oldqflag,instringon
00028B98 <AmiBlitz3.ab3@12293>   MOVEA.l lastsourcepos,A5
00028B9A <AmiBlitz3.ab3@12294> RTS
00028BA0 <AmiBlitz3.ab3@12298>   MOVE.w D0,locchar
00028BA6 <AmiBlitz3.ab3@12299>   MOVE.l A5,locloc
00028BA8 <AmiBlitz3.ab3@12300> RTS
00028BAE <AmiBlitz3.ab3@12304>   MOVEA.l locloc,A5
00028BB4 <AmiBlitz3.ab3@12305>   MOVE.w locchar,D0
00028BBA <AmiBlitz3.ab3@12306>   MOVE.w D0,lastchar
00028BBC <AmiBlitz3.ab3@12307> RTS
00028BBC <internal_errormsg.ab3@1> XINCLUDE "internal_errormsg.ab3"
00028C04 <internal_errormsg.ab3@9> XINCLUDE "internal_errormsg.ab3"
00028C56 <internal_errormsg.ab3@10> XINCLUDE "internal_errormsg.ab3"
00028C94 <internal_errormsg.ab3@11> XINCLUDE "internal_errormsg.ab3"
00028CD2 <internal_errormsg.ab3@12> XINCLUDE "internal_errormsg.ab3"
00028CFC <internal_errormsg.ab3@13> XINCLUDE "internal_errormsg.ab3"
00028D2C <internal_errormsg.ab3@14> XINCLUDE "internal_errormsg.ab3"
00028D76 <internal_errormsg.ab3@15> XINCLUDE "internal_errormsg.ab3"
00028DFC <internal_errormsg.ab3@16> XINCLUDE "internal_errormsg.ab3"
00028E5E <internal_errormsg.ab3@17> XINCLUDE "internal_errormsg.ab3"
00028EA6 <internal_errormsg.ab3@18> XINCLUDE "internal_errormsg.ab3"
00028EF8 <internal_errormsg.ab3@19> XINCLUDE "internal_errormsg.ab3"
00028F5A <internal_errormsg.ab3@20> XINCLUDE "internal_errormsg.ab3"
00028FA8 <internal_errormsg.ab3@21> XINCLUDE "internal_errormsg.ab3"
00028FDE <internal_errormsg.ab3@22> XINCLUDE "internal_errormsg.ab3"
0002900C <internal_errormsg.ab3@23> XINCLUDE "internal_errormsg.ab3"
00029026 <internal_errormsg.ab3@24> XINCLUDE "internal_errormsg.ab3"
00029044 <internal_errormsg.ab3@25> XINCLUDE "internal_errormsg.ab3"
000290C2 <internal_errormsg.ab3@26> XINCLUDE "internal_errormsg.ab3"
000290EC <internal_errormsg.ab3@27> XINCLUDE "internal_errormsg.ab3"
00029112 <internal_errormsg.ab3@28> XINCLUDE "internal_errormsg.ab3"
00029132 <internal_errormsg.ab3@29> XINCLUDE "internal_errormsg.ab3"
00029150 <internal_errormsg.ab3@30> XINCLUDE "internal_errormsg.ab3"
00029170 <internal_errormsg.ab3@31> XINCLUDE "internal_errormsg.ab3"
00029198 <internal_errormsg.ab3@32> XINCLUDE "internal_errormsg.ab3"
000291C2 <internal_errormsg.ab3@33> XINCLUDE "internal_errormsg.ab3"
000291DE <internal_errormsg.ab3@34> XINCLUDE "internal_errormsg.ab3"
00029204 <internal_errormsg.ab3@35> XINCLUDE "internal_errormsg.ab3"
0002921C <internal_errormsg.ab3@36> XINCLUDE "internal_errormsg.ab3"
0002927A <internal_errormsg.ab3@37> XINCLUDE "internal_errormsg.ab3"
0002929C <internal_errormsg.ab3@38> XINCLUDE "internal_errormsg.ab3"
000292C2 <internal_errormsg.ab3@39> XINCLUDE "internal_errormsg.ab3"
000292EA <internal_errormsg.ab3@40> XINCLUDE "internal_errormsg.ab3"
0002930A <internal_errormsg.ab3@41> XINCLUDE "internal_errormsg.ab3"
0002932E <internal_errormsg.ab3@42> XINCLUDE "internal_errormsg.ab3"
00029374 <internal_errormsg.ab3@43> XINCLUDE "internal_errormsg.ab3"
00029398 <internal_errormsg.ab3@44> XINCLUDE "internal_errormsg.ab3"
000293BC <internal_errormsg.ab3@45> XINCLUDE "internal_errormsg.ab3"
000293DC <internal_errormsg.ab3@46> XINCLUDE "internal_errormsg.ab3"
00029400 <internal_errormsg.ab3@47> XINCLUDE "internal_errormsg.ab3"
00029422 <internal_errormsg.ab3@48> XINCLUDE "internal_errormsg.ab3"
0002944E <internal_errormsg.ab3@49> XINCLUDE "internal_errormsg.ab3"
00029474 <internal_errormsg.ab3@50> XINCLUDE "internal_errormsg.ab3"
0002947E <internal_errormsg.ab3@53> XINCLUDE "internal_errormsg.ab3"
000294A4 <internal_errormsg.ab3@54> XINCLUDE "internal_errormsg.ab3"
000294F6 <internal_errormsg.ab3@56> XINCLUDE "internal_errormsg.ab3"
00029560 <internal_errormsg.ab3@57> XINCLUDE "internal_errormsg.ab3"
000295BE <internal_errormsg.ab3@58> XINCLUDE "internal_errormsg.ab3"
0002962C <internal_errormsg.ab3@59> XINCLUDE "internal_errormsg.ab3"
00029668 <internal_errormsg.ab3@60> XINCLUDE "internal_errormsg.ab3"
00029686 <internal_errormsg.ab3@61> XINCLUDE "internal_errormsg.ab3"
000296AC <internal_errormsg.ab3@62> XINCLUDE "internal_errormsg.ab3"
000296DC <internal_errormsg.ab3@63> XINCLUDE "internal_errormsg.ab3"
00029700 <internal_errormsg.ab3@64> XINCLUDE "internal_errormsg.ab3"
0002972E <internal_errormsg.ab3@65> XINCLUDE "internal_errormsg.ab3"
00029752 <internal_errormsg.ab3@66> XINCLUDE "internal_errormsg.ab3"
00029768 <internal_errormsg.ab3@67> XINCLUDE "internal_errormsg.ab3"
0002977E <internal_errormsg.ab3@68> XINCLUDE "internal_errormsg.ab3"
00029784 <internal_errormsg.ab3@71> XINCLUDE "internal_errormsg.ab3"
0002978C <internal_errormsg.ab3@73> XINCLUDE "internal_errormsg.ab3"
0002978E <internal_errormsg.ab3@75> XINCLUDE "internal_errormsg.ab3"
00029792 <internal_errormsg.ab3@76> XINCLUDE "internal_errormsg.ab3"
0002979A <internal_errormsg.ab3@77> XINCLUDE "internal_errormsg.ab3"
0002979C <internal_errormsg.ab3@79> XINCLUDE "internal_errormsg.ab3"
000297D6 <internal_errormsg.ab3@81> XINCLUDE "internal_errormsg.ab3"
00029802 <internal_errormsg.ab3@82> XINCLUDE "internal_errormsg.ab3"
00029832 <internal_errormsg.ab3@83> XINCLUDE "internal_errormsg.ab3"
0002986A <internal_errormsg.ab3@84> XINCLUDE "internal_errormsg.ab3"
000298C4 <internal_errormsg.ab3@85> XINCLUDE "internal_errormsg.ab3"
000298C6 <internal_errormsg.ab3@89> XINCLUDE "internal_errormsg.ab3"
000298CA <internal_errormsg.ab3@90> XINCLUDE "internal_errormsg.ab3"
000298CE <internal_errormsg.ab3@91> XINCLUDE "internal_errormsg.ab3"
000298D2 <internal_errormsg.ab3@92> XINCLUDE "internal_errormsg.ab3"
000298D6 <internal_errormsg.ab3@93> XINCLUDE "internal_errormsg.ab3"
000298DA <internal_errormsg.ab3@94> XINCLUDE "internal_errormsg.ab3"
000298DE <internal_errormsg.ab3@95> XINCLUDE "internal_errormsg.ab3"
000298E2 <internal_errormsg.ab3@96> XINCLUDE "internal_errormsg.ab3"
000298E6 <internal_errormsg.ab3@97> XINCLUDE "internal_errormsg.ab3"
000298EA <internal_errormsg.ab3@98> XINCLUDE "internal_errormsg.ab3"
000298EE <internal_errormsg.ab3@99> XINCLUDE "internal_errormsg.ab3"
0002992C <internal_errormsg.ab3@100> XINCLUDE "internal_errormsg.ab3"
0002995E <internal_errormsg.ab3@102> XINCLUDE "internal_errormsg.ab3"
0002997C <internal_errormsg.ab3@103> XINCLUDE "internal_errormsg.ab3"
000299A6 <internal_errormsg.ab3@104> XINCLUDE "internal_errormsg.ab3"
000299C2 <internal_errormsg.ab3@105> XINCLUDE "internal_errormsg.ab3"
000299DC <internal_errormsg.ab3@106> XINCLUDE "internal_errormsg.ab3"
000299FA <internal_errormsg.ab3@107> XINCLUDE "internal_errormsg.ab3"
00029A1E <internal_errormsg.ab3@108> XINCLUDE "internal_errormsg.ab3"
00029A20 <internal_errormsg.ab3@112> XINCLUDE "internal_errormsg.ab3"
00029A72 <internal_errormsg.ab3@114> XINCLUDE "internal_errormsg.ab3"
00029A9A <internal_errormsg.ab3@116> XINCLUDE "internal_errormsg.ab3"
00029AC2 <internal_errormsg.ab3@117> XINCLUDE "internal_errormsg.ab3"
00029ADE <internal_errormsg.ab3@121> XINCLUDE "internal_errormsg.ab3"
00029AFE <internal_errormsg.ab3@122> XINCLUDE "internal_errormsg.ab3"
00029B16 <internal_errormsg.ab3@123> XINCLUDE "internal_errormsg.ab3"
00029B5A <internal_errormsg.ab3@124> XINCLUDE "internal_errormsg.ab3"
00029BA2 <internal_errormsg.ab3@125> XINCLUDE "internal_errormsg.ab3"
00029BCC <internal_errormsg.ab3@126> XINCLUDE "internal_errormsg.ab3"
00029BF6 <internal_errormsg.ab3@127> XINCLUDE "internal_errormsg.ab3"
00029C10 <internal_errormsg.ab3@131> XINCLUDE "internal_errormsg.ab3"
00029C3A <internal_errormsg.ab3@132> XINCLUDE "internal_errormsg.ab3"
00029C8E <internal_errormsg.ab3@133> XINCLUDE "internal_errormsg.ab3"
00029CDA <internal_errormsg.ab3@134> XINCLUDE "internal_errormsg.ab3"
00029D12 <internal_errormsg.ab3@135> XINCLUDE "internal_errormsg.ab3"
00029D18 <internal_errormsg.ab3@138> XINCLUDE "internal_errormsg.ab3"
00029D26 <internal_errormsg.ab3@142> XINCLUDE "internal_errormsg.ab3"
00029D56 <internal_errormsg.ab3@145> XINCLUDE "internal_errormsg.ab3"
00029D8A <internal_errormsg.ab3@146> XINCLUDE "internal_errormsg.ab3"
00029DF0 <internal_errormsg.ab3@147> XINCLUDE "internal_errormsg.ab3"
00029E0E <internal_errormsg.ab3@148> XINCLUDE "internal_errormsg.ab3"
00029E88 <internal_errormsg.ab3@149> XINCLUDE "internal_errormsg.ab3"
00029EB0 <internal_errormsg.ab3@150> XINCLUDE "internal_errormsg.ab3"
00029EC6 <internal_errormsg.ab3@151> XINCLUDE "internal_errormsg.ab3"
00029EDA <internal_errormsg.ab3@152> XINCLUDE "internal_errormsg.ab3"
00029EFA <internal_errormsg.ab3@153> XINCLUDE "internal_errormsg.ab3"
00029F00 <internal_errormsg.ab3@156> XINCLUDE "internal_errormsg.ab3"
00029F12 <internal_errormsg.ab3@160> XINCLUDE "internal_errormsg.ab3"
00029F46 <internal_errormsg.ab3@163> XINCLUDE "internal_errormsg.ab3"
00029F5E <internal_errormsg.ab3@164> XINCLUDE "internal_errormsg.ab3"
00029F7A <internal_errormsg.ab3@165> XINCLUDE "internal_errormsg.ab3"
00029F92 <internal_errormsg.ab3@166> XINCLUDE "internal_errormsg.ab3"
00029FB2 <internal_errormsg.ab3@167> XINCLUDE "internal_errormsg.ab3"
00029FD2 <internal_errormsg.ab3@168> XINCLUDE "internal_errormsg.ab3"
00029FF8 <internal_errormsg.ab3@169> XINCLUDE "internal_errormsg.ab3"
0002A00E <internal_errormsg.ab3@170> XINCLUDE "internal_errormsg.ab3"
0002A02A <internal_errormsg.ab3@171> XINCLUDE "internal_errormsg.ab3"
0002A054 <internal_errormsg.ab3@172> XINCLUDE "internal_errormsg.ab3"
0002A06C <internal_errormsg.ab3@173> XINCLUDE "internal_errormsg.ab3"
0002A088 <internal_errormsg.ab3@174> XINCLUDE "internal_errormsg.ab3"
0002A0A8 <internal_errormsg.ab3@175> XINCLUDE "internal_errormsg.ab3"
0002A0C0 <internal_errormsg.ab3@176> XINCLUDE "internal_errormsg.ab3"
0002A0C4 <internal_errormsg.ab3@179> XINCLUDE "internal_errormsg.ab3"
0002A0CA <internal_errormsg.ab3@180> XINCLUDE "internal_errormsg.ab3"
0002A0D0 <internal_errormsg.ab3@181> XINCLUDE "internal_errormsg.ab3"
0002A0E5 <internal_errormsg.ab3@182> XINCLUDE "internal_errormsg.ab3"
0002A0EB <internal_errormsg.ab3@184> XINCLUDE "internal_errormsg.ab3"
0002A0EC <internal_errormsg.ab3@185> XINCLUDE "internal_errormsg.ab3"
0002A0F0 <internal_errormsg.ab3@188> XINCLUDE "internal_errormsg.ab3"
0002A0F6 <internal_errormsg.ab3@189> XINCLUDE "internal_errormsg.ab3"
0002A0FC <internal_errormsg.ab3@190> XINCLUDE "internal_errormsg.ab3"
0002A10F <internal_errormsg.ab3@191> XINCLUDE "internal_errormsg.ab3"
0002A115 <internal_errormsg.ab3@193> XINCLUDE "internal_errormsg.ab3"
0002A116 <internal_errormsg.ab3@194> XINCLUDE "internal_errormsg.ab3"
0002A134 <internal_errormsg.ab3@196> XINCLUDE "internal_errormsg.ab3"
0002A14C <internal_errormsg.ab3@197> XINCLUDE "internal_errormsg.ab3"
0002A168 <internal_errormsg.ab3@198> XINCLUDE "internal_errormsg.ab3"
0002A192 <internal_errormsg.ab3@199> XINCLUDE "internal_errormsg.ab3"
0002A1AC <internal_errormsg.ab3@200> XINCLUDE "internal_errormsg.ab3"
0002A1CC <internal_errormsg.ab3@201> XINCLUDE "internal_errormsg.ab3"
0002A1EA <internal_errormsg.ab3@202> XINCLUDE "internal_errormsg.ab3"
0002A218 <internal_errormsg.ab3@203> XINCLUDE "internal_errormsg.ab3"
0002A222 <internal_errormsg.ab3@206> XINCLUDE "internal_errormsg.ab3"
0002A254 <internal_errormsg.ab3@207> XINCLUDE "internal_errormsg.ab3"
0002A272 <internal_errormsg.ab3@209> XINCLUDE "internal_errormsg.ab3"
0002A290 <internal_errormsg.ab3@210> XINCLUDE "internal_errormsg.ab3"
0002A2B0 <internal_errormsg.ab3@211> XINCLUDE "internal_errormsg.ab3"
0002A2D6 <internal_errormsg.ab3@212> XINCLUDE "internal_errormsg.ab3"
0002A2FC <internal_errormsg.ab3@213> XINCLUDE "internal_errormsg.ab3"
0002A324 <internal_errormsg.ab3@214> XINCLUDE "internal_errormsg.ab3"
0002A342 <internal_errormsg.ab3@215> XINCLUDE "internal_errormsg.ab3"
0002A362 <internal_errormsg.ab3@216> XINCLUDE "internal_errormsg.ab3"
0002A37C <internal_errormsg.ab3@217> XINCLUDE "internal_errormsg.ab3"
0002A39E <internal_errormsg.ab3@218> XINCLUDE "internal_errormsg.ab3"
0002A3BC <internal_errormsg.ab3@219> XINCLUDE "internal_errormsg.ab3"
0002A3DE <internal_errormsg.ab3@220> XINCLUDE "internal_errormsg.ab3"
0002A402 <internal_errormsg.ab3@221> XINCLUDE "internal_errormsg.ab3"
0002A408 <internal_errormsg.ab3@225> XINCLUDE "internal_errormsg.ab3"
0002A424 <internal_errormsg.ab3@227> XINCLUDE "internal_errormsg.ab3"
0002A440 <internal_errormsg.ab3@229> XINCLUDE "internal_errormsg.ab3"
0002A45E <internal_errormsg.ab3@230> XINCLUDE "internal_errormsg.ab3"
0002A47C <internal_errormsg.ab3@231> XINCLUDE "internal_errormsg.ab3"
0002A4CA <internal_errormsg.ab3@232> XINCLUDE "internal_errormsg.ab3"
0002A4E8 <internal_errormsg.ab3@233> XINCLUDE "internal_errormsg.ab3"
0002A506 <internal_errormsg.ab3@234> XINCLUDE "internal_errormsg.ab3"
0002A520 <internal_errormsg.ab3@235> XINCLUDE "internal_errormsg.ab3"
0002A56C <internal_errormsg.ab3@236> XINCLUDE "internal_errormsg.ab3"
0002A592 <internal_errormsg.ab3@237> XINCLUDE "internal_errormsg.ab3"
0002A5B2 <internal_errormsg.ab3@238> XINCLUDE "internal_errormsg.ab3"
0002A5D4 <internal_errormsg.ab3@239> XINCLUDE "internal_errormsg.ab3"
0002A5F0 <internal_errormsg.ab3@240> XINCLUDE "internal_errormsg.ab3"
0002A616 <internal_errormsg.ab3@241> XINCLUDE "internal_errormsg.ab3"
0002A632 <internal_errormsg.ab3@242> XINCLUDE "internal_errormsg.ab3"
0002A650 <internal_errormsg.ab3@243> XINCLUDE "internal_errormsg.ab3"
0002A678 <internal_errormsg.ab3@244> XINCLUDE "internal_errormsg.ab3"
0002A694 <internal_errormsg.ab3@245> XINCLUDE "internal_errormsg.ab3"
0002A6A4 <internal_errormsg.ab3@246> XINCLUDE "internal_errormsg.ab3"
0002A6C6 <internal_errormsg.ab3@247> XINCLUDE "internal_errormsg.ab3"
0002A6C8 <internal_errormsg.ab3@251> XINCLUDE "internal_errormsg.ab3"
0002A6E2 <internal_errormsg.ab3@253> XINCLUDE "internal_errormsg.ab3"
0002A706 <internal_errormsg.ab3@255> XINCLUDE "internal_errormsg.ab3"
0002A726 <internal_errormsg.ab3@256> XINCLUDE "internal_errormsg.ab3"
0002A758 <internal_errormsg.ab3@257> XINCLUDE "internal_errormsg.ab3"
0002A7B6 <internal_errormsg.ab3@258> XINCLUDE "internal_errormsg.ab3"
0002A7EE <internal_errormsg.ab3@259> XINCLUDE "internal_errormsg.ab3"
0002A82C <internal_errormsg.ab3@260> XINCLUDE "internal_errormsg.ab3"
0002A862 <internal_errormsg.ab3@261> XINCLUDE "internal_errormsg.ab3"
0002A894 <internal_errormsg.ab3@262> XINCLUDE "internal_errormsg.ab3"
0002A8B8 <internal_errormsg.ab3@263> XINCLUDE "internal_errormsg.ab3"
0002A8DC <internal_errormsg.ab3@264> XINCLUDE "internal_errormsg.ab3"
0002A926 <internal_errormsg.ab3@265> XINCLUDE "internal_errormsg.ab3"
0002A94E <internal_errormsg.ab3@266> XINCLUDE "internal_errormsg.ab3"
0002A998 <internal_errormsg.ab3@267> XINCLUDE "internal_errormsg.ab3"
0002A9D8 <internal_errormsg.ab3@268> XINCLUDE "internal_errormsg.ab3"
0002A9D8 <AmiBlitz3.ab3@12311> XINCLUDE "internal_errormsg.ab3"
0002A9DA <AmiBlitz3.ab3@12315> ezerr:   Ds.w 1                                            ;for simple errors
0002A9E0 <AmiBlitz3.ab3@12322>    MOVE.l myline,d0
0002A9E4 <AmiBlitz3.ab3@12323>   BNE 'l2
0002A9EA <AmiBlitz3.ab3@12326>     MOVE.l a5,lastsourcepos
0002A9EC <AmiBlitz3.ab3@12329>     SUBA.l a5,a5
0002A9F2 <AmiBlitz3.ab3@12332>   TST.l usedfrom
0002A9F6 <AmiBlitz3.ab3@12333>   BEQ 'org
0002A9FC <AmiBlitz3.ab3@12334>     MOVEA.l usedfrom,a5
0002AA02 <AmiBlitz3.ab3@12338>   TST.w dirmode
0002AA06 <AmiBlitz3.ab3@12339>   BNE.b 'quiet
0002AA0C <AmiBlitz3.ab3@12341>     JSR call_setpointernormal
0002AA10 <AmiBlitz3.ab3@12343>     MOVE.w ezerr(PC),D0
0002AA14 <AmiBlitz3.ab3@12344>     BNE.w 'skip
0002AA1A <AmiBlitz3.ab3@12345>       MOVE.w cfetchmode,D0
0002AA1E <AmiBlitz3.ab3@12346>       BEQ.w 'skip2
0002AA28 <AmiBlitz3.ab3@12347>         MOVE.l oldlibat,destbufferend                      ;fix up lib thing.
0002AA2E <AmiBlitz3.ab3@12350>   MOVE.w constmode,D0
0002AA32 <AmiBlitz3.ab3@12351>   BEQ.b 'skip3
0002AA36 <AmiBlitz3.ab3@12352>     BSR.w asmerr2
0002AA3C <AmiBlitz3.ab3@12355>   MOVE.l firstlocal,D1
0002AA42 <AmiBlitz3.ab3@12356>   OR.l firstglob,D1
0002AA46 <AmiBlitz3.ab3@12357>   BEQ.b 'notproc                                           ;?!?!?!
0002AA4C <AmiBlitz3.ab3@12359> 
0002AA50 <AmiBlitz3.ab3@12360>     BNE 'notproc                                           ; yes skip
0002AA56 <AmiBlitz3.ab3@12362>       JSR droplocals                                        ; no free some data ????
0002AA5E <AmiBlitz3.ab3@12365>   MOVE.w #$FFFF,anyerrs                                    ;#-1,anyerrs org source
0002AA68 <AmiBlitz3.ab3@12367>   CMP.l #"NORE",reqmode                                    ;for used functions
0002AA6C <AmiBlitz3.ab3@12368>   BEQ 'notproc_l1
0002AA76 <AmiBlitz3.ab3@12370>     MOVE.l linenumat,compilelinecounter
0002AA7C <AmiBlitz3.ab3@12373>   JSR close_compilewin
0002AA7E <AmiBlitz3.ab3@12376>   MOVEA.l (A7)+,A0
0002AA84 <AmiBlitz3.ab3@12378>   MOVE.l errorcounter,d0                                   ; added to make maxerrorcount changable in CLIMode  tomsmart1
0002AA8A <AmiBlitz3.ab3@12379>   CMP.l maxerrorcount,d0                                   ; changed to make maxerrorcount changable in CLIMode  tomsmart1
0002AA8E <AmiBlitz3.ab3@12380>   BLT 'lesserror
0002AA94 <AmiBlitz3.ab3@12381>   LEA errorlimit_text,a0
0002AA9A <AmiBlitz3.ab3@12384>   ADDQ.l #1,errorcounter
0002AAA0 <AmiBlitz3.ab3@12385>   JSR errorstringparse
0002AAAA <AmiBlitz3.ab3@12386>   CMP.l #"NORE",reqmode                                    ;for used functions
0002AAAE <AmiBlitz3.ab3@12387>   BEQ 'skip_Lxx2
0002AAB4 <AmiBlitz3.ab3@12388>   TST.l CLIMode
0002AAB8 <AmiBlitz3.ab3@12389>   BNE 'climode_output
0002AABE <AmiBlitz3.ab3@12392>     JSR save_errorfile
0002AAC2 <AmiBlitz3.ab3@12393>     BRA 'end_output
0002AAC8 <AmiBlitz3.ab3@12396>     JSR stdout_error
0002AACE <AmiBlitz3.ab3@12399>        MOVE.l errorcounter,d0                          ; added to make maxerrorcount changable in CLIMode  tomsmart1
0002AAD4 <AmiBlitz3.ab3@12400>        CMP.l maxerrorcount,d0                          ; changed to make maxerrorcount changable in CLIMode  tomsmart1
0002AAD8 <AmiBlitz3.ab3@12401>        BGT 'end_output
0002AADE <AmiBlitz3.ab3@12402>       MOVE.l lastsourcepos,a5
0002AAE0 <AmiBlitz3.ab3@12405>       TST.b (a5)
0002AAE4 <AmiBlitz3.ab3@12406>         BEQ 'ok2
0002AAE6 <AmiBlitz3.ab3@12407>       MOVE.b (a5)+,d0                                  ; position to usefull source position to avoid following errors
0002AAEA <AmiBlitz3.ab3@12408>       BEQ 'ok
0002AAEE <AmiBlitz3.ab3@12409>       CMP.b #":",d0
0002AAF2 <AmiBlitz3.ab3@12410>       BEQ 'ok
0002AAF6 <AmiBlitz3.ab3@12411>       BRA 'loop
0002AAF8 <AmiBlitz3.ab3@12414>     SUBQ.l #1,a5
0002AB00 <AmiBlitz3.ab3@12417>       MOVE.w #0,lastchar
0002AB08 <AmiBlitz3.ab3@12418>       MOVE.b #1,iserror
0002AB0E <AmiBlitz3.ab3@12419>       MOVE.l stackaddr,a7
0002AB10 <AmiBlitz3.ab3@12420>       RTS
0002AB12 <AmiBlitz3.ab3@12428>   MOVE.l A0,-(a7)
0002AB50 <AmiBlitz3.ab3@12429>   !ComData_GetL{comFunc_ErrorRequest,A1}
0002AB52 <AmiBlitz3.ab3@12430>   MOVE.l (a7)+,A0
0002AB56 <AmiBlitz3.ab3@12432>   MOVEM.l d6/D7/A6,-(A7)
0002AB5C <AmiBlitz3.ab3@12434>   MOVE.l includeline,d7
0002AB62 <AmiBlitz3.ab3@12435>   MOVE.l #"INLN",a6
0002AB6C <AmiBlitz3.ab3@12436>   MOVE.l errstack,tempa7
0002AB6E <AmiBlitz3.ab3@12438>   JSR (A1)                                                  ;open ped errorrequest
0002AB72 <AmiBlitz3.ab3@12440>   MOVEM.l (A7)+,D7/d6/A6
0002AB78 <AmiBlitz3.ab3@12444>   MOVE.l tempa7,a7
0002AB7E <AmiBlitz3.ab3@12446>   MOVEA.l errcont,A0
0002AB80 <AmiBlitz3.ab3@12449>  RTS
0002AB86 <AmiBlitz3.ab3@12452>   MOVEA.l errstack,A7
0002AB8C <AmiBlitz3.ab3@12453>   MOVEA.l errcont,A0
0002AB8E <AmiBlitz3.ab3@12455>  RTS
0002AB90 <AmiBlitz3.ab3@12459>   MOVE.l (A7),D0
0002AB96 <AmiBlitz3.ab3@12460>   MOVEA.l errstack,A7
0002AB9C <AmiBlitz3.ab3@12461>   MOVEA.l errcont,A0
0002AB9E <AmiBlitz3.ab3@12462> JMP (A0)
0002ABA2 <AmiBlitz3.ab3@12468>   CMP.w #$7A,D0                                            ;'z'
0002ABA6 <AmiBlitz3.ab3@12469>    BHI.w 'no
0002ABAA <AmiBlitz3.ab3@12470>   CMP.w #$41,D0                                            ;'A'
0002ABAE <AmiBlitz3.ab3@12471>    BCS.w 'no
0002ABB2 <AmiBlitz3.ab3@12472>   CMP.w #$61,D0                                            ;'a'
0002ABB6 <AmiBlitz3.ab3@12473>    BCC.w 'yes
0002ABBA <AmiBlitz3.ab3@12474>   CMP.w #$5A,D0                                            ;'Z'
0002ABBE <AmiBlitz3.ab3@12475>    BHI.w 'no
0002ABC0 <AmiBlitz3.ab3@12478>   CMP.w D0,D0
0002ABC2 <AmiBlitz3.ab3@12481> RTS
0002ABC6 <AmiBlitz3.ab3@12489>   CMP.w #$30,D0                                            ;'0'
0002ABCA <AmiBlitz3.ab3@12490>    BCS.w 'skip
0002ABCE <AmiBlitz3.ab3@12491>   CMP.w #$39,D0                                            ;'9'
0002ABD2 <AmiBlitz3.ab3@12492>    BHI.w 'skip
0002ABD4 <AmiBlitz3.ab3@12493>   CMP.w D0,D0
0002ABD6 <AmiBlitz3.ab3@12496> RTS
0002ABF8 <AmiBlitz3.ab3@12503>   !compare1                                                ;bsr.w tstalpha
0002ABFC <AmiBlitz3.ab3@12505>    BEQ.w 'skip
0002AC0E <AmiBlitz3.ab3@12507>   !compare2                                                ;bsr.w tstnum2
0002AC12 <AmiBlitz3.ab3@12509>    BEQ.w 'skip
0002AC16 <AmiBlitz3.ab3@12510>   CMP.w #$5F,D0                                            ;'_'
0002AC1A <AmiBlitz3.ab3@12511>    BEQ.w 'skip
0002AC1E <AmiBlitz3.ab3@12512>   CMP.w #$27,D0                                            ;''';#loclabch,d0 org source
0002AC20 <AmiBlitz3.ab3@12515> RTS
0002AC2A <AmiBlitz3.ab3@12521>   MOVE.w oldqflag,instringon
0002AC30 <AmiBlitz3.ab3@12522>   MOVEA.l lastsourcepos,A5
0002AC36 <AmiBlitz3.ab3@12531>   MOVE.l a5,beforeparameterfetch
0002AC3C <AmiBlitz3.ab3@12533>   LEA ptr_parameterstore,A1
0002AC3E <AmiBlitz3.ab3@12536>   MOVEQ.l #$00,D2
0002AC44 <AmiBlitz3.ab3@12540>   LEA chartab,a0
0002AC46 <AmiBlitz3.ab3@12541>   MOVEQ #0,d0
0002AC4C <AmiBlitz3.ab3@12542>   MOVE.l A5,lastsourcepos
0002AC56 <AmiBlitz3.ab3@12543>   MOVE.w instringon,oldqflag
0002AC58 <AmiBlitz3.ab3@12546>     MOVE.b (a5)+,d0
0002AC5C <AmiBlitz3.ab3@12547>   CMP.b #$20,d0                                            ;space deftype
0002AC60 <AmiBlitz3.ab3@12548>   BEQ 'retry
0002AC66 <AmiBlitz3.ab3@12550>   MOVE.w d0,lastchar
0002AC6A <AmiBlitz3.ab3@12551>   TST.b 0(a0,d0.w)
0002AC6E <AmiBlitz3.ab3@12552>   BNE 'done
0002AC70 <AmiBlitz3.ab3@12565>   MOVE.b D0,(A1)+
0002AC72 <AmiBlitz3.ab3@12566>   ADDQ.l #1,D2
0002AC78 <AmiBlitz3.ab3@12569>   MOVE.l A5,lastsourcepos
0002AC7A <AmiBlitz3.ab3@12572>   MOVE.b (a5)+,d0
0002AC80 <AmiBlitz3.ab3@12573>   MOVE.b d0,lastchar+1
0002AC84 <AmiBlitz3.ab3@12574>   CMP.b #$20,d0
0002AC88 <AmiBlitz3.ab3@12575>   BEQ 'loop_l20
0002AC8C <AmiBlitz3.ab3@12577>   TST.b 0(a0,d0)
0002AC90 <AmiBlitz3.ab3@12578>   BEQ 'loop
0002AC94 <AmiBlitz3.ab3@12579>   CMP.b #2,d0
0002AC98 <AmiBlitz3.ab3@12580>   BNE 'loop_lf1
0002AC9E <AmiBlitz3.ab3@12581>   MOVEA.l usedfrom,A5
0002ACA4 <AmiBlitz3.ab3@12582>   CLR.l usedfrom
0002ACA8 <AmiBlitz3.ab3@12583>  BRA 'loop_ln1
0002ACAC <AmiBlitz3.ab3@12586>   CMP.b #1,d0
0002ACB0 <AmiBlitz3.ab3@12587>   BNE 'loop_l20
0002ACB4 <AmiBlitz3.ab3@12588>   MOVEA.l cmakea5(PC),A5
0002ACB8 <AmiBlitz3.ab3@12589>  BRA 'loop_ln1
0002ACBC <AmiBlitz3.ab3@12592>   CMP.b #$7e,d0
0002ACC0 <AmiBlitz3.ab3@12593>             BNE 'loop_lt
0002ACC6 <AmiBlitz3.ab3@12594>             TST.w cmake
0002ACCA <AmiBlitz3.ab3@12595>             BNE.w 'loop_a1
0002ACCC <AmiBlitz3.ab3@12596>             SUBQ.l #1,a5
0002ACD0 <AmiBlitz3.ab3@12597>             BSR.w get1bytemain
0002ACD4 <AmiBlitz3.ab3@12598>  BRA 'loop
0002ACD8 <AmiBlitz3.ab3@12602>  BRA 'loop_gpex
0002ACDC <AmiBlitz3.ab3@12606>   BSR.w getchar
0002ACFE <AmiBlitz3.ab3@12608>    !compare1                                               ;bsr.w tstalpha
0002AD02 <AmiBlitz3.ab3@12609>    BEQ.w 'loop_getp1
0002AD14 <AmiBlitz3.ab3@12610>    !compare2                                               ;bsr.w tstnum
0002AD18 <AmiBlitz3.ab3@12611>    BEQ.w 'loop_getp1
0002AD1C <AmiBlitz3.ab3@12612>   CMP.w #$5F,D0                                            ;'_'
0002AD20 <AmiBlitz3.ab3@12613>    BEQ.w 'loop_getp1
0002AD24 <AmiBlitz3.ab3@12614>   CMP.w #$27,D0                                            ;''';#loclabch,d0 org source
0002AD28 <AmiBlitz3.ab3@12618>       BNE 'loop_gpex
0002AD2C <AmiBlitz3.ab3@12619>       CMP.b #$20,d0
0002AD30 <AmiBlitz3.ab3@12621>       BNE.w 'loop
0002AD32 <AmiBlitz3.ab3@12624>      TST.b d0
0002AD36 <AmiBlitz3.ab3@12625>      BPL 'loop_l10
0002AD38 <AmiBlitz3.ab3@12626>      SUBQ.l #1,a5
0002AD3C <AmiBlitz3.ab3@12627>      BSR get1byte_
0002AD40 <AmiBlitz3.ab3@12635>    CMP.w #$20,D0
0002AD44 <AmiBlitz3.ab3@12636>    BNE.w 'done
0002AD46 <AmiBlitz3.ab3@12638>    MOVEQ #0,d0
0002AD4C <AmiBlitz3.ab3@12639>   MOVE.l a5,lastsourcepos
0002AD4E <AmiBlitz3.ab3@12642>   MOVE.b (a5)+,d0                                          ;neuneu
0002AD52 <AmiBlitz3.ab3@12643>   BPL 'loop_l101
0002AD54 <AmiBlitz3.ab3@12644>   ASL.w #8,d0
0002AD56 <AmiBlitz3.ab3@12645>   MOVE.b (a5)+,d0
0002AD5C <AmiBlitz3.ab3@12648>   TST.w instringon
0002AD60 <AmiBlitz3.ab3@12649>   BNE 'loop_l102
0002AD64 <AmiBlitz3.ab3@12650>   CMP.b #$20,d0
0002AD68 <AmiBlitz3.ab3@12651>   BEQ 'loop_l103
0002AD6C <AmiBlitz3.ab3@12652>   CMP.b #";",d0
0002AD70 <AmiBlitz3.ab3@12653>   BNE 'loop_l102
0002AD72 <AmiBlitz3.ab3@12656>   MOVE.b (A5)+,D0
0002AD76 <AmiBlitz3.ab3@12657>              BEQ 'loop_l1
0002AD7A <AmiBlitz3.ab3@12658>              CMP.b #":",d0
0002AD7E <AmiBlitz3.ab3@12659>              BNE 'loop_lr                         ;:@
0002AD82 <AmiBlitz3.ab3@12660>              CMP.b #"@",(a5)
0002AD86 <AmiBlitz3.ab3@12661>              BNE 'loop_lr
0002AD88 <AmiBlitz3.ab3@12662>              ADDQ #1,a5
0002AD8E <AmiBlitz3.ab3@12666>   MOVE.w d0,lastchar
0002AD92 <AmiBlitz3.ab3@12672>   CMP.b #";",d0
0002AD96 <AmiBlitz3.ab3@12673>   BEQ 'done_l11
0002AD98 <AmiBlitz3.ab3@12675>   CLR.b (A1)
0002AD9A <AmiBlitz3.ab3@12679>   TST.w D2
0002AD9C <AmiBlitz3.ab3@12680>  RTS
0002AD9E <AmiBlitz3.ab3@12684>   CLR.b (a1)
0002ADA0 <AmiBlitz3.ab3@12685>   MOVEQ #0,d0
0002ADA6 <AmiBlitz3.ab3@12686>   MOVE.w d0,lastchar
0002ADA8 <AmiBlitz3.ab3@12689>   TST.w D2
0002ADAA <AmiBlitz3.ab3@12690> RTS
0002ADAC <AmiBlitz3.ab3@12697>   MOVE.l (A2),D0
0002ADB0 <AmiBlitz3.ab3@12700>   BEQ.w 'here
0002ADB2 <AmiBlitz3.ab3@12701>   MOVEA.l D0,A2
0002ADB6 <AmiBlitz3.ab3@12702>  BRA.w 'loop
0002ADBA <AmiBlitz3.ab3@12705> BRA.w reget
0002ADBC <AmiBlitz3.ab3@12711>   MOVE.l (A2),-(A7)
0002ADC0 <AmiBlitz3.ab3@12712>   BSR.w addlabel
0002ADC2 <AmiBlitz3.ab3@12713>   MOVE.l (A7)+,(A2)
0002ADC4 <AmiBlitz3.ab3@12714> RTS
0002ADCA <AmiBlitz3.ab3@12719>   CLR.l fp0addr
0002ADD0 <AmiBlitz3.ab3@12720>   TST.w dirmode
0002ADD4 <AmiBlitz3.ab3@12721>    BNE.w illdirerr
0002ADD6 <AmiBlitz3.ab3@12722>   MOVEQ.l #$00,D0
0002ADD8 <AmiBlitz3.ab3@12723>   MOVE.w D7,D0
0002ADDA <AmiBlitz3.ab3@12724>   ADD.w D2,D0
0002ADDC <AmiBlitz3.ab3@12725>   ADDQ.w #1,D0
0002ADDE <AmiBlitz3.ab3@12726>   MOVE.w D0,D2
0002ADE0 <AmiBlitz3.ab3@12727>   ADDQ.l #2,d0
0002ADE2 <AmiBlitz3.ab3@12728>   MOVEQ.l #$01,D1
0002ADE8 <AmiBlitz3.ab3@12729>   MOVEA.l _execbase,A6
0002ADEE <AmiBlitz3.ab3@12730>   MOVE.l mempool2,a0
0002ADF2 <AmiBlitz3.ab3@12731>   JSR _AllocPooled(a6)
0002ADF8 <AmiBlitz3.ab3@12733>   MOVE.l lastlabel,a2
0002ADFA <AmiBlitz3.ab3@12734>   MOVE.l D0,(A2)
0002ADFC <AmiBlitz3.ab3@12735>   MOVE.l d0,a0
0002ADFE <AmiBlitz3.ab3@12736>   CLR.l (a0)
0002AE04 <AmiBlitz3.ab3@12737>   MOVE.l a0,lastlabel
0002AE06 <AmiBlitz3.ab3@12738>   MOVE.l d0,A2
0002AE0A <AmiBlitz3.ab3@12739>   LEA -$1(A0,D7.W),A0
0002AE0C <AmiBlitz3.ab3@12740>   MOVE.b D2,(A0)+
0002AE12 <AmiBlitz3.ab3@12741>   LEA ptr_parameterstore,A1
0002AE14 <AmiBlitz3.ab3@12742>   MOVEQ #0,d0
0002AE16 <AmiBlitz3.ab3@12743>   MOVEQ #0,d1
0002AE18 <AmiBlitz3.ab3@12746>   MOVE.b (A1)+,d1
0002AE1C <AmiBlitz3.ab3@12747>    BEQ 'l1
0002AE22 <AmiBlitz3.ab3@12748>    !hashalgo
0002AE24 <AmiBlitz3.ab3@12749>    MOVE.b d1,(A0)+
0002AE28 <AmiBlitz3.ab3@12750>  BRA 'loop2a
0002AE2A <AmiBlitz3.ab3@12753>    CLR.b (a0)+
0002AE30 <AmiBlitz3.ab3@12754>    LEA labelhash,a0
0002AE36 <AmiBlitz3.ab3@12755>    AND.l #hashsize,d0
0002AE38 <AmiBlitz3.ab3@12756>    ASL.l #2,d0
0002AE3C <AmiBlitz3.ab3@12757>    MOVE.l 0(a0,d0),d1
0002AE40 <AmiBlitz3.ab3@12758>    MOVE.l d1,$c(a2)
0002AE44 <AmiBlitz3.ab3@12759>    MOVE.l a2,0(a0,d0)
0002AE46 <AmiBlitz3.ab3@12760>    MOVEQ #0,d0
0002AE4A <AmiBlitz3.ab3@12761> BRA.w reget
0002AE50 <AmiBlitz3.ab3@12765>    TST.b newvariable
0002AE54 <AmiBlitz3.ab3@12766>    BNE addlabel
0002AE5A <AmiBlitz3.ab3@12769>   TST.w dirmode
0002AE5E <AmiBlitz3.ab3@12770>    BNE.w illdirerr
0002AE60 <AmiBlitz3.ab3@12771>   MOVEQ.l #$00,D0
0002AE62 <AmiBlitz3.ab3@12772>   MOVE.w D7,D0
0002AE64 <AmiBlitz3.ab3@12773>   ADD.w D2,D0
0002AE66 <AmiBlitz3.ab3@12774>   ADDQ.w #1,D0
0002AE68 <AmiBlitz3.ab3@12775>   MOVE.w D0,D2
0002AE6A <AmiBlitz3.ab3@12776>   MOVEQ.l #$01,D1
0002AE70 <AmiBlitz3.ab3@12777>   MOVEA.l _execbase,A6
0002AE76 <AmiBlitz3.ab3@12778>   MOVE.l mempool2,a0
0002AE7A <AmiBlitz3.ab3@12779>   JSR _AllocPooled(a6)
0002AE7C <AmiBlitz3.ab3@12780>   MOVEA.l D0,A0
0002AE82 <AmiBlitz3.ab3@12782>   LEA varbase,a2
0002AE84 <AmiBlitz3.ab3@12783>   MOVE.l (a2),(a0)
0002AE86 <AmiBlitz3.ab3@12784>   MOVE.l A0,(A2)
0002AE88 <AmiBlitz3.ab3@12785>   MOVEA.l A0,A2
0002AE8C <AmiBlitz3.ab3@12786>   LEA -$1(A0,D7.W),A0
0002AE8E <AmiBlitz3.ab3@12787>   MOVE.b D2,(A0)+
0002AE94 <AmiBlitz3.ab3@12788>   LEA ptr_parameterstore,A1
0002AE96 <AmiBlitz3.ab3@12789>   MOVEQ #0,d0
0002AE98 <AmiBlitz3.ab3@12790>   MOVEQ #0,d1
0002AE9A <AmiBlitz3.ab3@12793>   MOVE.b (A1)+,d1
0002AE9E <AmiBlitz3.ab3@12794>    BEQ 'l12
0002AEA4 <AmiBlitz3.ab3@12795>    !hashalgo
0002AEA6 <AmiBlitz3.ab3@12796>    MOVE.b d1,(A0)+
0002AEAA <AmiBlitz3.ab3@12797>  BRA 'l11
0002AEAC <AmiBlitz3.ab3@12800>   CLR.b (a0)+
0002AEB2 <AmiBlitz3.ab3@12801>   LEA variablehash,a0
0002AEB8 <AmiBlitz3.ab3@12802>    AND.l #hashsize,d0
0002AEBA <AmiBlitz3.ab3@12803>    ASL.l #2,d0
0002AEBE <AmiBlitz3.ab3@12804>    MOVE.l 0(a0,d0),d1
0002AEC2 <AmiBlitz3.ab3@12805>    MOVE.l d1,$e(a2)
0002AEC6 <AmiBlitz3.ab3@12806>    MOVE.l a2,0(a0,d0)
0002AEC8 <AmiBlitz3.ab3@12807>    MOVEQ #0,d0
0002AECC <AmiBlitz3.ab3@12808> BRA.w reget
0002AED2 <AmiBlitz3.ab3@12812>   TST.w dirmode
0002AED6 <AmiBlitz3.ab3@12813>    BNE.w illdirerr
0002AED8 <AmiBlitz3.ab3@12820>   MOVEQ.l #$00,D0
0002AEDA <AmiBlitz3.ab3@12821>   MOVE.w D7,D0
0002AEDC <AmiBlitz3.ab3@12822>   ADD.w D2,D0
0002AEDE <AmiBlitz3.ab3@12823>   ADDQ.w #1,D0
0002AEE0 <AmiBlitz3.ab3@12824>   MOVE.w D0,D2
0002AEE2 <AmiBlitz3.ab3@12825>   MOVEQ.l #$01,D1
0002AEE8 <AmiBlitz3.ab3@12826>   MOVEA.l _execbase,A6
0002AEEE <AmiBlitz3.ab3@12828>   MOVE.l mempool2,a0
0002AEF2 <AmiBlitz3.ab3@12829>   JSR _AllocPooled(a6)
0002AEF4 <AmiBlitz3.ab3@12833>   MOVEA.l D0,A0
0002AEF6 <AmiBlitz3.ab3@12834>   MOVE.l A0,(A2)
0002AEF8 <AmiBlitz3.ab3@12835>   CLR.l (a0)              ;clear next
0002AEFC <AmiBlitz3.ab3@12837>   CLR.l 8(a0)
0002AEFE <AmiBlitz3.ab3@12838>   MOVEA.l A0,A2
0002AF02 <AmiBlitz3.ab3@12840>   LEA -$1(A0,D7.W),A0
0002AF04 <AmiBlitz3.ab3@12841>   MOVE.b D2,(A0)+          ;put in struct length
0002AF0A <AmiBlitz3.ab3@12842>   LEA ptr_parameterstore,A1
0002AF0C <AmiBlitz3.ab3@12844>   MOVEQ #0,d0
0002AF0E <AmiBlitz3.ab3@12845>   MOVEQ #0,d1
0002AF10 <AmiBlitz3.ab3@12849> 
0002AF12 <AmiBlitz3.ab3@12850>   MOVE.b d1,(A0)+       ; "
0002AF16 <AmiBlitz3.ab3@12851>   BNE.w 'loop2
0002AF1A <AmiBlitz3.ab3@12852> BRA.w reget
0002AF1C <AmiBlitz3.ab3@12856>   MOVEQ.l #$13,D7
0002AF22 <AmiBlitz3.ab3@12857>   LEA constantbase,A2
0002AF26 <AmiBlitz3.ab3@12858> BRA.w findlab
0002AF28 <AmiBlitz3.ab3@12862>   MOVEQ.l #$05+8,D7        ; was #5                                ;#5,d7 org source
0002AF2E <AmiBlitz3.ab3@12863>   LEA xinclude_base,A2
0002AF32 <AmiBlitz3.ab3@12864> BRA.w findlab
0002AF34 <AmiBlitz3.ab3@12868>   MOVEQ.l #$09,D7
0002AF3A <AmiBlitz3.ab3@12869>   LEA firstconst,A2
0002AF3E <AmiBlitz3.ab3@12870> BRA.w findlab
0002AF40 <AmiBlitz3.ab3@12874>   MOVEQ.l #$0d,D7                                          ;find macro
0002AF46 <AmiBlitz3.ab3@12875>   LEA macrobase,A2
0002AF4A <AmiBlitz3.ab3@12876> BRA.w findlab
0002AF50 <AmiBlitz3.ab3@12880>   LEA labelhash,A2
0002AF52 <AmiBlitz3.ab3@12881>   MOVEQ.l #$13,D7
0002AF54 <AmiBlitz3.ab3@12883>   EXT.l d2
0002AF5A <AmiBlitz3.ab3@12884>   LEA ptr_parameterstore,A0
0002AF5C <AmiBlitz3.ab3@12885>   MOVEQ #0,d0
0002AF5E <AmiBlitz3.ab3@12886>   MOVEQ #0,d1
0002AF60 <AmiBlitz3.ab3@12889>     MOVE.b (a0)+,d1
0002AF64 <AmiBlitz3.ab3@12890>     BEQ 'l15
0002AF6A <AmiBlitz3.ab3@12891>     !hashalgo
0002AF6E <AmiBlitz3.ab3@12892>  BRA 'l20
0002AF74 <AmiBlitz3.ab3@12895>   AND.l #hashsize,d0
0002AF76 <AmiBlitz3.ab3@12896>   ASL.l #2,d0
0002AF7A <AmiBlitz3.ab3@12897>   MOVE.l 0(a2,d0),d0
0002AF7E <AmiBlitz3.ab3@12898>  BRA 'l11
0002AF82 <AmiBlitz3.ab3@12901>   MOVE.l $c(A2),D0          ;  begin copy of findlabel
0002AF86 <AmiBlitz3.ab3@12904>   BEQ findlab_no
0002AF88 <AmiBlitz3.ab3@12905>   MOVEA.l D0,A2
0002AF8A <AmiBlitz3.ab3@12906>   MOVEQ.l #$00,D0
0002AF8E <AmiBlitz3.ab3@12907>   MOVE.b -$1(A2,D7.l),D0
0002AF94 <AmiBlitz3.ab3@12908>   LEA ptr_parameterstore,A0
0002AF96 <AmiBlitz3.ab3@12909>   SUB.l D7,D0
0002AF98 <AmiBlitz3.ab3@12910>   SUBQ.l #1,D0
0002AF9A <AmiBlitz3.ab3@12911>   CMP.l D0,D2
0002AF9E <AmiBlitz3.ab3@12912>    BNE.b 'loop
0002AFA2 <AmiBlitz3.ab3@12913>   LEA $0(A2,D7.W),A1
0002AFA4 <AmiBlitz3.ab3@12914>   SUBQ.l #1,D0
0002AFA6 <AmiBlitz3.ab3@12917>     MOVE.b (a1)+,d1
0002AFA8 <AmiBlitz3.ab3@12918>     CMP.b (a0)+,d1
0002AFAC <AmiBlitz3.ab3@12920>     BNE.b 'loop
0002AFB0 <AmiBlitz3.ab3@12921>   DBF D0,'loop2
0002AFB4 <AmiBlitz3.ab3@12923>   BSR.w reget
0002AFB6 <AmiBlitz3.ab3@12924>   CMP.w D0,D0
0002AFB8 <AmiBlitz3.ab3@12925> RTS                     ; end copy of findlab
0002AFBA <AmiBlitz3.ab3@12929>   MOVEQ.l #$0B,D7
0002AFBE <AmiBlitz3.ab3@12930> BRA.w findlab
0002AFC4 <AmiBlitz3.ab3@12934>   LEA firstproc,A2
0002AFCA <AmiBlitz3.ab3@12935>   MOVE.l #$21+#funcentry_extend,D7    ; was #33,
0002AFCE <AmiBlitz3.ab3@12936> BRA findlab
0002AFD4 <AmiBlitz3.ab3@12940>   LEA firstfor,A2
0002AFD6 <AmiBlitz3.ab3@12941>   MOVEQ.l #$11,D7
0002AFDA <AmiBlitz3.ab3@12942> BRA.w findlab
0002AFDC <AmiBlitz3.ab3@12946>   MOVEQ.l #$0F,D7
0002AFE0 <AmiBlitz3.ab3@12948> BRA.w findlab
0002AFE2 <AmiBlitz3.ab3@12952>   MOVEQ.l #$0F+4,D7
0002AFE8 <AmiBlitz3.ab3@12953>   TST.b newvariable
0002AFEC <AmiBlitz3.ab3@12954>    BNE.w findlab
0002AFF2 <AmiBlitz3.ab3@12955>   LEA variablehash,A2
0002AFF8 <AmiBlitz3.ab3@12956>   LEA ptr_parameterstore,A0
0002AFFA <AmiBlitz3.ab3@12957>   MOVEQ #0,d0
0002AFFC <AmiBlitz3.ab3@12958>   MOVEQ #0,d1
0002AFFE <AmiBlitz3.ab3@12961>     MOVE.b (a0)+,d1
0002B002 <AmiBlitz3.ab3@12962>     BEQ 'l15
0002B008 <AmiBlitz3.ab3@12963>     !hashalgo
0002B00C <AmiBlitz3.ab3@12964>  BRA 'l20
0002B012 <AmiBlitz3.ab3@12967>   AND.l #hashsize,d0
0002B014 <AmiBlitz3.ab3@12968>   ASL.l #2,d0
0002B018 <AmiBlitz3.ab3@12969>   MOVE.l 0(a2,d0),d0
0002B01C <AmiBlitz3.ab3@12970>  BRA 'l11
0002B020 <AmiBlitz3.ab3@12973>   MOVE.l $e(A2),D0                                         ;find label
0002B024 <AmiBlitz3.ab3@12976>   BEQ findlab_no
0002B026 <AmiBlitz3.ab3@12977>   MOVEA.l D0,A2
0002B028 <AmiBlitz3.ab3@12978>   MOVEQ.l #$00,D0
0002B02C <AmiBlitz3.ab3@12979>   MOVE.b -$1(A2,D7.W),D0
0002B032 <AmiBlitz3.ab3@12980>   LEA ptr_parameterstore,A0
0002B034 <AmiBlitz3.ab3@12981>   SUB.w D7,D0
0002B036 <AmiBlitz3.ab3@12982>   SUBQ.l #1,D0
0002B038 <AmiBlitz3.ab3@12983>   CMP.w D0,D2
0002B03C <AmiBlitz3.ab3@12984>    BNE.b 'l10
0002B040 <AmiBlitz3.ab3@12985>   LEA $0(A2,D7.W),A1
0002B042 <AmiBlitz3.ab3@12986>   SUBQ.l #1,D0
0002B044 <AmiBlitz3.ab3@12989>     MOVE.b (a1)+,d1
0002B046 <AmiBlitz3.ab3@12990>     CMP.b (a0)+,d1
0002B04A <AmiBlitz3.ab3@12992>     BNE.b 'l10
0002B04E <AmiBlitz3.ab3@12993>   DBF D0,'l201
0002B052 <AmiBlitz3.ab3@12995>   BSR.w reget
0002B054 <AmiBlitz3.ab3@12996>   CMP.w D0,D0
0002B056 <AmiBlitz3.ab3@12997> RTS
0002B058 <AmiBlitz3.ab3@13010>     MOVE.l (A2),D0                                         ;find label
0002B05C <AmiBlitz3.ab3@13011>      BEQ.b findlab_no
0002B05E <AmiBlitz3.ab3@13012>     MOVEA.l D0,A2
0002B060 <AmiBlitz3.ab3@13013>     MOVEQ.l #$00,D0
0002B064 <AmiBlitz3.ab3@13014>     MOVE.b -$1(A2,D7.W),D0
0002B066 <AmiBlitz3.ab3@13015>     SUB.l D7,D0
0002B068 <AmiBlitz3.ab3@13016>     SUBQ.l #1,D0
0002B06A <AmiBlitz3.ab3@13017>   CMP.w D0,D2
0002B06E <AmiBlitz3.ab3@13018>   BNE.b 'loop
0002B072 <AmiBlitz3.ab3@13020>   LEA $0(A2,D7.W),A1
0002B078 <AmiBlitz3.ab3@13021>   LEA ptr_parameterstore,A0
0002B07A <AmiBlitz3.ab3@13022>   SUBQ.l #1,D0
0002B07C <AmiBlitz3.ab3@13026>     MOVE.b (a1)+,d1
0002B07E <AmiBlitz3.ab3@13027>     CMP.b (a0)+,d1
0002B082 <AmiBlitz3.ab3@13030>     BNE.b 'loop
0002B086 <AmiBlitz3.ab3@13031>   DBF D0,'loop2
0002B08A <AmiBlitz3.ab3@13033>   BSR.w reget
0002B08C <AmiBlitz3.ab3@13034>   CMP.w D0,D0
0002B08E <AmiBlitz3.ab3@13035>  RTS
0002B092 <AmiBlitz3.ab3@13038>   BSR.w reget
0002B094 <AmiBlitz3.ab3@13039>   MOVEQ.l #-$01,D1
0002B096 <AmiBlitz3.ab3@13040> RTS
0002B09C <AmiBlitz3.ab3@13044>   MOVEA.l alllocals,A4
0002B0A2 <AmiBlitz3.ab3@13045>   CLR.l alllocals
0002B0A6 <AmiBlitz3.ab3@13051>     CMPA.w #$0,A4
0002B0AA <AmiBlitz3.ab3@13052>      BEQ.b 'done
0002B0AE <AmiBlitz3.ab3@13053>     MOVEA.l $4(A4),A3
0002B0B2 <AmiBlitz3.ab3@13055>     MOVEA.l $8(A4),A3
0002B0B4 <AmiBlitz3.ab3@13057>     MOVEA.l A4,A1
0002B0B6 <AmiBlitz3.ab3@13058>     MOVEA.l (A4),A4
0002B0B8 <AmiBlitz3.ab3@13059>     MOVEQ.l #$0C,D0
0002B0BE <AmiBlitz3.ab3@13060>     MOVEA.l _execbase,A6
0002B0C4 <AmiBlitz3.ab3@13062>     MOVE.l mempool,a0
0002B0C8 <AmiBlitz3.ab3@13063>     JSR _FreePooled(A6)
0002B0CC <AmiBlitz3.ab3@13066>  BRA.b 'loop
0002B0D2 <AmiBlitz3.ab3@13070>   CLR.l firstglob                                          ;fix 2*aclearallvar called
0002B0D8 <AmiBlitz3.ab3@13071>   CLR.l firstlocal
0002B0DE <AmiBlitz3.ab3@13072>   CLR.l sharebase
0002B0E4 <AmiBlitz3.ab3@13073>   TST.l mempool2
0002B0E8 <AmiBlitz3.ab3@13074>   BEQ 'done_l10
0002B0EE <AmiBlitz3.ab3@13076>   MOVEA.l _execbase,A6
0002B0F4 <AmiBlitz3.ab3@13077>   MOVE.l mempool2,a0
0002B0FA <AmiBlitz3.ab3@13078>   CLR.l mempool2
0002B0FE <AmiBlitz3.ab3@13079>   JSR _DeletePool(a6)
0002B104 <AmiBlitz3.ab3@13082>   MOVE.l _execbase,a6
0002B10A <AmiBlitz3.ab3@13083>   MOVE.l #$10000,d0
0002B110 <AmiBlitz3.ab3@13084>   MOVE.l #80000,d1
0002B112 <AmiBlitz3.ab3@13085>   MOVE.l d1,d2
0002B116 <AmiBlitz3.ab3@13086>   JSR _CreatePool(a6)
0002B11C <AmiBlitz3.ab3@13087>   MOVE.l d0,mempool2
0002B11E <AmiBlitz3.ab3@13089> RTS
0002B122 <AmiBlitz3.ab3@13094>   CMPA.w #$0,A3
0002B126 <AmiBlitz3.ab3@13095>    BEQ.w 'done
0002B128 <AmiBlitz3.ab3@13096>   MOVEA.l A3,A1
0002B12A <AmiBlitz3.ab3@13097>   MOVEA.l (A3),A3
0002B12C <AmiBlitz3.ab3@13098>   MOVEQ.l #$00,D0
0002B130 <AmiBlitz3.ab3@13099>   MOVE.b $E(A1),D0
0002B136 <AmiBlitz3.ab3@13100>   MOVEA.l _execbase,A6
0002B13C <AmiBlitz3.ab3@13102>   MOVE.l mempool2,a0
0002B140 <AmiBlitz3.ab3@13103>   JSR _FreePooled(A6)
0002B144 <AmiBlitz3.ab3@13106>  BRA.w freevars
0002B148 <AmiBlitz3.ab3@13110>     CMPA.w #$0,A3
0002B14C <AmiBlitz3.ab3@13111>      BEQ.w 'done
0002B14E <AmiBlitz3.ab3@13112>     MOVEA.l A3,A1
0002B150 <AmiBlitz3.ab3@13113>     MOVEA.l (A3),A3
0002B152 <AmiBlitz3.ab3@13114>     MOVEQ.l #$00,D0
0002B156 <AmiBlitz3.ab3@13115>     MOVE.b $E+4(A1),D0
0002B15C <AmiBlitz3.ab3@13116>     MOVEA.l _execbase,A6
0002B162 <AmiBlitz3.ab3@13117>     MOVE.l mempool2,a0
0002B166 <AmiBlitz3.ab3@13118>     JSR _FreePooled(A6)
0002B16A <AmiBlitz3.ab3@13119>  BRA.w 'freevarsb
0002B16C <AmiBlitz3.ab3@13123> RTS
0002B172 <AmiBlitz3.ab3@13129>   MOVEA.l currentlabeladdr,A0
0002B178 <AmiBlitz3.ab3@13130>   MOVE.l a0,lastlabel
0002B17A <AmiBlitz3.ab3@13131>   MOVEA.l (A0),A2
0002B17C <AmiBlitz3.ab3@13132>   CLR.l (A0)
0002B182 <AmiBlitz3.ab3@13133>   MOVEA.l _execbase,A6
0002B186 <AmiBlitz3.ab3@13136>   CMPA.w #$0,A2
0002B18A <AmiBlitz3.ab3@13137>    BEQ.w 'done
0002B18E <AmiBlitz3.ab3@13138>   MOVE.l $4(A2),D0
0002B192 <AmiBlitz3.ab3@13139>   BTST #$0,D0
0002B196 <AmiBlitz3.ab3@13140>    BNE.w 'skip
0002B198 <AmiBlitz3.ab3@13141>   MOVEA.l D0,A3
0002B19C <AmiBlitz3.ab3@13144>     CMPA.w #$0,A3
0002B1A0 <AmiBlitz3.ab3@13145>      BEQ.w 'skip
0002B1A2 <AmiBlitz3.ab3@13146>     MOVEA.l A3,A1
0002B1A4 <AmiBlitz3.ab3@13147>     MOVEA.l (A3),A3
0002B1A6 <AmiBlitz3.ab3@13148>     MOVEQ.l #$0C+2,D0     ; was #12                                 ;cancel fix
0002B1AC <AmiBlitz3.ab3@13150>     MOVE.l mempool,a0
0002B1B0 <AmiBlitz3.ab3@13151>     JSR _FreePooled(A6)
0002B1B4 <AmiBlitz3.ab3@13154>  BRA.w 'loop2
0002B1B6 <AmiBlitz3.ab3@13157>   MOVEQ.l #$00,D0
0002B1BA <AmiBlitz3.ab3@13158>   MOVE.b $12(A2),D0
0002B1BC <AmiBlitz3.ab3@13159>   MOVEA.l A2,A1
0002B1BE <AmiBlitz3.ab3@13160>   MOVEA.l (A2),A2
0002B1C4 <AmiBlitz3.ab3@13162>   MOVE.l mempool2,a0
0002B1C8 <AmiBlitz3.ab3@13166>  BRA.w 'loop
0002B1CA <AmiBlitz3.ab3@13169> RTS
0002B1D0 <AmiBlitz3.ab3@13173>   MOVEA.l firstpend,A3
0002B1D6 <AmiBlitz3.ab3@13174>   CLR.l firstpend
0002B1DC <AmiBlitz3.ab3@13175>   MOVEA.l _execbase,A6
0002B1E0 <AmiBlitz3.ab3@13178>     CMPA.w #$0,A3
0002B1E4 <AmiBlitz3.ab3@13179>      BEQ.w 'done
0002B1E6 <AmiBlitz3.ab3@13180>     MOVEA.l A3,A1
0002B1E8 <AmiBlitz3.ab3@13181>     MOVEQ.l #$08,D0
0002B1EA <AmiBlitz3.ab3@13182>     MOVEA.l (A3),A3
0002B1F0 <AmiBlitz3.ab3@13184>     MOVE.l mempool,a0
0002B1F4 <AmiBlitz3.ab3@13185>     JSR _FreePooled(A6)
0002B1F8 <AmiBlitz3.ab3@13188>  BRA.w 'fpnd2
0002B1FA <AmiBlitz3.ab3@13191> RTS
0002B200 <AmiBlitz3.ab3@13197>   MOVEA.l firstproc,A2
0002B206 <AmiBlitz3.ab3@13198>   CLR.l firstproc
0002B20C <AmiBlitz3.ab3@13199>   MOVEA.l _execbase,A6
0002B210 <AmiBlitz3.ab3@13202>     CMPA.w #$0,A2
0002B214 <AmiBlitz3.ab3@13203>      BEQ.w 'done
0002B216 <AmiBlitz3.ab3@13204>     MOVEA.l A2,A1
0002B218 <AmiBlitz3.ab3@13205>     MOVEA.l (A2),A2
0002B21A <AmiBlitz3.ab3@13206>     MOVEQ.l #$00,D0
0002B21E <AmiBlitz3.ab3@13207>     MOVE.b $20+#funcentry_extend(A1),D0    ; was 32(a1),
0002B224 <AmiBlitz3.ab3@13209>     MOVE.l mempool2,a0
0002B228 <AmiBlitz3.ab3@13210>     JSR _FreePooled(A6)
0002B22C <AmiBlitz3.ab3@13213>  BRA.w 'loop
0002B22E <AmiBlitz3.ab3@13216> RTS
0002B232 <AmiBlitz3.ab3@13221>   CMPA.w #$0,A2
0002B236 <AmiBlitz3.ab3@13222>    BEQ.w 'done
0002B23A <AmiBlitz3.ab3@13223>   MOVEA.l $4(A2),A3
0002B23E <AmiBlitz3.ab3@13224>   CMPA.w #$FF,A3
0002B242 <AmiBlitz3.ab3@13225>    BEQ.w 'noway
0002B246 <AmiBlitz3.ab3@13229>    BSR.w freevars
0002B248 <AmiBlitz3.ab3@13232>     MOVEA.l A2,A1
0002B24A <AmiBlitz3.ab3@13233>     MOVEA.l (A2),A2
0002B24C <AmiBlitz3.ab3@13234>     MOVEQ.l #$00,D0
0002B250 <AmiBlitz3.ab3@13235>     MOVE.b $A(A1),D0
0002B256 <AmiBlitz3.ab3@13236>     MOVEA.l _execbase,A6
0002B25C <AmiBlitz3.ab3@13238>     MOVE.l mempool2,a0
0002B260 <AmiBlitz3.ab3@13239>     JSR _FreePooled(A6)
0002B264 <AmiBlitz3.ab3@13242>  BRA.w freetypes
0002B266 <AmiBlitz3.ab3@13245> RTS
0002B26C <AmiBlitz3.ab3@13254>   JSR usevars
0002B272 <AmiBlitz3.ab3@13256>   CLR.w notshared
0002B278 <AmiBlitz3.ab3@13257>   CLR.w varmode           ;local mode
0002B27E <AmiBlitz3.ab3@13258>   MOVE.w proceduremode,D1
0002B282 <AmiBlitz3.ab3@13259>    BNE.w fvarlocal
0002B288 <AmiBlitz3.ab3@13261>   LEA varbase,A2
0002B28E <AmiBlitz3.ab3@13263>   LEA ptr_parameterstore,a0
0002B292 <AmiBlitz3.ab3@13264>   CMP.b #$22,(a0)
0002B296 <AmiBlitz3.ab3@13265>   BNE fvarback
0002B298 <AmiBlitz3.ab3@13266>   MOVEQ #0,d0
0002B29E <AmiBlitz3.ab3@13267>  JMP error
0002B2A2 <AmiBlitz3.ab3@13272>   BSR.w findvariable
0002B2A6 <AmiBlitz3.ab3@13275>   BNE.w fvaradd
0002B2AC <AmiBlitz3.ab3@13280>   MOVE.b flagmask+1,D1
0002B2B0 <AmiBlitz3.ab3@13281>   MOVE.b $7(A2),D3
0002B2B2 <AmiBlitz3.ab3@13282>   EOR.b D3,D1
0002B2B6 <AmiBlitz3.ab3@13284>   BNE 'l2
0002B2BE <AmiBlitz3.ab3@13285>   CMP.b #2,nowdeclare
0002B2C2 <AmiBlitz3.ab3@13286>   BEQ errormsg_declaredtwice
0002B2C6 <AmiBlitz3.ab3@13287>  BRA.w fvarfound
0002B2CA <AmiBlitz3.ab3@13291>   BSR.w findlab
0002B2CE <AmiBlitz3.ab3@13293>   BNE 'l1
0002B2D6 <AmiBlitz3.ab3@13294>   CMP.b #2,nowdeclare
0002B2DA <AmiBlitz3.ab3@13295>   BEQ errormsg_declaredtwice
0002B2DC <AmiBlitz3.ab3@13296>   CMP.w d0,d0
0002B2E0 <AmiBlitz3.ab3@13300>  BRA.w 'more
0002B2E2 <AmiBlitz3.ab3@13304>    MOVE.l a2,-(a7)
0002B2E8 <AmiBlitz3.ab3@13305>    LEA sharebase,a2
0002B2EA <AmiBlitz3.ab3@13306>    MOVEQ #$f+4,d7
0002B2EE <AmiBlitz3.ab3@13307>    BSR.w findlab
0002B2F2 <AmiBlitz3.ab3@13308>    BEQ 'l2x
0002B2F4 <AmiBlitz3.ab3@13309>    MOVE.l (a7)+,a2
0002B2F8 <AmiBlitz3.ab3@13310>  BRA 'cont
0002B2FA <AmiBlitz3.ab3@13313>   ADDQ.l #4,a7
0002B300 <AmiBlitz3.ab3@13314>   CLR.w varmode
0002B306 <AmiBlitz3.ab3@13315>   MOVE.b flagmask+1,D1
0002B30A <AmiBlitz3.ab3@13316>   MOVE.b $7(A2),D3
0002B30C <AmiBlitz3.ab3@13317>   EOR.b D3,D1
0002B310 <AmiBlitz3.ab3@13318>   BNE vardeclareerr
0002B314 <AmiBlitz3.ab3@13319>  BRA fvarfound
0002B31A <AmiBlitz3.ab3@13323>    MOVE.w nonew,D1
0002B31E <AmiBlitz3.ab3@13324>    BNE.w nonewerr
0002B324 <AmiBlitz3.ab3@13326>    TST.b nowdeclare
0002B328 <AmiBlitz3.ab3@13327>    BNE 'l2b
0002B32E <AmiBlitz3.ab3@13328>    TST.b declare2
0002B332 <AmiBlitz3.ab3@13329>    BEQ 'l1b
0002B336 <AmiBlitz3.ab3@13330>    CMP.b #$2e,d0
0002B33A <AmiBlitz3.ab3@13331>    BEQ 'l2b
0002B33E <AmiBlitz3.ab3@13332>    CMP.b #"$",d0
0002B342 <AmiBlitz3.ab3@13333>    BEQ 'l2b
0002B346 <AmiBlitz3.ab3@13334>  BRA vardeclareerr
0002B34C <AmiBlitz3.ab3@13337>   TST.b declare
0002B350 <AmiBlitz3.ab3@13338>    BNE vardeclareerr
0002B354 <AmiBlitz3.ab3@13342>   BSR.w addvariable      ;create var
0002B35A <AmiBlitz3.ab3@13343>   NOT.w notshared        ;set added flag
0002B35C <AmiBlitz3.ab3@13344>   MOVEA.l A2,A3
0002B362 <AmiBlitz3.ab3@13345>   MOVEA.l defaulttype,A2
0002B366 <AmiBlitz3.ab3@13346>   CMP.w #$2E,D0         ;'.'
0002B36A <AmiBlitz3.ab3@13347>    BEQ.w 'clapton
0002B36E <AmiBlitz3.ab3@13348>   CMP.w #$24,D0         ;'$'
0002B372 <AmiBlitz3.ab3@13349>    BNE.w 'usedef
0002B378 <AmiBlitz3.ab3@13350>   LEA newtype_string,A2
0002B37C <AmiBlitz3.ab3@13351>    BSR.w get1bytemain
0002B380 <AmiBlitz3.ab3@13352>  BRA.w 'usedef
0002B384 <AmiBlitz3.ab3@13355>   BSR.w getparameter2
0002B38A <AmiBlitz3.ab3@13356>   LEA newtypebase,A2
0002B38E <AmiBlitz3.ab3@13357>    BSR.w findtype
0002B392 <AmiBlitz3.ab3@13358>    BNE.w notypeerr
0002B398 <AmiBlitz3.ab3@13361>   CMPA.l #newtype_byte,A2
0002B39C <AmiBlitz3.ab3@13362>    BEQ.w 'byte
0002B3A2 <AmiBlitz3.ab3@13363>   MOVE.w varmode,D1
0002B3A6 <AmiBlitz3.ab3@13364>    BNE.w 'pit
0002B3AC <AmiBlitz3.ab3@13365>   ADDQ.w #1,globalvarpointer
0002B3B4 <AmiBlitz3.ab3@13368>   BCLR #$0,globalvarpointer+1
0002B3B8 <AmiBlitz3.ab3@13371>   MOVE.l A2,$A(A3)           ;set type
0002B3C0 <AmiBlitz3.ab3@13372>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002B3C2 <AmiBlitz3.ab3@13373>   MOVEQ.l #$04,D1
0002B3CA <AmiBlitz3.ab3@13374>   BTST #$0,flagmask+1
0002B3CE <AmiBlitz3.ab3@13375>    BNE.w 'skip3
0002B3D6 <AmiBlitz3.ab3@13376>   BTST #$1,flagmask+1
0002B3DA <AmiBlitz3.ab3@13377>    BNE.w 'skip3
0002B3E2 <AmiBlitz3.ab3@13378>   CMPI.l #$100,$4(A2)
0002B3E6 <AmiBlitz3.ab3@13379>    BCC.w 'skip3
0002B3EA <AmiBlitz3.ab3@13380>   MOVE.w $8(A2),D1
0002B3F0 <AmiBlitz3.ab3@13383>   TST.w varmode
0002B3F4 <AmiBlitz3.ab3@13384>    BEQ.w fvaradd_pit2
0002B3F6 <AmiBlitz3.ab3@13385>   NEG.w D1
0002B3FC <AmiBlitz3.ab3@13386>   ADD.w D1,globalvarpointer
0002B404 <AmiBlitz3.ab3@13387>   MOVE.w globalvarpointer,$4(A3)
0002B406 <AmiBlitz3.ab3@13388>  RTS
0002B40E <AmiBlitz3.ab3@13391>   MOVE.w globalvarpointer,$4(A3)
0002B414 <AmiBlitz3.ab3@13392>   ADD.w D1,globalvarpointer
0002B416 <AmiBlitz3.ab3@13393> RTS
0002B41A <AmiBlitz3.ab3@13398>    BSR.w getparameter2
0002B420 <AmiBlitz3.ab3@13399>   LEA newtypebase,A2
0002B424 <AmiBlitz3.ab3@13400>    BSR.w findtype
0002B428 <AmiBlitz3.ab3@13401>    BNE.w notypeerr
0002B42E <AmiBlitz3.ab3@13404>   CMPA.l #newtype_byte,A2
0002B432 <AmiBlitz3.ab3@13405>    BEQ.w 'byte
0002B438 <AmiBlitz3.ab3@13406>   MOVE.w varmode,D1
0002B43C <AmiBlitz3.ab3@13407>    BNE.w 'pit
0002B442 <AmiBlitz3.ab3@13408>   ADDQ.w #1,globalvarpointer
0002B44A <AmiBlitz3.ab3@13411>   BCLR #$0,globalvarpointer+1
0002B44E <AmiBlitz3.ab3@13414>   MOVE.l A2,$A(A3)              ;set type
0002B456 <AmiBlitz3.ab3@13415>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002B458 <AmiBlitz3.ab3@13417>   MOVEQ.l #$04,D1
0002B460 <AmiBlitz3.ab3@13418>   BTST #$0,flagmask+1
0002B464 <AmiBlitz3.ab3@13419>    BNE.w 'skip3
0002B46C <AmiBlitz3.ab3@13420>   BTST #$1,flagmask+1
0002B470 <AmiBlitz3.ab3@13421>    BNE.w 'skip3
0002B478 <AmiBlitz3.ab3@13422>   CMPI.l #$100,$4(A2)
0002B47C <AmiBlitz3.ab3@13423>    BCC.w 'skip3
0002B480 <AmiBlitz3.ab3@13424>   MOVE.w $8(A2),D1
0002B486 <AmiBlitz3.ab3@13427>   TST.w varmode
0002B48A <AmiBlitz3.ab3@13428> BRA.w fvaradd_pit2
0002B490 <AmiBlitz3.ab3@13438>   LEA firstglob,A2
0002B494 <AmiBlitz3.ab3@13439>    BSR.w findvariable2
0002B498 <AmiBlitz3.ab3@13442>   BNE.w 'hendrix
0002B49E <AmiBlitz3.ab3@13443>   MOVE.b flagmask+1,D1
0002B4A2 <AmiBlitz3.ab3@13444>   MOVE.b $7(A2),D3
0002B4A4 <AmiBlitz3.ab3@13445>   EOR.b D3,D1
0002B4A8 <AmiBlitz3.ab3@13446>    BEQ.w fvarfound
0002B4AC <AmiBlitz3.ab3@13447>    BSR.w findlab
0002B4B0 <AmiBlitz3.ab3@13448>  BRA.w 'more
0002B4B8 <AmiBlitz3.ab3@13451>   MOVE.w #$FFFF,varmode           ; was -1
0002B4BE <AmiBlitz3.ab3@13452>   MOVE.w globalvarpointer,-(A7)
0002B4C8 <AmiBlitz3.ab3@13453>   MOVE.w locvaroff,globalvarpointer
0002B4CE <AmiBlitz3.ab3@13454>   LEA firstlocal,A2
0002B4D6 <AmiBlitz3.ab3@13456>   MOVE.b #1,newvariable
0002B4DA <AmiBlitz3.ab3@13458>    BSR.w fvarback
0002B4E0 <AmiBlitz3.ab3@13460>   CLR.b newvariable
0002B4EA <AmiBlitz3.ab3@13462>   MOVE.w globalvarpointer,locvaroff
0002B4F0 <AmiBlitz3.ab3@13463>   MOVE.w (A7)+,globalvarpointer
0002B4F2 <AmiBlitz3.ab3@13464> RTS
0002B4F4 <AmiBlitz3.ab3@13468>   MOVEA.l A2,A3
0002B4F8 <AmiBlitz3.ab3@13472>   CMP.w #$2E,D0         ;'.'
0002B4FC <AmiBlitz3.ab3@13473>    BEQ.w 'skipsh
0002B500 <AmiBlitz3.ab3@13474>   CMP.w #$24,D0         ;'$'
0002B504 <AmiBlitz3.ab3@13475>    BNE.w 'skip4
0002B50C <AmiBlitz3.ab3@13476>   CMPI.l #newtype_string,$A(A3)
0002B510 <AmiBlitz3.ab3@13477>    BNE.w rongtypeerr
0002B514 <AmiBlitz3.ab3@13478>    BSR.w get1bytemain
0002B518 <AmiBlitz3.ab3@13479>  BRA.w 'skip4
0002B51C <AmiBlitz3.ab3@13482>    BSR.w getparameter2
0002B522 <AmiBlitz3.ab3@13483>   LEA newtypebase,A2
0002B526 <AmiBlitz3.ab3@13484>    BSR.w findtype
0002B52A <AmiBlitz3.ab3@13485>    BNE.w notypeerr
0002B52E <AmiBlitz3.ab3@13486>   CMPA.l $A(A3),A2
0002B532 <AmiBlitz3.ab3@13487>    BNE.w rongtypeerr
0002B53A <AmiBlitz3.ab3@13490>   BTST #$0,flagmask+1
0002B53E <AmiBlitz3.ab3@13491>    BEQ.w 'skipz
0002B544 <AmiBlitz3.ab3@13493>   BTST #$0,$7(A3)
0002B548 <AmiBlitz3.ab3@13494>    BEQ.w pointerr
0002B54C <AmiBlitz3.ab3@13497>   MOVEA.l $A(A3),A2
0002B54E <AmiBlitz3.ab3@13498> RTS
0002B550 <AmiBlitz3.ab3@13502>    TST.l D3                                                ;newtype >32kb  .w to .l
0002B554 <AmiBlitz3.ab3@13503>    BEQ.w 'done2a
0002B55E <AmiBlitz3.ab3@13505>    MOVE.l destpointer,loada
0002B562 <AmiBlitz3.ab3@13508>  BRA 'done3a
0002B566 <AmiBlitz3.ab3@13511>   CMP.w #$9,D3                                             ;_addq_arrays
0002B56A <AmiBlitz3.ab3@13512>    BCC.w 'done3a
0002B570 <AmiBlitz3.ab3@13514>   MOVE.w d3,arrayoffset
0002B574 <AmiBlitz3.ab3@13516>   ANDI.w #$7,D3
0002B576 <AmiBlitz3.ab3@13517>   LSL.w #8,D3
0002B578 <AmiBlitz3.ab3@13518>   LSL.w #1,D3
0002B580 <AmiBlitz3.ab3@13519>   ANDI.w #$F1FF,addqa0
0002B586 <AmiBlitz3.ab3@13520>   OR.w D3,addqa0
0002B58C <AmiBlitz3.ab3@13521>   MOVE.w addqa0,D1
0002B590 <AmiBlitz3.ab3@13522>  BRA.w writeword
0002B596 <AmiBlitz3.ab3@13526>   CMP.l #$7fff,d3                                          ;>32kb newtypes
0002B59A <AmiBlitz3.ab3@13527>   BGT longoffset
0002B5A0 <AmiBlitz3.ab3@13529>   MOVE.w D3,leaa0a0+2
0002B5A6 <AmiBlitz3.ab3@13531>   MOVE.w d3,arrayoffset
0002B5AC <AmiBlitz3.ab3@13533>   MOVE.l leaa0a0,D1
0002B5B0 <AmiBlitz3.ab3@13534>   BSR.w writelong
0002B5B2 <AmiBlitz3.ab3@13537> RTS
0002B5B6 <AmiBlitz3.ab3@13541>    MOVE.w #$d5fc,d1
0002B5BA <AmiBlitz3.ab3@13542>    BSR writeword
0002B5BC <AmiBlitz3.ab3@13543>    MOVE.l d3,d1
0002B5C0 <AmiBlitz3.ab3@13544>    BSR.w writelong
0002B5C2 <AmiBlitz3.ab3@13545> RTS
0002B5C6 <AmiBlitz3.ab3@13549>   Dc.w $b0ad,0000                                          ;cmp.l $0(A5),D0    ;nooptimize
0002B5CA <AmiBlitz3.ab3@13552>    BCS.w arrchk3                                           
0002B5D0 <AmiBlitz3.ab3@13553>    JSR $20000                                              ;jsr 0
0002B5D6 <AmiBlitz3.ab3@13564>   TST.b fast
0002B5DA <AmiBlitz3.ab3@13565>   BEQ 'l1
0002B5DC <AmiBlitz3.ab3@13566>    MOVEQ #0,d1                                             ;faster arrays
0002B5E2 <AmiBlitz3.ab3@13567>    MOVE.w regnum,d2
0002B5E4 <AmiBlitz3.ab3@13568>    MOVE.w d2,d1
0002B5E6 <AmiBlitz3.ab3@13569>    LSL.w #8,d1
0002B5E8 <AmiBlitz3.ab3@13570>    LSL.w #4,d1
0002B5EA <AmiBlitz3.ab3@13571>    ADD.w d2,d1
0002B5F0 <AmiBlitz3.ab3@13572>    OR.l #$4c2d0000,d1
0002B5F6 <AmiBlitz3.ab3@13573>    TST.w varmode
0002B5FA <AmiBlitz3.ab3@13574>    BEQ 'l1a
0002B5FE <AmiBlitz3.ab3@13575>    BCLR #16,d1
0002B602 <AmiBlitz3.ab3@13578>    BSR writelong
0002B606 <AmiBlitz3.ab3@13579>    MOVE.w $4(A7),D1
0002B60A <AmiBlitz3.ab3@13580>    BSR.w writeword
0002B610 <AmiBlitz3.ab3@13581>    MOVE.w regnum,D1
0002B612 <AmiBlitz3.ab3@13582>   SUBQ.w #1,D1
0002B614 <AmiBlitz3.ab3@13583>   LSL.w #8,D1
0002B616 <AmiBlitz3.ab3@13584>   LSL.w #1,D1
0002B61A <AmiBlitz3.ab3@13585>   ORI.w #$D080,D1
0002B620 <AmiBlitz3.ab3@13586>   OR.w regnum,D1
0002B624 <AmiBlitz3.ab3@13587>    BSR.w writeword
0002B626 <AmiBlitz3.ab3@13588>  RTS
0002B62C <AmiBlitz3.ab3@13592>   MOVE.w regnum,D2
0002B630 <AmiBlitz3.ab3@13594>   MOVE.w arrmul1(PC),D1
0002B632 <AmiBlitz3.ab3@13595>   OR.w D2,D1
0002B634 <AmiBlitz3.ab3@13596>   SUBQ.w #1,D1
0002B638 <AmiBlitz3.ab3@13597>    BSR.w writeword
0002B63C <AmiBlitz3.ab3@13598>   MOVE.w arrmul2(PC),D1
0002B63E <AmiBlitz3.ab3@13599>   OR.w D2,D1
0002B640 <AmiBlitz3.ab3@13600>   MOVE.w D2,D3
0002B642 <AmiBlitz3.ab3@13601>   SUBQ.w #1,D3
0002B644 <AmiBlitz3.ab3@13602>   LSL.w #8,D3
0002B646 <AmiBlitz3.ab3@13603>   LSL.w #1,D3
0002B648 <AmiBlitz3.ab3@13604>   OR.w D3,D1
0002B64C <AmiBlitz3.ab3@13605>    BSR.w writeword
0002B650 <AmiBlitz3.ab3@13606>   MOVE.w arrmul3(PC),D1
0002B652 <AmiBlitz3.ab3@13607>   MOVE.w D2,D3
0002B654 <AmiBlitz3.ab3@13608>   LSL.w #8,D3
0002B656 <AmiBlitz3.ab3@13609>   LSL.w #1,D3
0002B658 <AmiBlitz3.ab3@13610>   OR.w D3,D1
0002B65C <AmiBlitz3.ab3@13611>    BSR.w pokewda5s
0002B660 <AmiBlitz3.ab3@13612>   MOVE.w $4(A7),D1         ; was 4+0
0002B662 <AmiBlitz3.ab3@13613>   ADDQ.w #2,D1
0002B666 <AmiBlitz3.ab3@13614>    BSR.w writeword
0002B66A <AmiBlitz3.ab3@13616>   MOVE.w arrmul4(PC),D1
0002B66C <AmiBlitz3.ab3@13617>   MOVE.w D2,D3
0002B66E <AmiBlitz3.ab3@13618>   SUBQ.w #1,D3
0002B670 <AmiBlitz3.ab3@13619>   LSL.w #8,D3
0002B672 <AmiBlitz3.ab3@13620>   LSL.w #1,D3
0002B674 <AmiBlitz3.ab3@13621>   OR.w D3,D1
0002B678 <AmiBlitz3.ab3@13622>    BSR.w pokewda5s
0002B67C <AmiBlitz3.ab3@13623>   MOVE.w $4(A7),D1       ; was 4+0
0002B680 <AmiBlitz3.ab3@13624>    BSR.w writeword
0002B684 <AmiBlitz3.ab3@13626>   MOVE.w arrmul5(PC),D1
0002B686 <AmiBlitz3.ab3@13627>   OR.w D2,D1
0002B688 <AmiBlitz3.ab3@13628>   SUBQ.w #1,D1
0002B68C <AmiBlitz3.ab3@13629>    BSR.w writeword
0002B690 <AmiBlitz3.ab3@13630>   MOVE.w arrmul6(PC),D1
0002B692 <AmiBlitz3.ab3@13631>   OR.w D2,D1
0002B694 <AmiBlitz3.ab3@13632>   SUBQ.w #1,D1
0002B698 <AmiBlitz3.ab3@13633>    BSR.w writeword
0002B69C <AmiBlitz3.ab3@13634>   MOVE.w arrmul7(PC),D1
0002B69E <AmiBlitz3.ab3@13635>   OR.w D2,D1
0002B6A0 <AmiBlitz3.ab3@13636>   SUBQ.w #1,D1
0002B6A2 <AmiBlitz3.ab3@13637>   MOVE.w D2,D3
0002B6A4 <AmiBlitz3.ab3@13638>   LSL.w #8,D3
0002B6A6 <AmiBlitz3.ab3@13639>   LSL.w #1,D3
0002B6A8 <AmiBlitz3.ab3@13640>   OR.w D3,D1
0002B6AC <AmiBlitz3.ab3@13641>    BSR.w writeword
0002B6B0 <AmiBlitz3.ab3@13642>   MOVE.w arrmul8(PC),D1
0002B6B2 <AmiBlitz3.ab3@13643>   MOVE.w D2,D3
0002B6B4 <AmiBlitz3.ab3@13644>   SUBQ.w #1,D3
0002B6B6 <AmiBlitz3.ab3@13645>   LSL.w #8,D3
0002B6B8 <AmiBlitz3.ab3@13646>   LSL.w #1,D3
0002B6BA <AmiBlitz3.ab3@13647>   OR.w D3,D1
0002B6BE <AmiBlitz3.ab3@13648>    BSR.w writeword
0002B6C4 <AmiBlitz3.ab3@13650>   MOVE.w regnum,D1
0002B6C6 <AmiBlitz3.ab3@13651>   SUBQ.w #1,D1
0002B6C8 <AmiBlitz3.ab3@13652>   LSL.w #8,D1
0002B6CA <AmiBlitz3.ab3@13653>   LSL.w #1,D1
0002B6CE <AmiBlitz3.ab3@13654>   ORI.w #$D080,D1
0002B6D4 <AmiBlitz3.ab3@13655>   OR.w regnum,D1
0002B6D8 <AmiBlitz3.ab3@13656> BRA.w writeword
0002B6DA <AmiBlitz3.ab3@13664> arrmul1:   MOVE.l d0,-(a7)                                ;write array access
0002B6DC <AmiBlitz3.ab3@13665> arrmul2:   MOVE  d0,d0
0002B6E0 <AmiBlitz3.ab3@13666> arrmul3:   MULU 0(a5),d0                                  ;mulu   x+2(a5),d1  ;lo*lo
0002B6E4 <AmiBlitz3.ab3@13667> arrmul4:   MULU 0(a5),d0                                  ;mulu   x(a5),d0    ;hi*lo
0002B6E6 <AmiBlitz3.ab3@13669> arrmul5:   SWAP d0
0002B6E8 <AmiBlitz3.ab3@13670> arrmul6:   CLR d0
0002B6EA <AmiBlitz3.ab3@13671> arrmul7:   ADD.l d0,d0
0002B6EC <AmiBlitz3.ab3@13672> arrmul8:   MOVE.l (a7)+,d0
0002B6F0 <AmiBlitz3.ab3@13677> listcode1:  Dc.b $24,$6D :              Dc.b $00,$00       ;MOVEA.L $0000(A5),A2      ;pointer to start of array data
0002B6F4 <AmiBlitz3.ab3@13678> listcode2:  Dc.b $24,$6A,$FF,$E0                           ;MOVEA.L -$0020(A2),A2     ;pointer to current
0002B6F6 <AmiBlitz3.ab3@13679> listarfix:  Dc.b $50,$4A                                   ;ADDQ.W  #8,A2
0002B6FC <AmiBlitz3.ab3@13697>   CLR.l lastoffset_org
0002B702 <AmiBlitz3.ab3@13698>   BTST #$1,$7(A3)
0002B706 <AmiBlitz3.ab3@13699>    BEQ.w 'notarr
0002B70C <AmiBlitz3.ab3@13700>   MOVE.w notshared,D1
0002B710 <AmiBlitz3.ab3@13701>    BNE.w noarrerr
0002B714 <AmiBlitz3.ab3@13702>    BSR.w get1bytemain
0002B718 <AmiBlitz3.ab3@13703>   CMP.w #$29,D0
0002B71C <AmiBlitz3.ab3@13704>    BNE.w 'notalist
0002B722 <AmiBlitz3.ab3@13705>   BTST #$0,$6(A3)
0002B726 <AmiBlitz3.ab3@13706>    BEQ.w nolisterr
0002B72E <AmiBlitz3.ab3@13707>   MOVE.w $4(A3),listcode1+2
0002B732 <AmiBlitz3.ab3@13708>   MOVE.l listcode1(PC),D1
0002B736 <AmiBlitz3.ab3@13709>    BSR.w pokela5s
0002B73A <AmiBlitz3.ab3@13710>   MOVE.l listcode2(PC),D1
0002B73E <AmiBlitz3.ab3@13711>    BSR.w writelong
0002B744 <AmiBlitz3.ab3@13712>   TST.b debugmode
0002B748 <AmiBlitz3.ab3@13713>    BEQ.w 'nolrerr
0002B74A <AmiBlitz3.ab3@13717>   MOVE.l A2,-(A7)
0002B74E <AmiBlitz3.ab3@13718>   MOVE.w #$C315,D1
0002B752 <AmiBlitz3.ab3@13719>    BSR.w Atokejsr
0002B754 <AmiBlitz3.ab3@13720>   MOVEA.l (A7)+,A2
0002B758 <AmiBlitz3.ab3@13723>    MOVE.w listarfix(PC),D1                                 ;addq #8,a2
0002B75C <AmiBlitz3.ab3@13725>    BSR.w writeword
0002B760 <AmiBlitz3.ab3@13726>  BRA.w 'normalar
0002B762 <AmiBlitz3.ab3@13729>  'listoff:   Ds.w 1
0002B768 <AmiBlitz3.ab3@13732>   CLR.w 'listoff
0002B76E <AmiBlitz3.ab3@13733>   BTST #$0,$6(A3)
0002B772 <AmiBlitz3.ab3@13734>    BEQ.w 'knop
0002B77A <AmiBlitz3.ab3@13735>   MOVE.w #$0008,'listoff                            ;adjust size of one element if list.
0002B77E <AmiBlitz3.ab3@13738>   MOVEM.l A2-A3,-(A7)
0002B784 <AmiBlitz3.ab3@13739>   MOVE.w varmode,-(A7)
0002B788 <AmiBlitz3.ab3@13740>   MOVE.w $8(A3),-(A7)                                       ;number of dims
0002B78C <AmiBlitz3.ab3@13741>   MOVE.w $4(A3),-(A7)                                       ;varoff
0002B78E <AmiBlitz3.ab3@13742>   MOVE.l A2,-(A7)
0002B794 <AmiBlitz3.ab3@13743>   MOVE.w flagmask,-(A7)
0002B79E <AmiBlitz3.ab3@13745>   MOVE.w oldqflag,instringon
0002B7A4 <AmiBlitz3.ab3@13746>   MOVEA.l lastsourcepos,A5
0002B7A8 <AmiBlitz3.ab3@13747>    BSR.w arreval
0002B7AE <AmiBlitz3.ab3@13748>   MOVE.w (A7)+,flagmask
0002B7B6 <AmiBlitz3.ab3@13749>   MOVE.w $8(A7),varmode
0002B7BC <AmiBlitz3.ab3@13750>   TST.b debugmode
0002B7C0 <AmiBlitz3.ab3@13751>    BEQ.w 'noszchk
0002B7C2 <AmiBlitz3.ab3@13755>   MOVEA.l (A7)+,A2
0002B7C4 <AmiBlitz3.ab3@13756>   MOVEQ.l #$04,D1
0002B7CC <AmiBlitz3.ab3@13757>   BTST #$0,flagmask+1                                      ;pointer?
0002B7D0 <AmiBlitz3.ab3@13758>    BNE.b 'domul                                          ;yes, then use 4 byte mul...
0002B7D4 <AmiBlitz3.ab3@13759>   MOVE.w $8(A2),D1
0002B7D8 <AmiBlitz3.ab3@13762>   ADD.w 'listoff(PC),D1
0002B7DC <AmiBlitz3.ab3@13763>   BSR.w muld1
0002B7E2 <AmiBlitz3.ab3@13764>   ADDQ.w #1,regnum
0002B7E4 <AmiBlitz3.ab3@13767>   ADDQ.w #4,(A7)
0002B7E8 <AmiBlitz3.ab3@13768>   TST.w $4(A7)
0002B7EC <AmiBlitz3.ab3@13769>    BEQ.w 'isglob
0002B7EE <AmiBlitz3.ab3@13770>   SUBQ.w #8,(A7)                                           ;range check local array
0002B7F4 <AmiBlitz3.ab3@13773>   TST.b debugmode
0002B7F8 <AmiBlitz3.ab3@13774>    BEQ.w 'noer1
0002B7FE <AmiBlitz3.ab3@13775>   MOVE.w regnum,D1
0002B800 <AmiBlitz3.ab3@13776>   SUBQ.w #1,D1
0002B802 <AmiBlitz3.ab3@13777>   LSL.w #8,D1
0002B804 <AmiBlitz3.ab3@13778>   LSL.w #1,D1
0002B808 <AmiBlitz3.ab3@13779>   OR.w zarrchk(PC),D1
0002B80C <AmiBlitz3.ab3@13780>    BSR.w pokewda5s                                         ;cmp.l x(a5),D regat
0002B80E <AmiBlitz3.ab3@13781>   MOVE.w (A7),D1
0002B812 <AmiBlitz3.ab3@13782>    BSR.w writeword
0002B816 <AmiBlitz3.ab3@13783>   MOVE.l arrchk2(PC),D1
0002B81A <AmiBlitz3.ab3@13784>    BSR.w writelong
0002B81E <AmiBlitz3.ab3@13785>   MOVE.w #$C309,D1
0002B822 <AmiBlitz3.ab3@13786>    BSR.w Atokejsr
0002B826 <AmiBlitz3.ab3@13789>   SUBQ.w #1,$2(A7)
0002B82A <AmiBlitz3.ab3@13790>    BEQ.w 'ardone
0002B82E <AmiBlitz3.ab3@13791>   CMP.w #$2C,D0
0002B832 <AmiBlitz3.ab3@13792>    BNE.w syntaxerr
0002B838 <AmiBlitz3.ab3@13793>    TST.b fast
0002B83C <AmiBlitz3.ab3@13794>    BNE 'l1
0002B840 <AmiBlitz3.ab3@13795>    BSR.w arrevalchk
0002B844 <AmiBlitz3.ab3@13796>  BRA 'l2
0002B848 <AmiBlitz3.ab3@13799>   BSR arreval
0002B850 <AmiBlitz3.ab3@13802>   MOVE.w $4(A7),varmode
0002B854 <AmiBlitz3.ab3@13803>   BSR.w makeamul
0002B858 <AmiBlitz3.ab3@13804>  BRA.w 'arloop
0002B85C <AmiBlitz3.ab3@13807>   CMP.w #$29,D0
0002B860 <AmiBlitz3.ab3@13808>    BNE.w syntaxerr
0002B866 <AmiBlitz3.ab3@13809>   SUBQ.w #1,regnum
0002B868 <AmiBlitz3.ab3@13810>   ADDQ.w #6,A7
0002B86C <AmiBlitz3.ab3@13811>   MOVEM.l (A7)+,A2-A3
0002B874 <AmiBlitz3.ab3@13812>   MOVE.w $4(A3),movea5a0+2
0002B87A <AmiBlitz3.ab3@13813>   MOVE.l movea5a0,D1
0002B87E <AmiBlitz3.ab3@13814>    BSR.w pokela5s
0002B884 <AmiBlitz3.ab3@13815>   MOVE.w regnum,D1
0002B888 <AmiBlitz3.ab3@13816>   ORI.w #$D5C0,D1                                          ;add.l Dr,a2
0002B88C <AmiBlitz3.ab3@13817>    BSR.w writeword
0002B892 <AmiBlitz3.ab3@13818>   BTST #$0,$6(A3)
0002B896 <AmiBlitz3.ab3@13819>    BEQ.w 'normalar
0002B89A <AmiBlitz3.ab3@13823>   MOVE.w listarfix(PC),D1
0002B89E <AmiBlitz3.ab3@13824>    BSR.w writeword
0002B8A2 <AmiBlitz3.ab3@13827>   BSR.w get1bytemain
0002B8A8 <AmiBlitz3.ab3@13831>   BTST #$0,$7(A3)
0002B8AC <AmiBlitz3.ab3@13832>    BEQ.w 'noppnt
0002B8B0 <AmiBlitz3.ab3@13833>   CMP.w #$5C,D0
0002B8B4 <AmiBlitz3.ab3@13834>    BNE.w 'pmskip
0002B8B8 <AmiBlitz3.ab3@13835>   MOVE.w 'pfix(PC),D1
0002B8BC <AmiBlitz3.ab3@13836>    BSR.w writeword
0002B8C0 <AmiBlitz3.ab3@13839>   MOVE.w #$8000,D2
0002B8C4 <AmiBlitz3.ab3@13840>  BRA.w 'loopml
0002B8C8 <AmiBlitz3.ab3@13843>   MOVE.w #$C000,D2
0002B8CC <AmiBlitz3.ab3@13844>  BRA.w 'loopml
0002B8CE <AmiBlitz3.ab3@13847>  'pfix:   Dc.b $24,$52                                   ;MOVEA.L (A2),A2
0002B8D2 <AmiBlitz3.ab3@13852>   CMP.w #$28,D0
0002B8D6 <AmiBlitz3.ab3@13853>    BEQ.w noarrerr
0002B8DE <AmiBlitz3.ab3@13854>   CMPI.l #$100,$4(A2)
0002B8E2 <AmiBlitz3.ab3@13855>    BCS.w 'simpvar
0002B8E8 <AmiBlitz3.ab3@13856>   BTST #$0,$7(A3)
0002B8EC <AmiBlitz3.ab3@13857>    BEQ.w 'notap
0002B8F0 <AmiBlitz3.ab3@13861>   CMP.w #$5C,D0
0002B8F4 <AmiBlitz3.ab3@13862>    BEQ.w 'notap
0002B8F6 <AmiBlitz3.ab3@13863>   MOVEQ.l #$00,D2
0002B8FA <AmiBlitz3.ab3@13864>  BRA.w 'simpvar2
0002B8FE <AmiBlitz3.ab3@13867>   MOVE.w #$8000,D2
0002B906 <AmiBlitz3.ab3@13868>   MOVE.w $4(A3),movea5a0+2
0002B90C <AmiBlitz3.ab3@13869>   MOVE.l movea5a0,D1
0002B910 <AmiBlitz3.ab3@13870>    BSR.w pokela5s                                         ;move.l x(a5),a2
0002B916 <AmiBlitz3.ab3@13872>    TST.b debugmode
0002B91A <AmiBlitz3.ab3@13873>    BEQ.w 'skip
0002B91E <AmiBlitz3.ab3@13874>    MOVE.w #$c320,D1
0002B924 <AmiBlitz3.ab3@13875>    JSR Atokejsr
0002B926 <AmiBlitz3.ab3@13879>   MOVEQ.l #$00,D3
0002B92A <AmiBlitz3.ab3@13882>   CMP.w #$5C,D0
0002B92E <AmiBlitz3.ab3@13883>    BNE.w 'done
0002B936 <AmiBlitz3.ab3@13884>   CMPI.l #$100,$4(A2)
0002B93A <AmiBlitz3.ab3@13885>    BCS.w rongtypeerr
0002B93C <AmiBlitz3.ab3@13886>   MOVE.w D2,-(A7)
0002B940 <AmiBlitz3.ab3@13887>    BSR.w getparameter2
0002B944 <AmiBlitz3.ab3@13888>    BEQ.w syntaxerr
0002B946 <AmiBlitz3.ab3@13889>   ADDQ.w #4,A2
0002B94A <AmiBlitz3.ab3@13890>    BSR.w findvariable2
0002B94E <AmiBlitz3.ab3@13891>    BNE.w noofferr
0002B950 <AmiBlitz3.ab3@13892>   MOVE.w (A7)+,D2
0002B952 <AmiBlitz3.ab3@13893>   MOVEA.l A2,A3                                             ;pointer to offset
0002B956 <AmiBlitz3.ab3@13894>   MOVEA.l $A(A3),A2                                         ;pointer to type
0002B958 <AmiBlitz3.ab3@13895>   MOVEQ #0,d1
0002B95C <AmiBlitz3.ab3@13896>   MOVE.w 4(a3),d1
0002B95E <AmiBlitz3.ab3@13897>   ADD.l d1,d3
0002B964 <AmiBlitz3.ab3@13899>   MOVE.l A3,lastoffset_org
0002B968 <AmiBlitz3.ab3@13900>   CMP.w #$5B,D0
0002B96C <AmiBlitz3.ab3@13901>    BNE.w 'realdone
0002B972 <AmiBlitz3.ab3@13902>   BTST #$1,$7(A3)                                           ;a array [] in newtype is found
0002B976 <AmiBlitz3.ab3@13903>    BEQ.w rongtypeerr
0002B97A <AmiBlitz3.ab3@13904>    BSR.w addd0a0
0002B97E <AmiBlitz3.ab3@13905>   MOVEM.l A2-A3,-(A7)
0002B984 <AmiBlitz3.ab3@13906>   MOVE.w varmode,-(A7)
0002B98A <AmiBlitz3.ab3@13907>   MOVE.l lastoffset_org,-(A7)
0002B990 <AmiBlitz3.ab3@13908>   MOVE.w pusha2,D1
0002B994 <AmiBlitz3.ab3@13909>   BSR.w writeword
0002B996 <AmiBlitz3.ab3@13910>   MOVEQ.l #$03,D2                                          ;was 2 >32kb types
0002B9A0 <AmiBlitz3.ab3@13911>   MOVE.l destpointer,deststore
0002B9A6 <AmiBlitz3.ab3@13912>   MOVE.l leftsidetype,-(a7)
0002B9AC <AmiBlitz3.ab3@13913>   MOVE.l rightsidetype,-(a7)
0002B9B2 <AmiBlitz3.ab3@13915>   MOVE.w leftsideflagmask,-(a7)
0002B9B8 <AmiBlitz3.ab3@13916>   MOVE.w rightsideflagmask,-(a7)
0002B9BE <AmiBlitz3.ab3@13917>   CLR.l rightsidetype
0002B9C4 <AmiBlitz3.ab3@13918>   CLR.l leftsidetype
0002B9CA <AmiBlitz3.ab3@13919>   CLR.w leftsideflagmask
0002B9D0 <AmiBlitz3.ab3@13920>   CLR.w rightsideflagmask
0002B9D4 <AmiBlitz3.ab3@13921>   BSR.w eval
0002B9DA <AmiBlitz3.ab3@13922>   MOVE.w (a7)+,rightsideflagmask
0002B9E0 <AmiBlitz3.ab3@13923>   MOVE.w (a7)+,leftsideflagmask
0002B9E6 <AmiBlitz3.ab3@13924>   MOVE.l (a7)+,rightsidetype
0002B9EC <AmiBlitz3.ab3@13925>   MOVE.l (a7)+,leftsidetype
0002B9F0 <AmiBlitz3.ab3@13926>   CMP.w #$5D,D0
0002B9F4 <AmiBlitz3.ab3@13927>    BNE.w syntaxerr
0002B9FA <AmiBlitz3.ab3@13928>   TST.b fast                                               ;a2,-(a7) array
0002B9FE <AmiBlitz3.ab3@13929>   BEQ 'loop0_l10
0002BA04 <AmiBlitz3.ab3@13935>   MOVE.l destpointer,d1
0002BA0A <AmiBlitz3.ab3@13936>   SUB.l deststore,d1
0002BA10 <AmiBlitz3.ab3@13937>   CMP.l #4,d1
0002BA14 <AmiBlitz3.ab3@13938>   BNE 'loop0_l10
0002BA1A <AmiBlitz3.ab3@13939>   MOVE.l destpointer,a4
0002BA20 <AmiBlitz3.ab3@13940>   MOVE.l -4(a4),-6(a4)
0002BA26 <AmiBlitz3.ab3@13941>   SUBQ.l #2,destpointer
0002BA2C <AmiBlitz3.ab3@13942>   CLR.l imm_addr
0002BA32 <AmiBlitz3.ab3@13943>   CLR.l load_var_addr
0002BA36 <AmiBlitz3.ab3@13944>  BRA 'loop0_l20
0002BA3C <AmiBlitz3.ab3@13947>   MOVE.w pulla2,D1
0002BA40 <AmiBlitz3.ab3@13948>    BSR.w writeword
0002BA46 <AmiBlitz3.ab3@13951>   MOVE.l (A7)+,lastoffset_org
0002BA4C <AmiBlitz3.ab3@13952>   MOVE.w (A7)+,varmode
0002BA50 <AmiBlitz3.ab3@13953>   MOVEM.l (A7)+,A2-A3
0002BA56 <AmiBlitz3.ab3@13959>   TST.w debugmode
0002BA5A <AmiBlitz3.ab3@13960>    BEQ.b 'nobchk
0002BA5E <AmiBlitz3.ab3@13961>   MOVE.w $8(A3),D1
0002BA62 <AmiBlitz3.ab3@13962>    BEQ.b 'nobchk                                   ;no [0] checks!
0002BA68 <AmiBlitz3.ab3@13966>   MOVE.w D1,brchkcode+2
0002BA6E <AmiBlitz3.ab3@13967>   MOVE.w regnum,D1
0002BA70 <AmiBlitz3.ab3@13968>   LSL.w #8,D1
0002BA72 <AmiBlitz3.ab3@13969>   LSL.w #1,D1
0002BA76 <AmiBlitz3.ab3@13970>   OR.w brchkcode0(PC),D1
0002BA7C <AmiBlitz3.ab3@13971>   MOVE.w D1,brchkcode
0002BA80 <AmiBlitz3.ab3@13972>   MOVE.l brchkcode(PC),D1
0002BA84 <AmiBlitz3.ab3@13973>    BSR.w writelong
0002BA88 <AmiBlitz3.ab3@13974>   MOVE.l brchkcode+4(PC),D1
0002BA8C <AmiBlitz3.ab3@13975>    BSR.w writelong
0002BA90 <AmiBlitz3.ab3@13976>   MOVE.w brchkcode+8(PC),D1
0002BA94 <AmiBlitz3.ab3@13977>    BSR.w writeword
0002BA96 <AmiBlitz3.ab3@13980>   MOVEQ.l #$04,D1
0002BA9C <AmiBlitz3.ab3@13981>   BTST #$0,$7(A3)
0002BAA0 <AmiBlitz3.ab3@13982>    BNE.w 'dothemul
0002BAA4 <AmiBlitz3.ab3@13983>   MOVE.w $8(A2),D1
0002BAA8 <AmiBlitz3.ab3@13986>   BSR.w muld1
0002BAAE <AmiBlitz3.ab3@13987>   MOVE.w addrega2,D1
0002BAB4 <AmiBlitz3.ab3@13988>   OR.w regnum,D1
0002BAB8 <AmiBlitz3.ab3@13989>    OR.w #$100,d1                                           ;>32kb types
0002BABC <AmiBlitz3.ab3@13990>    BSR.w writeword
0002BAC0 <AmiBlitz3.ab3@13991>    BSR.w get1bytemain
0002BAC2 <AmiBlitz3.ab3@13992>   MOVEQ.l #$00,D3
0002BAC6 <AmiBlitz3.ab3@13993>   MOVE.w #$8000,D2
0002BACC <AmiBlitz3.ab3@13996>   BTST #$0,$7(A3)
0002BAD0 <AmiBlitz3.ab3@13997>    BNE.w 'pointer
0002BAD4 <AmiBlitz3.ab3@13998>  BRA.w 'loop0
0002BAD8 <AmiBlitz3.ab3@14001>  CMP.w #$5C,D0
0002BADC <AmiBlitz3.ab3@14002>    BNE.w 'done3
0002BADE <AmiBlitz3.ab3@14003>   TST.w D3
0002BAE2 <AmiBlitz3.ab3@14004>    BNE.w 'pskip
0002BAE8 <AmiBlitz3.ab3@14005>   MOVE.w movea0,D1
0002BAEC <AmiBlitz3.ab3@14006>    BSR.w writeword
0002BAF0 <AmiBlitz3.ab3@14007>  BRA.w 'pmore
0002BAF6 <AmiBlitz3.ab3@14010>   MOVE.w D3,movea0a0+2
0002BAFC <AmiBlitz3.ab3@14011>   MOVE.l movea0a0,D1
0002BB00 <AmiBlitz3.ab3@14012>    BSR.w writelong
0002BB06 <AmiBlitz3.ab3@14015>   BTST #$2,$7(A3)
0002BB0A <AmiBlitz3.ab3@14016>    BEQ.w 'loopml
0002BB10 <AmiBlitz3.ab3@14017>   MOVE.l adda0a0,D1
0002BB14 <AmiBlitz3.ab3@14018>    BSR.w writelong
0002BB18 <AmiBlitz3.ab3@14019>  BRA.w 'loopml
0002BB1C <AmiBlitz3.ab3@14022>   BSET #$E,D2
0002BB22 <AmiBlitz3.ab3@14023>   BTST #$2,$7(A3)
0002BB26 <AmiBlitz3.ab3@14024>    BNE.w 'done
0002BB2A <AmiBlitz3.ab3@14025>   BSET #$D,D2
0002BB32 <AmiBlitz3.ab3@14028>   CMPI.l #$100,$4(A2)
0002BB36 <AmiBlitz3.ab3@14029>    BCC.w 'done2
0002BB3A <AmiBlitz3.ab3@14030>   MOVE.b $7(A2),D2
0002BB3E <AmiBlitz3.ab3@14033>  BRA.w addd0a0
0002BB42 <AmiBlitz3.ab3@14036>   MOVE.w $6(A2),D2
0002BB46 <AmiBlitz3.ab3@14039>   MOVE.w $4(A3),D3
0002BB4C <AmiBlitz3.ab3@14040>   BTST #$0,$7(A3)
0002BB50 <AmiBlitz3.ab3@14041>    BEQ.w 'nopoint
0002BB54 <AmiBlitz3.ab3@14042>   BSET #$E,D2
0002BB56 <AmiBlitz3.ab3@14045> RTS
0002BB5A <AmiBlitz3.ab3@14049> brchkcode0:  Dc.b $B0,$7C,$00,$00                          ;CMP.W   #$0000,D0
0002BB5E <AmiBlitz3.ab3@14050> brchkcode:   Dc.b $B0,$7C :             Dc.b $00,$00       ;CMP.W   #$0000,D0
0002BB60 <AmiBlitz3.ab3@14051>              Dc.b $65,$04                                  ;BCS.B   brchkcode_ok
0002BB62 <AmiBlitz3.ab3@14052>              Dc.b $70,$02                                  ;MOVEQ   #$02,D0
0002BB64 <AmiBlitz3.ab3@14053>              Dc.b $4E,$40                                  ;TRAP    #00
0002BB6A <AmiBlitz3.ab3@14061>   TST.w varmode
0002BB6E <AmiBlitz3.ab3@14062>    BEQ.w writeword
0002BB72 <AmiBlitz3.ab3@14063>   BCLR #$0,D1
0002BB76 <AmiBlitz3.ab3@14064> BRA.w writeword
0002BB7C <AmiBlitz3.ab3@14067>   TST.w varmode
0002BB80 <AmiBlitz3.ab3@14068>    BEQ.w writeword
0002BB84 <AmiBlitz3.ab3@14069>   BCLR #$9,D1
0002BB88 <AmiBlitz3.ab3@14070> BRA.w writeword
0002BB8E <AmiBlitz3.ab3@14073>   TST.w proceduremode
0002BB92 <AmiBlitz3.ab3@14074>    BEQ.w writelong
0002BB96 <AmiBlitz3.ab3@14075>   BCLR #$19,D1
0002BB9A <AmiBlitz3.ab3@14076> BRA.w writelong
0002BBA0 <AmiBlitz3.ab3@14079>   TST.w varmode
0002BBA4 <AmiBlitz3.ab3@14080>   BEQ.w writelong
0002BBA8 <AmiBlitz3.ab3@14081>   BCLR #$10,D1
0002BBAE <AmiBlitz3.ab3@14089>   ADDQ.l #1,destpointer                                   ; this is a copy of the writewordcode
0002BBB6 <AmiBlitz3.ab3@14090>   BCLR #$0,destpointer+3
0002BBBC <AmiBlitz3.ab3@14091>   MOVEA.l destpointer,A4
0002BBC2 <AmiBlitz3.ab3@14092>   CMPA.l destbufferend,A4
0002BBC6 <AmiBlitz3.ab3@14093>    BCC.w 'overa
0002BBC8 <AmiBlitz3.ab3@14094>   MOVE.l D1,(A4)+
0002BBCE <AmiBlitz3.ab3@14097>   MOVE.l A4,destpointer
0002BBD2 <AmiBlitz3.ab3@14098>   CMPA.l bigpc(PC),A4
0002BBD6 <AmiBlitz3.ab3@14099>    BHI.w 'nbpa
0002BBD8 <AmiBlitz3.ab3@14100>  RTS
0002BBDE <AmiBlitz3.ab3@14103>   TST.w cfetchmode                                         ; to complete the subroutine
0002BBE2 <AmiBlitz3.ab3@14104>   BNE.w 'nbp2a                                             ;
0002BBE8 <AmiBlitz3.ab3@14105>   MOVE.l A4,bigpc                                          ;
0002BBEA <AmiBlitz3.ab3@14108>  RTS
0002BBF2 <AmiBlitz3.ab3@14111>   MOVE.w #$FFFF,dontwrite_nomemleft                                  ;#-1 org source
0002BBF8 <AmiBlitz3.ab3@14112>   CLR.b fast
0002BBFE <AmiBlitz3.ab3@14113>   CLR.b fpu
0002BC04 <AmiBlitz3.ab3@14114>   CLR.b iee                                                ; in writeword this is #2
0002BC06 <AmiBlitz3.ab3@14115>   ADDQ.w #4,A4
0002BC0A <AmiBlitz3.ab3@14116> BRA.w 'msa
0002BC10 <AmiBlitz3.ab3@14135>   ADDQ.l #1,destpointer
0002BC18 <AmiBlitz3.ab3@14136>   BCLR #$0,destpointer+3
0002BC1E <AmiBlitz3.ab3@14137>   MOVEA.l destpointer,A4
0002BC24 <AmiBlitz3.ab3@14138>   CMPA.l destbufferend,A4
0002BC28 <AmiBlitz3.ab3@14139>    BCC.w 'over
0002BC2A <AmiBlitz3.ab3@14140>   MOVE.w D1,(A4)+
0002BC30 <AmiBlitz3.ab3@14143>   MOVE.l A4,destpointer
0002BC34 <AmiBlitz3.ab3@14144>   CMPA.l bigpc(PC),A4
0002BC38 <AmiBlitz3.ab3@14145>    BHI.w 'nbp
0002BC3A <AmiBlitz3.ab3@14146>  RTS
0002BC40 <AmiBlitz3.ab3@14149>   TST.w cfetchmode
0002BC44 <AmiBlitz3.ab3@14150>   BNE.w 'nbp2
0002BC4A <AmiBlitz3.ab3@14151>   MOVE.l A4,bigpc
0002BC4C <AmiBlitz3.ab3@14154>  RTS
0002BC54 <AmiBlitz3.ab3@14157>   MOVE.w #$FFFF,dontwrite_nomemleft                                  ;#-1 org source
0002BC56 <AmiBlitz3.ab3@14158>   ADDQ.w #2,A4
0002BC5C <AmiBlitz3.ab3@14159>   CLR.b fast
0002BC62 <AmiBlitz3.ab3@14160>   CLR.b fpu
0002BC68 <AmiBlitz3.ab3@14161>   CLR.b iee
0002BC6C <AmiBlitz3.ab3@14162> BRA.w 'ms
0002BC72 <AmiBlitz3.ab3@14166>   MOVEA.l destpointer,A4
0002BC78 <AmiBlitz3.ab3@14167>   CMPA.l destbufferend,A4
0002BC7C <AmiBlitz3.ab3@14168>    BCC.w 'over
0002BC7E <AmiBlitz3.ab3@14169>   MOVE.b D1,(A4)+
0002BC84 <AmiBlitz3.ab3@14172>   MOVE.l A4,destpointer
0002BC88 <AmiBlitz3.ab3@14173>   CMPA.l bigpc(PC),A4
0002BC8C <AmiBlitz3.ab3@14174>    BHI.w 'nbp
0002BC8E <AmiBlitz3.ab3@14175>  RTS
0002BC94 <AmiBlitz3.ab3@14178>   TST.w cfetchmode
0002BC98 <AmiBlitz3.ab3@14179>    BNE.w 'nbp2
0002BC9E <AmiBlitz3.ab3@14180>   MOVE.l A4,bigpc
0002BCA0 <AmiBlitz3.ab3@14183>  RTS
0002BCA8 <AmiBlitz3.ab3@14186>   MOVE.w #-1,dontwrite_nomemleft
0002BCAA <AmiBlitz3.ab3@14187>   ADDQ.w #1,A4
0002BCB0 <AmiBlitz3.ab3@14188>   CLR.b fast
0002BCB6 <AmiBlitz3.ab3@14189>   CLR.b fpu
0002BCBC <AmiBlitz3.ab3@14190>   CLR.b iee
0002BCC0 <AmiBlitz3.ab3@14191> BRA.w 'ms
0002BCC4 <AmiBlitz3.ab3@14194> bigpc:   Ds.l 1
0002BCC6 <AmiBlitz3.ab3@14198>   MOVE.w (A0)+,D1
0002BCCA <AmiBlitz3.ab3@14199>   BSR.w writeword
0002BCCC <AmiBlitz3.ab3@14202>     CMPA.l A1,A0
0002BCD0 <AmiBlitz3.ab3@14203>     BCC.w 'done
0002BCD2 <AmiBlitz3.ab3@14204>       MOVE.w (A0)+,D1
0002BCD6 <AmiBlitz3.ab3@14205>       BSR.w writeword
0002BCDA <AmiBlitz3.ab3@14206>  BRA.w 'loop
0002BCDC <AmiBlitz3.ab3@14209> RTS
0002BCDE <AmiBlitz3.ab3@14213>   MOVE.w (A0)+,D1
0002BCE2 <AmiBlitz3.ab3@14214>   BSR.w writeword
0002BCE4 <AmiBlitz3.ab3@14215>   CMPA.l A1,A0
0002BCE8 <AmiBlitz3.ab3@14216>   BCS.w pokecode2
0002BCEA <AmiBlitz3.ab3@14217> RTS
0002BCF0 <AmiBlitz3.ab3@14224>   TST.b iniffcommand
0002BCF4 <AmiBlitz3.ab3@14225>   BEQ 'l1
0002BCF8 <AmiBlitz3.ab3@14226>     MOVE.w #$4880,D1
0002BCFE <AmiBlitz3.ab3@14227>     OR.w regnum,D1
0002BD02 <AmiBlitz3.ab3@14228>     BSR writeword
0002BD04 <AmiBlitz3.ab3@14232> RTS
0002BD08 <AmiBlitz3.ab3@14238>   BSR.w convert_byte_to_word
0002BD0E <AmiBlitz3.ab3@14242>   TST.b iee
0002BD12 <AmiBlitz3.ab3@14243>   BEQ 'old
0002BD16 <AmiBlitz3.ab3@14244>   CMP.b #5,d2
0002BD1A <AmiBlitz3.ab3@14245>   BEQ wtof
0002BD1E <AmiBlitz3.ab3@14249>   MOVE.w #$48C0,D1
0002BD24 <AmiBlitz3.ab3@14250>   OR.w regnum,D1
0002BD28 <AmiBlitz3.ab3@14251> BRA.w writeword
0002BD2A <AmiBlitz3.ab3@14255>   MOVEQ #0,d0
0002BD30 <AmiBlitz3.ab3@14256>   MOVE.w regnum,d0
0002BD32 <AmiBlitz3.ab3@14257>   ASL.l #7,d0
0002BD38 <AmiBlitz3.ab3@14258>   MOVE.l #$f2005000,d1
0002BD3A <AmiBlitz3.ab3@14259>   OR.l d0,d1
0002BD3C <AmiBlitz3.ab3@14260>   ASL.l #1,d0
0002BD3E <AmiBlitz3.ab3@14261>   ASL.l #8,d0
0002BD40 <AmiBlitz3.ab3@14262>   OR.l d0,d1
0002BD44 <AmiBlitz3.ab3@14263> BRA writelong
0002BD48 <AmiBlitz3.ab3@14267>   BSR.w convert_byte_to_word
0002BD4C <AmiBlitz3.ab3@14270>   MOVE.w #$4840,D1
0002BD52 <AmiBlitz3.ab3@14271>   OR.w regnum,D1
0002BD56 <AmiBlitz3.ab3@14272>    BSR.w writeword
0002BD5A <AmiBlitz3.ab3@14273>   MOVE.w #$4240,D1
0002BD60 <AmiBlitz3.ab3@14274>   OR.w regnum,D1
0002BD64 <AmiBlitz3.ab3@14275> BRA.w writeword
0002BD68 <AmiBlitz3.ab3@14279>   CMP.w #$ffdc,d1
0002BD6C <AmiBlitz3.ab3@14280>   BNE 'negfpu
0002BD6E <AmiBlitz3.ab3@14281>   MOVEQ #0,d0
0002BD74 <AmiBlitz3.ab3@14282>   MOVE.w regnum,d0
0002BD76 <AmiBlitz3.ab3@14283>   ASL.l #7,d0
0002BD7C <AmiBlitz3.ab3@14284>   MOVE.l #$f2004000,d1
0002BD7E <AmiBlitz3.ab3@14285>   OR.l d0,d1
0002BD80 <AmiBlitz3.ab3@14286>   ASL.l #1,d0
0002BD82 <AmiBlitz3.ab3@14287>   ASL.l #8,d0
0002BD84 <AmiBlitz3.ab3@14288>   OR.l d0,d1
0002BD88 <AmiBlitz3.ab3@14289>  BRA writelong
0002BD8A <AmiBlitz3.ab3@14292>   MOVEQ #0,d1
0002BD90 <AmiBlitz3.ab3@14293>   MOVE.w regnum,d1                                         ;fpu neg
0002BD92 <AmiBlitz3.ab3@14294>   ASL.l #7,d1
0002BD98 <AmiBlitz3.ab3@14295>   OR.l #$f200001a,d1
0002BD9A <AmiBlitz3.ab3@14296>   MOVE.l d0,-(a7)
0002BD9C <AmiBlitz3.ab3@14297>   MOVEQ #0,d0
0002BDA2 <AmiBlitz3.ab3@14298>   MOVE.w regnum,d0
0002BDA4 <AmiBlitz3.ab3@14299>   ASL.l #8,d0
0002BDA6 <AmiBlitz3.ab3@14300>   ASL.l #2,d0
0002BDA8 <AmiBlitz3.ab3@14301>   OR.l d0,d1
0002BDAA <AmiBlitz3.ab3@14302>   MOVE.l (a7)+,d0
0002BDAE <AmiBlitz3.ab3@14303> BRA writelong
0002BDB4 <AmiBlitz3.ab3@14309>    TST.b iee
0002BDB8 <AmiBlitz3.ab3@14310>    BNE wtof
0002BDBC <AmiBlitz3.ab3@14312>    BSR.w convert_byte_to_long
0002BDC0 <AmiBlitz3.ab3@14315>    MOVE.w #$FFDC,D1
0002BDC6 <AmiBlitz3.ab3@14319>    TST.b iee
0002BDCA <AmiBlitz3.ab3@14320>    BNE ltof
0002BDD0 <AmiBlitz3.ab3@14322>    MOVE.w D1,libjsr+2
0002BDD4 <AmiBlitz3.ab3@14323>    BSR.w savereg
0002BDD6 <AmiBlitz3.ab3@14324>   MOVE.l D4,D1
0002BDDA <AmiBlitz3.ab3@14325>    BSR.w pokemovem
0002BDDE <AmiBlitz3.ab3@14326>   MOVE.w #$C900,D1      ; #getffpbase,
0002BDE2 <AmiBlitz3.ab3@14327>    BSR.w Atokejsr
0002BDE6 <AmiBlitz3.ab3@14328>    BSR.w ritetod0
0002BDEC <AmiBlitz3.ab3@14329>   MOVE.l libjsr,D1
0002BDF0 <AmiBlitz3.ab3@14330>    BSR.w writelong
0002BDF4 <AmiBlitz3.ab3@14331>    BSR.w ritefromd0
0002BDF6 <AmiBlitz3.ab3@14332>   MOVE.l D5,D1
0002BDFA <AmiBlitz3.ab3@14333> BRA.w pokemovem
0002BDFC <AmiBlitz3.ab3@14335> RTS ; dead old code
0002BE00 <AmiBlitz3.ab3@14338>   MOVE.w #$C317,D1     ;#wtobover
0002BE06 <AmiBlitz3.ab3@14340>   TST.b typecheck
0002BE0A <AmiBlitz3.ab3@14341>   BEQ 'l1
0002BE10 <AmiBlitz3.ab3@14342>    TST.b notypecheck
0002BE14 <AmiBlitz3.ab3@14343>    BNE 'l1
0002BE1A <AmiBlitz3.ab3@14344>    TST.l lasttoken
0002BE20 <AmiBlitz3.ab3@14354>   TST.b debugmode
0002BE24 <AmiBlitz3.ab3@14355>    BEQ.w 'skip
0002BE2C <AmiBlitz3.ab3@14356>   BTST #$7,overflowcheck      ;;*** was 7! overflow checking?
0002BE30 <AmiBlitz3.ab3@14357>    BEQ.w 'skip
0002BE36 <AmiBlitz3.ab3@14359>   TST.w cfetchmode
0002BE3A <AmiBlitz3.ab3@14360>    BNE.w 'skip
0002BE40 <AmiBlitz3.ab3@14362>   TST.w regnum
0002BE44 <AmiBlitz3.ab3@14363>    BEQ.w 'isok
0002BE46 <AmiBlitz3.ab3@14364>   MOVE.w D1,-(A7)
0002BE4A <AmiBlitz3.ab3@14365>   MOVE.w 'code1(PC),D1
0002BE4E <AmiBlitz3.ab3@14366>    BSR.w writeword
0002BE54 <AmiBlitz3.ab3@14367>   MOVE.w regnum,D1
0002BE58 <AmiBlitz3.ab3@14368>   OR.w 'code3(PC),D1
0002BE5C <AmiBlitz3.ab3@14369>    BSR.w writeword
0002BE5E <AmiBlitz3.ab3@14370>   MOVE.w (A7)+,D1
0002BE62 <AmiBlitz3.ab3@14371>    BSR.w 'isok
0002BE66 <AmiBlitz3.ab3@14372>   MOVE.w 'code2(PC),D1
0002BE6A <AmiBlitz3.ab3@14373>  BRA.w writeword
0002BE6E <AmiBlitz3.ab3@14376>   MOVEM.l D0-D7/A0-A6,-(A7)
0002BE72 <AmiBlitz3.ab3@14377>    BSR.w Atokejsr
0002BE76 <AmiBlitz3.ab3@14378>   MOVEM.l (A7)+,D0-D7/A0-A6
0002BE78 <AmiBlitz3.ab3@14381>  RTS
0002BE7A <AmiBlitz3.ab3@14384>   MOVE.l D0,-(A7)
0002BE7C <AmiBlitz3.ab3@14387>   MOVE.l (A7)+,D0
0002BE7E <AmiBlitz3.ab3@14390>   MOVE.l D0,D0
0002BE82 <AmiBlitz3.ab3@14395>   BSR.w convert_word_to_long
0002BE88 <AmiBlitz3.ab3@14397>   TST.b iee
0002BE8C <AmiBlitz3.ab3@14398>   BEQ 'old
0002BE90 <AmiBlitz3.ab3@14399>   CMP.b #5,d2
0002BE94 <AmiBlitz3.ab3@14400>   BNE 'old
0002BE96 <AmiBlitz3.ab3@14401>  RTS
0002BE9A <AmiBlitz3.ab3@14405> BRA.w bytetof2
0002BE9E <AmiBlitz3.ab3@14408>   MOVE.w #$C316,D1      ; #ltobover
0002BEA4 <AmiBlitz3.ab3@14410>   TST.b typecheck
0002BEA8 <AmiBlitz3.ab3@14411>   BEQ 'l1
0002BEAE <AmiBlitz3.ab3@14412>   TST.b peekaddrsize
0002BEB2 <AmiBlitz3.ab3@14413>   BNE 'l1
0002BEB8 <AmiBlitz3.ab3@14414>   TST.b notypecheck
0002BEBC <AmiBlitz3.ab3@14415>   BNE 'l1
0002BEC2 <AmiBlitz3.ab3@14416>   TST.l lasttoken
0002BEC6 <AmiBlitz3.ab3@14423> BRA.w overchk
0002BECA <AmiBlitz3.ab3@14426>   MOVE.w #$C318,D1      ; #ltowover,
0002BED0 <AmiBlitz3.ab3@14428>   TST.b typecheck
0002BED4 <AmiBlitz3.ab3@14429>   BEQ 'l1
0002BEDA <AmiBlitz3.ab3@14430>   TST.b peekaddrsize
0002BEDE <AmiBlitz3.ab3@14431>   BNE 'l1
0002BEE4 <AmiBlitz3.ab3@14432>   TST.b notypecheck
0002BEE8 <AmiBlitz3.ab3@14433>   BNE 'l1
0002BEEE <AmiBlitz3.ab3@14434>   TST.l lasttoken
0002BEF2 <AmiBlitz3.ab3@14441> BRA.w overchk
0002BEF6 <AmiBlitz3.ab3@14444>   MOVE.w #$C318,D1      ;#ltowover,
0002BEFC <AmiBlitz3.ab3@14446>   TST.b typecheck
0002BF00 <AmiBlitz3.ab3@14447>   BEQ 'l1
0002BF06 <AmiBlitz3.ab3@14448>   TST.b notypecheck
0002BF0A <AmiBlitz3.ab3@14449>   BNE 'l1
0002BF10 <AmiBlitz3.ab3@14450>   TST.l lasttoken
0002BF14 <AmiBlitz3.ab3@14457>   BSR.w overchk
0002BF18 <AmiBlitz3.ab3@14458> BRA.w convert_word_to_quick
0002BF1C <AmiBlitz3.ab3@14461> BRA.w bytetof2
0002BF1E <AmiBlitz3.ab3@14463> RTS ; dead old code
0002BF22 <AmiBlitz3.ab3@14466>   MOVE.w #$C319,D1         ; #qtobover,
0002BF28 <AmiBlitz3.ab3@14468>   TST.b typecheck
0002BF2C <AmiBlitz3.ab3@14469>   BEQ 'l1
0002BF32 <AmiBlitz3.ab3@14470>   TST.b notypecheck
0002BF36 <AmiBlitz3.ab3@14471>   BNE 'l1
0002BF3C <AmiBlitz3.ab3@14472>   TST.l lasttoken
0002BF40 <AmiBlitz3.ab3@14479>   BSR.w overchk
0002BF44 <AmiBlitz3.ab3@14482>   MOVE.w #$4240,D1
0002BF4A <AmiBlitz3.ab3@14483>   OR.w regnum,D1
0002BF4E <AmiBlitz3.ab3@14484>   BSR.w writeword
0002BF52 <AmiBlitz3.ab3@14485>   MOVE.w #$4840,D1
0002BF58 <AmiBlitz3.ab3@14486>   OR.w regnum,D1
0002BF5C <AmiBlitz3.ab3@14487> BRA.w writeword
0002BF60 <AmiBlitz3.ab3@14490> BRA.w quicktob2
0002BF64 <AmiBlitz3.ab3@14493>   BSR.w quicktob2
0002BF68 <AmiBlitz3.ab3@14494> BRA.w convert_word_to_long
0002BF6A <AmiBlitz3.ab3@14499>   MOVEQ #0,d0
0002BF70 <AmiBlitz3.ab3@14500>   MOVE.w regnum,d0
0002BF72 <AmiBlitz3.ab3@14501>   ASL.l #7,d0
0002BF78 <AmiBlitz3.ab3@14502>   MOVE.l #$f2004000,d1
0002BF7A <AmiBlitz3.ab3@14503>   OR.l d0,d1
0002BF7C <AmiBlitz3.ab3@14504>   ASL.l #1,d0
0002BF7E <AmiBlitz3.ab3@14505>   ASL.l #8,d0
0002BF80 <AmiBlitz3.ab3@14506>   OR.l d0,d1
0002BF84 <AmiBlitz3.ab3@14507>   BSR writelong
0002BF8A <AmiBlitz3.ab3@14508>   MOVE.w regnum,d0
0002BF8C <AmiBlitz3.ab3@14509>   ASL.l #7,d0
0002BF92 <AmiBlitz3.ab3@14510>   MOVE.l #$f23c4423,d1                                     ;fmul.s #1/65536,fpreg
0002BF94 <AmiBlitz3.ab3@14511>   OR.w d0,d1
0002BF98 <AmiBlitz3.ab3@14512>   BSR writelong
0002BF9E <AmiBlitz3.ab3@14513>   MOVE.l #$37800000,d1
0002BFA2 <AmiBlitz3.ab3@14514>   BSR writelong
0002BFA4 <AmiBlitz3.ab3@14515> RTS
0002BFAA <AmiBlitz3.ab3@14522>   TST.b iee
0002BFAE <AmiBlitz3.ab3@14523>   BNE qtof
0002BFB2 <AmiBlitz3.ab3@14525>   MOVE.w #$D300,D1       ; #qutofl,
0002BFB4 <AmiBlitz3.ab3@14528>   MOVE.w D1,-(A7)
0002BFB8 <AmiBlitz3.ab3@14529>    BSR.w savereg
0002BFBA <AmiBlitz3.ab3@14530>   MOVE.l D4,D1
0002BFBE <AmiBlitz3.ab3@14531>    BSR.w pokemovem
0002BFC2 <AmiBlitz3.ab3@14533>    BSR.w ritetod0
0002BFC4 <AmiBlitz3.ab3@14534>   MOVE.w (A7)+,D1
0002BFC8 <AmiBlitz3.ab3@14535>    BSR.w Atokejsr
0002BFCC <AmiBlitz3.ab3@14537>    BSR.w ritefromd0
0002BFCE <AmiBlitz3.ab3@14538>   MOVE.l D5,D1
0002BFD2 <AmiBlitz3.ab3@14539> BRA.w pokemovem
0002BFD4 <AmiBlitz3.ab3@14541> RTS ; dead old code
0002BFDA <AmiBlitz3.ab3@14545>   TST.b typecheck
0002BFDE <AmiBlitz3.ab3@14546>   BEQ 'l1
0002BFE4 <AmiBlitz3.ab3@14547>   TST.b notypecheck
0002BFE8 <AmiBlitz3.ab3@14548>   BNE 'l1
0002BFEE <AmiBlitz3.ab3@14549>   TST.l lasttoken
0002BFF4 <AmiBlitz3.ab3@14555>   TST.b iee
0002BFF8 <AmiBlitz3.ab3@14556>   BNE ftol
0002BFFC <AmiBlitz3.ab3@14558>   MOVE.w #$C31A,D1       ; #ftobover
0002C000 <AmiBlitz3.ab3@14559>   BSR.w overchk
0002C004 <AmiBlitz3.ab3@14561>   BSR.w floattolong2
0002C008 <AmiBlitz3.ab3@14562> BRA.w convert_long_to_byte
0002C00A <AmiBlitz3.ab3@14564> RTS ; dead old code
0002C010 <AmiBlitz3.ab3@14568>   TST.b typecheck
0002C014 <AmiBlitz3.ab3@14569>   BEQ 'l1
0002C01A <AmiBlitz3.ab3@14570>   TST.b notypecheck
0002C01E <AmiBlitz3.ab3@14571>   BNE 'l1
0002C024 <AmiBlitz3.ab3@14572>   TST.l lasttoken
0002C02A <AmiBlitz3.ab3@14578>   TST.b iee
0002C02E <AmiBlitz3.ab3@14579>   BNE ftol
0002C032 <AmiBlitz3.ab3@14581>   MOVE.w #$C31B,D1         ; #ftowover
0002C036 <AmiBlitz3.ab3@14582>   BSR.w overchk
0002C03A <AmiBlitz3.ab3@14584>   BSR.w floattolong2
0002C03E <AmiBlitz3.ab3@14585> BRA.w convert_long_to_word
0002C040 <AmiBlitz3.ab3@14587> RTS  ; dead old code
0002C046 <AmiBlitz3.ab3@14591>   TST.b iee
0002C04A <AmiBlitz3.ab3@14592>   BNE ftol
0002C04E <AmiBlitz3.ab3@14594>   MOVE.w #$C31C,D1     ; #ftolover,
0002C052 <AmiBlitz3.ab3@14595>   BSR.w overchk
0002C056 <AmiBlitz3.ab3@14598>   MOVE.w #$FFE2,D1     ; #-30,
0002C05A <AmiBlitz3.ab3@14599> BRA.w fdo2
0002C05C <AmiBlitz3.ab3@14603>   MOVE.l d0,-(a7)
0002C05E <AmiBlitz3.ab3@14604>   MOVEQ #0,d0
0002C064 <AmiBlitz3.ab3@14605>   MOVE.w regnum,d0
0002C066 <AmiBlitz3.ab3@14606>   ASL.l #7,d0
0002C06C <AmiBlitz3.ab3@14607>   MOVE.l #$f2006000,d1
0002C06E <AmiBlitz3.ab3@14608>   OR.l d0,d1
0002C070 <AmiBlitz3.ab3@14609>   ASL.l #1,d0
0002C072 <AmiBlitz3.ab3@14610>   ASL.l #8,d0
0002C074 <AmiBlitz3.ab3@14611>   OR.l d0,d1
0002C076 <AmiBlitz3.ab3@14612>   MOVE.l (a7)+,d0
0002C07A <AmiBlitz3.ab3@14613> BRA writelong
0002C07C <AmiBlitz3.ab3@14617>   MOVE.l d0,-(a7)
0002C07E <AmiBlitz3.ab3@14618>   MOVEQ #0,d0
0002C084 <AmiBlitz3.ab3@14619>   MOVE.l #$f23c4023,d1
0002C08A <AmiBlitz3.ab3@14620>   MOVE.w regnum,d0
0002C08C <AmiBlitz3.ab3@14621>   ASL.l #7,d0
0002C08E <AmiBlitz3.ab3@14622>   OR.l d0,d1
0002C092 <AmiBlitz3.ab3@14623>   BSR writelong
0002C098 <AmiBlitz3.ab3@14624>   MOVE.l #$00010000,d1
0002C09C <AmiBlitz3.ab3@14625>   BSR writelong
0002C0A2 <AmiBlitz3.ab3@14626>   MOVE.w regnum,d0
0002C0A4 <AmiBlitz3.ab3@14627>   ASL.l #7,d0
0002C0AA <AmiBlitz3.ab3@14628>   MOVE.l #$f2006000,d1
0002C0AC <AmiBlitz3.ab3@14629>   OR.l d0,d1
0002C0AE <AmiBlitz3.ab3@14630>   ASL.l #1,d0
0002C0B0 <AmiBlitz3.ab3@14631>   ASL.l #8,d0
0002C0B2 <AmiBlitz3.ab3@14632>   OR.l d0,d1
0002C0B6 <AmiBlitz3.ab3@14633>   BSR writelong
0002C0B8 <AmiBlitz3.ab3@14634>   MOVE.l (a7)+,d0
0002C0BA <AmiBlitz3.ab3@14635> RTS
0002C0BC <AmiBlitz3.ab3@14638> RTS         ; dead old code
0002C0C2 <AmiBlitz3.ab3@14645>   TST.b iee
0002C0C6 <AmiBlitz3.ab3@14646>   BNE ftoq
0002C0CA <AmiBlitz3.ab3@14648>   MOVE.w #$C31B,D1    ; #ftowover,
0002C0CE <AmiBlitz3.ab3@14649>   BSR.w overchk
0002C0D2 <AmiBlitz3.ab3@14651>   MOVE.w #$D301,D1    ; #fltoqu,
0002C0D6 <AmiBlitz3.ab3@14652> BRA.w qtof2
0002C0DC <AmiBlitz3.ab3@14657>    TST.b blitzparloop
0002C0E0 <AmiBlitz3.ab3@14658>    BNE 'l1
0002C0E6 <AmiBlitz3.ab3@14659>    TST.b funcparloop
0002C0EA <AmiBlitz3.ab3@14660>    BNE 'l1
0002C0EE <AmiBlitz3.ab3@14661>    BRA error_convert_types
0002C0F6 <AmiBlitz3.ab3@14664>   CMP.b #2,optistring
0002C0FA <AmiBlitz3.ab3@14665>   BEQ JLrts
0002C100 <AmiBlitz3.ab3@14667>   MOVE.w stol,D1
0002C104 <AmiBlitz3.ab3@14668>   BSR.w writeword
0002C10C <AmiBlitz3.ab3@14670>   CMPI.w #$2,sbgot
0002C110 <AmiBlitz3.ab3@14672>   BCS.w sbtolong                     ; was BRA
0002C114 <AmiBlitz3.ab3@14674>   MOVE.w ceos(PC),D1                 ; begin copy of sbtolong
0002C118 <AmiBlitz3.ab3@14675>   BSR.w writeword
0002C11E <AmiBlitz3.ab3@14677>   MOVE.w regnum,D1
0002C120 <AmiBlitz3.ab3@14678>   LSL.w #8,D1
0002C122 <AmiBlitz3.ab3@14679>   LSL.w #1,D1
0002C12A <AmiBlitz3.ab3@14680>   CMPI.w #$2,sbgot
0002C12E <AmiBlitz3.ab3@14681>   BCS.w sbtolong_skip2
0002C134 <AmiBlitz3.ab3@14682>   MOVE.w a2offset,D3
0002C13A <AmiBlitz3.ab3@14683>   SUB.w thisstuse,D3
0002C13E <AmiBlitz3.ab3@14684>   CMP.w #$6,D3
0002C142 <AmiBlitz3.ab3@14685>   BNE.w 'lenonly
0002C148 <AmiBlitz3.ab3@14686>   OR.w movestst2,D1
0002C14C <AmiBlitz3.ab3@14687>   BSR.w writeword
0002C152 <AmiBlitz3.ab3@14688>   LEA movestst2+2,A0
0002C158 <AmiBlitz3.ab3@14689>   LEA movestst2f,A1
0002C15C <AmiBlitz3.ab3@14690>  BRA.w pokecode2
0002C162 <AmiBlitz3.ab3@14693>   OR.w movea7dn,D1
0002C166 <AmiBlitz3.ab3@14694>   BSR.w writeword
0002C16C <AmiBlitz3.ab3@14695>   MOVE.l #0,D1
0002C170 <AmiBlitz3.ab3@14696> BRA.w writeword                      ; end of copy
0002C176 <AmiBlitz3.ab3@14703>   ADDQ.w #1,fuckpos
0002C17A <AmiBlitz3.ab3@14704>   BSR.w writeconvertcode
0002C180 <AmiBlitz3.ab3@14705>   SUBQ.w #1,fuckpos
0002C182 <AmiBlitz3.ab3@14709> RTS
0002C184 <AmiBlitz3.ab3@14713>   MOVE.w D3,D1
0002C188 <AmiBlitz3.ab3@14715>   CMP.w #7,d1
0002C18C <AmiBlitz3.ab3@14716>   BLE 'ok
0002C192 <AmiBlitz3.ab3@14717>   JMP errorinternalconvert
0002C194 <AmiBlitz3.ab3@14721>   SUBQ.w #1,D1
0002C198 <AmiBlitz3.ab3@14722>   MULU #$7,D1
0002C19A <AmiBlitz3.ab3@14723>   ADD.w D2,D1
0002C19C <AmiBlitz3.ab3@14724>   SUBQ.w #1,D1
0002C19E <AmiBlitz3.ab3@14725>   LSL.w #2,D1
0002C1A4 <AmiBlitz3.ab3@14726>   LEA convtable,A0
0002C1A8 <AmiBlitz3.ab3@14727>   MOVE.l $0(A0,D1.W),D1
0002C1AC <AmiBlitz3.ab3@14728>   BEQ.w 'skip
0002C1AE <AmiBlitz3.ab3@14729>     MOVEA.l D1,A0
0002C1B2 <AmiBlitz3.ab3@14731>     CMP.b #$ff,d3
0002C1B6 <AmiBlitz3.ab3@14732>     BEQ 'skip
0002C1B8 <AmiBlitz3.ab3@14734>  JMP (A0)
0002C1BA <AmiBlitz3.ab3@14737> RTS
0002C1BE <AmiBlitz3.ab3@14740> usedfrom:  Ds.l 1
0002C1C2 <AmiBlitz3.ab3@14747>   CMP.w #"\",D0
0002C1C6 <AmiBlitz3.ab3@14748>   BNE.w 'skip0
0002C1CA <AmiBlitz3.ab3@14750>     CMP.b #"\",(a5)
0002C1CE <AmiBlitz3.ab3@14751>     BNE 'first
0002C1D4 <AmiBlitz3.ab3@14752>       MOVE.l A5,usedfrom
0002C1DA <AmiBlitz3.ab3@14753>       LEA path2,A5
0002C1DE <AmiBlitz3.ab3@14754>  BRA 'g1
0002C1E0 <AmiBlitz3.ab3@14758>     SUBQ.w #1,A5
0002C1E6 <AmiBlitz3.ab3@14759>   MOVE.l A5,usedfrom
0002C1EC <AmiBlitz3.ab3@14760>   LEA usedpath,A5                                          ;read path
0002C1F0 <AmiBlitz3.ab3@14765>   BSR.w get1bytemain
0002C1F6 <AmiBlitz3.ab3@14768>   CLR.w flagmask
0002C1FA <AmiBlitz3.ab3@14769>   CMP.w #$2A,D0             ;'*'
0002C1FE <AmiBlitz3.ab3@14770>    BNE.w 'skip
0002C206 <AmiBlitz3.ab3@14771>   MOVE.w #$0001,flagmask
0002C20A <AmiBlitz3.ab3@14774>    BSR.w getparameter2
0002C20E <AmiBlitz3.ab3@14777>    BEQ.w syntaxerr
0002C212 <AmiBlitz3.ab3@14778>   CMP.w #$28,D0             ;'('
0002C216 <AmiBlitz3.ab3@14779>    BEQ.w 'setmask
0002C21A <AmiBlitz3.ab3@14780>   CMP.w #$2E,D0             ;'.'
0002C21E <AmiBlitz3.ab3@14781>    BEQ.w 'morem
0002C222 <AmiBlitz3.ab3@14782>   CMP.w #$24,D0             ;'$'
0002C226 <AmiBlitz3.ab3@14783>    BNE.w 'done
0002C22E <AmiBlitz3.ab3@14784>   ORI.w #$8,flagmask
0002C232 <AmiBlitz3.ab3@14785>    BSR.w storeloc
0002C236 <AmiBlitz3.ab3@14786>    BSR.w get1bytemain
0002C23A <AmiBlitz3.ab3@14787>  BRA.w 'morez
0002C23E <AmiBlitz3.ab3@14791>   BSR.w storeloc
0002C240 <AmiBlitz3.ab3@14792>   MOVE.w D2,-(A7)
0002C246 <AmiBlitz3.ab3@14793>   LEA namebuff2,A1
0002C24A <AmiBlitz3.ab3@14794>    BSR.w makename3
0002C24E <AmiBlitz3.ab3@14795>    BEQ.w syntaxerr
0002C250 <AmiBlitz3.ab3@14796>   MOVE.w (A7)+,D2
0002C252 <AmiBlitz3.ab3@14799>    MOVE.w D0,D1
0002C256 <AmiBlitz3.ab3@14800>    BSR.w resloc
0002C25A <AmiBlitz3.ab3@14801>    CMP.w #$28,D1             ;'('
0002C25E <AmiBlitz3.ab3@14802>    BNE.w 'done
0002C266 <AmiBlitz3.ab3@14805>   ORI.w #$2,flagmask
0002C268 <AmiBlitz3.ab3@14808>  RTS
0002C26C <AmiBlitz3.ab3@14811>   CMP.w #$40,D0              ;'@'
0002C270 <AmiBlitz3.ab3@14812>    BNE.w 'skip2
0002C278 <AmiBlitz3.ab3@14813>   MOVE.w #$0005,flagmask
0002C27C <AmiBlitz3.ab3@14814>  BRA.w 'more2
0002C280 <AmiBlitz3.ab3@14817>   BSR.w makename2
0002C284 <AmiBlitz3.ab3@14818> BRA.w 'more
0002C288 <AmiBlitz3.ab3@14822>   MOVE.w #$FED3,D1          ; #65235
0002C28C <AmiBlitz3.ab3@14823>    BSR.w uselib
0002C292 <AmiBlitz3.ab3@14824>   LEA pusha3,A0
0002C298 <AmiBlitz3.ab3@14825>   LEA pusha3f,A1
0002C29C <AmiBlitz3.ab3@14826> BRA.w pokecode
0002C2A0 <AmiBlitz3.ab3@14830>   MOVE.w #$FED3,D1          ; #65235
0002C2A4 <AmiBlitz3.ab3@14831>    BSR.w uselib
0002C2AA <AmiBlitz3.ab3@14832>   LEA pulla3,A0
0002C2B0 <AmiBlitz3.ab3@14833>   LEA pulla3f,A1
0002C2B4 <AmiBlitz3.ab3@14834> BRA.w pokecode
0002C2B6 <AmiBlitz3.ab3@14838> ceos:   Dc.b $42,$1B                                       ;CLR.B   (A3)+             ;*!
0002C2BE <AmiBlitz3.ab3@14844>     CMP.b #2,optistring
0002C2C2 <AmiBlitz3.ab3@14845>    BEQ 'l10
0002C2C6 <AmiBlitz3.ab3@14847>    MOVE.w ceos(PC),D1
0002C2CA <AmiBlitz3.ab3@14848>    BSR.w writeword                                         ;clr.b (a3)
0002C2D0 <AmiBlitz3.ab3@14853>   MOVE.w regnum,D1
0002C2D2 <AmiBlitz3.ab3@14854>   LSL.w #8,D1
0002C2D4 <AmiBlitz3.ab3@14855>   LSL.w #1,D1
0002C2DC <AmiBlitz3.ab3@14856>   CMPI.w #$2,sbgot
0002C2E0 <AmiBlitz3.ab3@14857>    BCS.w sbtolong_skip2
0002C2E6 <AmiBlitz3.ab3@14858>   MOVE.w a2offset,D3                                       ;stackuse,d3 org source
0002C2EC <AmiBlitz3.ab3@14859>   SUB.w thisstuse,D3
0002C2F0 <AmiBlitz3.ab3@14860>   CMP.w #$6,D3
0002C2F4 <AmiBlitz3.ab3@14861>    BNE.w 'lenonly
0002C2FA <AmiBlitz3.ab3@14862>   OR.w movestst2,D1
0002C2FE <AmiBlitz3.ab3@14863>    BSR.w writeword
0002C304 <AmiBlitz3.ab3@14864>   LEA movestst2+2,A0
0002C30A <AmiBlitz3.ab3@14865>   LEA movestst2f,A1
0002C30E <AmiBlitz3.ab3@14866>  BRA.w pokecode2
0002C314 <AmiBlitz3.ab3@14869>    OR.w movea7dn,D1
0002C318 <AmiBlitz3.ab3@14870>    BSR.w writeword
0002C31E <AmiBlitz3.ab3@14871>   MOVE.l movea7dn+2,D1
0002C322 <AmiBlitz3.ab3@14884>   BSR writelong
0002C32A <AmiBlitz3.ab3@14887>    CMP.w #6,regnum
0002C32E <AmiBlitz3.ab3@14888>    BEQ 'l1
0002C334 <AmiBlitz3.ab3@14889>    TST.w stackpar
0002C338 <AmiBlitz3.ab3@14890>    BNE 'l1
0002C33E <AmiBlitz3.ab3@14891>    TST.b funcparloop
0002C342 <AmiBlitz3.ab3@14892>    BEQ 'l1
0002C348 <AmiBlitz3.ab3@14893>    MOVE.l #$48780000,d1
0002C34C <AmiBlitz3.ab3@14894>    BSR writelong
0002C34E <AmiBlitz3.ab3@14898>  RTS
0002C350 <AmiBlitz3.ab3@14904>      MOVE.l d1,-(a7)
0002C358 <AmiBlitz3.ab3@14905>      CMP.w #6,regnum
0002C35C <AmiBlitz3.ab3@14906>      BEQ 'l1
0002C362 <AmiBlitz3.ab3@14907>      TST.w stackpar
0002C366 <AmiBlitz3.ab3@14908>      BNE 'l1
0002C36C <AmiBlitz3.ab3@14909>      TST.b funcparloop
0002C370 <AmiBlitz3.ab3@14910>      BEQ 'l1
0002C376 <AmiBlitz3.ab3@14911>      MOVE.l #$48780000,d1
0002C37A <AmiBlitz3.ab3@14912>      BSR writelong
0002C37C <AmiBlitz3.ab3@14915>      MOVE.l (a7)+,d1
0002C382 <AmiBlitz3.ab3@14918>    OR.w movestdn,D1
0002C386 <AmiBlitz3.ab3@14919>    BSR.w writeword
0002C38A <AmiBlitz3.ab3@14920>   MOVE.w #$FED3,D1        ;#65235
0002C38E <AmiBlitz3.ab3@14921>    BSR.w uselib
0002C392 <AmiBlitz3.ab3@14922>   MOVE.w $A(A1),D1
0002C396 <AmiBlitz3.ab3@14923> BRA.w writeword
0002C398 <AmiBlitz3.ab3@14926> unknown:    Ds.w 1
0002C39E <AmiBlitz3.ab3@14929> somecode:   Dc.b $0C,$80,$00,$01,$00,$00                   ;CMPI.L  #$00010000,D0
0002C3A2 <AmiBlitz3.ab3@14930> somecode2:  Dc.b $65,$00,$00,$08                           ;BCS.W   codeisok
0002C3A8 <AmiBlitz3.ab3@14931>             Dc.b $4E,$B9,$00,$00,$00,$00                   ;JSR $00000000
0002C3AE <AmiBlitz3.ab3@14937>   TST.b debugmode
0002C3B2 <AmiBlitz3.ab3@14938>   BEQ.w sharreval
0002C3B6 <AmiBlitz3.ab3@14939>  BSR.w arreval
0002C3BA <AmiBlitz3.ab3@14942>   MOVE.w somecode(PC),D1
0002C3C0 <AmiBlitz3.ab3@14943>   OR.w regnum,D1
0002C3C4 <AmiBlitz3.ab3@14944>    BSR.w writeword
0002C3C6 <AmiBlitz3.ab3@14945>   MOVEQ.l #$01,D1
0002C3C8 <AmiBlitz3.ab3@14946>   SWAP D1
0002C3CC <AmiBlitz3.ab3@14947>    BSR.w writelong
0002C3D0 <AmiBlitz3.ab3@14948>   MOVE.l somecode2(PC),D1
0002C3D4 <AmiBlitz3.ab3@14949>    BSR.w writelong
0002C3D8 <AmiBlitz3.ab3@14950>   MOVE.w #$C309,D1     ; was #arrerr,
0002C3DC <AmiBlitz3.ab3@14951> BRA.w Atokejsr
0002C3DE <AmiBlitz3.ab3@14955>   MOVEQ.l #$02,D2
0002C3E0 <AmiBlitz3.ab3@14956>   MOVEQ.l #$00,D1
0002C3E2 <AmiBlitz3.ab3@14957>   MOVEQ.l #$00,D3
0002C3E6 <AmiBlitz3.ab3@14958> BRA.w maineval2
0002C3E8 <AmiBlitz3.ab3@14962>   MOVEQ.l #$03,D2           ;getlong
0002C3EA <AmiBlitz3.ab3@14963>   MOVEQ.l #$00,D1           ;no push
0002C3EC <AmiBlitz3.ab3@14964>   MOVEQ.l #$00,D3           ;and convert
0002C3F2 <AmiBlitz3.ab3@14965>   MOVE.b notypecheck,-(a7)
0002C3FA <AmiBlitz3.ab3@14966>   MOVE.b #1,notypecheck                                    ;typecheck need switch off for array offset calculation code
0002C400 <AmiBlitz3.ab3@14967>   JSR maineval2             ;2!* ;was bra
0002C406 <AmiBlitz3.ab3@14969>   MOVE.b (a7)+,notypecheck                                 ;now its switch to old state
0002C408 <AmiBlitz3.ab3@14970> RTS
0002C412 <AmiBlitz3.ab3@14976>   MOVE.w oldqflag,instringon
0002C418 <AmiBlitz3.ab3@14977>   MOVEA.l lastsourcepos,A5
0002C41A <AmiBlitz3.ab3@14979>   MOVEQ.l #-$01,D1
0002C41C <AmiBlitz3.ab3@14980>   MOVEQ.l #-$01,D3
0002C420 <AmiBlitz3.ab3@14981> BRA.w peval
0002C42A <AmiBlitz3.ab3@14987>   MOVE.w oldqflag,instringon
0002C430 <AmiBlitz3.ab3@14988>   MOVEA.l lastsourcepos,A5
0002C432 <AmiBlitz3.ab3@14991>   MOVEQ.l #-$01,D1
0002C434 <AmiBlitz3.ab3@14992>   MOVEQ.l #$00,D3
0002C43A <AmiBlitz3.ab3@14994>   MOVE.l leftsidetype,-(a7)
0002C440 <AmiBlitz3.ab3@14995>   MOVE.l rightsidetype,-(a7)
0002C446 <AmiBlitz3.ab3@14996>   MOVE.w leftsideflagmask,-(a7)
0002C44C <AmiBlitz3.ab3@14997>   MOVE.w rightsideflagmask,-(a7)
0002C452 <AmiBlitz3.ab3@14998>   CLR.l leftsidetype
0002C458 <AmiBlitz3.ab3@14999>   CLR.l rightsidetype
0002C45E <AmiBlitz3.ab3@15000>   CLR.w leftsideflagmask
0002C464 <AmiBlitz3.ab3@15001>   CLR.w rightsideflagmask
0002C46A <AmiBlitz3.ab3@15003>   JSR maineval                    ; was bra
0002C470 <AmiBlitz3.ab3@15005>   MOVE.w (a7)+,rightsideflagmask
0002C476 <AmiBlitz3.ab3@15006>   MOVE.w (a7)+,leftsideflagmask
0002C47C <AmiBlitz3.ab3@15007>   MOVE.l (a7)+,rightsidetype
0002C482 <AmiBlitz3.ab3@15008>   MOVE.l (a7)+,leftsidetype
0002C484 <AmiBlitz3.ab3@15009> RTS
0002C48E <AmiBlitz3.ab3@15015>   MOVE.w oldqflag,instringon
0002C494 <AmiBlitz3.ab3@15016>   MOVEA.l lastsourcepos,A5
0002C496 <AmiBlitz3.ab3@15019>   MOVEQ.l #$00,D1
0002C498 <AmiBlitz3.ab3@15020>   MOVEQ.l #-$01,D3
0002C49C <AmiBlitz3.ab3@15021> BRA.w maineval
0002C49E <AmiBlitz3.ab3@15025>   MOVEQ.l #$01,D1
0002C4A0 <AmiBlitz3.ab3@15026>   MOVEQ.l #-$01,D3
0002C4A4 <AmiBlitz3.ab3@15027> BRA.w maineval
0002C4AE <AmiBlitz3.ab3@15033>   MOVE.w oldqflag,instringon
0002C4B4 <AmiBlitz3.ab3@15034>   MOVEA.l lastsourcepos,A5
0002C4B6 <AmiBlitz3.ab3@15038>   MOVEQ.l #$00,D1      ;no push
0002C4B8 <AmiBlitz3.ab3@15039>   MOVEQ.l #$00,D3
0002C4C0 <AmiBlitz3.ab3@15060>    CMPI.w #$6,regnum
0002C4C4 <AmiBlitz3.ab3@15061>    BCS.w maineval2
0002C4C6 <AmiBlitz3.ab3@15063>    MOVEQ #0,d1
0002C4CC <AmiBlitz3.ab3@15064>    MOVE.l destpointer,a4
0002C4D2 <AmiBlitz3.ab3@15066>    CMPA.l destbufferend,A4
0002C4D6 <AmiBlitz3.ab3@15067>    BCC.w 'l2
0002C4DC <AmiBlitz3.ab3@15069>    CMP.w #$2f0a,-2(a4)                                    ;bug is a move.l a2,-(a7) before (show temp calc)?
0002C4E0 <AmiBlitz3.ab3@15071>    BNE 'l2
0002C4E4 <AmiBlitz3.ab3@15075> BRA 'l1
0002C4E6 <AmiBlitz3.ab3@15079>   MOVEQ.l #-$01,D1                                         ;do stackpar write
0002C4EE <AmiBlitz3.ab3@15082>   MOVE.w #$0006,regnum                                     ;write a func par To stack
0002C4F4 <AmiBlitz3.ab3@15088>   MOVE.w thisstuse,-(A7)
0002C4FE <AmiBlitz3.ab3@15089>   MOVE.w a2offset,thisstuse
0002C504 <AmiBlitz3.ab3@15091>   MOVE.w stackpar,-(A7)
0002C50A <AmiBlitz3.ab3@15092>   MOVE.w D1,stackpar
0002C510 <AmiBlitz3.ab3@15093>   MOVE.w sbgot,-(A7)
0002C516 <AmiBlitz3.ab3@15094>   CLR.w sbgot                ;not pushed yet
0002C51A <AmiBlitz3.ab3@15095>   MOVE.w unknown(PC),-(A7)
0002C520 <AmiBlitz3.ab3@15096>   MOVE.w D3,unknown
0002C522 <AmiBlitz3.ab3@15098>   MOVE.w D2,-(a7)
0002C528 <AmiBlitz3.ab3@15100>   MOVE.w d2,mode
0002C52C <AmiBlitz3.ab3@15102>    BSR.w eval3
0002C52E <AmiBlitz3.ab3@15103>   MOVE.w (a7)+,d3            ;type asked for
0002C532 <AmiBlitz3.ab3@15104>    BEQ.w 'noconv
0002C536 <AmiBlitz3.ab3@15105>   MOVE.w unknown(PC),D1
0002C53A <AmiBlitz3.ab3@15106>    BNE.w 'noconv
0002C53C <AmiBlitz3.ab3@15107>   EXG.l D2,D3
0002C53E <AmiBlitz3.ab3@15109>    MOVE.l a2,-(a7)
0002C544 <AmiBlitz3.ab3@15110>    TST.b curtemplabel
0002C548 <AmiBlitz3.ab3@15111>    BEQ 'l10
0002C54E <AmiBlitz3.ab3@15112>    MOVE.l asmbuff,a2
0002C554 <AmiBlitz3.ab3@15113>    CMP.w #$c,$8(a2)
0002C558 <AmiBlitz3.ab3@15114>    BEQ 'l20
0002C55E <AmiBlitz3.ab3@15115>    CMP.w #$d,$8(a2)
0002C562 <AmiBlitz3.ab3@15116>    BEQ 'l20
0002C564 <AmiBlitz3.ab3@15119>   CMP.w d2,d3
0002C568 <AmiBlitz3.ab3@15120>   BEQ 'l20
0002C56C <AmiBlitz3.ab3@15121>   BSR.w writeconvertcode
0002C572 <AmiBlitz3.ab3@15122>   CLR.b doimmediate
0002C574 <AmiBlitz3.ab3@15125>   MOVE.l (a7)+,a2
0002C57A <AmiBlitz3.ab3@15129>   MOVE.w (A7)+,unknown
0002C580 <AmiBlitz3.ab3@15130>   MOVE.w stackpar,D1
0002C584 <AmiBlitz3.ab3@15131>    BEQ.w 'skipme
0002C588 <AmiBlitz3.ab3@15132>    BMI.w 'skipme
0002C58E <AmiBlitz3.ab3@15136>   MOVE.w regnum,D1
0002C590 <AmiBlitz3.ab3@15137>   LSL.w #8,D1
0002C592 <AmiBlitz3.ab3@15138>   LSL.w #1,D1
0002C596 <AmiBlitz3.ab3@15139>   CMP.w #$7,D2
0002C59A <AmiBlitz3.ab3@15140>    BNE.w 'hi1
0002C5A2 <AmiBlitz3.ab3@15142>    CMP.b #2,optistring
0002C5A6 <AmiBlitz3.ab3@15143>    BEQ 'hi1a
0002C5A8 <AmiBlitz3.ab3@15145>   MOVE.w D1,-(A7)
0002C5AE <AmiBlitz3.ab3@15146>   OR.w getstlen,D1
0002C5B2 <AmiBlitz3.ab3@15147>    BSR.w writeword
0002C5B4 <AmiBlitz3.ab3@15148>   MOVE.w (A7)+,D1
0002C5BA <AmiBlitz3.ab3@15151>   ADDQ.w #2,a2offset                                        ;lib mode to stack
0002C5BE <AmiBlitz3.ab3@15156>   MOVE.w #$3f3c,d1
0002C5C2 <AmiBlitz3.ab3@15158>    BSR.w writeword
0002C5C4 <AmiBlitz3.ab3@15163>   MOVE.w d2,d1
0002C5CA <AmiBlitz3.ab3@15164>   MOVE.w d1,libmode
0002C5CE <AmiBlitz3.ab3@15166>    BSR.w writeword
0002C5D2 <AmiBlitz3.ab3@15168>   CMP.w #$7,D2
0002C5D6 <AmiBlitz3.ab3@15169>    BNE.w 'skipme
0002C5DC <AmiBlitz3.ab3@15170>   MOVE.w putstlen,D1
0002C5E2 <AmiBlitz3.ab3@15171>   OR.w regnum,D1
0002C5E6 <AmiBlitz3.ab3@15172>    BSR.w writeword
0002C5EA <AmiBlitz3.ab3@15175>    CMP.w #$7,D2
0002C5EE <AmiBlitz3.ab3@15176>    BNE.w 'notst
0002C5F6 <AmiBlitz3.ab3@15189>    CMP.b #2,optistring
0002C5FA <AmiBlitz3.ab3@15190>    BEQ 'skipme_l10
0002C600 <AmiBlitz3.ab3@15192>    ADDQ.w #4,a2offset     ;a length on da stack.....
0002C604 <AmiBlitz3.ab3@15193>    BSR.w sbtolong
0002C608 <AmiBlitz3.ab3@15194>  BRA.w 'notst2
0002C610 <AmiBlitz3.ab3@15199>     CMP.w #6,regnum
0002C614 <AmiBlitz3.ab3@15200>     BEQ 'skipme_l10_l1
0002C61A <AmiBlitz3.ab3@15201>     TST.b funcparloop
0002C61E <AmiBlitz3.ab3@15202>     BEQ 'skipme_l10_l1
0002C624 <AmiBlitz3.ab3@15203>     MOVE.l #$48780000,d1
0002C628 <AmiBlitz3.ab3@15204>     BSR writelong
0002C62C <AmiBlitz3.ab3@15208>  BRA.w 'notst2
0002C632 <AmiBlitz3.ab3@15211>   ADDQ.w #2,a2offset
0002C636 <AmiBlitz3.ab3@15212>  BRA 'skipme
0002C63E <AmiBlitz3.ab3@15216>   CMPI.w #$2,sbgot
0002C642 <AmiBlitz3.ab3@15217>    BCS.w 'notst2                                         ;correct stack
0002C646 <AmiBlitz3.ab3@15218>   MOVE.w ststfix(PC),D1
0002C64A <AmiBlitz3.ab3@15219>    BSR.w writeword
0002C650 <AmiBlitz3.ab3@15222>   MOVE.w (A7)+,sbgot
0002C656 <AmiBlitz3.ab3@15224>   MOVE.w stackpar,D1
0002C65A <AmiBlitz3.ab3@15225>    BPL.w 'skip
0002C65E <AmiBlitz3.ab3@15227>    CMP.b #7,d2
0002C662 <AmiBlitz3.ab3@15228>    BEQ 'notst2_l1
0002C668 <AmiBlitz3.ab3@15229>   TST.b funcparloop
0002C66C <AmiBlitz3.ab3@15230>   BEQ 'notst2_l1
0002C670 <AmiBlitz3.ab3@15231>   CMP.b #5,d2
0002C674 <AmiBlitz3.ab3@15232>   BNE 'notst2_skip
0002C67A <AmiBlitz3.ab3@15233>   TST.b fpu
0002C67E <AmiBlitz3.ab3@15234>   BEQ 'notst2_skip
0002C684 <AmiBlitz3.ab3@15235>   MOVE.l #$f2066700,d1                                     ;fmove.s fp6,d6
0002C68A <AmiBlitz3.ab3@15236>   JSR writelong
0002C68E <AmiBlitz3.ab3@15239>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0002C694 <AmiBlitz3.ab3@15240>   ADD.w parnum,d1
0002C69A <AmiBlitz3.ab3@15241>   JSR Atokejsr
0002C6A0 <AmiBlitz3.ab3@15242>    TST.w dontwrite_nomemleft
0002C6A4 <AmiBlitz3.ab3@15243>    BNE 'notst2_l1
0002C6AA <AmiBlitz3.ab3@15244>    MOVE.l data1start,d1
0002C6B0 <AmiBlitz3.ab3@15245>    MOVE.l destpointer,a4
0002C6B4 <AmiBlitz3.ab3@15246>    ADD.l d1,-4(a4)
0002C6BA <AmiBlitz3.ab3@15247>    MOVE.l destpointer,d1
0002C6BC <AmiBlitz3.ab3@15248>    SUBQ.l #4,d1
0002C6C2 <AmiBlitz3.ab3@15249>    SUB.l destbufferstart,d1
0002C6C4 <AmiBlitz3.ab3@15250>    MOVE.l d2,-(a7)
0002C6C6 <AmiBlitz3.ab3@15251>    MOVE.l d1,d2
0002C6CC <AmiBlitz3.ab3@15252>    JSR addhunkoffset
0002C6CE <AmiBlitz3.ab3@15253>    MOVE.l (a7)+,d2
0002C6D2 <AmiBlitz3.ab3@15254>  BRA 'skip
0002C6D8 <AmiBlitz3.ab3@15258>   ADDQ.w #2,a2offset
0002C6DE <AmiBlitz3.ab3@15259>   MOVE.w pushd0wd,D1
0002C6E2 <AmiBlitz3.ab3@15260>   CMP.w #$3,D2                                             ;write parameter to stack
0002C6E6 <AmiBlitz3.ab3@15261>    BCS.w 'ok
0002C6EC <AmiBlitz3.ab3@15262>   ADDQ.w #2,a2offset
0002C6F2 <AmiBlitz3.ab3@15264>   TST.b fpu
0002C6F6 <AmiBlitz3.ab3@15265>   BEQ 'notst2_nofpu
0002C6FA <AmiBlitz3.ab3@15266>   CMP.w #5,d2
0002C6FE <AmiBlitz3.ab3@15267>   BNE 'notst2_nofpu
0002C700 <AmiBlitz3.ab3@15268>   MOVEQ #0,d1
0002C706 <AmiBlitz3.ab3@15269>   MOVE.w regnum,d1
0002C708 <AmiBlitz3.ab3@15270>   ASL.l #7,d1
0002C70E <AmiBlitz3.ab3@15271>   OR.l #$f2276400,d1
0002C712 <AmiBlitz3.ab3@15272>   BSR writelong
0002C716 <AmiBlitz3.ab3@15273>  BRA 'skip
0002C71C <AmiBlitz3.ab3@15277>   MOVE.w pushd0l,D1
0002C722 <AmiBlitz3.ab3@15280>    OR.w regnum,D1
0002C726 <AmiBlitz3.ab3@15281>    BSR.w writeword                                         ;nat
0002C72C <AmiBlitz3.ab3@15284>   MOVE.w (A7)+,stackpar
0002C732 <AmiBlitz3.ab3@15285>   MOVE.w (A7)+,thisstuse
0002C734 <AmiBlitz3.ab3@15286> RTS
0002C736 <AmiBlitz3.ab3@15289> thisstuse: Ds.w 1
0002C738 <AmiBlitz3.ab3@15292> ststfix:   Dc.b $58,$4F                                    ;ADDQ.W  #4,A7
0002C73A <AmiBlitz3.ab3@15293> pushut:    Dc.b $3F,$00                                    ;MOVE.W  D0,-(A7)
0002C73E <AmiBlitz3.ab3@15298>   BSR.w eval4
0002C748 <AmiBlitz3.ab3@15299>   SUBI.l #$12,forthsp
0002C74A <AmiBlitz3.ab3@15300> RTS
0002C74C <AmiBlitz3.ab3@15304>   MOVEQ.l #$01,D1
0002C750 <AmiBlitz3.ab3@15307>       MOVEA.l precsp(PC),A1
0002C752 <AmiBlitz3.ab3@15308>       MOVE.l A0,(A1)+
0002C754 <AmiBlitz3.ab3@15309>       MOVE.w D1,(A1)+
0002C75A <AmiBlitz3.ab3@15310>       MOVE.l A1,precsp
0002C75E <AmiBlitz3.ab3@15312>    BSR.w calcloop
0002C760 <AmiBlitz3.ab3@15313>   TST.w D1
0002C764 <AmiBlitz3.ab3@15314>    BNE.w syntaxerr
0002C76A <AmiBlitz3.ab3@15316>   SUBQ.l #6,precsp           ;pop the prec set up
0002C76C <AmiBlitz3.ab3@15317> RTS
0002C770 <AmiBlitz3.ab3@15321>   BSR.w eval2
0002C774 <AmiBlitz3.ab3@15324>   MOVEA.l precsp(PC),A1
0002C776 <AmiBlitz3.ab3@15325>   CMP.w -(A1),D1
0002C77A <AmiBlitz3.ab3@15326>    BHI.w 'higher
0002C77C <AmiBlitz3.ab3@15327>  RTS
0002C780 <AmiBlitz3.ab3@15333>   MOVEA.l precsp(PC),A1
0002C782 <AmiBlitz3.ab3@15334>   MOVE.l A0,(A1)+
0002C784 <AmiBlitz3.ab3@15335>   MOVE.w D1,(A1)+
0002C78A <AmiBlitz3.ab3@15336>   MOVE.l A1,precsp
0002C78C <AmiBlitz3.ab3@15338>   MOVE.w D2,-(A7)
0002C792 <AmiBlitz3.ab3@15339>   ADDQ.w #1,regnum
0002C796 <AmiBlitz3.ab3@15340>    BSR.w calcloop               ;constant optimizer
0002C79C <AmiBlitz3.ab3@15341>   SUBQ.w #1,regnum
0002C79E <AmiBlitz3.ab3@15342>   MOVE.w (A7)+,D3
0002C7A2 <AmiBlitz3.ab3@15343>   MOVEM.l D1/A0,-(A7)
0002C7A6 <AmiBlitz3.ab3@15344>    BEQ.w 'skip
0002C7AA <AmiBlitz3.ab3@15345>    BSR.w convtypef     ;could possibly fuck regat+1 !
0002C7AE <AmiBlitz3.ab3@15348>   BSR.w popprec
0002C7B2 <AmiBlitz3.ab3@15349>   BSR.w writecode
0002C7B6 <AmiBlitz3.ab3@15356>   MOVEA.l forthsp(PC),A0
0002C7BA <AmiBlitz3.ab3@15357>   MOVE.w -$2(A0),D1
0002C7BE <AmiBlitz3.ab3@15358>   OR.w -$14(A0),D1
0002C7C2 <AmiBlitz3.ab3@15359>   MOVE.w D1,-$14(A0)
0002C7C6 <AmiBlitz3.ab3@15360>    BNE.w 'no
0002C7CC <AmiBlitz3.ab3@15361>   MOVE.w dontwrite_nomemleft,D1
0002C7D0 <AmiBlitz3.ab3@15362>    BNE.w 'no
0002C7D4 <AmiBlitz3.ab3@15369>    MOVEA.l -$24(A0),A0
0002C910 <AmiBlitz3.ab3@15371>   !newcalc
0002C914 <AmiBlitz3.ab3@15372>    BEQ 'l10
0002C918 <AmiBlitz3.ab3@15373>    MOVEA.l forthsp(PC),A0
0002C920 <AmiBlitz3.ab3@15374>    MOVE.w -$18(A0),lasta6
0002C928 <AmiBlitz3.ab3@15375>    MOVE.l -$1C(A0),lasta6
0002C92C <AmiBlitz3.ab3@15376>    MOVEA.l -$24(A0),A0
0002C932 <AmiBlitz3.ab3@15377>    MOVE.l A0,destpointer
0002C938 <AmiBlitz3.ab3@15378>    MOVEA.l _mathffpbase,A6
0002C93E <AmiBlitz3.ab3@15379>    MOVEA.l ffplib,A1
0002C942 <AmiBlitz3.ab3@15380>  BRA 'cont1
0002C946 <AmiBlitz3.ab3@15384>   MOVE.w #$2000,D1
0002C94C <AmiBlitz3.ab3@15385>   OR.w regnum,D1            ; was regat(pc),
0002C950 <AmiBlitz3.ab3@15386>    BSR.w writeword
0002C952 <AmiBlitz3.ab3@15388>     MOVEQ #0,d1
0002C958 <AmiBlitz3.ab3@15389>     MOVE.w regnum,D1
0002C95A <AmiBlitz3.ab3@15390>     ASL.l #8,d1
0002C95C <AmiBlitz3.ab3@15391>     ASL.l #2,d1
0002C962 <AmiBlitz3.ab3@15392>     OR.l #$f2000000,d1
0002C966 <AmiBlitz3.ab3@15393>     BSR writelong
0002C96A <AmiBlitz3.ab3@15395>   MOVE.w #$4E75,D1
0002C96E <AmiBlitz3.ab3@15396>    BSR.w writeword
0002C976 <AmiBlitz3.ab3@15397>   MOVE.w -$18(A0),lasta6
0002C97E <AmiBlitz3.ab3@15398>   MOVE.l -$1C(A0),lasta6
0002C982 <AmiBlitz3.ab3@15399>   MOVEA.l -$24(A0),A0
0002C988 <AmiBlitz3.ab3@15400>   MOVE.l A0,destpointer
0002C98C <AmiBlitz3.ab3@15402>   MOVEM.l D2/A5,-(A7)
0002C992 <AmiBlitz3.ab3@15404>   MOVEA.l _mathffpbase,A6
0002C998 <AmiBlitz3.ab3@15405>   MOVEA.l ffplib,A1
0002C99C <AmiBlitz3.ab3@15406>   MOVE.w $A(A1),D0
0002C9A2 <AmiBlitz3.ab3@15407>   LEA _mathffpbase,A5
0002C9A4 <AmiBlitz3.ab3@15408>   SUBA.w D0,A5
0002C9AA <AmiBlitz3.ab3@15410>   JSR Aclearcache                                          ;neg +
0002C9B0 <AmiBlitz3.ab3@15412>   CLR.l load_var_addr
0002C9B6 <AmiBlitz3.ab3@15413>   CLR.l imm_addr
0002C9BC <AmiBlitz3.ab3@15414>   TST.w dontwrite_nomemleft
0002C9C0 <AmiBlitz3.ab3@15415>   BNE '1
0002C9C2 <AmiBlitz3.ab3@15417>   JSR (A0)                                                 ;calc constant inline expression
0002C9C6 <AmiBlitz3.ab3@15421>   MOVEM.l (A7)+,D2/A5
0002C9CC <AmiBlitz3.ab3@15428>   MOVE.b d2,isconstantvalue
0002C9D2 <AmiBlitz3.ab3@15429>   MOVE.l d0,lastconstantvalue
0002C9D8 <AmiBlitz3.ab3@15431>   MOVE.w regnum,D1
0002C9DA <AmiBlitz3.ab3@15432>   LSL.w #8,D1
0002C9DC <AmiBlitz3.ab3@15433>   LSL.w #1,D1
0002C9E0 <AmiBlitz3.ab3@15434>   ORI.w #$203C,D1      ;move.l #x,dn
0002C9E4 <AmiBlitz3.ab3@15435>   CMP.w #$3,D2
0002C9E8 <AmiBlitz3.ab3@15436>    BCC.w 'ok
0002C9EC <AmiBlitz3.ab3@15437>   ORI.w #$1000,D1
0002C9F0 <AmiBlitz3.ab3@15438>    BSR.w writeword
0002C9F2 <AmiBlitz3.ab3@15439>   MOVE.w D0,D1
0002C9F6 <AmiBlitz3.ab3@15440>    BSR.w writeword
0002C9FA <AmiBlitz3.ab3@15441>  BRA.w 'mode
0002CA00 <AmiBlitz3.ab3@15445>   TST.b iee                                                ;fpu constant
0002CA04 <AmiBlitz3.ab3@15446>   BEQ 'l10b
0002CA08 <AmiBlitz3.ab3@15447>   CMP.b #5,d2
0002CA0C <AmiBlitz3.ab3@15448>   BNE 'l10b
0002CA0E <AmiBlitz3.ab3@15449>   MOVEQ #0,d1
0002CA14 <AmiBlitz3.ab3@15450>   MOVE.w regnum,D1
0002CA16 <AmiBlitz3.ab3@15451>   ASL.l #7,d1
0002CA1C <AmiBlitz3.ab3@15452>   OR.l #$f23c5400,d1
0002CA20 <AmiBlitz3.ab3@15453>   BSR writelong
0002CA22 <AmiBlitz3.ab3@15454>   SUBQ.l #8,a7
0002CA28 <AmiBlitz3.ab3@15455>   fmove.d fp0,0(a7)
0002CA2A <AmiBlitz3.ab3@15456>   MOVE.l (a7)+,d1
0002CA2E <AmiBlitz3.ab3@15457>   BSR writelong
0002CA30 <AmiBlitz3.ab3@15458>   MOVE.l (a7)+,d1
0002CA34 <AmiBlitz3.ab3@15459>   BSR writelong
0002CA38 <AmiBlitz3.ab3@15460>  BRA 'mode
0002CA3C <AmiBlitz3.ab3@15464>   BSR.w writeword
0002CA3E <AmiBlitz3.ab3@15465>   MOVE.l D0,D1
0002CA42 <AmiBlitz3.ab3@15466>   BSR.w writelong
0002CA46 <AmiBlitz3.ab3@15473>   MOVEA.l forthsp(PC),A0
0002CA4A <AmiBlitz3.ab3@15474>   MOVEA.l -$20(A0),A3
0002CA50 <AmiBlitz3.ab3@15475>   MOVEA.l hunkoffsetbase,A2
0002CA56 <AmiBlitz3.ab3@15476>   MOVE.l A3,hunkoffsetbase
0002CA5C <AmiBlitz3.ab3@15477>   MOVEA.l _execbase,A6
0002CA5E <AmiBlitz3.ab3@15480>   CMPA.l A3,A2
0002CA62 <AmiBlitz3.ab3@15481>   BEQ.w 'done
0002CA68 <AmiBlitz3.ab3@15482>   SUBQ.l #1,hunkoffsetcounter
0002CA6A <AmiBlitz3.ab3@15483>   MOVEA.l A2,A1
0002CA6C <AmiBlitz3.ab3@15484>   MOVEA.l (A2),A2
0002CA6E <AmiBlitz3.ab3@15485>   MOVEQ.l #$8,D0
0002CA74 <AmiBlitz3.ab3@15487>   MOVE.l mempool2,a0
0002CA78 <AmiBlitz3.ab3@15488>    JSR _FreePooled(A6)
0002CA7C <AmiBlitz3.ab3@15491>  BRA.w 'loop
0002CA80 <AmiBlitz3.ab3@15494>   MOVEA.l forthsp(PC),A0
0002CA84 <AmiBlitz3.ab3@15497>   LEA -$12(A0),A0
0002CA8A <AmiBlitz3.ab3@15498>   MOVE.l A0,forthsp
0002CA8E <AmiBlitz3.ab3@15500>   MOVEM.l (A7)+,D1/A0
0002CA92 <AmiBlitz3.ab3@15501>   BSR.w reget
0002CA96 <AmiBlitz3.ab3@15502> BRA.w 'more
0002CA9A <AmiBlitz3.ab3@15511>   BSR.w getelement
0002CA9C <AmiBlitz3.ab3@15513>   TST.w d0
0002CAA0 <AmiBlitz3.ab3@15514>   BEQ 'done
0002CAA4 <AmiBlitz3.ab3@15515>   CMP.b #",",d0
0002CAA8 <AmiBlitz3.ab3@15516>   BEQ 'done
0002CAAC <AmiBlitz3.ab3@15517>   CMP.b #"@",d0                                            ;expandline @@
0002CAB0 <AmiBlitz3.ab3@15518>   BEQ 'done
0002CAB6 <AmiBlitz3.ab3@15521>   LEA operators,A0
0002CAB8 <AmiBlitz3.ab3@15524>    TST.w (A0)
0002CABC <AmiBlitz3.ab3@15525>    BEQ.w 'done
0002CABE <AmiBlitz3.ab3@15526>   CMP.w (A0),D0
0002CAC2 <AmiBlitz3.ab3@15527>    BEQ.w 'found
0002CAC6 <AmiBlitz3.ab3@15528>   LEA $20(A0),A0
0002CACA <AmiBlitz3.ab3@15529>  BRA.w 'loop
0002CACC <AmiBlitz3.ab3@15532>   MOVEQ.l #$00,D1
0002CACE <AmiBlitz3.ab3@15533>  RTS
0002CAD2 <AmiBlitz3.ab3@15536>   CMP.w #$3C,D0
0002CAD6 <AmiBlitz3.ab3@15537>    BNE.w 'notlt
0002CADA <AmiBlitz3.ab3@15538>    BSR.w get1bytemain
0002CADE <AmiBlitz3.ab3@15539>   CMP.w #$3D,D0
0002CAE2 <AmiBlitz3.ab3@15540>    BNE.w 'notlteq
0002CAE8 <AmiBlitz3.ab3@15541>   LEA ople,A0
0002CAEC <AmiBlitz3.ab3@15542>  BRA.w 'found2
0002CAF0 <AmiBlitz3.ab3@15545>   CMP.w #$3E,D0          ;'>'
0002CAF4 <AmiBlitz3.ab3@15546>    BNE.w 'found3
0002CAF8 <AmiBlitz3.ab3@15547>  BRA.w 'isne
0002CAFC <AmiBlitz3.ab3@15550>   CMP.w #$3E,D0          ;'>'
0002CB00 <AmiBlitz3.ab3@15551>    BNE.w 'notqt
0002CB04 <AmiBlitz3.ab3@15552>    BSR.w get1bytemain
0002CB08 <AmiBlitz3.ab3@15553>   CMP.w #$3D,D0          ;'='
0002CB0C <AmiBlitz3.ab3@15554>    BNE.w 'notgteq
0002CB12 <AmiBlitz3.ab3@15555>   LEA opge,A0
0002CB16 <AmiBlitz3.ab3@15556>  BRA.w 'found2
0002CB1A <AmiBlitz3.ab3@15559>   CMP.w #$3C,D0          ;'<'
0002CB1E <AmiBlitz3.ab3@15560>    BEQ.w 'isne
0002CB28 <AmiBlitz3.ab3@15565>     MOVE.w oldqflag,instringon
0002CB2E <AmiBlitz3.ab3@15566>     MOVEA.l lastsourcepos,A5
0002CB32 <AmiBlitz3.ab3@15568>  BRA.w 'found2
0002CB36 <AmiBlitz3.ab3@15571>   CMP.w #$3D,D0          ;'='
0002CB3A <AmiBlitz3.ab3@15572>    BNE.w 'found2
0002CB3E <AmiBlitz3.ab3@15573>    BSR.w get1bytemain
0002CB42 <AmiBlitz3.ab3@15574>   CMP.w #$3E,D0          ;'>'
0002CB46 <AmiBlitz3.ab3@15575>    BNE.w 'noteqgt
0002CB4C <AmiBlitz3.ab3@15576>   LEA opge,A0
0002CB50 <AmiBlitz3.ab3@15577>  BRA.w 'found2
0002CB54 <AmiBlitz3.ab3@15580>   CMP.w #$3C,D0          ;'<'
0002CB58 <AmiBlitz3.ab3@15581>   BNE.w 'found3
0002CB5E <AmiBlitz3.ab3@15584>   LEA opne,A0
0002CB62 <AmiBlitz3.ab3@15590>   MOVE.w $1E(A0),D1
0002CB64 <AmiBlitz3.ab3@15591> RTS
0002CB66 <AmiBlitz3.ab3@15600>   MOVE.w d2,d1
0002CB68 <AmiBlitz3.ab3@15601>   SUBQ.w #1,D1
0002CB6C <AmiBlitz3.ab3@15602>    BMI.w illoperr
0002CB6E <AmiBlitz3.ab3@15603>   LSL.w #2,D1
0002CB72 <AmiBlitz3.ab3@15604>   MOVE.l $2(A0,D1.W),D1
0002CB76 <AmiBlitz3.ab3@15605>    BEQ.w illoperr
0002CB78 <AmiBlitz3.ab3@15606>   MOVEA.l D1,A0
0002CB7A <AmiBlitz3.ab3@15607> JMP (A0)
0002CB7E <AmiBlitz3.ab3@15623>   MOVEA.l precsp(PC),A1
0002CB84 <AmiBlitz3.ab3@15624>   CMPA.l #precstackf,A1
0002CB88 <AmiBlitz3.ab3@15625>    BCC.w pserr
0002CB8A <AmiBlitz3.ab3@15626>   MOVE.w -(A1),D1
0002CB8C <AmiBlitz3.ab3@15627>   MOVEA.l -(A1),A0
0002CB92 <AmiBlitz3.ab3@15628>   MOVE.l A1,precsp
0002CB94 <AmiBlitz3.ab3@15629> RTS
0002CB98 <AmiBlitz3.ab3@15632> precsp:      Dc.l precstack
0002CC94 <AmiBlitz3.ab3@15633> precstack:   Ds.l 63                                       ;ds 6*32 org source   ;Lotsa Room?
0002CD18 <AmiBlitz3.ab3@15634>              Ds.l 33
0002CD1A <AmiBlitz3.ab3@15640> mseq:  SEQ D0
0002CD1C <AmiBlitz3.ab3@15641> msne:    SNE D0
0002CD1E <AmiBlitz3.ab3@15642> mslt:    SLT D0
0002CD20 <AmiBlitz3.ab3@15643> msle:    SLE D0
0002CD22 <AmiBlitz3.ab3@15644> msgt:    SGT D0
0002CD24 <AmiBlitz3.ab3@15645> msge:    SGE D0
0002CD26 <AmiBlitz3.ab3@15647> cmp0:    CMP.b D0,D0
0002CD28 <AmiBlitz3.ab3@15648> cmp1:    CMP.w D0,D0
0002CD2A <AmiBlitz3.ab3@15649> cmp2:    CMP.l D0,D0
0002CD2E <AmiBlitz3.ab3@15653>   MOVE.w cmp0(PC),D1
0002CD32 <AmiBlitz3.ab3@15654> BRA.w doeqcmp2                                            ;writecompare
0002CD36 <AmiBlitz3.ab3@15658>   MOVE.w cmp0(PC),D1
0002CD3A <AmiBlitz3.ab3@15659> BRA.w donecmp2
0002CD3E <AmiBlitz3.ab3@15663>   MOVE.w cmp0(PC),D1
0002CD42 <AmiBlitz3.ab3@15664> BRA.w doltcmp2
0002CD46 <AmiBlitz3.ab3@15668>   MOVE.w cmp0(PC),D1
0002CD4A <AmiBlitz3.ab3@15669> BRA.w dolecmp2
0002CD4E <AmiBlitz3.ab3@15673>   MOVE.w cmp0(PC),D1
0002CD52 <AmiBlitz3.ab3@15674> BRA.w dogtcmp2
0002CD56 <AmiBlitz3.ab3@15679>   MOVE.w cmp0(PC),D1
0002CD5A <AmiBlitz3.ab3@15680> BRA.w dogecmp2
0002CD5E <AmiBlitz3.ab3@15684>   MOVE.w cmp1(PC),D1
0002CD62 <AmiBlitz3.ab3@15685> BRA.w doeqcmp2
0002CD66 <AmiBlitz3.ab3@15689>   MOVE.w cmp1(PC),D1
0002CD6A <AmiBlitz3.ab3@15690> BRA.w donecmp2
0002CD6E <AmiBlitz3.ab3@15694>   MOVE.w cmp1(PC),D1
0002CD72 <AmiBlitz3.ab3@15695> BRA.w doltcmp2
0002CD76 <AmiBlitz3.ab3@15699>   MOVE.w cmp1(PC),D1
0002CD7A <AmiBlitz3.ab3@15700> BRA.w dolecmp2
0002CD7E <AmiBlitz3.ab3@15704>   MOVE.w cmp1(PC),D1
0002CD82 <AmiBlitz3.ab3@15705> BRA.w dogtcmp2
0002CD86 <AmiBlitz3.ab3@15710>   MOVE.w cmp1(PC),D1
0002CD8A <AmiBlitz3.ab3@15711> BRA.w dogecmp2
0002CD8E <AmiBlitz3.ab3@15715>   MOVE.w cmp2(PC),D1                                   ;writecomparelong
0002CD92 <AmiBlitz3.ab3@15716> BRA doeqcmp2
0002CD96 <AmiBlitz3.ab3@15719>   MOVE.w cmp2(PC),D1
0002CD9A <AmiBlitz3.ab3@15720> BRA donecmp2
0002CD9E <AmiBlitz3.ab3@15724>   MOVE.w cmp2(PC),D1
0002CDA2 <AmiBlitz3.ab3@15725> BRA.w doltcmp2
0002CDA6 <AmiBlitz3.ab3@15729>   MOVE.w cmp2(PC),D1
0002CDAA <AmiBlitz3.ab3@15730> BRA.w dolecmp2
0002CDAE <AmiBlitz3.ab3@15734>   MOVE.w cmp2(PC),D1
0002CDB2 <AmiBlitz3.ab3@15735> BRA.w dogtcmp2
0002CDB6 <AmiBlitz3.ab3@15739>   MOVE.w cmp2(PC),D1
0002CDBA <AmiBlitz3.ab3@15740> BRA.w dogecmp2
0002CDBC <AmiBlitz3.ab3@15743> cfregat:  Ds.w 1
0002CDC2 <AmiBlitz3.ab3@15747>   MOVE.w D1,libjsr+2
0002CDC6 <AmiBlitz3.ab3@15748>    BSR.w savereg
0002CDC8 <AmiBlitz3.ab3@15749>   MOVE.l D4,D1
0002CDCC <AmiBlitz3.ab3@15750>    BSR.w pokemovem
0002CDD0 <AmiBlitz3.ab3@15751>   MOVE.w #$C900,D1
0002CDD4 <AmiBlitz3.ab3@15752>    BSR.w Atokejsr
0002CDD8 <AmiBlitz3.ab3@15753>    BSR.w ritetod0
0002CDDE <AmiBlitz3.ab3@15754>   MOVE.l libjsr,D1
0002CDE2 <AmiBlitz3.ab3@15755>    BSR.w writelong
0002CDEC <AmiBlitz3.ab3@15756>   MOVE.w regnum,cfregat
0002CDF2 <AmiBlitz3.ab3@15757>   CLR.w regnum
0002CDF4 <AmiBlitz3.ab3@15758> RTS
0002CDFE <AmiBlitz3.ab3@15762>   MOVE.w cfregat,regnum
0002CE02 <AmiBlitz3.ab3@15763>    BSR.w ritefromd0
0002CE04 <AmiBlitz3.ab3@15764>   MOVE.l D5,D1
0002CE08 <AmiBlitz3.ab3@15765> BRA.w pokemovem
0002CE0A <AmiBlitz3.ab3@15769>    MOVEQ.l #-$2A,D1
0002CE10 <AmiBlitz3.ab3@15770>    TST.b fpu
0002CE14 <AmiBlitz3.ab3@15771>    BEQ 'nofpu
0002CE16 <AmiBlitz3.ab3@15772>    MOVEQ #0,d1
0002CE1C <AmiBlitz3.ab3@15773>    MOVE.w regnum,d1
0002CE1E <AmiBlitz3.ab3@15774>    MOVE.l d1,d2
0002CE20 <AmiBlitz3.ab3@15775>    ASL.l #7,d1
0002CE22 <AmiBlitz3.ab3@15776>    ADDQ  #1,d2
0002CE24 <AmiBlitz3.ab3@15777>    ASL.l #8,d2
0002CE26 <AmiBlitz3.ab3@15778>    ASL.l #2,d2
0002CE28 <AmiBlitz3.ab3@15779>    OR.l d2,d1
0002CE2E <AmiBlitz3.ab3@15780>    OR.l #$f2000038,d1
0002CE34 <AmiBlitz3.ab3@15781>    JSR writelong
0002CE38 <AmiBlitz3.ab3@15782>    MOVE.w #$f240,d1
0002CE3E <AmiBlitz3.ab3@15783>    OR.w regnum,d1
0002CE42 <AmiBlitz3.ab3@15784>    BSR writeword
0002CE44 <AmiBlitz3.ab3@15785>    MOVEQ.l #1,d2
0002CE48 <AmiBlitz3.ab3@15786>    MOVE.w #1,d1                                            ;fpu comp fseq
0002CE4C <AmiBlitz3.ab3@15787>    BSR writeword
0002CE4E <AmiBlitz3.ab3@15788>  RTS
0002CE52 <AmiBlitz3.ab3@15791>    BSR.w docflib
0002CE56 <AmiBlitz3.ab3@15792>    BSR.w doeqcmp
0002CE5A <AmiBlitz3.ab3@15793> BRA.w docflib2
0002CE5C <AmiBlitz3.ab3@15797>   MOVEQ.l #-$2A,D1
0002CE62 <AmiBlitz3.ab3@15798>   TST.b fpu
0002CE66 <AmiBlitz3.ab3@15799>    BEQ 'nofpu
0002CE68 <AmiBlitz3.ab3@15800>    MOVEQ #0,d1
0002CE6E <AmiBlitz3.ab3@15801>    MOVE.w regnum,d1
0002CE70 <AmiBlitz3.ab3@15802>    MOVE.l d1,d2
0002CE72 <AmiBlitz3.ab3@15803>    ASL.l #7,d1
0002CE74 <AmiBlitz3.ab3@15804>    ADDQ  #1,d2
0002CE76 <AmiBlitz3.ab3@15805>    ASL.l #8,d2
0002CE78 <AmiBlitz3.ab3@15806>    ASL.l #2,d2
0002CE7A <AmiBlitz3.ab3@15807>    OR.l d2,d1
0002CE80 <AmiBlitz3.ab3@15808>    OR.l #$f2000038,d1
0002CE86 <AmiBlitz3.ab3@15809>    JSR writelong
0002CE8A <AmiBlitz3.ab3@15810>    MOVE.w #$f240,d1
0002CE90 <AmiBlitz3.ab3@15811>    OR.w regnum,d1
0002CE94 <AmiBlitz3.ab3@15812>    BSR writeword
0002CE9A <AmiBlitz3.ab3@15813>    MOVE.l #1,d2
0002CE9E <AmiBlitz3.ab3@15814>    MOVE.w #$e,d1                                           ;fpu comp fsne
0002CEA2 <AmiBlitz3.ab3@15815>    BSR writeword
0002CEA4 <AmiBlitz3.ab3@15816>  RTS
0002CEA8 <AmiBlitz3.ab3@15819>    BSR.w docflib
0002CEAC <AmiBlitz3.ab3@15820>    BSR.w donecmp
0002CEB0 <AmiBlitz3.ab3@15821> BRA.w docflib2
0002CEB2 <AmiBlitz3.ab3@15825>   MOVEQ.l #-$2A,D1
0002CEB8 <AmiBlitz3.ab3@15826>     TST.b fpu
0002CEBC <AmiBlitz3.ab3@15827>    BEQ 'nofpu
0002CEBE <AmiBlitz3.ab3@15828>    MOVEQ #0,d1
0002CEC4 <AmiBlitz3.ab3@15829>    MOVE.w regnum,d1
0002CEC6 <AmiBlitz3.ab3@15830>    MOVE.l d1,d2
0002CEC8 <AmiBlitz3.ab3@15831>    ASL.l #7,d1
0002CECA <AmiBlitz3.ab3@15832>    ADDQ  #1,d2
0002CECC <AmiBlitz3.ab3@15833>    ASL.l #8,d2
0002CECE <AmiBlitz3.ab3@15834>    ASL.l #2,d2
0002CED0 <AmiBlitz3.ab3@15835>    OR.l d2,d1
0002CED6 <AmiBlitz3.ab3@15836>    OR.l #$f2000038,d1
0002CEDC <AmiBlitz3.ab3@15837>    JSR writelong
0002CEE0 <AmiBlitz3.ab3@15838>    MOVE.w #$f240,d1
0002CEE6 <AmiBlitz3.ab3@15839>    OR.w regnum,d1
0002CEEA <AmiBlitz3.ab3@15840>    BSR writeword
0002CEF0 <AmiBlitz3.ab3@15841>    MOVE.l #$1,d2
0002CEF4 <AmiBlitz3.ab3@15842>    MOVE.w #$14,d1                                          ;fpu comp fslt
0002CEF8 <AmiBlitz3.ab3@15843>    BSR writeword
0002CEFA <AmiBlitz3.ab3@15844>  RTS
0002CEFE <AmiBlitz3.ab3@15847>    BSR.w docflib
0002CF02 <AmiBlitz3.ab3@15848>    BSR.w doltcmp
0002CF06 <AmiBlitz3.ab3@15849> BRA.w docflib2
0002CF08 <AmiBlitz3.ab3@15853>   MOVEQ.l #-$2A,D1
0002CF0E <AmiBlitz3.ab3@15854>   TST.b fpu
0002CF12 <AmiBlitz3.ab3@15855>    BEQ 'nofpu
0002CF14 <AmiBlitz3.ab3@15856>    MOVEQ #0,d1
0002CF1A <AmiBlitz3.ab3@15857>    MOVE.w regnum,d1
0002CF1C <AmiBlitz3.ab3@15858>    MOVE.l d1,d2
0002CF1E <AmiBlitz3.ab3@15859>    ASL.l #7,d1
0002CF20 <AmiBlitz3.ab3@15860>    ADDQ  #1,d2
0002CF22 <AmiBlitz3.ab3@15861>    ASL.l #8,d2
0002CF24 <AmiBlitz3.ab3@15862>    ASL.l #2,d2
0002CF26 <AmiBlitz3.ab3@15863>    OR.l d2,d1
0002CF2C <AmiBlitz3.ab3@15864>    OR.l #$f2000038,d1
0002CF32 <AmiBlitz3.ab3@15865>    JSR writelong
0002CF36 <AmiBlitz3.ab3@15866>    MOVE.w #$f240,d1
0002CF3C <AmiBlitz3.ab3@15867>    OR.w regnum,d1
0002CF40 <AmiBlitz3.ab3@15868>    BSR writeword
0002CF46 <AmiBlitz3.ab3@15869>    MOVE.l #1,d2
0002CF4A <AmiBlitz3.ab3@15870>    MOVE.w #$15,d1                                          ;fpu comp fsle
0002CF4E <AmiBlitz3.ab3@15871>    BSR writeword
0002CF50 <AmiBlitz3.ab3@15872>  RTS
0002CF54 <AmiBlitz3.ab3@15875>    BSR.w docflib
0002CF58 <AmiBlitz3.ab3@15876>    BSR.w dolecmp
0002CF5C <AmiBlitz3.ab3@15877> BRA.w docflib2
0002CF5E <AmiBlitz3.ab3@15881>   MOVEQ.l #-$2A,D1
0002CF64 <AmiBlitz3.ab3@15882>    TST.b fpu
0002CF68 <AmiBlitz3.ab3@15883>    BEQ 'nofpu
0002CF6A <AmiBlitz3.ab3@15884>     MOVEQ #0,d1
0002CF70 <AmiBlitz3.ab3@15885>    MOVE.w regnum,d1
0002CF72 <AmiBlitz3.ab3@15886>    MOVE.l d1,d2
0002CF74 <AmiBlitz3.ab3@15887>    ASL.l #7,d1
0002CF76 <AmiBlitz3.ab3@15888>    ADDQ  #1,d2
0002CF78 <AmiBlitz3.ab3@15889>    ASL.l #8,d2
0002CF7A <AmiBlitz3.ab3@15890>    ASL.l #2,d2
0002CF7C <AmiBlitz3.ab3@15891>    OR.l d2,d1
0002CF82 <AmiBlitz3.ab3@15892>    OR.l #$f2000038,d1
0002CF88 <AmiBlitz3.ab3@15893>    JSR writelong
0002CF8C <AmiBlitz3.ab3@15894>    MOVE.w #$f240,d1
0002CF92 <AmiBlitz3.ab3@15895>    OR.w regnum,d1
0002CF96 <AmiBlitz3.ab3@15896>    BSR writeword
0002CF9C <AmiBlitz3.ab3@15897>    MOVE.l #1,d2
0002CFA0 <AmiBlitz3.ab3@15898>    MOVE.w #$12,d1                                          ;fpu comp fsgt
0002CFA4 <AmiBlitz3.ab3@15899>    BSR writeword
0002CFA6 <AmiBlitz3.ab3@15900>  RTS
0002CFAA <AmiBlitz3.ab3@15903>    BSR.w docflib
0002CFAE <AmiBlitz3.ab3@15904>    BSR.w dogtcmp
0002CFB2 <AmiBlitz3.ab3@15905> BRA.w docflib2
0002CFB4 <AmiBlitz3.ab3@15909>   MOVEQ.l #-$2A,D1
0002CFBA <AmiBlitz3.ab3@15910>  TST.b fpu
0002CFBE <AmiBlitz3.ab3@15911>    BEQ 'nofpu
0002CFC0 <AmiBlitz3.ab3@15912>    MOVEQ #0,d1
0002CFC6 <AmiBlitz3.ab3@15913>    MOVE.w regnum,d1
0002CFC8 <AmiBlitz3.ab3@15914>    MOVE.l d1,d2
0002CFCA <AmiBlitz3.ab3@15915>    ASL.l #7,d1
0002CFCC <AmiBlitz3.ab3@15916>    ADDQ  #1,d2
0002CFCE <AmiBlitz3.ab3@15917>    ASL.l #8,d2
0002CFD0 <AmiBlitz3.ab3@15918>    ASL.l #2,d2
0002CFD2 <AmiBlitz3.ab3@15919>    OR.l d2,d1
0002CFD8 <AmiBlitz3.ab3@15920>    OR.l #$f2000038,d1
0002CFDE <AmiBlitz3.ab3@15921>    JSR writelong
0002CFE2 <AmiBlitz3.ab3@15922>    MOVE.w #$f240,d1
0002CFE8 <AmiBlitz3.ab3@15923>    OR.w regnum,d1
0002CFEC <AmiBlitz3.ab3@15924>    BSR writeword
0002CFF2 <AmiBlitz3.ab3@15925>    MOVE.l #1,d2
0002CFF6 <AmiBlitz3.ab3@15926>    MOVE.w #$13,d1                                          ;fpu comp fsge
0002CFFA <AmiBlitz3.ab3@15927>    BSR writeword
0002CFFC <AmiBlitz3.ab3@15928>  RTS
0002D000 <AmiBlitz3.ab3@15931>    BSR.w docflib
0002D004 <AmiBlitz3.ab3@15932>    BSR.w dogecmp
0002D008 <AmiBlitz3.ab3@15933> BRA.w docflib2
0002D00E <AmiBlitz3.ab3@15938>   MOVE.l #$CE00,D1
0002D014 <AmiBlitz3.ab3@15939>    MOVE.l d1,lastinstruction
0002D018 <AmiBlitz3.ab3@15940>    BSR.w Atokejsr
0002D01C <AmiBlitz3.ab3@15941> BRA.w doeqcmp
0002D022 <AmiBlitz3.ab3@15945>   MOVE.l #$CE00,D1
0002D028 <AmiBlitz3.ab3@15946>    MOVE.l d1,lastinstruction
0002D02C <AmiBlitz3.ab3@15947>    BSR.w Atokejsr
0002D030 <AmiBlitz3.ab3@15948> BRA.w donecmp
0002D036 <AmiBlitz3.ab3@15952>   MOVE.l #$CE00,D1
0002D03C <AmiBlitz3.ab3@15953>    MOVE.l d1,lastinstruction
0002D040 <AmiBlitz3.ab3@15954>    BSR.w Atokejsr
0002D044 <AmiBlitz3.ab3@15955> BRA.w doltcmp
0002D04A <AmiBlitz3.ab3@15959>   MOVE.l #$CE00,D1
0002D050 <AmiBlitz3.ab3@15960>    MOVE.l d1,lastinstruction
0002D054 <AmiBlitz3.ab3@15961>    BSR.w Atokejsr
0002D058 <AmiBlitz3.ab3@15962> BRA.w dolecmp
0002D05E <AmiBlitz3.ab3@15966>   MOVE.l #$CE00,D1
0002D064 <AmiBlitz3.ab3@15967>    MOVE.l d1,lastinstruction
0002D068 <AmiBlitz3.ab3@15968>    BSR.w Atokejsr
0002D06C <AmiBlitz3.ab3@15969> BRA.w dogtcmp
0002D072 <AmiBlitz3.ab3@15973>   MOVE.l #$CE00,D1
0002D078 <AmiBlitz3.ab3@15974>    MOVE.l d1,lastinstruction
0002D07C <AmiBlitz3.ab3@15975>    BSR.w Atokejsr
0002D080 <AmiBlitz3.ab3@15976> BRA.w dogecmp
0002D086 <AmiBlitz3.ab3@15981>   TST.b fast                                               ;compare
0002D08A <AmiBlitz3.ab3@15982>   BEQ 'org
0002D090 <AmiBlitz3.ab3@15986>   MOVE.l destpointer,a0
0002D096 <AmiBlitz3.ab3@15987>   SUB.l imm_addr,a0
0002D09C <AmiBlitz3.ab3@15988>   CMP.l #6,a0
0002D0A0 <AmiBlitz3.ab3@15989>   BNE 'l11
0002D0A6 <AmiBlitz3.ab3@15990>   MOVE.l imm_addr,a0
0002D0AE <AmiBlitz3.ab3@15991>   CMP.w #$223c,imm_addr
0002D0B2 <AmiBlitz3.ab3@15992>   BNE 'org
0002D0B8 <AmiBlitz3.ab3@15993>   ADD.w #$8e80,-6(a4)
0002D0BE <AmiBlitz3.ab3@15996>   CLR.l imm_addr
0002D0C0 <AmiBlitz3.ab3@15997>  RTS
0002D0C6 <AmiBlitz3.ab3@16000>   CMP.l #4,a0
0002D0CA <AmiBlitz3.ab3@16001>   BNE 'l10
0002D0CE <AmiBlitz3.ab3@16002>   CMP.b #2,d3
0002D0D2 <AmiBlitz3.ab3@16003>   BNE 'l11b
0002D0D8 <AmiBlitz3.ab3@16004>   ADD.w #$7e40,-4(a4)
0002D0DA <AmiBlitz3.ab3@16005>  RTS
0002D0E0 <AmiBlitz3.ab3@16008>   ADD.w #$7e00,-4(a4)
0002D0E2 <AmiBlitz3.ab3@16009>  RTS
0002D0E8 <AmiBlitz3.ab3@16012>    MOVE.l destpointer,a0
0002D0EE <AmiBlitz3.ab3@16013>    SUB.l load_var_addr,a0
0002D0F2 <AmiBlitz3.ab3@16014>    CMP.w #4,a0
0002D0F6 <AmiBlitz3.ab3@16015>    BNE 'org
0002D0FA <AmiBlitz3.ab3@16016>    CMP.b #3,d3
0002D0FE <AmiBlitz3.ab3@16017>    BCS 'lv1
0002D104 <AmiBlitz3.ab3@16018>    CLR.l load_var_addr
0002D10A <AmiBlitz3.ab3@16019>    ADD.w #$9080-$200,-4(a4)
0002D10C <AmiBlitz3.ab3@16020>  RTS
0002D110 <AmiBlitz3.ab3@16023>   CMP.b #2,d3
0002D114 <AmiBlitz3.ab3@16024>    BNE 'org
0002D11A <AmiBlitz3.ab3@16025>    CLR.l load_var_addr
0002D120 <AmiBlitz3.ab3@16026>    ADD.w #$8040-$200,-4(a4)
0002D122 <AmiBlitz3.ab3@16027>  RTS
0002D128 <AmiBlitz3.ab3@16030>   MOVE.w regnum,D3
0002D12A <AmiBlitz3.ab3@16031>   OR.w D3,D1
0002D12C <AmiBlitz3.ab3@16032>   LSL.w #8,D3
0002D12E <AmiBlitz3.ab3@16033>   LSL.w #1,D3
0002D130 <AmiBlitz3.ab3@16034>   OR.w D3,D1
0002D132 <AmiBlitz3.ab3@16035>   ADDQ.w #1,D1
0002D136 <AmiBlitz3.ab3@16036> BRA.w writeword
0002D13A <AmiBlitz3.ab3@16040>    BSR.w cmpit
0002D13E <AmiBlitz3.ab3@16043>    MOVE.w mseq(PC),D1
0002D142 <AmiBlitz3.ab3@16044> BRA.w cpoke
0002D146 <AmiBlitz3.ab3@16048>   BSR.w cmpit
0002D14A <AmiBlitz3.ab3@16051>   MOVE.w msne(PC),D1
0002D14E <AmiBlitz3.ab3@16052> BRA.w cpoke
0002D152 <AmiBlitz3.ab3@16056>   BSR.w cmpit
0002D156 <AmiBlitz3.ab3@16059>    MOVE.w mslt(PC),D1
0002D15A <AmiBlitz3.ab3@16060> BRA.w cpoke
0002D15E <AmiBlitz3.ab3@16064>    BSR.w cmpit
0002D162 <AmiBlitz3.ab3@16067>    MOVE.w msle(PC),D1
0002D166 <AmiBlitz3.ab3@16068> BRA.w cpoke
0002D16A <AmiBlitz3.ab3@16072>    BSR.w cmpit
0002D16E <AmiBlitz3.ab3@16075>    MOVE.w msgt(PC),D1
0002D172 <AmiBlitz3.ab3@16076> BRA.w cpoke
0002D176 <AmiBlitz3.ab3@16080>   BSR.w cmpit
0002D17A <AmiBlitz3.ab3@16083>    MOVE.w msge(PC),D1
0002D180 <AmiBlitz3.ab3@16086>    OR.w regnum,D1
0002D184 <AmiBlitz3.ab3@16087>    CMP.w #5,d2
0002D188 <AmiBlitz3.ab3@16088>    BNE 'nod0
0002D18C <AmiBlitz3.ab3@16089>    CMP.w #5,d3
0002D190 <AmiBlitz3.ab3@16090>    BNE 'nod0
0002D192 <AmiBlitz3.ab3@16091>    MOVE.l d1,-(a7)
0002D198 <AmiBlitz3.ab3@16092>    MOVE.l #$44004a00,d1                                    ;68k neg.b:tst.b
0002D19C <AmiBlitz3.ab3@16093>    BSR writelong
0002D19E <AmiBlitz3.ab3@16094>    MOVE.l (a7)+,d1
0002D1A2 <AmiBlitz3.ab3@16097>    BSR.w writeword                                         ;writeseq
0002D1A4 <AmiBlitz3.ab3@16098>    MOVEQ.l #1,d2
0002D1AA <AmiBlitz3.ab3@16099>    MOVE.l lasttoken,d1
0002D1B0 <AmiBlitz3.ab3@16100>     TST.b fast
0002D1B4 <AmiBlitz3.ab3@16101>     BEQ.s 'l11
0002D1BA <AmiBlitz3.ab3@16102>    CMP.l #$800b,d1
0002D1BE <AmiBlitz3.ab3@16103>    BEQ 'l10
0002D1C2 <AmiBlitz3.ab3@16106>   MOVE.w #$4880,D1                                         ;ext.w D regat
0002D1C8 <AmiBlitz3.ab3@16107>   OR.w regnum,D1
0002D1CC <AmiBlitz3.ab3@16108>    BSR.w writeword                                         ;writeext.w
0002D1CE <AmiBlitz3.ab3@16109>   MOVEQ.l #$02,D2                                          ;type now WORD!
0002D1D0 <AmiBlitz3.ab3@16112> RTS
0002D1D4 <AmiBlitz3.ab3@16117>   MOVE.w #$D040,D1
0002D1D6 <AmiBlitz3.ab3@16118>   MOVEQ.l #$02,D2                                          ;writeaddword   ;now a word
0002D1DA <AmiBlitz3.ab3@16119> BRA.w doplus2
0002D1DE <AmiBlitz3.ab3@16123>   MOVE.w #$D040,D1
0002D1E0 <AmiBlitz3.ab3@16124>   MOVEQ.l #$03,D2                                          ;now a long
0002D1E4 <AmiBlitz3.ab3@16125>    BSR.w doplus2
0002D1E8 <AmiBlitz3.ab3@16126> BRA.w convert_word_to_long
0002D1EC <AmiBlitz3.ab3@16130>   MOVE.w #$D080,D1                                         ;writeaddlong
0002D1EE <AmiBlitz3.ab3@16133>   MOVE.w d1,a1
0002D1F4 <AmiBlitz3.ab3@16134>   TST.b fast
0002D1F8 <AmiBlitz3.ab3@16135>   BEQ 'l10
0002D1FA <AmiBlitz3.ab3@16139>   ASR.w #8,d1
0002D1FE <AmiBlitz3.ab3@16140>   CMP.b #$90,d1
0002D202 <AmiBlitz3.ab3@16141>   BEQ 'sub1
0002D206 <AmiBlitz3.ab3@16142>   CMP.b #$d0,d1
0002D20A <AmiBlitz3.ab3@16143>   BNE 'l10
0002D20E <AmiBlitz3.ab3@16144>   CMP.b #3,d3
0002D212 <AmiBlitz3.ab3@16145>   BCS 'lq10
0002D218 <AmiBlitz3.ab3@16146>   TST.b quickadd
0002D21E <AmiBlitz3.ab3@16150>    MOVE.l destpointer,a0
0002D224 <AmiBlitz3.ab3@16151>    CLR.b quickadd
0002D22A <AmiBlitz3.ab3@16152>    CLR.l load_var_addr
0002D230 <AmiBlitz3.ab3@16153>    SUB.l imm_addr,a0
0002D234 <AmiBlitz3.ab3@16154>    CMP.w #6,a0
0002D238 <AmiBlitz3.ab3@16155>    BEQ 'li10
0002D23C <AmiBlitz3.ab3@16156>    CMP.w #4,a0
0002D240 <AmiBlitz3.ab3@16157>    BNE.s 'li1
0002D246 <AmiBlitz3.ab3@16158>    CLR.l imm_addr
0002D24C <AmiBlitz3.ab3@16159>    ADD.w #$a040-$200,-4(a4)
0002D24E <AmiBlitz3.ab3@16160>  RTS
0002D250 <AmiBlitz3.ab3@16163>    MOVE.l a4,a0
0002D256 <AmiBlitz3.ab3@16164>    SUB.l load_var_addr,a0
0002D25C <AmiBlitz3.ab3@16165>    CMP.l #$a,a0
0002D260 <AmiBlitz3.ab3@16166>    BNE 'l10e
0002D266 <AmiBlitz3.ab3@16167>    CLR.l load_var_addr
0002D26A <AmiBlitz3.ab3@16168>    MOVE.w -$8(a4),d1
0002D270 <AmiBlitz3.ab3@16169>    MOVE.l -$4(a4),-$8(a4)
0002D274 <AmiBlitz3.ab3@16170>    MOVE.w d1,-$4(a4)
0002D27A <AmiBlitz3.ab3@16171>    SUB.w #$1980,-$a(a4)
0002D280 <AmiBlitz3.ab3@16172>    SUBQ.l #2,destpointer
0002D282 <AmiBlitz3.ab3@16173>  RTS
0002D288 <AmiBlitz3.ab3@16176>   CLR.b quickadd
0002D28C <AmiBlitz3.ab3@16177>  BRA 'l10
0002D292 <AmiBlitz3.ab3@16180>    CLR.l imm_addr
0002D296 <AmiBlitz3.ab3@16181>    TST.l -4(a4)                                            ;skip If ADD.l #0,dx
0002D29A <AmiBlitz3.ab3@16182>    BNE 'doit
0002D2A0 <AmiBlitz3.ab3@16183>    SUBQ.l #6,destpointer
0002D2A2 <AmiBlitz3.ab3@16184>  RTS
0002D2A8 <AmiBlitz3.ab3@16187>    ADD.w #$b080-$200,-6(a4)
0002D2AA <AmiBlitz3.ab3@16188>  RTS
0002D2B0 <AmiBlitz3.ab3@16191>    MOVE.l destpointer,a0
0002D2B6 <AmiBlitz3.ab3@16192>    SUB.l load_var_addr,a0
0002D2BA <AmiBlitz3.ab3@16193>    CMP.w #4,a0
0002D2BE <AmiBlitz3.ab3@16194>    BNE 'l10
0002D2C2 <AmiBlitz3.ab3@16195>    CMP.b #3,d3
0002D2C6 <AmiBlitz3.ab3@16196>    BNE 'lv1
0002D2CC <AmiBlitz3.ab3@16197>    CLR.l load_var_addr
0002D2D2 <AmiBlitz3.ab3@16198>    ADD.w #$b080-$200,-4(a4)
0002D2D4 <AmiBlitz3.ab3@16199>  RTS
0002D2D8 <AmiBlitz3.ab3@16202>   CMP.b #2,d3
0002D2DC <AmiBlitz3.ab3@16203>   BNE 'l10
0002D2E2 <AmiBlitz3.ab3@16204>   CLR.l load_var_addr
0002D2E8 <AmiBlitz3.ab3@16205>   ADD.w #$a040-$200,-4(a4)
0002D2EA <AmiBlitz3.ab3@16206>  RTS
0002D2F0 <AmiBlitz3.ab3@16209>   MOVE.w regnum,D3
0002D2F2 <AmiBlitz3.ab3@16210>   MOVE.w a1,d1
0002D2F4 <AmiBlitz3.ab3@16211>   OR.w D3,D1
0002D2F6 <AmiBlitz3.ab3@16212>   ADDQ.w #1,D1
0002D2F8 <AmiBlitz3.ab3@16213>   LSL.w #8,D3
0002D2FA <AmiBlitz3.ab3@16214>   LSL.w #1,D3
0002D2FC <AmiBlitz3.ab3@16215>   OR.w D3,D1
0002D300 <AmiBlitz3.ab3@16216>  BRA.w writeword
0002D304 <AmiBlitz3.ab3@16219>    CMP.b #3,d3
0002D308 <AmiBlitz3.ab3@16220>    BCS 'sub1_lq10
0002D30E <AmiBlitz3.ab3@16221>    TST.b quickadd
0002D314 <AmiBlitz3.ab3@16225>    MOVE.l destpointer,a0
0002D31A <AmiBlitz3.ab3@16226>    CLR.b quickadd
0002D320 <AmiBlitz3.ab3@16227>    CLR.l load_var_addr
0002D326 <AmiBlitz3.ab3@16228>    SUB.l imm_addr,a0
0002D32A <AmiBlitz3.ab3@16229>    CMP.w #6,a0
0002D32E <AmiBlitz3.ab3@16230>    BEQ 'sub1_li10
0002D332 <AmiBlitz3.ab3@16231>    CMP.w #4,a0
0002D336 <AmiBlitz3.ab3@16232>    BNE.s 'sub1_li1
0002D33C <AmiBlitz3.ab3@16233>    CLR.l imm_addr
0002D342 <AmiBlitz3.ab3@16234>    ADD.w #$6040-$200,-4(a4)
0002D344 <AmiBlitz3.ab3@16235>  RTS
0002D346 <AmiBlitz3.ab3@16238>    MOVE.l a4,a0
0002D34C <AmiBlitz3.ab3@16239>     SUB.l load_var_addr,a0
0002D352 <AmiBlitz3.ab3@16240>     CMP.l #$a,a0
0002D356 <AmiBlitz3.ab3@16241>     BNE 'sub1_l10e
0002D35C <AmiBlitz3.ab3@16242>    CLR.l load_var_addr
0002D360 <AmiBlitz3.ab3@16243>    MOVE.w -$8(a4),d1
0002D366 <AmiBlitz3.ab3@16244>    MOVE.l -$4(a4),-$8(a4)
0002D36A <AmiBlitz3.ab3@16245>    MOVE.w d1,-$4(a4)
0002D370 <AmiBlitz3.ab3@16246>    SUB.w #$1b80,-$a(a4)
0002D376 <AmiBlitz3.ab3@16247>    SUBQ.l #2,destpointer
0002D378 <AmiBlitz3.ab3@16248>  RTS
0002D37E <AmiBlitz3.ab3@16251>   CLR.b quickadd
0002D382 <AmiBlitz3.ab3@16252>  BRA 'sub1_l10
0002D388 <AmiBlitz3.ab3@16255>    CLR.l imm_addr
0002D38E <AmiBlitz3.ab3@16256>    ADD.w #$7080-$200,-6(a4)
0002D390 <AmiBlitz3.ab3@16257>  RTS
0002D396 <AmiBlitz3.ab3@16260>    MOVE.l destpointer,a0
0002D39C <AmiBlitz3.ab3@16261>    SUB.l load_var_addr,a0
0002D3A0 <AmiBlitz3.ab3@16262>    CMP.w #4,a0
0002D3A4 <AmiBlitz3.ab3@16263>    BNE 'sub1_l10
0002D3A8 <AmiBlitz3.ab3@16264>    CMP.b #3,d3
0002D3AC <AmiBlitz3.ab3@16265>    BNE 'sub1_lv1
0002D3B2 <AmiBlitz3.ab3@16266>    CLR.l load_var_addr
0002D3B8 <AmiBlitz3.ab3@16267>    ADD.w #$7080-$200,-4(a4)
0002D3BA <AmiBlitz3.ab3@16268>  RTS
0002D3BE <AmiBlitz3.ab3@16271>    CMP.b #2,d3
0002D3C2 <AmiBlitz3.ab3@16272>    BNE 'sub1_l10
0002D3C8 <AmiBlitz3.ab3@16273>    CLR.l load_var_addr
0002D3CE <AmiBlitz3.ab3@16274>    ADD.w #$6040-$200,-4(a4)
0002D3D0 <AmiBlitz3.ab3@16275>  RTS
0002D3D6 <AmiBlitz3.ab3@16278>   MOVE.w regnum,D3
0002D3D8 <AmiBlitz3.ab3@16279>   MOVE.w a1,d1
0002D3DA <AmiBlitz3.ab3@16280>   OR.w D3,D1
0002D3DC <AmiBlitz3.ab3@16281>   ADDQ.w #1,D1
0002D3DE <AmiBlitz3.ab3@16282>   LSL.w #8,D3
0002D3E0 <AmiBlitz3.ab3@16283>   LSL.w #1,D3
0002D3E2 <AmiBlitz3.ab3@16284>   OR.w D3,D1
0002D3E6 <AmiBlitz3.ab3@16285> BRA.w writeword
0002D3E8 <AmiBlitz3.ab3@16289>   MOVEQ #0,d0
0002D3EE <AmiBlitz3.ab3@16290>   MOVE.w regnum,d0
0002D3F0 <AmiBlitz3.ab3@16291>   ADDQ #1,d0
0002D3F2 <AmiBlitz3.ab3@16292>   ASL.w #8,d0
0002D3F4 <AmiBlitz3.ab3@16293>   ASL.w #2,d0
0002D3FA <AmiBlitz3.ab3@16294>   MOVE.l #$f2000022,d1                                     ;fpu add
0002D3FC <AmiBlitz3.ab3@16295>   OR.l d0,d1
0002D402 <AmiBlitz3.ab3@16296>   MOVE.w regnum,d0
0002D404 <AmiBlitz3.ab3@16297>   ASL.w #7,d0
0002D406 <AmiBlitz3.ab3@16298>   OR.l d0,d1
0002D40A <AmiBlitz3.ab3@16299> BRA.w writelong
0002D410 <AmiBlitz3.ab3@16306>   TST.b iee
0002D414 <AmiBlitz3.ab3@16307>   BNE do_plus_float_fadd1
0002D418 <AmiBlitz3.ab3@16308>   MOVE.w #$FFBE,D1                                         ;#-66,d1 org soruce ;floatadd
0002D41E <AmiBlitz3.ab3@16311>    MOVE.w D1,libjsr+2
0002D422 <AmiBlitz3.ab3@16312>    BSR.w savereg
0002D424 <AmiBlitz3.ab3@16313>   MOVE.l D4,D1
0002D428 <AmiBlitz3.ab3@16314>    BSR.w pokemovem
0002D42C <AmiBlitz3.ab3@16315>   MOVE.w #$C900,D1
0002D430 <AmiBlitz3.ab3@16316>    BSR.w Atokejsr
0002D434 <AmiBlitz3.ab3@16317>    BSR.w ritetod0
0002D43A <AmiBlitz3.ab3@16318>   MOVE.l libjsr,D1
0002D43E <AmiBlitz3.ab3@16319>    BSR.w writelong
0002D442 <AmiBlitz3.ab3@16320>    BSR.w ritefromd0
0002D444 <AmiBlitz3.ab3@16321>   MOVE.l D5,D1
0002D448 <AmiBlitz3.ab3@16322> BRA.w pokemovem
0002D44E <AmiBlitz3.ab3@16326>   MOVE.w regnum,D1
0002D450 <AmiBlitz3.ab3@16327>   LSL.w #8,D1
0002D452 <AmiBlitz3.ab3@16328>   LSL.w #1,D1
0002D454 <AmiBlitz3.ab3@16329>   MOVE.w D1,-(A7)
0002D458 <AmiBlitz3.ab3@16330>   CMP.w #3072,d1
0002D45C <AmiBlitz3.ab3@16331>   BEQ 'l1
0002D462 <AmiBlitz3.ab3@16332>   OR.w addcode,D1                                          ;move.l (a7)+,d0
0002D466 <AmiBlitz3.ab3@16333> BRA 'l2
0002D46A <AmiBlitz3.ab3@16336>    MOVE.w #$588f,d1                                        ;addq.l #4,a7
0002D46E <AmiBlitz3.ab3@16339>    BSR.w writeword
0002D470 <AmiBlitz3.ab3@16340>   MOVE.w (A7)+,D1
0002D476 <AmiBlitz3.ab3@16341>   OR.w addcode+2,D1                                        ;native string add.l d0,(a7)
0002D47A <AmiBlitz3.ab3@16342> BRA.w writeword
0002D47E <AmiBlitz3.ab3@16348>   MOVE.w #$9040,D1
0002D482 <AmiBlitz3.ab3@16349> BRA.w doplus2
0002D486 <AmiBlitz3.ab3@16353>   MOVE.w #$9040,D1
0002D48A <AmiBlitz3.ab3@16354> BRA.w doplus2
0002D48E <AmiBlitz3.ab3@16358>   MOVE.w #$9080,D1
0002D492 <AmiBlitz3.ab3@16359> BRA.w doplus2
0002D498 <AmiBlitz3.ab3@16363>    TST.b iee
0002D49C <AmiBlitz3.ab3@16364>     BNE 'fs1
0002D4A0 <AmiBlitz3.ab3@16365>   MOVE.w #$FFB8,D1                                         ;floatsub
0002D4A4 <AmiBlitz3.ab3@16366> BRA.w doflib
0002D4A6 <AmiBlitz3.ab3@16369>   MOVEQ #0,d0
0002D4AC <AmiBlitz3.ab3@16370>   MOVE.w regnum,d0
0002D4AE <AmiBlitz3.ab3@16371>   ADDQ #1,d0
0002D4B0 <AmiBlitz3.ab3@16372>   ASL.w #8,d0
0002D4B2 <AmiBlitz3.ab3@16373>   ASL.w #2,d0
0002D4B8 <AmiBlitz3.ab3@16374>   MOVE.l #$f2000028,d1
0002D4BA <AmiBlitz3.ab3@16375>   OR.l d0,d1
0002D4C0 <AmiBlitz3.ab3@16376>   MOVE.w regnum,d0
0002D4C2 <AmiBlitz3.ab3@16377>   ASL.w #7,d0
0002D4C4 <AmiBlitz3.ab3@16378>   OR.l d0,d1
0002D4C8 <AmiBlitz3.ab3@16379> BRA.w writelong
0002D4CC <AmiBlitz3.ab3@16385>   MOVE.w #$C1C0,D1
0002D4CE <AmiBlitz3.ab3@16386>   MOVEQ.l #$02,D2                                          ;now a word
0002D4D2 <AmiBlitz3.ab3@16387> BRA.w doplus2
0002D4D6 <AmiBlitz3.ab3@16391>   MOVE.w #$C1C0,D1
0002D4D8 <AmiBlitz3.ab3@16392>   MOVEQ.l #$03,D2                                          ;now a long.
0002D4DC <AmiBlitz3.ab3@16393> BRA.w doplus2
0002D4E0 <AmiBlitz3.ab3@16397>   MOVE.w #$CA00,D1                                         ;quickmul
0002D4E4 <AmiBlitz3.ab3@16398> BRA.w domylib
0002D4EA <AmiBlitz3.ab3@16402>   TST.b fast
0002D4EE <AmiBlitz3.ab3@16403>   BNE.s 'l10
0002D4F2 <AmiBlitz3.ab3@16404>   MOVE.w #$CA01,D1                                         ;writelongmul
0002D4F6 <AmiBlitz3.ab3@16405> BRA.w domylib
0002D4FC <AmiBlitz3.ab3@16414>    MOVE.l destpointer,a0
0002D502 <AmiBlitz3.ab3@16415>    SUB.l imm_addr,a0
0002D506 <AmiBlitz3.ab3@16416>    CMP.w #6,a0
0002D50A <AmiBlitz3.ab3@16417>    BNE 'li1
0002D50C <AmiBlitz3.ab3@16418>    MOVEQ.l #2,d1
0002D50E <AmiBlitz3.ab3@16419>    MOVEQ #1,d3
0002D512 <AmiBlitz3.ab3@16422>   CMP.l -4(a4),d1
0002D516 <AmiBlitz3.ab3@16423>    BEQ 'oklsl
0002D518 <AmiBlitz3.ab3@16424>     LSL.l #1,d1
0002D51E <AmiBlitz3.ab3@16425>     ADD.l #1,d3
0002D524 <AmiBlitz3.ab3@16426>     CMP.l #9,d3
0002D528 <AmiBlitz3.ab3@16427>     BNE 'ag
0002D52C <AmiBlitz3.ab3@16428>    MOVE.w -2(a4),d1
0002D530 <AmiBlitz3.ab3@16429>    BSR writeword
0002D536 <AmiBlitz3.ab3@16430>    MOVE.w -6(a4),-4(a4)
0002D53E <AmiBlitz3.ab3@16431>    MOVE.l #$4c3c0800,-8(a4)
0002D544 <AmiBlitz3.ab3@16432>    MOVE.w regnum,D3
0002D548 <AmiBlitz3.ab3@16433>    MULS #$1000,D3
0002D54C <AmiBlitz3.ab3@16434>    OR.w D3,-6(a4)
0002D552 <AmiBlitz3.ab3@16435>    CLR.l load_var_addr
0002D558 <AmiBlitz3.ab3@16436>    CLR.l imm_addr
0002D55C <AmiBlitz3.ab3@16437> BRA 'li3
0002D560 <AmiBlitz3.ab3@16440>    CMP.w #8,d3
0002D564 <AmiBlitz3.ab3@16441>    BEQ 'ok
0002D566 <AmiBlitz3.ab3@16442>    ASL.l #1,d3
0002D568 <AmiBlitz3.ab3@16443>    ASL.l #8,d3
0002D56C <AmiBlitz3.ab3@16444>    MOVE.w #$e188,d1
0002D56E <AmiBlitz3.ab3@16445>    OR.w d3,d1
0002D572 <AmiBlitz3.ab3@16446>    MOVE.w d1,-6(a4)
0002D576 <AmiBlitz3.ab3@16447> BRA 'okls
0002D57C <AmiBlitz3.ab3@16450>   MOVE.w #$e188,-6(a4)                                     ;lsl.l #,dx
0002D582 <AmiBlitz3.ab3@16453>   MOVE.w regnum,d3
0002D586 <AmiBlitz3.ab3@16454>    OR.b d3,-5(a4)
0002D58C <AmiBlitz3.ab3@16455>    SUBQ.l #4,destpointer
0002D592 <AmiBlitz3.ab3@16456>    CLR.l load_var_addr
0002D598 <AmiBlitz3.ab3@16457>    CLR.l imm_addr
0002D59C <AmiBlitz3.ab3@16458> BRA 'li3
0002D5A2 <AmiBlitz3.ab3@16461>    MOVE.l destpointer,a0
0002D5A8 <AmiBlitz3.ab3@16462>    SUB.l load_var_addr,a0
0002D5AC <AmiBlitz3.ab3@16463>    CMP.w #4,a0
0002D5B0 <AmiBlitz3.ab3@16464>    BNE 'li2
0002D5B4 <AmiBlitz3.ab3@16465>    MOVE.w -2(a4),d1
0002D5B8 <AmiBlitz3.ab3@16466>    BSR writeword
0002D5BE <AmiBlitz3.ab3@16467>    MOVE.b #$4c,-6(a4)
0002D5C4 <AmiBlitz3.ab3@16468>    MOVE.w #$0800,-4(a4)
0002D5CA <AmiBlitz3.ab3@16469>    MOVE.w regnum,D3
0002D5CE <AmiBlitz3.ab3@16470>    MULS #$1000,d3
0002D5D2 <AmiBlitz3.ab3@16471>    OR.w D3,-4(a4)
0002D5D6 <AmiBlitz3.ab3@16472> BRA 'li3
0002D5DC <AmiBlitz3.ab3@16475>    MOVE.l #$4c010800,d1
0002D5E2 <AmiBlitz3.ab3@16476>    MOVE.w regnum,D3
0002D5E4 <AmiBlitz3.ab3@16477>    EXT.l d3
0002D5E8 <AmiBlitz3.ab3@16478>    MULS #$1000,d3
0002D5EA <AmiBlitz3.ab3@16479>    OR.w D3,d1
0002D5EE <AmiBlitz3.ab3@16480>    MULS #$10,d3
0002D5F0 <AmiBlitz3.ab3@16481>    ADD.l d3,d1
0002D5F4 <AmiBlitz3.ab3@16482>    BSR writelong
0002D5F6 <AmiBlitz3.ab3@16487> RTS
0002D5F8 <AmiBlitz3.ab3@16491>   MOVE.w D1,-(A7)
0002D5FC <AmiBlitz3.ab3@16492>    BSR.w savereg
0002D5FE <AmiBlitz3.ab3@16493>   MOVE.l D4,D1
0002D602 <AmiBlitz3.ab3@16494>    BSR.w pokemovem
0002D606 <AmiBlitz3.ab3@16495>    BSR.w ritetod0
0002D608 <AmiBlitz3.ab3@16496>   MOVEQ #0,d1
0002D60A <AmiBlitz3.ab3@16497>   MOVE.w (A7)+,D1
0002D610 <AmiBlitz3.ab3@16498>   MOVE.l d1,lastinstruction
0002D614 <AmiBlitz3.ab3@16499>    BSR.w Atokejsr
0002D618 <AmiBlitz3.ab3@16500>    BSR.w ritefromd0
0002D61A <AmiBlitz3.ab3@16501>   MOVE.l D5,D1
0002D61E <AmiBlitz3.ab3@16502> BRA.w pokemovem
0002D624 <AmiBlitz3.ab3@16506>    TST.b iee
0002D628 <AmiBlitz3.ab3@16507>     BNE fm1
0002D62C <AmiBlitz3.ab3@16508>  MOVE.w #$FFB2,D1                                          ;floatmul
0002D630 <AmiBlitz3.ab3@16509> BRA.w doflib
0002D632 <AmiBlitz3.ab3@16512>   MOVEQ #0,d0
0002D638 <AmiBlitz3.ab3@16513>  MOVE.w regnum,d0
0002D63A <AmiBlitz3.ab3@16514>  ADDQ #1,d0
0002D63C <AmiBlitz3.ab3@16515>  ASL.w #8,d0
0002D63E <AmiBlitz3.ab3@16516>  ASL.w #2,d0
0002D644 <AmiBlitz3.ab3@16517>  MOVE.l #$f2000023,d1
0002D646 <AmiBlitz3.ab3@16518>  OR.l d0,d1
0002D64C <AmiBlitz3.ab3@16519>  MOVE.w regnum,d0
0002D64E <AmiBlitz3.ab3@16520>  ASL.w #7,d0
0002D650 <AmiBlitz3.ab3@16521>  OR.l d0,d1
0002D654 <AmiBlitz3.ab3@16522> BRA.w writelong
0002D656 <AmiBlitz3.ab3@16526>   MOVE.w D2,-(A7)                                          ;dopow
0002D658 <AmiBlitz3.ab3@16527>   MOVE.w D2,D3
0002D65A <AmiBlitz3.ab3@16528>   MOVEQ.l #$05,D2
0002D65E <AmiBlitz3.ab3@16529>    BSR.w convtypef
0002D664 <AmiBlitz3.ab3@16530>   ADDQ.w #1,regnum
0002D666 <AmiBlitz3.ab3@16531>   MOVE.w (A7)+,D3
0002D668 <AmiBlitz3.ab3@16532>   MOVEQ.l #$05,D2
0002D66C <AmiBlitz3.ab3@16533>    BSR.w writeconvertcode
0002D672 <AmiBlitz3.ab3@16534>   SUBQ.w #1,regnum
0002D676 <AmiBlitz3.ab3@16535>    BSR.w nocando
0002D67C <AmiBlitz3.ab3@16536>    TST.b fpu
0002D680 <AmiBlitz3.ab3@16537>    BEQ 'old
0002D682 <AmiBlitz3.ab3@16538>    MOVEQ #0,d1
0002D688 <AmiBlitz3.ab3@16539>    MOVE.w regnum,d1
0002D68A <AmiBlitz3.ab3@16540>   MOVE.l d1,d0
0002D68C <AmiBlitz3.ab3@16541>   ASL.w #7,d1
0002D68E <AmiBlitz3.ab3@16542>   ASL.w #8,d0
0002D690 <AmiBlitz3.ab3@16543>   ASL.w #2,d0
0002D692 <AmiBlitz3.ab3@16544>   OR.w d0,d1
0002D694 <AmiBlitz3.ab3@16545>   MOVE.l d1,-(a7)
0002D69A <AmiBlitz3.ab3@16547>    OR.l #$f2000016,d1                                       ;flog2.x fp0      ;fpu ^ pow
0002D69E <AmiBlitz3.ab3@16548>    BSR writelong
0002D6A4 <AmiBlitz3.ab3@16549>    MOVE.w regnum,d0
0002D6A6 <AmiBlitz3.ab3@16550>  ADDQ #1,d0
0002D6A8 <AmiBlitz3.ab3@16551>  ASL.w #8,d0
0002D6AA <AmiBlitz3.ab3@16552>  ASL.w #2,d0
0002D6B0 <AmiBlitz3.ab3@16553>  MOVE.l #$f2000023,d1
0002D6B2 <AmiBlitz3.ab3@16554>  OR.l d0,d1
0002D6B8 <AmiBlitz3.ab3@16555>  MOVE.w regnum,d0
0002D6BA <AmiBlitz3.ab3@16556>  ASL.w #7,d0
0002D6BC <AmiBlitz3.ab3@16557>  OR.l d0,d1
0002D6C2 <AmiBlitz3.ab3@16558>    OR.l #$f2000023,d1                                      ;fmulx.x fp1,fp0
0002D6C6 <AmiBlitz3.ab3@16559>    BSR writelong
0002D6C8 <AmiBlitz3.ab3@16560>    MOVE.l (a7)+,d1
0002D6CE <AmiBlitz3.ab3@16562>    OR.l #$f2000011,d1                                      ;ftwotox.x fp0
0002D6D2 <AmiBlitz3.ab3@16563>    BSR writelong
0002D6D4 <AmiBlitz3.ab3@16564> RTS
0002D6D8 <AmiBlitz3.ab3@16567>   MOVE.w #$6001,D1
0002D6DC <AmiBlitz3.ab3@16568> BRA.w domylib
0002D6E0 <AmiBlitz3.ab3@16574>   MOVEA.l forthsp(PC),A0
0002D6E4 <AmiBlitz3.ab3@16575>   MOVE.w #$FFFF,-(A0)                                      ;#-1,-(a0) org source
0002D6E6 <AmiBlitz3.ab3@16576> RTS
0002D6EA <AmiBlitz3.ab3@16582>   MOVE.w #$D400,D1
0002D6EE <AmiBlitz3.ab3@16583> BRA.w domylib
0002D6F2 <AmiBlitz3.ab3@16587>   MOVE.w #$D401,D1
0002D6F6 <AmiBlitz3.ab3@16588> BRA.w domylib
0002D6FA <AmiBlitz3.ab3@16592>    BSR.w nocando                                           ;modlib uses an alibjsr here!
0002D6FE <AmiBlitz3.ab3@16593>   MOVE.w #$D402,D1
0002D702 <AmiBlitz3.ab3@16594> BRA.w domylib
0002D706 <AmiBlitz3.ab3@16598>   MOVE.w #$D403,D1
0002D708 <AmiBlitz3.ab3@16599>   MOVEQ.l #$02,D2                                          ;now a word.
0002D70C <AmiBlitz3.ab3@16600> BRA.w domylib
0002D710 <AmiBlitz3.ab3@16604>    BSR.w nocando                                           ;modlib lib uses an alibjsr!  ;domod float
0002D716 <AmiBlitz3.ab3@16605>   TST.b fpu
0002D71A <AmiBlitz3.ab3@16606>   BEQ 'old
0002D71C <AmiBlitz3.ab3@16607>   MOVEQ #0,d1
0002D722 <AmiBlitz3.ab3@16608>   MOVE.w regnum,d1                                         ;fpu mod
0002D724 <AmiBlitz3.ab3@16609>   MOVE.l d1,d0
0002D726 <AmiBlitz3.ab3@16610>   ADDQ.l #1,d1
0002D728 <AmiBlitz3.ab3@16611>   ASL.l #7,d0
0002D72A <AmiBlitz3.ab3@16612>   ASL.l #8,d1
0002D72C <AmiBlitz3.ab3@16613>   ASL.l #2,d1
0002D72E <AmiBlitz3.ab3@16614>   OR.l d0,d1
0002D730 <AmiBlitz3.ab3@16615>   MOVE.l d0,-(a7)
0002D736 <AmiBlitz3.ab3@16616>   OR.l #$f2000021,d1
0002D73A <AmiBlitz3.ab3@16617>   BSR writelong
0002D73C <AmiBlitz3.ab3@16618>   MOVE.l (a7)+,d0
0002D73E <AmiBlitz3.ab3@16619>  RTS
0002D742 <AmiBlitz3.ab3@16622>   MOVE.w #$D404,D1
0002D744 <AmiBlitz3.ab3@16623>   MOVEQ.l #$03,D2                                          ;now a long
0002D748 <AmiBlitz3.ab3@16624> BRA.w domylib
0002D74C <AmiBlitz3.ab3@16632>   MOVE.w #$48C0,D1
0002D752 <AmiBlitz3.ab3@16633>   OR.w regnum,D1
0002D756 <AmiBlitz3.ab3@16634>    BSR.w writeword
0002D758 <AmiBlitz3.ab3@16635>   ADDQ.w #1,D1
0002D75C <AmiBlitz3.ab3@16636>    BSR.w writeword
0002D760 <AmiBlitz3.ab3@16639>    MOVE.w #$48C0,D1
0002D766 <AmiBlitz3.ab3@16640>   OR.w regnum,D1
0002D76A <AmiBlitz3.ab3@16641>    BSR.w writeword
0002D76E <AmiBlitz3.ab3@16642>   MOVE.w #$81C0,D1
0002D772 <AmiBlitz3.ab3@16643> BRA.w doplus2
0002D778 <AmiBlitz3.ab3@16647>   TST.b fast
0002D77C <AmiBlitz3.ab3@16648>   BNE.s 'l10
0002D780 <AmiBlitz3.ab3@16649>   MOVE.w #$CB01,D1
0002D784 <AmiBlitz3.ab3@16650> BRA.w domylib
0002D788 <AmiBlitz3.ab3@16656>   BSR.w savereg
0002D78A <AmiBlitz3.ab3@16657>   MOVE.l D4,D1
0002D78E <AmiBlitz3.ab3@16658>    BSR.w pokemovem
0002D792 <AmiBlitz3.ab3@16659>    BSR.w ritetod0
0002D798 <AmiBlitz3.ab3@16673>    MOVE.l #$4c410800,d1
0002D79C <AmiBlitz3.ab3@16674>    BSR writelong
0002D7A0 <AmiBlitz3.ab3@16677>   MOVE.w #$4e71,d1
0002D7A4 <AmiBlitz3.ab3@16679>    BSR.w ritefromd0
0002D7A6 <AmiBlitz3.ab3@16680>   MOVE.l D5,D1
0002D7AA <AmiBlitz3.ab3@16681> BRA.w pokemovem
0002D7AE <AmiBlitz3.ab3@16684>     CMP.w #8,d3
0002D7B2 <AmiBlitz3.ab3@16685>     BEQ 'ok
0002D7B4 <AmiBlitz3.ab3@16686>     ASL.l #1,d3
0002D7B6 <AmiBlitz3.ab3@16687>     ASL.l #8,d3
0002D7BA <AmiBlitz3.ab3@16688>     MOVE.w #$e080,d1
0002D7BC <AmiBlitz3.ab3@16689>     OR.w d3,d1
0002D7C0 <AmiBlitz3.ab3@16690> BRA 'oklsr2
0002D7C4 <AmiBlitz3.ab3@16693>   MOVE.w #$e080,d1                                         ;lsr.l #,dx
0002D7CA <AmiBlitz3.ab3@16696>      SUBQ.l #6,destpointer
0002D7CE <AmiBlitz3.ab3@16697>      BSR writeword
0002D7D0 <AmiBlitz3.ab3@16698>      MOVE.l (a7)+,d3
0002D7D2 <AmiBlitz3.ab3@16699>      MOVEQ #0,d1
0002D7D8 <AmiBlitz3.ab3@16700>      CLR.l load_var_addr
0002D7DE <AmiBlitz3.ab3@16701>      CLR.l imm_addr
0002D7E2 <AmiBlitz3.ab3@16702> BRA pokemovem
0002D7E6 <AmiBlitz3.ab3@16706>   MOVE.w #$CB00,D1                                         ;quickdiv
0002D7EA <AmiBlitz3.ab3@16707> BRA.w domylib
0002D7F0 <AmiBlitz3.ab3@16711>    TST.b iee
0002D7F4 <AmiBlitz3.ab3@16712>    BNE fdiv1
0002D7F8 <AmiBlitz3.ab3@16713>    MOVE.w #$FFAC,D1                                        ;floatdiv
0002D7FC <AmiBlitz3.ab3@16714> BRA.w doflib
0002D7FE <AmiBlitz3.ab3@16718>   MOVEQ #0,d0
0002D804 <AmiBlitz3.ab3@16719>   MOVE.w regnum,d0
0002D806 <AmiBlitz3.ab3@16720>   ADDQ #1,d0
0002D808 <AmiBlitz3.ab3@16721>   ASL.w #8,d0
0002D80A <AmiBlitz3.ab3@16722>   ASL.w #2,d0
0002D810 <AmiBlitz3.ab3@16723>   MOVE.l #$f2000020,d1                                     ;fpu div
0002D812 <AmiBlitz3.ab3@16724>   OR.l d0,d1
0002D818 <AmiBlitz3.ab3@16725>   MOVE.w regnum,d0
0002D81A <AmiBlitz3.ab3@16726>   ASL.w #7,d0
0002D81C <AmiBlitz3.ab3@16727>   OR.l d0,d1
0002D820 <AmiBlitz3.ab3@16728> BRA.w writelong
0002D824 <AmiBlitz3.ab3@16732>   MOVE.w #$C000,D1
0002D828 <AmiBlitz3.ab3@16733> BRA.w doplus2
0002D82C <AmiBlitz3.ab3@16737>   MOVE.w #$C040,D1
0002D830 <AmiBlitz3.ab3@16738> BRA.w doplus2
0002D834 <AmiBlitz3.ab3@16742>   MOVE.w #$C080,D1
0002D838 <AmiBlitz3.ab3@16743> BRA.w doplus2
0002D83C <AmiBlitz3.ab3@16747>   MOVE.w #$8000,D1
0002D840 <AmiBlitz3.ab3@16748> BRA.w doplus2
0002D844 <AmiBlitz3.ab3@16752>   MOVE.w #$8040,D1
0002D848 <AmiBlitz3.ab3@16753> BRA.w doplus2
0002D84C <AmiBlitz3.ab3@16757>   MOVE.w #$8080,D1
0002D850 <AmiBlitz3.ab3@16758> BRA.w doplus2
0002D854 <AmiBlitz3.ab3@16762>   MOVE.w #$B100,D1
0002D85A <AmiBlitz3.ab3@16765>    MOVE.w regnum,D3
0002D85C <AmiBlitz3.ab3@16766>   OR.w D3,D1
0002D85E <AmiBlitz3.ab3@16767>   ADDQ.w #1,D3
0002D860 <AmiBlitz3.ab3@16768>   LSL.w #8,D3
0002D862 <AmiBlitz3.ab3@16769>   LSL.w #1,D3
0002D864 <AmiBlitz3.ab3@16770>   OR.w D3,D1
0002D868 <AmiBlitz3.ab3@16771> BRA.w writeword
0002D86C <AmiBlitz3.ab3@16775>   MOVE.w #$B140,D1
0002D870 <AmiBlitz3.ab3@16776> BRA.w doeor2
0002D874 <AmiBlitz3.ab3@16780>   MOVE.w #$B180,D1
0002D878 <AmiBlitz3.ab3@16781> BRA.w doeor2
0002D87C <AmiBlitz3.ab3@16785>   MOVE.w #$E1A8,D1
0002D880 <AmiBlitz3.ab3@16786> BRA.w shpoke
0002D884 <AmiBlitz3.ab3@16790>   MOVE.w #$E0A8,D1
0002D888 <AmiBlitz3.ab3@16791> BRA.w shpoke
0002D88C <AmiBlitz3.ab3@16795>   MOVE.w #$E0A0,D1
0002D890 <AmiBlitz3.ab3@16796> BRA.w shpoke
0002D892 <AmiBlitz3.ab3@16800>   MOVE.w D1,-(A7)
0002D898 <AmiBlitz3.ab3@16801>   ADDQ.w #1,regnum   ;make second a word!
0002D89A <AmiBlitz3.ab3@16802>   MOVE.w D2,-(A7)
0002D89C <AmiBlitz3.ab3@16803>   MOVE.w D2,D3
0002D89E <AmiBlitz3.ab3@16804>   MOVEQ.l #$02,D2
0002D8A2 <AmiBlitz3.ab3@16811>    BSR.w writeconvertcode
0002D8A4 <AmiBlitz3.ab3@16815>   MOVE.w (A7)+,D2     ;type
0002D8AA <AmiBlitz3.ab3@16816>   SUBQ.w #1,regnum
0002D8AE <AmiBlitz3.ab3@16817>   CMP.w #$4,D2        ;don't fuck with quix
0002D8B2 <AmiBlitz3.ab3@16818>    BEQ.w 'skip
0002D8B4 <AmiBlitz3.ab3@16819>   MOVE.w D2,D3
0002D8B6 <AmiBlitz3.ab3@16820>   MOVEQ.l #$03,D2
0002D8BA <AmiBlitz3.ab3@16821>    BSR.w convtypef    ;make first (and current) a long
0002D8BC <AmiBlitz3.ab3@16824>    MOVE.w (A7)+,D1
0002D8C2 <AmiBlitz3.ab3@16826>   MOVE.w regnum,D3
0002D8C4 <AmiBlitz3.ab3@16827>   OR.w D3,D1
0002D8C6 <AmiBlitz3.ab3@16828>   ADDQ.w #1,D3
0002D8C8 <AmiBlitz3.ab3@16829>   LSL.w #8,D3
0002D8CA <AmiBlitz3.ab3@16830>   LSL.w #1,D3
0002D8CC <AmiBlitz3.ab3@16831>   OR.w D3,D1
0002D8D0 <AmiBlitz3.ab3@16832> BRA.w writeword
0002D8D4 <AmiBlitz3.ab3@16836>   MOVE.w #$0100,D1
0002D8D8 <AmiBlitz3.ab3@16837>    BSR.w dothebit
0002D8DE <AmiBlitz3.ab3@16839>   MOVE.w regnum,D1
0002D8E2 <AmiBlitz3.ab3@16840>   ORI.w #$56C0,D1    ;sne regat
0002D8E6 <AmiBlitz3.ab3@16841>    BSR.w writeword
0002D8EC <AmiBlitz3.ab3@16843>   MOVE.w regnum,D1
0002D8F0 <AmiBlitz3.ab3@16844>   ORI.w #$4880,D1    ;ext.w D regat
0002D8F4 <AmiBlitz3.ab3@16845>    BSR.w writeword
0002D8F6 <AmiBlitz3.ab3@16847>   MOVEQ.l #$02,D2    ;type now WORD!
0002D8F8 <AmiBlitz3.ab3@16848> RTS
0002D8FC <AmiBlitz3.ab3@16852>   MOVE.w #$01C0,D1
0002D900 <AmiBlitz3.ab3@16855>    BSR.w dothebit
0002D902 <AmiBlitz3.ab3@16857>   MOVEQ.l #$03,D2    ;type now LONG!
0002D904 <AmiBlitz3.ab3@16858> RTS
0002D908 <AmiBlitz3.ab3@16862>   MOVE.w #$0180,D1
0002D90C <AmiBlitz3.ab3@16863> BRA.w dothemip
0002D910 <AmiBlitz3.ab3@16867>   MOVE.w #$0140,D1
0002D914 <AmiBlitz3.ab3@16868> BRA.w dothemip
0002D916 <AmiBlitz3.ab3@16872>   MOVE.w D1,-(A7)
0002D918 <AmiBlitz3.ab3@16876>   MOVE.w D2,-(A7)
0002D91A <AmiBlitz3.ab3@16877>   MOVE.w D2,D3
0002D91C <AmiBlitz3.ab3@16878>   MOVEQ.l #$03,D2         ;first to long!
0002D920 <AmiBlitz3.ab3@16879>    BSR.w convtypef
0002D922 <AmiBlitz3.ab3@16881>   MOVE.w (A7)+,D3
0002D924 <AmiBlitz3.ab3@16882>   MOVEQ.l #$01,D2         ;second to byte!
0002D92A <AmiBlitz3.ab3@16883>   ADDQ.w #1,regnum
0002D92E <AmiBlitz3.ab3@16884>    BSR.w writeconvertcode
0002D934 <AmiBlitz3.ab3@16885>   SUBQ.w #1,regnum
0002D93A <AmiBlitz3.ab3@16887>   MOVE.w regnum,D1
0002D93C <AmiBlitz3.ab3@16888>   MOVE.w D1,D2
0002D93E <AmiBlitz3.ab3@16889>   ADDQ.w #1,D2
0002D940 <AmiBlitz3.ab3@16890>   LSL.w #8,D2
0002D942 <AmiBlitz3.ab3@16891>   LSL.w #1,D2
0002D944 <AmiBlitz3.ab3@16892>   OR.w (A7)+,D1
0002D946 <AmiBlitz3.ab3@16893>   OR.w D2,D1
0002D94A <AmiBlitz3.ab3@16894> BRA.w writeword        ;btst regat+1,regat
0002D950 <AmiBlitz3.ab3@16900>   MOVE.w regnum,D1
0002D954 <AmiBlitz3.ab3@16901>    BEQ.w 'skip
0002D958 <AmiBlitz3.ab3@16902>   ORI.w #$2000,D1
0002D95C <AmiBlitz3.ab3@16903>    BSR.w writeword
0002D960 <AmiBlitz3.ab3@16904>   ADDI.w #$201,D1
0002D964 <AmiBlitz3.ab3@16905>    BSR.w writeword
0002D966 <AmiBlitz3.ab3@16908> RTS
0002D96C <AmiBlitz3.ab3@16914>   MOVE.w regnum,D1
0002D970 <AmiBlitz3.ab3@16915>    BEQ.w 'skip
0002D972 <AmiBlitz3.ab3@16916>   LSL.w #8,D1
0002D974 <AmiBlitz3.ab3@16917>   LSL.w #1,D1
0002D978 <AmiBlitz3.ab3@16918>   ORI.w #$2000,D1
0002D97C <AmiBlitz3.ab3@16919>    BSR.w writeword
0002D97E <AmiBlitz3.ab3@16922> RTS
0002D984 <AmiBlitz3.ab3@16927>    CLR.b isconstantvalue
0002D98A <AmiBlitz3.ab3@16928>    CLR.l lastconstantvalue
0002D992 <AmiBlitz3.ab3@16930>    CMPI.w #$7,regnum
0002D996 <AmiBlitz3.ab3@16931>    BCS.w getelement2
0002D99C <AmiBlitz3.ab3@16933>   MOVE.l #$f2277700,d1                                     ;fmove.d fp6,-(a7)
0002D9A0 <AmiBlitz3.ab3@16934>   BSR writelong
0002D9A4 <AmiBlitz3.ab3@16935>   MOVE.w #$2F06,D1                                         ;d6 to stack
0002D9A8 <AmiBlitz3.ab3@16938>   CMP.w #$3,D2
0002D9AC <AmiBlitz3.ab3@16939>    BCS.w 'skip
0002D9B0 <AmiBlitz3.ab3@16940>   MOVE.w #$2F06,D1
0002D9B4 <AmiBlitz3.ab3@16943>   BSR.w writeword
0002D9B6 <AmiBlitz3.ab3@16944>   MOVE.w D1,-(A7)
0002D9BC <AmiBlitz3.ab3@16946>   SUBQ.w #1,regnum
0002D9C0 <AmiBlitz3.ab3@16947>    BSR.w getelement2
0002D9C6 <AmiBlitz3.ab3@16948>   ADDQ.w #1,regnum
0002D9CC <AmiBlitz3.ab3@16951>   MOVE.l #$f2001b80,d1
0002D9D0 <AmiBlitz3.ab3@16952>   BSR writelong
0002D9D4 <AmiBlitz3.ab3@16954>   MOVE.w #$3E06,D1
0002D9D8 <AmiBlitz3.ab3@16955>   CMP.w #$3,D2
0002D9DC <AmiBlitz3.ab3@16956>    BCS.w 'skip2
0002D9E0 <AmiBlitz3.ab3@16957>   MOVE.w #$2E06,D1
0002D9E4 <AmiBlitz3.ab3@16960>   BSR.w writeword
0002D9E6 <AmiBlitz3.ab3@16962>   MOVE.w (A7)+,D1
0002D9EA <AmiBlitz3.ab3@16963>   ANDI.w #$F000,D1
0002D9EE <AmiBlitz3.ab3@16964>   ORI.w #$C1F,D1
0002D9F4 <AmiBlitz3.ab3@16965>   JSR writeword
0002D9FA <AmiBlitz3.ab3@16967>   MOVE.l #$f21f5700,d1                                     ;fmove.d (a7)+,fp6
0002D9FE <AmiBlitz3.ab3@16968> BRA writelong
0002DA02 <AmiBlitz3.ab3@16973>   BSR.w getelement2
0002DA06 <AmiBlitz3.ab3@16974>   MOVE.w #$4440,D1
0002DA0A <AmiBlitz3.ab3@16975>   CMP.w #$3,D2
0002DA0E <AmiBlitz3.ab3@16976>    BCS.w 'doneg
0002DA12 <AmiBlitz3.ab3@16977>   MOVE.w #$4480,D1
0002DA16 <AmiBlitz3.ab3@16978>   CMP.w #$5,D2
0002DA1A <AmiBlitz3.ab3@16979>    BCS.w 'doneg
0002DA1E <AmiBlitz3.ab3@16980>   CMP.w #$6,D2
0002DA22 <AmiBlitz3.ab3@16981>    BCC.w illoperr
0002DA26 <AmiBlitz3.ab3@16982>   MOVE.w #$FFC4,D1   ; was -60
0002DA2A <AmiBlitz3.ab3@16983>  BRA.w fdo2
0002DA30 <AmiBlitz3.ab3@16986>   OR.w regnum,D1                                           ;negate
0002DA36 <AmiBlitz3.ab3@16988>   CLR.l imm_addr
0002DA3A <AmiBlitz3.ab3@16990> BRA.w writeword
0002DA3E <AmiBlitz3.ab3@16994>    BSR.w eval4
0002DA42 <AmiBlitz3.ab3@16995>   CMP.w #")",D0
0002DA46 <AmiBlitz3.ab3@16996>    BEQ.w 'done
0002DA4A <AmiBlitz3.ab3@16997>   CMP.w #"}",D0
0002DA4E <AmiBlitz3.ab3@16998>    BNE.w brackets_                                         ;syntax error brackets
0002DA52 <AmiBlitz3.ab3@17001> BRA.w get1bytemain
0002DA56 <AmiBlitz3.ab3@17007>    BSR.w eval4
0002DA5A <AmiBlitz3.ab3@17008>   CMP.w #$5,D2
0002DA5E <AmiBlitz3.ab3@17009>    BCC.w illoperr
0002DA64 <AmiBlitz3.ab3@17010>   MOVE.w regnum,D1
0002DA68 <AmiBlitz3.ab3@17011>   ORI.w #$4640,D1     ;not.w
0002DA6C <AmiBlitz3.ab3@17012>   CMP.w #$3,D2
0002DA70 <AmiBlitz3.ab3@17013>    BCS.w writeword
0002DA74 <AmiBlitz3.ab3@17014>   EORI.w #$C0,D1
0002DA78 <AmiBlitz3.ab3@17015> BRA.w writeword
0002DA7A <AmiBlitz3.ab3@17019>   MOVEQ.l #$05,D2         ;return Pi.;move.l #x,dnf
0002DA80 <AmiBlitz3.ab3@17021>    TST.b fpu
0002DA84 <AmiBlitz3.ab3@17022>   BEQ 'old
0002DA8A <AmiBlitz3.ab3@17023> JMP fpupi
0002DA90 <AmiBlitz3.ab3@17027>   MOVE.w regnum,D1
0002DA92 <AmiBlitz3.ab3@17028>   LSL.w #8,D1
0002DA94 <AmiBlitz3.ab3@17029>   LSL.w #1,D1
0002DA98 <AmiBlitz3.ab3@17030>   ORI.w #$203C,D1
0002DA9C <AmiBlitz3.ab3@17031>    BSR.w writeword      ;move.l #x,dn
0002DAA2 <AmiBlitz3.ab3@17032>   MOVE.l #$C90FDA42,D1
0002DAA6 <AmiBlitz3.ab3@17033>    BSR.w writelong
0002DAAA <AmiBlitz3.ab3@17034> BRA.w get1bytemain
0002DBA6 <AmiBlitz3.ab3@17042> forthstack:  Ds.l 63                                       ;ds.b  18*32 org source
0002DCA2 <AmiBlitz3.ab3@17043>              Ds.l 63
0002DCEA <AmiBlitz3.ab3@17044>              Ds.l 18
0002DCEE <AmiBlitz3.ab3@17045> forthsp:     Dc.l forthstack
0002DCF4 <AmiBlitz3.ab3@17048> JUMP_checkcast     JMP checkcast
0002DCFA <AmiBlitz3.ab3@17049> JUMP_syntaxerropt4 JMP syntaxerropt4
0002DD26 <AmiBlitz3.ab3@17057>    !fget
0002DD2A <AmiBlitz3.ab3@17058>    CMP.b #$7e,d0
0002DD2E <AmiBlitz3.ab3@17059>    BNE 'noc
0002DD30 <AmiBlitz3.ab3@17060>    SUBQ.l #1,a5
0002DD34 <AmiBlitz3.ab3@17061>    BSR get1bytemain
0002DD38 <AmiBlitz3.ab3@17064>    CMP.b #"#",d0
0002DD3C <AmiBlitz3.ab3@17065>    BNE 'ld1
0002DD40 <AmiBlitz3.ab3@17066>    CMP.b #$22,(a5)
0002DD44 <AmiBlitz3.ab3@17067>    BNE 'ld1
0002DD4A <AmiBlitz3.ab3@17068>    JSR addimmi
0002DD4E <AmiBlitz3.ab3@17071>    CMP.b #$22,d0
0002DD52 <AmiBlitz3.ab3@17072>    BNE 'l11
0002DD58 <AmiBlitz3.ab3@17082>    NOT.w instringon
0002DD5A <AmiBlitz3.ab3@17085>    TST.b d0
0002DD5E <AmiBlitz3.ab3@17086>    BPL 'l10
0002DD60 <AmiBlitz3.ab3@17087>    LSL.w #8,d0
0002DD62 <AmiBlitz3.ab3@17088>    MOVE.b (a5)+,d0                      ; get blitzlib instruction with returnvalue(called in functions/statement)
0002DD68 <AmiBlitz3.ab3@17089>    MOVE.l d0,lasttoken
0002DD6E <AmiBlitz3.ab3@17090>    MOVE.w d0,lastchar
0002DD74 <AmiBlitz3.ab3@17091>    CLR.l rightsidetype                  ; blitzlibs do currently no type check
0002DD7A <AmiBlitz3.ab3@17092>    CLR.w rightsideflagmask
0002DD7E <AmiBlitz3.ab3@17096>   CMP.w #"(",D0
0002DD82 <AmiBlitz3.ab3@17097>    BEQ.w JUMP_checkcast                 ; was  beq bracket org source
0002DD86 <AmiBlitz3.ab3@17102>   CMP.w #"{",D0
0002DD8A <AmiBlitz3.ab3@17103>    BEQ.w bracket
0002DD8E <AmiBlitz3.ab3@17104>   CMP.w #$2D,D0         ;'-'
0002DD92 <AmiBlitz3.ab3@17105>    BEQ.w negate
0002DD96 <AmiBlitz3.ab3@17106>   CMP.w #-$7F77,D0      ; was #(opnot-opabcd)/$1c+$8000+fnum,
0002DD9A <AmiBlitz3.ab3@17107>    BEQ.w notit
0002DD9E <AmiBlitz3.ab3@17109>   MOVEA.l forthsp(PC),A1
0002DDA4 <AmiBlitz3.ab3@17110>   CMPA.l #forthsp,A1
0002DDA8 <AmiBlitz3.ab3@17111>    BCC.w conmemerr
0002DDAE <AmiBlitz3.ab3@17113>   MOVE.l destpointer,(A1)+
0002DDB4 <AmiBlitz3.ab3@17114>   MOVE.l hunkoffsetbase,(A1)+
0002DDBA <AmiBlitz3.ab3@17115>   MOVE.l lasta6,(A1)+
0002DDC0 <AmiBlitz3.ab3@17116>   MOVE.w lasta6,(A1)+
0002DDC2 <AmiBlitz3.ab3@17117>   CLR.w (A1)+
0002DDC4 <AmiBlitz3.ab3@17119>   CLR.w (A1)+
0002DDCA <AmiBlitz3.ab3@17120>   MOVE.l A1,forthsp
0002DDDC <AmiBlitz3.ab3@17126>    !compare2
0002DDE0 <AmiBlitz3.ab3@17128>    BEQ.w fetchnum
0002DDE4 <AmiBlitz3.ab3@17129>   CMP.w #".",D0
0002DDE8 <AmiBlitz3.ab3@17130>    BEQ.w fetchfrac
0002DDEC <AmiBlitz3.ab3@17131>   CMP.w #"#",D0
0002DDF0 <AmiBlitz3.ab3@17132>    BEQ.w get_constant
0002DDF4 <AmiBlitz3.ab3@17133>   CMP.w #"$",D0
0002DDF8 <AmiBlitz3.ab3@17134>    BEQ.w get_hexconstant
0002DDFC <AmiBlitz3.ab3@17135>   CMP.w #"%",D0
0002DE00 <AmiBlitz3.ab3@17136>    BEQ.w fetchbin
0002DE04 <AmiBlitz3.ab3@17137>   CMP.w #-$7FD1,D0    ; was #$8000+47,
0002DE08 <AmiBlitz3.ab3@17138>    BEQ.w fetchsize
0002DE0C <AmiBlitz3.ab3@17139>   CMP.w #-$7F46,D0    ; was #$8007+tnum,
0002DE10 <AmiBlitz3.ab3@17140>    BEQ.w fetchpi
0002DE14 <AmiBlitz3.ab3@17141>   CMP.w #-$7F3B,D0    ; was #$8000+tnum+18,
0002DE18 <AmiBlitz3.ab3@17142>    BEQ.w fetchon
0002DE1C <AmiBlitz3.ab3@17143>   CMP.w #-$7F3A,D0    ; was #$8000+tnum+19,
0002DE20 <AmiBlitz3.ab3@17144>    BEQ.w fetchoff
0002DE26 <AmiBlitz3.ab3@17146>   MOVE.w constmode,D1
0002DE2A <AmiBlitz3.ab3@17147>    BEQ.w 'noasm
0002DE4C <AmiBlitz3.ab3@17149>    !compare1                                               ;bsr.w tstalpha
0002DE50 <AmiBlitz3.ab3@17151>    BEQ.w fetchasm
0002DE54 <AmiBlitz3.ab3@17152>   CMP.w #$5F,D0     ;'_'
0002DE58 <AmiBlitz3.ab3@17153>    BEQ.w fetchasm
0002DE5C <AmiBlitz3.ab3@17154>   CMP.w #$22,D0     ;'"'
0002DE60 <AmiBlitz3.ab3@17155>    BEQ.w fetchqasm
0002DE64 <AmiBlitz3.ab3@17157>  BRA.w syntaxerr
0002DE6A <AmiBlitz3.ab3@17160>   MOVE.w cfetchmode,D1
0002DE6E <AmiBlitz3.ab3@17161>   BEQ.w 'asmok
0002DE72 <AmiBlitz3.ab3@17162>  BRA.w badconerr       ;we're trying to get a const here! 
0002DE74 <AmiBlitz3.ab3@17165>   NOT.w -(A1)    ;set forth stack type to non-const
0002DE96 <AmiBlitz3.ab3@17170>   !compare1                                                ;bsr.w tstalpha
0002DE9A <AmiBlitz3.ab3@17172>    BEQ.w variable
0002DE9E <AmiBlitz3.ab3@17173>   CMP.w #$2A,D0     ;'*'
0002DEA2 <AmiBlitz3.ab3@17174>    BEQ.w variable
0002DEA6 <AmiBlitz3.ab3@17175>   CMP.w #$5C,D0     ;'\'
0002DEAA <AmiBlitz3.ab3@17176>    BEQ.w variable
0002DEAE <AmiBlitz3.ab3@17177>   CMP.w #$22,D0     ;'"'
0002DEB2 <AmiBlitz3.ab3@17178>    BEQ.w litstring
0002DEB6 <AmiBlitz3.ab3@17179>   BTST #$F,D0
0002DEBA <AmiBlitz3.ab3@17180>    BNE.w f_unction
0002DEBE <AmiBlitz3.ab3@17181>   CMP.w #"&",D0
0002DEC2 <AmiBlitz3.ab3@17182>    BEQ.w getvaraddr                                          ;jump to & address of var code
0002DEC6 <AmiBlitz3.ab3@17183>   CMP.w #"?",D0
0002DECA <AmiBlitz3.ab3@17184>    BEQ.w qmark
0002DECE <AmiBlitz3.ab3@17188>   CMP.b #"@",d0
0002DED2 <AmiBlitz3.ab3@17189>    BNE syntaxerr
0002DED8 <AmiBlitz3.ab3@17190>   TST.b newsyntax
0002DEDC <AmiBlitz3.ab3@17191>    BEQ JUMP_syntaxerropt4
0002DEE2 <AmiBlitz3.ab3@17192>   MOVE.w regnum,D1
0002DEE4 <AmiBlitz3.ab3@17193>   LSL.w #8,D1
0002DEE6 <AmiBlitz3.ab3@17194>   LSL.w #1,D1
0002DEEA <AmiBlitz3.ab3@17195>   ORI.w #$203C,D1
0002DEEE <AmiBlitz3.ab3@17196>   BSR.w writeword
0002DEF2 <AmiBlitz3.ab3@17197>   CMP.b #$22,(a5)
0002DEF6 <AmiBlitz3.ab3@17198>    BNE syntaxerr
0002DEF8 <AmiBlitz3.ab3@17199>   ADDQ #1,a5
0002DEFA <AmiBlitz3.ab3@17200>   MOVEQ #0,d0
0002DEFE <AmiBlitz3.ab3@17201>   CMP.b #1,d2
0002DF02 <AmiBlitz3.ab3@17202>    BEQ 'l3b
0002DF06 <AmiBlitz3.ab3@17203>   CMP.b #2,d2
0002DF0A <AmiBlitz3.ab3@17204>    BEQ 'l2b
0002DF0E <AmiBlitz3.ab3@17205>   CMP.b #4,d2
0002DF12 <AmiBlitz3.ab3@17206>    BEQ error_convert_types
0002DF14 <AmiBlitz3.ab3@17207>   MOVE.b (a5)+,d0
0002DF18 <AmiBlitz3.ab3@17208>   BEQ syntaxerr
0002DF1C <AmiBlitz3.ab3@17209>   CMP.b #$22,d0
0002DF20 <AmiBlitz3.ab3@17210>   BNE 'l1
0002DF24 <AmiBlitz3.ab3@17211>     MOVE.b #0,d0
0002DF28 <AmiBlitz3.ab3@17212>  BRA 'do
0002DF2A <AmiBlitz3.ab3@17215>   ASL.l #8,d0
0002DF2C <AmiBlitz3.ab3@17216>   MOVE.b (a5)+,d0
0002DF30 <AmiBlitz3.ab3@17217>   BEQ syntaxerr
0002DF34 <AmiBlitz3.ab3@17218>   CMP.b #$22,d0
0002DF38 <AmiBlitz3.ab3@17219>   BNE 'l2
0002DF3C <AmiBlitz3.ab3@17220>     MOVE.b #0,d0
0002DF3E <AmiBlitz3.ab3@17221>     ASR.l #8,d0
0002DF42 <AmiBlitz3.ab3@17222>  BRA 'do
0002DF44 <AmiBlitz3.ab3@17225>   ASL.l #8,d0
0002DF46 <AmiBlitz3.ab3@17228>   MOVE.b (a5)+,d0
0002DF4A <AmiBlitz3.ab3@17229>    BEQ syntaxerr
0002DF4E <AmiBlitz3.ab3@17230>    CMP.b #$22,d0
0002DF52 <AmiBlitz3.ab3@17231>    BNE 'l3
0002DF56 <AmiBlitz3.ab3@17232>    MOVE.b #0,d0
0002DF58 <AmiBlitz3.ab3@17233>    ASR.l #8,d0
0002DF5C <AmiBlitz3.ab3@17234>  BRA 'do
0002DF5E <AmiBlitz3.ab3@17237>   ASL.l #8,d0
0002DF60 <AmiBlitz3.ab3@17240>   MOVE.b (a5)+,d0
0002DF64 <AmiBlitz3.ab3@17241>    BEQ syntaxerr
0002DF68 <AmiBlitz3.ab3@17242>    CMP.b #$22,d0
0002DF6C <AmiBlitz3.ab3@17243>    BNE 'l4
0002DF70 <AmiBlitz3.ab3@17244>    MOVE.b #0,d0
0002DF72 <AmiBlitz3.ab3@17245>    ASR.l #8,d0
0002DF76 <AmiBlitz3.ab3@17246>  BRA 'do
0002DF7A <AmiBlitz3.ab3@17249>    CMP.b #$22,(a5)+
0002DF7E <AmiBlitz3.ab3@17250>    BNE error4char
0002DF80 <AmiBlitz3.ab3@17253>   MOVE.l d0,d1
0002DF84 <AmiBlitz3.ab3@17254>     BSR writelong
0002DF88 <AmiBlitz3.ab3@17255>     BSR get1bytemain
0002DF8A <AmiBlitz3.ab3@17256> RTS
0002DF8E <AmiBlitz3.ab3@17261>   BSR.w get1bytemain
0002DF92 <AmiBlitz3.ab3@17262>   CMP.w #$2E,D0     ; '.'
0002DF96 <AmiBlitz3.ab3@17263>    BEQ.b sizeobj
0002DFA0 <AmiBlitz3.ab3@17269>   MOVE.w oldqflag,instringon
0002DFA6 <AmiBlitz3.ab3@17270>   MOVEA.l lastsourcepos,A5
0002DFA8 <AmiBlitz3.ab3@17272>   MOVE.w D2,-(A7)
0002DFAC <AmiBlitz3.ab3@17273>    BSR.w getparameter2
0002DFB0 <AmiBlitz3.ab3@17274>    BEQ.w syntaxerr
0002DFB6 <AmiBlitz3.ab3@17275>   LEA varbase,A2
0002DFBA <AmiBlitz3.ab3@17276>    BSR.w findvariable
0002DFBE <AmiBlitz3.ab3@17277>    BNE.w notypeerr         ;!
0002DFC2 <AmiBlitz3.ab3@17280>   MOVE.w $4(A2),D3
0002DFC4 <AmiBlitz3.ab3@17281>   EXT.l D3
0002DFC6 <AmiBlitz3.ab3@17282>   MOVE.w (A7)+,D2
0002DFCA <AmiBlitz3.ab3@17283> BRA.w fetchnum2
0002DFCC <AmiBlitz3.ab3@17287>   MOVE.w D2,-(A7)
0002DFD0 <AmiBlitz3.ab3@17288>    BSR.w getparameter2
0002DFD4 <AmiBlitz3.ab3@17289>    BEQ.w syntaxerr
0002DFDA <AmiBlitz3.ab3@17290>   LEA newtypebase,A2
0002DFDE <AmiBlitz3.ab3@17291>    BSR.w findtype
0002DFE2 <AmiBlitz3.ab3@17292>    BNE.w notypeerr
0002DFE4 <AmiBlitz3.ab3@17293>   MOVEQ.l #$00,D3
0002DFE8 <AmiBlitz3.ab3@17294>   CMP.w #$5C,D0     ;'\'
0002DFEC <AmiBlitz3.ab3@17295>    BNE.w 'jty
0002DFF0 <AmiBlitz3.ab3@17296>    BSR.w getparameter2
0002DFF4 <AmiBlitz3.ab3@17297>    BEQ.w syntaxerr
0002DFF8 <AmiBlitz3.ab3@17298>   LEA $4(A2),A2
0002DFFC <AmiBlitz3.ab3@17299>    BSR.w findvariable2
0002E000 <AmiBlitz3.ab3@17300>    BNE.w noofferr
0002E004 <AmiBlitz3.ab3@17301>   MOVE.w $4(A2),D3
0002E008 <AmiBlitz3.ab3@17302>  BRA.w 'jty2
0002E00C <AmiBlitz3.ab3@17305>   MOVE.w $8(A2),D3
0002E00E <AmiBlitz3.ab3@17308>   MOVE.w (A7)+,D2
0002E012 <AmiBlitz3.ab3@17309> BRA.w fetchnum2
0002E014 <AmiBlitz3.ab3@17313>   MOVEQ.l #-$01,D3
0002E018 <AmiBlitz3.ab3@17314>    BSR.w get1bytemain
0002E01C <AmiBlitz3.ab3@17315> BRA.w fetchnum2
0002E01E <AmiBlitz3.ab3@17319>   MOVEQ.l #$00,D3
0002E022 <AmiBlitz3.ab3@17320>    BSR.w get1bytemain
0002E026 <AmiBlitz3.ab3@17321> BRA.w fetchnum2
0002E02A <AmiBlitz3.ab3@17327>   CMP.w #$30,D0     ;'0'
0002E02E <AmiBlitz3.ab3@17328>    BCS.w 'no
0002E032 <AmiBlitz3.ab3@17329>   CMP.w #$39,D0     ;'9'
0002E036 <AmiBlitz3.ab3@17330>    BLS.w 'yes
0002E03A <AmiBlitz3.ab3@17331>   ANDI.w #$FFDF,D0
0002E03E <AmiBlitz3.ab3@17332>   CMP.w #$46,D0     ;'F'
0002E042 <AmiBlitz3.ab3@17333>    BHI.w 'no
0002E046 <AmiBlitz3.ab3@17334>   CMP.w #$41,D0     ;'A'
0002E04A <AmiBlitz3.ab3@17335>    BCS.w 'no
0002E04C <AmiBlitz3.ab3@17338>    CMP.w D0,D0
0002E04E <AmiBlitz3.ab3@17341> RTS
0002E052 <AmiBlitz3.ab3@17345>   CMP.w #$31,D0    ;'1'
0002E056 <AmiBlitz3.ab3@17346>    BEQ.w 'ok
0002E05A <AmiBlitz3.ab3@17347>   CMP.w #$30,D0    ;'0'
0002E05C <AmiBlitz3.ab3@17350> RTS
0002E05E <AmiBlitz3.ab3@17355>    MOVEQ #0,d0
0002E060 <AmiBlitz3.ab3@17356>    MOVE.b (a5)+,d0
0002E062 <AmiBlitz3.ab3@17357>    MOVE.b (a5)+,d0
0002E066 <AmiBlitz3.ab3@17358>    BSR ishex
0002E06A <AmiBlitz3.ab3@17359>    BNE syntaxerr
0002E06E <AmiBlitz3.ab3@17360>    SUBI.w #$30,D0
0002E072 <AmiBlitz3.ab3@17361>    CMP.w #$9,D0
0002E076 <AmiBlitz3.ab3@17362>    BLS.w 'l1
0002E078 <AmiBlitz3.ab3@17363>    SUBQ.w #7,D0
0002E07A <AmiBlitz3.ab3@17366>    MOVE.l d0,d1
0002E07C <AmiBlitz3.ab3@17367>    MOVE.b (a5)+,d0
0002E080 <AmiBlitz3.ab3@17368>      BSR ishex
0002E084 <AmiBlitz3.ab3@17369>     BNE syntaxerr
0002E086 <AmiBlitz3.ab3@17370>     LSL.l #4,d1
0002E08A <AmiBlitz3.ab3@17371>     SUBI.w #$30,D0
0002E08E <AmiBlitz3.ab3@17372>    CMP.w #$9,D0
0002E092 <AmiBlitz3.ab3@17373>    BLS.w 'l2
0002E094 <AmiBlitz3.ab3@17374>    SUBQ.w #7,D0
0002E096 <AmiBlitz3.ab3@17377>   ADD.l d1,d0
0002E098 <AmiBlitz3.ab3@17378> RTS
0002E09C <AmiBlitz3.ab3@17382>    BSR.w get1bytemain
0002E0A0 <AmiBlitz3.ab3@17383>    BSR.w ishex
0002E0A4 <AmiBlitz3.ab3@17384>    BNE.w syntaxerr
0002E0A6 <AmiBlitz3.ab3@17385>   MOVEQ.l #$00,D3
0002E0AA <AmiBlitz3.ab3@17387>   CMP.w #5,d2
0002E0AE <AmiBlitz3.ab3@17388>   BNE 'loop
0002E0B4 <AmiBlitz3.ab3@17389>   CMP.l #newtype_double,a2
0002E0B8 <AmiBlitz3.ab3@17390>   BEQ 'doit
0002E0BE <AmiBlitz3.ab3@17391>   CMP.l #newtype_float,a2
0002E0C2 <AmiBlitz3.ab3@17392>   BNE 'loop
0002E0CA <AmiBlitz3.ab3@17395>    fmove.s #0,fp0
0002E0D0 <AmiBlitz3.ab3@17398>   TST.b fpu
0002E0D4 <AmiBlitz3.ab3@17399>   BEQ 'loop
0002E0DA <AmiBlitz3.ab3@17400>   fmove.w #16,fp1
0002E0DE <AmiBlitz3.ab3@17401>   fmul.x fp1,fp0
0002E0E2 <AmiBlitz3.ab3@17402>   SUBI.w #$30,D0
0002E0E6 <AmiBlitz3.ab3@17403>   CMP.w #$9,D0
0002E0EA <AmiBlitz3.ab3@17404>    BLS.w 'skipa
0002E0EC <AmiBlitz3.ab3@17405>   SUBQ.w #7,D0
0002E0F0 <AmiBlitz3.ab3@17408>    fmove.w d0,fp1
0002E0F4 <AmiBlitz3.ab3@17409>    fadd.x fp1,fp0
0002E0F8 <AmiBlitz3.ab3@17410>    BSR.w get1bytemain
0002E0FC <AmiBlitz3.ab3@17411>    BSR.w ishex
0002E100 <AmiBlitz3.ab3@17412>    BEQ.w 'loopa
0002E104 <AmiBlitz3.ab3@17413>  BRA.w nofpregload
0002E10A <AmiBlitz3.ab3@17417>   CMP.l #$10000000,D3
0002E10E <AmiBlitz3.ab3@17418>    BCC.w overerr
0002E110 <AmiBlitz3.ab3@17419>   LSL.l #4,D3
0002E114 <AmiBlitz3.ab3@17420>   SUBI.w #$30,D0
0002E118 <AmiBlitz3.ab3@17421>   CMP.w #$9,D0
0002E11C <AmiBlitz3.ab3@17422>    BLS.w 'skip
0002E11E <AmiBlitz3.ab3@17423>   SUBQ.w #7,D0
0002E120 <AmiBlitz3.ab3@17426>   OR.w D0,D3
0002E124 <AmiBlitz3.ab3@17427>    BSR.w get1bytemain
0002E128 <AmiBlitz3.ab3@17428>    BSR.w ishex
0002E12C <AmiBlitz3.ab3@17429>    BEQ.w 'loop
0002E130 <AmiBlitz3.ab3@17430> BRA.w fetchnum2
0002E134 <AmiBlitz3.ab3@17434>    BSR.w get1bytemain
0002E138 <AmiBlitz3.ab3@17435>    BSR.w checkbin
0002E13C <AmiBlitz3.ab3@17436>    BNE.w syntaxerr
0002E13E <AmiBlitz3.ab3@17437>    MOVEQ.l #$00,D3
0002E140 <AmiBlitz3.ab3@17440>    LSL.l #1,D3
0002E144 <AmiBlitz3.ab3@17441>    BCS.w overerr
0002E148 <AmiBlitz3.ab3@17442>   SUBI.w #$30,D0
0002E14A <AmiBlitz3.ab3@17443>   OR.w D0,D3
0002E14E <AmiBlitz3.ab3@17444>    BSR.w get1bytemain
0002E152 <AmiBlitz3.ab3@17445>    BSR.w checkbin
0002E156 <AmiBlitz3.ab3@17446>    BEQ.w 'loop
0002E15A <AmiBlitz3.ab3@17447> BRA.w fetchnum2
0002E15C <AmiBlitz3.ab3@17451>    MOVE.w d2,-(A7)
0002E164 <AmiBlitz3.ab3@17453>    MOVE.b #0,automode
0002E168 <AmiBlitz3.ab3@17454>    CMP.b #"@",(a5)
0002E16C <AmiBlitz3.ab3@17455>    BNE 'l1
0002E16E <AmiBlitz3.ab3@17456>    ADDQ.l #1,a5
0002E176 <AmiBlitz3.ab3@17457>    MOVE.b #1,automode
0002E17A <AmiBlitz3.ab3@17458>    BSR getparameter2
0002E17E <AmiBlitz3.ab3@17459>    BSR findlabel2
0002E182 <AmiBlitz3.ab3@17460>    BNE 'addit
0002E186 <AmiBlitz3.ab3@17461>  BRA errormsg_autocount
0002E18A <AmiBlitz3.ab3@17464>   BSR.w addlabelhash
0002E192 <AmiBlitz3.ab3@17465>   MOVE.l #$1,$4(A2)
0002E196 <AmiBlitz3.ab3@17466>   MOVEM.l a2/a5,-(a7)
0002E19C <AmiBlitz3.ab3@17467>   MOVE.w lastchar,-(a7)
0002E1A2 <AmiBlitz3.ab3@17468>   LEA autostorename,a5
0002E1A6 <AmiBlitz3.ab3@17469>   BSR getparameter2
0002E1AA <AmiBlitz3.ab3@17470>   BSR findlabel2
0002E1AE <AmiBlitz3.ab3@17471>   BEQ 'found
0002E1B2 <AmiBlitz3.ab3@17472>   BSR.w addlabelhash
0002E1BA <AmiBlitz3.ab3@17473>   MOVE.l #$1,$4(A2)
0002E1C2 <AmiBlitz3.ab3@17474>   MOVE.l #0,8(a2)
0002E1C4 <AmiBlitz3.ab3@17477>    MOVE.w (a7)+,d0
0002E1CA <AmiBlitz3.ab3@17478>    MOVE.w d0,lastchar
0002E1CE <AmiBlitz3.ab3@17479>   MOVE.l 8(a2),d3
0002E1D6 <AmiBlitz3.ab3@17480>   ADD.l #1,8(a2)
0002E1DA <AmiBlitz3.ab3@17481>   MOVEM.l (a7)+,a2/a5
0002E1DE <AmiBlitz3.ab3@17482>   MOVE.l d3,8(a2)
0002E1E2 <AmiBlitz3.ab3@17483>   MOVE.l $8(A2),D3
0002E1E6 <AmiBlitz3.ab3@17484>  BRA.l 'l3
0002E1EA <AmiBlitz3.ab3@17488>   BSR.w getparameter2
0002E1F0 <AmiBlitz3.ab3@17490>     TST.b incnif
0002E1F4 <AmiBlitz3.ab3@17491>     BEQ 'lc1
0002E1F8 <AmiBlitz3.ab3@17492>     BSR.w findlabel2
0002E1FC <AmiBlitz3.ab3@17493>     BNE 'l5
0002E1FE <AmiBlitz3.ab3@17494>     MOVEQ #1,d3
0002E200 <AmiBlitz3.ab3@17495>     MOVE.w (A7)+,D2
0002E204 <AmiBlitz3.ab3@17496>  BRA fetchnum2
0002E206 <AmiBlitz3.ab3@17499>   MOVEQ #0,d3
0002E208 <AmiBlitz3.ab3@17500>     MOVE.w (A7)+,D2
0002E20C <AmiBlitz3.ab3@17501>  BRA fetchnum2
0002E210 <AmiBlitz3.ab3@17505>    BSR.w findlabel2
0002E214 <AmiBlitz3.ab3@17506>    BNE.w cnferr
0002E21C <AmiBlitz3.ab3@17509>    CMPI.l #$1,$4(A2)
0002E220 <AmiBlitz3.ab3@17510>    BNE.w cnferr
0002E224 <AmiBlitz3.ab3@17513>    MOVE.l $8(A2),D3
0002E226 <AmiBlitz3.ab3@17514>    MOVE.w (A7)+,D2
0002E22A <AmiBlitz3.ab3@17515> BRA.w fetchnum2     ;to right type.
0002E230 <AmiBlitz3.ab3@17520>   CLR.w vartype
0002E238 <AmiBlitz3.ab3@17521>   MOVE.b #3,peekaddrsize
0002E23C <AmiBlitz3.ab3@17523>   BSR.w ampersand2
0002E242 <AmiBlitz3.ab3@17525>   MOVE.l a2,rightsidetype
0002E24C <AmiBlitz3.ab3@17526>   MOVE.w flagmask,rightsideflagmask
0002E24E <AmiBlitz3.ab3@17528>   MOVEQ.l #$03,D2
0002E250 <AmiBlitz3.ab3@17529> RTS
0002E254 <AmiBlitz3.ab3@17533>    BSR.w get1bytemain
0002E266 <AmiBlitz3.ab3@17535>    !compare2
0002E26A <AmiBlitz3.ab3@17536>    BEQ andop2
0002E26E <AmiBlitz3.ab3@17538>    BSR.w getparameter
0002E272 <AmiBlitz3.ab3@17539>    BSR.w fetchvars
0002E276 <AmiBlitz3.ab3@17540>    BSR.w calcvar
0002E27A <AmiBlitz3.ab3@17542>   CMP.b #$7,D2
0002E27E <AmiBlitz3.ab3@17543>    BNE.w 'notst
0002E282 <AmiBlitz3.ab3@17544>   BTST #$F,D2
0002E286 <AmiBlitz3.ab3@17545>    BNE.w 'algot2
0002E28C <AmiBlitz3.ab3@17546>   MOVE.w D3,stamp2+2
0002E292 <AmiBlitz3.ab3@17547>   MOVE.l stamp2,D1
0002E296 <AmiBlitz3.ab3@17548>    BSR.w pokela5s
0002E29A <AmiBlitz3.ab3@17549>  BRA.w 'algot
0002E2A0 <AmiBlitz3.ab3@17552>   MOVE.w regnum,D1
0002E2A2 <AmiBlitz3.ab3@17553>   LSL.w #8,D1
0002E2A4 <AmiBlitz3.ab3@17554>   LSL.w #1,D1
0002E2AA <AmiBlitz3.ab3@17555>   OR.w stamp,D1
0002E2AE <AmiBlitz3.ab3@17556>    BSR.w writeword
0002E2B0 <AmiBlitz3.ab3@17557>  RTS
0002E2B4 <AmiBlitz3.ab3@17560>   BTST #$F,D2
0002E2B8 <AmiBlitz3.ab3@17561>    BNE.w 'algot
0002E2BE <AmiBlitz3.ab3@17562>   MOVE.w D3,leaamp+2
0002E2C4 <AmiBlitz3.ab3@17563>   MOVE.l leaamp,D1
0002E2C8 <AmiBlitz3.ab3@17564>    BSR.w pokela5s
0002E2CE <AmiBlitz3.ab3@17567>   MOVE.w regnum,D1
0002E2D0 <AmiBlitz3.ab3@17568>   LSL.w #8,D1
0002E2D2 <AmiBlitz3.ab3@17569>   LSL.w #1,D1
0002E2D8 <AmiBlitz3.ab3@17570>   OR.w leaamp2,D1
0002E2DC <AmiBlitz3.ab3@17571> BRA.w writeword
0002E2E0 <AmiBlitz3.ab3@17576>   MOVE.w #$D200,D1     ; was #ern,
0002E2E4 <AmiBlitz3.ab3@17577>    BSR.w Atokejsr
0002E2E6 <AmiBlitz3.ab3@17578>   MOVEQ.l #$03,D2
0002E2E8 <AmiBlitz3.ab3@17579> RTS
0002E2EC <AmiBlitz3.ab3@17583> addrcode:  Dc.b $20,$6D,$00,$00                            ;MOVEA.L $0000(A5),A0
0002E2EE <AmiBlitz3.ab3@17584>            Dc.b $D0,$C0                                    ;ADDA.W  D0,A0
0002E2F0 <AmiBlitz3.ab3@17585>            Dc.b $20,$08                                    ;MOVE.L  A0,D0
0002E2F4 <AmiBlitz3.ab3@17591>    BSR.w get1bytemain
0002E2F6 <AmiBlitz3.ab3@17593>   MOVE.w D0,D1
0002E2FA <AmiBlitz3.ab3@17594>    BPL.w syntaxerr
0002E2FC <AmiBlitz3.ab3@17595>   MOVE.w D2,-(A7)
0002E300 <AmiBlitz3.ab3@17596>   BCLR #$F,D1
0002E304 <AmiBlitz3.ab3@17597>    BSR.w searchinstr
0002E308 <AmiBlitz3.ab3@17598>   MOVE.l $12(A2),D0
0002E30C <AmiBlitz3.ab3@17599>   TST.w -$2(A2,D0.L)
0002E310 <AmiBlitz3.ab3@17600>    BEQ.w freeerr
0002E312 <AmiBlitz3.ab3@17601>   MOVE.w (A7)+,D2
0002E314 <AmiBlitz3.ab3@17602> RTS
0002E318 <AmiBlitz3.ab3@17606>   MOVE.l $0(A5),D0
0002E31C <AmiBlitz3.ab3@17607>    BNE.b ucodeskip
0002E31E <AmiBlitz3.ab3@17608>   MOVEQ.l #-$01,D0
0002E322 <AmiBlitz3.ab3@17609> BRA.b usedcodef
0002E326 <AmiBlitz3.ab3@17612>   SUB.l $0(A5),D0
0002E328 <AmiBlitz3.ab3@17615>   LSR.w #8,D0
0002E32C <AmiBlitz3.ab3@17620>    MOVE.l $0(A5),D0
0002E330 <AmiBlitz3.ab3@17621>    BNE.b ucodeskip2
0002E332 <AmiBlitz3.ab3@17622>   MOVEQ.l #-$01,D0
0002E336 <AmiBlitz3.ab3@17623> BRA.b usedcode2f
0002E33A <AmiBlitz3.ab3@17626>   SUB.l $0(A5),D0                                          ;usedcode2
0002E33C <AmiBlitz3.ab3@17627>   LSR.w #8,D0
0002E33E <AmiBlitz3.ab3@17630>   LSR.w #8,D0
0002E340 <AmiBlitz3.ab3@17635>   MOVE.l D0,-(A7)
0002E342 <AmiBlitz3.ab3@17638>   MOVE.l (A7)+,D0
0002E344 <AmiBlitz3.ab3@17641>   MOVE.l D0,D0
0002E348 <AmiBlitz3.ab3@17647>   BSR.w fetchit
0002E34C <AmiBlitz3.ab3@17649>   MOVE.w -$2(A2,D0.L),D3
0002E350 <AmiBlitz3.ab3@17650>   CMP.w #$9,D3
0002E354 <AmiBlitz3.ab3@17651>    BCC.w 'skip
0002E358 <AmiBlitz3.ab3@17655>   LEA usedcode(PC),A0
0002E35C <AmiBlitz3.ab3@17656>   LEA usedcodef(PC),A1
0002E362 <AmiBlitz3.ab3@17658>   ANDI.w #$F1FF,$E+4(A0)                                   ;and #$f1ff,ucodediv-usedcode(a0) org source
0002E366 <AmiBlitz3.ab3@17659>   ANDI.w #$7,D3
0002E368 <AmiBlitz3.ab3@17660>   LSL.w #8,D3
0002E36A <AmiBlitz3.ab3@17661>   LSL.w #1,D3
0002E36E <AmiBlitz3.ab3@17662>   OR.w D3,$E+4(A0)                                         ;or  d3,ucodediv-usedcode(a0) org source
0002E372 <AmiBlitz3.ab3@17663>  BRA.w 'skip2
0002E376 <AmiBlitz3.ab3@17668>   LEA usedcode2(PC),A0
0002E37A <AmiBlitz3.ab3@17669>   LEA usedcode2f(PC),A1
0002E380 <AmiBlitz3.ab3@17671>   ANDI.w #$F1FF,$10+4(A0)                                  ;and #$f1ff,ucodediv2-usedcode2(a0) org source
0002E382 <AmiBlitz3.ab3@17672>   SUBQ.w #8,D3
0002E384 <AmiBlitz3.ab3@17673>   LSL.w #8,D3
0002E386 <AmiBlitz3.ab3@17674>   LSL.w #1,D3
0002E38A <AmiBlitz3.ab3@17675>   OR.w D3,$10+4(A0)                                        ;or  d3,ucodediv2-usedcode2(a0) org source
0002E38E <AmiBlitz3.ab3@17678>   MOVE.w -$6(A2,D0.L),D3
0002E392 <AmiBlitz3.ab3@17679>   MOVE.w D3,$C+4(A0)                                       ;move d3,ucodeskip-usedcode+2(a0) org source
0002E394 <AmiBlitz3.ab3@17680>   ADDQ.w #4,D3
0002E398 <AmiBlitz3.ab3@17681>   MOVE.w D3,$2(A0)
0002E39E <AmiBlitz3.ab3@17682>   MOVE.w regnum,D1
0002E3A2 <AmiBlitz3.ab3@17683>    BEQ.w 'skip3
0002E3A6 <AmiBlitz3.ab3@17684>   MOVE.w usedprep(PC),D1
0002E3AA <AmiBlitz3.ab3@17685>    BSR.w writeword
0002E3AE <AmiBlitz3.ab3@17688>   BSR.w pokecode
0002E3B4 <AmiBlitz3.ab3@17689>   MOVE.w regnum,D1
0002E3B8 <AmiBlitz3.ab3@17690>    BEQ.w 'skip4
0002E3BA <AmiBlitz3.ab3@17691>   LSL.w #8,D1
0002E3BC <AmiBlitz3.ab3@17692>   LSL.w #1,D1
0002E3C0 <AmiBlitz3.ab3@17693>   OR.w usedfix(PC),D1
0002E3C4 <AmiBlitz3.ab3@17694>    BSR.w writeword
0002E3C8 <AmiBlitz3.ab3@17695>   MOVE.w useddone(PC),D1
0002E3CC <AmiBlitz3.ab3@17696>    BSR.w writeword
0002E3CE <AmiBlitz3.ab3@17699>    MOVEQ.l #$02,D2
0002E3D2 <AmiBlitz3.ab3@17700> BRA.w get1bytemain
0002E3D6 <AmiBlitz3.ab3@17708>    BSR.w fetchit
0002E3D8 <AmiBlitz3.ab3@17710>   MOVEQ.l #$00,D3
0002E3DC <AmiBlitz3.ab3@17711>   MOVE.w -$4(A2,D0.L),D3
0002E3E0 <AmiBlitz3.ab3@17712>    BSR.w get1bytemain
0002E3E4 <AmiBlitz3.ab3@17713> BRA.w fetchnum2
0002E3E8 <AmiBlitz3.ab3@17720>    BSR.w get1bytemain    ;get the token
0002E3EA <AmiBlitz3.ab3@17721>   MOVE.w D0,-(A7)
0002E3EE <AmiBlitz3.ab3@17722>    BSR.w get1bytemain    ;and the bracket?
0002E3F2 <AmiBlitz3.ab3@17723>   CMP.w #$28,D0          ;'('
0002E3F6 <AmiBlitz3.ab3@17724>    BNE.w syntaxerr
0002E3F8 <AmiBlitz3.ab3@17725>   MOVE.w (A7)+,D0
0002E3FC <AmiBlitz3.ab3@17726>    BSR.w getmaxel
0002E400 <AmiBlitz3.ab3@17727>    BSR.w reget
0002E404 <AmiBlitz3.ab3@17728>   CMP.w #$29,D0          ;')'
0002E408 <AmiBlitz3.ab3@17729>    BNE.w syntaxerr
0002E40C <AmiBlitz3.ab3@17733>   LEA addrcode(PC),A0
0002E410 <AmiBlitz3.ab3@17734>   LEA addrcodef(PC),A1
0002E416 <AmiBlitz3.ab3@17735>   MOVE.w -$6(A2),$2(A0) ;x(a5)
0002E41A <AmiBlitz3.ab3@17736>   MOVE.w $4(A0),D1
0002E41E <AmiBlitz3.ab3@17737>   ANDI.w #$FFF8,D1
0002E424 <AmiBlitz3.ab3@17738>   OR.w regnum,D1
0002E428 <AmiBlitz3.ab3@17739>   MOVE.w D1,$4(A0)      ;add Dregat,a0
0002E42C <AmiBlitz3.ab3@17740>   MOVE.w $6(A0),D1
0002E430 <AmiBlitz3.ab3@17741>   ANDI.w #$F1FF,D1
0002E436 <AmiBlitz3.ab3@17742>   MOVE.w regnum,D0
0002E438 <AmiBlitz3.ab3@17743>   LSL.w #8,D0
0002E43A <AmiBlitz3.ab3@17744>   LSL.w #1,D0
0002E43C <AmiBlitz3.ab3@17745>   OR.w D0,D1
0002E440 <AmiBlitz3.ab3@17746>   MOVE.w D1,$6(A0)      ;move.l a0,Dregat
0002E444 <AmiBlitz3.ab3@17747>    BSR.w pokecode
0002E446 <AmiBlitz3.ab3@17748>   MOVEQ.l #$03,D2       ;now a long
0002E44A <AmiBlitz3.ab3@17749> BRA.w get1bytemain
0002E44E <AmiBlitz3.ab3@17755>   CMP.w #-$7F4D,D0     ; was #$8000+tnum,
0002E452 <AmiBlitz3.ab3@17756>    BHI.w 'overasm
0002E456 <AmiBlitz3.ab3@17757>  BRA.w syntaxerr
0002E45A <AmiBlitz3.ab3@17762>   CMP.w #NullTokenID,d0                                ;#$b581 check for lib 107 token 1 "NULL" form elomorsyslib
0002E45E <AmiBlitz3.ab3@17763>    BNE 'nonull
0002E464 <AmiBlitz3.ab3@17764>    MOVE.l d0,lastinstruction
0002E468 <AmiBlitz3.ab3@17765>    MOVE.w #$7000,d1                                            ;asm instr moveq #0,dx
0002E46E <AmiBlitz3.ab3@17766>    MOVE.w regnum,d0
0002E470 <AmiBlitz3.ab3@17767>    ASL.l #7,d0
0002E472 <AmiBlitz3.ab3@17768>    ASL.l #2,d0
0002E474 <AmiBlitz3.ab3@17769>    OR.l d0,d1
0002E478 <AmiBlitz3.ab3@17770>    BSR writeword
0002E47E <AmiBlitz3.ab3@17771>    JSR get1bytemain
0002E480 <AmiBlitz3.ab3@17772>   RTS
0002E484 <AmiBlitz3.ab3@17775>   CMP.w #$c982,d0
0002E488 <AmiBlitz3.ab3@17776>    BNE nonew_
0002E48A <AmiBlitz3.ab3@17779>   MOVE.l a5,-(a7)
0002E490 <AmiBlitz3.ab3@17780>   MOVE.w lastchar,-(a7)
0002E496 <AmiBlitz3.ab3@17781>   JSR get1bytemain
0002E49A <AmiBlitz3.ab3@17782>   CMP.w #"(",d0                                             ; use oldcode
0002E49E <AmiBlitz3.ab3@17783>   BNE 'newcode
0002E4A4 <AmiBlitz3.ab3@17784>   JSR get1bytemain
0002E4A8 <AmiBlitz3.ab3@17785>   CMP.w #")",d0
0002E4AC <AmiBlitz3.ab3@17786>   BEQ 'newcode
0002E4B2 <AmiBlitz3.ab3@17787>   MOVE.w (a7)+,lastchar
0002E4B4 <AmiBlitz3.ab3@17788>   MOVE.l (a7)+,a5
0002E4BA <AmiBlitz3.ab3@17789>   MOVE.w lastchar,d0
0002E4BE <AmiBlitz3.ab3@17790>   BRA nonew_
0002E4C0 <AmiBlitz3.ab3@17793>   MOVE.l a0,-(a7)
0002E4C6 <AmiBlitz3.ab3@17794>   TST.b blitzparloop
0002E4CA <AmiBlitz3.ab3@17795>   BNE 'err
0002E4D0 <AmiBlitz3.ab3@17796>   TST.b funcparloop
0002E4D4 <AmiBlitz3.ab3@17797>   BNE 'err
0002E4D8 <AmiBlitz3.ab3@17798>   BRA 'ok
0002E4DE <AmiBlitz3.ab3@17801>   JMP errornewnotincalls
0002E4E4 <AmiBlitz3.ab3@17804>   MOVE.l #$203c0000,d1
0002E4E8 <AmiBlitz3.ab3@17805>   BSR writelong                                            ; 68k asm move.l #$xx,d0
0002E4EA <AmiBlitz3.ab3@17806>   MOVEQ #0,d1
0002E4EE <AmiBlitz3.ab3@17807>   MOVE.w 8(a0),d1
0002E4F2 <AmiBlitz3.ab3@17808>   BSR writeword
0002E4F6 <AmiBlitz3.ab3@17809>   MOVE.w #$7200,d1                                         ; 68k asm "moveq #0,d1"
0002E4FA <AmiBlitz3.ab3@17810>   BSR writeword
0002E4FE <AmiBlitz3.ab3@17811>   MOVE.w #$C002,D1                                         ;call function to alloc global mem
0002E502 <AmiBlitz3.ab3@17812>   BSR.w tokejsr2
0002E504 <AmiBlitz3.ab3@17813>   MOVE.l (a7)+,a0
0002E506 <AmiBlitz3.ab3@17814>   ADDQ.l #6,a7                      ; a5 need not restore
0002E50A <AmiBlitz3.ab3@17815>   CMP.w #")",d0
0002E50E <AmiBlitz3.ab3@17816>   BNE 'nobracket
0002E514 <AmiBlitz3.ab3@17817>   JSR get1bytemain
0002E516 <AmiBlitz3.ab3@17820> RTS
0002E51A <AmiBlitz3.ab3@17824>   CMP.w #-$7F4A,D0      ; was #$8003+tnum,
0002E51E <AmiBlitz3.ab3@17825>    BEQ.w doern
0002E522 <AmiBlitz3.ab3@17826>   CMP.w #-$7F48,D0      ; was #$8005+tnum,
0002E526 <AmiBlitz3.ab3@17827>    BEQ.w doaddr
0002E52A <AmiBlitz3.ab3@17828>   CMP.w #-$7F3C,D0      ; was #$8011+tnum,
0002E52E <AmiBlitz3.ab3@17829>    BEQ.w domaximum
0002E532 <AmiBlitz3.ab3@17830>   CMP.w #-$7F2F,D0      ; was #$801e+tnum,
0002E536 <AmiBlitz3.ab3@17831>    BEQ.w doused
0002E538 <AmiBlitz3.ab3@17833>   MOVE.w D2,-(A7)       ;remember old type!
0002E53A <AmiBlitz3.ab3@17834>   MOVE.w D0,D1
0002E53E <AmiBlitz3.ab3@17835>   BCLR #$F,D1
0002E542 <AmiBlitz3.ab3@17839>    BSR.w searchinstr
0002E544 <AmiBlitz3.ab3@17840>   MOVE.w (A3),D1
0002E548 <AmiBlitz3.ab3@17841>   BTST #$1,D1
0002E54C <AmiBlitz3.ab3@17842>    BEQ.w noreturn_                                         ;syntax error noreturn
0002E550 <AmiBlitz3.ab3@17843>   BTST #$2,D1
0002E554 <AmiBlitz3.ab3@17844>    BNE.w amigalib
0002E556 <AmiBlitz3.ab3@17850>   LSR.w #8,D1
0002E55C <AmiBlitz3.ab3@17851>   BTST #$3,$1(A3)
0002E560 <AmiBlitz3.ab3@17852>    BEQ.w 'no0
0002E566 <AmiBlitz3.ab3@17854>    JSR sizespec2
0002E56C <AmiBlitz3.ab3@17858>    CLR.l rightsidetype
0002E572 <AmiBlitz3.ab3@17859>    CLR.w rightsideflagmask
0002E574 <AmiBlitz3.ab3@17861>    MOVE.w D1,-(A7)                                         ;is library instruction
0002E578 <AmiBlitz3.ab3@17862>   CMP.w #$7,D1
0002E57C <AmiBlitz3.ab3@17863>    BNE.w 'notst0
0002E57E <AmiBlitz3.ab3@17864>   MOVE.l A2,-(A7)
0002E582 <AmiBlitz3.ab3@17865>    BSR.w makesbase
0002E584 <AmiBlitz3.ab3@17866>   MOVEA.l (A7)+,A2
0002E588 <AmiBlitz3.ab3@17869>     BSR.w savem
0002E58A <AmiBlitz3.ab3@17870>   MOVE.w D3,-(A7)        ;the movem regs
0002E58E <AmiBlitz3.ab3@17872>    BSR.w get1bytemain
0002E590 <AmiBlitz3.ab3@17873>   MOVEQ.l #$00,D1
0002E594 <AmiBlitz3.ab3@17874>   CMP.w #$28,D0          ;'('
0002E598 <AmiBlitz3.ab3@17875>    BNE.w 'nopars
0002E59E <AmiBlitz3.ab3@17876>    JSR countpees
0002E5A0 <AmiBlitz3.ab3@17877>   TST.w D1
0002E5A4 <AmiBlitz3.ab3@17878>    BEQ.w syntaxerr
0002E5A8 <AmiBlitz3.ab3@17879>  BRA.w 'skip0
0002E5B2 <AmiBlitz3.ab3@17884>   MOVE.w oldqflag,instringon
0002E5B8 <AmiBlitz3.ab3@17885>   MOVEA.l lastsourcepos,A5
0002E5BE <AmiBlitz3.ab3@17889>    MOVE.w regnum,-(A7)
0002E5C8 <AmiBlitz3.ab3@17891>    MOVE.w regnum,regnumstore
0002E5CE <AmiBlitz3.ab3@17892>    TST.b fpu
0002E5D2 <AmiBlitz3.ab3@17893>             BEQ 'nofloat
0002E5D8 <AmiBlitz3.ab3@17894>             CMP.w #$ffff,28(a3)
0002E5DC <AmiBlitz3.ab3@17895>             BNE 'nofloat
0002E5E2 <AmiBlitz3.ab3@17896>             CMP.w #$3c01,34(a3)                            ;val do nofpu stuff
0002E5E6 <AmiBlitz3.ab3@17897>             BEQ 'nofloat
0002E5EC <AmiBlitz3.ab3@17898>             CMP.w #$3c02,34(a3)                            ;int skip
0002E5F0 <AmiBlitz3.ab3@17899>             BEQ 'quick1
0002E5F4 <AmiBlitz3.ab3@17900>             CMP.b #5,(a3)
0002E5F8 <AmiBlitz3.ab3@17901>             BNE 'nofloat
0002E5FE <AmiBlitz3.ab3@17904>             CLR.l load_var_addr
0002E602 <AmiBlitz3.ab3@17905>  BRA 'isfpu
0002E608 <AmiBlitz3.ab3@17909>    CLR.w regnum
0002E60A <AmiBlitz3.ab3@17912>    MOVE.w D1,-(A7)
0002E610 <AmiBlitz3.ab3@17913>   BTST #$3,$1(A3)
0002E614 <AmiBlitz3.ab3@17914>    BEQ.w 'no2
0002E618 <AmiBlitz3.ab3@17935>   MOVE.w $6(A7),D1
0002E61E <AmiBlitz3.ab3@17937>   MOVE.w d1,peeksize
0002E622 <AmiBlitz3.ab3@17948>   ORI.w #$7000,D1
0002E626 <AmiBlitz3.ab3@17949>   BSR.w writeword                                          ;write peekmode
0002E62C <AmiBlitz3.ab3@17952>   ADDQ.w #1,regnum
0002E62E <AmiBlitz3.ab3@17953>   MOVE.w (A7),D1
0002E636 <AmiBlitz3.ab3@17957>   MOVE.w 2(a7),tempregnum
0002E63C <AmiBlitz3.ab3@17958>   MOVE.w parnum,-(a7)                                       ;7.2014 parnum need store to allow functioncall in parameter >6
0002E642 <AmiBlitz3.ab3@17959>   CLR.w parnum                                              ;7.2014
0002E648 <AmiBlitz3.ab3@17961>   JSR dolibtoke                                             ;write code of blitzfunc
0002E64E <AmiBlitz3.ab3@17963>   MOVE.w (a7)+,parnum                                       ;7.2014 new restore parnum
0002E650 <AmiBlitz3.ab3@17965>   TST.w (A7)+
0002E654 <AmiBlitz3.ab3@17966>   BEQ.w 'skip
0002E658 <AmiBlitz3.ab3@17967>   CMP.w #")",D0                                             ; check if ) here for correct end of blitzlib function call
0002E65C <AmiBlitz3.ab3@17968>   BNE.w errorbracketmiss                                    ; was syntax error
0002E662 <AmiBlitz3.ab3@17970>   CLR.l lasttoken
0002E666 <AmiBlitz3.ab3@17972>   BSR.w get1bytemain
0002E668 <AmiBlitz3.ab3@17975>    MOVE.w (A7)+,D1
0002E66E <AmiBlitz3.ab3@17976>    MOVE.w D1,regnum
0002E672 <AmiBlitz3.ab3@17977>    BEQ.w 'skip2
0002E678 <AmiBlitz3.ab3@17979>    CMP.w #$3c01,24(a2)                                     ;val skipped
0002E67C <AmiBlitz3.ab3@17980>    BNE 'noval
0002E682 <AmiBlitz3.ab3@17981>    TST.b fpu
0002E686 <AmiBlitz3.ab3@17982>    BEQ 'noval
0002E68C <AmiBlitz3.ab3@17983>    CLR.l load_var_addr
0002E68E <AmiBlitz3.ab3@17984>    MOVEQ #0,d1
0002E694 <AmiBlitz3.ab3@17985>    MOVE.w regnum,d1
0002E696 <AmiBlitz3.ab3@17986>    LSL.l #7,d1
0002E69C <AmiBlitz3.ab3@17987>    OR.l #$f2000000,d1
0002E6A0 <AmiBlitz3.ab3@17988>    BSR writelong
0002E6A4 <AmiBlitz3.ab3@17989>  BRA 'skip2
0002E6AA <AmiBlitz3.ab3@17992>    CMP.w #$3c02,24(a2)                                     ;int skipped
0002E6AE <AmiBlitz3.ab3@17993>    BEQ 'quick
0002E6B2 <AmiBlitz3.ab3@17994>    CMP.b #5,d2
0002E6B6 <AmiBlitz3.ab3@17995>    BNE 'nofpu2
0002E6BC <AmiBlitz3.ab3@17996>    TST.b fpu
0002E6C0 <AmiBlitz3.ab3@17997>    BEQ 'nofpu2
0002E6C6 <AmiBlitz3.ab3@18002>    CLR.l load_var_addr
0002E6CA <AmiBlitz3.ab3@18003>  BRA 'skip2
0002E6CC <AmiBlitz3.ab3@18007>   LSL.w #8,D1
0002E6CE <AmiBlitz3.ab3@18008>   LSL.w #1,D1
0002E6D2 <AmiBlitz3.ab3@18009>   ORI.w #$2000,D1
0002E6D6 <AmiBlitz3.ab3@18010>   BSR.w writeword      ;move.l d0,regat                                    ;write move.l d0,dx
0002E6DC <AmiBlitz3.ab3@18012>   TST.b fpu
0002E6E0 <AmiBlitz3.ab3@18013>   BEQ 'skip2
0002E6E2 <AmiBlitz3.ab3@18014>   MOVEQ #0,d1
0002E6E8 <AmiBlitz3.ab3@18015>   MOVE.w regnum,d1
0002E6EA <AmiBlitz3.ab3@18016>   LSL.l #7,d1
0002E6F0 <AmiBlitz3.ab3@18017>   OR.l #$f2000000,d1
0002E6F2 <AmiBlitz3.ab3@18022>        MOVE.w (A7)+,D3
0002E6F6 <AmiBlitz3.ab3@18023>        BEQ.w 'nomovem
0002E6FC <AmiBlitz3.ab3@18025>        TST.b fpu
0002E700 <AmiBlitz3.ab3@18026>        BEQ 'nofpu3
0002E702 <AmiBlitz3.ab3@18027>       MOVE.l d0,-(a7)
0002E704 <AmiBlitz3.ab3@18028>        MOVE.l a0,-(a7)
0002E70A <AmiBlitz3.ab3@18029>        MOVE.l stacktrack,d1
0002E710 <AmiBlitz3.ab3@18030>        LEA fpustackbase,a0
0002E718 <AmiBlitz3.ab3@18031>        MOVE.w 0(a0,d1),regmask
0002E71A <AmiBlitz3.ab3@18032>        MOVE.l (a7)+,a0
0002E71E <AmiBlitz3.ab3@18033>       MOVE.w #8,d0
0002E722 <AmiBlitz3.ab3@18036>       BEQ 'ready
0002E728 <AmiBlitz3.ab3@18037>       BTST d0,regmask
0002E72C <AmiBlitz3.ab3@18038>       BEQ 'noa7
0002E72E <AmiBlitz3.ab3@18039>       MOVEQ #0,d1
0002E730 <AmiBlitz3.ab3@18040>       MOVE.w d0,d1
0002E732 <AmiBlitz3.ab3@18041>       SUBQ.w #1,d1
0002E734 <AmiBlitz3.ab3@18042>       ASL #7,d1
0002E73A <AmiBlitz3.ab3@18044>       OR.l #$f21f5400,d1                                   ;fmove.d (a7)+
0002E73E <AmiBlitz3.ab3@18045>       BSR writelong
0002E744 <AmiBlitz3.ab3@18046>       SUBQ.l #2,stacktrack
0002E746 <AmiBlitz3.ab3@18049>       SUBQ.w #1,d0
0002E74A <AmiBlitz3.ab3@18050>       BNE 'loop
0002E74C <AmiBlitz3.ab3@18053>       MOVE.l (a7)+,d0
0002E752 <AmiBlitz3.ab3@18054>       SUBQ.l #2,stacktrack                                 ;int track
0002E756 <AmiBlitz3.ab3@18058>    MOVE.w #$4CDF,D1
0002E75A <AmiBlitz3.ab3@18059>    BSR.w writeword                                         ;write movem.l (a7)+,
0002E75C <AmiBlitz3.ab3@18060>   MOVEQ.l #$00,D1
0002E75E <AmiBlitz3.ab3@18061>   MOVEQ.l #$0F,D4
0002E760 <AmiBlitz3.ab3@18064>     LSL.w #1,D3
0002E762 <AmiBlitz3.ab3@18065>     ROXR.w #1,D1
0002E766 <AmiBlitz3.ab3@18066>   DBF D4,'loopsw
0002E76A <AmiBlitz3.ab3@18067>    BSR.w writeword      ;poke movem (a7)+...
0002E770 <AmiBlitz3.ab3@18069>    TST.b fast
0002E774 <AmiBlitz3.ab3@18070>    BEQ 'nomovem
0002E77A <AmiBlitz3.ab3@18071>    TST.w regnum
0002E77E <AmiBlitz3.ab3@18072>    BEQ 'nomovem
0002E784 <AmiBlitz3.ab3@18073>    CMP.w #$3c0e,$1c(a3)                                    ;true
0002E788 <AmiBlitz3.ab3@18074>    BNE 'l1b
0002E78E <AmiBlitz3.ab3@18075>    MOVE.w regnum,d1
0002E790 <AmiBlitz3.ab3@18076>    ASL.l #8,d1
0002E792 <AmiBlitz3.ab3@18077>    ASL.l #1,d1
0002E796 <AmiBlitz3.ab3@18078>    OR.w #$70ff,d1
0002E7A0 <AmiBlitz3.ab3@18079>    SUB.l #12,destpointer
0002E7A4 <AmiBlitz3.ab3@18080>    BSR writeword
0002E7AA <AmiBlitz3.ab3@18083>   CMP.w #$3c0f,$1c(a3)                                     ;false
0002E7AE <AmiBlitz3.ab3@18084>    BNE 'l2b
0002E7B4 <AmiBlitz3.ab3@18085>     MOVE.w regnum,d1
0002E7B6 <AmiBlitz3.ab3@18086>     ASL.l #8,d1
0002E7B8 <AmiBlitz3.ab3@18087>     ASL.l #1,d1
0002E7BC <AmiBlitz3.ab3@18088>     OR.w #$7000,d1
0002E7C6 <AmiBlitz3.ab3@18089>     SUB.l #12,destpointer
0002E7CA <AmiBlitz3.ab3@18090>     BSR writeword
0002E7CC <AmiBlitz3.ab3@18095>    MOVE.w (A7)+,D2
0002E7D0 <AmiBlitz3.ab3@18096>   CMP.w #$7,D2                                             ;destination var type
0002E7D4 <AmiBlitz3.ab3@18097>    BNE.w 'notst
0002E7DA <AmiBlitz3.ab3@18098>   MOVE.w putstlen,D1
0002E7E0 <AmiBlitz3.ab3@18099>   OR.w regnum,D1
0002E7E4 <AmiBlitz3.ab3@18100>    BSR.w writeword
0002E7E8 <AmiBlitz3.ab3@18103> BRA.w varcont
0002E7EC <AmiBlitz3.ab3@18108>   MOVE.w $6(A3),D1
0002E7F0 <AmiBlitz3.ab3@18109>    BSR.w uselib           ;get lib for base address
0002E7F4 <AmiBlitz3.ab3@18110>    BSR.w savereg
0002E7F6 <AmiBlitz3.ab3@18111>   MOVE.l D4,D1
0002E7F8 <AmiBlitz3.ab3@18112>   MOVE.l D5,-(A7)
0002E7FC <AmiBlitz3.ab3@18113>    BSR.w pokemovem
0002E800 <AmiBlitz3.ab3@18114>   MOVE.w $A(A1),-(A7)     ;libbase reg
0002E802 <AmiBlitz3.ab3@18115>   ADDQ.w #8,A3
0002E804 <AmiBlitz3.ab3@18116>   MOVE.w (A3)+,-(A7)      ;get offset for lib
0002E806 <AmiBlitz3.ab3@18117>   MOVE.l A3,-(A7)
0002E80A <AmiBlitz3.ab3@18118>    BSR.w get1bytemain
0002E80C <AmiBlitz3.ab3@18119>   MOVE.w D0,-(A7)         ;remember first bracket....
0002E80E <AmiBlitz3.ab3@18123>   MOVEQ.l #$00,D3
0002E814 <AmiBlitz3.ab3@18125>   JSR checka4a5
0002E816 <AmiBlitz3.ab3@18129>   MOVE.b (A3)+,D1
0002E81A <AmiBlitz3.ab3@18130>    BMI.w 'done
0002E81C <AmiBlitz3.ab3@18131>   MOVEQ.l #$03,D2
0002E81E <AmiBlitz3.ab3@18132>   ADDQ.w #1,D3
0002E822 <AmiBlitz3.ab3@18133>   MOVEM.l D3/A3,-(A7)
0002E828 <AmiBlitz3.ab3@18135>   MOVE.b funcparloop,-(a7)
0002E82E <AmiBlitz3.ab3@18136>   CLR.b funcparloop
0002E834 <AmiBlitz3.ab3@18137>   MOVE.b blitzparloop,-(a7)
0002E83C <AmiBlitz3.ab3@18138>   MOVE.b #1,blitzparloop
0002E842 <AmiBlitz3.ab3@18139>   MOVE.l lasttoken,-(a7)
0002E848 <AmiBlitz3.ab3@18140>   MOVE.l leftsidetype,-(a7)
0002E84E <AmiBlitz3.ab3@18141>   MOVE.l rightsidetype,-(a7)
0002E852 <AmiBlitz3.ab3@18143>   BSR.w peval
0002E858 <AmiBlitz3.ab3@18145>   MOVE.l (a7)+,rightsidetype
0002E85E <AmiBlitz3.ab3@18146>   MOVE.l (a7)+,leftsidetype
0002E864 <AmiBlitz3.ab3@18147>   MOVE.l (a7)+,lasttoken
0002E86A <AmiBlitz3.ab3@18148>   MOVE.b (a7)+,blitzparloop
0002E870 <AmiBlitz3.ab3@18149>   MOVE.b (a7)+,funcparloop
0002E876 <AmiBlitz3.ab3@18151>   SUBQ.w #4,a2offset              ;readjust stack! it's coming off later!
0002E87A <AmiBlitz3.ab3@18152>   MOVEM.l (A7)+,D3/A3
0002E87E <AmiBlitz3.ab3@18153>   CMP.w #$2C,D0                   ;','
0002E882 <AmiBlitz3.ab3@18154>    BEQ.w 'loop
0002E884 <AmiBlitz3.ab3@18155>   TST.b (A3)
0002E888 <AmiBlitz3.ab3@18156>    BPL.w syntaxerr
0002E88A <AmiBlitz3.ab3@18159>   MOVE.w (A7)+,D1
0002E88E <AmiBlitz3.ab3@18160>    BSR.w tstbras
0002E890 <AmiBlitz3.ab3@18161>   MOVEA.l (A7)+,A3
0002E892 <AmiBlitz3.ab3@18162>   SUBQ.w #1,D3
0002E896 <AmiBlitz3.ab3@18163>    BMI.w 'nopars
0002E898 <AmiBlitz3.ab3@18166>   TST.b (A3)+                     ;go to end of params
0002E89C <AmiBlitz3.ab3@18167>    BPL.w 'toend
0002E89E <AmiBlitz3.ab3@18168>   SUBQ.w #1,A3
0002E8A0 <AmiBlitz3.ab3@18171>     MOVEQ.l #$00,D1
0002E8A2 <AmiBlitz3.ab3@18172>     MOVE.b -(A3),D1
0002E8A6 <AmiBlitz3.ab3@18173>     BTST #$4,D1
0002E8AA <AmiBlitz3.ab3@18174>      BNE.w 'addreg
0002E8B0 <AmiBlitz3.ab3@18175>     CMP.w regnum,D1
0002E8B4 <AmiBlitz3.ab3@18176>      BCC.w 'nomovem
0002E8B6 <AmiBlitz3.ab3@18177>     BSET D1,D5
0002E8B8 <AmiBlitz3.ab3@18178>     MOVEQ.l #$0F,D0
0002E8BA <AmiBlitz3.ab3@18179>     SUB.w D1,D0
0002E8BC <AmiBlitz3.ab3@18180>     BSET D0,D4
0002E8BE <AmiBlitz3.ab3@18183>     LSL.w #8,D1
0002E8C0 <AmiBlitz3.ab3@18184>     LSL.w #1,D1
0002E8C4 <AmiBlitz3.ab3@18185>     ORI.w #$201F,D1
0002E8C8 <AmiBlitz3.ab3@18186>    BRA.w 'gotit
0002E8CC <AmiBlitz3.ab3@18189>     ANDI.w #$7,D1
0002E8CE <AmiBlitz3.ab3@18190>     LSL.w #8,D1
0002E8D0 <AmiBlitz3.ab3@18191>     LSL.w #1,D1
0002E8D4 <AmiBlitz3.ab3@18192>     ORI.w #$205F,D1
0002E8D8 <AmiBlitz3.ab3@18195>      BSR.w writeword
0002E8DC <AmiBlitz3.ab3@18196>   DBF D3,'loop2
0002E8E2 <AmiBlitz3.ab3@18199>   MOVE.w (A7)+,libjsr+2
0002E8E8 <AmiBlitz3.ab3@18200>   MOVE.w (A7)+,libbase+2
0002E8EE <AmiBlitz3.ab3@18201>   MOVE.l libbase,D1
0002E8F2 <AmiBlitz3.ab3@18202>    BSR.w writelong
0002E8F8 <AmiBlitz3.ab3@18203>   MOVE.l libjsr,D1
0002E8FC <AmiBlitz3.ab3@18204>    BSR.w writelong
0002E902 <AmiBlitz3.ab3@18205>   MOVE.w regnum,D1
0002E906 <AmiBlitz3.ab3@18206>    BEQ.w 'nofin
0002E908 <AmiBlitz3.ab3@18207>   LSL.w #8,D1
0002E90A <AmiBlitz3.ab3@18208>   LSL.w #1,D1
0002E90E <AmiBlitz3.ab3@18209>   ORI.w #$2000,D1
0002E912 <AmiBlitz3.ab3@18210>    BSR.w writeword
0002E914 <AmiBlitz3.ab3@18213>   MOVE.l (A7)+,D1
0002E918 <AmiBlitz3.ab3@18214>    BSR.w pokemovem
0002E91E <AmiBlitz3.ab3@18216>    JSR restorea4a5
0002E920 <AmiBlitz3.ab3@18218>   MOVEQ.l #$03,D2
0002E924 <AmiBlitz3.ab3@18219>    BSR.w reget
0002E928 <AmiBlitz3.ab3@18220> BRA.w varcont
0002E92A <AmiBlitz3.ab3@18229>   TST.w D3
0002E92E <AmiBlitz3.ab3@18230>    BEQ.w 'nopars
0002E932 <AmiBlitz3.ab3@18231>   CMP.w #$28,D1      ;'('
0002E936 <AmiBlitz3.ab3@18232>    BNE.w syntaxerr
0002E93A <AmiBlitz3.ab3@18233>   CMP.w #$29,D0      ;')'
0002E93E <AmiBlitz3.ab3@18234>    BNE.w syntaxerr
0002E942 <AmiBlitz3.ab3@18235>  BRA.w get1bytemain
0002E946 <AmiBlitz3.ab3@18238>   CMP.w #$28,D1       ;'('
0002E94A <AmiBlitz3.ab3@18239>    BNE.w 'skip
0002E94E <AmiBlitz3.ab3@18240>    BSR.w get1bytemain
0002E952 <AmiBlitz3.ab3@18241>   CMP.w #$29,D0       ;')'
0002E956 <AmiBlitz3.ab3@18242>    BNE.w syntaxerr
0002E95A <AmiBlitz3.ab3@18243>  BRA.w get1bytemain
0002E95C <AmiBlitz3.ab3@18246> RTS
0002E95E <AmiBlitz3.ab3@18250>   TST.w D1
0002E962 <AmiBlitz3.ab3@18251>    BNE.w writelong
0002E964 <AmiBlitz3.ab3@18252> RTS
0002E968 <AmiBlitz3.ab3@18257>   MOVE.w #$48E7,D4
0002E96A <AmiBlitz3.ab3@18258>   SWAP D4
0002E96C <AmiBlitz3.ab3@18259>   CLR.w D4
0002E970 <AmiBlitz3.ab3@18260>   MOVE.w #$4CDF,D5
0002E972 <AmiBlitz3.ab3@18261>   SWAP D5
0002E974 <AmiBlitz3.ab3@18262>   CLR.w D5
0002E97A <AmiBlitz3.ab3@18263>   MOVE.w regnum,D1
0002E97E <AmiBlitz3.ab3@18264>    BEQ.w 'skip
0002E982 <AmiBlitz3.ab3@18265>   BSET #$F,D4
0002E986 <AmiBlitz3.ab3@18266>   BSET #$0,D5
0002E98A <AmiBlitz3.ab3@18267>   CMP.w #$2,D1
0002E98E <AmiBlitz3.ab3@18268>    BCS.w 'skip2
0002E992 <AmiBlitz3.ab3@18271>   BSET #$E,D4
0002E996 <AmiBlitz3.ab3@18272>   BSET #$1,D5
0002E998 <AmiBlitz3.ab3@18275>  RTS
0002E99E <AmiBlitz3.ab3@18278>   TST.w fuckpos
0002E9A2 <AmiBlitz3.ab3@18279>   BNE.w 'skip3
0002E9A4 <AmiBlitz3.ab3@18280> RTS
0002E9A6 <AmiBlitz3.ab3@18283> fuckpos:  Ds.w 1
0002E9AC <AmiBlitz3.ab3@18287>   MOVE.w sbasegot,D1
0002E9B0 <AmiBlitz3.ab3@18288>    BEQ.w 'skip
0002E9B4 <AmiBlitz3.ab3@18292>   MOVE.w sbgot(PC),D1
0002E9B8 <AmiBlitz3.ab3@18293>    BNE.w 'skip2
0002E9C0 <AmiBlitz3.ab3@18297>   MOVE.w #$0002,sbgot
0002E9C6 <AmiBlitz3.ab3@18298>   MOVE.w movea3a7,D1
0002E9CA <AmiBlitz3.ab3@18299>  BRA.w writeword
0002E9CC <AmiBlitz3.ab3@18302>  RTS
0002E9D4 <AmiBlitz3.ab3@18307>   MOVE.w #$0001,sbgot                                      ;voodoo magic! - Will it work?
0002E9DA <AmiBlitz3.ab3@18309>   MOVE.l #$C601,D1                  ; was #workstart,
0002E9E2 <AmiBlitz3.ab3@18310>   MOVE.w #-1,sbasegot               
0002E9E8 <AmiBlitz3.ab3@18312>   MOVE.l d1,lastinstruction
0002E9EC <AmiBlitz3.ab3@18314>   BSR.w Atokejsr
0002E9EE <AmiBlitz3.ab3@18315> RTS
0002E9F8 <AmiBlitz3.ab3@18320>   MOVE.l data1,litdata1
0002E9FE <AmiBlitz3.ab3@18322>   TST.b fast
0002EA02 <AmiBlitz3.ab3@18323>   BEQ 'l50                                                 ;optistring  seem impossible to get work
0002EA06 <AmiBlitz3.ab3@18327>  BRA 'l50                                                  ;to deactivate
0002EA0C <AmiBlitz3.ab3@18333>   TST.b optistring
0002EA10 <AmiBlitz3.ab3@18334>   BNE.s 'l21
0002EA16 <AmiBlitz3.ab3@18335>   CLR.b string1
0002EA1E <AmiBlitz3.ab3@18336>   MOVE.b #1,optistring
0002EA24 <AmiBlitz3.ab3@18337>   TST.b nostringopt
0002EA28 <AmiBlitz3.ab3@18338>   BNE 'l21
0002EA2A <AmiBlitz3.ab3@18339>   MOVE.l a5,a4
0002EA2C <AmiBlitz3.ab3@18340>   SUBQ.l #1,a4
0002EA2E <AmiBlitz3.ab3@18343>     TST.b (a4)
0002EA32 <AmiBlitz3.ab3@18344>     BMI 'l19a
0002EA36 <AmiBlitz3.ab3@18345>     BEQ.s 'l20
0002EA3A <AmiBlitz3.ab3@18346>     CMP.b #$22,(a4)
0002EA3E <AmiBlitz3.ab3@18347>     BEQ.s 'l19
0002EA44 <AmiBlitz3.ab3@18350>     TST.w string1
0002EA48 <AmiBlitz3.ab3@18351>     BNE 'l11
0002EA4C <AmiBlitz3.ab3@18352>     CMP.b #":",(a4)
0002EA50 <AmiBlitz3.ab3@18353>     BEQ.s 'l20
0002EA54 <AmiBlitz3.ab3@18354>     CMP.b #";",(a4)
0002EA58 <AmiBlitz3.ab3@18355>     BEQ.s 'l20
0002EA5C <AmiBlitz3.ab3@18356>     CMP.b #"+",(a4)
0002EA60 <AmiBlitz3.ab3@18357>     BEQ.s 'l21
0002EA64 <AmiBlitz3.ab3@18358>     CMP.b #",",(a4)
0002EA68 <AmiBlitz3.ab3@18359>     BEQ.s 'l20                                             ;was l21
0002EA6C <AmiBlitz3.ab3@18360>     CMP.b #")",(a4)
0002EA70 <AmiBlitz3.ab3@18361>     BEQ.s 'l20                                             ;was l21
0002EA72 <AmiBlitz3.ab3@18364>     ADDQ.l #1,a4
0002EA76 <AmiBlitz3.ab3@18365>  BRA.s 'l10
0002EA7E <AmiBlitz3.ab3@18368>   BCHG #0,string1
0002EA82 <AmiBlitz3.ab3@18369>  BRA 'l18
0002EA84 <AmiBlitz3.ab3@18372>   ADDQ.l #1,a4
0002EA86 <AmiBlitz3.ab3@18373>   TST.b (a4)
0002EA8A <AmiBlitz3.ab3@18374>   BEQ 'l21
0002EA8E <AmiBlitz3.ab3@18375>  BRA 'l11
0002EA90 <AmiBlitz3.ab3@18378>   MOVE.l a5,a4
0002EA92 <AmiBlitz3.ab3@18379>   SUBQ.l #1,a4
0002EA96 <AmiBlitz3.ab3@18382>   CMP.b #$20,-(a4)
0002EA9A <AmiBlitz3.ab3@18383>   BEQ 'll1
0002EA9E <AmiBlitz3.ab3@18384>   CMP.b #"+",(a4)
0002EAA2 <AmiBlitz3.ab3@18385>   BEQ 'l21
0002EAAA <AmiBlitz3.ab3@18400>   MOVE.b #2,optistring
0002EAB2 <AmiBlitz3.ab3@18403>   CMP.b #2,optistring
0002EAB6 <AmiBlitz3.ab3@18404>   BEQ.s 'l100
0002EABA <AmiBlitz3.ab3@18407>   BSR.w makesbase
0002EABE <AmiBlitz3.ab3@18409>   BSR.w pokedata1                                          ;writestringsizespace
0002EAC2 <AmiBlitz3.ab3@18410>   BSR.w pokedata1
0002EAC4 <AmiBlitz3.ab3@18413>   MOVEQ.l #$00,D2
0002EACA <AmiBlitz3.ab3@18417>     MOVE.l a5,lastsourcepos
0002EACC <AmiBlitz3.ab3@18418>     MOVEQ #0,d0
0002EACE <AmiBlitz3.ab3@18419>     MOVE.b (a5)+,d0
0002EAD0 <AmiBlitz3.ab3@18421>     TST.w D0
0002EAD4 <AmiBlitz3.ab3@18422>      BEQ.w notqerr
0002EAD8 <AmiBlitz3.ab3@18423>     CMP.w #$22,D0     ; '"'                                     ; --- " ---
0002EADC <AmiBlitz3.ab3@18424>      BEQ.w 'done
0002EAE0 <AmiBlitz3.ab3@18426>     CMP.b #"\",d0
0002EAE4 <AmiBlitz3.ab3@18427>      BNE 'l1
0002EAE8 <AmiBlitz3.ab3@18428>     CMP.b #"\",(a5)
0002EAEC <AmiBlitz3.ab3@18429>      BNE 'l1
0002EAF2 <AmiBlitz3.ab3@18430>     TST.b newsyntax
0002EAF6 <AmiBlitz3.ab3@18431>      BEQ 'l1
0002EAFC <AmiBlitz3.ab3@18432>     CMP.w #"\\",1(a5)                                      ; new compiler constants
0002EB00 <AmiBlitz3.ab3@18433>     BNE 'l2
0002EB02 <AmiBlitz3.ab3@18434>     ADDQ #2,a5
0002EB04 <AmiBlitz3.ab3@18437>     ADDQ.w #1,D2
0002EB06 <AmiBlitz3.ab3@18438>     MOVE.w D0,D1
0002EB0A <AmiBlitz3.ab3@18439>     BSR.w pokedata1b                                        ;writestring
0002EB0E <AmiBlitz3.ab3@18440>  BRA.w 'writestring
0002EB14 <AmiBlitz3.ab3@18443>     JSR check_newconstants
0002EB18 <AmiBlitz3.ab3@18444>  BRA 'writestring
0002EB1E <AmiBlitz3.ab3@18449>   NOT instringon
0002EB24 <AmiBlitz3.ab3@18451>   MOVE.w dontwrite_nomemleft,D1
0002EB28 <AmiBlitz3.ab3@18452>   BNE.w 'skip
0002EB30 <AmiBlitz3.ab3@18454>   CMP.b #2,optistring
0002EB34 <AmiBlitz3.ab3@18455>   BEQ 'skip
0002EB3A <AmiBlitz3.ab3@18457>     MOVEA.l litdata1,A0
0002EB3C <AmiBlitz3.ab3@18458>     CLR.w (A0)+                                            ;writesize
0002EB3E <AmiBlitz3.ab3@18459>     MOVE.w D2,(A0)
0002EB42 <AmiBlitz3.ab3@18462>   BSR.w makelit                                          ;writestringconstantcode
0002EB48 <AmiBlitz3.ab3@18463>   ADDQ.l #1,data1
0002EB50 <AmiBlitz3.ab3@18464>   BCLR #$0,data1+3
0002EB52 <AmiBlitz3.ab3@18465>   MOVEQ.l #$07,D2
0002EB56 <AmiBlitz3.ab3@18466> BRA.w get1bytemain
0002EB5A <AmiBlitz3.ab3@18471>   BSR.w makename2
0002EB5E <AmiBlitz3.ab3@18473>   BSR.w findlabel2
0002EB62 <AmiBlitz3.ab3@18474>   BEQ.w 'found
0002EB66 <AmiBlitz3.ab3@18476>   BSR.w addlabelhash
0002EB6A <AmiBlitz3.ab3@18477>   CLR.l $4(A2)           ;no refs
0002EB6E <AmiBlitz3.ab3@18478>   CLR.l $8(A2)           ;not created yet (no PC)
0002EB76 <AmiBlitz3.ab3@18480>   MOVE.w linenumat+2,$10(A2)  ; was linenumat,    ;context
0002EB7C <AmiBlitz3.ab3@18482>   MOVE.w linenumat,d0
0002EB7E <AmiBlitz3.ab3@18483>   MOVEQ #0,d1
0002EB82 <AmiBlitz3.ab3@18484>   MOVE.b -1(a2,d7),d1
0002EB86 <AmiBlitz3.ab3@18485>   MOVE.w d0,0(a2,d1)
0002EB8A <AmiBlitz3.ab3@18487>  BRA.w 'makeit
0002EB8E <AmiBlitz3.ab3@18490>   TST.l $8(A2)
0002EB92 <AmiBlitz3.ab3@18491>   BNE.w 'gotit    ;already made
0002EB98 <AmiBlitz3.ab3@18497>   MOVEA.l _execbase,A6
0002EB9A <AmiBlitz3.ab3@18498>   MOVEQ.l #$0C+2,D0      ; was 12
0002EB9C <AmiBlitz3.ab3@18499>   MOVEQ.l #$01,D1
0002EBA2 <AmiBlitz3.ab3@18501>   MOVE.l mempool,a0
0002EBA6 <AmiBlitz3.ab3@18502>   JSR _AllocPooled(a6)
0002EBA8 <AmiBlitz3.ab3@18505>   MOVEA.l D0,A0
0002EBAC <AmiBlitz3.ab3@18506>   MOVE.l $4(A2),(A0)
0002EBB0 <AmiBlitz3.ab3@18507>   MOVE.l A0,$4(A2)
0002EBB8 <AmiBlitz3.ab3@18508>   MOVE.l destpointer,$4(A0)
0002EBBC <AmiBlitz3.ab3@18509>   ADDQ.l #2,$4(A0)
0002EBC4 <AmiBlitz3.ab3@18510>   MOVE.w procnum,$8(A0)
0002EBCC <AmiBlitz3.ab3@18511>   MOVE.w linenumat+2,$A(A0)   ; was linenumat,
0002EBD4 <AmiBlitz3.ab3@18513>   MOVE.w linenumat,$c(a0)
0002EBD6 <AmiBlitz3.ab3@18515>  RTS
0002EBDA <AmiBlitz3.ab3@18518>   MOVE.l $4(A2),D1
0002EBDE <AmiBlitz3.ab3@18519>   BTST #$0,D1
0002EBE2 <AmiBlitz3.ab3@18520>    BNE.w illlaberr
0002EBE8 <AmiBlitz3.ab3@18521>   MOVE.w procnum,D1
0002EBEC <AmiBlitz3.ab3@18522>   CMP.w $10(A2),D1
0002EBF0 <AmiBlitz3.ab3@18523>    BNE.w referr
0002EBF2 <AmiBlitz3.ab3@18526> RTS
0002EBF4 <AmiBlitz3.ab3@18532>   MOVE.w D0,-(A7)
0002EBFC <AmiBlitz3.ab3@18534>   CMP.b #2,optistring
0002EC00 <AmiBlitz3.ab3@18535>   BEQ 'l10
0002EC06 <AmiBlitz3.ab3@18539>   MOVE.w numtoa0,D1
0002EC0A <AmiBlitz3.ab3@18540>    BSR.w writeword
0002EC0E <AmiBlitz3.ab3@18541>    BSR.w addoff
0002EC14 <AmiBlitz3.ab3@18542>   MOVE.l litdata1,D1
0002EC18 <AmiBlitz3.ab3@18543>    BSR.w writelong
0002EC1E <AmiBlitz3.ab3@18544>   MOVE.w pushlen,D1
0002EC22 <AmiBlitz3.ab3@18545>    BSR.w writeword
0002EC26 <AmiBlitz3.ab3@18546>   MOVE.w #$C600,D1        ; was #copstring
0002EC2A <AmiBlitz3.ab3@18547>    BSR.w Atokejsr
0002EC2C <AmiBlitz3.ab3@18548>   MOVE.w (A7)+,D0
0002EC2E <AmiBlitz3.ab3@18549>  RTS
0002EC30 <AmiBlitz3.ab3@18553>   MOVEQ #0,d1
0002EC34 <AmiBlitz3.ab3@18554>   BSR.w pokedata1b
0002EC3A <AmiBlitz3.ab3@18555>   MOVE.l destpointer,a4
0002EC3E <AmiBlitz3.ab3@18556>   MOVE.w #$203c,d1
0002EC44 <AmiBlitz3.ab3@18557>   TST.w mode
0002EC48 <AmiBlitz3.ab3@18558>   BNE 'lm10
0002EC4E <AmiBlitz3.ab3@18559>    ADDQ.w #4,a2offset
0002EC52 <AmiBlitz3.ab3@18560>   MOVE.w #$2f3c,d1
0002EC58 <AmiBlitz3.ab3@18563>   TST.w mode
0002EC5C <AmiBlitz3.ab3@18564>   BEQ 'lm3
0002EC62 <AmiBlitz3.ab3@18565>   MOVE.w regnum,D0
0002EC64 <AmiBlitz3.ab3@18566>   LSL.w #8,D0
0002EC66 <AmiBlitz3.ab3@18567>   LSL.w #1,D0
0002EC68 <AmiBlitz3.ab3@18568>   OR.w d0,d1
0002EC6C <AmiBlitz3.ab3@18569>   BSR writeword
0002EC70 <AmiBlitz3.ab3@18570>   BSR.w addoff
0002EC76 <AmiBlitz3.ab3@18571>   MOVE.l litdata1,D1
0002EC7A <AmiBlitz3.ab3@18572>   BSR.w writelong
0002EC82 <AmiBlitz3.ab3@18573>   CMP.w #3,mode
0002EC86 <AmiBlitz3.ab3@18574>   BEQ 'l30
0002EC8C <AmiBlitz3.ab3@18575>    ADDQ.w #4,a2offset
0002EC90 <AmiBlitz3.ab3@18576>   MOVE.w #$4878,D1
0002EC94 <AmiBlitz3.ab3@18577>   BSR.w writeword
0002EC96 <AmiBlitz3.ab3@18578>   MOVE.l d2,d1
0002EC9A <AmiBlitz3.ab3@18579>   BSR writeword
0002EC9C <AmiBlitz3.ab3@18582>   MOVE.w (A7)+,D0
0002EC9E <AmiBlitz3.ab3@18583>  RTS
0002ECA4 <AmiBlitz3.ab3@18586>   MOVE.l #$3f3c0007,d1
0002ECA8 <AmiBlitz3.ab3@18587>   BSR writelong
0002ECAE <AmiBlitz3.ab3@18588>   MOVE.w regnum,D1
0002ECB0 <AmiBlitz3.ab3@18589>   LSL.w #8,D1
0002ECB2 <AmiBlitz3.ab3@18590>   LSL.w #1,D1
0002ECB6 <AmiBlitz3.ab3@18591>   ORI.w #$2f3c,d1
0002ECBA <AmiBlitz3.ab3@18592>   BSR writeword
0002ECC0 <AmiBlitz3.ab3@18593>    ADDQ.w #4,a2offset
0002ECC2 <AmiBlitz3.ab3@18594>   MOVE.l d2,d1
0002ECC6 <AmiBlitz3.ab3@18595>   BSR writelong
0002ECCA <AmiBlitz3.ab3@18596>   MOVE.w #$2f3c,d1
0002ECCE <AmiBlitz3.ab3@18597>   BSR writeword
0002ECD2 <AmiBlitz3.ab3@18598>   BSR.w addoff
0002ECD8 <AmiBlitz3.ab3@18599>   MOVE.l litdata1,D1
0002ECDC <AmiBlitz3.ab3@18600>   BSR.w writelong
0002ECDE <AmiBlitz3.ab3@18601>   MOVE.w (A7)+,D0
0002ECE0 <AmiBlitz3.ab3@18602> RTS
0002ECE4 <AmiBlitz3.ab3@18607>   BSR.w get1bytemain
0002ECE8 <AmiBlitz3.ab3@18608>    BSR.w makealab2
0002ECEE <AmiBlitz3.ab3@18610>   MOVE.w regnum,D1
0002ECF0 <AmiBlitz3.ab3@18611>   LSL.w #8,D1
0002ECF2 <AmiBlitz3.ab3@18612>   LSL.w #1,D1
0002ECF6 <AmiBlitz3.ab3@18613>   ORI.w #$203C,D1
0002ECFA <AmiBlitz3.ab3@18614>    BSR.w writeword        ;create move.l #loc,dn
0002ECFE <AmiBlitz3.ab3@18615>    BSR.w addoff
0002ED02 <AmiBlitz3.ab3@18616>   MOVE.l $8(A2),D1
0002ED06 <AmiBlitz3.ab3@18617>    BSR.w writelong
0002ED08 <AmiBlitz3.ab3@18618>   MOVEQ.l #$03,D2
0002ED0E <AmiBlitz3.ab3@18620>   CLR.b peekaddrsize
0002ED12 <AmiBlitz3.ab3@18622> BRA.w reget
0002ED14 <AmiBlitz3.ab3@18626>   MOVEQ.l #$00,D3
0002ED18 <AmiBlitz3.ab3@18629>   BSR.w get1bytemain
0002ED1C <AmiBlitz3.ab3@18630>    BEQ.w syntaxerr
0002ED20 <AmiBlitz3.ab3@18631>   CMP.w #$22,D0         ;'"'
0002ED24 <AmiBlitz3.ab3@18632>    BEQ.w 'done
0002ED26 <AmiBlitz3.ab3@18633>   LSL.l #8,D3
0002ED28 <AmiBlitz3.ab3@18634>   MOVE.b D0,D3
0002ED2C <AmiBlitz3.ab3@18635>  BRA.w 'loop
0002ED30 <AmiBlitz3.ab3@18638>   BSR.w get1bytemain
0002ED34 <AmiBlitz3.ab3@18639> BRA.w fetchnum2
0002ED36 <AmiBlitz3.ab3@18643>   MOVE.w D2,-(A7)                                          ;basicvarsforasm
0002ED3A <AmiBlitz3.ab3@18644>    BSR.w makename2              ;get the things name
0002ED3E <AmiBlitz3.ab3@18645>    BSR.w findlabel2
0002ED42 <AmiBlitz3.ab3@18647>    BEQ.w 'l10
0002ED48 <AmiBlitz3.ab3@18648>    LEA ptr_parameterstore,a0
0002ED4E <AmiBlitz3.ab3@18649>    CMP.b #"@",-1(a0,d2.w)
0002ED52 <AmiBlitz3.ab3@18651>    BNE cnferr
0002ED56 <AmiBlitz3.ab3@18653>    CLR.b -1(a0,d2.w)
0002ED58 <AmiBlitz3.ab3@18654>    SUBQ.l #1,d2
0002ED5E <AmiBlitz3.ab3@18655>    LEA varbase,a2
0002ED62 <AmiBlitz3.ab3@18656>    BSR findvariable
0002ED66 <AmiBlitz3.ab3@18657>    BNE cnferr
0002ED6A <AmiBlitz3.ab3@18658>    CMP.b #"\",d0
0002ED6E <AmiBlitz3.ab3@18659>    BNE 'l6
0002ED74 <AmiBlitz3.ab3@18660>    ADDQ #1,lastsourcepos
0002ED78 <AmiBlitz3.ab3@18661>    MOVE.l $a(a2),a2
0002ED7A <AmiBlitz3.ab3@18662>    ADDQ.l #4,a2
0002ED7E <AmiBlitz3.ab3@18663>    BSR.w makename2
0002ED82 <AmiBlitz3.ab3@18664>    BSR findvariable2
0002ED86 <AmiBlitz3.ab3@18665>    BNE cnferr
0002ED8A <AmiBlitz3.ab3@18666>  BRA.s 'l6                                                  ;???
0002ED8E <AmiBlitz3.ab3@18669>    MOVE.w $4(a2),d3
0002ED90 <AmiBlitz3.ab3@18670>    EXT.l d3
0002ED94 <AmiBlitz3.ab3@18671>  BRA 'npc
0002ED98 <AmiBlitz3.ab3@18675>   MOVE.l $8(A2),D3          ;val.
0002EDA0 <AmiBlitz3.ab3@18676>   CMPI.l #$1,$4(A2)
0002EDA4 <AmiBlitz3.ab3@18677>    BEQ.w 'npc
0002EDAA <AmiBlitz3.ab3@18678>   NOT.w asmtype
0002EDAC <AmiBlitz3.ab3@18681>   MOVE.w (A7)+,D2
0002EDB0 <AmiBlitz3.ab3@18682> BRA.w fetchnum2
0002EDB2 <AmiBlitz3.ab3@18686>   MOVE.w D2,-(A7)           ;remember old type
0002EDB6 <AmiBlitz3.ab3@18687>    BSR.w getparameter
0002EDBA <AmiBlitz3.ab3@18688>   CMP.w #"{",D0                                          ;test if var = function{}
0002EDBE <AmiBlitz3.ab3@18689>    BEQ.w isfunction
0002EDC2 <AmiBlitz3.ab3@18690>    BSR.w fetchvars
0002EDC6 <AmiBlitz3.ab3@18692>    BSR.w calcvar                                         ;getvaroffset+type
0002EDCA <AmiBlitz3.ab3@18693>    BSR.w variable2
0002EDD0 <AmiBlitz3.ab3@18695>    MOVE.l a2,rightsidetype
0002EDDA <AmiBlitz3.ab3@18696>    MOVE.w flagmask, rightsideflagmask
0002EDE0 <AmiBlitz3.ab3@18708>    TST.b typecheck
0002EDE4 <AmiBlitz3.ab3@18709>    BEQ varcont
0002EDEE <AmiBlitz3.ab3@18710>    CMP.l #$da01,lasttoken                                  ;poke
0002EDF2 <AmiBlitz3.ab3@18711>    BEQ 'l1
0002EDFC <AmiBlitz3.ab3@18712>    CMP.l #$da02,lasttoken                                  ;peek
0002EE00 <AmiBlitz3.ab3@18713>    BNE 'l2
0002EE08 <AmiBlitz3.ab3@18716>    CMP.w #1,parnum                                         ; is not call when & is used in parameter
0002EE0C <AmiBlitz3.ab3@18717>    BNE varcont
0002EE12 <AmiBlitz3.ab3@18718>    MOVE.b d2,peekaddrsize
0002EE16 <AmiBlitz3.ab3@18719>    BRA varcont
0002EE1C <AmiBlitz3.ab3@18722>   CLR.b peekaddrsize
0002EE20 <AmiBlitz3.ab3@18726>   CMP.w #$1,D2
0002EE24 <AmiBlitz3.ab3@18727>    BNE.w 'notabyte
0002EE2A <AmiBlitz3.ab3@18731>   MOVE.w regnum,D1
0002EE2E <AmiBlitz3.ab3@18732>   ORI.w #$4880,D1      ;ext.w Dn
0002EE32 <AmiBlitz3.ab3@18733>    BSR.w writeword
0002EE34 <AmiBlitz3.ab3@18736>   MOVE.w (A7)+,D3      ;old type
0002EE38 <AmiBlitz3.ab3@18737>    BEQ.w 'done         ;type not set yet...
0002EE3E <AmiBlitz3.ab3@18740>    MOVE.l lastinstructionaddr,a0
0002EE42 <AmiBlitz3.ab3@18742>   CMP.w #$3,D3
0002EE46 <AmiBlitz3.ab3@18743>    BNE.w 'nob
0002EE4A <AmiBlitz3.ab3@18744>   CMP.w #$4,D2
0002EE4E <AmiBlitz3.ab3@18745>    BEQ.w 'conv2
0002EE50 <AmiBlitz3.ab3@18748>   CMP.w D2,D3
0002EE54 <AmiBlitz3.ab3@18749>    BLS.w 'done
0002EE56 <AmiBlitz3.ab3@18752>   EXG.l D2,D3
0002EE58 <AmiBlitz3.ab3@18754>   MOVE.l a0,-(a7)
0002EE5E <AmiBlitz3.ab3@18755>   TST.b typecheck
0002EE62 <AmiBlitz3.ab3@18756>   BEQ 'ok
0002EE68 <AmiBlitz3.ab3@18757>   TST.b notypecheck
0002EE6C <AmiBlitz3.ab3@18758>   BNE 'ok
0002EE72 <AmiBlitz3.ab3@18759>   MOVE.l leftsidetype,a0
0002EE7C <AmiBlitz3.ab3@18760>   CMP.l #0,leftsidetype
0002EE80 <AmiBlitz3.ab3@18761>   BEQ 'ok
0002EE88 <AmiBlitz3.ab3@18762>   CMP.w #1,leftsideflagmask
0002EE8C <AmiBlitz3.ab3@18763>   BEQ 'isptr
0002EE94 <AmiBlitz3.ab3@18764>   CMP.l #$100,4(a0)
0002EE98 <AmiBlitz3.ab3@18765>   BLE 'ok
0002EE9C <AmiBlitz3.ab3@18768>   CMP.b #3,d3
0002EEA0 <AmiBlitz3.ab3@18769>   BEQ 'ok
0002EEA4 <AmiBlitz3.ab3@18770>   CMP.b #7,d3
0002EEA8 <AmiBlitz3.ab3@18771>   BEQ 'ok
0002EEAE <AmiBlitz3.ab3@18772>   JMP   error_convert_types      ;for all syntax only long and string allowed to assign to a type
0002EEB0 <AmiBlitz3.ab3@18775>   MOVE.l (a7)+,a0
0002EEB4 <AmiBlitz3.ab3@18777>   BSR.w writeconvertcode         ;called from var assign      ;bump up new type to old...
0002EEB8 <AmiBlitz3.ab3@18780> BRA.w reget
0002EEBA <AmiBlitz3.ab3@18784>   MOVEQ.l #$00,D3
0002EEC0 <AmiBlitz3.ab3@18785>   MOVE.w regnum,D1
0002EEC4 <AmiBlitz3.ab3@18786>    BEQ.w savem_skip
0002EEC6 <AmiBlitz3.ab3@18787>   SUBQ.w #1,D1
0002EEC8 <AmiBlitz3.ab3@18790>      LSR.l #1,D3
0002EECC <AmiBlitz3.ab3@18791>      BSET #$F,D3
0002EED0 <AmiBlitz3.ab3@18792>   DBF D1,'loop
0002EED6 <AmiBlitz3.ab3@18794>    TST.b fpu
0002EEDA <AmiBlitz3.ab3@18795>    BEQ 'l1
0002EEE0 <AmiBlitz3.ab3@18796>    ADDQ.l #2,stacktrack                                    ;intern command
0002EEE2 <AmiBlitz3.ab3@18797>     MOVE.l a0,-(a7)
0002EEE8 <AmiBlitz3.ab3@18798>     MOVE.l stacktrack,d1
0002EEEE <AmiBlitz3.ab3@18799>     LEA fpustackbase,a0
0002EEF2 <AmiBlitz3.ab3@18800>     CLR.w 0(a0,d1)
0002EEF8 <AmiBlitz3.ab3@18801>     CLR.w regmask
0002EEFA <AmiBlitz3.ab3@18802>     MOVE.l (a7)+,a0
0002EEFE <AmiBlitz3.ab3@18806>   MOVE.w #$48E7,D1
0002EF02 <AmiBlitz3.ab3@18807>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002EF04 <AmiBlitz3.ab3@18808>   MOVE.w D3,D1
0002EF08 <AmiBlitz3.ab3@18809> BRA.w writeword
0002EF0A <AmiBlitz3.ab3@18814>   MOVEQ.l #$00,D3
0002EF10 <AmiBlitz3.ab3@18815>   MOVE.w regnum,D1
0002EF14 <AmiBlitz3.ab3@18816>    BEQ.w savem_skip
0002EF16 <AmiBlitz3.ab3@18817>   SUBQ.w #1,D1
0002EF18 <AmiBlitz3.ab3@18820>     LSR.l #1,D3
0002EF1C <AmiBlitz3.ab3@18821>     BSET #$F,D3
0002EF20 <AmiBlitz3.ab3@18822>   DBF D1,'loop
0002EF26 <AmiBlitz3.ab3@18824>    TST.b fpu
0002EF2A <AmiBlitz3.ab3@18825>    BEQ 'l1
0002EF30 <AmiBlitz3.ab3@18826>    ADDQ.l #2,stacktrack                                    ;intern command
0002EF32 <AmiBlitz3.ab3@18827>     MOVE.l a0,-(a7)
0002EF38 <AmiBlitz3.ab3@18828>     MOVE.l stacktrack,d1
0002EF3E <AmiBlitz3.ab3@18829>     LEA fpustackbase,a0
0002EF42 <AmiBlitz3.ab3@18830>     CLR.w 0(a0,d1)
0002EF46 <AmiBlitz3.ab3@18831>    CMP.b #5,(a3)                                           ;result float ?
0002EF4A <AmiBlitz3.ab3@18832>     BNE 'nofpu
0002EF54 <AmiBlitz3.ab3@18834>     MOVE.w regnum,regnumfunc
0002EF5A <AmiBlitz3.ab3@18837>   CLR.w regmask
0002EF5C <AmiBlitz3.ab3@18838>     MOVE.l (a7)+,a0
0002EF60 <AmiBlitz3.ab3@18842>   MOVE.w #$48E7,D1
0002EF64 <AmiBlitz3.ab3@18843>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002EF66 <AmiBlitz3.ab3@18844>   MOVE.w D3,D1
0002EF6A <AmiBlitz3.ab3@18845>  BRA.w writeword
0002EF6C <AmiBlitz3.ab3@18848> RTS
0002EF6E <AmiBlitz3.ab3@18852>   MOVE.l D1,-(A7)
0002EF72 <AmiBlitz3.ab3@18853>   MOVE.w #$4EB9,D1
0002EF76 <AmiBlitz3.ab3@18854>    BSR.w writeword
0002EF7A <AmiBlitz3.ab3@18855>    BSR.w addoff
0002EF7C <AmiBlitz3.ab3@18856>   MOVE.l (A7)+,D1
0002EF80 <AmiBlitz3.ab3@18857> BRA.w writelong
0002EF84 <AmiBlitz3.ab3@18864>    BSR.w findproc                                          ;write function call
0002EF88 <AmiBlitz3.ab3@18866>    BEQ 'l1a
0002EF8E <AmiBlitz3.ab3@18867>    TST.l unusedfunc
0002EF92 <AmiBlitz3.ab3@18869>    BEQ noprocerr
0002EF98 <AmiBlitz3.ab3@18872>    JSR gotoendsource
0002EFA0 <AmiBlitz3.ab3@18875>   MOVE.l funcstruct_returntype(a2),rightsidetype
0002EFA6 <AmiBlitz3.ab3@18876>   TST.l typetocast
0002EFAA <AmiBlitz3.ab3@18877>   BEQ 'nocast
0002EFB4 <AmiBlitz3.ab3@18878>   MOVE.l typetocast,rightsidetype
0002EFBA <AmiBlitz3.ab3@18879>   CLR.l typetocast
0002EFBC <AmiBlitz3.ab3@18880>   MOVE.l a1,-(a7)
0002EFC2 <AmiBlitz3.ab3@18881>   MOVE.l rightsidetype,a1
0002EFC8 <AmiBlitz3.ab3@18882>   CMP.l leftsidetype,a1
0002EFCC <AmiBlitz3.ab3@18883>   BEQ 'ok
0002EFD2 <AmiBlitz3.ab3@18884>   JMP errorconvertreturntype2
0002EFD4 <AmiBlitz3.ab3@18887>   MOVE.l (a7)+,a1
0002EFD6 <AmiBlitz3.ab3@18891>   MOVEQ.l #$00,D1
0002EFDA <AmiBlitz3.ab3@18892>   MOVE.b $5(A2),D1
0002EFE0 <AmiBlitz3.ab3@18894>   MOVE.b d1,retmode
0002EFE4 <AmiBlitz3.ab3@18896>    BMI.w illprocerr
0002EFEA <AmiBlitz3.ab3@18898>    MOVE.b #1,isfunc(a2)
0002EFEC <AmiBlitz3.ab3@18900>   MOVE.w D1,-(A7)
0002EFEE <AmiBlitz3.ab3@18901>   MOVEQ.l #$00,D1
0002EFF2 <AmiBlitz3.ab3@18902>   MOVE.b $4(A2),D1
0002EFF4 <AmiBlitz3.ab3@18903>   LSR.w #4,D1
0002EFF8 <AmiBlitz3.ab3@18904>    BEQ.w 'skip
0002EFFA <AmiBlitz3.ab3@18905>   LSL.w #2,D1
0002F000 <AmiBlitz3.ab3@18906>   SUB.w D1,a2offset
0002F004 <AmiBlitz3.ab3@18909>   CMPI.w #$7,(A7)       ;function type!
0002F008 <AmiBlitz3.ab3@18910>    BNE.b 'sss
0002F00A <AmiBlitz3.ab3@18911>   MOVE.l A2,-(A7)
0002F00E <AmiBlitz3.ab3@18912>    BSR.w makesbase
0002F010 <AmiBlitz3.ab3@18913>   MOVEA.l (A7)+,A2
0002F016 <AmiBlitz3.ab3@18916>   MOVE.w sbasegot,-(A7)
0002F01A <AmiBlitz3.ab3@18917>    BEQ.b 'sssz
0002F01E <AmiBlitz3.ab3@18918>    BSR.w dopusha3
0002F022 <AmiBlitz3.ab3@18921>   BSR.w savemfunc
0002F024 <AmiBlitz3.ab3@18922>   MOVE.w D3,-(A7)             ;the movem regs
0002F028 <AmiBlitz3.ab3@18924>   MOVE.l $E(A2),D1            ;pc of function call
0002F02C <AmiBlitz3.ab3@18926>   TST.b $20(a2)                                            ;increase if morepar
0002F030 <AmiBlitz3.ab3@18927>   BNE 'no0par
0002F032 <AmiBlitz3.ab3@18928>   MOVE.l a5,a4
0002F036 <AmiBlitz3.ab3@18931>   CMP.b #$20,(a4)+
0002F03A <AmiBlitz3.ab3@18932>   BEQ 'l1
0002F040 <AmiBlitz3.ab3@18933>   CMP.b #"}",-1(a4)
0002F044 <AmiBlitz3.ab3@18934>   BNE  'no0par
0002F046 <AmiBlitz3.ab3@18935>   MOVEQ #0,d0
0002F04A <AmiBlitz3.ab3@18938>   LEA $16(A2),A1
0002F04C <AmiBlitz3.ab3@18941>   MOVE.l d1,-(a7)
0002F04E <AmiBlitz3.ab3@18942>   MOVE.b (a1),d2
0002F050 <AmiBlitz3.ab3@18943>   MOVE.l d0,d1
0002F054 <AmiBlitz3.ab3@18944>   CMP.w #4,d2
0002F058 <AmiBlitz3.ab3@18945>   BNE 'l1b
0002F05E <AmiBlitz3.ab3@18946>   ADD.l #$203c,d1
0002F062 <AmiBlitz3.ab3@18947>   BSR writeword
0002F068 <AmiBlitz3.ab3@18948>   MOVE.l #$ffff0000,d1
0002F06C <AmiBlitz3.ab3@18949>   BSR writelong
0002F070 <AmiBlitz3.ab3@18950>  BRA 'l2b
0002F076 <AmiBlitz3.ab3@18953>    TST.b fpu
0002F07A <AmiBlitz3.ab3@18954>    BNE 'l1c
0002F07E <AmiBlitz3.ab3@18955>    CMP.w #5,d2
0002F082 <AmiBlitz3.ab3@18956>    BNE 'l1c
0002F088 <AmiBlitz3.ab3@18957>    ADD.l #$203c,d1
0002F08C <AmiBlitz3.ab3@18958>    BSR writeword
0002F092 <AmiBlitz3.ab3@18959>    MOVE.l #$800000c1,d1
0002F096 <AmiBlitz3.ab3@18960>    BSR writelong
0002F09A <AmiBlitz3.ab3@18961>  BRA 'l2b
0002F0A0 <AmiBlitz3.ab3@18964>   ADD.l #$70ff,d1
0002F0A4 <AmiBlitz3.ab3@18965>   BSR writeword
0002F0A8 <AmiBlitz3.ab3@18966>   CMP.w #7,d2
0002F0AC <AmiBlitz3.ab3@18967>   BNE 'l1d
0002F0B2 <AmiBlitz3.ab3@18968>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002F0B6 <AmiBlitz3.ab3@18969>   BSR writelong
0002F0B8 <AmiBlitz3.ab3@18970>   MOVEQ #0,d1
0002F0BC <AmiBlitz3.ab3@18971>   BSR writeword
0002F0C2 <AmiBlitz3.ab3@18972>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002F0C6 <AmiBlitz3.ab3@18973>   BSR writelong
0002F0C8 <AmiBlitz3.ab3@18974>   MOVEQ #0,d1
0002F0CC <AmiBlitz3.ab3@18975>   BSR writeword
0002F0D2 <AmiBlitz3.ab3@18978>   MOVE.l #$f23c5000,d1
0002F0D4 <AmiBlitz3.ab3@18979>   MOVE.l d0,d2
0002F0D6 <AmiBlitz3.ab3@18980>   ASR.l #2,d2
0002F0D8 <AmiBlitz3.ab3@18981>   ADD.l d2,d1
0002F0DC <AmiBlitz3.ab3@18982>   BSR writelong
0002F0E0 <AmiBlitz3.ab3@18983>   MOVE.w #$ffff,d1
0002F0E4 <AmiBlitz3.ab3@18984>   BSR writeword
0002F0E6 <AmiBlitz3.ab3@18988>   MOVE.l (a7)+,d1
0002F0E8 <AmiBlitz3.ab3@18989>      ADDQ.l #1,a1
0002F0EE <AmiBlitz3.ab3@18990>      ADD.l #$0200,d0
0002F0F4 <AmiBlitz3.ab3@18991>      CMP.l #$0e00,d0
0002F0F8 <AmiBlitz3.ab3@18992>      BEQ syntaxerr
0002F0FA <AmiBlitz3.ab3@18993>      TST.b (a1)
0002F0FE <AmiBlitz3.ab3@18994>      BNE 'again
0002F102 <AmiBlitz3.ab3@18995>  BRA 'p1
0002F106 <AmiBlitz3.ab3@18999>   TST.b $4(A2)
0002F10A <AmiBlitz3.ab3@19000>    BNE.w 'somepars
0002F10E <AmiBlitz3.ab3@19005>   BSR.w makefjsr
0002F112 <AmiBlitz3.ab3@19006>    BSR.w get1bytemain
0002F116 <AmiBlitz3.ab3@19007>  BRA.w 'nopars
0002F11C <AmiBlitz3.ab3@19012>   MOVE.w parnum,-(a7)                                      ;7.2014 need store so function calls in parameter >6 can work
0002F122 <AmiBlitz3.ab3@19014>   MOVE.w regnum,-(A7)         ;old regat
0002F12C <AmiBlitz3.ab3@19016>   MOVE.w regnum,regnumfunc
0002F12E <AmiBlitz3.ab3@19020>   MOVE.l D1,-(A7)                                          ;write functioncall with pars
0002F136 <AmiBlitz3.ab3@19022>   MOVE.b #1,funccall
0002F138 <AmiBlitz3.ab3@19024>   MOVEQ.l #$00,D0
0002F13C <AmiBlitz3.ab3@19025>   MOVE.b $4(A2),D0
0002F146 <AmiBlitz3.ab3@19027>   MOVE.w a2offset,a2offset2
0002F14E <AmiBlitz3.ab3@19028>   MOVE.b 5(a2),retmode
0002F154 <AmiBlitz3.ab3@19029>   MOVE.l a2,currentfunccall
0002F158 <AmiBlitz3.ab3@19031>   LEA $16(A2),A2              ;pointer to var desc
0002F15E <AmiBlitz3.ab3@19032>   CLR.w regnum
0002F164 <AmiBlitz3.ab3@19034>   CLR.w regmask
0002F16A <AmiBlitz3.ab3@19035>   MOVE.b isconstantvalue,-(a7)
0002F170 <AmiBlitz3.ab3@19036>   MOVE.b funcparloop,-(a7)
0002F178 <AmiBlitz3.ab3@19037>   MOVE.b #1,funcparloop
0002F17E <AmiBlitz3.ab3@19038>   MOVE.l rightsidetype,-(a7)
0002F184 <AmiBlitz3.ab3@19039>   MOVE.l leftsidetype,-(a7)                               ;store values To stack so it can work recursive
0002F18A <AmiBlitz3.ab3@19040>   MOVE.b blitzparloop,-(a7)
0002F190 <AmiBlitz3.ab3@19041>   CLR.b blitzparloop
0002F196 <AmiBlitz3.ab3@19043>   JSR fetchpees2
0002F19C <AmiBlitz3.ab3@19046>   MOVE.b (a7)+,blitzparloop
0002F1A2 <AmiBlitz3.ab3@19047>   MOVE.l (a7)+,leftsidetype
0002F1A8 <AmiBlitz3.ab3@19048>   MOVE.l (a7)+,rightsidetype
0002F1AE <AmiBlitz3.ab3@19049>   MOVE.b (a7)+,funcparloop
0002F1B4 <AmiBlitz3.ab3@19050>   MOVE.b (a7)+,isconstantvalue
0002F1BA <AmiBlitz3.ab3@19052>   JSR chkstak
0002F1BC <AmiBlitz3.ab3@19053>   MOVE.l (A7)+,D1
0002F1C0 <AmiBlitz3.ab3@19070>    BTST #0,d1
0002F1C4 <AmiBlitz3.ab3@19071>    BNE intern1
0002F1C8 <AmiBlitz3.ab3@19073>    BSR.w makefjsr
0002F1CE <AmiBlitz3.ab3@19097>   MOVE.w (A7)+,regnum
0002F1D4 <AmiBlitz3.ab3@19099>   MOVE.w (a7)+,parnum                                     ;07.2014
0002F1D8 <AmiBlitz3.ab3@19103>   CMP.w #"}",D0
0002F1DC <AmiBlitz3.ab3@19104>    BNE.w errorbracketmiss2
0002F1DE <AmiBlitz3.ab3@19107>    MOVEQ #0,d1                                            ; end of function call pars
0002F1E4 <AmiBlitz3.ab3@19109>   MOVE.w regnum,D1
0002F1E8 <AmiBlitz3.ab3@19110>    BEQ.w 'nopars3
0002F1EE <AmiBlitz3.ab3@19112>    TST.b fpu
0002F1F2 <AmiBlitz3.ab3@19113>    BEQ 'old
0002F1FA <AmiBlitz3.ab3@19114>    CMP.b #5,retmode
0002F1FE <AmiBlitz3.ab3@19115>    BNE 'old
0002F200 <AmiBlitz3.ab3@19116>    ASL.l #7,d1
0002F206 <AmiBlitz3.ab3@19117>    OR.l #$f2000000,d1
0002F20A <AmiBlitz3.ab3@19118>    BSR writelong
0002F20E <AmiBlitz3.ab3@19119>  BRA 'nopars3
0002F210 <AmiBlitz3.ab3@19123>   LSL.w #8,D1
0002F212 <AmiBlitz3.ab3@19124>   LSL.w #1,D1
0002F216 <AmiBlitz3.ab3@19125>   ORI.w #$2000,D1
0002F21A <AmiBlitz3.ab3@19126>    BSR.w writeword         ;move.l d0,regat
0002F21C <AmiBlitz3.ab3@19129>    MOVE.w (A7)+,D3
0002F220 <AmiBlitz3.ab3@19130>    BEQ.w 'nomovem
0002F226 <AmiBlitz3.ab3@19132>    TST.b fpu
0002F22A <AmiBlitz3.ab3@19133>    BEQ 'old2
0002F22C <AmiBlitz3.ab3@19134>    MOVE.l d0,-(a7)
0002F230 <AmiBlitz3.ab3@19135>    MOVE.w #8,d0
0002F232 <AmiBlitz3.ab3@19136>    MOVE.l a0,-(a7)
0002F238 <AmiBlitz3.ab3@19137>    MOVE.l stacktrack,d1
0002F23E <AmiBlitz3.ab3@19138>    LEA fpustackbase,a0
0002F246 <AmiBlitz3.ab3@19139>    MOVE.w 0(a0,d1),regmask
0002F248 <AmiBlitz3.ab3@19140>    MOVE.l (a7)+,a0
0002F24C <AmiBlitz3.ab3@19143>   BEQ 'ready
0002F252 <AmiBlitz3.ab3@19144>    BTST d0,regmask
0002F256 <AmiBlitz3.ab3@19145>    BEQ 'noa7
0002F258 <AmiBlitz3.ab3@19146>    MOVEQ #0,d1
0002F25A <AmiBlitz3.ab3@19147>    MOVE.w d0,d1
0002F25C <AmiBlitz3.ab3@19148>    SUBQ.w #1,d1
0002F25E <AmiBlitz3.ab3@19149>    ASL #7,d1
0002F264 <AmiBlitz3.ab3@19151>    OR.l #$f21f5400,d1                                      ;fmove.d (a7)+
0002F268 <AmiBlitz3.ab3@19152>    BSR writelong
0002F26E <AmiBlitz3.ab3@19153>    SUBQ.l #2,stacktrack
0002F270 <AmiBlitz3.ab3@19156>    SUBQ.w #1,d0
0002F274 <AmiBlitz3.ab3@19157>    BNE 'loop
0002F27A <AmiBlitz3.ab3@19160>   SUBQ.l #2,stacktrack                                     ;integer sub
0002F27C <AmiBlitz3.ab3@19161>   MOVE.l (a7)+,d0
0002F280 <AmiBlitz3.ab3@19165>   MOVE.w #$4CDF,D1
0002F284 <AmiBlitz3.ab3@19166>    BSR.w writeword
0002F286 <AmiBlitz3.ab3@19167>   MOVEQ.l #$00,D1
0002F288 <AmiBlitz3.ab3@19168>   MOVEQ.l #$0F,D4
0002F28A <AmiBlitz3.ab3@19171>     LSL.w #1,D3
0002F28C <AmiBlitz3.ab3@19172>     ROXR.w #1,D1
0002F290 <AmiBlitz3.ab3@19173>   DBF D4,'loopsw                                         ;movem.l (a7)+,dx
0002F294 <AmiBlitz3.ab3@19175>     BSR.w writeword        ;poke movem (a7)+...
0002F29A <AmiBlitz3.ab3@19177>    CLR.w regnumfunc
0002F29C <AmiBlitz3.ab3@19181>   MOVE.w (A7)+,D1
0002F2A0 <AmiBlitz3.ab3@19182>    BEQ.b 'nores
0002F2A4 <AmiBlitz3.ab3@19183>   CMPI.w #$7,(A7)
0002F2A8 <AmiBlitz3.ab3@19184>    BEQ.b 'issb
0002F2AE <AmiBlitz3.ab3@19186>   LEA geta3,A0
0002F2B4 <AmiBlitz3.ab3@19187>   LEA geta3f,A1
0002F2B8 <AmiBlitz3.ab3@19188>    BSR.w pokecode
0002F2BC <AmiBlitz3.ab3@19189>  BRA.b 'nosb
0002F2C2 <AmiBlitz3.ab3@19193>   MOVE.w deca3,D1
0002F2C6 <AmiBlitz3.ab3@19194>    BSR.w writeword
0002F2CA <AmiBlitz3.ab3@19197>   BSR.w dopulla3          ;fix up string base
0002F2CC <AmiBlitz3.ab3@19200>   MOVE.w (A7)+,D2         ;what it returns!
0002F2D0 <AmiBlitz3.ab3@19201>   CMP.w #$7,D2
0002F2D4 <AmiBlitz3.ab3@19202>    BNE.w 'notst
0002F2DA <AmiBlitz3.ab3@19203>   MOVE.w putstlen,D1
0002F2E0 <AmiBlitz3.ab3@19204>   OR.w regnum,D1
0002F2E4 <AmiBlitz3.ab3@19205>    BSR.w writeword
0002F2E8 <AmiBlitz3.ab3@19208>   BSR.w get1bytemain
0002F2EC <AmiBlitz3.ab3@19209> BRA.w varcont
0002F2EE <AmiBlitz3.ab3@19213> deca3:   Dc.b $53,$4B                                      ;SUBQ.W  #1,A3
0002F2F6 <AmiBlitz3.ab3@19221>   CMP.b #2,optistring
0002F2FA <AmiBlitz3.ab3@19222>   BEQ 'fs2
0002F2FE <AmiBlitz3.ab3@19224>   BSR.w makesbase                                          ;writestringvariable
0002F302 <AmiBlitz3.ab3@19225>   BTST #$F,D2
0002F306 <AmiBlitz3.ab3@19226>    BNE.w 'already
0002F30C <AmiBlitz3.ab3@19227>   MOVE.w D3,leaa5d3a2+2
0002F312 <AmiBlitz3.ab3@19228>   MOVE.l leaa5d3a2,D1
0002F316 <AmiBlitz3.ab3@19229>    BSR.w pokela5s
0002F31C <AmiBlitz3.ab3@19232>   MOVE.w regnum,D1
0002F31E <AmiBlitz3.ab3@19233>   LSL.w #8,D1
0002F320 <AmiBlitz3.ab3@19234>   LSL.w #1,D1
0002F324 <AmiBlitz3.ab3@19235>   ORI.w #$7000,D1
0002F32A <AmiBlitz3.ab3@19236>   LEA stvarget2,A0
0002F32C <AmiBlitz3.ab3@19237>   MOVE.w D1,(A0)
0002F332 <AmiBlitz3.ab3@19238>   MOVE.w regnum,D1
0002F338 <AmiBlitz3.ab3@19239>   ANDI.w #$FFF8,$2(A0)
0002F33C <AmiBlitz3.ab3@19240>   OR.w D1,$2(A0)
0002F342 <AmiBlitz3.ab3@19241>   LEA stvarget2f,A1
0002F346 <AmiBlitz3.ab3@19242>    BSR.w pokecode
0002F34A <AmiBlitz3.ab3@19243>   MOVE.w #$C600,D1     ; was #copstring,
0002F34E <AmiBlitz3.ab3@19244>    BSR.w Atokejsr
0002F350 <AmiBlitz3.ab3@19245>   MOVEQ.l #$07,D2
0002F354 <AmiBlitz3.ab3@19246>  BRA.w reget
0002F35A <AmiBlitz3.ab3@19250>      TST.w stackpar
0002F35E <AmiBlitz3.ab3@19251>      BMI 'l10
0002F364 <AmiBlitz3.ab3@19252>      MOVE.l #$3f3c0007,d1
0002F36A <AmiBlitz3.ab3@19253>      ADDQ.w #2,a2offset
0002F36E <AmiBlitz3.ab3@19254>      BSR writelong
0002F372 <AmiBlitz3.ab3@19257>   MOVE.w #$4878,d1
0002F378 <AmiBlitz3.ab3@19258>      CLR.w stackpar
0002F37C <AmiBlitz3.ab3@19259>      BSR writeword
0002F380 <AmiBlitz3.ab3@19260>      MOVE.w #$0,d1
0002F384 <AmiBlitz3.ab3@19261>      BSR writeword
0002F388 <AmiBlitz3.ab3@19262>      MOVE.w #$246d,d1
0002F38C <AmiBlitz3.ab3@19263>      BSR writeword
0002F38E <AmiBlitz3.ab3@19264>      MOVE.w d3,d1
0002F392 <AmiBlitz3.ab3@19265>      BSR writeword
0002F398 <AmiBlitz3.ab3@19266>      MOVE.l #$4a926704,d1
0002F39C <AmiBlitz3.ab3@19267>      BSR writelong
0002F3A2 <AmiBlitz3.ab3@19268>      MOVE.l #$2eaafffc,d1
0002F3A6 <AmiBlitz3.ab3@19269>      BSR writelong
0002F3AA <AmiBlitz3.ab3@19270>      MOVE.w #$2f0a,d1
0002F3B0 <AmiBlitz3.ab3@19271>      ADDQ.w #8,a2offset
0002F3B4 <AmiBlitz3.ab3@19272>      BSR writeword
0002F3B8 <AmiBlitz3.ab3@19273> BRA.w reget
0002F3BC <AmiBlitz3.ab3@19278>   CMP.b #$7,D2                                             ;load basic var
0002F3C0 <AmiBlitz3.ab3@19279>    BEQ.w stvar
0002F3C6 <AmiBlitz3.ab3@19281>    TST.b iee
0002F3CA <AmiBlitz3.ab3@19282>    BEQ 'noiee
0002F3CE <AmiBlitz3.ab3@19283>    CMP.b #5,d2
0002F3D2 <AmiBlitz3.ab3@19284>    BNE 'noiee
0002F3D4 <AmiBlitz3.ab3@19285>    MOVE.l d0,-(a7)                                         ;fpu load var
0002F3D8 <AmiBlitz3.ab3@19286>    BTST #15,d2
0002F3DC <AmiBlitz3.ab3@19287>    BEQ 'var
0002F3E2 <AmiBlitz3.ab3@19288>    CMP.l #$7fff,d3
0002F3E6 <AmiBlitz3.ab3@19289>    BGT 'longoffset
0002F3EC <AmiBlitz3.ab3@19290>    MOVE.l #$f22a4400,d1                                    ;newtype     >32kb
0002F3EE <AmiBlitz3.ab3@19291>    TST.w d3                                                ;offset =0
0002F3F2 <AmiBlitz3.ab3@19292>    BNE 'offset
0002F3F8 <AmiBlitz3.ab3@19295>   MOVE.l #$f2124400,d1
0002F3FA <AmiBlitz3.ab3@19296>    MOVEQ #0,d3
0002F3FE <AmiBlitz3.ab3@19297>  BRA 'glob
0002F404 <AmiBlitz3.ab3@19300>   SUBQ.l #4,destpointer
0002F408 <AmiBlitz3.ab3@19301>  BRA 'glob
0002F40E <AmiBlitz3.ab3@19304>   TST.b fast
0002F412 <AmiBlitz3.ab3@19305>    BEQ 'nofastload
0002F418 <AmiBlitz3.ab3@19306>    TST.w regnum
0002F41C <AmiBlitz3.ab3@19307>    BNE 'nofastload
0002F422 <AmiBlitz3.ab3@19308>    CMP.l fp0addr,a4
0002F426 <AmiBlitz3.ab3@19309>    BNE 'nofastload
0002F42C <AmiBlitz3.ab3@19310>    MOVE.l fp0iff,d1
0002F432 <AmiBlitz3.ab3@19311>    CMP.l firstiff,d1
0002F436 <AmiBlitz3.ab3@19312>    BNE 'nofastload
0002F43C <AmiBlitz3.ab3@19313>    MOVE.w varmode,d1
0002F442 <AmiBlitz3.ab3@19314>    CMP.w fp0mode,d1
0002F446 <AmiBlitz3.ab3@19315>    BNE 'nofastload
0002F44C <AmiBlitz3.ab3@19316>    CMP.w fp0var,d3
0002F450 <AmiBlitz3.ab3@19317>    BNE 'nofastload
0002F454 <AmiBlitz3.ab3@19318>    BCLR #16,d2
0002F456 <AmiBlitz3.ab3@19319>    MOVE.l (a7)+,d0
0002F458 <AmiBlitz3.ab3@19320>  RTS
0002F45A <AmiBlitz3.ab3@19323>    MOVEQ #0,d0
0002F460 <AmiBlitz3.ab3@19324>    MOVE.w regnum,d0
0002F466 <AmiBlitz3.ab3@19325>    CMP.l maxregs,d0
0002F46A <AmiBlitz3.ab3@19326>    BLE 'ok
0002F470 <AmiBlitz3.ab3@19327>    LEA cmplxerr,a0
0002F472 <AmiBlitz3.ab3@19328>   MOVE.l a0,-(a7)
0002F478 <AmiBlitz3.ab3@19329>  JMP handle_compileerror
0002F47E <AmiBlitz3.ab3@19332>    LEA regtable,a4
0002F480 <AmiBlitz3.ab3@19333>    TST.l (a4)
0002F484 <AmiBlitz3.ab3@19334>    BEQ 'noreg
0002F488 <AmiBlitz3.ab3@19335>    CMP.w 0+4(a4),d3
0002F48C <AmiBlitz3.ab3@19336>    BNE 'doreg1
0002F492 <AmiBlitz3.ab3@19337>    MOVE.l #$f2001c00,d1
0002F498 <AmiBlitz3.ab3@19338>    MOVE.w regnum,d0
0002F49A <AmiBlitz3.ab3@19339>    ASL.w #7,d0
0002F49C <AmiBlitz3.ab3@19340>    OR.w d0,d1
0002F4A0 <AmiBlitz3.ab3@19341>    BSR writelong
0002F4A2 <AmiBlitz3.ab3@19342>    MOVE.l (a7)+,d0
0002F4A4 <AmiBlitz3.ab3@19343>  RTS
0002F4A8 <AmiBlitz3.ab3@19346>   CMP.w 8+4(a4),d3
0002F4AC <AmiBlitz3.ab3@19347>    BNE 'doreg2
0002F4B2 <AmiBlitz3.ab3@19348>    MOVE.l #$f2001800,d1
0002F4B8 <AmiBlitz3.ab3@19349>    MOVE.w regnum,d0
0002F4BA <AmiBlitz3.ab3@19350>    ASL.w #7,d0
0002F4BC <AmiBlitz3.ab3@19351>    OR.w d0,d1
0002F4C0 <AmiBlitz3.ab3@19352>    BSR writelong
0002F4C2 <AmiBlitz3.ab3@19353>    MOVE.l (a7)+,d0
0002F4C4 <AmiBlitz3.ab3@19354>  RTS
0002F4C8 <AmiBlitz3.ab3@19357>   CMP.w 16+4(a4),d3
0002F4CC <AmiBlitz3.ab3@19358>    BNE 'doreg3
0002F4D2 <AmiBlitz3.ab3@19359>    MOVE.l #$f2001400,d1
0002F4D8 <AmiBlitz3.ab3@19360>    MOVE.w regnum,d0
0002F4DA <AmiBlitz3.ab3@19361>    ASL.w #7,d0
0002F4DC <AmiBlitz3.ab3@19362>    OR.w d0,d1
0002F4E0 <AmiBlitz3.ab3@19363>    BSR  writelong
0002F4E2 <AmiBlitz3.ab3@19364>    MOVE.l (a7)+,d0
0002F4E4 <AmiBlitz3.ab3@19365>  RTS
0002F4E8 <AmiBlitz3.ab3@19368>   CMP.w 24+4(a4),d3
0002F4EC <AmiBlitz3.ab3@19369>    BNE 'doreg4
0002F4F2 <AmiBlitz3.ab3@19370>    MOVE.l #$f2001000,d1
0002F4F8 <AmiBlitz3.ab3@19371>    MOVE.w regnum,d0
0002F4FA <AmiBlitz3.ab3@19372>    ASL.w #7,d0
0002F4FC <AmiBlitz3.ab3@19373>    OR.w d0,d1
0002F500 <AmiBlitz3.ab3@19374>    BSR writelong
0002F502 <AmiBlitz3.ab3@19375>    MOVE.l (a7)+,d0
0002F504 <AmiBlitz3.ab3@19376>  RTS
0002F508 <AmiBlitz3.ab3@19379>    CMP.w 32+4(a4),d3
0002F50C <AmiBlitz3.ab3@19380>    BNE 'noreg
0002F512 <AmiBlitz3.ab3@19381>    MOVE.l #$f2000c00,d1
0002F518 <AmiBlitz3.ab3@19382>    MOVE.w regnum,d0
0002F51A <AmiBlitz3.ab3@19383>    ASL.w #7,d0
0002F51C <AmiBlitz3.ab3@19384>    OR.w d0,d1
0002F520 <AmiBlitz3.ab3@19385>    BSR writelong
0002F522 <AmiBlitz3.ab3@19386>    MOVE.l (a7)+,d0
0002F524 <AmiBlitz3.ab3@19387>  RTS
0002F52A <AmiBlitz3.ab3@19390>    MOVE.l #$f22d4400,d1                                    ;var
0002F530 <AmiBlitz3.ab3@19391>    TST.w varmode
0002F534 <AmiBlitz3.ab3@19392>   BEQ 'glob
0002F538 <AmiBlitz3.ab3@19393>   BCLR #16,d1                                              ;local
0002F53A <AmiBlitz3.ab3@19396>    MOVEQ #0,d0
0002F540 <AmiBlitz3.ab3@19397>    MOVE.w regnum,d0
0002F544 <AmiBlitz3.ab3@19398>    CMP.w #7,d0
0002F548 <AmiBlitz3.ab3@19399>    BLE 'ok2
0002F54E <AmiBlitz3.ab3@19400>    LEA cmplxerr,a0
0002F550 <AmiBlitz3.ab3@19401>   MOVE.l a0,-(a7)
0002F556 <AmiBlitz3.ab3@19402>  JMP handle_compileerror
0002F558 <AmiBlitz3.ab3@19405>      ASL.w #7,d0
0002F55A <AmiBlitz3.ab3@19406>    OR.l d0,d1
0002F562 <AmiBlitz3.ab3@19407>    CMP.l #doublecheck,8(a2)
0002F566 <AmiBlitz3.ab3@19408>    BNE 'dbl
0002F56C <AmiBlitz3.ab3@19409>    OR.l #$00001000,d1
0002F570 <AmiBlitz3.ab3@19412>   BSR writelong
0002F572 <AmiBlitz3.ab3@19413>    MOVE.l (a7)+,d0
0002F576 <AmiBlitz3.ab3@19414>    AND.w #$ff,d2
0002F578 <AmiBlitz3.ab3@19415>    MOVE.w d3,d1
0002F57C <AmiBlitz3.ab3@19416>    BEQ 'nooffs
0002F580 <AmiBlitz3.ab3@19417>  BRA writeword
0002F582 <AmiBlitz3.ab3@19422>  RTS
0002F588 <AmiBlitz3.ab3@19425>   MOVE.w regnum,D1
0002F58E <AmiBlitz3.ab3@19427>   MOVE.w d1,load_var_reg
0002F590 <AmiBlitz3.ab3@19429>   LSL.w #8,D1
0002F59A <AmiBlitz3.ab3@19431>   MOVE.l destpointer,load_var_addr
0002F5A0 <AmiBlitz3.ab3@19432>   MOVE.w d2,load_var_size
0002F5A2 <AmiBlitz3.ab3@19434>   LSL.w #1,D1
0002F5A6 <AmiBlitz3.ab3@19435>   BTST #$E,D2
0002F5AA <AmiBlitz3.ab3@19436>    BNE.w 'pointer
0002F5AC <AmiBlitz3.ab3@19437>   TST.b D2
0002F5B0 <AmiBlitz3.ab3@19438>    BNE.w 'skip2
0002F5B2 <AmiBlitz3.ab3@19439>   MOVEQ.l #$03,D2
0002F5B6 <AmiBlitz3.ab3@19440>   ORI.w #$200A,D1
0002F5BA <AmiBlitz3.ab3@19441>  BRA.w writeword
0002F5BE <AmiBlitz3.ab3@19444>   MOVE.b #$3,D2
0002F5C2 <AmiBlitz3.ab3@19447>   BTST #$F,D2
0002F5C6 <AmiBlitz3.ab3@19448>    BEQ.w 'simpvar                                         ;loadarray
0002F5CC <AmiBlitz3.ab3@19450>    TST.b fast                                              ;lea->move xx(a2)
0002F5D0 <AmiBlitz3.ab3@19451>    BEQ 'la10
0002F5D6 <AmiBlitz3.ab3@19456>    CLR.l load_var_addr
0002F5DA <AmiBlitz3.ab3@19457>  BRA 'la10
0002F5E2 <AmiBlitz3.ab3@19459>    CMP.w #$2012,movea2dn                                  ;??Looks like dead code??
0002F5E6 <AmiBlitz3.ab3@19460>    BNE 'la10
0002F5EC <AmiBlitz3.ab3@19461>    TST.b optiarray
0002F5F0 <AmiBlitz3.ab3@19462>    BNE 'la10
0002F5F6 <AmiBlitz3.ab3@19463>    MOVE.l destpointer,a4
0002F5FC <AmiBlitz3.ab3@19464>    SUB.l loada,a4
0002F600 <AmiBlitz3.ab3@19465>    CMP.w #4,a4
0002F604 <AmiBlitz3.ab3@19466>    BEQ 'la100
0002F608 <AmiBlitz3.ab3@19467>    CMP.w #2,a4
0002F60C <AmiBlitz3.ab3@19468>    BNE 'la10
0002F612 <AmiBlitz3.ab3@19469>    MOVE.l destpointer,a4
0002F616 <AmiBlitz3.ab3@19470>    CMP.b #3,d2
0002F61A <AmiBlitz3.ab3@19471>    BCS 'la110
0002F620 <AmiBlitz3.ab3@19472>    MOVE.w #$202a,-2(a4)
0002F624 <AmiBlitz3.ab3@19473>    OR.w d1,-2(a4)
0002F62A <AmiBlitz3.ab3@19474>    MOVE.w arrayoffset,d1
0002F62E <AmiBlitz3.ab3@19475>    BSR writeword
0002F632 <AmiBlitz3.ab3@19476>  BRA 'more
0002F636 <AmiBlitz3.ab3@19479>    CMP.b #2,d2
0002F63A <AmiBlitz3.ab3@19480>    BNE 'la120
0002F640 <AmiBlitz3.ab3@19481>     MOVE.w #$302a,-2(a4)
0002F644 <AmiBlitz3.ab3@19482>    OR.w d1,-2(a4)
0002F64A <AmiBlitz3.ab3@19484>    MOVE.w arrayoffset,d1
0002F64E <AmiBlitz3.ab3@19485>    BSR writeword
0002F652 <AmiBlitz3.ab3@19486>  BRA 'more
0002F656 <AmiBlitz3.ab3@19489>   CMP.b #1,d2
0002F65A <AmiBlitz3.ab3@19490>    BNE.s 'la10
0002F660 <AmiBlitz3.ab3@19491>     MOVE.w #$102a,-2(a4)
0002F664 <AmiBlitz3.ab3@19492>    OR.w d1,-2(a4)
0002F66A <AmiBlitz3.ab3@19493>    MOVE.w arrayoffset,d1
0002F66E <AmiBlitz3.ab3@19494>    BSR writeword
0002F672 <AmiBlitz3.ab3@19495>  BRA 'more
0002F678 <AmiBlitz3.ab3@19498>   MOVE.l destpointer,a4
0002F67E <AmiBlitz3.ab3@19499>    CMP.w #$45ea,-2(a4)
0002F682 <AmiBlitz3.ab3@19500>    BNE 'la10
0002F686 <AmiBlitz3.ab3@19501>    CMP.b #3,d2
0002F68A <AmiBlitz3.ab3@19502>    BCS 'la11
0002F690 <AmiBlitz3.ab3@19503>    MOVE.w #$202a,-4(a4)
0002F694 <AmiBlitz3.ab3@19504>    OR.w d1,-4(a4)
0002F698 <AmiBlitz3.ab3@19505>  BRA 'more
0002F69C <AmiBlitz3.ab3@19508>    CMP.b #2,d2
0002F6A0 <AmiBlitz3.ab3@19509>    BNE 'la12
0002F6A6 <AmiBlitz3.ab3@19510>     MOVE.w #$302a,-4(a4)
0002F6AA <AmiBlitz3.ab3@19511>    OR.w d1,-4(a4)
0002F6AE <AmiBlitz3.ab3@19512>  BRA 'more
0002F6B2 <AmiBlitz3.ab3@19515>   CMP.b #1,d2
0002F6B6 <AmiBlitz3.ab3@19516>    BNE.s 'la10
0002F6BC <AmiBlitz3.ab3@19517>     MOVE.w #$102a,-4(a4)
0002F6C0 <AmiBlitz3.ab3@19518>    OR.w d1,-4(a4)
0002F6C4 <AmiBlitz3.ab3@19519>  BRA 'more
0002F6CA <AmiBlitz3.ab3@19523>    OR.w movea2dn,D1
0002F6CE <AmiBlitz3.ab3@19524>    BSR.w 'size
0002F6D2 <AmiBlitz3.ab3@19525>    BSR.w writeword
0002F6D6 <AmiBlitz3.ab3@19528>   ANDI.w #$FF,D2
0002F6D8 <AmiBlitz3.ab3@19529>  RTS
0002F6DE <AmiBlitz3.ab3@19533>    MOVE.l destpointer,a4              ; "
0002F6E6 <AmiBlitz3.ab3@19534>    MOVE.l #$f22a4400,-4(a4)           ; "
0002F6EC <AmiBlitz3.ab3@19535>    MOVE.w arrayoffset,d1              ; "
0002F6F0 <AmiBlitz3.ab3@19536>  BRA writeword
0002F6F6 <AmiBlitz3.ab3@19540>   OR.w moved3a5dn,D1                                        ;write move.l 0(a5),reg
0002F6FA <AmiBlitz3.ab3@19541>    BSR.w 'size
0002F6FE <AmiBlitz3.ab3@19542>    BSR.w pokewda5s
0002F700 <AmiBlitz3.ab3@19543>   MOVE.w D3,D1
0002F704 <AmiBlitz3.ab3@19544>    BSR.w writeword
0002F708 <AmiBlitz3.ab3@19545>  BRA.w 'more
0002F70C <AmiBlitz3.ab3@19550>   BTST #$E,D2
0002F710 <AmiBlitz3.ab3@19551>    BNE.w 'long
0002F714 <AmiBlitz3.ab3@19552>   CMP.b #$1,D2
0002F718 <AmiBlitz3.ab3@19553>    BEQ.w 'byte
0002F71C <AmiBlitz3.ab3@19554>   CMP.b #$2,D2
0002F720 <AmiBlitz3.ab3@19555>    BEQ.w 'word
0002F722 <AmiBlitz3.ab3@19558>  RTS
0002F726 <AmiBlitz3.ab3@19561>   EORI.w #$3000,D1
0002F728 <AmiBlitz3.ab3@19562>  RTS
0002F72C <AmiBlitz3.ab3@19565>   ORI.w #$1000,D1
0002F72E <AmiBlitz3.ab3@19566> RTS
0002F736 <AmiBlitz3.ab3@19572>   MOVE.w #$FFFF,dfetch    ; was -1
0002F73A <AmiBlitz3.ab3@19573>   BSR.w get1bytemain
0002F73E <AmiBlitz3.ab3@19574>   CMP.w #$2D,D0           ;'-'
0002F742 <AmiBlitz3.ab3@19575>    BNE.w 'datado
0002F746 <AmiBlitz3.ab3@19576>   BSR.w get1bytemain
0002F74A <AmiBlitz3.ab3@19577>   BSR.w 'datado
0002F74E <AmiBlitz3.ab3@19579>   CMP.w #$5,D2
0002F752 <AmiBlitz3.ab3@19580>    BCC.w 'nfp
0002F754 <AmiBlitz3.ab3@19581>   NEG.l D0
0002F756 <AmiBlitz3.ab3@19582>  RTS
0002F75C <AmiBlitz3.ab3@19586>   TST.b fpu
0002F760 <AmiBlitz3.ab3@19587>   BEQ 'noneg
0002F764 <AmiBlitz3.ab3@19588>   fneg.x fp0
0002F766 <AmiBlitz3.ab3@19589>  RTS
0002F76A <AmiBlitz3.ab3@19594>   BCHG #$7,D0
0002F76C <AmiBlitz3.ab3@19595>  RTS
0002F770 <AmiBlitz3.ab3@19599>   CMP.w #$24,D0          ;'$'
0002F774 <AmiBlitz3.ab3@19600>    BEQ.w get_hexconstant
0002F778 <AmiBlitz3.ab3@19601>   CMP.w #$25,D0          ;'%'
0002F77C <AmiBlitz3.ab3@19602>    BEQ.w fetchbin
0002F780 <AmiBlitz3.ab3@19605>   CMP.w #$2E,D0          ;'.'
0002F784 <AmiBlitz3.ab3@19606>    BNE.w fetchnum
0002F786 <AmiBlitz3.ab3@19610>   MOVEQ.l #$00,D3
0002F78A <AmiBlitz3.ab3@19611> BRA.w fetchpoint2
0002F78C <AmiBlitz3.ab3@19615>   MOVEQ.l #$00,D3                                          ;number
0002F790 <AmiBlitz3.ab3@19617>    BSR.w atoi
0002F794 <AmiBlitz3.ab3@19619>   CMP.w #$2E,D0             ;'.'
0002F798 <AmiBlitz3.ab3@19620>    BEQ.w fetchpoint
0002F79C <AmiBlitz3.ab3@19621>   ORI.w #$20,D0
0002F7A0 <AmiBlitz3.ab3@19622>   CMP.w #$65,D0             ;'e'
0002F7A4 <AmiBlitz3.ab3@19623>    BNE.w fetchnum2
0002F7AA <AmiBlitz3.ab3@19624>   CMP.l #$800000,D3
0002F7AE <AmiBlitz3.ab3@19625>    BCC.w overerr
0002F7B0 <AmiBlitz3.ab3@19626>   MOVEQ.l #-$01,D6
0002F7B4 <AmiBlitz3.ab3@19628>   fmove.l d3,fp0
0002F7B6 <AmiBlitz3.ab3@19630>   MOVE.l D3,D0
0002F7BC <AmiBlitz3.ab3@19631>   MOVEA.l _mathffpbase,A6
0002F7C0 <AmiBlitz3.ab3@19632>    JSR -$24(A6)             ;int to ffp
0002F7C2 <AmiBlitz3.ab3@19633>   MOVE.l D0,D3
0002F7C6 <AmiBlitz3.ab3@19634>    BSR.w dothee
0002F7CA <AmiBlitz3.ab3@19635>    BSR.w reget
0002F7CE <AmiBlitz3.ab3@19636>    BSR.w consttype2
0002F7D2 <AmiBlitz3.ab3@19637> BRA.w fetchnum3
0002F7D6 <AmiBlitz3.ab3@19642>   CMP.b #4,d2
0002F7DA <AmiBlitz3.ab3@19643>   BEQ 'l4
0002F7DE <AmiBlitz3.ab3@19644>   MOVE.b #5,d2                                             ;nprint 2/0.5 bugfix
0002F7E4 <AmiBlitz3.ab3@19647>    TST.b fpu
0002F7E8 <AmiBlitz3.ab3@19648>    BNE 'l1
0002F7EE <AmiBlitz3.ab3@19650>    CMP.l #$800000,D3
0002F7F2 <AmiBlitz3.ab3@19651>    BCC.w overerr
0002F7F6 <AmiBlitz3.ab3@19653>  BRA fetchpoint2
0002F7FC <AmiBlitz3.ab3@19656>   CMP.l #$7fffffff,d3
0002F800 <AmiBlitz3.ab3@19657>     BCC.w overerr
0002F802 <AmiBlitz3.ab3@19662>   MOVEQ.l #-$01,D6         ;now a float.
0002F804 <AmiBlitz3.ab3@19663>   MOVE.l D3,D0
0002F808 <AmiBlitz3.ab3@19665>   fmove.l d3,fp0
0002F80E <AmiBlitz3.ab3@19667>   MOVEA.l _mathffpbase,A6
0002F812 <AmiBlitz3.ab3@19668>    JSR -$24(A6)            ;int to ffp                                       ;integer to ffp
0002F814 <AmiBlitz3.ab3@19669>   MOVE.l D0,-(A7)          ;save whole number
0002F818 <AmiBlitz3.ab3@19670>    BSR.w get1bytemain
0002F81C <AmiBlitz3.ab3@19671>    BSR.w tstnum
0002F820 <AmiBlitz3.ab3@19672>    BNE.w syntaxerr
0002F822 <AmiBlitz3.ab3@19673>   MOVEQ.l #$00,D3
0002F826 <AmiBlitz3.ab3@19674>    BSR.w atoi              ;get int frac
0002F828 <AmiBlitz3.ab3@19675>   TST.l D3
0002F82C <AmiBlitz3.ab3@19676>    BEQ.w 'pskip
0002F832 <AmiBlitz3.ab3@19678>   TST.b fpu
0002F836 <AmiBlitz3.ab3@19679>   BNE 'l1
0002F83C <AmiBlitz3.ab3@19681>   CMP.l #$800000,D3
0002F840 <AmiBlitz3.ab3@19682>    BCC.w overerr
0002F844 <AmiBlitz3.ab3@19684>  BRA 'l2
0002F84A <AmiBlitz3.ab3@19687>   CMP.l #$7fffffff,d3
0002F84E <AmiBlitz3.ab3@19688>   BCC overerr
0002F852 <AmiBlitz3.ab3@19691>   fmove.l d5,fp1
0002F854 <AmiBlitz3.ab3@19693>   MOVE.l D5,D0
0002F858 <AmiBlitz3.ab3@19694>    JSR -$24(A6)        ;divisor to ffp
0002F85A <AmiBlitz3.ab3@19695>   MOVE.l D0,D5
0002F85E <AmiBlitz3.ab3@19697>   fmove.l d3,fp2
0002F860 <AmiBlitz3.ab3@19699>   MOVE.l D3,D0
0002F864 <AmiBlitz3.ab3@19700>    JSR -$24(A6)        ;to ffp
0002F868 <AmiBlitz3.ab3@19702>   fdiv.x fp1,fp2
0002F86A <AmiBlitz3.ab3@19704>   MOVE.l D5,D1
0002F86E <AmiBlitz3.ab3@19705>    JSR -$54(A6)       ;num/divisor (eg .25=25/100)
0002F872 <AmiBlitz3.ab3@19707>   fadd.x fp2,fp0
0002F874 <AmiBlitz3.ab3@19709>   MOVE.l (A7)+,D1
0002F878 <AmiBlitz3.ab3@19710>    JSR -$42(A6)       ;add 'em
0002F87A <AmiBlitz3.ab3@19711>   MOVE.l D0,D3
0002F87E <AmiBlitz3.ab3@19712>    BSR.w reget
0002F882 <AmiBlitz3.ab3@19713>   ORI.w #$20,D0
0002F886 <AmiBlitz3.ab3@19714>   CMP.w #$65,D0       ;'e'
0002F88A <AmiBlitz3.ab3@19715>    BNE.w 'pskip2
0002F88E <AmiBlitz3.ab3@19718>    BSR.w dothee
0002F892 <AmiBlitz3.ab3@19721>    BSR.w reget
0002F896 <AmiBlitz3.ab3@19722>    BSR.w consttype2
0002F89A <AmiBlitz3.ab3@19723> BRA.w fetchnum3
0002F89C <AmiBlitz3.ab3@19726>   MOVE.l (A7)+,D3
0002F8A0 <AmiBlitz3.ab3@19727> BRA.w 'pskip2
0002F8A4 <AmiBlitz3.ab3@19732>   BSR.w get1bytemain
0002F8A8 <AmiBlitz3.ab3@19733>   CMP.w #$2B,D0       ;'+'
0002F8AC <AmiBlitz3.ab3@19734>    BEQ.w 'pos
0002F8B0 <AmiBlitz3.ab3@19735>   CMP.w #$2D,D0       ;'-'
0002F8B4 <AmiBlitz3.ab3@19736>    BNE.w 'pos2
0002F8B8 <AmiBlitz3.ab3@19738>    BSR.w get1bytemain
0002F8BC <AmiBlitz3.ab3@19739>    BSR.w getsign
0002F8BE <AmiBlitz3.ab3@19743>   MOVE.l D3,D0
0002F8C2 <AmiBlitz3.ab3@19745>   fdiv.x fp1,fp0
0002F8C4 <AmiBlitz3.ab3@19747>   MOVE.l D4,D1
0002F8C8 <AmiBlitz3.ab3@19748>    JSR -$54(A6)
0002F8CA <AmiBlitz3.ab3@19749>   MOVE.l D0,D3
0002F8CC <AmiBlitz3.ab3@19750> RTS
0002F8D0 <AmiBlitz3.ab3@19753>   BSR.w get1bytemain
0002F8D4 <AmiBlitz3.ab3@19756>   BSR.w getsign
0002F8D8 <AmiBlitz3.ab3@19760>   fmul.x fp1,fp0
0002F8DA <AmiBlitz3.ab3@19761>   MOVE.l D3,D0
0002F8DC <AmiBlitz3.ab3@19762>   MOVE.l D4,D1
0002F8E0 <AmiBlitz3.ab3@19763>    JSR -$4E(A6)
0002F8E2 <AmiBlitz3.ab3@19764>   MOVE.l D0,D3
0002F8E4 <AmiBlitz3.ab3@19765> RTS
0002F8E8 <AmiBlitz3.ab3@19769>   BSR.w tstnum
0002F8EC <AmiBlitz3.ab3@19770>    BNE.w syntaxerr
0002F8EE <AmiBlitz3.ab3@19771>   MOVE.w D0,D4
0002F8F2 <AmiBlitz3.ab3@19772>   SUBI.w #$30,D4
0002F8F6 <AmiBlitz3.ab3@19773>    BSR.w get1bytemain
0002F8FA <AmiBlitz3.ab3@19774>    BSR.w tstnum
0002F8FE <AmiBlitz3.ab3@19775>    BNE.w 'skip
0002F902 <AmiBlitz3.ab3@19776>   MULU #$A,D4
0002F906 <AmiBlitz3.ab3@19777>   SUBI.w #$30,D0
0002F908 <AmiBlitz3.ab3@19778>   ADD.w D0,D4
0002F90C <AmiBlitz3.ab3@19779>    BSR.w get1bytemain
0002F910 <AmiBlitz3.ab3@19783>   CMP.w #$12,D4
0002F914 <AmiBlitz3.ab3@19784>    BHI.w overerr
0002F916 <AmiBlitz3.ab3@19786>   LSL.w #3,D4
0002F91C <AmiBlitz3.ab3@19787>   LEA fputab,a0
0002F91E <AmiBlitz3.ab3@19788>   ADD.l d4,a0
0002F924 <AmiBlitz3.ab3@19789>   fmove.d 0(a0),fp1
0002F926 <AmiBlitz3.ab3@19791>   LSR.w #1,d4               ; was #2
0002F92A <AmiBlitz3.ab3@19792>   MOVE.l facts(PC,D4.W),D4
0002F92C <AmiBlitz3.ab3@19793> RTS
0002F974 <AmiBlitz3.ab3@19797>   Dc.d 1,10,100,1000,10000,100000,1000000,10000000,100000000  ;,1000000000,10000000000
0002F978 <AmiBlitz3.ab3@19802>   Dc.l $80000041
0002F97C <AmiBlitz3.ab3@19803>   Dc.l $A0000044
0002F980 <AmiBlitz3.ab3@19804>   Dc.l $C8000047
0002F984 <AmiBlitz3.ab3@19805>   Dc.l $FA00004A
0002F988 <AmiBlitz3.ab3@19806>   Dc.l $9C40004E
0002F98C <AmiBlitz3.ab3@19807>   Dc.l $C3500051
0002F990 <AmiBlitz3.ab3@19808>   Dc.l $F4240054
0002F994 <AmiBlitz3.ab3@19809>   Dc.l $98968058
0002F998 <AmiBlitz3.ab3@19810>   Dc.l $BEBC205B
0002F99C <AmiBlitz3.ab3@19811>   Dc.l $EE6B285E
0002F9A0 <AmiBlitz3.ab3@19812>   Dc.l $9502F962
0002F9A4 <AmiBlitz3.ab3@19813>   Dc.l $BA43B765
0002F9A8 <AmiBlitz3.ab3@19814>   Dc.l $E8D4A568
0002F9AC <AmiBlitz3.ab3@19815>   Dc.l $9184E76C
0002F9B0 <AmiBlitz3.ab3@19816>   Dc.l $B5E6A96F
0002F9B4 <AmiBlitz3.ab3@19817>   Dc.l $E35F2972
0002F9B8 <AmiBlitz3.ab3@19818>   Dc.l $8E1BCA76
0002F9BC <AmiBlitz3.ab3@19819>   Dc.l $B1A2BD79
0002F9C0 <AmiBlitz3.ab3@19820>   Dc.l $DE0B6C7C
0002F9C2 <AmiBlitz3.ab3@19824>   MOVEQ.l #$01,D5
0002F9C4 <AmiBlitz3.ab3@19827>   LSL.l #1,D5
0002F9C6 <AmiBlitz3.ab3@19828>   MOVE.l D5,D1
0002F9C8 <AmiBlitz3.ab3@19829>   LSL.l #2,D5
0002F9CA <AmiBlitz3.ab3@19830>   ADD.l D1,D5                                              ;divisor for frac convert!
0002F9CC <AmiBlitz3.ab3@19832>   LSL.l #1,D3
0002F9D0 <AmiBlitz3.ab3@19833>    BCS.w overerr
0002F9D2 <AmiBlitz3.ab3@19834>   MOVE.l D3,D1
0002F9D4 <AmiBlitz3.ab3@19835>   LSL.l #1,D3
0002F9D8 <AmiBlitz3.ab3@19836>    BCS.w overerr
0002F9DA <AmiBlitz3.ab3@19837>   LSL.l #1,D3
0002F9DE <AmiBlitz3.ab3@19838>    BCS.w overerr
0002F9E0 <AmiBlitz3.ab3@19839>   ADD.l D1,D3
0002F9E4 <AmiBlitz3.ab3@19840>   SUBI.w #$30,D0
0002F9E6 <AmiBlitz3.ab3@19841>   ADD.l D0,D3
0002FA12 <AmiBlitz3.ab3@19843>    !fget                                                   ;bsr.w get1bytemain
0002FA16 <AmiBlitz3.ab3@19844>    CMP.b #1,d0
0002FA1A <AmiBlitz3.ab3@19845>    BNE 'cm1
0002FA1C <AmiBlitz3.ab3@19846>    SUBQ.l #1,a5
0002FA20 <AmiBlitz3.ab3@19847>    BSR get1bytemain                                        ;??wy not !fget
0002FA24 <AmiBlitz3.ab3@19850>   CMP.b #$7e,d0
0002FA28 <AmiBlitz3.ab3@19851>    BNE 'cm2
0002FA2A <AmiBlitz3.ab3@19852>    SUBQ.l #1,a5
0002FA2E <AmiBlitz3.ab3@19853>    BSR get1bytemain
0002FA30 <AmiBlitz3.ab3@19856>   TST.b d0
0002FA34 <AmiBlitz3.ab3@19857>    BPL 'l10
0002FA36 <AmiBlitz3.ab3@19858>    LSL.w #8,d0
0002FA38 <AmiBlitz3.ab3@19859>    MOVE.b (a5)+,d0
0002FA3E <AmiBlitz3.ab3@19860>    MOVE.w d0,lastchar
0002FA50 <AmiBlitz3.ab3@19863>   !compare2                                                ;bsr.w tstnum ;cmake bug
0002FA54 <AmiBlitz3.ab3@19865>    BEQ.w 'loop
0002FA56 <AmiBlitz3.ab3@19866> RTS
0002FA58 <AmiBlitz3.ab3@19869> dfetch:  Ds.w 1                                            ;fetching data?
0002FA5C <AmiBlitz3.ab3@19873>   MOVE.w dfetch(PC),D1
0002FA60 <AmiBlitz3.ab3@19874>    BEQ.w 'doit
0002FA66 <AmiBlitz3.ab3@19875>   CLR.w dfetch
0002FA68 <AmiBlitz3.ab3@19876>  RTS
0002FA6E <AmiBlitz3.ab3@19880>   MOVE.b d2,isconstantvalue
0002FA74 <AmiBlitz3.ab3@19881>   MOVE.l d0,lastconstantvalue
0002FA7A <AmiBlitz3.ab3@19882>   MOVE.w d2,imm_size
0002FA84 <AmiBlitz3.ab3@19883>   MOVE.w regnum,imm_reg
0002FA8E <AmiBlitz3.ab3@19884>   MOVE.l destpointer,imm_addr                           ; long
0002FA92 <AmiBlitz3.ab3@19886>   CMP.w #$3,D2          ; order of cmp/beq in org soure is different
0002FA96 <AmiBlitz3.ab3@19887>   BEQ.w 'long
0002FA9A <AmiBlitz3.ab3@19888>   CMP.w #$5,D2                                          ;float
0002FA9E <AmiBlitz3.ab3@19889>   BEQ.w 'long
0002FAA2 <AmiBlitz3.ab3@19890>   CMP.w #$1,D2
0002FAA6 <AmiBlitz3.ab3@19891>   BEQ.w 'word
0002FAAA <AmiBlitz3.ab3@19892>   CMP.w #$2,D2
0002FAAE <AmiBlitz3.ab3@19893>   BEQ.w 'word
0002FAB2 <AmiBlitz3.ab3@19894>   CMP.w #$4,D2
0002FAB6 <AmiBlitz3.ab3@19895>   BEQ.w 'long
0002FABA <AmiBlitz3.ab3@19896>  BRA.w mismatcherr
0002FAC0 <AmiBlitz3.ab3@19899>   MOVE.w regnum,D1
0002FAC2 <AmiBlitz3.ab3@19900>   LSL.w #8,D1
0002FAC4 <AmiBlitz3.ab3@19901>   LSL.w #1,D1
0002FAC8 <AmiBlitz3.ab3@19902>   ORI.w #$303C,D1
0002FACC <AmiBlitz3.ab3@19903>    BSR.w writeword
0002FACE <AmiBlitz3.ab3@19904>   MOVE.w D0,D1
0002FAD2 <AmiBlitz3.ab3@19905>    BSR.w writeword
0002FAD6 <AmiBlitz3.ab3@19906>  BRA.w reget
0002FAD8 <AmiBlitz3.ab3@19910>   MOVEQ #0,d1
0002FADE <AmiBlitz3.ab3@19912>   MOVE.w regnum,D1
0002FAE4 <AmiBlitz3.ab3@19914>   TST.b fpu
0002FAE8 <AmiBlitz3.ab3@19915>   BEQ 'f1
0002FAEC <AmiBlitz3.ab3@19916>   CMP.w #5,d2
0002FAF0 <AmiBlitz3.ab3@19917>   BEQ 'l10
0002FAF4 <AmiBlitz3.ab3@19918>  BRA 'f2
0002FAFA <AmiBlitz3.ab3@19921>   TST.b iee
0002FAFE <AmiBlitz3.ab3@19922>   BNE 'l10
0002FB00 <AmiBlitz3.ab3@19926>   LSL.w #8,D1
0002FB02 <AmiBlitz3.ab3@19927>   LSL.w #1,D1
0002FB06 <AmiBlitz3.ab3@19928>   ORI.w #$203C,D1
0002FB0A <AmiBlitz3.ab3@19929>    BSR.w writeword
0002FB0C <AmiBlitz3.ab3@19930>   MOVE.l D0,D1
0002FB10 <AmiBlitz3.ab3@19931>    BSR.w writelong
0002FB14 <AmiBlitz3.ab3@19932>  BRA.w reget
0002FB16 <AmiBlitz3.ab3@19936>   MOVEQ #5,d2
0002FB18 <AmiBlitz3.ab3@19937>   ASL.l #7,d1
0002FB1A <AmiBlitz3.ab3@19938>   SUBQ.l #8,a7
0002FB20 <AmiBlitz3.ab3@19943>       OR.l #$f23c4400,d1                                   ;fmove.s
0002FB26 <AmiBlitz3.ab3@19944>        fmove.s fp0,0(a7)
0002FB2A <AmiBlitz3.ab3@19946>   BSR writelong
0002FB2C <AmiBlitz3.ab3@19947>   MOVE.l (a7)+,d1
0002FB30 <AmiBlitz3.ab3@19948>   BSR writelong
0002FB32 <AmiBlitz3.ab3@19949>   MOVE.l (a7)+,d1
0002FB36 <AmiBlitz3.ab3@19953> BRA.w reget
0002FB38 <AmiBlitz3.ab3@19960>  MOVE.l D3,D0
0002FB3A <AmiBlitz3.ab3@19961>   TST.w D6
0002FB3E <AmiBlitz3.ab3@19962>    BEQ.w 'skip            ;already integer
0002FB44 <AmiBlitz3.ab3@19963>   MOVEA.l _mathffpbase,A6
0002FB48 <AmiBlitz3.ab3@19964>    JSR -$1E(A6)
0002FB4C <AmiBlitz3.ab3@19965>    BVC.w 'skip
0002FB4E <AmiBlitz3.ab3@19966>   ADDQ.w #4,A7
0002FB52 <AmiBlitz3.ab3@19967>  BRA.w numdofloat
0002FB54 <AmiBlitz3.ab3@19970> RTS
0002FB56 <AmiBlitz3.ab3@19974>   MOVEQ.l #$00,D6          ;no frac
0002FB5A <AmiBlitz3.ab3@19976>    fmove.l d3,fp0
0002FB5E <AmiBlitz3.ab3@19980>   BSR.w consttype2
0002FB62 <AmiBlitz3.ab3@19981> BRA.w fetchnum3
0002FB64 <AmiBlitz3.ab3@19989>   MOVE.w D2,-(A7)                       ;
0002FB68 <AmiBlitz3.ab3@19990>    BSR.w evalconst                      ;  "
0002FB6A <AmiBlitz3.ab3@19991>   MOVE.w (A7)+,D2
0002FB6C <AmiBlitz3.ab3@19994>   TST.w D2
0002FB70 <AmiBlitz3.ab3@19995>    BNE.w 'something
0002FB72 <AmiBlitz3.ab3@19999>   TST.w D6
0002FB76 <AmiBlitz3.ab3@20000>    BEQ.w 'nofrac
0002FB78 <AmiBlitz3.ab3@20001>   MOVEQ.l #$04,D2
0002FB7C <AmiBlitz3.ab3@20002>  BRA.w 'quick2
0002FB7E <AmiBlitz3.ab3@20005>   MOVEQ.l #$02,D2
0002FB82 <AmiBlitz3.ab3@20006>  BRA.w 'byte
0002FB86 <AmiBlitz3.ab3@20009>   CMP.w #$1,D2
0002FB8A <AmiBlitz3.ab3@20010>    BEQ.w 'byte
0002FB8E <AmiBlitz3.ab3@20011>   CMP.w #$2,D2
0002FB92 <AmiBlitz3.ab3@20012>    BEQ.w 'word
0002FB96 <AmiBlitz3.ab3@20013>   CMP.w #$3,D2
0002FB9A <AmiBlitz3.ab3@20014>    BEQ.w 'long
0002FB9E <AmiBlitz3.ab3@20015>   CMP.w #$4,D2
0002FBA2 <AmiBlitz3.ab3@20016>    BEQ.w 'quick
0002FBA6 <AmiBlitz3.ab3@20017>   CMP.w #$5,D2
0002FBAA <AmiBlitz3.ab3@20018>    BEQ.w 'float
0002FBAE <AmiBlitz3.ab3@20019>  BRA.w mismatcherr
0002FBB2 <AmiBlitz3.ab3@20022>   BSR.w makeint                                          ;bugfix if a.b=$90 bug fix
0002FBB8 <AmiBlitz3.ab3@20023>   CMP.l #$7f,D0             ;127
0002FBBC <AmiBlitz3.ab3@20024>    BGT.w 'over1
0002FBC2 <AmiBlitz3.ab3@20025>   CMP.l #$FFFFFF80,D0       ;-128
0002FBC6 <AmiBlitz3.ab3@20026>    BGE.w 'dobword
0002FBC8 <AmiBlitz3.ab3@20029>   MOVEQ.l #$02,D2                                          ;was 2 before
0002FBCE <AmiBlitz3.ab3@20030>   CMP.l #$7fff,D0           ;32767
0002FBD2 <AmiBlitz3.ab3@20031>    BGT.w 'byte2
0002FBD8 <AmiBlitz3.ab3@20032>   CMP.l #$FFFF8000,D0       ;32768
0002FBDC <AmiBlitz3.ab3@20033>    BGE.w 'dobword
0002FBDE <AmiBlitz3.ab3@20036>   MOVEQ.l #$03,D2
0002FBE2 <AmiBlitz3.ab3@20037>  BRA.w 'dobword
0002FBE4 <AmiBlitz3.ab3@20064>   TST.w D6
0002FBE8 <AmiBlitz3.ab3@20065>    BNE.w 'quick2
0002FBEC <AmiBlitz3.ab3@20066>    BSR.w makeint
0002FBF0 <AmiBlitz3.ab3@20067>  BRA.w 'over1
0002FBF4 <AmiBlitz3.ab3@20070>   BSR.w makeint
0002FBF6 <AmiBlitz3.ab3@20071>   TST.w D6
0002FBFA <AmiBlitz3.ab3@20072>   BEQ.w 'qint
0002FC00 <AmiBlitz3.ab3@20075>   CMP.l #MaxWordSgnd,D0   ;32767
0002FC04 <AmiBlitz3.ab3@20076>    BGT.w numdofloat
0002FC0A <AmiBlitz3.ab3@20077>   CMP.l #$FFFF8000,D0     ;-32768
0002FC0E <AmiBlitz3.ab3@20078>    BLT.w numdofloat
0002FC10 <AmiBlitz3.ab3@20080>   MOVE.w D0,-(A7)         ;save whole part
0002FC14 <AmiBlitz3.ab3@20081>    JSR -$24(A6)           ;back to ffp
0002FC16 <AmiBlitz3.ab3@20082>   MOVE.l D0,D1
0002FC18 <AmiBlitz3.ab3@20083>   MOVE.l D3,D0
0002FC1C <AmiBlitz3.ab3@20084>    JSR -$48(A6)           ;subtract - d0=fraction!
0002FC22 <AmiBlitz3.ab3@20085>   MOVE.l #$80000051,D1    ;65536
0002FC26 <AmiBlitz3.ab3@20086>    JSR -$4E(A6)           ;*65536
0002FC2A <AmiBlitz3.ab3@20087>    JSR -$1E(A6)           ;back to int
0002FC2E <AmiBlitz3.ab3@20089>    BEQ.w 'knob            ;numdofloat
0002FC34 <AmiBlitz3.ab3@20090>   CMP.l #$10000,D0        ;65536
0002FC38 <AmiBlitz3.ab3@20091>    BCC.w 'knob            ;numdofloat
0002FC3A <AmiBlitz3.ab3@20092>   MOVE.w D0,D1
0002FC3C <AmiBlitz3.ab3@20093>   MOVE.w (A7)+,D0
0002FC3E <AmiBlitz3.ab3@20094>   SWAP D0
0002FC40 <AmiBlitz3.ab3@20095>   MOVE.w D1,D0
0002FC44 <AmiBlitz3.ab3@20096>  BRA.w 'dolong
0002FC46 <AmiBlitz3.ab3@20099>   ADDQ.w #2,A7
0002FC4A <AmiBlitz3.ab3@20100>  BRA.w numdofloat
0002FC50 <AmiBlitz3.ab3@20103>   CMP.l #MaxWordSgnd,D0   ;#32767
0002FC54 <AmiBlitz3.ab3@20104>    BGT.w 'byte2
0002FC5A <AmiBlitz3.ab3@20105>   CMP.l #$FFFF8000,D0     ;#32768
0002FC5E <AmiBlitz3.ab3@20106>    BLT.w 'byte2
0002FC60 <AmiBlitz3.ab3@20107>   SWAP D0
0002FC64 <AmiBlitz3.ab3@20108>  BRA.w 'dolong
0002FC66 <AmiBlitz3.ab3@20111>   TST.w D6
0002FC6A <AmiBlitz3.ab3@20112>   BNE.w numdofloat
0002FC6C <AmiBlitz3.ab3@20113>   MOVE.l D3,D0
0002FC70 <AmiBlitz3.ab3@20114>  BRA.w 'dolong
0002FC72 <AmiBlitz3.ab3@20117>   TST.w D6
0002FC76 <AmiBlitz3.ab3@20118>   BNE.w numdofloat
0002FC78 <AmiBlitz3.ab3@20119>   MOVE.l D3,D0
0002FC7E <AmiBlitz3.ab3@20120>   MOVEA.l _mathffpbase,A6
0002FC82 <AmiBlitz3.ab3@20121>   JSR -$24(A6)           ;int to float
0002FC84 <AmiBlitz3.ab3@20122>   MOVE.l D0,D3
0002FC88 <AmiBlitz3.ab3@20123>  BRA.w numdofloat
0002FC8A <AmiBlitz3.ab3@20127> RTS
0002FC8C <AmiBlitz3.ab3@20131>   MOVEQ.l #$05,D2
0002FC8E <AmiBlitz3.ab3@20132>   MOVE.l D3,D0
0002FC90 <AmiBlitz3.ab3@20133> RTS
0002FC94 <AmiBlitz3.ab3@20137>             Ds.l 1                                         ;??Looks like unused data??
0002FC98 <AmiBlitz3.ab3@20138> pushpc:     Ds.l 1
0002FC9C <AmiBlitz3.ab3@20139> pushoff:    Ds.l 1
0002FCA0 <AmiBlitz3.ab3@20140> pushdooff:  Ds.l 1
0002FCA2 <AmiBlitz3.ab3@20141> pushclen:   Ds.w 1
0002FCA6 <AmiBlitz3.ab3@20142> pushat:     Ds.l 1
0002FCB0 <AmiBlitz3.ab3@20148>   MOVE.l destpointer,pushpc
0002FCBA <AmiBlitz3.ab3@20149>   MOVE.l hunkoffsetbase,pushoff
0002FCBC <AmiBlitz3.ab3@20150>  RTS
0002FCC0 <AmiBlitz3.ab3@20156>   MOVEM.l D0-D1/A0-A1,-(A7)
0002FCC6 <AmiBlitz3.ab3@20158>   MOVE.l destpointer,D0
0002FCCA <AmiBlitz3.ab3@20159>   MOVE.l pushpc(PC),D1
0002FCD0 <AmiBlitz3.ab3@20160>   MOVE.l D1,destpointer    ;New PC
0002FCD2 <AmiBlitz3.ab3@20161>   SUB.l D1,D0              ;len
0002FCD8 <AmiBlitz3.ab3@20162>   MOVE.w D0,pushclen
0002FCDC <AmiBlitz3.ab3@20163>    BEQ.w 'skip
0002FCE2 <AmiBlitz3.ab3@20164>   MOVE.w dontwrite_nomemleft,D1
0002FCE6 <AmiBlitz3.ab3@20165>    BNE.w 'skip
0002FCEE <AmiBlitz3.ab3@20168>    CMP.w #1000,pushclen
0002FCF2 <AmiBlitz3.ab3@20169>    BGE conmemerr
0002FCF8 <AmiBlitz3.ab3@20170>    MOVE.l pushat,d0
0002FCFC <AmiBlitz3.ab3@20171>    BNE 'nomem
0002FD02 <AmiBlitz3.ab3@20172>    MOVE.l #1024,d0
0002FD04 <AmiBlitz3.ab3@20174>   MOVEQ.l #$01,D1
0002FD0A <AmiBlitz3.ab3@20175>   MOVEA.l _execbase,A6
0002FD10 <AmiBlitz3.ab3@20177>   MOVE.l mempool,a0
0002FD14 <AmiBlitz3.ab3@20178>   JSR _AllocPooled(a6)
0002FD1A <AmiBlitz3.ab3@20181>   MOVE.l D0,pushat
0002FD1C <AmiBlitz3.ab3@20186>   MOVEA.l D0,A0          ;destination
0002FD22 <AmiBlitz3.ab3@20187>   MOVEA.l pushpc,A1      ;source
0002FD28 <AmiBlitz3.ab3@20188>   MOVE.l A1,destpointer
0002FD2E <AmiBlitz3.ab3@20189>   MOVE.w pushclen,D0
0002FD30 <AmiBlitz3.ab3@20190>   LSR.w #1,D0
0002FD32 <AmiBlitz3.ab3@20191>   SUBQ.w #1,D0           ;to word dbf
0002FD34 <AmiBlitz3.ab3@20194>     MOVE.w (A1)+,(A0)+
0002FD38 <AmiBlitz3.ab3@20195>   DBF D0,'loop
0002FD42 <AmiBlitz3.ab3@20197>    MOVE.l hunkoffsetbase,pushdooff
0002FD46 <AmiBlitz3.ab3@20200>   MOVEM.l (A7)+,D0-D1/A0-A1
0002FD48 <AmiBlitz3.ab3@20201> RTS
0002FD4C <AmiBlitz3.ab3@20207>   MOVEM.l D0-D1/A0-A1,-(A7)
0002FD4E <AmiBlitz3.ab3@20208>   MOVEQ.l #$00,D0
0002FD54 <AmiBlitz3.ab3@20209>   MOVE.w pushclen,D0
0002FD58 <AmiBlitz3.ab3@20210>    BEQ.w 'skip
0002FD5E <AmiBlitz3.ab3@20211>   MOVE.l destpointer,D1     ;pc before put
0002FD64 <AmiBlitz3.ab3@20212>   ADD.l D0,destpointer
0002FD6A <AmiBlitz3.ab3@20213>   TST.w dontwrite_nomemleft
0002FD6E <AmiBlitz3.ab3@20214>    BNE.w 'skip
0002FD70 <AmiBlitz3.ab3@20216>   LSR.w #1,D0
0002FD72 <AmiBlitz3.ab3@20217>   SUBQ.w #1,D0
0002FD74 <AmiBlitz3.ab3@20219>   MOVEA.l D1,A1
0002FD7A <AmiBlitz3.ab3@20220>   MOVEA.l pushat,A0
0002FD80 <AmiBlitz3.ab3@20223>     CMPA.l destbufferend,A1
0002FD84 <AmiBlitz3.ab3@20224>     BCS.w 'ok
0002FD8C <AmiBlitz3.ab3@20226>     MOVE.w #$FFFF,dontwrite_nomemleft    ; was -1
0002FD90 <AmiBlitz3.ab3@20227>   BRA.w 'skip
0002FD92 <AmiBlitz3.ab3@20230>      MOVE.w (A0)+,(A1)+                                    ;copylibcode
0002FD96 <AmiBlitz3.ab3@20231>   DBF D0,'loop
0002FD9C <AmiBlitz3.ab3@20236>   SUB.l pushpc,D1
0002FDA0 <AmiBlitz3.ab3@20237>   BEQ.w 'skip2
0002FDA6 <AmiBlitz3.ab3@20238>   MOVEA.l pushdooff,A0
0002FDAC <AmiBlitz3.ab3@20241>   CMPA.l pushoff,A0
0002FDB0 <AmiBlitz3.ab3@20242>   BEQ.w 'done
0002FDB4 <AmiBlitz3.ab3@20243>   MOVEA.l $4(A0),A1          ;address in prog.
0002FDBA <AmiBlitz3.ab3@20244>   ADDA.l destbufferstart,A1
0002FDC0 <AmiBlitz3.ab3@20245>   CMPA.l destbufferend,A1
0002FDC4 <AmiBlitz3.ab3@20246>   BCC.w 'next                ;leave offs >= lib
0002FDC8 <AmiBlitz3.ab3@20247>   ADD.l D1,$4(A0)
0002FDCA <AmiBlitz3.ab3@20250>   MOVEA.l (A0),A0
0002FDCE <AmiBlitz3.ab3@20251>  BRA.w 'loop2
0002FDD4 <AmiBlitz3.ab3@20255>   MOVEA.l pushat,A1
0002FDD6 <AmiBlitz3.ab3@20256>   MOVEQ.l #$00,D0
0002FDDC <AmiBlitz3.ab3@20257>   MOVE.w pushclen,D0
0002FDE2 <AmiBlitz3.ab3@20258>   MOVEA.l _execbase,A6
0002FDE8 <AmiBlitz3.ab3@20259>   MOVE.l mempool,a0
0002FDEC <AmiBlitz3.ab3@20263>   MOVEM.l (A7)+,D0-D1/A0-A1
0002FDEE <AmiBlitz3.ab3@20264> RTS
0002FDF0 <AmiBlitz3.ab3@20270>   MOVE.l D1,-(A7)                                          ;array mul
0002FDF2 <AmiBlitz3.ab3@20271>   MOVEQ.l #$00,D2
0002FDF4 <AmiBlitz3.ab3@20272>   MOVEQ.l #$0F,D3
0002FDF6 <AmiBlitz3.ab3@20275>     LSL.w #1,D1
0002FDFA <AmiBlitz3.ab3@20276>     BCC.w 'shskip
0002FDFC <AmiBlitz3.ab3@20277>     ADDQ.w #1,D2
0002FDFE <AmiBlitz3.ab3@20278>     MOVE.w D3,D4
0002FE02 <AmiBlitz3.ab3@20281>   DBF D3,'shloop
0002FE04 <AmiBlitz3.ab3@20283>   SUBQ.w #1,D2
0002FE08 <AmiBlitz3.ab3@20284>    BNE.w 'domul
0002FE0A <AmiBlitz3.ab3@20285>   ADDQ.w #4,A7           ; was 2
0002FE0C <AmiBlitz3.ab3@20286>   MOVE.w D4,D1
0002FE10 <AmiBlitz3.ab3@20287>    BEQ.w 'done
0002FE14 <AmiBlitz3.ab3@20288>   CMP.w #$8,D1
0002FE18 <AmiBlitz3.ab3@20289>    BCS.w 'once
0002FE1C <AmiBlitz3.ab3@20290>   SUBI.w #$8,D1
0002FE20 <AmiBlitz3.ab3@20291>    BSR.w 'once
0002FE22 <AmiBlitz3.ab3@20292>   MOVEQ.l #$00,D1
0002FE24 <AmiBlitz3.ab3@20295>   LSL.w #8,D1
0002FE26 <AmiBlitz3.ab3@20296>   LSL.w #1,D1
0002FE2A <AmiBlitz3.ab3@20297>   ORI.w #$E188,D1
0002FE30 <AmiBlitz3.ab3@20298>   OR.w regnum,D1
0002FE34 <AmiBlitz3.ab3@20299>  BRA.w writeword
0002FE36 <AmiBlitz3.ab3@20302>  RTS
0002FE38 <AmiBlitz3.ab3@20306>   MOVEQ #0,d1
0002FE3E <AmiBlitz3.ab3@20307>   MOVE.w regnum,D1
0002FE40 <AmiBlitz3.ab3@20309>   LSL.l #8,D1
0002FE42 <AmiBlitz3.ab3@20312>   LSL.l #4,d1
0002FE48 <AmiBlitz3.ab3@20316>   OR.l #$4c3c0000,d1
0002FE4E <AmiBlitz3.ab3@20317>   OR.w regnum,d1
0002FE52 <AmiBlitz3.ab3@20318>   BSR.w writelong          ; was writeword
0002FE54 <AmiBlitz3.ab3@20320>   MOVE.l (A7)+,D1
0002FE58 <AmiBlitz3.ab3@20323> BRA writelong
0002FE5E <AmiBlitz3.ab3@20330>   MOVE.l destpointer,-(A7)
0002FE60 <AmiBlitz3.ab3@20331>   MOVEQ.l #-$01,D7
0002FE64 <AmiBlitz3.ab3@20334>     BSR.w findhilib
0002FE68 <AmiBlitz3.ab3@20335>      BEQ.w 'done
0002FE6C <AmiBlitz3.ab3@20336>     TST.w $C(A2)
0002FE70 <AmiBlitz3.ab3@20337>      BPL.w 'loop
0002FE74 <AmiBlitz3.ab3@20338>     MOVE.l $16(A2),D1
0002FE78 <AmiBlitz3.ab3@20339>     BEQ.w 'loop
0002FE7C <AmiBlitz3.ab3@20341>     MOVE.w $4(A2),D1                                       ; check state in D1 and do some things
0002FE80 <AmiBlitz3.ab3@20342>     CMP.w #-$2,D1          ; was #allocvars
0002FE84 <AmiBlitz3.ab3@20343>      BNE.w 'notvar
0002FE88 <AmiBlitz3.ab3@20344>     BSR.w makevsize
0002FE8C <AmiBlitz3.ab3@20345>  BRA.w 'more
0002FE90 <AmiBlitz3.ab3@20348>     CMP.w #-$5C4,D1       ; was #debuglib
0002FE94 <AmiBlitz3.ab3@20349>      BNE.w 'notdebuglib
0002FE98 <AmiBlitz3.ab3@20353>     MOVE.w #$7000,D1      ;moveq #0,d0
0002FEA0 <AmiBlitz3.ab3@20354>     BTST #$7,autorun
0002FEA2 <AmiBlitz3.ab3@20355>     SNE D1
0002FEA6 <AmiBlitz3.ab3@20356>     BSR.w writeword
0002FEAA <AmiBlitz3.ab3@20357>  BRA.w 'more
0002FEAE <AmiBlitz3.ab3@20360>     CMP.w #-$12D,D1       ; was 65235
0002FEB2 <AmiBlitz3.ab3@20361>      BNE.w 'notstring1
0002FEB6 <AmiBlitz3.ab3@20362>     BSR.w makessize
0002FEBA <AmiBlitz3.ab3@20363>  BRA.w 'more
0002FEBE <AmiBlitz3.ab3@20366>     CMP.w #-$1F5,D1       ; was 65035
0002FEC2 <AmiBlitz3.ab3@20367>      BNE.w 'notexit
0002FEC6 <AmiBlitz3.ab3@20369>     MOVE.w #$203C,D1
0002FECA <AmiBlitz3.ab3@20370>     BSR.w writeword
0002FECE <AmiBlitz3.ab3@20371>     BSR.w addoff
0002FED4 <AmiBlitz3.ab3@20372>     MOVE.l endop,D1
0002FED8 <AmiBlitz3.ab3@20373>     BSR.w writelong
0002FEDC <AmiBlitz3.ab3@20374>  BRA.w 'more
0002FEE0 <AmiBlitz3.ab3@20377>     CMP.w #-$3E9,D1       ; was 64535
0002FEE4 <AmiBlitz3.ab3@20378>      BNE.w 'notdatalib
0002FEE8 <AmiBlitz3.ab3@20379>     MOVE.w #$203C,D1
0002FEEC <AmiBlitz3.ab3@20380>     BSR.w writeword
0002FEF0 <AmiBlitz3.ab3@20381>     BSR.w addoff
0002FEF6 <AmiBlitz3.ab3@20382>     MOVE.l data2at,D1
0002FEFA <AmiBlitz3.ab3@20383>     BSR.w writelong
0002FEFE <AmiBlitz3.ab3@20384>  BRA.w 'more
0002FF02 <AmiBlitz3.ab3@20387>     CMP.w #$1,D1          ; was #dhandlerlib
0002FF06 <AmiBlitz3.ab3@20388>      BNE.w 'notdhandler
0002FF0A <AmiBlitz3.ab3@20389>     MOVE.w #$203C,D1
0002FF0E <AmiBlitz3.ab3@20390>     BSR.w writeword
0002FF14 <AmiBlitz3.ab3@20391>     MOVE.l ptr_seg_debugger,D1
0002FF18 <AmiBlitz3.ab3@20392>     BSR.w writelong
0002FF1C <AmiBlitz3.ab3@20396>     MOVE.l $16(A2),D1
0002FF24 <AmiBlitz3.ab3@20397>     MOVE.w #$FFFF,lasta6     ; was -1
0002FF28 <AmiBlitz3.ab3@20398>     BSR.w Amakelibsub
0002FF2E <AmiBlitz3.ab3@20399>     CMPI.w #$FFFE,$4(A2)     ; was #allocvars
0002FF32 <AmiBlitz3.ab3@20400>      BNE.w 'notvar2
0002FF38 <AmiBlitz3.ab3@20402>     MOVE.l intdata1,D1
0002FF3C <AmiBlitz3.ab3@20403>      BEQ.w 'notvar2
0002FF42 <AmiBlitz3.ab3@20404>     MOVE.w putidata1,D1
0002FF46 <AmiBlitz3.ab3@20405>     BSR.w writeword
0002FF4A <AmiBlitz3.ab3@20406>     BSR.w addoff
0002FF50 <AmiBlitz3.ab3@20407>     MOVE.l intdata1,D1
0002FF54 <AmiBlitz3.ab3@20408>     BSR.w writelong
0002FF58 <AmiBlitz3.ab3@20411>     MOVE.w #$2B40,D1
0002FF5C <AmiBlitz3.ab3@20412>     TST.w $1A(A2)
0002FF60 <AmiBlitz3.ab3@20413>      BEQ.w 'loop
0002FF64 <AmiBlitz3.ab3@20414>      BPL.w 'long
0002FF68 <AmiBlitz3.ab3@20415>     MOVE.w #$3B40,D1
0002FF6C <AmiBlitz3.ab3@20418>     BSR.w writeword
0002FF70 <AmiBlitz3.ab3@20419>     MOVE.w $A(A2),D1
0002FF74 <AmiBlitz3.ab3@20420>      BSR.w writeword
0002FF7A <AmiBlitz3.ab3@20421>     CMPI.w #$FFFA,$4(A2)   ; was #65530
0002FF7E <AmiBlitz3.ab3@20422>      BNE.w 'loop
0002FF80 <AmiBlitz3.ab3@20424>     MOVE.w D7,-(A7)
0002FF86 <AmiBlitz3.ab3@20425>     MOVE.w numstatic,D4
0002FF8A <AmiBlitz3.ab3@20426>      BEQ.w 'nostats
0002FF90 <AmiBlitz3.ab3@20427>     MOVE.l staticdata,D3
0002FF96 <AmiBlitz3.ab3@20428>      JSR datastart
0002FF9A <AmiBlitz3.ab3@20429>     MOVE.w #$C500,D1       ; was #alstat
0002FF9E <AmiBlitz3.ab3@20430>      BSR.w tokejsr2
0002FFA4 <AmiBlitz3.ab3@20433>     MOVE.w maxsused,D4
0002FFA8 <AmiBlitz3.ab3@20434>      BEQ.w 'nomaxs
0002FFAE <AmiBlitz3.ab3@20435>     MOVE.l maxsat,D3
0002FFB4 <AmiBlitz3.ab3@20436>      JSR datastart
0002FFB8 <AmiBlitz3.ab3@20437>     MOVE.w #$CF00,D1      ; was #setmaxs
0002FFBC <AmiBlitz3.ab3@20438>      BSR.w tokejsr2
0002FFBE <AmiBlitz3.ab3@20441>     MOVE.w (A7)+,D7
0002FFC2 <AmiBlitz3.ab3@20443>  BRA.w 'loop
0002FFC8 <AmiBlitz3.ab3@20449>   MOVE.l destpointer,D1
0002FFCA <AmiBlitz3.ab3@20450>   CMP.l (A7),D1
0002FFCE <AmiBlitz3.ab3@20451>    BNE.w 'yi
0002FFD6 <AmiBlitz3.ab3@20452>   MOVE.w #$0008,noinits+2
0002FFDA <AmiBlitz3.ab3@20453>  BRA.w 'yi3
0002FFE0 <AmiBlitz3.ab3@20456>   CLR.w noinits+2
0002FFE6 <AmiBlitz3.ab3@20457>   MOVE.w dontwrite_nomemleft,D1
0002FFEA <AmiBlitz3.ab3@20458>    BNE.w 'yi2
0002FFF0 <AmiBlitz3.ab3@20460>   TST.l newinitaddr
0002FFF4 <AmiBlitz3.ab3@20461>    BEQ 'l10
0002FFFA <AmiBlitz3.ab3@20462>   MOVE.l newinitaddr,D2
00030000 <AmiBlitz3.ab3@20463>   SUB.l destbufferstart,D2
00030002 <AmiBlitz3.ab3@20464>   ADDQ.l #2,d2
00030008 <AmiBlitz3.ab3@20466>   MOVEA.l newinitaddr,A0                                   ;write newinitcode
0003000C <AmiBlitz3.ab3@20470>   MOVE.w #$4EB9,(A0)+
0003000E <AmiBlitz3.ab3@20471>   MOVE.l (A7),(A0)+
00030012 <AmiBlitz3.ab3@20474>  BRA 'l20
00030018 <AmiBlitz3.ab3@20477>   MOVEA.l destbufferstart,A0                               ;write initcode
0003001E <AmiBlitz3.ab3@20478>   TST.b saved0
00030022 <AmiBlitz3.ab3@20479>   BEQ 'l1
00030026 <AmiBlitz3.ab3@20480>   MOVE.w #$23c0,(a0)+
00030028 <AmiBlitz3.ab3@20481>   MOVE.l a0,a1
0003002A <AmiBlitz3.ab3@20482>   ADDQ.l #6,a1
0003002C <AmiBlitz3.ab3@20483>   MOVE.l a1,(a0)+
0003002E <AmiBlitz3.ab3@20485>   MOVEQ.l #$02,D2
00030032 <AmiBlitz3.ab3@20486>   BSR.w addhunkoffset
00030036 <AmiBlitz3.ab3@20488>   MOVE.w #$6004,(a0)+
0003003C <AmiBlitz3.ab3@20489>   MOVE.l #$4e714e71,(a0)+
00030040 <AmiBlitz3.ab3@20492>   MOVE.w #$4EB9,(A0)+
00030042 <AmiBlitz3.ab3@20493>   MOVE.l (A7),(A0)+
00030044 <AmiBlitz3.ab3@20494>   MOVEQ #2,d2
0003004A <AmiBlitz3.ab3@20495>   TST.b saved0
0003004E <AmiBlitz3.ab3@20496>   BEQ 'l20
00030050 <AmiBlitz3.ab3@20497>   MOVEQ.l #14,D2
00030054 <AmiBlitz3.ab3@20500>   BSR.w addhunkoffset
00030058 <AmiBlitz3.ab3@20501>   MOVE.w #$2039,(a0)+
0003005A <AmiBlitz3.ab3@20502>   MOVE.l a1,(a0)+
0003005C <AmiBlitz3.ab3@20503>   MOVEQ.l #20,d2
00030060 <AmiBlitz3.ab3@20506>   BSR.w addhunkoffset
00030064 <AmiBlitz3.ab3@20510>   MOVE.w #$4E75,D1
00030068 <AmiBlitz3.ab3@20511>   BSR.w writeword
0003006A <AmiBlitz3.ab3@20514>   ADDQ.w #4,A7
0003006C <AmiBlitz3.ab3@20515> RTS
00030070 <AmiBlitz3.ab3@20520>   Dc.b $22,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D1
00030076 <AmiBlitz3.ab3@20522>   Dc.b $23,$CD,$00,$00,$00,$00                             ;MOVE.L  A5,$00000000
0003007C <AmiBlitz3.ab3@20524>   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
00030082 <AmiBlitz3.ab3@20529>   MOVE.l stringbuffer,D1
00030086 <AmiBlitz3.ab3@20530> BRA.w makesize
00030088 <AmiBlitz3.ab3@20535>   MOVEQ.l #$00,D1
0003008E <AmiBlitz3.ab3@20536>   MOVE.w globalvarpointer,D1
00030092 <AmiBlitz3.ab3@20537>   SUBI.w #$8000,D1
00030096 <AmiBlitz3.ab3@20538>   BNE.w makesize
00030098 <AmiBlitz3.ab3@20539>     MOVEQ.l #$08,D1
0003009A <AmiBlitz3.ab3@20544>   MOVE.l D1,-(A7)
0003009E <AmiBlitz3.ab3@20545>   MOVE.w #$203C,D1
000300A2 <AmiBlitz3.ab3@20546>   BSR.w writeword
000300A4 <AmiBlitz3.ab3@20547>   MOVE.l (A7)+,D1
000300A8 <AmiBlitz3.ab3@20548> BRA.w writelong
000300AA <AmiBlitz3.ab3@20556>   MOVEQ.l #$00,D1
000300B0 <AmiBlitz3.ab3@20557>   MOVEA.l libpointer,A1
000300B4 <AmiBlitz3.ab3@20560>     CMPA.w #$0,A1
000300B8 <AmiBlitz3.ab3@20561>     BEQ.w 'done
000300BC <AmiBlitz3.ab3@20562>       CMP.w $4(A1),D7
000300C0 <AmiBlitz3.ab3@20563>       BLS.w 'next
000300C4 <AmiBlitz3.ab3@20564>         CMP.w $4(A1),D1
000300C8 <AmiBlitz3.ab3@20565>         BCC.w 'next
000300CC <AmiBlitz3.ab3@20566>           MOVE.w $4(A1),D1
000300CE <AmiBlitz3.ab3@20567>           MOVEA.l A1,A2
000300D0 <AmiBlitz3.ab3@20570>     MOVEA.l (A1),A1
000300D4 <AmiBlitz3.ab3@20571>  BRA.w 'loop
000300D6 <AmiBlitz3.ab3@20574>   MOVE.w D1,D7
000300D8 <AmiBlitz3.ab3@20575> RTS
000300DA <AmiBlitz3.ab3@20583>   MOVEQ.l #-$01,D1
000300E0 <AmiBlitz3.ab3@20584>   MOVEA.l libpointer,A1
000300E4 <AmiBlitz3.ab3@20587>     CMPA.w #$0,A1
000300E8 <AmiBlitz3.ab3@20588>      BEQ.w 'done
000300EC <AmiBlitz3.ab3@20589>     CMP.w $4(A1),D7
000300F0 <AmiBlitz3.ab3@20590>      BCC.w 'next
000300F4 <AmiBlitz3.ab3@20591>     CMP.w $4(A1),D1
000300F8 <AmiBlitz3.ab3@20592>      BLS.w 'next
000300FC <AmiBlitz3.ab3@20593>     MOVE.w $4(A1),D1
000300FE <AmiBlitz3.ab3@20594>     MOVEA.l A1,A2
00030100 <AmiBlitz3.ab3@20597>     MOVEA.l (A1),A1
00030104 <AmiBlitz3.ab3@20598> BRA.w 'loop
00030106 <AmiBlitz3.ab3@20601>   MOVE.w D1,D7
0003010A <AmiBlitz3.ab3@20602>   CMP.w #-$1,D1
0003010C <AmiBlitz3.ab3@20603> RTS
00030112 <AmiBlitz3.ab3@20611>   ADDQ.w #1,globalvarpointer
0003011A <AmiBlitz3.ab3@20612>   BCLR #$0,globalvarpointer+1
0003011C <AmiBlitz3.ab3@20613>   MOVEQ.l #$00,D7
00030120 <AmiBlitz3.ab3@20616>     BSR.w findlolib
00030124 <AmiBlitz3.ab3@20617>     BEQ.w 'azdone
00030128 <AmiBlitz3.ab3@20618>     TST.w $C(A2)
0003012C <AmiBlitz3.ab3@20619>     BPL.w 'loop
0003012E <AmiBlitz3.ab3@20622>     MOVEA.l A2,A1
00030132 <AmiBlitz3.ab3@20623>     ADDA.l $12(A1),A1
00030136 <AmiBlitz3.ab3@20624>     TST.w -$2(A1)
0003013A <AmiBlitz3.ab3@20625>     BEQ.w 'nomax
0003013E <AmiBlitz3.ab3@20629>     MOVE.l -$A(A1),D1
00030142 <AmiBlitz3.ab3@20630>     LEA $6(A2,D1.L),A3
00030144 <AmiBlitz3.ab3@20633>       TST.w (A3)+
00030148 <AmiBlitz3.ab3@20634>       BEQ.w 'plopf
0003014A <AmiBlitz3.ab3@20635>         ADDQ.w #2,A3
0003014E <AmiBlitz3.ab3@20636>  BRA.w 'plop
00030152 <AmiBlitz3.ab3@20639>     TST.l $4(A3)
00030156 <AmiBlitz3.ab3@20640>     BEQ.w 'nomax
0003015A <AmiBlitz3.ab3@20644>       MOVE.w freemax(PC),D1    ;move.w #x,-(a7)
0003015E <AmiBlitz3.ab3@20645>       BSR.w writeword
00030162 <AmiBlitz3.ab3@20646>       MOVE.w -$4(A1),D1
00030166 <AmiBlitz3.ab3@20647>       BSR.w writeword          ;x (max)
0003016C <AmiBlitz3.ab3@20648>       MOVE.l free,D1
00030170 <AmiBlitz3.ab3@20649>       MOVE.w -$6(A1),D1
00030174 <AmiBlitz3.ab3@20650>       BSR.w writelong          ;move.l x(a5),a3
0003017A <AmiBlitz3.ab3@20652>       MOVE.l destpointer,-(A7)
0003017C <AmiBlitz3.ab3@20653>       MOVEQ.l #$01,D1
00030180 <AmiBlitz3.ab3@20654>       MOVE.w -$2(A1),D2
00030182 <AmiBlitz3.ab3@20655>       LSL.w D2,D1
00030184 <AmiBlitz3.ab3@20656>       MOVE.w D1,-(A7)
00030188 <AmiBlitz3.ab3@20657>       MOVE.l -$A(A1),D1
0003018C <AmiBlitz3.ab3@20658>       BSR.w Amakelibsub
00030190 <AmiBlitz3.ab3@20659>       MOVE.w freemax3(PC),D1
00030194 <AmiBlitz3.ab3@20660>       BSR.w writeword          ;lea x(a3),a3
00030196 <AmiBlitz3.ab3@20661>       MOVE.w (A7)+,D1
0003019A <AmiBlitz3.ab3@20662>       BSR.w writeword
0003019E <AmiBlitz3.ab3@20663>       MOVE.l freemax2(PC),D1
000301A2 <AmiBlitz3.ab3@20664>       BSR.w writelong
000301A4 <AmiBlitz3.ab3@20665>       MOVE.l (A7)+,D1
000301AA <AmiBlitz3.ab3@20666>       SUB.l destpointer,D1
000301AE <AmiBlitz3.ab3@20667>       BSR.w writeword
000301B2 <AmiBlitz3.ab3@20668>       MOVE.w freemax4(PC),D1
000301B6 <AmiBlitz3.ab3@20669>       BSR.w writeword
000301BA <AmiBlitz3.ab3@20672>     MOVE.l $1C(A2),D1
000301BE <AmiBlitz3.ab3@20673>     BEQ.w 'loop
000301C2 <AmiBlitz3.ab3@20677>     MOVE.w $4(A2),D1
000301C6 <AmiBlitz3.ab3@20678>     CMP.w #-$2,D1              ; was #allocvars
000301CA <AmiBlitz3.ab3@20679>     BNE.w 'notvfin
000301CE <AmiBlitz3.ab3@20680>       BSR.w makevsize
000301D2 <AmiBlitz3.ab3@20681>  BRA.w 'more
000301D6 <AmiBlitz3.ab3@20684>     CMP.w #-$12D,D1            ; was #65235
000301DA <AmiBlitz3.ab3@20685>     BNE.w 'more
000301DE <AmiBlitz3.ab3@20686>       BSR.w makessize
000301E2 <AmiBlitz3.ab3@20687>  BRA.w 'more
000301E6 <AmiBlitz3.ab3@20691>     MOVE.l $1C(A2),D1
000301EE <AmiBlitz3.ab3@20692>     MOVE.w #$FFFF,lasta6       ; was -1
000301F2 <AmiBlitz3.ab3@20693>     BSR.w Amakelibsub
000301F6 <AmiBlitz3.ab3@20694>  BRA.w 'loop
000301F8 <AmiBlitz3.ab3@20697> RTS
000301FC <AmiBlitz3.ab3@20701> freemax:   Dc.b $3F,$3C,$00,$00                            ;MOVE.W  #$0000,-(A7)
000301FE <AmiBlitz3.ab3@20703> freemax2:  Dc.b $53,$57                                    ;SUBQ.W  #1,(A7)
00030202 <AmiBlitz3.ab3@20704>            Dc.b $66,$00,$FF,$FC                            ;BNE.W freemax2
00030204 <AmiBlitz3.ab3@20705> freemax4:  Dc.b $54,$4F                                    ;ADDQ.W  #2,A7
00030208 <AmiBlitz3.ab3@20706> freemax3:  Dc.b $47,$EB,$00,$00                            ;LEA $0000(A3),A3
0003020E <AmiBlitz3.ab3@20711>   TST.b debugmode
00030212 <AmiBlitz3.ab3@20712>    BEQ.b 'skip
00030218 <AmiBlitz3.ab3@20713>   TST.w debugversion
0003021C <AmiBlitz3.ab3@20714>    BNE.b 'skip
00030220 <AmiBlitz3.ab3@20715>   MOVE.w #$C308,D1
00030224 <AmiBlitz3.ab3@20716>  BRA.w Atokejsr
00030226 <AmiBlitz3.ab3@20719> RTS
0003022E <AmiBlitz3.ab3@20723>   MOVE.w #$FFFF,lasta6
00030232 <AmiBlitz3.ab3@20728>   MOVEM.l D0-d7/A0-a6,-(A7)
0003023A <AmiBlitz3.ab3@20729>   MOVE.b #1,nostringopt
00030240 <AmiBlitz3.ab3@20730>   JSR searchinstr
00030242 <AmiBlitz3.ab3@20731>   MOVE.l A3,D1
00030244 <AmiBlitz3.ab3@20732>   SUB.l A2,D1
00030248 <AmiBlitz3.ab3@20733>   BSR.w Amakelibsub
0003024C <AmiBlitz3.ab3@20734>   MOVEM.l (A7)+,d0-d7/a0-a6
0003024E <AmiBlitz3.ab3@20735> RTS
00030254 <AmiBlitz3.ab3@20742>   MOVE.l libisat,-(A7)                                   ;library write
0003025A <AmiBlitz3.ab3@20743>   MOVE.l A2,libisat
0003025C <AmiBlitz3.ab3@20745>   MOVEA.l A1,A2
0003025E <AmiBlitz3.ab3@20746>   MOVE.w (A2)+,D1
00030264 <AmiBlitz3.ab3@20747>   MOVE.l a2,lastinstructionaddr
00030268 <AmiBlitz3.ab3@20748>   ANDI.w #$FF,D1
0003026A <AmiBlitz3.ab3@20749>   ADDA.w D1,A2
0003026C <AmiBlitz3.ab3@20750>   EXG.l D0,A2
0003026E <AmiBlitz3.ab3@20751>   ADDQ.l #1,D0
00030272 <AmiBlitz3.ab3@20752>   BCLR #$0,D0
00030274 <AmiBlitz3.ab3@20753>   EXG.l D0,A2
00030278 <AmiBlitz3.ab3@20754> BRA.w makelsub2
0003027E <AmiBlitz3.ab3@20758>   MOVE.l libisat,-(A7)
00030284 <AmiBlitz3.ab3@20759>   MOVE.l A2,libisat
00030286 <AmiBlitz3.ab3@20760>   MOVEA.l A3,A2
0003028A <AmiBlitz3.ab3@20761> BRA.w makelsub2
0003028C <AmiBlitz3.ab3@20765>   MOVE.l a1,-(a7)
0003028E <AmiBlitz3.ab3@20768>   MOVE.l d0,a0
00030292 <AmiBlitz3.ab3@20769>   MOVE.l $a(a0),d0
00030294 <AmiBlitz3.ab3@20770>   MOVE.l d0,a1
0003029C <AmiBlitz3.ab3@20771>   CMP.l #8,4(a1)
000302A0 <AmiBlitz3.ab3@20772>   BLE 'norec
000302A2 <AmiBlitz3.ab3@20773>   MOVE.l a0,-(a7)
000302A8 <AmiBlitz3.ab3@20774>   MOVE.l typebase,-(a7)
000302AA <AmiBlitz3.ab3@20775>   MOVEQ #0,d0
000302AE <AmiBlitz3.ab3@20776>   MOVE.w 4(a0),d0
000302B4 <AmiBlitz3.ab3@20777>   ADD.l d0,typebase
000302B8 <AmiBlitz3.ab3@20778>   MOVE.l $4(a1),d0
000302BC <AmiBlitz3.ab3@20779>   BSR scantype
000302C2 <AmiBlitz3.ab3@20780>   MOVE.l (a7)+,typebase
000302C4 <AmiBlitz3.ab3@20781>   MOVE.l (a7)+,a0
000302CA <AmiBlitz3.ab3@20784>   CMP.l #newtype_string,d0
000302CE <AmiBlitz3.ab3@20785>   BNE 'nostring
000302D4 <AmiBlitz3.ab3@20786>   ADDQ #2,a2offset
000302DA <AmiBlitz3.ab3@20787>   MOVE.l #$3f3c0000,d1
000302DC <AmiBlitz3.ab3@20788>   MOVEQ #0,d0
000302E0 <AmiBlitz3.ab3@20789>   MOVE.w 4(a0),d0
000302E6 <AmiBlitz3.ab3@20790>   ADD.l typebase,d0
000302E8 <AmiBlitz3.ab3@20791>   MOVE.w d0,d1
000302EC <AmiBlitz3.ab3@20792>   BSR writelong
000302F2 <AmiBlitz3.ab3@20793>   TST.b debugmode
000302F6 <AmiBlitz3.ab3@20794>   BEQ 'l1a
000302F8 <AmiBlitz3.ab3@20795>   MOVE.l d1,-(a7)
000302FE <AmiBlitz3.ab3@20796>   MOVE.l #$c308,d1
00030304 <AmiBlitz3.ab3@20797>   JSR Atokejsr
00030306 <AmiBlitz3.ab3@20798>   MOVE.l (a7)+,d1
0003030A <AmiBlitz3.ab3@20801>   TST.w 8(a0)
0003030E <AmiBlitz3.ab3@20802>   BEQ 'nostring
00030312 <AmiBlitz3.ab3@20803>   MOVEM.l d2/d3,-(a7)
00030314 <AmiBlitz3.ab3@20804>   MOVE.l d1,d2
00030316 <AmiBlitz3.ab3@20805>   MOVEQ #0,d3
0003031A <AmiBlitz3.ab3@20806>   MOVE.w 8(a0),d3
0003031C <AmiBlitz3.ab3@20807>   SUBQ.l #1,d3
00030320 <AmiBlitz3.ab3@20808>   BEQ 'nostring2
00030322 <AmiBlitz3.ab3@20811>   ADDQ.l #4,d2
00030324 <AmiBlitz3.ab3@20812>   MOVE.l d2,d1
00030328 <AmiBlitz3.ab3@20813>   BSR writelong
0003032E <AmiBlitz3.ab3@20814>   TST.b debugmode
00030332 <AmiBlitz3.ab3@20815>   BEQ 'l1
00030338 <AmiBlitz3.ab3@20816>   MOVE.l #$c308,d1
0003033E <AmiBlitz3.ab3@20817>   JSR Atokejsr
00030344 <AmiBlitz3.ab3@20820>   ADDQ #2,a2offset
00030346 <AmiBlitz3.ab3@20821>   SUBQ.l #1,d3
0003034A <AmiBlitz3.ab3@20822>   BNE 'loop
0003034E <AmiBlitz3.ab3@20825>   MOVEM.l (a7)+,d2/d3
00030350 <AmiBlitz3.ab3@20828>   MOVE.l (a0),d0
00030354 <AmiBlitz3.ab3@20829>   BNE 'more
00030356 <AmiBlitz3.ab3@20830>   MOVE.l (a7)+,a1
00030358 <AmiBlitz3.ab3@20831> RTS
0003035C <AmiBlitz3.ab3@20834> libisat:   Ds.l 1
00030362 <AmiBlitz3.ab3@20840>   MOVE.l libisat,-(A7)                                   
00030368 <AmiBlitz3.ab3@20841>   MOVE.l A2,libisat
0003036C <AmiBlitz3.ab3@20842>   LEA $6(A2,D1.L),A2
00030374 <AmiBlitz3.ab3@20847>   CMP.l #$3e19436c,$1c-8(a2)                               ;clear type
00030378 <AmiBlitz3.ab3@20848>   BEQ 'dowritevar
00030380 <AmiBlitz3.ab3@20849>   CMP.l #$3e18436f,$1c-8(a2)                               ;copy type
00030384 <AmiBlitz3.ab3@20850>   BEQ 'dowritevar
0003038C <AmiBlitz3.ab3@20851>   CMP.l #$3e175265,$1c(a2)
00030390 <AmiBlitz3.ab3@20852>   BEQ 'dowritevar
00030398 <AmiBlitz3.ab3@20853>   CMP.l #$3e165772,$1c(a2)
0003039C <AmiBlitz3.ab3@20854>   BNE 'nowritef
000303A0 <AmiBlitz3.ab3@20857>   MOVEM.l a0-a2/d2,-(a7)
000303A2 <AmiBlitz3.ab3@20858>   MOVEQ #0,d1
000303AC <AmiBlitz3.ab3@20859>   MOVE.l #0,typebase
000303B0 <AmiBlitz3.ab3@20860>   MOVE.l $a(a3),a0
000303B4 <AmiBlitz3.ab3@20861>   MOVE.l $4(a0),d0
000303BA <AmiBlitz3.ab3@20862>   CMP.l #8,d0
000303BE <AmiBlitz3.ab3@20863>   BLE 'notype
000303C2 <AmiBlitz3.ab3@20864>   BSR scantype
000303C8 <AmiBlitz3.ab3@20867>   MOVE.l #$3f3c0000,d1
000303CE <AmiBlitz3.ab3@20868>   MOVE.w a2offset,d1
000303D2 <AmiBlitz3.ab3@20869>   BSR writelong
000303D8 <AmiBlitz3.ab3@20870>   MOVE.l #$3f3c0000,d1
000303DC <AmiBlitz3.ab3@20871>   MOVE.l $a(a3),a0
000303E0 <AmiBlitz3.ab3@20872>   MOVE.w 8(a0),d1
000303E4 <AmiBlitz3.ab3@20873>   BSR writelong
000303EA <AmiBlitz3.ab3@20874>   MOVE.l #$3f3cab12,d1
000303EE <AmiBlitz3.ab3@20875>   BSR writelong
000303F4 <AmiBlitz3.ab3@20876>   ADDQ.w #6,a2offset
000303F8 <AmiBlitz3.ab3@20877>   MOVEM.l (a7)+,a0-a2/d2
000303FE <AmiBlitz3.ab3@20880>   TST.b fpu
00030402 <AmiBlitz3.ab3@20881>   BEQ 'nofpu2
0003040A <AmiBlitz3.ab3@20882>   CMP.l #$496e7400,$1a(a2)
0003040E <AmiBlitz3.ab3@20883>   BNE 'noint
00030410 <AmiBlitz3.ab3@20884>   MOVEQ #0,d1
00030416 <AmiBlitz3.ab3@20885>   SUBQ.l #8,destpointer                                    ;fpu int
0003041C <AmiBlitz3.ab3@20886>   CLR.w a2offset
00030420 <AmiBlitz3.ab3@20887>   CMP.b #2,d2
00030424 <AmiBlitz3.ab3@20888>   BGT 'noword
00030428 <AmiBlitz3.ab3@20889>   MOVE.w #$48c0,d1
0003042E <AmiBlitz3.ab3@20890>   OR.w regnumstore,d1
00030432 <AmiBlitz3.ab3@20891>   BSR writeword
00030436 <AmiBlitz3.ab3@20892>  BRA 'exit2
0003043A <AmiBlitz3.ab3@20895>    CMP.b #3,d2
0003043E <AmiBlitz3.ab3@20896>         BNE 'nolong
00030442 <AmiBlitz3.ab3@20897>  BRA 'exit2
00030446 <AmiBlitz3.ab3@20900>    CMP.b #4,d2
0003044A <AmiBlitz3.ab3@20901>         BNE 'noquick
0003044E <AmiBlitz3.ab3@20902>         MOVE.w #$e080,d1
00030454 <AmiBlitz3.ab3@20903>         OR.w regnumstore,d1
00030458 <AmiBlitz3.ab3@20904>         BSR writeword
0003045C <AmiBlitz3.ab3@20905>         MOVE.w #$e080,d1
00030462 <AmiBlitz3.ab3@20906>         OR.w regnumstore,d1
00030466 <AmiBlitz3.ab3@20907>         BSR writeword
0003046A <AmiBlitz3.ab3@20908>  BRA 'exit2
0003046C <AmiBlitz3.ab3@20911>         MOVEQ #0,d0
0003046E <AmiBlitz3.ab3@20912>         MOVEQ #0,d1
00030474 <AmiBlitz3.ab3@20913>         MOVE.w regnumstore,d0
00030476 <AmiBlitz3.ab3@20914>         ASL.l #7,d0
0003047C <AmiBlitz3.ab3@20915>         OR.l #$f23c4428,d1                                 ;fsub.s 0.5,fpx
0003047E <AmiBlitz3.ab3@20916>         OR.l d0,d1
00030484 <AmiBlitz3.ab3@20918>         MOVE.l #$3f000000,d1
00030486 <AmiBlitz3.ab3@20920>         MOVEQ #0,d0
00030488 <AmiBlitz3.ab3@20921>         MOVEQ #0,d1
0003048E <AmiBlitz3.ab3@20922>         MOVE.w regnumstore,d0
00030490 <AmiBlitz3.ab3@20923>         ASL.l #7,d0
00030492 <AmiBlitz3.ab3@20924>         MOVE.l d0,d1
00030498 <AmiBlitz3.ab3@20925>         OR.l #$f2000003,d1                                 ;fintrz fpx
0003049A <AmiBlitz3.ab3@20926>         ASL.l #3,d0
0003049C <AmiBlitz3.ab3@20927>         OR.l d0,d1
000304A0 <AmiBlitz3.ab3@20928>         BSR writelong
000304A2 <AmiBlitz3.ab3@20929>         MOVEQ #0,d0
000304A8 <AmiBlitz3.ab3@20930>         MOVE.w regnumstore,d0
000304AA <AmiBlitz3.ab3@20931>         ASL.l #7,d0
000304B0 <AmiBlitz3.ab3@20932>         MOVE.l #$f2006000,d1                               ;fmove.l fp0,d0
000304B2 <AmiBlitz3.ab3@20933>         OR.l d0,d1
000304B4 <AmiBlitz3.ab3@20934>         ASL.l #1,d0
000304B6 <AmiBlitz3.ab3@20935>         ASL.l #8,d0
000304B8 <AmiBlitz3.ab3@20936>         OR.l d0,d1
000304BC <AmiBlitz3.ab3@20937>  BRA 'exit
000304C2 <AmiBlitz3.ab3@20940>   CMP.w #$3c01,24(a2)
000304C6 <AmiBlitz3.ab3@20941>   BNE 'noval
000304C8 <AmiBlitz3.ab3@20942>   MOVE.l a2,-(a7)
000304CC <AmiBlitz3.ab3@20943>   BSR.w makelsub3
000304CE <AmiBlitz3.ab3@20944>   MOVE.l (a7)+,a2
000304D2 <AmiBlitz3.ab3@20945>  BRA 'exit2
000304DA <AmiBlitz3.ab3@20962>   CMP.l #$41627300,$1a(a2)
000304DE <AmiBlitz3.ab3@20963>   BNE 'noabs
000304E0 <AmiBlitz3.ab3@20964>   MOVEQ #0,d1
000304E6 <AmiBlitz3.ab3@20965>   MOVE.w regnumstore,d1
000304E8 <AmiBlitz3.ab3@20966>   MOVE.w d1,d0
000304EA <AmiBlitz3.ab3@20967>   ASL.w #7,d1
000304EC <AmiBlitz3.ab3@20968>   ASL.w #8,d0
000304EE <AmiBlitz3.ab3@20969>   ASL.w #2,d0
000304F0 <AmiBlitz3.ab3@20970>   OR.w d0,d1
000304F6 <AmiBlitz3.ab3@20971>   SUBQ.l #8,destpointer                                    ;fpu abs
000304FA <AmiBlitz3.ab3@20972>   MOVEM.l d3/d1,-(a7)
000304FE <AmiBlitz3.ab3@20973>   MOVE.w #5,d3
00030500 <AmiBlitz3.ab3@20974>   EXG d2,d3
00030506 <AmiBlitz3.ab3@20975>   MOVE.w regnum,-(a7)
00030510 <AmiBlitz3.ab3@20976>   MOVE.w regnumstore,regnum
00030514 <AmiBlitz3.ab3@20977>   BSR writeconvertcode
0003051A <AmiBlitz3.ab3@20978>   MOVE.w (a7)+,regnum
0003051C <AmiBlitz3.ab3@20979>   EXG d2,d3
00030520 <AmiBlitz3.ab3@20980>   MOVEM.l (a7)+,d3/d1
00030526 <AmiBlitz3.ab3@20981>   OR.l #$f2000018,d1
0003052C <AmiBlitz3.ab3@20982>   CLR.w a2offset
00030530 <AmiBlitz3.ab3@20983>  BRA 'exit
00030534 <AmiBlitz3.ab3@20986>   CMP.b #5,d2
00030538 <AmiBlitz3.ab3@20987>   BNE 'nofpu2
0003053C <AmiBlitz3.ab3@20988>   MOVE.b 24(a2),d0
00030540 <AmiBlitz3.ab3@20989>   CMP.b #$60,d0                                            ;nolib $edxx
00030544 <AmiBlitz3.ab3@20990>   BNE 'nofpu
00030546 <AmiBlitz3.ab3@20991>   MOVEQ #0,d1
0003054C <AmiBlitz3.ab3@20992>   MOVE.w regnumstore,d1
0003054E <AmiBlitz3.ab3@20993>   MOVE.w d1,d0
00030550 <AmiBlitz3.ab3@20994>   ASL.w #7,d1
00030552 <AmiBlitz3.ab3@20995>   ASL.w #8,d0
00030554 <AmiBlitz3.ab3@20996>   ASL.w #2,d0
00030556 <AmiBlitz3.ab3@20997>   OR.w d0,d1
0003055A <AmiBlitz3.ab3@20998>   MOVE.b 25(a2),d0
0003055E <AmiBlitz3.ab3@20999>   CMP.b #5,d0
00030562 <AmiBlitz3.ab3@21000>   BNE 'nocos
00030568 <AmiBlitz3.ab3@21001>   OR.l #$f200001d,d1                                       ;fpu cos
0003056C <AmiBlitz3.ab3@21002>  BRA 'exit
00030570 <AmiBlitz3.ab3@21005>   CMP.b #$c,d0
00030574 <AmiBlitz3.ab3@21006>   BNE 'nosqr
0003057A <AmiBlitz3.ab3@21007>   OR.l #$f2000004,d1                                       ;fpu sqr
0003057E <AmiBlitz3.ab3@21008>  BRA 'exit
00030582 <AmiBlitz3.ab3@21011>   CMP.b #$d,d0
00030586 <AmiBlitz3.ab3@21012>   BNE 'notan
0003058C <AmiBlitz3.ab3@21013>   OR.l #$f200000f,d1                                       ;fpu tan
00030590 <AmiBlitz3.ab3@21014>  BRA 'exit
00030594 <AmiBlitz3.ab3@21017>   CMP.b #$a,d0
00030598 <AmiBlitz3.ab3@21018>   BNE 'nosin
0003059E <AmiBlitz3.ab3@21019>   OR.l #$f200000e,d1                                       ;fpu sin
000305A2 <AmiBlitz3.ab3@21020>  BRA 'exit
000305A6 <AmiBlitz3.ab3@21023>   CMP.b #$3,d0
000305AA <AmiBlitz3.ab3@21024>   BNE 'noasin
000305B0 <AmiBlitz3.ab3@21025>   OR.l #$f200000c,d1                                       ;fpu asin
000305B4 <AmiBlitz3.ab3@21026>  BRA 'exit
000305B8 <AmiBlitz3.ab3@21029>   CMP.b #$2,d0
000305BC <AmiBlitz3.ab3@21030>   BNE 'noacos
000305C2 <AmiBlitz3.ab3@21031>   OR.l #$f200001c,d1                                       ;fpu acos
000305C6 <AmiBlitz3.ab3@21032>  BRA 'exit
000305CA <AmiBlitz3.ab3@21035>   CMP.b #$4,d0
000305CE <AmiBlitz3.ab3@21036>   BNE 'noatan
000305D4 <AmiBlitz3.ab3@21037>   OR.l #$f200000a,d1                                       ;fpu atan
000305D8 <AmiBlitz3.ab3@21038>  BRA 'exit
000305DC <AmiBlitz3.ab3@21041>   CMP.b #$e,d0
000305E0 <AmiBlitz3.ab3@21042>   BNE 'nohtan
000305E6 <AmiBlitz3.ab3@21043>   OR.l #$f2000009,d1                                       ;fpu htan
000305EA <AmiBlitz3.ab3@21044>  BRA 'exit
000305EE <AmiBlitz3.ab3@21047>   CMP.b #$6,d0
000305F2 <AmiBlitz3.ab3@21048>   BNE 'nohcos
000305F8 <AmiBlitz3.ab3@21049>   OR.l #$f2000019,d1                                       ;fpu hcos
000305FC <AmiBlitz3.ab3@21050>  BRA 'exit
00030600 <AmiBlitz3.ab3@21053>   CMP.b #$b,d0
00030604 <AmiBlitz3.ab3@21054>   BNE 'nohsin
0003060A <AmiBlitz3.ab3@21055>   OR.l #$f2000002,d1                                       ;fpu hsin
0003060E <AmiBlitz3.ab3@21056>  BRA 'exit
00030612 <AmiBlitz3.ab3@21059>   CMP.b #$9,d0
00030616 <AmiBlitz3.ab3@21060>   BNE 'nolog
0003061C <AmiBlitz3.ab3@21061>   OR.l #$f2000014,d1                                       ;fpu log
00030620 <AmiBlitz3.ab3@21062>  BRA 'exit
00030624 <AmiBlitz3.ab3@21065>   CMP.b #$8,d0
00030628 <AmiBlitz3.ab3@21066>   BNE 'nolog10
0003062E <AmiBlitz3.ab3@21067>   OR.l #$f2000015,d1                                       ;fpu log10
00030632 <AmiBlitz3.ab3@21068>  BRA 'exit
00030636 <AmiBlitz3.ab3@21071>   CMP.b #$7,d0
0003063A <AmiBlitz3.ab3@21072>   BNE 'noexp
00030640 <AmiBlitz3.ab3@21073>   OR.l #$f2000010,d1                                       ;fpu exp
00030644 <AmiBlitz3.ab3@21074>  BRA 'exit
0003064A <AmiBlitz3.ab3@21077>   LEA fpuerr,a0
0003064C <AmiBlitz3.ab3@21078>   MOVE.l a0,-(a7)
00030652 <AmiBlitz3.ab3@21079>  JMP handle_compileerror
00030656 <AmiBlitz3.ab3@21083>   CMP.b #$3c,d0
0003065A <AmiBlitz3.ab3@21084>   BNE 'nofpu2
0003065C <AmiBlitz3.ab3@21085>   MOVEQ #0,d1
00030662 <AmiBlitz3.ab3@21086>       MOVE.w regnumstore,d1
00030664 <AmiBlitz3.ab3@21087>       MOVE.w d1,d0
00030666 <AmiBlitz3.ab3@21088>       ASL.w #7,d1
00030668 <AmiBlitz3.ab3@21089>       ASL.w #8,d0
0003066A <AmiBlitz3.ab3@21090>       ASL.w #2,d0
0003066C <AmiBlitz3.ab3@21091>       OR.w d0,d1
00030672 <AmiBlitz3.ab3@21092>       CMP.b #$03,25(a2)
00030676 <AmiBlitz3.ab3@21093>       BNE 'nosgn
0003067C <AmiBlitz3.ab3@21096>       SUBQ.l #8,destpointer                                ;fpu sgn
00030682 <AmiBlitz3.ab3@21097>         OR.l #$f200003a,d1
00030686 <AmiBlitz3.ab3@21098>         BSR writelong
0003068C <AmiBlitz3.ab3@21099>         CLR.w a2offset
00030692 <AmiBlitz3.ab3@21100>          MOVE.l #$F28E0006,d1
00030696 <AmiBlitz3.ab3@21101>          BSR writelong
0003069C <AmiBlitz3.ab3@21102>   MOVE.l #$7000600a,d1
000306A0 <AmiBlitz3.ab3@21103>   BSR writelong
000306A6 <AmiBlitz3.ab3@21104>   MOVE.l #$70014840,d1
000306AA <AmiBlitz3.ab3@21105>   BSR writelong
000306B0 <AmiBlitz3.ab3@21106>   MOVE.l #$F292,d1
000306B4 <AmiBlitz3.ab3@21107>   BSR writeword
000306BA <AmiBlitz3.ab3@21108>   MOVE.l #$000470FF,d1
000306BE <AmiBlitz3.ab3@21109>  BRA 'exit
000306C6 <AmiBlitz3.ab3@21112>   CMP.l #"Frac",$1a(a2)
000306CA <AmiBlitz3.ab3@21113>   BNE 'nofrac
000306D0 <AmiBlitz3.ab3@21114>  JMP notwork
000306D4 <AmiBlitz3.ab3@21155>  BRA 'exit
000306D8 <AmiBlitz3.ab3@21160>   BSR.w makelsub3                                          ;write lib code
000306DE <AmiBlitz3.ab3@21161>   MOVE.l (A7)+,libisat
000306E0 <AmiBlitz3.ab3@21162>  RTS
000306E4 <AmiBlitz3.ab3@21166>   BSR writelong
000306EA <AmiBlitz3.ab3@21169>   MOVE.l (A7)+,libisat
000306EC <AmiBlitz3.ab3@21170> RTS
000306F0 <AmiBlitz3.ab3@21174>   BSR.w fetchregs
000306F6 <AmiBlitz3.ab3@21176>   TST.b debugmode
000306FA <AmiBlitz3.ab3@21177>    BEQ.w 'norerr
000306FC <AmiBlitz3.ab3@21179>   MOVE.l (A2),D1
00030700 <AmiBlitz3.ab3@21180>   OR.l $8(A2),D1
00030704 <AmiBlitz3.ab3@21181>   BCLR #$0,D1
00030706 <AmiBlitz3.ab3@21182>   TST.l D1
0003070A <AmiBlitz3.ab3@21183>    BEQ.w 'norerr
0003070C <AmiBlitz3.ab3@21185>   MOVE.l (A2)+,D1
00030710 <AmiBlitz3.ab3@21186>   BTST #$0,D1
00030714 <AmiBlitz3.ab3@21187>    BEQ.w 'skiptt
0003071A <AmiBlitz3.ab3@21188>   TST.w blitzmode
0003071E <AmiBlitz3.ab3@21189>    BPL.w blitzerr
00030724 <AmiBlitz3.ab3@21190>   TST.b debugmode
00030728 <AmiBlitz3.ab3@21191>    BEQ.w 'skiptt2
0003072A <AmiBlitz3.ab3@21192>   MOVE.l D1,-(A7)
0003072E <AmiBlitz3.ab3@21193>   MOVE.w #$C311,D1   ; was #inblitz,
00030732 <AmiBlitz3.ab3@21194>    BSR.w makebtst
00030734 <AmiBlitz3.ab3@21195>   MOVE.l (A7)+,D1
00030738 <AmiBlitz3.ab3@21198>   BCLR #$0,D1
0003073A <AmiBlitz3.ab3@21201>   TST.l D1
0003073E <AmiBlitz3.ab3@21203>    BSR.w doajsr
00030740 <AmiBlitz3.ab3@21204>   MOVE.l (A2)+,D1
00030744 <AmiBlitz3.ab3@21205>    BSR.w doajsrrout
00030746 <AmiBlitz3.ab3@21206>   MOVE.l (A2)+,D1
0003074A <AmiBlitz3.ab3@21207>    BSR.w doajsr
0003074E <AmiBlitz3.ab3@21208>  BRA.w 'more
00030754 <AmiBlitz3.ab3@21211>   BTST #$0,$3(A2)
00030758 <AmiBlitz3.ab3@21212>    BEQ.w 'penis
0003075C <AmiBlitz3.ab3@21216>   MOVE.w blitzmode(PC),D1
00030760 <AmiBlitz3.ab3@21217>    BPL.w blitzerr
00030764 <AmiBlitz3.ab3@21220>   MOVE.l $4(A2),D1
00030768 <AmiBlitz3.ab3@21221>    BSR.w doajsrrout
0003076E <AmiBlitz3.ab3@21224>   MOVEA.l libisat,A2
00030770 <AmiBlitz3.ab3@21225> RTS
00030774 <AmiBlitz3.ab3@21232>   BTST #$0,D1
00030778 <AmiBlitz3.ab3@21233>    BEQ.w 'doajsr
0003077E <AmiBlitz3.ab3@21234>   TST.w blitzmode
00030782 <AmiBlitz3.ab3@21235>    BMI.w amigaerr
00030788 <AmiBlitz3.ab3@21236>   TST.b debugmode
0003078C <AmiBlitz3.ab3@21237>    BEQ.w 'doajsr2      
0003078E <AmiBlitz3.ab3@21238>   MOVE.l D1,-(A7)
00030792 <AmiBlitz3.ab3@21239>   MOVE.w #$C312,D1     ; #inamiga,
00030796 <AmiBlitz3.ab3@21240>    BSR.w makebtst
00030798 <AmiBlitz3.ab3@21241>   MOVE.l (A7)+,D1
0003079C <AmiBlitz3.ab3@21244>   BCLR #$0,D1
0003079E <AmiBlitz3.ab3@21247>   TST.l D1
000307A2 <AmiBlitz3.ab3@21250>    BEQ.w 'skip
000307A4 <AmiBlitz3.ab3@21251>   MOVE.l A1,-(A7)
000307A8 <AmiBlitz3.ab3@21252>    BSR.w doajsr2
000307AA <AmiBlitz3.ab3@21253>   MOVEA.l (A7)+,A1
000307AC <AmiBlitz3.ab3@21256> RTS
000307B2 <AmiBlitz3.ab3@21260>   MOVEA.l libisat,A0
000307B8 <AmiBlitz3.ab3@21261>   TST.w cfetchmode
000307BC <AmiBlitz3.ab3@21262>    BEQ.w 'nfetch
000307BE <AmiBlitz3.ab3@21263>   ADD.l A0,D1
000307C0 <AmiBlitz3.ab3@21264>   MOVE.l D1,-(A7)
000307C4 <AmiBlitz3.ab3@21265>   MOVE.w #$4EB9,D1
000307C8 <AmiBlitz3.ab3@21266>    BSR.w writeword
000307CA <AmiBlitz3.ab3@21267>   MOVE.l (A7)+,D1
000307CE <AmiBlitz3.ab3@21268>  BRA.w writelong
000307D2 <AmiBlitz3.ab3@21275>   LEA $0(A0,D1.L),A1
000307D8 <AmiBlitz3.ab3@21276>   CLR.w inline
000307DC <AmiBlitz3.ab3@21279>   CMPI.b #$A0,(A1)+
000307E0 <AmiBlitz3.ab3@21280>    BNE.w 'ugly
000307E2 <AmiBlitz3.ab3@21281>   TST.b (A1)+
000307E6 <AmiBlitz3.ab3@21282>    BEQ.w 'iszero
000307EC <AmiBlitz3.ab3@21283>   CMPI.b #$1,-$1(A1)
000307F0 <AmiBlitz3.ab3@21284>    BEQ.w 'isone
000307F6 <AmiBlitz3.ab3@21288>   MOVE.w (A1)+,inline
000307F8 <AmiBlitz3.ab3@21289>   ADDQ.l #4,D1
000307FC <AmiBlitz3.ab3@21290>  BRA.w 'cute
00030802 <AmiBlitz3.ab3@21295>   TST.w blitzmode
00030806 <AmiBlitz3.ab3@21296>    BPL.w 'inamiga
0003080C <AmiBlitz3.ab3@21298>   TST.b debugmode
00030810 <AmiBlitz3.ab3@21299>    BEQ.w 'nobrerr
00030814 <AmiBlitz3.ab3@21300>   MOVE.w #$C311,D1       ; was #inblitz,
00030818 <AmiBlitz3.ab3@21301>    BSR.w makebtst
0003081A <AmiBlitz3.ab3@21304>   MOVE.l (A1)+,D1
0003081E <AmiBlitz3.ab3@21305>   LEA $0(A0,D1.L),A1
00030822 <AmiBlitz3.ab3@21306>  BRA.w 'cute
00030828 <AmiBlitz3.ab3@21309>   TST.b debugmode
0003082C <AmiBlitz3.ab3@21310>    BEQ.w 'noarerr        
0003082E <AmiBlitz3.ab3@21311>   MOVE.l D1,-(A7)
00030832 <AmiBlitz3.ab3@21312>   MOVE.w #$C312,D1       ; was #inamiga,
00030836 <AmiBlitz3.ab3@21313>    BSR.w makebtst
00030838 <AmiBlitz3.ab3@21314>   MOVE.l (A7)+,D1
0003083A <AmiBlitz3.ab3@21317>   ADDQ.w #4,A1
0003083C <AmiBlitz3.ab3@21318>   ADDQ.l #6,D1
00030840 <AmiBlitz3.ab3@21319>  BRA.w 'cute
00030846 <AmiBlitz3.ab3@21322>   TST.w inline
0003084A <AmiBlitz3.ab3@21323>    BEQ.w 'notin
0003084C <AmiBlitz3.ab3@21325>   SUBQ.w #1,A1
0003084E <AmiBlitz3.ab3@21326>   MOVEA.l A1,A0
00030852 <AmiBlitz3.ab3@21327>   ADDA.w inline(PC),A1
00030856 <AmiBlitz3.ab3@21328>  BRA.w pokecode2
0003085A <AmiBlitz3.ab3@21331>   MOVEM.l a0/D1,-(A7)          ; was  d1,-(a7)
00030860 <AmiBlitz3.ab3@21333>   TST.w debugversion
00030864 <AmiBlitz3.ab3@21334>   BEQ 'l11
0003086C <AmiBlitz3.ab3@21335>   BTST #$7,link_debuginfo
00030870 <AmiBlitz3.ab3@21336>   BEQ.w 'l11
00030876 <AmiBlitz3.ab3@21337>   MOVE.l lastinstruction,d1
0003087A <AmiBlitz3.ab3@21338>   BEQ 'l11
00030880 <AmiBlitz3.ab3@21339>   CLR.l lastinstruction
00030886 <AmiBlitz3.ab3@21340>   CMP.l #$e000,d1
0003088A <AmiBlitz3.ab3@21341>   BGE 'ln99
00030890 <AmiBlitz3.ab3@21342>   LEA notf,a0
00030896 <AmiBlitz3.ab3@21343>   CMP.l #$c601,d1
0003089A <AmiBlitz3.ab3@21344>   BNE 'ln1
000308A0 <AmiBlitz3.ab3@21345>   LEA strcpy,a0
000308A4 <AmiBlitz3.ab3@21346>  BRA 'ln3
000308AA <AmiBlitz3.ab3@21349>   CMP.l #$c700,d1
000308AE <AmiBlitz3.ab3@21350>   BNE 'ln2
000308B4 <AmiBlitz3.ab3@21351>   LEA strvar,a0
000308B8 <AmiBlitz3.ab3@21352>  BRA 'ln3
000308BE <AmiBlitz3.ab3@21355>   CMP.l #$ce00,d1
000308C2 <AmiBlitz3.ab3@21356>   BNE 'ln4
000308C8 <AmiBlitz3.ab3@21357>   LEA strcmp,a0
000308CC <AmiBlitz3.ab3@21358>  BRA 'ln3
000308D2 <AmiBlitz3.ab3@21361>   CMP.l #$ca00,d1
000308D6 <AmiBlitz3.ab3@21362>   BNE 'ln5
000308DC <AmiBlitz3.ab3@21363>   LEA qmul,a0
000308E0 <AmiBlitz3.ab3@21364>  BRA 'ln3
000308E6 <AmiBlitz3.ab3@21367>   CMP.l #$d000,d1
000308EA <AmiBlitz3.ab3@21368>      BNE 'ln6
000308F0 <AmiBlitz3.ab3@21369>      LEA _MaxLen,a0
000308F4 <AmiBlitz3.ab3@21370>  BRA 'ln3
000308FA <AmiBlitz3.ab3@21373>   CMP.l #$cb00,d1
000308FE <AmiBlitz3.ab3@21374>   BNE 'ln3
00030904 <AmiBlitz3.ab3@21375>   LEA qdiv,a0
00030908 <AmiBlitz3.ab3@21376>  BRA 'ln3
0003090A <AmiBlitz3.ab3@21379>   MOVE.l d1,a0
0003090E <AmiBlitz3.ab3@21380>   LEA $8(a0),a0
00030912 <AmiBlitz3.ab3@21383>   CMP.w #$ffff,(a0)+
00030916 <AmiBlitz3.ab3@21384>   BNE 'l1
0003091A <AmiBlitz3.ab3@21385>   LEA 6(a0),a0
0003091E <AmiBlitz3.ab3@21388>   MOVEM.l a1/a2/d7/d2,-(a7)
00030920 <AmiBlitz3.ab3@21389>   MOVEQ #0,d2
00030926 <AmiBlitz3.ab3@21390>   LEA ptr_parameterstore,a1
00030928 <AmiBlitz3.ab3@21393>   ADDQ.l #1,d2
0003092A <AmiBlitz3.ab3@21394>   MOVE.b (a0)+,d0
0003092E <AmiBlitz3.ab3@21395> 
00030932 <AmiBlitz3.ab3@21396>   BNE 'nodollar
00030936 <AmiBlitz3.ab3@21397>   MOVE.b #"S",d0
0003093A <AmiBlitz3.ab3@21400>   CMP.b #"?",d0
0003093E <AmiBlitz3.ab3@21401>   BEQ 'nolabelwrite
00030940 <AmiBlitz3.ab3@21402>   MOVE.b d0,(a1)+
00030944 <AmiBlitz3.ab3@21403>   BNE 'l2
0003094A <AmiBlitz3.ab3@21404>   MOVE.w #"__",-1(a1)
0003094C <AmiBlitz3.ab3@21405>   ADDQ.l #2,d2
00030950 <AmiBlitz3.ab3@21406>   CLR.b 1(a1)
00030956 <AmiBlitz3.ab3@21407>   JSR findlabel2
0003095A <AmiBlitz3.ab3@21408>   BEQ 'l3
00030960 <AmiBlitz3.ab3@21409>   JSR addlabelhash
00030964 <AmiBlitz3.ab3@21412>   CLR.l 4(a2)
00030968 <AmiBlitz3.ab3@21413>   MOVE.l $14(a7),a0
0003096C <AmiBlitz3.ab3@21414>   MOVE.l $10(a7),d1
00030970 <AmiBlitz3.ab3@21415>   SUB.l $12(a0),d1
00030974 <AmiBlitz3.ab3@21416>   ADD.l $28(a0),d1
00030978 <AmiBlitz3.ab3@21417>   MOVE.l d1,8(a2)
0003097C <AmiBlitz3.ab3@21420>   MOVEM.l (a7)+,a1/a2/d7/d2
00030982 <AmiBlitz3.ab3@21423>   TST.b typecheck
00030986 <AmiBlitz3.ab3@21424>   BEQ 'p1
0003098C <AmiBlitz3.ab3@21425>   MOVE.l lasttoken,d1
00030992 <AmiBlitz3.ab3@21426>   CMP.l #$da01,d1                                          ;poke
00030996 <AmiBlitz3.ab3@21427>   BEQ 'lp1
0003099C <AmiBlitz3.ab3@21428>   CMP.l #$da02,d1                                          ;peek
000309A0 <AmiBlitz3.ab3@21429>   BNE 'p1
000309A6 <AmiBlitz3.ab3@21432>   TST.b peekaddrsize
000309AA <AmiBlitz3.ab3@21433>   BEQ 'p1
000309B2 <AmiBlitz3.ab3@21434>   CMP.b #3,peekaddrsize
000309B6 <AmiBlitz3.ab3@21435>   BNE errormsg_onlylong
000309BC <AmiBlitz3.ab3@21436>   CLR.b peekaddrsize
000309C2 <AmiBlitz3.ab3@21444>    TST.b fpu
000309C6 <AmiBlitz3.ab3@21445>   BNE 'optf
000309CC <AmiBlitz3.ab3@21446>   TST.b fast
000309D0 <AmiBlitz3.ab3@21447>   BEQ 'l10
000309D8 <AmiBlitz3.ab3@21453>   CMP.l #"Poke",20(a2)                                     ;poke
000309DC <AmiBlitz3.ab3@21454>   BNE 'peekopt
000309E0 <AmiBlitz3.ab3@21455>   TST.b 24(a2)
000309E4 <AmiBlitz3.ab3@21456>   BNE 'peekopt
000309E8 <AmiBlitz3.ab3@21457>   CMP.b #3,d2
000309EC <AmiBlitz3.ab3@21458>   BNE 'lw1
000309F2 <AmiBlitz3.ab3@21461>   MOVE.l #$21821990,d1
000309F6 <AmiBlitz3.ab3@21462>  BRA.s 'exitjsr
000309FA <AmiBlitz3.ab3@21465>   CMP.b #2,d2
000309FE <AmiBlitz3.ab3@21466>   BNE 'lb1
00030A04 <AmiBlitz3.ab3@21467>   MOVE.l #$31821990,d1
00030A08 <AmiBlitz3.ab3@21468>  BRA.s 'exitjsr
00030A0C <AmiBlitz3.ab3@21471>   CMP.b #1,d2
00030A10 <AmiBlitz3.ab3@21472>   BNE 'lp3
00030A16 <AmiBlitz3.ab3@21473>   MOVE.l #$11821990,d1
00030A1A <AmiBlitz3.ab3@21474>  BRA.s 'exitjsr
00030A1E <AmiBlitz3.ab3@21477>   CMP.b #5,d2
00030A22 <AmiBlitz3.ab3@21478>     BNE 'l10
00030A28 <AmiBlitz3.ab3@21479>     TST.b fpu
00030A2C <AmiBlitz3.ab3@21480>     BEQ 'll1
00030A32 <AmiBlitz3.ab3@21481>      MOVE.l destpointer,a4
00030A3A <AmiBlitz3.ab3@21482>     CMP.l #$f22d4500,-6(a4)
00030A3E <AmiBlitz3.ab3@21483>     BNE 'noglob
00030A44 <AmiBlitz3.ab3@21484>     TST.b doublepeek
00030A48 <AmiBlitz3.ab3@21485>     BNE 'noglob
00030A4E <AmiBlitz3.ab3@21486>     MOVE.w -2(a4),-4(a4)
00030A54 <AmiBlitz3.ab3@21487>     MOVE.w #$21ad,-6(a4)
00030A5A <AmiBlitz3.ab3@21488>     MOVE.w #$1990,-2(a4)
00030A62 <AmiBlitz3.ab3@21489>     MOVE.w #9,peeksize
00030A64 <AmiBlitz3.ab3@21490>     ADDQ #8,a7
00030A66 <AmiBlitz3.ab3@21491>  RTS
00030A6E <AmiBlitz3.ab3@21494>     CMP.l #$f22c4500,-6(a4)
00030A72 <AmiBlitz3.ab3@21495>     BNE 'nolocal
00030A78 <AmiBlitz3.ab3@21496>     MOVE.w -2(a4),-4(a4)
00030A7E <AmiBlitz3.ab3@21497>     TST.b doublepeek                                       ;dont move longfix on double floats
00030A82 <AmiBlitz3.ab3@21498>     BNE 'nolocal
00030A88 <AmiBlitz3.ab3@21499>     MOVE.w #$21ac,-6(a4)
00030A8E <AmiBlitz3.ab3@21500>     MOVE.w #$1990,-2(a4)
00030A96 <AmiBlitz3.ab3@21501>     MOVE.w #9,peeksize
00030A98 <AmiBlitz3.ab3@21502>     ADDQ #8,a7
00030A9A <AmiBlitz3.ab3@21503>  RTS
00030A9E <AmiBlitz3.ab3@21506>     MOVE.w #$f230,d1
00030AA2 <AmiBlitz3.ab3@21507>     BSR writeword
00030AA8 <AmiBlitz3.ab3@21508>   MOVE.l #$65001990,d1
00030AAE <AmiBlitz3.ab3@21509>   TST.b doublepeek
00030AB2 <AmiBlitz3.ab3@21510>   BEQ 'exitjsr
00030AB8 <AmiBlitz3.ab3@21511>   OR.l   #$10000000,d1
00030ABA <AmiBlitz3.ab3@21514>   ADDQ #8,a7
00030AC2 <AmiBlitz3.ab3@21515>   MOVE.w #9,peeksize
00030AC6 <AmiBlitz3.ab3@21516>  BRA writelong
00030ACE <AmiBlitz3.ab3@21519>   CMP.l #"Peek",20(a2)
00030AD2 <AmiBlitz3.ab3@21520>   BNE 'l10
00030AD6 <AmiBlitz3.ab3@21521>   TST.b 24(a2)
00030ADA <AmiBlitz3.ab3@21522>   BNE 'l10
00030AE2 <AmiBlitz3.ab3@21523>   CMP.w #7,peeksize
00030AE6 <AmiBlitz3.ab3@21524>   BEQ 'l10
00030AEE <AmiBlitz3.ab3@21525>    CMP.w #3,peeksize
00030AF2 <AmiBlitz3.ab3@21526>    BNE.s 'lw1a
00030AF8 <AmiBlitz3.ab3@21529>   MOVE.l #$20301990,d1
00030AFC <AmiBlitz3.ab3@21530>  BRA 'exitjsr
00030B04 <AmiBlitz3.ab3@21533>   CMP.w #2,peeksize
00030B08 <AmiBlitz3.ab3@21534>    BNE.s 'lb1a
00030B0E <AmiBlitz3.ab3@21535>    MOVE.l #$30301990,d1
00030B12 <AmiBlitz3.ab3@21536>  BRA 'exitjsr
00030B1A <AmiBlitz3.ab3@21539>   CMP.w #1,peeksize
00030B1E <AmiBlitz3.ab3@21540>    BNE.s 'lf1
00030B24 <AmiBlitz3.ab3@21541>    MOVE.l #$10301990,d1
00030B28 <AmiBlitz3.ab3@21542>  BRA 'exitjsr
00030B30 <AmiBlitz3.ab3@21545>   CMP.w #5,peeksize
00030B34 <AmiBlitz3.ab3@21546>    BNE 'l10
00030B3A <AmiBlitz3.ab3@21547>    TST.b fpu
00030B3E <AmiBlitz3.ab3@21548>    BEQ 'll1a
00030B42 <AmiBlitz3.ab3@21549>    MOVE.w #$f230,d1
00030B46 <AmiBlitz3.ab3@21550>    BSR writeword
00030B48 <AmiBlitz3.ab3@21551>    MOVEQ #0,d1
00030B4E <AmiBlitz3.ab3@21552>    MOVE.w tempregnum,d1
00030B50 <AmiBlitz3.ab3@21553>    ASL.l #7,d1
00030B52 <AmiBlitz3.ab3@21554>    ASL.l #8,d1
00030B54 <AmiBlitz3.ab3@21555>    ASL.l #8,d1
00030B5A <AmiBlitz3.ab3@21556>    ADD.l #$44001990,d1
00030B60 <AmiBlitz3.ab3@21557>     TST.b doublepeek
00030B64 <AmiBlitz3.ab3@21558>     BEQ 'exitjsr2
00030B6A <AmiBlitz3.ab3@21559>     OR.l   #$10000000,d1
00030B6E <AmiBlitz3.ab3@21562>  BRA 'exitjsr
00030B72 <AmiBlitz3.ab3@21566>   MOVE.w #$4EB9,D1
00030B76 <AmiBlitz3.ab3@21567>    BSR.w writeword                                         ;writesysjsr
00030B7A <AmiBlitz3.ab3@21568>   MOVEM.l (A7)+,a0/D1        ; was  (a7)+,d1
00030B80 <AmiBlitz3.ab3@21569>    JSR addoff
00030B84 <AmiBlitz3.ab3@21570>   SUB.l $12(A0),D1
00030B88 <AmiBlitz3.ab3@21571>   ADD.l $28(A0),D1
00030B8C <AmiBlitz3.ab3@21572> BRA.w writelong
00030B8E <AmiBlitz3.ab3@21577>   MOVE.w D1,-(A7)
00030B92 <AmiBlitz3.ab3@21578>   MOVE.w tstmode(PC),D1
00030B96 <AmiBlitz3.ab3@21579>    BSR.w writeword
00030B9A <AmiBlitz3.ab3@21580>    BSR.w getbbase
00030B9E <AmiBlitz3.ab3@21581>    BSR.w writeword
00030BA0 <AmiBlitz3.ab3@21582>   MOVE.w (A7)+,D1
00030BA4 <AmiBlitz3.ab3@21583>   MOVEM.l D0/D3-D7/A0-A2/A4,-(A7)
00030BA8 <AmiBlitz3.ab3@21584>    BSR.w Atokejsr
00030BAC <AmiBlitz3.ab3@21585>   MOVEM.l (A7)+,D0/D3-D7/A0-A2/A4
00030BAE <AmiBlitz3.ab3@21586> RTS
00030BB2 <AmiBlitz3.ab3@21594>   MOVE.w blitzoff(PC),D1
00030BB6 <AmiBlitz3.ab3@21595>   CMP.w #-$1,D1
00030BBA <AmiBlitz3.ab3@21596>    BNE.w 'done
00030BC0 <AmiBlitz3.ab3@21597>   ADDQ.w #1,globalvarpointer
00030BC8 <AmiBlitz3.ab3@21598>   BCLR #$0,globalvarpointer+1
00030BCE <AmiBlitz3.ab3@21599>   MOVE.w globalvarpointer,D1
00030BD4 <AmiBlitz3.ab3@21600>   MOVE.w D1,blitzoff
00030BDA <AmiBlitz3.ab3@21601>   ADDQ.w #2,globalvarpointer
00030BDC <AmiBlitz3.ab3@21604> RTS
00030BE0 <AmiBlitz3.ab3@21608> tstmode:    Dc.b $4A,$6D,$00,$00                           ;TST.W $0000(A5)
00030BE2 <AmiBlitz3.ab3@21611> inline:     Ds.w 1
00030BE4 <AmiBlitz3.ab3@21612> blitzoff:   Dc.w $FFFF                                   ;-1 org source
00030BE6 <AmiBlitz3.ab3@21613> blitzmode:  Ds.w 1                                       ;+=amiga, -=blitz
00030BE8 <AmiBlitz3.ab3@21617>   MOVE.w (A2)+,D1
00030BEC <AmiBlitz3.ab3@21618>    BEQ.w 'done
00030BEE <AmiBlitz3.ab3@21619>   MOVE.w (A2)+,D2
00030BF2 <AmiBlitz3.ab3@21620>    BSR.w toreg
00030BF6 <AmiBlitz3.ab3@21621>  BRA.w fetchregs
00030BF8 <AmiBlitz3.ab3@21624> RTS
00030BFC <AmiBlitz3.ab3@21630>   CMP.w #-$100,D2
00030C00 <AmiBlitz3.ab3@21631>    BCC.w 'yeah
00030C04 <AmiBlitz3.ab3@21633>   BCLR #$F,D2
00030C08 <AmiBlitz3.ab3@21634>    BEQ.w 'nobm
00030C0E <AmiBlitz3.ab3@21636>   TST.w blitzmode
00030C12 <AmiBlitz3.ab3@21637>    BMI.w 'yeah
00030C14 <AmiBlitz3.ab3@21638>  RTS
00030C18 <AmiBlitz3.ab3@21641>   BCLR #$E,D2
00030C1C <AmiBlitz3.ab3@21642>    BEQ.w 'yeah
00030C22 <AmiBlitz3.ab3@21644>   TST.w blitzmode
00030C26 <AmiBlitz3.ab3@21645>    BPL.w 'yeah
00030C28 <AmiBlitz3.ab3@21646>  RTS
00030C2E <AmiBlitz3.ab3@21649>   JSR uselib
00030C30 <AmiBlitz3.ab3@21650>   TST.b D2
00030C34 <AmiBlitz3.ab3@21651>    BEQ.w 'norm
00030C38 <AmiBlitz3.ab3@21652>   CMP.b #$4,D2
00030C3C <AmiBlitz3.ab3@21653>    BNE.w 'suv
00030C40 <AmiBlitz3.ab3@21654>   MOVE.w #$0004,-(A7)
00030C46 <AmiBlitz3.ab3@21655>   MOVE.l #$FFFFFFFA,-(A7)                                  ;#-6,-(a7) org source
00030C4A <AmiBlitz3.ab3@21656>  BRA.w 'sendmd
00030C4E <AmiBlitz3.ab3@21659>   CMP.b #$3,D2
00030C52 <AmiBlitz3.ab3@21660>    BNE.w 'notnmax
00030C54 <AmiBlitz3.ab3@21661>   CLR.w -(A7)
00030C5A <AmiBlitz3.ab3@21662>   MOVE.l #$FFFFFFFC,-(A7)                                  ;#-4,-(a7) org source
00030C5C <AmiBlitz3.ab3@21668>   LSR.w #8,D2
00030C60 <AmiBlitz3.ab3@21669>   MOVE.w #$303C,D1                                         ;move.w #x,dn
00030C64 <AmiBlitz3.ab3@21670>   BTST #$7,D2
00030C68 <AmiBlitz3.ab3@21671>    BEQ.w 'skipad
00030C6C <AmiBlitz3.ab3@21672>   MOVE.w #$307C,D1                                         ;move.w #x,an
00030C70 <AmiBlitz3.ab3@21673>   CMP.w #$16,D2
00030C74 <AmiBlitz3.ab3@21674>    BNE.w 'skipad
00030C7C <AmiBlitz3.ab3@21675>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
00030C80 <AmiBlitz3.ab3@21678>   ANDI.w #$7,D2
00030C82 <AmiBlitz3.ab3@21679>   LSL.w #8,D2
00030C84 <AmiBlitz3.ab3@21680>   LSL.w #1,D2
00030C86 <AmiBlitz3.ab3@21681>   OR.w D2,D1
00030C8A <AmiBlitz3.ab3@21682>    BSR.w writeword
00030C8E <AmiBlitz3.ab3@21683>   MOVE.l $12(A1),D1
00030C90 <AmiBlitz3.ab3@21684>   ADD.l (A7)+,D1
00030C94 <AmiBlitz3.ab3@21685>   MOVE.w $0(A1,D1.L),D1
00030C96 <AmiBlitz3.ab3@21686>   ADD.w (A7)+,D1
00030C9A <AmiBlitz3.ab3@21687>  BRA.w writeword
00030C9C <AmiBlitz3.ab3@21690>   MOVE.w D2,-(A7)
00030C9E <AmiBlitz3.ab3@21691>   LSR.w #8,D2
00030CA2 <AmiBlitz3.ab3@21692>   CMP.w #$16,D2
00030CA6 <AmiBlitz3.ab3@21693>    BNE.w 'isnta6
00030CAE <AmiBlitz3.ab3@21694>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
00030CB2 <AmiBlitz3.ab3@21697>   MOVE.l $12(A1),D1                                        ;objectspace
00030CB6 <AmiBlitz3.ab3@21698>   MOVE.w -$6(A1,D1.L),-(A7)
00030CBA <AmiBlitz3.ab3@21699>    BSR.w makeregop
00030CBE <AmiBlitz3.ab3@21700>    BSR.w writeword
00030CC0 <AmiBlitz3.ab3@21701>   MOVE.w (A7)+,D1
00030CC2 <AmiBlitz3.ab3@21702>   MOVE.w (A7)+,D2
00030CC4 <AmiBlitz3.ab3@21703>   TST.b D2
00030CC8 <AmiBlitz3.ab3@21704>    BPL.w 'skippy1
00030CCC <AmiBlitz3.ab3@21709>    BSR.w writeword                                         ;move.l x(a5),dn
00030CCE <AmiBlitz3.ab3@21710>   MOVE.w D2,-(A7)                                          ;store reg used
00030CD2 <AmiBlitz3.ab3@21712>   ADDA.l $12(A1),A1
00030CD4 <AmiBlitz3.ab3@21713>   MOVE.b D2,D1
00030CD8 <AmiBlitz3.ab3@21714>   ANDI.w #$7,D1
00030CDE <AmiBlitz3.ab3@21716>   TST.b debugmode
00030CE2 <AmiBlitz3.ab3@21717>    BEQ.w 'norerr
00030CE4 <AmiBlitz3.ab3@21719>   MOVE.w D1,-(A7)
00030CE6 <AmiBlitz3.ab3@21720>   LSL.w #8,D1
00030CE8 <AmiBlitz3.ab3@21721>   LSL.w #1,D1
00030CEC <AmiBlitz3.ab3@21722>   ORI.w #$B07C,D1                                          ;cmp #x,dn
00030CF0 <AmiBlitz3.ab3@21723>    BSR.w writeword
00030CF4 <AmiBlitz3.ab3@21724>   MOVE.w -$4(A1),D1
00030CF8 <AmiBlitz3.ab3@21725>    BSR.w writeword
00030CFC <AmiBlitz3.ab3@21726>   MOVE.l maxchk(PC),D1                                  ;bcs
00030D00 <AmiBlitz3.ab3@21727>    BSR.w writelong
00030D02 <AmiBlitz3.ab3@21728>   MOVE.l A2,-(A7)
00030D06 <AmiBlitz3.ab3@21729>   MOVE.w #$C30A,D1
00030D0A <AmiBlitz3.ab3@21730>    BSR.w Atokejsr
00030D0C <AmiBlitz3.ab3@21731>   MOVEA.l (A7)+,A2
00030D0E <AmiBlitz3.ab3@21732>   MOVE.w (A7)+,D1
00030D12 <AmiBlitz3.ab3@21735>   MOVE.w -$2(A1),D2                                        ;shift amount
00030D16 <AmiBlitz3.ab3@21738>   CMP.w #$9,D2
00030D1A <AmiBlitz3.ab3@21739>    BCS.w 'simp
00030D1E <AmiBlitz3.ab3@21740>   MOVEM.w D1-D2,-(A7)
00030D20 <AmiBlitz3.ab3@21742>   MOVEQ.l #$00,D2                                          ;!!!!!
00030D22 <AmiBlitz3.ab3@21744>   LSL.w #8,D2
00030D24 <AmiBlitz3.ab3@21745>   LSL.w #1,D2
00030D26 <AmiBlitz3.ab3@21746>   OR.w D2,D1
00030D2A <AmiBlitz3.ab3@21747>   OR.w lsldn(PC),D1
00030D2E <AmiBlitz3.ab3@21748>    BSR.w writeword
00030D32 <AmiBlitz3.ab3@21749>   MOVEM.w (A7)+,D1-D2
00030D34 <AmiBlitz3.ab3@21750>   SUBQ.w #8,D2
00030D38 <AmiBlitz3.ab3@21751>  BRA.w 'shloop
00030D3A <AmiBlitz3.ab3@21754>   MOVE.w D1,-(A7)
00030D3E <AmiBlitz3.ab3@21755>   OR.w #$48c0,d1
00030D42 <AmiBlitz3.ab3@21756>   BSR writeword
00030D44 <AmiBlitz3.ab3@21757>   MOVE.w (a7),d1
00030D46 <AmiBlitz3.ab3@21758>   TST.w D2
00030D4A <AmiBlitz3.ab3@21759>   BEQ.w 'simp2
00030D4E <AmiBlitz3.ab3@21761>   ANDI.w #$7,D2                                            ;?????
00030D50 <AmiBlitz3.ab3@21763>   LSL.w #8,D2
00030D52 <AmiBlitz3.ab3@21764>   LSL.w #1,D2
00030D54 <AmiBlitz3.ab3@21765>   OR.w D2,D1
00030D58 <AmiBlitz3.ab3@21766>   OR.w lsldn(PC),D1
00030D5C <AmiBlitz3.ab3@21767>    BSR.w writeword
00030D5E <AmiBlitz3.ab3@21773>   MOVE.w (A7)+,D1
00030D62 <AmiBlitz3.ab3@21774>   ANDI.w #$7,D1
00030D66 <AmiBlitz3.ab3@21775>   OR.w maxdo(PC),D1
00030D68 <AmiBlitz3.ab3@21776>   MOVE.w (A7)+,D2
00030D6A <AmiBlitz3.ab3@21777>   LSL.w #1,D2
00030D6E <AmiBlitz3.ab3@21778>   ANDI.w #$E00,D2
00030D70 <AmiBlitz3.ab3@21779>   OR.w D2,D1
00030D74 <AmiBlitz3.ab3@21780>  BRA.w writeword
00030D78 <AmiBlitz3.ab3@21783>   CMP.b #$1,D2
00030D7C <AmiBlitz3.ab3@21784>    BEQ.w 'skippy
00030D7E <AmiBlitz3.ab3@21788>   ADDQ.w #4,D1
00030D84 <AmiBlitz3.ab3@21790>   TST.b debugmode
00030D88 <AmiBlitz3.ab3@21791>    BEQ.w 'skippy
00030D8C <AmiBlitz3.ab3@21793>    BSR.w writeword
00030D8E <AmiBlitz3.ab3@21794>   SWAP D1
00030D92 <AmiBlitz3.ab3@21795>   MOVE.w 'theretest(PC),D1
00030D94 <AmiBlitz3.ab3@21796>   SWAP D1
00030D98 <AmiBlitz3.ab3@21797>    BSR.w writelong
00030D9C <AmiBlitz3.ab3@21798>   MOVE.l 'theretest+4(PC),D1
00030DA0 <AmiBlitz3.ab3@21799>    BSR.w writelong
00030DA4 <AmiBlitz3.ab3@21800>   MOVE.l 'theretest+8(PC),D1
00030DA8 <AmiBlitz3.ab3@21801>  BRA.w writelong
00030DAC <AmiBlitz3.ab3@21804>  BRA.w writeword
00030DB0 <AmiBlitz3.ab3@21809>             Dc.b $4A,$AD,$00,$00                           ;TST.L  $0000(A5)
00030DB4 <AmiBlitz3.ab3@21810>             Dc.b $66,$00,$00,$06                           ;BNE.W  'ttskip
00030DB6 <AmiBlitz3.ab3@21811>             Dc.b $70,$01                                   ;MOVEQ  #$01,D0
00030DB8 <AmiBlitz3.ab3@21812>             Dc.b $4E,$40                                   ;TRAP   #00
00030DBA <AmiBlitz3.ab3@21817>   LSR.w #8,D2
00030DBE <AmiBlitz3.ab3@21818>   CMP.b #$16,D2
00030DC2 <AmiBlitz3.ab3@21819>    BNE.w 'nota6
00030DC6 <AmiBlitz3.ab3@21820>   MOVE.w $A(A1),D1
00030DCC <AmiBlitz3.ab3@21821>   CMP.w lasta6,D1
00030DD0 <AmiBlitz3.ab3@21822>    BEQ.w 'sk
00030DD6 <AmiBlitz3.ab3@21823>   MOVE.w D1,lasta6
00030DDA <AmiBlitz3.ab3@21826>    BSR.w makeregop
00030DDE <AmiBlitz3.ab3@21827>   TST.w $1A(A1)
00030DE2 <AmiBlitz3.ab3@21828>    BPL.w 'long
00030DE6 <AmiBlitz3.ab3@21829>   CMP.w stackop(PC),D1
00030DEA <AmiBlitz3.ab3@21830>    BNE.w 'notst
00030DF0 <AmiBlitz3.ab3@21831>   SUBQ.w #2,a2offset
00030DF4 <AmiBlitz3.ab3@21834>    ORI.w #$1000,D1
00030DF8 <AmiBlitz3.ab3@21837>    BSR.w writeword
00030DFC <AmiBlitz3.ab3@21838>   MOVE.w $A(A1),D1
00030E00 <AmiBlitz3.ab3@21839>    BSR.w writeword
00030E02 <AmiBlitz3.ab3@21842> RTS
00030E04 <AmiBlitz3.ab3@21846> lsldn:      Dc.b $E1,$88                 ;Dc.b $48 ;object long acsess    ;LSL.L   #8,D0
00030E08 <AmiBlitz3.ab3@21847> maxchk:     Dc.b $65,$00,$00,$08                                          ;BCS.W   maxchk_ok
00030E0E <AmiBlitz3.ab3@21848>             Dc.b $4E,$B9,$00,$00,$00,$00                                  ;JSR     $00000000
00030E10 <AmiBlitz3.ab3@21851> 
00030E12 <AmiBlitz3.ab3@21854>             Dc.b $00,$00
00030E16 <AmiBlitz3.ab3@21855> stackop:    Dc.b $2F,$2D,$00,$00                                          ;MOVE.L  $0000(A5),-(A7)
00030E1A <AmiBlitz3.ab3@21862>   CMP.b #$FF,D2
00030E1E <AmiBlitz3.ab3@21863>    BNE.w 'notst
00030E22 <AmiBlitz3.ab3@21864>   MOVE.w stackop(PC),D1
00030E28 <AmiBlitz3.ab3@21865>   ADDQ.w #4,a2offset
00030E2A <AmiBlitz3.ab3@21866>  RTS
00030E2C <AmiBlitz3.ab3@21869>   MOVE.l A3,-(A7)
00030E32 <AmiBlitz3.ab3@21870>   LEA regtransd,A3
00030E36 <AmiBlitz3.ab3@21871>   BTST #$4,D2
00030E3A <AmiBlitz3.ab3@21872>    BEQ.w 'skip
00030E40 <AmiBlitz3.ab3@21873>   LEA regtransa,A3
00030E44 <AmiBlitz3.ab3@21876>   ANDI.w #$7,D2
00030E46 <AmiBlitz3.ab3@21877>   MOVE.w D2,D1
00030E48 <AmiBlitz3.ab3@21878>   LSL.w #8,D1
00030E4A <AmiBlitz3.ab3@21879>   LSL.w #1,D1
00030E4C <AmiBlitz3.ab3@21880>   OR.w (A3),D1
00030E4E <AmiBlitz3.ab3@21881>   MOVEA.l (A7)+,A3
00030E50 <AmiBlitz3.ab3@21882> RTS
00030E54 <AmiBlitz3.ab3@21888>   CMP.w #$3C,D0
00030E58 <AmiBlitz3.ab3@21889>    BCS.w 'no
00030E5C <AmiBlitz3.ab3@21890>   CMP.w #$3E,D0
00030E60 <AmiBlitz3.ab3@21891>    BHI.w 'no
00030E64 <AmiBlitz3.ab3@21892>   SUBI.w #$3C,D0
00030E66 <AmiBlitz3.ab3@21893>   CMP.w D0,D0
00030E68 <AmiBlitz3.ab3@21896> RTS
00030E72 <AmiBlitz3.ab3@21909>   MOVE.w oldqflag,instringon
00030E78 <AmiBlitz3.ab3@21910>   MOVEA.l lastsourcepos,A5
00030E7E <AmiBlitz3.ab3@21919>   MOVE.w regnum,-(A7)
00030E84 <AmiBlitz3.ab3@21920>   CLR.w regnum
00030E8A <AmiBlitz3.ab3@21921>   MOVE.l destpointer,-(A7)
00030E90 <AmiBlitz3.ab3@21922>   MOVE.l destbufferend,-(A7)
00030E96 <AmiBlitz3.ab3@21923>   MOVE.w dontwrite_nomemleft,-(A7)
00030E9C <AmiBlitz3.ab3@21924>   MOVE.w lasta6,-(A7)
00030EA2 <AmiBlitz3.ab3@21925>   MOVE.w cfetchmode,-(A7)
00030EA6 <AmiBlitz3.ab3@21926>    BNE.w 'something
00030EB0 <AmiBlitz3.ab3@21927>   MOVE.l destbufferend,oldlibat
00030EB6 <AmiBlitz3.ab3@21928>   MOVEA.l constpcat,A0
00030EBC <AmiBlitz3.ab3@21929>   MOVE.l A0,destpointer
00030EC0 <AmiBlitz3.ab3@21930>  BRA.w 'some2
00030EC6 <AmiBlitz3.ab3@21935>   MOVEA.l destpointer,A0     ;continue in cmode buff
00030EC8 <AmiBlitz3.ab3@21938>   MOVE.l A0,-(A7)
00030ED2 <AmiBlitz3.ab3@21939>   MOVE.l constlibat,destbufferend      ;for overflow
00030ED8 <AmiBlitz3.ab3@21940>   CLR.w dontwrite_nomemleft
00030EE0 <AmiBlitz3.ab3@21942>   MOVE.w #$FFFF,lasta6                 ; was -1
00030EE8 <AmiBlitz3.ab3@21943>   MOVE.w #$FFFF,cfetchmode             ; was -1
00030EEC <AmiBlitz3.ab3@21947>     BSR.w arreval                      ;!
00030EEE <AmiBlitz3.ab3@21949>    MOVE.l (a7),a0
0003102A <AmiBlitz3.ab3@21951>  !newcalc
0003102E <AmiBlitz3.ab3@21952>    BEQ 'l10
00031030 <AmiBlitz3.ab3@21953>    MOVE.l d0,d3
00031032 <AmiBlitz3.ab3@21954>    MOVEA.l (A7)+,A0
00031036 <AmiBlitz3.ab3@21955>  BRA 'bc1
0003103A <AmiBlitz3.ab3@21959>    MOVE.w #$2600,D1              ;move.l d0,d3
00031040 <AmiBlitz3.ab3@21960>   OR.w regnum,D1
00031044 <AmiBlitz3.ab3@21961>    BSR.w writeword
00031048 <AmiBlitz3.ab3@21962>   MOVE.w #$4E75,D1               ;rts!
0003104C <AmiBlitz3.ab3@21963>    BSR.w writeword
00031052 <AmiBlitz3.ab3@21965>   MOVE.w dontwrite_nomemleft,D1
00031056 <AmiBlitz3.ab3@21966>    BNE.w conmemerr
00031058 <AmiBlitz3.ab3@21968>   MOVEA.l (A7)+,A0
0003105A <AmiBlitz3.ab3@21970>   NOP
00031060 <AmiBlitz3.ab3@21972>    JSR Aclearcache                                         ;simple expression
00031062 <AmiBlitz3.ab3@21974>    JSR (A0)                                                ;writeresult
00031068 <AmiBlitz3.ab3@21977>   MOVE.w (A7)+,cfetchmode
0003106E <AmiBlitz3.ab3@21978>   MOVE.w (A7)+,lasta6
00031074 <AmiBlitz3.ab3@21979>   MOVE.w (A7)+,dontwrite_nomemleft
0003107A <AmiBlitz3.ab3@21980>   MOVE.l (A7)+,destbufferend
00031080 <AmiBlitz3.ab3@21981>   MOVE.l (A7)+,destpointer
00031086 <AmiBlitz3.ab3@21982>   MOVE.w (A7)+,regnum
0003108C <AmiBlitz3.ab3@21987> JMP reget
00031090 <AmiBlitz3.ab3@21990> oldlibat:   Ds.l 1
00031096 <AmiBlitz3.ab3@21994>   LEA incdir,A0
0003109A <AmiBlitz3.ab3@21997>   CMP.w #$22,D0     ;'"'
0003109E <AmiBlitz3.ab3@21998>    BEQ.w 'skip
000310A0 <AmiBlitz3.ab3@21999>   MOVE.b D0,(A0)+
000310A2 <AmiBlitz3.ab3@22000>   TST.w D0
000310A6 <AmiBlitz3.ab3@22001>    BEQ.w 'done
000310AA <AmiBlitz3.ab3@22002>    BMI.w syntaxerr
000310B0 <AmiBlitz3.ab3@22005>   JSR get1bytemain                                         ;_long
000310B4 <AmiBlitz3.ab3@22006>  BRA.w 'loop
000310B6 <AmiBlitz3.ab3@22009> RTS
000310BC <AmiBlitz3.ab3@22016>   LEA ptr_parameterstore,A1                                ;getparameter
000310C2 <AmiBlitz3.ab3@22017>   LEA incdir,A0
000310C4 <AmiBlitz3.ab3@22018>   MOVEQ.l #-$01,D2
000310C6 <AmiBlitz3.ab3@22021>     ADDQ.w #1,D2
000310C8 <AmiBlitz3.ab3@22022>     MOVE.b (A0)+,(A1)+
000310CC <AmiBlitz3.ab3@22023>   BNE.w 'loop0
000310CE <AmiBlitz3.ab3@22024>   SUBQ.w #1,A1
000310D8 <AmiBlitz3.ab3@22027>   MOVE.w oldqflag,instringon
000310DE <AmiBlitz3.ab3@22028>   MOVEA.l lastsourcepos,A5
000310E4 <AmiBlitz3.ab3@22032>   JSR get1bytemain
000310E6 <AmiBlitz3.ab3@22033>   TST.w D0
000310EA <AmiBlitz3.ab3@22034>    BMI.w syntaxerr
000310EE <AmiBlitz3.ab3@22035>   CMP.b #$22,D0         ;'"'
000310F2 <AmiBlitz3.ab3@22036>    BEQ.w 'loop
000310F4 <AmiBlitz3.ab3@22037>   MOVE.b D0,(A1)+
000310F8 <AmiBlitz3.ab3@22038>    BEQ.w 'done
000310FA <AmiBlitz3.ab3@22039>   ADDQ.w #1,D2
000310FE <AmiBlitz3.ab3@22040>  BRA.w 'loop
00031100 <AmiBlitz3.ab3@22043>   TST.w D2
00031104 <AmiBlitz3.ab3@22044>    BEQ.w syntaxerr
00031106 <AmiBlitz3.ab3@22045> RTS
0003110C <AmiBlitz3.ab3@22052>   MOVEA.l constantbase,A2
00031110 <AmiBlitz3.ab3@22054>   MOVEA.l $E(A2),A5
00031116 <AmiBlitz3.ab3@22056>   MOVE.l a5,includesourceline
0003111C <AmiBlitz3.ab3@22057>   LEA inctab,a0
00031122 <AmiBlitz3.ab3@22058>   MOVE.w ininclude,d0
00031126 <AmiBlitz3.ab3@22059>   MOVE.l $0(a0,d0*4),d0
0003112A <AmiBlitz3.ab3@22061>   MOVEA.l $4(A2),A0
0003112E <AmiBlitz3.ab3@22063>   LEA $0(A0,D0.l),A0   ;end of buffer!
00031130 <AmiBlitz3.ab3@22064>   MOVEA.l A5,A1
00031132 <AmiBlitz3.ab3@22067>     CMPA.l A0,A1
00031136 <AmiBlitz3.ab3@22068>      BCC.w readpend
00031138 <AmiBlitz3.ab3@22069>   TST.b (A1)+
0003113C <AmiBlitz3.ab3@22070>   BNE.w 'loop
00031140 <AmiBlitz3.ab3@22071> BRA.w imakeend
00031144 <AmiBlitz3.ab3@22076>   MOVEA.l $4(A2),A1
00031146 <AmiBlitz3.ab3@22079>   CMPA.l A0,A5
0003114A <AmiBlitz3.ab3@22080>   BCC.w 'skip
0003114C <AmiBlitz3.ab3@22081>   MOVE.b (A5)+,(A1)+
00031150 <AmiBlitz3.ab3@22082>  BRA.w 'loop
00031152 <AmiBlitz3.ab3@22085>   MOVE.l A1,D0
00031156 <AmiBlitz3.ab3@22086>   SUB.l $4(A2),D0
0003115C <AmiBlitz3.ab3@22088>   LEA inctab,a0
0003115E <AmiBlitz3.ab3@22089>   MOVEQ #0,d1
00031164 <AmiBlitz3.ab3@22090>   MOVE.w ininclude,d1
00031168 <AmiBlitz3.ab3@22091>   MOVE.l d0,0(a0,d1*4)
0003116E <AmiBlitz3.ab3@22094>   MOVEA.l _dosbase,A6
00031172 <AmiBlitz3.ab3@22095>   MOVE.l $8(A2),D1
00031174 <AmiBlitz3.ab3@22096>   MOVE.l A1,D2
0003117A <AmiBlitz3.ab3@22098>   MOVE.l D2,include_base
00031180 <AmiBlitz3.ab3@22099>   MOVE.l #$10000000,d3                                     ;load whole file
00031182 <AmiBlitz3.ab3@22102>   SUB.l D0,D3
00031186 <AmiBlitz3.ab3@22104>    JSR _Read(A6)
00031188 <AmiBlitz3.ab3@22106>   TST.l D0
0003118C <AmiBlitz3.ab3@22107>    BMI.w error_reading_file
00031190 <AmiBlitz3.ab3@22109>    BEQ.w closeinc
00031196 <AmiBlitz3.ab3@22110>    MOVE.l D0,include_length
000311D8 <AmiBlitz3.ab3@22111>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
00031202 <AmiBlitz3.ab3@22112>    !basic
00031212 <AmiBlitz3.ab3@22113>    ilen.l  = Peek.l(?include_length)
00031222 <AmiBlitz3.ab3@22114>    ibase.l = Peek.l(?include_base)
00031232 <AmiBlitz3.ab3@22115>    ido.l   = Peek.l(?include_process)
00031242 <AmiBlitz3.ab3@22116>    *tn.preprocessor = Peek.l(?include_preprocessor)
0003124C <AmiBlitz3.ab3@22117>    If ido
0003125E <AmiBlitz3.ab3@22118>      ioffset.l = SkipXtraHeader{ibase,ilen}
00031284 <AmiBlitz3.ab3@22119>      nilen.l = preproc_Tokenize{*tn,ibase+ioffset,ibase,ilen-ioffset}
00031296 <AmiBlitz3.ab3@22120>      If nilen>0
000312A6 <AmiBlitz3.ab3@22124>        Poke.l ?include_length,nilen
000312C4 <AmiBlitz3.ab3@22127>    !asm
000312CE <AmiBlitz3.ab3@22128>    MOVE.l #0,include_process
000312D4 <AmiBlitz3.ab3@22129>    MOVE.l include_length,D0
000312DA <AmiBlitz3.ab3@22130>    LEA inctab,a0
000312DC <AmiBlitz3.ab3@22131>    MOVEQ #0,d1
000312E2 <AmiBlitz3.ab3@22132>    MOVE.w ininclude,d1
000312E6 <AmiBlitz3.ab3@22133>    ADD.l d0,0(a0,d1*4)
000312EA <AmiBlitz3.ab3@22137>   MOVEA.l $4(A2),A5
000312EE <AmiBlitz3.ab3@22140>    MOVE.l 0(a0,d1*4),d0
000312F2 <AmiBlitz3.ab3@22142>   CLR.b $0(A5,D0.l)
000312F4 <AmiBlitz3.ab3@22145>   MOVEA.l A5,A0
000312F6 <AmiBlitz3.ab3@22148>     TST.b (A0)+
000312FA <AmiBlitz3.ab3@22149>   BNE.w 'loop2
000312FE <AmiBlitz3.ab3@22150>   MOVE.l A0,$E(A2)
00031300 <AmiBlitz3.ab3@22151> RTS
00031304 <AmiBlitz3.ab3@22154> include_length:        Dc.l 0                              ; for tokenizer!
00031308 <AmiBlitz3.ab3@22155> include_base:          Dc.l 0
0003130C <AmiBlitz3.ab3@22156> include_process:       Dc.l 0
00031310 <AmiBlitz3.ab3@22157> include_preprocessor:  Dc.l 0
00031314 <AmiBlitz3.ab3@22161>   MOVE.l $8(A2),D1
0003131A <AmiBlitz3.ab3@22162>   MOVEA.l _dosbase,A6
0003131E <AmiBlitz3.ab3@22163>   JSR _Close(a6)
00031324 <AmiBlitz3.ab3@22164>   MOVEA.l _execbase,A6
00031328 <AmiBlitz3.ab3@22165>   MOVEA.l $4(A2),A1
0003132E <AmiBlitz3.ab3@22166>   MOVE.l #$400*8,D0         ; #inclen                               ;exit include
00031332 <AmiBlitz3.ab3@22171>   JSR _FreeVec(a6)
00031338 <AmiBlitz3.ab3@22174>   MOVE.l (A2),constantbase
0003133A <AmiBlitz3.ab3@22175>   MOVEA.l A2,A1
0003133C <AmiBlitz3.ab3@22176>   MOVEQ.l #$00,D0
00031340 <AmiBlitz3.ab3@22177>   MOVE.b $12(A2),D0
00031346 <AmiBlitz3.ab3@22178>   MOVEA.l _execbase,A6
0003134C <AmiBlitz3.ab3@22181>   MOVE.l mempool2,a0
00031350 <AmiBlitz3.ab3@22182>   JSR _FreePooled(A6)
00031356 <AmiBlitz3.ab3@22183>   JSR zero_includename
0003135C <AmiBlitz3.ab3@22185>   SUBQ.w #1,ininclude
00031360 <AmiBlitz3.ab3@22186>   BNE.w readinc
00031366 <AmiBlitz3.ab3@22190>   LEA _include,a0
0003136A <AmiBlitz3.ab3@22191>   MOVEM.l a0-a6/d0-d7,-(a7)
00031370 <AmiBlitz3.ab3@22192>   LEA ptr_parameterstore,a1
00031372 <AmiBlitz3.ab3@22195>     MOVE.b (a0)+,(a1)+
00031376 <AmiBlitz3.ab3@22196>   BNE 'l1b
00031378 <AmiBlitz3.ab3@22197>   MOVEQ #9,d2
0003137E <AmiBlitz3.ab3@22198>   JSR findlabel2
00031382 <AmiBlitz3.ab3@22199>   BNE 'd
00031386 <AmiBlitz3.ab3@22200>   CLR.l 8(a2)
0003138A <AmiBlitz3.ab3@22203>   MOVEM.l (a7)+,a0-a6/d0-d7
0003138C <AmiBlitz3.ab3@22205> RTS
00031392 <AmiBlitz3.ab3@22210>   MOVE.l unusedfunc,d0
00031396 <AmiBlitz3.ab3@22211>   BEQ 'noclear
0003139A <AmiBlitz3.ab3@22212>   MOVEM.l d0-d2/a0-a1/a6,-(a7)
0003139C <AmiBlitz3.ab3@22215>     MOVE.l d0,a1
000313A0 <AmiBlitz3.ab3@22216>     MOVE.l 4(a1),d0
000313A2 <AmiBlitz3.ab3@22217>     MOVE.l (a1),d2
000313A8 <AmiBlitz3.ab3@22218>     MOVE.l _execbase,a6
000313AC <AmiBlitz3.ab3@22219>     JSR _FreeMem(a6)
000313AE <AmiBlitz3.ab3@22220>     MOVE.l d2,d0
000313B2 <AmiBlitz3.ab3@22221>   BNE 'f1
000313B8 <AmiBlitz3.ab3@22222>   CLR.l unusedfunc
000313BC <AmiBlitz3.ab3@22223>   MOVEM.l (a7)+,a0-a1/a6/d0-d2
000313BE <AmiBlitz3.ab3@22226> RTS
000313C4 <AmiBlitz3.ab3@22231>   MOVEA.l xinclude_base,A2
000313CA <AmiBlitz3.ab3@22232>   CLR.l xinclude_base
000313CE <AmiBlitz3.ab3@22235>     CMPA.w #$0,A2
000313D2 <AmiBlitz3.ab3@22236>      BEQ.w 'done
000313D4 <AmiBlitz3.ab3@22237>     MOVEQ.l #$00,D0
000313D8 <AmiBlitz3.ab3@22238>     MOVE.b 4+8(A2),D0           ; was 4 org
000313DA <AmiBlitz3.ab3@22239>     MOVEA.l A2,A1
000313DC <AmiBlitz3.ab3@22240>     MOVEA.l (A2),A2
000313E2 <AmiBlitz3.ab3@22241>     MOVEA.l _execbase,A6
000313E8 <AmiBlitz3.ab3@22244>     MOVE.l mempool2,a0
000313EC <AmiBlitz3.ab3@22245>     JSR _FreePooled(A6)
000313F0 <AmiBlitz3.ab3@22247>  BRA.w 'loop
000313F2 <AmiBlitz3.ab3@22250> RTS
000313F8 <AmiBlitz3.ab3@22254>   MOVEA.l constantbase,A2
000313FE <AmiBlitz3.ab3@22255>   CLR.l constantbase
00031402 <AmiBlitz3.ab3@22258>     CMPA.w #$0,A2
00031406 <AmiBlitz3.ab3@22259>      BEQ.w 'done
0003140A <AmiBlitz3.ab3@22260>     MOVE.l $8(A2),D1
0003140E <AmiBlitz3.ab3@22261>      BEQ.w 'noclose
00031414 <AmiBlitz3.ab3@22262>     MOVEA.l _dosbase,A6
00031418 <AmiBlitz3.ab3@22263>      JSR _Close(A6)
0003141C <AmiBlitz3.ab3@22266>     MOVE.l $4(A2),D0
00031420 <AmiBlitz3.ab3@22267>      BEQ.w 'skip
00031422 <AmiBlitz3.ab3@22268>     MOVEA.l D0,A1
00031428 <AmiBlitz3.ab3@22269>     MOVE.l #$400*8,D0          ; was #inclen
0003142E <AmiBlitz3.ab3@22270>     MOVEA.l _execbase,A6
00031434 <AmiBlitz3.ab3@22273>     MOVE.l mempool,a0
00031438 <AmiBlitz3.ab3@22274>     JSR _FreeVec(a6)
0003143A <AmiBlitz3.ab3@22278>     MOVEQ.l #$00,D0
0003143E <AmiBlitz3.ab3@22279>     MOVE.b $12(A2),D0
00031440 <AmiBlitz3.ab3@22280>     MOVEA.l A2,A1
00031442 <AmiBlitz3.ab3@22281>     MOVEA.l (A2),A2
00031448 <AmiBlitz3.ab3@22282>     MOVEA.l _execbase,A6
0003144E <AmiBlitz3.ab3@22285>     MOVE.l mempool2,a0
00031452 <AmiBlitz3.ab3@22286>     JSR _FreePooled(A6)
00031456 <AmiBlitz3.ab3@22288>  BRA.w 'loop
00031458 <AmiBlitz3.ab3@22291> RTS
0003145A <AmiBlitz3.ab3@22298>   SWAP D0
0003145E <AmiBlitz3.ab3@22299>    BSR.w pokedata2
00031460 <AmiBlitz3.ab3@22300>   SWAP D0
00031466 <AmiBlitz3.ab3@22305>   MOVEA.l data2,A4
0003146C <AmiBlitz3.ab3@22306>   CMPA.l allat,A4
00031470 <AmiBlitz3.ab3@22307>    BCC.w 'over
00031472 <AmiBlitz3.ab3@22308>   MOVE.w D0,(A4)+
00031478 <AmiBlitz3.ab3@22309>   MOVE.l A4,data2
0003147A <AmiBlitz3.ab3@22310>  RTS
00031482 <AmiBlitz3.ab3@22313>   MOVE.w #$FFFF,dontwrite_nomemleft        ; was -1
00031488 <AmiBlitz3.ab3@22314>   ADDQ.l #2,data2
0003148A <AmiBlitz3.ab3@22315> RTS
00031490 <AmiBlitz3.ab3@22319>   MOVEA.l data2,A4
00031496 <AmiBlitz3.ab3@22320>   CMPA.l allat,A4
0003149A <AmiBlitz3.ab3@22321>    BCC.w 'over
0003149C <AmiBlitz3.ab3@22322>   MOVE.b D0,(A4)+
000314A2 <AmiBlitz3.ab3@22323>   MOVE.l A4,data2
000314A4 <AmiBlitz3.ab3@22324>  RTS
000314AC <AmiBlitz3.ab3@22327>   MOVE.w #$FFFF,dontwrite_nomemleft        ; was -1
000314B2 <AmiBlitz3.ab3@22328>   ADDQ.l #1,data2
000314B4 <AmiBlitz3.ab3@22329> RTS
000314B8 <AmiBlitz3.ab3@22335>   CMP.w #$22,D0          ;'"'
000314BC <AmiBlitz3.ab3@22336>    BNE.w syntaxerr
000314C2 <AmiBlitz3.ab3@22339>   JSR get1bytemain
000314C6 <AmiBlitz3.ab3@22340>   CMP.b #$22,D0
000314CA <AmiBlitz3.ab3@22341>    BEQ.w 'done
000314CC <AmiBlitz3.ab3@22342>   TST.w D0
000314D0 <AmiBlitz3.ab3@22343>    BEQ.w syntaxerr
000314D2 <AmiBlitz3.ab3@22344>   MOVE.b D0,(A0)+
000314D6 <AmiBlitz3.ab3@22345>  BRA.w 'getsp2
000314D8 <AmiBlitz3.ab3@22348>   CLR.b (A0)
000314DA <AmiBlitz3.ab3@22349> RTS
000314DC <AmiBlitz3.ab3@22353>   TST.l D3
000314DE <AmiBlitz3.ab3@22354> RTS
000314E4 <AmiBlitz3.ab3@22360>   LEA ptr_parameterstore,A0
000314EA <AmiBlitz3.ab3@22361>   LEA namebuff2,A1
000314EC <AmiBlitz3.ab3@22364>     MOVE.b (A0)+,D0
000314F0 <AmiBlitz3.ab3@22365>     BEQ.w 'short
000314F2 <AmiBlitz3.ab3@22366>   CMP.b (A1)+,D0
000314F6 <AmiBlitz3.ab3@22367>   BEQ.w 'loop
000314F8 <AmiBlitz3.ab3@22368>  RTS
000314FA <AmiBlitz3.ab3@22371>   TST.b (A1)
000314FE <AmiBlitz3.ab3@22372>   BNE.w 'lt
00031500 <AmiBlitz3.ab3@22373>  RTS
00031504 <AmiBlitz3.ab3@22376>   CMP.w #$1,D0
00031506 <AmiBlitz3.ab3@22377> RTS
0003150A <AmiBlitz3.ab3@22384>   CMP.w #$2E,D0                ;"."                            ;dodeftype
0003150E <AmiBlitz3.ab3@22385>    BNE.w syntaxerr
00031512 <AmiBlitz3.ab3@22386>   BSR.w getparameter2
00031518 <AmiBlitz3.ab3@22387>   LEA newtypebase,A2
0003151C <AmiBlitz3.ab3@22388>   BSR.w findtype
00031520 <AmiBlitz3.ab3@22389>    BNE.w notypeerr
00031526 <AmiBlitz3.ab3@22391>   TST.b declare
0003152A <AmiBlitz3.ab3@22392>    BNE 'l1
00031530 <AmiBlitz3.ab3@22393>   TST.b declare2
00031534 <AmiBlitz3.ab3@22394>    BEQ 'l2
0003153C <AmiBlitz3.ab3@22397>   MOVE.b #2,nowdeclare
00031542 <AmiBlitz3.ab3@22401>   JSR reget
00031546 <AmiBlitz3.ab3@22402>    BNE.w 'more
0003154C <AmiBlitz3.ab3@22403>   MOVE.l A2,defaulttype
0003154E <AmiBlitz3.ab3@22404>  RTS
00031554 <AmiBlitz3.ab3@22410>   MOVE.l defaulttype,-(A7)
0003155A <AmiBlitz3.ab3@22411>   MOVE.l A2,defaulttype
0003155E <AmiBlitz3.ab3@22414>   BSR.w getparameter
00031562 <AmiBlitz3.ab3@22415>    BSR.w fetchvars
00031566 <AmiBlitz3.ab3@22416>   CMP.w #$2C,D0            ;","
0003156A <AmiBlitz3.ab3@22417>    BNE.w 'done
00031570 <AmiBlitz3.ab3@22418>    JSR get1bytemain                                        ; was BSR.w
00031574 <AmiBlitz3.ab3@22419>  BRA.w 'loopz
0003157A <AmiBlitz3.ab3@22422>   MOVE.l (A7)+,defaulttype
0003157C <AmiBlitz3.ab3@22423> RTS
00031580 <AmiBlitz3.ab3@22427>   LEA $4(A5),A2                                            ;fehler function
00031582 <AmiBlitz3.ab3@22430>   MOVE.l A2,D0
00031586 <AmiBlitz3.ab3@22435>   BSR.w getparameter
0003158A <AmiBlitz3.ab3@22436>   BSR.w fetchvars
0003158E <AmiBlitz3.ab3@22437>   BSR.w calcvar
00031592 <AmiBlitz3.ab3@22439>   CMP.b #$7,D2
00031596 <AmiBlitz3.ab3@22440>    BNE.w mismatcherr
0003159A <AmiBlitz3.ab3@22441>   MOVE.w varmode(PC),-(A7)
0003159E <AmiBlitz3.ab3@22442>   CMP.w #$3D,D0            ;"="
000315A2 <AmiBlitz3.ab3@22443>    BNE.w syntaxerr
000315A6 <AmiBlitz3.ab3@22444>   BTST #$F,D2
000315AA <AmiBlitz3.ab3@22445>    BNE.w 'already
000315AE <AmiBlitz3.ab3@22446>   MOVE.w maxprep1(PC),D1
000315B2 <AmiBlitz3.ab3@22447>   BSR.w pokewda5s
000315B4 <AmiBlitz3.ab3@22448>   MOVE.w D3,D1
000315B8 <AmiBlitz3.ab3@22449>   BSR.w writeword
000315BC <AmiBlitz3.ab3@22452>   MOVE.w maxprep2(PC),D1
000315C0 <AmiBlitz3.ab3@22453>   BSR.w writeword
000315C6 <AmiBlitz3.ab3@22454>   ADDQ.w #1,regnum
000315C8 <AmiBlitz3.ab3@22455>   MOVEQ.l #$03,D2
000315CC <AmiBlitz3.ab3@22456>   BSR.w eval
000315D2 <AmiBlitz3.ab3@22457>   MOVE.l #$D000,D1              ; was #maxlen
000315D8 <AmiBlitz3.ab3@22459>   MOVE.l d1,lastinstruction
000315DA <AmiBlitz3.ab3@22461>   TST.w (A7)+
000315DE <AmiBlitz3.ab3@22462>    BEQ.w Atokejsr
000315E0 <AmiBlitz3.ab3@22463>   ADDQ.w #1,D1
000315E4 <AmiBlitz3.ab3@22464> BRA.w Atokejsr
000315E6 <AmiBlitz3.ab3@22468>   MOVE.w D0,D1
000315EA <AmiBlitz3.ab3@22469>    BPL.w syntaxerr
000315EE <AmiBlitz3.ab3@22470>   BCLR #$F,D1
000315F4 <AmiBlitz3.ab3@22471>    JSR searchinstr
000315F8 <AmiBlitz3.ab3@22472>   MOVE.l $12(A2),D0
000315FC <AmiBlitz3.ab3@22473>   TST.w -$2(A2,D0.L)
00031600 <AmiBlitz3.ab3@22474>    BEQ.w freeerr
00031602 <AmiBlitz3.ab3@22475>   MOVEQ.l #$02,D2
00031604 <AmiBlitz3.ab3@22476>   MOVE.l A2,-(A7)
00031608 <AmiBlitz3.ab3@22478>    BSR.w eval
0003160A <AmiBlitz3.ab3@22480>   MOVEA.l (A7)+,A2
00031610 <AmiBlitz3.ab3@22481>   MOVE.l A2,mymaxlib
00031614 <AmiBlitz3.ab3@22483>   ADDA.l $12(A2),A2
0003161A <AmiBlitz3.ab3@22484>   TST.b debugmode
0003161E <AmiBlitz3.ab3@22485>    BEQ.w 'pen
00031624 <AmiBlitz3.ab3@22489>   MOVE.w regnum,D1
00031626 <AmiBlitz3.ab3@22490>   LSL.w #8,D1
00031628 <AmiBlitz3.ab3@22491>   LSL.w #1,D1
0003162C <AmiBlitz3.ab3@22492>   ORI.w #$B07C,D1       ;cmp #x,dn
00031630 <AmiBlitz3.ab3@22493>    BSR.w writeword
00031634 <AmiBlitz3.ab3@22494>   MOVE.w -$4(A2),D1
00031638 <AmiBlitz3.ab3@22495>    BSR.w writeword
0003163E <AmiBlitz3.ab3@22496>   MOVE.l maxchk,D1      ;bcs
00031642 <AmiBlitz3.ab3@22497>    BSR.w writelong
00031644 <AmiBlitz3.ab3@22498>   MOVE.l A2,-(A7)
00031648 <AmiBlitz3.ab3@22499>   MOVE.w #$C30A,D1      ; was #maxerr,
0003164C <AmiBlitz3.ab3@22500>    BSR.w Atokejsr
0003164E <AmiBlitz3.ab3@22501>   MOVEA.l (A7)+,A2
00031652 <AmiBlitz3.ab3@22504>   MOVE.w -$2(A2),D2     ;# shifts
00031658 <AmiBlitz3.ab3@22507>   MOVE.w regnum,D1
0003165E <AmiBlitz3.ab3@22508>   OR.w lslimm,D1
00031662 <AmiBlitz3.ab3@22509>   CMP.w #$8,D2
00031666 <AmiBlitz3.ab3@22510>    BCS.w 'under
0003166A <AmiBlitz3.ab3@22511>    BSR.w writeword
0003166C <AmiBlitz3.ab3@22512>   SUBQ.w #8,D2
00031670 <AmiBlitz3.ab3@22513>    BNE.w 'loop
00031674 <AmiBlitz3.ab3@22514>  BRA.w 'shdone
00031676 <AmiBlitz3.ab3@22517>   MOVE.w D2,D0
00031678 <AmiBlitz3.ab3@22518>   LSL.w #8,D0
0003167A <AmiBlitz3.ab3@22519>   LSL.w #1,D0
0003167C <AmiBlitz3.ab3@22520>   OR.w D0,D1
00031680 <AmiBlitz3.ab3@22521>   BSR.w writeword
00031682 <AmiBlitz3.ab3@22524> RTS
00031686 <AmiBlitz3.ab3@22529>   Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
00031688 <AmiBlitz3.ab3@22530>   Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0003168C <AmiBlitz3.ab3@22534> mymaxlib:  Ds.l 1
00031690 <AmiBlitz3.ab3@22538>   BSR.w getmaxel
00031694 <AmiBlitz3.ab3@22540>   LEA free(PC),A0
00031698 <AmiBlitz3.ab3@22541>   LEA freef(PC),A1
0003169E <AmiBlitz3.ab3@22542>   MOVE.w -$6(A2),$2(A0)
000316A2 <AmiBlitz3.ab3@22543>   BSR.w pokecode
000316A6 <AmiBlitz3.ab3@22545>   MOVE.l -$A(A2),D1
000316AA <AmiBlitz3.ab3@22548>   BEQ.w nosuperr
000316AE <AmiBlitz3.ab3@22549>   MOVEA.l mymaxlib(PC),A2
000316B2 <AmiBlitz3.ab3@22550> BRA.w Amakelibsub
000316B6 <AmiBlitz3.ab3@22554>   BSR.w getmaxel
000316BC <AmiBlitz3.ab3@22556>   LEA use,A0
000316C2 <AmiBlitz3.ab3@22557>   LEA usef,A1
000316C8 <AmiBlitz3.ab3@22558>   MOVE.w -$6(A2),$2(A0)
000316CE <AmiBlitz3.ab3@22559>   MOVE.w -$6(A2),-$2(A1)
000316D2 <AmiBlitz3.ab3@22560>   ADDQ.w #4,-$2(A1)
000316D6 <AmiBlitz3.ab3@22561>   BSR.w pokecode
000316DA <AmiBlitz3.ab3@22563>   MOVE.l -$E(A2),D1
000316DE <AmiBlitz3.ab3@22565> BRA.w maxjsr
000316E4 <AmiBlitz3.ab3@22570>   JSR get1bytemain
000316EA <AmiBlitz3.ab3@22573>   MOVE.l firstiff,D0
000316EE <AmiBlitz3.ab3@22574>    BEQ.w noiferr
000316F0 <AmiBlitz3.ab3@22575>   MOVEA.l D0,A0
000316F6 <AmiBlitz3.ab3@22576>   CMPI.b #$1,$D(A0)
000316FA <AmiBlitz3.ab3@22577>    BEQ.w illelseerr
000316FE <AmiBlitz3.ab3@22578>   MOVE.w #$6000,D1
00031704 <AmiBlitz3.ab3@22581>     TST.b fast
00031708 <AmiBlitz3.ab3@22582>     BEQ 'l1
0003170E <AmiBlitz3.ab3@22583>     OR.l #$ff,d1
00031712 <AmiBlitz3.ab3@22584>     BSR writeword
00031714 <AmiBlitz3.ab3@22589>   SWAP D1
00031718 <AmiBlitz3.ab3@22590>   BSR.w writelong
0003171A <AmiBlitz3.ab3@22591>   MOVEQ.l #$00,D1
0003171E <AmiBlitz3.ab3@22592>   BSR.w doendif2
00031726 <AmiBlitz3.ab3@22593>   MOVE.l destpointer,$8(A0)
0003172A <AmiBlitz3.ab3@22594> BRA.w do_then
00031730 <AmiBlitz3.ab3@22598>   LEA ptr_parameterstore,A0
00031732 <AmiBlitz3.ab3@22599>   MOVE.l A0,-(A7)
00031736 <AmiBlitz3.ab3@22600>   BSR.w getsp
0003173A <AmiBlitz3.ab3@22601> BRA.w handle_compileerror
0003173E <AmiBlitz3.ab3@22605>   BSR.w evalconst
00031740 <AmiBlitz3.ab3@22606>   MOVEQ.l #$05,D1       ;beq
0003174A <AmiBlitz3.ab3@22609>   MOVE.w oldqflag,instringon
00031750 <AmiBlitz3.ab3@22610>   MOVEA.l lastsourcepos,A5
00031756 <AmiBlitz3.ab3@22612>   LEA numcom,A0
0003175A <AmiBlitz3.ab3@22613> BRA.w compare
00031760 <AmiBlitz3.ab3@22617>   LEA ptr_parameterstore,A0
00031764 <AmiBlitz3.ab3@22618>   BSR.w getsp
0003176A <AmiBlitz3.ab3@22619>   JSR get1bytemain
0003176E <AmiBlitz3.ab3@22620>   BSR.w collif
00031774 <AmiBlitz3.ab3@22621>   LEA namebuff2,A0
00031778 <AmiBlitz3.ab3@22622>   BSR.w getsp
0003177E <AmiBlitz3.ab3@22623>   LEA strcom,A0
00031780 <AmiBlitz3.ab3@22631>   LSL.w #2,D1
00031786 <AmiBlitz3.ab3@22632>   LEA CIF_branches,A1
0003178A <AmiBlitz3.ab3@22633>   MOVE.l $0(A1,D1.W),-(A7)
0003178C <AmiBlitz3.ab3@22634>   MOVEQ.l #-$01,D1           ;comp flag
0003178E <AmiBlitz3.ab3@22636>   JSR (A0)
00031790 <AmiBlitz3.ab3@22638>   MOVEA.l (A7)+,A1
00031792 <AmiBlitz3.ab3@22639> JMP (A1)
00031796 <AmiBlitz3.ab3@22643>   BEQ.w cifdo
0003179A <AmiBlitz3.ab3@22644> BRA.w cifdont
0003179E <AmiBlitz3.ab3@22647>   BNE.w cifdo
000317A2 <AmiBlitz3.ab3@22648> BRA.w cifdont
000317A6 <AmiBlitz3.ab3@22651>   BLT.w cifdo
000317AA <AmiBlitz3.ab3@22652> BRA.w cifdont
000317AE <AmiBlitz3.ab3@22655>   BLE.w cifdo
000317B2 <AmiBlitz3.ab3@22656> BRA.w cifdont
000317B6 <AmiBlitz3.ab3@22659>   BGT.w cifdo
000317BA <AmiBlitz3.ab3@22660> BRA.w cifdont
000317BE <AmiBlitz3.ab3@22663>   BGE.w cifdo
000317C0 <AmiBlitz3.ab3@22666>   MOVEQ.l #$00,D1
000317C6 <AmiBlitz3.ab3@22669>   MOVEA.l concomsp,A0
000317CC <AmiBlitz3.ab3@22670>   MOVE.w skipcode,(A0)+
000317D2 <AmiBlitz3.ab3@22671>   MOVE.l A0,concomsp
000317D8 <AmiBlitz3.ab3@22672>   MOVE.w D1,skipcode
000317DE <AmiBlitz3.ab3@22673>   JSR get1bytemain
000317E2 <AmiBlitz3.ab3@22674>    BNE.w syntaxerr
000317E8 <AmiBlitz3.ab3@22675> JMP bakup
000317F0 <AmiBlitz3.ab3@22679> rescode:   Dc.b $2B,$7c,$00,$00,$00,$00 :   Ds.w 1         ;MOVE.L  #$00000000,$0000(A5)
000317F4 <AmiBlitz3.ab3@22680> rescode2:  Dc.b $2B,$40                 :   Ds.w 1         ;MOVE.L  D0,$0000(A5)
000317F8 <AmiBlitz3.ab3@22687>   MOVE.w #$FC17,D1
000317FE <AmiBlitz3.ab3@22688>   JSR uselib
00031804 <AmiBlitz3.ab3@22690>   JSR reget
00031808 <AmiBlitz3.ab3@22691>    BEQ.w 'resbeg
0003180C <AmiBlitz3.ab3@22692>   BSR.w makealab2                                          ;get label name!
00031810 <AmiBlitz3.ab3@22693>   MOVE.w rescode(PC),D1
00031814 <AmiBlitz3.ab3@22694>   BSR.w writeword
0003181A <AmiBlitz3.ab3@22695>   JSR addoff                                               ;add offset
0003181E <AmiBlitz3.ab3@22696>   MOVE.l $C(A2),D1
00031822 <AmiBlitz3.ab3@22697>   BSR.w writelong
00031826 <AmiBlitz3.ab3@22698>   MOVE.w rescode+6(PC),D1
0003182A <AmiBlitz3.ab3@22699>   BSR.w writeword
0003182E <AmiBlitz3.ab3@22700>   MOVE.l $4(A2),D1                                         ;is it outstanding?
00031832 <AmiBlitz3.ab3@22701>   BEQ.w 'no
00031834 <AmiBlitz3.ab3@22703>   MOVEA.l D1,A1
00031838 <AmiBlitz3.ab3@22704>   ADDQ.l #1,$4(A1)                                         ;make odd - flag for data reference.
0003183A <AmiBlitz3.ab3@22705>  RTS
0003183C <AmiBlitz3.ab3@22710>  RTS
00031840 <AmiBlitz3.ab3@22713>   MOVE.w #$CD00,D1
00031846 <AmiBlitz3.ab3@22714>   JSR Atokejsr
0003184A <AmiBlitz3.ab3@22715>   MOVE.l rescode2(PC),D1
00031850 <AmiBlitz3.ab3@22716> JMP writelong
00031854 <AmiBlitz3.ab3@22720>   MOVE.w #$FC17,D1
0003185A <AmiBlitz3.ab3@22721>   JSR uselib
00031860 <AmiBlitz3.ab3@22724>   MOVE.l dataget,D1
00031864 <AmiBlitz3.ab3@22725>   BSR.w writelong
00031868 <AmiBlitz3.ab3@22726>   BSR.w getparameter
0003186C <AmiBlitz3.ab3@22727>   BSR.w fetchvars
00031870 <AmiBlitz3.ab3@22728>   BSR.w calcvar
00031874 <AmiBlitz3.ab3@22729>   BTST #$E,D2
00031878 <AmiBlitz3.ab3@22730>    BEQ.w 'notap
0003187C <AmiBlitz3.ab3@22732>   MOVE.b #$6,D2      ;pointer becomes an address!
0003187E <AmiBlitz3.ab3@22735>   TST.b D2
00031882 <AmiBlitz3.ab3@22736>    BEQ.w noleterr   ;read in a whole struct....later!
00031888 <AmiBlitz3.ab3@22737>   TST.b debugmode
0003188C <AmiBlitz3.ab3@22738>    BEQ.w 'norerr
00031890 <AmiBlitz3.ab3@22740>   MOVE.w #$7000,D1
00031892 <AmiBlitz3.ab3@22741>   MOVE.b D2,D1
00031896 <AmiBlitz3.ab3@22742>   ANDI.b #$F,D1
0003189A <AmiBlitz3.ab3@22743>   BSR.w writeword
0003189E <AmiBlitz3.ab3@22744>   MOVE.w #$C310,D1     ; was  #datachk
000318A0 <AmiBlitz3.ab3@22745>   MOVE.w D2,-(A7)
000318A4 <AmiBlitz3.ab3@22746>   BSR.w Atokejsr
000318A6 <AmiBlitz3.ab3@22747>   MOVE.w (A7)+,D2
000318AA <AmiBlitz3.ab3@22750>   CMP.b #$7,D2
000318AE <AmiBlitz3.ab3@22751>    BEQ.w 'string
000318B2 <AmiBlitz3.ab3@22752>   CMP.b #$1,D2
000318B6 <AmiBlitz3.ab3@22753>    BNE.w 'notbyte
000318BC <AmiBlitz3.ab3@22755>   LEA dataletb2,A0
000318C2 <AmiBlitz3.ab3@22756>   LEA dataletb2f,A1
000318C6 <AmiBlitz3.ab3@22757>   BTST #$F,D2
000318CA <AmiBlitz3.ab3@22758>    BEQ.w 'bimm
000318CE <AmiBlitz3.ab3@22759>   BSR.w pokecode
000318D2 <AmiBlitz3.ab3@22760>  BRA.w 'next
000318D8 <AmiBlitz3.ab3@22763>   LEA dataletb,A0
000318DE <AmiBlitz3.ab3@22764>   LEA dataletbf,A1
000318E4 <AmiBlitz3.ab3@22766>   TST.w varmode
000318E8 <AmiBlitz3.ab3@22767>    BEQ.w 'byteglobal
000318EE <AmiBlitz3.ab3@22768>   LEA dataletbl,A0
000318F4 <AmiBlitz3.ab3@22769>   LEA dataletblf,A1
000318F8 <AmiBlitz3.ab3@22772>   MOVE.w D3,$4(A0)
000318FC <AmiBlitz3.ab3@22773>   BSR.w pokecode
00031900 <AmiBlitz3.ab3@22774>  BRA.w 'next
00031906 <AmiBlitz3.ab3@22777>   LEA dataletw,A0
0003190A <AmiBlitz3.ab3@22778>   CMP.b #$3,D2
0003190E <AmiBlitz3.ab3@22779>    BCS.w 'word
00031914 <AmiBlitz3.ab3@22780>   LEA dataletl,A0
00031918 <AmiBlitz3.ab3@22783>   BTST #$F,D2
0003191C <AmiBlitz3.ab3@22784>    BEQ.w 'imm
00031920 <AmiBlitz3.ab3@22785>   MOVE.w $4(A0),D1
00031924 <AmiBlitz3.ab3@22786>    BSR.w writeword
00031928 <AmiBlitz3.ab3@22787>  BRA.w 'next
0003192E <AmiBlitz3.ab3@22790>   TST.w varmode
00031932 <AmiBlitz3.ab3@22791>    BEQ.w 'wlglobal
00031934 <AmiBlitz3.ab3@22792>   ADDQ.w #6,A0
00031938 <AmiBlitz3.ab3@22795>   MOVE.w D3,$2(A0)
0003193A <AmiBlitz3.ab3@22796>   MOVE.l (A0),D1
0003193E <AmiBlitz3.ab3@22797>   BSR.w writelong
00031944 <AmiBlitz3.ab3@22800>   MOVE.l dataput,D1
00031948 <AmiBlitz3.ab3@22801>    BSR.w writelong
0003194C <AmiBlitz3.ab3@22802>   CMP.w #$2C,D0        ;','
00031950 <AmiBlitz3.ab3@22803>    BEQ.w 'more
00031952 <AmiBlitz3.ab3@22804>  RTS
00031958 <AmiBlitz3.ab3@22807>   JSR get1bytemain
0003195C <AmiBlitz3.ab3@22808>  BRA.w 'loop
00031962 <AmiBlitz3.ab3@22811>   MOVE.w stlenget,D1
00031966 <AmiBlitz3.ab3@22812>    BSR.w writeword     ;move.l (a3)+,-(a7)
0003196A <AmiBlitz3.ab3@22813>   BTST #$F,D2
0003196E <AmiBlitz3.ab3@22814>    BNE.w 'ok
00031974 <AmiBlitz3.ab3@22816>   TST.w varmode
00031978 <AmiBlitz3.ab3@22817>    BEQ.w 'sglobal
0003197E <AmiBlitz3.ab3@22818>   MOVE.w D3,leaampl+2
00031984 <AmiBlitz3.ab3@22819>   MOVE.l leaampl,D1
00031988 <AmiBlitz3.ab3@22820>  BRA.w 'sskip
0003198E <AmiBlitz3.ab3@22823>   MOVE.w D3,leaamp+2
00031994 <AmiBlitz3.ab3@22824>   MOVE.l leaamp,D1
00031998 <AmiBlitz3.ab3@22827>   BSR.w writelong
0003199C <AmiBlitz3.ab3@22830>   MOVE.w #$C701,D1     ;was  #astring
000319A2 <AmiBlitz3.ab3@22831>   MOVE.w varmode,D2
000319A6 <AmiBlitz3.ab3@22832>    BEQ.w 'global
000319A8 <AmiBlitz3.ab3@22833>   SUBQ.w #1,D1
000319AC <AmiBlitz3.ab3@22836>   BSR.w Atokejsr
000319B4 <AmiBlitz3.ab3@22837>   MOVE.w #$FFFF,lasta6    ; was -1
000319BA <AmiBlitz3.ab3@22838>   LEA stalign,A0
000319C0 <AmiBlitz3.ab3@22839>   LEA stalignf,A1
000319C4 <AmiBlitz3.ab3@22840>   BSR.w pokecode
000319C8 <AmiBlitz3.ab3@22841> BRA.w 'next
000319CC <AmiBlitz3.ab3@22845>   CMP.w #$2E,D0        ;'.'                                    ;definecode 'lb 'lw 'll
000319D0 <AmiBlitz3.ab3@22846>    BNE.w 'word
000319D6 <AmiBlitz3.ab3@22847>   JSR get1bytemain
000319DA <AmiBlitz3.ab3@22848>   CMP.w #$77,D0        ;'w'
000319DE <AmiBlitz3.ab3@22849>    BEQ.w 'word2
000319E2 <AmiBlitz3.ab3@22850>   CMP.w #$62,D0        ;'b'
000319E6 <AmiBlitz3.ab3@22851>    BEQ.w 'byte
000319EA <AmiBlitz3.ab3@22853>   CMP.w #"s",d0        ;'s'
000319EE <AmiBlitz3.ab3@22854>   BEQ 'single3         
000319F2 <AmiBlitz3.ab3@22855>   CMP.w #"d",d0        ;'d'
000319F6 <AmiBlitz3.ab3@22856>   BEQ 'double3
000319FA <AmiBlitz3.ab3@22858>   CMP.w #$6C,D0        ;'l'
000319FE <AmiBlitz3.ab3@22859>    BNE.w syntaxerr
00031A00 <AmiBlitz3.ab3@22860>   MOVEQ.l #$02,D1
00031A02 <AmiBlitz3.ab3@22861>  RTS
00031A0A <AmiBlitz3.ab3@22865>   MOVE.b #1,iee
00031A0C <AmiBlitz3.ab3@22866>   MOVEQ.l #$3,d1
00031A0E <AmiBlitz3.ab3@22867>  RTS
00031A16 <AmiBlitz3.ab3@22870>   MOVE.b #1,iee
00031A18 <AmiBlitz3.ab3@22871>   MOVEQ.l #$4,d1
00031A1A <AmiBlitz3.ab3@22872>  RTS
00031A1C <AmiBlitz3.ab3@22876>   MOVEQ.l #$00,D1
00031A1E <AmiBlitz3.ab3@22877>  RTS
00031A20 <AmiBlitz3.ab3@22880>   MOVEQ.l #$01,D1
00031A22 <AmiBlitz3.ab3@22881>  RTS
00031A24 <AmiBlitz3.ab3@22884>   MOVEQ.l #$01,D1
00031A2A <AmiBlitz3.ab3@22885> JMP bakup
00031A2E <AmiBlitz3.ab3@22889>   BSR.w getsize2
00031A30 <AmiBlitz3.ab3@22891>   MOVE.w D1,-(A7)
00031A34 <AmiBlitz3.ab3@22892>    BSR.w evalconst2
00031A38 <AmiBlitz3.ab3@22893>   CMP.w #$2C,D0        ;','
00031A3C <AmiBlitz3.ab3@22894>    BNE.w syntaxerr
00031A3E <AmiBlitz3.ab3@22895>   MOVE.l D3,-(A7)
00031A42 <AmiBlitz3.ab3@22896>    BSR.w evalconst2
00031A44 <AmiBlitz3.ab3@22897>   MOVE.l D3,D1        ;to put in memory
00031A46 <AmiBlitz3.ab3@22898>   MOVE.l (A7)+,D3     ;number of times
00031A48 <AmiBlitz3.ab3@22899>   MOVE.w (A7)+,D2
00031A4C <AmiBlitz3.ab3@22900>    BEQ.w 'byte
00031A50 <AmiBlitz3.ab3@22906>   CMP.w #$1,D2
00031A54 <AmiBlitz3.ab3@22907>    BEQ.w 'word
00031A56 <AmiBlitz3.ab3@22910>   SWAP D1
00031A5A <AmiBlitz3.ab3@22911>    BSR.w writeword
00031A5C <AmiBlitz3.ab3@22912>   SWAP D1
00031A60 <AmiBlitz3.ab3@22913>    BSR.w writeword
00031A62 <AmiBlitz3.ab3@22914>   SUBQ.l #1,D3
00031A66 <AmiBlitz3.ab3@22915>    BNE.w 'long
00031A68 <AmiBlitz3.ab3@22916>  RTS
00031A6C <AmiBlitz3.ab3@22919>    BSR.w writeword
00031A6E <AmiBlitz3.ab3@22920>   SUBQ.l #1,D3
00031A72 <AmiBlitz3.ab3@22921>    BNE.w 'word
00031A74 <AmiBlitz3.ab3@22922>  RTS
00031A78 <AmiBlitz3.ab3@22925>    BSR.w writebyte
00031A7A <AmiBlitz3.ab3@22926>   SUBQ.l #1,D3
00031A7E <AmiBlitz3.ab3@22927>    BNE.w 'byte
00031A80 <AmiBlitz3.ab3@22928> RTS
00031A84 <AmiBlitz3.ab3@22932>   BSR.w getsize2                                          ;definestorage
00031A86 <AmiBlitz3.ab3@22933>   MOVE.w D1,-(A7)
00031A8A <AmiBlitz3.ab3@22934>   BSR.w evalconst3
00031A8C <AmiBlitz3.ab3@22935>   MOVE.w (A7)+,D1
00031A8E <AmiBlitz3.ab3@22936>   LSL.l D1,D3
00031A90 <AmiBlitz3.ab3@22938>   MOVE.l d3,d0
00031A94 <AmiBlitz3.ab3@22939>   BEQ 'll5
00031A96 <AmiBlitz3.ab3@22940>   MOVEQ #0,d1
00031A9C <AmiBlitz3.ab3@22943>     JSR writebyte
00031A9E <AmiBlitz3.ab3@22944>     SUBQ.l #1,d3
00031AA2 <AmiBlitz3.ab3@22945>   BNE.s 'll10
00031AA4 <AmiBlitz3.ab3@22950> RTS
00031AA6 <AmiBlitz3.ab3@22954>   MOVE.w D0,-(A7)
00031AAC <AmiBlitz3.ab3@22955>   LEA dummyasm,A0
00031AB2 <AmiBlitz3.ab3@22956>   MOVEA.l destpointer,A1
00031ABC <AmiBlitz3.ab3@22957>   MOVE.w asmlen2,asmlen
00031AC2 <AmiBlitz3.ab3@22958>   JSR insasm
00031AC4 <AmiBlitz3.ab3@22959>   MOVE.w (A7)+,D0
00031AC6 <AmiBlitz3.ab3@22960> RTS
00031ACA <AmiBlitz3.ab3@22964>   BSR.w getsize2
00031AD4 <AmiBlitz3.ab3@22966>   MOVE.l #ptr_parameterstore,asmbuff
00031AD6 <AmiBlitz3.ab3@22967>   TST.w D1
00031ADA <AmiBlitz3.ab3@22968>    BEQ.w 'byte
00031ADE <AmiBlitz3.ab3@22969>   CMP.w #$1,D1
00031AE2 <AmiBlitz3.ab3@22970>    BEQ.w 'word
00031AE6 <AmiBlitz3.ab3@22972>   CMP.w #$2,d1
00031AEA <AmiBlitz3.ab3@22973>    BEQ 'long
00031AEE <AmiBlitz3.ab3@22974>   CMP.w #$3,d1
00031AF2 <AmiBlitz3.ab3@22975>    BEQ 'single
00031AF4 <AmiBlitz3.ab3@22980>    MOVEQ.l #$0d,D3
00031AFA <AmiBlitz3.ab3@22988>    JSR asmconst
00031AFE <AmiBlitz3.ab3@22989>    BSR.w insasm2
00031B02 <AmiBlitz3.ab3@22990>    BSR.w writelong
00031B06 <AmiBlitz3.ab3@22992>    BSR   writelong
00031B0A <AmiBlitz3.ab3@22994>   CMP.w #$2C,D0    ; ','
00031B0E <AmiBlitz3.ab3@22995>    BEQ.w 'lloop
00031B10 <AmiBlitz3.ab3@22996>  RTS
00031B12 <AmiBlitz3.ab3@23000>   MOVEQ.l #$0B,D3
00031B1A <AmiBlitz3.ab3@23004>   MOVE.b #1,_dcb
00031B20 <AmiBlitz3.ab3@23007>   JSR asmconst
00031B26 <AmiBlitz3.ab3@23008>   CLR.b _dcb
00031B2A <AmiBlitz3.ab3@23009>   BSR.w insasm2
00031B2E <AmiBlitz3.ab3@23010>   BSR writebyte
00031B32 <AmiBlitz3.ab3@23011>   BSR writebyte
00031B36 <AmiBlitz3.ab3@23012>   BSR writebyte                                            ;long
00031B3A <AmiBlitz3.ab3@23013>   BSR writebyte
00031B3E <AmiBlitz3.ab3@23014>   CMP.w #$2C,D0
00031B42 <AmiBlitz3.ab3@23015>    BEQ.w 'lloopb
00031B44 <AmiBlitz3.ab3@23016>  RTS
00031B46 <AmiBlitz3.ab3@23019>   MOVEQ.l #$0c,D3
00031B4E <AmiBlitz3.ab3@23023>   MOVE.b #1,_dcb
00031B54 <AmiBlitz3.ab3@23026>   JSR asmconst
00031B5A <AmiBlitz3.ab3@23027>   CLR.b _dcb
00031B5E <AmiBlitz3.ab3@23028>   BSR.w insasm2
00031B62 <AmiBlitz3.ab3@23029>   BSR.w writebyte
00031B66 <AmiBlitz3.ab3@23030>   BSR.w writebyte
00031B6A <AmiBlitz3.ab3@23031>   BSR.w writebyte
00031B6E <AmiBlitz3.ab3@23032>   BSR.w writebyte
00031B72 <AmiBlitz3.ab3@23033>   CMP.w #$2C,D0
00031B76 <AmiBlitz3.ab3@23034>    BEQ.w 'lloopa
00031B78 <AmiBlitz3.ab3@23035>  RTS
00031B7A <AmiBlitz3.ab3@23041>   MOVEQ.l #$11,D3
00031B80 <AmiBlitz3.ab3@23044>   JSR get1bytemain
00031B84 <AmiBlitz3.ab3@23045>   CMP.w #$22,D0     ;'"'
00031B88 <AmiBlitz3.ab3@23046>    BNE.w 'notq
00031B8A <AmiBlitz3.ab3@23051>   MOVE.b (a5)+,d0                                          ;bsr.w get1bytemain ascii dc.b
00031B8E <AmiBlitz3.ab3@23053>    BEQ.w syntaxerr
00031B92 <AmiBlitz3.ab3@23054>   CMP.w #$22,D0   ;'"'
00031B96 <AmiBlitz3.ab3@23055>    BEQ.w 'qdone
00031B9A <AmiBlitz3.ab3@23057>   CMP.b #"\",d0
00031B9E <AmiBlitz3.ab3@23058>    BNE 'n1
00031BA2 <AmiBlitz3.ab3@23059>   CMP.b #"\",(a5)
00031BA6 <AmiBlitz3.ab3@23060>    BEQ 'do1
00031BA8 <AmiBlitz3.ab3@23064>   MOVE.w D0,D1
00031BAC <AmiBlitz3.ab3@23065>   BSR.w writebyte
00031BB0 <AmiBlitz3.ab3@23066>  BRA.w 'qloop
00031BB8 <AmiBlitz3.ab3@23070>   CMP.l #"__DA",1(a5)
00031BBC <AmiBlitz3.ab3@23071>    BNE 'nodate1
00031BC4 <AmiBlitz3.ab3@23072>   CMP.l #"TE__",5(a5)
00031BC8 <AmiBlitz3.ab3@23073>    BEQ 'c1
00031BD0 <AmiBlitz3.ab3@23074>   CMP.l #"TE_G",5(a5)
00031BD4 <AmiBlitz3.ab3@23075>    BNE 'nodate1
00031BDC <AmiBlitz3.ab3@23076>   CMP.l #"ER__",9(a5)
00031BE0 <AmiBlitz3.ab3@23077>    BNE 'nodate1
00031BE6 <AmiBlitz3.ab3@23078>   JSR compiledatedc_ger
00031BEA <AmiBlitz3.ab3@23079>  BRA 'n1
00031BF0 <AmiBlitz3.ab3@23082>   JSR compiledatedc
00031BF4 <AmiBlitz3.ab3@23083>  BRA 'n1
00031BFC <AmiBlitz3.ab3@23086>   CMP.l #"__VE",1(a5)
00031C00 <AmiBlitz3.ab3@23087>    BNE 'n1
00031C06 <AmiBlitz3.ab3@23088>   CMP.w #"R_",5(a5)
00031C0A <AmiBlitz3.ab3@23089>    BNE 'n1
00031C10 <AmiBlitz3.ab3@23090>   JSR version_string_dc
00031C14 <AmiBlitz3.ab3@23091>  BRA.w 'qloop
00031C1A <AmiBlitz3.ab3@23095>   CLR.w instringon
00031C20 <AmiBlitz3.ab3@23097>   JSR get1bytemain
00031C24 <AmiBlitz3.ab3@23098>  BRA.w 'bdone
00031C2E <AmiBlitz3.ab3@23103>    MOVE.w oldqflag,instringon
00031C34 <AmiBlitz3.ab3@23104>   MOVEA.l lastsourcepos,A5
00031C3A <AmiBlitz3.ab3@23106>    JSR asmconst
00031C40 <AmiBlitz3.ab3@23107>   SUBQ.l #1,destpointer
00031C44 <AmiBlitz3.ab3@23108>    BSR.w insasm2
00031C4A <AmiBlitz3.ab3@23109>   ADDQ.l #1,destpointer
00031C4E <AmiBlitz3.ab3@23110>    BSR.w writebyte
00031C52 <AmiBlitz3.ab3@23113>   CMP.w #$2C,D0   ;','
00031C56 <AmiBlitz3.ab3@23114>    BEQ.w 'bloop
00031C58 <AmiBlitz3.ab3@23115>  RTS
00031C5A <AmiBlitz3.ab3@23118>   MOVEQ.l #$10,D3
00031C62 <AmiBlitz3.ab3@23127>   MOVE.b #1,_dcb
00031C68 <AmiBlitz3.ab3@23129>   JSR asmconst
00031C6E <AmiBlitz3.ab3@23131>   CLR.b _dcb
00031C72 <AmiBlitz3.ab3@23133>   BSR.w insasm2
00031C76 <AmiBlitz3.ab3@23136>   BSR.w writebyte
00031C7A <AmiBlitz3.ab3@23137>   BSR.w writebyte
00031C7E <AmiBlitz3.ab3@23139>   CMP.w #$2C,D0      ;','
00031C82 <AmiBlitz3.ab3@23140>    BEQ.w 'wloop
00031C84 <AmiBlitz3.ab3@23141> RTS
00031C8A <AmiBlitz3.ab3@23145>   ADDQ.l #3,destpointer
00031C92 <AmiBlitz3.ab3@23146>   ANDI.w #$FFFC,destpointer+2
00031C94 <AmiBlitz3.ab3@23147> RTS
00031C9A <AmiBlitz3.ab3@23151>   ADDQ.l #7,destpointer
00031CA2 <AmiBlitz3.ab3@23152>   ANDI.w #$FFF8,destpointer+2
00031CA4 <AmiBlitz3.ab3@23153> RTS
00031CAA <AmiBlitz3.ab3@23157>   ADDQ.l #1,destpointer                                    ;even
00031CB2 <AmiBlitz3.ab3@23158>   BCLR #$0,destpointer+3
00031CB4 <AmiBlitz3.ab3@23159> RTS
00031CB6 <AmiBlitz3.ab3@23162> datasize: Ds.w 1
00031CBC <AmiBlitz3.ab3@23172>   TST.b debugmode
00031CC0 <AmiBlitz3.ab3@23173>   BEQ.w 'skip
00031CC4 <AmiBlitz3.ab3@23174>   MOVE.w #$4420,D0                                         ;'D '
00031CC8 <AmiBlitz3.ab3@23175>   MOVE.b datasize+1(PC),D0
00031CCC <AmiBlitz3.ab3@23176>  BRA.w pokedata2
00031CCE <AmiBlitz3.ab3@23179> RTS
00031CD2 <AmiBlitz3.ab3@23183>   MOVE.w #$FC17,D1           ;#64535
00031CD8 <AmiBlitz3.ab3@23184>    JSR uselib
00031CE2 <AmiBlitz3.ab3@23187>    MOVE.w oldqflag,instringon
00031CE8 <AmiBlitz3.ab3@23188>   MOVEA.l lastsourcepos,A5
00031CEE <AmiBlitz3.ab3@23190>    JSR sizespec2        ;get size of it into d1
00031CF4 <AmiBlitz3.ab3@23191>   MOVE.w D1,datasize
00031CF8 <AmiBlitz3.ab3@23195>   CMP.w #$7,D1
00031CFC <AmiBlitz3.ab3@23196>    BEQ.w 'string
00031CFE <AmiBlitz3.ab3@23198>   MOVE.w D1,-(A7)
00031D02 <AmiBlitz3.ab3@23201>   BSR.w pdt
00031D04 <AmiBlitz3.ab3@23202>   MOVE.w (A7),D2
00031D08 <AmiBlitz3.ab3@23203>    BSR.w fetchdata
00031D0A <AmiBlitz3.ab3@23204>   CMP.w (A7),D2                                            ;datamode
00031D0E <AmiBlitz3.ab3@23205>    BEQ.w 'dataok
00031D10 <AmiBlitz3.ab3@23207>   MOVE.w D2,D1
00031D12 <AmiBlitz3.ab3@23208>   MOVE.w (A7),D2
00031D16 <AmiBlitz3.ab3@23209>   CMP.w #$2,D2
00031D1A <AmiBlitz3.ab3@23210>    BNE.w 'notw
00031D1E <AmiBlitz3.ab3@23211>   CMP.w #$3,D1
00031D22 <AmiBlitz3.ab3@23212>    BNE.w baddaterr
00031D28 <AmiBlitz3.ab3@23213>   CMP.l #$10000,D3        ; was  #65536
00031D2C <AmiBlitz3.ab3@23214>    BCC.w baddaterr
00031D30 <AmiBlitz3.ab3@23215>  BRA.w 'dataok
00031D34 <AmiBlitz3.ab3@23218>   CMP.w #$1,D2
00031D38 <AmiBlitz3.ab3@23219>    BNE.w 'notb
00031D3C <AmiBlitz3.ab3@23220>   CMP.w #$2,D1
00031D40 <AmiBlitz3.ab3@23221>    BNE.w baddaterr
00031D46 <AmiBlitz3.ab3@23222>   CMP.l #$100,D3
00031D4A <AmiBlitz3.ab3@23223>    BCC.w baddaterr
00031D4E <AmiBlitz3.ab3@23224>  BRA.w 'dataok
00031D52 <AmiBlitz3.ab3@23227>  BRA.w baddaterr
00031D56 <AmiBlitz3.ab3@23230>   CMP.w #$3,D2
00031D5A <AmiBlitz3.ab3@23231>   BCC.w 'notword
00031D5E <AmiBlitz3.ab3@23232>   BSR.w pokedata2
00031D62 <AmiBlitz3.ab3@23233>  BRA.w 'next
00031D68 <AmiBlitz3.ab3@23237>   TST.b iee
00031D6C <AmiBlitz3.ab3@23238>   BEQ 'old
00031D70 <AmiBlitz3.ab3@23239>   CMP.b #5,d2
00031D74 <AmiBlitz3.ab3@23240>   BNE 'old
00031D78 <AmiBlitz3.ab3@23241>   Dc.l $f2006400                                           ;  fpu data write fmove.s fp0,d0
00031D7C <AmiBlitz3.ab3@23246>   BSR.w pokedata2l                                          ;write data >3
00031D82 <AmiBlitz3.ab3@23249>   JSR reget
00031D86 <AmiBlitz3.ab3@23250>   CMP.w #$2C,D0     ;','
00031D8A <AmiBlitz3.ab3@23251>    BEQ.w 'more
00031D8C <AmiBlitz3.ab3@23252>   ADDQ.w #2,A7
00031D8E <AmiBlitz3.ab3@23253>  RTS
00031D92 <AmiBlitz3.ab3@23256>    BSR.w pdt
00031D98 <AmiBlitz3.ab3@23257>   MOVE.l data2,-(A7)
00031D9C <AmiBlitz3.ab3@23258>    BSR.w pokedata2l
00031D9E <AmiBlitz3.ab3@23259>   MOVEQ.l #$00,D1
00031DA4 <AmiBlitz3.ab3@23261>    JSR get1bytemain
00031DA8 <AmiBlitz3.ab3@23262>    BEQ.w 'done
00031DAC <AmiBlitz3.ab3@23263>   CMP.w #$22,D0       ;'"'
00031DB0 <AmiBlitz3.ab3@23264>    BEQ.w 'quoted
00031DB4 <AmiBlitz3.ab3@23265>   CMP.w #$2C,D0       ;','
00031DB8 <AmiBlitz3.ab3@23266>    BEQ.w 'done
00031DBC <AmiBlitz3.ab3@23269>    BSR.w pokedata2b
00031DBE <AmiBlitz3.ab3@23270>   ADDQ.w #1,D1
00031DC4 <AmiBlitz3.ab3@23271>    JSR getchar
00031DC6 <AmiBlitz3.ab3@23272>   TST.w D0
00031DCA <AmiBlitz3.ab3@23273>    BEQ.w 'done
00031DCE <AmiBlitz3.ab3@23274>   CMP.w #$2C,D0
00031DD2 <AmiBlitz3.ab3@23275>    BEQ.w 'done       ;','
00031DD6 <AmiBlitz3.ab3@23276>  BRA.w 'loop2
00031DD8 <AmiBlitz3.ab3@23281>    MOVEQ #0,d0
00031DDA <AmiBlitz3.ab3@23282>    MOVE.b (a5)+,d0
00031DDE <AmiBlitz3.ab3@23284>    BEQ.w notqerr2
00031DE2 <AmiBlitz3.ab3@23285>   CMP.w #$22,D0       ;'"'
00031DE6 <AmiBlitz3.ab3@23286>    BEQ.w 'done2
00031DEA <AmiBlitz3.ab3@23287>    BSR.w pokedata2b
00031DEC <AmiBlitz3.ab3@23288>   ADDQ.w #1,D1
00031DF0 <AmiBlitz3.ab3@23289>  BRA.w 'quoted
00031DF6 <AmiBlitz3.ab3@23293>   CLR.w instringon
00031DFC <AmiBlitz3.ab3@23295>   JSR get1bytemain
00031DFE <AmiBlitz3.ab3@23298>   MOVEA.l (A7)+,A0
00031E04 <AmiBlitz3.ab3@23299>   MOVE.w dontwrite_nomemleft,D2
00031E08 <AmiBlitz3.ab3@23300>    BNE.w 'nopoke
00031E0A <AmiBlitz3.ab3@23301>   MOVE.l D1,(A0)
00031E10 <AmiBlitz3.ab3@23304>   ADDQ.l #1,data2
00031E18 <AmiBlitz3.ab3@23305>   BCLR #$0,data2+3
00031E1C <AmiBlitz3.ab3@23306>   CMP.w #$2C,D0      ;','
00031E20 <AmiBlitz3.ab3@23307>    BEQ.w 'string
00031E22 <AmiBlitz3.ab3@23308> RTS
00031E28 <AmiBlitz3.ab3@23312> notqerr2           JMP notqerr
00031E2E <AmiBlitz3.ab3@23313> JUMP_vardeclareerr JMP vardeclareerr
00031E34 <AmiBlitz3.ab3@23321>   MOVE.w proceduremode,D1                                  ;doshared
00031E38 <AmiBlitz3.ab3@23324>   BNE.w 'l1
00031E3A <AmiBlitz3.ab3@23325>   MOVE.w D1,-(A7)
00031E40 <AmiBlitz3.ab3@23326>   CLR.w proceduremode
00031E46 <AmiBlitz3.ab3@23329>   LEA varbase,a2
00031E4A <AmiBlitz3.ab3@23330>   BSR.w getparameter
00031E4C <AmiBlitz3.ab3@23331>   MOVE.w d2,-(a7)
00031E52 <AmiBlitz3.ab3@23332>    JSR findvariable
00031E56 <AmiBlitz3.ab3@23333>    BEQ 'checkdim
00031E5C <AmiBlitz3.ab3@23334>    LEA sharebase,a2
00031E5E <AmiBlitz3.ab3@23335>    MOVEQ #$f+4,d7
00031E62 <AmiBlitz3.ab3@23336>    BSR.w findlab                                         ;find var
00031E66 <AmiBlitz3.ab3@23337>    BEQ.b dupsherr
00031E6A <AmiBlitz3.ab3@23338>    BSR addlabel
00031E6E <AmiBlitz3.ab3@23339>    CMP.b #".",d0
00031E72 <AmiBlitz3.ab3@23340>    BNE JUMP_vardeclareerr
00031E74 <AmiBlitz3.ab3@23341>    MOVE.l a2,a3
00031E7A <AmiBlitz3.ab3@23342>    JSR claptonb       ; jump to a copy of fvaradd 'clapton
00031E7C <AmiBlitz3.ab3@23373>   MOVE.w (a7)+,d2
00031E80 <AmiBlitz3.ab3@23374>    CMP.b #",",d0
00031E84 <AmiBlitz3.ab3@23375>    BNE 'ret
00031E8A <AmiBlitz3.ab3@23376>    JSR get1bytemain
00031E8E <AmiBlitz3.ab3@23377>  BRA 'again2
00031E94 <AmiBlitz3.ab3@23380>   MOVE.w (A7)+,proceduremode
00031E96 <AmiBlitz3.ab3@23381>  RTS
00031E9C <AmiBlitz3.ab3@23384>    CMP.w #2,6(a2)
00031EA0 <AmiBlitz3.ab3@23385>    BEQ 'do
00031EA6 <AmiBlitz3.ab3@23386>    CMP.w #$102,6(a2)
00031EAA <AmiBlitz3.ab3@23387>    BEQ 'do
00031EB0 <AmiBlitz3.ab3@23388>  JMP errormsg_declaredtwice                                 ;was BRA 'errormsg_declaredtwice_
00031EB6 <AmiBlitz3.ab3@23391>   LEA varbase,a0
00031EB8 <AmiBlitz3.ab3@23394>   MOVE.l (A0),D0                                           ;find label
00031EBC <AmiBlitz3.ab3@23395>    BEQ.b 'z1
00031EBE <AmiBlitz3.ab3@23396>    CMP.l d0,a2
00031EC2 <AmiBlitz3.ab3@23397>    BEQ 'z1
00031EC4 <AmiBlitz3.ab3@23398>    MOVE.l d0,a0
00031EC8 <AmiBlitz3.ab3@23399>  BRA 'm1
00031ECA <AmiBlitz3.ab3@23402>   MOVE.l (a2),d1
00031ECC <AmiBlitz3.ab3@23403>     MOVE.l d1,(a0)
00031ECE <AmiBlitz3.ab3@23404>     CLR.l (a2)
00031ED4 <AmiBlitz3.ab3@23405>     LEA sharebase,a0
00031ED6 <AmiBlitz3.ab3@23406>     MOVE.l (a0),(a2)
00031ED8 <AmiBlitz3.ab3@23407>     MOVE.l a2,(a0)
00031EDE <AmiBlitz3.ab3@23408>     JSR get1bytemain
00031EE4 <AmiBlitz3.ab3@23409>     JSR get1bytemain
00031EE8 <AmiBlitz3.ab3@23410>  BRA 'domore
00031EF0 <AmiBlitz3.ab3@23413>   MOVE.b #1,nowdeclare
00031EF2 <AmiBlitz3.ab3@23415>   MOVE.w D1,-(A7)
00031EF8 <AmiBlitz3.ab3@23416>   CLR.w proceduremode
00031EFC <AmiBlitz3.ab3@23419>    BSR.w getparameter
00031EFE <AmiBlitz3.ab3@23420>   MOVE.w D2,-(A7)
00031F04 <AmiBlitz3.ab3@23422>   LEA firstglob,A2
00031F08 <AmiBlitz3.ab3@23423>    BSR.w findvariable2
00031F0C <AmiBlitz3.ab3@23424>    BNE.b 'notfound
00031F12 <AmiBlitz3.ab3@23427>   MOVE.b flagmask+1,D1
00031F16 <AmiBlitz3.ab3@23428>   MOVE.b $7(A2),D3
00031F18 <AmiBlitz3.ab3@23429>   EOR.b D3,D1
00031F1C <AmiBlitz3.ab3@23430>    BEQ.w dupsherr
00031F20 <AmiBlitz3.ab3@23431>    BSR.w findlab
00031F24 <AmiBlitz3.ab3@23432>    BEQ.b 'try2
00031F28 <AmiBlitz3.ab3@23435>    BSR.w addlabel
00031F2A <AmiBlitz3.ab3@23436>   MOVE.w (A7)+,D2
00031F2C <AmiBlitz3.ab3@23437>   MOVE.l A2,-(A7)   ;new glob
00031F30 <AmiBlitz3.ab3@23438>    BSR.w fetchvars     
00031F32 <AmiBlitz3.ab3@23439>   MOVEA.l (A7)+,A2
00031F34 <AmiBlitz3.ab3@23440>   MOVEQ.l #$04,D1
00031F36 <AmiBlitz3.ab3@23441>   ADDQ.w #4,A2
00031F38 <AmiBlitz3.ab3@23442>   ADDQ.w #4,A3
00031F3A <AmiBlitz3.ab3@23445>     MOVE.w (A3)+,(A2)+
00031F3E <AmiBlitz3.ab3@23446>   DBF D1,'loop
00031F46 <AmiBlitz3.ab3@23448>   BTST #$1,flagmask+1
00031F4A <AmiBlitz3.ab3@23449>    BEQ.w 'done
00031F50 <AmiBlitz3.ab3@23450>    JSR get1bytemain
00031F54 <AmiBlitz3.ab3@23451>   CMP.w #$29,D0         ;')'
00031F58 <AmiBlitz3.ab3@23452>    BNE.w JUMP_syntaxerr
00031F5E <AmiBlitz3.ab3@23453>    JSR get1bytemain
00031F62 <AmiBlitz3.ab3@23456>    CMP.w #$2C,D0         ;','
00031F66 <AmiBlitz3.ab3@23457>    BNE.w 'done2
00031F6C <AmiBlitz3.ab3@23458>    JSR get1bytemain
00031F70 <AmiBlitz3.ab3@23459>  BRA.w 'loop2
00031F76 <AmiBlitz3.ab3@23462>   MOVE.w (A7)+,proceduremode
00031F78 <AmiBlitz3.ab3@23463> RTS
00031F7C <AmiBlitz3.ab3@23470>    BSR.w makeiname
00031F82 <AmiBlitz3.ab3@23471>    JSR check_incdir                                        ; ergebnis in d2
00031F88 <AmiBlitz3.ab3@23473>    LEA ptr_parameterstore,a1
00031F8A <AmiBlitz3.ab3@23474>    MOVE.l d2,-(a7)
00031F90 <AmiBlitz3.ab3@23475>    LEA includetemp,a0                                      ; filename in includetemp packen
00031F92 <AmiBlitz3.ab3@23478>      MOVE.b (a1)+,(a0)+
00031F96 <AmiBlitz3.ab3@23479>    BNE 'l4
00031F9C <AmiBlitz3.ab3@23481>    LEA ptr_parameterstore,a1
00031F9E <AmiBlitz3.ab3@23482>    MOVE.l a1,a0
00031FA0 <AmiBlitz3.ab3@23485>     TST.b (a0)+
00031FA4 <AmiBlitz3.ab3@23486>    BNE 'l1
00031FA6 <AmiBlitz3.ab3@23489>      MOVE.b -(a0),d0
00031FAA <AmiBlitz3.ab3@23490>      CMP.b #":",d0
00031FAE <AmiBlitz3.ab3@23491>       BEQ 'out
00031FB2 <AmiBlitz3.ab3@23492>      CMP.b #"/",d0
00031FB6 <AmiBlitz3.ab3@23493>       BEQ 'out
00031FB8 <AmiBlitz3.ab3@23494>      CMP.l a1,a0
00031FBC <AmiBlitz3.ab3@23495>       BEQ 'out2
00031FC0 <AmiBlitz3.ab3@23496>  BRA 'l2
00031FC2 <AmiBlitz3.ab3@23499>    ADDQ.l #1,a0                                            ; dateinamen vom pfad extrahiert
00031FC4 <AmiBlitz3.ab3@23502>    MOVEQ.l #-$01,D2
00031FC6 <AmiBlitz3.ab3@23505>      ADDQ.w #1,D2
00031FC8 <AmiBlitz3.ab3@23506>      MOVE.b (a0)+,(a1)+
00031FCC <AmiBlitz3.ab3@23507>    BNE 'l3
00031FCE <AmiBlitz3.ab3@23508>    CLR.b (a1)+
00031FD4 <AmiBlitz3.ab3@23510>    LEA ptr_parameterstore,a1
00031FD8 <AmiBlitz3.ab3@23511>    BSR.w findxinc                                         ;find include
00031FDC <AmiBlitz3.ab3@23512>     BEQ.w 'outb
00031FDE <AmiBlitz3.ab3@23514>    MOVE.w D2,-(A7)
00031FE2 <AmiBlitz3.ab3@23515>    BSR.w addlabel
00031FE4 <AmiBlitz3.ab3@23516>    MOVE.w (A7)+,D2
00031FEA <AmiBlitz3.ab3@23518>    LEA ptr_parameterstore,a1
00031FF0 <AmiBlitz3.ab3@23519>    LEA includetemp,a0                                      ; namen in includetemp schreiben
00031FF2 <AmiBlitz3.ab3@23522>     MOVE.b (a0)+,(a1)+
00031FF6 <AmiBlitz3.ab3@23523>    BNE 'l4b
00031FF8 <AmiBlitz3.ab3@23525>    MOVE.l (a7)+,d2
00031FFE <AmiBlitz3.ab3@23526>    LEA ptr_parameterstore,a1
00032002 <AmiBlitz3.ab3@23528>  BRA.w doinc2
00032008 <AmiBlitz3.ab3@23532>    LEA ptr_parameterstore,a1
0003200E <AmiBlitz3.ab3@23533>    LEA includetemp,a0
00032010 <AmiBlitz3.ab3@23536>     MOVE.b (a0)+,(a1)+
00032014 <AmiBlitz3.ab3@23537>    BNE 'l4b2
00032016 <AmiBlitz3.ab3@23539>    MOVE.l (a7)+,d2
0003201C <AmiBlitz3.ab3@23540>    LEA ptr_parameterstore,a1
0003201E <AmiBlitz3.ab3@23542> RTS
00032022 <AmiBlitz3.ab3@23546>   BSR.w makeiname                                              ; test and get the parameter (includestring)
00032028 <AmiBlitz3.ab3@23550>   JSR check_IncBinDir                                          ; to fix the path problem in CLIMode  tomsmart1
0003202E <AmiBlitz3.ab3@23552>   MOVEA.l _dosbase,A6
00032030 <AmiBlitz3.ab3@23554>   MOVE.l D0,D7                                                 ; store Lockpointer
00032034 <AmiBlitz3.ab3@23555>    BEQ.w error_cant_open_include                               ; no pointer => errormessage
00032036 <AmiBlitz3.ab3@23556>   MOVE.l D7,D1                                                 ; begin get the size of the file to include
0003203C <AmiBlitz3.ab3@23557>   MOVE.l ptr_macrobuffer_begin,D2
00032040 <AmiBlitz3.ab3@23558>    JSR _Examine(A6)
00032046 <AmiBlitz3.ab3@23559>   MOVEA.l ptr_macrobuffer_begin,A0
0003204A <AmiBlitz3.ab3@23560>   MOVE.l $4(A0),D0
0003204E <AmiBlitz3.ab3@23561>    BPL.w error_cant_open_include                               ; something went wrong => errormessage
00032052 <AmiBlitz3.ab3@23562>   MOVE.l $7C(A0),D3      ;length                                       ; store the size of the file to include
00032054 <AmiBlitz3.ab3@23563>   MOVE.l D7,D1                                                 ; begin unlock the file
00032058 <AmiBlitz3.ab3@23564>    JSR _UnLock(A6)
0003205E <AmiBlitz3.ab3@23566>   MOVE.l #ptr_parameterstore,D1                                ; begin Open and Load the file
00032064 <AmiBlitz3.ab3@23567>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2                       
00032068 <AmiBlitz3.ab3@23568>    JSR _Open(A6)
0003206A <AmiBlitz3.ab3@23569>   MOVE.l D0,D7
0003206E <AmiBlitz3.ab3@23570>    BEQ.w error_cant_open_include
00032074 <AmiBlitz3.ab3@23571>   MOVE.l destpointer,D0
00032076 <AmiBlitz3.ab3@23572>   ADD.l D3,D0
0003207C <AmiBlitz3.ab3@23573>   CMP.l destbufferend,D0
00032080 <AmiBlitz3.ab3@23574>    BHI.w 'over
00032086 <AmiBlitz3.ab3@23575>   MOVE.l destpointer,D2
00032088 <AmiBlitz3.ab3@23576>   MOVE.l D7,D1
0003208C <AmiBlitz3.ab3@23577>    JSR _Read(A6)
00032092 <AmiBlitz3.ab3@23578>   CMP.l #$FFFFFFFF,D0              ; was -1
00032096 <AmiBlitz3.ab3@23579>    BEQ.w error_reading_file
0003209C <AmiBlitz3.ab3@23580>   ADD.l D0,destpointer
000320A0 <AmiBlitz3.ab3@23581>  BRA.w 'close
000320A8 <AmiBlitz3.ab3@23584>   MOVE.w #$FFFF,dontwrite_nomemleft          ; was -1
000320AE <AmiBlitz3.ab3@23585>   MOVE.l D0,destpointer
000320B0 <AmiBlitz3.ab3@23588>   MOVE.l D7,D1
000320B4 <AmiBlitz3.ab3@23589> JMP _Close(A6)
000320BA <AmiBlitz3.ab3@23592> JUMP_illdirerr JMP illdirerr
000320C0 <AmiBlitz3.ab3@23598>   TST.w dirmode                                            ;include  open
000320C4 <AmiBlitz3.ab3@23599>    BNE.w JUMP_illdirerr
000320C8 <AmiBlitz3.ab3@23601>   BSR.w makeiname
000320CE <AmiBlitz3.ab3@23603>   JSR check_incdir
000320D2 <AmiBlitz3.ab3@23607>   BSR.w findconstant
000320D6 <AmiBlitz3.ab3@23608>    BEQ.w alincerr
000320DC <AmiBlitz3.ab3@23610>   LEA constantbase,A2
000320E0 <AmiBlitz3.ab3@23611>   BSR.w addhere2
000320E4 <AmiBlitz3.ab3@23613>   CLR.w $C(A2)
000320E8 <AmiBlitz3.ab3@23614>   CLR.l $4(A2)
000320EE <AmiBlitz3.ab3@23616>   MOVE.l #ptr_parameterstore,D1
000320F0 <AmiBlitz3.ab3@23617>   MOVE.l d1,a0
000320F6 <AmiBlitz3.ab3@23618>   LEA includetemp2,a1
000320F8 <AmiBlitz3.ab3@23621>     MOVE.b (a0)+,(a1)+
000320FC <AmiBlitz3.ab3@23622>   BNE 'l1
00032102 <AmiBlitz3.ab3@23623>   JSR save_includename
0003210C <AmiBlitz3.ab3@23624>   MOVE.l #0,include_process
00032114 <AmiBlitz3.ab3@23626>   CMP.l #$62623200,-4(a0)                                  ;.bb2
00032118 <AmiBlitz3.ab3@23627>   BEQ 'ok
00032120 <AmiBlitz3.ab3@23628>   CMP.l #$61623300,-4(a0)                                  ;.ab3
00032124 <AmiBlitz3.ab3@23629>   BEQ 'ok_tokenize
0003212C <AmiBlitz3.ab3@23630>   CMP.l #$61623200,-4(a0)                                  ;.ab2
00032130 <AmiBlitz3.ab3@23631>   BEQ 'ok_tokenize
00032138 <AmiBlitz3.ab3@23632>   CMP.l #$2e626200,-4(a0)                                  ;.bb files
0003213C <AmiBlitz3.ab3@23633>   BEQ 'ok
00032142 <AmiBlitz3.ab3@23634>  JMP errortoken                                             ;can only include
0003214C <AmiBlitz3.ab3@23637>    MOVE.l #-1,include_process                              ; must tokenize the include
00032152 <AmiBlitz3.ab3@23640>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00032158 <AmiBlitz3.ab3@23641>   MOVEA.l _dosbase,A6
0003215C <AmiBlitz3.ab3@23642>   JSR _Open(A6)
00032160 <AmiBlitz3.ab3@23643>   MOVE.l D0,$8(A2)
00032164 <AmiBlitz3.ab3@23644>   BEQ.w error_cant_open_include
0003216A <AmiBlitz3.ab3@23645>   CLR.l includeline
0003216E <AmiBlitz3.ab3@23646>   MOVE.l 8(a2),d1
00032170 <AmiBlitz3.ab3@23647>   MOVE.l d3,-(a7)
00032172 <AmiBlitz3.ab3@23648>   MOVEQ #0,d2
00032174 <AmiBlitz3.ab3@23649>   MOVEQ #1,d3
00032178 <AmiBlitz3.ab3@23650>   JSR _Seek(a6)                                            ; -66
0003217C <AmiBlitz3.ab3@23651>   MOVE.l 8(a2),d1
0003217E <AmiBlitz3.ab3@23652>   MOVEQ #0,d2
00032180 <AmiBlitz3.ab3@23653>   MOVEQ #-1,d3
00032184 <AmiBlitz3.ab3@23654>   JSR _Seek(a6)                                            ; -66
00032186 <AmiBlitz3.ab3@23655>   MOVE.l (a7)+,d3
00032188 <AmiBlitz3.ab3@23656>   ADDQ.l #4,d0
0003218E <AmiBlitz3.ab3@23660>   MOVE.l #$10000,D1
00032194 <AmiBlitz3.ab3@23662>   MOVEA.l _execbase,A6
00032198 <AmiBlitz3.ab3@23666>   JSR _AllocVec(a6)
0003219C <AmiBlitz3.ab3@23670>   MOVE.l D0,$4(A2)
000321A0 <AmiBlitz3.ab3@23671>   MOVE.l D0,$E(A2)
000321A2 <AmiBlitz3.ab3@23672>   MOVEA.l D0,A5
000321A8 <AmiBlitz3.ab3@23680>   ADDQ.w #1,ininclude                                      ;enter include
000321AE <AmiBlitz3.ab3@23684>   LEA _include,a0
000321B2 <AmiBlitz3.ab3@23685>   MOVEM.l a0-a6/d0-d7,-(a7)
000321B8 <AmiBlitz3.ab3@23686>   LEA ptr_parameterstore,a1
000321BA <AmiBlitz3.ab3@23689>     MOVE.b (a0)+,(a1)+
000321BE <AmiBlitz3.ab3@23690>   BNE 'l1b
000321C0 <AmiBlitz3.ab3@23692>   MOVEQ #9,d2
000321C6 <AmiBlitz3.ab3@23693>   JSR findlabel2
000321CA <AmiBlitz3.ab3@23694>   BNE 'd
000321D2 <AmiBlitz3.ab3@23695>   MOVE.l #1,8(a2)
000321D6 <AmiBlitz3.ab3@23696>   MOVEM.l (a7)+,a0-a6/d0-d7
000321DA <AmiBlitz3.ab3@23697>  BRA 'd2
000321E0 <AmiBlitz3.ab3@23700>   JSR addlabelhash
000321E8 <AmiBlitz3.ab3@23701>   MOVE.l #$1,$4(A2)
000321F0 <AmiBlitz3.ab3@23702>   MOVE.l #1,8(a2)
000321F4 <AmiBlitz3.ab3@23703>   MOVEM.l (a7)+,a0-a6/d0-d7
000321FA <AmiBlitz3.ab3@23706>   LEA inctab,a0
000321FC <AmiBlitz3.ab3@23707>   MOVEQ #0,d1
00032202 <AmiBlitz3.ab3@23708>   MOVE.w ininclude,d1
00032206 <AmiBlitz3.ab3@23709>   CLR.l $0(a0,d1*4)
0003220C <AmiBlitz3.ab3@23711>   MOVEA.l passstack,A7
00032212 <AmiBlitz3.ab3@23712> JMP passnxt
00032218 <AmiBlitz3.ab3@23715> JUMP_dupmacerr  JMP dupmacerr
0003221E <AmiBlitz3.ab3@23716> JUMP_macenderr  JMP macenderr
00032224 <AmiBlitz3.ab3@23717> JUMP_macnesterr JMP macnesterr
00032226 <AmiBlitz3.ab3@23720> coolnest:   Ds.w 1
0003222A <AmiBlitz3.ab3@23721> macline:    Ds.l 1
00032234 <AmiBlitz3.ab3@23727>   MOVE.l linenumat,macline
00032238 <AmiBlitz3.ab3@23729>    BSR.w makename2
0003223C <AmiBlitz3.ab3@23730>    BEQ.w JUMP_syntaxerr
00032242 <AmiBlitz3.ab3@23732>    CLR.b thenmode
0003224C <AmiBlitz3.ab3@23736>    MOVE.w oldqflag,instringon
00032252 <AmiBlitz3.ab3@23737>   MOVEA.l lastsourcepos,A5
00032256 <AmiBlitz3.ab3@23739>    BSR.w findmac
0003225A <AmiBlitz3.ab3@23740>    BEQ.w JUMP_dupmacerr
0003225E <AmiBlitz3.ab3@23741>    BSR.w addlabel
00032262 <AmiBlitz3.ab3@23742>   CLR.w $A(A2)
00032268 <AmiBlitz3.ab3@23743>   MOVEA.l ptr_macrobuffer_begin,A0
0003226A <AmiBlitz3.ab3@23744>   MOVEQ.l #$00,D2     ;flag for nothing got yet!
00032270 <AmiBlitz3.ab3@23745>   CLR.w coolnest
00032272 <AmiBlitz3.ab3@23749>   MOVE.b (a5),d0
00032276 <AmiBlitz3.ab3@23750>      BEQ 'l3
0003227A <AmiBlitz3.ab3@23751>      CMP.b #" ",d0
0003227E <AmiBlitz3.ab3@23752>       BNE 'l2                                              ;space macro
00032280 <AmiBlitz3.ab3@23753>       ADDQ.l #1,a5
00032284 <AmiBlitz3.ab3@23754>  BRA 'l1
00032288 <AmiBlitz3.ab3@23757>    CMP.b #";",d0
0003228C <AmiBlitz3.ab3@23758>       BNE 'l3
0003228E <AmiBlitz3.ab3@23761>    MOVE.b (a5),d0
00032292 <AmiBlitz3.ab3@23762>       BEQ 'l5
00032296 <AmiBlitz3.ab3@23763>       BSR.w macputb                                      ;add comment
00032298 <AmiBlitz3.ab3@23764>       ADDQ.l #1,a5
0003229C <AmiBlitz3.ab3@23765>  BRA 'l4
000322A0 <AmiBlitz3.ab3@23768>    MOVE.b #":",d0
000322A4 <AmiBlitz3.ab3@23769>       BSR.w macputb
000322A8 <AmiBlitz3.ab3@23770>       MOVE.b #"@",d0
000322AC <AmiBlitz3.ab3@23771>       BSR.w macputb
000322B4 <AmiBlitz3.ab3@23774>    MOVE.b #0,temp
000322BC <AmiBlitz3.ab3@23775>       MOVE.b #0,thenmode
000322C2 <AmiBlitz3.ab3@23778>   JSR getcharb   ;get next character
000322C4 <AmiBlitz3.ab3@23780>   TST.w D0
000322C8 <AmiBlitz3.ab3@23781>    BNE.w 'skip
000322CC <AmiBlitz3.ab3@23782>   MOVEM.l D2/A0/A2,-(A7)
000322D2 <AmiBlitz3.ab3@23784>   CMP.w #"@@",-3(a5)
000322D6 <AmiBlitz3.ab3@23785>   BNE 'l2a
000322DC <AmiBlitz3.ab3@23786>   JSR nextline
000322E0 <AmiBlitz3.ab3@23787>   BEQ.w JUMP_macenderr
000322E4 <AmiBlitz3.ab3@23788>   MOVEM.l (A7)+,D2/A0/A2
000322E8 <AmiBlitz3.ab3@23789>  BRA.w 'gather
000322EE <AmiBlitz3.ab3@23793>    JSR nextline
000322F2 <AmiBlitz3.ab3@23794>    BEQ.w JUMP_macenderr
000322F6 <AmiBlitz3.ab3@23795>   MOVEM.l (A7)+,D2/A0/A2
000322F8 <AmiBlitz3.ab3@23796>   TST.w D2
000322FC <AmiBlitz3.ab3@23797>    BEQ.w 'gather
000322FE <AmiBlitz3.ab3@23801>   MOVE.b (a5),d0
00032302 <AmiBlitz3.ab3@23802>       CMP.b #" ",d0
00032306 <AmiBlitz3.ab3@23803>       BNE 'l1a
00032308 <AmiBlitz3.ab3@23804>       ADDQ.w #1,a5
0003230C <AmiBlitz3.ab3@23805>  BRA 'l2b
00032312 <AmiBlitz3.ab3@23808>   TST.b thenmode
00032316 <AmiBlitz3.ab3@23809>      BEQ 'l3a
00032318 <AmiBlitz3.ab3@23810>      MOVEQ #":",d0
0003231C <AmiBlitz3.ab3@23811>      BSR.w macputb
00032320 <AmiBlitz3.ab3@23812>      MOVE.w #-$7FFE,D0                                     ;write end if
00032324 <AmiBlitz3.ab3@23813>      BSR macputw
00032328 <AmiBlitz3.ab3@23814>      MOVE.w #$800b,d0
0003232C <AmiBlitz3.ab3@23815>      BSR.w macputw
00032332 <AmiBlitz3.ab3@23816>      CLR.b thenmode
00032334 <AmiBlitz3.ab3@23820>    MOVEQ.l #$3A,D0
0003233C <AmiBlitz3.ab3@23822>      MOVE.b #1,temp
00032340 <AmiBlitz3.ab3@23825>  BRA.w 'notend2
00032344 <AmiBlitz3.ab3@23828>   BPL.w 'notend2
00032348 <AmiBlitz3.ab3@23829>   CMP.w #-$7FF3,D0         ; was #$800d                                ;macro ?
0003234C <AmiBlitz3.ab3@23830>    BNE.w 'notamac
00032352 <AmiBlitz3.ab3@23831>   ADDQ.w #1,coolnest
00032356 <AmiBlitz3.ab3@23832>  BRA.w 'notend
0003235A <AmiBlitz3.ab3@23836>   CMP.w #$80d7,d0                                          ;object ?
0003235E <AmiBlitz3.ab3@23837>     BNE 'l1x
00032364 <AmiBlitz3.ab3@23838>     TST.b objectcount
00032368 <AmiBlitz3.ab3@23839>     BNE JUMP_macnesterr
0003236C <AmiBlitz3.ab3@23842>   CMP.w #$8021,d0
00032370 <AmiBlitz3.ab3@23843>     BNE 'nothen
00032378 <AmiBlitz3.ab3@23844>     MOVE.b #1,thenmode
0003237E <AmiBlitz3.ab3@23847>   TST.b thenmode
00032382 <AmiBlitz3.ab3@23848>         BEQ 'l1c
00032386 <AmiBlitz3.ab3@23849>    CMP.w #$8002,d0                                         ;end if
0003238A <AmiBlitz3.ab3@23850>    BNE 'l1c
0003238E <AmiBlitz3.ab3@23851>    MOVEM.l d0/a5,-(a7)
00032394 <AmiBlitz3.ab3@23852>    JSR get1bytemain
00032396 <AmiBlitz3.ab3@23853>    MOVE.w d0,d1
0003239A <AmiBlitz3.ab3@23854>    MOVEM.l (a7)+,a5/d0
0003239E <AmiBlitz3.ab3@23855>    CMP.w #$800b,d1
000323A2 <AmiBlitz3.ab3@23856>    BNE 'l1c
000323A8 <AmiBlitz3.ab3@23857>    CLR.b thenmode
000323AC <AmiBlitz3.ab3@23861>    CMP.w #-$7FFE,D0   ; was #$8002                                     ;end ?
000323B0 <AmiBlitz3.ab3@23862>    BNE.w 'notend
000323B2 <AmiBlitz3.ab3@23864>    MOVE.l a5,-(a7)
000323B8 <AmiBlitz3.ab3@23865>    JSR get1bytemain
000323BA <AmiBlitz3.ab3@23866>    MOVE.l (a7)+,a5
000323BC <AmiBlitz3.ab3@23867>    TST.w d0
000323C0 <AmiBlitz3.ab3@23868>    BEQ 'doend
000323C4 <AmiBlitz3.ab3@23869>    CMP.w #":",d0
000323C8 <AmiBlitz3.ab3@23870>    BEQ 'doend
000323CC <AmiBlitz3.ab3@23871>    CMP.w #";",d0
000323D0 <AmiBlitz3.ab3@23872>    BEQ 'doend
000323D2 <AmiBlitz3.ab3@23873>    MOVE.l a5,-(a7)
000323D8 <AmiBlitz3.ab3@23874>    JSR get1bytemain
000323DC <AmiBlitz3.ab3@23875>    MOVE.l -1(a5),d0
000323DE <AmiBlitz3.ab3@23876>    MOVE.l (a7)+,a5
000323E4 <AmiBlitz3.ab3@23877>    CMP.l #"noa7",d0
000323E8 <AmiBlitz3.ab3@23878>    BEQ 'doend
000323EC <AmiBlitz3.ab3@23879>  BRA 'morechar
000323F0 <AmiBlitz3.ab3@23882>   MOVE.w #$8002,D0
000323F4 <AmiBlitz3.ab3@23883>    BSR.w macputw
000323F8 <AmiBlitz3.ab3@23884>  BRA 'gather
000323FE <AmiBlitz3.ab3@23888>   JSR get1bytemain
00032402 <AmiBlitz3.ab3@23889>    CMP.w #-$7FF3,D0        ;was #$800d,                                ;end macro
00032406 <AmiBlitz3.ab3@23891>    BEQ.w 'lo1
0003240A <AmiBlitz3.ab3@23892>   CMP.w #$80d7,d0                                          ;end object
0003240E <AmiBlitz3.ab3@23894>   BNE 'notem
00032414 <AmiBlitz3.ab3@23896>   SUBQ.b #1,objectcount
0003241A <AmiBlitz3.ab3@23897>   TST.b developobject
0003241E <AmiBlitz3.ab3@23898>   BEQ 'lo1
00032422 <AmiBlitz3.ab3@23899>   BSR skiprest
00032424 <AmiBlitz3.ab3@23900>  RTS
0003242A <AmiBlitz3.ab3@23904>   SUBQ.w #1,coolnest
0003242E <AmiBlitz3.ab3@23905>    BMI.w 'macdone
00032430 <AmiBlitz3.ab3@23908>   MOVE.w D0,-(A7)
00032434 <AmiBlitz3.ab3@23909>   MOVE.w #$8002,D0
00032438 <AmiBlitz3.ab3@23910>    BSR.w macputw
0003243A <AmiBlitz3.ab3@23911>   MOVE.w (A7)+,D0
0003243E <AmiBlitz3.ab3@23912>  BRA.w 'notend
00032442 <AmiBlitz3.ab3@23915>   BSR.w macputw
00032446 <AmiBlitz3.ab3@23916>  BRA.w 'gather
0003244C <AmiBlitz3.ab3@23920>     CMP.w #"@@",-1(a5)                                     ;merge lines
00032450 <AmiBlitz3.ab3@23921>     BNE 'no
00032454 <AmiBlitz3.ab3@23922>      MOVEM.l D2/A0/A2,-(A7)
0003245A <AmiBlitz3.ab3@23923>    JSR nextline
0003245E <AmiBlitz3.ab3@23924>    BEQ.w JUMP_macenderr
00032462 <AmiBlitz3.ab3@23925>   MOVEM.l (A7)+,D2/A0/A2
00032464 <AmiBlitz3.ab3@23926>     TST.w D2
00032468 <AmiBlitz3.ab3@23927>    BEQ.w 'gather
0003246C <AmiBlitz3.ab3@23928>  BRA 'gather
00032470 <AmiBlitz3.ab3@23932>   BSR.w macputb
00032474 <AmiBlitz3.ab3@23933>  BRA.w 'gather
00032476 <AmiBlitz3.ab3@23936>   ADDQ.w #4,A7
00032478 <AmiBlitz3.ab3@23937>   MOVE.l A0,D0
0003247E <AmiBlitz3.ab3@23938>   SUB.l ptr_macrobuffer_begin,D0
00032482 <AmiBlitz3.ab3@23944>    BEQ.w 'cdone
00032486 <AmiBlitz3.ab3@23945>   CMPI.b #":",-(A0)
0003248A <AmiBlitz3.ab3@23946>    BNE.w 'cdone
0003248E <AmiBlitz3.ab3@23947>   CMP.w #$1,D0
00032492 <AmiBlitz3.ab3@23948>    BEQ.w 'cdo
00032496 <AmiBlitz3.ab3@23949>   TST.b -$1(A0)
0003249A <AmiBlitz3.ab3@23950>    BMI.w 'cdone
0003249C <AmiBlitz3.ab3@23953>   SUBQ.w #1,D0
000324A0 <AmiBlitz3.ab3@23954>  BRA.w 'mclean
000324A4 <AmiBlitz3.ab3@23957>   MOVE.w D0,$8(A2)
000324A8 <AmiBlitz3.ab3@23958>    BEQ.w 'skip2
000324AA <AmiBlitz3.ab3@23959>   MOVEQ.l #$01,D1
000324B0 <AmiBlitz3.ab3@23960>   MOVEA.l _execbase,A6
000324B6 <AmiBlitz3.ab3@23962>   MOVE.l mempool,a0
000324BA <AmiBlitz3.ab3@23963>   JSR _AllocPooled(a6)
000324BC <AmiBlitz3.ab3@23966>   MOVEA.l D0,A0
000324C0 <AmiBlitz3.ab3@23967>   MOVE.l A0,$4(A2)
000324C4 <AmiBlitz3.ab3@23968>   MOVE.w $8(A2),D1
000324C8 <AmiBlitz3.ab3@23969>    BEQ.w 'skip2
000324CA <AmiBlitz3.ab3@23970>   SUBQ.w #1,D1
000324D0 <AmiBlitz3.ab3@23971>   MOVEA.l ptr_macrobuffer_begin,A1
000324D2 <AmiBlitz3.ab3@23974>     MOVE.b (A1)+,(A0)+
000324D6 <AmiBlitz3.ab3@23975>   DBF D1,'lll
000324DC <AmiBlitz3.ab3@23978> JMP get1bytemain
000324DE <AmiBlitz3.ab3@23982>   MOVE.w D0,D1
000324E0 <AmiBlitz3.ab3@23983>   LSR.w #8,D1
000324E2 <AmiBlitz3.ab3@23984>   MOVE.b D1,(A0)+
000324E4 <AmiBlitz3.ab3@23987>   MOVEQ.l #-$01,D2
000324E6 <AmiBlitz3.ab3@23988>   MOVE.b D0,(A0)+
000324EC <AmiBlitz3.ab3@23989>   CMPA.l ptr_macrobuffer_end,A0
000324F0 <AmiBlitz3.ab3@23990>    BCC.w macbigerr2
000324F2 <AmiBlitz3.ab3@23991> RTS
000324F8 <AmiBlitz3.ab3@23994> macbigerr2 JMP macbigerr
000324FA <AmiBlitz3.ab3@23998>   MOVE.l d0,-(a7)
000324FC <AmiBlitz3.ab3@23999>   MOVEQ #0,d0
00032502 <AmiBlitz3.ab3@24000>   CLR.b skiptoggle
00032504 <AmiBlitz3.ab3@24003>     MOVE.b (a5),d0
00032508 <AmiBlitz3.ab3@24004>     BEQ 'l3
0003250C <AmiBlitz3.ab3@24005>     CMP.b #";",d0
00032510 <AmiBlitz3.ab3@24006>     BNE 'l2
00032518 <AmiBlitz3.ab3@24007>     MOVE.b #1,skiptoggle
0003251E <AmiBlitz3.ab3@24010>     TST.b skiptoggle
00032522 <AmiBlitz3.ab3@24011>     BNE 'l4
00032526 <AmiBlitz3.ab3@24012>     CMP.b #":",d0
0003252A <AmiBlitz3.ab3@24013>     BEQ 'l3
0003252C <AmiBlitz3.ab3@24016>     ADDQ #1,a5
00032530 <AmiBlitz3.ab3@24017>  BRA 'loop
00032536 <AmiBlitz3.ab3@24020>   MOVE.w d0,lastchar
00032538 <AmiBlitz3.ab3@24021>   MOVE.l (a7)+,d0
0003253A <AmiBlitz3.ab3@24022> RTS
0003253E <AmiBlitz3.ab3@24029>   BSR.w ifchar
00032542 <AmiBlitz3.ab3@24030>    BNE.w JUMP_syntaxerr
00032544 <AmiBlitz3.ab3@24031>   MOVE.w D0,D1
0003254A <AmiBlitz3.ab3@24032>   JSR get1bytemain
0003254E <AmiBlitz3.ab3@24033>   BSR.w ifchar
00032552 <AmiBlitz3.ab3@24034>    BNE.w 'skip
00032554 <AmiBlitz3.ab3@24035>   ADDQ.w #1,D0
00032556 <AmiBlitz3.ab3@24036>   MOVE.w D0,D2
00032558 <AmiBlitz3.ab3@24037>   ADD.w D0,D0
0003255A <AmiBlitz3.ab3@24038>   ADD.w D2,D0
0003255C <AmiBlitz3.ab3@24039>   ADD.w D0,D1
0003255E <AmiBlitz3.ab3@24040>   MOVE.w D1,D0
00032562 <AmiBlitz3.ab3@24041>   ANDI.w #$3,D0
00032566 <AmiBlitz3.ab3@24042>   CMP.w #$3,D0
0003256A <AmiBlitz3.ab3@24043>    BEQ.w JUMP_syntaxerr
00032570 <AmiBlitz3.ab3@24045>   JSR get1bytemain
00032572 <AmiBlitz3.ab3@24048> RTS
00032574 <AmiBlitz3.ab3@24051> thetst1:  TST.b D0
00032576 <AmiBlitz3.ab3@24052> thetst2:  TST.w D0
00032578 <AmiBlitz3.ab3@24053> thetst3:  TST.l D0
0003257A <AmiBlitz3.ab3@24054> thetst4:  TST.l (A7)+                                      ;Any Length?
0003257E <AmiBlitz3.ab3@24055> thetst5:  JSR _Reschedule(A6)
00032582 <AmiBlitz3.ab3@24057> posbr:    BEQ.w posbr
00032586 <AmiBlitz3.ab3@24058> negbr:    BNE.w negbr
00032588 <AmiBlitz3.ab3@24062>   MOVEQ.l #-$01,D2
0003258C <AmiBlitz3.ab3@24063> BRA.w doifm
00032592 <AmiBlitz3.ab3@24067>   CLR.l fp0addr
00032594 <AmiBlitz3.ab3@24068>   MOVEQ.l #$01,D1                                          ;while flag
00032596 <AmiBlitz3.ab3@24069>   MOVEQ.l #$00,D2                                          ;negate flag
0003259A <AmiBlitz3.ab3@24070> BRA.w doif2
000325A0 <AmiBlitz3.ab3@24074>   LEA firstrep,A2
000325A2 <AmiBlitz3.ab3@24075>   MOVEQ.l #$08,D2
000325A6 <AmiBlitz3.ab3@24076> BRA.w freeslist
000325AA <AmiBlitz3.ab3@24080>   LEA firstsel(PC),A2
000325AC <AmiBlitz3.ab3@24081>   MOVEQ.l #$0E,D2
000325AE <AmiBlitz3.ab3@24086>   MOVEQ.l #$00,D3
000325B0 <AmiBlitz3.ab3@24094>   MOVE.l (A2),D0
000325B2 <AmiBlitz3.ab3@24095>   CLR.l (A2)
000325B4 <AmiBlitz3.ab3@24096>   MOVEA.l D0,A2
000325BA <AmiBlitz3.ab3@24097>   MOVEA.l _execbase,A6
000325BE <AmiBlitz3.ab3@24100>     CMPA.w #$0,A2
000325C2 <AmiBlitz3.ab3@24101>      BEQ.w 'done
000325C4 <AmiBlitz3.ab3@24102>     TST.w D3
000325C8 <AmiBlitz3.ab3@24103>      BEQ.w 'skip
000325CC <AmiBlitz3.ab3@24104>     MOVEM.l D2-D3/A2,-(A7)
000325CE <AmiBlitz3.ab3@24105>     ADDA.w D3,A2
000325D0 <AmiBlitz3.ab3@24106>     MOVE.l D4,D2
000325D4 <AmiBlitz3.ab3@24107>     BSR.w freeslist
000325D8 <AmiBlitz3.ab3@24108>     MOVEM.l (A7)+,D2-D3/A2
000325DA <AmiBlitz3.ab3@24111>     MOVEA.l A2,A1
000325DC <AmiBlitz3.ab3@24112>     MOVE.l D2,D0
000325DE <AmiBlitz3.ab3@24113>     MOVEA.l (A2),A2
000325E4 <AmiBlitz3.ab3@24114>     MOVE.l mempool,a0
000325E8 <AmiBlitz3.ab3@24115>     JSR _FreePooled(A6)
000325EC <AmiBlitz3.ab3@24116>  BRA.w 'loop
000325EE <AmiBlitz3.ab3@24119> RTS
000325F4 <AmiBlitz3.ab3@24121> JUMP_eselerr JMP eselerr
000325F8 <AmiBlitz3.ab3@24124> firstsel:  Ds.l 1
000325FC <AmiBlitz3.ab3@24127> selpushb:   Dc.b $02,$40,$00,$FF                           ;ANDI.W  #$00FF,D0
000325FE <AmiBlitz3.ab3@24130> selpushw:   MOVE.w D0,-(A7)
00032600 <AmiBlitz3.ab3@24132> selpushl:   MOVE.l D0,-(A7)
00032604 <AmiBlitz3.ab3@24134> selpushs:   LEA $4(A7),A2                                  ;(a7)=len of string!
00032608 <AmiBlitz3.ab3@24137> selcomb:    ANDI.w #$FF,D0
0003260A <AmiBlitz3.ab3@24138> selcomw:    CMP.w (A7),D0
0003260C <AmiBlitz3.ab3@24140> selcoml:    CMP.l (A7),D0
00032610 <AmiBlitz3.ab3@24142> selbne:     BNE.w selbne
00032612 <AmiBlitz3.ab3@24144> endsel:     ADDQ.w #8,A7
00032616 <AmiBlitz3.ab3@24150>   MOVE.l firstsel(PC),D0                                  
0003261A <AmiBlitz3.ab3@24151>    BEQ.w JUMP_eselerr
0003261C <AmiBlitz3.ab3@24152>   MOVEA.l D0,A2
00032620 <AmiBlitz3.ab3@24153>    BSR.w fillbne
00032626 <AmiBlitz3.ab3@24156>   MOVEA.l _execbase,A6
0003262A <AmiBlitz3.ab3@24159>   MOVE.l $4(A2),D0
0003262E <AmiBlitz3.ab3@24160>    BEQ.w 'done
00032630 <AmiBlitz3.ab3@24161>   MOVEA.l D0,A3
00032634 <AmiBlitz3.ab3@24162>   MOVEA.l $4(A3),A0
0003263A <AmiBlitz3.ab3@24163>   MOVE.l destpointer,D1
0003263C <AmiBlitz3.ab3@24164>   SUB.l A0,D1
00032642 <AmiBlitz3.ab3@24166>     TST.b fast
00032646 <AmiBlitz3.ab3@24167>     BEQ 'loop_l1
0003264C <AmiBlitz3.ab3@24168>     MOVE.w dontwrite_nomemleft,D0
00032650 <AmiBlitz3.ab3@24169>     BNE.w 'skip
00032652 <AmiBlitz3.ab3@24170>     ADDQ.l #2,d1
00032656 <AmiBlitz3.ab3@24171>     MOVE.l d1,-2(a0)
0003265A <AmiBlitz3.ab3@24172>   BRA 'skip
00032660 <AmiBlitz3.ab3@24176>   TST.w dontwrite_nomemleft
00032664 <AmiBlitz3.ab3@24177>      BNE.w 'skip
0003266A <AmiBlitz3.ab3@24178>   CMP.l #MaxWordSgnd,D1
0003266E <AmiBlitz3.ab3@24179>    BHI.w JUMP_cbraerr
00032670 <AmiBlitz3.ab3@24180>   MOVE.w D1,(A0)
00032674 <AmiBlitz3.ab3@24183>   MOVE.l (A3),$4(A2)                                       ;next of me is new first
00032676 <AmiBlitz3.ab3@24184>   MOVEA.l A3,A1
00032678 <AmiBlitz3.ab3@24185>   MOVEQ.l #$08,D0
0003267E <AmiBlitz3.ab3@24186>   MOVE.l mempool,a0
00032682 <AmiBlitz3.ab3@24187>    JSR _FreePooled(A6)
00032686 <AmiBlitz3.ab3@24188>  BRA.w 'loop
0003268C <AmiBlitz3.ab3@24191>   JSR popselect                                            ;fix stack on select
00032690 <AmiBlitz3.ab3@24192>   MOVEA.l firstsel(PC),A1
00032696 <AmiBlitz3.ab3@24193>   MOVE.l (A1),firstsel
00032698 <AmiBlitz3.ab3@24194>   MOVEQ.l #$0E,D0
0003269E <AmiBlitz3.ab3@24195>   MOVEA.l _execbase,A6
000326A4 <AmiBlitz3.ab3@24196>   MOVE.l mempool,a0
000326A8 <AmiBlitz3.ab3@24197>   JSR _FreePooled(A6)
000326AE <AmiBlitz3.ab3@24198> JMP get1bytemain
000326B0 <AmiBlitz3.ab3@24202>   MOVEA.l (A7)+,A1
000326B2 <AmiBlitz3.ab3@24203>   SUBQ.w #8,A1
000326B4 <AmiBlitz3.ab3@24204>   MOVEQ.l #$09,D0
000326B6 <AmiBlitz3.ab3@24205>   ADD.l (A1),D0
000326B8 <AmiBlitz3.ab3@24208>   ADDQ.w #2,A7                                             ;for runtime errs!
000326BC <AmiBlitz3.ab3@24213>   MOVE.l firstsel(PC),D0
000326C0 <AmiBlitz3.ab3@24214>    BEQ.w JUMP_defaerr
000326C2 <AmiBlitz3.ab3@24215>   MOVEA.l D0,A2
000326C6 <AmiBlitz3.ab3@24216>   BSR.w fillbra
000326CA <AmiBlitz3.ab3@24217>   BSR.w fillbne
000326CE <AmiBlitz3.ab3@24218>   CLR.l $8(A2)
000326D2 <AmiBlitz3.ab3@24219>   MOVE.w $C(A2),D2
000326D6 <AmiBlitz3.ab3@24220> BRA.w casechk
000326DC <AmiBlitz3.ab3@24222> JUMP_defaerr JMP defaerr
000326E0 <AmiBlitz3.ab3@24227>   MOVE.l $8(A2),D0
000326E4 <AmiBlitz3.ab3@24228>    BEQ.w 'skip   ;none to do!
000326E6 <AmiBlitz3.ab3@24229>   MOVEA.l D0,A0
000326EC <AmiBlitz3.ab3@24230>   MOVE.l destpointer,D1
000326EE <AmiBlitz3.ab3@24231>   SUB.l A0,D1
000326F4 <AmiBlitz3.ab3@24234>     TST.b fast
000326F8 <AmiBlitz3.ab3@24235>     BEQ 'l1
000326FE <AmiBlitz3.ab3@24236>     TST.w dontwrite_nomemleft
00032702 <AmiBlitz3.ab3@24237>     BNE.w 'skip
00032704 <AmiBlitz3.ab3@24238>     ADDQ.l #2,d1
00032708 <AmiBlitz3.ab3@24239>     MOVE.l D1,-2(A0)
0003270C <AmiBlitz3.ab3@24240>   BRA 'skip
00032712 <AmiBlitz3.ab3@24244>   TST.w dontwrite_nomemleft
00032716 <AmiBlitz3.ab3@24245>      BNE.w 'skip
0003271C <AmiBlitz3.ab3@24247>    CMP.l #MaxWordSgnd,D1
00032720 <AmiBlitz3.ab3@24248>    BHI.w JUMP_cbraerr
00032722 <AmiBlitz3.ab3@24249>   MOVE.w D1,(A0)
00032724 <AmiBlitz3.ab3@24252> RTS
0003272A <AmiBlitz3.ab3@24254> JUMP_cbraerr JMP cbraerr
0003272E <AmiBlitz3.ab3@24260>   MOVE.l $8(A2),D0
00032732 <AmiBlitz3.ab3@24261>    BEQ.w 'skip
00032734 <AmiBlitz3.ab3@24265>   MOVEA.l D0,A3
00032738 <AmiBlitz3.ab3@24266>   MOVE.w #$6000,D1
0003273E <AmiBlitz3.ab3@24269>    TST.b fast
00032742 <AmiBlitz3.ab3@24270>    BEQ 'l1
00032748 <AmiBlitz3.ab3@24271>    OR.l #$ff,d1
0003274C <AmiBlitz3.ab3@24272>    BSR writeword
00032750 <AmiBlitz3.ab3@24277>   BSR.w writeword
00032752 <AmiBlitz3.ab3@24278>   MOVEQ.l #$08,D0
00032754 <AmiBlitz3.ab3@24279>   MOVEQ.l #$01,D1
0003275A <AmiBlitz3.ab3@24280>   MOVEA.l _execbase,A6
00032760 <AmiBlitz3.ab3@24282>   MOVE.l mempool,a0
00032764 <AmiBlitz3.ab3@24283>   JSR _AllocPooled(a6)
00032766 <AmiBlitz3.ab3@24286>   MOVEA.l D0,A0
0003276A <AmiBlitz3.ab3@24287>   MOVE.l $4(A2),(A0)
0003276E <AmiBlitz3.ab3@24288>   MOVE.l A0,$4(A2)
00032776 <AmiBlitz3.ab3@24289>   MOVE.l destpointer,$4(A0)
0003277A <AmiBlitz3.ab3@24290>  BRA.w writeword
0003277C <AmiBlitz3.ab3@24293> RTS
00032782 <AmiBlitz3.ab3@24297>   TST.b debugmode
00032786 <AmiBlitz3.ab3@24298>    BEQ.w 'norerr
0003278A <AmiBlitz3.ab3@24299>   MOVE.w #$C313,D1
0003278E <AmiBlitz3.ab3@24300>   CMP.w #$3,D2
00032792 <AmiBlitz3.ab3@24301>    BCS.w 'dochk
00032794 <AmiBlitz3.ab3@24302>   ADDQ.w #1,D1
00032798 <AmiBlitz3.ab3@24305>  BRA.w Atokejsr
0003279A <AmiBlitz3.ab3@24308> RTS
000327A0 <AmiBlitz3.ab3@24311> JUMP_caseerr JMP caseerr
000327A4 <AmiBlitz3.ab3@24318>   MOVE.l firstsel(PC),D0
000327A8 <AmiBlitz3.ab3@24319>    BEQ.w JUMP_caseerr
000327AA <AmiBlitz3.ab3@24320>   MOVEA.l D0,A2
000327AE <AmiBlitz3.ab3@24321>    BSR.w fillbra
000327B2 <AmiBlitz3.ab3@24322>    BSR.w fillbne
000327B6 <AmiBlitz3.ab3@24324>   MOVE.w $C(A2),D2    ;type to get!
000327B8 <AmiBlitz3.ab3@24325>   MOVE.w D2,-(A7)
000327BC <AmiBlitz3.ab3@24326>    BSR.w casechk
000327BE <AmiBlitz3.ab3@24327>   MOVE.w (A7),D2
000327C2 <AmiBlitz3.ab3@24330>    BSR.w bakeval
000327C4 <AmiBlitz3.ab3@24331>   MOVE.w (A7)+,D2    ;types to compare
000327C8 <AmiBlitz3.ab3@24332>   LEA selcomb(PC),A0
000327CC <AmiBlitz3.ab3@24333>   LEA selcombf(PC),A1
000327D0 <AmiBlitz3.ab3@24334>   CMP.w #$1,D2
000327D4 <AmiBlitz3.ab3@24335>    BEQ.w 'doit
000327D8 <AmiBlitz3.ab3@24336>   LEA selcomw(PC),A0
000327DC <AmiBlitz3.ab3@24337>   CMP.w #$2,D2
000327E0 <AmiBlitz3.ab3@24338>    BEQ.w 'doit
000327E4 <AmiBlitz3.ab3@24339>   LEA selcoml(PC),A0
000327E8 <AmiBlitz3.ab3@24340>   LEA selcomlf(PC),A1
000327EC <AmiBlitz3.ab3@24341>   CMP.w #$7,D2
000327F0 <AmiBlitz3.ab3@24342>    BCS.w 'doit
000327F4 <AmiBlitz3.ab3@24344>   MOVE.w #$CE01,D1     ; was #casestrcomp
000327F8 <AmiBlitz3.ab3@24345>    BSR.w Atokejsr
000327FC <AmiBlitz3.ab3@24346>  BRA.w 'doneit
00032800 <AmiBlitz3.ab3@24349>   BSR.w pokecode
00032804 <AmiBlitz3.ab3@24352>   MOVE.w selbne(PC),D1
0003280A <AmiBlitz3.ab3@24355>     TST.b fast
0003280E <AmiBlitz3.ab3@24356>     BEQ 'l1
00032814 <AmiBlitz3.ab3@24357>     ORI.l #$ff,d1
00032818 <AmiBlitz3.ab3@24358>     BSR writeword
0003281C <AmiBlitz3.ab3@24363>   BSR.w writeword
00032820 <AmiBlitz3.ab3@24364>   MOVEA.l firstsel(PC),A0
00032828 <AmiBlitz3.ab3@24365>   MOVE.l destpointer,$8(A0)
0003282C <AmiBlitz3.ab3@24366> BRA.w writeword
00032830 <AmiBlitz3.ab3@24370> pcchk:      Dc.b $3F,$3C,$73,$45                           ;MOVE.W  #$7345,-(A7)   ;#"sE",-(a7) org source
00032832 <AmiBlitz3.ab3@24371> clrst:      Dc.b $42,$A7                                   ;CLR.L   -(A7)
00032836 <AmiBlitz3.ab3@24374> sellineat:  Ds.l 1
0003283C <AmiBlitz3.ab3@24380>   TST.b debugmode
00032840 <AmiBlitz3.ab3@24381>    BEQ.w 'norerr
00032844 <AmiBlitz3.ab3@24382>   MOVE.l pcchk(PC),D1                                      ;move #"sE",-(a7)
00032848 <AmiBlitz3.ab3@24383>    BSR.w writelong
00032852 <AmiBlitz3.ab3@24386>   MOVE.l linenumat,sellineat
0003285C <AmiBlitz3.ab3@24389>    MOVE.l destpointer,pushpc
00032866 <AmiBlitz3.ab3@24390>   MOVE.l hunkoffsetbase,pushoff
00032868 <AmiBlitz3.ab3@24392>   MOVEQ.l #$00,D2
0003286C <AmiBlitz3.ab3@24393>    BSR.w bakevalu                                          ;Evaluate
00032870 <AmiBlitz3.ab3@24394>    BSR.w pushdo
00032874 <AmiBlitz3.ab3@24395>   CMP.w #$7,D2
00032878 <AmiBlitz3.ab3@24396>    BNE.w 'nos
0003287C <AmiBlitz3.ab3@24397>   MOVE.w clrst(PC),D1
00032880 <AmiBlitz3.ab3@24398>    BSR.w writeword
00032884 <AmiBlitz3.ab3@24401>    BSR.w pushput
00032888 <AmiBlitz3.ab3@24402>   LEA selpushb(PC),A0
0003288C <AmiBlitz3.ab3@24403>   LEA selpushbf(PC),A1
00032890 <AmiBlitz3.ab3@24404>   CMP.w #$1,D2
00032894 <AmiBlitz3.ab3@24405>    BEQ.w 'doit
00032898 <AmiBlitz3.ab3@24406>   LEA selpushw(PC),A0
0003289C <AmiBlitz3.ab3@24407>   CMP.w #$2,D2
000328A0 <AmiBlitz3.ab3@24408>    BEQ.w 'doit
000328A4 <AmiBlitz3.ab3@24409>   LEA selpushl(PC),A0
000328A8 <AmiBlitz3.ab3@24410>   LEA selpushlf(PC),A1
000328AC <AmiBlitz3.ab3@24411>   CMP.w #$7,D2
000328B0 <AmiBlitz3.ab3@24412>    BCS.w 'doit
000328B6 <AmiBlitz3.ab3@24414>   MOVE.w moved0a3,D1                                       ;d0 to a3!
000328BA <AmiBlitz3.ab3@24415>    BSR.w writeword
000328BE <AmiBlitz3.ab3@24416>   LEA selpushs(PC),A0
000328C2 <AmiBlitz3.ab3@24417>   LEA selpushsf(PC),A1
000328C6 <AmiBlitz3.ab3@24418>    BSR.w pokecode
000328CA <AmiBlitz3.ab3@24419>   MOVE.w #$C701,D1     ; was #astring
000328CE <AmiBlitz3.ab3@24420>    BSR.w Atokejsr
000328D2 <AmiBlitz3.ab3@24421>  BRA.w 'doneit
000328D6 <AmiBlitz3.ab3@24424>   BSR.w pokecode
000328D8 <AmiBlitz3.ab3@24427>   MOVEQ.l #$0E,D0
000328DA <AmiBlitz3.ab3@24428>   MOVEQ.l #$01,D1
000328E0 <AmiBlitz3.ab3@24429>   MOVEA.l _execbase,A6
000328E6 <AmiBlitz3.ab3@24432>   MOVE.l mempool,a0
000328EA <AmiBlitz3.ab3@24433>   JSR _AllocPooled(a6)
000328EC <AmiBlitz3.ab3@24435>   MOVEA.l D0,A0
000328F0 <AmiBlitz3.ab3@24436>   MOVE.l firstsel(PC),(A0)
000328F6 <AmiBlitz3.ab3@24437>   MOVE.l A0,firstsel
000328FA <AmiBlitz3.ab3@24438>   CLR.l $4(A0)
000328FE <AmiBlitz3.ab3@24439>   CLR.l $8(A0)        ;default mode!
00032902 <AmiBlitz3.ab3@24440>   MOVE.w D2,$C(A0)
00032904 <AmiBlitz3.ab3@24441> RTS
0003290A <AmiBlitz3.ab3@24445>   MOVE.l firstrep,D0
0003290E <AmiBlitz3.ab3@24446>    BEQ.w JUMP_unterr1
00032912 <AmiBlitz3.ab3@24447>   MOVE.w #$6000,D1      ;BRA
00032916 <AmiBlitz3.ab3@24448>   BSR.w writeword
00032918 <AmiBlitz3.ab3@24449>   MOVEA.l D0,A0
0003291C <AmiBlitz3.ab3@24450>   MOVE.l $4(A0),D1      ;dest pc
00032922 <AmiBlitz3.ab3@24451>   SUB.l destpointer,D1
00032924 <AmiBlitz3.ab3@24452>   TST.w D1
00032928 <AmiBlitz3.ab3@24453>    BPL.w JUMP_unterr2
0003292C <AmiBlitz3.ab3@24454>   BSR.w writeword
00032932 <AmiBlitz3.ab3@24455>   MOVEA.l _execbase,A6
00032936 <AmiBlitz3.ab3@24456> BRA.w unlinkrep
0003293C <AmiBlitz3.ab3@24458> JUMP_unterr2 JMP unterr2
00032942 <AmiBlitz3.ab3@24459> JUMP_unterr1 JMP unterr1
00032948 <AmiBlitz3.ab3@24463>   MOVE.l firstrep,D0
0003294C <AmiBlitz3.ab3@24464>    BEQ.w JUMP_unterr1    ;no repeat!
00032950 <AmiBlitz3.ab3@24465>   BSR.w do_if            ;do the until
00032956 <AmiBlitz3.ab3@24467>   JSR reget
0003295A <AmiBlitz3.ab3@24468>    BNE.w JUMP_syntaxerr
00032960 <AmiBlitz3.ab3@24470>   MOVE.w dontwrite_nomemleft,D1
00032964 <AmiBlitz3.ab3@24471>    BNE.w 'skip
0003296A <AmiBlitz3.ab3@24472>   MOVEA.l firstrep,A0
00032970 <AmiBlitz3.ab3@24473>   MOVEA.l destpointer,A1
00032976 <AmiBlitz3.ab3@24476>     TST.b fast
0003297A <AmiBlitz3.ab3@24477>     BEQ 'l1
0003297C <AmiBlitz3.ab3@24478>     SUBQ.w #4,a1
00032980 <AmiBlitz3.ab3@24479>     MOVE.l $4(A0),D2
00032982 <AmiBlitz3.ab3@24480>     SUB.l A1,D2
00032984 <AmiBlitz3.ab3@24481>     MOVE.l d2,(a1)
00032988 <AmiBlitz3.ab3@24482>   BRA 'skip
0003298A <AmiBlitz3.ab3@24487>   SUBQ.w #2,A1
0003298E <AmiBlitz3.ab3@24488>   MOVE.l $4(A0),D2    ;dest pc.
00032990 <AmiBlitz3.ab3@24489>   SUB.l A1,D2
00032992 <AmiBlitz3.ab3@24490>   TST.w D2
00032996 <AmiBlitz3.ab3@24491>    BPL.w JUMP_unterr2
00032998 <AmiBlitz3.ab3@24492>   MOVE.w D2,(A1)      ;put in pra dest.
0003299E <AmiBlitz3.ab3@24495>   MOVEA.l firstiff,A1
000329A4 <AmiBlitz3.ab3@24496>   MOVE.l (A1),firstiff
000329A6 <AmiBlitz3.ab3@24497>   MOVEQ.l #$0E,D0
000329AC <AmiBlitz3.ab3@24498>   MOVEA.l _execbase,A6
000329B2 <AmiBlitz3.ab3@24501>   MOVE.l mempool,a0
000329B6 <AmiBlitz3.ab3@24502>   JSR _FreePooled(A6)
000329BC <AmiBlitz3.ab3@24506>   MOVEA.l firstrep,A1
000329C2 <AmiBlitz3.ab3@24507>   MOVE.l (A1),firstrep
000329C4 <AmiBlitz3.ab3@24508>   MOVEQ.l #$08,D0
000329CA <AmiBlitz3.ab3@24511>   MOVE.l mempool,a0
000329CE <AmiBlitz3.ab3@24512> JMP _FreePooled(A6)
000329D2 <AmiBlitz3.ab3@24515> iflineat:   Ds.l 1
000329D4 <AmiBlitz3.ab3@24519>   MOVEQ.l #$00,D2   ;negate flag
000329DA <AmiBlitz3.ab3@24521>   TST.b fast
000329DE <AmiBlitz3.ab3@24522>   BEQ 'l1
000329E6 <AmiBlitz3.ab3@24523>   MOVE.b #1,nostringopt
000329EE <AmiBlitz3.ab3@24524>   MOVE.b #1,iniffcommand
000329F0 <AmiBlitz3.ab3@24529>   MOVEQ.l #$00,D1  ;if flag
000329F2 <AmiBlitz3.ab3@24535>   MOVE.w D1,-(A7)
000329F8 <AmiBlitz3.ab3@24536>   MOVE.l destpointer,-(A7)
000329FA <AmiBlitz3.ab3@24537>   MOVE.w D2,-(A7)
00032A04 <AmiBlitz3.ab3@24538>   MOVE.l linenumat,iflineat
00032A06 <AmiBlitz3.ab3@24540>   MOVEQ.l #$00,D2
00032A10 <AmiBlitz3.ab3@24542>   MOVE.b optistring,optistring2
00032A18 <AmiBlitz3.ab3@24543>   MOVE.b #1,optistring
00032A1C <AmiBlitz3.ab3@24545>   BSR.w bakevalu       ;Get True/False Expression!
00032A26 <AmiBlitz3.ab3@24547>   MOVE.b optistring2,optistring
00032A2A <AmiBlitz3.ab3@24549>   CMP.w #$5,D2
00032A2E <AmiBlitz3.ab3@24550>    BEQ.w 'float
00032A32 <AmiBlitz3.ab3@24551>   MOVE.w thetst1(PC),D1
00032A36 <AmiBlitz3.ab3@24552>   CMP.w #$1,D2
00032A3A <AmiBlitz3.ab3@24553>    BEQ.w 'writebranchcode
00032A3E <AmiBlitz3.ab3@24554>   MOVE.w thetst2(PC),D1
00032A42 <AmiBlitz3.ab3@24555>   CMP.w #$2,D2
00032A46 <AmiBlitz3.ab3@24556>    BEQ.w 'writebranchcode
00032A4A <AmiBlitz3.ab3@24557>   MOVE.w thetst4(PC),D1
00032A4E <AmiBlitz3.ab3@24558>   CMP.w #$7,D2
00032A52 <AmiBlitz3.ab3@24559>    BEQ.w 'writebranchcode
00032A56 <AmiBlitz3.ab3@24560>   MOVE.w thetst3(PC),D1
00032A5A <AmiBlitz3.ab3@24561>  BRA.w 'writebranchcode
00032A60 <AmiBlitz3.ab3@24565>   TST.b fpu
00032A64 <AmiBlitz3.ab3@24566>   BEQ 'dofpu
00032A6A <AmiBlitz3.ab3@24567>   MOVE.l #$f200003a,d1
00032A6E <AmiBlitz3.ab3@24568>   BSR writelong
00032A72 <AmiBlitz3.ab3@24569>   MOVE.w #$f2c1,d1       
00032A76 <AmiBlitz3.ab3@24570>   BSR writeword
00032A7A <AmiBlitz3.ab3@24571>   BSR writelong
00032A7C <AmiBlitz3.ab3@24572>   ADDQ.l #2,a7
00032A80 <AmiBlitz3.ab3@24573>  BRA.w 'br2
00032A84 <AmiBlitz3.ab3@24577>    MOVE.w #$C900,D1     ;was #getffpbase
00032A88 <AmiBlitz3.ab3@24578>    BSR.w Atokejsr
00032A8C <AmiBlitz3.ab3@24579>   MOVE.l thetst5(PC),D1
00032A90 <AmiBlitz3.ab3@24580>    BSR.w writelong
00032A94 <AmiBlitz3.ab3@24581>  BRA.w 'gotst2
00032A9A <AmiBlitz3.ab3@24585>          CLR.b iniffcommand
00032AA0 <AmiBlitz3.ab3@24586>          TST.b fast                                        ;branchcode
00032AA4 <AmiBlitz3.ab3@24587>          BEQ 'b6
00032AAA <AmiBlitz3.ab3@24588>          TST.b fpu
00032AAE <AmiBlitz3.ab3@24589>          BEQ 'nofpu
00032AB4 <AmiBlitz3.ab3@24593>           MOVE.l destpointer,a0
00032ABA <AmiBlitz3.ab3@24594>          SUB.l load_var_addr,a0
00032AC0 <AmiBlitz3.ab3@24595>          CMP.l #4,a0
00032AC4 <AmiBlitz3.ab3@24596>          BEQ 'nofpu
00032ACC <AmiBlitz3.ab3@24597>          CMP.l #$f2400014,-4(a4)                           ;<
00032AD0 <AmiBlitz3.ab3@24598>          BNE 'nolt
00032AD6 <AmiBlitz3.ab3@24599>          SUBQ.l #2,destpointer
00032ADC <AmiBlitz3.ab3@24600>          MOVE.w #$f293,-4(a4)                              ;
00032AE0 <AmiBlitz3.ab3@24601>  BRA 'brf
00032AE8 <AmiBlitz3.ab3@24604>   CMP.l #$f2400015,-4(a4)                                  ;<=
00032AEC <AmiBlitz3.ab3@24605>          BNE 'nole
00032AF2 <AmiBlitz3.ab3@24606>          SUBQ.l #2,destpointer
00032AF8 <AmiBlitz3.ab3@24607>          MOVE.w #$f292,-4(a4)
00032AFC <AmiBlitz3.ab3@24608>  BRA 'brf
00032B04 <AmiBlitz3.ab3@24611>   CMP.l #$f2400013,-4(a4)                                  ;=>
00032B08 <AmiBlitz3.ab3@24612>          BNE 'noge
00032B0E <AmiBlitz3.ab3@24613>          SUBQ.l #2,destpointer
00032B14 <AmiBlitz3.ab3@24614>          MOVE.w #$f294,-4(a4)
00032B18 <AmiBlitz3.ab3@24615>  BRA 'brf
00032B20 <AmiBlitz3.ab3@24618>   CMP.l #$f2400012,-4(a4)                                  ;>
00032B24 <AmiBlitz3.ab3@24619>          BNE 'nogt
00032B2A <AmiBlitz3.ab3@24620>          SUBQ.l #2,destpointer
00032B30 <AmiBlitz3.ab3@24621>          MOVE.w #$f295,-4(a4)
00032B34 <AmiBlitz3.ab3@24622>  BRA 'brf
00032B3C <AmiBlitz3.ab3@24625>   CMP.l #$f2400001,-4(a4)                                  ;=
00032B40 <AmiBlitz3.ab3@24626>          BNE 'noeq
00032B46 <AmiBlitz3.ab3@24627>          SUBQ.l #2,destpointer
00032B4C <AmiBlitz3.ab3@24628>          MOVE.w #$f28e,-4(a4)
00032B50 <AmiBlitz3.ab3@24629>  BRA 'brf
00032B58 <AmiBlitz3.ab3@24632>   CMP.l #$f240000e,-4(a4)                                  ;<>
00032B5C <AmiBlitz3.ab3@24633>          BNE 'none
00032B62 <AmiBlitz3.ab3@24634>          SUBQ.l #2,destpointer
00032B68 <AmiBlitz3.ab3@24635>          MOVE.w #$f281,-4(a4)
00032B6A <AmiBlitz3.ab3@24638>   ADDQ.l #2,a7
00032B70 <AmiBlitz3.ab3@24640>     TST.b fast
00032B74 <AmiBlitz3.ab3@24641>     BEQ 'l1
00032B7A <AmiBlitz3.ab3@24642>     OR.b #$40,-3(a4)
00032B7E <AmiBlitz3.ab3@24643>     BSR writeword
00032B82 <AmiBlitz3.ab3@24647>   BSR writeword
00032B86 <AmiBlitz3.ab3@24648>  BRA.s 'br2
00032B8C <AmiBlitz3.ab3@24652>   MOVE.l destpointer,a0
00032B92 <AmiBlitz3.ab3@24653>          SUB.l load_var_addr,a0
00032B98 <AmiBlitz3.ab3@24654>          CMP.l #4,a0
00032B9C <AmiBlitz3.ab3@24655>          BEQ 'gotst2
00032BA2 <AmiBlitz3.ab3@24656>          CMP.w #$4eb9,-6(a4)
00032BA6 <AmiBlitz3.ab3@24657>          BEQ 'b6
00032BAC <AmiBlitz3.ab3@24658>          CMP.w #$5ec0,-2(a4)                               ;>
00032BB0 <AmiBlitz3.ab3@24659>      BNE.s 'lb1
00032BB6 <AmiBlitz3.ab3@24660>          MOVE.w #$6f00,-2(a4)                              ;ble
00032BBA <AmiBlitz3.ab3@24661>  BRA.s 'br
00032BC0 <AmiBlitz3.ab3@24664>   CMP.w #$5dc0,-2(a4)                                       ;<
00032BC4 <AmiBlitz3.ab3@24665>   BNE.s 'lb2
00032BCA <AmiBlitz3.ab3@24666>          MOVE.w #$6c00,-2(a4)                              ;bge
00032BCE <AmiBlitz3.ab3@24667>  BRA.s 'br
00032BD4 <AmiBlitz3.ab3@24670>   CMP.w #$57c0,-2(a4)                                      ;=
00032BD8 <AmiBlitz3.ab3@24671>   BNE.s 'lb3
00032BDE <AmiBlitz3.ab3@24672>          MOVE.w #$6600,-2(a4)                              ;bne
00032BE2 <AmiBlitz3.ab3@24673>  BRA.s 'br
00032BE8 <AmiBlitz3.ab3@24676>   CMP.w #$56c0,-2(a4)                                      ;<>
00032BEC <AmiBlitz3.ab3@24677>   BNE.s 'lb4
00032BF2 <AmiBlitz3.ab3@24678>          MOVE.w #$6700,-2(a4)                              ;beq
00032BF6 <AmiBlitz3.ab3@24679>  BRA.s 'br
00032BFC <AmiBlitz3.ab3@24682>   CMP.w #$5cc0,-2(a4)                                      ;>=
00032C00 <AmiBlitz3.ab3@24683>   BNE.s 'lb5
00032C06 <AmiBlitz3.ab3@24684>          MOVE.w #$6d00,-2(a4)                              ;blt
00032C0A <AmiBlitz3.ab3@24685>  BRA.s 'br
00032C10 <AmiBlitz3.ab3@24688>   CMP.w #$5fc0,-2(a4)                                      ;<=
00032C14 <AmiBlitz3.ab3@24689>         BNE.s 'b6
00032C1A <AmiBlitz3.ab3@24690>          MOVE.w #$6e00,-2(a4)                              ;bgt
00032C1C <AmiBlitz3.ab3@24693>   TST.w (a7)+
00032C22 <AmiBlitz3.ab3@24695>         TST.b fast
00032C26 <AmiBlitz3.ab3@24696>         BEQ 'l1a
00032C2C <AmiBlitz3.ab3@24697>         OR.b #$ff,-1(a4)                                   ;long branches
00032C30 <AmiBlitz3.ab3@24698>         BSR writeword
00032C34 <AmiBlitz3.ab3@24702>         BSR writeword
00032C38 <AmiBlitz3.ab3@24703>  BRA.s 'br2
00032C3C <AmiBlitz3.ab3@24707>   BSR.w writeword
00032C40 <AmiBlitz3.ab3@24710>   MOVE.l posbr(PC),D1
00032C42 <AmiBlitz3.ab3@24711>   TST.w (A7)+
00032C46 <AmiBlitz3.ab3@24712>    BEQ.w 'skip
00032C4A <AmiBlitz3.ab3@24713>   MOVE.l negbr(PC),D1
00032C50 <AmiBlitz3.ab3@24717>   TST.b fast
00032C54 <AmiBlitz3.ab3@24718>            BEQ 'l1b
00032C5A <AmiBlitz3.ab3@24719>            OR.l #$00ff0000,d1
00032C5E <AmiBlitz3.ab3@24720>            BSR writelong
00032C62 <AmiBlitz3.ab3@24721>            BSR writeword
00032C66 <AmiBlitz3.ab3@24722>  BRA 'br2
00032C6A <AmiBlitz3.ab3@24725>   BSR.w writelong
00032C6C <AmiBlitz3.ab3@24729>   MOVEQ.l #$0E,D0
00032C6E <AmiBlitz3.ab3@24730>   MOVEQ.l #$01,D1
00032C74 <AmiBlitz3.ab3@24731>   MOVEA.l _execbase,A6
00032C7A <AmiBlitz3.ab3@24734>   MOVE.l mempool,a0
00032C7E <AmiBlitz3.ab3@24735>   JSR _AllocPooled(a6)
00032C80 <AmiBlitz3.ab3@24738>   MOVEA.l D0,A0
00032C86 <AmiBlitz3.ab3@24739>   MOVE.l firstiff,(A0)
00032C8C <AmiBlitz3.ab3@24740>   MOVE.l A0,firstiff
00032C90 <AmiBlitz3.ab3@24741>   MOVE.l (A7)+,$4(A0)
00032C98 <AmiBlitz3.ab3@24742>   MOVE.l destpointer,$8(A0)
00032C9C <AmiBlitz3.ab3@24743>   MOVE.w (A7)+,$C(A0)
00032CA2 <AmiBlitz3.ab3@24744>    JSR reget
00032CA6 <AmiBlitz3.ab3@24745>    BEQ.w ifdone
00032CAC <AmiBlitz3.ab3@24746>   BSET #$7,$C(A0)    ;one liner
00032CB6 <AmiBlitz3.ab3@24752>   MOVE.w oldqflag,instringon
00032CBC <AmiBlitz3.ab3@24753>   MOVEA.l lastsourcepos,A5
00032CC4 <AmiBlitz3.ab3@24755>   MOVE.w #$003A,lastchar      ; ':'
00032CC6 <AmiBlitz3.ab3@24758> RTS
00032CCA <AmiBlitz3.ab3@24762>   CMP.w #$1,D0     ;4
00032CCE <AmiBlitz3.ab3@24763>    BLT.w gc1skip   ;4
00032CD2 <AmiBlitz3.ab3@24764>   CMP.w #$0,D0     ;2
00032CD6 <AmiBlitz3.ab3@24765>    BGT.w gc1skip
00032CD8 <AmiBlitz3.ab3@24766>   ADD.w D0,D0
00032CDA <AmiBlitz3.ab3@24767>   ADD.w D0,D0
00032CDE <AmiBlitz3.ab3@24768>   MOVEA.l gc1labs-4(PC,D0.W),A0
00032CE0 <AmiBlitz3.ab3@24769>  JMP (A0)
00032CE4 <AmiBlitz3.ab3@24772>  BRA.w gc1skip
00032CE8 <AmiBlitz3.ab3@24778>   CMP.w #$1,D0     ;4
00032CEC <AmiBlitz3.ab3@24779>    BLT.w gc2skip   ;4
00032CF0 <AmiBlitz3.ab3@24780>   CMP.w #$0,D0     ;2
00032CF4 <AmiBlitz3.ab3@24781>    BGT.w gc2skip
00032CF6 <AmiBlitz3.ab3@24782>   ADD.w D0,D0
00032CF8 <AmiBlitz3.ab3@24783>   ADD.w D0,D0
00032CFC <AmiBlitz3.ab3@24784>   MOVEA.l gc2labs-4(PC,D0.W),A0
00032CFE <AmiBlitz3.ab3@24785>   JSR (A0)
00032D02 <AmiBlitz3.ab3@24788>  BRA.w gc2skip
00032D06 <AmiBlitz3.ab3@24794>   CMP.w #$1,D0    ;4
00032D0A <AmiBlitz3.ab3@24795>    BLT.w gc3skip  ;4
00032D0E <AmiBlitz3.ab3@24796>   CMP.w #$0,D0    ;2
00032D12 <AmiBlitz3.ab3@24797>    BGT.w gc3skip
00032D14 <AmiBlitz3.ab3@24798>   ADD.w D0,D0
00032D16 <AmiBlitz3.ab3@24799>   ADD.w D0,D0
00032D1A <AmiBlitz3.ab3@24800>   MOVEA.l gc3labs-4(PC,D0.W),A0
00032D1E <AmiBlitz3.ab3@24803>   MOVE.w #$6753,-(A7)                                      ;#'gS' ;for runtime error checking!
00032D20 <AmiBlitz3.ab3@24804>    JSR (A0)
00032D24 <AmiBlitz3.ab3@24807>  BRA.w gc3skip
00032D26 <AmiBlitz3.ab3@24812> labcnt:   Ds.w 1
00032D28 <AmiBlitz3.ab3@24819>   MOVEQ.l #$02,D2
00032D2C <AmiBlitz3.ab3@24820>    BSR.w bakeval
00032D30 <AmiBlitz3.ab3@24822>   LEA ongotocode(PC),A0
00032D34 <AmiBlitz3.ab3@24823>   LEA ongotocodef(PC),A1
00032D38 <AmiBlitz3.ab3@24824>   MOVE.w #gc1skip-ongotocode,D1      ; is #$001A
00032D3C <AmiBlitz3.ab3@24825>   CMP.w #-$7FFB,D0                   ; was #$8005
00032D40 <AmiBlitz3.ab3@24826>    BEQ.w 'isok
00032D44 <AmiBlitz3.ab3@24827>   CMP.w #-$7FFA,D0                   ; was #$8006
00032D48 <AmiBlitz3.ab3@24828>    BNE.w JUMP_syntaxerr
00032D4C <AmiBlitz3.ab3@24829>   LEA ongosubcode(PC),A0
00032D50 <AmiBlitz3.ab3@24830>   LEA ongosubcodef(PC),A1
00032D54 <AmiBlitz3.ab3@24831>   MOVE.w #gc2skip-ongosubcode,D1     ; is #$001A
00032D5A <AmiBlitz3.ab3@24833>   TST.b debugmode
00032D5E <AmiBlitz3.ab3@24834>    BEQ.b 'isok
00032D64 <AmiBlitz3.ab3@24836>    JSR chkstak
00032D68 <AmiBlitz3.ab3@24837>   LEA ongcode(PC),A0
00032D6C <AmiBlitz3.ab3@24838>   LEA ongcodef(PC),A1
00032D70 <AmiBlitz3.ab3@24839>   MOVE.w #gc3skip-ongcode,D1         ; is #$001E
00032D72 <AmiBlitz3.ab3@24842>   MOVE.w D1,-(A7)
00032D78 <AmiBlitz3.ab3@24843>   MOVE.l destpointer,-(A7)                                 ;for when we know number of labels!
00032D7C <AmiBlitz3.ab3@24844>    BSR.w pokecode
00032D82 <AmiBlitz3.ab3@24845>   CLR.w labcnt
00032D88 <AmiBlitz3.ab3@24851>    JSR get1bytemain
00032D8E <AmiBlitz3.ab3@24852>   SUBQ.l #2,destpointer                                    ;for makealab!
00032D92 <AmiBlitz3.ab3@24853>    BSR.w makealab2
00032D98 <AmiBlitz3.ab3@24854>   ADDQ.l #2,destpointer
00032D9E <AmiBlitz3.ab3@24855>    JSR addoff
00032DA2 <AmiBlitz3.ab3@24856>   MOVE.l $8(A2),D1
00032DA6 <AmiBlitz3.ab3@24857>    BSR.w writelong
00032DAC <AmiBlitz3.ab3@24858>   ADDQ.w #1,labcnt
00032DB2 <AmiBlitz3.ab3@24859>    JSR reget
00032DB6 <AmiBlitz3.ab3@24860>   CMP.w #$2C,D0 ; ','
00032DBA <AmiBlitz3.ab3@24861>    BEQ.w 'loop
00032DBC <AmiBlitz3.ab3@24863>   MOVEA.l (A7)+,A0
00032DBE <AmiBlitz3.ab3@24864>   MOVE.w (A7)+,D2
00032DC4 <AmiBlitz3.ab3@24865>   MOVE.w dontwrite_nomemleft,D1
00032DC8 <AmiBlitz3.ab3@24866>    BNE.w 'done
00032DCC <AmiBlitz3.ab3@24868>   MOVE.w labcnt(PC),D1
00032DD0 <AmiBlitz3.ab3@24869>   MOVE.w D1,$A(A0)       ;for cmp#
00032DD2 <AmiBlitz3.ab3@24870>   ADD.w D1,D1
00032DD4 <AmiBlitz3.ab3@24871>   ADD.w D1,D1
00032DD6 <AmiBlitz3.ab3@24872>   ADDQ.w #2,D1
00032DDA <AmiBlitz3.ab3@24873>   MOVE.w D1,$2(A0,D2.W)  ;for bra!
00032DDC <AmiBlitz3.ab3@24876> RTS
00032DE2 <AmiBlitz3.ab3@24880>   TST.b debugmode
00032DE6 <AmiBlitz3.ab3@24881>    BEQ.w 'noerr
00032DEC <AmiBlitz3.ab3@24883>    JSR chkstak
00032DF2 <AmiBlitz3.ab3@24884>   MOVE.l goset,D1
00032DF6 <AmiBlitz3.ab3@24885>    BSR.w writelong
00032DFC <AmiBlitz3.ab3@24888>   MOVE.w gosubcode,D1
00032E00 <AmiBlitz3.ab3@24889> BRA.w dogoto2
00032E06 <AmiBlitz3.ab3@24893>   MOVE.w gotocode,D1
00032E08 <AmiBlitz3.ab3@24896>   MOVE.w D1,-(A7)
00032E0C <AmiBlitz3.ab3@24897>    BSR.w makealab2
00032E0E <AmiBlitz3.ab3@24898>   MOVE.w (A7)+,D1
00032E12 <AmiBlitz3.ab3@24899>    BSR.w writeword
00032E18 <AmiBlitz3.ab3@24900>    JSR addoff
00032E1C <AmiBlitz3.ab3@24901>   MOVE.l $8(A2),D1
00032E20 <AmiBlitz3.ab3@24902> BRA.w writelong
00032E26 <AmiBlitz3.ab3@24906>   MOVE.w proceduremode,D1
00032E2A <AmiBlitz3.ab3@24907>    BEQ.w JUMP_badpenderr
00032E2E <AmiBlitz3.ab3@24909>   MOVE.w #$4EF9,D1
00032E32 <AmiBlitz3.ab3@24910>    BSR.w writeword
00032E38 <AmiBlitz3.ab3@24911>    JSR addoff
00032E3E <AmiBlitz3.ab3@24913>   MOVEA.l _execbase,A6
00032E40 <AmiBlitz3.ab3@24914>   MOVEQ.l #$08,D0
00032E42 <AmiBlitz3.ab3@24915>   MOVEQ.l #$01,D1
00032E48 <AmiBlitz3.ab3@24918>   MOVE.l mempool,a0
00032E4C <AmiBlitz3.ab3@24919>   JSR _AllocPooled(a6)
00032E4E <AmiBlitz3.ab3@24921>   MOVEA.l D0,A0
00032E54 <AmiBlitz3.ab3@24922>   MOVE.l firstpend,(A0)
00032E5A <AmiBlitz3.ab3@24923>   MOVE.l A0,firstpend
00032E62 <AmiBlitz3.ab3@24924>   MOVE.l destpointer,$4(A0)
00032E66 <AmiBlitz3.ab3@24926> BRA.w writelong
00032E6A <AmiBlitz3.ab3@24930>   BSR.w do_AsmExit
00032E70 <AmiBlitz3.ab3@24931> JMP get1bytemain
00032E78 <AmiBlitz3.ab3@24936>   MOVE.b #1,nostringopt
00032E7C <AmiBlitz3.ab3@24937>   MOVEM.l a0/a1/d1,-(a7)
00032E82 <AmiBlitz3.ab3@24939>   MOVEA.l currentfunction,A0
00032E88 <AmiBlitz3.ab3@24941>     CMP.l #0,a0
00032E8C <AmiBlitz3.ab3@24942>     BNE 'l1
00032E92 <AmiBlitz3.ab3@24943>     JMP errorasmexit
00032E94 <AmiBlitz3.ab3@24946>   MOVEQ.l #$00,D2
00032E98 <AmiBlitz3.ab3@24948>   MOVE.b $5(A0),D2      ;type returning!
00032E9C <AmiBlitz3.ab3@24949>   BSR.w eval            ;put return val in d0.
00032EA2 <AmiBlitz3.ab3@24952>   MOVEA.l currentfunction,A0
00032EA6 <AmiBlitz3.ab3@24953>   MOVE.l funcstruct_returntype(a0),a0
00032EAC <AmiBlitz3.ab3@24954>   CMP.l #0,a0
00032EB0 <AmiBlitz3.ab3@24955>   BEQ 'isstatement
00032EB8 <AmiBlitz3.ab3@24956>   CMP.l #$100,4(a0)
00032EBC <AmiBlitz3.ab3@24957>   BLT.w 'isvar
00032EBE <AmiBlitz3.ab3@24958>   MOVE.l a2,a1
00032EC4 <AmiBlitz3.ab3@24959>   TST.l typetocast
00032EC8 <AmiBlitz3.ab3@24960>   BEQ 'nocast
00032ECE <AmiBlitz3.ab3@24961>   MOVE.l typetocast,a1
00032ED0 <AmiBlitz3.ab3@24964>   CMP.l a0,a1
00032ED4 <AmiBlitz3.ab3@24965>   BEQ 'ok
00032EDA <AmiBlitz3.ab3@24966>   CLR.l typetocast
00032EE0 <AmiBlitz3.ab3@24967>   MOVE.l lasttoken,d1
00032EE4 <AmiBlitz3.ab3@24968>   CMP.w #NullTokenID,d1                   ;$b581 ok, when token for null
00032EE8 <AmiBlitz3.ab3@24969>   BEQ 'isnull
00032EEE <AmiBlitz3.ab3@24972>   JMP errorconvertreturntype
00032EF2 <AmiBlitz3.ab3@24981>   MOVEM.l (a7)+,a0/a1/d1
00032EF6 <AmiBlitz3.ab3@24984> BRA.w do_AsmExit
00032EFC <AmiBlitz3.ab3@24986> error_convert_types2 JMP error_convert_types
00032F02 <AmiBlitz3.ab3@25002>   TST.b debugmode
00032F06 <AmiBlitz3.ab3@25003>    BEQ.w normret
00032F0A <AmiBlitz3.ab3@25004>   MOVE.w #$C305,D1        ; was #chkret,
00032F0E <AmiBlitz3.ab3@25005> BRA.w Atokejsr
00032F12 <AmiBlitz3.ab3@25012>   MOVE.w #$4E75,D1
00032F16 <AmiBlitz3.ab3@25013> BRA.w writeword
00032F1A <AmiBlitz3.ab3@25016> localslist:  Ds.l 1                                        ;all locals for procs.;??Looks like obsovled data??
00032F1E <AmiBlitz3.ab3@25017> proclocals:  Ds.l 1                                        ;for debugga!
00032F20 <AmiBlitz3.ab3@25018> procnum:     Ds.w 1
00032F22 <AmiBlitz3.ab3@25019> procnum2:    Ds.w 1
00032F26 <AmiBlitz3.ab3@25020> prolineat:   Ds.l 1
00032F2C <AmiBlitz3.ab3@25025>    TST.w proceduremode
00032F30 <AmiBlitz3.ab3@25026>    BGT JUMP_sreterr
00032F34 <AmiBlitz3.ab3@25028>    CMP.w #-$7FF9,D0     ;was #$8007
00032F38 <AmiBlitz3.ab3@25029>    BEQ.w stateret
00032F3A <AmiBlitz3.ab3@25030>    MOVEQ.l #-$01,D1  ;statement flag
00032F3E <AmiBlitz3.ab3@25031> BRA.w do_function2
00032F44 <AmiBlitz3.ab3@25033> JUMP_sreterr JMP sreterr
00032F4A <AmiBlitz3.ab3@25037>   CLR.b skipfunc
00032F50 <AmiBlitz3.ab3@25038>   TST.l unusedfunc
00032F54 <AmiBlitz3.ab3@25039>   BEQ 'ex
00032F58 <AmiBlitz3.ab3@25040>   MOVEM.l d0-d7/a0-a6,-(a7)
00032F5E <AmiBlitz3.ab3@25041>   MOVE.l unusedfunc,d1
00032F64 <AmiBlitz3.ab3@25042>   LEA ptr_parameterstore,a5
00032F66 <AmiBlitz3.ab3@25045>   MOVE.l d1,a0
00032F6A <AmiBlitz3.ab3@25046>   LEA 12(a0),a2
00032F6C <AmiBlitz3.ab3@25047>   MOVE.l a5,a1
00032F6E <AmiBlitz3.ab3@25049>   CMPM.b (a1)+,(a2)+
00032F72 <AmiBlitz3.ab3@25050>   BNE 'neq
00032F74 <AmiBlitz3.ab3@25051>   TST.b (a2)
00032F78 <AmiBlitz3.ab3@25052>   BNE 'ch
00032F7A <AmiBlitz3.ab3@25053>   TST.b (a1)
00032F7E <AmiBlitz3.ab3@25054>   BNE 'neq
00032F86 <AmiBlitz3.ab3@25055>   MOVE.b #1,skipfunc
00032F8A <AmiBlitz3.ab3@25056>  BRA 'out
00032F8C <AmiBlitz3.ab3@25059>   MOVE.l (a0),d1
00032F90 <AmiBlitz3.ab3@25060>   BNE 'ag
00032F94 <AmiBlitz3.ab3@25063>   MOVEM.l (a7)+,d0-d7/a0-a6
00032F96 <AmiBlitz3.ab3@25066> RTS
00032F9C <AmiBlitz3.ab3@25069> JUMP_dupprocerr  JMP dupprocerr
00032FA2 <AmiBlitz3.ab3@25070> JUMP_illprocperr JMP illprocperr
00032FA8 <AmiBlitz3.ab3@25071> JUMP_toovarerr   JMP toovarerr
00032FAE <AmiBlitz3.ab3@25072> JUMP_more6pard   JMP more6pard
00032FB6 <AmiBlitz3.ab3@25076>   CMP.w #-1,proceduremode                                  
00032FBA <AmiBlitz3.ab3@25077>    BEQ JUMP_sreterr
00032FBE <AmiBlitz3.ab3@25078>   CMP.w #-$7FF9,D0      ; was #$8007
00032FC2 <AmiBlitz3.ab3@25079>    BEQ.w do_function_return
00032FCC <AmiBlitz3.ab3@25083>   MOVE.w oldqflag,instringon
00032FD2 <AmiBlitz3.ab3@25084>   MOVEA.l lastsourcepos,A5
00032FD8 <AmiBlitz3.ab3@25086>   JSR getfunctionreturntype
00032FDE <AmiBlitz3.ab3@25087>   JSR get1bytemain
00032FE4 <AmiBlitz3.ab3@25093>   TST.b declare
00032FE8 <AmiBlitz3.ab3@25094>   BEQ 'l3
00032FF0 <AmiBlitz3.ab3@25095>   MOVE.b #1,nowdeclare
00032FF6 <AmiBlitz3.ab3@25099>   JSR errchx                                           ;writejumpoverfunction
00032FFC <AmiBlitz3.ab3@25103>   CLR.b fastfunc
00033006 <AmiBlitz3.ab3@25104>   MOVE.l firstiff,firstiffstore
0003300E <AmiBlitz3.ab3@25105>   CMP.l #"FAST",-1(a5)
00033012 <AmiBlitz3.ab3@25106>   BNE 'nofast
00033018 <AmiBlitz3.ab3@25107>   CMP.b #" ",3(a5)
0003301C <AmiBlitz3.ab3@25108>   BNE 'nofast
0003301E <AmiBlitz3.ab3@25109>   ADDQ.l #3,a5
00033022 <AmiBlitz3.ab3@25112>     CMP.b #" ",(a5)
00033026 <AmiBlitz3.ab3@25113>      BNE 'x1
00033028 <AmiBlitz3.ab3@25114>     ADDQ #1,a5
0003302C <AmiBlitz3.ab3@25115>  BRA 'x2
00033032 <AmiBlitz3.ab3@25118>   MOVE.l a5,lastsourcepos
0003303A <AmiBlitz3.ab3@25119>   MOVE.b #1,fastfunc
00033042 <AmiBlitz3.ab3@25122>   CMP.l #"NOOP",-1(a5)                                     ;compile 3* so its deactivate
00033046 <AmiBlitz3.ab3@25123>  BRA 'noopt
0003304C <AmiBlitz3.ab3@25125>   CMP.w #"T ",3(a5)                                        ;??Looks like dead code??
00033050 <AmiBlitz3.ab3@25126>   BNE 'noopt                                               ;          "
00033052 <AmiBlitz3.ab3@25127>   ADDQ.l #4,a5                                             ;          "
00033056 <AmiBlitz3.ab3@25130>     CMP.b #" ",(a5)                                        ;          "
0003305A <AmiBlitz3.ab3@25131>      BNE 'x1b                                              ;          "
0003305C <AmiBlitz3.ab3@25132>     ADDQ #1,a5                                             ;          "
00033060 <AmiBlitz3.ab3@25133>  BRA 'x2b
00033066 <AmiBlitz3.ab3@25136>   MOVE.l a5,lastsourcepos                                  ;          "
0003306C <AmiBlitz3.ab3@25137>   JSR makename2                                            ;          "
00033070 <AmiBlitz3.ab3@25138>  BRA 'l1                                                   ;          "
00033076 <AmiBlitz3.ab3@25141>   JSR makename2
0003307C <AmiBlitz3.ab3@25142>   JSR checkused
00033082 <AmiBlitz3.ab3@25143>   TST.b skipfunc
00033086 <AmiBlitz3.ab3@25144>    BEQ 'l1
0003308C <AmiBlitz3.ab3@25145>   JSR skipme
00033092 <AmiBlitz3.ab3@25146>   CLR.b fastfunc
00033094 <AmiBlitz3.ab3@25147>  RTS
0003309E <AmiBlitz3.ab3@25151>   MOVE.l linenumat,prolineat
000330A4 <AmiBlitz3.ab3@25153>   ADDQ.w #1,procnum2
000330AC <AmiBlitz3.ab3@25154>   MOVE.w procnum2(PC),procnum
000330B2 <AmiBlitz3.ab3@25155>   MOVE.w D1,proceduremode
000330B8 <AmiBlitz3.ab3@25156>   CLR.w locvaroff
000330BC <AmiBlitz3.ab3@25158>   CMP.w #$7B,D0   ;'{'
000330C0 <AmiBlitz3.ab3@25159>    BNE.w JUMP_syntaxerr
000330C8 <AmiBlitz3.ab3@25161>    MOVE.b #1,infunctioncode
000330CE <AmiBlitz3.ab3@25163>   MOVEA.l tempvm,A0
000330D6 <AmiBlitz3.ab3@25164>   MOVE.w $C(A0),memlibstat
000330DC <AmiBlitz3.ab3@25165>   BCLR #$7,$C(A0)                                          ;Bit out of range
000330E0 <AmiBlitz3.ab3@25166>   MOVE.w #$4EF9,D1  ;make a jump around the proc
000330E4 <AmiBlitz3.ab3@25167>    BSR.w writeword
000330EA <AmiBlitz3.ab3@25168>    JSR addoff
000330EE <AmiBlitz3.ab3@25169>    BSR.w writelong
000330F4 <AmiBlitz3.ab3@25171>    JSR findproc                                          ;findproc function
000330F8 <AmiBlitz3.ab3@25172>    BEQ.w JUMP_dupprocerr
000330FE <AmiBlitz3.ab3@25173>    JSR addlabel
00033104 <AmiBlitz3.ab3@25175>    MOVE.b #31,$20(a2)                                      ;increase if more pars
0003310A <AmiBlitz3.ab3@25176>    MOVE.b #0,isfunc(a2)
00033112 <AmiBlitz3.ab3@25177>    MOVE.l functionreturntype,funcstruct_returntype(a2)
0003311A <AmiBlitz3.ab3@25179>   MOVE.l destpointer,$E(A2)    ;new!
00033120 <AmiBlitz3.ab3@25180>   MOVE.l A2,currentfunction
00033126 <AmiBlitz3.ab3@25182>   LEA nops8,A0
0003312C <AmiBlitz3.ab3@25183>   LEA nopsf,A1
00033130 <AmiBlitz3.ab3@25184>    BSR.w pokecode2
00033136 <AmiBlitz3.ab3@25186>   TST.b debugmode
0003313A <AmiBlitz3.ab3@25187>    BEQ.b 'nodebug
0003313C <AmiBlitz3.ab3@25189>   MOVEQ.l #$04,D1
00033142 <AmiBlitz3.ab3@25190>    JSR writetrap
0003314C <AmiBlitz3.ab3@25191>   MOVE.l destpointer,proclocals
00033150 <AmiBlitz3.ab3@25192>    BSR.w writelong
00033154 <AmiBlitz3.ab3@25193>    BSR.w writelong
00033158 <AmiBlitz3.ab3@25196>    LEA $16(A2),A4
00033160 <AmiBlitz3.ab3@25197>   MOVE.b proceduremode+1,$5(A2)
00033162 <AmiBlitz3.ab3@25198>   MOVEQ.l #$00,D6
00033164 <AmiBlitz3.ab3@25199>   MOVEQ.l #$00,D5
0003316A <AmiBlitz3.ab3@25200>    JSR get1bytemain
0003316E <AmiBlitz3.ab3@25201>   CMP.w #$7D,D0        ; '}'
00033172 <AmiBlitz3.ab3@25202>    BEQ.w 'done
00033176 <AmiBlitz3.ab3@25206>    CMP.b #"@",d0
0003317A <AmiBlitz3.ab3@25207>    BNE 'l2
0003317C <AmiBlitz3.ab3@25208>    MOVE.l a0,-(a7)
00033182 <AmiBlitz3.ab3@25209>    MOVE.l currentfunction,a0
00033188 <AmiBlitz3.ab3@25210>    CMP.b #31,$20(a0)                                       ;increase if morepars
0003318C <AmiBlitz3.ab3@25211>    BNE 'l4
00033190 <AmiBlitz3.ab3@25212>    MOVE.b d6,$20(a0)                                       ;increase if morepar
00033196 <AmiBlitz3.ab3@25215>    JSR get1bytemain
00033198 <AmiBlitz3.ab3@25216>    MOVE.l (a7)+,a0
0003319C <AmiBlitz3.ab3@25220>    BSR.w getparameter
000331A0 <AmiBlitz3.ab3@25221>    BSR.w fetchvars
000331A8 <AmiBlitz3.ab3@25222>   CMPI.l #$7,$4(A2)
000331AC <AmiBlitz3.ab3@25223>    BNE.w 'notst
000331B2 <AmiBlitz3.ab3@25224>   LEA stbuff,A0
000331B4 <AmiBlitz3.ab3@25225>   MOVE.w D5,D1
000331B6 <AmiBlitz3.ab3@25226>   LSL.w #2,D1
000331BA <AmiBlitz3.ab3@25227>   MOVE.w D6,$0(A0,D1.W)
000331C0 <AmiBlitz3.ab3@25228>   MOVE.w $4(A3),$2(A0,D1.W)
000331C2 <AmiBlitz3.ab3@25229>   ADDQ.w #1,D5
000331C4 <AmiBlitz3.ab3@25230>   MOVEQ.l #$07,D2
000331C8 <AmiBlitz3.ab3@25231>  BRA.w 'pgot
000331CC <AmiBlitz3.ab3@25234>   MOVE.w #$2940,D1
000331CE <AmiBlitz3.ab3@25235>   MOVEQ.l #$03,D2
000331D6 <AmiBlitz3.ab3@25236>   BTST #$0,flagmask+1
000331DA <AmiBlitz3.ab3@25237>    BNE.w 'sgot
000331E2 <AmiBlitz3.ab3@25238>   CMPI.l #$100,$4(A2)
000331E6 <AmiBlitz3.ab3@25239>    BCC.w JUMP_illprocperr
000331EA <AmiBlitz3.ab3@25240>   MOVE.w $6(A2),D2
000331EE <AmiBlitz3.ab3@25241>   CMP.w #$2,D2
000331F2 <AmiBlitz3.ab3@25242>    BHI.w 'sgot
000331F6 <AmiBlitz3.ab3@25243>    BEQ.w 'wgot
000331FA <AmiBlitz3.ab3@25244>   EORI.w #$3000,D1
000331FE <AmiBlitz3.ab3@25245>  BRA.w 'sgot
00033202 <AmiBlitz3.ab3@25248>   ORI.w #$1000,D1
00033204 <AmiBlitz3.ab3@25251>   OR.w D6,D1
0003320A <AmiBlitz3.ab3@25253>   TST.b fpu
0003320E <AmiBlitz3.ab3@25254>   BEQ 'nofpu
00033212 <AmiBlitz3.ab3@25255>   CMP.b #5,d2
00033216 <AmiBlitz3.ab3@25256>   BNE 'nofpu
0003321A <AmiBlitz3.ab3@25257>   CMP.w #6,d6
0003321E <AmiBlitz3.ab3@25258>   BLT 'l10a
00033224 <AmiBlitz3.ab3@25259>   CMP.l #newtype_double,a2
00033228 <AmiBlitz3.ab3@25260>   BEQ JUMP_more6pard
0003322C <AmiBlitz3.ab3@25261>  BRA 'nofpu
00033232 <AmiBlitz3.ab3@25264>   MOVE.l #$f22c6400,d1
00033236 <AmiBlitz3.ab3@25265>   MOVEM.l d0/a4,-(a7)
00033238 <AmiBlitz3.ab3@25266>   MOVE.l d6,d0
0003323A <AmiBlitz3.ab3@25267>   ASL.l #7,d0
0003323C <AmiBlitz3.ab3@25268>   OR.w d0,d1
00033242 <AmiBlitz3.ab3@25269>   CMP.l #newtype_double,a2
00033246 <AmiBlitz3.ab3@25270>   BNE 'l5
0003324C <AmiBlitz3.ab3@25271>   OR.l #$1000,d1
00033250 <AmiBlitz3.ab3@25274>   BSR writelong
00033254 <AmiBlitz3.ab3@25275>   MOVE.w 4(a3),d1
00033258 <AmiBlitz3.ab3@25276>   BSR writeword
0003325C <AmiBlitz3.ab3@25277>   MOVEM.l (a7)+,a4/d0
00033260 <AmiBlitz3.ab3@25278>  BRA 'pgot
00033262 <AmiBlitz3.ab3@25282>   MOVE.l A4,-(A7)
00033266 <AmiBlitz3.ab3@25284>    CMP.w #6,d6
0003326A <AmiBlitz3.ab3@25285>    BLT 'l10
0003326E <AmiBlitz3.ab3@25286>    MOVE.w #$c500-4,d1                                      ;savetemp+regnum
00033270 <AmiBlitz3.ab3@25287>    ADD.w d6,d1
00033276 <AmiBlitz3.ab3@25288>    JSR Atokejsr
0003327C <AmiBlitz3.ab3@25289>    TST.w dontwrite_nomemleft
00033280 <AmiBlitz3.ab3@25290>    BNE 'l10
00033286 <AmiBlitz3.ab3@25291>    MOVE.l data1start,d1
0003328C <AmiBlitz3.ab3@25292>    MOVE.l destpointer,a4
00033290 <AmiBlitz3.ab3@25293>    ADD.l d1,-6(a4)
00033296 <AmiBlitz3.ab3@25294>    MOVE.l destpointer,d1
00033298 <AmiBlitz3.ab3@25295>    SUBQ.l #6,d1
0003329E <AmiBlitz3.ab3@25296>    SUB.l destbufferstart,d1
000332A0 <AmiBlitz3.ab3@25298>    MOVE.l d2,-(a7)
000332A2 <AmiBlitz3.ab3@25299>    MOVE.l d1,d2
000332A8 <AmiBlitz3.ab3@25300>    JSR addhunkoffset                                       ;move.l $0,-x(a4)
000332AA <AmiBlitz3.ab3@25301>    MOVE.l (a7)+,d2
000332B0 <AmiBlitz3.ab3@25302>    MOVE.l destpointer,a4
000332B4 <AmiBlitz3.ab3@25303>    CMP.w #2,d2
000332B8 <AmiBlitz3.ab3@25304>    BNE 'nw1
000332BE <AmiBlitz3.ab3@25306>    MOVE.w #$3979,-8(a4)                                    ;move.w $0,-x(a4)
000332C6 <AmiBlitz3.ab3@25307>    ADD.l #2,-6(a4)
000332CA <AmiBlitz3.ab3@25310>    CMP.w #1,d2
000332CE <AmiBlitz3.ab3@25311>    BNE 'nb
000332D4 <AmiBlitz3.ab3@25312>    MOVE.w #$1979,-8(a4)                                    ;move.b $0,-x(a4)
000332DC <AmiBlitz3.ab3@25313>    ADD.l #3,-6(a4)
000332E2 <AmiBlitz3.ab3@25316>    MOVE.w $4(a3),-2(a4)
000332E6 <AmiBlitz3.ab3@25317>  BRA 'ne1
000332EA <AmiBlitz3.ab3@25321>   BSR.w writeword                                          ;write storeparameter
000332EE <AmiBlitz3.ab3@25324>   MOVE.w $4(A3),D1
000332F2 <AmiBlitz3.ab3@25325>    BSR.w writeword
000332F4 <AmiBlitz3.ab3@25328>   MOVEA.l (A7)+,A4
000332FA <AmiBlitz3.ab3@25332>   CLR.l functionreturntype
000332FC <AmiBlitz3.ab3@25334>   ADDQ.w #1,D6
00033300 <AmiBlitz3.ab3@25335>   CMP.w #11,D6          ; was #7                            ;max function parameters
00033304 <AmiBlitz3.ab3@25336>    BCC.w JUMP_toovarerr
0003330A <AmiBlitz3.ab3@25338>   MOVE.l currentfunction,a0
0003330E <AmiBlitz3.ab3@25339>   MOVE.l a2,funcstruct_parametertype-4(a0,d6*4)             ;-4 because d6 is increment before
00033310 <AmiBlitz3.ab3@25341>   MOVE.b D2,(A4)+
00033314 <AmiBlitz3.ab3@25342>   CMP.w #$2C,D0      ;','
00033318 <AmiBlitz3.ab3@25343>    BNE.w 'nomore
0003331E <AmiBlitz3.ab3@25344>    JSR get1bytemain
00033322 <AmiBlitz3.ab3@25358>  BRA.w 'more
00033326 <AmiBlitz3.ab3@25361>   CMP.w #$7D,D0
0003332A <AmiBlitz3.ab3@25362>    BNE.w JUMP_syntaxerr
00033330 <AmiBlitz3.ab3@25365>   MOVEA.l currentfunction,A2
00033332 <AmiBlitz3.ab3@25366>   LSL.w #4,D5
00033334 <AmiBlitz3.ab3@25367>   OR.w D5,D6
00033338 <AmiBlitz3.ab3@25368>   MOVE.b D6,$4(A2)
0003333A <AmiBlitz3.ab3@25369>   LSR.w #4,D6
0003333E <AmiBlitz3.ab3@25370>    BEQ.w 'nostrings
00033344 <AmiBlitz3.ab3@25371>   LEA stbuff,A0
00033346 <AmiBlitz3.ab3@25372>   SUBQ.w #1,D6
00033348 <AmiBlitz3.ab3@25378>     MOVE.w D6,D1                                           ;function stringpars
0003334A <AmiBlitz3.ab3@25379>     LSL.w #2,D1                                            ;stringsize was 2
0003334C <AmiBlitz3.ab3@25382>       LSL.w #1,d1
0003334E <AmiBlitz3.ab3@25383>       ADDQ.w #4,d1
00033350 <AmiBlitz3.ab3@25386>     ADDQ.w #8,D1
00033356 <AmiBlitz3.ab3@25387>     MOVE.w D1,funcst+2
0003335C <AmiBlitz3.ab3@25388>     MOVE.l funcst,D1
00033360 <AmiBlitz3.ab3@25389>     BSR.w writelong
00033362 <AmiBlitz3.ab3@25390>     MOVE.w (A0)+,D1
00033366 <AmiBlitz3.ab3@25392>     CMP.b #5,d1
0003336A <AmiBlitz3.ab3@25393>     BLE 's1
0003336E <AmiBlitz3.ab3@25394>     MOVE.w #$266c,d1                                       ;native move.l 4(a4),a3
00033372 <AmiBlitz3.ab3@25395>     BSR writeword    ; was writeinstruction  tomsmart1
00033374 <AmiBlitz3.ab3@25396>     MOVE.w D6,D1                                           ;function stringpars
00033376 <AmiBlitz3.ab3@25397>     LSL.w #2,D1                                            ;stringsize was 2
00033378 <AmiBlitz3.ab3@25399>       LSL.w #1,d1
0003337A <AmiBlitz3.ab3@25401>     ADDQ.w #8,D1
0003337E <AmiBlitz3.ab3@25402>     BSR writeword
00033382 <AmiBlitz3.ab3@25403>   BRA 's2
00033388 <AmiBlitz3.ab3@25407>     OR.w movedna3,D1
0003338C <AmiBlitz3.ab3@25408>      BSR.w writeword
00033392 <AmiBlitz3.ab3@25411>     MOVE.w (A0)+,least+2
00033398 <AmiBlitz3.ab3@25412>     MOVE.l least,D1
0003339C <AmiBlitz3.ab3@25413>      BSR.w writelong
0003339E <AmiBlitz3.ab3@25414>     MOVE.l A0,-(A7)
000333A2 <AmiBlitz3.ab3@25415>     MOVE.w #$C700,D1
000333A6 <AmiBlitz3.ab3@25416>      BSR.w Atokejsr
000333A8 <AmiBlitz3.ab3@25417>     MOVEA.l (A7)+,A0
000333AC <AmiBlitz3.ab3@25418>   DBF D6,'stloop
000333B2 <AmiBlitz3.ab3@25421> JMP get1bytemain
000333B8 <AmiBlitz3.ab3@25425>   MOVE.w dontwrite_nomemleft,D1
000333BC <AmiBlitz3.ab3@25426>    BNE.w 'skip
000333C2 <AmiBlitz3.ab3@25427>   MOVE.l destpointer,-(A7)
000333C8 <AmiBlitz3.ab3@25429>   MOVE.l A0,destpointer
000333CE <AmiBlitz3.ab3@25430>   MOVE.l linksize,D1
000333D2 <AmiBlitz3.ab3@25431>    BSR.w writelong                                         ;writefunctions jumppos
000333D8 <AmiBlitz3.ab3@25433>    TST.b fastfunc
000333DC <AmiBlitz3.ab3@25434>    BNE 'skip1
000333E0 <AmiBlitz3.ab3@25436>   MOVE.w #$CC00,D1      ; was #clrloc
000333E4 <AmiBlitz3.ab3@25437>    BSR.w tokejsr2                                          ;write clearvars
000333EA <AmiBlitz3.ab3@25440>   MOVE.l (A7)+,destpointer
000333EC <AmiBlitz3.ab3@25443> RTS
000333F2 <AmiBlitz3.ab3@25446> JUMP_errormsg_nofast  JMP errormsg_nofast
000333F8 <AmiBlitz3.ab3@25451>   MOVEA.l currentfunction,A2
000333FC <AmiBlitz3.ab3@25452>   MOVEA.l $E(A2),A0          ;pc of proc
00033400 <AmiBlitz3.ab3@25453>   MOVE.w $6(A2),D1
00033404 <AmiBlitz3.ab3@25454>    BEQ.w 'skiplink
0003340A <AmiBlitz3.ab3@25455>   MOVE.w D1,linksize+2
0003340E <AmiBlitz3.ab3@25456>   MOVE.w $8(A2),D1                                         ;check if function memalloc need
00033412 <AmiBlitz3.ab3@25457>    BNE.w 'howdy
00033414 <AmiBlitz3.ab3@25461>   ADDQ.w #6,A0
00033418 <AmiBlitz3.ab3@25462>   MOVE.l A0,$E(A2)
0003341C <AmiBlitz3.ab3@25463>  BRA.w linkput
0003341E <AmiBlitz3.ab3@25468>   MOVE.l A0,-(A7)
00033422 <AmiBlitz3.ab3@25469>    BSR.w linkput
00033424 <AmiBlitz3.ab3@25470>   MOVEA.l (A7)+,A0
00033428 <AmiBlitz3.ab3@25471>   LEA $A(A0),A0
0003342E <AmiBlitz3.ab3@25472>   MOVEA.l currentfunction,A2
00033432 <AmiBlitz3.ab3@25473>  BRA.w 'cont
00033436 <AmiBlitz3.ab3@25476>   MOVE.w $8(A2),D1
0003343A <AmiBlitz3.ab3@25477>    BNE.w 'cont
0003343E <AmiBlitz3.ab3@25478>   LEA $10(A0),A0
00033442 <AmiBlitz3.ab3@25479>   MOVE.l A0,$E(A2)
00033444 <AmiBlitz3.ab3@25480>  RTS
0003344A <AmiBlitz3.ab3@25483>    MOVE.w dontwrite_nomemleft,D1                                     ;writeallocmem for functions (after releasemem called)
0003344E <AmiBlitz3.ab3@25484>    BNE.w 'contskip
00033454 <AmiBlitz3.ab3@25487>    TST.b fastfunc
00033458 <AmiBlitz3.ab3@25488>    BNE JUMP_errormsg_nofast
0003345E <AmiBlitz3.ab3@25490>   MOVE.l destpointer,-(A7)
00033464 <AmiBlitz3.ab3@25491>   MOVE.l A0,destpointer
00033468 <AmiBlitz3.ab3@25492>   MOVE.w #$4EB9,D1      ;jsr
0003346C <AmiBlitz3.ab3@25493>    BSR.w writeword
00033472 <AmiBlitz3.ab3@25494>    JSR addoff
00033476 <AmiBlitz3.ab3@25495>    BSR.w writelong
00033478 <AmiBlitz3.ab3@25497>   MOVEA.l (A7)+,A0
0003347E <AmiBlitz3.ab3@25498>   MOVEA.l destpointer,A1
00033480 <AmiBlitz3.ab3@25499>   MOVE.l A0,-(A1)
00033486 <AmiBlitz3.ab3@25500>   MOVE.l A0,destpointer
0003348A <AmiBlitz3.ab3@25503>   MOVE.w $8(A2),D4
0003348E <AmiBlitz3.ab3@25504>    BPL.w 'linky
00033492 <AmiBlitz3.ab3@25505>   MOVE.w #$C004,D1   ; was  #newmem
00033496 <AmiBlitz3.ab3@25506>    BSR.w tokejsr2
0003349C <AmiBlitz3.ab3@25507>   MOVEA.l currentfunction,A2
000334A0 <AmiBlitz3.ab3@25508>   MOVE.w $8(A2),D4
000334A4 <AmiBlitz3.ab3@25509>   ANDI.w #$7FFF,D4        ;#32767,
000334A8 <AmiBlitz3.ab3@25512>    BEQ.w 'skipstat
000334AC <AmiBlitz3.ab3@25516>   MOVE.b $4(A2),D1
000334B0 <AmiBlitz3.ab3@25517>   ANDI.w #$F,D1
000334B2 <AmiBlitz3.ab3@25518>   MOVE.w D1,-(A7)
000334B6 <AmiBlitz3.ab3@25519>   CMP.w #$5,D1
000334BA <AmiBlitz3.ab3@25520>    BCS.w 'npush
000334BE <AmiBlitz3.ab3@25521>   MOVE.w #$2F04,D1
000334C2 <AmiBlitz3.ab3@25522>    BSR.w writeword
000334C8 <AmiBlitz3.ab3@25525>   MOVE.l locdatast,D3
000334CE <AmiBlitz3.ab3@25526>    JSR datastart
000334D2 <AmiBlitz3.ab3@25527>   MOVE.w #$C501,D1    ; was #localstat
000334D6 <AmiBlitz3.ab3@25528>    BSR.w tokejsr2
000334D8 <AmiBlitz3.ab3@25530>   MOVE.w (A7)+,D1
000334DC <AmiBlitz3.ab3@25531>   CMP.w #$5,D1
000334E0 <AmiBlitz3.ab3@25532>    BCS.w 'skipstat
000334E4 <AmiBlitz3.ab3@25533>   MOVE.w #$281F,D1
000334E8 <AmiBlitz3.ab3@25534>    BSR.w writeword
000334EC <AmiBlitz3.ab3@25537>   MOVE.w #$4E75,D1
000334F0 <AmiBlitz3.ab3@25538> BRA.w writeword
000334F6 <AmiBlitz3.ab3@25542>   LEA mwait,A0
000334FC <AmiBlitz3.ab3@25543>   LEA mwaitf,A1
00033500 <AmiBlitz3.ab3@25544> BRA.w pokecode
00033506 <AmiBlitz3.ab3@25547> JUMP_laberr    JMP laberr
0003350C <AmiBlitz3.ab3@25548> JUMP_typeerr   JMP typeerr
00033512 <AmiBlitz3.ab3@25549> JUMP_dupofferr JMP dupofferr
00033516 <AmiBlitz3.ab3@25552>   CMP.w #$2E,D0           ;'.'
0003351A <AmiBlitz3.ab3@25553>   BNE.w JUMP_syntaxerr
00033520 <AmiBlitz3.ab3@25554>   JSR getparameter2
00033524 <AmiBlitz3.ab3@25555>   BEQ.w JUMP_laberr
0003352A <AmiBlitz3.ab3@25556>   LEA newtypebase,A2
00033530 <AmiBlitz3.ab3@25557>   JSR findtype
00033534 <AmiBlitz3.ab3@25558>   BNE.w 'ok1
0003353C <AmiBlitz3.ab3@25559>   CMPI.l #MaxByte,$4(A2)    ; was #$FF
00033540 <AmiBlitz3.ab3@25560>   BNE.w JUMP_typeerr
00033544 <AmiBlitz3.ab3@25561>  BRA.w 'ok2
0003354A <AmiBlitz3.ab3@25564>   JSR addlabel
0003354E <AmiBlitz3.ab3@25567>   CLR.l $4(A2)
00033554 <AmiBlitz3.ab3@25568>   MOVE.l A2,thistype
0003355A <AmiBlitz3.ab3@25569>   CLR.l prevtype
00033560 <AmiBlitz3.ab3@25570>   CLR.w typelen
00033566 <AmiBlitz3.ab3@25571>   CLR.w linemode
0003356C <AmiBlitz3.ab3@25572>   JSR reget
00033570 <AmiBlitz3.ab3@25573>   BNE.w typemode
00033572 <AmiBlitz3.ab3@25574> RTS
00033576 <AmiBlitz3.ab3@25578>   CMP.w #-$7FFE,D0      ; was #$8002
0003357A <AmiBlitz3.ab3@25579>   BEQ.w doend2
00033584 <AmiBlitz3.ab3@25582>   MOVE.w oldqflag,instringon
0003358A <AmiBlitz3.ab3@25583>   MOVEA.l lastsourcepos,A5
0003358C <AmiBlitz3.ab3@25585>   MOVEQ.l #$00,D6      ;not pointer
00033590 <AmiBlitz3.ab3@25586>   CMP.w #$2A,D0        ;'*'
00033594 <AmiBlitz3.ab3@25587>   BNE.w 'skip
00033596 <AmiBlitz3.ab3@25588>   MOVEQ.l #$01,D6
0003359C <AmiBlitz3.ab3@25589>   JSR get1bytemain
000335A0 <AmiBlitz3.ab3@25590>  BRA.w 'skipv
000335A4 <AmiBlitz3.ab3@25593>   CMP.w #$40,D0         ;'@'
000335A8 <AmiBlitz3.ab3@25594>   BNE.w 'skipv
000335AA <AmiBlitz3.ab3@25595>   MOVEQ.l #$05,D6
000335B0 <AmiBlitz3.ab3@25596>   JSR get1bytemain
000335B6 <AmiBlitz3.ab3@25599>   MOVE.w D6,flagmask
000335BC <AmiBlitz3.ab3@25600>   JSR getparameter2
000335C0 <AmiBlitz3.ab3@25601>   BEQ.w JUMP_syntaxerr
000335C6 <AmiBlitz3.ab3@25602>   MOVEA.l thistype,A2
000335C8 <AmiBlitz3.ab3@25603>   ADDQ.w #4,A2
000335CE <AmiBlitz3.ab3@25604>   JSR findvariable2
000335D2 <AmiBlitz3.ab3@25605>   BEQ.w JUMP_dupofferr     ;beq    .skip2
000335D8 <AmiBlitz3.ab3@25607>   JSR addlabel
000335DA <AmiBlitz3.ab3@25610>   MOVE.l A2,-(A7)
000335DE <AmiBlitz3.ab3@25611>   CMP.w #$2E,D0           ;'.'
000335E2 <AmiBlitz3.ab3@25612>    BEQ.w 'skip3
000335E6 <AmiBlitz3.ab3@25613>   CMP.w #$24,D0           ;'$'
000335EA <AmiBlitz3.ab3@25614>    BNE.w 'notstring
000335F0 <AmiBlitz3.ab3@25615>   MOVE.l #newtype_string,D2
000335F6 <AmiBlitz3.ab3@25616>    JSR get1bytemain
000335FA <AmiBlitz3.ab3@25617>  BRA.w 'skip4a
00033600 <AmiBlitz3.ab3@25620>   MOVE.l prevtype,D2
00033604 <AmiBlitz3.ab3@25621>   BEQ.w JUMP_notypeerr2
00033608 <AmiBlitz3.ab3@25622>  BRA.w 'skip4
0003360E <AmiBlitz3.ab3@25625>   JSR getparameter2
00033612 <AmiBlitz3.ab3@25626>    BEQ.w JUMP_syntaxerr
00033618 <AmiBlitz3.ab3@25627>   LEA newtypebase,A2
0003361E <AmiBlitz3.ab3@25628>    JSR findtype
00033622 <AmiBlitz3.ab3@25629>    BEQ.w 'gotit
0003362A <AmiBlitz3.ab3@25630>   BTST #$0,flagmask+1
0003362E <AmiBlitz3.ab3@25631>    BEQ.w JUMP_notypeerr2
00033634 <AmiBlitz3.ab3@25635>   JSR addlabel
0003363C <AmiBlitz3.ab3@25640>   MOVE.w linenumat+2,$8(A2)
00033644 <AmiBlitz3.ab3@25641>   MOVE.l #MaxByte,$4(A2)       ; was $FF  ;set to pointer crap
00033646 <AmiBlitz3.ab3@25644>   MOVE.l A2,D2
0003364C <AmiBlitz3.ab3@25647>   CMP.l #newtype_byte,D2
00033650 <AmiBlitz3.ab3@25648>    BEQ.w 'byte
00033656 <AmiBlitz3.ab3@25651>   ADDQ.w #1,typelen
0003365E <AmiBlitz3.ab3@25652>   BCLR #$0,typelen+1
00033660 <AmiBlitz3.ab3@25655>   MOVEQ.l #$00,D3
00033662 <AmiBlitz3.ab3@25656>   MOVEA.l D2,A2
00033668 <AmiBlitz3.ab3@25657>   MOVE.l A2,prevtype
0003366C <AmiBlitz3.ab3@25658>   MOVE.w $8(A2),D3
0003366E <AmiBlitz3.ab3@25659>   MOVEA.l (A7)+,A2
00033672 <AmiBlitz3.ab3@25660>   MOVE.l D2,$A(A2)
00033674 <AmiBlitz3.ab3@25661>   MOVEQ.l #$00,D4
0003367A <AmiBlitz3.ab3@25662>   MOVE.w typelen,D4
0003367E <AmiBlitz3.ab3@25663>   MOVE.w D4,$4(A2)
00033686 <AmiBlitz3.ab3@25664>   BTST #$0,flagmask+1
0003368A <AmiBlitz3.ab3@25665>    BEQ.w 'skipz
0003368C <AmiBlitz3.ab3@25666>   MOVEQ.l #$04,D3
00033690 <AmiBlitz3.ab3@25669>   CMP.w #$5B,D0            ;'['
00033694 <AmiBlitz3.ab3@25670>    BNE.w 'skipzz
00033698 <AmiBlitz3.ab3@25674>   MOVEM.l D3-D4/A2,-(A7)
0003369C <AmiBlitz3.ab3@25675>    BSR.w evalconst3
000336A0 <AmiBlitz3.ab3@25676>   CMP.w #$5D,D0            ;']'
000336A4 <AmiBlitz3.ab3@25677>    BNE.w JUMP_syntaxerr
000336A6 <AmiBlitz3.ab3@25678>   TST.w D6
000336AA <AmiBlitz3.ab3@25679>    BNE.w JUMP_fpconerr
000336AC <AmiBlitz3.ab3@25680>   MOVE.l D3,D1
000336B0 <AmiBlitz3.ab3@25681>   MOVEM.l (A7)+,D3-D4/A2
000336B6 <AmiBlitz3.ab3@25682>    JSR get1bytemain
000336BA <AmiBlitz3.ab3@25683>   MOVE.w D1,$8(A2)
000336BE <AmiBlitz3.ab3@25684>   MULU.l d1,d3                                             ;>32k fix was mulu.w
000336C6 <AmiBlitz3.ab3@25685>   ORI.w #$2,flagmask
000336C8 <AmiBlitz3.ab3@25688>   ADD.l D3,D4
000336CE <AmiBlitz3.ab3@25691>     CMP.l #65532,d4
000336D2 <AmiBlitz3.ab3@25697>   BCC JUMP_toolongerr
000336DA <AmiBlitz3.ab3@25698>   MOVE.w flagmask,$6(A2)
000336E0 <AmiBlitz3.ab3@25699>   MOVE.w D4,typelen
000336E2 <AmiBlitz3.ab3@25700> RTS
000336E8 <AmiBlitz3.ab3@25703> JUMP_badenderr  JMP badenderr
000336EE <AmiBlitz3.ab3@25704> JUMP_noiferr    JMP noiferr
000336F4 <AmiBlitz3.ab3@25705> JUMP_toolongerr JMP toolongerr
000336FA <AmiBlitz3.ab3@25706> JUMP_fpconerr   JMP fpconerr
00033700 <AmiBlitz3.ab3@25710>   MOVE.l firstiff,D0
00033704 <AmiBlitz3.ab3@25711>    BEQ.w JUMP_noiferr
00033706 <AmiBlitz3.ab3@25712>   MOVEA.l D0,A0
0003370A <AmiBlitz3.ab3@25713>   MOVE.w $C(A0),D0
0003370E <AmiBlitz3.ab3@25714>   ANDI.w #$FF,D0
00033710 <AmiBlitz3.ab3@25715>   CMP.w D0,D1
00033714 <AmiBlitz3.ab3@25716>    BNE.w JUMP_badenderr
00033718 <AmiBlitz3.ab3@25719>   CMP.w #$1,D1
0003371C <AmiBlitz3.ab3@25720>   BNE.w 'calcbra
00033720 <AmiBlitz3.ab3@25722>   MOVE.w #$6000,D1
00033726 <AmiBlitz3.ab3@25725>     TST.b fast
0003372A <AmiBlitz3.ab3@25726>     BEQ 'l1
00033730 <AmiBlitz3.ab3@25727>     OR.l #$ff,d1
00033734 <AmiBlitz3.ab3@25732>   BSR.w writeword
0003373A <AmiBlitz3.ab3@25733>   MOVEA.l destpointer,A1
0003373E <AmiBlitz3.ab3@25734>   MOVE.l $4(A0),D1
00033740 <AmiBlitz3.ab3@25735>   SUB.l A1,D1
00033746 <AmiBlitz3.ab3@25738>     TST.b fast
0003374A <AmiBlitz3.ab3@25739>     BEQ 'l2
0003374E <AmiBlitz3.ab3@25740>     BSR writelong
00033752 <AmiBlitz3.ab3@25741>   BRA 'calcbra
00033756 <AmiBlitz3.ab3@25746>   BSR.w writeword
0003375A <AmiBlitz3.ab3@25749>   MOVEA.l $8(A0),A1                                        ;write if branch destination
00033760 <AmiBlitz3.ab3@25750>   MOVE.l destpointer,D1
00033762 <AmiBlitz3.ab3@25751>   SUB.l A1,D1
00033768 <AmiBlitz3.ab3@25754>     TST.b fast
0003376C <AmiBlitz3.ab3@25755>     BEQ 'l3
0003376E <AmiBlitz3.ab3@25756>     ADDQ.l #4,D1
00033774 <AmiBlitz3.ab3@25757>     MOVE.w dontwrite_nomemleft,D0
00033778 <AmiBlitz3.ab3@25758>     BNE.w 'skip
0003377C <AmiBlitz3.ab3@25759>     MOVE.l d1,-$4(a1)
00033780 <AmiBlitz3.ab3@25760>   BRA 'skip
00033782 <AmiBlitz3.ab3@25765>   ADDQ.l #2,d1
00033788 <AmiBlitz3.ab3@25767>   TST.w dontwrite_nomemleft
0003378C <AmiBlitz3.ab3@25769>   BNE 'skip
00033792 <AmiBlitz3.ab3@25771>   CMP.l #MinWordSgnd,D1
00033796 <AmiBlitz3.ab3@25772>   BCC.w JUMP_bigiferr
0003379A <AmiBlitz3.ab3@25774>   MOVE.w D1,-$2(A1)
0003379C <AmiBlitz3.ab3@25777> RTS
000337A2 <AmiBlitz3.ab3@25779> JUMP_bigiferr JMP bigiferr
000337AC <AmiBlitz3.ab3@25784>   MOVE.w oldqflag,instringon
000337B2 <AmiBlitz3.ab3@25785>   MOVEA.l lastsourcepos,A5
000337B4 <AmiBlitz3.ab3@25788>   MOVEQ.l #$01,D1
000337B8 <AmiBlitz3.ab3@25789> BRA.w doendif
000337C2 <AmiBlitz3.ab3@25793>   MOVE.w oldqflag,instringon
000337C8 <AmiBlitz3.ab3@25794>   MOVEA.l lastsourcepos,A5
000337CA <AmiBlitz3.ab3@25797>   MOVEQ.l #$00,D1
000337CE <AmiBlitz3.ab3@25800>   BSR.w doendif3
000337D2 <AmiBlitz3.ab3@25801>   BSR.w freetheifz
000337D8 <AmiBlitz3.ab3@25802> JMP get1bytemain
000337DE <AmiBlitz3.ab3@25806>   MOVE.l (A0),firstiff
000337E0 <AmiBlitz3.ab3@25807>   MOVEA.l A0,A1
000337E2 <AmiBlitz3.ab3@25808>   MOVEQ.l #$0E,D0
000337E8 <AmiBlitz3.ab3@25809>   MOVEA.l _execbase,A6
000337EE <AmiBlitz3.ab3@25812>   MOVE.l mempool,a0
000337F2 <AmiBlitz3.ab3@25813> JMP _FreePooled(A6)
000337F8 <AmiBlitz3.ab3@25817> JUMP_modeerr JMP modeerr
000337FE <AmiBlitz3.ab3@25818> JUMP_interr3 JMP interr3
00033804 <AmiBlitz3.ab3@25819> JUMP_interr JMP interr
0003380A <AmiBlitz3.ab3@25823>   JSR get1bytemain
0003380E <AmiBlitz3.ab3@25826>   BEQ.w 'done
00033816 <AmiBlitz3.ab3@25828>   CMP.l #"noa7",-1(a5)
0003381A <AmiBlitz3.ab3@25829>   BNE 'l1
00033820 <AmiBlitz3.ab3@25830>   JSR get1bytemain
00033826 <AmiBlitz3.ab3@25831>   JSR get1bytemain
0003382C <AmiBlitz3.ab3@25832>   JSR get1bytemain
00033834 <AmiBlitz3.ab3@25833>   MOVE.w #$3a,lastchar
00033838 <AmiBlitz3.ab3@25834>  BRA 'done
0003383E <AmiBlitz3.ab3@25837>   CMP.w #"d0",-1(a5)
00033842 <AmiBlitz3.ab3@25838>   BNE 'l2
0003384A <AmiBlitz3.ab3@25839>   MOVE.b #1,returncode
00033850 <AmiBlitz3.ab3@25840>   CLR.w lastchar
00033854 <AmiBlitz3.ab3@25841>  BRA 'done
00033858 <AmiBlitz3.ab3@25844>   CMP.w #$80d7,d0
0003385C <AmiBlitz3.ab3@25845>   BNE 'loop
00033862 <AmiBlitz3.ab3@25846>   JSR skiprest
00033864 <AmiBlitz3.ab3@25847>  RTS
00033868 <AmiBlitz3.ab3@25851>   BSR.w 'doend3
0003386E <AmiBlitz3.ab3@25852>   JSR reget
00033872 <AmiBlitz3.ab3@25853>   BNE.w 'loop
00033874 <AmiBlitz3.ab3@25854>  RTS
00033878 <AmiBlitz3.ab3@25857>   CMP.w #-$7FFF,D0        ; was #$8001
0003387C <AmiBlitz3.ab3@25858>    BNE.w 'nottype
00033882 <AmiBlitz3.ab3@25859>   MOVE.w linemode,D1
00033886 <AmiBlitz3.ab3@25860>    BNE.w JUMP_modeerr
0003388C <AmiBlitz3.ab3@25861>   ADDQ.w #1,typelen
00033894 <AmiBlitz3.ab3@25862>   BCLR #$0,typelen+1
0003389A <AmiBlitz3.ab3@25863>   MOVEA.l thistype,A0
000338A2 <AmiBlitz3.ab3@25864>   MOVE.w typelen,$8(A0)
000338AA <AmiBlitz3.ab3@25865>   MOVE.w #$FFFF,linemode        ; was -1
000338B0 <AmiBlitz3.ab3@25866>  JMP get1bytemain
000338B4 <AmiBlitz3.ab3@25869>   CMP.w #-$7FF5,D0    ; was #$800b
000338B8 <AmiBlitz3.ab3@25870>    BEQ.w mydoendif
000338BC <AmiBlitz3.ab3@25873>   CMP.w #-$7FF4,D0    ; was #$800c
000338C0 <AmiBlitz3.ab3@25874>    BEQ.w dowend2
000338C4 <AmiBlitz3.ab3@25877>   CMP.w #-$7FF8,D0    ; was #$8008
000338C8 <AmiBlitz3.ab3@25878>    BNE.w 'notstate
000338CC <AmiBlitz3.ab3@25883>  BRA.w endstate
000338D0 <AmiBlitz3.ab3@25886>   CMP.w #-$7FF7,D0        ; was #$8009
000338D4 <AmiBlitz3.ab3@25887>    BNE.w 'notfunc
000338DA <AmiBlitz3.ab3@25889>    TST.b fpu
000338DE <AmiBlitz3.ab3@25890>    BEQ 'nof
000338E4 <AmiBlitz3.ab3@25891>    MOVEA.l currentfunction,A0
000338EA <AmiBlitz3.ab3@25892>    CMP.l #0,a0
000338EE <AmiBlitz3.ab3@25893>    BEQ 'nof
000338F4 <AmiBlitz3.ab3@25894>    CMP.b #5,$5(a0)
000338F8 <AmiBlitz3.ab3@25895>     BNE 'nof
000338FE <AmiBlitz3.ab3@25896>    MOVE.l #$f23c5000,d1
00033902 <AmiBlitz3.ab3@25897>    BSR writelong
00033906 <AmiBlitz3.ab3@25898>    MOVE.w #0,d1
0003390A <AmiBlitz3.ab3@25899>    BSR writeword
0003390E <AmiBlitz3.ab3@25903>   MOVE.w #$7000,D1                                         ;end function moveq #0,d0
00033912 <AmiBlitz3.ab3@25904>    BSR.w writeword
00033918 <AmiBlitz3.ab3@25905>   MOVEA.l currentfunction,A0
0003391E <AmiBlitz3.ab3@25907>   CMP.l #0,a0
00033922 <AmiBlitz3.ab3@25908>   BEQ 'state
00033928 <AmiBlitz3.ab3@25909>   MOVE.l destpointer,d1
0003392C <AmiBlitz3.ab3@25910>   SUB.l $e(a0),d1
00033930 <AmiBlitz3.ab3@25911>   MOVE.l d1,isfunc+1(a0)
00033936 <AmiBlitz3.ab3@25913>   CMPI.b #$7,$5(A0)
0003393A <AmiBlitz3.ab3@25914>    BNE.w 'state
00033940 <AmiBlitz3.ab3@25915>   MOVE.w putstlen,D1
00033944 <AmiBlitz3.ab3@25916>    BSR.w writeword
00033948 <AmiBlitz3.ab3@25917>  BRA.w 'state
0003394C <AmiBlitz3.ab3@25920>   CMP.w #-$7FD0,D0         ; was #$8000+48
00033950 <AmiBlitz3.ab3@25921>    BNE.w 'notsetint
00033956 <AmiBlitz3.ab3@25923>   MOVE.w proceduremode,D1
0003395A <AmiBlitz3.ab3@25924>    BNE.w JUMP_interr3
00033960 <AmiBlitz3.ab3@25926>   TST.b debugmode
00033964 <AmiBlitz3.ab3@25927>    BEQ.w 'norerrf1
00033966 <AmiBlitz3.ab3@25929>   MOVEQ.l #$03,D1
0003396C <AmiBlitz3.ab3@25930>    JSR writetrap
00033972 <AmiBlitz3.ab3@25932>   MOVE.w dontwrite_nomemleft,D1
00033976 <AmiBlitz3.ab3@25933>    BNE.w 'norerrf1
0003397C <AmiBlitz3.ab3@25935>   MOVEA.l intcleanat,A0
00033982 <AmiBlitz3.ab3@25936>   MOVE.l destpointer,(A0)
00033986 <AmiBlitz3.ab3@25938>   MOVE.w #$C30C,D1       ; was #gouse
0003398A <AmiBlitz3.ab3@25939>    BSR.w Atokejsr        ;for runerrlib stack chex
00033990 <AmiBlitz3.ab3@25942>   MOVE.w intstring,D1
00033994 <AmiBlitz3.ab3@25943>    BEQ.w JUMP_interr
00033998 <AmiBlitz3.ab3@25944>    BPL.w 'nosp
0003399E <AmiBlitz3.ab3@25946>   MOVE.w intlevel,D1
000339A2 <AmiBlitz3.ab3@25947>   ORI.w #$7200,D1
000339A6 <AmiBlitz3.ab3@25948>    BSR.w writeword       ;moveq #level,d1
000339AA <AmiBlitz3.ab3@25949>   MOVE.w #$C103,D1       ; was #oldint,
000339AE <AmiBlitz3.ab3@25950>    BSR.w Atokejsr
000339B4 <AmiBlitz3.ab3@25951>   CLR.w intlevel
000339BA <AmiBlitz3.ab3@25954>   CLR.w intstring
000339C0 <AmiBlitz3.ab3@25956>   MOVE.l intfin,D1
000339C4 <AmiBlitz3.ab3@25957>    BSR.w writelong
000339CA <AmiBlitz3.ab3@25959>   MOVE.l #$70004E75,D1
000339CE <AmiBlitz3.ab3@25960>    BSR.w writelong
000339D4 <AmiBlitz3.ab3@25962>   MOVE.w dontwrite_nomemleft,D1
000339D8 <AmiBlitz3.ab3@25963>    BNE.w 'sintdone
000339DE <AmiBlitz3.ab3@25964>   MOVEA.l intjmpat,A0
000339E2 <AmiBlitz3.ab3@25965>   MOVE.l destpointer(PC),(A0)
000339E8 <AmiBlitz3.ab3@25968>  JMP get1bytemain
000339EC <AmiBlitz3.ab3@25971>   CMP.w #-$7FF2,D0   ; was #$800e     ;end select?
000339F0 <AmiBlitz3.ab3@25972>    BEQ.w doendsel
000339F4 <AmiBlitz3.ab3@25973>   CMP.w #-$7F4C,D0  ; was #$8001+tnum
000339F8 <AmiBlitz3.ab3@25974>    BNE.w 'notseterr
000339FE <AmiBlitz3.ab3@25975>  JMP doendseterr
00033A04 <AmiBlitz3.ab3@25979>  JMP syntaxerr
00033A0A <AmiBlitz3.ab3@25982>   TST.w dirmode
00033A0E <AmiBlitz3.ab3@25983>   BNE.w JUMP_baddirerr
00033A12 <AmiBlitz3.ab3@25984>   MOVE.w #$C800,D1      ; #endjmp
00033A18 <AmiBlitz3.ab3@25985>   JSR Atokejsr          ; was bra org source                                  ;end
00033A20 <AmiBlitz3.ab3@25987>   CMP.l #"noa7",-4(a5)
00033A24 <AmiBlitz3.ab3@25988>   BNE 'l10
00033A2A <AmiBlitz3.ab3@25989>   TST.w dontwrite_nomemleft
00033A2E <AmiBlitz3.ab3@25990>   BNE 'l10
00033A34 <AmiBlitz3.ab3@25991>   MOVE.l destpointer,d1
00033A36 <AmiBlitz3.ab3@25992>   SUBQ.l #4,d1
00033A38 <AmiBlitz3.ab3@25993>   MOVE.l a0,-(a7)
00033A3A <AmiBlitz3.ab3@25994>   MOVE.l d1,a0
00033A3C <AmiBlitz3.ab3@25995>   MOVE.l (a0),a0
00033A42 <AmiBlitz3.ab3@25996>   MOVE.l #$60000002,(a0)+
00033A46 <AmiBlitz3.ab3@25997>   MOVE.w #$588f,(a0)
00033A48 <AmiBlitz3.ab3@25998>   MOVE.l (a7)+,a0
00033A4A <AmiBlitz3.ab3@26001> RTS
00033A50 <AmiBlitz3.ab3@26006>   TST.w dirmode                                            ;stop
00033A54 <AmiBlitz3.ab3@26007>   BNE.w JUMP_baddirerr
00033A56 <AmiBlitz3.ab3@26009>   MOVE.w d0,d1
00033A5A <AmiBlitz3.ab3@26010>   BEQ 'l10
00033A5E <AmiBlitz3.ab3@26011>   CMP.b #$3a,d0
00033A62 <AmiBlitz3.ab3@26012>   BEQ 'l10
00033A68 <AmiBlitz3.ab3@26013>   JSR get1bytemain
00033A6E <AmiBlitz3.ab3@26017>   TST.b debugmode
00033A72 <AmiBlitz3.ab3@26018>   BEQ.w newstop
00033A76 <AmiBlitz3.ab3@26019>   MOVE.w #$D501,D1
00033A7A <AmiBlitz3.ab3@26020> BRA.w Atokejsr
00033A7C <AmiBlitz3.ab3@26026>     RTS
00033A7E <AmiBlitz3.ab3@26028>   MOVE.w d1,d0
00033A82 <AmiBlitz3.ab3@26029>   BEQ 'l10
00033A86 <AmiBlitz3.ab3@26030>   CMP.b #$3a,d0
00033A8A <AmiBlitz3.ab3@26031>   BEQ 'l10
00033A8E <AmiBlitz3.ab3@26032>   SUB.b #$30,d0
00033A92 <AmiBlitz3.ab3@26033>   MOVE.w #$4e40,d1
00033A96 <AmiBlitz3.ab3@26034>  BRA 'l11
00033A9A <AmiBlitz3.ab3@26037>   MOVE.w #$4e4a,d1
00033A9E <AmiBlitz3.ab3@26038>  BRA writeword
00033AA0 <AmiBlitz3.ab3@26041>   ADD.b d0,d1
00033AA4 <AmiBlitz3.ab3@26042> BRA writeword
00033AAA <AmiBlitz3.ab3@26046> JMP badconterr        ;cont not currently supported!
00033AAE <AmiBlitz3.ab3@26049>   MOVE.w #$4E71,D1
00033AB2 <AmiBlitz3.ab3@26050> BRA.w writeword
00033AB8 <AmiBlitz3.ab3@26055>   MOVEA.l firstfor,A2
00033ABE <AmiBlitz3.ab3@26056>   CLR.l firstfor
00033AC4 <AmiBlitz3.ab3@26057>   MOVEA.l _execbase,A6
00033AC8 <AmiBlitz3.ab3@26060>   CMPA.w #$0,A2
00033ACC <AmiBlitz3.ab3@26061>   BEQ.w 'done
00033ACE <AmiBlitz3.ab3@26062>   MOVEA.l A2,A1
00033AD0 <AmiBlitz3.ab3@26063>   MOVEA.l (A1),A2
00033AD2 <AmiBlitz3.ab3@26064>   MOVEQ.l #$00,D0
00033AD6 <AmiBlitz3.ab3@26065>   MOVE.b $10(A1),D0
00033ADC <AmiBlitz3.ab3@26068>   MOVE.l mempool2,a0  
00033AE0 <AmiBlitz3.ab3@26069>   JSR _FreePooled(A6)                                      ;freememfor_error
00033AE4 <AmiBlitz3.ab3@26071>  BRA.w 'loop
00033AE6 <AmiBlitz3.ab3@26074> RTS
00033AEC <AmiBlitz3.ab3@26077> JUMP_badpenderr JMP badpenderr
00033AF2 <AmiBlitz3.ab3@26078> JUMP_noenderr   JMP noenderr
00033AF8 <AmiBlitz3.ab3@26084>   MOVE.w proceduremode,D1
00033AFC <AmiBlitz3.ab3@26085>    BEQ.w JUMP_badpenderr
00033B02 <AmiBlitz3.ab3@26087>   MOVE.w dontwrite_nomemleft,D1
00033B06 <AmiBlitz3.ab3@26088>    BNE.w 'ship
00033B0C <AmiBlitz3.ab3@26089>   MOVEA.l firstpend,A2
00033B10 <AmiBlitz3.ab3@26092>   CMPA.w #$0,A2
00033B14 <AmiBlitz3.ab3@26093>    BEQ.w 'ship
00033B18 <AmiBlitz3.ab3@26094>   MOVEA.l $4(A2),A0
00033B1E <AmiBlitz3.ab3@26095>   MOVE.l destpointer,(A0)
00033B20 <AmiBlitz3.ab3@26096>   MOVEA.l (A2),A2
00033B24 <AmiBlitz3.ab3@26097>  BRA.w 'loop0
00033B2A <AmiBlitz3.ab3@26100>   TST.b debugmode
00033B2E <AmiBlitz3.ab3@26101>    BEQ.b 'ship2
00033B30 <AmiBlitz3.ab3@26103>   MOVEQ.l #$05,D1
00033B36 <AmiBlitz3.ab3@26104>   JSR writetrap
00033B3C <AmiBlitz3.ab3@26107>   MOVEA.l firstlocal,A2                                    ;firstlocal
00033B42 <AmiBlitz3.ab3@26108>   JSR calcstatic2b                                           ;calcstatic
00033B48 <AmiBlitz3.ab3@26109>   MOVEA.l currentfunction,A0
00033B4E <AmiBlitz3.ab3@26111>   MOVE.l destpointer,d1
00033B52 <AmiBlitz3.ab3@26112>   SUB.l $e(a0),d1
00033B56 <AmiBlitz3.ab3@26113>   MOVE.l d1,isfunc+1(a0)                                   ;store function size
00033B5A <AmiBlitz3.ab3@26115>   MOVE.w D4,$8(A0)                                         ;set if memalloc need
00033B60 <AmiBlitz3.ab3@26116>   MOVE.l D3,locdatast
00033B66 <AmiBlitz3.ab3@26117>   MOVEA.l tempvm,A1
00033B6C <AmiBlitz3.ab3@26119>   CLR.b infunctioncode
00033B72 <AmiBlitz3.ab3@26120>   MOVE.l firstiffstore,d1
00033B78 <AmiBlitz3.ab3@26121>   CMP.l firstiff,d1
00033B7C <AmiBlitz3.ab3@26122>   BNE JUMP_noenderr
00033B80 <AmiBlitz3.ab3@26124>   TST.w $C(A1)                                             ;dim
00033B84 <AmiBlitz3.ab3@26125>    BPL.w 'nolskip
00033B8A <AmiBlitz3.ab3@26126>  BSET #$7,$8(A0)
00033B8E <AmiBlitz3.ab3@26127>   MOVE.w #$C005,D1      ;#freelast,
00033B92 <AmiBlitz3.ab3@26128>    BSR.w tokejsr2                                          ;writefreememstatement
00033B96 <AmiBlitz3.ab3@26129>  BRA.w 'lskip2
00033B9E <AmiBlitz3.ab3@26132>   MOVE.w memlibstat,$C(A1)
00033BA4 <AmiBlitz3.ab3@26135>   MOVEA.l currentfunction,A0
00033BA8 <AmiBlitz3.ab3@26136>   MOVE.l $E(A0),-(A7)
00033BB0 <AmiBlitz3.ab3@26137>   MOVE.w locvaroff,$6(A0)
00033BB6 <AmiBlitz3.ab3@26138>   BCLR #$1,$7(A0)
00033BBC <AmiBlitz3.ab3@26139>   BCLR #$0,$7(A0)
00033BC2 <AmiBlitz3.ab3@26140>   CMPI.b #$7,$5(A0)
00033BC6 <AmiBlitz3.ab3@26141>    BNE.w 'penis
00033BCC <AmiBlitz3.ab3@26142>   MOVE.w getstlen,D1
00033BD0 <AmiBlitz3.ab3@26143>    BSR.w writeword
00033BD4 <AmiBlitz3.ab3@26146>   TST.w $6(A0)
00033BD8 <AmiBlitz3.ab3@26147>    BEQ.w 'nolink
00033BDC <AmiBlitz3.ab3@26148>   MOVE.w #$FC7B,D1   ;#64635
00033BE2 <AmiBlitz3.ab3@26149>    JSR uselib
00033BE8 <AmiBlitz3.ab3@26150>   MOVE.w unlinka4,D1
00033BEE <AmiBlitz3.ab3@26151>    JSR writeword
00033BF4 <AmiBlitz3.ab3@26157>   MOVEA.l currentfunction,A0
00033BF6 <AmiBlitz3.ab3@26158>   MOVEQ.l #$00,D1
00033BFA <AmiBlitz3.ab3@26159>   MOVE.b $4(A0),D1
00033BFC <AmiBlitz3.ab3@26160>   LSR.w #4,D1
00033C00 <AmiBlitz3.ab3@26161>    BEQ.w 'nofix
00033C02 <AmiBlitz3.ab3@26164>      LSL.w #1,d1
00033C06 <AmiBlitz3.ab3@26167>   CMP.w #$1,D1
00033C0A <AmiBlitz3.ab3@26168>    BNE.w 'not1
00033C10 <AmiBlitz3.ab3@26169>   MOVE.w fix1,D1
00033C16 <AmiBlitz3.ab3@26170>    JSR writeword
00033C1A <AmiBlitz3.ab3@26171>  BRA.w 'nofix
00033C1C <AmiBlitz3.ab3@26174>   LSL.w #2,D1
00033C1E <AmiBlitz3.ab3@26175>   MOVE.w D1,-(A7)
00033C24 <AmiBlitz3.ab3@26176>   MOVE.w D1,moverts+2
00033C2A <AmiBlitz3.ab3@26177>   MOVE.l moverts,D1
00033C30 <AmiBlitz3.ab3@26178>    JSR writelong
00033C32 <AmiBlitz3.ab3@26179>   MOVE.w (A7)+,D1
00033C36 <AmiBlitz3.ab3@26180>   CMP.w #$8,D1
00033C3A <AmiBlitz3.ab3@26181>    BHI.w 'fix
00033C3E <AmiBlitz3.ab3@26182>   ANDI.w #$7,D1
00033C40 <AmiBlitz3.ab3@26183>   LSL.w #8,D1
00033C42 <AmiBlitz3.ab3@26184>   LSL.w #1,D1
00033C48 <AmiBlitz3.ab3@26185>   OR.w fixq,D1
00033C4E <AmiBlitz3.ab3@26186>    JSR writeword
00033C52 <AmiBlitz3.ab3@26187>  BRA.w 'nofix
00033C58 <AmiBlitz3.ab3@26190>    MOVE.w D1,fixstack+2
00033C5E <AmiBlitz3.ab3@26191>   MOVE.l fixstack,D1
00033C64 <AmiBlitz3.ab3@26192>    JSR writelong
00033C68 <AmiBlitz3.ab3@26195>    BSR.w normret
00033C6C <AmiBlitz3.ab3@26199>    BSR.w procfixer
00033C6E <AmiBlitz3.ab3@26201>   MOVEA.l (A7)+,A0
00033C74 <AmiBlitz3.ab3@26202>   MOVE.w dontwrite_nomemleft,D1
00033C78 <AmiBlitz3.ab3@26203>    BNE.w 'skipjp
00033C7E <AmiBlitz3.ab3@26204>   MOVE.l destpointer,-(A0)
00033C84 <AmiBlitz3.ab3@26207>   CLR.w proceduremode
00033C8A <AmiBlitz3.ab3@26208>   CLR.l currentfunction
00033C90 <AmiBlitz3.ab3@26209>   CLR.w procnum
00033C94 <AmiBlitz3.ab3@26210>    BSR.w droplocals
00033C9A <AmiBlitz3.ab3@26211>    JSR freepends
00033CA0 <AmiBlitz3.ab3@26212> JMP get1bytemain
00033CA2 <AmiBlitz3.ab3@26216>   MOVEQ.l #$0C,D0
00033CA4 <AmiBlitz3.ab3@26217>   MOVEQ.l #$01,D1
00033CAA <AmiBlitz3.ab3@26218>   MOVEA.l _execbase,A6
00033CB0 <AmiBlitz3.ab3@26221>   MOVE.l mempool,a0
00033CB4 <AmiBlitz3.ab3@26222>   JSR _AllocPooled(a6)
00033CB6 <AmiBlitz3.ab3@26224>   MOVEA.l D0,A0
00033CBC <AmiBlitz3.ab3@26225>   MOVE.l alllocals,(A0)
00033CC2 <AmiBlitz3.ab3@26226>   MOVE.l A0,alllocals
00033CC8 <AmiBlitz3.ab3@26228>   MOVE.l firstlocal,D0
00033CCE <AmiBlitz3.ab3@26229>   CLR.l firstlocal
00033CD2 <AmiBlitz3.ab3@26230>   MOVE.l D0,$4(A0)
00033CD8 <AmiBlitz3.ab3@26231>   MOVE.l firstglob,D1
00033CDE <AmiBlitz3.ab3@26232>   CLR.l firstglob
00033CE2 <AmiBlitz3.ab3@26233>   MOVE.l D1,$8(A0)
00033CE8 <AmiBlitz3.ab3@26235>   TST.b debugmode
00033CEC <AmiBlitz3.ab3@26236>    BEQ.b 'skip
00033CF2 <AmiBlitz3.ab3@26237>   TST.w dontwrite_nomemleft
00033CF6 <AmiBlitz3.ab3@26238>    BNE.b 'skip
00033CFA <AmiBlitz3.ab3@26240>   MOVEA.l proclocals(PC),A0
00033CFC <AmiBlitz3.ab3@26241>   MOVE.l D0,(A0)+
00033CFE <AmiBlitz3.ab3@26242>   MOVE.l D1,(A0)
00033D00 <AmiBlitz3.ab3@26245> RTS
00033D06 <AmiBlitz3.ab3@26248> JUMP_baddirerr JMP baddirerr
00033D0C <AmiBlitz3.ab3@26249> JUMP_noforerr  JMP noforerr
00033D12 <AmiBlitz3.ab3@26253>   TST.w dirmode
00033D16 <AmiBlitz3.ab3@26254>    BNE.w JUMP_baddirerr
00033D1C <AmiBlitz3.ab3@26255>   MOVE.l firstfor,D1
00033D20 <AmiBlitz3.ab3@26256>    BEQ.w JUMP_noforerr
00033D26 <AmiBlitz3.ab3@26257>   JSR reget
00033D2A <AmiBlitz3.ab3@26258>    BEQ.w 'unknown
00033D2E <AmiBlitz3.ab3@26264>   BSR.w getparameter
00033D32 <AmiBlitz3.ab3@26265>   MOVEA.l firstfor(PC),A2
00033D34 <AmiBlitz3.ab3@26266>   MOVEQ.l #$00,D1
00033D38 <AmiBlitz3.ab3@26267>   MOVE.b $10(A2),D1
00033D3C <AmiBlitz3.ab3@26268>   SUBI.w #$12,D1
00033D3E <AmiBlitz3.ab3@26269>   CMP.w D1,D2
00033D42 <AmiBlitz3.ab3@26270>    BNE.w JUMP_noforerr
00033D46 <AmiBlitz3.ab3@26271>   LEA ptr_parameterstore(PC),A0
00033D4A <AmiBlitz3.ab3@26272>   LEA $11(A2),A1
00033D4C <AmiBlitz3.ab3@26273>   SUBQ.w #1,D2
00033D4E <AmiBlitz3.ab3@26276>     CMPM.b (A0)+,(A1)+
00033D52 <AmiBlitz3.ab3@26277>     BNE.w JUMP_noforerr
00033D56 <AmiBlitz3.ab3@26278>   DBF D2,'chkname
00033D5A <AmiBlitz3.ab3@26280>    BSR.w 'unknown2
00033D60 <AmiBlitz3.ab3@26281>    JSR reget
00033D64 <AmiBlitz3.ab3@26282>    BEQ.w 'byebye
00033D68 <AmiBlitz3.ab3@26283>   CMP.w #$2C,D0           ; ','
00033D6C <AmiBlitz3.ab3@26284>    BNE.w JUMP_syntaxerr
00033D72 <AmiBlitz3.ab3@26285>    JSR get1bytemain
00033D76 <AmiBlitz3.ab3@26286>  BRA.w 'nextnext
00033D78 <AmiBlitz3.ab3@26289>  RTS
00033D7C <AmiBlitz3.ab3@26293>   MOVE.l 8(a7),a2
00033D80 <AmiBlitz3.ab3@26294>   Dc.l  $f2124400                                          ;fmove.s (a2),fp0
00033D84 <AmiBlitz3.ab3@26295>   Dc.l  $F2174422                                          ;fadd.s (a7),fp0
00033D88 <AmiBlitz3.ab3@26296>   Dc.l  $F2126400                                          ;fmove.s fp0,(a2)
00033D8A <AmiBlitz3.ab3@26301>   MOVEA.l D1,A2
00033D90 <AmiBlitz3.ab3@26304>   JSR popnext                                           ;error checking for next.
00033D94 <AmiBlitz3.ab3@26305>   MOVE.w $C(A2),D0
00033D9A <AmiBlitz3.ab3@26307>   LEA nextb,A0
00033DA0 <AmiBlitz3.ab3@26308>   LEA nextbf,A1
00033DA4 <AmiBlitz3.ab3@26309>   CMP.w #$1,D0
00033DA8 <AmiBlitz3.ab3@26310>    BEQ.w 'donext
00033DAE <AmiBlitz3.ab3@26311>   LEA nextw,A0
00033DB4 <AmiBlitz3.ab3@26312>   LEA nextwf,A1
00033DB8 <AmiBlitz3.ab3@26313>   CMP.w #$2,D0
00033DBC <AmiBlitz3.ab3@26314>    BEQ.w 'donext
00033DC2 <AmiBlitz3.ab3@26315>   LEA nextl,A0
00033DC8 <AmiBlitz3.ab3@26316>   LEA nextlf,A1
00033DCC <AmiBlitz3.ab3@26317>   CMP.w #$5,D0
00033DD0 <AmiBlitz3.ab3@26318>    BNE.w 'donext
00033DD6 <AmiBlitz3.ab3@26320>    TST.b fpu
00033DDA <AmiBlitz3.ab3@26321>    BEQ 'old
00033DE0 <AmiBlitz3.ab3@26322>    LEA 'fpu2dats,a0                                         ;fpu next code
00033DE6 <AmiBlitz3.ab3@26323>    LEA 'fpu2date,a1
00033DEA <AmiBlitz3.ab3@26324>  BRA 'donext
00033DEE <AmiBlitz3.ab3@26328>   MOVE.w #$C900,D1     ; #getffpbase
00033DF2 <AmiBlitz3.ab3@26329>    BSR.w Atokejsr
00033DF8 <AmiBlitz3.ab3@26330>   LEA nextf,A0
00033DFE <AmiBlitz3.ab3@26331>   LEA nextff,A1
00033E04 <AmiBlitz3.ab3@26334>   JSR pokecode
00033E0A <AmiBlitz3.ab3@26336>    TST.b fast                                             ;fast for next deactivate
00033E0E <AmiBlitz3.ab3@26337>  BRA 'l1
00033E14 <AmiBlitz3.ab3@26339>     TST.b onestep
00033E18 <AmiBlitz3.ab3@26340>     BEQ 'l1
00033E1E <AmiBlitz3.ab3@26341>     CLR.b onestep
00033E24 <AmiBlitz3.ab3@26342>     SUBQ.l #4,destpointer
00033E28 <AmiBlitz3.ab3@26343>     MOVE.w #$5292,d1
00033E2E <AmiBlitz3.ab3@26344>     JSR writeword
00033E32 <AmiBlitz3.ab3@26348>   MOVE.l thebra(PC),D1
00033E38 <AmiBlitz3.ab3@26349>    JSR writelong
00033E3E <AmiBlitz3.ab3@26351>   MOVEA.l firstfor,A2
00033E44 <AmiBlitz3.ab3@26352>   MOVE.l (A2),firstfor
00033E48 <AmiBlitz3.ab3@26356>   MOVEA.l $8(A2),A0
00033E4E <AmiBlitz3.ab3@26357>   MOVEA.l destpointer,A1
00033E50 <AmiBlitz3.ab3@26358>   MOVE.l A1,D1
00033E52 <AmiBlitz3.ab3@26359>   SUB.l A0,D1            ;d1=positive bra
00033E54 <AmiBlitz3.ab3@26360>   ADDQ.l #2,D1
00033E5A <AmiBlitz3.ab3@26361>   CMP.l #MinWordSgnd,D1  ; #32768,
00033E5E <AmiBlitz3.ab3@26362>    BCC.w JUMP_bigforerr
00033E64 <AmiBlitz3.ab3@26363>   TST.w dontwrite_nomemleft
00033E68 <AmiBlitz3.ab3@26364>    BNE.w 'nopoke1
00033E6C <AmiBlitz3.ab3@26365>   MOVE.w D1,-$2(A0)
00033E6E <AmiBlitz3.ab3@26368>   MOVE.l A1,D1
00033E72 <AmiBlitz3.ab3@26369>   SUB.l $4(A2),D1
00033E74 <AmiBlitz3.ab3@26370>   SUBQ.l #6,D1
00033E7A <AmiBlitz3.ab3@26371>   CMP.l #MinWordSgnd,D1 ;#32768,
00033E7E <AmiBlitz3.ab3@26372>    BCC.w JUMP_bigforerr
00033E84 <AmiBlitz3.ab3@26373>   TST.w dontwrite_nomemleft
00033E88 <AmiBlitz3.ab3@26374>    BNE.w 'skip
00033E8A <AmiBlitz3.ab3@26375>   NEG.w D1
00033E8E <AmiBlitz3.ab3@26376>   MOVE.w D1,-$2(A1)
00033E94 <AmiBlitz3.ab3@26379>   JSR popnext3                ;fix stack
00033E9A <AmiBlitz3.ab3@26381>   MOVEA.l _execbase,A6
00033E9C <AmiBlitz3.ab3@26382>   MOVEA.l A2,A1
00033E9E <AmiBlitz3.ab3@26383>   MOVEQ.l #$00,D0
00033EA2 <AmiBlitz3.ab3@26384>   MOVE.b $10(A1),D0
00033EA8 <AmiBlitz3.ab3@26387>   MOVE.l mempool2,a0
00033EAC <AmiBlitz3.ab3@26388>   JSR _FreePooled(A6)
00033EB2 <AmiBlitz3.ab3@26390> JMP reget
00033EB8 <AmiBlitz3.ab3@26393> JUMP_notallowd JMP notallowd
00033EBE <AmiBlitz3.ab3@26394> JUMP_bigforerr JMP bigforerr
00033EC2 <AmiBlitz3.ab3@26398>   MOVE.w #$664F,-(A7)          ;#'fO',
00033EC6 <AmiBlitz3.ab3@26401>  BRA.w thebra
00033ECC <AmiBlitz3.ab3@26404> JUMP_error_dublicate_for JMP error_dublicate_for
00033ED2 <AmiBlitz3.ab3@26405> JUMP_badforerr           JMP badforerr
00033ED6 <AmiBlitz3.ab3@26408> forlineat:   Ds.l 1
00033ED8 <AmiBlitz3.ab3@26409> fortemp:     Ds.w 1
00033EDE <AmiBlitz3.ab3@26417>   CLR.l fp0addr
00033EE4 <AmiBlitz3.ab3@26419>   TST.w dirmode
00033EE8 <AmiBlitz3.ab3@26420>    BNE.w JUMP_baddirerr
00033EF2 <AmiBlitz3.ab3@26421>   MOVE.l linenumat,forlineat
00033EF8 <AmiBlitz3.ab3@26425>   MOVE.l A5,letstart
00033EFC <AmiBlitz3.ab3@26426>   BSR.w getparameter
00033F02 <AmiBlitz3.ab3@26427>   MOVE.w D2,fortemp
00033F08 <AmiBlitz3.ab3@26429>   JSR findfor
00033F0C <AmiBlitz3.ab3@26430>    BEQ.w JUMP_error_dublicate_for
00033F12 <AmiBlitz3.ab3@26431>   LEA firstfor,A2
00033F18 <AmiBlitz3.ab3@26432>   JSR addhere2
00033F1A <AmiBlitz3.ab3@26433>   MOVE.l A2,-(A7)
00033F20 <AmiBlitz3.ab3@26435>   TST.b debugmode
00033F24 <AmiBlitz3.ab3@26436>    BEQ.b 'noerr
00033F2A <AmiBlitz3.ab3@26438>   JSR chkstak
00033F30 <AmiBlitz3.ab3@26439>   MOVE.l forset,D1
00033F36 <AmiBlitz3.ab3@26440>   JSR  writelong
00033F3A <AmiBlitz3.ab3@26443>   MOVE.w fortemp(PC),D2
00033F42 <AmiBlitz3.ab3@26445>   MOVE.b #1,formode
00033F46 <AmiBlitz3.ab3@26447>   BSR.w dolet2                                         ;for get 1. value
00033F4C <AmiBlitz3.ab3@26448>   CLR.b formode
00033F50 <AmiBlitz3.ab3@26449>   CMP.w #-$7FE8,D0       ; was #$8018,
00033F54 <AmiBlitz3.ab3@26450>    BNE.w JUMP_syntaxerr
00033F5A <AmiBlitz3.ab3@26451>   MOVE.w commode,D1
00033F5E <AmiBlitz3.ab3@26452>    BNE.w JUMP_syntaxerr
00033F62 <AmiBlitz3.ab3@26453>   CMP.b #$6,D2
00033F66 <AmiBlitz3.ab3@26454>    BCC.w JUMP_badforerr
00033F6A <AmiBlitz3.ab3@26455>   BTST #$F,D2
00033F6E <AmiBlitz3.ab3@26456>    BNE.w 'skip
00033F74 <AmiBlitz3.ab3@26457>   MOVE.w leaamp,D1
00033F7A <AmiBlitz3.ab3@26458>   JSR pokewda5s
00033F7C <AmiBlitz3.ab3@26459>   MOVE.w D3,D1
00033F82 <AmiBlitz3.ab3@26460>   JSR  writeword
00033F88 <AmiBlitz3.ab3@26463>   MOVE.w pushindex,D1
00033F8E <AmiBlitz3.ab3@26464>   JSR  writeword         ;index lea on stack
00033F92 <AmiBlitz3.ab3@26465>   ANDI.w #$FF,D2
00033F94 <AmiBlitz3.ab3@26467>   MOVEA.l (A7),A1
00033F98 <AmiBlitz3.ab3@26468>   MOVE.w D2,$C(A1)
00033F9A <AmiBlitz3.ab3@26470>   MOVE.w D2,-(A7)
00033F9E <AmiBlitz3.ab3@26471>    BSR.w eval             ;get fin
00033FA4 <AmiBlitz3.ab3@26473>    CLR.b onestep
00033FA8 <AmiBlitz3.ab3@26474>    CMP.w #$8019,d0
00033FAC <AmiBlitz3.ab3@26475>    BEQ 'l1
00033FB4 <AmiBlitz3.ab3@26476>    MOVE.b #1,onestep
00033FB6 <AmiBlitz3.ab3@26480>   MOVE.w (A7),D2
00033FBC <AmiBlitz3.ab3@26482>   MOVE.w pushd0l,D1
00033FC0 <AmiBlitz3.ab3@26483>   CMP.w #$3,D2
00033FC4 <AmiBlitz3.ab3@26484>    BCC.w 'skip1
00033FCA <AmiBlitz3.ab3@26485>   MOVE.w pushd0wd,D1
00033FCC <AmiBlitz3.ab3@26488>    MOVE.w D1,-(A7)
00033FD2 <AmiBlitz3.ab3@26490>    TST.b fpu
00033FD6 <AmiBlitz3.ab3@26491>    BEQ 'old
00033FDA <AmiBlitz3.ab3@26492>    CMP.b #5,d2
00033FDE <AmiBlitz3.ab3@26493>    BNE 'old
00033FE4 <AmiBlitz3.ab3@26494>    MOVE.l #$f2276400,d1
00033FEA <AmiBlitz3.ab3@26496>    JSR writelong
00033FEE <AmiBlitz3.ab3@26497>  BRA 'weit
00033FF4 <AmiBlitz3.ab3@26501>    JSR  writeword        ;push fin on stack                                   ;fpu for end value
00033FF8 <AmiBlitz3.ab3@26504>   CMP.w #-$7FE7,D0      ; was #$8019,
00033FFC <AmiBlitz3.ab3@26505>    BNE.w 'defstep
00034000 <AmiBlitz3.ab3@26507>    BSR.w eval           ;get step
00034006 <AmiBlitz3.ab3@26509>    TST.b fpu
0003400A <AmiBlitz3.ab3@26510>    BEQ 'pushstep
0003400E <AmiBlitz3.ab3@26511>    CMP.b #5,d2
00034012 <AmiBlitz3.ab3@26512>    BNE 'pushstep
00034018 <AmiBlitz3.ab3@26513>    MOVE.l #$f2276400,d1                                    ;write step <> 1
0003401E <AmiBlitz3.ab3@26515>   JSR writelong
00034020 <AmiBlitz3.ab3@26520>    MOVE.w (a7)+,d1
00034024 <AmiBlitz3.ab3@26521>  BRA 'fpur
00034028 <AmiBlitz3.ab3@26525>   CMP.w #$4,D2
0003402C <AmiBlitz3.ab3@26526>    BCC.w 'qup
00034030 <AmiBlitz3.ab3@26527>   MOVE.w #$7001,D1
00034036 <AmiBlitz3.ab3@26528>   JSR writeword
0003403A <AmiBlitz3.ab3@26529>  BRA.w 'pushstep
0003403E <AmiBlitz3.ab3@26532>   BNE.w 'notq
00034042 <AmiBlitz3.ab3@26533>   MOVE.w #$7001,D1
00034048 <AmiBlitz3.ab3@26534>   JSR writeword
0003404E <AmiBlitz3.ab3@26535>   MOVE.w swapd0,D1
00034054 <AmiBlitz3.ab3@26536>   JSR writeword
00034058 <AmiBlitz3.ab3@26537>  BRA.w 'pushstep
0003405E <AmiBlitz3.ab3@26541>   TST.b fpu
00034062 <AmiBlitz3.ab3@26542>    BEQ 'old2
00034066 <AmiBlitz3.ab3@26543>   CMP.b #5,d2
0003406A <AmiBlitz3.ab3@26544>    BNE 'old2
00034070 <AmiBlitz3.ab3@26545>   MOVE.l #$f23c5000,d1
00034076 <AmiBlitz3.ab3@26546>   JSR writelong
0003407A <AmiBlitz3.ab3@26547>   MOVE.w #$1,d1
00034080 <AmiBlitz3.ab3@26548>   JSR writeword
00034086 <AmiBlitz3.ab3@26549>   MOVE.l #$f2276400,d1
0003408C <AmiBlitz3.ab3@26550>   JSR writelong
0003408E <AmiBlitz3.ab3@26551>   MOVE.w (a7)+,d1
00034092 <AmiBlitz3.ab3@26552>  BRA 'fpur
00034096 <AmiBlitz3.ab3@26556>   MOVE.w #$203C,D1                                         ;write step 1
0003409C <AmiBlitz3.ab3@26557>   JSR writeword
000340A2 <AmiBlitz3.ab3@26558>   MOVE.l #$80000041,D1     ;ffp '1'                                ;ffp '1'
000340A8 <AmiBlitz3.ab3@26559>   JSR writelong
000340AA <AmiBlitz3.ab3@26562>   MOVE.w (A7)+,D1
000340B0 <AmiBlitz3.ab3@26563>   JSR writeword           ;push step on stack                                 ;push step on stack
000340B2 <AmiBlitz3.ab3@26568>   MOVE.w (A7)+,D2
000340B4 <AmiBlitz3.ab3@26569>   MOVEA.l (A7),A1
000340BC <AmiBlitz3.ab3@26570>   MOVE.l destpointer,$4(A1)
000340C2 <AmiBlitz3.ab3@26571>   LEA forcompb,A0
000340C8 <AmiBlitz3.ab3@26572>   LEA forcompbf,A1
000340CC <AmiBlitz3.ab3@26573>   CMP.w #$1,D2
000340D0 <AmiBlitz3.ab3@26574>    BEQ.w 'docomp
000340D6 <AmiBlitz3.ab3@26575>   LEA forcompw,A0
000340DC <AmiBlitz3.ab3@26576>   LEA forcompwf,A1
000340E0 <AmiBlitz3.ab3@26577>   CMP.w #$2,D2
000340E4 <AmiBlitz3.ab3@26578>    BEQ.w 'docomp
000340EA <AmiBlitz3.ab3@26579>   LEA forcompl,A0
000340F0 <AmiBlitz3.ab3@26580>   LEA forcomplf,A1
000340F4 <AmiBlitz3.ab3@26581>   CMP.w #$5,D2
000340F8 <AmiBlitz3.ab3@26582>    BNE.w 'docomp
000340FE <AmiBlitz3.ab3@26584>   TST.b fpu
00034102 <AmiBlitz3.ab3@26585>    BEQ 'old3
00034108 <AmiBlitz3.ab3@26586>   LEA fpu_start,a0
0003410E <AmiBlitz3.ab3@26587>   LEA fpu_end,a1
00034114 <AmiBlitz3.ab3@26588>   JSR pokecode
00034118 <AmiBlitz3.ab3@26589>  BRA 'fpu3
0003411E <AmiBlitz3.ab3@26593>   LEA forcompf,A0                                         ;
00034124 <AmiBlitz3.ab3@26594>   LEA forcompff,A1
0003412A <AmiBlitz3.ab3@26595>   JSR pokecode
0003412E <AmiBlitz3.ab3@26596>   MOVE.w #$C900,D1       ; #getffpbase,
00034132 <AmiBlitz3.ab3@26597>   BSR.w Atokejsr
00034138 <AmiBlitz3.ab3@26598>   LEA forcompf2,A0
0003413E <AmiBlitz3.ab3@26599>   LEA forcompf2f,A1
00034144 <AmiBlitz3.ab3@26602>   JSR pokecode
0003414A <AmiBlitz3.ab3@26604>   TST.b fast                                               ;fast for next
0003414E <AmiBlitz3.ab3@26605>    BEQ 's1
00034152 <AmiBlitz3.ab3@26606>   CMP.w #3,d2
00034156 <AmiBlitz3.ab3@26607>    BNE 's1
0003415C <AmiBlitz3.ab3@26608>   TST.b onestep
00034160 <AmiBlitz3.ab3@26609>    BEQ 's1
0003416A <AmiBlitz3.ab3@26610>   SUB.l #10,destpointer
0003416E <AmiBlitz3.ab3@26611>   MOVE.w #$b081,d1
00034174 <AmiBlitz3.ab3@26612>   JSR writeword
00034178 <AmiBlitz3.ab3@26617>   MOVE.l thebgt(PC),D1
0003417E <AmiBlitz3.ab3@26618>   JSR writelong
00034180 <AmiBlitz3.ab3@26623>   MOVEA.l (A7)+,A1
00034188 <AmiBlitz3.ab3@26624>   MOVE.l destpointer,$8(A1)
0003418E <AmiBlitz3.ab3@26625> JMP reget
00034192 <AmiBlitz3.ab3@26630>   MOVEA.l 8(a7),a2
00034196 <AmiBlitz3.ab3@26631>   Dc.l $f2124400                                           ;fmove.s (a2),fp0
0003419C <AmiBlitz3.ab3@26632>   fmove.s 4(a7),fp1
000341A0 <AmiBlitz3.ab3@26633>   BTST.b #7,(a7)
000341A4 <AmiBlitz3.ab3@26634>   BNE 'negi
000341A8 <AmiBlitz3.ab3@26635>   fcmp.x fp1,fp0
000341AC <AmiBlitz3.ab3@26636>  BRA 'negi2
000341B0 <AmiBlitz3.ab3@26639>   fcmp.x fp0,fp1
000341B4 <AmiBlitz3.ab3@26642>   Dc.l $f2920000                                           ;fbgt.w
000341B8 <AmiBlitz3.ab3@26648>   BGT.w thebgt
000341BE <AmiBlitz3.ab3@26651> JUMP_error4char          JMP error4char
000341C4 <AmiBlitz3.ab3@26652> JUMP_error_convert_types JMP error_convert_types
000341CA <AmiBlitz3.ab3@26653> JUMP_noleterr            JMP noleterr
000341D0 <AmiBlitz3.ab3@26654> JUMP_nocomerr            JMP nocomerr
000341D6 <AmiBlitz3.ab3@26655> JUMP_comerr              JMP comerr
000341DC <AmiBlitz3.ab3@26659>   MOVE.l A5,letstart
000341E2 <AmiBlitz3.ab3@26660>   JSR getparameter
000341EC <AmiBlitz3.ab3@26667>   MOVE.l destpointer,pushpc
000341F6 <AmiBlitz3.ab3@26668>   MOVE.l hunkoffsetbase,pushoff
000341FC <AmiBlitz3.ab3@26669>   CLR.l rightsidetype
00034202 <AmiBlitz3.ab3@26670>   CLR.w rightsideflagmask
0003420A <AmiBlitz3.ab3@26672>   MOVE.w #$0001,regnum            ;don't disturb this reg!
00034210 <AmiBlitz3.ab3@26673>   JSR fetchvars                   ;var in a3, type in a2
00034216 <AmiBlitz3.ab3@26674>   JSR calcvar                     ;get offset stuff
0003421C <AmiBlitz3.ab3@26676>   TST.b formode
00034220 <AmiBlitz3.ab3@26677>   BEQ 'lf1
00034226 <AmiBlitz3.ab3@26678>   CMP.l #newtype_double,A2
0003422A <AmiBlitz3.ab3@26679>   BEQ JUMP_notallowd
00034230 <AmiBlitz3.ab3@26680>   MOVE.l a2,currtype
00034236 <AmiBlitz3.ab3@26683>   CLR.w startoffsetmore
0003423A <AmiBlitz3.ab3@26684>   CMP.w #$3d,d0
0003423E <AmiBlitz3.ab3@26685>   BNE 'l1a
00034242 <AmiBlitz3.ab3@26686>   BTST #15,d2
00034246 <AmiBlitz3.ab3@26687>   BEQ 'l1a
0003424A <AmiBlitz3.ab3@26688>   CMP.b #1,d2
0003424E <AmiBlitz3.ab3@26689>   BNE 'l1a
00034258 <AmiBlitz3.ab3@26690>   MOVE.w leaa0a0+2,startoffsetmore
0003425E <AmiBlitz3.ab3@26694>   CLR.w regnum                     ;don't disturb this reg
00034262 <AmiBlitz3.ab3@26695>   BSR.w pushdo
00034268 <AmiBlitz3.ab3@26696>   CLR.w commode
0003426E <AmiBlitz3.ab3@26698>   CLR.w stackcorrect
00034274 <AmiBlitz3.ab3@26700>   CLR.w pcodd
0003427A <AmiBlitz3.ab3@26702>   MOVE.w startoffsetmore,d1
0003427E <AmiBlitz3.ab3@26703>   BTST #0,d1
00034282 <AmiBlitz3.ab3@26704>   BEQ 'l2a
0003428A <AmiBlitz3.ab3@26705>   MOVE.w #1,pcodd
0003428E <AmiBlitz3.ab3@26710>   CMP.w #$3D,D0              ;'='                              ;=
00034292 <AmiBlitz3.ab3@26711>   BEQ.w 'nextcom
00034294 <AmiBlitz3.ab3@26715>   MOVE.b (a5)+,d1
00034298 <AmiBlitz3.ab3@26716>   BEQ 'l10
0003429C <AmiBlitz3.ab3@26717>   CMP.b #":",d1
000342A0 <AmiBlitz3.ab3@26718>   BEQ 'l10
000342A4 <AmiBlitz3.ab3@26719>   CMP.b #";",d1
000342A8 <AmiBlitz3.ab3@26720>   BEQ 'l10
000342AC <AmiBlitz3.ab3@26721>   CMP.b #"0",d1
000342B0 <AmiBlitz3.ab3@26722>   BLT 'l11
000342B4 <AmiBlitz3.ab3@26723>   CMP.b #"9",d1
000342B8 <AmiBlitz3.ab3@26724>   BGT 'l11
000342BC <AmiBlitz3.ab3@26725>  BRA.s 'l1
000342C4 <AmiBlitz3.ab3@26728>   MOVE.b #1,quickadd
000342CA <AmiBlitz3.ab3@26735>   MOVEA.l letstart,A5
000342CC <AmiBlitz3.ab3@26736>   SUBQ.w #1,A5
000342D0 <AmiBlitz3.ab3@26739>   CMP.b #$7,D2
000342D4 <AmiBlitz3.ab3@26740>    BNE.w 'notstring
000342D8 <AmiBlitz3.ab3@26751>   MOVEM.w D2-D3,-(A7)
000342DE <AmiBlitz3.ab3@26752>   MOVE.l lastoffset_org,-(A7)
000342E4 <AmiBlitz3.ab3@26753>   MOVE.w varmode,-(A7)
000342EE <AmiBlitz3.ab3@26756>     MOVE.l #forthstack,forthsp
000342F8 <AmiBlitz3.ab3@26757>    MOVE.l #precstack,precsp
000342FE <AmiBlitz3.ab3@26758>    CLR.w regnum
00034304 <AmiBlitz3.ab3@26759>    CLR.w nonew
0003430A <AmiBlitz3.ab3@26760>    CLR.w sbasegot
00034314 <AmiBlitz3.ab3@26761>    MOVE.w varcodelen,oldvcodelen
0003431A <AmiBlitz3.ab3@26762>    CLR.w varcodelen
00034322 <AmiBlitz3.ab3@26763>    MOVE.w #$FFFF,lasta6
00034324 <AmiBlitz3.ab3@26767>   MOVEQ.l #$07,D2
00034328 <AmiBlitz3.ab3@26768>    BSR.w eval
0003432E <AmiBlitz3.ab3@26769>   MOVE.w (A7)+,varmode
00034334 <AmiBlitz3.ab3@26770>   MOVE.l (A7)+,lastoffset_org
0003433A <AmiBlitz3.ab3@26771>   MOVE.w moved0a3,D1
00034340 <AmiBlitz3.ab3@26772>    JSR writeword
00034346 <AmiBlitz3.ab3@26773>   MOVE.w commode,D1
0003434A <AmiBlitz3.ab3@26774>    BEQ.w 'stconti
00034350 <AmiBlitz3.ab3@26775>   LEA pulla2st,A0
00034356 <AmiBlitz3.ab3@26776>   LEA pulla2stf,A1
0003435C <AmiBlitz3.ab3@26777>    JSR pokecode
00034360 <AmiBlitz3.ab3@26778>  BRA.w 'stconti2
00034364 <AmiBlitz3.ab3@26781>   BSR.w pushput
00034368 <AmiBlitz3.ab3@26784>   MOVEM.w (A7)+,D2-D3
0003436C <AmiBlitz3.ab3@26785>   BTST #$F,D2
00034370 <AmiBlitz3.ab3@26786>   BNE.w 'already
00034376 <AmiBlitz3.ab3@26787>     MOVE.w D3,leaa5d3a2+2
0003437C <AmiBlitz3.ab3@26788>     MOVE.l leaa5d3a2,D1
00034382 <AmiBlitz3.ab3@26789>     JSR pokela5s
00034386 <AmiBlitz3.ab3@26792>   MOVE.w #$FE6F,D1         ; was #65135,
0003438C <AmiBlitz3.ab3@26793>   JSR uselib
00034392 <AmiBlitz3.ab3@26794>   MOVE.l #$C700,D1         ; was #lastring,
00034398 <AmiBlitz3.ab3@26795>   MOVE.l d1,lastinstruction
0003439E <AmiBlitz3.ab3@26796>   MOVE.w varmode,D2
000343A2 <AmiBlitz3.ab3@26797>   BNE.w 'local
000343A4 <AmiBlitz3.ab3@26798>     ADDQ.w #1,D1           ;use global allocmem
000343A8 <AmiBlitz3.ab3@26801>   BSR.w Atokejsr
000343AC <AmiBlitz3.ab3@26802>   CMP.w #$2C,D0           ;','
000343B0 <AmiBlitz3.ab3@26803>   BNE.w 'done
000343B6 <AmiBlitz3.ab3@26805>   MOVE.w addq4a2,D1
000343BC <AmiBlitz3.ab3@26806>   JSR writeword
000343C0 <AmiBlitz3.ab3@26807>  BRA.w 'nextstr
000343C4 <AmiBlitz3.ab3@26810>    BTST #$E,D2             ;pointer, ignore!
000343C8 <AmiBlitz3.ab3@26811>    BNE.w 'skip
000343CA <AmiBlitz3.ab3@26812>   TST.b D2
000343CE <AmiBlitz3.ab3@26813>    BEQ.w JUMP_noleterr     ;tried to assign a struct - later!
000343D4 <AmiBlitz3.ab3@26815>    TST.b newsyntax
000343D8 <AmiBlitz3.ab3@26816>    BEQ 'skip2
000343DC <AmiBlitz3.ab3@26819>    CMP.w #$4022,(a5)
000343E0 <AmiBlitz3.ab3@26820>    BNE 'skip2
000343E6 <AmiBlitz3.ab3@26821>    CMP.l #3,d2
000343EA <AmiBlitz3.ab3@26822>    BNE  JUMP_error_convert_types
000343EC <AmiBlitz3.ab3@26823>    ADDQ #2,a5
000343EE <AmiBlitz3.ab3@26824>    MOVEQ #0,d0
000343F0 <AmiBlitz3.ab3@26825>    MOVE.b (a5)+,d0
000343F4 <AmiBlitz3.ab3@26826>    BEQ 'skip2
000343F8 <AmiBlitz3.ab3@26827>    CMP.b #$22,d0
000343FC <AmiBlitz3.ab3@26828>    BNE 'l5
00034400 <AmiBlitz3.ab3@26829>    MOVE.b #0,d0
00034404 <AmiBlitz3.ab3@26830>  BRA 'do
00034406 <AmiBlitz3.ab3@26833>   ASL.l #8,d0
00034408 <AmiBlitz3.ab3@26834>    MOVE.b (a5)+,d0
0003440C <AmiBlitz3.ab3@26835>    BEQ 'skip2
00034410 <AmiBlitz3.ab3@26836>    CMP.b #$22,d0
00034414 <AmiBlitz3.ab3@26837>    BNE 'l2
00034418 <AmiBlitz3.ab3@26838>    MOVE.b #0,d0
0003441A <AmiBlitz3.ab3@26839>    ASR.l #8,d0
0003441E <AmiBlitz3.ab3@26840>  BRA 'do
00034420 <AmiBlitz3.ab3@26843>   ASL.l #8,d0
00034422 <AmiBlitz3.ab3@26844>     MOVE.b (a5)+,d0
00034426 <AmiBlitz3.ab3@26845>    BEQ 'skip2
0003442A <AmiBlitz3.ab3@26846>    CMP.b #$22,d0
0003442E <AmiBlitz3.ab3@26847>    BNE 'l3
00034432 <AmiBlitz3.ab3@26848>    MOVE.b #0,d0
00034434 <AmiBlitz3.ab3@26849>    ASR.l #8,d0
00034438 <AmiBlitz3.ab3@26850>  BRA 'do
0003443A <AmiBlitz3.ab3@26853>   ASL.l #8,d0
0003443C <AmiBlitz3.ab3@26854>     MOVE.b (a5)+,d0
00034440 <AmiBlitz3.ab3@26855>    BEQ 'skip2
00034444 <AmiBlitz3.ab3@26856>    CMP.b #$22,d0
00034448 <AmiBlitz3.ab3@26857>    BNE 'l4
0003444C <AmiBlitz3.ab3@26858>    MOVE.b #0,d0
0003444E <AmiBlitz3.ab3@26859>    ASR.l #8,d0
00034452 <AmiBlitz3.ab3@26860>  BRA 'do
00034456 <AmiBlitz3.ab3@26863>    CMP.b #$22,(a5)+
0003445A <AmiBlitz3.ab3@26864>    BNE JUMP_error4char
0003445E <AmiBlitz3.ab3@26867>   MOVE.w #$2b7c,d1
00034464 <AmiBlitz3.ab3@26868>    TST.w varmode
00034468 <AmiBlitz3.ab3@26869>    BEQ 'g3
0003446C <AmiBlitz3.ab3@26870>    BCLR #9,d1
00034472 <AmiBlitz3.ab3@26873>     JSR writeword
00034474 <AmiBlitz3.ab3@26874>     MOVE.l d0,d1
0003447A <AmiBlitz3.ab3@26875>     JSR writelong
0003447C <AmiBlitz3.ab3@26876>     MOVE.w d3,d1
00034482 <AmiBlitz3.ab3@26877>     JSR writeword
00034488 <AmiBlitz3.ab3@26878>     JSR get1bytemain
0003448A <AmiBlitz3.ab3@26879>  RTS
00034490 <AmiBlitz3.ab3@26886>   MOVE.w d2,vartype
00034494 <AmiBlitz3.ab3@26888>   MOVE.b #$3,D2
00034498 <AmiBlitz3.ab3@26895>   CMP.b #5,d2
0003449C <AmiBlitz3.ab3@26896>   BNE 'l1aa
000344A2 <AmiBlitz3.ab3@26897>   MOVE.l a2,currtype
000344A6 <AmiBlitz3.ab3@26902>   MOVEM.w D2-D3,-(A7)
000344AC <AmiBlitz3.ab3@26903>   MOVE.w varmode,-(A7)
000344B2 <AmiBlitz3.ab3@26905>   MOVE.l a2,leftsidetype
000344BC <AmiBlitz3.ab3@26906>   MOVE.w flagmask,leftsideflagmask
000344C0 <AmiBlitz3.ab3@26907>   BTST #$f,d2
000344C4 <AmiBlitz3.ab3@26908>   BEQ 'nomultiassign
000344CA <AmiBlitz3.ab3@26909>   CLR.l leftsidetype                        ;its multiassign to type entries so no typecheck need
000344D0 <AmiBlitz3.ab3@26910>   CLR.w leftsideflagmask
000344D4 <AmiBlitz3.ab3@26914>   ANDI.w #$FF,D2
000344DA <AmiBlitz3.ab3@26915>   MOVE.l lastoffset_org,-(A7)
000344E0 <AmiBlitz3.ab3@26916>   JSR eval                                ; calc right side of var assign
000344E4 <AmiBlitz3.ab3@26918>   MOVEM.l a0/a1,-(a7)
000344EA <AmiBlitz3.ab3@26919>   MOVE.l leftsidetype,a0
000344F0 <AmiBlitz3.ab3@26920>   CMP.l #0,a0
000344F4 <AmiBlitz3.ab3@26921>   BEQ 'nocheck
000344FC <AmiBlitz3.ab3@26922>   CMP.w #1,leftsideflagmask
00034500 <AmiBlitz3.ab3@26923>   BEQ 'isptr
00034508 <AmiBlitz3.ab3@26924>   CMP.l #$100,4(a0)
0003450C <AmiBlitz3.ab3@26925>   BLE 'nocheck
00034512 <AmiBlitz3.ab3@26928>   TST.l typetocast
00034516 <AmiBlitz3.ab3@26929>   BEQ 'nocast
0003451C <AmiBlitz3.ab3@26930>   MOVE.l typetocast,a1
00034520 <AmiBlitz3.ab3@26931>   BRA 'typecheck
00034526 <AmiBlitz3.ab3@26934>   TST.l rightsidetype
0003452A <AmiBlitz3.ab3@26935>   BEQ 'nocheck
00034530 <AmiBlitz3.ab3@26936>   MOVE.l rightsidetype,a1
00034538 <AmiBlitz3.ab3@26937>   CMP.w #1,rightsideflagmask
0003453C <AmiBlitz3.ab3@26938>   BEQ 'ok
00034544 <AmiBlitz3.ab3@26939>   CMP.l #$100,4(a1)
00034548 <AmiBlitz3.ab3@26940>   BGE 'typecheck
00034550 <AmiBlitz3.ab3@26941>   CMP.l #$3,4(a1)
00034554 <AmiBlitz3.ab3@26942>   BEQ 'ok                              ;long assign is allow with this codelines
00034558 <AmiBlitz3.ab3@26943>   BRA 'error
0003455E <AmiBlitz3.ab3@26946>   TST.b typecheck
00034562 <AmiBlitz3.ab3@26947>   BEQ 'nocheck
00034568 <AmiBlitz3.ab3@26948>   TST.b notypecheck
0003456C <AmiBlitz3.ab3@26949>   BNE 'ok
0003456E <AmiBlitz3.ab3@26950>   CMP.l a0,a1
00034572 <AmiBlitz3.ab3@26951>   BEQ 'ok
00034576 <AmiBlitz3.ab3@26953>   MOVE.l 4(a1),a1                   ; load the address of 1. type.
0003457A <AmiBlitz3.ab3@26954>   CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
0003457E <AmiBlitz3.ab3@26955>   BEQ 'ok
00034584 <AmiBlitz3.ab3@26958>  JMP   error_convert_types     ;for syntax 4  = typecheck
0003458A <AmiBlitz3.ab3@26962>    CLR.l typetocast
0003458E <AmiBlitz3.ab3@26963>    MOVEM.l (a7)+, a0/a1
00034594 <AmiBlitz3.ab3@26965>   MOVE.l (A7)+,lastoffset_org
0003459A <AmiBlitz3.ab3@26966>   MOVE.w commode,D1
0003459E <AmiBlitz3.ab3@26967>    BNE.w 'conti
000345A2 <AmiBlitz3.ab3@26968>    BSR.w pushput
000345A8 <AmiBlitz3.ab3@26971>   MOVE.w (A7)+,varmode
000345AC <AmiBlitz3.ab3@26972>   MOVEM.w (A7)+,D2-D3
000345B0 <AmiBlitz3.ab3@26977>   MOVE.w #$2B40,D1
000345B6 <AmiBlitz3.ab3@26978>   MOVE.w varmode,D4
000345BA <AmiBlitz3.ab3@26979>    BEQ.w 'skip1
000345BE <AmiBlitz3.ab3@26980>   BCLR #$9,D1
000345C2 <AmiBlitz3.ab3@26983>   BTST #$F,D2
000345C6 <AmiBlitz3.ab3@26984>    BEQ.w 'code
000345CC <AmiBlitz3.ab3@26987>    TST.b stackcorrect
000345D0 <AmiBlitz3.ab3@26988>    BNE 'st1
000345D6 <AmiBlitz3.ab3@26990>   MOVE.w commode,D1
000345DA <AmiBlitz3.ab3@26991>    BEQ.w 'skipc1
000345E0 <AmiBlitz3.ab3@26996>   MOVE.w pulla2,D1
000345E6 <AmiBlitz3.ab3@26997>    JSR writeword
000345EA <AmiBlitz3.ab3@27000>   MOVE.w #$2480,D1               ;move.l d0,(a2)
000345EE <AmiBlitz3.ab3@27003>    MOVEM.l a0/d0,-(a7)
000345F4 <AmiBlitz3.ab3@27004>    MOVEA.l lastoffset_org,A0
000345F6 <AmiBlitz3.ab3@27005>    MOVE.l A0,D0
000345FA <AmiBlitz3.ab3@27006>    BEQ.w 'skipa
000345FC <AmiBlitz3.ab3@27007>    MOVEA.l D0,A0
00034604 <AmiBlitz3.ab3@27008>    MOVE.l $A(A0),currtype
00034608 <AmiBlitz3.ab3@27011>   MOVEM.l (a7)+,a0/d0
0003460C <AmiBlitz3.ab3@27013>   CMP.w #$2C,D0                ; ','
00034610 <AmiBlitz3.ab3@27014>    BNE.w 'code
00034614 <AmiBlitz3.ab3@27016>     MOVE.w #$24C0,D1           ;move.l d0,(a2)+
00034618 <AmiBlitz3.ab3@27017>    BSR.w 'code                                         ;write store
0003461E <AmiBlitz3.ab3@27020>    MOVE.l lastoffset_org,D0
00034626 <AmiBlitz3.ab3@27026>   MOVE.w #$FFFF,commode    ; -1
0003462C <AmiBlitz3.ab3@27027>   CLR.w varcodelen
00034634 <AmiBlitz3.ab3@27029>   MOVE.b #1,optiarray
0003463A <AmiBlitz3.ab3@27031>   MOVE.w pusha2,D1
00034640 <AmiBlitz3.ab3@27032>    JSR writeword
00034646 <AmiBlitz3.ab3@27034>   TST.l lastoffset_org
0003464A <AmiBlitz3.ab3@27035>   BEQ 'dimmore
00034650 <AmiBlitz3.ab3@27036>   MOVEA.l lastoffset_org,A0
00034652 <AmiBlitz3.ab3@27038>   MOVE.l (A0),D0
00034656 <AmiBlitz3.ab3@27039>    BEQ.w JUMP_comerr          ;comma past end of struct
00034658 <AmiBlitz3.ab3@27040>   MOVEA.l D0,A0
0003465E <AmiBlitz3.ab3@27041>   MOVE.l A0,lastoffset_org
00034664 <AmiBlitz3.ab3@27042>   BTST #$1,$7(A0)
00034668 <AmiBlitz3.ab3@27043>    BNE.w JUMP_nocomerr        ;can't use comma on multiple entries
0003466C <AmiBlitz3.ab3@27044>   MOVEA.l $A(A0),A1
00034670 <AmiBlitz3.ab3@27045>   MOVE.l $4(A1),D2
00034676 <AmiBlitz3.ab3@27049>   BTST #$0,$7(A0)
0003467A <AmiBlitz3.ab3@27050>    BNE.w 'nextpnt             ;pointer
00034680 <AmiBlitz3.ab3@27051>   CMP.l #$100,D2
00034684 <AmiBlitz3.ab3@27052>    BCC.l JUMP_nocomerr        ;or on structs
00034688 <AmiBlitz3.ab3@27053>  BRA.w 'docom                                     ; do do type\x= 10,20,30....
0003468E <AmiBlitz3.ab3@27057>         CLR.b optiarray
00034692 <AmiBlitz3.ab3@27058>         CMP.w #"@@",(a5)
00034696 <AmiBlitz3.ab3@27059>         BEQ 'n1
0003469A <AmiBlitz3.ab3@27060>  BRA 'd1
000346A0 <AmiBlitz3.ab3@27063>   JSR nextline
000346A2 <AmiBlitz3.ab3@27064>         MOVE.l a5,-(a7)
000346A4 <AmiBlitz3.ab3@27067>   MOVE.b (a5)+,d0
000346A8 <AmiBlitz3.ab3@27068>         CMP.b #$20,d0
000346AC <AmiBlitz3.ab3@27069>         BEQ 'l6
000346AE <AmiBlitz3.ab3@27070>         MOVE.l (a7)+,a5
000346B2 <AmiBlitz3.ab3@27071>         CMP.b #";",d0
000346B6 <AmiBlitz3.ab3@27072>         BEQ 'n1
000346BC <AmiBlitz3.ab3@27075>         TST.w debugmode
000346C0 <AmiBlitz3.ab3@27076>         BEQ 'nextcom
000346C2 <AmiBlitz3.ab3@27077>         MOVE.l a0,-(a7)
000346C8 <AmiBlitz3.ab3@27078>         MOVE.l pushat,a0
000346CE <AmiBlitz3.ab3@27079>         CMP.l #0,a0
000346D2 <AmiBlitz3.ab3@27080>         BNE 'o1
000346D6 <AmiBlitz3.ab3@27081>  BRA 'skipb
000346DE <AmiBlitz3.ab3@27084>         ADD.l #1,2(a0)
000346E4 <AmiBlitz3.ab3@27087>   CLR.w commode
000346EC <AmiBlitz3.ab3@27088>         MOVE.b #1,stackcorrect
000346EE <AmiBlitz3.ab3@27089>         MOVE.l (a7)+,a0
000346F4 <AmiBlitz3.ab3@27090>  JMP 'nextcom
000346FA <AmiBlitz3.ab3@27094>   CMP.l #$100,D2
000346FE <AmiBlitz3.ab3@27095>    BCS.w 'nextpnt2
00034700 <AmiBlitz3.ab3@27096>   MOVEQ.l #$00,D2
00034704 <AmiBlitz3.ab3@27099>   BSET #$E,D2
00034708 <AmiBlitz3.ab3@27102>   BSET #$F,D2
0003470C <AmiBlitz3.ab3@27103>  BRA.w 'nextcom
00034712 <AmiBlitz3.ab3@27107>    MOVE.l destpointer,a4                   ;
0003471A <AmiBlitz3.ab3@27108>    MOVE.l #$f22a6400,-4(a4)                ;
00034720 <AmiBlitz3.ab3@27109>    MOVE.w arrayoffset,d1                   ;
00034726 <AmiBlitz3.ab3@27110>  JMP writeword                             ;
0003472C <AmiBlitz3.ab3@27115>    TST.b fpu
00034730 <AmiBlitz3.ab3@27116>    BEQ 'nofloat
00034734 <AmiBlitz3.ab3@27117>    CMP.b #5,d2
00034738 <AmiBlitz3.ab3@27118>    BNE 'nofloat
0003473E <AmiBlitz3.ab3@27119>    CLR.w fp0var
00034744 <AmiBlitz3.ab3@27120>    LEA regtable,a4
00034746 <AmiBlitz3.ab3@27121>    TST.l (a4)
0003474A <AmiBlitz3.ab3@27122>    BEQ 'noreg
0003474E <AmiBlitz3.ab3@27123>    BTST #15,d2                                             ;regvars
00034752 <AmiBlitz3.ab3@27124>    BNE 'noreg
00034756 <AmiBlitz3.ab3@27125>    CMP.w 0+4(a4),d3
0003475A <AmiBlitz3.ab3@27126>    BNE 'doreg1
00034760 <AmiBlitz3.ab3@27127>    MOVE.l #$f2000380,d1
00034766 <AmiBlitz3.ab3@27128>    MOVE.w regnum,d0
0003476A <AmiBlitz3.ab3@27129>    BNE 'noopt
00034770 <AmiBlitz3.ab3@27135>    MOVE.l destpointer,a4
00034778 <AmiBlitz3.ab3@27136>    CMP.l #$f2001c80,-8(a4)
0003477C <AmiBlitz3.ab3@27137>    BNE 'noopt
00034784 <AmiBlitz3.ab3@27138>    CMP.l #$f2000422,-4(a4)
00034788 <AmiBlitz3.ab3@27139>    BNE 'noopt
0003478E <AmiBlitz3.ab3@27140>    MOVE.l #$f20003a2,d1
00034798 <AmiBlitz3.ab3@27141>    SUB.l #8,destpointer
0003479A <AmiBlitz3.ab3@27144>    ASL.w #7,d0
0003479C <AmiBlitz3.ab3@27145>    OR.w d0,d1
000347A2 <AmiBlitz3.ab3@27146>    JSR writelong
000347A4 <AmiBlitz3.ab3@27147>  RTS
000347A8 <AmiBlitz3.ab3@27150>   CMP.w 8+4(a4),d3
000347AC <AmiBlitz3.ab3@27151>    BNE 'doreg2
000347B2 <AmiBlitz3.ab3@27152>    MOVE.l #$f2000300,d1
000347B8 <AmiBlitz3.ab3@27153>    MOVE.w regnum,d0
000347BA <AmiBlitz3.ab3@27154>    ASL.w #7,d0
000347BC <AmiBlitz3.ab3@27155>    OR.w d0,d1
000347C2 <AmiBlitz3.ab3@27156>    JSR writelong
000347C4 <AmiBlitz3.ab3@27157>  RTS
000347C8 <AmiBlitz3.ab3@27160>   CMP.w 16+4(a4),d3
000347CC <AmiBlitz3.ab3@27161>    BNE 'doreg3
000347D2 <AmiBlitz3.ab3@27162>    MOVE.l #$f2000280,d1
000347D8 <AmiBlitz3.ab3@27163>    MOVE.w regnum,d0
000347DA <AmiBlitz3.ab3@27164>    ASL.w #7,d0
000347DC <AmiBlitz3.ab3@27165>    OR.w d0,d1
000347E2 <AmiBlitz3.ab3@27166>    JSR  writelong
000347E4 <AmiBlitz3.ab3@27167>  RTS
000347E8 <AmiBlitz3.ab3@27170>   CMP.w 24+4(a4),d3
000347EC <AmiBlitz3.ab3@27171>    BNE 'doreg4
000347F2 <AmiBlitz3.ab3@27172>    MOVE.l #$f2000200,d1
000347F8 <AmiBlitz3.ab3@27173>    MOVE.w regnum,d0
000347FA <AmiBlitz3.ab3@27174>    ASL.w #7,d0
000347FC <AmiBlitz3.ab3@27175>    OR.w d0,d1
00034802 <AmiBlitz3.ab3@27176>    JSR writelong
00034804 <AmiBlitz3.ab3@27177>  RTS
00034808 <AmiBlitz3.ab3@27180>   CMP.w 32+4(a4),d3
0003480C <AmiBlitz3.ab3@27181>    BNE 'noreg
00034812 <AmiBlitz3.ab3@27182>    MOVE.l #$f2000180,d1
00034818 <AmiBlitz3.ab3@27183>    MOVE.w regnum,d0
0003481A <AmiBlitz3.ab3@27184>    ASL.w #7,d0
0003481C <AmiBlitz3.ab3@27185>    OR.w d0,d1
00034822 <AmiBlitz3.ab3@27186>    JSR writelong
00034824 <AmiBlitz3.ab3@27187>  RTS
0003482A <AmiBlitz3.ab3@27190>    TST.w regnum
0003482E <AmiBlitz3.ab3@27191>    BNE 'nofp0
00034834 <AmiBlitz3.ab3@27192>    MOVE.l destpointer ,a4
0003483C <AmiBlitz3.ab3@27193>    CMP.l #$f2304400,-6(a4)
00034840 <AmiBlitz3.ab3@27194>    BNE 'do5
00034846 <AmiBlitz3.ab3@27195>    CMP.w #$1990,-2(a4)
0003484A <AmiBlitz3.ab3@27196>    BNE 'do5
0003484E <AmiBlitz3.ab3@27197>    BTST #15,d2                                             ;types ?
00034852 <AmiBlitz3.ab3@27198>    BNE 'do5
00034858 <AmiBlitz3.ab3@27199>   MOVE.l #$2b701990,d1                                     ;var
0003485E <AmiBlitz3.ab3@27200>   TST.w varmode
00034862 <AmiBlitz3.ab3@27201>   BEQ 'glob1
00034866 <AmiBlitz3.ab3@27202>   BCLR #25,d1
0003486A <AmiBlitz3.ab3@27205>   MOVE.l d1,-6(a4)
0003486E <AmiBlitz3.ab3@27206>   MOVE.w d3,-2(a4)
00034874 <AmiBlitz3.ab3@27207>   CLR.w fp0var
0003487C <AmiBlitz3.ab3@27208>   MOVE.w #$ffff,fp0mode
0003487E <AmiBlitz3.ab3@27209>  RTS
00034886 <AmiBlitz3.ab3@27212>    CMP.l #$f22d4400,-6(a4)                                 ;fmove.s (a5),fp0
0003488A <AmiBlitz3.ab3@27213>    BNE 'do3
00034894 <AmiBlitz3.ab3@27214>    CMP.l #newtype_double,currtype
00034898 <AmiBlitz3.ab3@27215>    BEQ 'do4
0003489C <AmiBlitz3.ab3@27218>   MOVE.w #$2b6d,d1
000348A2 <AmiBlitz3.ab3@27219>    TST.w varmode
000348A6 <AmiBlitz3.ab3@27220>    BEQ 'g2
000348AA <AmiBlitz3.ab3@27221>     BCLR #9,d1
000348AE <AmiBlitz3.ab3@27224>     CMP.w #$2b6d,d1
000348B2 <AmiBlitz3.ab3@27225>     BNE 'd1a
000348B6 <AmiBlitz3.ab3@27226>     CMP.w -2(a4),d3
000348BA <AmiBlitz3.ab3@27227>     BNE 'd1a
000348C0 <AmiBlitz3.ab3@27228>     SUBQ.l #6,destpointer
000348C4 <AmiBlitz3.ab3@27229>  BRA 'd12
000348C8 <AmiBlitz3.ab3@27232>     MOVE.w d1,-6(a4)                                       ;fmove.s to move.l mem,mem
000348CE <AmiBlitz3.ab3@27233>     MOVE.w -2(a4),-4(a4)
000348D2 <AmiBlitz3.ab3@27234>     MOVE.w d3,-2(a4)
000348D8 <AmiBlitz3.ab3@27237>   CLR.w fp0var
000348E0 <AmiBlitz3.ab3@27238>     MOVE.w #$ffff,fp0mode
000348E2 <AmiBlitz3.ab3@27239>  RTS
000348EA <AmiBlitz3.ab3@27242>   CMP.l #$f22c4400,-6(a4)                                  ;fmove.s (a4)
000348EE <AmiBlitz3.ab3@27243>    BNE 'do4
000348F2 <AmiBlitz3.ab3@27244>    MOVE.w #$2b6c,d1
000348F8 <AmiBlitz3.ab3@27245>       TST.w varmode
000348FC <AmiBlitz3.ab3@27246>    BEQ 'g3a
00034900 <AmiBlitz3.ab3@27247>    BCLR #9,d1
00034904 <AmiBlitz3.ab3@27250>   MOVE.w d1,-6(a4)
0003490A <AmiBlitz3.ab3@27251>     MOVE.w -2(a4),-4(a4)
0003490E <AmiBlitz3.ab3@27252>     MOVE.w d3,-2(a4)
00034914 <AmiBlitz3.ab3@27253>     CLR.w fp0var
0003491C <AmiBlitz3.ab3@27254>     MOVE.w #$ffff,fp0mode
0003491E <AmiBlitz3.ab3@27255>  RTS
00034924 <AmiBlitz3.ab3@27258>   MOVE.w d3,fp0var
0003492E <AmiBlitz3.ab3@27259>    MOVE.w varmode,fp0mode
00034930 <AmiBlitz3.ab3@27260>    ADDQ.l #6,a4
00034936 <AmiBlitz3.ab3@27261>    MOVE.l a4,fp0addr
00034940 <AmiBlitz3.ab3@27262>    MOVE.l firstiff,fp0iff
00034944 <AmiBlitz3.ab3@27265>   MOVEM.l d0/d4,-(a7)
00034946 <AmiBlitz3.ab3@27266>    MOVEQ #0,d0
0003494C <AmiBlitz3.ab3@27267>     MOVE.w regnum,d0
0003494E <AmiBlitz3.ab3@27268>    ASL.w #7,d0                                             ;fpu store var
00034952 <AmiBlitz3.ab3@27269>   BTST #15,d2
00034956 <AmiBlitz3.ab3@27270>    BEQ 'var
00034958 <AmiBlitz3.ab3@27271>    MOVE.w d1,d4
0003495C <AmiBlitz3.ab3@27272>    CMP.w #$24c0,d4
00034960 <AmiBlitz3.ab3@27273>    BNE 'nopl
00034966 <AmiBlitz3.ab3@27274>    MOVE.l #$f21a6400,d1
00034968 <AmiBlitz3.ab3@27275>    MOVEQ #0,d3
0003496C <AmiBlitz3.ab3@27276>  BRA 'glob
00034972 <AmiBlitz3.ab3@27280>   MOVE.l #$f2126400,d1
00034974 <AmiBlitz3.ab3@27281>    TST.w d3                                                ;offset =0
00034978 <AmiBlitz3.ab3@27282>    BNE 'offset
0003497E <AmiBlitz3.ab3@27283>    MOVE.l #$f2126400,d1
00034980 <AmiBlitz3.ab3@27291>    MOVEQ #0,d3
00034984 <AmiBlitz3.ab3@27292>  BRA 'glob
0003498A <AmiBlitz3.ab3@27295>   MOVE.l #$f22d6400,d1                                     ;var
00034990 <AmiBlitz3.ab3@27296>   TST.w varmode
00034994 <AmiBlitz3.ab3@27297>   BEQ 'glob
00034998 <AmiBlitz3.ab3@27298>   BCLR #16,d1
0003499A <AmiBlitz3.ab3@27299>  'glob OR.l d0,d1
000349A4 <AmiBlitz3.ab3@27302>   CMP.l #newtype_double,currtype
000349A8 <AmiBlitz3.ab3@27303>   BNE 'dbl1
000349AE <AmiBlitz3.ab3@27304>   OR.l #$00001000,d1
000349B4 <AmiBlitz3.ab3@27307>   JSR writelong
000349BA <AmiBlitz3.ab3@27308>   CLR.l currtype
000349BE <AmiBlitz3.ab3@27309>   MOVEM.l (a7)+,d0/d4
000349C0 <AmiBlitz3.ab3@27310>   MOVE.l d3,d1
000349C4 <AmiBlitz3.ab3@27311>   BEQ 'nooffs
000349CA <AmiBlitz3.ab3@27312>  JMP writeword
000349CC <AmiBlitz3.ab3@27315>  RTS
000349D2 <AmiBlitz3.ab3@27329>     TST.b fast                                             ;write lea->xx(a2)
000349D6 <AmiBlitz3.ab3@27330>    BEQ 'la10
000349DC <AmiBlitz3.ab3@27334>    TST.b quickadd
000349E2 <AmiBlitz3.ab3@27336>      CLR.b quickadd
000349E6 <AmiBlitz3.ab3@27337>    CMP.w #$2480,d1
000349EA <AmiBlitz3.ab3@27338>    BNE 'la10
000349F0 <AmiBlitz3.ab3@27339>    TST.b optiarray
000349F4 <AmiBlitz3.ab3@27340>    BNE 'la10
000349FA <AmiBlitz3.ab3@27341>    MOVE.l destpointer,a4
00034A00 <AmiBlitz3.ab3@27342>    CMP.w #$45ea,-4(a4)
00034A04 <AmiBlitz3.ab3@27343>    BNE 'la10
00034A0C <AmiBlitz3.ab3@27344>    CMP.w #8,pushclen
00034A10 <AmiBlitz3.ab3@27345>    BEQ 'la100
00034A18 <AmiBlitz3.ab3@27346>    CMP.w #6,pushclen
00034A1C <AmiBlitz3.ab3@27347>    BNE 'la10
00034A20 <AmiBlitz3.ab3@27348>    CMP.b #3,d2
00034A24 <AmiBlitz3.ab3@27349>    BCS 'la110
00034A2A <AmiBlitz3.ab3@27351>    MOVE.w #$2540,-2(a4)
00034A30 <AmiBlitz3.ab3@27352>    MOVE.w arrayoffset,d1
00034A36 <AmiBlitz3.ab3@27353>  JMP writeword
00034A3C <AmiBlitz3.ab3@27356>    CLR.b quickadd
00034A3E <AmiBlitz3.ab3@27357>  RTS
00034A42 <AmiBlitz3.ab3@27360>    CMP.b #2,d2
00034A46 <AmiBlitz3.ab3@27361>    BNE 'la120
00034A4C <AmiBlitz3.ab3@27362>     MOVE.w #$3540,-2(a4)
00034A52 <AmiBlitz3.ab3@27363>    MOVE.w arrayoffset,d1
00034A58 <AmiBlitz3.ab3@27364>  JMP writeword
00034A5C <AmiBlitz3.ab3@27367>   CMP.b #1,d2
00034A60 <AmiBlitz3.ab3@27368>    BNE.s 'la10
00034A66 <AmiBlitz3.ab3@27369>     MOVE.w #$1540,-2(a4)
00034A6C <AmiBlitz3.ab3@27370>    MOVE.w arrayoffset,d1
00034A72 <AmiBlitz3.ab3@27371>  JMP writeword
00034A76 <AmiBlitz3.ab3@27374>    CMP.b #3,d2
00034A7A <AmiBlitz3.ab3@27375>    BCS 'la11
00034A80 <AmiBlitz3.ab3@27376>    MOVE.w #$2540,-4(a4)
00034A82 <AmiBlitz3.ab3@27377>  RTS
00034A86 <AmiBlitz3.ab3@27380>    CMP.b #2,d2
00034A8A <AmiBlitz3.ab3@27381>    BNE 'la12
00034A90 <AmiBlitz3.ab3@27382>     MOVE.w #$3540,-4(a4)
00034A92 <AmiBlitz3.ab3@27383>  RTS
00034A96 <AmiBlitz3.ab3@27386>    CMP.b #1,d2
00034A9A <AmiBlitz3.ab3@27387>    BNE.s 'la10
00034AA0 <AmiBlitz3.ab3@27388>     MOVE.w #$1540,-4(a4)
00034AA2 <AmiBlitz3.ab3@27389>  RTS
00034AA8 <AmiBlitz3.ab3@27392>   CLR.b optiarray
00034AAC <AmiBlitz3.ab3@27394>    CMP.b #$1,D2
00034AB0 <AmiBlitz3.ab3@27395>    BEQ.w 'byte
00034AB4 <AmiBlitz3.ab3@27396>    BSR.w varalign
00034AB8 <AmiBlitz3.ab3@27397>    CMP.b #$3,D2
00034ABC <AmiBlitz3.ab3@27398>    BCC.w 'writevarlong
00034AC2 <AmiBlitz3.ab3@27400>    TST.b fast                                              ;optiimmi
00034AC6 <AmiBlitz3.ab3@27401>    BEQ 'l10bc
00034ACC <AmiBlitz3.ab3@27406>    MOVE.l destpointer,a0
00034AD2 <AmiBlitz3.ab3@27407>    SUB.l imm_addr,a0
00034AD8 <AmiBlitz3.ab3@27408>    CMP.l #4,a0
00034ADC <AmiBlitz3.ab3@27409>    BNE 'l10c
00034AE2 <AmiBlitz3.ab3@27410>    CLR.l imm_addr
00034AE8 <AmiBlitz3.ab3@27411>    MOVE.l destpointer,a4
00034AEC <AmiBlitz3.ab3@27412>    OR.w #$107c,d1
00034AF0 <AmiBlitz3.ab3@27413>    MOVE.w d1,-4(a4)
00034AF2 <AmiBlitz3.ab3@27414>     MOVE.w D3,D1
00034AF8 <AmiBlitz3.ab3@27415>  JMP writeword
00034AFE <AmiBlitz3.ab3@27418>   MOVE.l destpointer,a0
00034B04 <AmiBlitz3.ab3@27419>   SUB.l load_var_addr,a0
00034B0A <AmiBlitz3.ab3@27420>   CMP.l #4,a0
00034B0E <AmiBlitz3.ab3@27421>   BNE 'l10bc
00034B14 <AmiBlitz3.ab3@27422>   CMP.w #$302d,-4(a4)                                      ;check 68k opcode
00034B18 <AmiBlitz3.ab3@27423>   BNE 'l10bc
00034B1E <AmiBlitz3.ab3@27425>   CLR.l load_var_addr
00034B24 <AmiBlitz3.ab3@27426>   MOVE.l destpointer,a4
00034B28 <AmiBlitz3.ab3@27427>   OR.w #$102d,d1
00034B2C <AmiBlitz3.ab3@27428>   MOVE.w d1,-4(a4)
00034B2E <AmiBlitz3.ab3@27429>   MOVE.w d3,d1
00034B34 <AmiBlitz3.ab3@27430>  JMP writeword
00034B38 <AmiBlitz3.ab3@27434>   ORI.w #$1000,D1                                          ;word
00034B3C <AmiBlitz3.ab3@27435>  BRA.w 'writestorevar
00034B42 <AmiBlitz3.ab3@27440>    TST.b fast                                              ;optiimmi
00034B46 <AmiBlitz3.ab3@27441>    BEQ 'l10bb
00034B4C <AmiBlitz3.ab3@27446>    MOVE.l destpointer,a0
00034B52 <AmiBlitz3.ab3@27447>    SUB.l imm_addr,a0
00034B58 <AmiBlitz3.ab3@27448>    CMP.l #4,a0
00034B5C <AmiBlitz3.ab3@27449>    BNE 'l10d
00034B62 <AmiBlitz3.ab3@27450>    CLR.l imm_addr
00034B68 <AmiBlitz3.ab3@27451>    MOVE.l destpointer,a4
00034B6C <AmiBlitz3.ab3@27452>    OR.w #$7c,d1
00034B70 <AmiBlitz3.ab3@27453>    EORI #$3000,d1
00034B74 <AmiBlitz3.ab3@27454>    MOVE.w d1,-4(a4)
00034B76 <AmiBlitz3.ab3@27455>       MOVE.w D3,D1
00034B7C <AmiBlitz3.ab3@27456>  JMP writeword
00034B82 <AmiBlitz3.ab3@27459>   MOVE.l destpointer,a0
00034B88 <AmiBlitz3.ab3@27460>   SUB.l load_var_addr,a0
00034B8E <AmiBlitz3.ab3@27461>   CMP.l #4,a0
00034B92 <AmiBlitz3.ab3@27462>   BNE 'l10bb
00034B98 <AmiBlitz3.ab3@27463>   CLR.l load_var_addr
00034B9E <AmiBlitz3.ab3@27464>   MOVE.l destpointer,a4
00034BA4 <AmiBlitz3.ab3@27465>    CMP.w #$1b6d,-4(a4)
00034BA8 <AmiBlitz3.ab3@27466>    BNE 'l10bb
00034BAC <AmiBlitz3.ab3@27467>    OR.w #$2d,d1
00034BB0 <AmiBlitz3.ab3@27468>    EORI #$3000,d1
00034BB4 <AmiBlitz3.ab3@27469>    MOVE.w d1,-4(a4)
00034BB6 <AmiBlitz3.ab3@27470>   MOVE.w d3,d1
00034BBC <AmiBlitz3.ab3@27471>  JMP writeword
00034BC2 <AmiBlitz3.ab3@27475>   ADDQ.w #1,pcodd                                          ;byte
00034BC6 <AmiBlitz3.ab3@27476>   EORI.w #$3000,D1
00034BCC <AmiBlitz3.ab3@27479>   JSR writeword
00034BD0 <AmiBlitz3.ab3@27480>   BTST #$7,D1
00034BD4 <AmiBlitz3.ab3@27481>    BNE 'done
00034BD6 <AmiBlitz3.ab3@27482>   MOVE.w D3,D1
00034BDC <AmiBlitz3.ab3@27483>  JMP writeword
00034BE2 <AmiBlitz3.ab3@27486>    TST.b fast                                              ;optiimmi
00034BE6 <AmiBlitz3.ab3@27487>    BEQ 'l10ba
00034BEC <AmiBlitz3.ab3@27491>    MOVE.l destpointer,a0
00034BF2 <AmiBlitz3.ab3@27492>    SUB.l imm_addr,a0
00034BF8 <AmiBlitz3.ab3@27493>    CMP.l #6,a0
00034BFC <AmiBlitz3.ab3@27494>    BNE 'l10e
00034C02 <AmiBlitz3.ab3@27495>    CLR.l imm_addr
00034C08 <AmiBlitz3.ab3@27496>    MOVE.l destpointer,a4
00034C0C <AmiBlitz3.ab3@27497>    OR.w #$7c,d1
00034C10 <AmiBlitz3.ab3@27498>    MOVE.w d1,-6(a4)
00034C12 <AmiBlitz3.ab3@27499>     MOVE.w D3,D1
00034C18 <AmiBlitz3.ab3@27500>  JMP writeword
00034C1E <AmiBlitz3.ab3@27503>   MOVE.l destpointer,a0
00034C24 <AmiBlitz3.ab3@27504>   SUB.l load_var_addr,a0
00034C2A <AmiBlitz3.ab3@27505>   CMP.l #4,a0
00034C2E <AmiBlitz3.ab3@27506>   BNE 'l10ba
00034C34 <AmiBlitz3.ab3@27507>   CLR.l load_var_addr
00034C3A <AmiBlitz3.ab3@27508>   MOVE.l destpointer,a4
00034C40 <AmiBlitz3.ab3@27509>   CMP.w #$245f,-2(a4)
00034C44 <AmiBlitz3.ab3@27510>   BEQ 'l10ba
00034C48 <AmiBlitz3.ab3@27511>   OR.w #$28,d1
00034C4C <AmiBlitz3.ab3@27512>   OR.w d1,-4(a4)
00034C52 <AmiBlitz3.ab3@27513>   CMP.w #$2b6d,-4(a4)
00034C56 <AmiBlitz3.ab3@27514>   BNE 'd1aa
00034C5A <AmiBlitz3.ab3@27515>   CMP.w -2(a4),d3
00034C5E <AmiBlitz3.ab3@27516>   BNE 'd1aa
00034C64 <AmiBlitz3.ab3@27517>   SUBQ.l #4,destpointer
00034C66 <AmiBlitz3.ab3@27518>  RTS
00034C68 <AmiBlitz3.ab3@27521>   MOVE.w d3,d1
00034C6E <AmiBlitz3.ab3@27522>  JMP writeword
00034C74 <AmiBlitz3.ab3@27526>   JSR writeword
00034C78 <AmiBlitz3.ab3@27527>   BTST #$7,D1
00034C7C <AmiBlitz3.ab3@27528>    BNE.b 'done
00034C7E <AmiBlitz3.ab3@27529>   MOVE.w D3,D1
00034C84 <AmiBlitz3.ab3@27530>  JMP writeword
00034C86 <AmiBlitz3.ab3@27533> RTS
00034C88 <AmiBlitz3.ab3@27537>   MOVE.w D1,-(A7)
00034C8C <AmiBlitz3.ab3@27538>   MOVE.w pcodd(PC),D1
00034C8E <AmiBlitz3.ab3@27539>   LSR.w #1,D1
00034C92 <AmiBlitz3.ab3@27540>    BCC.b 'done
00034C98 <AmiBlitz3.ab3@27541>   CLR.w pcodd
00034C9E <AmiBlitz3.ab3@27542>   MOVE.w add1a2,D1
00034CA4 <AmiBlitz3.ab3@27543>    JSR writeword
00034CA6 <AmiBlitz3.ab3@27546>   MOVE.w (A7)+,D1
00034CA8 <AmiBlitz3.ab3@27547> RTS
00034CAA <AmiBlitz3.ab3@27551> add1a2:     Dc.b $52,$4A                                   ;ADDQ.W  #1,A2
00034CAC <AmiBlitz3.ab3@27554> pcodd:     Ds.w 1                                          ;add 1 to this for bytes
00034CAE <AmiBlitz3.ab3@27555> listadd:   Ds.w 1                                          ;set to 8 if it's a list
00034CB0 <AmiBlitz3.ab3@27556> listsize:  Ds.w 1
00034CB6 <AmiBlitz3.ab3@27562>   ADDQ.w #1,regnum               ;get things into d1
00034CBE <AmiBlitz3.ab3@27564>   MOVE.b #1,nowdeclare
00034CC4 <AmiBlitz3.ab3@27565>   CLR.b dimkeep
00034CCC <AmiBlitz3.ab3@27566>    CMP.l #"KEEP",-1(a5)
00034CD0 <AmiBlitz3.ab3@27567>   BNE 'nokeep
00034CD6 <AmiBlitz3.ab3@27568>   CMP.b #" ",3(a5)
00034CDA <AmiBlitz3.ab3@27569>   BNE 'nokeep
00034CDC <AmiBlitz3.ab3@27570>   ADDQ.l #3,a5
00034CE0 <AmiBlitz3.ab3@27573>     CMP.b #" ",(a5)
00034CE4 <AmiBlitz3.ab3@27574>     BNE '1
00034CE6 <AmiBlitz3.ab3@27575>    ADDQ #1,a5
00034CEA <AmiBlitz3.ab3@27576>  BRA '2
00034CF0 <AmiBlitz3.ab3@27579>   MOVE.l a5,lastsourcepos
00034CF8 <AmiBlitz3.ab3@27580>   MOVE.b #1,dimkeep
00034CFC <AmiBlitz3.ab3@27589>   MOVE.w #$FF9A,D1           ; is #65434,
00034D02 <AmiBlitz3.ab3@27590>   JSR uselib                 ;arrays lib!
00034D08 <AmiBlitz3.ab3@27593>   CLR.w listadd
00034D0C <AmiBlitz3.ab3@27594>   CMP.w #-$7F4D,D0           ; was #$8000+tnum,d0
00034D10 <AmiBlitz3.ab3@27595>    BNE.w 'notlist
00034D18 <AmiBlitz3.ab3@27596>   MOVE.w #$0008,listadd      ;it's a list
00034D1C <AmiBlitz3.ab3@27597>   MOVE.w #$FFFA,D1           ; is #65530
00034D22 <AmiBlitz3.ab3@27598>    JSR uselib                ;use memlib
00034D28 <AmiBlitz3.ab3@27599>    JSR get1bytemain
00034D2E <AmiBlitz3.ab3@27602>   CLR.w nonew
00034D34 <AmiBlitz3.ab3@27603>    JSR getparameter
00034D3A <AmiBlitz3.ab3@27605>   JSR checkdoubledeclare
00034D42 <AmiBlitz3.ab3@27607>   BTST #$1,flagmask+1
00034D46 <AmiBlitz3.ab3@27608>    BEQ.w JUMP_syntaxerr
00034D4C <AmiBlitz3.ab3@27609>    JSR fetchvars
00034D52 <AmiBlitz3.ab3@27610>   MOVE.w notshared,D1      ; added,
00034D56 <AmiBlitz3.ab3@27611>    BNE.w 'added
00034D5E <AmiBlitz3.ab3@27615>   MOVE.w $8(A3),temp1
00034D64 <AmiBlitz3.ab3@27616>   MOVE.w proceduremode,D2
00034D68 <AmiBlitz3.ab3@27617>    BNE.w 'reloc
00034D6E <AmiBlitz3.ab3@27619>   MOVE.w globalvarpointer,-(A7)
00034D76 <AmiBlitz3.ab3@27620>   MOVE.w $4(A3),globalvarpointer
00034D7C <AmiBlitz3.ab3@27621>   ADDQ.w #4,globalvarpointer
00034D80 <AmiBlitz3.ab3@27622>    BSR.w write_dim_code
00034D86 <AmiBlitz3.ab3@27623>   MOVE.w (A7)+,globalvarpointer
00034D8A <AmiBlitz3.ab3@27624>  BRA.w 'next
00034D90 <AmiBlitz3.ab3@27639>   MOVE.w globalvarpointer,-(A7)
00034D96 <AmiBlitz3.ab3@27640>             MOVE.w proceduremode,-(a7)
00034D9C <AmiBlitz3.ab3@27641>             CLR.w proceduremode
00034DA4 <AmiBlitz3.ab3@27642>   MOVE.w $4(A3),globalvarpointer
00034DAA <AmiBlitz3.ab3@27643>   ADDQ.w #4,globalvarpointer
00034DAE <AmiBlitz3.ab3@27644>    BSR.w write_dim_code
00034DB4 <AmiBlitz3.ab3@27645>    MOVE.w (a7)+,proceduremode
00034DBA <AmiBlitz3.ab3@27646>   MOVE.w (A7)+,globalvarpointer
00034DBE <AmiBlitz3.ab3@27648>  BRA.w 'next
00034DC6 <AmiBlitz3.ab3@27653>   MOVE.w #$FFFF,temp1                ; was -1  ;no care on # dims
00034DCA <AmiBlitz3.ab3@27654>   MOVE.w listadd(PC),D1
00034DCE <AmiBlitz3.ab3@27655>    BEQ.w 'isok
00034DD6 <AmiBlitz3.ab3@27656>   MOVE.w #$4000,temp1                ;yes, we do care - must be 1
00034DDC <AmiBlitz3.ab3@27658>   BSET #$0,$6(A3)                    ;set to list type of array
00034DE2 <AmiBlitz3.ab3@27662>         TST.w proceduremode
00034DE6 <AmiBlitz3.ab3@27663>        BNE 'l1
00034DEC <AmiBlitz3.ab3@27664>        MOVE.w locvaroff,-(a7)
00034DF0 <AmiBlitz3.ab3@27668>   BSR.w write_dim_code
00034DF6 <AmiBlitz3.ab3@27670>         TST.w proceduremode
00034DFA <AmiBlitz3.ab3@27671>         BNE 'next
00034E00 <AmiBlitz3.ab3@27672>        MOVE.w (A7)+,locvaroff
00034E06 <AmiBlitz3.ab3@27676>   JSR get1bytemain
00034E0A <AmiBlitz3.ab3@27677>   CMP.w #$2C,D0                ; ","
00034E0E <AmiBlitz3.ab3@27678>    BNE.w 'done
00034E14 <AmiBlitz3.ab3@27679>    JSR get1bytemain
00034E18 <AmiBlitz3.ab3@27680>  BRA.w dodim2
00034E1A <AmiBlitz3.ab3@27683> RTS
00034E20 <AmiBlitz3.ab3@27686> JUMP_syntaxerr JMP syntaxerr
00034E26 <AmiBlitz3.ab3@27687> JUMP_redimerr JMP redimerr
00034E2E <AmiBlitz3.ab3@27691>   MOVE.w #$FFFF,nonew                                      ;#-1,nonew org source
00034E34 <AmiBlitz3.ab3@27692>   MOVE.w beginarr,D1
00034E3A <AmiBlitz3.ab3@27693>    JSR writeword
00034E3C <AmiBlitz3.ab3@27694>   MOVEQ.l #$00,D1
00034E42 <AmiBlitz3.ab3@27695>    JSR writeword
00034E44 <AmiBlitz3.ab3@27696>   MOVEQ.l #$04,D1
00034E4C <AmiBlitz3.ab3@27697>   BTST #$0,flagmask+1
00034E50 <AmiBlitz3.ab3@27698>    BNE.w 'pointer
00034E54 <AmiBlitz3.ab3@27699>   MOVE.w $8(A2),D1
00034E58 <AmiBlitz3.ab3@27702>   ADD.w listadd(PC),D1                                     ;size of one element.
00034E5E <AmiBlitz3.ab3@27703>   MOVE.w D1,listsize
00034E64 <AmiBlitz3.ab3@27704>    JSR writeword
00034E6A <AmiBlitz3.ab3@27705>   CLR.w temp2                                              ;# dim's got
00034E6C <AmiBlitz3.ab3@27706>   MOVE.l A3,-(A7)
00034E72 <AmiBlitz3.ab3@27709>   ADDQ.w #1,temp2
00034E74 <AmiBlitz3.ab3@27710>   MOVEQ.l #$03,D2                                          ;get word
00034E7A <AmiBlitz3.ab3@27711>   MOVE.w notshared,-(a7)
00034E80 <AmiBlitz3.ab3@27712>    JSR eval
00034E86 <AmiBlitz3.ab3@27713>   MOVE.w (a7)+,notshared
00034E8C <AmiBlitz3.ab3@27714>   TST.b debugmode
00034E90 <AmiBlitz3.ab3@27715>    BEQ.w 'norerr0
00034E94 <AmiBlitz3.ab3@27716>   MOVE.w #$C30F,D1
00034E98 <AmiBlitz3.ab3@27722>       MOVE.w #$5281,d1
00034E9E <AmiBlitz3.ab3@27723>       JSR writeword
00034EA4 <AmiBlitz3.ab3@27724>       MOVE.l #$4c010800,d1                                 ;dim >65536 fix
00034EAA <AmiBlitz3.ab3@27725>       JSR writelong
00034EB0 <AmiBlitz3.ab3@27726>   MOVE.w proceduremode,D2
00034EB4 <AmiBlitz3.ab3@27727>    BEQ.w 'global
00034EBA <AmiBlitz3.ab3@27728>   SUBQ.w #4,locvaroff
00034EC4 <AmiBlitz3.ab3@27729>   MOVE.w locvaroff,putarr+2
00034EC8 <AmiBlitz3.ab3@27730>  BRA.w 'doit
00034ED2 <AmiBlitz3.ab3@27733>   MOVE.w globalvarpointer,putarr+2
00034ED8 <AmiBlitz3.ab3@27734>   ADDQ.w #4,globalvarpointer
00034EDE <AmiBlitz3.ab3@27737>   TST.b dimkeep
00034EE2 <AmiBlitz3.ab3@27738>            BEQ 'doit_l1
00034EE4 <AmiBlitz3.ab3@27739>       MOVEQ #0,d1
00034EEA <AmiBlitz3.ab3@27740>       MOVE.w putarr+2,d1
00034EF0 <AmiBlitz3.ab3@27741>       OR.l  #$222d0000,d1
00034EF6 <AmiBlitz3.ab3@27742>       MOVE.w proceduremode,D2
00034EFA <AmiBlitz3.ab3@27743>       BEQ 'doit_l2
00034F00 <AmiBlitz3.ab3@27744>       TST.w notshared
00034F04 <AmiBlitz3.ab3@27745>       BEQ 'doit_l2
00034F0A <AmiBlitz3.ab3@27746>       SUB.l #$00010000,d1
00034F10 <AmiBlitz3.ab3@27749>   JSR writelong
00034F16 <AmiBlitz3.ab3@27752>   MOVE.l putarr,D1
00034F1C <AmiBlitz3.ab3@27753>       TST.w notshared
00034F20 <AmiBlitz3.ab3@27754>       BNE 'doit_l1a
00034F26 <AmiBlitz3.ab3@27755>       JSR writelong
00034F2A <AmiBlitz3.ab3@27756>  BRA 'doit_l4
00034F30 <AmiBlitz3.ab3@27759>   JSR pokela5d
00034F34 <AmiBlitz3.ab3@27762>   CMP.w #$2C,D0
00034F38 <AmiBlitz3.ab3@27763>    BEQ.w 'loop
00034F3C <AmiBlitz3.ab3@27764>   CMP.w #$29,D0
00034F40 <AmiBlitz3.ab3@27765>    BNE.w JUMP_syntaxerr
00034F42 <AmiBlitz3.ab3@27766>   MOVEA.l (A7)+,A3
00034F48 <AmiBlitz3.ab3@27767>   MOVE.w temp1,D1
00034F4C <AmiBlitz3.ab3@27768>    BMI.w 'nocare
00034F50 <AmiBlitz3.ab3@27772>   BTST #$E,D1
00034F54 <AmiBlitz3.ab3@27773>    BEQ.w 'notl
00034F5C <AmiBlitz3.ab3@27774>   CMPI.w #$1,temp2
00034F60 <AmiBlitz3.ab3@27775>    BNE.w JUMP_redimerr
00034F64 <AmiBlitz3.ab3@27776>  BRA.w 'nocare
00034F6A <AmiBlitz3.ab3@27779>   CMP.w temp2,D1
00034F6E <AmiBlitz3.ab3@27780>    BNE.w JUMP_redimerr                                     ;range too long
00034F74 <AmiBlitz3.ab3@27783>   LEA globalvarpointer,A0
00034F7A <AmiBlitz3.ab3@27784>   MOVE.w proceduremode,D1
00034F7E <AmiBlitz3.ab3@27785>   BEQ.w 'gskip
00034F84 <AmiBlitz3.ab3@27786>   LEA locvaroff,A0
00034F8A <AmiBlitz3.ab3@27789>   MOVE.W  extraword,(A0)
00034F8E <AmiBlitz3.ab3@27790>   BRA.W   'care
00034F96 <AmiBlitz3.ab3@27793>   MOVE.w temp2,$8(A3)                                      ;set # dim's
00034F9C <AmiBlitz3.ab3@27796>   LEA doarr,A0
00034FA2 <AmiBlitz3.ab3@27797>   MOVE.w $4(A3),$2(A0)
00034FAA <AmiBlitz3.ab3@27798>   MOVE.w putarr+2,$6(A0)
00034FAC <AmiBlitz3.ab3@27799>   MOVE.l (A0)+,D1
00034FB2 <AmiBlitz3.ab3@27800>    JSR writelong
00034FB4 <AmiBlitz3.ab3@27801>   MOVE.l (A0),D1
00034FBA <AmiBlitz3.ab3@27802>    JSR writelong
00034FC0 <AmiBlitz3.ab3@27803>    TST.b dimkeep
00034FC4 <AmiBlitz3.ab3@27804>   BNE 'care_l3
00034FC8 <AmiBlitz3.ab3@27807>   MOVE.w #$C400,D1
00034FCC <AmiBlitz3.ab3@27808>  BRA 'care_l2
00034FD0 <AmiBlitz3.ab3@27811>   MOVE.w #$C405,d1
00034FD6 <AmiBlitz3.ab3@27814>   MOVE.w proceduremode,D2
00034FDA <AmiBlitz3.ab3@27815>    BEQ.w 'isg
00034FE0 <AmiBlitz3.ab3@27816>    TST.w notshared
00034FE4 <AmiBlitz3.ab3@27817>    BEQ 'isg
00034FE6 <AmiBlitz3.ab3@27818>   ADDQ.w #1,D1
00034FEA <AmiBlitz3.ab3@27821>   MOVE.w listadd(PC),D2
00034FEE <AmiBlitz3.ab3@27822>    BEQ.w 'isrg
00034FF0 <AmiBlitz3.ab3@27823>   MOVE.w D1,-(A7)
00034FF4 <AmiBlitz3.ab3@27824>   MOVE.w setles(PC),D1
00034FFA <AmiBlitz3.ab3@27825>    JSR writeword
00034FFE <AmiBlitz3.ab3@27826>   MOVE.w listsize(PC),D1
00035004 <AmiBlitz3.ab3@27827>    JSR writeword
00035006 <AmiBlitz3.ab3@27828>   MOVE.w (A7)+,D1
00035008 <AmiBlitz3.ab3@27829>   ADDQ.w #3,D1
0003500C <AmiBlitz3.ab3@27832> BRA.w Atokejsr
00035010 <AmiBlitz3.ab3@27835> setles:   Dc.b $38,$3C,$00,$00                             ;MOVE.W  #$0000,D4
00035016 <AmiBlitz3.ab3@27844>     MOVE.l #$f23c4400,d1
0003501C <AmiBlitz3.ab3@27846>   MOVE.w regnum,d0
0003501E <AmiBlitz3.ab3@27847>   ASL.w #7,d0
00035020 <AmiBlitz3.ab3@27848>   OR.w d0,d1
00035026 <AmiBlitz3.ab3@27849>   JSR writelong
0003502C <AmiBlitz3.ab3@27855>     MOVE.l #$40490fd9,d1
00035032 <AmiBlitz3.ab3@27857>   JSR writelong
00035038 <AmiBlitz3.ab3@27858> JMP get1bytemain
0003503C <AmiBlitz3.ab3@27865> vbr:                Ds.l 1
0003503E <AmiBlitz3.ab3@27866> cfetchmode:         Ds.w 1                               ;1=fetching a constant
00035044 <AmiBlitz3.ab3@27868> constlibs           Dc.w $FDA7,$FCDF,$FD43               ;64935,64735,64835  org source
00035048 <AmiBlitz3.ab3@27872> constpcat:          Ds.l 1
0003504C <AmiBlitz3.ab3@27873> constlibat:         Ds.l 1
00035050 <AmiBlitz3.ab3@27874> constmaxpc:         Dc.l $400
00035054 <AmiBlitz3.ab3@27876> stacksize:          Dc.l #DEFAULT_STACKSIZE              ;stackfuck org source
00035058 <AmiBlitz3.ab3@27877> currentlabeladdr:   Dc.l labelbase                       ;lastrescon org source
0003505C <AmiBlitz3.ab3@27878> currentmacroaddr:   Dc.l macrobase                       ;lastresmac org source
00035060 <AmiBlitz3.ab3@27879> lastrestype:        Dc.l newtype_string
00035062 <AmiBlitz3.ab3@27880> rescnt:             Ds.w 1                               ;# resident
00035064 <AmiBlitz3.ab3@27881> state_of_residents: Ds.w 1                               ;reschg org source ;flag for if res's have changed
00035068 <AmiBlitz3.ab3@27882> resat:              Dc.l residents_table                 ;??looks like not used anymore??
0003506A <AmiBlitz3.ab3@27883> linedone:           Ds.w 1
00035080 <AmiBlitz3.ab3@27884> directbuffer:       Ds.w 11                              ;dirpcat  dc.w 0 org source
00035084 <AmiBlitz3.ab3@27893>   Dc.l 0                                        ; bytetobyte
00035088 <AmiBlitz3.ab3@27894>   Dc.l convert_byte_to_word                     ; bytetoword
0003508C <AmiBlitz3.ab3@27895>   Dc.l convert_byte_to_long                     ; bytetolong
00035090 <AmiBlitz3.ab3@27896>   Dc.l convert_byte_to_quick                    ; bytetoquick
00035094 <AmiBlitz3.ab3@27897>   Dc.l convert_byte_to_float                    ; bytetofloat
00035098 <AmiBlitz3.ab3@27898>   Dc.l convert_byte_to_long                     ; bytetolong
0003509C <AmiBlitz3.ab3@27899>   Dc.l error_convert_types                      ; noconerr
000350A0 <AmiBlitz3.ab3@27902>   Dc.l convert_word_to_byte                     ; wordtobyte
000350A4 <AmiBlitz3.ab3@27903>   Dc.l 0                                        ; wordtoword
000350A8 <AmiBlitz3.ab3@27904>   Dc.l convert_word_to_long                     ; wordtolong
000350AC <AmiBlitz3.ab3@27905>   Dc.l convert_word_to_quick                    ; wordtoquick
000350B0 <AmiBlitz3.ab3@27906>   Dc.l convert_word_to_float                    ; wordtofloat
000350B4 <AmiBlitz3.ab3@27907>   Dc.l convert_word_to_long                     ; wordtolong
000350B8 <AmiBlitz3.ab3@27908>   Dc.l error_convert_types                      ; noconerr
000350BC <AmiBlitz3.ab3@27911>   Dc.l convert_long_to_byte                     ; longtobyte
000350C0 <AmiBlitz3.ab3@27912>   Dc.l convert_long_to_word                     ; longtoword
000350C4 <AmiBlitz3.ab3@27913>   Dc.l 0                                        ; longtolong
000350C8 <AmiBlitz3.ab3@27914>   Dc.l convert_long_to_quick                    ; longtoquick
000350CC <AmiBlitz3.ab3@27915>   Dc.l convert_long_to_float                    ; longtofloat
000350D0 <AmiBlitz3.ab3@27916>   Dc.l 0                                        ; longtolong
000350D4 <AmiBlitz3.ab3@27917>   Dc.l error_convert_types                      ; noconerr
000350D8 <AmiBlitz3.ab3@27920>   Dc.l convert_quick_to_byte                    ; quicktobyte
000350DC <AmiBlitz3.ab3@27921>   Dc.l convert_quick_to_word                    ; quicktoword
000350E0 <AmiBlitz3.ab3@27922>   Dc.l convert_quick_to_long                    ; quicktolong
000350E4 <AmiBlitz3.ab3@27923>   Dc.l 0                                        ; quicktoquick
000350E8 <AmiBlitz3.ab3@27924>   Dc.l convert_quick_to_float                   ; quicktofloat
000350EC <AmiBlitz3.ab3@27925>   Dc.l convert_quick_to_long                    ; quicktolong
000350F0 <AmiBlitz3.ab3@27926>   Dc.l error_convert_types                      ; noconerr
000350F4 <AmiBlitz3.ab3@27929>   Dc.l convert_float_to_byte                    ; floattobyte
000350F8 <AmiBlitz3.ab3@27930>   Dc.l convert_float_to_word                    ; floattoword
000350FC <AmiBlitz3.ab3@27931>   Dc.l convert_float_to_long                    ; floattolong
00035100 <AmiBlitz3.ab3@27932>   Dc.l convert_float_to_quick                   ; floattoquick
00035104 <AmiBlitz3.ab3@27933>   Dc.l 0                                        ; floattofloat
00035108 <AmiBlitz3.ab3@27934>   Dc.l convert_float_to_long                    ; floattolong
0003510C <AmiBlitz3.ab3@27935>   Dc.l error_convert_types                      ; noconerr
00035110 <AmiBlitz3.ab3@27938>   Dc.l convert_long_to_byte                     ; longtobyte
00035114 <AmiBlitz3.ab3@27939>   Dc.l convert_long_to_word                     ; longtoword
00035118 <AmiBlitz3.ab3@27940>   Dc.l 0                                        ; longtolong
0003511C <AmiBlitz3.ab3@27941>   Dc.l convert_long_to_quick                    ; longtoquick
00035120 <AmiBlitz3.ab3@27942>   Dc.l convert_long_to_float                    ; longtofloat
00035124 <AmiBlitz3.ab3@27943>   Dc.l 0                                        ; longtolong
00035128 <AmiBlitz3.ab3@27944>   Dc.l error_convert_types                      ; noconerr
0003512C <AmiBlitz3.ab3@27947>   Dc.l error_convert_types                      ; noconerr
00035130 <AmiBlitz3.ab3@27948>   Dc.l error_convert_types                      ; noconerr
00035134 <AmiBlitz3.ab3@27949>   Dc.l string_to_long                           ; stringtolong
00035138 <AmiBlitz3.ab3@27950>   Dc.l error_convert_types                      ; noconerr
0003513C <AmiBlitz3.ab3@27951>   Dc.l error_convert_types                      ; noconerr
00035140 <AmiBlitz3.ab3@27952>   Dc.l string_to_long                           ; stringtolong
00035144 <AmiBlitz3.ab3@27953>   Ds.l 1
00035146 <AmiBlitz3.ab3@27959>   Dc.b $00,$2B                                  ;+ ; add
0003514A <AmiBlitz3.ab3@27960>   Dc.l do_plus_byte                             ;doplusb
0003514E <AmiBlitz3.ab3@27961>   Dc.l do_plus_word                             ;doplusw
00035152 <AmiBlitz3.ab3@27962>   Dc.l do_plus_long                             ;doplusl
00035156 <AmiBlitz3.ab3@27963>   Dc.l do_plus_long                             ;doplusl
0003515A <AmiBlitz3.ab3@27964>   Dc.l do_plus_float                            ;doplusf
0003515E <AmiBlitz3.ab3@27965>   Ds.l 1
00035162 <AmiBlitz3.ab3@27966>   Dc.l add_strings                              ;addstrings
00035164 <AmiBlitz3.ab3@27967>   Dc.b $0B,$B8
00035166 <AmiBlitz3.ab3@27969>   Dc.b $00,$2D                                  ;- ; sub
0003516A <AmiBlitz3.ab3@27970>   Dc.l do_minus_byte                            ;dominusb
0003516E <AmiBlitz3.ab3@27971>   Dc.l do_minus_word                            ;dominusw
00035172 <AmiBlitz3.ab3@27972>   Dc.l do_minus_long                            ;dominusl
00035176 <AmiBlitz3.ab3@27973>   Dc.l do_minus_long                            ;dominusl
0003517A <AmiBlitz3.ab3@27974>   Dc.l do_minus_float                           ;dominusf
00035182 <AmiBlitz3.ab3@27975>   Ds.l 2
00035184 <AmiBlitz3.ab3@27976>   Dc.b $0B,$B8
00035186 <AmiBlitz3.ab3@27978>   Dc.b $00,$2A                                  ;* ; mul
0003518A <AmiBlitz3.ab3@27979>   Dc.l do_times_byte                            ;dotimesb
0003518E <AmiBlitz3.ab3@27980>   Dc.l do_times_word                            ;dotimesw
00035192 <AmiBlitz3.ab3@27981>   Dc.l do_times_long                            ;dotimesl
00035196 <AmiBlitz3.ab3@27982>   Dc.l do_times_quick                           ;dotimesq
0003519A <AmiBlitz3.ab3@27983>   Dc.l do_times_float                           ;dotimesf
000351A2 <AmiBlitz3.ab3@27984>   Ds.l 2
000351A4 <AmiBlitz3.ab3@27985>   Dc.b $0F,$A0
000351A6 <AmiBlitz3.ab3@27987>   Dc.b $00,$2F                                  ;/ ; div
000351AA <AmiBlitz3.ab3@27988>   Dc.l do_Div_byte                              ;dodivb
000351AE <AmiBlitz3.ab3@27989>   Dc.l do_Div_word                              ;dodivb
000351B2 <AmiBlitz3.ab3@27990>   Dc.l do_Div_long                              ;dodivl
000351B6 <AmiBlitz3.ab3@27991>   Dc.l do_Div_quick                             ;dodivq
000351BA <AmiBlitz3.ab3@27992>   Dc.l do_Div_float                             ;dodivf
000351C2 <AmiBlitz3.ab3@27993>   Ds.l 2
000351C4 <AmiBlitz3.ab3@27994>   Dc.b $0F,$A0
000351C6 <AmiBlitz3.ab3@27996>   Dc.b $00,$26                                  ;& ; & int
000351CA <AmiBlitz3.ab3@27997>   Dc.l do_AND_byte                              ;doandb
000351CE <AmiBlitz3.ab3@27998>   Dc.l do_AND_word                              ;doandw
000351D2 <AmiBlitz3.ab3@27999>   Dc.l do_AND_long                              ;doandl
000351D6 <AmiBlitz3.ab3@28000>   Dc.l do_AND_long                              ;doandl
000351E2 <AmiBlitz3.ab3@28001>   Ds.l 3
000351E4 <AmiBlitz3.ab3@28002>   Dc.b $13,$88
000351E6 <AmiBlitz3.ab3@28004>   Dc.b $00,$7C                                  ;| ;or int ;
000351EA <AmiBlitz3.ab3@28005>   Dc.l do_OR_byte                               ;doorb
000351EE <AmiBlitz3.ab3@28006>   Dc.l do_OR_word                               ;doorw
000351F2 <AmiBlitz3.ab3@28007>   Dc.l do_OR_long                               ;doorl
000351F6 <AmiBlitz3.ab3@28008>   Dc.l do_OR_long                               ;doorl
00035202 <AmiBlitz3.ab3@28009>   Ds.l 3
00035204 <AmiBlitz3.ab3@28010>   Dc.b $13,$88
00035206 <AmiBlitz3.ab3@28012>   Dc.b $80,$42                                  ; AND int  ;(opand-opabcd)/$1c+$8000+fnum
0003520A <AmiBlitz3.ab3@28013>   Dc.l do_AND_byte                              ;doandb
0003520E <AmiBlitz3.ab3@28014>   Dc.l do_AND_word                              ;doandw
00035212 <AmiBlitz3.ab3@28015>   Dc.l do_AND_long                              ;doandl
00035216 <AmiBlitz3.ab3@28016>   Dc.l do_AND_long                              ;doandl
00035222 <AmiBlitz3.ab3@28017>   Ds.l 3
00035224 <AmiBlitz3.ab3@28018>   Dc.b $03,$E8
00035226 <AmiBlitz3.ab3@28020>   Dc.b $80,$8A                                  ; OR int   ;(opor-opabcd)/$1c+$8000+fnum
0003522A <AmiBlitz3.ab3@28021>   Dc.l do_OR_byte                               ;doorb
0003522E <AmiBlitz3.ab3@28022>   Dc.l do_OR_word                               ;doorw
00035232 <AmiBlitz3.ab3@28023>   Dc.l do_OR_long                               ;doorl
00035236 <AmiBlitz3.ab3@28024>   Dc.l do_OR_long                               ;doorl
00035242 <AmiBlitz3.ab3@28025>   Ds.l 3
00035244 <AmiBlitz3.ab3@28026>   Dc.b $03,$E8
00035246 <AmiBlitz3.ab3@28028>   Dc.b $80,$73                                  ; EOR int  ;(opeor-opabcd)/$1c+$8000+fnum
0003524A <AmiBlitz3.ab3@28029>   Dc.l do_EOR_byte                              ;doeorb
0003524E <AmiBlitz3.ab3@28030>   Dc.l do_EOR_word                              ;doeorw
00035252 <AmiBlitz3.ab3@28031>   Dc.l do_EOR_long                              ;doeorl
00035256 <AmiBlitz3.ab3@28032>   Dc.l do_EOR_long                              ;doeorl
00035262 <AmiBlitz3.ab3@28033>   Ds.l 3
00035264 <AmiBlitz3.ab3@28034>   Dc.b $03,$E8
00035266 <AmiBlitz3.ab3@28036>   Dc.b $80,$7C                                  ; LSL int  ;(oplsl-opabcd)/$1c+$8000+fnum
0003526A <AmiBlitz3.ab3@28037>   Dc.l do_LSL                                   ;dolslb
0003526E <AmiBlitz3.ab3@28038>   Dc.l do_LSL                                   ;dolslw
00035272 <AmiBlitz3.ab3@28039>   Dc.l do_LSL                                   ;dolsll
00035276 <AmiBlitz3.ab3@28040>   Dc.l do_LSL                                   ;dolsll
00035282 <AmiBlitz3.ab3@28041>   Ds.l 3
00035284 <AmiBlitz3.ab3@28042>   Dc.b $17,$70
00035286 <AmiBlitz3.ab3@28044>   Dc.b $80,$44                                  ; ASL int  ;(opasl-opabcd)/$1c+$8000+fnum
0003528A <AmiBlitz3.ab3@28045>   Dc.l do_LSL                                   ;dolslb
0003528E <AmiBlitz3.ab3@28046>   Dc.l do_LSL                                   ;dolslw
00035292 <AmiBlitz3.ab3@28047>   Dc.l do_LSL                                   ;dolsll
00035296 <AmiBlitz3.ab3@28048>   Dc.l do_LSL                                   ;dolsll
000352A2 <AmiBlitz3.ab3@28049>   Ds.l 3
000352A4 <AmiBlitz3.ab3@28050>   Dc.b $17,$70
000352A6 <AmiBlitz3.ab3@28052>   Dc.b $80,$7D                                  ; LSR int  ;(oplsr-opabcd)/$1c+$8000+fnum
000352AA <AmiBlitz3.ab3@28053>   Dc.l do_LSR                                   ;dolsrb
000352AE <AmiBlitz3.ab3@28054>   Dc.l do_LSR                                   ;dolsrw
000352B2 <AmiBlitz3.ab3@28055>   Dc.l do_LSR                                   ;dolsrl
000352B6 <AmiBlitz3.ab3@28056>   Dc.l do_LSR                                   ;dolsrl
000352C2 <AmiBlitz3.ab3@28057>   Ds.l 3
000352C4 <AmiBlitz3.ab3@28058>   Dc.b $17,$70
000352C6 <AmiBlitz3.ab3@28060>   Dc.b $80,$45                                  ; ASR int  ;(opasr-opabcd)/$1c+$8000+fnum
000352CA <AmiBlitz3.ab3@28061>   Dc.l do_ASR                                   ;doasrb
000352CE <AmiBlitz3.ab3@28062>   Dc.l do_ASR                                   ;doasrw
000352D2 <AmiBlitz3.ab3@28063>   Dc.l do_ASR                                   ;doasrl
000352D6 <AmiBlitz3.ab3@28064>   Dc.l do_ASR                                   ;doasrl
000352E2 <AmiBlitz3.ab3@28065>   Ds.l 3
000352E4 <AmiBlitz3.ab3@28066>   Dc.b $17,$70
000352E6 <AmiBlitz3.ab3@28068>   Dc.b $80,$B9                                  ;mod       ;$8006+tnum
000352EA <AmiBlitz3.ab3@28069>   Dc.l do_mod_byte                              ;domodb
000352EE <AmiBlitz3.ab3@28070>   Dc.l do_mod_word                              ;domodw
000352F2 <AmiBlitz3.ab3@28071>   Dc.l do_mod_long                              ;domodl
000352F6 <AmiBlitz3.ab3@28072>   Dc.l do_mod_quick                             ;domodq
000352FA <AmiBlitz3.ab3@28073>   Dc.l do_mod_float                             ;domodf
00035302 <AmiBlitz3.ab3@28074>   Ds.l 2
00035304 <AmiBlitz3.ab3@28075>   Dc.b $13,$88
00035306 <AmiBlitz3.ab3@28078>   Dc.b $00,$5E                                  ;^
0003530A <AmiBlitz3.ab3@28079>   Dc.l do_pow                                   ;dopow
0003530E <AmiBlitz3.ab3@28080>   Dc.l do_pow                                   ;dopow
00035312 <AmiBlitz3.ab3@28081>   Dc.l do_pow                                   ;dopow
00035316 <AmiBlitz3.ab3@28082>   Dc.l do_pow                                   ;dopow
0003531A <AmiBlitz3.ab3@28083>   Dc.l do_pow                                   ;dopow
00035322 <AmiBlitz3.ab3@28084>   Ds.l 2
00035324 <AmiBlitz3.ab3@28085>   Dc.b $1B,$58                                  ;7000
00035326 <AmiBlitz3.ab3@28088>   Dc.b $00,$3D                                  ;=
0003532A <AmiBlitz3.ab3@28089>   Dc.l do_equal_byte                            ;doeqb
0003532E <AmiBlitz3.ab3@28090>   Dc.l do_equal_word                            ;doeqw
00035332 <AmiBlitz3.ab3@28091>   Dc.l do_equal_long                            ;doeql
00035336 <AmiBlitz3.ab3@28092>   Dc.l do_equal_long                            ;doeql
0003533A <AmiBlitz3.ab3@28093>   Dc.l do_equal_float                           ;doeqf
0003533E <AmiBlitz3.ab3@28094>   Dc.l do_equal_long                            ;doeql
00035342 <AmiBlitz3.ab3@28095>   Dc.l do_equal_string                          ;doeqs
00035344 <AmiBlitz3.ab3@28096>   Dc.b $07,$D0                                  ;2000
00035346 <AmiBlitz3.ab3@28099>   Dc.b $3C,$3E                                  ;<>
0003534A <AmiBlitz3.ab3@28100>   Dc.l do_not_equal_byte                        ;doneb
0003534E <AmiBlitz3.ab3@28101>   Dc.l do_not_equal_word                        ;donew
00035352 <AmiBlitz3.ab3@28102>   Dc.l do_not_equal_long                        ;donel
00035356 <AmiBlitz3.ab3@28103>   Dc.l do_not_equal_long                        ;donel
0003535A <AmiBlitz3.ab3@28104>   Dc.l do_not_equal_float                       ;donef
0003535E <AmiBlitz3.ab3@28105>   Dc.l do_not_equal_long                        ;donel
00035362 <AmiBlitz3.ab3@28106>   Dc.l do_not_equal_string                      ;dones
00035364 <AmiBlitz3.ab3@28107>   Dc.b $07,$D0                                  ;2000
00035366 <AmiBlitz3.ab3@28110>   Dc.b $00,$3C                                  ;<
0003536A <AmiBlitz3.ab3@28111>   Dc.l do_littler_byte                          ;doltb
0003536E <AmiBlitz3.ab3@28112>   Dc.l do_littler_word                          ;doltw
00035372 <AmiBlitz3.ab3@28113>   Dc.l do_littler_long                          ;doltl
00035376 <AmiBlitz3.ab3@28114>   Dc.l do_littler_long                          ;doltl
0003537A <AmiBlitz3.ab3@28115>   Dc.l do_littler_float                         ;doltf
0003537E <AmiBlitz3.ab3@28116>   Dc.l do_littler_long                          ;doltl
00035382 <AmiBlitz3.ab3@28117>   Dc.l do_littler_string                        ;dolts
00035384 <AmiBlitz3.ab3@28118>   Dc.b $07,$D0                                  ;2000
00035386 <AmiBlitz3.ab3@28121>   Dc.b $3C,$3D                                  ;<=
0003538A <AmiBlitz3.ab3@28122>   Dc.l do_littler_equal_byte                    ;doleb
0003538E <AmiBlitz3.ab3@28123>   Dc.l do_littler_equal_word                    ;doleb
00035392 <AmiBlitz3.ab3@28124>   Dc.l do_littler_equal_long                    ;dolel
00035396 <AmiBlitz3.ab3@28125>   Dc.l do_littler_equal_long                    ;dolel
0003539A <AmiBlitz3.ab3@28126>   Dc.l do_littler_equal_float                   ;dolef
0003539E <AmiBlitz3.ab3@28127>   Dc.l do_littler_equal_long                    ;dolel
000353A2 <AmiBlitz3.ab3@28128>   Dc.l do_littler_equal_string                  ;doles
000353A4 <AmiBlitz3.ab3@28129>   Dc.b $07,$D0                                  ;2000
000353A6 <AmiBlitz3.ab3@28132>   Dc.b $00,$3E                                  ;>
000353AA <AmiBlitz3.ab3@28133>   Dc.l do_greater_byte                          ;dogtb
000353AE <AmiBlitz3.ab3@28134>   Dc.l do_greater_word                          ;dogtw
000353B2 <AmiBlitz3.ab3@28135>   Dc.l do_greater_long                          ;dogtl
000353B6 <AmiBlitz3.ab3@28136>   Dc.l do_greater_long                          ;dogtl
000353BA <AmiBlitz3.ab3@28137>   Dc.l do_greater_float                         ;dogtf
000353BE <AmiBlitz3.ab3@28138>   Dc.l do_greater_long                          ;dogtl
000353C2 <AmiBlitz3.ab3@28139>   Dc.l do_greater_string                        ;dogts
000353C4 <AmiBlitz3.ab3@28140>   Dc.b $07,$D0                                  ;2000
000353C6 <AmiBlitz3.ab3@28143>   Dc.b $3E,$3D                                  ;>=
000353CA <AmiBlitz3.ab3@28144>   Dc.l do_greater_equal_byte                    ;dogeb
000353CE <AmiBlitz3.ab3@28145>   Dc.l do_greater_equal_word                    ;dogew
000353D2 <AmiBlitz3.ab3@28146>   Dc.l do_greater_equal_long                    ;dogel
000353D6 <AmiBlitz3.ab3@28147>   Dc.l do_greater_equal_long                    ;dogel
000353DA <AmiBlitz3.ab3@28148>   Dc.l do_greater_equal_float                   ;dogef
000353DE <AmiBlitz3.ab3@28149>   Dc.l do_greater_equal_long                    ;dogel
000353E2 <AmiBlitz3.ab3@28150>   Dc.l do_greater_equal_string                  ;doges
000353E4 <AmiBlitz3.ab3@28151>   Dc.b $07,$D0                                  ;2000
000353E6 <AmiBlitz3.ab3@28153>   Dc.b $80,$CD                                  ;$8000+26+tnum
000353EA <AmiBlitz3.ab3@28154>   Dc.l _BitTst
000353EE <AmiBlitz3.ab3@28155>   Dc.l _BitTst
000353F2 <AmiBlitz3.ab3@28156>   Dc.l _BitTst
000353F6 <AmiBlitz3.ab3@28157>   Dc.l _BitTst
00035402 <AmiBlitz3.ab3@28158>   Ds.l 3
00035404 <AmiBlitz3.ab3@28159>   Dc.b $1F,$40                                  ;8000
00035406 <AmiBlitz3.ab3@28161>   Dc.b $80,$CE                                  ;$8000+27+tnum
0003540A <AmiBlitz3.ab3@28162>   Dc.l _BitSet
0003540E <AmiBlitz3.ab3@28163>   Dc.l _BitSet
00035412 <AmiBlitz3.ab3@28164>   Dc.l _BitSet
00035416 <AmiBlitz3.ab3@28165>   Dc.l _BitSet
00035422 <AmiBlitz3.ab3@28166>   Ds.l 3
00035424 <AmiBlitz3.ab3@28167>   Dc.b $1F,$40                                  ;8000
00035426 <AmiBlitz3.ab3@28169>   Dc.b $80,$CF                                  ;$8000+28+tnum
0003542A <AmiBlitz3.ab3@28170>   Dc.l _BitClr
0003542E <AmiBlitz3.ab3@28171>   Dc.l _BitClr
00035432 <AmiBlitz3.ab3@28172>   Dc.l _BitClr
00035436 <AmiBlitz3.ab3@28173>   Dc.l _BitClr
00035442 <AmiBlitz3.ab3@28174>   Ds.l 3
00035444 <AmiBlitz3.ab3@28175>   Dc.b $1F,$40                                  ;8000
00035446 <AmiBlitz3.ab3@28177>   Dc.b $80,$D0                                  ;$8000+29+tnum
0003544A <AmiBlitz3.ab3@28178>   Dc.l _BitChg
0003544E <AmiBlitz3.ab3@28179>   Dc.l _BitChg
00035452 <AmiBlitz3.ab3@28180>   Dc.l _BitChg
00035456 <AmiBlitz3.ab3@28181>   Dc.l _BitChg
00035462 <AmiBlitz3.ab3@28182>   Ds.l 3
00035464 <AmiBlitz3.ab3@28183>   Dc.b $1F,$40                                  ;8000
00035466 <AmiBlitz3.ab3@28185>   Dc.b $00,$00
0003546A <AmiBlitz3.ab3@28190> modetable:   Dc.l typemode
0003546E <AmiBlitz3.ab3@28193> newtypebase: Dc.l newtype_byte
00035476 <AmiBlitz3.ab3@28196>   Dc.l newtype_word,$01                                    
00035478 <AmiBlitz3.ab3@28197>   Dc.w $0001
0003547C <AmiBlitz3.ab3@28198>   Dc.b 13,"b",0,0
00035484 <AmiBlitz3.ab3@28201>   Dc.l newtype_long,$02
00035486 <AmiBlitz3.ab3@28202>   Dc.w $0002
0003548A <AmiBlitz3.ab3@28203>   Dc.b 13,"w",0,0
00035492 <AmiBlitz3.ab3@28206>   Dc.l newtype_quick,$03                                   
00035494 <AmiBlitz3.ab3@28207>   Dc.w $0004
00035498 <AmiBlitz3.ab3@28208>   Dc.b 13,"l",0,0
000354A0 <AmiBlitz3.ab3@28211>   Dc.l newtype_float,$04                                   
000354A2 <AmiBlitz3.ab3@28212>   Dc.w $0004
000354A6 <AmiBlitz3.ab3@28213>   Dc.b 13,"q",0,0
000354AE <AmiBlitz3.ab3@28217>   Dc.l newtype_double,$05                                  ;make problems on old residents
000354B0 <AmiBlitz3.ab3@28218>   Dc.w $0004
000354B4 <AmiBlitz3.ab3@28219>   Dc.b 13,"f",0,0
000354BC <AmiBlitz3.ab3@28222>   Dc.l newtype_double,$06
000354BE <AmiBlitz3.ab3@28223>   Dc.w $0004
000354C2 <AmiBlitz3.ab3@28224>   Dc.b 13,"a",0,0
000354CA <AmiBlitz3.ab3@28227>   Dc.l newtype_string,$05                                  ;?? has to by $06 becous is number 6 not 5
000354CC <AmiBlitz3.ab3@28228>   Dc.w $0008
000354D0 <AmiBlitz3.ab3@28229>   Dc.b 13,"d",0,0
000354D8 <AmiBlitz3.ab3@28233>   Dc.l $0000000,$07                                        ;stringtype
000354DA <AmiBlitz3.ab3@28234>   Dc.w $0004
000354DE <AmiBlitz3.ab3@28235>   Dc.b 13,"s",0,0
000354E6 <AmiBlitz3.ab3@28238>   Dc.l $00,$00
000354E8 <AmiBlitz3.ab3@28239>   Dc.w $0000
000354EC <AmiBlitz3.ab3@28240>   Dc.b $01,$00,$00,$00
0003554C <AmiBlitz3.ab3@28243> incdir:               Ds.l 24                              ;dcb.b   96,0    org source
0003554E <AmiBlitz3.ab3@28247> dirmode:              Ds.w 1                               ;shows if directmode is on
00035552 <AmiBlitz3.ab3@28249>                       Ds.l 1                               ;int org source ;intuition!
00035554 <AmiBlitz3.ab3@28250> maxobject_pos:        Ds.w 1                               ;maxat org source ;max at
00035558 <AmiBlitz3.ab3@28251> maxsat:               Ds.l 1                               ;data1 info pos
0003555A <AmiBlitz3.ab3@28252> number_of_objects:    Ds.w 1                               ;nummaxs org source ;number of maximums
0003555C <AmiBlitz3.ab3@28254> maxsused:             Ds.w 1                               ;maximums used in prog
0003555E <AmiBlitz3.ab3@28258> dark:                 Ds.w 1                               ;dark compile?
00035560 <AmiBlitz3.ab3@28259> qlab:                 Ds.w 1                               ;quick lab allocate
00035564 <AmiBlitz3.ab3@28260> defaulttype:          Dc.l newtype_quick                   ;dc.l quicktype org source
00035566 <AmiBlitz3.ab3@28265> anyerrs:              Dc.w -1                              ;Any Errors in compile ?
00035568 <AmiBlitz3.ab3@28266> debugversion:         Ds.w 1                               ;makeexec org source ;make an executable file!
0003556C <AmiBlitz3.ab3@28267> noinits:              Ds.l 1                               ;flag for if we have any init routines!
00035570 <AmiBlitz3.ab3@28269> letstart:             Ds.l 1
00035572 <AmiBlitz3.ab3@28270> dontwrite_nomemleft:  Ds.w 1                               ;nomemleft org source
000355F2 <AmiBlitz3.ab3@28271> lastgloballabel:      Ds.l 32                              ;lastbiglab ds.b 128 org source
000355F6 <AmiBlitz3.ab3@28273> locdatast:            Ds.l 1
000355FA <AmiBlitz3.ab3@28274> firstpend:            Ds.l 1
000355FE <AmiBlitz3.ab3@28278> data2at:              Ds.l 1
00035602 <AmiBlitz3.ab3@28279> data2:                Ds.l 1
00035606 <AmiBlitz3.ab3@28280> data1start:           Ds.l 1                               ;data1at org source
0003560A <AmiBlitz3.ab3@28281> data1:                Ds.l 1                               ;pc for initialized data!
0003560E <AmiBlitz3.ab3@28282> destbufferstart:      Ds.l 1                               ;pcat org source
00035612 <AmiBlitz3.ab3@28286> destbufferend:        Ds.l 1                               ;libat org source
00035616 <AmiBlitz3.ab3@28287> libend:               Ds.l 1                               ;lib org source
0003561A <AmiBlitz3.ab3@28288> allat:                Ds.l 1                               ;highest allocmemd location for code
00035624 <AmiBlitz3.ab3@28289> dummyasm:             Dc.w 0,0,0,0,0
00035628 <AmiBlitz3.ab3@28290>                       Dc.l 0
0003562A <AmiBlitz3.ab3@28291>                       Dc.w 0
0003562E <AmiBlitz3.ab3@28295> buff1:                Ds.l 1                               ;buffer for text get
00035632 <AmiBlitz3.ab3@28296> buff2:                Ds.l 1                               ;ditto for dest
00035634 <AmiBlitz3.ab3@28297> constmode:            Ds.w 1                               ;0 for norm, <>0 for assembler
00035636 <AmiBlitz3.ab3@28298> asmtype:              Ds.w 1                               ;0=contains no prog reference
00035638 <AmiBlitz3.ab3@28299> extraword:            Ds.w 1                               ;the extension word for assembler
0003563A <AmiBlitz3.ab3@28300> extraword2:           Ds.w 1                               ;ditto
0003563C <AmiBlitz3.ab3@28301> asmsize:              Ds.w 1
00035640 <AmiBlitz3.ab3@28302> asmbuff:              Ds.l 1
00035642 <AmiBlitz3.ab3@28303> asmlen:               Ds.w 1                               ;first (src) text len
00035644 <AmiBlitz3.ab3@28304> asmlen2:              Ds.w 1                               ;second (dest)
00035648 <AmiBlitz3.ab3@28305> templabel:            Ds.l 1                               ;linked list of expressions to resolve
0003564A <AmiBlitz3.ab3@28308> macnum:               Ds.w 1
0003564E <AmiBlitz3.ab3@28310>                       Dc.l 0                               ;address of next 0 in include fil
00035652 <AmiBlitz3.ab3@28311> titleat:              Ds.l 1                               ;5 longs for compile streaks
0003565C <AmiBlitz3.ab3@28312> progress_per_line:    Ds.w 5                               ;titleadd ds 5 org source ;5 adds for compile streaks
0003565E <AmiBlitz3.ab3@28313> connest:              Ds.w 1                               ;conditional nest level
00035662 <AmiBlitz3.ab3@28314> firstconst:           Ds.l 1                               ;first constant (#a)
00035664 <AmiBlitz3.ab3@28315> numarg:               Ds.w 1                               ;number of macro arguements
00035668 <AmiBlitz3.ab3@28316> myoline:              Ds.l 1                               ;macro done yet?
0003566C <AmiBlitz3.ab3@28317> myline:               Ds.l 1                               ;pointer to some memory to create
00035670 <AmiBlitz3.ab3@28320>                       Ds.l 1
000356B0 <AmiBlitz3.ab3@28321> concomstack:          Ds.l 16                              ;32 deep conditional compilation
000356B4 <AmiBlitz3.ab3@28322> concomsp:             Dc.l concomstack                     ;stack pointer
000356B6 <AmiBlitz3.ab3@28323> oldqflag:             Ds.w 1
000356BA <AmiBlitz3.ab3@28326>                       Ds.l 1
000356BC <AmiBlitz3.ab3@28328>                       Ds.w 1
000356C0 <AmiBlitz3.ab3@28329> firstfor:             Ds.l 1                               ;first for
000356C2 <AmiBlitz3.ab3@28330> stackpar:             Ds.w 1                               ;pushflag org source ;1 par to stack 0 normal
000356C4 <AmiBlitz3.ab3@28331> sbgot:                Ds.w 1                               ;flag for string got 2
000356C6 <AmiBlitz3.ab3@28332> convsize:             Ds.w 1                               ;usertype org source
000356C8 <AmiBlitz3.ab3@28333> userp:                Ds.w 1
000356CC <AmiBlitz3.ab3@28338> ptr_userlibs_list:    Ds.l 1                               ;libslist org source
000356CE <AmiBlitz3.ab3@28339> a2offset:             Ds.w 1                               ;stackuse org source ;stack used when gathering lib parameters
000356D0 <AmiBlitz3.ab3@28340> numreps:              Ds.w 1                               ;number of repeats in a repeatable
000356D4 <AmiBlitz3.ab3@28342> locloc:               Ds.l 1
000356D6 <AmiBlitz3.ab3@28343> locchar:              Ds.w 1
00035756 <AmiBlitz3.ab3@28344> stbuff:               Ds.l 32                              ;was 8    ;six string varoffs
00035758 <AmiBlitz3.ab3@28345> commode:              Ds.w 1                               ;in comma mode...
0003575C <AmiBlitz3.ab3@28346> lastoffset_org:       Ds.l 1                               ;lastoffset org source ;last offset in calcvar!
00035760 <AmiBlitz3.ab3@28347> linenumat:            Dc.l $FFFFFFFF                       ;linecounter ;dc -1 org source ;line being processed
00035764 <AmiBlitz3.ab3@28348> compilelinecounter:   Dc.l $FFFFFFFF                       ;menuret dc -1 org source ;menu return code
00035766 <AmiBlitz3.ab3@28350>                       Ds.w 1                               ;opt reset offset
00035866 <AmiBlitz3.ab3@28352>                       Ds.l 64                              ;Ds.b vcodelen org source ;code used to generate
00035966 <AmiBlitz3.ab3@28354>                       Ds.l 64                              ;Ds.b vcodelen org source ;above for let.....
00035968 <AmiBlitz3.ab3@28355> varcodelen:           Ds.w 1                               ;and length
0003596A <AmiBlitz3.ab3@28357>                       Ds.w 1
00035970 <AmiBlitz3.ab3@28358> oldvcodelen:          Ds.w 3                               ;old varcodelen
00035974 <AmiBlitz3.ab3@28362> tempvm:               Ds.l 1                               ;memlib org source ;address of memory library
00035976 <AmiBlitz3.ab3@28363> memlibstat:           Ds.w 1                               ;status of memory library during
00035978 <AmiBlitz3.ab3@28366>                       Dc.w 0
0003597A <AmiBlitz3.ab3@28368>                       Dc.w 0
0003597C <AmiBlitz3.ab3@28370> varmode:              Ds.w 1                               ;0 a5 pointer to global
00035980 <AmiBlitz3.ab3@28372> currentfunction:      Ds.l 1                               ;thisproc org source
00035984 <AmiBlitz3.ab3@28373> firstproc:            Ds.l 1                               ;firstproc org source ;this procedure being 'done'
00035986 <AmiBlitz3.ab3@28374> 
00035988 <AmiBlitz3.ab3@28376> skipcode:             Ds.w 1                               ;nocompile ;comflag org source ;0 if no compile
0003598C <AmiBlitz3.ab3@28377> passstack:            Ds.l 1
00035990 <AmiBlitz3.ab3@28378> zero:                 Ds.l 1                               ;ZERO!
00035992 <AmiBlitz3.ab3@28379> ininclude:            Ds.w 1                               ;numincs org source ;number of include files
00035996 <AmiBlitz3.ab3@28381> xinclude_base:        Ds.l 1                               ;firstxinc org source ;first exclusive include.
0003599A <AmiBlitz3.ab3@28382> constantbase:         Ds.l 1                               ;firstinc org source ;first include
0003599C <AmiBlitz3.ab3@28383> lasta6:               Dc.w $FFFF                           ;-1 org source
0003599E <AmiBlitz3.ab3@28384> instringon:           Ds.w 1                               ;quoteflag org source
000359A2 <AmiBlitz3.ab3@28385> ptr_macrobuffer_begin:Ds.l 1                               ;macrobuff org source ;pointer to macro collection buffer ;begin
000359A6 <AmiBlitz3.ab3@28386> ptr_macrobuffer_end:  Ds.l 1                               ;macrobufff org source ;end of above ;end of
000359AA <AmiBlitz3.ab3@28387> macrobase:            Ds.l 1                               ;firstmacro org source ;linked list of macro's ;macrolist
000359AE <AmiBlitz3.ab3@28388> endop:                Ds.l 1                               ;end of program pc - before finishups!
000359B2 <AmiBlitz3.ab3@28389> labelbase:            Ds.l 1                               ;firstlabel org source ;first lib struct
000359B6 <AmiBlitz3.ab3@28390> end_of_tokenlist:     Ds.l 1                               ;lasttoken org source
000359B8 <AmiBlitz3.ab3@28391> numstatic:            Ds.w 1                               ;number of static structs
000359BC <AmiBlitz3.ab3@28392> staticdata:           Ds.l 1                               ;data1 val for statics
000359C0 <AmiBlitz3.ab3@28393> libpointer:           Ds.l 1                               ;firstlib org source ;first lib struct
000359C2 <AmiBlitz3.ab3@28394> sbasegot:             Ds.w 1                               ;string base got?
000359C6 <AmiBlitz3.ab3@28395> litdata1:             Ds.l 1
000359CA <AmiBlitz3.ab3@28399> objlen:               Ds.l 1
000359CE <AmiBlitz3.ab3@28400> hunkoffsetcounter:    Ds.l 1                               ;numoffs org source
000359D2 <AmiBlitz3.ab3@28401> hunkoffsetbase:       Ds.l 1                               ;firstoff org source ;pointer to linked list
000359D4 <AmiBlitz3.ab3@28403> flagmask:             Ds.w 1                               ;mask for flag of variable when
000359D6 <AmiBlitz3.ab3@28405> notshared:            Ds.w 1                               ;added org source ;flag for seeing if variable was added!
000359D8 <AmiBlitz3.ab3@28406> nonew:                Ds.w 1                               ;1 to inhibit new variable creation
000359DC <AmiBlitz3.ab3@28407> temp1:                Ds.l 1
000359E0 <AmiBlitz3.ab3@28408> temp2:                Ds.l 1
000359E4 <AmiBlitz3.ab3@28410> ptr_parameterstore:   Ds.l 1                               ;namebuff ds.b 128 org source
000359E8 <AmiBlitz3.ab3@28411> fib_DirEntryType:     Ds.l 1                               ;namebuff+4 org source
00035A5C <AmiBlitz3.ab3@28412> fib_FileName:         Ds.l 29                              ;namebuff+8 org source
00035A60 <AmiBlitz3.ab3@28413> fib_Size:             Ds.l 1                               ;namebuff+124 org source
00035AE0 <AmiBlitz3.ab3@28415> namebuff2:            Ds.b 128
00035AE8 <AmiBlitz3.ab3@28416>                       Ds.b 8                               ;for fileinfoblock
00035B28 <AmiBlitz3.ab3@28419> optstuff:             Ds.b 64                              ;temp opt make buffer
00035B2A <AmiBlitz3.ab3@28436>   Dc.b $00,$01                                             ; 1 byte schreiben ;one byte stuff...
00035B2E <AmiBlitz3.ab3@28437>   Dc.l xtra_versionnumber                                  ; vers org source
00035B32 <AmiBlitz3.ab3@28438>   Dc.l create_iconfile                                     ; create icon for executable
00035B36 <AmiBlitz3.ab3@28439>   Ds.l 1
00035B38 <AmiBlitz3.ab3@28441>   Dc.b $00,$02                                             ; 2 bytes schreiben  ;two byte stuff...
00035B3C <AmiBlitz3.ab3@28444>   Dc.l set_use_debugger
00035B40 <AmiBlitz3.ab3@28445>   Dc.l AL_0_11010                                          ;+obsolet: debugger
00035B44 <AmiBlitz3.ab3@28446>   Dc.l AL_0_1103C                                          ;+obsolet: long arrays
00035B48 <AmiBlitz3.ab3@28447>   Dc.l AL_0_11068                                          ;+obsolet: expand macros
00035B4C <AmiBlitz3.ab3@28448>   Dc.l AL_0_11094                                          ;+obsolet: quoted macros
00035B50 <AmiBlitz3.ab3@28449>   Dc.l set_make_smallestcode
00035B54 <AmiBlitz3.ab3@28450>   Dc.l set_link_debuginfo
00035B58 <AmiBlitz3.ab3@28451>   Dc.l set_autorun
00035B5C <AmiBlitz3.ab3@28452>   Dc.l set_interruptcheck
00035B60 <AmiBlitz3.ab3@28453>   Dc.l set_assemblercheck
00035B64 <AmiBlitz3.ab3@28455>   Dc.l set_overflowcheck
00035B68 <AmiBlitz3.ab3@28456>   Dc.l default_obsolete                                    ;+obsolet: ohne inhalt
00035B6C <AmiBlitz3.ab3@28457>   Dc.l default_interruptcheck                              ;+obsolet: interruptcheck vorgabe
00035B70 <AmiBlitz3.ab3@28458>   Dc.l default_overflowcheck                               ;+obsolet: overflow vorgabe
00035B74 <AmiBlitz3.ab3@28461>   Ds.l 1
00035B76 <AmiBlitz3.ab3@28463>   Dc.b $00,$04                                             ; 4 bytes schreiben..  ;four byte stuff...
00035B7A <AmiBlitz3.ab3@28470>   Dc.l objectbuffer
00035B7E <AmiBlitz3.ab3@28471>   Dc.l libsbuffer
00035B82 <AmiBlitz3.ab3@28472>   Dc.l systembuffer
00035B86 <AmiBlitz3.ab3@28473>   Dc.l databuffer
00035B8A <AmiBlitz3.ab3@28474>   Dc.l macrobuffer_size
00035B8E <AmiBlitz3.ab3@28475>   Dc.l stringbuffer
00035B92 <AmiBlitz3.ab3@28478>   Ds.l 1
00035B94 <AmiBlitz3.ab3@28482>   Dc.b $02,$20                                             ;dc 68*8; 544 bytes schreiben.
00035B9C <AmiBlitz3.ab3@28483>   Dc.l residents_table,0
00035B9E <AmiBlitz3.ab3@28487>   Dc.b $01,$80                                             ;dc 192*2; 384 bytes schreiben
00035BA6 <AmiBlitz3.ab3@28488>   Dc.l exepath,0                                           ; exepath und exefilename jeweils 192 bytes
00035BA8 <AmiBlitz3.ab3@28489>   Ds.w 1
00035CA4 <AmiBlitz3.ab3@28493>   Ds.l 63
00035DA0 <AmiBlitz3.ab3@28494>   Ds.l 63
00035E9C <AmiBlitz3.ab3@28495>   Ds.l 63
00035F7E <AmiBlitz3.ab3@28496>   Ds.w 113
00035F80 <AmiBlitz3.ab3@28499> comsettings_message:  Ds.w 1                               ;allchg org source
00035F82 <AmiBlitz3.ab3@28500> xtra_versionnumber:   Ds.w 1                               ;vers org source
00035F88 <AmiBlitz3.ab3@28504>   CLR.b exefilename
00035F8A <AmiBlitz3.ab3@28505>   TST.l d0
00035F8E <AmiBlitz3.ab3@28506>   BNE 'l10
00035F90 <AmiBlitz3.ab3@28507>  RTS
00035F96 <AmiBlitz3.ab3@28510>   JSR free_residents                                       ;jsr freeres2 org source
00035F9C <AmiBlitz3.ab3@28511> 
00035FA2 <AmiBlitz3.ab3@28512> 
00035FA8 <AmiBlitz3.ab3@28513>   LEA ptr_xtradata,A2
00035FAA <AmiBlitz3.ab3@28514>   MOVEQ.l #$00,D4
00035FAC <AmiBlitz3.ab3@28517>     MOVE.w (A2)+,D4                                        ; anzahl bytes zum lesen
00035FB0 <AmiBlitz3.ab3@28518>     BEQ.b 'done
00035FB2 <AmiBlitz3.ab3@28521>     MOVE.l (A2)+,D2
00035FB6 <AmiBlitz3.ab3@28522>   BEQ.b 'loop
00035FB8 <AmiBlitz3.ab3@28524>   MOVE.l D4,D3
00035FBA <AmiBlitz3.ab3@28525>   MOVE.l D7,D1
00035FBE <AmiBlitz3.ab3@28526>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
00035FC0 <AmiBlitz3.ab3@28527>   TST.l D0
00035FC4 <AmiBlitz3.ab3@28528>   BNE.b 'loop2
00035FC8 <AmiBlitz3.ab3@28529>  BRA.w 'done2
00035FCE <AmiBlitz3.ab3@28532>   TST.b xtra_versionnumber
00035FD2 <AmiBlitz3.ab3@28533>    BNE.b 'nover0
00035FDA <AmiBlitz3.ab3@28534>   MOVE.w #$0080,set_autorun                                ;auto run on
00035FE4 <AmiBlitz3.ab3@28535>   MOVE.w default_interruptcheck,set_interruptcheck         ;interupt checking on
00035FEA <AmiBlitz3.ab3@28536>   CLR.w set_assemblercheck                                 ;assembler checking off
00035FF4 <AmiBlitz3.ab3@28537>   MOVE.w default_overflowcheck,set_overflowcheck           ;overflow chex
00035FF8 <AmiBlitz3.ab3@28538>  BRA.b 'ver0
00035FFA <AmiBlitz3.ab3@28541>   MOVE.l D7,D1                                             ;load cli arg!
00036000 <AmiBlitz3.ab3@28542>   MOVE.l #str_cliarguments,D2
00036006 <AmiBlitz3.ab3@28543>   MOVE.l #116,D3                                           ; vorher 128 , jetzt 8 weniger fuer die Versionsdaten
0003600A <AmiBlitz3.ab3@28544>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
00036010 <AmiBlitz3.ab3@28545>   MOVE.l #str_cliarguments,A0
00036016 <AmiBlitz3.ab3@28546>   ADDA.l #115,A0
0003601C <AmiBlitz3.ab3@28547>   MOVE.l #0,(a0) ; terminate it!
0003601E <AmiBlitz3.ab3@28549>   MOVE.l D7,D1                                             ; I know, I know. Honitos started this horrible thing, see below...
00036024 <AmiBlitz3.ab3@28550>   MOVE.l #stacksize,D2
0003602A <AmiBlitz3.ab3@28551>   MOVE.l #4,D3
0003602E <AmiBlitz3.ab3@28552>   JSR _Read(A6)
00036038 <AmiBlitz3.ab3@28553>   CMP.l ##MIN_STACKSIZE,stacksize
0003603C <AmiBlitz3.ab3@28554>   BGE 'stackok
00036046 <AmiBlitz3.ab3@28555>   MOVE.l ##MIN_STACKSIZE,stacksize
00036048 <AmiBlitz3.ab3@28558>   MOVE.l D7,D1
0003604E <AmiBlitz3.ab3@28559>   MOVE.l #versioninformation,D2
00036054 <AmiBlitz3.ab3@28560>   MOVE.l #4,D3
00036058 <AmiBlitz3.ab3@28561>   JSR _Read(A6)
0003605A <AmiBlitz3.ab3@28563>   MOVE.l D7,D1
00036060 <AmiBlitz3.ab3@28564>   MOVE.l #number_of_builds,D2
00036066 <AmiBlitz3.ab3@28565>   MOVE.l #4,D3
0003606A <AmiBlitz3.ab3@28566>   JSR _Read(A6)
00036070 <AmiBlitz3.ab3@28572> 
00036076 <AmiBlitz3.ab3@28573>   MOVE.l A7,errstack
00036080 <AmiBlitz3.ab3@28574>   MOVE.l #'done2,errcont
00036088 <AmiBlitz3.ab3@28575>   MOVE.w #$FFFF,ezerr
0003608E <AmiBlitz3.ab3@28578>     MOVE.l #temp1,D2                                   ;LOAD maxobjectsvalues
00036090 <AmiBlitz3.ab3@28579>     MOVEQ.l #$04,D3
00036092 <AmiBlitz3.ab3@28580>     MOVE.l D7,D1
00036096 <AmiBlitz3.ab3@28581>     JSR _Read(A6)
00036098 <AmiBlitz3.ab3@28582>     TST.l D0
0003609C <AmiBlitz3.ab3@28583>     BEQ.b 'done2
000360A2 <AmiBlitz3.ab3@28584>     MOVE.w temp1,D1
000360A4 <AmiBlitz3.ab3@28585>     TST.w d1                                               ;new
000360A8 <AmiBlitz3.ab3@28586>     BEQ 'done2                                         ;new
000360AE <AmiBlitz3.ab3@28587>      JSR findlibnoerr
000360B4 <AmiBlitz3.ab3@28589>     CMP.l #0,a1
000360B8 <AmiBlitz3.ab3@28590>     BEQ 'dloop
000360BC <AmiBlitz3.ab3@28591>     MOVE.l $12(A1),D0
000360C4 <AmiBlitz3.ab3@28592>     MOVE.w temp1+2,-$4(A1,D0.L)
000360C8 <AmiBlitz3.ab3@28593>  BRA.b 'dloop
000360CC <AmiBlitz3.ab3@28599>   LEA residents_table(PC),A0
000360CE <AmiBlitz3.ab3@28600>   MOVEQ.l #$07,D0
000360D2 <AmiBlitz3.ab3@28603>     CLR.l $40(A0)
000360D6 <AmiBlitz3.ab3@28604>     LEA ResidentEntryStep(A0),A0   ; $44
000360DA <AmiBlitz3.ab3@28605>   DBF D0,'loop3
000360DE <AmiBlitz3.ab3@28607>   MOVEM.l D7/A6,-(A7)
000360E4 <AmiBlitz3.ab3@28608>   JSR init_buffers
000360EA <AmiBlitz3.ab3@28609>   JSR reloadresident
000360EE <AmiBlitz3.ab3@28610>   MOVEM.l (A7)+,D7/A6
000360F0 <AmiBlitz3.ab3@28611> RTS
000360F8 <AmiBlitz3.ab3@28615>   MOVE.b #$1,xtra_versionnumber                            ;.xtra version number...
000360FE <AmiBlitz3.ab3@28624>   LEA ptr_xtradata,A2
00036100 <AmiBlitz3.ab3@28625>   MOVEQ.l #$00,D4
00036102 <AmiBlitz3.ab3@28629>   MOVE.w (A2)+,D4                                          ; anzahl bytes zu schreiben
00036106 <AmiBlitz3.ab3@28630>   BEQ.b 'done
00036108 <AmiBlitz3.ab3@28633>    MOVE.l (A2)+,D2
0003610C <AmiBlitz3.ab3@28634>    BEQ.b 'loop
0003610E <AmiBlitz3.ab3@28636>    MOVE.l D4,D3
00036110 <AmiBlitz3.ab3@28637>    MOVE.l D7,D1                                            ; schreiben der daten in ptr_xtradata
00036114 <AmiBlitz3.ab3@28638>    JSR _Write(A6)                                          ; d1: file, d2: buffer, d3:length
00036118 <AmiBlitz3.ab3@28639>  BRA.b 'loop2
0003611A <AmiBlitz3.ab3@28642>   MOVE.l D7,D1
00036120 <AmiBlitz3.ab3@28643>   MOVE.l #str_cliarguments,D2
00036126 <AmiBlitz3.ab3@28644>   MOVE.l #116,D3
0003612A <AmiBlitz3.ab3@28645>   JSR _Write(A6)                                           ; hier werden 116 bytes an cli_arguments geschrieben !!
0003612C <AmiBlitz3.ab3@28647>   MOVE.l D7,D1
00036132 <AmiBlitz3.ab3@28648>   MOVE.l #stacksize,D2
00036138 <AmiBlitz3.ab3@28649>   MOVE.l #4,D3
0003613C <AmiBlitz3.ab3@28650>   JSR _Write(A6)
0003613E <AmiBlitz3.ab3@28652>   MOVE.l D7,D1
00036144 <AmiBlitz3.ab3@28653>   MOVE.l #versioninformation,D2
0003614A <AmiBlitz3.ab3@28654>   MOVE.l #4,D3
0003614E <AmiBlitz3.ab3@28655>   JSR _Write(A6)
00036150 <AmiBlitz3.ab3@28657>   MOVE.l D7,D1
00036156 <AmiBlitz3.ab3@28658>   MOVE.l #number_of_builds,D2
0003615C <AmiBlitz3.ab3@28659>   MOVE.l #4,D3
00036160 <AmiBlitz3.ab3@28660>   JSR _Write(A6)
00036166 <AmiBlitz3.ab3@28666>   LEA libpointer,A2
00036168 <AmiBlitz3.ab3@28669>     MOVE.l (A2),D0
0003616C <AmiBlitz3.ab3@28670>     BEQ.w 'done2
0003616E <AmiBlitz3.ab3@28671>     MOVEA.l D0,A2
00036172 <AmiBlitz3.ab3@28672>     MOVE.l $12(A2),D4
00036176 <AmiBlitz3.ab3@28673>     TST.w -$2(A2,D4.L)
0003617A <AmiBlitz3.ab3@28674>     BEQ.w 'loop3
0003617E <AmiBlitz3.ab3@28676>     LEA $4(A2),A0
00036180 <AmiBlitz3.ab3@28677>     MOVE.l A0,D2
00036182 <AmiBlitz3.ab3@28678>     MOVEQ.l #$02,D3
00036184 <AmiBlitz3.ab3@28679>     MOVE.l D7,D1                                           ; schreiben der Libnum mit 2 bytes
00036188 <AmiBlitz3.ab3@28680>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
0003618C <AmiBlitz3.ab3@28682>     LEA -$4(A2,D4.L),A0
0003618E <AmiBlitz3.ab3@28683>     MOVE.l A0,D2
00036190 <AmiBlitz3.ab3@28684>     MOVEQ.l #$02,D3
00036192 <AmiBlitz3.ab3@28685>     MOVE.l D7,D1                                           ; schreiben der Max Objects mit 2 bytes
00036196 <AmiBlitz3.ab3@28686>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
0003619A <AmiBlitz3.ab3@28687>  BRA.w 'loop3
000361A0 <AmiBlitz3.ab3@28692>   LEA XTRAEndPadBytes,A2 ; get the start address off the 4 fill/pad/termination bytes
000361A2 <AmiBlitz3.ab3@28693>   MOVE.l A2,D2           ; move the address to d2
000361A8 <AmiBlitz3.ab3@28694>   MOVE.l #4,D3           ; we only need 4 bytes to save
000361AA <AmiBlitz3.ab3@28695>   MOVE.l D7,D1           ; we set the file handle
000361AE <AmiBlitz3.ab3@28696>   JSR _Write(A6)         ; and we write it.
000361B0 <AmiBlitz3.ab3@28698> RTS
000361B6 <AmiBlitz3.ab3@28703>   LEA optssave,A0                      ; backup address
000361BC <AmiBlitz3.ab3@28704>   LEA ptr_xtradata,A1                  ; source address
000361BE <AmiBlitz3.ab3@28707>   MOVE.w (A1)+,D0                                          ;length of data move
000361C2 <AmiBlitz3.ab3@28708>   BEQ.b 'backupdone
000361C4 <AmiBlitz3.ab3@28709>   SUBQ.w #1,D0
000361C6 <AmiBlitz3.ab3@28712>     MOVE.l (A1)+,D1
000361CA <AmiBlitz3.ab3@28713>     BEQ.b 'backuploop
000361CC <AmiBlitz3.ab3@28714>     MOVEA.l D1,A2
000361CE <AmiBlitz3.ab3@28715>     MOVE.w D0,D1
000361D0 <AmiBlitz3.ab3@28718>       MOVE.b (A2)+,(A0)+
000361D4 <AmiBlitz3.ab3@28719>   DBF D1,'backuploop3
000361D8 <AmiBlitz3.ab3@28721>  BRA.w 'backuploop2
000361DE <AmiBlitz3.ab3@28725>   LEA bufferlist,A1
000361E0 <AmiBlitz3.ab3@28728>     MOVE.l (A1)+,D2
000361E4 <AmiBlitz3.ab3@28729>     BEQ.b 'loop4done
000361E6 <AmiBlitz3.ab3@28731>     MOVEA.l D2,A0
000361E8 <AmiBlitz3.ab3@28732>     MOVE.l (A0),D2
000361EA <AmiBlitz3.ab3@28733>     ADDQ.w #8,A0
000361F0 <AmiBlitz3.ab3@28734>     JSR makelong
000361F4 <AmiBlitz3.ab3@28735>  BRA.b 'loop4
000361FA <AmiBlitz3.ab3@28738>   CLR.w state_of_residents                                 ;resident change
00036200 <AmiBlitz3.ab3@28739>   CLR.w comsettings_message                                ;alloc change
00036206 <AmiBlitz3.ab3@28740>   CLR.w maxobject_pos
00036208 <AmiBlitz3.ab3@28741> RTS   ; new tomsmart1
0003620E <AmiBlitz3.ab3@28745>   LEA optssave,A0
00036214 <AmiBlitz3.ab3@28746>   LEA ptr_xtradata,A1
00036216 <AmiBlitz3.ab3@28749>   MOVE.w (A1)+,D0
0003621A <AmiBlitz3.ab3@28750>   BEQ.b 'restoredone
0003621C <AmiBlitz3.ab3@28751>   SUBQ.w #1,D0
0003621E <AmiBlitz3.ab3@28754>     MOVE.l (A1)+,D1
00036222 <AmiBlitz3.ab3@28755>     BEQ.b 'restoreloop1
00036224 <AmiBlitz3.ab3@28756>     MOVEA.l D1,A2
00036226 <AmiBlitz3.ab3@28757>     MOVE.w D0,D1
00036228 <AmiBlitz3.ab3@28760>       MOVE.b (A0)+,(A2)+
0003622C <AmiBlitz3.ab3@28761>   DBF D1,'restoreloop3
00036230 <AmiBlitz3.ab3@28763>  BRA.b 'restoreloop2
00036232 <AmiBlitz3.ab3@28766> RTS
00036238 <AmiBlitz3.ab3@28770>   JSR free_residents                    ; first free the allready loaded residents
0003623E <AmiBlitz3.ab3@28771>   JSR Clear_Residents_table             ; second clear the complete resident table
00036240 <AmiBlitz3.ab3@28772> RTS
00036246 <AmiBlitz3.ab3@28776>   JSR clear_lastcompileerrordatas       ; added to fix problems if a residents load error happend  tomsmart1 2016 02 02
0003624E <AmiBlitz3.ab3@28777>   MOVE.w #$FFFF,state_of_residents
00036254 <AmiBlitz3.ab3@28778>   MOVE.w state_of_residents,D0
0003625A <AmiBlitz3.ab3@28779>   JSR reloadresident
0003625C <AmiBlitz3.ab3@28780> RTS
0003625E <AmiBlitz3.ab3@28786>   MOVE.l d0,a1
00036264 <AmiBlitz3.ab3@28788>   MOVEA.l libpointer,A2
00036268 <AmiBlitz3.ab3@28791>     MOVE.l $12(A2),D0
0003626C <AmiBlitz3.ab3@28792>     TST.w -$2(A2,D0.L)
00036270 <AmiBlitz3.ab3@28793>      BEQ.w 'next
00036272 <AmiBlitz3.ab3@28794>     SUBQ.w #1,D1
00036276 <AmiBlitz3.ab3@28795>      BPL.w 'next
0003627A <AmiBlitz3.ab3@28797>     MOVEA.l -$1A(A2,D0.L),A3    ;token offset
0003627C <AmiBlitz3.ab3@28798>     ADDA.l A2,A3
0003627E <AmiBlitz3.ab3@28801>       MOVE.b (A3)+,(A1)+
00036282 <AmiBlitz3.ab3@28802>     BNE.w 'tt1
00036284 <AmiBlitz3.ab3@28804>     CLR.b -(A1)
00036288 <AmiBlitz3.ab3@28806>     MOVE.w -$4(A2,D0.L),D0
0003628E <AmiBlitz3.ab3@28808>     AND.l #$ffff,d0
00036290 <AmiBlitz3.ab3@28809>  RTS
00036292 <AmiBlitz3.ab3@28813>     MOVEA.l (A2),A2
00036296 <AmiBlitz3.ab3@28814> BRA.w 'loop
000362A6 <AmiBlitz3.ab3@28819> str_maxobjects_name:   Dc.b "              ",0 : Even
000362B6 <AmiBlitz3.ab3@28820> str_maxobjects_name2:  Dc.b "              ",0 : Even
000362BA <AmiBlitz3.ab3@28821> objectbuffer:          Dc.l #DEFAULT_OBJECTBUFFERSIZE  ; replaced with a constant tomsmart1
000362BE <AmiBlitz3.ab3@28822>                        Dc.l $00000000
000362CA <AmiBlitz3.ab3@28823> str_objectbuffer:      Dc.b "16384",0,0,0,0,0,0,0      ; string max 12 columns
000362CE <AmiBlitz3.ab3@28825> libsbuffer:            Dc.l #DEFAULT_LIBSBUFFERSIZE    ; replaced with a constant tomsmart1
000362D2 <AmiBlitz3.ab3@28826>                        Dc.l $00000000
000362DE <AmiBlitz3.ab3@28827> str_libsbuffer:        Dc.b "32768",0,0,0,0,0,0,0      ;was "16384"; string max 12 columns
000362E2 <AmiBlitz3.ab3@28829> systembuffer:          Dc.l #DEFAULT_SYSTEMBUFFERSIZE  ; system buffer  ; replaced with a constant tomsmart1
000362E6 <AmiBlitz3.ab3@28830>                        Dc.l $00000000
000362F2 <AmiBlitz3.ab3@28831> str_systembuffer:      Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
000362F6 <AmiBlitz3.ab3@28833> databuffer:            Dc.l #DEFAULT_DATABUFFERSIZE    ; data buffer   ; replaced with a constant tomsmart1
000362FA <AmiBlitz3.ab3@28834>                        Dc.l $00000000
00036306 <AmiBlitz3.ab3@28835> str_databuffer:        Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
0003630A <AmiBlitz3.ab3@28837> macrobuffer_size:      Dc.l #DEFAULT_MACROBUFFERSIZE   ; macro buffer ; was $00002000 ; replaced with a constant tomsmart1
0003630E <AmiBlitz3.ab3@28838>                        Dc.l $00000000
0003631A <AmiBlitz3.ab3@28839> str_macrobuffer:       Dc.b "40000",0,0,0,0,0,0,0      ; string max 12 columns
0003631E <AmiBlitz3.ab3@28841> stringbuffer:          Dc.l #DEFAULT_STRINGBUFFERSIZE  ; string buffer ; replaced with a constant tomsmart1
00036322 <AmiBlitz3.ab3@28842>                        Dc.l $00000000
0003632E <AmiBlitz3.ab3@28843> str_stringbuffer:      Dc.b "10240",0,0,0,0,0,0,0      ; string max 12 columns
00036330 <AmiBlitz3.ab3@28845> maxobjects_value:      Dc.w $0064
00036334 <AmiBlitz3.ab3@28846>                        Dc.l $00000000
00036340 <AmiBlitz3.ab3@28847> str_maxobjects_value:  Dc.b "100",0,0,0,0,0,0,0,0,0    ; string max 12 columns
00036342 <AmiBlitz3.ab3@28849> maxobjects_value2:     Dc.w $0014
00036344 <AmiBlitz3.ab3@28850>                        Dc.w $0000
00036350 <AmiBlitz3.ab3@28852> str_maxobjects_value2: Dc.b "20",0,0,0,0,0,0,0,0,0,0   ; string max 12 columns
00036351 <AmiBlitz3.ab3@28856> set_create_iconfile:   Dc.b $00
00036354 <AmiBlitz3.ab3@28857> create_iconfile:       Dc.b $80,$01,$01                    ;create icon
00036356 <AmiBlitz3.ab3@28858>                        Dc.b $00,$01
00036357 <AmiBlitz3.ab3@28860> set_use_debugger:      Dc.b $00                            ; Flags.w
0003635A <AmiBlitz3.ab3@28861> use_debugger:          Dc.b $80,$01,$01                    ; Activation.w
0003635C <AmiBlitz3.ab3@28862>                        Dc.b $00,$01                        ; GadgetType.w
00036360 <AmiBlitz3.ab3@28863> AL_0_11010:            Dc.b $00,$80,$01,$01                ; flags, activation
00036364 <AmiBlitz3.ab3@28864> AL_0_1103C:            Dc.b $00,$80,$01,$01                ; flags, activation
00036368 <AmiBlitz3.ab3@28865> AL_0_11068:            Dc.b $00,$80,$01,$01                ; flags, activation
0003636A <AmiBlitz3.ab3@28866> AL_0_11094:            Ds.w 1
0003636B <AmiBlitz3.ab3@28868> set_make_smallestcode: Ds.b 1
0003636E <AmiBlitz3.ab3@28869> make_smallestcode:     Dc.b $00,$01,$01                    ;make smallest
00036370 <AmiBlitz3.ab3@28870>                        Dc.b $00,$01
00036371 <AmiBlitz3.ab3@28871> set_link_debuginfo:    Ds.b 1
00036374 <AmiBlitz3.ab3@28872> link_debuginfo:        Dc.b $00,$01,$01                    ;create debuginfo
00036376 <AmiBlitz3.ab3@28873>                        Dc.b $00,$01
00036596 <AmiBlitz3.ab3@28878>   Ds.l 136         ;resident files STEP $44 piece 8
00036616 <AmiBlitz3.ab3@28883> str_calcexpression:        Ds.l 32
0003661A <AmiBlitz3.ab3@28884> destbufferend_backup_calc: Ds.l 1             ; was calclibat
00036624 <AmiBlitz3.ab3@28892>   MOVE.l destbufferend,destbufferend_backup_calc
0003662A <AmiBlitz3.ab3@28894> 
00036630 <AmiBlitz3.ab3@28896>   MOVE.l A7,errstack
0003663A <AmiBlitz3.ab3@28897>   MOVE.l #Calc_Error_Exit,errcont
00036664 <AmiBlitz3.ab3@28905>   !basic         ; get the flage for the conversion form the editor
000366AE <AmiBlitz3.ab3@28906>   !ComData_GetW{comWord_CalculatorButtonBinFlag,D0} : MOVE.w d0,CalculatorButtonBinFlag
000366F8 <AmiBlitz3.ab3@28907>   !ComData_GetW{comWord_CalculatorButtonDecFlag,D0} : MOVE.w d0,CalculatorButtonDecFlag
00036716 <AmiBlitz3.ab3@28908>   !asm
0003671C <AmiBlitz3.ab3@28911>   LEA str_calcexpression,A0
00036722 <AmiBlitz3.ab3@28919>   JSR setcvars
00036728 <AmiBlitz3.ab3@28920>   JSR setsvars
0003672E <AmiBlitz3.ab3@28922>   CLR.w connest             ;no idea...
00036734 <AmiBlitz3.ab3@28923>   LEA str_calcexpression,A5
0003673A <AmiBlitz3.ab3@28924>   JSR evalconst3            ;evaluate constant
00036740 <AmiBlitz3.ab3@28926>   LEA str_calcexpression,A0
00036742 <AmiBlitz3.ab3@28927>   TST.l D3
00036746 <AmiBlitz3.ab3@28928>    BPL.w 'ispos
0003674A <AmiBlitz3.ab3@28929>   MOVE.b #$2D,(A0)+         ;'-'
0003674C <AmiBlitz3.ab3@28930>   NEG.l D3
00036754 <AmiBlitz3.ab3@28933>   CMPI.w #$80,CalculatorButtonDecFlag
00036758 <AmiBlitz3.ab3@28934>    BEQ.w 'dec
0003675A <AmiBlitz3.ab3@28935>   MOVEQ.l #$00,D1
00036762 <AmiBlitz3.ab3@28936>   CMPI.w #$80,CalculatorButtonBinFlag
00036766 <AmiBlitz3.ab3@28937>    BNE.w 'hex
00036768 <AmiBlitz3.ab3@28940>   MOVEQ.l #$1F,D0
0003676C <AmiBlitz3.ab3@28941>   MOVE.b #$25,(A0)+      ;'%'
0003676E <AmiBlitz3.ab3@28944>       LSL.l #1,D3
00036772 <AmiBlitz3.ab3@28945>        BCC.w 'bzero
00036776 <AmiBlitz3.ab3@28946>       MOVE.b #"1",(A0)+
00036778 <AmiBlitz3.ab3@28947>       MOVEQ.l #-$01,D1
0003677C <AmiBlitz3.ab3@28948>   BRA.w 'bnext
0003677E <AmiBlitz3.ab3@28951>       TST.w D1
00036782 <AmiBlitz3.ab3@28952>       BEQ.w 'bnext
00036786 <AmiBlitz3.ab3@28953>       MOVE.b #"0",(A0)+
0003678A <AmiBlitz3.ab3@28956>  DBF D0,'bloop
0003678C <AmiBlitz3.ab3@28959>   TST.w D1
00036790 <AmiBlitz3.ab3@28960>   BNE.w 'pc1
00036794 <AmiBlitz3.ab3@28961>   MOVE.b #"0",(A0)+
00036796 <AmiBlitz3.ab3@28964>   CLR.b (A0)
0003679A <AmiBlitz3.ab3@28965>  BRA.w 'pc
0003679C <AmiBlitz3.ab3@28968>   MOVEQ.l #$07,D0
000367A0 <AmiBlitz3.ab3@28969>   MOVE.b #$24,(A0)+  ;'$'
000367A2 <AmiBlitz3.ab3@28972>     MOVE.l D3,D2
000367A4 <AmiBlitz3.ab3@28973>     SWAP D2
000367A6 <AmiBlitz3.ab3@28974>     LSR.w #8,D2
000367A8 <AmiBlitz3.ab3@28975>     LSR.w #4,D2
000367AC <AmiBlitz3.ab3@28976>     ADDI.w #$30,D2
000367B0 <AmiBlitz3.ab3@28977>     CMP.w #$3A,D2
000367B4 <AmiBlitz3.ab3@28978>      BCS.w 'hok
000367B6 <AmiBlitz3.ab3@28979>     ADDQ.w #7,D2
000367BA <AmiBlitz3.ab3@28982>     CMP.w #$30,D2
000367BE <AmiBlitz3.ab3@28983>     BEQ.w 'hzero
000367C0 <AmiBlitz3.ab3@28984>     MOVE.b D2,(A0)+
000367C2 <AmiBlitz3.ab3@28985>     MOVEQ.l #-$01,D1
000367C6 <AmiBlitz3.ab3@28986>   BRA.w 'hnext
000367C8 <AmiBlitz3.ab3@28989>     TST.w D1
000367CC <AmiBlitz3.ab3@28990>      BEQ.w 'hnext
000367CE <AmiBlitz3.ab3@28991>     MOVE.b D2,(A0)+
000367D0 <AmiBlitz3.ab3@28994>     LSL.l #4,D3
000367D4 <AmiBlitz3.ab3@28995>  DBF D0,'hloop
000367D8 <AmiBlitz3.ab3@28997>  BRA.w 'bdone
000367DA <AmiBlitz3.ab3@29000>   MOVE.l D3,D2
000367E0 <AmiBlitz3.ab3@29001>   JSR makelong          ;to long...
000367EA <AmiBlitz3.ab3@29008>   MOVE.l destbufferend_backup_calc,destbufferend
000367EC <AmiBlitz3.ab3@29010> RTS                         ; added tomsmart 2012 03 07 vor Calculator in PED
000368EB <AmiBlitz3.ab3@29014> str_cliarguments: Ds.b 255   ; a command line can acutally be 255 characters long
000368EC <AmiBlitz3.ab3@29016> Even
000368EE <AmiBlitz3.ab3@29034>     MOVE.b (a5)+,d0
000368F2 <AmiBlitz3.ab3@29035>     BEQ 'l2
000368F6 <AmiBlitz3.ab3@29036>     CMP.b #$80,d0
000368FA <AmiBlitz3.ab3@29037>     BNE 'l1
000368FC <AmiBlitz3.ab3@29038>     MOVE.b (a5)+,d0
00036900 <AmiBlitz3.ab3@29039>     BEQ 'l2
00036904 <AmiBlitz3.ab3@29040>     CMP.b #$02,d0
00036908 <AmiBlitz3.ab3@29041>   BNE 'l1
0003690C <AmiBlitz3.ab3@29044>     CMP.b #$20,(a5)+
00036910 <AmiBlitz3.ab3@29045>   BEQ 'l3
00036912 <AmiBlitz3.ab3@29046>   SUBQ.l #1,a5
00036914 <AmiBlitz3.ab3@29047>   TST.b (a5)
00036918 <AmiBlitz3.ab3@29048>   BEQ 'l2
0003691C <AmiBlitz3.ab3@29049>   CMP.w #$8008,(a5)
00036920 <AmiBlitz3.ab3@29050>   BEQ 'l4
00036924 <AmiBlitz3.ab3@29051>   CMP.w #$8009,(a5)
00036928 <AmiBlitz3.ab3@29052>   BEQ 'l4
0003692C <AmiBlitz3.ab3@29053>  BRA 'l1
0003692E <AmiBlitz3.ab3@29056>   ADDQ.l #2,a5
00036934 <AmiBlitz3.ab3@29057>   JSR skiprest
00036936 <AmiBlitz3.ab3@29058> RTS
0003693C <AmiBlitz3.ab3@29061>   JSR nextline
00036940 <AmiBlitz3.ab3@29062>   BNE 'l1
00036942 <AmiBlitz3.ab3@29063> RTS
0003696C <AmiBlitz3.ab3@29067>   !basic
00036976 <AmiBlitz3.ab3@29068>   DateFormat 1
00036984 <AmiBlitz3.ab3@29069>   i.l=SystemDate
000369AA <AmiBlitz3.ab3@29070>   a$=Date$ (i)
00036A28 <AmiBlitz3.ab3@29071>   a$=Replace$(a$,"/",".")
00036A2E <AmiBlitz3.ab3@29072>   GetD0 &a$
00036A30 <AmiBlitz3.ab3@29073>   MOVEQ #8,d2
00036A32 <AmiBlitz3.ab3@29074>   MOVE.l d0,a0
00036A34 <AmiBlitz3.ab3@29077>     MOVE.b (a0)+,d1
00036A3A <AmiBlitz3.ab3@29078>     JSR pokedata1b
00036A3E <AmiBlitz3.ab3@29079>  DBF d2,'l1
00036A40 <AmiBlitz3.ab3@29081>   MOVEQ #0,d0
00036A42 <AmiBlitz3.ab3@29082>   MOVE.b (a0)+,d0
00036A60 <AmiBlitz3.ab3@29083>   !asm
00036A66 <AmiBlitz3.ab3@29084>   ADD.l #9,d2
00036A6C <AmiBlitz3.ab3@29085>   ADD.l #9,a5
00036A6E <AmiBlitz3.ab3@29086> RTS
00036A98 <AmiBlitz3.ab3@29090>   !basic
00036AA2 <AmiBlitz3.ab3@29091>   DateFormat 0
00036AB0 <AmiBlitz3.ab3@29092>   i.l=SystemDate
00036AD6 <AmiBlitz3.ab3@29093>   a$=Date$ (i)
00036B54 <AmiBlitz3.ab3@29094>   a$=Replace$(a$,"/",".")
00036B5A <AmiBlitz3.ab3@29095>   GetD0 &a$
00036B5C <AmiBlitz3.ab3@29096>   MOVEQ #8,d2
00036B5E <AmiBlitz3.ab3@29097>   MOVE.l d0,a0
00036B60 <AmiBlitz3.ab3@29100>     MOVE.b (a0)+,d1
00036B66 <AmiBlitz3.ab3@29101>     JSR pokedata1b
00036B6A <AmiBlitz3.ab3@29102>  DBF d2,'l1
00036B6C <AmiBlitz3.ab3@29104>   MOVEQ #0,d0
00036B6E <AmiBlitz3.ab3@29105>   MOVE.b (a0)+,d0
00036B8C <AmiBlitz3.ab3@29106>   !asm
00036B92 <AmiBlitz3.ab3@29107>   ADD.l #9,d2
00036B98 <AmiBlitz3.ab3@29108>   ADD.l #13,a5
00036B9A <AmiBlitz3.ab3@29109> RTS
00036BC4 <AmiBlitz3.ab3@29113>   !basic
00036BCE <AmiBlitz3.ab3@29114>   DateFormat 1
00036BDC <AmiBlitz3.ab3@29115>   i.l = SystemDate
00036C02 <AmiBlitz3.ab3@29116>   a$ = Date$ (i)
00036C80 <AmiBlitz3.ab3@29117>   a$ = Replace$(a$,"/",".")
00036C86 <AmiBlitz3.ab3@29118>   GetD0 &a$
00036C88 <AmiBlitz3.ab3@29119>   MOVEQ #8,d2
00036C8A <AmiBlitz3.ab3@29120>   MOVE.l d0,a0
00036C8C <AmiBlitz3.ab3@29123>     MOVE.b (a0)+,d1
00036C92 <AmiBlitz3.ab3@29124>     JSR writebyte
00036C96 <AmiBlitz3.ab3@29125>  DBF d2,'l1
00036C98 <AmiBlitz3.ab3@29127>   MOVEQ #0,d0
00036C9A <AmiBlitz3.ab3@29128>   MOVE.b (a0)+,d0
00036CB8 <AmiBlitz3.ab3@29129>   !asm
00036CBE <AmiBlitz3.ab3@29130>   ADD.l #9,a5
00036CC0 <AmiBlitz3.ab3@29131> RTS
00036CEA <AmiBlitz3.ab3@29135>   !basic
00036CF4 <AmiBlitz3.ab3@29136>   DateFormat 0
00036D02 <AmiBlitz3.ab3@29137>   i.l=SystemDate
00036D28 <AmiBlitz3.ab3@29138>   a$=Date$ (i)
00036DA6 <AmiBlitz3.ab3@29139>   a$=Replace$(a$,"/",".")
00036DAC <AmiBlitz3.ab3@29140>   GetD0 &a$
00036DAE <AmiBlitz3.ab3@29141>   MOVEQ #8,d2
00036DB0 <AmiBlitz3.ab3@29142>   MOVE.l d0,a0
00036DB2 <AmiBlitz3.ab3@29145>     MOVE.b (a0)+,d1
00036DB8 <AmiBlitz3.ab3@29146>     JSR writebyte
00036DBC <AmiBlitz3.ab3@29147>  DBF d2,'l1
00036DBE <AmiBlitz3.ab3@29149>   MOVEQ #0,d0
00036DC0 <AmiBlitz3.ab3@29150>   MOVE.b (a0)+,d0
00036DDE <AmiBlitz3.ab3@29151>   !asm
00036DE4 <AmiBlitz3.ab3@29152>   ADD.l #13,a5
00036DE6 <AmiBlitz3.ab3@29153> RTS
00036DE8 <AmiBlitz3.ab3@29157>   MOVE.l d2,-(a7)                                          ; D2 -> stack
00036DEA <AmiBlitz3.ab3@29158>   MOVE.l a5,d0
00036E14 <AmiBlitz3.ab3@29159>   !basic
00036E18 <AmiBlitz3.ab3@29160>   _myD0.l = PutD0
00036E22 <AmiBlitz3.ab3@29161>   If _myD0
00036E68 <AmiBlitz3.ab3@29162>     verstring$ = Left$(Peek.s(_myD0),9+3)
00036EBA <AmiBlitz3.ab3@29163>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00036EC0 <AmiBlitz3.ab3@29164>   Else
00036EFA <AmiBlitz3.ab3@29165>     error{"INTERNAL: Invalid pointer in version_string!"}
00036F0A <AmiBlitz3.ab3@29170>   actual_version.l = Peek.l(?versioninformation)
00036F1A <AmiBlitz3.ab3@29171>   actual_build.l   = Peek.l(?number_of_builds)
00036F3E <AmiBlitz3.ab3@29173>   Format "00"
00036F74 <AmiBlitz3.ab3@29174>   Select verstring$
00036F98 <AmiBlitz3.ab3@29176>     Case "VER_MAJOR"
00036FD4 <AmiBlitz3.ab3@29177>      put_versionstr$ = Str$(actual_version LSR 24)
00036FFE <AmiBlitz3.ab3@29179>     Case "VER_MINOR"
00037042 <AmiBlitz3.ab3@29180>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
0003706C <AmiBlitz3.ab3@29182>     Case "VER_PATCH"
000370B0 <AmiBlitz3.ab3@29183>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
000370DA <AmiBlitz3.ab3@29185>     Case "VER_BUILD"
000370FE <AmiBlitz3.ab3@29186>      Format ""
00037132 <AmiBlitz3.ab3@29187>      put_versionstr$ = Str$(actual_build)
00037138 <AmiBlitz3.ab3@29189>     Default
00037160 <AmiBlitz3.ab3@29190>      put_versionstr$ = "{unknown compilerconstant}"
0003716E <AmiBlitz3.ab3@29193>   End Select
00037192 <AmiBlitz3.ab3@29194>   Format ""
000371A2 <AmiBlitz3.ab3@29196>   GetD0 FLen(put_versionstr$)                              ; laenge zielstring -> Stack
000371A4 <AmiBlitz3.ab3@29197>   MOVE.l d0,d2
000371A6 <AmiBlitz3.ab3@29198>   MOVE.l d2,-(a7)
000371AA <AmiBlitz3.ab3@29199>   SUB #1,d2
000371B0 <AmiBlitz3.ab3@29201>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
000371B2 <AmiBlitz3.ab3@29202>   MOVE.l d0,a0
000371B4 <AmiBlitz3.ab3@29205>     MOVE.b (a0)+,d1
000371BA <AmiBlitz3.ab3@29206>     JSR pokedata1b
000371BE <AmiBlitz3.ab3@29207>  DBF d2,'l1
000371C0 <AmiBlitz3.ab3@29209>   MOVEQ #0,d0
000371DE <AmiBlitz3.ab3@29210>   !asm
000371E0 <AmiBlitz3.ab3@29211>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
000371E2 <AmiBlitz3.ab3@29212>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
000371E4 <AmiBlitz3.ab3@29213>   ADD.l d0,d2
000371EA <AmiBlitz3.ab3@29214>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
000371EC <AmiBlitz3.ab3@29215>   MOVEQ #0,d0
000371EE <AmiBlitz3.ab3@29216> RTS
000371F0 <AmiBlitz3.ab3@29220>   MOVE.l a5,d0
0003721A <AmiBlitz3.ab3@29221>   !basic
0003721E <AmiBlitz3.ab3@29222>   _myD0.l = PutD0
00037228 <AmiBlitz3.ab3@29223>   If _myD0
0003726E <AmiBlitz3.ab3@29224>     verstring$ = Left$(Peek.s(_myD0),9+3)
000372C0 <AmiBlitz3.ab3@29225>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
000372C6 <AmiBlitz3.ab3@29226>   Else
00037300 <AmiBlitz3.ab3@29227>     error{"INTERNAL: Invalid pointer in version_string_dc!"}
00037310 <AmiBlitz3.ab3@29232>   actual_version.l = Peek.l(?versioninformation)
00037320 <AmiBlitz3.ab3@29233>   actual_build.l   = Peek.l(?number_of_builds)
00037344 <AmiBlitz3.ab3@29235>   Format ""
0003737A <AmiBlitz3.ab3@29236>   Select verstring$
0003739E <AmiBlitz3.ab3@29238>     Case "VER_MAJOR"
000373DA <AmiBlitz3.ab3@29239>      put_versionstr$ = Str$(actual_version LSR 24)
00037404 <AmiBlitz3.ab3@29241>     Case "VER_MINOR"
00037448 <AmiBlitz3.ab3@29242>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
00037472 <AmiBlitz3.ab3@29244>     Case "VER_PATCH"
000374B6 <AmiBlitz3.ab3@29245>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
000374E0 <AmiBlitz3.ab3@29247>     Case "VER_BUILD"
00037504 <AmiBlitz3.ab3@29248>      Format ""
00037538 <AmiBlitz3.ab3@29249>      put_versionstr$ = Str$(actual_build)
0003753E <AmiBlitz3.ab3@29251>     Default
00037566 <AmiBlitz3.ab3@29252>      put_versionstr$ = "{unknown compilerconstant}"
00037574 <AmiBlitz3.ab3@29254>   End Select
00037598 <AmiBlitz3.ab3@29255>   Format ""
000375AE <AmiBlitz3.ab3@29257>   GetD0 FLen(put_versionstr$)-1
000375B0 <AmiBlitz3.ab3@29258>   MOVE.l d0,d2
000375B6 <AmiBlitz3.ab3@29260>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
000375B8 <AmiBlitz3.ab3@29261>   MOVE.l d0,a0
000375BA <AmiBlitz3.ab3@29264>     MOVE.b (a0)+,d1
000375C0 <AmiBlitz3.ab3@29265>     JSR writebyte
000375C4 <AmiBlitz3.ab3@29266>  DBF d2,'l1
000375C6 <AmiBlitz3.ab3@29268>   MOVEQ #0,d0
000375C8 <AmiBlitz3.ab3@29269>   MOVE.b -(a0),d0                                          ; letztes Zeichen in D0
000375E6 <AmiBlitz3.ab3@29270>   !asm
000375EC <AmiBlitz3.ab3@29271>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
000375EE <AmiBlitz3.ab3@29272> RTS
000375F0 <AmiBlitz3.ab3@29374>   MOVE.l a5,-(a7)
0003761C <AmiBlitz3.ab3@29375>   !fget
00037620 <AmiBlitz3.ab3@29376>   CMP.w #".",d0
00037624 <AmiBlitz3.ab3@29377>   BNE 'skip
00037628 <AmiBlitz3.ab3@29378>   MOVEM.l a2/d2,-(a7)
0003762E <AmiBlitz3.ab3@29379>   LEA newtypebase,a2
00037634 <AmiBlitz3.ab3@29380>   JSR getparameter2
00037638 <AmiBlitz3.ab3@29381>   BEQ.w JUMP_syntaxerr
0003763E <AmiBlitz3.ab3@29382>   JSR findtype
00037642 <AmiBlitz3.ab3@29383>   BNE.w JUMP_notypeerr2
00037648 <AmiBlitz3.ab3@29384>   MOVE.l a2,typetocast
0003764C <AmiBlitz3.ab3@29385>   MOVEM.l (a7)+,a2/d2
00037650 <AmiBlitz3.ab3@29386>   CMP.w #")",d0
00037654 <AmiBlitz3.ab3@29387>   BNE JUMP_errorbracketmiss
00037656 <AmiBlitz3.ab3@29388>   ADDQ.l #4,a7
00037682 <AmiBlitz3.ab3@29389>   !fget
00037688 <AmiBlitz3.ab3@29390>   JMP nocast
0003768A <AmiBlitz3.ab3@29393>   MOVE.l (a7)+,a5
00037690 <AmiBlitz3.ab3@29394> JMP bracket
00037696 <AmiBlitz3.ab3@29397> JUMP_errorbracketmiss JMP errorbracketmiss
000376C0 <AmiBlitz3.ab3@29400> Function.l ab3_GetIncludeLock{filename.s}
000376E0 <AmiBlitz3.ab3@29401>   incLock.l  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub
00037738 <AmiBlitz3.ab3@29402>   ex.s       = dos_GetExt{filename}
0003774C <AmiBlitz3.ab3@29404>   If incLock = False
000377C0 <AmiBlitz3.ab3@29405>     filename = dos_SetExt{filename,"ab3"}
000377E0 <AmiBlitz3.ab3@29406>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab3
000377F4 <AmiBlitz3.ab3@29409>   If incLock = False
00037868 <AmiBlitz3.ab3@29410>     filename = dos_SetExt{filename,"ab2"}
00037888 <AmiBlitz3.ab3@29411>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab2
0003789C <AmiBlitz3.ab3@29414>   If incLock = False
00037910 <AmiBlitz3.ab3@29415>     filename = dos_SetExt{filename,"bb2"}
00037930 <AmiBlitz3.ab3@29416>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.bb2
00037944 <AmiBlitz3.ab3@29419>   If incLock = False
000379D6 <AmiBlitz3.ab3@29420>     filename = dos_SetExt{filename,ex+".ab3"}
000379F6 <AmiBlitz3.ab3@29421>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab3
00037A0A <AmiBlitz3.ab3@29424>   If incLock = False
00037A7E <AmiBlitz3.ab3@29425>     filename = dos_SetExt{filename,"ab2"}
00037A9E <AmiBlitz3.ab3@29426>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab2
00037AB2 <AmiBlitz3.ab3@29429>   If incLock = False
00037B26 <AmiBlitz3.ab3@29430>     filename = dos_SetExt{filename,"bb2"}
00037B46 <AmiBlitz3.ab3@29431>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.bb2
00037B50 <AmiBlitz3.ab3@29434>  Function Return incLock
00037B6A <AmiBlitz3.ab3@29435> End Function
00037B94 <AmiBlitz3.ab3@29439>   !basic
00037BBE <AmiBlitz3.ab3@29440>   incString.s = Peek$(?ptr_parameterstore)
00037BEC <AmiBlitz3.ab3@29442>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
00037BF0 <AmiBlitz3.ab3@29443>   incDirP.l   = PutD0                                       ;    "
00037C18 <AmiBlitz3.ab3@29444>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
00037C98 <AmiBlitz3.ab3@29445>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
00037CCA <AmiBlitz3.ab3@29446>   incLock.l   = ab3_GetIncludeLock{incFile}                 ; check if file exist
00037CDE <AmiBlitz3.ab3@29448>   If incLock = False ; not found => check default Include Directory
00037CEE <AmiBlitz3.ab3@29449>     incDirP.l = Peek.l(?incd)
00037CF8 <AmiBlitz3.ab3@29450>     If incDirP
00037D20 <AmiBlitz3.ab3@29451>       incDir_.s = Peek.s(incDirP)
00037D26 <AmiBlitz3.ab3@29452>     Else
00037D90 <AmiBlitz3.ab3@29453>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00037E10 <AmiBlitz3.ab3@29455>     incFile.s = dos_AddPart{incDir_,incString}
00037E42 <AmiBlitz3.ab3@29456>     incLock.l = ab3_GetIncludeLock{incFile}
00037E56 <AmiBlitz3.ab3@29459>   If incLock = False ; not found => check relative to current source
00037E6E <AmiBlitz3.ab3@29460>     incDepth.l = Peek.w(?ininclude)-1
00037E94 <AmiBlitz3.ab3@29461>     If incDepth >= 0 AND incDepth < #maxincludes
00037EF4 <AmiBlitz3.ab3@29462>       incDir_.s = dos_PathPart{incdim (incDepth)} ;= Peek.s(?includetemp2)
00037F74 <AmiBlitz3.ab3@29463>       incFile.s = dos_AddPart{incDir_,incString}
00037FA6 <AmiBlitz3.ab3@29464>       incLock.l = ab3_GetIncludeLock{incFile}
00037FBA <AmiBlitz3.ab3@29468>   If incLock = False ; still not found => check default Include Directory and name only
00037FCA <AmiBlitz3.ab3@29469>     incDirP.l = Peek.l(?incd)
00037FD4 <AmiBlitz3.ab3@29470>     If incDirP
00037FFC <AmiBlitz3.ab3@29471>       incDir_.s = Peek.s(incDirP)
00038002 <AmiBlitz3.ab3@29472>     Else
0003806C <AmiBlitz3.ab3@29473>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
0003811A <AmiBlitz3.ab3@29475>     incFile.s = dos_AddPart{incDir_,dos_FilePart{incString}}
0003814C <AmiBlitz3.ab3@29476>     incLock.l = ab3_GetIncludeLock{incFile}
00038156 <AmiBlitz3.ab3@29479>   If incLock
0003816C <AmiBlitz3.ab3@29480>     MaxLen incFile = 1024
00038190 <AmiBlitz3.ab3@29481>     NameFromLock_ incLock,&incFile,1024
000381BA <AmiBlitz3.ab3@29482>     incFile = Peek.s(&incFile)
000381F2 <AmiBlitz3.ab3@29483>     Poke$ ?ptr_parameterstore,incFile
00038206 <AmiBlitz3.ab3@29484>     i = FLen(incFile)
00038212 <AmiBlitz3.ab3@29485>     GetReg d0,i
00038218 <AmiBlitz3.ab3@29486>     MOVE.l d0,tempstore
00038228 <AmiBlitz3.ab3@29487>     UnLock_ incLock
00038246 <AmiBlitz3.ab3@29490>   !asm
0003824C <AmiBlitz3.ab3@29491>   TST.l tempstore
00038250 <AmiBlitz3.ab3@29492>    BEQ 'l1
00038256 <AmiBlitz3.ab3@29493>   MOVE.l tempstore,d2
00038258 <AmiBlitz3.ab3@29496> RTS
00038282 <AmiBlitz3.ab3@29500>   !basic
000382AC <AmiBlitz3.ab3@29501>   incString.s = Peek$(?ptr_parameterstore)                  ; get the string
000382DA <AmiBlitz3.ab3@29502>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
000382DE <AmiBlitz3.ab3@29503>   incDirP.l   = PutD0                                       ;    "
00038306 <AmiBlitz3.ab3@29504>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
00038386 <AmiBlitz3.ab3@29505>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
000383A6 <AmiBlitz3.ab3@29506>   incLock.l   = Lock_(&incFile,#ACCESS_READ)                ; check if file exist
000383BA <AmiBlitz3.ab3@29508>   If incLock = False                                        ; not found => try orignal string only to find
000383DA <AmiBlitz3.ab3@29509>     incLock.l = Lock_(&incString,#ACCESS_READ)
000383E4 <AmiBlitz3.ab3@29512>   If incLock                                                ; found => store full path
000383FA <AmiBlitz3.ab3@29513>     MaxLen incFile = 1024
0003841E <AmiBlitz3.ab3@29514>     NameFromLock_ incLock,&incFile,1024
00038448 <AmiBlitz3.ab3@29515>     incFile = Peek.s(&incFile)
00038480 <AmiBlitz3.ab3@29516>     Poke$ ?ptr_parameterstore,incFile
0003848C <AmiBlitz3.ab3@29519> 
000384AA <AmiBlitz3.ab3@29520>   !asm
000384AC <AmiBlitz3.ab3@29521> RTS
000384B2 <AmiBlitz3.ab3@29532>   JSR Aclearallvars
000384B8 <AmiBlitz3.ab3@29533>   JSR free_unusedfunctions
000384C2 <AmiBlitz3.ab3@29548>   MOVE.l #"NORE",reqmode
000384C8 <AmiBlitz3.ab3@29549> JSR handle_compileerror
000384CA <AmiBlitz3.ab3@29552>   MOVE.l d0,-(a7)
000384CC <AmiBlitz3.ab3@29553>   MOVE.l a5,d0
000384D6 <AmiBlitz3.ab3@29554>   !basica7
000384DA <AmiBlitz3.ab3@29555>   i.l = PutD0
000384E4 <AmiBlitz3.ab3@29556>   If i
0003850C <AmiBlitz3.ab3@29557>     a$ = Peek$(i)
0003853E <AmiBlitz3.ab3@29558>     b$ = Peeks$(i-7,7)
00038676 <AmiBlitz3.ab3@29560> 
0003867C <AmiBlitz3.ab3@29561>     MOVE.l d0,result
00038680 <AmiBlitz3.ab3@29563>   !asma7
00038682 <AmiBlitz3.ab3@29564>   MOVE.l (a7)+,d0
00038684 <AmiBlitz3.ab3@29565> RTS
000386AE <AmiBlitz3.ab3@29569>   !basic
000386DC <AmiBlitz3.ab3@29570>   !ComData_LEA{comStr_CurrentDir,D0}
000386E0 <AmiBlitz3.ab3@29571>   currentDirP.l = PutD0
0003870E <AmiBlitz3.ab3@29573>   !ComData_LEA{comStr_SourceName,D0}
00038712 <AmiBlitz3.ab3@29574>   fileNameP.l = PutD0
0003873A <AmiBlitz3.ab3@29576>   check_dirname$  = Peek$(currentDirP)
00038762 <AmiBlitz3.ab3@29577>   check_filename$ = Peek$(fileNameP)
000387E8 <AmiBlitz3.ab3@29578>   If (olddirname$<>check_dirname$) OR (oldfilename$<>check_filename$)
000387EE <AmiBlitz3.ab3@29579>     JSR free_unusedfunctions
00038838 <AmiBlitz3.ab3@29581>   olddirname$ = Peek$(check_dirname$)
00038882 <AmiBlitz3.ab3@29582>   oldfilename$ = Peek$(check_filename$)
000388AC <AmiBlitz3.ab3@29583>   For i = 0 To #maxincludes-1
000388C0 <AmiBlitz3.ab3@29584>     incline(i) = 0
000388D0 <AmiBlitz3.ab3@29585>   Next
000388EE <AmiBlitz3.ab3@29586>   !asm
000388F0 <AmiBlitz3.ab3@29587> RTS
000388F2 <AmiBlitz3.ab3@29591>   MOVEQ #0,d1
000388F4 <AmiBlitz3.ab3@29594>   MOVE.b (a5)+,d0
000388F8 <AmiBlitz3.ab3@29595>   BEQ 'er1
000388FC <AmiBlitz3.ab3@29596>   CMP.b #$20,d0
00038900 <AmiBlitz3.ab3@29597>   BEQ 'l1
00038902 <AmiBlitz3.ab3@29598>   ADDQ #1,d1
00038906 <AmiBlitz3.ab3@29599>   CMP.b #$22,d0
0003890A <AmiBlitz3.ab3@29600>   BNE 'l1
0003890C <AmiBlitz3.ab3@29601>  RTS
00038912 <AmiBlitz3.ab3@29604> JMP syntaxerr
00038936 <AmiBlitz3.ab3@29608> erro1t   Dc.b "Only one BSS / Chip Segment allowed",0 : Even
00038954 <AmiBlitz3.ab3@29609> nodata   Dc.b "BSS Segment contains Data!!!!",0       : Even
0003895A <AmiBlitz3.ab3@29614>   TST.b exdebug
0003895E <AmiBlitz3.ab3@29615>   BNE 'l10
00038964 <AmiBlitz3.ab3@29616>   MOVE.l #$4e71,d1
0003896A <AmiBlitz3.ab3@29617>   JSR writeword
00038970 <AmiBlitz3.ab3@29618>   MOVE.l destpointer,d0
00038972 <AmiBlitz3.ab3@29619>   MOVE.l d0,d1
00038974 <AmiBlitz3.ab3@29620>   ADDQ.l #3,d1
0003897A <AmiBlitz3.ab3@29621>   AND.l #$fffffffc,d1
00038980 <AmiBlitz3.ab3@29622>   MOVE.l d1,destpointer
00038986 <AmiBlitz3.ab3@29623>   SUB.l destpointer,d0
0003898A <AmiBlitz3.ab3@29624>   BEQ 'lnf1
00038994 <AmiBlitz3.ab3@29625>   CMP.l #-1,bssstart
00038998 <AmiBlitz3.ab3@29626>   BNE 'lnf1
000389A2 <AmiBlitz3.ab3@29627>   CMP.l #-1,chipstart
000389A6 <AmiBlitz3.ab3@29628>   BNE 'lnf1
000389AC <AmiBlitz3.ab3@29629>   MOVE.l destpointer,a4
000389B2 <AmiBlitz3.ab3@29630>   TST.w dontwrite_nomemleft
000389B6 <AmiBlitz3.ab3@29631>   BNE 'lnf1
000389BC <AmiBlitz3.ab3@29632>   MOVE.w #$4e71,-2(a4)
000389C6 <AmiBlitz3.ab3@29635>   CMP.l #-1,bssstart
000389CA <AmiBlitz3.ab3@29636>   BEQ 'l11
000389D0 <AmiBlitz3.ab3@29637>   MOVE.l #erro1t,-(a7)
000389D6 <AmiBlitz3.ab3@29638>  JMP handle_compileerror
000389E0 <AmiBlitz3.ab3@29641>   MOVE.l destpointer,bssstart
000389E8 <AmiBlitz3.ab3@29642>   MOVE.b #1,bssmode
000389EE <AmiBlitz3.ab3@29645>   TST.b chipmode
000389F2 <AmiBlitz3.ab3@29646>   BEQ 'l10
000389FC <AmiBlitz3.ab3@29647>   MOVE.l destpointer,chipend
00038A02 <AmiBlitz3.ab3@29648>   CLR.b chipmode
00038A08 <AmiBlitz3.ab3@29651>   JSR get1bytemain
00038A0A <AmiBlitz3.ab3@29652> RTS
00038A10 <AmiBlitz3.ab3@29656>    TST.b exdebug
00038A14 <AmiBlitz3.ab3@29657>   BNE 'x1
00038A1A <AmiBlitz3.ab3@29658>   MOVE.l destpointer,d0
00038A20 <AmiBlitz3.ab3@29659>   MOVE.l d0,realbssend
00038A26 <AmiBlitz3.ab3@29660>   MOVE.l #$4e71,d1
00038A2C <AmiBlitz3.ab3@29661>   JSR writeword
00038A32 <AmiBlitz3.ab3@29662>   MOVE.l destpointer,d0
00038A34 <AmiBlitz3.ab3@29663>   MOVE.l d0,d1
00038A36 <AmiBlitz3.ab3@29664>   ADDQ.l #3,d1
00038A3C <AmiBlitz3.ab3@29665>   AND.l #$fffffffc,d1
00038A42 <AmiBlitz3.ab3@29666>   MOVE.l d1,destpointer
00038A48 <AmiBlitz3.ab3@29667>   SUB.l destpointer,d0
00038A4C <AmiBlitz3.ab3@29668>   BEQ 'lnf1
00038A52 <AmiBlitz3.ab3@29669>   MOVE.l destpointer,a4
00038A5C <AmiBlitz3.ab3@29670>   CMP.l #-1,bssstart
00038A60 <AmiBlitz3.ab3@29671>   BNE 'lnf1
00038A6A <AmiBlitz3.ab3@29672>   CMP.l #-1,chipstart
00038A6E <AmiBlitz3.ab3@29673>   BNE 'lnf1
00038A74 <AmiBlitz3.ab3@29674>   TST.w dontwrite_nomemleft
00038A78 <AmiBlitz3.ab3@29675>   BNE 'lnf1
00038A7E <AmiBlitz3.ab3@29676>   MOVE.w #$4e71,-2(a4)
00038A84 <AmiBlitz3.ab3@29679>   TST.b bssmode
00038A88 <AmiBlitz3.ab3@29680>   BEQ 'l10
00038A92 <AmiBlitz3.ab3@29681>   MOVE.l destpointer,bssend
00038A98 <AmiBlitz3.ab3@29682>   CLR.b bssmode
00038AA2 <AmiBlitz3.ab3@29687>   CMP.l #-1,chipstart
00038AA6 <AmiBlitz3.ab3@29688>   BEQ 'l11
00038AAC <AmiBlitz3.ab3@29689>   MOVE.l #erro1t,-(a7)
00038AB2 <AmiBlitz3.ab3@29690>  JMP handle_compileerror
00038ABC <AmiBlitz3.ab3@29693>   MOVE.l destpointer,chipstart
00038AC4 <AmiBlitz3.ab3@29694>   MOVE.b #1,chipmode
00038ACA <AmiBlitz3.ab3@29697>   JSR get1bytemain
00038ACC <AmiBlitz3.ab3@29698> RTS
00038AF6 <AmiBlitz3.ab3@29702>   !basic
00038B08 <AmiBlitz3.ab3@29712>   i.l = Peek.w(?ininclude)
00038B2E <AmiBlitz3.ab3@29713>   If i>=0 AND i<#maxincludes
00038B60 <AmiBlitz3.ab3@29714>     incdim (i) = Peek.s(?includetemp2)
00038B7A <AmiBlitz3.ab3@29715>     incline(i) = Peek.l(?includeline)
00038B84 <AmiBlitz3.ab3@29717>     If CLIMode
00038C32 <AmiBlitz3.ab3@29718>       If cli_verbose>=2 Then NPrint "Include \\22",incdim(i),"\\22..."
00038C50 <AmiBlitz3.ab3@29722>   !asm
00038C52 <AmiBlitz3.ab3@29723> RTS
00038C7C <AmiBlitz3.ab3@29727>   !basic
00038C8E <AmiBlitz3.ab3@29728>   i.l = Peek.w(?ininclude)
00038CB4 <AmiBlitz3.ab3@29729>   If i>=0 AND i<#maxincludes
00038CE4 <AmiBlitz3.ab3@29730>     incdim (i) = ""
00038CF8 <AmiBlitz3.ab3@29731>     incline(i) = 0
00038D30 <AmiBlitz3.ab3@29732>     If i>0 Then Poke.l (?includeline),incline(i-1)+1
00038D4E <AmiBlitz3.ab3@29734>   !asm
00038D50 <AmiBlitz3.ab3@29735> RTS
00038D56 <AmiBlitz3.ab3@29739>   LEA replacedat,a0
00038D5A <AmiBlitz3.ab3@29740>   Dc.w $3181,$0A00                                         ;MOVE.w d1,0(a0,d0.l*2)
00038D5C <AmiBlitz3.ab3@29741> RTS
00038D62 <AmiBlitz3.ab3@29745>   TST.b fpu
00038D66 <AmiBlitz3.ab3@29746>   BEQ 'l1
00038D70 <AmiBlitz3.ab3@29749>   MOVE.l destpointer,newinitaddr
00038D76 <AmiBlitz3.ab3@29750>   JSR writeword
00038D7C <AmiBlitz3.ab3@29751>   JSR writelong
00038D7E <AmiBlitz3.ab3@29752> RTS
00038D80 <AmiBlitz3.ab3@29757>   TST.b (a5)
00038D84 <AmiBlitz3.ab3@29758>    BEQ.s 'll20
00038D88 <AmiBlitz3.ab3@29759>   CMP.b #$20,(a5)
00038D8C <AmiBlitz3.ab3@29760>    BNE.s 'll10
00038D8E <AmiBlitz3.ab3@29761>   ADDQ.l #1,a5
00038D92 <AmiBlitz3.ab3@29762>  BRA.s 'll21
00038D96 <AmiBlitz3.ab3@29765>   CMP.b #";",(a5)
00038D9A <AmiBlitz3.ab3@29766>   BNE.s 'll20
00038D9C <AmiBlitz3.ab3@29769>   TST.b (a5)+
00038DA0 <AmiBlitz3.ab3@29770>   BEQ.s 'll23
00038DA4 <AmiBlitz3.ab3@29771>  BRA.s 'll25
00038DA6 <AmiBlitz3.ab3@29774>   SUBQ.l #1,a5
00038DA8 <AmiBlitz3.ab3@29777> RTS
00038DAC <AmiBlitz3.ab3@29781>   MOVEM.l a2/d2,-(a7)
00038DAE <AmiBlitz3.ab3@29782>   MOVEQ #0,d2
00038DB4 <AmiBlitz3.ab3@29783>   LEA ptr_parameterstore,a0
00038DBA <AmiBlitz3.ab3@29784>   LEA chartab,a2
00038DBC <AmiBlitz3.ab3@29787>   MOVE.b (a5),d0
00038DC0 <AmiBlitz3.ab3@29788>   TST.b 0(a2,d0)
00038DC4 <AmiBlitz3.ab3@29789>   BNE 'l10
00038DC6 <AmiBlitz3.ab3@29790>   ADDQ.l #1,a5
00038DC8 <AmiBlitz3.ab3@29791>   MOVE.b d0,(a0)+
00038DCA <AmiBlitz3.ab3@29792>   ADDQ.l #1,d2
00038DCE <AmiBlitz3.ab3@29793>  BRA fc2
00038DD0 <AmiBlitz3.ab3@29796>   CLR.b (a0)+
00038DD6 <AmiBlitz3.ab3@29797>   JSR findlabel2
00038DD8 <AmiBlitz3.ab3@29798>   MOVE.l a2,a0
00038DDC <AmiBlitz3.ab3@29799>   MOVEM.l (a7)+,a2/d2
00038DDE <AmiBlitz3.ab3@29800> RTS
00038DE0 <AmiBlitz3.ab3@29804>   TST.l d0
00038DE4 <AmiBlitz3.ab3@29805>   BNE 'l10
00038DEA <AmiBlitz3.ab3@29806>     MOVE.l #syntax_,-(a7)
00038DF0 <AmiBlitz3.ab3@29807>  JMP handle_compileerror
00038DF6 <AmiBlitz3.ab3@29810>   CMP.l #1,d0
00038DFA <AmiBlitz3.ab3@29811>   BNE 'l20
00038E00 <AmiBlitz3.ab3@29812>     MOVE.l #overflow,-(a7)
00038E06 <AmiBlitz3.ab3@29813>  JMP handle_compileerror
00038E08 <AmiBlitz3.ab3@29816>   ADD.l a2,d0
00038E0A <AmiBlitz3.ab3@29817>   MOVE.l d0,-(a7)
00038E10 <AmiBlitz3.ab3@29818> JMP handle_compileerror
00038E16 <AmiBlitz3.ab3@29822>   JMP _return
00038E1C <AmiBlitz3.ab3@29823>   JMP _return
00038E22 <AmiBlitz3.ab3@29824>   JMP _return
00038E28 <AmiBlitz3.ab3@29825>   JMP _return
00038E2E <AmiBlitz3.ab3@29826>   JMP _return
00038E34 <AmiBlitz3.ab3@29827>   JMP _return
00038E3A <AmiBlitz3.ab3@29828>   JMP _return
00038E40 <AmiBlitz3.ab3@29829>   JMP _return
00038E46 <AmiBlitz3.ab3@29830>   JMP _return
00038E4C <AmiBlitz3.ab3@29831>   JMP _return
00038E52 <AmiBlitz3.ab3@29832>   JMP Atokejsr
00038E58 <AmiBlitz3.ab3@29833>   JMP writeinit
00038E5E <AmiBlitz3.ab3@29834>   JMP macroexecute
00038E64 <AmiBlitz3.ab3@29835>   JMP findnext
00038E6A <AmiBlitz3.ab3@29836>   JMP replacelib
00038E70 <AmiBlitz3.ab3@29837>   JMP findconstant2
00038E76 <AmiBlitz3.ab3@29838>   JMP findchar                                             ;char in d1
00038E7C <AmiBlitz3.ab3@29839>   JMP stripspaces
00038E82 <AmiBlitz3.ab3@29840>   JMP calc                                                 ;d0 varmode
00038E88 <AmiBlitz3.ab3@29841>   JMP error
00038E8E <AmiBlitz3.ab3@29842>   JMP writelong                                            ;d1 value
00038E94 <AmiBlitz3.ab3@29843>   JMP writeword                                            ;d1 value
00038E9A <AmiBlitz3.ab3@29844>   JMP writebyte                                            ;d1 value
00038EA0 <AmiBlitz3.ab3@29845> JMP exit
00038EA4 <AmiBlitz3.ab3@29849>   destpointer:    Ds.l 1                                ;pc org source      ;Ds.w 1
00038EA6 <AmiBlitz3.ab3@29852>   fast            Dc.w 0
00038EA8 <AmiBlitz3.ab3@29853>   fpu             Dc.w 0
00038EAA <AmiBlitz3.ab3@29854>   newsyntax       Dc.w 0
00038EAB <AmiBlitz3.ab3@29856>   optistring      Dc.b 0
00038EAC <AmiBlitz3.ab3@29857>   optistring2     Dc.b 0
00038EAD <AmiBlitz3.ab3@29858>   optiarray       Dc.b 0
00038EAE <AmiBlitz3.ab3@29859>   quickadd        Dc.b 0
00038EB0 <AmiBlitz3.ab3@29860>   newmode         Dc.w 0
00038EB2 <AmiBlitz3.ab3@29861>   mode            Dc.w 0
00038EB4 <AmiBlitz3.ab3@29862>   string1         Dc.w 0
00038EB6 <AmiBlitz3.ab3@29863>   load_var_size   Dc.w 0
00038EB8 <AmiBlitz3.ab3@29864>   load_var_reg    Dc.w 0
00038EBC <AmiBlitz3.ab3@29865>   load_var_addr   Dc.l 0
00038EBE <AmiBlitz3.ab3@29866>   imm_size        Dc.w 0
00038EC0 <AmiBlitz3.ab3@29867>   imm_reg         Dc.w 0
00038EC4 <AmiBlitz3.ab3@29868>   imm_addr        Dc.l 0
00038EC5 <AmiBlitz3.ab3@29869>   iee             Dc.b 0
00038EC6 <AmiBlitz3.ab3@29870>   _dcb            Dc.b 0
00038ECA <AmiBlitz3.ab3@29871>   nohunkoffset    Dc.l 0
00038ECE <AmiBlitz3.ab3@29874> teddata:        Dc.l tokens
00038ED2 <AmiBlitz3.ab3@29875>                 Dc.l 0 ;compilermenu_entries               ; NOT used anymore
00038ED6 <AmiBlitz3.ab3@29876>                 Dc.l read_xtrafile
00038EDA <AmiBlitz3.ab3@29877>                 Dc.l write_xtrafile
00038EDE <AmiBlitz3.ab3@29878>                 Dc.l call_menuentry                        ; compile AND RUN ?
00038EE2 <AmiBlitz3.ab3@29879>                 Dc.l 0
00038EE6 <AmiBlitz3.ab3@29880>                 Dc.b ":",34,".;"
00038EEA <AmiBlitz3.ab3@29881>                 Dc.l "NEW1"
00038EEE <AmiBlitz3.ab3@29882>                 Dc.l newtypebase
00038EF2 <AmiBlitz3.ab3@29883> realconstbase:  Dc.l labelbase
00038EF6 <AmiBlitz3.ab3@29884> deflib          Dc.l 0
00038EFA <AmiBlitz3.ab3@29885> incd            Dc.l 0
00038EFE <AmiBlitz3.ab3@29886>                 Dc.l 0
00038F02 <AmiBlitz3.ab3@29887>                 Dc.l 0
00038F06 <AmiBlitz3.ab3@29888>                 Dc.l 0
00038F08 <AmiBlitz3.ab3@29889> _return         RTS
00038F09 <AmiBlitz3.ab3@29890>                 Dc.b 0
00039309 <AmiBlitz3.ab3@29891> chartab2        Ds.l 256
0003930D <AmiBlitz3.ab3@29892> codeend         Dc.l 0
00039311 <AmiBlitz3.ab3@29893> hunkoffsetnum   Dc.l 0
00039315 <AmiBlitz3.ab3@29894> chipsize        Dc.l 0
00039319 <AmiBlitz3.ab3@29895> bsssize         Dc.l 0
0003931D <AmiBlitz3.ab3@29896> bssstart        Dc.l -1
00039321 <AmiBlitz3.ab3@29897> bssend          Dc.l -1
00039325 <AmiBlitz3.ab3@29898> chipstart       Dc.l -1
00039329 <AmiBlitz3.ab3@29899> chipend         Dc.l -1
0003932A <AmiBlitz3.ab3@29900> bssmode         Dc.b 0
0003932B <AmiBlitz3.ab3@29901> chipmode        Dc.b 0
0003932C <AmiBlitz3.ab3@29902> newhunk         Dc.b 0
00039330 <AmiBlitz3.ab3@29903> bssnum          Dc.l 0
00039334 <AmiBlitz3.ab3@29904> chipnum         Dc.l 0
00039338 <AmiBlitz3.ab3@29905> lastinstruction Dc.l 0
0003933C <AmiBlitz3.ab3@29906> lastinstructionaddr Dc.l 0
00039350 <AmiBlitz3.ab3@29907> hunkbegin       Dc.l $03F3,$00,$02,$00,$01
00039354 <AmiBlitz3.ab3@29908> tstsize1b:      Ds.l 1
00039358 <AmiBlitz3.ab3@29909> bsssize2        Dc.l 1
0003935C <AmiBlitz3.ab3@29910>                 Dc.l $03E9
00039360 <AmiBlitz3.ab3@29911> tstsize2b:      Dc.l $100
00039374 <AmiBlitz3.ab3@29912> hunkbegin2      Dc.l $03F3,$00,$03,$00,$02
00039378 <AmiBlitz3.ab3@29913> tstsize1c:      Ds.l 1
0003937C <AmiBlitz3.ab3@29914> bsssize3        Dc.l 1
00039380 <AmiBlitz3.ab3@29915> chipsize2       Dc.l 1
00039384 <AmiBlitz3.ab3@29916>                 Dc.l $3e9
00039388 <AmiBlitz3.ab3@29917> tstsize2c       Dc.l 0
00039398 <AmiBlitz3.ab3@29918> hunkend         Dc.l $3f2,$3eb,0,$3f2
000393A8 <AmiBlitz3.ab3@29919> hunkend2        Dc.l $3f2,$3ea,0,$3f2
000393AF <AmiBlitz3.ab3@29920> strcpy          Dc.b "strcpy",0
000393B6 <AmiBlitz3.ab3@29921> strcmp          Dc.b "strcmp",0
000393BD <AmiBlitz3.ab3@29922> strvar          Dc.b "strvar",0
000393C2 <AmiBlitz3.ab3@29923> qmul            Dc.b "qmul",0
000393C7 <AmiBlitz3.ab3@29924> qdiv            Dc.b "qdiv",0
000393CE <AmiBlitz3.ab3@29925> _MaxLen         Dc.b "maxlen",0
000393D3 <AmiBlitz3.ab3@29926> notf            Dc.b "????",0
000393F6 <AmiBlitz3.ab3@29928> errtext         Dc.b "only reg addressing Mode supported",0
00039420 <AmiBlitz3.ab3@29929> fpuerr          Dc.b "Instruction not yet supported by 68K FPU ",0
00039462 <AmiBlitz3.ab3@29930> cmplxerr        Dc.b "Formula too complex for 68K FPU or too much regload register used",0 : Even
00039464 <AmiBlitz3.ab3@29931> peeksize        Dc.w 0
00039468 <AmiBlitz3.ab3@29933> mainstart       Dc.l 0
00039469 <AmiBlitz3.ab3@29935> infunctioncode  Dc.b 0
0003946B <AmiBlitz3.ab3@29936> regnumstore     Dc.w 0
00039496 <AmiBlitz3.ab3@29937>                 Dc.b "$VER: AmiBlitz3 \\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
0003949E <AmiBlitz3.ab3@29938> testcode        Dc.b "print i",0
00039502 <AmiBlitz3.ab3@29939>                 Ds.b 100
00039510 <AmiBlitz3.ab3@29940> devo            Dc.b "developobject",0 : Even
00039522 <AmiBlitz3.ab3@29941> autostorename   Dc.b "__autoconstantnum",0
0003952C <AmiBlitz3.ab3@29942> _include        Dc.b "__include",0
00039534 <AmiBlitz3.ab3@29943> _debug          Dc.b "__debug",0
00039538 <AmiBlitz3.ab3@29944> unusedfunc      Dc.l 0
0003953A <AmiBlitz3.ab3@29948>   MOVE.l a0,d0
00039564 <AmiBlitz3.ab3@29949>   !basic
00039568 <AmiBlitz3.ab3@29950>   *olderror.l= PutD0
000395C2 <AmiBlitz3.ab3@29951> 
000395F6 <AmiBlitz3.ab3@29952>   error_type$ = error$    ; needed for stdout_error
00039692 <AmiBlitz3.ab3@29953> 
000396A6 <AmiBlitz3.ab3@29954>   If Peek.l (?beforeparameterfetch)
000396BC <AmiBlitz3.ab3@29955>     MaxLen detokenline.s = #MAX_Columns+1        ; was 65536  changed it to the max size of a sourceline  tomsmart1
000396FE <AmiBlitz3.ab3@29956>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0003970E <AmiBlitz3.ab3@29957>    *tn.preprocessor = Peek.l(?include_preprocessor)
00039738 <AmiBlitz3.ab3@29958>     written.l = preproc_DetokenizeLine{*tn,Peek.l (?beforeparameterfetch),&detokenline}
00039760 <AmiBlitz3.ab3@29959>     If written>0 Then Poke.b &detokenline+written,0
000397A4 <AmiBlitz3.ab3@29960>     If written>40 Then Poke.s &detokenline+36,"..."   ; added to limit the wide of the error requester  tomsmart1
000397CE <AmiBlitz3.ab3@29961>     sourceLineText.s = Peek.s(&detokenline)
000397D4 <AmiBlitz3.ab3@29962>   Else
000397FC <AmiBlitz3.ab3@29963>     sourceLineText = "NULL"
00039830 <AmiBlitz3.ab3@29965>   error_source$ = sourceLineText  ; needed for stdout_error
00039882 <AmiBlitz3.ab3@29966>   error$ + sourceLineText
00039888 <AmiBlitz3.ab3@29967>   GetD0 &error$
000398A6 <AmiBlitz3.ab3@29968>   !asm
000398A8 <AmiBlitz3.ab3@29969>   MOVE.l d0,a0
000398AA <AmiBlitz3.ab3@29970> RTS
000398AC <AmiBlitz3.ab3@29974>   MOVE.l a0,-(a7)
000398AE <AmiBlitz3.ab3@29975>   MOVE.l a0,d0
000398B0 <AmiBlitz3.ab3@29976>   MOVE.l a5,a0                                             ;macro title
000398DA <AmiBlitz3.ab3@29977>   !basic
000398DE <AmiBlitz3.ab3@29978>   i = PutD0
000398E0 <AmiBlitz3.ab3@29979>   MOVEQ #20,d0
000398E2 <AmiBlitz3.ab3@29982>     MOVE.b -(a0),d1
000398E6 <AmiBlitz3.ab3@29983>     BEQ 'l1
000398EA <AmiBlitz3.ab3@29984>     CMP.b #":",d1
000398EE <AmiBlitz3.ab3@29985>     BEQ 'l1
000398F0 <AmiBlitz3.ab3@29986>     SUBQ.l #1,d0
000398F4 <AmiBlitz3.ab3@29987>     BNE 'l2
000398F6 <AmiBlitz3.ab3@29990>   ADDQ #1,a0
000398F8 <AmiBlitz3.ab3@29991>   MOVE.l a0,d0
000398FC <AmiBlitz3.ab3@29992>   i2.l = PutD0
00039918 <AmiBlitz3.ab3@29993>   If Peek.w (?ininclude)>0
00039972 <AmiBlitz3.ab3@29994>     Poke.s (?includetemp2),incdim(Peek.w(?ininclude)-1)
00039982 <AmiBlitz3.ab3@29995>     errorline.l = Peek.l(?includeline);-1
000399AA <AmiBlitz3.ab3@29996>     Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
000399D4 <AmiBlitz3.ab3@29997>     errorfile.s = Peek.s(?includetemp2)
000399DA <AmiBlitz3.ab3@29998>   Else
00039A12 <AmiBlitz3.ab3@29999>     Poke.s (?includetemp2),Peek.s(?ptr_parameterstore)
00039A28 <AmiBlitz3.ab3@30000>     errorline.l = Peek.l(?compilelinecounter) + 1
00039A5C <AmiBlitz3.ab3@30001>     errorfile.s = cli_sourcefile
00039A66 <AmiBlitz3.ab3@30004>   If i
00039B0A <AmiBlitz3.ab3@30005>     errortext.s = !TRANS{Replace$(Peek.s(i),"\\0a","\n")}
00039B88 <AmiBlitz3.ab3@30006>     errortext.s = Replace$(errortext,"\n","\\0a")
00039B8E <AmiBlitz3.ab3@30007>   Else
00039BB6 <AmiBlitz3.ab3@30008>     errortext.s = "???"
00039D2E <AmiBlitz3.ab3@30011>   NPrint "\\1b[1m",!TRANS{"Compiler Error"}," #",Peek.l(?errorcounter)," <",errorfile,"@",errorline,">\\1b[0m "
00039DF6 <AmiBlitz3.ab3@30012>   NPrint "  ",error_type$,"\\n  ",error_source$
00039E14 <AmiBlitz3.ab3@30016>   !asm
00039E16 <AmiBlitz3.ab3@30017>   MOVE.l (a7)+,a0
00039E18 <AmiBlitz3.ab3@30018> RTS
00039E1A <AmiBlitz3.ab3@30022>   MOVE.l a0,-(a7)
00039E1C <AmiBlitz3.ab3@30023>   MOVE.l a0,d0
00039E1E <AmiBlitz3.ab3@30024>   MOVE.l a5,a0                                             ;macro title
00039E48 <AmiBlitz3.ab3@30025>   !basic
00039E4C <AmiBlitz3.ab3@30026>   i = PutD0
00039E4E <AmiBlitz3.ab3@30027>   MOVEQ #20,d0
00039E50 <AmiBlitz3.ab3@30030>     MOVE.b -(a0),d1
00039E54 <AmiBlitz3.ab3@30031>     BEQ 'l1
00039E58 <AmiBlitz3.ab3@30032>     CMP.b #":",d1
00039E5C <AmiBlitz3.ab3@30033>     BEQ 'l1
00039E5E <AmiBlitz3.ab3@30034>     SUBQ.l #1,d0
00039E62 <AmiBlitz3.ab3@30035>     BNE 'l2
00039E64 <AmiBlitz3.ab3@30038>   ADDQ #1,a0
00039E66 <AmiBlitz3.ab3@30039>   MOVE.l a0,d0
00039E6A <AmiBlitz3.ab3@30040>   i2.l = PutD0
00039EEE <AmiBlitz3.ab3@30041>   fid.l = file_Open{dos_AddPart{my_systemdir$,"ab_compileerror.txt"},#file_forcewrite}
00039F02 <AmiBlitz3.ab3@30042>   If fid <> -1
00039F1E <AmiBlitz3.ab3@30043>     If Peek.w (?ininclude)>0
00039F78 <AmiBlitz3.ab3@30044>       Poke$(?includetemp2),incdim(Peek.w(?ininclude)-1)
00039F7E <AmiBlitz3.ab3@30045>     Else
00039FAA <AmiBlitz3.ab3@30046>       Poke$(?includetemp2),""
00039FD4 <AmiBlitz3.ab3@30048>     a$ = Peek$(?includetemp2)
0003A046 <AmiBlitz3.ab3@30049>     x$ = Replace$(Peek$(i),"\\0a","\n")
0003A078 <AmiBlitz3.ab3@30050>     file_WriteLine{fid,x$}
0003A0C2 <AmiBlitz3.ab3@30051>     file_WriteLine{fid,Str$(Peek.l(?compilelinecounter) + 1)}
0003A0EE <AmiBlitz3.ab3@30052>     If a$
0003A120 <AmiBlitz3.ab3@30053>       file_WriteLine{fid,a$}
0003A16A <AmiBlitz3.ab3@30054>       file_WriteLine{fid,Str$(Peek.l(?includeline)-1)}
0003A192 <AmiBlitz3.ab3@30055>       Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
0003A198 <AmiBlitz3.ab3@30056>     Else
0003A1BE <AmiBlitz3.ab3@30057>       file_WriteLine{fid,"none"}
0003A1EE <AmiBlitz3.ab3@30059>     file_WriteLine{fid,Peek$(i2)}
0003A244 <AmiBlitz3.ab3@30060>     file_WriteLine{fid,Str$(Peek.l(?globallinecount))+" line(s) compiled"}
0003A28E <AmiBlitz3.ab3@30061>     file_WriteLine{fid,Hex$(Peek.w(?globalvarpointer))+" global var base"}
0003A298 <AmiBlitz3.ab3@30062>     file_Close{fid}
0003A2B6 <AmiBlitz3.ab3@30064>   !asm
0003A2B8 <AmiBlitz3.ab3@30065>   MOVE.l (a7)+,a0
0003A2BA <AmiBlitz3.ab3@30066> RTS
0003A2E4 <AmiBlitz3.ab3@30070>   !basic
0003A2E8 <AmiBlitz3.ab3@30071>   progress.l     = PutD0
0003A2FA <AmiBlitz3.ab3@30072>   total.l        = Peek.w(?progressbar_width)
0003A318 <AmiBlitz3.ab3@30073>   calcpro        = (progress * 100) / total +1
0003A330 <AmiBlitz3.ab3@30074>   pass.l         = Peek.w(?pass) + 1           ; added +1 so the shown status info begin with 1 instead of 0  tomsmart1
0003A342 <AmiBlitz3.ab3@30075>   typ.l          = Peek.w(?compiler_job)
0003A360 <AmiBlitz3.ab3@30078>   If (pass><pass_old) OR (typ><typ_old)
0003A36E <AmiBlitz3.ab3@30080>     If pass_old><pass
0003A40A <AmiBlitz3.ab3@30081>       passtatusstr.s = !TRANS{"Pass"}+" "+Str$(pass)+"..."
0003A460 <AmiBlitz3.ab3@30082>       If cli_verbose>=1 Then NPrint passtatusstr        ; changed form 2 to get compilepass number in verbose mode 1  tomsmart1
0003A466 <AmiBlitz3.ab3@30085>     pass_old = pass
0003A46C <AmiBlitz3.ab3@30086>     typ_old  = typ
0003A472 <AmiBlitz3.ab3@30087>     update_comstatus_gui = True
0003A484 <AmiBlitz3.ab3@30088>     If typ=0
0003A564 <AmiBlitz3.ab3@30089>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Compiling Sources..."}
0003A56C <AmiBlitz3.ab3@30090>       calcpro = 0  ; set gauge to 0
0003A57E <AmiBlitz3.ab3@30092>     If typ=1
0003A65E <AmiBlitz3.ab3@30093>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Building Executable..."}
0003A666 <AmiBlitz3.ab3@30094>       calcpro = 0  ; set gauge to 0
0003A6BC <AmiBlitz3.ab3@30097>     If cli_verbose>=3 Then NPrint comstatusstr
0003A6CA <AmiBlitz3.ab3@30100>   If (calcpro >< calcpro_old)
0003A71E <AmiBlitz3.ab3@30101>     If cli_verbose>=4 Then NPrint calcpro,"% compiled..."
0003A724 <AmiBlitz3.ab3@30102>     calcpro_old = calcpro
0003A72A <AmiBlitz3.ab3@30103>     update_comstatus_gui = True
0003A744 <AmiBlitz3.ab3@30106>   If update_comstatus_gui = True                                     ; check if a update of the gui nessecary
0003A762 <AmiBlitz3.ab3@30107>     !asm
0003A794 <AmiBlitz3.ab3@30108> 
0003A7BE <AmiBlitz3.ab3@30109>     !basic
0003A7C4 <AmiBlitz3.ab3@30110>     update_comstatus_gui  = False ; because we update the gui
0003A7E2 <AmiBlitz3.ab3@30112>   !asm
0003A7E4 <AmiBlitz3.ab3@30113> RTS
0003A7EA <AmiBlitz3.ab3@30118>   MOVE.w maxobject_pos,D5                                  ;max objects 1. visible
0003A7F0 <AmiBlitz3.ab3@30119>   LEA maxobjects_value,A3                                  ;current value
0003A7F6 <AmiBlitz3.ab3@30120>   MOVEA.l libpointer,A2
0003A7FA <AmiBlitz3.ab3@30123>   CMPA.w #$0,A2
0003A7FE <AmiBlitz3.ab3@30124>   BEQ.w 'igot
0003A800 <AmiBlitz3.ab3@30125>   MOVEA.l A2,A1
0003A804 <AmiBlitz3.ab3@30126>   ADDA.l $12(A1),A1
0003A808 <AmiBlitz3.ab3@30127>   TST.w -$2(A1)
0003A80C <AmiBlitz3.ab3@30128>   BEQ.w 'ugwl2
0003A80E <AmiBlitz3.ab3@30129>   SUBQ.w #1,D5
0003A812 <AmiBlitz3.ab3@30130>   BMI.w 'ugw2
0003A814 <AmiBlitz3.ab3@30133>   MOVEA.l (A2),A2
0003A818 <AmiBlitz3.ab3@30134>  BRA.w 'ugwl
0003A81C <AmiBlitz3.ab3@30137>   MOVE.w (A3),-$4(A1)
0003A81E <AmiBlitz3.ab3@30140> RTS
0003A824 <AmiBlitz3.ab3@30144>   MOVE.w debugnest,d0
0003A82A <AmiBlitz3.ab3@30145>   LEA storedebugmode, a0
0003A832 <AmiBlitz3.ab3@30146>   MOVE.b 0(a0,d0.w),debugmode
0003A838 <AmiBlitz3.ab3@30147>   TST.w debugnest
0003A83C <AmiBlitz3.ab3@30148>   BEQ JUMP_unpairrunerrs
0003A842 <AmiBlitz3.ab3@30149>   SUBQ.w #1,debugnest
0003A844 <AmiBlitz3.ab3@30150> RTS
0003A84A <AmiBlitz3.ab3@30152> JUMP_runerrsoverflow JMP runerrsoverflow
0003A850 <AmiBlitz3.ab3@30153> JUMP_unpairrunerrs   JMP unpairrunerrs
0003A858 <AmiBlitz3.ab3@30157>   BCHG #$7,use_debugger
0003A860 <AmiBlitz3.ab3@30159>   BTST #$7,use_debugger
0003A864 <AmiBlitz3.ab3@30160>   BNE 'debugon
0003A86A <AmiBlitz3.ab3@30161>   CLR.w debugmode
0003A86E <AmiBlitz3.ab3@30162>  BRA.b 'debugoff
0003A874 <AmiBlitz3.ab3@30165>   SNE debugmode
0003A876 <AmiBlitz3.ab3@30168>   MOVE.l a0,-(a7)
0003A8AE <AmiBlitz3.ab3@30171>   !ComData_SetB{comByte_DebugMode,debugmode}
0003A8B0 <AmiBlitz3.ab3@30176>   MOVE.l (a7)+,a0
0003A8B2 <AmiBlitz3.ab3@30177> RTS
0003A8BA <AmiBlitz3.ab3@30182>   BTST #$7,use_debugger
0003A8BE <AmiBlitz3.ab3@30184>   BNE 'debugon
0003A8C4 <AmiBlitz3.ab3@30185>   CLR.w debugmode
0003A8C8 <AmiBlitz3.ab3@30186>  BRA.b 'debugoff
0003A8CE <AmiBlitz3.ab3@30190>   SNE debugmode
0003A8D0 <AmiBlitz3.ab3@30193> RTS
0003A8D6 <AmiBlitz3.ab3@30198>   ADDQ.w #1,debugnest
0003A8DC <AmiBlitz3.ab3@30199>   MOVE.w debugnest,d0
0003A8E0 <AmiBlitz3.ab3@30200>   CMP.w #18,d0
0003A8E4 <AmiBlitz3.ab3@30201>    BGE JUMP_runerrsoverflow
0003A8EA <AmiBlitz3.ab3@30202>   LEA storedebugmode, a0
0003A8F2 <AmiBlitz3.ab3@30203>   MOVE.b debugmode,0( a0,d0.w)
0003A8F8 <AmiBlitz3.ab3@30207>   SF debugmode
0003A8FA <AmiBlitz3.ab3@30208> RTS
0003A97A <AmiBlitz3.ab3@30211> usedpath:  Ds.l 32
0003A97E <AmiBlitz3.ab3@30215>   BEQ.w JUMP_syntaxerr
0003A984 <AmiBlitz3.ab3@30216>   LEA lastpath,A0
0003A988 <AmiBlitz3.ab3@30218>   MOVEM.l a0-a1/d0,-(a7)
0003A98E <AmiBlitz3.ab3@30219>   LEA lastpath2,a1
0003A990 <AmiBlitz3.ab3@30222>     MOVE.b (a0)+,(a1)+
0003A994 <AmiBlitz3.ab3@30223>   BNE 'l2
0003A998 <AmiBlitz3.ab3@30224>   MOVEM.l (a7)+,a0-a1/d0
0003A99C <AmiBlitz3.ab3@30225>   LEA usedpath(PC),A0
0003A9A0 <AmiBlitz3.ab3@30226>   MOVEM.l a0-a1/d0,-(a7)
0003A9A6 <AmiBlitz3.ab3@30227>   LEA lastpath,a1
0003A9A8 <AmiBlitz3.ab3@30230>     MOVE.b (a0)+,(a1)+
0003A9AC <AmiBlitz3.ab3@30231>   BNE 'l1
0003A9B0 <AmiBlitz3.ab3@30232>   MOVEM.l (a7)+,a0-a1/d0
0003A9B2 <AmiBlitz3.ab3@30236>   TST.w D0
0003A9B6 <AmiBlitz3.ab3@30237>    BMI.w JUMP_syntaxerr
0003A9B8 <AmiBlitz3.ab3@30238>   MOVE.b D0,(A0)+
0003A9BC <AmiBlitz3.ab3@30239>   BSR.w JUMP_get1bytemain
0003A9C0 <AmiBlitz3.ab3@30240>    BNE.w 'loop
0003A9C4 <AmiBlitz3.ab3@30243>   MOVE.b #$2,(A0)
0003A9C6 <AmiBlitz3.ab3@30244> RTS
0003A9CA <AmiBlitz3.ab3@30248>   BEQ.w JUMP_syntaxerr
0003A9D0 <AmiBlitz3.ab3@30249>   LEA path2,A0
0003A9D2 <AmiBlitz3.ab3@30261>   TST.w D0
0003A9D6 <AmiBlitz3.ab3@30262>    BMI.w JUMP_syntaxerr
0003A9D8 <AmiBlitz3.ab3@30263>   MOVE.b D0,(A0)+
0003A9DC <AmiBlitz3.ab3@30264>   BSR.w JUMP_get1bytemain
0003A9E0 <AmiBlitz3.ab3@30265>    BNE.w 'loop
0003A9E4 <AmiBlitz3.ab3@30268>   MOVE.b #$2,(A0)
0003A9E6 <AmiBlitz3.ab3@30269> RTS
0003A9EC <AmiBlitz3.ab3@30272> JUMP_errormsg_reg JMP errormsg_reg
0003A9F6 <AmiBlitz3.ab3@30276>   MOVE.l #$f22d6780,fpucodeglobal
0003AA00 <AmiBlitz3.ab3@30277>   MOVE.l #$f22c6780,fpucodelocal
0003AA06 <AmiBlitz3.ab3@30278>   LEA regtable,a0
0003AA10 <AmiBlitz3.ab3@30279>   MOVE.l #7,maxregs
0003AA12 <AmiBlitz3.ab3@30282>   MOVE.l (a0),d0
0003AA16 <AmiBlitz3.ab3@30283>   BEQ 'e1
0003AA18 <AmiBlitz3.ab3@30284>   CLR.l (a0)
0003AA1C <AmiBlitz3.ab3@30285>   MOVE.w 4(a0),d0
0003AA26 <AmiBlitz3.ab3@30286>   MOVE.l fpucodeglobal,fpucode
0003AA2A <AmiBlitz3.ab3@30287>   TST.w 6(a0)
0003AA2E <AmiBlitz3.ab3@30288>   BEQ 'glob
0003AA38 <AmiBlitz3.ab3@30289>   MOVE.l fpucodelocal,fpucode
0003AA3E <AmiBlitz3.ab3@30292>   MOVE.l fpucode,d1
0003AA44 <AmiBlitz3.ab3@30293>   JSR writelong
0003AA4E <AmiBlitz3.ab3@30294>   SUB.l #$80,fpucodelocal
0003AA58 <AmiBlitz3.ab3@30295>   SUB.l #$80,fpucodeglobal
0003AA5A <AmiBlitz3.ab3@30296>   MOVE.w d0,d1
0003AA60 <AmiBlitz3.ab3@30297>   JSR writeword
0003AA62 <AmiBlitz3.ab3@30298>   ADDQ #8,a0
0003AA66 <AmiBlitz3.ab3@30299>  BRA 'again
0003AA68 <AmiBlitz3.ab3@30302> RTS
0003AA6E <AmiBlitz3.ab3@30305> JUMP_notypeerr2 JMP notypeerr
0003AA74 <AmiBlitz3.ab3@30306> JUMP_illtypeerr JMP illtypeerr
0003AA7E <AmiBlitz3.ab3@30309>   MOVE.l #$f22d4780,fpucodeglobal
0003AA88 <AmiBlitz3.ab3@30310>   MOVE.l #$f22c4780,fpucodelocal
0003AA8E <AmiBlitz3.ab3@30311>   LEA regtable,a0
0003AA90 <AmiBlitz3.ab3@30312>   TST.l (a0)
0003AA94 <AmiBlitz3.ab3@30313>    BNE JUMP_errormsg_reg
0003AA96 <AmiBlitz3.ab3@30314>   MOVE.l d7,-(a7)
0003AA98 <AmiBlitz3.ab3@30315>   SUBQ.l #1,a5
0003AA9E <AmiBlitz3.ab3@30318>   JSR getparameter2
0003AAA2 <AmiBlitz3.ab3@30319>   BEQ.w 'nopar
0003AAA8 <AmiBlitz3.ab3@30320>   MOVE.w d0,lastchar
0003AAAE <AmiBlitz3.ab3@30321>   JSR findvariable
0003AAB2 <AmiBlitz3.ab3@30322>   BNE 'islocal
0003AABC <AmiBlitz3.ab3@30323>   MOVE.l fpucodeglobal,fpucode
0003AAC6 <AmiBlitz3.ab3@30324>   MOVE.l #3,maxregs
0003AAC8 <AmiBlitz3.ab3@30325>   MOVEQ #0,d7
0003AAD0 <AmiBlitz3.ab3@30328>   CMP.l #newtype_float,$a(a2)                              ;is float type
0003AAD4 <AmiBlitz3.ab3@30329>    BEQ 'doit
0003AADC <AmiBlitz3.ab3@30330>   CMP.l #newtype_double,$a(a2)
0003AAE0 <AmiBlitz3.ab3@30331>    BNE JUMP_illtypeerr
0003AAE6 <AmiBlitz3.ab3@30334>   LEA regtable,a0
0003AAE8 <AmiBlitz3.ab3@30335>   MOVEQ #0,d0
0003AAEA <AmiBlitz3.ab3@30338>   TST.l (a0)
0003AAEE <AmiBlitz3.ab3@30339>    BEQ 'store
0003AAF0 <AmiBlitz3.ab3@30340>   ADDQ.l #4,d0
0003AAF2 <AmiBlitz3.ab3@30341>   ADDQ.l #8,a0
0003AAF8 <AmiBlitz3.ab3@30342>   CMP.l #16,d0
0003AAFC <AmiBlitz3.ab3@30343>    BCS 'loop
0003AB06 <AmiBlitz3.ab3@30344>   MOVE.l #2,maxregs
0003AB0C <AmiBlitz3.ab3@30345>   CMP.l #20,d0
0003AB10 <AmiBlitz3.ab3@30346>    BCS 'loop
0003AB1A <AmiBlitz3.ab3@30347>   MOVE.l #1,maxregs
0003AB20 <AmiBlitz3.ab3@30348>   CMP.l #24,d0
0003AB24 <AmiBlitz3.ab3@30349>    BCS 'loop
0003AB2A <AmiBlitz3.ab3@30350>  JMP toovarerr
0003AB30 <AmiBlitz3.ab3@30353>   TST.b fpu
0003AB34 <AmiBlitz3.ab3@30354>    BEQ 'nofpu
0003AB36 <AmiBlitz3.ab3@30355>   MOVE.l a2,(a0)
0003AB3C <AmiBlitz3.ab3@30356>   MOVE.w 4(a2),4(a0)
0003AB40 <AmiBlitz3.ab3@30357>   MOVE.w d7,6(a0)
0003AB46 <AmiBlitz3.ab3@30358>   MOVE.l fpucode,d1
0003AB50 <AmiBlitz3.ab3@30359>   SUB.l #$80,fpucodeglobal
0003AB5A <AmiBlitz3.ab3@30360>   SUB.l #$80,fpucodelocal
0003AB60 <AmiBlitz3.ab3@30361>   JSR writelong
0003AB64 <AmiBlitz3.ab3@30362>   MOVE.w 4(a2),d1
0003AB6A <AmiBlitz3.ab3@30363>   JSR writeword
0003AB70 <AmiBlitz3.ab3@30366>   MOVE.w lastchar,d0
0003AB74 <AmiBlitz3.ab3@30367>   CMP.w #":",d0
0003AB78 <AmiBlitz3.ab3@30368>    BEQ 'nopar
0003AB7A <AmiBlitz3.ab3@30369>   TST.w d0
0003AB7E <AmiBlitz3.ab3@30370>    BEQ 'nopar
0003AB82 <AmiBlitz3.ab3@30371>   CMP.w #",",d0
0003AB86 <AmiBlitz3.ab3@30372>   BNE JUMP_syntaxerr
0003AB8A <AmiBlitz3.ab3@30373>  BRA 'l2
0003AB8C <AmiBlitz3.ab3@30376>    MOVE.l (a7)+,d7
0003AB8E <AmiBlitz3.ab3@30377>  RTS
0003AB90 <AmiBlitz3.ab3@30380>   MOVEQ #1,d7
0003AB98 <AmiBlitz3.ab3@30381>   MOVE.b #1,newvariable
0003AB9E <AmiBlitz3.ab3@30382>   LEA firstlocal,a2
0003ABA4 <AmiBlitz3.ab3@30383>   JSR findvariable
0003ABAA <AmiBlitz3.ab3@30384>   CLR.b newvariable
0003ABB0 <AmiBlitz3.ab3@30385>   CMP.l #-1,d0
0003ABB4 <AmiBlitz3.ab3@30386>   BEQ.w JUMP_notypeerr2
0003ABBE <AmiBlitz3.ab3@30387>   MOVE.l fpucodelocal,fpucode
0003ABC2 <AmiBlitz3.ab3@30388>  BRA 'go
0003ABC6 <AmiBlitz3.ab3@30391>   CMP.b #".",d0
0003ABCA <AmiBlitz3.ab3@30392>    BNE 'l1
0003ABCE <AmiBlitz3.ab3@30393>   BSR JUMP_get1bytemain
0003ABD2 <AmiBlitz3.ab3@30394>   BSR JUMP_get1bytemain
0003ABD6 <AmiBlitz3.ab3@30397>   ORI .b #$20,d0
0003ABDA <AmiBlitz3.ab3@30398>   CMP.b #"d",d0
0003ABDE <AmiBlitz3.ab3@30399>    BNE JUMP_illeaerr
0003ABE2 <AmiBlitz3.ab3@30400>   BSR JUMP_get1bytemain
0003ABE6 <AmiBlitz3.ab3@30401>   SUB.b #$30,d0
0003ABEA <AmiBlitz3.ab3@30402>   CMP.b #$7,d0
0003ABEE <AmiBlitz3.ab3@30403>    BGT JUMP_syntaxerr
0003ABF2 <AmiBlitz3.ab3@30404>   MOVE.w #$49c0,d1
0003ABF4 <AmiBlitz3.ab3@30405>   ADD.b d0,d1
0003ABFA <AmiBlitz3.ab3@30406>   JSR writeword
0003ABFE <AmiBlitz3.ab3@30407>   BSR JUMP_get1bytemain
0003AC00 <AmiBlitz3.ab3@30408> RTS
0003AC06 <AmiBlitz3.ab3@30412>   LEA lastpath,a0
0003AC0A <AmiBlitz3.ab3@30413>   LEA usedpath(PC),A1
0003AC0C <AmiBlitz3.ab3@30416>     MOVE.b (a0)+,(a1)+
0003AC10 <AmiBlitz3.ab3@30417>   BNE 'l1
0003AC16 <AmiBlitz3.ab3@30419>   LEA lastpath2,a0
0003AC1C <AmiBlitz3.ab3@30420>   LEA lastpath,A1
0003AC1E <AmiBlitz3.ab3@30423>     MOVE.b (a0)+,(a1)+
0003AC22 <AmiBlitz3.ab3@30424>   BNE 'l2
0003AC24 <AmiBlitz3.ab3@30425> RTS
0003AC2A <AmiBlitz3.ab3@30429>   TST.b objectcount
0003AC2E <AmiBlitz3.ab3@30430>   BEQ 'l2a
0003AC34 <AmiBlitz3.ab3@30431>  JMP macnesterr
0003AC3A <AmiBlitz3.ab3@30434>   LEA devo,a0
0003AC40 <AmiBlitz3.ab3@30435>   ADDQ.b #1,objectcount
0003AC44 <AmiBlitz3.ab3@30436>   MOVEM.l a1/d2,-(a7)
0003AC4A <AmiBlitz3.ab3@30437>   LEA ptr_parameterstore,a1
0003AC4C <AmiBlitz3.ab3@30440>     MOVE.b (a0)+,(a1)+
0003AC50 <AmiBlitz3.ab3@30441>   BNE 'l1
0003AC52 <AmiBlitz3.ab3@30443>   MOVEQ #13,d2
0003AC58 <AmiBlitz3.ab3@30444>   JSR findlabel2
0003AC5C <AmiBlitz3.ab3@30445>   BNE 'd
0003AC60 <AmiBlitz3.ab3@30446>   TST.l 8(a2)
0003AC64 <AmiBlitz3.ab3@30447>   BEQ 'd
0003AC6A <AmiBlitz3.ab3@30448>   SUBQ.b #1,objectcount
0003AC6E <AmiBlitz3.ab3@30449>   MOVEM.l (a7)+,a1/d2
0003AC74 <AmiBlitz3.ab3@30450>   JSR skiprest
0003AC7C <AmiBlitz3.ab3@30451>   MOVE.b #1,developobject
0003AC7E <AmiBlitz3.ab3@30452>  RTS
0003AC82 <AmiBlitz3.ab3@30455>   MOVEM.l (a7)+,a1/d2
0003AC8A <AmiBlitz3.ab3@30456>   MOVE.b #1,resdisable
0003AC90 <AmiBlitz3.ab3@30459>   CLR.b developobject
0003AC96 <AmiBlitz3.ab3@30460> JMP do_Macro
0003AC9C <AmiBlitz3.ab3@30463> JUMP_illeaerr JMP illeaerr
0003ACA2 <AmiBlitz3.ab3@30467>   CLR.b typecheck
0003ACA8 <AmiBlitz3.ab3@30468>   CLR.b declare
0003ACAE <AmiBlitz3.ab3@30469>   CLR.b declare2
0003ACB2 <AmiBlitz3.ab3@30470>   SUB.b #$30,d0
0003ACB6 <AmiBlitz3.ab3@30471>   BTST #0,d0
0003ACBA <AmiBlitz3.ab3@30472>   BEQ 'l1
0003ACC2 <AmiBlitz3.ab3@30473>   MOVE.b #1,declare
0003ACC6 <AmiBlitz3.ab3@30476>   BTST #1,d0
0003ACCA <AmiBlitz3.ab3@30477>   BEQ 'l2
0003ACD2 <AmiBlitz3.ab3@30478>   MOVE.b #1,declare2
0003ACD6 <AmiBlitz3.ab3@30481>   BTST #2,d0
0003ACDA <AmiBlitz3.ab3@30482>   BEQ 'l3
0003ACE2 <AmiBlitz3.ab3@30483>   MOVE.b #1,typecheck
0003ACE6 <AmiBlitz3.ab3@30486>   BSR.w JUMP_get1bytemain
0003ACE8 <AmiBlitz3.ab3@30487> RTS
0003ACEE <AmiBlitz3.ab3@30489> JUMP_get1bytemain JMP get1bytemain
0003AD18 <AmiBlitz3.ab3@30493>   !basic
0003AD38 <AmiBlitz3.ab3@30495>   FillMem ?residents_table,?residents_table_end-?residents_table,0
0003AD56 <AmiBlitz3.ab3@30496>   !asm
0003AD58 <AmiBlitz3.ab3@30497> Return
0003AD5A <AmiBlitz3.ab3@30502>   MOVE.l d2,-(a7)                                          ; D2 -> stack
0003AD5C <AmiBlitz3.ab3@30503>   ADDQ #1,a5
0003AD5E <AmiBlitz3.ab3@30504>   MOVE.l a5,-(a7)
0003AD88 <AmiBlitz3.ab3@30505>   !basic
0003AD8E <AmiBlitz3.ab3@30506>   MOVE.l (a7)+,d0 : _myD0.l = PutD0
0003AD98 <AmiBlitz3.ab3@30507>   If _myD0
0003ADD8 <AmiBlitz3.ab3@30508>     newconst$ = UCase$(Peek.s(_myD0))
0003ADDE <AmiBlitz3.ab3@30509>   Else
0003AE18 <AmiBlitz3.ab3@30510>     error{"INTERNAL: invalid pointer in check_newconstants!"}
0003AE40 <AmiBlitz3.ab3@30511>     nwconst$="xxx"
0003AE68 <AmiBlitz3.ab3@30513>   condata$ =""
0003AE78 <AmiBlitz3.ab3@30514>   Poke.b ?skip_bytes,0
0003AED4 <AmiBlitz3.ab3@30515>   If Left$(newconst$,2) = "__"
0003AF2E <AmiBlitz3.ab3@30516>     Select Mid$(newconst$,3,4)
0003AF52 <AmiBlitz3.ab3@30518>      Case "DATE"
0003AFAC <AmiBlitz3.ab3@30519>       Select Mid$(newconst$,3,6)
0003AFEA <AmiBlitz3.ab3@30520>       Case "DATE__" : DateFormat 1 : Poke.b ?skip_bytes,8
0003B02E <AmiBlitz3.ab3@30521>       Case "DATE_G" : DateFormat 0 : Poke.b ?skip_bytes,12
0003B03C <AmiBlitz3.ab3@30522>       End Select
0003B04A <AmiBlitz3.ab3@30523>       i.l=SystemDate
0003B070 <AmiBlitz3.ab3@30524>       condata$ = Date$ (i)
0003B0EE <AmiBlitz3.ab3@30525>       condata$ = Replace$(condata$,"/",".")
0003B118 <AmiBlitz3.ab3@30527>      Case "VER_"
0003B128 <AmiBlitz3.ab3@30530>       actual_version.l = Peek.l(?versioninformation)
0003B138 <AmiBlitz3.ab3@30531>       actual_build.l   = Peek.l(?number_of_builds)
0003B15C <AmiBlitz3.ab3@30533>       Format ""
0003B1B6 <AmiBlitz3.ab3@30534>       Select Mid$(newconst$,3,9)
0003B1DA <AmiBlitz3.ab3@30536>        Case "VER_MAJOR"
0003B216 <AmiBlitz3.ab3@30537>         condata$ = Str$(actual_version LSR 24)
0003B240 <AmiBlitz3.ab3@30539>        Case "VER_MINOR"
0003B284 <AmiBlitz3.ab3@30540>         condata$ = Str$((actual_version LSL 8) LSR 24)
0003B2AE <AmiBlitz3.ab3@30542>        Case "VER_PATCH"
0003B2F2 <AmiBlitz3.ab3@30543>         condata$ = Str$((actual_version LSL 16) LSR 24 )
0003B31C <AmiBlitz3.ab3@30545>        Case "VER_BUILD"
0003B340 <AmiBlitz3.ab3@30546>         Format ""
0003B374 <AmiBlitz3.ab3@30547>         condata$ = Str$(actual_build)
0003B37A <AmiBlitz3.ab3@30549>        Default
0003B3A2 <AmiBlitz3.ab3@30550>         condata$ = "{unknown compiler constant}"
0003B3B0 <AmiBlitz3.ab3@30552>       End Select
0003B3D4 <AmiBlitz3.ab3@30553>       Format ""
0003B3E4 <AmiBlitz3.ab3@30554>       Poke.b ?skip_bytes,11
0003B40E <AmiBlitz3.ab3@30556>      Case "THIS"
0003B468 <AmiBlitz3.ab3@30557>       Select Mid$(newconst$,3,9)
0003B48C <AmiBlitz3.ab3@30559>        Case "THIS_FUNC"
0003B49C <AmiBlitz3.ab3@30560>         Poke.b ?skip_bytes,15
0003B4BC <AmiBlitz3.ab3@30561>         If Peek.l(?currentfunction)<>0
0003B508 <AmiBlitz3.ab3@30562>           condata$ = Peek.s(Peek.l(?currentfunction) + 32 + #funcentry_extend + 1)
0003B50E <AmiBlitz3.ab3@30563>         Else
0003B536 <AmiBlitz3.ab3@30564>           condata$ = "GLOBAL"
0003B560 <AmiBlitz3.ab3@30567>        Case "THIS_INCL"
0003B570 <AmiBlitz3.ab3@30568>         Poke.b ?skip_bytes,14
0003B590 <AmiBlitz3.ab3@30569>         If Peek.l(?includetemp2)<>0
0003B5DE <AmiBlitz3.ab3@30570>           condata$ = dos_FilePart{Peek$(?includetemp2)}
0003B608 <AmiBlitz3.ab3@30573>        Case "THIS_POIN"
0003B618 <AmiBlitz3.ab3@30574>         Poke.b ?skip_bytes,14
0003B638 <AmiBlitz3.ab3@30575>         If Peek.l(?currentfunction)<>0
0003B666 <AmiBlitz3.ab3@30576>           condata$ = Hex$(Peek.l(?currentfunction))
0003B674 <AmiBlitz3.ab3@30579>       End Select
0003B69E <AmiBlitz3.ab3@30581>      Case "CODE"
0003B6AE <AmiBlitz3.ab3@30582>       Poke.b ?skip_bytes,10
0003B710 <AmiBlitz3.ab3@30583>       If Mid$(newconst$,3,8) = "CODELINE"
0003B74C <AmiBlitz3.ab3@30584>         condata$ = Str$(Peek.l(?globallinecount))
0003B75A <AmiBlitz3.ab3@30587>     End Select
0003B760 <AmiBlitz3.ab3@30589>   Else
0003B7B4 <AmiBlitz3.ab3@30590>     Select Left$(newconst$,1)
0003B7D8 <AmiBlitz3.ab3@30592>      Case "R"
0003B7E8 <AmiBlitz3.ab3@30593>       Poke.b ?skip_bytes,3
0003B860 <AmiBlitz3.ab3@30594>       For i = 1 To Vallong(Mid$(newconst$,2,2))
0003B8E0 <AmiBlitz3.ab3@30595>         condata$ = condata$ + Mid$(newconst$,4,1)
0003B8F0 <AmiBlitz3.ab3@30596>       Next
0003B91A <AmiBlitz3.ab3@30598>      Case "N"
0003B92A <AmiBlitz3.ab3@30599>       Poke.b ?skip_bytes,1
0003B94E <AmiBlitz3.ab3@30600>       condata$ = Chr$(10)
0003B954 <AmiBlitz3.ab3@30602>      Default
0003B966 <AmiBlitz3.ab3@30603>       char1.b = Peek.b(&newconst$)
0003B97E <AmiBlitz3.ab3@30604>       char2.b = Peek.b(&newconst$+1)
0003B98A <AmiBlitz3.ab3@30605>       nibble1.l = -1
0003B996 <AmiBlitz3.ab3@30606>       nibble2.l = -1
0003B9D4 <AmiBlitz3.ab3@30608>       If (char1>=@"0" AND char1<=@"9") Then nibble1 = char1-@"0"
0003BA12 <AmiBlitz3.ab3@30609>       If (char2>=@"0" AND char2<=@"9") Then nibble2 = char2-@"0"
0003BA56 <AmiBlitz3.ab3@30611>       If (char1>=@"a" AND char1<=@"f") Then nibble1 = char1-@"a" + 10
0003BA9A <AmiBlitz3.ab3@30612>       If (char2>=@"a" AND char2<=@"f") Then nibble2 = char2-@"a" + 10
0003BADE <AmiBlitz3.ab3@30614>       If (char1>=@"A" AND char1<=@"F") Then nibble1 = char1-@"A" + 10
0003BB22 <AmiBlitz3.ab3@30615>       If (char2>=@"A" AND char2<=@"F") Then nibble2 = char2-@"A" + 10
0003BB48 <AmiBlitz3.ab3@30617>       If nibble1>=0 AND nibble2>=0
0003BB5E <AmiBlitz3.ab3@30618>         newchar.l = (nibble1 LSL 4) + (nibble2)
0003BB82 <AmiBlitz3.ab3@30619>         condata$ = Chr$(newchar)
0003BB92 <AmiBlitz3.ab3@30620>         Poke.b ?skip_bytes,2
0003BBA0 <AmiBlitz3.ab3@30623>     End Select
0003BC00 <AmiBlitz3.ab3@30625>   If condata$ = "" AND Peek.b(?skip_bytes)=0
0003BD26 <AmiBlitz3.ab3@30626>     !cout{"detected unknown const: " + newconst$}
0003BD5A <AmiBlitz3.ab3@30627>     condata$ = newconst$
0003BD70 <AmiBlitz3.ab3@30630>   GetD0 FLen(condata$)-1                                    ; laenge zielstring -> Stack
0003BD72 <AmiBlitz3.ab3@30631>   MOVE.l d0,d2
0003BD74 <AmiBlitz3.ab3@30632>   MOVE.l d2,-(a7)
0003BD7A <AmiBlitz3.ab3@30634>   GetD0 &condata$                                          ; kopieren des neuen Strings in den Zielstring
0003BD7C <AmiBlitz3.ab3@30635>   MOVE.l d0,a0
0003BD7E <AmiBlitz3.ab3@30638>     MOVE.b (a0)+,d1
0003BD84 <AmiBlitz3.ab3@30639>     JSR pokedata1b
0003BD88 <AmiBlitz3.ab3@30640>  DBF d2,'l1
0003BDA6 <AmiBlitz3.ab3@30642>   !asm
0003BDA8 <AmiBlitz3.ab3@30643>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
0003BDAA <AmiBlitz3.ab3@30644>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
0003BDAC <AmiBlitz3.ab3@30645>   ADD.l d0,d2                                              ; eingefuegte chars zu D2 dazu
0003BDB2 <AmiBlitz3.ab3@30646>   ADD.l #1,d2
0003BDB8 <AmiBlitz3.ab3@30648>   MOVE.l #0,d0                                             ; a5 um konstantennamen weiterschieben
0003BDBE <AmiBlitz3.ab3@30649>   MOVE.b skip_bytes,D0
0003BDC0 <AmiBlitz3.ab3@30650>   ADD.l D0,a5
0003BDC2 <AmiBlitz3.ab3@30651> RTS
0003BDC6 <AmiBlitz3.ab3@30727>   MOVEM.l d0-d2/a0-a5,-(a7)
0003BDCC <AmiBlitz3.ab3@30728>   TST.w proceduremode                                     ;1 in function
0003BDD0 <AmiBlitz3.ab3@30729>   BEQ 'global
0003BDD6 <AmiBlitz3.ab3@30730>   LEA firstglob,a2
0003BDDC <AmiBlitz3.ab3@30731>   JSR findvariable2
0003BDE0 <AmiBlitz3.ab3@30732>   BEQ 'isused
0003BDE8 <AmiBlitz3.ab3@30733>   MOVE.b #1,newvariable
0003BDEE <AmiBlitz3.ab3@30734>   LEA firstlocal,a2
0003BDF4 <AmiBlitz3.ab3@30735>   JSR findvariable
0003BDF8 <AmiBlitz3.ab3@30736>   BEQ 'isused
0003BDFE <AmiBlitz3.ab3@30737>   CLR.b newvariable
0003BE02 <AmiBlitz3.ab3@30738>   MOVEM.l (a7)+,d0-d2/a0-a5
0003BE04 <AmiBlitz3.ab3@30739>   RTS
0003BE0A <AmiBlitz3.ab3@30742>   JSR findvariable
0003BE0E <AmiBlitz3.ab3@30743>   BNE 'isunused
0003BE14 <AmiBlitz3.ab3@30746>    MOVE.w lastchar,-(a7)                                  ;get the typename from source
0003BE1A <AmiBlitz3.ab3@30747>    JSR getparameter2
0003BE20 <AmiBlitz3.ab3@30748>    MOVE.w (a7)+,lastchar
0003BE24 <AmiBlitz3.ab3@30749>    MOVE.l $a(a2),a0                                       ; get the name of the type
0003BE28 <AmiBlitz3.ab3@30750>    LEA $b(a0),a0
0003BE2E <AmiBlitz3.ab3@30751>    LEA ptr_parameterstore,a1
0003BE30 <AmiBlitz3.ab3@30754>    CMPM.b (a0)+,(a1)+                                     ; compare name
0003BE34 <AmiBlitz3.ab3@30755>    BNE'error
0003BE36 <AmiBlitz3.ab3@30756>    TST.b (a1)
0003BE3A <AmiBlitz3.ab3@30757> 
0003BE3C <AmiBlitz3.ab3@30758>    TST.b (a0)
0003BE40 <AmiBlitz3.ab3@30759>    BNE 'error
0003BE44 <AmiBlitz3.ab3@30762>   MOVEM.l (a7)+,d0-d2/a0-a5
0003BE46 <AmiBlitz3.ab3@30763>  RTS
0003BE4C <AmiBlitz3.ab3@30766> JMP errormsg_declaredtwice
0003BE50 <AmiBlitz3.ab3@30770>   MOVEM.l a3/d1,-(a7)
0003BE56 <AmiBlitz3.ab3@30772>   CLR.b a4a5store
0003BE58 <AmiBlitz3.ab3@30775>   MOVE.b (a3)+,d1
0003BE5C <AmiBlitz3.ab3@30776>   CMP.b #$15,d1
0003BE60 <AmiBlitz3.ab3@30777>   BEQ 'find
0003BE64 <AmiBlitz3.ab3@30778>   CMP.b #$14,d1
0003BE68 <AmiBlitz3.ab3@30779>   BEQ 'find
0003BE6C <AmiBlitz3.ab3@30780>   CMP.b #$ff,d1
0003BE70 <AmiBlitz3.ab3@30781>   BNE 'continue
0003BE74 <AmiBlitz3.ab3@30782>   BRA 'notfind
0003BE7A <AmiBlitz3.ab3@30785>   MOVE.l #$48e7000c,d1                  ; write 68k movem.l a4/a5,-(a7)
0003BE80 <AmiBlitz3.ab3@30786>   JSR writelong
0003BE88 <AmiBlitz3.ab3@30787>   MOVE.b #1,a4a5store
0003BE8C <AmiBlitz3.ab3@30790>   MOVEM.l (a7)+,a3/d1
0003BE8E <AmiBlitz3.ab3@30791> RTS
0003BE94 <AmiBlitz3.ab3@30795>   TST.b a4a5store
0003BE98 <AmiBlitz3.ab3@30796>   BEQ 'no
0003BE9E <AmiBlitz3.ab3@30797>   MOVE.l #$4cdf3000,d1                  ; write 68k movem.l (a7)+,a4/a5
0003BEA4 <AmiBlitz3.ab3@30798>   JSR writelong
0003BEAA <AmiBlitz3.ab3@30799>   CLR.b a4a5store
0003BEAC <AmiBlitz3.ab3@30802> RTS
0003BEAC <internal_commands.ab3@1> INCLUDE "internal_commands.ab3"
0003BEB0 <internal_commands.ab3@13> INCLUDE "internal_commands.ab3"
0003BEB2 <internal_commands.ab3@15> INCLUDE "internal_commands.ab3"
0003BEBA <internal_commands.ab3@16> INCLUDE "internal_commands.ab3"
0003BEC6 <internal_commands.ab3@17> INCLUDE "internal_commands.ab3"
0003BECA <internal_commands.ab3@21> INCLUDE "internal_commands.ab3"
0003BECC <internal_commands.ab3@22> INCLUDE "internal_commands.ab3"
0003BED0 <internal_commands.ab3@23> INCLUDE "internal_commands.ab3"
0003BF19 <internal_commands.ab3@24> INCLUDE "internal_commands.ab3"
0003BF1A <internal_commands.ab3@25> INCLUDE "internal_commands.ab3"
0003BF1E <internal_commands.ab3@28> INCLUDE "internal_commands.ab3"
0003BF20 <internal_commands.ab3@29> INCLUDE "internal_commands.ab3"
0003BF24 <internal_commands.ab3@30> INCLUDE "internal_commands.ab3"
0003BF40 <internal_commands.ab3@31> INCLUDE "internal_commands.ab3"
0003BF44 <internal_commands.ab3@35> INCLUDE "internal_commands.ab3"
0003BF46 <internal_commands.ab3@36> INCLUDE "internal_commands.ab3"
0003BF4A <internal_commands.ab3@37> INCLUDE "internal_commands.ab3"
0003BFA7 <internal_commands.ab3@38> INCLUDE "internal_commands.ab3"
0003BFA8 <internal_commands.ab3@39> INCLUDE "internal_commands.ab3"
0003BFAC <internal_commands.ab3@42> INCLUDE "internal_commands.ab3"
0003BFAE <internal_commands.ab3@43> INCLUDE "internal_commands.ab3"
0003BFB3 <internal_commands.ab3@44> INCLUDE "internal_commands.ab3"
0003BFC3 <internal_commands.ab3@45> INCLUDE "internal_commands.ab3"
0003BFC4 <internal_commands.ab3@46> INCLUDE "internal_commands.ab3"
0003BFC8 <internal_commands.ab3@49> INCLUDE "internal_commands.ab3"
0003BFCA <internal_commands.ab3@50> INCLUDE "internal_commands.ab3"
0003BFD0 <internal_commands.ab3@51> INCLUDE "internal_commands.ab3"
0003BFE0 <internal_commands.ab3@52> INCLUDE "internal_commands.ab3"
0003BFE4 <internal_commands.ab3@56> INCLUDE "internal_commands.ab3"
0003BFE6 <internal_commands.ab3@57> INCLUDE "internal_commands.ab3"
0003BFED <internal_commands.ab3@58> INCLUDE "internal_commands.ab3"
0003BFEE <internal_commands.ab3@59> INCLUDE "internal_commands.ab3"
0003BFF2 <internal_commands.ab3@63> INCLUDE "internal_commands.ab3"
0003BFF4 <internal_commands.ab3@64> INCLUDE "internal_commands.ab3"
0003BFFE <internal_commands.ab3@65> INCLUDE "internal_commands.ab3"
0003C031 <internal_commands.ab3@66> INCLUDE "internal_commands.ab3"
0003C032 <internal_commands.ab3@67> INCLUDE "internal_commands.ab3"
0003C036 <internal_commands.ab3@70> INCLUDE "internal_commands.ab3"
0003C038 <internal_commands.ab3@71> INCLUDE "internal_commands.ab3"
0003C041 <internal_commands.ab3@72> INCLUDE "internal_commands.ab3"
0003C07C <internal_commands.ab3@73> INCLUDE "internal_commands.ab3"
0003C080 <internal_commands.ab3@77> INCLUDE "internal_commands.ab3"
0003C082 <internal_commands.ab3@78> INCLUDE "internal_commands.ab3"
0003C08C <internal_commands.ab3@79> INCLUDE "internal_commands.ab3"
0003C08D <internal_commands.ab3@80> INCLUDE "internal_commands.ab3"
0003C08E <internal_commands.ab3@81> INCLUDE "internal_commands.ab3"
0003C092 <internal_commands.ab3@84> INCLUDE "internal_commands.ab3"
0003C094 <internal_commands.ab3@85> INCLUDE "internal_commands.ab3"
0003C097 <internal_commands.ab3@86> INCLUDE "internal_commands.ab3"
0003C0AE <internal_commands.ab3@87> INCLUDE "internal_commands.ab3"
0003C0B2 <internal_commands.ab3@91> INCLUDE "internal_commands.ab3"
0003C0B4 <internal_commands.ab3@92> INCLUDE "internal_commands.ab3"
0003C0BA <internal_commands.ab3@93> INCLUDE "internal_commands.ab3"
0003C0C7 <internal_commands.ab3@94> INCLUDE "internal_commands.ab3"
0003C0C8 <internal_commands.ab3@95> INCLUDE "internal_commands.ab3"
0003C0CC <internal_commands.ab3@98> INCLUDE "internal_commands.ab3"
0003C0CE <internal_commands.ab3@99> INCLUDE "internal_commands.ab3"
0003C0D4 <internal_commands.ab3@100> INCLUDE "internal_commands.ab3"
0003C0E0 <internal_commands.ab3@101> INCLUDE "internal_commands.ab3"
0003C0E4 <internal_commands.ab3@105> INCLUDE "internal_commands.ab3"
0003C0E6 <internal_commands.ab3@106> INCLUDE "internal_commands.ab3"
0003C0ED <internal_commands.ab3@107> INCLUDE "internal_commands.ab3"
0003C0FA <internal_commands.ab3@108> INCLUDE "internal_commands.ab3"
0003C0FE <internal_commands.ab3@112> INCLUDE "internal_commands.ab3"
0003C100 <internal_commands.ab3@113> INCLUDE "internal_commands.ab3"
0003C105 <internal_commands.ab3@114> INCLUDE "internal_commands.ab3"
0003C112 <internal_commands.ab3@115> INCLUDE "internal_commands.ab3"
0003C116 <internal_commands.ab3@119> INCLUDE "internal_commands.ab3"
0003C118 <internal_commands.ab3@120> INCLUDE "internal_commands.ab3"
0003C120 <internal_commands.ab3@121> INCLUDE "internal_commands.ab3"
0003C121 <internal_commands.ab3@122> INCLUDE "internal_commands.ab3"
0003C122 <internal_commands.ab3@123> INCLUDE "internal_commands.ab3"
0003C126 <internal_commands.ab3@126> INCLUDE "internal_commands.ab3"
0003C128 <internal_commands.ab3@127> INCLUDE "internal_commands.ab3"
0003C130 <internal_commands.ab3@128> INCLUDE "internal_commands.ab3"
0003C131 <internal_commands.ab3@129> INCLUDE "internal_commands.ab3"
0003C132 <internal_commands.ab3@130> INCLUDE "internal_commands.ab3"
0003C136 <internal_commands.ab3@133> INCLUDE "internal_commands.ab3"
0003C138 <internal_commands.ab3@134> INCLUDE "internal_commands.ab3"
0003C141 <internal_commands.ab3@135> INCLUDE "internal_commands.ab3"
0003C14C <internal_commands.ab3@136> INCLUDE "internal_commands.ab3"
0003C150 <internal_commands.ab3@140> INCLUDE "internal_commands.ab3"
0003C152 <internal_commands.ab3@141> INCLUDE "internal_commands.ab3"
0003C15A <internal_commands.ab3@142> INCLUDE "internal_commands.ab3"
0003C165 <internal_commands.ab3@143> INCLUDE "internal_commands.ab3"
0003C166 <internal_commands.ab3@144> INCLUDE "internal_commands.ab3"
0003C16A <internal_commands.ab3@147> INCLUDE "internal_commands.ab3"
0003C16C <internal_commands.ab3@148> INCLUDE "internal_commands.ab3"
0003C173 <internal_commands.ab3@149> INCLUDE "internal_commands.ab3"
0003C1D5 <internal_commands.ab3@150> INCLUDE "internal_commands.ab3"
0003C1D6 <internal_commands.ab3@151> INCLUDE "internal_commands.ab3"
0003C1DA <internal_commands.ab3@154> INCLUDE "internal_commands.ab3"
0003C1DC <internal_commands.ab3@155> INCLUDE "internal_commands.ab3"
0003C1E3 <internal_commands.ab3@156> INCLUDE "internal_commands.ab3"
0003C1F2 <internal_commands.ab3@157> INCLUDE "internal_commands.ab3"
0003C1F6 <internal_commands.ab3@161> INCLUDE "internal_commands.ab3"
0003C1F8 <internal_commands.ab3@162> INCLUDE "internal_commands.ab3"
0003C1FC <internal_commands.ab3@163> INCLUDE "internal_commands.ab3"
0003C232 <internal_commands.ab3@164> INCLUDE "internal_commands.ab3"
0003C236 <internal_commands.ab3@168> INCLUDE "internal_commands.ab3"
0003C238 <internal_commands.ab3@169> INCLUDE "internal_commands.ab3"
0003C23D <internal_commands.ab3@170> INCLUDE "internal_commands.ab3"
0003C24C <internal_commands.ab3@171> INCLUDE "internal_commands.ab3"
0003C250 <internal_commands.ab3@175> INCLUDE "internal_commands.ab3"
0003C252 <internal_commands.ab3@176> INCLUDE "internal_commands.ab3"
0003C255 <internal_commands.ab3@177> INCLUDE "internal_commands.ab3"
0003C276 <internal_commands.ab3@178> INCLUDE "internal_commands.ab3"
0003C27A <internal_commands.ab3@182> INCLUDE "internal_commands.ab3"
0003C27C <internal_commands.ab3@183> INCLUDE "internal_commands.ab3"
0003C281 <internal_commands.ab3@184> INCLUDE "internal_commands.ab3"
0003C28D <internal_commands.ab3@185> INCLUDE "internal_commands.ab3"
0003C28E <internal_commands.ab3@186> INCLUDE "internal_commands.ab3"
0003C292 <internal_commands.ab3@189> INCLUDE "internal_commands.ab3"
0003C294 <internal_commands.ab3@190> INCLUDE "internal_commands.ab3"
0003C299 <internal_commands.ab3@191> INCLUDE "internal_commands.ab3"
0003C2B0 <internal_commands.ab3@192> INCLUDE "internal_commands.ab3"
0003C2B4 <internal_commands.ab3@196> INCLUDE "internal_commands.ab3"
0003C2B6 <internal_commands.ab3@197> INCLUDE "internal_commands.ab3"
0003C2BB <internal_commands.ab3@198> INCLUDE "internal_commands.ab3"
0003C2CA <internal_commands.ab3@199> INCLUDE "internal_commands.ab3"
0003C2CE <internal_commands.ab3@203> INCLUDE "internal_commands.ab3"
0003C2D0 <internal_commands.ab3@204> INCLUDE "internal_commands.ab3"
0003C2D5 <internal_commands.ab3@205> INCLUDE "internal_commands.ab3"
0003C2F4 <internal_commands.ab3@206> INCLUDE "internal_commands.ab3"
0003C2F8 <internal_commands.ab3@210> INCLUDE "internal_commands.ab3"
0003C2FA <internal_commands.ab3@211> INCLUDE "internal_commands.ab3"
0003C2FF <internal_commands.ab3@212> INCLUDE "internal_commands.ab3"
0003C31E <internal_commands.ab3@213> INCLUDE "internal_commands.ab3"
0003C322 <internal_commands.ab3@217> INCLUDE "internal_commands.ab3"
0003C324 <internal_commands.ab3@218> INCLUDE "internal_commands.ab3"
0003C32A <internal_commands.ab3@219> INCLUDE "internal_commands.ab3"
0003C32B <internal_commands.ab3@220> INCLUDE "internal_commands.ab3"
0003C32C <internal_commands.ab3@221> INCLUDE "internal_commands.ab3"
0003C330 <internal_commands.ab3@224> INCLUDE "internal_commands.ab3"
0003C332 <internal_commands.ab3@225> INCLUDE "internal_commands.ab3"
0003C337 <internal_commands.ab3@226> INCLUDE "internal_commands.ab3"
0003C338 <internal_commands.ab3@227> INCLUDE "internal_commands.ab3"
0003C33C <internal_commands.ab3@231> INCLUDE "internal_commands.ab3"
0003C33E <internal_commands.ab3@232> INCLUDE "internal_commands.ab3"
0003C343 <internal_commands.ab3@233> INCLUDE "internal_commands.ab3"
0003C350 <internal_commands.ab3@234> INCLUDE "internal_commands.ab3"
0003C354 <internal_commands.ab3@238> INCLUDE "internal_commands.ab3"
0003C356 <internal_commands.ab3@239> INCLUDE "internal_commands.ab3"
0003C35B <internal_commands.ab3@240> INCLUDE "internal_commands.ab3"
0003C36A <internal_commands.ab3@241> INCLUDE "internal_commands.ab3"
0003C36E <internal_commands.ab3@245> INCLUDE "internal_commands.ab3"
0003C370 <internal_commands.ab3@246> INCLUDE "internal_commands.ab3"
0003C375 <internal_commands.ab3@247> INCLUDE "internal_commands.ab3"
0003C384 <internal_commands.ab3@248> INCLUDE "internal_commands.ab3"
0003C388 <internal_commands.ab3@254> INCLUDE "internal_commands.ab3"
0003C38A <internal_commands.ab3@255> INCLUDE "internal_commands.ab3"
0003C390 <internal_commands.ab3@256> INCLUDE "internal_commands.ab3"
0003C3AD <internal_commands.ab3@257> INCLUDE "internal_commands.ab3"
0003C3AE <internal_commands.ab3@258> INCLUDE "internal_commands.ab3"
0003C3B2 <internal_commands.ab3@261> INCLUDE "internal_commands.ab3"
0003C3B4 <internal_commands.ab3@262> INCLUDE "internal_commands.ab3"
0003C3BA <internal_commands.ab3@263> INCLUDE "internal_commands.ab3"
0003C3D7 <internal_commands.ab3@264> INCLUDE "internal_commands.ab3"
0003C3D8 <internal_commands.ab3@265> INCLUDE "internal_commands.ab3"
0003C3DC <internal_commands.ab3@268> INCLUDE "internal_commands.ab3"
0003C3DE <internal_commands.ab3@269> INCLUDE "internal_commands.ab3"
0003C3E1 <internal_commands.ab3@270> INCLUDE "internal_commands.ab3"
0003C3F8 <internal_commands.ab3@271> INCLUDE "internal_commands.ab3"
0003C3FC <internal_commands.ab3@275> INCLUDE "internal_commands.ab3"
0003C3FE <internal_commands.ab3@276> INCLUDE "internal_commands.ab3"
0003C401 <internal_commands.ab3@277> INCLUDE "internal_commands.ab3"
0003C410 <internal_commands.ab3@278> INCLUDE "internal_commands.ab3"
0003C414 <internal_commands.ab3@282> INCLUDE "internal_commands.ab3"
0003C416 <internal_commands.ab3@283> INCLUDE "internal_commands.ab3"
0003C41B <internal_commands.ab3@284> INCLUDE "internal_commands.ab3"
0003C41C <internal_commands.ab3@285> INCLUDE "internal_commands.ab3"
0003C420 <internal_commands.ab3@289> INCLUDE "internal_commands.ab3"
0003C422 <internal_commands.ab3@290> INCLUDE "internal_commands.ab3"
0003C426 <internal_commands.ab3@291> INCLUDE "internal_commands.ab3"
0003C43B <internal_commands.ab3@292> INCLUDE "internal_commands.ab3"
0003C43C <internal_commands.ab3@293> INCLUDE "internal_commands.ab3"
0003C440 <internal_commands.ab3@296> INCLUDE "internal_commands.ab3"
0003C442 <internal_commands.ab3@297> INCLUDE "internal_commands.ab3"
0003C449 <internal_commands.ab3@298> INCLUDE "internal_commands.ab3"
0003C462 <internal_commands.ab3@299> INCLUDE "internal_commands.ab3"
0003C466 <internal_commands.ab3@303> INCLUDE "internal_commands.ab3"
0003C468 <internal_commands.ab3@304> INCLUDE "internal_commands.ab3"
0003C46F <internal_commands.ab3@305> INCLUDE "internal_commands.ab3"
0003C47A <internal_commands.ab3@306> INCLUDE "internal_commands.ab3"
0003C47E <internal_commands.ab3@312> INCLUDE "internal_commands.ab3"
0003C480 <internal_commands.ab3@313> INCLUDE "internal_commands.ab3"
0003C485 <internal_commands.ab3@314> INCLUDE "internal_commands.ab3"
0003C49C <internal_commands.ab3@315> INCLUDE "internal_commands.ab3"
0003C4A0 <internal_commands.ab3@319> INCLUDE "internal_commands.ab3"
0003C4A2 <internal_commands.ab3@320> INCLUDE "internal_commands.ab3"
0003C4A6 <internal_commands.ab3@321> INCLUDE "internal_commands.ab3"
0003C4BD <internal_commands.ab3@322> INCLUDE "internal_commands.ab3"
0003C4BE <internal_commands.ab3@323> INCLUDE "internal_commands.ab3"
0003C4C2 <internal_commands.ab3@326> INCLUDE "internal_commands.ab3"
0003C4C4 <internal_commands.ab3@327> INCLUDE "internal_commands.ab3"
0003C4C9 <internal_commands.ab3@328> INCLUDE "internal_commands.ab3"
0003C4CA <internal_commands.ab3@329> INCLUDE "internal_commands.ab3"
0003C4CE <internal_commands.ab3@333> INCLUDE "internal_commands.ab3"
0003C4D0 <internal_commands.ab3@334> INCLUDE "internal_commands.ab3"
0003C4D5 <internal_commands.ab3@335> INCLUDE "internal_commands.ab3"
0003C4D9 <internal_commands.ab3@336> INCLUDE "internal_commands.ab3"
0003C4DA <internal_commands.ab3@337> INCLUDE "internal_commands.ab3"
0003C4DE <internal_commands.ab3@340> INCLUDE "internal_commands.ab3"
0003C4E0 <internal_commands.ab3@341> INCLUDE "internal_commands.ab3"
0003C4E7 <internal_commands.ab3@342> INCLUDE "internal_commands.ab3"
0003C4FF <internal_commands.ab3@343> INCLUDE "internal_commands.ab3"
0003C500 <internal_commands.ab3@344> INCLUDE "internal_commands.ab3"
0003C504 <internal_commands.ab3@347> INCLUDE "internal_commands.ab3"
0003C506 <internal_commands.ab3@348> INCLUDE "internal_commands.ab3"
0003C50D <internal_commands.ab3@349> INCLUDE "internal_commands.ab3"
0003C512 <internal_commands.ab3@350> INCLUDE "internal_commands.ab3"
0003C516 <internal_commands.ab3@354> INCLUDE "internal_commands.ab3"
0003C518 <internal_commands.ab3@355> INCLUDE "internal_commands.ab3"
0003C51F <internal_commands.ab3@356> INCLUDE "internal_commands.ab3"
0003C524 <internal_commands.ab3@357> INCLUDE "internal_commands.ab3"
0003C528 <internal_commands.ab3@361> INCLUDE "internal_commands.ab3"
0003C52A <internal_commands.ab3@362> INCLUDE "internal_commands.ab3"
0003C531 <internal_commands.ab3@363> INCLUDE "internal_commands.ab3"
0003C54C <internal_commands.ab3@364> INCLUDE "internal_commands.ab3"
0003C550 <internal_commands.ab3@368> INCLUDE "internal_commands.ab3"
0003C552 <internal_commands.ab3@369> INCLUDE "internal_commands.ab3"
0003C55A <internal_commands.ab3@370> INCLUDE "internal_commands.ab3"
0003C573 <internal_commands.ab3@371> INCLUDE "internal_commands.ab3"
0003C574 <internal_commands.ab3@372> INCLUDE "internal_commands.ab3"
0003C578 <internal_commands.ab3@375> INCLUDE "internal_commands.ab3"
0003C57A <internal_commands.ab3@376> INCLUDE "internal_commands.ab3"
0003C580 <internal_commands.ab3@377> INCLUDE "internal_commands.ab3"
0003C581 <internal_commands.ab3@378> INCLUDE "internal_commands.ab3"
0003C582 <internal_commands.ab3@379> INCLUDE "internal_commands.ab3"
0003C586 <internal_commands.ab3@382> INCLUDE "internal_commands.ab3"
0003C588 <internal_commands.ab3@383> INCLUDE "internal_commands.ab3"
0003C58E <internal_commands.ab3@384> INCLUDE "internal_commands.ab3"
0003C58F <internal_commands.ab3@385> INCLUDE "internal_commands.ab3"
0003C590 <internal_commands.ab3@386> INCLUDE "internal_commands.ab3"
0003C594 <internal_commands.ab3@389> INCLUDE "internal_commands.ab3"
0003C596 <internal_commands.ab3@390> INCLUDE "internal_commands.ab3"
0003C59D <internal_commands.ab3@391> INCLUDE "internal_commands.ab3"
0003C59E <internal_commands.ab3@392> INCLUDE "internal_commands.ab3"
0003C5A2 <internal_commands.ab3@396> INCLUDE "internal_commands.ab3"
0003C5A4 <internal_commands.ab3@397> INCLUDE "internal_commands.ab3"
0003C5AA <internal_commands.ab3@398> INCLUDE "internal_commands.ab3"
0003C5B3 <internal_commands.ab3@399> INCLUDE "internal_commands.ab3"
0003C5B4 <internal_commands.ab3@400> INCLUDE "internal_commands.ab3"
0003C5B8 <internal_commands.ab3@403> INCLUDE "internal_commands.ab3"
0003C5BA <internal_commands.ab3@404> INCLUDE "internal_commands.ab3"
0003C5C2 <internal_commands.ab3@405> INCLUDE "internal_commands.ab3"
0003C5CF <internal_commands.ab3@406> INCLUDE "internal_commands.ab3"
0003C5D0 <internal_commands.ab3@407> INCLUDE "internal_commands.ab3"
0003C5D4 <internal_commands.ab3@410> INCLUDE "internal_commands.ab3"
0003C5D6 <internal_commands.ab3@411> INCLUDE "internal_commands.ab3"
0003C5DE <internal_commands.ab3@412> INCLUDE "internal_commands.ab3"
0003C5EB <internal_commands.ab3@413> INCLUDE "internal_commands.ab3"
0003C5EC <internal_commands.ab3@414> INCLUDE "internal_commands.ab3"
0003C5F0 <internal_commands.ab3@417> INCLUDE "internal_commands.ab3"
0003C5F2 <internal_commands.ab3@418> INCLUDE "internal_commands.ab3"
0003C5FA <internal_commands.ab3@419> INCLUDE "internal_commands.ab3"
0003C607 <internal_commands.ab3@420> INCLUDE "internal_commands.ab3"
0003C608 <internal_commands.ab3@421> INCLUDE "internal_commands.ab3"
0003C60C <internal_commands.ab3@424> INCLUDE "internal_commands.ab3"
0003C60E <internal_commands.ab3@425> INCLUDE "internal_commands.ab3"
0003C613 <internal_commands.ab3@426> INCLUDE "internal_commands.ab3"
0003C614 <internal_commands.ab3@427> INCLUDE "internal_commands.ab3"
0003C618 <internal_commands.ab3@517> INCLUDE "internal_commands.ab3"
0003C61A <internal_commands.ab3@518> INCLUDE "internal_commands.ab3"
0003C61F <internal_commands.ab3@519> INCLUDE "internal_commands.ab3"
0003C620 <internal_commands.ab3@520> INCLUDE "internal_commands.ab3"
0003C622 <internal_commands.ab3@523> INCLUDE "internal_commands.ab3"
0003C626 <internal_commands.ab3@524> INCLUDE "internal_commands.ab3"
0003C628 <internal_commands.ab3@525> INCLUDE "internal_commands.ab3"
0003C62A <internal_commands.ab3@526> INCLUDE "internal_commands.ab3"
0003C62E <internal_commands.ab3@527> INCLUDE "internal_commands.ab3"
0003C630 <internal_commands.ab3@528> INCLUDE "internal_commands.ab3"
0003C634 <internal_commands.ab3@532> INCLUDE "internal_commands.ab3"
0003C636 <internal_commands.ab3@533> INCLUDE "internal_commands.ab3"
0003C63A <internal_commands.ab3@534> INCLUDE "internal_commands.ab3"
0003C63B <internal_commands.ab3@535> INCLUDE "internal_commands.ab3"
0003C63C <internal_commands.ab3@536> INCLUDE "internal_commands.ab3"
0003C63E <internal_commands.ab3@538> INCLUDE "internal_commands.ab3"
0003C642 <internal_commands.ab3@539> INCLUDE "internal_commands.ab3"
0003C644 <internal_commands.ab3@540> INCLUDE "internal_commands.ab3"
0003C646 <internal_commands.ab3@541> INCLUDE "internal_commands.ab3"
0003C64A <internal_commands.ab3@542> INCLUDE "internal_commands.ab3"
0003C64C <internal_commands.ab3@543> INCLUDE "internal_commands.ab3"
0003C650 <internal_commands.ab3@547> INCLUDE "internal_commands.ab3"
0003C652 <internal_commands.ab3@548> INCLUDE "internal_commands.ab3"
0003C657 <internal_commands.ab3@549> INCLUDE "internal_commands.ab3"
0003C658 <internal_commands.ab3@550> INCLUDE "internal_commands.ab3"
0003C65A <internal_commands.ab3@553> INCLUDE "internal_commands.ab3"
0003C65E <internal_commands.ab3@554> INCLUDE "internal_commands.ab3"
0003C660 <internal_commands.ab3@555> INCLUDE "internal_commands.ab3"
0003C662 <internal_commands.ab3@556> INCLUDE "internal_commands.ab3"
0003C666 <internal_commands.ab3@557> INCLUDE "internal_commands.ab3"
0003C668 <internal_commands.ab3@558> INCLUDE "internal_commands.ab3"
0003C66C <internal_commands.ab3@562> INCLUDE "internal_commands.ab3"
0003C66E <internal_commands.ab3@563> INCLUDE "internal_commands.ab3"
0003C673 <internal_commands.ab3@564> INCLUDE "internal_commands.ab3"
0003C674 <internal_commands.ab3@565> INCLUDE "internal_commands.ab3"
0003C676 <internal_commands.ab3@568> INCLUDE "internal_commands.ab3"
0003C67A <internal_commands.ab3@569> INCLUDE "internal_commands.ab3"
0003C67C <internal_commands.ab3@570> INCLUDE "internal_commands.ab3"
0003C67E <internal_commands.ab3@571> INCLUDE "internal_commands.ab3"
0003C682 <internal_commands.ab3@572> INCLUDE "internal_commands.ab3"
0003C684 <internal_commands.ab3@573> INCLUDE "internal_commands.ab3"
0003C688 <internal_commands.ab3@577> INCLUDE "internal_commands.ab3"
0003C68A <internal_commands.ab3@578> INCLUDE "internal_commands.ab3"
0003C68F <internal_commands.ab3@579> INCLUDE "internal_commands.ab3"
0003C690 <internal_commands.ab3@580> INCLUDE "internal_commands.ab3"
0003C692 <internal_commands.ab3@583> INCLUDE "internal_commands.ab3"
0003C696 <internal_commands.ab3@584> INCLUDE "internal_commands.ab3"
0003C698 <internal_commands.ab3@585> INCLUDE "internal_commands.ab3"
0003C69A <internal_commands.ab3@586> INCLUDE "internal_commands.ab3"
0003C69E <internal_commands.ab3@587> INCLUDE "internal_commands.ab3"
0003C6A0 <internal_commands.ab3@588> INCLUDE "internal_commands.ab3"
0003C6A4 <internal_commands.ab3@592> INCLUDE "internal_commands.ab3"
0003C6A6 <internal_commands.ab3@593> INCLUDE "internal_commands.ab3"
0003C6AB <internal_commands.ab3@594> INCLUDE "internal_commands.ab3"
0003C6AC <internal_commands.ab3@595> INCLUDE "internal_commands.ab3"
0003C6AE <internal_commands.ab3@598> INCLUDE "internal_commands.ab3"
0003C6B2 <internal_commands.ab3@599> INCLUDE "internal_commands.ab3"
0003C6B4 <internal_commands.ab3@600> INCLUDE "internal_commands.ab3"
0003C6B6 <internal_commands.ab3@601> INCLUDE "internal_commands.ab3"
0003C6BA <internal_commands.ab3@602> INCLUDE "internal_commands.ab3"
0003C6BC <internal_commands.ab3@603> INCLUDE "internal_commands.ab3"
0003C6C0 <internal_commands.ab3@607> INCLUDE "internal_commands.ab3"
0003C6C2 <internal_commands.ab3@608> INCLUDE "internal_commands.ab3"
0003C6C6 <internal_commands.ab3@609> INCLUDE "internal_commands.ab3"
0003C6C7 <internal_commands.ab3@610> INCLUDE "internal_commands.ab3"
0003C6C8 <internal_commands.ab3@611> INCLUDE "internal_commands.ab3"
0003C6CA <internal_commands.ab3@613> INCLUDE "internal_commands.ab3"
0003C6CE <internal_commands.ab3@614> INCLUDE "internal_commands.ab3"
0003C6D0 <internal_commands.ab3@615> INCLUDE "internal_commands.ab3"
0003C6D2 <internal_commands.ab3@616> INCLUDE "internal_commands.ab3"
0003C6D6 <internal_commands.ab3@617> INCLUDE "internal_commands.ab3"
0003C6D8 <internal_commands.ab3@618> INCLUDE "internal_commands.ab3"
0003C6DC <internal_commands.ab3@622> INCLUDE "internal_commands.ab3"
0003C6DE <internal_commands.ab3@623> INCLUDE "internal_commands.ab3"
0003C6E3 <internal_commands.ab3@624> INCLUDE "internal_commands.ab3"
0003C6E4 <internal_commands.ab3@625> INCLUDE "internal_commands.ab3"
0003C6E6 <internal_commands.ab3@628> INCLUDE "internal_commands.ab3"
0003C6EA <internal_commands.ab3@629> INCLUDE "internal_commands.ab3"
0003C6EC <internal_commands.ab3@630> INCLUDE "internal_commands.ab3"
0003C6EE <internal_commands.ab3@631> INCLUDE "internal_commands.ab3"
0003C6F2 <internal_commands.ab3@632> INCLUDE "internal_commands.ab3"
0003C6F4 <internal_commands.ab3@633> INCLUDE "internal_commands.ab3"
0003C6F8 <internal_commands.ab3@637> INCLUDE "internal_commands.ab3"
0003C6FA <internal_commands.ab3@638> INCLUDE "internal_commands.ab3"
0003C6FE <internal_commands.ab3@639> INCLUDE "internal_commands.ab3"
0003C6FF <internal_commands.ab3@640> INCLUDE "internal_commands.ab3"
0003C700 <internal_commands.ab3@641> INCLUDE "internal_commands.ab3"
0003C702 <internal_commands.ab3@643> INCLUDE "internal_commands.ab3"
0003C706 <internal_commands.ab3@644> INCLUDE "internal_commands.ab3"
0003C708 <internal_commands.ab3@645> INCLUDE "internal_commands.ab3"
0003C70A <internal_commands.ab3@646> INCLUDE "internal_commands.ab3"
0003C70E <internal_commands.ab3@647> INCLUDE "internal_commands.ab3"
0003C710 <internal_commands.ab3@648> INCLUDE "internal_commands.ab3"
0003C714 <internal_commands.ab3@652> INCLUDE "internal_commands.ab3"
0003C716 <internal_commands.ab3@653> INCLUDE "internal_commands.ab3"
0003C71A <internal_commands.ab3@654> INCLUDE "internal_commands.ab3"
0003C71B <internal_commands.ab3@655> INCLUDE "internal_commands.ab3"
0003C71C <internal_commands.ab3@656> INCLUDE "internal_commands.ab3"
0003C71E <internal_commands.ab3@658> INCLUDE "internal_commands.ab3"
0003C722 <internal_commands.ab3@659> INCLUDE "internal_commands.ab3"
0003C724 <internal_commands.ab3@660> INCLUDE "internal_commands.ab3"
0003C726 <internal_commands.ab3@661> INCLUDE "internal_commands.ab3"
0003C72A <internal_commands.ab3@662> INCLUDE "internal_commands.ab3"
0003C72C <internal_commands.ab3@663> INCLUDE "internal_commands.ab3"
0003C730 <internal_commands.ab3@667> INCLUDE "internal_commands.ab3"
0003C732 <internal_commands.ab3@668> INCLUDE "internal_commands.ab3"
0003C736 <internal_commands.ab3@669> INCLUDE "internal_commands.ab3"
0003C737 <internal_commands.ab3@670> INCLUDE "internal_commands.ab3"
0003C738 <internal_commands.ab3@671> INCLUDE "internal_commands.ab3"
0003C73A <internal_commands.ab3@673> INCLUDE "internal_commands.ab3"
0003C73E <internal_commands.ab3@674> INCLUDE "internal_commands.ab3"
0003C740 <internal_commands.ab3@675> INCLUDE "internal_commands.ab3"
0003C742 <internal_commands.ab3@676> INCLUDE "internal_commands.ab3"
0003C746 <internal_commands.ab3@677> INCLUDE "internal_commands.ab3"
0003C748 <internal_commands.ab3@678> INCLUDE "internal_commands.ab3"
0003C74C <internal_commands.ab3@682> INCLUDE "internal_commands.ab3"
0003C74E <internal_commands.ab3@683> INCLUDE "internal_commands.ab3"
0003C752 <internal_commands.ab3@684> INCLUDE "internal_commands.ab3"
0003C753 <internal_commands.ab3@685> INCLUDE "internal_commands.ab3"
0003C754 <internal_commands.ab3@686> INCLUDE "internal_commands.ab3"
0003C756 <internal_commands.ab3@688> INCLUDE "internal_commands.ab3"
0003C75A <internal_commands.ab3@689> INCLUDE "internal_commands.ab3"
0003C75C <internal_commands.ab3@690> INCLUDE "internal_commands.ab3"
0003C75E <internal_commands.ab3@691> INCLUDE "internal_commands.ab3"
0003C762 <internal_commands.ab3@692> INCLUDE "internal_commands.ab3"
0003C764 <internal_commands.ab3@693> INCLUDE "internal_commands.ab3"
0003C768 <internal_commands.ab3@697> INCLUDE "internal_commands.ab3"
0003C76A <internal_commands.ab3@698> INCLUDE "internal_commands.ab3"
0003C76E <internal_commands.ab3@699> INCLUDE "internal_commands.ab3"
0003C76F <internal_commands.ab3@700> INCLUDE "internal_commands.ab3"
0003C770 <internal_commands.ab3@701> INCLUDE "internal_commands.ab3"
0003C772 <internal_commands.ab3@703> INCLUDE "internal_commands.ab3"
0003C776 <internal_commands.ab3@704> INCLUDE "internal_commands.ab3"
0003C778 <internal_commands.ab3@705> INCLUDE "internal_commands.ab3"
0003C77A <internal_commands.ab3@706> INCLUDE "internal_commands.ab3"
0003C77E <internal_commands.ab3@707> INCLUDE "internal_commands.ab3"
0003C780 <internal_commands.ab3@708> INCLUDE "internal_commands.ab3"
0003C784 <internal_commands.ab3@712> INCLUDE "internal_commands.ab3"
0003C786 <internal_commands.ab3@713> INCLUDE "internal_commands.ab3"
0003C78A <internal_commands.ab3@714> INCLUDE "internal_commands.ab3"
0003C78B <internal_commands.ab3@715> INCLUDE "internal_commands.ab3"
0003C78C <internal_commands.ab3@716> INCLUDE "internal_commands.ab3"
0003C78E <internal_commands.ab3@718> INCLUDE "internal_commands.ab3"
0003C792 <internal_commands.ab3@719> INCLUDE "internal_commands.ab3"
0003C794 <internal_commands.ab3@720> INCLUDE "internal_commands.ab3"
0003C796 <internal_commands.ab3@721> INCLUDE "internal_commands.ab3"
0003C79A <internal_commands.ab3@722> INCLUDE "internal_commands.ab3"
0003C79C <internal_commands.ab3@723> INCLUDE "internal_commands.ab3"
0003C7A0 <internal_commands.ab3@727> INCLUDE "internal_commands.ab3"
0003C7A2 <internal_commands.ab3@728> INCLUDE "internal_commands.ab3"
0003C7A6 <internal_commands.ab3@729> INCLUDE "internal_commands.ab3"
0003C7A7 <internal_commands.ab3@730> INCLUDE "internal_commands.ab3"
0003C7A8 <internal_commands.ab3@731> INCLUDE "internal_commands.ab3"
0003C7AA <internal_commands.ab3@733> INCLUDE "internal_commands.ab3"
0003C7AE <internal_commands.ab3@734> INCLUDE "internal_commands.ab3"
0003C7B0 <internal_commands.ab3@735> INCLUDE "internal_commands.ab3"
0003C7B2 <internal_commands.ab3@736> INCLUDE "internal_commands.ab3"
0003C7B6 <internal_commands.ab3@737> INCLUDE "internal_commands.ab3"
0003C7B8 <internal_commands.ab3@738> INCLUDE "internal_commands.ab3"
0003C7BC <internal_commands.ab3@742> INCLUDE "internal_commands.ab3"
0003C7BE <internal_commands.ab3@743> INCLUDE "internal_commands.ab3"
0003C7C2 <internal_commands.ab3@744> INCLUDE "internal_commands.ab3"
0003C7C3 <internal_commands.ab3@745> INCLUDE "internal_commands.ab3"
0003C7C4 <internal_commands.ab3@746> INCLUDE "internal_commands.ab3"
0003C7C6 <internal_commands.ab3@748> INCLUDE "internal_commands.ab3"
0003C7CA <internal_commands.ab3@749> INCLUDE "internal_commands.ab3"
0003C7CC <internal_commands.ab3@750> INCLUDE "internal_commands.ab3"
0003C7CE <internal_commands.ab3@751> INCLUDE "internal_commands.ab3"
0003C7D2 <internal_commands.ab3@752> INCLUDE "internal_commands.ab3"
0003C7D4 <internal_commands.ab3@753> INCLUDE "internal_commands.ab3"
0003C7D8 <internal_commands.ab3@757> INCLUDE "internal_commands.ab3"
0003C7DA <internal_commands.ab3@758> INCLUDE "internal_commands.ab3"
0003C7DE <internal_commands.ab3@759> INCLUDE "internal_commands.ab3"
0003C7DF <internal_commands.ab3@760> INCLUDE "internal_commands.ab3"
0003C7E0 <internal_commands.ab3@761> INCLUDE "internal_commands.ab3"
0003C7E2 <internal_commands.ab3@763> INCLUDE "internal_commands.ab3"
0003C7E6 <internal_commands.ab3@764> INCLUDE "internal_commands.ab3"
0003C7E8 <internal_commands.ab3@765> INCLUDE "internal_commands.ab3"
0003C7EA <internal_commands.ab3@766> INCLUDE "internal_commands.ab3"
0003C7EE <internal_commands.ab3@767> INCLUDE "internal_commands.ab3"
0003C7F0 <internal_commands.ab3@768> INCLUDE "internal_commands.ab3"
0003C7F4 <internal_commands.ab3@772> INCLUDE "internal_commands.ab3"
0003C7F6 <internal_commands.ab3@773> INCLUDE "internal_commands.ab3"
0003C7FA <internal_commands.ab3@774> INCLUDE "internal_commands.ab3"
0003C7FB <internal_commands.ab3@775> INCLUDE "internal_commands.ab3"
0003C7FC <internal_commands.ab3@776> INCLUDE "internal_commands.ab3"
0003C7FE <internal_commands.ab3@778> INCLUDE "internal_commands.ab3"
0003C802 <internal_commands.ab3@779> INCLUDE "internal_commands.ab3"
0003C804 <internal_commands.ab3@780> INCLUDE "internal_commands.ab3"
0003C806 <internal_commands.ab3@781> INCLUDE "internal_commands.ab3"
0003C80A <internal_commands.ab3@782> INCLUDE "internal_commands.ab3"
0003C80C <internal_commands.ab3@783> INCLUDE "internal_commands.ab3"
0003C810 <internal_commands.ab3@787> INCLUDE "internal_commands.ab3"
0003C812 <internal_commands.ab3@788> INCLUDE "internal_commands.ab3"
0003C816 <internal_commands.ab3@789> INCLUDE "internal_commands.ab3"
0003C817 <internal_commands.ab3@790> INCLUDE "internal_commands.ab3"
0003C818 <internal_commands.ab3@791> INCLUDE "internal_commands.ab3"
0003C81A <internal_commands.ab3@793> INCLUDE "internal_commands.ab3"
0003C81E <internal_commands.ab3@794> INCLUDE "internal_commands.ab3"
0003C820 <internal_commands.ab3@795> INCLUDE "internal_commands.ab3"
0003C822 <internal_commands.ab3@796> INCLUDE "internal_commands.ab3"
0003C826 <internal_commands.ab3@797> INCLUDE "internal_commands.ab3"
0003C828 <internal_commands.ab3@798> INCLUDE "internal_commands.ab3"
0003C82C <internal_commands.ab3@802> INCLUDE "internal_commands.ab3"
0003C82E <internal_commands.ab3@803> INCLUDE "internal_commands.ab3"
0003C832 <internal_commands.ab3@804> INCLUDE "internal_commands.ab3"
0003C833 <internal_commands.ab3@805> INCLUDE "internal_commands.ab3"
0003C834 <internal_commands.ab3@806> INCLUDE "internal_commands.ab3"
0003C836 <internal_commands.ab3@808> INCLUDE "internal_commands.ab3"
0003C83A <internal_commands.ab3@809> INCLUDE "internal_commands.ab3"
0003C83C <internal_commands.ab3@810> INCLUDE "internal_commands.ab3"
0003C83E <internal_commands.ab3@811> INCLUDE "internal_commands.ab3"
0003C842 <internal_commands.ab3@812> INCLUDE "internal_commands.ab3"
0003C844 <internal_commands.ab3@813> INCLUDE "internal_commands.ab3"
0003C848 <internal_commands.ab3@817> INCLUDE "internal_commands.ab3"
0003C84A <internal_commands.ab3@818> INCLUDE "internal_commands.ab3"
0003C84E <internal_commands.ab3@819> INCLUDE "internal_commands.ab3"
0003C84F <internal_commands.ab3@820> INCLUDE "internal_commands.ab3"
0003C850 <internal_commands.ab3@821> INCLUDE "internal_commands.ab3"
0003C852 <internal_commands.ab3@823> INCLUDE "internal_commands.ab3"
0003C856 <internal_commands.ab3@824> INCLUDE "internal_commands.ab3"
0003C858 <internal_commands.ab3@825> INCLUDE "internal_commands.ab3"
0003C85A <internal_commands.ab3@826> INCLUDE "internal_commands.ab3"
0003C85E <internal_commands.ab3@827> INCLUDE "internal_commands.ab3"
0003C860 <internal_commands.ab3@828> INCLUDE "internal_commands.ab3"
0003C864 <internal_commands.ab3@832> INCLUDE "internal_commands.ab3"
0003C866 <internal_commands.ab3@833> INCLUDE "internal_commands.ab3"
0003C86A <internal_commands.ab3@834> INCLUDE "internal_commands.ab3"
0003C86B <internal_commands.ab3@835> INCLUDE "internal_commands.ab3"
0003C86C <internal_commands.ab3@836> INCLUDE "internal_commands.ab3"
0003C86E <internal_commands.ab3@838> INCLUDE "internal_commands.ab3"
0003C872 <internal_commands.ab3@839> INCLUDE "internal_commands.ab3"
0003C874 <internal_commands.ab3@840> INCLUDE "internal_commands.ab3"
0003C876 <internal_commands.ab3@841> INCLUDE "internal_commands.ab3"
0003C87A <internal_commands.ab3@842> INCLUDE "internal_commands.ab3"
0003C87C <internal_commands.ab3@843> INCLUDE "internal_commands.ab3"
0003C880 <internal_commands.ab3@847> INCLUDE "internal_commands.ab3"
0003C882 <internal_commands.ab3@848> INCLUDE "internal_commands.ab3"
0003C886 <internal_commands.ab3@849> INCLUDE "internal_commands.ab3"
0003C887 <internal_commands.ab3@850> INCLUDE "internal_commands.ab3"
0003C888 <internal_commands.ab3@851> INCLUDE "internal_commands.ab3"
0003C88A <internal_commands.ab3@853> INCLUDE "internal_commands.ab3"
0003C88E <internal_commands.ab3@854> INCLUDE "internal_commands.ab3"
0003C890 <internal_commands.ab3@855> INCLUDE "internal_commands.ab3"
0003C892 <internal_commands.ab3@856> INCLUDE "internal_commands.ab3"
0003C896 <internal_commands.ab3@857> INCLUDE "internal_commands.ab3"
0003C898 <internal_commands.ab3@858> INCLUDE "internal_commands.ab3"
0003C89C <internal_commands.ab3@862> INCLUDE "internal_commands.ab3"
0003C89E <internal_commands.ab3@863> INCLUDE "internal_commands.ab3"
0003C8A2 <internal_commands.ab3@864> INCLUDE "internal_commands.ab3"
0003C8A3 <internal_commands.ab3@865> INCLUDE "internal_commands.ab3"
0003C8A4 <internal_commands.ab3@866> INCLUDE "internal_commands.ab3"
0003C8A6 <internal_commands.ab3@868> INCLUDE "internal_commands.ab3"
0003C8AA <internal_commands.ab3@869> INCLUDE "internal_commands.ab3"
0003C8AC <internal_commands.ab3@870> INCLUDE "internal_commands.ab3"
0003C8AE <internal_commands.ab3@871> INCLUDE "internal_commands.ab3"
0003C8B2 <internal_commands.ab3@872> INCLUDE "internal_commands.ab3"
0003C8B4 <internal_commands.ab3@873> INCLUDE "internal_commands.ab3"
0003C8B8 <internal_commands.ab3@877> INCLUDE "internal_commands.ab3"
0003C8BA <internal_commands.ab3@878> INCLUDE "internal_commands.ab3"
0003C8BF <internal_commands.ab3@879> INCLUDE "internal_commands.ab3"
0003C8C0 <internal_commands.ab3@880> INCLUDE "internal_commands.ab3"
0003C8C2 <internal_commands.ab3@883> INCLUDE "internal_commands.ab3"
0003C8C6 <internal_commands.ab3@884> INCLUDE "internal_commands.ab3"
0003C8C8 <internal_commands.ab3@885> INCLUDE "internal_commands.ab3"
0003C8CA <internal_commands.ab3@886> INCLUDE "internal_commands.ab3"
0003C8CE <internal_commands.ab3@887> INCLUDE "internal_commands.ab3"
0003C8D0 <internal_commands.ab3@888> INCLUDE "internal_commands.ab3"
0003C8D4 <internal_commands.ab3@892> INCLUDE "internal_commands.ab3"
0003C8D6 <internal_commands.ab3@893> INCLUDE "internal_commands.ab3"
0003C8DB <internal_commands.ab3@894> INCLUDE "internal_commands.ab3"
0003C8DC <internal_commands.ab3@895> INCLUDE "internal_commands.ab3"
0003C8DE <internal_commands.ab3@898> INCLUDE "internal_commands.ab3"
0003C8E2 <internal_commands.ab3@899> INCLUDE "internal_commands.ab3"
0003C8E4 <internal_commands.ab3@900> INCLUDE "internal_commands.ab3"
0003C8E6 <internal_commands.ab3@901> INCLUDE "internal_commands.ab3"
0003C8EA <internal_commands.ab3@902> INCLUDE "internal_commands.ab3"
0003C8EC <internal_commands.ab3@903> INCLUDE "internal_commands.ab3"
0003C8F0 <internal_commands.ab3@907> INCLUDE "internal_commands.ab3"
0003C8F2 <internal_commands.ab3@908> INCLUDE "internal_commands.ab3"
0003C8F7 <internal_commands.ab3@909> INCLUDE "internal_commands.ab3"
0003C8F8 <internal_commands.ab3@910> INCLUDE "internal_commands.ab3"
0003C8FA <internal_commands.ab3@913> INCLUDE "internal_commands.ab3"
0003C8FE <internal_commands.ab3@914> INCLUDE "internal_commands.ab3"
0003C900 <internal_commands.ab3@915> INCLUDE "internal_commands.ab3"
0003C902 <internal_commands.ab3@916> INCLUDE "internal_commands.ab3"
0003C906 <internal_commands.ab3@917> INCLUDE "internal_commands.ab3"
0003C908 <internal_commands.ab3@918> INCLUDE "internal_commands.ab3"
0003C90C <internal_commands.ab3@922> INCLUDE "internal_commands.ab3"
0003C90E <internal_commands.ab3@923> INCLUDE "internal_commands.ab3"
0003C913 <internal_commands.ab3@924> INCLUDE "internal_commands.ab3"
0003C914 <internal_commands.ab3@925> INCLUDE "internal_commands.ab3"
0003C916 <internal_commands.ab3@928> INCLUDE "internal_commands.ab3"
0003C91A <internal_commands.ab3@929> INCLUDE "internal_commands.ab3"
0003C91C <internal_commands.ab3@930> INCLUDE "internal_commands.ab3"
0003C91E <internal_commands.ab3@931> INCLUDE "internal_commands.ab3"
0003C922 <internal_commands.ab3@932> INCLUDE "internal_commands.ab3"
0003C924 <internal_commands.ab3@933> INCLUDE "internal_commands.ab3"
0003C928 <internal_commands.ab3@937> INCLUDE "internal_commands.ab3"
0003C92A <internal_commands.ab3@938> INCLUDE "internal_commands.ab3"
0003C92E <internal_commands.ab3@939> INCLUDE "internal_commands.ab3"
0003C92F <internal_commands.ab3@940> INCLUDE "internal_commands.ab3"
0003C930 <internal_commands.ab3@941> INCLUDE "internal_commands.ab3"
0003C932 <internal_commands.ab3@943> INCLUDE "internal_commands.ab3"
0003C936 <internal_commands.ab3@944> INCLUDE "internal_commands.ab3"
0003C938 <internal_commands.ab3@945> INCLUDE "internal_commands.ab3"
0003C93A <internal_commands.ab3@946> INCLUDE "internal_commands.ab3"
0003C93E <internal_commands.ab3@947> INCLUDE "internal_commands.ab3"
0003C940 <internal_commands.ab3@948> INCLUDE "internal_commands.ab3"
0003C944 <internal_commands.ab3@952> INCLUDE "internal_commands.ab3"
0003C946 <internal_commands.ab3@953> INCLUDE "internal_commands.ab3"
0003C94A <internal_commands.ab3@954> INCLUDE "internal_commands.ab3"
0003C94B <internal_commands.ab3@955> INCLUDE "internal_commands.ab3"
0003C94C <internal_commands.ab3@956> INCLUDE "internal_commands.ab3"
0003C94E <internal_commands.ab3@958> INCLUDE "internal_commands.ab3"
0003C952 <internal_commands.ab3@959> INCLUDE "internal_commands.ab3"
0003C954 <internal_commands.ab3@960> INCLUDE "internal_commands.ab3"
0003C956 <internal_commands.ab3@961> INCLUDE "internal_commands.ab3"
0003C95A <internal_commands.ab3@962> INCLUDE "internal_commands.ab3"
0003C95C <internal_commands.ab3@963> INCLUDE "internal_commands.ab3"
0003C960 <internal_commands.ab3@967> INCLUDE "internal_commands.ab3"
0003C962 <internal_commands.ab3@968> INCLUDE "internal_commands.ab3"
0003C966 <internal_commands.ab3@969> INCLUDE "internal_commands.ab3"
0003C967 <internal_commands.ab3@970> INCLUDE "internal_commands.ab3"
0003C968 <internal_commands.ab3@971> INCLUDE "internal_commands.ab3"
0003C96A <internal_commands.ab3@973> INCLUDE "internal_commands.ab3"
0003C96E <internal_commands.ab3@974> INCLUDE "internal_commands.ab3"
0003C970 <internal_commands.ab3@975> INCLUDE "internal_commands.ab3"
0003C972 <internal_commands.ab3@976> INCLUDE "internal_commands.ab3"
0003C976 <internal_commands.ab3@977> INCLUDE "internal_commands.ab3"
0003C978 <internal_commands.ab3@978> INCLUDE "internal_commands.ab3"
0003C97C <internal_commands.ab3@982> INCLUDE "internal_commands.ab3"
0003C97E <internal_commands.ab3@983> INCLUDE "internal_commands.ab3"
0003C982 <internal_commands.ab3@984> INCLUDE "internal_commands.ab3"
0003C983 <internal_commands.ab3@985> INCLUDE "internal_commands.ab3"
0003C984 <internal_commands.ab3@986> INCLUDE "internal_commands.ab3"
0003C986 <internal_commands.ab3@988> INCLUDE "internal_commands.ab3"
0003C98A <internal_commands.ab3@989> INCLUDE "internal_commands.ab3"
0003C98C <internal_commands.ab3@990> INCLUDE "internal_commands.ab3"
0003C98E <internal_commands.ab3@991> INCLUDE "internal_commands.ab3"
0003C992 <internal_commands.ab3@992> INCLUDE "internal_commands.ab3"
0003C994 <internal_commands.ab3@993> INCLUDE "internal_commands.ab3"
0003C998 <internal_commands.ab3@997> INCLUDE "internal_commands.ab3"
0003C99A <internal_commands.ab3@998> INCLUDE "internal_commands.ab3"
0003C99E <internal_commands.ab3@999> INCLUDE "internal_commands.ab3"
0003C99F <internal_commands.ab3@1000> INCLUDE "internal_commands.ab3"
0003C9A0 <internal_commands.ab3@1001> INCLUDE "internal_commands.ab3"
0003C9A2 <internal_commands.ab3@1003> INCLUDE "internal_commands.ab3"
0003C9A6 <internal_commands.ab3@1004> INCLUDE "internal_commands.ab3"
0003C9A8 <internal_commands.ab3@1005> INCLUDE "internal_commands.ab3"
0003C9AA <internal_commands.ab3@1006> INCLUDE "internal_commands.ab3"
0003C9AE <internal_commands.ab3@1007> INCLUDE "internal_commands.ab3"
0003C9B0 <internal_commands.ab3@1008> INCLUDE "internal_commands.ab3"
0003C9B4 <internal_commands.ab3@1012> INCLUDE "internal_commands.ab3"
0003C9B6 <internal_commands.ab3@1013> INCLUDE "internal_commands.ab3"
0003C9BB <internal_commands.ab3@1014> INCLUDE "internal_commands.ab3"
0003C9BC <internal_commands.ab3@1015> INCLUDE "internal_commands.ab3"
0003C9BE <internal_commands.ab3@1018> INCLUDE "internal_commands.ab3"
0003C9C2 <internal_commands.ab3@1019> INCLUDE "internal_commands.ab3"
0003C9C4 <internal_commands.ab3@1020> INCLUDE "internal_commands.ab3"
0003C9C6 <internal_commands.ab3@1021> INCLUDE "internal_commands.ab3"
0003C9CA <internal_commands.ab3@1022> INCLUDE "internal_commands.ab3"
0003C9CC <internal_commands.ab3@1023> INCLUDE "internal_commands.ab3"
0003C9D0 <internal_commands.ab3@1027> INCLUDE "internal_commands.ab3"
0003C9D2 <internal_commands.ab3@1028> INCLUDE "internal_commands.ab3"
0003C9D7 <internal_commands.ab3@1029> INCLUDE "internal_commands.ab3"
0003C9D8 <internal_commands.ab3@1030> INCLUDE "internal_commands.ab3"
0003C9DA <internal_commands.ab3@1033> INCLUDE "internal_commands.ab3"
0003C9DE <internal_commands.ab3@1034> INCLUDE "internal_commands.ab3"
0003C9E0 <internal_commands.ab3@1035> INCLUDE "internal_commands.ab3"
0003C9E2 <internal_commands.ab3@1036> INCLUDE "internal_commands.ab3"
0003C9E6 <internal_commands.ab3@1037> INCLUDE "internal_commands.ab3"
0003C9E8 <internal_commands.ab3@1038> INCLUDE "internal_commands.ab3"
0003C9EC <internal_commands.ab3@1042> INCLUDE "internal_commands.ab3"
0003C9EE <internal_commands.ab3@1043> INCLUDE "internal_commands.ab3"
0003C9F3 <internal_commands.ab3@1044> INCLUDE "internal_commands.ab3"
0003C9F4 <internal_commands.ab3@1045> INCLUDE "internal_commands.ab3"
0003C9F6 <internal_commands.ab3@1048> INCLUDE "internal_commands.ab3"
0003C9FA <internal_commands.ab3@1049> INCLUDE "internal_commands.ab3"
0003C9FC <internal_commands.ab3@1050> INCLUDE "internal_commands.ab3"
0003C9FE <internal_commands.ab3@1051> INCLUDE "internal_commands.ab3"
0003CA02 <internal_commands.ab3@1052> INCLUDE "internal_commands.ab3"
0003CA04 <internal_commands.ab3@1053> INCLUDE "internal_commands.ab3"
0003CA08 <internal_commands.ab3@1057> INCLUDE "internal_commands.ab3"
0003CA0A <internal_commands.ab3@1058> INCLUDE "internal_commands.ab3"
0003CA0F <internal_commands.ab3@1059> INCLUDE "internal_commands.ab3"
0003CA10 <internal_commands.ab3@1060> INCLUDE "internal_commands.ab3"
0003CA12 <internal_commands.ab3@1063> INCLUDE "internal_commands.ab3"
0003CA16 <internal_commands.ab3@1064> INCLUDE "internal_commands.ab3"
0003CA18 <internal_commands.ab3@1065> INCLUDE "internal_commands.ab3"
0003CA1A <internal_commands.ab3@1066> INCLUDE "internal_commands.ab3"
0003CA1E <internal_commands.ab3@1067> INCLUDE "internal_commands.ab3"
0003CA20 <internal_commands.ab3@1068> INCLUDE "internal_commands.ab3"
0003CA24 <internal_commands.ab3@1072> INCLUDE "internal_commands.ab3"
0003CA26 <internal_commands.ab3@1073> INCLUDE "internal_commands.ab3"
0003CA2B <internal_commands.ab3@1074> INCLUDE "internal_commands.ab3"
0003CA2C <internal_commands.ab3@1075> INCLUDE "internal_commands.ab3"
0003CA2E <internal_commands.ab3@1078> INCLUDE "internal_commands.ab3"
0003CA32 <internal_commands.ab3@1079> INCLUDE "internal_commands.ab3"
0003CA34 <internal_commands.ab3@1080> INCLUDE "internal_commands.ab3"
0003CA36 <internal_commands.ab3@1081> INCLUDE "internal_commands.ab3"
0003CA3A <internal_commands.ab3@1082> INCLUDE "internal_commands.ab3"
0003CA3C <internal_commands.ab3@1083> INCLUDE "internal_commands.ab3"
0003CA40 <internal_commands.ab3@1087> INCLUDE "internal_commands.ab3"
0003CA42 <internal_commands.ab3@1088> INCLUDE "internal_commands.ab3"
0003CA47 <internal_commands.ab3@1089> INCLUDE "internal_commands.ab3"
0003CA48 <internal_commands.ab3@1090> INCLUDE "internal_commands.ab3"
0003CA4A <internal_commands.ab3@1093> INCLUDE "internal_commands.ab3"
0003CA4E <internal_commands.ab3@1094> INCLUDE "internal_commands.ab3"
0003CA50 <internal_commands.ab3@1095> INCLUDE "internal_commands.ab3"
0003CA52 <internal_commands.ab3@1096> INCLUDE "internal_commands.ab3"
0003CA56 <internal_commands.ab3@1097> INCLUDE "internal_commands.ab3"
0003CA58 <internal_commands.ab3@1098> INCLUDE "internal_commands.ab3"
0003CA5C <internal_commands.ab3@1102> INCLUDE "internal_commands.ab3"
0003CA5E <internal_commands.ab3@1103> INCLUDE "internal_commands.ab3"
0003CA63 <internal_commands.ab3@1104> INCLUDE "internal_commands.ab3"
0003CA64 <internal_commands.ab3@1105> INCLUDE "internal_commands.ab3"
0003CA66 <internal_commands.ab3@1108> INCLUDE "internal_commands.ab3"
0003CA6A <internal_commands.ab3@1109> INCLUDE "internal_commands.ab3"
0003CA6C <internal_commands.ab3@1110> INCLUDE "internal_commands.ab3"
0003CA6E <internal_commands.ab3@1111> INCLUDE "internal_commands.ab3"
0003CA72 <internal_commands.ab3@1112> INCLUDE "internal_commands.ab3"
0003CA74 <internal_commands.ab3@1113> INCLUDE "internal_commands.ab3"
0003CA78 <internal_commands.ab3@1117> INCLUDE "internal_commands.ab3"
0003CA7A <internal_commands.ab3@1118> INCLUDE "internal_commands.ab3"
0003CA7F <internal_commands.ab3@1119> INCLUDE "internal_commands.ab3"
0003CA80 <internal_commands.ab3@1120> INCLUDE "internal_commands.ab3"
0003CA82 <internal_commands.ab3@1123> INCLUDE "internal_commands.ab3"
0003CA86 <internal_commands.ab3@1124> INCLUDE "internal_commands.ab3"
0003CA88 <internal_commands.ab3@1125> INCLUDE "internal_commands.ab3"
0003CA8A <internal_commands.ab3@1126> INCLUDE "internal_commands.ab3"
0003CA8E <internal_commands.ab3@1127> INCLUDE "internal_commands.ab3"
0003CA90 <internal_commands.ab3@1128> INCLUDE "internal_commands.ab3"
0003CA94 <internal_commands.ab3@1132> INCLUDE "internal_commands.ab3"
0003CA96 <internal_commands.ab3@1133> INCLUDE "internal_commands.ab3"
0003CA9B <internal_commands.ab3@1134> INCLUDE "internal_commands.ab3"
0003CA9C <internal_commands.ab3@1135> INCLUDE "internal_commands.ab3"
0003CA9E <internal_commands.ab3@1138> INCLUDE "internal_commands.ab3"
0003CAA2 <internal_commands.ab3@1139> INCLUDE "internal_commands.ab3"
0003CAA4 <internal_commands.ab3@1140> INCLUDE "internal_commands.ab3"
0003CAA6 <internal_commands.ab3@1141> INCLUDE "internal_commands.ab3"
0003CAAA <internal_commands.ab3@1142> INCLUDE "internal_commands.ab3"
0003CAAC <internal_commands.ab3@1143> INCLUDE "internal_commands.ab3"
0003CAB0 <internal_commands.ab3@1147> INCLUDE "internal_commands.ab3"
0003CAB2 <internal_commands.ab3@1148> INCLUDE "internal_commands.ab3"
0003CAB7 <internal_commands.ab3@1149> INCLUDE "internal_commands.ab3"
0003CAB8 <internal_commands.ab3@1150> INCLUDE "internal_commands.ab3"
0003CABA <internal_commands.ab3@1153> INCLUDE "internal_commands.ab3"
0003CABE <internal_commands.ab3@1154> INCLUDE "internal_commands.ab3"
0003CAC0 <internal_commands.ab3@1155> INCLUDE "internal_commands.ab3"
0003CAC2 <internal_commands.ab3@1156> INCLUDE "internal_commands.ab3"
0003CAC6 <internal_commands.ab3@1157> INCLUDE "internal_commands.ab3"
0003CAC8 <internal_commands.ab3@1158> INCLUDE "internal_commands.ab3"
0003CACC <internal_commands.ab3@1162> INCLUDE "internal_commands.ab3"
0003CACE <internal_commands.ab3@1163> INCLUDE "internal_commands.ab3"
0003CAD3 <internal_commands.ab3@1164> INCLUDE "internal_commands.ab3"
0003CAD4 <internal_commands.ab3@1165> INCLUDE "internal_commands.ab3"
0003CAD6 <internal_commands.ab3@1168> INCLUDE "internal_commands.ab3"
0003CADA <internal_commands.ab3@1169> INCLUDE "internal_commands.ab3"
0003CADC <internal_commands.ab3@1170> INCLUDE "internal_commands.ab3"
0003CADE <internal_commands.ab3@1171> INCLUDE "internal_commands.ab3"
0003CAE2 <internal_commands.ab3@1172> INCLUDE "internal_commands.ab3"
0003CAE4 <internal_commands.ab3@1173> INCLUDE "internal_commands.ab3"
0003CAE8 <internal_commands.ab3@1177> INCLUDE "internal_commands.ab3"
0003CAEA <internal_commands.ab3@1178> INCLUDE "internal_commands.ab3"
0003CAEF <internal_commands.ab3@1179> INCLUDE "internal_commands.ab3"
0003CAF0 <internal_commands.ab3@1180> INCLUDE "internal_commands.ab3"
0003CAF2 <internal_commands.ab3@1183> INCLUDE "internal_commands.ab3"
0003CAF6 <internal_commands.ab3@1184> INCLUDE "internal_commands.ab3"
0003CAF8 <internal_commands.ab3@1185> INCLUDE "internal_commands.ab3"
0003CAFA <internal_commands.ab3@1186> INCLUDE "internal_commands.ab3"
0003CAFE <internal_commands.ab3@1187> INCLUDE "internal_commands.ab3"
0003CB00 <internal_commands.ab3@1188> INCLUDE "internal_commands.ab3"
0003CB04 <internal_commands.ab3@1192> INCLUDE "internal_commands.ab3"
0003CB06 <internal_commands.ab3@1193> INCLUDE "internal_commands.ab3"
0003CB0B <internal_commands.ab3@1194> INCLUDE "internal_commands.ab3"
0003CB0C <internal_commands.ab3@1195> INCLUDE "internal_commands.ab3"
0003CB0E <internal_commands.ab3@1198> INCLUDE "internal_commands.ab3"
0003CB12 <internal_commands.ab3@1199> INCLUDE "internal_commands.ab3"
0003CB14 <internal_commands.ab3@1200> INCLUDE "internal_commands.ab3"
0003CB16 <internal_commands.ab3@1201> INCLUDE "internal_commands.ab3"
0003CB1A <internal_commands.ab3@1202> INCLUDE "internal_commands.ab3"
0003CB1C <internal_commands.ab3@1203> INCLUDE "internal_commands.ab3"
0003CB20 <internal_commands.ab3@1207> INCLUDE "internal_commands.ab3"
0003CB22 <internal_commands.ab3@1208> INCLUDE "internal_commands.ab3"
0003CB27 <internal_commands.ab3@1209> INCLUDE "internal_commands.ab3"
0003CB28 <internal_commands.ab3@1210> INCLUDE "internal_commands.ab3"
0003CB2A <internal_commands.ab3@1213> INCLUDE "internal_commands.ab3"
0003CB2E <internal_commands.ab3@1214> INCLUDE "internal_commands.ab3"
0003CB30 <internal_commands.ab3@1215> INCLUDE "internal_commands.ab3"
0003CB32 <internal_commands.ab3@1216> INCLUDE "internal_commands.ab3"
0003CB36 <internal_commands.ab3@1217> INCLUDE "internal_commands.ab3"
0003CB38 <internal_commands.ab3@1218> INCLUDE "internal_commands.ab3"
0003CB3C <internal_commands.ab3@1222> INCLUDE "internal_commands.ab3"
0003CB3E <internal_commands.ab3@1223> INCLUDE "internal_commands.ab3"
0003CB43 <internal_commands.ab3@1224> INCLUDE "internal_commands.ab3"
0003CB44 <internal_commands.ab3@1225> INCLUDE "internal_commands.ab3"
0003CB46 <internal_commands.ab3@1228> INCLUDE "internal_commands.ab3"
0003CB4A <internal_commands.ab3@1229> INCLUDE "internal_commands.ab3"
0003CB4C <internal_commands.ab3@1230> INCLUDE "internal_commands.ab3"
0003CB4E <internal_commands.ab3@1231> INCLUDE "internal_commands.ab3"
0003CB52 <internal_commands.ab3@1232> INCLUDE "internal_commands.ab3"
0003CB54 <internal_commands.ab3@1233> INCLUDE "internal_commands.ab3"
0003CB58 <internal_commands.ab3@1237> INCLUDE "internal_commands.ab3"
0003CB5A <internal_commands.ab3@1238> INCLUDE "internal_commands.ab3"
0003CB5F <internal_commands.ab3@1239> INCLUDE "internal_commands.ab3"
0003CB60 <internal_commands.ab3@1240> INCLUDE "internal_commands.ab3"
0003CB62 <internal_commands.ab3@1243> INCLUDE "internal_commands.ab3"
0003CB66 <internal_commands.ab3@1244> INCLUDE "internal_commands.ab3"
0003CB68 <internal_commands.ab3@1245> INCLUDE "internal_commands.ab3"
0003CB6A <internal_commands.ab3@1246> INCLUDE "internal_commands.ab3"
0003CB6E <internal_commands.ab3@1247> INCLUDE "internal_commands.ab3"
0003CB70 <internal_commands.ab3@1248> INCLUDE "internal_commands.ab3"
0003CB74 <internal_commands.ab3@1252> INCLUDE "internal_commands.ab3"
0003CB76 <internal_commands.ab3@1253> INCLUDE "internal_commands.ab3"
0003CB7B <internal_commands.ab3@1254> INCLUDE "internal_commands.ab3"
0003CB7C <internal_commands.ab3@1255> INCLUDE "internal_commands.ab3"
0003CB7E <internal_commands.ab3@1258> INCLUDE "internal_commands.ab3"
0003CB82 <internal_commands.ab3@1259> INCLUDE "internal_commands.ab3"
0003CB84 <internal_commands.ab3@1260> INCLUDE "internal_commands.ab3"
0003CB86 <internal_commands.ab3@1261> INCLUDE "internal_commands.ab3"
0003CB8A <internal_commands.ab3@1262> INCLUDE "internal_commands.ab3"
0003CB8C <internal_commands.ab3@1263> INCLUDE "internal_commands.ab3"
0003CB90 <internal_commands.ab3@1266> INCLUDE "internal_commands.ab3"
0003CB92 <internal_commands.ab3@1267> INCLUDE "internal_commands.ab3"
0003CB96 <internal_commands.ab3@1268> INCLUDE "internal_commands.ab3"
0003CB97 <internal_commands.ab3@1269> INCLUDE "internal_commands.ab3"
0003CB98 <internal_commands.ab3@1270> INCLUDE "internal_commands.ab3"
0003CB9A <internal_commands.ab3@1272> INCLUDE "internal_commands.ab3"
0003CB9E <internal_commands.ab3@1273> INCLUDE "internal_commands.ab3"
0003CBA0 <internal_commands.ab3@1274> INCLUDE "internal_commands.ab3"
0003CBA2 <internal_commands.ab3@1275> INCLUDE "internal_commands.ab3"
0003CBA6 <internal_commands.ab3@1276> INCLUDE "internal_commands.ab3"
0003CBA8 <internal_commands.ab3@1277> INCLUDE "internal_commands.ab3"
0003CBAC <internal_commands.ab3@1281> INCLUDE "internal_commands.ab3"
0003CBAE <internal_commands.ab3@1282> INCLUDE "internal_commands.ab3"
0003CBB3 <internal_commands.ab3@1283> INCLUDE "internal_commands.ab3"
0003CBB4 <internal_commands.ab3@1284> INCLUDE "internal_commands.ab3"
0003CBB6 <internal_commands.ab3@1287> INCLUDE "internal_commands.ab3"
0003CBBA <internal_commands.ab3@1288> INCLUDE "internal_commands.ab3"
0003CBBC <internal_commands.ab3@1289> INCLUDE "internal_commands.ab3"
0003CBBE <internal_commands.ab3@1290> INCLUDE "internal_commands.ab3"
0003CBC2 <internal_commands.ab3@1291> INCLUDE "internal_commands.ab3"
0003CBC4 <internal_commands.ab3@1292> INCLUDE "internal_commands.ab3"
0003CBC8 <internal_commands.ab3@1296> INCLUDE "internal_commands.ab3"
0003CBCA <internal_commands.ab3@1297> INCLUDE "internal_commands.ab3"
0003CBCE <internal_commands.ab3@1298> INCLUDE "internal_commands.ab3"
0003CBCF <internal_commands.ab3@1299> INCLUDE "internal_commands.ab3"
0003CBD0 <internal_commands.ab3@1300> INCLUDE "internal_commands.ab3"
0003CBD2 <internal_commands.ab3@1302> INCLUDE "internal_commands.ab3"
0003CBD6 <internal_commands.ab3@1303> INCLUDE "internal_commands.ab3"
0003CBD8 <internal_commands.ab3@1304> INCLUDE "internal_commands.ab3"
0003CBDA <internal_commands.ab3@1305> INCLUDE "internal_commands.ab3"
0003CBDE <internal_commands.ab3@1306> INCLUDE "internal_commands.ab3"
0003CBE0 <internal_commands.ab3@1307> INCLUDE "internal_commands.ab3"
0003CBE4 <internal_commands.ab3@1311> INCLUDE "internal_commands.ab3"
0003CBE6 <internal_commands.ab3@1312> INCLUDE "internal_commands.ab3"
0003CBEB <internal_commands.ab3@1313> INCLUDE "internal_commands.ab3"
0003CBEC <internal_commands.ab3@1314> INCLUDE "internal_commands.ab3"
0003CBEE <internal_commands.ab3@1317> INCLUDE "internal_commands.ab3"
0003CBF2 <internal_commands.ab3@1318> INCLUDE "internal_commands.ab3"
0003CBF4 <internal_commands.ab3@1319> INCLUDE "internal_commands.ab3"
0003CBF6 <internal_commands.ab3@1320> INCLUDE "internal_commands.ab3"
0003CBFA <internal_commands.ab3@1321> INCLUDE "internal_commands.ab3"
0003CBFC <internal_commands.ab3@1322> INCLUDE "internal_commands.ab3"
0003CC00 <internal_commands.ab3@1326> INCLUDE "internal_commands.ab3"
0003CC02 <internal_commands.ab3@1327> INCLUDE "internal_commands.ab3"
0003CC07 <internal_commands.ab3@1328> INCLUDE "internal_commands.ab3"
0003CC08 <internal_commands.ab3@1329> INCLUDE "internal_commands.ab3"
0003CC0A <internal_commands.ab3@1332> INCLUDE "internal_commands.ab3"
0003CC0E <internal_commands.ab3@1333> INCLUDE "internal_commands.ab3"
0003CC10 <internal_commands.ab3@1334> INCLUDE "internal_commands.ab3"
0003CC12 <internal_commands.ab3@1335> INCLUDE "internal_commands.ab3"
0003CC16 <internal_commands.ab3@1336> INCLUDE "internal_commands.ab3"
0003CC18 <internal_commands.ab3@1337> INCLUDE "internal_commands.ab3"
0003CC1C <internal_commands.ab3@1341> INCLUDE "internal_commands.ab3"
0003CC1E <internal_commands.ab3@1342> INCLUDE "internal_commands.ab3"
0003CC22 <internal_commands.ab3@1343> INCLUDE "internal_commands.ab3"
0003CC23 <internal_commands.ab3@1344> INCLUDE "internal_commands.ab3"
0003CC24 <internal_commands.ab3@1345> INCLUDE "internal_commands.ab3"
0003CC26 <internal_commands.ab3@1347> INCLUDE "internal_commands.ab3"
0003CC2A <internal_commands.ab3@1348> INCLUDE "internal_commands.ab3"
0003CC2C <internal_commands.ab3@1349> INCLUDE "internal_commands.ab3"
0003CC2E <internal_commands.ab3@1350> INCLUDE "internal_commands.ab3"
0003CC32 <internal_commands.ab3@1351> INCLUDE "internal_commands.ab3"
0003CC34 <internal_commands.ab3@1352> INCLUDE "internal_commands.ab3"
0003CC38 <internal_commands.ab3@1356> INCLUDE "internal_commands.ab3"
0003CC3A <internal_commands.ab3@1357> INCLUDE "internal_commands.ab3"
0003CC3F <internal_commands.ab3@1358> INCLUDE "internal_commands.ab3"
0003CC40 <internal_commands.ab3@1359> INCLUDE "internal_commands.ab3"
0003CC42 <internal_commands.ab3@1362> INCLUDE "internal_commands.ab3"
0003CC46 <internal_commands.ab3@1363> INCLUDE "internal_commands.ab3"
0003CC48 <internal_commands.ab3@1364> INCLUDE "internal_commands.ab3"
0003CC4A <internal_commands.ab3@1365> INCLUDE "internal_commands.ab3"
0003CC4E <internal_commands.ab3@1366> INCLUDE "internal_commands.ab3"
0003CC50 <internal_commands.ab3@1367> INCLUDE "internal_commands.ab3"
0003CC54 <internal_commands.ab3@1371> INCLUDE "internal_commands.ab3"
0003CC56 <internal_commands.ab3@1372> INCLUDE "internal_commands.ab3"
0003CC5A <internal_commands.ab3@1373> INCLUDE "internal_commands.ab3"
0003CC5B <internal_commands.ab3@1374> INCLUDE "internal_commands.ab3"
0003CC5C <internal_commands.ab3@1375> INCLUDE "internal_commands.ab3"
0003CC5E <internal_commands.ab3@1377> INCLUDE "internal_commands.ab3"
0003CC62 <internal_commands.ab3@1378> INCLUDE "internal_commands.ab3"
0003CC64 <internal_commands.ab3@1379> INCLUDE "internal_commands.ab3"
0003CC66 <internal_commands.ab3@1380> INCLUDE "internal_commands.ab3"
0003CC6A <internal_commands.ab3@1381> INCLUDE "internal_commands.ab3"
0003CC6C <internal_commands.ab3@1382> INCLUDE "internal_commands.ab3"
0003CC70 <internal_commands.ab3@1386> INCLUDE "internal_commands.ab3"
0003CC72 <internal_commands.ab3@1387> INCLUDE "internal_commands.ab3"
0003CC76 <internal_commands.ab3@1388> INCLUDE "internal_commands.ab3"
0003CC77 <internal_commands.ab3@1389> INCLUDE "internal_commands.ab3"
0003CC78 <internal_commands.ab3@1390> INCLUDE "internal_commands.ab3"
0003CC7A <internal_commands.ab3@1392> INCLUDE "internal_commands.ab3"
0003CC7E <internal_commands.ab3@1393> INCLUDE "internal_commands.ab3"
0003CC80 <internal_commands.ab3@1394> INCLUDE "internal_commands.ab3"
0003CC82 <internal_commands.ab3@1395> INCLUDE "internal_commands.ab3"
0003CC86 <internal_commands.ab3@1396> INCLUDE "internal_commands.ab3"
0003CC88 <internal_commands.ab3@1397> INCLUDE "internal_commands.ab3"
0003CC8C <internal_commands.ab3@1401> INCLUDE "internal_commands.ab3"
0003CC8E <internal_commands.ab3@1402> INCLUDE "internal_commands.ab3"
0003CC96 <internal_commands.ab3@1403> INCLUDE "internal_commands.ab3"
0003CC97 <internal_commands.ab3@1404> INCLUDE "internal_commands.ab3"
0003CC98 <internal_commands.ab3@1405> INCLUDE "internal_commands.ab3"
0003CC9A <internal_commands.ab3@1407> INCLUDE "internal_commands.ab3"
0003CC9E <internal_commands.ab3@1408> INCLUDE "internal_commands.ab3"
0003CCA0 <internal_commands.ab3@1409> INCLUDE "internal_commands.ab3"
0003CCA2 <internal_commands.ab3@1410> INCLUDE "internal_commands.ab3"
0003CCA6 <internal_commands.ab3@1411> INCLUDE "internal_commands.ab3"
0003CCA8 <internal_commands.ab3@1412> INCLUDE "internal_commands.ab3"
0003CCAC <internal_commands.ab3@1416> INCLUDE "internal_commands.ab3"
0003CCAE <internal_commands.ab3@1417> INCLUDE "internal_commands.ab3"
0003CCB2 <internal_commands.ab3@1418> INCLUDE "internal_commands.ab3"
0003CCB3 <internal_commands.ab3@1419> INCLUDE "internal_commands.ab3"
0003CCB4 <internal_commands.ab3@1420> INCLUDE "internal_commands.ab3"
0003CCB6 <internal_commands.ab3@1422> INCLUDE "internal_commands.ab3"
0003CCBA <internal_commands.ab3@1423> INCLUDE "internal_commands.ab3"
0003CCBC <internal_commands.ab3@1424> INCLUDE "internal_commands.ab3"
0003CCBE <internal_commands.ab3@1425> INCLUDE "internal_commands.ab3"
0003CCC2 <internal_commands.ab3@1426> INCLUDE "internal_commands.ab3"
0003CCC4 <internal_commands.ab3@1427> INCLUDE "internal_commands.ab3"
0003CCC8 <internal_commands.ab3@1431> INCLUDE "internal_commands.ab3"
0003CCCA <internal_commands.ab3@1432> INCLUDE "internal_commands.ab3"
0003CCCE <internal_commands.ab3@1433> INCLUDE "internal_commands.ab3"
0003CCCF <internal_commands.ab3@1434> INCLUDE "internal_commands.ab3"
0003CCD0 <internal_commands.ab3@1435> INCLUDE "internal_commands.ab3"
0003CCD2 <internal_commands.ab3@1437> INCLUDE "internal_commands.ab3"
0003CCD6 <internal_commands.ab3@1438> INCLUDE "internal_commands.ab3"
0003CCD8 <internal_commands.ab3@1439> INCLUDE "internal_commands.ab3"
0003CCDA <internal_commands.ab3@1440> INCLUDE "internal_commands.ab3"
0003CCDE <internal_commands.ab3@1441> INCLUDE "internal_commands.ab3"
0003CCE0 <internal_commands.ab3@1442> INCLUDE "internal_commands.ab3"
0003CCE4 <internal_commands.ab3@1446> INCLUDE "internal_commands.ab3"
0003CCE6 <internal_commands.ab3@1447> INCLUDE "internal_commands.ab3"
0003CCEA <internal_commands.ab3@1448> INCLUDE "internal_commands.ab3"
0003CCEB <internal_commands.ab3@1449> INCLUDE "internal_commands.ab3"
0003CCEC <internal_commands.ab3@1450> INCLUDE "internal_commands.ab3"
0003CCEE <internal_commands.ab3@1452> INCLUDE "internal_commands.ab3"
0003CCF2 <internal_commands.ab3@1453> INCLUDE "internal_commands.ab3"
0003CCF4 <internal_commands.ab3@1454> INCLUDE "internal_commands.ab3"
0003CCF6 <internal_commands.ab3@1455> INCLUDE "internal_commands.ab3"
0003CCFA <internal_commands.ab3@1456> INCLUDE "internal_commands.ab3"
0003CCFC <internal_commands.ab3@1457> INCLUDE "internal_commands.ab3"
0003CD00 <internal_commands.ab3@1461> INCLUDE "internal_commands.ab3"
0003CD02 <internal_commands.ab3@1462> INCLUDE "internal_commands.ab3"
0003CD07 <internal_commands.ab3@1463> INCLUDE "internal_commands.ab3"
0003CD08 <internal_commands.ab3@1464> INCLUDE "internal_commands.ab3"
0003CD0A <internal_commands.ab3@1467> INCLUDE "internal_commands.ab3"
0003CD0E <internal_commands.ab3@1468> INCLUDE "internal_commands.ab3"
0003CD10 <internal_commands.ab3@1469> INCLUDE "internal_commands.ab3"
0003CD12 <internal_commands.ab3@1470> INCLUDE "internal_commands.ab3"
0003CD16 <internal_commands.ab3@1471> INCLUDE "internal_commands.ab3"
0003CD18 <internal_commands.ab3@1472> INCLUDE "internal_commands.ab3"
0003CD1C <internal_commands.ab3@1476> INCLUDE "internal_commands.ab3"
0003CD1E <internal_commands.ab3@1477> INCLUDE "internal_commands.ab3"
0003CD22 <internal_commands.ab3@1478> INCLUDE "internal_commands.ab3"
0003CD23 <internal_commands.ab3@1479> INCLUDE "internal_commands.ab3"
0003CD24 <internal_commands.ab3@1480> INCLUDE "internal_commands.ab3"
0003CD26 <internal_commands.ab3@1482> INCLUDE "internal_commands.ab3"
0003CD2A <internal_commands.ab3@1483> INCLUDE "internal_commands.ab3"
0003CD2C <internal_commands.ab3@1484> INCLUDE "internal_commands.ab3"
0003CD2E <internal_commands.ab3@1485> INCLUDE "internal_commands.ab3"
0003CD32 <internal_commands.ab3@1486> INCLUDE "internal_commands.ab3"
0003CD34 <internal_commands.ab3@1487> INCLUDE "internal_commands.ab3"
0003CD38 <internal_commands.ab3@1491> INCLUDE "internal_commands.ab3"
0003CD3A <internal_commands.ab3@1492> INCLUDE "internal_commands.ab3"
0003CD3E <internal_commands.ab3@1493> INCLUDE "internal_commands.ab3"
0003CD3F <internal_commands.ab3@1494> INCLUDE "internal_commands.ab3"
0003CD40 <internal_commands.ab3@1495> INCLUDE "internal_commands.ab3"
0003CD42 <internal_commands.ab3@1497> INCLUDE "internal_commands.ab3"
0003CD46 <internal_commands.ab3@1498> INCLUDE "internal_commands.ab3"
0003CD48 <internal_commands.ab3@1499> INCLUDE "internal_commands.ab3"
0003CD4A <internal_commands.ab3@1500> INCLUDE "internal_commands.ab3"
0003CD4E <internal_commands.ab3@1501> INCLUDE "internal_commands.ab3"
0003CD50 <internal_commands.ab3@1502> INCLUDE "internal_commands.ab3"
0003CD54 <internal_commands.ab3@1506> INCLUDE "internal_commands.ab3"
0003CD56 <internal_commands.ab3@1507> INCLUDE "internal_commands.ab3"
0003CD5B <internal_commands.ab3@1508> INCLUDE "internal_commands.ab3"
0003CD5C <internal_commands.ab3@1509> INCLUDE "internal_commands.ab3"
0003CD5E <internal_commands.ab3@1512> INCLUDE "internal_commands.ab3"
0003CD62 <internal_commands.ab3@1513> INCLUDE "internal_commands.ab3"
0003CD64 <internal_commands.ab3@1514> INCLUDE "internal_commands.ab3"
0003CD66 <internal_commands.ab3@1515> INCLUDE "internal_commands.ab3"
0003CD6A <internal_commands.ab3@1516> INCLUDE "internal_commands.ab3"
0003CD6C <internal_commands.ab3@1517> INCLUDE "internal_commands.ab3"
0003CD70 <internal_commands.ab3@1521> INCLUDE "internal_commands.ab3"
0003CD72 <internal_commands.ab3@1522> INCLUDE "internal_commands.ab3"
0003CD77 <internal_commands.ab3@1523> INCLUDE "internal_commands.ab3"
0003CD78 <internal_commands.ab3@1524> INCLUDE "internal_commands.ab3"
0003CD7A <internal_commands.ab3@1527> INCLUDE "internal_commands.ab3"
0003CD7E <internal_commands.ab3@1528> INCLUDE "internal_commands.ab3"
0003CD80 <internal_commands.ab3@1529> INCLUDE "internal_commands.ab3"
0003CD82 <internal_commands.ab3@1530> INCLUDE "internal_commands.ab3"
0003CD86 <internal_commands.ab3@1531> INCLUDE "internal_commands.ab3"
0003CD88 <internal_commands.ab3@1532> INCLUDE "internal_commands.ab3"
0003CD8C <internal_commands.ab3@1537> INCLUDE "internal_commands.ab3"
0003CD8E <internal_commands.ab3@1538> INCLUDE "internal_commands.ab3"
0003CD94 <internal_commands.ab3@1539> INCLUDE "internal_commands.ab3"
0003CD95 <internal_commands.ab3@1540> INCLUDE "internal_commands.ab3"
0003CD96 <internal_commands.ab3@1541> INCLUDE "internal_commands.ab3"
0003CD98 <internal_commands.ab3@1543> INCLUDE "internal_commands.ab3"
0003CD9C <internal_commands.ab3@1544> INCLUDE "internal_commands.ab3"
0003CD9E <internal_commands.ab3@1545> INCLUDE "internal_commands.ab3"
0003CDA0 <internal_commands.ab3@1546> INCLUDE "internal_commands.ab3"
0003CDA4 <internal_commands.ab3@1547> INCLUDE "internal_commands.ab3"
0003CDA6 <internal_commands.ab3@1548> INCLUDE "internal_commands.ab3"
0003CDAA <internal_commands.ab3@1552> INCLUDE "internal_commands.ab3"
0003CDAC <internal_commands.ab3@1553> INCLUDE "internal_commands.ab3"
0003CDB2 <internal_commands.ab3@1554> INCLUDE "internal_commands.ab3"
0003CDB3 <internal_commands.ab3@1555> INCLUDE "internal_commands.ab3"
0003CDB4 <internal_commands.ab3@1556> INCLUDE "internal_commands.ab3"
0003CDB6 <internal_commands.ab3@1558> INCLUDE "internal_commands.ab3"
0003CDBA <internal_commands.ab3@1559> INCLUDE "internal_commands.ab3"
0003CDBC <internal_commands.ab3@1560> INCLUDE "internal_commands.ab3"
0003CDBE <internal_commands.ab3@1561> INCLUDE "internal_commands.ab3"
0003CDC2 <internal_commands.ab3@1562> INCLUDE "internal_commands.ab3"
0003CDC4 <internal_commands.ab3@1563> INCLUDE "internal_commands.ab3"
0003CDC8 <internal_commands.ab3@1567> INCLUDE "internal_commands.ab3"
0003CDCA <internal_commands.ab3@1568> INCLUDE "internal_commands.ab3"
0003CDD0 <internal_commands.ab3@1569> INCLUDE "internal_commands.ab3"
0003CDD1 <internal_commands.ab3@1570> INCLUDE "internal_commands.ab3"
0003CDD2 <internal_commands.ab3@1571> INCLUDE "internal_commands.ab3"
0003CDD4 <internal_commands.ab3@1573> INCLUDE "internal_commands.ab3"
0003CDD8 <internal_commands.ab3@1574> INCLUDE "internal_commands.ab3"
0003CDDA <internal_commands.ab3@1575> INCLUDE "internal_commands.ab3"
0003CDDC <internal_commands.ab3@1576> INCLUDE "internal_commands.ab3"
0003CDE0 <internal_commands.ab3@1577> INCLUDE "internal_commands.ab3"
0003CDE2 <internal_commands.ab3@1578> INCLUDE "internal_commands.ab3"
0003CDE6 <internal_commands.ab3@1582> INCLUDE "internal_commands.ab3"
0003CDE8 <internal_commands.ab3@1583> INCLUDE "internal_commands.ab3"
0003CDED <internal_commands.ab3@1584> INCLUDE "internal_commands.ab3"
0003CDEE <internal_commands.ab3@1585> INCLUDE "internal_commands.ab3"
0003CDF0 <internal_commands.ab3@1588> INCLUDE "internal_commands.ab3"
0003CDF4 <internal_commands.ab3@1589> INCLUDE "internal_commands.ab3"
0003CDF6 <internal_commands.ab3@1590> INCLUDE "internal_commands.ab3"
0003CDF8 <internal_commands.ab3@1591> INCLUDE "internal_commands.ab3"
0003CDFC <internal_commands.ab3@1592> INCLUDE "internal_commands.ab3"
0003CDFE <internal_commands.ab3@1593> INCLUDE "internal_commands.ab3"
0003CE02 <internal_commands.ab3@1597> INCLUDE "internal_commands.ab3"
0003CE04 <internal_commands.ab3@1598> INCLUDE "internal_commands.ab3"
0003CE09 <internal_commands.ab3@1599> INCLUDE "internal_commands.ab3"
0003CE0A <internal_commands.ab3@1600> INCLUDE "internal_commands.ab3"
0003CE0C <internal_commands.ab3@1603> INCLUDE "internal_commands.ab3"
0003CE10 <internal_commands.ab3@1604> INCLUDE "internal_commands.ab3"
0003CE12 <internal_commands.ab3@1605> INCLUDE "internal_commands.ab3"
0003CE14 <internal_commands.ab3@1606> INCLUDE "internal_commands.ab3"
0003CE18 <internal_commands.ab3@1607> INCLUDE "internal_commands.ab3"
0003CE1A <internal_commands.ab3@1608> INCLUDE "internal_commands.ab3"
0003CE1E <internal_commands.ab3@1612> INCLUDE "internal_commands.ab3"
0003CE20 <internal_commands.ab3@1613> INCLUDE "internal_commands.ab3"
0003CE25 <internal_commands.ab3@1614> INCLUDE "internal_commands.ab3"
0003CE26 <internal_commands.ab3@1615> INCLUDE "internal_commands.ab3"
0003CE28 <internal_commands.ab3@1618> INCLUDE "internal_commands.ab3"
0003CE2C <internal_commands.ab3@1619> INCLUDE "internal_commands.ab3"
0003CE2E <internal_commands.ab3@1620> INCLUDE "internal_commands.ab3"
0003CE30 <internal_commands.ab3@1621> INCLUDE "internal_commands.ab3"
0003CE34 <internal_commands.ab3@1622> INCLUDE "internal_commands.ab3"
0003CE36 <internal_commands.ab3@1623> INCLUDE "internal_commands.ab3"
0003CE3A <internal_commands.ab3@1627> INCLUDE "internal_commands.ab3"
0003CE3C <internal_commands.ab3@1628> INCLUDE "internal_commands.ab3"
0003CE40 <internal_commands.ab3@1629> INCLUDE "internal_commands.ab3"
0003CE41 <internal_commands.ab3@1630> INCLUDE "internal_commands.ab3"
0003CE42 <internal_commands.ab3@1631> INCLUDE "internal_commands.ab3"
0003CE44 <internal_commands.ab3@1633> INCLUDE "internal_commands.ab3"
0003CE48 <internal_commands.ab3@1634> INCLUDE "internal_commands.ab3"
0003CE4A <internal_commands.ab3@1635> INCLUDE "internal_commands.ab3"
0003CE4C <internal_commands.ab3@1636> INCLUDE "internal_commands.ab3"
0003CE50 <internal_commands.ab3@1637> INCLUDE "internal_commands.ab3"
0003CE52 <internal_commands.ab3@1638> INCLUDE "internal_commands.ab3"
0003CE56 <internal_commands.ab3@1642> INCLUDE "internal_commands.ab3"
0003CE58 <internal_commands.ab3@1643> INCLUDE "internal_commands.ab3"
0003CE5D <internal_commands.ab3@1644> INCLUDE "internal_commands.ab3"
0003CE5E <internal_commands.ab3@1645> INCLUDE "internal_commands.ab3"
0003CE60 <internal_commands.ab3@1648> INCLUDE "internal_commands.ab3"
0003CE64 <internal_commands.ab3@1649> INCLUDE "internal_commands.ab3"
0003CE66 <internal_commands.ab3@1650> INCLUDE "internal_commands.ab3"
0003CE68 <internal_commands.ab3@1651> INCLUDE "internal_commands.ab3"
0003CE6C <internal_commands.ab3@1652> INCLUDE "internal_commands.ab3"
0003CE6E <internal_commands.ab3@1653> INCLUDE "internal_commands.ab3"
0003CE72 <internal_commands.ab3@1657> INCLUDE "internal_commands.ab3"
0003CE74 <internal_commands.ab3@1658> INCLUDE "internal_commands.ab3"
0003CE78 <internal_commands.ab3@1659> INCLUDE "internal_commands.ab3"
0003CE79 <internal_commands.ab3@1660> INCLUDE "internal_commands.ab3"
0003CE7A <internal_commands.ab3@1661> INCLUDE "internal_commands.ab3"
0003CE7C <internal_commands.ab3@1663> INCLUDE "internal_commands.ab3"
0003CE80 <internal_commands.ab3@1664> INCLUDE "internal_commands.ab3"
0003CE82 <internal_commands.ab3@1665> INCLUDE "internal_commands.ab3"
0003CE84 <internal_commands.ab3@1666> INCLUDE "internal_commands.ab3"
0003CE88 <internal_commands.ab3@1667> INCLUDE "internal_commands.ab3"
0003CE8A <internal_commands.ab3@1668> INCLUDE "internal_commands.ab3"
0003CE8E <internal_commands.ab3@1672> INCLUDE "internal_commands.ab3"
0003CE90 <internal_commands.ab3@1673> INCLUDE "internal_commands.ab3"
0003CE94 <internal_commands.ab3@1674> INCLUDE "internal_commands.ab3"
0003CE95 <internal_commands.ab3@1675> INCLUDE "internal_commands.ab3"
0003CE96 <internal_commands.ab3@1676> INCLUDE "internal_commands.ab3"
0003CE98 <internal_commands.ab3@1678> INCLUDE "internal_commands.ab3"
0003CE9C <internal_commands.ab3@1679> INCLUDE "internal_commands.ab3"
0003CE9E <internal_commands.ab3@1680> INCLUDE "internal_commands.ab3"
0003CEA0 <internal_commands.ab3@1681> INCLUDE "internal_commands.ab3"
0003CEA4 <internal_commands.ab3@1682> INCLUDE "internal_commands.ab3"
0003CEA6 <internal_commands.ab3@1683> INCLUDE "internal_commands.ab3"
0003CEAA <internal_commands.ab3@1687> INCLUDE "internal_commands.ab3"
0003CEAC <internal_commands.ab3@1688> INCLUDE "internal_commands.ab3"
0003CEAF <internal_commands.ab3@1689> INCLUDE "internal_commands.ab3"
0003CEB0 <internal_commands.ab3@1690> INCLUDE "internal_commands.ab3"
0003CEB2 <internal_commands.ab3@1693> INCLUDE "internal_commands.ab3"
0003CEB6 <internal_commands.ab3@1694> INCLUDE "internal_commands.ab3"
0003CEB8 <internal_commands.ab3@1695> INCLUDE "internal_commands.ab3"
0003CEBA <internal_commands.ab3@1696> INCLUDE "internal_commands.ab3"
0003CEBE <internal_commands.ab3@1697> INCLUDE "internal_commands.ab3"
0003CEC0 <internal_commands.ab3@1698> INCLUDE "internal_commands.ab3"
0003CEC4 <internal_commands.ab3@1702> INCLUDE "internal_commands.ab3"
0003CEC6 <internal_commands.ab3@1703> INCLUDE "internal_commands.ab3"
0003CECA <internal_commands.ab3@1704> INCLUDE "internal_commands.ab3"
0003CECB <internal_commands.ab3@1705> INCLUDE "internal_commands.ab3"
0003CECC <internal_commands.ab3@1706> INCLUDE "internal_commands.ab3"
0003CECE <internal_commands.ab3@1708> INCLUDE "internal_commands.ab3"
0003CED2 <internal_commands.ab3@1709> INCLUDE "internal_commands.ab3"
0003CED4 <internal_commands.ab3@1710> INCLUDE "internal_commands.ab3"
0003CED6 <internal_commands.ab3@1711> INCLUDE "internal_commands.ab3"
0003CEDA <internal_commands.ab3@1712> INCLUDE "internal_commands.ab3"
0003CEDC <internal_commands.ab3@1713> INCLUDE "internal_commands.ab3"
0003CEE0 <internal_commands.ab3@1717> INCLUDE "internal_commands.ab3"
0003CEE2 <internal_commands.ab3@1718> INCLUDE "internal_commands.ab3"
0003CEE6 <internal_commands.ab3@1719> INCLUDE "internal_commands.ab3"
0003CEE7 <internal_commands.ab3@1720> INCLUDE "internal_commands.ab3"
0003CEE8 <internal_commands.ab3@1721> INCLUDE "internal_commands.ab3"
0003CEEA <internal_commands.ab3@1723> INCLUDE "internal_commands.ab3"
0003CEEE <internal_commands.ab3@1724> INCLUDE "internal_commands.ab3"
0003CEF0 <internal_commands.ab3@1725> INCLUDE "internal_commands.ab3"
0003CEF2 <internal_commands.ab3@1726> INCLUDE "internal_commands.ab3"
0003CEF6 <internal_commands.ab3@1727> INCLUDE "internal_commands.ab3"
0003CEF8 <internal_commands.ab3@1728> INCLUDE "internal_commands.ab3"
0003CEFC <internal_commands.ab3@1732> INCLUDE "internal_commands.ab3"
0003CEFE <internal_commands.ab3@1733> INCLUDE "internal_commands.ab3"
0003CF04 <internal_commands.ab3@1734> INCLUDE "internal_commands.ab3"
0003CF05 <internal_commands.ab3@1735> INCLUDE "internal_commands.ab3"
0003CF06 <internal_commands.ab3@1736> INCLUDE "internal_commands.ab3"
0003CF08 <internal_commands.ab3@1738> INCLUDE "internal_commands.ab3"
0003CF0C <internal_commands.ab3@1739> INCLUDE "internal_commands.ab3"
0003CF0E <internal_commands.ab3@1740> INCLUDE "internal_commands.ab3"
0003CF10 <internal_commands.ab3@1741> INCLUDE "internal_commands.ab3"
0003CF14 <internal_commands.ab3@1742> INCLUDE "internal_commands.ab3"
0003CF16 <internal_commands.ab3@1743> INCLUDE "internal_commands.ab3"
0003CF1A <internal_commands.ab3@1747> INCLUDE "internal_commands.ab3"
0003CF1C <internal_commands.ab3@1748> INCLUDE "internal_commands.ab3"
0003CF20 <internal_commands.ab3@1749> INCLUDE "internal_commands.ab3"
0003CF21 <internal_commands.ab3@1750> INCLUDE "internal_commands.ab3"
0003CF22 <internal_commands.ab3@1751> INCLUDE "internal_commands.ab3"
0003CF24 <internal_commands.ab3@1753> INCLUDE "internal_commands.ab3"
0003CF28 <internal_commands.ab3@1754> INCLUDE "internal_commands.ab3"
0003CF2A <internal_commands.ab3@1755> INCLUDE "internal_commands.ab3"
0003CF2C <internal_commands.ab3@1756> INCLUDE "internal_commands.ab3"
0003CF30 <internal_commands.ab3@1757> INCLUDE "internal_commands.ab3"
0003CF32 <internal_commands.ab3@1758> INCLUDE "internal_commands.ab3"
0003CF36 <internal_commands.ab3@1762> INCLUDE "internal_commands.ab3"
0003CF38 <internal_commands.ab3@1763> INCLUDE "internal_commands.ab3"
0003CF3C <internal_commands.ab3@1764> INCLUDE "internal_commands.ab3"
0003CF3D <internal_commands.ab3@1765> INCLUDE "internal_commands.ab3"
0003CF3E <internal_commands.ab3@1766> INCLUDE "internal_commands.ab3"
0003CF40 <internal_commands.ab3@1768> INCLUDE "internal_commands.ab3"
0003CF44 <internal_commands.ab3@1769> INCLUDE "internal_commands.ab3"
0003CF46 <internal_commands.ab3@1770> INCLUDE "internal_commands.ab3"
0003CF48 <internal_commands.ab3@1771> INCLUDE "internal_commands.ab3"
0003CF4C <internal_commands.ab3@1772> INCLUDE "internal_commands.ab3"
0003CF4E <internal_commands.ab3@1773> INCLUDE "internal_commands.ab3"
0003CF52 <internal_commands.ab3@1777> INCLUDE "internal_commands.ab3"
0003CF54 <internal_commands.ab3@1778> INCLUDE "internal_commands.ab3"
0003CF59 <internal_commands.ab3@1779> INCLUDE "internal_commands.ab3"
0003CF5A <internal_commands.ab3@1780> INCLUDE "internal_commands.ab3"
0003CF5C <internal_commands.ab3@1783> INCLUDE "internal_commands.ab3"
0003CF60 <internal_commands.ab3@1784> INCLUDE "internal_commands.ab3"
0003CF62 <internal_commands.ab3@1785> INCLUDE "internal_commands.ab3"
0003CF64 <internal_commands.ab3@1786> INCLUDE "internal_commands.ab3"
0003CF68 <internal_commands.ab3@1787> INCLUDE "internal_commands.ab3"
0003CF6A <internal_commands.ab3@1788> INCLUDE "internal_commands.ab3"
0003CF6E <internal_commands.ab3@1792> INCLUDE "internal_commands.ab3"
0003CF70 <internal_commands.ab3@1793> INCLUDE "internal_commands.ab3"
0003CF75 <internal_commands.ab3@1794> INCLUDE "internal_commands.ab3"
0003CF76 <internal_commands.ab3@1795> INCLUDE "internal_commands.ab3"
0003CF78 <internal_commands.ab3@1798> INCLUDE "internal_commands.ab3"
0003CF7C <internal_commands.ab3@1799> INCLUDE "internal_commands.ab3"
0003CF7E <internal_commands.ab3@1800> INCLUDE "internal_commands.ab3"
0003CF80 <internal_commands.ab3@1801> INCLUDE "internal_commands.ab3"
0003CF84 <internal_commands.ab3@1802> INCLUDE "internal_commands.ab3"
0003CF86 <internal_commands.ab3@1803> INCLUDE "internal_commands.ab3"
0003CF8A <internal_commands.ab3@1807> INCLUDE "internal_commands.ab3"
0003CF8C <internal_commands.ab3@1808> INCLUDE "internal_commands.ab3"
0003CF90 <internal_commands.ab3@1809> INCLUDE "internal_commands.ab3"
0003CF91 <internal_commands.ab3@1810> INCLUDE "internal_commands.ab3"
0003CF92 <internal_commands.ab3@1811> INCLUDE "internal_commands.ab3"
0003CF94 <internal_commands.ab3@1813> INCLUDE "internal_commands.ab3"
0003CF98 <internal_commands.ab3@1814> INCLUDE "internal_commands.ab3"
0003CF9A <internal_commands.ab3@1815> INCLUDE "internal_commands.ab3"
0003CF9C <internal_commands.ab3@1816> INCLUDE "internal_commands.ab3"
0003CFA0 <internal_commands.ab3@1817> INCLUDE "internal_commands.ab3"
0003CFA2 <internal_commands.ab3@1818> INCLUDE "internal_commands.ab3"
0003CFA6 <internal_commands.ab3@1822> INCLUDE "internal_commands.ab3"
0003CFA8 <internal_commands.ab3@1823> INCLUDE "internal_commands.ab3"
0003CFAC <internal_commands.ab3@1824> INCLUDE "internal_commands.ab3"
0003CFAD <internal_commands.ab3@1825> INCLUDE "internal_commands.ab3"
0003CFAE <internal_commands.ab3@1826> INCLUDE "internal_commands.ab3"
0003CFB0 <internal_commands.ab3@1828> INCLUDE "internal_commands.ab3"
0003CFB4 <internal_commands.ab3@1829> INCLUDE "internal_commands.ab3"
0003CFB6 <internal_commands.ab3@1830> INCLUDE "internal_commands.ab3"
0003CFB8 <internal_commands.ab3@1831> INCLUDE "internal_commands.ab3"
0003CFBC <internal_commands.ab3@1832> INCLUDE "internal_commands.ab3"
0003CFBE <internal_commands.ab3@1833> INCLUDE "internal_commands.ab3"
0003CFC2 <internal_commands.ab3@1837> INCLUDE "internal_commands.ab3"
0003CFC4 <internal_commands.ab3@1838> INCLUDE "internal_commands.ab3"
0003CFC8 <internal_commands.ab3@1839> INCLUDE "internal_commands.ab3"
0003CFC9 <internal_commands.ab3@1840> INCLUDE "internal_commands.ab3"
0003CFCA <internal_commands.ab3@1841> INCLUDE "internal_commands.ab3"
0003CFCC <internal_commands.ab3@1843> INCLUDE "internal_commands.ab3"
0003CFD0 <internal_commands.ab3@1844> INCLUDE "internal_commands.ab3"
0003CFD2 <internal_commands.ab3@1845> INCLUDE "internal_commands.ab3"
0003CFD4 <internal_commands.ab3@1846> INCLUDE "internal_commands.ab3"
0003CFD8 <internal_commands.ab3@1847> INCLUDE "internal_commands.ab3"
0003CFDA <internal_commands.ab3@1848> INCLUDE "internal_commands.ab3"
0003CFDE <internal_commands.ab3@1852> INCLUDE "internal_commands.ab3"
0003CFE0 <internal_commands.ab3@1853> INCLUDE "internal_commands.ab3"
0003CFE5 <internal_commands.ab3@1854> INCLUDE "internal_commands.ab3"
0003CFE6 <internal_commands.ab3@1855> INCLUDE "internal_commands.ab3"
0003CFE8 <internal_commands.ab3@1858> INCLUDE "internal_commands.ab3"
0003CFEC <internal_commands.ab3@1859> INCLUDE "internal_commands.ab3"
0003CFEE <internal_commands.ab3@1860> INCLUDE "internal_commands.ab3"
0003CFF0 <internal_commands.ab3@1861> INCLUDE "internal_commands.ab3"
0003CFF4 <internal_commands.ab3@1862> INCLUDE "internal_commands.ab3"
0003CFF6 <internal_commands.ab3@1863> INCLUDE "internal_commands.ab3"
0003CFFA <internal_commands.ab3@1867> INCLUDE "internal_commands.ab3"
0003CFFC <internal_commands.ab3@1868> INCLUDE "internal_commands.ab3"
0003D000 <internal_commands.ab3@1869> INCLUDE "internal_commands.ab3"
0003D001 <internal_commands.ab3@1870> INCLUDE "internal_commands.ab3"
0003D002 <internal_commands.ab3@1871> INCLUDE "internal_commands.ab3"
0003D004 <internal_commands.ab3@1873> INCLUDE "internal_commands.ab3"
0003D008 <internal_commands.ab3@1874> INCLUDE "internal_commands.ab3"
0003D00A <internal_commands.ab3@1875> INCLUDE "internal_commands.ab3"
0003D00C <internal_commands.ab3@1876> INCLUDE "internal_commands.ab3"
0003D010 <internal_commands.ab3@1877> INCLUDE "internal_commands.ab3"
0003D012 <internal_commands.ab3@1878> INCLUDE "internal_commands.ab3"
0003D016 <internal_commands.ab3@1882> INCLUDE "internal_commands.ab3"
0003D018 <internal_commands.ab3@1883> INCLUDE "internal_commands.ab3"
0003D01C <internal_commands.ab3@1884> INCLUDE "internal_commands.ab3"
0003D01D <internal_commands.ab3@1885> INCLUDE "internal_commands.ab3"
0003D01E <internal_commands.ab3@1886> INCLUDE "internal_commands.ab3"
0003D020 <internal_commands.ab3@1888> INCLUDE "internal_commands.ab3"
0003D024 <internal_commands.ab3@1889> INCLUDE "internal_commands.ab3"
0003D026 <internal_commands.ab3@1890> INCLUDE "internal_commands.ab3"
0003D028 <internal_commands.ab3@1891> INCLUDE "internal_commands.ab3"
0003D02C <internal_commands.ab3@1892> INCLUDE "internal_commands.ab3"
0003D02E <internal_commands.ab3@1893> INCLUDE "internal_commands.ab3"
0003D032 <internal_commands.ab3@1897> INCLUDE "internal_commands.ab3"
0003D034 <internal_commands.ab3@1898> INCLUDE "internal_commands.ab3"
0003D038 <internal_commands.ab3@1899> INCLUDE "internal_commands.ab3"
0003D039 <internal_commands.ab3@1900> INCLUDE "internal_commands.ab3"
0003D03A <internal_commands.ab3@1901> INCLUDE "internal_commands.ab3"
0003D03C <internal_commands.ab3@1903> INCLUDE "internal_commands.ab3"
0003D040 <internal_commands.ab3@1904> INCLUDE "internal_commands.ab3"
0003D042 <internal_commands.ab3@1905> INCLUDE "internal_commands.ab3"
0003D044 <internal_commands.ab3@1906> INCLUDE "internal_commands.ab3"
0003D048 <internal_commands.ab3@1907> INCLUDE "internal_commands.ab3"
0003D04A <internal_commands.ab3@1908> INCLUDE "internal_commands.ab3"
0003D04E <internal_commands.ab3@1912> INCLUDE "internal_commands.ab3"
0003D050 <internal_commands.ab3@1913> INCLUDE "internal_commands.ab3"
0003D054 <internal_commands.ab3@1914> INCLUDE "internal_commands.ab3"
0003D055 <internal_commands.ab3@1915> INCLUDE "internal_commands.ab3"
0003D056 <internal_commands.ab3@1916> INCLUDE "internal_commands.ab3"
0003D058 <internal_commands.ab3@1918> INCLUDE "internal_commands.ab3"
0003D05C <internal_commands.ab3@1919> INCLUDE "internal_commands.ab3"
0003D05E <internal_commands.ab3@1920> INCLUDE "internal_commands.ab3"
0003D060 <internal_commands.ab3@1921> INCLUDE "internal_commands.ab3"
0003D064 <internal_commands.ab3@1922> INCLUDE "internal_commands.ab3"
0003D066 <internal_commands.ab3@1923> INCLUDE "internal_commands.ab3"
0003D06A <internal_commands.ab3@1927> INCLUDE "internal_commands.ab3"
0003D06C <internal_commands.ab3@1928> INCLUDE "internal_commands.ab3"
0003D070 <internal_commands.ab3@1929> INCLUDE "internal_commands.ab3"
0003D071 <internal_commands.ab3@1930> INCLUDE "internal_commands.ab3"
0003D072 <internal_commands.ab3@1931> INCLUDE "internal_commands.ab3"
0003D074 <internal_commands.ab3@1933> INCLUDE "internal_commands.ab3"
0003D078 <internal_commands.ab3@1934> INCLUDE "internal_commands.ab3"
0003D07A <internal_commands.ab3@1935> INCLUDE "internal_commands.ab3"
0003D07C <internal_commands.ab3@1936> INCLUDE "internal_commands.ab3"
0003D080 <internal_commands.ab3@1937> INCLUDE "internal_commands.ab3"
0003D082 <internal_commands.ab3@1938> INCLUDE "internal_commands.ab3"
0003D086 <internal_commands.ab3@1942> INCLUDE "internal_commands.ab3"
0003D088 <internal_commands.ab3@1943> INCLUDE "internal_commands.ab3"
0003D08C <internal_commands.ab3@1944> INCLUDE "internal_commands.ab3"
0003D08D <internal_commands.ab3@1945> INCLUDE "internal_commands.ab3"
0003D08E <internal_commands.ab3@1946> INCLUDE "internal_commands.ab3"
0003D090 <internal_commands.ab3@1948> INCLUDE "internal_commands.ab3"
0003D094 <internal_commands.ab3@1949> INCLUDE "internal_commands.ab3"
0003D096 <internal_commands.ab3@1950> INCLUDE "internal_commands.ab3"
0003D098 <internal_commands.ab3@1951> INCLUDE "internal_commands.ab3"
0003D09C <internal_commands.ab3@1952> INCLUDE "internal_commands.ab3"
0003D09E <internal_commands.ab3@1953> INCLUDE "internal_commands.ab3"
0003D0A2 <internal_commands.ab3@1957> INCLUDE "internal_commands.ab3"
0003D0A4 <internal_commands.ab3@1958> INCLUDE "internal_commands.ab3"
0003D0A8 <internal_commands.ab3@1959> INCLUDE "internal_commands.ab3"
0003D0A9 <internal_commands.ab3@1960> INCLUDE "internal_commands.ab3"
0003D0AA <internal_commands.ab3@1961> INCLUDE "internal_commands.ab3"
0003D0AC <internal_commands.ab3@1963> INCLUDE "internal_commands.ab3"
0003D0B0 <internal_commands.ab3@1964> INCLUDE "internal_commands.ab3"
0003D0B2 <internal_commands.ab3@1965> INCLUDE "internal_commands.ab3"
0003D0B4 <internal_commands.ab3@1966> INCLUDE "internal_commands.ab3"
0003D0B8 <internal_commands.ab3@1967> INCLUDE "internal_commands.ab3"
0003D0BA <internal_commands.ab3@1968> INCLUDE "internal_commands.ab3"
0003D0BE <internal_commands.ab3@1972> INCLUDE "internal_commands.ab3"
0003D0C0 <internal_commands.ab3@1973> INCLUDE "internal_commands.ab3"
0003D0C4 <internal_commands.ab3@1974> INCLUDE "internal_commands.ab3"
0003D0C5 <internal_commands.ab3@1975> INCLUDE "internal_commands.ab3"
0003D0C6 <internal_commands.ab3@1976> INCLUDE "internal_commands.ab3"
0003D0C8 <internal_commands.ab3@1978> INCLUDE "internal_commands.ab3"
0003D0CC <internal_commands.ab3@1979> INCLUDE "internal_commands.ab3"
0003D0CE <internal_commands.ab3@1980> INCLUDE "internal_commands.ab3"
0003D0D0 <internal_commands.ab3@1981> INCLUDE "internal_commands.ab3"
0003D0D4 <internal_commands.ab3@1982> INCLUDE "internal_commands.ab3"
0003D0D6 <internal_commands.ab3@1983> INCLUDE "internal_commands.ab3"
0003D0DA <internal_commands.ab3@1987> INCLUDE "internal_commands.ab3"
0003D0DC <internal_commands.ab3@1988> INCLUDE "internal_commands.ab3"
0003D0E0 <internal_commands.ab3@1989> INCLUDE "internal_commands.ab3"
0003D0E1 <internal_commands.ab3@1990> INCLUDE "internal_commands.ab3"
0003D0E2 <internal_commands.ab3@1991> INCLUDE "internal_commands.ab3"
0003D0E4 <internal_commands.ab3@1993> INCLUDE "internal_commands.ab3"
0003D0E8 <internal_commands.ab3@1994> INCLUDE "internal_commands.ab3"
0003D0EA <internal_commands.ab3@1995> INCLUDE "internal_commands.ab3"
0003D0EC <internal_commands.ab3@1996> INCLUDE "internal_commands.ab3"
0003D0F0 <internal_commands.ab3@1997> INCLUDE "internal_commands.ab3"
0003D0F2 <internal_commands.ab3@1998> INCLUDE "internal_commands.ab3"
0003D0F6 <internal_commands.ab3@2002> INCLUDE "internal_commands.ab3"
0003D0F8 <internal_commands.ab3@2003> INCLUDE "internal_commands.ab3"
0003D0FC <internal_commands.ab3@2004> INCLUDE "internal_commands.ab3"
0003D0FD <internal_commands.ab3@2005> INCLUDE "internal_commands.ab3"
0003D0FE <internal_commands.ab3@2006> INCLUDE "internal_commands.ab3"
0003D100 <internal_commands.ab3@2008> INCLUDE "internal_commands.ab3"
0003D104 <internal_commands.ab3@2009> INCLUDE "internal_commands.ab3"
0003D106 <internal_commands.ab3@2010> INCLUDE "internal_commands.ab3"
0003D108 <internal_commands.ab3@2011> INCLUDE "internal_commands.ab3"
0003D10C <internal_commands.ab3@2012> INCLUDE "internal_commands.ab3"
0003D10E <internal_commands.ab3@2013> INCLUDE "internal_commands.ab3"
0003D112 <internal_commands.ab3@2017> INCLUDE "internal_commands.ab3"
0003D114 <internal_commands.ab3@2018> INCLUDE "internal_commands.ab3"
0003D118 <internal_commands.ab3@2019> INCLUDE "internal_commands.ab3"
0003D119 <internal_commands.ab3@2020> INCLUDE "internal_commands.ab3"
0003D11A <internal_commands.ab3@2021> INCLUDE "internal_commands.ab3"
0003D11C <internal_commands.ab3@2023> INCLUDE "internal_commands.ab3"
0003D120 <internal_commands.ab3@2024> INCLUDE "internal_commands.ab3"
0003D122 <internal_commands.ab3@2025> INCLUDE "internal_commands.ab3"
0003D124 <internal_commands.ab3@2026> INCLUDE "internal_commands.ab3"
0003D128 <internal_commands.ab3@2027> INCLUDE "internal_commands.ab3"
0003D12A <internal_commands.ab3@2028> INCLUDE "internal_commands.ab3"
0003D12E <internal_commands.ab3@2032> INCLUDE "internal_commands.ab3"
0003D130 <internal_commands.ab3@2033> INCLUDE "internal_commands.ab3"
0003D134 <internal_commands.ab3@2034> INCLUDE "internal_commands.ab3"
0003D135 <internal_commands.ab3@2035> INCLUDE "internal_commands.ab3"
0003D136 <internal_commands.ab3@2036> INCLUDE "internal_commands.ab3"
0003D138 <internal_commands.ab3@2038> INCLUDE "internal_commands.ab3"
0003D13C <internal_commands.ab3@2039> INCLUDE "internal_commands.ab3"
0003D13E <internal_commands.ab3@2040> INCLUDE "internal_commands.ab3"
0003D140 <internal_commands.ab3@2041> INCLUDE "internal_commands.ab3"
0003D144 <internal_commands.ab3@2042> INCLUDE "internal_commands.ab3"
0003D146 <internal_commands.ab3@2043> INCLUDE "internal_commands.ab3"
0003D14A <internal_commands.ab3@2047> INCLUDE "internal_commands.ab3"
0003D14C <internal_commands.ab3@2048> INCLUDE "internal_commands.ab3"
0003D150 <internal_commands.ab3@2049> INCLUDE "internal_commands.ab3"
0003D151 <internal_commands.ab3@2050> INCLUDE "internal_commands.ab3"
0003D152 <internal_commands.ab3@2051> INCLUDE "internal_commands.ab3"
0003D154 <internal_commands.ab3@2053> INCLUDE "internal_commands.ab3"
0003D158 <internal_commands.ab3@2054> INCLUDE "internal_commands.ab3"
0003D15A <internal_commands.ab3@2055> INCLUDE "internal_commands.ab3"
0003D15C <internal_commands.ab3@2056> INCLUDE "internal_commands.ab3"
0003D160 <internal_commands.ab3@2057> INCLUDE "internal_commands.ab3"
0003D162 <internal_commands.ab3@2058> INCLUDE "internal_commands.ab3"
0003D166 <internal_commands.ab3@2062> INCLUDE "internal_commands.ab3"
0003D168 <internal_commands.ab3@2063> INCLUDE "internal_commands.ab3"
0003D16C <internal_commands.ab3@2064> INCLUDE "internal_commands.ab3"
0003D16D <internal_commands.ab3@2065> INCLUDE "internal_commands.ab3"
0003D16E <internal_commands.ab3@2066> INCLUDE "internal_commands.ab3"
0003D170 <internal_commands.ab3@2068> INCLUDE "internal_commands.ab3"
0003D174 <internal_commands.ab3@2069> INCLUDE "internal_commands.ab3"
0003D176 <internal_commands.ab3@2070> INCLUDE "internal_commands.ab3"
0003D178 <internal_commands.ab3@2071> INCLUDE "internal_commands.ab3"
0003D17C <internal_commands.ab3@2072> INCLUDE "internal_commands.ab3"
0003D17E <internal_commands.ab3@2073> INCLUDE "internal_commands.ab3"
0003D182 <internal_commands.ab3@2077> INCLUDE "internal_commands.ab3"
0003D184 <internal_commands.ab3@2078> INCLUDE "internal_commands.ab3"
0003D187 <internal_commands.ab3@2079> INCLUDE "internal_commands.ab3"
0003D188 <internal_commands.ab3@2080> INCLUDE "internal_commands.ab3"
0003D18A <internal_commands.ab3@2083> INCLUDE "internal_commands.ab3"
0003D18E <internal_commands.ab3@2084> INCLUDE "internal_commands.ab3"
0003D190 <internal_commands.ab3@2085> INCLUDE "internal_commands.ab3"
0003D192 <internal_commands.ab3@2086> INCLUDE "internal_commands.ab3"
0003D196 <internal_commands.ab3@2087> INCLUDE "internal_commands.ab3"
0003D198 <internal_commands.ab3@2088> INCLUDE "internal_commands.ab3"
0003D19C <internal_commands.ab3@2092> INCLUDE "internal_commands.ab3"
0003D19E <internal_commands.ab3@2093> INCLUDE "internal_commands.ab3"
0003D1A1 <internal_commands.ab3@2094> INCLUDE "internal_commands.ab3"
0003D1A2 <internal_commands.ab3@2095> INCLUDE "internal_commands.ab3"
0003D1A4 <internal_commands.ab3@2098> INCLUDE "internal_commands.ab3"
0003D1A8 <internal_commands.ab3@2099> INCLUDE "internal_commands.ab3"
0003D1AA <internal_commands.ab3@2100> INCLUDE "internal_commands.ab3"
0003D1AC <internal_commands.ab3@2101> INCLUDE "internal_commands.ab3"
0003D1B0 <internal_commands.ab3@2102> INCLUDE "internal_commands.ab3"
0003D1B2 <internal_commands.ab3@2103> INCLUDE "internal_commands.ab3"
0003D1B6 <internal_commands.ab3@2107> INCLUDE "internal_commands.ab3"
0003D1B8 <internal_commands.ab3@2108> INCLUDE "internal_commands.ab3"
0003D1BD <internal_commands.ab3@2109> INCLUDE "internal_commands.ab3"
0003D1BE <internal_commands.ab3@2110> INCLUDE "internal_commands.ab3"
0003D1C0 <internal_commands.ab3@2113> INCLUDE "internal_commands.ab3"
0003D1C4 <internal_commands.ab3@2114> INCLUDE "internal_commands.ab3"
0003D1C6 <internal_commands.ab3@2115> INCLUDE "internal_commands.ab3"
0003D1C8 <internal_commands.ab3@2116> INCLUDE "internal_commands.ab3"
0003D1CC <internal_commands.ab3@2117> INCLUDE "internal_commands.ab3"
0003D1CE <internal_commands.ab3@2118> INCLUDE "internal_commands.ab3"
0003D1D2 <internal_commands.ab3@2122> INCLUDE "internal_commands.ab3"
0003D1D4 <internal_commands.ab3@2123> INCLUDE "internal_commands.ab3"
0003D1D8 <internal_commands.ab3@2124> INCLUDE "internal_commands.ab3"
0003D1D9 <internal_commands.ab3@2125> INCLUDE "internal_commands.ab3"
0003D1DA <internal_commands.ab3@2126> INCLUDE "internal_commands.ab3"
0003D1DC <internal_commands.ab3@2128> INCLUDE "internal_commands.ab3"
0003D1E0 <internal_commands.ab3@2129> INCLUDE "internal_commands.ab3"
0003D1E2 <internal_commands.ab3@2130> INCLUDE "internal_commands.ab3"
0003D1E4 <internal_commands.ab3@2131> INCLUDE "internal_commands.ab3"
0003D1E8 <internal_commands.ab3@2132> INCLUDE "internal_commands.ab3"
0003D1EA <internal_commands.ab3@2133> INCLUDE "internal_commands.ab3"
0003D1EE <internal_commands.ab3@2137> INCLUDE "internal_commands.ab3"
0003D1F0 <internal_commands.ab3@2138> INCLUDE "internal_commands.ab3"
0003D1F5 <internal_commands.ab3@2139> INCLUDE "internal_commands.ab3"
0003D1F6 <internal_commands.ab3@2140> INCLUDE "internal_commands.ab3"
0003D1F8 <internal_commands.ab3@2143> INCLUDE "internal_commands.ab3"
0003D1FC <internal_commands.ab3@2144> INCLUDE "internal_commands.ab3"
0003D1FE <internal_commands.ab3@2145> INCLUDE "internal_commands.ab3"
0003D200 <internal_commands.ab3@2146> INCLUDE "internal_commands.ab3"
0003D204 <internal_commands.ab3@2147> INCLUDE "internal_commands.ab3"
0003D206 <internal_commands.ab3@2148> INCLUDE "internal_commands.ab3"
0003D20A <internal_commands.ab3@2152> INCLUDE "internal_commands.ab3"
0003D20C <internal_commands.ab3@2153> INCLUDE "internal_commands.ab3"
0003D211 <internal_commands.ab3@2154> INCLUDE "internal_commands.ab3"
0003D212 <internal_commands.ab3@2155> INCLUDE "internal_commands.ab3"
0003D214 <internal_commands.ab3@2158> INCLUDE "internal_commands.ab3"
0003D218 <internal_commands.ab3@2159> INCLUDE "internal_commands.ab3"
0003D21A <internal_commands.ab3@2160> INCLUDE "internal_commands.ab3"
0003D21C <internal_commands.ab3@2161> INCLUDE "internal_commands.ab3"
0003D220 <internal_commands.ab3@2162> INCLUDE "internal_commands.ab3"
0003D222 <internal_commands.ab3@2163> INCLUDE "internal_commands.ab3"
0003D226 <internal_commands.ab3@2167> INCLUDE "internal_commands.ab3"
0003D228 <internal_commands.ab3@2168> INCLUDE "internal_commands.ab3"
0003D22D <internal_commands.ab3@2169> INCLUDE "internal_commands.ab3"
0003D22E <internal_commands.ab3@2170> INCLUDE "internal_commands.ab3"
0003D230 <internal_commands.ab3@2173> INCLUDE "internal_commands.ab3"
0003D234 <internal_commands.ab3@2174> INCLUDE "internal_commands.ab3"
0003D236 <internal_commands.ab3@2175> INCLUDE "internal_commands.ab3"
0003D238 <internal_commands.ab3@2176> INCLUDE "internal_commands.ab3"
0003D23C <internal_commands.ab3@2177> INCLUDE "internal_commands.ab3"
0003D23E <internal_commands.ab3@2178> INCLUDE "internal_commands.ab3"
0003D242 <internal_commands.ab3@2182> INCLUDE "internal_commands.ab3"
0003D244 <internal_commands.ab3@2183> INCLUDE "internal_commands.ab3"
0003D249 <internal_commands.ab3@2184> INCLUDE "internal_commands.ab3"
0003D24A <internal_commands.ab3@2185> INCLUDE "internal_commands.ab3"
0003D24C <internal_commands.ab3@2188> INCLUDE "internal_commands.ab3"
0003D250 <internal_commands.ab3@2189> INCLUDE "internal_commands.ab3"
0003D252 <internal_commands.ab3@2190> INCLUDE "internal_commands.ab3"
0003D254 <internal_commands.ab3@2191> INCLUDE "internal_commands.ab3"
0003D258 <internal_commands.ab3@2192> INCLUDE "internal_commands.ab3"
0003D25A <internal_commands.ab3@2193> INCLUDE "internal_commands.ab3"
0003D25E <internal_commands.ab3@2197> INCLUDE "internal_commands.ab3"
0003D260 <internal_commands.ab3@2198> INCLUDE "internal_commands.ab3"
0003D265 <internal_commands.ab3@2199> INCLUDE "internal_commands.ab3"
0003D266 <internal_commands.ab3@2200> INCLUDE "internal_commands.ab3"
0003D268 <internal_commands.ab3@2203> INCLUDE "internal_commands.ab3"
0003D26C <internal_commands.ab3@2204> INCLUDE "internal_commands.ab3"
0003D26E <internal_commands.ab3@2205> INCLUDE "internal_commands.ab3"
0003D270 <internal_commands.ab3@2206> INCLUDE "internal_commands.ab3"
0003D274 <internal_commands.ab3@2207> INCLUDE "internal_commands.ab3"
0003D276 <internal_commands.ab3@2208> INCLUDE "internal_commands.ab3"
0003D27A <internal_commands.ab3@2212> INCLUDE "internal_commands.ab3"
0003D27C <internal_commands.ab3@2213> INCLUDE "internal_commands.ab3"
0003D280 <internal_commands.ab3@2214> INCLUDE "internal_commands.ab3"
0003D281 <internal_commands.ab3@2215> INCLUDE "internal_commands.ab3"
0003D282 <internal_commands.ab3@2216> INCLUDE "internal_commands.ab3"
0003D284 <internal_commands.ab3@2218> INCLUDE "internal_commands.ab3"
0003D288 <internal_commands.ab3@2219> INCLUDE "internal_commands.ab3"
0003D28A <internal_commands.ab3@2220> INCLUDE "internal_commands.ab3"
0003D28C <internal_commands.ab3@2221> INCLUDE "internal_commands.ab3"
0003D290 <internal_commands.ab3@2222> INCLUDE "internal_commands.ab3"
0003D292 <internal_commands.ab3@2223> INCLUDE "internal_commands.ab3"
0003D296 <internal_commands.ab3@2227> INCLUDE "internal_commands.ab3"
0003D298 <internal_commands.ab3@2228> INCLUDE "internal_commands.ab3"
0003D29D <internal_commands.ab3@2229> INCLUDE "internal_commands.ab3"
0003D29E <internal_commands.ab3@2230> INCLUDE "internal_commands.ab3"
0003D2A0 <internal_commands.ab3@2233> INCLUDE "internal_commands.ab3"
0003D2A4 <internal_commands.ab3@2234> INCLUDE "internal_commands.ab3"
0003D2A6 <internal_commands.ab3@2235> INCLUDE "internal_commands.ab3"
0003D2A8 <internal_commands.ab3@2236> INCLUDE "internal_commands.ab3"
0003D2AC <internal_commands.ab3@2237> INCLUDE "internal_commands.ab3"
0003D2AE <internal_commands.ab3@2238> INCLUDE "internal_commands.ab3"
0003D2B2 <internal_commands.ab3@2242> INCLUDE "internal_commands.ab3"
0003D2B4 <internal_commands.ab3@2243> INCLUDE "internal_commands.ab3"
0003D2BA <internal_commands.ab3@2244> INCLUDE "internal_commands.ab3"
0003D2BB <internal_commands.ab3@2245> INCLUDE "internal_commands.ab3"
0003D2BC <internal_commands.ab3@2246> INCLUDE "internal_commands.ab3"
0003D2BE <internal_commands.ab3@2248> INCLUDE "internal_commands.ab3"
0003D2C2 <internal_commands.ab3@2249> INCLUDE "internal_commands.ab3"
0003D2C4 <internal_commands.ab3@2250> INCLUDE "internal_commands.ab3"
0003D2C6 <internal_commands.ab3@2251> INCLUDE "internal_commands.ab3"
0003D2CA <internal_commands.ab3@2252> INCLUDE "internal_commands.ab3"
0003D2CC <internal_commands.ab3@2253> INCLUDE "internal_commands.ab3"
0003D2D0 <internal_commands.ab3@2257> INCLUDE "internal_commands.ab3"
0003D2D2 <internal_commands.ab3@2258> INCLUDE "internal_commands.ab3"
0003D2D6 <internal_commands.ab3@2259> INCLUDE "internal_commands.ab3"
0003D2D7 <internal_commands.ab3@2260> INCLUDE "internal_commands.ab3"
0003D2D8 <internal_commands.ab3@2261> INCLUDE "internal_commands.ab3"
0003D2DA <internal_commands.ab3@2263> INCLUDE "internal_commands.ab3"
0003D2DE <internal_commands.ab3@2264> INCLUDE "internal_commands.ab3"
0003D2E0 <internal_commands.ab3@2265> INCLUDE "internal_commands.ab3"
0003D2E2 <internal_commands.ab3@2266> INCLUDE "internal_commands.ab3"
0003D2E6 <internal_commands.ab3@2267> INCLUDE "internal_commands.ab3"
0003D2E8 <internal_commands.ab3@2268> INCLUDE "internal_commands.ab3"
0003D2EC <internal_commands.ab3@2272> INCLUDE "internal_commands.ab3"
0003D2EE <internal_commands.ab3@2273> INCLUDE "internal_commands.ab3"
0003D2F3 <internal_commands.ab3@2274> INCLUDE "internal_commands.ab3"
0003D2F4 <internal_commands.ab3@2275> INCLUDE "internal_commands.ab3"
0003D2F6 <internal_commands.ab3@2278> INCLUDE "internal_commands.ab3"
0003D2FA <internal_commands.ab3@2279> INCLUDE "internal_commands.ab3"
0003D2FC <internal_commands.ab3@2280> INCLUDE "internal_commands.ab3"
0003D2FE <internal_commands.ab3@2281> INCLUDE "internal_commands.ab3"
0003D302 <internal_commands.ab3@2282> INCLUDE "internal_commands.ab3"
0003D304 <internal_commands.ab3@2283> INCLUDE "internal_commands.ab3"
0003D308 <internal_commands.ab3@2288> INCLUDE "internal_commands.ab3"
0003D30A <internal_commands.ab3@2289> INCLUDE "internal_commands.ab3"
0003D311 <internal_commands.ab3@2290> INCLUDE "internal_commands.ab3"
0003D312 <internal_commands.ab3@2291> INCLUDE "internal_commands.ab3"
0003D314 <internal_commands.ab3@2310> INCLUDE "internal_commands.ab3"
0003D316 <internal_commands.ab3@2311> INCLUDE "internal_commands.ab3"
0003D318 <internal_commands.ab3@2315> INCLUDE "internal_commands.ab3"
0003D31A <internal_commands.ab3@2316> INCLUDE "internal_commands.ab3"
0003D31C <internal_commands.ab3@2320> INCLUDE "internal_commands.ab3"
0003D31E <internal_commands.ab3@2321> INCLUDE "internal_commands.ab3"
0003D320 <internal_commands.ab3@2325> INCLUDE "internal_commands.ab3"
0003D322 <internal_commands.ab3@2326> INCLUDE "internal_commands.ab3"
0003D324 <internal_commands.ab3@2332> INCLUDE "internal_commands.ab3"
0003D328 <internal_commands.ab3@2333> INCLUDE "internal_commands.ab3"
0003D32A <internal_commands.ab3@2334> INCLUDE "internal_commands.ab3"
0003D32C <internal_commands.ab3@2335> INCLUDE "internal_commands.ab3"
0003D32E <internal_commands.ab3@2336> INCLUDE "internal_commands.ab3"
0003D330 <internal_commands.ab3@2337> INCLUDE "internal_commands.ab3"
0003D334 <internal_commands.ab3@2338> INCLUDE "internal_commands.ab3"
0003D33A <internal_commands.ab3@2341> INCLUDE "internal_commands.ab3"
0003D33E <internal_commands.ab3@2342> INCLUDE "internal_commands.ab3"
0003D340 <internal_commands.ab3@2343> INCLUDE "internal_commands.ab3"
0003D342 <internal_commands.ab3@2344> INCLUDE "internal_commands.ab3"
0003D344 <internal_commands.ab3@2345> INCLUDE "internal_commands.ab3"
0003D346 <internal_commands.ab3@2346> INCLUDE "internal_commands.ab3"
0003D348 <internal_commands.ab3@2347> INCLUDE "internal_commands.ab3"
0003D34A <internal_commands.ab3@2354> INCLUDE "internal_commands.ab3"
0003D34E <internal_commands.ab3@2355> INCLUDE "internal_commands.ab3"
0003D352 <internal_commands.ab3@2356> INCLUDE "internal_commands.ab3"
0003D356 <internal_commands.ab3@2357> INCLUDE "internal_commands.ab3"
0003D35A <internal_commands.ab3@2358> INCLUDE "internal_commands.ab3"
0003D35E <internal_commands.ab3@2359> INCLUDE "internal_commands.ab3"
0003D360 <internal_commands.ab3@2362> INCLUDE "internal_commands.ab3"
0003D362 <internal_commands.ab3@2363> INCLUDE "internal_commands.ab3"
0003D366 <internal_commands.ab3@2364> INCLUDE "internal_commands.ab3"
0003D36A <internal_commands.ab3@2365> INCLUDE "internal_commands.ab3"
0003D36E <internal_commands.ab3@2366> INCLUDE "internal_commands.ab3"
0003D372 <internal_commands.ab3@2367> INCLUDE "internal_commands.ab3"
0003D374 <internal_commands.ab3@2370> INCLUDE "internal_commands.ab3"
0003D376 <internal_commands.ab3@2371> INCLUDE "internal_commands.ab3"
0003D37A <internal_commands.ab3@2372> INCLUDE "internal_commands.ab3"
0003D37E <internal_commands.ab3@2373> INCLUDE "internal_commands.ab3"
0003D382 <internal_commands.ab3@2374> INCLUDE "internal_commands.ab3"
0003D386 <internal_commands.ab3@2375> INCLUDE "internal_commands.ab3"
0003D388 <internal_commands.ab3@2376> INCLUDE "internal_commands.ab3"
0003D38A <internal_commands.ab3@2379> INCLUDE "internal_commands.ab3"
0003D38C <internal_commands.ab3@2380> INCLUDE "internal_commands.ab3"
0003D390 <internal_commands.ab3@2381> INCLUDE "internal_commands.ab3"
0003D392 <internal_commands.ab3@2383> INCLUDE "internal_commands.ab3"
0003D396 <internal_commands.ab3@2384> INCLUDE "internal_commands.ab3"
0003D398 <internal_commands.ab3@2388> INCLUDE "internal_commands.ab3"
0003D39C <internal_commands.ab3@2389> INCLUDE "internal_commands.ab3"
0003D39E <internal_commands.ab3@2390> INCLUDE "internal_commands.ab3"
0003D3A2 <internal_commands.ab3@2391> INCLUDE "internal_commands.ab3"
0003D3A6 <internal_commands.ab3@2392> INCLUDE "internal_commands.ab3"
0003D3AA <internal_commands.ab3@2393> INCLUDE "internal_commands.ab3"
0003D3AE <internal_commands.ab3@2397> INCLUDE "internal_commands.ab3"
0003D3B2 <internal_commands.ab3@2398> INCLUDE "internal_commands.ab3"
0003D3B6 <internal_commands.ab3@2400> INCLUDE "internal_commands.ab3"
0003D3BA <internal_commands.ab3@2401> INCLUDE "internal_commands.ab3"
0003D3BE <internal_commands.ab3@2402> INCLUDE "internal_commands.ab3"
0003D3C2 <internal_commands.ab3@2403> INCLUDE "internal_commands.ab3"
0003D3C6 <internal_commands.ab3@2404> INCLUDE "internal_commands.ab3"
0003D3CA <internal_commands.ab3@2405> INCLUDE "internal_commands.ab3"
0003D3CE <internal_commands.ab3@2406> INCLUDE "internal_commands.ab3"
0003D3D2 <internal_commands.ab3@2407> INCLUDE "internal_commands.ab3"
0003D3D6 <internal_commands.ab3@2409> INCLUDE "internal_commands.ab3"
0003D3DA <internal_commands.ab3@2412> INCLUDE "internal_commands.ab3"
0003D3DE <internal_commands.ab3@2413> INCLUDE "internal_commands.ab3"
0003D3E2 <internal_commands.ab3@2415> INCLUDE "internal_commands.ab3"
0003D3E6 <internal_commands.ab3@2416> INCLUDE "internal_commands.ab3"
0003D3EA <internal_commands.ab3@2417> INCLUDE "internal_commands.ab3"
0003D3EE <internal_commands.ab3@2418> INCLUDE "internal_commands.ab3"
0003D3F2 <internal_commands.ab3@2419> INCLUDE "internal_commands.ab3"
0003D3F6 <internal_commands.ab3@2420> INCLUDE "internal_commands.ab3"
0003D3FA <internal_commands.ab3@2421> INCLUDE "internal_commands.ab3"
0003D3FE <internal_commands.ab3@2422> INCLUDE "internal_commands.ab3"
0003D402 <internal_commands.ab3@2424> INCLUDE "internal_commands.ab3"
0003D406 <internal_commands.ab3@2427> INCLUDE "internal_commands.ab3"
0003D408 <internal_commands.ab3@2428> INCLUDE "internal_commands.ab3"
0003D40C <internal_commands.ab3@2429> INCLUDE "internal_commands.ab3"
0003D410 <internal_commands.ab3@2430> INCLUDE "internal_commands.ab3"
0003D414 <internal_commands.ab3@2431> INCLUDE "internal_commands.ab3"
0003D418 <internal_commands.ab3@2432> INCLUDE "internal_commands.ab3"
0003D41C <internal_commands.ab3@2433> INCLUDE "internal_commands.ab3"
0003D420 <internal_commands.ab3@2434> INCLUDE "internal_commands.ab3"
0003D424 <internal_commands.ab3@2437> INCLUDE "internal_commands.ab3"
0003D428 <internal_commands.ab3@2438> INCLUDE "internal_commands.ab3"
0003D42C <internal_commands.ab3@2439> INCLUDE "internal_commands.ab3"
0003D42E <internal_commands.ab3@2440> INCLUDE "internal_commands.ab3"
0003D430 <internal_commands.ab3@2443> INCLUDE "internal_commands.ab3"
0003D432 <internal_commands.ab3@2444> INCLUDE "internal_commands.ab3"
0003D434 <internal_commands.ab3@2445> INCLUDE "internal_commands.ab3"
0003D436 <internal_commands.ab3@2446> INCLUDE "internal_commands.ab3"
0003D43A <internal_commands.ab3@2447> INCLUDE "internal_commands.ab3"
0003D43E <internal_commands.ab3@2450> INCLUDE "internal_commands.ab3"
0003D442 <internal_commands.ab3@2451> INCLUDE "internal_commands.ab3"
0003D446 <internal_commands.ab3@2452> INCLUDE "internal_commands.ab3"
0003D448 <internal_commands.ab3@2453> INCLUDE "internal_commands.ab3"
0003D44C <internal_commands.ab3@2454> INCLUDE "internal_commands.ab3"
0003D450 <internal_commands.ab3@2458> INCLUDE "internal_commands.ab3"
0003D454 <internal_commands.ab3@2461> INCLUDE "internal_commands.ab3"
0003D458 <internal_commands.ab3@2462> INCLUDE "internal_commands.ab3"
0003D45A <internal_commands.ab3@2463> INCLUDE "internal_commands.ab3"
0003D45C <internal_commands.ab3@2464> INCLUDE "internal_commands.ab3"
0003D460 <internal_commands.ab3@2465> INCLUDE "internal_commands.ab3"
0003D464 <internal_commands.ab3@2468> INCLUDE "internal_commands.ab3"
0003D468 <internal_commands.ab3@2469> INCLUDE "internal_commands.ab3"
0003D46C <internal_commands.ab3@2473> INCLUDE "internal_commands.ab3"
0003D470 <internal_commands.ab3@2476> INCLUDE "internal_commands.ab3"
0003D474 <internal_commands.ab3@2477> INCLUDE "internal_commands.ab3"
0003D476 <internal_commands.ab3@2478> INCLUDE "internal_commands.ab3"
0003D478 <internal_commands.ab3@2479> INCLUDE "internal_commands.ab3"
0003D47C <internal_commands.ab3@2480> INCLUDE "internal_commands.ab3"
0003D480 <internal_commands.ab3@2483> INCLUDE "internal_commands.ab3"
0003D484 <internal_commands.ab3@2484> INCLUDE "internal_commands.ab3"
0003D486 <internal_commands.ab3@2488> INCLUDE "internal_commands.ab3"
0003D48A <internal_commands.ab3@2489> INCLUDE "internal_commands.ab3"
0003D48E <internal_commands.ab3@2490> INCLUDE "internal_commands.ab3"
0003D490 <internal_commands.ab3@2491> INCLUDE "internal_commands.ab3"
0003D494 <internal_commands.ab3@2492> INCLUDE "internal_commands.ab3"
0003D498 <internal_commands.ab3@2493> INCLUDE "internal_commands.ab3"
0003D49A <internal_commands.ab3@2496> INCLUDE "internal_commands.ab3"
0003D49E <internal_commands.ab3@2497> INCLUDE "internal_commands.ab3"
0003D4A2 <internal_commands.ab3@2498> INCLUDE "internal_commands.ab3"
0003D4A6 <internal_commands.ab3@2499> INCLUDE "internal_commands.ab3"
0003D4AA <internal_commands.ab3@2502> INCLUDE "internal_commands.ab3"
0003D4AE <internal_commands.ab3@2503> INCLUDE "internal_commands.ab3"
0003D4B0 <internal_commands.ab3@2507> INCLUDE "internal_commands.ab3"
0003D4B4 <internal_commands.ab3@2508> INCLUDE "internal_commands.ab3"
0003D4B6 <internal_commands.ab3@2509> INCLUDE "internal_commands.ab3"
0003D4B8 <internal_commands.ab3@2510> INCLUDE "internal_commands.ab3"
0003D4BA <internal_commands.ab3@2511> INCLUDE "internal_commands.ab3"
0003D4BE <internal_commands.ab3@2512> INCLUDE "internal_commands.ab3"
0003D4C2 <internal_commands.ab3@2515> INCLUDE "internal_commands.ab3"
0003D4C6 <internal_commands.ab3@2516> INCLUDE "internal_commands.ab3"
0003D4CA <internal_commands.ab3@2517> INCLUDE "internal_commands.ab3"
0003D4CE <internal_commands.ab3@2518> INCLUDE "internal_commands.ab3"
0003D4D2 <internal_commands.ab3@2522> INCLUDE "internal_commands.ab3"
0003D4D6 <internal_commands.ab3@2523> INCLUDE "internal_commands.ab3"
0003D4DA <internal_commands.ab3@2527> INCLUDE "internal_commands.ab3"
0003D4DE <internal_commands.ab3@2528> INCLUDE "internal_commands.ab3"
0003D4E2 <internal_commands.ab3@2532> INCLUDE "internal_commands.ab3"
0003D4E6 <internal_commands.ab3@2533> INCLUDE "internal_commands.ab3"
0003D4EA <internal_commands.ab3@2537> INCLUDE "internal_commands.ab3"
0003D4EC <internal_commands.ab3@2540> INCLUDE "internal_commands.ab3"
0003D4F0 <internal_commands.ab3@2541> INCLUDE "internal_commands.ab3"
0003D4F4 <internal_commands.ab3@2542> INCLUDE "internal_commands.ab3"
0003D4F6 <internal_commands.ab3@2543> INCLUDE "internal_commands.ab3"
0003D4F8 <internal_commands.ab3@2544> INCLUDE "internal_commands.ab3"
0003D4FA <internal_commands.ab3@2545> INCLUDE "internal_commands.ab3"
0003D4FE <internal_commands.ab3@2546> INCLUDE "internal_commands.ab3"
0003D502 <internal_commands.ab3@2547> INCLUDE "internal_commands.ab3"
0003D504 <internal_commands.ab3@2548> INCLUDE "internal_commands.ab3"
0003D508 <internal_commands.ab3@2549> INCLUDE "internal_commands.ab3"
0003D50A <internal_commands.ab3@2550> INCLUDE "internal_commands.ab3"
0003D50C <internal_commands.ab3@2551> INCLUDE "internal_commands.ab3"
0003D50E <internal_commands.ab3@2552> INCLUDE "internal_commands.ab3"
0003D512 <internal_commands.ab3@2553> INCLUDE "internal_commands.ab3"
0003D516 <internal_commands.ab3@2554> INCLUDE "internal_commands.ab3"
0003D518 <internal_commands.ab3@2557> INCLUDE "internal_commands.ab3"
0003D51A <internal_commands.ab3@2558> INCLUDE "internal_commands.ab3"
0003D51E <internal_commands.ab3@2559> INCLUDE "internal_commands.ab3"
0003D522 <internal_commands.ab3@2560> INCLUDE "internal_commands.ab3"
0003D526 <internal_commands.ab3@2561> INCLUDE "internal_commands.ab3"
0003D52A <internal_commands.ab3@2562> INCLUDE "internal_commands.ab3"
0003D52C <internal_commands.ab3@2563> INCLUDE "internal_commands.ab3"
0003D530 <internal_commands.ab3@2564> INCLUDE "internal_commands.ab3"
0003D534 <internal_commands.ab3@2565> INCLUDE "internal_commands.ab3"
0003D538 <internal_commands.ab3@2566> INCLUDE "internal_commands.ab3"
0003D53A <internal_commands.ab3@2567> INCLUDE "internal_commands.ab3"
0003D53C <internal_commands.ab3@2568> INCLUDE "internal_commands.ab3"
0003D53E <internal_commands.ab3@2569> INCLUDE "internal_commands.ab3"
0003D540 <internal_commands.ab3@2572> INCLUDE "internal_commands.ab3"
0003D542 <internal_commands.ab3@2573> INCLUDE "internal_commands.ab3"
0003D544 <internal_commands.ab3@2574> INCLUDE "internal_commands.ab3"
0003D548 <internal_commands.ab3@2575> INCLUDE "internal_commands.ab3"
0003D54C <internal_commands.ab3@2576> INCLUDE "internal_commands.ab3"
0003D54E <internal_commands.ab3@2580> INCLUDE "internal_commands.ab3"
0003D552 <internal_commands.ab3@2581> INCLUDE "internal_commands.ab3"
0003D554 <internal_commands.ab3@2582> INCLUDE "internal_commands.ab3"
0003D558 <internal_commands.ab3@2583> INCLUDE "internal_commands.ab3"
0003D55C <internal_commands.ab3@2584> INCLUDE "internal_commands.ab3"
0003D55E <internal_commands.ab3@2585> INCLUDE "internal_commands.ab3"
0003D560 <internal_commands.ab3@2588> INCLUDE "internal_commands.ab3"
0003D562 <internal_commands.ab3@2592> INCLUDE "internal_commands.ab3"
0003D566 <internal_commands.ab3@2593> INCLUDE "internal_commands.ab3"
0003D568 <internal_commands.ab3@2594> INCLUDE "internal_commands.ab3"
0003D56C <internal_commands.ab3@2595> INCLUDE "internal_commands.ab3"
0003D570 <internal_commands.ab3@2596> INCLUDE "internal_commands.ab3"
0003D574 <internal_commands.ab3@2597> INCLUDE "internal_commands.ab3"
0003D576 <internal_commands.ab3@2600> INCLUDE "internal_commands.ab3"
0003D57A <internal_commands.ab3@2604> INCLUDE "internal_commands.ab3"
0003D57E <internal_commands.ab3@2605> INCLUDE "internal_commands.ab3"
0003D580 <internal_commands.ab3@2606> INCLUDE "internal_commands.ab3"
0003D584 <internal_commands.ab3@2607> INCLUDE "internal_commands.ab3"
0003D588 <internal_commands.ab3@2608> INCLUDE "internal_commands.ab3"
0003D58C <internal_commands.ab3@2611> INCLUDE "internal_commands.ab3"
0003D590 <internal_commands.ab3@2612> INCLUDE "internal_commands.ab3"
0003D594 <internal_commands.ab3@2613> INCLUDE "internal_commands.ab3"
0003D598 <internal_commands.ab3@2614> INCLUDE "internal_commands.ab3"
0003D59C <internal_commands.ab3@2615> INCLUDE "internal_commands.ab3"
0003D5A0 <internal_commands.ab3@2624> INCLUDE "internal_commands.ab3"
0003D5A2 <internal_commands.ab3@2625> INCLUDE "internal_commands.ab3"
0003D5A7 <internal_commands.ab3@2626> INCLUDE "internal_commands.ab3"
0003D5A8 <internal_commands.ab3@2627> INCLUDE "internal_commands.ab3"
0003D5AC <internal_commands.ab3@2631> INCLUDE "internal_commands.ab3"
0003D5AE <internal_commands.ab3@2632> INCLUDE "internal_commands.ab3"
0003D5B5 <internal_commands.ab3@2633> INCLUDE "internal_commands.ab3"
0003D5B6 <internal_commands.ab3@2634> INCLUDE "internal_commands.ab3"
0003D5BA <internal_commands.ab3@2638> INCLUDE "internal_commands.ab3"
0003D5BC <internal_commands.ab3@2639> INCLUDE "internal_commands.ab3"
0003D5C3 <internal_commands.ab3@2640> INCLUDE "internal_commands.ab3"
0003D5C4 <internal_commands.ab3@2641> INCLUDE "internal_commands.ab3"
0003D5C8 <internal_commands.ab3@2651> INCLUDE "internal_commands.ab3"
0003D5CA <internal_commands.ab3@2652> INCLUDE "internal_commands.ab3"
0003D5D2 <internal_commands.ab3@2653> INCLUDE "internal_commands.ab3"
0003D5D3 <internal_commands.ab3@2654> INCLUDE "internal_commands.ab3"
0003D5D4 <internal_commands.ab3@2655> INCLUDE "internal_commands.ab3"
0003D5D8 <internal_commands.ab3@2658> INCLUDE "internal_commands.ab3"
0003D5DA <internal_commands.ab3@2659> INCLUDE "internal_commands.ab3"
0003D5DF <internal_commands.ab3@2660> INCLUDE "internal_commands.ab3"
0003D5F3 <internal_commands.ab3@2661> INCLUDE "internal_commands.ab3"
0003D5F4 <internal_commands.ab3@2662> INCLUDE "internal_commands.ab3"
0003D5F8 <internal_commands.ab3@2665> INCLUDE "internal_commands.ab3"
0003D5FA <internal_commands.ab3@2666> INCLUDE "internal_commands.ab3"
0003D5FE <internal_commands.ab3@2667> INCLUDE "internal_commands.ab3"
0003D5FF <internal_commands.ab3@2668> INCLUDE "internal_commands.ab3"
0003D600 <internal_commands.ab3@2669> INCLUDE "internal_commands.ab3"
0003D604 <internal_commands.ab3@2672> INCLUDE "internal_commands.ab3"
0003D606 <internal_commands.ab3@2673> INCLUDE "internal_commands.ab3"
0003D609 <internal_commands.ab3@2674> INCLUDE "internal_commands.ab3"
0003D60A <internal_commands.ab3@2675> INCLUDE "internal_commands.ab3"
0003D60E <internal_commands.ab3@2679> INCLUDE "internal_commands.ab3"
0003D610 <internal_commands.ab3@2680> INCLUDE "internal_commands.ab3"
0003D617 <internal_commands.ab3@2681> INCLUDE "internal_commands.ab3"
0003D618 <internal_commands.ab3@2682> INCLUDE "internal_commands.ab3"
0003D61C <internal_commands.ab3@2686> INCLUDE "internal_commands.ab3"
0003D61E <internal_commands.ab3@2687> INCLUDE "internal_commands.ab3"
0003D624 <internal_commands.ab3@2688> INCLUDE "internal_commands.ab3"
0003D631 <internal_commands.ab3@2689> INCLUDE "internal_commands.ab3"
0003D632 <internal_commands.ab3@2690> INCLUDE "internal_commands.ab3"
0003D636 <internal_commands.ab3@2693> INCLUDE "internal_commands.ab3"
0003D638 <internal_commands.ab3@2694> INCLUDE "internal_commands.ab3"
0003D63F <internal_commands.ab3@2695> INCLUDE "internal_commands.ab3"
0003D657 <internal_commands.ab3@2696> INCLUDE "internal_commands.ab3"
0003D658 <internal_commands.ab3@2697> INCLUDE "internal_commands.ab3"
0003D65C <internal_commands.ab3@2700> INCLUDE "internal_commands.ab3"
0003D65E <internal_commands.ab3@2701> INCLUDE "internal_commands.ab3"
0003D662 <internal_commands.ab3@2702> INCLUDE "internal_commands.ab3"
0003D685 <internal_commands.ab3@2703> INCLUDE "internal_commands.ab3"
0003D686 <internal_commands.ab3@2704> INCLUDE "internal_commands.ab3"
0003D68A <internal_commands.ab3@2707> INCLUDE "internal_commands.ab3"
0003D68C <internal_commands.ab3@2708> INCLUDE "internal_commands.ab3"
0003D693 <internal_commands.ab3@2709> INCLUDE "internal_commands.ab3"
0003D69E <internal_commands.ab3@2710> INCLUDE "internal_commands.ab3"
0003D6A2 <internal_commands.ab3@2714> INCLUDE "internal_commands.ab3"
0003D6A4 <internal_commands.ab3@2715> INCLUDE "internal_commands.ab3"
0003D6AA <internal_commands.ab3@2716> INCLUDE "internal_commands.ab3"
0003D6AB <internal_commands.ab3@2717> INCLUDE "internal_commands.ab3"
0003D6AC <internal_commands.ab3@2718> INCLUDE "internal_commands.ab3"
0003D6B0 <internal_commands.ab3@2721> INCLUDE "internal_commands.ab3"
0003D6B2 <internal_commands.ab3@2722> INCLUDE "internal_commands.ab3"
0003D6B7 <internal_commands.ab3@2723> INCLUDE "internal_commands.ab3"
0003D6B8 <internal_commands.ab3@2724> INCLUDE "internal_commands.ab3"
0003D6BC <internal_commands.ab3@2728> INCLUDE "internal_commands.ab3"
0003D6BE <internal_commands.ab3@2729> INCLUDE "internal_commands.ab3"
0003D6C5 <internal_commands.ab3@2730> INCLUDE "internal_commands.ab3"
0003D6D7 <internal_commands.ab3@2731> INCLUDE "internal_commands.ab3"
0003D6D8 <internal_commands.ab3@2732> INCLUDE "internal_commands.ab3"
0003D6DC <internal_commands.ab3@2735> INCLUDE "internal_commands.ab3"
0003D6DE <internal_commands.ab3@2736> INCLUDE "internal_commands.ab3"
0003D6E8 <internal_commands.ab3@2737> INCLUDE "internal_commands.ab3"
0003D6E9 <internal_commands.ab3@2738> INCLUDE "internal_commands.ab3"
0003D6EA <internal_commands.ab3@2739> INCLUDE "internal_commands.ab3"
0003D6EE <internal_commands.ab3@2742> INCLUDE "internal_commands.ab3"
0003D6F0 <internal_commands.ab3@2743> INCLUDE "internal_commands.ab3"
0003D6F8 <internal_commands.ab3@2744> INCLUDE "internal_commands.ab3"
0003D705 <internal_commands.ab3@2745> INCLUDE "internal_commands.ab3"
0003D706 <internal_commands.ab3@2746> INCLUDE "internal_commands.ab3"
0003D70A <internal_commands.ab3@2749> INCLUDE "internal_commands.ab3"
0003D70C <internal_commands.ab3@2750> INCLUDE "internal_commands.ab3"
0003D70F <internal_commands.ab3@2751> INCLUDE "internal_commands.ab3"
0003D74A <internal_commands.ab3@2752> INCLUDE "internal_commands.ab3"
0003D74E <internal_commands.ab3@2756> INCLUDE "internal_commands.ab3"
0003D750 <internal_commands.ab3@2757> INCLUDE "internal_commands.ab3"
0003D754 <internal_commands.ab3@2758> INCLUDE "internal_commands.ab3"
0003D755 <internal_commands.ab3@2759> INCLUDE "internal_commands.ab3"
0003D756 <internal_commands.ab3@2760> INCLUDE "internal_commands.ab3"
0003D75A <internal_commands.ab3@2763> INCLUDE "internal_commands.ab3"
0003D75C <internal_commands.ab3@2764> INCLUDE "internal_commands.ab3"
0003D764 <internal_commands.ab3@2765> INCLUDE "internal_commands.ab3"
0003D765 <internal_commands.ab3@2766> INCLUDE "internal_commands.ab3"
0003D766 <internal_commands.ab3@2767> INCLUDE "internal_commands.ab3"
0003D76A <internal_commands.ab3@2770> INCLUDE "internal_commands.ab3"
0003D76C <internal_commands.ab3@2771> INCLUDE "internal_commands.ab3"
0003D774 <internal_commands.ab3@2772> INCLUDE "internal_commands.ab3"
0003D784 <internal_commands.ab3@2773> INCLUDE "internal_commands.ab3"
0003D788 <internal_commands.ab3@2777> INCLUDE "internal_commands.ab3"
0003D78A <internal_commands.ab3@2778> INCLUDE "internal_commands.ab3"
0003D793 <internal_commands.ab3@2779> INCLUDE "internal_commands.ab3"
0003D79B <internal_commands.ab3@2780> INCLUDE "internal_commands.ab3"
0003D79C <internal_commands.ab3@2781> INCLUDE "internal_commands.ab3"
0003D7A0 <internal_commands.ab3@2784> INCLUDE "internal_commands.ab3"
0003D7A2 <internal_commands.ab3@2785> INCLUDE "internal_commands.ab3"
0003D7AA <internal_commands.ab3@2786> INCLUDE "internal_commands.ab3"
0003D7B3 <internal_commands.ab3@2787> INCLUDE "internal_commands.ab3"
0003D7B4 <internal_commands.ab3@2788> INCLUDE "internal_commands.ab3"
0003D7B8 <internal_commands.ab3@2791> INCLUDE "internal_commands.ab3"
0003D7BA <internal_commands.ab3@2792> INCLUDE "internal_commands.ab3"
0003D7C2 <internal_commands.ab3@2793> INCLUDE "internal_commands.ab3"
0003D7C3 <internal_commands.ab3@2794> INCLUDE "internal_commands.ab3"
0003D7C4 <internal_commands.ab3@2795> INCLUDE "internal_commands.ab3"
0003D7C8 <internal_commands.ab3@2798> INCLUDE "internal_commands.ab3"
0003D7CA <internal_commands.ab3@2799> INCLUDE "internal_commands.ab3"
0003D7D0 <internal_commands.ab3@2800> INCLUDE "internal_commands.ab3"
0003D7D1 <internal_commands.ab3@2801> INCLUDE "internal_commands.ab3"
0003D7D2 <internal_commands.ab3@2802> INCLUDE "internal_commands.ab3"
0003D7D6 <internal_commands.ab3@2805> INCLUDE "internal_commands.ab3"
0003D7D8 <internal_commands.ab3@2806> INCLUDE "internal_commands.ab3"
0003D7DF <internal_commands.ab3@2807> INCLUDE "internal_commands.ab3"
0003D7E0 <internal_commands.ab3@2808> INCLUDE "internal_commands.ab3"
0003D7E4 <internal_commands.ab3@2812> INCLUDE "internal_commands.ab3"
0003D7E6 <internal_commands.ab3@2813> INCLUDE "internal_commands.ab3"
0003D7ED <internal_commands.ab3@2814> INCLUDE "internal_commands.ab3"
0003D7EE <internal_commands.ab3@2815> INCLUDE "internal_commands.ab3"
0003D7F2 <internal_commands.ab3@2819> INCLUDE "internal_commands.ab3"
0003D7F4 <internal_commands.ab3@2820> INCLUDE "internal_commands.ab3"
0003D7FB <internal_commands.ab3@2821> INCLUDE "internal_commands.ab3"
0003D7FC <internal_commands.ab3@2822> INCLUDE "internal_commands.ab3"
0003D800 <internal_commands.ab3@2826> INCLUDE "internal_commands.ab3"
0003D802 <internal_commands.ab3@2827> INCLUDE "internal_commands.ab3"
0003D809 <internal_commands.ab3@2828> INCLUDE "internal_commands.ab3"
0003D80A <internal_commands.ab3@2829> INCLUDE "internal_commands.ab3"
0003D80E <internal_commands.ab3@2833> INCLUDE "internal_commands.ab3"
0003D810 <internal_commands.ab3@2834> INCLUDE "internal_commands.ab3"
0003D815 <internal_commands.ab3@2835> INCLUDE "internal_commands.ab3"
0003D82B <internal_commands.ab3@2836> INCLUDE "internal_commands.ab3"
0003D82C <internal_commands.ab3@2837> INCLUDE "internal_commands.ab3"
0003D830 <internal_commands.ab3@2840> INCLUDE "internal_commands.ab3"
0003D832 <internal_commands.ab3@2841> INCLUDE "internal_commands.ab3"
0003D83C <internal_commands.ab3@2842> INCLUDE "internal_commands.ab3"
0003D83D <internal_commands.ab3@2843> INCLUDE "internal_commands.ab3"
0003D83E <internal_commands.ab3@2844> INCLUDE "internal_commands.ab3"
0003D842 <internal_commands.ab3@2847> INCLUDE "internal_commands.ab3"
0003D844 <internal_commands.ab3@2848> INCLUDE "internal_commands.ab3"
0003D84F <internal_commands.ab3@2849> INCLUDE "internal_commands.ab3"
0003D850 <internal_commands.ab3@2850> INCLUDE "internal_commands.ab3"
0003D854 <internal_commands.ab3@2854> INCLUDE "internal_commands.ab3"
0003D856 <internal_commands.ab3@2855> INCLUDE "internal_commands.ab3"
0003D862 <internal_commands.ab3@2856> INCLUDE "internal_commands.ab3"
0003D88F <internal_commands.ab3@2857> INCLUDE "internal_commands.ab3"
0003D890 <internal_commands.ab3@2858> INCLUDE "internal_commands.ab3"
0003D894 <internal_commands.ab3@2861> INCLUDE "internal_commands.ab3"
0003D896 <internal_commands.ab3@2862> INCLUDE "internal_commands.ab3"
0003D89E <internal_commands.ab3@2863> INCLUDE "internal_commands.ab3"
0003D8D5 <internal_commands.ab3@2864> INCLUDE "internal_commands.ab3"
0003D8D6 <internal_commands.ab3@2865> INCLUDE "internal_commands.ab3"
0003D8DA <internal_commands.ab3@2868> INCLUDE "internal_commands.ab3"
0003D8DC <internal_commands.ab3@2869> INCLUDE "internal_commands.ab3"
0003D8E4 <internal_commands.ab3@2870> INCLUDE "internal_commands.ab3"
0003D903 <internal_commands.ab3@2871> INCLUDE "internal_commands.ab3"
0003D904 <internal_commands.ab3@2872> INCLUDE "internal_commands.ab3"
0003D908 <internal_commands.ab3@2875> INCLUDE "internal_commands.ab3"
0003D90A <internal_commands.ab3@2876> INCLUDE "internal_commands.ab3"
0003D911 <internal_commands.ab3@2877> INCLUDE "internal_commands.ab3"
0003D947 <internal_commands.ab3@2878> INCLUDE "internal_commands.ab3"
0003D948 <internal_commands.ab3@2879> INCLUDE "internal_commands.ab3"
0003D94C <internal_commands.ab3@2882> INCLUDE "internal_commands.ab3"
0003D94E <internal_commands.ab3@2883> INCLUDE "internal_commands.ab3"
0003D957 <internal_commands.ab3@2884> INCLUDE "internal_commands.ab3"
0003D98C <internal_commands.ab3@2885> INCLUDE "internal_commands.ab3"
0003D990 <internal_commands.ab3@2889> INCLUDE "internal_commands.ab3"
0003D992 <internal_commands.ab3@2890> INCLUDE "internal_commands.ab3"
0003D9A2 <internal_commands.ab3@2891> INCLUDE "internal_commands.ab3"
0003D9D9 <internal_commands.ab3@2892> INCLUDE "internal_commands.ab3"
0003D9DA <internal_commands.ab3@2893> INCLUDE "internal_commands.ab3"
0003D9DA <AmiBlitz3.ab3@30807> INCLUDE "internal_commands.ab3"
0003D9DE <AmiBlitz3.ab3@30812>            Dc.l cif_lt                                     ;ciflt
0003D9E2 <AmiBlitz3.ab3@30813>            Dc.l cif_eq                                     ;cifeq
0003D9E6 <AmiBlitz3.ab3@30814>            Dc.l cif_gt                                     ;cifgt
0003D9EA <AmiBlitz3.ab3@30815>            Ds.l 1                                          ;0
0003D9EE <AmiBlitz3.ab3@30816>            Dc.l cif_le                                     ;cifle
0003D9F2 <AmiBlitz3.ab3@30817>            Dc.l cif_ne                                     ;cifne
0003D9F6 <AmiBlitz3.ab3@30818>            Dc.l cif_le                                     ;cifge
0003D9FA <AmiBlitz3.ab3@30819>            Ds.l 1                                          ;0
0003D9FE <AmiBlitz3.ab3@30820>            Dc.l cif_ge                                     ;cifge
0003DA02 <AmiBlitz3.ab3@30821>            Dc.l cif_ne                                     ;cifne
0003DA06 <AmiBlitz3.ab3@30822>            Dc.l cif_ge                                     ;cifge
0003DA0A <AmiBlitz3.ab3@30823>            Ds.l 1                                          ;0
0003DA0E <AmiBlitz3.ab3@30826>            Dc.l do_newtype                                 ;donewtype
0003DA12 <AmiBlitz3.ab3@30827>            Dc.l do_end                                     ;doend
0003DA16 <AmiBlitz3.ab3@30828>            Dc.l do_let                                     ;dolet
0003DA1A <AmiBlitz3.ab3@30829>            Dc.l do_dim                                     ;dodim
0003DA1E <AmiBlitz3.ab3@30830>            Dc.l do_goto                                    ;dogoto
0003DA22 <AmiBlitz3.ab3@30831>            Dc.l do_gosub                                   ;dogosub
0003DA26 <AmiBlitz3.ab3@30832>            Dc.l do_return                                  ;doreturn
0003DA2A <AmiBlitz3.ab3@30833>            Dc.l do_statement                               ;dostate
0003DA2E <AmiBlitz3.ab3@30834>            Dc.l do_function                                ;dofunc
0003DA32 <AmiBlitz3.ab3@30835>            Dc.l do_mousewait                               ;domwait
0003DA36 <AmiBlitz3.ab3@30836>            Dc.l do_if                                      ;doif
0003DA3A <AmiBlitz3.ab3@30837>            Dc.l do_while                                   ;dowhile
0003DA3E <AmiBlitz3.ab3@30838>            Dc.l do_Macro                                   ;domacro
0003DA42 <AmiBlitz3.ab3@30839>            Dc.l do_select                                  ;doselect
0003DA46 <AmiBlitz3.ab3@30840>            Dc.l do_case                                    ;docase
0003DA4A <AmiBlitz3.ab3@30841>            Dc.l do_default                                 ;dodefault
0003DA4E <AmiBlitz3.ab3@30842>            Dc.l do_AsmExit                                 ;doasmexit
0003DA52 <AmiBlitz3.ab3@30843>            Dc.l do_xinclude                                ;doxinclude
0003DA56 <AmiBlitz3.ab3@30844>            Dc.l do_INCLUDE                                 ;doinclude
0003DA5A <AmiBlitz3.ab3@30845>            Dc.l do_syntax                                  ;syntaxerr
0003DA5E <AmiBlitz3.ab3@30846>            Dc.l do_shared                                  ;doshared
0003DA62 <AmiBlitz3.ab3@30847>            Dc.l do_for                                     ;dofor
0003DA66 <AmiBlitz3.ab3@30848>            Dc.l do_next                                    ;donext
0003DA6A <AmiBlitz3.ab3@30849>            Dc.l syntaxerr                                  ; To
0003DA6E <AmiBlitz3.ab3@30850>            Dc.l syntaxerr                                  ; Step
0003DA72 <AmiBlitz3.ab3@30851>            Dc.l do_data                                    ;dodata
0003DA76 <AmiBlitz3.ab3@30852>            Dc.l do_read                                    ;doread
0003DA7A <AmiBlitz3.ab3@30856>            Dc.l syntaxerr                                  ; CNIF
0003DA7E <AmiBlitz3.ab3@30857>            Dc.l syntaxerr                                  ; CSIF
0003DA82 <AmiBlitz3.ab3@30858>            Dc.l syntaxerr                                  ; CELSE
0003DA86 <AmiBlitz3.ab3@30859>            Dc.l syntaxerr                                  ; CEND
0003DA8A <AmiBlitz3.ab3@30860>            Dc.l do_cerr                                    ;docerr
0003DA8E <AmiBlitz3.ab3@30861>            Dc.l do_then                                    ;dothen
0003DA92 <AmiBlitz3.ab3@30862>            Dc.l do_else                                    ;doelse
0003DA96 <AmiBlitz3.ab3@30863>            Dc.l do_even4                                   ;doeven4
0003DA9A <AmiBlitz3.ab3@30864>            Dc.l do_even8                                   ;doeven8
0003DA9E <AmiBlitz3.ab3@30866>            Dc.l do_dc                                      ;dodc
0003DAA2 <AmiBlitz3.ab3@30867>            Dc.l do_ds                                      ;dods
0003DAA6 <AmiBlitz3.ab3@30868>            Dc.l do_even                                    ;doeven
0003DAAA <AmiBlitz3.ab3@30869>            Dc.l do_dcb                                     ;dodcb
0003DAAE <AmiBlitz3.ab3@30870>            Dc.l do_setreg                                  ;dosetreg
0003DAB2 <AmiBlitz3.ab3@30871>            Dc.l do_IncBin                                  ;doincbin
0003DAB6 <AmiBlitz3.ab3@30872>            Dc.l do_free                                    ;dofree
0003DABA <AmiBlitz3.ab3@30873>            Dc.l do_use                                     ;douse
0003DABE <AmiBlitz3.ab3@30874>            Dc.l do_Stop                                    ;dostop
0003DAC2 <AmiBlitz3.ab3@30875>            Dc.l do_Cont                                    ;docont
0003DAC6 <AmiBlitz3.ab3@30876>            Dc.l syntaxerr                                  ;syntaxeer
0003DACA <AmiBlitz3.ab3@30877>            Dc.l do_SetInt                                  ;dosetint
0003DACE <AmiBlitz3.ab3@30878>            Dc.l do_ClrInt                                  ;doclrint
0003DAD2 <AmiBlitz3.ab3@30879>            Dc.l do_MaxLen                                  ;domaxlen
0003DAD6 <AmiBlitz3.ab3@30880>            Dc.l do_DEFTYPE                                 ;dodeftype
0003DADA <AmiBlitz3.ab3@30881>            Dc.l do_BLITZ                                   ;doblitz
0003DADE <AmiBlitz3.ab3@30882>            Dc.l do_AMIGA                                   ;doamiga
0003DAE2 <AmiBlitz3.ab3@30883>            Dc.l do_QAMIGA                                  ;doqamiga
0003DAE6 <AmiBlitz3.ab3@30884>            Dc.l do_VWait                                   ;dovwait
0003DAEA <AmiBlitz3.ab3@30885>            Dc.l do_LibJsr                                  ;dolibjsr
0003DAEE <AmiBlitz3.ab3@30886>            Dc.l do_TokeJsr                                 ;dotokejsr
0003DAF2 <AmiBlitz3.ab3@30887>            Dc.l do_BLibJsr                                 ;doblibjsr
0003DAF6 <AmiBlitz3.ab3@30888>            Dc.l _extb                                      ;syntaxerr
0003DAFA <AmiBlitz3.ab3@30892>            Dc.l syntaxerr                                  ;syntaxerr      ;flash2 ; for list
0003DAFE <AmiBlitz3.ab3@30893>            Dc.l do_SetErr                                  ;doseterr
0003DB02 <AmiBlitz3.ab3@30894>            Dc.l do_ClrErr                                  ;doclrerr
0003DB06 <AmiBlitz3.ab3@30895>            Dc.l syntaxerr                                  ;syntaxerr
0003DB0A <AmiBlitz3.ab3@30896>            Dc.l do_ErrFail                                 ;doerrfail
0003DB0E <AmiBlitz3.ab3@30897>            Dc.l syntaxerr
0003DB12 <AmiBlitz3.ab3@30898>            Dc.l syntaxerr                                  ;mod
0003DB16 <AmiBlitz3.ab3@30899>            Dc.l syntaxerr                                  ;Pi
0003DB1A <AmiBlitz3.ab3@30900>            Dc.l do_Repeat                                  ;dorepeat
0003DB1E <AmiBlitz3.ab3@30901>            Dc.l do_Until                                   ;dountil
0003DB22 <AmiBlitz3.ab3@30902>            Dc.l do_PutReg                                  ;doputreg
0003DB26 <AmiBlitz3.ab3@30903>            Dc.l do_Pop                                     ;dopop
0003DB2A <AmiBlitz3.ab3@30904>            Dc.l do_INCDIR                                  ;doincdir
0003DB2E <AmiBlitz3.ab3@30905>            Dc.l mydo_Endif2                                ;mydoendif2
0003DB32 <AmiBlitz3.ab3@30906>            Dc.l do_Wend                                    ;dowend
0003DB36 <AmiBlitz3.ab3@30907>            Dc.l do_SysJsr                                  ;dosysjsr
0003DB3A <AmiBlitz3.ab3@30908>            Dc.l do_WBStartup                               ;dowbstartup
0003DB3E <AmiBlitz3.ab3@30909>            Dc.l syntaxerr
0003DB42 <AmiBlitz3.ab3@30910>            Dc.l do_Ongo                                    ;doongo
0003DB46 <AmiBlitz3.ab3@30911>            Dc.l syntaxerr
0003DB4A <AmiBlitz3.ab3@30912>            Dc.l do_Forever                                 ;doforever
0003DB4E <AmiBlitz3.ab3@30913>            Dc.l do_Restore                                 ;dorestore
0003DB52 <AmiBlitz3.ab3@30914>            Dc.l do_Exchange                                ;doexchange
0003DB56 <AmiBlitz3.ab3@30915>            Dc.l do_USEPATH                                 ;dousepath
0003DB5A <AmiBlitz3.ab3@30916>            Dc.l do_CloseEd                                 ;doclosed
0003DB5E <AmiBlitz3.ab3@30917>            Dc.l do_NoCli                                   ;donocli
0003DB62 <AmiBlitz3.ab3@30918>            Dc.l syntaxerr                                  ;syntaxerr
0003DB66 <AmiBlitz3.ab3@30919>            Dc.l syntaxerr                                  ;syntaxerr
0003DB6A <AmiBlitz3.ab3@30920>            Dc.l syntaxerr                                  ;syntaxerr
0003DB6E <AmiBlitz3.ab3@30921>            Dc.l syntaxerr                                  ;syntaxerr
0003DB72 <AmiBlitz3.ab3@30922>            Dc.l syntaxerr                                  ;syntaxerr
0003DB76 <AmiBlitz3.ab3@30923>            Dc.l do_runerrson                               ;dorunerrson
0003DB7A <AmiBlitz3.ab3@30924>            Dc.l do_runerrsoff                              ;dorunerrsoff
0003DB7E <AmiBlitz3.ab3@30925>            Dc.l do_uselastpath
0003DB82 <AmiBlitz3.ab3@30926>            Dc.l do_regload
0003DB86 <AmiBlitz3.ab3@30927>            Dc.l do_regsave
0003DB8A <AmiBlitz3.ab3@30928>            Dc.l do_Object
0003DB8E <AmiBlitz3.ab3@30929>            Dc.l do_usepath2
0003DB92 <AmiBlitz3.ab3@30930>            Dc.l do_LastRunErrsMode
0003DB96 <AmiBlitz3.ab3@30953> menu_items:Dc.l menu_compile_run                                ;menuadds oreg source
0003DB9A <AmiBlitz3.ab3@30954>            Dc.l menu_run
0003DB9E <AmiBlitz3.ab3@30955>            Dc.l menu_createexecutable
0003DBA2 <AmiBlitz3.ab3@30956>            Dc.l menu_dummyfunc                                  ;was menu_compileroptions
0003DBA6 <AmiBlitz3.ab3@30957>            Dc.l menu_createresidentfile
0003DBAA <AmiBlitz3.ab3@30958> 
0003DBAE <AmiBlitz3.ab3@30959> 
0003DBB2 <AmiBlitz3.ab3@30960>            Dc.l menu_dummyfunc                                  ;was menu_calculator
0003DBB6 <AmiBlitz3.ab3@30961>            Dc.l menu_reloadlibs
0003DBBA <AmiBlitz3.ab3@30962>            Dc.l menu_loaddebugmodule
0003DBBE <AmiBlitz3.ab3@30963>            Dc.l menu_dummyfunc
0003DBC2 <AmiBlitz3.ab3@30964>            Dc.l menu_newcreate
0003DBC6 <AmiBlitz3.ab3@30965>            Dc.l menu_dummyfunc
0003DBCA <AmiBlitz3.ab3@30966>            Dc.l menu_toggledebug
0003DBCE <AmiBlitz3.ab3@30967> 
0003DBD2 <AmiBlitz3.ab3@30968>            Dc.l menu_dummyfunc
0003DBD4 <AmiBlitz3.ab3@30969> Even4
0003DBFE <AmiBlitz3.ab3@30973>   !basic
0003DC60 <AmiBlitz3.ab3@30974>   error{!TRANS{"Invalid AmiBlitz3 menu item called!"} }
0003DC7E <AmiBlitz3.ab3@30975>   !asm
0003DC80 <AmiBlitz3.ab3@30976> RTS
0003DC81 <AmiBlitz3.ab3@30981> set_autorun:               Dc.b $00
0003DC86 <AmiBlitz3.ab3@30982> autorun:                   Dc.b $80,$01,$01,$00,$01
0003DC87 <AmiBlitz3.ab3@30984> set_interruptcheck:        Dc.b $00
0003DC8C <AmiBlitz3.ab3@30985> interruptcheck             Dc.b $80,$01,$01,$00,$01
0003DC8D <AmiBlitz3.ab3@30987> set_assemblercheck:        Ds.b 1
0003DC92 <AmiBlitz3.ab3@30988> assemblercheck:            Dc.b $00,$01,$01,$00,$01
0003DC93 <AmiBlitz3.ab3@30990> set_overflowcheck:         Ds.b 1
0003DC98 <AmiBlitz3.ab3@30991> overflowcheck:             Dc.b $00,$01,$01,$00,$01
0003DC9E <AmiBlitz3.ab3@30993> default_obsolete:          Dc.b $00,$80,$01,$01,$00,$01
0003DCA4 <AmiBlitz3.ab3@30994> default_interruptcheck:    Dc.b $00,$80,$01,$01,$00,$01
0003DCAA <AmiBlitz3.ab3@30995> default_overflowcheck:     Dc.b $00,$80,$01,$01,$00,$01
0003DCAC <AmiBlitz3.ab3@30996> Even4
0003DCB8 <AmiBlitz3.ab3@30999> tsthead:                   Dc.l $000003F3,$00000000,$00000001
0003DCC0 <AmiBlitz3.ab3@31000>                            Dc.l $00000000,$00000000
0003DCC8 <AmiBlitz3.ab3@31001> tstsize1:                  Dc.l $00000100,$000003E9
0003DCCC <AmiBlitz3.ab3@31002> tstsize2:                  Dc.l $00000100
0003DCD0 <AmiBlitz3.ab3@31003> tstend:                    Dc.l $000003EC
0003DCD8 <AmiBlitz3.ab3@31004> tstsize3:                  Ds.l 2
0003DCDC <AmiBlitz3.ab3@31005> tstdone:                   Dc.l $000003F2
0003DCE0 <AmiBlitz3.ab3@31008> edstruct:                  Dc.l tokens                     ;data for ted
0003DCE4 <AmiBlitz3.ab3@31012>                            Dc.l 0
0003DCE8 <AmiBlitz3.ab3@31014>                            Dc.l read_xtrafile              ;load .xtra routine
0003DCEC <AmiBlitz3.ab3@31015>                            Dc.l write_xtrafile             ;save .xtra routine
0003DCF0 <AmiBlitz3.ab3@31016>                            Dc.l call_menuentry             ;Menu Routine
0003DCF4 <AmiBlitz3.ab3@31017>                            Ds.l 1                          ;cleanup (?)
0003DCF8 <AmiBlitz3.ab3@31018>                            Dc.b ":",34,".;"
0003DDF4 <AmiBlitz3.ab3@31021> 
0003DED4 <AmiBlitz3.ab3@31022>                            Ds.l 56
0003DED6 <AmiBlitz3.ab3@31027> lslimm:                    Dc.b $E1,$48                                             ;LSL.W   #8,D0
0003DEDA <AmiBlitz3.ab3@31030> use:                       Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0003DEDC <AmiBlitz3.ab3@31031>                            Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0003DEE0 <AmiBlitz3.ab3@31032>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003DEE6 <AmiBlitz3.ab3@31036> beginarr:                  Dc.b $20,$3C,$00,$00,$00,$00                             ;MOVE.L  #$00000000,D0
0003DEE8 <AmiBlitz3.ab3@31040>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003DEEC <AmiBlitz3.ab3@31043> putarr:                    Dc.b $2B,$40 :                            Dc.b $00,$00   ;MOVE.L  D0,$0000(A5)
0003DEF0 <AmiBlitz3.ab3@31046> doarr:                     Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003DEF4 <AmiBlitz3.ab3@31047>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003DEF6 <AmiBlitz3.ab3@31053>                            Dc.b $4A,$40                                             ;TST.W   D0
0003DEF8 <AmiBlitz3.ab3@31057>                            Dc.b $4A,$80                                             ;TST.L   D0
0003DEFA <AmiBlitz3.ab3@31060> nops8:                     Dc.b $4E,$71                                             ;NOP
0003DEFC <AmiBlitz3.ab3@31061>                            Dc.b $4E,$71                                             ;NOP
0003DEFE <AmiBlitz3.ab3@31062>                            Dc.b $4E,$71                                             ;NOP
0003DF00 <AmiBlitz3.ab3@31063>                            Dc.b $4E,$71                                             ;NOP
0003DF02 <AmiBlitz3.ab3@31064> nops4:                     Dc.b $4E,$71                                             ;NOP
0003DF04 <AmiBlitz3.ab3@31066>                            Dc.b $4E,$71                                             ;NOP
0003DF06 <AmiBlitz3.ab3@31067>                            Dc.b $4E,$71                                             ;NOP
0003DF08 <AmiBlitz3.ab3@31068>                            Dc.b $4E,$71                                             ;NOP
0003DF0C <AmiBlitz3.ab3@31072> dataget:                   Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003DF10 <AmiBlitz3.ab3@31075> dataput:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003DF12 <AmiBlitz3.ab3@31078> stlenget:                  Dc.b $2F,$1B                                             ;MOVE.L  (A3)+,-(A7)
0003DF14 <AmiBlitz3.ab3@31081> stalign:                   Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003DF16 <AmiBlitz3.ab3@31082>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003DF1A <AmiBlitz3.ab3@31083>                            Dc.b $08,$80,$00,$00                                     ;BCLR    #0,D0
0003DF1C <AmiBlitz3.ab3@31084>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003DF1E <AmiBlitz3.ab3@31090> dataletb:                  Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003DF22 <AmiBlitz3.ab3@31091>                            Dc.b $1B,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A5)
0003DF24 <AmiBlitz3.ab3@31096> dataletbl:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003DF28 <AmiBlitz3.ab3@31097>                            Dc.b $19,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A4)
0003DF2A <AmiBlitz3.ab3@31101> dataletb2:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003DF2C <AmiBlitz3.ab3@31102>                            Dc.b $14,$9B                                             ;MOVE.B  (A3)+,(A2)
0003DF30 <AmiBlitz3.ab3@31108> dataletw:                  Dc.b $3B,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A5)
0003DF32 <AmiBlitz3.ab3@31109>                            Dc.b $34,$9B                                             ;MOVE.W  (A3)+,(A2)
0003DF36 <AmiBlitz3.ab3@31110>                            Dc.b $39,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A4)
0003DF3A <AmiBlitz3.ab3@31114> dataletl:                  Dc.b $2B,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A5)
0003DF3C <AmiBlitz3.ab3@31115>                            Dc.b $24,$9B                                             ;MOVE.L  (A3)+,(A2)
0003DF40 <AmiBlitz3.ab3@31116>                            Dc.b $29,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A4)
0003DF42 <AmiBlitz3.ab3@31119> nextfixw:                  Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003DF46 <AmiBlitz3.ab3@31122> nextfixw2:                 Dc.b $4F,$EF,$00,$0A                                     ;LEA $000A(A7),A7
0003DF4A <AmiBlitz3.ab3@31125> nextfixl:                  Dc.b $4F,$EF,$00,$0C                                     ;LEA $000C(A7),A7
0003DF4E <AmiBlitz3.ab3@31128> nextfixl2:                 Dc.b $4F,$EF,$00,$0E                                     ;LEA $000E(A7),A7
0003DF52 <AmiBlitz3.ab3@31132>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003DF54 <AmiBlitz3.ab3@31133>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003DF56 <AmiBlitz3.ab3@31134>                            Dc.b $D1,$12                                             ;ADD.B   D0,(A2)
0003DF5A <AmiBlitz3.ab3@31139>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003DF5C <AmiBlitz3.ab3@31140>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003DF5E <AmiBlitz3.ab3@31141>                            Dc.b $D1,$52                                             ;ADD.W   D0,(A2)
0003DF62 <AmiBlitz3.ab3@31146>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003DF64 <AmiBlitz3.ab3@31147>                            Dc.b $20,$17                                             ;MOVE.L  (A7),D0
0003DF66 <AmiBlitz3.ab3@31148>                            Dc.b $D1,$92                                             ;ADD.L   D0,(A2)
0003DF6A <AmiBlitz3.ab3@31153>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003DF6C <AmiBlitz3.ab3@31154>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003DF6E <AmiBlitz3.ab3@31155>                            Dc.b $22,$17                                             ;MOVE.L  (A7),D1
0003DF72 <AmiBlitz3.ab3@31156>                            Dc.b $4E,$AE,$FF,$BE                                     ;JSR -$0042(A6)
0003DF74 <AmiBlitz3.ab3@31157>                            Dc.b $24,$80                                             ;MOVE.L  D0,(A2)
0003DF78 <AmiBlitz3.ab3@31162>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003DF7A <AmiBlitz3.ab3@31163>                            Dc.b $10,$12                                             ;MOVE.B  (A2),D0
0003DF7E <AmiBlitz3.ab3@31164>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003DF80 <AmiBlitz3.ab3@31165>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003DF84 <AmiBlitz3.ab3@31166>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000001         ;.skip org source
0003DF86 <AmiBlitz3.ab3@31167>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003DF88 <AmiBlitz3.ab3@31170>                            Dc.b $B0,$01                                             ;CMP.B   D1,D0
0003DF8C <AmiBlitz3.ab3@31175>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003DF8E <AmiBlitz3.ab3@31176>                            Dc.b $30,$12                                             ;MOVE.W  (A2),D0
0003DF92 <AmiBlitz3.ab3@31177>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003DF94 <AmiBlitz3.ab3@31178>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003DF98 <AmiBlitz3.ab3@31179>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000002         ;.skip org source
0003DF9A <AmiBlitz3.ab3@31180>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003DF9C <AmiBlitz3.ab3@31183>                            Dc.b $B0,$41                                             ;CMP.W   D1,D0
0003DFA0 <AmiBlitz3.ab3@31188>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003DFA2 <AmiBlitz3.ab3@31189>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003DFA6 <AmiBlitz3.ab3@31190>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003DFA8 <AmiBlitz3.ab3@31191>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003DFAC <AmiBlitz3.ab3@31192>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000003         ;.skip org source
0003DFAE <AmiBlitz3.ab3@31193>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003DFB0 <AmiBlitz3.ab3@31196>                            Dc.b $B0,$81                                             ;CMP.L   D1,D0
0003DFB4 <AmiBlitz3.ab3@31201>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003DFB6 <AmiBlitz3.ab3@31202>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003DFBA <AmiBlitz3.ab3@31203>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003DFC0 <AmiBlitz3.ab3@31204>                            Dc.b $08,$2F,$00,$07,$00,$03                             ;BTST    #7,$0003(A7)
0003DFC4 <AmiBlitz3.ab3@31205>                            Dc.b $67,$00,$00,$04                                     ;BEQ.W   L000004
0003DFC6 <AmiBlitz3.ab3@31206>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003DFCA <AmiBlitz3.ab3@31213>                            Dc.b $4E,$AE,$FF,$D6                                     ;JSR -$002A(A6)
0003DFCC <AmiBlitz3.ab3@31217> swapd0:                    Dc.b $48,$40                                             ;SWAP    D0
0003DFCE <AmiBlitz3.ab3@31220> pushindex:                 Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003DFD2 <AmiBlitz3.ab3@31223> leaamp:                    Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003DFD4 <AmiBlitz3.ab3@31224> leaamp2:                   Dc.b $20,$0A                                             ;MOVE.L  A2,D0
0003DFD8 <AmiBlitz3.ab3@31227> leaampl:                   Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003DFDA <AmiBlitz3.ab3@31230> stamp:                     Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003DFDE <AmiBlitz3.ab3@31233> stamp2:                    Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003DFE0 <AmiBlitz3.ab3@31237>                            Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
0003DFE2 <AmiBlitz3.ab3@31240> pushd0wd:                  Dc.b $3F,$00                                             ;MOVE.W  D0,-(A7)
0003DFE4 <AmiBlitz3.ab3@31243> pushd0l:                   Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003DFE8 <AmiBlitz3.ab3@31246> movenumrep:                Dc.b $3E,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D7
0003DFEC <AmiBlitz3.ab3@31249> preplibst:                 Dc.b $45,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A2
0003DFF0 <AmiBlitz3.ab3@31252> fixlibst:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003DFF2 <AmiBlitz3.ab3@31255> pushdn:                    Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003DFF4 <AmiBlitz3.ab3@31258> movea3a7:                  Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003DFF8 <AmiBlitz3.ab3@31261> movestst2:                 Dc.b $20,$2F :                            Dc.b $00,$06   ;MOVE.L  $0006(A7),D0
0003DFFE <AmiBlitz3.ab3@31262>                            Dc.b $3F,$6F,$00,$04,$00,$08                             ;MOVE.W  $0004(A7),$0008(A7)
0003E000 <AmiBlitz3.ab3@31263>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003E004 <AmiBlitz3.ab3@31267> movea7dn:                  Dc.b $20,$2F :                            Dc.b $00,$04   ;MOVE.L  $0004(A7),D0
0003E006 <AmiBlitz3.ab3@31268>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003E008 <AmiBlitz3.ab3@31272> moved0a3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003E00C <AmiBlitz3.ab3@31275> movestdn:                  Dc.b $20,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),D0
0003E00E <AmiBlitz3.ab3@31279>                            Dc.b $20,$0B                                             ;MOVE.L  A3,D0
0003E010 <AmiBlitz3.ab3@31283>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003E012 <AmiBlitz3.ab3@31287>                            Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003E016 <AmiBlitz3.ab3@31290> moverts:                   Dc.b $2F,$57 :                            Dc.b $00,$00   ;MOVE.L  (A7),$0000(A7)
0003E01A <AmiBlitz3.ab3@31293> fixstack:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003E01C <AmiBlitz3.ab3@31296> fixq:                      Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003E01E <AmiBlitz3.ab3@31299> fix1:                      Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003E020 <AmiBlitz3.ab3@31302> movedna3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003E024 <AmiBlitz3.ab3@31305> least:                     Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003E028 <AmiBlitz3.ab3@31308> funcst:                    Dc.b $2F,$2C :                            Dc.b $00,$00   ;MOVE.L  $0000(A4),-(A7)
0003E02A <AmiBlitz3.ab3@31311> addq4a2:                   Dc.b $58,$4A                                             ;ADDQ.W  #4,A2
0003E02C <AmiBlitz3.ab3@31315>                            Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003E030 <AmiBlitz3.ab3@31318>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003E032 <AmiBlitz3.ab3@31324>                            Dc.b $26,$5F                                             ;MOVEA.L (A7)+,A3
0003E036 <AmiBlitz3.ab3@31327>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003E038 <AmiBlitz3.ab3@31333>                            Dc.b $CB,$4C                                             ;EXG A5,A4
0003E03C <AmiBlitz3.ab3@31337> linksize:                  Dc.b $4E,$54 :                            Dc.b $00,$00   ;LINK    A4,#-$0000
0003E03E <AmiBlitz3.ab3@31340> unlinka4:                  Dc.b $4E,$5C                                             ;UNLK    A4
0003E040 <AmiBlitz3.ab3@31344>                            Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003E042 <AmiBlitz3.ab3@31348>                            Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003E048 <AmiBlitz3.ab3@31351> gotocode:                  Dc.b $4E,$F9,$00,$00,$00,$00                             ;JMP $00000000
0003E04E <AmiBlitz3.ab3@31354> gosubcode:                 Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003E056 <AmiBlitz3.ab3@31358> mwait:                     Dc.b $08,$39,$00,$06,$00,$BF,$E0,$01                     ;BTST    #6,$00BFE001
0003E05A <AmiBlitz3.ab3@31359>                            Dc.b $66,$00,$FF,$F6                                     ;BNE.W   L000005       ;mwait: org source
0003E05C <AmiBlitz3.ab3@31363> libreg:                    Dc.b $20,$00                                             ;MOVE.L  D0,D0
0003E060 <AmiBlitz3.ab3@31366> libbase:                   Dc.b $2C,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A6
0003E064 <AmiBlitz3.ab3@31369> libjsr:                    Dc.b $4E,$AE :                            Dc.b $00,$00   ;JSR $0000(A6)
0003E068 <AmiBlitz3.ab3@31372> regtransd:                 Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003E06C <AmiBlitz3.ab3@31373> regtransa:                 Dc.b $20,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A0
0003E070 <AmiBlitz3.ab3@31377>                            Dc.b $26,$7C,$00,$00                                     ;MOVEA.L #$00000000,A3
0003E074 <AmiBlitz3.ab3@31379>                            Dc.l $3F1B                                               ;MOVE.W  (A3)+,-(A7)
0003E076 <AmiBlitz3.ab3@31382> movea2dn:                  Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003E07A <AmiBlitz3.ab3@31385> moved3a5dn:                Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003E07C <AmiBlitz3.ab3@31388> stvarget2:                 Dc.b $70,$00                                             ;MOVEQ   #$00,D0
0003E07E <AmiBlitz3.ab3@31389>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003E080 <AmiBlitz3.ab3@31390>                            Dc.b $4A,$92                                             ;TST.L   (A2)
0003E084 <AmiBlitz3.ab3@31391> 
0003E086 <AmiBlitz3.ab3@31392>                            Dc.b $20,$52                                             ;MOVEA.L (A2),A0
0003E088 <AmiBlitz3.ab3@31393>                            Dc.b $59,$48                                             ;SUBQ.W  #4,A0
0003E08A <AmiBlitz3.ab3@31394>                            Dc.b $2E,$98                                             ;MOVE.L  (A0)+,(A7)
0003E090 <AmiBlitz3.ab3@31396>                            Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003E092 <AmiBlitz3.ab3@31401> addcode:                   Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003E094 <AmiBlitz3.ab3@31402>                            Dc.b $D1,$97                                             ;ADD.L   D0,(A7)
0003E096 <AmiBlitz3.ab3@31406> pushlen:                   Dc.b $2F,$18                                             ;MOVE.L  (A0)+,-(A7)
0003E09A <AmiBlitz3.ab3@31409> leaa5d3a2:                 Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003E09C <AmiBlitz3.ab3@31412> pusha2:                    Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003E09E <AmiBlitz3.ab3@31416>                            Dc.b $24,$57                                             ;MOVEA.L (A7),A2
0003E0A0 <AmiBlitz3.ab3@31419> pulla2:                    Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003E0A4 <AmiBlitz3.ab3@31422> pulla2st:                  Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003E0A6 <AmiBlitz3.ab3@31423>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003E0AA <AmiBlitz3.ab3@31427> pusha3:                    Dc.b $2F,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),-(A7)
0003E0AE <AmiBlitz3.ab3@31428> pusha32:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003E0B2 <AmiBlitz3.ab3@31432> pulla3:                    Dc.b $2B,$5F :                            Dc.b $00,$00   ;MOVE.L  (A7)+,$0000(A5)
0003E0B6 <AmiBlitz3.ab3@31436> geta3:                     Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003E0BC <AmiBlitz3.ab3@31440> numtoa0:                   Dc.b $20,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A0
0003E0C2 <AmiBlitz3.ab3@31443> numtoa2:                   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0003E0C6 <AmiBlitz3.ab3@31447> endarray:                  Dc.b $38,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D4
0003E0CA <AmiBlitz3.ab3@31451>                            Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003E0CE <AmiBlitz3.ab3@31452>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003E0D4 <AmiBlitz3.ab3@31457>                            Dc.b $20,$3C,$00,$00,$00,$04                             ;MOVE.L  #$00000004,D0
0003E0D8 <AmiBlitz3.ab3@31462>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003E0DA <AmiBlitz3.ab3@31467>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003E0DE <AmiBlitz3.ab3@31471>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003E0E0 <AmiBlitz3.ab3@31475> movea0:                    Dc.b $24,$52                                             ;MOVEA.L (A2),A2
0003E0E2 <AmiBlitz3.ab3@31478> adda0a0:                   Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003E0E4 <AmiBlitz3.ab3@31479>                            Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003E0E8 <AmiBlitz3.ab3@31483>                            Dc.b $2C,$78,$00,$04                                     ;MOVEA.L $0004,A6
0003E0EC <AmiBlitz3.ab3@31487> movea5a0:                  Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003E0F0 <AmiBlitz3.ab3@31490> movea0a0:                  Dc.b $24,$6A :                            Dc.b $00,$00   ;MOVEA.L $0000(A2),A2
0003E0F2 <AmiBlitz3.ab3@31493> addqa0:                    Dc.b $52,$4A                                             ;ADDQ.W  #1,A2
0003E0F6 <AmiBlitz3.ab3@31496> leaa0a0:                   Dc.b $45,$EA :                            Dc.b $00,$00   ;LEA $0000(A2),A2
0003E0F8 <AmiBlitz3.ab3@31499> addrega2:                  Dc.b $D4,$C0                                             ;ADDA.W  D0,A2
0003E101 <AmiBlitz3.ab3@31503>                            Dc.b "ram:test",0
0003E102 <AmiBlitz3.ab3@31504> Even
0003E106 <AmiBlitz3.ab3@31508>                            Dc.l  0                          ;was  Ds.w 3 org source
0003E108 <AmiBlitz3.ab3@31510>                            Dc.w  0
0003E10C <AmiBlitz3.ab3@31513> _mathffpbase:              Ds.l 1                           ;maths org source
0003E10E <AmiBlitz3.ab3@31514> regnum:                    Ds.w 1                           ;regat org source       ;register being used!
0003E110 <AmiBlitz3.ab3@31515> typelen:                   Ds.w 1
0003E114 <AmiBlitz3.ab3@31516> prevtype:                  Ds.l 1
0003E118 <AmiBlitz3.ab3@31517> lastsourcepos:             Ds.l 1                           ;prevloc org source
0003E11A <AmiBlitz3.ab3@31518> lastchar:                  Ds.w 1
0003E11E <AmiBlitz3.ab3@31519> thistype:                  Ds.l 1
0003E122 <AmiBlitz3.ab3@31520> errstack:                  Ds.l 1
0003E126 <AmiBlitz3.ab3@31521> errcont:                   Ds.l 1
0003E128 <AmiBlitz3.ab3@31522> linemode:                  Ds.w 1                          ;0 if norm, 1 if newtype
0003E12A <AmiBlitz3.ab3@31523> linesleft:                 Ds.w 1
0003E12E <AmiBlitz3.ab3@31524> sourceline:                Ds.l 1                          ;thisitem org source
0003E132 <AmiBlitz3.ab3@31525> varbase:                   Ds.l 1                          ;firstvar org source
0003E136 <AmiBlitz3.ab3@31526> alllocals:                 Ds.l 1
0003E13A <AmiBlitz3.ab3@31527> firstlocal:                Ds.l 1
0003E13E <AmiBlitz3.ab3@31528> firstglob:                 Ds.l 1
0003E140 <AmiBlitz3.ab3@31529> globalvarpointer:          Ds.w 1                          ;varoff org source
0003E142 <AmiBlitz3.ab3@31530> locvaroff:                 Ds.w 1
0003E146 <AmiBlitz3.ab3@31531> firstitem_:                 Ds.l 1
0003E148 <AmiBlitz3.ab3@31532> numlines_org:              Ds.w 1                          ;numlines org source
0003E14A <AmiBlitz3.ab3@31533> returncode_org:            Ds.w 1                          ;returncode org source
0003E14E <AmiBlitz3.ab3@31534> firstiff:                  Ds.l 1                          ;firstif org source
0003E152 <AmiBlitz3.ab3@31535> ptr_seg_ped:               Ds.l 1                          ;segadd org source
0003E352 <AmiBlitz3.ab3@31536> str_pedfile:               Ds.b #MAX_STRINGSIZE            ;segname org source
0003E362 <AmiBlitz3.ab3@31537> str_mathffpname:           Dc.b "mathffp.library",0 : Even ;mathsname org source
0003E562 <AmiBlitz3.ab3@31538> str_libfilename:           Ds.b #MAX_STRINGSIZE
0003E762 <AmiBlitz3.ab3@31539> str_path_userlibs:         Ds.b #MAX_STRINGSIZE
0003E962 <AmiBlitz3.ab3@31540> str_defaultdbug:           Ds.b #MAX_STRINGSIZE            ;debugname org source
0003E966 <AmiBlitz3.ab3@31542> ptr_seg_debugger:          Ds.l 1                          ;dseg org source
0003EB66 <AmiBlitz3.ab3@31543> str_blitz3assign:          Ds.b #MAX_STRINGSIZE            ;dpath org source
0003ED66 <AmiBlitz3.ab3@31545> str_path_acidlibs:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003ED6A <AmiBlitz3.ab3@31546> size_acidlibs:             Ds.l 1                          ;acidlibs org source
0003EF6A <AmiBlitz3.ab3@31547> str_path_deflibs:          Ds.b #MAX_STRINGSIZE            ;defname org source
0003EF6E <AmiBlitz3.ab3@31548> size_deflibs:              Ds.l 1                          ;deflibs org source
0003F16E <AmiBlitz3.ab3@31549> str_tempfilename:          Ds.b #MAX_STRINGSIZE
0003F36E <AmiBlitz3.ab3@31551> str_temp_debugmodulename:  Ds.b #MAX_STRINGSIZE            ;dname org source
0003F372 <AmiBlitz3.ab3@31552> ptr_temp_debugmodule:      Ds.l 1                          ;dname2 org source
0003F572 <AmiBlitz3.ab3@31554> str_path_includes:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003F576 <AmiBlitz3.ab3@31560>   Dc.b $E3,$10,$00,$01                                     ;icondata  
0003F57A <AmiBlitz3.ab3@31561>   Dc.b $00,$00,$00,$00
0003F57E <AmiBlitz3.ab3@31562>   Dc.b $00,$19,$00,$11
0003F582 <AmiBlitz3.ab3@31563>   Dc.b $00,$2E,$00,$18
0003F586 <AmiBlitz3.ab3@31564>   Dc.b $00,$04,$00,$03
0003F58A <AmiBlitz3.ab3@31565>   Dc.b $00,$01,$00,$22
0003F58E <AmiBlitz3.ab3@31566>   Dc.b $73,$68,$00,$00
0003F592 <AmiBlitz3.ab3@31567>   Dc.b $00,$00,$00,$00
0003F596 <AmiBlitz3.ab3@31568>   Dc.b $00,$00,$00,$00
0003F59A <AmiBlitz3.ab3@31569>   Dc.b $00,$00,$00,$00
0003F59E <AmiBlitz3.ab3@31570>   Dc.b $00,$00,$00,$00
0003F5A2 <AmiBlitz3.ab3@31571>   Dc.b $00,$00,$00,$00
0003F5A6 <AmiBlitz3.ab3@31572>   Dc.b $03,$22,$00,$21
0003F5AA <AmiBlitz3.ab3@31573>   Dc.b $3C,$28,$00,$22
0003F5AE <AmiBlitz3.ab3@31574>   Dc.b $6E,$C0,$00,$00
0003F5B2 <AmiBlitz3.ab3@31575>   Dc.b $00,$12,$00,$00
0003F5B6 <AmiBlitz3.ab3@31576>   Dc.b $00,$0E,$00,$00
0003F5BA <AmiBlitz3.ab3@31577>   Dc.b $00,$00,$00,$00
0003F5BE <AmiBlitz3.ab3@31578>   Dc.b $00,$00,$00,$00
0003F5C2 <AmiBlitz3.ab3@31579>   Dc.b $00,$00,$00,$00
0003F5C6 <AmiBlitz3.ab3@31580>   Dc.b $00,$00,$00,$2E
0003F5CA <AmiBlitz3.ab3@31581>   Dc.b $00,$17,$00,$02
0003F5CE <AmiBlitz3.ab3@31582>   Dc.b $00,$01,$8E,$80
0003F5D2 <AmiBlitz3.ab3@31583>   Dc.b $03,$00,$00,$00
0003F5D6 <AmiBlitz3.ab3@31584>   Dc.b $00,$00,$FF,$FF
0003F5DA <AmiBlitz3.ab3@31585>   Dc.b $FF,$FF,$FF,$FC
0003F5DE <AmiBlitz3.ab3@31586>   Dc.b $80,$00,$00,$00
0003F5E2 <AmiBlitz3.ab3@31587>   Dc.b $00,$00,$80,$00
0003F5E6 <AmiBlitz3.ab3@31588>   Dc.b $00,$3F,$BB,$40
0003F5EA <AmiBlitz3.ab3@31589>   Dc.b $80,$1F,$C0,$00
0003F5EE <AmiBlitz3.ab3@31590>   Dc.b $00,$00,$80,$3F
0003F5F2 <AmiBlitz3.ab3@31591>   Dc.b $C0,$0F,$BB,$40
0003F5F6 <AmiBlitz3.ab3@31592>   Dc.b $80,$1F,$C0,$00
0003F5FA <AmiBlitz3.ab3@31593>   Dc.b $00,$00,$8E,$00
0003F5FE <AmiBlitz3.ab3@31594>   Dc.b $F8,$00,$00,$00
0003F602 <AmiBlitz3.ab3@31595>   Dc.b $8F,$01,$FF,$00
0003F606 <AmiBlitz3.ab3@31596>   Dc.b $3B,$40,$81,$E3
0003F60A <AmiBlitz3.ab3@31597>   Dc.b $F7,$C0,$00,$00
0003F60E <AmiBlitz3.ab3@31598>   Dc.b $80,$7F,$F8,$70
0003F612 <AmiBlitz3.ab3@31599>   Dc.b $3B,$40,$80,$0F
0003F616 <AmiBlitz3.ab3@31600>   Dc.b $7C,$E0,$00,$00
0003F61A <AmiBlitz3.ab3@31601>   Dc.b $80,$00,$FD,$80
0003F61E <AmiBlitz3.ab3@31602>   Dc.b $00,$00,$80,$01
0003F622 <AmiBlitz3.ab3@31603>   Dc.b $F6,$00,$FB,$40
0003F626 <AmiBlitz3.ab3@31604>   Dc.b $80,$03,$EF,$00
0003F62A <AmiBlitz3.ab3@31605>   Dc.b $00,$00,$80,$07
0003F62E <AmiBlitz3.ab3@31606>   Dc.b $87,$80,$3B,$40
0003F632 <AmiBlitz3.ab3@31607>   Dc.b $80,$0F,$01,$C0
0003F636 <AmiBlitz3.ab3@31608>   Dc.b $00,$00,$80,$03
0003F63A <AmiBlitz3.ab3@31609>   Dc.b $F0,$70,$1D,$40
0003F63E <AmiBlitz3.ab3@31610>   Dc.b $80,$00,$18,$1C
0003F642 <AmiBlitz3.ab3@31611>   Dc.b $00,$00,$80,$00
0003F646 <AmiBlitz3.ab3@31612>   Dc.b $10,$06,$03,$40
0003F64A <AmiBlitz3.ab3@31613>   Dc.b $80,$00,$20,$1F
0003F64E <AmiBlitz3.ab3@31614>   Dc.b $00,$00,$80,$00
0003F652 <AmiBlitz3.ab3@31615>   Dc.b $00,$00,$01,$40
0003F656 <AmiBlitz3.ab3@31616>   Dc.b $80,$00,$00,$00
0003F65A <AmiBlitz3.ab3@31617>   Dc.b $00,$00,$80,$00
0003F65E <AmiBlitz3.ab3@31618>   Dc.b $00,$00,$00,$00
0003F662 <AmiBlitz3.ab3@31619>   Dc.b $00,$00,$00,$00
0003F666 <AmiBlitz3.ab3@31620>   Dc.b $00,$00,$00,$00
0003F66A <AmiBlitz3.ab3@31621>   Dc.b $00,$00,$00,$04
0003F66E <AmiBlitz3.ab3@31622>   Dc.b $00,$3F,$FC,$01
0003F672 <AmiBlitz3.ab3@31623>   Dc.b $BB,$44,$00,$60
0003F676 <AmiBlitz3.ab3@31624>   Dc.b $FE,$00,$00,$04
0003F67A <AmiBlitz3.ab3@31625>   Dc.b $00,$CF,$FF,$01
0003F67E <AmiBlitz3.ab3@31626>   Dc.b $BB,$44,$1F,$EF
0003F682 <AmiBlitz3.ab3@31627>   Dc.b $FF,$00,$00,$04
0003F686 <AmiBlitz3.ab3@31628>   Dc.b $33,$FF,$FF,$E0
0003F68A <AmiBlitz3.ab3@31629>   Dc.b $00,$04,$37,$FE
0003F68E <AmiBlitz3.ab3@31630>   Dc.b $7F,$FC,$1B,$44
0003F692 <AmiBlitz3.ab3@31631>   Dc.b $0F,$9C,$FF,$FF
0003F696 <AmiBlitz3.ab3@31632>   Dc.b $00,$04,$03,$E3
0003F69A <AmiBlitz3.ab3@31633>   Dc.b $FF,$FF,$DB,$44
0003F69E <AmiBlitz3.ab3@31634>   Dc.b $00,$7F,$BF,$FF
0003F6A2 <AmiBlitz3.ab3@31635>   Dc.b $80,$04,$00,$0F
0003F6A6 <AmiBlitz3.ab3@31636>   Dc.b $3F,$FE,$00,$04
0003F6AA <AmiBlitz3.ab3@31637>   Dc.b $00,$06,$7F,$F8
0003F6AE <AmiBlitz3.ab3@31638>   Dc.b $1B,$44,$00,$0C
0003F6B2 <AmiBlitz3.ab3@31639>   Dc.b $F7,$FC,$00,$04
0003F6B6 <AmiBlitz3.ab3@31640>   Dc.b $00,$19,$F9,$FE
0003F6BA <AmiBlitz3.ab3@31641>   Dc.b $1B,$44,$00,$33
0003F6BE <AmiBlitz3.ab3@31642>   Dc.b $FE,$7F,$00,$04
0003F6C2 <AmiBlitz3.ab3@31643>   Dc.b $00,$0F,$FF,$BF
0003F6C6 <AmiBlitz3.ab3@31644>   Dc.b $CD,$44,$00,$03
0003F6CA <AmiBlitz3.ab3@31645>   Dc.b $EF,$EF,$F0,$04
0003F6CE <AmiBlitz3.ab3@31646>   Dc.b $00,$00,$7F,$DF
0003F6D2 <AmiBlitz3.ab3@31647>   Dc.b $FB,$44,$00,$00
0003F6D6 <AmiBlitz3.ab3@31648>   Dc.b $FF,$A7,$FC,$04
0003F6DA <AmiBlitz3.ab3@31649>   Dc.b $00,$00,$7E,$3F
0003F6DE <AmiBlitz3.ab3@31650>   Dc.b $FD,$44,$00,$00
0003F6E2 <AmiBlitz3.ab3@31651>   Dc.b $00,$00,$00,$04
0003F6E6 <AmiBlitz3.ab3@31652>   Dc.b $7F,$FF,$FF,$FF
0003F6EA <AmiBlitz3.ab3@31653>   Dc.b $FF,$FC,$00,$00
0003F6EE <AmiBlitz3.ab3@31654>   Dc.b $00,$01,$00,$00
0003F6F1 <AmiBlitz3.ab3@31655>   Dc.b $00,$00,$04
0003F6F7 <AmiBlitz3.ab3@31658> str_infoextention2:  Dc.b ".info",0                           ;infoname org source
0003F74F <AmiBlitz3.ab3@31659> errorlimit_text:     Dc.b "There are too much errors, compiling is stop now. Please fix errors first and try again",0
0003F750 <AmiBlitz3.ab3@31660> Even
0003F754 <AmiBlitz3.ab3@31662> sysdebug:            Dc.l $3F0
0003F77E <AmiBlitz3.ab3@31667>  !basic
0003F792 <AmiBlitz3.ab3@31668>  If OnePassCompiling = True
0003F7B0 <AmiBlitz3.ab3@31669>    maxmem.l = (AvailMem_ (#MEMF_PUBLIC) LSR 2)  ; 1/4 of the available free mem
0003F7C0 <AmiBlitz3.ab3@31670>    objectlength.l = Peek.l(?objlen)
0003F7DE <AmiBlitz3.ab3@31671>    If Peek.b(?use_debugger) = 0
0003F804 <AmiBlitz3.ab3@31672>      If (objectlength < 3670056) AND (maxmem > 3670056)
0003F80A <AmiBlitz3.ab3@31673>        MOVE.l #3145727,d2     ; objectbuffersize
0003F810 <AmiBlitz3.ab3@31674>        MOVE.l  #262143,d3     ; libsbuffersize
0003F816 <AmiBlitz3.ab3@31675>        MOVE.l  #131071,d4     ; systembuffersize
0003F81C <AmiBlitz3.ab3@31676>        MOVE.l  #131071,d5     ; databuffersize
0003F822 <AmiBlitz3.ab3@31677>        JSR makeallox  ; added 40 buffer more
0003F84C <AmiBlitz3.ab3@31678>        !basic
0003F852 <AmiBlitz3.ab3@31679>      Else
0003F878 <AmiBlitz3.ab3@31680>        If (objectlength < 1572904) AND (maxmem > 1572904)
0003F896 <AmiBlitz3.ab3@31681>          !asm
0003F89C <AmiBlitz3.ab3@31682>          MOVE.l #1310719,d2     ; objectbuffersize
0003F8A2 <AmiBlitz3.ab3@31683>          MOVE.l  #131071,d3     ; libsbuffersize
0003F8A8 <AmiBlitz3.ab3@31684>          MOVE.l   #65535,d4     ; systembuffersize
0003F8AE <AmiBlitz3.ab3@31685>          MOVE.l   #65535,d5     ; databuffersize
0003F8B4 <AmiBlitz3.ab3@31686>          JSR makeallox ; added 40 buffer more
0003F8DE <AmiBlitz3.ab3@31687>          !basic
0003F8E4 <AmiBlitz3.ab3@31690>    Else
0003F8F4 <AmiBlitz3.ab3@31691>      maxmem LSL 1 ; for debug test for 1/2 of the available mem
0003F91A <AmiBlitz3.ab3@31692>      If (objectlength < 12058664) AND (maxmem > 12058664)
0003F920 <AmiBlitz3.ab3@31693>        MOVE.l #5242879,d2     ; objectbuffersize
0003F926 <AmiBlitz3.ab3@31694>        MOVE.l  #262143,d3     ; libsbuffersize
0003F92C <AmiBlitz3.ab3@31695>        MOVE.l #6291455,d4     ; systembuffersize
0003F932 <AmiBlitz3.ab3@31696>        MOVE.l  #262143,d5     ; databuffersize
0003F938 <AmiBlitz3.ab3@31697>        JSR makeallox ; added 40 buffer more
0003F962 <AmiBlitz3.ab3@31698>        !basic
0003F968 <AmiBlitz3.ab3@31699>      Else
0003F98E <AmiBlitz3.ab3@31700>        If (objectlength < 6094888) AND (maxmem > 6094888)
0003F9AC <AmiBlitz3.ab3@31701>          !asm
0003F9B2 <AmiBlitz3.ab3@31702>          MOVE.l #2621439,d2     ; objectbuffersize
0003F9B8 <AmiBlitz3.ab3@31703>          MOVE.l  #262143,d3     ; libsbuffersize
0003F9BE <AmiBlitz3.ab3@31704>          MOVE.l #3145727,d4     ; systembuffersize
0003F9C4 <AmiBlitz3.ab3@31705>          MOVE.l   #65535,d5     ; databuffersize
0003F9CA <AmiBlitz3.ab3@31706>          JSR makeallox ; added 40 buffer more
0003F9F4 <AmiBlitz3.ab3@31707>          !basic
0003FA1C <AmiBlitz3.ab3@31711>    If objectlength = Peek.l(?objlen)    ; test if big allox failed
0003FA3A <AmiBlitz3.ab3@31712>       !asm                              ; yes it fails
0003FA42 <AmiBlitz3.ab3@31713>         BSET #$7,make_smallestcode      ; active make small code again to prevent endless compile runs
0003FA6C <AmiBlitz3.ab3@31714>       !basic
0003FA8A <AmiBlitz3.ab3@31717>  !asm
0003FA8C <AmiBlitz3.ab3@31718> RTS
0003FAB6 <AmiBlitz3.ab3@31721>  !basic
0003FABC <AmiBlitz3.ab3@31722>    releaseexe = True                                  ; set release modus to on
0003FB00 <AmiBlitz3.ab3@31723>    !ComData_GetW{comWord_CreateDebugFile,D0}          ; get the status for creating .dbg file
0003FB04 <AmiBlitz3.ab3@31724>    releasedbg_save = PutD0                            ; save the status
0003FB3A <AmiBlitz3.ab3@31725>    !ComData_SetW{comWord_CreateDebugFile,#0}          ; set it of so it will not create with every needed compile run
0003FB4C <AmiBlitz3.ab3@31726>    releasemakesmall_save = Peek.b(?make_smallestcode) ; save the status of make smallest code
0003FB5E <AmiBlitz3.ab3@31727> 
0003FBA2 <AmiBlitz3.ab3@31728>    !ComData_GetB{comByte_FuncOptimize,D0}             ; get the status of function optimizer
0003FBA6 <AmiBlitz3.ab3@31729>    releasefuncoptimize_save = PutD0                   ; save it
0003FBDC <AmiBlitz3.ab3@31730>    !ComData_SetB{comByte_FuncOptimize,#1}             ; set it on
0003FBEE <AmiBlitz3.ab3@31731>    releasedebugger_save = Peek.b(?use_debugger)       ; save the status of the use of the debugger
0003FBFE <AmiBlitz3.ab3@31732>    Poke.b ?use_debugger,0                             ; set if off because we create a release verion and need no debugging code
0003FC1C <AmiBlitz3.ab3@31733>  !asm
0003FC22 <AmiBlitz3.ab3@31734>  JSR menu_newcreate                                   ; jump to start the compiling
0003FC26 <AmiBlitz3.ab3@31735>  !regs2stack                                          ; save the registers
0003FC50 <AmiBlitz3.ab3@31736>  !basic
0003FC56 <AmiBlitz3.ab3@31737>    releaseexe = False                                 ; set creat release exe off
0003FC5C <AmiBlitz3.ab3@31738>    GetD0 releasedbg_save                              ; set the old status of create .dbg file back
0003FC90 <AmiBlitz3.ab3@31739>    !ComData_SetW{comWord_CreateDebugFile,D0}          ;                      "
0003FCA2 <AmiBlitz3.ab3@31740>    Poke.b ?use_debugger,releasedebugger_save          ; set the old status of use Debugger back
0003FCAA <AmiBlitz3.ab3@31741>    GetD0 releasefuncoptimize_save                     ; set the old status of function optimizer back
0003FCDE <AmiBlitz3.ab3@31742>    !ComData_SetB{comByte_FuncOptimize,D0}             ;                       "
0003FCF0 <AmiBlitz3.ab3@31743>    Poke.b ?make_smallestcode,releasemakesmall_save    ; set the old status of make smallest code back
0003FD0E <AmiBlitz3.ab3@31744>  !asm
0003FD12 <AmiBlitz3.ab3@31745>  !stack2regs                                          ; set registers back
0003FD14 <AmiBlitz3.ab3@31746> RTS
0003FD1E <AmiBlitz3.ab3@31750>   MOVE.l #0,beforeparameterfetch ; reset so no code will detoken , fix the hit
0003FD26 <AmiBlitz3.ab3@31751>   MOVE.w #0,ininclude            ; reset we have no include code , fix the endless loop
0003FD30 <AmiBlitz3.ab3@31752>   MOVE.l #-1,compilelinecounter  ; reset the line we have compiled
0003FD3A <AmiBlitz3.ab3@31753>   MOVE.l #0,globallinecount      ; reset the linecounter
0003FD3C <AmiBlitz3.ab3@31754> RTS
0003FD40 <AmiBlitz3.ab3@31759> exelock              Ds.l 1
0003FD44 <AmiBlitz3.ab3@31763> includesourceline    Dc.l 0
0003FD48 <AmiBlitz3.ab3@31764> linenum              Ds.l 1
0003FD4C <AmiBlitz3.ab3@31765> globallinecount      Ds.l 1
0003FD68 <AmiBlitz3.ab3@31766> myversion            Dc.b "\\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
0003FD6C <AmiBlitz3.ab3@31767> calc_option          Dc.l 1
0003FD70 <AmiBlitz3.ab3@31768> versioninformation   Dc.l $00
0003FD74 <AmiBlitz3.ab3@31769> number_of_builds     Dc.l $00
0003FD76 <AmiBlitz3.ab3@31770> leftsideflagmask     Ds.w 1    ;this contain the flag if pointer (1) or not
0003FD78 <AmiBlitz3.ab3@31771> rightsideflagmask    Ds.w 1
0003FD7C <AmiBlitz3.ab3@31773> BSS
0003FD7E <AmiBlitz3.ab3@31774> debugnest            Ds.w 1
0003FD82 <AmiBlitz3.ab3@31775> instringf            Ds.l 1
0003FD86 <AmiBlitz3.ab3@31776> funcscanon           Ds.l 1
0003FD9A <AmiBlitz3.ab3@31777> storedebugmode       Ds.b 20
0003FD9E <AmiBlitz3.ab3@31778> firsttimepref        Ds.l 1
0003FD9F <AmiBlitz3.ab3@31779> funcparloop          Ds.b 1                   ; is 1 when function calling parameter are compile
0003FDA0 <AmiBlitz3.ab3@31780> blitzparloop         Ds.b 1                   ; is 1 when blitzlib calling parameters are compile
0003FDA2 <AmiBlitz3.ab3@31781> nostringopt          Ds.w 1
0003FE22 <AmiBlitz3.ab3@31782> path2:               Ds.l 32
0003FE26 <AmiBlitz3.ab3@31783> typebase             Dc.l 0
0003FE28 <AmiBlitz3.ab3@31784> doublepeek           Dc.w 0
0003FE2C <AmiBlitz3.ab3@31785> lastoffset           Dc.l 0
0003FE2E <AmiBlitz3.ab3@31786> firsttime            Dc.w 0
0003FE32 <AmiBlitz3.ab3@31787> lastdestpointer      Dc.l 0
0003FE36 <AmiBlitz3.ab3@31788> prevwritedat         Dc.l 0
0003FE3A <AmiBlitz3.ab3@31789> lastsourceline       Dc.l 0
0003FE3E <AmiBlitz3.ab3@31790> lastwritedat         Dc.l 0
0003FE40 <AmiBlitz3.ab3@31791> makeexec             Dc.w 0
0003FE42 <AmiBlitz3.ab3@31792> makeexec_remember    Dc.w 0
0003FE46 <AmiBlitz3.ab3@31793> sharebase            Ds.l 1
0003FE4A <AmiBlitz3.ab3@31794> tempa7               Ds.l 1
0003FE4C <AmiBlitz3.ab3@31795> incnif               Ds.w 1
0003FE50 <AmiBlitz3.ab3@31796> tempstore            Ds.l 1
0003FE54 <AmiBlitz3.ab3@31797> result               Ds.l 1
0003FE56 <AmiBlitz3.ab3@31798> automode             Ds.w 1
0003FE58 <AmiBlitz3.ab3@31799> stackcorrect         Ds.w 1
0003FE5A <AmiBlitz3.ab3@31800> formode              Ds.w 1
0003FE5E <AmiBlitz3.ab3@31801> limitregs            Ds.l 1
0003FE60 <AmiBlitz3.ab3@31802> onestep              Ds.w 1
0003FE64 <AmiBlitz3.ab3@31803> reqmode              Ds.l 1
0003FF04 <AmiBlitz3.ab3@31804> inctab               Ds.l 40
0003FF06 <AmiBlitz3.ab3@31805> funcoptimize_deprecated  Ds.w 1 ; deprecated, see comByte_FuncOptimize ; Wanderer
0003FF0A <AmiBlitz3.ab3@31806> includeline          Ds.l 1
0003FF0E <AmiBlitz3.ab3@31807> morememadd           Ds.l 1
0003FF10 <AmiBlitz3.ab3@31808> objectcount          Ds.w 1
0003FF14 <AmiBlitz3.ab3@31809> savefuncspace        Ds.l 1
0003FF18 <AmiBlitz3.ab3@31810> lasttrap1            Ds.l 1
0003FF1C <AmiBlitz3.ab3@31811> currentfunccall      Ds.l 1
0003FF1D <AmiBlitz3.ab3@31812> skipfunc             Ds.b 1
0003FF1E <AmiBlitz3.ab3@31813> resdisable           Ds.b 1
0003FF1F <AmiBlitz3.ab3@31814> skiptoggle           Ds.b 1
0003FF20 <AmiBlitz3.ab3@31815> developobject        Ds.b 1
0003FF22 <AmiBlitz3.ab3@31816> iniffcommand         Ds.w 1
0003FF24 <AmiBlitz3.ab3@31817> startoffsetmore      Ds.w 1
0003FF26 <AmiBlitz3.ab3@31818> olddebugmode         Ds.w 1
0003FF2A <AmiBlitz3.ab3@31819> fpucodeglobal        Ds.l 1
0003FF2E <AmiBlitz3.ab3@31820> fpucodelocal         Ds.l 1
0003FF32 <AmiBlitz3.ab3@31821> maxregs              Ds.l 1
0003FF36 <AmiBlitz3.ab3@31822> fpucode              Ds.l 1
0003FF38 <AmiBlitz3.ab3@31823> firstmline           Ds.w 1
0003FF78 <AmiBlitz3.ab3@31824> regtable             Ds.l 16
0003FF7A <AmiBlitz3.ab3@31825> exdebug              Ds.w 1
0003FF7C <AmiBlitz3.ab3@31826> a2offset2            Ds.w 1
0003FF80 <AmiBlitz3.ab3@31827> parnumtemp           Ds.l 1
0003FF81 <AmiBlitz3.ab3@31828> doimmediate          Ds.b 1
0003FF82 <AmiBlitz3.ab3@31829> notypecheck          Ds.b 1
0003FF84 <AmiBlitz3.ab3@31830> vartype              Ds.w 1
0003FF85 <AmiBlitz3.ab3@31831> peekaddrsize         Ds.b 1
0003FF86 <AmiBlitz3.ab3@31832> declare2             Ds.b 1
0003FF88 <AmiBlitz3.ab3@31833> parameternum         Ds.w 1
0003FF8C <AmiBlitz3.ab3@31834> lasttoken            Ds.l 1
0003FF8E <AmiBlitz3.ab3@31835> newvariable          Ds.w 1
0003FF8F <AmiBlitz3.ab3@31836> declare              Ds.b 1
0003FF90 <AmiBlitz3.ab3@31837> typecheck            Ds.b 1
0003FF91 <AmiBlitz3.ab3@31838> nowdeclare           Ds.b 1
0003FF92 <AmiBlitz3.ab3@31839> dimkeep              Ds.b 1
0003FF93 <AmiBlitz3.ab3@31840> a4a5store            Ds.b 1
0003FF94 <AmiBlitz3.ab3@31841> ___freetouse         Ds.b 1
0003FF98 <AmiBlitz3.ab3@31842> firstiffstore        Ds.l 1
0003FF9C <AmiBlitz3.ab3@31843> destpointer2         Ds.l 1
0003FFA0 <AmiBlitz3.ab3@31844> stackaddr            Ds.l 1
000400A4 <AmiBlitz3.ab3@31845> allowtab             Ds.b 260
000401A4 <AmiBlitz3.ab3@31846> templine             Ds.b 256
000401A6 <AmiBlitz3.ab3@31847> thenmode             Ds.w 1
000401A8 <AmiBlitz3.ab3@31848> temp                 Ds.w 1
000401AA <AmiBlitz3.ab3@31849> tempregnum           Ds.w 1
000401AE <AmiBlitz3.ab3@31851> numlines2            Ds.l 1
000401B2 <AmiBlitz3.ab3@31852> numlines             Ds.l 1
000401B4 <AmiBlitz3.ab3@31853> exmac                Ds.w 1
000401B6 <AmiBlitz3.ab3@31854> returncode           Ds.w 1
000401BA <AmiBlitz3.ab3@31855> fp0iff               Ds.l 1
000401BE <AmiBlitz3.ab3@31856> fp0addr              Ds.l 1
000401C0 <AmiBlitz3.ab3@31857> fp0mode              Ds.w 1
000401C2 <AmiBlitz3.ab3@31858> fp0var               Ds.w 1
000401C4 <AmiBlitz3.ab3@31859> fastfunc             Ds.w 1
000401C6 <AmiBlitz3.ab3@31860> retmode              Ds.w 1
000401C8 <AmiBlitz3.ab3@31861> parnum               Ds.w 1
000401CA <AmiBlitz3.ab3@31862> regmask              Ds.w 1
000401CC <AmiBlitz3.ab3@31863> regnumfunc           Ds.w 1
000401CE <AmiBlitz3.ab3@31864> libmode              Ds.w 1
000401D2 <AmiBlitz3.ab3@31865> oldline              Ds.l 1
000401D6 <AmiBlitz3.ab3@31866> sourceline3          Ds.l 1
0004029E <AmiBlitz3.ab3@31867> debugstore           Ds.b 200
000402A2 <AmiBlitz3.ab3@31868> deststore            Ds.l 1
000402A6 <AmiBlitz3.ab3@31870> loada                Ds.l 1
000402AA <AmiBlitz3.ab3@31872> currtype             Ds.l 1
000402AE <AmiBlitz3.ab3@31873> arrayoffset          Ds.l 1
000402B2 <AmiBlitz3.ab3@31874> lastlabel            Ds.l 1
000402B6 <AmiBlitz3.ab3@31875> curtemplabel         Ds.l 1
000402BA <AmiBlitz3.ab3@31876> sourceline2          Ds.l 1
000403BA <AmiBlitz3.ab3@31877> chartab              Ds.b 256
0004053A <AmiBlitz3.ab3@31878> 
000C054A <AmiBlitz3.ab3@31879> instrtab             Ds.l 65538*2
000C854A <AmiBlitz3.ab3@31881> labelhash            Ds.l 8192                             ;-bssstore clear every compile pass
000E854E <AmiBlitz3.ab3@31882> replacedat           Ds.w 65538
000F054E <AmiBlitz3.ab3@31883> variablehash         Ds.l 8192
000F0552 <AmiBlitz3.ab3@31884> newinitaddr          Ds.l 1
000F0556 <AmiBlitz3.ab3@31885> realbssend           Ds.l 1
000F0558 <AmiBlitz3.ab3@31886> saved0               Ds.w 1
000F05D8 <AmiBlitz3.ab3@31887> lastpath             Ds.b 128
000F0658 <AmiBlitz3.ab3@31888> lastpath2            Ds.b 128
000F0720 <AmiBlitz3.ab3@31889> fpustackbase         Ds.w 100
000F0724 <AmiBlitz3.ab3@31890> 
000F0726 <AmiBlitz3.ab3@31891> isconstantvalue      Dc.w 0  ; contain a type (1-7) if a constant expression is used as a Parameter or on right side of =
000F072A <AmiBlitz3.ab3@31892> lastfunction         Dc.l 0  ; the address of the function in the Parameter or rght side of =
000F072E <AmiBlitz3.ab3@31893> leftsidetype         Dc.l 0  ;this contain the address of the type from the left side of the variable assign
000F0732 <AmiBlitz3.ab3@31894> rightsidetype        Dc.l 0  ; same as above but right side
000F0736 <AmiBlitz3.ab3@31897> trap15temp           Ds.l 1
000F073A <AmiBlitz3.ab3@31898> trap15temp2          Ds.l 1
000F073E <AmiBlitz3.ab3@31899> templibend           Ds.l 1
000F0742 <AmiBlitz3.ab3@31900> tempdata1start       Ds.l 1
000F0746 <AmiBlitz3.ab3@31901> stacktrack           Ds.l 1
000F074A <AmiBlitz3.ab3@31902> pad                  Ds.l 1
000F084A <AmiBlitz3.ab3@31903> includetemp          Ds.b 256
000F124A <AmiBlitz3.ab3@31904> includetemp2         Ds.b 256*10
000F124C <AmiBlitz3.ab3@31905> funccall             Ds.w 1
000F1250 <AmiBlitz3.ab3@31908> ptr_resfile          Ds.l 1
000F1252 <AmiBlitz3.ab3@31909> CalculatorButtonBinFlag:    Ds.w 1
000F1254 <AmiBlitz3.ab3@31910> CalculatorButtonDecFlag:    Ds.w 1
000F1258 <AmiBlitz3.ab3@31911> ped_startup_addr:    Ds.l 1
000F1259 <AmiBlitz3.ab3@31912> start_without_libs:  Ds.b 1
000F125A <AmiBlitz3.ab3@31913> skip_bytes:          Ds.b 1
000F125E <AmiBlitz3.ab3@31914> functionreturntype   Ds.l 1  ; a temp store of it.do not read this value
000F1262 <AmiBlitz3.ab3@31915> beforeparameterfetch Ds.l 1
000F1266 <AmiBlitz3.ab3@31916> typetocast           Ds.l 1
000F126A <AmiBlitz3.ab3@31917> errorcounter         Ds.l 1
000F126B <AmiBlitz3.ab3@31918> iserror              Ds.b 1
000F126C <AmiBlitz3.ab3@31919> MorphOS:             Ds.b 1 ; added to be able to select the cacheclear function 0=AOS, 1=MorphOS  tomsmart1
000F1270 <AmiBlitz3.ab3@31922> CLIMode:             Dc.l 0
000F1274 <AmiBlitz3.ab3@31923> XTRAEndPadBytes:     Dc.l 0                             ; 4 fill/pad/termination bytes for the xtra write function  tomsmart1
000F1278 <AmiBlitz3.ab3@31924> maxerrorcount:       Ds.l 1                             ; added to make it changeable in CLI Mode tomsmart1
