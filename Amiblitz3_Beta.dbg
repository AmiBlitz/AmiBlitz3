00000008 <AmiBlitz3.ab2@0> 
00000014 <AmiBlitz3.ab2@43> optimize 5                               ; don't use FPU (opt. 4)
00000076 <AmiBlitz3.ab2@64> !initasm                                 ; some initial mumbo jumbo
000000A0 <AmiBlitz3.ab2@65> !basic
000000AC <AmiBlitz3.ab2@70> cli_verbose = -1
000000B2 <AmiBlitz3.ab2@71> CLIMode     = False
000000C8 <AmiBlitz3.ab2@72> MaxLen cli_tempstr.s = 1024
000000E4 <AmiBlitz3.ab2@73> GetCurrentDirName_ &cli_tempstr,1024  ; get the current dir to restore it on exit
0000010E <AmiBlitz3.ab2@74> cli_path.s = Peek.s(&cli_tempstr)
0000010E <library_offsets.ab3@1> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <AmiBlitz3.ab2@78> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <dos.include.ab3@1> XINCLUDE "dos.include.bb2"
0000010E <error.include.bb2@1> XINCLUDE "dos.include.bb2"
00000146 <error.include.bb2@62> XINCLUDE "dos.include.bb2"
0000016E <error.include.bb2@63> XINCLUDE "dos.include.bb2"
00000196 <error.include.bb2@64> XINCLUDE "dos.include.bb2"
000001BE <error.include.bb2@65> XINCLUDE "dos.include.bb2"
000001C4 <error.include.bb2@66> XINCLUDE "dos.include.bb2"
000001F8 <error.include.bb2@67> XINCLUDE "dos.include.bb2"
0000022C <error.include.bb2@68> XINCLUDE "dos.include.bb2"
00000260 <error.include.bb2@69> XINCLUDE "dos.include.bb2"
0000027C <error.include.bb2@73> XINCLUDE "dos.include.bb2"
00000296 <error.include.bb2@99> XINCLUDE "dos.include.bb2"
000002A2 <error.include.bb2@101> XINCLUDE "dos.include.bb2"
000002A6 <error.include.bb2@102> XINCLUDE "dos.include.bb2"
000002B4 <error.include.bb2@104> XINCLUDE "dos.include.bb2"
000002F6 <error.include.bb2@124> XINCLUDE "dos.include.bb2"
0000037A <error.include.bb2@126> XINCLUDE "dos.include.bb2"
000003E6 <error.include.bb2@127> XINCLUDE "dos.include.bb2"
00000400 <error.include.bb2@129> XINCLUDE "dos.include.bb2"
00000438 <error.include.bb2@130> XINCLUDE "dos.include.bb2"
00000498 <error.include.bb2@131> XINCLUDE "dos.include.bb2"
000004A6 <error.include.bb2@133> XINCLUDE "dos.include.bb2"
000004B4 <error.include.bb2@134> XINCLUDE "dos.include.bb2"
000004C2 <error.include.bb2@135> XINCLUDE "dos.include.bb2"
000004D0 <error.include.bb2@136> XINCLUDE "dos.include.bb2"
000004F8 <error.include.bb2@137> XINCLUDE "dos.include.bb2"
00000506 <error.include.bb2@138> XINCLUDE "dos.include.bb2"
0000050E <error.include.bb2@139> XINCLUDE "dos.include.bb2"
00000540 <error.include.bb2@141> XINCLUDE "dos.include.bb2"
0000055A <error.include.bb2@146> XINCLUDE "dos.include.bb2"
00000592 <error.include.bb2@147> XINCLUDE "dos.include.bb2"
00000598 <error.include.bb2@148> XINCLUDE "dos.include.bb2"
000005DC <error.include.bb2@149> XINCLUDE "dos.include.bb2"
00000624 <error.include.bb2@150> XINCLUDE "dos.include.bb2"
0000062E <error.include.bb2@154> XINCLUDE "dos.include.bb2"
00000648 <error.include.bb2@156> XINCLUDE "dos.include.bb2"
00000692 <error.include.bb2@195> XINCLUDE "dos.include.bb2"
0000069A <error.include.bb2@197> XINCLUDE "dos.include.bb2"
00000706 <error.include.bb2@198> XINCLUDE "dos.include.bb2"
00000728 <error.include.bb2@199> XINCLUDE "dos.include.bb2"
00000788 <error.include.bb2@200> XINCLUDE "dos.include.bb2"
00000796 <error.include.bb2@202> XINCLUDE "dos.include.bb2"
000007A4 <error.include.bb2@203> XINCLUDE "dos.include.bb2"
000007B2 <error.include.bb2@204> XINCLUDE "dos.include.bb2"
000007C0 <error.include.bb2@205> XINCLUDE "dos.include.bb2"
00000820 <error.include.bb2@206> XINCLUDE "dos.include.bb2"
0000082E <error.include.bb2@207> XINCLUDE "dos.include.bb2"
00000864 <error.include.bb2@210> XINCLUDE "dos.include.bb2"
0000086E <error.include.bb2@214> XINCLUDE "dos.include.bb2"
0000088A <error.include.bb2@215> XINCLUDE "dos.include.bb2"
0000088A <multilist.include.bb2@1> XINCLUDE "dos.include.bb2"
0000088A <strptr.include.bb2@1> XINCLUDE "dos.include.bb2"
0000088A <useful.include.bb2@1> XINCLUDE "dos.include.bb2"
000008B8 <useful.include.bb2@264> XINCLUDE "dos.include.bb2"
000008C2 <useful.include.bb2@265> XINCLUDE "dos.include.bb2"
000008D6 <useful.include.bb2@266> XINCLUDE "dos.include.bb2"
000008DE <useful.include.bb2@267> XINCLUDE "dos.include.bb2"
00000906 <useful.include.bb2@268> XINCLUDE "dos.include.bb2"
0000092C <useful.include.bb2@269> XINCLUDE "dos.include.bb2"
0000094C <useful.include.bb2@272> XINCLUDE "dos.include.bb2"
0000095A <useful.include.bb2@273> XINCLUDE "dos.include.bb2"
00000980 <useful.include.bb2@274> XINCLUDE "dos.include.bb2"
00000988 <useful.include.bb2@276> XINCLUDE "dos.include.bb2"
00000990 <useful.include.bb2@277> XINCLUDE "dos.include.bb2"
00000996 <useful.include.bb2@278> XINCLUDE "dos.include.bb2"
000009B2 <useful.include.bb2@279> XINCLUDE "dos.include.bb2"
000009D6 <useful.include.bb2@280> XINCLUDE "dos.include.bb2"
000009EA <useful.include.bb2@281> XINCLUDE "dos.include.bb2"
000009F0 <useful.include.bb2@282> XINCLUDE "dos.include.bb2"
00000A3A <useful.include.bb2@283> XINCLUDE "dos.include.bb2"
00000A3C <useful.include.bb2@284> XINCLUDE "dos.include.bb2"
00000A4A <useful.include.bb2@286> XINCLUDE "dos.include.bb2"
00000A6A <useful.include.bb2@288> XINCLUDE "dos.include.bb2"
00000AC8 <useful.include.bb2@289> XINCLUDE "dos.include.bb2"
00000ACE <useful.include.bb2@290> XINCLUDE "dos.include.bb2"
00000ADC <useful.include.bb2@291> XINCLUDE "dos.include.bb2"
00000AF0 <useful.include.bb2@292> XINCLUDE "dos.include.bb2"
00000B02 <useful.include.bb2@293> XINCLUDE "dos.include.bb2"
00000B10 <useful.include.bb2@294> XINCLUDE "dos.include.bb2"
00000B16 <useful.include.bb2@295> XINCLUDE "dos.include.bb2"
00000B22 <useful.include.bb2@296> XINCLUDE "dos.include.bb2"
00000B36 <useful.include.bb2@299> XINCLUDE "dos.include.bb2"
00000B4A <useful.include.bb2@300> XINCLUDE "dos.include.bb2"
00000B5C <useful.include.bb2@301> XINCLUDE "dos.include.bb2"
00000B6A <useful.include.bb2@302> XINCLUDE "dos.include.bb2"
00000B88 <useful.include.bb2@303> XINCLUDE "dos.include.bb2"
00000B8E <useful.include.bb2@304> XINCLUDE "dos.include.bb2"
00000BA2 <useful.include.bb2@308> XINCLUDE "dos.include.bb2"
00000BAC <useful.include.bb2@309> XINCLUDE "dos.include.bb2"
00000BB4 <useful.include.bb2@310> XINCLUDE "dos.include.bb2"
00000BD2 <useful.include.bb2@311> XINCLUDE "dos.include.bb2"
00000BD8 <useful.include.bb2@312> XINCLUDE "dos.include.bb2"
00000C04 <useful.include.bb2@313> XINCLUDE "dos.include.bb2"
00000C0A <useful.include.bb2@315> XINCLUDE "dos.include.bb2"
00000C1C <useful.include.bb2@316> XINCLUDE "dos.include.bb2"
00000C34 <useful.include.bb2@317> XINCLUDE "dos.include.bb2"
00000C4C <useful.include.bb2@318> XINCLUDE "dos.include.bb2"
00000C6A <useful.include.bb2@319> XINCLUDE "dos.include.bb2"
00000C6C <useful.include.bb2@321> XINCLUDE "dos.include.bb2"
00000C7A <useful.include.bb2@322> XINCLUDE "dos.include.bb2"
00000CA0 <useful.include.bb2@323> XINCLUDE "dos.include.bb2"
00000D34 <useful.include.bb2@324> XINCLUDE "dos.include.bb2"
00000D42 <useful.include.bb2@326> XINCLUDE "dos.include.bb2"
00000D48 <useful.include.bb2@327> XINCLUDE "dos.include.bb2"
00000D72 <useful.include.bb2@328> XINCLUDE "dos.include.bb2"
00000D90 <useful.include.bb2@329> XINCLUDE "dos.include.bb2"
00000D90 <strptr.include.bb2@37> XINCLUDE "dos.include.bb2"
00000DAA <strptr.include.bb2@96> XINCLUDE "dos.include.bb2"
00000DB4 <strptr.include.bb2@97> XINCLUDE "dos.include.bb2"
00000DFC <strptr.include.bb2@98> XINCLUDE "dos.include.bb2"
00000E00 <strptr.include.bb2@100> XINCLUDE "dos.include.bb2"
00000E2E <strptr.include.bb2@197> XINCLUDE "dos.include.bb2"
00000E38 <strptr.include.bb2@198> XINCLUDE "dos.include.bb2"
00000E80 <strptr.include.bb2@199> XINCLUDE "dos.include.bb2"
00000E94 <strptr.include.bb2@200> XINCLUDE "dos.include.bb2"
00000EA6 <strptr.include.bb2@201> XINCLUDE "dos.include.bb2"
00000ECA <strptr.include.bb2@205> XINCLUDE "dos.include.bb2"
00000ED4 <strptr.include.bb2@208> XINCLUDE "dos.include.bb2"
00000EE2 <strptr.include.bb2@209> XINCLUDE "dos.include.bb2"
00000EEC <strptr.include.bb2@210> XINCLUDE "dos.include.bb2"
00000F14 <strptr.include.bb2@211> XINCLUDE "dos.include.bb2"
00000F2E <strptr.include.bb2@212> XINCLUDE "dos.include.bb2"
00000F46 <strptr.include.bb2@216> XINCLUDE "dos.include.bb2"
00000F60 <strptr.include.bb2@282> XINCLUDE "dos.include.bb2"
00000F6A <strptr.include.bb2@283> XINCLUDE "dos.include.bb2"
00000F78 <strptr.include.bb2@284> XINCLUDE "dos.include.bb2"
00000FAA <strptr.include.bb2@285> XINCLUDE "dos.include.bb2"
00000FC8 <strptr.include.bb2@287> XINCLUDE "dos.include.bb2"
00000FD2 <strptr.include.bb2@288> XINCLUDE "dos.include.bb2"
00000FD2 <multilist.include.bb2@44> XINCLUDE "dos.include.bb2"
00000FE8 <multilist.include.bb2@61> XINCLUDE "dos.include.bb2"
00001002 <multilist.include.bb2@406> XINCLUDE "dos.include.bb2"
0000100C <multilist.include.bb2@407> XINCLUDE "dos.include.bb2"
0000102E <multilist.include.bb2@408> XINCLUDE "dos.include.bb2"
00001052 <multilist.include.bb2@409> XINCLUDE "dos.include.bb2"
00001064 <multilist.include.bb2@410> XINCLUDE "dos.include.bb2"
0000107C <multilist.include.bb2@411> XINCLUDE "dos.include.bb2"
00001090 <multilist.include.bb2@412> XINCLUDE "dos.include.bb2"
000010A2 <multilist.include.bb2@415> XINCLUDE "dos.include.bb2"
000010B2 <multilist.include.bb2@416> XINCLUDE "dos.include.bb2"
000010B8 <multilist.include.bb2@417> XINCLUDE "dos.include.bb2"
000010C8 <multilist.include.bb2@418> XINCLUDE "dos.include.bb2"
000010D8 <multilist.include.bb2@419> XINCLUDE "dos.include.bb2"
000010F2 <multilist.include.bb2@420> XINCLUDE "dos.include.bb2"
000010F6 <multilist.include.bb2@422> XINCLUDE "dos.include.bb2"
00001110 <multilist.include.bb2@585> XINCLUDE "dos.include.bb2"
00001140 <multilist.include.bb2@586> XINCLUDE "dos.include.bb2"
0000114A <multilist.include.bb2@588> XINCLUDE "dos.include.bb2"
00001154 <multilist.include.bb2@589> XINCLUDE "dos.include.bb2"
00001176 <multilist.include.bb2@590> XINCLUDE "dos.include.bb2"
0000119A <multilist.include.bb2@591> XINCLUDE "dos.include.bb2"
000011AC <multilist.include.bb2@592> XINCLUDE "dos.include.bb2"
000011C4 <multilist.include.bb2@593> XINCLUDE "dos.include.bb2"
000011D8 <multilist.include.bb2@594> XINCLUDE "dos.include.bb2"
000011EA <multilist.include.bb2@597> XINCLUDE "dos.include.bb2"
000011FA <multilist.include.bb2@598> XINCLUDE "dos.include.bb2"
00001200 <multilist.include.bb2@599> XINCLUDE "dos.include.bb2"
00001210 <multilist.include.bb2@600> XINCLUDE "dos.include.bb2"
00001220 <multilist.include.bb2@601> XINCLUDE "dos.include.bb2"
0000123A <multilist.include.bb2@602> XINCLUDE "dos.include.bb2"
00001240 <multilist.include.bb2@603> XINCLUDE "dos.include.bb2"
00001246 <multilist.include.bb2@604> XINCLUDE "dos.include.bb2"
0000124A <multilist.include.bb2@605> XINCLUDE "dos.include.bb2"
00001264 <multilist.include.bb2@713> XINCLUDE "dos.include.bb2"
0000126C <multilist.include.bb2@714> XINCLUDE "dos.include.bb2"
00001276 <multilist.include.bb2@715> XINCLUDE "dos.include.bb2"
0000128C <multilist.include.bb2@716> XINCLUDE "dos.include.bb2"
000012A0 <multilist.include.bb2@717> XINCLUDE "dos.include.bb2"
000012C4 <multilist.include.bb2@718> XINCLUDE "dos.include.bb2"
000012D2 <multilist.include.bb2@721> XINCLUDE "dos.include.bb2"
000012DC <multilist.include.bb2@722> XINCLUDE "dos.include.bb2"
000012E2 <multilist.include.bb2@723> XINCLUDE "dos.include.bb2"
000012EC <multilist.include.bb2@724> XINCLUDE "dos.include.bb2"
000012F2 <multilist.include.bb2@725> XINCLUDE "dos.include.bb2"
00001310 <multilist.include.bb2@742> XINCLUDE "dos.include.bb2"
00001318 <multilist.include.bb2@743> XINCLUDE "dos.include.bb2"
00001322 <multilist.include.bb2@744> XINCLUDE "dos.include.bb2"
00001340 <multilist.include.bb2@745> XINCLUDE "dos.include.bb2"
00001356 <multilist.include.bb2@746> XINCLUDE "dos.include.bb2"
0000136A <multilist.include.bb2@747> XINCLUDE "dos.include.bb2"
0000139E <multilist.include.bb2@748> XINCLUDE "dos.include.bb2"
000013AC <multilist.include.bb2@751> XINCLUDE "dos.include.bb2"
000013B6 <multilist.include.bb2@752> XINCLUDE "dos.include.bb2"
000013BC <multilist.include.bb2@753> XINCLUDE "dos.include.bb2"
000013C6 <multilist.include.bb2@754> XINCLUDE "dos.include.bb2"
000013CA <multilist.include.bb2@756> XINCLUDE "dos.include.bb2"
000013D0 <multilist.include.bb2@757> XINCLUDE "dos.include.bb2"
000013EA <multilist.include.bb2@795> XINCLUDE "dos.include.bb2"
000013F4 <multilist.include.bb2@796> XINCLUDE "dos.include.bb2"
000013FE <multilist.include.bb2@797> XINCLUDE "dos.include.bb2"
00001414 <multilist.include.bb2@798> XINCLUDE "dos.include.bb2"
00001424 <multilist.include.bb2@799> XINCLUDE "dos.include.bb2"
0000142E <multilist.include.bb2@801> XINCLUDE "dos.include.bb2"
00001434 <multilist.include.bb2@802> XINCLUDE "dos.include.bb2"
00001438 <multilist.include.bb2@803> XINCLUDE "dos.include.bb2"
0000145A <multilist.include.bb2@821> XINCLUDE "dos.include.bb2"
00001462 <multilist.include.bb2@822> XINCLUDE "dos.include.bb2"
0000147C <multilist.include.bb2@823> XINCLUDE "dos.include.bb2"
00001486 <multilist.include.bb2@824> XINCLUDE "dos.include.bb2"
0000149C <multilist.include.bb2@825> XINCLUDE "dos.include.bb2"
000014B0 <multilist.include.bb2@826> XINCLUDE "dos.include.bb2"
00001506 <multilist.include.bb2@827> XINCLUDE "dos.include.bb2"
00001540 <multilist.include.bb2@828> XINCLUDE "dos.include.bb2"
00001552 <multilist.include.bb2@829> XINCLUDE "dos.include.bb2"
00001574 <multilist.include.bb2@830> XINCLUDE "dos.include.bb2"
0000157A <multilist.include.bb2@831> XINCLUDE "dos.include.bb2"
000015D0 <multilist.include.bb2@832> XINCLUDE "dos.include.bb2"
0000160A <multilist.include.bb2@833> XINCLUDE "dos.include.bb2"
00001610 <multilist.include.bb2@835> XINCLUDE "dos.include.bb2"
0000164A <multilist.include.bb2@836> XINCLUDE "dos.include.bb2"
00001684 <multilist.include.bb2@837> XINCLUDE "dos.include.bb2"
00001696 <multilist.include.bb2@839> XINCLUDE "dos.include.bb2"
000016A0 <multilist.include.bb2@840> XINCLUDE "dos.include.bb2"
000016A6 <multilist.include.bb2@841> XINCLUDE "dos.include.bb2"
000016B0 <multilist.include.bb2@842> XINCLUDE "dos.include.bb2"
000016C4 <multilist.include.bb2@843> XINCLUDE "dos.include.bb2"
0000170A <multilist.include.bb2@870> XINCLUDE "dos.include.bb2"
00001712 <multilist.include.bb2@871> XINCLUDE "dos.include.bb2"
00001730 <multilist.include.bb2@872> XINCLUDE "dos.include.bb2"
0000175C <multilist.include.bb2@873> XINCLUDE "dos.include.bb2"
0000177A <multilist.include.bb2@874> XINCLUDE "dos.include.bb2"
00001794 <multilist.include.bb2@875> XINCLUDE "dos.include.bb2"
000017AE <multilist.include.bb2@876> XINCLUDE "dos.include.bb2"
00001830 <multilist.include.bb2@877> XINCLUDE "dos.include.bb2"
00001844 <multilist.include.bb2@879> XINCLUDE "dos.include.bb2"
0000185C <multilist.include.bb2@880> XINCLUDE "dos.include.bb2"
00001862 <multilist.include.bb2@881> XINCLUDE "dos.include.bb2"
0000187A <multilist.include.bb2@882> XINCLUDE "dos.include.bb2"
00001890 <multilist.include.bb2@884> XINCLUDE "dos.include.bb2"
000018AA <multilist.include.bb2@886> XINCLUDE "dos.include.bb2"
000018BE <multilist.include.bb2@887> XINCLUDE "dos.include.bb2"
000018CC <multilist.include.bb2@888> XINCLUDE "dos.include.bb2"
00001922 <multilist.include.bb2@889> XINCLUDE "dos.include.bb2"
00001958 <multilist.include.bb2@890> XINCLUDE "dos.include.bb2"
00001988 <multilist.include.bb2@891> XINCLUDE "dos.include.bb2"
00001A10 <multilist.include.bb2@893> XINCLUDE "dos.include.bb2"
00001A16 <multilist.include.bb2@894> XINCLUDE "dos.include.bb2"
00001A24 <multilist.include.bb2@895> XINCLUDE "dos.include.bb2"
00001A7A <multilist.include.bb2@896> XINCLUDE "dos.include.bb2"
00001AB0 <multilist.include.bb2@897> XINCLUDE "dos.include.bb2"
00001AE0 <multilist.include.bb2@898> XINCLUDE "dos.include.bb2"
00001AE6 <multilist.include.bb2@901> XINCLUDE "dos.include.bb2"
00001B00 <multilist.include.bb2@902> XINCLUDE "dos.include.bb2"
00001B0E <multilist.include.bb2@903> XINCLUDE "dos.include.bb2"
00001B48 <multilist.include.bb2@904> XINCLUDE "dos.include.bb2"
00001B7E <multilist.include.bb2@905> XINCLUDE "dos.include.bb2"
00001BAE <multilist.include.bb2@906> XINCLUDE "dos.include.bb2"
00001BBC <multilist.include.bb2@909> XINCLUDE "dos.include.bb2"
00001BC6 <multilist.include.bb2@910> XINCLUDE "dos.include.bb2"
00001BCC <multilist.include.bb2@911> XINCLUDE "dos.include.bb2"
00001BD6 <multilist.include.bb2@912> XINCLUDE "dos.include.bb2"
00001BEA <multilist.include.bb2@913> XINCLUDE "dos.include.bb2"
00001BEA <dos.include.ab3@57> XINCLUDE "dos.include.bb2"
00001C00 <dos.include.ab3@60> XINCLUDE "dos.include.bb2"
00001C08 <dos.include.ab3@78> XINCLUDE "dos.include.bb2"
00001C10 <dos.include.ab3@79> XINCLUDE "dos.include.bb2"
00001C38 <dos.include.ab3@80> XINCLUDE "dos.include.bb2"
00001C40 <dos.include.ab3@81> XINCLUDE "dos.include.bb2"
00001C68 <dos.include.ab3@82> XINCLUDE "dos.include.bb2"
00001C90 <dos.include.ab3@83> XINCLUDE "dos.include.bb2"
00001CB8 <dos.include.ab3@84> XINCLUDE "dos.include.bb2"
00001CC0 <dos.include.ab3@85> XINCLUDE "dos.include.bb2"
00001CC8 <dos.include.ab3@86> XINCLUDE "dos.include.bb2"
00001CD0 <dos.include.ab3@87> XINCLUDE "dos.include.bb2"
00001CD8 <dos.include.ab3@88> XINCLUDE "dos.include.bb2"
00001CE0 <dos.include.ab3@89> XINCLUDE "dos.include.bb2"
00001CE8 <dos.include.ab3@90> XINCLUDE "dos.include.bb2"
00001CF0 <dos.include.ab3@91> XINCLUDE "dos.include.bb2"
00001CF8 <dos.include.ab3@92> XINCLUDE "dos.include.bb2"
00001D00 <dos.include.ab3@93> XINCLUDE "dos.include.bb2"
00001D20 <dos.include.ab3@94> XINCLUDE "dos.include.bb2"
00001D28 <dos.include.ab3@95> XINCLUDE "dos.include.bb2"
00001D30 <dos.include.ab3@96> XINCLUDE "dos.include.bb2"
00001D58 <dos.include.ab3@98> XINCLUDE "dos.include.bb2"
00001D6E <dos.include.ab3@129> XINCLUDE "dos.include.bb2"
00001D7A <dos.include.ab3@130> XINCLUDE "dos.include.bb2"
00001D7E <dos.include.ab3@131> XINCLUDE "dos.include.bb2"
00001D94 <dos.include.ab3@144> XINCLUDE "dos.include.bb2"
00001DAE <dos.include.ab3@145> XINCLUDE "dos.include.bb2"
00001DC4 <dos.include.ab3@146> XINCLUDE "dos.include.bb2"
00001DEE <dos.include.ab3@147> XINCLUDE "dos.include.bb2"
00001DF8 <dos.include.ab3@148> XINCLUDE "dos.include.bb2"
00001DFE <dos.include.ab3@149> XINCLUDE "dos.include.bb2"
00001E14 <dos.include.ab3@162> XINCLUDE "dos.include.bb2"
00001E2E <dos.include.ab3@163> XINCLUDE "dos.include.bb2"
00001E44 <dos.include.ab3@164> XINCLUDE "dos.include.bb2"
00001E6E <dos.include.ab3@165> XINCLUDE "dos.include.bb2"
00001E78 <dos.include.ab3@166> XINCLUDE "dos.include.bb2"
00001E7E <dos.include.ab3@167> XINCLUDE "dos.include.bb2"
00001EA8 <dos.include.ab3@183> XINCLUDE "dos.include.bb2"
00001EB4 <dos.include.ab3@184> XINCLUDE "dos.include.bb2"
00001ED4 <dos.include.ab3@185> XINCLUDE "dos.include.bb2"
00001EDE <dos.include.ab3@186> XINCLUDE "dos.include.bb2"
00001EEE <dos.include.ab3@187> XINCLUDE "dos.include.bb2"
00001EFE <dos.include.ab3@188> XINCLUDE "dos.include.bb2"
00001F08 <dos.include.ab3@190> XINCLUDE "dos.include.bb2"
00001F22 <dos.include.ab3@191> XINCLUDE "dos.include.bb2"
00001F38 <dos.include.ab3@429> XINCLUDE "dos.include.bb2"
00001F4A <dos.include.ab3@431> XINCLUDE "dos.include.bb2"
00001FC4 <dos.include.ab3@432> XINCLUDE "dos.include.bb2"
00001FEE <dos.include.ab3@433> XINCLUDE "dos.include.bb2"
00002006 <dos.include.ab3@434> XINCLUDE "dos.include.bb2"
0000201C <dos.include.ab3@460> XINCLUDE "dos.include.bb2"
0000202E <dos.include.ab3@461> XINCLUDE "dos.include.bb2"
00002032 <dos.include.ab3@462> XINCLUDE "dos.include.bb2"
00002048 <dos.include.ab3@478> XINCLUDE "dos.include.bb2"
0000204A <dos.include.ab3@479> XINCLUDE "dos.include.bb2"
00002084 <dos.include.ab3@540> XINCLUDE "dos.include.bb2"
000020B8 <dos.include.ab3@542> XINCLUDE "dos.include.bb2"
000020DE <dos.include.ab3@543> XINCLUDE "dos.include.bb2"
000020FE <dos.include.ab3@544> XINCLUDE "dos.include.bb2"
0000211E <dos.include.ab3@545> XINCLUDE "dos.include.bb2"
00002148 <dos.include.ab3@660> XINCLUDE "dos.include.bb2"
0000215E <dos.include.ab3@661> XINCLUDE "dos.include.bb2"
00002168 <dos.include.ab3@662> XINCLUDE "dos.include.bb2"
00002190 <dos.include.ab3@663> XINCLUDE "dos.include.bb2"
00002196 <dos.include.ab3@664> XINCLUDE "dos.include.bb2"
000021BE <dos.include.ab3@665> XINCLUDE "dos.include.bb2"
000021E8 <dos.include.ab3@667> XINCLUDE "dos.include.bb2"
00002206 <dos.include.ab3@668> XINCLUDE "dos.include.bb2"
00002230 <dos.include.ab3@691> XINCLUDE "dos.include.bb2"
000022A0 <dos.include.ab3@692> XINCLUDE "dos.include.bb2"
000022CA <dos.include.ab3@693> XINCLUDE "dos.include.bb2"
000022E8 <dos.include.ab3@694> XINCLUDE "dos.include.bb2"
00002312 <dos.include.ab3@729> XINCLUDE "dos.include.bb2"
00002332 <dos.include.ab3@730> XINCLUDE "dos.include.bb2"
0000235E <dos.include.ab3@731> XINCLUDE "dos.include.bb2"
00002368 <dos.include.ab3@732> XINCLUDE "dos.include.bb2"
00002382 <dos.include.ab3@733> XINCLUDE "dos.include.bb2"
000023AC <dos.include.ab3@880> XINCLUDE "dos.include.bb2"
0000245A <dos.include.ab3@881> XINCLUDE "dos.include.bb2"
00002470 <dos.include.ab3@882> XINCLUDE "dos.include.bb2"
0000247A <dos.include.ab3@883> XINCLUDE "dos.include.bb2"
000024A2 <dos.include.ab3@884> XINCLUDE "dos.include.bb2"
000024AC <dos.include.ab3@885> XINCLUDE "dos.include.bb2"
000024B2 <dos.include.ab3@886> XINCLUDE "dos.include.bb2"
000024B8 <dos.include.ab3@887> XINCLUDE "dos.include.bb2"
000024BE <dos.include.ab3@888> XINCLUDE "dos.include.bb2"
000024D0 <dos.include.ab3@890> XINCLUDE "dos.include.bb2"
000024DA <dos.include.ab3@892> XINCLUDE "dos.include.bb2"
000024F4 <dos.include.ab3@893> XINCLUDE "dos.include.bb2"
00002532 <dos.include.ab3@914> XINCLUDE "dos.include.bb2"
0000253A <dos.include.ab3@915> XINCLUDE "dos.include.bb2"
000025E8 <dos.include.ab3@916> XINCLUDE "dos.include.bb2"
000025FC <dos.include.ab3@917> XINCLUDE "dos.include.bb2"
0000263E <dos.include.ab3@918> XINCLUDE "dos.include.bb2"
0000265E <dos.include.ab3@920> XINCLUDE "dos.include.bb2"
00002668 <dos.include.ab3@921> XINCLUDE "dos.include.bb2"
00002684 <dos.include.ab3@922> XINCLUDE "dos.include.bb2"
000026BE <dos.include.ab3@974> XINCLUDE "dos.include.bb2"
000026C6 <dos.include.ab3@975> XINCLUDE "dos.include.bb2"
00002774 <dos.include.ab3@976> XINCLUDE "dos.include.bb2"
000027AA <dos.include.ab3@977> XINCLUDE "dos.include.bb2"
000027CA <dos.include.ab3@978> XINCLUDE "dos.include.bb2"
000027E8 <dos.include.ab3@979> XINCLUDE "dos.include.bb2"
0000280C <dos.include.ab3@980> XINCLUDE "dos.include.bb2"
00002816 <dos.include.ab3@982> XINCLUDE "dos.include.bb2"
00002832 <dos.include.ab3@983> XINCLUDE "dos.include.bb2"
0000286C <dos.include.ab3@1000> XINCLUDE "dos.include.bb2"
0000291A <dos.include.ab3@1001> XINCLUDE "dos.include.bb2"
00002952 <dos.include.ab3@1002> XINCLUDE "dos.include.bb2"
00002972 <dos.include.ab3@1003> XINCLUDE "dos.include.bb2"
00002978 <dos.include.ab3@1004> XINCLUDE "dos.include.bb2"
00002998 <dos.include.ab3@1005> XINCLUDE "dos.include.bb2"
000029A2 <dos.include.ab3@1006> XINCLUDE "dos.include.bb2"
000029BC <dos.include.ab3@1007> XINCLUDE "dos.include.bb2"
000029D4 <dos.include.ab3@1008> XINCLUDE "dos.include.bb2"
000029DE <dos.include.ab3@1011> XINCLUDE "dos.include.bb2"
000029FA <dos.include.ab3@1012> XINCLUDE "dos.include.bb2"
00002A24 <dos.include.ab3@1147> XINCLUDE "dos.include.bb2"
00002A32 <dos.include.ab3@1149> XINCLUDE "dos.include.bb2"
00002AF8 <dos.include.ab3@1150> XINCLUDE "dos.include.bb2"
00002B22 <dos.include.ab3@1151> XINCLUDE "dos.include.bb2"
00002B4A <dos.include.ab3@1153> XINCLUDE "dos.include.bb2"
00002B74 <dos.include.ab3@1154> XINCLUDE "dos.include.bb2"
00002B9E <dos.include.ab3@1156> XINCLUDE "dos.include.bb2"
00002BBC <dos.include.ab3@1157> XINCLUDE "dos.include.bb2"
00002BE6 <dos.include.ab3@1175> XINCLUDE "dos.include.bb2"
00002C52 <dos.include.ab3@1177> XINCLUDE "dos.include.bb2"
00002C7A <dos.include.ab3@1178> XINCLUDE "dos.include.bb2"
00002C88 <dos.include.ab3@1179> XINCLUDE "dos.include.bb2"
00002CBC <dos.include.ab3@1180> XINCLUDE "dos.include.bb2"
00002CCA <dos.include.ab3@1183> XINCLUDE "dos.include.bb2"
00002CEC <dos.include.ab3@1189> XINCLUDE "dos.include.bb2"
00002CFA <dos.include.ab3@1193> XINCLUDE "dos.include.bb2"
00002D1E <dos.include.ab3@1194> XINCLUDE "dos.include.bb2"
00002D48 <dos.include.ab3@1195> XINCLUDE "dos.include.bb2"
00002D72 <dos.include.ab3@1198> XINCLUDE "dos.include.bb2"
00002D90 <dos.include.ab3@1199> XINCLUDE "dos.include.bb2"
00002DBA <dos.include.ab3@1260> XINCLUDE "dos.include.bb2"
00002E12 <dos.include.ab3@1261> XINCLUDE "dos.include.bb2"
00002E3C <dos.include.ab3@1262> XINCLUDE "dos.include.bb2"
00002E5A <dos.include.ab3@1263> XINCLUDE "dos.include.bb2"
00002E70 <dos.include.ab3@1337> XINCLUDE "dos.include.bb2"
00002E76 <dos.include.ab3@1339> XINCLUDE "dos.include.bb2"
00002E80 <dos.include.ab3@1340> XINCLUDE "dos.include.bb2"
00002E8A <dos.include.ab3@1341> XINCLUDE "dos.include.bb2"
00002EA8 <dos.include.ab3@1344> XINCLUDE "dos.include.bb2"
00002EAE <dos.include.ab3@1345> XINCLUDE "dos.include.bb2"
00002EB4 <dos.include.ab3@1346> XINCLUDE "dos.include.bb2"
00002EC4 <dos.include.ab3@1348> XINCLUDE "dos.include.bb2"
00002ECA <dos.include.ab3@1349> XINCLUDE "dos.include.bb2"
00002ED2 <dos.include.ab3@1350> XINCLUDE "dos.include.bb2"
00002EFA <dos.include.ab3@1351> XINCLUDE "dos.include.bb2"
00002F04 <dos.include.ab3@1352> XINCLUDE "dos.include.bb2"
00002F0E <dos.include.ab3@1354> XINCLUDE "dos.include.bb2"
00002F22 <dos.include.ab3@1355> XINCLUDE "dos.include.bb2"
00002F38 <dos.include.ab3@1460> XINCLUDE "dos.include.bb2"
00002F3E <dos.include.ab3@1466> XINCLUDE "dos.include.bb2"
00002F62 <dos.include.ab3@1467> XINCLUDE "dos.include.bb2"
00002F86 <dos.include.ab3@1468> XINCLUDE "dos.include.bb2"
00002FAA <dos.include.ab3@1469> XINCLUDE "dos.include.bb2"
00002FB0 <dos.include.ab3@1470> XINCLUDE "dos.include.bb2"
00002FDC <dos.include.ab3@1471> XINCLUDE "dos.include.bb2"
00002FDE <dos.include.ab3@1472> XINCLUDE "dos.include.bb2"
0000300C <dos.include.ab3@1473> XINCLUDE "dos.include.bb2"
00003036 <dos.include.ab3@1489> XINCLUDE "dos.include.bb2"
000030BA <dos.include.ab3@1492> XINCLUDE "dos.include.bb2"
00003182 <dos.include.ab3@1493> XINCLUDE "dos.include.bb2"
0000318C <dos.include.ab3@1495> XINCLUDE "dos.include.bb2"
000031D6 <dos.include.ab3@1496> XINCLUDE "dos.include.bb2"
00003222 <dos.include.ab3@1498> XINCLUDE "dos.include.bb2"
0000325A <dos.include.ab3@1499> XINCLUDE "dos.include.bb2"
0000326C <dos.include.ab3@1500> XINCLUDE "dos.include.bb2"
00003282 <dos.include.ab3@1501> XINCLUDE "dos.include.bb2"
00003288 <dos.include.ab3@1502> XINCLUDE "dos.include.bb2"
0000329E <dos.include.ab3@1503> XINCLUDE "dos.include.bb2"
000032D2 <dos.include.ab3@1505> XINCLUDE "dos.include.bb2"
000032D8 <dos.include.ab3@1506> XINCLUDE "dos.include.bb2"
000032E2 <dos.include.ab3@1508> XINCLUDE "dos.include.bb2"
000032FC <dos.include.ab3@1509> XINCLUDE "dos.include.bb2"
00003346 <dos.include.ab3@1539> XINCLUDE "dos.include.bb2"
0000337C <dos.include.ab3@1541> XINCLUDE "dos.include.bb2"
000033A0 <dos.include.ab3@1542> XINCLUDE "dos.include.bb2"
000033AA <dos.include.ab3@1543> XINCLUDE "dos.include.bb2"
000033D2 <dos.include.ab3@1544> XINCLUDE "dos.include.bb2"
0000341A <dos.include.ab3@1547> XINCLUDE "dos.include.bb2"
000034F0 <dos.include.ab3@1549> XINCLUDE "dos.include.bb2"
0000351A <dos.include.ab3@1550> XINCLUDE "dos.include.bb2"
0000353A <dos.include.ab3@1551> XINCLUDE "dos.include.bb2"
00003574 <dos.include.ab3@1570> XINCLUDE "dos.include.bb2"
0000357A <dos.include.ab3@1572> XINCLUDE "dos.include.bb2"
00003580 <dos.include.ab3@1573> XINCLUDE "dos.include.bb2"
00003588 <dos.include.ab3@1574> XINCLUDE "dos.include.bb2"
000035BE <dos.include.ab3@1575> XINCLUDE "dos.include.bb2"
000035CC <dos.include.ab3@1576> XINCLUDE "dos.include.bb2"
000035D6 <dos.include.ab3@1577> XINCLUDE "dos.include.bb2"
00003602 <dos.include.ab3@1578> XINCLUDE "dos.include.bb2"
00003610 <dos.include.ab3@1579> XINCLUDE "dos.include.bb2"
0000361A <dos.include.ab3@1580> XINCLUDE "dos.include.bb2"
00003648 <dos.include.ab3@1582> XINCLUDE "dos.include.bb2"
000036C6 <dos.include.ab3@1585> XINCLUDE "dos.include.bb2"
00003718 <dos.include.ab3@1588> XINCLUDE "dos.include.bb2"
0000372A <dos.include.ab3@1589> XINCLUDE "dos.include.bb2"
00003798 <dos.include.ab3@1590> XINCLUDE "dos.include.bb2"
0000379E <dos.include.ab3@1591> XINCLUDE "dos.include.bb2"
000037EA <dos.include.ab3@1592> XINCLUDE "dos.include.bb2"
000038B8 <dos.include.ab3@1596> XINCLUDE "dos.include.bb2"
00003998 <dos.include.ab3@1597> XINCLUDE "dos.include.bb2"
00003A04 <dos.include.ab3@1599> XINCLUDE "dos.include.bb2"
00003A0A <dos.include.ab3@1600> XINCLUDE "dos.include.bb2"
00003A26 <dos.include.ab3@1601> XINCLUDE "dos.include.bb2"
00003A34 <dos.include.ab3@1604> XINCLUDE "dos.include.bb2"
00003A3A <dos.include.ab3@1605> XINCLUDE "dos.include.bb2"
00003A4C <dos.include.ab3@1608> XINCLUDE "dos.include.bb2"
00003A62 <dos.include.ab3@1609> XINCLUDE "dos.include.bb2"
00003A6C <dos.include.ab3@1610> XINCLUDE "dos.include.bb2"
00003A88 <dos.include.ab3@1611> XINCLUDE "dos.include.bb2"
00003AB2 <dos.include.ab3@2207> XINCLUDE "dos.include.bb2"
00003AC6 <dos.include.ab3@2208> XINCLUDE "dos.include.bb2"
00003B04 <dos.include.ab3@2209> XINCLUDE "dos.include.bb2"
00003BEA <dos.include.ab3@2210> XINCLUDE "dos.include.bb2"
00003BF0 <dos.include.ab3@2211> XINCLUDE "dos.include.bb2"
00003C40 <dos.include.ab3@2212> XINCLUDE "dos.include.bb2"
00003C6A <dos.include.ab3@2213> XINCLUDE "dos.include.bb2"
00003C88 <dos.include.ab3@2214> XINCLUDE "dos.include.bb2"
00003CB2 <dos.include.ab3@2238> XINCLUDE "dos.include.bb2"
00003CC6 <dos.include.ab3@2239> XINCLUDE "dos.include.bb2"
00003D04 <dos.include.ab3@2240> XINCLUDE "dos.include.bb2"
00003DEA <dos.include.ab3@2241> XINCLUDE "dos.include.bb2"
00003DF0 <dos.include.ab3@2242> XINCLUDE "dos.include.bb2"
00003E62 <dos.include.ab3@2243> XINCLUDE "dos.include.bb2"
00003E8C <dos.include.ab3@2244> XINCLUDE "dos.include.bb2"
00003EAA <dos.include.ab3@2245> XINCLUDE "dos.include.bb2"
00003EE4 <dos.include.ab3@2271> XINCLUDE "dos.include.bb2"
00003F1C <dos.include.ab3@2272> XINCLUDE "dos.include.bb2"
00003F74 <dos.include.ab3@2273> XINCLUDE "dos.include.bb2"
00003FD8 <dos.include.ab3@2274> XINCLUDE "dos.include.bb2"
00004002 <dos.include.ab3@2276> XINCLUDE "dos.include.bb2"
00004022 <dos.include.ab3@2277> XINCLUDE "dos.include.bb2"
0000404C <dos.include.ab3@2294> XINCLUDE "dos.include.bb2"
00004052 <dos.include.ab3@2295> XINCLUDE "dos.include.bb2"
00004068 <dos.include.ab3@2296> XINCLUDE "dos.include.bb2"
00004072 <dos.include.ab3@2297> XINCLUDE "dos.include.bb2"
00004078 <dos.include.ab3@2298> XINCLUDE "dos.include.bb2"
00004088 <dos.include.ab3@2299> XINCLUDE "dos.include.bb2"
00004092 <dos.include.ab3@2301> XINCLUDE "dos.include.bb2"
000040AC <dos.include.ab3@2302> XINCLUDE "dos.include.bb2"
000040DA <dos.include.ab3@2536> XINCLUDE "dos.include.bb2"
000040FC <dos.include.ab3@2537> XINCLUDE "dos.include.bb2"
00004104 <dos.include.ab3@2538> XINCLUDE "dos.include.bb2"
00004112 <dos.include.ab3@2539> XINCLUDE "dos.include.bb2"
0000412C <dos.include.ab3@2541> XINCLUDE "dos.include.bb2"
0000415A <dos.include.ab3@2560> XINCLUDE "dos.include.bb2"
0000416E <dos.include.ab3@2561> XINCLUDE "dos.include.bb2"
000041A2 <dos.include.ab3@2562> XINCLUDE "dos.include.bb2"
000041BC <dos.include.ab3@2564> XINCLUDE "dos.include.bb2"
000041C4 <dos.include.ab3@2565> XINCLUDE "dos.include.bb2"
000041D2 <dos.include.ab3@2566> XINCLUDE "dos.include.bb2"
000041EC <dos.include.ab3@2568> XINCLUDE "dos.include.bb2"
00004216 <dos.include.ab3@2704> XINCLUDE "dos.include.bb2"
00004222 <dos.include.ab3@2706> XINCLUDE "dos.include.bb2"
00004242 <dos.include.ab3@2707> XINCLUDE "dos.include.bb2"
00004268 <dos.include.ab3@2708> XINCLUDE "dos.include.bb2"
00004294 <dos.include.ab3@2709> XINCLUDE "dos.include.bb2"
000042AC <dos.include.ab3@2710> XINCLUDE "dos.include.bb2"
000042BA <dos.include.ab3@2712> XINCLUDE "dos.include.bb2"
000042C0 <dos.include.ab3@2713> XINCLUDE "dos.include.bb2"
000042CC <dos.include.ab3@2714> XINCLUDE "dos.include.bb2"
000042D2 <dos.include.ab3@2716> XINCLUDE "dos.include.bb2"
000042DE <dos.include.ab3@2717> XINCLUDE "dos.include.bb2"
000042EE <dos.include.ab3@2719> XINCLUDE "dos.include.bb2"
000042F4 <dos.include.ab3@2720> XINCLUDE "dos.include.bb2"
00004300 <dos.include.ab3@2721> XINCLUDE "dos.include.bb2"
0000430A <dos.include.ab3@2723> XINCLUDE "dos.include.bb2"
00004324 <dos.include.ab3@2724> XINCLUDE "dos.include.bb2"
00004324 <AmiBlitz3.ab2@79> XINCLUDE "dos.include.bb2"
00004332 <AmiBlitz3.ab2@81> If dos_FromCLI{}
00004338 <AmiBlitz3.ab2@82>   CLIMode.l=True
00004344 <AmiBlitz3.ab2@83>   error_SetFlags{#error_stdout}
00004344 <common.ab3@1> XINCLUDE "/Shared/common.ab3"
0000436C <common.ab3@38> XINCLUDE "/Shared/common.ab3"
00004372 <common.ab3@250> XINCLUDE "/Shared/common.ab3"
00004374 <common.ab3@251> XINCLUDE "/Shared/common.ab3"
00004504 <common.ab3@252> XINCLUDE "/Shared/common.ab3"
00004508 <common.ab3@253> XINCLUDE "/Shared/common.ab3"
0000450C <common.ab3@255> XINCLUDE "/Shared/common.ab3"
00004510 <common.ab3@256> XINCLUDE "/Shared/common.ab3"
00004514 <common.ab3@258> XINCLUDE "/Shared/common.ab3"
00004518 <common.ab3@259> XINCLUDE "/Shared/common.ab3"
0000451C <common.ab3@260> XINCLUDE "/Shared/common.ab3"
00004520 <common.ab3@261> XINCLUDE "/Shared/common.ab3"
00004524 <common.ab3@262> XINCLUDE "/Shared/common.ab3"
00004528 <common.ab3@263> XINCLUDE "/Shared/common.ab3"
0000452C <common.ab3@264> XINCLUDE "/Shared/common.ab3"
00004530 <common.ab3@265> XINCLUDE "/Shared/common.ab3"
00004534 <common.ab3@266> XINCLUDE "/Shared/common.ab3"
00004538 <common.ab3@268> XINCLUDE "/Shared/common.ab3"
0000453C <common.ab3@270> XINCLUDE "/Shared/common.ab3"
00004540 <common.ab3@271> XINCLUDE "/Shared/common.ab3"
00004544 <common.ab3@272> XINCLUDE "/Shared/common.ab3"
00004548 <common.ab3@273> XINCLUDE "/Shared/common.ab3"
0000454C <common.ab3@274> XINCLUDE "/Shared/common.ab3"
00004550 <common.ab3@275> XINCLUDE "/Shared/common.ab3"
00004554 <common.ab3@276> XINCLUDE "/Shared/common.ab3"
00004558 <common.ab3@277> XINCLUDE "/Shared/common.ab3"
0000455C <common.ab3@278> XINCLUDE "/Shared/common.ab3"
00004560 <common.ab3@279> XINCLUDE "/Shared/common.ab3"
00004568 <common.ab3@282> XINCLUDE "/Shared/common.ab3"
0000456C <common.ab3@283> XINCLUDE "/Shared/common.ab3"
0000456E <common.ab3@284> XINCLUDE "/Shared/common.ab3"
00004572 <common.ab3@285> XINCLUDE "/Shared/common.ab3"
00004574 <common.ab3@286> XINCLUDE "/Shared/common.ab3"
00004578 <common.ab3@287> XINCLUDE "/Shared/common.ab3"
0000457C <common.ab3@288> XINCLUDE "/Shared/common.ab3"
00004580 <common.ab3@289> XINCLUDE "/Shared/common.ab3"
00004584 <common.ab3@290> XINCLUDE "/Shared/common.ab3"
00004588 <common.ab3@291> XINCLUDE "/Shared/common.ab3"
00004590 <common.ab3@292> XINCLUDE "/Shared/common.ab3"
00004598 <common.ab3@293> XINCLUDE "/Shared/common.ab3"
0000459C <common.ab3@294> XINCLUDE "/Shared/common.ab3"
000045A0 <common.ab3@295> XINCLUDE "/Shared/common.ab3"
000045A4 <common.ab3@296> XINCLUDE "/Shared/common.ab3"
000045A6 <common.ab3@298> XINCLUDE "/Shared/common.ab3"
00004666 <common.ab3@299> XINCLUDE "/Shared/common.ab3"
000046AE <common.ab3@300> XINCLUDE "/Shared/common.ab3"
000046B2 <common.ab3@302> XINCLUDE "/Shared/common.ab3"
000046B4 <common.ab3@303> XINCLUDE "/Shared/common.ab3"
000046B8 <common.ab3@304> XINCLUDE "/Shared/common.ab3"
000046BA <common.ab3@305> XINCLUDE "/Shared/common.ab3"
000046BC <common.ab3@306> XINCLUDE "/Shared/common.ab3"
000046BE <common.ab3@307> XINCLUDE "/Shared/common.ab3"
000046C0 <common.ab3@308> XINCLUDE "/Shared/common.ab3"
000046C2 <common.ab3@310> XINCLUDE "/Shared/common.ab3"
000046C4 <common.ab3@311> XINCLUDE "/Shared/common.ab3"
000046C5 <common.ab3@313> XINCLUDE "/Shared/common.ab3"
000046C6 <common.ab3@315> XINCLUDE "/Shared/common.ab3"
000046C8 <common.ab3@316> XINCLUDE "/Shared/common.ab3"
000046CA <common.ab3@317> XINCLUDE "/Shared/common.ab3"
000046CC <common.ab3@319> XINCLUDE "/Shared/common.ab3"
000046CE <common.ab3@322> XINCLUDE "/Shared/common.ab3"
000046D0 <common.ab3@324> XINCLUDE "/Shared/common.ab3"
000046D2 <common.ab3@326> XINCLUDE "/Shared/common.ab3"
000046D6 <common.ab3@328> XINCLUDE "/Shared/common.ab3"
000046D8 <common.ab3@330> XINCLUDE "/Shared/common.ab3"
000046DA <common.ab3@331> XINCLUDE "/Shared/common.ab3"
000046DC <common.ab3@333> XINCLUDE "/Shared/common.ab3"
000046E0 <common.ab3@335> XINCLUDE "/Shared/common.ab3"
000046E2 <common.ab3@336> XINCLUDE "/Shared/common.ab3"
000046E4 <common.ab3@337> XINCLUDE "/Shared/common.ab3"
000046E8 <common.ab3@340> XINCLUDE "/Shared/common.ab3"
000046EA <common.ab3@341> XINCLUDE "/Shared/common.ab3"
000046EC <common.ab3@342> XINCLUDE "/Shared/common.ab3"
000046EE <common.ab3@343> XINCLUDE "/Shared/common.ab3"
000046F0 <common.ab3@345> XINCLUDE "/Shared/common.ab3"
000046F2 <common.ab3@346> XINCLUDE "/Shared/common.ab3"
000046F6 <common.ab3@348> XINCLUDE "/Shared/common.ab3"
000046F8 <common.ab3@349> XINCLUDE "/Shared/common.ab3"
000046FA <common.ab3@350> XINCLUDE "/Shared/common.ab3"
000046FC <common.ab3@354> XINCLUDE "/Shared/common.ab3"
000046FE <common.ab3@355> XINCLUDE "/Shared/common.ab3"
00004702 <common.ab3@356> XINCLUDE "/Shared/common.ab3"
00004704 <common.ab3@362> XINCLUDE "/Shared/common.ab3"
00004706 <common.ab3@364> XINCLUDE "/Shared/common.ab3"
00004708 <common.ab3@366> XINCLUDE "/Shared/common.ab3"
0000470A <common.ab3@367> XINCLUDE "/Shared/common.ab3"
0000470C <common.ab3@368> XINCLUDE "/Shared/common.ab3"
00004710 <common.ab3@369> XINCLUDE "/Shared/common.ab3"
00004712 <common.ab3@370> XINCLUDE "/Shared/common.ab3"
00004714 <common.ab3@371> XINCLUDE "/Shared/common.ab3"
00004716 <common.ab3@372> XINCLUDE "/Shared/common.ab3"
00004718 <common.ab3@373> XINCLUDE "/Shared/common.ab3"
0000471A <common.ab3@375> XINCLUDE "/Shared/common.ab3"
0000471C <common.ab3@377> XINCLUDE "/Shared/common.ab3"
0000471E <common.ab3@379> XINCLUDE "/Shared/common.ab3"
00004722 <common.ab3@380> XINCLUDE "/Shared/common.ab3"
00004724 <common.ab3@381> XINCLUDE "/Shared/common.ab3"
00004752 <common.ab3@382> XINCLUDE "/Shared/common.ab3"
0000475C <common.ab3@383> XINCLUDE "/Shared/common.ab3"
00004760 <common.ab3@384> XINCLUDE "/Shared/common.ab3"
00004762 <common.ab3@386> XINCLUDE "/Shared/common.ab3"
00004764 <common.ab3@387> XINCLUDE "/Shared/common.ab3"
00004768 <common.ab3@388> XINCLUDE "/Shared/common.ab3"
0000476C <common.ab3@389> XINCLUDE "/Shared/common.ab3"
00004775 <common.ab3@390> XINCLUDE "/Shared/common.ab3"
00004778 <common.ab3@391> XINCLUDE "/Shared/common.ab3"
000047A5 <common.ab3@392> XINCLUDE "/Shared/common.ab3"
000047E5 <common.ab3@393> XINCLUDE "/Shared/common.ab3"
000047F1 <common.ab3@394> XINCLUDE "/Shared/common.ab3"
00004841 <common.ab3@395> XINCLUDE "/Shared/common.ab3"
0000484D <common.ab3@396> XINCLUDE "/Shared/common.ab3"
0000489D <common.ab3@397> XINCLUDE "/Shared/common.ab3"
00004999 <common.ab3@398> XINCLUDE "/Shared/common.ab3"
0000499B <common.ab3@399> XINCLUDE "/Shared/common.ab3"
00004A5B <common.ab3@400> XINCLUDE "/Shared/common.ab3"
00004A9B <common.ab3@401> XINCLUDE "/Shared/common.ab3"
00004A9D <common.ab3@402> XINCLUDE "/Shared/common.ab3"
00004A9E <common.ab3@403> XINCLUDE "/Shared/common.ab3"
00004AA2 <common.ab3@406> XINCLUDE "/Shared/common.ab3"
00004AA6 <common.ab3@408> XINCLUDE "/Shared/common.ab3"
00004AAA <common.ab3@409> XINCLUDE "/Shared/common.ab3"
00004AAE <common.ab3@410> XINCLUDE "/Shared/common.ab3"
00004AB2 <common.ab3@412> XINCLUDE "/Shared/common.ab3"
00004AB6 <common.ab3@414> XINCLUDE "/Shared/common.ab3"
00004ABA <common.ab3@415> XINCLUDE "/Shared/common.ab3"
00004ABE <common.ab3@416> XINCLUDE "/Shared/common.ab3"
00004AC2 <common.ab3@417> XINCLUDE "/Shared/common.ab3"
00004AC6 <common.ab3@418> XINCLUDE "/Shared/common.ab3"
00004ACA <common.ab3@419> XINCLUDE "/Shared/common.ab3"
00004ACE <common.ab3@420> XINCLUDE "/Shared/common.ab3"
00004AD2 <common.ab3@421> XINCLUDE "/Shared/common.ab3"
00004AD6 <common.ab3@423> XINCLUDE "/Shared/common.ab3"
00004ADA <common.ab3@425> XINCLUDE "/Shared/common.ab3"
00004ADE <common.ab3@427> XINCLUDE "/Shared/common.ab3"
00004AE2 <common.ab3@429> XINCLUDE "/Shared/common.ab3"
00004AE6 <common.ab3@430> XINCLUDE "/Shared/common.ab3"
00004AF0 <common.ab3@431> XINCLUDE "/Shared/common.ab3"
00004AF4 <common.ab3@432> XINCLUDE "/Shared/common.ab3"
00004AF8 <common.ab3@435> XINCLUDE "/Shared/common.ab3"
00004AFA <common.ab3@436> XINCLUDE "/Shared/common.ab3"
00004AFC <common.ab3@437> XINCLUDE "/Shared/common.ab3"
00004B1A <common.ab3@438> XINCLUDE "/Shared/common.ab3"
00004B1E <common.ab3@439> XINCLUDE "/Shared/common.ab3"
00004B20 <common.ab3@441> XINCLUDE "/Shared/common.ab3"
00004B24 <common.ab3@442> XINCLUDE "/Shared/common.ab3"
00004B58 <common.ab3@443> XINCLUDE "/Shared/common.ab3"
00004B5C <common.ab3@444> XINCLUDE "/Shared/common.ab3"
00004B6A <common.ab3@446> XINCLUDE "/Shared/common.ab3"
00004B7C <common.ab3@447> XINCLUDE "/Shared/common.ab3"
00004B7E <common.ab3@448> XINCLUDE "/Shared/common.ab3"
00004B92 <common.ab3@449> XINCLUDE "/Shared/common.ab3"
00004BA8 <common.ab3@450> XINCLUDE "/Shared/common.ab3"
00004BBE <common.ab3@451> XINCLUDE "/Shared/common.ab3"
00004BD4 <common.ab3@452> XINCLUDE "/Shared/common.ab3"
00004BEA <common.ab3@453> XINCLUDE "/Shared/common.ab3"
00004BEC <common.ab3@454> XINCLUDE "/Shared/common.ab3"
00004BEE <common.ab3@455> XINCLUDE "/Shared/common.ab3"
00004BF2 <common.ab3@457> XINCLUDE "/Shared/common.ab3"
00004BF6 <common.ab3@459> XINCLUDE "/Shared/common.ab3"
00004BFA <common.ab3@461> XINCLUDE "/Shared/common.ab3"
00004BFE <common.ab3@462> XINCLUDE "/Shared/common.ab3"
00004C02 <common.ab3@463> XINCLUDE "/Shared/common.ab3"
00004C06 <common.ab3@464> XINCLUDE "/Shared/common.ab3"
00004C0A <common.ab3@465> XINCLUDE "/Shared/common.ab3"
00004C0E <common.ab3@466> XINCLUDE "/Shared/common.ab3"
00004C12 <common.ab3@467> XINCLUDE "/Shared/common.ab3"
00004C16 <common.ab3@468> XINCLUDE "/Shared/common.ab3"
00004C1C <common.ab3@469> XINCLUDE "/Shared/common.ab3"
00004C2E <common.ab3@470> XINCLUDE "/Shared/common.ab3"
00004C30 <common.ab3@474> XINCLUDE "/Shared/common.ab3"
00004C34 <common.ab3@475> XINCLUDE "/Shared/common.ab3"
00004C36 <common.ab3@476> XINCLUDE "/Shared/common.ab3"
00004C3A <common.ab3@477> XINCLUDE "/Shared/common.ab3"
00004C3C <common.ab3@478> XINCLUDE "/Shared/common.ab3"
00004C40 <common.ab3@479> XINCLUDE "/Shared/common.ab3"
00004C42 <common.ab3@480> XINCLUDE "/Shared/common.ab3"
00004C46 <common.ab3@481> XINCLUDE "/Shared/common.ab3"
00004C48 <common.ab3@482> XINCLUDE "/Shared/common.ab3"
00004C4C <common.ab3@483> XINCLUDE "/Shared/common.ab3"
00004C4E <common.ab3@484> XINCLUDE "/Shared/common.ab3"
00004C52 <common.ab3@485> XINCLUDE "/Shared/common.ab3"
00004C54 <common.ab3@486> XINCLUDE "/Shared/common.ab3"
00004C58 <common.ab3@487> XINCLUDE "/Shared/common.ab3"
00004C5A <common.ab3@488> XINCLUDE "/Shared/common.ab3"
00004C5E <common.ab3@489> XINCLUDE "/Shared/common.ab3"
00004C60 <common.ab3@490> XINCLUDE "/Shared/common.ab3"
00004C64 <common.ab3@491> XINCLUDE "/Shared/common.ab3"
00004C66 <common.ab3@492> XINCLUDE "/Shared/common.ab3"
00004C6A <common.ab3@493> XINCLUDE "/Shared/common.ab3"
00004C6C <common.ab3@494> XINCLUDE "/Shared/common.ab3"
00004C70 <common.ab3@495> XINCLUDE "/Shared/common.ab3"
00004C72 <common.ab3@496> XINCLUDE "/Shared/common.ab3"
00004C76 <common.ab3@497> XINCLUDE "/Shared/common.ab3"
00004C78 <common.ab3@498> XINCLUDE "/Shared/common.ab3"
00004C7C <common.ab3@499> XINCLUDE "/Shared/common.ab3"
00004C7E <common.ab3@500> XINCLUDE "/Shared/common.ab3"
00004C82 <common.ab3@501> XINCLUDE "/Shared/common.ab3"
00004C84 <common.ab3@502> XINCLUDE "/Shared/common.ab3"
00004C98 <common.ab3@506> XINCLUDE "/Shared/common.ab3"
00004CAC <common.ab3@507> XINCLUDE "/Shared/common.ab3"
00004CC0 <common.ab3@508> XINCLUDE "/Shared/common.ab3"
00004CC2 <common.ab3@509> XINCLUDE "/Shared/common.ab3"
00004CC6 <common.ab3@510> XINCLUDE "/Shared/common.ab3"
00004CCA <common.ab3@511> XINCLUDE "/Shared/common.ab3"
00004CCE <common.ab3@512> XINCLUDE "/Shared/common.ab3"
00004CD2 <common.ab3@513> XINCLUDE "/Shared/common.ab3"
00004CD6 <common.ab3@514> XINCLUDE "/Shared/common.ab3"
00004CDA <common.ab3@515> XINCLUDE "/Shared/common.ab3"
00004CDE <common.ab3@516> XINCLUDE "/Shared/common.ab3"
00004CDF <common.ab3@517> XINCLUDE "/Shared/common.ab3"
00004CE0 <common.ab3@518> XINCLUDE "/Shared/common.ab3"
00004CE1 <common.ab3@519> XINCLUDE "/Shared/common.ab3"
00004CE4 <common.ab3@520> XINCLUDE "/Shared/common.ab3"
00004CE8 <common.ab3@521> XINCLUDE "/Shared/common.ab3"
00004CEC <common.ab3@522> XINCLUDE "/Shared/common.ab3"
00004CF0 <common.ab3@523> XINCLUDE "/Shared/common.ab3"
00004CF4 <common.ab3@524> XINCLUDE "/Shared/common.ab3"
00004CF8 <common.ab3@525> XINCLUDE "/Shared/common.ab3"
00004CFC <common.ab3@526> XINCLUDE "/Shared/common.ab3"
00004CFD <common.ab3@527> XINCLUDE "/Shared/common.ab3"
00004CFE <common.ab3@528> XINCLUDE "/Shared/common.ab3"
00004D00 <common.ab3@529> XINCLUDE "/Shared/common.ab3"
00004D04 <common.ab3@530> XINCLUDE "/Shared/common.ab3"
00004D08 <common.ab3@531> XINCLUDE "/Shared/common.ab3"
00004D0C <common.ab3@532> XINCLUDE "/Shared/common.ab3"
00004D10 <common.ab3@534> XINCLUDE "/Shared/common.ab3"
00004D14 <common.ab3@535> XINCLUDE "/Shared/common.ab3"
00004D18 <common.ab3@536> XINCLUDE "/Shared/common.ab3"
00004D1C <common.ab3@537> XINCLUDE "/Shared/common.ab3"
00004D20 <common.ab3@538> XINCLUDE "/Shared/common.ab3"
00004D24 <common.ab3@539> XINCLUDE "/Shared/common.ab3"
00004D28 <common.ab3@540> XINCLUDE "/Shared/common.ab3"
00004D2C <common.ab3@541> XINCLUDE "/Shared/common.ab3"
00004D30 <common.ab3@545> XINCLUDE "/Shared/common.ab3"
00004D34 <common.ab3@546> XINCLUDE "/Shared/common.ab3"
00004D38 <common.ab3@547> XINCLUDE "/Shared/common.ab3"
00004D3A <common.ab3@548> XINCLUDE "/Shared/common.ab3"
00004D3B <common.ab3@549> XINCLUDE "/Shared/common.ab3"
00004D3F <common.ab3@550> XINCLUDE "/Shared/common.ab3"
00004D43 <common.ab3@551> XINCLUDE "/Shared/common.ab3"
00004D47 <common.ab3@552> XINCLUDE "/Shared/common.ab3"
00004D4B <common.ab3@553> XINCLUDE "/Shared/common.ab3"
00004D4C <common.ab3@555> XINCLUDE "/Shared/common.ab3"
00004D50 <common.ab3@557> XINCLUDE "/Shared/common.ab3"
00004D54 <common.ab3@558> XINCLUDE "/Shared/common.ab3"
00004D58 <common.ab3@559> XINCLUDE "/Shared/common.ab3"
00004D5C <common.ab3@560> XINCLUDE "/Shared/common.ab3"
00004D60 <common.ab3@561> XINCLUDE "/Shared/common.ab3"
00004D61 <common.ab3@562> XINCLUDE "/Shared/common.ab3"
00004D62 <common.ab3@564> XINCLUDE "/Shared/common.ab3"
00004D66 <common.ab3@566> XINCLUDE "/Shared/common.ab3"
00004D6A <common.ab3@567> XINCLUDE "/Shared/common.ab3"
00004D6C <common.ab3@568> XINCLUDE "/Shared/common.ab3"
00004D6E <common.ab3@569> XINCLUDE "/Shared/common.ab3"
00004D72 <common.ab3@573> XINCLUDE "/Shared/common.ab3"
00004D76 <common.ab3@574> XINCLUDE "/Shared/common.ab3"
00004D7A <common.ab3@576> XINCLUDE "/Shared/common.ab3"
00004D7E <common.ab3@577> XINCLUDE "/Shared/common.ab3"
00004D82 <common.ab3@579> XINCLUDE "/Shared/common.ab3"
00004D86 <common.ab3@580> XINCLUDE "/Shared/common.ab3"
00004D8A <common.ab3@582> XINCLUDE "/Shared/common.ab3"
00004D8E <common.ab3@583> XINCLUDE "/Shared/common.ab3"
00004D92 <common.ab3@584> XINCLUDE "/Shared/common.ab3"
00004D96 <common.ab3@585> XINCLUDE "/Shared/common.ab3"
00004D9A <common.ab3@586> XINCLUDE "/Shared/common.ab3"
00004D9E <common.ab3@587> XINCLUDE "/Shared/common.ab3"
00004DA2 <common.ab3@588> XINCLUDE "/Shared/common.ab3"
00004DA6 <common.ab3@589> XINCLUDE "/Shared/common.ab3"
00004DAA <common.ab3@590> XINCLUDE "/Shared/common.ab3"
00004DAE <common.ab3@591> XINCLUDE "/Shared/common.ab3"
00004DB2 <common.ab3@592> XINCLUDE "/Shared/common.ab3"
00004DB6 <common.ab3@593> XINCLUDE "/Shared/common.ab3"
00004DBA <common.ab3@594> XINCLUDE "/Shared/common.ab3"
00004DBE <common.ab3@595> XINCLUDE "/Shared/common.ab3"
00004DBE <AmiBlitz3.ab2@86> XINCLUDE "/Shared/common.ab3"
00004DBE <preprocessor.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004DBE <hashmap.include.bb2@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004DDC <hashmap.include.bb2@36> XINCLUDE "/Shared/preprocessor.include.ab3"
00004DE4 <hashmap.include.bb2@38> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E12 <hashmap.include.bb2@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E42 <hashmap.include.bb2@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E52 <hashmap.include.bb2@41> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E5C <hashmap.include.bb2@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E62 <hashmap.include.bb2@45> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E84 <hashmap.include.bb2@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EA2 <hashmap.include.bb2@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EB4 <hashmap.include.bb2@51> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EDC <hashmap.include.bb2@52> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EE2 <hashmap.include.bb2@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EFC <hashmap.include.bb2@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F14 <hashmap.include.bb2@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F26 <hashmap.include.bb2@60> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F34 <hashmap.include.bb2@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F68 <hashmap.include.bb2@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F76 <hashmap.include.bb2@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F80 <hashmap.include.bb2@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F92 <hashmap.include.bb2@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FCC <hashmap.include.bb2@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FDC <hashmap.include.bb2@67> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FE2 <hashmap.include.bb2@69> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FF2 <hashmap.include.bb2@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00005002 <hashmap.include.bb2@72> XINCLUDE "/Shared/preprocessor.include.ab3"
00005010 <hashmap.include.bb2@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00005020 <hashmap.include.bb2@75> XINCLUDE "/Shared/preprocessor.include.ab3"
00005044 <hashmap.include.bb2@76> XINCLUDE "/Shared/preprocessor.include.ab3"
00005050 <hashmap.include.bb2@78> XINCLUDE "/Shared/preprocessor.include.ab3"
0000505E <hashmap.include.bb2@79> XINCLUDE "/Shared/preprocessor.include.ab3"
0000506C <hashmap.include.bb2@80> XINCLUDE "/Shared/preprocessor.include.ab3"
0000507A <hashmap.include.bb2@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00005088 <hashmap.include.bb2@82> XINCLUDE "/Shared/preprocessor.include.ab3"
000050BE <hashmap.include.bb2@83> XINCLUDE "/Shared/preprocessor.include.ab3"
000050CC <hashmap.include.bb2@84> XINCLUDE "/Shared/preprocessor.include.ab3"
000050DC <hashmap.include.bb2@85> XINCLUDE "/Shared/preprocessor.include.ab3"
000050E4 <hashmap.include.bb2@86> XINCLUDE "/Shared/preprocessor.include.ab3"
000050E8 <hashmap.include.bb2@88> XINCLUDE "/Shared/preprocessor.include.ab3"
00005102 <hashmap.include.bb2@91> XINCLUDE "/Shared/preprocessor.include.ab3"
0000511C <hashmap.include.bb2@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00005136 <hashmap.include.bb2@94> XINCLUDE "/Shared/preprocessor.include.ab3"
00005156 <hashmap.include.bb2@96> XINCLUDE "/Shared/preprocessor.include.ab3"
00005160 <hashmap.include.bb2@97> XINCLUDE "/Shared/preprocessor.include.ab3"
0000516C <hashmap.include.bb2@98> XINCLUDE "/Shared/preprocessor.include.ab3"
00005180 <hashmap.include.bb2@99> XINCLUDE "/Shared/preprocessor.include.ab3"
000051B2 <hashmap.include.bb2@100> XINCLUDE "/Shared/preprocessor.include.ab3"
000051CA <hashmap.include.bb2@101> XINCLUDE "/Shared/preprocessor.include.ab3"
000051D6 <hashmap.include.bb2@102> XINCLUDE "/Shared/preprocessor.include.ab3"
000051E4 <hashmap.include.bb2@103> XINCLUDE "/Shared/preprocessor.include.ab3"
000051F2 <hashmap.include.bb2@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00005200 <hashmap.include.bb2@105> XINCLUDE "/Shared/preprocessor.include.ab3"
0000520E <hashmap.include.bb2@106> XINCLUDE "/Shared/preprocessor.include.ab3"
00005238 <hashmap.include.bb2@107> XINCLUDE "/Shared/preprocessor.include.ab3"
00005242 <hashmap.include.bb2@110> XINCLUDE "/Shared/preprocessor.include.ab3"
00005248 <hashmap.include.bb2@112> XINCLUDE "/Shared/preprocessor.include.ab3"
00005276 <hashmap.include.bb2@115> XINCLUDE "/Shared/preprocessor.include.ab3"
0000528E <hashmap.include.bb2@117> XINCLUDE "/Shared/preprocessor.include.ab3"
000052AC <hashmap.include.bb2@118> XINCLUDE "/Shared/preprocessor.include.ab3"
000052C0 <hashmap.include.bb2@119> XINCLUDE "/Shared/preprocessor.include.ab3"
000052D8 <hashmap.include.bb2@120> XINCLUDE "/Shared/preprocessor.include.ab3"
00005300 <hashmap.include.bb2@121> XINCLUDE "/Shared/preprocessor.include.ab3"
00005318 <hashmap.include.bb2@122> XINCLUDE "/Shared/preprocessor.include.ab3"
00005326 <hashmap.include.bb2@123> XINCLUDE "/Shared/preprocessor.include.ab3"
00005334 <hashmap.include.bb2@124> XINCLUDE "/Shared/preprocessor.include.ab3"
00005342 <hashmap.include.bb2@125> XINCLUDE "/Shared/preprocessor.include.ab3"
00005356 <hashmap.include.bb2@126> XINCLUDE "/Shared/preprocessor.include.ab3"
000053AA <hashmap.include.bb2@127> XINCLUDE "/Shared/preprocessor.include.ab3"
000053D4 <hashmap.include.bb2@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00005418 <hashmap.include.bb2@130> XINCLUDE "/Shared/preprocessor.include.ab3"
00005438 <hashmap.include.bb2@131> XINCLUDE "/Shared/preprocessor.include.ab3"
0000544A <hashmap.include.bb2@132> XINCLUDE "/Shared/preprocessor.include.ab3"
0000546E <hashmap.include.bb2@133> XINCLUDE "/Shared/preprocessor.include.ab3"
0000547C <hashmap.include.bb2@134> XINCLUDE "/Shared/preprocessor.include.ab3"
000054D4 <hashmap.include.bb2@135> XINCLUDE "/Shared/preprocessor.include.ab3"
0000551A <hashmap.include.bb2@136> XINCLUDE "/Shared/preprocessor.include.ab3"
00005520 <hashmap.include.bb2@137> XINCLUDE "/Shared/preprocessor.include.ab3"
00005528 <hashmap.include.bb2@138> XINCLUDE "/Shared/preprocessor.include.ab3"
00005550 <hashmap.include.bb2@140> XINCLUDE "/Shared/preprocessor.include.ab3"
00005562 <hashmap.include.bb2@141> XINCLUDE "/Shared/preprocessor.include.ab3"
00005574 <hashmap.include.bb2@142> XINCLUDE "/Shared/preprocessor.include.ab3"
000055AE <hashmap.include.bb2@143> XINCLUDE "/Shared/preprocessor.include.ab3"
000055BE <hashmap.include.bb2@144> XINCLUDE "/Shared/preprocessor.include.ab3"
000055C4 <hashmap.include.bb2@146> XINCLUDE "/Shared/preprocessor.include.ab3"
000055D4 <hashmap.include.bb2@147> XINCLUDE "/Shared/preprocessor.include.ab3"
000055DA <hashmap.include.bb2@149> XINCLUDE "/Shared/preprocessor.include.ab3"
000055E0 <hashmap.include.bb2@151> XINCLUDE "/Shared/preprocessor.include.ab3"
000055F8 <hashmap.include.bb2@153> XINCLUDE "/Shared/preprocessor.include.ab3"
00005636 <hashmap.include.bb2@156> XINCLUDE "/Shared/preprocessor.include.ab3"
00005654 <hashmap.include.bb2@158> XINCLUDE "/Shared/preprocessor.include.ab3"
00005686 <hashmap.include.bb2@159> XINCLUDE "/Shared/preprocessor.include.ab3"
0000569A <hashmap.include.bb2@160> XINCLUDE "/Shared/preprocessor.include.ab3"
000056AE <hashmap.include.bb2@161> XINCLUDE "/Shared/preprocessor.include.ab3"
000056C6 <hashmap.include.bb2@162> XINCLUDE "/Shared/preprocessor.include.ab3"
000056EE <hashmap.include.bb2@164> XINCLUDE "/Shared/preprocessor.include.ab3"
000056F8 <hashmap.include.bb2@168> XINCLUDE "/Shared/preprocessor.include.ab3"
00005706 <hashmap.include.bb2@169> XINCLUDE "/Shared/preprocessor.include.ab3"
0000571E <hashmap.include.bb2@170> XINCLUDE "/Shared/preprocessor.include.ab3"
00005724 <hashmap.include.bb2@174> XINCLUDE "/Shared/preprocessor.include.ab3"
0000572C <hashmap.include.bb2@175> XINCLUDE "/Shared/preprocessor.include.ab3"
0000574C <hashmap.include.bb2@178> XINCLUDE "/Shared/preprocessor.include.ab3"
00005772 <hashmap.include.bb2@179> XINCLUDE "/Shared/preprocessor.include.ab3"
0000577C <hashmap.include.bb2@180> XINCLUDE "/Shared/preprocessor.include.ab3"
0000578A <hashmap.include.bb2@181> XINCLUDE "/Shared/preprocessor.include.ab3"
00005794 <hashmap.include.bb2@183> XINCLUDE "/Shared/preprocessor.include.ab3"
000057C0 <hashmap.include.bb2@184> XINCLUDE "/Shared/preprocessor.include.ab3"
000057D4 <hashmap.include.bb2@185> XINCLUDE "/Shared/preprocessor.include.ab3"
000057DA <hashmap.include.bb2@186> XINCLUDE "/Shared/preprocessor.include.ab3"
000057E8 <hashmap.include.bb2@187> XINCLUDE "/Shared/preprocessor.include.ab3"
0000581E <hashmap.include.bb2@190> XINCLUDE "/Shared/preprocessor.include.ab3"
0000586C <hashmap.include.bb2@191> XINCLUDE "/Shared/preprocessor.include.ab3"
00005894 <hashmap.include.bb2@193> XINCLUDE "/Shared/preprocessor.include.ab3"
000058AE <hashmap.include.bb2@194> XINCLUDE "/Shared/preprocessor.include.ab3"
000058C0 <hashmap.include.bb2@195> XINCLUDE "/Shared/preprocessor.include.ab3"
000058CA <hashmap.include.bb2@198> XINCLUDE "/Shared/preprocessor.include.ab3"
000058E6 <hashmap.include.bb2@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00005910 <hashmap.include.bb2@203> XINCLUDE "/Shared/preprocessor.include.ab3"
0000592E <hashmap.include.bb2@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00005952 <hashmap.include.bb2@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00005980 <hashmap.include.bb2@207> XINCLUDE "/Shared/preprocessor.include.ab3"
0000599A <hashmap.include.bb2@208> XINCLUDE "/Shared/preprocessor.include.ab3"
000059C2 <hashmap.include.bb2@209> XINCLUDE "/Shared/preprocessor.include.ab3"
000059E0 <hashmap.include.bb2@210> XINCLUDE "/Shared/preprocessor.include.ab3"
000059FC <hashmap.include.bb2@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A0A <hashmap.include.bb2@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A1E <hashmap.include.bb2@214> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A40 <hashmap.include.bb2@215> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A62 <hashmap.include.bb2@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A70 <hashmap.include.bb2@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A90 <hashmap.include.bb2@218> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AC0 <hashmap.include.bb2@219> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AC6 <hashmap.include.bb2@220> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AFA <hashmap.include.bb2@221> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B3C <hashmap.include.bb2@222> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B4C <hashmap.include.bb2@223> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B56 <hashmap.include.bb2@224> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B66 <hashmap.include.bb2@225> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B6C <hashmap.include.bb2@229> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B78 <hashmap.include.bb2@231> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B7E <hashmap.include.bb2@233> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BAC <hashmap.include.bb2@236> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BDC <hashmap.include.bb2@238> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C12 <hashmap.include.bb2@239> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C26 <hashmap.include.bb2@240> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C3E <hashmap.include.bb2@241> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C66 <hashmap.include.bb2@242> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C96 <hashmap.include.bb2@243> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CB2 <hashmap.include.bb2@244> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CC0 <hashmap.include.bb2@245> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CD4 <hashmap.include.bb2@246> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D28 <hashmap.include.bb2@247> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D52 <hashmap.include.bb2@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D96 <hashmap.include.bb2@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DBC <hashmap.include.bb2@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DC2 <hashmap.include.bb2@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DE0 <hashmap.include.bb2@254> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DFE <hashmap.include.bb2@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E1C <hashmap.include.bb2@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E22 <hashmap.include.bb2@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E48 <hashmap.include.bb2@293> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E76 <hashmap.include.bb2@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E9E <hashmap.include.bb2@296> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EC2 <hashmap.include.bb2@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F18 <hashmap.include.bb2@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F6A <hashmap.include.bb2@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FC0 <hashmap.include.bb2@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FD0 <hashmap.include.bb2@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00006022 <hashmap.include.bb2@306> XINCLUDE "/Shared/preprocessor.include.ab3"
0000604A <hashmap.include.bb2@307> XINCLUDE "/Shared/preprocessor.include.ab3"
00006070 <hashmap.include.bb2@308> XINCLUDE "/Shared/preprocessor.include.ab3"
0000608A <hashmap.include.bb2@309> XINCLUDE "/Shared/preprocessor.include.ab3"
00006092 <hashmap.include.bb2@310> XINCLUDE "/Shared/preprocessor.include.ab3"
000060BA <hashmap.include.bb2@311> XINCLUDE "/Shared/preprocessor.include.ab3"
000060E8 <hashmap.include.bb2@314> XINCLUDE "/Shared/preprocessor.include.ab3"
00006110 <hashmap.include.bb2@315> XINCLUDE "/Shared/preprocessor.include.ab3"
00006118 <hashmap.include.bb2@316> XINCLUDE "/Shared/preprocessor.include.ab3"
0000613C <hashmap.include.bb2@317> XINCLUDE "/Shared/preprocessor.include.ab3"
00006170 <hashmap.include.bb2@319> XINCLUDE "/Shared/preprocessor.include.ab3"
0000618C <hashmap.include.bb2@320> XINCLUDE "/Shared/preprocessor.include.ab3"
00006196 <hashmap.include.bb2@321> XINCLUDE "/Shared/preprocessor.include.ab3"
000061AA <hashmap.include.bb2@322> XINCLUDE "/Shared/preprocessor.include.ab3"
000061CA <hashmap.include.bb2@323> XINCLUDE "/Shared/preprocessor.include.ab3"
000061E6 <hashmap.include.bb2@324> XINCLUDE "/Shared/preprocessor.include.ab3"
000061F4 <hashmap.include.bb2@325> XINCLUDE "/Shared/preprocessor.include.ab3"
00006202 <hashmap.include.bb2@326> XINCLUDE "/Shared/preprocessor.include.ab3"
00006208 <hashmap.include.bb2@327> XINCLUDE "/Shared/preprocessor.include.ab3"
00006220 <hashmap.include.bb2@328> XINCLUDE "/Shared/preprocessor.include.ab3"
00006230 <hashmap.include.bb2@330> XINCLUDE "/Shared/preprocessor.include.ab3"
0000625E <hashmap.include.bb2@331> XINCLUDE "/Shared/preprocessor.include.ab3"
000062BA <hashmap.include.bb2@332> XINCLUDE "/Shared/preprocessor.include.ab3"
00006332 <hashmap.include.bb2@333> XINCLUDE "/Shared/preprocessor.include.ab3"
0000638E <hashmap.include.bb2@334> XINCLUDE "/Shared/preprocessor.include.ab3"
00006394 <hashmap.include.bb2@335> XINCLUDE "/Shared/preprocessor.include.ab3"
0000639E <hashmap.include.bb2@338> XINCLUDE "/Shared/preprocessor.include.ab3"
000063A4 <hashmap.include.bb2@340> XINCLUDE "/Shared/preprocessor.include.ab3"
000063D2 <hashmap.include.bb2@343> XINCLUDE "/Shared/preprocessor.include.ab3"
000063D8 <hashmap.include.bb2@345> XINCLUDE "/Shared/preprocessor.include.ab3"
000063F8 <hashmap.include.bb2@346> XINCLUDE "/Shared/preprocessor.include.ab3"
00006402 <hashmap.include.bb2@347> XINCLUDE "/Shared/preprocessor.include.ab3"
00006414 <hashmap.include.bb2@348> XINCLUDE "/Shared/preprocessor.include.ab3"
00006424 <hashmap.include.bb2@349> XINCLUDE "/Shared/preprocessor.include.ab3"
0000642E <hashmap.include.bb2@352> XINCLUDE "/Shared/preprocessor.include.ab3"
00006448 <hashmap.include.bb2@354> XINCLUDE "/Shared/preprocessor.include.ab3"
00006462 <hashmap.include.bb2@357> XINCLUDE "/Shared/preprocessor.include.ab3"
0000646A <hashmap.include.bb2@359> XINCLUDE "/Shared/preprocessor.include.ab3"
00006470 <hashmap.include.bb2@360> XINCLUDE "/Shared/preprocessor.include.ab3"
0000647A <hashmap.include.bb2@361> XINCLUDE "/Shared/preprocessor.include.ab3"
00006482 <hashmap.include.bb2@362> XINCLUDE "/Shared/preprocessor.include.ab3"
000064AA <hashmap.include.bb2@363> XINCLUDE "/Shared/preprocessor.include.ab3"
000064B0 <hashmap.include.bb2@364> XINCLUDE "/Shared/preprocessor.include.ab3"
000064C4 <hashmap.include.bb2@365> XINCLUDE "/Shared/preprocessor.include.ab3"
00006500 <hashmap.include.bb2@367> XINCLUDE "/Shared/preprocessor.include.ab3"
00006526 <hashmap.include.bb2@368> XINCLUDE "/Shared/preprocessor.include.ab3"
00006534 <hashmap.include.bb2@369> XINCLUDE "/Shared/preprocessor.include.ab3"
00006570 <hashmap.include.bb2@371> XINCLUDE "/Shared/preprocessor.include.ab3"
00006584 <hashmap.include.bb2@372> XINCLUDE "/Shared/preprocessor.include.ab3"
000065C0 <hashmap.include.bb2@374> XINCLUDE "/Shared/preprocessor.include.ab3"
000065D6 <hashmap.include.bb2@375> XINCLUDE "/Shared/preprocessor.include.ab3"
000065EA <hashmap.include.bb2@377> XINCLUDE "/Shared/preprocessor.include.ab3"
000065F4 <hashmap.include.bb2@378> XINCLUDE "/Shared/preprocessor.include.ab3"
00006618 <hashmap.include.bb2@379> XINCLUDE "/Shared/preprocessor.include.ab3"
00006650 <hashmap.include.bb2@380> XINCLUDE "/Shared/preprocessor.include.ab3"
00006656 <hashmap.include.bb2@381> XINCLUDE "/Shared/preprocessor.include.ab3"
00006662 <hashmap.include.bb2@382> XINCLUDE "/Shared/preprocessor.include.ab3"
00006676 <hashmap.include.bb2@385> XINCLUDE "/Shared/preprocessor.include.ab3"
00006680 <hashmap.include.bb2@386> XINCLUDE "/Shared/preprocessor.include.ab3"
000066A8 <hashmap.include.bb2@387> XINCLUDE "/Shared/preprocessor.include.ab3"
000066D0 <hashmap.include.bb2@388> XINCLUDE "/Shared/preprocessor.include.ab3"
000066E2 <hashmap.include.bb2@389> XINCLUDE "/Shared/preprocessor.include.ab3"
0000670E <hashmap.include.bb2@390> XINCLUDE "/Shared/preprocessor.include.ab3"
00006742 <hashmap.include.bb2@391> XINCLUDE "/Shared/preprocessor.include.ab3"
0000676E <hashmap.include.bb2@392> XINCLUDE "/Shared/preprocessor.include.ab3"
000067BA <hashmap.include.bb2@393> XINCLUDE "/Shared/preprocessor.include.ab3"
000067CA <hashmap.include.bb2@395> XINCLUDE "/Shared/preprocessor.include.ab3"
000067D0 <hashmap.include.bb2@397> XINCLUDE "/Shared/preprocessor.include.ab3"
000067DC <hashmap.include.bb2@398> XINCLUDE "/Shared/preprocessor.include.ab3"
0000680A <hashmap.include.bb2@401> XINCLUDE "/Shared/preprocessor.include.ab3"
0000680C <hashmap.include.bb2@403> XINCLUDE "/Shared/preprocessor.include.ab3"
00006812 <hashmap.include.bb2@404> XINCLUDE "/Shared/preprocessor.include.ab3"
0000681C <hashmap.include.bb2@406> XINCLUDE "/Shared/preprocessor.include.ab3"
00006846 <hashmap.include.bb2@407> XINCLUDE "/Shared/preprocessor.include.ab3"
00006850 <hashmap.include.bb2@410> XINCLUDE "/Shared/preprocessor.include.ab3"
00006856 <hashmap.include.bb2@412> XINCLUDE "/Shared/preprocessor.include.ab3"
00006880 <hashmap.include.bb2@415> XINCLUDE "/Shared/preprocessor.include.ab3"
00006888 <hashmap.include.bb2@417> XINCLUDE "/Shared/preprocessor.include.ab3"
000068A8 <hashmap.include.bb2@418> XINCLUDE "/Shared/preprocessor.include.ab3"
000068B2 <hashmap.include.bb2@419> XINCLUDE "/Shared/preprocessor.include.ab3"
000068C0 <hashmap.include.bb2@420> XINCLUDE "/Shared/preprocessor.include.ab3"
000068D0 <hashmap.include.bb2@421> XINCLUDE "/Shared/preprocessor.include.ab3"
000068DA <hashmap.include.bb2@424> XINCLUDE "/Shared/preprocessor.include.ab3"
000068F4 <hashmap.include.bb2@426> XINCLUDE "/Shared/preprocessor.include.ab3"
000068F4 <preprocessor.include.ab3@11> XINCLUDE "/Shared/preprocessor.include.ab3"
0000690E <preprocessor.include.ab3@29> XINCLUDE "/Shared/preprocessor.include.ab3"
00006928 <preprocessor.include.ab3@30> XINCLUDE "/Shared/preprocessor.include.ab3"
0000694A <preprocessor.include.ab3@31> XINCLUDE "/Shared/preprocessor.include.ab3"
0000697C <preprocessor.include.ab3@32> XINCLUDE "/Shared/preprocessor.include.ab3"
00006980 <preprocessor.include.ab3@33> XINCLUDE "/Shared/preprocessor.include.ab3"
0000699A <preprocessor.include.ab3@36> XINCLUDE "/Shared/preprocessor.include.ab3"
000069B4 <preprocessor.include.ab3@37> XINCLUDE "/Shared/preprocessor.include.ab3"
000069BE <preprocessor.include.ab3@38> XINCLUDE "/Shared/preprocessor.include.ab3"
000069D4 <preprocessor.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
000069D8 <preprocessor.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
000069F2 <preprocessor.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A0C <preprocessor.include.ab3@44> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A26 <preprocessor.include.ab3@45> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A4A <preprocessor.include.ab3@46> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A50 <preprocessor.include.ab3@47> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A7A <preprocessor.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A94 <preprocessor.include.ab3@49> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AA4 <preprocessor.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AAE <preprocessor.include.ab3@53> XINCLUDE "/Shared/preprocessor.include.ab3"
00006ABC <preprocessor.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00006ADE <preprocessor.include.ab3@55> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B12 <preprocessor.include.ab3@56> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B2E <preprocessor.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B38 <preprocessor.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B54 <preprocessor.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B62 <preprocessor.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B76 <preprocessor.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B98 <preprocessor.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BBA <preprocessor.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BD8 <preprocessor.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C06 <preprocessor.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C0C <preprocessor.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C1C <preprocessor.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C20 <preprocessor.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C36 <preprocessor.include.ab3@73> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C56 <preprocessor.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C60 <preprocessor.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C8A <preprocessor.include.ab3@76> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CA0 <preprocessor.include.ab3@77> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CB0 <preprocessor.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CCC <preprocessor.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CE8 <preprocessor.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D04 <preprocessor.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D20 <preprocessor.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D3C <preprocessor.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D58 <preprocessor.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D74 <preprocessor.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D90 <preprocessor.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DAC <preprocessor.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DC8 <preprocessor.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DE4 <preprocessor.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E00 <preprocessor.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E1C <preprocessor.include.ab3@92> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E38 <preprocessor.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E54 <preprocessor.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E70 <preprocessor.include.ab3@95> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E8C <preprocessor.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EA8 <preprocessor.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EC4 <preprocessor.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EE0 <preprocessor.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EFC <preprocessor.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F18 <preprocessor.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F34 <preprocessor.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F50 <preprocessor.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F6C <preprocessor.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F88 <preprocessor.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FA4 <preprocessor.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FC0 <preprocessor.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FDC <preprocessor.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FF8 <preprocessor.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
00007014 <preprocessor.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
00007030 <preprocessor.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
0000704C <preprocessor.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
00007068 <preprocessor.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
00007084 <preprocessor.include.ab3@114> XINCLUDE "/Shared/preprocessor.include.ab3"
000070A0 <preprocessor.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
000070BC <preprocessor.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
000070D8 <preprocessor.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
000070F4 <preprocessor.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
00007110 <preprocessor.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
0000712C <preprocessor.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
00007148 <preprocessor.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
00007164 <preprocessor.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
00007180 <preprocessor.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
0000719C <preprocessor.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
000071B8 <preprocessor.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
000071D4 <preprocessor.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
000071F0 <preprocessor.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
0000720C <preprocessor.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00007228 <preprocessor.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
00007244 <preprocessor.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
00007260 <preprocessor.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
0000727C <preprocessor.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
00007298 <preprocessor.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
000072B4 <preprocessor.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
000072D0 <preprocessor.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
000072EC <preprocessor.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
00007308 <preprocessor.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
00007324 <preprocessor.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
00007340 <preprocessor.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
0000735C <preprocessor.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
00007378 <preprocessor.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
00007394 <preprocessor.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
000073B0 <preprocessor.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
000073CC <preprocessor.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
000073E8 <preprocessor.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
00007404 <preprocessor.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
00007420 <preprocessor.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
0000743C <preprocessor.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
00007458 <preprocessor.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
00007474 <preprocessor.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
00007490 <preprocessor.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
000074AC <preprocessor.include.ab3@152> XINCLUDE "/Shared/preprocessor.include.ab3"
000074C8 <preprocessor.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
000074E4 <preprocessor.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
00007500 <preprocessor.include.ab3@155> XINCLUDE "/Shared/preprocessor.include.ab3"
0000751C <preprocessor.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
00007538 <preprocessor.include.ab3@157> XINCLUDE "/Shared/preprocessor.include.ab3"
00007554 <preprocessor.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
00007570 <preprocessor.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
0000758C <preprocessor.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
000075A8 <preprocessor.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
000075C4 <preprocessor.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
000075E0 <preprocessor.include.ab3@163> XINCLUDE "/Shared/preprocessor.include.ab3"
000075FC <preprocessor.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
00007618 <preprocessor.include.ab3@165> XINCLUDE "/Shared/preprocessor.include.ab3"
00007634 <preprocessor.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
00007650 <preprocessor.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
0000766C <preprocessor.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
00007688 <preprocessor.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
000076A4 <preprocessor.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
000076C0 <preprocessor.include.ab3@171> XINCLUDE "/Shared/preprocessor.include.ab3"
000076DC <preprocessor.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
000076F8 <preprocessor.include.ab3@173> XINCLUDE "/Shared/preprocessor.include.ab3"
00007714 <preprocessor.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
00007730 <preprocessor.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
0000774C <preprocessor.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
00007768 <preprocessor.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
00007784 <preprocessor.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
000077A0 <preprocessor.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
000077BC <preprocessor.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
000077D8 <preprocessor.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
000077F4 <preprocessor.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
00007810 <preprocessor.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
0000782C <preprocessor.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
00007848 <preprocessor.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
00007864 <preprocessor.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
00007880 <preprocessor.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
0000789C <preprocessor.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
000078B8 <preprocessor.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
000078D4 <preprocessor.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
000078F0 <preprocessor.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
0000790C <preprocessor.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00007928 <preprocessor.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00007944 <preprocessor.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00007960 <preprocessor.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
0000797C <preprocessor.include.ab3@196> XINCLUDE "/Shared/preprocessor.include.ab3"
00007998 <preprocessor.include.ab3@197> XINCLUDE "/Shared/preprocessor.include.ab3"
000079B4 <preprocessor.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
000079D0 <preprocessor.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
000079EC <preprocessor.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A08 <preprocessor.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A24 <preprocessor.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A40 <preprocessor.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A5C <preprocessor.include.ab3@204> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A78 <preprocessor.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A94 <preprocessor.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AB0 <preprocessor.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AB8 <preprocessor.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AC2 <preprocessor.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ACC <preprocessor.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AD2 <preprocessor.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B00 <preprocessor.include.ab3@247> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B1C <preprocessor.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B4E <preprocessor.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B58 <preprocessor.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B7A <preprocessor.include.ab3@251> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B84 <preprocessor.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B8E <preprocessor.include.ab3@253> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B98 <preprocessor.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BB2 <preprocessor.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BE0 <preprocessor.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BFC <preprocessor.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C0A <preprocessor.include.ab3@261> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C44 <preprocessor.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C4C <preprocessor.include.ab3@264> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C66 <preprocessor.include.ab3@265> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C8C <preprocessor.include.ab3@272> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CAE <preprocessor.include.ab3@273> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CD2 <preprocessor.include.ab3@274> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CD8 <preprocessor.include.ab3@275> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CE6 <preprocessor.include.ab3@276> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CEC <preprocessor.include.ab3@277> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CF4 <preprocessor.include.ab3@278> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CFA <preprocessor.include.ab3@279> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D02 <preprocessor.include.ab3@280> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D16 <preprocessor.include.ab3@282> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D3C <preprocessor.include.ab3@283> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D64 <preprocessor.include.ab3@284> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D6E <preprocessor.include.ab3@286> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D82 <preprocessor.include.ab3@287> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D96 <preprocessor.include.ab3@288> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DA6 <preprocessor.include.ab3@289> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DC0 <preprocessor.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DEE <preprocessor.include.ab3@291> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E02 <preprocessor.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E2A <preprocessor.include.ab3@293> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E30 <preprocessor.include.ab3@294> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E38 <preprocessor.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E3E <preprocessor.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E66 <preprocessor.include.ab3@298> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E70 <preprocessor.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E7E <preprocessor.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E9C <preprocessor.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EAA <preprocessor.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EB2 <preprocessor.include.ab3@304> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EB8 <preprocessor.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ECC <preprocessor.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ED6 <preprocessor.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EE4 <preprocessor.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EFE <preprocessor.include.ab3@312> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F04 <preprocessor.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F0C <preprocessor.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F12 <preprocessor.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F26 <preprocessor.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F30 <preprocessor.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F38 <preprocessor.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F4C <preprocessor.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F60 <preprocessor.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F74 <preprocessor.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F92 <preprocessor.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FA0 <preprocessor.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FB0 <preprocessor.include.ab3@331> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FD8 <preprocessor.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FFA <preprocessor.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
0000800E <preprocessor.include.ab3@336> XINCLUDE "/Shared/preprocessor.include.ab3"
0000802C <preprocessor.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
0000803A <preprocessor.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
00008060 <preprocessor.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
00008088 <preprocessor.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
000080AA <preprocessor.include.ab3@342> XINCLUDE "/Shared/preprocessor.include.ab3"
000080DA <preprocessor.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
00008108 <preprocessor.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
0000813A <preprocessor.include.ab3@350> XINCLUDE "/Shared/preprocessor.include.ab3"
00008148 <preprocessor.include.ab3@352> XINCLUDE "/Shared/preprocessor.include.ab3"
0000814E <preprocessor.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
0000815E <preprocessor.include.ab3@356> XINCLUDE "/Shared/preprocessor.include.ab3"
00008164 <preprocessor.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
0000818A <preprocessor.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
000081AC <preprocessor.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
000081D4 <preprocessor.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
000081F4 <preprocessor.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
00008216 <preprocessor.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
0000821C <preprocessor.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
0000822A <preprocessor.include.ab3@366> XINCLUDE "/Shared/preprocessor.include.ab3"
00008238 <preprocessor.include.ab3@367> XINCLUDE "/Shared/preprocessor.include.ab3"
0000823E <preprocessor.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
00008246 <preprocessor.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
00008264 <preprocessor.include.ab3@370> XINCLUDE "/Shared/preprocessor.include.ab3"
00008278 <preprocessor.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
00008288 <preprocessor.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
0000829E <preprocessor.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
000082B6 <preprocessor.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
000082D2 <preprocessor.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
000082DC <preprocessor.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
000082F8 <preprocessor.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
0000830A <preprocessor.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
00008338 <preprocessor.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
00008374 <preprocessor.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
00008384 <preprocessor.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
0000838A <preprocessor.include.ab3@384> XINCLUDE "/Shared/preprocessor.include.ab3"
00008390 <preprocessor.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
000083A8 <preprocessor.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
000083B8 <preprocessor.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
0000843E <preprocessor.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
00008478 <preprocessor.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
000084AE <preprocessor.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
000084BE <preprocessor.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
000084CC <preprocessor.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
000084D2 <preprocessor.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
000084E2 <preprocessor.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
0000850C <preprocessor.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
00008512 <preprocessor.include.ab3@399> XINCLUDE "/Shared/preprocessor.include.ab3"
0000853E <preprocessor.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
0000854E <preprocessor.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
0000855E <preprocessor.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
0000857C <preprocessor.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
0000858A <preprocessor.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
000085C0 <preprocessor.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
000085E4 <preprocessor.include.ab3@409> XINCLUDE "/Shared/preprocessor.include.ab3"
000085F8 <preprocessor.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
00008608 <preprocessor.include.ab3@414> XINCLUDE "/Shared/preprocessor.include.ab3"
00008626 <preprocessor.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
00008634 <preprocessor.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
00008658 <preprocessor.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
0000867C <preprocessor.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
0000868A <preprocessor.include.ab3@422> XINCLUDE "/Shared/preprocessor.include.ab3"
00008698 <preprocessor.include.ab3@423> XINCLUDE "/Shared/preprocessor.include.ab3"
000086B8 <preprocessor.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
000086C6 <preprocessor.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
000086CC <preprocessor.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
000086D2 <preprocessor.include.ab3@429> XINCLUDE "/Shared/preprocessor.include.ab3"
000086E0 <preprocessor.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
000086EE <preprocessor.include.ab3@432> XINCLUDE "/Shared/preprocessor.include.ab3"
0000870E <preprocessor.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
0000871C <preprocessor.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
00008722 <preprocessor.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
00008732 <preprocessor.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
0000873C <preprocessor.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
00008750 <preprocessor.include.ab3@443> XINCLUDE "/Shared/preprocessor.include.ab3"
00008776 <preprocessor.include.ab3@448> XINCLUDE "/Shared/preprocessor.include.ab3"
00008798 <preprocessor.include.ab3@449> XINCLUDE "/Shared/preprocessor.include.ab3"
000087C0 <preprocessor.include.ab3@450> XINCLUDE "/Shared/preprocessor.include.ab3"
000087C6 <preprocessor.include.ab3@451> XINCLUDE "/Shared/preprocessor.include.ab3"
000087D4 <preprocessor.include.ab3@452> XINCLUDE "/Shared/preprocessor.include.ab3"
000087DA <preprocessor.include.ab3@453> XINCLUDE "/Shared/preprocessor.include.ab3"
000087EE <preprocessor.include.ab3@454> XINCLUDE "/Shared/preprocessor.include.ab3"
000087FE <preprocessor.include.ab3@455> XINCLUDE "/Shared/preprocessor.include.ab3"
00008814 <preprocessor.include.ab3@457> XINCLUDE "/Shared/preprocessor.include.ab3"
0000882C <preprocessor.include.ab3@459> XINCLUDE "/Shared/preprocessor.include.ab3"
00008848 <preprocessor.include.ab3@460> XINCLUDE "/Shared/preprocessor.include.ab3"
00008852 <preprocessor.include.ab3@461> XINCLUDE "/Shared/preprocessor.include.ab3"
0000886E <preprocessor.include.ab3@462> XINCLUDE "/Shared/preprocessor.include.ab3"
0000889C <preprocessor.include.ab3@463> XINCLUDE "/Shared/preprocessor.include.ab3"
000088D8 <preprocessor.include.ab3@464> XINCLUDE "/Shared/preprocessor.include.ab3"
000088E8 <preprocessor.include.ab3@465> XINCLUDE "/Shared/preprocessor.include.ab3"
000088F6 <preprocessor.include.ab3@467> XINCLUDE "/Shared/preprocessor.include.ab3"
000088FC <preprocessor.include.ab3@468> XINCLUDE "/Shared/preprocessor.include.ab3"
0000890C <preprocessor.include.ab3@469> XINCLUDE "/Shared/preprocessor.include.ab3"
00008936 <preprocessor.include.ab3@470> XINCLUDE "/Shared/preprocessor.include.ab3"
0000893C <preprocessor.include.ab3@471> XINCLUDE "/Shared/preprocessor.include.ab3"
00008968 <preprocessor.include.ab3@472> XINCLUDE "/Shared/preprocessor.include.ab3"
00008978 <preprocessor.include.ab3@474> XINCLUDE "/Shared/preprocessor.include.ab3"
00008988 <preprocessor.include.ab3@476> XINCLUDE "/Shared/preprocessor.include.ab3"
000089A6 <preprocessor.include.ab3@477> XINCLUDE "/Shared/preprocessor.include.ab3"
000089B4 <preprocessor.include.ab3@478> XINCLUDE "/Shared/preprocessor.include.ab3"
000089EA <preprocessor.include.ab3@479> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A0E <preprocessor.include.ab3@480> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A22 <preprocessor.include.ab3@483> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A32 <preprocessor.include.ab3@485> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A50 <preprocessor.include.ab3@486> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A5E <preprocessor.include.ab3@487> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A82 <preprocessor.include.ab3@488> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AA6 <preprocessor.include.ab3@489> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AAC <preprocessor.include.ab3@493> XINCLUDE "/Shared/preprocessor.include.ab3"
00008ABC <preprocessor.include.ab3@494> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AC2 <preprocessor.include.ab3@495> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AE4 <preprocessor.include.ab3@499> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AEC <preprocessor.include.ab3@500> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B22 <preprocessor.include.ab3@501> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B3E <preprocessor.include.ab3@502> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B44 <preprocessor.include.ab3@503> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B7A <preprocessor.include.ab3@507> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B96 <preprocessor.include.ab3@508> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BBE <preprocessor.include.ab3@509> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BDC <preprocessor.include.ab3@510> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BFA <preprocessor.include.ab3@511> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C28 <preprocessor.include.ab3@512> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C8A <preprocessor.include.ab3@513> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CA4 <preprocessor.include.ab3@514> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CBE <preprocessor.include.ab3@518> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CC8 <preprocessor.include.ab3@519> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D06 <preprocessor.include.ab3@520> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D0A <preprocessor.include.ab3@521> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D14 <preprocessor.include.ab3@523> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D42 <preprocessor.include.ab3@524> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D62 <preprocessor.include.ab3@525> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D7A <preprocessor.include.ab3@526> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DD8 <preprocessor.include.ab3@527> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E04 <preprocessor.include.ab3@528> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E16 <preprocessor.include.ab3@529> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E26 <preprocessor.include.ab3@530> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E3E <preprocessor.include.ab3@531> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E44 <preprocessor.include.ab3@533> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E7E <preprocessor.include.ab3@534> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E88 <preprocessor.include.ab3@536> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E8E <preprocessor.include.ab3@537> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E98 <preprocessor.include.ab3@538> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EAA <preprocessor.include.ab3@539> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EAA <AmiBlitz3.ab2@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EAA <logging.include.ab3@1> XINCLUDE "PE/logging.include.bb2"
00008EAA <PE_Tools.include.ab3@1> XINCLUDE "PE/logging.include.bb2"
00008ECE <PE_Tools.include.ab3@75> XINCLUDE "PE/logging.include.bb2"
00008ED6 <PE_Tools.include.ab3@84> XINCLUDE "PE/logging.include.bb2"
00008F04 <PE_Tools.include.ab3@85> XINCLUDE "PE/logging.include.bb2"
00008F32 <PE_Tools.include.ab3@86> XINCLUDE "PE/logging.include.bb2"
00008FA2 <PE_Tools.include.ab3@87> XINCLUDE "PE/logging.include.bb2"
00008FB0 <PE_Tools.include.ab3@88> XINCLUDE "PE/logging.include.bb2"
00009000 <PE_Tools.include.ab3@89> XINCLUDE "PE/logging.include.bb2"
00009000 <logging.include.ab3@11> XINCLUDE "PE/logging.include.bb2"
00009000 <file.include.bb2@1> XINCLUDE "PE/logging.include.bb2"
00009000 <asl.include.ab3@1> XINCLUDE "PE/logging.include.bb2"
00009024 <asl.include.ab3@93> XINCLUDE "PE/logging.include.bb2"
0000904C <asl.include.ab3@94> XINCLUDE "PE/logging.include.bb2"
00009070 <asl.include.ab3@95> XINCLUDE "PE/logging.include.bb2"
0000909E <asl.include.ab3@294> XINCLUDE "PE/logging.include.bb2"
000092BC <asl.include.ab3@296> XINCLUDE "PE/logging.include.bb2"
000092EA <asl.include.ab3@298> XINCLUDE "PE/logging.include.bb2"
00009316 <asl.include.ab3@300> XINCLUDE "PE/logging.include.bb2"
00009352 <asl.include.ab3@301> XINCLUDE "PE/logging.include.bb2"
0000937E <asl.include.ab3@302> XINCLUDE "PE/logging.include.bb2"
000093AA <asl.include.ab3@303> XINCLUDE "PE/logging.include.bb2"
000093D6 <asl.include.ab3@304> XINCLUDE "PE/logging.include.bb2"
00009402 <asl.include.ab3@305> XINCLUDE "PE/logging.include.bb2"
0000942E <asl.include.ab3@306> XINCLUDE "PE/logging.include.bb2"
0000945A <asl.include.ab3@307> XINCLUDE "PE/logging.include.bb2"
00009486 <asl.include.ab3@308> XINCLUDE "PE/logging.include.bb2"
000094B2 <asl.include.ab3@309> XINCLUDE "PE/logging.include.bb2"
0000953C <asl.include.ab3@311> XINCLUDE "PE/logging.include.bb2"
000095C6 <asl.include.ab3@312> XINCLUDE "PE/logging.include.bb2"
00009664 <asl.include.ab3@313> XINCLUDE "PE/logging.include.bb2"
000096AE <asl.include.ab3@314> XINCLUDE "PE/logging.include.bb2"
000096EE <asl.include.ab3@315> XINCLUDE "PE/logging.include.bb2"
000096F4 <asl.include.ab3@316> XINCLUDE "PE/logging.include.bb2"
0000973E <asl.include.ab3@319> XINCLUDE "PE/logging.include.bb2"
0000977E <asl.include.ab3@320> XINCLUDE "PE/logging.include.bb2"
000097A8 <asl.include.ab3@321> XINCLUDE "PE/logging.include.bb2"
000097AE <asl.include.ab3@322> XINCLUDE "PE/logging.include.bb2"
000097D8 <asl.include.ab3@323> XINCLUDE "PE/logging.include.bb2"
00009802 <asl.include.ab3@325> XINCLUDE "PE/logging.include.bb2"
0000982C <asl.include.ab3@327> XINCLUDE "PE/logging.include.bb2"
00009836 <asl.include.ab3@328> XINCLUDE "PE/logging.include.bb2"
00009854 <asl.include.ab3@329> XINCLUDE "PE/logging.include.bb2"
00009876 <asl.include.ab3@330> XINCLUDE "PE/logging.include.bb2"
000098A4 <asl.include.ab3@331> XINCLUDE "PE/logging.include.bb2"
000098D2 <asl.include.ab3@332> XINCLUDE "PE/logging.include.bb2"
00009900 <asl.include.ab3@333> XINCLUDE "PE/logging.include.bb2"
00009946 <asl.include.ab3@336> XINCLUDE "PE/logging.include.bb2"
0000998C <asl.include.ab3@337> XINCLUDE "PE/logging.include.bb2"
000099D2 <asl.include.ab3@338> XINCLUDE "PE/logging.include.bb2"
00009A0A <asl.include.ab3@340> XINCLUDE "PE/logging.include.bb2"
00009B08 <asl.include.ab3@341> XINCLUDE "PE/logging.include.bb2"
00009B26 <asl.include.ab3@343> XINCLUDE "PE/logging.include.bb2"
00009B30 <asl.include.ab3@345> XINCLUDE "PE/logging.include.bb2"
00009B56 <asl.include.ab3@346> XINCLUDE "PE/logging.include.bb2"
00009B68 <asl.include.ab3@348> XINCLUDE "PE/logging.include.bb2"
00009B96 <asl.include.ab3@349> XINCLUDE "PE/logging.include.bb2"
00009BBE <asl.include.ab3@350> XINCLUDE "PE/logging.include.bb2"
00009BD0 <asl.include.ab3@351> XINCLUDE "PE/logging.include.bb2"
00009C26 <asl.include.ab3@352> XINCLUDE "PE/logging.include.bb2"
00009C5C <asl.include.ab3@353> XINCLUDE "PE/logging.include.bb2"
00009C6C <asl.include.ab3@355> XINCLUDE "PE/logging.include.bb2"
00009C72 <asl.include.ab3@356> XINCLUDE "PE/logging.include.bb2"
00009C84 <asl.include.ab3@357> XINCLUDE "PE/logging.include.bb2"
00009C8E <asl.include.ab3@358> XINCLUDE "PE/logging.include.bb2"
00009CC8 <asl.include.ab3@359> XINCLUDE "PE/logging.include.bb2"
00009CCE <asl.include.ab3@360> XINCLUDE "PE/logging.include.bb2"
00009D26 <asl.include.ab3@361> XINCLUDE "PE/logging.include.bb2"
00009D44 <asl.include.ab3@363> XINCLUDE "PE/logging.include.bb2"
00009D4A <asl.include.ab3@366> XINCLUDE "PE/logging.include.bb2"
00009D5A <asl.include.ab3@369> XINCLUDE "PE/logging.include.bb2"
00009D6A <asl.include.ab3@370> XINCLUDE "PE/logging.include.bb2"
00009D7A <asl.include.ab3@371> XINCLUDE "PE/logging.include.bb2"
00009D8A <asl.include.ab3@372> XINCLUDE "PE/logging.include.bb2"
00009D9A <asl.include.ab3@374> XINCLUDE "PE/logging.include.bb2"
00009DA4 <asl.include.ab3@376> XINCLUDE "PE/logging.include.bb2"
00009DB8 <asl.include.ab3@377> XINCLUDE "PE/logging.include.bb2"
00009DCE <asl.include.ab3@393> XINCLUDE "PE/logging.include.bb2"
00009DF6 <asl.include.ab3@395> XINCLUDE "PE/logging.include.bb2"
00009E00 <asl.include.ab3@396> XINCLUDE "PE/logging.include.bb2"
00009E12 <asl.include.ab3@397> XINCLUDE "PE/logging.include.bb2"
00009E4C <asl.include.ab3@398> XINCLUDE "PE/logging.include.bb2"
00009E56 <asl.include.ab3@399> XINCLUDE "PE/logging.include.bb2"
00009E80 <asl.include.ab3@401> XINCLUDE "PE/logging.include.bb2"
00009E98 <asl.include.ab3@402> XINCLUDE "PE/logging.include.bb2"
00009EEA <asl.include.ab3@438> XINCLUDE "PE/logging.include.bb2"
00009F18 <asl.include.ab3@440> XINCLUDE "PE/logging.include.bb2"
00009FAA <asl.include.ab3@441> XINCLUDE "PE/logging.include.bb2"
00009FF0 <asl.include.ab3@442> XINCLUDE "PE/logging.include.bb2"
0000A082 <asl.include.ab3@443> XINCLUDE "PE/logging.include.bb2"
0000A09C <asl.include.ab3@444> XINCLUDE "PE/logging.include.bb2"
0000A09C <file.include.bb2@57> XINCLUDE "PE/logging.include.bb2"
0000A0B2 <file.include.bb2@66> XINCLUDE "PE/logging.include.bb2"
0000A0C8 <file.include.bb2@67> XINCLUDE "PE/logging.include.bb2"
0000A0DE <file.include.bb2@68> XINCLUDE "PE/logging.include.bb2"
0000A0F4 <file.include.bb2@70> XINCLUDE "PE/logging.include.bb2"
0000A100 <file.include.bb2@72> XINCLUDE "PE/logging.include.bb2"
0000A10C <file.include.bb2@73> XINCLUDE "PE/logging.include.bb2"
0000A118 <file.include.bb2@74> XINCLUDE "PE/logging.include.bb2"
0000A124 <file.include.bb2@75> XINCLUDE "PE/logging.include.bb2"
0000A14C <file.include.bb2@77> XINCLUDE "PE/logging.include.bb2"
0000A174 <file.include.bb2@78> XINCLUDE "PE/logging.include.bb2"
0000A19C <file.include.bb2@79> XINCLUDE "PE/logging.include.bb2"
0000A1C0 <file.include.bb2@109> XINCLUDE "PE/logging.include.bb2"
0000A1E4 <file.include.bb2@110> XINCLUDE "PE/logging.include.bb2"
0000A1FE <file.include.bb2@156> XINCLUDE "PE/logging.include.bb2"
0000A20E <file.include.bb2@157> XINCLUDE "PE/logging.include.bb2"
0000A210 <file.include.bb2@158> XINCLUDE "PE/logging.include.bb2"
0000A212 <file.include.bb2@159> XINCLUDE "PE/logging.include.bb2"
0000A214 <file.include.bb2@160> XINCLUDE "PE/logging.include.bb2"
0000A216 <file.include.bb2@161> XINCLUDE "PE/logging.include.bb2"
0000A218 <file.include.bb2@162> XINCLUDE "PE/logging.include.bb2"
0000A21C <file.include.bb2@163> XINCLUDE "PE/logging.include.bb2"
0000A220 <file.include.bb2@164> XINCLUDE "PE/logging.include.bb2"
0000A224 <file.include.bb2@165> XINCLUDE "PE/logging.include.bb2"
0000A226 <file.include.bb2@166> XINCLUDE "PE/logging.include.bb2"
0000A228 <file.include.bb2@167> XINCLUDE "PE/logging.include.bb2"
0000A22A <file.include.bb2@168> XINCLUDE "PE/logging.include.bb2"
0000A22C <file.include.bb2@169> XINCLUDE "PE/logging.include.bb2"
0000A22E <file.include.bb2@170> XINCLUDE "PE/logging.include.bb2"
0000A230 <file.include.bb2@171> XINCLUDE "PE/logging.include.bb2"
0000A232 <file.include.bb2@172> XINCLUDE "PE/logging.include.bb2"
0000A23C <file.include.bb2@173> XINCLUDE "PE/logging.include.bb2"
0000A242 <file.include.bb2@174> XINCLUDE "PE/logging.include.bb2"
0000A25C <file.include.bb2@215> XINCLUDE "PE/logging.include.bb2"
0000A27A <file.include.bb2@217> XINCLUDE "PE/logging.include.bb2"
0000A280 <file.include.bb2@218> XINCLUDE "PE/logging.include.bb2"
0000A29A <file.include.bb2@237> XINCLUDE "PE/logging.include.bb2"
0000A2B6 <file.include.bb2@239> XINCLUDE "PE/logging.include.bb2"
0000A2DC <file.include.bb2@240> XINCLUDE "PE/logging.include.bb2"
0000A2FC <file.include.bb2@241> XINCLUDE "PE/logging.include.bb2"
0000A306 <file.include.bb2@242> XINCLUDE "PE/logging.include.bb2"
0000A332 <file.include.bb2@243> XINCLUDE "PE/logging.include.bb2"
0000A354 <file.include.bb2@244> XINCLUDE "PE/logging.include.bb2"
0000A36E <file.include.bb2@245> XINCLUDE "PE/logging.include.bb2"
0000A374 <file.include.bb2@248> XINCLUDE "PE/logging.include.bb2"
0000A3AE <file.include.bb2@249> XINCLUDE "PE/logging.include.bb2"
0000A3CC <file.include.bb2@251> XINCLUDE "PE/logging.include.bb2"
0000A3D2 <file.include.bb2@252> XINCLUDE "PE/logging.include.bb2"
0000A3F0 <file.include.bb2@271> XINCLUDE "PE/logging.include.bb2"
0000A3F6 <file.include.bb2@273> XINCLUDE "PE/logging.include.bb2"
0000A418 <file.include.bb2@274> XINCLUDE "PE/logging.include.bb2"
0000A438 <file.include.bb2@275> XINCLUDE "PE/logging.include.bb2"
0000A470 <file.include.bb2@276> XINCLUDE "PE/logging.include.bb2"
0000A48C <file.include.bb2@277> XINCLUDE "PE/logging.include.bb2"
0000A492 <file.include.bb2@278> XINCLUDE "PE/logging.include.bb2"
0000A498 <file.include.bb2@279> XINCLUDE "PE/logging.include.bb2"
0000A49E <file.include.bb2@281> XINCLUDE "PE/logging.include.bb2"
0000A4A4 <file.include.bb2@282> XINCLUDE "PE/logging.include.bb2"
0000A4C0 <file.include.bb2@283> XINCLUDE "PE/logging.include.bb2"
0000A50C <file.include.bb2@285> XINCLUDE "PE/logging.include.bb2"
0000A512 <file.include.bb2@286> XINCLUDE "PE/logging.include.bb2"
0000A54C <file.include.bb2@287> XINCLUDE "PE/logging.include.bb2"
0000A558 <file.include.bb2@288> XINCLUDE "PE/logging.include.bb2"
0000A574 <file.include.bb2@289> XINCLUDE "PE/logging.include.bb2"
0000A57A <file.include.bb2@291> XINCLUDE "PE/logging.include.bb2"
0000A5B4 <file.include.bb2@292> XINCLUDE "PE/logging.include.bb2"
0000A5BE <file.include.bb2@296> XINCLUDE "PE/logging.include.bb2"
0000A5C4 <file.include.bb2@297> XINCLUDE "PE/logging.include.bb2"
0000A5E2 <file.include.bb2@316> XINCLUDE "PE/logging.include.bb2"
0000A610 <file.include.bb2@318> XINCLUDE "PE/logging.include.bb2"
0000A616 <file.include.bb2@319> XINCLUDE "PE/logging.include.bb2"
0000A62C <file.include.bb2@335> XINCLUDE "PE/logging.include.bb2"
0000A634 <file.include.bb2@337> XINCLUDE "PE/logging.include.bb2"
0000A690 <file.include.bb2@338> XINCLUDE "PE/logging.include.bb2"
0000A69E <file.include.bb2@339> XINCLUDE "PE/logging.include.bb2"
0000A6A4 <file.include.bb2@340> XINCLUDE "PE/logging.include.bb2"
0000A6D6 <file.include.bb2@341> XINCLUDE "PE/logging.include.bb2"
0000A6E0 <file.include.bb2@342> XINCLUDE "PE/logging.include.bb2"
0000A6E6 <file.include.bb2@343> XINCLUDE "PE/logging.include.bb2"
0000A700 <file.include.bb2@397> XINCLUDE "PE/logging.include.bb2"
0000A712 <file.include.bb2@399> XINCLUDE "PE/logging.include.bb2"
0000A770 <file.include.bb2@400> XINCLUDE "PE/logging.include.bb2"
0000A7AA <file.include.bb2@401> XINCLUDE "PE/logging.include.bb2"
0000A7E4 <file.include.bb2@402> XINCLUDE "PE/logging.include.bb2"
0000A802 <file.include.bb2@403> XINCLUDE "PE/logging.include.bb2"
0000A820 <file.include.bb2@404> XINCLUDE "PE/logging.include.bb2"
0000A836 <file.include.bb2@405> XINCLUDE "PE/logging.include.bb2"
0000A852 <file.include.bb2@406> XINCLUDE "PE/logging.include.bb2"
0000A86C <file.include.bb2@407> XINCLUDE "PE/logging.include.bb2"
0000A8EA <file.include.bb2@408> XINCLUDE "PE/logging.include.bb2"
0000A8FC <file.include.bb2@410> XINCLUDE "PE/logging.include.bb2"
0000A912 <file.include.bb2@422> XINCLUDE "PE/logging.include.bb2"
0000A93C <file.include.bb2@424> XINCLUDE "PE/logging.include.bb2"
0000A946 <file.include.bb2@425> XINCLUDE "PE/logging.include.bb2"
0000A956 <file.include.bb2@426> XINCLUDE "PE/logging.include.bb2"
0000A95A <file.include.bb2@427> XINCLUDE "PE/logging.include.bb2"
0000A988 <file.include.bb2@428> XINCLUDE "PE/logging.include.bb2"
0000A9A2 <file.include.bb2@447> XINCLUDE "PE/logging.include.bb2"
0000A9B4 <file.include.bb2@449> XINCLUDE "PE/logging.include.bb2"
0000A9D4 <file.include.bb2@450> XINCLUDE "PE/logging.include.bb2"
0000A9EA <file.include.bb2@451> XINCLUDE "PE/logging.include.bb2"
0000AA22 <file.include.bb2@452> XINCLUDE "PE/logging.include.bb2"
0000AA4C <file.include.bb2@453> XINCLUDE "PE/logging.include.bb2"
0000AA76 <file.include.bb2@456> XINCLUDE "PE/logging.include.bb2"
0000AA8E <file.include.bb2@457> XINCLUDE "PE/logging.include.bb2"
0000AAA4 <file.include.bb2@525> XINCLUDE "PE/logging.include.bb2"
0000AAEC <file.include.bb2@527> XINCLUDE "PE/logging.include.bb2"
0000AB0C <file.include.bb2@528> XINCLUDE "PE/logging.include.bb2"
0000AB14 <file.include.bb2@529> XINCLUDE "PE/logging.include.bb2"
0000AB52 <file.include.bb2@568> XINCLUDE "PE/logging.include.bb2"
0000AB5E <file.include.bb2@570> XINCLUDE "PE/logging.include.bb2"
0000AB68 <file.include.bb2@571> XINCLUDE "PE/logging.include.bb2"
0000AB7A <file.include.bb2@572> XINCLUDE "PE/logging.include.bb2"
0000AB80 <file.include.bb2@573> XINCLUDE "PE/logging.include.bb2"
0000AB8E <file.include.bb2@574> XINCLUDE "PE/logging.include.bb2"
0000ABB6 <file.include.bb2@575> XINCLUDE "PE/logging.include.bb2"
0000ABCA <file.include.bb2@576> XINCLUDE "PE/logging.include.bb2"
0000ABF2 <file.include.bb2@577> XINCLUDE "PE/logging.include.bb2"
0000AC06 <file.include.bb2@578> XINCLUDE "PE/logging.include.bb2"
0000AC2E <file.include.bb2@579> XINCLUDE "PE/logging.include.bb2"
0000AC42 <file.include.bb2@580> XINCLUDE "PE/logging.include.bb2"
0000AC6A <file.include.bb2@581> XINCLUDE "PE/logging.include.bb2"
0000AC6C <file.include.bb2@582> XINCLUDE "PE/logging.include.bb2"
0000AC90 <file.include.bb2@584> XINCLUDE "PE/logging.include.bb2"
0000ACC8 <file.include.bb2@586> XINCLUDE "PE/logging.include.bb2"
0000AD52 <file.include.bb2@587> XINCLUDE "PE/logging.include.bb2"
0000AD7A <file.include.bb2@588> XINCLUDE "PE/logging.include.bb2"
0000ADAA <file.include.bb2@589> XINCLUDE "PE/logging.include.bb2"
0000ADE2 <file.include.bb2@593> XINCLUDE "PE/logging.include.bb2"
0000AE3A <file.include.bb2@594> XINCLUDE "PE/logging.include.bb2"
0000AE92 <file.include.bb2@595> XINCLUDE "PE/logging.include.bb2"
0000AF12 <file.include.bb2@597> XINCLUDE "PE/logging.include.bb2"
0000AF46 <file.include.bb2@598> XINCLUDE "PE/logging.include.bb2"
0000AF7A <file.include.bb2@599> XINCLUDE "PE/logging.include.bb2"
0000AF80 <file.include.bb2@600> XINCLUDE "PE/logging.include.bb2"
0000AF8E <file.include.bb2@601> XINCLUDE "PE/logging.include.bb2"
0000AFC2 <file.include.bb2@602> XINCLUDE "PE/logging.include.bb2"
0000AFEA <file.include.bb2@603> XINCLUDE "PE/logging.include.bb2"
0000B0A2 <file.include.bb2@604> XINCLUDE "PE/logging.include.bb2"
0000B122 <file.include.bb2@605> XINCLUDE "PE/logging.include.bb2"
0000B156 <file.include.bb2@606> XINCLUDE "PE/logging.include.bb2"
0000B176 <file.include.bb2@608> XINCLUDE "PE/logging.include.bb2"
0000B17C <file.include.bb2@609> XINCLUDE "PE/logging.include.bb2"
0000B182 <file.include.bb2@610> XINCLUDE "PE/logging.include.bb2"
0000B252 <file.include.bb2@611> XINCLUDE "PE/logging.include.bb2"
0000B266 <file.include.bb2@614> XINCLUDE "PE/logging.include.bb2"
0000B31E <file.include.bb2@615> XINCLUDE "PE/logging.include.bb2"
0000B39E <file.include.bb2@616> XINCLUDE "PE/logging.include.bb2"
0000B48E <file.include.bb2@617> XINCLUDE "PE/logging.include.bb2"
0000B498 <file.include.bb2@618> XINCLUDE "PE/logging.include.bb2"
0000B4CC <file.include.bb2@619> XINCLUDE "PE/logging.include.bb2"
0000B4EC <file.include.bb2@620> XINCLUDE "PE/logging.include.bb2"
0000B4F2 <file.include.bb2@621> XINCLUDE "PE/logging.include.bb2"
0000B4F8 <file.include.bb2@622> XINCLUDE "PE/logging.include.bb2"
0000B5C8 <file.include.bb2@623> XINCLUDE "PE/logging.include.bb2"
0000B5DC <file.include.bb2@627> XINCLUDE "PE/logging.include.bb2"
0000B610 <file.include.bb2@628> XINCLUDE "PE/logging.include.bb2"
0000B638 <file.include.bb2@629> XINCLUDE "PE/logging.include.bb2"
0000B6F0 <file.include.bb2@630> XINCLUDE "PE/logging.include.bb2"
0000B770 <file.include.bb2@631> XINCLUDE "PE/logging.include.bb2"
0000B7A4 <file.include.bb2@632> XINCLUDE "PE/logging.include.bb2"
0000B7C4 <file.include.bb2@635> XINCLUDE "PE/logging.include.bb2"
0000B7CA <file.include.bb2@636> XINCLUDE "PE/logging.include.bb2"
0000B7D0 <file.include.bb2@637> XINCLUDE "PE/logging.include.bb2"
0000B8A0 <file.include.bb2@638> XINCLUDE "PE/logging.include.bb2"
0000B8B4 <file.include.bb2@641> XINCLUDE "PE/logging.include.bb2"
0000B96C <file.include.bb2@642> XINCLUDE "PE/logging.include.bb2"
0000B9EC <file.include.bb2@643> XINCLUDE "PE/logging.include.bb2"
0000BA20 <file.include.bb2@644> XINCLUDE "PE/logging.include.bb2"
0000BA40 <file.include.bb2@645> XINCLUDE "PE/logging.include.bb2"
0000BA46 <file.include.bb2@646> XINCLUDE "PE/logging.include.bb2"
0000BA4C <file.include.bb2@647> XINCLUDE "PE/logging.include.bb2"
0000BB1C <file.include.bb2@648> XINCLUDE "PE/logging.include.bb2"
0000BB22 <file.include.bb2@651> XINCLUDE "PE/logging.include.bb2"
0000BB5C <file.include.bb2@652> XINCLUDE "PE/logging.include.bb2"
0000BB5E <file.include.bb2@653> XINCLUDE "PE/logging.include.bb2"
0000BB64 <file.include.bb2@655> XINCLUDE "PE/logging.include.bb2"
0000BBFC <file.include.bb2@656> XINCLUDE "PE/logging.include.bb2"
0000BC0E <file.include.bb2@659> XINCLUDE "PE/logging.include.bb2"
0000BC24 <file.include.bb2@660> XINCLUDE "PE/logging.include.bb2"
0000BC8E <file.include.bb2@661> XINCLUDE "PE/logging.include.bb2"
0000BCF8 <file.include.bb2@662> XINCLUDE "PE/logging.include.bb2"
0000BD12 <file.include.bb2@663> XINCLUDE "PE/logging.include.bb2"
0000BD2E <file.include.bb2@664> XINCLUDE "PE/logging.include.bb2"
0000BD4C <file.include.bb2@665> XINCLUDE "PE/logging.include.bb2"
0000BD66 <file.include.bb2@666> XINCLUDE "PE/logging.include.bb2"
0000BD70 <file.include.bb2@668> XINCLUDE "PE/logging.include.bb2"
0000BD8C <file.include.bb2@669> XINCLUDE "PE/logging.include.bb2"
0000BDAE <file.include.bb2@805> XINCLUDE "PE/logging.include.bb2"
0000BDB4 <file.include.bb2@807> XINCLUDE "PE/logging.include.bb2"
0000BDDA <file.include.bb2@808> XINCLUDE "PE/logging.include.bb2"
0000BDF6 <file.include.bb2@809> XINCLUDE "PE/logging.include.bb2"
0000BE08 <file.include.bb2@810> XINCLUDE "PE/logging.include.bb2"
0000BE66 <file.include.bb2@811> XINCLUDE "PE/logging.include.bb2"
0000BE9E <file.include.bb2@812> XINCLUDE "PE/logging.include.bb2"
0000BEA4 <file.include.bb2@813> XINCLUDE "PE/logging.include.bb2"
0000BEEC <file.include.bb2@814> XINCLUDE "PE/logging.include.bb2"
0000BF06 <file.include.bb2@815> XINCLUDE "PE/logging.include.bb2"
0000BF14 <file.include.bb2@818> XINCLUDE "PE/logging.include.bb2"
0000BF1A <file.include.bb2@819> XINCLUDE "PE/logging.include.bb2"
0000BF20 <file.include.bb2@820> XINCLUDE "PE/logging.include.bb2"
0000BF32 <file.include.bb2@821> XINCLUDE "PE/logging.include.bb2"
0000C01E <file.include.bb2@822> XINCLUDE "PE/logging.include.bb2"
0000C024 <file.include.bb2@823> XINCLUDE "PE/logging.include.bb2"
0000C06A <file.include.bb2@824> XINCLUDE "PE/logging.include.bb2"
0000C076 <file.include.bb2@825> XINCLUDE "PE/logging.include.bb2"
0000C0DC <file.include.bb2@826> XINCLUDE "PE/logging.include.bb2"
0000C122 <file.include.bb2@827> XINCLUDE "PE/logging.include.bb2"
0000C16A <file.include.bb2@830> XINCLUDE "PE/logging.include.bb2"
0000C1D2 <file.include.bb2@831> XINCLUDE "PE/logging.include.bb2"
0000C1D8 <file.include.bb2@832> XINCLUDE "PE/logging.include.bb2"
0000C212 <file.include.bb2@833> XINCLUDE "PE/logging.include.bb2"
0000C218 <file.include.bb2@835> XINCLUDE "PE/logging.include.bb2"
0000C27A <file.include.bb2@836> XINCLUDE "PE/logging.include.bb2"
0000C284 <file.include.bb2@838> XINCLUDE "PE/logging.include.bb2"
0000C298 <file.include.bb2@839> XINCLUDE "PE/logging.include.bb2"
0000C2B2 <file.include.bb2@841> XINCLUDE "PE/logging.include.bb2"
0000C2B8 <file.include.bb2@843> XINCLUDE "PE/logging.include.bb2"
0000C2DE <file.include.bb2@844> XINCLUDE "PE/logging.include.bb2"
0000C2FA <file.include.bb2@845> XINCLUDE "PE/logging.include.bb2"
0000C358 <file.include.bb2@846> XINCLUDE "PE/logging.include.bb2"
0000C35C <file.include.bb2@849> XINCLUDE "PE/logging.include.bb2"
0000C37E <file.include.bb2@867> XINCLUDE "PE/logging.include.bb2"
0000C384 <file.include.bb2@869> XINCLUDE "PE/logging.include.bb2"
0000C3A0 <file.include.bb2@870> XINCLUDE "PE/logging.include.bb2"
0000C3C0 <file.include.bb2@871> XINCLUDE "PE/logging.include.bb2"
0000C3FE <file.include.bb2@872> XINCLUDE "PE/logging.include.bb2"
0000C44C <file.include.bb2@873> XINCLUDE "PE/logging.include.bb2"
0000C482 <file.include.bb2@874> XINCLUDE "PE/logging.include.bb2"
0000C488 <file.include.bb2@875> XINCLUDE "PE/logging.include.bb2"
0000C48E <file.include.bb2@876> XINCLUDE "PE/logging.include.bb2"
0000C4BE <file.include.bb2@877> XINCLUDE "PE/logging.include.bb2"
0000C4C4 <file.include.bb2@878> XINCLUDE "PE/logging.include.bb2"
0000C4CA <file.include.bb2@880> XINCLUDE "PE/logging.include.bb2"
0000C4DC <file.include.bb2@881> XINCLUDE "PE/logging.include.bb2"
0000C53A <file.include.bb2@882> XINCLUDE "PE/logging.include.bb2"
0000C572 <file.include.bb2@883> XINCLUDE "PE/logging.include.bb2"
0000C578 <file.include.bb2@884> XINCLUDE "PE/logging.include.bb2"
0000C5C0 <file.include.bb2@885> XINCLUDE "PE/logging.include.bb2"
0000C5DA <file.include.bb2@886> XINCLUDE "PE/logging.include.bb2"
0000C5E8 <file.include.bb2@888> XINCLUDE "PE/logging.include.bb2"
0000C5EE <file.include.bb2@889> XINCLUDE "PE/logging.include.bb2"
0000C5F4 <file.include.bb2@890> XINCLUDE "PE/logging.include.bb2"
0000C606 <file.include.bb2@891> XINCLUDE "PE/logging.include.bb2"
0000C60C <file.include.bb2@892> XINCLUDE "PE/logging.include.bb2"
0000C612 <file.include.bb2@893> XINCLUDE "PE/logging.include.bb2"
0000C670 <file.include.bb2@894> XINCLUDE "PE/logging.include.bb2"
0000C6B8 <file.include.bb2@897> XINCLUDE "PE/logging.include.bb2"
0000C6C2 <file.include.bb2@900> XINCLUDE "PE/logging.include.bb2"
0000C6C8 <file.include.bb2@901> XINCLUDE "PE/logging.include.bb2"
0000C6E2 <file.include.bb2@955> XINCLUDE "PE/logging.include.bb2"
0000C6E8 <file.include.bb2@957> XINCLUDE "PE/logging.include.bb2"
0000C730 <file.include.bb2@958> XINCLUDE "PE/logging.include.bb2"
0000C76E <file.include.bb2@959> XINCLUDE "PE/logging.include.bb2"
0000C778 <file.include.bb2@960> XINCLUDE "PE/logging.include.bb2"
0000C77E <file.include.bb2@961> XINCLUDE "PE/logging.include.bb2"
0000C7A4 <file.include.bb2@1108> XINCLUDE "PE/logging.include.bb2"
0000C7AA <file.include.bb2@1110> XINCLUDE "PE/logging.include.bb2"
0000C7D0 <file.include.bb2@1111> XINCLUDE "PE/logging.include.bb2"
0000C830 <file.include.bb2@1112> XINCLUDE "PE/logging.include.bb2"
0000C84A <file.include.bb2@1113> XINCLUDE "PE/logging.include.bb2"
0000C854 <file.include.bb2@1114> XINCLUDE "PE/logging.include.bb2"
0000C86E <file.include.bb2@1115> XINCLUDE "PE/logging.include.bb2"
0000C878 <file.include.bb2@1116> XINCLUDE "PE/logging.include.bb2"
0000C890 <file.include.bb2@1117> XINCLUDE "PE/logging.include.bb2"
0000C8C0 <file.include.bb2@1118> XINCLUDE "PE/logging.include.bb2"
0000C8DC <file.include.bb2@1119> XINCLUDE "PE/logging.include.bb2"
0000C8EA <file.include.bb2@1120> XINCLUDE "PE/logging.include.bb2"
0000C8F0 <file.include.bb2@1123> XINCLUDE "PE/logging.include.bb2"
0000C92A <file.include.bb2@1124> XINCLUDE "PE/logging.include.bb2"
0000C934 <file.include.bb2@1126> XINCLUDE "PE/logging.include.bb2"
0000C93A <file.include.bb2@1127> XINCLUDE "PE/logging.include.bb2"
0000C958 <file.include.bb2@1148> XINCLUDE "PE/logging.include.bb2"
0000C95E <file.include.bb2@1150> XINCLUDE "PE/logging.include.bb2"
0000C970 <file.include.bb2@1151> XINCLUDE "PE/logging.include.bb2"
0000C97E <file.include.bb2@1152> XINCLUDE "PE/logging.include.bb2"
0000C99C <file.include.bb2@1153> XINCLUDE "PE/logging.include.bb2"
0000C9D2 <file.include.bb2@1154> XINCLUDE "PE/logging.include.bb2"
0000C9E4 <file.include.bb2@1155> XINCLUDE "PE/logging.include.bb2"
0000CA2E <file.include.bb2@1156> XINCLUDE "PE/logging.include.bb2"
0000CB18 <file.include.bb2@1157> XINCLUDE "PE/logging.include.bb2"
0000CB36 <file.include.bb2@1158> XINCLUDE "PE/logging.include.bb2"
0000CB5C <file.include.bb2@1160> XINCLUDE "PE/logging.include.bb2"
0000CB78 <file.include.bb2@1161> XINCLUDE "PE/logging.include.bb2"
0000CBA4 <file.include.bb2@1162> XINCLUDE "PE/logging.include.bb2"
0000CBAE <file.include.bb2@1163> XINCLUDE "PE/logging.include.bb2"
0000CBDC <file.include.bb2@1164> XINCLUDE "PE/logging.include.bb2"
0000CBF6 <file.include.bb2@1165> XINCLUDE "PE/logging.include.bb2"
0000CC12 <file.include.bb2@1166> XINCLUDE "PE/logging.include.bb2"
0000CC18 <file.include.bb2@1167> XINCLUDE "PE/logging.include.bb2"
0000CC52 <file.include.bb2@1168> XINCLUDE "PE/logging.include.bb2"
0000CC58 <file.include.bb2@1170> XINCLUDE "PE/logging.include.bb2"
0000CC5E <file.include.bb2@1171> XINCLUDE "PE/logging.include.bb2"
0000CC64 <file.include.bb2@1173> XINCLUDE "PE/logging.include.bb2"
0000CD04 <file.include.bb2@1174> XINCLUDE "PE/logging.include.bb2"
0000CD0A <file.include.bb2@1176> XINCLUDE "PE/logging.include.bb2"
0000CDAC <file.include.bb2@1177> XINCLUDE "PE/logging.include.bb2"
0000CDB2 <file.include.bb2@1179> XINCLUDE "PE/logging.include.bb2"
0000CDEC <file.include.bb2@1180> XINCLUDE "PE/logging.include.bb2"
0000CDF6 <file.include.bb2@1182> XINCLUDE "PE/logging.include.bb2"
0000CDFC <file.include.bb2@1183> XINCLUDE "PE/logging.include.bb2"
0000CE16 <file.include.bb2@1245> XINCLUDE "PE/logging.include.bb2"
0000CE34 <file.include.bb2@1247> XINCLUDE "PE/logging.include.bb2"
0000CE3A <file.include.bb2@1248> XINCLUDE "PE/logging.include.bb2"
0000CE54 <file.include.bb2@1398> XINCLUDE "PE/logging.include.bb2"
0000CE74 <file.include.bb2@1400> XINCLUDE "PE/logging.include.bb2"
0000CF28 <file.include.bb2@1401> XINCLUDE "PE/logging.include.bb2"
0000CF2E <file.include.bb2@1402> XINCLUDE "PE/logging.include.bb2"
0000CF34 <file.include.bb2@1403> XINCLUDE "PE/logging.include.bb2"
0000CF5E <file.include.bb2@1404> XINCLUDE "PE/logging.include.bb2"
0000CF6A <file.include.bb2@1406> XINCLUDE "PE/logging.include.bb2"
0000CF70 <file.include.bb2@1407> XINCLUDE "PE/logging.include.bb2"
0000CF8A <file.include.bb2@1593> XINCLUDE "PE/logging.include.bb2"
0000CF92 <file.include.bb2@1594> XINCLUDE "PE/logging.include.bb2"
0000CF9A <file.include.bb2@1595> XINCLUDE "PE/logging.include.bb2"
0000CFB0 <file.include.bb2@1596> XINCLUDE "PE/logging.include.bb2"
0000CFC8 <file.include.bb2@1597> XINCLUDE "PE/logging.include.bb2"
0000CFDA <file.include.bb2@1598> XINCLUDE "PE/logging.include.bb2"
0000CFE6 <file.include.bb2@1599> XINCLUDE "PE/logging.include.bb2"
0000CFEC <file.include.bb2@1600> XINCLUDE "PE/logging.include.bb2"
0000CFF4 <file.include.bb2@1601> XINCLUDE "PE/logging.include.bb2"
0000D02C <file.include.bb2@1602> XINCLUDE "PE/logging.include.bb2"
0000D03E <file.include.bb2@1603> XINCLUDE "PE/logging.include.bb2"
0000D062 <file.include.bb2@1604> XINCLUDE "PE/logging.include.bb2"
0000D074 <file.include.bb2@1605> XINCLUDE "PE/logging.include.bb2"
0000D080 <file.include.bb2@1606> XINCLUDE "PE/logging.include.bb2"
0000D086 <file.include.bb2@1607> XINCLUDE "PE/logging.include.bb2"
0000D096 <file.include.bb2@1608> XINCLUDE "PE/logging.include.bb2"
0000D0B4 <file.include.bb2@1613> XINCLUDE "PE/logging.include.bb2"
0000D0C6 <file.include.bb2@1616> XINCLUDE "PE/logging.include.bb2"
0000D112 <file.include.bb2@1617> XINCLUDE "PE/logging.include.bb2"
0000D118 <file.include.bb2@1619> XINCLUDE "PE/logging.include.bb2"
0000D142 <file.include.bb2@1621> XINCLUDE "PE/logging.include.bb2"
0000D15A <file.include.bb2@1622> XINCLUDE "PE/logging.include.bb2"
0000D188 <file.include.bb2@1706> XINCLUDE "PE/logging.include.bb2"
0000D19C <file.include.bb2@1707> XINCLUDE "PE/logging.include.bb2"
0000D1B2 <file.include.bb2@1708> XINCLUDE "PE/logging.include.bb2"
0000D1D2 <file.include.bb2@1709> XINCLUDE "PE/logging.include.bb2"
0000D1E8 <file.include.bb2@1710> XINCLUDE "PE/logging.include.bb2"
0000D1F2 <file.include.bb2@1711> XINCLUDE "PE/logging.include.bb2"
0000D20C <file.include.bb2@1712> XINCLUDE "PE/logging.include.bb2"
0000D22E <file.include.bb2@1787> XINCLUDE "PE/logging.include.bb2"
0000D246 <file.include.bb2@1789> XINCLUDE "PE/logging.include.bb2"
0000D268 <file.include.bb2@1790> XINCLUDE "PE/logging.include.bb2"
0000D26E <file.include.bb2@1791> XINCLUDE "PE/logging.include.bb2"
0000D2A0 <file.include.bb2@1811> XINCLUDE "PE/logging.include.bb2"
0000D2B4 <file.include.bb2@1813> XINCLUDE "PE/logging.include.bb2"
0000D2CC <file.include.bb2@1814> XINCLUDE "PE/logging.include.bb2"
0000D2E4 <file.include.bb2@1815> XINCLUDE "PE/logging.include.bb2"
0000D304 <file.include.bb2@1816> XINCLUDE "PE/logging.include.bb2"
0000D334 <file.include.bb2@1817> XINCLUDE "PE/logging.include.bb2"
0000D364 <file.include.bb2@1818> XINCLUDE "PE/logging.include.bb2"
0000D376 <file.include.bb2@1819> XINCLUDE "PE/logging.include.bb2"
0000D37E <file.include.bb2@1820> XINCLUDE "PE/logging.include.bb2"
0000D3A8 <file.include.bb2@1821> XINCLUDE "PE/logging.include.bb2"
0000D3B2 <file.include.bb2@1823> XINCLUDE "PE/logging.include.bb2"
0000D3CC <file.include.bb2@1824> XINCLUDE "PE/logging.include.bb2"
0000D3E6 <file.include.bb2@1841> XINCLUDE "PE/logging.include.bb2"
0000D404 <file.include.bb2@1843> XINCLUDE "PE/logging.include.bb2"
0000D424 <file.include.bb2@1844> XINCLUDE "PE/logging.include.bb2"
0000D46E <file.include.bb2@1845> XINCLUDE "PE/logging.include.bb2"
0000D488 <file.include.bb2@1846> XINCLUDE "PE/logging.include.bb2"
0000D49A <file.include.bb2@1847> XINCLUDE "PE/logging.include.bb2"
0000D4D0 <file.include.bb2@1848> XINCLUDE "PE/logging.include.bb2"
0000D4E2 <file.include.bb2@1849> XINCLUDE "PE/logging.include.bb2"
0000D4EA <file.include.bb2@1850> XINCLUDE "PE/logging.include.bb2"
0000D512 <file.include.bb2@1851> XINCLUDE "PE/logging.include.bb2"
0000D518 <file.include.bb2@1853> XINCLUDE "PE/logging.include.bb2"
0000D540 <file.include.bb2@1854> XINCLUDE "PE/logging.include.bb2"
0000D550 <file.include.bb2@1856> XINCLUDE "PE/logging.include.bb2"
0000D564 <file.include.bb2@1857> XINCLUDE "PE/logging.include.bb2"
0000D57A <file.include.bb2@1870> XINCLUDE "PE/logging.include.bb2"
0000D58A <file.include.bb2@1872> XINCLUDE "PE/logging.include.bb2"
0000D58E <file.include.bb2@1873> XINCLUDE "PE/logging.include.bb2"
0000D5A4 <file.include.bb2@1894> XINCLUDE "PE/logging.include.bb2"
0000D5CE <file.include.bb2@1896> XINCLUDE "PE/logging.include.bb2"
0000D5D6 <file.include.bb2@1897> XINCLUDE "PE/logging.include.bb2"
0000D5D6 <logging.include.ab3@13> XINCLUDE "PE/logging.include.bb2"
0000D674 <logging.include.ab3@35> XINCLUDE "PE/logging.include.bb2"
0000D67A <logging.include.ab3@36> XINCLUDE "PE/logging.include.bb2"
0000D680 <logging.include.ab3@37> XINCLUDE "PE/logging.include.bb2"
0000D686 <logging.include.ab3@38> XINCLUDE "PE/logging.include.bb2"
0000D6C0 <logging.include.ab3@129> XINCLUDE "PE/logging.include.bb2"
0000D6F2 <logging.include.ab3@131> XINCLUDE "PE/logging.include.bb2"
0000D700 <logging.include.ab3@132> XINCLUDE "PE/logging.include.bb2"
0000D730 <logging.include.ab3@133> XINCLUDE "PE/logging.include.bb2"
0000DAA0 <logging.include.ab3@134> XINCLUDE "PE/logging.include.bb2"
0000DAAE <logging.include.ab3@135> XINCLUDE "PE/logging.include.bb2"
0000DAB4 <logging.include.ab3@136> XINCLUDE "PE/logging.include.bb2"
0000DD46 <logging.include.ab3@137> XINCLUDE "PE/logging.include.bb2"
0000DD60 <logging.include.ab3@139> XINCLUDE "PE/logging.include.bb2"
0000DD9A <logging.include.ab3@142> XINCLUDE "PE/logging.include.bb2"
0000DDEC <logging.include.ab3@143> XINCLUDE "PE/logging.include.bb2"
0000DDFA <logging.include.ab3@144> XINCLUDE "PE/logging.include.bb2"
0000DE50 <logging.include.ab3@145> XINCLUDE "PE/logging.include.bb2"
0000DE56 <logging.include.ab3@146> XINCLUDE "PE/logging.include.bb2"
0000DED0 <logging.include.ab3@147> XINCLUDE "PE/logging.include.bb2"
0000DF44 <logging.include.ab3@148> XINCLUDE "PE/logging.include.bb2"
0000DF5E <logging.include.ab3@150> XINCLUDE "PE/logging.include.bb2"
0000DF5E <AmiBlitz3.ab2@89> XINCLUDE "PE/logging.include.bb2"
0000DF6A <AmiBlitz3.ab2@90> optimize 5                               ; added because the include change the optimize and or syntax level  tomsmart1
0000DF6A <translation.include.bb2@1> XINCLUDE "translation.include.bb2"
0000DF6A <phrasebook.include.bb2@1> XINCLUDE "translation.include.bb2"
0000DF6A <prefixtree.include.bb2@1> XINCLUDE "translation.include.bb2"
0000DF6A <dynamicarray.include.bb2@1> XINCLUDE "translation.include.bb2"
0000DF92 <dynamicarray.include.bb2@42> XINCLUDE "translation.include.bb2"
0000DFAC <dynamicarray.include.bb2@55> XINCLUDE "translation.include.bb2"
0000DFB6 <dynamicarray.include.bb2@56> XINCLUDE "translation.include.bb2"
0000DFC8 <dynamicarray.include.bb2@57> XINCLUDE "translation.include.bb2"
0000DFEC <dynamicarray.include.bb2@58> XINCLUDE "translation.include.bb2"
0000DFFA <dynamicarray.include.bb2@60> XINCLUDE "translation.include.bb2"
0000E006 <dynamicarray.include.bb2@61> XINCLUDE "translation.include.bb2"
0000E00A <dynamicarray.include.bb2@63> XINCLUDE "translation.include.bb2"
0000E028 <dynamicarray.include.bb2@99> XINCLUDE "translation.include.bb2"
0000E042 <dynamicarray.include.bb2@101> XINCLUDE "translation.include.bb2"
0000E062 <dynamicarray.include.bb2@102> XINCLUDE "translation.include.bb2"
0000E06C <dynamicarray.include.bb2@103> XINCLUDE "translation.include.bb2"
0000E07A <dynamicarray.include.bb2@104> XINCLUDE "translation.include.bb2"
0000E086 <dynamicarray.include.bb2@105> XINCLUDE "translation.include.bb2"
0000E094 <dynamicarray.include.bb2@106> XINCLUDE "translation.include.bb2"
0000E0A0 <dynamicarray.include.bb2@107> XINCLUDE "translation.include.bb2"
0000E0AC <dynamicarray.include.bb2@108> XINCLUDE "translation.include.bb2"
0000E0BE <dynamicarray.include.bb2@109> XINCLUDE "translation.include.bb2"
0000E0CE <dynamicarray.include.bb2@110> XINCLUDE "translation.include.bb2"
0000E0D8 <dynamicarray.include.bb2@113> XINCLUDE "translation.include.bb2"
0000E0DE <dynamicarray.include.bb2@114> XINCLUDE "translation.include.bb2"
0000E0F8 <dynamicarray.include.bb2@425> XINCLUDE "translation.include.bb2"
0000E102 <dynamicarray.include.bb2@427> XINCLUDE "translation.include.bb2"
0000E10C <dynamicarray.include.bb2@428> XINCLUDE "translation.include.bb2"
0000E11C <dynamicarray.include.bb2@429> XINCLUDE "translation.include.bb2"
0000E126 <dynamicarray.include.bb2@430> XINCLUDE "translation.include.bb2"
0000E138 <dynamicarray.include.bb2@431> XINCLUDE "translation.include.bb2"
0000E14E <dynamicarray.include.bb2@432> XINCLUDE "translation.include.bb2"
0000E158 <dynamicarray.include.bb2@433> XINCLUDE "translation.include.bb2"
0000E15E <dynamicarray.include.bb2@435> XINCLUDE "translation.include.bb2"
0000E162 <dynamicarray.include.bb2@437> XINCLUDE "translation.include.bb2"
0000E178 <dynamicarray.include.bb2@531> XINCLUDE "translation.include.bb2"
0000E17E <dynamicarray.include.bb2@533> XINCLUDE "translation.include.bb2"
0000E188 <dynamicarray.include.bb2@535> XINCLUDE "translation.include.bb2"
0000E1BE <dynamicarray.include.bb2@536> XINCLUDE "translation.include.bb2"
0000E1C8 <dynamicarray.include.bb2@537> XINCLUDE "translation.include.bb2"
0000E1CC <dynamicarray.include.bb2@538> XINCLUDE "translation.include.bb2"
0000E1FA <dynamicarray.include.bb2@539> XINCLUDE "translation.include.bb2"
0000E1FA <prefixtree.include.bb2@35> XINCLUDE "translation.include.bb2"
0000E214 <prefixtree.include.bb2@100> XINCLUDE "translation.include.bb2"
0000E21E <prefixtree.include.bb2@101> XINCLUDE "translation.include.bb2"
0000E246 <prefixtree.include.bb2@102> XINCLUDE "translation.include.bb2"
0000E268 <prefixtree.include.bb2@103> XINCLUDE "translation.include.bb2"
0000E284 <prefixtree.include.bb2@104> XINCLUDE "translation.include.bb2"
0000E294 <prefixtree.include.bb2@105> XINCLUDE "translation.include.bb2"
0000E298 <prefixtree.include.bb2@107> XINCLUDE "translation.include.bb2"
0000E2B2 <prefixtree.include.bb2@123> XINCLUDE "translation.include.bb2"
0000E2D2 <prefixtree.include.bb2@124> XINCLUDE "translation.include.bb2"
0000E2DC <prefixtree.include.bb2@125> XINCLUDE "translation.include.bb2"
0000E2F6 <prefixtree.include.bb2@126> XINCLUDE "translation.include.bb2"
0000E304 <prefixtree.include.bb2@127> XINCLUDE "translation.include.bb2"
0000E312 <prefixtree.include.bb2@128> XINCLUDE "translation.include.bb2"
0000E320 <prefixtree.include.bb2@129> XINCLUDE "translation.include.bb2"
0000E32E <prefixtree.include.bb2@130> XINCLUDE "translation.include.bb2"
0000E33A <prefixtree.include.bb2@131> XINCLUDE "translation.include.bb2"
0000E348 <prefixtree.include.bb2@132> XINCLUDE "translation.include.bb2"
0000E356 <prefixtree.include.bb2@133> XINCLUDE "translation.include.bb2"
0000E364 <prefixtree.include.bb2@134> XINCLUDE "translation.include.bb2"
0000E372 <prefixtree.include.bb2@135> XINCLUDE "translation.include.bb2"
0000E38C <prefixtree.include.bb2@136> XINCLUDE "translation.include.bb2"
0000E39A <prefixtree.include.bb2@137> XINCLUDE "translation.include.bb2"
0000E3AA <prefixtree.include.bb2@138> XINCLUDE "translation.include.bb2"
0000E3BA <prefixtree.include.bb2@139> XINCLUDE "translation.include.bb2"
0000E3CA <prefixtree.include.bb2@140> XINCLUDE "translation.include.bb2"
0000E3D8 <prefixtree.include.bb2@141> XINCLUDE "translation.include.bb2"
0000E3E2 <prefixtree.include.bb2@143> XINCLUDE "translation.include.bb2"
0000E3E8 <prefixtree.include.bb2@144> XINCLUDE "translation.include.bb2"
0000E406 <prefixtree.include.bb2@162> XINCLUDE "translation.include.bb2"
0000E40C <prefixtree.include.bb2@163> XINCLUDE "translation.include.bb2"
0000E416 <prefixtree.include.bb2@164> XINCLUDE "translation.include.bb2"
0000E436 <prefixtree.include.bb2@165> XINCLUDE "translation.include.bb2"
0000E464 <prefixtree.include.bb2@166> XINCLUDE "translation.include.bb2"
0000E482 <prefixtree.include.bb2@167> XINCLUDE "translation.include.bb2"
0000E48C <prefixtree.include.bb2@168> XINCLUDE "translation.include.bb2"
0000E49E <prefixtree.include.bb2@169> XINCLUDE "translation.include.bb2"
0000E4CA <prefixtree.include.bb2@170> XINCLUDE "translation.include.bb2"
0000E4E0 <prefixtree.include.bb2@171> XINCLUDE "translation.include.bb2"
0000E4EC <prefixtree.include.bb2@173> XINCLUDE "translation.include.bb2"
0000E4F8 <prefixtree.include.bb2@174> XINCLUDE "translation.include.bb2"
0000E4FE <prefixtree.include.bb2@175> XINCLUDE "translation.include.bb2"
0000E504 <prefixtree.include.bb2@176> XINCLUDE "translation.include.bb2"
0000E50A <prefixtree.include.bb2@177> XINCLUDE "translation.include.bb2"
0000E510 <prefixtree.include.bb2@179> XINCLUDE "translation.include.bb2"
0000E516 <prefixtree.include.bb2@180> XINCLUDE "translation.include.bb2"
0000E520 <prefixtree.include.bb2@183> XINCLUDE "translation.include.bb2"
0000E526 <prefixtree.include.bb2@184> XINCLUDE "translation.include.bb2"
0000E558 <prefixtree.include.bb2@204> XINCLUDE "translation.include.bb2"
0000E572 <prefixtree.include.bb2@205> XINCLUDE "translation.include.bb2"
0000E58A <prefixtree.include.bb2@206> XINCLUDE "translation.include.bb2"
0000E59E <prefixtree.include.bb2@207> XINCLUDE "translation.include.bb2"
0000E5EE <prefixtree.include.bb2@208> XINCLUDE "translation.include.bb2"
0000E60E <prefixtree.include.bb2@210> XINCLUDE "translation.include.bb2"
0000E622 <prefixtree.include.bb2@211> XINCLUDE "translation.include.bb2"
0000E630 <prefixtree.include.bb2@212> XINCLUDE "translation.include.bb2"
0000E63C <prefixtree.include.bb2@213> XINCLUDE "translation.include.bb2"
0000E644 <prefixtree.include.bb2@214> XINCLUDE "translation.include.bb2"
0000E64C <prefixtree.include.bb2@215> XINCLUDE "translation.include.bb2"
0000E654 <prefixtree.include.bb2@216> XINCLUDE "translation.include.bb2"
0000E65C <prefixtree.include.bb2@217> XINCLUDE "translation.include.bb2"
0000E662 <prefixtree.include.bb2@218> XINCLUDE "translation.include.bb2"
0000E670 <prefixtree.include.bb2@219> XINCLUDE "translation.include.bb2"
0000E692 <prefixtree.include.bb2@221> XINCLUDE "translation.include.bb2"
0000E6BE <prefixtree.include.bb2@222> XINCLUDE "translation.include.bb2"
0000E6D0 <prefixtree.include.bb2@224> XINCLUDE "translation.include.bb2"
0000E6D6 <prefixtree.include.bb2@225> XINCLUDE "translation.include.bb2"
0000E6FE <prefixtree.include.bb2@227> XINCLUDE "translation.include.bb2"
0000E722 <prefixtree.include.bb2@228> XINCLUDE "translation.include.bb2"
0000E74A <prefixtree.include.bb2@229> XINCLUDE "translation.include.bb2"
0000E77E <prefixtree.include.bb2@230> XINCLUDE "translation.include.bb2"
0000E78E <prefixtree.include.bb2@231> XINCLUDE "translation.include.bb2"
0000E798 <prefixtree.include.bb2@232> XINCLUDE "translation.include.bb2"
0000E7A6 <prefixtree.include.bb2@233> XINCLUDE "translation.include.bb2"
0000E7BA <prefixtree.include.bb2@234> XINCLUDE "translation.include.bb2"
0000E7C0 <prefixtree.include.bb2@235> XINCLUDE "translation.include.bb2"
0000E7E0 <prefixtree.include.bb2@236> XINCLUDE "translation.include.bb2"
0000E7E6 <prefixtree.include.bb2@237> XINCLUDE "translation.include.bb2"
0000E7EE <prefixtree.include.bb2@239> XINCLUDE "translation.include.bb2"
0000E828 <prefixtree.include.bb2@241> XINCLUDE "translation.include.bb2"
0000E84E <prefixtree.include.bb2@242> XINCLUDE "translation.include.bb2"
0000E866 <prefixtree.include.bb2@243> XINCLUDE "translation.include.bb2"
0000E89A <prefixtree.include.bb2@244> XINCLUDE "translation.include.bb2"
0000E8A2 <prefixtree.include.bb2@245> XINCLUDE "translation.include.bb2"
0000E8B0 <prefixtree.include.bb2@247> XINCLUDE "translation.include.bb2"
0000E8B6 <prefixtree.include.bb2@249> XINCLUDE "translation.include.bb2"
0000E8CE <prefixtree.include.bb2@250> XINCLUDE "translation.include.bb2"
0000E8D4 <prefixtree.include.bb2@251> XINCLUDE "translation.include.bb2"
0000E8DA <prefixtree.include.bb2@252> XINCLUDE "translation.include.bb2"
0000E8F4 <prefixtree.include.bb2@253> XINCLUDE "translation.include.bb2"
0000E8FA <prefixtree.include.bb2@256> XINCLUDE "translation.include.bb2"
0000E900 <prefixtree.include.bb2@258> XINCLUDE "translation.include.bb2"
0000E906 <prefixtree.include.bb2@260> XINCLUDE "translation.include.bb2"
0000E914 <prefixtree.include.bb2@261> XINCLUDE "translation.include.bb2"
0000E922 <prefixtree.include.bb2@262> XINCLUDE "translation.include.bb2"
0000E95C <prefixtree.include.bb2@264> XINCLUDE "translation.include.bb2"
0000E982 <prefixtree.include.bb2@265> XINCLUDE "translation.include.bb2"
0000E99A <prefixtree.include.bb2@266> XINCLUDE "translation.include.bb2"
0000E9A6 <prefixtree.include.bb2@269> XINCLUDE "translation.include.bb2"
0000E9B2 <prefixtree.include.bb2@270> XINCLUDE "translation.include.bb2"
0000E9BE <prefixtree.include.bb2@271> XINCLUDE "translation.include.bb2"
0000E9CA <prefixtree.include.bb2@272> XINCLUDE "translation.include.bb2"
0000E9D6 <prefixtree.include.bb2@273> XINCLUDE "translation.include.bb2"
0000E9E0 <prefixtree.include.bb2@274> XINCLUDE "translation.include.bb2"
0000E9E8 <prefixtree.include.bb2@276> XINCLUDE "translation.include.bb2"
0000EA02 <prefixtree.include.bb2@277> XINCLUDE "translation.include.bb2"
0000EA40 <prefixtree.include.bb2@324> XINCLUDE "translation.include.bb2"
0000EA46 <prefixtree.include.bb2@325> XINCLUDE "translation.include.bb2"
0000EA86 <prefixtree.include.bb2@326> XINCLUDE "translation.include.bb2"
0000EADC <prefixtree.include.bb2@327> XINCLUDE "translation.include.bb2"
0000EB4E <prefixtree.include.bb2@328> XINCLUDE "translation.include.bb2"
0000EB5A <prefixtree.include.bb2@330> XINCLUDE "translation.include.bb2"
0000EB68 <prefixtree.include.bb2@331> XINCLUDE "translation.include.bb2"
0000EBAE <prefixtree.include.bb2@332> XINCLUDE "translation.include.bb2"
0000EBF8 <prefixtree.include.bb2@333> XINCLUDE "translation.include.bb2"
0000EC30 <prefixtree.include.bb2@334> XINCLUDE "translation.include.bb2"
0000EC84 <prefixtree.include.bb2@335> XINCLUDE "translation.include.bb2"
0000EC8A <prefixtree.include.bb2@336> XINCLUDE "translation.include.bb2"
0000EC90 <prefixtree.include.bb2@337> XINCLUDE "translation.include.bb2"
0000EC9E <prefixtree.include.bb2@339> XINCLUDE "translation.include.bb2"
0000ECA6 <prefixtree.include.bb2@340> XINCLUDE "translation.include.bb2"
0000ECE0 <prefixtree.include.bb2@342> XINCLUDE "translation.include.bb2"
0000ED06 <prefixtree.include.bb2@343> XINCLUDE "translation.include.bb2"
0000ED1E <prefixtree.include.bb2@344> XINCLUDE "translation.include.bb2"
0000ED54 <prefixtree.include.bb2@345> XINCLUDE "translation.include.bb2"
0000ED6A <prefixtree.include.bb2@346> XINCLUDE "translation.include.bb2"
0000ED78 <prefixtree.include.bb2@348> XINCLUDE "translation.include.bb2"
0000ED90 <prefixtree.include.bb2@349> XINCLUDE "translation.include.bb2"
0000EDC8 <prefixtree.include.bb2@350> XINCLUDE "translation.include.bb2"
0000EDEE <prefixtree.include.bb2@351> XINCLUDE "translation.include.bb2"
0000EE36 <prefixtree.include.bb2@352> XINCLUDE "translation.include.bb2"
0000EE3C <prefixtree.include.bb2@353> XINCLUDE "translation.include.bb2"
0000EE56 <prefixtree.include.bb2@355> XINCLUDE "translation.include.bb2"
0000EE62 <prefixtree.include.bb2@356> XINCLUDE "translation.include.bb2"
0000EE68 <prefixtree.include.bb2@357> XINCLUDE "translation.include.bb2"
0000EE94 <prefixtree.include.bb2@358> XINCLUDE "translation.include.bb2"
0000EEA8 <prefixtree.include.bb2@363> XINCLUDE "translation.include.bb2"
0000EEB6 <prefixtree.include.bb2@365> XINCLUDE "translation.include.bb2"
0000EEBE <prefixtree.include.bb2@366> XINCLUDE "translation.include.bb2"
0000EEF8 <prefixtree.include.bb2@368> XINCLUDE "translation.include.bb2"
0000EF1E <prefixtree.include.bb2@369> XINCLUDE "translation.include.bb2"
0000EF36 <prefixtree.include.bb2@370> XINCLUDE "translation.include.bb2"
0000EF70 <prefixtree.include.bb2@371> XINCLUDE "translation.include.bb2"
0000EF9A <prefixtree.include.bb2@372> XINCLUDE "translation.include.bb2"
0000EFB2 <prefixtree.include.bb2@373> XINCLUDE "translation.include.bb2"
0000EFE2 <prefixtree.include.bb2@374> XINCLUDE "translation.include.bb2"
0000F00E <prefixtree.include.bb2@375> XINCLUDE "translation.include.bb2"
0000F02A <prefixtree.include.bb2@376> XINCLUDE "translation.include.bb2"
0000F038 <prefixtree.include.bb2@378> XINCLUDE "translation.include.bb2"
0000F046 <prefixtree.include.bb2@379> XINCLUDE "translation.include.bb2"
0000F084 <prefixtree.include.bb2@380> XINCLUDE "translation.include.bb2"
0000F0C0 <prefixtree.include.bb2@381> XINCLUDE "translation.include.bb2"
0000F12C <prefixtree.include.bb2@382> XINCLUDE "translation.include.bb2"
0000F15A <prefixtree.include.bb2@383> XINCLUDE "translation.include.bb2"
0000F188 <prefixtree.include.bb2@384> XINCLUDE "translation.include.bb2"
0000F1D0 <prefixtree.include.bb2@385> XINCLUDE "translation.include.bb2"
0000F1EA <prefixtree.include.bb2@388> XINCLUDE "translation.include.bb2"
0000F232 <prefixtree.include.bb2@389> XINCLUDE "translation.include.bb2"
0000F250 <prefixtree.include.bb2@390> XINCLUDE "translation.include.bb2"
0000F26E <prefixtree.include.bb2@391> XINCLUDE "translation.include.bb2"
0000F288 <prefixtree.include.bb2@394> XINCLUDE "translation.include.bb2"
0000F294 <prefixtree.include.bb2@395> XINCLUDE "translation.include.bb2"
0000F29A <prefixtree.include.bb2@396> XINCLUDE "translation.include.bb2"
0000F2C6 <prefixtree.include.bb2@397> XINCLUDE "translation.include.bb2"
0000F2DE <prefixtree.include.bb2@399> XINCLUDE "translation.include.bb2"
0000F2E4 <prefixtree.include.bb2@400> XINCLUDE "translation.include.bb2"
0000F2F8 <prefixtree.include.bb2@403> XINCLUDE "translation.include.bb2"
0000F306 <prefixtree.include.bb2@405> XINCLUDE "translation.include.bb2"
0000F314 <prefixtree.include.bb2@406> XINCLUDE "translation.include.bb2"
0000F322 <prefixtree.include.bb2@407> XINCLUDE "translation.include.bb2"
0000F32A <prefixtree.include.bb2@408> XINCLUDE "translation.include.bb2"
0000F34E <prefixtree.include.bb2@409> XINCLUDE "translation.include.bb2"
0000F376 <prefixtree.include.bb2@410> XINCLUDE "translation.include.bb2"
0000F39E <prefixtree.include.bb2@411> XINCLUDE "translation.include.bb2"
0000F40A <prefixtree.include.bb2@412> XINCLUDE "translation.include.bb2"
0000F41A <prefixtree.include.bb2@413> XINCLUDE "translation.include.bb2"
0000F446 <prefixtree.include.bb2@414> XINCLUDE "translation.include.bb2"
0000F49C <prefixtree.include.bb2@416> XINCLUDE "translation.include.bb2"
0000F4AA <prefixtree.include.bb2@417> XINCLUDE "translation.include.bb2"
0000F4B8 <prefixtree.include.bb2@418> XINCLUDE "translation.include.bb2"
0000F4BE <prefixtree.include.bb2@419> XINCLUDE "translation.include.bb2"
0000F512 <prefixtree.include.bb2@421> XINCLUDE "translation.include.bb2"
0000F562 <prefixtree.include.bb2@422> XINCLUDE "translation.include.bb2"
0000F5B2 <prefixtree.include.bb2@425> XINCLUDE "translation.include.bb2"
0000F608 <prefixtree.include.bb2@426> XINCLUDE "translation.include.bb2"
0000F674 <prefixtree.include.bb2@427> XINCLUDE "translation.include.bb2"
0000F67C <prefixtree.include.bb2@431> XINCLUDE "translation.include.bb2"
0000F6B6 <prefixtree.include.bb2@433> XINCLUDE "translation.include.bb2"
0000F6DC <prefixtree.include.bb2@434> XINCLUDE "translation.include.bb2"
0000F6F4 <prefixtree.include.bb2@435> XINCLUDE "translation.include.bb2"
0000F72E <prefixtree.include.bb2@436> XINCLUDE "translation.include.bb2"
0000F758 <prefixtree.include.bb2@437> XINCLUDE "translation.include.bb2"
0000F770 <prefixtree.include.bb2@438> XINCLUDE "translation.include.bb2"
0000F794 <prefixtree.include.bb2@440> XINCLUDE "translation.include.bb2"
0000F7E8 <prefixtree.include.bb2@441> XINCLUDE "translation.include.bb2"
0000F7F0 <prefixtree.include.bb2@442> XINCLUDE "translation.include.bb2"
0000F7F6 <prefixtree.include.bb2@443> XINCLUDE "translation.include.bb2"
0000F858 <prefixtree.include.bb2@444> XINCLUDE "translation.include.bb2"
0000F884 <prefixtree.include.bb2@445> XINCLUDE "translation.include.bb2"
0000F8A0 <prefixtree.include.bb2@448> XINCLUDE "translation.include.bb2"
0000F8AE <prefixtree.include.bb2@450> XINCLUDE "translation.include.bb2"
0000F8BC <prefixtree.include.bb2@451> XINCLUDE "translation.include.bb2"
0000F8CA <prefixtree.include.bb2@453> XINCLUDE "translation.include.bb2"
0000F8D8 <prefixtree.include.bb2@454> XINCLUDE "translation.include.bb2"
0000F91C <prefixtree.include.bb2@455> XINCLUDE "translation.include.bb2"
0000F988 <prefixtree.include.bb2@456> XINCLUDE "translation.include.bb2"
0000F9B6 <prefixtree.include.bb2@457> XINCLUDE "translation.include.bb2"
0000F9CA <prefixtree.include.bb2@458> XINCLUDE "translation.include.bb2"
0000F9FC <prefixtree.include.bb2@459> XINCLUDE "translation.include.bb2"
0000FA46 <prefixtree.include.bb2@460> XINCLUDE "translation.include.bb2"
0000FA56 <prefixtree.include.bb2@461> XINCLUDE "translation.include.bb2"
0000FA8A <prefixtree.include.bb2@462> XINCLUDE "translation.include.bb2"
0000FAAC <prefixtree.include.bb2@463> XINCLUDE "translation.include.bb2"
0000FABC <prefixtree.include.bb2@464> XINCLUDE "translation.include.bb2"
0000FAC4 <prefixtree.include.bb2@467> XINCLUDE "translation.include.bb2"
0000FB08 <prefixtree.include.bb2@468> XINCLUDE "translation.include.bb2"
0000FB74 <prefixtree.include.bb2@469> XINCLUDE "translation.include.bb2"
0000FBA2 <prefixtree.include.bb2@470> XINCLUDE "translation.include.bb2"
0000FBC6 <prefixtree.include.bb2@472> XINCLUDE "translation.include.bb2"
0000FC0A <prefixtree.include.bb2@473> XINCLUDE "translation.include.bb2"
0000FC76 <prefixtree.include.bb2@474> XINCLUDE "translation.include.bb2"
0000FCA4 <prefixtree.include.bb2@475> XINCLUDE "translation.include.bb2"
0000FCD2 <prefixtree.include.bb2@476> XINCLUDE "translation.include.bb2"
0000FCDA <prefixtree.include.bb2@477> XINCLUDE "translation.include.bb2"
0000FD08 <prefixtree.include.bb2@478> XINCLUDE "translation.include.bb2"
0000FD7A <prefixtree.include.bb2@479> XINCLUDE "translation.include.bb2"
0000FD80 <prefixtree.include.bb2@480> XINCLUDE "translation.include.bb2"
0000FDAE <prefixtree.include.bb2@481> XINCLUDE "translation.include.bb2"
0000FE20 <prefixtree.include.bb2@482> XINCLUDE "translation.include.bb2"
0000FE3E <prefixtree.include.bb2@485> XINCLUDE "translation.include.bb2"
0000FE62 <prefixtree.include.bb2@486> XINCLUDE "translation.include.bb2"
0000FE7A <prefixtree.include.bb2@487> XINCLUDE "translation.include.bb2"
0000FE80 <prefixtree.include.bb2@488> XINCLUDE "translation.include.bb2"
0000FE86 <prefixtree.include.bb2@491> XINCLUDE "translation.include.bb2"
0000FE88 <prefixtree.include.bb2@493> XINCLUDE "translation.include.bb2"
0000FE92 <prefixtree.include.bb2@496> XINCLUDE "translation.include.bb2"
0000FEBE <prefixtree.include.bb2@497> XINCLUDE "translation.include.bb2"
0000FEE0 <prefixtree.include.bb2@515> XINCLUDE "translation.include.bb2"
0000FEE8 <prefixtree.include.bb2@516> XINCLUDE "translation.include.bb2"
0000FEEE <prefixtree.include.bb2@517> XINCLUDE "translation.include.bb2"
0000FEFC <prefixtree.include.bb2@518> XINCLUDE "translation.include.bb2"
0000FF36 <prefixtree.include.bb2@520> XINCLUDE "translation.include.bb2"
0000FF5C <prefixtree.include.bb2@521> XINCLUDE "translation.include.bb2"
0000FF74 <prefixtree.include.bb2@522> XINCLUDE "translation.include.bb2"
0000FFAE <prefixtree.include.bb2@523> XINCLUDE "translation.include.bb2"
0000FFD8 <prefixtree.include.bb2@524> XINCLUDE "translation.include.bb2"
0000FFF0 <prefixtree.include.bb2@526> XINCLUDE "translation.include.bb2"
00010008 <prefixtree.include.bb2@527> XINCLUDE "translation.include.bb2"
00010040 <prefixtree.include.bb2@528> XINCLUDE "translation.include.bb2"
00010048 <prefixtree.include.bb2@530> XINCLUDE "translation.include.bb2"
00010082 <prefixtree.include.bb2@532> XINCLUDE "translation.include.bb2"
00010094 <prefixtree.include.bb2@534> XINCLUDE "translation.include.bb2"
000100BA <prefixtree.include.bb2@535> XINCLUDE "translation.include.bb2"
000100D0 <prefixtree.include.bb2@536> XINCLUDE "translation.include.bb2"
000100F6 <prefixtree.include.bb2@537> XINCLUDE "translation.include.bb2"
0001010A <prefixtree.include.bb2@538> XINCLUDE "translation.include.bb2"
00010122 <prefixtree.include.bb2@540> XINCLUDE "translation.include.bb2"
00010134 <prefixtree.include.bb2@541> XINCLUDE "translation.include.bb2"
0001013E <prefixtree.include.bb2@542> XINCLUDE "translation.include.bb2"
00010152 <prefixtree.include.bb2@543> XINCLUDE "translation.include.bb2"
0001016C <prefixtree.include.bb2@560> XINCLUDE "translation.include.bb2"
0001018A <prefixtree.include.bb2@561> XINCLUDE "translation.include.bb2"
0001019C <prefixtree.include.bb2@562> XINCLUDE "translation.include.bb2"
000101BA <prefixtree.include.bb2@563> XINCLUDE "translation.include.bb2"
000101DC <prefixtree.include.bb2@564> XINCLUDE "translation.include.bb2"
000101F8 <prefixtree.include.bb2@565> XINCLUDE "translation.include.bb2"
00010218 <prefixtree.include.bb2@566> XINCLUDE "translation.include.bb2"
00010222 <prefixtree.include.bb2@567> XINCLUDE "translation.include.bb2"
00010228 <prefixtree.include.bb2@568> XINCLUDE "translation.include.bb2"
00010232 <prefixtree.include.bb2@569> XINCLUDE "translation.include.bb2"
0001023E <prefixtree.include.bb2@571> XINCLUDE "translation.include.bb2"
00010244 <prefixtree.include.bb2@572> XINCLUDE "translation.include.bb2"
00010272 <prefixtree.include.bb2@591> XINCLUDE "translation.include.bb2"
0001029A <prefixtree.include.bb2@592> XINCLUDE "translation.include.bb2"
000102DA <prefixtree.include.bb2@593> XINCLUDE "translation.include.bb2"
000102F2 <prefixtree.include.bb2@594> XINCLUDE "translation.include.bb2"
00010338 <prefixtree.include.bb2@595> XINCLUDE "translation.include.bb2"
00010362 <prefixtree.include.bb2@598> XINCLUDE "translation.include.bb2"
00010390 <prefixtree.include.bb2@599> XINCLUDE "translation.include.bb2"
000103AA <prefixtree.include.bb2@815> XINCLUDE "translation.include.bb2"
000103B2 <prefixtree.include.bb2@816> XINCLUDE "translation.include.bb2"
000103CA <prefixtree.include.bb2@817> XINCLUDE "translation.include.bb2"
000103D4 <prefixtree.include.bb2@818> XINCLUDE "translation.include.bb2"
000103E6 <prefixtree.include.bb2@819> XINCLUDE "translation.include.bb2"
0001041E <prefixtree.include.bb2@820> XINCLUDE "translation.include.bb2"
0001042C <prefixtree.include.bb2@821> XINCLUDE "translation.include.bb2"
00010438 <prefixtree.include.bb2@822> XINCLUDE "translation.include.bb2"
00010454 <prefixtree.include.bb2@823> XINCLUDE "translation.include.bb2"
00010476 <prefixtree.include.bb2@824> XINCLUDE "translation.include.bb2"
00010498 <prefixtree.include.bb2@825> XINCLUDE "translation.include.bb2"
000104BA <prefixtree.include.bb2@826> XINCLUDE "translation.include.bb2"
000104DC <prefixtree.include.bb2@827> XINCLUDE "translation.include.bb2"
000104F8 <prefixtree.include.bb2@828> XINCLUDE "translation.include.bb2"
00010516 <prefixtree.include.bb2@829> XINCLUDE "translation.include.bb2"
0001052A <prefixtree.include.bb2@830> XINCLUDE "translation.include.bb2"
00010530 <prefixtree.include.bb2@832> XINCLUDE "translation.include.bb2"
00010532 <prefixtree.include.bb2@834> XINCLUDE "translation.include.bb2"
00010538 <prefixtree.include.bb2@835> XINCLUDE "translation.include.bb2"
00010542 <prefixtree.include.bb2@837> XINCLUDE "translation.include.bb2"
00010548 <prefixtree.include.bb2@838> XINCLUDE "translation.include.bb2"
00010566 <prefixtree.include.bb2@856> XINCLUDE "translation.include.bb2"
0001056C <prefixtree.include.bb2@857> XINCLUDE "translation.include.bb2"
00010590 <prefixtree.include.bb2@858> XINCLUDE "translation.include.bb2"
000105AE <prefixtree.include.bb2@859> XINCLUDE "translation.include.bb2"
000105DC <prefixtree.include.bb2@860> XINCLUDE "translation.include.bb2"
0001060A <prefixtree.include.bb2@861> XINCLUDE "translation.include.bb2"
00010638 <prefixtree.include.bb2@862> XINCLUDE "translation.include.bb2"
00010666 <prefixtree.include.bb2@863> XINCLUDE "translation.include.bb2"
0001069A <prefixtree.include.bb2@864> XINCLUDE "translation.include.bb2"
000106AA <prefixtree.include.bb2@865> XINCLUDE "translation.include.bb2"
000106B4 <prefixtree.include.bb2@867> XINCLUDE "translation.include.bb2"
000106BA <prefixtree.include.bb2@868> XINCLUDE "translation.include.bb2"
000106BA <phrasebook.include.bb2@34> XINCLUDE "translation.include.bb2"
00010704 <phrasebook.include.bb2@58> XINCLUDE "translation.include.bb2"
00010724 <phrasebook.include.bb2@59> XINCLUDE "translation.include.bb2"
0001072E <phrasebook.include.bb2@60> XINCLUDE "translation.include.bb2"
00010742 <phrasebook.include.bb2@61> XINCLUDE "translation.include.bb2"
00010788 <phrasebook.include.bb2@62> XINCLUDE "translation.include.bb2"
000107CE <phrasebook.include.bb2@63> XINCLUDE "translation.include.bb2"
00010814 <phrasebook.include.bb2@64> XINCLUDE "translation.include.bb2"
0001081E <phrasebook.include.bb2@66> XINCLUDE "translation.include.bb2"
0001083A <phrasebook.include.bb2@67> XINCLUDE "translation.include.bb2"
00010864 <phrasebook.include.bb2@70> XINCLUDE "translation.include.bb2"
000108E2 <phrasebook.include.bb2@71> XINCLUDE "translation.include.bb2"
00010960 <phrasebook.include.bb2@72> XINCLUDE "translation.include.bb2"
000109DE <phrasebook.include.bb2@73> XINCLUDE "translation.include.bb2"
00010A5C <phrasebook.include.bb2@74> XINCLUDE "translation.include.bb2"
00010ADA <phrasebook.include.bb2@75> XINCLUDE "translation.include.bb2"
00010B58 <phrasebook.include.bb2@76> XINCLUDE "translation.include.bb2"
00010BD6 <phrasebook.include.bb2@77> XINCLUDE "translation.include.bb2"
00010C54 <phrasebook.include.bb2@78> XINCLUDE "translation.include.bb2"
00010CD2 <phrasebook.include.bb2@79> XINCLUDE "translation.include.bb2"
00010D50 <phrasebook.include.bb2@80> XINCLUDE "translation.include.bb2"
00010DD4 <phrasebook.include.bb2@81> XINCLUDE "translation.include.bb2"
00010E04 <phrasebook.include.bb2@82> XINCLUDE "translation.include.bb2"
00010E60 <phrasebook.include.bb2@84> XINCLUDE "translation.include.bb2"
00010E8C <phrasebook.include.bb2@85> XINCLUDE "translation.include.bb2"
00010F56 <phrasebook.include.bb2@86> XINCLUDE "translation.include.bb2"
00010F64 <phrasebook.include.bb2@88> XINCLUDE "translation.include.bb2"
00010FA2 <phrasebook.include.bb2@89> XINCLUDE "translation.include.bb2"
00011026 <phrasebook.include.bb2@90> XINCLUDE "translation.include.bb2"
00011050 <phrasebook.include.bb2@91> XINCLUDE "translation.include.bb2"
0001106E <phrasebook.include.bb2@92> XINCLUDE "translation.include.bb2"
00011088 <phrasebook.include.bb2@106> XINCLUDE "translation.include.bb2"
00011092 <phrasebook.include.bb2@107> XINCLUDE "translation.include.bb2"
0001109E <phrasebook.include.bb2@108> XINCLUDE "translation.include.bb2"
000110AE <phrasebook.include.bb2@109> XINCLUDE "translation.include.bb2"
000110BE <phrasebook.include.bb2@110> XINCLUDE "translation.include.bb2"
000110CE <phrasebook.include.bb2@111> XINCLUDE "translation.include.bb2"
000110DE <phrasebook.include.bb2@112> XINCLUDE "translation.include.bb2"
000110E2 <phrasebook.include.bb2@114> XINCLUDE "translation.include.bb2"
00011120 <phrasebook.include.bb2@131> XINCLUDE "translation.include.bb2"
00011178 <phrasebook.include.bb2@132> XINCLUDE "translation.include.bb2"
000111D4 <phrasebook.include.bb2@133> XINCLUDE "translation.include.bb2"
0001125E <phrasebook.include.bb2@134> XINCLUDE "translation.include.bb2"
000112DC <phrasebook.include.bb2@135> XINCLUDE "translation.include.bb2"
000112F6 <phrasebook.include.bb2@137> XINCLUDE "translation.include.bb2"
00011324 <phrasebook.include.bb2@155> XINCLUDE "translation.include.bb2"
00011360 <phrasebook.include.bb2@156> XINCLUDE "translation.include.bb2"
0001142E <phrasebook.include.bb2@158> XINCLUDE "translation.include.bb2"
000114FC <phrasebook.include.bb2@159> XINCLUDE "translation.include.bb2"
00011548 <phrasebook.include.bb2@161> XINCLUDE "translation.include.bb2"
000115C6 <phrasebook.include.bb2@162> XINCLUDE "translation.include.bb2"
00011644 <phrasebook.include.bb2@163> XINCLUDE "translation.include.bb2"
000116A2 <phrasebook.include.bb2@165> XINCLUDE "translation.include.bb2"
00011738 <phrasebook.include.bb2@166> XINCLUDE "translation.include.bb2"
00011770 <phrasebook.include.bb2@168> XINCLUDE "translation.include.bb2"
000117CE <phrasebook.include.bb2@169> XINCLUDE "translation.include.bb2"
00011856 <phrasebook.include.bb2@170> XINCLUDE "translation.include.bb2"
0001185E <phrasebook.include.bb2@172> XINCLUDE "translation.include.bb2"
000118C8 <phrasebook.include.bb2@174> XINCLUDE "translation.include.bb2"
00011934 <phrasebook.include.bb2@175> XINCLUDE "translation.include.bb2"
00011972 <phrasebook.include.bb2@176> XINCLUDE "translation.include.bb2"
000119FA <phrasebook.include.bb2@177> XINCLUDE "translation.include.bb2"
00011A26 <phrasebook.include.bb2@187> XINCLUDE "translation.include.bb2"
00011A82 <phrasebook.include.bb2@188> XINCLUDE "translation.include.bb2"
00011B4A <phrasebook.include.bb2@189> XINCLUDE "translation.include.bb2"
00011BAE <phrasebook.include.bb2@190> XINCLUDE "translation.include.bb2"
00011BB4 <phrasebook.include.bb2@191> XINCLUDE "translation.include.bb2"
00011BE8 <phrasebook.include.bb2@192> XINCLUDE "translation.include.bb2"
00011CB6 <phrasebook.include.bb2@196> XINCLUDE "translation.include.bb2"
00011D84 <phrasebook.include.bb2@197> XINCLUDE "translation.include.bb2"
00011DAE <phrasebook.include.bb2@199> XINCLUDE "translation.include.bb2"
00011DCC <phrasebook.include.bb2@200> XINCLUDE "translation.include.bb2"
00011DFA <phrasebook.include.bb2@204> XINCLUDE "translation.include.bb2"
00011E36 <phrasebook.include.bb2@205> XINCLUDE "translation.include.bb2"
00011EA6 <phrasebook.include.bb2@206> XINCLUDE "translation.include.bb2"
00011EAE <phrasebook.include.bb2@207> XINCLUDE "translation.include.bb2"
00011F00 <phrasebook.include.bb2@208> XINCLUDE "translation.include.bb2"
00011F28 <phrasebook.include.bb2@209> XINCLUDE "translation.include.bb2"
00011F40 <phrasebook.include.bb2@210> XINCLUDE "translation.include.bb2"
00011FF4 <phrasebook.include.bb2@211> XINCLUDE "translation.include.bb2"
00012002 <phrasebook.include.bb2@212> XINCLUDE "translation.include.bb2"
00012058 <phrasebook.include.bb2@213> XINCLUDE "translation.include.bb2"
000120B6 <phrasebook.include.bb2@214> XINCLUDE "translation.include.bb2"
000120BC <phrasebook.include.bb2@215> XINCLUDE "translation.include.bb2"
00012140 <phrasebook.include.bb2@216> XINCLUDE "translation.include.bb2"
000121C4 <phrasebook.include.bb2@217> XINCLUDE "translation.include.bb2"
00012248 <phrasebook.include.bb2@218> XINCLUDE "translation.include.bb2"
000122C6 <phrasebook.include.bb2@219> XINCLUDE "translation.include.bb2"
00012344 <phrasebook.include.bb2@220> XINCLUDE "translation.include.bb2"
000123C2 <phrasebook.include.bb2@221> XINCLUDE "translation.include.bb2"
00012440 <phrasebook.include.bb2@222> XINCLUDE "translation.include.bb2"
000124BE <phrasebook.include.bb2@223> XINCLUDE "translation.include.bb2"
0001253C <phrasebook.include.bb2@224> XINCLUDE "translation.include.bb2"
000125BA <phrasebook.include.bb2@225> XINCLUDE "translation.include.bb2"
000125E4 <phrasebook.include.bb2@226> XINCLUDE "translation.include.bb2"
00012602 <phrasebook.include.bb2@227> XINCLUDE "translation.include.bb2"
00012630 <phrasebook.include.bb2@245> XINCLUDE "translation.include.bb2"
00012674 <phrasebook.include.bb2@246> XINCLUDE "translation.include.bb2"
0001267A <phrasebook.include.bb2@247> XINCLUDE "translation.include.bb2"
00012694 <phrasebook.include.bb2@248> XINCLUDE "translation.include.bb2"
000126B0 <phrasebook.include.bb2@249> XINCLUDE "translation.include.bb2"
000126E4 <phrasebook.include.bb2@250> XINCLUDE "translation.include.bb2"
00012708 <phrasebook.include.bb2@251> XINCLUDE "translation.include.bb2"
00012730 <phrasebook.include.bb2@252> XINCLUDE "translation.include.bb2"
0001279C <phrasebook.include.bb2@253> XINCLUDE "translation.include.bb2"
000127FA <phrasebook.include.bb2@256> XINCLUDE "translation.include.bb2"
00012858 <phrasebook.include.bb2@257> XINCLUDE "translation.include.bb2"
000128A4 <phrasebook.include.bb2@258> XINCLUDE "translation.include.bb2"
000128FE <phrasebook.include.bb2@259> XINCLUDE "translation.include.bb2"
00012904 <phrasebook.include.bb2@260> XINCLUDE "translation.include.bb2"
0001290A <phrasebook.include.bb2@262> XINCLUDE "translation.include.bb2"
00012914 <phrasebook.include.bb2@263> XINCLUDE "translation.include.bb2"
0001291E <phrasebook.include.bb2@264> XINCLUDE "translation.include.bb2"
00012938 <phrasebook.include.bb2@265> XINCLUDE "translation.include.bb2"
00012966 <phrasebook.include.bb2@282> XINCLUDE "translation.include.bb2"
0001296C <phrasebook.include.bb2@283> XINCLUDE "translation.include.bb2"
000129B0 <phrasebook.include.bb2@284> XINCLUDE "translation.include.bb2"
000129CA <phrasebook.include.bb2@285> XINCLUDE "translation.include.bb2"
000129DA <phrasebook.include.bb2@286> XINCLUDE "translation.include.bb2"
000129E4 <phrasebook.include.bb2@287> XINCLUDE "translation.include.bb2"
000129F0 <phrasebook.include.bb2@288> XINCLUDE "translation.include.bb2"
000129FA <phrasebook.include.bb2@289> XINCLUDE "translation.include.bb2"
00012A1E <phrasebook.include.bb2@292> XINCLUDE "translation.include.bb2"
00012A66 <phrasebook.include.bb2@293> XINCLUDE "translation.include.bb2"
00012AAE <phrasebook.include.bb2@294> XINCLUDE "translation.include.bb2"
00012AF6 <phrasebook.include.bb2@295> XINCLUDE "translation.include.bb2"
00012B0C <phrasebook.include.bb2@296> XINCLUDE "translation.include.bb2"
00012B20 <phrasebook.include.bb2@297> XINCLUDE "translation.include.bb2"
00012B2A <phrasebook.include.bb2@299> XINCLUDE "translation.include.bb2"
00012B34 <phrasebook.include.bb2@300> XINCLUDE "translation.include.bb2"
00012B4E <phrasebook.include.bb2@301> XINCLUDE "translation.include.bb2"
00012B78 <phrasebook.include.bb2@317> XINCLUDE "translation.include.bb2"
00012BBC <phrasebook.include.bb2@318> XINCLUDE "translation.include.bb2"
00012BD6 <phrasebook.include.bb2@319> XINCLUDE "translation.include.bb2"
00012C34 <phrasebook.include.bb2@320> XINCLUDE "translation.include.bb2"
00012C4E <phrasebook.include.bb2@321> XINCLUDE "translation.include.bb2"
00012C66 <phrasebook.include.bb2@323> XINCLUDE "translation.include.bb2"
00012C70 <phrasebook.include.bb2@324> XINCLUDE "translation.include.bb2"
00012C8C <phrasebook.include.bb2@325> XINCLUDE "translation.include.bb2"
00012C9A <phrasebook.include.bb2@326> XINCLUDE "translation.include.bb2"
00012CA6 <phrasebook.include.bb2@327> XINCLUDE "translation.include.bb2"
00012CF2 <phrasebook.include.bb2@328> XINCLUDE "translation.include.bb2"
00012D44 <phrasebook.include.bb2@329> XINCLUDE "translation.include.bb2"
00012D96 <phrasebook.include.bb2@330> XINCLUDE "translation.include.bb2"
00012DAA <phrasebook.include.bb2@331> XINCLUDE "translation.include.bb2"
00012DBA <phrasebook.include.bb2@332> XINCLUDE "translation.include.bb2"
00012DC0 <phrasebook.include.bb2@333> XINCLUDE "translation.include.bb2"
00012DC2 <phrasebook.include.bb2@335> XINCLUDE "translation.include.bb2"
00012DC8 <phrasebook.include.bb2@336> XINCLUDE "translation.include.bb2"
00012DD2 <phrasebook.include.bb2@338> XINCLUDE "translation.include.bb2"
00012DDC <phrasebook.include.bb2@339> XINCLUDE "translation.include.bb2"
00012DF6 <phrasebook.include.bb2@340> XINCLUDE "translation.include.bb2"
00012E20 <phrasebook.include.bb2@379> XINCLUDE "translation.include.bb2"
00012E36 <phrasebook.include.bb2@380> XINCLUDE "translation.include.bb2"
00012E40 <phrasebook.include.bb2@381> XINCLUDE "translation.include.bb2"
00012EB8 <phrasebook.include.bb2@382> XINCLUDE "translation.include.bb2"
00012EF4 <phrasebook.include.bb2@383> XINCLUDE "translation.include.bb2"
00012F04 <phrasebook.include.bb2@384> XINCLUDE "translation.include.bb2"
00012F24 <phrasebook.include.bb2@385> XINCLUDE "translation.include.bb2"
00012F44 <phrasebook.include.bb2@386> XINCLUDE "translation.include.bb2"
00012F64 <phrasebook.include.bb2@387> XINCLUDE "translation.include.bb2"
00012F9A <phrasebook.include.bb2@388> XINCLUDE "translation.include.bb2"
00012FC2 <phrasebook.include.bb2@389> XINCLUDE "translation.include.bb2"
00012FFA <phrasebook.include.bb2@390> XINCLUDE "translation.include.bb2"
0001305E <phrasebook.include.bb2@391> XINCLUDE "translation.include.bb2"
0001307E <phrasebook.include.bb2@392> XINCLUDE "translation.include.bb2"
000130FA <phrasebook.include.bb2@393> XINCLUDE "translation.include.bb2"
00013132 <phrasebook.include.bb2@396> XINCLUDE "translation.include.bb2"
000131A8 <phrasebook.include.bb2@397> XINCLUDE "translation.include.bb2"
000131C8 <phrasebook.include.bb2@398> XINCLUDE "translation.include.bb2"
00013244 <phrasebook.include.bb2@399> XINCLUDE "translation.include.bb2"
0001327C <phrasebook.include.bb2@402> XINCLUDE "translation.include.bb2"
000132F2 <phrasebook.include.bb2@403> XINCLUDE "translation.include.bb2"
00013312 <phrasebook.include.bb2@404> XINCLUDE "translation.include.bb2"
0001338E <phrasebook.include.bb2@405> XINCLUDE "translation.include.bb2"
000133BA <phrasebook.include.bb2@408> XINCLUDE "translation.include.bb2"
000133C2 <phrasebook.include.bb2@409> XINCLUDE "translation.include.bb2"
00013408 <phrasebook.include.bb2@410> XINCLUDE "translation.include.bb2"
00013428 <phrasebook.include.bb2@411> XINCLUDE "translation.include.bb2"
00013432 <phrasebook.include.bb2@412> XINCLUDE "translation.include.bb2"
0001344A <phrasebook.include.bb2@413> XINCLUDE "translation.include.bb2"
0001345A <phrasebook.include.bb2@414> XINCLUDE "translation.include.bb2"
00013492 <phrasebook.include.bb2@415> XINCLUDE "translation.include.bb2"
000134C4 <phrasebook.include.bb2@416> XINCLUDE "translation.include.bb2"
000134D6 <phrasebook.include.bb2@419> XINCLUDE "translation.include.bb2"
00013558 <phrasebook.include.bb2@420> XINCLUDE "translation.include.bb2"
00013562 <phrasebook.include.bb2@421> XINCLUDE "translation.include.bb2"
00013594 <phrasebook.include.bb2@422> XINCLUDE "translation.include.bb2"
000135C6 <phrasebook.include.bb2@423> XINCLUDE "translation.include.bb2"
000135F2 <phrasebook.include.bb2@428> XINCLUDE "translation.include.bb2"
0001361E <phrasebook.include.bb2@429> XINCLUDE "translation.include.bb2"
00013640 <phrasebook.include.bb2@430> XINCLUDE "translation.include.bb2"
0001364A <phrasebook.include.bb2@432> XINCLUDE "translation.include.bb2"
00013664 <phrasebook.include.bb2@433> XINCLUDE "translation.include.bb2"
00013664 <translation.include.bb2@31> XINCLUDE "translation.include.bb2"
0001367A <translation.include.bb2@43> XINCLUDE "translation.include.bb2"
00013696 <translation.include.bb2@44> XINCLUDE "translation.include.bb2"
00013698 <translation.include.bb2@45> XINCLUDE "translation.include.bb2"
000136C6 <translation.include.bb2@46> XINCLUDE "translation.include.bb2"
000136C6 <AmiBlitz3.ab2@93> XINCLUDE "translation.include.bb2"
000136C6 <ted.include.ab3@1> XINCLUDE "/Shared/ted.include.ab3"
000136E0 <ted.include.ab3@161> XINCLUDE "/Shared/ted.include.ab3"
000136EA <ted.include.ab3@162> XINCLUDE "/Shared/ted.include.ab3"
0001370C <ted.include.ab3@163> XINCLUDE "/Shared/ted.include.ab3"
00013724 <ted.include.ab3@164> XINCLUDE "/Shared/ted.include.ab3"
0001373E <ted.include.ab3@166> XINCLUDE "/Shared/ted.include.ab3"
00013770 <ted.include.ab3@167> XINCLUDE "/Shared/ted.include.ab3"
0001377A <ted.include.ab3@168> XINCLUDE "/Shared/ted.include.ab3"
00013780 <ted.include.ab3@170> XINCLUDE "/Shared/ted.include.ab3"
00013792 <ted.include.ab3@171> XINCLUDE "/Shared/ted.include.ab3"
00013806 <ted.include.ab3@172> XINCLUDE "/Shared/ted.include.ab3"
0001380C <ted.include.ab3@173> XINCLUDE "/Shared/ted.include.ab3"
00013846 <ted.include.ab3@174> XINCLUDE "/Shared/ted.include.ab3"
00013850 <ted.include.ab3@177> XINCLUDE "/Shared/ted.include.ab3"
00013856 <ted.include.ab3@178> XINCLUDE "/Shared/ted.include.ab3"
0001386C <ted.include.ab3@180> XINCLUDE "/Shared/ted.include.ab3"
00013876 <ted.include.ab3@181> XINCLUDE "/Shared/ted.include.ab3"
0001388E <ted.include.ab3@183> XINCLUDE "/Shared/ted.include.ab3"
00013890 <ted.include.ab3@185> XINCLUDE "/Shared/ted.include.ab3"
000138BE <ted.include.ab3@186> XINCLUDE "/Shared/ted.include.ab3"
000138D8 <ted.include.ab3@190> XINCLUDE "/Shared/ted.include.ab3"
000138EE <ted.include.ab3@191> XINCLUDE "/Shared/ted.include.ab3"
00013922 <ted.include.ab3@192> XINCLUDE "/Shared/ted.include.ab3"
00013926 <ted.include.ab3@194> XINCLUDE "/Shared/ted.include.ab3"
00013940 <ted.include.ab3@196> XINCLUDE "/Shared/ted.include.ab3"
00013956 <ted.include.ab3@197> XINCLUDE "/Shared/ted.include.ab3"
0001398A <ted.include.ab3@198> XINCLUDE "/Shared/ted.include.ab3"
0001398E <ted.include.ab3@200> XINCLUDE "/Shared/ted.include.ab3"
000139A8 <ted.include.ab3@216> XINCLUDE "/Shared/ted.include.ab3"
000139BE <ted.include.ab3@217> XINCLUDE "/Shared/ted.include.ab3"
000139F2 <ted.include.ab3@218> XINCLUDE "/Shared/ted.include.ab3"
000139F6 <ted.include.ab3@220> XINCLUDE "/Shared/ted.include.ab3"
00013A10 <ted.include.ab3@236> XINCLUDE "/Shared/ted.include.ab3"
00013A26 <ted.include.ab3@237> XINCLUDE "/Shared/ted.include.ab3"
00013A5A <ted.include.ab3@238> XINCLUDE "/Shared/ted.include.ab3"
00013A5E <ted.include.ab3@240> XINCLUDE "/Shared/ted.include.ab3"
00013A78 <ted.include.ab3@242> XINCLUDE "/Shared/ted.include.ab3"
00013A8E <ted.include.ab3@243> XINCLUDE "/Shared/ted.include.ab3"
00013AC2 <ted.include.ab3@244> XINCLUDE "/Shared/ted.include.ab3"
00013AC6 <ted.include.ab3@246> XINCLUDE "/Shared/ted.include.ab3"
00013AC6 <AmiBlitz3.ab2@94> XINCLUDE "/Shared/ted.include.ab3"
00013AC6 <CLIModeSupport.ab3@1> XINCLUDE "CLIModeSupport.ab3"
00013ADC <CLIModeSupport.ab3@4> XINCLUDE "CLIModeSupport.ab3"
00013AF2 <CLIModeSupport.ab3@7> XINCLUDE "CLIModeSupport.ab3"
00013B00 <CLIModeSupport.ab3@8> XINCLUDE "CLIModeSupport.ab3"
00013B0E <CLIModeSupport.ab3@9> XINCLUDE "CLIModeSupport.ab3"
00013B18 <CLIModeSupport.ab3@11> XINCLUDE "CLIModeSupport.ab3"
00013B2A <CLIModeSupport.ab3@12> XINCLUDE "CLIModeSupport.ab3"
00013B3C <CLIModeSupport.ab3@13> XINCLUDE "CLIModeSupport.ab3"
00013B42 <CLIModeSupport.ab3@14> XINCLUDE "CLIModeSupport.ab3"
00013B7C <CLIModeSupport.ab3@15> XINCLUDE "CLIModeSupport.ab3"
00013B80 <CLIModeSupport.ab3@18> XINCLUDE "CLIModeSupport.ab3"
00013B96 <CLIModeSupport.ab3@21> XINCLUDE "CLIModeSupport.ab3"
00013BAC <CLIModeSupport.ab3@23> XINCLUDE "CLIModeSupport.ab3"
00013BB8 <CLIModeSupport.ab3@24> XINCLUDE "CLIModeSupport.ab3"
00013BC4 <CLIModeSupport.ab3@25> XINCLUDE "CLIModeSupport.ab3"
00013BCC <CLIModeSupport.ab3@26> XINCLUDE "CLIModeSupport.ab3"
00013BD4 <CLIModeSupport.ab3@27> XINCLUDE "CLIModeSupport.ab3"
00013BD8 <CLIModeSupport.ab3@28> XINCLUDE "CLIModeSupport.ab3"
00013C02 <CLIModeSupport.ab3@47> XINCLUDE "CLIModeSupport.ab3"
00013C2E <CLIModeSupport.ab3@49> XINCLUDE "CLIModeSupport.ab3"
00013C40 <CLIModeSupport.ab3@50> XINCLUDE "CLIModeSupport.ab3"
00013C58 <CLIModeSupport.ab3@52> XINCLUDE "CLIModeSupport.ab3"
00013C6E <CLIModeSupport.ab3@56> XINCLUDE "CLIModeSupport.ab3"
00013C74 <CLIModeSupport.ab3@58> XINCLUDE "CLIModeSupport.ab3"
00013CAA <CLIModeSupport.ab3@61> XINCLUDE "CLIModeSupport.ab3"
00013CE2 <CLIModeSupport.ab3@62> XINCLUDE "CLIModeSupport.ab3"
00013D1A <CLIModeSupport.ab3@63> XINCLUDE "CLIModeSupport.ab3"
00013D52 <CLIModeSupport.ab3@64> XINCLUDE "CLIModeSupport.ab3"
00013D8A <CLIModeSupport.ab3@65> XINCLUDE "CLIModeSupport.ab3"
00013DC2 <CLIModeSupport.ab3@66> XINCLUDE "CLIModeSupport.ab3"
00013DFA <CLIModeSupport.ab3@67> XINCLUDE "CLIModeSupport.ab3"
00013E32 <CLIModeSupport.ab3@68> XINCLUDE "CLIModeSupport.ab3"
00013E6A <CLIModeSupport.ab3@69> XINCLUDE "CLIModeSupport.ab3"
00013EA2 <CLIModeSupport.ab3@70> XINCLUDE "CLIModeSupport.ab3"
00013EDA <CLIModeSupport.ab3@71> XINCLUDE "CLIModeSupport.ab3"
00013F12 <CLIModeSupport.ab3@72> XINCLUDE "CLIModeSupport.ab3"
00013F4A <CLIModeSupport.ab3@73> XINCLUDE "CLIModeSupport.ab3"
00013F54 <CLIModeSupport.ab3@74> XINCLUDE "CLIModeSupport.ab3"
00013F5E <CLIModeSupport.ab3@76> XINCLUDE "CLIModeSupport.ab3"
00013F68 <CLIModeSupport.ab3@77> XINCLUDE "CLIModeSupport.ab3"
00013F92 <CLIModeSupport.ab3@81> XINCLUDE "CLIModeSupport.ab3"
00013F9C <CLIModeSupport.ab3@82> XINCLUDE "CLIModeSupport.ab3"
00013FA0 <CLIModeSupport.ab3@83> XINCLUDE "CLIModeSupport.ab3"
00013FD4 <CLIModeSupport.ab3@84> XINCLUDE "CLIModeSupport.ab3"
00013FDA <CLIModeSupport.ab3@85> XINCLUDE "CLIModeSupport.ab3"
00014014 <CLIModeSupport.ab3@86> XINCLUDE "CLIModeSupport.ab3"
0001401A <CLIModeSupport.ab3@87> XINCLUDE "CLIModeSupport.ab3"
00014030 <CLIModeSupport.ab3@90> XINCLUDE "CLIModeSupport.ab3"
0001403A <CLIModeSupport.ab3@92> XINCLUDE "CLIModeSupport.ab3"
00014040 <CLIModeSupport.ab3@93> XINCLUDE "CLIModeSupport.ab3"
00014056 <CLIModeSupport.ab3@97> XINCLUDE "CLIModeSupport.ab3"
0001405C <CLIModeSupport.ab3@98> XINCLUDE "CLIModeSupport.ab3"
0001409A <CLIModeSupport.ab3@100> XINCLUDE "CLIModeSupport.ab3"
0001409E <CLIModeSupport.ab3@101> XINCLUDE "CLIModeSupport.ab3"
000140A8 <CLIModeSupport.ab3@102> XINCLUDE "CLIModeSupport.ab3"
000140AA <CLIModeSupport.ab3@103> XINCLUDE "CLIModeSupport.ab3"
000140DE <CLIModeSupport.ab3@104> XINCLUDE "CLIModeSupport.ab3"
000140EE <CLIModeSupport.ab3@105> XINCLUDE "CLIModeSupport.ab3"
000140F8 <CLIModeSupport.ab3@108> XINCLUDE "CLIModeSupport.ab3"
000140FE <CLIModeSupport.ab3@109> XINCLUDE "CLIModeSupport.ab3"
00014114 <CLIModeSupport.ab3@113> XINCLUDE "CLIModeSupport.ab3"
00014152 <CLIModeSupport.ab3@114> XINCLUDE "CLIModeSupport.ab3"
00014156 <CLIModeSupport.ab3@115> XINCLUDE "CLIModeSupport.ab3"
0001415E <CLIModeSupport.ab3@116> XINCLUDE "CLIModeSupport.ab3"
0001419C <CLIModeSupport.ab3@117> XINCLUDE "CLIModeSupport.ab3"
0001419E <CLIModeSupport.ab3@118> XINCLUDE "CLIModeSupport.ab3"
000141A2 <CLIModeSupport.ab3@119> XINCLUDE "CLIModeSupport.ab3"
000141E0 <CLIModeSupport.ab3@121> XINCLUDE "CLIModeSupport.ab3"
000141E4 <CLIModeSupport.ab3@122> XINCLUDE "CLIModeSupport.ab3"
00014222 <CLIModeSupport.ab3@124> XINCLUDE "CLIModeSupport.ab3"
00014226 <CLIModeSupport.ab3@125> XINCLUDE "CLIModeSupport.ab3"
00014250 <CLIModeSupport.ab3@127> XINCLUDE "CLIModeSupport.ab3"
0001425A <CLIModeSupport.ab3@128> XINCLUDE "CLIModeSupport.ab3"
0001426E <CLIModeSupport.ab3@129> XINCLUDE "CLIModeSupport.ab3"
00014294 <CLIModeSupport.ab3@130> XINCLUDE "CLIModeSupport.ab3"
0001429A <CLIModeSupport.ab3@131> XINCLUDE "CLIModeSupport.ab3"
000142A8 <CLIModeSupport.ab3@132> XINCLUDE "CLIModeSupport.ab3"
000142AE <CLIModeSupport.ab3@133> XINCLUDE "CLIModeSupport.ab3"
000142E6 <CLIModeSupport.ab3@135> XINCLUDE "CLIModeSupport.ab3"
000142EA <CLIModeSupport.ab3@138> XINCLUDE "CLIModeSupport.ab3"
00014314 <CLIModeSupport.ab3@141> XINCLUDE "CLIModeSupport.ab3"
0001431A <CLIModeSupport.ab3@142> XINCLUDE "CLIModeSupport.ab3"
0001433A <CLIModeSupport.ab3@143> XINCLUDE "CLIModeSupport.ab3"
00014344 <CLIModeSupport.ab3@144> XINCLUDE "CLIModeSupport.ab3"
00014348 <CLIModeSupport.ab3@145> XINCLUDE "CLIModeSupport.ab3"
0001434A <CLIModeSupport.ab3@146> XINCLUDE "CLIModeSupport.ab3"
00014368 <CLIModeSupport.ab3@147> XINCLUDE "CLIModeSupport.ab3"
0001436A <CLIModeSupport.ab3@148> XINCLUDE "CLIModeSupport.ab3"
00014370 <CLIModeSupport.ab3@149> XINCLUDE "CLIModeSupport.ab3"
00014376 <CLIModeSupport.ab3@150> XINCLUDE "CLIModeSupport.ab3"
000143A0 <CLIModeSupport.ab3@152> XINCLUDE "CLIModeSupport.ab3"
000143A2 <CLIModeSupport.ab3@153> XINCLUDE "CLIModeSupport.ab3"
000143D0 <CLIModeSupport.ab3@154> XINCLUDE "CLIModeSupport.ab3"
000143D4 <CLIModeSupport.ab3@155> XINCLUDE "CLIModeSupport.ab3"
00014402 <CLIModeSupport.ab3@156> XINCLUDE "CLIModeSupport.ab3"
00014406 <CLIModeSupport.ab3@157> XINCLUDE "CLIModeSupport.ab3"
0001442C <CLIModeSupport.ab3@159> XINCLUDE "CLIModeSupport.ab3"
0001443C <CLIModeSupport.ab3@160> XINCLUDE "CLIModeSupport.ab3"
00014442 <CLIModeSupport.ab3@161> XINCLUDE "CLIModeSupport.ab3"
00014448 <CLIModeSupport.ab3@162> XINCLUDE "CLIModeSupport.ab3"
00014482 <CLIModeSupport.ab3@163> XINCLUDE "CLIModeSupport.ab3"
0001448C <CLIModeSupport.ab3@165> XINCLUDE "CLIModeSupport.ab3"
000144A6 <CLIModeSupport.ab3@166> XINCLUDE "CLIModeSupport.ab3"
000144C4 <CLIModeSupport.ab3@178> XINCLUDE "CLIModeSupport.ab3"
000144CC <CLIModeSupport.ab3@179> XINCLUDE "CLIModeSupport.ab3"
000144D2 <CLIModeSupport.ab3@180> XINCLUDE "CLIModeSupport.ab3"
000144D8 <CLIModeSupport.ab3@181> XINCLUDE "CLIModeSupport.ab3"
000144FA <CLIModeSupport.ab3@182> XINCLUDE "CLIModeSupport.ab3"
00014512 <CLIModeSupport.ab3@184> XINCLUDE "CLIModeSupport.ab3"
00014538 <CLIModeSupport.ab3@185> XINCLUDE "CLIModeSupport.ab3"
00014562 <CLIModeSupport.ab3@186> XINCLUDE "CLIModeSupport.ab3"
00014570 <CLIModeSupport.ab3@187> XINCLUDE "CLIModeSupport.ab3"
00014576 <CLIModeSupport.ab3@188> XINCLUDE "CLIModeSupport.ab3"
0001458A <CLIModeSupport.ab3@189> XINCLUDE "CLIModeSupport.ab3"
000145A2 <CLIModeSupport.ab3@191> XINCLUDE "CLIModeSupport.ab3"
000145B0 <CLIModeSupport.ab3@192> XINCLUDE "CLIModeSupport.ab3"
000145C4 <CLIModeSupport.ab3@193> XINCLUDE "CLIModeSupport.ab3"
000145FA <CLIModeSupport.ab3@194> XINCLUDE "CLIModeSupport.ab3"
00014608 <CLIModeSupport.ab3@195> XINCLUDE "CLIModeSupport.ab3"
00014638 <CLIModeSupport.ab3@196> XINCLUDE "CLIModeSupport.ab3"
00014646 <CLIModeSupport.ab3@197> XINCLUDE "CLIModeSupport.ab3"
0001464C <CLIModeSupport.ab3@198> XINCLUDE "CLIModeSupport.ab3"
0001465A <CLIModeSupport.ab3@199> XINCLUDE "CLIModeSupport.ab3"
00014660 <CLIModeSupport.ab3@200> XINCLUDE "CLIModeSupport.ab3"
00014666 <CLIModeSupport.ab3@202> XINCLUDE "CLIModeSupport.ab3"
00014674 <CLIModeSupport.ab3@203> XINCLUDE "CLIModeSupport.ab3"
00014676 <CLIModeSupport.ab3@204> XINCLUDE "CLIModeSupport.ab3"
0001467C <CLIModeSupport.ab3@206> XINCLUDE "CLIModeSupport.ab3"
00014692 <CLIModeSupport.ab3@208> XINCLUDE "CLIModeSupport.ab3"
0001469C <CLIModeSupport.ab3@209> XINCLUDE "CLIModeSupport.ab3"
000146A2 <CLIModeSupport.ab3@210> XINCLUDE "CLIModeSupport.ab3"
000146CC <CLIModeSupport.ab3@214> XINCLUDE "CLIModeSupport.ab3"
0001470A <CLIModeSupport.ab3@215> XINCLUDE "CLIModeSupport.ab3"
0001470E <CLIModeSupport.ab3@216> XINCLUDE "CLIModeSupport.ab3"
0001474C <CLIModeSupport.ab3@217> XINCLUDE "CLIModeSupport.ab3"
00014750 <CLIModeSupport.ab3@218> XINCLUDE "CLIModeSupport.ab3"
0001478E <CLIModeSupport.ab3@219> XINCLUDE "CLIModeSupport.ab3"
00014792 <CLIModeSupport.ab3@220> XINCLUDE "CLIModeSupport.ab3"
0001479A <CLIModeSupport.ab3@222> XINCLUDE "CLIModeSupport.ab3"
000147A2 <CLIModeSupport.ab3@223> XINCLUDE "CLIModeSupport.ab3"
000147E6 <CLIModeSupport.ab3@225> XINCLUDE "CLIModeSupport.ab3"
000147F8 <CLIModeSupport.ab3@226> XINCLUDE "CLIModeSupport.ab3"
00014806 <CLIModeSupport.ab3@227> XINCLUDE "CLIModeSupport.ab3"
0001483A <CLIModeSupport.ab3@228> XINCLUDE "CLIModeSupport.ab3"
0001485E <CLIModeSupport.ab3@230> XINCLUDE "CLIModeSupport.ab3"
00014868 <CLIModeSupport.ab3@231> XINCLUDE "CLIModeSupport.ab3"
00014882 <CLIModeSupport.ab3@232> XINCLUDE "CLIModeSupport.ab3"
00014896 <CLIModeSupport.ab3@233> XINCLUDE "CLIModeSupport.ab3"
000148EE <CLIModeSupport.ab3@234> XINCLUDE "CLIModeSupport.ab3"
0001498E <CLIModeSupport.ab3@235> XINCLUDE "CLIModeSupport.ab3"
00014996 <CLIModeSupport.ab3@236> XINCLUDE "CLIModeSupport.ab3"
000149CE <CLIModeSupport.ab3@237> XINCLUDE "CLIModeSupport.ab3"
000149D4 <CLIModeSupport.ab3@238> XINCLUDE "CLIModeSupport.ab3"
000149E4 <CLIModeSupport.ab3@239> XINCLUDE "CLIModeSupport.ab3"
00014A0C <CLIModeSupport.ab3@242> XINCLUDE "CLIModeSupport.ab3"
00014A34 <CLIModeSupport.ab3@243> XINCLUDE "CLIModeSupport.ab3"
00014A3C <CLIModeSupport.ab3@244> XINCLUDE "CLIModeSupport.ab3"
00014A42 <CLIModeSupport.ab3@245> XINCLUDE "CLIModeSupport.ab3"
00014A48 <CLIModeSupport.ab3@246> XINCLUDE "CLIModeSupport.ab3"
00014A50 <CLIModeSupport.ab3@247> XINCLUDE "CLIModeSupport.ab3"
00014A78 <CLIModeSupport.ab3@248> XINCLUDE "CLIModeSupport.ab3"
00014A80 <CLIModeSupport.ab3@249> XINCLUDE "CLIModeSupport.ab3"
00014A88 <CLIModeSupport.ab3@250> XINCLUDE "CLIModeSupport.ab3"
00014A8E <CLIModeSupport.ab3@251> XINCLUDE "CLIModeSupport.ab3"
00014A94 <CLIModeSupport.ab3@252> XINCLUDE "CLIModeSupport.ab3"
00014A9A <CLIModeSupport.ab3@253> XINCLUDE "CLIModeSupport.ab3"
00014AA0 <CLIModeSupport.ab3@254> XINCLUDE "CLIModeSupport.ab3"
00014AA6 <CLIModeSupport.ab3@255> XINCLUDE "CLIModeSupport.ab3"
00014AAC <CLIModeSupport.ab3@256> XINCLUDE "CLIModeSupport.ab3"
00014AB2 <CLIModeSupport.ab3@257> XINCLUDE "CLIModeSupport.ab3"
00014AB8 <CLIModeSupport.ab3@258> XINCLUDE "CLIModeSupport.ab3"
00014AC0 <CLIModeSupport.ab3@259> XINCLUDE "CLIModeSupport.ab3"
00014AC8 <CLIModeSupport.ab3@260> XINCLUDE "CLIModeSupport.ab3"
00014AF0 <CLIModeSupport.ab3@261> XINCLUDE "CLIModeSupport.ab3"
00014AF6 <CLIModeSupport.ab3@262> XINCLUDE "CLIModeSupport.ab3"
00014AFC <CLIModeSupport.ab3@263> XINCLUDE "CLIModeSupport.ab3"
00014B04 <CLIModeSupport.ab3@264> XINCLUDE "CLIModeSupport.ab3"
00014B24 <CLIModeSupport.ab3@268> XINCLUDE "CLIModeSupport.ab3"
00014B34 <CLIModeSupport.ab3@270> XINCLUDE "CLIModeSupport.ab3"
00014B44 <CLIModeSupport.ab3@271> XINCLUDE "CLIModeSupport.ab3"
00014B54 <CLIModeSupport.ab3@273> XINCLUDE "CLIModeSupport.ab3"
00014B64 <CLIModeSupport.ab3@274> XINCLUDE "CLIModeSupport.ab3"
00014B74 <CLIModeSupport.ab3@275> XINCLUDE "CLIModeSupport.ab3"
00014B84 <CLIModeSupport.ab3@276> XINCLUDE "CLIModeSupport.ab3"
00014B94 <CLIModeSupport.ab3@277> XINCLUDE "CLIModeSupport.ab3"
00014BA4 <CLIModeSupport.ab3@278> XINCLUDE "CLIModeSupport.ab3"
00014BB4 <CLIModeSupport.ab3@279> XINCLUDE "CLIModeSupport.ab3"
00014BC4 <CLIModeSupport.ab3@280> XINCLUDE "CLIModeSupport.ab3"
00014BD4 <CLIModeSupport.ab3@281> XINCLUDE "CLIModeSupport.ab3"
00014BE4 <CLIModeSupport.ab3@282> XINCLUDE "CLIModeSupport.ab3"
00014BF4 <CLIModeSupport.ab3@283> XINCLUDE "CLIModeSupport.ab3"
00014C04 <CLIModeSupport.ab3@284> XINCLUDE "CLIModeSupport.ab3"
00014C14 <CLIModeSupport.ab3@285> XINCLUDE "CLIModeSupport.ab3"
00014C24 <CLIModeSupport.ab3@286> XINCLUDE "CLIModeSupport.ab3"
00014C36 <CLIModeSupport.ab3@288> XINCLUDE "CLIModeSupport.ab3"
00014C48 <CLIModeSupport.ab3@289> XINCLUDE "CLIModeSupport.ab3"
00014C5A <CLIModeSupport.ab3@290> XINCLUDE "CLIModeSupport.ab3"
00014C6C <CLIModeSupport.ab3@291> XINCLUDE "CLIModeSupport.ab3"
00014C7E <CLIModeSupport.ab3@292> XINCLUDE "CLIModeSupport.ab3"
00014C90 <CLIModeSupport.ab3@293> XINCLUDE "CLIModeSupport.ab3"
00014CAE <CLIModeSupport.ab3@295> XINCLUDE "CLIModeSupport.ab3"
00014CB4 <CLIModeSupport.ab3@296> XINCLUDE "CLIModeSupport.ab3"
00014CBA <CLIModeSupport.ab3@298> XINCLUDE "CLIModeSupport.ab3"
00014CE4 <CLIModeSupport.ab3@299> XINCLUDE "CLIModeSupport.ab3"
00014CF6 <CLIModeSupport.ab3@300> XINCLUDE "CLIModeSupport.ab3"
00014D2A <CLIModeSupport.ab3@303> XINCLUDE "CLIModeSupport.ab3"
00014D42 <CLIModeSupport.ab3@304> XINCLUDE "CLIModeSupport.ab3"
00014D8E <CLIModeSupport.ab3@305> XINCLUDE "CLIModeSupport.ab3"
00014DA0 <CLIModeSupport.ab3@306> XINCLUDE "CLIModeSupport.ab3"
00014DF6 <CLIModeSupport.ab3@307> XINCLUDE "CLIModeSupport.ab3"
00014E68 <CLIModeSupport.ab3@308> XINCLUDE "CLIModeSupport.ab3"
00014E6E <CLIModeSupport.ab3@309> XINCLUDE "CLIModeSupport.ab3"
00014EA2 <CLIModeSupport.ab3@310> XINCLUDE "CLIModeSupport.ab3"
00014ECA <CLIModeSupport.ab3@311> XINCLUDE "CLIModeSupport.ab3"
00014EF2 <CLIModeSupport.ab3@313> XINCLUDE "CLIModeSupport.ab3"
00014F2C <CLIModeSupport.ab3@314> XINCLUDE "CLIModeSupport.ab3"
00014F44 <CLIModeSupport.ab3@315> XINCLUDE "CLIModeSupport.ab3"
00014FC8 <CLIModeSupport.ab3@316> XINCLUDE "CLIModeSupport.ab3"
00014FE2 <CLIModeSupport.ab3@317> XINCLUDE "CLIModeSupport.ab3"
00015030 <CLIModeSupport.ab3@318> XINCLUDE "CLIModeSupport.ab3"
00015040 <CLIModeSupport.ab3@320> XINCLUDE "CLIModeSupport.ab3"
00015048 <CLIModeSupport.ab3@322> XINCLUDE "CLIModeSupport.ab3"
0001505C <CLIModeSupport.ab3@323> XINCLUDE "CLIModeSupport.ab3"
000150A2 <CLIModeSupport.ab3@324> XINCLUDE "CLIModeSupport.ab3"
000150A8 <CLIModeSupport.ab3@325> XINCLUDE "CLIModeSupport.ab3"
000150F2 <CLIModeSupport.ab3@326> XINCLUDE "CLIModeSupport.ab3"
0001515C <CLIModeSupport.ab3@327> XINCLUDE "CLIModeSupport.ab3"
000151C2 <CLIModeSupport.ab3@328> XINCLUDE "CLIModeSupport.ab3"
000151F6 <CLIModeSupport.ab3@329> XINCLUDE "CLIModeSupport.ab3"
00015222 <CLIModeSupport.ab3@331> XINCLUDE "CLIModeSupport.ab3"
00015270 <CLIModeSupport.ab3@332> XINCLUDE "CLIModeSupport.ab3"
00015294 <CLIModeSupport.ab3@333> XINCLUDE "CLIModeSupport.ab3"
0001529A <CLIModeSupport.ab3@334> XINCLUDE "CLIModeSupport.ab3"
000152A8 <CLIModeSupport.ab3@336> XINCLUDE "CLIModeSupport.ab3"
00015306 <CLIModeSupport.ab3@338> XINCLUDE "CLIModeSupport.ab3"
00015364 <CLIModeSupport.ab3@339> XINCLUDE "CLIModeSupport.ab3"
0001538E <CLIModeSupport.ab3@340> XINCLUDE "CLIModeSupport.ab3"
00015398 <CLIModeSupport.ab3@341> XINCLUDE "CLIModeSupport.ab3"
000153A0 <CLIModeSupport.ab3@342> XINCLUDE "CLIModeSupport.ab3"
000153DE <CLIModeSupport.ab3@343> XINCLUDE "CLIModeSupport.ab3"
0001542A <CLIModeSupport.ab3@344> XINCLUDE "CLIModeSupport.ab3"
0001543C <CLIModeSupport.ab3@345> XINCLUDE "CLIModeSupport.ab3"
00015492 <CLIModeSupport.ab3@346> XINCLUDE "CLIModeSupport.ab3"
0001550A <CLIModeSupport.ab3@347> XINCLUDE "CLIModeSupport.ab3"
00015510 <CLIModeSupport.ab3@348> XINCLUDE "CLIModeSupport.ab3"
00015544 <CLIModeSupport.ab3@349> XINCLUDE "CLIModeSupport.ab3"
0001556C <CLIModeSupport.ab3@350> XINCLUDE "CLIModeSupport.ab3"
000155A2 <CLIModeSupport.ab3@353> XINCLUDE "CLIModeSupport.ab3"
000155B0 <CLIModeSupport.ab3@354> XINCLUDE "CLIModeSupport.ab3"
000155BE <CLIModeSupport.ab3@355> XINCLUDE "CLIModeSupport.ab3"
00015632 <CLIModeSupport.ab3@356> XINCLUDE "CLIModeSupport.ab3"
00015638 <CLIModeSupport.ab3@357> XINCLUDE "CLIModeSupport.ab3"
00015682 <CLIModeSupport.ab3@358> XINCLUDE "CLIModeSupport.ab3"
000156CC <CLIModeSupport.ab3@359> XINCLUDE "CLIModeSupport.ab3"
000156FC <CLIModeSupport.ab3@360> XINCLUDE "CLIModeSupport.ab3"
0001572C <CLIModeSupport.ab3@361> XINCLUDE "CLIModeSupport.ab3"
00015756 <CLIModeSupport.ab3@362> XINCLUDE "CLIModeSupport.ab3"
000157A8 <CLIModeSupport.ab3@363> XINCLUDE "CLIModeSupport.ab3"
000157FE <CLIModeSupport.ab3@364> XINCLUDE "CLIModeSupport.ab3"
0001584E <CLIModeSupport.ab3@365> XINCLUDE "CLIModeSupport.ab3"
000158B4 <CLIModeSupport.ab3@366> XINCLUDE "CLIModeSupport.ab3"
00015920 <CLIModeSupport.ab3@367> XINCLUDE "CLIModeSupport.ab3"
0001594C <CLIModeSupport.ab3@368> XINCLUDE "CLIModeSupport.ab3"
0001597C <CLIModeSupport.ab3@369> XINCLUDE "CLIModeSupport.ab3"
000159F8 <CLIModeSupport.ab3@370> XINCLUDE "CLIModeSupport.ab3"
00015A28 <CLIModeSupport.ab3@371> XINCLUDE "CLIModeSupport.ab3"
00015A58 <CLIModeSupport.ab3@372> XINCLUDE "CLIModeSupport.ab3"
00015A88 <CLIModeSupport.ab3@373> XINCLUDE "CLIModeSupport.ab3"
00015AB8 <CLIModeSupport.ab3@374> XINCLUDE "CLIModeSupport.ab3"
00015AE8 <CLIModeSupport.ab3@375> XINCLUDE "CLIModeSupport.ab3"
00015B18 <CLIModeSupport.ab3@376> XINCLUDE "CLIModeSupport.ab3"
00015B48 <CLIModeSupport.ab3@377> XINCLUDE "CLIModeSupport.ab3"
00015B78 <CLIModeSupport.ab3@378> XINCLUDE "CLIModeSupport.ab3"
00015BA8 <CLIModeSupport.ab3@379> XINCLUDE "CLIModeSupport.ab3"
00015BD8 <CLIModeSupport.ab3@380> XINCLUDE "CLIModeSupport.ab3"
00015C54 <CLIModeSupport.ab3@381> XINCLUDE "CLIModeSupport.ab3"
00015C86 <CLIModeSupport.ab3@382> XINCLUDE "CLIModeSupport.ab3"
00015CB8 <CLIModeSupport.ab3@383> XINCLUDE "CLIModeSupport.ab3"
00015CE8 <CLIModeSupport.ab3@384> XINCLUDE "CLIModeSupport.ab3"
00015CEE <CLIModeSupport.ab3@385> XINCLUDE "CLIModeSupport.ab3"
00015D62 <CLIModeSupport.ab3@386> XINCLUDE "CLIModeSupport.ab3"
00015DCE <CLIModeSupport.ab3@387> XINCLUDE "CLIModeSupport.ab3"
00015DE0 <CLIModeSupport.ab3@388> XINCLUDE "CLIModeSupport.ab3"
00015E0E <CLIModeSupport.ab3@389> XINCLUDE "CLIModeSupport.ab3"
00015E36 <CLIModeSupport.ab3@390> XINCLUDE "CLIModeSupport.ab3"
00015E4A <CLIModeSupport.ab3@391> XINCLUDE "CLIModeSupport.ab3"
00015E74 <CLIModeSupport.ab3@392> XINCLUDE "CLIModeSupport.ab3"
00015EB8 <CLIModeSupport.ab3@393> XINCLUDE "CLIModeSupport.ab3"
00015EC8 <CLIModeSupport.ab3@394> XINCLUDE "CLIModeSupport.ab3"
00015ED8 <CLIModeSupport.ab3@395> XINCLUDE "CLIModeSupport.ab3"
00015EDE <CLIModeSupport.ab3@396> XINCLUDE "CLIModeSupport.ab3"
00015EEE <CLIModeSupport.ab3@398> XINCLUDE "CLIModeSupport.ab3"
00015EFC <CLIModeSupport.ab3@402> XINCLUDE "CLIModeSupport.ab3"
00015F06 <CLIModeSupport.ab3@405> XINCLUDE "CLIModeSupport.ab3"
00015F3E <CLIModeSupport.ab3@408> XINCLUDE "CLIModeSupport.ab3"
00015F76 <CLIModeSupport.ab3@409> XINCLUDE "CLIModeSupport.ab3"
00015FAE <CLIModeSupport.ab3@410> XINCLUDE "CLIModeSupport.ab3"
00015FBE <CLIModeSupport.ab3@411> XINCLUDE "CLIModeSupport.ab3"
00016026 <CLIModeSupport.ab3@412> XINCLUDE "CLIModeSupport.ab3"
0001605E <CLIModeSupport.ab3@413> XINCLUDE "CLIModeSupport.ab3"
0001606E <CLIModeSupport.ab3@414> XINCLUDE "CLIModeSupport.ab3"
0001607E <CLIModeSupport.ab3@415> XINCLUDE "CLIModeSupport.ab3"
000160E6 <CLIModeSupport.ab3@416> XINCLUDE "CLIModeSupport.ab3"
0001614E <CLIModeSupport.ab3@417> XINCLUDE "CLIModeSupport.ab3"
000161B6 <CLIModeSupport.ab3@418> XINCLUDE "CLIModeSupport.ab3"
0001621E <CLIModeSupport.ab3@419> XINCLUDE "CLIModeSupport.ab3"
00016286 <CLIModeSupport.ab3@420> XINCLUDE "CLIModeSupport.ab3"
000162EE <CLIModeSupport.ab3@421> XINCLUDE "CLIModeSupport.ab3"
00016356 <CLIModeSupport.ab3@422> XINCLUDE "CLIModeSupport.ab3"
000163BE <CLIModeSupport.ab3@423> XINCLUDE "CLIModeSupport.ab3"
000163CE <CLIModeSupport.ab3@424> XINCLUDE "CLIModeSupport.ab3"
00016406 <CLIModeSupport.ab3@426> XINCLUDE "CLIModeSupport.ab3"
00016440 <CLIModeSupport.ab3@427> XINCLUDE "CLIModeSupport.ab3"
0001647A <CLIModeSupport.ab3@428> XINCLUDE "CLIModeSupport.ab3"
000164B2 <CLIModeSupport.ab3@429> XINCLUDE "CLIModeSupport.ab3"
000164EA <CLIModeSupport.ab3@430> XINCLUDE "CLIModeSupport.ab3"
00016510 <CLIModeSupport.ab3@432> XINCLUDE "CLIModeSupport.ab3"
00016518 <CLIModeSupport.ab3@435> XINCLUDE "CLIModeSupport.ab3"
00016520 <CLIModeSupport.ab3@437> XINCLUDE "CLIModeSupport.ab3"
00016528 <CLIModeSupport.ab3@438> XINCLUDE "CLIModeSupport.ab3"
00016530 <CLIModeSupport.ab3@440> XINCLUDE "CLIModeSupport.ab3"
00016544 <CLIModeSupport.ab3@441> XINCLUDE "CLIModeSupport.ab3"
00016572 <CLIModeSupport.ab3@442> XINCLUDE "CLIModeSupport.ab3"
0001658C <CLIModeSupport.ab3@443> XINCLUDE "CLIModeSupport.ab3"
0001659A <CLIModeSupport.ab3@444> XINCLUDE "CLIModeSupport.ab3"
00016606 <CLIModeSupport.ab3@445> XINCLUDE "CLIModeSupport.ab3"
0001662C <CLIModeSupport.ab3@446> XINCLUDE "CLIModeSupport.ab3"
00016648 <CLIModeSupport.ab3@447> XINCLUDE "CLIModeSupport.ab3"
00016652 <CLIModeSupport.ab3@448> XINCLUDE "CLIModeSupport.ab3"
0001665C <CLIModeSupport.ab3@449> XINCLUDE "CLIModeSupport.ab3"
00016668 <CLIModeSupport.ab3@450> XINCLUDE "CLIModeSupport.ab3"
00016676 <CLIModeSupport.ab3@451> XINCLUDE "CLIModeSupport.ab3"
00016682 <CLIModeSupport.ab3@452> XINCLUDE "CLIModeSupport.ab3"
000166BE <CLIModeSupport.ab3@453> XINCLUDE "CLIModeSupport.ab3"
000166D8 <CLIModeSupport.ab3@454> XINCLUDE "CLIModeSupport.ab3"
000166E6 <CLIModeSupport.ab3@455> XINCLUDE "CLIModeSupport.ab3"
00016706 <CLIModeSupport.ab3@456> XINCLUDE "CLIModeSupport.ab3"
00016714 <CLIModeSupport.ab3@457> XINCLUDE "CLIModeSupport.ab3"
00016722 <CLIModeSupport.ab3@458> XINCLUDE "CLIModeSupport.ab3"
00016728 <CLIModeSupport.ab3@460> XINCLUDE "CLIModeSupport.ab3"
00016738 <CLIModeSupport.ab3@461> XINCLUDE "CLIModeSupport.ab3"
0001673C <CLIModeSupport.ab3@463> XINCLUDE "CLIModeSupport.ab3"
00016770 <CLIModeSupport.ab3@464> XINCLUDE "CLIModeSupport.ab3"
000167A4 <CLIModeSupport.ab3@465> XINCLUDE "CLIModeSupport.ab3"
000167A8 <CLIModeSupport.ab3@466> XINCLUDE "CLIModeSupport.ab3"
000167DC <CLIModeSupport.ab3@467> XINCLUDE "CLIModeSupport.ab3"
000167E0 <CLIModeSupport.ab3@468> XINCLUDE "CLIModeSupport.ab3"
00016814 <CLIModeSupport.ab3@469> XINCLUDE "CLIModeSupport.ab3"
0001681A <CLIModeSupport.ab3@470> XINCLUDE "CLIModeSupport.ab3"
00016850 <CLIModeSupport.ab3@472> XINCLUDE "CLIModeSupport.ab3"
00016886 <CLIModeSupport.ab3@473> XINCLUDE "CLIModeSupport.ab3"
000168BC <CLIModeSupport.ab3@474> XINCLUDE "CLIModeSupport.ab3"
000168F4 <CLIModeSupport.ab3@475> XINCLUDE "CLIModeSupport.ab3"
0001692C <CLIModeSupport.ab3@476> XINCLUDE "CLIModeSupport.ab3"
000169CC <CLIModeSupport.ab3@478> XINCLUDE "CLIModeSupport.ab3"
00016A0C <CLIModeSupport.ab3@479> XINCLUDE "CLIModeSupport.ab3"
00016A44 <CLIModeSupport.ab3@482> XINCLUDE "CLIModeSupport.ab3"
00016A62 <CLIModeSupport.ab3@483> XINCLUDE "CLIModeSupport.ab3"
00016A66 <CLIModeSupport.ab3@484> XINCLUDE "CLIModeSupport.ab3"
00016A6C <CLIModeSupport.ab3@485> XINCLUDE "CLIModeSupport.ab3"
00016A72 <CLIModeSupport.ab3@486> XINCLUDE "CLIModeSupport.ab3"
00016A76 <CLIModeSupport.ab3@487> XINCLUDE "CLIModeSupport.ab3"
00016AA0 <CLIModeSupport.ab3@488> XINCLUDE "CLIModeSupport.ab3"
00016AB4 <CLIModeSupport.ab3@492> XINCLUDE "CLIModeSupport.ab3"
00016AF2 <CLIModeSupport.ab3@493> XINCLUDE "CLIModeSupport.ab3"
00016B26 <CLIModeSupport.ab3@494> XINCLUDE "CLIModeSupport.ab3"
00016B5C <CLIModeSupport.ab3@498> XINCLUDE "CLIModeSupport.ab3"
00016BB4 <CLIModeSupport.ab3@500> XINCLUDE "CLIModeSupport.ab3"
00016BE2 <CLIModeSupport.ab3@501> XINCLUDE "CLIModeSupport.ab3"
00016BE6 <CLIModeSupport.ab3@502> XINCLUDE "CLIModeSupport.ab3"
00016C1C <CLIModeSupport.ab3@503> XINCLUDE "CLIModeSupport.ab3"
00016C4A <CLIModeSupport.ab3@504> XINCLUDE "CLIModeSupport.ab3"
00016C78 <CLIModeSupport.ab3@506> XINCLUDE "CLIModeSupport.ab3"
00016C7C <CLIModeSupport.ab3@507> XINCLUDE "CLIModeSupport.ab3"
00016CB2 <CLIModeSupport.ab3@508> XINCLUDE "CLIModeSupport.ab3"
00016CE0 <CLIModeSupport.ab3@510> XINCLUDE "CLIModeSupport.ab3"
00016CE4 <CLIModeSupport.ab3@511> XINCLUDE "CLIModeSupport.ab3"
00016D48 <CLIModeSupport.ab3@512> XINCLUDE "CLIModeSupport.ab3"
00016D4E <CLIModeSupport.ab3@515> XINCLUDE "CLIModeSupport.ab3"
00016D88 <CLIModeSupport.ab3@516> XINCLUDE "CLIModeSupport.ab3"
00016D92 <CLIModeSupport.ab3@519> XINCLUDE "CLIModeSupport.ab3"
00016D9C <CLIModeSupport.ab3@521> XINCLUDE "CLIModeSupport.ab3"
00016DB6 <CLIModeSupport.ab3@522> XINCLUDE "CLIModeSupport.ab3"
00016DE0 <CLIModeSupport.ab3@525> XINCLUDE "CLIModeSupport.ab3"
00016DE6 <CLIModeSupport.ab3@526> XINCLUDE "CLIModeSupport.ab3"
00016E06 <CLIModeSupport.ab3@527> XINCLUDE "CLIModeSupport.ab3"
00016E10 <CLIModeSupport.ab3@528> XINCLUDE "CLIModeSupport.ab3"
00016E14 <CLIModeSupport.ab3@529> XINCLUDE "CLIModeSupport.ab3"
00016E16 <CLIModeSupport.ab3@530> XINCLUDE "CLIModeSupport.ab3"
00016E34 <CLIModeSupport.ab3@531> XINCLUDE "CLIModeSupport.ab3"
00016E36 <CLIModeSupport.ab3@532> XINCLUDE "CLIModeSupport.ab3"
00016E3C <CLIModeSupport.ab3@533> XINCLUDE "CLIModeSupport.ab3"
00016E42 <CLIModeSupport.ab3@535> XINCLUDE "CLIModeSupport.ab3"
00016E6C <CLIModeSupport.ab3@536> XINCLUDE "CLIModeSupport.ab3"
00016E6E <CLIModeSupport.ab3@537> XINCLUDE "CLIModeSupport.ab3"
00016E9C <CLIModeSupport.ab3@538> XINCLUDE "CLIModeSupport.ab3"
00016EA0 <CLIModeSupport.ab3@539> XINCLUDE "CLIModeSupport.ab3"
00016ECE <CLIModeSupport.ab3@540> XINCLUDE "CLIModeSupport.ab3"
00016ED2 <CLIModeSupport.ab3@541> XINCLUDE "CLIModeSupport.ab3"
00016EF8 <CLIModeSupport.ab3@542> XINCLUDE "CLIModeSupport.ab3"
00016F08 <CLIModeSupport.ab3@543> XINCLUDE "CLIModeSupport.ab3"
00016F0E <CLIModeSupport.ab3@544> XINCLUDE "CLIModeSupport.ab3"
00016F14 <CLIModeSupport.ab3@545> XINCLUDE "CLIModeSupport.ab3"
00016F4E <CLIModeSupport.ab3@546> XINCLUDE "CLIModeSupport.ab3"
00016F58 <CLIModeSupport.ab3@548> XINCLUDE "CLIModeSupport.ab3"
00016F72 <CLIModeSupport.ab3@549> XINCLUDE "CLIModeSupport.ab3"
00016F8C <CLIModeSupport.ab3@552> XINCLUDE "CLIModeSupport.ab3"
00016FB6 <CLIModeSupport.ab3@553> XINCLUDE "CLIModeSupport.ab3"
00016FE4 <CLIModeSupport.ab3@554> XINCLUDE "CLIModeSupport.ab3"
00017074 <CLIModeSupport.ab3@555> XINCLUDE "CLIModeSupport.ab3"
0001707E <CLIModeSupport.ab3@557> XINCLUDE "CLIModeSupport.ab3"
00017092 <CLIModeSupport.ab3@558> XINCLUDE "CLIModeSupport.ab3"
000170CE <CLIModeSupport.ab3@559> XINCLUDE "CLIModeSupport.ab3"
0001710A <CLIModeSupport.ab3@560> XINCLUDE "CLIModeSupport.ab3"
00017146 <CLIModeSupport.ab3@561> XINCLUDE "CLIModeSupport.ab3"
00017182 <CLIModeSupport.ab3@562> XINCLUDE "CLIModeSupport.ab3"
000171BE <CLIModeSupport.ab3@563> XINCLUDE "CLIModeSupport.ab3"
000171C4 <CLIModeSupport.ab3@564> XINCLUDE "CLIModeSupport.ab3"
000171FE <CLIModeSupport.ab3@565> XINCLUDE "CLIModeSupport.ab3"
0001720A <CLIModeSupport.ab3@569> XINCLUDE "CLIModeSupport.ab3"
00017224 <CLIModeSupport.ab3@570> XINCLUDE "CLIModeSupport.ab3"
00017226 <CLIModeSupport.ab3@572> XINCLUDE "CLIModeSupport.ab3"
00017244 <CLIModeSupport.ab3@573> XINCLUDE "CLIModeSupport.ab3"
0001724A <CLIModeSupport.ab3@574> XINCLUDE "CLIModeSupport.ab3"
00017274 <CLIModeSupport.ab3@575> XINCLUDE "CLIModeSupport.ab3"
00017276 <CLIModeSupport.ab3@576> XINCLUDE "CLIModeSupport.ab3"
00017280 <CLIModeSupport.ab3@578> XINCLUDE "CLIModeSupport.ab3"
00017286 <CLIModeSupport.ab3@579> XINCLUDE "CLIModeSupport.ab3"
00017298 <CLIModeSupport.ab3@582> XINCLUDE "CLIModeSupport.ab3"
000172CA <CLIModeSupport.ab3@585> XINCLUDE "CLIModeSupport.ab3"
000172D4 <CLIModeSupport.ab3@587> XINCLUDE "CLIModeSupport.ab3"
0001733E <CLIModeSupport.ab3@588> XINCLUDE "CLIModeSupport.ab3"
000173A8 <CLIModeSupport.ab3@589> XINCLUDE "CLIModeSupport.ab3"
000173AE <CLIModeSupport.ab3@595> XINCLUDE "CLIModeSupport.ab3"
00017418 <CLIModeSupport.ab3@596> XINCLUDE "CLIModeSupport.ab3"
00017482 <CLIModeSupport.ab3@597> XINCLUDE "CLIModeSupport.ab3"
0001748C <CLIModeSupport.ab3@600> XINCLUDE "CLIModeSupport.ab3"
000174F6 <CLIModeSupport.ab3@601> XINCLUDE "CLIModeSupport.ab3"
0001752C <CLIModeSupport.ab3@602> XINCLUDE "CLIModeSupport.ab3"
00017532 <CLIModeSupport.ab3@603> XINCLUDE "CLIModeSupport.ab3"
0001759C <CLIModeSupport.ab3@605> XINCLUDE "CLIModeSupport.ab3"
000175D2 <CLIModeSupport.ab3@606> XINCLUDE "CLIModeSupport.ab3"
000175DA <CLIModeSupport.ab3@609> XINCLUDE "CLIModeSupport.ab3"
00017608 <CLIModeSupport.ab3@611> XINCLUDE "CLIModeSupport.ab3"
0001760C <CLIModeSupport.ab3@612> XINCLUDE "CLIModeSupport.ab3"
00017634 <CLIModeSupport.ab3@613> XINCLUDE "CLIModeSupport.ab3"
0001763A <CLIModeSupport.ab3@616> XINCLUDE "CLIModeSupport.ab3"
00017640 <CLIModeSupport.ab3@619> XINCLUDE "CLIModeSupport.ab3"
00017646 <CLIModeSupport.ab3@620> XINCLUDE "CLIModeSupport.ab3"
0001764C <CLIModeSupport.ab3@621> XINCLUDE "CLIModeSupport.ab3"
00017652 <CLIModeSupport.ab3@622> XINCLUDE "CLIModeSupport.ab3"
0001765C <CLIModeSupport.ab3@623> XINCLUDE "CLIModeSupport.ab3"
00017666 <CLIModeSupport.ab3@624> XINCLUDE "CLIModeSupport.ab3"
00017694 <CLIModeSupport.ab3@626> XINCLUDE "CLIModeSupport.ab3"
000176C0 <CLIModeSupport.ab3@628> XINCLUDE "CLIModeSupport.ab3"
000176C8 <CLIModeSupport.ab3@629> XINCLUDE "CLIModeSupport.ab3"
000176FC <CLIModeSupport.ab3@631> XINCLUDE "CLIModeSupport.ab3"
0001770E <CLIModeSupport.ab3@632> XINCLUDE "CLIModeSupport.ab3"
00017774 <CLIModeSupport.ab3@633> XINCLUDE "CLIModeSupport.ab3"
000177DA <CLIModeSupport.ab3@634> XINCLUDE "CLIModeSupport.ab3"
000177E0 <CLIModeSupport.ab3@635> XINCLUDE "CLIModeSupport.ab3"
000177E8 <CLIModeSupport.ab3@636> XINCLUDE "CLIModeSupport.ab3"
000177EA <CLIModeSupport.ab3@640> XINCLUDE "CLIModeSupport.ab3"
00017808 <CLIModeSupport.ab3@641> XINCLUDE "CLIModeSupport.ab3"
00017846 <CLIModeSupport.ab3@642> XINCLUDE "CLIModeSupport.ab3"
00017884 <CLIModeSupport.ab3@643> XINCLUDE "CLIModeSupport.ab3"
0001788A <CLIModeSupport.ab3@645> XINCLUDE "CLIModeSupport.ab3"
00017890 <CLIModeSupport.ab3@646> XINCLUDE "CLIModeSupport.ab3"
00017896 <CLIModeSupport.ab3@647> XINCLUDE "CLIModeSupport.ab3"
000178A0 <CLIModeSupport.ab3@650> XINCLUDE "CLIModeSupport.ab3"
000178A6 <CLIModeSupport.ab3@651> XINCLUDE "CLIModeSupport.ab3"
000178AC <CLIModeSupport.ab3@652> XINCLUDE "CLIModeSupport.ab3"
000178B2 <CLIModeSupport.ab3@653> XINCLUDE "CLIModeSupport.ab3"
000178B8 <CLIModeSupport.ab3@654> XINCLUDE "CLIModeSupport.ab3"
000178BC <CLIModeSupport.ab3@655> XINCLUDE "CLIModeSupport.ab3"
000178C6 <CLIModeSupport.ab3@656> XINCLUDE "CLIModeSupport.ab3"
000178CA <CLIModeSupport.ab3@657> XINCLUDE "CLIModeSupport.ab3"
000178F4 <CLIModeSupport.ab3@659> XINCLUDE "CLIModeSupport.ab3"
000178F6 <CLIModeSupport.ab3@660> XINCLUDE "CLIModeSupport.ab3"
000178FC <CLIModeSupport.ab3@662> XINCLUDE "CLIModeSupport.ab3"
00017900 <CLIModeSupport.ab3@663> XINCLUDE "CLIModeSupport.ab3"
00017906 <CLIModeSupport.ab3@665> XINCLUDE "CLIModeSupport.ab3"
0001790A <CLIModeSupport.ab3@666> XINCLUDE "CLIModeSupport.ab3"
0001791A <CLIModeSupport.ab3@668> XINCLUDE "CLIModeSupport.ab3"
00017974 <CLIModeSupport.ab3@669> XINCLUDE "CLIModeSupport.ab3"
00017986 <CLIModeSupport.ab3@671> XINCLUDE "CLIModeSupport.ab3"
000179F0 <CLIModeSupport.ab3@672> XINCLUDE "CLIModeSupport.ab3"
000179F6 <CLIModeSupport.ab3@673> XINCLUDE "CLIModeSupport.ab3"
00017A40 <CLIModeSupport.ab3@674> XINCLUDE "CLIModeSupport.ab3"
00017A52 <CLIModeSupport.ab3@677> XINCLUDE "CLIModeSupport.ab3"
00017A7E <CLIModeSupport.ab3@678> XINCLUDE "CLIModeSupport.ab3"
00017B24 <CLIModeSupport.ab3@679> XINCLUDE "CLIModeSupport.ab3"
00017B42 <CLIModeSupport.ab3@680> XINCLUDE "CLIModeSupport.ab3"
00017B48 <CLIModeSupport.ab3@681> XINCLUDE "CLIModeSupport.ab3"
00017B72 <CLIModeSupport.ab3@682> XINCLUDE "CLIModeSupport.ab3"
00017B7C <CLIModeSupport.ab3@683> XINCLUDE "CLIModeSupport.ab3"
00017BAE <CLIModeSupport.ab3@684> XINCLUDE "CLIModeSupport.ab3"
00017BC8 <CLIModeSupport.ab3@685> XINCLUDE "CLIModeSupport.ab3"
00017BDC <CLIModeSupport.ab3@690> XINCLUDE "CLIModeSupport.ab3"
00017BE8 <CLIModeSupport.ab3@692> XINCLUDE "CLIModeSupport.ab3"
00017C02 <CLIModeSupport.ab3@693> XINCLUDE "CLIModeSupport.ab3"
00017C0C <CLIModeSupport.ab3@695> XINCLUDE "CLIModeSupport.ab3"
00017C26 <CLIModeSupport.ab3@697> XINCLUDE "CLIModeSupport.ab3"
00017C50 <CLIModeSupport.ab3@701> XINCLUDE "CLIModeSupport.ab3"
00017C74 <CLIModeSupport.ab3@702> XINCLUDE "CLIModeSupport.ab3"
00017CB2 <CLIModeSupport.ab3@703> XINCLUDE "CLIModeSupport.ab3"
00017CB6 <CLIModeSupport.ab3@704> XINCLUDE "CLIModeSupport.ab3"
00017CF4 <CLIModeSupport.ab3@706> XINCLUDE "CLIModeSupport.ab3"
00017CF8 <CLIModeSupport.ab3@707> XINCLUDE "CLIModeSupport.ab3"
00017D36 <CLIModeSupport.ab3@710> XINCLUDE "CLIModeSupport.ab3"
00017D74 <CLIModeSupport.ab3@711> XINCLUDE "CLIModeSupport.ab3"
00017D76 <CLIModeSupport.ab3@712> XINCLUDE "CLIModeSupport.ab3"
00017DAA <CLIModeSupport.ab3@713> XINCLUDE "CLIModeSupport.ab3"
00017DB0 <CLIModeSupport.ab3@715> XINCLUDE "CLIModeSupport.ab3"
00017DF4 <CLIModeSupport.ab3@716> XINCLUDE "CLIModeSupport.ab3"
00017E06 <CLIModeSupport.ab3@717> XINCLUDE "CLIModeSupport.ab3"
00017E0E <CLIModeSupport.ab3@719> XINCLUDE "CLIModeSupport.ab3"
00017E14 <CLIModeSupport.ab3@720> XINCLUDE "CLIModeSupport.ab3"
00017E1E <CLIModeSupport.ab3@722> XINCLUDE "CLIModeSupport.ab3"
00017E2C <CLIModeSupport.ab3@723> XINCLUDE "CLIModeSupport.ab3"
00017E32 <CLIModeSupport.ab3@724> XINCLUDE "CLIModeSupport.ab3"
00017E5A <CLIModeSupport.ab3@725> XINCLUDE "CLIModeSupport.ab3"
00017E74 <CLIModeSupport.ab3@726> XINCLUDE "CLIModeSupport.ab3"
00017E7E <CLIModeSupport.ab3@727> XINCLUDE "CLIModeSupport.ab3"
00017E84 <CLIModeSupport.ab3@728> XINCLUDE "CLIModeSupport.ab3"
00017EA2 <CLIModeSupport.ab3@730> XINCLUDE "CLIModeSupport.ab3"
00017EAC <CLIModeSupport.ab3@731> XINCLUDE "CLIModeSupport.ab3"
00017EB2 <CLIModeSupport.ab3@732> XINCLUDE "CLIModeSupport.ab3"
00017EB8 <CLIModeSupport.ab3@733> XINCLUDE "CLIModeSupport.ab3"
00017EC2 <CLIModeSupport.ab3@734> XINCLUDE "CLIModeSupport.ab3"
00017ED0 <CLIModeSupport.ab3@735> XINCLUDE "CLIModeSupport.ab3"
00017ED6 <CLIModeSupport.ab3@736> XINCLUDE "CLIModeSupport.ab3"
00017EE6 <CLIModeSupport.ab3@738> XINCLUDE "CLIModeSupport.ab3"
00017F12 <CLIModeSupport.ab3@739> XINCLUDE "CLIModeSupport.ab3"
00017F28 <CLIModeSupport.ab3@740> XINCLUDE "CLIModeSupport.ab3"
00017F32 <CLIModeSupport.ab3@741> XINCLUDE "CLIModeSupport.ab3"
00017F38 <CLIModeSupport.ab3@742> XINCLUDE "CLIModeSupport.ab3"
00017F90 <CLIModeSupport.ab3@744> XINCLUDE "CLIModeSupport.ab3"
00017FFE <CLIModeSupport.ab3@746> XINCLUDE "CLIModeSupport.ab3"
00018016 <CLIModeSupport.ab3@747> XINCLUDE "CLIModeSupport.ab3"
0001801C <CLIModeSupport.ab3@748> XINCLUDE "CLIModeSupport.ab3"
00018054 <CLIModeSupport.ab3@749> XINCLUDE "CLIModeSupport.ab3"
00018082 <CLIModeSupport.ab3@751> XINCLUDE "CLIModeSupport.ab3"
000180AC <CLIModeSupport.ab3@752> XINCLUDE "CLIModeSupport.ab3"
000180B6 <CLIModeSupport.ab3@754> XINCLUDE "CLIModeSupport.ab3"
000180DE <CLIModeSupport.ab3@755> XINCLUDE "CLIModeSupport.ab3"
00018108 <CLIModeSupport.ab3@756> XINCLUDE "CLIModeSupport.ab3"
000181AA <CLIModeSupport.ab3@757> XINCLUDE "CLIModeSupport.ab3"
000181B8 <CLIModeSupport.ab3@758> XINCLUDE "CLIModeSupport.ab3"
00018208 <CLIModeSupport.ab3@759> XINCLUDE "CLIModeSupport.ab3"
00018218 <CLIModeSupport.ab3@760> XINCLUDE "CLIModeSupport.ab3"
000182E0 <CLIModeSupport.ab3@761> XINCLUDE "CLIModeSupport.ab3"
00018314 <CLIModeSupport.ab3@763> XINCLUDE "CLIModeSupport.ab3"
00018348 <CLIModeSupport.ab3@764> XINCLUDE "CLIModeSupport.ab3"
0001837C <CLIModeSupport.ab3@765> XINCLUDE "CLIModeSupport.ab3"
000183B0 <CLIModeSupport.ab3@766> XINCLUDE "CLIModeSupport.ab3"
000183E4 <CLIModeSupport.ab3@767> XINCLUDE "CLIModeSupport.ab3"
00018418 <CLIModeSupport.ab3@768> XINCLUDE "CLIModeSupport.ab3"
0001844C <CLIModeSupport.ab3@769> XINCLUDE "CLIModeSupport.ab3"
00018480 <CLIModeSupport.ab3@770> XINCLUDE "CLIModeSupport.ab3"
00018482 <CLIModeSupport.ab3@772> XINCLUDE "CLIModeSupport.ab3"
000184C0 <CLIModeSupport.ab3@773> XINCLUDE "CLIModeSupport.ab3"
000184C4 <CLIModeSupport.ab3@774> XINCLUDE "CLIModeSupport.ab3"
00018502 <CLIModeSupport.ab3@777> XINCLUDE "CLIModeSupport.ab3"
00018540 <CLIModeSupport.ab3@778> XINCLUDE "CLIModeSupport.ab3"
00018542 <CLIModeSupport.ab3@779> XINCLUDE "CLIModeSupport.ab3"
00018548 <CLIModeSupport.ab3@780> XINCLUDE "CLIModeSupport.ab3"
0001854C <CLIModeSupport.ab3@781> XINCLUDE "CLIModeSupport.ab3"
0001854E <CLIModeSupport.ab3@783> XINCLUDE "CLIModeSupport.ab3"
0001858C <CLIModeSupport.ab3@784> XINCLUDE "CLIModeSupport.ab3"
000185CA <CLIModeSupport.ab3@785> XINCLUDE "CLIModeSupport.ab3"
000185CC <CLIModeSupport.ab3@786> XINCLUDE "CLIModeSupport.ab3"
000185CE <CLIModeSupport.ab3@787> XINCLUDE "CLIModeSupport.ab3"
000185D0 <CLIModeSupport.ab3@788> XINCLUDE "CLIModeSupport.ab3"
000185D6 <CLIModeSupport.ab3@789> XINCLUDE "CLIModeSupport.ab3"
000185DA <CLIModeSupport.ab3@790> XINCLUDE "CLIModeSupport.ab3"
000185EA <CLIModeSupport.ab3@792> XINCLUDE "CLIModeSupport.ab3"
00018602 <CLIModeSupport.ab3@793> XINCLUDE "CLIModeSupport.ab3"
0001861A <CLIModeSupport.ab3@794> XINCLUDE "CLIModeSupport.ab3"
00018632 <CLIModeSupport.ab3@795> XINCLUDE "CLIModeSupport.ab3"
0001865C <CLIModeSupport.ab3@797> XINCLUDE "CLIModeSupport.ab3"
00018686 <CLIModeSupport.ab3@798> XINCLUDE "CLIModeSupport.ab3"
000186B4 <CLIModeSupport.ab3@800> XINCLUDE "CLIModeSupport.ab3"
000186B8 <CLIModeSupport.ab3@801> XINCLUDE "CLIModeSupport.ab3"
000186E0 <CLIModeSupport.ab3@802> XINCLUDE "CLIModeSupport.ab3"
000186E2 <CLIModeSupport.ab3@803> XINCLUDE "CLIModeSupport.ab3"
00018720 <CLIModeSupport.ab3@804> XINCLUDE "CLIModeSupport.ab3"
00018724 <CLIModeSupport.ab3@805> XINCLUDE "CLIModeSupport.ab3"
00018762 <CLIModeSupport.ab3@806> XINCLUDE "CLIModeSupport.ab3"
00018766 <CLIModeSupport.ab3@807> XINCLUDE "CLIModeSupport.ab3"
000187A4 <CLIModeSupport.ab3@808> XINCLUDE "CLIModeSupport.ab3"
000187A8 <CLIModeSupport.ab3@809> XINCLUDE "CLIModeSupport.ab3"
000187E6 <CLIModeSupport.ab3@811> XINCLUDE "CLIModeSupport.ab3"
000187EA <CLIModeSupport.ab3@812> XINCLUDE "CLIModeSupport.ab3"
00018810 <CLIModeSupport.ab3@814> XINCLUDE "CLIModeSupport.ab3"
00018836 <CLIModeSupport.ab3@815> XINCLUDE "CLIModeSupport.ab3"
0001885C <CLIModeSupport.ab3@816> XINCLUDE "CLIModeSupport.ab3"
00018882 <CLIModeSupport.ab3@817> XINCLUDE "CLIModeSupport.ab3"
000188A8 <CLIModeSupport.ab3@818> XINCLUDE "CLIModeSupport.ab3"
000188FE <CLIModeSupport.ab3@819> XINCLUDE "CLIModeSupport.ab3"
00018954 <CLIModeSupport.ab3@820> XINCLUDE "CLIModeSupport.ab3"
000189A2 <CLIModeSupport.ab3@821> XINCLUDE "CLIModeSupport.ab3"
000189F8 <CLIModeSupport.ab3@822> XINCLUDE "CLIModeSupport.ab3"
00018A1E <CLIModeSupport.ab3@823> XINCLUDE "CLIModeSupport.ab3"
00018A44 <CLIModeSupport.ab3@824> XINCLUDE "CLIModeSupport.ab3"
00018A6A <CLIModeSupport.ab3@825> XINCLUDE "CLIModeSupport.ab3"
00018AC0 <CLIModeSupport.ab3@826> XINCLUDE "CLIModeSupport.ab3"
00018B0E <CLIModeSupport.ab3@827> XINCLUDE "CLIModeSupport.ab3"
00018B5C <CLIModeSupport.ab3@828> XINCLUDE "CLIModeSupport.ab3"
00018C16 <CLIModeSupport.ab3@829> XINCLUDE "CLIModeSupport.ab3"
00018C6C <CLIModeSupport.ab3@830> XINCLUDE "CLIModeSupport.ab3"
00018C92 <CLIModeSupport.ab3@831> XINCLUDE "CLIModeSupport.ab3"
00018CB8 <CLIModeSupport.ab3@832> XINCLUDE "CLIModeSupport.ab3"
00018CDE <CLIModeSupport.ab3@833> XINCLUDE "CLIModeSupport.ab3"
00018D34 <CLIModeSupport.ab3@834> XINCLUDE "CLIModeSupport.ab3"
00018D8A <CLIModeSupport.ab3@835> XINCLUDE "CLIModeSupport.ab3"
00018DD8 <CLIModeSupport.ab3@836> XINCLUDE "CLIModeSupport.ab3"
00018E26 <CLIModeSupport.ab3@837> XINCLUDE "CLIModeSupport.ab3"
00018E74 <CLIModeSupport.ab3@838> XINCLUDE "CLIModeSupport.ab3"
00018EC2 <CLIModeSupport.ab3@839> XINCLUDE "CLIModeSupport.ab3"
00018F10 <CLIModeSupport.ab3@840> XINCLUDE "CLIModeSupport.ab3"
00018F5E <CLIModeSupport.ab3@841> XINCLUDE "CLIModeSupport.ab3"
00018FAC <CLIModeSupport.ab3@842> XINCLUDE "CLIModeSupport.ab3"
00018FD2 <CLIModeSupport.ab3@843> XINCLUDE "CLIModeSupport.ab3"
00018FF8 <CLIModeSupport.ab3@844> XINCLUDE "CLIModeSupport.ab3"
0001901E <CLIModeSupport.ab3@845> XINCLUDE "CLIModeSupport.ab3"
0001906C <CLIModeSupport.ab3@846> XINCLUDE "CLIModeSupport.ab3"
000190BA <CLIModeSupport.ab3@847> XINCLUDE "CLIModeSupport.ab3"
00019110 <CLIModeSupport.ab3@848> XINCLUDE "CLIModeSupport.ab3"
0001915E <CLIModeSupport.ab3@849> XINCLUDE "CLIModeSupport.ab3"
000191AC <CLIModeSupport.ab3@850> XINCLUDE "CLIModeSupport.ab3"
000191FA <CLIModeSupport.ab3@851> XINCLUDE "CLIModeSupport.ab3"
00019220 <CLIModeSupport.ab3@852> XINCLUDE "CLIModeSupport.ab3"
00019246 <CLIModeSupport.ab3@853> XINCLUDE "CLIModeSupport.ab3"
0001926C <CLIModeSupport.ab3@854> XINCLUDE "CLIModeSupport.ab3"
000192A4 <CLIModeSupport.ab3@855> XINCLUDE "CLIModeSupport.ab3"
000192CC <CLIModeSupport.ab3@856> XINCLUDE "CLIModeSupport.ab3"
000192E0 <CLIModeSupport.ab3@857> XINCLUDE "CLIModeSupport.ab3"
00019354 <CLIModeSupport.ab3@858> XINCLUDE "CLIModeSupport.ab3"
0001939A <CLIModeSupport.ab3@859> XINCLUDE "CLIModeSupport.ab3"
00019448 <CLIModeSupport.ab3@860> XINCLUDE "CLIModeSupport.ab3"
000194B4 <CLIModeSupport.ab3@861> XINCLUDE "CLIModeSupport.ab3"
000194C4 <CLIModeSupport.ab3@862> XINCLUDE "CLIModeSupport.ab3"
000194EA <CLIModeSupport.ab3@864> XINCLUDE "CLIModeSupport.ab3"
000194F4 <CLIModeSupport.ab3@866> XINCLUDE "CLIModeSupport.ab3"
0001951E <CLIModeSupport.ab3@867> XINCLUDE "CLIModeSupport.ab3"
00019524 <CLIModeSupport.ab3@868> XINCLUDE "CLIModeSupport.ab3"
00019534 <CLIModeSupport.ab3@870> XINCLUDE "CLIModeSupport.ab3"
000195D4 <CLIModeSupport.ab3@872> XINCLUDE "CLIModeSupport.ab3"
00019614 <CLIModeSupport.ab3@873> XINCLUDE "CLIModeSupport.ab3"
0001961A <CLIModeSupport.ab3@875> XINCLUDE "CLIModeSupport.ab3"
0001967C <CLIModeSupport.ab3@876> XINCLUDE "CLIModeSupport.ab3"
00019686 <CLIModeSupport.ab3@878> XINCLUDE "CLIModeSupport.ab3"
00019690 <CLIModeSupport.ab3@880> XINCLUDE "CLIModeSupport.ab3"
000196AA <CLIModeSupport.ab3@881> XINCLUDE "CLIModeSupport.ab3"
000196CC <CLIModeSupport.ab3@937> XINCLUDE "CLIModeSupport.ab3"
000196EE <CLIModeSupport.ab3@938> XINCLUDE "CLIModeSupport.ab3"
00019748 <CLIModeSupport.ab3@939> XINCLUDE "CLIModeSupport.ab3"
0001976A <CLIModeSupport.ab3@940> XINCLUDE "CLIModeSupport.ab3"
000197C4 <CLIModeSupport.ab3@941> XINCLUDE "CLIModeSupport.ab3"
00019806 <CLIModeSupport.ab3@942> XINCLUDE "CLIModeSupport.ab3"
0001980C <CLIModeSupport.ab3@944> XINCLUDE "CLIModeSupport.ab3"
0001981A <CLIModeSupport.ab3@945> XINCLUDE "CLIModeSupport.ab3"
00019820 <CLIModeSupport.ab3@947> XINCLUDE "CLIModeSupport.ab3"
00019834 <CLIModeSupport.ab3@948> XINCLUDE "CLIModeSupport.ab3"
0001983E <CLIModeSupport.ab3@949> XINCLUDE "CLIModeSupport.ab3"
000198B8 <CLIModeSupport.ab3@950> XINCLUDE "CLIModeSupport.ab3"
000198C2 <CLIModeSupport.ab3@951> XINCLUDE "CLIModeSupport.ab3"
000198C8 <CLIModeSupport.ab3@952> XINCLUDE "CLIModeSupport.ab3"
000198DC <CLIModeSupport.ab3@955> XINCLUDE "CLIModeSupport.ab3"
000198E6 <CLIModeSupport.ab3@956> XINCLUDE "CLIModeSupport.ab3"
00019966 <CLIModeSupport.ab3@957> XINCLUDE "CLIModeSupport.ab3"
00019970 <CLIModeSupport.ab3@958> XINCLUDE "CLIModeSupport.ab3"
00019976 <CLIModeSupport.ab3@959> XINCLUDE "CLIModeSupport.ab3"
0001998A <CLIModeSupport.ab3@962> XINCLUDE "CLIModeSupport.ab3"
00019994 <CLIModeSupport.ab3@963> XINCLUDE "CLIModeSupport.ab3"
000199DC <CLIModeSupport.ab3@964> XINCLUDE "CLIModeSupport.ab3"
000199E6 <CLIModeSupport.ab3@966> XINCLUDE "CLIModeSupport.ab3"
000199EC <CLIModeSupport.ab3@967> XINCLUDE "CLIModeSupport.ab3"
00019A00 <CLIModeSupport.ab3@970> XINCLUDE "CLIModeSupport.ab3"
00019A0A <CLIModeSupport.ab3@971> XINCLUDE "CLIModeSupport.ab3"
00019A52 <CLIModeSupport.ab3@972> XINCLUDE "CLIModeSupport.ab3"
00019A5C <CLIModeSupport.ab3@973> XINCLUDE "CLIModeSupport.ab3"
00019A62 <CLIModeSupport.ab3@974> XINCLUDE "CLIModeSupport.ab3"
00019A76 <CLIModeSupport.ab3@977> XINCLUDE "CLIModeSupport.ab3"
00019A9C <CLIModeSupport.ab3@978> XINCLUDE "CLIModeSupport.ab3"
00019AB0 <CLIModeSupport.ab3@981> XINCLUDE "CLIModeSupport.ab3"
00019AD6 <CLIModeSupport.ab3@982> XINCLUDE "CLIModeSupport.ab3"
00019AEA <CLIModeSupport.ab3@985> XINCLUDE "CLIModeSupport.ab3"
00019B10 <CLIModeSupport.ab3@986> XINCLUDE "CLIModeSupport.ab3"
00019B24 <CLIModeSupport.ab3@989> XINCLUDE "CLIModeSupport.ab3"
00019B2E <CLIModeSupport.ab3@990> XINCLUDE "CLIModeSupport.ab3"
00019B5C <CLIModeSupport.ab3@991> XINCLUDE "CLIModeSupport.ab3"
00019BAC <CLIModeSupport.ab3@992> XINCLUDE "CLIModeSupport.ab3"
00019BCC <CLIModeSupport.ab3@993> XINCLUDE "CLIModeSupport.ab3"
00019BE4 <CLIModeSupport.ab3@994> XINCLUDE "CLIModeSupport.ab3"
00019CC8 <CLIModeSupport.ab3@995> XINCLUDE "CLIModeSupport.ab3"
00019CD2 <CLIModeSupport.ab3@996> XINCLUDE "CLIModeSupport.ab3"
00019CD8 <CLIModeSupport.ab3@997> XINCLUDE "CLIModeSupport.ab3"
00019CDA <CLIModeSupport.ab3@999> XINCLUDE "CLIModeSupport.ab3"
00019CEE <CLIModeSupport.ab3@1000> XINCLUDE "CLIModeSupport.ab3"
00019D20 <CLIModeSupport.ab3@1003> XINCLUDE "CLIModeSupport.ab3"
00019D26 <CLIModeSupport.ab3@1004> XINCLUDE "CLIModeSupport.ab3"
00019D6A <CLIModeSupport.ab3@1005> XINCLUDE "CLIModeSupport.ab3"
00019D7C <CLIModeSupport.ab3@1006> XINCLUDE "CLIModeSupport.ab3"
00019D8E <CLIModeSupport.ab3@1007> XINCLUDE "CLIModeSupport.ab3"
00019D98 <CLIModeSupport.ab3@1008> XINCLUDE "CLIModeSupport.ab3"
00019D9E <CLIModeSupport.ab3@1009> XINCLUDE "CLIModeSupport.ab3"
00019DA8 <CLIModeSupport.ab3@1011> XINCLUDE "CLIModeSupport.ab3"
00019DC2 <CLIModeSupport.ab3@1012> XINCLUDE "CLIModeSupport.ab3"
00019DC2 <AmiBlitz3.ab2@95> XINCLUDE "CLIModeSupport.ab3"
00019E42 <AmiBlitz3.ab2@100> dynassign.s = dos_GetToolString{"ASSIGN",default_assign$}       ; replaced hardcoded path  tomsmart1 2012 03 09
00019E7A <AmiBlitz3.ab2@101> If dynassign <> ""
00019E90 <AmiBlitz3.ab2@102>     *AssignSema.SignalSemaphore = FindSemaphore_(&dynassign)    ; does it already exist?
00019E9A <AmiBlitz3.ab2@103>     If *AssignSema
00019EAA <AmiBlitz3.ab2@104>       ObtainSemaphoreShared_ *AssignSema
00019EB0 <AmiBlitz3.ab2@105>     Else                                                        ; no, create one...
00019ED0 <AmiBlitz3.ab2@106>       *AssignSema = AllocVec_ (SizeOf.SignalSemaphore,#MEMF_PUBLIC|#MEMF_CLEAR)
00019EDA <AmiBlitz3.ab2@107>       If *AssignSema
00019EEA <AmiBlitz3.ab2@108>         InitSemaphore_ *AssignSema
00019F1E <AmiBlitz3.ab2@110>         *AssignSema\ss_Link\ln_Name = AllocVec_(FLen(dynassign)+1,#MEMF_PUBLIC|#MEMF_CLEAR)
00019F30 <AmiBlitz3.ab2@111>         If *AssignSema\ss_Link\ln_Name
00019F6C <AmiBlitz3.ab2@112>           Poke.s  *AssignSema\ss_Link\ln_Name,dynassign
00019F78 <AmiBlitz3.ab2@114>         *AssignSema\ss_Link\ln_Pri  = 1
00019F84 <AmiBlitz3.ab2@115>         *AssignSema\ss_Link\ln_Type = #NT_SIGNALSEM
00019F94 <AmiBlitz3.ab2@117>         AddSemaphore_ *AssignSema
00019FA4 <AmiBlitz3.ab2@118>         ObtainSemaphoreShared_ *AssignSema
00019FF0 <AmiBlitz3.ab2@124>   mydir.s = dos_GetProgDir{"Sys:"}
0001A050 <AmiBlitz3.ab2@125>   If dos_SetAssign{dynassign,mydir,False}
0001A0E4 <AmiBlitz3.ab2@126>     dos_AddAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001A11C <AmiBlitz3.ab2@129>   Poke$ ?str_blitz3assign,dynassign
0001A19E <AmiBlitz3.ab2@130>   Poke$ ?str_defaultdbug,dos_AddPart{dynassign,"Debug/DefaultDBug"}
0001A220 <AmiBlitz3.ab2@133>   Poke$ ?str_path_acidlibs,dos_AddPart{dynassign, "BlitzLibs/AcidLibs"}
0001A2A2 <AmiBlitz3.ab2@134>   Poke$ ?str_path_deflibs ,dos_AddPart{dynassign, "BlitzLibs/DefLibs" }
0001A324 <AmiBlitz3.ab2@135>   Poke$ ?str_path_userlibs,dos_AddPart{dynassign, "BlitzLibs/UserLibs"}
0001A3A6 <AmiBlitz3.ab2@136>   Poke$ ?str_path_includes,dos_AddPart{dynassign, "Sourcecodes/Includes"}
0001A41A <AmiBlitz3.ab2@137>   my_systemdir$    = dos_AddPart{dynassign, "System"}
0001A48E <AmiBlitz3.ab2@138>   my_residentsdir$ = dos_AddPart{dynassign, "BlitzLibs/Residents"}
0001A502 <AmiBlitz3.ab2@139>   my_blitzlibsdir$ = dos_AddPart{dynassign, "BlitzLibs"}
0001A530 <AmiBlitz3.ab2@140>   dos_CreateDir{my_blitzlibsdir$}
0001A554 <AmiBlitz3.ab2@141>   dos_CreateDir{Peek$(?str_path_userlibs)}
0001A582 <AmiBlitz3.ab2@142>   dos_CreateDir{my_residentsdir$}
0001A5B0 <AmiBlitz3.ab2@143>   dos_CreateDir{my_systemdir$}
0001A67A <AmiBlitz3.ab2@149> pedfile$ = dos_GetToolString{"EDITOR",dos_AddPart{my_systemdir$,"PED"}}
0001A6B2 <AmiBlitz3.ab2@150> Poke.s ?str_pedfile,pedfile$
0001A6F0 <AmiBlitz3.ab2@152> If dos_GetToolState{"START_WITHOUT_LIBS"} = -1
0001A700 <AmiBlitz3.ab2@153>   Poke.b ?start_without_libs,1
0001A706 <AmiBlitz3.ab2@154> Else
0001A716 <AmiBlitz3.ab2@155>   Poke.b ?start_without_libs,0
0001A73C <AmiBlitz3.ab2@158> !TRANS_INIT{"AmiBlitz3"}     ; init localization via translation.include
0001A748 <AmiBlitz3.ab2@162> dbg_fid.l = -1 ; no debug file id yet!
0001A752 <AmiBlitz3.ab2@164> If CLIMode
0001A758 <AmiBlitz3.ab2@167>   err.l      = False                                       ; indicate that an error has occured
0001A75E <AmiBlitz3.ab2@168>   showhelp.l = False                                       ; show the CLI tool's help
0001A7B6 <AmiBlitz3.ab2@171>   cli_progpath.s     = dos_GetProgDir{default_assign$}     ; replaced hardcoded path  tomsmart1 2012 03 09
0001A7DE <AmiBlitz3.ab2@172>   cli_sourcefile.s   = ""
0001A806 <AmiBlitz3.ab2@173>   cli_exefile.s      = ""
0001A82E <AmiBlitz3.ab2@174>   cli_savefile.s     = ""
0001A856 <AmiBlitz3.ab2@175>   cli_dumpfile.s     = ""
0001A87E <AmiBlitz3.ab2@176>   cli_includepath.s  = ""
0001A8A6 <AmiBlitz3.ab2@177>   cli_blitzlibpath.s = ""
0001A8AC <AmiBlitz3.ab2@178>   cli_debuginfo.l    = False
0001A8B2 <AmiBlitz3.ab2@179>   cli_run.l          = False
0001A8BA <AmiBlitz3.ab2@180>   cli_dumpflags.l    = $FFFFFFFF
0001A8E2 <AmiBlitz3.ab2@181>   cli_info.s         = ""
0001A8E8 <AmiBlitz3.ab2@182>   cli_release.l      = False
0001A8F2 <AmiBlitz3.ab2@183>   cli_numargs.l      = dos_GetNumArgs{}
0001A8F8 <AmiBlitz3.ab2@184>   cli_gui.l          = False
0001A900 <AmiBlitz3.ab2@185>   cli_dumpform.l     = 1 ; 0 = bin, 1 = ASCII
0001A908 <AmiBlitz3.ab2@186>   cli_verbose.l      = 1
0001A920 <AmiBlitz3.ab2@187>   If cli_numargs=0 Then showhelp=True
0001A950 <AmiBlitz3.ab2@191>     arg.s = dos_GetNextArg{}                               ; get the next CLI argument
0001A99C <AmiBlitz3.ab2@192>     larg.s = LCase$(arg)                                   ; lower case the option string
0001AA64 <AmiBlitz3.ab2@193>     If Left$(larg,1)="-" Then larg = Right$(larg,FLen(larg)-1)
0001AA9A <AmiBlitz3.ab2@194>     Select larg
0001AAE6 <AmiBlitz3.ab2@195>       Case "s" : larg="source"
0001AB38 <AmiBlitz3.ab2@196>       Case "e" : larg="exe"
0001AB8A <AmiBlitz3.ab2@197>       Case "d" : larg="debug"
0001ABDC <AmiBlitz3.ab2@198>       Case "r" : larg="release"
0001AC2E <AmiBlitz3.ab2@199>       Case "h" : larg="help"
0001AC80 <AmiBlitz3.ab2@200>       Case "v" : larg="verbose"
0001AC8E <AmiBlitz3.ab2@201>     End Select
0001ACC4 <AmiBlitz3.ab2@203>     Select larg
0001AD18 <AmiBlitz3.ab2@204>       Case "exe"      : cli_exefile     = dos_GetNextArg{}
0001AD72 <AmiBlitz3.ab2@205>       Case "source"   : cli_sourcefile  = dos_GetNextArg{}
0001ADCC <AmiBlitz3.ab2@206>       Case "save"     : cli_savefile    = dos_GetNextArg{}
0001ADFC <AmiBlitz3.ab2@207>       Case "debug"    : cli_debuginfo   = True
0001AE2C <AmiBlitz3.ab2@208>       Case "run"      : cli_run         = True
0001AE5C <AmiBlitz3.ab2@209>       Case "release"  : cli_release     = True
0001AE8C <AmiBlitz3.ab2@210>       Case "ped"      : cli_gui         = True
0001AEE6 <AmiBlitz3.ab2@211>       Case "dform"    : cli_dumpform.l  = Vallong(dos_GetNextArg{})
0001AF58 <AmiBlitz3.ab2@212>       Case "dump"     : cli_info        = LCase$(dos_GetNextArg{})
0001AF88 <AmiBlitz3.ab2@213>                         cli_dumpfile    = dos_GetNextArg{}
0001AF90 <AmiBlitz3.ab2@214>                         cli_dumpflags   = $0
0001AFF0 <AmiBlitz3.ab2@215>                         If Instr(cli_info,"all"  ) Then cli_dumpflags | $FFFFFFFF
0001B050 <AmiBlitz3.ab2@216>                         If Instr(cli_info,"token") Then cli_dumpflags | #DUMPFLG_TOKENS
0001B0B0 <AmiBlitz3.ab2@217>                         If Instr(cli_info,"label") Then cli_dumpflags | #DUMPFLG_LABELS
0001B110 <AmiBlitz3.ab2@218>                         If Instr(cli_info,"var"  ) Then cli_dumpflags | #DUMPFLG_VARS
0001B170 <AmiBlitz3.ab2@219>                         If Instr(cli_info,"const") Then cli_dumpflags | #DUMPFLG_CONSTANTS
0001B1D0 <AmiBlitz3.ab2@220>                         If Instr(cli_info,"func" ) Then cli_dumpflags | #DUMPFLG_FUNCTIONS
0001B230 <AmiBlitz3.ab2@221>                         If Instr(cli_info,"macro") Then cli_dumpflags | #DUMPFLG_MACROS
0001B290 <AmiBlitz3.ab2@222>                         If Instr(cli_info,"type" ) Then cli_dumpflags | #DUMPFLG_NEWTYPES
0001B2F0 <AmiBlitz3.ab2@223>                         If Instr(cli_info,"lib"  ) Then cli_dumpflags | #DUMPFLG_LIBS
0001B302 <AmiBlitz3.ab2@224>                         If cli_dumpflags = $0
0001B308 <AmiBlitz3.ab2@225>                          err=True
0001B39C <AmiBlitz3.ab2@226>                          NPrint "\\1b[1m*** ERROR: Invalid flags for dumpfile \\22",cli_info,"\\22 specified!\\1b[0m"
0001B3F6 <AmiBlitz3.ab2@228>       Case "verbose"  : cli_verbose     = Vallong(dos_GetNextArg{})
0001B426 <AmiBlitz3.ab2@229>       Case "h"        : showhelp        = True             ; show the help and quit
0001B42C <AmiBlitz3.ab2@230>       Default
0001B464 <AmiBlitz3.ab2@231>         If arg><""
0001B4F8 <AmiBlitz3.ab2@232>           NPrint "\\1b[1m*** ERROR: Unknown option \\22",arg,"\\22 specified!\\1b[0m"
0001B4FE <AmiBlitz3.ab2@233>           err = True
0001B50C <AmiBlitz3.ab2@235>     End Select
0001B558 <AmiBlitz3.ab2@236>   Until arg = "" OR err=True          ; until we processed all arguments
0001B57A <AmiBlitz3.ab2@239>   If err><False OR showhelp = True
0001B584 <AmiBlitz3.ab2@240>     If showhelp
0001B5E6 <AmiBlitz3.ab2@241>     NPrint "AmiBlitz ",Peek.s(?myversion)
0001B61E <AmiBlitz3.ab2@242>     NPrint "\\nSyntax: AmiBlitz3 [options]"
0001B656 <AmiBlitz3.ab2@243>     NPrint "\\nOptions:"
0001B68E <AmiBlitz3.ab2@244>     NPrint "  -(s)ource <file>    : input source code filename (bb2, ab2 or ab3)"
0001B6C6 <AmiBlitz3.ab2@245>     NPrint "  -(e)xe <file>       : output executable filename"
0001B6FE <AmiBlitz3.ab2@246>     NPrint "  -(d)ebug            : compile with debug info"
0001B736 <AmiBlitz3.ab2@247>     NPrint "  -(r)elease          : create release executable (size optimized)"
0001B76E <AmiBlitz3.ab2@248>     NPrint "  -run                : run compiled program"
0001B7A6 <AmiBlitz3.ab2@249>     NPrint "  -dump <info> <file> : dump compiler internals to file"
0001B7DE <AmiBlitz3.ab2@250>     NPrint "                        (info=all|token|label|var|func|const|macro|type|lib)"
0001B816 <AmiBlitz3.ab2@251>     NPrint "  -dform <n>          : format of compiler internals dump (0=bin, 1=ASCII; default=1)"
0001B84E <AmiBlitz3.ab2@252>     NPrint "  -PED                : start AmiBlitz3 IDE (PED)"
0001B886 <AmiBlitz3.ab2@253>     NPrint "  -save <file>        : re-save source code (convert format, if needed)"
0001B8BE <AmiBlitz3.ab2@254>     NPrint "  -(v)erbose <n>      : set verbose level (0, 1 or 2; default=1)"
0001B8F6 <AmiBlitz3.ab2@255>     NPrint "  -(h)elp             : show this help"
0001B92E <AmiBlitz3.ab2@256>     NPrint "\\nExample:"
0001B966 <AmiBlitz3.ab2@257>     NPrint "  AmiBlitz3 -s \\22DH0:Sourcecodes/MyProgram.ab3\\22 -e RAM:MyProgram.exe"
0001B99E <AmiBlitz3.ab2@258>     NPrint "\\nNote: To start the AmiBlitz3 IDE, run from Workbench or with -PED option."
0001B9A4 <AmiBlitz3.ab2@261>     Goto abnormal_exit
0001B9C0 <AmiBlitz3.ab2@264>   If cli_gui        Then CLIMode = False : error_SetFlags{#error_requester}
0001BA24 <AmiBlitz3.ab2@265>   If cli_sourcefile Then Poke.s ?str_tempfilename,cli_sourcefile
0001BA34 <AmiBlitz3.ab2@268> Poke.l ?CLIMode,CLIMode
0001BA58 <AmiBlitz3.ab2@299>   Dim incdim.s (#maxincludes)
0001BA7C <AmiBlitz3.ab2@300>   Dim incline.l(#maxincludes)
0001BA96 <AmiBlitz3.ab2@568> Function.s Get_Libinfo{addr_libnum.l}
0001BAA2 <AmiBlitz3.ab2@570>   lib_ab2.b = False : lib_os.b = False
0001BAA8 <AmiBlitz3.ab2@571>   addr_counter.l = addr_libnum
0001BAB0 <AmiBlitz3.ab2@572>   skip.l = 0
0001BAC2 <AmiBlitz3.ab2@573>   If addr_counter=0
0001BAFC <AmiBlitz3.ab2@574>     error{"INTERNAL: \\__THIS_FUNCTION: Invalid pointer!"}
0001BB1A <AmiBlitz3.ab2@575>     Function Return ""
0001BB28 <AmiBlitz3.ab2@580>     mem.l = Peek.l(addr_counter)
0001BB36 <AmiBlitz3.ab2@585>     addr_counter + 2
0001BB56 <AmiBlitz3.ab2@586>     If (mem = $0000ffff) Then lib_ab2= True : skip = 8
0001BB70 <AmiBlitz3.ab2@587>     If (mem LSR 16) = $ffe2
0001BB76 <AmiBlitz3.ab2@589>       lib_os = True
0001BB7E <AmiBlitz3.ab2@590>       skip = 10
0001BBC4 <AmiBlitz3.ab2@591>       If Peek$(addr_counter+skip) = "" Then skip + 4
0001BC08 <AmiBlitz3.ab2@593>   Until (lib_ab2=True OR lib_os = True) OR (addr_counter>addr_libnum + $400)
0001BC1E <AmiBlitz3.ab2@595>   If (addr_counter>addr_libnum + $400)
0001BC3C <AmiBlitz3.ab2@597>     Function Return ""
0001BC42 <AmiBlitz3.ab2@598>   Else
0001BC66 <AmiBlitz3.ab2@599>     Function Return Peek$(addr_counter + skip)
0001BC70 <AmiBlitz3.ab2@601> End Function
0001BC8E <AmiBlitz3.ab2@641>   !asm
0001BC94 <AmiBlitz3.ab2@642>   MOVEA.l _execbase,A6
0001BC98 <AmiBlitz3.ab2@643>   MOVEM.l d0/a0,-(a7)
0001BC9A <AmiBlitz3.ab2@645>   MOVEQ #127,d0
0001BCA0 <AmiBlitz3.ab2@646>   LEA chartab,a0
0001BCA6 <AmiBlitz3.ab2@649>     MOVE.b #1,128(a0)
0001BCA8 <AmiBlitz3.ab2@650>     CLR.b (a0)+
0001BCAC <AmiBlitz3.ab2@651>   DBF d0,'l12
0001BCB2 <AmiBlitz3.ab2@653>   LEA chartab,a0
0001BCB6 <AmiBlitz3.ab2@654>   MOVE.b #1,(a0)
0001BCBC <AmiBlitz3.ab2@655>   MOVE.b #1,","(a0)
0001BCC2 <AmiBlitz3.ab2@656>   MOVE.b #1,";"(a0)
0001BCC8 <AmiBlitz3.ab2@657>   MOVE.b #1,":"(a0)
0001BCCE <AmiBlitz3.ab2@658>   MOVE.b #1,"("(a0)
0001BCD4 <AmiBlitz3.ab2@659>   MOVE.b #1,")"(a0)
0001BCDA <AmiBlitz3.ab2@660>   MOVE.b #1,"="(a0)
0001BCE0 <AmiBlitz3.ab2@661>   MOVE.b #1,"+"(a0)
0001BCE6 <AmiBlitz3.ab2@662>   MOVE.b #1,"-"(a0)
0001BCEC <AmiBlitz3.ab2@663>   MOVE.b #1,"*"(a0)
0001BCF2 <AmiBlitz3.ab2@664>   MOVE.b #1,"/"(a0)
0001BCF8 <AmiBlitz3.ab2@665>   MOVE.b #1,"$"(a0)
0001BCFE <AmiBlitz3.ab2@666>   MOVE.b #1,"%"(a0)
0001BD04 <AmiBlitz3.ab2@667>   MOVE.b #1,"."(a0)
0001BD0A <AmiBlitz3.ab2@668>   MOVE.b #1,"["(a0)
0001BD10 <AmiBlitz3.ab2@669>   MOVE.b #1,"]"(a0)
0001BD16 <AmiBlitz3.ab2@670>   MOVE.b #1,"{"(a0)
0001BD1C <AmiBlitz3.ab2@671>   MOVE.b #1,"}"(a0)
0001BD22 <AmiBlitz3.ab2@672>   MOVE.b #1,"\"(a0)
0001BD28 <AmiBlitz3.ab2@673>   MOVE.b #1,">"(a0)
0001BD2E <AmiBlitz3.ab2@674>   MOVE.b #1,"<"(a0)
0001BD34 <AmiBlitz3.ab2@675>   MOVE.b #1,"&"(a0)
0001BD3A <AmiBlitz3.ab2@676>   MOVE.b #1,"|"(a0)
0001BD40 <AmiBlitz3.ab2@677>   MOVE.b #1,"^"(a0)
0001BD46 <AmiBlitz3.ab2@678>   MOVE.b #1,$7e(a0)
0001BD4C <AmiBlitz3.ab2@679>   MOVE.w #$0101,1(a0)
0001BD52 <AmiBlitz3.ab2@681>   LEA instrtab,a0
0001BD58 <AmiBlitz3.ab2@682>   MOVE.l #labelhash-instrtab,d0
0001BD5A <AmiBlitz3.ab2@683>   ASR.l #2,d0
0001BD5C <AmiBlitz3.ab2@684>   SUBQ.l #1,d0
0001BD5E <AmiBlitz3.ab2@687>    CLR.l (a0)+
0001BD60 <AmiBlitz3.ab2@688>    SUBQ.l #1,d0
0001BD64 <AmiBlitz3.ab2@689>   BNE 'l10
0001BD6A <AmiBlitz3.ab2@691>   LEA allowtab,a0
0001BD70 <AmiBlitz3.ab2@692>   MOVE.l #255,d0
0001BD72 <AmiBlitz3.ab2@695>     CLR.b (a0)+
0001BD76 <AmiBlitz3.ab2@696>   DBF d0,'la1
0001BD7C <AmiBlitz3.ab2@698>   LEA allowtab,a0
0001BD82 <AmiBlitz3.ab2@699>   MOVE.b #1,$7d(a0)
0001BD88 <AmiBlitz3.ab2@700>   MOVE.b #1,$7c(a0)
0001BD8E <AmiBlitz3.ab2@701>   MOVE.b #1,$44(a0)
0001BD94 <AmiBlitz3.ab2@702>   MOVE.b #1,$45(a0)
0001BD9A <AmiBlitz3.ab2@703>   MOVE.b #1,$b9(a0)
0001BDA0 <AmiBlitz3.ab2@704>   MOVE.b #1,$89(a0)
0001BDA6 <AmiBlitz3.ab2@705>   MOVE.b #1,$ce(a0)
0001BDAC <AmiBlitz3.ab2@706>   MOVE.b #1,$cf(a0)
0001BDB2 <AmiBlitz3.ab2@707>   MOVE.b #1,$d0(a0)
0001BDB8 <AmiBlitz3.ab2@708>   MOVE.b #1,$cd(a0)
0001BDBA <AmiBlitz3.ab2@709>   MOVEQ #0,d0
0001BDC0 <AmiBlitz3.ab2@711>   MOVEA.l _execbase,a6
0001BDC6 <AmiBlitz3.ab2@716>   MOVE.l #$10000,d0
0001BDCC <AmiBlitz3.ab2@717>   MOVE.l #80000,d1
0001BDCE <AmiBlitz3.ab2@718>   MOVE.l d1,d2
0001BDD2 <AmiBlitz3.ab2@719>   JSR _CreatePool(a6)                                      ; alloc memory for own stuff
0001BDD8 <AmiBlitz3.ab2@720>   MOVE.l d0,mempool
0001BDDC <AmiBlitz3.ab2@721>   MOVEM.l (a7)+,d0/a0
0001BDE2 <AmiBlitz3.ab2@722>   TST.l mempool
0001BDE6 <AmiBlitz3.ab2@723>   BEQ shutdown_compiler
0001BDEA <AmiBlitz3.ab2@725>   MOVEA.l $114(A6),A4                                      ; get adress of this.Task-Structure
0001BDF0 <AmiBlitz3.ab2@726>   MOVE.l A4,ptr_ThisTask
0001BDF4 <AmiBlitz3.ab2@728>   BSR.w open_doslibrary
0001BDF8 <AmiBlitz3.ab2@729>   BEQ.w shutdown_compiler
0001BDFE <AmiBlitz3.ab2@731>   MOVE.l D2,stacksize
0001BE00 <AmiBlitz3.ab2@735>   MOVEQ.l #$00,D0
0001BE06 <AmiBlitz3.ab2@736>   LEA tokens,A0
0001BE08 <AmiBlitz3.ab2@739>     ADDQ.w #1,D0
0001BE0A <AmiBlitz3.ab2@740>     MOVE.l (A0),D1
0001BE0E <AmiBlitz3.ab2@741>     BEQ.w JL_0_2D1C
0001BE10 <AmiBlitz3.ab2@742>     MOVEA.l D1,A0
0001BE14 <AmiBlitz3.ab2@743> BRA.w JL_0_2D0E
0001BE1A <AmiBlitz3.ab2@746>   MOVE.l A0,end_of_tokenlist
0001BE1E <AmiBlitz3.ab2@748>   BSR.w makeasmtable
0001BE26 <AmiBlitz3.ab2@749>   MOVE.w #$FFFF,returncode_org                             ;#-1,returncode
0001BE2A <AmiBlitz3.ab2@751>   BSR.w open_mathlibrary
0001BE2E <AmiBlitz3.ab2@752>   BEQ.w freemem_and_quit4
0001BE34 <AmiBlitz3.ab2@754>   MOVE.l constmaxpc,D0
0001BE36 <AmiBlitz3.ab2@755>   MOVEQ.l #$02,D1                                          ;chipmem            ;01 org source
0001BE3C <AmiBlitz3.ab2@756>   MOVEA.l _execbase,A6
0001BE40 <AmiBlitz3.ab2@757>   JSR _AllocMem(A6)                                        ;mem for branch routine
0001BE46 <AmiBlitz3.ab2@758>   MOVE.l D0,constpcat
0001BE4A <AmiBlitz3.ab2@759>   BEQ.w freemem_and_quit3
0001BE50 <AmiBlitz3.ab2@760>   ADD.l constmaxpc,D0
0001BE56 <AmiBlitz3.ab2@761>   MOVE.l D0,constlibat
0001BE5C <AmiBlitz3.ab2@763>   MOVE.l macrobuffer_size,D0
0001BE62 <AmiBlitz3.ab2@764>   CMP.l #40000,d0
0001BE66 <AmiBlitz3.ab2@765>   BGE 'ok
0001BE6C <AmiBlitz3.ab2@766>     MOVE.l #40000,d0
0001BE72 <AmiBlitz3.ab2@767>     MOVE.l d0,macrobuffer_size
0001BE74 <AmiBlitz3.ab2@770>   ADDQ.l #4,d0
0001BE76 <AmiBlitz3.ab2@771>   MOVEQ.l #$01,D1
0001BE7C <AmiBlitz3.ab2@772>   MOVEA.l _execbase,A6
0001BE80 <AmiBlitz3.ab2@773>   JSR _AllocMem(A6)                                        ;macro mem
0001BE82 <AmiBlitz3.ab2@774>   MOVE.l d0,a0
0001BE88 <AmiBlitz3.ab2@775>   MOVE.l macrobuffer_size,(a0)+
0001BE8A <AmiBlitz3.ab2@776>   MOVE.l a0,d0
0001BE90 <AmiBlitz3.ab2@777>   MOVE.l D0,ptr_macrobuffer_begin
0001BE94 <AmiBlitz3.ab2@778>   BEQ.w freemem_and_quit2
0001BE9A <AmiBlitz3.ab2@779>   ADD.l macrobuffer_size,D0
0001BEA0 <AmiBlitz3.ab2@780>   MOVE.l D0,ptr_macrobuffer_end
0001BEA6 <AmiBlitz3.ab2@782>   TST.l CLIMode
0001BEAA <AmiBlitz3.ab2@783>   BEQ load_ped
0001BED4 <AmiBlitz3.ab2@786>   !basic
0001BEDE <AmiBlitz3.ab2@787>   succ.l = InitEmulatedPED{}
0001BEE2 <AmiBlitz3.ab2@788>   GetD0 succ
0001BF00 <AmiBlitz3.ab2@789>   !asm
0001BF02 <AmiBlitz3.ab2@790>   TST.l d0
0001BF06 <AmiBlitz3.ab2@791>   BEQ freemem_and_quit
0001BF0C <AmiBlitz3.ab2@792> JMP skip_ped
0001BF12 <AmiBlitz3.ab2@797>   MOVE.l #str_pedfile,D1                                   ; Load PED
0001BF18 <AmiBlitz3.ab2@798>   MOVEA.l _dosbase,A6
0001BF1C <AmiBlitz3.ab2@799>   JSR _LoadSeg(A6)
0001BF22 <AmiBlitz3.ab2@800>   MOVE.l D0,ptr_seg_ped
0001BF26 <AmiBlitz3.ab2@802>   BEQ.w cant_load_PED         ; was freemem_and_quit  added error massage  that we can't load it  tomsmart1  2012 03
0001BF28 <AmiBlitz3.ab2@806>   MOVEA.l D0,A2
0001BF2A <AmiBlitz3.ab2@807>   ADDA.l A2,A2
0001BF2C <AmiBlitz3.ab2@808>   ADDA.l A2,A2
0001BF32 <AmiBlitz3.ab2@810>   LEA teddata,a1                                           ;lea edstruct,A1
0001BF38 <AmiBlitz3.ab2@811>   MOVE.l #"TEDY",d1
0001BF3C <AmiBlitz3.ab2@812>   JSR 4(A2)                                                ; Run PED
0001BF42 <AmiBlitz3.ab2@814>   MOVE.l A0,ped_startup_addr                               ; PED returns address of routine "startup_code"
0001BF48 <AmiBlitz3.ab2@815>   MOVE.l A1,comdata                                        ; PED returns address of comdata-area in A1
0001BF86 <AmiBlitz3.ab2@817>   !ComData_GetW{comWord_PEDIsAvailable,D0}                 ; if PED_IsAvailable=0, quit AmiBlitz
0001BF8A <AmiBlitz3.ab2@818>   BEQ.w unload_ped
0001BF8E <AmiBlitz3.ab2@819> 
0001BF92 <AmiBlitz3.ab2@820>   BNE old_version_of_PED                                   ; no, than exit
0001BFD0 <AmiBlitz3.ab2@826>   !ComData_GetL{comData_Magic,D0}
0001BFD6 <AmiBlitz3.ab2@827>   CMP.l ##MagicIdentifier_Long,D0                          ;"~::~",D0    ; replace with a constants  tomsmart1 2012 03 09
0001BFDA <AmiBlitz3.ab2@828>   BNE unload_ped
0001C012 <AmiBlitz3.ab2@831>   !ComData_SetL{comPtr_Trap15            ,#directTrap15 }
0001C04A <AmiBlitz3.ab2@832>   !ComData_SetL{comPtr_DirectBuffer      ,#directbuffer}
0001C082 <AmiBlitz3.ab2@833>   !ComData_SetL{comPtr_MacroBase         ,#macrobase}
0001C0BA <AmiBlitz3.ab2@834>   !ComData_SetL{comPtr_VarBase           ,#varbase }
0001C0F2 <AmiBlitz3.ab2@835>   !ComData_SetL{comPtr_InstrBase         ,#instrtab}
0001C12A <AmiBlitz3.ab2@836>   !ComData_SetL{comPtr_LibPointer        ,#libpointer}
0001C162 <AmiBlitz3.ab2@837>   !ComData_SetL{comPtr_CompilerVersion   ,#myversion }
0001C19A <AmiBlitz3.ab2@838>   !ComData_SetL{comPtr_VersionInformation,#versioninformation}
0001C1D2 <AmiBlitz3.ab2@839>   !ComData_SetL{comPtr_NumberOfBuilds    ,#number_of_builds}
0001C20A <AmiBlitz3.ab2@840>   !ComData_SetL{comFunc_SaveSource       ,#ab3_SaveSource}
0001C242 <AmiBlitz3.ab2@841>   !ComData_SetL{comFunc_LoadSource       ,#ab3_LoadSource}
0001C27A <AmiBlitz3.ab2@842>   !ComData_SetL{comFunc_ClearSource      ,#ab3_ClearSource}
0001C2B2 <AmiBlitz3.ab2@845>   !ComData_SetL{comFunc_CalculatExpression       ,#menu_calculator}
0001C2EA <AmiBlitz3.ab2@846>   !ComData_SetL{comPtr_CalculatorExpressionString,#str_calcexpression}
0001C322 <AmiBlitz3.ab2@849>   !ComData_SetL{comFunc_BackupXtraData           ,#BackupXtraData}
0001C35A <AmiBlitz3.ab2@850>   !ComData_SetL{comFunc_RestoreXtraData          ,#RestoreXtraData}
0001C392 <AmiBlitz3.ab2@852>   !ComData_SetL{comFunc_GetObjectEntry           ,#getobjectentry}
0001C3CA <AmiBlitz3.ab2@853>   !ComData_SetL{comFunc_StoreMaxObjects          ,#storemaxobjects}
0001C402 <AmiBlitz3.ab2@855>   !ComData_SetL{comFunc_ReloadResidentsForPED    ,#ReloadResidentsForPED}
0001C43A <AmiBlitz3.ab2@856>   !ComData_SetL{comFunc_FreeClearResidentsForPED ,#FreeClearResidentsForPED}    ; add tomsmart1 2012 06 09
0001C472 <AmiBlitz3.ab2@858>   !ComData_SetL{comPtr_Residents_Table           ,#residents_table}
0001C4AA <AmiBlitz3.ab2@859>   !ComData_SetL{comPtr_StringBuffer_Long         ,#stringbuffer}
0001C4E2 <AmiBlitz3.ab2@860>   !ComData_SetL{comPtr_Stacksize_Long            ,#stacksize}
0001C51A <AmiBlitz3.ab2@861>   !ComData_SetL{comPtr_Create_IconFile_Byte      ,#create_iconfile}
0001C552 <AmiBlitz3.ab2@862>   !ComData_SetL{comPtr_Make_SmallestCode_Byte    ,#make_smallestcode}
0001C58A <AmiBlitz3.ab2@863>   !ComData_SetL{comPtr_Link_DebugInfo_Byte       ,#link_debuginfo}
0001C5C2 <AmiBlitz3.ab2@864>   !ComData_SetL{comPtr_Use_Debugger_Byte         ,#use_debugger}
0001C5FA <AmiBlitz3.ab2@865>   !ComData_SetL{comPtr_Autorun_Byte              ,#autorun}
0001C632 <AmiBlitz3.ab2@866>   !ComData_SetL{comPtr_InterruptCheck_Byte       ,#interruptcheck}
0001C66A <AmiBlitz3.ab2@867>   !ComData_SetL{comPtr_AssemblerCheck_Byte       ,#assemblercheck}
0001C6A2 <AmiBlitz3.ab2@868>   !ComData_SetL{comPtr_OverflowCheck_Byte        ,#overflowcheck}
0001C6DA <AmiBlitz3.ab2@869>   !ComData_SetL{comPtr_Number_of_Objects_Word    ,#number_of_objects}
0001C712 <AmiBlitz3.ab2@870>   !ComData_SetL{comPtr_MaxObjects_Value_Word     ,#maxobjects_value}
0001C74A <AmiBlitz3.ab2@871>   !ComData_SetL{comPtr_MaxObject_Pos_Word        ,#maxobject_pos}
0001C750 <AmiBlitz3.ab2@873>   CLR.w returncode_org
0001C77A <AmiBlitz3.ab2@875>   !basic
0001C784 <AmiBlitz3.ab2@876>   If CLIMode
0001C7F6 <AmiBlitz3.ab2@877>     If cli_verbose>=3 Then NPrint !TRANS{"Loading BlitzLibs..."}
0001C814 <AmiBlitz3.ab2@879>   !asm
0001C81A <AmiBlitz3.ab2@883>   TST.b start_without_libs
0001C81E <AmiBlitz3.ab2@884>   BNE skip_loading_libs
0001C822 <AmiBlitz3.ab2@885>     BSR.w call_setpointerbusy
0001C82C <AmiBlitz3.ab2@886>     MOVE.l #$FFFFffff,linenumat
0001C830 <AmiBlitz3.ab2@887>     BSR.w get_libraries
0001C836 <AmiBlitz3.ab2@888>     JSR init_libraries
0001C83A <AmiBlitz3.ab2@889>     BSR.w init_buffers
0001C83E <AmiBlitz3.ab2@890>     BSR.w call_setpointernormal
0001C840 <AmiBlitz3.ab2@895>   MOVEQ.l #-$01,D0
0001C846 <AmiBlitz3.ab2@896>   MOVEA.l _execbase,A6
0001C84A <AmiBlitz3.ab2@897>   JSR _AllocSignal(A6)
0001C850 <AmiBlitz3.ab2@898>   MOVE.l D0,signalNum
0001C852 <AmiBlitz3.ab2@899>   MOVEQ.l #$00,D1
0001C854 <AmiBlitz3.ab2@900>   BSET D0,D1
0001C85A <AmiBlitz3.ab2@901>   MOVE.l D1,signals
0001C860 <AmiBlitz3.ab2@905>   MOVE.l #str_defaultdbug,D1
0001C864 <AmiBlitz3.ab2@906>   MOVEA.l _dosbase(PC),A6
0001C868 <AmiBlitz3.ab2@907>   JSR _LoadSeg(A6)
0001C86E <AmiBlitz3.ab2@908>   MOVE.l D0,ptr_seg_debugger
0001C870 <AmiBlitz3.ab2@909>   TST.l d0
0001C874 <AmiBlitz3.ab2@910>   BNE ok_12
0001C89E <AmiBlitz3.ab2@911>     !basic
0001C900 <AmiBlitz3.ab2@912>     error{!TRANS{"The Debugexecutor `Defaultdbug` was not found.\\nDebugging is not possible."}}
0001C91E <AmiBlitz3.ab2@913>     !asm
0001C924 <AmiBlitz3.ab2@916>   TST.l CLIMode
0001C928 <AmiBlitz3.ab2@917>   BEQ run_ped
0001C952 <AmiBlitz3.ab2@923>   !basic
0001C958 <AmiBlitz3.ab2@924>   err.l = False
0001C984 <AmiBlitz3.ab2@932>   If cli_sourcefile
0001C9A4 <AmiBlitz3.ab2@933>     lock.l = Lock_(&cli_sourcefile,#ACCESS_READ)
0001C9AE <AmiBlitz3.ab2@934>     If lock
0001C9D2 <AmiBlitz3.ab2@935>       NameFromLock_ lock,&cli_tempstr,1024
0001C9FC <AmiBlitz3.ab2@936>       cli_sourcefile.s = Peek.s(&cli_tempstr)
0001CA0C <AmiBlitz3.ab2@937>       UnLock_ lock
0001CA38 <AmiBlitz3.ab2@940>     If cli_exefile
0001CA8A <AmiBlitz3.ab2@941>       SetCurrentDir{dos_PathPart{cli_sourcefile}}
0001CAE2 <AmiBlitz3.ab2@942>       path.s = dos_PathPart{cli_exefile}
0001CB02 <AmiBlitz3.ab2@943>       lock.l = Lock_(&path,#ACCESS_READ)
0001CB0C <AmiBlitz3.ab2@944>       If lock
0001CB30 <AmiBlitz3.ab2@945>         NameFromLock_ lock,&cli_tempstr,1024
0001CB5A <AmiBlitz3.ab2@946>         path.s = Peek.s(&cli_tempstr)
0001CC08 <AmiBlitz3.ab2@947>         cli_exefile = dos_AddPart{path,dos_FilePart{cli_exefile}}
0001CC18 <AmiBlitz3.ab2@948>         UnLock_ lock
0001CC62 <AmiBlitz3.ab2@959>   If cli_verbose>=3 Then NPrint "Initializing token hashmap..."
0001CCD6 <AmiBlitz3.ab2@960> 
0001CCE0 <AmiBlitz3.ab2@961>   *PreProcessor.preprocessor = preproc_Create{}
0001CCF0 <AmiBlitz3.ab2@962>   Poke.l ?comPtr_PreProcessor,*PreProcessor
0001CD22 <AmiBlitz3.ab2@963>   preproc_LoadTokens{*PreProcessor,TokenHashMapFile}
0001CD36 <AmiBlitz3.ab2@964>   If *PreProcessor\tokens=#NULL
0001CDB0 <AmiBlitz3.ab2@965>     If cli_verbose>=1 Then NPrint "No hashmap found (\\22"+TokenHashMapFile+"\\22), will be created..."
0001CDBA <AmiBlitz3.ab2@966>     preproc_QueryTokens{*PreProcessor}
0001CDEC <AmiBlitz3.ab2@967>     preproc_SaveTokens{*PreProcessor,TokenHashMapFile}
0001CE38 <AmiBlitz3.ab2@975>   If cli_sourcefile><"" AND err=False
0001CEDE <AmiBlitz3.ab2@976>     If cli_verbose>=3 Then NPrint "Loading sourcecode \\22",cli_sourcefile,"\\22..."
0001CF10 <AmiBlitz3.ab2@977>     succ=LoadSource{cli_sourcefile}
0001CF1A <AmiBlitz3.ab2@978>     If succ
0001CF52 <AmiBlitz3.ab2@979> 
0001CFCC <AmiBlitz3.ab2@980>         If cli_verbose>=1 Then NPrint "Compiling \\22"+cli_sourcefile+"\\22..."
0001D006 <AmiBlitz3.ab2@981>         comerr.l = CompileSource{cli_exefile,cli_debuginfo,cli_release}
0001D010 <AmiBlitz3.ab2@983>         If comerr
0001D016 <AmiBlitz3.ab2@985>         Else
0001D01C <AmiBlitz3.ab2@989>     Else
0001D06C <AmiBlitz3.ab2@990>       If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to read source file!\\1b[0m" : err=True
0001D0B8 <AmiBlitz3.ab2@994>   If cli_savefile><"" AND err=False
0001D132 <AmiBlitz3.ab2@995>     If cli_verbose>=2 Then NPrint "Saving sourcefiles as "+cli_savefile+"..."
0001D160 <AmiBlitz3.ab2@996>     SaveSource{cli_savefile}
0001D1AC <AmiBlitz3.ab2@999>   If cli_dumpfile><"" AND err=False
0001D1F6 <AmiBlitz3.ab2@1000>     If cli_verbose>=2 Then NPrint "Saving dumpfile..."
0001D22C <AmiBlitz3.ab2@1001>     DumpFile{cli_dumpfile,cli_dumpflags,cli_dumpform}
0001D236 <AmiBlitz3.ab2@1004>   If cli_run
0001D24A <AmiBlitz3.ab2@1005>     If comerr=False
0001D276 <AmiBlitz3.ab2@1006>       If cli_exefile
0001D2F0 <AmiBlitz3.ab2@1007>         If cli_verbose>=1 Then NPrint "Recompiling "+cli_sourcefile+" for debug..."
0001D31E <AmiBlitz3.ab2@1008>         comerr.l = CompileSource{"",cli_debuginfo,cli_release} ; re-compile for launch!
0001D368 <AmiBlitz3.ab2@1010>       If cli_verbose>=1 Then NPrint "Running program..."
0001D372 <AmiBlitz3.ab2@1011> 
0001D374 <AmiBlitz3.ab2@1013>         CLR.l d0
0001D3B2 <AmiBlitz3.ab2@1014>         !ComData_GetB{comByte_RunningFlag,D0}
0001D3B6 <AmiBlitz3.ab2@1015>         running.l = PutD0
0001D3D2 <AmiBlitz3.ab2@1016>         If running Then Delay_ 50
0001D3E6 <AmiBlitz3.ab2@1018>       Until running=False
0001D3FA <AmiBlitz3.ab2@1019>       If Peek.l(?_runerror)
0001D44A <AmiBlitz3.ab2@1020>         If cli_verbose>=0 Then NPrint "\\1b[1m*** ERROR: Unable to run compiled program!\\1b[0m" : err=True
0001D45C <AmiBlitz3.ab2@1031>   preproc_Free{*PreProcessor} : *PreProcessor=#NULL
0001D4A6 <AmiBlitz3.ab2@1032>   If cli_verbose>=3 Then NPrint "Exit AmiBlitz3."
0001D4AC <AmiBlitz3.ab2@1033>   DeinitEmulatedPED{}
0001D4CA <AmiBlitz3.ab2@1035>   !asm
0001D4D0 <AmiBlitz3.ab2@1036> JMP terminate_ab3
0001D4D6 <AmiBlitz3.ab2@1041>   MOVEA.l ped_startup_addr,A1
0001D4DC <AmiBlitz3.ab2@1042>   LEA str_tempfilename,A0
0001D4DE <AmiBlitz3.ab2@1043>   JSR (A1)
0001D4E4 <AmiBlitz3.ab2@1050>   MOVE.l signalNum,D0
0001D4EA <AmiBlitz3.ab2@1051>   MOVEA.l _execbase,A6
0001D4EE <AmiBlitz3.ab2@1052>   JSR _FreeSignal(A6)
0001D4F4 <AmiBlitz3.ab2@1054>   MOVE.l ptr_seg_debugger,D1
0001D4F8 <AmiBlitz3.ab2@1055>   BEQ.b skip_unload_debugger
0001D4FC <AmiBlitz3.ab2@1056>     MOVEA.l _dosbase(PC),A6
0001D500 <AmiBlitz3.ab2@1057>     JSR _UnLoadSeg(A6)
0001D504 <AmiBlitz3.ab2@1060>   BSR.w Aclearallvars
0001D508 <AmiBlitz3.ab2@1061>   BSR.w free_residents
0001D50E <AmiBlitz3.ab2@1062>   JSR free_blitzlibs
0001D514 <AmiBlitz3.ab2@1065>   MOVE.l ptr_seg_ped,D1
0001D518 <AmiBlitz3.ab2@1066>   BEQ freemem_and_quit
0001D51C <AmiBlitz3.ab2@1067>   MOVEA.l _dosbase(PC),A6
0001D520 <AmiBlitz3.ab2@1068>   JSR _UnLoadSeg(A6)
0001D524 <AmiBlitz3.ab2@1069>   BRA freemem_and_quit     ; added by tomsmart1 for Ped errormessage
0001D54E <AmiBlitz3.ab2@1072>   !basic
0001D612 <AmiBlitz3.ab2@1073> 
0001D630 <AmiBlitz3.ab2@1074>   !asm
0001D634 <AmiBlitz3.ab2@1075>   BRA freemem_and_quit
0001D65E <AmiBlitz3.ab2@1078>   !basic
0001D722 <AmiBlitz3.ab2@1079>   error{!TRANS{"Can't load the Editor:\n"} + pedfile$ + !TRANS{"\n must quit, sorry!"} }  ; show error message  tomsmart1
0001D740 <AmiBlitz3.ab2@1080>   !asm
0001D744 <AmiBlitz3.ab2@1084>   BSR.w freeallox
0001D74A <AmiBlitz3.ab2@1085>   MOVEA.l ptr_macrobuffer_begin,A1
0001D74C <AmiBlitz3.ab2@1086>   MOVE.l -(a1),D0
0001D74E <AmiBlitz3.ab2@1087>   ADDQ.l #4,d0
0001D754 <AmiBlitz3.ab2@1088>   MOVEA.l _execbase,A6
0001D758 <AmiBlitz3.ab2@1089>   JSR _FreeMem(A6)
0001D75E <AmiBlitz3.ab2@1092>   MOVEA.l _dosbase,A1
0001D764 <AmiBlitz3.ab2@1093>   MOVEA.l _execbase,A6
0001D768 <AmiBlitz3.ab2@1094>   JSR _CloseLibrary(A6)
0001D76E <AmiBlitz3.ab2@1096>   MOVEA.l constpcat,A1
0001D774 <AmiBlitz3.ab2@1097>   MOVE.l constmaxpc,D0
0001D77A <AmiBlitz3.ab2@1098>   MOVEA.l _execbase,A6
0001D77E <AmiBlitz3.ab2@1099>   JSR _FreeMem(A6)
0001D784 <AmiBlitz3.ab2@1102>   MOVEA.l _mathffpbase,A1
0001D78A <AmiBlitz3.ab2@1103>   MOVEA.l _execbase,A6
0001D78E <AmiBlitz3.ab2@1104>   JSR _CloseLibrary(A6)
0001D794 <AmiBlitz3.ab2@1114>     MOVEA.l _execbase,A6
0001D79A <AmiBlitz3.ab2@1115>     MOVE.l mempool,a0
0001D79E <AmiBlitz3.ab2@1116>     JSR _DeletePool(a6)
0001D7A4 <AmiBlitz3.ab2@1117>     CLR.l pushat
0001D7AA <AmiBlitz3.ab2@1124>   JSR free_unusedfunctions
0001D7AC <AmiBlitz3.ab2@1125>   MOVEQ #0,d0
0001D7BA <AmiBlitz3.ab2@1128>   !exitasm
0001D7F2 <AmiBlitz3.ab2@1129>   If dynassign<>""
0001D7FC <AmiBlitz3.ab2@1130>     If *AssignSema
0001D80C <AmiBlitz3.ab2@1131>       ReleaseSemaphore_ *AssignSema
0001D824 <AmiBlitz3.ab2@1132>       If (AttemptSemaphore_ (*AssignSema))                 ; we are the exclusive owner of the sema now!
0001D8B8 <AmiBlitz3.ab2@1133>         dos_RemAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001D8F2 <AmiBlitz3.ab2@1134>         dos_RemAssign{dynassign}
0001D902 <AmiBlitz3.ab2@1135>         RemSemaphore_ *AssignSema
0001D912 <AmiBlitz3.ab2@1136>         ReleaseSemaphore_ *AssignSema
0001D948 <AmiBlitz3.ab2@1137>         If *AssignSema\ss_Link\ln_Name Then FreeVec_ *AssignSema\ss_Link\ln_Name : *AssignSema\ss_Link\ln_Name = #NULL
0001D958 <AmiBlitz3.ab2@1138>         FreeVec_ *AssignSema
0001D960 <AmiBlitz3.ab2@1139>         *AssignSema = #NULL
0001D98E <AmiBlitz3.ab2@1143>   SetCurrentDir{cli_path}
0001D9B0 <AmiBlitz3.ab2@1144>   !coutclose
0001D9B6 <AmiBlitz3.ab2@1145> End
0001D9C2 <AmiBlitz3.ab2@1150> str_doslibrary:     Dc.b "dos.library",0 : Even
0001D9C6 <AmiBlitz3.ab2@1151> _dosbase:           Ds.l 1
0001D9CC <AmiBlitz3.ab2@1155>   MOVEA.l _execbase,A6
0001D9D2 <AmiBlitz3.ab2@1156>   LEA str_doslibrary,A1
0001D9D6 <AmiBlitz3.ab2@1157>   JSR _OldOpenLibrary(A6)
0001D9DC <AmiBlitz3.ab2@1158>   MOVE.l D0,_dosbase
0001D9DE <AmiBlitz3.ab2@1159> RTS
0001D9E4 <AmiBlitz3.ab2@1163>   MOVEA.l #str_mathffpname,A1
0001D9EA <AmiBlitz3.ab2@1164>   MOVEA.l _execbase,A6
0001D9EE <AmiBlitz3.ab2@1165>   JSR _OldOpenLibrary(A6)
0001D9F4 <AmiBlitz3.ab2@1166>   MOVE.l D0,_mathffpbase
0001D9F6 <AmiBlitz3.ab2@1167> RTS
0001DA28 <AmiBlitz3.ab2@1173>   !ComData_JMP{comFunc_SetNormalPointer}
0001DA5A <AmiBlitz3.ab2@1181>   !ComData_JMP{comFunc_SetBusyPointer}
0001DA84 <AmiBlitz3.ab2@1186>   !basic
0001DA88 <AmiBlitz3.ab2@1187>   ab3save_filenameP.l = PutD0
0001DA92 <AmiBlitz3.ab2@1188>   If ab3save_filenameP
0001DABA <AmiBlitz3.ab2@1189>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001DAE8 <AmiBlitz3.ab2@1191>     SaveSource{ab3save_filename}
0001DAEE <AmiBlitz3.ab2@1192>   Else
0001DB28 <AmiBlitz3.ab2@1193>     error{"INTERNAL ERROR: no filename passed in D0 to SaveSource{}!"}
0001DB46 <AmiBlitz3.ab2@1195>   !asm
0001DB48 <AmiBlitz3.ab2@1196>   RTS
0001DB72 <AmiBlitz3.ab2@1199>   !basic
0001DB76 <AmiBlitz3.ab2@1200>   ab3save_filenameP.l = PutD0
0001DB80 <AmiBlitz3.ab2@1201>   If ab3save_filenameP
0001DBA8 <AmiBlitz3.ab2@1202>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001DBD6 <AmiBlitz3.ab2@1203>     LoadSource{ab3save_filename}
0001DBDC <AmiBlitz3.ab2@1204>   Else
0001DC16 <AmiBlitz3.ab2@1205>     error{"INTERNAL ERROR: no filename passed in D0 to LoadSource{}!"}
0001DC34 <AmiBlitz3.ab2@1207>   !asm
0001DC36 <AmiBlitz3.ab2@1208>   RTS
0001DC60 <AmiBlitz3.ab2@1211>   !basic
0001DC66 <AmiBlitz3.ab2@1212>   ClearSource{}
0001DC84 <AmiBlitz3.ab2@1213>   !asm
0001DC86 <AmiBlitz3.ab2@1214>   RTS
0001DCB0 <AmiBlitz3.ab2@1217>   !basic
0001DCB6 <AmiBlitz3.ab2@1218>   OpenConsoleFake{}
0001DCD4 <AmiBlitz3.ab2@1219>   !asm
0001DCD6 <AmiBlitz3.ab2@1220>   RTS
0001DD00 <AmiBlitz3.ab2@1224>   !basic
0001DD06 <AmiBlitz3.ab2@1225>   CloseConsoleFake{}
0001DD24 <AmiBlitz3.ab2@1226>   !asm
0001DD26 <AmiBlitz3.ab2@1227>   RTS
0001DD2C <AmiBlitz3.ab2@1231>   MOVE.w d6,menuitemdebug
0001DD56 <AmiBlitz3.ab2@1232>   !basic
0001DD68 <AmiBlitz3.ab2@1233>   menuitemx.l = Peek.w(?menuitemdebug)
0001DD8E <AmiBlitz3.ab2@1234>   If menuitemx>16 OR  menuitemx<0
0001DE02 <AmiBlitz3.ab2@1235>     error{"Called invalid AB3 Menuitem #"+Str$(menuitemx)+"!"}
0001DE0A <AmiBlitz3.ab2@1236>     menuitemx=0
0001DE1A <AmiBlitz3.ab2@1238>   Poke.w ?menuitemdebug,menuitemx
0001DE38 <AmiBlitz3.ab2@1239>   !asm
0001DE3E <AmiBlitz3.ab2@1240>   MOVE.w menuitemdebug,d6
0001DE44 <AmiBlitz3.ab2@1243>   MOVE.l A5,firstitem_
0001DE4A <AmiBlitz3.ab2@1244>   MOVE.w D7,numlines_org
0001DE50 <AmiBlitz3.ab2@1245>   MOVE.l d7,numlines
0001DE52 <AmiBlitz3.ab2@1246>   LSL.w #2,D6
0001DE58 <AmiBlitz3.ab2@1247>   LEA menu_items,A0
0001DE5C <AmiBlitz3.ab2@1248>   MOVEA.l $0(A0,D6.W),A0
0001DE66 <AmiBlitz3.ab2@1249>   MOVE.l #$FFFFffff,linenumat
0001DE70 <AmiBlitz3.ab2@1250>   MOVE.l #$FFFFffff,compilelinecounter
0001DE72 <AmiBlitz3.ab2@1254>   JSR (A0)
0001DE78 <AmiBlitz3.ab2@1255>   MOVE.l compilelinecounter,D0
0001DE7A <AmiBlitz3.ab2@1256> RTS
0001DE7E <AmiBlitz3.ab2@1258> menuitemdebug: Dc.l 0
0001DE82 <AmiBlitz3.ab2@1260> mempool                Dc.l 0
0001DE98 <AmiBlitz3.ab2@1261> str_loaddebugmessage:  Dc.b "Debug module to load",0 : Even
0001DE9E <AmiBlitz3.ab2@1262> dloaderr:             JSR handle_compileerror
0001DEBA <AmiBlitz3.ab2@1263>                        Dc.b "Can't LoadSeg debug module!",0 : Even
0001DEF8 <AmiBlitz3.ab2@1271>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001DEFE <AmiBlitz3.ab2@1272>   LEA str_loaddebugmessage,A2
0001DF04 <AmiBlitz3.ab2@1273>   LEA str_blitz3assign,A0
0001DF0A <AmiBlitz3.ab2@1274>   LEA str_temp_debugmodulename,A1
0001DF0C <AmiBlitz3.ab2@1277>   JSR (A3)
0001DF10 <AmiBlitz3.ab2@1279>   BEQ.w menu_loaddebugmodule_noload
0001DF16 <AmiBlitz3.ab2@1280>   MOVE.l D0,ptr_temp_debugmodule
0001DF1A <AmiBlitz3.ab2@1281>   BSR.w call_setpointerbusy
0001DF20 <AmiBlitz3.ab2@1282>   MOVE.l A7,errstack
0001DF2A <AmiBlitz3.ab2@1283>   MOVE.l #menu_loaddebugmodule_noload,errcont
0001DF30 <AmiBlitz3.ab2@1284>   MOVE.l ptr_temp_debugmodule,D1
0001DF34 <AmiBlitz3.ab2@1286>   MOVEA.l _dosbase(PC),A6
0001DF38 <AmiBlitz3.ab2@1287>   JSR _LoadSeg(A6)
0001DF3A <AmiBlitz3.ab2@1288>   MOVE.l D0,D7
0001DF3E <AmiBlitz3.ab2@1289>   BEQ.w dloaderr
0001DF44 <AmiBlitz3.ab2@1290>   MOVE.l ptr_seg_debugger,D1
0001DF48 <AmiBlitz3.ab2@1291>   BEQ.b menu_loaddebugmodule_ndseg
0001DF4C <AmiBlitz3.ab2@1292>   MOVEA.l _dosbase(PC),A6
0001DF50 <AmiBlitz3.ab2@1293>   JSR _UnLoadSeg(A6)
0001DF54 <AmiBlitz3.ab2@1294>   BSR.w call_setpointernormal
0001DF5A <AmiBlitz3.ab2@1297>   MOVE.l D7,ptr_seg_debugger
0001DF5C <AmiBlitz3.ab2@1300> RTS
0001DF7A <AmiBlitz3.ab2@1303> str_request_exename:   Dc.b "Name of Executable to Create:",0 : Even                        ;xtext org source
0001E03A <AmiBlitz3.ab2@1304> exepath:               Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xpath  dcb.b 192,0 org source
0001E0FA <AmiBlitz3.ab2@1305> exefilename:           Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xname  dcb.b 192,0 org source
0001E0FE <AmiBlitz3.ab2@1306> ptr_newexefilename:    Dc.l 0                                                               ;execname org
0001E128 <AmiBlitz3.ab2@1310>   !basic
0001E152 <AmiBlitz3.ab2@1311>   exepath.s = Peek.s(?exepath)
0001E17C <AmiBlitz3.ab2@1312>   exefile.s = Peek.s(?exefilename)
0001E1FC <AmiBlitz3.ab2@1313>   exefile.s = dos_AddPart{exepath,exefile}
0001E234 <AmiBlitz3.ab2@1314>   Poke.s ?tempspace,exefile
0001E252 <AmiBlitz3.ab2@1315>   !asm
0001E258 <AmiBlitz3.ab2@1336>   LEA tempspace,a0
0001E25A <AmiBlitz3.ab2@1337>   MOVE.l a0,d0
0001E25E <AmiBlitz3.ab2@1338> BRA newcreate2
0001E288 <AmiBlitz3.ab2@1344>   !basic
0001E2B2 <AmiBlitz3.ab2@1345>   request_exename.s = Peek.s(?str_request_exename )
0001E30E <AmiBlitz3.ab2@1346>   request_exename   = !TRANS{request_exename}
0001E314 <AmiBlitz3.ab2@1347>   GetD0 &request_exename
0001E332 <AmiBlitz3.ab2@1348>   !asm
0001E334 <AmiBlitz3.ab2@1349>   MOVE.l D0,A2
0001E372 <AmiBlitz3.ab2@1352>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001E378 <AmiBlitz3.ab2@1354>   LEA exepath,A0
0001E37E <AmiBlitz3.ab2@1355>   LEA exefilename,A1
0001E380 <AmiBlitz3.ab2@1358>   JSR (A3)                                                 ;open ped filerequest
0001E384 <AmiBlitz3.ab2@1359>   BEQ.w cancel_createexe
0001E38E <AmiBlitz3.ab2@1362>   ADD.l #1,number_of_builds
0001E394 <AmiBlitz3.ab2@1365>   MOVE.l D0,ptr_newexefilename
0001E39C <AmiBlitz3.ab2@1366>   MOVE.w #-1,debugversion
0001E3A2 <AmiBlitz3.ab2@1367>   MOVE.w set_make_smallestcode,-(A7)
0001E3AA <AmiBlitz3.ab2@1371>     MOVE.w #1,makeexec
0001E3B0 <AmiBlitz3.ab2@1372>     JSR ab3_OpenDebugFile
0001E3B4 <AmiBlitz3.ab2@1373>     BSR.w startcompile
0001E3BA <AmiBlitz3.ab2@1374>     JSR ab3_CloseDebugFile
0001E3C4 <AmiBlitz3.ab2@1375>     CMP.l #"NORE",reqmode
0001E3C8 <AmiBlitz3.ab2@1376>   BEQ 'l1
0001E3CE <AmiBlitz3.ab2@1378>   TST.w anyerrs
0001E3D2 <AmiBlitz3.ab2@1379>   BNE.b menu_createexecutable__skip
0001E3D6 <AmiBlitz3.ab2@1380>   BSR.w savefile
0001E3DC <AmiBlitz3.ab2@1383>   MOVE.w (A7)+,set_make_smallestcode
0001E3DE <AmiBlitz3.ab2@1386> RTS
0001E3E6 <AmiBlitz3.ab2@1390>   MOVE.w #-1,flag_noPED
0001E3E8 <AmiBlitz3.ab2@1391> RTS
0001E3F0 <AmiBlitz3.ab2@1395>   MOVE.w #-1,flag_noCLI
0001E3F2 <AmiBlitz3.ab2@1396> RTS
0001E41C <AmiBlitz3.ab2@1399>   !basic
0001E444 <AmiBlitz3.ab2@1400>     If dbg_fid>=0 Then file_Close{dbg_fid} : dbg_fid = -1
0001E454 <AmiBlitz3.ab2@1401>     Poke.w ?word_WriteDebugFileNow,0
0001E472 <AmiBlitz3.ab2@1402>   !asm
0001E474 <AmiBlitz3.ab2@1403> RTS
0001E49E <AmiBlitz3.ab2@1406>   !basic
0001E4AE <AmiBlitz3.ab2@1407>   Poke.w ?word_WriteDebugFileNow,0
0001E4C0 <AmiBlitz3.ab2@1408>   If dbg_fid>=0
0001E4D6 <AmiBlitz3.ab2@1409>     file_Close{dbg_fid} : dbg_fid = -1
0001E4E8 <AmiBlitz3.ab2@1411>   If dbg_fid.l<0
0001E4EA <AmiBlitz3.ab2@1412>     CLR.l d0
0001E528 <AmiBlitz3.ab2@1413>     !ComData_GetW{comWord_CreateDebugFile,D0}
0001E52C <AmiBlitz3.ab2@1414>     dbg_Create.l = PutD0
0001E536 <AmiBlitz3.ab2@1415>     If (dbg_Create) ; only when set!
0001E546 <AmiBlitz3.ab2@1416>       exefileP.l = Peek.l (?ptr_newexefilename)
0001E56E <AmiBlitz3.ab2@1417>       exefile.s = ""
0001E5A0 <AmiBlitz3.ab2@1418>       If exefileP Then exefile.s = Peek.s(exefileP)
0001E5D8 <AmiBlitz3.ab2@1419>       If exefile><""
0001E62E <AmiBlitz3.ab2@1420>         dbg_fid = file_Open{exefile+".dbg",#file_forcewrite}
0001E640 <AmiBlitz3.ab2@1421>         If dbg_fid>=0
0001E652 <AmiBlitz3.ab2@1422>           Poke.w ?word_WriteDebugFileNow,-1
0001E65E <AmiBlitz3.ab2@1425>       oldhunkoffset.l = -1
0001E686 <AmiBlitz3.ab2@1426>       oldfile.s       = ""
0001E6A4 <AmiBlitz3.ab2@1429>   !asm
0001E6A6 <AmiBlitz3.ab2@1430> RTS
0001E6AC <AmiBlitz3.ab2@1433> TST.w word_WriteDebugFileNow
0001E6B0 <AmiBlitz3.ab2@1434> BEQ 'skipdebugfile
0001E6DA <AmiBlitz3.ab2@1435> !basic
0001E6EC <AmiBlitz3.ab2@1436>   If dbg_fid>=0
0001E6FE <AmiBlitz3.ab2@1437>     pass.l          = Peek.w(?pass)
0001E710 <AmiBlitz3.ab2@1438>     makesmallest.b  = Peek.b(?make_smallestcode)               ; get the status of make_smallestcode  tomsmart1
0001E734 <AmiBlitz3.ab2@1439> 
0001E73A <AmiBlitz3.ab2@1440>       oldhunkoffset.l = hunkoffset.l
0001E76E <AmiBlitz3.ab2@1441>       oldfile.s       = codefile.s
0001E78A <AmiBlitz3.ab2@1442>       If Peek.w (?ininclude)>0
0001E79A <AmiBlitz3.ab2@1443>         codeline.l = Peek.l(?includeline);-1
0001E80A <AmiBlitz3.ab2@1444>         codefile.s = dos_FilePart{incdim(Peek.w(?ininclude)-1)}
0001E810 <AmiBlitz3.ab2@1445>       Else
0001E83E <AmiBlitz3.ab2@1446>         !ComData_LEA{comStr_SourceName,A0}
0001E840 <AmiBlitz3.ab2@1447>         MOVE.l A0,D0
0001E844 <AmiBlitz3.ab2@1448>         sourceP.l = PutD0
0001E86C <AmiBlitz3.ab2@1449>         codefile.s = Peek.s(sourceP)
0001E87C <AmiBlitz3.ab2@1450>         codeline.l = Peek.l(?linenumat)
0001E8A4 <AmiBlitz3.ab2@1452>       hunkoffset.l = Peek.l(?destpointer)-Peek.l(?destbufferstart)
0001E8F8 <AmiBlitz3.ab2@1453>       If oldhunkoffset><hunkoffset OR oldfile><codefile
0001E908 <AmiBlitz3.ab2@1460>         *sourceLine.SourceLine_t = Peek.l(?sourceline)
0001E912 <AmiBlitz3.ab2@1461>         If *sourceLine
0001E928 <AmiBlitz3.ab2@1462>           MaxLen detokenline.s = 65536
0001E96A <AmiBlitz3.ab2@1463>          !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0001E97A <AmiBlitz3.ab2@1464>          *tn.preprocessor = Peek.l(?include_preprocessor)
0001E9A6 <AmiBlitz3.ab2@1465>           written.l = preproc_Detokenize{*tn,&*sourceLine\Text,&detokenline,*sourceLine\CharLength}
0001E9D4 <AmiBlitz3.ab2@1466>           If written>0 Then Poke.b &detokenline+written-1,0
0001E9FE <AmiBlitz3.ab2@1467>           sourceLineText.s = Peek.s(&detokenline)
0001EA04 <AmiBlitz3.ab2@1468>         Else
0001EA2C <AmiBlitz3.ab2@1469>           sourceLineText = "NULL"
0001EAF4 <AmiBlitz3.ab2@1472>         file_WriteLine{dbg_fid,Hex$(hunkoffset)+" <"+codefile+"@"+Str$(codeline)+"> "+sourceLineText}
0001EB12 <AmiBlitz3.ab2@1478> !asm
0001EB14 <AmiBlitz3.ab2@1480> RTS
0001EB16 <AmiBlitz3.ab2@1482> word_WriteDebugFileNow: Dc.w 0
0001EB18 <AmiBlitz3.ab2@1484> flag_noPED:  Ds.w 1                                        ;closeed org source
0001EB1A <AmiBlitz3.ab2@1485> flag_noCLI:  Ds.w 1                                        ;nocli org source
0001EB1E <AmiBlitz3.ab2@1489>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
0001EB24 <AmiBlitz3.ab2@1490>   MOVEA.l _execbase,A6
0001EB28 <AmiBlitz3.ab2@1491>   JSR _CacheClearU(A6)
0001EB2C <AmiBlitz3.ab2@1492>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
0001EB2E <AmiBlitz3.ab2@1493> RTS
0001EB32 <AmiBlitz3.ab2@1496>   MOVEM.l A2-A3,-(A7)
0001EB38 <AmiBlitz3.ab2@1497>   CLR.b doublepeek
0001EB3E <AmiBlitz3.ab2@1498>   MOVE.l A5,lastsourcepos
0001EB44 <AmiBlitz3.ab2@1499>    JSR getchar
0001EB48 <AmiBlitz3.ab2@1500>   CMP.w #$2E,D0
0001EB4C <AmiBlitz3.ab2@1501>    BEQ.w JL_0_49B4b
0001EB52 <AmiBlitz3.ab2@1502>   MOVEA.l defaulttype,A2
0001EB56 <AmiBlitz3.ab2@1503>   CMP.w #$24,D0
0001EB5A <AmiBlitz3.ab2@1504>    BNE.w JL_0_49CAb
0001EB5C <AmiBlitz3.ab2@1505>   MOVEQ.l #$07,D1
0001EB60 <AmiBlitz3.ab2@1506> BRA.w JL_0_49DEb
0001EB66 <AmiBlitz3.ab2@1509>   JSR getparameter2
0001EB6A <AmiBlitz3.ab2@1510>   BEQ.w syntaxerrb
0001EB70 <AmiBlitz3.ab2@1511>   LEA newtypebase,A2
0001EB76 <AmiBlitz3.ab2@1512>   JSR findtype
0001EB7A <AmiBlitz3.ab2@1513>   BNE.w notypeerrb
0001EB84 <AmiBlitz3.ab2@1518>   MOVE.w oldqflag,instringon
0001EB8A <AmiBlitz3.ab2@1519>   MOVEA.l lastsourcepos,A5
0001EB90 <AmiBlitz3.ab2@1521>   MOVE.l a2,functionreturntype
0001EB98 <AmiBlitz3.ab2@1522>   CMPI.l #$100,$4(A2)
0001EB9C <AmiBlitz3.ab2@1523>   BLE.w 'isvar
0001EB9E <AmiBlitz3.ab2@1527>   MOVEQ #3,d1
0001EBA2 <AmiBlitz3.ab2@1528>   BRA JL_0_49DEb
0001EBA6 <AmiBlitz3.ab2@1535>   MOVE.w $6(A2),D1
0001EBAC <AmiBlitz3.ab2@1536>   CMP.w #8,8(a2)
0001EBB0 <AmiBlitz3.ab2@1537>   BNE 'l1
0001EBB8 <AmiBlitz3.ab2@1538>   MOVE.b #1,doublepeek
0001EBBE <AmiBlitz3.ab2@1541>   MOVE.w D1,convsize
0001EBC2 <AmiBlitz3.ab2@1542>   MOVEM.l (A7)+,A2-A3
0001EBC4 <AmiBlitz3.ab2@1543> RTS
0001EBCA <AmiBlitz3.ab2@1545> notypeerrb JMP notypeerr
0001EBD0 <AmiBlitz3.ab2@1546> illtypeerrb JMP illtypeerr
0001EBD6 <AmiBlitz3.ab2@1547> syntaxerrb JMP syntaxerr
0001EBE0 <AmiBlitz3.ab2@1592>   ADD.l #1,number_of_builds
0001EBE6 <AmiBlitz3.ab2@1594>   CLR.w debugversion
0001EBEC <AmiBlitz3.ab2@1595>   CLR.w flag_noPED
0001EBF2 <AmiBlitz3.ab2@1596>   CLR.w flag_noCLI
0001EBFA <AmiBlitz3.ab2@1599>     MOVE.w #0,makeexec                                     ;MOVE.w #$FFFF,debugversion
0001EBFE <AmiBlitz3.ab2@1600>     BSR.w startcompile
0001EC08 <AmiBlitz3.ab2@1601>     CMP.l #"NORE",reqmode
0001EC0C <AmiBlitz3.ab2@1602>   BEQ 'l1
0001EC12 <AmiBlitz3.ab2@1605>   TST.w anyerrs
0001EC16 <AmiBlitz3.ab2@1606>    BNE.w JL_0_3482
0001EC1A <AmiBlitz3.ab2@1608>   MOVE.w flag_noPED(PC),D1
0001EC1E <AmiBlitz3.ab2@1609>    BEQ.w skip_closingGUI
0001EC50 <AmiBlitz3.ab2@1614>   !ComData_JSR{comFunc_CloseGUI}
0001EC54 <AmiBlitz3.ab2@1615> BRA.b runprogram
0001EC58 <AmiBlitz3.ab2@1619>   BSR.w compilerequester
0001EC5E <AmiBlitz3.ab2@1622>   MOVEA.l _dosbase,A6
0001EC64 <AmiBlitz3.ab2@1623>   LEA exepath,a0
0001EC66 <AmiBlitz3.ab2@1624>   MOVE.l a0,d1
0001EC68 <AmiBlitz3.ab2@1625>   MOVEQ #-2,d2
0001EC6C <AmiBlitz3.ab2@1626>   JSR _Lock(a6)                                            ;lock
0001EC72 <AmiBlitz3.ab2@1627>   MOVE.l d0,exelock
0001EC78 <AmiBlitz3.ab2@1628>   MOVE.l #0,d1
0001EC7C <AmiBlitz3.ab2@1629>   JSR _CurrentDir(A6)
0001EC82 <AmiBlitz3.ab2@1630>   MOVE.l D0,lock_currentdir
0001EC84 <AmiBlitz3.ab2@1631>   MOVE.l D0,D1
0001EC88 <AmiBlitz3.ab2@1632>   JSR _CurrentDir(A6)
0001EC8E <AmiBlitz3.ab2@1633>   CLR.l ptr_exetask
0001EC94 <AmiBlitz3.ab2@1642>   MOVE.l #str_process_name,D1
0001EC96 <AmiBlitz3.ab2@1643>   MOVEQ.l #$00,D2
0001EC9C <AmiBlitz3.ab2@1644>   MOVE.l #proc_seglist,D3
0001EC9E <AmiBlitz3.ab2@1645>   LSR.l #2,D3
0001ECA4 <AmiBlitz3.ab2@1646>   MOVE.l stacksize,D4
0001ECAA <AmiBlitz3.ab2@1647>   MOVEA.l _dosbase,A6
0001ECAE <AmiBlitz3.ab2@1648>   JSR _CreateProc(A6)                                      ;runtask
0001ECB0 <AmiBlitz3.ab2@1649>   TST.l D0
0001ECB4 <AmiBlitz3.ab2@1650>    BEQ ErrorRunningProg
0001ECEA <AmiBlitz3.ab2@1652>   !ComData_SetB{comByte_RunningFlag,#1}   ; this should be done here, straigt after it is clear that
0001ECF0 <AmiBlitz3.ab2@1654>   TST.w flag_noPED
0001ECF4 <AmiBlitz3.ab2@1655>    BNE.b JL_0_344E
0001ECF8 <AmiBlitz3.ab2@1656>   BSR.w close_compilewin
0001ECFE <AmiBlitz3.ab2@1659>   CLR.l firstlocal
0001ED04 <AmiBlitz3.ab2@1660>   CLR.l firstglob
0001ED08 <AmiBlitz3.ab2@1661>   MOVE.w flag_noPED(PC),D1
0001ED0C <AmiBlitz3.ab2@1662>   BEQ.w skip_openGUI
0001ED3E <AmiBlitz3.ab2@1666>   !ComData_JSR{comFunc_CreateGUI}
0001ED40 <AmiBlitz3.ab2@1675> RTS
0001ED4A <AmiBlitz3.ab2@1678> MOVE.l #1,_runerror
0001ED4E <AmiBlitz3.ab2@1679> BRA JL_0_344E
0001ED52 <AmiBlitz3.ab2@1681> _runerror: Dc.l 0
0001ED56 <AmiBlitz3.ab2@1682> lock_currentdir:    Ds.l 1                                          ;tasklock org source
0001ED5A <AmiBlitz3.ab2@1683> ptr_exetask:        Ds.l 1                                          ;panictask org source
0001ED5E <AmiBlitz3.ab2@1684> signalNum:          Ds.l 1                                          ;panicbit org source
0001ED62 <AmiBlitz3.ab2@1685> signals:            Ds.l 1                                          ;panicmask org source
0001ED78 <AmiBlitz3.ab2@1687> str_process_name:   Dc.b "Blitz ][ Program Proc",0 : Even           ;procname org source
0001ED7D <AmiBlitz3.ab2@1688>                     Ds.b 5                                          ;cnop 0,4 :dc.l 0   ;length org source
0001ED80 <AmiBlitz3.ab2@1689> Even4
0001ED84 <AmiBlitz3.ab2@1691> ptr_ThisTask:       Ds.l 1                                          ;length
0001ED88 <AmiBlitz3.ab2@1692> .proc_seglist:      Ds.l 1                                          ;procstart org source ;next
0001ED8E <AmiBlitz3.ab2@1696>   MOVEA.l $4,A0
0001ED96 <AmiBlitz3.ab2@1697>   MOVE.l  $114(A0),ptr_exetask
0001ED9C <AmiBlitz3.ab2@1699>   MOVEA.l _dosbase,A6
0001EDA2 <AmiBlitz3.ab2@1700>   MOVE.l exelock,D1
0001EDA6 <AmiBlitz3.ab2@1701>   JSR _CurrentDir(A6)
0001EDDC <AmiBlitz3.ab2@1706>   !ComData_SetB{comByte_RunningFlag,#1}
0001EDE0 <AmiBlitz3.ab2@1712>   MOVE.w flag_noCLI(PC),D1
0001EDE4 <AmiBlitz3.ab2@1713>    BNE.b skip_openconsole
0001EE16 <AmiBlitz3.ab2@1717>   !ComData_JSR{comFunc_OpenConsole}
0001EE1A <AmiBlitz3.ab2@1720>   BSR.w calcvbr
0001EE20 <AmiBlitz3.ab2@1721>   MOVEA.l vbr,A0
0001EE26 <AmiBlitz3.ab2@1726>   CLR.w dirmode
0001EE2C <AmiBlitz3.ab2@1727>   CLR.l firstglob
0001EE32 <AmiBlitz3.ab2@1728>   CLR.l firstlocal
0001EE38 <AmiBlitz3.ab2@1730>   MOVE.l stacksize,D2
0001EE3E <AmiBlitz3.ab2@1731>   MOVE.l #$624C745A,D7                                      ;#'bLtZ',d7 org source ;force cli-type run
0001EE44 <AmiBlitz3.ab2@1732>   LEA str_cliarguments,A0                                   ;cli arguement
0001EE4A <AmiBlitz3.ab2@1733>   MOVEA.l destbufferstart,A1
0001EE4E <AmiBlitz3.ab2@1734>   BSR.w Aclearcache
0001EE50 <AmiBlitz3.ab2@1737>   JSR (A1)                                                 ; execute compiled code  ;Run the thing!
0001EE56 <AmiBlitz3.ab2@1739>   MOVEA.l vbr,A0
0001EE5C <AmiBlitz3.ab2@1741>   CLR.l firstglob
0001EE62 <AmiBlitz3.ab2@1742>   CLR.l firstlocal
0001EE68 <AmiBlitz3.ab2@1743>   MOVEA.l _dosbase,A6
0001EE6E <AmiBlitz3.ab2@1744>   MOVE.l exelock,d1
0001EE72 <AmiBlitz3.ab2@1745>   BEQ 'nolock
0001EE76 <AmiBlitz3.ab2@1746>   JSR _UnLock(a6)
0001EEAC <AmiBlitz3.ab2@1751>   !ComData_SetB{comByte_RunningFlag,#0}
0001EEB0 <AmiBlitz3.ab2@1754>   MOVE.w flag_noCLI(PC),D1
0001EEB4 <AmiBlitz3.ab2@1755>    BNE.b skip_closeconsole
0001EEE6 <AmiBlitz3.ab2@1759>   !ComData_JSR{comFunc_CloseConsole}
0001EEEE <AmiBlitz3.ab2@1762>   MOVE.w #$0001,stopit
0001EEF2 <AmiBlitz3.ab2@1763>   MOVE.l signals(PC),D0
0001EEF8 <AmiBlitz3.ab2@1764>   MOVEA.l ptr_ThisTask,A1
0001EEFE <AmiBlitz3.ab2@1765>   MOVEA.l _execbase,A6
0001EF02 <AmiBlitz3.ab2@1766>   JSR _Signal(A6)
0001EF04 <AmiBlitz3.ab2@1767> RTS
0001EF0A <AmiBlitz3.ab2@1771>   MOVEA.l _execbase,A6
0001EF0E <AmiBlitz3.ab2@1772>   MOVE.w $128(A6),D0
0001EF10 <AmiBlitz3.ab2@1773>   MOVEQ.l #$00,D1
0001EF14 <AmiBlitz3.ab2@1774>   ANDI.w #$F,D0
0001EF18 <AmiBlitz3.ab2@1777>     BEQ.b calcvbr__skip
0001EF1A <AmiBlitz3.ab2@1778>     ADDQ.w #1,D1
0001EF1C <AmiBlitz3.ab2@1779>     LSR.w #1,D0
0001EF20 <AmiBlitz3.ab2@1780> BRA.b calcvbr_loop
0001EF22 <AmiBlitz3.ab2@1783>   MOVEQ.l #$00,D2
0001EF26 <AmiBlitz3.ab2@1784>   CMP.w #$2,D1
0001EF2A <AmiBlitz3.ab2@1785>    BCS.b calcvbr__skip2
0001EF30 <AmiBlitz3.ab2@1786>   MOVEA.l _execbase,A6
0001EF34 <AmiBlitz3.ab2@1787>   JSR _SuperState(A6)
0001EF38 <AmiBlitz3.ab2@1788>   Dc.l $4E7A2801                                           ;movec vbr,D2
0001EF3C <AmiBlitz3.ab2@1789>   JSR _UserState(A6)
0001EF42 <AmiBlitz3.ab2@1792>   MOVE.l D2,vbr
0001EF44 <AmiBlitz3.ab2@1793> RTS
0001EF4A <AmiBlitz3.ab2@1797>   LEA instrtab,a0
0001EF50 <AmiBlitz3.ab2@1798>   MOVE.l #labelhash-instrtab,d0
0001EF52 <AmiBlitz3.ab2@1799>   ASR.l #2,d0
0001EF54 <AmiBlitz3.ab2@1800>   SUBQ.l #1,d0
0001EF56 <AmiBlitz3.ab2@1803>   CLR.l (a0)+
0001EF58 <AmiBlitz3.ab2@1804>   SUBQ.l #1,d0
0001EF5C <AmiBlitz3.ab2@1805>   BNE 'l10
0001EF60 <AmiBlitz3.ab2@1806>   BSR.w call_setpointerbusy
0001EF64 <AmiBlitz3.ab2@1807>   BSR.w free_userlibs
0001EF68 <AmiBlitz3.ab2@1808>   BSR.w scan_for_userlibs
0001EF6C <AmiBlitz3.ab2@1809>   BSR.w JL_0_7082
0001EF70 <AmiBlitz3.ab2@1810> BRA.w call_setpointernormal
0001EF9A <AmiBlitz3.ab2@1816>   !basic
0001EFD4 <AmiBlitz3.ab2@1817>   Poke.l ?size_acidlibs, dos_GetFileSize{Peek$(?str_path_acidlibs)}
0001EFE4 <AmiBlitz3.ab2@1819>   deflibNameP.l = Peek.l(?deflib)
0001EFEE <AmiBlitz3.ab2@1820>   If deflibNameP
0001F020 <AmiBlitz3.ab2@1821>     If Peek.s(deflibNameP)<>""
0001F06A <AmiBlitz3.ab2@1822>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(Peek.l(?deflib))}
0001F070 <AmiBlitz3.ab2@1823>     Else
0001F0AA <AmiBlitz3.ab2@1824>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
0001F0B0 <AmiBlitz3.ab2@1826>   Else
0001F0EA <AmiBlitz3.ab2@1827>     Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
0001F124 <AmiBlitz3.ab2@1828>     error{"INTERNAL: Invalid deflib name pointer!"}
0001F142 <AmiBlitz3.ab2@1830>   !asm
0001F148 <AmiBlitz3.ab2@1835>   MOVE.l #str_path_userlibs,D1
0001F14A <AmiBlitz3.ab2@1836>   MOVEQ.l #-$02,D2
0001F150 <AmiBlitz3.ab2@1837>   MOVEA.l _dosbase,A6
0001F154 <AmiBlitz3.ab2@1838>   JSR _Lock(A6)
0001F156 <AmiBlitz3.ab2@1839>   MOVE.l D0,D7
0001F15A <AmiBlitz3.ab2@1840>    BEQ.w exit_get_libraries
0001F15C <AmiBlitz3.ab2@1841>   MOVE.l D7,D1
0001F162 <AmiBlitz3.ab2@1842>   MOVE.l #ptr_parameterstore,D2
0001F166 <AmiBlitz3.ab2@1843>   JSR _Examine(A6)
0001F168 <AmiBlitz3.ab2@1844>   TST.l D0
0001F16C <AmiBlitz3.ab2@1845>   BEQ.w unlock_and_exit_get_libraries
0001F172 <AmiBlitz3.ab2@1846>   MOVE.l fib_DirEntryType,D0
0001F176 <AmiBlitz3.ab2@1847>   BMI.w unlock_and_exit_get_libraries
0001F178 <AmiBlitz3.ab2@1852>     MOVE.l D7,D1
0001F17E <AmiBlitz3.ab2@1853>     MOVE.l #ptr_parameterstore,D2
0001F184 <AmiBlitz3.ab2@1854>     MOVEA.l _dosbase,A6
0001F188 <AmiBlitz3.ab2@1855>     JSR _ExNext(A6)
0001F18A <AmiBlitz3.ab2@1856>     TST.l D0
0001F18E <AmiBlitz3.ab2@1857>      BEQ.w exit_scan_libsdrawer                            ; kein weiteres File
0001F194 <AmiBlitz3.ab2@1859>     MOVE.l fib_DirEntryType,D0                             ; positive for directoies, negative for files
0001F198 <AmiBlitz3.ab2@1860>     BPL.w scan_libsdrawer                                  ; skip directories
0001F19E <AmiBlitz3.ab2@1862>     LEA fib_FileName,A0                                    ; pruefen ob infofile
0001F1A2 <AmiBlitz3.ab2@1863>     BSR.w check_for_infoextention
0001F1A6 <AmiBlitz3.ab2@1864>     BEQ.w scan_libsdrawer
0001F1AC <AmiBlitz3.ab2@1866>     MOVEA.l _execbase,A6                                   ; allocate $26 = 38 bytes fuer listeneintrag
0001F1AE <AmiBlitz3.ab2@1867>     MOVEQ.l #$26,D0
0001F1B0 <AmiBlitz3.ab2@1868>     MOVEQ.l #$01,D1
0001F1B6 <AmiBlitz3.ab2@1869>     MOVE.l mempool,a0
0001F1BA <AmiBlitz3.ab2@1870>     JSR _AllocPooled(a6)
0001F1C0 <AmiBlitz3.ab2@1872>     MOVEA.l _dosbase,A6
0001F1C2 <AmiBlitz3.ab2@1873>     MOVE.l D0,D6                                           ; sichere speicheradresse in D6
0001F1C8 <AmiBlitz3.ab2@1876>     LEA ptr_userlibs_list,A0                               ; pruefe liste
0001F1CA <AmiBlitz3.ab2@1879>     MOVE.l (A0),D5
0001F1CE <AmiBlitz3.ab2@1880>      BEQ.w JL_0_3722                                       ; kein pointer da? kann springe weiter
0001F1D0 <AmiBlitz3.ab2@1881>     MOVEA.l D5,A2
0001F1D2 <AmiBlitz3.ab2@1882>     ADDQ.w #6,A2                                           ; 6 bytes weiter gehen, um dateinamen zu speichern
0001F1D8 <AmiBlitz3.ab2@1885>     LEA fib_FileName,A1                                    ; vergleich, ob Dateiname schon in der liste ist
0001F1DA <AmiBlitz3.ab2@1888>       MOVEQ.l #$00,D0
0001F1DC <AmiBlitz3.ab2@1889>       MOVE.b (A1)+,D0
0001F1E0 <AmiBlitz3.ab2@1890>        BEQ.w JL_0_3722                                     ; dateiname komplett, dann weiter
0001F1E2 <AmiBlitz3.ab2@1891>       MOVEQ.l #$00,D1
0001F1E4 <AmiBlitz3.ab2@1892>       MOVE.b (A2)+,D1
0001F1E8 <AmiBlitz3.ab2@1893>        BEQ.w JL_0_371C
0001F20A <AmiBlitz3.ab2@1894>       !compare1                                            ;bsr.w tstalpha
0001F20E <AmiBlitz3.ab2@1895>       BNE.w JL_0_3702
0001F212 <AmiBlitz3.ab2@1896>       ANDI.w #$DF,D0
0001F214 <AmiBlitz3.ab2@1899>       EXG.l D0,D1
0001F236 <AmiBlitz3.ab2@1900>       !compare1                                            ;bsr.w tstalpha
0001F23A <AmiBlitz3.ab2@1901>       BNE.w JL_0_3710
0001F23E <AmiBlitz3.ab2@1902>       ANDI.w #$DF,D0
0001F240 <AmiBlitz3.ab2@1905>       EXG.l D0,D1
0001F242 <AmiBlitz3.ab2@1906>       CMP.b D1,D0
0001F246 <AmiBlitz3.ab2@1907>     BEQ.w JL_0_36E6
0001F24A <AmiBlitz3.ab2@1908>     BCS.w JL_0_3722
0001F24C <AmiBlitz3.ab2@1911>     MOVEA.l D5,A0
0001F250 <AmiBlitz3.ab2@1912> BRA.w JL_0_36D6
0001F252 <AmiBlitz3.ab2@1915>     MOVEA.l D6,A1                                          ; hier war die adresse des allokierten Speicers drin
0001F254 <AmiBlitz3.ab2@1916>     MOVE.l (A0),(A1)
0001F256 <AmiBlitz3.ab2@1917>     MOVE.l A1,(A0)
0001F258 <AmiBlitz3.ab2@1918>     ADDQ.w #4,A1                                           ; pointer zum naechsten namen ueberspringen
0001F25C <AmiBlitz3.ab2@1919>     MOVE.w #$FFFF,(A1)+                                    ; $FFFF schreiben
0001F262 <AmiBlitz3.ab2@1920>     MOVEA.l #fib_FileName,A0                               ; dateinamen in die liste kopieren
0001F264 <AmiBlitz3.ab2@1923>       MOVE.b (A0)+,(A1)+
0001F268 <AmiBlitz3.ab2@1924>     BNE.w JL_0_3734
0001F26C <AmiBlitz3.ab2@1925> BRA.w scan_libsdrawer
0001F26E <AmiBlitz3.ab2@1928>   MOVE.l D7,D1
0001F274 <AmiBlitz3.ab2@1929>   MOVEA.l _dosbase,A6
0001F278 <AmiBlitz3.ab2@1930>   JSR _UnLock(A6)
0001F27A <AmiBlitz3.ab2@1931>   MOVEQ.l #-$01,D0
0001F27C <AmiBlitz3.ab2@1934> RTS
0001F27E <AmiBlitz3.ab2@1937>   MOVE.l D7,D1
0001F284 <AmiBlitz3.ab2@1938>   MOVEA.l _dosbase,A6
0001F288 <AmiBlitz3.ab2@1939>   JSR _UnLock(A6)
0001F28A <AmiBlitz3.ab2@1940>   MOVEQ.l #$00,D0
0001F28C <AmiBlitz3.ab2@1941> RTS
0001F292 <AmiBlitz3.ab2@1945>   MOVEA.l _execbase,A6
0001F298 <AmiBlitz3.ab2@1946>   MOVEA.l ptr_userlibs_list,A2
0001F29E <AmiBlitz3.ab2@1947>   CLR.l ptr_userlibs_list
0001F2A2 <AmiBlitz3.ab2@1950>     CMPA.w #$0,A2
0001F2A6 <AmiBlitz3.ab2@1951>     BEQ.w exit_free_userlib
0001F2A8 <AmiBlitz3.ab2@1952>       MOVEA.l A2,A1
0001F2AA <AmiBlitz3.ab2@1953>       MOVEQ.l #$26,D0
0001F2AC <AmiBlitz3.ab2@1954>       MOVEA.l (A2),A2
0001F2B2 <AmiBlitz3.ab2@1955>       MOVE.l mempool,a0
0001F2B8 <AmiBlitz3.ab2@1956>       MOVEA.l _execbase,A6
0001F2BC <AmiBlitz3.ab2@1957>       JSR _FreePooled(A6)
0001F2C0 <AmiBlitz3.ab2@1958> BRA.w loop_free_userlib
0001F2C2 <AmiBlitz3.ab2@1961> RTS
0001F2C4 <AmiBlitz3.ab2@1964> pass:  Dc.w 0                                             ; smallpass org source
0001F2C6 <AmiBlitz3.ab2@1965> compiler_job: Dc.w 0                                      ; added by thilo: what the compiler is doing at the moment
0001F2CC <AmiBlitz3.ab2@1969>   MOVE.l A7,errstack                                      ;startcompile
0001F2D2 <AmiBlitz3.ab2@1978>   CLR.l reqmode
0001F2DC <AmiBlitz3.ab2@1980>   MOVE.l #Aclearallvars,errcont
0001F2E6 <AmiBlitz3.ab2@1981>   MOVE.l #concomstack,concomsp
0001F2EA <AmiBlitz3.ab2@1988>   MOVE.w #1450,D0
0001F2EC <AmiBlitz3.ab2@1989>   LSR.w #3,D0
0001F2EE <AmiBlitz3.ab2@1990>   SUBQ.w #7,D0                                             ; 173
0001F2F4 <AmiBlitz3.ab2@1991>   MOVE.w D0,progressbar_width
0001F2F6 <AmiBlitz3.ab2@1992>   SWAP D0
0001F2F8 <AmiBlitz3.ab2@1993>   CLR.w D0
0001F2FE <AmiBlitz3.ab2@1994>   MOVE.l numlines,d1
0001F302 <AmiBlitz3.ab2@1995>   DIVU.l d1,d0                                             ; progressbar_width / numlines
0001F304 <AmiBlitz3.ab2@1997>   TST.w D0
0001F308 <AmiBlitz3.ab2@1998>   BNE.w JL_0_37C0
0001F30A <AmiBlitz3.ab2@1999>   MOVEQ.l #-$01,D0
0001F310 <AmiBlitz3.ab2@2002>   MOVE.w D0,progress_per_line
0001F318 <AmiBlitz3.ab2@2010>   BTST #$7,use_debugger
0001F31C <AmiBlitz3.ab2@2012>   BNE 'debugon
0001F322 <AmiBlitz3.ab2@2013>   CLR.w debugmode
0001F326 <AmiBlitz3.ab2@2014> BRA.b 'debugoff
0001F32C <AmiBlitz3.ab2@2017>   SNE debugmode
0001F364 <AmiBlitz3.ab2@2025>   !ComData_SetB{comByte_DebugMode,debugmode}
0001F36A <AmiBlitz3.ab2@2028>   CLR.w dirmode                                            ;direct mode flag
0001F370 <AmiBlitz3.ab2@2029>   CLR.w ezerr                                              ;quiet error
0001F376 <AmiBlitz3.ab2@2030>   CLR.l currentfunction
0001F37C <AmiBlitz3.ab2@2031>   CLR.w connest
0001F382 <AmiBlitz3.ab2@2032>   CLR.w varmode
0001F388 <AmiBlitz3.ab2@2033>   CLR.w proceduremode
0001F38E <AmiBlitz3.ab2@2034>   CLR.w ininclude
0001F394 <AmiBlitz3.ab2@2035>   CLR.w intstring
0001F39A <AmiBlitz3.ab2@2036>   CLR.w pass
0001F3A2 <AmiBlitz3.ab2@2037>   MOVE.w #0,compiler_job
0001F3A8 <AmiBlitz3.ab2@2038>   CLR.l funcscanon
0001F3AE <AmiBlitz3.ab2@2047>   CLR.l funcscanon
0001F3B2 <AmiBlitz3.ab2@2048>   BSR.w compileall
0001F3B8 <AmiBlitz3.ab2@2049> 
0001F3BE <AmiBlitz3.ab2@2050>   TST.l errorcounter
0001F3C2 <AmiBlitz3.ab2@2051>   BEQ _skiperrorstop
0001F3C4 <AmiBlitz3.ab2@2052>   RTS
0001F3CA <AmiBlitz3.ab2@2055>   MOVE.w dontwrite,d0
0001F3CE <AmiBlitz3.ab2@2056>   CMP.w #1,d0
0001F3D2 <AmiBlitz3.ab2@2057>   BNE 'l3
0001F3D8 <AmiBlitz3.ab2@2058>   TST.l errorcounter
0001F3DC <AmiBlitz3.ab2@2059>   BNE 'l3
0001F3E2 <AmiBlitz3.ab2@2060>   CLR.w dontwrite
0001F3E6 <AmiBlitz3.ab2@2061>   BSR compileall                                           ;if a function is not found
0001F3EC <AmiBlitz3.ab2@2062>   ADDQ.w #1,pass
0001F42A <AmiBlitz3.ab2@2066>   !ComData_GetB{comByte_FuncOptimize,D0}  ; now its in the xtra file and can be put to GUI settings ; Wanderer
0001F42E <AmiBlitz3.ab2@2067>   BEQ 'out  ; only if func optimize is set >< 0; Wanderer
0001F434 <AmiBlitz3.ab2@2068>   LEA firstproc,a0
0001F43A <AmiBlitz3.ab2@2069>   CLR.l savefuncspace
0001F43C <AmiBlitz3.ab2@2070>   MOVE.l (a0),d0
0001F43E <AmiBlitz3.ab2@2074>     MOVE.l d0,a0
0001F442 <AmiBlitz3.ab2@2075>     BEQ 'out
0001F446 <AmiBlitz3.ab2@2076>     TST.b isfunc(a0)
0001F44A <AmiBlitz3.ab2@2077>     BNE 'nex
0001F44E <AmiBlitz3.ab2@2078>     MOVEM.l d2/a6/a0,-(a7)
0001F450 <AmiBlitz3.ab2@2080>     MOVEQ #0,d0
0001F454 <AmiBlitz3.ab2@2081>     MOVE.b $21+#funcentry_extend-1(a0),d0
0001F458 <AmiBlitz3.ab2@2082>     SUB.w #$21+#funcentry_extend,d0
0001F45C <AmiBlitz3.ab2@2083>     ADD.w #16,d0
0001F462 <AmiBlitz3.ab2@2084>     MOVE.l #$10000,d1
0001F464 <AmiBlitz3.ab2@2085>     MOVE.l d0,d2
0001F46A <AmiBlitz3.ab2@2086>     MOVEA.l _execbase,A6
0001F46E <AmiBlitz3.ab2@2087>     JSR _AllocMem(a6)         ; thilo: not 100% sure about this!
0001F470 <AmiBlitz3.ab2@2088>     MOVE.l d0,a1
0001F474 <AmiBlitz3.ab2@2089>     MOVE.l d2,4(a1)
0001F47A <AmiBlitz3.ab2@2090>     MOVE.l unusedfunc,(a1)
0001F480 <AmiBlitz3.ab2@2091>     MOVE.l d0,unusedfunc
0001F484 <AmiBlitz3.ab2@2092>     MOVEM.l (a7)+,a6/a0/d2
0001F488 <AmiBlitz3.ab2@2093>     MOVE.l isfunc+1(a0),d0
0001F48A <AmiBlitz3.ab2@2094>     ADDQ.l #6,d0
0001F490 <AmiBlitz3.ab2@2095>     ADD.l d0,savefuncspace
0001F494 <AmiBlitz3.ab2@2098>     MOVE.l d0,8(a1)
0001F498 <AmiBlitz3.ab2@2099>     LEA 12(a1),a1
0001F49A <AmiBlitz3.ab2@2100>     MOVE.l a0,-(a7)
0001F49E <AmiBlitz3.ab2@2101>     LEA $21+#funcentry_extend(a0),a0
0001F4A0 <AmiBlitz3.ab2@2104>       MOVE.b (a0)+,(a1)+
0001F4A4 <AmiBlitz3.ab2@2105>     BNE 'l1
0001F4A6 <AmiBlitz3.ab2@2106>     MOVE.l (a7)+,a0
0001F4A8 <AmiBlitz3.ab2@2109>     MOVE.l (a0),d0
0001F4AC <AmiBlitz3.ab2@2110> BRA 'lr1
0001F4B4 <AmiBlitz3.ab2@2113>   BTST #$7,make_smallestcode
0001F4B8 <AmiBlitz3.ab2@2114>   BEQ.b JL_0_3844                                           ;optimize for executable
0001F4BE <AmiBlitz3.ab2@2115>   CLR.l morememadd
0001F4C2 <AmiBlitz3.ab2@2117>   BSR.w alloxadj
0001F4C6 <AmiBlitz3.ab2@2118>   BEQ.w JL_0_388A
0001F4CA <AmiBlitz3.ab2@2121>   BSR.w compileall
0001F4D0 <AmiBlitz3.ab2@2122>   ADDQ.w #1,pass
0001F4D6 <AmiBlitz3.ab2@2124>   MOVE.w dontwrite,D1
0001F4DA <AmiBlitz3.ab2@2125>   BEQ.w JL_0_38A2
0001F4DE <AmiBlitz3.ab2@2144> BRA.w JL_0_3896
0001F4E6 <AmiBlitz3.ab2@2155>   MOVE.w #$FFFF,anyerrs
0001F4EA <AmiBlitz3.ab2@2156> BRA.w JL_0_38A2
0001F4EE <AmiBlitz3.ab2@2159>   BSR.w alloxinc                                          ;increase all by 50%
0001F4F2 <AmiBlitz3.ab2@2160>   BEQ.w Aclearallvars
0001F4F6 <AmiBlitz3.ab2@2161> BRA.w JL_0_3824
0001F4FA <AmiBlitz3.ab2@2173> BRA.w JL_0_38A6                                            ;???????
0001F500 <AmiBlitz3.ab2@2177>   JSR freereps
0001F506 <AmiBlitz3.ab2@2178>   JSR freesels
0001F50C <AmiBlitz3.ab2@2179>   JSR AJL_0_6DF2
0001F512 <AmiBlitz3.ab2@2180>   JSR freepends
0001F518 <AmiBlitz3.ab2@2181>   JSR freeifs
0001F51E <AmiBlitz3.ab2@2182>   JSR AJL_0_C188
0001F524 <AmiBlitz3.ab2@2183>   JSR AJL_0_C15C
0001F52A <AmiBlitz3.ab2@2184>   JSR AJL_0_D9BC
0001F530 <AmiBlitz3.ab2@2187> JMP cleartemplabel
0001F534 <AmiBlitz3.ab2@2190> mempool2:  Dc.l 0
0001F53A <AmiBlitz3.ab2@2194>   JSR Aclearcache
0001F542 <AmiBlitz3.ab2@2196>   BTST #$7,use_debugger
0001F546 <AmiBlitz3.ab2@2198>   BNE 'debugon
0001F54C <AmiBlitz3.ab2@2199>   CLR.w debugmode
0001F550 <AmiBlitz3.ab2@2200> BRA.b 'debugoff
0001F556 <AmiBlitz3.ab2@2203>   SNE debugmode
0001F58E <AmiBlitz3.ab2@2208>   !ComData_SetB{comByte_DebugMode,debugmode}
0001F594 <AmiBlitz3.ab2@2210>   LEA regtable,a0
0001F596 <AmiBlitz3.ab2@2211>   MOVEQ #10,d0
0001F598 <AmiBlitz3.ab2@2214>     CLR.l (a0)+
0001F59C <AmiBlitz3.ab2@2215>   DBF d0,'l1
0001F5A2 <AmiBlitz3.ab2@2217>   LEA includetemp2,a0
0001F5A4 <AmiBlitz3.ab2@2218>   CLR.b (a0)
0001F5AE <AmiBlitz3.ab2@2219>   MOVE.l #7,maxregs
0001F5B4 <AmiBlitz3.ab2@2220>   CLR.w debugnest
0001F5BA <AmiBlitz3.ab2@2221>   CLR.b funcparloop
0001F5C0 <AmiBlitz3.ab2@2222>   CLR.b nostringopt
0001F5C6 <AmiBlitz3.ab2@2223>   CLR.b firsttime
0001F5CC <AmiBlitz3.ab2@2224>   CLR.l lastdestpointer
0001F5D2 <AmiBlitz3.ab2@2225>   CLR.l lastwritedat
0001F5D8 <AmiBlitz3.ab2@2226>   CLR.l prevwritedat
0001F5DE <AmiBlitz3.ab2@2227>   CLR.l includeline
0001F5E4 <AmiBlitz3.ab2@2228>   CLR.b incnif
0001F5EA <AmiBlitz3.ab2@2229>   CLR.b formode
0001F5F0 <AmiBlitz3.ab2@2230>   CLR.b funccall
0001F5F6 <AmiBlitz3.ab2@2231>   CLR.w objectcount
0001F5FC <AmiBlitz3.ab2@2232>   CLR.b resdisable
0001F602 <AmiBlitz3.ab2@2233>   CLR.b developobject
0001F608 <AmiBlitz3.ab2@2234>   CLR.b optistring
0001F60E <AmiBlitz3.ab2@2235>   CLR.b optistring2
0001F614 <AmiBlitz3.ab2@2236>   CLR.b optiarray
0001F61A <AmiBlitz3.ab2@2237>   CLR.b quickadd
0001F620 <AmiBlitz3.ab2@2238>   CLR.w newmode
0001F626 <AmiBlitz3.ab2@2239>   CLR.w mode
0001F62C <AmiBlitz3.ab2@2240>   CLR.w string1
0001F632 <AmiBlitz3.ab2@2241>   CLR.b fastfunc
0001F638 <AmiBlitz3.ab2@2242>   CLR.w load_var_size
0001F63E <AmiBlitz3.ab2@2243>   CLR.w load_var_reg
0001F644 <AmiBlitz3.ab2@2244>   CLR.l load_var_addr
0001F64A <AmiBlitz3.ab2@2245>   CLR.w imm_size
0001F650 <AmiBlitz3.ab2@2246>   CLR.w imm_reg
0001F656 <AmiBlitz3.ab2@2247>   CLR.l imm_addr
0001F65C <AmiBlitz3.ab2@2248>   CLR.b _dcb
0001F662 <AmiBlitz3.ab2@2249>   CLR.l nohunkoffset
0001F668 <AmiBlitz3.ab2@2250>   CLR.b peekaddrsize
0001F66E <AmiBlitz3.ab2@2251>   CLR.b typecheck
0001F674 <AmiBlitz3.ab2@2252>   CLR.b declare2
0001F67A <AmiBlitz3.ab2@2253>   CLR.b declare
0001F680 <AmiBlitz3.ab2@2254>   CLR.l myoline                                          ;check
0001F686 <AmiBlitz3.ab2@2255>   CLR.l myline                                          ;check
0001F68C <AmiBlitz3.ab2@2256>   CLR.b newvariable
0001F692 <AmiBlitz3.ab2@2257>   CLR.b saved0
0001F698 <AmiBlitz3.ab2@2258>   CLR.l bsssize
0001F69E <AmiBlitz3.ab2@2259>   CLR.l chipsize
0001F6A4 <AmiBlitz3.ab2@2260>   CLR.b infunctioncode
0001F6AA <AmiBlitz3.ab2@2261>   CLR.l errorcounter
0001F6B4 <AmiBlitz3.ab2@2262>   MOVE.l #-1,bssstart
0001F6BE <AmiBlitz3.ab2@2263>   MOVE.l #-1,bssend
0001F6C8 <AmiBlitz3.ab2@2264>   MOVE.l #-1,chipstart
0001F6D2 <AmiBlitz3.ab2@2265>   MOVE.l #-1,chipend
0001F6DA <AmiBlitz3.ab2@2266>   MOVE.w #0,bssmode
0001F6E0 <AmiBlitz3.ab2@2267>   CLR.w a2offset
0001F6E6 <AmiBlitz3.ab2@2268>   CLR.w fast
0001F6EC <AmiBlitz3.ab2@2269>   CLR.w fpu
0001F6F2 <AmiBlitz3.ab2@2270>   CLR.b iee
0001F6F8 <AmiBlitz3.ab2@2271>   CLR.w newsyntax
0001F6FC <AmiBlitz3.ab2@2272>   BSR.w JL_0_38A6
0001F702 <AmiBlitz3.ab2@2273>   JSR AJL_0_7962
0001F708 <AmiBlitz3.ab2@2274>   JSR frallvars
0001F70E <AmiBlitz3.ab2@2275>   JSR fralltypes
0001F714 <AmiBlitz3.ab2@2276>   JSR freemacs
0001F71A <AmiBlitz3.ab2@2277>   JSR clearfunctionlist
0001F720 <AmiBlitz3.ab2@2278>   TST.w pass
0001F726 <AmiBlitz3.ab2@2280>   JSR clearlabels
0001F72C <AmiBlitz3.ab2@2281>   JSR clearhash
0001F732 <AmiBlitz3.ab2@2284>   LEA devo,a0
0001F736 <AmiBlitz3.ab2@2285>   MOVEM.l a0-a6/d0-d7,-(a7)
0001F73C <AmiBlitz3.ab2@2286>   LEA ptr_parameterstore,a1
0001F73E <AmiBlitz3.ab2@2289>     MOVE.b (a0)+,(a1)+
0001F742 <AmiBlitz3.ab2@2290>   BNE 'l1b
0001F744 <AmiBlitz3.ab2@2291>   MOVEQ #13,d2
0001F74A <AmiBlitz3.ab2@2292>   JSR findlabel2
0001F74E <AmiBlitz3.ab2@2293>   BNE 'd
0001F752 <AmiBlitz3.ab2@2294>   CLR.l 8(a2)
0001F756 <AmiBlitz3.ab2@2297>   MOVEM.l (a7)+,a0-a6/d0-d7
0001F780 <AmiBlitz3.ab2@2298>   !basic
0001F7F4 <AmiBlitz3.ab2@2299>   dos_Delete{dos_AddPart{my_systemdir$,"ab_compileerror.txt"}}
0001F812 <AmiBlitz3.ab2@2300>   !asm
0001F818 <AmiBlitz3.ab2@2301>   CLR.b returncode
0001F81E <AmiBlitz3.ab2@2302> JMP freeprocvs
0001F824 <AmiBlitz3.ab2@2306>   MOVE.l #bssstore-labelhash,d0
0001F826 <AmiBlitz3.ab2@2307>   ASR.l #2,d0
0001F82C <AmiBlitz3.ab2@2308>   LEA labelhash,a0
0001F82E <AmiBlitz3.ab2@2311>     CLR.l (a0)+
0001F830 <AmiBlitz3.ab2@2312>     SUBQ.l #1,d0
0001F834 <AmiBlitz3.ab2@2313>   BNE.s 'l10
0001F83A <AmiBlitz3.ab2@2315>   LEA labelbase,a1
0001F83C <AmiBlitz3.ab2@2316>   MOVE.l (a1),d0
0001F840 <AmiBlitz3.ab2@2317>   BEQ 'l11
0001F842 <AmiBlitz3.ab2@2320>     MOVE.l d0,a1
0001F846 <AmiBlitz3.ab2@2321>     TST.l 4(a1)
0001F84A <AmiBlitz3.ab2@2322>     BEQ 'l29
0001F84E <AmiBlitz3.ab2@2323>     LEA $13(a1),a0
0001F850 <AmiBlitz3.ab2@2324>     MOVEQ #0,d0
0001F852 <AmiBlitz3.ab2@2325>     MOVEQ #0,d1
0001F854 <AmiBlitz3.ab2@2328>       MOVE.b (a0)+,d1
0001F858 <AmiBlitz3.ab2@2329>       BEQ 'l12
0001F85E <AmiBlitz3.ab2@2330>       !hashalgo
0001F862 <AmiBlitz3.ab2@2331> BRA 'l13
0001F868 <AmiBlitz3.ab2@2334>     LEA labelhash,a0
0001F86E <AmiBlitz3.ab2@2335>     AND.l #hashsize,d0
0001F870 <AmiBlitz3.ab2@2336>      ASL.l #2,d0
0001F874 <AmiBlitz3.ab2@2337>     MOVE.l 0(a0,d0),d1                                     ;*4
0001F878 <AmiBlitz3.ab2@2338>     MOVE.l d1,$c(a1)
0001F87C <AmiBlitz3.ab2@2339>     MOVE.l a1,0(a0,d0)
0001F87E <AmiBlitz3.ab2@2342>     MOVE.l (a1),d0
0001F882 <AmiBlitz3.ab2@2343>   BNE 'l21
0001F884 <AmiBlitz3.ab2@2346> RTS
0001F88A <AmiBlitz3.ab2@2350>   MOVEA.l lastrestype,A0
0001F88C <AmiBlitz3.ab2@2351>   MOVEA.l (A0),A2
0001F88E <AmiBlitz3.ab2@2352>   CLR.l (A0)
0001F894 <AmiBlitz3.ab2@2353> JMP freetypes
0001F89A <AmiBlitz3.ab2@2357>   MOVEA.l varbase,A3
0001F8A0 <AmiBlitz3.ab2@2358>   CLR.l varbase
0001F8A4 <AmiBlitz3.ab2@2361>   CMPA.w #$0,A3
0001F8A8 <AmiBlitz3.ab2@2362>   BEQ.w 'l20
0001F8AA <AmiBlitz3.ab2@2363>   MOVEA.l A3,A1
0001F8AC <AmiBlitz3.ab2@2364>   MOVEA.l (A3),A3
0001F8AE <AmiBlitz3.ab2@2365>   MOVEQ.l #$00,D0
0001F8B2 <AmiBlitz3.ab2@2366>   MOVE.b $E+4(A1),D0
0001F8B8 <AmiBlitz3.ab2@2367>   MOVEA.l _execbase,A6
0001F8BE <AmiBlitz3.ab2@2368>   MOVE.l mempool2,a0
0001F8C2 <AmiBlitz3.ab2@2369>   JSR _FreePooled(A6)
0001F8C6 <AmiBlitz3.ab2@2370> BRA.w 'l10
0001F8C8 <AmiBlitz3.ab2@2373> RTS
0001F8CE <AmiBlitz3.ab2@2378>   LEA firstiff,A2
0001F8D0 <AmiBlitz3.ab2@2379>   MOVEQ.l #$0E,D2
0001F8D6 <AmiBlitz3.ab2@2380> JMP freeslist
0001F8D8 <AmiBlitz3.ab2@2386> progressbar_width:   Dc.w 100                              ;riteend org source ;right end of include strip
0001F8DA <AmiBlitz3.ab2@2387> inmacro:             Ds.w 1                                ;macmask org source ;macro found
0001F8E0 <AmiBlitz3.ab2@2391>   CLR.w inmacro
0001F8E6 <AmiBlitz3.ab2@2392>   ADDQ.l #1,globallinecount
0001F8EC <AmiBlitz3.ab2@2393>   CLR.b nostringopt
0001F8F0 <AmiBlitz3.ab2@2394>   BSR.w JL_0_3CA4
0001F8F6 <AmiBlitz3.ab2@2395>   CLR.w instringon
0001F8FC <AmiBlitz3.ab2@2398>   TST.w ininclude
0001F900 <AmiBlitz3.ab2@2399>   BEQ.w JL_0_39B0
0001F906 <AmiBlitz3.ab2@2400>   ADDQ.l #1,includeline
0001F90C <AmiBlitz3.ab2@2401>     JSR ab3_WriteDebugFile
0001F912 <AmiBlitz3.ab2@2402>   JSR AJL_0_C09E
0001F916 <AmiBlitz3.ab2@2403>   BEQ.w JL_0_39B0
0001F91C <AmiBlitz3.ab2@2404>   MOVE.w ininclude,D0
0001F920 <AmiBlitz3.ab2@2405>   CMP.w #$4,D0
0001F924 <AmiBlitz3.ab2@2406>   BCC.w JL_0_39AC
0001F926 <AmiBlitz3.ab2@2407>   ADD.w D0,D0
0001F92C <AmiBlitz3.ab2@2408>   LEA progress_per_line,A0
0001F930 <AmiBlitz3.ab2@2409>   MOVE.w $0(A0,D0.W),D2
0001F934 <AmiBlitz3.ab2@2410>   CMP.w progressbar_width(PC),D2
0001F938 <AmiBlitz3.ab2@2411>   BCC.w JL_0_39AC
0001F93C <AmiBlitz3.ab2@2412>   ADDQ.w #1,$0(A0,D0.W)
0001F93E <AmiBlitz3.ab2@2413>   LSR.w #1,D0
0001F940 <AmiBlitz3.ab2@2414>   MOVE.l d0,d1
0001F942 <AmiBlitz3.ab2@2415>   EXT.l d1
0001F944 <AmiBlitz3.ab2@2416>   MOVE.l d2,d0
0001F946 <AmiBlitz3.ab2@2417>   EXT.l d0                                                 ;d0=x,d1=y
0001F94C <AmiBlitz3.ab2@2419>   JSR update_progressbar
0001F94E <AmiBlitz3.ab2@2422>   MOVEQ.l #-$01,D0
0001F950 <AmiBlitz3.ab2@2423> RTS
0001F956 <AmiBlitz3.ab2@2427>   MOVE.l titleat,D0
0001F958 <AmiBlitz3.ab2@2428>   MOVEQ.l #$00,D1
0001F95E <AmiBlitz3.ab2@2429>   MOVE.w progress_per_line,D1
0001F960 <AmiBlitz3.ab2@2430>   ADD.l D1,D0
0001F962 <AmiBlitz3.ab2@2431>   MOVE.l D0,D1
0001F964 <AmiBlitz3.ab2@2432>   SWAP D0
0001F96A <AmiBlitz3.ab2@2433>   CMP.w titleat,D0
0001F96E <AmiBlitz3.ab2@2434>    BEQ.w JL_0_39E4
0001F970 <AmiBlitz3.ab2@2437>   EXT.l d0
0001F972 <AmiBlitz3.ab2@2438>   MOVE.l d1,-(a7)
0001F97A <AmiBlitz3.ab2@2441>   MOVE.w #1,compiler_job                                    ; set to compiler job 1 (=build executable)
0001F980 <AmiBlitz3.ab2@2442>   JSR update_progressbar
0001F988 <AmiBlitz3.ab2@2443>   MOVE.w #0,compiler_job                                    ; set to compiler job 0 (=compile source)
0001F98A <AmiBlitz3.ab2@2447>   MOVE.l (a7)+,d1
0001F990 <AmiBlitz3.ab2@2450>   MOVE.l D1,titleat
0001F996 <AmiBlitz3.ab2@2451>   ADDQ.l #1,linenumat
0001F99C <AmiBlitz3.ab2@2452>   CLR.w linedone
0001F9A2 <AmiBlitz3.ab2@2453>   JSR ab3_WriteDebugFile  ; write to DebugFile every main source line
0001F9A8 <AmiBlitz3.ab2@2455>   SUBQ.l #1,numlines2
0001F9AC <AmiBlitz3.ab2@2456>    BEQ.w JL_0_3A12
0001F9B2 <AmiBlitz3.ab2@2457>   MOVEA.l sourceline,A0
0001F9B4 <AmiBlitz3.ab2@2458>   MOVEA.l (A0),A0
0001F9BA <AmiBlitz3.ab2@2459>   MOVE.l A0,sourceline
0001F9BE <AmiBlitz3.ab2@2460>   LEA $9(A0),A5
0001F9C0 <AmiBlitz3.ab2@2463> RTS
0001F9C2 <AmiBlitz3.ab2@2467>   MOVE.w D0,-(A7)
0001F9C4 <AmiBlitz3.ab2@2468>   MOVEQ.l #$03,D0
0001F9C6 <AmiBlitz3.ab2@2471>     MOVE.w D1,D2
0001F9CA <AmiBlitz3.ab2@2472>     ANDI.w #$F,D2
0001F9CE <AmiBlitz3.ab2@2473>     ADDI.w #$30,D2
0001F9D2 <AmiBlitz3.ab2@2474>     CMP.w #$3A,D2
0001F9D6 <AmiBlitz3.ab2@2475>      BCS.w JL_0_3A2C
0001F9D8 <AmiBlitz3.ab2@2476>     ADDQ.w #7,D2
0001F9DC <AmiBlitz3.ab2@2479>     MOVE.b D2,$0(A0,D0.W)
0001F9DE <AmiBlitz3.ab2@2480>     LSR.w #4,D1
0001F9E2 <AmiBlitz3.ab2@2481>   DBF D0,JL_0_3A18
0001F9E4 <AmiBlitz3.ab2@2483>   MOVE.w (A7)+,D0
0001F9E6 <AmiBlitz3.ab2@2484> RTS
0001F9EC <AmiBlitz3.ab2@2494>   MOVE.w skipcode,D1
0001F9F0 <AmiBlitz3.ab2@2495>   BNE.w JL_0_3A46
0001F9F2 <AmiBlitz3.ab2@2496> RTS
0001F9F4 <AmiBlitz3.ab2@2499>   MOVE.l A5,-(A7)
0001F9F6 <AmiBlitz3.ab2@2500>   MOVEQ.l #$3A,D1                                          ;':'
0001F9F8 <AmiBlitz3.ab2@2501>   MOVEQ.l #$21,D2                                          ;'!'
0001F9FA <AmiBlitz3.ab2@2502>   MOVEQ.l #$3B,D3                                          ;';'
0001F9FC <AmiBlitz3.ab2@2503>   MOVEQ.l #$22,D4                                          ;'"'
0001F9FE <AmiBlitz3.ab2@2506>   MOVE.b (A5)+,D0
0001FA02 <AmiBlitz3.ab2@2507>    BEQ.w JL_0_3CA0
0001FA06 <AmiBlitz3.ab2@2508>    BPL.w JL_0_3A60
0001FA08 <AmiBlitz3.ab2@2509>   MOVE.b (A5)+,D0
0001FA0C <AmiBlitz3.ab2@2510> BRA.w JL_0_3A50
0001FA0E <AmiBlitz3.ab2@2513>   CMP.b D4,D0
0001FA12 <AmiBlitz3.ab2@2514>    BNE.w JL_0_3A82
0001FA14 <AmiBlitz3.ab2@2517>   MOVE.b (A5)+,D0
0001FA18 <AmiBlitz3.ab2@2518>    BEQ.w notqerr
0001FA1C <AmiBlitz3.ab2@2524>   CMP.b #$22,D0
0001FA20 <AmiBlitz3.ab2@2525>    BNE.w JL_0_3A66
0001FA24 <AmiBlitz3.ab2@2526> BRA.w JL_0_3A50
0001FA26 <AmiBlitz3.ab2@2529>   CMP.b D1,D0
0001FA2A <AmiBlitz3.ab2@2530>    BEQ.w JL_0_3CA0
0001FA2C <AmiBlitz3.ab2@2531>   CMP.b D3,D0
0001FA30 <AmiBlitz3.ab2@2532>    BEQ.w JL_0_3CA0
0001FA32 <AmiBlitz3.ab2@2535>   CMP.b D2,D0
0001FA36 <AmiBlitz3.ab2@2536>    BNE.w JL_0_3A50
0001FA3E <AmiBlitz3.ab2@2537>   MOVE.w #$FFFF,inmacro                                    ; no runtimecheck in macros
0001FA40 <AmiBlitz3.ab2@2538>   MOVEA.l A5,A3
0001FA46 <AmiBlitz3.ab2@2539>    JSR getparameter2
0001FA4A <AmiBlitz3.ab2@2540>    BNE.w JL_0_3AAC
0001FA50 <AmiBlitz3.ab2@2541> JMP syntaxerr
0001FA5A <AmiBlitz3.ab2@2546>    MOVE.w oldqflag,instringon
0001FA60 <AmiBlitz3.ab2@2547>   MOVEA.l lastsourcepos,A5
0001FA66 <AmiBlitz3.ab2@2548>    JSR findmac                                             ;find macro
0001FA6A <AmiBlitz3.ab2@2549>    BEQ.w JL_0_3ABE
0001FA70 <AmiBlitz3.ab2@2550> JMP nomacerr
0001FA76 <AmiBlitz3.ab2@2553>   TST.b debugmode
0001FA7A <AmiBlitz3.ab2@2554>   BEQ 'sk1
0001FA7E <AmiBlitz3.ab2@2555>   MOVE.w #$4e71,d1
0001FA84 <AmiBlitz3.ab2@2556>   JSR writeword
0001FA86 <AmiBlitz3.ab2@2557>   MOVE.l a5,-(a7)
0001FA88 <AmiBlitz3.ab2@2558>   MOVE.l a3,a5
0001FA8A <AmiBlitz3.ab2@2559>   SUBQ.l #1,a5
0001FA92 <AmiBlitz3.ab2@2560>   MOVE.w #$0,inmacro
0001FA96 <AmiBlitz3.ab2@2561>   BSR debugstuffa
0001FA9E <AmiBlitz3.ab2@2562>   MOVE.w #$FFFF,inmacro
0001FAA0 <AmiBlitz3.ab2@2563>   MOVE.l (a7)+,a5
0001FAA4 <AmiBlitz3.ab2@2564>   MOVE.w #$4e71,d1
0001FAAA <AmiBlitz3.ab2@2565>   JSR writeword
0001FAAC <AmiBlitz3.ab2@2568>   MOVEA.l A5,A4
0001FAB0 <AmiBlitz3.ab2@2571>    CMP.b #" ",(a4)+
0001FAB4 <AmiBlitz3.ab2@2572>     BEQ 'l5a
0001FAB6 <AmiBlitz3.ab2@2573>      SUBQ.l#1,a4
0001FABA <AmiBlitz3.ab2@2574>      CMP.b #",",(a4)
0001FABE <AmiBlitz3.ab2@2575>     BEQ JL_0_3AEA
0001FAC0 <AmiBlitz3.ab2@2578>   MOVEQ.l #$00,D4
0001FAC6 <AmiBlitz3.ab2@2579>   TST.b newsyntax
0001FACA <AmiBlitz3.ab2@2580>   BEQ 'l10b
0001FACE <AmiBlitz3.ab2@2581>   MOVEM.l a0/d0,-(a7)
0001FAD2 <AmiBlitz3.ab2@2582>   MOVE.l 4(a2),a0
0001FAD6 <AmiBlitz3.ab2@2583>   MOVE.w 8(a2),d0
0001FADA <AmiBlitz3.ab2@2586>   CMP.b #"`",(a0)+
0001FADE <AmiBlitz3.ab2@2587>   BEQ 'x1
0001FAE0 <AmiBlitz3.ab2@2588>   SUBQ.w #1,d0
0001FAE4 <AmiBlitz3.ab2@2589>   BNE 'x2
0001FAE8 <AmiBlitz3.ab2@2590> BRA 'x3
0001FAEC <AmiBlitz3.ab2@2593>   MOVEM.l (a7)+,a0/d0
0001FAF0 <AmiBlitz3.ab2@2594> BRA 'l10
0001FAF4 <AmiBlitz3.ab2@2597>   MOVEM.l (a7)+,a0/d0
0001FAF8 <AmiBlitz3.ab2@2598> BRA JL_0_3AEA
0001FAFC <AmiBlitz3.ab2@2601>   CMPI.b #"{",(A4)
0001FB00 <AmiBlitz3.ab2@2602>    BNE.w JL_0_3AEA
0001FB02 <AmiBlitz3.ab2@2606>   ADDQ.l #1,a4
0001FB06 <AmiBlitz3.ab2@2609>     CMP.b #" ",(a4)
0001FB0A <AmiBlitz3.ab2@2610>     BEQ 'l5
0001FB0E <AmiBlitz3.ab2@2611>     MOVEM.l a0/d0,-(a7)
0001FB14 <AmiBlitz3.ab2@2612>     CLR.b exmac
0001FB1A <AmiBlitz3.ab2@2613>     LEA chartab,a0
0001FB1C <AmiBlitz3.ab2@2614>     MOVEQ #0,d0
0001FB1E <AmiBlitz3.ab2@2615>     MOVE.b (a4),d0
0001FB22 <AmiBlitz3.ab2@2616>     BMI 'm1
0001FB26 <AmiBlitz3.ab2@2617>     TST.b 0(a0,d0)
0001FB2A <AmiBlitz3.ab2@2618>     BEQ 'm1
0001FB30 <AmiBlitz3.ab2@2619>     TST.b newsyntax
0001FB34 <AmiBlitz3.ab2@2620>     BEQ 'ns1
0001FB38 <AmiBlitz3.ab2@2621>     CMP.b #"#",d0
0001FB3C <AmiBlitz3.ab2@2622>     BEQ 'm1
0001FB40 <AmiBlitz3.ab2@2623>     CMP.b #"$",d0
0001FB44 <AmiBlitz3.ab2@2624>     BEQ 'm1
0001FB48 <AmiBlitz3.ab2@2625>     CMP.b #"-",d0
0001FB4C <AmiBlitz3.ab2@2626>     BEQ 'm1
0001FB50 <AmiBlitz3.ab2@2629>   CMP.b #",",d0
0001FB54 <AmiBlitz3.ab2@2630>     BEQ 'm1
0001FB58 <AmiBlitz3.ab2@2631>     CMP.b #"{",d0
0001FB5C <AmiBlitz3.ab2@2632>     BNE 'm1b
0001FB5E <AmiBlitz3.ab2@2633>     ADDQ.l #1,a4
0001FB62 <AmiBlitz3.ab2@2634> BRA 'm1
0001FB68 <AmiBlitz3.ab2@2637>   TST.b newsyntax
0001FB6C <AmiBlitz3.ab2@2638>     BEQ 'm1
0001FB74 <AmiBlitz3.ab2@2639>     MOVE.b #1,exmac
0001FB78 <AmiBlitz3.ab2@2642>   MOVEM.l (a7)+,a0/d0
0001FB7E <AmiBlitz3.ab2@2643>     TST.b exmac
0001FB82 <AmiBlitz3.ab2@2644>     BNE JL_0_3AEA
0001FB84 <AmiBlitz3.ab2@2651>   TST.b (a4)
0001FB88 <AmiBlitz3.ab2@2652>   BEQ JL_0_3AEA
0001FB8E <AmiBlitz3.ab2@2655>   MOVEA.l ptr_macrobuffer_begin,A0
0001FB90 <AmiBlitz3.ab2@2658>   ADDQ.w #1,D4
0001FB92 <AmiBlitz3.ab2@2659>   MOVE.l A4,(A0)
0001FB96 <AmiBlitz3.ab2@2660>   CLR.w 4(a0)
0001FB9A <AmiBlitz3.ab2@2661>    BSR.w JL_0_3CC6
0001FB9C <AmiBlitz3.ab2@2663>   ADDQ.l #4,a0
0001FB9E <AmiBlitz3.ab2@2667>   SUBQ.w #1,(a0)+
0001FBA2 <AmiBlitz3.ab2@2668>   CMP.b #$7D,D0
0001FBA6 <AmiBlitz3.ab2@2669>   BEQ 'l10
0001FBA8 <AmiBlitz3.ab2@2670>   TST.b d0
0001FBAC <AmiBlitz3.ab2@2671>   BEQ 'l10
0001FBB0 <AmiBlitz3.ab2@2672> BRA JL_0_3AD0
0001FBB6 <AmiBlitz3.ab2@2676>   CLR.l sourceline3
0001FBB8 <AmiBlitz3.ab2@2677>   MOVEA.l A4,A5
0001FBBE <AmiBlitz3.ab2@2680>   MOVE.w D4,numarg
0001FBC4 <AmiBlitz3.ab2@2687>   MOVE.l #$01,D1
0001FBCA <AmiBlitz3.ab2@2688>   MOVEA.l _execbase,A6
0001FBD0 <AmiBlitz3.ab2@2689>   MOVE.l mempool,a0
0001FBD6 <AmiBlitz3.ab2@2690>   MOVE.l macrobuffer_size,D0
0001FBDC <AmiBlitz3.ab2@2691>   CMP.l #40000,d0
0001FBE0 <AmiBlitz3.ab2@2692>   BGE 'l1m
0001FBE6 <AmiBlitz3.ab2@2693>   MOVE.l #40000,d0
0001FBEC <AmiBlitz3.ab2@2694>   MOVE.l d0,macrobuffer_size
0001FBF0 <AmiBlitz3.ab2@2697>   JSR _AllocPooled(a6)
0001FBFA <AmiBlitz3.ab2@2699>   MOVE.l myline,myoline
0001FBFC <AmiBlitz3.ab2@2702>   ADDQ.l #1,d0
0001FC02 <AmiBlitz3.ab2@2703>   MOVE.l D0,myline
0001FC04 <AmiBlitz3.ab2@2704>   MOVEA.l D0,A1
0001FC0A <AmiBlitz3.ab2@2705>   MOVE.b #":",-1(a1)
0001FC0C <AmiBlitz3.ab2@2706>   MOVEA.l A1,A6
0001FC12 <AmiBlitz3.ab2@2707>   ADDA.l macrobuffer_size,A6
0001FC14 <AmiBlitz3.ab2@2708>   MOVEA.l (A7)+,A0
0001FC16 <AmiBlitz3.ab2@2711>   CMPA.l A6,A1
0001FC1A <AmiBlitz3.ab2@2712>    BCC.w mbovererr
0001FC1C <AmiBlitz3.ab2@2713>   MOVE.b (A0)+,(a1)+
0001FC1E <AmiBlitz3.ab2@2714>   CMPA.l A3,A0
0001FC22 <AmiBlitz3.ab2@2715>    BCS.w JL_0_3B1E
0001FC24 <AmiBlitz3.ab2@2716>   SUBQ.w #1,A1
0001FC28 <AmiBlitz3.ab2@2717>   MOVE.w $8(A2),D1
0001FC2C <AmiBlitz3.ab2@2718>    BEQ.w JL_0_3C70
0001FC34 <AmiBlitz3.ab2@2719>   MOVE.w $A(A2),macnum
0001FC38 <AmiBlitz3.ab2@2720>   ADDQ.w #1,$A(A2)
0001FC3C <AmiBlitz3.ab2@2721>   MOVEA.l $4(A2),A2
0001FC3E <AmiBlitz3.ab2@2722>   SUBQ.w #1,D1
0001FC44 <AmiBlitz3.ab2@2723>   CLR.b firstmline
0001FC46 <AmiBlitz3.ab2@2726>     MOVEQ.l #$00,D0
0001FC48 <AmiBlitz3.ab2@2727>     MOVE.b (A2)+,D0
0001FC4E <AmiBlitz3.ab2@2728>     TST.b firstmline
0001FC52 <AmiBlitz3.ab2@2729>     BNE 'c1
0001FC56 <AmiBlitz3.ab2@2730>     CMP.b #$22,d0
0001FC5A <AmiBlitz3.ab2@2731>     BNE 's1
0001FC62 <AmiBlitz3.ab2@2732>     MOVE.b #1,firstmline
0001FC66 <AmiBlitz3.ab2@2735>     CMP.b #":",d0
0001FC6A <AmiBlitz3.ab2@2736>     BNE 'm1
0001FC72 <AmiBlitz3.ab2@2737>     MOVE.b #1,firstmline
0001FC76 <AmiBlitz3.ab2@2740>     CMP.b #";",d0
0001FC7A <AmiBlitz3.ab2@2741>     BNE 'c1
0001FC7C <AmiBlitz3.ab2@2744>     SUBQ.w #1,d1                                           ;filter out comment
0001FC7E <AmiBlitz3.ab2@2745>     MOVE.b (a2)+,d0
0001FC84 <AmiBlitz3.ab2@2746>     CMP.w #":@",-1(a2)
0001FC88 <AmiBlitz3.ab2@2747>     BEQ 'c2
0001FC8A <AmiBlitz3.ab2@2748>     TST.w d1
0001FC8E <AmiBlitz3.ab2@2749>     BNE 'l1
0001FC92 <AmiBlitz3.ab2@2750>   BRA JL_0_3C6C
0001FC98 <AmiBlitz3.ab2@2753>     CMP.b #":",1(a2)
0001FC9C <AmiBlitz3.ab2@2754>       BNE 'l1
0001FC9E <AmiBlitz3.ab2@2755>       ADDQ #2,a2
0001FCA0 <AmiBlitz3.ab2@2756>       SUBQ #3,d1
0001FCA2 <AmiBlitz3.ab2@2757>       MOVE.b (a2)+,d0
0001FCAA <AmiBlitz3.ab2@2758>       MOVE.b #1,firstmline
0001FCAE <AmiBlitz3.ab2@2761>     CMP.b #"`",D0
0001FCB2 <AmiBlitz3.ab2@2762>      BNE.w JL_0_3C56
0001FCB4 <AmiBlitz3.ab2@2763>     SUBQ.w #1,D1
0001FCB6 <AmiBlitz3.ab2@2764>     MOVE.b (A2)+,D0
0001FCBA <AmiBlitz3.ab2@2765>     CMP.w #$7B,D0
0001FCBE <AmiBlitz3.ab2@2766>      BEQ.w JL_0_3BB6
0001FCC2 <AmiBlitz3.ab2@2767>     CMP.w #$40,D0
0001FCC6 <AmiBlitz3.ab2@2768>      BNE.w JL_0_3B82
0001FCC8 <AmiBlitz3.ab2@2769>     MOVEQ.l #$00,D2
0001FCCE <AmiBlitz3.ab2@2770>     MOVE.w macnum,D2
0001FCD0 <AmiBlitz3.ab2@2771>     MOVEA.l A1,A0
0001FCD2 <AmiBlitz3.ab2@2772>     MOVE.w D1,-(A7)
0001FCD8 <AmiBlitz3.ab2@2773>      JSR makelong
0001FCDA <AmiBlitz3.ab2@2774>     MOVEA.l A0,A1
0001FCDC <AmiBlitz3.ab2@2775>     MOVE.w (A7)+,D1
0001FCE0 <AmiBlitz3.ab2@2776>   BRA.w JL_0_3C6C
0001FCE4 <AmiBlitz3.ab2@2779>     ORI.w #$20,D0
0001FCE8 <AmiBlitz3.ab2@2780>     CMP.w #$7A,D0
0001FCEC <AmiBlitz3.ab2@2781>      BCS.w JL_0_3B94
0001FCF2 <AmiBlitz3.ab2@2782>   JMP ilconsterr
0001FCF6 <AmiBlitz3.ab2@2785>     SUBI.w #$30,D0
0001FCFA <AmiBlitz3.ab2@2786>     CMP.w #$A,D0
0001FCFE <AmiBlitz3.ab2@2787>      BCS.w JL_0_3BF2
0001FD02 <AmiBlitz3.ab2@2788>     SUBI.w #$27,D0
0001FD06 <AmiBlitz3.ab2@2789>     CMP.w #$A,D0
0001FD0A <AmiBlitz3.ab2@2790>      BCC.w JL_0_3BB2
0001FD10 <AmiBlitz3.ab2@2791>   JMP ilconsterr
0001FD14 <AmiBlitz3.ab2@2794>   BRA.w JL_0_3BF2
0001FD16 <AmiBlitz3.ab2@2797>     MOVE.l A5,-(A7)
0001FD1A <AmiBlitz3.ab2@2798>     MOVEM.l D1/A1-A2/A6,-(A7)
0001FD1C <AmiBlitz3.ab2@2799>     MOVEA.l A2,A5
0001FD22 <AmiBlitz3.ab2@2800>      JSR AJL_0_BF6E
0001FD26 <AmiBlitz3.ab2@2801>     CMP.w #$7D,D0
0001FD2A <AmiBlitz3.ab2@2802>      BEQ.w JL_0_3BD2
0001FD30 <AmiBlitz3.ab2@2803>   JMP syntaxerr
0001FD34 <AmiBlitz3.ab2@2806>     MOVEM.l (A7)+,D1/A1-A2/A6
0001FD36 <AmiBlitz3.ab2@2807>     MOVE.l A5,D2
0001FD38 <AmiBlitz3.ab2@2808>     SUB.l A2,D2
0001FD3A <AmiBlitz3.ab2@2809>     SUB.w D2,D1
0001FD3C <AmiBlitz3.ab2@2810>     MOVEA.l A5,A2
0001FD42 <AmiBlitz3.ab2@2811>     CLR.w instringon
0001FD44 <AmiBlitz3.ab2@2812>     MOVEA.l (A7)+,A5
0001FD46 <AmiBlitz3.ab2@2813>     MOVE.l D3,D0
0001FD4A <AmiBlitz3.ab2@2814>     BPL.w JL_0_3BF2
0001FD50 <AmiBlitz3.ab2@2815>   JMP ilconsterr
0001FD52 <AmiBlitz3.ab2@2818>     SUBQ.w #1,D0
0001FD56 <AmiBlitz3.ab2@2819>      BPL.w JL_0_3C20
0001FD5C <AmiBlitz3.ab2@2823>     MOVE.w numarg,D0
0001FD60 <AmiBlitz3.ab2@2824>     DIVU #$A,D0
0001FD64 <AmiBlitz3.ab2@2825>     ADDI.w #$30,D0
0001FD66 <AmiBlitz3.ab2@2826>     CMPA.l A6,A1
0001FD6A <AmiBlitz3.ab2@2827>      BCC.w mbovererr
0001FD6C <AmiBlitz3.ab2@2828>     MOVE.b D0,(A1)+
0001FD6E <AmiBlitz3.ab2@2829>     SWAP D0
0001FD72 <AmiBlitz3.ab2@2830>     ADDI.w #$30,D0
0001FD74 <AmiBlitz3.ab2@2831>     CMPA.l A6,A1
0001FD78 <AmiBlitz3.ab2@2832>      BCC.w mbovererr
0001FD7A <AmiBlitz3.ab2@2833>     MOVE.b D0,(A1)+
0001FD7E <AmiBlitz3.ab2@2834>   BRA.w JL_0_3C6C
0001FD84 <AmiBlitz3.ab2@2840>     CMP.w numarg,D0
0001FD88 <AmiBlitz3.ab2@2841>      BCC.w JL_0_3C6C
0001FD8A <AmiBlitz3.ab2@2842>     LSL.w #1,D0
0001FD8C <AmiBlitz3.ab2@2843>     MOVE.w D0,D4
0001FD8E <AmiBlitz3.ab2@2844>     LSL.w #1,D0
0001FD90 <AmiBlitz3.ab2@2845>     ADD.w D4,D0
0001FD96 <AmiBlitz3.ab2@2846>     MOVEA.l ptr_macrobuffer_begin,A0
0001FD98 <AmiBlitz3.ab2@2847>     ADDA.w D0,A0
0001FD9C <AmiBlitz3.ab2@2848>     MOVE.w $4(A0),D4
0001FDA0 <AmiBlitz3.ab2@2849>      BEQ.w JL_0_3C6C
0001FDA2 <AmiBlitz3.ab2@2850>     MOVEA.l (A0),A0
0001FDA4 <AmiBlitz3.ab2@2851>     SUBQ.w #1,D4
0001FDA6 <AmiBlitz3.ab2@2854>       CMPA.l A6,A1
0001FDAA <AmiBlitz3.ab2@2855>        BCC.w mbovererr
0001FDAE <AmiBlitz3.ab2@2856>       CMP.w #"@@",(a0)
0001FDB2 <AmiBlitz3.ab2@2857>        BNE 'l10
0001FDB8 <AmiBlitz3.ab2@2858>       TST.w ininclude
0001FDBC <AmiBlitz3.ab2@2859>        BNE errorjoin
0001FDC2 <AmiBlitz3.ab2@2862>       MOVE.l sourceline,a0
0001FDC4 <AmiBlitz3.ab2@2863>       MOVE.l (a0),a0
0001FDCA <AmiBlitz3.ab2@2864>       CMP.l #0,a0
0001FDCE <AmiBlitz3.ab2@2865>       BNE 'l11
0001FDD0 <AmiBlitz3.ab2@2866>       MOVEQ #0,d0
0001FDD6 <AmiBlitz3.ab2@2867>       JSR error
0001FDDC <AmiBlitz3.ab2@2870>       MOVE.l a0,sourceline
0001FDE2 <AmiBlitz3.ab2@2871>       ADDQ.l #1,linenumat
0001FDE6 <AmiBlitz3.ab2@2872>       LEA 9(a0),a0
0001FDE8 <AmiBlitz3.ab2@2873>       MOVE.l a0,-(a7)
0001FDEC <AmiBlitz3.ab2@2876>       CMP.b #" ",(a0)+
0001FDF0 <AmiBlitz3.ab2@2877>        BEQ 'l110
0001FDF6 <AmiBlitz3.ab2@2878>       CMP.b #";",-1(a0)
0001FDF8 <AmiBlitz3.ab2@2879>       MOVE.l (a7)+,a0
0001FDFC <AmiBlitz3.ab2@2880>        BEQ 'l111
0001FDFE <AmiBlitz3.ab2@2881>       SUBQ.l #1,d4
0001FE00 <AmiBlitz3.ab2@2884>       MOVE.b (A0)+,(A1)+
0001FE04 <AmiBlitz3.ab2@2885>     DBF D4,JL_0_3C46
0001FE08 <AmiBlitz3.ab2@2887>   BRA.w JL_0_3C6C
0001FE0A <AmiBlitz3.ab2@2890>     CMPA.l A6,A1
0001FE0E <AmiBlitz3.ab2@2891>      BCC.w mbovererr
0001FE10 <AmiBlitz3.ab2@2892>     MOVE.b D0,(A1)+
0001FE14 <AmiBlitz3.ab2@2893>      BPL.w JL_0_3C6C
0001FE16 <AmiBlitz3.ab2@2894>     CMPA.l A6,A1
0001FE1A <AmiBlitz3.ab2@2895>      BCC.w mbovererr
0001FE1C <AmiBlitz3.ab2@2896>     MOVE.b (A2)+,(A1)+
0001FE1E <AmiBlitz3.ab2@2897>     SUBQ.w #1,D1
0001FE22 <AmiBlitz3.ab2@2900>   DBF D1,JL_0_3B48
0001FE24 <AmiBlitz3.ab2@2910>   CMPA.l A6,A1
0001FE28 <AmiBlitz3.ab2@2911>    BCC.w mbovererr
0001FE2A <AmiBlitz3.ab2@2912>   MOVE.b (A5)+,(A1)+
0001FE2E <AmiBlitz3.ab2@2913>    BNE.w JL_0_3C70
0001FE34 <AmiBlitz3.ab2@2914>   MOVEA.l myline,A5
0001FE3A <AmiBlitz3.ab2@2915>   MOVE.l myoline,D0
0001FE3E <AmiBlitz3.ab2@2916>    BEQ.w JL_0_3C9C
0001FE40 <AmiBlitz3.ab2@2917>   SUBQ.l #1,d0
0001FE42 <AmiBlitz3.ab2@2918>   MOVEA.l D0,A1
0001FE48 <AmiBlitz3.ab2@2919>   MOVE.l macrobuffer_size,D0
0001FE4E <AmiBlitz3.ab2@2920>   MOVEA.l _execbase,A6
0001FE54 <AmiBlitz3.ab2@2921>   MOVE.l mempool,a0
0001FE58 <AmiBlitz3.ab2@2922>   JSR _FreePooled(A6)
0001FE5C <AmiBlitz3.ab2@2925> BRA.w JL_0_3A46
0001FE5E <AmiBlitz3.ab2@2928>   MOVEA.l (A7)+,A5
0001FE60 <AmiBlitz3.ab2@2929> RTS
0001FE66 <AmiBlitz3.ab2@2933>   MOVE.l myline,D0
0001FE6A <AmiBlitz3.ab2@2934>   BEQ.w JL_0_3CC4
0001FE6C <AmiBlitz3.ab2@2935>   SUBQ.l #1,d0
0001FE72 <AmiBlitz3.ab2@2936>   CLR.l myline
0001FE74 <AmiBlitz3.ab2@2937>   MOVEA.l D0,A1
0001FE7A <AmiBlitz3.ab2@2938>   MOVE.l macrobuffer_size,D0
0001FE80 <AmiBlitz3.ab2@2939>   MOVEA.l _execbase,A6
0001FE86 <AmiBlitz3.ab2@2940>   MOVE.l mempool,a0
0001FE8A <AmiBlitz3.ab2@2941> JMP _FreePooled(A6)
0001FE8C <AmiBlitz3.ab2@2944> RTS
0001FE8E <AmiBlitz3.ab2@2948>   MOVEQ.l #$00,D2
0001FE92 <AmiBlitz3.ab2@2951>   ADDQ.w #1,4(a0)
0001FE94 <AmiBlitz3.ab2@2952>    MOVE.b (A4)+,D0
0001FE98 <AmiBlitz3.ab2@2954>    BEQ exit1
0001FE9C <AmiBlitz3.ab2@2955>    BPL.w JL_0_3CD8
0001FEA0 <AmiBlitz3.ab2@2956>   ADDQ.w #1,4(a0)
0001FEA2 <AmiBlitz3.ab2@2957>   ADDQ.w #1,A4
0001FEA6 <AmiBlitz3.ab2@2958> BRA.w JL_0_3CC8
0001FEAC <AmiBlitz3.ab2@2961>    TST.w instringon
0001FEB0 <AmiBlitz3.ab2@2962>    BNE 'lnom
0001FEB4 <AmiBlitz3.ab2@2963>    CMP.b #";",d0
0001FEB8 <AmiBlitz3.ab2@2964>    BEQ exit2
0001FEBC <AmiBlitz3.ab2@2965>    CMP.b #":",d0
0001FEC0 <AmiBlitz3.ab2@2966>    BEQ exit2
0001FEC4 <AmiBlitz3.ab2@2969>   CMP.b #$22,D0
0001FEC8 <AmiBlitz3.ab2@2970>    BNE.w JL_0_3CEA
0001FECE <AmiBlitz3.ab2@2971>   NOT.w instringon
0001FED2 <AmiBlitz3.ab2@2972> BRA.w JL_0_3CC8
0001FED8 <AmiBlitz3.ab2@2976>   TST.w instringon
0001FEDC <AmiBlitz3.ab2@2977>    BNE.w JL_0_3CC8
0001FEE0 <AmiBlitz3.ab2@2978>    CMP.b #"@",d0
0001FEE4 <AmiBlitz3.ab2@2979>    BNE 'l10
0001FEE8 <AmiBlitz3.ab2@2980>    CMP.b #"@",(a4)
0001FEEC <AmiBlitz3.ab2@2981>    BNE 'l10
0001FEF2 <AmiBlitz3.ab2@2982>    TST.w ininclude
0001FEF6 <AmiBlitz3.ab2@2983>    BNE errorjoin
0001FEFC <AmiBlitz3.ab2@2984>    MOVE.l sourceline3,a4
0001FF02 <AmiBlitz3.ab2@2985>    CMP.l #0,a4
0001FF06 <AmiBlitz3.ab2@2986>    BNE 'l11
0001FF0C <AmiBlitz3.ab2@2987>    MOVE.l sourceline,a4
0001FF0E <AmiBlitz3.ab2@2990>   MOVE.l (a4),a4
0001FF14 <AmiBlitz3.ab2@2991>       CMP.l #0,a4
0001FF18 <AmiBlitz3.ab2@2992>       BNE 'l12
0001FF1A <AmiBlitz3.ab2@2993>       MOVEQ #0,d0
0001FF20 <AmiBlitz3.ab2@2994>       JSR error
0001FF26 <AmiBlitz3.ab2@2997>    MOVE.l a4,sourceline3
0001FF2A <AmiBlitz3.ab2@2998>    LEA 9(a4),a4
0001FF2C <AmiBlitz3.ab2@2999>    MOVEQ #",",d0
0001FF30 <AmiBlitz3.ab2@3002>   CMP.b #$2C,D0
0001FF34 <AmiBlitz3.ab2@3003>    BNE.w JL_0_3D06
0001FF36 <AmiBlitz3.ab2@3004>   TST.w D2
0001FF3A <AmiBlitz3.ab2@3005>    BEQ.w JL_0_3D30
0001FF3E <AmiBlitz3.ab2@3006> BRA.w JL_0_3CC8
0001FF42 <AmiBlitz3.ab2@3010>    CMP.b #$7B,D0                                           ;"{"
0001FF46 <AmiBlitz3.ab2@3011>    BEQ.w 'l10
0001FF4A <AmiBlitz3.ab2@3012>   CMP.b #$28,D0                                            ;"("
0001FF4E <AmiBlitz3.ab2@3015>    BNE.w JL_0_3D14
0001FF50 <AmiBlitz3.ab2@3016>   ADDQ.w #1,D2
0001FF54 <AmiBlitz3.ab2@3017> BRA.w JL_0_3CC8
0001FF58 <AmiBlitz3.ab2@3020>   CMP.b #$7D,D0                                           ;"}"
0001FF5C <AmiBlitz3.ab2@3021>    BNE.w JL_0_3D22
0001FF5E <AmiBlitz3.ab2@3022>  TST.w D2
0001FF62 <AmiBlitz3.ab2@3023>    BEQ.w JL_0_3D30
0001FF66 <AmiBlitz3.ab2@3027>    CMP.b #$7D,D0                                           ;"}"
0001FF6A <AmiBlitz3.ab2@3028>    BEQ.w 'l10
0001FF6E <AmiBlitz3.ab2@3029>   CMP.b #$29,D0                                            ;")"
0001FF72 <AmiBlitz3.ab2@3032>    BNE.w JL_0_3CC8
0001FF74 <AmiBlitz3.ab2@3033>   SUBQ.w #1,D2
0001FF78 <AmiBlitz3.ab2@3034> BRA.w JL_0_3CC8
0001FF7A <AmiBlitz3.ab2@3037> RTS
0001FF7C <AmiBlitz3.ab2@3041>       SUBQ.l #1,a4
0001FF82 <AmiBlitz3.ab2@3042>       CLR.l sourceline3
0001FF84 <AmiBlitz3.ab2@3043> RTS
0001FF86 <AmiBlitz3.ab2@3047>       MOVEQ #0,d0
0001FF88 <AmiBlitz3.ab2@3048>       SUBQ.l #1,a4
0001FF8E <AmiBlitz3.ab2@3049>       CLR.l sourceline3
0001FF90 <AmiBlitz3.ab2@3050> RTS
0001FF94 <AmiBlitz3.ab2@3054>   CMP.b #$7B,D0                                            ;"{"
0001FF98 <AmiBlitz3.ab2@3055>   BEQ.w JL_0_3D3E
0001FF9C <AmiBlitz3.ab2@3056>   CMP.b #$28,D0                                            ;"("
0001FF9E <AmiBlitz3.ab2@3059> RTS
0001FFA2 <AmiBlitz3.ab2@3063>   CMP.b #$7D,D0                                            ;"}"
0001FFA6 <AmiBlitz3.ab2@3064>   BEQ.w JL_0_3D4C
0001FFAA <AmiBlitz3.ab2@3065>   CMP.b #$29,D0                                            ;")"
0001FFAC <AmiBlitz3.ab2@3068> RTS
0001FFAE <AmiBlitz3.ab2@3072> stopit:     Ds.w 1
0001FFB0 <AmiBlitz3.ab2@3073> clrreq:     Ds.w 1
0001FFB4 <AmiBlitz3.ab2@3094>   MOVE.w clrreq(PC),D0
0001FFB8 <AmiBlitz3.ab2@3095>    BEQ.w close_compilewin__skip
0001FFEA <AmiBlitz3.ab2@3097> 
0001FFF0 <AmiBlitz3.ab2@3099>   LEA clrreq,a0
0001FFF2 <AmiBlitz3.ab2@3100>   NOT.w (a0)                                               ;reass
0001FFF8 <AmiBlitz3.ab2@3101>   MOVEA.l ptr_ThisTask,A0
0001FFFC <AmiBlitz3.ab2@3102>   CLR.l $1E(A0)
00020000 <AmiBlitz3.ab2@3103>   CLR.l $2A(A0)
00020002 <AmiBlitz3.ab2@3106> RTS
00020004 <AmiBlitz3.ab2@3109> intsused:  Ds.w 1
0002000C <AmiBlitz3.ab2@3113>   MOVE.w #-1,blitzoff
00020012 <AmiBlitz3.ab2@3114>   CLR.w intsused
00020018 <AmiBlitz3.ab2@3115>   CLR.w anyerrs
0002001E <AmiBlitz3.ab2@3116>   CLR.w blitzmode
00020024 <AmiBlitz3.ab2@3117>   CLR.w dontwrite                                              ;nomemleft
0002002A <AmiBlitz3.ab2@3118>   CLR.w constmode
00020030 <AmiBlitz3.ab2@3119>   CLR.w cmake
00020036 <AmiBlitz3.ab2@3120>   CLR.w cfetchmode
0002003C <AmiBlitz3.ab2@3121>   CLR.l intdata1
00020042 <AmiBlitz3.ab2@3122>   CLR.w fuckpos
00020048 <AmiBlitz3.ab2@3123>   CLR.w procnum
0002004E <AmiBlitz3.ab2@3124>   CLR.w procnum2
00020054 <AmiBlitz3.ab2@3125>   CLR.w dfetch
0002005A <AmiBlitz3.ab2@3126>   CLR.l titleat
00020060 <AmiBlitz3.ab2@3127>   CLR.b usedpath
00020066 <AmiBlitz3.ab2@3128>   CLR.b path2
0002006C <AmiBlitz3.ab2@3129>   CLR.w inerr
00020072 <AmiBlitz3.ab2@3130>   CLR.w intlevel
00020078 <AmiBlitz3.ab2@3131>   CLR.l cont_pc
0002007E <AmiBlitz3.ab2@3132>   CLR.l cont_pc2
00020084 <AmiBlitz3.ab2@3133>   CLR.l lastcontlink
0002008E <AmiBlitz3.ab2@3134>   MOVE.l destbufferstart,destpointer
00020098 <AmiBlitz3.ab2@3135>   MOVE.l destbufferstart,bigpc
000200A2 <AmiBlitz3.ab2@3136>   MOVE.l destbufferend,libend
000200AC <AmiBlitz3.ab2@3137>   MOVE.l data1start,data1
000200B6 <AmiBlitz3.ab2@3138>   MOVE.l data2at,data2
000200BE <AmiBlitz3.ab2@3139>   MOVE.w #-1,skipcode                                      ;#-1,comflag org source
000200C6 <AmiBlitz3.ab2@3140>   MOVE.w #-1,linemode                                      ;#-1,linemode org soruce
000200CC <AmiBlitz3.ab2@3141>   CLR.w oldvcodelen
000200D2 <AmiBlitz3.ab2@3142>   CLR.b lastgloballabel                                    ;lastbiglab org source
000200D4 <AmiBlitz3.ab2@3143> RTS
000200D6 <AmiBlitz3.ab2@3146> debugmode:  Ds.w 1                                         ;debugga org source ;debugger enabled?
000200DC <AmiBlitz3.ab2@3150>   LEA  clrreq,a1
000200E0 <AmiBlitz3.ab2@3151>   MOVE.w #2000,(a1)
0002010A <AmiBlitz3.ab2@3152>   !basic
00020120 <AmiBlitz3.ab2@3153> 
00020170 <AmiBlitz3.ab2@3154>   comstatusstr   = !TRANS{"Initializing Compiler..."} ;default settings
00020178 <AmiBlitz3.ab2@3155>   calcpro.l      = 0
00020180 <AmiBlitz3.ab2@3156>   calcpro_old.l  = 0
0002018C <AmiBlitz3.ab2@3157>   typ_old.l      = -1
00020198 <AmiBlitz3.ab2@3158>   pass_old.l     = -1
0002019E <AmiBlitz3.ab2@3159>   update_comstatus_gui.b = True ; for the first
000201D8 <AmiBlitz3.ab2@3161>   GetD0 &comstatusstr : !ComData_SetL{comPtr_CompileStatusString,d0}  ; set pointer of status string for gui tomsmart1 2012 05 12
00020212 <AmiBlitz3.ab2@3162>   GetD0 &calcpro      : !ComData_SetL{comPtr_CompileCalcProLong ,d0}  ; set pointer of calcpro long for gui tomsmart1 2012 05 12
00020230 <AmiBlitz3.ab2@3163>   !asm
00020262 <AmiBlitz3.ab2@3164> 
00020268 <AmiBlitz3.ab2@3166>   CLR.w stopit
0002026A <AmiBlitz3.ab2@3167> RTS
00020270 <AmiBlitz3.ab2@3171>   CLR.w storedebugmode
00020276 <AmiBlitz3.ab2@3172>   CLR.b iserror
0002027A <AmiBlitz3.ab2@3173>   BSR.w compilerequester
00020284 <AmiBlitz3.ab2@3175>   MOVE.l #0,globallinecount
0002028A <AmiBlitz3.ab2@3176>   JSR check_of_same_source
0002028E <AmiBlitz3.ab2@3177>   BSR.w call_setpointerbusy
00020292 <AmiBlitz3.ab2@3178>   BSR.w setcvars
0002029A <AmiBlitz3.ab2@3179>   MOVE.w #$8000,globalvarpointer
000202A4 <AmiBlitz3.ab2@3180>   MOVE.l #newtype_quick,defaulttype
000202AA <AmiBlitz3.ab2@3181>   MOVE.l A7,passstack
000202B4 <AmiBlitz3.ab2@3182>   MOVE.l #firstitem_,sourceline
000202BE <AmiBlitz3.ab2@3183>   MOVE.w numlines_org,linesleft
000202C8 <AmiBlitz3.ab2@3184>   MOVE.l numlines,numlines2
000202CE <AmiBlitz3.ab2@3185>   ADDQ.w #1,linesleft
000202D4 <AmiBlitz3.ab2@3186>   ADDQ.l #1,numlines2
000202DE <AmiBlitz3.ab2@3187>   MOVE.l #-1,linenumat
000202E2 <AmiBlitz3.ab2@3188>   BSR.w resetlibs
000202E6 <AmiBlitz3.ab2@3189>   BSR.w Aclearallvars
000202EC <AmiBlitz3.ab2@3190>   LEA progress_per_line+2,A0
000202EE <AmiBlitz3.ab2@3191>   MOVEQ.l #$03,D0
000202F0 <AmiBlitz3.ab2@3194>     CLR.w (A0)+
000202F4 <AmiBlitz3.ab2@3195>   DBF D0,JL_0_40EC
000202FA <AmiBlitz3.ab2@3198>   LEA _include,a0
000202FE <AmiBlitz3.ab2@3199>   MOVEM.l a0-a6/d0-d7,-(a7)
00020304 <AmiBlitz3.ab2@3200>   LEA ptr_parameterstore,a1
00020306 <AmiBlitz3.ab2@3203>     MOVE.b (a0)+,(a1)+
0002030A <AmiBlitz3.ab2@3204>   BNE 'l1b
0002030C <AmiBlitz3.ab2@3206>   MOVEQ #9,d2
00020312 <AmiBlitz3.ab2@3207>   JSR findlabel2
00020316 <AmiBlitz3.ab2@3208>   BNE 'd
0002031E <AmiBlitz3.ab2@3209>   MOVE.l #0,8(a2)
00020322 <AmiBlitz3.ab2@3210>   MOVEM.l (a7)+,a0-a6/d0-d7
00020326 <AmiBlitz3.ab2@3211> BRA 'd2
0002032C <AmiBlitz3.ab2@3214>   JSR addlabelhash
00020334 <AmiBlitz3.ab2@3215>   MOVE.l #$1,$4(A2)
0002033C <AmiBlitz3.ab2@3216>   MOVE.l #0,8(a2)
00020340 <AmiBlitz3.ab2@3217>   MOVEM.l (a7)+,a0-a6/d0-d7
00020346 <AmiBlitz3.ab2@3220>   LEA _debug,a0
0002034A <AmiBlitz3.ab2@3221>   MOVEM.l a0-a6/d0-d7,-(a7)
00020350 <AmiBlitz3.ab2@3222>   LEA ptr_parameterstore,a1
00020352 <AmiBlitz3.ab2@3225>     MOVE.b (a0)+,(a1)+
00020356 <AmiBlitz3.ab2@3226>   BNE 'l9b
00020358 <AmiBlitz3.ab2@3228>   MOVEQ #7,d2
0002035E <AmiBlitz3.ab2@3229>   JSR findlabel2
00020362 <AmiBlitz3.ab2@3230>   BNE 'd9
00020366 <AmiBlitz3.ab2@3231>   MOVE.b debugmode(PC),D0
00020368 <AmiBlitz3.ab2@3232>   EXT.w d0
0002036A <AmiBlitz3.ab2@3233>   EXT.l d0
0002036E <AmiBlitz3.ab2@3234>   MOVE.l d0,8(a2)
00020372 <AmiBlitz3.ab2@3235>   MOVEM.l (a7)+,a0-a6/d0-d7
00020376 <AmiBlitz3.ab2@3236> BRA 'd9b
0002037C <AmiBlitz3.ab2@3239>   JSR addlabelhash
00020384 <AmiBlitz3.ab2@3240>   MOVE.l #$1,$4(A2)
00020388 <AmiBlitz3.ab2@3241>   MOVE.b debugmode(PC),D0
0002038A <AmiBlitz3.ab2@3242>   EXT.w d0
0002038C <AmiBlitz3.ab2@3243>   EXT.l d0
00020390 <AmiBlitz3.ab2@3244>   MOVE.l d0,8(a2)
00020394 <AmiBlitz3.ab2@3245>   MOVEM.l (a7)+,a0-a6/d0-d7
0002039A <AmiBlitz3.ab2@3248>   MOVE.l #firstitem_,a0
0002039C <AmiBlitz3.ab2@3249>   MOVE.l (a0),a0
000203A0 <AmiBlitz3.ab2@3250>   LEA 9(a0),a0
000203A8 <AmiBlitz3.ab2@3251>   MOVE.w #0,exdebug
000203AE <AmiBlitz3.ab2@3252>   TST.b debugmode
000203B2 <AmiBlitz3.ab2@3253>    BEQ 'l10
000203B4 <AmiBlitz3.ab2@3256>   MOVE.b (a0)+,d0
000203B8 <AmiBlitz3.ab2@3257>    BEQ 'l10
000203BC <AmiBlitz3.ab2@3258>   CMP.b #$20,d0
000203C0 <AmiBlitz3.ab2@3259>    BEQ 'l2
000203C2 <AmiBlitz3.ab2@3260>   SUBQ.l #1,a0
000203C8 <AmiBlitz3.ab2@3261>   CMP.l #"DEBU",(a0)
000203CC <AmiBlitz3.ab2@3262>    BNE 'l10
000203D2 <AmiBlitz3.ab2@3263>   CMP.b #"G",4(a0)
000203D6 <AmiBlitz3.ab2@3264>    BNE 'l10
000203DE <AmiBlitz3.ab2@3265>   MOVE.w #$0,debugversion
000203E6 <AmiBlitz3.ab2@3266>   MOVE.b #1,exdebug
000203EC <AmiBlitz3.ab2@3269>   LEA nops4,A0
000203F2 <AmiBlitz3.ab2@3270>   LEA dataget,A1
000203F8 <AmiBlitz3.ab2@3271>   JSR pokecode2                                            ;write intro nops
000203FE <AmiBlitz3.ab2@3272>   MOVE.l #$01010101,d1
00020404 <AmiBlitz3.ab2@3273>   JSR writedatalong                                        ;for the 4 tempregs
0002040A <AmiBlitz3.ab2@3274>   JSR writedatalong
00020410 <AmiBlitz3.ab2@3275>   JSR writedatalong
00020416 <AmiBlitz3.ab2@3276>   JSR writedatalong
0002041C <AmiBlitz3.ab2@3277>   TST.b saved0
00020420 <AmiBlitz3.ab2@3278>    BEQ 'l1
00020426 <AmiBlitz3.ab2@3279>   MOVE.l #$4e714e71,d1
0002042C <AmiBlitz3.ab2@3280>   JSR writelong                                            ;add 2 nops
00020432 <AmiBlitz3.ab2@3281>   MOVE.l #$4e714e71,d1
00020438 <AmiBlitz3.ab2@3282>   JSR writelong                                            ;add 2 nops
0002043E <AmiBlitz3.ab2@3283>   MOVE.l #$4e714e71,d1
00020444 <AmiBlitz3.ab2@3284>   JSR writelong                                            ;add 2 nops
0002044A <AmiBlitz3.ab2@3285>    MOVE.l #$4e714e71,d1
00020450 <AmiBlitz3.ab2@3286>   JSR writelong                                            ;add 2 nops
00020454 <AmiBlitz3.ab2@3289>   MOVE.b debugmode(PC),D1
00020458 <AmiBlitz3.ab2@3290>    BEQ.b JL_0_4132
00020462 <AmiBlitz3.ab2@3291>   MOVE.b debugmode,storedebugmode
00020466 <AmiBlitz3.ab2@3292>   MOVE.w #$FFDC,D1
0002046A <AmiBlitz3.ab2@3293>    BSR.w uselib
00020470 <AmiBlitz3.ab2@3294>   TST.w debugversion                                       ;make a version for debugger
00020474 <AmiBlitz3.ab2@3295>    BNE.b JL_0_412A
00020478 <AmiBlitz3.ab2@3299>   MOVE.w #$FA3C,D1
0002047C <AmiBlitz3.ab2@3300>    BSR.w uselib
00020480 <AmiBlitz3.ab2@3301>   MOVE.w #$0001,D1
00020484 <AmiBlitz3.ab2@3302>    BSR.w uselib
00020488 <AmiBlitz3.ab2@3303> BRA.b JL_0_4132
0002048C <AmiBlitz3.ab2@3306>   MOVE.w #$FA32,D1
00020490 <AmiBlitz3.ab2@3307>   BSR.w uselib
00020494 <AmiBlitz3.ab2@3310>   BSR.w nextline
0002049A <AmiBlitz3.ab2@3311>   CLR.l linenum
000204A0 <AmiBlitz3.ab2@3312>   CLR.l stacktrack
000204A6 <AmiBlitz3.ab2@3315>   ADDQ.l #1,linenum
000204B0 <AmiBlitz3.ab2@3316>   MOVE.l destpointer,destpointer2
000204B6 <AmiBlitz3.ab2@3317>   MOVE.l a5,sourceline2
000204BA <AmiBlitz3.ab2@3318>   BSR.w compile_line                                        ;compile pass
000204BE <AmiBlitz3.ab2@3321>   BSR.w nextline
000204C2 <AmiBlitz3.ab2@3322>    BNE.w JL_0_4136
000204C6 <AmiBlitz3.ab2@3323>   BSR.w JUMP_do_runerrson
000204CA <AmiBlitz3.ab2@3324>   BSR.w pointchk
000204D0 <AmiBlitz3.ab2@3325>   TST.b objectcount
000204D4 <AmiBlitz3.ab2@3326>    BNE macenderr
000204DA <AmiBlitz3.ab2@3327>   CLR.l linenumat
000204DE <AmiBlitz3.ab2@3328>   BSR.w errchx2
000204E8 <AmiBlitz3.ab2@3329>   CMP.l #-1,bssend
000204EC <AmiBlitz3.ab2@3330>    BNE 'l30
000204F6 <AmiBlitz3.ab2@3331>   MOVE.l destpointer,bssend                                ;compile end
000204FC <AmiBlitz3.ab2@3334>   MOVE.l destpointer,d0
00020506 <AmiBlitz3.ab2@3335>   CMP.l #-1,bssstart
0002050A <AmiBlitz3.ab2@3336>   BNE 'lnf6
00020514 <AmiBlitz3.ab2@3337>   CMP.l #-1,chipstart
00020518 <AmiBlitz3.ab2@3338>   BNE 'lnf6
0002051C <AmiBlitz3.ab2@3339> BRA 'leven4
00020522 <AmiBlitz3.ab2@3342>   MOVE.l destpointer,d1
00020524 <AmiBlitz3.ab2@3343>   ADDQ.l #3,d1
0002052A <AmiBlitz3.ab2@3344>   AND.l #$fffffffc,d1                                      ;bug ?
00020530 <AmiBlitz3.ab2@3345>   MOVE.l d1,destpointer
0002053A <AmiBlitz3.ab2@3348>   MOVE.l destpointer,codeend
00020544 <AmiBlitz3.ab2@3349>   CMP.l #-1,chipend
00020548 <AmiBlitz3.ab2@3350>   BNE 'l31
00020552 <AmiBlitz3.ab2@3351>   MOVE.l destpointer,chipend
00020558 <AmiBlitz3.ab2@3354>   MOVE.l destpointer,d1
0002055A <AmiBlitz3.ab2@3355>   ADDQ.l #1,d1
00020560 <AmiBlitz3.ab2@3356>   AND.l #$fffffffe,d1                                     ;new evenexit
00020566 <AmiBlitz3.ab2@3357>   MOVE.l d1,destpointer
0002056A <AmiBlitz3.ab2@3358>   MOVE.b debugmode(PC),D1
0002056E <AmiBlitz3.ab2@3359>    BEQ.b JL_0_4180
00020572 <AmiBlitz3.ab2@3360>    BSR.w debugstuff
00020576 <AmiBlitz3.ab2@3361>   MOVE.w #$C300,D1
0002057C <AmiBlitz3.ab2@3362>    JSR Atokejsr
00020580 <AmiBlitz3.ab2@3363>    BSR.w debugstuff
00020584 <AmiBlitz3.ab2@3364>   MOVE.l eopcode(PC),D1
0002058A <AmiBlitz3.ab2@3365>    JSR writelong
0002058E <AmiBlitz3.ab2@3366>   MOVE.l lastcontlink(PC),D1
00020592 <AmiBlitz3.ab2@3367>    BEQ.b JL_0_4180
00020594 <AmiBlitz3.ab2@3368>   MOVEA.l D1,A0
00020598 <AmiBlitz3.ab2@3369>   CLR.w $6(A0)
000205A2 <AmiBlitz3.ab2@3375>   MOVE.l destpointer,endop                                ;where end goes...
000205A8 <AmiBlitz3.ab2@3377>   TST.w blitzmode
000205AC <AmiBlitz3.ab2@3378>   BEQ.w JL_0_4198
000205B0 <AmiBlitz3.ab2@3379>   BSR.w do_AMIGA                                          ;back to amiga if in blitz!
000205B6 <AmiBlitz3.ab2@3382>   TST.w intsused
000205BA <AmiBlitz3.ab2@3383>   BEQ.b JL_0_41AA
000205BE <AmiBlitz3.ab2@3384>   MOVE.w #$C105,D1                                        ;interupts off!
000205C4 <AmiBlitz3.ab2@3385>   JSR tokejsr2
000205C8 <AmiBlitz3.ab2@3388>   BSR.w calcstatic
000205CE <AmiBlitz3.ab2@3389>   MOVE.w D4,numstatic
000205D4 <AmiBlitz3.ab2@3390>   MOVE.l D3,staticdata
000205D8 <AmiBlitz3.ab2@3391>    BSR.w calcmaxs
000205DE <AmiBlitz3.ab2@3393>   TST.l tokeslist
000205E2 <AmiBlitz3.ab2@3394>    BEQ.b JL_0_41F8
000205E8 <AmiBlitz3.ab2@3395>   MOVE.w gotocode,D1                                       ;jmp!
000205EE <AmiBlitz3.ab2@3396>    JSR writeword
000205F8 <AmiBlitz3.ab2@3397>   MOVE.l destpointer,endjmpat
000205FC <AmiBlitz3.ab2@3398>    BSR.w addoff
00020602 <AmiBlitz3.ab2@3399>    JSR writelong                                           
00020606 <AmiBlitz3.ab2@3401>    BSR.w JL_0_6C76                                         ;has to be done before finits!
0002060C <AmiBlitz3.ab2@3405>   TST.w dontwrite
00020610 <AmiBlitz3.ab2@3406>    BNE.b JL_0_41F8
00020614 <AmiBlitz3.ab2@3407>   MOVEA.l endjmpat(PC),A4
0002061A <AmiBlitz3.ab2@3408>   MOVE.l destpointer,(A4)
00020620 <AmiBlitz3.ab2@3411>   TST.b returncode
00020624 <AmiBlitz3.ab2@3412>   BEQ 'l2
00020628 <AmiBlitz3.ab2@3413>   MOVE.w #$2e80,d1
0002062E <AmiBlitz3.ab2@3414>   JSR writeword
00020634 <AmiBlitz3.ab2@3417>   JSR JL_0_B98A
0002063A <AmiBlitz3.ab2@3418>   TST.b returncode
0002063E <AmiBlitz3.ab2@3419>   BEQ 'l3
00020642 <AmiBlitz3.ab2@3420>   MOVE.w #$4e75,d1
00020648 <AmiBlitz3.ab2@3421>   JSR writeword
0002064C <AmiBlitz3.ab2@3422> BRA 'l1
00020652 <AmiBlitz3.ab2@3425>   MOVE.l #$70004E75,D1
00020658 <AmiBlitz3.ab2@3426>   JSR writelong                                            ;write moveq #0,d0:rts
0002065E <AmiBlitz3.ab2@3429>   JSR JL_0_B73E
00020662 <AmiBlitz3.ab2@3430>   BSR.w asmfixer
00020666 <AmiBlitz3.ab2@3431>   BSR.w close_compilewin
0002066A <AmiBlitz3.ab2@3432> BRA.w call_setpointernormal
00020670 <AmiBlitz3.ab2@3436> JMP do_runerrson
00020672 <AmiBlitz3.ab2@3440> eopcode:    Dc.b $70,$03                                   ;MOVEQ #$03,D0
00020674 <AmiBlitz3.ab2@3441>             Dc.b $4E,$40                                   ;TRAP  #00
00020678 <AmiBlitz3.ab2@3443> endjmpat:   Ds.l 1
0002067E <AmiBlitz3.ab2@3447>   MOVEA.l newtype_string,A2
00020684 <AmiBlitz3.ab2@3448>   MOVE.l #MaxByte,D0                                       ;move.l #$ff,d0 org source
00020688 <AmiBlitz3.ab2@3451>     CMPA.w #$0,A2
0002068C <AmiBlitz3.ab2@3452>      BEQ.w pointchk_done
00020690 <AmiBlitz3.ab2@3453>     CMP.l $4(A2),D0
00020694 <AmiBlitz3.ab2@3454>      BNE.w pointchk_next
0002069C <AmiBlitz3.ab2@3455>     MOVE.w $8(A2),linenumat+2                              ;type not found  ;move 8(a2),linenumat org source
000206A0 <AmiBlitz3.ab2@3456> BRA.w notypeerr
000206A2 <AmiBlitz3.ab2@3459>     MOVEA.l (A2),A2
000206A6 <AmiBlitz3.ab2@3460> BRA.w pointchk_loop
000206A8 <AmiBlitz3.ab2@3463> RTS
000206AE <AmiBlitz3.ab2@3467>   LEA labelbase,A2
000206B0 <AmiBlitz3.ab2@3471>   MOVE.l (A2),D0                                           ;testlabels
000206B4 <AmiBlitz3.ab2@3472>    BEQ.w errchx2_done
000206B6 <AmiBlitz3.ab2@3473>   MOVEA.l D0,A2
000206BA <AmiBlitz3.ab2@3474>   MOVE.l $4(A2),D0
000206BE <AmiBlitz3.ab2@3475>   BTST #$0,D0
000206C2 <AmiBlitz3.ab2@3476>    BNE.w errchx2_loop
000206C6 <AmiBlitz3.ab2@3477>   MOVE.l $8(A2),D0
000206CA <AmiBlitz3.ab2@3478>    BNE.w errchx2_loop
000206D2 <AmiBlitz3.ab2@3479>   MOVE.w $10(A2),linenumat+2
000206D4 <AmiBlitz3.ab2@3480>   MOVEQ #0,d0
000206D8 <AmiBlitz3.ab2@3481>   MOVE.b $12(a2),d0
000206E0 <AmiBlitz3.ab2@3482>   MOVE.w 0(a2,d0),linenumat
000206E6 <AmiBlitz3.ab2@3483> JMP nolaberr                                               ;label not found
000206EC <AmiBlitz3.ab2@3486>   MOVE.l concomsp,D0
000206F2 <AmiBlitz3.ab2@3487>   CMP.l #concomstack,D0
000206F6 <AmiBlitz3.ab2@3488>    BNE.w chxerr4
000206FC <AmiBlitz3.ab2@3489>   MOVE.w connest,D1
00020700 <AmiBlitz3.ab2@3490>    BNE.w chxerr4
00020702 <AmiBlitz3.ab2@3493>   MOVE.l D1,-(A7)
00020708 <AmiBlitz3.ab2@3494>   MOVE.l firstsel,D1
0002070C <AmiBlitz3.ab2@3495>    BNE.w errchx_err1
00020712 <AmiBlitz3.ab2@3496>   MOVE.l firstrep,D1
00020716 <AmiBlitz3.ab2@3497>    BNE.w errchx_err2
0002071C <AmiBlitz3.ab2@3498>   MOVE.w intstring,D1
00020720 <AmiBlitz3.ab2@3499>    BNE.w errchx_err3
00020724 <AmiBlitz3.ab2@3500>   MOVE.l 4(a7),d1
0002072A <AmiBlitz3.ab2@3501>   MOVE.w proceduremode,D1
0002072E <AmiBlitz3.ab2@3502>    BNE.w errchx_err6
00020734 <AmiBlitz3.ab2@3503>   MOVE.l firstiff,d1
00020738 <AmiBlitz3.ab2@3504>    BNE errchx_err5
0002073E <AmiBlitz3.ab2@3505>   MOVE.l firstfor,D1
00020742 <AmiBlitz3.ab2@3506>    BNE.w errchx_err7
00020744 <AmiBlitz3.ab2@3507>   MOVE.l (A7)+,D1
00020746 <AmiBlitz3.ab2@3508> RTS
00020750 <AmiBlitz3.ab2@3512>   MOVE.l sellineat,linenumat
00020756 <AmiBlitz3.ab2@3513> JMP selerrz
00020760 <AmiBlitz3.ab2@3516>   MOVE.l replineat,linenumat
00020766 <AmiBlitz3.ab2@3517> JMP unterr3
00020770 <AmiBlitz3.ab2@3520>   MOVE.l intlineat,linenumat
00020776 <AmiBlitz3.ab2@3521> JMP interr2
00020780 <AmiBlitz3.ab2@3524>   MOVE.l iflineat,linenumat
00020786 <AmiBlitz3.ab2@3525> JMP noenderr
00020790 <AmiBlitz3.ab2@3528>   MOVE.l prolineat,linenumat
00020796 <AmiBlitz3.ab2@3529> JMP nopenderr
000207A0 <AmiBlitz3.ab2@3532>   MOVE.l forlineat,linenumat
000207A6 <AmiBlitz3.ab2@3533> JMP nonexterr
000207B0 <AmiBlitz3.ab2@3536>   MOVE.l ciflineat,linenumat
000207B6 <AmiBlitz3.ab2@3537> JMP nocenderr
000207C0 <AmiBlitz3.ab2@3541>   MOVE.l data1,maxsat
000207C2 <AmiBlitz3.ab2@3542>   MOVEQ.l #$00,D4
000207C8 <AmiBlitz3.ab2@3543>   MOVEA.l libpointer,A2
000207CC <AmiBlitz3.ab2@3546>     CMPA.w #$0,A2
000207D0 <AmiBlitz3.ab2@3547>      BEQ.w calcmaxs_done
000207D4 <AmiBlitz3.ab2@3548>     TST.w $C(A2)
000207D8 <AmiBlitz3.ab2@3549>      BPL.w calcmaxs_next
000207DC <AmiBlitz3.ab2@3550>     MOVE.l $12(A2),D0
000207E0 <AmiBlitz3.ab2@3551>     TST.w -$2(A2,D0.L)
000207E4 <AmiBlitz3.ab2@3552>      BEQ.w calcmaxs_next
000207E6 <AmiBlitz3.ab2@3553>     ADDQ.w #1,D4
000207EA <AmiBlitz3.ab2@3554>     MOVE.w -$6(A2,D0.L),D1
000207EE <AmiBlitz3.ab2@3555>     BSR.w pokedata1
000207F0 <AmiBlitz3.ab2@3556>     MOVEQ.l #$01,D1
000207F4 <AmiBlitz3.ab2@3557>     MOVE.w -$2(A2,D0.L),D2
000207F6 <AmiBlitz3.ab2@3558>     LSL.w D2,D1
000207FA <AmiBlitz3.ab2@3559>     MULU -$4(A2,D0.L),D1                                   ;write objectspacesize
000207FE <AmiBlitz3.ab2@3560>     BSR.w writedatalong
00020800 <AmiBlitz3.ab2@3563>     MOVEA.l (A2),A2
00020804 <AmiBlitz3.ab2@3564> BRA.w calcmaxs_loop
0002080A <AmiBlitz3.ab2@3567>   MOVE.w D4,maxsused
0002080E <AmiBlitz3.ab2@3568>    BEQ.w calcmaxs_done2
00020812 <AmiBlitz3.ab2@3569>   MOVE.w #$FFFA,D1                                         ;;use memlib
00020816 <AmiBlitz3.ab2@3570> BRA.w uselib
00020818 <AmiBlitz3.ab2@3573> RTS
0002081E <AmiBlitz3.ab2@3577>    MOVE.l a7,stackaddr
00020822 <AmiBlitz3.ab2@3578>    BSR.w compile_term
00020826 <AmiBlitz3.ab2@3579>    BSR.w reget
0002082A <AmiBlitz3.ab2@3580>    BNE.w illeolerr
00020830 <AmiBlitz3.ab2@3581>    TST.w dontwrite
00020834 <AmiBlitz3.ab2@3582>    BNE 'l1
0002083A <AmiBlitz3.ab2@3583>    TST.l stacktrack
0002083E <AmiBlitz3.ab2@3584>    BNE errormsg_stack
00020842 <AmiBlitz3.ab2@3587>    CMP.w #-$7FDE,D0
00020846 <AmiBlitz3.ab2@3588>    BNE.w compile_line_notelse
0002084C <AmiBlitz3.ab2@3589>    JSR do_else2
00020850 <AmiBlitz3.ab2@3590> BRA.w compile_line
00020852 <AmiBlitz3.ab2@3593>   TST.w D0
00020856 <AmiBlitz3.ab2@3594>   BNE.w compile_line
0002085C <AmiBlitz3.ab2@3599>   MOVE.l firstiff,D0
00020860 <AmiBlitz3.ab2@3600>    BEQ.w compile_line_done
00020862 <AmiBlitz3.ab2@3601>   MOVEA.l D0,A0
00020866 <AmiBlitz3.ab2@3602>   MOVE.w $C(A0),D1
0002086A <AmiBlitz3.ab2@3603>    BPL.w compile_line_done
0002086E <AmiBlitz3.ab2@3607>   BCLR #$F,D1
00020874 <AmiBlitz3.ab2@3608>    JSR AJL_0_D7B8
0002087A <AmiBlitz3.ab2@3609>    JSR AJL_0_D81C
0002087E <AmiBlitz3.ab2@3610> BRA.w compile_line_unthen
00020880 <AmiBlitz3.ab2@3613> RTS
00020886 <AmiBlitz3.ab2@3617>   LEA lastgloballabel,A0
00020888 <AmiBlitz3.ab2@3618>   TST.b (A0)
0002088C <AmiBlitz3.ab2@3619>   BEQ.w nolocerr
00020892 <AmiBlitz3.ab2@3620>   LEA ptr_parameterstore,A1
00020894 <AmiBlitz3.ab2@3621>   MOVEQ.l #$00,D2
00020896 <AmiBlitz3.ab2@3624>   ADDQ.w #1,D2
00020898 <AmiBlitz3.ab2@3625>   MOVE.b (A0)+,(A1)+
0002089C <AmiBlitz3.ab2@3626>    BNE.w createlab_loop
000208A2 <AmiBlitz3.ab2@3627>   MOVE.b #$27,-$1(A1)
000208A4 <AmiBlitz3.ab2@3628>   MOVE.w D2,-(A7)
000208AA <AmiBlitz3.ab2@3629>    JSR makename4
000208AC <AmiBlitz3.ab2@3630>   CMP.w (A7)+,D2
000208B0 <AmiBlitz3.ab2@3631>    BEQ.w syntaxerr
000208B2 <AmiBlitz3.ab2@3632>    TST.w d0
000208B6 <AmiBlitz3.ab2@3633>    BPL createlab_done
000208BE <AmiBlitz3.ab2@3634>    MOVE.w #$3a,lastchar
000208C0 <AmiBlitz3.ab2@3635>    SUBQ.l #2,a5
000208C2 <AmiBlitz3.ab2@3638> RTS
000208CC <AmiBlitz3.ab2@3642>   MOVE.l #forthstack,forthsp
000208D6 <AmiBlitz3.ab2@3643>   MOVE.l #precstack,precsp
000208D8 <AmiBlitz3.ab2@3644> RTS
000208DA <AmiBlitz3.ab2@3651>   MOVEQ.l #$00,D4
00020904 <AmiBlitz3.ab2@3654>   !basic
00020946 <AmiBlitz3.ab2@3655> 
00020956 <AmiBlitz3.ab2@3657>   If (c_abort = 1)           ; check if set
00020958 <AmiBlitz3.ab2@3658>     MOVEQ.l #-$01,d4
0002095E <AmiBlitz3.ab2@3659>     MOVE.w D4,stopit
0002097C <AmiBlitz3.ab2@3660>     !asm
00020980 <AmiBlitz3.ab2@3661>     BRA chkrealstop__skip
0002099E <AmiBlitz3.ab2@3663>   !asm
000209A0 <AmiBlitz3.ab2@3664>   MOVEQ.l #$00,D6
000209A2 <AmiBlitz3.ab2@3665>   MOVEQ.l #$00,D7                                          ; clr Z-Flag for beq.b in chkstop_chk
000209A4 <AmiBlitz3.ab2@3669> RTS
000209A8 <AmiBlitz3.ab2@3673>   MOVE.w stopit(PC),D0
000209AC <AmiBlitz3.ab2@3674>   BEQ chkstop__chk
000209B2 <AmiBlitz3.ab2@3675>   SUBQ.w #1,stopit
000209B4 <AmiBlitz3.ab2@3679> RTS
000209BC <AmiBlitz3.ab2@3682>   MOVE.w #2000,stopit
000209C0 <AmiBlitz3.ab2@3683>   BSR.w chkrealstop
000209C4 <AmiBlitz3.ab2@3684>   BEQ.b chkstop__rts
000209C8 <AmiBlitz3.ab2@3686>   BSR.w close_compilewin
000209CC <AmiBlitz3.ab2@3687>   BSR.w call_setpointernormal
000209D2 <AmiBlitz3.ab2@3689>   MOVEA.l errstack,A7
000209D8 <AmiBlitz3.ab2@3690>   MOVEA.l errcont,A0
000209E0 <AmiBlitz3.ab2@3691>   MOVE.w #-1,anyerrs
000209E2 <AmiBlitz3.ab2@3692> JMP (A0)
000209E6 <AmiBlitz3.ab2@3695> d_pc:           Ds.l 1
000209EA <AmiBlitz3.ab2@3696> d_bigpc:        Ds.l 1
000209EC <AmiBlitz3.ab2@3697> d_nomemleft:    Ds.w 1
000209F0 <AmiBlitz3.ab2@3698> cont_pc:        Ds.l 1
000209F4 <AmiBlitz3.ab2@3699> cont_pc2:       Ds.l 1
000209F8 <AmiBlitz3.ab2@3700> lastcontlink:   Ds.l 1
000209FC <AmiBlitz3.ab2@3704>   ORI.w #$4E40,D1
00020A00 <AmiBlitz3.ab2@3705> BRA.w JUMP_writeword
00020A06 <AmiBlitz3.ab2@3709>   TST.b debugmode
00020A0A <AmiBlitz3.ab2@3710>   BEQ.w debugstuff__rts
00020A10 <AmiBlitz3.ab2@3717>   TST.w dirmode                                            ;or while in direct mode...
00020A14 <AmiBlitz3.ab2@3718>    BNE debugstuff__rts
00020A1E <AmiBlitz3.ab2@3719>   MOVE.l destpointer,d_pc
00020A28 <AmiBlitz3.ab2@3720>   MOVE.l bigpc,d_bigpc
00020A32 <AmiBlitz3.ab2@3721>   MOVE.w dontwrite,d_nomemleft
00020A36 <AmiBlitz3.ab2@3722>   MOVEM.l D0-D1,-(A7)
00020A38 <AmiBlitz3.ab2@3723>   MOVEQ.l #$01,D1
00020A3C <AmiBlitz3.ab2@3724>    BSR.w writetrap                                         ;write the adress to sourceline
00020A42 <AmiBlitz3.ab2@3728>    MOVE.l destpointer,D0
00020A48 <AmiBlitz3.ab2@3729>   MOVE.l cont_pc,D1
00020A4E <AmiBlitz3.ab2@3730>   MOVE.l D0,cont_pc
00020A54 <AmiBlitz3.ab2@3731>   MOVE.l D1,cont_pc2
00020A58 <AmiBlitz3.ab2@3732>    BEQ.b debugstuff__skip
00020A5E <AmiBlitz3.ab2@3733>   TST.w dontwrite
00020A62 <AmiBlitz3.ab2@3734>    BNE.b debugstuff__skip
00020A64 <AmiBlitz3.ab2@3735>   MOVEA.l D1,A4
00020A66 <AmiBlitz3.ab2@3736>   SUB.l A4,D0
00020A6A <AmiBlitz3.ab2@3737>   MOVE.w D0,$6(A4)
00020A70 <AmiBlitz3.ab2@3738>   MOVE.l A4,lastcontlink
00020A76 <AmiBlitz3.ab2@3741>   TST.w ininclude
00020A7C <AmiBlitz3.ab2@3743>   TST.w makeexec
00020A80 <AmiBlitz3.ab2@3744>   BEQ 'l1
00020A86 <AmiBlitz3.ab2@3745>   TST.w exdebug
00020A8A <AmiBlitz3.ab2@3746>   BEQ 'noinc
00020A8E <AmiBlitz3.ab2@3749>   MOVEM.l a0-a1/d2/d3,-(a7)                                ;write source for includes
00020A94 <AmiBlitz3.ab2@3750>   MOVE.l data1,d1
00020A9A <AmiBlitz3.ab2@3751>   TST.b firsttime
00020A9E <AmiBlitz3.ab2@3752>   BNE 'nofirst
00020AA6 <AmiBlitz3.ab2@3753>   MOVE.b #1,firsttime
00020AAC <AmiBlitz3.ab2@3754>   MOVE.l #"DuCk",d1                                        ; to found from debugger the code start
00020AB2 <AmiBlitz3.ab2@3755>   JSR writedatalong
00020AB8 <AmiBlitz3.ab2@3756>   MOVE.l #"AmiB",d1
00020ABE <AmiBlitz3.ab2@3757>   JSR writedatalong
00020AC4 <AmiBlitz3.ab2@3758>   MOVE.l destbufferstart,d1
00020ACA <AmiBlitz3.ab2@3759>   JSR writedatalong
00020AD0 <AmiBlitz3.ab2@3760>   TST.w dontwrite
00020AD4 <AmiBlitz3.ab2@3761>   BNE 'nohunk
00020ADA <AmiBlitz3.ab2@3762>   MOVE.l data1,d1
00020ADC <AmiBlitz3.ab2@3763>   SUBQ.l #4,d1
00020AE2 <AmiBlitz3.ab2@3764>   SUB.l destbufferstart,d1
00020AE4 <AmiBlitz3.ab2@3765>   MOVE.l d1,d2
00020AEA <AmiBlitz3.ab2@3766>   JSR addhunkoffset
00020AF0 <AmiBlitz3.ab2@3769>   MOVE.l destpointer,d2
00020AF6 <AmiBlitz3.ab2@3770>   MOVE.l data1,d1
00020AFC <AmiBlitz3.ab2@3773>   MOVE.l destpointer,d2
00020AFE <AmiBlitz3.ab2@3774>   MOVE.l d1,d3
00020B04 <AmiBlitz3.ab2@3775>   SUB.l destbufferstart,d1
00020B0A <AmiBlitz3.ab2@3776>   OR.l #$80000000,d1
00020B10 <AmiBlitz3.ab2@3777>   JSR writelong
00020B16 <AmiBlitz3.ab2@3778>   TST.w inmacro
00020B1A <AmiBlitz3.ab2@3779>   BEQ 'sc1
00020B20 <AmiBlitz3.ab2@3780>   MOVE.l myline,a0
00020B24 <AmiBlitz3.ab2@3782> BRA 'inc2
00020B2A <AmiBlitz3.ab2@3784>  'sc1  TST.w ininclude
00020B2E <AmiBlitz3.ab2@3785>   BEQ 'inc
00020B34 <AmiBlitz3.ab2@3786>   MOVE.l includesourceline,a0
00020B38 <AmiBlitz3.ab2@3787> BRA 'inc2
00020B3E <AmiBlitz3.ab2@3790>   MOVE.l sourceline,a0
00020B42 <AmiBlitz3.ab2@3791>   LEA 9(a0),a0
00020B44 <AmiBlitz3.ab2@3794>   MOVE.l d1,d2
00020B46 <AmiBlitz3.ab2@3795>   MOVE.l A5,D1
00020B48 <AmiBlitz3.ab2@3796>   SUB.l a0,D1
00020B4E <AmiBlitz3.ab2@3797>   ADD.l #9,d1
00020B52 <AmiBlitz3.ab2@3798>   BSR.w JUMP_writeword
00020B58 <AmiBlitz3.ab2@3799>   CMP.l #9,d1
00020B5C <AmiBlitz3.ab2@3800>   BEQ 'pos1
00020B62 <AmiBlitz3.ab2@3801>   TST.w dontwrite
00020B66 <AmiBlitz3.ab2@3802>   BNE 'nopad
00020B6C <AmiBlitz3.ab2@3803>   MOVE.l lastsourceline,d1
00020B70 <AmiBlitz3.ab2@3804>   MOVE.l d1,-6(a4)
00020B74 <AmiBlitz3.ab2@3805> BRA 'nopad
00020B7A <AmiBlitz3.ab2@3808>   MOVE.l d2,lastsourceline
00020B84 <AmiBlitz3.ab2@3809>    MOVE.l destpointer,lastdestpointer
00020B86 <AmiBlitz3.ab2@3810>    MOVEQ #0,d1
00020B8C <AmiBlitz3.ab2@3811>   MOVE.l data1,d2
00020B92 <AmiBlitz3.ab2@3812>   SUB.l destbufferstart,d2
00020B98 <AmiBlitz3.ab2@3813>   JSR writedatalong
00020B9E <AmiBlitz3.ab2@3814>   TST.w dontwrite
00020BA2 <AmiBlitz3.ab2@3815>   BNE 'no2
00020BA8 <AmiBlitz3.ab2@3816>   JSR addhunkoffset
00020BAE <AmiBlitz3.ab2@3819>   MOVE.l data1,d2
00020BB4 <AmiBlitz3.ab2@3820>   SUB.l destbufferstart,d2
00020BBA <AmiBlitz3.ab2@3821>   JSR writedatalong
00020BC0 <AmiBlitz3.ab2@3822>   TST.w dontwrite
00020BC4 <AmiBlitz3.ab2@3823>   BNE 'no
00020BCA <AmiBlitz3.ab2@3824>   JSR addhunkoffset
00020BD0 <AmiBlitz3.ab2@3825>   MOVE.l lastwritedat,a1
00020BD6 <AmiBlitz3.ab2@3826>   CMP.l #0,a1
00020BDA <AmiBlitz3.ab2@3827>   BEQ 'no
00020BDC <AmiBlitz3.ab2@3828>   MOVE.l d3,(a1)
00020BE4 <AmiBlitz3.ab2@3829>   MOVE.l prevwritedat,4(a1)
00020BEE <AmiBlitz3.ab2@3830>   MOVE.l lastwritedat,prevwritedat
00020BF4 <AmiBlitz3.ab2@3833>   MOVE.l d3,lastwritedat
00020BF6 <AmiBlitz3.ab2@3834>   MOVEQ #4,d1
00020BFA <AmiBlitz3.ab2@3835>   BSR pokedata1b
00020BFC <AmiBlitz3.ab2@3838>   MOVE.b (a0)+,d1
00020C00 <AmiBlitz3.ab2@3839>   BEQ 'done
00020C04 <AmiBlitz3.ab2@3840>   BSR pokedata1b
00020C08 <AmiBlitz3.ab2@3841> BRA 'loop
00020C0A <AmiBlitz3.ab2@3844>   MOVEQ #0,d1
00020C0E <AmiBlitz3.ab2@3845>   BSR pokedata1b
00020C14 <AmiBlitz3.ab2@3846>   MOVE.l data1,d1
00020C18 <AmiBlitz3.ab2@3847>   BTST #0,d1
00020C1C <AmiBlitz3.ab2@3848>   BEQ 'nopad
00020C1E <AmiBlitz3.ab2@3849>   MOVEQ #0,d1
00020C22 <AmiBlitz3.ab2@3850>   BSR pokedata1b
00020C26 <AmiBlitz3.ab2@3853>   MOVEM.l (a7)+,a0-a1/d2/d3
00020C2A <AmiBlitz3.ab2@3854> BRA 'noinc2
00020C30 <AmiBlitz3.ab2@3857>   MOVE.l sourceline,D1
00020C36 <AmiBlitz3.ab2@3859>   JSR writelong
00020C38 <AmiBlitz3.ab2@3860>   MOVE.l A5,D1
00020C3E <AmiBlitz3.ab2@3861>   SUB.l sourceline,D1
00020C44 <AmiBlitz3.ab2@3863>   JSR writeword
00020C46 <AmiBlitz3.ab2@3866>   MOVEQ.l #$00,D1
00020C4C <AmiBlitz3.ab2@3867>   JSR writeword                                            ; was: BSR.w writeword
00020C50 <AmiBlitz3.ab2@3868>   MOVEM.l (A7)+,D0-D1
00020C52 <AmiBlitz3.ab2@3871> RTS
00020C58 <AmiBlitz3.ab2@3875>   TST.b debugmode                                          ;extern debug
00020C5C <AmiBlitz3.ab2@3876>    BEQ.b undodebug__rts
00020C62 <AmiBlitz3.ab2@3877>   TST.b dirmode
00020C66 <AmiBlitz3.ab2@3878>   BNE undodebug__rts
00020C70 <AmiBlitz3.ab2@3883>   MOVE.w d_nomemleft,dontwrite
00020C7A <AmiBlitz3.ab2@3884>   MOVE.l d_bigpc,bigpc
00020C84 <AmiBlitz3.ab2@3885>   MOVE.l d_pc,destpointer
00020C8E <AmiBlitz3.ab2@3886>   MOVE.l cont_pc2,cont_pc
00020C90 <AmiBlitz3.ab2@3889> RTS
00020C9A <AmiBlitz3.ab2@3893>   MOVE.l #forthstack,forthsp
00020CA4 <AmiBlitz3.ab2@3894>   MOVE.l #precstack,precsp
00020CAA <AmiBlitz3.ab2@3895>   CLR.w regnum
00020CB0 <AmiBlitz3.ab2@3896>   CLR.w nonew
00020CB6 <AmiBlitz3.ab2@3897>   CLR.w sbasegot
00020CC0 <AmiBlitz3.ab2@3898>   MOVE.w varcodelen,oldvcodelen
00020CC6 <AmiBlitz3.ab2@3899>   CLR.w varcodelen
00020CCE <AmiBlitz3.ab2@3900>   MOVE.w #-1,lasta6
00020CD0 <AmiBlitz3.ab2@3901> RTS
00020CD6 <AmiBlitz3.ab2@3905>   TST.w linemode
00020CDA <AmiBlitz3.ab2@3906>   BMI.b smode__skip
00020CDE <AmiBlitz3.ab2@3907>   BSR.w undodebug
00020CE4 <AmiBlitz3.ab2@3908>   MOVE.w linemode,D1
00020CE6 <AmiBlitz3.ab2@3909>   ADDQ.w #4,A7
00020CE8 <AmiBlitz3.ab2@3910>   LSL.w #2,D1
00020CEE <AmiBlitz3.ab2@3911>   LEA modetable,A0
00020CF2 <AmiBlitz3.ab2@3912>   MOVEA.l $0(A0,D1.W),A0
00020CF6 <AmiBlitz3.ab2@3913>   BSR.w reget
00020CF8 <AmiBlitz3.ab2@3916> JMP (A0)                                                   ;jumptokenroutine
00020CFA <AmiBlitz3.ab2@3919> RTS
00020D02 <AmiBlitz3.ab2@3924>   MOVE.w #0,leaa0a0+2
00020D08 <AmiBlitz3.ab2@3925>   CLR.b nowdeclare
00020D0E <AmiBlitz3.ab2@3926>   CLR.b notypecheck
00020D14 <AmiBlitz3.ab2@3927>   CLR.l lasttoken
00020D1A <AmiBlitz3.ab2@3928>   CLR.b doimmediate
00020D20 <AmiBlitz3.ab2@3929>   CLR.w vartype
00020D26 <AmiBlitz3.ab2@3930>   CLR.w regnumfunc
00020D2C <AmiBlitz3.ab2@3931>   CLR.b optistring
00020D32 <AmiBlitz3.ab2@3932>   CLR.b iniffcommand
00020D38 <AmiBlitz3.ab2@3933>   CLR.w instringon  ; new
00020D3E <AmiBlitz3.ab2@3934>   CLR.b funccall
00020D44 <AmiBlitz3.ab2@3935>   CLR.l currentfunccall
00020D4A <AmiBlitz3.ab2@3936>   CLR.l leftsidetype
00020D50 <AmiBlitz3.ab2@3937>   CLR.l rightsidetype
00020D56 <AmiBlitz3.ab2@3938>   CLR.b peekaddrsize
00020D5C <AmiBlitz3.ab2@3939>   CLR.b blitzparloop
00020D62 <AmiBlitz3.ab2@3940>   CLR.b funcparloop
00020D68 <AmiBlitz3.ab2@3941>   TST.b debugmode
00020D6C <AmiBlitz3.ab2@3942>    BEQ 'fpu
00020D76 <AmiBlitz3.ab2@3948>   MOVE.b fpu,iee
00020D7A <AmiBlitz3.ab2@3949>   MOVE.w stopit(PC),D0
00020D7E <AmiBlitz3.ab2@3950>   BNE chkstop_chkb
00020D82 <AmiBlitz3.ab2@3951>   BSR.w chkstop                                          ; message here
00020D88 <AmiBlitz3.ab2@3954>   SUBQ.w #1,stopit
00020D8C <AmiBlitz3.ab2@3957>   BSR.w findmacro                                          ;macro
00020D92 <AmiBlitz3.ab2@4011>   TST.b debugmode
00020D96 <AmiBlitz3.ab2@4012>    BEQ.s 'l10
00020D9C <AmiBlitz3.ab2@4013>   TST.b exdebug
00020DA0 <AmiBlitz3.ab2@4014>   BEQ 'l10a
00020DA2 <AmiBlitz3.ab2@4015>   MOVE.w (a5),d0
00020DA6 <AmiBlitz3.ab2@4016>   CMP.w #$8025,d0
00020DAA <AmiBlitz3.ab2@4017>    BEQ 'l10
00020DAE <AmiBlitz3.ab2@4020>   BSR.w debugstuffa                                         ;insert runtimecode debugcode
00020DB2 <AmiBlitz3.ab2@4024>   BSR.w get1bytemain                                       ;gettokenmain
00020DB6 <AmiBlitz3.ab2@4025>    BEQ.w undodebug
00020DBA <AmiBlitz3.ab2@4026>   CMP.w #$002b,d0                                            ;check for + cast sign
00020DBE <AmiBlitz3.ab2@4027>     BNE 'lb2
00020DC2 <AmiBlitz3.ab2@4028>     BSR.w get1bytemain
00020DCA <AmiBlitz3.ab2@4029>     MOVE.b #1,notypecheck
00020DD4 <AmiBlitz3.ab2@4037>   MOVE.l #forthstack,forthsp
00020DDE <AmiBlitz3.ab2@4038>   MOVE.l #precstack,precsp
00020DE4 <AmiBlitz3.ab2@4039>   CLR.w regnum
00020DEA <AmiBlitz3.ab2@4040>   CLR.w nonew
00020DF0 <AmiBlitz3.ab2@4041>   CLR.w sbasegot
00020DFA <AmiBlitz3.ab2@4042>   MOVE.w varcodelen,oldvcodelen
00020E00 <AmiBlitz3.ab2@4044>   CLR.w varcodelen
00020E08 <AmiBlitz3.ab2@4045>   MOVE.w #$FFFF,lasta6
00020E0C <AmiBlitz3.ab2@4047>   BSR.w smode
00020E0E <AmiBlitz3.ab2@4048>   TST.w D0
00020E12 <AmiBlitz3.ab2@4049>   BMI.w get_tokencode
00020E16 <AmiBlitz3.ab2@4050>   CMP.w #$2E,D0
00020E1A <AmiBlitz3.ab2@4051>    BEQ.w JL_0_4644                                         ;shortlist
00020E1E <AmiBlitz3.ab2@4052>   CMP.w #"#",D0
00020E22 <AmiBlitz3.ab2@4053>    BEQ.w JL_0_4718                                         ;constant found
00020E26 <AmiBlitz3.ab2@4054>   CMP.w #$27,D0
00020E2A <AmiBlitz3.ab2@4055>    BEQ.w JL_0_4638                                         ;local label
00020E30 <AmiBlitz3.ab2@4056>   MOVE.l A5,letstart
00020E36 <AmiBlitz3.ab2@4057>   JSR getparameter
00020E3A <AmiBlitz3.ab2@4058>   BSR.w reget
00020E3E <AmiBlitz3.ab2@4059>    BEQ.w JL_0_4658                                         ;label found
00020E42 <AmiBlitz3.ab2@4060>   CMP.w #$7B,D0
00020E46 <AmiBlitz3.ab2@4061>    BEQ.w JL_0_475C
00020E48 <AmiBlitz3.ab2@4062>   TST.w d0
00020E4C <AmiBlitz3.ab2@4063>    BPL 'll1
00020E52 <AmiBlitz3.ab2@4064>   TST.b newsyntax
00020E56 <AmiBlitz3.ab2@4065>    BEQ 'll1
00020E5C <AmiBlitz3.ab2@4066>   LEA allowtab,a0
00020E5E <AmiBlitz3.ab2@4067>   MOVEQ #0,d1
00020E60 <AmiBlitz3.ab2@4068>   MOVE.b d0,d1
00020E64 <AmiBlitz3.ab2@4069>   TST.b 0(a0,d1.w)
00020E68 <AmiBlitz3.ab2@4070>    BNE 'll1
00020E6A <AmiBlitz3.ab2@4071>   SUBQ.l #2,a5
00020E72 <AmiBlitz3.ab2@4072>   MOVE.w #":",lastchar                                     ;no doublepoint
00020E76 <AmiBlitz3.ab2@4073> BRA JL_0_4658
00020E7E <AmiBlitz3.ab2@4076>   CMP.l #"equ ",-1(a5)
00020E82 <AmiBlitz3.ab2@4077>    BEQ 'll4
00020E8A <AmiBlitz3.ab2@4078>   CMP.l #"EQU ",-1(a5)
00020E8E <AmiBlitz3.ab2@4079>    BNE 'll2
00020E90 <AmiBlitz3.ab2@4082>   ADDQ.l #2,a5
00020E94 <AmiBlitz3.ab2@4083>   BSR.w findlabel2
00020E98 <AmiBlitz3.ab2@4084>   BEQ.w 'lf1
00020E9C <AmiBlitz3.ab2@4085>   BSR.w addlabelhash
00020EA4 <AmiBlitz3.ab2@4086>   MOVE.l #$1,$4(A2)
00020EAC <AmiBlitz3.ab2@4089>   CMPI.l #$1,$4(A2)
00020EB0 <AmiBlitz3.ab2@4090>    BNE.w illconerr
00020EB4 <AmiBlitz3.ab2@4091>   BSR get1bytemain
00020EB6 <AmiBlitz3.ab2@4092>   MOVE.l A2,-(A7)
00020EB8 <AmiBlitz3.ab2@4103>   SUBQ.l #1,a5
00020EBA <AmiBlitz3.ab2@4106>   SUBQ.l #1,a5
00020EC0 <AmiBlitz3.ab2@4107>   JSR AJL_0_BF6E
00020EC2 <AmiBlitz3.ab2@4108>   MOVEA.l (A7)+,A2
00020EC6 <AmiBlitz3.ab2@4109>   MOVE.l D3,$8(A2)
00020EC8 <AmiBlitz3.ab2@4110>   RTS
00020ECC <AmiBlitz3.ab2@4111>   BSR get1bytemain
00020ED4 <AmiBlitz3.ab2@4114>   CMP.l #"SET ",-1(a5)
00020ED8 <AmiBlitz3.ab2@4115>   BNE 'll3
00020EDC <AmiBlitz3.ab2@4116> BRA 'll4
00020EE2 <AmiBlitz3.ab2@4119> JMP AJL_0_DEA6
00020EE6 <AmiBlitz3.ab2@4122>   CMP.w #-$7FDE,D0
00020EEA <AmiBlitz3.ab2@4123>   BEQ.w get_tokencode
00020EEE <AmiBlitz3.ab2@4124> BRA.w undodebug
00020EF2 <AmiBlitz3.ab2@4127>   BSR.w undodebug
00020EF6 <AmiBlitz3.ab2@4128>   BSR.w createlab
00020EFA <AmiBlitz3.ab2@4129> BRA.w JL_0_466E
00020EFE <AmiBlitz3.ab2@4132>   BSR.w get1bytemain
00020F02 <AmiBlitz3.ab2@4133>    BEQ.w JL_0_462C
00020F06 <AmiBlitz3.ab2@4134>   CMP.w #"'",D0
00020F0A <AmiBlitz3.ab2@4135>    BEQ.w JL_0_4638
00020F0E <AmiBlitz3.ab2@4136>    BSR.w makename2
00020F10 <AmiBlitz3.ab2@4137>    TST.w d0
00020F14 <AmiBlitz3.ab2@4138>    BPL 'll1
00020F16 <AmiBlitz3.ab2@4139>    SUBQ.l #2,a5
00020F1E <AmiBlitz3.ab2@4140>    MOVE.w #":",lastchar
00020F22 <AmiBlitz3.ab2@4141> BRA JL_0_4658                                              ;????
00020F26 <AmiBlitz3.ab2@4145>   BSR.w undodebug
00020F2C <AmiBlitz3.ab2@4146>   LEA ptr_parameterstore,A0
00020F32 <AmiBlitz3.ab2@4147>   LEA lastgloballabel,A1
00020F34 <AmiBlitz3.ab2@4150>   MOVE.b (A0)+,(A1)+
00020F38 <AmiBlitz3.ab2@4151>    BNE.w JL_0_4668
00020F3C <AmiBlitz3.ab2@4154>   BSR.w findlabel2
00020F40 <AmiBlitz3.ab2@4155>    BEQ.w JL_0_4698
00020F44 <AmiBlitz3.ab2@4156>    BSR.w addlabelhash
00020F48 <AmiBlitz3.ab2@4159>   CLR.l $4(A2)
00020F50 <AmiBlitz3.ab2@4160>   MOVE.l destpointer,$8(A2)
00020F58 <AmiBlitz3.ab2@4163>   MOVE.w procnum,$10(A2)
00020F5A <AmiBlitz3.ab2@4164> RTS
00020F5E <AmiBlitz3.ab2@4168>   MOVE.l $4(A2),D0
00020F62 <AmiBlitz3.ab2@4169>   BTST #$0,D0
00020F66 <AmiBlitz3.ab2@4170>    BNE.w illlaberr
00020F6C <AmiBlitz3.ab2@4171>   TST.w pass
00020F70 <AmiBlitz3.ab2@4173>   MOVE.l $8(A2),D0
00020F74 <AmiBlitz3.ab2@4174>    BNE.w duplaberr
00020F7C <AmiBlitz3.ab2@4175>   MOVE.w procnum,$10(A2)
00020F80 <AmiBlitz3.ab2@4176>   MOVEA.l $4(A2),A3
00020F86 <AmiBlitz3.ab2@4177>   MOVEA.l _execbase,A6
00020F8A <AmiBlitz3.ab2@4180>   CMPA.w #$0,A3
00020F8E <AmiBlitz3.ab2@4181>    BEQ.w JL_0_467A
00020F92 <AmiBlitz3.ab2@4182>     MOVE.l $4(A2),D1
00020F96 <AmiBlitz3.ab2@4183>     BTST #$0,D1
00020F9A <AmiBlitz3.ab2@4184>     BNE.w illlaberr
00020F9E <AmiBlitz3.ab2@4185>   MOVE.w $8(A3),D1
00020FA2 <AmiBlitz3.ab2@4186>   CMP.w $10(A2),D1
00020FA6 <AmiBlitz3.ab2@4187>    BEQ.w JL_0_46DC
00020FAC <AmiBlitz3.ab2@4188>    TST.b newsyntax
00020FB0 <AmiBlitz3.ab2@4189>    BEQ 'l1
00020FB4 <AmiBlitz3.ab2@4190> BRA.w JL_0_46DC                                            ;label context out of range fix
00020FBC <AmiBlitz3.ab2@4195>   MOVE.w $A(A3),linenumat+2                                ;move 10(a3),linenumat org source
00020FC0 <AmiBlitz3.ab2@4196> BRA.w referr
00020FC6 <AmiBlitz3.ab2@4199>   MOVE.w dontwrite,D1
00020FCA <AmiBlitz3.ab2@4200>    BNE.w JL_0_4706
00020FCE <AmiBlitz3.ab2@4201>   MOVEA.l $4(A3),A1
00020FD4 <AmiBlitz3.ab2@4202>   BTST #$0,$7(A3)
00020FD8 <AmiBlitz3.ab2@4203>    BEQ.w JL_0_4700
00020FDA <AmiBlitz3.ab2@4204>   SUBQ.w #1,A1
00020FE0 <AmiBlitz3.ab2@4205>   MOVE.l data2,(A1)
00020FE4 <AmiBlitz3.ab2@4206> BRA.w JL_0_4706
00020FEA <AmiBlitz3.ab2@4209>   MOVE.l destpointer,(A1)
00020FEC <AmiBlitz3.ab2@4212>   MOVEA.l A3,A1
00020FEE <AmiBlitz3.ab2@4213>   MOVEA.l (A3),A3
00020FF2 <AmiBlitz3.ab2@4214>   MOVE.l A3,$4(A2)
00020FF4 <AmiBlitz3.ab2@4215>   MOVEQ.l #$0C+2,D0
00020FFA <AmiBlitz3.ab2@4216>   MOVE.l mempool,a0
00021000 <AmiBlitz3.ab2@4217>   MOVEA.l _execbase,A6
00021004 <AmiBlitz3.ab2@4218>   JSR _FreePooled(A6)
00021008 <AmiBlitz3.ab2@4219> BRA.w JL_0_46BC
00021012 <AmiBlitz3.ab2@4224>    MOVE.l #forthstack,forthsp
0002101C <AmiBlitz3.ab2@4225>   MOVE.l #precstack,precsp
00021020 <AmiBlitz3.ab2@4226>    BSR.w getparameter2
00021024 <AmiBlitz3.ab2@4229>   BSR.w findlabel2
00021028 <AmiBlitz3.ab2@4230>    BEQ.w JL_0_4738
0002102C <AmiBlitz3.ab2@4231>    BSR.w addlabelhash
00021034 <AmiBlitz3.ab2@4232>   MOVE.l #$1,$4(A2)
00021038 <AmiBlitz3.ab2@4233> BRA.w JL_0_4744
00021040 <AmiBlitz3.ab2@4236>   CMPI.l #$1,$4(A2)
00021044 <AmiBlitz3.ab2@4237>    BNE.w illconerr
00021048 <AmiBlitz3.ab2@4246>   CMP.w #$3D,D0
0002104C <AmiBlitz3.ab2@4247>   BEQ.w JL_0_474E
0002104E <AmiBlitz3.ab2@4248> RTS
00021050 <AmiBlitz3.ab2@4252>   MOVE.l A2,-(A7)
00021056 <AmiBlitz3.ab2@4253>   JSR AJL_0_BF6E
00021058 <AmiBlitz3.ab2@4254>   MOVEA.l (A7)+,A2
0002105C <AmiBlitz3.ab2@4255>   MOVE.l D3,$8(A2)                                         ;store constant
00021064 <AmiBlitz3.ab2@4256>   CMP.w #$0a,lastchar
00021068 <AmiBlitz3.ab2@4257>   BNE 'l1
00021070 <AmiBlitz3.ab2@4258>   MOVE.w #":",lastchar                                     ;hack to read wizard include files
00021072 <AmiBlitz3.ab2@4261> RTS
00021076 <AmiBlitz3.ab2@4264>   BSR.w findproc                                           ;write statement call
0002107A <AmiBlitz3.ab2@4265>   BEQ _state
00021080 <AmiBlitz3.ab2@4266>   TST.l unusedfunc
00021084 <AmiBlitz3.ab2@4267>   BEQ noprocerr
0002108A <AmiBlitz3.ab2@4269>   JSR gotoendsource
0002108E <AmiBlitz3.ab2@4272>   TST.b $5(A2)
00021094 <AmiBlitz3.ab2@4274>   MOVE.l a2,currentfunccall
0002109C <AmiBlitz3.ab2@4275>   MOVE.b #1,funccall
000210A2 <AmiBlitz3.ab2@4276>   MOVE.b #1,isfunc(a2)
000210A6 <AmiBlitz3.ab2@4277>   MOVE.l $E(A2),-(A7)
000210A8 <AmiBlitz3.ab2@4278>   MOVEQ.l #$00,D0
000210AC <AmiBlitz3.ab2@4279>   MOVE.b $4(A2),D0
000210B2 <AmiBlitz3.ab2@4280>   MOVE.l d0,parnumtemp
000210B6 <AmiBlitz3.ab2@4281>   BEQ.w JL_0_4786
000210BA <AmiBlitz3.ab2@4282>   TST.b $20(a2)                                            ;increase if morepar
000210BE <AmiBlitz3.ab2@4283>   BNE 'no0par
000210C0 <AmiBlitz3.ab2@4284>   MOVE.l a5,a4
000210C4 <AmiBlitz3.ab2@4287>   CMP.b #$20,(a4)+
000210C8 <AmiBlitz3.ab2@4288>   BEQ 'l1
000210CE <AmiBlitz3.ab2@4289>   CMP.b #"}",-1(a4)
000210D2 <AmiBlitz3.ab2@4290>   BNE  'no0par                                             ;statementcall pars
000210D4 <AmiBlitz3.ab2@4291>   MOVEQ #0,d0
000210D8 <AmiBlitz3.ab2@4294>   LEA $16(A2),A1
000210DA <AmiBlitz3.ab2@4297>   MOVE.l d1,-(a7)
000210DC <AmiBlitz3.ab2@4298>   MOVE.b (a1),d2
000210DE <AmiBlitz3.ab2@4299>   MOVE.l d0,d1
000210E2 <AmiBlitz3.ab2@4300>   CMP.w #4,d2
000210E6 <AmiBlitz3.ab2@4301>   BNE 'l1b
000210EC <AmiBlitz3.ab2@4302>   ADD.l #$203c,d1
000210F2 <AmiBlitz3.ab2@4304>   JSR writeword
000210F8 <AmiBlitz3.ab2@4305>   MOVE.l #$ffff0000,d1
000210FE <AmiBlitz3.ab2@4307>   JSR writelong
00021102 <AmiBlitz3.ab2@4308> BRA 'l2b
00021108 <AmiBlitz3.ab2@4311>   TST.b fpu
0002110C <AmiBlitz3.ab2@4312>   BNE 'l1c
00021110 <AmiBlitz3.ab2@4313>   CMP.w #5,d2
00021114 <AmiBlitz3.ab2@4314>   BNE 'l1c
0002111A <AmiBlitz3.ab2@4315>   ADD.l #$203c,d1
00021120 <AmiBlitz3.ab2@4317>   JSR writeword
00021126 <AmiBlitz3.ab2@4318>   MOVE.l #$800000c1,d1
0002112C <AmiBlitz3.ab2@4320>   JSR writelong
00021130 <AmiBlitz3.ab2@4321> BRA 'l2b
00021136 <AmiBlitz3.ab2@4324>   ADD.l #$70ff,d1
0002113C <AmiBlitz3.ab2@4326>   JSR writeword
00021142 <AmiBlitz3.ab2@4327>   MOVE.l #$f23c5000,d1
00021144 <AmiBlitz3.ab2@4328>   MOVE.l d0,d2
00021146 <AmiBlitz3.ab2@4329>   ASR.l #2,d2
00021148 <AmiBlitz3.ab2@4330>   ADD.l d2,d1
0002114E <AmiBlitz3.ab2@4332>   JSR writelong
00021152 <AmiBlitz3.ab2@4333>   MOVE.w #$ffff,d1
00021158 <AmiBlitz3.ab2@4335>   JSR writeword
0002115A <AmiBlitz3.ab2@4338>   MOVE.l (a7)+,d1
0002115C <AmiBlitz3.ab2@4339>   ADDQ.l #1,a1
00021162 <AmiBlitz3.ab2@4340>   ADD.l #$0200,d0
00021168 <AmiBlitz3.ab2@4341>   CMP.l #$0e00,d0
0002116C <AmiBlitz3.ab2@4342>    BEQ syntaxerr
0002116E <AmiBlitz3.ab2@4343>   TST.b (a1)
00021172 <AmiBlitz3.ab2@4344>    BNE 'again
00021176 <AmiBlitz3.ab2@4345> BRA JL_0_4786
00021180 <AmiBlitz3.ab2@4348>   MOVE.w a2offset,a2offset2
00021184 <AmiBlitz3.ab2@4349>   LEA $16(A2),A2
0002118A <AmiBlitz3.ab2@4350>   MOVE.b funcparloop,-(a7)
00021192 <AmiBlitz3.ab2@4351>   MOVE.b #1,funcparloop
00021198 <AmiBlitz3.ab2@4352>   MOVE.b blitzparloop,-(a7)
0002119E <AmiBlitz3.ab2@4353>   CLR.b blitzparloop
000211A2 <AmiBlitz3.ab2@4354>   BSR.w fetchpees2
000211A8 <AmiBlitz3.ab2@4355>   MOVE.b (a7)+,blitzparloop
000211AE <AmiBlitz3.ab2@4356>   MOVE.b (a7)+,funcparloop
000211B2 <AmiBlitz3.ab2@4357> BRA.w JL_0_478A
000211B6 <AmiBlitz3.ab2@4360>   BSR.w get1bytemain
000211BA <AmiBlitz3.ab2@4363>   CMP.w #$7D,D0
000211BE <AmiBlitz3.ab2@4364>    BNE.w morepar_                                          ;syntax error morepar
000211C4 <AmiBlitz3.ab2@4365>    JSR chkstak
000211C6 <AmiBlitz3.ab2@4366>   MOVE.l (A7)+,D1
000211CC <AmiBlitz3.ab2@4382>    JSR JL_0_AFCA
000211D2 <AmiBlitz3.ab2@4404>   CLR.b funccall
000211D6 <AmiBlitz3.ab2@4405> BRA.w get1bytemain
000211DC <AmiBlitz3.ab2@4409>   MOVE.l d0,lasttoken
000211E0 <AmiBlitz3.ab2@4410>   CMP.w #$c09f,d0                                          ;hack to use getregd0 instead of getd0
000211E4 <AmiBlitz3.ab2@4411>   BNE 'l2
000211E8 <AmiBlitz3.ab2@4412>    MOVE.w #$dd05,d0
000211EC <AmiBlitz3.ab2@4415>   CMP.w #$c0a0,d0                                          ;hack to use getregd0 instead of getd0
000211F0 <AmiBlitz3.ab2@4416>   BNE 'l3
000211F4 <AmiBlitz3.ab2@4417>    MOVE.w #$dd06,d0
000211F8 <AmiBlitz3.ab2@4420>   CMP.w #-$7FC4,D0
000211FC <AmiBlitz3.ab2@4421>   BCS.w JL_0_47C4
00021200 <AmiBlitz3.ab2@4422>     CMP.w #-$7F4D,D0
00021204 <AmiBlitz3.ab2@4423>     BCC.w JL_0_47C4
0002120C <AmiBlitz3.ab2@4424>       BTST #$7,assemblercheck                              ;inline Assembler checking
00021210 <AmiBlitz3.ab2@4425>       BNE.b JL_0_47C0
00021216 <AmiBlitz3.ab2@4426>         TST.b debugmode
0002121A <AmiBlitz3.ab2@4427>         BEQ.b 'l10
00021224 <AmiBlitz3.ab2@4432>           MOVE.w d_nomemleft,dontwrite
0002122E <AmiBlitz3.ab2@4433>           MOVE.l d_bigpc,bigpc
00021238 <AmiBlitz3.ab2@4434>           MOVE.l d_pc,destpointer
00021242 <AmiBlitz3.ab2@4435>           MOVE.l cont_pc2,cont_pc
00021246 <AmiBlitz3.ab2@4441> BRA.w JL_0_612C
0002124A <AmiBlitz3.ab2@4444>   BCLR #$F,D0
0002124C <AmiBlitz3.ab2@4445>   MOVE.w D0,D1
00021250 <AmiBlitz3.ab2@4446>   ANDI.w #$7F00,D1
00021254 <AmiBlitz3.ab2@4447>   BNE.w JL_0_4856
00021258 <AmiBlitz3.ab2@4448>     CMP.w #$B3,D0                                          ;intern Instructions
0002125C <AmiBlitz3.ab2@4449>     BCS.w JL_0_47F2
00021260 <AmiBlitz3.ab2@4450>       SUBI.w #$77,D0
00021264 <AmiBlitz3.ab2@4451>       CMP.w #$4B,D0
00021268 <AmiBlitz3.ab2@4452>       BEQ.w JL_0_4830
0002126C <AmiBlitz3.ab2@4453>         CMP.w #$46,D0
00021270 <AmiBlitz3.ab2@4454>         BEQ.w JL_0_4830
00021274 <AmiBlitz3.ab2@4455> BRA.w JL_0_4834                                            ; change tokennum
00021278 <AmiBlitz3.ab2@4458>     CMP.w #$38,D0
0002127C <AmiBlitz3.ab2@4459>      BEQ.w JL_0_4830
00021280 <AmiBlitz3.ab2@4460>     CMP.w #$39,D0
00021284 <AmiBlitz3.ab2@4461>      BEQ.w JL_0_4830
00021288 <AmiBlitz3.ab2@4462>     CMP.w #$D,D0
0002128C <AmiBlitz3.ab2@4463>      BEQ.w JL_0_4830
00021290 <AmiBlitz3.ab2@4464>     CMP.w #$12,D0
00021294 <AmiBlitz3.ab2@4465>      BEQ.w JL_0_4830
00021298 <AmiBlitz3.ab2@4466>     CMP.w #$13,D0
0002129C <AmiBlitz3.ab2@4467>      BEQ.w JL_0_4830
000212A0 <AmiBlitz3.ab2@4468>     CMP.w #$1A,D0
000212A4 <AmiBlitz3.ab2@4469>      BEQ.w JL_0_4830
000212A8 <AmiBlitz3.ab2@4470>     CMP.w #$2A,D0
000212AC <AmiBlitz3.ab2@4471>      BHI.w JL_0_4834
000212B0 <AmiBlitz3.ab2@4472>     CMP.w #$23,D0
000212B4 <AmiBlitz3.ab2@4473>      BCS.b JL_0_4834
000212B8 <AmiBlitz3.ab2@4476>   BSR.w undodebug
000212BA <AmiBlitz3.ab2@4479>   SUBQ.w #1,D0
000212BC <AmiBlitz3.ab2@4480>   LSL.w #2,D0
000212C2 <AmiBlitz3.ab2@4487>   LEA instructionbase,A0
000212C6 <AmiBlitz3.ab2@4488>   MOVEA.l $0(A0,D0.W),A0
000212C8 <AmiBlitz3.ab2@4489>   MOVE.l A0,-(A7)
000212CC <AmiBlitz3.ab2@4490> BRA.w get1bytemain
000212CE <AmiBlitz3.ab2@4496>   MOVE.w D0,D1
000212D2 <AmiBlitz3.ab2@4497>    BSR.w searchinstr
000212D8 <AmiBlitz3.ab2@4498>    TST.b newmode
000212DC <AmiBlitz3.ab2@4499>    BNE compile_term
000212E2 <AmiBlitz3.ab2@4500>   BTST #$2,$1(A3)                                          ;a3 = pointer to instr ;toke stuff in a3
000212E6 <AmiBlitz3.ab2@4501>    BNE.w stamigalib
000212EC <AmiBlitz3.ab2@4502>   BTST #$0,$1(A3)
000212F0 <AmiBlitz3.ab2@4503>    BEQ.w needreturn_                                       ;syntax err need return   ;check it's a statement
000212F4 <AmiBlitz3.ab2@4504>    BSR.w JL_0_49EA                                         ;does it need a size specifier?
000212F8 <AmiBlitz3.ab2@4505>    BSR.w JL_0_66F6
000212FE <AmiBlitz3.ab2@4511>   MOVE.w numreps,-(A7)
00021304 <AmiBlitz3.ab2@4512>   MOVE.w userp,-(A7)
0002130A <AmiBlitz3.ab2@4513>   MOVE.w a2offset,-(A7)
0002130C <AmiBlitz3.ab2@4514>   MOVE.l A2,-(A7)                                          ;recurs.
00021316 <AmiBlitz3.ab2@4515>   MOVE.w convsize,userp
0002131A <AmiBlitz3.ab2@4516>   LEA $6(A3),A1
0002131C <AmiBlitz3.ab2@4520>    MOVE.w (A1),D2
00021320 <AmiBlitz3.ab2@4521>    BMI.w SERR                                              ;statement syntax error
00021324 <AmiBlitz3.ab2@4522>   ANDI.w #$FF,D2
00021326 <AmiBlitz3.ab2@4523>   CMP.w D2,D1
0002132A <AmiBlitz3.ab2@4524>    BEQ.w JL_0_48E0
0002132E <AmiBlitz3.ab2@4525>    BCS.w JL_0_48CC
00021330 <AmiBlitz3.ab2@4526>   MOVE.b (A1),D3
00021334 <AmiBlitz3.ab2@4527>   ANDI.w #$7,D3
00021338 <AmiBlitz3.ab2@4528>    BEQ.w JL_0_48CC
0002133A <AmiBlitz3.ab2@4529>   MOVE.w D2,D4
0002133C <AmiBlitz3.ab2@4530>   SUB.w D3,D4
0002133E <AmiBlitz3.ab2@4531>   MOVEQ.l #$00,D5
00021340 <AmiBlitz3.ab2@4532>   MOVE.w D1,D5
00021342 <AmiBlitz3.ab2@4533>   SUB.w D4,D5
00021344 <AmiBlitz3.ab2@4534>   DIVU D3,D5
00021346 <AmiBlitz3.ab2@4535>   SWAP D5
00021348 <AmiBlitz3.ab2@4536>   TST.w D5
0002134C <AmiBlitz3.ab2@4537>    BEQ.w JL_0_48E0
0002134E <AmiBlitz3.ab2@4540>   ADDQ.w #2,A1
00021350 <AmiBlitz3.ab2@4541>   ADDA.w D2,A1
00021354 <AmiBlitz3.ab2@4542>    BSR.w aligna1
00021358 <AmiBlitz3.ab2@4543>    BSR.w skiplibreg
0002135C <AmiBlitz3.ab2@4544>   LEA $C(A1),A1
00021360 <AmiBlitz3.ab2@4545> BRA.w JL_0_489A
00021362 <AmiBlitz3.ab2@4548>   MOVE.w (a3),d2
00021366 <AmiBlitz3.ab2@4549>   BTST #1,d2
0002136A <AmiBlitz3.ab2@4550>   BEQ statement_
0002136E <AmiBlitz3.ab2@4551>   CMP.w #1,d1
00021372 <AmiBlitz3.ab2@4552>   BEQ statement_
00021376 <AmiBlitz3.ab2@4555>   CMP.b #$20,(a5)+
0002137A <AmiBlitz3.ab2@4556>   BEQ 'l2
00021380 <AmiBlitz3.ab2@4557>   CMP.b #"(",-2(a5)
00021384 <AmiBlitz3.ab2@4558>   BNE 'l1
00021388 <AmiBlitz3.ab2@4559> BRA parameter_
0002138C <AmiBlitz3.ab2@4562> BRA inbrackets_
0002138E <AmiBlitz3.ab2@4565>   MOVE.b (A1),D2
00021390 <AmiBlitz3.ab2@4566>   LSL.w #8,D2
00021392 <AmiBlitz3.ab2@4567>   OR.w D2,D1
00021394 <AmiBlitz3.ab2@4568>   MOVE.l A1,-(A7)
0002139A <AmiBlitz3.ab2@4569>   CLR.w a2offset
0002139C <AmiBlitz3.ab2@4570>   TST.w D1
000213A0 <AmiBlitz3.ab2@4571>    BEQ.w JL_0_4900
000213A4 <AmiBlitz3.ab2@4572>   LEA $2(A1),A2
000213AA <AmiBlitz3.ab2@4574>   MOVE.l lasttoken,-(a7)
000213B0 <AmiBlitz3.ab2@4575>   CLR.l lasttoken
000213B4 <AmiBlitz3.ab2@4576>   BSR.w fetchlibps
000213BA <AmiBlitz3.ab2@4577>   MOVE.l (a7)+,lasttoken
000213BE <AmiBlitz3.ab2@4578> BRA.w JL_0_4904
000213C2 <AmiBlitz3.ab2@4581>   BSR.w get1bytemain
000213C4 <AmiBlitz3.ab2@4584>   MOVEA.l (A7)+,A1
000213C6 <AmiBlitz3.ab2@4585>   MOVEA.l (A7)+,A2
000213CC <AmiBlitz3.ab2@4586>   MOVE.w a2offset,D1
000213D0 <AmiBlitz3.ab2@4587>    BEQ.w JL_0_493A
000213D6 <AmiBlitz3.ab2@4588>   MOVE.w D1,preplibst+2
000213DC <AmiBlitz3.ab2@4589>   MOVE.l preplibst,D1
000213E2 <AmiBlitz3.ab2@4590>    JSR writelong                                           ;write array offset stack correct
000213EC <AmiBlitz3.ab2@4591>   MOVE.w numreps,movenumrep+2
000213F0 <AmiBlitz3.ab2@4592>    BEQ.w JL_0_493A
000213F6 <AmiBlitz3.ab2@4593>   MOVE.l movenumrep,D1
000213FC <AmiBlitz3.ab2@4594>    JSR writelong
00021402 <AmiBlitz3.ab2@4598>   JSR userjsr
00021408 <AmiBlitz3.ab2@4601>   MOVE.w a2offset,D1
0002140C <AmiBlitz3.ab2@4602>    BEQ.w JL_0_4974
00021410 <AmiBlitz3.ab2@4603>   CMP.w #$8,D1
00021414 <AmiBlitz3.ab2@4604>    BHI.w JL_0_4964
00021418 <AmiBlitz3.ab2@4605>   ANDI.w #$7,D1
0002141A <AmiBlitz3.ab2@4606>   LSL.w #8,D1
0002141C <AmiBlitz3.ab2@4607>   LSL.w #1,D1
00021420 <AmiBlitz3.ab2@4608>   ORI.w #$504F,D1
00021426 <AmiBlitz3.ab2@4610>   JSR writeword
0002142A <AmiBlitz3.ab2@4611> BRA.w JL_0_4974
00021430 <AmiBlitz3.ab2@4614>   MOVE.w D1,fixlibst+2
00021436 <AmiBlitz3.ab2@4615>   MOVE.l fixlibst,D1
0002143C <AmiBlitz3.ab2@4616>   JSR writelong
00021442 <AmiBlitz3.ab2@4619>   MOVE.w (A7)+,a2offset
00021448 <AmiBlitz3.ab2@4620>   MOVE.w (A7)+,userp
0002144E <AmiBlitz3.ab2@4621>   MOVE.w (A7)+,numreps
00021452 <AmiBlitz3.ab2@4622> BRA.w reget
00021456 <AmiBlitz3.ab2@4626>   MOVEM.l A2-A3,-(A7)
0002145C <AmiBlitz3.ab2@4627>   CLR.b doublepeek
00021462 <AmiBlitz3.ab2@4628>   MOVE.l A5,lastsourcepos
00021466 <AmiBlitz3.ab2@4629>    BSR.w getchar
0002146A <AmiBlitz3.ab2@4630>   CMP.w #$2E,D0
0002146E <AmiBlitz3.ab2@4631>    BEQ.w JL_0_49B4
00021474 <AmiBlitz3.ab2@4632>   MOVEA.l defaulttype,A2
00021478 <AmiBlitz3.ab2@4633>   CMP.w #$24,D0
0002147C <AmiBlitz3.ab2@4634>    BNE.w JL_0_49CA
0002147E <AmiBlitz3.ab2@4635>   MOVEQ.l #$07,D1
00021482 <AmiBlitz3.ab2@4636> BRA.w JL_0_49DE
00021486 <AmiBlitz3.ab2@4639>   BSR.w getparameter2
0002148A <AmiBlitz3.ab2@4640>   BEQ.w syntaxerr
00021490 <AmiBlitz3.ab2@4641>   LEA newtypebase,A2
00021494 <AmiBlitz3.ab2@4642>   BSR.w findtype
00021498 <AmiBlitz3.ab2@4643>   BNE.w notypeerr
000214A2 <AmiBlitz3.ab2@4647>   MOVE.w oldqflag,instringon
000214A8 <AmiBlitz3.ab2@4648>   MOVEA.l lastsourcepos,A5
000214AC <AmiBlitz3.ab2@4653>   MOVE.w $6(A2),D1
000214B2 <AmiBlitz3.ab2@4654>   CMP.w #8,8(a2)
000214B6 <AmiBlitz3.ab2@4655>   BNE 'l1
000214BE <AmiBlitz3.ab2@4656>   MOVE.b #1,doublepeek
000214C4 <AmiBlitz3.ab2@4660>   MOVE.w D1,convsize
000214C8 <AmiBlitz3.ab2@4661>   MOVEM.l (A7)+,A2-A3
000214CA <AmiBlitz3.ab2@4662> RTS
000214D0 <AmiBlitz3.ab2@4667>   BTST #$3,$1(A3)
000214D4 <AmiBlitz3.ab2@4668>   BEQ.w JL_0_4A06
000214D8 <AmiBlitz3.ab2@4669>   BSR.w AJL_0_498A                                         ;read peek/poke size
000214DC <AmiBlitz3.ab2@4671>   ORI.w #$7000,D1
000214E2 <AmiBlitz3.ab2@4672>   JSR writeword
000214E8 <AmiBlitz3.ab2@4673>   ADDQ.w #1,regnum
000214EA <AmiBlitz3.ab2@4676> RTS
000214EC <AmiBlitz3.ab2@4682>             Dc.b $10,$12                                   ;MOVE.B  (A2),D0
000214EE <AmiBlitz3.ab2@4683>             Dc.b $14,$91                                   ;MOVE.B  (A1),(A2)
000214F0 <AmiBlitz3.ab2@4684>             Dc.b $12,$80                                   ;MOVE.B  D0,(A1)
000214F2 <AmiBlitz3.ab2@4688> swapw:      Dc.b $30,$12                                   ;MOVE.W  (A2),D0
000214F4 <AmiBlitz3.ab2@4689>             Dc.b $34,$91                                   ;MOVE.W  (A1),(A2)
000214F6 <AmiBlitz3.ab2@4690>             Dc.b $32,$80                                   ;MOVE.W  D0,(A1)
000214F8 <AmiBlitz3.ab2@4694> swapl:      Dc.b $20,$12                                   ;MOVE.L  (A2),D0
000214FA <AmiBlitz3.ab2@4695>             Dc.b $24,$91                                   ;MOVE.L  (A1),(A2)
000214FC <AmiBlitz3.ab2@4696>             Dc.b $22,$80                                   ;MOVE.L  D0,(A1)
000214FE <AmiBlitz3.ab2@4700> pulla1:     Dc.b $22,$5F                                   ;MOVEA.L (A7)+,A1
00021500 <AmiBlitz3.ab2@4703> srctype:    Ds.w 1
00021504 <AmiBlitz3.ab2@4708>   BSR.w excget
00021508 <AmiBlitz3.ab2@4709>   CMP.w #$2C,D0
0002150C <AmiBlitz3.ab2@4710>    BNE.w syntaxerr
00021512 <AmiBlitz3.ab2@4711>   MOVE.b D2,srctype
00021518 <AmiBlitz3.ab2@4712>   MOVE.w pusha2,D1
0002151E <AmiBlitz3.ab2@4713>   JSR writeword
00021522 <AmiBlitz3.ab2@4714>   BSR.w get1bytemain
00021526 <AmiBlitz3.ab2@4715>   BSR.w excget
0002152C <AmiBlitz3.ab2@4716>   CMP.b srctype,D2
00021530 <AmiBlitz3.ab2@4717>    BNE.w excerr2
00021536 <AmiBlitz3.ab2@4718>   MOVE.w pulla1,D1
0002153C <AmiBlitz3.ab2@4719>    JSR writeword
00021540 <AmiBlitz3.ab2@4720>   CMP.b #$2,D2
00021544 <AmiBlitz3.ab2@4721>    BCS.w JL_0_4B2A
00021548 <AmiBlitz3.ab2@4722>    BEQ.w JL_0_4B1E
0002154C <AmiBlitz3.ab2@4723>   LEA swapl(PC),A0
00021550 <AmiBlitz3.ab2@4724>   LEA swaplf(PC),A1
00021556 <AmiBlitz3.ab2@4725> JMP pokecode
0002155A <AmiBlitz3.ab2@4728>   LEA swapw(PC),A0
0002155E <AmiBlitz3.ab2@4729>   LEA swapwf(PC),A1
00021564 <AmiBlitz3.ab2@4730> JMP pokecode
00021568 <AmiBlitz3.ab2@4733>   LEA swapb(PC),A0
0002156C <AmiBlitz3.ab2@4734>   LEA swapbf(PC),A1
00021572 <AmiBlitz3.ab2@4735> JMP pokecode
00021578 <AmiBlitz3.ab2@4739>   JSR getparameter
0002157C <AmiBlitz3.ab2@4740>   BSR.w JL_0_8E3C
00021580 <AmiBlitz3.ab2@4741>   BSR.w calcvar
00021584 <AmiBlitz3.ab2@4742>   BTST #$E,D2
00021588 <AmiBlitz3.ab2@4743>    BEQ.w JL_0_4B4E
0002158C <AmiBlitz3.ab2@4744>   MOVE.b #$4,D2
0002158E <AmiBlitz3.ab2@4747>   TST.b D2
00021592 <AmiBlitz3.ab2@4748>    BEQ.w excerr
00021596 <AmiBlitz3.ab2@4749>   BTST #$F,D2
0002159A <AmiBlitz3.ab2@4750>    BNE.w JL_0_4B6A
000215A0 <AmiBlitz3.ab2@4751>   MOVE.w leaamp,D1
000215A6 <AmiBlitz3.ab2@4752>    JSR pokewda5s
000215A8 <AmiBlitz3.ab2@4753>   MOVE.w D3,D1
000215AE <AmiBlitz3.ab2@4754> JMP writeword
000215B0 <AmiBlitz3.ab2@4757> RTS
000215B6 <AmiBlitz3.ab2@4763>   MOVE.l mempool,a0
000215BC <AmiBlitz3.ab2@4764>   MOVEA.l _execbase,A6
000215C0 <AmiBlitz3.ab2@4765> JMP _AllocPooled(a6)
000215C4 <AmiBlitz3.ab2@4772>   MOVE.w #$BF00,D1
000215CA <AmiBlitz3.ab2@4773> JMP Atokejsr
000215CE <AmiBlitz3.ab2@4777>   CMP.w #-$7FFA,D0
000215D2 <AmiBlitz3.ab2@4778>    BEQ.w popreturn
000215D6 <AmiBlitz3.ab2@4779>   CMP.w #-$7FEA,D0
000215DA <AmiBlitz3.ab2@4780>    BEQ.w popnext2
000215DE <AmiBlitz3.ab2@4781>   CMP.w #-$7FF2,D0
000215E2 <AmiBlitz3.ab2@4782>    BEQ.w popselect2
000215E6 <AmiBlitz3.ab2@4783>   CMP.w #-$7FF5,D0
000215EA <AmiBlitz3.ab2@4784>    BEQ.w get1bytemain
000215EE <AmiBlitz3.ab2@4785>   CMP.w #-$7FF4,D0
000215F2 <AmiBlitz3.ab2@4786>    BEQ.w get1bytemain
000215F6 <AmiBlitz3.ab2@4787>   CMP.w #-$7FEC,D0
000215FA <AmiBlitz3.ab2@4788>    BEQ.w get1bytemain
000215FE <AmiBlitz3.ab2@4789>   CMP.w #-$7F45,D0
00021602 <AmiBlitz3.ab2@4790>    BEQ.w get1bytemain
00021606 <AmiBlitz3.ab2@4791> BRA.w syntaxerr
0002160C <AmiBlitz3.ab2@4794>   TST.b debugmode
00021610 <AmiBlitz3.ab2@4795>    BEQ.w popreturn__norerr
00021614 <AmiBlitz3.ab2@4796>   LEA popreturn__rfix(PC),A0
00021618 <AmiBlitz3.ab2@4797>   LEA popreturn__rfixf(PC),A1
0002161E <AmiBlitz3.ab2@4798>    JSR pokecode
00021622 <AmiBlitz3.ab2@4799>   MOVE.w #$C305,D1
00021628 <AmiBlitz3.ab2@4800>    JSR Atokejsr
0002162C <AmiBlitz3.ab2@4801>   MOVE.w popreturn__rfix2(PC),D1
00021632 <AmiBlitz3.ab2@4803>    JSR writeword
00021636 <AmiBlitz3.ab2@4804> BRA.w get1bytemain
0002163C <AmiBlitz3.ab2@4808>   CMPI.w #$6753,$4(A7)                                     ;#"gS",4(A7)
00021640 <AmiBlitz3.ab2@4809>   BEQ.w popreturn__rfix2
00021646 <AmiBlitz3.ab2@4812>   JSR $20000                                               ;reass
00021648 <AmiBlitz3.ab2@4815>   ADDQ.w #6,A7
0002164C <AmiBlitz3.ab2@4819>   MOVE.w popreturn__sfix(PC),D1
00021652 <AmiBlitz3.ab2@4820>   JSR writeword
00021656 <AmiBlitz3.ab2@4821> BRA.w get1bytemain
00021658 <AmiBlitz3.ab2@4826>   Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
0002165E <AmiBlitz3.ab2@4831>   MOVE.l firstfor,D0
00021662 <AmiBlitz3.ab2@4832>    BEQ.w noforerr
00021664 <AmiBlitz3.ab2@4833>   MOVEA.l D0,A2
00021668 <AmiBlitz3.ab2@4834>    BSR.w get1bytemain
0002166C <AmiBlitz3.ab2@4835>   BSR.w popnext
00021672 <AmiBlitz3.ab2@4838>   TST.b debugmode
00021676 <AmiBlitz3.ab2@4839>    BEQ.w popnext3__ner
0002167C <AmiBlitz3.ab2@4840>   MOVE.l nextfixw2,D1
00021682 <AmiBlitz3.ab2@4841>   CMPI.w #$3,$C(A2)
00021686 <AmiBlitz3.ab2@4842>    BCS.w writelong2
0002168C <AmiBlitz3.ab2@4843>   MOVE.l nextfixl2,D1
00021692 <AmiBlitz3.ab2@4844> writelong2 JMP  writelong
00021698 <AmiBlitz3.ab2@4847>   CMPI.w #$3,$C(A2)
0002169C <AmiBlitz3.ab2@4848>    BCS.w popnext3__skip2
000216A2 <AmiBlitz3.ab2@4849>   MOVE.l nextfixl,D1
000216A8 <AmiBlitz3.ab2@4850>   JMP writelong
000216AE <AmiBlitz3.ab2@4853>   MOVE.w nextfixw,D1
000216B4 <AmiBlitz3.ab2@4854> JMP writeword
000216B8 <AmiBlitz3.ab2@4858>   MOVE.w $C(A2),D0
000216BE <AmiBlitz3.ab2@4859>   TST.b debugmode
000216C2 <AmiBlitz3.ab2@4860>    BEQ.w popnext__norunerr
000216C6 <AmiBlitz3.ab2@4861>   MOVE.w #$C306,D1
000216CA <AmiBlitz3.ab2@4862>   CMP.w #$3,D0
000216CE <AmiBlitz3.ab2@4863>    BCS.w popnext__oktc
000216D0 <AmiBlitz3.ab2@4864>   ADDQ.w #1,D1
000216D2 <AmiBlitz3.ab2@4867>   MOVE.l A2,-(A7)
000216D8 <AmiBlitz3.ab2@4868>   JSR Atokejsr
000216DA <AmiBlitz3.ab2@4869>   MOVEA.l (A7)+,A2
000216DC <AmiBlitz3.ab2@4872> RTS
000216E2 <AmiBlitz3.ab2@4876>   MOVE.l firstsel,D0
000216E6 <AmiBlitz3.ab2@4877>    BEQ.w eselerr
000216E8 <AmiBlitz3.ab2@4878>   MOVEA.l D0,A2
000216EC <AmiBlitz3.ab2@4879>    BSR.w get1bytemain
000216F0 <AmiBlitz3.ab2@4882>   MOVE.w $C(A2),D2
000216F6 <AmiBlitz3.ab2@4883>   TST.b debugmode
000216FA <AmiBlitz3.ab2@4884>    BEQ.w popselect__norerr
000216FE <AmiBlitz3.ab2@4885>   MOVE.w #$C313,D1
00021702 <AmiBlitz3.ab2@4886>   CMP.w #$3,D2
00021706 <AmiBlitz3.ab2@4887>    BCS.w popselect__chkit
00021708 <AmiBlitz3.ab2@4888>   ADDQ.w #1,D1
0002170E <AmiBlitz3.ab2@4891>   JSR Atokejsr                                             ;make sure next thing on stack
00021710 <AmiBlitz3.ab2@4895>   MOVEQ.l #$02,D1
00021714 <AmiBlitz3.ab2@4896>   CMP.w #$3,D2
00021718 <AmiBlitz3.ab2@4897>    BCS.w popselect__doit
0002171A <AmiBlitz3.ab2@4898>   MOVEQ.l #$04,D1
0002171E <AmiBlitz3.ab2@4899>   CMP.w #$7,D2
00021722 <AmiBlitz3.ab2@4900>    BCS.w popselect__doit
00021728 <AmiBlitz3.ab2@4901>   LEA endselstr,A0
0002172E <AmiBlitz3.ab2@4902>   LEA endselstrf,A1
00021734 <AmiBlitz3.ab2@4903>   TST.b debugmode
00021738 <AmiBlitz3.ab2@4904>    BEQ.w popselect__norerr3
0002173E <AmiBlitz3.ab2@4905>   LEA endselstrf2,A1
00021744 <AmiBlitz3.ab2@4908>   JSR pokecode
00021748 <AmiBlitz3.ab2@4909>   MOVE.w #$C003,D1                                         ;global freemem
0002174E <AmiBlitz3.ab2@4910> JMP Atokejsr
00021754 <AmiBlitz3.ab2@4913>   TST.b debugmode
00021758 <AmiBlitz3.ab2@4914>    BEQ.w popselect__norerr2
0002175A <AmiBlitz3.ab2@4915>   ADDQ.w #2,D1                                             ;for the "sE"
0002175C <AmiBlitz3.ab2@4918>   LSL.w #8,D1
0002175E <AmiBlitz3.ab2@4919>   LSL.w #1,D1
00021764 <AmiBlitz3.ab2@4920>   OR.w endsel,D1
0002176A <AmiBlitz3.ab2@4921> JMP writeword
0002176E <AmiBlitz3.ab2@4924> firstrep:    Ds.l 1
00021772 <AmiBlitz3.ab2@4925> replineat:   Ds.l 1
00021778 <AmiBlitz3.ab2@4934>   CLR.l fp0addr
00021782 <AmiBlitz3.ab2@4935>   MOVE.l linenumat,replineat
00021784 <AmiBlitz3.ab2@4936>   MOVEQ.l #$08,D0
0002178A <AmiBlitz3.ab2@4937>   MOVEA.l _execbase,A6
00021790 <AmiBlitz3.ab2@4938>   MOVE.l mempool,a0
00021794 <AmiBlitz3.ab2@4939>   JSR _AllocPooled(a6)
00021796 <AmiBlitz3.ab2@4941>   MOVEA.l D0,A0
0002179A <AmiBlitz3.ab2@4942>   MOVE.l firstrep(PC),(A0)
000217A0 <AmiBlitz3.ab2@4943>   MOVE.l A0,firstrep
000217A8 <AmiBlitz3.ab2@4944>   MOVE.l destpointer,$4(A0)
000217AA <AmiBlitz3.ab2@4945> RTS
000217B0 <AmiBlitz3.ab2@4948> str_temp:  Ds.w 3                                            ;infochk  ds.b 6 org source
000217B4 <AmiBlitz3.ab2@4951>   LEA str_temp(PC),A1
000217B6 <AmiBlitz3.ab2@4952>   CLR.w (A1)
000217BA <AmiBlitz3.ab2@4953>   CLR.l $2(A1)
000217BC <AmiBlitz3.ab2@4956>   MOVEQ.l #$04,D0
000217C0 <AmiBlitz3.ab2@4959>     MOVE.b $1(A1),(A1)+
000217C4 <AmiBlitz3.ab2@4960>   DBF D0,check_for_infoextention__loop
000217C8 <AmiBlitz3.ab2@4965>   LEA str_temp(PC),A1
000217CA <AmiBlitz3.ab2@4966>   MOVE.b (A0),D0
000217CE <AmiBlitz3.ab2@4967>   ORI.b #$20,D0
000217D2 <AmiBlitz3.ab2@4968>   MOVE.b D0,$5(A1)
000217D4 <AmiBlitz3.ab2@4969>   TST.b (A0)+
000217D8 <AmiBlitz3.ab2@4970>    BNE.w check_for_infoextention__loop2
000217DC <AmiBlitz3.ab2@4971>   CMPI.w #$2E69,(A1)+                                      ;".i"
000217E0 <AmiBlitz3.ab2@4972>    BNE.w check_for_infoextention__no
000217E6 <AmiBlitz3.ab2@4973>   CMPI.l #$6E666F20,(A1)                                   ;"nfo "
000217E8 <AmiBlitz3.ab2@4976> RTS
000217EC <AmiBlitz3.ab2@4980>   BPL.w gettokeps__evaltoke
000217EE <AmiBlitz3.ab2@4981>   MOVE.w D0,D1
000217F2 <AmiBlitz3.ab2@4982>   ANDI.w #$7F80,D1
000217F6 <AmiBlitz3.ab2@4983>    BEQ.w tokeerr
000217FA <AmiBlitz3.ab2@4984>   BCLR #$F,D0
000217FC <AmiBlitz3.ab2@4985>   MOVE.w D0,D4                                             ;got toke number
00021800 <AmiBlitz3.ab2@4986>   BSR.w get1bytemain
00021804 <AmiBlitz3.ab2@4987> BRA.w gettokeps__gotnum
0002180A <AmiBlitz3.ab2@4990>   JSR JL_0_BF6A
00021810 <AmiBlitz3.ab2@4991>   CMP.l #MaxWord,D3
00021814 <AmiBlitz3.ab2@4992>    BHI.w tokeerr
00021816 <AmiBlitz3.ab2@4993>   TST.w D6
0002181A <AmiBlitz3.ab2@4994>    BNE.w tokeerr
0002181C <AmiBlitz3.ab2@4995>   MOVE.w D3,D4
0002181E <AmiBlitz3.ab2@4998>   MOVEQ.l #$00,D5
00021822 <AmiBlitz3.ab2@4999>   CMP.w #$2C,D0
00021826 <AmiBlitz3.ab2@5000>    BNE.w gettokeps__gotfrom
00021828 <AmiBlitz3.ab2@5001>   MOVE.w D4,-(A7)
0002182E <AmiBlitz3.ab2@5002>    JSR AJL_0_BF6E
00021834 <AmiBlitz3.ab2@5003>   CMP.l #MaxWord,D3
00021838 <AmiBlitz3.ab2@5004>    BHI.w tokeerr
0002183A <AmiBlitz3.ab2@5005>   TST.w D6
0002183E <AmiBlitz3.ab2@5006>    BNE.w tokeerr
00021840 <AmiBlitz3.ab2@5007>   MOVE.w D3,D5
00021842 <AmiBlitz3.ab2@5008>   MOVE.w (A7)+,D4
00021844 <AmiBlitz3.ab2@5011> RTS                                                        ;d4=toke, d5=form
00021846 <AmiBlitz3.ab2@5015>   TST.w D0
0002184A <AmiBlitz3.ab2@5016>    BSR.w gettokeps
0002184E <AmiBlitz3.ab2@5017>   MOVE.w #$4EB9,D1
00021854 <AmiBlitz3.ab2@5018>   JSR writeword
00021858 <AmiBlitz3.ab2@5019>   BSR.w addoff
0002185A <AmiBlitz3.ab2@5020>   MOVE.w D5,D1
0002185E <AmiBlitz3.ab2@5021>   ORI.w #$8000,D1                                          ;Toke of Amiga type.
00021860 <AmiBlitz3.ab2@5022>   SWAP D1
00021862 <AmiBlitz3.ab2@5023>   MOVE.w D4,D1
00021868 <AmiBlitz3.ab2@5024> JMP writelong
0002186A <AmiBlitz3.ab2@5028>   TST.w D0
0002186E <AmiBlitz3.ab2@5029>    BSR.w gettokeps
00021872 <AmiBlitz3.ab2@5030>   MOVE.w #$4EB9,D1
00021878 <AmiBlitz3.ab2@5031>   JSR writeword
0002187C <AmiBlitz3.ab2@5032>   BSR.w addoff
0002187E <AmiBlitz3.ab2@5033>   MOVE.w D5,D1
00021882 <AmiBlitz3.ab2@5034>   ORI.w #$C000,D1                                          ;Toke of Blitz type.
00021884 <AmiBlitz3.ab2@5035>   SWAP D1
00021886 <AmiBlitz3.ab2@5036>   MOVE.w D4,D1
0002188C <AmiBlitz3.ab2@5037>   JMP writelong
00021892 <AmiBlitz3.ab2@5041>   JSR JL_0_BF6A
00021898 <AmiBlitz3.ab2@5042>   CMP.l #$10000,D3
0002189C <AmiBlitz3.ab2@5043>    BCC.w tokeerr
0002189E <AmiBlitz3.ab2@5044>   MOVE.w D3,D1
000218A4 <AmiBlitz3.ab2@5045> JMP Atokejsr
000218A8 <AmiBlitz3.ab2@5049>   BSR.w gettokeps
000218AC <AmiBlitz3.ab2@5050>   MOVE.w #$4EB9,D1
000218B2 <AmiBlitz3.ab2@5051>   JSR writeword
000218B8 <AmiBlitz3.ab2@5052>   MOVE.l destpointer,D3
000218C0 <AmiBlitz3.ab2@5053>   BTST #$7,blitzmode
000218C4 <AmiBlitz3.ab2@5054>    BEQ.w do_TokeJsr__inamiga
000218C8 <AmiBlitz3.ab2@5055>   BSET #$E,D5
000218CC <AmiBlitz3.ab2@5058>   BSR.w JL_0_6E86
000218D0 <AmiBlitz3.ab2@5059>   BSR.w addoff
000218D6 <AmiBlitz3.ab2@5060>   JMP writelong
000218DA <AmiBlitz3.ab2@5064>   BEQ.w do_VWait__zero
000218DC <AmiBlitz3.ab2@5065>   MOVEQ.l #$02,D2                                          ;get a word
000218E2 <AmiBlitz3.ab2@5067>   JSR bakeval
000218E6 <AmiBlitz3.ab2@5068>   MOVE.w fvwait(PC),D1
000218EA <AmiBlitz3.ab2@5069> BRA.w do_VWait__vcont
000218EE <AmiBlitz3.ab2@5072>   MOVE.w #$7000,D1                                         ;moveq #0,d0
000218F4 <AmiBlitz3.ab2@5075>   JSR writeword
000218F8 <AmiBlitz3.ab2@5076>   MOVE.w #$C104,D1
000218FE <AmiBlitz3.ab2@5077> JMP Atokejsr
00021900 <AmiBlitz3.ab2@5081>   SUBQ.w #1,D0
00021906 <AmiBlitz3.ab2@5084>   Dc.w $3b7c,$ffff,0                                       ;move.w #$FFFF,$0(A5) ;noopt
0002190A <AmiBlitz3.ab2@5087>   Dc.l $426d0001                                           ;clr.w $0(A5)
0002190E <AmiBlitz3.ab2@5091>   MOVE.b debugmode(PC),D1
00021912 <AmiBlitz3.ab2@5092>   BEQ.b debugmode_codelabel__skip
00021916 <AmiBlitz3.ab2@5093>   MOVE.w #$D500,D1
0002191C <AmiBlitz3.ab2@5094> JMP Atokejsr
0002191E <AmiBlitz3.ab2@5097> RTS
00021926 <AmiBlitz3.ab2@5101>   BSET #$0,blitzmode
0002192E <AmiBlitz3.ab2@5102>   BSET #$7,blitzmode
00021932 <AmiBlitz3.ab2@5103>   MOVE.w #$C200,D1
00021938 <AmiBlitz3.ab2@5104>   JSR Atokejsr
0002193E <AmiBlitz3.ab2@5105>   TST.b debugmode
00021942 <AmiBlitz3.ab2@5106>    BEQ.w do_BLITZ__done
00021946 <AmiBlitz3.ab2@5107>   MOVE.w cgoblitz(PC),D1
0002194C <AmiBlitz3.ab2@5108>   JSR writeword
0002194E <AmiBlitz3.ab2@5109>   MOVEQ.l #-$01,D1
00021954 <AmiBlitz3.ab2@5110>   JSR writeword
0002195A <AmiBlitz3.ab2@5111>   JSR getbbase
00021960 <AmiBlitz3.ab2@5112>   JSR writeword
00021964 <AmiBlitz3.ab2@5115> BRA.w debugmode_codelabel
00021968 <AmiBlitz3.ab2@5119>   MOVE.w #$C201,D1
0002196C <AmiBlitz3.ab2@5120> BRA.w do_AMIGA__toamode
00021970 <AmiBlitz3.ab2@5124>   MOVE.W  #$C202,D1
00021978 <AmiBlitz3.ab2@5127>   BSET #$0,blitzmode
00021980 <AmiBlitz3.ab2@5128>   BCLR #$7,blitzmode
00021986 <AmiBlitz3.ab2@5129>   JSR Atokejsr
0002198C <AmiBlitz3.ab2@5130>   TST.b debugmode
00021990 <AmiBlitz3.ab2@5131>    BEQ.w do_AMIGA__done
00021994 <AmiBlitz3.ab2@5132>   MOVE.w cgoamiga(PC),D1
0002199A <AmiBlitz3.ab2@5133>   JSR writeword
000219A0 <AmiBlitz3.ab2@5134>   JSR getbbase
000219A6 <AmiBlitz3.ab2@5135>   JSR writeword
000219AA <AmiBlitz3.ab2@5138> BRA.w debugmode_codelabel
000219AE <AmiBlitz3.ab2@5142>   MOVEM.l D2-D7/A2-A4,-(A7)
000219B2 <AmiBlitz3.ab2@5145>   MOVEM.l (A7)+,D2-D7/A2-A4
000219B8 <AmiBlitz3.ab2@5149>   JSR JL_0_BF6A
000219BE <AmiBlitz3.ab2@5150>   CMP.l #$E,D3
000219C2 <AmiBlitz3.ab2@5151>    BCC.w interr4
000219C6 <AmiBlitz3.ab2@5152>   MOVE.w #$7000,D1
000219C8 <AmiBlitz3.ab2@5153>   OR.w D3,D1
000219CE <AmiBlitz3.ab2@5154>   JSR writeword
000219D2 <AmiBlitz3.ab2@5155>   MOVE.w #$C101,D1
000219D8 <AmiBlitz3.ab2@5156> JMP Atokejsr                                               ;clear the interupt
000219DA <AmiBlitz3.ab2@5159> inerr:       Ds.w 1                                        ;flag - in error trap mode
000219DE <AmiBlitz3.ab2@5160> errjmp:      Ds.l 1                                        ;where err jump is
000219E2 <AmiBlitz3.ab2@5161> errcode:     Ds.l 1
000219E6 <AmiBlitz3.ab2@5165>   MOVE.W  #$D202,D1
000219EC <AmiBlitz3.ab2@5166> JMP Atokejsr                                               ;BRA.W Atokejsr
000219F0 <AmiBlitz3.ab2@5170>   MOVE.w inerr(PC),D1
000219F4 <AmiBlitz3.ab2@5171>    BEQ.w errerr3
000219FA <AmiBlitz3.ab2@5172>   CLR.w inerr
00021A00 <AmiBlitz3.ab2@5173>   MOVE.w dontwrite,D1
00021A04 <AmiBlitz3.ab2@5174>    BNE.w doendseterr__skip
00021A08 <AmiBlitz3.ab2@5175>   MOVEA.l errjmp(PC),A0
00021A0E <AmiBlitz3.ab2@5176>   MOVE.l destpointer,(A0)
00021A12 <AmiBlitz3.ab2@5179> BRA.w get1bytemain
00021A16 <AmiBlitz3.ab2@5183>   MOVE.w #$D205,D1
00021A1C <AmiBlitz3.ab2@5184> JMP Atokejsr
00021A22 <AmiBlitz3.ab2@5188>   MOVE.w proceduremode,D1
00021A26 <AmiBlitz3.ab2@5189>    BNE.w errerr1
00021A2A <AmiBlitz3.ab2@5190>   MOVE.w inerr(PC),D1
00021A2E <AmiBlitz3.ab2@5191>    BNE.w errerr2
00021A34 <AmiBlitz3.ab2@5192>   LEA inerr,a0
00021A36 <AmiBlitz3.ab2@5193>   NOT.w (a0)                                               ;reass
00021A3A <AmiBlitz3.ab2@5194>   MOVE.w #$203C,D1                                         ;move.l #x,d0
00021A40 <AmiBlitz3.ab2@5195>   JSR writeword
00021A4A <AmiBlitz3.ab2@5196>   MOVE.l destpointer,errcode
00021A4E <AmiBlitz3.ab2@5197>   BSR.w addoff
00021A52 <AmiBlitz3.ab2@5198>   BSR.w writelong
00021A56 <AmiBlitz3.ab2@5199>   MOVE.w #$D201,D1
00021A5C <AmiBlitz3.ab2@5200>   JSR Atokejsr
00021A60 <AmiBlitz3.ab2@5201>   MOVE.w #$4EF9,D1                                         ;JMP
00021A64 <AmiBlitz3.ab2@5202>   BSR.w writeword
00021A6E <AmiBlitz3.ab2@5203>   MOVE.l destpointer,errjmp
00021A72 <AmiBlitz3.ab2@5204>   BSR.w addoff
00021A76 <AmiBlitz3.ab2@5205>   BSR.w writelong
00021A7C <AmiBlitz3.ab2@5206>   MOVE.w dontwrite,D1
00021A80 <AmiBlitz3.ab2@5207>    BNE.w do_SetErr__skip
00021A84 <AmiBlitz3.ab2@5208>   MOVEA.l errcode(PC),A0
00021A8A <AmiBlitz3.ab2@5209>   MOVE.l destpointer,(A0)
00021A8C <AmiBlitz3.ab2@5212> RTS
00021A90 <AmiBlitz3.ab2@5215> intlineat:  Ds.l 1
00021A92 <AmiBlitz3.ab2@5219>   MOVEQ.l #-$01,D1                                        ;type - need new string space
00021A96 <AmiBlitz3.ab2@5220>   BSR.w errchx
00021A9C <AmiBlitz3.ab2@5221>   MOVE.w D1,intstring
00021AA6 <AmiBlitz3.ab2@5222>   MOVE.l linenumat,intlineat
00021AAC <AmiBlitz3.ab2@5223>   JSR JL_0_BF6A                                           ;get constant - int level
00021AB2 <AmiBlitz3.ab2@5224>   CMP.l #$E,D3
00021AB6 <AmiBlitz3.ab2@5225>    BCC.w interr4
00021ABC <AmiBlitz3.ab2@5226>   ST intsused
00021AC2 <AmiBlitz3.ab2@5227>   MOVE.w D3,intlevel
00021AC6 <AmiBlitz3.ab2@5228>   MOVE.w #$7000,D1
00021AC8 <AmiBlitz3.ab2@5229>   OR.w D3,D1                                              
00021ACC <AmiBlitz3.ab2@5230>   BSR.w writeword                                         ;moveq #x,d0
00021AD0 <AmiBlitz3.ab2@5231>   MOVE.w #$223C,D1                                        ;move.l #x,d1
00021AD4 <AmiBlitz3.ab2@5232>   BSR.w writeword
00021AD8 <AmiBlitz3.ab2@5233>   BSR.w addoff
00021ADE <AmiBlitz3.ab2@5234>   MOVE.l destpointer,-(A7)
00021AE2 <AmiBlitz3.ab2@5235>   BSR.w writelong
00021AE6 <AmiBlitz3.ab2@5236>   MOVE.w #$C100,D1
00021AEC <AmiBlitz3.ab2@5237>   JSR Atokejsr
00021AF0 <AmiBlitz3.ab2@5238>   MOVE.w #$4EF9,D1                                        ;jmp
00021AF4 <AmiBlitz3.ab2@5239>   BSR.w writeword
00021AF8 <AmiBlitz3.ab2@5240>   BSR.w addoff
00021B02 <AmiBlitz3.ab2@5241>   MOVE.l destpointer,intjmpat
00021B06 <AmiBlitz3.ab2@5242>   BSR.w writelong
00021B08 <AmiBlitz3.ab2@5243>   MOVEA.l (A7)+,A0
00021B0E <AmiBlitz3.ab2@5244>   MOVE.w dontwrite,D1
00021B12 <AmiBlitz3.ab2@5245>   BNE.w do_SetInt__dontpoke
00021B18 <AmiBlitz3.ab2@5246>   MOVE.l destpointer,(A0)
00021B1C <AmiBlitz3.ab2@5249>   MOVE.l intstart0(PC),D1
00021B20 <AmiBlitz3.ab2@5250>   BSR.w writelong
00021B26 <AmiBlitz3.ab2@5251>   TST.b debugmode
00021B2A <AmiBlitz3.ab2@5252>    BEQ.w do_SetInt__norerr
00021B2C <AmiBlitz3.ab2@5256>   MOVEQ.l #$02,D1
00021B30 <AmiBlitz3.ab2@5257>   BSR.w writetrap
00021B34 <AmiBlitz3.ab2@5258>   BSR.w addoff
00021B3E <AmiBlitz3.ab2@5259>   MOVE.l destpointer,intcleanat
00021B42 <AmiBlitz3.ab2@5260>   BSR.w writelong
00021B48 <AmiBlitz3.ab2@5261>   MOVE.w intlevel,D1
00021B4C <AmiBlitz3.ab2@5262>   BSR.w writeword
00021B50 <AmiBlitz3.ab2@5263>   MOVE.w #$C30B,D1                                         ;disable stack checks
00021B56 <AmiBlitz3.ab2@5264>   JSR Atokejsr
00021B5A <AmiBlitz3.ab2@5267>   MOVE.w #$FED3,D1
00021B5E <AmiBlitz3.ab2@5268>   BSR.w uselib
00021B62 <AmiBlitz3.ab2@5269>   MOVE.w #$C102,D1
00021B68 <AmiBlitz3.ab2@5270>   JSR Atokejsr
00021B70 <AmiBlitz3.ab2@5271>   MOVE.w #-1,lasta6
00021B7A <AmiBlitz3.ab2@5272>   MOVE.l linenumat,intline
00021B7C <AmiBlitz3.ab2@5273> RTS
00021B7E <AmiBlitz3.ab2@5277>             Ds.w 1                                         ;??looks like obsolved data??
00021B82 <AmiBlitz3.ab2@5279> intdata1:   Ds.l 1                                         ;where in data1 a5 is being kept
00021B86 <AmiBlitz3.ab2@5281> intjmpat:   Ds.l 1
00021B8A <AmiBlitz3.ab2@5282> intline:    Ds.l 1
00021B8C <AmiBlitz3.ab2@5283> intstring:  Ds.w 1                                         ;flag 0 = no setint
00021B8E <AmiBlitz3.ab2@5286> intlevel:   Ds.w 1
00021B92 <AmiBlitz3.ab2@5287> intcleanat: Ds.l 1
00021B96 <AmiBlitz3.ab2@5288> ret15add:   Ds.l 1
00021B98 <AmiBlitz3.ab2@5289> ret15cc:    Ds.w 1
00021BA0 <AmiBlitz3.ab2@5293>   ADDI.l #$12,$2(A7)
00021BA8 <AmiBlitz3.ab2@5294>   MOVE.l $2(A7),ret15add
00021BAE <AmiBlitz3.ab2@5295>   MOVE.w (A7),ret15cc
00021BB6 <AmiBlitz3.ab2@5296>   MOVE.l #directdo,$2(A7)
00021BB8 <AmiBlitz3.ab2@5297> RTE
00021BBC <AmiBlitz3.ab2@5306>   MOVE.l ret15add(PC),-(A7)
00021BC0 <AmiBlitz3.ab2@5307>   MOVE.w ret15cc(PC),-(A7)                                 ;15*4
00021BC4 <AmiBlitz3.ab2@5308>   MOVEM.l D0-D7/A0-A6,-(A7)
00021BCE <AmiBlitz3.ab2@5309>   MOVE.l destbufferend,trap15temp                          ;store high buff addr
00021BD8 <AmiBlitz3.ab2@5310>   MOVE.l destbufferstart,trap15temp2
00021BE2 <AmiBlitz3.ab2@5311>   MOVE.l libend,templibend
00021BEC <AmiBlitz3.ab2@5312>   MOVE.l data1start,tempdata1start
00021BF2 <AmiBlitz3.ab2@5313>   CLR.l hunkoffsetcounter
00021BF8 <AmiBlitz3.ab2@5315>   MOVE.l directbuffer,a0
00021BFE <AmiBlitz3.ab2@5319>   MOVE.l a0,destbufferstart
00021C04 <AmiBlitz3.ab2@5320>   ADD.l #3900,a0
00021C0A <AmiBlitz3.ab2@5321>   MOVE.l a0,destbufferend
00021C10 <AmiBlitz3.ab2@5322>   TST.b exdebug
00021C14 <AmiBlitz3.ab2@5323>   BEQ 'l1
00021C1A <AmiBlitz3.ab2@5324>   MOVE.l a0,libend
00021C20 <AmiBlitz3.ab2@5325>   ADD.l #4000,a0
00021C26 <AmiBlitz3.ab2@5326>   MOVE.l a0,data1start
00021C30 <AmiBlitz3.ab2@5329>   MOVE.l #dircont,errcont
00021C36 <AmiBlitz3.ab2@5330>   MOVE.l A7,errstack
00021C3E <AmiBlitz3.ab2@5331>   MOVE.w #$FFFF,dirmode
00021C42 <AmiBlitz3.ab2@5333>     MOVEA.l ret15add(PC),A1
00021C48 <AmiBlitz3.ab2@5334>     MOVE.w -(A1),blitzmode
00021C4A <AmiBlitz3.ab2@5335>     CLR.l -(A1)
00021C50 <AmiBlitz3.ab2@5336>     MOVE.l -(A1),firstglob
00021C56 <AmiBlitz3.ab2@5337>     MOVE.l -(A1),firstlocal
00021C5C <AmiBlitz3.ab2@5339>   CLR.w proceduremode
00021C62 <AmiBlitz3.ab2@5340>   MOVE.l firstglob,D0
00021C68 <AmiBlitz3.ab2@5341>   OR.l firstlocal,D0
00021C6C <AmiBlitz3.ab2@5342>   BEQ.b directdo__skip
00021C72 <AmiBlitz3.ab2@5343>   NOT.w proceduremode
00021C74 <AmiBlitz3.ab2@5346>   MOVEA.l -(A1),A0                                         ;address of string
00021C76 <AmiBlitz3.ab2@5350>   MOVE.l A0,-(A7)
00021CB4 <AmiBlitz3.ab2@5353>   !ComData_GetL{comFunc_DebugTrap,A1}
00021CB6 <AmiBlitz3.ab2@5356>   JSR (A1)                                                 ;tokenise line.....
00021CB8 <AmiBlitz3.ab2@5357>   MOVEA.l (A7)+,A5
00021CC2 <AmiBlitz3.ab2@5358>   MOVE.l directbuffer,destpointer
00021CC8 <AmiBlitz3.ab2@5359>   TST.b exdebug
00021CCC <AmiBlitz3.ab2@5360>   BEQ 'noexdebug
00021CCE <AmiBlitz3.ab2@5361>   MOVE.l a5,a0
00021CD4 <AmiBlitz3.ab2@5362>   MOVE.l #200,d0
00021CDA <AmiBlitz3.ab2@5365>     MOVE.b 0(a0,d0.l),8(a0,d0.l)
00021CDE <AmiBlitz3.ab2@5366>   DBF d0,'l1
00021CE4 <AmiBlitz3.ab2@5371>   MOVE.l destpointer,a0
00021CE8 <AmiBlitz3.ab2@5372>   MOVE.w #$207c,(a0)+
00021CEA <AmiBlitz3.ab2@5373>   MOVE.l a5,d0
00021CF0 <AmiBlitz3.ab2@5374>   ADD.l #$206,d0                                           ;constant from debuglib
00021CF2 <AmiBlitz3.ab2@5375>   MOVE.l d0,(a0)+
00021CF8 <AmiBlitz3.ab2@5376>   MOVE.l a0,destpointer
00021CFA <AmiBlitz3.ab2@5377>   MOVE.l a5,a0
00021CFE <AmiBlitz3.ab2@5378>   MOVE.w #$8039,(a0)+                                      ;TokeJsr 164 (inputoutputlib) LSL 7+4
00021D04 <AmiBlitz3.ab2@5379>   MOVE.l #"$520",(a0)+
00021D08 <AmiBlitz3.ab2@5380>   MOVE.w #"4:",(a0)+
00021D0E <AmiBlitz3.ab2@5383>   CLR.w dontwrite
00021D16 <AmiBlitz3.ab2@5384>   MOVE.w #$FFFF,lasta6
00021D1A <AmiBlitz3.ab2@5385>   BSR.w compile_line                                        ;.....compile it
00021D20 <AmiBlitz3.ab2@5386>   TST.b exdebug
00021D24 <AmiBlitz3.ab2@5387>   BEQ 'noexdebug2
00021D2A <AmiBlitz3.ab2@5388>   JSR JL_0_6C76
00021D30 <AmiBlitz3.ab2@5391>   CLR.w proceduremode
00021D34 <AmiBlitz3.ab2@5392>   BSR.w errchx
00021D38 <AmiBlitz3.ab2@5393>   MOVE.w #$4EF9,D1
00021D3C <AmiBlitz3.ab2@5394>   BSR.w writeword                                          ;JMP
00021D40 <AmiBlitz3.ab2@5395>   MOVE.l ret15add(PC),D1
00021D44 <AmiBlitz3.ab2@5396>   BSR.w writelong                                          ;jmp to done
00021D4A <AmiBlitz3.ab2@5397>   MOVE.w dontwrite,D0
00021D4E <AmiBlitz3.ab2@5398>    BNE.w nodirmem
00021D56 <AmiBlitz3.ab2@5399>   MOVE.l directbuffer,$3E(A7)                              ;install code address
00021D5C <AmiBlitz3.ab2@5402>   CLR.w dirmode
00021D62 <AmiBlitz3.ab2@5403>   MOVE.w ret15cc(PC),$3C(A7)
00021D6C <AmiBlitz3.ab2@5404>   MOVE.l trap15temp,destbufferend
00021D76 <AmiBlitz3.ab2@5405>   MOVE.l trap15temp2,destbufferstart
00021D80 <AmiBlitz3.ab2@5406>   MOVE.l tempdata1start,data1start
00021D8A <AmiBlitz3.ab2@5407>   MOVE.l templibend,libend
00021D8E <AmiBlitz3.ab2@5408>   MOVEM.l (A7)+,D0-D7/A0-A6
00021D92 <AmiBlitz3.ab2@5409>   BSR.w Aclearcache                                        ;selden used
00021D94 <AmiBlitz3.ab2@5410> RTR
00021D98 <AmiBlitz3.ab2@5413>   MOVEA.l ret15add(PC),A0
00021D9A <AmiBlitz3.ab2@5414>   SUBQ.w #2,A0
00021D9C <AmiBlitz3.ab2@5415>   MOVE.l D0,-(A0)
00021DA0 <AmiBlitz3.ab2@5416> BRA.w direxit
00021DA4 <AmiBlitz3.ab2@5420>   MOVE.w $6(A3),D1
00021DA8 <AmiBlitz3.ab2@5421>   BSR.w uselib                                             ;get lib for base address
00021DAC <AmiBlitz3.ab2@5422>   MOVE.w $A(A1),-(A7)                                      ;libbase reg
00021DAE <AmiBlitz3.ab2@5423>   ADDQ.w #8,A3
00021DB0 <AmiBlitz3.ab2@5424>   MOVE.w (A3)+,-(A7)                                       ;get offset for lib
00021DB2 <AmiBlitz3.ab2@5425>   MOVE.l A3,-(A7)
00021DB4 <AmiBlitz3.ab2@5429>   MOVEQ.l #$00,D3
00021DBA <AmiBlitz3.ab2@5430>   JSR checka4a5
00021DBC <AmiBlitz3.ab2@5432>   MOVE.b (A3)+,D1
00021DC0 <AmiBlitz3.ab2@5433>    BMI.w stamigalib__done
00021DC2 <AmiBlitz3.ab2@5434>   MOVEQ.l #$03,D2
00021DC4 <AmiBlitz3.ab2@5435>   ADDQ.w #1,D3
00021DC8 <AmiBlitz3.ab2@5436>   MOVEM.l D3/A3,-(A7)
00021DCE <AmiBlitz3.ab2@5437>   MOVE.b funcparloop,-(a7)
00021DD6 <AmiBlitz3.ab2@5438>   MOVE.b #0,funcparloop
00021DDC <AmiBlitz3.ab2@5439>   MOVE.l leftsidetype,-(a7)
00021DE2 <AmiBlitz3.ab2@5440>   MOVE.l rightsidetype,-(a7)
00021DE8 <AmiBlitz3.ab2@5441>   CLR.l leftsidetype
00021DEE <AmiBlitz3.ab2@5442>   CLR.l rightsidetype
00021DF4 <AmiBlitz3.ab2@5443>   MOVE.b blitzparloop,-(a7)
00021DFC <AmiBlitz3.ab2@5444>   MOVE.b #1,blitzparloop                                 ;write the parameter to stack
00021E02 <AmiBlitz3.ab2@5445>   JSR peval
00021E08 <AmiBlitz3.ab2@5446>   MOVE.b (a7)+,blitzparloop
00021E0E <AmiBlitz3.ab2@5447>   MOVE.l (a7)+,rightsidetype
00021E14 <AmiBlitz3.ab2@5448>   MOVE.l (a7)+,leftsidetype
00021E1A <AmiBlitz3.ab2@5449>   MOVE.b (a7)+,funcparloop
00021E1E <AmiBlitz3.ab2@5450>   MOVEM.l (A7)+,D3/A3
00021E22 <AmiBlitz3.ab2@5451>   CMP.w #$2C,D0
00021E26 <AmiBlitz3.ab2@5452>    BEQ.w stamigalib__loop
00021E28 <AmiBlitz3.ab2@5453>   TST.b (A3)
00021E2C <AmiBlitz3.ab2@5454>    BPL.w syntaxerr
00021E2E <AmiBlitz3.ab2@5457>   MOVEA.l (A7)+,A3
00021E30 <AmiBlitz3.ab2@5458>   SUBQ.w #1,D3
00021E34 <AmiBlitz3.ab2@5459>    BPL.w stamigalib__toend
00021E38 <AmiBlitz3.ab2@5460>    BSR.w get1bytemain                                      ;no pars - get :
00021E3C <AmiBlitz3.ab2@5461> BRA.w stamigalib__nopars
00021E3E <AmiBlitz3.ab2@5464>   TST.b (A3)+                                              ;go to end of params
00021E42 <AmiBlitz3.ab2@5465>    BPL.w stamigalib__toend
00021E44 <AmiBlitz3.ab2@5466>   SUBQ.w #1,A3
00021E46 <AmiBlitz3.ab2@5469>    MOVEQ.l #$00,D1
00021E48 <AmiBlitz3.ab2@5470>    MOVE.b -(A3),D1
00021E4C <AmiBlitz3.ab2@5471>    BTST #$4,D1
00021E50 <AmiBlitz3.ab2@5472>     BNE.w stamigalib__addreg
00021E52 <AmiBlitz3.ab2@5473>    LSL.w #8,D1
00021E54 <AmiBlitz3.ab2@5474>    LSL.w #1,D1
00021E58 <AmiBlitz3.ab2@5475>    ORI.w #$201F,D1
00021E5C <AmiBlitz3.ab2@5476>  BRA.w stamigalib__gotit
00021E60 <AmiBlitz3.ab2@5479>    ANDI.w #$7,D1
00021E62 <AmiBlitz3.ab2@5480>    LSL.w #8,D1
00021E64 <AmiBlitz3.ab2@5481>    LSL.w #1,D1
00021E68 <AmiBlitz3.ab2@5482>    ORI.w #$205F,D1
00021E6C <AmiBlitz3.ab2@5485>     BSR.w writeword
00021E70 <AmiBlitz3.ab2@5486>   DBF D3,stamigalib__loop2
00021E76 <AmiBlitz3.ab2@5489>   MOVE.w (A7)+,libjsr+2
00021E7C <AmiBlitz3.ab2@5490>   MOVE.w (A7)+,libbase+2
00021E82 <AmiBlitz3.ab2@5491>   MOVE.l libbase,D1
00021E86 <AmiBlitz3.ab2@5492>    BSR.w writelong
00021E8C <AmiBlitz3.ab2@5493>   MOVE.l libjsr,D1
00021E92 <AmiBlitz3.ab2@5494>   JSR writelong
00021E98 <AmiBlitz3.ab2@5495>   JSR restorea4a5
00021E9A <AmiBlitz3.ab2@5496>   RTS
00021EA0 <AmiBlitz3.ab2@5499>   MOVE.l data1,D4
00021EA6 <AmiBlitz3.ab2@5500>   SUB.l data1start,D4
00021EAC <AmiBlitz3.ab2@5501>   ADD.l #10000,d4
00021EB2 <AmiBlitz3.ab2@5502>   MOVE.l libend,D3
00021EB8 <AmiBlitz3.ab2@5503>   SUB.l destbufferend,D3
00021EBE <AmiBlitz3.ab2@5504>   ADD.l #40000,d3
00021EC4 <AmiBlitz3.ab2@5505>   MOVE.l bigpc,D2
00021ECA <AmiBlitz3.ab2@5506>   SUB.l destbufferstart,D2
00021ED0 <AmiBlitz3.ab2@5507>   ADD.l #20000,d2
00021ED6 <AmiBlitz3.ab2@5508>   MOVE.l databuffer,D5
00021EDC <AmiBlitz3.ab2@5509>   ADD.l #10000,D5
00021EE0 <AmiBlitz3.ab2@5510> BRA newallox
00021EE6 <AmiBlitz3.ab2@5514>   MOVE.l objectbuffer,D2
00021EE8 <AmiBlitz3.ab2@5515>   LSR.l #1,D2
00021EEE <AmiBlitz3.ab2@5516>   ADD.l objectbuffer,D2
00021EF4 <AmiBlitz3.ab2@5517>   MOVE.l libsbuffer,D3
00021EF6 <AmiBlitz3.ab2@5518>   LSR.l #1,D3
00021EFC <AmiBlitz3.ab2@5519>   ADD.l libsbuffer,D3
00021F02 <AmiBlitz3.ab2@5520>   MOVE.l systembuffer,D4
00021F04 <AmiBlitz3.ab2@5521>   LSR.l #1,D4
00021F0A <AmiBlitz3.ab2@5522>   ADD.l systembuffer,D4
00021F10 <AmiBlitz3.ab2@5523>   MOVE.l databuffer,D5
00021F12 <AmiBlitz3.ab2@5524>   LSR.l #1,D5
00021F18 <AmiBlitz3.ab2@5525>   ADD.l databuffer,D5
00021F1C <AmiBlitz3.ab2@5526> BRA.w newallox
00021F22 <AmiBlitz3.ab2@5530>   MOVE.l bigpc,D2
00021F28 <AmiBlitz3.ab2@5531>   SUB.l destbufferstart,D2                                     ;size of object buffer
00021F2E <AmiBlitz3.ab2@5532>   SUB.l savefuncspace,d2
00021F34 <AmiBlitz3.ab2@5534>   TST.w debugversion
00021F38 <AmiBlitz3.ab2@5535>    BNE.b alloxadj__skip
00021F3E <AmiBlitz3.ab2@5536>   ADDI.l #$800,D2
00021F44 <AmiBlitz3.ab2@5539>   MOVE.l libend,D3
00021F4A <AmiBlitz3.ab2@5540>   SUB.l destbufferend,D3
00021F50 <AmiBlitz3.ab2@5542>   MOVE.l data1,D4
00021F56 <AmiBlitz3.ab2@5543>   SUB.l data1start,D4
00021F5C <AmiBlitz3.ab2@5545>   MOVE.l data2,D5
00021F62 <AmiBlitz3.ab2@5546>   SUB.l data2at,D5
00021F68 <AmiBlitz3.ab2@5548>   CLR.l morememadd
00021F6C <AmiBlitz3.ab2@5551>   BSR.w makeallox
00021F70 <AmiBlitz3.ab2@5552>   BNE.w newallox__done
00021F74 <AmiBlitz3.ab2@5553> BRA.w init_buffers
00021F76 <AmiBlitz3.ab2@5556> RTS
00021F7C <AmiBlitz3.ab2@5560>   MOVEA.l _execbase,A6
00021F82 <AmiBlitz3.ab2@5561>   MOVE.l objlen,D0
00021F86 <AmiBlitz3.ab2@5562>   BEQ.w freeallox__skip
00021F8C <AmiBlitz3.ab2@5563>   CLR.l objlen
00021F92 <AmiBlitz3.ab2@5564>   MOVEA.l destbufferstart,A1
00021F98 <AmiBlitz3.ab2@5565>   MOVE.l mempool,a0
00021F9C <AmiBlitz3.ab2@5566> JMP _FreeVec(A6)
00021F9E <AmiBlitz3.ab2@5569> RTS
00021FA4 <AmiBlitz3.ab2@5573>   MOVE.l objectbuffer,D2
00021FAA <AmiBlitz3.ab2@5574>   MOVE.l libsbuffer,D3
00021FB0 <AmiBlitz3.ab2@5575>   MOVE.l systembuffer,D4
00021FB6 <AmiBlitz3.ab2@5576>   MOVE.l databuffer,D5
00021FBE <AmiBlitz3.ab2@5579>   MOVE.w #$FFFF,anyerrs
00021FC2 <AmiBlitz3.ab2@5580>   BSR.w freeallox
00021FC4 <AmiBlitz3.ab2@5584>   ADDQ.l #1,D2
00021FC8 <AmiBlitz3.ab2@5585>   BCLR #$0,D2
00021FCA <AmiBlitz3.ab2@5586>   ADDQ.l #1,D3
00021FCE <AmiBlitz3.ab2@5587>   BCLR #$0,D3
00021FD0 <AmiBlitz3.ab2@5588>   ADDQ.l #1,D4
00021FD4 <AmiBlitz3.ab2@5589>   BCLR #$0,D4
00021FD6 <AmiBlitz3.ab2@5590>   TST.l d5
00021FDA <AmiBlitz3.ab2@5591>   BNE 'l1
00021FDC <AmiBlitz3.ab2@5594>   ADDQ.l #1,D5
00021FE0 <AmiBlitz3.ab2@5595>   BCLR #$0,D5
00021FE2 <AmiBlitz3.ab2@5596>   MOVE.l D2,D0
00021FE4 <AmiBlitz3.ab2@5597>   ADD.l D3,D0
00021FE6 <AmiBlitz3.ab2@5598>   ADD.l D4,D0
00021FE8 <AmiBlitz3.ab2@5599>   ADD.l D5,D0
00021FEE <AmiBlitz3.ab2@5600>   ADD.l #moremem,d0
00021FF0 <AmiBlitz3.ab2@5601>   MOVE.l D0,D6
00021FF6 <AmiBlitz3.ab2@5602>   MOVE.l #MemfPublic_MemfClear,D1
00021FFC <AmiBlitz3.ab2@5603>   MOVE.l mempool,a0
00022002 <AmiBlitz3.ab2@5604>   MOVEA.l _execbase,A6
00022006 <AmiBlitz3.ab2@5605>   JSR _AllocVec(a6)                                        ;alloc mem for objectbuffer
00022008 <AmiBlitz3.ab2@5607>   TST.l D0
0002200C <AmiBlitz3.ab2@5608>   BEQ.w exit_initbuffers
00022012 <AmiBlitz3.ab2@5609>   MOVE.l D6,objlen
00022018 <AmiBlitz3.ab2@5610>   MOVE.l D2,objectbuffer
0002201E <AmiBlitz3.ab2@5611>   MOVE.l D3,libsbuffer
00022024 <AmiBlitz3.ab2@5612>   MOVE.l D4,systembuffer
0002202A <AmiBlitz3.ab2@5613>   MOVE.l D5,databuffer
00022030 <AmiBlitz3.ab2@5614>   MOVE.l D0,destbufferstart
00022064 <AmiBlitz3.ab2@5617>   !ComData_SetL{comPtr_DestBufferStart,D0}
00022066 <AmiBlitz3.ab2@5618>   ADD.l D2,D0
0002206C <AmiBlitz3.ab2@5619>   MOVE.l D0,destbufferend
0002206E <AmiBlitz3.ab2@5620>   ADD.l D3,D0
00022074 <AmiBlitz3.ab2@5621>   MOVE.l D0,data1start
00022076 <AmiBlitz3.ab2@5622>   ADD.l D4,D0
0002207C <AmiBlitz3.ab2@5623>   MOVE.l D0,data2at
0002207E <AmiBlitz3.ab2@5624>   ADD.l D5,D0
00022084 <AmiBlitz3.ab2@5625>   MOVE.l D0,allat
00022086 <AmiBlitz3.ab2@5628> RTS
0002208A <AmiBlitz3.ab2@5632>   Dc.b $00,$00,$00,$01                                     ;         1
0002208E <AmiBlitz3.ab2@5633>   Dc.b $00,$00,$00,$0A                                     ;        10
00022092 <AmiBlitz3.ab2@5634>   Dc.b $00,$00,$00,$64                                     ;       100
00022096 <AmiBlitz3.ab2@5635>   Dc.b $00,$00,$03,$E8                                     ;      1000
0002209A <AmiBlitz3.ab2@5636>   Dc.b $00,$00,$27,$10                                     ;     10000
0002209E <AmiBlitz3.ab2@5637>   Dc.b $00,$01,$86,$A0                                     ;    100000
000220A2 <AmiBlitz3.ab2@5638>   Dc.b $00,$0F,$42,$40                                     ;   1000000
000220A6 <AmiBlitz3.ab2@5639>   Dc.b $00,$98,$96,$80                                     ;  10000000
000220AA <AmiBlitz3.ab2@5640>   Dc.b $05,$F5,$E1,$00                                     ; 100000000
000220AE <AmiBlitz3.ab2@5641>   Dc.b $3B,$9A,$CA,$00                                     ;1000000000
000220B0 <AmiBlitz3.ab2@5645>   MOVEQ.l #$00,D1                                          ;no zero printed
000220B2 <AmiBlitz3.ab2@5646>   MOVEQ.l #$24,D3                                          ; "$"
000220B4 <AmiBlitz3.ab2@5649>   MOVEQ.l #$30,D4                                          ; "0"
000220B8 <AmiBlitz3.ab2@5652>     CMP.l divisors(PC,D3.W),D2
000220BC <AmiBlitz3.ab2@5653>     BCS.w makelong__skip
000220C0 <AmiBlitz3.ab2@5654>     SUB.l divisors(PC,D3.W),D2
000220C2 <AmiBlitz3.ab2@5655>     ADDQ.w #1,D4
000220C6 <AmiBlitz3.ab2@5656> BRA.w makelong__loop2
000220CA <AmiBlitz3.ab2@5659>   CMP.b #"0",D4
000220CE <AmiBlitz3.ab2@5660>   BNE.w makelong__doit
000220D0 <AmiBlitz3.ab2@5661>   TST.w D1
000220D4 <AmiBlitz3.ab2@5662>   BEQ.w makelong__skip2
000220D6 <AmiBlitz3.ab2@5665>   MOVE.b D4,(A0)+
000220D8 <AmiBlitz3.ab2@5666>   MOVEQ.l #$01,D1
000220DA <AmiBlitz3.ab2@5669>   SUBQ.w #4,D3
000220DE <AmiBlitz3.ab2@5670>   BPL.w makelong__loop
000220E0 <AmiBlitz3.ab2@5671>   TST.w D1
000220E4 <AmiBlitz3.ab2@5672>   BNE.w makelong__skip3
000220E8 <AmiBlitz3.ab2@5673>   MOVE.b #"0",(A0)+
000220EA <AmiBlitz3.ab2@5676>   CLR.b (A0)
000220EC <AmiBlitz3.ab2@5677> RTS
0002210C <AmiBlitz3.ab2@5680> str_residentrequester:  Dc.b "Name of Resident File to Create",0 : Even        ;restext org source
000221CC <AmiBlitz3.ab2@5681> str_residentpath:       Ds.l 48                                                ;respath org source
0002228C <AmiBlitz3.ab2@5682> str_residentname:       Ds.l 48                                                ;resname org source
00022292 <AmiBlitz3.ab2@5686>   MOVE.l macrobase,D0
00022296 <AmiBlitz3.ab2@5687>    BNE.w create_residentfile
0002229C <AmiBlitz3.ab2@5688>   MOVE.l newtype_string,D0
000222A0 <AmiBlitz3.ab2@5689>    BNE.w create_residentfile
000222A6 <AmiBlitz3.ab2@5690>   MOVEA.l labelbase,A2
000222AA <AmiBlitz3.ab2@5693>     CMPA.w #$0,A2
000222AE <AmiBlitz3.ab2@5694>      BEQ.w menu_createresidentfile__err
000222B6 <AmiBlitz3.ab2@5695>     CMPI.l #$1,$4(A2)
000222BA <AmiBlitz3.ab2@5696>      BEQ.w create_residentfile
000222BC <AmiBlitz3.ab2@5697>     MOVEA.l (A2),A2
000222C0 <AmiBlitz3.ab2@5698> BRA.w menu_createresidentfile__loop
000222EA <AmiBlitz3.ab2@5701>   !basic
0002234C <AmiBlitz3.ab2@5702> 
0002236A <AmiBlitz3.ab2@5703>   !asm
0002236C <AmiBlitz3.ab2@5704> RTS
000223AA <AmiBlitz3.ab2@5710>   !ComData_GetL{comFunc_ASLFileRequest,A3}
000223B0 <AmiBlitz3.ab2@5711>   LEA str_residentrequester,A2
000223B6 <AmiBlitz3.ab2@5712>   LEA str_residentpath,A0
000223BC <AmiBlitz3.ab2@5713>   LEA str_residentname,A1
000223E6 <AmiBlitz3.ab2@5714>   !basic
0002241E <AmiBlitz3.ab2@5715>     Poke$ ?str_residentpath,my_residentsdir$
0002244A <AmiBlitz3.ab2@5716>     Poke$ ?str_residentname,".res"
00022468 <AmiBlitz3.ab2@5717>   !asm
0002246A <AmiBlitz3.ab2@5720>   JSR (A3)
0002246E <AmiBlitz3.ab2@5722>   BEQ.w menu_createresidentfile__err
00022470 <AmiBlitz3.ab2@5725>   MOVE.l D0,D1
00022476 <AmiBlitz3.ab2@5726>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
0002247A <AmiBlitz3.ab2@5727>   MOVEA.l _dosbase(PC),A6
0002247E <AmiBlitz3.ab2@5728>   JSR _Open(A6)
00022480 <AmiBlitz3.ab2@5729>   MOVE.l D0,D7                                             ;handle
00022484 <AmiBlitz3.ab2@5730>   BEQ.w menu_createresidentfile__err
00022488 <AmiBlitz3.ab2@5731>   MOVEM.l d2-d7/a0-a6,-(a7)
0002248E <AmiBlitz3.ab2@5732>   LEA devo,a0
00022494 <AmiBlitz3.ab2@5733>   LEA ptr_parameterstore,a1
00022496 <AmiBlitz3.ab2@5736>     MOVE.b (a0)+,(a1)+
0002249A <AmiBlitz3.ab2@5737>   BNE 'l1
0002249C <AmiBlitz3.ab2@5738>   MOVEQ #13,d2
000224A2 <AmiBlitz3.ab2@5739>   JSR findlabel2
000224A6 <AmiBlitz3.ab2@5740>   BNE 'd
000224AA <AmiBlitz3.ab2@5741>   TST.l 8(a2)
000224AE <AmiBlitz3.ab2@5742>   BEQ 'd2
000224D8 <AmiBlitz3.ab2@5743>   !basic
0002253A <AmiBlitz3.ab2@5744>     error{!TRANS{"Cannot create Resident with develope debug 1"}}
00022558 <AmiBlitz3.ab2@5745>   !asm
0002255C <AmiBlitz3.ab2@5746>   MOVEM.l (a7)+,d2-d7/a0-a6
00022560 <AmiBlitz3.ab2@5747>   MOVEA.l _dosbase(PC),A6
00022562 <AmiBlitz3.ab2@5748>   MOVE.l d7,d1
00022566 <AmiBlitz3.ab2@5749>   JSR _Close(a6)
0002256A <AmiBlitz3.ab2@5750> BRA menu_createresidentfile__err
0002256E <AmiBlitz3.ab2@5754>   MOVEM.l (a7)+,d2-d7/a0-a6
00022572 <AmiBlitz3.ab2@5755>   BSR.w call_setpointerbusy
00022576 <AmiBlitz3.ab2@5757>   BSR.w AJL_0_7962
00022578 <AmiBlitz3.ab2@5758>   MOVE.l D7,D1
0002257E <AmiBlitz3.ab2@5759>   MOVE.l #tsthead,D2                                       ;header
00022580 <AmiBlitz3.ab2@5760>   MOVEQ.l #$20,D3
00022584 <AmiBlitz3.ab2@5761>   MOVEA.l _dosbase(PC),A6
00022588 <AmiBlitz3.ab2@5762>   JSR _Write(A6)
0002258A <AmiBlitz3.ab2@5763>   MOVEQ.l #$00,D6                                          ;offset from start of file!
0002258E <AmiBlitz3.ab2@5764>   BSR.w restypes
00022592 <AmiBlitz3.ab2@5765>   BSR.w resmacs
00022596 <AmiBlitz3.ab2@5766>   BSR.w resconsts
00022598 <AmiBlitz3.ab2@5767>   MOVE.l D6,D3
0002259A <AmiBlitz3.ab2@5768>   ADDQ.l #3,D3
000225A0 <AmiBlitz3.ab2@5769>   ANDI.l #$FFFFFFFC,D3                                    ;long word align
000225A2 <AmiBlitz3.ab2@5770>   MOVE.l D3,-(A7)
000225A4 <AmiBlitz3.ab2@5771>   SUB.l D6,D3
000225A8 <AmiBlitz3.ab2@5772>   BEQ.w menu_createresidentfile__noalign
000225AE <AmiBlitz3.ab2@5773>   MOVE.l #writelist,D2
000225B0 <AmiBlitz3.ab2@5774>   MOVE.l D7,D1
000225B6 <AmiBlitz3.ab2@5775>   MOVEA.l _dosbase,A6
000225BA <AmiBlitz3.ab2@5776>   JSR _Write(A6)
000225C4 <AmiBlitz3.ab2@5779>    MOVE.l hunkoffsetcounter,tstsize3
000225C8 <AmiBlitz3.ab2@5780>    BEQ.w menu_createresidentfile__skip2a
000225CA <AmiBlitz3.ab2@5781>   MOVE.l D7,D1
000225D0 <AmiBlitz3.ab2@5782>   MOVE.l #tstend,D2
000225D2 <AmiBlitz3.ab2@5783>   MOVEQ.l #$0C,D3
000225D8 <AmiBlitz3.ab2@5784>   MOVEA.l _dosbase,A6
000225DC <AmiBlitz3.ab2@5785>    JSR _Write(A6)
000225E2 <AmiBlitz3.ab2@5789>   MOVEA.l hunkoffsetbase,A2
000225E6 <AmiBlitz3.ab2@5792>   CMPA.w #$0,A2
000225EA <AmiBlitz3.ab2@5793>    BEQ.w menu_createresidentfile__skip2
000225EE <AmiBlitz3.ab2@5794>   LEA $4(A2),A1
000225F0 <AmiBlitz3.ab2@5795>   MOVE.l D7,D1
000225F2 <AmiBlitz3.ab2@5796>   MOVE.l A1,D2
000225F4 <AmiBlitz3.ab2@5797>   MOVEQ.l #$04,D3
000225FA <AmiBlitz3.ab2@5798>   MOVEA.l _dosbase,A6
000225FE <AmiBlitz3.ab2@5799>    JSR _Write(A6)
00022600 <AmiBlitz3.ab2@5800>   MOVEA.l (A2),A2
00022604 <AmiBlitz3.ab2@5801> BRA.w menu_createresidentfile__oloop
00022606 <AmiBlitz3.ab2@5804>   MOVE.l D7,D1
0002260C <AmiBlitz3.ab2@5805>   MOVE.l #zero,D2
0002260E <AmiBlitz3.ab2@5806>   MOVEQ.l #$04,D3
00022614 <AmiBlitz3.ab2@5807>   MOVEA.l _dosbase,A6
00022618 <AmiBlitz3.ab2@5808>   JSR _Write(A6)
0002261A <AmiBlitz3.ab2@5811>   MOVE.l D7,D1
00022620 <AmiBlitz3.ab2@5812>   MOVE.l #tstdone,D2
00022622 <AmiBlitz3.ab2@5813>   MOVEQ.l #$04,D3
00022628 <AmiBlitz3.ab2@5814>   MOVEA.l _dosbase,A6
0002262C <AmiBlitz3.ab2@5815>    JSR _Write(A6)
0002262E <AmiBlitz3.ab2@5816>   MOVE.l (A7)+,D0
00022630 <AmiBlitz3.ab2@5817>   LSR.l #2,D0
00022636 <AmiBlitz3.ab2@5818>   MOVE.l D0,temp1
00022638 <AmiBlitz3.ab2@5819>   MOVE.l D7,D1
0002263A <AmiBlitz3.ab2@5820>   MOVEQ.l #$14,D2
0002263C <AmiBlitz3.ab2@5821>   MOVEQ.l #-$01,D3
00022640 <AmiBlitz3.ab2@5822>   JSR _Seek(A6)
00022642 <AmiBlitz3.ab2@5823>   MOVE.l D7,D1
00022648 <AmiBlitz3.ab2@5824>   MOVE.l #temp1,D2
0002264A <AmiBlitz3.ab2@5825>   MOVEQ.l #$04,D3
0002264E <AmiBlitz3.ab2@5826>    JSR _Write(A6)
00022650 <AmiBlitz3.ab2@5827>   MOVE.l D7,D1
00022652 <AmiBlitz3.ab2@5828>   MOVEQ.l #$1C,D2
00022654 <AmiBlitz3.ab2@5829>   MOVEQ.l #-$01,D3
00022658 <AmiBlitz3.ab2@5830>    JSR _Seek(A6)
0002265A <AmiBlitz3.ab2@5831>   MOVE.l D7,D1
00022660 <AmiBlitz3.ab2@5832>   MOVE.l #temp1,D2
00022662 <AmiBlitz3.ab2@5833>   MOVEQ.l #$04,D3
00022666 <AmiBlitz3.ab2@5834>    JSR _Write(A6)
00022668 <AmiBlitz3.ab2@5835>   MOVE.l D7,D1
0002266C <AmiBlitz3.ab2@5836>    JSR _Close(A6)
00022670 <AmiBlitz3.ab2@5837> BRA.w call_setpointernormal
00022672 <AmiBlitz3.ab2@5841>   ADDQ.w #5,D1
00022674 <AmiBlitz3.ab2@5842>   ADDQ.b #8,D0
00022678 <AmiBlitz3.ab2@5845>     CMPA.w #$0,A2
0002267C <AmiBlitz3.ab2@5846>     BEQ.w writelist__done
00022680 <AmiBlitz3.ab2@5847>      BSR.w writeitem
00022682 <AmiBlitz3.ab2@5848>     MOVEA.l (A2),A2
00022686 <AmiBlitz3.ab2@5849> BRA.w writelist__loop
00022688 <AmiBlitz3.ab2@5852> RTS
0002268A <AmiBlitz3.ab2@5855>   MOVEQ.l #$00,D3
0002268E <AmiBlitz3.ab2@5856>   MOVE.b $0(A2,D5.W),D3
00022690 <AmiBlitz3.ab2@5857>   ADDQ.w #1,D3
00022694 <AmiBlitz3.ab2@5858>   BCLR #$0,D3                                              ;word align
00022696 <AmiBlitz3.ab2@5859>   MOVE.l (A2),-(A7)
0002269A <AmiBlitz3.ab2@5860>    BEQ.w writeitem__skip
0002269E <AmiBlitz3.ab2@5861>    BSR.w resoff
000226A0 <AmiBlitz3.ab2@5862>   ADD.l D3,D6
000226A2 <AmiBlitz3.ab2@5863>   MOVE.l D6,(A2)
000226A4 <AmiBlitz3.ab2@5864>   SUB.l D3,D6
000226A6 <AmiBlitz3.ab2@5867>    ADD.l D3,D6
000226A8 <AmiBlitz3.ab2@5868>   MOVE.l A2,D2
000226AA <AmiBlitz3.ab2@5869>   MOVE.l D7,D1
000226B0 <AmiBlitz3.ab2@5870>   MOVEA.l _dosbase,A6
000226B4 <AmiBlitz3.ab2@5871>    JSR _Write(A6)
000226B6 <AmiBlitz3.ab2@5872>   MOVE.l (A7)+,(A2)
000226B8 <AmiBlitz3.ab2@5873> RTS
000226BA <AmiBlitz3.ab2@5876>   MOVE.l D6,D2
000226BE <AmiBlitz3.ab2@5877> BRA.w addhunkoffset
000226C2 <AmiBlitz3.ab2@5881>     CMPA.w #$0,A2
000226C6 <AmiBlitz3.ab2@5882>      BEQ.w writeoffs__done
000226CC <AmiBlitz3.ab2@5883>     MOVEA.l newtypebase,A1
000226CE <AmiBlitz3.ab2@5884>     MOVEQ.l #$00,D1
000226D2 <AmiBlitz3.ab2@5887>       CMPA.w #$0,A1
000226D6 <AmiBlitz3.ab2@5888>       BEQ.w writeoffs__found
000226DA <AmiBlitz3.ab2@5889>       CMPA.l $A(A2),A1
000226DE <AmiBlitz3.ab2@5890>        BEQ.w writeoffs__found
000226E0 <AmiBlitz3.ab2@5891>       ADDQ.w #1,D1
000226E2 <AmiBlitz3.ab2@5892>       MOVEA.l (A1),A1
000226E6 <AmiBlitz3.ab2@5893> BRA.w writeoffs__loop2
000226EA <AmiBlitz3.ab2@5896>     MOVE.w $A(A2),-(A7)
000226EE <AmiBlitz3.ab2@5897>     MOVE.w D1,$A(A2)
000226F2 <AmiBlitz3.ab2@5898>      BSR.w writeitem
000226F6 <AmiBlitz3.ab2@5899>     MOVE.w (A7)+,$A(A2)
000226F8 <AmiBlitz3.ab2@5900>     MOVEA.l (A2),A2
000226FC <AmiBlitz3.ab2@5901> BRA.w writeoffs
000226FE <AmiBlitz3.ab2@5904> RTS
00022700 <AmiBlitz3.ab2@5908>   MOVEQ.l #$00,D0
00022704 <AmiBlitz3.ab2@5911>   CMPA.w #$0,A2
00022708 <AmiBlitz3.ab2@5912>    BEQ.w countem__done
0002270A <AmiBlitz3.ab2@5913>   ADDQ.w #1,D0
0002270C <AmiBlitz3.ab2@5914>   MOVEA.l (A2),A2
00022710 <AmiBlitz3.ab2@5915> BRA.w countem__loop
00022716 <AmiBlitz3.ab2@5918>   MOVE.w D0,temp1
00022718 <AmiBlitz3.ab2@5919>   MOVE.l D7,D1
0002271E <AmiBlitz3.ab2@5920>   MOVE.l #temp1,D2
00022720 <AmiBlitz3.ab2@5921>   MOVEQ.l #$02,D3
00022722 <AmiBlitz3.ab2@5922>   ADDQ.l #2,D6
00022728 <AmiBlitz3.ab2@5923>   MOVEA.l _dosbase,A6
0002272C <AmiBlitz3.ab2@5924> JMP _Write(A6)
00022732 <AmiBlitz3.ab2@5928>    TST.b resdisable
00022736 <AmiBlitz3.ab2@5929>    BEQ resmacs__l1
0002273C <AmiBlitz3.ab2@5930>    MOVE.l currentmacroaddr,a3
00022742 <AmiBlitz3.ab2@5931>    CMP.l #0,a3
00022746 <AmiBlitz3.ab2@5932>    BEQ resmacs__l1
00022748 <AmiBlitz3.ab2@5933>    MOVE.l (a3),a3
0002274C <AmiBlitz3.ab2@5934> BRA resmacs__l2
00022752 <AmiBlitz3.ab2@5937>   MOVEA.l macrobase,A3                                     ;??begin org code??
00022754 <AmiBlitz3.ab2@5940>   MOVEA.l A3,A2
00022758 <AmiBlitz3.ab2@5941>   BSR.w countem
0002275C <AmiBlitz3.ab2@5944>    CMPA.w #$0,A3
00022760 <AmiBlitz3.ab2@5945>    BEQ.w resmacs__done
00022762 <AmiBlitz3.ab2@5946>   MOVE.l D6,D5
00022764 <AmiBlitz3.ab2@5947>   MOVE.l (A3),-(A7)
00022768 <AmiBlitz3.ab2@5948>   MOVE.l $4(A3),-(A7)
0002276A <AmiBlitz3.ab2@5949>   MOVEQ.l #$00,D3
0002276E <AmiBlitz3.ab2@5950>   MOVE.b $C(A3),D3
00022770 <AmiBlitz3.ab2@5951>   ADDQ.w #1,D3
00022774 <AmiBlitz3.ab2@5952>   BCLR #$0,D3
00022776 <AmiBlitz3.ab2@5953>   ADD.l D3,D6                                              ;add len of struct
0002277A <AmiBlitz3.ab2@5954>   TST.w $8(A3)
0002277E <AmiBlitz3.ab2@5955>    BEQ.w resmacs__notext
00022782 <AmiBlitz3.ab2@5956>   MOVE.l D6,$4(A3)
00022784 <AmiBlitz3.ab2@5957>   MOVE.l D5,D2
00022786 <AmiBlitz3.ab2@5958>   ADDQ.l #4,D2
0002278A <AmiBlitz3.ab2@5959>    BSR.w addhunkoffset
0002278C <AmiBlitz3.ab2@5962>   MOVEQ.l #$00,D4
00022790 <AmiBlitz3.ab2@5963>   MOVE.w $8(A3),D4
00022792 <AmiBlitz3.ab2@5964>   ADDQ.w #1,D4
00022796 <AmiBlitz3.ab2@5965>   BCLR #$0,D4
00022798 <AmiBlitz3.ab2@5966>   ADD.l D4,D6
0002279A <AmiBlitz3.ab2@5967>   TST.l (A3)
0002279E <AmiBlitz3.ab2@5968>    BEQ.w resmacs__nomore
000227A0 <AmiBlitz3.ab2@5969>   MOVE.l D6,(A3)
000227A2 <AmiBlitz3.ab2@5970>   MOVE.l D5,D2
000227A6 <AmiBlitz3.ab2@5971>    BSR.w addhunkoffset
000227A8 <AmiBlitz3.ab2@5974>   MOVE.l A3,D2
000227AA <AmiBlitz3.ab2@5975>   MOVE.l D7,D1
000227B0 <AmiBlitz3.ab2@5977>    MOVEA.l _dosbase,A6
000227B4 <AmiBlitz3.ab2@5978>    JSR _Write(a6)
000227B6 <AmiBlitz3.ab2@5979>   TST.l D4
000227BA <AmiBlitz3.ab2@5980>    BEQ.w resmacs__skip
000227BC <AmiBlitz3.ab2@5981>   MOVE.l (A7),D2
000227BE <AmiBlitz3.ab2@5982>   MOVE.l D4,D3
000227C0 <AmiBlitz3.ab2@5983>   MOVE.l D7,D1
000227C6 <AmiBlitz3.ab2@5985>     MOVEA.l _dosbase,A6
000227CA <AmiBlitz3.ab2@5986>    JSR _Write(A6)
000227CE <AmiBlitz3.ab2@5989>   MOVE.l (A7)+,$4(A3)
000227D0 <AmiBlitz3.ab2@5990>   MOVE.l (A7)+,(A3)
000227D2 <AmiBlitz3.ab2@5991>   MOVEA.l (A3),A3
000227D6 <AmiBlitz3.ab2@5992> BRA.w resmacs__loop
000227D8 <AmiBlitz3.ab2@5995> RTS
000227DE <AmiBlitz3.ab2@5999>   TST.b resdisable
000227E2 <AmiBlitz3.ab2@6000>   BEQ restypes__l1
000227E8 <AmiBlitz3.ab2@6001>   MOVE.l lastrestype,a3
000227EE <AmiBlitz3.ab2@6002>   CMP.l #0,a3
000227F2 <AmiBlitz3.ab2@6003>   BEQ restypes__l1
000227F4 <AmiBlitz3.ab2@6004>   MOVE.l (a3),a3
000227F8 <AmiBlitz3.ab2@6005> BRA restypes__l2
000227FE <AmiBlitz3.ab2@6008>   MOVEA.l newtype_string,A3
00022800 <AmiBlitz3.ab2@6011>   MOVEA.l A3,A2
00022804 <AmiBlitz3.ab2@6012>    BSR.w countem
00022808 <AmiBlitz3.ab2@6015>    CMPA.w #$0,A3
0002280C <AmiBlitz3.ab2@6016>    BEQ.w restypes__done
0002280E <AmiBlitz3.ab2@6017>   MOVE.l D6,-(A7)
00022812 <AmiBlitz3.ab2@6018>   MOVEA.l $4(A3),A2
00022814 <AmiBlitz3.ab2@6019>   MOVEQ.l #$0E,D5
00022818 <AmiBlitz3.ab2@6020>    BSR.w writeoffs
0002281A <AmiBlitz3.ab2@6021>   MOVE.l (A7)+,D0
0002281E <AmiBlitz3.ab2@6022>   MOVE.l $4(A3),-(A7)
00022822 <AmiBlitz3.ab2@6023>   MOVE.l D0,$4(A3)
00022824 <AmiBlitz3.ab2@6024>   MOVE.l D6,D2
00022826 <AmiBlitz3.ab2@6025>   ADDQ.l #4,D2
0002282A <AmiBlitz3.ab2@6026>    BSR.w addhunkoffset
0002282C <AmiBlitz3.ab2@6027>   MOVEQ.l #$00,D3
00022830 <AmiBlitz3.ab2@6028>   MOVE.b $A(A3),D3
00022832 <AmiBlitz3.ab2@6029>   ADDQ.w #1,D3
00022836 <AmiBlitz3.ab2@6030>   BCLR #$0,D3
00022838 <AmiBlitz3.ab2@6031>   ADD.l D3,D6
0002283A <AmiBlitz3.ab2@6032>   MOVE.l A3,D2
0002283C <AmiBlitz3.ab2@6033>   MOVE.l D7,D1
00022842 <AmiBlitz3.ab2@6035>     MOVEA.l _dosbase,A6
00022846 <AmiBlitz3.ab2@6036>     JSR _Write(A6)
0002284A <AmiBlitz3.ab2@6037>   MOVE.l (A7)+,$4(A3)
0002284C <AmiBlitz3.ab2@6038>   MOVEA.l (A3),A3
00022850 <AmiBlitz3.ab2@6039> BRA.w restypes__loop
00022852 <AmiBlitz3.ab2@6042> RTS
00022858 <AmiBlitz3.ab2@6046>    TST.b resdisable
0002285C <AmiBlitz3.ab2@6047>    BEQ resconsts__l1
00022862 <AmiBlitz3.ab2@6048>    MOVE.l currentlabeladdr,a2
00022868 <AmiBlitz3.ab2@6049>    CMP.l #0,a2
0002286C <AmiBlitz3.ab2@6050>    BEQ resconsts__l1
0002286E <AmiBlitz3.ab2@6051>    MOVE.l (a2),a2
00022872 <AmiBlitz3.ab2@6052> BRA resconsts__l2
00022878 <AmiBlitz3.ab2@6055>    MOVEA.l labelbase,A2
0002287A <AmiBlitz3.ab2@6058>    MOVEQ.l #$00,D0
0002287E <AmiBlitz3.ab2@6061>    CMPA.w #$0,A2
00022882 <AmiBlitz3.ab2@6062>    BEQ.w resconsts__done
0002288A <AmiBlitz3.ab2@6063>   CMPI.l #$1,$4(A2)
0002288E <AmiBlitz3.ab2@6064>    BNE.w resconsts__next
00022890 <AmiBlitz3.ab2@6065>   ADDQ.w #1,D0
00022892 <AmiBlitz3.ab2@6068>   MOVEA.l (A2),A2
00022896 <AmiBlitz3.ab2@6069> BRA.w resconsts__loop
0002289C <AmiBlitz3.ab2@6072>   MOVE.w D0,temp1
0002289E <AmiBlitz3.ab2@6073>   MOVE.l D7,D1
000228A4 <AmiBlitz3.ab2@6074>   MOVE.l #temp1,D2
000228A6 <AmiBlitz3.ab2@6075>   MOVEQ.l #$02,D3
000228A8 <AmiBlitz3.ab2@6076>   ADDQ.l #2,D6
000228AE <AmiBlitz3.ab2@6078>     MOVEA.l _dosbase,A6
000228B2 <AmiBlitz3.ab2@6079>     JSR _Write(A6)
000228B8 <AmiBlitz3.ab2@6080>    TST.b resdisable
000228BC <AmiBlitz3.ab2@6081>    BEQ resconsts__done_l1
000228C2 <AmiBlitz3.ab2@6082>    MOVE.l currentlabeladdr,a2
000228C8 <AmiBlitz3.ab2@6083>    CMP.l #0,a2
000228CC <AmiBlitz3.ab2@6084>    BEQ resconsts__done_l1
000228CE <AmiBlitz3.ab2@6085>    MOVE.l (a2),a2
000228D2 <AmiBlitz3.ab2@6086> BRA resconsts__loop2
000228D8 <AmiBlitz3.ab2@6089>    MOVEA.l labelbase,A2                                    ;write resident labels
000228DC <AmiBlitz3.ab2@6092>    CMPA.w #$0,A2
000228E0 <AmiBlitz3.ab2@6093>    BEQ.w resconsts__done2
000228E8 <AmiBlitz3.ab2@6094>   CMPI.l #$1,$4(A2)
000228EC <AmiBlitz3.ab2@6095>    BNE.w resconsts__next2
000228EE <AmiBlitz3.ab2@6096>    MOVEQ.l #$00,D3
000228F2 <AmiBlitz3.ab2@6097>   MOVE.b $12(A2),D3                                        ;length
000228F4 <AmiBlitz3.ab2@6098>   ADDQ.w #1,D3
000228F8 <AmiBlitz3.ab2@6099>   BCLR #$0,D3
000228FA <AmiBlitz3.ab2@6100>   MOVE.l D6,D2
000228FC <AmiBlitz3.ab2@6101>   ADD.l D3,D6
000228FE <AmiBlitz3.ab2@6104>   MOVE.l (A2),-(A7)
00022900 <AmiBlitz3.ab2@6105>   TST.l (A2)
00022904 <AmiBlitz3.ab2@6106>    BEQ.w resconsts__nonext
00022906 <AmiBlitz3.ab2@6107>   MOVE.l D6,(A2)
0002290A <AmiBlitz3.ab2@6108>    BSR.w addhunkoffset
0002290C <AmiBlitz3.ab2@6111>   MOVE.l A2,D2
0002290E <AmiBlitz3.ab2@6112>   MOVE.l D7,D1
00022914 <AmiBlitz3.ab2@6114>     MOVEA.l _dosbase,A6
00022918 <AmiBlitz3.ab2@6115>     JSR _Write(A6)
0002291A <AmiBlitz3.ab2@6116>   MOVE.l (A7)+,(A2)
0002291C <AmiBlitz3.ab2@6119>   MOVEA.l (A2),A2
00022920 <AmiBlitz3.ab2@6120> BRA.w resconsts__loop2
00022922 <AmiBlitz3.ab2@6123> RTS
0002294C <AmiBlitz3.ab2@6127>    !basic
00022952 <AmiBlitz3.ab2@6128>     MOVE.l ptr_resfile,d0
00022962 <AmiBlitz3.ab2@6129>     resfileP.l = Peek.l(?ptr_resfile)
0002296C <AmiBlitz3.ab2@6130>     If resfileP
00022994 <AmiBlitz3.ab2@6131>       resfile$ = Peek.s(resfileP)
000229E0 <AmiBlitz3.ab2@6132>       tests.b = Instr(resfile$,"/")
00022A2C <AmiBlitz3.ab2@6133>       testc.b = Instr(resfile$,":")
00022A4E <AmiBlitz3.ab2@6134>       If tests=0 AND testc=0
00022ACE <AmiBlitz3.ab2@6135>         resfile$ = dos_AddPart{my_residentsdir$,resfile$}
00022AE0 <AmiBlitz3.ab2@6136>         Poke.l ?ptr_resfile,&resfile$
00022AE6 <AmiBlitz3.ab2@6138>     Else
00022B20 <AmiBlitz3.ab2@6139>       error{"INTERNAL: Invalid pointer in ptr_resfile!"}
00022B3E <AmiBlitz3.ab2@6141>    !asm
00022B40 <AmiBlitz3.ab2@6142> RTS
00022B46 <AmiBlitz3.ab2@6146> 
00022B4C <AmiBlitz3.ab2@6147>   MOVE.l A7,errstack
00022B56 <AmiBlitz3.ab2@6150>   MOVE.l #next_resentry,errcont
00022B5E <AmiBlitz3.ab2@6151>   MOVE.w #$FFFF,ezerr
00022B62 <AmiBlitz3.ab2@6152>   BSR.w Aclearallvars
00022B66 <AmiBlitz3.ab2@6153>   BSR.w free_residents
00022B6C <AmiBlitz3.ab2@6155>   LEA residents_table,A5
00022B6E <AmiBlitz3.ab2@6156>   MOVEQ.l #$07,D6
00022B70 <AmiBlitz3.ab2@6159>     TST.b (A5)
00022B74 <AmiBlitz3.ab2@6160>     BEQ.w next_resentry
00022B7A <AmiBlitz3.ab2@6161>     MOVE.l A5,ptr_resfile
00022B7E <AmiBlitz3.ab2@6162>     BSR check_residentpath
00022B84 <AmiBlitz3.ab2@6163>     MOVE.l ptr_resfile,d1
00022B8A <AmiBlitz3.ab2@6164>     MOVEA.l _dosbase,A6
00022B8E <AmiBlitz3.ab2@6165>     JSR _LoadSeg(A6)
00022B92 <AmiBlitz3.ab2@6166>     MOVE.l D0,$40(A5)
00022B96 <AmiBlitz3.ab2@6167>     BNE.w reloadresident__yeah
00022B9A <AmiBlitz3.ab2@6168>     BSR.w reserr
00022B9C <AmiBlitz3.ab2@6171>     MOVEA.l D0,A3
00022B9E <AmiBlitz3.ab2@6172>     ADDA.l A3,A3
00022BA0 <AmiBlitz3.ab2@6173>     ADDA.l A3,A3
00022BA2 <AmiBlitz3.ab2@6174>     ADDQ.w #4,A3                                           ;start of res
00022BA6 <AmiBlitz3.ab2@6175>     BSR.w JL_0_5A9E
00022BAA <AmiBlitz3.ab2@6176>     BSR.w JL_0_5A62                                        ;add macros to list
00022BAE <AmiBlitz3.ab2@6177>     BSR.w JL_0_5A32                                        ;read labels
00022BB2 <AmiBlitz3.ab2@6180>     LEA ResidentEntryStep(A5),A5       ;$44
00022BB6 <AmiBlitz3.ab2@6181>   DBF D6,reloadresident__loop
00022BC0 <AmiBlitz3.ab2@6186>   MOVE.l #free_residents,errcont
00022BC6 <AmiBlitz3.ab2@6188>   MOVEA.l newtype_string,A3
00022BC8 <AmiBlitz3.ab2@6189>   MOVEQ.l #$0B,D7
00022BCC <AmiBlitz3.ab2@6190>   BSR.w checkclash
00022BD2 <AmiBlitz3.ab2@6192>   MOVEA.l macrobase,A3
00022BD4 <AmiBlitz3.ab2@6193>   MOVEQ.l #$d,D7
00022BD8 <AmiBlitz3.ab2@6194>   BSR.w checkclash
00022BDE <AmiBlitz3.ab2@6196>   MOVEA.l firstconst,A3
00022BE0 <AmiBlitz3.ab2@6197>   MOVEQ.l #$19,D7
00022BE4 <AmiBlitz3.ab2@6198>   BSR.w checkclash
00022BE6 <AmiBlitz3.ab2@6201> RTS
00022BE8 <AmiBlitz3.ab2@6205>   MOVEA.l A3,A4
00022BEC <AmiBlitz3.ab2@6208>     CMPA.w #$0,A4
00022BF0 <AmiBlitz3.ab2@6209>     BEQ.w checkclash__done
00022BF6 <AmiBlitz3.ab2@6211>     LEA ptr_parameterstore,A0
00022BFA <AmiBlitz3.ab2@6212>     LEA $0(A4,D7.W),A1
00022BFC <AmiBlitz3.ab2@6213>     MOVEQ.l #-$01,D2
00022BFE <AmiBlitz3.ab2@6216>       ADDQ.w #1,D2
00022C00 <AmiBlitz3.ab2@6217>       MOVE.b (A1)+,(A0)+
00022C04 <AmiBlitz3.ab2@6218>     BNE.w checkclash__loop2
00022C06 <AmiBlitz3.ab2@6219>     MOVEA.l A3,A2
00022C0A <AmiBlitz3.ab2@6222>     BSR.w findlab
00022C0E <AmiBlitz3.ab2@6223>     BNE.w checkclash__next                                  ;not found
00022C10 <AmiBlitz3.ab2@6224>     CMPA.l A2,A4
00022C14 <AmiBlitz3.ab2@6225>     BEQ.w checkclash__l1
00022C16 <AmiBlitz3.ab2@6226>     MOVE.l a1,a5
00022C1A <AmiBlitz3.ab2@6227> BRA clasherr
00022C1E <AmiBlitz3.ab2@6230> BRA.w checkclash__more
00022C20 <AmiBlitz3.ab2@6233>     MOVEA.l (A4),A4
00022C24 <AmiBlitz3.ab2@6234> BRA.w checkclash__loop
00022C26 <AmiBlitz3.ab2@6237> RTS
00022C2C <AmiBlitz3.ab2@6241>   MOVEA.l _dosbase,A6
00022C32 <AmiBlitz3.ab2@6243>   LEA newtype_string,A0
00022C38 <AmiBlitz3.ab2@6244>   MOVE.l A0,lastrestype
00022C3A <AmiBlitz3.ab2@6245>   CLR.l (A0)
00022C40 <AmiBlitz3.ab2@6247>   LEA macrobase,A0
00022C46 <AmiBlitz3.ab2@6248>   MOVE.l A0,currentmacroaddr
00022C48 <AmiBlitz3.ab2@6249>   CLR.l (A0)
00022C4E <AmiBlitz3.ab2@6251>   LEA labelbase,A0
00022C54 <AmiBlitz3.ab2@6252>   MOVE.l A0,currentlabeladdr
00022C56 <AmiBlitz3.ab2@6253>   CLR.l (A0)
00022C5C <AmiBlitz3.ab2@6254>   CLR.w rescnt
00022C94 <AmiBlitz3.ab2@6258>   !ComData_SetB{comByte_DebugMode,debugmode}
00022C9A <AmiBlitz3.ab2@6261>   LEA residents_table,A2
00022C9C <AmiBlitz3.ab2@6262>   MOVEQ.l #$07,D2
00022CA0 <AmiBlitz3.ab2@6265>      MOVE.l $40(A2),D1
00022CA4 <AmiBlitz3.ab2@6266>      BEQ.w free_residents__next
00022CA8 <AmiBlitz3.ab2@6267>       CLR.l $40(A2)
00022CAE <AmiBlitz3.ab2@6268>       MOVEA.l _dosbase,A6
00022CB2 <AmiBlitz3.ab2@6269>       JSR _UnLoadSeg(A6)
00022CB6 <AmiBlitz3.ab2@6272>      LEA ResidentEntryStep(A2),A2   ; $44
00022CBA <AmiBlitz3.ab2@6273>    DBF D2,free_residents__loop
00022CBC <AmiBlitz3.ab2@6275> RTS
00022CBE <AmiBlitz3.ab2@6279>   MOVE.w (A3)+,D1
00022CC2 <AmiBlitz3.ab2@6280>   BEQ.w JL_0_5A60
00022CC8 <AmiBlitz3.ab2@6281>   MOVEA.l currentlabeladdr,A2
00022CCA <AmiBlitz3.ab2@6282>   MOVE.l A3,(A2)
00022CCC <AmiBlitz3.ab2@6283>   SUBQ.w #1,D1
00022CCE <AmiBlitz3.ab2@6286>     MOVEA.l A3,A2
00022CD0 <AmiBlitz3.ab2@6287>     MOVEA.l (A3),A3
00022CD4 <AmiBlitz3.ab2@6288>   DBF D1,JL_0_5A42
00022CD6 <AmiBlitz3.ab2@6290>   CLR.l (a2)                                               ;bugfix for object
00022CDC <AmiBlitz3.ab2@6291>   MOVE.l A2,currentlabeladdr
00022CDE <AmiBlitz3.ab2@6292>   MOVEA.l A2,A3
00022CE0 <AmiBlitz3.ab2@6293>   MOVEQ.l #$00,D0
00022CE4 <AmiBlitz3.ab2@6294>   MOVE.b $12(A3),D0
00022CE6 <AmiBlitz3.ab2@6295>   ADDQ.w #1,D0
00022CEA <AmiBlitz3.ab2@6296>   BCLR #$0,D0
00022CEC <AmiBlitz3.ab2@6297>   ADDA.w D0,A3
00022CEE <AmiBlitz3.ab2@6300> RTS
00022CF0 <AmiBlitz3.ab2@6304>   MOVE.w (A3)+,D1
00022CF4 <AmiBlitz3.ab2@6305>   BEQ.w JL_0_5A9C
00022CFA <AmiBlitz3.ab2@6307>   MOVEA.l currentmacroaddr,A2
00022CFC <AmiBlitz3.ab2@6308>   MOVE.l A3,(A2)
00022CFE <AmiBlitz3.ab2@6309>   SUBQ.w #1,D1
00022D00 <AmiBlitz3.ab2@6312>     MOVEA.l A3,A2
00022D02 <AmiBlitz3.ab2@6313>     MOVEA.l (A3),A3
00022D06 <AmiBlitz3.ab2@6314>   DBF D1,JL_0_5A72
00022D0C <AmiBlitz3.ab2@6316>   MOVE.l A2,currentmacroaddr
00022D0E <AmiBlitz3.ab2@6317>   MOVEA.l A2,A3
00022D10 <AmiBlitz3.ab2@6318>   MOVEQ.l #$00,D0
00022D14 <AmiBlitz3.ab2@6319>   MOVE.b $C(A3),D0
00022D16 <AmiBlitz3.ab2@6320>   ADDQ.w #1,D0
00022D1A <AmiBlitz3.ab2@6321>   BCLR #$0,D0
00022D1E <AmiBlitz3.ab2@6322>   MOVE.w $8(A3),D1
00022D20 <AmiBlitz3.ab2@6323>   ADDQ.w #1,D1
00022D24 <AmiBlitz3.ab2@6324>   BCLR #$0,D1
00022D26 <AmiBlitz3.ab2@6325>   ADDA.w D0,A3
00022D28 <AmiBlitz3.ab2@6326>   ADDA.w D1,A3
00022D2A <AmiBlitz3.ab2@6329> RTS
00022D2C <AmiBlitz3.ab2@6333>   MOVE.w (A3)+,D1
00022D30 <AmiBlitz3.ab2@6334>   BEQ.w JL_0_5B38
00022D32 <AmiBlitz3.ab2@6335>   MOVE.w D1,-(A7)
00022D34 <AmiBlitz3.ab2@6336>   SUBQ.w #1,D1
00022D3A <AmiBlitz3.ab2@6337>   MOVEA.l lastrestype,A2
00022D3C <AmiBlitz3.ab2@6338>   MOVE.l A2,-(A7)
00022D3E <AmiBlitz3.ab2@6341>       MOVE.l (A3),D0
00022D42 <AmiBlitz3.ab2@6342>       BEQ.w JL_0_5ABC
00022D44 <AmiBlitz3.ab2@6343>       MOVEA.l D0,A3
00022D48 <AmiBlitz3.ab2@6344> BRA.w JL_0_5AB0
00022D4C <AmiBlitz3.ab2@6347>       MOVE.b $E(A3),D0
00022D4E <AmiBlitz3.ab2@6348>       ADDQ.w #1,D0
00022D52 <AmiBlitz3.ab2@6349>       BCLR #$0,D0
00022D54 <AmiBlitz3.ab2@6350>       ADDA.w D0,A3
00022D56 <AmiBlitz3.ab2@6351>       MOVE.l A3,(A2)
00022D58 <AmiBlitz3.ab2@6352>       MOVEA.l A3,A2
00022D5A <AmiBlitz3.ab2@6353>       MOVEQ.l #$00,D0
00022D5E <AmiBlitz3.ab2@6354>       MOVE.b $A(A3),D0
00022D60 <AmiBlitz3.ab2@6355>       ADDQ.w #1,D0
00022D64 <AmiBlitz3.ab2@6356>       BCLR #$0,D0
00022D66 <AmiBlitz3.ab2@6357>       ADDA.w D0,A3
00022D6A <AmiBlitz3.ab2@6358>   DBF D1,JL_0_5AB0
00022D6C <AmiBlitz3.ab2@6360>   MOVEA.l (A7)+,A0
00022D6E <AmiBlitz3.ab2@6361>   MOVEA.l (A0),A0
00022D72 <AmiBlitz3.ab2@6364>     CMPA.w #$0,A0
00022D76 <AmiBlitz3.ab2@6365>     BEQ.w JL_0_5B2A
00022D7A <AmiBlitz3.ab2@6366>     MOVEA.l $4(A0),A1
00022D7E <AmiBlitz3.ab2@6369>     CMPA.w #$0,A1
00022D82 <AmiBlitz3.ab2@6370>     BEQ.w JL_0_5B24
00022D86 <AmiBlitz3.ab2@6371>     MOVE.w $A(A1),D0
00022D8C <AmiBlitz3.ab2@6372>     MOVEA.l newtypebase,A4
00022D90 <AmiBlitz3.ab2@6373>     CMP.w #$7,D0
00022D94 <AmiBlitz3.ab2@6374>     BCS.w JL_0_5B0E
00022D9A <AmiBlitz3.ab2@6375>     SUB.w rescnt,D0
00022D9C <AmiBlitz3.ab2@6378>     SUBQ.w #1,D0
00022DA0 <AmiBlitz3.ab2@6379>     BMI.w JL_0_5B1A
00022DA2 <AmiBlitz3.ab2@6382>        MOVEA.l (A4),A4
00022DA6 <AmiBlitz3.ab2@6383>   DBF D0,JL_0_5B14
00022DAA <AmiBlitz3.ab2@6386>     MOVE.l A4,$A(A1)
00022DAC <AmiBlitz3.ab2@6387>     MOVEA.l (A1),A1
00022DB0 <AmiBlitz3.ab2@6388> BRA.w JL_0_5AEE
00022DB2 <AmiBlitz3.ab2@6391>     MOVEA.l (A0),A0
00022DB6 <AmiBlitz3.ab2@6392> BRA.w JL_0_5AE2
00022DB8 <AmiBlitz3.ab2@6395>   MOVE.w (A7)+,D0
00022DBE <AmiBlitz3.ab2@6396>   ADD.w D0,rescnt
00022DC4 <AmiBlitz3.ab2@6397>   MOVE.l A2,lastrestype
00022DC6 <AmiBlitz3.ab2@6400> RTS
00022DCC <AmiBlitz3.ab2@6404>   LEA tokens,A0
00022DD0 <AmiBlitz3.ab2@6405>   MOVE.w #$003A,D0                                         ; $003A : 58 dec
00022DD2 <AmiBlitz3.ab2@6408>     MOVEA.l (A0),A0
00022DD6 <AmiBlitz3.ab2@6409>   DBF D0,JL_0_5BD0
00022DDC <AmiBlitz3.ab2@6411>   MOVEA.l #asmpnts,A1                                      ;create tokentab
00022DE0 <AmiBlitz3.ab2@6412>   MOVE.w #$0076,D0                                         ; $0076 : 118 dec
00022DE4 <AmiBlitz3.ab2@6415>       LEA $6(A0),A2
00022DE6 <AmiBlitz3.ab2@6418>         TST.b (A2)+
00022DEA <AmiBlitz3.ab2@6419>       BNE.w JL_0_5BE4
00022DEC <AmiBlitz3.ab2@6422>         TST.b (A2)+
00022DF0 <AmiBlitz3.ab2@6423>       BNE.w JL_0_5BEA
00022DF2 <AmiBlitz3.ab2@6425>       ADDQ.w #1,A2
00022DF4 <AmiBlitz3.ab2@6426>       EXG.l D1,A2
00022DF8 <AmiBlitz3.ab2@6427>       BCLR #$0,D1
00022DFA <AmiBlitz3.ab2@6428>       EXG.l D1,A2
00022DFC <AmiBlitz3.ab2@6429>       MOVE.l A2,(A1)+
00022DFE <AmiBlitz3.ab2@6430>       MOVEA.l (A0),A0
00022E02 <AmiBlitz3.ab2@6431>   DBF D0,JL_0_5BE0
00022E04 <AmiBlitz3.ab2@6432> RTS
00022E08 <AmiBlitz3.ab2@6436>   BSR.w asmconst
00022E0A <AmiBlitz3.ab2@6437>   MOVEQ.l #$0B,D5
00022E0C <AmiBlitz3.ab2@6438> RTS
00022E0E <AmiBlitz3.ab2@6441> unmove:  Ds.w 1
00022E12 <AmiBlitz3.ab2@6445>   MOVE.w #$48E7,D1
00022E16 <AmiBlitz3.ab2@6446>   BSR.w writeword                                          ;movem.l -(a7)
00022E1A <AmiBlitz3.ab2@6447>   MOVE.w #$000F,D2
00022E1C <AmiBlitz3.ab2@6448>   SUB.w D4,D2
00022E1E <AmiBlitz3.ab2@6449>   MOVEQ.l #-$01,D1
00022E20 <AmiBlitz3.ab2@6450>   BCLR D2,D1
00022E24 <AmiBlitz3.ab2@6451>   BSR.w writeword
00022E26 <AmiBlitz3.ab2@6452>   MOVEQ.l #-$01,D1
00022E28 <AmiBlitz3.ab2@6453>   BCLR D4,D1
00022E2E <AmiBlitz3.ab2@6454>   MOVE.w D1,unmove
00022E30 <AmiBlitz3.ab2@6455> RTS
00022E34 <AmiBlitz3.ab2@6459>   MOVE.w #$4CDF,D1
00022E38 <AmiBlitz3.ab2@6460>   BSR.w writeword
00022E3C <AmiBlitz3.ab2@6461>   MOVE.w unmove(PC),D1
00022E40 <AmiBlitz3.ab2@6462> BRA.w writeword
00022E44 <AmiBlitz3.ab2@6475>   BSR.w JL_0_5D22
00022E48 <AmiBlitz3.ab2@6476>   CMP.w #$2C,D0                                            ;#','
00022E4C <AmiBlitz3.ab2@6477>    BNE.w syntaxerr
00022E52 <AmiBlitz3.ab2@6478>   MOVE.l #$48E7FFFE,D1                                     ;movem to stack
00022E56 <AmiBlitz3.ab2@6479>    BSR.w writelong
00022E58 <AmiBlitz3.ab2@6480>   MOVE.w D4,D1
00022E5C <AmiBlitz3.ab2@6481>   ORI.w #$2F00,D1
00022E60 <AmiBlitz3.ab2@6482>    BSR.w writeword
00022E64 <AmiBlitz3.ab2@6483>    BSR.w get1bytemain
00022E68 <AmiBlitz3.ab2@6484>    BSR.w getparameter
00022E6C <AmiBlitz3.ab2@6485>    BSR.w JL_0_8E3C
00022E70 <AmiBlitz3.ab2@6486>    BSR.w calcvar
00022E74 <AmiBlitz3.ab2@6487>    BTST #$E,D2
00022E78 <AmiBlitz3.ab2@6488>    BEQ.w JL_0_5C80
00022E7C <AmiBlitz3.ab2@6491>    MOVE.b #$3,D2
00022E80 <AmiBlitz3.ab2@6492> BRA.w JL_0_5C8E
00022E82 <AmiBlitz3.ab2@6495>   TST.b D2
00022E86 <AmiBlitz3.ab2@6496>    BEQ.w JL_0_5C78
00022E8A <AmiBlitz3.ab2@6497>   CMP.b #$7,D2
00022E8E <AmiBlitz3.ab2@6498>    BEQ.w JL_0_5C78
00022E92 <AmiBlitz3.ab2@6501>   BTST #$F,D2
00022E96 <AmiBlitz3.ab2@6502>    BNE.w JL_0_5CA4
00022E9A <AmiBlitz3.ab2@6503>   MOVE.w #$45ED,D1                                         ;lea x(a5),a2
00022E9E <AmiBlitz3.ab2@6504>    BSR.w writeword
00022EA0 <AmiBlitz3.ab2@6505>   MOVE.w D3,D1
00022EA4 <AmiBlitz3.ab2@6506>    BSR.w writeword
00022EA8 <AmiBlitz3.ab2@6509>   MOVE.w #$201F,D1                                         ;move.l (a7)+,d0
00022EAC <AmiBlitz3.ab2@6510>    BSR.w writeword
00022EB0 <AmiBlitz3.ab2@6511>   MOVE.w #$1480,D1
00022EB4 <AmiBlitz3.ab2@6512>   CMP.b #$1,D2
00022EB8 <AmiBlitz3.ab2@6513>    BEQ.w JL_0_5CC8
00022EBC <AmiBlitz3.ab2@6514>   EORI.w #$3000,D1
00022EC0 <AmiBlitz3.ab2@6515>   CMP.b #$2,D2
00022EC4 <AmiBlitz3.ab2@6516>    BNE.w JL_0_5CC8
00022EC8 <AmiBlitz3.ab2@6517>   ORI.w #$1000,D1
00022ECC <AmiBlitz3.ab2@6520>   BSR.w writeword
00022ED2 <AmiBlitz3.ab2@6521>   MOVE.l #$4CDF7FFF,D1
00022ED6 <AmiBlitz3.ab2@6522> BRA.w writelong
00022EDA <AmiBlitz3.ab2@6526>   BSR.w JL_0_5D22
00022EDE <AmiBlitz3.ab2@6527>   CMP.w #$2C,D0
00022EE2 <AmiBlitz3.ab2@6528>    BNE.w syntaxerr
00022EE6 <AmiBlitz3.ab2@6529>    BSR.w regmovems
00022EE8 <AmiBlitz3.ab2@6530>   MOVE.w D4,-(A7)
00022EEA <AmiBlitz3.ab2@6531>   MOVEQ.l #$03,D2
00022EEE <AmiBlitz3.ab2@6532>    BSR.w eval
00022EF0 <AmiBlitz3.ab2@6533>   MOVE.w (A7)+,D1
00022EF4 <AmiBlitz3.ab2@6534>    BEQ.w JL_0_5D1A
00022EF8 <AmiBlitz3.ab2@6535>   CMP.w #$8,D1
00022EFC <AmiBlitz3.ab2@6536>    BCC.w JL_0_5D0C
00022EFE <AmiBlitz3.ab2@6537>   LSL.w #8,D1
00022F00 <AmiBlitz3.ab2@6538>   LSL.w #1,D1
00022F04 <AmiBlitz3.ab2@6539>   ORI.w #$2000,D1
00022F08 <AmiBlitz3.ab2@6540>    BSR.w writeword
00022F0C <AmiBlitz3.ab2@6541> BRA.w JL_0_5D1A
00022F0E <AmiBlitz3.ab2@6544>   SUBQ.w #8,D1
00022F10 <AmiBlitz3.ab2@6545>   LSL.w #8,D1
00022F12 <AmiBlitz3.ab2@6546>   LSL.w #1,D1
00022F16 <AmiBlitz3.ab2@6547>   ORI.w #$2040,D1
00022F1A <AmiBlitz3.ab2@6548>   BSR.w writeword
00022F1E <AmiBlitz3.ab2@6551> BRA.w dounmove
00022F22 <AmiBlitz3.ab2@6555>   BSR.w get1bytemain
00022F26 <AmiBlitz3.ab2@6558>   ORI.w #$20,D0
00022F2A <AmiBlitz3.ab2@6559>   CMP.w #$64,D0
00022F2E <AmiBlitz3.ab2@6560>    BEQ.w JL_0_5D4E
00022F32 <AmiBlitz3.ab2@6561>   CMP.w #$61,D0
00022F36 <AmiBlitz3.ab2@6562>    BNE.w syntaxerr
00022F3A <AmiBlitz3.ab2@6563>    BSR.w JL_0_5D4E
00022F3C <AmiBlitz3.ab2@6564>   ADDQ.w #8,D4
00022F3E <AmiBlitz3.ab2@6565> RTS
00022F6A <AmiBlitz3.ab2@6569>   !fget                                                   ;bsr.w get1bytemain
00022F6E <AmiBlitz3.ab2@6571>   ORI.w #$20,D0
00022F72 <AmiBlitz3.ab2@6574>   CMP.w #$61,D0
00022F76 <AmiBlitz3.ab2@6575>   BNE.w syntaxerr
00022FA2 <AmiBlitz3.ab2@6578>   !fget                                                    ;bsr.w get1bytemain
00022FA6 <AmiBlitz3.ab2@6579>   SUBI.w #$30,D0
00022FAA <AmiBlitz3.ab2@6580>    BMI.w syntaxerr
00022FAE <AmiBlitz3.ab2@6581>   CMP.w #$7,D0
00022FB2 <AmiBlitz3.ab2@6582>    BHI.w syntaxerr
00022FB4 <AmiBlitz3.ab2@6583>   MOVE.w D0,D4
00022FE0 <AmiBlitz3.ab2@6584>   !fget
00022FE2 <AmiBlitz3.ab2@6585> RTS                                                        ;bra.w get1bytemain
00022FE4 <AmiBlitz3.ab2@6589>   ADDQ.w #8,D4
00022FE6 <AmiBlitz3.ab2@6592>   MOVEQ.l #$00,D5
00022FEA <AmiBlitz3.ab2@6593>   SUBI.w #$30,D4
00022FEE <AmiBlitz3.ab2@6596>   CMP.w #$2D,D0
00022FF2 <AmiBlitz3.ab2@6597>    BEQ.w JL_0_5D9E
00022FF6 <AmiBlitz3.ab2@6598>   CMP.w #$2F,D0
00022FFA <AmiBlitz3.ab2@6599>    BEQ.w JL_0_5D8C
00022FFE <AmiBlitz3.ab2@6600> BRA.w syntaxerr
00023000 <AmiBlitz3.ab2@6603>   BSET D4,D5
00023002 <AmiBlitz3.ab2@6606>   MOVE.w D5,D4
00023004 <AmiBlitz3.ab2@6607>   MOVEQ.l #$0F,D5
00023006 <AmiBlitz3.ab2@6608> RTS
00023008 <AmiBlitz3.ab2@6611>   BSET D4,D5
0002300C <AmiBlitz3.ab2@6612>   BSR.w JL_0_5D1E
0002301E <AmiBlitz3.ab2@6613>   !compare3                                                ;bsr.w JL_0_5FC0
00023022 <AmiBlitz3.ab2@6614>   BNE.w JL_0_5D70
00023026 <AmiBlitz3.ab2@6615> BRA.w JL_0_5D84
00023028 <AmiBlitz3.ab2@6618>   MOVE.w D4,D1
0002302C <AmiBlitz3.ab2@6619>    BSR.w JL_0_5D1E
0002302E <AmiBlitz3.ab2@6620>   CMP.w D4,D1
00023032 <AmiBlitz3.ab2@6621>    BLS.w JL_0_5DAC
00023034 <AmiBlitz3.ab2@6622>   EXG.l D4,D1
00023036 <AmiBlitz3.ab2@6625>   BSET D1,D5
00023038 <AmiBlitz3.ab2@6626>   ADDQ.w #1,D1
0002303A <AmiBlitz3.ab2@6627>   CMP.w D4,D1
0002303E <AmiBlitz3.ab2@6628>    BLS.w JL_0_5DAC
00023050 <AmiBlitz3.ab2@6629>   !compare3                                                ;bsr.w JL_0_5FC0
00023054 <AmiBlitz3.ab2@6630>   BNE.w JL_0_5D70
00023058 <AmiBlitz3.ab2@6631> BRA.w JL_0_5D86
0002305A <AmiBlitz3.ab2@6634>   MOVEA.l A5,A4                                            ;bsr.w get1bytemain
00023086 <AmiBlitz3.ab2@6635>    !fget
0002308A <AmiBlitz3.ab2@6636>   CMP.w #$23,D0
0002308E <AmiBlitz3.ab2@6637>    BEQ.w getimm
00023092 <AmiBlitz3.ab2@6638>   CMP.w #$28,D0
00023096 <AmiBlitz3.ab2@6639>    BEQ.w JL_0_5DFE
0002309A <AmiBlitz3.ab2@6640>   CMP.w #$2D,D0
0002309E <AmiBlitz3.ab2@6641>    BNE.w JL_0_5E20
000230CA <AmiBlitz3.ab2@6642>    !fget                                                   ;bsr.w get1bytemain       -(
000230CE <AmiBlitz3.ab2@6643>   CMP.w #$28,D0
000230D2 <AmiBlitz3.ab2@6644>    BNE.w JL_0_5F4E
000230D6 <AmiBlitz3.ab2@6645>    BSR.w JL_0_5D3E
000230DA <AmiBlitz3.ab2@6646>   CMP.w #$29,D0
000230DE <AmiBlitz3.ab2@6647>    BNE.w syntaxerr
000230E0 <AmiBlitz3.ab2@6648>   MOVEQ.l #$04,D5
0002310C <AmiBlitz3.ab2@6649>   !fget                                                    ;bsr.w get1bytemain
0002310E <AmiBlitz3.ab2@6650> RTS
00023112 <AmiBlitz3.ab2@6654>   BSR.w JL_0_5D3E
00023116 <AmiBlitz3.ab2@6655>   CMP.w #$29,D0
0002311A <AmiBlitz3.ab2@6656>    BNE.w syntaxerr
00023146 <AmiBlitz3.ab2@6657>   !fget                                                    ;bsr.w get1bytemain
0002314A <AmiBlitz3.ab2@6658>   CMP.w #$2B,D0
0002314E <AmiBlitz3.ab2@6659>    BEQ.w JL_0_5E1A
00023150 <AmiBlitz3.ab2@6660>   MOVEQ.l #$02,D5
00023152 <AmiBlitz3.ab2@6661> RTS
00023154 <AmiBlitz3.ab2@6665>   MOVEQ.l #$03,D5
00023180 <AmiBlitz3.ab2@6666>   !fget                                                    ;bra.w get1bytemain
00023182 <AmiBlitz3.ab2@6667> RTS
00023186 <AmiBlitz3.ab2@6671>   ORI.w #$20,D0
00023188 <AmiBlitz3.ab2@6672>   MOVE.w D0,D1                                            
000231B4 <AmiBlitz3.ab2@6673>    !fget                                                   ;bsr.w get1bytemain
000231B8 <AmiBlitz3.ab2@6674>   CMP.w #$64,D1
000231BC <AmiBlitz3.ab2@6675>    BNE.w JL_0_5E6C
000231C0 <AmiBlitz3.ab2@6676>   CMP.w #$30,D0
000231C4 <AmiBlitz3.ab2@6677>    BCS.w JL_0_5EAE
000231C8 <AmiBlitz3.ab2@6678>   CMP.w #$37,D0
000231CC <AmiBlitz3.ab2@6679>    BHI.w JL_0_5EAE
000231CE <AmiBlitz3.ab2@6680>   MOVE.w D0,D4
000231FA <AmiBlitz3.ab2@6681>    !fget                                                   ;bsr.w get1bytemain
0002320C <AmiBlitz3.ab2@6682>    !compare3                                               ;bsr.w JL_0_5FC0
00023210 <AmiBlitz3.ab2@6683>    BEQ.w JL_0_5E64
00023214 <AmiBlitz3.ab2@6684>   CMP.w #$2D,D0
00023218 <AmiBlitz3.ab2@6685>    BEQ.w JL_0_5D6A
0002321C <AmiBlitz3.ab2@6686>   CMP.w #$2F,D0
00023220 <AmiBlitz3.ab2@6687>    BEQ.w JL_0_5D6A
00023224 <AmiBlitz3.ab2@6688> BRA.w JL_0_5EB8
00023226 <AmiBlitz3.ab2@6691>   MOVEQ.l #$00,D5
0002322A <AmiBlitz3.ab2@6692>   SUBI.w #$30,D4
0002322C <AmiBlitz3.ab2@6693> RTS
00023230 <AmiBlitz3.ab2@6696>    CMP.w #$61,D1
00023234 <AmiBlitz3.ab2@6697>    BNE.w JL_0_5EAE
00023238 <AmiBlitz3.ab2@6698>   CMP.w #$30,D0
0002323C <AmiBlitz3.ab2@6699>    BCS.w JL_0_5EAE
00023240 <AmiBlitz3.ab2@6700>   CMP.w #$37,D0
00023244 <AmiBlitz3.ab2@6701>    BHI.w JL_0_5EAE
00023246 <AmiBlitz3.ab2@6702>   MOVE.w D0,D4
00023272 <AmiBlitz3.ab2@6703>    !fget                                                   ;bsr.w get1bytemain
00023284 <AmiBlitz3.ab2@6704>    !compare3                                               ;bsr.w JL_0_5FC0
00023288 <AmiBlitz3.ab2@6705>    BEQ.w JL_0_5EA6
0002328C <AmiBlitz3.ab2@6706>   CMP.w #$2D,D0
00023290 <AmiBlitz3.ab2@6707>    BEQ.w JL_0_5D68                                         ;movem
00023294 <AmiBlitz3.ab2@6708>   CMP.w #$2F,D0
00023298 <AmiBlitz3.ab2@6709>    BEQ.w JL_0_5D68
0002329C <AmiBlitz3.ab2@6710> BRA.w JL_0_5EB8
0002329E <AmiBlitz3.ab2@6713>   MOVEQ.l #1,d5
000232A2 <AmiBlitz3.ab2@6714>   SUBI.w #$30,D4
000232A6 <AmiBlitz3.ab2@6716> BRA 'l10
000232A8 <AmiBlitz3.ab2@6717>   ADDQ.w #8,d4
000232AA <AmiBlitz3.ab2@6718>   MOVEQ #0,d5
000232AC <AmiBlitz3.ab2@6719>   BSET d4,d5
000232AE <AmiBlitz3.ab2@6720>   MOVE.w d5,d4
000232B0 <AmiBlitz3.ab2@6721>   MOVEQ.l #$0f,D5                                          ;01
000232B2 <AmiBlitz3.ab2@6724> RTS
000232B6 <AmiBlitz3.ab2@6728>   ORI.w #$20,D0
000232B8 <AmiBlitz3.ab2@6729>   MOVE.w D0,D4
000232E4 <AmiBlitz3.ab2@6730>    !fget                                                   ;bsr.w get1bytemain
000232F6 <AmiBlitz3.ab2@6733>   !compare3                                                ;bsr.w JL_0_5FC0
000232FA <AmiBlitz3.ab2@6734>    BNE.w JL_0_5EF2
000232FE <AmiBlitz3.ab2@6735>   CMP.w #$73,D1
00023302 <AmiBlitz3.ab2@6736>    BNE.w JL_0_5EF2
00023306 <AmiBlitz3.ab2@6737>   CMP.w #$70,D4
0002330A <AmiBlitz3.ab2@6738>    BNE.w JL_0_5EDE
0002331C <AmiBlitz3.ab2@6739>    !compare3                                               ;bsr.w JL_0_5FC0
00023320 <AmiBlitz3.ab2@6740>    BNE.w JL_0_5F4E
00023322 <AmiBlitz3.ab2@6741>   MOVEQ.l #$07,D4
00023324 <AmiBlitz3.ab2@6742>   MOVEQ.l #$01,D5
00023326 <AmiBlitz3.ab2@6743> RTS
0002332A <AmiBlitz3.ab2@6747>   CMP.w #$72,D4
0002332E <AmiBlitz3.ab2@6748>    BNE.w JL_0_5F4E
00023340 <AmiBlitz3.ab2@6749>    !compare3                                               ;bsr.w JL_0_5FC0
00023344 <AmiBlitz3.ab2@6750>    BNE.w JL_0_5F4E
00023346 <AmiBlitz3.ab2@6751>   MOVEQ.l #$0D,D5
00023348 <AmiBlitz3.ab2@6752> RTS
0002334C <AmiBlitz3.ab2@6756>   ORI.w #$20,D0
00023350 <AmiBlitz3.ab2@6757>   CMP.w #$63,D1
00023354 <AmiBlitz3.ab2@6758>    BNE.w JL_0_5F22
00023358 <AmiBlitz3.ab2@6759>   CMP.w #$63,D4
0002335C <AmiBlitz3.ab2@6760>    BNE.w JL_0_5F4E
00023360 <AmiBlitz3.ab2@6761>   CMP.w #$72,D0
00023364 <AmiBlitz3.ab2@6762>    BNE.w JL_0_5F4E
00023368 <AmiBlitz3.ab2@6763>    BSR.w get1bytemain                                      ;??wy not !fget
0002336C <AmiBlitz3.ab2@6764>    BEQ.w JL_0_5F1E
00023370 <AmiBlitz3.ab2@6765>   CMP.w #$2C,D0
00023374 <AmiBlitz3.ab2@6766>    BNE.w JL_0_5F4E
00023376 <AmiBlitz3.ab2@6769>   MOVEQ.l #$0C,D5
00023378 <AmiBlitz3.ab2@6770> RTS
0002337C <AmiBlitz3.ab2@6774>   CMP.w #$75,D1
00023380 <AmiBlitz3.ab2@6775>    BNE.w JL_0_5F4E
00023384 <AmiBlitz3.ab2@6776>   CMP.w #$73,D4
00023388 <AmiBlitz3.ab2@6777>    BNE.w JL_0_5F4E
0002338C <AmiBlitz3.ab2@6778>   CMP.w #$70,D0
00023390 <AmiBlitz3.ab2@6779>    BNE.w JL_0_5F4E
00023394 <AmiBlitz3.ab2@6780>    BSR.w get1bytemain                                      ;??wy not !fget
00023398 <AmiBlitz3.ab2@6781>    BEQ.w JL_0_5F4A
0002339C <AmiBlitz3.ab2@6782>   CMP.w #$2C,D0
000233A0 <AmiBlitz3.ab2@6783>    BNE.w JL_0_5F4E
000233A2 <AmiBlitz3.ab2@6786>   MOVEQ.l #$0E,D5
000233A4 <AmiBlitz3.ab2@6787> RTS
000233A6 <AmiBlitz3.ab2@6791>   MOVEA.l A4,A5
000233AA <AmiBlitz3.ab2@6792>    BSR.w asmconst
000233BC <AmiBlitz3.ab2@6793>    !compare3                                               ;bsr.w JL_0_5FC0
000233C0 <AmiBlitz3.ab2@6794>    BEQ.w JL_0_5FB8
000233C4 <AmiBlitz3.ab2@6795>   CMP.w #$2E,D0
000233C8 <AmiBlitz3.ab2@6796>    BEQ.w JL_0_5FA0
000233CC <AmiBlitz3.ab2@6797>   CMP.w #$28,D0
000233D0 <AmiBlitz3.ab2@6798>    BNE.w syntaxerr
000233D4 <AmiBlitz3.ab2@6799>    BSR.w get1bytemain                                      ;??wy not !fget
000233D8 <AmiBlitz3.ab2@6800>   ORI.w #$20,D0
000233DC <AmiBlitz3.ab2@6801>   CMP.w #$70,D0
000233E0 <AmiBlitz3.ab2@6802>    BNE.w JL_0_5F98
000233E4 <AmiBlitz3.ab2@6803>    BSR.w get1bytemain                                      ;??wy not !fget
000233E8 <AmiBlitz3.ab2@6804>   ORI.w #$20,D0
000233EC <AmiBlitz3.ab2@6805>   CMP.w #$63,D0
000233F0 <AmiBlitz3.ab2@6806>    BNE.w syntaxerr
000233F4 <AmiBlitz3.ab2@6807>    BSR.w get1bytemain                                      ;??wy not !fget
000233F8 <AmiBlitz3.ab2@6808>    BSR.w JL_0_5FD4
000233FA <AmiBlitz3.ab2@6809>   ADDQ.w #4,D5
000233FC <AmiBlitz3.ab2@6810> RTS
00023400 <AmiBlitz3.ab2@6814>   BSR.w JL_0_5D46
00023404 <AmiBlitz3.ab2@6815> BRA.w JL_0_5FD4
00023408 <AmiBlitz3.ab2@6819>    BSR.w get1bytemain                                     ;??wy not !fget
0002340C <AmiBlitz3.ab2@6820>   ORI.w #$20,D0
00023410 <AmiBlitz3.ab2@6821>   CMP.w #$77,D0
00023414 <AmiBlitz3.ab2@6822>    BEQ.w JL_0_5FBC
00023418 <AmiBlitz3.ab2@6823>   CMP.w #$6C,D0
0002341C <AmiBlitz3.ab2@6824>    BNE.w syntaxerr
0002341E <AmiBlitz3.ab2@6827>   MOVEQ.l #$08,D5
00023420 <AmiBlitz3.ab2@6828> RTS
00023422 <AmiBlitz3.ab2@6832>   MOVEQ.l #$07,D5
00023424 <AmiBlitz3.ab2@6833> RTS
00023426 <AmiBlitz3.ab2@6837>   TST.w D0
0002342A <AmiBlitz3.ab2@6838>    BEQ.w JL_0_5FD2
0002342E <AmiBlitz3.ab2@6839>   CMP.w #$3A,D0
00023432 <AmiBlitz3.ab2@6840>    BEQ.w JL_0_5FD2
00023436 <AmiBlitz3.ab2@6841>   CMP.w #$2C,D0
00023438 <AmiBlitz3.ab2@6844> RTS
0002343C <AmiBlitz3.ab2@6848>   CMP.w #$2C,D0
00023440 <AmiBlitz3.ab2@6849>    BNE.w JL_0_6054
00023444 <AmiBlitz3.ab2@6850>    BSR.w get1bytemain                                      ;??wy not !fget
00023448 <AmiBlitz3.ab2@6851>   ORI.w #$20,D0
0002344A <AmiBlitz3.ab2@6852>   MOVEQ.l #$00,D1
0002344E <AmiBlitz3.ab2@6853>   CMP.w #$64,D0
00023452 <AmiBlitz3.ab2@6854>    BEQ.w JL_0_5FFA
00023456 <AmiBlitz3.ab2@6855>   CMP.w #$61,D0
0002345A <AmiBlitz3.ab2@6856>    BNE.w syntaxerr
0002345E <AmiBlitz3.ab2@6857>   BSET #$F,D1
00023462 <AmiBlitz3.ab2@6860>    BSR.w get1bytemain                                      ;??wy not !fget
00023466 <AmiBlitz3.ab2@6861>   SUBI.w #$30,D0
0002346A <AmiBlitz3.ab2@6862>    BMI.w syntaxerr
0002346E <AmiBlitz3.ab2@6863>   CMP.w #$7,D0
00023472 <AmiBlitz3.ab2@6864>    BHI.w syntaxerr
00023474 <AmiBlitz3.ab2@6865>   LSL.w #8,D0
00023476 <AmiBlitz3.ab2@6866>   LSL.w #4,D0
00023478 <AmiBlitz3.ab2@6867>   OR.w D0,D1
0002347C <AmiBlitz3.ab2@6868>    BSR.w get1bytemain                                      ;??wy not !fget
00023480 <AmiBlitz3.ab2@6869>   CMP.w #$2E,D0
00023484 <AmiBlitz3.ab2@6870>    BNE.w JL_0_6040
00023488 <AmiBlitz3.ab2@6871>    BSR.w get1bytemain                                      ;??wy not !fget
0002348C <AmiBlitz3.ab2@6872>   ORI.w #$20,D0
00023490 <AmiBlitz3.ab2@6873>   CMP.w #$77,D0
00023494 <AmiBlitz3.ab2@6874>    BEQ.w JL_0_603C
00023498 <AmiBlitz3.ab2@6875>   CMP.w #$6C,D0
0002349C <AmiBlitz3.ab2@6876>    BNE.w syntaxerr
000234A0 <AmiBlitz3.ab2@6877>   BSET #$B,D1
000234A4 <AmiBlitz3.ab2@6880>    BSR.w get1bytemain                                      ;??wy not !fget
000234A8 <AmiBlitz3.ab2@6883>    CMP.b #"*",d0                                           ;020 * Mode
000234AC <AmiBlitz3.ab2@6884>             BNE 'l1
000234B0 <AmiBlitz3.ab2@6885>             BSR.w get1bytemain                             ;??wy not !fget
000234B4 <AmiBlitz3.ab2@6886>             CMP.b #"2",d0
000234B8 <AmiBlitz3.ab2@6887>             BNE 'l2
000234BC <AmiBlitz3.ab2@6888>             OR.w #$200,d1
000234C0 <AmiBlitz3.ab2@6889> BRA 'l1b
000234C4 <AmiBlitz3.ab2@6892>             CMP.b #"4",d0
000234C8 <AmiBlitz3.ab2@6893>             BNE 'l3
000234CC <AmiBlitz3.ab2@6894>             OR.w #$400,d1
000234D0 <AmiBlitz3.ab2@6895> BRA 'l1b
000234D4 <AmiBlitz3.ab2@6898>             CMP.b #"8",d0
000234D8 <AmiBlitz3.ab2@6899>             BNE syntaxerr
000234DC <AmiBlitz3.ab2@6900>             OR.w #$600,d1
000234E0 <AmiBlitz3.ab2@6903>         BSR.w get1bytemain                                 ;??wy not !fget
000234E4 <AmiBlitz3.ab2@6906>   CMP.w #$29,D0
000234E8 <AmiBlitz3.ab2@6907>    BNE.w syntaxerr
000234EE <AmiBlitz3.ab2@6908>   MOVE.w D1,extraword
000234F0 <AmiBlitz3.ab2@6909>   MOVEQ.l #$06,D5
000234F4 <AmiBlitz3.ab2@6910> BRA.w get1bytemain                                         ;??wy not !fget
000234F8 <AmiBlitz3.ab2@6914>   CMP.w #")",D0                                            ;")"
000234FC <AmiBlitz3.ab2@6915>    BNE.w errorbracketmiss                                  ; was syntax error
000234FE <AmiBlitz3.ab2@6916>   MOVEQ.l #$05,D5
00023502 <AmiBlitz3.ab2@6917> BRA.w get1bytemain                                         ;??wy not !fget
00023508 <AmiBlitz3.ab2@6924>   MOVEA.l asmbuff,A0
0002350E <AmiBlitz3.ab2@6925>   MOVE.w ininclude,D1
00023514 <AmiBlitz3.ab2@6926>   OR.w inmacro,D1
00023516 <AmiBlitz3.ab2@6927>   MOVE.w D1,(A0)+                                          ;flag!
0002351A <AmiBlitz3.ab2@6928>    BNE.w copyconst
0002351C <AmiBlitz3.ab2@6929>   MOVE.l A5,-(A7)
00023520 <AmiBlitz3.ab2@6930>    BSR.w copyconst
00023526 <AmiBlitz3.ab2@6931>   MOVEA.l asmbuff,A0
0002352A <AmiBlitz3.ab2@6932>   CMP.w #$4,D1
0002352E <AmiBlitz3.ab2@6933>    BLS.w asmconst__leave
00023534 <AmiBlitz3.ab2@6934>   TST.w lc
00023538 <AmiBlitz3.ab2@6935>    BNE.w asmconst__leave
0002353A <AmiBlitz3.ab2@6936>   ADDQ.w #2,A0
0002353C <AmiBlitz3.ab2@6937>   MOVE.l (A7)+,(A0)+
0002353E <AmiBlitz3.ab2@6938>   CLR.b (A0)
00023546 <AmiBlitz3.ab2@6939>   MOVE.w #$0004,asmlen2                                    ;pointer + 0
00023548 <AmiBlitz3.ab2@6940> RTS
0002354A <AmiBlitz3.ab2@6944>   NOT.w (A0)
0002354C <AmiBlitz3.ab2@6945>   ADDQ.w #4,A7
0002354E <AmiBlitz3.ab2@6946> RTS
00023550 <AmiBlitz3.ab2@6949> lc:  Ds.w 1
00023556 <AmiBlitz3.ab2@6953>   CLR.w lc
00023558 <AmiBlitz3.ab2@6954>   MOVEQ.l #$00,D1
0002355A <AmiBlitz3.ab2@6957>    ADDQ.w #1,D1                                            ;label name
00023586 <AmiBlitz3.ab2@6958>    !fget                                                   ;bsr.w get1bytemain
0002358A <AmiBlitz3.ab2@6959>    BEQ.w copyconst__done
0002358E <AmiBlitz3.ab2@6960>    CMP.w #$22,d0
00023592 <AmiBlitz3.ab2@6961>    BNE.s copyconst__loop_l10
00023598 <AmiBlitz3.ab2@6962>    NOT.w instringon
0002359C <AmiBlitz3.ab2@6965>    CMP.w #":",d0
000235A0 <AmiBlitz3.ab2@6966>    BNE.s copyconst__loop_l11
000235A6 <AmiBlitz3.ab2@6967>    TST.w instringon
000235AA <AmiBlitz3.ab2@6968>    BEQ copyconst__done
000235AC <AmiBlitz3.ab2@6971>   TST.w D0
000235B0 <AmiBlitz3.ab2@6972>   BPL.w copyconst__notmi
000235B2 <AmiBlitz3.ab2@6973>   MOVE.w D0,-(A7)
000235B4 <AmiBlitz3.ab2@6974>   LSR.w #8,D0
000235B6 <AmiBlitz3.ab2@6975>   MOVE.b D0,(A0)+
000235B8 <AmiBlitz3.ab2@6976>   MOVE.w (A7)+,D0
000235BA <AmiBlitz3.ab2@6977>   MOVE.b D0,(A0)+
000235BC <AmiBlitz3.ab2@6978>   ADDQ.w #1,D1
000235C0 <AmiBlitz3.ab2@6979> BRA.s copyconst__loop
000235C6 <AmiBlitz3.ab2@6982>    TST.w instringon
000235CA <AmiBlitz3.ab2@6983>    BNE.w copyconst__putbyte
000235D0 <AmiBlitz3.ab2@6984>    TST.b _dcb
000235D4 <AmiBlitz3.ab2@6985>    BNE copyconst__notmi_l10
000235D8 <AmiBlitz3.ab2@6986>    CMP.w #$28,D0
000235DC <AmiBlitz3.ab2@6987>    BEQ.w copyconst__done
000235E0 <AmiBlitz3.ab2@6990>    CMP.w #$2C,D0
000235E4 <AmiBlitz3.ab2@6991>    BEQ.w copyconst__done
000235E8 <AmiBlitz3.ab2@6992>    CMP.b #"'",D0
000235EC <AmiBlitz3.ab2@6993>    BNE.w copyconst__putbyte
000235F2 <AmiBlitz3.ab2@6994>    MOVE.w D0,lc                                     ;locallabels
000235F4 <AmiBlitz3.ab2@6995>    MOVE.l A1,-(A7)
000235FA <AmiBlitz3.ab2@6996>    LEA lastgloballabel,A1
000235FC <AmiBlitz3.ab2@6997>    TST.b (A1)
00023600 <AmiBlitz3.ab2@6998>    BEQ.w nolocerr
00023602 <AmiBlitz3.ab2@7001>   ADDQ.w #1,D1
00023604 <AmiBlitz3.ab2@7002>   MOVE.b (A1)+,(A0)+
00023608 <AmiBlitz3.ab2@7003>    BNE.w copyconst__cloop
0002360A <AmiBlitz3.ab2@7004>   SUBQ.w #1,D1
0002360C <AmiBlitz3.ab2@7005>   SUBQ.w #1,A0
0002360E <AmiBlitz3.ab2@7006>   MOVEA.l (A7)+,A1
00023610 <AmiBlitz3.ab2@7009>   MOVE.b D0,(A0)+
00023614 <AmiBlitz3.ab2@7010> BRA.w copyconst__loop
00023616 <AmiBlitz3.ab2@7013>   CLR.b (A0)
0002361C <AmiBlitz3.ab2@7014>   MOVE.w D1,asmlen2
0002361E <AmiBlitz3.ab2@7015> RTS
00023624 <AmiBlitz3.ab2@7020>   CMP.l #$80ad,d0
00023628 <AmiBlitz3.ab2@7021>   BNE.s 'l12
0002362E <AmiBlitz3.ab2@7022> JMP bssseg
00023634 <AmiBlitz3.ab2@7025>   CMP.l #$807f,d0
00023638 <AmiBlitz3.ab2@7026>     BNE.s 'l13
0002363E <AmiBlitz3.ab2@7027> JMP chipseg
00023644 <AmiBlitz3.ab2@7030>   ADDQ.l #1,destpointer                                    ;even
0002364C <AmiBlitz3.ab2@7031>   BCLR #$0,destpointer+3
00023650 <AmiBlitz3.ab2@7032>   SUBI.w #$803C,D0
00023652 <AmiBlitz3.ab2@7033>   LSL.w #2,D0
00023658 <AmiBlitz3.ab2@7034>   MOVEA.l #asmpnts,A0
0002365C <AmiBlitz3.ab2@7035>   MOVEA.l $0(A0,D0.W),A0                                   ;begin inline assembler
00023662 <AmiBlitz3.ab2@7036>   MOVE.w D0,temp1
00023664 <AmiBlitz3.ab2@7037>   MOVE.l A0,-(A7)
00023666 <AmiBlitz3.ab2@7038>   MOVEQ.l #$01,D1
00023692 <AmiBlitz3.ab2@7039>    !fget                                                   ;bsr.w get1bytemain
00023696 <AmiBlitz3.ab2@7040>   CMP.w #$2E,D0
0002369A <AmiBlitz3.ab2@7041>    BNE.w JL_0_6184
000236C6 <AmiBlitz3.ab2@7042>   !fget                                                    ;bsr.w get1bytemain
000236CA <AmiBlitz3.ab2@7043>   ORI.w #$20,D0
000236CE <AmiBlitz3.ab2@7044>   CMP.w #$77,D0                                            ;long
000236D2 <AmiBlitz3.ab2@7045>    BEQ.w JL_0_618A
000236D6 <AmiBlitz3.ab2@7046>   CMP.w #$62,D0                                            ;byte
000236DA <AmiBlitz3.ab2@7047>    BEQ.w JL_0_617A
000236DE <AmiBlitz3.ab2@7048>   CMP.w #$6C,D0                                            ;word
000236E2 <AmiBlitz3.ab2@7049>    BEQ.w JL_0_6196
000236E6 <AmiBlitz3.ab2@7050>   CMP.w #"s",d0
000236EA <AmiBlitz3.ab2@7051>   BNE syntaxerr
000236EE <AmiBlitz3.ab2@7052> BRA.w JL_0_617A
000236F0 <AmiBlitz3.ab2@7055>   MOVEQ.l #$00,D1
000236F4 <AmiBlitz3.ab2@7056>   MOVE.w $8(A0),D0
000236F8 <AmiBlitz3.ab2@7057> BRA.w JL_0_619E
000236FA <AmiBlitz3.ab2@7060>   MOVEQ.l #$04,D1
000236FE <AmiBlitz3.ab2@7061> BRA.w JL_0_61AE
00023700 <AmiBlitz3.ab2@7064>   MOVEQ.l #$04,D1
00023704 <AmiBlitz3.ab2@7065>   MOVE.w $8(A0),D0
00023706 <AmiBlitz3.ab2@7066>   LSR.w #4,D0
0002370A <AmiBlitz3.ab2@7067> BRA.w JL_0_619E
0002370C <AmiBlitz3.ab2@7070>   MOVEQ.l #$08,D1
00023710 <AmiBlitz3.ab2@7071>   MOVE.w $8(A0),D0
00023712 <AmiBlitz3.ab2@7072>   LSR.w #8,D0
00023716 <AmiBlitz3.ab2@7075>    ANDI.w #$F,D0
0002371A <AmiBlitz3.ab2@7076>   CMP.w #$F,D0
0002371E <AmiBlitz3.ab2@7077>    BNE.w 'cl60
00023726 <AmiBlitz3.ab2@7080>    CMP.l #"MULS",-6(a0)
0002372A <AmiBlitz3.ab2@7081>    BNE 'c20
00023730 <AmiBlitz3.ab2@7082>    MOVE.l #$4c000800,d1
00023736 <AmiBlitz3.ab2@7083> JMP do32
0002373E <AmiBlitz3.ab2@7086>    CMP.l #"MULU",-6(a0)
00023742 <AmiBlitz3.ab2@7087>    BNE 'c30
00023748 <AmiBlitz3.ab2@7088>    MOVE.l #$4c000000,d1
0002374E <AmiBlitz3.ab2@7089> JMP do32
00023756 <AmiBlitz3.ab2@7092>    CMP.l #"DIVS",-6(a0)
0002375A <AmiBlitz3.ab2@7093>    BNE 'c40
00023760 <AmiBlitz3.ab2@7094>    MOVE.l #$4c400800,d1
00023766 <AmiBlitz3.ab2@7095> JMP do32
0002376E <AmiBlitz3.ab2@7098>    CMP.l #"DIVU",-6(a0)
00023772 <AmiBlitz3.ab2@7099>    BNE 'c50
00023778 <AmiBlitz3.ab2@7100>    MOVE.l #$4c400000,d1
0002377E <AmiBlitz3.ab2@7101> JMP do32
00023782 <AmiBlitz3.ab2@7104> BRA illsizeerr
000237AE <AmiBlitz3.ab2@7107>   !fget                                                    ;bsr.w get1bytemain
000237B4 <AmiBlitz3.ab2@7110>   MOVE.w D1,asmsize
000237B6 <AmiBlitz3.ab2@7111>   MOVEQ.l #-$01,D3
000237BA <AmiBlitz3.ab2@7112>    BSR.w reget
000237BE <AmiBlitz3.ab2@7113>    BEQ.w JL_0_6200
000237C8 <AmiBlitz3.ab2@7114>   MOVE.l #ptr_parameterstore,asmbuff
000237D2 <AmiBlitz3.ab2@7116>    MOVE.w oldqflag,instringon
000237D8 <AmiBlitz3.ab2@7117>   MOVEA.l lastsourcepos,A5
000237DC <AmiBlitz3.ab2@7118>    BSR.w JL_0_5DC2
000237DE <AmiBlitz3.ab2@7119>   MOVE.l D4,D2                                             ;to src
000237E0 <AmiBlitz3.ab2@7120>   MOVE.l D5,D3
000237EA <AmiBlitz3.ab2@7121>   MOVE.w asmlen2,asmlen
000237EC <AmiBlitz3.ab2@7122>   MOVEQ.l #-$01,D5
000237F6 <AmiBlitz3.ab2@7123>   MOVE.w extraword,extraword2
000237FA <AmiBlitz3.ab2@7124>   CMP.w #$2C,D0                                            ;','
000237FE <AmiBlitz3.ab2@7125>    BNE.w JL_0_6200
00023808 <AmiBlitz3.ab2@7126>   MOVE.l #namebuff2,asmbuff
0002380C <AmiBlitz3.ab2@7127>    BSR.w JL_0_5DC2                                         ;dest
0002380E <AmiBlitz3.ab2@7130>   MOVEA.l (A7)+,A0
00023814 <AmiBlitz3.ab2@7131>   MOVEA.l destpointer,A1
00023816 <AmiBlitz3.ab2@7132>   MOVEA.l A1,A4
00023818 <AmiBlitz3.ab2@7133>   ADDQ.w #2,A1
0002381A <AmiBlitz3.ab2@7134>   MOVE.w (A0),D1
0002381C <AmiBlitz3.ab2@7135>   TST.w D3
00023820 <AmiBlitz3.ab2@7136>    BMI.w JL_0_639E
00023824 <AmiBlitz3.ab2@7137>   MOVE.w $E(A0),D0
00023828 <AmiBlitz3.ab2@7138>    BPL.w JL_0_6264
0002382C <AmiBlitz3.ab2@7139>   BTST #$0,D0
00023830 <AmiBlitz3.ab2@7140>    BEQ.w JL_0_6240
00023834 <AmiBlitz3.ab2@7141>   CMP.w #$1,D5
00023838 <AmiBlitz3.ab2@7142>    BNE.w JL_0_6240
0002383C <AmiBlitz3.ab2@7143>   CMP.w #$E,D3
00023840 <AmiBlitz3.ab2@7144>    BEQ.w JL_0_6264
00023846 <AmiBlitz3.ab2@7145>   MOVE.w temp1,D0
00023848 <AmiBlitz3.ab2@7146>   ADDQ.w #4,D0
0002384C <AmiBlitz3.ab2@7147> BRA.w JL_0_6256
00023850 <AmiBlitz3.ab2@7150>   BTST #$1,D0
00023854 <AmiBlitz3.ab2@7151>    BEQ.w JL_0_6264
00023858 <AmiBlitz3.ab2@7152>   CMP.w #$B,D3
0002385C <AmiBlitz3.ab2@7153>    BNE.w JL_0_6264
00023862 <AmiBlitz3.ab2@7154>   MOVE.w temp1,D0
00023864 <AmiBlitz3.ab2@7157>   ADDQ.w #4,D0
0002386A <AmiBlitz3.ab2@7158>   MOVEA.l #asmpnts,A0
0002386E <AmiBlitz3.ab2@7159>   MOVEA.l $0(A0,D0.W),A0
00023870 <AmiBlitz3.ab2@7160>   MOVE.w (A0),D1
0002387A <AmiBlitz3.ab2@7163>   MOVE.l #ptr_parameterstore,buff1
00023884 <AmiBlitz3.ab2@7164>   MOVE.l #namebuff2,buff2
00023888 <AmiBlitz3.ab2@7165>   MOVE.l $A(A0),D0
0002388C <AmiBlitz3.ab2@7166>    BEQ.w JL_0_62DC
0002388E <AmiBlitz3.ab2@7167>   MOVEA.l D0,A3
00023894 <AmiBlitz3.ab2@7168>   MOVE.w asmsize,D6
00023896 <AmiBlitz3.ab2@7171>    JSR (A3)
0002389A <AmiBlitz3.ab2@7172>    BPL.w JL_0_629A
0002389E <AmiBlitz3.ab2@7173>   CMP.w #-$2,D0
000238A2 <AmiBlitz3.ab2@7174>    BEQ.w illsizeerr
000238A6 <AmiBlitz3.ab2@7175> BRA.w illeaerr
000238AA <AmiBlitz3.ab2@7178>   BEQ.w JL_0_62DC
000238AC <AmiBlitz3.ab2@7179>   EXG.l D2,D4
000238AE <AmiBlitz3.ab2@7180>   EXG.l D3,D5
000238B4 <AmiBlitz3.ab2@7181>   MOVE.l extraword,D6
000238B6 <AmiBlitz3.ab2@7182>   SWAP D6
000238BC <AmiBlitz3.ab2@7183>   MOVE.l D6,extraword
000238C6 <AmiBlitz3.ab2@7184>   MOVE.l #namebuff2,buff1
000238D0 <AmiBlitz3.ab2@7185>   MOVE.l #ptr_parameterstore,buff2
000238D6 <AmiBlitz3.ab2@7186>   MOVE.w asmlen,D6
000238DC <AmiBlitz3.ab2@7187>   MOVE.w asmlen2,D7
000238E2 <AmiBlitz3.ab2@7188>   MOVE.w D6,asmlen2
000238E8 <AmiBlitz3.ab2@7189>   MOVE.w D7,asmlen
000238F2 <AmiBlitz3.ab2@7192>   MOVE.l buff1,asmbuff
000238F6 <AmiBlitz3.ab2@7193>   MOVE.w $E(A0),D0
000238FA <AmiBlitz3.ab2@7194>    BEQ.w JL_0_6348
000238FE <AmiBlitz3.ab2@7195>    BMI.w JL_0_6348
00023902 <AmiBlitz3.ab2@7196>    CMP.w #$7000,d1
00023906 <AmiBlitz3.ab2@7197>    BNE 'skip
0002390A <AmiBlitz3.ab2@7198>    CMP.w #$b,d3
0002390E <AmiBlitz3.ab2@7199>    BNE illeaerr
00023912 <AmiBlitz3.ab2@7202>    CMP.w #$1,D0
00023916 <AmiBlitz3.ab2@7203>    BNE.w JL_0_630E
0002391A <AmiBlitz3.ab2@7204>    CMP.w #$B,D3
0002391E <AmiBlitz3.ab2@7205>    BNE.w JL_0_6348
00023922 <AmiBlitz3.ab2@7208>    BSR.w insasm
00023924 <AmiBlitz3.ab2@7209>   MOVE.w D4,D2
00023926 <AmiBlitz3.ab2@7210>   MOVE.w D5,D3
0002392A <AmiBlitz3.ab2@7211> BRA.w JL_0_6364
0002392E <AmiBlitz3.ab2@7214>    CMP.w #$2,D0
00023932 <AmiBlitz3.ab2@7215>    BNE.w JL_0_6324
00023936 <AmiBlitz3.ab2@7216>   CMP.w #$8,D3
0002393A <AmiBlitz3.ab2@7217>    BNE.w illeaerr
0002393C <AmiBlitz3.ab2@7218>   MOVEQ.l #$09,D3
00023940 <AmiBlitz3.ab2@7219> BRA.w JL_0_6348
00023944 <AmiBlitz3.ab2@7222>    CMP.w #$3,D0
00023948 <AmiBlitz3.ab2@7223>    BEQ.w JL_0_6302
0002394C <AmiBlitz3.ab2@7224>   CMP.w #$4,D0
00023950 <AmiBlitz3.ab2@7225>    BEQ.w JL_0_6302
00023954 <AmiBlitz3.ab2@7226>   CMP.w #$5,D0
00023958 <AmiBlitz3.ab2@7227>    BNE.w JL_0_6348
0002395C <AmiBlitz3.ab2@7228>   CMP.w #$8,D5
00023960 <AmiBlitz3.ab2@7229>    BNE.w illeaerr
00023962 <AmiBlitz3.ab2@7230>   OR.w D2,D1
00023964 <AmiBlitz3.ab2@7231>   MOVEQ.l #$09,D5
00023968 <AmiBlitz3.ab2@7234>   MOVE.w $2(A0),D6
0002396C <AmiBlitz3.ab2@7235>   MOVE.b $6(A0),D7
00023970 <AmiBlitz3.ab2@7236>   MOVEM.l D4-D5,-(A7)
00023976 <AmiBlitz3.ab2@7237>   MOVE.w extraword2,D4
0002397A <AmiBlitz3.ab2@7238>    BSR.w doea
0002397E <AmiBlitz3.ab2@7239>   MOVEM.l (A7)+,D2-D3
00023980 <AmiBlitz3.ab2@7240>   TST.w D3
00023984 <AmiBlitz3.ab2@7243>     BMI.w JL_0_6392
0002398A <AmiBlitz3.ab2@7244>   MOVE.w extraword,D4
0002398E <AmiBlitz3.ab2@7245>   MOVE.w $4(A0),D6
00023992 <AmiBlitz3.ab2@7246>   MOVE.b $7(A0),D7
0002399C <AmiBlitz3.ab2@7247>   MOVE.l buff2,asmbuff
000239A6 <AmiBlitz3.ab2@7248>   MOVE.w asmlen2,asmlen
000239AA <AmiBlitz3.ab2@7249>    BSR.w doea
000239AE <AmiBlitz3.ab2@7250> BRA.w JL_0_63AA
000239B2 <AmiBlitz3.ab2@7253>   MOVE.w $4(A0),D0
000239B6 <AmiBlitz3.ab2@7254>    BNE.w illeaerr
000239BA <AmiBlitz3.ab2@7255> BRA.w JL_0_63AA
000239BE <AmiBlitz3.ab2@7259>   MOVE.w $2(A0),D0
000239C2 <AmiBlitz3.ab2@7260>   OR.w $4(A0),D0
000239C6 <AmiBlitz3.ab2@7261>    BNE.w illeaerr
000239CA <AmiBlitz3.ab2@7264>   MOVE.w $8(A0),D0
000239CE <AmiBlitz3.ab2@7265>   ANDI.w #$F000,D0
000239D2 <AmiBlitz3.ab2@7266>   CMP.w #-$1000,D0
000239D6 <AmiBlitz3.ab2@7267>    BEQ.w JL_0_63D2
000239D8 <AmiBlitz3.ab2@7268>   LSR.w #8,D0
000239DA <AmiBlitz3.ab2@7269>   LSR.w #4,D0
000239DE <AmiBlitz3.ab2@7270>   MOVE.w $8(A0),D2
000239E4 <AmiBlitz3.ab2@7271>   MOVE.w asmsize,D3
000239E6 <AmiBlitz3.ab2@7272>   LSR.w D3,D2
000239EA <AmiBlitz3.ab2@7273>   ANDI.w #$F,D2
000239EC <AmiBlitz3.ab2@7274>   LSL.w D0,D2
000239EE <AmiBlitz3.ab2@7275>   OR.w D2,D1
000239F4 <AmiBlitz3.ab2@7278>   CMPA.l destbufferend,A4
000239F8 <AmiBlitz3.ab2@7279>    BCS.w JL_0_63E8
00023A00 <AmiBlitz3.ab2@7281>   MOVE.w #$FFFF,dontwrite
00023A04 <AmiBlitz3.ab2@7282> BRA.w JL_0_63EA
00023A06 <AmiBlitz3.ab2@7285>   MOVE.w D1,(A4)
00023A0C <AmiBlitz3.ab2@7288>   MOVE.l A1,destpointer
00023A0E <AmiBlitz3.ab2@7289> RTS
00023A14 <AmiBlitz3.ab2@7293>   MOVE.l destpointer,-(A7)
00023A1A <AmiBlitz3.ab2@7294>   MOVE.l A1,destpointer
00023A1E <AmiBlitz3.ab2@7295>    BSR.w addoff
00023A24 <AmiBlitz3.ab2@7296>   MOVEA.l destpointer,A1
00023A2A <AmiBlitz3.ab2@7297>   MOVE.l (A7)+,destpointer
00023A2C <AmiBlitz3.ab2@7298> RTS
00023A30 <AmiBlitz3.ab2@7302>   MOVEM.l d2-d6,-(a7)
00023A36 <AmiBlitz3.ab2@7303>   JSR stripspaces
00023A3A <AmiBlitz3.ab2@7304>   CMP.b #"d",(a5)+
00023A3E <AmiBlitz3.ab2@7305>   BNE noreg
00023A40 <AmiBlitz3.ab2@7306>   MOVE.b (a5)+,d0
00023A44 <AmiBlitz3.ab2@7307>   CMP.b #$30,d0
00023A48 <AmiBlitz3.ab2@7308>   BLT noreg
00023A4C <AmiBlitz3.ab2@7309>   CMP.b #$37,d0
00023A50 <AmiBlitz3.ab2@7310>   BGT noreg
00023A54 <AmiBlitz3.ab2@7311>   SUB.b #$30,d0
00023A56 <AmiBlitz3.ab2@7312>   MOVEQ #0,d3
00023A58 <AmiBlitz3.ab2@7313>   MOVE.b d0,d3                                             ;reg1
00023A5A <AmiBlitz3.ab2@7314>   ASL.l #8,d3
00023A5C <AmiBlitz3.ab2@7315>   ASL.l #8,d3
00023A62 <AmiBlitz3.ab2@7316>   JSR stripspaces
00023A66 <AmiBlitz3.ab2@7317>   CMP.b #",",(a5)+
00023A6A <AmiBlitz3.ab2@7318>   BNE noreg
00023A70 <AmiBlitz3.ab2@7319>   JSR stripspaces
00023A74 <AmiBlitz3.ab2@7320>   CMP.b #"d",(a5)+
00023A78 <AmiBlitz3.ab2@7321>   BNE noreg
00023A7A <AmiBlitz3.ab2@7322>   MOVE.b (a5)+,d0
00023A7E <AmiBlitz3.ab2@7323>   CMP.b #$30,d0
00023A82 <AmiBlitz3.ab2@7324>   BLT noreg
00023A86 <AmiBlitz3.ab2@7325>   CMP.b #$37,d0
00023A8A <AmiBlitz3.ab2@7326>   BGT noreg
00023A8E <AmiBlitz3.ab2@7327>   SUB.b #$30,d0
00023A90 <AmiBlitz3.ab2@7328>   MOVEQ #0,d4
00023A92 <AmiBlitz3.ab2@7329>   MOVE.b d0,d4                                             ;reg2
00023A94 <AmiBlitz3.ab2@7330>   ASL.l #8,d4
00023A96 <AmiBlitz3.ab2@7331>   ASL.l #4,d4
00023A98 <AmiBlitz3.ab2@7332>   OR.b d0,d1
00023A9A <AmiBlitz3.ab2@7333>   OR.l d3,d1
00023A9C <AmiBlitz3.ab2@7334>   OR.l d4,d1
00023AA2 <AmiBlitz3.ab2@7335>   JSR writelong
00023AA6 <AmiBlitz3.ab2@7336>   MOVEM.l (a7)+,d2-d6
00023AAA <AmiBlitz3.ab2@7337>   MOVEM.l d1/a1-a3,-(a7)
00023AAE <AmiBlitz3.ab2@7338> BRA exit
00023AB2 <AmiBlitz3.ab2@7342>   MOVEM.l (a7)+,d2-d6
00023AB8 <AmiBlitz3.ab2@7343>   LEA errtext,a0
00023ABA <AmiBlitz3.ab2@7344>   MOVE.l a0,-(a7)
00023AC0 <AmiBlitz3.ab2@7345> JMP handle_compileerror
00023AC6 <AmiBlitz3.ab2@7354>   MOVE.w dontwrite,D1
00023ACA <AmiBlitz3.ab2@7355>    BNE.w asmfixer__done
00023AD2 <AmiBlitz3.ab2@7356>   BTST #$7,make_smallestcode
00023AD6 <AmiBlitz3.ab2@7357>    BEQ.w asmfixer__go
00023ADA <AmiBlitz3.ab2@7358>   MOVE.w pass(PC),D1
00023ADE <AmiBlitz3.ab2@7359>    BEQ.w asmfixer__done
00023AE4 <AmiBlitz3.ab2@7362>   MOVEA.l templabel,A2                                     ;insert labels in Code
00023AEC <AmiBlitz3.ab2@7363>   MOVE.b #1,curtemplabel
00023AF4 <AmiBlitz3.ab2@7364>   MOVE.w #$FFFF,constmode
00023AFA <AmiBlitz3.ab2@7365>   CLR.w regnum
00023B04 <AmiBlitz3.ab2@7366>           MOVE.l #forthstack,forthsp
00023B0E <AmiBlitz3.ab2@7367>           MOVE.l #precstack,precsp
00023B12 <AmiBlitz3.ab2@7368>    BSR.w prepstack
00023B14 <AmiBlitz3.ab2@7371>   MOVE.l A2,-(A7)
00023B18 <AmiBlitz3.ab2@7372>    BSR.w chkstop
00023B1A <AmiBlitz3.ab2@7373>   MOVEA.l (A7)+,A2
00023B1E <AmiBlitz3.ab2@7374>   CMPA.w #$0,A2
00023B22 <AmiBlitz3.ab2@7375>    BEQ.w asmfixer__done2
00023B28 <AmiBlitz3.ab2@7376>    CLR.b iee
00023B2E <AmiBlitz3.ab2@7377>   MOVE.l A2,asmbuff
00023B32 <AmiBlitz3.ab2@7378>   LEA $10(A2),A5
00023B36 <AmiBlitz3.ab2@7379>   TST.b $F(A2)
00023B3A <AmiBlitz3.ab2@7380>    BNE.w asmfixer__skipo
00023B3C <AmiBlitz3.ab2@7381>   MOVEA.l (A5),A5                                          ;pointer to real text
00023B42 <AmiBlitz3.ab2@7384>    CLR.w asmtype
00023B46 <AmiBlitz3.ab2@7385>    CMP.b #".",(a5)
00023B4A <AmiBlitz3.ab2@7386>    BNE.s asmfixer__skipo_l10
00023B4C <AmiBlitz3.ab2@7387>    MOVE.l a2,-(a7)
00023B4E <AmiBlitz3.ab2@7388>    ADDQ.l #1,a5
00023B54 <AmiBlitz3.ab2@7389>    LEA newtypebase,a2
00023B58 <AmiBlitz3.ab2@7390>    BSR getparameter2
00023B5C <AmiBlitz3.ab2@7391>    BEQ.w syntaxerr
00023B60 <AmiBlitz3.ab2@7392>    BSR findtype
00023B64 <AmiBlitz3.ab2@7393>    BNE.w notypeerr
00023B68 <AmiBlitz3.ab2@7394>    LEA $4(a2),a2
00023B6C <AmiBlitz3.ab2@7395>    BSR getparameter2
00023B70 <AmiBlitz3.ab2@7396>    BEQ.w syntaxerr
00023B74 <AmiBlitz3.ab2@7397>    BSR.w findvariable2
00023B78 <AmiBlitz3.ab2@7398>    BNE.w notypeerr
00023B7C <AmiBlitz3.ab2@7399>    MOVE.w $4(a2),d3
00023B7E <AmiBlitz3.ab2@7400>    EXT.l d3
00023B82 <AmiBlitz3.ab2@7401> BRA asmfixer__skipo_l30b
00023B86 <AmiBlitz3.ab2@7404>   CMP.b #"\",(a5)
00023B8A <AmiBlitz3.ab2@7405>     BNE asmfixer__skipo_l20
00023B8C <AmiBlitz3.ab2@7406>     ADDQ.l #1,a5
00023B8E <AmiBlitz3.ab2@7407>    MOVE.l a2,-(a7)
00023B90 <AmiBlitz3.ab2@7408>    MOVE.l a5,a4
00023B96 <AmiBlitz3.ab2@7409>    LEA usedpath,a5
00023B9A <AmiBlitz3.ab2@7410>    CMP.b #"*",(a5)
00023B9E <AmiBlitz3.ab2@7411>    BNE asmfixer__skipo_lm1
00023BA0 <AmiBlitz3.ab2@7412>    ADDQ.l #1,a5
00023BA4 <AmiBlitz3.ab2@7415>    BSR.w getparameter2
00023BA8 <AmiBlitz3.ab2@7416>    BEQ.w syntaxerr
00023BAE <AmiBlitz3.ab2@7417>    LEA varbase,A2
00023BB6 <AmiBlitz3.ab2@7418>    MOVE.b #1,newvariable
00023BBA <AmiBlitz3.ab2@7419>    BSR.w findvariable
00023BC0 <AmiBlitz3.ab2@7420>    CLR.b newvariable
00023BC6 <AmiBlitz3.ab2@7421>    CMP.l #-1,d0
00023BCA <AmiBlitz3.ab2@7422>    BEQ.w notypeerr
00023BCC <AmiBlitz3.ab2@7423>    MOVE.l a4,a5
00023BD0 <AmiBlitz3.ab2@7424>    MOVE.l $a(a2),a2
00023BD4 <AmiBlitz3.ab2@7425>    LEA $4(a2),a2
00023BD8 <AmiBlitz3.ab2@7426>    BSR getparameter2
00023BDC <AmiBlitz3.ab2@7427>    BEQ.w syntaxerr
00023BE0 <AmiBlitz3.ab2@7428>    BSR.w findvariable2
00023BE4 <AmiBlitz3.ab2@7429>    BNE.w notypeerr
00023BE8 <AmiBlitz3.ab2@7430>   MOVE.w $4(A2),D3
00023BEA <AmiBlitz3.ab2@7431>   EXT.l D3
00023BF0 <AmiBlitz3.ab2@7434>    CMP.b #"[",-1(a5)
00023BF4 <AmiBlitz3.ab2@7435>    BNE asmfixer__skipo_l30c
00023BF6 <AmiBlitz3.ab2@7436>    MOVEQ #0,d0
00023BF8 <AmiBlitz3.ab2@7437>    MOVE.b (a5)+,d0
00023BFA <AmiBlitz3.ab2@7438>    MOVE.l d3,-(a7)
00023BFC <AmiBlitz3.ab2@7439>    MOVEQ #0,d3
00023C02 <AmiBlitz3.ab2@7440>    JSR atoi
00023C04 <AmiBlitz3.ab2@7441>    MOVE.l (a7)+,d1
00023C08 <AmiBlitz3.ab2@7442>    MOVE.l $a(a2),a2
00023C0C <AmiBlitz3.ab2@7443>    MOVE.w 8(a2),d0
00023C0E <AmiBlitz3.ab2@7444>    MULS d0,d3
00023C10 <AmiBlitz3.ab2@7445>    ADD.l d1,d3
00023C12 <AmiBlitz3.ab2@7448>   MOVE.l (a7)+,a2
00023C16 <AmiBlitz3.ab2@7449> BRA asmfixer__oko
00023C1C <AmiBlitz3.ab2@7452>   CMP.w #$c,$8(a2)
00023C20 <AmiBlitz3.ab2@7453>      BEQ asmfixer__skipo_lf1
00023C26 <AmiBlitz3.ab2@7454>      CMP.w #$d,$8(a2)
00023C2A <AmiBlitz3.ab2@7455>      BEQ asmfixer__skipo_lf1
00023C30 <AmiBlitz3.ab2@7458>   JSR AJL_0_BF6E
00023C36 <AmiBlitz3.ab2@7461>   MOVEA.l asmbuff,A2
00023C3A <AmiBlitz3.ab2@7462>    BEQ.w asmfixer__oko
00023C3E <AmiBlitz3.ab2@7463>   CMP.w #$28,D0
00023C42 <AmiBlitz3.ab2@7464>    BEQ.w asmfixer__oko
00023C46 <AmiBlitz3.ab2@7465>   CMP.w #$2C,D0
00023C4A <AmiBlitz3.ab2@7466>    BEQ.w asmfixer__oko
00023C4E <AmiBlitz3.ab2@7467> BRA.w syntaxerr
00023C56 <AmiBlitz3.ab2@7470>   MOVE.b #1,iee
00023C5A <AmiBlitz3.ab2@7471> BRA asmfixer__skipo_lf2
00023C5E <AmiBlitz3.ab2@7474>   MOVEA.l $4(A2),A1
00023C62 <AmiBlitz3.ab2@7476>   MOVE.w $8(A2),D1                                         ;labelmode
00023C66 <AmiBlitz3.ab2@7477>   CMP.w #$5,D1
00023C6A <AmiBlitz3.ab2@7478>    BNE.w asmfixer__notdan
00023C6E <AmiBlitz3.ab2@7481>    BSR.w chkword                                         ;word
00023C70 <AmiBlitz3.ab2@7484>   MOVE.w D3,(A1)
00023C74 <AmiBlitz3.ab2@7485> BRA.w asmfixer__next
00023C78 <AmiBlitz3.ab2@7488>   CMP.w #$6,D1
00023C7C <AmiBlitz3.ab2@7489>    BNE.w asmfixer__notdanxi
00023C80 <AmiBlitz3.ab2@7492>    BSR.w chkbyte                                         ;byte
00023C84 <AmiBlitz3.ab2@7495>   MOVE.b D3,$1(A1)
00023C88 <AmiBlitz3.ab2@7496> BRA.w asmfixer__next
00023C8C <AmiBlitz3.ab2@7499>    CMP.w #$11,D1                                           ;byte
00023C90 <AmiBlitz3.ab2@7500>    BEQ.w asmfixer__isbyte2
00023C94 <AmiBlitz3.ab2@7501>    CMP.w #$c,d1
00023C98 <AmiBlitz3.ab2@7502>    BEQ asmfixer__single1
00023C9C <AmiBlitz3.ab2@7503>    CMP.w #$d,d1
00023CA0 <AmiBlitz3.ab2@7504>    BEQ asmfixer__double1
00023CA4 <AmiBlitz3.ab2@7505>   CMP.w #$7,D1
00023CA8 <AmiBlitz3.ab2@7506>    BEQ.w asmfixer__word                                    ;word
00023CAC <AmiBlitz3.ab2@7507>   CMP.w #$8,D1
00023CB0 <AmiBlitz3.ab2@7508>    BNE.w asmfixer__notabsl
00023CB6 <AmiBlitz3.ab2@7511>   MOVE.w asmtype,D1                                        ;long
00023CBA <AmiBlitz3.ab2@7512>    BEQ.w asmfixer__notpcrel
00023CBE <AmiBlitz3.ab2@7513>      BSR.w asmoff
00023CC0 <AmiBlitz3.ab2@7516>   MOVE.l D3,(A1)
00023CC4 <AmiBlitz3.ab2@7517> BRA.w asmfixer__next
00023CCA <AmiBlitz3.ab2@7521>   fmove.s fp0,0(a1)
00023CCE <AmiBlitz3.ab2@7522> BRA.w asmfixer__next
00023CD4 <AmiBlitz3.ab2@7526>   fmove.d fp0,0(a1)
00023CD8 <AmiBlitz3.ab2@7527> BRA.w asmfixer__next
00023CDC <AmiBlitz3.ab2@7531>   CMP.w #$9,D1
00023CE0 <AmiBlitz3.ab2@7532>    BNE.w asmfixer__notdpc
00023CE2 <AmiBlitz3.ab2@7533>   SUB.l A1,D3                                              ;branchword
00023CE6 <AmiBlitz3.ab2@7534>    BSR.w chkword
00023CE8 <AmiBlitz3.ab2@7535>   MOVE.w D3,(A1)
00023CEC <AmiBlitz3.ab2@7536> BRA.w asmfixer__next
00023CF0 <AmiBlitz3.ab2@7540>   CMP.w #$A,D1
00023CF4 <AmiBlitz3.ab2@7541>    BNE.w asmfixer__imm
00023CF6 <AmiBlitz3.ab2@7542>   SUB.l A1,D3                                              ;branchbyte
00023CFA <AmiBlitz3.ab2@7543> BRA.w asmfixer__isbyte
00023CFE <AmiBlitz3.ab2@7547>   CMP.w #$11,d1
00023D02 <AmiBlitz3.ab2@7548>   BLE asmfixer__imm_org
00023D04 <AmiBlitz3.ab2@7549>   MOVE.l a3,-(a7)
00023D0A <AmiBlitz3.ab2@7550>   LEA pluginbase,a3
00023D0E <AmiBlitz3.ab2@7551>   MOVE.l 8(a2),a0
00023D10 <AmiBlitz3.ab2@7552>   JSR (a0)                                                 ;hook
00023D12 <AmiBlitz3.ab2@7553>   MOVE.l (a7)+,a3
00023D16 <AmiBlitz3.ab2@7554> BRA asmfixer__next
00023D1A <AmiBlitz3.ab2@7557>   MOVE.w $A(A2),D0
00023D1E <AmiBlitz3.ab2@7558>    BEQ.w asmfixer__noflag
00023D22 <AmiBlitz3.ab2@7559>   CMP.w #$1,D0
00023D26 <AmiBlitz3.ab2@7560>    BEQ.w asmfixer__tocount
00023D2A <AmiBlitz3.ab2@7561>   CMP.w #$3,D0
00023D2E <AmiBlitz3.ab2@7562>    BEQ.w asmfixer__tomoveq
00023D32 <AmiBlitz3.ab2@7563>   CMP.w #$4,D0
00023D36 <AmiBlitz3.ab2@7564>    BEQ.w asmfixer__totrap
00023D3A <AmiBlitz3.ab2@7567>   CMP.w #$B,D1                                             ;long
00023D3E <AmiBlitz3.ab2@7568>    BEQ.w asmfixer__isabsl
00023D42 <AmiBlitz3.ab2@7569> BRA asmfixer__word2                                              ;word
00023D48 <AmiBlitz3.ab2@7572>   CMP.l #$F,D3
00023D4C <AmiBlitz3.ab2@7573>    BHI.w illtraperr
00023D4E <AmiBlitz3.ab2@7574>   OR.b D3,-(A1)
00023D52 <AmiBlitz3.ab2@7575> BRA.w asmfixer__next
00023D58 <AmiBlitz3.ab2@7578>   CMP.l #$8,D3
00023D5C <AmiBlitz3.ab2@7579>    BHI.w illimmerr
00023D5E <AmiBlitz3.ab2@7580>   TST.l D3
00023D62 <AmiBlitz3.ab2@7581>    BEQ.w illimmerr
00023D66 <AmiBlitz3.ab2@7582>   ANDI.w #$7,D3
00023D68 <AmiBlitz3.ab2@7583>   LSL.w #8,D3
00023D6A <AmiBlitz3.ab2@7584>   LSL.w #1,D3
00023D6C <AmiBlitz3.ab2@7585>   OR.w D3,-(A1)
00023D70 <AmiBlitz3.ab2@7586> BRA.w asmfixer__next
00023D74 <AmiBlitz3.ab2@7589>    BSR.w chkbyte
00023D76 <AmiBlitz3.ab2@7590>   MOVE.b D3,-(A1)
00023D78 <AmiBlitz3.ab2@7593>   MOVEA.l (A2),A2
00023D7C <AmiBlitz3.ab2@7594> BRA.w asmfixer__loop
00023D82 <AmiBlitz3.ab2@7597>   CLR.w constmode
00023D88 <AmiBlitz3.ab2@7600>   CLR.b curtemplabel
00023D8A <AmiBlitz3.ab2@7601> RTS
00023D8C <AmiBlitz3.ab2@7610>   BTST D3,D6
00023D90 <AmiBlitz3.ab2@7611>    BEQ.w illeaerr
00023D94 <AmiBlitz3.ab2@7612>    BSR.w makemode
00023D98 <AmiBlitz3.ab2@7613>   CMP.w #$7,D3
00023D9C <AmiBlitz3.ab2@7614>    BCS.w doea__skip
00023D9E <AmiBlitz3.ab2@7615>   MOVE.w D3,D2
00023DA0 <AmiBlitz3.ab2@7616>   SUBQ.w #7,D2
00023DA4 <AmiBlitz3.ab2@7617>   CMP.w #$5,D2
00023DA8 <AmiBlitz3.ab2@7618>    BCS.w doea__skip0
00023DAA <AmiBlitz3.ab2@7619>   MOVEQ.l #$04,D2
00023DAC <AmiBlitz3.ab2@7622>   MOVEQ.l #$07,D3
00023DAE <AmiBlitz3.ab2@7625>   MOVE.b D7,D0
00023DB2 <AmiBlitz3.ab2@7626>   ANDI.w #$F,D0
00023DB6 <AmiBlitz3.ab2@7627>   CMP.w #$F,D0
00023DBA <AmiBlitz3.ab2@7628>    BEQ.w doea__skip2
00023DBC <AmiBlitz3.ab2@7629>   LSL.w D0,D3
00023DBE <AmiBlitz3.ab2@7630>   OR.w D3,D1
00023DC0 <AmiBlitz3.ab2@7633>   LSR.w #4,D7
00023DC4 <AmiBlitz3.ab2@7634>   ANDI.w #$F,D7
00023DC8 <AmiBlitz3.ab2@7635>   CMP.w #$F,D7
00023DCC <AmiBlitz3.ab2@7636>    BEQ.w doea__skip3
00023DCE <AmiBlitz3.ab2@7637>   LSL.w D7,D2
00023DD0 <AmiBlitz3.ab2@7638>   OR.w D2,D1
00023DD2 <AmiBlitz3.ab2@7641> RTS
00023DD8 <AmiBlitz3.ab2@7645>   CMP.l #$7F,D3
00023DDC <AmiBlitz3.ab2@7646>    BGT.w illdiserr
00023DE2 <AmiBlitz3.ab2@7647>   CMP.l #$FFFFFF80,D3                                      ;#-128,d3 org source
00023DE6 <AmiBlitz3.ab2@7648>    BLT.w illdiserr
00023DE8 <AmiBlitz3.ab2@7649> RTS
00023DEE <AmiBlitz3.ab2@7653>   CMP.l #$7fff,D3
00023DF2 <AmiBlitz3.ab2@7654>    BGT.w illdiserr
00023DF8 <AmiBlitz3.ab2@7655>   CMP.l #$FFFF8000,D3                                      ;#-32768,d3 org source
00023DFC <AmiBlitz3.ab2@7656>    BLT.w illdiserr
00023DFE <AmiBlitz3.ab2@7657> RTS
00023E00 <AmiBlitz3.ab2@7662>   MOVE.b (a5)+,d0
00023E02 <AmiBlitz3.ab2@7663>   CMP.b d1,d0
00023E06 <AmiBlitz3.ab2@7664>   BEQ 'll10
00023E08 <AmiBlitz3.ab2@7665>   TST.b d0
00023E0C <AmiBlitz3.ab2@7666>   BNE 'll20
00023E0E <AmiBlitz3.ab2@7669>   SUBQ #1,a5
00023E10 <AmiBlitz3.ab2@7670> RTS
00023E12 <AmiBlitz3.ab2@7675>   MOVE.b (a5)+,d0
00023E16 <AmiBlitz3.ab2@7676>   CMP.b #",",d0
00023E1A <AmiBlitz3.ab2@7677>   BEQ 'll10
00023E1E <AmiBlitz3.ab2@7678>   CMP.b #";",d0
00023E22 <AmiBlitz3.ab2@7679>   BEQ 'll10
00023E26 <AmiBlitz3.ab2@7680>  CMP.b #":",d0
00023E2A <AmiBlitz3.ab2@7681>   BEQ 'll10
00023E2C <AmiBlitz3.ab2@7684>   TST.b d0
00023E30 <AmiBlitz3.ab2@7685>   BNE 'll20
00023E32 <AmiBlitz3.ab2@7688>   SUBQ #1,a5
00023E34 <AmiBlitz3.ab2@7689> RTS
00023E36 <AmiBlitz3.ab2@7693>   ADD.l a2,d1
00023E3C <AmiBlitz3.ab2@7694>   LEA tempspace,a1
00023E3E <AmiBlitz3.ab2@7695>   MOVE.l d1,a0
00023E40 <AmiBlitz3.ab2@7698>   MOVE.b (a0)+,(a1)+
00023E44 <AmiBlitz3.ab2@7699>   BNE.s 'l10
00023E46 <AmiBlitz3.ab2@7700>   SUBQ.l #1,a0
00023E48 <AmiBlitz3.ab2@7701>   SUBQ.l #1,a1
00023E4A <AmiBlitz3.ab2@7704>   MOVE.b (a5)+,(a1)+
00023E4E <AmiBlitz3.ab2@7705>   BNE.s 'l20
00023E50 <AmiBlitz3.ab2@7706>   CLR.b (a1)
00023E56 <AmiBlitz3.ab2@7707>   LEA tempspace,a5
00023E58 <AmiBlitz3.ab2@7708> RTS
00023E5C <AmiBlitz3.ab2@7712>   MOVEM.l D1-D2/A0,-(A7)
00023E5E <AmiBlitz3.ab2@7713>   MOVE.l d0,d2
00023E60 <AmiBlitz3.ab2@7714>   MOVEQ #0,d1
00023E62 <AmiBlitz3.ab2@7715>   MOVE.l a5,a4
00023E64 <AmiBlitz3.ab2@7718>   ADDQ.l #1,d1
00023E66 <AmiBlitz3.ab2@7719>   MOVE.b (a5)+,d0
00023E6A <AmiBlitz3.ab2@7720>   CMP.b #",",d0
00023E6E <AmiBlitz3.ab2@7721>   BEQ 'll10
00023E72 <AmiBlitz3.ab2@7722>   CMP.b #";",d0
00023E76 <AmiBlitz3.ab2@7723>   BEQ 'll10
00023E7A <AmiBlitz3.ab2@7724>   CMP.b #":",d0
00023E7E <AmiBlitz3.ab2@7725>   BEQ 'll10
00023E82 <AmiBlitz3.ab2@7726>   CMP.b #"(",d0
00023E86 <AmiBlitz3.ab2@7727>   BEQ 'll10
00023E88 <AmiBlitz3.ab2@7728>   TST.b d0
00023E8C <AmiBlitz3.ab2@7729>   BNE 'll20
00023E8E <AmiBlitz3.ab2@7732>   SUBQ #1,a5
00023E92 <AmiBlitz3.ab2@7733>   CMP.b #"'",(a4)
00023E96 <AmiBlitz3.ab2@7734>   BEQ 'llocal
00023E9C <AmiBlitz3.ab2@7735>   TST.w inmacro
00023EA0 <AmiBlitz3.ab2@7736>   BNE 'lmacro
00023EA2 <AmiBlitz3.ab2@7737>   MOVEQ.l #$14+4,D0
00023EA4 <AmiBlitz3.ab2@7738>   ADD.l d1,d0
00023EA6 <AmiBlitz3.ab2@7739>   MOVE.l d1,-(a7)
00023EA8 <AmiBlitz3.ab2@7740>   MOVEQ.l #$01,D1
00023EAE <AmiBlitz3.ab2@7741>   MOVEA.l _execbase,A6
00023EB4 <AmiBlitz3.ab2@7742>   MOVE.l mempool2,a0
00023EB8 <AmiBlitz3.ab2@7743>   JSR _AllocPooled(a6)
00023EBA <AmiBlitz3.ab2@7745>   MOVE.l (a7)+,d1
00023EBC <AmiBlitz3.ab2@7746>   TST.l d0
00023EC0 <AmiBlitz3.ab2@7747>   BEQ nomemory
00023EC2 <AmiBlitz3.ab2@7748>   MOVEA.l D0,A0
00023ECA <AmiBlitz3.ab2@7750>   MOVE.w linenumat+2,$A(A0)
00023ED0 <AmiBlitz3.ab2@7752>   MOVE.l templabel,(A0)
00023ED6 <AmiBlitz3.ab2@7753>   MOVE.l A0,templabel
00023EDE <AmiBlitz3.ab2@7754>   MOVE.l destpointer,$4(A0)
00023EE2 <AmiBlitz3.ab2@7755>   MOVE.l d2,$8(A0)
00023EE6 <AmiBlitz3.ab2@7756>   LEA $E(A0),A0
00023EEA <AmiBlitz3.ab2@7757>   MOVE.b #$14,(A0)+
00023EEC <AmiBlitz3.ab2@7758>   CLR.b (a0)+
00023EEE <AmiBlitz3.ab2@7760>   MOVE.l a0,d2
00023EF0 <AmiBlitz3.ab2@7761>   ADDQ.l #4,d2
00023EF2 <AmiBlitz3.ab2@7762>   MOVE.l d2,(a0)+
00023EF4 <AmiBlitz3.ab2@7765>   MOVE.b (a4)+,(a0)+
00023EF6 <AmiBlitz3.ab2@7766>   SUBQ.l #1,d1
00023EFA <AmiBlitz3.ab2@7767>   BNE 'lc1
00023EFC <AmiBlitz3.ab2@7768>   CLR.b (a0)+
00023F02 <AmiBlitz3.ab2@7769>   MOVE.w linenumat,(a0)
00023F06 <AmiBlitz3.ab2@7770>   MOVEM.l (A7)+,D1-D2/A0
00023F08 <AmiBlitz3.ab2@7771> RTS
00023F0A <AmiBlitz3.ab2@7774>   MOVEQ.l #$10+2,D0
00023F0C <AmiBlitz3.ab2@7775>   ADD.l d1,d0
00023F10 <AmiBlitz3.ab2@7776>   MOVEM.l a4/d3,-(a7)
00023F12 <AmiBlitz3.ab2@7777>   MOVE.l d1,d3
00023F14 <AmiBlitz3.ab2@7778>   MOVEQ.l #$01,D1
00023F1A <AmiBlitz3.ab2@7779>   MOVEA.l _execbase,A6
00023F20 <AmiBlitz3.ab2@7780>   MOVE.l mempool2,a0
00023F24 <AmiBlitz3.ab2@7781>   JSR _AllocPooled(a6)
00023F26 <AmiBlitz3.ab2@7783>   TST.l d0
00023F2A <AmiBlitz3.ab2@7784>   BEQ nomemory
00023F2C <AmiBlitz3.ab2@7785>   MOVEA.l D0,A0
00023F34 <AmiBlitz3.ab2@7788>   MOVE.w linenumat+2,$C(A0)
00023F3A <AmiBlitz3.ab2@7789>   MOVE.l templabel,(A0)
00023F40 <AmiBlitz3.ab2@7790>   MOVE.l A0,templabel
00023F48 <AmiBlitz3.ab2@7791>   MOVE.l destpointer,$4(A0)
00023F4C <AmiBlitz3.ab2@7792>   MOVE.l d2,$8(A0)
00023F50 <AmiBlitz3.ab2@7793>   LEA $E(A0),A0
00023F52 <AmiBlitz3.ab2@7794>   MOVE.b d3,(A0)+
00023F58 <AmiBlitz3.ab2@7795>   ADD.b #$10,-1(a0)
00023F5C <AmiBlitz3.ab2@7796>   MOVE.b #$1,(a0)+
00023F5E <AmiBlitz3.ab2@7797>   SUBQ.w #1,d3
00023F60 <AmiBlitz3.ab2@7800>   MOVE.b (a4)+,(a0)+
00023F62 <AmiBlitz3.ab2@7801>   SUBQ.l #1,d3
00023F66 <AmiBlitz3.ab2@7802>   BNE.s 'lm2
00023F68 <AmiBlitz3.ab2@7803>   CLR.b (a0)+
00023F6E <AmiBlitz3.ab2@7804>   MOVE.w linenumat,(a0)
00023F72 <AmiBlitz3.ab2@7805>   MOVEM.l (a7)+,d3/a4
00023F76 <AmiBlitz3.ab2@7806>   MOVEM.l (A7)+,D1-D2/A0
00023F78 <AmiBlitz3.ab2@7807> RTS
00023F7E <AmiBlitz3.ab2@7810>   LEA lastgloballabel,a1
00023F80 <AmiBlitz3.ab2@7813>   ADDQ.l #1,d1
00023F82 <AmiBlitz3.ab2@7814>   TST.b (a1)+
00023F86 <AmiBlitz3.ab2@7815>   BNE.s 'll11
00023F88 <AmiBlitz3.ab2@7816>   MOVEQ.l #$10+2,D0
00023F8A <AmiBlitz3.ab2@7817>   ADD.l d1,d0
00023F8E <AmiBlitz3.ab2@7818>   MOVEM.l a4/d3,-(a7)
00023F90 <AmiBlitz3.ab2@7819>   MOVE.l d1,d3
00023F92 <AmiBlitz3.ab2@7820>   MOVEQ.l #$01,D1
00023F98 <AmiBlitz3.ab2@7821>   MOVEA.l _execbase,A6
00023F9E <AmiBlitz3.ab2@7822>   MOVE.l mempool2,a0
00023FA2 <AmiBlitz3.ab2@7823>   JSR _AllocPooled(a6)
00023FA4 <AmiBlitz3.ab2@7825>   TST.l d0
00023FA8 <AmiBlitz3.ab2@7826>   BEQ nomemory
00023FAA <AmiBlitz3.ab2@7827>   MOVEA.l D0,A0
00023FB2 <AmiBlitz3.ab2@7830>   MOVE.w linenumat+2,$C(A0)
00023FB8 <AmiBlitz3.ab2@7831>   MOVE.l templabel,(A0)
00023FBE <AmiBlitz3.ab2@7832>   MOVE.l A0,templabel
00023FC6 <AmiBlitz3.ab2@7833>   MOVE.l destpointer,$4(A0)
00023FCA <AmiBlitz3.ab2@7834>   MOVE.l d2,$8(A0)
00023FCE <AmiBlitz3.ab2@7835>   LEA $E(A0),A0
00023FD0 <AmiBlitz3.ab2@7836>   MOVE.b d3,(A0)+
00023FD6 <AmiBlitz3.ab2@7837>   ADD.b #$10,-1(a0)
00023FDA <AmiBlitz3.ab2@7838>   MOVE.b #$1,(a0)+
00023FDC <AmiBlitz3.ab2@7839>   SUBQ.w #1,d3
00023FE2 <AmiBlitz3.ab2@7840>   LEA lastgloballabel,a1
00023FE4 <AmiBlitz3.ab2@7843>   SUBQ.l #1,d3
00023FE6 <AmiBlitz3.ab2@7844>   MOVE.b (a1)+,(a0)+
00023FEA <AmiBlitz3.ab2@7845>   BNE.s 'lm3
00023FEC <AmiBlitz3.ab2@7846>   SUBQ.l #1,a0
00023FEE <AmiBlitz3.ab2@7849>   MOVE.b (a4)+,(a0)+
00023FF0 <AmiBlitz3.ab2@7850>   SUBQ.l #1,d3
00023FF4 <AmiBlitz3.ab2@7851>   BNE.s 'lm1
00023FF6 <AmiBlitz3.ab2@7852>   CLR.b (a0)+
00023FFC <AmiBlitz3.ab2@7853>   MOVE.w linenumat,(a0)
00024000 <AmiBlitz3.ab2@7854>   MOVEM.l (a7)+,d3/a4
00024004 <AmiBlitz3.ab2@7855>   MOVEM.l (A7)+,D1-D2/A0
00024006 <AmiBlitz3.ab2@7856> RTS
00024030 <AmiBlitz3.ab2@7860>   !basic
00024092 <AmiBlitz3.ab2@7861>   error{!TRANS{"No memory available!!!\\nAB3 will terminate due to low memory!"}}
000240A4 <AmiBlitz3.ab2@7862>   loop Delay_ 1
000240AA <AmiBlitz3.ab2@7863> Goto loop
000240AE <AmiBlitz3.ab2@7867>   MOVEM.l D0-D2/A0,-(A7)
000240B2 <AmiBlitz3.ab2@7868>   MOVE.w $E(A0),-(A7)
000240B6 <AmiBlitz3.ab2@7869>    BPL.w insasm__ok
000240B8 <AmiBlitz3.ab2@7870>   CLR.w (A7)
000240BA <AmiBlitz3.ab2@7873>   MOVE.l A1,-(A7)
000240BC <AmiBlitz3.ab2@7874>   MOVEQ.l #$10+2,D0
000240C2 <AmiBlitz3.ab2@7875>   ADD.w asmlen,D0
000240C4 <AmiBlitz3.ab2@7876>   MOVE.w D0,D2
000240C6 <AmiBlitz3.ab2@7877>   MOVEQ.l #$01,D1
000240CC <AmiBlitz3.ab2@7878>   MOVEA.l _execbase,A6
000240D2 <AmiBlitz3.ab2@7879>   MOVE.l mempool2,a0
000240D6 <AmiBlitz3.ab2@7880>   JSR _AllocPooled(a6)
000240D8 <AmiBlitz3.ab2@7882>   MOVEA.l D0,A0
000240E0 <AmiBlitz3.ab2@7885>   MOVE.w linenumat+2,$C(A0)
000240E6 <AmiBlitz3.ab2@7886>   MOVE.l templabel,(A0)
000240EC <AmiBlitz3.ab2@7887>   MOVE.l A0,templabel
000240F0 <AmiBlitz3.ab2@7888>   MOVE.l (A7),$4(A0)
000240F4 <AmiBlitz3.ab2@7889>   MOVE.w d3,$8(A0)
000240FA <AmiBlitz3.ab2@7890>   MOVE.w $4(A7),$A(A0)
000240FE <AmiBlitz3.ab2@7891>   LEA $E(A0),A0
00024100 <AmiBlitz3.ab2@7892>   MOVE.b D2,(A0)+                                           ;length
00024106 <AmiBlitz3.ab2@7893>   MOVEA.l asmbuff,A1
00024108 <AmiBlitz3.ab2@7894>   ADDQ.w #1,A1
0002410A <AmiBlitz3.ab2@7895>   MOVE.b (A1)+,(A0)+                                        ;type - 0 = indirect,else direct
0002410E <AmiBlitz3.ab2@7896>    BNE.w insasm__loop
00024110 <AmiBlitz3.ab2@7897>   MOVE.l (A1)+,(A0)+
00024116 <AmiBlitz3.ab2@7898>   MOVE.w linenumat,(a0)
0002411A <AmiBlitz3.ab2@7899> BRA.w insasm__loopdone
0002411C <AmiBlitz3.ab2@7902>    MOVE.b (A1)+,(A0)+
00024120 <AmiBlitz3.ab2@7903>    BNE.w insasm__loop
00024126 <AmiBlitz3.ab2@7904>    MOVE.w linenumat,(a0)
00024128 <AmiBlitz3.ab2@7907>   MOVEA.l (A7)+,A1
0002412A <AmiBlitz3.ab2@7908>   ADDQ.w #2,A7
0002412E <AmiBlitz3.ab2@7909>   MOVEM.l (A7)+,D0-D2/A0
00024130 <AmiBlitz3.ab2@7910> RTS
00024134 <AmiBlitz3.ab2@7914>   CMP.w #$5,D3
00024138 <AmiBlitz3.ab2@7915>    BCS.w makemode__done
0002413C <AmiBlitz3.ab2@7916>   CMP.w #$B,D3
00024140 <AmiBlitz3.ab2@7917>    BHI.w makemode__done2
00024144 <AmiBlitz3.ab2@7918>    BEQ.w makemode__imm
00024148 <AmiBlitz3.ab2@7919>    BSR.w insasm
0002414C <AmiBlitz3.ab2@7920>   CMP.w #$5,D3
00024150 <AmiBlitz3.ab2@7921>    BEQ.w makemode__word
00024154 <AmiBlitz3.ab2@7922>   CMP.w #$6,D3
00024158 <AmiBlitz3.ab2@7923>    BEQ.w makemode__dxi
0002415C <AmiBlitz3.ab2@7924>   CMP.w #$7,D3
00024160 <AmiBlitz3.ab2@7925>    BEQ.w makemode__word
00024164 <AmiBlitz3.ab2@7926>   CMP.w #$8,D3
00024168 <AmiBlitz3.ab2@7927>    BEQ.w makemode__long
0002416C <AmiBlitz3.ab2@7928>   CMP.w #$9,D3
00024170 <AmiBlitz3.ab2@7929>    BEQ.w makemode__word
00024176 <AmiBlitz3.ab2@7933>   CMPA.l destbufferend,A1
0002417A <AmiBlitz3.ab2@7934>    BCS.w makemode__ok7
0002417C <AmiBlitz3.ab2@7935>   ADDQ.w #2,A1
0002417E <AmiBlitz3.ab2@7936> RTS
00024180 <AmiBlitz3.ab2@7939>   MOVE.w D4,(A1)+
00024182 <AmiBlitz3.ab2@7940> RTS
0002418A <AmiBlitz3.ab2@7943>   CMPI.w #$8,asmsize
0002418E <AmiBlitz3.ab2@7944>    BCC.w makemode__immlong
00024190 <AmiBlitz3.ab2@7945>   MOVEQ.l #$10,D3
00024194 <AmiBlitz3.ab2@7946>    BSR.w insasm
00024196 <AmiBlitz3.ab2@7947>   MOVEQ.l #$0B,D3
0002419A <AmiBlitz3.ab2@7948> BRA.w makemode__word
0002419E <AmiBlitz3.ab2@7951>   BSR.w insasm
000241A0 <AmiBlitz3.ab2@7954>   ADDQ.w #2,A1
000241A2 <AmiBlitz3.ab2@7957>   ADDQ.w #2,A1
000241A4 <AmiBlitz3.ab2@7958> RTS
000241A8 <AmiBlitz3.ab2@7961>   CMP.w #$F,D3
000241AC <AmiBlitz3.ab2@7962>    BNE.w makemode__done
000241B2 <AmiBlitz3.ab2@7963>   CMPA.l destbufferend,A1
000241B6 <AmiBlitz3.ab2@7964>    BCS.w makemode__ok3
000241B8 <AmiBlitz3.ab2@7965>   ADDQ.w #2,A1
000241BA <AmiBlitz3.ab2@7966>   ADDQ.w #4,A7
000241BC <AmiBlitz3.ab2@7967> RTS
000241BE <AmiBlitz3.ab2@7970>   MOVE.w D2,(A1)+
000241C0 <AmiBlitz3.ab2@7971>   ADDQ.w #4,A7
000241C2 <AmiBlitz3.ab2@7974> RTS
000241C6 <AmiBlitz3.ab2@7978>   BSR.w storeloc
000241D0 <AmiBlitz3.ab2@7979>   MOVE.l linenumat,oldline
000241D2 <AmiBlitz3.ab2@7980>   MOVEQ.l #$00,D1
000241D6 <AmiBlitz3.ab2@7981>    BSR.w get1bytemain
000241DA <AmiBlitz3.ab2@7982>    BEQ.w JL_0_676E
000241DC <AmiBlitz3.ab2@7983>   MOVEQ.l #$00,D3
000241E0 <AmiBlitz3.ab2@7984> BRA.w JL_0_6726
000241E4 <AmiBlitz3.ab2@7987>    BSR.w get1bytemain
000241E8 <AmiBlitz3.ab2@7988>    BNE.w JL_0_671C
000241EA <AmiBlitz3.ab2@7991>   TST.w D3
000241EE <AmiBlitz3.ab2@7992>    BNE.w brackets_                                         ;syntax error brackets
000241F2 <AmiBlitz3.ab2@7993> BRA.w JL_0_676C
000241F8 <AmiBlitz3.ab2@7996>    MOVE.w instringon,D4
000241FC <AmiBlitz3.ab2@7998>      BEQ JL_0_6726
000241FE <AmiBlitz3.ab2@8001>     MOVEQ #0,d0
00024200 <AmiBlitz3.ab2@8002>      MOVE.b (a5)+,d0                                       ;fix "ue"
00024206 <AmiBlitz3.ab2@8003>      MOVE.w d0,lastchar
0002420A <AmiBlitz3.ab2@8004>      BEQ ready
0002420E <AmiBlitz3.ab2@8005>      CMP.b #$22,d0
00024212 <AmiBlitz3.ab2@8006>      BNE 'l1
00024218 <AmiBlitz3.ab2@8007>      NOT.w instringon
0002421C <AmiBlitz3.ab2@8008> BRA JL_0_670A
00024220 <AmiBlitz3.ab2@8011>            CMP.b #"@",d0                                   ;expand line @@ 1. for parameter
00024224 <AmiBlitz3.ab2@8012>            BNE 'l10
00024228 <AmiBlitz3.ab2@8013>            CMP.b #"@",(a5)
0002422C <AmiBlitz3.ab2@8014>            BNE 'l10
00024232 <AmiBlitz3.ab2@8017>            TST.w ininclude
00024236 <AmiBlitz3.ab2@8018>            BNE 'inc
0002423C <AmiBlitz3.ab2@8019>            MOVE.l sourceline3,a5
00024242 <AmiBlitz3.ab2@8020>            CMP.l #0,a5
00024246 <AmiBlitz3.ab2@8021>            BNE 'l11t
0002424C <AmiBlitz3.ab2@8022>            MOVEA.l sourceline,A5
0002424E <AmiBlitz3.ab2@8025>            MOVEA.l (A5),A5
00024254 <AmiBlitz3.ab2@8026>            CMP.l #0,a5
00024258 <AmiBlitz3.ab2@8027>            BEQ JL_0_676C
0002425E <AmiBlitz3.ab2@8028>            MOVE.l a5,sourceline3
00024262 <AmiBlitz3.ab2@8029>            LEA $9(A5),A5
00024266 <AmiBlitz3.ab2@8030> BRA 'l11
00024268 <AmiBlitz3.ab2@8033>            ADDQ.l #1,a5
0002426A <AmiBlitz3.ab2@8034>            TST.b (a5)
0002426E <AmiBlitz3.ab2@8035>            BNE 'inc
00024270 <AmiBlitz3.ab2@8039>            ADDQ.l #1,a5
00024272 <AmiBlitz3.ab2@8040>            TST.b (a5)
00024276 <AmiBlitz3.ab2@8041>            BEQ illeolerr
00024278 <AmiBlitz3.ab2@8042>            MOVE.l a5,-(a7)
0002427C <AmiBlitz3.ab2@8045>       CMP.b #" ",(a5)+
00024280 <AmiBlitz3.ab2@8046>       BEQ 'l110
00024286 <AmiBlitz3.ab2@8047>        CMP.b #";",-1(a5)
00024288 <AmiBlitz3.ab2@8048>        MOVE.l (a7)+,a5
0002428C <AmiBlitz3.ab2@8049>        BEQ 'l111
00024290 <AmiBlitz3.ab2@8050> BRA JL_0_670A
00024294 <AmiBlitz3.ab2@8053>    CMP.w #$29,D0
00024298 <AmiBlitz3.ab2@8054>    BNE.w JL_0_673A
0002429A <AmiBlitz3.ab2@8055>   TST.w D3
0002429E <AmiBlitz3.ab2@8056>    BEQ.w JL_0_676C
000242A0 <AmiBlitz3.ab2@8059>   SUBQ.w #1,D3
000242A4 <AmiBlitz3.ab2@8060> BRA.w JL_0_670A
000242A8 <AmiBlitz3.ab2@8063>    CMP.w #$7D,D0
000242AC <AmiBlitz3.ab2@8064>    BEQ.w JL_0_6734
000242B0 <AmiBlitz3.ab2@8065>   CMP.w #$28,D0
000242B4 <AmiBlitz3.ab2@8066>    BNE.w JL_0_6750
000242B6 <AmiBlitz3.ab2@8069>    ADDQ.w #1,D3
000242BA <AmiBlitz3.ab2@8070> BRA.w JL_0_670A
000242BE <AmiBlitz3.ab2@8073>   CMP.w #$7B,D0
000242C2 <AmiBlitz3.ab2@8074>    BEQ.w JL_0_674A
000242C6 <AmiBlitz3.ab2@8075>   CMP.w #$2C,D0
000242CA <AmiBlitz3.ab2@8076>    BNE.w JL_0_670A
000242CC <AmiBlitz3.ab2@8077>   TST.w D3
000242D0 <AmiBlitz3.ab2@8078>    BNE.w JL_0_670A
000242D2 <AmiBlitz3.ab2@8079>   ADDQ.w #1,D1
000242D6 <AmiBlitz3.ab2@8080> BRA.w JL_0_670A
000242D8 <AmiBlitz3.ab2@8083>   ADDQ.w #1,D1
000242DE <AmiBlitz3.ab2@8086>   CLR.l sourceline3
000242E8 <AmiBlitz3.ab2@8087>   MOVE.l oldline,linenumat
000242EC <AmiBlitz3.ab2@8088> BRA.w resloc
000242F2 <AmiBlitz3.ab2@8092>    CLR.w numreps
000242F4 <AmiBlitz3.ab2@8093>   MOVE.w D1,D0
000242F8 <AmiBlitz3.ab2@8094>   ANDI.w #$FF00,D0
000242FC <AmiBlitz3.ab2@8095>    BEQ.w fetchlibps__noreps
000242FE <AmiBlitz3.ab2@8096>   LSR.w #8,D0
00024300 <AmiBlitz3.ab2@8097>   LSR.w #4,D0
00024304 <AmiBlitz3.ab2@8098>    BEQ.w fetchlibps__skip
00024306 <AmiBlitz3.ab2@8099>   SUB.b D0,D1
00024310 <AmiBlitz3.ab2@8100>    MOVE.w regnum,regnumfunc
00024316 <AmiBlitz3.ab2@8101>    MOVE.b funcparloop,-(a7)
0002431E <AmiBlitz3.ab2@8102>    MOVE.b #0,funcparloop
00024324 <AmiBlitz3.ab2@8103>    MOVE.l leftsidetype,-(a7)
0002432A <AmiBlitz3.ab2@8104>    MOVE.l rightsidetype,-(a7)
00024330 <AmiBlitz3.ab2@8105>    CLR.l leftsidetype
00024336 <AmiBlitz3.ab2@8106>    CLR.l rightsidetype
0002433C <AmiBlitz3.ab2@8107>    MOVE.b blitzparloop,-(a7)
00024344 <AmiBlitz3.ab2@8108>    MOVE.b #1,blitzparloop
00024348 <AmiBlitz3.ab2@8109>    BSR.w fetchpees2
0002434E <AmiBlitz3.ab2@8110>    MOVE.b (a7)+,blitzparloop
00024354 <AmiBlitz3.ab2@8111>    MOVE.l (a7)+,rightsidetype
0002435A <AmiBlitz3.ab2@8112>    MOVE.l (a7)+,leftsidetype
00024360 <AmiBlitz3.ab2@8113>    MOVE.b (a7)+,funcparloop
00024364 <AmiBlitz3.ab2@8114>   CMP.w #$2C,D0
00024368 <AmiBlitz3.ab2@8115>    BNE.w syntaxerr
0002436A <AmiBlitz3.ab2@8118>   MOVE.w D1,D2
0002436C <AmiBlitz3.ab2@8119>   LSR.w #8,D2
00024370 <AmiBlitz3.ab2@8120>   ANDI.w #$7,D2
00024372 <AmiBlitz3.ab2@8123>    CMP.b D2,D1
00024376 <AmiBlitz3.ab2@8124>    BCS.w fetchlibps__repsdone
00024378 <AmiBlitz3.ab2@8125>   SUB.b D2,D1
0002437C <AmiBlitz3.ab2@8126>   MOVEM.l D2/A2,-(A7)
0002437E <AmiBlitz3.ab2@8127>   MOVE.w D2,D0
00024384 <AmiBlitz3.ab2@8128>   MOVE.b funcparloop,-(a7)
0002438C <AmiBlitz3.ab2@8129>   MOVE.b #0,funcparloop
00024392 <AmiBlitz3.ab2@8130>   MOVE.l leftsidetype,-(a7)
00024398 <AmiBlitz3.ab2@8131>   MOVE.l rightsidetype,-(a7)
0002439E <AmiBlitz3.ab2@8132>   CLR.l leftsidetype
000243A4 <AmiBlitz3.ab2@8133>   CLR.l rightsidetype
000243AA <AmiBlitz3.ab2@8134>   MOVE.b blitzparloop,-(a7)
000243B2 <AmiBlitz3.ab2@8135>   MOVE.b #1,blitzparloop
000243B6 <AmiBlitz3.ab2@8136>   BSR.w fetchpees4
000243BC <AmiBlitz3.ab2@8137>   MOVE.b (a7)+,blitzparloop
000243C2 <AmiBlitz3.ab2@8138>   MOVE.l (a7)+,rightsidetype
000243C8 <AmiBlitz3.ab2@8139>   MOVE.l (a7)+,leftsidetype
000243CE <AmiBlitz3.ab2@8140>   MOVE.b (a7)+,funcparloop
000243D2 <AmiBlitz3.ab2@8141>   MOVEM.l (A7)+,D2/A2
000243D8 <AmiBlitz3.ab2@8142>   ADDQ.w #1,numreps
000243DC <AmiBlitz3.ab2@8143> BRA.w fetchlibps__rloop
000243E2 <AmiBlitz3.ab2@8146>    MOVE.w numreps,D3
000243E6 <AmiBlitz3.ab2@8147>    BEQ.w syntaxerr
000243E8 <AmiBlitz3.ab2@8148>   ADDA.w D2,A2
000243EC <AmiBlitz3.ab2@8149>   ANDI.w #$FF,D1
000243F0 <AmiBlitz3.ab2@8150>    BEQ.w fetchlibps__done
000243F4 <AmiBlitz3.ab2@8151>   CMP.w #$2C,D0
000243F8 <AmiBlitz3.ab2@8152>    BNE.w syntaxerr
000243FA <AmiBlitz3.ab2@8155>    MOVE.w D1,D0
000243FE <AmiBlitz3.ab2@8156>    BNE.w fetchpees2b
00024400 <AmiBlitz3.ab2@8159> RTS
00024406 <AmiBlitz3.ab2@8162>   MOVE.b funcparloop,-(a7)
0002440C <AmiBlitz3.ab2@8163>   MOVE.l leftsidetype,-(a7)
00024412 <AmiBlitz3.ab2@8164>   MOVE.l rightsidetype,-(a7)
00024418 <AmiBlitz3.ab2@8165>   CLR.l leftsidetype
0002441E <AmiBlitz3.ab2@8166>   CLR.l rightsidetype
00024426 <AmiBlitz3.ab2@8167>   MOVE.b #0,funcparloop
0002442C <AmiBlitz3.ab2@8168>   MOVE.b blitzparloop,-(a7)
00024434 <AmiBlitz3.ab2@8169>   MOVE.b #1,blitzparloop
00024438 <AmiBlitz3.ab2@8170>   BSR.w fetchpees2
0002443E <AmiBlitz3.ab2@8171>   MOVE.b (a7)+,blitzparloop
00024444 <AmiBlitz3.ab2@8172>   MOVE.l (a7)+,rightsidetype
0002444A <AmiBlitz3.ab2@8173>   MOVE.l (a7)+,leftsidetype
00024450 <AmiBlitz3.ab2@8174>   MOVE.b (a7)+,funcparloop
00024452 <AmiBlitz3.ab2@8175> RTS
00024456 <AmiBlitz3.ab2@8179> ptype:    Dc.b $3F,$3C,$00,$00                             ;MOVE.W  #$0000,-(A7)
00024458 <AmiBlitz3.ab2@8182> partostack:  Ds.w 1                                        ;pmode org source
0002445A <AmiBlitz3.ab2@8186>   MOVEQ.l #$01,D2
0002445E <AmiBlitz3.ab2@8187> BRA.w fetchpees3
00024460 <AmiBlitz3.ab2@8190>   MOVEQ.l #$00,D2
00024464 <AmiBlitz3.ab2@8193>   ANDI.w #$F,D0
0002446A <AmiBlitz3.ab2@8201>   CLR.w parnum
0002446C <AmiBlitz3.ab2@8202>   MOVE.w D1,-(A7)
00024470 <AmiBlitz3.ab2@8203>   MOVE.w partostack(PC),-(A7)                              ;in case of recursion
00024476 <AmiBlitz3.ab2@8204>   MOVE.w D2,partostack
00024478 <AmiBlitz3.ab2@8205>   MOVE.w D0,-(A7)
0002447C <AmiBlitz3.ab2@8206>   CMP.w #"@@",(a5)                                         ;was l15
00024480 <AmiBlitz3.ab2@8207>   BNE fetchpees__loop
00024486 <AmiBlitz3.ab2@8208>   TST.w ininclude                                          ;merge macrolines
0002448A <AmiBlitz3.ab2@8209>   BNE errorjoin
00024490 <AmiBlitz3.ab2@8210>        MOVEA.l sourceline,A5
00024492 <AmiBlitz3.ab2@8213>            MOVEA.l (A5),A5
00024498 <AmiBlitz3.ab2@8214>            MOVE.l a5,sourceline
0002449C <AmiBlitz3.ab2@8215>            LEA $9(A5),A5
000244A2 <AmiBlitz3.ab2@8216>            ADDQ.l #1,linenumat
000244A4 <AmiBlitz3.ab2@8220>   MOVE.b (A2)+,D2                                          ;parameterloop   d2=vartype
000244A8 <AmiBlitz3.ab2@8221>    BNE.w fetchpees__skip0
000244AE <AmiBlitz3.ab2@8222>   MOVE.w userp,D2                                          ;user selected type
000244B0 <AmiBlitz3.ab2@8224>    MOVE.l A2,-(A7)
000244B6 <AmiBlitz3.ab2@8225>    ADDQ.w #1,parnum
000244BC <AmiBlitz3.ab2@8226>    TST.b funccall
000244C0 <AmiBlitz3.ab2@8227>    BEQ fetchpees__skip0_l1
000244C8 <AmiBlitz3.ab2@8228>    CMP.w #6,parnum
000244CC <AmiBlitz3.ab2@8229>    BLE fetchpees__skip0_l1
000244D0 <AmiBlitz3.ab2@8230>    CMP.w #7,d2
000244D6 <AmiBlitz3.ab2@8236>    TST.b fpu
000244DA <AmiBlitz3.ab2@8237>    BEQ fetchpees__skip0_old
000244E0 <AmiBlitz3.ab2@8238>    TST.w regnumfunc
000244E4 <AmiBlitz3.ab2@8239>    BEQ fetchpees__skip0_old
000244EA <AmiBlitz3.ab2@8240>    CMP.w #$48e7,-4(a4)
000244EE <AmiBlitz3.ab2@8241>    BNE fetchpees__skip0_old
000244F0 <AmiBlitz3.ab2@8242>    MOVEQ #0,d1
000244F6 <AmiBlitz3.ab2@8243>    MOVE.w regnum,d1
000244FC <AmiBlitz3.ab2@8244>    CMP regnumfunc,d1                                       ;fpu reg function save
00024500 <AmiBlitz3.ab2@8245>    BGE fetchpees__skip0_old
00024502 <AmiBlitz3.ab2@8246>    ASL.w #7,d1
00024504 <AmiBlitz3.ab2@8247>    MOVE.l d0,-(a7)
0002450A <AmiBlitz3.ab2@8248>    MOVE.w regnumfunc,d0
00024510 <AmiBlitz3.ab2@8249>    CLR.w regmask
00024516 <AmiBlitz3.ab2@8251>    BSET d0,regmask
00024518 <AmiBlitz3.ab2@8252>    SUBQ #1,d0
0002451C <AmiBlitz3.ab2@8253>    BNE fetchpees__skip0_loop
0002451E <AmiBlitz3.ab2@8254>     MOVEQ #0,d0
00024524 <AmiBlitz3.ab2@8257>       BTST d0,regmask
00024528 <AmiBlitz3.ab2@8258>       BEQ fetchpees__skip0_noa7
0002452A <AmiBlitz3.ab2@8259>       MOVEQ #0,d1
0002452C <AmiBlitz3.ab2@8260>       MOVE.w d0,d1
0002452E <AmiBlitz3.ab2@8261>       SUBQ.w #1,d1
00024530 <AmiBlitz3.ab2@8262>       ASL #7,d1
00024536 <AmiBlitz3.ab2@8263>       OR.l #$f2277400,d1                                   ;fmove.d
0002453A <AmiBlitz3.ab2@8265>       BSR writelong
00024540 <AmiBlitz3.ab2@8267>       ADDQ.l #2,stacktrack
00024546 <AmiBlitz3.ab2@8268>       MOVE.l stacktrack,d1
0002454C <AmiBlitz3.ab2@8269>       CMP.l #180,d1
00024550 <AmiBlitz3.ab2@8270>       BGT conmemerr                                        ;formel too complex
00024552 <AmiBlitz3.ab2@8271>       MOVE.l a0,-(a7)
00024558 <AmiBlitz3.ab2@8272>       LEA fpustackbase,a0
00024560 <AmiBlitz3.ab2@8273>       MOVE.w regmask,0(a0,d1)
00024562 <AmiBlitz3.ab2@8274>       MOVE.l (a7)+,a0
00024564 <AmiBlitz3.ab2@8277>       ADDQ.w #1,d0
0002456A <AmiBlitz3.ab2@8278>       CMP.w regnumfunc,d0
0002456E <AmiBlitz3.ab2@8279>       BLE fetchpees__skip0_loop2
00024570 <AmiBlitz3.ab2@8282>       MOVE.l (a7)+,d0
00024576 <AmiBlitz3.ab2@8285>      MOVE.l currentfunccall,-(a7)
0002457C <AmiBlitz3.ab2@8286>      MOVE.w parnum,-(a7)
00024582 <AmiBlitz3.ab2@8287>      TST.l rightsidetype
00024586 <AmiBlitz3.ab2@8288>      BSR.w JL_0_6836
0002458C <AmiBlitz3.ab2@8289>      MOVE.w (a7)+,parnum
00024592 <AmiBlitz3.ab2@8291>    MOVE.l (a7)+,currentfunccall
00024598 <AmiBlitz3.ab2@8293>    TST.b typecheck                            ;typecheck for function call
0002459C <AmiBlitz3.ab2@8294>    BEQ 'notypecheck
000245A2 <AmiBlitz3.ab2@8295>    TST.b notypecheck
000245A6 <AmiBlitz3.ab2@8296>    BNE 'notypecheck
000245AC <AmiBlitz3.ab2@8297>    TST.b blitzparloop
000245B0 <AmiBlitz3.ab2@8298>    BNE 'isblitzlibcall                                    ;no typecheck for blitzlibs currently
000245BA <AmiBlitz3.ab2@8299>    CMP.l #0,currentfunccall
000245BE <AmiBlitz3.ab2@8300>    BEQ 'isblitzlibcall
000245C2 <AmiBlitz3.ab2@8301>    MOVEM.l a0/a1,-(a7)
000245C8 <AmiBlitz3.ab2@8302>    MOVE.l currentfunccall,a0
000245CE <AmiBlitz3.ab2@8303>    MOVE.w parnum,d1
000245D4 <AmiBlitz3.ab2@8304>    TST.b isconstantvalue
000245D8 <AmiBlitz3.ab2@8305>    BEQ 'noconstant
000245E2 <AmiBlitz3.ab2@8306>    CMP.l #0,lastconstantvalue
000245E6 <AmiBlitz3.ab2@8307>    BEQ 'isnull
000245EA <AmiBlitz3.ab2@8309>    MOVE.l funcstruct_parametertype-4(a0,d1*4),a0
000245F0 <AmiBlitz3.ab2@8310>    CMP.l #0,a0
000245F4 <AmiBlitz3.ab2@8311>    BEQ 'notype
000245FC <AmiBlitz3.ab2@8312>    CMP.l #$100,4(a0)
00024600 <AmiBlitz3.ab2@8313>    BLE 'notype
00024606 <AmiBlitz3.ab2@8314>    MOVE.l lasttoken,d1
0002460A <AmiBlitz3.ab2@8315>    CMP.w #$b581,d1                   ; ok, when token for null
0002460E <AmiBlitz3.ab2@8316>    BEQ 'isnull
00024614 <AmiBlitz3.ab2@8317>    TST.l typetocast
00024618 <AmiBlitz3.ab2@8318>    BEQ 'nocast
0002461E <AmiBlitz3.ab2@8319>    MOVE.l typetocast,a1
00024622 <AmiBlitz3.ab2@8320>    BRA 'typecheck
00024628 <AmiBlitz3.ab2@8322>    MOVE.l rightsidetype,a1
0002462E <AmiBlitz3.ab2@8323>    CMP.l #0,a1
00024632 <AmiBlitz3.ab2@8324>    BEQ 'notype
0002463A <AmiBlitz3.ab2@8325> 'typecheck   CMP.l #$100,4(a1)
0002463C <AmiBlitz3.ab2@8327>    CMP.l a0,a1
00024640 <AmiBlitz3.ab2@8328>    BEQ 'ok
00024648 <AmiBlitz3.ab2@8330>    CMP.l #$100,4(a1)                 ; is a type here
0002464C <AmiBlitz3.ab2@8331>    BLE 'error
00024650 <AmiBlitz3.ab2@8332>    MOVE.l 4(a1),a1                   ; load the address of type.
00024654 <AmiBlitz3.ab2@8333>    CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
00024658 <AmiBlitz3.ab2@8334>    BEQ 'ok
0002465E <AmiBlitz3.ab2@8335> 'error: JMP   error_convert_types    ; for syntax 4
00024664 <AmiBlitz3.ab2@8339>    CLR.l typetocast
00024668 <AmiBlitz3.ab2@8340>    MOVEM.l (a7)+,a0/a1
0002466E <AmiBlitz3.ab2@8344>    CLR.l lastfunction
00024674 <AmiBlitz3.ab2@8345>    TST.b fpu
00024678 <AmiBlitz3.ab2@8346>    BEQ fetchpees__skip0_noprint
0002467A <AmiBlitz3.ab2@8347>   MOVE.l (a7),a2
0002467C <AmiBlitz3.ab2@8348>   ADDQ.l #1,a2
00024680 <AmiBlitz3.ab2@8349>    CMP.b #5,d2
00024684 <AmiBlitz3.ab2@8350>   BNE fetchpees__skip0_noprint
0002468A <AmiBlitz3.ab2@8351>   CMP.b #$5d,24(a2)
0002468E <AmiBlitz3.ab2@8352>   BNE fetchpees__skip0_noprint
00024694 <AmiBlitz3.ab2@8353>   CMP.b #$81,25(a2)
00024698 <AmiBlitz3.ab2@8354>   BLT fetchpees__skip0_noprint
0002469E <AmiBlitz3.ab2@8355>   CMP.b #$86,25(a2)
000246A2 <AmiBlitz3.ab2@8356>   BEQ fetchpees__skip0_ok
000246A8 <AmiBlitz3.ab2@8357>   CMP.b #$87,25(a2)
000246AC <AmiBlitz3.ab2@8358>   BEQ fetchpees__skip0_ok
000246B2 <AmiBlitz3.ab2@8359>   CMP.b #$88,25(a2)
000246B6 <AmiBlitz3.ab2@8360>   BEQ fetchpees__skip0_ok
000246BC <AmiBlitz3.ab2@8361>   CMP.b #$83,25(a2)
000246C0 <AmiBlitz3.ab2@8362>   BGT fetchpees__skip0_noprint
000246C6 <AmiBlitz3.ab2@8365>   MOVE.l destpointer,a4
000246CC <AmiBlitz3.ab2@8366>   CMP.w #$2f00,-2(a4)
000246D0 <AmiBlitz3.ab2@8367>   BNE fetchpees__skip0_noprint
000246D6 <AmiBlitz3.ab2@8368>   SUBQ.l #2,destpointer
000246DC <AmiBlitz3.ab2@8370>   MOVE.l #$f2277400,d1
000246E0 <AmiBlitz3.ab2@8371>   BSR writelong                                            ;fmove.d fp0,-(a7)
000246E6 <AmiBlitz3.ab2@8372>   ADDQ #4,a2offset
000246EC <AmiBlitz3.ab2@8390>   CLR.b optistring
000246EE <AmiBlitz3.ab2@8391>   MOVEA.l (A7)+,A2
000246F2 <AmiBlitz3.ab2@8392>    CMP.w #"@",d0
000246F6 <AmiBlitz3.ab2@8393>   BNE fetchpees__skip0_l10
000246FA <AmiBlitz3.ab2@8394>    CMP.b #"@",(a5)
000246FE <AmiBlitz3.ab2@8395>   BNE fetchpees__skip0_l10
00024704 <AmiBlitz3.ab2@8396>   TST.w ininclude
00024708 <AmiBlitz3.ab2@8397>   BNE errorjoin
0002470E <AmiBlitz3.ab2@8398>   MOVEA.l sourceline,A5
00024710 <AmiBlitz3.ab2@8399>            MOVEA.l (A5),A5
00024716 <AmiBlitz3.ab2@8400>            MOVE.l a5,sourceline
0002471C <AmiBlitz3.ab2@8401>            ADDQ.l #1,linenumat
00024720 <AmiBlitz3.ab2@8402>            LEA $9(A5),A5
00024722 <AmiBlitz3.ab2@8403>            MOVEQ #0,d0
00024726 <AmiBlitz3.ab2@8404>            BSR get1bytemain
0002472A <AmiBlitz3.ab2@8407>    CMP.b #32,(a5)+ ;for space after a ,
0002472E <AmiBlitz3.ab2@8408>    BEQ fetchpees__skip0_l10:
00024730 <AmiBlitz3.ab2@8409>    SUBQ.l #1,a5
00024734 <AmiBlitz3.ab2@8411>    CMP.w #"@@",(a5)                                        ;if merge
00024738 <AmiBlitz3.ab2@8412>    BNE fetchpees__skip0_l15
0002473C <AmiBlitz3.ab2@8413>    MOVEM.l d0-d7/a0-a4/a6,-(a7)
00024742 <AmiBlitz3.ab2@8414>    JSR mergeline
00024746 <AmiBlitz3.ab2@8415>    MOVEM.l (a7)+,d0-d7/a0-a4/a6
00024748 <AmiBlitz3.ab2@8435>       SUBQ.w #1,(A7)
0002474C <AmiBlitz3.ab2@8436>    BEQ.w fetchpees__done
00024750 <AmiBlitz3.ab2@8438>     CMP.w #$2C,D0
00024754 <AmiBlitz3.ab2@8440>    BNE overloadfunc
00024758 <AmiBlitz3.ab2@8441> BRA.w fetchpees__loop
0002475A <AmiBlitz3.ab2@8444>   ADDQ.w #2,A7
00024760 <AmiBlitz3.ab2@8445>   MOVE.w (A7)+,partostack
00024762 <AmiBlitz3.ab2@8446>   MOVE.w (A7)+,D1
00024768 <AmiBlitz3.ab2@8447>   CLR.b isconstantvalue
00024772 <AmiBlitz3.ab2@8448>   MOVE.l currentfunccall,lastfunction
00024778 <AmiBlitz3.ab2@8449>   CLR.b funccall
0002477E <AmiBlitz3.ab2@8450>   CLR.l currentfunccall
00024780 <AmiBlitz3.ab2@8451> RTS
00024786 <AmiBlitz3.ab2@8455>   CLR.b funccall
0002478C <AmiBlitz3.ab2@8456>   MOVE.w regnum,d1
00024792 <AmiBlitz3.ab2@8457>   MOVE.l currentfunccall,a4
00024796 <AmiBlitz3.ab2@8458>   CMP.b $20(a4),d1                                         ;increase if more pars
0002479A <AmiBlitz3.ab2@8459>   BLT notparerr
0002479C <AmiBlitz3.ab2@8462>   MOVE.b (a2)+,d2
000247A4 <AmiBlitz3.ab2@8463>   ADD.w #1,parnum
000247AA <AmiBlitz3.ab2@8464>   TST.b fpu
000247AE <AmiBlitz3.ab2@8465>   BEQ 'nofpu
000247B2 <AmiBlitz3.ab2@8466>   CMP.b #5,d2
000247B6 <AmiBlitz3.ab2@8467>   BNE 'nofpu
000247B8 <AmiBlitz3.ab2@8468>   MOVEQ #0,d1
000247BE <AmiBlitz3.ab2@8469>   MOVE.w regnum,d1
000247C6 <AmiBlitz3.ab2@8470>   CMP.w #6,regnum
000247CA <AmiBlitz3.ab2@8471>   BLT 'nostack2
000247CE <AmiBlitz3.ab2@8476>   MOVE.w #$2c3c,d1
000247D2 <AmiBlitz3.ab2@8477>   BSR writeword
000247D8 <AmiBlitz3.ab2@8478>   MOVE.l #$bf800000,d1
000247DC <AmiBlitz3.ab2@8479>   BSR writelong
000247E0 <AmiBlitz3.ab2@8480>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
000247E6 <AmiBlitz3.ab2@8481>   ADD.w parnum,d1
000247EC <AmiBlitz3.ab2@8482>   JSR Atokejsr
000247F2 <AmiBlitz3.ab2@8483>   TST.w dontwrite
000247F6 <AmiBlitz3.ab2@8484>   BNE 'l1
000247FC <AmiBlitz3.ab2@8485>   MOVE.l data1start,d1
00024802 <AmiBlitz3.ab2@8486>   MOVE.l destpointer,a4
00024806 <AmiBlitz3.ab2@8487>   ADD.l d1,-4(a4)
0002480C <AmiBlitz3.ab2@8488>   MOVE.l destpointer,d1
0002480E <AmiBlitz3.ab2@8489>   SUBQ.l #4,d1
00024814 <AmiBlitz3.ab2@8490>   SUB.l destbufferstart,d1
00024816 <AmiBlitz3.ab2@8491>   MOVE.l d2,-(a7)
00024818 <AmiBlitz3.ab2@8492>   MOVE.l d1,d2
0002481E <AmiBlitz3.ab2@8493>   JSR addhunkoffset
00024820 <AmiBlitz3.ab2@8494>   MOVE.l (a7)+,d2
00024824 <AmiBlitz3.ab2@8495> BRA 'l1
00024826 <AmiBlitz3.ab2@8498>   ASL.l #7,d1
0002482C <AmiBlitz3.ab2@8499>   OR.l #$F23C5000,d1                                       ;fmove.w #-1,fpx
00024830 <AmiBlitz3.ab2@8500>   BSR writelong
00024832 <AmiBlitz3.ab2@8501>   MOVEQ #-1,d1                                             ;-1
00024836 <AmiBlitz3.ab2@8502>   BSR writeword
0002483A <AmiBlitz3.ab2@8503> BRA 'l1
00024840 <AmiBlitz3.ab2@8506>   MOVE.w regnum,d1
00024848 <AmiBlitz3.ab2@8507>   CMP.w #6,regnum
0002484C <AmiBlitz3.ab2@8508>   BLT 'nostack
00024850 <AmiBlitz3.ab2@8513>   CMP.b #2,d2
00024854 <AmiBlitz3.ab2@8514>   BGT 'nw
00024858 <AmiBlitz3.ab2@8515> BRA 'nos
0002485C <AmiBlitz3.ab2@8524>   CMP.w #7,d2
00024860 <AmiBlitz3.ab2@8525>   BNE 'nos
00024866 <AmiBlitz3.ab2@8526>   ADDQ #4,a2offset
0002486C <AmiBlitz3.ab2@8528>     MOVE.l #$48780000,d1
00024870 <AmiBlitz3.ab2@8529>     BSR writelong
00024876 <AmiBlitz3.ab2@8530>     ADDQ.w #4,a2offset
0002487A <AmiBlitz3.ab2@8531>     MOVE.w #$2f3c,d1
0002487E <AmiBlitz3.ab2@8532>     BSR writeword
00024884 <AmiBlitz3.ab2@8533>     MOVE.l #-1,d1
00024888 <AmiBlitz3.ab2@8534>     BSR writelong
0002488C <AmiBlitz3.ab2@8535>   BRA 'l1
00024890 <AmiBlitz3.ab2@8539>   CMP.b #4,d2
00024894 <AmiBlitz3.ab2@8540>       BNE 'noq
00024898 <AmiBlitz3.ab2@8541>       MOVE.w #$2c3c,d1
0002489C <AmiBlitz3.ab2@8542>       BSR writeword
000248A2 <AmiBlitz3.ab2@8543>       MOVE.l #$ffff0000,d1
000248A6 <AmiBlitz3.ab2@8544>       BSR writelong
000248AA <AmiBlitz3.ab2@8545> BRA 'noq2
000248AE <AmiBlitz3.ab2@8548>      CMP.b #5,d2
000248B2 <AmiBlitz3.ab2@8549>      BNE 'nof
000248B6 <AmiBlitz3.ab2@8550>       MOVE.w #$2c3c,d1
000248BA <AmiBlitz3.ab2@8551>       BSR writeword
000248C0 <AmiBlitz3.ab2@8552>       MOVE.l #$800000c1,d1
000248C4 <AmiBlitz3.ab2@8553>       BSR writelong
000248C8 <AmiBlitz3.ab2@8554> BRA 'noq2
000248CC <AmiBlitz3.ab2@8557>   MOVE.w #$7cff,d1
000248D0 <AmiBlitz3.ab2@8558>   BSR writeword
000248D4 <AmiBlitz3.ab2@8561>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
000248DA <AmiBlitz3.ab2@8562>   ADD.w parnum,d1
000248E0 <AmiBlitz3.ab2@8563>   JSR Atokejsr
000248E6 <AmiBlitz3.ab2@8564>    TST.w dontwrite
000248EA <AmiBlitz3.ab2@8565>    BNE 'l1
000248F0 <AmiBlitz3.ab2@8566>    MOVE.l data1start,d1
000248F6 <AmiBlitz3.ab2@8567>    MOVE.l destpointer,a4
000248FA <AmiBlitz3.ab2@8568>    ADD.l d1,-4(a4)
00024900 <AmiBlitz3.ab2@8569>    MOVE.l destpointer,d1
00024902 <AmiBlitz3.ab2@8570>    SUBQ.l #4,d1
00024908 <AmiBlitz3.ab2@8571>    SUB.l destbufferstart,d1
0002490A <AmiBlitz3.ab2@8572>    MOVE.l d2,-(a7)
0002490C <AmiBlitz3.ab2@8573>    MOVE.l d1,d2
00024912 <AmiBlitz3.ab2@8574>    JSR addhunkoffset
00024914 <AmiBlitz3.ab2@8575>    MOVE.l (a7)+,d2
00024918 <AmiBlitz3.ab2@8576> BRA 'l1
0002491A <AmiBlitz3.ab2@8579>   ASL.l #8,d1
0002491C <AmiBlitz3.ab2@8580>   ASL.l #1,d1
00024922 <AmiBlitz3.ab2@8581>   OR.l #$203c,d1                                           ;-1
00024926 <AmiBlitz3.ab2@8582>   BSR writeword
0002492C <AmiBlitz3.ab2@8583>   MOVE.l #-1,d1
00024930 <AmiBlitz3.ab2@8584>   CMP.b #4,d2
00024934 <AmiBlitz3.ab2@8585>   BNE 'nq1
0002493A <AmiBlitz3.ab2@8586>   MOVE.l #$ffff0000,d1
0002493E <AmiBlitz3.ab2@8589>   CMP.b #5,d2
00024942 <AmiBlitz3.ab2@8590>   BNE 'nof2
00024948 <AmiBlitz3.ab2@8591>   TST.b fpu
0002494C <AmiBlitz3.ab2@8592>   BNE 'nof2
00024952 <AmiBlitz3.ab2@8593>   MOVE.l #$800000c1,d1
00024956 <AmiBlitz3.ab2@8596>    BSR writelong
0002495A <AmiBlitz3.ab2@8597>    CMP.b #7,d2
0002495E <AmiBlitz3.ab2@8598>    BNE 'l1
00024964 <AmiBlitz3.ab2@8600>      MOVE.l #$48780000,d1
00024968 <AmiBlitz3.ab2@8601>      BSR writelong
0002496E <AmiBlitz3.ab2@8603>    ADDQ.w #4,a2offset                                      ; bug fix for string parameters
00024974 <AmiBlitz3.ab2@8604>    MOVE.l #$594f,d1                                        ; subq #4,a7
00024978 <AmiBlitz3.ab2@8605>    BSR writeword
0002497A <AmiBlitz3.ab2@8608>    SUBQ.w #1,(A7)
0002497E <AmiBlitz3.ab2@8609>    BEQ.w fetchpees__done
00024984 <AmiBlitz3.ab2@8610>    ADDQ.w #1,regnum
00024988 <AmiBlitz3.ab2@8611> BRA 'ol2
0002498A <AmiBlitz3.ab2@8614>    MOVE.w D2,D1
0002498E <AmiBlitz3.ab2@8615>    ANDI.w #$40,D1
00024994 <AmiBlitz3.ab2@8616>    MOVE.b D1,partostack
00024996 <AmiBlitz3.ab2@8617>    TST.b D2
0002499A <AmiBlitz3.ab2@8618>     BMI.w handlevara
0002499E <AmiBlitz3.ab2@8619>    BTST #$5,D2
000249A2 <AmiBlitz3.ab2@8620>     BNE.w handlearr
000249A8 <AmiBlitz3.ab2@8621>     MOVE.w regnumstore,-(a7)
000249AE <AmiBlitz3.ab2@8622>     MOVE.w tempregnum,-(a7)
000249B4 <AmiBlitz3.ab2@8623>     MOVE.w parnum,-(a7)
000249B8 <AmiBlitz3.ab2@8624>     BSR.w getap                                        ;recursive entry
000249BE <AmiBlitz3.ab2@8625>     MOVE.w (a7)+,parnum
000249C4 <AmiBlitz3.ab2@8626>     MOVE.w (a7)+,tempregnum
000249CA <AmiBlitz3.ab2@8627>     MOVE.w (a7)+,regnumstore
000249CE <AmiBlitz3.ab2@8630>     MOVE.w partostack(PC),D1
000249D2 <AmiBlitz3.ab2@8631>     BEQ.w JL_0_6886
000249D8 <AmiBlitz3.ab2@8634>    ADDQ.w #4,a2offset
000249DE <AmiBlitz3.ab2@8637>    MOVE.w pushdn,D1
000249E4 <AmiBlitz3.ab2@8638>    OR.w regnum,D1
000249E8 <AmiBlitz3.ab2@8639>    CMP.w #$3,D2
000249EC <AmiBlitz3.ab2@8640>     BCC.w JL_0_6880
000249F2 <AmiBlitz3.ab2@8641>    SUBQ.w #2,a2offset
000249F6 <AmiBlitz3.ab2@8642>    ORI.w #$1000,D1
000249FA <AmiBlitz3.ab2@8643>    BSR.w writeword
000249FC <AmiBlitz3.ab2@8644> RTS
00024A00 <AmiBlitz3.ab2@8647>   CMP.b #7,d2
00024A04 <AmiBlitz3.ab2@8648>    BNE 'l10
00024A0C <AmiBlitz3.ab2@8649>    CMP.b #2,optistring
00024A12 <AmiBlitz3.ab2@8653>   TST.b iee
00024A16 <AmiBlitz3.ab2@8654>   BEQ 'old
00024A1A <AmiBlitz3.ab2@8655>   CMP.b #5,d2
00024A1E <AmiBlitz3.ab2@8656>   BNE 'old
00024A22 <AmiBlitz3.ab2@8659>   BSR.w writeword                                          ;write val to stack
00024A24 <AmiBlitz3.ab2@8660> RTS
00024A2A <AmiBlitz3.ab2@8663>   SUBQ.w #4,a2offset
00024A2C <AmiBlitz3.ab2@8664> RTS
00024A32 <AmiBlitz3.ab2@8667>   ADDQ.w #1,regnum
00024A34 <AmiBlitz3.ab2@8668> RTS
00024A36 <AmiBlitz3.ab2@8672>   MOVEQ.l #$03,D2
00024A3A <AmiBlitz3.ab2@8673> BRA.w JL_0_6854
00024A3E <AmiBlitz3.ab2@8677>   ANDI.w #$7,D2
00024A40 <AmiBlitz3.ab2@8678>   MOVE.w D2,-(A7)
00024A44 <AmiBlitz3.ab2@8679>    BSR.w JL_0_A916
00024A48 <AmiBlitz3.ab2@8680>   CMP.b #$7,D2                                             ;ignore pnt to $
00024A4C <AmiBlitz3.ab2@8681>    BEQ.w JL_0_68C0
00024A50 <AmiBlitz3.ab2@8682>   BTST #$E,D2
00024A54 <AmiBlitz3.ab2@8683>    BEQ.w JL_0_68B6
00024A58 <AmiBlitz3.ab2@8684>   MOVE.b #$3,D2                                            ;pointer to long
00024A5C <AmiBlitz3.ab2@8685> BRA.w JL_0_68C0
00024A5E <AmiBlitz3.ab2@8688>    TST.b D2
00024A62 <AmiBlitz3.ab2@8689>    BNE.w JL_0_68C0
00024A66 <AmiBlitz3.ab2@8690>   MOVE.b #$3,D2
00024A68 <AmiBlitz3.ab2@8693>   MOVE.w (A7)+,D3
00024A6A <AmiBlitz3.ab2@8694>   TST.b D3
00024A6E <AmiBlitz3.ab2@8695>    BEQ.w JL_0_68D2
00024A70 <AmiBlitz3.ab2@8696>   CMP.b D2,D3
00024A74 <AmiBlitz3.ab2@8697>    BEQ.w putalp
00024A78 <AmiBlitz3.ab2@8698> BRA.w mismatcherr
00024A7E <AmiBlitz3.ab2@8701>   ADDQ.w #2,a2offset
00024A82 <AmiBlitz3.ab2@8702>   MOVE.w ptype(PC),D1
00024A86 <AmiBlitz3.ab2@8703>    BSR.w writeword
00024A88 <AmiBlitz3.ab2@8704>   MOVEQ.l #$00,D1
00024A8A <AmiBlitz3.ab2@8705>   MOVE.b D2,D1
00024A8E <AmiBlitz3.ab2@8706>    BSR.w writeword
00024A92 <AmiBlitz3.ab2@8707> BRA.w putalp
00024A94 <AmiBlitz3.ab2@8710>    MOVE.w D2,-(A7)
00024A98 <AmiBlitz3.ab2@8711>    BSR.w JL_0_694E
00024A9E <AmiBlitz3.ab2@8712>   BTST #$4,$1(A7)
00024AA2 <AmiBlitz3.ab2@8713>    BEQ.w JL_0_6900
00024AA6 <AmiBlitz3.ab2@8714>    BSR.w JL_0_699A
00024AAC <AmiBlitz3.ab2@8717>    BTST #$3,$1(A7)
00024AB0 <AmiBlitz3.ab2@8718>    BEQ.w JL_0_690E
00024AB4 <AmiBlitz3.ab2@8719>    BSR.w sendtype
00024AB6 <AmiBlitz3.ab2@8722>    MOVE.w (A7)+,D2
00024ABA <AmiBlitz3.ab2@8723> BRA.w get1bytemain
00024AC0 <AmiBlitz3.ab2@8726>   MOVE.w regnum,D1
00024AC2 <AmiBlitz3.ab2@8727>   LSL.w #8,D1
00024AC4 <AmiBlitz3.ab2@8728>   LSL.w #1,D1
00024AC8 <AmiBlitz3.ab2@8729>   ORI.w #$7000,D1
00024ACE <AmiBlitz3.ab2@8730>   BTST #$0,$7(A3)
00024AD2 <AmiBlitz3.ab2@8731>    BNE.w JL_0_6946                                         ;A Pointer
00024ADA <AmiBlitz3.ab2@8732>   CMPI.l #$100,$4(A2)
00024ADE <AmiBlitz3.ab2@8733>    BCC.w arrerr1                                           ;illegal type to send
00024AE2 <AmiBlitz3.ab2@8734>   MOVE.b $7(A2),D1
00024AE6 <AmiBlitz3.ab2@8737>   BSR.w writeword                                          ;moveq #type,d regat
00024AE8 <AmiBlitz3.ab2@8738>   MOVEQ.l #$02,D2                                          ;just a word.
00024AEC <AmiBlitz3.ab2@8739> BRA.w JL_0_685C
00024AF0 <AmiBlitz3.ab2@8742>   MOVE.b #$3,D1
00024AF4 <AmiBlitz3.ab2@8743> BRA.w JL_0_693C
00024AF8 <AmiBlitz3.ab2@8747>    BSR.w get1bytemain                                      ;write array paramter code
00024AFC <AmiBlitz3.ab2@8748>    BSR.w getparameter
00024B04 <AmiBlitz3.ab2@8749>   BTST #$1,flagmask+1
00024B08 <AmiBlitz3.ab2@8750>    BEQ.w syntaxerr
00024B0C <AmiBlitz3.ab2@8751>    BSR.w JL_0_8E3C
00024B10 <AmiBlitz3.ab2@8752>    BSR.w get1bytemain
00024B14 <AmiBlitz3.ab2@8753>   CMP.w #$29,D0                                            ;we just want a() or whatever
00024B18 <AmiBlitz3.ab2@8754>    BNE.w syntaxerr
00024B1E <AmiBlitz3.ab2@8755>   MOVE.w notshared,D1
00024B22 <AmiBlitz3.ab2@8756>    BNE.w noarrayerr
00024B28 <AmiBlitz3.ab2@8757>   MOVE.w regnum,D1
00024B2A <AmiBlitz3.ab2@8758>   LSL.w #8,D1
00024B2C <AmiBlitz3.ab2@8759>   LSL.w #1,D1
00024B30 <AmiBlitz3.ab2@8760>   OR.w fbase(PC),D1
00024B36 <AmiBlitz3.ab2@8761>    TST.b varmode
00024B3A <AmiBlitz3.ab2@8762>    BEQ 'l1
00024B3E <AmiBlitz3.ab2@8763>    BCLR #0,d1
00024B42 <AmiBlitz3.ab2@8766>    BSR.w writeword
00024B46 <AmiBlitz3.ab2@8767>   MOVE.w $4(A3),D1
00024B4A <AmiBlitz3.ab2@8768>    BSR.w writeword
00024B4E <AmiBlitz3.ab2@8769> BRA.w putalp
00024B54 <AmiBlitz3.ab2@8773>   MOVE.w regnum,D1
00024B56 <AmiBlitz3.ab2@8774>   LSL.w #8,D1
00024B58 <AmiBlitz3.ab2@8775>   LSL.w #1,D1
00024B5C <AmiBlitz3.ab2@8776>   OR.w fbase(PC),D1
00024B62 <AmiBlitz3.ab2@8777>    TST.b varmode
00024B66 <AmiBlitz3.ab2@8778>    BEQ 'l1
00024B6A <AmiBlitz3.ab2@8779>    BCLR #0,d1
00024B6E <AmiBlitz3.ab2@8782>    BSR.w writeword
00024B72 <AmiBlitz3.ab2@8783>   MOVE.w $8(A3),D1
00024B74 <AmiBlitz3.ab2@8784>   LSL.w #2,D1
00024B7A <AmiBlitz3.ab2@8785>   MOVE.w varmode,D2
00024B7E <AmiBlitz3.ab2@8786>    BEQ.w JL_0_69BE
00024B80 <AmiBlitz3.ab2@8787>   NEG.w D1
00024B84 <AmiBlitz3.ab2@8790>    ADD.w $4(A3),D1
00024B88 <AmiBlitz3.ab2@8791>    BSR.w writeword
00024B8E <AmiBlitz3.ab2@8792>   MOVE.w regnum,D1
00024B90 <AmiBlitz3.ab2@8793>   LSL.w #8,D1
00024B92 <AmiBlitz3.ab2@8794>   LSL.w #1,D1
00024B96 <AmiBlitz3.ab2@8795>   MOVE.w partostack(PC),D2
00024B9A <AmiBlitz3.ab2@8796>    BNE.w JL_0_69F4
00024BA2 <AmiBlitz3.ab2@8797>   CMPI.w #$7,regnum
00024BA6 <AmiBlitz3.ab2@8798>    BCC.w JL_0_69F4
00024BAA <AmiBlitz3.ab2@8799>   OR.w pushlast(PC),D1
00024BB0 <AmiBlitz3.ab2@8800>   MOVE.w regnum,D2
00024BB2 <AmiBlitz3.ab2@8801>   SUBQ.w #1,D2
00024BB4 <AmiBlitz3.ab2@8802>   OR.w D2,D1
00024BB8 <AmiBlitz3.ab2@8803> BRA.w JL_0_69F8
00024BBC <AmiBlitz3.ab2@8806>   OR.w pushadd(PC),D1
00024BC0 <AmiBlitz3.ab2@8809>   BSR.w writeword
00024BC8 <AmiBlitz3.ab2@8810>   MOVE.b #$1,partostack
00024BCC <AmiBlitz3.ab2@8811> BRA.w putalp
00024BD0 <AmiBlitz3.ab2@8815> fbase:       Dc.b $20,$2D,$00,$00                           ;MOVE.L  $0000(A5),D0
00024BD2 <AmiBlitz3.ab2@8816> pushadd:     Dc.b $D0,$97                                   ;ADD.L (A7),D0
00024BD4 <AmiBlitz3.ab2@8817> pushlast:    Dc.b $D0,$80                                   ;ADD.L D0,D0
00024BD8 <AmiBlitz3.ab2@8822>   ANDI.w #$7,D2                                            ;0-7 (unknown to string)
00024BDC <AmiBlitz3.ab2@8823>    BEQ.w evalu2
00024BE0 <AmiBlitz3.ab2@8824> BRA.w eval
00024BE6 <AmiBlitz3.ab2@8828>   MOVEA.l libpointer,A1
00024BEA <AmiBlitz3.ab2@8831>    CMPA.w #$0,A1
00024BEE <AmiBlitz3.ab2@8832>    BEQ.w resetlibs__done
00024BF4 <AmiBlitz3.ab2@8833>   MOVE.w #-1,$A(A1)
00024BFA <AmiBlitz3.ab2@8834>   BCLR #$7,$C(A1)
00024BFC <AmiBlitz3.ab2@8835>   MOVEA.l (A1),A1
00024C00 <AmiBlitz3.ab2@8836> BRA.w resetlibs__loop
00024C02 <AmiBlitz3.ab2@8839> RTS
00024C06 <AmiBlitz3.ab2@8843>   MOVE.w #$FFFE,D1
00024C0A <AmiBlitz3.ab2@8846>    BSR.w JL_0_6F38
00024C10 <AmiBlitz3.ab2@8849>   TST.w cfetchmode
00024C14 <AmiBlitz3.ab2@8850>    BEQ.w uselib3__noconst
00024C1A <AmiBlitz3.ab2@8851>   BTST #$6,$C(A1)
00024C1E <AmiBlitz3.ab2@8852>    BNE.w uselib3__constok
00024C22 <AmiBlitz3.ab2@8853> BRA.w badconerr                                            ;Can't use this Library!
00024C24 <AmiBlitz3.ab2@8856> RTS
00024C2A <AmiBlitz3.ab2@8859>    BSET #$7,$C(A1)
00024C2E <AmiBlitz3.ab2@8860>    BNE.w JL_0_6C74                                         ;already done....
00024C34 <AmiBlitz3.ab2@8861>    CMPI.w #-1,$A(A1)
00024C38 <AmiBlitz3.ab2@8862>    BNE.w JL_0_6C74                                         ;something already here
00024C3E <AmiBlitz3.ab2@8866>    TST.w dirmode
00024C42 <AmiBlitz3.ab2@8867>    BEQ.b JL_0_6A86
00024C48 <AmiBlitz3.ab2@8868>    TST.b exdebug
00024C4C <AmiBlitz3.ab2@8869>    BEQ 'l1
00024C50 <AmiBlitz3.ab2@8870> BRA.b JL_0_6A86
00024C56 <AmiBlitz3.ab2@8873>   BCLR #$7,$C(A1)
00024C5A <AmiBlitz3.ab2@8874> BRA.w dirliberr
00024C60 <AmiBlitz3.ab2@8877>   MOVE.b debugmode,-(a7)
00024C64 <AmiBlitz3.ab2@8878>   MOVEM.l D1/A0/A2,-(A7)
00024C6C <AmiBlitz3.ab2@8884>   BTST #$7,use_debugger
00024C70 <AmiBlitz3.ab2@8885>   BNE 'debugon
00024C72 <AmiBlitz3.ab2@8886>   CLR.w D1
00024C76 <AmiBlitz3.ab2@8887> BRA.b 'debugoff
00024C78 <AmiBlitz3.ab2@8890>   SNE D1
00024C7E <AmiBlitz3.ab2@8893>   MOVE.b d1,debugmode
00024C80 <AmiBlitz3.ab2@8897>   MOVEA.l A1,A0
00024C84 <AmiBlitz3.ab2@8898>   ADDA.l $12(A1),A0
00024C88 <AmiBlitz3.ab2@8899>   TST.w -$2(A0)
00024C8C <AmiBlitz3.ab2@8900>    BEQ.w JL_0_6AD2
00024C90 <AmiBlitz3.ab2@8901>   MOVEM.l A0-A1,-(A7)
00024C94 <AmiBlitz3.ab2@8902>   MOVE.w #$FB4F,D1
00024C98 <AmiBlitz3.ab2@8903>    BSR.w uselib
00024C9C <AmiBlitz3.ab2@8904>   MOVEM.l (A7)+,A0-A1
00024CA2 <AmiBlitz3.ab2@8905>   ADDQ.w #1,globalvarpointer
00024CAA <AmiBlitz3.ab2@8906>   BCLR #$0,globalvarpointer+1
00024CB2 <AmiBlitz3.ab2@8907>   MOVE.w globalvarpointer,-$6(A0)
00024CB8 <AmiBlitz3.ab2@8908>   ADDQ.w #4,globalvarpointer
00024CBC <AmiBlitz3.ab2@8909>   TST.l -$E(A0)
00024CC0 <AmiBlitz3.ab2@8910>    BEQ.w JL_0_6AD2
00024CC6 <AmiBlitz3.ab2@8911>   ADDQ.w #4,globalvarpointer
00024CCE <AmiBlitz3.ab2@8914>   MOVE.l libend,$28(A1)
00024CD0 <AmiBlitz3.ab2@8915>   MOVEA.l A1,A0
00024CD4 <AmiBlitz3.ab2@8916>   ADDA.l $12(A1),A0
00024CD6 <AmiBlitz3.ab2@8917>   MOVE.l A1,D1
00024CDA <AmiBlitz3.ab2@8918>   ADD.l $6(A1),D1
00024CDE <AmiBlitz3.ab2@8919>   TST.l $2C(A1)
00024CE2 <AmiBlitz3.ab2@8920>    BEQ.w JL_0_6AFE
00024CE8 <AmiBlitz3.ab2@8922>   TST.b debugmode
00024CEC <AmiBlitz3.ab2@8923>    BNE.w JL_0_6AFE
00024CEE <AmiBlitz3.ab2@8924>   MOVE.l A1,D1
00024CF2 <AmiBlitz3.ab2@8925>   ADD.l $2C(A1),D1
00024CF8 <AmiBlitz3.ab2@8928>   MOVEA.l libend,A2
00024CFE <AmiBlitz3.ab2@8931>   CMPA.l data1start,A2
00024D02 <AmiBlitz3.ab2@8932>    BCS.w JL_0_6B24
00024D0A <AmiBlitz3.ab2@8933>   MOVE.w #$FFFF,dontwrite
00024D0C <AmiBlitz3.ab2@8936>   ADDQ.w #2,A0
00024D0E <AmiBlitz3.ab2@8937>   ADDQ.w #2,A2
00024D10 <AmiBlitz3.ab2@8938>   CMPA.l D1,A0
00024D14 <AmiBlitz3.ab2@8939>    BCS.w JL_0_6B16
00024D18 <AmiBlitz3.ab2@8940> BRA.w JL_0_6B2C
00024D1A <AmiBlitz3.ab2@8943>   MOVE.w (A0)+,(A2)+                                       ;copylibcode
00024D1C <AmiBlitz3.ab2@8944>   CMPA.l D1,A0
00024D20 <AmiBlitz3.ab2@8945>    BCS.w JL_0_6B04
00024D26 <AmiBlitz3.ab2@8948>   MOVE.l A2,libend
00024D2A <AmiBlitz3.ab2@8949>   MOVE.l $20(A1),D1
00024D2E <AmiBlitz3.ab2@8950>    BEQ.w JL_0_6BB8
00024D32 <AmiBlitz3.ab2@8951>   MOVEM.l D0/D2-D3,-(A7)
00024D36 <AmiBlitz3.ab2@8952>   MOVEA.l $24(A1),A0
00024D38 <AmiBlitz3.ab2@8953>   MOVEQ.l #$00,D3
00024D3A <AmiBlitz3.ab2@8956>   MOVE.l (A0)+,D2
00024D3E <AmiBlitz3.ab2@8957>   TST.l $2C(A1)
00024D42 <AmiBlitz3.ab2@8958>    BEQ.w JL_0_6B60
00024D48 <AmiBlitz3.ab2@8959>   TST.b debugmode
00024D4C <AmiBlitz3.ab2@8960>    BNE.w JL_0_6B60
00024D50 <AmiBlitz3.ab2@8961>   CMP.l $2C(A1),D2
00024D54 <AmiBlitz3.ab2@8962>    BCC.w JL_0_6BA0
00024D58 <AmiBlitz3.ab2@8965>   TST.w $0(A1,D2.L)
00024D5C <AmiBlitz3.ab2@8966>    BPL.w JL_0_6B72
00024D5E <AmiBlitz3.ab2@8967>   TST.l D3
00024D62 <AmiBlitz3.ab2@8968>    BNE.w JL_0_6B72
00024D64 <AmiBlitz3.ab2@8969>   MOVE.l A0,D0
00024D66 <AmiBlitz3.ab2@8970>   MOVE.l D1,D3
00024D6A <AmiBlitz3.ab2@8973>   SUB.l $12(A1),D2
00024D6E <AmiBlitz3.ab2@8974>    BMI.w JL_0_6BA0
00024D72 <AmiBlitz3.ab2@8975>   ADD.l $28(A1),D2
00024D74 <AmiBlitz3.ab2@8976>   MOVE.l D2,-(A7)
00024D7A <AmiBlitz3.ab2@8977>   SUB.l destbufferstart,D2
00024D7E <AmiBlitz3.ab2@8978>    BSR.w addhunkoffset
00024D80 <AmiBlitz3.ab2@8979>   MOVEA.l (A7)+,A2
00024D86 <AmiBlitz3.ab2@8980>   TST.w dontwrite
00024D8A <AmiBlitz3.ab2@8981>    BNE.w JL_0_6BA0
00024D8E <AmiBlitz3.ab2@8982>   MOVE.l $28(A1),D2
00024D92 <AmiBlitz3.ab2@8983>   SUB.l $12(A1),D2
00024D94 <AmiBlitz3.ab2@8984>   ADD.l D2,(A2)
00024D96 <AmiBlitz3.ab2@8987>    SUBQ.l #1,D1
00024D9A <AmiBlitz3.ab2@8988>    BNE.w JL_0_6B44
00024D9C <AmiBlitz3.ab2@8989>   MOVE.l D3,D2
00024DA0 <AmiBlitz3.ab2@8990>    BEQ.w JL_0_6BB4
00024DA2 <AmiBlitz3.ab2@8991>   MOVEA.l D0,A2
00024DA4 <AmiBlitz3.ab2@8992>   SUBQ.w #4,A2
00024DA8 <AmiBlitz3.ab2@8993>    BSR.w JL_0_6E34
00024DAC <AmiBlitz3.ab2@8996>    MOVEM.l (A7)+,D0/D2-D3
00024DB0 <AmiBlitz3.ab2@8999>    MOVEM.l (A7)+,D1/A0/A2
00024DB4 <AmiBlitz3.ab2@9000>   MOVEM.l D1-D2,-(A7)
00024DB8 <AmiBlitz3.ab2@9001>   TST.w $1A(A1)
00024DBC <AmiBlitz3.ab2@9002>    BNE.w JL_0_6BD0
00024DC0 <AmiBlitz3.ab2@9003>   CLR.w $A(A1)
00024DC4 <AmiBlitz3.ab2@9004> BRA.w JL_0_6C5E
00024DCA <AmiBlitz3.ab2@9007>   ADDQ.w #1,globalvarpointer
00024DD2 <AmiBlitz3.ab2@9008>   BCLR #$0,globalvarpointer+1
00024DDA <AmiBlitz3.ab2@9009>   MOVE.w globalvarpointer,$A(A1)
00024DDE <AmiBlitz3.ab2@9010>   CMP.w #-$12D,D1
00024DE2 <AmiBlitz3.ab2@9011>    BNE.w JL_0_6C16
00024DEA <AmiBlitz3.ab2@9012>   MOVE.w $A(A1),movestdn+2
00024DF2 <AmiBlitz3.ab2@9013>   MOVE.w $A(A1),pusha3+2
00024DFA <AmiBlitz3.ab2@9014>   MOVE.w $A(A1),pusha32+2
00024E02 <AmiBlitz3.ab2@9015>   MOVE.w $A(A1),pulla3+2
00024E0A <AmiBlitz3.ab2@9016>   MOVE.w $A(A1),geta3+2
00024E0E <AmiBlitz3.ab2@9019>    CMP.w #-$3E9,D1
00024E12 <AmiBlitz3.ab2@9020>    BNE.w JL_0_6C3E
00024E1A <AmiBlitz3.ab2@9021>   MOVE.w $A(A1),dataget+2
00024E22 <AmiBlitz3.ab2@9022>   MOVE.w $A(A1),dataput+2
00024E2A <AmiBlitz3.ab2@9023>   MOVE.w $A(A1),rescode+6
00024E32 <AmiBlitz3.ab2@9024>   MOVE.w $A(A1),rescode2+2
00024E38 <AmiBlitz3.ab2@9027>   ADDQ.w #2,globalvarpointer
00024E3C <AmiBlitz3.ab2@9028>   TST.w $1A(A1)
00024E40 <AmiBlitz3.ab2@9029>    BMI.w JL_0_6C52
00024E46 <AmiBlitz3.ab2@9030>   ADDQ.w #2,globalvarpointer
00024E4A <AmiBlitz3.ab2@9033>   MOVEM.l D1/A1,-(A7)
00024E4E <AmiBlitz3.ab2@9034>   BSR.w uselib2
00024E52 <AmiBlitz3.ab2@9035>   MOVEM.l (A7)+,D1/A1
00024E54 <AmiBlitz3.ab2@9038>   MOVE.w D1,D2
00024E58 <AmiBlitz3.ab2@9039>   MOVE.l $16(A1),D1
00024E5C <AmiBlitz3.ab2@9040>    BSR.w uselib2_org
00024E60 <AmiBlitz3.ab2@9041>   MOVE.l $1C(A1),D1
00024E64 <AmiBlitz3.ab2@9042>    BSR.w uselib2_org
00024E68 <AmiBlitz3.ab2@9043>   MOVEM.l (A7)+,D1-D2
00024E6E <AmiBlitz3.ab2@9045>   MOVE.b (a7)+,debugmode
00024E70 <AmiBlitz3.ab2@9048> RTS
00024E72 <AmiBlitz3.ab2@9052>   MOVEQ.l #$00,D2
00024E78 <AmiBlitz3.ab2@9055>   MOVEA.l tokeslist,A2
00024E7A <AmiBlitz3.ab2@9056>   CMPA.l D2,A2
00024E7E <AmiBlitz3.ab2@9057>    BEQ.w JL_0_6CE0
00024E80 <AmiBlitz3.ab2@9058>   MOVE.l A2,-(A7)
00024E82 <AmiBlitz3.ab2@9061>   MOVEQ.l #$00,D3
00024E86 <AmiBlitz3.ab2@9064>   MOVEA.l $8(A2),A3
00024E88 <AmiBlitz3.ab2@9065>   CMPA.l D3,A3
00024E8C <AmiBlitz3.ab2@9066>    BEQ.w JL_0_6CD2
00024E8E <AmiBlitz3.ab2@9067>   MOVE.l A3,-(A7)
00024E92 <AmiBlitz3.ab2@9068>   MOVEM.l D2-D3/A2-A3,-(A7)
00024E96 <AmiBlitz3.ab2@9069>   MOVE.w $4(A2),D1
00024E9A <AmiBlitz3.ab2@9070>   MOVE.w $6(A2),D2
00024E9E <AmiBlitz3.ab2@9071>    BSR.w JL_0_6CE2
00024EA2 <AmiBlitz3.ab2@9072>   MOVEM.l (A7)+,D2-D3/A2-A3
00024EA8 <AmiBlitz3.ab2@9073>   MOVE.w dontwrite,D0
00024EAC <AmiBlitz3.ab2@9074>    BEQ.w JL_0_6CBE
00024EAE <AmiBlitz3.ab2@9077>   MOVEA.l (A3),A3
00024EB0 <AmiBlitz3.ab2@9078>   CMPA.l D3,A3
00024EB4 <AmiBlitz3.ab2@9079>    BNE.w JL_0_6CB2
00024EB8 <AmiBlitz3.ab2@9080> BRA.w JL_0_6CCC
00024EBC <AmiBlitz3.ab2@9083>   MOVEA.l $4(A3),A0
00024EBE <AmiBlitz3.ab2@9084>   MOVE.l D7,(A0)
00024EC0 <AmiBlitz3.ab2@9085>   MOVEA.l (A3),A3
00024EC2 <AmiBlitz3.ab2@9086>   CMPA.l D3,A3
00024EC6 <AmiBlitz3.ab2@9087>    BNE.w JL_0_6CBE
00024EC8 <AmiBlitz3.ab2@9090>   MOVE.l (A7)+,D3
00024ECC <AmiBlitz3.ab2@9091> BRA.w JL_0_6C88
00024ECE <AmiBlitz3.ab2@9094>    MOVEA.l (A2),A2
00024ED0 <AmiBlitz3.ab2@9095>   CMPA.l D2,A2
00024ED4 <AmiBlitz3.ab2@9096>    BNE.w JL_0_6C86
00024ED6 <AmiBlitz3.ab2@9097>   MOVE.l (A7)+,D2
00024EDA <AmiBlitz3.ab2@9098> BRA.w JL_0_6C78
00024EDC <AmiBlitz3.ab2@9101> RTS
00024EDE <AmiBlitz3.ab2@9105>   MOVE.w D2,-(A7)
00024EE2 <AmiBlitz3.ab2@9106>    BSR.w searchinstr
00024EE4 <AmiBlitz3.ab2@9107>   MOVE.w (A7)+,D2
00024EEC <AmiBlitz3.ab2@9108>   BCLR #$7,blitzmode
00024EF0 <AmiBlitz3.ab2@9109>   BCLR #$E,D2
00024EF4 <AmiBlitz3.ab2@9110>    BEQ.w JL_0_6D02
00024EFC <AmiBlitz3.ab2@9111>   BSET #$7,blitzmode
00024EFE <AmiBlitz3.ab2@9114>   TST.w (A3)
00024F02 <AmiBlitz3.ab2@9115>    BEQ.w JL_0_6DAC
00024F08 <AmiBlitz3.ab2@9116>   BTST #$2,$1(A3)
00024F0C <AmiBlitz3.ab2@9117>    BNE.w tokeerr
00024F12 <AmiBlitz3.ab2@9118>   BTST #$3,$1(A3)
00024F16 <AmiBlitz3.ab2@9119>    BNE.w tokeerr
00024F1A <AmiBlitz3.ab2@9120>   LEA $6(A3),A3
00024F1C <AmiBlitz3.ab2@9123>   MOVE.w (A3)+,D0
00024F20 <AmiBlitz3.ab2@9124>    BMI.w tokeerr
00024F24 <AmiBlitz3.ab2@9125>   ANDI.w #$FF,D0
00024F26 <AmiBlitz3.ab2@9126>   ADDA.w D0,A3
00024F28 <AmiBlitz3.ab2@9127>   ADDQ.w #1,A3
00024F2A <AmiBlitz3.ab2@9128>   EXG.l D0,A3
00024F2E <AmiBlitz3.ab2@9129>   BCLR #$0,D0
00024F30 <AmiBlitz3.ab2@9130>   EXG.l D0,A3
00024F32 <AmiBlitz3.ab2@9131>   SUBQ.w #1,D2
00024F36 <AmiBlitz3.ab2@9132>    BPL.w JL_0_6D98
00024F38 <AmiBlitz3.ab2@9133>   TST.w (A3)
00024F3C <AmiBlitz3.ab2@9134>    BNE.w JL_0_6D76
00024F40 <AmiBlitz3.ab2@9135>   MOVE.l $2(A3),D0
00024F44 <AmiBlitz3.ab2@9136>   OR.l $A(A3),D0
00024F48 <AmiBlitz3.ab2@9137>    BNE.w JL_0_6D76
00024F4E <AmiBlitz3.ab2@9138>   BTST #$0,$9(A3)
00024F52 <AmiBlitz3.ab2@9139>    BNE.w JL_0_6D76
00024F56 <AmiBlitz3.ab2@9140>   MOVE.l $6(A3),D7
00024F5A <AmiBlitz3.ab2@9141>   MOVE.w $0(A2,D7.L),D0
00024F5E <AmiBlitz3.ab2@9142>   ANDI.w #$F000,D0
00024F62 <AmiBlitz3.ab2@9143>   CMP.w #-$6000,D0
00024F66 <AmiBlitz3.ab2@9144>    BEQ.w JL_0_6D76
00024F6A <AmiBlitz3.ab2@9147>   SUB.l $12(A2),D7
00024F6E <AmiBlitz3.ab2@9148>   ADD.l $28(A2),D7
00024F70 <AmiBlitz3.ab2@9149> RTS
00024F76 <AmiBlitz3.ab2@9153>   LEA cutejsr,A0
00024F7C <AmiBlitz3.ab2@9156>   MOVE.l destpointer,-(A7)
00024F84 <AmiBlitz3.ab2@9157>   MOVE.w #$FFFF,lasta6
00024F86 <AmiBlitz3.ab2@9160>    JSR (A0)
00024F8A <AmiBlitz3.ab2@9161>   MOVE.w #$4E75,D1
00024F8E <AmiBlitz3.ab2@9162>    BSR.w writeword
00024F90 <AmiBlitz3.ab2@9163>   MOVE.l (A7)+,D7
00024F92 <AmiBlitz3.ab2@9164> RTS
00024F94 <AmiBlitz3.ab2@9168>   TST.w (A3)+
00024F98 <AmiBlitz3.ab2@9169>    BEQ.w JL_0_6DA4
00024F9A <AmiBlitz3.ab2@9170>   ADDQ.w #2,A3
00024F9E <AmiBlitz3.ab2@9171> BRA.w JL_0_6D98
00024FA2 <AmiBlitz3.ab2@9174>   LEA $C(A3),A3
00024FA6 <AmiBlitz3.ab2@9175> BRA.w JL_0_6D20
00024FA8 <AmiBlitz3.ab2@9179>   TST.w D2
00024FAC <AmiBlitz3.ab2@9180>    BNE.w tokeerr
00024FB0 <AmiBlitz3.ab2@9181>   TST.w $6(A3)
00024FB4 <AmiBlitz3.ab2@9182>    BNE.w JL_0_6DE4
00024FB8 <AmiBlitz3.ab2@9183>   MOVE.l $8(A3),D0
00024FBC <AmiBlitz3.ab2@9184>   OR.l $10(A3),D0
00024FC0 <AmiBlitz3.ab2@9185>    BNE.w JL_0_6DE4
00024FC6 <AmiBlitz3.ab2@9186>   BTST #$0,$F(A3)
00024FCA <AmiBlitz3.ab2@9187>    BNE.w JL_0_6DE4
00024FCE <AmiBlitz3.ab2@9188>   MOVE.l $C(A3),D7
00024FD2 <AmiBlitz3.ab2@9189>   MOVE.w $0(A2,D7.L),D0
00024FD6 <AmiBlitz3.ab2@9190>   ANDI.w #$F000,D0
00024FDA <AmiBlitz3.ab2@9191>   CMP.w #-$6000,D0
00024FDE <AmiBlitz3.ab2@9192>    BNE.w JL_0_6D6C
00024FE0 <AmiBlitz3.ab2@9195>   MOVE.l A3,D1
00024FE2 <AmiBlitz3.ab2@9196>   SUB.l A2,D1
00024FE8 <AmiBlitz3.ab2@9197>   LEA Amakelibsub,A0
00024FEC <AmiBlitz3.ab2@9198> BRA.w JL_0_6D7C
00024FF2 <AmiBlitz3.ab2@9202>   MOVEA.l _execbase,A6
00024FF8 <AmiBlitz3.ab2@9203>   MOVEA.l tokeslist,A2
00024FFE <AmiBlitz3.ab2@9204>   CLR.l tokeslist
00025002 <AmiBlitz3.ab2@9207>     CMPA.w #$0,A2
00025006 <AmiBlitz3.ab2@9208>      BEQ.w JL_0_6E32
0002500A <AmiBlitz3.ab2@9209>     MOVEA.l $8(A2),A3
0002500E <AmiBlitz3.ab2@9212>       CMPA.w #$0,A3
00025012 <AmiBlitz3.ab2@9213>        BEQ.w JL_0_6E24
00025014 <AmiBlitz3.ab2@9214>       MOVEA.l A3,A1
00025016 <AmiBlitz3.ab2@9215>       MOVEA.l (A3),A3
00025018 <AmiBlitz3.ab2@9216>       MOVEQ.l #$08,D0
0002501E <AmiBlitz3.ab2@9217>       MOVE.l mempool,a0
00025024 <AmiBlitz3.ab2@9218>       MOVEA.l _execbase,A6
00025028 <AmiBlitz3.ab2@9219>       JSR _FreePooled(A6)
0002502C <AmiBlitz3.ab2@9220> BRA.w JL_0_6E0E
0002502E <AmiBlitz3.ab2@9223>     MOVEA.l A2,A1
00025030 <AmiBlitz3.ab2@9224>     MOVEA.l (A2),A2
00025032 <AmiBlitz3.ab2@9225>     MOVEQ.l #$0C,D0
00025038 <AmiBlitz3.ab2@9226>     MOVE.l mempool,a0
0002503E <AmiBlitz3.ab2@9227>     MOVEA.l _execbase,A6
00025042 <AmiBlitz3.ab2@9228>     JSR _FreePooled(A6)
00025046 <AmiBlitz3.ab2@9229> BRA.w JL_0_6E02
00025048 <AmiBlitz3.ab2@9232> RTS
0002504C <AmiBlitz3.ab2@9236>   MOVEM.l D3-D5/A1-A6,-(A7)
0002504E <AmiBlitz3.ab2@9237>   MOVEA.l A1,A4
00025050 <AmiBlitz3.ab2@9240>   MOVE.l (A2)+,D3
00025054 <AmiBlitz3.ab2@9241>   MOVE.w $0(A4,D3.L),D5
00025058 <AmiBlitz3.ab2@9242>    BPL.w JL_0_6E7A
0002505C <AmiBlitz3.ab2@9243>   TST.l $2C(A4)
00025060 <AmiBlitz3.ab2@9244>    BEQ.w JL_0_6E5E
00025066 <AmiBlitz3.ab2@9245>   TST.b debugmode
0002506A <AmiBlitz3.ab2@9246>    BNE.w JL_0_6E5E
0002506E <AmiBlitz3.ab2@9247>   CMP.l $2C(A4),D3
00025072 <AmiBlitz3.ab2@9248>    BCC.w JL_0_6E7A
00025076 <AmiBlitz3.ab2@9251>   BCLR #$F,D5
0002507A <AmiBlitz3.ab2@9252>   MOVE.w $2(A4,D3.L),D4
0002507E <AmiBlitz3.ab2@9253>   SUB.l $12(A4),D3
00025082 <AmiBlitz3.ab2@9254>   ADD.l $28(A4),D3
00025086 <AmiBlitz3.ab2@9255>   MOVEM.l D2/A2/A4,-(A7)
0002508A <AmiBlitz3.ab2@9256>    BSR.w JL_0_6E86
0002508E <AmiBlitz3.ab2@9257>   MOVEM.l (A7)+,D2/A2/A4
00025090 <AmiBlitz3.ab2@9260>   SUBQ.l #1,D2
00025094 <AmiBlitz3.ab2@9261>    BNE.w JL_0_6E3A
00025098 <AmiBlitz3.ab2@9262>   MOVEM.l (A7)+,D3-D5/A1-A6
0002509A <AmiBlitz3.ab2@9263> RTS
000250A0 <AmiBlitz3.ab2@9267>   LEA tokeslist,A3
000250A6 <AmiBlitz3.ab2@9268>   MOVEA.l _execbase,A6
000250A8 <AmiBlitz3.ab2@9271>   MOVE.l (A3),D0
000250AC <AmiBlitz3.ab2@9272>    BEQ.w JL_0_6EAC
000250AE <AmiBlitz3.ab2@9273>   MOVEA.l D0,A3
000250B2 <AmiBlitz3.ab2@9274>   CMP.w $4(A3),D4
000250B6 <AmiBlitz3.ab2@9275>    BNE.w JL_0_6E90
000250BA <AmiBlitz3.ab2@9276>   CMP.w $6(A3),D5
000250BE <AmiBlitz3.ab2@9277>    BNE.w JL_0_6E90
000250C2 <AmiBlitz3.ab2@9278> BRA.w JL_0_6ED0
000250C4 <AmiBlitz3.ab2@9281>   MOVEQ.l #$0C,D0
000250C6 <AmiBlitz3.ab2@9282>   MOVEQ.l #$01,D1
000250CC <AmiBlitz3.ab2@9283>   MOVE.l mempool,a0
000250D0 <AmiBlitz3.ab2@9284>   JSR _AllocPooled(a6)
000250D2 <AmiBlitz3.ab2@9286>   MOVEA.l D0,A3
000250D8 <AmiBlitz3.ab2@9287>   MOVE.l tokeslist,(A3)
000250DE <AmiBlitz3.ab2@9288>   MOVE.l A3,tokeslist
000250E2 <AmiBlitz3.ab2@9289>   MOVE.w D4,$4(A3)
000250E6 <AmiBlitz3.ab2@9290>   MOVE.w D5,$6(A3)
000250EA <AmiBlitz3.ab2@9291>   CLR.l $8(A3)
000250EC <AmiBlitz3.ab2@9294>   MOVEQ.l #$08,D0
000250EE <AmiBlitz3.ab2@9295>   MOVEQ.l #$01,D1
000250F4 <AmiBlitz3.ab2@9296>   MOVE.l mempool,a0
000250F8 <AmiBlitz3.ab2@9297>   JSR _AllocPooled(a6)
000250FA <AmiBlitz3.ab2@9299>   MOVEA.l D0,A0
000250FE <AmiBlitz3.ab2@9300>   MOVE.l D3,$4(A0)
00025102 <AmiBlitz3.ab2@9301>   MOVE.l $8(A3),(A0)
00025106 <AmiBlitz3.ab2@9302>   MOVE.l A0,$8(A3)
00025108 <AmiBlitz3.ab2@9303>   MOVE.w D4,D1
0002510C <AmiBlitz3.ab2@9304> BRA.w searchinstr
00025110 <AmiBlitz3.ab2@9307> tokeslist: Ds.l 1
00025114 <AmiBlitz3.ab2@9320>   BEQ.w uselib2_org__skip
00025116 <AmiBlitz3.ab2@9321>   MOVE.l A1,-(A7)
00025118 <AmiBlitz3.ab2@9322>   ADDA.l D1,A1
0002511A <AmiBlitz3.ab2@9323>   ADDQ.w #6,A1
0002511C <AmiBlitz3.ab2@9326>     MOVE.w (A1)+,D1
00025120 <AmiBlitz3.ab2@9327>     BEQ.w uselib2_org__done
00025122 <AmiBlitz3.ab2@9328>     CMP.w D2,D1
00025126 <AmiBlitz3.ab2@9329>     BEQ.w uselib2_org__skip2
00025128 <AmiBlitz3.ab2@9330>     MOVE.l A1,-(A7)
0002512C <AmiBlitz3.ab2@9331>     BSR.w uselib
0002512E <AmiBlitz3.ab2@9332>     MOVEA.l (A7)+,A1
00025130 <AmiBlitz3.ab2@9335>     ADDQ.w #2,A1
00025134 <AmiBlitz3.ab2@9336> BRA.w uselib2_org__loop
00025136 <AmiBlitz3.ab2@9339>   MOVEA.l (A7)+,A1
00025138 <AmiBlitz3.ab2@9342> RTS
0002513E <AmiBlitz3.ab2@9346>   MOVEA.l libpointer,A1
00025142 <AmiBlitz3.ab2@9349>   CMPA.w #$0,A1
00025146 <AmiBlitz3.ab2@9350>    BEQ.b JL_0_6F36
0002514A <AmiBlitz3.ab2@9351>   CMP.w $4(A1),D1
0002514E <AmiBlitz3.ab2@9352>    BEQ.w JL_0_6F34
00025150 <AmiBlitz3.ab2@9353>   MOVEA.l (A1),A1
00025154 <AmiBlitz3.ab2@9354> BRA.w JL_0_6F20
00025156 <AmiBlitz3.ab2@9357>   MOVEQ.l #-$01,D1
00025158 <AmiBlitz3.ab2@9360> RTS
0002515C <AmiBlitz3.ab2@9364>   MOVEM.l d0/a2,-(a7)
0002515E <AmiBlitz3.ab2@9365>   MOVEQ #0,d0
00025164 <AmiBlitz3.ab2@9366>   LEA instrtab+4,a2
00025166 <AmiBlitz3.ab2@9367>   MOVE.w d1,d0
00025168 <AmiBlitz3.ab2@9368>   ASL.l #3,d0
0002516C <AmiBlitz3.ab2@9369>   MOVE.l 0(a2,d0.l),a1                                     ;*8
00025172 <AmiBlitz3.ab2@9370>   CMP.l #0,a1
00025176 <AmiBlitz3.ab2@9371>   BNE JL_0_6F54b
0002517C <AmiBlitz3.ab2@9373>   MOVEA.l libpointer,A1
00025180 <AmiBlitz3.ab2@9376>     CMPA.w #$0,A1
00025184 <AmiBlitz3.ab2@9377>     BEQ.w noliberr
00025188 <AmiBlitz3.ab2@9378>     CMP.w $4(A1),D1
0002518C <AmiBlitz3.ab2@9379>     BEQ.w JL_0_6F54
0002518E <AmiBlitz3.ab2@9380>    MOVEA.l (A1),A1
00025192 <AmiBlitz3.ab2@9381> BRA.w JL_0_6F3E
00025196 <AmiBlitz3.ab2@9384>   MOVE.l a1,0(a2,d0.l)
0002519A <AmiBlitz3.ab2@9387>   MOVEM.l (a7)+,d0/a2
0002519C <AmiBlitz3.ab2@9388> RTS
000251A0 <AmiBlitz3.ab2@9391>   MOVEM.l d0-d1/a1,-(a7)
000251A2 <AmiBlitz3.ab2@9392>   MOVEQ #0,d0
000251A8 <AmiBlitz3.ab2@9393>   LEA instrtab,a1
000251AA <AmiBlitz3.ab2@9394>   MOVE.w d1,d0
000251AC <AmiBlitz3.ab2@9395>   ASL.l #3,d0
000251B0 <AmiBlitz3.ab2@9396>   MOVE.l 0(a1,d0.l),a3
000251B4 <AmiBlitz3.ab2@9397>   MOVE.l 4(a1,d0.l),a2
000251BA <AmiBlitz3.ab2@9398>   CMP.l #0,a3
000251BE <AmiBlitz3.ab2@9399>   BNE JL_0_6F92b
000251C4 <AmiBlitz3.ab2@9401>   MOVEA.l libpointer,A2
000251C8 <AmiBlitz3.ab2@9404>   CMPA.w #$0,A2
000251CC <AmiBlitz3.ab2@9405>   BEQ.w notokerr
000251D0 <AmiBlitz3.ab2@9406>   CMP.w $E(A2),D1
000251D4 <AmiBlitz3.ab2@9407>   BCS.w JL_0_6FB8
000251D8 <AmiBlitz3.ab2@9408>   CMP.w $10(A2),D1
000251DC <AmiBlitz3.ab2@9409>   BCC.w JL_0_6FB8
000251E0 <AmiBlitz3.ab2@9410>   LEA $30(A2),A3
000251E4 <AmiBlitz3.ab2@9411>   TST.w $4(A2)
000251E8 <AmiBlitz3.ab2@9412>   BPL.w JL_0_6FA6
000251EC <AmiBlitz3.ab2@9415>     CMP.w $E(A2),D1
000251F0 <AmiBlitz3.ab2@9416>     BEQ.w JL_0_6F92
000251F2 <AmiBlitz3.ab2@9417>     SUBQ.w #1,D1
000251F6 <AmiBlitz3.ab2@9418>     MOVEA.l $2(A3),A3
000251FA <AmiBlitz3.ab2@9419> BRA.w JL_0_6F80
000251FE <AmiBlitz3.ab2@9422>   MOVE.l a3,0(a1,d0.l)
00025202 <AmiBlitz3.ab2@9423>   MOVE.l a2,4(a1,d0.l)
00025206 <AmiBlitz3.ab2@9426>   MOVEM.l (a7)+,d0-d1/a1
0002520A <AmiBlitz3.ab2@9427>   MOVEM.l D1/A1-a3,-(A7)
0002520E <AmiBlitz3.ab2@9428>   CMP.w #1,(a3)
00025212 <AmiBlitz3.ab2@9429>   BNE.s ex10
0002521A <AmiBlitz3.ab2@9430>   CMP.l #$12345678,$e(a3)
0002521E <AmiBlitz3.ab2@9431>   BNE.s ex10
00025224 <AmiBlitz3.ab2@9432>   CMP.w #$ffff,$16(a3)
00025228 <AmiBlitz3.ab2@9433>   BNE.s ex10
0002522C <AmiBlitz3.ab2@9434>   MOVE.l $12(a3),d1
00025230 <AmiBlitz3.ab2@9435>   BEQ.s ex10
00025236 <AmiBlitz3.ab2@9436>   LEA pluginbase,a3
0002523A <AmiBlitz3.ab2@9438> JMP 0(a2,d1.l)                                             ;plugin
0002523E <AmiBlitz3.ab2@9441>   MOVEM.l (A7)+,D1/A1-a3
00025244 <AmiBlitz3.ab2@9442>   JSR stripspaces
00025246 <AmiBlitz3.ab2@9443>   MOVEQ #0,d0
00025248 <AmiBlitz3.ab2@9444>   MOVE.b (a5)+,d0
0002524E <AmiBlitz3.ab2@9445>   MOVE.w d0,lastchar
00025250 <AmiBlitz3.ab2@9446>   ADDQ.l #4,a7
00025252 <AmiBlitz3.ab2@9447> RTS
00025254 <AmiBlitz3.ab2@9451>   MOVEA.l A2,A1
0002525A <AmiBlitz3.ab2@9452>   CLR.b newmode
0002525E <AmiBlitz3.ab2@9453>   MOVE.w $4(A1),D1
00025262 <AmiBlitz3.ab2@9456>   BSR.w uselib3
00025266 <AmiBlitz3.ab2@9457>   MOVEM.l (A7)+,D1/A1-a3
00025268 <AmiBlitz3.ab2@9458> RTS
0002526E <AmiBlitz3.ab2@9461>   MOVE.w globalvarpointer,-(a7)
00025276 <AmiBlitz3.ab2@9462>   MOVE.w #$8004,globalvarpointer
0002527A <AmiBlitz3.ab2@9463>   BSR.w uselib3
00025280 <AmiBlitz3.ab2@9464>   MOVE.w (a7)+,globalvarpointer
00025284 <AmiBlitz3.ab2@9465>   MOVEM.l (A7)+,D1/A1-a3
00025286 <AmiBlitz3.ab2@9466> RTS
0002528A <AmiBlitz3.ab2@9469>     CMP.w $E(A2),D1
0002528E <AmiBlitz3.ab2@9470>     BEQ.w JL_0_6F92
00025290 <AmiBlitz3.ab2@9471>     SUBQ.w #1,D1
00025294 <AmiBlitz3.ab2@9472>     MOVEA.l $2(A3),A3
00025298 <AmiBlitz3.ab2@9473> BRA.w JL_0_6FA6
0002529A <AmiBlitz3.ab2@9476>   MOVEA.l (A2),A2
0002529E <AmiBlitz3.ab2@9477> BRA.w JL_0_6F5C
000252A4 <AmiBlitz3.ab2@9480> JMP writeword
000252A8 <AmiBlitz3.ab2@9483> ptr_acidlibs:   Ds.l 1                                     ;deflibsat org source
000252AC <AmiBlitz3.ab2@9484> ptr_deflibs:    Ds.l 1                                     ;acidlibsat org source
000252B0 <AmiBlitz3.ab2@9485> ptr_userlibs:   Ds.l 1                                     ;blitzlibsat org source  ;;start of blitzlibs list!
000252B2 <AmiBlitz3.ab2@9491>   TST.l D0
000252B6 <AmiBlitz3.ab2@9492>   BEQ.w exit_loadlibsfile
000252B8 <AmiBlitz3.ab2@9493>     MOVE.l D0,D6                                           ;d6=len
000252BE <AmiBlitz3.ab2@9494>     MOVEA.l _dosbase,A6
000252C4 <AmiBlitz3.ab2@9495>     MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
000252C8 <AmiBlitz3.ab2@9496>     JSR _Open(A6)
000252CA <AmiBlitz3.ab2@9497>     MOVE.l D0,D7
000252CE <AmiBlitz3.ab2@9498>     BEQ.w exit_loadlibsfile
000252D0 <AmiBlitz3.ab2@9499>       MOVE.l D6,D0
000252D2 <AmiBlitz3.ab2@9500>       MOVEQ.l #$01,D1
000252D8 <AmiBlitz3.ab2@9501>       MOVEA.l _execbase,A6
000252DE <AmiBlitz3.ab2@9502>       MOVE.l mempool,a0
000252E2 <AmiBlitz3.ab2@9503>       JSR _AllocPooled(a6)
000252E4 <AmiBlitz3.ab2@9504>       MOVE.l D0,D5                                         ;start address
000252E6 <AmiBlitz3.ab2@9506>       MOVE.l D7,D1                                         ; handle
000252E8 <AmiBlitz3.ab2@9507>       MOVE.l D5,D2                                         ; buffer addr
000252EA <AmiBlitz3.ab2@9508>       MOVE.l D6,D3                                         ; size
000252F0 <AmiBlitz3.ab2@9509>       MOVEA.l _dosbase,A6
000252F4 <AmiBlitz3.ab2@9510>       JSR _Read(A6)
000252F6 <AmiBlitz3.ab2@9511>       MOVE.l D7,D1
000252FA <AmiBlitz3.ab2@9512>       JSR _Close(A6)
000252FC <AmiBlitz3.ab2@9514>       MOVEA.l D5,A0                                        ; buffer addr
000252FE <AmiBlitz3.ab2@9520>         MOVE.l (A0)+,D0                                    ; naechster Longwert nach DO
00025302 <AmiBlitz3.ab2@9521>         BEQ.b JL_0_7044                                    ; wenn <> 0, dann
00025306 <AmiBlitz3.ab2@9522>           LEA $20(A0),A1                                   ;   lade inhalt von D0+40bytes nach A1
00025308 <AmiBlitz3.ab2@9523>           MOVE.l A1,(A3)                                   ;   kopiere Adresse in A1 zum libpointer
0002530A <AmiBlitz3.ab2@9524>           MOVEA.l A1,A3                                    ;   kopiere A1 nach A3
0002530C <AmiBlitz3.ab2@9525>           ADDA.l D0,A0                                     ;   addiere inhalt von D0 zu A0 hinzu
00025310 <AmiBlitz3.ab2@9526>           MOVE.l -$4(A1),D0                                ;   hole die 4bytes vor nach D0
00025312 <AmiBlitz3.ab2@9527>           ADD.l D0,D0                                      ;   verdoppele D0
00025314 <AmiBlitz3.ab2@9528>           ADD.l D0,D0                                      ;   verdoppele D0 nochmal
00025318 <AmiBlitz3.ab2@9529>           MOVE.l D0,$6(A1)                                 ;   schreibe D0 6bytes nach A1
0002531C <AmiBlitz3.ab2@9530>           CLR.l $20(A1)                                    ;   loesche D0+40bytes
00025320 <AmiBlitz3.ab2@9531>           LEA $C(A1,D0.L),A2                               ;   lade inhalt von (A1)+D0+$C nach A2
00025322 <AmiBlitz3.ab2@9532>           CMPA.l A0,A2
00025326 <AmiBlitz3.ab2@9533>           BCC.b JL_0_7010                                  ; wenn A0=>A2
0002532C <AmiBlitz3.ab2@9534>             MOVE.l -$8(A2),$20(A1)                         ;
00025330 <AmiBlitz3.ab2@9535>             MOVE.l A2,$24(A1)                              ;
00025334 <AmiBlitz3.ab2@9536> BRA.w JL_0_7010
00025336 <AmiBlitz3.ab2@9539>       MOVE.l D5,D0
00025338 <AmiBlitz3.ab2@9542> RTS
00025362 <AmiBlitz3.ab2@9546>   !basic
000253D6 <AmiBlitz3.ab2@9547>    tempmapping$ = dos_AddPart{my_systemdir$,"token_mapping_userlibs.txt"}
0002540A <AmiBlitz3.ab2@9548>    dos_Delete{tempmapping$}
0002544E <AmiBlitz3.ab2@9549>    fid.l = file_Open{tempmapping$,#file_forcewrite}
0002546C <AmiBlitz3.ab2@9550>   !asm
00025472 <AmiBlitz3.ab2@9552>   LEA libpointer,A3
00025478 <AmiBlitz3.ab2@9556>   MOVE.l size_deflibs,D0
0002547E <AmiBlitz3.ab2@9557>   MOVE.l deflib,d1
00025482 <AmiBlitz3.ab2@9558>   BEQ 'l1
00025486 <AmiBlitz3.ab2@9559> BRA 'l2
0002548C <AmiBlitz3.ab2@9562>   MOVE.l #str_path_deflibs,D1
00025490 <AmiBlitz3.ab2@9565>   BSR.w load_libsfile
00025496 <AmiBlitz3.ab2@9566>   MOVE.l D0,ptr_deflibs
0002549C <AmiBlitz3.ab2@9569>   MOVE.l size_acidlibs,D0
000254A2 <AmiBlitz3.ab2@9570>   MOVE.l #str_path_acidlibs,D1
000254A6 <AmiBlitz3.ab2@9571>   BSR.w load_libsfile
000254AC <AmiBlitz3.ab2@9572>   MOVE.l D0,ptr_acidlibs
000254AE <AmiBlitz3.ab2@9576>   CLR.l (A3)
000254B4 <AmiBlitz3.ab2@9577>   MOVE.l A3,ptr_userlibs
000254BA <AmiBlitz3.ab2@9582>   LEA str_libfilename,A0
000254C0 <AmiBlitz3.ab2@9583>   LEA str_path_userlibs,A1
000254C2 <AmiBlitz3.ab2@9586>     MOVE.b (A1)+,(A0)+
000254C6 <AmiBlitz3.ab2@9587>   BNE.b JL_0_708E
000254C8 <AmiBlitz3.ab2@9589>   SUBQ.w #1,A0
000254CC <AmiBlitz3.ab2@9590>   MOVE.b #$2F,(A0)+
000254CE <AmiBlitz3.ab2@9593>   MOVE.l A0,-(A7)                                          ; -- store str_path_userlibs in A7
000254D4 <AmiBlitz3.ab2@9595>   LEA ptr_userlibs_list,A2
000254DA <AmiBlitz3.ab2@9596>   MOVEA.l ptr_userlibs,A3
000254E0 <AmiBlitz3.ab2@9597>   MOVEA.l _dosbase,A6
000254E2 <AmiBlitz3.ab2@9602>       MOVE.l (A2),D0                                       ; addresse aus liste nach D0
000254E6 <AmiBlitz3.ab2@9603>       BNE.b JL_0_70C6                                      ; wenn nix drin, processing ueberspringen
000254E8 <AmiBlitz3.ab2@9605>       CLR.l (A3)
000254EA <AmiBlitz3.ab2@9606>       ADDQ.w #4,A7
00025514 <AmiBlitz3.ab2@9607>       !basic
00025528 <AmiBlitz3.ab2@9608>       If fid<>-1
00025532 <AmiBlitz3.ab2@9609>         file_Close{fid}
0002553E <AmiBlitz3.ab2@9610>         fid = -1
0002555C <AmiBlitz3.ab2@9612>       !asm
00025560 <AmiBlitz3.ab2@9613> BRA.w process_libraries
00025562 <AmiBlitz3.ab2@9616>       MOVEA.l D0,A2                                        ; addresse zureuck nach A2
00025566 <AmiBlitz3.ab2@9617>       TST.w $4(A2)                                         ; naechste addresse pruefen
0002556A <AmiBlitz3.ab2@9618>     BEQ.b JL_0_70BA
0002556E <AmiBlitz3.ab2@9620>     LEA $6(A2),A1
00025570 <AmiBlitz3.ab2@9621>     MOVEA.l (A7),A0
00025572 <AmiBlitz3.ab2@9624>       MOVE.b (A1)+,(A0)+
00025576 <AmiBlitz3.ab2@9625>     BNE.w JL_0_70D4
00025578 <AmiBlitz3.ab2@9629>     MOVE.l A0,-(A7)
0002557E <AmiBlitz3.ab2@9630>     MOVE.l #str_libfilename,D1
00025580 <AmiBlitz3.ab2@9631>     MOVEQ.l #-$02,D2
00025586 <AmiBlitz3.ab2@9632>     MOVEA.l _dosbase,A6
0002558A <AmiBlitz3.ab2@9633>      JSR _Lock(A6)
0002558C <AmiBlitz3.ab2@9634>     MOVE.l D0,D1
00025590 <AmiBlitz3.ab2@9635>      BEQ.w JL_0_7156
00025592 <AmiBlitz3.ab2@9636>     MOVEA.l (A7),A0
00025598 <AmiBlitz3.ab2@9637>     MOVE.b #$2F,-$1(A0)
0002559A <AmiBlitz3.ab2@9640>     MOVE.l D1,-(A7)
000255A0 <AmiBlitz3.ab2@9641>     MOVE.l #ptr_parameterstore,D2
000255A6 <AmiBlitz3.ab2@9642>     MOVEA.l _dosbase,A6
000255AA <AmiBlitz3.ab2@9643>     JSR _Examine(A6)
000255AC <AmiBlitz3.ab2@9644>     TST.l D0
000255B0 <AmiBlitz3.ab2@9645>      BEQ.w JL_0_7150
000255B6 <AmiBlitz3.ab2@9648>     LEA fib_FileName,A0
000255BA <AmiBlitz3.ab2@9649>     BSR.w check_for_infoextention
000255BE <AmiBlitz3.ab2@9650>     BEQ.w JL_0_7150
000255E8 <AmiBlitz3.ab2@9653>     !basic
0002566C <AmiBlitz3.ab2@9654>       Poke$ ?str_libfilename,dos_AddPart{Peek$(?str_path_userlibs),Peek$(?fib_FileName)}
0002568A <AmiBlitz3.ab2@9655>     !asm
00025690 <AmiBlitz3.ab2@9656>     MOVE.l #str_libfilename,D1
00025694 <AmiBlitz3.ab2@9657>     BSR.w open_userlibfile
00025696 <AmiBlitz3.ab2@9660>     MOVE.l (A7)+,D1
0002569C <AmiBlitz3.ab2@9661>     MOVEA.l _dosbase,A6
000256A0 <AmiBlitz3.ab2@9662>     JSR _UnLock(A6)
000256A2 <AmiBlitz3.ab2@9665>     ADDQ.w #4,A7
000256A6 <AmiBlitz3.ab2@9666> BRA.w JL_0_70BA
000256AC <AmiBlitz3.ab2@9669>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
000256B2 <AmiBlitz3.ab2@9670>   MOVEA.l _dosbase,A6
000256B6 <AmiBlitz3.ab2@9671>    JSR _Open(A6)
000256B8 <AmiBlitz3.ab2@9672>   MOVE.l D0,D7
000256BC <AmiBlitz3.ab2@9673>    BEQ.w exit_userlibfile
000256BE <AmiBlitz3.ab2@9676>   MOVE.l D7,D1                                             ; filehandle
000256C4 <AmiBlitz3.ab2@9677>   MOVE.l #optstuff,D2                                     ; buffer
000256CA <AmiBlitz3.ab2@9678>   MOVEA.l _dosbase,A6
000256CC <AmiBlitz3.ab2@9679>   MOVEQ.l #$20,D3                                          ; size
000256D0 <AmiBlitz3.ab2@9680>   JSR _Read(A6)
000256D6 <AmiBlitz3.ab2@9683>   MOVE.l optstuff+28,D6
000256D8 <AmiBlitz3.ab2@9684>   LSL.l #2,D6
000256DA <AmiBlitz3.ab2@9685>   MOVE.l D6,D0
000256DC <AmiBlitz3.ab2@9686>   MOVEQ.l #$01,D1
000256E2 <AmiBlitz3.ab2@9687>   MOVEA.l _execbase,A6
000256E8 <AmiBlitz3.ab2@9688>   MOVE.l mempool,a0
000256EC <AmiBlitz3.ab2@9689>   JSR _AllocPooled(a6)
000256EE <AmiBlitz3.ab2@9690>   MOVEA.l D0,A5
000256F4 <AmiBlitz3.ab2@9693>   MOVEA.l _dosbase,A6
000256F6 <AmiBlitz3.ab2@9694>   MOVE.l D7,D1                                             ; filehandle
000256F8 <AmiBlitz3.ab2@9695>   MOVE.l A5,D2                                             ; buffer
000256FA <AmiBlitz3.ab2@9696>   MOVE.l D6,D3                                             ; size
000256FE <AmiBlitz3.ab2@9697>    JSR _Read(A6)
00025700 <AmiBlitz3.ab2@9698>   MOVE.l A5,(A3)
00025702 <AmiBlitz3.ab2@9700>   MOVE.l A5,d0
00025704 <AmiBlitz3.ab2@9702>   MOVEA.l A5,A3
00025708 <AmiBlitz3.ab2@9703>   MOVE.l D6,$6(A5)
0002570C <AmiBlitz3.ab2@9704>   CLR.l $20(A5)
00025736 <AmiBlitz3.ab2@9706>   !basic
00025740 <AmiBlitz3.ab2@9708>   addr_libnum.l = PutD0 + 4
00025754 <AmiBlitz3.ab2@9709>   If fid<>-1
000257F4 <AmiBlitz3.ab2@9710>     currentlib$ = LSet$(Peek.s(?fib_FileName),30)+";"+LSet$(Get_Libinfo{addr_libnum},30) ;+";"+Str$(Peek.w(addr_libnum))
00025826 <AmiBlitz3.ab2@9711>     file_WriteLine{fid,currentlib$}
00025844 <AmiBlitz3.ab2@9713>   !asm
00025846 <AmiBlitz3.ab2@9716>   MOVE.l D7,D1                                             ; filehandle
0002584C <AmiBlitz3.ab2@9717>   MOVE.l #optstuff,D2                                     ; buffer
0002584E <AmiBlitz3.ab2@9718>   MOVEQ.l #$0C,D3                                          ; size
00025854 <AmiBlitz3.ab2@9719>   MOVEA.l _dosbase,A6
00025858 <AmiBlitz3.ab2@9720>    JSR _Read(A6)
0002585E <AmiBlitz3.ab2@9722>   CMP.l #$C,D0
00025862 <AmiBlitz3.ab2@9723>    BCS.w close_and_exit_userlibfile
00025868 <AmiBlitz3.ab2@9726>   MOVE.l optstuff+4,D0
0002586C <AmiBlitz3.ab2@9727>   MOVE.l D0,$20(A5)
0002586E <AmiBlitz3.ab2@9728>   LSL.l #2,D0
00025870 <AmiBlitz3.ab2@9729>   MOVE.l D0,D5
00025872 <AmiBlitz3.ab2@9730>   MOVEQ.l #$01,D1
00025878 <AmiBlitz3.ab2@9731>   MOVEA.l _execbase,A6
0002587E <AmiBlitz3.ab2@9732>   MOVE.l mempool,a0
00025882 <AmiBlitz3.ab2@9733>   JSR _AllocPooled(a6)
00025888 <AmiBlitz3.ab2@9735>   MOVEA.l _dosbase,A6
0002588C <AmiBlitz3.ab2@9736>   MOVE.l D0,$24(A5)
0002588E <AmiBlitz3.ab2@9737>   MOVE.l D7,D1
00025890 <AmiBlitz3.ab2@9738>   MOVE.l D0,D2
00025892 <AmiBlitz3.ab2@9739>   MOVE.l D5,D3
00025896 <AmiBlitz3.ab2@9740>   JSR _Read(A6)
00025898 <AmiBlitz3.ab2@9743>   MOVE.l D7,D1
0002589E <AmiBlitz3.ab2@9744>   MOVEA.l _dosbase,A6
000258A2 <AmiBlitz3.ab2@9745> JMP _Close(A6)
000258A4 <AmiBlitz3.ab2@9748> RTS
000258AA <AmiBlitz3.ab2@9754>   CLR.w number_of_objects
000258B0 <AmiBlitz3.ab2@9755>   MOVEA.l end_of_tokenlist,A3
000258B6 <AmiBlitz3.ab2@9756>   MOVEA.l libpointer,A2
000258BA <AmiBlitz3.ab2@9759>     CMPA.w #$0,A2
000258BE <AmiBlitz3.ab2@9760>     BEQ.w JL_0_72D8                                        ; <-- abbruch mit RTS
000258C2 <AmiBlitz3.ab2@9762>     MOVE.w $4(A2),D7                                       ; <-- get tokennumber
000258C6 <AmiBlitz3.ab2@9763>     BMI.w JL_0_7226
000258C8 <AmiBlitz3.ab2@9764>       LSL.w #7,D7
000258CA <AmiBlitz3.ab2@9765>       ADDQ.w #1,D7
000258CE <AmiBlitz3.ab2@9766>       MOVE.w D7,$E(A2)
000258D2 <AmiBlitz3.ab2@9769>     LEA $30(A2),A1
000258D8 <AmiBlitz3.ab2@9770>     LEA temp1,A4
000258DA <AmiBlitz3.ab2@9773>       MOVE.w (A1),D0
000258DE <AmiBlitz3.ab2@9774>       BMI.w JL_0_72AE
000258E0 <AmiBlitz3.ab2@9775>       MOVE.l A1,(A4)
000258E2 <AmiBlitz3.ab2@9776>       MOVEA.l A1,A4
000258E4 <AmiBlitz3.ab2@9777>       ADDQ.w #2,A4
000258E6 <AmiBlitz3.ab2@9778>       ADDQ.w #6,A1
000258EA <AmiBlitz3.ab2@9779>       CMP.w #$8,D0
000258EE <AmiBlitz3.ab2@9780>       BEQ.w JL_0_7290
000258F2 <AmiBlitz3.ab2@9781>         ANDI.w #$F,D0
000258F6 <AmiBlitz3.ab2@9782>         BNE.w JL_0_725C
000258FA <AmiBlitz3.ab2@9783>           BSR.w skiplibreg
000258FE <AmiBlitz3.ab2@9784>           LEA $C(A1),A1
00025900 <AmiBlitz3.ab2@9785>           ADDQ.w #1,D7
00025904 <AmiBlitz3.ab2@9786> BRA.w JL_0_7230
00025908 <AmiBlitz3.ab2@9789>     BTST #$2,D0
0002590C <AmiBlitz3.ab2@9790>     BEQ.w JL_0_7274
0002590E <AmiBlitz3.ab2@9791>       ADDQ.w #4,A1
00025910 <AmiBlitz3.ab2@9794>         TST.b (A1)+
00025914 <AmiBlitz3.ab2@9795>       BPL.w JL_0_7266
00025918 <AmiBlitz3.ab2@9796>       BSR.w aligna1
0002591C <AmiBlitz3.ab2@9797> BRA.w JL_0_7290
0002591E <AmiBlitz3.ab2@9800>       MOVE.w (A1)+,D0
00025922 <AmiBlitz3.ab2@9801>       BMI.w JL_0_7290
00025926 <AmiBlitz3.ab2@9802>       ANDI.w #$FF,D0
00025928 <AmiBlitz3.ab2@9803>       ADDA.w D0,A1
0002592C <AmiBlitz3.ab2@9804>       BSR.w aligna1
00025930 <AmiBlitz3.ab2@9805>       BSR.w skiplibreg
00025934 <AmiBlitz3.ab2@9806>       LEA $C(A1),A1
00025938 <AmiBlitz3.ab2@9807> BRA.w JL_0_7274
0002593A <AmiBlitz3.ab2@9810>     MOVE.l A1,(A3)
0002593C <AmiBlitz3.ab2@9811>     MOVEA.l A1,A3
0002593E <AmiBlitz3.ab2@9812>     ADDQ.w #4,A1
00025940 <AmiBlitz3.ab2@9813>     MOVE.w D7,(A1)+
00025942 <AmiBlitz3.ab2@9816>       TST.b (A1)+
00025946 <AmiBlitz3.ab2@9817>     BNE.w JL_0_7298
00025948 <AmiBlitz3.ab2@9820>       TST.b (A1)+
0002594C <AmiBlitz3.ab2@9821>     BNE.w JL_0_729E
00025950 <AmiBlitz3.ab2@9823>     BSR.w aligna1
00025952 <AmiBlitz3.ab2@9824>     ADDQ.w #1,D7
00025956 <AmiBlitz3.ab2@9825> BRA.w JL_0_7230
0002595A <AmiBlitz3.ab2@9828>     TST.w $4(A2)
0002595E <AmiBlitz3.ab2@9829>      BMI.w JL_0_72BA
00025962 <AmiBlitz3.ab2@9830>     MOVE.w D7,$10(A2)
00025964 <AmiBlitz3.ab2@9833>     ADDQ.w #2,A1
00025966 <AmiBlitz3.ab2@9834>     TST.l (A1)+
0002596A <AmiBlitz3.ab2@9835>      BEQ.w JL_0_72CC
00025970 <AmiBlitz3.ab2@9836>     ADDQ.w #1,number_of_objects
00025974 <AmiBlitz3.ab2@9837>     LEA $16(A1),A1
00025976 <AmiBlitz3.ab2@9840>     SUBA.l A2,A1
0002597A <AmiBlitz3.ab2@9841>     MOVE.l A1,$12(A2)
0002597C <AmiBlitz3.ab2@9842>     MOVEA.l (A2),A2
00025980 <AmiBlitz3.ab2@9843> BRA.w JL_0_720E
00025982 <AmiBlitz3.ab2@9846>   CLR.l (A3)
00025988 <AmiBlitz3.ab2@9847>   MOVE.l A7,errstack
00025992 <AmiBlitz3.ab2@9848>   MOVE.l #AL_0_730E,errcont
0002599A <AmiBlitz3.ab2@9849>   MOVE.w #$FFFF,ezerr
0002599E <AmiBlitz3.ab2@9850>   MOVE.w #$FFFA,D1
000259A2 <AmiBlitz3.ab2@9851>    BSR.w JL_0_6F38
000259A8 <AmiBlitz3.ab2@9852>   MOVE.l A1,tempvm
000259AC <AmiBlitz3.ab2@9853>   MOVE.w #$FDA7,D1
000259B0 <AmiBlitz3.ab2@9854>    BSR.w JL_0_6F38
000259B6 <AmiBlitz3.ab2@9855>   MOVE.l A1,ffplib
000259B8 <AmiBlitz3.ab2@9858> RTS
000259BC <AmiBlitz3.ab2@9861> ffplib:  Ds.l 1
000259BE <AmiBlitz3.ab2@9865>     TST.w (A1)+
000259C2 <AmiBlitz3.ab2@9866>     BEQ.w JL_0_7320
000259C4 <AmiBlitz3.ab2@9867>     ADDQ.w #2,A1
000259C8 <AmiBlitz3.ab2@9868> BRA.w skiplibreg
000259CA <AmiBlitz3.ab2@9871> RTS
000259CC <AmiBlitz3.ab2@9875>   EXG.l A1,A0
000259D0 <AmiBlitz3.ab2@9876>   BSR.w aligna1
000259D2 <AmiBlitz3.ab2@9877>   EXG.l A1,A0
000259D4 <AmiBlitz3.ab2@9878> RTS
000259D6 <AmiBlitz3.ab2@9881>   EXG.l D0,A1
000259D8 <AmiBlitz3.ab2@9882>   ADDQ.l #1,D0
000259DC <AmiBlitz3.ab2@9883>   BCLR #$0,D0
000259DE <AmiBlitz3.ab2@9884>   EXG.l D0,A1
000259E0 <AmiBlitz3.ab2@9885> RTS
000259E6 <AmiBlitz3.ab2@9889>   MOVEA.l _execbase,A6
000259EC <AmiBlitz3.ab2@9890>   MOVEA.l ptr_userlibs,A2
000259EE <AmiBlitz3.ab2@9891>   MOVE.l (A2),D0
000259F0 <AmiBlitz3.ab2@9892>   CLR.l (A2)
000259F2 <AmiBlitz3.ab2@9893>   MOVEA.l D0,A2
000259F6 <AmiBlitz3.ab2@9896>     CMPA.w #$0,A2
000259FA <AmiBlitz3.ab2@9897>     BEQ.w free_userlib
000259FE <AmiBlitz3.ab2@9899>     MOVE.l $20(A2),D0
00025A02 <AmiBlitz3.ab2@9900>     BEQ.b JL_0_7360
00025A04 <AmiBlitz3.ab2@9901>       LSL.l #2,D0
00025A0A <AmiBlitz3.ab2@9902>       MOVE.l mempool,a0
00025A0E <AmiBlitz3.ab2@9903>       MOVEA.l $24(A2),A1
00025A12 <AmiBlitz3.ab2@9904>       JSR _FreePooled(A6)
00025A14 <AmiBlitz3.ab2@9907>     MOVEA.l A2,A1
00025A18 <AmiBlitz3.ab2@9908>     MOVE.l $6(A1),D0
00025A1E <AmiBlitz3.ab2@9909>     MOVE.l mempool,a0
00025A20 <AmiBlitz3.ab2@9910>     MOVEA.l (A2),A2
00025A26 <AmiBlitz3.ab2@9911>     MOVEA.l _execbase,A6
00025A2A <AmiBlitz3.ab2@9912>     JSR _FreePooled(A6)
00025A2E <AmiBlitz3.ab2@9913> BRA.w JL_0_7348
00025A32 <AmiBlitz3.ab2@9917>   BSR.w free_userlibs
00025A38 <AmiBlitz3.ab2@9918>   MOVEA.l _execbase,A6
00025A3E <AmiBlitz3.ab2@9919>   CLR.l libpointer
00025A44 <AmiBlitz3.ab2@9920>   MOVEA.l end_of_tokenlist,A0
00025A46 <AmiBlitz3.ab2@9921>   CLR.l (A0)
00025A4C <AmiBlitz3.ab2@9923>   MOVE.l size_acidlibs,D0
00025A50 <AmiBlitz3.ab2@9924>   BEQ.b JL_0_73A2
00025A56 <AmiBlitz3.ab2@9925>     MOVE.l ptr_acidlibs,D1
00025A5A <AmiBlitz3.ab2@9926>     BEQ.b JL_0_73A2
00025A60 <AmiBlitz3.ab2@9927>       CLR.l ptr_acidlibs
00025A62 <AmiBlitz3.ab2@9928>       MOVEA.l D1,A1
00025A68 <AmiBlitz3.ab2@9929>       MOVE.l mempool,a0
00025A6E <AmiBlitz3.ab2@9930>       MOVEA.l _execbase,A6
00025A72 <AmiBlitz3.ab2@9931>       JSR _FreePooled(A6)                                 ; free acidlibs
00025A78 <AmiBlitz3.ab2@9934>   MOVE.l size_deflibs,D0
00025A7C <AmiBlitz3.ab2@9935>   BEQ.b JL_0_73BE
00025A82 <AmiBlitz3.ab2@9936>     MOVE.l ptr_deflibs,D1
00025A86 <AmiBlitz3.ab2@9937>     BEQ.b JL_0_73BE
00025A8C <AmiBlitz3.ab2@9938>       CLR.l ptr_deflibs                                    ; d0: memorySize
00025A8E <AmiBlitz3.ab2@9939>       MOVEA.l D1,A1                                        ; a1: memory
00025A94 <AmiBlitz3.ab2@9940>       MOVE.l mempool,a0                                    ; a0: poolHeader
00025A9A <AmiBlitz3.ab2@9941>       MOVEA.l _execbase,A6
00025A9E <AmiBlitz3.ab2@9942>       JSR _FreePooled(A6)                                  ; free deflibs
00025AA0 <AmiBlitz3.ab2@9945> RTS
00025AA6 <AmiBlitz3.ab2@9949>   MOVEA.l currentmacroaddr,A0
00025AA8 <AmiBlitz3.ab2@9950>   MOVEA.l (A0),A2
00025AAA <AmiBlitz3.ab2@9951>   CLR.l (A0)
00025AB0 <AmiBlitz3.ab2@9952>   MOVEA.l _execbase,A6
00025AB4 <AmiBlitz3.ab2@9955>     CMPA.w #$0,A2
00025AB8 <AmiBlitz3.ab2@9956>     BEQ.w JL_0_73FA
00025ABA <AmiBlitz3.ab2@9957>     MOVEQ.l #$00,D0
00025ABE <AmiBlitz3.ab2@9958>     MOVE.w $8(A2),D0
00025AC2 <AmiBlitz3.ab2@9959>     BEQ.w JL_0_73E8
00025AC6 <AmiBlitz3.ab2@9960>     MOVEA.l $4(A2),A1
00025ACC <AmiBlitz3.ab2@9961>     MOVE.l mempool,a0
00025AD0 <AmiBlitz3.ab2@9962>     JSR _FreePooled(A6)
00025AD2 <AmiBlitz3.ab2@9965>     MOVEA.l A2,A1
00025AD4 <AmiBlitz3.ab2@9966>     MOVEA.l (A2),A2
00025AD6 <AmiBlitz3.ab2@9967>     MOVEQ.l #$00,D0
00025ADA <AmiBlitz3.ab2@9968>     MOVE.b $C(A1),D0
00025AE0 <AmiBlitz3.ab2@9969>     MOVE.l mempool2,a0
00025AE4 <AmiBlitz3.ab2@9970>     JSR _FreePooled(A6)
00025AE8 <AmiBlitz3.ab2@9971> BRA.w JL_0_73CE
00025AEA <AmiBlitz3.ab2@9974> RTS
00025AF0 <AmiBlitz3.ab2@9978>   MOVEA.l templabel,A2
00025AF6 <AmiBlitz3.ab2@9979>   CLR.l templabel
00025AF8 <AmiBlitz3.ab2@9980> RTS
00025AFE <AmiBlitz3.ab2@9983>   MOVEA.l _execbase,A6                                     ;??looks like dead code?
00025B02 <AmiBlitz3.ab2@9986>     CMPA.w #$0,A2
00025B06 <AmiBlitz3.ab2@9987>     BEQ.w JL_0_7426
00025B08 <AmiBlitz3.ab2@9988>     MOVEQ.l #$00,D0
00025B0C <AmiBlitz3.ab2@9989>     MOVE.b $E(A2),D0                                       ;labeltemp
00025B0E <AmiBlitz3.ab2@9990>     MOVEA.l A2,A1
00025B10 <AmiBlitz3.ab2@9991>     MOVEA.l (A2),A2
00025B16 <AmiBlitz3.ab2@9992>     MOVE.l mempool2,a0
00025B1A <AmiBlitz3.ab2@9994> BRA.w JL_0_740C
00025B1C <AmiBlitz3.ab2@9997> RTS
00025B22 <AmiBlitz3.ab2@10001>   MOVEA.l data1,A4
00025B28 <AmiBlitz3.ab2@10002>   CMPA.l data2at,A4
00025B2C <AmiBlitz3.ab2@10003>   BCC.w JL_0_7442
00025B2E <AmiBlitz3.ab2@10004>     MOVE.b D1,(A4)+
00025B34 <AmiBlitz3.ab2@10005>     MOVE.l A4,data1
00025B36 <AmiBlitz3.ab2@10006> RTS
00025B3E <AmiBlitz3.ab2@10009>   MOVE.w #$FFFF,dontwrite                                  ;move #-1, org source
00025B44 <AmiBlitz3.ab2@10010>   ADDQ.l #1,data1
00025B46 <AmiBlitz3.ab2@10011> RTS
00025B48 <AmiBlitz3.ab2@10015>   SWAP D1
00025B4C <AmiBlitz3.ab2@10016>   BSR.w pokedata1
00025B4E <AmiBlitz3.ab2@10017>   SWAP D1
00025B54 <AmiBlitz3.ab2@10020>   MOVEA.l data1,A4
00025B5A <AmiBlitz3.ab2@10021>   CMPA.l data2at,A4
00025B5E <AmiBlitz3.ab2@10022>    BCC.w JL_0_7474
00025B60 <AmiBlitz3.ab2@10023>   MOVE.w D1,(A4)+
00025B66 <AmiBlitz3.ab2@10024>   MOVE.l A4,data1
00025B68 <AmiBlitz3.ab2@10025> RTS
00025B70 <AmiBlitz3.ab2@10028>   MOVE.w #$FFFF,dontwrite
00025B76 <AmiBlitz3.ab2@10029>   ADDQ.l #2,data1
00025B78 <AmiBlitz3.ab2@10030> RTS
00025B7E <AmiBlitz3.ab2@10034>   MOVE.l data1,D3                                      ;write local string/type allocs
00025B80 <AmiBlitz3.ab2@10035>   MOVEQ.l #$00,D4
00025B84 <AmiBlitz3.ab2@10038>   CMPA.w #$0,A2
00025B88 <AmiBlitz3.ab2@10039>    BEQ.w JL_0_74CAc
00025B8C <AmiBlitz3.ab2@10040>   TST.w $6(A2)
00025B90 <AmiBlitz3.ab2@10041>    BNE.w JL_0_74C4c
00025B94 <AmiBlitz3.ab2@10042>   MOVEA.l $A(A2),A3
00025B9C <AmiBlitz3.ab2@10043>   CMPI.l #$100,$4(A3)
00025BA0 <AmiBlitz3.ab2@10044>    BCS.w JL_0_74C4c
00025BA4 <AmiBlitz3.ab2@10045>   MOVE.w $4(A2),D1
00025BA8 <AmiBlitz3.ab2@10046>    BSR.w pokedata1
00025BAC <AmiBlitz3.ab2@10047>   MOVE.w $8(A3),D1
00025BB0 <AmiBlitz3.ab2@10048>    BSR.w pokedata1
00025BB2 <AmiBlitz3.ab2@10049>   ADDQ.w #1,D4
00025BB4 <AmiBlitz3.ab2@10052>    MOVEA.l (A2),A2
00025BB8 <AmiBlitz3.ab2@10053> BRA.w JL_0_7492c
00025BBA <AmiBlitz3.ab2@10056>    TST.w D4
00025BBE <AmiBlitz3.ab2@10057>    BEQ.w JL_0_74E0
00025BC2 <AmiBlitz3.ab2@10058>   MOVE.w #$FF37,D1
00025BC6 <AmiBlitz3.ab2@10059>    BSR.w uselib
00025BCA <AmiBlitz3.ab2@10060>   MOVE.w #$FFFA,D1
00025BCE <AmiBlitz3.ab2@10061> BRA.w uselib
00025BD4 <AmiBlitz3.ab2@10069>   MOVEA.l varbase,A2                                       ;add alloc mem for types/strings global
00025BDA <AmiBlitz3.ab2@10072>   MOVE.l data1,D3
00025BDC <AmiBlitz3.ab2@10073>   MOVEQ.l #$00,D4
00025BE2 <AmiBlitz3.ab2@10074>   TST.b iserror
00025BE6 <AmiBlitz3.ab2@10075>   BEQ JL_0_7492
00025BE8 <AmiBlitz3.ab2@10076>   RTS
00025BEC <AmiBlitz3.ab2@10078>    CMPA.w #$0,A2
00025BF0 <AmiBlitz3.ab2@10079>    BEQ.w JL_0_74CA
00025BF4 <AmiBlitz3.ab2@10080>   TST.w $6(A2)
00025BF8 <AmiBlitz3.ab2@10081>    BNE.w JL_0_74C4
00025BFC <AmiBlitz3.ab2@10082>   MOVEA.l $A(A2),A3
00025C04 <AmiBlitz3.ab2@10083>   CMPI.l #$100,$4(A3)
00025C08 <AmiBlitz3.ab2@10084>    BCS.w JL_0_74C4
00025C0C <AmiBlitz3.ab2@10085>   MOVE.w $4(A2),D1
00025C10 <AmiBlitz3.ab2@10086>    BSR.w pokedata1
00025C14 <AmiBlitz3.ab2@10087>   MOVE.w $8(A3),D1
00025C18 <AmiBlitz3.ab2@10088>    BSR.w pokedata1
00025C1A <AmiBlitz3.ab2@10089>   ADDQ.w #1,D4
00025C1C <AmiBlitz3.ab2@10092>   MOVEA.l (A2),A2
00025C20 <AmiBlitz3.ab2@10093> BRA.w JL_0_7492
00025C26 <AmiBlitz3.ab2@10097>   MOVEA.l sharebase,A2
00025C2A <AmiBlitz3.ab2@10100>   CMPA.w #$0,A2
00025C2E <AmiBlitz3.ab2@10101>    BEQ.w JL_0_74CAb
00025C32 <AmiBlitz3.ab2@10103>   TST.w $6(A2)
00025C36 <AmiBlitz3.ab2@10104>    BNE.w JL_0_74C4b
00025C3A <AmiBlitz3.ab2@10105>   MOVEA.l $A(A2),A3
00025C42 <AmiBlitz3.ab2@10106>   CMPI.l #$100,$4(A3)
00025C46 <AmiBlitz3.ab2@10107>    BCS.w JL_0_74C4b
00025C4A <AmiBlitz3.ab2@10108>   MOVE.w $4(A2),D1
00025C4E <AmiBlitz3.ab2@10109>    BSR.w pokedata1
00025C52 <AmiBlitz3.ab2@10110>   MOVE.w $8(A3),D1
00025C56 <AmiBlitz3.ab2@10111>    BSR.w pokedata1
00025C58 <AmiBlitz3.ab2@10112>   ADDQ.w #1,D4
00025C5A <AmiBlitz3.ab2@10115>   MOVEA.l (A2),A2
00025C5E <AmiBlitz3.ab2@10116> BRA.w JL_0_7492b
00025C60 <AmiBlitz3.ab2@10119>    TST.w D4
00025C64 <AmiBlitz3.ab2@10120>    BEQ.w JL_0_74E0
00025C68 <AmiBlitz3.ab2@10121>   MOVE.w #$FF37,D1
00025C6C <AmiBlitz3.ab2@10122>    BSR.w uselib                                            ;use statics lib
00025C70 <AmiBlitz3.ab2@10123>   MOVE.w #$FFFA,D1                                         ;use memlib
00025C74 <AmiBlitz3.ab2@10124> BRA.w uselib
00025C76 <AmiBlitz3.ab2@10127> RTS
00025C7C <AmiBlitz3.ab2@10131>   MOVE.w numtoa2,D1
00025C80 <AmiBlitz3.ab2@10132>    BSR.w writeword
00025C84 <AmiBlitz3.ab2@10133>    BSR.w addoff
00025C86 <AmiBlitz3.ab2@10134>   MOVE.l D3,D1
00025C8A <AmiBlitz3.ab2@10135>    BSR.w writelong
00025C8C <AmiBlitz3.ab2@10136>   SUBQ.w #1,D4
00025C92 <AmiBlitz3.ab2@10137>   MOVE.w D4,endarray+2
00025C98 <AmiBlitz3.ab2@10138>   MOVE.l endarray,D1
00025C9C <AmiBlitz3.ab2@10139> BRA.w writelong
00025C9E <AmiBlitz3.ab2@10143>   MOVE.l D3,-(A7)
00025CA4 <AmiBlitz3.ab2@10146>   MOVEA.l _dosbase,A6
00025CA8 <AmiBlitz3.ab2@10147>   JSR _Write(a6)
00025CAA <AmiBlitz3.ab2@10149>   CMP.l (A7)+,D0
00025CAE <AmiBlitz3.ab2@10150>    BNE.w JL_0_7516
00025CB0 <AmiBlitz3.ab2@10151> RTS
00025CB2 <AmiBlitz3.ab2@10154>   MOVE.l D7,D1
00025CB8 <AmiBlitz3.ab2@10156>   MOVEA.l _dosbase,A6
00025CBC <AmiBlitz3.ab2@10157>   JSR _Close(a6)
00025CC2 <AmiBlitz3.ab2@10160> JMP error_create_exe
00025CC8 <AmiBlitz3.ab2@10169>   MOVE.l A7,errstack
00025CCC <AmiBlitz3.ab2@10170>   MOVEM.l d2-d7/a2-a6,-(a7)
00025CD6 <AmiBlitz3.ab2@10171>   MOVE.l #AL_0_7790,errcont
00025CDC <AmiBlitz3.ab2@10172>    JSR call_setpointerbusy
00025CE4 <AmiBlitz3.ab2@10173>   MOVE.w #$FFFF,anyerrs
00025CEE <AmiBlitz3.ab2@10174>   CMP.l #-1,chipstart
00025CF2 <AmiBlitz3.ab2@10175>   BEQ 'l01
00025CF8 <AmiBlitz3.ab2@10176>   MOVE.l chipend,d1
00025CFA <AmiBlitz3.ab2@10177>   ADDQ.l #3,d1
00025D00 <AmiBlitz3.ab2@10178>   AND.l #$fffffffc,d1                                      ;bug
00025D06 <AmiBlitz3.ab2@10179>   MOVE.l d1,chipend
00025D08 <AmiBlitz3.ab2@10180>   MOVE.l d1,a1
00025D0E <AmiBlitz3.ab2@10181>   MOVE.l chipstart,a0
00025D10 <AmiBlitz3.ab2@10182>   MOVE.l a1,d1
00025D12 <AmiBlitz3.ab2@10183>   SUB.l a0,d1
00025D18 <AmiBlitz3.ab2@10184>   MOVE.l d1,chipsize
00025D22 <AmiBlitz3.ab2@10187>   CMP.l #-1,bssstart
00025D26 <AmiBlitz3.ab2@10188>   BEQ 'l11
00025D2C <AmiBlitz3.ab2@10189>   MOVE.l realbssend,a1
00025D32 <AmiBlitz3.ab2@10190>   MOVE.l bssstart,a0
00025D34 <AmiBlitz3.ab2@10191>   MOVE.l a1,d1
00025D36 <AmiBlitz3.ab2@10192>   SUB.l a0,d1
00025D3C <AmiBlitz3.ab2@10193>   MOVE.l d1,bsssize
00025D40 <AmiBlitz3.ab2@10194>   BEQ 'l11
00025D42 <AmiBlitz3.ab2@10197>   TST.b (a0)+
00025D46 <AmiBlitz3.ab2@10198>   BEQ 'l31
00025D4C <AmiBlitz3.ab2@10199>   TST.b debugmode
00025D50 <AmiBlitz3.ab2@10200>   BEQ 'l1
00025D56 <AmiBlitz3.ab2@10201>   TST.b exdebug
00025D5A <AmiBlitz3.ab2@10202>   BNE 'l31
00025D60 <AmiBlitz3.ab2@10205>   MOVE.l #nodata,-(a7)
00025D66 <AmiBlitz3.ab2@10206> JMP handle_compileerror
00025D68 <AmiBlitz3.ab2@10209>   CMP.l a0,a1
00025D6C <AmiBlitz3.ab2@10210>   BGT 'l32
00025D72 <AmiBlitz3.ab2@10211>   MOVE.l bssend,d1
00025D74 <AmiBlitz3.ab2@10212>   ADDQ.l #3,d1
00025D7A <AmiBlitz3.ab2@10213>   AND.l #$fffffffc,d1                                      ;bug
00025D80 <AmiBlitz3.ab2@10214>   MOVE.l d1,bssend
00025D82 <AmiBlitz3.ab2@10215>   MOVE.l d1,a1
00025D88 <AmiBlitz3.ab2@10216>   MOVE.l bssstart,a0
00025D8A <AmiBlitz3.ab2@10217>   MOVE.l a1,d1
00025D8C <AmiBlitz3.ab2@10218>   SUB.l a0,d1
00025D92 <AmiBlitz3.ab2@10219>   MOVE.l d1,bsssize
00025D96 <AmiBlitz3.ab2@10222>   MOVEM.l d5-d7/d3,-(a7)
00025D9C <AmiBlitz3.ab2@10223>   MOVE.w dontwrite,D1
00025DA0 <AmiBlitz3.ab2@10224>   BNE.w JL_0_757C
00025DA6 <AmiBlitz3.ab2@10225>   MOVE.l chipsize,d5
00025DAC <AmiBlitz3.ab2@10226>   MOVE.l bsssize,d3
00025DB2 <AmiBlitz3.ab2@10227>   MOVE.l chipstart,d7
00025DB8 <AmiBlitz3.ab2@10228>   MOVE.l bssstart,d6
00025DBE <AmiBlitz3.ab2@10229>   MOVEA.l hunkoffsetbase,A2
00025DC4 <AmiBlitz3.ab2@10230>   MOVEA.l destbufferstart,A1
00025DC6 <AmiBlitz3.ab2@10231>   MOVE.l A1,D2
00025DCC <AmiBlitz3.ab2@10232>   ADD.l noinits,D2
00025DD2 <AmiBlitz3.ab2@10233>   CLR.l hunkoffsetnum
00025DD6 <AmiBlitz3.ab2@10236>   CMPA.w #$0,A2
00025DDA <AmiBlitz3.ab2@10237>    BEQ.w JL_0_757C
00025DDE <AmiBlitz3.ab2@10238>   MOVE.l $4(A2),D0
00025DE2 <AmiBlitz3.ab2@10239>    LEA $0(a1,d0.l),a0
00025DE4 <AmiBlitz3.ab2@10240>    MOVE.l (a0),d1
00025DE6 <AmiBlitz3.ab2@10241>   TST.l d1
00025DEA <AmiBlitz3.ab2@10242>    BMI.w 'lm1
00025DF2 <AmiBlitz3.ab2@10243>   MOVE.b #0,newhunk
00025DFC <AmiBlitz3.ab2@10244>   CMP.l #-1,chipstart
00025E00 <AmiBlitz3.ab2@10245>   BEQ 'l10
00025E06 <AmiBlitz3.ab2@10246>   CMP.l chipstart,d1
00025E0A <AmiBlitz3.ab2@10247>   BLT 'l10
00025E12 <AmiBlitz3.ab2@10248>   MOVE.b #1,newhunk
00025E18 <AmiBlitz3.ab2@10249>   CMP.l chipend,d1
00025E1C <AmiBlitz3.ab2@10250>   BGE 'l110
00025E1E <AmiBlitz3.ab2@10251>   SUB.l d7,(a0)
00025E26 <AmiBlitz3.ab2@10252>   ADD.l #$80000000,4(a2)
00025E2A <AmiBlitz3.ab2@10253> BRA JL_0_7576
00025E2E <AmiBlitz3.ab2@10256>   SUB.l d5,0(a0)
00025E38 <AmiBlitz3.ab2@10259>   CMP.l #-1,bssstart
00025E3C <AmiBlitz3.ab2@10260>     BEQ 'l11
00025E42 <AmiBlitz3.ab2@10261>   CMP.l bssstart,d1
00025E46 <AmiBlitz3.ab2@10262>   BLT 'l11
00025E4C <AmiBlitz3.ab2@10263>   CMP.l bssend,d1
00025E50 <AmiBlitz3.ab2@10264>   BGE 'l111
00025E56 <AmiBlitz3.ab2@10265>   TST.b newhunk
00025E5A <AmiBlitz3.ab2@10266>   BEQ 'ln1
00025E5C <AmiBlitz3.ab2@10267>   ADD.l d5,(a0)
00025E5E <AmiBlitz3.ab2@10270>   SUB.l d6,(a0)
00025E66 <AmiBlitz3.ab2@10271>   ADD.l #$40000000,4(a2)
00025E6A <AmiBlitz3.ab2@10272> BRA JL_0_7576
00025E6E <AmiBlitz3.ab2@10275>   SUB.l d3,0(a0)
00025E70 <AmiBlitz3.ab2@10278>   SUB.l D2,(A0)
00025E76 <AmiBlitz3.ab2@10281>   ADDQ.l #1,hunkoffsetnum
00025E78 <AmiBlitz3.ab2@10284>    MOVEA.l (A2),A2
00025E7C <AmiBlitz3.ab2@10285> BRA.w JL_0_755E
00025E80 <AmiBlitz3.ab2@10289>   MOVEM.l (a7)+,d5-d7/d3
00025E86 <AmiBlitz3.ab2@10290>   MOVE.l ptr_newexefilename,D1
00025E8C <AmiBlitz3.ab2@10291>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00025E92 <AmiBlitz3.ab2@10292>   MOVEA.l _dosbase,A6
00025E96 <AmiBlitz3.ab2@10293>    JSR _Open(A6)
00025E98 <AmiBlitz3.ab2@10294>   MOVE.l D0,D7
00025E9C <AmiBlitz3.ab2@10295>    BEQ.w execerr
00025EA2 <AmiBlitz3.ab2@10296>   MOVE.l objlen,D0
00025EA8 <AmiBlitz3.ab2@10297>   SUB.l #moremem,d0
00025EAE <AmiBlitz3.ab2@10298>   SUB.l noinits,D0
00025EB8 <AmiBlitz3.ab2@10299>   CMP.l #-1,bssstart
00025EBC <AmiBlitz3.ab2@10300>   BEQ 'l60
00025EC2 <AmiBlitz3.ab2@10301>   SUB.l bsssize,d0
00025EC8 <AmiBlitz3.ab2@10302>   SUB.l chipsize,d0
00025ECC <AmiBlitz3.ab2@10303> BRA.s 'l61
00025ED6 <AmiBlitz3.ab2@10306>   CMP.l #-1,chipstart
00025EDA <AmiBlitz3.ab2@10307>   BEQ 'l61
00025EE0 <AmiBlitz3.ab2@10308>   SUB.l bsssize,d0
00025EE6 <AmiBlitz3.ab2@10309>   SUB.l chipsize,d0
00025EE8 <AmiBlitz3.ab2@10312>   ADDQ.l #3,D0
00025EEA <AmiBlitz3.ab2@10313>   LSR.l #2,D0
00025EF0 <AmiBlitz3.ab2@10314>   MOVE.l D0,tstsize1
00025EF6 <AmiBlitz3.ab2@10315>   MOVE.l D0,tstsize2
00025EF8 <AmiBlitz3.ab2@10316>   MOVE.l D7,D1
00025EFE <AmiBlitz3.ab2@10317>   MOVE.l #tsthead,D2                                      ;hunkbegin
00025F00 <AmiBlitz3.ab2@10318>   MOVEQ.l #$20,D3
00025F0A <AmiBlitz3.ab2@10319>   CMP.l #-1,bssstart
00025F0E <AmiBlitz3.ab2@10320>   BEQ 'lb1
00025F18 <AmiBlitz3.ab2@10321>   CMP.l #-1,chipstart
00025F1C <AmiBlitz3.ab2@10322>   BEQ 'lb1
00025F26 <AmiBlitz3.ab2@10323>   MOVE.l #1,bssnum
00025F30 <AmiBlitz3.ab2@10324>   MOVE.l #2,chipnum
00025F32 <AmiBlitz3.ab2@10325>   MOVEQ.l #$28,D3
00025F38 <AmiBlitz3.ab2@10326>   MOVE.l bsssize,d2
00025F3A <AmiBlitz3.ab2@10327>   ADDQ.l #3,d2
00025F3C <AmiBlitz3.ab2@10328>   ASR.l #2,d2
00025F42 <AmiBlitz3.ab2@10329>   MOVE.l d2,hunkend+8
00025F48 <AmiBlitz3.ab2@10330>   MOVE.l d2,bsssize3
00025F4E <AmiBlitz3.ab2@10331>   MOVE.l chipsize,d2
00025F50 <AmiBlitz3.ab2@10332>   ADDQ.l #3,d2
00025F52 <AmiBlitz3.ab2@10333>   ASR.l #2,d2
00025F58 <AmiBlitz3.ab2@10334>   MOVE.l d2,chipsize2
00025F62 <AmiBlitz3.ab2@10335>   ADD.l #$40000000,chipsize2
00025F68 <AmiBlitz3.ab2@10336>   MOVE.l d2,hunkend2+8
00025F6E <AmiBlitz3.ab2@10337>   MOVE.l D0,tstsize1c
00025F74 <AmiBlitz3.ab2@10338>   MOVE.l D0,tstsize2c
00025F7A <AmiBlitz3.ab2@10339>   MOVE.l #hunkbegin2,d2
00025F7E <AmiBlitz3.ab2@10340> BRA 'l100
00025F88 <AmiBlitz3.ab2@10343>   CMP.l #-1,bssstart
00025F8C <AmiBlitz3.ab2@10344>   BEQ 'l10
00025F96 <AmiBlitz3.ab2@10345>   MOVE.l #1,bssnum
00025F98 <AmiBlitz3.ab2@10346>   MOVEQ.l #$24,D3
00025F9E <AmiBlitz3.ab2@10347>   MOVE.l bsssize,d2
00025FA0 <AmiBlitz3.ab2@10348>   ADDQ.l #3,d2
00025FA2 <AmiBlitz3.ab2@10349>   ASR.l #2,d2
00025FA8 <AmiBlitz3.ab2@10350>   MOVE.l d2,hunkend+8
00025FAE <AmiBlitz3.ab2@10351>   MOVE.l d2,bsssize2
00025FB4 <AmiBlitz3.ab2@10352>   MOVE.l D0,tstsize1b
00025FBA <AmiBlitz3.ab2@10353>   MOVE.l D0,tstsize2b
00025FC0 <AmiBlitz3.ab2@10354>   MOVE.l #hunkbegin,d2
00025FCA <AmiBlitz3.ab2@10357>   CMP.l #-1,chipstart
00025FCE <AmiBlitz3.ab2@10358>   BEQ 'l100
00025FD8 <AmiBlitz3.ab2@10359>   MOVE.l #1,chipnum
00025FDA <AmiBlitz3.ab2@10360>   MOVEQ.l #$24,D3
00025FE0 <AmiBlitz3.ab2@10361>   MOVE.l chipsize,d2
00025FE2 <AmiBlitz3.ab2@10362>   ADDQ.l #3,d2
00025FE4 <AmiBlitz3.ab2@10363>   ASR.l #2,d2
00025FEA <AmiBlitz3.ab2@10364>   MOVE.l d2,hunkend2+8
00025FF0 <AmiBlitz3.ab2@10365>   MOVE.l d2,bsssize2
00025FFA <AmiBlitz3.ab2@10366>   ADD.l #$40000000,bsssize2
00026000 <AmiBlitz3.ab2@10367>   MOVE.l D0,tstsize1b
00026006 <AmiBlitz3.ab2@10368>   MOVE.l D0,tstsize2b
0002600C <AmiBlitz3.ab2@10369>   MOVE.l #hunkbegin,d2
00026010 <AmiBlitz3.ab2@10372>    BSR.w mywrite
00026016 <AmiBlitz3.ab2@10373>   MOVE.l destbufferstart,D2
0002601C <AmiBlitz3.ab2@10374>   ADD.l noinits,D2
00026022 <AmiBlitz3.ab2@10375>   MOVE.l objlen,D3
00026028 <AmiBlitz3.ab2@10376>   SUB.l #moremem,d3
0002602E <AmiBlitz3.ab2@10377>   SUB.l noinits,D3
00026038 <AmiBlitz3.ab2@10378>   CMP.l #-1,bssstart
0002603C <AmiBlitz3.ab2@10379>   BNE 'l40
00026046 <AmiBlitz3.ab2@10380>   CMP.l #-1,chipstart
0002604A <AmiBlitz3.ab2@10381>   BNE 'l40
0002604E <AmiBlitz3.ab2@10382> BRA 'l41
00026054 <AmiBlitz3.ab2@10385>   MOVE.l codeend,d1
00026056 <AmiBlitz3.ab2@10386>     SUB.l d2,d1
00026058 <AmiBlitz3.ab2@10387>     MOVE.l d1,d3
0002605E <AmiBlitz3.ab2@10388>   SUB.l bsssize,d3
00026064 <AmiBlitz3.ab2@10389>   SUB.l chipsize,d3
00026066 <AmiBlitz3.ab2@10390>   MOVE.l D7,D1
0002606A <AmiBlitz3.ab2@10391>   BSR.w mywrite
00026070 <AmiBlitz3.ab2@10392>   MOVE.l objlen,D3
00026076 <AmiBlitz3.ab2@10393>   SUB.l #moremem,d3
0002607C <AmiBlitz3.ab2@10394>   SUB.l noinits,D3
0002607E <AmiBlitz3.ab2@10395>   MOVE.l d3,d1
00026084 <AmiBlitz3.ab2@10396>   MOVE.l destbufferstart,D2
0002608A <AmiBlitz3.ab2@10397>   ADD.l noinits,D2
0002608C <AmiBlitz3.ab2@10398>   ADD.l d2,d1
00026092 <AmiBlitz3.ab2@10399>   SUB.l codeend,d1
00026094 <AmiBlitz3.ab2@10400>   MOVE.l d1,d3
0002609A <AmiBlitz3.ab2@10401>   MOVE.l codeend,d2
0002609C <AmiBlitz3.ab2@10404>   MOVE.l d2,d1
0002609E <AmiBlitz3.ab2@10405>   ADD.l d3,d1
000260A0 <AmiBlitz3.ab2@10406>   ADDQ.l #3,D1
000260A6 <AmiBlitz3.ab2@10407>   ANDI.l #$FFFFFFFC,D1
000260A8 <AmiBlitz3.ab2@10408>   SUB.l d2,d1
000260AA <AmiBlitz3.ab2@10409>   MOVE.l d1,d3
000260AC <AmiBlitz3.ab2@10410>   MOVE.l D7,D1
000260B0 <AmiBlitz3.ab2@10411>    BSR.w mywrite
000260BA <AmiBlitz3.ab2@10412>   MOVE.l hunkoffsetcounter,tstsize3
000260BE <AmiBlitz3.ab2@10413>    BEQ.w JL_0_7646
000260C0 <AmiBlitz3.ab2@10414>   MOVE.l D7,D1
000260C6 <AmiBlitz3.ab2@10415>   MOVE.l #tstend,D2
000260C8 <AmiBlitz3.ab2@10416>   MOVEQ.l #$04,D3
000260CC <AmiBlitz3.ab2@10417>    BSR.w mywrite
000260D2 <AmiBlitz3.ab2@10418>    MOVEA.l _execbase,A6
000260D8 <AmiBlitz3.ab2@10419>    MOVE.l hunkoffsetcounter,d0
000260DA <AmiBlitz3.ab2@10420>    ASL.l #2,d0
000260E0 <AmiBlitz3.ab2@10421>    ADD.l #12,d0
000260E2 <AmiBlitz3.ab2@10422>    MOVEQ #0,d1
000260E6 <AmiBlitz3.ab2@10423>    JSR _AllocMem(a6)
000260E8 <AmiBlitz3.ab2@10424>    TST.l d0
000260EC <AmiBlitz3.ab2@10425>    BEQ nomem
000260F2 <AmiBlitz3.ab2@10426>    MOVE.l noinits,D4
000260F4 <AmiBlitz3.ab2@10427>    MOVE.l d5,-(a7)
000260F6 <AmiBlitz3.ab2@10428>    MOVE.l d0,d5
000260F8 <AmiBlitz3.ab2@10429>    MOVE.l d0,a1
000260FE <AmiBlitz3.ab2@10430>    MOVEA.l hunkoffsetbase,A2
00026106 <AmiBlitz3.ab2@10431>    MOVE.b #0,newhunk
0002610A <AmiBlitz3.ab2@10434>   CMPA.w #$0,A2
0002610E <AmiBlitz3.ab2@10435>    BEQ.w savehunk
00026114 <AmiBlitz3.ab2@10436>   MOVE.l destbufferstart,D2
0002611A <AmiBlitz3.ab2@10437>   ADD.l noinits,D2
0002611E <AmiBlitz3.ab2@10438>   MOVE.l  $4(A2),d1
00026122 <AmiBlitz3.ab2@10439>   BTST #31,d1
00026126 <AmiBlitz3.ab2@10440>   BEQ 'lh1
0002612E <AmiBlitz3.ab2@10441>   MOVE.b #1,newhunk
00026132 <AmiBlitz3.ab2@10442> BRA 'lh3
00026136 <AmiBlitz3.ab2@10445>   BTST #30,d1
0002613A <AmiBlitz3.ab2@10446>   BEQ 'lh2
00026142 <AmiBlitz3.ab2@10447>   MOVE.b #1,newhunk
00026146 <AmiBlitz3.ab2@10448> BRA 'lh3
00026148 <AmiBlitz3.ab2@10451>   ADD.l d1,d2
0002614E <AmiBlitz3.ab2@10452>   CMP.l chipend,d2
00026152 <AmiBlitz3.ab2@10453>   BLT 'l100
00026158 <AmiBlitz3.ab2@10454>   SUB.l chipsize,d1
0002615E <AmiBlitz3.ab2@10457>   CMP.l bssend,d2
00026162 <AmiBlitz3.ab2@10458>   BLT 'l101
00026168 <AmiBlitz3.ab2@10459>   SUB.l bsssize,d1
0002616A <AmiBlitz3.ab2@10462>   MOVE.l d1,(a1)
0002616C <AmiBlitz3.ab2@10463>   SUB.l D4,(A1)+
0002616E <AmiBlitz3.ab2@10466>   MOVEA.l (A2),A2
00026172 <AmiBlitz3.ab2@10467> BRA.w menu_createresidentfile__oloopb
00026174 <AmiBlitz3.ab2@10471>   MOVE.l D7,D1
0002617A <AmiBlitz3.ab2@10472>   MOVEA.l _dosbase,A6
00026184 <AmiBlitz3.ab2@10473>   MOVE.l hunkoffsetnum,tstsize3
00026188 <AmiBlitz3.ab2@10474>   BEQ 'ln1
0002618E <AmiBlitz3.ab2@10475>   MOVE.l #tstend+4,d2
00026190 <AmiBlitz3.ab2@10476>     MOVEQ #8,d3
00026194 <AmiBlitz3.ab2@10477>    JSR _Write(A6)
00026196 <AmiBlitz3.ab2@10478>   MOVE.l d7,d1
0002619C <AmiBlitz3.ab2@10479>   MOVE.l hunkoffsetnum,d3
0002619E <AmiBlitz3.ab2@10480>   ASL.l #2,d3
000261A0 <AmiBlitz3.ab2@10481>   MOVE.l d5,D2
000261A4 <AmiBlitz3.ab2@10482>   JSR _Write(a6)
000261AA <AmiBlitz3.ab2@10485>   TST.b newhunk
000261AE <AmiBlitz3.ab2@10486>   BEQ 'l10
000261B4 <AmiBlitz3.ab2@10487>   MOVEA.l hunkoffsetbase,A2
000261B6 <AmiBlitz3.ab2@10488>   MOVE.l d5,a0
000261B8 <AmiBlitz3.ab2@10489>   ADDQ #8,a0
000261C0 <AmiBlitz3.ab2@10490>   MOVE.l bssnum,-4(a0)
000261C2 <AmiBlitz3.ab2@10491>   MOVEQ #0,d6
000261C6 <AmiBlitz3.ab2@10494>   CMPA.w #$0,A2
000261CA <AmiBlitz3.ab2@10495>    BEQ.w 'lh3
000261D0 <AmiBlitz3.ab2@10496>   MOVE.l destbufferstart,D2
000261D6 <AmiBlitz3.ab2@10497>   ADD.l noinits,D2
000261DA <AmiBlitz3.ab2@10498>   MOVE.l  $4(A2),d1
000261DE <AmiBlitz3.ab2@10499>   BTST #30,d1
000261E2 <AmiBlitz3.ab2@10500>   BEQ 'lh1
000261E6 <AmiBlitz3.ab2@10501>   BCLR #30,d1
000261E8 <AmiBlitz3.ab2@10502>   MOVE.l d1,(a0)
000261EA <AmiBlitz3.ab2@10503>   SUB.l D4,(A0)+
000261EC <AmiBlitz3.ab2@10504>   ADDQ.l #1,d6
000261EE <AmiBlitz3.ab2@10507>   MOVE.l (a2),a2
000261F2 <AmiBlitz3.ab2@10508> BRA 'lh2
000261F4 <AmiBlitz3.ab2@10511>   TST.l d6
000261F8 <AmiBlitz3.ab2@10512>     BEQ 'lh10
000261FA <AmiBlitz3.ab2@10513>     MOVE.l d5,a0
000261FC <AmiBlitz3.ab2@10514>     MOVE.l d6,(a0)
000261FE <AmiBlitz3.ab2@10515>     MOVE.l d7,d1
00026200 <AmiBlitz3.ab2@10516>     MOVE.l d5,d2
00026202 <AmiBlitz3.ab2@10517>     MOVE.l d6,d3
00026204 <AmiBlitz3.ab2@10518>     ASL.l #2,d3
00026206 <AmiBlitz3.ab2@10519>     ADDQ.l #8,d3
0002620A <AmiBlitz3.ab2@10520>     BSR.w mywrite
00026210 <AmiBlitz3.ab2@10523>   MOVEA.l hunkoffsetbase,A2
00026212 <AmiBlitz3.ab2@10524>   MOVE.l d5,a0
00026214 <AmiBlitz3.ab2@10525>   ADDQ #8,a0
0002621C <AmiBlitz3.ab2@10526>   MOVE.l chipnum,-4(a0)
0002621E <AmiBlitz3.ab2@10527>   MOVEQ #0,d6
00026222 <AmiBlitz3.ab2@10530>   CMPA.w #$0,A2
00026226 <AmiBlitz3.ab2@10531>    BEQ.w 'lh30
0002622C <AmiBlitz3.ab2@10532>   MOVE.l destbufferstart,D2
00026232 <AmiBlitz3.ab2@10533>   ADD.l noinits,D2
00026236 <AmiBlitz3.ab2@10534>   MOVE.l  $4(A2),d1
0002623A <AmiBlitz3.ab2@10535>   BTST #31,d1
0002623E <AmiBlitz3.ab2@10536>   BEQ 'lh11
00026242 <AmiBlitz3.ab2@10537>   BCLR #31,d1
00026244 <AmiBlitz3.ab2@10538>   MOVE.l d1,(a0)
00026246 <AmiBlitz3.ab2@10539>   SUB.l D4,(A0)+
00026248 <AmiBlitz3.ab2@10540>   ADDQ.l #1,d6
0002624A <AmiBlitz3.ab2@10543>   MOVE.l (a2),a2
0002624E <AmiBlitz3.ab2@10544> BRA 'lh20
00026250 <AmiBlitz3.ab2@10547>   TST.l d6
00026254 <AmiBlitz3.ab2@10548>     BEQ 'l10
00026256 <AmiBlitz3.ab2@10549>     MOVE.l d5,a0
00026258 <AmiBlitz3.ab2@10550>     MOVE.l d6,(a0)
0002625A <AmiBlitz3.ab2@10551>     MOVE.l d7,d1
0002625C <AmiBlitz3.ab2@10552>     MOVE.l d5,d2
0002625E <AmiBlitz3.ab2@10553>     MOVE.l d6,d3
00026260 <AmiBlitz3.ab2@10554>     ASL.l #2,d3
00026262 <AmiBlitz3.ab2@10555>     ADDQ.l #8,d3
00026266 <AmiBlitz3.ab2@10556>     BSR.w mywrite
0002626C <AmiBlitz3.ab2@10560>    MOVEA.l _execbase,A6
00026272 <AmiBlitz3.ab2@10561>    MOVE.l hunkoffsetcounter,d0
00026274 <AmiBlitz3.ab2@10562>    ASL.l #2,d0
0002627A <AmiBlitz3.ab2@10563>    ADD.l #12,d0
0002627C <AmiBlitz3.ab2@10564>    MOVE.l d5,a1
00026280 <AmiBlitz3.ab2@10565>    JSR _FreeMem(a6)
00026286 <AmiBlitz3.ab2@10566>    MOVEA.l _dosbase,A6
00026288 <AmiBlitz3.ab2@10567>    MOVE.l (a7)+,d5
0002628C <AmiBlitz3.ab2@10568> BRA JL_0_7632
00026292 <AmiBlitz3.ab2@10572>   MOVEA.l hunkoffsetbase,A2
00026298 <AmiBlitz3.ab2@10573>   MOVE.l noinits,D4
0002629C <AmiBlitz3.ab2@10576>   CMPA.w #$0,A2                                            ;write hunkoffsets
000262A0 <AmiBlitz3.ab2@10577>   BEQ.w JL_0_7632
000262A4 <AmiBlitz3.ab2@10578>   LEA $4(A2),A1
000262A6 <AmiBlitz3.ab2@10579>   SUB.l D4,(A1)
000262A8 <AmiBlitz3.ab2@10580>   MOVE.l D7,D1
000262AA <AmiBlitz3.ab2@10581>   MOVE.l A1,D2
000262AC <AmiBlitz3.ab2@10582>   MOVEQ.l #$04,D3
000262B0 <AmiBlitz3.ab2@10583>   BSR.w mywrite
000262B4 <AmiBlitz3.ab2@10584>   ADD.l D4,$4(A2)
000262B6 <AmiBlitz3.ab2@10585>   MOVEA.l (A2),A2
000262BA <AmiBlitz3.ab2@10586> BRA.w JL_0_7610
000262C0 <AmiBlitz3.ab2@10589>   CLR.l tstsize3
000262C2 <AmiBlitz3.ab2@10590>   MOVE.l D7,D1
000262C8 <AmiBlitz3.ab2@10591>   MOVE.l #tstsize3,D2
000262CA <AmiBlitz3.ab2@10592>   MOVEQ.l #$04,D3
000262CE <AmiBlitz3.ab2@10593>    BSR.w mywrite
000262D6 <AmiBlitz3.ab2@10596>   BTST #$7,link_debuginfo
000262DA <AmiBlitz3.ab2@10597>    BEQ.w JL_0_7706
000262E0 <AmiBlitz3.ab2@10598>   MOVE.l #sysdebug,D2                                      ;debughunks
000262E2 <AmiBlitz3.ab2@10599>   MOVEQ.l #$04,D3
000262E4 <AmiBlitz3.ab2@10600>   MOVE.l D7,D1
000262E8 <AmiBlitz3.ab2@10601>    BSR.w mywrite
000262EE <AmiBlitz3.ab2@10602>   MOVEA.l labelbase,A2
000262F2 <AmiBlitz3.ab2@10605>   CMPA.w #$0,A2
000262F6 <AmiBlitz3.ab2@10606>    BEQ.w JL_0_76F8
000262FC <AmiBlitz3.ab2@10607>   BTST #$0,$7(A2)
00026300 <AmiBlitz3.ab2@10608>    BEQ.w JL_0_7682
00026308 <AmiBlitz3.ab2@10609>   CMPI.l #$1,$4(A2)
0002630C <AmiBlitz3.ab2@10611>   BRA.w JL_0_76F2                                            ;only addr labels
0002630E <AmiBlitz3.ab2@10613>   MOVEQ.l #$00,D4
00026312 <AmiBlitz3.ab2@10614>   MOVE.b $12(A2),D4
00026316 <AmiBlitz3.ab2@10615>   SUBI.w #$13,D4
00026318 <AmiBlitz3.ab2@10616>   ADDQ.w #2,D4
0002631C <AmiBlitz3.ab2@10617>   ANDI.w #$FFFC,D4
0002631E <AmiBlitz3.ab2@10618>   MOVE.l D4,D5
00026320 <AmiBlitz3.ab2@10619>   LSR.w #2,D5
00026326 <AmiBlitz3.ab2@10620>   MOVE.l D5,temp1
00026328 <AmiBlitz3.ab2@10621>   LSL.w #2,D5
0002632E <AmiBlitz3.ab2@10622>   MOVE.l #temp1,a1
00026334 <AmiBlitz3.ab2@10624>   LEA debugstore,a0
00026336 <AmiBlitz3.ab2@10625>   MOVE.l (a1),(a0)+
00026338 <AmiBlitz3.ab2@10626>   MOVEQ.l #$04,D3
0002633C <AmiBlitz3.ab2@10629>   LEA $13(A2),A1
0002633E <AmiBlitz3.ab2@10630>   MOVE.l d4,d1
00026340 <AmiBlitz3.ab2@10631>   SUBQ.l #1,d1
00026342 <AmiBlitz3.ab2@10634>     MOVE.b (a1)+,d0
00026346 <AmiBlitz3.ab2@10635>     BEQ 'l21
0002634A <AmiBlitz3.ab2@10636>     CMP.b #"'",d0                                            ; ' does reassembler/assembler not like, so replace
0002634E <AmiBlitz3.ab2@10637>     BNE 'ok
00026352 <AmiBlitz3.ab2@10638>     MOVE.b #"_",d0
00026354 <AmiBlitz3.ab2@10639> 'ok    MOVE.b d0,(a0)+                                      ; copy labeltext to debuginfo
00026358 <AmiBlitz3.ab2@10640>   DBF d1,'l10
0002635C <AmiBlitz3.ab2@10642> BRA 'l22
0002635E <AmiBlitz3.ab2@10645>       CLR.b (a0)+
00026362 <AmiBlitz3.ab2@10646>   DBF d1,'l21
00026364 <AmiBlitz3.ab2@10649>   ADD.l d4,d3
00026366 <AmiBlitz3.ab2@10654>   SUB.l D4,D5
0002636A <AmiBlitz3.ab2@10655>    BEQ.w JL_0_76CE
00026370 <AmiBlitz3.ab2@10656>   MOVE.l #zero,a1
00026372 <AmiBlitz3.ab2@10658>   MOVE.l (a1),(a0)+
00026374 <AmiBlitz3.ab2@10660>   ADD.l d5,d3
00026378 <AmiBlitz3.ab2@10665>   MOVE.l $8(A2),D2
0002637E <AmiBlitz3.ab2@10666>   SUB.l destbufferstart,D2
00026384 <AmiBlitz3.ab2@10667>   SUB.l noinits,D2
0002638A <AmiBlitz3.ab2@10668>   MOVE.l D2,temp1
00026390 <AmiBlitz3.ab2@10669>   MOVE.l #temp1,a1
00026392 <AmiBlitz3.ab2@10671>   MOVE.l (a1),(a0)+
00026398 <AmiBlitz3.ab2@10672>   ADD.l #4,d3
0002639E <AmiBlitz3.ab2@10673>   LEA debugstore,a0
000263A0 <AmiBlitz3.ab2@10674>   MOVE.l a0,d2
000263A2 <AmiBlitz3.ab2@10676>   MOVE.l D7,D1
000263A6 <AmiBlitz3.ab2@10677>   BSR.w mywrite
000263A8 <AmiBlitz3.ab2@10680>   MOVEA.l (A2),A2
000263AC <AmiBlitz3.ab2@10681> BRA.w JL_0_7664
000263B2 <AmiBlitz3.ab2@10685>   MOVE.l #zero,D2
000263B4 <AmiBlitz3.ab2@10686>   MOVEQ.l #$04,D3
000263B6 <AmiBlitz3.ab2@10687>   MOVE.l D7,D1
000263BA <AmiBlitz3.ab2@10688>   BSR.w mywrite
000263BC <AmiBlitz3.ab2@10691>   MOVE.l D7,D1
000263C2 <AmiBlitz3.ab2@10692>   MOVE.l #tstdone,D2                                      ;hunkend
000263C4 <AmiBlitz3.ab2@10693>   MOVEQ.l #$04,D3
000263CE <AmiBlitz3.ab2@10694>   CMPI.l #-1,bssstart
000263D2 <AmiBlitz3.ab2@10695>   BEQ 'l10
000263D4 <AmiBlitz3.ab2@10696>   MOVEQ #16,d3
000263DA <AmiBlitz3.ab2@10697>   MOVE.l #hunkend,d2
000263E4 <AmiBlitz3.ab2@10698>   CMPI.l #-1,chipstart
000263E8 <AmiBlitz3.ab2@10699>   BEQ 'l10
000263EA <AmiBlitz3.ab2@10700>   MOVE.l d7,d1
000263EC <AmiBlitz3.ab2@10701>   MOVEQ #12,d3
000263F0 <AmiBlitz3.ab2@10702>   BSR.w mywrite
000263FA <AmiBlitz3.ab2@10705>   CMPI.l #-1,chipstart
000263FE <AmiBlitz3.ab2@10706>   BEQ 'l11
00026400 <AmiBlitz3.ab2@10707>   MOVEQ #12,d3
00026406 <AmiBlitz3.ab2@10708>   MOVE.l #hunkend2,d2
00026408 <AmiBlitz3.ab2@10709>   MOVE.l d7,d1
0002640C <AmiBlitz3.ab2@10710>   BSR.w mywrite
0002640E <AmiBlitz3.ab2@10711>   MOVE.l d7,d1
00026414 <AmiBlitz3.ab2@10712>   MOVE.l chipstart,d2
0002641A <AmiBlitz3.ab2@10713>   MOVE.l chipsize,d3
0002641E <AmiBlitz3.ab2@10714>   BSR.w mywrite
00026420 <AmiBlitz3.ab2@10715>   MOVEQ #4,d3
00026426 <AmiBlitz3.ab2@10716>   MOVE.l #hunkend,d2
00026428 <AmiBlitz3.ab2@10717>   MOVE.l d7,d1
0002642C <AmiBlitz3.ab2@10720>   BSR.w mywrite
0002642E <AmiBlitz3.ab2@10721>   MOVE.l D7,D1
00026434 <AmiBlitz3.ab2@10722>   MOVEA.l _dosbase,A6
00026438 <AmiBlitz3.ab2@10723>   JSR _Close(A6)
00026440 <AmiBlitz3.ab2@10728>   BTST #$7,create_iconfile
00026444 <AmiBlitz3.ab2@10729>    BEQ.w skip_createicon
0002644A <AmiBlitz3.ab2@10731>   MOVEA.l ptr_newexefilename,A0
0002644C <AmiBlitz3.ab2@10734>     TST.b (A0)+
00026450 <AmiBlitz3.ab2@10735>   BNE.w JL_0_772C
00026452 <AmiBlitz3.ab2@10736>   SUBQ.w #1,A0
00026454 <AmiBlitz3.ab2@10737>   MOVE.l A0,-(A7)
0002645A <AmiBlitz3.ab2@10738>   LEA str_infoextention2,A1
0002645C <AmiBlitz3.ab2@10741>     MOVE.b (A1)+,(A0)+
00026460 <AmiBlitz3.ab2@10742>   BNE.w JL_0_773A
00026466 <AmiBlitz3.ab2@10744>   MOVE.l ptr_newexefilename,D1
00026468 <AmiBlitz3.ab2@10745>   MOVEQ.l #-$02,D2
0002646E <AmiBlitz3.ab2@10746>   MOVEA.l _dosbase,A6
00026472 <AmiBlitz3.ab2@10747>   JSR _Lock(A6)
00026474 <AmiBlitz3.ab2@10748>   MOVE.l D0,D1
00026478 <AmiBlitz3.ab2@10749>   BEQ.w JL_0_775A                                          ;no icon exit so jump to create one  tomsmart1
0002647C <AmiBlitz3.ab2@10750>   JSR _UnLock(A6)                                          ;OH!! there is a Icon so we must Unlock it  tomsmart1
00026480 <AmiBlitz3.ab2@10751> BRA.w JL_0_7788                                            ;and skip writing a Icon  tomsmart1
00026486 <AmiBlitz3.ab2@10754>   MOVE.l ptr_newexefilename,D1
0002648C <AmiBlitz3.ab2@10755>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00026492 <AmiBlitz3.ab2@10756>   MOVEA.l _dosbase,A6
00026496 <AmiBlitz3.ab2@10757>    JSR _Open(A6)
00026498 <AmiBlitz3.ab2@10758>   MOVE.l D0,D7
0002649C <AmiBlitz3.ab2@10759>    BEQ.w JL_0_7788
000264A2 <AmiBlitz3.ab2@10760>   MOVE.l #icongfx_data,D2                                  ; icon graphics
000264A8 <AmiBlitz3.ab2@10761>   MOVE.l #icongfx_data_end-icongfx_data,D3                 ; length of gfx-data
000264AA <AmiBlitz3.ab2@10762>   MOVE.l D7,D1
000264B0 <AmiBlitz3.ab2@10763>   MOVEA.l _dosbase,A6
000264B4 <AmiBlitz3.ab2@10764>   JSR _Write(A6)
000264B6 <AmiBlitz3.ab2@10765>   MOVE.l D7,D1
000264BA <AmiBlitz3.ab2@10766>   JSR _Close(A6)
000264BC <AmiBlitz3.ab2@10769>   MOVEA.l (A7)+,A0
000264BE <AmiBlitz3.ab2@10770>   CLR.b (A0)
000264C4 <AmiBlitz3.ab2@10775>   TST.b exdebug
000264C8 <AmiBlitz3.ab2@10776>    BEQ JL_0_757Cb
000264CE <AmiBlitz3.ab2@10777>   MOVE.w dontwrite,D1
000264D2 <AmiBlitz3.ab2@10778>   BNE.w JL_0_757Cb
000264D8 <AmiBlitz3.ab2@10779>   MOVE.l chipsize,d5
000264DE <AmiBlitz3.ab2@10780>   MOVE.l bsssize,d3
000264E4 <AmiBlitz3.ab2@10781>   MOVE.l chipstart,d7
000264EA <AmiBlitz3.ab2@10782>   MOVE.l bssstart,d6
000264F0 <AmiBlitz3.ab2@10783>   MOVEA.l hunkoffsetbase,A2
000264F6 <AmiBlitz3.ab2@10784>   MOVEA.l destbufferstart,A1
000264F8 <AmiBlitz3.ab2@10785>   MOVE.l A1,D2
000264FE <AmiBlitz3.ab2@10786>   ADD.l noinits,D2
00026504 <AmiBlitz3.ab2@10787>   CLR.l hunkoffsetnum
00026508 <AmiBlitz3.ab2@10790>   CMPA.w #$0,A2
0002650C <AmiBlitz3.ab2@10791>    BEQ.w JL_0_757Cb
00026510 <AmiBlitz3.ab2@10792>   MOVE.l $4(A2),D0
00026514 <AmiBlitz3.ab2@10793>    LEA $0(a1,d0.l),a0
00026516 <AmiBlitz3.ab2@10794>    MOVE.l (a0),d1
00026518 <AmiBlitz3.ab2@10795>   TST.l d1
0002651C <AmiBlitz3.ab2@10796>    BMI.w 'lm1
00026524 <AmiBlitz3.ab2@10797>   MOVE.b #0,newhunk
0002652E <AmiBlitz3.ab2@10798>   CMP.l #-1,chipstart
00026532 <AmiBlitz3.ab2@10799>   BEQ 'l10
00026538 <AmiBlitz3.ab2@10800>   CMP.l chipstart,d1
0002653C <AmiBlitz3.ab2@10801>   BLT 'l10
00026544 <AmiBlitz3.ab2@10802>   MOVE.b #1,newhunk
0002654A <AmiBlitz3.ab2@10803>   CMP.l chipend,d1
0002654E <AmiBlitz3.ab2@10804>   BGE 'l110
00026550 <AmiBlitz3.ab2@10805>   ADD.l d7,(a0)
00026558 <AmiBlitz3.ab2@10806>   ADD.l #$80000000,4(a2)
0002655C <AmiBlitz3.ab2@10807> BRA JL_0_7576b
00026560 <AmiBlitz3.ab2@10810>   ADD.l d5,0(a0)
0002656A <AmiBlitz3.ab2@10813>   CMP.l #-1,bssstart
0002656E <AmiBlitz3.ab2@10814>     BEQ 'l11
00026574 <AmiBlitz3.ab2@10815>   CMP.l bssstart,d1
00026578 <AmiBlitz3.ab2@10816>   BLT 'l11
0002657E <AmiBlitz3.ab2@10817>   CMP.l bssend,d1
00026582 <AmiBlitz3.ab2@10818>   BGE 'l111
00026588 <AmiBlitz3.ab2@10819>   TST.b newhunk
0002658C <AmiBlitz3.ab2@10820>   BEQ 'ln1
0002658E <AmiBlitz3.ab2@10821>   ADD.l d5,(a0)
00026590 <AmiBlitz3.ab2@10824>   ADD.l d6,(a0)
00026598 <AmiBlitz3.ab2@10825>   ADD.l #$40000000,4(a2)
0002659C <AmiBlitz3.ab2@10826> BRA JL_0_7576b
000265A0 <AmiBlitz3.ab2@10829>   ADD.l d3,0(a0)
000265A2 <AmiBlitz3.ab2@10832>   ADD.l D2,(A0)                                            ;only normal code offsets restore
000265A8 <AmiBlitz3.ab2@10835>   ADDQ.l #1,hunkoffsetnum
000265AA <AmiBlitz3.ab2@10838>   MOVEA.l (A2),A2
000265AE <AmiBlitz3.ab2@10839> BRA.w JL_0_755Eb
000265B4 <AmiBlitz3.ab2@10842>   JSR call_setpointernormal
000265B8 <AmiBlitz3.ab2@10843>   MOVEM.l (a7)+,d2-d7/a2-a6
000265BA <AmiBlitz3.ab2@10845> RTS
000265BC <AmiBlitz3.ab2@10849>   MOVE.l D2,-(A7)
000265C2 <AmiBlitz3.ab2@10850>   MOVE.l destpointer,D2
000265C8 <AmiBlitz3.ab2@10851>   SUB.l destbufferstart,D2
000265CC <AmiBlitz3.ab2@10852>   BSR.w addhunkoffset
000265CE <AmiBlitz3.ab2@10853>   MOVE.l (A7)+,D2
000265D0 <AmiBlitz3.ab2@10854> RTS
000265D4 <AmiBlitz3.ab2@10858>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
000265DA <AmiBlitz3.ab2@10859>   TST.b nohunkoffset
000265DE <AmiBlitz3.ab2@10860>   BNE 'l10
000265E0 <AmiBlitz3.ab2@10861>   MOVEQ.l #$8,D0
000265E2 <AmiBlitz3.ab2@10862>   MOVEQ.l #$01,D1
000265E8 <AmiBlitz3.ab2@10863>   MOVEA.l _execbase,A6
000265EE <AmiBlitz3.ab2@10864>   MOVE.l mempool2,a0
000265F2 <AmiBlitz3.ab2@10865>   JSR _AllocPooled(a6)
000265F8 <AmiBlitz3.ab2@10867>   ADDQ.l #1,hunkoffsetcounter
000265FA <AmiBlitz3.ab2@10868>   MOVEA.l D0,A0
00026600 <AmiBlitz3.ab2@10869>   MOVE.l hunkoffsetbase,(A0)
00026606 <AmiBlitz3.ab2@10870>   MOVE.l A0,hunkoffsetbase
0002660A <AmiBlitz3.ab2@10871>   MOVE.l D2,$4(A0)
0002660E <AmiBlitz3.ab2@10874>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
00026610 <AmiBlitz3.ab2@10875> RTS
00026616 <AmiBlitz3.ab2@10879>   CLR.l hunkoffsetbase
0002661C <AmiBlitz3.ab2@10880>   MOVEA.l _execbase,A6
00026622 <AmiBlitz3.ab2@10881>   MOVEA.l hunkoffsetbase,A2
00026626 <AmiBlitz3.ab2@10884>     CMPA.w #$0,A2
0002662A <AmiBlitz3.ab2@10885>      BEQ.w JL_0_7988
0002662C <AmiBlitz3.ab2@10886>     MOVEA.l A2,A1
0002662E <AmiBlitz3.ab2@10887>     MOVEQ.l #$08,D0
00026630 <AmiBlitz3.ab2@10888>     MOVEA.l (A2),A2
00026636 <AmiBlitz3.ab2@10889>     MOVE.l mempool2,a0
0002663A <AmiBlitz3.ab2@10890>     JSR _FreePooled(A6)
0002663E <AmiBlitz3.ab2@10891> BRA.w JL_0_7972
00026644 <AmiBlitz3.ab2@10894>   CLR.l hunkoffsetcounter
00026646 <AmiBlitz3.ab2@10895> RTS
0002665E <AmiBlitz3.ab2@10898> cmakebuff:  Ds.l 6                                          ;dc.w 12 org source
00026662 <AmiBlitz3.ab2@10899> cmakea5:    Ds.l 1
00026664 <AmiBlitz3.ab2@10900> cmake:      Ds.w 1
000266E4 <AmiBlitz3.ab2@10901> cmakebak:   Ds.l 32                                         ;ds.b 128 org source
000266EA <AmiBlitz3.ab2@10905>   MOVE.l A5,lastsourcepos
000266F4 <AmiBlitz3.ab2@10906>   MOVE.w instringon,oldqflag
000266F6 <AmiBlitz3.ab2@10910>   MOVEQ.l #$00,D0
000266F8 <AmiBlitz3.ab2@10911>   MOVE.b (A5)+,D0
000266FC <AmiBlitz3.ab2@10912>    BEQ getcharb__donea
00026700 <AmiBlitz3.ab2@10913>   BPL getcharb__stuffa
00026702 <AmiBlitz3.ab2@10914>   LSL.l #8,D0
00026704 <AmiBlitz3.ab2@10915>   MOVE.b (A5)+,D0
00026706 <AmiBlitz3.ab2@10916>   MOVE.l a1,-(a7)
0002670C <AmiBlitz3.ab2@10917>   LEA replacedat,a1
00026710 <AmiBlitz3.ab2@10918>   Dc.w $4a71,$0a00                                         ;TST.w 0(a1,d0.l*2)
00026714 <AmiBlitz3.ab2@10919>   BEQ getchar__l10
00026718 <AmiBlitz3.ab2@10920>   Dc.w $3031,$0a00                                         ;MOVE.w 0(a1,d0.l*2),d0
0002671A <AmiBlitz3.ab2@10924>   MOVE.l (a7)+,a1
0002671E <AmiBlitz3.ab2@10925> BRA getchar__weiter
00026722 <AmiBlitz3.ab2@10928>   CMP.w #$22,D0
00026726 <AmiBlitz3.ab2@10929>    BEQ.b swapquotea
0002672A <AmiBlitz3.ab2@10930>   CMP.w #$3B,D0
0002672E <AmiBlitz3.ab2@10931>    BNE.b getcharb__donea
00026734 <AmiBlitz3.ab2@10932>   TST.w instringon
00026738 <AmiBlitz3.ab2@10933>    BNE.b getcharb__donea
0002673A <AmiBlitz3.ab2@10936>   MOVE.b (A5)+,D0
0002673E <AmiBlitz3.ab2@10937>              BEQ getchar__l1
00026742 <AmiBlitz3.ab2@10938>              CMP.b #":",d0
00026746 <AmiBlitz3.ab2@10939>              BNE getcharb__loopa                                ;:@
0002674A <AmiBlitz3.ab2@10940>              CMP.b #"@",(a5)
0002674E <AmiBlitz3.ab2@10941>              BNE getcharb__loopa
00026750 <AmiBlitz3.ab2@10942>              ADDQ #1,a5
00026756 <AmiBlitz3.ab2@10945>   MOVE.w D0,lastchar
0002675A <AmiBlitz3.ab2@10948> BRA.s getchar__weiter
00026760 <AmiBlitz3.ab2@10951>   NOT.w instringon
00026766 <AmiBlitz3.ab2@10954>    MOVE.w D0,lastchar
0002676A <AmiBlitz3.ab2@10955>    BEQ.w getchar__done
0002676E <AmiBlitz3.ab2@10956>    BPL.w getchar__done2
00026772 <AmiBlitz3.ab2@10957>   CMP.w #-$7FE4,D0                                         ;cnif
00026776 <AmiBlitz3.ab2@10958>    BEQ.w getchar__cnif
0002677A <AmiBlitz3.ab2@10959>   CMP.w #-$7FE3,D0                                         ;csif
0002677E <AmiBlitz3.ab2@10960>    BEQ.w getchar__csif
00026782 <AmiBlitz3.ab2@10961>   CMP.w #-$7FE2,D0                                         ;celse
00026786 <AmiBlitz3.ab2@10962>    BEQ.w getchar__celse
0002678A <AmiBlitz3.ab2@10963>   CMP.w #-$7FE1,D0                                         ;cend
0002678E <AmiBlitz3.ab2@10964>    BEQ.w getchar__cend
00026794 <AmiBlitz3.ab2@10967>   TST.w skipcode
00026798 <AmiBlitz3.ab2@10968>    BEQ.w getchar
0002679C <AmiBlitz3.ab2@10969>   CMP.w #$7E,D0
000267A0 <AmiBlitz3.ab2@10970>    BEQ.w getchar__cmake                                         ;tilde
000267A4 <AmiBlitz3.ab2@10971>   CMP.w #$2,D0
000267A8 <AmiBlitz3.ab2@10972>    BNE.w getchar__notunpath
000267AE <AmiBlitz3.ab2@10973>   MOVEA.l usedfrom,A5
000267B4 <AmiBlitz3.ab2@10974>   CLR.l usedfrom
000267B8 <AmiBlitz3.ab2@10975> BRA.w getchar
000267BC <AmiBlitz3.ab2@10978>   CMP.w #$1,D0
000267C0 <AmiBlitz3.ab2@10979>    BNE.w getchar__done
000267C4 <AmiBlitz3.ab2@10983>   MOVEA.l cmakea5(PC),A5
000267C8 <AmiBlitz3.ab2@10984> BRA.w getchar
000267CE <AmiBlitz3.ab2@10987>   TST.w cmake
000267D2 <AmiBlitz3.ab2@10988>    BNE.w getchar__done
000267D6 <AmiBlitz3.ab2@10990>   MOVEM.l D0-D7/A0-A6,-(A7)
000267DC <AmiBlitz3.ab2@10991>   LEA cmake,a0                                         ;reass
000267DE <AmiBlitz3.ab2@10992>   NOT.w (a0)
000267E2 <AmiBlitz3.ab2@10993>   LEA cmakebak(PC),A0
000267E8 <AmiBlitz3.ab2@10994>   LEA ptr_parameterstore,A1
000267EA <AmiBlitz3.ab2@10995>   MOVEQ.l #$1F,D0
000267EC <AmiBlitz3.ab2@10998>     MOVE.l (A1)+,(A0)+
000267F0 <AmiBlitz3.ab2@10999>   DBF D0,getchar__cmloop
000267F6 <AmiBlitz3.ab2@11002>    JSR AJL_0_BF6E
000267FA <AmiBlitz3.ab2@11003>   CMP.w #$7E,D0
000267FE <AmiBlitz3.ab2@11004>    BNE.w syntaxerr
00026804 <AmiBlitz3.ab2@11005>   MOVE.l A5,cmakea5                                      ;tilde
00026808 <AmiBlitz3.ab2@11006>   LEA cmakebuff(PC),A0
0002680A <AmiBlitz3.ab2@11007>   MOVE.l D3,D2
0002680E <AmiBlitz3.ab2@11008>   BSR.w makelong
00026810 <AmiBlitz3.ab2@11009>   ADDQ.b #1,(A0)
00026816 <AmiBlitz3.ab2@11010>   LEA cmake,a0
00026818 <AmiBlitz3.ab2@11011>   NOT.w (a0)                                               ;reass
0002681C <AmiBlitz3.ab2@11012>   LEA cmakebak(PC),A0
00026822 <AmiBlitz3.ab2@11013>   LEA ptr_parameterstore,A1
00026824 <AmiBlitz3.ab2@11014>   MOVEQ.l #$1F,D0
00026826 <AmiBlitz3.ab2@11017>     MOVE.l (A0)+,(A1)+
0002682A <AmiBlitz3.ab2@11018>   DBF D0,getchar__cmloop2
0002682E <AmiBlitz3.ab2@11020>   MOVEM.l (A7)+,D0-D7/A0-A6
00026832 <AmiBlitz3.ab2@11021>   LEA cmakebuff(PC),A5
00026836 <AmiBlitz3.ab2@11022> BRA.w getchar
00026838 <AmiBlitz3.ab2@11025> RTS
00026842 <AmiBlitz3.ab2@11029>   MOVE.l linenumat,ciflineat                               ;csif
00026848 <AmiBlitz3.ab2@11030>   TST.w skipcode
0002684C <AmiBlitz3.ab2@11031>    BEQ.w getchar__incnest
00026850 <AmiBlitz3.ab2@11032>    BSR.w get1bytemain
00026852 <AmiBlitz3.ab2@11033>    MOVE.l a1,-(a7)
00026858 <AmiBlitz3.ab2@11034>    JSR JL_0_C492
0002685A <AmiBlitz3.ab2@11035>    MOVE.l (a7)+,a1
0002685E <AmiBlitz3.ab2@11036> BRA.w getchar
00026868 <AmiBlitz3.ab2@11039>   MOVE.l linenumat,ciflineat                               ;cnif
0002686E <AmiBlitz3.ab2@11040>   TST.w skipcode
00026872 <AmiBlitz3.ab2@11041>    BEQ.w getchar__incnest
00026876 <AmiBlitz3.ab2@11042>    BSR.w get1bytemain
0002687A <AmiBlitz3.ab2@11043>    CMP.b #"@",d0
0002687E <AmiBlitz3.ab2@11044>    BNE getchar__cnif_ok2
00026882 <AmiBlitz3.ab2@11045>    BSR.w get1bytemain
0002688A <AmiBlitz3.ab2@11046>    MOVE.b #1,incnif
00026890 <AmiBlitz3.ab2@11047>    JSR findconstant2
00026894 <AmiBlitz3.ab2@11048>    BEQ getchar__cnif_ok2
0002689A <AmiBlitz3.ab2@11051>    MOVE.w fast,-(a7)
000268A0 <AmiBlitz3.ab2@11052>    CLR.b fast
000268A2 <AmiBlitz3.ab2@11053>    MOVE.l a1,-(a7)
000268A8 <AmiBlitz3.ab2@11054>    JSR JL_0_C47E
000268AE <AmiBlitz3.ab2@11055>    CLR.b incnif
000268B0 <AmiBlitz3.ab2@11056>    MOVE.l (a7)+,a1
000268B6 <AmiBlitz3.ab2@11057>    MOVE.w (a7)+,fast
000268BA <AmiBlitz3.ab2@11058> BRA.w getchar
000268C0 <AmiBlitz3.ab2@11061>   ADDQ.w #1,connest
000268C4 <AmiBlitz3.ab2@11062> BRA.w getchar
000268CA <AmiBlitz3.ab2@11065>   MOVE.w connest,D0                                      ;celse
000268CE <AmiBlitz3.ab2@11066>    BNE.w getchar
000268D4 <AmiBlitz3.ab2@11067>   NOT.w skipcode
000268D8 <AmiBlitz3.ab2@11068> BRA.w getchar
000268DE <AmiBlitz3.ab2@11071>   SUBQ.w #1,connest                                      ;cend
000268E2 <AmiBlitz3.ab2@11072>    BPL.w getchar
000268E8 <AmiBlitz3.ab2@11073>   ADDQ.w #1,connest
000268EE <AmiBlitz3.ab2@11074>   MOVEA.l concomsp,A0
000268F4 <AmiBlitz3.ab2@11075>   CMPA.l #concomstack,A0
000268F8 <AmiBlitz3.ab2@11076>    BEQ.w nociferr
000268FA <AmiBlitz3.ab2@11077>   SUBQ.w #2,A0
00026900 <AmiBlitz3.ab2@11078>   MOVE.l A0,concomsp
00026906 <AmiBlitz3.ab2@11079>   MOVE.w (A0),skipcode
0002690A <AmiBlitz3.ab2@11080> BRA.w getchar
0002690E <AmiBlitz3.ab2@11083> ciflineat:   Ds.l 1
00026910 <AmiBlitz3.ab2@11091>   MOVEQ.l #$00,D0
00026912 <AmiBlitz3.ab2@11092>   MOVE.b (A5)+,D0
00026916 <AmiBlitz3.ab2@11093>    BEQ.b getcharb__done
0002691A <AmiBlitz3.ab2@11094>    BPL.b getcharb__stuff
0002691C <AmiBlitz3.ab2@11095>   LSL.w #8,D0
0002691E <AmiBlitz3.ab2@11096>   MOVE.b (A5)+,D0
00026920 <AmiBlitz3.ab2@11097> RTS
00026924 <AmiBlitz3.ab2@11100>   CMP.w #$22,D0
00026928 <AmiBlitz3.ab2@11101>    BEQ.b swapquote
0002692C <AmiBlitz3.ab2@11102>   CMP.w #$3B,D0
00026930 <AmiBlitz3.ab2@11103>    BNE.b getcharb__done
00026936 <AmiBlitz3.ab2@11104>   TST.w instringon
0002693A <AmiBlitz3.ab2@11105>    BNE.b getcharb__done
0002693C <AmiBlitz3.ab2@11108>   MOVE.b (A5)+,D0
00026940 <AmiBlitz3.ab2@11109>             BEQ getcharb__loop_l1
00026944 <AmiBlitz3.ab2@11110>             CMP.b #":",d0
00026948 <AmiBlitz3.ab2@11111>             BNE getcharb__loop
0002694C <AmiBlitz3.ab2@11112>             CMP.b #"@",(a5)
00026950 <AmiBlitz3.ab2@11113>             BNE getcharb__loop
00026956 <AmiBlitz3.ab2@11116>   MOVE.w D0,lastchar
00026958 <AmiBlitz3.ab2@11119> RTS
0002695E <AmiBlitz3.ab2@11122>   NOT.w instringon
00026960 <AmiBlitz3.ab2@11123> RTS
00026964 <AmiBlitz3.ab2@11127>   BSR.w getchar
0002696A <AmiBlitz3.ab2@11128>   TST.w instringon
0002696E <AmiBlitz3.ab2@11129>    BNE.w get1byte__skip
00026972 <AmiBlitz3.ab2@11130>   CMP.w #$20,D0
00026976 <AmiBlitz3.ab2@11131>    BEQ.w get1byte_
00026978 <AmiBlitz3.ab2@11134> RTS
00026992 <AmiBlitz3.ab2@11137> gs:        Ds.w 13                                         ;ds.b 26  org source
00026996 <AmiBlitz3.ab2@11138>            Dc.b $F6,$E4,$FC,$D6                            ;dc.b 228,246,252,196,214,220 org source
00026998 <AmiBlitz3.ab2@11139>            Dc.b $C4,$DC
0002699C <AmiBlitz3.ab2@11145>   BSR.w getchar
000269A2 <AmiBlitz3.ab2@11146>   TST.w instringon
000269A6 <AmiBlitz3.ab2@11147>    BNE.w gchar2
000269AA <AmiBlitz3.ab2@11148>   CMP.w #$20,D0
000269AE <AmiBlitz3.ab2@11149>    BEQ.w get1bytemain
000269B0 <AmiBlitz3.ab2@11151>   TST.w D0
000269B4 <AmiBlitz3.ab2@11154>   BEQ.b get1bytemain__zero
000269BA <AmiBlitz3.ab2@11155>   TST.w instringon
000269BE <AmiBlitz3.ab2@11156>    BEQ.b get1bytemain__noqoute
000269C2 <AmiBlitz3.ab2@11157>   CMP.b #$20,D0
000269C6 <AmiBlitz3.ab2@11158>    BCC.b get1bytemain__skip
000269CA <AmiBlitz3.ab2@11159>   MOVE.b gs(PC,D0.W),D0
000269CC <AmiBlitz3.ab2@11160> RTS
000269D0 <AmiBlitz3.ab2@11163>   CMP.w #-$7FDE,D0                                         ;cmp #$8000+34,d0 org source  ;else
000269D4 <AmiBlitz3.ab2@11164>    BEQ.b get1bytemain__zero
000269D8 <AmiBlitz3.ab2@11165>   CMP.w #$3A,D0
000269DC <AmiBlitz3.ab2@11166>    BEQ.b get1bytemain__zero
000269DE <AmiBlitz3.ab2@11169>   TST.w D0
000269E0 <AmiBlitz3.ab2@11172> RTS
000269E6 <AmiBlitz3.ab2@11176>   MOVE.w lastchar,D0
000269EA <AmiBlitz3.ab2@11177> BRA.w gchar2
000269F4 <AmiBlitz3.ab2@11181>   MOVE.w oldqflag,instringon
000269FA <AmiBlitz3.ab2@11182>   MOVEA.l lastsourcepos,A5
000269FC <AmiBlitz3.ab2@11183> RTS
00026A02 <AmiBlitz3.ab2@11187>   MOVE.w D0,locchar
00026A08 <AmiBlitz3.ab2@11188>   MOVE.l A5,locloc
00026A0A <AmiBlitz3.ab2@11189> RTS
00026A10 <AmiBlitz3.ab2@11193>   MOVEA.l locloc,A5
00026A16 <AmiBlitz3.ab2@11194>   MOVE.w locchar,D0
00026A1C <AmiBlitz3.ab2@11195>   MOVE.w D0,lastchar
00026A1E <AmiBlitz3.ab2@11196> RTS
00026A1E <internal_errormsg.ab2@1> XINCLUDE "internal_errormsg.ab2"
00026A66 <internal_errormsg.ab2@9> XINCLUDE "internal_errormsg.ab2"
00026AB8 <internal_errormsg.ab2@10> XINCLUDE "internal_errormsg.ab2"
00026AF6 <internal_errormsg.ab2@11> XINCLUDE "internal_errormsg.ab2"
00026B34 <internal_errormsg.ab2@12> XINCLUDE "internal_errormsg.ab2"
00026B5E <internal_errormsg.ab2@13> XINCLUDE "internal_errormsg.ab2"
00026B8E <internal_errormsg.ab2@14> XINCLUDE "internal_errormsg.ab2"
00026BD8 <internal_errormsg.ab2@15> XINCLUDE "internal_errormsg.ab2"
00026C5E <internal_errormsg.ab2@16> XINCLUDE "internal_errormsg.ab2"
00026CC0 <internal_errormsg.ab2@17> XINCLUDE "internal_errormsg.ab2"
00026D08 <internal_errormsg.ab2@18> XINCLUDE "internal_errormsg.ab2"
00026D5A <internal_errormsg.ab2@19> XINCLUDE "internal_errormsg.ab2"
00026DA4 <internal_errormsg.ab2@20> XINCLUDE "internal_errormsg.ab2"
00026DF2 <internal_errormsg.ab2@21> XINCLUDE "internal_errormsg.ab2"
00026E28 <internal_errormsg.ab2@22> XINCLUDE "internal_errormsg.ab2"
00026E56 <internal_errormsg.ab2@23> XINCLUDE "internal_errormsg.ab2"
00026E70 <internal_errormsg.ab2@24> XINCLUDE "internal_errormsg.ab2"
00026E8E <internal_errormsg.ab2@25> XINCLUDE "internal_errormsg.ab2"
00026F0C <internal_errormsg.ab2@26> XINCLUDE "internal_errormsg.ab2"
00026F36 <internal_errormsg.ab2@27> XINCLUDE "internal_errormsg.ab2"
00026F5C <internal_errormsg.ab2@28> XINCLUDE "internal_errormsg.ab2"
00026F7C <internal_errormsg.ab2@29> XINCLUDE "internal_errormsg.ab2"
00026F9A <internal_errormsg.ab2@30> XINCLUDE "internal_errormsg.ab2"
00026FBA <internal_errormsg.ab2@31> XINCLUDE "internal_errormsg.ab2"
00026FE2 <internal_errormsg.ab2@32> XINCLUDE "internal_errormsg.ab2"
0002700C <internal_errormsg.ab2@33> XINCLUDE "internal_errormsg.ab2"
0002700E <internal_errormsg.ab2@36> XINCLUDE "internal_errormsg.ab2"
0002702A <internal_errormsg.ab2@39> XINCLUDE "internal_errormsg.ab2"
00027050 <internal_errormsg.ab2@40> XINCLUDE "internal_errormsg.ab2"
00027068 <internal_errormsg.ab2@41> XINCLUDE "internal_errormsg.ab2"
000270C6 <internal_errormsg.ab2@42> XINCLUDE "internal_errormsg.ab2"
000270E8 <internal_errormsg.ab2@43> XINCLUDE "internal_errormsg.ab2"
0002710E <internal_errormsg.ab2@44> XINCLUDE "internal_errormsg.ab2"
00027136 <internal_errormsg.ab2@45> XINCLUDE "internal_errormsg.ab2"
00027156 <internal_errormsg.ab2@46> XINCLUDE "internal_errormsg.ab2"
0002717A <internal_errormsg.ab2@47> XINCLUDE "internal_errormsg.ab2"
000271C0 <internal_errormsg.ab2@48> XINCLUDE "internal_errormsg.ab2"
000271E4 <internal_errormsg.ab2@49> XINCLUDE "internal_errormsg.ab2"
00027208 <internal_errormsg.ab2@50> XINCLUDE "internal_errormsg.ab2"
00027228 <internal_errormsg.ab2@51> XINCLUDE "internal_errormsg.ab2"
0002724C <internal_errormsg.ab2@52> XINCLUDE "internal_errormsg.ab2"
0002726E <internal_errormsg.ab2@53> XINCLUDE "internal_errormsg.ab2"
0002729A <internal_errormsg.ab2@54> XINCLUDE "internal_errormsg.ab2"
000272C0 <internal_errormsg.ab2@55> XINCLUDE "internal_errormsg.ab2"
000272CA <internal_errormsg.ab2@58> XINCLUDE "internal_errormsg.ab2"
000272F0 <internal_errormsg.ab2@59> XINCLUDE "internal_errormsg.ab2"
00027342 <internal_errormsg.ab2@61> XINCLUDE "internal_errormsg.ab2"
000273AC <internal_errormsg.ab2@62> XINCLUDE "internal_errormsg.ab2"
0002740A <internal_errormsg.ab2@63> XINCLUDE "internal_errormsg.ab2"
00027478 <internal_errormsg.ab2@64> XINCLUDE "internal_errormsg.ab2"
000274B4 <internal_errormsg.ab2@65> XINCLUDE "internal_errormsg.ab2"
000274D2 <internal_errormsg.ab2@66> XINCLUDE "internal_errormsg.ab2"
000274F8 <internal_errormsg.ab2@67> XINCLUDE "internal_errormsg.ab2"
00027528 <internal_errormsg.ab2@68> XINCLUDE "internal_errormsg.ab2"
0002754C <internal_errormsg.ab2@69> XINCLUDE "internal_errormsg.ab2"
0002757A <internal_errormsg.ab2@70> XINCLUDE "internal_errormsg.ab2"
0002759E <internal_errormsg.ab2@71> XINCLUDE "internal_errormsg.ab2"
000275B4 <internal_errormsg.ab2@72> XINCLUDE "internal_errormsg.ab2"
000275CA <internal_errormsg.ab2@73> XINCLUDE "internal_errormsg.ab2"
000275D0 <internal_errormsg.ab2@76> XINCLUDE "internal_errormsg.ab2"
000275D8 <internal_errormsg.ab2@78> XINCLUDE "internal_errormsg.ab2"
000275DA <internal_errormsg.ab2@79> XINCLUDE "internal_errormsg.ab2"
000275DE <internal_errormsg.ab2@80> XINCLUDE "internal_errormsg.ab2"
000275E6 <internal_errormsg.ab2@81> XINCLUDE "internal_errormsg.ab2"
000275E8 <internal_errormsg.ab2@82> XINCLUDE "internal_errormsg.ab2"
00027622 <internal_errormsg.ab2@84> XINCLUDE "internal_errormsg.ab2"
0002764E <internal_errormsg.ab2@85> XINCLUDE "internal_errormsg.ab2"
0002767E <internal_errormsg.ab2@86> XINCLUDE "internal_errormsg.ab2"
000276B6 <internal_errormsg.ab2@87> XINCLUDE "internal_errormsg.ab2"
00027710 <internal_errormsg.ab2@88> XINCLUDE "internal_errormsg.ab2"
00027712 <internal_errormsg.ab2@92> XINCLUDE "internal_errormsg.ab2"
00027716 <internal_errormsg.ab2@93> XINCLUDE "internal_errormsg.ab2"
0002771A <internal_errormsg.ab2@94> XINCLUDE "internal_errormsg.ab2"
0002771E <internal_errormsg.ab2@95> XINCLUDE "internal_errormsg.ab2"
00027722 <internal_errormsg.ab2@96> XINCLUDE "internal_errormsg.ab2"
00027726 <internal_errormsg.ab2@97> XINCLUDE "internal_errormsg.ab2"
0002772A <internal_errormsg.ab2@98> XINCLUDE "internal_errormsg.ab2"
0002772E <internal_errormsg.ab2@99> XINCLUDE "internal_errormsg.ab2"
00027732 <internal_errormsg.ab2@100> XINCLUDE "internal_errormsg.ab2"
00027736 <internal_errormsg.ab2@101> XINCLUDE "internal_errormsg.ab2"
0002773A <internal_errormsg.ab2@102> XINCLUDE "internal_errormsg.ab2"
00027778 <internal_errormsg.ab2@103> XINCLUDE "internal_errormsg.ab2"
000277AA <internal_errormsg.ab2@105> XINCLUDE "internal_errormsg.ab2"
000277C8 <internal_errormsg.ab2@106> XINCLUDE "internal_errormsg.ab2"
000277F2 <internal_errormsg.ab2@107> XINCLUDE "internal_errormsg.ab2"
0002780E <internal_errormsg.ab2@108> XINCLUDE "internal_errormsg.ab2"
00027828 <internal_errormsg.ab2@109> XINCLUDE "internal_errormsg.ab2"
00027846 <internal_errormsg.ab2@110> XINCLUDE "internal_errormsg.ab2"
0002786A <internal_errormsg.ab2@111> XINCLUDE "internal_errormsg.ab2"
0002786C <internal_errormsg.ab2@114> XINCLUDE "internal_errormsg.ab2"
000278BE <internal_errormsg.ab2@115> XINCLUDE "internal_errormsg.ab2"
000278E6 <internal_errormsg.ab2@117> XINCLUDE "internal_errormsg.ab2"
0002790E <internal_errormsg.ab2@118> XINCLUDE "internal_errormsg.ab2"
0002792A <internal_errormsg.ab2@122> XINCLUDE "internal_errormsg.ab2"
0002794A <internal_errormsg.ab2@123> XINCLUDE "internal_errormsg.ab2"
00027962 <internal_errormsg.ab2@124> XINCLUDE "internal_errormsg.ab2"
000279A6 <internal_errormsg.ab2@125> XINCLUDE "internal_errormsg.ab2"
000279EE <internal_errormsg.ab2@126> XINCLUDE "internal_errormsg.ab2"
00027A18 <internal_errormsg.ab2@127> XINCLUDE "internal_errormsg.ab2"
00027A42 <internal_errormsg.ab2@128> XINCLUDE "internal_errormsg.ab2"
00027A5C <internal_errormsg.ab2@132> XINCLUDE "internal_errormsg.ab2"
00027A86 <internal_errormsg.ab2@133> XINCLUDE "internal_errormsg.ab2"
00027ADA <internal_errormsg.ab2@134> XINCLUDE "internal_errormsg.ab2"
00027B26 <internal_errormsg.ab2@135> XINCLUDE "internal_errormsg.ab2"
00027B5E <internal_errormsg.ab2@136> XINCLUDE "internal_errormsg.ab2"
00027B64 <internal_errormsg.ab2@139> XINCLUDE "internal_errormsg.ab2"
00027B72 <internal_errormsg.ab2@141> XINCLUDE "internal_errormsg.ab2"
00027BA2 <internal_errormsg.ab2@144> XINCLUDE "internal_errormsg.ab2"
00027BD6 <internal_errormsg.ab2@145> XINCLUDE "internal_errormsg.ab2"
00027C3C <internal_errormsg.ab2@146> XINCLUDE "internal_errormsg.ab2"
00027C5A <internal_errormsg.ab2@147> XINCLUDE "internal_errormsg.ab2"
00027CD4 <internal_errormsg.ab2@148> XINCLUDE "internal_errormsg.ab2"
00027CFC <internal_errormsg.ab2@149> XINCLUDE "internal_errormsg.ab2"
00027D12 <internal_errormsg.ab2@150> XINCLUDE "internal_errormsg.ab2"
00027D26 <internal_errormsg.ab2@151> XINCLUDE "internal_errormsg.ab2"
00027D28 <internal_errormsg.ab2@154> XINCLUDE "internal_errormsg.ab2"
00027D29 <internal_errormsg.ab2@155> XINCLUDE "internal_errormsg.ab2"
00027D2A <internal_errormsg.ab2@156> XINCLUDE "internal_errormsg.ab2"
00027D4A <internal_errormsg.ab2@158> XINCLUDE "internal_errormsg.ab2"
00027D50 <internal_errormsg.ab2@161> XINCLUDE "internal_errormsg.ab2"
00027D62 <internal_errormsg.ab2@163> XINCLUDE "internal_errormsg.ab2"
00027D96 <internal_errormsg.ab2@166> XINCLUDE "internal_errormsg.ab2"
00027DAE <internal_errormsg.ab2@167> XINCLUDE "internal_errormsg.ab2"
00027DCA <internal_errormsg.ab2@168> XINCLUDE "internal_errormsg.ab2"
00027DE2 <internal_errormsg.ab2@169> XINCLUDE "internal_errormsg.ab2"
00027E02 <internal_errormsg.ab2@170> XINCLUDE "internal_errormsg.ab2"
00027E22 <internal_errormsg.ab2@171> XINCLUDE "internal_errormsg.ab2"
00027E48 <internal_errormsg.ab2@172> XINCLUDE "internal_errormsg.ab2"
00027E5E <internal_errormsg.ab2@173> XINCLUDE "internal_errormsg.ab2"
00027E7A <internal_errormsg.ab2@174> XINCLUDE "internal_errormsg.ab2"
00027EA4 <internal_errormsg.ab2@175> XINCLUDE "internal_errormsg.ab2"
00027EBC <internal_errormsg.ab2@176> XINCLUDE "internal_errormsg.ab2"
00027ED8 <internal_errormsg.ab2@177> XINCLUDE "internal_errormsg.ab2"
00027EF8 <internal_errormsg.ab2@178> XINCLUDE "internal_errormsg.ab2"
00027F10 <internal_errormsg.ab2@179> XINCLUDE "internal_errormsg.ab2"
00027F14 <internal_errormsg.ab2@182> XINCLUDE "internal_errormsg.ab2"
00027F1A <internal_errormsg.ab2@183> XINCLUDE "internal_errormsg.ab2"
00027F20 <internal_errormsg.ab2@184> XINCLUDE "internal_errormsg.ab2"
00027F35 <internal_errormsg.ab2@185> XINCLUDE "internal_errormsg.ab2"
00027F3B <internal_errormsg.ab2@187> XINCLUDE "internal_errormsg.ab2"
00027F3C <internal_errormsg.ab2@188> XINCLUDE "internal_errormsg.ab2"
00027F40 <internal_errormsg.ab2@191> XINCLUDE "internal_errormsg.ab2"
00027F46 <internal_errormsg.ab2@192> XINCLUDE "internal_errormsg.ab2"
00027F4C <internal_errormsg.ab2@193> XINCLUDE "internal_errormsg.ab2"
00027F5F <internal_errormsg.ab2@194> XINCLUDE "internal_errormsg.ab2"
00027F65 <internal_errormsg.ab2@196> XINCLUDE "internal_errormsg.ab2"
00027F66 <internal_errormsg.ab2@197> XINCLUDE "internal_errormsg.ab2"
00027F84 <internal_errormsg.ab2@199> XINCLUDE "internal_errormsg.ab2"
00027F9C <internal_errormsg.ab2@200> XINCLUDE "internal_errormsg.ab2"
00027FB8 <internal_errormsg.ab2@201> XINCLUDE "internal_errormsg.ab2"
00027FE2 <internal_errormsg.ab2@202> XINCLUDE "internal_errormsg.ab2"
00027FFC <internal_errormsg.ab2@203> XINCLUDE "internal_errormsg.ab2"
0002801C <internal_errormsg.ab2@204> XINCLUDE "internal_errormsg.ab2"
0002803A <internal_errormsg.ab2@205> XINCLUDE "internal_errormsg.ab2"
00028068 <internal_errormsg.ab2@206> XINCLUDE "internal_errormsg.ab2"
00028072 <internal_errormsg.ab2@209> XINCLUDE "internal_errormsg.ab2"
000280A4 <internal_errormsg.ab2@210> XINCLUDE "internal_errormsg.ab2"
000280C2 <internal_errormsg.ab2@212> XINCLUDE "internal_errormsg.ab2"
000280E0 <internal_errormsg.ab2@213> XINCLUDE "internal_errormsg.ab2"
00028100 <internal_errormsg.ab2@214> XINCLUDE "internal_errormsg.ab2"
00028126 <internal_errormsg.ab2@215> XINCLUDE "internal_errormsg.ab2"
0002814C <internal_errormsg.ab2@216> XINCLUDE "internal_errormsg.ab2"
00028174 <internal_errormsg.ab2@217> XINCLUDE "internal_errormsg.ab2"
00028192 <internal_errormsg.ab2@218> XINCLUDE "internal_errormsg.ab2"
000281B2 <internal_errormsg.ab2@219> XINCLUDE "internal_errormsg.ab2"
000281CC <internal_errormsg.ab2@220> XINCLUDE "internal_errormsg.ab2"
000281EE <internal_errormsg.ab2@221> XINCLUDE "internal_errormsg.ab2"
0002820C <internal_errormsg.ab2@222> XINCLUDE "internal_errormsg.ab2"
0002822E <internal_errormsg.ab2@223> XINCLUDE "internal_errormsg.ab2"
00028252 <internal_errormsg.ab2@224> XINCLUDE "internal_errormsg.ab2"
00028258 <internal_errormsg.ab2@227> XINCLUDE "internal_errormsg.ab2"
00028274 <internal_errormsg.ab2@228> XINCLUDE "internal_errormsg.ab2"
00028290 <internal_errormsg.ab2@230> XINCLUDE "internal_errormsg.ab2"
000282AE <internal_errormsg.ab2@231> XINCLUDE "internal_errormsg.ab2"
000282CC <internal_errormsg.ab2@232> XINCLUDE "internal_errormsg.ab2"
0002831A <internal_errormsg.ab2@233> XINCLUDE "internal_errormsg.ab2"
00028338 <internal_errormsg.ab2@234> XINCLUDE "internal_errormsg.ab2"
00028356 <internal_errormsg.ab2@235> XINCLUDE "internal_errormsg.ab2"
00028370 <internal_errormsg.ab2@236> XINCLUDE "internal_errormsg.ab2"
000283BC <internal_errormsg.ab2@237> XINCLUDE "internal_errormsg.ab2"
000283E2 <internal_errormsg.ab2@238> XINCLUDE "internal_errormsg.ab2"
00028402 <internal_errormsg.ab2@239> XINCLUDE "internal_errormsg.ab2"
00028424 <internal_errormsg.ab2@240> XINCLUDE "internal_errormsg.ab2"
00028440 <internal_errormsg.ab2@241> XINCLUDE "internal_errormsg.ab2"
00028466 <internal_errormsg.ab2@242> XINCLUDE "internal_errormsg.ab2"
00028482 <internal_errormsg.ab2@243> XINCLUDE "internal_errormsg.ab2"
000284A0 <internal_errormsg.ab2@244> XINCLUDE "internal_errormsg.ab2"
000284C8 <internal_errormsg.ab2@245> XINCLUDE "internal_errormsg.ab2"
000284E4 <internal_errormsg.ab2@246> XINCLUDE "internal_errormsg.ab2"
000284F4 <internal_errormsg.ab2@247> XINCLUDE "internal_errormsg.ab2"
00028516 <internal_errormsg.ab2@248> XINCLUDE "internal_errormsg.ab2"
0002851A <internal_errormsg.ab2@251> XINCLUDE "internal_errormsg.ab2"
0002851C <internal_errormsg.ab2@254> XINCLUDE "internal_errormsg.ab2"
00028536 <internal_errormsg.ab2@255> XINCLUDE "internal_errormsg.ab2"
0002855A <internal_errormsg.ab2@257> XINCLUDE "internal_errormsg.ab2"
0002857A <internal_errormsg.ab2@258> XINCLUDE "internal_errormsg.ab2"
000285AC <internal_errormsg.ab2@259> XINCLUDE "internal_errormsg.ab2"
0002860A <internal_errormsg.ab2@260> XINCLUDE "internal_errormsg.ab2"
00028642 <internal_errormsg.ab2@261> XINCLUDE "internal_errormsg.ab2"
00028680 <internal_errormsg.ab2@262> XINCLUDE "internal_errormsg.ab2"
000286B6 <internal_errormsg.ab2@263> XINCLUDE "internal_errormsg.ab2"
000286E8 <internal_errormsg.ab2@264> XINCLUDE "internal_errormsg.ab2"
0002870C <internal_errormsg.ab2@265> XINCLUDE "internal_errormsg.ab2"
00028730 <internal_errormsg.ab2@266> XINCLUDE "internal_errormsg.ab2"
0002877A <internal_errormsg.ab2@267> XINCLUDE "internal_errormsg.ab2"
000287A2 <internal_errormsg.ab2@268> XINCLUDE "internal_errormsg.ab2"
000287EC <internal_errormsg.ab2@269> XINCLUDE "internal_errormsg.ab2"
0002882C <internal_errormsg.ab2@270> XINCLUDE "internal_errormsg.ab2"
0002882C <AmiBlitz3.ab2@11200> XINCLUDE "internal_errormsg.ab2"
0002882E <AmiBlitz3.ab2@11204> ezerr:   Ds.w 1                                            ;for simple errors
00028834 <AmiBlitz3.ab2@11210>    MOVE.l myline,d0
00028838 <AmiBlitz3.ab2@11211>   BNE handle_compileerror__l2
0002883E <AmiBlitz3.ab2@11213>     MOVE.l a5,lastsourcepos
00028840 <AmiBlitz3.ab2@11215>     SUBA.l a5,a5
00028846 <AmiBlitz3.ab2@11217>   TST.l usedfrom
0002884A <AmiBlitz3.ab2@11218>   BEQ handle_compileerror__org
00028850 <AmiBlitz3.ab2@11219>     MOVEA.l usedfrom,a5
00028856 <AmiBlitz3.ab2@11222>   TST.w dirmode
0002885A <AmiBlitz3.ab2@11223>   BNE.b handle_compileerror__quiet
00028860 <AmiBlitz3.ab2@11224>     JSR call_setpointernormal
00028864 <AmiBlitz3.ab2@11225>     MOVE.w ezerr(PC),D0
00028868 <AmiBlitz3.ab2@11226>     BNE.w handle_compileerror__skip
0002886E <AmiBlitz3.ab2@11227>       MOVE.w cfetchmode,D0
00028872 <AmiBlitz3.ab2@11228>       BEQ.w handle_compileerror__skip2
0002887C <AmiBlitz3.ab2@11229>         MOVE.l oldlibat,destbufferend                      ;fix up lib thing.
00028882 <AmiBlitz3.ab2@11232>   MOVE.w constmode,D0
00028886 <AmiBlitz3.ab2@11233>   BEQ.b handle_compileerror__skip3
0002888A <AmiBlitz3.ab2@11234>     BSR.w asmerr2
00028890 <AmiBlitz3.ab2@11237>   MOVE.l firstlocal,D1
00028896 <AmiBlitz3.ab2@11238>   OR.l firstglob,D1
0002889A <AmiBlitz3.ab2@11239>   BEQ.b handle_compileerror__notproc                       ;?!?!?!
000288A0 <AmiBlitz3.ab2@11240>     JSR JL_0_DB5C
000288A8 <AmiBlitz3.ab2@11243>   MOVE.w #$FFFF,anyerrs                                    ;#-1,anyerrs org source
000288B2 <AmiBlitz3.ab2@11244>   CMP.l #"NORE",reqmode                                    ;for used functions
000288B6 <AmiBlitz3.ab2@11245>   BEQ handle_compileerror__notproc_l1
000288C0 <AmiBlitz3.ab2@11246>     MOVE.l linenumat,compilelinecounter
000288C6 <AmiBlitz3.ab2@11249>   JSR close_compilewin
000288C8 <AmiBlitz3.ab2@11252>   MOVEA.l (A7)+,A0
000288D2 <AmiBlitz3.ab2@11253>   CMP.l #maxerrorcount,errorcounter
000288D6 <AmiBlitz3.ab2@11254>   BLT 'lesserror
000288DC <AmiBlitz3.ab2@11255>   LEA errorlimit_text,a0
000288E2 <AmiBlitz3.ab2@11257>   ADDQ.l #1,errorcounter
000288E8 <AmiBlitz3.ab2@11258>   JSR errorstringparse
000288F2 <AmiBlitz3.ab2@11259>   CMP.l #"NORE",reqmode                                    ;for used functions
000288F6 <AmiBlitz3.ab2@11260>   BEQ handle_compileerror__skip_Lxx2
000288FC <AmiBlitz3.ab2@11261>   TST.l CLIMode
00028900 <AmiBlitz3.ab2@11262>   BNE 'climode_output
00028906 <AmiBlitz3.ab2@11264>     JSR save_errorfile
0002890A <AmiBlitz3.ab2@11265>     BRA 'end_output
00028910 <AmiBlitz3.ab2@11267>     JSR stdout_error
0002891A <AmiBlitz3.ab2@11269>      CMP.l #maxerrorcount,errorcounter
0002891E <AmiBlitz3.ab2@11270>      BGT 'end_output
00028924 <AmiBlitz3.ab2@11271>     MOVE.l lastsourcepos,a5
00028926 <AmiBlitz3.ab2@11272> 'loop TST.b (a5)
0002892A <AmiBlitz3.ab2@11273>       BEQ 'ok2
0002892C <AmiBlitz3.ab2@11274>     MOVE.b (a5)+,d0                                  ; position to usefull source position to avoid following errors
00028930 <AmiBlitz3.ab2@11275>     BEQ 'ok
00028934 <AmiBlitz3.ab2@11276>     CMP.b #":",d0
00028938 <AmiBlitz3.ab2@11277>     BEQ 'ok
0002893C <AmiBlitz3.ab2@11278>     BRA 'loop
0002893E <AmiBlitz3.ab2@11279> 'ok SUBQ.l #1,a5
00028946 <AmiBlitz3.ab2@11280> 'ok2 MOVE.w #0,lastchar
0002894E <AmiBlitz3.ab2@11281>     MOVE.b #1,iserror
00028954 <AmiBlitz3.ab2@11282>     MOVE.l stackaddr,a7
00028956 <AmiBlitz3.ab2@11283>     RTS
00028958 <AmiBlitz3.ab2@11289>   MOVE.l A0,-(a7)
00028996 <AmiBlitz3.ab2@11290>   !ComData_GetL{comFunc_ErrorRequest,A1}
00028998 <AmiBlitz3.ab2@11291>   MOVE.l (a7)+,A0
0002899C <AmiBlitz3.ab2@11293>   MOVEM.l d6/D7/A6,-(A7)
000289A2 <AmiBlitz3.ab2@11294>   MOVE.l includeline,d7
000289A8 <AmiBlitz3.ab2@11295>   MOVE.l #"INLN",a6
000289B2 <AmiBlitz3.ab2@11296>   MOVE.l errstack,tempa7
000289B4 <AmiBlitz3.ab2@11297>   JSR (A1)
000289B8 <AmiBlitz3.ab2@11299>   MOVEM.l (A7)+,D7/d6/A6
000289BE <AmiBlitz3.ab2@11302>   MOVE.l tempa7,a7
000289C4 <AmiBlitz3.ab2@11303>   MOVEA.l errcont,A0
000289C6 <AmiBlitz3.ab2@11305> RTS
000289CC <AmiBlitz3.ab2@11308>   MOVEA.l errstack,A7
000289D2 <AmiBlitz3.ab2@11309>   MOVEA.l errcont,A0
000289D4 <AmiBlitz3.ab2@11311> RTS
000289D6 <AmiBlitz3.ab2@11314>   MOVE.l (A7),D0
000289DC <AmiBlitz3.ab2@11315>   MOVEA.l errstack,A7
000289E2 <AmiBlitz3.ab2@11316>   MOVEA.l errcont,A0
000289E4 <AmiBlitz3.ab2@11317> JMP (A0)
000289E8 <AmiBlitz3.ab2@11323>   CMP.w #$7A,D0                                            ;'z'
000289EC <AmiBlitz3.ab2@11324>    BHI.w tstalpha__no
000289F0 <AmiBlitz3.ab2@11325>   CMP.w #$41,D0                                            ;'A'
000289F4 <AmiBlitz3.ab2@11326>    BCS.w tstalpha__no
000289F8 <AmiBlitz3.ab2@11327>   CMP.w #$61,D0                                            ;'a'
000289FC <AmiBlitz3.ab2@11328>    BCC.w tstalpha__yes
00028A00 <AmiBlitz3.ab2@11329>   CMP.w #$5A,D0                                            ;'Z'
00028A04 <AmiBlitz3.ab2@11330>    BHI.w tstalpha__no
00028A06 <AmiBlitz3.ab2@11333>   CMP.w D0,D0
00028A08 <AmiBlitz3.ab2@11336> RTS
00028A0C <AmiBlitz3.ab2@11344>   CMP.w #$30,D0                                            ;'0'
00028A10 <AmiBlitz3.ab2@11345>    BCS.w tstnum__skip
00028A14 <AmiBlitz3.ab2@11346>   CMP.w #$39,D0                                            ;'9'
00028A18 <AmiBlitz3.ab2@11347>    BHI.w tstnum__skip                                     
00028A1A <AmiBlitz3.ab2@11348>   CMP.w D0,D0
00028A1C <AmiBlitz3.ab2@11351> RTS
00028A3E <AmiBlitz3.ab2@11357>   !compare1                                                ;bsr.w tstalpha
00028A42 <AmiBlitz3.ab2@11358>    BEQ.w tstlab__skip
00028A54 <AmiBlitz3.ab2@11359>   !compare2                                                ;bsr.w tstnum2
00028A58 <AmiBlitz3.ab2@11360>    BEQ.w tstlab__skip
00028A5C <AmiBlitz3.ab2@11361>   CMP.w #$5F,D0                                            ;'_'
00028A60 <AmiBlitz3.ab2@11362>    BEQ.w tstlab__skip
00028A64 <AmiBlitz3.ab2@11363>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
00028A66 <AmiBlitz3.ab2@11366> RTS
00028A70 <AmiBlitz3.ab2@11371>   MOVE.w oldqflag,instringon
00028A76 <AmiBlitz3.ab2@11372>   MOVEA.l lastsourcepos,A5
00028A7C <AmiBlitz3.ab2@11375>   MOVE.l a5,beforeparameterfetch
00028A82 <AmiBlitz3.ab2@11376>   LEA ptr_parameterstore,A1
00028A84 <AmiBlitz3.ab2@11379>   MOVEQ.l #$00,D2
00028A8A <AmiBlitz3.ab2@11382>   LEA chartab,a0
00028A8C <AmiBlitz3.ab2@11383>   MOVEQ #0,d0
00028A92 <AmiBlitz3.ab2@11384>   MOVE.l A5,lastsourcepos
00028A9C <AmiBlitz3.ab2@11385>   MOVE.w instringon,oldqflag
00028A9E <AmiBlitz3.ab2@11388>     MOVE.b (a5)+,d0
00028AA2 <AmiBlitz3.ab2@11389>   CMP.b #$20,d0                                            ;space deftype
00028AA6 <AmiBlitz3.ab2@11390>   BEQ makename4__retry
00028AAC <AmiBlitz3.ab2@11392>   MOVE.w d0,lastchar
00028AB0 <AmiBlitz3.ab2@11393>   TST.b 0(a0,d0.w)
00028AB4 <AmiBlitz3.ab2@11394>   BNE makename__done
00028AB6 <AmiBlitz3.ab2@11403>   MOVE.b D0,(A1)+
00028AB8 <AmiBlitz3.ab2@11404>   ADDQ.l #1,D2
00028ABE <AmiBlitz3.ab2@11405>   MOVE.l A5,lastsourcepos
00028AC0 <AmiBlitz3.ab2@11408>   MOVE.b (a5)+,d0
00028AC6 <AmiBlitz3.ab2@11409>   MOVE.b d0,lastchar+1
00028ACA <AmiBlitz3.ab2@11410>   CMP.b #$20,d0
00028ACE <AmiBlitz3.ab2@11411>   BEQ makename__loop_l20
00028AD2 <AmiBlitz3.ab2@11413>   TST.b 0(a0,d0)
00028AD6 <AmiBlitz3.ab2@11414>   BEQ makename__loop
00028ADA <AmiBlitz3.ab2@11415>   CMP.b #2,d0
00028ADE <AmiBlitz3.ab2@11416>   BNE makename__loop_lf1
00028AE4 <AmiBlitz3.ab2@11417>   MOVEA.l usedfrom,A5
00028AEA <AmiBlitz3.ab2@11418>   CLR.l usedfrom
00028AEE <AmiBlitz3.ab2@11419> BRA makename__loop_ln1
00028AF2 <AmiBlitz3.ab2@11422>   CMP.b #1,d0
00028AF6 <AmiBlitz3.ab2@11423>   BNE makename__loop_l20
00028AFA <AmiBlitz3.ab2@11424>   MOVEA.l cmakea5(PC),A5
00028AFE <AmiBlitz3.ab2@11425> BRA makename__loop_ln1
00028B02 <AmiBlitz3.ab2@11428>   CMP.b #$7e,d0
00028B06 <AmiBlitz3.ab2@11429>             BNE makename__loop_lt
00028B0C <AmiBlitz3.ab2@11430>             TST.w cmake
00028B10 <AmiBlitz3.ab2@11431>             BNE.w makename__loop_a1
00028B12 <AmiBlitz3.ab2@11432>             SUBQ.l #1,a5
00028B16 <AmiBlitz3.ab2@11433>             BSR.w get1bytemain
00028B1A <AmiBlitz3.ab2@11434> BRA makename__loop
00028B1E <AmiBlitz3.ab2@11438> BRA makename__loop_gpex
00028B22 <AmiBlitz3.ab2@11442>   BSR.w getchar
00028B44 <AmiBlitz3.ab2@11443>    !compare1                                               ;bsr.w tstalpha
00028B48 <AmiBlitz3.ab2@11444>    BEQ.w makename__loop_getp1
00028B5A <AmiBlitz3.ab2@11445>    !compare2                                               ;bsr.w tstnum
00028B5E <AmiBlitz3.ab2@11446>    BEQ.w makename__loop_getp1
00028B62 <AmiBlitz3.ab2@11447>   CMP.w #$5F,D0                                            ;'_'
00028B66 <AmiBlitz3.ab2@11448>    BEQ.w makename__loop_getp1
00028B6A <AmiBlitz3.ab2@11449>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
00028B6E <AmiBlitz3.ab2@11453>       BNE makename__loop_gpex
00028B72 <AmiBlitz3.ab2@11454>       CMP.b #$20,d0
00028B76 <AmiBlitz3.ab2@11455>       BNE.w makename__loop
00028B78 <AmiBlitz3.ab2@11458>      TST.b d0
00028B7C <AmiBlitz3.ab2@11459>      BPL makename__loop_l10
00028B7E <AmiBlitz3.ab2@11460>      SUBQ.l #1,a5
00028B82 <AmiBlitz3.ab2@11461>      BSR get1byte_
00028B86 <AmiBlitz3.ab2@11464>    CMP.w #$20,D0
00028B8A <AmiBlitz3.ab2@11465>    BNE.w makename__done
00028B8C <AmiBlitz3.ab2@11466>    MOVEQ #0,d0
00028B92 <AmiBlitz3.ab2@11467>   MOVE.l a5,lastsourcepos
00028B94 <AmiBlitz3.ab2@11470>   MOVE.b (a5)+,d0                                          ;neuneu
00028B98 <AmiBlitz3.ab2@11471>   BPL makename__loop_l101:
00028B9A <AmiBlitz3.ab2@11472>   ASL.w #8,d0
00028B9C <AmiBlitz3.ab2@11473>   MOVE.b (a5)+,d0
00028BA2 <AmiBlitz3.ab2@11476>   TST.w instringon
00028BA6 <AmiBlitz3.ab2@11477>   BNE makename__loop_l102
00028BAA <AmiBlitz3.ab2@11478>   CMP.b #$20,d0
00028BAE <AmiBlitz3.ab2@11479>   BEQ makename__loop_l103
00028BB2 <AmiBlitz3.ab2@11480>   CMP.b #";",d0
00028BB6 <AmiBlitz3.ab2@11481>   BNE makename__loop_l102
00028BB8 <AmiBlitz3.ab2@11484>   MOVE.b (A5)+,D0
00028BBC <AmiBlitz3.ab2@11485>              BEQ makename__loop_l1
00028BC0 <AmiBlitz3.ab2@11486>              CMP.b #":",d0
00028BC4 <AmiBlitz3.ab2@11487>              BNE makename__loop_lr                         ;:@
00028BC8 <AmiBlitz3.ab2@11488>              CMP.b #"@",(a5)
00028BCC <AmiBlitz3.ab2@11489>              BNE makename__loop_lr
00028BCE <AmiBlitz3.ab2@11490>              ADDQ #1,a5
00028BD4 <AmiBlitz3.ab2@11494>   MOVE.w d0,lastchar
00028BD8 <AmiBlitz3.ab2@11498>   CMP.b #";",d0
00028BDC <AmiBlitz3.ab2@11499>   BEQ makename__done_l11
00028BDE <AmiBlitz3.ab2@11500>   CLR.b (A1)
00028BE0 <AmiBlitz3.ab2@11502>   TST.w D2
00028BE2 <AmiBlitz3.ab2@11503> RTS
00028BE4 <AmiBlitz3.ab2@11506>   CLR.b (a1)
00028BE6 <AmiBlitz3.ab2@11507>   MOVEQ #0,d0
00028BEC <AmiBlitz3.ab2@11508>   MOVE.w d0,lastchar
00028BEE <AmiBlitz3.ab2@11510>   TST.w D2
00028BF0 <AmiBlitz3.ab2@11511> RTS
00028BF2 <AmiBlitz3.ab2@11517>   MOVE.l (A2),D0
00028BF6 <AmiBlitz3.ab2@11520>   BEQ.w findlast__here
00028BF8 <AmiBlitz3.ab2@11521>   MOVEA.l D0,A2
00028BFC <AmiBlitz3.ab2@11522> BRA.w findlast__loop
00028C00 <AmiBlitz3.ab2@11525> BRA.w reget
00028C02 <AmiBlitz3.ab2@11531>   MOVE.l (A2),-(A7)
00028C06 <AmiBlitz3.ab2@11532>   BSR.w addlabel
00028C08 <AmiBlitz3.ab2@11533>   MOVE.l (A7)+,(A2)
00028C0A <AmiBlitz3.ab2@11534> RTS
00028C10 <AmiBlitz3.ab2@11539>   CLR.l fp0addr
00028C16 <AmiBlitz3.ab2@11540>   TST.w dirmode
00028C1A <AmiBlitz3.ab2@11541>    BNE.w illdirerr
00028C1C <AmiBlitz3.ab2@11542>   MOVEQ.l #$00,D0
00028C1E <AmiBlitz3.ab2@11543>   MOVE.w D7,D0
00028C20 <AmiBlitz3.ab2@11544>   ADD.w D2,D0
00028C22 <AmiBlitz3.ab2@11545>   ADDQ.w #1,D0
00028C24 <AmiBlitz3.ab2@11546>   MOVE.w D0,D2
00028C26 <AmiBlitz3.ab2@11547>   ADDQ.l #2,d0
00028C28 <AmiBlitz3.ab2@11548>   MOVEQ.l #$01,D1
00028C2E <AmiBlitz3.ab2@11549>   MOVEA.l _execbase,A6
00028C34 <AmiBlitz3.ab2@11550>   MOVE.l mempool2,a0
00028C38 <AmiBlitz3.ab2@11551>   JSR _AllocPooled(a6)
00028C3E <AmiBlitz3.ab2@11553>   MOVE.l lastlabel,a2
00028C40 <AmiBlitz3.ab2@11554>   MOVE.l D0,(A2)
00028C42 <AmiBlitz3.ab2@11555>   MOVE.l d0,a0
00028C44 <AmiBlitz3.ab2@11556>   CLR.l (a0)
00028C4A <AmiBlitz3.ab2@11557>   MOVE.l a0,lastlabel
00028C4C <AmiBlitz3.ab2@11558>   MOVE.l d0,A2
00028C50 <AmiBlitz3.ab2@11559>   LEA -$1(A0,D7.W),A0
00028C52 <AmiBlitz3.ab2@11560>   MOVE.b D2,(A0)+
00028C58 <AmiBlitz3.ab2@11561>   LEA ptr_parameterstore,A1
00028C5A <AmiBlitz3.ab2@11562>   MOVEQ #0,d0
00028C5C <AmiBlitz3.ab2@11563>   MOVEQ #0,d1
00028C5E <AmiBlitz3.ab2@11566>   MOVE.b (A1)+,d1
00028C62 <AmiBlitz3.ab2@11567>    BEQ 'l1
00028C68 <AmiBlitz3.ab2@11568>    !hashalgo
00028C6A <AmiBlitz3.ab2@11569>    MOVE.b d1,(A0)+
00028C6E <AmiBlitz3.ab2@11570> BRA addlabel_loop2a
00028C70 <AmiBlitz3.ab2@11573>    CLR.b (a0)+
00028C76 <AmiBlitz3.ab2@11574>    LEA labelhash,a0
00028C7C <AmiBlitz3.ab2@11575>    AND.l #hashsize,d0
00028C7E <AmiBlitz3.ab2@11576>    ASL.l #2,d0
00028C82 <AmiBlitz3.ab2@11577>    MOVE.l 0(a0,d0),d1
00028C86 <AmiBlitz3.ab2@11578>    MOVE.l d1,$c(a2)
00028C8A <AmiBlitz3.ab2@11579>    MOVE.l a2,0(a0,d0)
00028C8C <AmiBlitz3.ab2@11580>    MOVEQ #0,d0
00028C90 <AmiBlitz3.ab2@11581> BRA.w reget
00028C96 <AmiBlitz3.ab2@11585>    TST.b newvariable
00028C9A <AmiBlitz3.ab2@11586>    BNE addlabel
00028CA0 <AmiBlitz3.ab2@11589>   TST.w dirmode
00028CA4 <AmiBlitz3.ab2@11590>    BNE.w illdirerr
00028CA6 <AmiBlitz3.ab2@11591>   MOVEQ.l #$00,D0
00028CA8 <AmiBlitz3.ab2@11592>   MOVE.w D7,D0
00028CAA <AmiBlitz3.ab2@11593>   ADD.w D2,D0
00028CAC <AmiBlitz3.ab2@11594>   ADDQ.w #1,D0
00028CAE <AmiBlitz3.ab2@11595>   MOVE.w D0,D2
00028CB0 <AmiBlitz3.ab2@11596>   MOVEQ.l #$01,D1
00028CB6 <AmiBlitz3.ab2@11597>   MOVEA.l _execbase,A6
00028CBC <AmiBlitz3.ab2@11598>   MOVE.l mempool2,a0
00028CC0 <AmiBlitz3.ab2@11599>   JSR _AllocPooled(a6)
00028CC2 <AmiBlitz3.ab2@11600>   MOVEA.l D0,A0
00028CC8 <AmiBlitz3.ab2@11602>   LEA varbase,a2
00028CCA <AmiBlitz3.ab2@11603>   MOVE.l (a2),(a0)
00028CCC <AmiBlitz3.ab2@11604>   MOVE.l A0,(A2)
00028CCE <AmiBlitz3.ab2@11605>   MOVEA.l A0,A2
00028CD2 <AmiBlitz3.ab2@11606>   LEA -$1(A0,D7.W),A0
00028CD4 <AmiBlitz3.ab2@11607>   MOVE.b D2,(A0)+
00028CDA <AmiBlitz3.ab2@11608>   LEA ptr_parameterstore,A1
00028CDC <AmiBlitz3.ab2@11609>   MOVEQ #0,d0
00028CDE <AmiBlitz3.ab2@11610>   MOVEQ #0,d1
00028CE0 <AmiBlitz3.ab2@11613>   MOVE.b (A1)+,d1
00028CE4 <AmiBlitz3.ab2@11614>    BEQ 'l12
00028CEA <AmiBlitz3.ab2@11615>    !hashalgo
00028CEC <AmiBlitz3.ab2@11616>    MOVE.b d1,(A0)+
00028CF0 <AmiBlitz3.ab2@11617> BRA 'l11
00028CF2 <AmiBlitz3.ab2@11620>   CLR.b (a0)+
00028CF8 <AmiBlitz3.ab2@11621>   LEA variablehash,a0
00028CFE <AmiBlitz3.ab2@11622>    AND.l #hashsize,d0
00028D00 <AmiBlitz3.ab2@11623>    ASL.l #2,d0
00028D04 <AmiBlitz3.ab2@11624>    MOVE.l 0(a0,d0),d1
00028D08 <AmiBlitz3.ab2@11625>    MOVE.l d1,$e(a2)
00028D0C <AmiBlitz3.ab2@11626>    MOVE.l a2,0(a0,d0)
00028D0E <AmiBlitz3.ab2@11627>    MOVEQ #0,d0
00028D12 <AmiBlitz3.ab2@11628> BRA.w reget
00028D18 <AmiBlitz3.ab2@11632>   TST.w dirmode
00028D1C <AmiBlitz3.ab2@11633>    BNE.w illdirerr
00028D1E <AmiBlitz3.ab2@11640>   MOVEQ.l #$00,D0
00028D20 <AmiBlitz3.ab2@11641>   MOVE.w D7,D0
00028D22 <AmiBlitz3.ab2@11642>   ADD.w D2,D0
00028D24 <AmiBlitz3.ab2@11643>   ADDQ.w #1,D0
00028D26 <AmiBlitz3.ab2@11644>   MOVE.w D0,D2
00028D28 <AmiBlitz3.ab2@11645>   MOVEQ.l #$01,D1
00028D2E <AmiBlitz3.ab2@11646>   MOVEA.l _execbase,A6
00028D34 <AmiBlitz3.ab2@11647>   MOVE.l mempool2,a0
00028D38 <AmiBlitz3.ab2@11648>   JSR _AllocPooled(a6)
00028D3A <AmiBlitz3.ab2@11650>   MOVEA.l D0,A0
00028D3C <AmiBlitz3.ab2@11651>   MOVE.l A0,(A2)
00028D3E <AmiBlitz3.ab2@11652>   CLR.l (a0)
00028D42 <AmiBlitz3.ab2@11653>   CLR.l 8(a0)                                              ;clear next
00028D44 <AmiBlitz3.ab2@11654>   MOVEA.l A0,A2
00028D48 <AmiBlitz3.ab2@11655>   LEA -$1(A0,D7.W),A0
00028D4A <AmiBlitz3.ab2@11656>   MOVE.b D2,(A0)+                                          ;put in struct length
00028D50 <AmiBlitz3.ab2@11657>   LEA ptr_parameterstore,A1
00028D52 <AmiBlitz3.ab2@11658>   MOVEQ #0,d0
00028D54 <AmiBlitz3.ab2@11659>   MOVEQ #0,d1
00028D56 <AmiBlitz3.ab2@11662>   MOVE.b (A1)+,d1
00028D58 <AmiBlitz3.ab2@11665>   MOVE.b d1,(A0)+
00028D5C <AmiBlitz3.ab2@11666>   BNE.w addlabel_loop2
00028D60 <AmiBlitz3.ab2@11667> BRA.w reget
00028D62 <AmiBlitz3.ab2@11671>   MOVEQ.l #$13,D7
00028D68 <AmiBlitz3.ab2@11672>   LEA constantbase,A2
00028D6C <AmiBlitz3.ab2@11673> BRA.w findlab
00028D6E <AmiBlitz3.ab2@11677>   MOVEQ.l #$05+8,D7                                        ;#5,d7 org source
00028D74 <AmiBlitz3.ab2@11678>   LEA xinclude_base,A2
00028D78 <AmiBlitz3.ab2@11679> BRA.w findlab
00028D7A <AmiBlitz3.ab2@11683>   MOVEQ.l #$09,D7
00028D80 <AmiBlitz3.ab2@11684>   LEA firstconst,A2
00028D84 <AmiBlitz3.ab2@11685> BRA.w findlab
00028D86 <AmiBlitz3.ab2@11689>   MOVEQ.l #$0d,D7                                          ;find macro
00028D8C <AmiBlitz3.ab2@11690>   LEA macrobase,A2
00028D90 <AmiBlitz3.ab2@11691> BRA.w findlab
00028D96 <AmiBlitz3.ab2@11695>   LEA labelhash,A2
00028D98 <AmiBlitz3.ab2@11696>   MOVEQ.l #$13,D7
00028D9A <AmiBlitz3.ab2@11697>   EXT.l d2
00028DA0 <AmiBlitz3.ab2@11698>   LEA ptr_parameterstore,A0
00028DA2 <AmiBlitz3.ab2@11699>   MOVEQ #0,d0
00028DA4 <AmiBlitz3.ab2@11700>   MOVEQ #0,d1
00028DA6 <AmiBlitz3.ab2@11703>     MOVE.b (a0)+,d1
00028DAA <AmiBlitz3.ab2@11704>     BEQ 'l15
00028DB0 <AmiBlitz3.ab2@11705>     !hashalgo
00028DB4 <AmiBlitz3.ab2@11706> BRA 'l20
00028DBA <AmiBlitz3.ab2@11709>   AND.l #hashsize,d0
00028DBC <AmiBlitz3.ab2@11710>   ASL.l #2,d0
00028DC0 <AmiBlitz3.ab2@11711>   MOVE.l 0(a2,d0),d0
00028DC4 <AmiBlitz3.ab2@11712> BRA 'l11
00028DC8 <AmiBlitz3.ab2@11715>   MOVE.l $c(A2),D0                                         ;find label
00028DCC <AmiBlitz3.ab2@11718>   BEQ findlab__no
00028DCE <AmiBlitz3.ab2@11719>   MOVEA.l D0,A2
00028DD0 <AmiBlitz3.ab2@11720>   MOVEQ.l #$00,D0
00028DD4 <AmiBlitz3.ab2@11721>   MOVE.b -$1(A2,D7.l),D0
00028DDA <AmiBlitz3.ab2@11722>   LEA ptr_parameterstore,A0
00028DDC <AmiBlitz3.ab2@11723>   SUB.l D7,D0
00028DDE <AmiBlitz3.ab2@11724>   SUBQ.l #1,D0
00028DE0 <AmiBlitz3.ab2@11725>   CMP.l D0,D2
00028DE4 <AmiBlitz3.ab2@11726>    BNE.b 'l10
00028DE8 <AmiBlitz3.ab2@11727>   LEA $0(A2,D7.W),A1
00028DEA <AmiBlitz3.ab2@11728>   SUBQ.l #1,D0
00028DEC <AmiBlitz3.ab2@11731>     MOVE.b (a1)+,d1
00028DEE <AmiBlitz3.ab2@11732>     CMP.b (a0)+,d1
00028DF2 <AmiBlitz3.ab2@11734>     BNE.b 'l10
00028DF6 <AmiBlitz3.ab2@11735>   DBF D0,'l201
00028DFA <AmiBlitz3.ab2@11737>   BSR.w reget
00028DFC <AmiBlitz3.ab2@11738>   CMP.w D0,D0
00028DFE <AmiBlitz3.ab2@11739> RTS
00028E00 <AmiBlitz3.ab2@11743>   MOVEQ.l #$0B,D7
00028E04 <AmiBlitz3.ab2@11744> BRA.w findlab
00028E0A <AmiBlitz3.ab2@11748>   LEA firstproc,A2
00028E10 <AmiBlitz3.ab2@11749>   MOVE.l #$21+#funcentry_extend,D7
00028E14 <AmiBlitz3.ab2@11750> BRA findlab
00028E1A <AmiBlitz3.ab2@11754>   LEA firstfor,A2
00028E1C <AmiBlitz3.ab2@11755>   MOVEQ.l #$11,D7
00028E20 <AmiBlitz3.ab2@11756> BRA.w findlab
00028E22 <AmiBlitz3.ab2@11760>   MOVEQ.l #$0F,D7
00028E26 <AmiBlitz3.ab2@11761> BRA.w findlab
00028E28 <AmiBlitz3.ab2@11765>   MOVEQ.l #$0F+4,D7
00028E2E <AmiBlitz3.ab2@11766>   TST.b newvariable
00028E32 <AmiBlitz3.ab2@11767>    BNE.w findlab
00028E38 <AmiBlitz3.ab2@11768>   LEA variablehash,A2
00028E3E <AmiBlitz3.ab2@11769>   LEA ptr_parameterstore,A0
00028E40 <AmiBlitz3.ab2@11770>   MOVEQ #0,d0
00028E42 <AmiBlitz3.ab2@11771>   MOVEQ #0,d1
00028E44 <AmiBlitz3.ab2@11774>     MOVE.b (a0)+,d1
00028E48 <AmiBlitz3.ab2@11775>     BEQ 'l15
00028E4E <AmiBlitz3.ab2@11776>     !hashalgo
00028E52 <AmiBlitz3.ab2@11777> BRA 'l20
00028E58 <AmiBlitz3.ab2@11780>   AND.l #hashsize,d0
00028E5A <AmiBlitz3.ab2@11781>   ASL.l #2,d0
00028E5E <AmiBlitz3.ab2@11782>   MOVE.l 0(a2,d0),d0
00028E62 <AmiBlitz3.ab2@11783> BRA 'l11
00028E66 <AmiBlitz3.ab2@11786>   MOVE.l $e(A2),D0                                         ;find label
00028E6A <AmiBlitz3.ab2@11789>   BEQ findlab__no
00028E6C <AmiBlitz3.ab2@11790>   MOVEA.l D0,A2
00028E6E <AmiBlitz3.ab2@11791>   MOVEQ.l #$00,D0
00028E72 <AmiBlitz3.ab2@11792>   MOVE.b -$1(A2,D7.W),D0
00028E78 <AmiBlitz3.ab2@11793>   LEA ptr_parameterstore,A0
00028E7A <AmiBlitz3.ab2@11794>   SUB.w D7,D0
00028E7C <AmiBlitz3.ab2@11795>   SUBQ.l #1,D0
00028E7E <AmiBlitz3.ab2@11796>   CMP.w D0,D2
00028E82 <AmiBlitz3.ab2@11797>    BNE.b 'l10
00028E86 <AmiBlitz3.ab2@11798>   LEA $0(A2,D7.W),A1
00028E88 <AmiBlitz3.ab2@11799>   SUBQ.l #1,D0
00028E8A <AmiBlitz3.ab2@11802>     MOVE.b (a1)+,d1
00028E8C <AmiBlitz3.ab2@11803>     CMP.b (a0)+,d1
00028E90 <AmiBlitz3.ab2@11805>     BNE.b 'l10
00028E94 <AmiBlitz3.ab2@11806>   DBF D0,'l201
00028E98 <AmiBlitz3.ab2@11808>   BSR.w reget
00028E9A <AmiBlitz3.ab2@11809>   CMP.w D0,D0
00028E9C <AmiBlitz3.ab2@11810> RTS
00028E9E <AmiBlitz3.ab2@11823>     MOVE.l (A2),D0                                         ;find label
00028EA2 <AmiBlitz3.ab2@11824>      BEQ.b findlab__no
00028EA4 <AmiBlitz3.ab2@11825>     MOVEA.l D0,A2
00028EA6 <AmiBlitz3.ab2@11826>     MOVEQ.l #$00,D0
00028EAA <AmiBlitz3.ab2@11827>     MOVE.b -$1(A2,D7.W),D0
00028EAC <AmiBlitz3.ab2@11828>     SUB.l D7,D0
00028EAE <AmiBlitz3.ab2@11829>     SUBQ.l #1,D0
00028EB0 <AmiBlitz3.ab2@11830>   CMP.w D0,D2
00028EB4 <AmiBlitz3.ab2@11831>   BNE.b findlab__loop
00028EB8 <AmiBlitz3.ab2@11833>   LEA $0(A2,D7.W),A1
00028EBE <AmiBlitz3.ab2@11834>   LEA ptr_parameterstore,A0
00028EC0 <AmiBlitz3.ab2@11835>   SUBQ.l #1,D0
00028EC2 <AmiBlitz3.ab2@11838>     MOVE.b (a1)+,d1
00028EC4 <AmiBlitz3.ab2@11839>     CMP.b (a0)+,d1
00028EC8 <AmiBlitz3.ab2@11841>     BNE.b findlab__loop
00028ECC <AmiBlitz3.ab2@11842>   DBF D0,findlab__loop2
00028ED0 <AmiBlitz3.ab2@11844>   BSR.w reget
00028ED2 <AmiBlitz3.ab2@11845>   CMP.w D0,D0
00028ED4 <AmiBlitz3.ab2@11846> RTS
00028ED8 <AmiBlitz3.ab2@11849>   BSR.w reget
00028EDA <AmiBlitz3.ab2@11850>   MOVEQ.l #-$01,D1
00028EDC <AmiBlitz3.ab2@11851> RTS
00028EE2 <AmiBlitz3.ab2@11855>   MOVEA.l alllocals,A4
00028EE8 <AmiBlitz3.ab2@11856>   CLR.l alllocals
00028EEC <AmiBlitz3.ab2@11860>     CMPA.w #$0,A4
00028EF0 <AmiBlitz3.ab2@11861>      BEQ.b freeprocvs__done
00028EF4 <AmiBlitz3.ab2@11862>     MOVEA.l $4(A4),A3
00028EF8 <AmiBlitz3.ab2@11864>     MOVEA.l $8(A4),A3
00028EFA <AmiBlitz3.ab2@11866>     MOVEA.l A4,A1
00028EFC <AmiBlitz3.ab2@11867>     MOVEA.l (A4),A4
00028EFE <AmiBlitz3.ab2@11868>     MOVEQ.l #$0C,D0
00028F04 <AmiBlitz3.ab2@11869>     MOVEA.l _execbase,A6
00028F0A <AmiBlitz3.ab2@11870>     MOVE.l mempool,a0
00028F0E <AmiBlitz3.ab2@11871>     JSR _FreePooled(A6)
00028F12 <AmiBlitz3.ab2@11872> BRA.b freeprocvs__loop
00028F18 <AmiBlitz3.ab2@11875>   CLR.l firstglob                                          ;fix 2*aclearallvar called
00028F1E <AmiBlitz3.ab2@11876>   CLR.l firstlocal
00028F24 <AmiBlitz3.ab2@11877>   CLR.l sharebase
00028F2A <AmiBlitz3.ab2@11878>   TST.l mempool2
00028F2E <AmiBlitz3.ab2@11879>   BEQ freeprocvs__done_l10
00028F34 <AmiBlitz3.ab2@11881>   MOVEA.l _execbase,A6
00028F3A <AmiBlitz3.ab2@11882>   MOVE.l mempool2,a0
00028F40 <AmiBlitz3.ab2@11883>   CLR.l mempool2
00028F44 <AmiBlitz3.ab2@11884>   JSR _DeletePool(a6)
00028F4A <AmiBlitz3.ab2@11887>   MOVE.l _execbase,a6
00028F50 <AmiBlitz3.ab2@11888>   MOVE.l #$10000,d0
00028F56 <AmiBlitz3.ab2@11889>   MOVE.l #80000,d1
00028F58 <AmiBlitz3.ab2@11890>   MOVE.l d1,d2
00028F5C <AmiBlitz3.ab2@11891>   JSR _CreatePool(a6)
00028F62 <AmiBlitz3.ab2@11892>   MOVE.l d0,mempool2
00028F64 <AmiBlitz3.ab2@11893> RTS
00028F68 <AmiBlitz3.ab2@11897>   CMPA.w #$0,A3
00028F6C <AmiBlitz3.ab2@11898>    BEQ.w freevars__done
00028F6E <AmiBlitz3.ab2@11899>   MOVEA.l A3,A1
00028F70 <AmiBlitz3.ab2@11900>   MOVEA.l (A3),A3
00028F72 <AmiBlitz3.ab2@11901>   MOVEQ.l #$00,D0
00028F76 <AmiBlitz3.ab2@11902>   MOVE.b $E(A1),D0
00028F7C <AmiBlitz3.ab2@11903>   MOVEA.l _execbase,A6
00028F82 <AmiBlitz3.ab2@11904>   MOVE.l mempool2,a0
00028F86 <AmiBlitz3.ab2@11905>   JSR _FreePooled(A6)
00028F8A <AmiBlitz3.ab2@11906> BRA.w freevars
00028F8E <AmiBlitz3.ab2@11909>     CMPA.w #$0,A3
00028F92 <AmiBlitz3.ab2@11910>      BEQ.w freevars__done
00028F94 <AmiBlitz3.ab2@11911>     MOVEA.l A3,A1
00028F96 <AmiBlitz3.ab2@11912>     MOVEA.l (A3),A3
00028F98 <AmiBlitz3.ab2@11913>     MOVEQ.l #$00,D0
00028F9C <AmiBlitz3.ab2@11914>     MOVE.b $E+4(A1),D0
00028FA2 <AmiBlitz3.ab2@11915>     MOVEA.l _execbase,A6
00028FA8 <AmiBlitz3.ab2@11916>     MOVE.l mempool2,a0
00028FAC <AmiBlitz3.ab2@11917>     JSR _FreePooled(A6)
00028FB0 <AmiBlitz3.ab2@11918> BRA.w freevarsb
00028FB2 <AmiBlitz3.ab2@11921> RTS
00028FB8 <AmiBlitz3.ab2@11925>   MOVEA.l currentlabeladdr,A0
00028FBE <AmiBlitz3.ab2@11926>   MOVE.l a0,lastlabel
00028FC0 <AmiBlitz3.ab2@11927>   MOVEA.l (A0),A2
00028FC2 <AmiBlitz3.ab2@11928>   CLR.l (A0)
00028FC8 <AmiBlitz3.ab2@11929>   MOVEA.l _execbase,A6
00028FCC <AmiBlitz3.ab2@11932>   CMPA.w #$0,A2
00028FD0 <AmiBlitz3.ab2@11933>    BEQ.w clearlabels__done
00028FD4 <AmiBlitz3.ab2@11934>   MOVE.l $4(A2),D0
00028FD8 <AmiBlitz3.ab2@11935>   BTST #$0,D0
00028FDC <AmiBlitz3.ab2@11936>    BNE.w clearlabels__skip
00028FDE <AmiBlitz3.ab2@11937>   MOVEA.l D0,A3
00028FE2 <AmiBlitz3.ab2@11940>     CMPA.w #$0,A3
00028FE6 <AmiBlitz3.ab2@11941>      BEQ.w clearlabels__skip
00028FE8 <AmiBlitz3.ab2@11942>     MOVEA.l A3,A1
00028FEA <AmiBlitz3.ab2@11943>     MOVEA.l (A3),A3
00028FEC <AmiBlitz3.ab2@11944>     MOVEQ.l #$0C+2,D0                                      ;cancel fix
00028FF2 <AmiBlitz3.ab2@11945>     MOVE.l mempool,a0
00028FF6 <AmiBlitz3.ab2@11946>     JSR _FreePooled(A6)
00028FFA <AmiBlitz3.ab2@11947> BRA.w clearlabels__loop2
00028FFC <AmiBlitz3.ab2@11950>   MOVEQ.l #$00,D0
00029000 <AmiBlitz3.ab2@11951>   MOVE.b $12(A2),D0
00029002 <AmiBlitz3.ab2@11952>   MOVEA.l A2,A1
00029004 <AmiBlitz3.ab2@11953>   MOVEA.l (A2),A2
0002900A <AmiBlitz3.ab2@11954>   MOVE.l mempool2,a0
0002900E <AmiBlitz3.ab2@11956> BRA.w clearlabels__loop
00029010 <AmiBlitz3.ab2@11959> RTS
00029016 <AmiBlitz3.ab2@11963>   MOVEA.l firstpend,A3
0002901C <AmiBlitz3.ab2@11964>   CLR.l firstpend
00029022 <AmiBlitz3.ab2@11965>   MOVEA.l _execbase,A6
00029026 <AmiBlitz3.ab2@11968>     CMPA.w #$0,A3
0002902A <AmiBlitz3.ab2@11969>      BEQ.w freepends__done
0002902C <AmiBlitz3.ab2@11970>     MOVEA.l A3,A1
0002902E <AmiBlitz3.ab2@11971>     MOVEQ.l #$08,D0
00029030 <AmiBlitz3.ab2@11972>     MOVEA.l (A3),A3
00029036 <AmiBlitz3.ab2@11973>     MOVE.l mempool,a0
0002903A <AmiBlitz3.ab2@11974>     JSR _FreePooled(A6)
0002903E <AmiBlitz3.ab2@11975> BRA.w fpnd2
00029040 <AmiBlitz3.ab2@11978> RTS
00029046 <AmiBlitz3.ab2@11982>   MOVEA.l firstproc,A2
0002904C <AmiBlitz3.ab2@11983>   CLR.l firstproc
00029052 <AmiBlitz3.ab2@11984>   MOVEA.l _execbase,A6
00029056 <AmiBlitz3.ab2@11987>     CMPA.w #$0,A2
0002905A <AmiBlitz3.ab2@11988>      BEQ.w clearfunctionlist__done
0002905C <AmiBlitz3.ab2@11989>     MOVEA.l A2,A1
0002905E <AmiBlitz3.ab2@11990>     MOVEA.l (A2),A2
00029060 <AmiBlitz3.ab2@11991>     MOVEQ.l #$00,D0
00029064 <AmiBlitz3.ab2@11992>     MOVE.b $20+#funcentry_extend(A1),D0
0002906A <AmiBlitz3.ab2@11993>     MOVE.l mempool2,a0
0002906E <AmiBlitz3.ab2@11994>     JSR _FreePooled(A6)
00029072 <AmiBlitz3.ab2@11995> BRA.w clearfunctionlist__loop
00029074 <AmiBlitz3.ab2@11998> RTS
00029078 <AmiBlitz3.ab2@12002>   CMPA.w #$0,A2
0002907C <AmiBlitz3.ab2@12003>    BEQ.w freetypes__done
00029080 <AmiBlitz3.ab2@12004>   MOVEA.l $4(A2),A3
00029084 <AmiBlitz3.ab2@12005>   CMPA.w #$FF,A3
00029088 <AmiBlitz3.ab2@12006>    BEQ.w freetypes__noway
0002908C <AmiBlitz3.ab2@12010>    BSR.w freevars
0002908E <AmiBlitz3.ab2@12013>     MOVEA.l A2,A1
00029090 <AmiBlitz3.ab2@12014>     MOVEA.l (A2),A2
00029092 <AmiBlitz3.ab2@12015>     MOVEQ.l #$00,D0
00029096 <AmiBlitz3.ab2@12016>     MOVE.b $A(A1),D0
0002909C <AmiBlitz3.ab2@12017>     MOVEA.l _execbase,A6
000290A2 <AmiBlitz3.ab2@12018>     MOVE.l mempool2,a0
000290A6 <AmiBlitz3.ab2@12019>     JSR _FreePooled(A6)
000290AA <AmiBlitz3.ab2@12020> BRA.w freetypes
000290AC <AmiBlitz3.ab2@12023> RTS
000290B2 <AmiBlitz3.ab2@12027>   JSR uselib2
000290B8 <AmiBlitz3.ab2@12029>   CLR.w notshared
000290BE <AmiBlitz3.ab2@12030>   CLR.w varmode
000290C4 <AmiBlitz3.ab2@12031>   MOVE.w proceduremode,D1
000290C8 <AmiBlitz3.ab2@12032>    BNE.w JL_0_8F4E
000290CE <AmiBlitz3.ab2@12033>   LEA varbase,A2
000290D4 <AmiBlitz3.ab2@12034>   LEA ptr_parameterstore,a0
000290D8 <AmiBlitz3.ab2@12035>   CMP.b #$22,(a0)
000290DC <AmiBlitz3.ab2@12036>   BNE JL_0_8E5E
000290DE <AmiBlitz3.ab2@12037>   MOVEQ #0,d0
000290E4 <AmiBlitz3.ab2@12038> JMP error
000290E8 <AmiBlitz3.ab2@12041>   BSR.w findvariable
000290EC <AmiBlitz3.ab2@12044>   BNE.w JL_0_8E7E
000290F2 <AmiBlitz3.ab2@12047>   MOVE.b flagmask+1,D1
000290F6 <AmiBlitz3.ab2@12048>   MOVE.b $7(A2),D3
000290F8 <AmiBlitz3.ab2@12049>   EOR.b D3,D1
000290FC <AmiBlitz3.ab2@12050>   BNE 'l2
00029104 <AmiBlitz3.ab2@12051>   CMP.b #2,nowdeclare
00029108 <AmiBlitz3.ab2@12052>   BEQ errormsg_declaredtwice
0002910C <AmiBlitz3.ab2@12053> BRA.w JL_0_8FA8
00029110 <AmiBlitz3.ab2@12056>   BSR.w findlab
00029114 <AmiBlitz3.ab2@12057>   BNE 'l1
0002911C <AmiBlitz3.ab2@12058>   CMP.b #2,nowdeclare
00029120 <AmiBlitz3.ab2@12059>   BEQ errormsg_declaredtwice
00029122 <AmiBlitz3.ab2@12060>   CMP.w d0,d0
00029126 <AmiBlitz3.ab2@12063> BRA.w JL_0_8E62
00029128 <AmiBlitz3.ab2@12066>    MOVE.l a2,-(a7)
0002912E <AmiBlitz3.ab2@12067>    LEA sharebase,a2
00029130 <AmiBlitz3.ab2@12068>    MOVEQ #$f+4,d7
00029134 <AmiBlitz3.ab2@12069>    BSR.w findlab
00029138 <AmiBlitz3.ab2@12070>    BEQ 'l2x
0002913A <AmiBlitz3.ab2@12071>    MOVE.l (a7)+,a2
0002913E <AmiBlitz3.ab2@12072> BRA 'cont
00029140 <AmiBlitz3.ab2@12075>   ADDQ.l #4,a7
00029146 <AmiBlitz3.ab2@12076>   CLR.w varmode
0002914C <AmiBlitz3.ab2@12077>   MOVE.b flagmask+1,D1
00029150 <AmiBlitz3.ab2@12078>   MOVE.b $7(A2),D3
00029152 <AmiBlitz3.ab2@12079>   EOR.b D3,D1
00029156 <AmiBlitz3.ab2@12080>   BNE vardeclareerr
0002915A <AmiBlitz3.ab2@12081> BRA JL_0_8FA8
00029160 <AmiBlitz3.ab2@12084>    MOVE.w nonew,D1
00029164 <AmiBlitz3.ab2@12085>    BNE.w nonewerr
0002916A <AmiBlitz3.ab2@12086>    TST.b nowdeclare
0002916E <AmiBlitz3.ab2@12087>    BNE 'l2
00029174 <AmiBlitz3.ab2@12088>    TST.b declare2
00029178 <AmiBlitz3.ab2@12089>    BEQ 'l1
0002917C <AmiBlitz3.ab2@12090>    CMP.b #$2e,d0
00029180 <AmiBlitz3.ab2@12091>    BEQ 'l2
00029184 <AmiBlitz3.ab2@12092>    CMP.b #"$",d0
00029188 <AmiBlitz3.ab2@12093>    BEQ 'l2
0002918C <AmiBlitz3.ab2@12094> BRA vardeclareerr
00029192 <AmiBlitz3.ab2@12097>   TST.b declare
00029196 <AmiBlitz3.ab2@12098>    BNE vardeclareerr
0002919A <AmiBlitz3.ab2@12101>   BSR.w addvariable
000291A0 <AmiBlitz3.ab2@12102>   NOT.w notshared
000291A2 <AmiBlitz3.ab2@12103>   MOVEA.l A2,A3
000291A8 <AmiBlitz3.ab2@12104>   MOVEA.l defaulttype,A2
000291AC <AmiBlitz3.ab2@12105>   CMP.w #$2E,D0
000291B0 <AmiBlitz3.ab2@12106>    BEQ.w JL_0_8EB8
000291B4 <AmiBlitz3.ab2@12107>   CMP.w #$24,D0
000291B8 <AmiBlitz3.ab2@12108>    BNE.w JL_0_8ECA
000291BE <AmiBlitz3.ab2@12109>   LEA newtype_string,A2
000291C2 <AmiBlitz3.ab2@12110>    BSR.w get1bytemain
000291C6 <AmiBlitz3.ab2@12111> BRA.w JL_0_8ECA
000291CC <AmiBlitz3.ab2@12114> JMP JUMP_notypeerr
000291D0 <AmiBlitz3.ab2@12117>    BSR.w getparameter2
000291D6 <AmiBlitz3.ab2@12118>   LEA newtypebase,A2
000291DA <AmiBlitz3.ab2@12119>    BSR.w findtype
000291DE <AmiBlitz3.ab2@12120>    BNE.w notypeerr3
000291E4 <AmiBlitz3.ab2@12123>   CMPA.l #newtype_byte,A2
000291E8 <AmiBlitz3.ab2@12124>    BEQ.w JL_0_8EECb
000291EE <AmiBlitz3.ab2@12125>   MOVE.w varmode,D1
000291F2 <AmiBlitz3.ab2@12126>    BNE.w JL_0_8EE4b
000291F8 <AmiBlitz3.ab2@12127>   ADDQ.w #1,globalvarpointer
00029200 <AmiBlitz3.ab2@12130>   BCLR #$0,globalvarpointer+1
00029204 <AmiBlitz3.ab2@12133>   MOVE.l A2,$A(A3)
0002920C <AmiBlitz3.ab2@12134>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002920E <AmiBlitz3.ab2@12136>   MOVEQ.l #$04,D1
00029216 <AmiBlitz3.ab2@12137>   BTST #$0,flagmask+1
0002921A <AmiBlitz3.ab2@12138>    BNE.w JL_0_8F22b
00029222 <AmiBlitz3.ab2@12139>   BTST #$1,flagmask+1
00029226 <AmiBlitz3.ab2@12140>    BNE.w JL_0_8F22b
0002922E <AmiBlitz3.ab2@12141>   CMPI.l #$100,$4(A2)
00029232 <AmiBlitz3.ab2@12142>    BCC.w JL_0_8F22b
00029236 <AmiBlitz3.ab2@12143>   MOVE.w $8(A2),D1
0002923C <AmiBlitz3.ab2@12146>   TST.w varmode
00029240 <AmiBlitz3.ab2@12147> BRA.w JL_0_8F3E
00029244 <AmiBlitz3.ab2@12156>   BSR.w getparameter2
0002924A <AmiBlitz3.ab2@12157>   LEA newtypebase,A2
0002924E <AmiBlitz3.ab2@12158>    BSR.w findtype
00029252 <AmiBlitz3.ab2@12159>    BNE.w notypeerr
00029258 <AmiBlitz3.ab2@12162>   CMPA.l #newtype_byte,A2
0002925C <AmiBlitz3.ab2@12163>    BEQ.w JL_0_8EEC
00029262 <AmiBlitz3.ab2@12164>   MOVE.w varmode,D1
00029266 <AmiBlitz3.ab2@12165>    BNE.w JL_0_8EE4
0002926C <AmiBlitz3.ab2@12166>   ADDQ.w #1,globalvarpointer
00029274 <AmiBlitz3.ab2@12169>   BCLR #$0,globalvarpointer+1
00029278 <AmiBlitz3.ab2@12172>   MOVE.l A2,$A(A3)
00029280 <AmiBlitz3.ab2@12173>   MOVE.w flagmask,$6(A3)                                  ;??????????
00029282 <AmiBlitz3.ab2@12174>   MOVEQ.l #$04,D1
0002928A <AmiBlitz3.ab2@12175>   BTST #$0,flagmask+1
0002928E <AmiBlitz3.ab2@12176>    BNE.w JL_0_8F22
00029296 <AmiBlitz3.ab2@12177>   BTST #$1,flagmask+1
0002929A <AmiBlitz3.ab2@12178>    BNE.w JL_0_8F22
000292A2 <AmiBlitz3.ab2@12179>   CMPI.l #$100,$4(A2)
000292A6 <AmiBlitz3.ab2@12180>    BCC.w JL_0_8F22
000292AA <AmiBlitz3.ab2@12181>   MOVE.w $8(A2),D1
000292B0 <AmiBlitz3.ab2@12184>   TST.w varmode
000292B4 <AmiBlitz3.ab2@12185>    BEQ.w JL_0_8F3E
000292B6 <AmiBlitz3.ab2@12186>   NEG.w D1
000292BC <AmiBlitz3.ab2@12187>   ADD.w D1,globalvarpointer
000292C4 <AmiBlitz3.ab2@12188>   MOVE.w globalvarpointer,$4(A3)
000292C6 <AmiBlitz3.ab2@12189> RTS
000292CE <AmiBlitz3.ab2@12192>   MOVE.w globalvarpointer,$4(A3)
000292D4 <AmiBlitz3.ab2@12193>   ADD.w D1,globalvarpointer
000292D6 <AmiBlitz3.ab2@12194> RTS
000292DC <AmiBlitz3.ab2@12198>   LEA firstglob,A2
000292E0 <AmiBlitz3.ab2@12199>    BSR.w findvariable2
000292E4 <AmiBlitz3.ab2@12202>   BNE.w JL_0_8F74
000292EA <AmiBlitz3.ab2@12203>   MOVE.b flagmask+1,D1
000292EE <AmiBlitz3.ab2@12204>   MOVE.b $7(A2),D3
000292F0 <AmiBlitz3.ab2@12205>   EOR.b D3,D1
000292F4 <AmiBlitz3.ab2@12206>    BEQ.w JL_0_8FA8
000292F8 <AmiBlitz3.ab2@12207>    BSR.w findlab
000292FC <AmiBlitz3.ab2@12208> BRA.w JL_0_8F58
00029304 <AmiBlitz3.ab2@12211>   MOVE.w #$FFFF,varmode
0002930A <AmiBlitz3.ab2@12212>   MOVE.w globalvarpointer,-(A7)
00029314 <AmiBlitz3.ab2@12213>   MOVE.w locvaroff,globalvarpointer
0002931A <AmiBlitz3.ab2@12214>   LEA firstlocal,A2
00029322 <AmiBlitz3.ab2@12215>   MOVE.b #1,newvariable
00029326 <AmiBlitz3.ab2@12216>    BSR.w JL_0_8E5E
0002932C <AmiBlitz3.ab2@12217>   CLR.b newvariable
00029336 <AmiBlitz3.ab2@12218>   MOVE.w globalvarpointer,locvaroff
0002933C <AmiBlitz3.ab2@12219>   MOVE.w (A7)+,globalvarpointer
0002933E <AmiBlitz3.ab2@12220> RTS
00029340 <AmiBlitz3.ab2@12223>   MOVEA.l A2,A3
00029344 <AmiBlitz3.ab2@12224>   CMP.w #$2E,D0
00029348 <AmiBlitz3.ab2@12225>    BEQ.w JL_0_8FCE
0002934C <AmiBlitz3.ab2@12226>   CMP.w #$24,D0
00029350 <AmiBlitz3.ab2@12227>    BNE.w JL_0_8FE8
00029358 <AmiBlitz3.ab2@12228>   CMPI.l #newtype_string,$A(A3)
0002935C <AmiBlitz3.ab2@12229>    BNE.w rongtypeerr
00029360 <AmiBlitz3.ab2@12230>    BSR.w get1bytemain
00029364 <AmiBlitz3.ab2@12231> BRA.w JL_0_8FE8
00029368 <AmiBlitz3.ab2@12234>    BSR.w getparameter2
0002936E <AmiBlitz3.ab2@12235>   LEA newtypebase,A2
00029372 <AmiBlitz3.ab2@12236>    BSR.w findtype
00029376 <AmiBlitz3.ab2@12237>    BNE.w notypeerr
0002937A <AmiBlitz3.ab2@12238>   CMPA.l $A(A3),A2
0002937E <AmiBlitz3.ab2@12239>    BNE.w rongtypeerr
00029386 <AmiBlitz3.ab2@12241>   BTST #$0,flagmask+1
0002938A <AmiBlitz3.ab2@12242>    BEQ.w JL_0_8FFE
00029390 <AmiBlitz3.ab2@12243>   BTST #$0,$7(A3)
00029394 <AmiBlitz3.ab2@12244>    BEQ.w pointerr
00029398 <AmiBlitz3.ab2@12247>   MOVEA.l $A(A3),A2
0002939A <AmiBlitz3.ab2@12248> RTS
0002939C <AmiBlitz3.ab2@12252>    TST.l D3                                                ;newtype >32kb  .w to .l
000293A0 <AmiBlitz3.ab2@12253>    BEQ.w JL_0_9042
000293AA <AmiBlitz3.ab2@12254>    MOVE.l destpointer,loada
000293AE <AmiBlitz3.ab2@12257> BRA JL_0_9032
000293B2 <AmiBlitz3.ab2@12259>   CMP.w #$9,D3                                             ;_addq_arrays
000293B6 <AmiBlitz3.ab2@12260>    BCC.w JL_0_9032
000293BC <AmiBlitz3.ab2@12261>   MOVE.w d3,arrayoffset
000293C0 <AmiBlitz3.ab2@12262>   ANDI.w #$7,D3
000293C2 <AmiBlitz3.ab2@12263>   LSL.w #8,D3
000293C4 <AmiBlitz3.ab2@12264>   LSL.w #1,D3
000293CC <AmiBlitz3.ab2@12265>   ANDI.w #$F1FF,addqa0
000293D2 <AmiBlitz3.ab2@12266>   OR.w D3,addqa0
000293D8 <AmiBlitz3.ab2@12267>   MOVE.w addqa0,D1
000293DC <AmiBlitz3.ab2@12268> BRA.w writeword
000293E2 <AmiBlitz3.ab2@12271>   CMP.l #$7fff,d3                                          ;>32kb newtypes
000293E6 <AmiBlitz3.ab2@12272>   BGT longoffset
000293EC <AmiBlitz3.ab2@12273>   MOVE.w D3,leaa0a0+2
000293F2 <AmiBlitz3.ab2@12274>   MOVE.w d3,arrayoffset
000293F8 <AmiBlitz3.ab2@12275>   MOVE.l leaa0a0,D1
000293FC <AmiBlitz3.ab2@12276>   BSR.w writelong
000293FE <AmiBlitz3.ab2@12279> RTS
00029402 <AmiBlitz3.ab2@12282>    MOVE.w #$d5fc,d1
00029406 <AmiBlitz3.ab2@12283>    BSR writeword
00029408 <AmiBlitz3.ab2@12284>    MOVE.l d3,d1
0002940C <AmiBlitz3.ab2@12285>    BSR.w writelong
0002940E <AmiBlitz3.ab2@12286> RTS
00029412 <AmiBlitz3.ab2@12290>   Dc.w $b0ad,0000                                          ;cmp.l $0(A5),D0    ;nooptimize
00029416 <AmiBlitz3.ab2@12293>    BCS.w arrchk3                                           
0002941C <AmiBlitz3.ab2@12294>    JSR $20000                                              ;jsr 0
00029422 <AmiBlitz3.ab2@12300>   TST.b fast
00029426 <AmiBlitz3.ab2@12301>   BEQ 'l1
00029428 <AmiBlitz3.ab2@12302>    MOVEQ #0,d1                                             ;faster arrays
0002942E <AmiBlitz3.ab2@12303>    MOVE.w regnum,d2
00029430 <AmiBlitz3.ab2@12304>    MOVE.w d2,d1
00029432 <AmiBlitz3.ab2@12305>    LSL.w #8,d1
00029434 <AmiBlitz3.ab2@12306>    LSL.w #4,d1
00029436 <AmiBlitz3.ab2@12307>    ADD.w d2,d1
0002943C <AmiBlitz3.ab2@12308>    OR.l #$4c2d0000,d1
00029442 <AmiBlitz3.ab2@12309>    TST.w varmode
00029446 <AmiBlitz3.ab2@12310>    BEQ 'l1a
0002944A <AmiBlitz3.ab2@12311>    BCLR #16,d1
0002944E <AmiBlitz3.ab2@12314>    BSR writelong
00029452 <AmiBlitz3.ab2@12315>    MOVE.w $4(A7),D1
00029456 <AmiBlitz3.ab2@12316>    BSR.w writeword
0002945C <AmiBlitz3.ab2@12317>    MOVE.w regnum,D1
0002945E <AmiBlitz3.ab2@12318>   SUBQ.w #1,D1
00029460 <AmiBlitz3.ab2@12319>   LSL.w #8,D1
00029462 <AmiBlitz3.ab2@12320>   LSL.w #1,D1
00029466 <AmiBlitz3.ab2@12321>   ORI.w #$D080,D1
0002946C <AmiBlitz3.ab2@12322>   OR.w regnum,D1
00029470 <AmiBlitz3.ab2@12323>    BSR.w writeword
00029472 <AmiBlitz3.ab2@12324> RTS
00029478 <AmiBlitz3.ab2@12327>   MOVE.w regnum,D2
0002947C <AmiBlitz3.ab2@12328>   MOVE.w arrmul1(PC),D1
0002947E <AmiBlitz3.ab2@12329>   OR.w D2,D1
00029480 <AmiBlitz3.ab2@12330>   SUBQ.w #1,D1
00029484 <AmiBlitz3.ab2@12331>    BSR.w writeword
00029488 <AmiBlitz3.ab2@12332>   MOVE.w arrmul2(PC),D1
0002948A <AmiBlitz3.ab2@12333>   OR.w D2,D1
0002948C <AmiBlitz3.ab2@12334>   MOVE.w D2,D3
0002948E <AmiBlitz3.ab2@12335>   SUBQ.w #1,D3
00029490 <AmiBlitz3.ab2@12336>   LSL.w #8,D3
00029492 <AmiBlitz3.ab2@12337>   LSL.w #1,D3
00029494 <AmiBlitz3.ab2@12338>   OR.w D3,D1
00029498 <AmiBlitz3.ab2@12339>    BSR.w writeword
0002949C <AmiBlitz3.ab2@12340>   MOVE.w arrmul3(PC),D1
0002949E <AmiBlitz3.ab2@12341>   MOVE.w D2,D3
000294A0 <AmiBlitz3.ab2@12342>   LSL.w #8,D3
000294A2 <AmiBlitz3.ab2@12343>   LSL.w #1,D3
000294A4 <AmiBlitz3.ab2@12344>   OR.w D3,D1
000294A8 <AmiBlitz3.ab2@12345>    BSR.w pokewda5s
000294AC <AmiBlitz3.ab2@12346>   MOVE.w $4(A7),D1
000294AE <AmiBlitz3.ab2@12347>   ADDQ.w #2,D1
000294B2 <AmiBlitz3.ab2@12348>    BSR.w writeword
000294B6 <AmiBlitz3.ab2@12349>   MOVE.w arrmul4(PC),D1
000294B8 <AmiBlitz3.ab2@12350>   MOVE.w D2,D3
000294BA <AmiBlitz3.ab2@12351>   SUBQ.w #1,D3
000294BC <AmiBlitz3.ab2@12352>   LSL.w #8,D3
000294BE <AmiBlitz3.ab2@12353>   LSL.w #1,D3
000294C0 <AmiBlitz3.ab2@12354>   OR.w D3,D1
000294C4 <AmiBlitz3.ab2@12355>    BSR.w pokewda5s
000294C8 <AmiBlitz3.ab2@12356>   MOVE.w $4(A7),D1
000294CC <AmiBlitz3.ab2@12357>    BSR.w writeword
000294D0 <AmiBlitz3.ab2@12358>   MOVE.w arrmul5(PC),D1
000294D2 <AmiBlitz3.ab2@12359>   OR.w D2,D1
000294D4 <AmiBlitz3.ab2@12360>   SUBQ.w #1,D1
000294D8 <AmiBlitz3.ab2@12361>    BSR.w writeword
000294DC <AmiBlitz3.ab2@12362>   MOVE.w arrmul6(PC),D1
000294DE <AmiBlitz3.ab2@12363>   OR.w D2,D1
000294E0 <AmiBlitz3.ab2@12364>   SUBQ.w #1,D1
000294E4 <AmiBlitz3.ab2@12365>    BSR.w writeword
000294E8 <AmiBlitz3.ab2@12366>   MOVE.w arrmul7(PC),D1
000294EA <AmiBlitz3.ab2@12367>   OR.w D2,D1
000294EC <AmiBlitz3.ab2@12368>   SUBQ.w #1,D1
000294EE <AmiBlitz3.ab2@12369>   MOVE.w D2,D3
000294F0 <AmiBlitz3.ab2@12370>   LSL.w #8,D3
000294F2 <AmiBlitz3.ab2@12371>   LSL.w #1,D3
000294F4 <AmiBlitz3.ab2@12372>   OR.w D3,D1
000294F8 <AmiBlitz3.ab2@12373>    BSR.w writeword
000294FC <AmiBlitz3.ab2@12374>   MOVE.w arrmul8(PC),D1
000294FE <AmiBlitz3.ab2@12375>   MOVE.w D2,D3
00029500 <AmiBlitz3.ab2@12376>   SUBQ.w #1,D3
00029502 <AmiBlitz3.ab2@12377>   LSL.w #8,D3
00029504 <AmiBlitz3.ab2@12378>   LSL.w #1,D3
00029506 <AmiBlitz3.ab2@12379>   OR.w D3,D1
0002950A <AmiBlitz3.ab2@12380>    BSR.w writeword
00029510 <AmiBlitz3.ab2@12381>   MOVE.w regnum,D1
00029512 <AmiBlitz3.ab2@12382>   SUBQ.w #1,D1
00029514 <AmiBlitz3.ab2@12383>   LSL.w #8,D1
00029516 <AmiBlitz3.ab2@12384>   LSL.w #1,D1
0002951A <AmiBlitz3.ab2@12385>   ORI.w #$D080,D1
00029520 <AmiBlitz3.ab2@12386>   OR.w regnum,D1
00029524 <AmiBlitz3.ab2@12387> BRA.w writeword
00029526 <AmiBlitz3.ab2@12395> arrmul1:   MOVE.l d0,-(a7)                                ;write array access
00029528 <AmiBlitz3.ab2@12396> arrmul2:   MOVE  d0,d0
0002952C <AmiBlitz3.ab2@12397> arrmul3:   MULU 0(a5),d0                                  ;mulu   x+2(a5),d1  ;lo*lo
00029530 <AmiBlitz3.ab2@12398> arrmul4:   MULU 0(a5),d0                                  ;mulu   x(a5),d0    ;hi*lo
00029532 <AmiBlitz3.ab2@12400> arrmul5:   SWAP d0
00029534 <AmiBlitz3.ab2@12401> arrmul6:   CLR d0
00029536 <AmiBlitz3.ab2@12402> arrmul7:   ADD.l d0,d0
00029538 <AmiBlitz3.ab2@12403> arrmul8:   MOVE.l (a7)+,d0
0002953C <AmiBlitz3.ab2@12408> listcode1:  Dc.b $24,$6D :              Dc.b $00,$00       ;MOVEA.L $0000(A5),A2      ;pointer to start of array data
00029540 <AmiBlitz3.ab2@12409> listcode2:  Dc.b $24,$6A,$FF,$E0                           ;MOVEA.L -$0020(A2),A2     ;pointer to current
00029542 <AmiBlitz3.ab2@12410> listarfix:  Dc.b $50,$4A                                   ;ADDQ.W  #8,A2
00029548 <AmiBlitz3.ab2@12428>   CLR.l lastoffset_org
0002954E <AmiBlitz3.ab2@12429>   BTST #$1,$7(A3)
00029552 <AmiBlitz3.ab2@12430>    BEQ.w calcvar__notarr
00029558 <AmiBlitz3.ab2@12431>   MOVE.w notshared,D1
0002955C <AmiBlitz3.ab2@12432>    BNE.w noarrerr
00029560 <AmiBlitz3.ab2@12433>    BSR.w get1bytemain
00029564 <AmiBlitz3.ab2@12434>   CMP.w #$29,D0
00029568 <AmiBlitz3.ab2@12435>    BNE.w calcvar__notalist
0002956E <AmiBlitz3.ab2@12436>   BTST #$0,$6(A3)
00029572 <AmiBlitz3.ab2@12437>    BEQ.w nolisterr
0002957A <AmiBlitz3.ab2@12438>   MOVE.w $4(A3),listcode1+2
0002957E <AmiBlitz3.ab2@12439>   MOVE.l listcode1(PC),D1
00029582 <AmiBlitz3.ab2@12440>    BSR.w pokela5s
00029586 <AmiBlitz3.ab2@12441>   MOVE.l listcode2(PC),D1
0002958A <AmiBlitz3.ab2@12442>    BSR.w writelong
00029590 <AmiBlitz3.ab2@12443>   TST.b debugmode
00029594 <AmiBlitz3.ab2@12444>    BEQ.w calcvar__nolrerr
00029596 <AmiBlitz3.ab2@12448>   MOVE.l A2,-(A7)
0002959A <AmiBlitz3.ab2@12449>   MOVE.w #$C315,D1
0002959E <AmiBlitz3.ab2@12450>    BSR.w Atokejsr
000295A0 <AmiBlitz3.ab2@12451>   MOVEA.l (A7)+,A2
000295A4 <AmiBlitz3.ab2@12454>    MOVE.w listarfix(PC),D1                                 ;addq #8,a2
000295A8 <AmiBlitz3.ab2@12456>    BSR.w writeword
000295AC <AmiBlitz3.ab2@12457> BRA.w calcvar__normalar
000295AE <AmiBlitz3.ab2@12460> calcvar__listoff:   Ds.w 1
000295B4 <AmiBlitz3.ab2@12464>   CLR.w calcvar__listoff
000295BA <AmiBlitz3.ab2@12465>   BTST #$0,$6(A3)
000295BE <AmiBlitz3.ab2@12466>    BEQ.w calcvar__knop
000295C6 <AmiBlitz3.ab2@12467>   MOVE.w #$0008,calcvar__listoff                            ;adjust size of one element if list.
000295CA <AmiBlitz3.ab2@12470>   MOVEM.l A2-A3,-(A7)
000295D0 <AmiBlitz3.ab2@12471>   MOVE.w varmode,-(A7)
000295D4 <AmiBlitz3.ab2@12472>   MOVE.w $8(A3),-(A7)                                       ;number of dims
000295D8 <AmiBlitz3.ab2@12473>   MOVE.w $4(A3),-(A7)                                       ;varoff
000295DA <AmiBlitz3.ab2@12474>   MOVE.l A2,-(A7)
000295E0 <AmiBlitz3.ab2@12475>   MOVE.w flagmask,-(A7)
000295EA <AmiBlitz3.ab2@12477>   MOVE.w oldqflag,instringon
000295F0 <AmiBlitz3.ab2@12478>   MOVEA.l lastsourcepos,A5
000295F4 <AmiBlitz3.ab2@12479>    BSR.w arreval
000295FA <AmiBlitz3.ab2@12480>   MOVE.w (A7)+,flagmask
00029602 <AmiBlitz3.ab2@12481>   MOVE.w $8(A7),varmode
00029608 <AmiBlitz3.ab2@12482>   TST.b debugmode
0002960C <AmiBlitz3.ab2@12483>    BEQ.w calcvar__noszchk
0002960E <AmiBlitz3.ab2@12487>   MOVEA.l (A7)+,A2
00029610 <AmiBlitz3.ab2@12488>   MOVEQ.l #$04,D1
00029618 <AmiBlitz3.ab2@12489>   BTST #$0,flagmask+1                                      ;pointer?
0002961C <AmiBlitz3.ab2@12490>    BNE.b calcvar__domul                                          ;yes, then use 4 byte mul...
00029620 <AmiBlitz3.ab2@12491>   MOVE.w $8(A2),D1
00029624 <AmiBlitz3.ab2@12494>   ADD.w calcvar__listoff(PC),D1
00029628 <AmiBlitz3.ab2@12495>   BSR.w JL_0_B6DE
0002962E <AmiBlitz3.ab2@12496>   ADDQ.w #1,regnum
00029630 <AmiBlitz3.ab2@12499>   ADDQ.w #4,(A7)
00029634 <AmiBlitz3.ab2@12500>   TST.w $4(A7)
00029638 <AmiBlitz3.ab2@12501>    BEQ.w calcvar__isglob
0002963A <AmiBlitz3.ab2@12502>   SUBQ.w #8,(A7)                                           ;range check local array
00029640 <AmiBlitz3.ab2@12505>   TST.b debugmode
00029644 <AmiBlitz3.ab2@12506>    BEQ.w calcvar__noer1
0002964A <AmiBlitz3.ab2@12507>   MOVE.w regnum,D1
0002964C <AmiBlitz3.ab2@12508>   SUBQ.w #1,D1
0002964E <AmiBlitz3.ab2@12509>   LSL.w #8,D1
00029650 <AmiBlitz3.ab2@12510>   LSL.w #1,D1
00029654 <AmiBlitz3.ab2@12511>   OR.w zarrchk(PC),D1
00029658 <AmiBlitz3.ab2@12512>    BSR.w pokewda5s                                         ;cmp.l x(a5),D regat
0002965A <AmiBlitz3.ab2@12513>   MOVE.w (A7),D1
0002965E <AmiBlitz3.ab2@12514>    BSR.w writeword
00029662 <AmiBlitz3.ab2@12515>   MOVE.l arrchk2(PC),D1
00029666 <AmiBlitz3.ab2@12516>    BSR.w writelong
0002966A <AmiBlitz3.ab2@12517>   MOVE.w #$C309,D1
0002966E <AmiBlitz3.ab2@12518>    BSR.w Atokejsr
00029672 <AmiBlitz3.ab2@12521>   SUBQ.w #1,$2(A7)
00029676 <AmiBlitz3.ab2@12522>    BEQ.w calcvar__ardone
0002967A <AmiBlitz3.ab2@12523>   CMP.w #$2C,D0
0002967E <AmiBlitz3.ab2@12524>    BNE.w syntaxerr
00029684 <AmiBlitz3.ab2@12525>    TST.b fast
00029688 <AmiBlitz3.ab2@12526>    BNE 'l1
0002968C <AmiBlitz3.ab2@12527>    BSR.w arrevalchk
00029690 <AmiBlitz3.ab2@12528> BRA 'l2
00029694 <AmiBlitz3.ab2@12531>   BSR arreval
0002969C <AmiBlitz3.ab2@12534>   MOVE.w $4(A7),varmode
000296A0 <AmiBlitz3.ab2@12535>   BSR.w JL_0_9052
000296A4 <AmiBlitz3.ab2@12536> BRA.w calcvar__arloop
000296A8 <AmiBlitz3.ab2@12540>   CMP.w #$29,D0
000296AC <AmiBlitz3.ab2@12541>    BNE.w syntaxerr
000296B2 <AmiBlitz3.ab2@12542>   SUBQ.w #1,regnum
000296B4 <AmiBlitz3.ab2@12543>   ADDQ.w #6,A7
000296B8 <AmiBlitz3.ab2@12544>   MOVEM.l (A7)+,A2-A3
000296C0 <AmiBlitz3.ab2@12545>   MOVE.w $4(A3),movea5a0+2
000296C6 <AmiBlitz3.ab2@12546>   MOVE.l movea5a0,D1
000296CA <AmiBlitz3.ab2@12547>    BSR.w pokela5s
000296D0 <AmiBlitz3.ab2@12548>   MOVE.w regnum,D1
000296D4 <AmiBlitz3.ab2@12549>   ORI.w #$D5C0,D1                                          ;add.l Dr,a2
000296D8 <AmiBlitz3.ab2@12550>    BSR.w writeword
000296DE <AmiBlitz3.ab2@12551>   BTST #$0,$6(A3)
000296E2 <AmiBlitz3.ab2@12552>    BEQ.w calcvar__normalar
000296E6 <AmiBlitz3.ab2@12556>   MOVE.w listarfix(PC),D1
000296EA <AmiBlitz3.ab2@12557>    BSR.w writeword
000296EE <AmiBlitz3.ab2@12560>   BSR.w get1bytemain
000296F4 <AmiBlitz3.ab2@12564>   BTST #$0,$7(A3)
000296F8 <AmiBlitz3.ab2@12565>    BEQ.w calcvar__noppnt
000296FC <AmiBlitz3.ab2@12566>   CMP.w #$5C,D0
00029700 <AmiBlitz3.ab2@12567>    BNE.w calcvar__pmskip
00029704 <AmiBlitz3.ab2@12568>   MOVE.w calcvar__pfix(PC),D1
00029708 <AmiBlitz3.ab2@12569>    BSR.w writeword
0002970C <AmiBlitz3.ab2@12572>   MOVE.w #$8000,D2
00029710 <AmiBlitz3.ab2@12573> BRA.w calcvar__loopml
00029714 <AmiBlitz3.ab2@12576>   MOVE.w #$C000,D2
00029718 <AmiBlitz3.ab2@12577> BRA.w calcvar__loopml
0002971A <AmiBlitz3.ab2@12581> calcvar__pfix:   Dc.b $24,$52                                   ;MOVEA.L (A2),A2
0002971E <AmiBlitz3.ab2@12586>   CMP.w #$28,D0
00029722 <AmiBlitz3.ab2@12587>    BEQ.w noarrerr
0002972A <AmiBlitz3.ab2@12588>   CMPI.l #$100,$4(A2)
0002972E <AmiBlitz3.ab2@12589>    BCS.w calcvar__simpvar
00029734 <AmiBlitz3.ab2@12590>   BTST #$0,$7(A3)
00029738 <AmiBlitz3.ab2@12591>    BEQ.w calcvar__notap
0002973C <AmiBlitz3.ab2@12595>   CMP.w #$5C,D0
00029740 <AmiBlitz3.ab2@12596>    BEQ.w calcvar__notap
00029742 <AmiBlitz3.ab2@12597>   MOVEQ.l #$00,D2
00029746 <AmiBlitz3.ab2@12598> BRA.w calcvar__simpvar2
0002974A <AmiBlitz3.ab2@12601>   MOVE.w #$8000,D2
00029752 <AmiBlitz3.ab2@12602>   MOVE.w $4(A3),movea5a0+2
00029758 <AmiBlitz3.ab2@12603>   MOVE.l movea5a0,D1
0002975C <AmiBlitz3.ab2@12604>    BSR.w pokela5s                                         ;move.l x(a5),a2
00029762 <AmiBlitz3.ab2@12606>    TST.b debugmode
00029766 <AmiBlitz3.ab2@12607>    BEQ.w 'skip
0002976A <AmiBlitz3.ab2@12608>    MOVE.w #$c320,D1
00029770 <AmiBlitz3.ab2@12609>    JSR Atokejsr
00029772 <AmiBlitz3.ab2@12613>   MOVEQ.l #$00,D3
00029776 <AmiBlitz3.ab2@12616>   CMP.w #$5C,D0
0002977A <AmiBlitz3.ab2@12617>    BNE.w calcvar__done
00029782 <AmiBlitz3.ab2@12618>   CMPI.l #$100,$4(A2)
00029786 <AmiBlitz3.ab2@12619>    BCS.w rongtypeerr
00029788 <AmiBlitz3.ab2@12620>   MOVE.w D2,-(A7)
0002978C <AmiBlitz3.ab2@12621>    BSR.w getparameter2
00029790 <AmiBlitz3.ab2@12622>    BEQ.w syntaxerr
00029792 <AmiBlitz3.ab2@12623>   ADDQ.w #4,A2
00029796 <AmiBlitz3.ab2@12624>    BSR.w findvariable2
0002979A <AmiBlitz3.ab2@12625>    BNE.w noofferr
0002979C <AmiBlitz3.ab2@12626>   MOVE.w (A7)+,D2
0002979E <AmiBlitz3.ab2@12627>   MOVEA.l A2,A3                                             ;pointer to offset
000297A2 <AmiBlitz3.ab2@12628>   MOVEA.l $A(A3),A2                                         ;pointer to type
000297A4 <AmiBlitz3.ab2@12629>   MOVEQ #0,d1
000297A8 <AmiBlitz3.ab2@12630>   MOVE.w 4(a3),d1
000297AA <AmiBlitz3.ab2@12631>   ADD.l d1,d3
000297B0 <AmiBlitz3.ab2@12633>   MOVE.l A3,lastoffset_org
000297B4 <AmiBlitz3.ab2@12634>   CMP.w #$5B,D0
000297B8 <AmiBlitz3.ab2@12635>    BNE.w calcvar__realdone
000297BE <AmiBlitz3.ab2@12636>   BTST #$1,$7(A3)                                           ;a array [] in newtype is found
000297C2 <AmiBlitz3.ab2@12637>    BEQ.w rongtypeerr
000297C6 <AmiBlitz3.ab2@12638>    BSR.w JL_0_9004
000297CA <AmiBlitz3.ab2@12639>   MOVEM.l A2-A3,-(A7)
000297D0 <AmiBlitz3.ab2@12640>   MOVE.w varmode,-(A7)
000297D6 <AmiBlitz3.ab2@12641>   MOVE.l lastoffset_org,-(A7)
000297DC <AmiBlitz3.ab2@12642>   MOVE.w pusha2,D1
000297E0 <AmiBlitz3.ab2@12643>    BSR.w writeword
000297E2 <AmiBlitz3.ab2@12644>   MOVEQ.l #$03,D2                                          ;was 2 >32kb types
000297EC <AmiBlitz3.ab2@12645>   MOVE.l destpointer,deststore
000297F2 <AmiBlitz3.ab2@12646>    MOVE.l rightsidetype,-(a7)
000297F8 <AmiBlitz3.ab2@12647>    MOVE.l leftsidetype,-(a7)
000297FE <AmiBlitz3.ab2@12648>    CLR.l rightsidetype
00029804 <AmiBlitz3.ab2@12649>    CLR.l leftsidetype
00029808 <AmiBlitz3.ab2@12650>    BSR.w eval
0002980E <AmiBlitz3.ab2@12651>    MOVE.l (a7)+,rightsidetype
00029814 <AmiBlitz3.ab2@12652>    MOVE.l (a7)+,leftsidetype
00029818 <AmiBlitz3.ab2@12653>   CMP.w #$5D,D0
0002981C <AmiBlitz3.ab2@12654>    BNE.w syntaxerr
00029822 <AmiBlitz3.ab2@12655>   TST.b fast                                               ;a2,-(a7) array
00029826 <AmiBlitz3.ab2@12656>   BEQ calcvar__loop0_l10
0002982C <AmiBlitz3.ab2@12660>   MOVE.l destpointer,d1
00029832 <AmiBlitz3.ab2@12661>   SUB.l deststore,d1
00029838 <AmiBlitz3.ab2@12662>   CMP.l #4,d1
0002983C <AmiBlitz3.ab2@12663>   BNE calcvar__loop0_l10
00029842 <AmiBlitz3.ab2@12664>   MOVE.l destpointer,a4
00029848 <AmiBlitz3.ab2@12665>   MOVE.l -4(a4),-6(a4)
0002984E <AmiBlitz3.ab2@12666>   SUBQ.l #2,destpointer
00029854 <AmiBlitz3.ab2@12667>   CLR.l imm_addr
0002985A <AmiBlitz3.ab2@12668>   CLR.l load_var_addr
0002985E <AmiBlitz3.ab2@12669> BRA calcvar__loop0_l20
00029864 <AmiBlitz3.ab2@12672>   MOVE.w pulla2,D1
00029868 <AmiBlitz3.ab2@12673>    BSR.w writeword
0002986E <AmiBlitz3.ab2@12676>   MOVE.l (A7)+,lastoffset_org
00029874 <AmiBlitz3.ab2@12677>   MOVE.w (A7)+,varmode
00029878 <AmiBlitz3.ab2@12678>   MOVEM.l (A7)+,A2-A3
0002987E <AmiBlitz3.ab2@12684>   TST.w debugmode
00029882 <AmiBlitz3.ab2@12685>    BEQ.b calcvar__nobchk
00029886 <AmiBlitz3.ab2@12686>   MOVE.w $8(A3),D1
0002988A <AmiBlitz3.ab2@12687>    BEQ.b calcvar__nobchk                                   ;no [0] checks!
00029890 <AmiBlitz3.ab2@12691>   MOVE.w D1,brchkcode+2
00029896 <AmiBlitz3.ab2@12692>   MOVE.w regnum,D1
00029898 <AmiBlitz3.ab2@12693>   LSL.w #8,D1
0002989A <AmiBlitz3.ab2@12694>   LSL.w #1,D1
0002989E <AmiBlitz3.ab2@12695>   OR.w brchkcode0(PC),D1
000298A4 <AmiBlitz3.ab2@12696>   MOVE.w D1,brchkcode
000298A8 <AmiBlitz3.ab2@12697>   MOVE.l brchkcode(PC),D1
000298AC <AmiBlitz3.ab2@12698>    BSR.w writelong
000298B0 <AmiBlitz3.ab2@12699>   MOVE.l brchkcode+4(PC),D1
000298B4 <AmiBlitz3.ab2@12700>    BSR.w writelong
000298B8 <AmiBlitz3.ab2@12701>   MOVE.w brchkcode+8(PC),D1
000298BC <AmiBlitz3.ab2@12702>    BSR.w writeword
000298BE <AmiBlitz3.ab2@12705>   MOVEQ.l #$04,D1
000298C4 <AmiBlitz3.ab2@12706>   BTST #$0,$7(A3)
000298C8 <AmiBlitz3.ab2@12707>    BNE.w calcvar__dothemul
000298CC <AmiBlitz3.ab2@12708>   MOVE.w $8(A2),D1
000298D0 <AmiBlitz3.ab2@12711>   BSR.w JL_0_B6DE
000298D6 <AmiBlitz3.ab2@12712>   MOVE.w addrega2,D1
000298DC <AmiBlitz3.ab2@12713>   OR.w regnum,D1
000298E0 <AmiBlitz3.ab2@12714>    OR.w #$100,d1                                           ;>32kb types
000298E4 <AmiBlitz3.ab2@12715>    BSR.w writeword
000298E8 <AmiBlitz3.ab2@12716>    BSR.w get1bytemain
000298EA <AmiBlitz3.ab2@12717>   MOVEQ.l #$00,D3
000298EE <AmiBlitz3.ab2@12718>   MOVE.w #$8000,D2
000298F4 <AmiBlitz3.ab2@12721>   BTST #$0,$7(A3)
000298F8 <AmiBlitz3.ab2@12722>    BNE.w calcvar__pointer
000298FC <AmiBlitz3.ab2@12723> BRA.w calcvar__loop0
00029900 <AmiBlitz3.ab2@12727>  CMP.w #$5C,D0
00029904 <AmiBlitz3.ab2@12728>    BNE.w calcvar__done3
00029906 <AmiBlitz3.ab2@12729>   TST.w D3
0002990A <AmiBlitz3.ab2@12730>    BNE.w calcvar__pskip
00029910 <AmiBlitz3.ab2@12731>   MOVE.w movea0,D1
00029914 <AmiBlitz3.ab2@12732>    BSR.w writeword
00029918 <AmiBlitz3.ab2@12733> BRA.w calcvar__pmore
0002991E <AmiBlitz3.ab2@12736>   MOVE.w D3,movea0a0+2
00029924 <AmiBlitz3.ab2@12737>   MOVE.l movea0a0,D1
00029928 <AmiBlitz3.ab2@12738>    BSR.w writelong
0002992E <AmiBlitz3.ab2@12741>   BTST #$2,$7(A3)
00029932 <AmiBlitz3.ab2@12742>    BEQ.w calcvar__loopml
00029938 <AmiBlitz3.ab2@12743>   MOVE.l adda0a0,D1
0002993C <AmiBlitz3.ab2@12744>    BSR.w writelong
00029940 <AmiBlitz3.ab2@12745> BRA.w calcvar__loopml
00029944 <AmiBlitz3.ab2@12748>   BSET #$E,D2
0002994A <AmiBlitz3.ab2@12749>   BTST #$2,$7(A3)
0002994E <AmiBlitz3.ab2@12750>    BNE.w calcvar__done
00029952 <AmiBlitz3.ab2@12751>   BSET #$D,D2
0002995A <AmiBlitz3.ab2@12754>   CMPI.l #$100,$4(A2)
0002995E <AmiBlitz3.ab2@12755>    BCC.w calcvar__done2
00029962 <AmiBlitz3.ab2@12756>   MOVE.b $7(A2),D2
00029966 <AmiBlitz3.ab2@12759> BRA.w JL_0_9004
0002996A <AmiBlitz3.ab2@12762>   MOVE.w $6(A2),D2
0002996E <AmiBlitz3.ab2@12765>   MOVE.w $4(A3),D3
00029974 <AmiBlitz3.ab2@12766>   BTST #$0,$7(A3)
00029978 <AmiBlitz3.ab2@12767>    BEQ.w calcvar__nopoint
0002997C <AmiBlitz3.ab2@12768>   BSET #$E,D2
0002997E <AmiBlitz3.ab2@12771> RTS
00029982 <AmiBlitz3.ab2@12775> brchkcode0:  Dc.b $B0,$7C,$00,$00                          ;CMP.W   #$0000,D0
00029986 <AmiBlitz3.ab2@12776> brchkcode:   Dc.b $B0,$7C :             Dc.b $00,$00       ;CMP.W   #$0000,D0
00029988 <AmiBlitz3.ab2@12777>              Dc.b $65,$04                                  ;BCS.B   brchkcode__ok
0002998A <AmiBlitz3.ab2@12778>              Dc.b $70,$02                                  ;MOVEQ   #$02,D0
0002998C <AmiBlitz3.ab2@12779>              Dc.b $4E,$40                                  ;TRAP    #00
00029992 <AmiBlitz3.ab2@12787>   TST.w varmode
00029996 <AmiBlitz3.ab2@12788>    BEQ.w writeword
0002999A <AmiBlitz3.ab2@12789>   BCLR #$0,D1
0002999E <AmiBlitz3.ab2@12790> BRA.w writeword
000299A4 <AmiBlitz3.ab2@12793>   TST.w varmode
000299A8 <AmiBlitz3.ab2@12794>    BEQ.w writeword
000299AC <AmiBlitz3.ab2@12795>   BCLR #$9,D1
000299B0 <AmiBlitz3.ab2@12796> BRA.w writeword
000299B6 <AmiBlitz3.ab2@12799>   TST.w proceduremode
000299BA <AmiBlitz3.ab2@12800>    BEQ.w writelong
000299BE <AmiBlitz3.ab2@12801>   BCLR #$19,D1
000299C2 <AmiBlitz3.ab2@12802> BRA.w writelong
000299C8 <AmiBlitz3.ab2@12805>   TST.w varmode
000299CC <AmiBlitz3.ab2@12806>   BEQ.w writelong
000299D0 <AmiBlitz3.ab2@12807>   BCLR #$10,D1
000299D6 <AmiBlitz3.ab2@12810>   ADDQ.l #1,destpointer
000299DE <AmiBlitz3.ab2@12811>   BCLR #$0,destpointer+3
000299E4 <AmiBlitz3.ab2@12812>   MOVEA.l destpointer,A4
000299EA <AmiBlitz3.ab2@12813>   CMPA.l destbufferend,A4
000299EE <AmiBlitz3.ab2@12814>    BCC.w writeword__overa
000299F0 <AmiBlitz3.ab2@12815>   MOVE.l D1,(A4)+
000299F6 <AmiBlitz3.ab2@12818>   MOVE.l A4,destpointer
000299FA <AmiBlitz3.ab2@12819>   CMPA.l bigpc(PC),A4
000299FE <AmiBlitz3.ab2@12820>    BHI.w writeword__nbp
00029A00 <AmiBlitz3.ab2@12821> RTS
00029A08 <AmiBlitz3.ab2@12824>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
00029A0E <AmiBlitz3.ab2@12825>   CLR.b fast
00029A14 <AmiBlitz3.ab2@12826>   CLR.b fpu
00029A1A <AmiBlitz3.ab2@12827>   CLR.b iee
00029A1C <AmiBlitz3.ab2@12828>   ADDQ.w #4,A4
00029A20 <AmiBlitz3.ab2@12829> BRA.w writeword__msa
00029A26 <AmiBlitz3.ab2@12835>   ADDQ.l #1,destpointer
00029A2E <AmiBlitz3.ab2@12836>   BCLR #$0,destpointer+3
00029A34 <AmiBlitz3.ab2@12837>   MOVEA.l destpointer,A4
00029A3A <AmiBlitz3.ab2@12838>   CMPA.l destbufferend,A4
00029A3E <AmiBlitz3.ab2@12839>    BCC.w writeword__over
00029A40 <AmiBlitz3.ab2@12840>   MOVE.w D1,(A4)+
00029A46 <AmiBlitz3.ab2@12843>   MOVE.l A4,destpointer
00029A4A <AmiBlitz3.ab2@12844>   CMPA.l bigpc(PC),A4
00029A4E <AmiBlitz3.ab2@12845>    BHI.w writeword__nbp
00029A50 <AmiBlitz3.ab2@12846> RTS
00029A56 <AmiBlitz3.ab2@12849>   ADDQ.l #1,destpointer
00029A5E <AmiBlitz3.ab2@12850>   BCLR #$0,destpointer+3
00029A64 <AmiBlitz3.ab2@12851>   MOVEA.l destpointer,A4
00029A6A <AmiBlitz3.ab2@12852>   CMPA.l destbufferend,A4
00029A6E <AmiBlitz3.ab2@12853>    BCC.w writeword__over
00029A70 <AmiBlitz3.ab2@12854>   MOVE.w D1,(A4)+
00029A76 <AmiBlitz3.ab2@12855>   MOVE.l A4,destpointer
00029A7A <AmiBlitz3.ab2@12856>   CMPA.l bigpc(PC),A4
00029A7E <AmiBlitz3.ab2@12857>    BHI.w writeword__nbp
00029A80 <AmiBlitz3.ab2@12858> RTS
00029A86 <AmiBlitz3.ab2@12861>   TST.w cfetchmode
00029A8A <AmiBlitz3.ab2@12862>   BNE.w writeword__nbp2
00029A90 <AmiBlitz3.ab2@12863>   MOVE.l A4,bigpc
00029A92 <AmiBlitz3.ab2@12866> RTS
00029A9A <AmiBlitz3.ab2@12869>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
00029A9C <AmiBlitz3.ab2@12870>   ADDQ.w #2,A4
00029AA2 <AmiBlitz3.ab2@12871>   CLR.b fast
00029AA8 <AmiBlitz3.ab2@12872>   CLR.b fpu
00029AAE <AmiBlitz3.ab2@12873>   CLR.b iee
00029AB2 <AmiBlitz3.ab2@12874> BRA.w writeword__ms
00029AB8 <AmiBlitz3.ab2@12878>   MOVEA.l destpointer,A4
00029ABE <AmiBlitz3.ab2@12879>   CMPA.l destbufferend,A4
00029AC2 <AmiBlitz3.ab2@12880>    BCC.w writebyte__over
00029AC4 <AmiBlitz3.ab2@12881>   MOVE.b D1,(A4)+
00029ACA <AmiBlitz3.ab2@12884>   MOVE.l A4,destpointer
00029ACE <AmiBlitz3.ab2@12885>   CMPA.l bigpc(PC),A4
00029AD2 <AmiBlitz3.ab2@12886>    BHI.w writebyte__nbp
00029AD4 <AmiBlitz3.ab2@12887> RTS
00029ADA <AmiBlitz3.ab2@12890>   TST.w cfetchmode
00029ADE <AmiBlitz3.ab2@12891>    BNE.w writebyte__nbp2
00029AE4 <AmiBlitz3.ab2@12892>   MOVE.l A4,bigpc
00029AE6 <AmiBlitz3.ab2@12895> RTS
00029AEE <AmiBlitz3.ab2@12898>   MOVE.w #-1,dontwrite
00029AF0 <AmiBlitz3.ab2@12899>   ADDQ.w #1,A4
00029AF6 <AmiBlitz3.ab2@12900>   CLR.b fast
00029AFC <AmiBlitz3.ab2@12901>   CLR.b fpu
00029B02 <AmiBlitz3.ab2@12902>   CLR.b iee
00029B06 <AmiBlitz3.ab2@12903> BRA.w writebyte__ms
00029B0A <AmiBlitz3.ab2@12906> bigpc:   Ds.l 1
00029B0C <AmiBlitz3.ab2@12910>   MOVE.w (A0)+,D1
00029B10 <AmiBlitz3.ab2@12911>   BSR.w writeword
00029B12 <AmiBlitz3.ab2@12914>     CMPA.l A1,A0
00029B16 <AmiBlitz3.ab2@12915>     BCC.w pokecode__done
00029B18 <AmiBlitz3.ab2@12916>       MOVE.w (A0)+,D1
00029B1C <AmiBlitz3.ab2@12917>       BSR.w writeword
00029B20 <AmiBlitz3.ab2@12918> BRA.w pokecode__loop
00029B22 <AmiBlitz3.ab2@12921> RTS
00029B24 <AmiBlitz3.ab2@12924>   MOVE.w (A0)+,D1
00029B28 <AmiBlitz3.ab2@12925>   BSR.w writeword
00029B2A <AmiBlitz3.ab2@12926>   CMPA.l A1,A0
00029B2E <AmiBlitz3.ab2@12927>   BCS.w pokecode2
00029B30 <AmiBlitz3.ab2@12928> RTS
00029B36 <AmiBlitz3.ab2@12934>   TST.b iniffcommand
00029B3A <AmiBlitz3.ab2@12935>   BEQ 'l1
00029B3E <AmiBlitz3.ab2@12936>     MOVE.w #$4880,D1
00029B44 <AmiBlitz3.ab2@12937>     OR.w regnum,D1
00029B48 <AmiBlitz3.ab2@12938>     BSR writeword
00029B4A <AmiBlitz3.ab2@12941> RTS
00029B4E <AmiBlitz3.ab2@12944>   BSR.w convert_byte_to_word
00029B54 <AmiBlitz3.ab2@12947>   TST.b iee
00029B58 <AmiBlitz3.ab2@12948>   BEQ 'old
00029B5C <AmiBlitz3.ab2@12949>   CMP.b #5,d2
00029B60 <AmiBlitz3.ab2@12950>   BEQ wtof
00029B64 <AmiBlitz3.ab2@12953>   MOVE.w #$48C0,D1
00029B6A <AmiBlitz3.ab2@12954>   OR.w regnum,D1
00029B6E <AmiBlitz3.ab2@12955> BRA.w writeword
00029B70 <AmiBlitz3.ab2@12958>   MOVEQ #0,d0
00029B76 <AmiBlitz3.ab2@12959>   MOVE.w regnum,d0
00029B78 <AmiBlitz3.ab2@12960>   ASL.l #7,d0
00029B7E <AmiBlitz3.ab2@12961>   MOVE.l #$f2005000,d1
00029B80 <AmiBlitz3.ab2@12962>   OR.l d0,d1
00029B82 <AmiBlitz3.ab2@12963>   ASL.l #1,d0
00029B84 <AmiBlitz3.ab2@12964>   ASL.l #8,d0
00029B86 <AmiBlitz3.ab2@12965>   OR.l d0,d1
00029B8A <AmiBlitz3.ab2@12966> BRA writelong
00029B8E <AmiBlitz3.ab2@12970>   BSR.w convert_byte_to_word
00029B92 <AmiBlitz3.ab2@12973>   MOVE.w #$4840,D1
00029B98 <AmiBlitz3.ab2@12974>   OR.w regnum,D1
00029B9C <AmiBlitz3.ab2@12975>    BSR.w writeword
00029BA0 <AmiBlitz3.ab2@12976>   MOVE.w #$4240,D1
00029BA6 <AmiBlitz3.ab2@12977>   OR.w regnum,D1
00029BAA <AmiBlitz3.ab2@12978> BRA.w writeword
00029BAE <AmiBlitz3.ab2@12982>   CMP.w #$ffdc,d1
00029BB2 <AmiBlitz3.ab2@12983>   BNE 'negfpu
00029BB4 <AmiBlitz3.ab2@12984>   MOVEQ #0,d0
00029BBA <AmiBlitz3.ab2@12985>   MOVE.w regnum,d0
00029BBC <AmiBlitz3.ab2@12986>   ASL.l #7,d0
00029BC2 <AmiBlitz3.ab2@12987>   MOVE.l #$f2004000,d1
00029BC4 <AmiBlitz3.ab2@12988>   OR.l d0,d1
00029BC6 <AmiBlitz3.ab2@12989>   ASL.l #1,d0
00029BC8 <AmiBlitz3.ab2@12990>   ASL.l #8,d0
00029BCA <AmiBlitz3.ab2@12991>   OR.l d0,d1
00029BCE <AmiBlitz3.ab2@12992> BRA writelong
00029BD0 <AmiBlitz3.ab2@12996>   MOVEQ #0,d1
00029BD6 <AmiBlitz3.ab2@12997>   MOVE.w regnum,d1                                         ;fpu neg
00029BD8 <AmiBlitz3.ab2@12998>   ASL.l #7,d1
00029BDE <AmiBlitz3.ab2@12999>   OR.l #$f200001a,d1
00029BE0 <AmiBlitz3.ab2@13000>   MOVE.l d0,-(a7)
00029BE2 <AmiBlitz3.ab2@13001>   MOVEQ #0,d0
00029BE8 <AmiBlitz3.ab2@13002>   MOVE.w regnum,d0
00029BEA <AmiBlitz3.ab2@13003>   ASL.l #8,d0
00029BEC <AmiBlitz3.ab2@13004>   ASL.l #2,d0
00029BEE <AmiBlitz3.ab2@13005>   OR.l d0,d1
00029BF0 <AmiBlitz3.ab2@13006>   MOVE.l (a7)+,d0
00029BF4 <AmiBlitz3.ab2@13007> BRA writelong
00029BFA <AmiBlitz3.ab2@13010>    TST.b iee
00029BFE <AmiBlitz3.ab2@13011>    BNE wtof
00029C02 <AmiBlitz3.ab2@13012>    BSR.w convert_byte_to_long
00029C06 <AmiBlitz3.ab2@13015>    MOVE.w #$FFDC,D1
00029C0C <AmiBlitz3.ab2@13018>    TST.b iee
00029C10 <AmiBlitz3.ab2@13019>    BNE ltof
00029C16 <AmiBlitz3.ab2@13020>    MOVE.w D1,libjsr+2
00029C1A <AmiBlitz3.ab2@13021>    BSR.w JL_0_AD40
00029C1C <AmiBlitz3.ab2@13022>   MOVE.l D4,D1
00029C20 <AmiBlitz3.ab2@13023>    BSR.w JL_0_AD38
00029C24 <AmiBlitz3.ab2@13024>   MOVE.w #$C900,D1
00029C28 <AmiBlitz3.ab2@13025>    BSR.w Atokejsr
00029C2C <AmiBlitz3.ab2@13026>    BSR.w JL_0_A352
00029C32 <AmiBlitz3.ab2@13027>   MOVE.l libjsr,D1
00029C36 <AmiBlitz3.ab2@13028>    BSR.w writelong
00029C3A <AmiBlitz3.ab2@13029>    BSR.w JL_0_A36E
00029C3C <AmiBlitz3.ab2@13030>   MOVE.l D5,D1
00029C40 <AmiBlitz3.ab2@13031> BRA.w JL_0_AD38
00029C42 <AmiBlitz3.ab2@13034> RTS
00029C46 <AmiBlitz3.ab2@13037>   MOVE.w #$C317,D1
00029C4C <AmiBlitz3.ab2@13038>   TST.b typecheck
00029C50 <AmiBlitz3.ab2@13039>   BEQ 'l1
00029C56 <AmiBlitz3.ab2@13040>    TST.b notypecheck
00029C5A <AmiBlitz3.ab2@13041>    BNE 'l1
00029C60 <AmiBlitz3.ab2@13042>    TST.l lasttoken
00029C66 <AmiBlitz3.ab2@13049>   TST.b debugmode
00029C6A <AmiBlitz3.ab2@13050>    BEQ.w JL_0_9696
00029C72 <AmiBlitz3.ab2@13051>   BTST #$7,overflowcheck
00029C76 <AmiBlitz3.ab2@13052>    BEQ.w JL_0_9696
00029C7C <AmiBlitz3.ab2@13053>   TST.w cfetchmode
00029C80 <AmiBlitz3.ab2@13054>    BNE.w JL_0_9696
00029C86 <AmiBlitz3.ab2@13055>   TST.w regnum
00029C8A <AmiBlitz3.ab2@13056>    BEQ.w JL_0_968A
00029C8C <AmiBlitz3.ab2@13057>   MOVE.w D1,-(A7)
00029C90 <AmiBlitz3.ab2@13058>   MOVE.w JL_0_9698(PC),D1
00029C94 <AmiBlitz3.ab2@13059>    BSR.w writeword
00029C9A <AmiBlitz3.ab2@13060>   MOVE.w regnum,D1
00029C9E <AmiBlitz3.ab2@13061>   OR.w L_0_969C(PC),D1
00029CA2 <AmiBlitz3.ab2@13062>    BSR.w writeword
00029CA4 <AmiBlitz3.ab2@13063>   MOVE.w (A7)+,D1
00029CA8 <AmiBlitz3.ab2@13064>    BSR.w JL_0_968A
00029CAC <AmiBlitz3.ab2@13065>   MOVE.w L_0_969A(PC),D1
00029CB0 <AmiBlitz3.ab2@13066> BRA.w writeword
00029CB4 <AmiBlitz3.ab2@13070>   MOVEM.l D0-D7/A0-A6,-(A7)
00029CB8 <AmiBlitz3.ab2@13071>    BSR.w Atokejsr
00029CBC <AmiBlitz3.ab2@13072>   MOVEM.l (A7)+,D0-D7/A0-A6
00029CBE <AmiBlitz3.ab2@13075> RTS
00029CC0 <AmiBlitz3.ab2@13078>   MOVE.l D0,-(A7)
00029CC2 <AmiBlitz3.ab2@13081>   MOVE.l (A7)+,D0
00029CC4 <AmiBlitz3.ab2@13084>   MOVE.l D0,D0
00029CC8 <AmiBlitz3.ab2@13087>   BSR.w convert_word_to_long
00029CCE <AmiBlitz3.ab2@13088>   TST.b iee
00029CD2 <AmiBlitz3.ab2@13089>   BEQ 'old
00029CD6 <AmiBlitz3.ab2@13090>   CMP.b #5,d2
00029CDA <AmiBlitz3.ab2@13091>   BNE 'old
00029CDC <AmiBlitz3.ab2@13092> RTS
00029CE0 <AmiBlitz3.ab2@13095> BRA.w JL_0_9600
00029CE4 <AmiBlitz3.ab2@13099>   MOVE.w #$C316,D1
00029CEA <AmiBlitz3.ab2@13100>   TST.b typecheck
00029CEE <AmiBlitz3.ab2@13101>   BEQ 'l1
00029CF4 <AmiBlitz3.ab2@13102>   TST.b peekaddrsize
00029CF8 <AmiBlitz3.ab2@13103>   BNE 'l1
00029CFE <AmiBlitz3.ab2@13104>   TST.b notypecheck
00029D02 <AmiBlitz3.ab2@13105>   BNE 'l1
00029D08 <AmiBlitz3.ab2@13106>   TST.l lasttoken
00029D0C <AmiBlitz3.ab2@13112> BRA.w JL_0_963A
00029D10 <AmiBlitz3.ab2@13116>   MOVE.w #$C318,D1
00029D16 <AmiBlitz3.ab2@13117>   TST.b typecheck
00029D1A <AmiBlitz3.ab2@13118>   BEQ 'l1
00029D20 <AmiBlitz3.ab2@13119>   TST.b peekaddrsize
00029D24 <AmiBlitz3.ab2@13120>   BNE 'l1
00029D2A <AmiBlitz3.ab2@13121>   TST.b notypecheck
00029D2E <AmiBlitz3.ab2@13122>   BNE 'l1
00029D34 <AmiBlitz3.ab2@13123>   TST.l lasttoken
00029D38 <AmiBlitz3.ab2@13129> BRA.w JL_0_963A
00029D3C <AmiBlitz3.ab2@13133>   MOVE.w #$C318,D1
00029D42 <AmiBlitz3.ab2@13134>   TST.b typecheck
00029D46 <AmiBlitz3.ab2@13135>   BEQ 'l1
00029D4C <AmiBlitz3.ab2@13136>   TST.b notypecheck
00029D50 <AmiBlitz3.ab2@13137>   BNE 'l1
00029D56 <AmiBlitz3.ab2@13138>   TST.l lasttoken
00029D5A <AmiBlitz3.ab2@13144>   BSR.w JL_0_963A
00029D5E <AmiBlitz3.ab2@13145> BRA.w convert_word_to_quick
00029D62 <AmiBlitz3.ab2@13149> BRA.w JL_0_9600
00029D64 <AmiBlitz3.ab2@13153> RTS
00029D68 <AmiBlitz3.ab2@13157>   MOVE.w #$C319,D1
00029D6E <AmiBlitz3.ab2@13158>   TST.b typecheck
00029D72 <AmiBlitz3.ab2@13159>   BEQ 'l1
00029D78 <AmiBlitz3.ab2@13160>   TST.b notypecheck
00029D7C <AmiBlitz3.ab2@13161>   BNE 'l1
00029D82 <AmiBlitz3.ab2@13162>   TST.l lasttoken
00029D86 <AmiBlitz3.ab2@13169>   BSR.w JL_0_963A
00029D8A <AmiBlitz3.ab2@13172>   MOVE.w #$4240,D1
00029D90 <AmiBlitz3.ab2@13173>   OR.w regnum,D1
00029D94 <AmiBlitz3.ab2@13174>   BSR.w writeword
00029D98 <AmiBlitz3.ab2@13175>   MOVE.w #$4840,D1
00029D9E <AmiBlitz3.ab2@13176>   OR.w regnum,D1
00029DA2 <AmiBlitz3.ab2@13177> BRA.w writeword
00029DA6 <AmiBlitz3.ab2@13181> BRA.w JL_0_96D0
00029DAA <AmiBlitz3.ab2@13185>   BSR.w JL_0_96D0
00029DAE <AmiBlitz3.ab2@13186> BRA.w convert_word_to_long
00029DB0 <AmiBlitz3.ab2@13191>   MOVEQ #0,d0
00029DB6 <AmiBlitz3.ab2@13192>   MOVE.w regnum,d0
00029DB8 <AmiBlitz3.ab2@13193>   ASL.l #7,d0
00029DBE <AmiBlitz3.ab2@13194>   MOVE.l #$f2004000,d1
00029DC0 <AmiBlitz3.ab2@13195>   OR.l d0,d1
00029DC2 <AmiBlitz3.ab2@13196>   ASL.l #1,d0
00029DC4 <AmiBlitz3.ab2@13197>   ASL.l #8,d0
00029DC6 <AmiBlitz3.ab2@13198>   OR.l d0,d1
00029DCA <AmiBlitz3.ab2@13199>   BSR writelong
00029DD0 <AmiBlitz3.ab2@13200>   MOVE.w regnum,d0
00029DD2 <AmiBlitz3.ab2@13201>   ASL.l #7,d0
00029DD8 <AmiBlitz3.ab2@13202>   MOVE.l #$f23c4423,d1                                     ;fmul.s #1/65536,fpreg
00029DDA <AmiBlitz3.ab2@13203>   OR.w d0,d1
00029DDE <AmiBlitz3.ab2@13204>   BSR writelong
00029DE4 <AmiBlitz3.ab2@13205>   MOVE.l #$37800000,d1
00029DE8 <AmiBlitz3.ab2@13206>   BSR writelong
00029DEA <AmiBlitz3.ab2@13207> RTS
00029DF0 <AmiBlitz3.ab2@13211>   TST.b iee
00029DF4 <AmiBlitz3.ab2@13212>   BNE qtof
00029DF8 <AmiBlitz3.ab2@13213>   MOVE.w #$D300,D1
00029DFA <AmiBlitz3.ab2@13216>   MOVE.w D1,-(A7)
00029DFE <AmiBlitz3.ab2@13217>    BSR.w JL_0_AD40
00029E00 <AmiBlitz3.ab2@13218>   MOVE.l D4,D1
00029E04 <AmiBlitz3.ab2@13219>    BSR.w JL_0_AD38
00029E08 <AmiBlitz3.ab2@13220>    BSR.w JL_0_A352
00029E0A <AmiBlitz3.ab2@13221>   MOVE.w (A7)+,D1
00029E0E <AmiBlitz3.ab2@13222>    BSR.w Atokejsr
00029E12 <AmiBlitz3.ab2@13223>    BSR.w JL_0_A36E
00029E14 <AmiBlitz3.ab2@13224>   MOVE.l D5,D1
00029E18 <AmiBlitz3.ab2@13225> BRA.w JL_0_AD38
00029E1A <AmiBlitz3.ab2@13229> RTS
00029E20 <AmiBlitz3.ab2@13232>   TST.b typecheck
00029E24 <AmiBlitz3.ab2@13233>   BEQ 'l1
00029E2A <AmiBlitz3.ab2@13234>   TST.b notypecheck
00029E2E <AmiBlitz3.ab2@13235>   BNE 'l1
00029E34 <AmiBlitz3.ab2@13236>   TST.l lasttoken
00029E3A <AmiBlitz3.ab2@13241>   TST.b iee
00029E3E <AmiBlitz3.ab2@13242>   BNE ftol
00029E42 <AmiBlitz3.ab2@13243>   MOVE.w #$C31A,D1
00029E46 <AmiBlitz3.ab2@13244>   BSR.w JL_0_963A
00029E4A <AmiBlitz3.ab2@13245>   BSR.w JL_0_974A
00029E4E <AmiBlitz3.ab2@13246> BRA.w convert_long_to_byte
00029E50 <AmiBlitz3.ab2@13250> RTS
00029E56 <AmiBlitz3.ab2@13253>   TST.b typecheck
00029E5A <AmiBlitz3.ab2@13254>   BEQ 'l1
00029E60 <AmiBlitz3.ab2@13255>   TST.b notypecheck
00029E64 <AmiBlitz3.ab2@13256>   BNE 'l1
00029E6A <AmiBlitz3.ab2@13257>   TST.l lasttoken
00029E70 <AmiBlitz3.ab2@13262>   TST.b iee
00029E74 <AmiBlitz3.ab2@13263>   BNE ftol
00029E78 <AmiBlitz3.ab2@13264>   MOVE.w #$C31B,D1
00029E7C <AmiBlitz3.ab2@13265>   BSR.w JL_0_963A
00029E80 <AmiBlitz3.ab2@13266>   BSR.w JL_0_974A
00029E84 <AmiBlitz3.ab2@13267> BRA.w convert_long_to_word
00029E86 <AmiBlitz3.ab2@13271> RTS
00029E8C <AmiBlitz3.ab2@13274>   TST.b iee
00029E90 <AmiBlitz3.ab2@13275>   BNE ftol
00029E94 <AmiBlitz3.ab2@13276>   MOVE.w #$C31C,D1
00029E98 <AmiBlitz3.ab2@13277>   BSR.w JL_0_963A
00029E9C <AmiBlitz3.ab2@13280>   MOVE.w #$FFE2,D1
00029EA0 <AmiBlitz3.ab2@13281> BRA.w JL_0_9604
00029EA2 <AmiBlitz3.ab2@13284>   MOVE.l d0,-(a7)
00029EA4 <AmiBlitz3.ab2@13285>   MOVEQ #0,d0
00029EAA <AmiBlitz3.ab2@13286>   MOVE.w regnum,d0
00029EAC <AmiBlitz3.ab2@13287>   ASL.l #7,d0
00029EB2 <AmiBlitz3.ab2@13288>   MOVE.l #$f2006000,d1
00029EB4 <AmiBlitz3.ab2@13289>   OR.l d0,d1
00029EB6 <AmiBlitz3.ab2@13290>   ASL.l #1,d0
00029EB8 <AmiBlitz3.ab2@13291>   ASL.l #8,d0
00029EBA <AmiBlitz3.ab2@13292>   OR.l d0,d1
00029EBC <AmiBlitz3.ab2@13293>   MOVE.l (a7)+,d0
00029EC0 <AmiBlitz3.ab2@13294> BRA writelong
00029EC2 <AmiBlitz3.ab2@13298>   MOVE.l d0,-(a7)
00029EC4 <AmiBlitz3.ab2@13299>   MOVEQ #0,d0
00029ECA <AmiBlitz3.ab2@13300>   MOVE.l #$f23c4023,d1
00029ED0 <AmiBlitz3.ab2@13301>   MOVE.w regnum,d0
00029ED2 <AmiBlitz3.ab2@13302>   ASL.l #7,d0
00029ED4 <AmiBlitz3.ab2@13303>   OR.l d0,d1
00029ED8 <AmiBlitz3.ab2@13304>   BSR writelong
00029EDE <AmiBlitz3.ab2@13305>   MOVE.l #$00010000,d1
00029EE2 <AmiBlitz3.ab2@13306>   BSR writelong
00029EE8 <AmiBlitz3.ab2@13307>   MOVE.w regnum,d0
00029EEA <AmiBlitz3.ab2@13308>   ASL.l #7,d0
00029EF0 <AmiBlitz3.ab2@13309>   MOVE.l #$f2006000,d1
00029EF2 <AmiBlitz3.ab2@13310>   OR.l d0,d1
00029EF4 <AmiBlitz3.ab2@13311>   ASL.l #1,d0
00029EF6 <AmiBlitz3.ab2@13312>   ASL.l #8,d0
00029EF8 <AmiBlitz3.ab2@13313>   OR.l d0,d1
00029EFC <AmiBlitz3.ab2@13314>   BSR writelong
00029EFE <AmiBlitz3.ab2@13315>   MOVE.l (a7)+,d0
00029F00 <AmiBlitz3.ab2@13316> RTS
00029F02 <AmiBlitz3.ab2@13320> RTS
00029F08 <AmiBlitz3.ab2@13324>   TST.b iee
00029F0C <AmiBlitz3.ab2@13325>   BNE ftoq
00029F10 <AmiBlitz3.ab2@13326>   MOVE.w #$C31B,D1
00029F14 <AmiBlitz3.ab2@13327>   BSR.w JL_0_963A
00029F18 <AmiBlitz3.ab2@13328>   MOVE.w #$D301,D1
00029F1C <AmiBlitz3.ab2@13329> BRA.w JL_0_96FC
00029F22 <AmiBlitz3.ab2@13335>    TST.b blitzparloop
00029F26 <AmiBlitz3.ab2@13336>    BNE 'l1
00029F2C <AmiBlitz3.ab2@13337>    TST.b funcparloop
00029F30 <AmiBlitz3.ab2@13338>    BNE 'l1
00029F34 <AmiBlitz3.ab2@13339>    BRA error_convert_types
00029F3C <AmiBlitz3.ab2@13342>   CMP.b #2,optistring
00029F40 <AmiBlitz3.ab2@13343>   BEQ JLrts
00029F46 <AmiBlitz3.ab2@13344>   MOVE.w stol,D1
00029F4A <AmiBlitz3.ab2@13345>   BSR.w writeword
00029F52 <AmiBlitz3.ab2@13346>   CMPI.w #$2,sbgot
00029F56 <AmiBlitz3.ab2@13347>   BCS.w sbtolong
00029F5A <AmiBlitz3.ab2@13348>   MOVE.w ceos(PC),D1
00029F5E <AmiBlitz3.ab2@13349>   BSR.w writeword
00029F64 <AmiBlitz3.ab2@13352>   MOVE.w regnum,D1
00029F66 <AmiBlitz3.ab2@13353>   LSL.w #8,D1
00029F68 <AmiBlitz3.ab2@13354>   LSL.w #1,D1
00029F70 <AmiBlitz3.ab2@13355>   CMPI.w #$2,sbgot
00029F74 <AmiBlitz3.ab2@13356>   BCS.w JL_0_98E8
00029F7A <AmiBlitz3.ab2@13357>   MOVE.w a2offset,D3
00029F80 <AmiBlitz3.ab2@13358>   SUB.w thisstuse,D3
00029F84 <AmiBlitz3.ab2@13359>   CMP.w #$6,D3
00029F88 <AmiBlitz3.ab2@13360>   BNE.w JL_0_98D4b
00029F8E <AmiBlitz3.ab2@13361>   OR.w movestst2,D1
00029F92 <AmiBlitz3.ab2@13362>   BSR.w writeword
00029F98 <AmiBlitz3.ab2@13363>   LEA movestst2+2,A0
00029F9E <AmiBlitz3.ab2@13364>   LEA movestst2f,A1
00029FA2 <AmiBlitz3.ab2@13365> BRA.w pokecode2
00029FA8 <AmiBlitz3.ab2@13369>   OR.w movea7dn,D1
00029FAC <AmiBlitz3.ab2@13370>   BSR.w writeword
00029FB2 <AmiBlitz3.ab2@13371>   MOVE.l #0,D1
00029FB6 <AmiBlitz3.ab2@13372> BRA.w writeword
00029FBC <AmiBlitz3.ab2@13376>   ADDQ.w #1,fuckpos
00029FC0 <AmiBlitz3.ab2@13377>   BSR.w writeconvertcode
00029FC6 <AmiBlitz3.ab2@13378>   SUBQ.w #1,fuckpos
00029FC8 <AmiBlitz3.ab2@13380> RTS
00029FCA <AmiBlitz3.ab2@13384>   MOVE.w D3,D1
00029FCE <AmiBlitz3.ab2@13385>   CMP.w #7,d1
00029FD2 <AmiBlitz3.ab2@13386>   BLE 'ok
00029FD8 <AmiBlitz3.ab2@13387>   JMP errorinternalconvert
00029FDA <AmiBlitz3.ab2@13388> 'ok  SUBQ.w #1,D1
00029FDE <AmiBlitz3.ab2@13389>   MULU #$7,D1
00029FE0 <AmiBlitz3.ab2@13390>   ADD.w D2,D1
00029FE2 <AmiBlitz3.ab2@13391>   SUBQ.w #1,D1
00029FE4 <AmiBlitz3.ab2@13392>   LSL.w #2,D1
00029FEA <AmiBlitz3.ab2@13393>   LEA convtable,A0
00029FEE <AmiBlitz3.ab2@13394>   MOVE.l $0(A0,D1.W),D1
00029FF2 <AmiBlitz3.ab2@13395>   BEQ.w JL_0_97A2
00029FF4 <AmiBlitz3.ab2@13396>     MOVEA.l D1,A0
00029FF8 <AmiBlitz3.ab2@13397>     CMP.b #$ff,d3
00029FFC <AmiBlitz3.ab2@13398>     BEQ JL_0_97A2
00029FFE <AmiBlitz3.ab2@13399> JMP (A0)
0002A000 <AmiBlitz3.ab2@13402> RTS
0002A004 <AmiBlitz3.ab2@13405> usedfrom:  Ds.l 1
0002A008 <AmiBlitz3.ab2@13412>   CMP.w #"\",D0
0002A00C <AmiBlitz3.ab2@13413>   BNE.w JL_0_97C2
0002A010 <AmiBlitz3.ab2@13414>     CMP.b #"\",(a5)
0002A014 <AmiBlitz3.ab2@13415>     BNE 'first
0002A01A <AmiBlitz3.ab2@13416>       MOVE.l A5,usedfrom
0002A020 <AmiBlitz3.ab2@13417>       LEA path2,A5
0002A024 <AmiBlitz3.ab2@13418> BRA 'g1
0002A026 <AmiBlitz3.ab2@13421>     SUBQ.w #1,A5
0002A02C <AmiBlitz3.ab2@13422>   MOVE.l A5,usedfrom
0002A032 <AmiBlitz3.ab2@13423>   LEA usedpath,A5                                          ;read path
0002A036 <AmiBlitz3.ab2@13426>   BSR.w get1bytemain
0002A03C <AmiBlitz3.ab2@13429>   CLR.w flagmask
0002A040 <AmiBlitz3.ab2@13430>   CMP.w #$2A,D0
0002A044 <AmiBlitz3.ab2@13431>    BNE.w JL_0_983A
0002A04C <AmiBlitz3.ab2@13432>   MOVE.w #$0001,flagmask
0002A050 <AmiBlitz3.ab2@13434>    BSR.w getparameter2
0002A054 <AmiBlitz3.ab2@13437>    BEQ.w syntaxerr
0002A058 <AmiBlitz3.ab2@13438>   CMP.w #$28,D0
0002A05C <AmiBlitz3.ab2@13439>    BEQ.w JL_0_9830
0002A060 <AmiBlitz3.ab2@13440>   CMP.w #$2E,D0
0002A064 <AmiBlitz3.ab2@13441>    BEQ.w JL_0_980C
0002A068 <AmiBlitz3.ab2@13442>   CMP.w #$24,D0
0002A06C <AmiBlitz3.ab2@13443>    BNE.w JL_0_9838
0002A074 <AmiBlitz3.ab2@13444>   ORI.w #$8,flagmask
0002A078 <AmiBlitz3.ab2@13445>    BSR.w storeloc
0002A07C <AmiBlitz3.ab2@13446>    BSR.w get1bytemain
0002A080 <AmiBlitz3.ab2@13447> BRA.w JL_0_9822
0002A084 <AmiBlitz3.ab2@13451>   BSR.w storeloc
0002A086 <AmiBlitz3.ab2@13452>   MOVE.w D2,-(A7)
0002A08C <AmiBlitz3.ab2@13453>   LEA namebuff2,A1
0002A090 <AmiBlitz3.ab2@13454>    BSR.w makename3
0002A094 <AmiBlitz3.ab2@13455>    BEQ.w syntaxerr
0002A096 <AmiBlitz3.ab2@13456>   MOVE.w (A7)+,D2
0002A098 <AmiBlitz3.ab2@13459>    MOVE.w D0,D1
0002A09C <AmiBlitz3.ab2@13460>    BSR.w resloc
0002A0A0 <AmiBlitz3.ab2@13461>    CMP.w #$28,D1
0002A0A4 <AmiBlitz3.ab2@13462>    BNE.w JL_0_9838
0002A0AC <AmiBlitz3.ab2@13465>   ORI.w #$2,flagmask
0002A0AE <AmiBlitz3.ab2@13468> RTS
0002A0B2 <AmiBlitz3.ab2@13472>   CMP.w #$40,D0
0002A0B6 <AmiBlitz3.ab2@13473>    BNE.w JL_0_984E
0002A0BE <AmiBlitz3.ab2@13474>   MOVE.w #$0005,flagmask
0002A0C2 <AmiBlitz3.ab2@13475> BRA.w JL_0_97D8
0002A0C6 <AmiBlitz3.ab2@13479>   BSR.w makename2
0002A0CA <AmiBlitz3.ab2@13480> BRA.w JL_0_97DC
0002A0CE <AmiBlitz3.ab2@13484>   MOVE.w #$FED3,D1
0002A0D2 <AmiBlitz3.ab2@13485>    BSR.w uselib
0002A0D8 <AmiBlitz3.ab2@13486>   LEA pusha3,A0
0002A0DE <AmiBlitz3.ab2@13487>   LEA pusha3f,A1
0002A0E2 <AmiBlitz3.ab2@13488> BRA.w pokecode
0002A0E6 <AmiBlitz3.ab2@13492>   MOVE.w #$FED3,D1
0002A0EA <AmiBlitz3.ab2@13493>    BSR.w uselib
0002A0F0 <AmiBlitz3.ab2@13494>   LEA pulla3,A0
0002A0F6 <AmiBlitz3.ab2@13495>   LEA pulla3f,A1
0002A0FA <AmiBlitz3.ab2@13496> BRA.w pokecode
0002A0FC <AmiBlitz3.ab2@13500> ceos:   Dc.b $42,$1B                                       ;CLR.B   (A3)+             ;*!
0002A104 <AmiBlitz3.ab2@13505>     CMP.b #2,optistring
0002A108 <AmiBlitz3.ab2@13506>    BEQ 'l10
0002A10C <AmiBlitz3.ab2@13507>    MOVE.w ceos(PC),D1
0002A110 <AmiBlitz3.ab2@13508>    BSR.w writeword                                         ;clr.b (a3)
0002A116 <AmiBlitz3.ab2@13511>   MOVE.w regnum,D1
0002A118 <AmiBlitz3.ab2@13512>   LSL.w #8,D1
0002A11A <AmiBlitz3.ab2@13513>   LSL.w #1,D1
0002A122 <AmiBlitz3.ab2@13514>   CMPI.w #$2,sbgot
0002A126 <AmiBlitz3.ab2@13515>    BCS.w JL_0_98E8
0002A12C <AmiBlitz3.ab2@13516>   MOVE.w a2offset,D3                                       ;stackuse,d3 org source
0002A132 <AmiBlitz3.ab2@13517>   SUB.w thisstuse,D3
0002A136 <AmiBlitz3.ab2@13518>   CMP.w #$6,D3
0002A13A <AmiBlitz3.ab2@13519>    BNE.w JL_0_98D4
0002A140 <AmiBlitz3.ab2@13520>   OR.w movestst2,D1
0002A144 <AmiBlitz3.ab2@13521>    BSR.w writeword
0002A14A <AmiBlitz3.ab2@13522>   LEA movestst2+2,A0
0002A150 <AmiBlitz3.ab2@13523>   LEA movestst2f,A1
0002A154 <AmiBlitz3.ab2@13524> BRA.w pokecode2
0002A15A <AmiBlitz3.ab2@13528>    OR.w movea7dn,D1
0002A15E <AmiBlitz3.ab2@13529>    BSR.w writeword
0002A164 <AmiBlitz3.ab2@13530>   MOVE.l movea7dn+2,D1
0002A168 <AmiBlitz3.ab2@13542>   BSR writelong
0002A170 <AmiBlitz3.ab2@13545>    CMP.w #6,regnum
0002A174 <AmiBlitz3.ab2@13546>    BEQ 'l1
0002A17A <AmiBlitz3.ab2@13547>    TST.w stackpar
0002A17E <AmiBlitz3.ab2@13548>    BNE 'l1
0002A184 <AmiBlitz3.ab2@13549>    TST.b funcparloop
0002A188 <AmiBlitz3.ab2@13550>    BEQ 'l1
0002A18E <AmiBlitz3.ab2@13551>    MOVE.l #$48780000,d1
0002A192 <AmiBlitz3.ab2@13552>    BSR writelong
0002A194 <AmiBlitz3.ab2@13556> RTS
0002A196 <AmiBlitz3.ab2@13561>      MOVE.l d1,-(a7)
0002A19E <AmiBlitz3.ab2@13562>      CMP.w #6,regnum
0002A1A2 <AmiBlitz3.ab2@13563>      BEQ 'l1
0002A1A8 <AmiBlitz3.ab2@13564>      TST.w stackpar
0002A1AC <AmiBlitz3.ab2@13565>      BNE 'l1
0002A1B2 <AmiBlitz3.ab2@13566>      TST.b funcparloop
0002A1B6 <AmiBlitz3.ab2@13567>      BEQ 'l1
0002A1BC <AmiBlitz3.ab2@13568>      MOVE.l #$48780000,d1
0002A1C0 <AmiBlitz3.ab2@13569>      BSR writelong
0002A1C2 <AmiBlitz3.ab2@13572>      MOVE.l (a7)+,d1
0002A1C8 <AmiBlitz3.ab2@13574>    OR.w movestdn,D1
0002A1CC <AmiBlitz3.ab2@13575>    BSR.w writeword
0002A1D0 <AmiBlitz3.ab2@13576>   MOVE.w #$FED3,D1
0002A1D4 <AmiBlitz3.ab2@13577>    BSR.w uselib
0002A1D8 <AmiBlitz3.ab2@13578>   MOVE.w $A(A1),D1
0002A1DC <AmiBlitz3.ab2@13579> BRA.w writeword
0002A1DE <AmiBlitz3.ab2@13582> unknown:    Ds.w 1
0002A1E4 <AmiBlitz3.ab2@13585> somecode:   Dc.b $0C,$80,$00,$01,$00,$00                   ;CMPI.L  #$00010000,D0
0002A1E8 <AmiBlitz3.ab2@13586> somecode2:  Dc.b $65,$00,$00,$08                           ;BCS.W   codeisok
0002A1EE <AmiBlitz3.ab2@13587>             Dc.b $4E,$B9,$00,$00,$00,$00                   ;JSR $00000000
0002A1F4 <AmiBlitz3.ab2@13593>   TST.b debugmode
0002A1F8 <AmiBlitz3.ab2@13594>   BEQ.w sharreval
0002A1FC <AmiBlitz3.ab2@13595>  BSR.w arreval
0002A200 <AmiBlitz3.ab2@13598>   MOVE.w somecode(PC),D1
0002A206 <AmiBlitz3.ab2@13599>   OR.w regnum,D1
0002A20A <AmiBlitz3.ab2@13600>    BSR.w writeword
0002A20C <AmiBlitz3.ab2@13601>   MOVEQ.l #$01,D1
0002A20E <AmiBlitz3.ab2@13602>   SWAP D1
0002A212 <AmiBlitz3.ab2@13603>    BSR.w writelong
0002A216 <AmiBlitz3.ab2@13604>   MOVE.l somecode2(PC),D1
0002A21A <AmiBlitz3.ab2@13605>    BSR.w writelong
0002A21E <AmiBlitz3.ab2@13606>   MOVE.w #$C309,D1
0002A222 <AmiBlitz3.ab2@13607> BRA.w Atokejsr
0002A224 <AmiBlitz3.ab2@13611>   MOVEQ.l #$02,D2
0002A226 <AmiBlitz3.ab2@13612>   MOVEQ.l #$00,D1
0002A228 <AmiBlitz3.ab2@13613>   MOVEQ.l #$00,D3
0002A22C <AmiBlitz3.ab2@13614> BRA.w maineval2
0002A22E <AmiBlitz3.ab2@13618>   MOVEQ.l #$03,D2
0002A230 <AmiBlitz3.ab2@13619>   MOVEQ.l #$00,D1
0002A232 <AmiBlitz3.ab2@13620>   MOVEQ.l #$00,D3
0002A238 <AmiBlitz3.ab2@13621>   MOVE.b notypecheck,-(a7)
0002A240 <AmiBlitz3.ab2@13622>   MOVE.b #1,notypecheck                                    ;typecheck need switch off for array offset calculation code
0002A246 <AmiBlitz3.ab2@13623>   JSR maineval2
0002A24C <AmiBlitz3.ab2@13624>   MOVE.b (a7)+,notypecheck                                 ;now its switch to old state
0002A24E <AmiBlitz3.ab2@13625>   RTS
0002A258 <AmiBlitz3.ab2@13629>   MOVE.w oldqflag,instringon
0002A25E <AmiBlitz3.ab2@13630>   MOVEA.l lastsourcepos,A5
0002A260 <AmiBlitz3.ab2@13631>   MOVEQ.l #-$01,D1
0002A262 <AmiBlitz3.ab2@13632>   MOVEQ.l #-$01,D3
0002A266 <AmiBlitz3.ab2@13633> BRA.w peval
0002A270 <AmiBlitz3.ab2@13638>   MOVE.w oldqflag,instringon
0002A276 <AmiBlitz3.ab2@13639>   MOVEA.l lastsourcepos,A5
0002A278 <AmiBlitz3.ab2@13642>   MOVEQ.l #-$01,D1
0002A27A <AmiBlitz3.ab2@13643>   MOVEQ.l #$00,D3
0002A280 <AmiBlitz3.ab2@13644>   MOVE.l leftsidetype,-(a7)
0002A286 <AmiBlitz3.ab2@13645>   MOVE.l rightsidetype,-(a7)
0002A28C <AmiBlitz3.ab2@13646>   CLR.l leftsidetype
0002A292 <AmiBlitz3.ab2@13647>   CLR.l rightsidetype
0002A298 <AmiBlitz3.ab2@13648>   JSR maineval
0002A29E <AmiBlitz3.ab2@13649>   MOVE.l (a7)+,rightsidetype
0002A2A4 <AmiBlitz3.ab2@13650>   MOVE.l (a7)+,leftsidetype
0002A2A6 <AmiBlitz3.ab2@13651>   RTS
0002A2B0 <AmiBlitz3.ab2@13655>   MOVE.w oldqflag,instringon
0002A2B6 <AmiBlitz3.ab2@13656>   MOVEA.l lastsourcepos,A5
0002A2B8 <AmiBlitz3.ab2@13657>   MOVEQ.l #$00,D1
0002A2BA <AmiBlitz3.ab2@13658>   MOVEQ.l #-$01,D3
0002A2BE <AmiBlitz3.ab2@13659> BRA.w maineval
0002A2C0 <AmiBlitz3.ab2@13663>   MOVEQ.l #$01,D1
0002A2C2 <AmiBlitz3.ab2@13664>   MOVEQ.l #-$01,D3
0002A2C6 <AmiBlitz3.ab2@13665> BRA.w maineval
0002A2D0 <AmiBlitz3.ab2@13670>   MOVE.w oldqflag,instringon
0002A2D6 <AmiBlitz3.ab2@13671>   MOVEA.l lastsourcepos,A5
0002A2D8 <AmiBlitz3.ab2@13674>   MOVEQ.l #$00,D1                                        ;no push
0002A2DA <AmiBlitz3.ab2@13675>   MOVEQ.l #$00,D3
0002A2E2 <AmiBlitz3.ab2@13696>    CMPI.w #$6,regnum
0002A2E6 <AmiBlitz3.ab2@13697>    BCS.w maineval2
0002A2E8 <AmiBlitz3.ab2@13698>    MOVEQ #0,d1
0002A2EE <AmiBlitz3.ab2@13699>    MOVE.l destpointer,a4
0002A2F4 <AmiBlitz3.ab2@13701>    CMPA.l destbufferend,A4
0002A2F8 <AmiBlitz3.ab2@13702>    BCC.w maineval__l2
0002A2FE <AmiBlitz3.ab2@13704>    CMP.w #$2f0a,-2(a4)                                    ;bug is a move.l a2,-(a7) before (show temp calc)?
0002A302 <AmiBlitz3.ab2@13706>    BNE maineval__l2
0002A306 <AmiBlitz3.ab2@13710> BRA maineval__l1
0002A308 <AmiBlitz3.ab2@13713>   MOVEQ.l #-$01,D1
0002A310 <AmiBlitz3.ab2@13716>   MOVE.w #$0006,regnum                                     ;write a func par To stack
0002A316 <AmiBlitz3.ab2@13719>   MOVE.w thisstuse,-(A7)
0002A320 <AmiBlitz3.ab2@13720>   MOVE.w a2offset,thisstuse
0002A326 <AmiBlitz3.ab2@13721>   MOVE.w stackpar,-(A7)
0002A32C <AmiBlitz3.ab2@13722>   MOVE.w D1,stackpar
0002A332 <AmiBlitz3.ab2@13723>   MOVE.w sbgot,-(A7)
0002A338 <AmiBlitz3.ab2@13724>   CLR.w sbgot
0002A33C <AmiBlitz3.ab2@13725>   MOVE.w unknown(PC),-(A7)
0002A342 <AmiBlitz3.ab2@13726>   MOVE.w D3,unknown
0002A344 <AmiBlitz3.ab2@13727>   MOVE.w D2,-(a7)
0002A34A <AmiBlitz3.ab2@13728>   MOVE.w d2,mode
0002A34E <AmiBlitz3.ab2@13729>    BSR.w eval3
0002A350 <AmiBlitz3.ab2@13730>   MOVE.w (a7)+,d3
0002A354 <AmiBlitz3.ab2@13731>    BEQ.w maineval__noconv
0002A358 <AmiBlitz3.ab2@13732>   MOVE.w unknown(PC),D1
0002A35C <AmiBlitz3.ab2@13733>    BNE.w maineval__noconv
0002A35E <AmiBlitz3.ab2@13734>   EXG.l D2,D3
0002A360 <AmiBlitz3.ab2@13735>    MOVE.l a2,-(a7)
0002A366 <AmiBlitz3.ab2@13736>    TST.b curtemplabel
0002A36A <AmiBlitz3.ab2@13737>    BEQ maineval2__l10
0002A370 <AmiBlitz3.ab2@13738>    MOVE.l asmbuff,a2
0002A376 <AmiBlitz3.ab2@13739>    CMP.w #$c,$8(a2)
0002A37A <AmiBlitz3.ab2@13740>    BEQ maineval2__l20
0002A380 <AmiBlitz3.ab2@13741>    CMP.w #$d,$8(a2)
0002A384 <AmiBlitz3.ab2@13742>    BEQ maineval2__l20
0002A386 <AmiBlitz3.ab2@13745>   CMP.w d2,d3
0002A38A <AmiBlitz3.ab2@13746>   BEQ maineval2__l20
0002A38E <AmiBlitz3.ab2@13747>   BSR.w writeconvertcode
0002A394 <AmiBlitz3.ab2@13748>   CLR.b doimmediate
0002A396 <AmiBlitz3.ab2@13751>   MOVE.l (a7)+,a2
0002A39C <AmiBlitz3.ab2@13754>   MOVE.w (A7)+,unknown
0002A3A2 <AmiBlitz3.ab2@13755>   MOVE.w stackpar,D1
0002A3A6 <AmiBlitz3.ab2@13756>    BEQ.w maineval__skipme
0002A3AA <AmiBlitz3.ab2@13757>    BMI.w maineval__skipme
0002A3B0 <AmiBlitz3.ab2@13761>   MOVE.w regnum,D1
0002A3B2 <AmiBlitz3.ab2@13762>   LSL.w #8,D1
0002A3B4 <AmiBlitz3.ab2@13763>   LSL.w #1,D1
0002A3B8 <AmiBlitz3.ab2@13764>   CMP.w #$7,D2
0002A3BC <AmiBlitz3.ab2@13765>    BNE.w maineval__hi1
0002A3C4 <AmiBlitz3.ab2@13766>    CMP.b #2,optistring
0002A3C8 <AmiBlitz3.ab2@13767>    BEQ maineval__hi1a
0002A3CA <AmiBlitz3.ab2@13768>   MOVE.w D1,-(A7)
0002A3D0 <AmiBlitz3.ab2@13769>   OR.w getstlen,D1
0002A3D4 <AmiBlitz3.ab2@13770>    BSR.w writeword
0002A3D6 <AmiBlitz3.ab2@13771>   MOVE.w (A7)+,D1
0002A3DC <AmiBlitz3.ab2@13774>   ADDQ.w #2,a2offset                                        ;lib mode to stack
0002A3E0 <AmiBlitz3.ab2@13778>   MOVE.w #$3f3c,d1
0002A3E4 <AmiBlitz3.ab2@13779>    BSR.w writeword
0002A3E6 <AmiBlitz3.ab2@13783>   MOVE.w d2,d1
0002A3EC <AmiBlitz3.ab2@13784>   MOVE.w d1,libmode
0002A3F0 <AmiBlitz3.ab2@13785>    BSR.w writeword
0002A3F4 <AmiBlitz3.ab2@13786>   CMP.w #$7,D2
0002A3F8 <AmiBlitz3.ab2@13787>    BNE.w maineval__skipme
0002A3FE <AmiBlitz3.ab2@13788>   MOVE.w putstlen,D1
0002A404 <AmiBlitz3.ab2@13789>   OR.w regnum,D1
0002A408 <AmiBlitz3.ab2@13790>    BSR.w writeword
0002A40C <AmiBlitz3.ab2@13793>    CMP.w #$7,D2
0002A410 <AmiBlitz3.ab2@13794>    BNE.w maineval__notst
0002A418 <AmiBlitz3.ab2@13805>    CMP.b #2,optistring
0002A41C <AmiBlitz3.ab2@13806>    BEQ maineval__skipme_l10
0002A422 <AmiBlitz3.ab2@13807>    ADDQ.w #4,a2offset                                      ;a length on da stack.....
0002A426 <AmiBlitz3.ab2@13808>    BSR.w sbtolong
0002A42A <AmiBlitz3.ab2@13809> BRA.w maineval__notst2
0002A432 <AmiBlitz3.ab2@13813>     CMP.w #6,regnum
0002A436 <AmiBlitz3.ab2@13814>     BEQ maineval__skipme_l10_l1
0002A43C <AmiBlitz3.ab2@13815>     TST.b funcparloop
0002A440 <AmiBlitz3.ab2@13816>     BEQ maineval__skipme_l10_l1
0002A446 <AmiBlitz3.ab2@13817>     MOVE.l #$48780000,d1
0002A44A <AmiBlitz3.ab2@13818>     BSR writelong
0002A44E <AmiBlitz3.ab2@13821> BRA.w maineval__notst2
0002A454 <AmiBlitz3.ab2@13824>   ADDQ.w #2,a2offset
0002A458 <AmiBlitz3.ab2@13825> BRA maineval__skipme
0002A460 <AmiBlitz3.ab2@13828>   CMPI.w #$2,sbgot
0002A464 <AmiBlitz3.ab2@13829>    BCS.w maineval__notst2                                         ;correct stack
0002A468 <AmiBlitz3.ab2@13830>   MOVE.w ststfix(PC),D1
0002A46C <AmiBlitz3.ab2@13831>    BSR.w writeword
0002A472 <AmiBlitz3.ab2@13834>   MOVE.w (A7)+,sbgot
0002A478 <AmiBlitz3.ab2@13835>   MOVE.w stackpar,D1
0002A47C <AmiBlitz3.ab2@13836>    BPL.w maineval__skip
0002A480 <AmiBlitz3.ab2@13837>    CMP.b #7,d2
0002A484 <AmiBlitz3.ab2@13838>    BEQ maineval__notst2_l1
0002A48A <AmiBlitz3.ab2@13839>   TST.b funcparloop
0002A48E <AmiBlitz3.ab2@13840>   BEQ maineval__notst2_l1
0002A492 <AmiBlitz3.ab2@13841>   CMP.b #5,d2
0002A496 <AmiBlitz3.ab2@13842>   BNE maineval__notst2_skip
0002A49C <AmiBlitz3.ab2@13843>   TST.b fpu
0002A4A0 <AmiBlitz3.ab2@13844>   BEQ maineval__notst2_skip
0002A4A6 <AmiBlitz3.ab2@13845>   MOVE.l #$f2066700,d1                                     ;fmove.s fp6,d6
0002A4AC <AmiBlitz3.ab2@13846>   JSR writelong
0002A4B0 <AmiBlitz3.ab2@13849>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0002A4B6 <AmiBlitz3.ab2@13850>   ADD.w parnum,d1
0002A4BC <AmiBlitz3.ab2@13851>   JSR Atokejsr
0002A4C2 <AmiBlitz3.ab2@13852>    TST.w dontwrite
0002A4C6 <AmiBlitz3.ab2@13853>    BNE maineval__notst2_l1
0002A4CC <AmiBlitz3.ab2@13854>    MOVE.l data1start,d1
0002A4D2 <AmiBlitz3.ab2@13855>    MOVE.l destpointer,a4
0002A4D6 <AmiBlitz3.ab2@13856>    ADD.l d1,-4(a4)
0002A4DC <AmiBlitz3.ab2@13857>    MOVE.l destpointer,d1
0002A4DE <AmiBlitz3.ab2@13858>    SUBQ.l #4,d1
0002A4E4 <AmiBlitz3.ab2@13859>    SUB.l destbufferstart,d1
0002A4E6 <AmiBlitz3.ab2@13860>    MOVE.l d2,-(a7)
0002A4E8 <AmiBlitz3.ab2@13861>    MOVE.l d1,d2
0002A4EE <AmiBlitz3.ab2@13862>    JSR addhunkoffset
0002A4F0 <AmiBlitz3.ab2@13863>    MOVE.l (a7)+,d2
0002A4F4 <AmiBlitz3.ab2@13864> BRA maineval__skip
0002A4FA <AmiBlitz3.ab2@13867>   ADDQ.w #2,a2offset
0002A500 <AmiBlitz3.ab2@13868>   MOVE.w pushd0wd,D1
0002A504 <AmiBlitz3.ab2@13869>   CMP.w #$3,D2                                             ;write parameter to stack
0002A508 <AmiBlitz3.ab2@13870>    BCS.w maineval__ok
0002A50E <AmiBlitz3.ab2@13871>   ADDQ.w #2,a2offset
0002A514 <AmiBlitz3.ab2@13872>   TST.b fpu
0002A518 <AmiBlitz3.ab2@13873>   BEQ maineval__notst2_nofpu
0002A51C <AmiBlitz3.ab2@13874>   CMP.w #5,d2
0002A520 <AmiBlitz3.ab2@13875>   BNE maineval__notst2_nofpu
0002A522 <AmiBlitz3.ab2@13876>   MOVEQ #0,d1
0002A528 <AmiBlitz3.ab2@13877>   MOVE.w regnum,d1
0002A52A <AmiBlitz3.ab2@13878>   ASL.l #7,d1
0002A530 <AmiBlitz3.ab2@13879>   OR.l #$f2276400,d1
0002A534 <AmiBlitz3.ab2@13880>   BSR writelong
0002A538 <AmiBlitz3.ab2@13881> BRA maineval__skip
0002A53E <AmiBlitz3.ab2@13884>   MOVE.w pushd0l,D1
0002A544 <AmiBlitz3.ab2@13887>    OR.w regnum,D1
0002A548 <AmiBlitz3.ab2@13888>    BSR.w writeword                                         ;nat
0002A54E <AmiBlitz3.ab2@13891>   MOVE.w (A7)+,stackpar
0002A554 <AmiBlitz3.ab2@13892>   MOVE.w (A7)+,thisstuse
0002A556 <AmiBlitz3.ab2@13893> RTS
0002A558 <AmiBlitz3.ab2@13896> thisstuse: Ds.w 1
0002A55A <AmiBlitz3.ab2@13899> ststfix:   Dc.b $58,$4F                                    ;ADDQ.W  #4,A7
0002A55C <AmiBlitz3.ab2@13900> pushut:    Dc.b $3F,$00                                    ;MOVE.W  D0,-(A7)
0002A560 <AmiBlitz3.ab2@13905>   BSR.w eval4
0002A56A <AmiBlitz3.ab2@13906>   SUBI.l #$12,forthsp
0002A56C <AmiBlitz3.ab2@13907> RTS
0002A56E <AmiBlitz3.ab2@13911>   MOVEQ.l #$01,D1
0002A572 <AmiBlitz3.ab2@13913>       MOVEA.l precsp(PC),A1
0002A574 <AmiBlitz3.ab2@13914>       MOVE.l A0,(A1)+
0002A576 <AmiBlitz3.ab2@13915>       MOVE.w D1,(A1)+
0002A57C <AmiBlitz3.ab2@13916>       MOVE.l A1,precsp
0002A580 <AmiBlitz3.ab2@13917>    BSR.w calcloop
0002A582 <AmiBlitz3.ab2@13918>   TST.w D1
0002A586 <AmiBlitz3.ab2@13919>    BNE.w syntaxerr
0002A58C <AmiBlitz3.ab2@13920>   SUBQ.l #6,precsp                                      ;pop the prec set up
0002A58E <AmiBlitz3.ab2@13921> RTS
0002A592 <AmiBlitz3.ab2@13926>   BSR.w JL_0_9C24
0002A596 <AmiBlitz3.ab2@13929>   MOVEA.l precsp(PC),A1
0002A598 <AmiBlitz3.ab2@13930>   CMP.w -(A1),D1
0002A59C <AmiBlitz3.ab2@13931>    BHI.w JL_0_9B0A
0002A59E <AmiBlitz3.ab2@13932> RTS
0002A5A2 <AmiBlitz3.ab2@13937>   MOVEA.l precsp(PC),A1
0002A5A4 <AmiBlitz3.ab2@13938>   MOVE.l A0,(A1)+
0002A5A6 <AmiBlitz3.ab2@13939>   MOVE.w D1,(A1)+
0002A5AC <AmiBlitz3.ab2@13940>   MOVE.l A1,precsp
0002A5AE <AmiBlitz3.ab2@13941>   MOVE.w D2,-(A7)
0002A5B4 <AmiBlitz3.ab2@13942>   ADDQ.w #1,regnum
0002A5B8 <AmiBlitz3.ab2@13943>    BSR.w calcloop               ;constant optimizer
0002A5BE <AmiBlitz3.ab2@13944>   SUBQ.w #1,regnum
0002A5C0 <AmiBlitz3.ab2@13945>   MOVE.w (A7)+,D3
0002A5C4 <AmiBlitz3.ab2@13946>   MOVEM.l D1/A0,-(A7)
0002A5C8 <AmiBlitz3.ab2@13947>    BEQ.w JL_0_9B2E
0002A5CC <AmiBlitz3.ab2@13948>    BSR.w JL_0_9770
0002A5D0 <AmiBlitz3.ab2@13951>   BSR.w popprec
0002A5D4 <AmiBlitz3.ab2@13952>   BSR.w writecode
0002A5D8 <AmiBlitz3.ab2@13953>   MOVEA.l forthsp(PC),A0
0002A5DC <AmiBlitz3.ab2@13954>   MOVE.w -$2(A0),D1
0002A5E0 <AmiBlitz3.ab2@13955>   OR.w -$14(A0),D1
0002A5E4 <AmiBlitz3.ab2@13956>   MOVE.w D1,-$14(A0)
0002A5E8 <AmiBlitz3.ab2@13957>    BNE.w JL_0_9C0E
0002A5EE <AmiBlitz3.ab2@13958>   MOVE.w dontwrite,D1
0002A5F2 <AmiBlitz3.ab2@13959>    BNE.w JL_0_9C0E
0002A5F6 <AmiBlitz3.ab2@13960>    MOVEA.l -$24(A0),A0
0002A732 <AmiBlitz3.ab2@13962>  !newcalc
0002A736 <AmiBlitz3.ab2@13963>    BEQ 'l10
0002A73A <AmiBlitz3.ab2@13964>    MOVEA.l forthsp(PC),A0
0002A742 <AmiBlitz3.ab2@13965>    MOVE.w -$18(A0),lasta6
0002A74A <AmiBlitz3.ab2@13966>    MOVE.l -$1C(A0),lasta6
0002A74E <AmiBlitz3.ab2@13967>    MOVEA.l -$24(A0),A0
0002A754 <AmiBlitz3.ab2@13968>    MOVE.l A0,destpointer
0002A75A <AmiBlitz3.ab2@13969>    MOVEA.l _mathffpbase,A6
0002A760 <AmiBlitz3.ab2@13970>    MOVEA.l ffplib,A1
0002A764 <AmiBlitz3.ab2@13971> BRA cont1
0002A768 <AmiBlitz3.ab2@13974>   MOVE.w #$2000,D1
0002A76E <AmiBlitz3.ab2@13975>   OR.w regnum,D1
0002A772 <AmiBlitz3.ab2@13976>    BSR.w writeword
0002A774 <AmiBlitz3.ab2@13977>     MOVEQ #0,d1
0002A77A <AmiBlitz3.ab2@13978>     MOVE.w regnum,D1
0002A77C <AmiBlitz3.ab2@13979>     ASL.l #8,d1
0002A77E <AmiBlitz3.ab2@13980>     ASL.l #2,d1
0002A784 <AmiBlitz3.ab2@13981>     OR.l #$f2000000,d1
0002A788 <AmiBlitz3.ab2@13982>     BSR writelong
0002A78C <AmiBlitz3.ab2@13983>   MOVE.w #$4E75,D1
0002A790 <AmiBlitz3.ab2@13984>    BSR.w writeword
0002A798 <AmiBlitz3.ab2@13985>   MOVE.w -$18(A0),lasta6
0002A7A0 <AmiBlitz3.ab2@13986>   MOVE.l -$1C(A0),lasta6
0002A7A4 <AmiBlitz3.ab2@13987>   MOVEA.l -$24(A0),A0
0002A7AA <AmiBlitz3.ab2@13988>   MOVE.l A0,destpointer
0002A7AE <AmiBlitz3.ab2@13989>   MOVEM.l D2/A5,-(A7)
0002A7B4 <AmiBlitz3.ab2@13990>   MOVEA.l _mathffpbase,A6
0002A7BA <AmiBlitz3.ab2@13991>   MOVEA.l ffplib,A1
0002A7BE <AmiBlitz3.ab2@13992>   MOVE.w $A(A1),D0
0002A7C4 <AmiBlitz3.ab2@13993>   LEA _mathffpbase,A5
0002A7C6 <AmiBlitz3.ab2@13994>   SUBA.w D0,A5
0002A7CC <AmiBlitz3.ab2@13995>   JSR Aclearcache                                          ;neg +
0002A7D2 <AmiBlitz3.ab2@13996>   CLR.l load_var_addr
0002A7D8 <AmiBlitz3.ab2@13997>   CLR.l imm_addr
0002A7DE <AmiBlitz3.ab2@13998>   TST.w dontwrite
0002A7E2 <AmiBlitz3.ab2@13999>   BNE '1
0002A7E4 <AmiBlitz3.ab2@14000>   JSR (A0)                                                 ;calc constant inline expression
0002A7E8 <AmiBlitz3.ab2@14003>   MOVEM.l (A7)+,D2/A5
0002A7EE <AmiBlitz3.ab2@14006>   MOVE.b d2,isconstantvalue
0002A7F4 <AmiBlitz3.ab2@14007>   MOVE.l d0,lastconstantvalue
0002A7FA <AmiBlitz3.ab2@14008>   MOVE.w regnum,D1
0002A7FC <AmiBlitz3.ab2@14009>   LSL.w #8,D1
0002A7FE <AmiBlitz3.ab2@14010>   LSL.w #1,D1
0002A802 <AmiBlitz3.ab2@14011>   ORI.w #$203C,D1
0002A806 <AmiBlitz3.ab2@14012>   CMP.w #$3,D2
0002A80A <AmiBlitz3.ab2@14013>    BCC.w JL_0_9BCE
0002A80E <AmiBlitz3.ab2@14014>   ORI.w #$1000,D1
0002A812 <AmiBlitz3.ab2@14015>    BSR.w writeword
0002A814 <AmiBlitz3.ab2@14016>   MOVE.w D0,D1
0002A818 <AmiBlitz3.ab2@14017>    BSR.w writeword
0002A81C <AmiBlitz3.ab2@14018> BRA.w JL_0_9BD8
0002A822 <AmiBlitz3.ab2@14022>   TST.b iee                                                ;fpu constant
0002A826 <AmiBlitz3.ab2@14023>   BEQ 'l10
0002A82A <AmiBlitz3.ab2@14024>   CMP.b #5,d2
0002A82E <AmiBlitz3.ab2@14025>   BNE 'l10
0002A830 <AmiBlitz3.ab2@14026>   MOVEQ #0,d1
0002A836 <AmiBlitz3.ab2@14027>   MOVE.w regnum,D1
0002A838 <AmiBlitz3.ab2@14028>   ASL.l #7,d1
0002A83E <AmiBlitz3.ab2@14029>   OR.l #$f23c5400,d1
0002A842 <AmiBlitz3.ab2@14030>   BSR writelong
0002A844 <AmiBlitz3.ab2@14031>   SUBQ.l #8,a7
0002A84A <AmiBlitz3.ab2@14032>   fmove.d fp0,0(a7)
0002A84C <AmiBlitz3.ab2@14033>   MOVE.l (a7)+,d1
0002A850 <AmiBlitz3.ab2@14034>   BSR writelong
0002A852 <AmiBlitz3.ab2@14035>   MOVE.l (a7)+,d1
0002A856 <AmiBlitz3.ab2@14036>   BSR writelong
0002A85A <AmiBlitz3.ab2@14037> BRA JL_0_9BD8
0002A85E <AmiBlitz3.ab2@14040>   BSR.w writeword
0002A860 <AmiBlitz3.ab2@14041>   MOVE.l D0,D1
0002A864 <AmiBlitz3.ab2@14042>   BSR.w writelong
0002A868 <AmiBlitz3.ab2@14045>   MOVEA.l forthsp(PC),A0
0002A86C <AmiBlitz3.ab2@14046>   MOVEA.l -$20(A0),A3
0002A872 <AmiBlitz3.ab2@14047>   MOVEA.l hunkoffsetbase,A2
0002A878 <AmiBlitz3.ab2@14048>   MOVE.l A3,hunkoffsetbase
0002A87E <AmiBlitz3.ab2@14049>   MOVEA.l _execbase,A6
0002A880 <AmiBlitz3.ab2@14052>   CMPA.l A3,A2
0002A884 <AmiBlitz3.ab2@14053>   BEQ.w JL_0_9C0A
0002A88A <AmiBlitz3.ab2@14054>   SUBQ.l #1,hunkoffsetcounter
0002A88C <AmiBlitz3.ab2@14055>   MOVEA.l A2,A1
0002A88E <AmiBlitz3.ab2@14056>   MOVEA.l (A2),A2
0002A890 <AmiBlitz3.ab2@14057>   MOVEQ.l #$8,D0
0002A896 <AmiBlitz3.ab2@14058>   MOVE.l mempool2,a0
0002A89A <AmiBlitz3.ab2@14059>    JSR _FreePooled(A6)
0002A89E <AmiBlitz3.ab2@14060> BRA.w JL_0_9BF0
0002A8A2 <AmiBlitz3.ab2@14064>   MOVEA.l forthsp(PC),A0
0002A8A6 <AmiBlitz3.ab2@14067>   LEA -$12(A0),A0
0002A8AC <AmiBlitz3.ab2@14068>   MOVE.l A0,forthsp
0002A8B0 <AmiBlitz3.ab2@14069>   MOVEM.l (A7)+,D1/A0
0002A8B4 <AmiBlitz3.ab2@14070>   BSR.w reget
0002A8B8 <AmiBlitz3.ab2@14071> BRA.w JL_0_9AFE
0002A8BC <AmiBlitz3.ab2@14075>   BSR.w JL_0_A386
0002A8BE <AmiBlitz3.ab2@14076>   TST.w d0
0002A8C2 <AmiBlitz3.ab2@14077>   BEQ JL_0_9C42
0002A8C6 <AmiBlitz3.ab2@14078>   CMP.b #",",d0
0002A8CA <AmiBlitz3.ab2@14079>   BEQ JL_0_9C42
0002A8CE <AmiBlitz3.ab2@14080>   CMP.b #"@",d0                                            ;expandline @@
0002A8D2 <AmiBlitz3.ab2@14081>   BEQ JL_0_9C42
0002A8D8 <AmiBlitz3.ab2@14082>   LEA operators,A0
0002A8DA <AmiBlitz3.ab2@14085>    TST.w (A0)
0002A8DE <AmiBlitz3.ab2@14086>    BEQ.w JL_0_9C42
0002A8E0 <AmiBlitz3.ab2@14087>   CMP.w (A0),D0
0002A8E4 <AmiBlitz3.ab2@14088>    BEQ.w JL_0_9C46a
0002A8E8 <AmiBlitz3.ab2@14089>   LEA $20(A0),A0
0002A8EC <AmiBlitz3.ab2@14090> BRA.w JL_0_9C2E
0002A8EE <AmiBlitz3.ab2@14094>   MOVEQ.l #$00,D1
0002A8F0 <AmiBlitz3.ab2@14095> RTS
0002A8F4 <AmiBlitz3.ab2@14099>   CMP.w #$3C,D0
0002A8F8 <AmiBlitz3.ab2@14100>    BNE.w JL_0_9C70
0002A8FC <AmiBlitz3.ab2@14101>    BSR.w get1bytemain
0002A900 <AmiBlitz3.ab2@14102>   CMP.w #$3D,D0
0002A904 <AmiBlitz3.ab2@14103>    BNE.w JL_0_9C64
0002A90A <AmiBlitz3.ab2@14104>   LEA ople,A0
0002A90E <AmiBlitz3.ab2@14105> BRA.w JL_0_9CCA
0002A912 <AmiBlitz3.ab2@14109>   CMP.w #$3E,D0
0002A916 <AmiBlitz3.ab2@14110>    BNE.w JL_0_9C96
0002A91A <AmiBlitz3.ab2@14111> BRA.w JL_0_9CC4
0002A91E <AmiBlitz3.ab2@14115>   CMP.w #$3E,D0
0002A922 <AmiBlitz3.ab2@14116>    BNE.w JL_0_9C9E
0002A926 <AmiBlitz3.ab2@14117>    BSR.w get1bytemain
0002A92A <AmiBlitz3.ab2@14118>   CMP.w #$3D,D0
0002A92E <AmiBlitz3.ab2@14119>    BNE.w JL_0_9C8E
0002A934 <AmiBlitz3.ab2@14120>   LEA opge,A0
0002A938 <AmiBlitz3.ab2@14121> BRA.w JL_0_9CCA
0002A93C <AmiBlitz3.ab2@14125>   CMP.w #$3C,D0
0002A940 <AmiBlitz3.ab2@14126>    BEQ.w JL_0_9CC4
0002A94A <AmiBlitz3.ab2@14130>     MOVE.w oldqflag,instringon
0002A950 <AmiBlitz3.ab2@14131>     MOVEA.l lastsourcepos,A5
0002A954 <AmiBlitz3.ab2@14132> BRA.w JL_0_9CCA
0002A958 <AmiBlitz3.ab2@14136>   CMP.w #$3D,D0
0002A95C <AmiBlitz3.ab2@14137>    BNE.w JL_0_9CCA
0002A960 <AmiBlitz3.ab2@14138>    BSR.w get1bytemain
0002A964 <AmiBlitz3.ab2@14139>   CMP.w #$3E,D0
0002A968 <AmiBlitz3.ab2@14140>    BNE.w JL_0_9CBC
0002A96E <AmiBlitz3.ab2@14141>   LEA opge,A0
0002A972 <AmiBlitz3.ab2@14142> BRA.w JL_0_9CCA
0002A976 <AmiBlitz3.ab2@14146>   CMP.w #$3C,D0
0002A97A <AmiBlitz3.ab2@14147>   BNE.w JL_0_9C96
0002A980 <AmiBlitz3.ab2@14150>   LEA opne,A0
0002A984 <AmiBlitz3.ab2@14153>   MOVE.w $1E(A0),D1
0002A986 <AmiBlitz3.ab2@14154> RTS
0002A988 <AmiBlitz3.ab2@14161>   MOVE.w d2,d1
0002A98A <AmiBlitz3.ab2@14162>   SUBQ.w #1,D1
0002A98E <AmiBlitz3.ab2@14163>    BMI.w illoperr
0002A990 <AmiBlitz3.ab2@14164>   LSL.w #2,D1
0002A994 <AmiBlitz3.ab2@14165>   MOVE.l $2(A0,D1.W),D1
0002A998 <AmiBlitz3.ab2@14166>    BEQ.w illoperr
0002A99A <AmiBlitz3.ab2@14167>   MOVEA.l D1,A0
0002A99C <AmiBlitz3.ab2@14170> JMP (A0)
0002A9A0 <AmiBlitz3.ab2@14186>   MOVEA.l precsp(PC),A1
0002A9A6 <AmiBlitz3.ab2@14187>   CMPA.l #precstackf,A1
0002A9AA <AmiBlitz3.ab2@14188>    BCC.w pserr
0002A9AC <AmiBlitz3.ab2@14189>   MOVE.w -(A1),D1
0002A9AE <AmiBlitz3.ab2@14190>   MOVEA.l -(A1),A0
0002A9B4 <AmiBlitz3.ab2@14191>   MOVE.l A1,precsp
0002A9B6 <AmiBlitz3.ab2@14192> RTS
0002A9BA <AmiBlitz3.ab2@14195> precsp:      Dc.l precstack
0002AAB6 <AmiBlitz3.ab2@14196> precstack:   Ds.l 63                                       ;ds 6*32 org source   ;Lotsa Room?
0002AB3A <AmiBlitz3.ab2@14197>              Ds.l 33
0002AB3C <AmiBlitz3.ab2@14203> mseq:  SEQ D0
0002AB3E <AmiBlitz3.ab2@14204> msne:    SNE D0
0002AB40 <AmiBlitz3.ab2@14205> mslt:    SLT D0
0002AB42 <AmiBlitz3.ab2@14206> msle:    SLE D0
0002AB44 <AmiBlitz3.ab2@14207> msgt:    SGT D0
0002AB46 <AmiBlitz3.ab2@14208> msge:    SGE D0
0002AB48 <AmiBlitz3.ab2@14210> cmp0:    CMP.b D0,D0
0002AB4A <AmiBlitz3.ab2@14211> cmp1:    CMP.w D0,D0
0002AB4C <AmiBlitz3.ab2@14212> cmp2:    CMP.l D0,D0
0002AB50 <AmiBlitz3.ab2@14216>   MOVE.w cmp0(PC),D1
0002AB54 <AmiBlitz3.ab2@14217> BRA.w doeqcmp2                                            ;writecompare
0002AB58 <AmiBlitz3.ab2@14221>   MOVE.w cmp0(PC),D1
0002AB5C <AmiBlitz3.ab2@14222> BRA.w donecmp2
0002AB60 <AmiBlitz3.ab2@14226>   MOVE.w cmp0(PC),D1
0002AB64 <AmiBlitz3.ab2@14227> BRA.w doltcmp2
0002AB68 <AmiBlitz3.ab2@14231>   MOVE.w cmp0(PC),D1
0002AB6C <AmiBlitz3.ab2@14232> BRA.w dolecmp2
0002AB70 <AmiBlitz3.ab2@14236>   MOVE.w cmp0(PC),D1
0002AB74 <AmiBlitz3.ab2@14237> BRA.w dogtcmp2
0002AB78 <AmiBlitz3.ab2@14242>   MOVE.w cmp0(PC),D1
0002AB7C <AmiBlitz3.ab2@14243> BRA.w dogecmp2
0002AB80 <AmiBlitz3.ab2@14247>   MOVE.w cmp1(PC),D1
0002AB84 <AmiBlitz3.ab2@14248> BRA.w doeqcmp2
0002AB88 <AmiBlitz3.ab2@14252>   MOVE.w cmp1(PC),D1
0002AB8C <AmiBlitz3.ab2@14253> BRA.w donecmp2
0002AB90 <AmiBlitz3.ab2@14257>   MOVE.w cmp1(PC),D1
0002AB94 <AmiBlitz3.ab2@14258> BRA.w doltcmp2
0002AB98 <AmiBlitz3.ab2@14262>   MOVE.w cmp1(PC),D1
0002AB9C <AmiBlitz3.ab2@14263> BRA.w dolecmp2
0002ABA0 <AmiBlitz3.ab2@14267>   MOVE.w cmp1(PC),D1
0002ABA4 <AmiBlitz3.ab2@14268> BRA.w dogtcmp2
0002ABA8 <AmiBlitz3.ab2@14273>   MOVE.w cmp1(PC),D1
0002ABAC <AmiBlitz3.ab2@14274> BRA.w dogecmp2
0002ABB0 <AmiBlitz3.ab2@14278>   MOVE.w cmp2(PC),D1                                   ;writecomparelong
0002ABB4 <AmiBlitz3.ab2@14279> BRA doeqcmp2
0002ABB8 <AmiBlitz3.ab2@14282>   MOVE.w cmp2(PC),D1
0002ABBC <AmiBlitz3.ab2@14283> BRA donecmp2
0002ABC0 <AmiBlitz3.ab2@14287>   MOVE.w cmp2(PC),D1
0002ABC4 <AmiBlitz3.ab2@14288> BRA.w doltcmp2
0002ABC8 <AmiBlitz3.ab2@14292>   MOVE.w cmp2(PC),D1
0002ABCC <AmiBlitz3.ab2@14293> BRA.w dolecmp2
0002ABD0 <AmiBlitz3.ab2@14297>   MOVE.w cmp2(PC),D1
0002ABD4 <AmiBlitz3.ab2@14298> BRA.w dogtcmp2
0002ABD8 <AmiBlitz3.ab2@14302>   MOVE.w cmp2(PC),D1
0002ABDC <AmiBlitz3.ab2@14303> BRA.w dogecmp2
0002ABDE <AmiBlitz3.ab2@14306> cfregat:  Ds.w 1
0002ABE4 <AmiBlitz3.ab2@14310>   MOVE.w D1,libjsr+2
0002ABE8 <AmiBlitz3.ab2@14311>    BSR.w JL_0_AD40
0002ABEA <AmiBlitz3.ab2@14312>   MOVE.l D4,D1
0002ABEE <AmiBlitz3.ab2@14313>    BSR.w JL_0_AD38
0002ABF2 <AmiBlitz3.ab2@14314>   MOVE.w #$C900,D1
0002ABF6 <AmiBlitz3.ab2@14315>    BSR.w Atokejsr
0002ABFA <AmiBlitz3.ab2@14316>    BSR.w JL_0_A352
0002AC00 <AmiBlitz3.ab2@14317>   MOVE.l libjsr,D1
0002AC04 <AmiBlitz3.ab2@14318>    BSR.w writelong
0002AC0E <AmiBlitz3.ab2@14319>   MOVE.w regnum,cfregat
0002AC14 <AmiBlitz3.ab2@14320>   CLR.w regnum
0002AC16 <AmiBlitz3.ab2@14321> RTS
0002AC20 <AmiBlitz3.ab2@14325>   MOVE.w cfregat,regnum
0002AC24 <AmiBlitz3.ab2@14326>    BSR.w JL_0_A36E
0002AC26 <AmiBlitz3.ab2@14327>   MOVE.l D5,D1
0002AC2A <AmiBlitz3.ab2@14328> BRA.w JL_0_AD38
0002AC2C <AmiBlitz3.ab2@14332>    MOVEQ.l #-$2A,D1
0002AC32 <AmiBlitz3.ab2@14333>    TST.b fpu
0002AC36 <AmiBlitz3.ab2@14334>    BEQ do_equal_float__nofpu
0002AC38 <AmiBlitz3.ab2@14335>    MOVEQ #0,d1
0002AC3E <AmiBlitz3.ab2@14336>    MOVE.w regnum,d1
0002AC40 <AmiBlitz3.ab2@14337>    MOVE.l d1,d2
0002AC42 <AmiBlitz3.ab2@14338>    ASL.l #7,d1
0002AC44 <AmiBlitz3.ab2@14339>    ADDQ  #1,d2
0002AC46 <AmiBlitz3.ab2@14340>    ASL.l #8,d2
0002AC48 <AmiBlitz3.ab2@14341>    ASL.l #2,d2
0002AC4A <AmiBlitz3.ab2@14342>    OR.l d2,d1
0002AC50 <AmiBlitz3.ab2@14343>    OR.l #$f2000038,d1
0002AC56 <AmiBlitz3.ab2@14344>    JSR writelong
0002AC5A <AmiBlitz3.ab2@14345>    MOVE.w #$f240,d1
0002AC60 <AmiBlitz3.ab2@14346>    OR.w regnum,d1
0002AC64 <AmiBlitz3.ab2@14347>    BSR writeword
0002AC66 <AmiBlitz3.ab2@14348>    MOVEQ.l #1,d2
0002AC6A <AmiBlitz3.ab2@14349>    MOVE.w #1,d1                                            ;fpu comp fseq
0002AC6E <AmiBlitz3.ab2@14350>    BSR writeword
0002AC70 <AmiBlitz3.ab2@14351> RTS
0002AC74 <AmiBlitz3.ab2@14354>    BSR.w docflib
0002AC78 <AmiBlitz3.ab2@14355>    BSR.w doeqcmp
0002AC7C <AmiBlitz3.ab2@14356> BRA.w docflib2
0002AC7E <AmiBlitz3.ab2@14360>   MOVEQ.l #-$2A,D1
0002AC84 <AmiBlitz3.ab2@14361>   TST.b fpu
0002AC88 <AmiBlitz3.ab2@14362>    BEQ do_not_equal_float__nofpu
0002AC8A <AmiBlitz3.ab2@14363>    MOVEQ #0,d1
0002AC90 <AmiBlitz3.ab2@14364>    MOVE.w regnum,d1
0002AC92 <AmiBlitz3.ab2@14365>    MOVE.l d1,d2
0002AC94 <AmiBlitz3.ab2@14366>    ASL.l #7,d1
0002AC96 <AmiBlitz3.ab2@14367>    ADDQ  #1,d2
0002AC98 <AmiBlitz3.ab2@14368>    ASL.l #8,d2
0002AC9A <AmiBlitz3.ab2@14369>    ASL.l #2,d2
0002AC9C <AmiBlitz3.ab2@14370>    OR.l d2,d1
0002ACA2 <AmiBlitz3.ab2@14371>    OR.l #$f2000038,d1
0002ACA8 <AmiBlitz3.ab2@14372>    JSR writelong
0002ACAC <AmiBlitz3.ab2@14373>    MOVE.w #$f240,d1
0002ACB2 <AmiBlitz3.ab2@14374>    OR.w regnum,d1
0002ACB6 <AmiBlitz3.ab2@14375>    BSR writeword
0002ACBC <AmiBlitz3.ab2@14376>    MOVE.l #1,d2
0002ACC0 <AmiBlitz3.ab2@14377>    MOVE.w #$e,d1                                           ;fpu comp fsne
0002ACC4 <AmiBlitz3.ab2@14378>    BSR writeword
0002ACC6 <AmiBlitz3.ab2@14379> RTS
0002ACCA <AmiBlitz3.ab2@14382>    BSR.w docflib
0002ACCE <AmiBlitz3.ab2@14383>    BSR.w donecmp
0002ACD2 <AmiBlitz3.ab2@14384> BRA.w docflib2
0002ACD4 <AmiBlitz3.ab2@14388>   MOVEQ.l #-$2A,D1
0002ACDA <AmiBlitz3.ab2@14389>     TST.b fpu
0002ACDE <AmiBlitz3.ab2@14390>    BEQ do_littler_float__nofpu
0002ACE0 <AmiBlitz3.ab2@14391>    MOVEQ #0,d1
0002ACE6 <AmiBlitz3.ab2@14392>    MOVE.w regnum,d1
0002ACE8 <AmiBlitz3.ab2@14393>    MOVE.l d1,d2
0002ACEA <AmiBlitz3.ab2@14394>    ASL.l #7,d1
0002ACEC <AmiBlitz3.ab2@14395>    ADDQ  #1,d2
0002ACEE <AmiBlitz3.ab2@14396>    ASL.l #8,d2
0002ACF0 <AmiBlitz3.ab2@14397>    ASL.l #2,d2
0002ACF2 <AmiBlitz3.ab2@14398>    OR.l d2,d1
0002ACF8 <AmiBlitz3.ab2@14399>    OR.l #$f2000038,d1
0002ACFE <AmiBlitz3.ab2@14400>    JSR writelong
0002AD02 <AmiBlitz3.ab2@14401>    MOVE.w #$f240,d1
0002AD08 <AmiBlitz3.ab2@14402>    OR.w regnum,d1
0002AD0C <AmiBlitz3.ab2@14403>    BSR writeword
0002AD12 <AmiBlitz3.ab2@14404>    MOVE.l #$1,d2
0002AD16 <AmiBlitz3.ab2@14405>    MOVE.w #$14,d1                                          ;fpu comp fslt
0002AD1A <AmiBlitz3.ab2@14406>    BSR writeword
0002AD1C <AmiBlitz3.ab2@14407> RTS
0002AD20 <AmiBlitz3.ab2@14410>    BSR.w docflib
0002AD24 <AmiBlitz3.ab2@14411>    BSR.w doltcmp
0002AD28 <AmiBlitz3.ab2@14412> BRA.w docflib2
0002AD2A <AmiBlitz3.ab2@14416>   MOVEQ.l #-$2A,D1
0002AD30 <AmiBlitz3.ab2@14417>   TST.b fpu
0002AD34 <AmiBlitz3.ab2@14418>    BEQ do_littler_equal_float__nofpu
0002AD36 <AmiBlitz3.ab2@14419>    MOVEQ #0,d1
0002AD3C <AmiBlitz3.ab2@14420>    MOVE.w regnum,d1
0002AD3E <AmiBlitz3.ab2@14421>    MOVE.l d1,d2
0002AD40 <AmiBlitz3.ab2@14422>    ASL.l #7,d1
0002AD42 <AmiBlitz3.ab2@14423>    ADDQ  #1,d2
0002AD44 <AmiBlitz3.ab2@14424>    ASL.l #8,d2
0002AD46 <AmiBlitz3.ab2@14425>    ASL.l #2,d2
0002AD48 <AmiBlitz3.ab2@14426>    OR.l d2,d1
0002AD4E <AmiBlitz3.ab2@14427>    OR.l #$f2000038,d1
0002AD54 <AmiBlitz3.ab2@14428>    JSR writelong
0002AD58 <AmiBlitz3.ab2@14429>    MOVE.w #$f240,d1
0002AD5E <AmiBlitz3.ab2@14430>    OR.w regnum,d1
0002AD62 <AmiBlitz3.ab2@14431>    BSR writeword
0002AD68 <AmiBlitz3.ab2@14432>    MOVE.l #1,d2
0002AD6C <AmiBlitz3.ab2@14433>    MOVE.w #$15,d1                                          ;fpu comp fsle
0002AD70 <AmiBlitz3.ab2@14434>    BSR writeword
0002AD72 <AmiBlitz3.ab2@14435> RTS
0002AD76 <AmiBlitz3.ab2@14438>    BSR.w docflib
0002AD7A <AmiBlitz3.ab2@14439>    BSR.w dolecmp
0002AD7E <AmiBlitz3.ab2@14440> BRA.w docflib2
0002AD80 <AmiBlitz3.ab2@14444>   MOVEQ.l #-$2A,D1
0002AD86 <AmiBlitz3.ab2@14445>    TST.b fpu
0002AD8A <AmiBlitz3.ab2@14446>    BEQ do_greater_float__nofpu
0002AD8C <AmiBlitz3.ab2@14447>     MOVEQ #0,d1
0002AD92 <AmiBlitz3.ab2@14448>    MOVE.w regnum,d1
0002AD94 <AmiBlitz3.ab2@14449>    MOVE.l d1,d2
0002AD96 <AmiBlitz3.ab2@14450>    ASL.l #7,d1
0002AD98 <AmiBlitz3.ab2@14451>    ADDQ  #1,d2
0002AD9A <AmiBlitz3.ab2@14452>    ASL.l #8,d2
0002AD9C <AmiBlitz3.ab2@14453>    ASL.l #2,d2
0002AD9E <AmiBlitz3.ab2@14454>    OR.l d2,d1
0002ADA4 <AmiBlitz3.ab2@14455>    OR.l #$f2000038,d1
0002ADAA <AmiBlitz3.ab2@14456>    JSR writelong
0002ADAE <AmiBlitz3.ab2@14457>    MOVE.w #$f240,d1
0002ADB4 <AmiBlitz3.ab2@14458>    OR.w regnum,d1
0002ADB8 <AmiBlitz3.ab2@14459>    BSR writeword
0002ADBE <AmiBlitz3.ab2@14460>    MOVE.l #1,d2
0002ADC2 <AmiBlitz3.ab2@14461>    MOVE.w #$12,d1                                          ;fpu comp fsgt
0002ADC6 <AmiBlitz3.ab2@14462>    BSR writeword
0002ADC8 <AmiBlitz3.ab2@14463> RTS
0002ADCC <AmiBlitz3.ab2@14466>    BSR.w docflib
0002ADD0 <AmiBlitz3.ab2@14467>    BSR.w dogtcmp
0002ADD4 <AmiBlitz3.ab2@14468> BRA.w docflib2
0002ADD6 <AmiBlitz3.ab2@14472>   MOVEQ.l #-$2A,D1
0002ADDC <AmiBlitz3.ab2@14473>  TST.b fpu
0002ADE0 <AmiBlitz3.ab2@14474>    BEQ do_greater_equal_float__nofpu
0002ADE2 <AmiBlitz3.ab2@14475>    MOVEQ #0,d1
0002ADE8 <AmiBlitz3.ab2@14476>    MOVE.w regnum,d1
0002ADEA <AmiBlitz3.ab2@14477>    MOVE.l d1,d2
0002ADEC <AmiBlitz3.ab2@14478>    ASL.l #7,d1
0002ADEE <AmiBlitz3.ab2@14479>    ADDQ  #1,d2
0002ADF0 <AmiBlitz3.ab2@14480>    ASL.l #8,d2
0002ADF2 <AmiBlitz3.ab2@14481>    ASL.l #2,d2
0002ADF4 <AmiBlitz3.ab2@14482>    OR.l d2,d1
0002ADFA <AmiBlitz3.ab2@14483>    OR.l #$f2000038,d1
0002AE00 <AmiBlitz3.ab2@14484>    JSR writelong
0002AE04 <AmiBlitz3.ab2@14485>    MOVE.w #$f240,d1
0002AE0A <AmiBlitz3.ab2@14486>    OR.w regnum,d1
0002AE0E <AmiBlitz3.ab2@14487>    BSR writeword
0002AE14 <AmiBlitz3.ab2@14488>    MOVE.l #1,d2
0002AE18 <AmiBlitz3.ab2@14489>    MOVE.w #$13,d1                                          ;fpu comp fsge
0002AE1C <AmiBlitz3.ab2@14490>    BSR writeword
0002AE1E <AmiBlitz3.ab2@14491> RTS
0002AE22 <AmiBlitz3.ab2@14494>    BSR.w docflib
0002AE26 <AmiBlitz3.ab2@14495>    BSR.w dogecmp
0002AE2A <AmiBlitz3.ab2@14496> BRA.w docflib2
0002AE30 <AmiBlitz3.ab2@14501>   MOVE.l #$CE00,D1
0002AE36 <AmiBlitz3.ab2@14502>    MOVE.l d1,lastinstruction
0002AE3A <AmiBlitz3.ab2@14503>    BSR.w Atokejsr
0002AE3E <AmiBlitz3.ab2@14504> BRA.w doeqcmp
0002AE44 <AmiBlitz3.ab2@14508>   MOVE.l #$CE00,D1
0002AE4A <AmiBlitz3.ab2@14509>    MOVE.l d1,lastinstruction
0002AE4E <AmiBlitz3.ab2@14510>    BSR.w Atokejsr
0002AE52 <AmiBlitz3.ab2@14511> BRA.w donecmp
0002AE58 <AmiBlitz3.ab2@14515>   MOVE.l #$CE00,D1
0002AE5E <AmiBlitz3.ab2@14516>    MOVE.l d1,lastinstruction
0002AE62 <AmiBlitz3.ab2@14517>    BSR.w Atokejsr
0002AE66 <AmiBlitz3.ab2@14518> BRA.w doltcmp
0002AE6C <AmiBlitz3.ab2@14522>   MOVE.l #$CE00,D1
0002AE72 <AmiBlitz3.ab2@14523>    MOVE.l d1,lastinstruction
0002AE76 <AmiBlitz3.ab2@14524>    BSR.w Atokejsr
0002AE7A <AmiBlitz3.ab2@14525> BRA.w dolecmp
0002AE80 <AmiBlitz3.ab2@14529>   MOVE.l #$CE00,D1
0002AE86 <AmiBlitz3.ab2@14530>    MOVE.l d1,lastinstruction
0002AE8A <AmiBlitz3.ab2@14531>    BSR.w Atokejsr
0002AE8E <AmiBlitz3.ab2@14532> BRA.w dogtcmp
0002AE94 <AmiBlitz3.ab2@14536>   MOVE.l #$CE00,D1
0002AE9A <AmiBlitz3.ab2@14537>    MOVE.l d1,lastinstruction
0002AE9E <AmiBlitz3.ab2@14538>    BSR.w Atokejsr
0002AEA2 <AmiBlitz3.ab2@14539> BRA.w dogecmp
0002AEA8 <AmiBlitz3.ab2@14544>   TST.b fast                                               ;compare
0002AEAC <AmiBlitz3.ab2@14545>   BEQ cmpit__org
0002AEB2 <AmiBlitz3.ab2@14549>   MOVE.l destpointer,a0
0002AEB8 <AmiBlitz3.ab2@14550>   SUB.l imm_addr,a0
0002AEBE <AmiBlitz3.ab2@14551>   CMP.l #6,a0
0002AEC2 <AmiBlitz3.ab2@14552>   BNE cmpit__l11
0002AEC8 <AmiBlitz3.ab2@14553>   MOVE.l imm_addr,a0
0002AED0 <AmiBlitz3.ab2@14554>   CMP.w #$223c,imm_addr
0002AED4 <AmiBlitz3.ab2@14555>   BNE cmpit__org
0002AEDA <AmiBlitz3.ab2@14556>   ADD.w #$8e80,-6(a4)
0002AEE0 <AmiBlitz3.ab2@14559>   CLR.l imm_addr
0002AEE2 <AmiBlitz3.ab2@14560> RTS
0002AEE8 <AmiBlitz3.ab2@14563>   CMP.l #4,a0
0002AEEC <AmiBlitz3.ab2@14564>   BNE cmpit__l10
0002AEF0 <AmiBlitz3.ab2@14565>   CMP.b #2,d3
0002AEF4 <AmiBlitz3.ab2@14566>   BNE cmpit__l11b
0002AEFA <AmiBlitz3.ab2@14567>   ADD.w #$7e40,-4(a4)
0002AEFC <AmiBlitz3.ab2@14568> RTS
0002AF02 <AmiBlitz3.ab2@14571>  ADD.w #$7e00,-4(a4)
0002AF04 <AmiBlitz3.ab2@14572> RTS
0002AF0A <AmiBlitz3.ab2@14575>    MOVE.l destpointer,a0
0002AF10 <AmiBlitz3.ab2@14576>    SUB.l load_var_addr,a0
0002AF14 <AmiBlitz3.ab2@14577>    CMP.w #4,a0
0002AF18 <AmiBlitz3.ab2@14578>    BNE cmpit__org
0002AF1C <AmiBlitz3.ab2@14579>    CMP.b #3,d3
0002AF20 <AmiBlitz3.ab2@14580>    BCS cmpit__lv1
0002AF26 <AmiBlitz3.ab2@14581>    CLR.l load_var_addr
0002AF2C <AmiBlitz3.ab2@14582>    ADD.w #$9080-$200,-4(a4)
0002AF2E <AmiBlitz3.ab2@14583> RTS
0002AF32 <AmiBlitz3.ab2@14586>   CMP.b #2,d3
0002AF36 <AmiBlitz3.ab2@14587>    BNE cmpit__org
0002AF3C <AmiBlitz3.ab2@14588>    CLR.l load_var_addr
0002AF42 <AmiBlitz3.ab2@14589>    ADD.w #$8040-$200,-4(a4)
0002AF44 <AmiBlitz3.ab2@14590> RTS
0002AF4A <AmiBlitz3.ab2@14593>   MOVE.w regnum,D3
0002AF4C <AmiBlitz3.ab2@14594>   OR.w D3,D1
0002AF4E <AmiBlitz3.ab2@14595>   LSL.w #8,D3
0002AF50 <AmiBlitz3.ab2@14596>   LSL.w #1,D3
0002AF52 <AmiBlitz3.ab2@14597>   OR.w D3,D1
0002AF54 <AmiBlitz3.ab2@14598>   ADDQ.w #1,D1
0002AF58 <AmiBlitz3.ab2@14599> BRA.w writeword
0002AF5C <AmiBlitz3.ab2@14603>    BSR.w cmpit
0002AF60 <AmiBlitz3.ab2@14606>    MOVE.w mseq(PC),D1
0002AF64 <AmiBlitz3.ab2@14607> BRA.w cpoke
0002AF68 <AmiBlitz3.ab2@14611>   BSR.w cmpit
0002AF6C <AmiBlitz3.ab2@14614>   MOVE.w msne(PC),D1
0002AF70 <AmiBlitz3.ab2@14615> BRA.w cpoke
0002AF74 <AmiBlitz3.ab2@14619>   BSR.w cmpit
0002AF78 <AmiBlitz3.ab2@14622>    MOVE.w mslt(PC),D1
0002AF7C <AmiBlitz3.ab2@14623> BRA.w cpoke
0002AF80 <AmiBlitz3.ab2@14627>    BSR.w cmpit
0002AF84 <AmiBlitz3.ab2@14630>    MOVE.w msle(PC),D1
0002AF88 <AmiBlitz3.ab2@14631> BRA.w cpoke
0002AF8C <AmiBlitz3.ab2@14635>    BSR.w cmpit
0002AF90 <AmiBlitz3.ab2@14638>    MOVE.w msgt(PC),D1
0002AF94 <AmiBlitz3.ab2@14639> BRA.w cpoke
0002AF98 <AmiBlitz3.ab2@14643>   BSR.w cmpit
0002AF9C <AmiBlitz3.ab2@14646>    MOVE.w msge(PC),D1
0002AFA2 <AmiBlitz3.ab2@14649>    OR.w regnum,D1
0002AFA6 <AmiBlitz3.ab2@14650>    CMP.w #5,d2
0002AFAA <AmiBlitz3.ab2@14651>    BNE cpoke__nod0
0002AFAE <AmiBlitz3.ab2@14652>    CMP.w #5,d3
0002AFB2 <AmiBlitz3.ab2@14653>    BNE cpoke__nod0
0002AFB4 <AmiBlitz3.ab2@14654>    MOVE.l d1,-(a7)
0002AFBA <AmiBlitz3.ab2@14655>    MOVE.l #$44004a00,d1                                    ;68k neg.b:tst.b
0002AFBE <AmiBlitz3.ab2@14656>    BSR writelong
0002AFC0 <AmiBlitz3.ab2@14657>    MOVE.l (a7)+,d1
0002AFC4 <AmiBlitz3.ab2@14660>    BSR.w writeword                                         ;writeseq
0002AFC6 <AmiBlitz3.ab2@14661>    MOVEQ.l #1,d2
0002AFCC <AmiBlitz3.ab2@14662>    MOVE.l lasttoken,d1
0002AFD2 <AmiBlitz3.ab2@14663>     TST.b fast
0002AFD6 <AmiBlitz3.ab2@14664>     BEQ.s cpoke__l11
0002AFDC <AmiBlitz3.ab2@14665>    CMP.l #$800b,d1
0002AFE0 <AmiBlitz3.ab2@14666>    BEQ cpoke__l10
0002AFE4 <AmiBlitz3.ab2@14669>   MOVE.w #$4880,D1                                         ;ext.w D regat
0002AFEA <AmiBlitz3.ab2@14670>   OR.w regnum,D1
0002AFEE <AmiBlitz3.ab2@14671>    BSR.w writeword                                         ;writeext.w
0002AFF0 <AmiBlitz3.ab2@14672>   MOVEQ.l #$02,D2                                          ;type now WORD!
0002AFF2 <AmiBlitz3.ab2@14675> RTS
0002AFF6 <AmiBlitz3.ab2@14680>   MOVE.w #$D040,D1
0002AFF8 <AmiBlitz3.ab2@14681>   MOVEQ.l #$02,D2                                          ;writeaddword   ;now a word
0002AFFC <AmiBlitz3.ab2@14682> BRA.w doplus2
0002B000 <AmiBlitz3.ab2@14686>   MOVE.w #$D040,D1
0002B002 <AmiBlitz3.ab2@14687>   MOVEQ.l #$03,D2                                          ;now a long
0002B006 <AmiBlitz3.ab2@14688>    BSR.w doplus2
0002B00A <AmiBlitz3.ab2@14689> BRA.w convert_word_to_long
0002B00E <AmiBlitz3.ab2@14693>   MOVE.w #$D080,D1                                         ;writeaddlong
0002B010 <AmiBlitz3.ab2@14696>   MOVE.w d1,a1
0002B016 <AmiBlitz3.ab2@14697>   TST.b fast
0002B01A <AmiBlitz3.ab2@14698>   BEQ doplus2__l10
0002B01C <AmiBlitz3.ab2@14702>   ASR.w #8,d1
0002B020 <AmiBlitz3.ab2@14703>   CMP.b #$90,d1
0002B024 <AmiBlitz3.ab2@14704>   BEQ doplus2__sub1
0002B028 <AmiBlitz3.ab2@14705>   CMP.b #$d0,d1
0002B02C <AmiBlitz3.ab2@14706>   BNE doplus2__l10
0002B030 <AmiBlitz3.ab2@14707>   CMP.b #3,d3
0002B034 <AmiBlitz3.ab2@14708>   BCS doplus2__lq10
0002B03A <AmiBlitz3.ab2@14709>   TST.b quickadd
0002B040 <AmiBlitz3.ab2@14713>    MOVE.l destpointer,a0
0002B046 <AmiBlitz3.ab2@14714>    CLR.b quickadd
0002B04C <AmiBlitz3.ab2@14715>    CLR.l load_var_addr
0002B052 <AmiBlitz3.ab2@14716>    SUB.l imm_addr,a0
0002B056 <AmiBlitz3.ab2@14717>    CMP.w #6,a0
0002B05A <AmiBlitz3.ab2@14718>    BEQ doplus2__li10
0002B05E <AmiBlitz3.ab2@14719>    CMP.w #4,a0
0002B062 <AmiBlitz3.ab2@14720>    BNE.s doplus2__li1
0002B068 <AmiBlitz3.ab2@14721>    CLR.l imm_addr
0002B06E <AmiBlitz3.ab2@14722>    ADD.w #$a040-$200,-4(a4)
0002B070 <AmiBlitz3.ab2@14723> RTS
0002B072 <AmiBlitz3.ab2@14726>    MOVE.l a4,a0
0002B078 <AmiBlitz3.ab2@14727>    SUB.l load_var_addr,a0
0002B07E <AmiBlitz3.ab2@14728>    CMP.l #$a,a0
0002B082 <AmiBlitz3.ab2@14729>    BNE doplus2__l10e
0002B088 <AmiBlitz3.ab2@14730>    CLR.l load_var_addr
0002B08C <AmiBlitz3.ab2@14731>    MOVE.w -$8(a4),d1
0002B092 <AmiBlitz3.ab2@14732>    MOVE.l -$4(a4),-$8(a4)
0002B096 <AmiBlitz3.ab2@14733>    MOVE.w d1,-$4(a4)
0002B09C <AmiBlitz3.ab2@14734>    SUB.w #$1980,-$a(a4)
0002B0A2 <AmiBlitz3.ab2@14735>    SUBQ.l #2,destpointer
0002B0A4 <AmiBlitz3.ab2@14736> RTS
0002B0AA <AmiBlitz3.ab2@14739>   CLR.b quickadd
0002B0AE <AmiBlitz3.ab2@14740> BRA doplus2__l10
0002B0B4 <AmiBlitz3.ab2@14743>    CLR.l imm_addr
0002B0B8 <AmiBlitz3.ab2@14744>    TST.l -4(a4)                                            ;skip If ADD.l #0,dx
0002B0BC <AmiBlitz3.ab2@14745>    BNE doplus2__doit
0002B0C2 <AmiBlitz3.ab2@14746>    SUBQ.l #6,destpointer
0002B0C4 <AmiBlitz3.ab2@14747> RTS
0002B0CA <AmiBlitz3.ab2@14750>    ADD.w #$b080-$200,-6(a4)
0002B0CC <AmiBlitz3.ab2@14751> RTS
0002B0D2 <AmiBlitz3.ab2@14754>    MOVE.l destpointer,a0
0002B0D8 <AmiBlitz3.ab2@14755>    SUB.l load_var_addr,a0
0002B0DC <AmiBlitz3.ab2@14756>    CMP.w #4,a0
0002B0E0 <AmiBlitz3.ab2@14757>    BNE doplus2__l10
0002B0E4 <AmiBlitz3.ab2@14758>    CMP.b #3,d3
0002B0E8 <AmiBlitz3.ab2@14759>    BNE doplus2__lv1
0002B0EE <AmiBlitz3.ab2@14760>    CLR.l load_var_addr
0002B0F4 <AmiBlitz3.ab2@14761>    ADD.w #$b080-$200,-4(a4)
0002B0F6 <AmiBlitz3.ab2@14762> RTS
0002B0FA <AmiBlitz3.ab2@14765>   CMP.b #2,d3
0002B0FE <AmiBlitz3.ab2@14766>   BNE doplus2__l10
0002B104 <AmiBlitz3.ab2@14767>   CLR.l load_var_addr
0002B10A <AmiBlitz3.ab2@14768>   ADD.w #$a040-$200,-4(a4)
0002B10C <AmiBlitz3.ab2@14769> RTS
0002B112 <AmiBlitz3.ab2@14772>   MOVE.w regnum,D3
0002B114 <AmiBlitz3.ab2@14773>   MOVE.w a1,d1
0002B116 <AmiBlitz3.ab2@14774>   OR.w D3,D1
0002B118 <AmiBlitz3.ab2@14775>   ADDQ.w #1,D1
0002B11A <AmiBlitz3.ab2@14776>   LSL.w #8,D3
0002B11C <AmiBlitz3.ab2@14777>   LSL.w #1,D3
0002B11E <AmiBlitz3.ab2@14778>   OR.w D3,D1
0002B122 <AmiBlitz3.ab2@14779> BRA.w writeword
0002B126 <AmiBlitz3.ab2@14782>    CMP.b #3,d3
0002B12A <AmiBlitz3.ab2@14783>    BCS doplus2__sub1_lq10
0002B130 <AmiBlitz3.ab2@14784>    TST.b quickadd
0002B136 <AmiBlitz3.ab2@14788>    MOVE.l destpointer,a0
0002B13C <AmiBlitz3.ab2@14789>    CLR.b quickadd
0002B142 <AmiBlitz3.ab2@14790>    CLR.l load_var_addr
0002B148 <AmiBlitz3.ab2@14791>    SUB.l imm_addr,a0
0002B14C <AmiBlitz3.ab2@14792>    CMP.w #6,a0
0002B150 <AmiBlitz3.ab2@14793>    BEQ doplus2__sub1_li10
0002B154 <AmiBlitz3.ab2@14794>    CMP.w #4,a0
0002B158 <AmiBlitz3.ab2@14795>    BNE.s doplus2__sub1_li1
0002B15E <AmiBlitz3.ab2@14796>    CLR.l imm_addr
0002B164 <AmiBlitz3.ab2@14797>    ADD.w #$6040-$200,-4(a4)
0002B166 <AmiBlitz3.ab2@14798> RTS
0002B168 <AmiBlitz3.ab2@14801>    MOVE.l a4,a0
0002B16E <AmiBlitz3.ab2@14802>     SUB.l load_var_addr,a0
0002B174 <AmiBlitz3.ab2@14803>     CMP.l #$a,a0
0002B178 <AmiBlitz3.ab2@14804>     BNE doplus2__sub1_l10e
0002B17E <AmiBlitz3.ab2@14805>    CLR.l load_var_addr
0002B182 <AmiBlitz3.ab2@14806>    MOVE.w -$8(a4),d1
0002B188 <AmiBlitz3.ab2@14807>    MOVE.l -$4(a4),-$8(a4)
0002B18C <AmiBlitz3.ab2@14808>    MOVE.w d1,-$4(a4)
0002B192 <AmiBlitz3.ab2@14809>    SUB.w #$1b80,-$a(a4)
0002B198 <AmiBlitz3.ab2@14810>    SUBQ.l #2,destpointer
0002B19A <AmiBlitz3.ab2@14811> RTS
0002B1A0 <AmiBlitz3.ab2@14814>   CLR.b quickadd
0002B1A4 <AmiBlitz3.ab2@14815> BRA doplus2__sub1_l10
0002B1AA <AmiBlitz3.ab2@14818>    CLR.l imm_addr
0002B1B0 <AmiBlitz3.ab2@14819>    ADD.w #$7080-$200,-6(a4)
0002B1B2 <AmiBlitz3.ab2@14820> RTS
0002B1B8 <AmiBlitz3.ab2@14823>    MOVE.l destpointer,a0
0002B1BE <AmiBlitz3.ab2@14824>    SUB.l load_var_addr,a0
0002B1C2 <AmiBlitz3.ab2@14825>    CMP.w #4,a0
0002B1C6 <AmiBlitz3.ab2@14826>    BNE doplus2__sub1_l10
0002B1CA <AmiBlitz3.ab2@14827>    CMP.b #3,d3
0002B1CE <AmiBlitz3.ab2@14828>    BNE doplus2__sub1_lv1
0002B1D4 <AmiBlitz3.ab2@14829>    CLR.l load_var_addr
0002B1DA <AmiBlitz3.ab2@14830>    ADD.w #$7080-$200,-4(a4)
0002B1DC <AmiBlitz3.ab2@14831> RTS
0002B1E0 <AmiBlitz3.ab2@14834>    CMP.b #2,d3
0002B1E4 <AmiBlitz3.ab2@14835>    BNE doplus2__sub1_l10
0002B1EA <AmiBlitz3.ab2@14836>    CLR.l load_var_addr
0002B1F0 <AmiBlitz3.ab2@14837>    ADD.w #$6040-$200,-4(a4)
0002B1F2 <AmiBlitz3.ab2@14838> RTS
0002B1F8 <AmiBlitz3.ab2@14841>   MOVE.w regnum,D3
0002B1FA <AmiBlitz3.ab2@14842>   MOVE.w a1,d1
0002B1FC <AmiBlitz3.ab2@14843>   OR.w D3,D1
0002B1FE <AmiBlitz3.ab2@14844>   ADDQ.w #1,D1
0002B200 <AmiBlitz3.ab2@14845>   LSL.w #8,D3
0002B202 <AmiBlitz3.ab2@14846>   LSL.w #1,D3
0002B204 <AmiBlitz3.ab2@14847>   OR.w D3,D1
0002B208 <AmiBlitz3.ab2@14848> BRA.w writeword
0002B20A <AmiBlitz3.ab2@14852>   MOVEQ #0,d0
0002B210 <AmiBlitz3.ab2@14853>   MOVE.w regnum,d0
0002B212 <AmiBlitz3.ab2@14854>   ADDQ #1,d0
0002B214 <AmiBlitz3.ab2@14855>   ASL.w #8,d0
0002B216 <AmiBlitz3.ab2@14856>   ASL.w #2,d0
0002B21C <AmiBlitz3.ab2@14857>   MOVE.l #$f2000022,d1                                     ;fpu add
0002B21E <AmiBlitz3.ab2@14858>   OR.l d0,d1
0002B224 <AmiBlitz3.ab2@14859>   MOVE.w regnum,d0
0002B226 <AmiBlitz3.ab2@14860>   ASL.w #7,d0
0002B228 <AmiBlitz3.ab2@14861>   OR.l d0,d1
0002B22C <AmiBlitz3.ab2@14862> BRA.w writelong
0002B232 <AmiBlitz3.ab2@14868>   TST.b iee
0002B236 <AmiBlitz3.ab2@14869>   BNE do_plus_float__fadd1
0002B23A <AmiBlitz3.ab2@14870>   MOVE.w #$FFBE,D1                                         ;#-66,d1 org soruce ;floatadd
0002B240 <AmiBlitz3.ab2@14873>    MOVE.w D1,libjsr+2
0002B244 <AmiBlitz3.ab2@14874>    BSR.w JL_0_AD40
0002B246 <AmiBlitz3.ab2@14875>   MOVE.l D4,D1
0002B24A <AmiBlitz3.ab2@14876>    BSR.w JL_0_AD38
0002B24E <AmiBlitz3.ab2@14877>   MOVE.w #$C900,D1
0002B252 <AmiBlitz3.ab2@14878>    BSR.w Atokejsr
0002B256 <AmiBlitz3.ab2@14879>    BSR.w JL_0_A352
0002B25C <AmiBlitz3.ab2@14880>   MOVE.l libjsr,D1
0002B260 <AmiBlitz3.ab2@14881>    BSR.w writelong
0002B264 <AmiBlitz3.ab2@14882>    BSR.w JL_0_A36E
0002B266 <AmiBlitz3.ab2@14883>   MOVE.l D5,D1
0002B26A <AmiBlitz3.ab2@14884> BRA.w JL_0_AD38
0002B270 <AmiBlitz3.ab2@14888>   MOVE.w regnum,D1
0002B272 <AmiBlitz3.ab2@14889>   LSL.w #8,D1
0002B274 <AmiBlitz3.ab2@14890>   LSL.w #1,D1
0002B276 <AmiBlitz3.ab2@14891>   MOVE.w D1,-(A7)
0002B27A <AmiBlitz3.ab2@14892>   CMP.w #3072,d1
0002B27E <AmiBlitz3.ab2@14893>   BEQ 'l1
0002B284 <AmiBlitz3.ab2@14894>   OR.w addcode,D1                                          ;move.l (a7)+,d0
0002B288 <AmiBlitz3.ab2@14895> BRA 'l2
0002B28C <AmiBlitz3.ab2@14898>    MOVE.w #$588f,d1                                        ;addq.l #4,a7
0002B290 <AmiBlitz3.ab2@14901>    BSR.w writeword
0002B292 <AmiBlitz3.ab2@14902>   MOVE.w (A7)+,D1
0002B298 <AmiBlitz3.ab2@14903>   OR.w addcode+2,D1                                        ;native string add.l d0,(a7)
0002B29C <AmiBlitz3.ab2@14904> BRA.w writeword
0002B2A0 <AmiBlitz3.ab2@14910>   MOVE.w #$9040,D1
0002B2A4 <AmiBlitz3.ab2@14911> BRA.w doplus2
0002B2A8 <AmiBlitz3.ab2@14915>   MOVE.w #$9040,D1
0002B2AC <AmiBlitz3.ab2@14916> BRA.w doplus2
0002B2B0 <AmiBlitz3.ab2@14920>   MOVE.w #$9080,D1
0002B2B4 <AmiBlitz3.ab2@14921> BRA.w doplus2
0002B2BA <AmiBlitz3.ab2@14925>    TST.b iee
0002B2BE <AmiBlitz3.ab2@14926>     BNE do_minus_float__fs1
0002B2C2 <AmiBlitz3.ab2@14927>   MOVE.w #$FFB8,D1                                         ;floatsub
0002B2C6 <AmiBlitz3.ab2@14928> BRA.w doflib
0002B2C8 <AmiBlitz3.ab2@14931>   MOVEQ #0,d0
0002B2CE <AmiBlitz3.ab2@14932>   MOVE.w regnum,d0
0002B2D0 <AmiBlitz3.ab2@14933>   ADDQ #1,d0
0002B2D2 <AmiBlitz3.ab2@14934>   ASL.w #8,d0
0002B2D4 <AmiBlitz3.ab2@14935>   ASL.w #2,d0
0002B2DA <AmiBlitz3.ab2@14936>   MOVE.l #$f2000028,d1
0002B2DC <AmiBlitz3.ab2@14937>   OR.l d0,d1
0002B2E2 <AmiBlitz3.ab2@14938>   MOVE.w regnum,d0
0002B2E4 <AmiBlitz3.ab2@14939>   ASL.w #7,d0
0002B2E6 <AmiBlitz3.ab2@14940>   OR.l d0,d1
0002B2EA <AmiBlitz3.ab2@14941> BRA.w writelong
0002B2EE <AmiBlitz3.ab2@14947>   MOVE.w #$C1C0,D1
0002B2F0 <AmiBlitz3.ab2@14948>   MOVEQ.l #$02,D2                                          ;now a word
0002B2F4 <AmiBlitz3.ab2@14949> BRA.w doplus2
0002B2F8 <AmiBlitz3.ab2@14953>   MOVE.w #$C1C0,D1
0002B2FA <AmiBlitz3.ab2@14954>   MOVEQ.l #$03,D2                                          ;now a long.
0002B2FE <AmiBlitz3.ab2@14955> BRA.w doplus2
0002B302 <AmiBlitz3.ab2@14959>   MOVE.w #$CA00,D1                                         ;quickmul
0002B306 <AmiBlitz3.ab2@14960> BRA.w domylib
0002B30C <AmiBlitz3.ab2@14964>   TST.b fast
0002B310 <AmiBlitz3.ab2@14965>   BNE.s 'l10
0002B314 <AmiBlitz3.ab2@14966>   MOVE.w #$CA01,D1                                         ;writelongmul
0002B318 <AmiBlitz3.ab2@14967> BRA.w domylib
0002B31E <AmiBlitz3.ab2@14976>    MOVE.l destpointer,a0
0002B324 <AmiBlitz3.ab2@14977>    SUB.l imm_addr,a0
0002B328 <AmiBlitz3.ab2@14978>    CMP.w #6,a0
0002B32C <AmiBlitz3.ab2@14979>    BNE 'li1
0002B32E <AmiBlitz3.ab2@14980>    MOVEQ.l #2,d1
0002B330 <AmiBlitz3.ab2@14981>    MOVEQ #1,d3
0002B334 <AmiBlitz3.ab2@14984>   CMP.l -4(a4),d1
0002B338 <AmiBlitz3.ab2@14985>    BEQ 'oklsl
0002B33A <AmiBlitz3.ab2@14986>     LSL.l #1,d1
0002B340 <AmiBlitz3.ab2@14987>     ADD.l #1,d3
0002B346 <AmiBlitz3.ab2@14988>     CMP.l #9,d3
0002B34A <AmiBlitz3.ab2@14989>     BNE 'ag
0002B34E <AmiBlitz3.ab2@14990>    MOVE.w -2(a4),d1
0002B352 <AmiBlitz3.ab2@14991>    BSR writeword
0002B358 <AmiBlitz3.ab2@14992>    MOVE.w -6(a4),-4(a4)
0002B360 <AmiBlitz3.ab2@14993>    MOVE.l #$4c3c0800,-8(a4)
0002B366 <AmiBlitz3.ab2@14994>    MOVE.w regnum,D3
0002B36A <AmiBlitz3.ab2@14995>    MULS #$1000,D3
0002B36E <AmiBlitz3.ab2@14996>    OR.w D3,-6(a4)
0002B374 <AmiBlitz3.ab2@14997>    CLR.l load_var_addr
0002B37A <AmiBlitz3.ab2@14998>    CLR.l imm_addr
0002B37E <AmiBlitz3.ab2@14999> BRA 'li3
0002B382 <AmiBlitz3.ab2@15002>    CMP.w #8,d3
0002B386 <AmiBlitz3.ab2@15003>    BEQ 'ok
0002B388 <AmiBlitz3.ab2@15004>    ASL.l #1,d3
0002B38A <AmiBlitz3.ab2@15005>    ASL.l #8,d3
0002B38E <AmiBlitz3.ab2@15006>    MOVE.w #$e188,d1
0002B390 <AmiBlitz3.ab2@15007>    OR.w d3,d1
0002B394 <AmiBlitz3.ab2@15008>    MOVE.w d1,-6(a4)
0002B398 <AmiBlitz3.ab2@15009> BRA 'okls
0002B39E <AmiBlitz3.ab2@15012>   MOVE.w #$e188,-6(a4)                                     ;lsl.l #,dx
0002B3A4 <AmiBlitz3.ab2@15015>   MOVE.w regnum,d3
0002B3A8 <AmiBlitz3.ab2@15016>    OR.b d3,-5(a4)
0002B3AE <AmiBlitz3.ab2@15017>    SUBQ.l #4,destpointer
0002B3B4 <AmiBlitz3.ab2@15018>    CLR.l load_var_addr
0002B3BA <AmiBlitz3.ab2@15019>    CLR.l imm_addr
0002B3BE <AmiBlitz3.ab2@15020> BRA 'li3
0002B3C4 <AmiBlitz3.ab2@15023>    MOVE.l destpointer,a0
0002B3CA <AmiBlitz3.ab2@15024>    SUB.l load_var_addr,a0
0002B3CE <AmiBlitz3.ab2@15025>    CMP.w #4,a0
0002B3D2 <AmiBlitz3.ab2@15026>    BNE 'li2
0002B3D6 <AmiBlitz3.ab2@15027>    MOVE.w -2(a4),d1
0002B3DA <AmiBlitz3.ab2@15028>    BSR writeword
0002B3E0 <AmiBlitz3.ab2@15029>    MOVE.b #$4c,-6(a4)
0002B3E6 <AmiBlitz3.ab2@15030>    MOVE.w #$0800,-4(a4)
0002B3EC <AmiBlitz3.ab2@15031>    MOVE.w regnum,D3
0002B3F0 <AmiBlitz3.ab2@15032>    MULS #$1000,d3
0002B3F4 <AmiBlitz3.ab2@15033>    OR.w D3,-4(a4)
0002B3F8 <AmiBlitz3.ab2@15034> BRA 'li3
0002B3FE <AmiBlitz3.ab2@15037>    MOVE.l #$4c010800,d1
0002B404 <AmiBlitz3.ab2@15038>    MOVE.w regnum,D3
0002B406 <AmiBlitz3.ab2@15039>    EXT.l d3
0002B40A <AmiBlitz3.ab2@15040>    MULS #$1000,d3
0002B40C <AmiBlitz3.ab2@15041>    OR.w D3,d1
0002B410 <AmiBlitz3.ab2@15042>    MULS #$10,d3
0002B412 <AmiBlitz3.ab2@15043>    ADD.l d3,d1
0002B416 <AmiBlitz3.ab2@15044>    BSR writelong
0002B418 <AmiBlitz3.ab2@15049> RTS
0002B41A <AmiBlitz3.ab2@15053>   MOVE.w D1,-(A7)
0002B41E <AmiBlitz3.ab2@15054>    BSR.w JL_0_AD40
0002B420 <AmiBlitz3.ab2@15055>   MOVE.l D4,D1
0002B424 <AmiBlitz3.ab2@15056>    BSR.w JL_0_AD38
0002B428 <AmiBlitz3.ab2@15057>    BSR.w JL_0_A352
0002B42A <AmiBlitz3.ab2@15058>   MOVEQ #0,d1
0002B42C <AmiBlitz3.ab2@15059>   MOVE.w (A7)+,D1
0002B432 <AmiBlitz3.ab2@15060>   MOVE.l d1,lastinstruction
0002B436 <AmiBlitz3.ab2@15061>    BSR.w Atokejsr
0002B43A <AmiBlitz3.ab2@15062>    BSR.w JL_0_A36E
0002B43C <AmiBlitz3.ab2@15063>   MOVE.l D5,D1
0002B440 <AmiBlitz3.ab2@15064> BRA.w JL_0_AD38
0002B446 <AmiBlitz3.ab2@15068>    TST.b iee
0002B44A <AmiBlitz3.ab2@15069>     BNE fm1
0002B44E <AmiBlitz3.ab2@15070>  MOVE.w #$FFB2,D1                                          ;floatmul
0002B452 <AmiBlitz3.ab2@15071> BRA.w doflib
0002B454 <AmiBlitz3.ab2@15074>   MOVEQ #0,d0
0002B45A <AmiBlitz3.ab2@15075>  MOVE.w regnum,d0
0002B45C <AmiBlitz3.ab2@15076>  ADDQ #1,d0
0002B45E <AmiBlitz3.ab2@15077>  ASL.w #8,d0
0002B460 <AmiBlitz3.ab2@15078>  ASL.w #2,d0
0002B466 <AmiBlitz3.ab2@15079>  MOVE.l #$f2000023,d1
0002B468 <AmiBlitz3.ab2@15080>  OR.l d0,d1
0002B46E <AmiBlitz3.ab2@15081>  MOVE.w regnum,d0
0002B470 <AmiBlitz3.ab2@15082>  ASL.w #7,d0
0002B472 <AmiBlitz3.ab2@15083>  OR.l d0,d1
0002B476 <AmiBlitz3.ab2@15084> BRA.w writelong
0002B478 <AmiBlitz3.ab2@15088>   MOVE.w D2,-(A7)                                          ;dopow
0002B47A <AmiBlitz3.ab2@15089>   MOVE.w D2,D3
0002B47C <AmiBlitz3.ab2@15090>   MOVEQ.l #$05,D2
0002B480 <AmiBlitz3.ab2@15091>    BSR.w JL_0_9770
0002B486 <AmiBlitz3.ab2@15092>   ADDQ.w #1,regnum
0002B488 <AmiBlitz3.ab2@15093>   MOVE.w (A7)+,D3
0002B48A <AmiBlitz3.ab2@15094>   MOVEQ.l #$05,D2
0002B48E <AmiBlitz3.ab2@15095>    BSR.w writeconvertcode
0002B494 <AmiBlitz3.ab2@15096>   SUBQ.w #1,regnum
0002B498 <AmiBlitz3.ab2@15097>    BSR.w nocando
0002B49E <AmiBlitz3.ab2@15098>    TST.b fpu
0002B4A2 <AmiBlitz3.ab2@15099>    BEQ 'old
0002B4A4 <AmiBlitz3.ab2@15100>    MOVEQ #0,d1
0002B4AA <AmiBlitz3.ab2@15101>    MOVE.w regnum,d1
0002B4AC <AmiBlitz3.ab2@15102>   MOVE.l d1,d0
0002B4AE <AmiBlitz3.ab2@15103>   ASL.w #7,d1
0002B4B0 <AmiBlitz3.ab2@15104>   ASL.w #8,d0
0002B4B2 <AmiBlitz3.ab2@15105>   ASL.w #2,d0
0002B4B4 <AmiBlitz3.ab2@15106>   OR.w d0,d1
0002B4B6 <AmiBlitz3.ab2@15107>   MOVE.l d1,-(a7)
0002B4BC <AmiBlitz3.ab2@15109>    OR.l #$f2000016,d1                                       ;flog2.x fp0      ;fpu ^ pow
0002B4C0 <AmiBlitz3.ab2@15110>    BSR writelong
0002B4C6 <AmiBlitz3.ab2@15111>    MOVE.w regnum,d0
0002B4C8 <AmiBlitz3.ab2@15112>  ADDQ #1,d0
0002B4CA <AmiBlitz3.ab2@15113>  ASL.w #8,d0
0002B4CC <AmiBlitz3.ab2@15114>  ASL.w #2,d0
0002B4D2 <AmiBlitz3.ab2@15115>  MOVE.l #$f2000023,d1
0002B4D4 <AmiBlitz3.ab2@15116>  OR.l d0,d1
0002B4DA <AmiBlitz3.ab2@15117>  MOVE.w regnum,d0
0002B4DC <AmiBlitz3.ab2@15118>  ASL.w #7,d0
0002B4DE <AmiBlitz3.ab2@15119>  OR.l d0,d1
0002B4E4 <AmiBlitz3.ab2@15120>    OR.l #$f2000023,d1                                      ;fmulx.x fp1,fp0
0002B4E8 <AmiBlitz3.ab2@15121>    BSR writelong
0002B4EA <AmiBlitz3.ab2@15122>    MOVE.l (a7)+,d1
0002B4F0 <AmiBlitz3.ab2@15124>    OR.l #$f2000011,d1                                      ;ftwotox.x fp0
0002B4F4 <AmiBlitz3.ab2@15125>    BSR writelong
0002B4F6 <AmiBlitz3.ab2@15126> RTS
0002B4FA <AmiBlitz3.ab2@15129>   MOVE.w #$6001,D1
0002B4FE <AmiBlitz3.ab2@15130> BRA.w domylib
0002B502 <AmiBlitz3.ab2@15136>   MOVEA.l forthsp(PC),A0
0002B506 <AmiBlitz3.ab2@15137>   MOVE.w #$FFFF,-(A0)                                      ;#-1,-(a0) org source
0002B508 <AmiBlitz3.ab2@15138> RTS
0002B50C <AmiBlitz3.ab2@15144>   MOVE.w #$D400,D1
0002B510 <AmiBlitz3.ab2@15145> BRA.w domylib
0002B514 <AmiBlitz3.ab2@15149>   MOVE.w #$D401,D1
0002B518 <AmiBlitz3.ab2@15150> BRA.w domylib
0002B51C <AmiBlitz3.ab2@15154>    BSR.w nocando                                           ;modlib uses an alibjsr here!
0002B520 <AmiBlitz3.ab2@15155>   MOVE.w #$D402,D1
0002B524 <AmiBlitz3.ab2@15156> BRA.w domylib
0002B528 <AmiBlitz3.ab2@15160>   MOVE.w #$D403,D1
0002B52A <AmiBlitz3.ab2@15161>   MOVEQ.l #$02,D2                                          ;now a word.
0002B52E <AmiBlitz3.ab2@15162> BRA.w domylib
0002B532 <AmiBlitz3.ab2@15166>    BSR.w nocando                                           ;modlib lib uses an alibjsr!  ;domod float
0002B538 <AmiBlitz3.ab2@15167>   TST.b fpu
0002B53C <AmiBlitz3.ab2@15168>   BEQ 'old
0002B53E <AmiBlitz3.ab2@15169>   MOVEQ #0,d1
0002B544 <AmiBlitz3.ab2@15170>   MOVE.w regnum,d1                                         ;fpu mod
0002B546 <AmiBlitz3.ab2@15171>   MOVE.l d1,d0
0002B548 <AmiBlitz3.ab2@15172>   ADDQ.l #1,d1
0002B54A <AmiBlitz3.ab2@15173>   ASL.l #7,d0
0002B54C <AmiBlitz3.ab2@15174>   ASL.l #8,d1
0002B54E <AmiBlitz3.ab2@15175>   ASL.l #2,d1
0002B550 <AmiBlitz3.ab2@15176>   OR.l d0,d1
0002B552 <AmiBlitz3.ab2@15177>   MOVE.l d0,-(a7)
0002B558 <AmiBlitz3.ab2@15178>   OR.l #$f2000021,d1
0002B55C <AmiBlitz3.ab2@15179>   BSR writelong
0002B55E <AmiBlitz3.ab2@15180>   MOVE.l (a7)+,d0
0002B560 <AmiBlitz3.ab2@15181>  RTS
0002B564 <AmiBlitz3.ab2@15184>   MOVE.w #$D404,D1
0002B566 <AmiBlitz3.ab2@15185>   MOVEQ.l #$03,D2                                          ;now a long
0002B56A <AmiBlitz3.ab2@15186> BRA.w domylib
0002B56E <AmiBlitz3.ab2@15194>   MOVE.w #$48C0,D1
0002B574 <AmiBlitz3.ab2@15195>   OR.w regnum,D1
0002B578 <AmiBlitz3.ab2@15196>    BSR.w writeword
0002B57A <AmiBlitz3.ab2@15197>   ADDQ.w #1,D1
0002B57E <AmiBlitz3.ab2@15198>    BSR.w writeword
0002B582 <AmiBlitz3.ab2@15201>    MOVE.w #$48C0,D1
0002B588 <AmiBlitz3.ab2@15202>   OR.w regnum,D1
0002B58C <AmiBlitz3.ab2@15203>    BSR.w writeword
0002B590 <AmiBlitz3.ab2@15204>   MOVE.w #$81C0,D1
0002B594 <AmiBlitz3.ab2@15205> BRA.w doplus2
0002B59A <AmiBlitz3.ab2@15209>   TST.b fast
0002B59E <AmiBlitz3.ab2@15210>   BNE.s 'l10
0002B5A2 <AmiBlitz3.ab2@15211>   MOVE.w #$CB01,D1
0002B5A6 <AmiBlitz3.ab2@15212> BRA.w domylib
0002B5AA <AmiBlitz3.ab2@15218>   BSR.w JL_0_AD40
0002B5AC <AmiBlitz3.ab2@15219>   MOVE.l D4,D1
0002B5B0 <AmiBlitz3.ab2@15220>    BSR.w JL_0_AD38
0002B5B4 <AmiBlitz3.ab2@15221>    BSR.w JL_0_A352
0002B5BA <AmiBlitz3.ab2@15235>    MOVE.l #$4c410800,d1
0002B5BE <AmiBlitz3.ab2@15236>    BSR writelong
0002B5C2 <AmiBlitz3.ab2@15239>   MOVE.w #$4e71,d1
0002B5C6 <AmiBlitz3.ab2@15241>    BSR.w JL_0_A36E
0002B5C8 <AmiBlitz3.ab2@15242>   MOVE.l D5,D1
0002B5CC <AmiBlitz3.ab2@15243> BRA.w JL_0_AD38
0002B5D0 <AmiBlitz3.ab2@15246>     CMP.w #8,d3
0002B5D4 <AmiBlitz3.ab2@15247>     BEQ 'ok
0002B5D6 <AmiBlitz3.ab2@15248>     ASL.l #1,d3
0002B5D8 <AmiBlitz3.ab2@15249>     ASL.l #8,d3
0002B5DC <AmiBlitz3.ab2@15250>     MOVE.w #$e080,d1
0002B5DE <AmiBlitz3.ab2@15251>     OR.w d3,d1
0002B5E2 <AmiBlitz3.ab2@15252> BRA 'oklsr2
0002B5E6 <AmiBlitz3.ab2@15255>   MOVE.w #$e080,d1                                         ;lsr.l #,dx
0002B5EC <AmiBlitz3.ab2@15258>      SUBQ.l #6,destpointer
0002B5F0 <AmiBlitz3.ab2@15259>      BSR writeword
0002B5F2 <AmiBlitz3.ab2@15260>      MOVE.l (a7)+,d3
0002B5F4 <AmiBlitz3.ab2@15261>      MOVEQ #0,d1
0002B5FA <AmiBlitz3.ab2@15262>      CLR.l load_var_addr
0002B600 <AmiBlitz3.ab2@15263>      CLR.l imm_addr
0002B604 <AmiBlitz3.ab2@15264> BRA JL_0_AD38
0002B608 <AmiBlitz3.ab2@15268>   MOVE.w #$CB00,D1                                         ;quickdiv
0002B60C <AmiBlitz3.ab2@15269> BRA.w domylib
0002B612 <AmiBlitz3.ab2@15273>    TST.b iee
0002B616 <AmiBlitz3.ab2@15274>    BNE fdiv1
0002B61A <AmiBlitz3.ab2@15275>    MOVE.w #$FFAC,D1                                        ;floatdiv
0002B61E <AmiBlitz3.ab2@15276> BRA.w doflib
0002B620 <AmiBlitz3.ab2@15280>   MOVEQ #0,d0
0002B626 <AmiBlitz3.ab2@15281>   MOVE.w regnum,d0
0002B628 <AmiBlitz3.ab2@15282>   ADDQ #1,d0
0002B62A <AmiBlitz3.ab2@15283>   ASL.w #8,d0
0002B62C <AmiBlitz3.ab2@15284>   ASL.w #2,d0
0002B632 <AmiBlitz3.ab2@15285>   MOVE.l #$f2000020,d1                                     ;fpu div
0002B634 <AmiBlitz3.ab2@15286>   OR.l d0,d1
0002B63A <AmiBlitz3.ab2@15287>   MOVE.w regnum,d0
0002B63C <AmiBlitz3.ab2@15288>   ASL.w #7,d0
0002B63E <AmiBlitz3.ab2@15289>   OR.l d0,d1
0002B642 <AmiBlitz3.ab2@15290> BRA.w writelong
0002B646 <AmiBlitz3.ab2@15294>   MOVE.w #$C000,D1
0002B64A <AmiBlitz3.ab2@15295> BRA.w doplus2
0002B64E <AmiBlitz3.ab2@15299>   MOVE.w #$C040,D1
0002B652 <AmiBlitz3.ab2@15300> BRA.w doplus2
0002B656 <AmiBlitz3.ab2@15304>   MOVE.w #$C080,D1
0002B65A <AmiBlitz3.ab2@15305> BRA.w doplus2
0002B65E <AmiBlitz3.ab2@15309>   MOVE.w #$8000,D1
0002B662 <AmiBlitz3.ab2@15310> BRA.w doplus2
0002B666 <AmiBlitz3.ab2@15314>   MOVE.w #$8040,D1
0002B66A <AmiBlitz3.ab2@15315> BRA.w doplus2
0002B66E <AmiBlitz3.ab2@15319>   MOVE.w #$8080,D1
0002B672 <AmiBlitz3.ab2@15320> BRA.w doplus2
0002B676 <AmiBlitz3.ab2@15324>   MOVE.w #$B100,D1
0002B67C <AmiBlitz3.ab2@15327>    MOVE.w regnum,D3
0002B67E <AmiBlitz3.ab2@15328>   OR.w D3,D1
0002B680 <AmiBlitz3.ab2@15329>   ADDQ.w #1,D3
0002B682 <AmiBlitz3.ab2@15330>   LSL.w #8,D3
0002B684 <AmiBlitz3.ab2@15331>   LSL.w #1,D3
0002B686 <AmiBlitz3.ab2@15332>   OR.w D3,D1
0002B68A <AmiBlitz3.ab2@15333> BRA.w writeword
0002B68E <AmiBlitz3.ab2@15337>   MOVE.w #$B140,D1
0002B692 <AmiBlitz3.ab2@15338> BRA.w JL_0_A25C
0002B696 <AmiBlitz3.ab2@15342>   MOVE.w #$B180,D1
0002B69A <AmiBlitz3.ab2@15343> BRA.w JL_0_A25C
0002B69E <AmiBlitz3.ab2@15347>   MOVE.w #$E1A8,D1
0002B6A2 <AmiBlitz3.ab2@15348> BRA.w JL_0_A298
0002B6A6 <AmiBlitz3.ab2@15352>   MOVE.w #$E0A8,D1
0002B6AA <AmiBlitz3.ab2@15353> BRA.w JL_0_A298
0002B6AE <AmiBlitz3.ab2@15357>   MOVE.w #$E0A0,D1
0002B6B2 <AmiBlitz3.ab2@15358> BRA.w JL_0_A298
0002B6B4 <AmiBlitz3.ab2@15362>   MOVE.w D1,-(A7)
0002B6BA <AmiBlitz3.ab2@15363>   ADDQ.w #1,regnum
0002B6BC <AmiBlitz3.ab2@15364>   MOVE.w D2,-(A7)
0002B6BE <AmiBlitz3.ab2@15365>   MOVE.w D2,D3
0002B6C0 <AmiBlitz3.ab2@15366>   MOVEQ.l #$02,D2
0002B6C4 <AmiBlitz3.ab2@15371>    BSR.w writeconvertcode
0002B6C6 <AmiBlitz3.ab2@15373>   MOVE.w (A7)+,D2
0002B6CC <AmiBlitz3.ab2@15374>   SUBQ.w #1,regnum
0002B6D0 <AmiBlitz3.ab2@15375>   CMP.w #$4,D2
0002B6D4 <AmiBlitz3.ab2@15376>    BEQ.w JL_0_A2C2
0002B6D6 <AmiBlitz3.ab2@15377>   MOVE.w D2,D3
0002B6D8 <AmiBlitz3.ab2@15378>   MOVEQ.l #$03,D2
0002B6DC <AmiBlitz3.ab2@15379>    BSR.w JL_0_9770
0002B6DE <AmiBlitz3.ab2@15382>    MOVE.w (A7)+,D1
0002B6E4 <AmiBlitz3.ab2@15383>   MOVE.w regnum,D3
0002B6E6 <AmiBlitz3.ab2@15384>   OR.w D3,D1
0002B6E8 <AmiBlitz3.ab2@15385>   ADDQ.w #1,D3
0002B6EA <AmiBlitz3.ab2@15386>   LSL.w #8,D3
0002B6EC <AmiBlitz3.ab2@15387>   LSL.w #1,D3
0002B6EE <AmiBlitz3.ab2@15388>   OR.w D3,D1
0002B6F2 <AmiBlitz3.ab2@15389> BRA.w writeword
0002B6F6 <AmiBlitz3.ab2@15393>   MOVE.w #$0100,D1
0002B6FA <AmiBlitz3.ab2@15394>    BSR.w JL_0_A31C
0002B700 <AmiBlitz3.ab2@15395>   MOVE.w regnum,D1
0002B704 <AmiBlitz3.ab2@15396>   ORI.w #$56C0,D1
0002B708 <AmiBlitz3.ab2@15397>    BSR.w writeword
0002B70E <AmiBlitz3.ab2@15398>   MOVE.w regnum,D1
0002B712 <AmiBlitz3.ab2@15399>   ORI.w #$4880,D1
0002B716 <AmiBlitz3.ab2@15400>    BSR.w writeword
0002B718 <AmiBlitz3.ab2@15401>   MOVEQ.l #$02,D2
0002B71A <AmiBlitz3.ab2@15402> RTS
0002B71E <AmiBlitz3.ab2@15406>   MOVE.w #$01C0,D1
0002B722 <AmiBlitz3.ab2@15409>    BSR.w JL_0_A31C
0002B724 <AmiBlitz3.ab2@15410>   MOVEQ.l #$03,D2
0002B726 <AmiBlitz3.ab2@15411> RTS
0002B72A <AmiBlitz3.ab2@15415>   MOVE.w #$0180,D1
0002B72E <AmiBlitz3.ab2@15416> BRA.w JL_0_A304
0002B732 <AmiBlitz3.ab2@15420>   MOVE.w #$0140,D1
0002B736 <AmiBlitz3.ab2@15421> BRA.w JL_0_A304
0002B738 <AmiBlitz3.ab2@15425>   MOVE.w D1,-(A7)
0002B73A <AmiBlitz3.ab2@15426>   MOVE.w D2,-(A7)
0002B73C <AmiBlitz3.ab2@15427>   MOVE.w D2,D3
0002B73E <AmiBlitz3.ab2@15428>   MOVEQ.l #$03,D2
0002B742 <AmiBlitz3.ab2@15429>    BSR.w JL_0_9770
0002B744 <AmiBlitz3.ab2@15430>   MOVE.w (A7)+,D3
0002B746 <AmiBlitz3.ab2@15431>   MOVEQ.l #$01,D2
0002B74C <AmiBlitz3.ab2@15432>   ADDQ.w #1,regnum
0002B750 <AmiBlitz3.ab2@15433>    BSR.w writeconvertcode
0002B756 <AmiBlitz3.ab2@15434>   SUBQ.w #1,regnum
0002B75C <AmiBlitz3.ab2@15435>   MOVE.w regnum,D1
0002B75E <AmiBlitz3.ab2@15436>   MOVE.w D1,D2
0002B760 <AmiBlitz3.ab2@15437>   ADDQ.w #1,D2
0002B762 <AmiBlitz3.ab2@15438>   LSL.w #8,D2
0002B764 <AmiBlitz3.ab2@15439>   LSL.w #1,D2
0002B766 <AmiBlitz3.ab2@15440>   OR.w (A7)+,D1
0002B768 <AmiBlitz3.ab2@15441>   OR.w D2,D1
0002B76C <AmiBlitz3.ab2@15442> BRA.w writeword
0002B772 <AmiBlitz3.ab2@15446>   MOVE.w regnum,D1
0002B776 <AmiBlitz3.ab2@15447>    BEQ.w JL_0_A36C
0002B77A <AmiBlitz3.ab2@15448>   ORI.w #$2000,D1
0002B77E <AmiBlitz3.ab2@15449>    BSR.w writeword
0002B782 <AmiBlitz3.ab2@15450>   ADDI.w #$201,D1
0002B786 <AmiBlitz3.ab2@15451>    BSR.w writeword
0002B788 <AmiBlitz3.ab2@15454> RTS
0002B78E <AmiBlitz3.ab2@15458>   MOVE.w regnum,D1
0002B792 <AmiBlitz3.ab2@15459>    BEQ.w JL_0_A384
0002B794 <AmiBlitz3.ab2@15460>   LSL.w #8,D1
0002B796 <AmiBlitz3.ab2@15461>   LSL.w #1,D1
0002B79A <AmiBlitz3.ab2@15462>   ORI.w #$2000,D1
0002B79E <AmiBlitz3.ab2@15463>    BSR.w writeword
0002B7A0 <AmiBlitz3.ab2@15466> RTS
0002B7A6 <AmiBlitz3.ab2@15470>    CLR.b isconstantvalue
0002B7AC <AmiBlitz3.ab2@15471>    CLR.l lastconstantvalue
0002B7B4 <AmiBlitz3.ab2@15472>    CMPI.w #$7,regnum
0002B7B8 <AmiBlitz3.ab2@15473>    BCS.w JL_0_A6B4
0002B7BE <AmiBlitz3.ab2@15474>   MOVE.l #$f2277700,d1                                     ;fmove.d fp6,-(a7)
0002B7C2 <AmiBlitz3.ab2@15475>   BSR writelong
0002B7C6 <AmiBlitz3.ab2@15476>   MOVE.w #$2F06,D1                                         ;d6 to stack
0002B7CA <AmiBlitz3.ab2@15478>   CMP.w #$3,D2
0002B7CE <AmiBlitz3.ab2@15479>    BCS.w JL_0_A3A2
0002B7D2 <AmiBlitz3.ab2@15480>   MOVE.w #$2F06,D1
0002B7D6 <AmiBlitz3.ab2@15483>   BSR.w writeword
0002B7D8 <AmiBlitz3.ab2@15484>   MOVE.w D1,-(A7)
0002B7DE <AmiBlitz3.ab2@15485>   SUBQ.w #1,regnum
0002B7E2 <AmiBlitz3.ab2@15486>    BSR.w JL_0_A6B4
0002B7E8 <AmiBlitz3.ab2@15487>   ADDQ.w #1,regnum
0002B7EE <AmiBlitz3.ab2@15488>   MOVE.l #$f2001b80,d1
0002B7F2 <AmiBlitz3.ab2@15489>   BSR writelong
0002B7F6 <AmiBlitz3.ab2@15490>   MOVE.w #$3E06,D1
0002B7FA <AmiBlitz3.ab2@15491>   CMP.w #$3,D2
0002B7FE <AmiBlitz3.ab2@15492>    BCS.w JL_0_A3C8
0002B802 <AmiBlitz3.ab2@15493>   MOVE.w #$2E06,D1
0002B806 <AmiBlitz3.ab2@15496>   BSR.w writeword
0002B808 <AmiBlitz3.ab2@15497>   MOVE.w (A7)+,D1
0002B80C <AmiBlitz3.ab2@15498>   ANDI.w #$F000,D1
0002B810 <AmiBlitz3.ab2@15499>   ORI.w #$C1F,D1
0002B816 <AmiBlitz3.ab2@15500>   JSR writeword
0002B81C <AmiBlitz3.ab2@15501>   MOVE.l #$f21f5700,d1                                     ;fmove.d (a7)+,fp6
0002B820 <AmiBlitz3.ab2@15502> BRA writelong
0002B824 <AmiBlitz3.ab2@15506>   BSR.w JL_0_A6B4
0002B828 <AmiBlitz3.ab2@15507>   MOVE.w #$4440,D1
0002B82C <AmiBlitz3.ab2@15508>   CMP.w #$3,D2
0002B830 <AmiBlitz3.ab2@15509>    BCS.w JL_0_A406
0002B834 <AmiBlitz3.ab2@15510>   MOVE.w #$4480,D1
0002B838 <AmiBlitz3.ab2@15511>   CMP.w #$5,D2
0002B83C <AmiBlitz3.ab2@15512>    BCS.w JL_0_A406
0002B840 <AmiBlitz3.ab2@15513>   CMP.w #$6,D2
0002B844 <AmiBlitz3.ab2@15514>    BCC.w illoperr
0002B848 <AmiBlitz3.ab2@15515>   MOVE.w #$FFC4,D1
0002B84C <AmiBlitz3.ab2@15516> BRA.w JL_0_9604
0002B852 <AmiBlitz3.ab2@15519>   OR.w regnum,D1                                           ;negate
0002B858 <AmiBlitz3.ab2@15520>   CLR.l imm_addr
0002B85C <AmiBlitz3.ab2@15521> BRA.w writeword
0002B860 <AmiBlitz3.ab2@15525>    BSR.w eval4
0002B864 <AmiBlitz3.ab2@15526>   CMP.w #")",D0
0002B868 <AmiBlitz3.ab2@15527>    BEQ.w JL_0_A424
0002B86C <AmiBlitz3.ab2@15528>   CMP.w #"}",D0
0002B870 <AmiBlitz3.ab2@15529>    BNE.w brackets_                                         ;syntax error brackets
0002B874 <AmiBlitz3.ab2@15532> BRA.w get1bytemain
0002B878 <AmiBlitz3.ab2@15536>    BSR.w eval4
0002B87C <AmiBlitz3.ab2@15537>   CMP.w #$5,D2
0002B880 <AmiBlitz3.ab2@15538>    BCC.w illoperr
0002B886 <AmiBlitz3.ab2@15539>   MOVE.w regnum,D1
0002B88A <AmiBlitz3.ab2@15540>   ORI.w #$4640,D1
0002B88E <AmiBlitz3.ab2@15541>   CMP.w #$3,D2
0002B892 <AmiBlitz3.ab2@15542>    BCS.w writeword
0002B896 <AmiBlitz3.ab2@15543>   EORI.w #$C0,D1
0002B89A <AmiBlitz3.ab2@15544> BRA.w writeword
0002B89C <AmiBlitz3.ab2@15548>   MOVEQ.l #$05,D2                                          ;fpu pi
0002B8A2 <AmiBlitz3.ab2@15549>    TST.b fpu
0002B8A6 <AmiBlitz3.ab2@15550>   BEQ 'old
0002B8AC <AmiBlitz3.ab2@15551> JMP fpupi
0002B8B2 <AmiBlitz3.ab2@15554>   MOVE.w regnum,D1
0002B8B4 <AmiBlitz3.ab2@15555>   LSL.w #8,D1
0002B8B6 <AmiBlitz3.ab2@15556>   LSL.w #1,D1
0002B8BA <AmiBlitz3.ab2@15557>   ORI.w #$203C,D1
0002B8BE <AmiBlitz3.ab2@15558>    BSR.w writeword
0002B8C4 <AmiBlitz3.ab2@15559>   MOVE.l #$C90FDA42,D1
0002B8C8 <AmiBlitz3.ab2@15560>    BSR.w writelong
0002B8CC <AmiBlitz3.ab2@15561> BRA.w get1bytemain
0002B9C8 <AmiBlitz3.ab2@15569> forthstack:  Ds.l 63                                       ;ds.b  18*32 org source
0002BAC4 <AmiBlitz3.ab2@15570>              Ds.l 63
0002BB0C <AmiBlitz3.ab2@15571>              Ds.l 18
0002BB10 <AmiBlitz3.ab2@15572> forthsp:     Dc.l forthstack
0002BB3C <AmiBlitz3.ab2@15577>    !fget
0002BB40 <AmiBlitz3.ab2@15578>    CMP.b #$7e,d0
0002BB44 <AmiBlitz3.ab2@15579>    BNE 'noc
0002BB46 <AmiBlitz3.ab2@15580>    SUBQ.l #1,a5
0002BB4A <AmiBlitz3.ab2@15581>    BSR get1bytemain
0002BB4E <AmiBlitz3.ab2@15584>    CMP.b #"#",d0
0002BB52 <AmiBlitz3.ab2@15585>    BNE 'ld1
0002BB56 <AmiBlitz3.ab2@15586>    CMP.b #$22,(a5)
0002BB5A <AmiBlitz3.ab2@15587>    BNE 'ld1
0002BB60 <AmiBlitz3.ab2@15588>    JSR addimmi
0002BB64 <AmiBlitz3.ab2@15591>    CMP.b #$22,d0
0002BB68 <AmiBlitz3.ab2@15592>    BNE 'l11
0002BB6E <AmiBlitz3.ab2@15602>    NOT.w instringon
0002BB70 <AmiBlitz3.ab2@15605>    TST.b d0
0002BB74 <AmiBlitz3.ab2@15606>    BPL 'l10
0002BB76 <AmiBlitz3.ab2@15607>    LSL.w #8,d0
0002BB78 <AmiBlitz3.ab2@15608>    MOVE.b (a5)+,d0                      ; get blitz instruction with returnvalue
0002BB7E <AmiBlitz3.ab2@15609>    MOVE.l d0,lasttoken
0002BB84 <AmiBlitz3.ab2@15610>    MOVE.w d0,lastchar
0002BB8A <AmiBlitz3.ab2@15611>    CLR.l rightsidetype                  ; blitzlibs do currently no type check
0002BB8E <AmiBlitz3.ab2@15613>   CMP.w #"(",D0
0002BB92 <AmiBlitz3.ab2@15614>    BEQ.w checkcast2
0002BB96 <AmiBlitz3.ab2@15615> nocast CMP.w #"{",D0
0002BB9A <AmiBlitz3.ab2@15616>    BEQ.w JL_0_A410
0002BB9E <AmiBlitz3.ab2@15617>   CMP.w #$2D,D0
0002BBA2 <AmiBlitz3.ab2@15618>    BEQ.w JL_0_A3DA
0002BBA6 <AmiBlitz3.ab2@15619>   CMP.w #-$7F77,D0
0002BBAA <AmiBlitz3.ab2@15620>    BEQ.w JL_0_A428
0002BBAE <AmiBlitz3.ab2@15621>   MOVEA.l forthsp(PC),A1
0002BBB4 <AmiBlitz3.ab2@15622>   CMPA.l #forthsp,A1
0002BBB8 <AmiBlitz3.ab2@15623>    BCC.w conmemerr
0002BBBE <AmiBlitz3.ab2@15624>   MOVE.l destpointer,(A1)+
0002BBC4 <AmiBlitz3.ab2@15625>   MOVE.l hunkoffsetbase,(A1)+
0002BBCA <AmiBlitz3.ab2@15626>   MOVE.l lasta6,(A1)+
0002BBD0 <AmiBlitz3.ab2@15627>   MOVE.w lasta6,(A1)+
0002BBD2 <AmiBlitz3.ab2@15628>   CLR.w (A1)+
0002BBD4 <AmiBlitz3.ab2@15629>   CLR.w (A1)+
0002BBDA <AmiBlitz3.ab2@15630>   MOVE.l A1,forthsp
0002BBEC <AmiBlitz3.ab2@15632>    !compare2
0002BBF0 <AmiBlitz3.ab2@15633>    BEQ.w JL_0_B224
0002BBF4 <AmiBlitz3.ab2@15634>   CMP.w #".",D0
0002BBF8 <AmiBlitz3.ab2@15635>    BEQ.w JL_0_B21E
0002BBFC <AmiBlitz3.ab2@15636>   CMP.w #"#",D0
0002BC00 <AmiBlitz3.ab2@15637>    BEQ.w get_constant
0002BC04 <AmiBlitz3.ab2@15638>   CMP.w #"$",D0
0002BC08 <AmiBlitz3.ab2@15639>    BEQ.w get_hexconstant
0002BC0C <AmiBlitz3.ab2@15640>   CMP.w #"%",D0
0002BC10 <AmiBlitz3.ab2@15641>    BEQ.w JL_0_A8C0
0002BC14 <AmiBlitz3.ab2@15642>   CMP.w #-$7FD1,D0
0002BC18 <AmiBlitz3.ab2@15643>    BEQ.w _SizeOf
0002BC1C <AmiBlitz3.ab2@15644>   CMP.w #-$7F46,D0
0002BC20 <AmiBlitz3.ab2@15645>    BEQ.w JL_0_A44E
0002BC24 <AmiBlitz3.ab2@15646>   CMP.w #-$7F3B,D0
0002BC28 <AmiBlitz3.ab2@15647>    BEQ.w JL_0_A83C
0002BC2C <AmiBlitz3.ab2@15648>   CMP.w #-$7F3A,D0
0002BC30 <AmiBlitz3.ab2@15649>    BEQ.w JL_0_A846
0002BC36 <AmiBlitz3.ab2@15650>   MOVE.w constmode,D1
0002BC3A <AmiBlitz3.ab2@15651>    BEQ.w JL_0_A776
0002BC5C <AmiBlitz3.ab2@15652>    !compare1                                               ;bsr.w tstalpha
0002BC60 <AmiBlitz3.ab2@15653>    BEQ.w JL_0_AF22
0002BC64 <AmiBlitz3.ab2@15654>   CMP.w #$5F,D0
0002BC68 <AmiBlitz3.ab2@15655>    BEQ.w JL_0_AF22
0002BC6C <AmiBlitz3.ab2@15656>   CMP.w #$22,D0
0002BC70 <AmiBlitz3.ab2@15657>    BEQ.w JL_0_AF00
0002BC74 <AmiBlitz3.ab2@15658> BRA.w syntaxerr
0002BC7A <AmiBlitz3.ab2@15660> checkcast2 JMP checkcast
0002BC80 <AmiBlitz3.ab2@15663>   MOVE.w cfetchmode,D1
0002BC84 <AmiBlitz3.ab2@15664>   BEQ.w JL_0_A784
0002BC88 <AmiBlitz3.ab2@15665> BRA.w badconerr
0002BC8E <AmiBlitz3.ab2@15668> JMP syntaxerropt4
0002BC90 <AmiBlitz3.ab2@15672>   NOT.w -(A1)
0002BCB2 <AmiBlitz3.ab2@15673>   !compare1                                                ;bsr.w tstalpha
0002BCB6 <AmiBlitz3.ab2@15674>    BEQ.w JL_0_AF4C
0002BCBA <AmiBlitz3.ab2@15675>   CMP.w #$2A,D0
0002BCBE <AmiBlitz3.ab2@15676>    BEQ.w JL_0_AF4C
0002BCC2 <AmiBlitz3.ab2@15677>   CMP.w #$5C,D0
0002BCC6 <AmiBlitz3.ab2@15678>    BEQ.w JL_0_AF4C
0002BCCA <AmiBlitz3.ab2@15679>   CMP.w #$22,D0
0002BCCE <AmiBlitz3.ab2@15680>    BEQ.w JL_0_ADC0
0002BCD2 <AmiBlitz3.ab2@15681>   BTST #$F,D0
0002BCD6 <AmiBlitz3.ab2@15682>    BNE.w JL_0_AAF2
0002BCDA <AmiBlitz3.ab2@15683>   CMP.w #"&",D0
0002BCDE <AmiBlitz3.ab2@15684>    BEQ.w getvaraddr                                          ;jump to & address of var code
0002BCE2 <AmiBlitz3.ab2@15685>   CMP.w #"?",D0
0002BCE6 <AmiBlitz3.ab2@15686>    BEQ.w JL_0_AED4
0002BCEA <AmiBlitz3.ab2@15689>   CMP.b #"@",d0
0002BCEE <AmiBlitz3.ab2@15690>    BNE syntaxerr
0002BCF4 <AmiBlitz3.ab2@15691>   TST.b newsyntax
0002BCF8 <AmiBlitz3.ab2@15692>    BEQ JUMP_syntaxerropt4
0002BCFE <AmiBlitz3.ab2@15693>   MOVE.w regnum,D1
0002BD00 <AmiBlitz3.ab2@15694>   LSL.w #8,D1
0002BD02 <AmiBlitz3.ab2@15695>   LSL.w #1,D1
0002BD06 <AmiBlitz3.ab2@15696>   ORI.w #$203C,D1
0002BD0A <AmiBlitz3.ab2@15697>   BSR.w writeword
0002BD0E <AmiBlitz3.ab2@15698>   CMP.b #$22,(a5)
0002BD12 <AmiBlitz3.ab2@15699>    BNE syntaxerr
0002BD14 <AmiBlitz3.ab2@15700>   ADDQ #1,a5
0002BD16 <AmiBlitz3.ab2@15701>   MOVEQ #0,d0
0002BD1A <AmiBlitz3.ab2@15702>   CMP.b #1,d2
0002BD1E <AmiBlitz3.ab2@15703>    BEQ 'l3b
0002BD22 <AmiBlitz3.ab2@15704>   CMP.b #2,d2
0002BD26 <AmiBlitz3.ab2@15705>    BEQ 'l2b
0002BD2A <AmiBlitz3.ab2@15706>   CMP.b #4,d2
0002BD2E <AmiBlitz3.ab2@15707>    BEQ error_convert_types
0002BD30 <AmiBlitz3.ab2@15708>   MOVE.b (a5)+,d0
0002BD34 <AmiBlitz3.ab2@15709>   BEQ syntaxerr
0002BD38 <AmiBlitz3.ab2@15710>   CMP.b #$22,d0
0002BD3C <AmiBlitz3.ab2@15711>   BNE 'l1
0002BD40 <AmiBlitz3.ab2@15712>     MOVE.b #0,d0
0002BD44 <AmiBlitz3.ab2@15713> BRA 'do
0002BD46 <AmiBlitz3.ab2@15716>   ASL.l #8,d0
0002BD48 <AmiBlitz3.ab2@15717>   MOVE.b (a5)+,d0
0002BD4C <AmiBlitz3.ab2@15718>   BEQ syntaxerr
0002BD50 <AmiBlitz3.ab2@15719>   CMP.b #$22,d0
0002BD54 <AmiBlitz3.ab2@15720>   BNE 'l2
0002BD58 <AmiBlitz3.ab2@15721>     MOVE.b #0,d0
0002BD5A <AmiBlitz3.ab2@15722>     ASR.l #8,d0
0002BD5E <AmiBlitz3.ab2@15723> BRA 'do
0002BD60 <AmiBlitz3.ab2@15726>   ASL.l #8,d0
0002BD62 <AmiBlitz3.ab2@15729>   MOVE.b (a5)+,d0
0002BD66 <AmiBlitz3.ab2@15730>    BEQ syntaxerr
0002BD6A <AmiBlitz3.ab2@15731>    CMP.b #$22,d0
0002BD6E <AmiBlitz3.ab2@15732>    BNE 'l3
0002BD72 <AmiBlitz3.ab2@15733>    MOVE.b #0,d0
0002BD74 <AmiBlitz3.ab2@15734>    ASR.l #8,d0
0002BD78 <AmiBlitz3.ab2@15735> BRA 'do
0002BD7A <AmiBlitz3.ab2@15738>   ASL.l #8,d0
0002BD7C <AmiBlitz3.ab2@15741>   MOVE.b (a5)+,d0
0002BD80 <AmiBlitz3.ab2@15742>    BEQ syntaxerr
0002BD84 <AmiBlitz3.ab2@15743>    CMP.b #$22,d0
0002BD88 <AmiBlitz3.ab2@15744>    BNE 'l4
0002BD8C <AmiBlitz3.ab2@15745>    MOVE.b #0,d0
0002BD8E <AmiBlitz3.ab2@15746>    ASR.l #8,d0
0002BD92 <AmiBlitz3.ab2@15747> BRA 'do
0002BD96 <AmiBlitz3.ab2@15750>    CMP.b #$22,(a5)+
0002BD9A <AmiBlitz3.ab2@15751>    BNE JUMP_error4char
0002BD9C <AmiBlitz3.ab2@15754>   MOVE.l d0,d1
0002BDA0 <AmiBlitz3.ab2@15755>     BSR writelong
0002BDA4 <AmiBlitz3.ab2@15756>     BSR get1bytemain
0002BDA6 <AmiBlitz3.ab2@15757> RTS
0002BDAA <AmiBlitz3.ab2@15761>   BSR.w get1bytemain
0002BDAE <AmiBlitz3.ab2@15762>   CMP.w #$2E,D0
0002BDB2 <AmiBlitz3.ab2@15763>    BEQ.b JL_0_A7F4
0002BDBC <AmiBlitz3.ab2@15765>   MOVE.w oldqflag,instringon
0002BDC2 <AmiBlitz3.ab2@15766>   MOVEA.l lastsourcepos,A5
0002BDC4 <AmiBlitz3.ab2@15767>   MOVE.w D2,-(A7)
0002BDC8 <AmiBlitz3.ab2@15768>    BSR.w getparameter2
0002BDCC <AmiBlitz3.ab2@15769>    BEQ.w syntaxerr
0002BDD2 <AmiBlitz3.ab2@15770>   LEA varbase,A2
0002BDD6 <AmiBlitz3.ab2@15771>    BSR.w findvariable
0002BDDA <AmiBlitz3.ab2@15772>    BNE.w notypeerr
0002BDDE <AmiBlitz3.ab2@15773>   MOVE.w $4(A2),D3
0002BDE0 <AmiBlitz3.ab2@15774>   EXT.l D3
0002BDE2 <AmiBlitz3.ab2@15775>   MOVE.w (A7)+,D2
0002BDE6 <AmiBlitz3.ab2@15776> BRA.w JL_0_B46E
0002BDE8 <AmiBlitz3.ab2@15780>   MOVE.w D2,-(A7)
0002BDEC <AmiBlitz3.ab2@15781>    BSR.w getparameter2
0002BDF0 <AmiBlitz3.ab2@15782>    BEQ.w syntaxerr
0002BDF6 <AmiBlitz3.ab2@15783>   LEA newtypebase,A2
0002BDFA <AmiBlitz3.ab2@15784>    BSR.w findtype
0002BDFE <AmiBlitz3.ab2@15785>    BNE.w notypeerr
0002BE00 <AmiBlitz3.ab2@15786>   MOVEQ.l #$00,D3
0002BE04 <AmiBlitz3.ab2@15787>   CMP.w #$5C,D0
0002BE08 <AmiBlitz3.ab2@15788>    BNE.w JL_0_A832
0002BE0C <AmiBlitz3.ab2@15789>    BSR.w getparameter2
0002BE10 <AmiBlitz3.ab2@15790>    BEQ.w syntaxerr
0002BE14 <AmiBlitz3.ab2@15791>   LEA $4(A2),A2
0002BE18 <AmiBlitz3.ab2@15792>    BSR.w findvariable2
0002BE1C <AmiBlitz3.ab2@15793>    BNE.w noofferr
0002BE20 <AmiBlitz3.ab2@15794>   MOVE.w $4(A2),D3
0002BE24 <AmiBlitz3.ab2@15795> BRA.w JL_0_A836
0002BE28 <AmiBlitz3.ab2@15799>   MOVE.w $8(A2),D3
0002BE2A <AmiBlitz3.ab2@15802>   MOVE.w (A7)+,D2
0002BE2E <AmiBlitz3.ab2@15803> BRA.w JL_0_B46E
0002BE30 <AmiBlitz3.ab2@15807>   MOVEQ.l #-$01,D3
0002BE34 <AmiBlitz3.ab2@15808>    BSR.w get1bytemain
0002BE38 <AmiBlitz3.ab2@15809> BRA.w JL_0_B46E
0002BE3A <AmiBlitz3.ab2@15813>   MOVEQ.l #$00,D3
0002BE3E <AmiBlitz3.ab2@15814>    BSR.w get1bytemain
0002BE42 <AmiBlitz3.ab2@15815> BRA.w JL_0_B46E
0002BE46 <AmiBlitz3.ab2@15819>   CMP.w #$30,D0
0002BE4A <AmiBlitz3.ab2@15820>    BCS.w JL_0_A876
0002BE4E <AmiBlitz3.ab2@15821>   CMP.w #$39,D0
0002BE52 <AmiBlitz3.ab2@15822>    BLS.w JL_0_A874
0002BE56 <AmiBlitz3.ab2@15823>   ANDI.w #$FFDF,D0
0002BE5A <AmiBlitz3.ab2@15824>   CMP.w #$46,D0
0002BE5E <AmiBlitz3.ab2@15825>    BHI.w JL_0_A876
0002BE62 <AmiBlitz3.ab2@15826>   CMP.w #$41,D0
0002BE66 <AmiBlitz3.ab2@15827>    BCS.w JL_0_A876
0002BE68 <AmiBlitz3.ab2@15830>    CMP.w D0,D0
0002BE6A <AmiBlitz3.ab2@15833> RTS
0002BE6E <AmiBlitz3.ab2@15837>   CMP.w #$31,D0
0002BE72 <AmiBlitz3.ab2@15838>    BEQ.w JL_0_A884
0002BE76 <AmiBlitz3.ab2@15839>   CMP.w #$30,D0
0002BE78 <AmiBlitz3.ab2@15842> RTS
0002BE7A <AmiBlitz3.ab2@15846>    MOVEQ #0,d0
0002BE7C <AmiBlitz3.ab2@15847>    MOVE.b (a5)+,d0
0002BE7E <AmiBlitz3.ab2@15848>    MOVE.b (a5)+,d0
0002BE82 <AmiBlitz3.ab2@15849>    BSR ishex
0002BE86 <AmiBlitz3.ab2@15850>    BNE syntaxerr
0002BE8A <AmiBlitz3.ab2@15851>    SUBI.w #$30,D0
0002BE8E <AmiBlitz3.ab2@15852>    CMP.w #$9,D0
0002BE92 <AmiBlitz3.ab2@15853>    BLS.w 'l1
0002BE94 <AmiBlitz3.ab2@15854>    SUBQ.w #7,D0
0002BE96 <AmiBlitz3.ab2@15857>    MOVE.l d0,d1
0002BE98 <AmiBlitz3.ab2@15858>    MOVE.b (a5)+,d0
0002BE9C <AmiBlitz3.ab2@15859>      BSR ishex
0002BEA0 <AmiBlitz3.ab2@15860>     BNE syntaxerr
0002BEA2 <AmiBlitz3.ab2@15861>     LSL.l #4,d1
0002BEA6 <AmiBlitz3.ab2@15862>     SUBI.w #$30,D0
0002BEAA <AmiBlitz3.ab2@15863>    CMP.w #$9,D0
0002BEAE <AmiBlitz3.ab2@15864>    BLS.w 'l2
0002BEB0 <AmiBlitz3.ab2@15865>    SUBQ.w #7,D0
0002BEB2 <AmiBlitz3.ab2@15868>   ADD.l d1,d0
0002BEB4 <AmiBlitz3.ab2@15869> RTS
0002BEB8 <AmiBlitz3.ab2@15873>    BSR.w get1bytemain
0002BEBC <AmiBlitz3.ab2@15874>    BSR.w ishex
0002BEC0 <AmiBlitz3.ab2@15875>    BNE.w syntaxerr
0002BEC2 <AmiBlitz3.ab2@15876>   MOVEQ.l #$00,D3
0002BEC6 <AmiBlitz3.ab2@15877>   CMP.w #5,d2
0002BECA <AmiBlitz3.ab2@15878>   BNE JL_0_A894
0002BED0 <AmiBlitz3.ab2@15879>   CMP.l #newtype_double,a2
0002BED4 <AmiBlitz3.ab2@15880>   BEQ 'doit
0002BEDA <AmiBlitz3.ab2@15881>   CMP.l #newtype_float,a2
0002BEDE <AmiBlitz3.ab2@15882>   BNE JL_0_A894
0002BEE6 <AmiBlitz3.ab2@15885>    fmove.s #0,fp0
0002BEEC <AmiBlitz3.ab2@15887>   TST.b fpu
0002BEF0 <AmiBlitz3.ab2@15888>   BEQ JL_0_A894
0002BEF6 <AmiBlitz3.ab2@15889>   fmove.w #16,fp1
0002BEFA <AmiBlitz3.ab2@15890>   fmul.x fp1,fp0
0002BEFE <AmiBlitz3.ab2@15891>   SUBI.w #$30,D0
0002BF02 <AmiBlitz3.ab2@15892>   CMP.w #$9,D0
0002BF06 <AmiBlitz3.ab2@15893>    BLS.w JL_0_A8AEa
0002BF08 <AmiBlitz3.ab2@15894>   SUBQ.w #7,D0
0002BF0C <AmiBlitz3.ab2@15897>    fmove.w d0,fp1
0002BF10 <AmiBlitz3.ab2@15898>    fadd.x fp1,fp0
0002BF14 <AmiBlitz3.ab2@15899>    BSR.w get1bytemain
0002BF18 <AmiBlitz3.ab2@15900>    BSR.w ishex
0002BF1C <AmiBlitz3.ab2@15901>    BEQ.w JL_0_A894a
0002BF20 <AmiBlitz3.ab2@15902> BRA.w nofpregload
0002BF26 <AmiBlitz3.ab2@15906>   CMP.l #$10000000,D3
0002BF2A <AmiBlitz3.ab2@15907>    BCC.w overerr
0002BF2C <AmiBlitz3.ab2@15908>   LSL.l #4,D3
0002BF30 <AmiBlitz3.ab2@15909>   SUBI.w #$30,D0
0002BF34 <AmiBlitz3.ab2@15910>   CMP.w #$9,D0
0002BF38 <AmiBlitz3.ab2@15911>    BLS.w JL_0_A8AE
0002BF3A <AmiBlitz3.ab2@15912>   SUBQ.w #7,D0
0002BF3C <AmiBlitz3.ab2@15915>   OR.w D0,D3
0002BF40 <AmiBlitz3.ab2@15916>    BSR.w get1bytemain
0002BF44 <AmiBlitz3.ab2@15917>    BSR.w ishex
0002BF48 <AmiBlitz3.ab2@15918>    BEQ.w JL_0_A894
0002BF4C <AmiBlitz3.ab2@15919> BRA.w JL_0_B46E
0002BF50 <AmiBlitz3.ab2@15923>    BSR.w get1bytemain
0002BF54 <AmiBlitz3.ab2@15924>    BSR.w JL_0_A878
0002BF58 <AmiBlitz3.ab2@15925>    BNE.w syntaxerr
0002BF5A <AmiBlitz3.ab2@15926>    MOVEQ.l #$00,D3
0002BF5C <AmiBlitz3.ab2@15929>    LSL.l #1,D3
0002BF60 <AmiBlitz3.ab2@15930>    BCS.w overerr
0002BF64 <AmiBlitz3.ab2@15931>   SUBI.w #$30,D0
0002BF66 <AmiBlitz3.ab2@15932>   OR.w D0,D3
0002BF6A <AmiBlitz3.ab2@15933>    BSR.w get1bytemain
0002BF6E <AmiBlitz3.ab2@15934>    BSR.w JL_0_A878
0002BF72 <AmiBlitz3.ab2@15935>    BEQ.w JL_0_A8CE
0002BF76 <AmiBlitz3.ab2@15936> BRA.w JL_0_B46E
0002BF78 <AmiBlitz3.ab2@15940>    MOVE.w d2,-(A7)
0002BF80 <AmiBlitz3.ab2@15941>    MOVE.b #0,automode
0002BF84 <AmiBlitz3.ab2@15942>    CMP.b #"@",(a5)
0002BF88 <AmiBlitz3.ab2@15943>    BNE 'l1
0002BF8A <AmiBlitz3.ab2@15944>    ADDQ.l #1,a5
0002BF92 <AmiBlitz3.ab2@15945>    MOVE.b #1,automode
0002BF96 <AmiBlitz3.ab2@15946>    BSR getparameter2
0002BF9A <AmiBlitz3.ab2@15947>    BSR findlabel2
0002BF9E <AmiBlitz3.ab2@15948>    BNE 'addit
0002BFA2 <AmiBlitz3.ab2@15949> BRA errormsg_autocount
0002BFA6 <AmiBlitz3.ab2@15952>   BSR.w addlabelhash
0002BFAE <AmiBlitz3.ab2@15953>   MOVE.l #$1,$4(A2)
0002BFB2 <AmiBlitz3.ab2@15954>   MOVEM.l a2/a5,-(a7)
0002BFB8 <AmiBlitz3.ab2@15955>   MOVE.w lastchar,-(a7)
0002BFBE <AmiBlitz3.ab2@15956>   LEA autostorename,a5
0002BFC2 <AmiBlitz3.ab2@15957>   BSR getparameter2
0002BFC6 <AmiBlitz3.ab2@15958>   BSR findlabel2
0002BFCA <AmiBlitz3.ab2@15959>   BEQ 'found
0002BFCE <AmiBlitz3.ab2@15960>   BSR.w addlabelhash
0002BFD6 <AmiBlitz3.ab2@15961>   MOVE.l #$1,$4(A2)
0002BFDE <AmiBlitz3.ab2@15962>   MOVE.l #0,8(a2)
0002BFE0 <AmiBlitz3.ab2@15965>    MOVE.w (a7)+,d0
0002BFE6 <AmiBlitz3.ab2@15966>    MOVE.w d0,lastchar
0002BFEA <AmiBlitz3.ab2@15967>   MOVE.l 8(a2),d3
0002BFF2 <AmiBlitz3.ab2@15968>   ADD.l #1,8(a2)
0002BFF6 <AmiBlitz3.ab2@15969>   MOVEM.l (a7)+,a2/a5
0002BFFA <AmiBlitz3.ab2@15970>   MOVE.l d3,8(a2)
0002BFFE <AmiBlitz3.ab2@15971>   MOVE.l $8(A2),D3
0002C002 <AmiBlitz3.ab2@15972> BRA.l 'l3
0002C006 <AmiBlitz3.ab2@15975>   BSR.w getparameter2
0002C00C <AmiBlitz3.ab2@15976>     TST.b incnif
0002C010 <AmiBlitz3.ab2@15977>     BEQ 'lc1
0002C014 <AmiBlitz3.ab2@15978>     BSR.w findlabel2
0002C018 <AmiBlitz3.ab2@15979>     BNE 'l5
0002C01A <AmiBlitz3.ab2@15980>     MOVEQ #1,d3
0002C01C <AmiBlitz3.ab2@15981>     MOVE.w (A7)+,D2
0002C020 <AmiBlitz3.ab2@15982> BRA JL_0_B46E
0002C022 <AmiBlitz3.ab2@15985>   MOVEQ #0,d3
0002C024 <AmiBlitz3.ab2@15986>     MOVE.w (A7)+,D2
0002C028 <AmiBlitz3.ab2@15987> BRA JL_0_B46E
0002C02C <AmiBlitz3.ab2@15990>    BSR.w findlabel2
0002C030 <AmiBlitz3.ab2@15991>    BNE.w cnferr
0002C038 <AmiBlitz3.ab2@15994>    CMPI.l #$1,$4(A2)
0002C03C <AmiBlitz3.ab2@15995>    BNE.w cnferr
0002C040 <AmiBlitz3.ab2@15997>    MOVE.l $8(A2),D3
0002C042 <AmiBlitz3.ab2@15998>    MOVE.w (A7)+,D2
0002C046 <AmiBlitz3.ab2@15999> BRA.w JL_0_B46E
0002C04C <AmiBlitz3.ab2@16003>   CLR.w vartype
0002C054 <AmiBlitz3.ab2@16004>   MOVE.b #3,peekaddrsize
0002C058 <AmiBlitz3.ab2@16005>   BSR.w JL_0_A916
0002C05E <AmiBlitz3.ab2@16006>   MOVE.l a2,rightsidetype
0002C060 <AmiBlitz3.ab2@16007>   MOVEQ.l #$03,D2
0002C062 <AmiBlitz3.ab2@16008> RTS
0002C066 <AmiBlitz3.ab2@16012>    BSR.w get1bytemain
0002C078 <AmiBlitz3.ab2@16013>    !compare2
0002C07C <AmiBlitz3.ab2@16014>    BEQ andop2
0002C080 <AmiBlitz3.ab2@16015>    BSR.w getparameter
0002C084 <AmiBlitz3.ab2@16016>    BSR.w JL_0_8E3C
0002C088 <AmiBlitz3.ab2@16017>    BSR.w calcvar
0002C08C <AmiBlitz3.ab2@16018>   CMP.b #$7,D2
0002C090 <AmiBlitz3.ab2@16019>    BNE.w JL_0_A960
0002C094 <AmiBlitz3.ab2@16020>   BTST #$F,D2
0002C098 <AmiBlitz3.ab2@16021>    BNE.w JL_0_A94A
0002C09E <AmiBlitz3.ab2@16022>   MOVE.w D3,stamp2+2
0002C0A4 <AmiBlitz3.ab2@16023>   MOVE.l stamp2,D1
0002C0A8 <AmiBlitz3.ab2@16024>    BSR.w pokela5s
0002C0AC <AmiBlitz3.ab2@16025> BRA.w JL_0_A978
0002C0B2 <AmiBlitz3.ab2@16029>   MOVE.w regnum,D1
0002C0B4 <AmiBlitz3.ab2@16030>   LSL.w #8,D1
0002C0B6 <AmiBlitz3.ab2@16031>   LSL.w #1,D1
0002C0BC <AmiBlitz3.ab2@16032>   OR.w stamp,D1
0002C0C0 <AmiBlitz3.ab2@16033>    BSR.w writeword
0002C0C2 <AmiBlitz3.ab2@16034> RTS
0002C0C6 <AmiBlitz3.ab2@16038>   BTST #$F,D2
0002C0CA <AmiBlitz3.ab2@16039>    BNE.w JL_0_A978
0002C0D0 <AmiBlitz3.ab2@16040>   MOVE.w D3,leaamp+2
0002C0D6 <AmiBlitz3.ab2@16041>   MOVE.l leaamp,D1
0002C0DA <AmiBlitz3.ab2@16042>    BSR.w pokela5s
0002C0E0 <AmiBlitz3.ab2@16045>   MOVE.w regnum,D1
0002C0E2 <AmiBlitz3.ab2@16046>   LSL.w #8,D1
0002C0E4 <AmiBlitz3.ab2@16047>   LSL.w #1,D1
0002C0EA <AmiBlitz3.ab2@16048>   OR.w leaamp2,D1
0002C0EE <AmiBlitz3.ab2@16049> BRA.w writeword
0002C0F2 <AmiBlitz3.ab2@16053>   MOVE.w #$D200,D1
0002C0F6 <AmiBlitz3.ab2@16054>    BSR.w Atokejsr
0002C0F8 <AmiBlitz3.ab2@16055>   MOVEQ.l #$03,D2
0002C0FA <AmiBlitz3.ab2@16056> RTS
0002C0FE <AmiBlitz3.ab2@16060> addrcode:  Dc.b $20,$6D,$00,$00                            ;MOVEA.L $0000(A5),A0
0002C100 <AmiBlitz3.ab2@16061>            Dc.b $D0,$C0                                    ;ADDA.W  D0,A0
0002C102 <AmiBlitz3.ab2@16062>            Dc.b $20,$08                                    ;MOVE.L  A0,D0
0002C106 <AmiBlitz3.ab2@16068>    BSR.w get1bytemain
0002C108 <AmiBlitz3.ab2@16069>   MOVE.w D0,D1
0002C10C <AmiBlitz3.ab2@16070>    BPL.w syntaxerr
0002C10E <AmiBlitz3.ab2@16071>   MOVE.w D2,-(A7)
0002C112 <AmiBlitz3.ab2@16072>   BCLR #$F,D1
0002C116 <AmiBlitz3.ab2@16073>    BSR.w searchinstr
0002C11A <AmiBlitz3.ab2@16074>   MOVE.l $12(A2),D0
0002C11E <AmiBlitz3.ab2@16075>   TST.w -$2(A2,D0.L)
0002C122 <AmiBlitz3.ab2@16076>    BEQ.w freeerr
0002C124 <AmiBlitz3.ab2@16077>   MOVE.w (A7)+,D2
0002C126 <AmiBlitz3.ab2@16078> RTS
0002C12A <AmiBlitz3.ab2@16082>   MOVE.l $0(A5),D0
0002C12E <AmiBlitz3.ab2@16083>    BNE.b ucodeskip
0002C130 <AmiBlitz3.ab2@16084>   MOVEQ.l #-$01,D0
0002C134 <AmiBlitz3.ab2@16085> BRA.b usedcodef
0002C138 <AmiBlitz3.ab2@16088>   SUB.l $0(A5),D0
0002C13A <AmiBlitz3.ab2@16091>   LSR.w #8,D0
0002C13E <AmiBlitz3.ab2@16096>    MOVE.l $0(A5),D0
0002C142 <AmiBlitz3.ab2@16097>    BNE.b ucodeskip2
0002C144 <AmiBlitz3.ab2@16098>   MOVEQ.l #-$01,D0
0002C148 <AmiBlitz3.ab2@16099> BRA.b usedcode2f
0002C14C <AmiBlitz3.ab2@16102>   SUB.l $0(A5),D0                                          ;usedcode2
0002C14E <AmiBlitz3.ab2@16103>   LSR.w #8,D0
0002C150 <AmiBlitz3.ab2@16106>   LSR.w #8,D0
0002C152 <AmiBlitz3.ab2@16111>   MOVE.l D0,-(A7)
0002C154 <AmiBlitz3.ab2@16114>   MOVE.l (A7)+,D0
0002C156 <AmiBlitz3.ab2@16117>   MOVE.l D0,D0
0002C15A <AmiBlitz3.ab2@16123>   BSR.w JL_0_A9A0
0002C15E <AmiBlitz3.ab2@16125>   MOVE.w -$2(A2,D0.L),D3
0002C162 <AmiBlitz3.ab2@16126>   CMP.w #$9,D3
0002C166 <AmiBlitz3.ab2@16127>    BCC.w doused__skip
0002C16A <AmiBlitz3.ab2@16131>   LEA usedcode(PC),A0
0002C16E <AmiBlitz3.ab2@16132>   LEA usedcodef(PC),A1
0002C174 <AmiBlitz3.ab2@16134>   ANDI.w #$F1FF,$E+4(A0)                                   ;and #$f1ff,ucodediv-usedcode(a0) org source
0002C178 <AmiBlitz3.ab2@16135>   ANDI.w #$7,D3
0002C17A <AmiBlitz3.ab2@16136>   LSL.w #8,D3
0002C17C <AmiBlitz3.ab2@16137>   LSL.w #1,D3
0002C180 <AmiBlitz3.ab2@16138>   OR.w D3,$E+4(A0)                                         ;or  d3,ucodediv-usedcode(a0) org source
0002C184 <AmiBlitz3.ab2@16139> BRA.w doused__skip2
0002C188 <AmiBlitz3.ab2@16144>   LEA usedcode2(PC),A0
0002C18C <AmiBlitz3.ab2@16145>   LEA usedcode2f(PC),A1
0002C192 <AmiBlitz3.ab2@16147>   ANDI.w #$F1FF,$10+4(A0)                                  ;and #$f1ff,ucodediv2-usedcode2(a0) org source
0002C194 <AmiBlitz3.ab2@16148>   SUBQ.w #8,D3
0002C196 <AmiBlitz3.ab2@16149>   LSL.w #8,D3
0002C198 <AmiBlitz3.ab2@16150>   LSL.w #1,D3
0002C19C <AmiBlitz3.ab2@16151>   OR.w D3,$10+4(A0)                                        ;or  d3,ucodediv2-usedcode2(a0) org source
0002C1A0 <AmiBlitz3.ab2@16154>   MOVE.w -$6(A2,D0.L),D3
0002C1A4 <AmiBlitz3.ab2@16155>   MOVE.w D3,$C+4(A0)                                       ;move d3,ucodeskip-usedcode+2(a0) org source
0002C1A6 <AmiBlitz3.ab2@16156>   ADDQ.w #4,D3
0002C1AA <AmiBlitz3.ab2@16157>   MOVE.w D3,$2(A0)
0002C1B0 <AmiBlitz3.ab2@16158>   MOVE.w regnum,D1
0002C1B4 <AmiBlitz3.ab2@16159>    BEQ.w doused__skip3
0002C1B8 <AmiBlitz3.ab2@16160>   MOVE.w usedprep(PC),D1
0002C1BC <AmiBlitz3.ab2@16161>    BSR.w writeword
0002C1C0 <AmiBlitz3.ab2@16164>   BSR.w pokecode
0002C1C6 <AmiBlitz3.ab2@16165>   MOVE.w regnum,D1
0002C1CA <AmiBlitz3.ab2@16166>    BEQ.w doused__skip4
0002C1CC <AmiBlitz3.ab2@16167>   LSL.w #8,D1
0002C1CE <AmiBlitz3.ab2@16168>   LSL.w #1,D1
0002C1D2 <AmiBlitz3.ab2@16169>   OR.w usedfix(PC),D1
0002C1D6 <AmiBlitz3.ab2@16170>    BSR.w writeword
0002C1DA <AmiBlitz3.ab2@16171>   MOVE.w useddone(PC),D1
0002C1DE <AmiBlitz3.ab2@16172>    BSR.w writeword
0002C1E0 <AmiBlitz3.ab2@16175>    MOVEQ.l #$02,D2
0002C1E4 <AmiBlitz3.ab2@16176> BRA.w get1bytemain
0002C1E8 <AmiBlitz3.ab2@16184>    BSR.w JL_0_A9A0
0002C1EA <AmiBlitz3.ab2@16186>   MOVEQ.l #$00,D3
0002C1EE <AmiBlitz3.ab2@16187>   MOVE.w -$4(A2,D0.L),D3
0002C1F2 <AmiBlitz3.ab2@16188>    BSR.w get1bytemain
0002C1F6 <AmiBlitz3.ab2@16189> BRA.w JL_0_B46E
0002C1FA <AmiBlitz3.ab2@16196>    BSR.w get1bytemain
0002C1FC <AmiBlitz3.ab2@16197>   MOVE.w D0,-(A7)
0002C200 <AmiBlitz3.ab2@16198>    BSR.w get1bytemain
0002C204 <AmiBlitz3.ab2@16199>   CMP.w #$28,D0
0002C208 <AmiBlitz3.ab2@16200>    BNE.w syntaxerr
0002C20A <AmiBlitz3.ab2@16201>   MOVE.w (A7)+,D0
0002C20E <AmiBlitz3.ab2@16202>    BSR.w JL_0_C340
0002C212 <AmiBlitz3.ab2@16203>    BSR.w reget
0002C216 <AmiBlitz3.ab2@16204>   CMP.w #$29,D0
0002C21A <AmiBlitz3.ab2@16205>    BNE.w syntaxerr
0002C21E <AmiBlitz3.ab2@16209>   LEA addrcode(PC),A0
0002C222 <AmiBlitz3.ab2@16210>   LEA addrcodef(PC),A1
0002C228 <AmiBlitz3.ab2@16211>   MOVE.w -$6(A2),$2(A0)
0002C22C <AmiBlitz3.ab2@16212>   MOVE.w $4(A0),D1
0002C230 <AmiBlitz3.ab2@16213>   ANDI.w #$FFF8,D1
0002C236 <AmiBlitz3.ab2@16214>   OR.w regnum,D1
0002C23A <AmiBlitz3.ab2@16215>   MOVE.w D1,$4(A0)
0002C23E <AmiBlitz3.ab2@16216>   MOVE.w $6(A0),D1
0002C242 <AmiBlitz3.ab2@16217>   ANDI.w #$F1FF,D1
0002C248 <AmiBlitz3.ab2@16218>   MOVE.w regnum,D0
0002C24A <AmiBlitz3.ab2@16219>   LSL.w #8,D0
0002C24C <AmiBlitz3.ab2@16220>   LSL.w #1,D0
0002C24E <AmiBlitz3.ab2@16221>   OR.w D0,D1
0002C252 <AmiBlitz3.ab2@16222>   MOVE.w D1,$6(A0)
0002C256 <AmiBlitz3.ab2@16223>    BSR.w pokecode
0002C258 <AmiBlitz3.ab2@16224>   MOVEQ.l #$03,D2
0002C25C <AmiBlitz3.ab2@16225> BRA.w get1bytemain
0002C260 <AmiBlitz3.ab2@16229>   CMP.w #-$7F4D,D0
0002C264 <AmiBlitz3.ab2@16230>    BHI.w JL_0_AAFE
0002C268 <AmiBlitz3.ab2@16231> BRA.w syntaxerr
0002C26C <AmiBlitz3.ab2@16238> .do_null   CMP.w #$b581,d0
0002C270 <AmiBlitz3.ab2@16239>    BNE 'nonull
0002C276 <AmiBlitz3.ab2@16240>    MOVE.l d0,lastinstruction
0002C27A <AmiBlitz3.ab2@16241>    MOVE.w #$7000,d1                                            ;asm instr moveq #0,dx
0002C280 <AmiBlitz3.ab2@16242>    MOVE.w regnum,d0
0002C282 <AmiBlitz3.ab2@16243>    ASL.l #7,d0
0002C284 <AmiBlitz3.ab2@16244>    ASL.l #2,d0
0002C286 <AmiBlitz3.ab2@16245>    OR.l d0,d1
0002C28A <AmiBlitz3.ab2@16246>    BSR writeword
0002C290 <AmiBlitz3.ab2@16247>    JSR get1bytemain
0002C292 <AmiBlitz3.ab2@16248>    RTS
0002C296 <AmiBlitz3.ab2@16250> 'nonull CMP.w #$c982,d0
0002C29A <AmiBlitz3.ab2@16251>        BNE nonew_
0002C29C <AmiBlitz3.ab2@16253>   MOVE.l a5,-(a7)
0002C2A2 <AmiBlitz3.ab2@16254>   MOVE.w lastchar,-(a7)
0002C2A8 <AmiBlitz3.ab2@16255>   JSR get1bytemain
0002C2AC <AmiBlitz3.ab2@16256>   CMP.w #"(",d0                                             ; use oldcode
0002C2B0 <AmiBlitz3.ab2@16257>   BNE 'newcode
0002C2B6 <AmiBlitz3.ab2@16258>   JSR get1bytemain
0002C2BA <AmiBlitz3.ab2@16259>   CMP.w #")",d0
0002C2BE <AmiBlitz3.ab2@16260>   BEQ 'newcode
0002C2C4 <AmiBlitz3.ab2@16261>   MOVE.w (a7)+,lastchar
0002C2C6 <AmiBlitz3.ab2@16262>   MOVE.l (a7)+,a5
0002C2CC <AmiBlitz3.ab2@16263>   MOVE.w lastchar,d0
0002C2D0 <AmiBlitz3.ab2@16264>   BRA nonew_
0002C2D2 <AmiBlitz3.ab2@16265> 'newcode  MOVE.l a0,-(a7)
0002C2D8 <AmiBlitz3.ab2@16266>   TST.b blitzparloop
0002C2DC <AmiBlitz3.ab2@16267>   BNE 'err
0002C2E2 <AmiBlitz3.ab2@16268>   TST.b funcparloop
0002C2E6 <AmiBlitz3.ab2@16269>   BNE 'err
0002C2EA <AmiBlitz3.ab2@16270>   BRA 'ok
0002C2F0 <AmiBlitz3.ab2@16271> 'err JMP errornewnotincalls
0002C2F6 <AmiBlitz3.ab2@16272> 'ok  MOVE.l #$203c0000,d1
0002C2FA <AmiBlitz3.ab2@16273>   BSR writelong                                            ; 68k asm move.l #$xx,d0
0002C2FC <AmiBlitz3.ab2@16274>   MOVEQ #0,d1
0002C300 <AmiBlitz3.ab2@16275>   MOVE.w 8(a0),d1
0002C304 <AmiBlitz3.ab2@16276>   BSR writeword
0002C308 <AmiBlitz3.ab2@16277>   MOVE.w #$7200,d1                                         ; 68k asm "moveq #0,d1"
0002C30C <AmiBlitz3.ab2@16278>   BSR writeword
0002C310 <AmiBlitz3.ab2@16279>   MOVE.w #$C002,D1                                         ;call function to alloc global mem
0002C314 <AmiBlitz3.ab2@16280>   BSR.w tokejsr2
0002C316 <AmiBlitz3.ab2@16281>   MOVE.l (a7)+,a0
0002C318 <AmiBlitz3.ab2@16282>   ADDQ.l #6,a7                      ; a5 need not restore
0002C31C <AmiBlitz3.ab2@16283>   CMP.w #")",d0
0002C320 <AmiBlitz3.ab2@16284>   BNE 'nobracket
0002C326 <AmiBlitz3.ab2@16285>   JSR get1bytemain
0002C328 <AmiBlitz3.ab2@16286> 'nobracket  RTS
0002C32C <AmiBlitz3.ab2@16288> nonew_  CMP.w #-$7F4A,D0
0002C330 <AmiBlitz3.ab2@16289>    BEQ.w JL_0_A98C
0002C334 <AmiBlitz3.ab2@16290>   CMP.w #-$7F48,D0
0002C338 <AmiBlitz3.ab2@16291>    BEQ.w doaddr
0002C33C <AmiBlitz3.ab2@16292>   CMP.w #-$7F3C,D0
0002C340 <AmiBlitz3.ab2@16293>    BEQ.w domaximum
0002C344 <AmiBlitz3.ab2@16294>   CMP.w #-$7F2F,D0
0002C348 <AmiBlitz3.ab2@16295>    BEQ.w doused
0002C34A <AmiBlitz3.ab2@16296>   MOVE.w D2,-(A7)
0002C34C <AmiBlitz3.ab2@16297>   MOVE.w D0,D1
0002C350 <AmiBlitz3.ab2@16298>   BCLR #$F,D1
0002C354 <AmiBlitz3.ab2@16300>    BSR.w searchinstr
0002C356 <AmiBlitz3.ab2@16301>   MOVE.w (A3),D1
0002C35A <AmiBlitz3.ab2@16302>   BTST #$1,D1
0002C35E <AmiBlitz3.ab2@16303>    BEQ.w noreturn_                                         ;syntax error noreturn
0002C362 <AmiBlitz3.ab2@16304>   BTST #$2,D1
0002C366 <AmiBlitz3.ab2@16305>    BNE.w JL_0_AC1A
0002C368 <AmiBlitz3.ab2@16306>   LSR.w #8,D1
0002C36E <AmiBlitz3.ab2@16307>   BTST #$3,$1(A3)
0002C372 <AmiBlitz3.ab2@16308>    BEQ.w JL_0_AB4C
0002C378 <AmiBlitz3.ab2@16309>    JSR AJL_0_498A
0002C37E <AmiBlitz3.ab2@16312>    CLR.l rightsidetype
0002C380 <AmiBlitz3.ab2@16313>    MOVE.w D1,-(A7)                                         ;is library instruction
0002C384 <AmiBlitz3.ab2@16314>   CMP.w #$7,D1
0002C388 <AmiBlitz3.ab2@16315>    BNE.w JL_0_AB5E
0002C38A <AmiBlitz3.ab2@16316>   MOVE.l A2,-(A7)
0002C38E <AmiBlitz3.ab2@16317>    BSR.w makesbase
0002C390 <AmiBlitz3.ab2@16318>   MOVEA.l (A7)+,A2
0002C394 <AmiBlitz3.ab2@16321>     BSR.w JL_0_AFA2
0002C396 <AmiBlitz3.ab2@16322>   MOVE.w D3,-(A7)
0002C39A <AmiBlitz3.ab2@16323>    BSR.w get1bytemain
0002C39C <AmiBlitz3.ab2@16324>   MOVEQ.l #$00,D1
0002C3A0 <AmiBlitz3.ab2@16325>   CMP.w #$28,D0
0002C3A4 <AmiBlitz3.ab2@16326>    BNE.w JL_0_AB80
0002C3AA <AmiBlitz3.ab2@16327>    JSR JL_0_66F6
0002C3AC <AmiBlitz3.ab2@16328>   TST.w D1
0002C3B0 <AmiBlitz3.ab2@16329>    BEQ.w syntaxerr
0002C3B4 <AmiBlitz3.ab2@16330> BRA.w JL_0_AB84
0002C3BE <AmiBlitz3.ab2@16335>   MOVE.w oldqflag,instringon
0002C3C4 <AmiBlitz3.ab2@16336>   MOVEA.l lastsourcepos,A5
0002C3CA <AmiBlitz3.ab2@16339>    MOVE.w regnum,-(A7)
0002C3D4 <AmiBlitz3.ab2@16340>    MOVE.w regnum,regnumstore
0002C3DA <AmiBlitz3.ab2@16341>    TST.b fpu
0002C3DE <AmiBlitz3.ab2@16342>             BEQ 'nofloat
0002C3E4 <AmiBlitz3.ab2@16343>             CMP.w #$ffff,28(a3)
0002C3E8 <AmiBlitz3.ab2@16344>             BNE 'nofloat
0002C3EE <AmiBlitz3.ab2@16345>             CMP.w #$3c01,34(a3)                            ;val do nofpu stuff
0002C3F2 <AmiBlitz3.ab2@16346>             BEQ 'nofloat
0002C3F8 <AmiBlitz3.ab2@16347>             CMP.w #$3c02,34(a3)                            ;int skip
0002C3FC <AmiBlitz3.ab2@16348>             BEQ 'quick
0002C400 <AmiBlitz3.ab2@16349>             CMP.b #5,(a3)
0002C404 <AmiBlitz3.ab2@16350>             BNE 'nofloat
0002C40A <AmiBlitz3.ab2@16353>             CLR.l load_var_addr
0002C40E <AmiBlitz3.ab2@16354> BRA 'isfpu
0002C414 <AmiBlitz3.ab2@16357>    CLR.w regnum
0002C416 <AmiBlitz3.ab2@16360>    MOVE.w D1,-(A7)
0002C41C <AmiBlitz3.ab2@16361>   BTST #$3,$1(A3)
0002C420 <AmiBlitz3.ab2@16362>    BEQ.w JL_0_ABB0
0002C424 <AmiBlitz3.ab2@16381>   MOVE.w $6(A7),D1
0002C42A <AmiBlitz3.ab2@16382>   MOVE.w d1,peeksize
0002C42E <AmiBlitz3.ab2@16392>   ORI.w #$7000,D1
0002C432 <AmiBlitz3.ab2@16393>   BSR.w writeword                                          ;write peekmode
0002C438 <AmiBlitz3.ab2@16396>   ADDQ.w #1,regnum
0002C43A <AmiBlitz3.ab2@16397>   MOVE.w (A7),D1
0002C442 <AmiBlitz3.ab2@16400>   MOVE.w 2(a7),tempregnum
0002C448 <AmiBlitz3.ab2@16401>   JSR JL_0_4878
0002C44A <AmiBlitz3.ab2@16402>   TST.w (A7)+
0002C44E <AmiBlitz3.ab2@16403>   BEQ.w JL_0_ABC6
0002C452 <AmiBlitz3.ab2@16404>   CMP.w #")",D0                                             ; check if ) here for correct end of blitzlib function call
0002C456 <AmiBlitz3.ab2@16405>   BNE.w errorbracketmiss                                    ; was syntax error
0002C45C <AmiBlitz3.ab2@16406>   CLR.l lasttoken
0002C460 <AmiBlitz3.ab2@16407>   BSR.w get1bytemain
0002C462 <AmiBlitz3.ab2@16410>    MOVE.w (A7)+,D1
0002C468 <AmiBlitz3.ab2@16411>   MOVE.w D1,regnum
0002C46C <AmiBlitz3.ab2@16412>    BEQ.w JL_0_ABDE
0002C472 <AmiBlitz3.ab2@16413>    CMP.w #$3c01,24(a2)                                     ;val skipped
0002C476 <AmiBlitz3.ab2@16414>    BNE 'noval
0002C47C <AmiBlitz3.ab2@16415>    TST.b fpu
0002C480 <AmiBlitz3.ab2@16416>    BEQ 'noval
0002C486 <AmiBlitz3.ab2@16417>    CLR.l load_var_addr
0002C488 <AmiBlitz3.ab2@16418>    MOVEQ #0,d1
0002C48E <AmiBlitz3.ab2@16419>    MOVE.w regnum,d1
0002C490 <AmiBlitz3.ab2@16420>    LSL.l #7,d1
0002C496 <AmiBlitz3.ab2@16421>    OR.l #$f2000000,d1
0002C49A <AmiBlitz3.ab2@16422>    BSR writelong
0002C49E <AmiBlitz3.ab2@16423> BRA JL_0_ABDE
0002C4A4 <AmiBlitz3.ab2@16427>    CMP.w #$3c02,24(a2)                                     ;int skipped
0002C4A8 <AmiBlitz3.ab2@16428>    BEQ 'quick
0002C4AC <AmiBlitz3.ab2@16429>    CMP.b #5,d2
0002C4B0 <AmiBlitz3.ab2@16430>    BNE 'nofpu
0002C4B6 <AmiBlitz3.ab2@16431>    TST.b fpu
0002C4BA <AmiBlitz3.ab2@16432>    BEQ 'nofpu
0002C4C0 <AmiBlitz3.ab2@16437>    CLR.l load_var_addr
0002C4C4 <AmiBlitz3.ab2@16438> BRA JL_0_ABDE
0002C4C6 <AmiBlitz3.ab2@16441>   LSL.w #8,D1
0002C4C8 <AmiBlitz3.ab2@16442>   LSL.w #1,D1
0002C4CC <AmiBlitz3.ab2@16443>   ORI.w #$2000,D1
0002C4D0 <AmiBlitz3.ab2@16444>   BSR.w writeword                                          ;write move.l d0,dx
0002C4D6 <AmiBlitz3.ab2@16445>   TST.b fpu
0002C4DA <AmiBlitz3.ab2@16446>   BEQ JL_0_ABDE
0002C4DC <AmiBlitz3.ab2@16447>   MOVEQ #0,d1
0002C4E2 <AmiBlitz3.ab2@16448>   MOVE.w regnum,d1
0002C4E4 <AmiBlitz3.ab2@16449>   LSL.l #7,d1
0002C4EA <AmiBlitz3.ab2@16450>   OR.l #$f2000000,d1
0002C4EC <AmiBlitz3.ab2@16454>        MOVE.w (A7)+,D3
0002C4F0 <AmiBlitz3.ab2@16455>        BEQ.w JL_0_ABFC
0002C4F6 <AmiBlitz3.ab2@16456>        TST.b fpu
0002C4FA <AmiBlitz3.ab2@16457>        BEQ 'nofpu
0002C4FC <AmiBlitz3.ab2@16458>       MOVE.l d0,-(a7)
0002C4FE <AmiBlitz3.ab2@16459>        MOVE.l a0,-(a7)
0002C504 <AmiBlitz3.ab2@16460>        MOVE.l stacktrack,d1
0002C50A <AmiBlitz3.ab2@16461>        LEA fpustackbase,a0
0002C512 <AmiBlitz3.ab2@16462>        MOVE.w 0(a0,d1),regmask
0002C514 <AmiBlitz3.ab2@16463>        MOVE.l (a7)+,a0
0002C518 <AmiBlitz3.ab2@16464>       MOVE.w #8,d0
0002C51C <AmiBlitz3.ab2@16467>       BEQ 'ready
0002C522 <AmiBlitz3.ab2@16468>       BTST d0,regmask
0002C526 <AmiBlitz3.ab2@16469>       BEQ 'noa7
0002C528 <AmiBlitz3.ab2@16470>       MOVEQ #0,d1
0002C52A <AmiBlitz3.ab2@16471>       MOVE.w d0,d1
0002C52C <AmiBlitz3.ab2@16472>       SUBQ.w #1,d1
0002C52E <AmiBlitz3.ab2@16473>       ASL #7,d1
0002C534 <AmiBlitz3.ab2@16475>       OR.l #$f21f5400,d1                                   ;fmove.d (a7)+
0002C538 <AmiBlitz3.ab2@16476>       BSR writelong
0002C53E <AmiBlitz3.ab2@16477>       SUBQ.l #2,stacktrack
0002C540 <AmiBlitz3.ab2@16480>       SUBQ.w #1,d0
0002C544 <AmiBlitz3.ab2@16481>       BNE 'loop
0002C546 <AmiBlitz3.ab2@16484>       MOVE.l (a7)+,d0
0002C54C <AmiBlitz3.ab2@16485>       SUBQ.l #2,stacktrack                                 ;int track
0002C550 <AmiBlitz3.ab2@16488>    MOVE.w #$4CDF,D1
0002C554 <AmiBlitz3.ab2@16489>    BSR.w writeword                                         ;write movem.l (a7)+,
0002C556 <AmiBlitz3.ab2@16490>   MOVEQ.l #$00,D1
0002C558 <AmiBlitz3.ab2@16491>   MOVEQ.l #$0F,D4
0002C55A <AmiBlitz3.ab2@16494>     LSL.w #1,D3
0002C55C <AmiBlitz3.ab2@16495>     ROXR.w #1,D1
0002C560 <AmiBlitz3.ab2@16496>   DBF D4,JL_0_ABF0
0002C564 <AmiBlitz3.ab2@16498>    BSR.w writeword
0002C56A <AmiBlitz3.ab2@16499>    TST.b fast
0002C56E <AmiBlitz3.ab2@16500>    BEQ JL_0_ABFC
0002C574 <AmiBlitz3.ab2@16501>    TST.w regnum
0002C578 <AmiBlitz3.ab2@16502>    BEQ JL_0_ABFC
0002C57E <AmiBlitz3.ab2@16503>    CMP.w #$3c0e,$1c(a3)                                    ;true
0002C582 <AmiBlitz3.ab2@16504>    BNE 'l1
0002C588 <AmiBlitz3.ab2@16505>    MOVE.w regnum,d1
0002C58A <AmiBlitz3.ab2@16506>    ASL.l #8,d1
0002C58C <AmiBlitz3.ab2@16507>    ASL.l #1,d1
0002C590 <AmiBlitz3.ab2@16508>    OR.w #$70ff,d1
0002C59A <AmiBlitz3.ab2@16509>    SUB.l #12,destpointer
0002C59E <AmiBlitz3.ab2@16510>    BSR writeword
0002C5A4 <AmiBlitz3.ab2@16513>   CMP.w #$3c0f,$1c(a3)                                     ;false
0002C5A8 <AmiBlitz3.ab2@16514>    BNE 'l2
0002C5AE <AmiBlitz3.ab2@16515>     MOVE.w regnum,d1
0002C5B0 <AmiBlitz3.ab2@16516>     ASL.l #8,d1
0002C5B2 <AmiBlitz3.ab2@16517>     ASL.l #1,d1
0002C5B6 <AmiBlitz3.ab2@16518>     OR.w #$7000,d1
0002C5C0 <AmiBlitz3.ab2@16519>     SUB.l #12,destpointer
0002C5C4 <AmiBlitz3.ab2@16520>     BSR writeword
0002C5C6 <AmiBlitz3.ab2@16524>    MOVE.w (A7)+,D2
0002C5CA <AmiBlitz3.ab2@16525>   CMP.w #$7,D2                                             ;destination var type
0002C5CE <AmiBlitz3.ab2@16526>    BNE.w JL_0_AC16
0002C5D4 <AmiBlitz3.ab2@16527>   MOVE.w putstlen,D1
0002C5DA <AmiBlitz3.ab2@16528>   OR.w regnum,D1
0002C5DE <AmiBlitz3.ab2@16529>    BSR.w writeword
0002C5E2 <AmiBlitz3.ab2@16532> BRA.w JL_0_AF66
0002C5E6 <AmiBlitz3.ab2@16537>   MOVE.w $6(A3),D1
0002C5EA <AmiBlitz3.ab2@16538>    BSR.w uselib
0002C5EE <AmiBlitz3.ab2@16539>    BSR.w JL_0_AD40
0002C5F0 <AmiBlitz3.ab2@16540>   MOVE.l D4,D1
0002C5F2 <AmiBlitz3.ab2@16541>   MOVE.l D5,-(A7)
0002C5F6 <AmiBlitz3.ab2@16542>    BSR.w JL_0_AD38
0002C5FA <AmiBlitz3.ab2@16543>   MOVE.w $A(A1),-(A7)
0002C5FC <AmiBlitz3.ab2@16544>   ADDQ.w #8,A3
0002C5FE <AmiBlitz3.ab2@16545>   MOVE.w (A3)+,-(A7)
0002C600 <AmiBlitz3.ab2@16546>   MOVE.l A3,-(A7)
0002C604 <AmiBlitz3.ab2@16547>    BSR.w get1bytemain
0002C606 <AmiBlitz3.ab2@16548>   MOVE.w D0,-(A7)
0002C608 <AmiBlitz3.ab2@16549>   MOVEQ.l #$00,D3
0002C60E <AmiBlitz3.ab2@16550>   JSR checka4a5
0002C610 <AmiBlitz3.ab2@16552>   MOVE.b (A3)+,D1
0002C614 <AmiBlitz3.ab2@16553>    BMI.w JL_0_AC6A
0002C616 <AmiBlitz3.ab2@16554>   MOVEQ.l #$03,D2
0002C618 <AmiBlitz3.ab2@16555>   ADDQ.w #1,D3
0002C61C <AmiBlitz3.ab2@16556>   MOVEM.l D3/A3,-(A7)
0002C622 <AmiBlitz3.ab2@16557>   MOVE.b funcparloop,-(a7)
0002C628 <AmiBlitz3.ab2@16558>   CLR.b funcparloop
0002C62E <AmiBlitz3.ab2@16559>   MOVE.b blitzparloop,-(a7)
0002C636 <AmiBlitz3.ab2@16560>   MOVE.b #1,blitzparloop
0002C63C <AmiBlitz3.ab2@16561>   MOVE.l lasttoken,-(a7)
0002C642 <AmiBlitz3.ab2@16562>   MOVE.l leftsidetype,-(a7)
0002C648 <AmiBlitz3.ab2@16563>   MOVE.l rightsidetype,-(a7)
0002C64C <AmiBlitz3.ab2@16564>   BSR.w peval
0002C652 <AmiBlitz3.ab2@16565>   MOVE.l (a7)+,rightsidetype
0002C658 <AmiBlitz3.ab2@16566>   MOVE.l (a7)+,leftsidetype
0002C65E <AmiBlitz3.ab2@16567>   MOVE.l (a7)+,lasttoken
0002C664 <AmiBlitz3.ab2@16568>   MOVE.b (a7)+,blitzparloop
0002C66A <AmiBlitz3.ab2@16569>   MOVE.b (a7)+,funcparloop
0002C670 <AmiBlitz3.ab2@16570>   SUBQ.w #4,a2offset
0002C674 <AmiBlitz3.ab2@16571>   MOVEM.l (A7)+,D3/A3
0002C678 <AmiBlitz3.ab2@16572>   CMP.w #$2C,D0
0002C67C <AmiBlitz3.ab2@16573>    BEQ.w JL_0_AC40
0002C67E <AmiBlitz3.ab2@16574>   TST.b (A3)
0002C682 <AmiBlitz3.ab2@16575>    BPL.w syntaxerr
0002C684 <AmiBlitz3.ab2@16578>   MOVE.w (A7)+,D1
0002C688 <AmiBlitz3.ab2@16579>    BSR.w JL_0_AD04
0002C68A <AmiBlitz3.ab2@16580>   MOVEA.l (A7)+,A3
0002C68C <AmiBlitz3.ab2@16581>   SUBQ.w #1,D3
0002C690 <AmiBlitz3.ab2@16582>    BMI.w JL_0_ACBE
0002C692 <AmiBlitz3.ab2@16585>   TST.b (A3)+
0002C696 <AmiBlitz3.ab2@16586>    BPL.w JL_0_AC78
0002C698 <AmiBlitz3.ab2@16587>   SUBQ.w #1,A3
0002C69A <AmiBlitz3.ab2@16590>     MOVEQ.l #$00,D1
0002C69C <AmiBlitz3.ab2@16591>     MOVE.b -(A3),D1
0002C6A0 <AmiBlitz3.ab2@16592>     BTST #$4,D1
0002C6A4 <AmiBlitz3.ab2@16593>      BNE.w JL_0_ACAA
0002C6AA <AmiBlitz3.ab2@16594>     CMP.w regnum,D1
0002C6AE <AmiBlitz3.ab2@16595>      BCC.w JL_0_AC9E
0002C6B0 <AmiBlitz3.ab2@16596>     BSET D1,D5
0002C6B2 <AmiBlitz3.ab2@16597>     MOVEQ.l #$0F,D0
0002C6B4 <AmiBlitz3.ab2@16598>     SUB.w D1,D0
0002C6B6 <AmiBlitz3.ab2@16599>     BSET D0,D4
0002C6B8 <AmiBlitz3.ab2@16602>     LSL.w #8,D1
0002C6BA <AmiBlitz3.ab2@16603>     LSL.w #1,D1
0002C6BE <AmiBlitz3.ab2@16604>     ORI.w #$201F,D1
0002C6C2 <AmiBlitz3.ab2@16605>   BRA.w JL_0_ACB6
0002C6C6 <AmiBlitz3.ab2@16608>     ANDI.w #$7,D1
0002C6C8 <AmiBlitz3.ab2@16609>     LSL.w #8,D1
0002C6CA <AmiBlitz3.ab2@16610>     LSL.w #1,D1
0002C6CE <AmiBlitz3.ab2@16611>     ORI.w #$205F,D1
0002C6D2 <AmiBlitz3.ab2@16614>      BSR.w writeword
0002C6D6 <AmiBlitz3.ab2@16615>   DBF D3,JL_0_AC80
0002C6DC <AmiBlitz3.ab2@16618>   MOVE.w (A7)+,libjsr+2
0002C6E2 <AmiBlitz3.ab2@16619>   MOVE.w (A7)+,libbase+2
0002C6E8 <AmiBlitz3.ab2@16620>   MOVE.l libbase,D1
0002C6EC <AmiBlitz3.ab2@16621>    BSR.w writelong
0002C6F2 <AmiBlitz3.ab2@16622>   MOVE.l libjsr,D1
0002C6F6 <AmiBlitz3.ab2@16623>    BSR.w writelong
0002C6FC <AmiBlitz3.ab2@16624>   MOVE.w regnum,D1
0002C700 <AmiBlitz3.ab2@16625>    BEQ.w JL_0_ACF4
0002C702 <AmiBlitz3.ab2@16626>   LSL.w #8,D1
0002C704 <AmiBlitz3.ab2@16627>   LSL.w #1,D1
0002C708 <AmiBlitz3.ab2@16628>   ORI.w #$2000,D1
0002C70C <AmiBlitz3.ab2@16629>    BSR.w writeword
0002C70E <AmiBlitz3.ab2@16632>   MOVE.l (A7)+,D1
0002C712 <AmiBlitz3.ab2@16633>    BSR.w JL_0_AD38
0002C718 <AmiBlitz3.ab2@16634>    JSR restorea4a5
0002C71A <AmiBlitz3.ab2@16635>   MOVEQ.l #$03,D2
0002C71E <AmiBlitz3.ab2@16636>    BSR.w reget
0002C722 <AmiBlitz3.ab2@16637> BRA.w JL_0_AF66
0002C724 <AmiBlitz3.ab2@16640>   TST.w D3
0002C728 <AmiBlitz3.ab2@16641>    BEQ.w JL_0_AD1E
0002C72C <AmiBlitz3.ab2@16642>   CMP.w #$28,D1
0002C730 <AmiBlitz3.ab2@16643>    BNE.w syntaxerr
0002C734 <AmiBlitz3.ab2@16644>   CMP.w #$29,D0
0002C738 <AmiBlitz3.ab2@16645>    BNE.w syntaxerr
0002C73C <AmiBlitz3.ab2@16646> BRA.w get1bytemain
0002C740 <AmiBlitz3.ab2@16649>   CMP.w #$28,D1
0002C744 <AmiBlitz3.ab2@16650>    BNE.w JL_0_AD36
0002C748 <AmiBlitz3.ab2@16651>    BSR.w get1bytemain
0002C74C <AmiBlitz3.ab2@16652>   CMP.w #$29,D0
0002C750 <AmiBlitz3.ab2@16653>    BNE.w syntaxerr
0002C754 <AmiBlitz3.ab2@16654> BRA.w get1bytemain
0002C756 <AmiBlitz3.ab2@16657> RTS
0002C758 <AmiBlitz3.ab2@16660>   TST.w D1
0002C75C <AmiBlitz3.ab2@16661>    BNE.w writelong
0002C75E <AmiBlitz3.ab2@16662> RTS
0002C762 <AmiBlitz3.ab2@16666>   MOVE.w #$48E7,D4
0002C764 <AmiBlitz3.ab2@16667>   SWAP D4
0002C766 <AmiBlitz3.ab2@16668>   CLR.w D4
0002C76A <AmiBlitz3.ab2@16669>   MOVE.w #$4CDF,D5
0002C76C <AmiBlitz3.ab2@16670>   SWAP D5
0002C76E <AmiBlitz3.ab2@16671>   CLR.w D5
0002C774 <AmiBlitz3.ab2@16672>   MOVE.w regnum,D1
0002C778 <AmiBlitz3.ab2@16673>    BEQ.w JL_0_AD74
0002C77C <AmiBlitz3.ab2@16674>   BSET #$F,D4
0002C780 <AmiBlitz3.ab2@16675>   BSET #$0,D5
0002C784 <AmiBlitz3.ab2@16676>   CMP.w #$2,D1
0002C788 <AmiBlitz3.ab2@16677>    BCS.w JL_0_AD72
0002C78C <AmiBlitz3.ab2@16680>   BSET #$E,D4
0002C790 <AmiBlitz3.ab2@16681>   BSET #$1,D5
0002C792 <AmiBlitz3.ab2@16684> RTS
0002C798 <AmiBlitz3.ab2@16687>   TST.w fuckpos
0002C79C <AmiBlitz3.ab2@16688>   BNE.w JL_0_AD6A
0002C79E <AmiBlitz3.ab2@16689> RTS
0002C7A0 <AmiBlitz3.ab2@16692> fuckpos:  Ds.w 1
0002C7A6 <AmiBlitz3.ab2@16696>   MOVE.w sbasegot,D1
0002C7AA <AmiBlitz3.ab2@16697>    BEQ.w makesbase__skip
0002C7AE <AmiBlitz3.ab2@16701>   MOVE.w sbgot(PC),D1
0002C7B2 <AmiBlitz3.ab2@16702>    BNE.w makesbase__skip2
0002C7BA <AmiBlitz3.ab2@16706>   MOVE.w #$0002,sbgot
0002C7C0 <AmiBlitz3.ab2@16707>   MOVE.w movea3a7,D1
0002C7C4 <AmiBlitz3.ab2@16708> BRA.w writeword
0002C7C6 <AmiBlitz3.ab2@16711> RTS
0002C7CE <AmiBlitz3.ab2@16716>   MOVE.w #$0001,sbgot                                      ;voodoo magic! - Will it work?
0002C7D4 <AmiBlitz3.ab2@16719>   MOVE.l #$C601,D1
0002C7DC <AmiBlitz3.ab2@16720>   MOVE.w #-1,sbasegot
0002C7E2 <AmiBlitz3.ab2@16721>   MOVE.l d1,lastinstruction
0002C7E6 <AmiBlitz3.ab2@16722>   BSR.w Atokejsr
0002C7E8 <AmiBlitz3.ab2@16723> RTS
0002C7F2 <AmiBlitz3.ab2@16728>   MOVE.l data1,litdata1
0002C7F8 <AmiBlitz3.ab2@16729>   TST.b fast
0002C7FC <AmiBlitz3.ab2@16730>   BEQ 'l50                                                 ;optistring  seem impossible to get work
0002C800 <AmiBlitz3.ab2@16734> BRA 'l50                                                   ;to deactivate
0002C806 <AmiBlitz3.ab2@16740>   TST.b optistring
0002C80A <AmiBlitz3.ab2@16741>   BNE.s 'l21
0002C810 <AmiBlitz3.ab2@16742>   CLR.b string1
0002C818 <AmiBlitz3.ab2@16743>   MOVE.b #1,optistring
0002C81E <AmiBlitz3.ab2@16744>   TST.b nostringopt
0002C822 <AmiBlitz3.ab2@16745>   BNE 'l21
0002C824 <AmiBlitz3.ab2@16746>   MOVE.l a5,a4
0002C826 <AmiBlitz3.ab2@16747>   SUBQ.l #1,a4
0002C828 <AmiBlitz3.ab2@16750>     TST.b (a4)
0002C82C <AmiBlitz3.ab2@16751>     BMI 'l19a
0002C830 <AmiBlitz3.ab2@16752>     BEQ.s 'l20
0002C834 <AmiBlitz3.ab2@16753>     CMP.b #$22,(a4)
0002C838 <AmiBlitz3.ab2@16754>     BEQ.s 'l19
0002C83E <AmiBlitz3.ab2@16757>     TST.w string1
0002C842 <AmiBlitz3.ab2@16758>     BNE 'l11
0002C846 <AmiBlitz3.ab2@16759>     CMP.b #":",(a4)
0002C84A <AmiBlitz3.ab2@16760>     BEQ.s 'l20
0002C84E <AmiBlitz3.ab2@16761>     CMP.b #";",(a4)
0002C852 <AmiBlitz3.ab2@16762>     BEQ.s 'l20
0002C856 <AmiBlitz3.ab2@16763>     CMP.b #"+",(a4)
0002C85A <AmiBlitz3.ab2@16764>     BEQ.s 'l21
0002C85E <AmiBlitz3.ab2@16765>     CMP.b #",",(a4)
0002C862 <AmiBlitz3.ab2@16766>     BEQ.s 'l20                                             ;was l21
0002C866 <AmiBlitz3.ab2@16767>     CMP.b #")",(a4)
0002C86A <AmiBlitz3.ab2@16768>     BEQ.s 'l20                                             ;was l21
0002C86C <AmiBlitz3.ab2@16771>     ADDQ.l #1,a4
0002C870 <AmiBlitz3.ab2@16772> BRA.s 'l10
0002C878 <AmiBlitz3.ab2@16775>   BCHG #0,string1
0002C87C <AmiBlitz3.ab2@16776> BRA 'l18
0002C87E <AmiBlitz3.ab2@16779>   ADDQ.l #1,a4
0002C880 <AmiBlitz3.ab2@16780>   TST.b (a4)
0002C884 <AmiBlitz3.ab2@16781>   BEQ 'l21
0002C888 <AmiBlitz3.ab2@16782> BRA 'l11
0002C88A <AmiBlitz3.ab2@16785>   MOVE.l a5,a4
0002C88C <AmiBlitz3.ab2@16786>   SUBQ.l #1,a4
0002C890 <AmiBlitz3.ab2@16789>   CMP.b #$20,-(a4)
0002C894 <AmiBlitz3.ab2@16790>   BEQ 'll1
0002C898 <AmiBlitz3.ab2@16791>   CMP.b #"+",(a4)
0002C89C <AmiBlitz3.ab2@16792>   BEQ 'l21
0002C8A4 <AmiBlitz3.ab2@16807>   MOVE.b #2,optistring
0002C8AC <AmiBlitz3.ab2@16810>   CMP.b #2,optistring
0002C8B0 <AmiBlitz3.ab2@16811>   BEQ.s 'l100
0002C8B4 <AmiBlitz3.ab2@16814>   BSR.w makesbase
0002C8B8 <AmiBlitz3.ab2@16815>   BSR.w pokedata1                                          ;writestringsizespace
0002C8BC <AmiBlitz3.ab2@16816>   BSR.w pokedata1
0002C8BE <AmiBlitz3.ab2@16819>   MOVEQ.l #$00,D2
0002C8C4 <AmiBlitz3.ab2@16822>     MOVE.l a5,lastsourcepos
0002C8C6 <AmiBlitz3.ab2@16823>     MOVEQ #0,d0
0002C8C8 <AmiBlitz3.ab2@16824>     MOVE.b (a5)+,d0
0002C8CA <AmiBlitz3.ab2@16825>     TST.w D0
0002C8CE <AmiBlitz3.ab2@16826>      BEQ.w notqerr
0002C8D2 <AmiBlitz3.ab2@16827>     CMP.w #$22,D0                                          ; --- " ---
0002C8D6 <AmiBlitz3.ab2@16828>      BEQ.w JL_0_ADF6
0002C8DA <AmiBlitz3.ab2@16829>     CMP.b #"\",d0
0002C8DE <AmiBlitz3.ab2@16830>      BNE 'l1
0002C8E2 <AmiBlitz3.ab2@16831>     CMP.b #"\",(a5)
0002C8E6 <AmiBlitz3.ab2@16832>      BNE 'l1
0002C8EC <AmiBlitz3.ab2@16833>     TST.b newsyntax
0002C8F0 <AmiBlitz3.ab2@16834>      BEQ 'l1
0002C8F6 <AmiBlitz3.ab2@16835>     CMP.w #"\\",1(a5)                                      ; new compiler constants
0002C8FA <AmiBlitz3.ab2@16836>     BNE 'l2
0002C8FC <AmiBlitz3.ab2@16837>     ADDQ #2,a5
0002C8FE <AmiBlitz3.ab2@16840>     ADDQ.w #1,D2
0002C900 <AmiBlitz3.ab2@16841>     MOVE.w D0,D1
0002C904 <AmiBlitz3.ab2@16842>     BSR.w pokedata1b                                        ;writestring
0002C908 <AmiBlitz3.ab2@16843> BRA.w writestring
0002C90E <AmiBlitz3.ab2@16846>     JSR check_newconstants
0002C912 <AmiBlitz3.ab2@16847> BRA writestring
0002C918 <AmiBlitz3.ab2@16850>   NOT instringon
0002C91E <AmiBlitz3.ab2@16851>   MOVE.w dontwrite,D1
0002C922 <AmiBlitz3.ab2@16852>   BNE.w JL_0_AE0A
0002C92A <AmiBlitz3.ab2@16853>   CMP.b #2,optistring
0002C92E <AmiBlitz3.ab2@16854>   BEQ 'l10
0002C934 <AmiBlitz3.ab2@16855>     MOVEA.l litdata1,A0
0002C936 <AmiBlitz3.ab2@16856>     CLR.w (A0)+                                            ;writesize
0002C938 <AmiBlitz3.ab2@16857>     MOVE.w D2,(A0)
0002C93C <AmiBlitz3.ab2@16861>   BSR.w JL_0_AEA4                                          ;writestringconstantcode
0002C942 <AmiBlitz3.ab2@16862>   ADDQ.l #1,data1
0002C94A <AmiBlitz3.ab2@16863>   BCLR #$0,data1+3
0002C94C <AmiBlitz3.ab2@16864>   MOVEQ.l #$07,D2
0002C950 <AmiBlitz3.ab2@16865> BRA.w get1bytemain
0002C954 <AmiBlitz3.ab2@16869>   BSR.w makename2
0002C958 <AmiBlitz3.ab2@16870>   BSR.w findlabel2
0002C95C <AmiBlitz3.ab2@16871>   BEQ.w JL_0_AE4A
0002C960 <AmiBlitz3.ab2@16872>   BSR.w addlabelhash
0002C964 <AmiBlitz3.ab2@16873>   CLR.l $4(A2)
0002C968 <AmiBlitz3.ab2@16874>   CLR.l $8(A2)
0002C970 <AmiBlitz3.ab2@16876>   MOVE.w linenumat+2,$10(A2)
0002C976 <AmiBlitz3.ab2@16877>   MOVE.w linenumat,d0
0002C978 <AmiBlitz3.ab2@16878>   MOVEQ #0,d1
0002C97C <AmiBlitz3.ab2@16879>   MOVE.b -1(a2,d7),d1
0002C980 <AmiBlitz3.ab2@16880>   MOVE.w d0,0(a2,d1)
0002C984 <AmiBlitz3.ab2@16881> BRA.w JL_0_AE52
0002C988 <AmiBlitz3.ab2@16884>   TST.l $8(A2)
0002C98C <AmiBlitz3.ab2@16885>   BNE.w JL_0_AE88
0002C992 <AmiBlitz3.ab2@16888>   MOVEA.l _execbase,A6
0002C994 <AmiBlitz3.ab2@16889>   MOVEQ.l #$0C+2,D0
0002C996 <AmiBlitz3.ab2@16890>   MOVEQ.l #$01,D1
0002C99C <AmiBlitz3.ab2@16891>   MOVE.l mempool,a0
0002C9A0 <AmiBlitz3.ab2@16892>   JSR _AllocPooled(a6)
0002C9A2 <AmiBlitz3.ab2@16894>   MOVEA.l D0,A0
0002C9A6 <AmiBlitz3.ab2@16895>   MOVE.l $4(A2),(A0)
0002C9AA <AmiBlitz3.ab2@16896>   MOVE.l A0,$4(A2)
0002C9B2 <AmiBlitz3.ab2@16897>   MOVE.l destpointer,$4(A0)
0002C9B6 <AmiBlitz3.ab2@16898>   ADDQ.l #2,$4(A0)
0002C9BE <AmiBlitz3.ab2@16899>   MOVE.w procnum,$8(A0)
0002C9C6 <AmiBlitz3.ab2@16900>   MOVE.w linenumat+2,$A(A0)
0002C9CE <AmiBlitz3.ab2@16901>   MOVE.w linenumat,$c(a0)
0002C9D0 <AmiBlitz3.ab2@16902> RTS
0002C9D4 <AmiBlitz3.ab2@16905>   MOVE.l $4(A2),D1
0002C9D8 <AmiBlitz3.ab2@16906>   BTST #$0,D1
0002C9DC <AmiBlitz3.ab2@16907>    BNE.w illlaberr
0002C9E2 <AmiBlitz3.ab2@16908>   MOVE.w procnum,D1
0002C9E6 <AmiBlitz3.ab2@16909>   CMP.w $10(A2),D1
0002C9EA <AmiBlitz3.ab2@16910>    BNE.w referr
0002C9EC <AmiBlitz3.ab2@16911> RTS
0002C9EE <AmiBlitz3.ab2@16915>   MOVE.w D0,-(A7)
0002C9F6 <AmiBlitz3.ab2@16916>   CMP.b #2,optistring
0002C9FA <AmiBlitz3.ab2@16917>   BEQ 'l10
0002CA00 <AmiBlitz3.ab2@16920>   MOVE.w numtoa0,D1
0002CA04 <AmiBlitz3.ab2@16921>    BSR.w writeword
0002CA08 <AmiBlitz3.ab2@16922>    BSR.w addoff
0002CA0E <AmiBlitz3.ab2@16923>   MOVE.l litdata1,D1
0002CA12 <AmiBlitz3.ab2@16924>    BSR.w writelong
0002CA18 <AmiBlitz3.ab2@16925>   MOVE.w pushlen,D1
0002CA1C <AmiBlitz3.ab2@16926>    BSR.w writeword
0002CA20 <AmiBlitz3.ab2@16927>   MOVE.w #$C600,D1
0002CA24 <AmiBlitz3.ab2@16928>    BSR.w Atokejsr
0002CA26 <AmiBlitz3.ab2@16929>   MOVE.w (A7)+,D0
0002CA28 <AmiBlitz3.ab2@16930> RTS
0002CA2A <AmiBlitz3.ab2@16933>   MOVEQ #0,d1
0002CA2E <AmiBlitz3.ab2@16934>   BSR.w pokedata1b
0002CA34 <AmiBlitz3.ab2@16935>   MOVE.l destpointer,a4
0002CA38 <AmiBlitz3.ab2@16936>   MOVE.w #$203c,d1
0002CA3E <AmiBlitz3.ab2@16937>   TST.w mode
0002CA42 <AmiBlitz3.ab2@16938>   BNE 'lm10
0002CA48 <AmiBlitz3.ab2@16939>    ADDQ.w #4,a2offset
0002CA4C <AmiBlitz3.ab2@16940>   MOVE.w #$2f3c,d1
0002CA52 <AmiBlitz3.ab2@16943>   TST.w mode
0002CA56 <AmiBlitz3.ab2@16944>   BEQ 'lm3
0002CA5C <AmiBlitz3.ab2@16945>   MOVE.w regnum,D0
0002CA5E <AmiBlitz3.ab2@16946>   LSL.w #8,D0
0002CA60 <AmiBlitz3.ab2@16947>   LSL.w #1,D0
0002CA62 <AmiBlitz3.ab2@16948>   OR.w d0,d1
0002CA66 <AmiBlitz3.ab2@16949>   BSR writeword
0002CA6A <AmiBlitz3.ab2@16950>   BSR.w addoff
0002CA70 <AmiBlitz3.ab2@16951>   MOVE.l litdata1,D1
0002CA74 <AmiBlitz3.ab2@16952>   BSR.w writelong
0002CA7C <AmiBlitz3.ab2@16953>   CMP.w #3,mode
0002CA80 <AmiBlitz3.ab2@16954>   BEQ 'l30
0002CA86 <AmiBlitz3.ab2@16955>    ADDQ.w #4,a2offset
0002CA8A <AmiBlitz3.ab2@16956>   MOVE.w #$4878,D1
0002CA8E <AmiBlitz3.ab2@16957>   BSR.w writeword
0002CA90 <AmiBlitz3.ab2@16958>   MOVE.l d2,d1
0002CA94 <AmiBlitz3.ab2@16959>   BSR writeword
0002CA96 <AmiBlitz3.ab2@16962>   MOVE.w (A7)+,D0
0002CA98 <AmiBlitz3.ab2@16963> RTS
0002CA9E <AmiBlitz3.ab2@16966>   MOVE.l #$3f3c0007,d1
0002CAA2 <AmiBlitz3.ab2@16967>   BSR writelong
0002CAA8 <AmiBlitz3.ab2@16968>   MOVE.w regnum,D1
0002CAAA <AmiBlitz3.ab2@16969>   LSL.w #8,D1
0002CAAC <AmiBlitz3.ab2@16970>   LSL.w #1,D1
0002CAB0 <AmiBlitz3.ab2@16971>   ORI.w #$2f3c,d1
0002CAB4 <AmiBlitz3.ab2@16972>   BSR writeword
0002CABA <AmiBlitz3.ab2@16973>    ADDQ.w #4,a2offset
0002CABC <AmiBlitz3.ab2@16974>   MOVE.l d2,d1
0002CAC0 <AmiBlitz3.ab2@16975>   BSR writelong
0002CAC4 <AmiBlitz3.ab2@16976>   MOVE.w #$2f3c,d1
0002CAC8 <AmiBlitz3.ab2@16977>   BSR writeword
0002CACC <AmiBlitz3.ab2@16978>   BSR.w addoff
0002CAD2 <AmiBlitz3.ab2@16979>   MOVE.l litdata1,D1
0002CAD6 <AmiBlitz3.ab2@16980>   BSR.w writelong
0002CAD8 <AmiBlitz3.ab2@16981>   MOVE.w (A7)+,D0
0002CADA <AmiBlitz3.ab2@16982> RTS
0002CADE <AmiBlitz3.ab2@16986>   BSR.w get1bytemain
0002CAE2 <AmiBlitz3.ab2@16987>    BSR.w JL_0_AE22
0002CAE8 <AmiBlitz3.ab2@16988>   MOVE.w regnum,D1
0002CAEA <AmiBlitz3.ab2@16989>   LSL.w #8,D1
0002CAEC <AmiBlitz3.ab2@16990>   LSL.w #1,D1
0002CAF0 <AmiBlitz3.ab2@16991>   ORI.w #$203C,D1
0002CAF4 <AmiBlitz3.ab2@16992>    BSR.w writeword
0002CAF8 <AmiBlitz3.ab2@16993>    BSR.w addoff
0002CAFC <AmiBlitz3.ab2@16994>   MOVE.l $8(A2),D1
0002CB00 <AmiBlitz3.ab2@16995>    BSR.w writelong
0002CB02 <AmiBlitz3.ab2@16996>   MOVEQ.l #$03,D2
0002CB08 <AmiBlitz3.ab2@16997>   CLR.b peekaddrsize
0002CB0C <AmiBlitz3.ab2@16998> BRA.w reget
0002CB0E <AmiBlitz3.ab2@17001>   MOVEQ.l #$00,D3
0002CB12 <AmiBlitz3.ab2@17004>   BSR.w get1bytemain
0002CB16 <AmiBlitz3.ab2@17005>    BEQ.w syntaxerr
0002CB1A <AmiBlitz3.ab2@17006>   CMP.w #$22,D0
0002CB1E <AmiBlitz3.ab2@17007>    BEQ.w JL_0_AF1A
0002CB20 <AmiBlitz3.ab2@17008>   LSL.l #8,D3
0002CB22 <AmiBlitz3.ab2@17009>   MOVE.b D0,D3
0002CB26 <AmiBlitz3.ab2@17010> BRA.w JL_0_AF02
0002CB2A <AmiBlitz3.ab2@17013>   BSR.w get1bytemain
0002CB2E <AmiBlitz3.ab2@17014> BRA.w JL_0_B46E
0002CB30 <AmiBlitz3.ab2@17017>   MOVE.w D2,-(A7)                                          ;basicvarsforasm
0002CB34 <AmiBlitz3.ab2@17018>    BSR.w makename2
0002CB38 <AmiBlitz3.ab2@17019>    BSR.w findlabel2
0002CB3C <AmiBlitz3.ab2@17020>    BEQ.w 'l10
0002CB42 <AmiBlitz3.ab2@17021>    LEA ptr_parameterstore,a0
0002CB48 <AmiBlitz3.ab2@17022>    CMP.b #"@",-1(a0,d2.w)
0002CB4C <AmiBlitz3.ab2@17023>    BNE cnferr
0002CB50 <AmiBlitz3.ab2@17024>    CLR.b -1(a0,d2.w)
0002CB52 <AmiBlitz3.ab2@17025>    SUBQ.l #1,d2
0002CB58 <AmiBlitz3.ab2@17026>    LEA varbase,a2
0002CB5C <AmiBlitz3.ab2@17027>    BSR findvariable
0002CB60 <AmiBlitz3.ab2@17028>    BNE cnferr
0002CB64 <AmiBlitz3.ab2@17029>    CMP.b #"\",d0
0002CB68 <AmiBlitz3.ab2@17030>    BNE 'l6
0002CB6E <AmiBlitz3.ab2@17031>    ADDQ #1,lastsourcepos
0002CB72 <AmiBlitz3.ab2@17032>    MOVE.l $a(a2),a2
0002CB74 <AmiBlitz3.ab2@17033>    ADDQ.l #4,a2
0002CB78 <AmiBlitz3.ab2@17034>    BSR.w makename2
0002CB7C <AmiBlitz3.ab2@17035>    BSR findvariable2
0002CB80 <AmiBlitz3.ab2@17036>    BNE cnferr
0002CB84 <AmiBlitz3.ab2@17037> BRA.s 'l6                                                  ;???
0002CB88 <AmiBlitz3.ab2@17040>    MOVE.w $4(a2),d3
0002CB8A <AmiBlitz3.ab2@17041>    EXT.l d3
0002CB8E <AmiBlitz3.ab2@17042> BRA JL_0_AF46
0002CB92 <AmiBlitz3.ab2@17045>   MOVE.l $8(A2),D3
0002CB9A <AmiBlitz3.ab2@17046>   CMPI.l #$1,$4(A2)
0002CB9E <AmiBlitz3.ab2@17047>    BEQ.w JL_0_AF46
0002CBA4 <AmiBlitz3.ab2@17048>   NOT.w asmtype
0002CBA6 <AmiBlitz3.ab2@17051>   MOVE.w (A7)+,D2
0002CBAA <AmiBlitz3.ab2@17052> BRA.w JL_0_B46E
0002CBAC <AmiBlitz3.ab2@17056>   MOVE.w D2,-(A7)
0002CBB0 <AmiBlitz3.ab2@17057>    BSR.w getparameter
0002CBB4 <AmiBlitz3.ab2@17058>   CMP.w #"{",D0                                          ;test if var = function{}
0002CBB8 <AmiBlitz3.ab2@17059>    BEQ.w isfunction
0002CBBC <AmiBlitz3.ab2@17060>    BSR.w JL_0_8E3C
0002CBC0 <AmiBlitz3.ab2@17062>    BSR.w calcvar                                         ;getvaroffset+type
0002CBC4 <AmiBlitz3.ab2@17063>    BSR.w JL_0_B150
0002CBCA <AmiBlitz3.ab2@17064>    MOVE.l a2,rightsidetype
0002CBD0 <AmiBlitz3.ab2@17075>    TST.b typecheck
0002CBD4 <AmiBlitz3.ab2@17076>    BEQ JL_0_AF66
0002CBDE <AmiBlitz3.ab2@17077>    CMP.l #$da01,lasttoken                                  ;poke
0002CBE2 <AmiBlitz3.ab2@17078>    BEQ 'l1
0002CBEC <AmiBlitz3.ab2@17079>    CMP.l #$da02,lasttoken                                  ;peek
0002CBF0 <AmiBlitz3.ab2@17080>    BNE 'l2
0002CBF8 <AmiBlitz3.ab2@17083>    CMP.w #1,parnum                                         ; is not call when & is used in parameter
0002CBFC <AmiBlitz3.ab2@17084>    BNE JL_0_AF66
0002CC02 <AmiBlitz3.ab2@17085>    MOVE.b d2,peekaddrsize
0002CC06 <AmiBlitz3.ab2@17086>    BRA JL_0_AF66
0002CC0C <AmiBlitz3.ab2@17089>   CLR.b peekaddrsize
0002CC10 <AmiBlitz3.ab2@17092>   CMP.w #$1,D2
0002CC14 <AmiBlitz3.ab2@17093>    BNE.w JL_0_AF7C
0002CC1A <AmiBlitz3.ab2@17094>   MOVE.w regnum,D1
0002CC1E <AmiBlitz3.ab2@17095>   ORI.w #$4880,D1
0002CC22 <AmiBlitz3.ab2@17096>    BSR.w writeword
0002CC24 <AmiBlitz3.ab2@17099>   MOVE.w (A7)+,D3
0002CC28 <AmiBlitz3.ab2@17100>    BEQ.w JL_0_AF9E
0002CC2E <AmiBlitz3.ab2@17101>    MOVE.l lastinstructionaddr,a0
0002CC32 <AmiBlitz3.ab2@17102>   CMP.w #$3,D3
0002CC36 <AmiBlitz3.ab2@17103>    BNE.w JL_0_AF92
0002CC3A <AmiBlitz3.ab2@17104>   CMP.w #$4,D2
0002CC3E <AmiBlitz3.ab2@17105>    BEQ.w JL_0_AF98
0002CC40 <AmiBlitz3.ab2@17108>   CMP.w D2,D3
0002CC44 <AmiBlitz3.ab2@17109>    BLS.w JL_0_AF9E
0002CC46 <AmiBlitz3.ab2@17112>   EXG.l D2,D3
0002CC48 <AmiBlitz3.ab2@17113>   MOVE.l a0,-(a7)
0002CC4E <AmiBlitz3.ab2@17114>   TST.b typecheck
0002CC52 <AmiBlitz3.ab2@17115>   BEQ 'ok
0002CC58 <AmiBlitz3.ab2@17116>   TST.b notypecheck
0002CC5C <AmiBlitz3.ab2@17117>   BNE 'ok
0002CC62 <AmiBlitz3.ab2@17118>   MOVE.l leftsidetype,a0
0002CC6C <AmiBlitz3.ab2@17119>   CMP.l #0,leftsidetype
0002CC70 <AmiBlitz3.ab2@17120>   BEQ 'ok
0002CC78 <AmiBlitz3.ab2@17121>   CMP.l #$100,4(a0)
0002CC7C <AmiBlitz3.ab2@17122>   BLE 'ok
0002CC80 <AmiBlitz3.ab2@17123>   CMP.b #3,d3
0002CC84 <AmiBlitz3.ab2@17124>   BEQ 'ok
0002CC88 <AmiBlitz3.ab2@17125>   CMP.b #7,d3
0002CC8C <AmiBlitz3.ab2@17126>   BEQ 'ok
0002CC92 <AmiBlitz3.ab2@17127>   JMP   error_convert_types      ;for all syntax only long and string allowed to assign to a type
0002CC94 <AmiBlitz3.ab2@17129>   MOVE.l (a7)+,a0
0002CC98 <AmiBlitz3.ab2@17130>   BSR.w writeconvertcode         ;called from var assign
0002CC9C <AmiBlitz3.ab2@17133> BRA.w reget
0002CC9E <AmiBlitz3.ab2@17136>   MOVEQ.l #$00,D3
0002CCA4 <AmiBlitz3.ab2@17137>   MOVE.w regnum,D1
0002CCA8 <AmiBlitz3.ab2@17138>    BEQ.w JL_0_AFC8
0002CCAA <AmiBlitz3.ab2@17139>   SUBQ.w #1,D1
0002CCAC <AmiBlitz3.ab2@17142>      LSR.l #1,D3
0002CCB0 <AmiBlitz3.ab2@17143>      BSET #$F,D3
0002CCB4 <AmiBlitz3.ab2@17144>   DBF D1,JL_0_AFB0b
0002CCBA <AmiBlitz3.ab2@17146>    TST.b fpu
0002CCBE <AmiBlitz3.ab2@17147>    BEQ 'l1
0002CCC4 <AmiBlitz3.ab2@17148>    ADDQ.l #2,stacktrack                                    ;intern command
0002CCC6 <AmiBlitz3.ab2@17149>     MOVE.l a0,-(a7)
0002CCCC <AmiBlitz3.ab2@17150>     MOVE.l stacktrack,d1
0002CCD2 <AmiBlitz3.ab2@17151>     LEA fpustackbase,a0
0002CCD6 <AmiBlitz3.ab2@17152>     CLR.w 0(a0,d1)
0002CCDC <AmiBlitz3.ab2@17153>     CLR.w regmask
0002CCDE <AmiBlitz3.ab2@17154>     MOVE.l (a7)+,a0
0002CCE2 <AmiBlitz3.ab2@17157>   MOVE.w #$48E7,D1
0002CCE6 <AmiBlitz3.ab2@17158>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002CCE8 <AmiBlitz3.ab2@17159>   MOVE.w D3,D1
0002CCEC <AmiBlitz3.ab2@17160> BRA.w writeword
0002CCEE <AmiBlitz3.ab2@17165>   MOVEQ.l #$00,D3
0002CCF4 <AmiBlitz3.ab2@17166>   MOVE.w regnum,D1
0002CCF8 <AmiBlitz3.ab2@17167>    BEQ.w JL_0_AFC8
0002CCFA <AmiBlitz3.ab2@17168>   SUBQ.w #1,D1
0002CCFC <AmiBlitz3.ab2@17171>     LSR.l #1,D3
0002CD00 <AmiBlitz3.ab2@17172>     BSET #$F,D3
0002CD04 <AmiBlitz3.ab2@17173>   DBF D1,JL_0_AFB0
0002CD0A <AmiBlitz3.ab2@17175>    TST.b fpu
0002CD0E <AmiBlitz3.ab2@17176>    BEQ 'l1
0002CD14 <AmiBlitz3.ab2@17177>    ADDQ.l #2,stacktrack                                    ;intern command
0002CD16 <AmiBlitz3.ab2@17178>     MOVE.l a0,-(a7)
0002CD1C <AmiBlitz3.ab2@17179>     MOVE.l stacktrack,d1
0002CD22 <AmiBlitz3.ab2@17180>     LEA fpustackbase,a0
0002CD26 <AmiBlitz3.ab2@17181>     CLR.w 0(a0,d1)
0002CD2A <AmiBlitz3.ab2@17182>    CMP.b #5,(a3)                                           ;result float ?
0002CD2E <AmiBlitz3.ab2@17183>     BNE 'nofpu
0002CD38 <AmiBlitz3.ab2@17185>     MOVE.w regnum,regnumfunc
0002CD3E <AmiBlitz3.ab2@17188>   CLR.w regmask
0002CD40 <AmiBlitz3.ab2@17189>     MOVE.l (a7)+,a0
0002CD44 <AmiBlitz3.ab2@17192>   MOVE.w #$48E7,D1
0002CD48 <AmiBlitz3.ab2@17193>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002CD4A <AmiBlitz3.ab2@17194>   MOVE.w D3,D1
0002CD4E <AmiBlitz3.ab2@17195> BRA.w writeword
0002CD50 <AmiBlitz3.ab2@17198> RTS
0002CD52 <AmiBlitz3.ab2@17202>   MOVE.l D1,-(A7)
0002CD56 <AmiBlitz3.ab2@17203>   MOVE.w #$4EB9,D1
0002CD5A <AmiBlitz3.ab2@17204>    BSR.w writeword
0002CD5E <AmiBlitz3.ab2@17205>    BSR.w addoff
0002CD60 <AmiBlitz3.ab2@17206>   MOVE.l (A7)+,D1
0002CD64 <AmiBlitz3.ab2@17207> BRA.w writelong
0002CD68 <AmiBlitz3.ab2@17211>    BSR.w findproc                                          ;write function call
0002CD6C <AmiBlitz3.ab2@17212>    BEQ 'l1
0002CD72 <AmiBlitz3.ab2@17213>    TST.l unusedfunc
0002CD76 <AmiBlitz3.ab2@17214>    BEQ noprocerr
0002CD7C <AmiBlitz3.ab2@17216>    JSR gotoendsource
0002CD84 <AmiBlitz3.ab2@17219>   MOVE.l funcstruct_returntype(a2),rightsidetype
0002CD8A <AmiBlitz3.ab2@17220>   TST.l typetocast
0002CD8E <AmiBlitz3.ab2@17221>   BEQ 'nocast
0002CD98 <AmiBlitz3.ab2@17222>   MOVE.l typetocast,rightsidetype
0002CD9E <AmiBlitz3.ab2@17223>   CLR.l typetocast
0002CDA0 <AmiBlitz3.ab2@17224>   MOVE.l a1,-(a7)
0002CDA6 <AmiBlitz3.ab2@17225>   MOVE.l rightsidetype,a1
0002CDAC <AmiBlitz3.ab2@17226>   CMP.l leftsidetype,a1
0002CDB0 <AmiBlitz3.ab2@17227>   BEQ 'ok
0002CDB6 <AmiBlitz3.ab2@17228>   JMP errorconvertreturntype2
0002CDB8 <AmiBlitz3.ab2@17229> 'ok  MOVE.l (a7)+,a1
0002CDBA <AmiBlitz3.ab2@17231>   MOVEQ.l #$00,D1
0002CDBE <AmiBlitz3.ab2@17232>   MOVE.b $5(A2),D1
0002CDC4 <AmiBlitz3.ab2@17233>   MOVE.b d1,retmode
0002CDC8 <AmiBlitz3.ab2@17234>    BMI.w illprocerr
0002CDCE <AmiBlitz3.ab2@17235>    MOVE.b #1,isfunc(a2)
0002CDD0 <AmiBlitz3.ab2@17236>   MOVE.w D1,-(A7)
0002CDD2 <AmiBlitz3.ab2@17237>   MOVEQ.l #$00,D1
0002CDD6 <AmiBlitz3.ab2@17238>   MOVE.b $4(A2),D1
0002CDD8 <AmiBlitz3.ab2@17239>   LSR.w #4,D1
0002CDDC <AmiBlitz3.ab2@17240>    BEQ.w JL_0_B006
0002CDDE <AmiBlitz3.ab2@17241>   LSL.w #2,D1
0002CDE4 <AmiBlitz3.ab2@17242>   SUB.w D1,a2offset
0002CDE8 <AmiBlitz3.ab2@17245>   CMPI.w #$7,(A7)
0002CDEC <AmiBlitz3.ab2@17246>    BNE.b JL_0_B014
0002CDEE <AmiBlitz3.ab2@17247>   MOVE.l A2,-(A7)
0002CDF2 <AmiBlitz3.ab2@17248>    BSR.w makesbase
0002CDF4 <AmiBlitz3.ab2@17249>   MOVEA.l (A7)+,A2
0002CDFA <AmiBlitz3.ab2@17252>   MOVE.w sbasegot,-(A7)
0002CDFE <AmiBlitz3.ab2@17253>    BEQ.b JL_0_B020
0002CE02 <AmiBlitz3.ab2@17254>    BSR.w dopusha3
0002CE06 <AmiBlitz3.ab2@17257>   BSR.w JL_0_AFA2func
0002CE08 <AmiBlitz3.ab2@17258>   MOVE.w D3,-(A7)
0002CE0C <AmiBlitz3.ab2@17259>   MOVE.l $E(A2),D1
0002CE10 <AmiBlitz3.ab2@17260>   TST.b $20(a2)                                            ;increase if morepar
0002CE14 <AmiBlitz3.ab2@17261>   BNE 'no0par
0002CE16 <AmiBlitz3.ab2@17262>   MOVE.l a5,a4
0002CE1A <AmiBlitz3.ab2@17265>   CMP.b #$20,(a4)+
0002CE1E <AmiBlitz3.ab2@17266>   BEQ 'l1
0002CE24 <AmiBlitz3.ab2@17267>   CMP.b #"}",-1(a4)
0002CE28 <AmiBlitz3.ab2@17268>   BNE  'no0par
0002CE2A <AmiBlitz3.ab2@17269>   MOVEQ #0,d0
0002CE2E <AmiBlitz3.ab2@17272>   LEA $16(A2),A1
0002CE30 <AmiBlitz3.ab2@17275>   MOVE.l d1,-(a7)
0002CE32 <AmiBlitz3.ab2@17276>   MOVE.b (a1),d2
0002CE34 <AmiBlitz3.ab2@17277>   MOVE.l d0,d1
0002CE38 <AmiBlitz3.ab2@17278>   CMP.w #4,d2
0002CE3C <AmiBlitz3.ab2@17279>   BNE 'l1b
0002CE42 <AmiBlitz3.ab2@17280>   ADD.l #$203c,d1
0002CE46 <AmiBlitz3.ab2@17281>   BSR writeword
0002CE4C <AmiBlitz3.ab2@17282>   MOVE.l #$ffff0000,d1
0002CE50 <AmiBlitz3.ab2@17283>   BSR writelong
0002CE54 <AmiBlitz3.ab2@17284> BRA 'l2b
0002CE5A <AmiBlitz3.ab2@17287>    TST.b fpu
0002CE5E <AmiBlitz3.ab2@17288>    BNE 'l1c
0002CE62 <AmiBlitz3.ab2@17289>    CMP.w #5,d2
0002CE66 <AmiBlitz3.ab2@17290>    BNE 'l1c
0002CE6C <AmiBlitz3.ab2@17291>    ADD.l #$203c,d1
0002CE70 <AmiBlitz3.ab2@17292>    BSR writeword
0002CE76 <AmiBlitz3.ab2@17293>    MOVE.l #$800000c1,d1
0002CE7A <AmiBlitz3.ab2@17294>    BSR writelong
0002CE7E <AmiBlitz3.ab2@17295> BRA 'l2b
0002CE84 <AmiBlitz3.ab2@17298>   ADD.l #$70ff,d1
0002CE88 <AmiBlitz3.ab2@17299>   BSR writeword
0002CE8C <AmiBlitz3.ab2@17300>   CMP.w #7,d2
0002CE90 <AmiBlitz3.ab2@17301>   BNE 'l1d
0002CE96 <AmiBlitz3.ab2@17302>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002CE9A <AmiBlitz3.ab2@17303>   BSR writelong
0002CE9C <AmiBlitz3.ab2@17304>   MOVEQ #0,d1
0002CEA0 <AmiBlitz3.ab2@17305>   BSR writeword
0002CEA6 <AmiBlitz3.ab2@17306>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002CEAA <AmiBlitz3.ab2@17307>   BSR writelong
0002CEAC <AmiBlitz3.ab2@17308>   MOVEQ #0,d1
0002CEB0 <AmiBlitz3.ab2@17309>   BSR writeword
0002CEB6 <AmiBlitz3.ab2@17311> 'l1d  MOVE.l #$f23c5000,d1
0002CEB8 <AmiBlitz3.ab2@17312>   MOVE.l d0,d2
0002CEBA <AmiBlitz3.ab2@17313>   ASR.l #2,d2
0002CEBC <AmiBlitz3.ab2@17314>   ADD.l d2,d1
0002CEC0 <AmiBlitz3.ab2@17315>   BSR writelong
0002CEC4 <AmiBlitz3.ab2@17316>   MOVE.w #$ffff,d1
0002CEC8 <AmiBlitz3.ab2@17317>   BSR writeword
0002CECA <AmiBlitz3.ab2@17321>   MOVE.l (a7)+,d1
0002CECC <AmiBlitz3.ab2@17322>      ADDQ.l #1,a1
0002CED2 <AmiBlitz3.ab2@17323>      ADD.l #$0200,d0
0002CED8 <AmiBlitz3.ab2@17324>      CMP.l #$0e00,d0
0002CEDC <AmiBlitz3.ab2@17325>      BEQ syntaxerr
0002CEDE <AmiBlitz3.ab2@17326>      TST.b (a1)
0002CEE2 <AmiBlitz3.ab2@17327>      BNE 'again
0002CEE6 <AmiBlitz3.ab2@17328> BRA 'p1
0002CEEA <AmiBlitz3.ab2@17331>   TST.b $4(A2)
0002CEEE <AmiBlitz3.ab2@17332>    BNE.w JL_0_B03E
0002CEF2 <AmiBlitz3.ab2@17335>   BSR.w JL_0_AFCA
0002CEF6 <AmiBlitz3.ab2@17336>    BSR.w get1bytemain
0002CEFA <AmiBlitz3.ab2@17337> BRA.w JL_0_B06C
0002CF00 <AmiBlitz3.ab2@17341>   MOVE.w regnum,-(A7)
0002CF0A <AmiBlitz3.ab2@17342>   MOVE.w regnum,regnumfunc
0002CF0C <AmiBlitz3.ab2@17345>   MOVE.l D1,-(A7)                                          ;write functioncall with pars
0002CF14 <AmiBlitz3.ab2@17346>   MOVE.b #1,funccall
0002CF16 <AmiBlitz3.ab2@17347>   MOVEQ.l #$00,D0
0002CF1A <AmiBlitz3.ab2@17348>   MOVE.b $4(A2),D0
0002CF24 <AmiBlitz3.ab2@17349>   MOVE.w a2offset,a2offset2
0002CF2C <AmiBlitz3.ab2@17350>   MOVE.b 5(a2),retmode
0002CF32 <AmiBlitz3.ab2@17351>   MOVE.l a2,currentfunccall
0002CF36 <AmiBlitz3.ab2@17352>   LEA $16(A2),A2
0002CF3C <AmiBlitz3.ab2@17353>   CLR.w regnum
0002CF42 <AmiBlitz3.ab2@17354>   CLR.w regmask
0002CF48 <AmiBlitz3.ab2@17355>   MOVE.b isconstantvalue,-(a7)
0002CF4E <AmiBlitz3.ab2@17356>   MOVE.b funcparloop,-(a7)
0002CF56 <AmiBlitz3.ab2@17357>   MOVE.b #1,funcparloop
0002CF5C <AmiBlitz3.ab2@17358>   MOVE.l rightsidetype,-(a7)
0002CF62 <AmiBlitz3.ab2@17359>   MOVE.l leftsidetype,-(a7)                               ;store values To stack so it can work recursive
0002CF68 <AmiBlitz3.ab2@17360>   MOVE.b blitzparloop,-(a7)
0002CF6E <AmiBlitz3.ab2@17361>   CLR.b blitzparloop
0002CF74 <AmiBlitz3.ab2@17362>   JSR fetchpees2
0002CF7A <AmiBlitz3.ab2@17363>   MOVE.b (a7)+,blitzparloop
0002CF80 <AmiBlitz3.ab2@17364>   MOVE.l (a7)+,leftsidetype
0002CF86 <AmiBlitz3.ab2@17365>   MOVE.l (a7)+,rightsidetype
0002CF8C <AmiBlitz3.ab2@17366>   MOVE.b (a7)+,funcparloop
0002CF92 <AmiBlitz3.ab2@17367>   MOVE.b (a7)+,isconstantvalue
0002CF98 <AmiBlitz3.ab2@17368>   JSR chkstak
0002CF9A <AmiBlitz3.ab2@17369>   MOVE.l (A7)+,D1
0002CF9E <AmiBlitz3.ab2@17385>    BTST #0,d1
0002CFA2 <AmiBlitz3.ab2@17386>    BNE intern1
0002CFA6 <AmiBlitz3.ab2@17387>    BSR.w JL_0_AFCA
0002CFAC <AmiBlitz3.ab2@17409>   MOVE.w (A7)+,regnum
0002CFB0 <AmiBlitz3.ab2@17412>   CMP.w #"}",D0
0002CFB4 <AmiBlitz3.ab2@17413>    BNE.w errorbracketmiss2
0002CFB6 <AmiBlitz3.ab2@17414>    MOVEQ #0,d1                                            ; end of function call pars
0002CFBC <AmiBlitz3.ab2@17415>   MOVE.w regnum,D1
0002CFC0 <AmiBlitz3.ab2@17416>    BEQ.w JL_0_B08A
0002CFC6 <AmiBlitz3.ab2@17417>    TST.b fpu
0002CFCA <AmiBlitz3.ab2@17418>    BEQ 'old
0002CFD2 <AmiBlitz3.ab2@17419>    CMP.b #5,retmode
0002CFD6 <AmiBlitz3.ab2@17420>    BNE 'old
0002CFD8 <AmiBlitz3.ab2@17421>    ASL.l #7,d1
0002CFDE <AmiBlitz3.ab2@17422>    OR.l #$f2000000,d1
0002CFE2 <AmiBlitz3.ab2@17423>    BSR writelong
0002CFE6 <AmiBlitz3.ab2@17424> BRA JL_0_B08A
0002CFE8 <AmiBlitz3.ab2@17426>  'old  LSL.w #8,D1
0002CFEA <AmiBlitz3.ab2@17427>   LSL.w #1,D1
0002CFEE <AmiBlitz3.ab2@17428>   ORI.w #$2000,D1
0002CFF2 <AmiBlitz3.ab2@17429>    BSR.w writeword
0002CFF4 <AmiBlitz3.ab2@17432>    MOVE.w (A7)+,D3
0002CFF8 <AmiBlitz3.ab2@17433>    BEQ.w JL_0_B0A8
0002CFFE <AmiBlitz3.ab2@17434>    TST.b fpu
0002D002 <AmiBlitz3.ab2@17435>    BEQ 'old
0002D004 <AmiBlitz3.ab2@17436>    MOVE.l d0,-(a7)
0002D008 <AmiBlitz3.ab2@17437>    MOVE.w #8,d0
0002D00A <AmiBlitz3.ab2@17438>    MOVE.l a0,-(a7)
0002D010 <AmiBlitz3.ab2@17439>    MOVE.l stacktrack,d1
0002D016 <AmiBlitz3.ab2@17440>    LEA fpustackbase,a0
0002D01E <AmiBlitz3.ab2@17441>    MOVE.w 0(a0,d1),regmask
0002D020 <AmiBlitz3.ab2@17442>    MOVE.l (a7)+,a0
0002D024 <AmiBlitz3.ab2@17445>   BEQ 'ready
0002D02A <AmiBlitz3.ab2@17446>    BTST d0,regmask
0002D02E <AmiBlitz3.ab2@17447>    BEQ 'noa7
0002D030 <AmiBlitz3.ab2@17448>    MOVEQ #0,d1
0002D032 <AmiBlitz3.ab2@17449>    MOVE.w d0,d1
0002D034 <AmiBlitz3.ab2@17450>    SUBQ.w #1,d1
0002D036 <AmiBlitz3.ab2@17451>    ASL #7,d1
0002D03C <AmiBlitz3.ab2@17453>    OR.l #$f21f5400,d1                                      ;fmove.d (a7)+
0002D040 <AmiBlitz3.ab2@17454>    BSR writelong
0002D046 <AmiBlitz3.ab2@17455>    SUBQ.l #2,stacktrack
0002D048 <AmiBlitz3.ab2@17458>    SUBQ.w #1,d0
0002D04C <AmiBlitz3.ab2@17459>    BNE 'loop
0002D052 <AmiBlitz3.ab2@17462>   SUBQ.l #2,stacktrack                                     ;integer sub
0002D054 <AmiBlitz3.ab2@17463>   MOVE.l (a7)+,d0
0002D058 <AmiBlitz3.ab2@17466>   MOVE.w #$4CDF,D1
0002D05C <AmiBlitz3.ab2@17467>    BSR.w writeword
0002D05E <AmiBlitz3.ab2@17468>   MOVEQ.l #$00,D1
0002D060 <AmiBlitz3.ab2@17469>   MOVEQ.l #$0F,D4
0002D062 <AmiBlitz3.ab2@17472>     LSL.w #1,D3
0002D064 <AmiBlitz3.ab2@17473>     ROXR.w #1,D1
0002D068 <AmiBlitz3.ab2@17474>   DBF D4,JL_0_B09C                                         ;movem.l (a7)+,dx
0002D06C <AmiBlitz3.ab2@17476>     BSR.w writeword
0002D072 <AmiBlitz3.ab2@17477>    CLR.w regnumfunc
0002D074 <AmiBlitz3.ab2@17480>   MOVE.w (A7)+,D1
0002D078 <AmiBlitz3.ab2@17481>    BEQ.b JL_0_B0D2
0002D07C <AmiBlitz3.ab2@17482>   CMPI.w #$7,(A7)
0002D080 <AmiBlitz3.ab2@17483>    BEQ.b JL_0_B0C4
0002D086 <AmiBlitz3.ab2@17484>   LEA geta3,A0
0002D08C <AmiBlitz3.ab2@17485>   LEA numtoa0,A1
0002D090 <AmiBlitz3.ab2@17486>    BSR.w pokecode
0002D094 <AmiBlitz3.ab2@17487> BRA.b JL_0_B0CE
0002D09A <AmiBlitz3.ab2@17490>   MOVE.w deca3,D1
0002D09E <AmiBlitz3.ab2@17491>    BSR.w writeword
0002D0A2 <AmiBlitz3.ab2@17494>   BSR.w dopulla3                                           ;fix up string base
0002D0A4 <AmiBlitz3.ab2@17497>   MOVE.w (A7)+,D2                                          ;what it returns!
0002D0A8 <AmiBlitz3.ab2@17498>   CMP.w #$7,D2
0002D0AC <AmiBlitz3.ab2@17499>    BNE.w JL_0_B0EC
0002D0B2 <AmiBlitz3.ab2@17500>   MOVE.w putstlen,D1
0002D0B8 <AmiBlitz3.ab2@17501>   OR.w regnum,D1
0002D0BC <AmiBlitz3.ab2@17502>    BSR.w writeword
0002D0C0 <AmiBlitz3.ab2@17505>   BSR.w get1bytemain
0002D0C4 <AmiBlitz3.ab2@17506> BRA.w JL_0_AF66
0002D0C6 <AmiBlitz3.ab2@17510> deca3:   Dc.b $53,$4B                                      ;SUBQ.W  #1,A3
0002D0CE <AmiBlitz3.ab2@17515>   CMP.b #2,optistring
0002D0D2 <AmiBlitz3.ab2@17516>   BEQ fs2
0002D0D6 <AmiBlitz3.ab2@17517>   BSR.w makesbase                                          ;writestringvariable
0002D0DA <AmiBlitz3.ab2@17518>   BTST #$F,D2
0002D0DE <AmiBlitz3.ab2@17519>    BNE.w JL_0_B112
0002D0E4 <AmiBlitz3.ab2@17520>   MOVE.w D3,leaa5d3a2+2
0002D0EA <AmiBlitz3.ab2@17521>   MOVE.l leaa5d3a2,D1
0002D0EE <AmiBlitz3.ab2@17522>    BSR.w pokela5s
0002D0F4 <AmiBlitz3.ab2@17525>   MOVE.w regnum,D1
0002D0F6 <AmiBlitz3.ab2@17526>   LSL.w #8,D1
0002D0F8 <AmiBlitz3.ab2@17527>   LSL.w #1,D1
0002D0FC <AmiBlitz3.ab2@17528>   ORI.w #$7000,D1
0002D102 <AmiBlitz3.ab2@17529>   LEA stvarget2,A0
0002D104 <AmiBlitz3.ab2@17530>   MOVE.w D1,(A0)
0002D10A <AmiBlitz3.ab2@17531>   MOVE.w regnum,D1
0002D110 <AmiBlitz3.ab2@17532>   ANDI.w #$FFF8,$2(A0)
0002D114 <AmiBlitz3.ab2@17533>   OR.w D1,$2(A0)
0002D11A <AmiBlitz3.ab2@17534>   LEA stvarget2f,A1
0002D11E <AmiBlitz3.ab2@17535>    BSR.w pokecode
0002D122 <AmiBlitz3.ab2@17536>   MOVE.w #$C600,D1
0002D126 <AmiBlitz3.ab2@17537>    BSR.w Atokejsr
0002D128 <AmiBlitz3.ab2@17538>   MOVEQ.l #$07,D2
0002D12C <AmiBlitz3.ab2@17539> BRA.w reget
0002D132 <AmiBlitz3.ab2@17542>      TST.w stackpar
0002D136 <AmiBlitz3.ab2@17543>      BMI 'l10
0002D13C <AmiBlitz3.ab2@17544>      MOVE.l #$3f3c0007,d1
0002D142 <AmiBlitz3.ab2@17545>      ADDQ.w #2,a2offset
0002D146 <AmiBlitz3.ab2@17546>      BSR writelong
0002D14A <AmiBlitz3.ab2@17549>   MOVE.w #$4878,d1
0002D150 <AmiBlitz3.ab2@17550>      CLR.w stackpar
0002D154 <AmiBlitz3.ab2@17551>      BSR writeword
0002D158 <AmiBlitz3.ab2@17552>      MOVE.w #$0,d1
0002D15C <AmiBlitz3.ab2@17553>      BSR writeword
0002D160 <AmiBlitz3.ab2@17554>      MOVE.w #$246d,d1
0002D164 <AmiBlitz3.ab2@17555>      BSR writeword
0002D166 <AmiBlitz3.ab2@17556>      MOVE.w d3,d1
0002D16A <AmiBlitz3.ab2@17557>      BSR writeword
0002D170 <AmiBlitz3.ab2@17558>      MOVE.l #$4a926704,d1
0002D174 <AmiBlitz3.ab2@17559>      BSR writelong
0002D17A <AmiBlitz3.ab2@17560>      MOVE.l #$2eaafffc,d1
0002D17E <AmiBlitz3.ab2@17561>      BSR writelong
0002D182 <AmiBlitz3.ab2@17562>      MOVE.w #$2f0a,d1
0002D188 <AmiBlitz3.ab2@17563>      ADDQ.w #8,a2offset
0002D18C <AmiBlitz3.ab2@17564>      BSR writeword
0002D190 <AmiBlitz3.ab2@17565> BRA.w reget
0002D194 <AmiBlitz3.ab2@17568>   CMP.b #$7,D2                                             ;load basic var
0002D198 <AmiBlitz3.ab2@17569>    BEQ.w JL_0_B0F6
0002D19E <AmiBlitz3.ab2@17571>    TST.b iee
0002D1A2 <AmiBlitz3.ab2@17572>    BEQ 'noiee
0002D1A6 <AmiBlitz3.ab2@17573>    CMP.b #5,d2
0002D1AA <AmiBlitz3.ab2@17574>    BNE 'noiee
0002D1AC <AmiBlitz3.ab2@17575>    MOVE.l d0,-(a7)                                         ;fpu load var
0002D1B0 <AmiBlitz3.ab2@17576>    BTST #15,d2
0002D1B4 <AmiBlitz3.ab2@17577>    BEQ 'var
0002D1BA <AmiBlitz3.ab2@17578>    CMP.l #$7fff,d3
0002D1BE <AmiBlitz3.ab2@17579>    BGT 'longoffset
0002D1C4 <AmiBlitz3.ab2@17580>    MOVE.l #$f22a4400,d1                                    ;newtype     >32kb
0002D1C6 <AmiBlitz3.ab2@17581>    TST.w d3                                                ;offset =0
0002D1CA <AmiBlitz3.ab2@17582>    BNE 'offset
0002D1D0 <AmiBlitz3.ab2@17585>   MOVE.l #$f2124400,d1
0002D1D2 <AmiBlitz3.ab2@17586>    MOVEQ #0,d3
0002D1D6 <AmiBlitz3.ab2@17587> BRA 'glob
0002D1DC <AmiBlitz3.ab2@17590>   SUBQ.l #4,destpointer
0002D1E0 <AmiBlitz3.ab2@17591> BRA 'glob
0002D1E6 <AmiBlitz3.ab2@17594>   TST.b fast
0002D1EA <AmiBlitz3.ab2@17595>    BEQ 'nofastload
0002D1F0 <AmiBlitz3.ab2@17596>    TST.w regnum
0002D1F4 <AmiBlitz3.ab2@17597>    BNE 'nofastload
0002D1FA <AmiBlitz3.ab2@17598>    CMP.l fp0addr,a4
0002D1FE <AmiBlitz3.ab2@17599>    BNE 'nofastload
0002D204 <AmiBlitz3.ab2@17600>    MOVE.l fp0iff,d1
0002D20A <AmiBlitz3.ab2@17601>    CMP.l firstiff,d1
0002D20E <AmiBlitz3.ab2@17602>    BNE 'nofastload
0002D214 <AmiBlitz3.ab2@17603>    MOVE.w varmode,d1
0002D21A <AmiBlitz3.ab2@17604>    CMP.w fp0mode,d1
0002D21E <AmiBlitz3.ab2@17605>    BNE 'nofastload
0002D224 <AmiBlitz3.ab2@17606>    CMP.w fp0var,d3
0002D228 <AmiBlitz3.ab2@17607>    BNE 'nofastload
0002D22C <AmiBlitz3.ab2@17608>    BCLR #16,d2
0002D22E <AmiBlitz3.ab2@17609>    MOVE.l (a7)+,d0
0002D230 <AmiBlitz3.ab2@17610> RTS
0002D232 <AmiBlitz3.ab2@17613>    MOVEQ #0,d0
0002D238 <AmiBlitz3.ab2@17614>    MOVE.w regnum,d0
0002D23E <AmiBlitz3.ab2@17615>    CMP.l maxregs,d0
0002D242 <AmiBlitz3.ab2@17616>    BLE 'ok
0002D248 <AmiBlitz3.ab2@17617>    LEA cmplxerr,a0
0002D24A <AmiBlitz3.ab2@17618>   MOVE.l a0,-(a7)
0002D250 <AmiBlitz3.ab2@17619> JMP handle_compileerror
0002D256 <AmiBlitz3.ab2@17622>    LEA regtable,a4
0002D258 <AmiBlitz3.ab2@17623>    TST.l (a4)
0002D25C <AmiBlitz3.ab2@17624>    BEQ 'noreg
0002D260 <AmiBlitz3.ab2@17625>    CMP.w 0+4(a4),d3
0002D264 <AmiBlitz3.ab2@17626>    BNE 'doreg1
0002D26A <AmiBlitz3.ab2@17627>    MOVE.l #$f2001c00,d1
0002D270 <AmiBlitz3.ab2@17628>    MOVE.w regnum,d0
0002D272 <AmiBlitz3.ab2@17629>    ASL.w #7,d0
0002D274 <AmiBlitz3.ab2@17630>    OR.w d0,d1
0002D278 <AmiBlitz3.ab2@17631>    BSR writelong
0002D27A <AmiBlitz3.ab2@17632>    MOVE.l (a7)+,d0
0002D27C <AmiBlitz3.ab2@17633> RTS
0002D280 <AmiBlitz3.ab2@17636>   CMP.w 8+4(a4),d3
0002D284 <AmiBlitz3.ab2@17637>    BNE 'doreg2
0002D28A <AmiBlitz3.ab2@17638>    MOVE.l #$f2001800,d1
0002D290 <AmiBlitz3.ab2@17639>    MOVE.w regnum,d0
0002D292 <AmiBlitz3.ab2@17640>    ASL.w #7,d0
0002D294 <AmiBlitz3.ab2@17641>    OR.w d0,d1
0002D298 <AmiBlitz3.ab2@17642>    BSR writelong
0002D29A <AmiBlitz3.ab2@17643>    MOVE.l (a7)+,d0
0002D29C <AmiBlitz3.ab2@17644> RTS
0002D2A0 <AmiBlitz3.ab2@17647>   CMP.w 16+4(a4),d3
0002D2A4 <AmiBlitz3.ab2@17648>    BNE 'doreg3
0002D2AA <AmiBlitz3.ab2@17649>    MOVE.l #$f2001400,d1
0002D2B0 <AmiBlitz3.ab2@17650>    MOVE.w regnum,d0
0002D2B2 <AmiBlitz3.ab2@17651>    ASL.w #7,d0
0002D2B4 <AmiBlitz3.ab2@17652>    OR.w d0,d1
0002D2B8 <AmiBlitz3.ab2@17653>    BSR  writelong
0002D2BA <AmiBlitz3.ab2@17654>    MOVE.l (a7)+,d0
0002D2BC <AmiBlitz3.ab2@17655> RTS
0002D2C0 <AmiBlitz3.ab2@17658>   CMP.w 24+4(a4),d3
0002D2C4 <AmiBlitz3.ab2@17659>    BNE 'doreg4
0002D2CA <AmiBlitz3.ab2@17660>    MOVE.l #$f2001000,d1
0002D2D0 <AmiBlitz3.ab2@17661>    MOVE.w regnum,d0
0002D2D2 <AmiBlitz3.ab2@17662>    ASL.w #7,d0
0002D2D4 <AmiBlitz3.ab2@17663>    OR.w d0,d1
0002D2D8 <AmiBlitz3.ab2@17664>    BSR writelong
0002D2DA <AmiBlitz3.ab2@17665>    MOVE.l (a7)+,d0
0002D2DC <AmiBlitz3.ab2@17666> RTS
0002D2E0 <AmiBlitz3.ab2@17669>    CMP.w 32+4(a4),d3
0002D2E4 <AmiBlitz3.ab2@17670>    BNE 'noreg
0002D2EA <AmiBlitz3.ab2@17671>    MOVE.l #$f2000c00,d1
0002D2F0 <AmiBlitz3.ab2@17672>    MOVE.w regnum,d0
0002D2F2 <AmiBlitz3.ab2@17673>    ASL.w #7,d0
0002D2F4 <AmiBlitz3.ab2@17674>    OR.w d0,d1
0002D2F8 <AmiBlitz3.ab2@17675>    BSR writelong
0002D2FA <AmiBlitz3.ab2@17676>    MOVE.l (a7)+,d0
0002D2FC <AmiBlitz3.ab2@17677> RTS
0002D302 <AmiBlitz3.ab2@17680>    MOVE.l #$f22d4400,d1                                    ;var
0002D308 <AmiBlitz3.ab2@17681>    TST.w varmode
0002D30C <AmiBlitz3.ab2@17682>   BEQ 'glob
0002D310 <AmiBlitz3.ab2@17683>   BCLR #16,d1                                              ;local
0002D312 <AmiBlitz3.ab2@17686>    MOVEQ #0,d0
0002D318 <AmiBlitz3.ab2@17687>    MOVE.w regnum,d0
0002D31C <AmiBlitz3.ab2@17688>    CMP.w #7,d0
0002D320 <AmiBlitz3.ab2@17689>    BLE 'ok2
0002D326 <AmiBlitz3.ab2@17690>    LEA cmplxerr,a0
0002D328 <AmiBlitz3.ab2@17691>   MOVE.l a0,-(a7)
0002D32E <AmiBlitz3.ab2@17692> JMP handle_compileerror
0002D330 <AmiBlitz3.ab2@17695>      ASL.w #7,d0
0002D332 <AmiBlitz3.ab2@17696>    OR.l d0,d1
0002D33A <AmiBlitz3.ab2@17697>    CMP.l #doublecheck,8(a2)
0002D33E <AmiBlitz3.ab2@17698>    BNE 'dbl
0002D344 <AmiBlitz3.ab2@17699>    OR.l #$00001000,d1
0002D348 <AmiBlitz3.ab2@17702>   BSR writelong
0002D34A <AmiBlitz3.ab2@17703>    MOVE.l (a7)+,d0
0002D34E <AmiBlitz3.ab2@17704>    AND.w #$ff,d2
0002D350 <AmiBlitz3.ab2@17705>    MOVE.w d3,d1
0002D354 <AmiBlitz3.ab2@17706>    BEQ 'nooffs
0002D358 <AmiBlitz3.ab2@17707> BRA writeword
0002D35A <AmiBlitz3.ab2@17712> RTS
0002D360 <AmiBlitz3.ab2@17715>   MOVE.w regnum,D1
0002D366 <AmiBlitz3.ab2@17716>   MOVE.w d1,load_var_reg
0002D368 <AmiBlitz3.ab2@17717>   LSL.w #8,D1
0002D372 <AmiBlitz3.ab2@17718>   MOVE.l destpointer,load_var_addr
0002D378 <AmiBlitz3.ab2@17719>   MOVE.w d2,load_var_size
0002D37A <AmiBlitz3.ab2@17720>   LSL.w #1,D1
0002D37E <AmiBlitz3.ab2@17721>   BTST #$E,D2
0002D382 <AmiBlitz3.ab2@17722>    BNE.w JL_0_B17A
0002D384 <AmiBlitz3.ab2@17723>   TST.b D2
0002D388 <AmiBlitz3.ab2@17724>    BNE.w JL_0_B17E
0002D38A <AmiBlitz3.ab2@17725>   MOVEQ.l #$03,D2
0002D38E <AmiBlitz3.ab2@17726>   ORI.w #$200A,D1
0002D392 <AmiBlitz3.ab2@17727> BRA.w writeword
0002D396 <AmiBlitz3.ab2@17730>   MOVE.b #$3,D2
0002D39A <AmiBlitz3.ab2@17733>   BTST #$F,D2
0002D39E <AmiBlitz3.ab2@17734>    BEQ.w JL_0_B19A                                         ;loadarray
0002D3A4 <AmiBlitz3.ab2@17735>    TST.b fast                                              ;lea->move xx(a2)
0002D3A8 <AmiBlitz3.ab2@17736>    BEQ 'la10
0002D3AE <AmiBlitz3.ab2@17741>    CLR.l load_var_addr
0002D3B2 <AmiBlitz3.ab2@17742> BRA 'la10
0002D3BA <AmiBlitz3.ab2@17744>    CMP.w #$2012,movea2dn                                  ;??Looks like dead code??
0002D3BE <AmiBlitz3.ab2@17745>    BNE 'la10
0002D3C4 <AmiBlitz3.ab2@17746>    TST.b optiarray
0002D3C8 <AmiBlitz3.ab2@17747>    BNE 'la10
0002D3CE <AmiBlitz3.ab2@17748>    MOVE.l destpointer,a4
0002D3D4 <AmiBlitz3.ab2@17749>    SUB.l loada,a4
0002D3D8 <AmiBlitz3.ab2@17750>    CMP.w #4,a4
0002D3DC <AmiBlitz3.ab2@17751>    BEQ 'la100
0002D3E0 <AmiBlitz3.ab2@17752>    CMP.w #2,a4
0002D3E4 <AmiBlitz3.ab2@17753>    BNE 'la10
0002D3EA <AmiBlitz3.ab2@17754>    MOVE.l destpointer,a4
0002D3EE <AmiBlitz3.ab2@17755>    CMP.b #3,d2
0002D3F2 <AmiBlitz3.ab2@17756>    BCS 'la110
0002D3F8 <AmiBlitz3.ab2@17757>    MOVE.w #$202a,-2(a4)
0002D3FC <AmiBlitz3.ab2@17758>    OR.w d1,-2(a4)
0002D402 <AmiBlitz3.ab2@17759>    MOVE.w arrayoffset,d1
0002D406 <AmiBlitz3.ab2@17760>    BSR writeword
0002D40A <AmiBlitz3.ab2@17761> BRA JL_0_B194
0002D40E <AmiBlitz3.ab2@17764>    CMP.b #2,d2
0002D412 <AmiBlitz3.ab2@17765>    BNE 'la120
0002D418 <AmiBlitz3.ab2@17766>     MOVE.w #$302a,-2(a4)
0002D41C <AmiBlitz3.ab2@17767>    OR.w d1,-2(a4)
0002D422 <AmiBlitz3.ab2@17769>    MOVE.w arrayoffset,d1
0002D426 <AmiBlitz3.ab2@17770>    BSR writeword
0002D42A <AmiBlitz3.ab2@17771> BRA JL_0_B194
0002D42E <AmiBlitz3.ab2@17774>   CMP.b #1,d2
0002D432 <AmiBlitz3.ab2@17775>    BNE.s 'la10
0002D438 <AmiBlitz3.ab2@17776>     MOVE.w #$102a,-2(a4)
0002D43C <AmiBlitz3.ab2@17777>    OR.w d1,-2(a4)
0002D442 <AmiBlitz3.ab2@17778>    MOVE.w arrayoffset,d1
0002D446 <AmiBlitz3.ab2@17779>    BSR writeword
0002D44A <AmiBlitz3.ab2@17780> BRA JL_0_B194
0002D450 <AmiBlitz3.ab2@17783>   MOVE.l destpointer,a4
0002D456 <AmiBlitz3.ab2@17784>    CMP.w #$45ea,-2(a4)
0002D45A <AmiBlitz3.ab2@17785>    BNE 'la10
0002D45E <AmiBlitz3.ab2@17786>    CMP.b #3,d2
0002D462 <AmiBlitz3.ab2@17787>    BCS 'la11
0002D468 <AmiBlitz3.ab2@17788>    MOVE.w #$202a,-4(a4)
0002D46C <AmiBlitz3.ab2@17789>    OR.w d1,-4(a4)
0002D470 <AmiBlitz3.ab2@17790> BRA JL_0_B194
0002D474 <AmiBlitz3.ab2@17793>    CMP.b #2,d2
0002D478 <AmiBlitz3.ab2@17794>    BNE 'la12
0002D47E <AmiBlitz3.ab2@17795>     MOVE.w #$302a,-4(a4)
0002D482 <AmiBlitz3.ab2@17796>    OR.w d1,-4(a4)
0002D486 <AmiBlitz3.ab2@17797> BRA JL_0_B194
0002D48A <AmiBlitz3.ab2@17800>   CMP.b #1,d2
0002D48E <AmiBlitz3.ab2@17801>    BNE.s 'la10
0002D494 <AmiBlitz3.ab2@17802>     MOVE.w #$102a,-4(a4)
0002D498 <AmiBlitz3.ab2@17803>    OR.w d1,-4(a4)
0002D49C <AmiBlitz3.ab2@17804> BRA JL_0_B194
0002D4A2 <AmiBlitz3.ab2@17807>    OR.w movea2dn,D1
0002D4A6 <AmiBlitz3.ab2@17808>    BSR.w JL_0_B1B2
0002D4AA <AmiBlitz3.ab2@17809>    BSR.w writeword
0002D4AE <AmiBlitz3.ab2@17812>   ANDI.w #$FF,D2
0002D4B0 <AmiBlitz3.ab2@17813> RTS
0002D4B6 <AmiBlitz3.ab2@17817>    MOVE.l destpointer,a4
0002D4BE <AmiBlitz3.ab2@17818>    MOVE.l #$f22a4400,-4(a4)
0002D4C4 <AmiBlitz3.ab2@17819>    MOVE.w arrayoffset,d1
0002D4C8 <AmiBlitz3.ab2@17820> BRA writeword
0002D4CE <AmiBlitz3.ab2@17824>   OR.w moved3a5dn,D1                                        ;write move.l 0(a5),reg
0002D4D2 <AmiBlitz3.ab2@17825>    BSR.w JL_0_B1B2
0002D4D6 <AmiBlitz3.ab2@17826>    BSR.w pokewda5s
0002D4D8 <AmiBlitz3.ab2@17827>   MOVE.w D3,D1
0002D4DC <AmiBlitz3.ab2@17828>    BSR.w writeword
0002D4E0 <AmiBlitz3.ab2@17829> BRA.w JL_0_B194
0002D4E4 <AmiBlitz3.ab2@17832>   BTST #$E,D2
0002D4E8 <AmiBlitz3.ab2@17833>    BNE.w JL_0_B1CA
0002D4EC <AmiBlitz3.ab2@17834>   CMP.b #$1,D2
0002D4F0 <AmiBlitz3.ab2@17835>    BEQ.w JL_0_B1CC
0002D4F4 <AmiBlitz3.ab2@17836>   CMP.b #$2,D2
0002D4F8 <AmiBlitz3.ab2@17837>    BEQ.w JL_0_B1D2
0002D4FA <AmiBlitz3.ab2@17840> RTS
0002D4FE <AmiBlitz3.ab2@17843>   EORI.w #$3000,D1
0002D500 <AmiBlitz3.ab2@17844> RTS
0002D504 <AmiBlitz3.ab2@17847>   ORI.w #$1000,D1
0002D506 <AmiBlitz3.ab2@17848> RTS
0002D50E <AmiBlitz3.ab2@17852>   MOVE.w #$FFFF,dfetch
0002D512 <AmiBlitz3.ab2@17853>   BSR.w get1bytemain
0002D516 <AmiBlitz3.ab2@17854>   CMP.w #$2D,D0
0002D51A <AmiBlitz3.ab2@17855>    BNE.w JL_0_B206
0002D51E <AmiBlitz3.ab2@17856>   BSR.w get1bytemain
0002D522 <AmiBlitz3.ab2@17857>   BSR.w JL_0_B206
0002D526 <AmiBlitz3.ab2@17858>   CMP.w #$5,D2
0002D52A <AmiBlitz3.ab2@17859>    BCC.w JL_0_B200
0002D52C <AmiBlitz3.ab2@17860>   NEG.l D0
0002D52E <AmiBlitz3.ab2@17861> RTS
0002D534 <AmiBlitz3.ab2@17864>   TST.b fpu
0002D538 <AmiBlitz3.ab2@17865>   BEQ 'noneg
0002D53C <AmiBlitz3.ab2@17866>   fneg.x fp0
0002D53E <AmiBlitz3.ab2@17867> RTS
0002D542 <AmiBlitz3.ab2@17870>   BCHG #$7,D0
0002D544 <AmiBlitz3.ab2@17871> RTS
0002D548 <AmiBlitz3.ab2@17874>   CMP.w #$24,D0
0002D54C <AmiBlitz3.ab2@17875>    BEQ.w get_hexconstant
0002D550 <AmiBlitz3.ab2@17876>   CMP.w #$25,D0
0002D554 <AmiBlitz3.ab2@17877>    BEQ.w JL_0_A8C0
0002D558 <AmiBlitz3.ab2@17878>   CMP.w #$2E,D0
0002D55C <AmiBlitz3.ab2@17879>    BNE.w JL_0_B224
0002D55E <AmiBlitz3.ab2@17882>   MOVEQ.l #$00,D3
0002D562 <AmiBlitz3.ab2@17883> BRA.w JL_0_B272
0002D564 <AmiBlitz3.ab2@17886>   MOVEQ.l #$00,D3                                          ;number
0002D568 <AmiBlitz3.ab2@17887>    BSR.w atoi
0002D56C <AmiBlitz3.ab2@17888>   CMP.w #$2E,D0
0002D570 <AmiBlitz3.ab2@17889>    BEQ.w JL_0_B268
0002D574 <AmiBlitz3.ab2@17890>   ORI.w #$20,D0
0002D578 <AmiBlitz3.ab2@17891>   CMP.w #$65,D0
0002D57C <AmiBlitz3.ab2@17892>    BNE.w JL_0_B46E
0002D582 <AmiBlitz3.ab2@17893>   CMP.l #$800000,D3
0002D586 <AmiBlitz3.ab2@17894>    BCC.w overerr
0002D588 <AmiBlitz3.ab2@17895>   MOVEQ.l #-$01,D6
0002D58C <AmiBlitz3.ab2@17896>   fmove.l d3,fp0
0002D58E <AmiBlitz3.ab2@17897>   MOVE.l D3,D0
0002D594 <AmiBlitz3.ab2@17898>   MOVEA.l _mathffpbase,A6
0002D598 <AmiBlitz3.ab2@17899>    JSR -$24(A6)
0002D59A <AmiBlitz3.ab2@17900>   MOVE.l D0,D3
0002D59E <AmiBlitz3.ab2@17901>    BSR.w JL_0_B2E6
0002D5A2 <AmiBlitz3.ab2@17902>    BSR.w reget
0002D5A6 <AmiBlitz3.ab2@17903>    BSR.w JL_0_B480
0002D5AA <AmiBlitz3.ab2@17904> BRA.w JL_0_B3DC
0002D5AE <AmiBlitz3.ab2@17907>   CMP.b #4,d2
0002D5B2 <AmiBlitz3.ab2@17908>   BEQ 'l4
0002D5B6 <AmiBlitz3.ab2@17909>   MOVE.b #5,d2                                             ;nprint 2/0.5 bugfix
0002D5BC <AmiBlitz3.ab2@17912>    TST.b fpu
0002D5C0 <AmiBlitz3.ab2@17913>    BNE 'l1
0002D5C6 <AmiBlitz3.ab2@17914>    CMP.l #$800000,D3
0002D5CA <AmiBlitz3.ab2@17915>    BCC.w overerr
0002D5CE <AmiBlitz3.ab2@17916> BRA JL_0_B272
0002D5D4 <AmiBlitz3.ab2@17919>   CMP.l #$7fffffff,d3
0002D5D8 <AmiBlitz3.ab2@17920>     BCC.w overerr
0002D5DA <AmiBlitz3.ab2@17923>   MOVEQ.l #-$01,D6
0002D5DC <AmiBlitz3.ab2@17924>   MOVE.l D3,D0
0002D5E0 <AmiBlitz3.ab2@17925>   fmove.l d3,fp0
0002D5E6 <AmiBlitz3.ab2@17926>   MOVEA.l _mathffpbase,A6
0002D5EA <AmiBlitz3.ab2@17927>    JSR -$24(A6)                                            ;integer to ffp
0002D5EC <AmiBlitz3.ab2@17928>   MOVE.l D0,-(A7)
0002D5F0 <AmiBlitz3.ab2@17929>    BSR.w get1bytemain
0002D5F4 <AmiBlitz3.ab2@17930>    BSR.w tstnum
0002D5F8 <AmiBlitz3.ab2@17931>    BNE.w syntaxerr
0002D5FA <AmiBlitz3.ab2@17932>   MOVEQ.l #$00,D3
0002D5FE <AmiBlitz3.ab2@17933>    BSR.w atoi
0002D600 <AmiBlitz3.ab2@17934>   TST.l D3
0002D604 <AmiBlitz3.ab2@17935>    BEQ.w JL_0_B2E0
0002D60A <AmiBlitz3.ab2@17936>   TST.b fpu
0002D60E <AmiBlitz3.ab2@17937>   BNE 'l1
0002D614 <AmiBlitz3.ab2@17938>   CMP.l #$800000,D3
0002D618 <AmiBlitz3.ab2@17939>    BCC.w overerr
0002D61C <AmiBlitz3.ab2@17940> BRA 'l2
0002D622 <AmiBlitz3.ab2@17943>   CMP.l #$7fffffff,d3
0002D626 <AmiBlitz3.ab2@17944>   BCC overerr
0002D62A <AmiBlitz3.ab2@17947>   fmove.l d5,fp1
0002D62C <AmiBlitz3.ab2@17948>   MOVE.l D5,D0
0002D630 <AmiBlitz3.ab2@17949>    JSR -$24(A6)
0002D632 <AmiBlitz3.ab2@17950>   MOVE.l D0,D5
0002D636 <AmiBlitz3.ab2@17951>   fmove.l d3,fp2
0002D638 <AmiBlitz3.ab2@17952>   MOVE.l D3,D0
0002D63C <AmiBlitz3.ab2@17953>    JSR -$24(A6)
0002D640 <AmiBlitz3.ab2@17954>   fdiv.x fp1,fp2
0002D642 <AmiBlitz3.ab2@17955>   MOVE.l D5,D1
0002D646 <AmiBlitz3.ab2@17956>    JSR -$54(A6)
0002D64A <AmiBlitz3.ab2@17957>   fadd.x fp2,fp0
0002D64C <AmiBlitz3.ab2@17958>   MOVE.l (A7)+,D1
0002D650 <AmiBlitz3.ab2@17959>    JSR -$42(A6)
0002D652 <AmiBlitz3.ab2@17960>   MOVE.l D0,D3
0002D656 <AmiBlitz3.ab2@17961>    BSR.w reget
0002D65A <AmiBlitz3.ab2@17962>   ORI.w #$20,D0
0002D65E <AmiBlitz3.ab2@17963>   CMP.w #$65,D0
0002D662 <AmiBlitz3.ab2@17964>    BNE.w JL_0_B2D4
0002D666 <AmiBlitz3.ab2@17965>    BSR.w JL_0_B2E6
0002D66A <AmiBlitz3.ab2@17968>    BSR.w reget
0002D66E <AmiBlitz3.ab2@17969>    BSR.w JL_0_B480
0002D672 <AmiBlitz3.ab2@17970> BRA.w JL_0_B3DC
0002D674 <AmiBlitz3.ab2@17973>   MOVE.l (A7)+,D3
0002D678 <AmiBlitz3.ab2@17974> BRA.w JL_0_B2D4
0002D67C <AmiBlitz3.ab2@17977>   BSR.w get1bytemain
0002D680 <AmiBlitz3.ab2@17978>   CMP.w #$2B,D0
0002D684 <AmiBlitz3.ab2@17979>    BEQ.w JL_0_B30E
0002D688 <AmiBlitz3.ab2@17980>   CMP.w #$2D,D0
0002D68C <AmiBlitz3.ab2@17981>    BNE.w JL_0_B312
0002D690 <AmiBlitz3.ab2@17982>    BSR.w get1bytemain
0002D694 <AmiBlitz3.ab2@17983>    BSR.w getsign
0002D696 <AmiBlitz3.ab2@17984>   MOVE.l D3,D0
0002D69A <AmiBlitz3.ab2@17985>   fdiv.x fp1,fp0
0002D69C <AmiBlitz3.ab2@17986>   MOVE.l D4,D1
0002D6A0 <AmiBlitz3.ab2@17987>    JSR -$54(A6)
0002D6A2 <AmiBlitz3.ab2@17988>   MOVE.l D0,D3
0002D6A4 <AmiBlitz3.ab2@17989> RTS
0002D6A8 <AmiBlitz3.ab2@17992>   BSR.w get1bytemain
0002D6AC <AmiBlitz3.ab2@17995>   BSR.w getsign
0002D6B0 <AmiBlitz3.ab2@17996>   fmul.x fp1,fp0
0002D6B2 <AmiBlitz3.ab2@17997>   MOVE.l D3,D0
0002D6B4 <AmiBlitz3.ab2@17998>   MOVE.l D4,D1
0002D6B8 <AmiBlitz3.ab2@17999>    JSR -$4E(A6)
0002D6BA <AmiBlitz3.ab2@18000>   MOVE.l D0,D3
0002D6BC <AmiBlitz3.ab2@18001> RTS
0002D6C0 <AmiBlitz3.ab2@18004>   BSR.w tstnum
0002D6C4 <AmiBlitz3.ab2@18005>    BNE.w syntaxerr
0002D6C6 <AmiBlitz3.ab2@18006>   MOVE.w D0,D4
0002D6CA <AmiBlitz3.ab2@18007>   SUBI.w #$30,D4
0002D6CE <AmiBlitz3.ab2@18008>    BSR.w get1bytemain
0002D6D2 <AmiBlitz3.ab2@18009>    BSR.w tstnum
0002D6D6 <AmiBlitz3.ab2@18010>    BNE.w getsign__skip
0002D6DA <AmiBlitz3.ab2@18011>   MULU #$A,D4
0002D6DE <AmiBlitz3.ab2@18012>   SUBI.w #$30,D0
0002D6E0 <AmiBlitz3.ab2@18013>   ADD.w D0,D4
0002D6E4 <AmiBlitz3.ab2@18014>    BSR.w get1bytemain
0002D6E8 <AmiBlitz3.ab2@18017>   CMP.w #$12,D4
0002D6EC <AmiBlitz3.ab2@18018>    BHI.w overerr
0002D6EE <AmiBlitz3.ab2@18019>   LSL.w #3,D4
0002D6F4 <AmiBlitz3.ab2@18020>   LEA fputab,a0
0002D6F6 <AmiBlitz3.ab2@18021>   ADD.l d4,a0
0002D6FC <AmiBlitz3.ab2@18022>   fmove.d 0(a0),fp1
0002D6FE <AmiBlitz3.ab2@18023>   LSR.w #1,d4
0002D702 <AmiBlitz3.ab2@18024>   MOVE.l facts(PC,D4.W),D4
0002D704 <AmiBlitz3.ab2@18025> RTS
0002D74C <AmiBlitz3.ab2@18029>   Dc.d 1,10,100,1000,10000,100000,1000000,10000000,100000000  ;,1000000000,10000000000
0002D750 <AmiBlitz3.ab2@18034>   Dc.l $80000041
0002D754 <AmiBlitz3.ab2@18035>   Dc.l $A0000044
0002D758 <AmiBlitz3.ab2@18036>   Dc.l $C8000047
0002D75C <AmiBlitz3.ab2@18037>   Dc.l $FA00004A
0002D760 <AmiBlitz3.ab2@18038>   Dc.l $9C40004E
0002D764 <AmiBlitz3.ab2@18039>   Dc.l $C3500051
0002D768 <AmiBlitz3.ab2@18040>   Dc.l $F4240054
0002D76C <AmiBlitz3.ab2@18041>   Dc.l $98968058
0002D770 <AmiBlitz3.ab2@18042>   Dc.l $BEBC205B
0002D774 <AmiBlitz3.ab2@18043>   Dc.l $EE6B285E
0002D778 <AmiBlitz3.ab2@18044>   Dc.l $9502F962
0002D77C <AmiBlitz3.ab2@18045>   Dc.l $BA43B765
0002D780 <AmiBlitz3.ab2@18046>   Dc.l $E8D4A568
0002D784 <AmiBlitz3.ab2@18047>   Dc.l $9184E76C
0002D788 <AmiBlitz3.ab2@18048>   Dc.l $B5E6A96F
0002D78C <AmiBlitz3.ab2@18049>   Dc.l $E35F2972
0002D790 <AmiBlitz3.ab2@18050>   Dc.l $8E1BCA76
0002D794 <AmiBlitz3.ab2@18051>   Dc.l $B1A2BD79
0002D798 <AmiBlitz3.ab2@18052>   Dc.l $DE0B6C7C
0002D79A <AmiBlitz3.ab2@18056>   MOVEQ.l #$01,D5
0002D79C <AmiBlitz3.ab2@18059>   LSL.l #1,D5
0002D79E <AmiBlitz3.ab2@18060>   MOVE.l D5,D1
0002D7A0 <AmiBlitz3.ab2@18061>   LSL.l #2,D5
0002D7A2 <AmiBlitz3.ab2@18062>   ADD.l D1,D5                                              ;divisor for frac convert!
0002D7A4 <AmiBlitz3.ab2@18063>   LSL.l #1,D3
0002D7A8 <AmiBlitz3.ab2@18064>    BCS.w overerr
0002D7AA <AmiBlitz3.ab2@18065>   MOVE.l D3,D1
0002D7AC <AmiBlitz3.ab2@18066>   LSL.l #1,D3
0002D7B0 <AmiBlitz3.ab2@18067>    BCS.w overerr
0002D7B2 <AmiBlitz3.ab2@18068>   LSL.l #1,D3
0002D7B6 <AmiBlitz3.ab2@18069>    BCS.w overerr
0002D7B8 <AmiBlitz3.ab2@18070>   ADD.l D1,D3
0002D7BC <AmiBlitz3.ab2@18071>   SUBI.w #$30,D0
0002D7BE <AmiBlitz3.ab2@18072>   ADD.l D0,D3
0002D7EA <AmiBlitz3.ab2@18073>    !fget                                                   ;bsr.w get1bytemain
0002D7EE <AmiBlitz3.ab2@18074>    CMP.b #1,d0
0002D7F2 <AmiBlitz3.ab2@18075>    BNE 'cm1
0002D7F4 <AmiBlitz3.ab2@18076>    SUBQ.l #1,a5
0002D7F8 <AmiBlitz3.ab2@18077>    BSR get1bytemain                                        ;??wy not !fget
0002D7FC <AmiBlitz3.ab2@18080>   CMP.b #$7e,d0
0002D800 <AmiBlitz3.ab2@18081>    BNE 'cm2
0002D802 <AmiBlitz3.ab2@18082>    SUBQ.l #1,a5
0002D806 <AmiBlitz3.ab2@18083>    BSR get1bytemain
0002D808 <AmiBlitz3.ab2@18086>   TST.b d0
0002D80C <AmiBlitz3.ab2@18087>    BPL 'l10
0002D80E <AmiBlitz3.ab2@18088>    LSL.w #8,d0
0002D810 <AmiBlitz3.ab2@18089>    MOVE.b (a5)+,d0
0002D816 <AmiBlitz3.ab2@18090>    MOVE.w d0,lastchar
0002D828 <AmiBlitz3.ab2@18093>   !compare2                                                ;bsr.w tstnum ;cmake bug
0002D82C <AmiBlitz3.ab2@18094>    BEQ.w atoi__loop
0002D82E <AmiBlitz3.ab2@18095> RTS
0002D830 <AmiBlitz3.ab2@18098> dfetch:  Ds.w 1                                            ;fetching data?
0002D834 <AmiBlitz3.ab2@18102>   MOVE.w dfetch(PC),D1
0002D838 <AmiBlitz3.ab2@18103>    BEQ.w JL_0_B3EC
0002D83E <AmiBlitz3.ab2@18104>   CLR.w dfetch
0002D840 <AmiBlitz3.ab2@18105> RTS
0002D846 <AmiBlitz3.ab2@18108>   MOVE.b d2,isconstantvalue
0002D84C <AmiBlitz3.ab2@18109>   MOVE.l d0,lastconstantvalue
0002D852 <AmiBlitz3.ab2@18110>   MOVE.w d2,imm_size
0002D85C <AmiBlitz3.ab2@18111>   MOVE.w regnum,imm_reg
0002D866 <AmiBlitz3.ab2@18112>   MOVE.l destpointer,imm_addr                           ; long
0002D86A <AmiBlitz3.ab2@18113>   CMP.w #$3,D2
0002D86E <AmiBlitz3.ab2@18114>   BEQ.w JL_0_B434
0002D872 <AmiBlitz3.ab2@18115>   CMP.w #$5,D2                                          ;float
0002D876 <AmiBlitz3.ab2@18116>   BEQ.w JL_0_B434
0002D87A <AmiBlitz3.ab2@18117>   CMP.w #$1,D2
0002D87E <AmiBlitz3.ab2@18118>   BEQ.w JL_0_B418
0002D882 <AmiBlitz3.ab2@18119>   CMP.w #$2,D2
0002D886 <AmiBlitz3.ab2@18120>   BEQ.w JL_0_B418
0002D88A <AmiBlitz3.ab2@18121>   CMP.w #$4,D2
0002D88E <AmiBlitz3.ab2@18122>   BEQ.w JL_0_B434
0002D892 <AmiBlitz3.ab2@18124> BRA.w mismatcherr
0002D898 <AmiBlitz3.ab2@18127>   MOVE.w regnum,D1
0002D89A <AmiBlitz3.ab2@18128>   LSL.w #8,D1
0002D89C <AmiBlitz3.ab2@18129>   LSL.w #1,D1
0002D8A0 <AmiBlitz3.ab2@18130>   ORI.w #$303C,D1
0002D8A4 <AmiBlitz3.ab2@18131>    BSR.w writeword
0002D8A6 <AmiBlitz3.ab2@18132>   MOVE.w D0,D1
0002D8AA <AmiBlitz3.ab2@18133>    BSR.w writeword
0002D8AE <AmiBlitz3.ab2@18134> BRA.w reget
0002D8B0 <AmiBlitz3.ab2@18137>   MOVEQ #0,d1
0002D8B6 <AmiBlitz3.ab2@18138>   MOVE.w regnum,D1
0002D8BC <AmiBlitz3.ab2@18139>   TST.b fpu
0002D8C0 <AmiBlitz3.ab2@18140>   BEQ 'f1
0002D8C4 <AmiBlitz3.ab2@18141>   CMP.w #5,d2
0002D8C8 <AmiBlitz3.ab2@18142>   BEQ 'l10
0002D8CC <AmiBlitz3.ab2@18143> BRA 'f2
0002D8D2 <AmiBlitz3.ab2@18146>   TST.b iee
0002D8D6 <AmiBlitz3.ab2@18147>   BNE 'l10
0002D8D8 <AmiBlitz3.ab2@18150>   LSL.w #8,D1
0002D8DA <AmiBlitz3.ab2@18151>   LSL.w #1,D1
0002D8DE <AmiBlitz3.ab2@18152>   ORI.w #$203C,D1
0002D8E2 <AmiBlitz3.ab2@18153>    BSR.w writeword
0002D8E4 <AmiBlitz3.ab2@18154>   MOVE.l D0,D1
0002D8E8 <AmiBlitz3.ab2@18155>    BSR.w writelong
0002D8EC <AmiBlitz3.ab2@18156> BRA.w reget
0002D8EE <AmiBlitz3.ab2@18159>   MOVEQ #5,d2
0002D8F0 <AmiBlitz3.ab2@18160>   ASL.l #7,d1
0002D8F2 <AmiBlitz3.ab2@18161>   SUBQ.l #8,a7
0002D8F8 <AmiBlitz3.ab2@18166>       OR.l #$f23c4400,d1                                   ;fmove.s
0002D8FE <AmiBlitz3.ab2@18167>        fmove.s fp0,0(a7)
0002D902 <AmiBlitz3.ab2@18169>   BSR writelong
0002D904 <AmiBlitz3.ab2@18170>   MOVE.l (a7)+,d1
0002D908 <AmiBlitz3.ab2@18171>   BSR writelong
0002D90A <AmiBlitz3.ab2@18172>   MOVE.l (a7)+,d1
0002D90E <AmiBlitz3.ab2@18176> BRA.w reget
0002D910 <AmiBlitz3.ab2@18182>  MOVE.l D3,D0
0002D912 <AmiBlitz3.ab2@18183>   TST.w D6
0002D916 <AmiBlitz3.ab2@18184>    BEQ.w JL_0_B46C
0002D91C <AmiBlitz3.ab2@18185>   MOVEA.l _mathffpbase,A6
0002D920 <AmiBlitz3.ab2@18186>    JSR -$1E(A6)
0002D924 <AmiBlitz3.ab2@18187>    BVC.w JL_0_B46C
0002D926 <AmiBlitz3.ab2@18188>   ADDQ.w #4,A7
0002D92A <AmiBlitz3.ab2@18189> BRA.w JL_0_B5A0
0002D92C <AmiBlitz3.ab2@18192> RTS
0002D92E <AmiBlitz3.ab2@18196>   MOVEQ.l #$00,D6
0002D932 <AmiBlitz3.ab2@18197>    fmove.l d3,fp0
0002D936 <AmiBlitz3.ab2@18200>   BSR.w JL_0_B480
0002D93A <AmiBlitz3.ab2@18201> BRA.w JL_0_B3DC
0002D93C <AmiBlitz3.ab2@18204>   MOVE.w D2,-(A7)
0002D940 <AmiBlitz3.ab2@18205>    BSR.w JL_0_BF6A
0002D942 <AmiBlitz3.ab2@18206>   MOVE.w (A7)+,D2
0002D944 <AmiBlitz3.ab2@18209>   TST.w D2
0002D948 <AmiBlitz3.ab2@18210>    BNE.w JL_0_B498
0002D94A <AmiBlitz3.ab2@18211>   TST.w D6
0002D94E <AmiBlitz3.ab2@18212>    BEQ.w JL_0_B492
0002D950 <AmiBlitz3.ab2@18213>   MOVEQ.l #$04,D2
0002D954 <AmiBlitz3.ab2@18214> BRA.w JL_0_B510
0002D956 <AmiBlitz3.ab2@18217>   MOVEQ.l #$02,D2
0002D95A <AmiBlitz3.ab2@18218> BRA.w JL_0_B4C4
0002D95E <AmiBlitz3.ab2@18221>   CMP.w #$1,D2
0002D962 <AmiBlitz3.ab2@18222>    BEQ.w JL_0_B4C4
0002D966 <AmiBlitz3.ab2@18223>   CMP.w #$2,D2
0002D96A <AmiBlitz3.ab2@18224>    BEQ.w JL_0_B4F8
0002D96E <AmiBlitz3.ab2@18225>   CMP.w #$3,D2
0002D972 <AmiBlitz3.ab2@18226>    BEQ.w JL_0_B57A
0002D976 <AmiBlitz3.ab2@18227>   CMP.w #$4,D2
0002D97A <AmiBlitz3.ab2@18228>    BEQ.w JL_0_B506
0002D97E <AmiBlitz3.ab2@18229>   CMP.w #$5,D2
0002D982 <AmiBlitz3.ab2@18230>    BEQ.w JL_0_B586
0002D986 <AmiBlitz3.ab2@18231> BRA.w mismatcherr
0002D98A <AmiBlitz3.ab2@18234>   BSR.w JL_0_B450                                          ;bugfix if a.b=$90 bug fix
0002D990 <AmiBlitz3.ab2@18235>   CMP.l #$7f,D0
0002D994 <AmiBlitz3.ab2@18236>    BGT.w JL_0_B4DC
0002D99A <AmiBlitz3.ab2@18237>   CMP.l #$FFFFFF80,D0
0002D99E <AmiBlitz3.ab2@18238>    BGE.w JL_0_B59E
0002D9A0 <AmiBlitz3.ab2@18241>   MOVEQ.l #$02,D2                                          ;was 2 before
0002D9A6 <AmiBlitz3.ab2@18242>   CMP.l #$7fff,D0
0002D9AA <AmiBlitz3.ab2@18243>    BGT.w JL_0_B4F2
0002D9B0 <AmiBlitz3.ab2@18244>   CMP.l #$FFFF8000,D0
0002D9B4 <AmiBlitz3.ab2@18245>    BGE.w JL_0_B59E
0002D9B6 <AmiBlitz3.ab2@18248>   MOVEQ.l #$03,D2
0002D9BA <AmiBlitz3.ab2@18249> BRA.w JL_0_B59E
0002D9BC <AmiBlitz3.ab2@18275>   TST.w D6
0002D9C0 <AmiBlitz3.ab2@18276>    BNE.w JL_0_B510
0002D9C4 <AmiBlitz3.ab2@18277>    BSR.w JL_0_B450
0002D9C8 <AmiBlitz3.ab2@18278> BRA.w JL_0_B4DC
0002D9CC <AmiBlitz3.ab2@18281>   BSR.w JL_0_B450
0002D9CE <AmiBlitz3.ab2@18282>   TST.w D6
0002D9D2 <AmiBlitz3.ab2@18283>   BEQ.w JL_0_B560
0002D9D8 <AmiBlitz3.ab2@18286>   CMP.l #MaxWordSgnd,D0
0002D9DC <AmiBlitz3.ab2@18287>    BGT.w JL_0_B5A0
0002D9E2 <AmiBlitz3.ab2@18288>   CMP.l #$FFFF8000,D0
0002D9E6 <AmiBlitz3.ab2@18289>    BLT.w JL_0_B5A0
0002D9E8 <AmiBlitz3.ab2@18290>   MOVE.w D0,-(A7)
0002D9EC <AmiBlitz3.ab2@18291>    JSR -$24(A6)
0002D9EE <AmiBlitz3.ab2@18292>   MOVE.l D0,D1
0002D9F0 <AmiBlitz3.ab2@18293>   MOVE.l D3,D0
0002D9F4 <AmiBlitz3.ab2@18294>    JSR -$48(A6)
0002D9FA <AmiBlitz3.ab2@18295>   MOVE.l #$80000051,D1
0002D9FE <AmiBlitz3.ab2@18296>    JSR -$4E(A6)
0002DA02 <AmiBlitz3.ab2@18297>    JSR -$1E(A6)
0002DA06 <AmiBlitz3.ab2@18298>    BEQ.w JL_0_B55A
0002DA0C <AmiBlitz3.ab2@18299>   CMP.l #$10000,D0
0002DA10 <AmiBlitz3.ab2@18300>    BCC.w JL_0_B55A
0002DA12 <AmiBlitz3.ab2@18301>   MOVE.w D0,D1
0002DA14 <AmiBlitz3.ab2@18302>   MOVE.w (A7)+,D0
0002DA16 <AmiBlitz3.ab2@18303>   SWAP D0
0002DA18 <AmiBlitz3.ab2@18304>   MOVE.w D1,D0
0002DA1C <AmiBlitz3.ab2@18305> BRA.w JL_0_B59E
0002DA1E <AmiBlitz3.ab2@18308>   ADDQ.w #2,A7
0002DA22 <AmiBlitz3.ab2@18309> BRA.w JL_0_B5A0
0002DA28 <AmiBlitz3.ab2@18312>   CMP.l #MaxWordSgnd,D0
0002DA2C <AmiBlitz3.ab2@18313>    BGT.w JL_0_B4F2
0002DA32 <AmiBlitz3.ab2@18314>   CMP.l #$FFFF8000,D0
0002DA36 <AmiBlitz3.ab2@18315>    BLT.w JL_0_B4F2
0002DA38 <AmiBlitz3.ab2@18316>   SWAP D0
0002DA3C <AmiBlitz3.ab2@18317> BRA.w JL_0_B59E
0002DA3E <AmiBlitz3.ab2@18320>   TST.w D6
0002DA42 <AmiBlitz3.ab2@18321>   BNE.w JL_0_B5A0
0002DA44 <AmiBlitz3.ab2@18322>   MOVE.l D3,D0
0002DA48 <AmiBlitz3.ab2@18323> BRA.w JL_0_B59E
0002DA4A <AmiBlitz3.ab2@18326>   TST.w D6
0002DA4E <AmiBlitz3.ab2@18327>   BNE.w JL_0_B5A0
0002DA50 <AmiBlitz3.ab2@18328>   MOVE.l D3,D0
0002DA56 <AmiBlitz3.ab2@18329>   MOVEA.l _mathffpbase,A6
0002DA5A <AmiBlitz3.ab2@18330>   JSR -$24(A6)
0002DA5C <AmiBlitz3.ab2@18331>   MOVE.l D0,D3
0002DA60 <AmiBlitz3.ab2@18332> BRA.w JL_0_B5A0
0002DA62 <AmiBlitz3.ab2@18335> RTS
0002DA64 <AmiBlitz3.ab2@18338>   MOVEQ.l #$05,D2
0002DA66 <AmiBlitz3.ab2@18339>   MOVE.l D3,D0
0002DA68 <AmiBlitz3.ab2@18340> RTS
0002DA6C <AmiBlitz3.ab2@18344>             Ds.l 1                                         ;??Looks like unused data??
0002DA70 <AmiBlitz3.ab2@18345> pushpc:     Ds.l 1
0002DA74 <AmiBlitz3.ab2@18346> pushoff:    Ds.l 1
0002DA78 <AmiBlitz3.ab2@18347> pushdooff:  Ds.l 1
0002DA7A <AmiBlitz3.ab2@18348> pushclen:   Ds.w 1
0002DA7E <AmiBlitz3.ab2@18349> pushat:     Ds.l 1
0002DA88 <AmiBlitz3.ab2@18353>   MOVE.l destpointer,pushpc
0002DA92 <AmiBlitz3.ab2@18354>   MOVE.l hunkoffsetbase,pushoff
0002DA94 <AmiBlitz3.ab2@18355> RTS
0002DA98 <AmiBlitz3.ab2@18359>   MOVEM.l D0-D1/A0-A1,-(A7)
0002DA9E <AmiBlitz3.ab2@18360>   MOVE.l destpointer,D0
0002DAA2 <AmiBlitz3.ab2@18361>   MOVE.l pushpc(PC),D1
0002DAA8 <AmiBlitz3.ab2@18362>   MOVE.l D1,destpointer
0002DAAA <AmiBlitz3.ab2@18363>   SUB.l D1,D0
0002DAB0 <AmiBlitz3.ab2@18364>   MOVE.w D0,pushclen
0002DAB4 <AmiBlitz3.ab2@18365>    BEQ.w JL_0_B636
0002DABA <AmiBlitz3.ab2@18366>   MOVE.w dontwrite,D1
0002DABE <AmiBlitz3.ab2@18367>    BNE.w JL_0_B636
0002DAC6 <AmiBlitz3.ab2@18368>    CMP.w #1000,pushclen
0002DACA <AmiBlitz3.ab2@18369>    BGE conmemerr
0002DAD0 <AmiBlitz3.ab2@18370>    MOVE.l pushat,d0
0002DAD4 <AmiBlitz3.ab2@18371>    BNE 'nomem
0002DADA <AmiBlitz3.ab2@18372>    MOVE.l #1024,d0
0002DADC <AmiBlitz3.ab2@18373>   MOVEQ.l #$01,D1
0002DAE2 <AmiBlitz3.ab2@18374>   MOVEA.l _execbase,A6
0002DAE8 <AmiBlitz3.ab2@18375>   MOVE.l mempool,a0
0002DAEC <AmiBlitz3.ab2@18376>   JSR _AllocPooled(a6)
0002DAF2 <AmiBlitz3.ab2@18378>   MOVE.l D0,pushat
0002DAF4 <AmiBlitz3.ab2@18381>   MOVEA.l D0,A0
0002DAFA <AmiBlitz3.ab2@18382>   MOVEA.l pushpc,A1
0002DB00 <AmiBlitz3.ab2@18383>   MOVE.l A1,destpointer
0002DB06 <AmiBlitz3.ab2@18384>   MOVE.w pushclen,D0
0002DB08 <AmiBlitz3.ab2@18385>   LSR.w #1,D0
0002DB0A <AmiBlitz3.ab2@18386>   SUBQ.w #1,D0
0002DB0C <AmiBlitz3.ab2@18389>     MOVE.w (A1)+,(A0)+
0002DB10 <AmiBlitz3.ab2@18390>   DBF D0,JL_0_B626
0002DB1A <AmiBlitz3.ab2@18392>    MOVE.l hunkoffsetbase,pushdooff
0002DB1E <AmiBlitz3.ab2@18395>   MOVEM.l (A7)+,D0-D1/A0-A1
0002DB20 <AmiBlitz3.ab2@18396> RTS
0002DB24 <AmiBlitz3.ab2@18400>   MOVEM.l D0-D1/A0-A1,-(A7)
0002DB26 <AmiBlitz3.ab2@18401>   MOVEQ.l #$00,D0
0002DB2C <AmiBlitz3.ab2@18402>   MOVE.w pushclen,D0
0002DB30 <AmiBlitz3.ab2@18403>    BEQ.w JL_0_B6D8
0002DB36 <AmiBlitz3.ab2@18404>   MOVE.l destpointer,D1
0002DB3C <AmiBlitz3.ab2@18405>   ADD.l D0,destpointer
0002DB42 <AmiBlitz3.ab2@18406>   TST.w dontwrite
0002DB46 <AmiBlitz3.ab2@18407>    BNE.w JL_0_B6D8
0002DB48 <AmiBlitz3.ab2@18408>   LSR.w #1,D0
0002DB4A <AmiBlitz3.ab2@18409>   SUBQ.w #1,D0
0002DB4C <AmiBlitz3.ab2@18410>   MOVEA.l D1,A1
0002DB52 <AmiBlitz3.ab2@18411>   MOVEA.l pushat,A0
0002DB58 <AmiBlitz3.ab2@18414>     CMPA.l destbufferend,A1
0002DB5C <AmiBlitz3.ab2@18415>     BCS.w JL_0_B684
0002DB64 <AmiBlitz3.ab2@18417>     MOVE.w #$FFFF,dontwrite
0002DB68 <AmiBlitz3.ab2@18418>   BRA.w JL_0_B6D8
0002DB6A <AmiBlitz3.ab2@18421>      MOVE.w (A0)+,(A1)+                                    ;copylibcode
0002DB6E <AmiBlitz3.ab2@18422>   DBF D0,JL_0_B66E
0002DB74 <AmiBlitz3.ab2@18424>   SUB.l pushpc,D1
0002DB78 <AmiBlitz3.ab2@18425>   BEQ.w JL_0_B6C2
0002DB7E <AmiBlitz3.ab2@18426>   MOVEA.l pushdooff,A0
0002DB84 <AmiBlitz3.ab2@18429>   CMPA.l pushoff,A0
0002DB88 <AmiBlitz3.ab2@18430>   BEQ.w JL_0_B6C2
0002DB8C <AmiBlitz3.ab2@18431>   MOVEA.l $4(A0),A1
0002DB92 <AmiBlitz3.ab2@18432>   ADDA.l destbufferstart,A1
0002DB98 <AmiBlitz3.ab2@18433>   CMPA.l destbufferend,A1
0002DB9C <AmiBlitz3.ab2@18434>   BCC.w JL_0_B6BC
0002DBA0 <AmiBlitz3.ab2@18435>   ADD.l D1,$4(A0)
0002DBA2 <AmiBlitz3.ab2@18438>   MOVEA.l (A0),A0
0002DBA6 <AmiBlitz3.ab2@18439> BRA.w JL_0_B69A
0002DBAC <AmiBlitz3.ab2@18442>   MOVEA.l pushat,A1
0002DBAE <AmiBlitz3.ab2@18443>   MOVEQ.l #$00,D0
0002DBB4 <AmiBlitz3.ab2@18444>   MOVE.w pushclen,D0
0002DBBA <AmiBlitz3.ab2@18445>   MOVEA.l _execbase,A6
0002DBC0 <AmiBlitz3.ab2@18446>   MOVE.l mempool,a0
0002DBC4 <AmiBlitz3.ab2@18450>   MOVEM.l (A7)+,D0-D1/A0-A1
0002DBC6 <AmiBlitz3.ab2@18451> RTS
0002DBC8 <AmiBlitz3.ab2@18454>   MOVE.l D1,-(A7)                                          ;array mul
0002DBCA <AmiBlitz3.ab2@18455>   MOVEQ.l #$00,D2
0002DBCC <AmiBlitz3.ab2@18456>   MOVEQ.l #$0F,D3
0002DBCE <AmiBlitz3.ab2@18459>     LSL.w #1,D1
0002DBD2 <AmiBlitz3.ab2@18460>     BCC.w JL_0_B6EE
0002DBD4 <AmiBlitz3.ab2@18461>     ADDQ.w #1,D2
0002DBD6 <AmiBlitz3.ab2@18462>     MOVE.w D3,D4
0002DBDA <AmiBlitz3.ab2@18465>   DBF D3,JL_0_B6E4
0002DBDC <AmiBlitz3.ab2@18467>   SUBQ.w #1,D2
0002DBE0 <AmiBlitz3.ab2@18468>    BNE.w JL_0_B726
0002DBE2 <AmiBlitz3.ab2@18469>   ADDQ.w #4,A7
0002DBE4 <AmiBlitz3.ab2@18470>   MOVE.w D4,D1
0002DBE8 <AmiBlitz3.ab2@18471>    BEQ.w JL_0_B724
0002DBEC <AmiBlitz3.ab2@18472>   CMP.w #$8,D1
0002DBF0 <AmiBlitz3.ab2@18473>    BCS.w JL_0_B712
0002DBF4 <AmiBlitz3.ab2@18474>   SUBI.w #$8,D1
0002DBF8 <AmiBlitz3.ab2@18475>    BSR.w JL_0_B712
0002DBFA <AmiBlitz3.ab2@18476>   MOVEQ.l #$00,D1
0002DBFC <AmiBlitz3.ab2@18479>   LSL.w #8,D1
0002DBFE <AmiBlitz3.ab2@18480>   LSL.w #1,D1
0002DC02 <AmiBlitz3.ab2@18481>   ORI.w #$E188,D1
0002DC08 <AmiBlitz3.ab2@18482>   OR.w regnum,D1
0002DC0C <AmiBlitz3.ab2@18483> BRA.w writeword
0002DC0E <AmiBlitz3.ab2@18486> RTS
0002DC10 <AmiBlitz3.ab2@18489>   MOVEQ #0,d1
0002DC16 <AmiBlitz3.ab2@18490>   MOVE.w regnum,D1
0002DC18 <AmiBlitz3.ab2@18491>   LSL.l #8,D1
0002DC1A <AmiBlitz3.ab2@18493>   LSL.l #4,d1
0002DC20 <AmiBlitz3.ab2@18495>   OR.l #$4c3c0000,d1
0002DC26 <AmiBlitz3.ab2@18496>   OR.w regnum,d1
0002DC2A <AmiBlitz3.ab2@18497>   BSR.w writelong
0002DC2C <AmiBlitz3.ab2@18498>   MOVE.l (A7)+,D1
0002DC30 <AmiBlitz3.ab2@18500> BRA writelong
0002DC36 <AmiBlitz3.ab2@18503>   MOVE.l destpointer,-(A7)
0002DC38 <AmiBlitz3.ab2@18504>   MOVEQ.l #-$01,D7
0002DC3C <AmiBlitz3.ab2@18507>     BSR.w findhilib
0002DC40 <AmiBlitz3.ab2@18508>      BEQ.w JL_0_B8A4
0002DC44 <AmiBlitz3.ab2@18509>     TST.w $C(A2)
0002DC48 <AmiBlitz3.ab2@18510>      BPL.w JL_0_B746
0002DC4C <AmiBlitz3.ab2@18512>     MOVE.l $16(A2),D1
0002DC50 <AmiBlitz3.ab2@18513>     BEQ.w JL_0_B746
0002DC54 <AmiBlitz3.ab2@18515>     MOVE.w $4(A2),D1                                       ; check state in D1 and do some things
0002DC58 <AmiBlitz3.ab2@18516>     CMP.w #-$2,D1
0002DC5C <AmiBlitz3.ab2@18517>      BNE.w JL_0_B772
0002DC60 <AmiBlitz3.ab2@18518>     BSR.w makevsize
0002DC64 <AmiBlitz3.ab2@18519> BRA.w JL_0_B7FE
0002DC68 <AmiBlitz3.ab2@18522>     CMP.w #-$5C4,D1
0002DC6C <AmiBlitz3.ab2@18523>      BNE.w JL_0_B790
0002DC70 <AmiBlitz3.ab2@18524>     MOVE.w #$7000,D1
0002DC78 <AmiBlitz3.ab2@18525>     BTST #$7,autorun
0002DC7A <AmiBlitz3.ab2@18526>     SNE D1
0002DC7E <AmiBlitz3.ab2@18527>     BSR.w writeword
0002DC82 <AmiBlitz3.ab2@18528> BRA.w JL_0_B7FE
0002DC86 <AmiBlitz3.ab2@18531>     CMP.w #-$12D,D1
0002DC8A <AmiBlitz3.ab2@18532>      BNE.w JL_0_B7A0
0002DC8E <AmiBlitz3.ab2@18533>     BSR.w makessize
0002DC92 <AmiBlitz3.ab2@18534> BRA.w JL_0_B7FE
0002DC96 <AmiBlitz3.ab2@18537>     CMP.w #-$1F5,D1
0002DC9A <AmiBlitz3.ab2@18538>      BNE.w JL_0_B7C2
0002DC9E <AmiBlitz3.ab2@18539>     MOVE.w #$203C,D1
0002DCA2 <AmiBlitz3.ab2@18540>     BSR.w writeword
0002DCA6 <AmiBlitz3.ab2@18541>     BSR.w addoff
0002DCAC <AmiBlitz3.ab2@18542>     MOVE.l endop,D1
0002DCB0 <AmiBlitz3.ab2@18543>     BSR.w writelong
0002DCB4 <AmiBlitz3.ab2@18544> BRA.w JL_0_B7FE
0002DCB8 <AmiBlitz3.ab2@18547>     CMP.w #-$3E9,D1
0002DCBC <AmiBlitz3.ab2@18548>      BNE.w JL_0_B7E4
0002DCC0 <AmiBlitz3.ab2@18549>     MOVE.w #$203C,D1
0002DCC4 <AmiBlitz3.ab2@18550>     BSR.w writeword
0002DCC8 <AmiBlitz3.ab2@18551>     BSR.w addoff
0002DCCE <AmiBlitz3.ab2@18552>     MOVE.l data2at,D1
0002DCD2 <AmiBlitz3.ab2@18553>     BSR.w writelong
0002DCD6 <AmiBlitz3.ab2@18554> BRA.w JL_0_B7FE
0002DCDA <AmiBlitz3.ab2@18557>     CMP.w #$1,D1
0002DCDE <AmiBlitz3.ab2@18558>      BNE.w JL_0_B7FE
0002DCE2 <AmiBlitz3.ab2@18559>     MOVE.w #$203C,D1
0002DCE6 <AmiBlitz3.ab2@18560>     BSR.w writeword
0002DCEC <AmiBlitz3.ab2@18561>     MOVE.l ptr_seg_debugger,D1
0002DCF0 <AmiBlitz3.ab2@18562>     BSR.w writelong
0002DCF4 <AmiBlitz3.ab2@18565>     MOVE.l $16(A2),D1
0002DCFC <AmiBlitz3.ab2@18566>     MOVE.w #$FFFF,lasta6
0002DD00 <AmiBlitz3.ab2@18567>     BSR.w Amakelibsub
0002DD06 <AmiBlitz3.ab2@18568>     CMPI.w #$FFFE,$4(A2)
0002DD0A <AmiBlitz3.ab2@18569>      BNE.w JL_0_B83A
0002DD10 <AmiBlitz3.ab2@18570>     MOVE.l intdata1,D1
0002DD14 <AmiBlitz3.ab2@18571>      BEQ.w JL_0_B83A
0002DD1A <AmiBlitz3.ab2@18572>     MOVE.w putidata1,D1
0002DD1E <AmiBlitz3.ab2@18573>     BSR.w writeword
0002DD22 <AmiBlitz3.ab2@18574>     BSR.w addoff
0002DD28 <AmiBlitz3.ab2@18575>     MOVE.l intdata1,D1
0002DD2C <AmiBlitz3.ab2@18576>     BSR.w writelong
0002DD30 <AmiBlitz3.ab2@18579>     MOVE.w #$2B40,D1
0002DD34 <AmiBlitz3.ab2@18580>     TST.w $1A(A2)
0002DD38 <AmiBlitz3.ab2@18581>      BEQ.w JL_0_B746
0002DD3C <AmiBlitz3.ab2@18582>      BPL.w JL_0_B84E
0002DD40 <AmiBlitz3.ab2@18583>     MOVE.w #$3B40,D1
0002DD44 <AmiBlitz3.ab2@18586>     BSR.w writeword
0002DD48 <AmiBlitz3.ab2@18587>     MOVE.w $A(A2),D1
0002DD4C <AmiBlitz3.ab2@18588>      BSR.w writeword
0002DD52 <AmiBlitz3.ab2@18589>     CMPI.w #$FFFA,$4(A2)
0002DD56 <AmiBlitz3.ab2@18590>      BNE.w JL_0_B746
0002DD58 <AmiBlitz3.ab2@18591>     MOVE.w D7,-(A7)
0002DD5E <AmiBlitz3.ab2@18592>     MOVE.w numstatic,D4
0002DD62 <AmiBlitz3.ab2@18593>      BEQ.w JL_0_B882
0002DD68 <AmiBlitz3.ab2@18594>     MOVE.l staticdata,D3
0002DD6E <AmiBlitz3.ab2@18595>      JSR datastart
0002DD72 <AmiBlitz3.ab2@18596>     MOVE.w #$C500,D1
0002DD76 <AmiBlitz3.ab2@18597>      BSR.w tokejsr2
0002DD7C <AmiBlitz3.ab2@18600>     MOVE.w maxsused,D4
0002DD80 <AmiBlitz3.ab2@18601>      BEQ.w JL_0_B89E
0002DD86 <AmiBlitz3.ab2@18602>     MOVE.l maxsat,D3
0002DD8C <AmiBlitz3.ab2@18603>      JSR datastart
0002DD90 <AmiBlitz3.ab2@18604>     MOVE.w #$CF00,D1
0002DD94 <AmiBlitz3.ab2@18605>      BSR.w tokejsr2
0002DD96 <AmiBlitz3.ab2@18608>     MOVE.w (A7)+,D7
0002DD9A <AmiBlitz3.ab2@18609> BRA.w JL_0_B746
0002DDA0 <AmiBlitz3.ab2@18612>   MOVE.l destpointer,D1
0002DDA2 <AmiBlitz3.ab2@18613>   CMP.l (A7),D1
0002DDA6 <AmiBlitz3.ab2@18614>    BNE.w JL_0_B8BC
0002DDAE <AmiBlitz3.ab2@18615>   MOVE.w #$0008,noinits+2
0002DDB2 <AmiBlitz3.ab2@18616> BRA.w JL_0_B8E6
0002DDB8 <AmiBlitz3.ab2@18619>   CLR.w noinits+2
0002DDBE <AmiBlitz3.ab2@18620>   MOVE.w dontwrite,D1
0002DDC2 <AmiBlitz3.ab2@18621>    BNE.w JL_0_B8DE
0002DDC8 <AmiBlitz3.ab2@18622>   TST.l newinitaddr
0002DDCC <AmiBlitz3.ab2@18623>    BEQ 'l10
0002DDD2 <AmiBlitz3.ab2@18624>   MOVE.l newinitaddr,D2
0002DDD8 <AmiBlitz3.ab2@18625>   SUB.l destbufferstart,D2
0002DDDA <AmiBlitz3.ab2@18626>   ADDQ.l #2,d2
0002DDE0 <AmiBlitz3.ab2@18627>   MOVEA.l newinitaddr,A0                                   ;write newinitcode
0002DDE4 <AmiBlitz3.ab2@18629>   MOVE.w #$4EB9,(A0)+
0002DDE6 <AmiBlitz3.ab2@18630>   MOVE.l (A7),(A0)+
0002DDEA <AmiBlitz3.ab2@18632> BRA 'l20
0002DDF0 <AmiBlitz3.ab2@18635>   MOVEA.l destbufferstart,A0                               ;write initcode
0002DDF6 <AmiBlitz3.ab2@18636>   TST.b saved0
0002DDFA <AmiBlitz3.ab2@18637>   BEQ 'l1
0002DDFE <AmiBlitz3.ab2@18638>   MOVE.w #$23c0,(a0)+
0002DE00 <AmiBlitz3.ab2@18639>   MOVE.l a0,a1
0002DE02 <AmiBlitz3.ab2@18640>   ADDQ.l #6,a1
0002DE04 <AmiBlitz3.ab2@18641>   MOVE.l a1,(a0)+
0002DE06 <AmiBlitz3.ab2@18642>   MOVEQ.l #$02,D2
0002DE0A <AmiBlitz3.ab2@18643>   BSR.w addhunkoffset
0002DE0E <AmiBlitz3.ab2@18644>   MOVE.w #$6004,(a0)+
0002DE14 <AmiBlitz3.ab2@18645>   MOVE.l #$4e714e71,(a0)+
0002DE18 <AmiBlitz3.ab2@18648>   MOVE.w #$4EB9,(A0)+
0002DE1A <AmiBlitz3.ab2@18649>   MOVE.l (A7),(A0)+
0002DE1C <AmiBlitz3.ab2@18650>   MOVEQ #2,d2
0002DE22 <AmiBlitz3.ab2@18651>   TST.b saved0
0002DE26 <AmiBlitz3.ab2@18652>   BEQ 'l20
0002DE28 <AmiBlitz3.ab2@18653>   MOVEQ.l #14,D2
0002DE2C <AmiBlitz3.ab2@18656>   BSR.w addhunkoffset
0002DE30 <AmiBlitz3.ab2@18657>   MOVE.w #$2039,(a0)+
0002DE32 <AmiBlitz3.ab2@18658>   MOVE.l a1,(a0)+
0002DE34 <AmiBlitz3.ab2@18659>   MOVEQ.l #20,d2
0002DE38 <AmiBlitz3.ab2@18662>   BSR.w addhunkoffset
0002DE3C <AmiBlitz3.ab2@18665>   MOVE.w #$4E75,D1
0002DE40 <AmiBlitz3.ab2@18666>   BSR.w writeword
0002DE42 <AmiBlitz3.ab2@18669>   ADDQ.w #4,A7
0002DE44 <AmiBlitz3.ab2@18670> RTS
0002DE48 <AmiBlitz3.ab2@18675>   Dc.b $22,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D1
0002DE4E <AmiBlitz3.ab2@18677>   Dc.b $23,$CD,$00,$00,$00,$00                             ;MOVE.L  A5,$00000000
0002DE54 <AmiBlitz3.ab2@18679>   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0002DE5A <AmiBlitz3.ab2@18684>   MOVE.l stringbuffer,D1
0002DE5E <AmiBlitz3.ab2@18685> BRA.w makesize
0002DE60 <AmiBlitz3.ab2@18688>   MOVEQ.l #$00,D1
0002DE66 <AmiBlitz3.ab2@18689>   MOVE.w globalvarpointer,D1
0002DE6A <AmiBlitz3.ab2@18690>   SUBI.w #$8000,D1
0002DE6E <AmiBlitz3.ab2@18691>   BNE.w makesize
0002DE70 <AmiBlitz3.ab2@18692>     MOVEQ.l #$08,D1
0002DE72 <AmiBlitz3.ab2@18695>   MOVE.l D1,-(A7)
0002DE76 <AmiBlitz3.ab2@18696>   MOVE.w #$203C,D1
0002DE7A <AmiBlitz3.ab2@18697>   BSR.w writeword
0002DE7C <AmiBlitz3.ab2@18698>   MOVE.l (A7)+,D1
0002DE80 <AmiBlitz3.ab2@18699> BRA.w writelong
0002DE82 <AmiBlitz3.ab2@18707>   MOVEQ.l #$00,D1
0002DE88 <AmiBlitz3.ab2@18708>   MOVEA.l libpointer,A1
0002DE8C <AmiBlitz3.ab2@18711>     CMPA.w #$0,A1
0002DE90 <AmiBlitz3.ab2@18712>     BEQ.w findhilib__done
0002DE94 <AmiBlitz3.ab2@18713>       CMP.w $4(A1),D7
0002DE98 <AmiBlitz3.ab2@18714>       BLS.w findhilib__next
0002DE9C <AmiBlitz3.ab2@18715>         CMP.w $4(A1),D1
0002DEA0 <AmiBlitz3.ab2@18716>         BCC.w findhilib__next
0002DEA4 <AmiBlitz3.ab2@18717>           MOVE.w $4(A1),D1
0002DEA6 <AmiBlitz3.ab2@18718>           MOVEA.l A1,A2
0002DEA8 <AmiBlitz3.ab2@18721>     MOVEA.l (A1),A1
0002DEAC <AmiBlitz3.ab2@18722> BRA.w findhilib__loop
0002DEAE <AmiBlitz3.ab2@18725>   MOVE.w D1,D7
0002DEB0 <AmiBlitz3.ab2@18726> RTS
0002DEB2 <AmiBlitz3.ab2@18734>   MOVEQ.l #-$01,D1
0002DEB8 <AmiBlitz3.ab2@18735>   MOVEA.l libpointer,A1
0002DEBC <AmiBlitz3.ab2@18738>     CMPA.w #$0,A1
0002DEC0 <AmiBlitz3.ab2@18739>      BEQ.w findlolib__done
0002DEC4 <AmiBlitz3.ab2@18740>     CMP.w $4(A1),D7
0002DEC8 <AmiBlitz3.ab2@18741>      BCC.w findlolib__next
0002DECC <AmiBlitz3.ab2@18742>     CMP.w $4(A1),D1
0002DED0 <AmiBlitz3.ab2@18743>      BLS.w findlolib__next
0002DED4 <AmiBlitz3.ab2@18744>     MOVE.w $4(A1),D1
0002DED6 <AmiBlitz3.ab2@18745>     MOVEA.l A1,A2
0002DED8 <AmiBlitz3.ab2@18748>     MOVEA.l (A1),A1
0002DEDC <AmiBlitz3.ab2@18749> BRA.w findlolib__loop
0002DEDE <AmiBlitz3.ab2@18752>   MOVE.w D1,D7
0002DEE2 <AmiBlitz3.ab2@18753>   CMP.w #-$1,D1
0002DEE4 <AmiBlitz3.ab2@18754> RTS
0002DEEA <AmiBlitz3.ab2@18758>   ADDQ.w #1,globalvarpointer
0002DEF2 <AmiBlitz3.ab2@18759>   BCLR #$0,globalvarpointer+1
0002DEF4 <AmiBlitz3.ab2@18760>   MOVEQ.l #$00,D7
0002DEF8 <AmiBlitz3.ab2@18763>     BSR.w findlolib
0002DEFC <AmiBlitz3.ab2@18764>     BEQ.w JL_0_BA74
0002DF00 <AmiBlitz3.ab2@18765>     TST.w $C(A2)
0002DF04 <AmiBlitz3.ab2@18766>     BPL.w JL_0_B99A
0002DF06 <AmiBlitz3.ab2@18767>     MOVEA.l A2,A1
0002DF0A <AmiBlitz3.ab2@18768>     ADDA.l $12(A1),A1
0002DF0E <AmiBlitz3.ab2@18769>     TST.w -$2(A1)
0002DF12 <AmiBlitz3.ab2@18770>     BEQ.w JL_0_BA34
0002DF16 <AmiBlitz3.ab2@18771>     MOVE.l -$A(A1),D1
0002DF1A <AmiBlitz3.ab2@18772>     LEA $6(A2,D1.L),A3
0002DF1C <AmiBlitz3.ab2@18775>       TST.w (A3)+
0002DF20 <AmiBlitz3.ab2@18776>       BEQ.w JL_0_B9CC
0002DF22 <AmiBlitz3.ab2@18777>         ADDQ.w #2,A3
0002DF26 <AmiBlitz3.ab2@18778> BRA.w JL_0_B9C0
0002DF2A <AmiBlitz3.ab2@18781>     TST.l $4(A3)
0002DF2E <AmiBlitz3.ab2@18782>     BEQ.w JL_0_BA34
0002DF32 <AmiBlitz3.ab2@18783>       MOVE.w freemax(PC),D1
0002DF36 <AmiBlitz3.ab2@18784>       BSR.w writeword
0002DF3A <AmiBlitz3.ab2@18785>       MOVE.w -$4(A1),D1
0002DF3E <AmiBlitz3.ab2@18786>       BSR.w writeword
0002DF44 <AmiBlitz3.ab2@18787>       MOVE.l free,D1
0002DF48 <AmiBlitz3.ab2@18788>       MOVE.w -$6(A1),D1
0002DF4C <AmiBlitz3.ab2@18789>       BSR.w writelong
0002DF52 <AmiBlitz3.ab2@18790>       MOVE.l destpointer,-(A7)
0002DF54 <AmiBlitz3.ab2@18791>       MOVEQ.l #$01,D1
0002DF58 <AmiBlitz3.ab2@18792>       MOVE.w -$2(A1),D2
0002DF5A <AmiBlitz3.ab2@18793>       LSL.w D2,D1
0002DF5C <AmiBlitz3.ab2@18794>       MOVE.w D1,-(A7)
0002DF60 <AmiBlitz3.ab2@18795>       MOVE.l -$A(A1),D1
0002DF64 <AmiBlitz3.ab2@18796>       BSR.w Amakelibsub
0002DF68 <AmiBlitz3.ab2@18797>       MOVE.w freemax3(PC),D1
0002DF6C <AmiBlitz3.ab2@18798>       BSR.w writeword
0002DF6E <AmiBlitz3.ab2@18799>       MOVE.w (A7)+,D1
0002DF72 <AmiBlitz3.ab2@18800>       BSR.w writeword
0002DF76 <AmiBlitz3.ab2@18801>       MOVE.l freemax2(PC),D1
0002DF7A <AmiBlitz3.ab2@18802>       BSR.w writelong
0002DF7C <AmiBlitz3.ab2@18803>       MOVE.l (A7)+,D1
0002DF82 <AmiBlitz3.ab2@18804>       SUB.l destpointer,D1
0002DF86 <AmiBlitz3.ab2@18805>       BSR.w writeword
0002DF8A <AmiBlitz3.ab2@18806>       MOVE.w freemax4(PC),D1
0002DF8E <AmiBlitz3.ab2@18807>       BSR.w writeword
0002DF92 <AmiBlitz3.ab2@18810>     MOVE.l $1C(A2),D1
0002DF96 <AmiBlitz3.ab2@18811>     BEQ.w JL_0_B99A
0002DF9A <AmiBlitz3.ab2@18813>     MOVE.w $4(A2),D1
0002DF9E <AmiBlitz3.ab2@18814>     CMP.w #-$2,D1
0002DFA2 <AmiBlitz3.ab2@18815>     BNE.w JL_0_BA50
0002DFA6 <AmiBlitz3.ab2@18816>       BSR.w makevsize
0002DFAA <AmiBlitz3.ab2@18817> BRA.w JL_0_BA60
0002DFAE <AmiBlitz3.ab2@18820>     CMP.w #-$12D,D1
0002DFB2 <AmiBlitz3.ab2@18821>     BNE.w JL_0_BA60
0002DFB6 <AmiBlitz3.ab2@18822>       BSR.w makessize
0002DFBA <AmiBlitz3.ab2@18823> BRA.w JL_0_BA60
0002DFBE <AmiBlitz3.ab2@18826>     MOVE.l $1C(A2),D1
0002DFC6 <AmiBlitz3.ab2@18827>     MOVE.w #$FFFF,lasta6
0002DFCA <AmiBlitz3.ab2@18828>     BSR.w Amakelibsub
0002DFCE <AmiBlitz3.ab2@18829> BRA.w JL_0_B99A
0002DFD0 <AmiBlitz3.ab2@18832> RTS
0002DFD4 <AmiBlitz3.ab2@18836> freemax:   Dc.b $3F,$3C,$00,$00                            ;MOVE.W  #$0000,-(A7)
0002DFD6 <AmiBlitz3.ab2@18838> freemax2:  Dc.b $53,$57                                    ;SUBQ.W  #1,(A7)
0002DFDA <AmiBlitz3.ab2@18839>            Dc.b $66,$00,$FF,$FC                            ;BNE.W freemax2
0002DFDC <AmiBlitz3.ab2@18840> freemax4:  Dc.b $54,$4F                                    ;ADDQ.W  #2,A7
0002DFE0 <AmiBlitz3.ab2@18841> freemax3:  Dc.b $47,$EB,$00,$00                            ;LEA $0000(A3),A3
0002DFE6 <AmiBlitz3.ab2@18846>   TST.b debugmode
0002DFEA <AmiBlitz3.ab2@18847>    BEQ.b chkstak__skip
0002DFF0 <AmiBlitz3.ab2@18848>   TST.w debugversion
0002DFF4 <AmiBlitz3.ab2@18849>    BNE.b chkstak__skip
0002DFF8 <AmiBlitz3.ab2@18850>   MOVE.w #$C308,D1
0002DFFC <AmiBlitz3.ab2@18851> BRA.w Atokejsr
0002DFFE <AmiBlitz3.ab2@18854> RTS
0002E006 <AmiBlitz3.ab2@18858>   MOVE.w #$FFFF,lasta6
0002E00A <AmiBlitz3.ab2@18863>   MOVEM.l D0-d7/A0-a6,-(A7)
0002E012 <AmiBlitz3.ab2@18864>   MOVE.b #1,nostringopt
0002E018 <AmiBlitz3.ab2@18865>   JSR searchinstr
0002E01A <AmiBlitz3.ab2@18866>   MOVE.l A3,D1
0002E01C <AmiBlitz3.ab2@18867>   SUB.l A2,D1
0002E020 <AmiBlitz3.ab2@18868>   BSR.w Amakelibsub
0002E024 <AmiBlitz3.ab2@18869>   MOVEM.l (A7)+,d0-d7/a0-a6
0002E026 <AmiBlitz3.ab2@18870> RTS
0002E02C <AmiBlitz3.ab2@18877>   MOVE.l libisat,-(A7)                                   ;library write
0002E032 <AmiBlitz3.ab2@18878>   MOVE.l A2,libisat
0002E034 <AmiBlitz3.ab2@18880>   MOVEA.l A1,A2
0002E036 <AmiBlitz3.ab2@18881>   MOVE.w (A2)+,D1
0002E03C <AmiBlitz3.ab2@18882>   MOVE.l a2,lastinstructionaddr
0002E040 <AmiBlitz3.ab2@18883>   ANDI.w #$FF,D1
0002E042 <AmiBlitz3.ab2@18884>   ADDA.w D1,A2
0002E044 <AmiBlitz3.ab2@18885>   EXG.l D0,A2
0002E046 <AmiBlitz3.ab2@18886>   ADDQ.l #1,D0
0002E04A <AmiBlitz3.ab2@18887>   BCLR #$0,D0
0002E04C <AmiBlitz3.ab2@18888>   EXG.l D0,A2
0002E050 <AmiBlitz3.ab2@18889> BRA.w JL_0_BB08
0002E056 <AmiBlitz3.ab2@18893>   MOVE.l libisat,-(A7)
0002E05C <AmiBlitz3.ab2@18894>   MOVE.l A2,libisat
0002E05E <AmiBlitz3.ab2@18895>   MOVEA.l A3,A2
0002E062 <AmiBlitz3.ab2@18896> BRA.w JL_0_BB08
0002E064 <AmiBlitz3.ab2@18900>   MOVE.l a1,-(a7)
0002E066 <AmiBlitz3.ab2@18903>   MOVE.l d0,a0
0002E06A <AmiBlitz3.ab2@18904>   MOVE.l $a(a0),d0
0002E06C <AmiBlitz3.ab2@18905>   MOVE.l d0,a1
0002E074 <AmiBlitz3.ab2@18906>   CMP.l #8,4(a1)
0002E078 <AmiBlitz3.ab2@18907>   BLE 'norec
0002E07A <AmiBlitz3.ab2@18908>   MOVE.l a0,-(a7)
0002E080 <AmiBlitz3.ab2@18909>   MOVE.l typebase,-(a7)
0002E082 <AmiBlitz3.ab2@18910>   MOVEQ #0,d0
0002E086 <AmiBlitz3.ab2@18911>   MOVE.w 4(a0),d0
0002E08C <AmiBlitz3.ab2@18912>   ADD.l d0,typebase
0002E090 <AmiBlitz3.ab2@18913>   MOVE.l $4(a1),d0
0002E094 <AmiBlitz3.ab2@18914>   BSR scantype
0002E09A <AmiBlitz3.ab2@18915>   MOVE.l (a7)+,typebase
0002E09C <AmiBlitz3.ab2@18916>   MOVE.l (a7)+,a0
0002E0A2 <AmiBlitz3.ab2@18919>   CMP.l #newtype_string,d0
0002E0A6 <AmiBlitz3.ab2@18920>   BNE 'nostring
0002E0AC <AmiBlitz3.ab2@18921>   ADDQ #2,a2offset
0002E0B2 <AmiBlitz3.ab2@18922>   MOVE.l #$3f3c0000,d1
0002E0B4 <AmiBlitz3.ab2@18923>   MOVEQ #0,d0
0002E0B8 <AmiBlitz3.ab2@18924>   MOVE.w 4(a0),d0
0002E0BE <AmiBlitz3.ab2@18925>   ADD.l typebase,d0
0002E0C0 <AmiBlitz3.ab2@18926>   MOVE.w d0,d1
0002E0C4 <AmiBlitz3.ab2@18927>   BSR writelong
0002E0CA <AmiBlitz3.ab2@18928>   TST.b debugmode
0002E0CE <AmiBlitz3.ab2@18929>   BEQ 'l1a
0002E0D0 <AmiBlitz3.ab2@18930>   MOVE.l d1,-(a7)
0002E0D6 <AmiBlitz3.ab2@18931>   MOVE.l #$c308,d1
0002E0DC <AmiBlitz3.ab2@18932>   JSR Atokejsr
0002E0DE <AmiBlitz3.ab2@18933>   MOVE.l (a7)+,d1
0002E0E2 <AmiBlitz3.ab2@18936>   TST.w 8(a0)
0002E0E6 <AmiBlitz3.ab2@18937>   BEQ 'nostring
0002E0EA <AmiBlitz3.ab2@18938>   MOVEM.l d2/d3,-(a7)
0002E0EC <AmiBlitz3.ab2@18939>   MOVE.l d1,d2
0002E0EE <AmiBlitz3.ab2@18940>   MOVEQ #0,d3
0002E0F2 <AmiBlitz3.ab2@18941>   MOVE.w 8(a0),d3
0002E0F4 <AmiBlitz3.ab2@18942>   SUBQ.l #1,d3
0002E0F8 <AmiBlitz3.ab2@18943>   BEQ 'nostring2
0002E0FA <AmiBlitz3.ab2@18946>   ADDQ.l #4,d2
0002E0FC <AmiBlitz3.ab2@18947>   MOVE.l d2,d1
0002E100 <AmiBlitz3.ab2@18948>   BSR writelong
0002E106 <AmiBlitz3.ab2@18949>   TST.b debugmode
0002E10A <AmiBlitz3.ab2@18950>   BEQ 'l1
0002E110 <AmiBlitz3.ab2@18951>   MOVE.l #$c308,d1
0002E116 <AmiBlitz3.ab2@18952>   JSR Atokejsr
0002E11C <AmiBlitz3.ab2@18955>   ADDQ #2,a2offset
0002E11E <AmiBlitz3.ab2@18956>   SUBQ.l #1,d3
0002E122 <AmiBlitz3.ab2@18957>   BNE 'loop
0002E126 <AmiBlitz3.ab2@18960>   MOVEM.l (a7)+,d2/d3
0002E128 <AmiBlitz3.ab2@18963>   MOVE.l (a0),d0
0002E12C <AmiBlitz3.ab2@18964>   BNE 'more
0002E12E <AmiBlitz3.ab2@18965>   MOVE.l (a7)+,a1
0002E130 <AmiBlitz3.ab2@18966> RTS
0002E134 <AmiBlitz3.ab2@18969> libisat:   Ds.l 1
0002E13A <AmiBlitz3.ab2@18975>   MOVE.l libisat,-(A7)                                   
0002E140 <AmiBlitz3.ab2@18976>   MOVE.l A2,libisat
0002E144 <AmiBlitz3.ab2@18977>   LEA $6(A2,D1.L),A2
0002E14C <AmiBlitz3.ab2@18981>   CMP.l #$3e19436c,$1c-8(a2)                               ;clear type
0002E150 <AmiBlitz3.ab2@18982>   BEQ 'dowritevar
0002E158 <AmiBlitz3.ab2@18983>   CMP.l #$3e18436f,$1c-8(a2)                               ;copy type
0002E15C <AmiBlitz3.ab2@18984>   BEQ 'dowritevar
0002E164 <AmiBlitz3.ab2@18985>   CMP.l #$3e175265,$1c(a2)
0002E168 <AmiBlitz3.ab2@18986>   BEQ 'dowritevar
0002E170 <AmiBlitz3.ab2@18987>   CMP.l #$3e165772,$1c(a2)
0002E174 <AmiBlitz3.ab2@18988>   BNE 'nowritef
0002E178 <AmiBlitz3.ab2@18991>   MOVEM.l a0-a2/d2,-(a7)
0002E17A <AmiBlitz3.ab2@18992>   MOVEQ #0,d1
0002E184 <AmiBlitz3.ab2@18993>   MOVE.l #0,typebase
0002E188 <AmiBlitz3.ab2@18994>   MOVE.l $a(a3),a0
0002E18C <AmiBlitz3.ab2@18995>   MOVE.l $4(a0),d0
0002E192 <AmiBlitz3.ab2@18996>   CMP.l #8,d0
0002E196 <AmiBlitz3.ab2@18997>   BLE 'notype
0002E19A <AmiBlitz3.ab2@18998>   BSR scantype
0002E1A0 <AmiBlitz3.ab2@19001>   MOVE.l #$3f3c0000,d1
0002E1A6 <AmiBlitz3.ab2@19002>   MOVE.w a2offset,d1
0002E1AA <AmiBlitz3.ab2@19003>   BSR writelong
0002E1B0 <AmiBlitz3.ab2@19004>   MOVE.l #$3f3c0000,d1
0002E1B4 <AmiBlitz3.ab2@19005>   MOVE.l $a(a3),a0
0002E1B8 <AmiBlitz3.ab2@19006>   MOVE.w 8(a0),d1
0002E1BC <AmiBlitz3.ab2@19007>   BSR writelong
0002E1C2 <AmiBlitz3.ab2@19008>   MOVE.l #$3f3cab12,d1
0002E1C6 <AmiBlitz3.ab2@19009>   BSR writelong
0002E1CC <AmiBlitz3.ab2@19010>   ADDQ.w #6,a2offset
0002E1D0 <AmiBlitz3.ab2@19011>   MOVEM.l (a7)+,a0-a2/d2
0002E1D6 <AmiBlitz3.ab2@19014>   TST.b fpu
0002E1DA <AmiBlitz3.ab2@19015>   BEQ 'nofpu2
0002E1E2 <AmiBlitz3.ab2@19016>   CMP.l #$496e7400,$1a(a2)
0002E1E6 <AmiBlitz3.ab2@19017>   BNE 'noint
0002E1E8 <AmiBlitz3.ab2@19018>   MOVEQ #0,d1
0002E1EE <AmiBlitz3.ab2@19019>   SUBQ.l #8,destpointer                                    ;fpu int
0002E1F4 <AmiBlitz3.ab2@19020>   CLR.w a2offset
0002E1F8 <AmiBlitz3.ab2@19021>   CMP.b #2,d2
0002E1FC <AmiBlitz3.ab2@19022>   BGT 'noword
0002E200 <AmiBlitz3.ab2@19023>   MOVE.w #$48c0,d1
0002E206 <AmiBlitz3.ab2@19024>   OR.w regnumstore,d1
0002E20A <AmiBlitz3.ab2@19025>   BSR writeword
0002E20E <AmiBlitz3.ab2@19026> BRA 'exit2
0002E212 <AmiBlitz3.ab2@19029>    CMP.b #3,d2
0002E216 <AmiBlitz3.ab2@19030>         BNE 'nolong
0002E21A <AmiBlitz3.ab2@19031> BRA 'exit2
0002E21E <AmiBlitz3.ab2@19034>    CMP.b #4,d2
0002E222 <AmiBlitz3.ab2@19035>         BNE 'noquick
0002E226 <AmiBlitz3.ab2@19036>         MOVE.w #$e080,d1
0002E22C <AmiBlitz3.ab2@19037>         OR.w regnumstore,d1
0002E230 <AmiBlitz3.ab2@19038>         BSR writeword
0002E234 <AmiBlitz3.ab2@19039>         MOVE.w #$e080,d1
0002E23A <AmiBlitz3.ab2@19040>         OR.w regnumstore,d1
0002E23E <AmiBlitz3.ab2@19041>         BSR writeword
0002E242 <AmiBlitz3.ab2@19042> BRA 'exit2
0002E244 <AmiBlitz3.ab2@19045>         MOVEQ #0,d0
0002E246 <AmiBlitz3.ab2@19046>         MOVEQ #0,d1
0002E24C <AmiBlitz3.ab2@19047>         MOVE.w regnumstore,d0
0002E24E <AmiBlitz3.ab2@19048>         ASL.l #7,d0
0002E254 <AmiBlitz3.ab2@19049>         OR.l #$f23c4428,d1                                 ;fsub.s 0.5,fpx
0002E256 <AmiBlitz3.ab2@19050>         OR.l d0,d1
0002E25C <AmiBlitz3.ab2@19052>         MOVE.l #$3f000000,d1
0002E25E <AmiBlitz3.ab2@19054>         MOVEQ #0,d0
0002E260 <AmiBlitz3.ab2@19055>         MOVEQ #0,d1
0002E266 <AmiBlitz3.ab2@19056>         MOVE.w regnumstore,d0
0002E268 <AmiBlitz3.ab2@19057>         ASL.l #7,d0
0002E26A <AmiBlitz3.ab2@19058>         MOVE.l d0,d1
0002E270 <AmiBlitz3.ab2@19059>         OR.l #$f2000003,d1                                 ;fintrz fpx
0002E272 <AmiBlitz3.ab2@19060>         ASL.l #3,d0
0002E274 <AmiBlitz3.ab2@19061>         OR.l d0,d1
0002E278 <AmiBlitz3.ab2@19062>         BSR writelong
0002E27A <AmiBlitz3.ab2@19063>         MOVEQ #0,d0
0002E280 <AmiBlitz3.ab2@19064>         MOVE.w regnumstore,d0
0002E282 <AmiBlitz3.ab2@19065>         ASL.l #7,d0
0002E288 <AmiBlitz3.ab2@19066>         MOVE.l #$f2006000,d1                               ;fmove.l fp0,d0
0002E28A <AmiBlitz3.ab2@19067>         OR.l d0,d1
0002E28C <AmiBlitz3.ab2@19068>         ASL.l #1,d0
0002E28E <AmiBlitz3.ab2@19069>         ASL.l #8,d0
0002E290 <AmiBlitz3.ab2@19070>         OR.l d0,d1
0002E294 <AmiBlitz3.ab2@19071> BRA 'exit
0002E29A <AmiBlitz3.ab2@19074>   CMP.w #$3c01,24(a2)
0002E29E <AmiBlitz3.ab2@19075>   BNE 'noval
0002E2A0 <AmiBlitz3.ab2@19076>   MOVE.l a2,-(a7)
0002E2A4 <AmiBlitz3.ab2@19077>   BSR.w JL_0_BB14
0002E2A6 <AmiBlitz3.ab2@19078>   MOVE.l (a7)+,a2
0002E2AA <AmiBlitz3.ab2@19079> BRA 'exit2
0002E2B2 <AmiBlitz3.ab2@19096>   CMP.l #$41627300,$1a(a2)
0002E2B6 <AmiBlitz3.ab2@19097>   BNE 'noabs
0002E2B8 <AmiBlitz3.ab2@19098>   MOVEQ #0,d1
0002E2BE <AmiBlitz3.ab2@19099>   MOVE.w regnumstore,d1
0002E2C0 <AmiBlitz3.ab2@19100>   MOVE.w d1,d0
0002E2C2 <AmiBlitz3.ab2@19101>   ASL.w #7,d1
0002E2C4 <AmiBlitz3.ab2@19102>   ASL.w #8,d0
0002E2C6 <AmiBlitz3.ab2@19103>   ASL.w #2,d0
0002E2C8 <AmiBlitz3.ab2@19104>   OR.w d0,d1
0002E2CE <AmiBlitz3.ab2@19105>   SUBQ.l #8,destpointer                                    ;fpu abs
0002E2D2 <AmiBlitz3.ab2@19106>   MOVEM.l d3/d1,-(a7)
0002E2D6 <AmiBlitz3.ab2@19107>   MOVE.w #5,d3
0002E2D8 <AmiBlitz3.ab2@19108>   EXG d2,d3
0002E2DE <AmiBlitz3.ab2@19109>   MOVE.w regnum,-(a7)
0002E2E8 <AmiBlitz3.ab2@19110>   MOVE.w regnumstore,regnum
0002E2EC <AmiBlitz3.ab2@19111>   BSR writeconvertcode
0002E2F2 <AmiBlitz3.ab2@19112>   MOVE.w (a7)+,regnum
0002E2F4 <AmiBlitz3.ab2@19113>   EXG d2,d3
0002E2F8 <AmiBlitz3.ab2@19114>   MOVEM.l (a7)+,d3/d1
0002E2FE <AmiBlitz3.ab2@19115>   OR.l #$f2000018,d1
0002E304 <AmiBlitz3.ab2@19116>   CLR.w a2offset
0002E308 <AmiBlitz3.ab2@19117> BRA 'exit
0002E30C <AmiBlitz3.ab2@19120>   CMP.b #5,d2
0002E310 <AmiBlitz3.ab2@19121>   BNE 'nofpu2
0002E314 <AmiBlitz3.ab2@19122>   MOVE.b 24(a2),d0
0002E318 <AmiBlitz3.ab2@19123>   CMP.b #$60,d0                                            ;nolib $edxx
0002E31C <AmiBlitz3.ab2@19124>   BNE 'nofpu
0002E31E <AmiBlitz3.ab2@19125>   MOVEQ #0,d1
0002E324 <AmiBlitz3.ab2@19126>   MOVE.w regnumstore,d1
0002E326 <AmiBlitz3.ab2@19127>   MOVE.w d1,d0
0002E328 <AmiBlitz3.ab2@19128>   ASL.w #7,d1
0002E32A <AmiBlitz3.ab2@19129>   ASL.w #8,d0
0002E32C <AmiBlitz3.ab2@19130>   ASL.w #2,d0
0002E32E <AmiBlitz3.ab2@19131>   OR.w d0,d1
0002E332 <AmiBlitz3.ab2@19132>   MOVE.b 25(a2),d0
0002E336 <AmiBlitz3.ab2@19133>   CMP.b #5,d0
0002E33A <AmiBlitz3.ab2@19134>   BNE 'nocos
0002E340 <AmiBlitz3.ab2@19135>   OR.l #$f200001d,d1                                       ;fpu cos
0002E344 <AmiBlitz3.ab2@19136> BRA 'exit
0002E348 <AmiBlitz3.ab2@19139>   CMP.b #$c,d0
0002E34C <AmiBlitz3.ab2@19140>   BNE 'nosqr
0002E352 <AmiBlitz3.ab2@19141>   OR.l #$f2000004,d1                                       ;fpu sqr
0002E356 <AmiBlitz3.ab2@19142> BRA 'exit
0002E35A <AmiBlitz3.ab2@19145>   CMP.b #$d,d0
0002E35E <AmiBlitz3.ab2@19146>   BNE 'notan
0002E364 <AmiBlitz3.ab2@19147>   OR.l #$f200000f,d1                                       ;fpu tan
0002E368 <AmiBlitz3.ab2@19148> BRA 'exit
0002E36C <AmiBlitz3.ab2@19151>   CMP.b #$a,d0
0002E370 <AmiBlitz3.ab2@19152>   BNE 'nosin
0002E376 <AmiBlitz3.ab2@19153>   OR.l #$f200000e,d1                                       ;fpu sin
0002E37A <AmiBlitz3.ab2@19154> BRA 'exit
0002E37E <AmiBlitz3.ab2@19157>   CMP.b #$3,d0
0002E382 <AmiBlitz3.ab2@19158>   BNE 'noasin
0002E388 <AmiBlitz3.ab2@19159>   OR.l #$f200000c,d1                                       ;fpu asin
0002E38C <AmiBlitz3.ab2@19160> BRA 'exit
0002E390 <AmiBlitz3.ab2@19163>   CMP.b #$2,d0
0002E394 <AmiBlitz3.ab2@19164>   BNE 'noacos
0002E39A <AmiBlitz3.ab2@19165>   OR.l #$f200001c,d1                                       ;fpu acos
0002E39E <AmiBlitz3.ab2@19166> BRA 'exit
0002E3A2 <AmiBlitz3.ab2@19169>   CMP.b #$4,d0
0002E3A6 <AmiBlitz3.ab2@19170>   BNE 'noatan
0002E3AC <AmiBlitz3.ab2@19171>   OR.l #$f200000a,d1                                       ;fpu atan
0002E3B0 <AmiBlitz3.ab2@19172> BRA 'exit
0002E3B4 <AmiBlitz3.ab2@19175>   CMP.b #$e,d0
0002E3B8 <AmiBlitz3.ab2@19176>   BNE 'nohtan
0002E3BE <AmiBlitz3.ab2@19177>   OR.l #$f2000009,d1                                       ;fpu htan
0002E3C2 <AmiBlitz3.ab2@19178> BRA 'exit
0002E3C6 <AmiBlitz3.ab2@19181>   CMP.b #$6,d0
0002E3CA <AmiBlitz3.ab2@19182>   BNE 'nohcos
0002E3D0 <AmiBlitz3.ab2@19183>   OR.l #$f2000019,d1                                       ;fpu hcos
0002E3D4 <AmiBlitz3.ab2@19184> BRA 'exit
0002E3D8 <AmiBlitz3.ab2@19187>   CMP.b #$b,d0
0002E3DC <AmiBlitz3.ab2@19188>   BNE 'nohsin
0002E3E2 <AmiBlitz3.ab2@19189>   OR.l #$f2000002,d1                                       ;fpu hsin
0002E3E6 <AmiBlitz3.ab2@19190> BRA 'exit
0002E3EA <AmiBlitz3.ab2@19193>   CMP.b #$9,d0
0002E3EE <AmiBlitz3.ab2@19194>   BNE 'nolog
0002E3F4 <AmiBlitz3.ab2@19195>   OR.l #$f2000014,d1                                       ;fpu log
0002E3F8 <AmiBlitz3.ab2@19196> BRA 'exit
0002E3FC <AmiBlitz3.ab2@19199>   CMP.b #$8,d0
0002E400 <AmiBlitz3.ab2@19200>   BNE 'nolog10
0002E406 <AmiBlitz3.ab2@19201>   OR.l #$f2000015,d1                                       ;fpu log10
0002E40A <AmiBlitz3.ab2@19202> BRA 'exit
0002E40E <AmiBlitz3.ab2@19205>   CMP.b #$7,d0
0002E412 <AmiBlitz3.ab2@19206>   BNE 'noexp
0002E418 <AmiBlitz3.ab2@19207>   OR.l #$f2000010,d1                                       ;fpu exp
0002E41C <AmiBlitz3.ab2@19208> BRA 'exit
0002E422 <AmiBlitz3.ab2@19211>   LEA fpuerr,a0
0002E424 <AmiBlitz3.ab2@19212>   MOVE.l a0,-(a7)
0002E42A <AmiBlitz3.ab2@19213> JMP handle_compileerror
0002E42E <AmiBlitz3.ab2@19217>   CMP.b #$3c,d0
0002E432 <AmiBlitz3.ab2@19218>   BNE 'nofpu2
0002E434 <AmiBlitz3.ab2@19219>   MOVEQ #0,d1
0002E43A <AmiBlitz3.ab2@19220>       MOVE.w regnumstore,d1
0002E43C <AmiBlitz3.ab2@19221>       MOVE.w d1,d0
0002E43E <AmiBlitz3.ab2@19222>       ASL.w #7,d1
0002E440 <AmiBlitz3.ab2@19223>       ASL.w #8,d0
0002E442 <AmiBlitz3.ab2@19224>       ASL.w #2,d0
0002E444 <AmiBlitz3.ab2@19225>       OR.w d0,d1
0002E44A <AmiBlitz3.ab2@19226>       CMP.b #$03,25(a2)
0002E44E <AmiBlitz3.ab2@19227>       BNE 'nosgn
0002E454 <AmiBlitz3.ab2@19230>       SUBQ.l #8,destpointer                                ;fpu sgn
0002E45A <AmiBlitz3.ab2@19231>         OR.l #$f200003a,d1
0002E45E <AmiBlitz3.ab2@19232>         BSR writelong
0002E464 <AmiBlitz3.ab2@19233>         CLR.w a2offset
0002E46A <AmiBlitz3.ab2@19234>          MOVE.l #$F28E0006,d1
0002E46E <AmiBlitz3.ab2@19235>          BSR writelong
0002E474 <AmiBlitz3.ab2@19236>   MOVE.l #$7000600a,d1
0002E478 <AmiBlitz3.ab2@19237>   BSR writelong
0002E47E <AmiBlitz3.ab2@19238>   MOVE.l #$70014840,d1
0002E482 <AmiBlitz3.ab2@19239>   BSR writelong
0002E488 <AmiBlitz3.ab2@19240>   MOVE.l #$F292,d1
0002E48C <AmiBlitz3.ab2@19241>   BSR writeword
0002E492 <AmiBlitz3.ab2@19242>   MOVE.l #$000470FF,d1
0002E496 <AmiBlitz3.ab2@19243> BRA 'exit
0002E49E <AmiBlitz3.ab2@19246>   CMP.l #"Frac",$1a(a2)
0002E4A2 <AmiBlitz3.ab2@19247>   BNE 'nofrac
0002E4A8 <AmiBlitz3.ab2@19248> JMP notwork
0002E4AC <AmiBlitz3.ab2@19289> BRA 'exit
0002E4B0 <AmiBlitz3.ab2@19293>   BSR.w JL_0_BB14                                          ;write lib code
0002E4B6 <AmiBlitz3.ab2@19294>   MOVE.l (A7)+,libisat
0002E4B8 <AmiBlitz3.ab2@19295> RTS
0002E4BC <AmiBlitz3.ab2@19298>   BSR writelong
0002E4C2 <AmiBlitz3.ab2@19301>   MOVE.l (A7)+,libisat
0002E4C4 <AmiBlitz3.ab2@19302> RTS
0002E4C8 <AmiBlitz3.ab2@19306>   BSR.w fetchregs
0002E4CE <AmiBlitz3.ab2@19307>   TST.b debugmode
0002E4D2 <AmiBlitz3.ab2@19308>    BEQ.w JL_0_BB76
0002E4D4 <AmiBlitz3.ab2@19309>   MOVE.l (A2),D1
0002E4D8 <AmiBlitz3.ab2@19310>   OR.l $8(A2),D1
0002E4DC <AmiBlitz3.ab2@19311>   BCLR #$0,D1
0002E4DE <AmiBlitz3.ab2@19312>   TST.l D1
0002E4E2 <AmiBlitz3.ab2@19313>    BEQ.w JL_0_BB76
0002E4E4 <AmiBlitz3.ab2@19314>   MOVE.l (A2)+,D1
0002E4E8 <AmiBlitz3.ab2@19315>   BTST #$0,D1
0002E4EC <AmiBlitz3.ab2@19316>    BEQ.w JL_0_BB60
0002E4F2 <AmiBlitz3.ab2@19317>   TST.w blitzmode
0002E4F6 <AmiBlitz3.ab2@19318>    BPL.w blitzerr
0002E4FC <AmiBlitz3.ab2@19319>   TST.b debugmode
0002E500 <AmiBlitz3.ab2@19320>    BEQ.w JL_0_BB5C
0002E502 <AmiBlitz3.ab2@19321>   MOVE.l D1,-(A7)
0002E506 <AmiBlitz3.ab2@19322>   MOVE.w #$C311,D1
0002E50A <AmiBlitz3.ab2@19323>    BSR.w makebtst
0002E50C <AmiBlitz3.ab2@19324>   MOVE.l (A7)+,D1
0002E510 <AmiBlitz3.ab2@19327>   BCLR #$0,D1
0002E512 <AmiBlitz3.ab2@19330>   TST.l D1
0002E516 <AmiBlitz3.ab2@19331>    BSR.w JL_0_BBC6
0002E518 <AmiBlitz3.ab2@19332>   MOVE.l (A2)+,D1
0002E51C <AmiBlitz3.ab2@19333>    BSR.w JL_0_BB98
0002E51E <AmiBlitz3.ab2@19334>   MOVE.l (A2)+,D1
0002E522 <AmiBlitz3.ab2@19335>    BSR.w JL_0_BBC6
0002E526 <AmiBlitz3.ab2@19336> BRA.w JL_0_BB90
0002E52C <AmiBlitz3.ab2@19339>   BTST #$0,$3(A2)
0002E530 <AmiBlitz3.ab2@19340>    BEQ.w JL_0_BB88
0002E534 <AmiBlitz3.ab2@19341>   MOVE.w blitzmode(PC),D1
0002E538 <AmiBlitz3.ab2@19342>    BPL.w blitzerr
0002E53C <AmiBlitz3.ab2@19345>   MOVE.l $4(A2),D1
0002E540 <AmiBlitz3.ab2@19346>    BSR.w JL_0_BB98
0002E546 <AmiBlitz3.ab2@19349>   MOVEA.l libisat,A2
0002E548 <AmiBlitz3.ab2@19350> RTS
0002E54C <AmiBlitz3.ab2@19353>   BTST #$0,D1
0002E550 <AmiBlitz3.ab2@19354>    BEQ.w JL_0_BBC4
0002E556 <AmiBlitz3.ab2@19355>   TST.w blitzmode
0002E55A <AmiBlitz3.ab2@19356>    BMI.w amigaerr
0002E560 <AmiBlitz3.ab2@19357>   TST.b debugmode
0002E564 <AmiBlitz3.ab2@19358>    BEQ.w JL_0_BBC0
0002E566 <AmiBlitz3.ab2@19359>   MOVE.l D1,-(A7)
0002E56A <AmiBlitz3.ab2@19360>   MOVE.w #$C312,D1
0002E56E <AmiBlitz3.ab2@19361>    BSR.w makebtst
0002E570 <AmiBlitz3.ab2@19362>   MOVE.l (A7)+,D1
0002E574 <AmiBlitz3.ab2@19365>   BCLR #$0,D1
0002E576 <AmiBlitz3.ab2@19368>   TST.l D1
0002E57A <AmiBlitz3.ab2@19371>    BEQ.w JL_0_BBD2
0002E57C <AmiBlitz3.ab2@19372>   MOVE.l A1,-(A7)
0002E580 <AmiBlitz3.ab2@19373>    BSR.w JL_0_BBD4
0002E582 <AmiBlitz3.ab2@19374>   MOVEA.l (A7)+,A1
0002E584 <AmiBlitz3.ab2@19377> RTS
0002E58A <AmiBlitz3.ab2@19380>   MOVEA.l libisat,A0
0002E590 <AmiBlitz3.ab2@19381>   TST.w cfetchmode
0002E594 <AmiBlitz3.ab2@19382>    BEQ.w JL_0_BBF6
0002E596 <AmiBlitz3.ab2@19383>   ADD.l A0,D1
0002E598 <AmiBlitz3.ab2@19384>   MOVE.l D1,-(A7)
0002E59C <AmiBlitz3.ab2@19385>   MOVE.w #$4EB9,D1
0002E5A0 <AmiBlitz3.ab2@19386>    BSR.w writeword
0002E5A2 <AmiBlitz3.ab2@19387>   MOVE.l (A7)+,D1
0002E5A6 <AmiBlitz3.ab2@19388> BRA.w writelong
0002E5AA <AmiBlitz3.ab2@19391>   LEA $0(A0,D1.L),A1
0002E5B0 <AmiBlitz3.ab2@19392>   CLR.w inline
0002E5B4 <AmiBlitz3.ab2@19395>   CMPI.b #$A0,(A1)+
0002E5B8 <AmiBlitz3.ab2@19396>    BNE.w JL_0_BC68
0002E5BA <AmiBlitz3.ab2@19397>   TST.b (A1)+
0002E5BE <AmiBlitz3.ab2@19398>    BEQ.w JL_0_BC18
0002E5C4 <AmiBlitz3.ab2@19399>   CMPI.b #$1,-$1(A1)
0002E5C8 <AmiBlitz3.ab2@19400>    BEQ.w JL_0_BC24
0002E5CE <AmiBlitz3.ab2@19403>   MOVE.w (A1)+,inline
0002E5D0 <AmiBlitz3.ab2@19404>   ADDQ.l #4,D1
0002E5D4 <AmiBlitz3.ab2@19405> BRA.w JL_0_BC00
0002E5DA <AmiBlitz3.ab2@19408>   TST.w blitzmode
0002E5DE <AmiBlitz3.ab2@19409>    BPL.w JL_0_BC4A
0002E5E4 <AmiBlitz3.ab2@19410>   TST.b debugmode
0002E5E8 <AmiBlitz3.ab2@19411>    BEQ.w JL_0_BC40
0002E5EC <AmiBlitz3.ab2@19412>   MOVE.w #$C311,D1
0002E5F0 <AmiBlitz3.ab2@19413>    BSR.w makebtst
0002E5F2 <AmiBlitz3.ab2@19416>   MOVE.l (A1)+,D1
0002E5F6 <AmiBlitz3.ab2@19417>   LEA $0(A0,D1.L),A1
0002E5FA <AmiBlitz3.ab2@19418> BRA.w JL_0_BC00
0002E600 <AmiBlitz3.ab2@19421>   TST.b debugmode
0002E604 <AmiBlitz3.ab2@19422>    BEQ.w JL_0_BC60
0002E606 <AmiBlitz3.ab2@19423>   MOVE.l D1,-(A7)
0002E60A <AmiBlitz3.ab2@19424>   MOVE.w #$C312,D1
0002E60E <AmiBlitz3.ab2@19425>    BSR.w makebtst
0002E610 <AmiBlitz3.ab2@19426>   MOVE.l (A7)+,D1
0002E612 <AmiBlitz3.ab2@19429>   ADDQ.w #4,A1
0002E614 <AmiBlitz3.ab2@19430>   ADDQ.l #6,D1
0002E618 <AmiBlitz3.ab2@19431> BRA.w JL_0_BC00
0002E61E <AmiBlitz3.ab2@19434>   TST.w inline
0002E622 <AmiBlitz3.ab2@19435>    BEQ.w JL_0_BC7E
0002E624 <AmiBlitz3.ab2@19436>   SUBQ.w #1,A1
0002E626 <AmiBlitz3.ab2@19437>   MOVEA.l A1,A0
0002E62A <AmiBlitz3.ab2@19438>   ADDA.w inline(PC),A1
0002E62E <AmiBlitz3.ab2@19439> BRA.w pokecode2
0002E632 <AmiBlitz3.ab2@19442>   MOVEM.l a0/D1,-(A7)
0002E638 <AmiBlitz3.ab2@19443>   TST.w debugversion
0002E63C <AmiBlitz3.ab2@19444>   BEQ 'l11
0002E644 <AmiBlitz3.ab2@19445>   BTST #$7,link_debuginfo
0002E648 <AmiBlitz3.ab2@19446>   BEQ.w 'l11
0002E64E <AmiBlitz3.ab2@19447>   MOVE.l lastinstruction,d1
0002E652 <AmiBlitz3.ab2@19448>   BEQ 'l11
0002E658 <AmiBlitz3.ab2@19449>   CLR.l lastinstruction
0002E65E <AmiBlitz3.ab2@19450>   CMP.l #$e000,d1
0002E662 <AmiBlitz3.ab2@19451>   BGE 'ln99
0002E668 <AmiBlitz3.ab2@19452>   LEA notf,a0
0002E66E <AmiBlitz3.ab2@19453>   CMP.l #$c601,d1
0002E672 <AmiBlitz3.ab2@19454>   BNE 'ln1
0002E678 <AmiBlitz3.ab2@19455>   LEA strcpy,a0
0002E67C <AmiBlitz3.ab2@19456> BRA 'ln3
0002E682 <AmiBlitz3.ab2@19459>   CMP.l #$c700,d1
0002E686 <AmiBlitz3.ab2@19460>   BNE 'ln2
0002E68C <AmiBlitz3.ab2@19461>   LEA strvar,a0
0002E690 <AmiBlitz3.ab2@19462> BRA 'ln3
0002E696 <AmiBlitz3.ab2@19465>   CMP.l #$ce00,d1
0002E69A <AmiBlitz3.ab2@19466>   BNE 'ln4
0002E6A0 <AmiBlitz3.ab2@19467>   LEA strcmp,a0
0002E6A4 <AmiBlitz3.ab2@19468> BRA 'ln3
0002E6AA <AmiBlitz3.ab2@19471>   CMP.l #$ca00,d1
0002E6AE <AmiBlitz3.ab2@19472>   BNE 'ln5
0002E6B4 <AmiBlitz3.ab2@19473>   LEA qmul,a0
0002E6B8 <AmiBlitz3.ab2@19474> BRA 'ln3
0002E6BE <AmiBlitz3.ab2@19477>   CMP.l #$d000,d1
0002E6C2 <AmiBlitz3.ab2@19478>      BNE 'ln6
0002E6C8 <AmiBlitz3.ab2@19479>      LEA _MaxLen,a0
0002E6CC <AmiBlitz3.ab2@19480> BRA 'ln3
0002E6D2 <AmiBlitz3.ab2@19483>   CMP.l #$cb00,d1
0002E6D6 <AmiBlitz3.ab2@19484>   BNE 'ln3
0002E6DC <AmiBlitz3.ab2@19485>   LEA qdiv,a0
0002E6E0 <AmiBlitz3.ab2@19486> BRA 'ln3
0002E6E2 <AmiBlitz3.ab2@19489>   MOVE.l d1,a0
0002E6E6 <AmiBlitz3.ab2@19490>   LEA $8(a0),a0
0002E6EA <AmiBlitz3.ab2@19493>   CMP.w #$ffff,(a0)+
0002E6EE <AmiBlitz3.ab2@19494>   BNE 'l1
0002E6F2 <AmiBlitz3.ab2@19495>   LEA 6(a0),a0
0002E6F6 <AmiBlitz3.ab2@19498>   MOVEM.l a1/a2/d7/d2,-(a7)
0002E6F8 <AmiBlitz3.ab2@19499>   MOVEQ #0,d2
0002E6FE <AmiBlitz3.ab2@19500>   LEA ptr_parameterstore,a1
0002E700 <AmiBlitz3.ab2@19503>   ADDQ.l #1,d2
0002E702 <AmiBlitz3.ab2@19504>   MOVE.b (a0)+,d0
0002E706 <AmiBlitz3.ab2@19505> 
0002E70A <AmiBlitz3.ab2@19506>   BNE 'nodollar
0002E70E <AmiBlitz3.ab2@19507>   MOVE.b #"S",d0
0002E712 <AmiBlitz3.ab2@19509>   CMP.b #"?",d0
0002E716 <AmiBlitz3.ab2@19510>   BEQ 'nolabelwrite
0002E718 <AmiBlitz3.ab2@19511>   MOVE.b d0,(a1)+
0002E71C <AmiBlitz3.ab2@19512>   BNE 'l2
0002E722 <AmiBlitz3.ab2@19513>   MOVE.w #"__",-1(a1)
0002E724 <AmiBlitz3.ab2@19514>   ADDQ.l #2,d2
0002E728 <AmiBlitz3.ab2@19515>   CLR.b 1(a1)
0002E72E <AmiBlitz3.ab2@19516>   JSR findlabel2
0002E732 <AmiBlitz3.ab2@19517>   BEQ 'l3
0002E738 <AmiBlitz3.ab2@19518>   JSR addlabelhash
0002E73C <AmiBlitz3.ab2@19521>   CLR.l 4(a2)
0002E740 <AmiBlitz3.ab2@19522>   MOVE.l $14(a7),a0
0002E744 <AmiBlitz3.ab2@19523>   MOVE.l $10(a7),d1
0002E748 <AmiBlitz3.ab2@19524>   SUB.l $12(a0),d1
0002E74C <AmiBlitz3.ab2@19525>   ADD.l $28(a0),d1
0002E750 <AmiBlitz3.ab2@19526>   MOVE.l d1,8(a2)
0002E754 <AmiBlitz3.ab2@19527> 'nolabelwrite MOVEM.l (a7)+,a1/a2/d7/d2
0002E75A <AmiBlitz3.ab2@19530>   TST.b typecheck
0002E75E <AmiBlitz3.ab2@19531>   BEQ 'p1
0002E764 <AmiBlitz3.ab2@19532>   MOVE.l lasttoken,d1
0002E76A <AmiBlitz3.ab2@19533>   CMP.l #$da01,d1                                          ;poke
0002E76E <AmiBlitz3.ab2@19534>   BEQ 'lp1
0002E774 <AmiBlitz3.ab2@19535>   CMP.l #$da02,d1                                          ;peek
0002E778 <AmiBlitz3.ab2@19536>   BNE 'p1
0002E77E <AmiBlitz3.ab2@19539>   TST.b peekaddrsize
0002E782 <AmiBlitz3.ab2@19540>   BEQ 'p1
0002E78A <AmiBlitz3.ab2@19541>   CMP.b #3,peekaddrsize
0002E78E <AmiBlitz3.ab2@19542>   BNE errormsg_onlylong
0002E794 <AmiBlitz3.ab2@19543>   CLR.b peekaddrsize
0002E79A <AmiBlitz3.ab2@19551>    TST.b fpu
0002E79E <AmiBlitz3.ab2@19552>   BNE 'optf
0002E7A4 <AmiBlitz3.ab2@19553>   TST.b fast
0002E7A8 <AmiBlitz3.ab2@19554>   BEQ JL11a2
0002E7B0 <AmiBlitz3.ab2@19561>   CMP.l #"Poke",20(a2)                                     ;poke
0002E7B4 <AmiBlitz3.ab2@19562>   BNE peekopt
0002E7B8 <AmiBlitz3.ab2@19563>   TST.b 24(a2)
0002E7BC <AmiBlitz3.ab2@19564>   BNE peekopt
0002E7C0 <AmiBlitz3.ab2@19565>   CMP.b #3,d2
0002E7C4 <AmiBlitz3.ab2@19566>   BNE 'lw1
0002E7CA <AmiBlitz3.ab2@19569>   MOVE.l #$21821990,d1
0002E7CE <AmiBlitz3.ab2@19570> BRA.s 'lpx
0002E7D2 <AmiBlitz3.ab2@19573>   CMP.b #2,d2
0002E7D6 <AmiBlitz3.ab2@19574>   BNE 'lb1
0002E7DC <AmiBlitz3.ab2@19575>   MOVE.l #$31821990,d1
0002E7E0 <AmiBlitz3.ab2@19576> BRA.s 'lpx
0002E7E4 <AmiBlitz3.ab2@19579>   CMP.b #1,d2
0002E7E8 <AmiBlitz3.ab2@19580>   BNE 'lp3
0002E7EE <AmiBlitz3.ab2@19581>   MOVE.l #$11821990,d1
0002E7F2 <AmiBlitz3.ab2@19582> BRA.s 'lpx
0002E7F6 <AmiBlitz3.ab2@19585>   CMP.b #5,d2
0002E7FA <AmiBlitz3.ab2@19586>     BNE JL11a2
0002E800 <AmiBlitz3.ab2@19587>     TST.b fpu
0002E804 <AmiBlitz3.ab2@19588>     BEQ 'll1
0002E80A <AmiBlitz3.ab2@19589>      MOVE.l destpointer,a4
0002E812 <AmiBlitz3.ab2@19590>     CMP.l #$f22d4500,-6(a4)
0002E816 <AmiBlitz3.ab2@19591>     BNE 'noglob
0002E81C <AmiBlitz3.ab2@19592>     TST.b doublepeek
0002E820 <AmiBlitz3.ab2@19593>     BNE 'noglob
0002E826 <AmiBlitz3.ab2@19594>     MOVE.w -2(a4),-4(a4)
0002E82C <AmiBlitz3.ab2@19595>     MOVE.w #$21ad,-6(a4)
0002E832 <AmiBlitz3.ab2@19596>     MOVE.w #$1990,-2(a4)
0002E83A <AmiBlitz3.ab2@19597>     MOVE.w #9,peeksize
0002E83C <AmiBlitz3.ab2@19598>     ADDQ #8,a7
0002E83E <AmiBlitz3.ab2@19599> RTS
0002E846 <AmiBlitz3.ab2@19602>     CMP.l #$f22c4500,-6(a4)
0002E84A <AmiBlitz3.ab2@19603>     BNE 'nolocal
0002E850 <AmiBlitz3.ab2@19604>     MOVE.w -2(a4),-4(a4)
0002E856 <AmiBlitz3.ab2@19605>     TST.b doublepeek                                       ;dont move longfix on double floats
0002E85A <AmiBlitz3.ab2@19606>     BNE 'nolocal
0002E860 <AmiBlitz3.ab2@19607>     MOVE.w #$21ac,-6(a4)
0002E866 <AmiBlitz3.ab2@19608>     MOVE.w #$1990,-2(a4)
0002E86E <AmiBlitz3.ab2@19609>     MOVE.w #9,peeksize
0002E870 <AmiBlitz3.ab2@19610>     ADDQ #8,a7
0002E872 <AmiBlitz3.ab2@19611> RTS
0002E876 <AmiBlitz3.ab2@19614>     MOVE.w #$f230,d1
0002E87A <AmiBlitz3.ab2@19615>     BSR writeword
0002E880 <AmiBlitz3.ab2@19616>   MOVE.l #$65001990,d1
0002E886 <AmiBlitz3.ab2@19617>   TST.b doublepeek
0002E88A <AmiBlitz3.ab2@19618>   BEQ 'lpx
0002E890 <AmiBlitz3.ab2@19619>   OR.l   #$10000000,d1
0002E892 <AmiBlitz3.ab2@19623>   ADDQ #8,a7
0002E89A <AmiBlitz3.ab2@19624>   MOVE.w #9,peeksize
0002E89E <AmiBlitz3.ab2@19625> BRA writelong
0002E8A6 <AmiBlitz3.ab2@19628>   CMP.l #"Peek",20(a2)
0002E8AA <AmiBlitz3.ab2@19629>   BNE 'l10
0002E8AE <AmiBlitz3.ab2@19630>   TST.b 24(a2)
0002E8B2 <AmiBlitz3.ab2@19631>   BNE 'l10
0002E8BA <AmiBlitz3.ab2@19632>   CMP.w #7,peeksize
0002E8BE <AmiBlitz3.ab2@19633>   BEQ 'l10
0002E8C6 <AmiBlitz3.ab2@19634>    CMP.w #3,peeksize
0002E8CA <AmiBlitz3.ab2@19635>    BNE.s 'lw1
0002E8D0 <AmiBlitz3.ab2@19638>   MOVE.l #$20301990,d1
0002E8D4 <AmiBlitz3.ab2@19639> BRA exitjsr
0002E8DC <AmiBlitz3.ab2@19642>   CMP.w #2,peeksize
0002E8E0 <AmiBlitz3.ab2@19643>    BNE.s 'lb1
0002E8E6 <AmiBlitz3.ab2@19644>    MOVE.l #$30301990,d1
0002E8EA <AmiBlitz3.ab2@19645> BRA exitjsr
0002E8F2 <AmiBlitz3.ab2@19648>   CMP.w #1,peeksize
0002E8F6 <AmiBlitz3.ab2@19649>    BNE.s 'lf1
0002E8FC <AmiBlitz3.ab2@19650>    MOVE.l #$10301990,d1
0002E900 <AmiBlitz3.ab2@19651> BRA exitjsr
0002E908 <AmiBlitz3.ab2@19654>   CMP.w #5,peeksize
0002E90C <AmiBlitz3.ab2@19655>    BNE 'l10
0002E912 <AmiBlitz3.ab2@19656>    TST.b fpu
0002E916 <AmiBlitz3.ab2@19657>    BEQ 'll1
0002E91A <AmiBlitz3.ab2@19658>    MOVE.w #$f230,d1
0002E91E <AmiBlitz3.ab2@19659>    BSR writeword
0002E920 <AmiBlitz3.ab2@19660>    MOVEQ #0,d1
0002E926 <AmiBlitz3.ab2@19661>    MOVE.w tempregnum,d1
0002E928 <AmiBlitz3.ab2@19662>    ASL.l #7,d1
0002E92A <AmiBlitz3.ab2@19663>    ASL.l #8,d1
0002E92C <AmiBlitz3.ab2@19664>    ASL.l #8,d1
0002E932 <AmiBlitz3.ab2@19665>    ADD.l #$44001990,d1
0002E938 <AmiBlitz3.ab2@19666>     TST.b doublepeek
0002E93C <AmiBlitz3.ab2@19667>     BEQ 'lpx2
0002E942 <AmiBlitz3.ab2@19668>     OR.l   #$10000000,d1
0002E946 <AmiBlitz3.ab2@19670> BRA exitjsr
0002E94A <AmiBlitz3.ab2@19674>   MOVE.w #$4EB9,D1
0002E94E <AmiBlitz3.ab2@19675>    BSR.w writeword                                         ;writesysjsr
0002E952 <AmiBlitz3.ab2@19676>   MOVEM.l (A7)+,a0/D1
0002E958 <AmiBlitz3.ab2@19677>    JSR addoff
0002E95C <AmiBlitz3.ab2@19678>   SUB.l $12(A0),D1
0002E960 <AmiBlitz3.ab2@19679>   ADD.l $28(A0),D1
0002E964 <AmiBlitz3.ab2@19680> BRA.w writelong
0002E966 <AmiBlitz3.ab2@19685>   MOVE.w D1,-(A7)
0002E96A <AmiBlitz3.ab2@19686>   MOVE.w tstmode(PC),D1
0002E96E <AmiBlitz3.ab2@19687>    BSR.w writeword
0002E972 <AmiBlitz3.ab2@19688>    BSR.w getbbase
0002E976 <AmiBlitz3.ab2@19689>    BSR.w writeword
0002E978 <AmiBlitz3.ab2@19690>   MOVE.w (A7)+,D1
0002E97C <AmiBlitz3.ab2@19691>   MOVEM.l D0/D3-D7/A0-A2/A4,-(A7)
0002E980 <AmiBlitz3.ab2@19692>    BSR.w Atokejsr
0002E984 <AmiBlitz3.ab2@19693>   MOVEM.l (A7)+,D0/D3-D7/A0-A2/A4
0002E986 <AmiBlitz3.ab2@19694> RTS
0002E98A <AmiBlitz3.ab2@19702>   MOVE.w blitzoff(PC),D1
0002E98E <AmiBlitz3.ab2@19703>   CMP.w #-$1,D1
0002E992 <AmiBlitz3.ab2@19704>    BNE.w getbbase__done
0002E998 <AmiBlitz3.ab2@19705>   ADDQ.w #1,globalvarpointer
0002E9A0 <AmiBlitz3.ab2@19706>   BCLR #$0,globalvarpointer+1
0002E9A6 <AmiBlitz3.ab2@19707>   MOVE.w globalvarpointer,D1
0002E9AC <AmiBlitz3.ab2@19708>   MOVE.w D1,blitzoff
0002E9B2 <AmiBlitz3.ab2@19709>   ADDQ.w #2,globalvarpointer
0002E9B4 <AmiBlitz3.ab2@19712> RTS
0002E9B8 <AmiBlitz3.ab2@19716> tstmode:    Dc.b $4A,$6D,$00,$00                           ;TST.W $0000(A5)
0002E9BA <AmiBlitz3.ab2@19719> inline:     Ds.w 1
0002E9BC <AmiBlitz3.ab2@19720> blitzoff:   Dc.w $FFFF                                   ;-1 org source
0002E9BE <AmiBlitz3.ab2@19721> blitzmode:  Ds.w 1                                       ;+=amiga, -=blitz
0002E9C0 <AmiBlitz3.ab2@19725>   MOVE.w (A2)+,D1
0002E9C4 <AmiBlitz3.ab2@19726>    BEQ.w fetchregs__done
0002E9C6 <AmiBlitz3.ab2@19727>   MOVE.w (A2)+,D2
0002E9CA <AmiBlitz3.ab2@19728>    BSR.w toreg
0002E9CE <AmiBlitz3.ab2@19729> BRA.w fetchregs
0002E9D0 <AmiBlitz3.ab2@19732> RTS
0002E9D4 <AmiBlitz3.ab2@19737>   CMP.w #-$100,D2
0002E9D8 <AmiBlitz3.ab2@19738>    BCC.w toreg__yeah
0002E9DC <AmiBlitz3.ab2@19740>   BCLR #$F,D2
0002E9E0 <AmiBlitz3.ab2@19741>    BEQ.w toreg__nobm
0002E9E6 <AmiBlitz3.ab2@19743>   TST.w blitzmode
0002E9EA <AmiBlitz3.ab2@19744>    BMI.w toreg__yeah
0002E9EC <AmiBlitz3.ab2@19745> RTS
0002E9F0 <AmiBlitz3.ab2@19748>   BCLR #$E,D2
0002E9F4 <AmiBlitz3.ab2@19749>    BEQ.w toreg__yeah
0002E9FA <AmiBlitz3.ab2@19751>   TST.w blitzmode
0002E9FE <AmiBlitz3.ab2@19752>    BPL.w toreg__yeah
0002EA00 <AmiBlitz3.ab2@19753> RTS
0002EA06 <AmiBlitz3.ab2@19756>   JSR uselib
0002EA08 <AmiBlitz3.ab2@19757>   TST.b D2
0002EA0C <AmiBlitz3.ab2@19758>    BEQ.w toreg__norm
0002EA10 <AmiBlitz3.ab2@19759>   CMP.b #$4,D2
0002EA14 <AmiBlitz3.ab2@19760>    BNE.w toreg__suv
0002EA18 <AmiBlitz3.ab2@19761>   MOVE.w #$0004,-(A7)
0002EA1E <AmiBlitz3.ab2@19762>   MOVE.l #$FFFFFFFA,-(A7)                                  ;#-6,-(a7) org source
0002EA22 <AmiBlitz3.ab2@19763> BRA.w toreg__sendmd
0002EA26 <AmiBlitz3.ab2@19766>   CMP.b #$3,D2
0002EA2A <AmiBlitz3.ab2@19767>    BNE.w toreg__notnmax
0002EA2C <AmiBlitz3.ab2@19768>   CLR.w -(A7)
0002EA32 <AmiBlitz3.ab2@19769>   MOVE.l #$FFFFFFFC,-(A7)                                  ;#-4,-(a7) org source
0002EA34 <AmiBlitz3.ab2@19775>   LSR.w #8,D2
0002EA38 <AmiBlitz3.ab2@19776>   MOVE.w #$303C,D1                                         ;move.w #x,dn
0002EA3C <AmiBlitz3.ab2@19777>   BTST #$7,D2
0002EA40 <AmiBlitz3.ab2@19778>    BEQ.w toreg__skipad
0002EA44 <AmiBlitz3.ab2@19779>   MOVE.w #$307C,D1                                         ;move.w #x,an
0002EA48 <AmiBlitz3.ab2@19780>   CMP.w #$16,D2
0002EA4C <AmiBlitz3.ab2@19781>    BNE.w toreg__skipad
0002EA54 <AmiBlitz3.ab2@19782>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
0002EA58 <AmiBlitz3.ab2@19785>   ANDI.w #$7,D2
0002EA5A <AmiBlitz3.ab2@19786>   LSL.w #8,D2
0002EA5C <AmiBlitz3.ab2@19787>   LSL.w #1,D2
0002EA5E <AmiBlitz3.ab2@19788>   OR.w D2,D1
0002EA62 <AmiBlitz3.ab2@19789>    BSR.w writeword
0002EA66 <AmiBlitz3.ab2@19790>   MOVE.l $12(A1),D1
0002EA68 <AmiBlitz3.ab2@19791>   ADD.l (A7)+,D1
0002EA6C <AmiBlitz3.ab2@19792>   MOVE.w $0(A1,D1.L),D1
0002EA6E <AmiBlitz3.ab2@19793>   ADD.w (A7)+,D1
0002EA72 <AmiBlitz3.ab2@19794> BRA.w writeword
0002EA74 <AmiBlitz3.ab2@19797>   MOVE.w D2,-(A7)
0002EA76 <AmiBlitz3.ab2@19798>   LSR.w #8,D2
0002EA7A <AmiBlitz3.ab2@19799>   CMP.w #$16,D2
0002EA7E <AmiBlitz3.ab2@19800>    BNE.w toreg__isnta6
0002EA86 <AmiBlitz3.ab2@19801>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
0002EA8A <AmiBlitz3.ab2@19804>   MOVE.l $12(A1),D1                                        ;objectspace
0002EA8E <AmiBlitz3.ab2@19805>   MOVE.w -$6(A1,D1.L),-(A7)
0002EA92 <AmiBlitz3.ab2@19806>    BSR.w makeregop
0002EA96 <AmiBlitz3.ab2@19807>    BSR.w writeword
0002EA98 <AmiBlitz3.ab2@19808>   MOVE.w (A7)+,D1
0002EA9A <AmiBlitz3.ab2@19809>   MOVE.w (A7)+,D2
0002EA9C <AmiBlitz3.ab2@19810>   TST.b D2
0002EAA0 <AmiBlitz3.ab2@19811>    BPL.w toreg__skippy1
0002EAA4 <AmiBlitz3.ab2@19816>    BSR.w writeword                                         ;move.l x(a5),dn
0002EAA6 <AmiBlitz3.ab2@19817>   MOVE.w D2,-(A7)                                          ;store reg used
0002EAAA <AmiBlitz3.ab2@19819>   ADDA.l $12(A1),A1
0002EAAC <AmiBlitz3.ab2@19820>   MOVE.b D2,D1
0002EAB0 <AmiBlitz3.ab2@19821>   ANDI.w #$7,D1
0002EAB6 <AmiBlitz3.ab2@19823>   TST.b debugmode
0002EABA <AmiBlitz3.ab2@19824>    BEQ.w toreg__norerr
0002EABC <AmiBlitz3.ab2@19826>   MOVE.w D1,-(A7)
0002EABE <AmiBlitz3.ab2@19827>   LSL.w #8,D1
0002EAC0 <AmiBlitz3.ab2@19828>   LSL.w #1,D1
0002EAC4 <AmiBlitz3.ab2@19829>   ORI.w #$B07C,D1                                          ;cmp #x,dn
0002EAC8 <AmiBlitz3.ab2@19830>    BSR.w writeword
0002EACC <AmiBlitz3.ab2@19831>   MOVE.w -$4(A1),D1
0002EAD0 <AmiBlitz3.ab2@19832>    BSR.w writeword
0002EAD4 <AmiBlitz3.ab2@19833>   MOVE.l maxchk(PC),D1                                  ;bcs
0002EAD8 <AmiBlitz3.ab2@19834>    BSR.w writelong
0002EADA <AmiBlitz3.ab2@19835>   MOVE.l A2,-(A7)
0002EADE <AmiBlitz3.ab2@19836>   MOVE.w #$C30A,D1
0002EAE2 <AmiBlitz3.ab2@19837>    BSR.w Atokejsr
0002EAE4 <AmiBlitz3.ab2@19838>   MOVEA.l (A7)+,A2
0002EAE6 <AmiBlitz3.ab2@19839>   MOVE.w (A7)+,D1
0002EAEA <AmiBlitz3.ab2@19842>   MOVE.w -$2(A1),D2                                        ;shift amount
0002EAEE <AmiBlitz3.ab2@19845>   CMP.w #$9,D2
0002EAF2 <AmiBlitz3.ab2@19846>    BCS.w toreg__simp
0002EAF6 <AmiBlitz3.ab2@19847>   MOVEM.w D1-D2,-(A7)
0002EAF8 <AmiBlitz3.ab2@19849>   MOVEQ.l #$00,D2                                          ;!!!!!
0002EAFA <AmiBlitz3.ab2@19851>   LSL.w #8,D2
0002EAFC <AmiBlitz3.ab2@19852>   LSL.w #1,D2
0002EAFE <AmiBlitz3.ab2@19853>   OR.w D2,D1
0002EB02 <AmiBlitz3.ab2@19854>   OR.w lsldn(PC),D1
0002EB06 <AmiBlitz3.ab2@19855>    BSR.w writeword
0002EB0A <AmiBlitz3.ab2@19856>   MOVEM.w (A7)+,D1-D2
0002EB0C <AmiBlitz3.ab2@19857>   SUBQ.w #8,D2
0002EB10 <AmiBlitz3.ab2@19858> BRA.w toreg__shloop
0002EB12 <AmiBlitz3.ab2@19861>   MOVE.w D1,-(A7)
0002EB16 <AmiBlitz3.ab2@19862>   OR.w #$48c0,d1
0002EB1A <AmiBlitz3.ab2@19863>   BSR writeword
0002EB1C <AmiBlitz3.ab2@19864>   MOVE.w (a7),d1
0002EB1E <AmiBlitz3.ab2@19865>   TST.w D2
0002EB22 <AmiBlitz3.ab2@19866>   BEQ.w toreg__simp2
0002EB26 <AmiBlitz3.ab2@19868>   ANDI.w #$7,D2                                            ;?????
0002EB28 <AmiBlitz3.ab2@19870>   LSL.w #8,D2
0002EB2A <AmiBlitz3.ab2@19871>   LSL.w #1,D2
0002EB2C <AmiBlitz3.ab2@19872>   OR.w D2,D1
0002EB30 <AmiBlitz3.ab2@19873>   OR.w lsldn(PC),D1
0002EB34 <AmiBlitz3.ab2@19874>    BSR.w writeword
0002EB36 <AmiBlitz3.ab2@19880>   MOVE.w (A7)+,D1
0002EB3A <AmiBlitz3.ab2@19881>   ANDI.w #$7,D1
0002EB3E <AmiBlitz3.ab2@19882>   OR.w maxdo(PC),D1
0002EB40 <AmiBlitz3.ab2@19883>   MOVE.w (A7)+,D2
0002EB42 <AmiBlitz3.ab2@19884>   LSL.w #1,D2
0002EB46 <AmiBlitz3.ab2@19885>   ANDI.w #$E00,D2
0002EB48 <AmiBlitz3.ab2@19886>   OR.w D2,D1
0002EB4C <AmiBlitz3.ab2@19887> BRA.w writeword
0002EB50 <AmiBlitz3.ab2@19890>   CMP.b #$1,D2
0002EB54 <AmiBlitz3.ab2@19891>    BEQ.w toreg__skippy
0002EB56 <AmiBlitz3.ab2@19895>   ADDQ.w #4,D1
0002EB5C <AmiBlitz3.ab2@19897>   TST.b debugmode
0002EB60 <AmiBlitz3.ab2@19898>    BEQ.w toreg__skippy
0002EB64 <AmiBlitz3.ab2@19900>    BSR.w writeword
0002EB66 <AmiBlitz3.ab2@19901>   SWAP D1
0002EB6A <AmiBlitz3.ab2@19902>   MOVE.w toreg__theretest(PC),D1
0002EB6C <AmiBlitz3.ab2@19903>   SWAP D1
0002EB70 <AmiBlitz3.ab2@19904>    BSR.w writelong
0002EB74 <AmiBlitz3.ab2@19905>   MOVE.l toreg__theretest+4(PC),D1
0002EB78 <AmiBlitz3.ab2@19906>    BSR.w writelong
0002EB7C <AmiBlitz3.ab2@19907>   MOVE.l toreg__theretest+8(PC),D1
0002EB80 <AmiBlitz3.ab2@19908> BRA.w writelong
0002EB84 <AmiBlitz3.ab2@19911> BRA.w writeword
0002EB88 <AmiBlitz3.ab2@19916>             Dc.b $4A,$AD,$00,$00                           ;TST.L  $0000(A5)
0002EB8C <AmiBlitz3.ab2@19917>             Dc.b $66,$00,$00,$06                           ;BNE.W  toreg__ttskip
0002EB8E <AmiBlitz3.ab2@19918>             Dc.b $70,$01                                   ;MOVEQ  #$01,D0
0002EB90 <AmiBlitz3.ab2@19919>             Dc.b $4E,$40                                   ;TRAP   #00
0002EB92 <AmiBlitz3.ab2@19924>   LSR.w #8,D2
0002EB96 <AmiBlitz3.ab2@19925>   CMP.b #$16,D2
0002EB9A <AmiBlitz3.ab2@19926>    BNE.w toreg__nota6
0002EB9E <AmiBlitz3.ab2@19927>   MOVE.w $A(A1),D1
0002EBA4 <AmiBlitz3.ab2@19928>   CMP.w lasta6,D1
0002EBA8 <AmiBlitz3.ab2@19929>    BEQ.w toreg__sk
0002EBAE <AmiBlitz3.ab2@19930>   MOVE.w D1,lasta6
0002EBB2 <AmiBlitz3.ab2@19933>    BSR.w makeregop
0002EBB6 <AmiBlitz3.ab2@19934>   TST.w $1A(A1)
0002EBBA <AmiBlitz3.ab2@19935>    BPL.w toreg__long
0002EBBE <AmiBlitz3.ab2@19936>   CMP.w stackop(PC),D1
0002EBC2 <AmiBlitz3.ab2@19937>    BNE.w toreg__notst
0002EBC8 <AmiBlitz3.ab2@19938>   SUBQ.w #2,a2offset
0002EBCC <AmiBlitz3.ab2@19941>    ORI.w #$1000,D1
0002EBD0 <AmiBlitz3.ab2@19944>    BSR.w writeword
0002EBD4 <AmiBlitz3.ab2@19945>   MOVE.w $A(A1),D1
0002EBD8 <AmiBlitz3.ab2@19946>    BSR.w writeword
0002EBDA <AmiBlitz3.ab2@19949> RTS
0002EBDC <AmiBlitz3.ab2@19953> lsldn:      Dc.b $E1,$88                 ;Dc.b $48 ;object long acsess    ;LSL.L   #8,D0
0002EBE0 <AmiBlitz3.ab2@19954> maxchk:     Dc.b $65,$00,$00,$08                                          ;BCS.W   maxchk__ok
0002EBE6 <AmiBlitz3.ab2@19955>             Dc.b $4E,$B9,$00,$00,$00,$00                                  ;JSR     $00000000
0002EBE8 <AmiBlitz3.ab2@19958> 
0002EBEA <AmiBlitz3.ab2@19961>             Dc.b $00,$00
0002EBEE <AmiBlitz3.ab2@19962> stackop:    Dc.b $2F,$2D,$00,$00                                          ;MOVE.L  $0000(A5),-(A7)
0002EBF2 <AmiBlitz3.ab2@19969>   CMP.b #$FF,D2
0002EBF6 <AmiBlitz3.ab2@19970>    BNE.w makeregop__notst
0002EBFA <AmiBlitz3.ab2@19971>   MOVE.w stackop(PC),D1
0002EC00 <AmiBlitz3.ab2@19972>   ADDQ.w #4,a2offset
0002EC02 <AmiBlitz3.ab2@19973> RTS
0002EC04 <AmiBlitz3.ab2@19976>   MOVE.l A3,-(A7)
0002EC0A <AmiBlitz3.ab2@19977>   LEA regtransd,A3
0002EC0E <AmiBlitz3.ab2@19978>   BTST #$4,D2
0002EC12 <AmiBlitz3.ab2@19979>    BEQ.w makeregop__skip
0002EC18 <AmiBlitz3.ab2@19980>   LEA regtransa,A3
0002EC1C <AmiBlitz3.ab2@19983>   ANDI.w #$7,D2
0002EC1E <AmiBlitz3.ab2@19984>   MOVE.w D2,D1
0002EC20 <AmiBlitz3.ab2@19985>   LSL.w #8,D1
0002EC22 <AmiBlitz3.ab2@19986>   LSL.w #1,D1
0002EC24 <AmiBlitz3.ab2@19987>   OR.w (A3),D1
0002EC26 <AmiBlitz3.ab2@19988>   MOVEA.l (A7)+,A3
0002EC28 <AmiBlitz3.ab2@19989> RTS
0002EC2C <AmiBlitz3.ab2@19995>   CMP.w #$3C,D0
0002EC30 <AmiBlitz3.ab2@19996>    BCS.w ifchar__no
0002EC34 <AmiBlitz3.ab2@19997>   CMP.w #$3E,D0
0002EC38 <AmiBlitz3.ab2@19998>    BHI.w ifchar__no
0002EC3C <AmiBlitz3.ab2@19999>   SUBI.w #$3C,D0
0002EC3E <AmiBlitz3.ab2@20000>   CMP.w D0,D0
0002EC40 <AmiBlitz3.ab2@20003> RTS
0002EC4A <AmiBlitz3.ab2@20008>   MOVE.w oldqflag,instringon
0002EC50 <AmiBlitz3.ab2@20009>   MOVEA.l lastsourcepos,A5
0002EC56 <AmiBlitz3.ab2@20014>   MOVE.w regnum,-(A7)
0002EC5C <AmiBlitz3.ab2@20015>   CLR.w regnum
0002EC62 <AmiBlitz3.ab2@20016>   MOVE.l destpointer,-(A7)
0002EC68 <AmiBlitz3.ab2@20017>   MOVE.l destbufferend,-(A7)
0002EC6E <AmiBlitz3.ab2@20018>   MOVE.w dontwrite,-(A7)
0002EC74 <AmiBlitz3.ab2@20019>   MOVE.w lasta6,-(A7)
0002EC7A <AmiBlitz3.ab2@20020>   MOVE.w cfetchmode,-(A7)
0002EC7E <AmiBlitz3.ab2@20021>    BNE.w JL_0_BFB6
0002EC88 <AmiBlitz3.ab2@20022>   MOVE.l destbufferend,oldlibat
0002EC8E <AmiBlitz3.ab2@20023>   MOVEA.l constpcat,A0
0002EC94 <AmiBlitz3.ab2@20024>   MOVE.l A0,destpointer
0002EC98 <AmiBlitz3.ab2@20025> BRA.w JL_0_BFBC
0002EC9E <AmiBlitz3.ab2@20028>   MOVEA.l destpointer,A0
0002ECA0 <AmiBlitz3.ab2@20031>   MOVE.l A0,-(A7)
0002ECAA <AmiBlitz3.ab2@20032>   MOVE.l constlibat,destbufferend
0002ECB0 <AmiBlitz3.ab2@20033>   CLR.w dontwrite
0002ECB8 <AmiBlitz3.ab2@20035>   MOVE.w #$FFFF,lasta6
0002ECC0 <AmiBlitz3.ab2@20036>   MOVE.w #$FFFF,cfetchmode
0002ECC4 <AmiBlitz3.ab2@20038>     BSR.w arreval
0002ECC6 <AmiBlitz3.ab2@20039>    MOVE.l (a7),a0
0002EE02 <AmiBlitz3.ab2@20041>  !newcalc
0002EE06 <AmiBlitz3.ab2@20042>    BEQ 'l10
0002EE08 <AmiBlitz3.ab2@20043>    MOVE.l d0,d3
0002EE0A <AmiBlitz3.ab2@20044>    MOVEA.l (A7)+,A0
0002EE0E <AmiBlitz3.ab2@20045> BRA bc1
0002EE12 <AmiBlitz3.ab2@20048>    MOVE.w #$2600,D1
0002EE18 <AmiBlitz3.ab2@20049>   OR.w regnum,D1
0002EE1C <AmiBlitz3.ab2@20050>    BSR.w writeword
0002EE20 <AmiBlitz3.ab2@20051>   MOVE.w #$4E75,D1
0002EE24 <AmiBlitz3.ab2@20052>    BSR.w writeword
0002EE2A <AmiBlitz3.ab2@20053>   MOVE.w dontwrite,D1
0002EE2E <AmiBlitz3.ab2@20054>    BNE.w conmemerr
0002EE30 <AmiBlitz3.ab2@20055>   MOVEA.l (A7)+,A0
0002EE32 <AmiBlitz3.ab2@20056>   NOP
0002EE38 <AmiBlitz3.ab2@20057>    JSR Aclearcache                                         ;simple expression
0002EE3A <AmiBlitz3.ab2@20060>    JSR (A0)                                                ;writeresult
0002EE40 <AmiBlitz3.ab2@20063>   MOVE.w (A7)+,cfetchmode
0002EE46 <AmiBlitz3.ab2@20064>   MOVE.w (A7)+,lasta6
0002EE4C <AmiBlitz3.ab2@20065>   MOVE.w (A7)+,dontwrite
0002EE52 <AmiBlitz3.ab2@20066>   MOVE.l (A7)+,destbufferend
0002EE58 <AmiBlitz3.ab2@20067>   MOVE.l (A7)+,destpointer
0002EE5E <AmiBlitz3.ab2@20068>   MOVE.w (A7)+,regnum
0002EE64 <AmiBlitz3.ab2@20071> JMP reget
0002EE68 <AmiBlitz3.ab2@20074> oldlibat:   Ds.l 1
0002EE6E <AmiBlitz3.ab2@20078>   LEA incdir,A0
0002EE72 <AmiBlitz3.ab2@20081>   CMP.w #$22,D0
0002EE76 <AmiBlitz3.ab2@20082>    BEQ.w JL_0_C052
0002EE78 <AmiBlitz3.ab2@20083>   MOVE.b D0,(A0)+
0002EE7A <AmiBlitz3.ab2@20084>   TST.w D0
0002EE7E <AmiBlitz3.ab2@20085>    BEQ.w JL_0_C05A
0002EE82 <AmiBlitz3.ab2@20086>    BMI.w syntaxerr
0002EE88 <AmiBlitz3.ab2@20089>   JSR get1bytemain                                         ;_long
0002EE8C <AmiBlitz3.ab2@20090> BRA.w JL_0_C03E
0002EE8E <AmiBlitz3.ab2@20093> RTS
0002EE94 <AmiBlitz3.ab2@20097>   LEA ptr_parameterstore,A1                                ;getparameter
0002EE9A <AmiBlitz3.ab2@20098>   LEA incdir,A0
0002EE9C <AmiBlitz3.ab2@20099>   MOVEQ.l #-$01,D2
0002EE9E <AmiBlitz3.ab2@20102>     ADDQ.w #1,D2
0002EEA0 <AmiBlitz3.ab2@20103>     MOVE.b (A0)+,(A1)+
0002EEA4 <AmiBlitz3.ab2@20104>   BNE.w JL_0_C06A
0002EEA6 <AmiBlitz3.ab2@20105>   SUBQ.w #1,A1
0002EEB0 <AmiBlitz3.ab2@20107>   MOVE.w oldqflag,instringon
0002EEB6 <AmiBlitz3.ab2@20108>   MOVEA.l lastsourcepos,A5
0002EEBC <AmiBlitz3.ab2@20112>   JSR get1bytemain
0002EEBE <AmiBlitz3.ab2@20113>   TST.w D0
0002EEC2 <AmiBlitz3.ab2@20114>    BMI.w syntaxerr
0002EEC6 <AmiBlitz3.ab2@20115>   CMP.b #$22,D0
0002EECA <AmiBlitz3.ab2@20116>    BEQ.w JL_0_C078
0002EECC <AmiBlitz3.ab2@20117>   MOVE.b D0,(A1)+
0002EED0 <AmiBlitz3.ab2@20118>    BEQ.w JL_0_C096
0002EED2 <AmiBlitz3.ab2@20119>   ADDQ.w #1,D2
0002EED6 <AmiBlitz3.ab2@20120> BRA.w JL_0_C078
0002EED8 <AmiBlitz3.ab2@20123>   TST.w D2
0002EEDC <AmiBlitz3.ab2@20124>    BEQ.w syntaxerr
0002EEDE <AmiBlitz3.ab2@20125> RTS
0002EEE4 <AmiBlitz3.ab2@20129>   MOVEA.l constantbase,A2
0002EEE8 <AmiBlitz3.ab2@20130>   MOVEA.l $E(A2),A5
0002EEEE <AmiBlitz3.ab2@20131>   MOVE.l a5,includesourceline
0002EEF4 <AmiBlitz3.ab2@20132>   LEA inctab,a0
0002EEFA <AmiBlitz3.ab2@20133>   MOVE.w ininclude,d0
0002EEFE <AmiBlitz3.ab2@20134>   MOVE.l $0(a0,d0*4),d0
0002EF02 <AmiBlitz3.ab2@20135>   MOVEA.l $4(A2),A0
0002EF06 <AmiBlitz3.ab2@20137>   LEA $0(A0,D0.l),A0
0002EF08 <AmiBlitz3.ab2@20138>   MOVEA.l A5,A1
0002EF0A <AmiBlitz3.ab2@20141>     CMPA.l A0,A1
0002EF0E <AmiBlitz3.ab2@20142>      BCC.w JL_0_C0C6
0002EF10 <AmiBlitz3.ab2@20143>   TST.b (A1)+
0002EF14 <AmiBlitz3.ab2@20144>   BNE.w JL_0_C0B6
0002EF18 <AmiBlitz3.ab2@20145> BRA.w JL_0_C112
0002EF1C <AmiBlitz3.ab2@20148>   MOVEA.l $4(A2),A1
0002EF1E <AmiBlitz3.ab2@20151>   CMPA.l A0,A5
0002EF22 <AmiBlitz3.ab2@20152>   BCC.w JL_0_C0D6
0002EF24 <AmiBlitz3.ab2@20153>   MOVE.b (A5)+,(A1)+
0002EF28 <AmiBlitz3.ab2@20154> BRA.w JL_0_C0CA
0002EF2A <AmiBlitz3.ab2@20157>   MOVE.l A1,D0
0002EF2E <AmiBlitz3.ab2@20158>   SUB.l $4(A2),D0
0002EF34 <AmiBlitz3.ab2@20159>   LEA inctab,a0
0002EF36 <AmiBlitz3.ab2@20160>   MOVEQ #0,d1
0002EF3C <AmiBlitz3.ab2@20161>   MOVE.w ininclude,d1
0002EF40 <AmiBlitz3.ab2@20162>   MOVE.l d0,0(a0,d1*4)
0002EF46 <AmiBlitz3.ab2@20164>   MOVEA.l _dosbase,A6
0002EF4A <AmiBlitz3.ab2@20165>   MOVE.l $8(A2),D1
0002EF4C <AmiBlitz3.ab2@20166>   MOVE.l A1,D2
0002EF52 <AmiBlitz3.ab2@20167>   MOVE.l D2,include_base
0002EF58 <AmiBlitz3.ab2@20169>   MOVE.l #$10000000,d3                                     ;load whole file
0002EF5A <AmiBlitz3.ab2@20170>   SUB.l D0,D3
0002EF5E <AmiBlitz3.ab2@20171>    JSR _Read(A6)
0002EF60 <AmiBlitz3.ab2@20172>   TST.l D0
0002EF64 <AmiBlitz3.ab2@20173>    BMI.w error_reading_file
0002EF68 <AmiBlitz3.ab2@20174>    BEQ.w JL_0_C120
0002EF6E <AmiBlitz3.ab2@20175>    MOVE.l D0,include_length
0002EFB0 <AmiBlitz3.ab2@20176>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0002EFDA <AmiBlitz3.ab2@20177>    !basic
0002EFEA <AmiBlitz3.ab2@20178>    ilen.l  = Peek.l(?include_length)
0002EFFA <AmiBlitz3.ab2@20179>    ibase.l = Peek.l(?include_base)
0002F00A <AmiBlitz3.ab2@20180>    ido.l   = Peek.l(?include_process)
0002F01A <AmiBlitz3.ab2@20181>    *tn.preprocessor = Peek.l(?include_preprocessor)
0002F024 <AmiBlitz3.ab2@20182>    If ido
0002F036 <AmiBlitz3.ab2@20183>      ioffset.l = SkipXtraHeader{ibase,ilen}
0002F05C <AmiBlitz3.ab2@20184>      nilen.l = preproc_Tokenize{*tn,ibase+ioffset,ibase,ilen-ioffset}
0002F06E <AmiBlitz3.ab2@20185>      If nilen>0
0002F07E <AmiBlitz3.ab2@20189>        Poke.l ?include_length,nilen
0002F09C <AmiBlitz3.ab2@20192>    !asm
0002F0A6 <AmiBlitz3.ab2@20193>    MOVE.l #0,include_process
0002F0AC <AmiBlitz3.ab2@20194>    MOVE.l include_length,D0
0002F0B2 <AmiBlitz3.ab2@20195>    LEA inctab,a0
0002F0B4 <AmiBlitz3.ab2@20196>    MOVEQ #0,d1
0002F0BA <AmiBlitz3.ab2@20197>    MOVE.w ininclude,d1
0002F0BE <AmiBlitz3.ab2@20198>    ADD.l d0,0(a0,d1*4)
0002F0C2 <AmiBlitz3.ab2@20200>   MOVEA.l $4(A2),A5
0002F0C6 <AmiBlitz3.ab2@20202>    MOVE.l 0(a0,d1*4),d0
0002F0CA <AmiBlitz3.ab2@20203>   CLR.b $0(A5,D0.l)
0002F0CC <AmiBlitz3.ab2@20206>   MOVEA.l A5,A0
0002F0CE <AmiBlitz3.ab2@20209>     TST.b (A0)+
0002F0D2 <AmiBlitz3.ab2@20210>   BNE.w JL_0_C114
0002F0D6 <AmiBlitz3.ab2@20211>   MOVE.l A0,$E(A2)
0002F0D8 <AmiBlitz3.ab2@20212> RTS
0002F0DC <AmiBlitz3.ab2@20215> include_length:        Dc.l 0                              ; for tokenizer!
0002F0E0 <AmiBlitz3.ab2@20216> include_base:          Dc.l 0
0002F0E4 <AmiBlitz3.ab2@20217> include_process:       Dc.l 0
0002F0E8 <AmiBlitz3.ab2@20218> include_preprocessor:  Dc.l 0
0002F0EC <AmiBlitz3.ab2@20222>   MOVE.l $8(A2),D1
0002F0F2 <AmiBlitz3.ab2@20224>   MOVEA.l _dosbase,A6
0002F0F6 <AmiBlitz3.ab2@20225>   JSR _Close(a6)
0002F0FC <AmiBlitz3.ab2@20226>   MOVEA.l _execbase,A6
0002F100 <AmiBlitz3.ab2@20227>   MOVEA.l $4(A2),A1
0002F106 <AmiBlitz3.ab2@20228>   MOVE.l #$400*8,D0                                        ;exit include
0002F10A <AmiBlitz3.ab2@20230>   JSR _FreeVec(a6)
0002F110 <AmiBlitz3.ab2@20233>   MOVE.l (A2),constantbase
0002F112 <AmiBlitz3.ab2@20234>   MOVEA.l A2,A1
0002F114 <AmiBlitz3.ab2@20235>   MOVEQ.l #$00,D0
0002F118 <AmiBlitz3.ab2@20236>   MOVE.b $12(A2),D0
0002F11E <AmiBlitz3.ab2@20237>   MOVEA.l _execbase,A6
0002F124 <AmiBlitz3.ab2@20238>   MOVE.l mempool2,a0
0002F128 <AmiBlitz3.ab2@20239>   JSR _FreePooled(A6)
0002F12E <AmiBlitz3.ab2@20240>   JSR zero_includename
0002F134 <AmiBlitz3.ab2@20241>   SUBQ.w #1,ininclude
0002F138 <AmiBlitz3.ab2@20242>   BNE.w AJL_0_C09E
0002F13E <AmiBlitz3.ab2@20245>   LEA _include,a0
0002F142 <AmiBlitz3.ab2@20246>   MOVEM.l a0-a6/d0-d7,-(a7)
0002F148 <AmiBlitz3.ab2@20247>   LEA ptr_parameterstore,a1
0002F14A <AmiBlitz3.ab2@20250>     MOVE.b (a0)+,(a1)+
0002F14E <AmiBlitz3.ab2@20251>   BNE 'l1b
0002F150 <AmiBlitz3.ab2@20252>   MOVEQ #9,d2
0002F156 <AmiBlitz3.ab2@20253>   JSR findlabel2
0002F15A <AmiBlitz3.ab2@20254>   BNE 'd
0002F15E <AmiBlitz3.ab2@20255>   CLR.l 8(a2)
0002F162 <AmiBlitz3.ab2@20258>   MOVEM.l (a7)+,a0-a6/d0-d7
0002F164 <AmiBlitz3.ab2@20259> RTS
0002F16A <AmiBlitz3.ab2@20263>   MOVE.l unusedfunc,d0
0002F16E <AmiBlitz3.ab2@20264>   BEQ 'noclear
0002F172 <AmiBlitz3.ab2@20265>   MOVEM.l d0-d2/a0-a1/a6,-(a7)
0002F174 <AmiBlitz3.ab2@20268>     MOVE.l d0,a1
0002F178 <AmiBlitz3.ab2@20269>     MOVE.l 4(a1),d0
0002F17A <AmiBlitz3.ab2@20270>     MOVE.l (a1),d2
0002F180 <AmiBlitz3.ab2@20271>     MOVE.l _execbase,a6
0002F184 <AmiBlitz3.ab2@20272>     JSR _FreeMem(a6)
0002F186 <AmiBlitz3.ab2@20273>     MOVE.l d2,d0
0002F18A <AmiBlitz3.ab2@20274>   BNE 'f1
0002F190 <AmiBlitz3.ab2@20275>   CLR.l unusedfunc
0002F194 <AmiBlitz3.ab2@20276>   MOVEM.l (a7)+,a0-a1/a6/d0-d2
0002F196 <AmiBlitz3.ab2@20279> RTS
0002F19C <AmiBlitz3.ab2@20283>   MOVEA.l xinclude_base,A2
0002F1A2 <AmiBlitz3.ab2@20284>   CLR.l xinclude_base
0002F1A6 <AmiBlitz3.ab2@20287>     CMPA.w #$0,A2
0002F1AA <AmiBlitz3.ab2@20288>      BEQ.w JL_0_C186
0002F1AC <AmiBlitz3.ab2@20289>     MOVEQ.l #$00,D0
0002F1B0 <AmiBlitz3.ab2@20290>     MOVE.b 4+8(A2),D0
0002F1B2 <AmiBlitz3.ab2@20291>     MOVEA.l A2,A1
0002F1B4 <AmiBlitz3.ab2@20292>     MOVEA.l (A2),A2
0002F1BA <AmiBlitz3.ab2@20293>     MOVEA.l _execbase,A6
0002F1C0 <AmiBlitz3.ab2@20294>     MOVE.l mempool2,a0
0002F1C4 <AmiBlitz3.ab2@20295>     JSR _FreePooled(A6)
0002F1C8 <AmiBlitz3.ab2@20296> BRA.w JL_0_C168
0002F1CA <AmiBlitz3.ab2@20299> RTS
0002F1D0 <AmiBlitz3.ab2@20303>   MOVEA.l constantbase,A2
0002F1D6 <AmiBlitz3.ab2@20304>   CLR.l constantbase
0002F1DA <AmiBlitz3.ab2@20307>     CMPA.w #$0,A2
0002F1DE <AmiBlitz3.ab2@20308>      BEQ.w JL_0_C1DC
0002F1E2 <AmiBlitz3.ab2@20309>     MOVE.l $8(A2),D1
0002F1E6 <AmiBlitz3.ab2@20310>      BEQ.w JL_0_C1AE
0002F1EC <AmiBlitz3.ab2@20311>     MOVEA.l _dosbase,A6
0002F1F0 <AmiBlitz3.ab2@20312>      JSR _Close(A6)
0002F1F4 <AmiBlitz3.ab2@20315>     MOVE.l $4(A2),D0
0002F1F8 <AmiBlitz3.ab2@20316>      BEQ.w JL_0_C1C6
0002F1FA <AmiBlitz3.ab2@20317>     MOVEA.l D0,A1
0002F200 <AmiBlitz3.ab2@20318>     MOVE.l #$400*8,D0
0002F206 <AmiBlitz3.ab2@20319>     MOVEA.l _execbase,A6
0002F20C <AmiBlitz3.ab2@20320>     MOVE.l mempool,a0
0002F210 <AmiBlitz3.ab2@20321>     JSR _FreeVec(a6)
0002F212 <AmiBlitz3.ab2@20324>     MOVEQ.l #$00,D0
0002F216 <AmiBlitz3.ab2@20325>     MOVE.b $12(A2),D0
0002F218 <AmiBlitz3.ab2@20326>     MOVEA.l A2,A1
0002F21A <AmiBlitz3.ab2@20327>     MOVEA.l (A2),A2
0002F220 <AmiBlitz3.ab2@20328>     MOVEA.l _execbase,A6
0002F226 <AmiBlitz3.ab2@20329>     MOVE.l mempool2,a0
0002F22A <AmiBlitz3.ab2@20330>     JSR _FreePooled(A6)
0002F22E <AmiBlitz3.ab2@20331> BRA.w JL_0_C194
0002F230 <AmiBlitz3.ab2@20334> RTS
0002F232 <AmiBlitz3.ab2@20338>   SWAP D0
0002F236 <AmiBlitz3.ab2@20339>    BSR.w JL_0_C1E6
0002F238 <AmiBlitz3.ab2@20340>   SWAP D0
0002F23E <AmiBlitz3.ab2@20343>   MOVEA.l data2,A4
0002F244 <AmiBlitz3.ab2@20344>   CMPA.l allat,A4
0002F248 <AmiBlitz3.ab2@20345>    BCC.w JL_0_C200
0002F24A <AmiBlitz3.ab2@20346>   MOVE.w D0,(A4)+
0002F250 <AmiBlitz3.ab2@20347>   MOVE.l A4,data2
0002F252 <AmiBlitz3.ab2@20348> RTS
0002F25A <AmiBlitz3.ab2@20351>   MOVE.w #$FFFF,dontwrite
0002F260 <AmiBlitz3.ab2@20352>   ADDQ.l #2,data2
0002F262 <AmiBlitz3.ab2@20353> RTS
0002F268 <AmiBlitz3.ab2@20357>   MOVEA.l data2,A4
0002F26E <AmiBlitz3.ab2@20358>   CMPA.l allat,A4
0002F272 <AmiBlitz3.ab2@20359>    BCC.w JL_0_C22A
0002F274 <AmiBlitz3.ab2@20360>   MOVE.b D0,(A4)+
0002F27A <AmiBlitz3.ab2@20361>   MOVE.l A4,data2
0002F27C <AmiBlitz3.ab2@20362> RTS
0002F284 <AmiBlitz3.ab2@20365>   MOVE.w #$FFFF,dontwrite
0002F28A <AmiBlitz3.ab2@20366>   ADDQ.l #1,data2
0002F28C <AmiBlitz3.ab2@20367> RTS
0002F290 <AmiBlitz3.ab2@20371>   CMP.w #$22,D0
0002F294 <AmiBlitz3.ab2@20372>    BNE.w syntaxerr
0002F29A <AmiBlitz3.ab2@20376>   JSR get1bytemain
0002F29E <AmiBlitz3.ab2@20377>   CMP.b #$22,D0
0002F2A2 <AmiBlitz3.ab2@20378>    BEQ.w JL_0_C25A
0002F2A4 <AmiBlitz3.ab2@20379>   TST.w D0
0002F2A8 <AmiBlitz3.ab2@20380>    BEQ.w syntaxerr
0002F2AA <AmiBlitz3.ab2@20381>   MOVE.b D0,(A0)+
0002F2AE <AmiBlitz3.ab2@20382> BRA.w JL_0_C242
0002F2B0 <AmiBlitz3.ab2@20385>   CLR.b (A0)
0002F2B2 <AmiBlitz3.ab2@20386> RTS
0002F2B4 <AmiBlitz3.ab2@20389>   TST.l D3
0002F2B6 <AmiBlitz3.ab2@20390> RTS
0002F2BC <AmiBlitz3.ab2@20393>   LEA ptr_parameterstore,A0
0002F2C2 <AmiBlitz3.ab2@20394>   LEA namebuff2,A1
0002F2C4 <AmiBlitz3.ab2@20397>     MOVE.b (A0)+,D0
0002F2C8 <AmiBlitz3.ab2@20398>     BEQ.w JL_0_C27C
0002F2CA <AmiBlitz3.ab2@20399>   CMP.b (A1)+,D0
0002F2CE <AmiBlitz3.ab2@20400>   BEQ.w JL_0_C26E
0002F2D0 <AmiBlitz3.ab2@20401> RTS
0002F2D2 <AmiBlitz3.ab2@20404>   TST.b (A1)
0002F2D6 <AmiBlitz3.ab2@20405>   BNE.w JL_0_C284
0002F2D8 <AmiBlitz3.ab2@20406> RTS
0002F2DC <AmiBlitz3.ab2@20409>   CMP.w #$1,D0
0002F2DE <AmiBlitz3.ab2@20410> RTS
0002F2E2 <AmiBlitz3.ab2@20414>   CMP.w #$2E,D0                                            ;dodeftype
0002F2E6 <AmiBlitz3.ab2@20415>    BNE.w syntaxerr
0002F2EA <AmiBlitz3.ab2@20416>   BSR.w getparameter2
0002F2F0 <AmiBlitz3.ab2@20417>   LEA newtypebase,A2
0002F2F4 <AmiBlitz3.ab2@20418>   BSR.w findtype
0002F2F8 <AmiBlitz3.ab2@20419>    BNE.w notypeerr
0002F2FE <AmiBlitz3.ab2@20420>   TST.b declare
0002F302 <AmiBlitz3.ab2@20421>    BNE 'l1
0002F308 <AmiBlitz3.ab2@20422>   TST.b declare2
0002F30C <AmiBlitz3.ab2@20423>    BEQ 'l2
0002F314 <AmiBlitz3.ab2@20426>   MOVE.b #2,nowdeclare
0002F31A <AmiBlitz3.ab2@20430>   JSR reget
0002F31E <AmiBlitz3.ab2@20431>    BNE.w JL_0_C2B4
0002F324 <AmiBlitz3.ab2@20432>   MOVE.l A2,defaulttype
0002F326 <AmiBlitz3.ab2@20433> RTS
0002F32C <AmiBlitz3.ab2@20436>   MOVE.l defaulttype,-(A7)
0002F332 <AmiBlitz3.ab2@20437>   MOVE.l A2,defaulttype
0002F336 <AmiBlitz3.ab2@20440>   BSR.w getparameter
0002F33A <AmiBlitz3.ab2@20441>    BSR.w JL_0_8E3C
0002F33E <AmiBlitz3.ab2@20442>   CMP.w #$2C,D0
0002F342 <AmiBlitz3.ab2@20443>    BNE.w JL_0_C2D8
0002F348 <AmiBlitz3.ab2@20444>    JSR get1bytemain                                        ; was BSR.w
0002F34C <AmiBlitz3.ab2@20445> BRA.w JL_0_C2C0
0002F352 <AmiBlitz3.ab2@20448>   MOVE.l (A7)+,defaulttype
0002F354 <AmiBlitz3.ab2@20449> RTS
0002F358 <AmiBlitz3.ab2@20453>   LEA $4(A5),A2                                            ;fehler function
0002F35A <AmiBlitz3.ab2@20456>   MOVE.l A2,D0
0002F35E <AmiBlitz3.ab2@20459>   BSR.w getparameter
0002F362 <AmiBlitz3.ab2@20460>   BSR.w JL_0_8E3C
0002F366 <AmiBlitz3.ab2@20461>   BSR.w calcvar
0002F36A <AmiBlitz3.ab2@20462>   CMP.b #$7,D2
0002F36E <AmiBlitz3.ab2@20463>    BNE.w mismatcherr
0002F372 <AmiBlitz3.ab2@20464>   MOVE.w varmode(PC),-(A7)
0002F376 <AmiBlitz3.ab2@20465>   CMP.w #$3D,D0
0002F37A <AmiBlitz3.ab2@20466>    BNE.w syntaxerr
0002F37E <AmiBlitz3.ab2@20467>   BTST #$F,D2
0002F382 <AmiBlitz3.ab2@20468>    BNE.w JL_0_C31C
0002F386 <AmiBlitz3.ab2@20469>   MOVE.w JL_0_C2E0(PC),D1
0002F38A <AmiBlitz3.ab2@20470>   BSR.w pokewda5s
0002F38C <AmiBlitz3.ab2@20471>   MOVE.w D3,D1
0002F390 <AmiBlitz3.ab2@20472>   BSR.w writeword
0002F394 <AmiBlitz3.ab2@20475>   MOVE.w L_0_C2E4(PC),D1
0002F398 <AmiBlitz3.ab2@20476>   BSR.w writeword
0002F39E <AmiBlitz3.ab2@20477>   ADDQ.w #1,regnum
0002F3A0 <AmiBlitz3.ab2@20478>   MOVEQ.l #$03,D2
0002F3A4 <AmiBlitz3.ab2@20479>   BSR.w eval
0002F3AA <AmiBlitz3.ab2@20480>   MOVE.l #$D000,D1
0002F3B0 <AmiBlitz3.ab2@20481>   MOVE.l d1,lastinstruction
0002F3B2 <AmiBlitz3.ab2@20482>   TST.w (A7)+
0002F3B6 <AmiBlitz3.ab2@20483>    BEQ.w Atokejsr
0002F3B8 <AmiBlitz3.ab2@20484>   ADDQ.w #1,D1
0002F3BC <AmiBlitz3.ab2@20485> BRA.w Atokejsr
0002F3BE <AmiBlitz3.ab2@20489>   MOVE.w D0,D1
0002F3C2 <AmiBlitz3.ab2@20490>    BPL.w syntaxerr
0002F3C6 <AmiBlitz3.ab2@20491>   BCLR #$F,D1
0002F3CC <AmiBlitz3.ab2@20492>    JSR searchinstr
0002F3D0 <AmiBlitz3.ab2@20493>   MOVE.l $12(A2),D0
0002F3D4 <AmiBlitz3.ab2@20494>   TST.w -$2(A2,D0.L)
0002F3D8 <AmiBlitz3.ab2@20495>    BEQ.w freeerr
0002F3DA <AmiBlitz3.ab2@20496>   MOVEQ.l #$02,D2
0002F3DC <AmiBlitz3.ab2@20497>   MOVE.l A2,-(A7)
0002F3E0 <AmiBlitz3.ab2@20498>    BSR.w eval
0002F3E2 <AmiBlitz3.ab2@20499>   MOVEA.l (A7)+,A2
0002F3E8 <AmiBlitz3.ab2@20500>   MOVE.l A2,mymaxlib
0002F3EC <AmiBlitz3.ab2@20501>   ADDA.l $12(A2),A2
0002F3F2 <AmiBlitz3.ab2@20502>   TST.b debugmode
0002F3F6 <AmiBlitz3.ab2@20503>    BEQ.w JL_0_C3A8
0002F3FC <AmiBlitz3.ab2@20504>   MOVE.w regnum,D1
0002F3FE <AmiBlitz3.ab2@20505>   LSL.w #8,D1
0002F400 <AmiBlitz3.ab2@20506>   LSL.w #1,D1
0002F404 <AmiBlitz3.ab2@20507>   ORI.w #$B07C,D1
0002F408 <AmiBlitz3.ab2@20508>    BSR.w writeword
0002F40C <AmiBlitz3.ab2@20509>   MOVE.w -$4(A2),D1
0002F410 <AmiBlitz3.ab2@20510>    BSR.w writeword
0002F416 <AmiBlitz3.ab2@20511>   MOVE.l maxchk,D1
0002F41A <AmiBlitz3.ab2@20512>    BSR.w writelong
0002F41C <AmiBlitz3.ab2@20513>   MOVE.l A2,-(A7)
0002F420 <AmiBlitz3.ab2@20514>   MOVE.w #$C30A,D1
0002F424 <AmiBlitz3.ab2@20515>    BSR.w Atokejsr
0002F426 <AmiBlitz3.ab2@20516>   MOVEA.l (A7)+,A2
0002F42A <AmiBlitz3.ab2@20519>   MOVE.w -$2(A2),D2
0002F430 <AmiBlitz3.ab2@20522>   MOVE.w regnum,D1
0002F436 <AmiBlitz3.ab2@20523>   OR.w lslimm,D1
0002F43A <AmiBlitz3.ab2@20524>   CMP.w #$8,D2
0002F43E <AmiBlitz3.ab2@20525>    BCS.w JL_0_C3CE
0002F442 <AmiBlitz3.ab2@20526>    BSR.w writeword
0002F444 <AmiBlitz3.ab2@20527>   SUBQ.w #8,D2
0002F448 <AmiBlitz3.ab2@20528>    BNE.w JL_0_C3AC
0002F44C <AmiBlitz3.ab2@20529> BRA.w JL_0_C3DA
0002F44E <AmiBlitz3.ab2@20532>   MOVE.w D2,D0
0002F450 <AmiBlitz3.ab2@20533>   LSL.w #8,D0
0002F452 <AmiBlitz3.ab2@20534>   LSL.w #1,D0
0002F454 <AmiBlitz3.ab2@20535>   OR.w D0,D1
0002F458 <AmiBlitz3.ab2@20536>   BSR.w writeword
0002F45A <AmiBlitz3.ab2@20539> RTS
0002F45E <AmiBlitz3.ab2@20544>   Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0002F460 <AmiBlitz3.ab2@20545>   Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0002F464 <AmiBlitz3.ab2@20549> mymaxlib:  Ds.l 1
0002F468 <AmiBlitz3.ab2@20553>   BSR.w JL_0_C340
0002F46C <AmiBlitz3.ab2@20554>   LEA free(PC),A0
0002F470 <AmiBlitz3.ab2@20555>   LEA freef(PC),A1
0002F476 <AmiBlitz3.ab2@20556>   MOVE.w -$6(A2),$2(A0)
0002F47A <AmiBlitz3.ab2@20557>   BSR.w pokecode
0002F47E <AmiBlitz3.ab2@20558>   MOVE.l -$A(A2),D1
0002F482 <AmiBlitz3.ab2@20561>   BEQ.w nosuperr
0002F486 <AmiBlitz3.ab2@20562>   MOVEA.l mymaxlib(PC),A2
0002F48A <AmiBlitz3.ab2@20563> BRA.w Amakelibsub
0002F48E <AmiBlitz3.ab2@20568>   BSR.w JL_0_C340
0002F494 <AmiBlitz3.ab2@20569>   LEA use,A0
0002F49A <AmiBlitz3.ab2@20570>   LEA usef,A1
0002F4A0 <AmiBlitz3.ab2@20571>   MOVE.w -$6(A2),$2(A0)
0002F4A6 <AmiBlitz3.ab2@20572>   MOVE.w -$6(A2),-$2(A1)
0002F4AA <AmiBlitz3.ab2@20573>   ADDQ.w #4,-$2(A1)
0002F4AE <AmiBlitz3.ab2@20574>   BSR.w pokecode
0002F4B2 <AmiBlitz3.ab2@20575>   MOVE.l -$E(A2),D1
0002F4B6 <AmiBlitz3.ab2@20576> BRA.w maxjsr
0002F4BC <AmiBlitz3.ab2@20580>   JSR get1bytemain
0002F4C2 <AmiBlitz3.ab2@20584>   MOVE.l firstiff,D0
0002F4C6 <AmiBlitz3.ab2@20585>    BEQ.w noiferr
0002F4C8 <AmiBlitz3.ab2@20586>   MOVEA.l D0,A0
0002F4CE <AmiBlitz3.ab2@20587>   CMPI.b #$1,$D(A0)
0002F4D2 <AmiBlitz3.ab2@20588>    BEQ.w illelseerr
0002F4D6 <AmiBlitz3.ab2@20589>   MOVE.w #$6000,D1
0002F4DC <AmiBlitz3.ab2@20591>     TST.b fast
0002F4E0 <AmiBlitz3.ab2@20592>     BEQ 'l1
0002F4E6 <AmiBlitz3.ab2@20593>     OR.l #$ff,d1
0002F4EA <AmiBlitz3.ab2@20594>     BSR writeword
0002F4EC <AmiBlitz3.ab2@20598>   SWAP D1
0002F4F0 <AmiBlitz3.ab2@20599>   BSR.w writelong
0002F4F2 <AmiBlitz3.ab2@20600>   MOVEQ.l #$00,D1
0002F4F6 <AmiBlitz3.ab2@20601>   BSR.w AJL_0_D7B8
0002F4FE <AmiBlitz3.ab2@20602>   MOVE.l destpointer,$8(A0)
0002F502 <AmiBlitz3.ab2@20603> BRA.w do_then
0002F508 <AmiBlitz3.ab2@20607>   LEA ptr_parameterstore,A0
0002F50A <AmiBlitz3.ab2@20608>   MOVE.l A0,-(A7)
0002F50E <AmiBlitz3.ab2@20609>   BSR.w JL_0_C23A
0002F512 <AmiBlitz3.ab2@20610> BRA.w handle_compileerror
0002F516 <AmiBlitz3.ab2@20614>   BSR.w JL_0_BF6A
0002F518 <AmiBlitz3.ab2@20615>   MOVEQ.l #$05,D1
0002F522 <AmiBlitz3.ab2@20617>   MOVE.w oldqflag,instringon
0002F528 <AmiBlitz3.ab2@20618>   MOVEA.l lastsourcepos,A5
0002F52E <AmiBlitz3.ab2@20619>   LEA AJL_0_C25E,A0
0002F532 <AmiBlitz3.ab2@20620> BRA.w JL_0_C4B4
0002F538 <AmiBlitz3.ab2@20624>   LEA ptr_parameterstore,A0
0002F53C <AmiBlitz3.ab2@20625>   BSR.w JL_0_C23A
0002F542 <AmiBlitz3.ab2@20626>   JSR get1bytemain
0002F546 <AmiBlitz3.ab2@20627>   BSR.w JL_0_CCA8
0002F54C <AmiBlitz3.ab2@20628>   LEA namebuff2,A0
0002F550 <AmiBlitz3.ab2@20629>   BSR.w JL_0_C23A
0002F556 <AmiBlitz3.ab2@20630>   LEA AJL_0_C262,A0
0002F558 <AmiBlitz3.ab2@20633>   LSL.w #2,D1
0002F55E <AmiBlitz3.ab2@20634>   LEA CIF_branches,A1
0002F562 <AmiBlitz3.ab2@20635>   MOVE.l $0(A1,D1.W),-(A7)
0002F564 <AmiBlitz3.ab2@20636>   MOVEQ.l #-$01,D1
0002F566 <AmiBlitz3.ab2@20639>   JSR (A0)
0002F568 <AmiBlitz3.ab2@20640>   MOVEA.l (A7)+,A1
0002F56A <AmiBlitz3.ab2@20643> JMP (A1)
0002F56E <AmiBlitz3.ab2@20647>   BEQ.w JL_0_C4F6
0002F572 <AmiBlitz3.ab2@20648> BRA.w JL_0_C4F4
0002F576 <AmiBlitz3.ab2@20652>   BNE.w JL_0_C4F6
0002F57A <AmiBlitz3.ab2@20653> BRA.w JL_0_C4F4
0002F57E <AmiBlitz3.ab2@20657>   BLT.w JL_0_C4F6
0002F582 <AmiBlitz3.ab2@20658> BRA.w JL_0_C4F4
0002F586 <AmiBlitz3.ab2@20662>   BLE.w JL_0_C4F6
0002F58A <AmiBlitz3.ab2@20663> BRA.w JL_0_C4F4
0002F58E <AmiBlitz3.ab2@20667>   BGT.w JL_0_C4F6
0002F592 <AmiBlitz3.ab2@20668> BRA.w JL_0_C4F4
0002F596 <AmiBlitz3.ab2@20672>   BGE.w JL_0_C4F6
0002F598 <AmiBlitz3.ab2@20675>   MOVEQ.l #$00,D1
0002F59E <AmiBlitz3.ab2@20678>   MOVEA.l concomsp,A0
0002F5A4 <AmiBlitz3.ab2@20679>   MOVE.w skipcode,(A0)+
0002F5AA <AmiBlitz3.ab2@20680>   MOVE.l A0,concomsp
0002F5B0 <AmiBlitz3.ab2@20681>   MOVE.w D1,skipcode
0002F5B6 <AmiBlitz3.ab2@20682>   JSR get1bytemain
0002F5BA <AmiBlitz3.ab2@20683>    BNE.w syntaxerr
0002F5C0 <AmiBlitz3.ab2@20684> JMP bakup
0002F5C8 <AmiBlitz3.ab2@20688> rescode:   Dc.b $2B,$7c,$00,$00,$00,$00 :   Ds.w 1         ;MOVE.L  #$00000000,$0000(A5)
0002F5CC <AmiBlitz3.ab2@20689> rescode2:  Dc.b $2B,$40                 :   Ds.w 1         ;MOVE.L  D0,$0000(A5)
0002F5D0 <AmiBlitz3.ab2@20696>   MOVE.w #$FC17,D1
0002F5D6 <AmiBlitz3.ab2@20697>   JSR uselib
0002F5DC <AmiBlitz3.ab2@20699>   JSR reget
0002F5E0 <AmiBlitz3.ab2@20700>    BEQ.w do_Restore__resbeg
0002F5E4 <AmiBlitz3.ab2@20701>   BSR.w JL_0_AE22                                          ;get label name!
0002F5E8 <AmiBlitz3.ab2@20702>   MOVE.w rescode(PC),D1
0002F5EC <AmiBlitz3.ab2@20703>   BSR.w writeword
0002F5F2 <AmiBlitz3.ab2@20704>   JSR addoff                                               ;add offset
0002F5F6 <AmiBlitz3.ab2@20705>   MOVE.l $C(A2),D1
0002F5FA <AmiBlitz3.ab2@20706>   BSR.w writelong
0002F5FE <AmiBlitz3.ab2@20707>   MOVE.w rescode+6(PC),D1
0002F602 <AmiBlitz3.ab2@20708>   BSR.w writeword
0002F606 <AmiBlitz3.ab2@20709>   MOVE.l $4(A2),D1                                         ;is it outstanding?
0002F60A <AmiBlitz3.ab2@20710>   BEQ.w do_Restore__no
0002F60C <AmiBlitz3.ab2@20712>   MOVEA.l D1,A1
0002F610 <AmiBlitz3.ab2@20713>   ADDQ.l #1,$4(A1)                                         ;make odd - flag for data reference.
0002F612 <AmiBlitz3.ab2@20714> RTS
0002F614 <AmiBlitz3.ab2@20719> RTS
0002F618 <AmiBlitz3.ab2@20722>   MOVE.w #$CD00,D1
0002F61E <AmiBlitz3.ab2@20723>   JSR Atokejsr
0002F622 <AmiBlitz3.ab2@20724>   MOVE.l rescode2(PC),D1
0002F628 <AmiBlitz3.ab2@20725> JMP writelong
0002F62C <AmiBlitz3.ab2@20729>   MOVE.w #$FC17,D1
0002F632 <AmiBlitz3.ab2@20730>   JSR uselib
0002F638 <AmiBlitz3.ab2@20733>   MOVE.l dataget,D1
0002F63C <AmiBlitz3.ab2@20734>   BSR.w writelong
0002F640 <AmiBlitz3.ab2@20735>   BSR.w getparameter
0002F644 <AmiBlitz3.ab2@20736>   BSR.w JL_0_8E3C
0002F648 <AmiBlitz3.ab2@20737>   BSR.w calcvar
0002F64C <AmiBlitz3.ab2@20738>   BTST #$E,D2
0002F650 <AmiBlitz3.ab2@20739>    BEQ.w JL_0_C5A6
0002F654 <AmiBlitz3.ab2@20740>   MOVE.b #$6,D2
0002F656 <AmiBlitz3.ab2@20743>   TST.b D2
0002F65A <AmiBlitz3.ab2@20744>    BEQ.w noleterr
0002F660 <AmiBlitz3.ab2@20745>   TST.b debugmode
0002F664 <AmiBlitz3.ab2@20746>    BEQ.w JL_0_C5D0
0002F668 <AmiBlitz3.ab2@20747>   MOVE.w #$7000,D1
0002F66A <AmiBlitz3.ab2@20748>   MOVE.b D2,D1
0002F66E <AmiBlitz3.ab2@20749>   ANDI.b #$F,D1
0002F672 <AmiBlitz3.ab2@20750>   BSR.w writeword
0002F676 <AmiBlitz3.ab2@20751>   MOVE.w #$C310,D1
0002F678 <AmiBlitz3.ab2@20752>   MOVE.w D2,-(A7)
0002F67C <AmiBlitz3.ab2@20753>   BSR.w Atokejsr
0002F67E <AmiBlitz3.ab2@20754>   MOVE.w (A7)+,D2
0002F682 <AmiBlitz3.ab2@20757>   CMP.b #$7,D2
0002F686 <AmiBlitz3.ab2@20758>    BEQ.w JL_0_C684
0002F68A <AmiBlitz3.ab2@20759>   CMP.b #$1,D2
0002F68E <AmiBlitz3.ab2@20760>    BNE.w JL_0_C62A
0002F694 <AmiBlitz3.ab2@20761>   LEA dataletb2,A0
0002F69A <AmiBlitz3.ab2@20762>   LEA dataletb2f,A1
0002F69E <AmiBlitz3.ab2@20763>   BTST #$F,D2
0002F6A2 <AmiBlitz3.ab2@20764>    BEQ.w JL_0_C5FC
0002F6A6 <AmiBlitz3.ab2@20765>   BSR.w pokecode
0002F6AA <AmiBlitz3.ab2@20766> BRA.w JL_0_C668
0002F6B0 <AmiBlitz3.ab2@20769>   LEA dataletb,A0
0002F6B6 <AmiBlitz3.ab2@20770>   LEA dataletbf,A1
0002F6BC <AmiBlitz3.ab2@20771>   TST.w varmode
0002F6C0 <AmiBlitz3.ab2@20772>    BEQ.w JL_0_C61E
0002F6C6 <AmiBlitz3.ab2@20773>   LEA dataletbl,A0
0002F6CC <AmiBlitz3.ab2@20774>   LEA dataletblf,A1
0002F6D0 <AmiBlitz3.ab2@20777>   MOVE.w D3,$4(A0)
0002F6D4 <AmiBlitz3.ab2@20778>   BSR.w pokecode
0002F6D8 <AmiBlitz3.ab2@20779> BRA.w JL_0_C668
0002F6DE <AmiBlitz3.ab2@20782>   LEA dataletw,A0
0002F6E2 <AmiBlitz3.ab2@20783>   CMP.b #$3,D2
0002F6E6 <AmiBlitz3.ab2@20784>    BCS.w JL_0_C63E
0002F6EC <AmiBlitz3.ab2@20785>   LEA dataletl,A0
0002F6F0 <AmiBlitz3.ab2@20788>   BTST #$F,D2
0002F6F4 <AmiBlitz3.ab2@20789>    BEQ.w JL_0_C652
0002F6F8 <AmiBlitz3.ab2@20790>   MOVE.w $4(A0),D1
0002F6FC <AmiBlitz3.ab2@20791>    BSR.w writeword
0002F700 <AmiBlitz3.ab2@20792> BRA.w JL_0_C668
0002F706 <AmiBlitz3.ab2@20795>   TST.w varmode
0002F70A <AmiBlitz3.ab2@20796>    BEQ.w JL_0_C65E
0002F70C <AmiBlitz3.ab2@20797>   ADDQ.w #6,A0
0002F710 <AmiBlitz3.ab2@20800>   MOVE.w D3,$2(A0)
0002F712 <AmiBlitz3.ab2@20801>   MOVE.l (A0),D1
0002F716 <AmiBlitz3.ab2@20802>   BSR.w writelong
0002F71C <AmiBlitz3.ab2@20805>   MOVE.l dataput,D1
0002F720 <AmiBlitz3.ab2@20806>    BSR.w writelong
0002F724 <AmiBlitz3.ab2@20807>   CMP.w #$2C,D0
0002F728 <AmiBlitz3.ab2@20808>    BEQ.w JL_0_C67C
0002F72A <AmiBlitz3.ab2@20809> RTS
0002F730 <AmiBlitz3.ab2@20812>   JSR get1bytemain
0002F734 <AmiBlitz3.ab2@20813> BRA.w JL_0_C584
0002F73A <AmiBlitz3.ab2@20817>   MOVE.w stlenget,D1
0002F73E <AmiBlitz3.ab2@20818>    BSR.w writeword
0002F742 <AmiBlitz3.ab2@20819>   BTST #$F,D2
0002F746 <AmiBlitz3.ab2@20820>    BNE.w JL_0_C6C0
0002F74C <AmiBlitz3.ab2@20821>   TST.w varmode
0002F750 <AmiBlitz3.ab2@20822>    BEQ.w JL_0_C6B0
0002F756 <AmiBlitz3.ab2@20823>   MOVE.w D3,leaampl+2
0002F75C <AmiBlitz3.ab2@20824>   MOVE.l leaampl,D1
0002F760 <AmiBlitz3.ab2@20825> BRA.w JL_0_C6BC
0002F766 <AmiBlitz3.ab2@20828>   MOVE.w D3,leaamp+2
0002F76C <AmiBlitz3.ab2@20829>   MOVE.l leaamp,D1
0002F770 <AmiBlitz3.ab2@20832>   BSR.w writelong
0002F774 <AmiBlitz3.ab2@20835>   MOVE.w #$C701,D1
0002F77A <AmiBlitz3.ab2@20836>   MOVE.w varmode,D2
0002F77E <AmiBlitz3.ab2@20837>    BEQ.w JL_0_C6D0
0002F780 <AmiBlitz3.ab2@20838>   SUBQ.w #1,D1
0002F784 <AmiBlitz3.ab2@20841>   BSR.w Atokejsr
0002F78C <AmiBlitz3.ab2@20842>   MOVE.w #$FFFF,lasta6
0002F792 <AmiBlitz3.ab2@20843>   LEA stalign,A0
0002F798 <AmiBlitz3.ab2@20844>   LEA stalignf,A1
0002F79C <AmiBlitz3.ab2@20845>   BSR.w pokecode
0002F7A0 <AmiBlitz3.ab2@20846> BRA.w JL_0_C668
0002F7A4 <AmiBlitz3.ab2@20850>   CMP.w #$2E,D0                                            ;definecode 'lb 'lw 'll
0002F7A8 <AmiBlitz3.ab2@20851>    BNE.w JL_0_C720
0002F7AE <AmiBlitz3.ab2@20852>   JSR get1bytemain
0002F7B2 <AmiBlitz3.ab2@20853>   CMP.w #$77,D0
0002F7B6 <AmiBlitz3.ab2@20854>    BEQ.w JL_0_C71C
0002F7BA <AmiBlitz3.ab2@20855>   CMP.w #$62,D0
0002F7BE <AmiBlitz3.ab2@20856>    BEQ.w JL_0_C718
0002F7C2 <AmiBlitz3.ab2@20857>   CMP.w #"s",d0
0002F7C6 <AmiBlitz3.ab2@20858>   BEQ single3
0002F7CA <AmiBlitz3.ab2@20859>   CMP.w #"d",d0
0002F7CE <AmiBlitz3.ab2@20860>   BEQ double3
0002F7D2 <AmiBlitz3.ab2@20861>   CMP.w #$6C,D0
0002F7D6 <AmiBlitz3.ab2@20862>    BNE.w syntaxerr
0002F7D8 <AmiBlitz3.ab2@20863>   MOVEQ.l #$02,D1
0002F7DA <AmiBlitz3.ab2@20864> RTS
0002F7E2 <AmiBlitz3.ab2@20868>   MOVE.b #1,iee
0002F7E4 <AmiBlitz3.ab2@20869>   MOVEQ.l #$3,d1
0002F7E6 <AmiBlitz3.ab2@20870> RTS
0002F7EE <AmiBlitz3.ab2@20874>   MOVE.b #1,iee
0002F7F0 <AmiBlitz3.ab2@20875>   MOVEQ.l #$4,d1
0002F7F2 <AmiBlitz3.ab2@20876> RTS
0002F7F4 <AmiBlitz3.ab2@20880>   MOVEQ.l #$00,D1
0002F7F6 <AmiBlitz3.ab2@20881> RTS
0002F7F8 <AmiBlitz3.ab2@20885>   MOVEQ.l #$01,D1
0002F7FA <AmiBlitz3.ab2@20886> RTS
0002F7FC <AmiBlitz3.ab2@20890>   MOVEQ.l #$01,D1
0002F802 <AmiBlitz3.ab2@20891> JMP bakup
0002F806 <AmiBlitz3.ab2@20895>   BSR.w JL_0_C6F0
0002F808 <AmiBlitz3.ab2@20897>   MOVE.w D1,-(A7)
0002F80C <AmiBlitz3.ab2@20898>    BSR.w AJL_0_BF6E
0002F810 <AmiBlitz3.ab2@20899>   CMP.w #$2C,D0
0002F814 <AmiBlitz3.ab2@20900>    BNE.w syntaxerr
0002F816 <AmiBlitz3.ab2@20901>   MOVE.l D3,-(A7)
0002F81A <AmiBlitz3.ab2@20902>    BSR.w AJL_0_BF6E
0002F81C <AmiBlitz3.ab2@20903>   MOVE.l D3,D1
0002F81E <AmiBlitz3.ab2@20904>   MOVE.l (A7)+,D3
0002F820 <AmiBlitz3.ab2@20905>   MOVE.w (A7)+,D2
0002F824 <AmiBlitz3.ab2@20906>    BEQ.w JL_0_C774
0002F828 <AmiBlitz3.ab2@20910>   CMP.w #$1,D2
0002F82C <AmiBlitz3.ab2@20911>    BEQ.w JL_0_C768
0002F82E <AmiBlitz3.ab2@20914>   SWAP D1
0002F832 <AmiBlitz3.ab2@20915>    BSR.w writeword
0002F834 <AmiBlitz3.ab2@20916>   SWAP D1
0002F838 <AmiBlitz3.ab2@20917>    BSR.w writeword
0002F83A <AmiBlitz3.ab2@20918>   SUBQ.l #1,D3
0002F83E <AmiBlitz3.ab2@20919>    BNE.w JL_0_C754
0002F840 <AmiBlitz3.ab2@20920> RTS
0002F844 <AmiBlitz3.ab2@20923>    BSR.w writeword
0002F846 <AmiBlitz3.ab2@20924>   SUBQ.l #1,D3
0002F84A <AmiBlitz3.ab2@20925>    BNE.w JL_0_C768
0002F84C <AmiBlitz3.ab2@20926> RTS
0002F850 <AmiBlitz3.ab2@20929>    BSR.w writebyte
0002F852 <AmiBlitz3.ab2@20930>   SUBQ.l #1,D3
0002F856 <AmiBlitz3.ab2@20931>    BNE.w JL_0_C774
0002F858 <AmiBlitz3.ab2@20932> RTS
0002F85C <AmiBlitz3.ab2@20936>   BSR.w JL_0_C6F0                                          ;definestorage
0002F85E <AmiBlitz3.ab2@20937>   MOVE.w D1,-(A7)
0002F862 <AmiBlitz3.ab2@20938>   BSR.w AJL_0_BF6E
0002F864 <AmiBlitz3.ab2@20939>   MOVE.w (A7)+,D1
0002F866 <AmiBlitz3.ab2@20940>   LSL.l D1,D3
0002F868 <AmiBlitz3.ab2@20941>   MOVE.l d3,d0
0002F86C <AmiBlitz3.ab2@20942>   BEQ 'll5
0002F86E <AmiBlitz3.ab2@20943>   MOVEQ #0,d1
0002F874 <AmiBlitz3.ab2@20946>     JSR writebyte
0002F876 <AmiBlitz3.ab2@20947>     SUBQ.l #1,d3
0002F87A <AmiBlitz3.ab2@20948>   BNE.s 'll10
0002F87C <AmiBlitz3.ab2@20951> RTS
0002F87E <AmiBlitz3.ab2@20955>   MOVE.w D0,-(A7)
0002F884 <AmiBlitz3.ab2@20956>   LEA dummyasm,A0
0002F88A <AmiBlitz3.ab2@20957>   MOVEA.l destpointer,A1
0002F894 <AmiBlitz3.ab2@20958>   MOVE.w asmlen2,asmlen
0002F89A <AmiBlitz3.ab2@20959>   JSR insasm
0002F89C <AmiBlitz3.ab2@20960>   MOVE.w (A7)+,D0
0002F89E <AmiBlitz3.ab2@20961> RTS
0002F8A2 <AmiBlitz3.ab2@20965>   BSR.w JL_0_C6F0
0002F8AC <AmiBlitz3.ab2@20967>   MOVE.l #ptr_parameterstore,asmbuff
0002F8AE <AmiBlitz3.ab2@20968>   TST.w D1
0002F8B2 <AmiBlitz3.ab2@20969>    BEQ.w JL_0_C7EE
0002F8B6 <AmiBlitz3.ab2@20970>   CMP.w #$1,D1
0002F8BA <AmiBlitz3.ab2@20971>    BEQ.w JL_0_C844
0002F8BE <AmiBlitz3.ab2@20972>   CMP.w #$2,d1
0002F8C2 <AmiBlitz3.ab2@20973>    BEQ long
0002F8C6 <AmiBlitz3.ab2@20974>   CMP.w #$3,d1
0002F8CA <AmiBlitz3.ab2@20975>    BEQ single
0002F8CC <AmiBlitz3.ab2@20976>    MOVEQ.l #$0d,D3
0002F8D2 <AmiBlitz3.ab2@20982>    JSR asmconst
0002F8D6 <AmiBlitz3.ab2@20983>    BSR.w JL_0_C796
0002F8DA <AmiBlitz3.ab2@20984>    BSR.w writelong
0002F8DE <AmiBlitz3.ab2@20985>    BSR   writelong
0002F8E2 <AmiBlitz3.ab2@20986>   CMP.w #$2C,D0
0002F8E6 <AmiBlitz3.ab2@20987>    BEQ.w JL_0_C7D8b
0002F8E8 <AmiBlitz3.ab2@20988> RTS
0002F8EA <AmiBlitz3.ab2@20992>   MOVEQ.l #$0B,D3
0002F8F2 <AmiBlitz3.ab2@20996>   MOVE.b #1,_dcb
0002F8F8 <AmiBlitz3.ab2@20999>   JSR asmconst
0002F8FE <AmiBlitz3.ab2@21000>   CLR.b _dcb
0002F902 <AmiBlitz3.ab2@21001>   BSR.w JL_0_C796
0002F906 <AmiBlitz3.ab2@21002>   BSR writebyte
0002F90A <AmiBlitz3.ab2@21003>   BSR writebyte
0002F90E <AmiBlitz3.ab2@21004>   BSR writebyte                                            ;long
0002F912 <AmiBlitz3.ab2@21005>   BSR writebyte
0002F916 <AmiBlitz3.ab2@21006>   CMP.w #$2C,D0
0002F91A <AmiBlitz3.ab2@21007>    BEQ.w JL_0_C7D8
0002F91C <AmiBlitz3.ab2@21008> RTS
0002F91E <AmiBlitz3.ab2@21012>   MOVEQ.l #$0c,D3
0002F926 <AmiBlitz3.ab2@21016>   MOVE.b #1,_dcb
0002F92C <AmiBlitz3.ab2@21019>   JSR asmconst
0002F932 <AmiBlitz3.ab2@21020>   CLR.b _dcb
0002F936 <AmiBlitz3.ab2@21021>   BSR.w JL_0_C796
0002F93A <AmiBlitz3.ab2@21022>   BSR.w writebyte
0002F93E <AmiBlitz3.ab2@21023>   BSR.w writebyte
0002F942 <AmiBlitz3.ab2@21024>   BSR.w writebyte
0002F946 <AmiBlitz3.ab2@21025>   BSR.w writebyte
0002F94A <AmiBlitz3.ab2@21026>   CMP.w #$2C,D0
0002F94E <AmiBlitz3.ab2@21027>    BEQ.w JL_0_C7D8a
0002F950 <AmiBlitz3.ab2@21028> RTS
0002F952 <AmiBlitz3.ab2@21033>   MOVEQ.l #$11,D3
0002F958 <AmiBlitz3.ab2@21036>   JSR get1bytemain
0002F95C <AmiBlitz3.ab2@21037>   CMP.w #$22,D0
0002F960 <AmiBlitz3.ab2@21038>    BNE.w JL_0_C81E
0002F962 <AmiBlitz3.ab2@21041>   MOVE.b (a5)+,d0                                          ;bsr.w get1bytemain ascii dc.b
0002F966 <AmiBlitz3.ab2@21042>    BEQ.w syntaxerr
0002F96A <AmiBlitz3.ab2@21043>   CMP.w #$22,D0
0002F96E <AmiBlitz3.ab2@21044>    BEQ.w JL_0_C816
0002F972 <AmiBlitz3.ab2@21045>   CMP.b #"\",d0
0002F976 <AmiBlitz3.ab2@21046>    BNE 'n1
0002F97A <AmiBlitz3.ab2@21047>   CMP.b #"\",(a5)
0002F97E <AmiBlitz3.ab2@21048>    BEQ 'do1
0002F980 <AmiBlitz3.ab2@21051>   MOVE.w D0,D1
0002F984 <AmiBlitz3.ab2@21052>   BSR.w writebyte
0002F988 <AmiBlitz3.ab2@21053> BRA.w JL_0_C7FC
0002F990 <AmiBlitz3.ab2@21056>   CMP.l #"__DA",1(a5)
0002F994 <AmiBlitz3.ab2@21057>    BNE 'nodate1
0002F99C <AmiBlitz3.ab2@21058>   CMP.l #"TE__",5(a5)
0002F9A0 <AmiBlitz3.ab2@21059>    BEQ 'c1
0002F9A8 <AmiBlitz3.ab2@21060>   CMP.l #"TE_G",5(a5)
0002F9AC <AmiBlitz3.ab2@21061>    BNE 'nodate1
0002F9B4 <AmiBlitz3.ab2@21062>   CMP.l #"ER__",9(a5)
0002F9B8 <AmiBlitz3.ab2@21063>    BNE 'nodate1
0002F9BE <AmiBlitz3.ab2@21064>   JSR compiledatedc_ger
0002F9C2 <AmiBlitz3.ab2@21065> BRA 'n1
0002F9C8 <AmiBlitz3.ab2@21068>   JSR compiledatedc
0002F9CC <AmiBlitz3.ab2@21069> BRA 'n1
0002F9D4 <AmiBlitz3.ab2@21072>   CMP.l #"__VE",1(a5)
0002F9D8 <AmiBlitz3.ab2@21073>    BNE 'n1
0002F9DE <AmiBlitz3.ab2@21074>   CMP.w #"R_",5(a5)
0002F9E2 <AmiBlitz3.ab2@21075>    BNE 'n1
0002F9E8 <AmiBlitz3.ab2@21076>   JSR version_string_dc
0002F9EC <AmiBlitz3.ab2@21077> BRA.w JL_0_C7FC
0002F9F2 <AmiBlitz3.ab2@21081>   CLR.w instringon
0002F9F8 <AmiBlitz3.ab2@21082>   JSR get1bytemain
0002F9FC <AmiBlitz3.ab2@21083> BRA.w JL_0_C83A
0002FA06 <AmiBlitz3.ab2@21088>    MOVE.w oldqflag,instringon
0002FA0C <AmiBlitz3.ab2@21089>   MOVEA.l lastsourcepos,A5
0002FA12 <AmiBlitz3.ab2@21090>    JSR asmconst
0002FA18 <AmiBlitz3.ab2@21091>   SUBQ.l #1,destpointer
0002FA1C <AmiBlitz3.ab2@21092>    BSR.w JL_0_C796
0002FA22 <AmiBlitz3.ab2@21093>   ADDQ.l #1,destpointer
0002FA26 <AmiBlitz3.ab2@21094>    BSR.w writebyte
0002FA2A <AmiBlitz3.ab2@21097>   CMP.w #$2C,D0
0002FA2E <AmiBlitz3.ab2@21098>    BEQ.w JL_0_C7F0
0002FA30 <AmiBlitz3.ab2@21099> RTS
0002FA32 <AmiBlitz3.ab2@21103>   MOVEQ.l #$10,D3
0002FA3A <AmiBlitz3.ab2@21109>   MOVE.b #1,_dcb
0002FA40 <AmiBlitz3.ab2@21110>   JSR asmconst
0002FA46 <AmiBlitz3.ab2@21111>   CLR.b _dcb
0002FA4A <AmiBlitz3.ab2@21112>   BSR.w JL_0_C796
0002FA4E <AmiBlitz3.ab2@21113>   BSR.w writebyte
0002FA52 <AmiBlitz3.ab2@21114>   BSR.w writebyte
0002FA56 <AmiBlitz3.ab2@21115>   CMP.w #$2C,D0
0002FA5A <AmiBlitz3.ab2@21116>    BEQ.w JL_0_C84A
0002FA5C <AmiBlitz3.ab2@21117> RTS
0002FA62 <AmiBlitz3.ab2@21121>   ADDQ.l #3,destpointer
0002FA6A <AmiBlitz3.ab2@21122>   ANDI.w #$FFFC,destpointer+2
0002FA6C <AmiBlitz3.ab2@21123> RTS
0002FA72 <AmiBlitz3.ab2@21127>   ADDQ.l #7,destpointer
0002FA7A <AmiBlitz3.ab2@21128>   ANDI.w #$FFF8,destpointer+2
0002FA7C <AmiBlitz3.ab2@21129> RTS
0002FA82 <AmiBlitz3.ab2@21133>   ADDQ.l #1,destpointer                                    ;even
0002FA8A <AmiBlitz3.ab2@21134>   BCLR #$0,destpointer+3
0002FA8C <AmiBlitz3.ab2@21135> RTS
0002FA8E <AmiBlitz3.ab2@21138> datasize: Ds.w 1
0002FA94 <AmiBlitz3.ab2@21148>   TST.b debugmode
0002FA98 <AmiBlitz3.ab2@21149>   BEQ.w pdt__skip
0002FA9C <AmiBlitz3.ab2@21150>   MOVE.w #$4420,D0                                         ;'D '
0002FAA0 <AmiBlitz3.ab2@21151>   MOVE.b datasize+1(PC),D0
0002FAA4 <AmiBlitz3.ab2@21152> BRA.w JL_0_C1E6
0002FAA6 <AmiBlitz3.ab2@21155> RTS
0002FAAA <AmiBlitz3.ab2@21159>   MOVE.w #$FC17,D1
0002FAB0 <AmiBlitz3.ab2@21160>    JSR uselib
0002FABA <AmiBlitz3.ab2@21162>    MOVE.w oldqflag,instringon
0002FAC0 <AmiBlitz3.ab2@21163>   MOVEA.l lastsourcepos,A5
0002FAC6 <AmiBlitz3.ab2@21164>    JSR AJL_0_498A
0002FACC <AmiBlitz3.ab2@21165>   MOVE.w D1,datasize
0002FAD0 <AmiBlitz3.ab2@21166>   CMP.w #$7,D1
0002FAD4 <AmiBlitz3.ab2@21167>    BEQ.w JL_0_C944
0002FAD6 <AmiBlitz3.ab2@21168>   MOVE.w D1,-(A7)
0002FADA <AmiBlitz3.ab2@21171>   BSR.w pdt
0002FADC <AmiBlitz3.ab2@21172>   MOVE.w (A7),D2
0002FAE0 <AmiBlitz3.ab2@21173>    BSR.w JL_0_B1D8
0002FAE2 <AmiBlitz3.ab2@21174>   CMP.w (A7),D2                                            ;datamode
0002FAE6 <AmiBlitz3.ab2@21175>    BEQ.w JL_0_C920
0002FAE8 <AmiBlitz3.ab2@21176>   MOVE.w D2,D1
0002FAEA <AmiBlitz3.ab2@21177>   MOVE.w (A7),D2
0002FAEE <AmiBlitz3.ab2@21178>   CMP.w #$2,D2
0002FAF2 <AmiBlitz3.ab2@21179>    BNE.w JL_0_C8FE
0002FAF6 <AmiBlitz3.ab2@21180>   CMP.w #$3,D1
0002FAFA <AmiBlitz3.ab2@21181>    BNE.w baddaterr
0002FB00 <AmiBlitz3.ab2@21182>   CMP.l #$10000,D3
0002FB04 <AmiBlitz3.ab2@21183>    BCC.w baddaterr
0002FB08 <AmiBlitz3.ab2@21184> BRA.w JL_0_C920
0002FB0C <AmiBlitz3.ab2@21187>   CMP.w #$1,D2
0002FB10 <AmiBlitz3.ab2@21188>    BNE.w JL_0_C91C
0002FB14 <AmiBlitz3.ab2@21189>   CMP.w #$2,D1
0002FB18 <AmiBlitz3.ab2@21190>    BNE.w baddaterr
0002FB1E <AmiBlitz3.ab2@21191>   CMP.l #$100,D3
0002FB22 <AmiBlitz3.ab2@21192>    BCC.w baddaterr
0002FB26 <AmiBlitz3.ab2@21193> BRA.w JL_0_C920
0002FB2A <AmiBlitz3.ab2@21196> BRA.w baddaterr
0002FB2E <AmiBlitz3.ab2@21199>   CMP.w #$3,D2
0002FB32 <AmiBlitz3.ab2@21200>   BCC.w JL_0_C930
0002FB36 <AmiBlitz3.ab2@21201>   BSR.w JL_0_C1E6
0002FB3A <AmiBlitz3.ab2@21202> BRA.w JL_0_C934
0002FB40 <AmiBlitz3.ab2@21205>   TST.b iee
0002FB44 <AmiBlitz3.ab2@21206>   BEQ 'old
0002FB48 <AmiBlitz3.ab2@21207>   CMP.b #5,d2
0002FB4C <AmiBlitz3.ab2@21208>   BNE 'old
0002FB50 <AmiBlitz3.ab2@21209>   Dc.l $f2006400                                           ;  fpu data write fmove.s fp0,d0
0002FB54 <AmiBlitz3.ab2@21213>   BSR.w JL_0_C1DE                                          ;write data >3
0002FB5A <AmiBlitz3.ab2@21216>   JSR reget
0002FB5E <AmiBlitz3.ab2@21217>   CMP.w #$2C,D0
0002FB62 <AmiBlitz3.ab2@21218>    BEQ.w JL_0_C8CC
0002FB64 <AmiBlitz3.ab2@21219>   ADDQ.w #2,A7
0002FB66 <AmiBlitz3.ab2@21220> RTS
0002FB6A <AmiBlitz3.ab2@21223>    BSR.w pdt
0002FB70 <AmiBlitz3.ab2@21224>   MOVE.l data2,-(A7)
0002FB74 <AmiBlitz3.ab2@21225>    BSR.w JL_0_C1DE
0002FB76 <AmiBlitz3.ab2@21226>   MOVEQ.l #$00,D1
0002FB7C <AmiBlitz3.ab2@21227>    JSR get1bytemain
0002FB80 <AmiBlitz3.ab2@21228>    BEQ.w JL_0_C9A6
0002FB84 <AmiBlitz3.ab2@21229>   CMP.w #$22,D0
0002FB88 <AmiBlitz3.ab2@21230>    BEQ.w JL_0_C988
0002FB8C <AmiBlitz3.ab2@21231>   CMP.w #$2C,D0
0002FB90 <AmiBlitz3.ab2@21232>    BEQ.w JL_0_C9A6
0002FB94 <AmiBlitz3.ab2@21235>    BSR.w JL_0_C210
0002FB96 <AmiBlitz3.ab2@21236>   ADDQ.w #1,D1
0002FB9C <AmiBlitz3.ab2@21237>    JSR getchar
0002FB9E <AmiBlitz3.ab2@21238>   TST.w D0
0002FBA2 <AmiBlitz3.ab2@21239>    BEQ.w JL_0_C9A6
0002FBA6 <AmiBlitz3.ab2@21240>   CMP.w #$2C,D0
0002FBAA <AmiBlitz3.ab2@21241>    BEQ.w JL_0_C9A6
0002FBAE <AmiBlitz3.ab2@21242> BRA.w JL_0_C96C
0002FBB0 <AmiBlitz3.ab2@21246>    MOVEQ #0,d0
0002FBB2 <AmiBlitz3.ab2@21247>    MOVE.b (a5)+,d0
0002FBB6 <AmiBlitz3.ab2@21248>    BEQ.w notqerr2
0002FBBA <AmiBlitz3.ab2@21249>   CMP.w #$22,D0
0002FBBE <AmiBlitz3.ab2@21250>    BEQ.w JL_0_C9A2
0002FBC2 <AmiBlitz3.ab2@21251>    BSR.w JL_0_C210
0002FBC4 <AmiBlitz3.ab2@21252>   ADDQ.w #1,D1
0002FBC8 <AmiBlitz3.ab2@21253> BRA.w JL_0_C988
0002FBCE <AmiBlitz3.ab2@21254> notqerr2 JMP notqerr
0002FBD4 <AmiBlitz3.ab2@21256>   CLR.w instringon
0002FBDA <AmiBlitz3.ab2@21257>   JSR get1bytemain
0002FBDC <AmiBlitz3.ab2@21260>   MOVEA.l (A7)+,A0
0002FBE2 <AmiBlitz3.ab2@21261>   MOVE.w dontwrite,D2
0002FBE6 <AmiBlitz3.ab2@21262>    BNE.w JL_0_C9B4
0002FBE8 <AmiBlitz3.ab2@21263>   MOVE.l D1,(A0)
0002FBEE <AmiBlitz3.ab2@21266>   ADDQ.l #1,data2
0002FBF6 <AmiBlitz3.ab2@21267>   BCLR #$0,data2+3
0002FBFA <AmiBlitz3.ab2@21268>   CMP.w #$2C,D0
0002FBFE <AmiBlitz3.ab2@21269>    BEQ.w JL_0_C944
0002FC00 <AmiBlitz3.ab2@21270> RTS
0002FC06 <AmiBlitz3.ab2@21274> JMP vardeclareerr
0002FC0C <AmiBlitz3.ab2@21277>   MOVE.w proceduremode,D1                                  ;doshared
0002FC10 <AmiBlitz3.ab2@21279>   BNE.w 'l1
0002FC12 <AmiBlitz3.ab2@21280>   MOVE.w D1,-(A7)
0002FC18 <AmiBlitz3.ab2@21281>   CLR.w proceduremode
0002FC1E <AmiBlitz3.ab2@21284>   LEA varbase,a2
0002FC22 <AmiBlitz3.ab2@21285>   BSR.w getparameter
0002FC24 <AmiBlitz3.ab2@21286>   MOVE.w d2,-(a7)
0002FC2A <AmiBlitz3.ab2@21287>    JSR findvariable
0002FC2E <AmiBlitz3.ab2@21288>    BEQ 'checkdim
0002FC34 <AmiBlitz3.ab2@21289>    LEA sharebase,a2
0002FC36 <AmiBlitz3.ab2@21290>    MOVEQ #$f+4,d7
0002FC3A <AmiBlitz3.ab2@21291>    BSR.w findlab                                         ;find var
0002FC3E <AmiBlitz3.ab2@21292>    BEQ.b dupsherr
0002FC42 <AmiBlitz3.ab2@21293>    BSR addlabel
0002FC46 <AmiBlitz3.ab2@21294>    CMP.b #".",d0
0002FC4A <AmiBlitz3.ab2@21295>    BNE JUMP_vardeclareerr
0002FC4C <AmiBlitz3.ab2@21296>    MOVE.l a2,a3
0002FC52 <AmiBlitz3.ab2@21297>    JSR JL_0_8EB8b
0002FC54 <AmiBlitz3.ab2@21328>   MOVE.w (a7)+,d2
0002FC58 <AmiBlitz3.ab2@21329>    CMP.b #",",d0
0002FC5C <AmiBlitz3.ab2@21330>    BNE 'ret
0002FC62 <AmiBlitz3.ab2@21331>    JSR get1bytemain
0002FC66 <AmiBlitz3.ab2@21332> BRA 'again2
0002FC6C <AmiBlitz3.ab2@21335>   MOVE.w (A7)+,proceduremode
0002FC6E <AmiBlitz3.ab2@21336> RTS
0002FC74 <AmiBlitz3.ab2@21343>    CMP.w #2,6(a2)
0002FC78 <AmiBlitz3.ab2@21344>    BEQ 'do
0002FC7E <AmiBlitz3.ab2@21345>    CMP.w #$102,6(a2)
0002FC82 <AmiBlitz3.ab2@21346>    BEQ 'do
0002FC88 <AmiBlitz3.ab2@21347> JMP errormsg_declaredtwice                                 ;was BRA 'errormsg_declaredtwice_
0002FC8E <AmiBlitz3.ab2@21350>   LEA varbase,a0
0002FC90 <AmiBlitz3.ab2@21353>   MOVE.l (A0),D0                                           ;find label
0002FC94 <AmiBlitz3.ab2@21354>    BEQ.b 'z1
0002FC96 <AmiBlitz3.ab2@21355>    CMP.l d0,a2
0002FC9A <AmiBlitz3.ab2@21356>    BEQ 'z1
0002FC9C <AmiBlitz3.ab2@21357>    MOVE.l d0,a0
0002FCA0 <AmiBlitz3.ab2@21358> BRA 'm1
0002FCA2 <AmiBlitz3.ab2@21361>   MOVE.l (a2),d1
0002FCA4 <AmiBlitz3.ab2@21362>     MOVE.l d1,(a0)
0002FCA6 <AmiBlitz3.ab2@21363>     CLR.l (a2)
0002FCAC <AmiBlitz3.ab2@21364>     LEA sharebase,a0
0002FCAE <AmiBlitz3.ab2@21365>     MOVE.l (a0),(a2)
0002FCB0 <AmiBlitz3.ab2@21366>     MOVE.l a2,(a0)
0002FCB6 <AmiBlitz3.ab2@21367>     JSR get1bytemain
0002FCBC <AmiBlitz3.ab2@21368>     JSR get1bytemain
0002FCC0 <AmiBlitz3.ab2@21369> BRA 'domore
0002FCC8 <AmiBlitz3.ab2@21372>   MOVE.b #1,nowdeclare
0002FCCA <AmiBlitz3.ab2@21373>   MOVE.w D1,-(A7)
0002FCD0 <AmiBlitz3.ab2@21374>   CLR.w proceduremode
0002FCD4 <AmiBlitz3.ab2@21377>    BSR.w getparameter
0002FCD6 <AmiBlitz3.ab2@21378>   MOVE.w D2,-(A7)
0002FCDC <AmiBlitz3.ab2@21379>   LEA firstglob,A2
0002FCE0 <AmiBlitz3.ab2@21380>    BSR.w findvariable2
0002FCE4 <AmiBlitz3.ab2@21381>    BNE.b JL_0_CA06
0002FCEA <AmiBlitz3.ab2@21384>   MOVE.b flagmask+1,D1
0002FCEE <AmiBlitz3.ab2@21385>   MOVE.b $7(A2),D3
0002FCF0 <AmiBlitz3.ab2@21386>   EOR.b D3,D1
0002FCF4 <AmiBlitz3.ab2@21387>    BEQ.w dupsherr
0002FCF8 <AmiBlitz3.ab2@21388>    BSR.w findlab
0002FCFC <AmiBlitz3.ab2@21389>    BEQ.b JL_0_C9F0
0002FD00 <AmiBlitz3.ab2@21392>    BSR.w addlabel
0002FD02 <AmiBlitz3.ab2@21393>   MOVE.w (A7)+,D2
0002FD04 <AmiBlitz3.ab2@21394>   MOVE.l A2,-(A7)
0002FD08 <AmiBlitz3.ab2@21395>    BSR.w JL_0_8E3C
0002FD0A <AmiBlitz3.ab2@21396>   MOVEA.l (A7)+,A2
0002FD0C <AmiBlitz3.ab2@21397>   MOVEQ.l #$04,D1
0002FD0E <AmiBlitz3.ab2@21398>   ADDQ.w #4,A2
0002FD10 <AmiBlitz3.ab2@21399>   ADDQ.w #4,A3
0002FD12 <AmiBlitz3.ab2@21402>     MOVE.w (A3)+,(A2)+
0002FD16 <AmiBlitz3.ab2@21403>   DBF D1,JL_0_CA1A
0002FD1E <AmiBlitz3.ab2@21405>   BTST #$1,flagmask+1
0002FD22 <AmiBlitz3.ab2@21406>    BEQ.w JL_0_CA3C
0002FD28 <AmiBlitz3.ab2@21407>    JSR get1bytemain
0002FD2C <AmiBlitz3.ab2@21408>   CMP.w #$29,D0
0002FD30 <AmiBlitz3.ab2@21409>    BNE.w syntaxerrc
0002FD36 <AmiBlitz3.ab2@21410>    JSR get1bytemain
0002FD3A <AmiBlitz3.ab2@21413>    CMP.w #$2C,D0
0002FD3E <AmiBlitz3.ab2@21414>    BNE.w JL_0_CA4C
0002FD44 <AmiBlitz3.ab2@21415>    JSR get1bytemain
0002FD48 <AmiBlitz3.ab2@21416> BRA.w JL_0_C9DE
0002FD4E <AmiBlitz3.ab2@21419>   MOVE.w (A7)+,proceduremode
0002FD50 <AmiBlitz3.ab2@21420> RTS
0002FD56 <AmiBlitz3.ab2@21422> syntaxerrc JMP syntaxerr
0002FD5A <AmiBlitz3.ab2@21425>    BSR.w JL_0_C05C
0002FD60 <AmiBlitz3.ab2@21426>    JSR check_incdir                                        ; ergebnis in d2
0002FD66 <AmiBlitz3.ab2@21428>    LEA ptr_parameterstore,a1
0002FD68 <AmiBlitz3.ab2@21429>    MOVE.l d2,-(a7)
0002FD6E <AmiBlitz3.ab2@21430>    LEA includetemp,a0                                      ; filename in includetemp packen
0002FD70 <AmiBlitz3.ab2@21433>      MOVE.b (a1)+,(a0)+
0002FD74 <AmiBlitz3.ab2@21434>    BNE 'l4
0002FD7A <AmiBlitz3.ab2@21436>    LEA ptr_parameterstore,a1
0002FD7C <AmiBlitz3.ab2@21437>    MOVE.l a1,a0
0002FD7E <AmiBlitz3.ab2@21440>     TST.b (a0)+
0002FD82 <AmiBlitz3.ab2@21441>    BNE 'l1
0002FD84 <AmiBlitz3.ab2@21444>      MOVE.b -(a0),d0
0002FD88 <AmiBlitz3.ab2@21445>      CMP.b #":",d0
0002FD8C <AmiBlitz3.ab2@21446>       BEQ 'out
0002FD90 <AmiBlitz3.ab2@21447>      CMP.b #"/",d0
0002FD94 <AmiBlitz3.ab2@21448>       BEQ 'out
0002FD96 <AmiBlitz3.ab2@21449>      CMP.l a1,a0
0002FD9A <AmiBlitz3.ab2@21450>       BEQ 'out2
0002FD9E <AmiBlitz3.ab2@21451> BRA 'l2
0002FDA0 <AmiBlitz3.ab2@21454>    ADDQ.l #1,a0                                            ; dateinamen vom pfad extrahiert
0002FDA2 <AmiBlitz3.ab2@21457>    MOVEQ.l #-$01,D2
0002FDA4 <AmiBlitz3.ab2@21460>      ADDQ.w #1,D2
0002FDA6 <AmiBlitz3.ab2@21461>      MOVE.b (a0)+,(a1)+
0002FDAA <AmiBlitz3.ab2@21462>    BNE 'l3
0002FDAC <AmiBlitz3.ab2@21463>    CLR.b (a1)+
0002FDB2 <AmiBlitz3.ab2@21465>    LEA ptr_parameterstore,a1
0002FDB6 <AmiBlitz3.ab2@21466>    BSR.w findxinc                                         ;find include
0002FDBA <AmiBlitz3.ab2@21467>     BEQ.w 'outb
0002FDBC <AmiBlitz3.ab2@21469>    MOVE.w D2,-(A7)
0002FDC0 <AmiBlitz3.ab2@21470>    BSR.w addlabel
0002FDC2 <AmiBlitz3.ab2@21471>    MOVE.w (A7)+,D2
0002FDC8 <AmiBlitz3.ab2@21473>    LEA ptr_parameterstore,a1
0002FDCE <AmiBlitz3.ab2@21474>    LEA includetemp,a0                                      ; namen in includetemp schreiben
0002FDD0 <AmiBlitz3.ab2@21477>     MOVE.b (a0)+,(a1)+
0002FDD4 <AmiBlitz3.ab2@21478>    BNE 'l4b
0002FDD6 <AmiBlitz3.ab2@21480>    MOVE.l (a7)+,d2
0002FDDC <AmiBlitz3.ab2@21481>    LEA ptr_parameterstore,a1
0002FDE0 <AmiBlitz3.ab2@21482> BRA.w JL_0_CB18
0002FDE6 <AmiBlitz3.ab2@21485>    LEA ptr_parameterstore,a1
0002FDEC <AmiBlitz3.ab2@21486>    LEA includetemp,a0
0002FDEE <AmiBlitz3.ab2@21489>     MOVE.b (a0)+,(a1)+
0002FDF2 <AmiBlitz3.ab2@21490>    BNE 'l4b2
0002FDF4 <AmiBlitz3.ab2@21492>    MOVE.l (a7)+,d2
0002FDFA <AmiBlitz3.ab2@21493>    LEA ptr_parameterstore,a1
0002FDFC <AmiBlitz3.ab2@21496> RTS
0002FE00 <AmiBlitz3.ab2@21500>   BSR.w JL_0_C05C                                              ; test and get the parameter (includestring)
0002FE06 <AmiBlitz3.ab2@21502>   JSR check_IncBinDir                                          ; to fix the path problem in CLIMode  tomsmart1
0002FE0C <AmiBlitz3.ab2@21504>   MOVEA.l _dosbase,A6
0002FE0E <AmiBlitz3.ab2@21505>   MOVE.l D0,D7                                                 ; store Lockpointer
0002FE12 <AmiBlitz3.ab2@21506>    BEQ.w error_cant_open_include                               ; no pointer => errormessage
0002FE14 <AmiBlitz3.ab2@21507>   MOVE.l D7,D1                                                 ; begin get the size of the file to include
0002FE1A <AmiBlitz3.ab2@21508>   MOVE.l ptr_macrobuffer_begin,D2
0002FE1E <AmiBlitz3.ab2@21509>    JSR _Examine(A6)
0002FE24 <AmiBlitz3.ab2@21510>   MOVEA.l ptr_macrobuffer_begin,A0
0002FE28 <AmiBlitz3.ab2@21511>   MOVE.l $4(A0),D0
0002FE2C <AmiBlitz3.ab2@21512>    BPL.w error_cant_open_include                               ; something went wrong => errormessage
0002FE30 <AmiBlitz3.ab2@21513>   MOVE.l $7C(A0),D3                                            ; store the size of the file to include
0002FE32 <AmiBlitz3.ab2@21514>   MOVE.l D7,D1                                                 ; begin unlock the file
0002FE36 <AmiBlitz3.ab2@21515>    JSR _UnLock(A6)
0002FE3C <AmiBlitz3.ab2@21517>   MOVE.l #ptr_parameterstore,D1                                ; begin Open and Load the file
0002FE42 <AmiBlitz3.ab2@21518>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2                       
0002FE46 <AmiBlitz3.ab2@21519>    JSR _Open(A6)
0002FE48 <AmiBlitz3.ab2@21520>   MOVE.l D0,D7
0002FE4C <AmiBlitz3.ab2@21521>    BEQ.w error_cant_open_include
0002FE52 <AmiBlitz3.ab2@21522>   MOVE.l destpointer,D0
0002FE54 <AmiBlitz3.ab2@21523>   ADD.l D3,D0
0002FE5A <AmiBlitz3.ab2@21524>   CMP.l destbufferend,D0
0002FE5E <AmiBlitz3.ab2@21525>    BHI.w JL_0_CAF6
0002FE64 <AmiBlitz3.ab2@21526>   MOVE.l destpointer,D2
0002FE66 <AmiBlitz3.ab2@21527>   MOVE.l D7,D1
0002FE6A <AmiBlitz3.ab2@21528>    JSR _Read(A6)
0002FE70 <AmiBlitz3.ab2@21529>   CMP.l #$FFFFFFFF,D0
0002FE74 <AmiBlitz3.ab2@21530>    BEQ.w error_reading_file
0002FE7A <AmiBlitz3.ab2@21531>   ADD.l D0,destpointer
0002FE7E <AmiBlitz3.ab2@21532> BRA.w JL_0_CB04
0002FE86 <AmiBlitz3.ab2@21535>   MOVE.w #$FFFF,dontwrite
0002FE8C <AmiBlitz3.ab2@21536>   MOVE.l D0,destpointer
0002FE8E <AmiBlitz3.ab2@21539>   MOVE.l D7,D1
0002FE92 <AmiBlitz3.ab2@21540> JMP _Close(A6)
0002FE98 <AmiBlitz3.ab2@21544> JMP illdirerr
0002FE9E <AmiBlitz3.ab2@21547>   TST.w dirmode                                            ;include  open
0002FEA2 <AmiBlitz3.ab2@21548>    BNE.w JUMP_illdirerr
0002FEA6 <AmiBlitz3.ab2@21549>   BSR.w JL_0_C05C
0002FEAC <AmiBlitz3.ab2@21550>   JSR check_incdir
0002FEB0 <AmiBlitz3.ab2@21553>   BSR.w findconstant
0002FEB4 <AmiBlitz3.ab2@21554>    BEQ.w alincerr
0002FEBA <AmiBlitz3.ab2@21556>   LEA constantbase,A2
0002FEBE <AmiBlitz3.ab2@21557>   BSR.w addhere2
0002FEC2 <AmiBlitz3.ab2@21558>   CLR.w $C(A2)
0002FEC6 <AmiBlitz3.ab2@21559>   CLR.l $4(A2)
0002FECC <AmiBlitz3.ab2@21561>   MOVE.l #ptr_parameterstore,D1
0002FECE <AmiBlitz3.ab2@21562>   MOVE.l d1,a0
0002FED4 <AmiBlitz3.ab2@21563>   LEA includetemp2,a1
0002FED6 <AmiBlitz3.ab2@21566>     MOVE.b (a0)+,(a1)+
0002FEDA <AmiBlitz3.ab2@21567>   BNE 'l1
0002FEE0 <AmiBlitz3.ab2@21568>   JSR save_includename
0002FEEA <AmiBlitz3.ab2@21569>   MOVE.l #0,include_process
0002FEF2 <AmiBlitz3.ab2@21571>   CMP.l #$62623200,-4(a0)                                  ;.bb2
0002FEF6 <AmiBlitz3.ab2@21572>   BEQ 'ok
0002FEFE <AmiBlitz3.ab2@21573>   CMP.l #$61623300,-4(a0)                                  ;.ab3
0002FF02 <AmiBlitz3.ab2@21574>   BEQ 'ok_tokenize
0002FF0A <AmiBlitz3.ab2@21575>   CMP.l #$61623200,-4(a0)                                  ;.ab2
0002FF0E <AmiBlitz3.ab2@21576>   BEQ 'ok_tokenize
0002FF16 <AmiBlitz3.ab2@21577>   CMP.l #$2e626200,-4(a0)                                  ;.bb files
0002FF1A <AmiBlitz3.ab2@21578>   BEQ 'ok
0002FF20 <AmiBlitz3.ab2@21579> JMP errortoken                                             ;can only include
0002FF2A <AmiBlitz3.ab2@21582>    MOVE.l #-1,include_process                              ; must tokenize the include
0002FF30 <AmiBlitz3.ab2@21585>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
0002FF36 <AmiBlitz3.ab2@21586>   MOVEA.l _dosbase,A6
0002FF3A <AmiBlitz3.ab2@21587>   JSR _Open(A6)
0002FF3E <AmiBlitz3.ab2@21588>   MOVE.l D0,$8(A2)
0002FF42 <AmiBlitz3.ab2@21589>   BEQ.w error_cant_open_include
0002FF48 <AmiBlitz3.ab2@21590>   CLR.l includeline
0002FF4C <AmiBlitz3.ab2@21591>   MOVE.l 8(a2),d1
0002FF4E <AmiBlitz3.ab2@21592>   MOVE.l d3,-(a7)
0002FF50 <AmiBlitz3.ab2@21593>   MOVEQ #0,d2
0002FF52 <AmiBlitz3.ab2@21594>   MOVEQ #1,d3
0002FF56 <AmiBlitz3.ab2@21595>   JSR _Seek(a6)                                            ; -66
0002FF5A <AmiBlitz3.ab2@21596>   MOVE.l 8(a2),d1
0002FF5C <AmiBlitz3.ab2@21597>   MOVEQ #0,d2
0002FF5E <AmiBlitz3.ab2@21598>   MOVEQ #-1,d3
0002FF62 <AmiBlitz3.ab2@21599>   JSR _Seek(a6)                                            ; -66
0002FF64 <AmiBlitz3.ab2@21600>   MOVE.l (a7)+,d3
0002FF66 <AmiBlitz3.ab2@21601>   ADDQ.l #4,d0
0002FF6C <AmiBlitz3.ab2@21603>   MOVE.l #$10000,D1
0002FF72 <AmiBlitz3.ab2@21604>   MOVEA.l _execbase,A6
0002FF76 <AmiBlitz3.ab2@21607>   JSR _AllocVec(a6)
0002FF7A <AmiBlitz3.ab2@21609>   MOVE.l D0,$4(A2)
0002FF7E <AmiBlitz3.ab2@21610>   MOVE.l D0,$E(A2)
0002FF80 <AmiBlitz3.ab2@21611>   MOVEA.l D0,A5
0002FF86 <AmiBlitz3.ab2@21618>   ADDQ.w #1,ininclude                                      ;enter include
0002FF8C <AmiBlitz3.ab2@21621>   LEA _include,a0
0002FF90 <AmiBlitz3.ab2@21622>   MOVEM.l a0-a6/d0-d7,-(a7)
0002FF96 <AmiBlitz3.ab2@21623>   LEA ptr_parameterstore,a1
0002FF98 <AmiBlitz3.ab2@21626>     MOVE.b (a0)+,(a1)+
0002FF9C <AmiBlitz3.ab2@21627>   BNE 'l1b
0002FF9E <AmiBlitz3.ab2@21629>   MOVEQ #9,d2
0002FFA4 <AmiBlitz3.ab2@21630>   JSR findlabel2
0002FFA8 <AmiBlitz3.ab2@21631>   BNE 'd
0002FFB0 <AmiBlitz3.ab2@21632>   MOVE.l #1,8(a2)
0002FFB4 <AmiBlitz3.ab2@21633>   MOVEM.l (a7)+,a0-a6/d0-d7
0002FFB8 <AmiBlitz3.ab2@21634> BRA 'd2
0002FFBE <AmiBlitz3.ab2@21637>   JSR addlabelhash
0002FFC6 <AmiBlitz3.ab2@21638>   MOVE.l #$1,$4(A2)
0002FFCE <AmiBlitz3.ab2@21639>   MOVE.l #1,8(a2)
0002FFD2 <AmiBlitz3.ab2@21640>   MOVEM.l (a7)+,a0-a6/d0-d7
0002FFD8 <AmiBlitz3.ab2@21643>   LEA inctab,a0
0002FFDA <AmiBlitz3.ab2@21644>   MOVEQ #0,d1
0002FFE0 <AmiBlitz3.ab2@21645>   MOVE.w ininclude,d1
0002FFE4 <AmiBlitz3.ab2@21646>   CLR.l $0(a0,d1*4)
0002FFEA <AmiBlitz3.ab2@21647>   MOVEA.l passstack,A7
0002FFF0 <AmiBlitz3.ab2@21648> JMP AJL_0_413A
0002FFF6 <AmiBlitz3.ab2@21650> JUMP_dupmacerr JMP dupmacerr
0002FFF8 <AmiBlitz3.ab2@21652> coolnest:   Ds.w 1
0002FFFC <AmiBlitz3.ab2@21653> macline:    Ds.l 1
00030006 <AmiBlitz3.ab2@21657>   MOVE.l linenumat,macline
0003000A <AmiBlitz3.ab2@21658>    BSR.w makename2
0003000E <AmiBlitz3.ab2@21659>    BEQ.w JUMP_syntaxerr
00030014 <AmiBlitz3.ab2@21661>    CLR.b thenmode
0003001E <AmiBlitz3.ab2@21663>    MOVE.w oldqflag,instringon
00030024 <AmiBlitz3.ab2@21664>   MOVEA.l lastsourcepos,A5
00030028 <AmiBlitz3.ab2@21665>    BSR.w findmac
0003002C <AmiBlitz3.ab2@21666>    BEQ.w JUMP_dupmacerr
00030030 <AmiBlitz3.ab2@21667>    BSR.w addlabel
00030034 <AmiBlitz3.ab2@21668>   CLR.w $A(A2)
0003003A <AmiBlitz3.ab2@21669>   MOVEA.l ptr_macrobuffer_begin,A0
0003003C <AmiBlitz3.ab2@21670>   MOVEQ.l #$00,D2
00030042 <AmiBlitz3.ab2@21671>   CLR.w coolnest
00030044 <AmiBlitz3.ab2@21674>   MOVE.b (a5),d0
00030048 <AmiBlitz3.ab2@21675>      BEQ 'l3
0003004C <AmiBlitz3.ab2@21676>      CMP.b #" ",d0
00030050 <AmiBlitz3.ab2@21677>       BNE 'l2                                              ;space macro
00030052 <AmiBlitz3.ab2@21678>       ADDQ.l #1,a5
00030056 <AmiBlitz3.ab2@21679> BRA 'l1
0003005A <AmiBlitz3.ab2@21682>    CMP.b #";",d0
0003005E <AmiBlitz3.ab2@21683>       BNE 'l3
00030060 <AmiBlitz3.ab2@21686>    MOVE.b (a5),d0
00030064 <AmiBlitz3.ab2@21687>       BEQ 'l5
00030068 <AmiBlitz3.ab2@21688>       BSR.w JL_0_CC98                                      ;add comment
0003006A <AmiBlitz3.ab2@21689>       ADDQ.l #1,a5
0003006E <AmiBlitz3.ab2@21690> BRA 'l4
00030072 <AmiBlitz3.ab2@21693>    MOVE.b #":",d0
00030076 <AmiBlitz3.ab2@21694>       BSR.w JL_0_CC98
0003007A <AmiBlitz3.ab2@21695>       MOVE.b #"@",d0
0003007E <AmiBlitz3.ab2@21696>       BSR.w JL_0_CC98
00030086 <AmiBlitz3.ab2@21699>    MOVE.b #0,temp
0003008E <AmiBlitz3.ab2@21700>       MOVE.b #0,thenmode
00030094 <AmiBlitz3.ab2@21703>   JSR getcharb
00030096 <AmiBlitz3.ab2@21704>   TST.w D0
0003009A <AmiBlitz3.ab2@21705>    BNE.w JL_0_CBDE
0003009E <AmiBlitz3.ab2@21706>   MOVEM.l D2/A0/A2,-(A7)
000300A4 <AmiBlitz3.ab2@21707>   CMP.w #"@@",-3(a5)
000300A8 <AmiBlitz3.ab2@21708>   BNE 'l2a
000300AE <AmiBlitz3.ab2@21709>   JSR nextline
000300B2 <AmiBlitz3.ab2@21710>   BEQ.w JUMP_macenderr
000300B6 <AmiBlitz3.ab2@21711>   MOVEM.l (A7)+,D2/A0/A2
000300BA <AmiBlitz3.ab2@21712> BRA.w JL_0_CBB6
000300C0 <AmiBlitz3.ab2@21715>    JSR nextline
000300C4 <AmiBlitz3.ab2@21716>    BEQ.w JUMP_macenderr
000300C8 <AmiBlitz3.ab2@21717>   MOVEM.l (A7)+,D2/A0/A2
000300CA <AmiBlitz3.ab2@21718>   TST.w D2
000300CE <AmiBlitz3.ab2@21719>    BEQ.w JL_0_CBB6
000300D0 <AmiBlitz3.ab2@21722>   MOVE.b (a5),d0
000300D4 <AmiBlitz3.ab2@21723>       CMP.b #" ",d0
000300D8 <AmiBlitz3.ab2@21724>       BNE 'l1
000300DA <AmiBlitz3.ab2@21725>       ADDQ.w #1,a5
000300DE <AmiBlitz3.ab2@21726> BRA 'l2
000300E4 <AmiBlitz3.ab2@21729>   TST.b thenmode
000300E8 <AmiBlitz3.ab2@21730>      BEQ 'l3
000300EA <AmiBlitz3.ab2@21731>      MOVEQ #":",d0
000300EE <AmiBlitz3.ab2@21732>      BSR.w JL_0_CC98
000300F2 <AmiBlitz3.ab2@21733>      MOVE.w #-$7FFE,D0                                     ;write end if
000300F6 <AmiBlitz3.ab2@21734>      BSR macputw
000300FA <AmiBlitz3.ab2@21735>      MOVE.w #$800b,d0
000300FE <AmiBlitz3.ab2@21736>      BSR.w macputw
00030104 <AmiBlitz3.ab2@21737>      CLR.b thenmode
00030106 <AmiBlitz3.ab2@21740>    MOVEQ.l #$3A,D0
0003010E <AmiBlitz3.ab2@21741>      MOVE.b #1,temp
00030112 <AmiBlitz3.ab2@21743> BRA.w JL_0_CC2A
00030116 <AmiBlitz3.ab2@21747>   BPL.w JL_0_CC2A
0003011A <AmiBlitz3.ab2@21748>   CMP.w #-$7FF3,D0                                         ;macro ?
0003011E <AmiBlitz3.ab2@21749>    BNE.w JL_0_CBF4
00030124 <AmiBlitz3.ab2@21750>   ADDQ.w #1,coolnest
00030128 <AmiBlitz3.ab2@21751> BRA.w JL_0_CC22
0003012E <AmiBlitz3.ab2@21753> JUMP_macnesterr JMP macnesterr
00030132 <AmiBlitz3.ab2@21756>   CMP.w #$80d7,d0                                          ;object ?
00030136 <AmiBlitz3.ab2@21757>     BNE 'l1x
0003013C <AmiBlitz3.ab2@21758>     TST.b objectcount
00030140 <AmiBlitz3.ab2@21759>     BNE JUMP_macnesterr
00030144 <AmiBlitz3.ab2@21762>   CMP.w #$8021,d0
00030148 <AmiBlitz3.ab2@21763>     BNE 'nothen
00030150 <AmiBlitz3.ab2@21764>     MOVE.b #1,thenmode
00030156 <AmiBlitz3.ab2@21767>   TST.b thenmode
0003015A <AmiBlitz3.ab2@21768>         BEQ 'l1
0003015E <AmiBlitz3.ab2@21769>    CMP.w #$8002,d0                                         ;end if
00030162 <AmiBlitz3.ab2@21770>    BNE 'l1
00030166 <AmiBlitz3.ab2@21771>    MOVEM.l d0/a5,-(a7)
0003016C <AmiBlitz3.ab2@21772>    JSR get1bytemain
0003016E <AmiBlitz3.ab2@21773>    MOVE.w d0,d1
00030172 <AmiBlitz3.ab2@21774>    MOVEM.l (a7)+,a5/d0
00030176 <AmiBlitz3.ab2@21775>    CMP.w #$800b,d1
0003017A <AmiBlitz3.ab2@21776>    BNE 'l1
00030180 <AmiBlitz3.ab2@21777>    CLR.b thenmode
00030184 <AmiBlitz3.ab2@21780>    CMP.w #-$7FFE,D0                                        ;end ?
00030188 <AmiBlitz3.ab2@21781>    BNE.w JL_0_CC22
0003018A <AmiBlitz3.ab2@21782>    MOVE.l a5,-(a7)
00030190 <AmiBlitz3.ab2@21783>    JSR get1bytemain
00030192 <AmiBlitz3.ab2@21784>    MOVE.l (a7)+,a5
00030194 <AmiBlitz3.ab2@21785>    TST.w d0
00030198 <AmiBlitz3.ab2@21786>    BEQ 'doend
0003019C <AmiBlitz3.ab2@21787>    CMP.w #":",d0
000301A0 <AmiBlitz3.ab2@21788>    BEQ 'doend
000301A4 <AmiBlitz3.ab2@21789>    CMP.w #";",d0
000301A8 <AmiBlitz3.ab2@21790>    BEQ 'doend
000301AA <AmiBlitz3.ab2@21791>    MOVE.l a5,-(a7)
000301B0 <AmiBlitz3.ab2@21792>    JSR get1bytemain
000301B4 <AmiBlitz3.ab2@21793>    MOVE.l -1(a5),d0
000301B6 <AmiBlitz3.ab2@21794>    MOVE.l (a7)+,a5
000301BC <AmiBlitz3.ab2@21795>    CMP.l #"noa7",d0
000301C0 <AmiBlitz3.ab2@21796>    BEQ 'doend
000301C4 <AmiBlitz3.ab2@21797> BRA 'morechar
000301C8 <AmiBlitz3.ab2@21800>   MOVE.w #$8002,D0
000301CC <AmiBlitz3.ab2@21801>    BSR.w macputw
000301D0 <AmiBlitz3.ab2@21802> BRA JL_0_CBB6
000301D6 <AmiBlitz3.ab2@21805>   JSR get1bytemain
000301DA <AmiBlitz3.ab2@21806>    CMP.w #-$7FF3,D0                                        ;end macro
000301DE <AmiBlitz3.ab2@21807>    BEQ.w 'lo1
000301E2 <AmiBlitz3.ab2@21808>   CMP.w #$80d7,d0                                          ;end object
000301E6 <AmiBlitz3.ab2@21809>   BNE JL_0_CC12
000301EC <AmiBlitz3.ab2@21810>   SUBQ.b #1,objectcount
000301F2 <AmiBlitz3.ab2@21811>   TST.b developobject
000301F6 <AmiBlitz3.ab2@21812>   BEQ 'lo1
000301FA <AmiBlitz3.ab2@21813>   BSR skiprest
000301FC <AmiBlitz3.ab2@21814> RTS
00030202 <AmiBlitz3.ab2@21817>   SUBQ.w #1,coolnest
00030206 <AmiBlitz3.ab2@21818>    BMI.w JL_0_CC32
00030208 <AmiBlitz3.ab2@21821>   MOVE.w D0,-(A7)
0003020C <AmiBlitz3.ab2@21822>   MOVE.w #$8002,D0
00030210 <AmiBlitz3.ab2@21823>    BSR.w macputw
00030212 <AmiBlitz3.ab2@21824>   MOVE.w (A7)+,D0
00030216 <AmiBlitz3.ab2@21825> BRA.w JL_0_CC22
0003021A <AmiBlitz3.ab2@21828>   BSR.w macputw
0003021E <AmiBlitz3.ab2@21829> BRA.w JL_0_CBB6
00030224 <AmiBlitz3.ab2@21831> JUMP_macenderr JMP macenderr
0003022A <AmiBlitz3.ab2@21834>     CMP.w #"@@",-1(a5)                                     ;merge lines
0003022E <AmiBlitz3.ab2@21835>     BNE 'no
00030232 <AmiBlitz3.ab2@21836>      MOVEM.l D2/A0/A2,-(A7)
00030238 <AmiBlitz3.ab2@21837>    JSR nextline
0003023C <AmiBlitz3.ab2@21838>    BEQ.w JUMP_macenderr
00030240 <AmiBlitz3.ab2@21839>   MOVEM.l (A7)+,D2/A0/A2
00030242 <AmiBlitz3.ab2@21840>     TST.w D2
00030246 <AmiBlitz3.ab2@21841>    BEQ.w JL_0_CBB6
0003024A <AmiBlitz3.ab2@21842> BRA JL_0_CBB6
0003024E <AmiBlitz3.ab2@21846>   BSR.w JL_0_CC98
00030252 <AmiBlitz3.ab2@21847> BRA.w JL_0_CBB6
00030254 <AmiBlitz3.ab2@21850>   ADDQ.w #4,A7
00030256 <AmiBlitz3.ab2@21851>   MOVE.l A0,D0
0003025C <AmiBlitz3.ab2@21852>   SUB.l ptr_macrobuffer_begin,D0
00030260 <AmiBlitz3.ab2@21855>    BEQ.w JL_0_CC5E
00030264 <AmiBlitz3.ab2@21856>   CMPI.b #":",-(A0)
00030268 <AmiBlitz3.ab2@21857>    BNE.w JL_0_CC5E
0003026C <AmiBlitz3.ab2@21858>   CMP.w #$1,D0
00030270 <AmiBlitz3.ab2@21859>    BEQ.w JL_0_CC58
00030274 <AmiBlitz3.ab2@21860>   TST.b -$1(A0)
00030278 <AmiBlitz3.ab2@21861>    BMI.w JL_0_CC5E
0003027A <AmiBlitz3.ab2@21864>   SUBQ.w #1,D0
0003027E <AmiBlitz3.ab2@21865> BRA.w JL_0_CC3C
00030282 <AmiBlitz3.ab2@21868>   MOVE.w D0,$8(A2)
00030286 <AmiBlitz3.ab2@21869>    BEQ.w JL_0_CC8E
00030288 <AmiBlitz3.ab2@21870>   MOVEQ.l #$01,D1
0003028E <AmiBlitz3.ab2@21871>   MOVEA.l _execbase,A6
00030294 <AmiBlitz3.ab2@21872>   MOVE.l mempool,a0
00030298 <AmiBlitz3.ab2@21873>   JSR _AllocPooled(a6)
0003029A <AmiBlitz3.ab2@21875>   MOVEA.l D0,A0
0003029E <AmiBlitz3.ab2@21876>   MOVE.l A0,$4(A2)
000302A2 <AmiBlitz3.ab2@21877>   MOVE.w $8(A2),D1
000302A6 <AmiBlitz3.ab2@21878>    BEQ.w JL_0_CC8E
000302A8 <AmiBlitz3.ab2@21879>   SUBQ.w #1,D1
000302AE <AmiBlitz3.ab2@21880>   MOVEA.l ptr_macrobuffer_begin,A1
000302B0 <AmiBlitz3.ab2@21883>     MOVE.b (A1)+,(A0)+
000302B4 <AmiBlitz3.ab2@21884>   DBF D1,JL_0_CC88
000302BA <AmiBlitz3.ab2@21887> JMP get1bytemain
000302BC <AmiBlitz3.ab2@21891>   MOVE.w D0,D1
000302BE <AmiBlitz3.ab2@21892>   LSR.w #8,D1
000302C0 <AmiBlitz3.ab2@21893>   MOVE.b D1,(A0)+
000302C2 <AmiBlitz3.ab2@21896>   MOVEQ.l #-$01,D2
000302C4 <AmiBlitz3.ab2@21897>   MOVE.b D0,(A0)+
000302CA <AmiBlitz3.ab2@21898>   CMPA.l ptr_macrobuffer_end,A0
000302CE <AmiBlitz3.ab2@21899>    BCC.w macbigerr2
000302D0 <AmiBlitz3.ab2@21900> RTS
000302D6 <AmiBlitz3.ab2@21901> macbigerr2 JMP macbigerr
000302D8 <AmiBlitz3.ab2@21904>   MOVE.l d0,-(a7)
000302DA <AmiBlitz3.ab2@21905>   MOVEQ #0,d0
000302E0 <AmiBlitz3.ab2@21906>   CLR.b skiptoggle
000302E2 <AmiBlitz3.ab2@21909>     MOVE.b (a5),d0
000302E6 <AmiBlitz3.ab2@21910>     BEQ 'l3
000302EA <AmiBlitz3.ab2@21911>     CMP.b #";",d0
000302EE <AmiBlitz3.ab2@21912>     BNE 'l2
000302F6 <AmiBlitz3.ab2@21913>     MOVE.b #1,skiptoggle
000302FC <AmiBlitz3.ab2@21916>     TST.b skiptoggle
00030300 <AmiBlitz3.ab2@21917>     BNE 'l4
00030304 <AmiBlitz3.ab2@21918>     CMP.b #":",d0
00030308 <AmiBlitz3.ab2@21919>     BEQ 'l3
0003030A <AmiBlitz3.ab2@21922>     ADDQ #1,a5
0003030E <AmiBlitz3.ab2@21923> BRA 'loop
00030314 <AmiBlitz3.ab2@21926>   MOVE.w d0,lastchar
00030316 <AmiBlitz3.ab2@21927>   MOVE.l (a7)+,d0
00030318 <AmiBlitz3.ab2@21928> RTS
0003031C <AmiBlitz3.ab2@21932>   BSR.w ifchar
00030320 <AmiBlitz3.ab2@21933>    BNE.w JUMP_syntaxerr
00030322 <AmiBlitz3.ab2@21934>   MOVE.w D0,D1
00030328 <AmiBlitz3.ab2@21935>   JSR get1bytemain
0003032C <AmiBlitz3.ab2@21936>   BSR.w ifchar
00030330 <AmiBlitz3.ab2@21937>    BNE.w JL_0_CCDA
00030332 <AmiBlitz3.ab2@21938>   ADDQ.w #1,D0
00030334 <AmiBlitz3.ab2@21939>   MOVE.w D0,D2
00030336 <AmiBlitz3.ab2@21940>   ADD.w D0,D0
00030338 <AmiBlitz3.ab2@21941>   ADD.w D2,D0
0003033A <AmiBlitz3.ab2@21942>   ADD.w D0,D1
0003033C <AmiBlitz3.ab2@21943>   MOVE.w D1,D0
00030340 <AmiBlitz3.ab2@21944>   ANDI.w #$3,D0
00030344 <AmiBlitz3.ab2@21945>   CMP.w #$3,D0
00030348 <AmiBlitz3.ab2@21946>    BEQ.w JUMP_syntaxerr
0003034E <AmiBlitz3.ab2@21948>   JSR get1bytemain
00030350 <AmiBlitz3.ab2@21951> RTS
00030352 <AmiBlitz3.ab2@21957> thetst1:  TST.b D0
00030354 <AmiBlitz3.ab2@21958> thetst2:  TST.w D0
00030356 <AmiBlitz3.ab2@21959> thetst3:  TST.l D0
00030358 <AmiBlitz3.ab2@21960> thetst4:  TST.l (A7)+                                      ;Any Length?
0003035C <AmiBlitz3.ab2@21961> thetst5:  JSR _Reschedule(A6)
00030360 <AmiBlitz3.ab2@21963> posbr:    BEQ.w posbr
00030364 <AmiBlitz3.ab2@21964> negbr:    BNE.w negbr
00030366 <AmiBlitz3.ab2@21968>   MOVEQ.l #-$01,D2
0003036A <AmiBlitz3.ab2@21969> BRA.w JL_0_D04C
00030370 <AmiBlitz3.ab2@21973>   CLR.l fp0addr
00030372 <AmiBlitz3.ab2@21974>   MOVEQ.l #$01,D1                                          ;while flag
00030374 <AmiBlitz3.ab2@21975>   MOVEQ.l #$00,D2                                          ;negate flag
00030378 <AmiBlitz3.ab2@21976> BRA.w JL_0_D04E
0003037E <AmiBlitz3.ab2@21980>   LEA firstrep,A2
00030380 <AmiBlitz3.ab2@21981>   MOVEQ.l #$08,D2
00030384 <AmiBlitz3.ab2@21982> BRA.w freeslist
00030388 <AmiBlitz3.ab2@21986>   LEA firstsel(PC),A2
0003038A <AmiBlitz3.ab2@21987>   MOVEQ.l #$0E,D2
0003038C <AmiBlitz3.ab2@21992>   MOVEQ.l #$00,D3
0003038E <AmiBlitz3.ab2@22000>   MOVE.l (A2),D0
00030390 <AmiBlitz3.ab2@22001>   CLR.l (A2)
00030392 <AmiBlitz3.ab2@22002>   MOVEA.l D0,A2
00030398 <AmiBlitz3.ab2@22003>   MOVEA.l _execbase,A6
0003039C <AmiBlitz3.ab2@22006>     CMPA.w #$0,A2
000303A0 <AmiBlitz3.ab2@22007>      BEQ.w freelist__done
000303A2 <AmiBlitz3.ab2@22008>     TST.w D3
000303A6 <AmiBlitz3.ab2@22009>      BEQ.w freelist__skip
000303AA <AmiBlitz3.ab2@22010>     MOVEM.l D2-D3/A2,-(A7)
000303AC <AmiBlitz3.ab2@22011>     ADDA.w D3,A2
000303AE <AmiBlitz3.ab2@22012>     MOVE.l D4,D2
000303B2 <AmiBlitz3.ab2@22013>     BSR.w freeslist
000303B6 <AmiBlitz3.ab2@22014>     MOVEM.l (A7)+,D2-D3/A2
000303B8 <AmiBlitz3.ab2@22017>     MOVEA.l A2,A1
000303BA <AmiBlitz3.ab2@22018>     MOVE.l D2,D0
000303BC <AmiBlitz3.ab2@22019>     MOVEA.l (A2),A2
000303C2 <AmiBlitz3.ab2@22020>     MOVE.l mempool,a0
000303C6 <AmiBlitz3.ab2@22021>     JSR _FreePooled(A6)
000303CA <AmiBlitz3.ab2@22022> BRA.w freelist__loop
000303CC <AmiBlitz3.ab2@22025> RTS
000303D2 <AmiBlitz3.ab2@22028> JMP eselerr
000303D6 <AmiBlitz3.ab2@22031> firstsel:  Ds.l 1
000303DA <AmiBlitz3.ab2@22034> selpushb:   Dc.b $02,$40,$00,$FF                           ;ANDI.W  #$00FF,D0
000303DC <AmiBlitz3.ab2@22037> selpushw:   MOVE.w D0,-(A7)
000303DE <AmiBlitz3.ab2@22039> selpushl:   MOVE.l D0,-(A7)
000303E2 <AmiBlitz3.ab2@22041> selpushs:   LEA $4(A7),A2                                  ;(a7)=len of string!
000303E6 <AmiBlitz3.ab2@22044> selcomb:    ANDI.w #$FF,D0
000303E8 <AmiBlitz3.ab2@22045> selcomw:    CMP.w (A7),D0
000303EA <AmiBlitz3.ab2@22047> selcoml:    CMP.l (A7),D0
000303EE <AmiBlitz3.ab2@22049> selbne:     BNE.w selbne
000303F0 <AmiBlitz3.ab2@22051> endsel:     ADDQ.w #8,A7
000303F4 <AmiBlitz3.ab2@22057>   MOVE.l firstsel(PC),D0                                  
000303F8 <AmiBlitz3.ab2@22058>    BEQ.w JUMP_eselerr
000303FA <AmiBlitz3.ab2@22059>   MOVEA.l D0,A2
000303FE <AmiBlitz3.ab2@22060>    BSR.w JL_0_CDFC
00030404 <AmiBlitz3.ab2@22063>   MOVEA.l _execbase,A6
00030408 <AmiBlitz3.ab2@22066>   MOVE.l $4(A2),D0
0003040C <AmiBlitz3.ab2@22067>    BEQ.w doendsel__done
0003040E <AmiBlitz3.ab2@22068>   MOVEA.l D0,A3
00030412 <AmiBlitz3.ab2@22069>   MOVEA.l $4(A3),A0
00030418 <AmiBlitz3.ab2@22070>   MOVE.l destpointer,D1
0003041A <AmiBlitz3.ab2@22071>   SUB.l A0,D1
00030420 <AmiBlitz3.ab2@22073>     TST.b fast
00030424 <AmiBlitz3.ab2@22074>     BEQ doendsel__loop_l1
0003042A <AmiBlitz3.ab2@22075>     MOVE.w dontwrite,D0
0003042E <AmiBlitz3.ab2@22076>     BNE.w doendsel__skip
00030430 <AmiBlitz3.ab2@22077>     ADDQ.l #2,d1
00030434 <AmiBlitz3.ab2@22078>     MOVE.l d1,-2(a0)
00030438 <AmiBlitz3.ab2@22079>   BRA doendsel__skip
0003043E <AmiBlitz3.ab2@22083>   TST.w dontwrite
00030442 <AmiBlitz3.ab2@22084>      BNE.w doendsel__skip
00030448 <AmiBlitz3.ab2@22085>   CMP.l #MaxWordSgnd,D1
0003044C <AmiBlitz3.ab2@22086>    BHI.w JUMP_cbraerr
0003044E <AmiBlitz3.ab2@22087>   MOVE.w D1,(A0)
00030452 <AmiBlitz3.ab2@22090>   MOVE.l (A3),$4(A2)                                       ;next of me is new first
00030454 <AmiBlitz3.ab2@22091>   MOVEA.l A3,A1
00030456 <AmiBlitz3.ab2@22092>   MOVEQ.l #$08,D0
0003045C <AmiBlitz3.ab2@22093>   MOVE.l mempool,a0
00030460 <AmiBlitz3.ab2@22094>    JSR _FreePooled(A6)
00030464 <AmiBlitz3.ab2@22095> BRA.w doendsel__loop
0003046A <AmiBlitz3.ab2@22098>   JSR popselect                                            ;fix stack on select
0003046E <AmiBlitz3.ab2@22099>   MOVEA.l firstsel(PC),A1
00030474 <AmiBlitz3.ab2@22100>   MOVE.l (A1),firstsel
00030476 <AmiBlitz3.ab2@22101>   MOVEQ.l #$0E,D0
0003047C <AmiBlitz3.ab2@22102>   MOVEA.l _execbase,A6
00030482 <AmiBlitz3.ab2@22103>   MOVE.l mempool,a0
00030486 <AmiBlitz3.ab2@22104>   JSR _FreePooled(A6)
0003048C <AmiBlitz3.ab2@22105> JMP get1bytemain
0003048E <AmiBlitz3.ab2@22109>   MOVEA.l (A7)+,A1
00030490 <AmiBlitz3.ab2@22110>   SUBQ.w #8,A1
00030492 <AmiBlitz3.ab2@22111>   MOVEQ.l #$09,D0
00030494 <AmiBlitz3.ab2@22112>   ADD.l (A1),D0
00030496 <AmiBlitz3.ab2@22115>   ADDQ.w #2,A7                                             ;for runtime errs!
0003049A <AmiBlitz3.ab2@22120>   MOVE.l firstsel(PC),D0
0003049E <AmiBlitz3.ab2@22121>    BEQ.w JUMP_defaerr
000304A0 <AmiBlitz3.ab2@22122>   MOVEA.l D0,A2
000304A4 <AmiBlitz3.ab2@22123>   BSR.w JL_0_CE26
000304A8 <AmiBlitz3.ab2@22124>   BSR.w JL_0_CDFC
000304AC <AmiBlitz3.ab2@22125>   CLR.l $8(A2)
000304B0 <AmiBlitz3.ab2@22126>   MOVE.w $C(A2),D2
000304B4 <AmiBlitz3.ab2@22127> BRA.w JL_0_CE5E
000304BA <AmiBlitz3.ab2@22130> JMP defaerr
000304BE <AmiBlitz3.ab2@22133>   MOVE.l $8(A2),D0
000304C2 <AmiBlitz3.ab2@22134>    BEQ.w JL_0_CE24
000304C4 <AmiBlitz3.ab2@22135>   MOVEA.l D0,A0
000304CA <AmiBlitz3.ab2@22136>   MOVE.l destpointer,D1
000304CC <AmiBlitz3.ab2@22137>   SUB.l A0,D1
000304D2 <AmiBlitz3.ab2@22139>     TST.b fast
000304D6 <AmiBlitz3.ab2@22140>     BEQ 'l1
000304DC <AmiBlitz3.ab2@22141>     TST.w dontwrite
000304E0 <AmiBlitz3.ab2@22142>     BNE.w JL_0_CE24
000304E2 <AmiBlitz3.ab2@22143>     ADDQ.l #2,d1
000304E6 <AmiBlitz3.ab2@22144>     MOVE.l D1,-2(A0)
000304EA <AmiBlitz3.ab2@22145>   BRA JL_0_CE24
000304F0 <AmiBlitz3.ab2@22149>   TST.w dontwrite
000304F4 <AmiBlitz3.ab2@22150>      BNE.w JL_0_CE24
000304FA <AmiBlitz3.ab2@22151>    CMP.l #MaxWordSgnd,D1
000304FE <AmiBlitz3.ab2@22152>    BHI.w JUMP_cbraerr
00030500 <AmiBlitz3.ab2@22153>   MOVE.w D1,(A0)
00030502 <AmiBlitz3.ab2@22156> RTS
00030508 <AmiBlitz3.ab2@22159> JMP cbraerr
0003050C <AmiBlitz3.ab2@22163>   MOVE.l $8(A2),D0
00030510 <AmiBlitz3.ab2@22164>    BEQ.w JL_0_CE5C
00030512 <AmiBlitz3.ab2@22165>   MOVEA.l D0,A3
00030516 <AmiBlitz3.ab2@22166>   MOVE.w #$6000,D1
0003051C <AmiBlitz3.ab2@22168>    TST.b fast
00030520 <AmiBlitz3.ab2@22169>    BEQ 'l1
00030526 <AmiBlitz3.ab2@22170>    OR.l #$ff,d1
0003052A <AmiBlitz3.ab2@22171>    BSR writeword
0003052E <AmiBlitz3.ab2@22175>   BSR.w writeword
00030530 <AmiBlitz3.ab2@22176>   MOVEQ.l #$08,D0
00030532 <AmiBlitz3.ab2@22177>   MOVEQ.l #$01,D1
00030538 <AmiBlitz3.ab2@22178>   MOVEA.l _execbase,A6
0003053E <AmiBlitz3.ab2@22179>   MOVE.l mempool,a0
00030542 <AmiBlitz3.ab2@22180>   JSR _AllocPooled(a6)
00030544 <AmiBlitz3.ab2@22182>   MOVEA.l D0,A0
00030548 <AmiBlitz3.ab2@22183>   MOVE.l $4(A2),(A0)
0003054C <AmiBlitz3.ab2@22184>   MOVE.l A0,$4(A2)
00030554 <AmiBlitz3.ab2@22185>   MOVE.l destpointer,$4(A0)
00030558 <AmiBlitz3.ab2@22186> BRA.w writeword
0003055A <AmiBlitz3.ab2@22189> RTS
00030560 <AmiBlitz3.ab2@22193>   TST.b debugmode
00030564 <AmiBlitz3.ab2@22194>    BEQ.w JL_0_CE7A
00030568 <AmiBlitz3.ab2@22195>   MOVE.w #$C313,D1
0003056C <AmiBlitz3.ab2@22196>   CMP.w #$3,D2
00030570 <AmiBlitz3.ab2@22197>    BCS.w JL_0_CE76
00030572 <AmiBlitz3.ab2@22198>   ADDQ.w #1,D1
00030576 <AmiBlitz3.ab2@22201> BRA.w Atokejsr
00030578 <AmiBlitz3.ab2@22204> RTS
0003057E <AmiBlitz3.ab2@22208> JMP caseerr
00030582 <AmiBlitz3.ab2@22211>   MOVE.l firstsel(PC),D0
00030586 <AmiBlitz3.ab2@22212>    BEQ.w JUMP_caseerr
00030588 <AmiBlitz3.ab2@22213>   MOVEA.l D0,A2
0003058C <AmiBlitz3.ab2@22214>    BSR.w JL_0_CE26
00030590 <AmiBlitz3.ab2@22215>    BSR.w JL_0_CDFC
00030594 <AmiBlitz3.ab2@22216>   MOVE.w $C(A2),D2
00030596 <AmiBlitz3.ab2@22217>   MOVE.w D2,-(A7)
0003059A <AmiBlitz3.ab2@22218>    BSR.w JL_0_CE5E
0003059C <AmiBlitz3.ab2@22219>   MOVE.w (A7),D2
000305A0 <AmiBlitz3.ab2@22220>    BSR.w bakeval
000305A2 <AmiBlitz3.ab2@22221>   MOVE.w (A7)+,D2
000305A6 <AmiBlitz3.ab2@22222>   LEA selcomb(PC),A0
000305AA <AmiBlitz3.ab2@22223>   LEA selcombf(PC),A1
000305AE <AmiBlitz3.ab2@22224>   CMP.w #$1,D2
000305B2 <AmiBlitz3.ab2@22225>    BEQ.w JL_0_CED8
000305B6 <AmiBlitz3.ab2@22226>   LEA selcomw(PC),A0
000305BA <AmiBlitz3.ab2@22227>   CMP.w #$2,D2
000305BE <AmiBlitz3.ab2@22228>    BEQ.w JL_0_CED8
000305C2 <AmiBlitz3.ab2@22229>   LEA selcoml(PC),A0
000305C6 <AmiBlitz3.ab2@22230>   LEA selcomlf(PC),A1
000305CA <AmiBlitz3.ab2@22231>   CMP.w #$7,D2
000305CE <AmiBlitz3.ab2@22232>    BCS.w JL_0_CED8
000305D2 <AmiBlitz3.ab2@22234>   MOVE.w #$CE01,D1
000305D6 <AmiBlitz3.ab2@22235>    BSR.w Atokejsr
000305DA <AmiBlitz3.ab2@22236> BRA.w JL_0_CEDC
000305DE <AmiBlitz3.ab2@22239>   BSR.w pokecode
000305E2 <AmiBlitz3.ab2@22242>   MOVE.w selbne(PC),D1
000305E8 <AmiBlitz3.ab2@22244>     TST.b fast
000305EC <AmiBlitz3.ab2@22245>     BEQ 'l1
000305F2 <AmiBlitz3.ab2@22246>     ORI.l #$ff,d1
000305F6 <AmiBlitz3.ab2@22247>     BSR writeword
000305FA <AmiBlitz3.ab2@22250>   BSR.w writeword
000305FE <AmiBlitz3.ab2@22251>   MOVEA.l firstsel(PC),A0
00030606 <AmiBlitz3.ab2@22252>   MOVE.l destpointer,$8(A0)
0003060A <AmiBlitz3.ab2@22253> BRA.w writeword
0003060E <AmiBlitz3.ab2@22257> pcchk:      Dc.b $3F,$3C,$73,$45                           ;MOVE.W  #$7345,-(A7)   ;#"sE",-(a7) org source
00030610 <AmiBlitz3.ab2@22258> clrst:      Dc.b $42,$A7                                   ;CLR.L   -(A7)
00030614 <AmiBlitz3.ab2@22261> sellineat:  Ds.l 1
0003061A <AmiBlitz3.ab2@22267>   TST.b debugmode
0003061E <AmiBlitz3.ab2@22268>    BEQ.w JL_0_CF0E
00030622 <AmiBlitz3.ab2@22269>   MOVE.l pcchk(PC),D1                                      ;move #"sE",-(a7)
00030626 <AmiBlitz3.ab2@22270>    BSR.w writelong
00030630 <AmiBlitz3.ab2@22273>   MOVE.l linenumat,sellineat
0003063A <AmiBlitz3.ab2@22275>    MOVE.l destpointer,pushpc
00030644 <AmiBlitz3.ab2@22276>   MOVE.l hunkoffsetbase,pushoff
00030646 <AmiBlitz3.ab2@22277>   MOVEQ.l #$00,D2
0003064A <AmiBlitz3.ab2@22278>    BSR.w bakevalu                                          ;Evaluate
0003064E <AmiBlitz3.ab2@22279>    BSR.w JL_0_B5D2
00030652 <AmiBlitz3.ab2@22280>   CMP.w #$7,D2
00030656 <AmiBlitz3.ab2@22281>    BNE.w JL_0_CF36
0003065A <AmiBlitz3.ab2@22282>   MOVE.w clrst(PC),D1
0003065E <AmiBlitz3.ab2@22283>    BSR.w writeword
00030662 <AmiBlitz3.ab2@22286>    BSR.w JL_0_B63C
00030666 <AmiBlitz3.ab2@22287>   LEA selpushb(PC),A0
0003066A <AmiBlitz3.ab2@22288>   LEA selpushbf(PC),A1
0003066E <AmiBlitz3.ab2@22289>   CMP.w #$1,D2
00030672 <AmiBlitz3.ab2@22290>    BEQ.w JL_0_CF88
00030676 <AmiBlitz3.ab2@22291>   LEA selpushw(PC),A0
0003067A <AmiBlitz3.ab2@22292>   CMP.w #$2,D2
0003067E <AmiBlitz3.ab2@22293>    BEQ.w JL_0_CF88
00030682 <AmiBlitz3.ab2@22294>   LEA selpushl(PC),A0
00030686 <AmiBlitz3.ab2@22295>   LEA selpushlf(PC),A1
0003068A <AmiBlitz3.ab2@22296>   CMP.w #$7,D2
0003068E <AmiBlitz3.ab2@22297>    BCS.w JL_0_CF88
00030694 <AmiBlitz3.ab2@22299>   MOVE.w moved0a3,D1                                       ;d0 to a3!
00030698 <AmiBlitz3.ab2@22300>    BSR.w writeword
0003069C <AmiBlitz3.ab2@22301>   LEA selpushs(PC),A0
000306A0 <AmiBlitz3.ab2@22302>   LEA selpushsf(PC),A1
000306A4 <AmiBlitz3.ab2@22303>    BSR.w pokecode
000306A8 <AmiBlitz3.ab2@22304>   MOVE.w #$C701,D1
000306AC <AmiBlitz3.ab2@22305>    BSR.w Atokejsr
000306B0 <AmiBlitz3.ab2@22306> BRA.w JL_0_CF8C
000306B4 <AmiBlitz3.ab2@22309>   BSR.w pokecode
000306B6 <AmiBlitz3.ab2@22312>   MOVEQ.l #$0E,D0
000306B8 <AmiBlitz3.ab2@22313>   MOVEQ.l #$01,D1
000306BE <AmiBlitz3.ab2@22314>   MOVEA.l _execbase,A6
000306C4 <AmiBlitz3.ab2@22316>   MOVE.l mempool,a0
000306C8 <AmiBlitz3.ab2@22317>   JSR _AllocPooled(a6)
000306CA <AmiBlitz3.ab2@22318>   MOVEA.l D0,A0
000306CE <AmiBlitz3.ab2@22319>   MOVE.l firstsel(PC),(A0)
000306D4 <AmiBlitz3.ab2@22320>   MOVE.l A0,firstsel
000306D8 <AmiBlitz3.ab2@22321>   CLR.l $4(A0)
000306DC <AmiBlitz3.ab2@22322>   CLR.l $8(A0)
000306E0 <AmiBlitz3.ab2@22323>   MOVE.w D2,$C(A0)
000306E2 <AmiBlitz3.ab2@22324> RTS
000306E8 <AmiBlitz3.ab2@22328>   MOVE.l firstrep,D0
000306EC <AmiBlitz3.ab2@22329>    BEQ.w JUMP_unterr1
000306F0 <AmiBlitz3.ab2@22330>   MOVE.w #$6000,D1
000306F4 <AmiBlitz3.ab2@22331>   BSR.w writeword
000306F6 <AmiBlitz3.ab2@22332>   MOVEA.l D0,A0
000306FA <AmiBlitz3.ab2@22333>   MOVE.l $4(A0),D1
00030700 <AmiBlitz3.ab2@22334>   SUB.l destpointer,D1
00030702 <AmiBlitz3.ab2@22335>   TST.w D1
00030706 <AmiBlitz3.ab2@22336>    BPL.w JUMP_unterr2
0003070A <AmiBlitz3.ab2@22337>   BSR.w writeword
00030710 <AmiBlitz3.ab2@22338>   MOVEA.l _execbase,A6
00030714 <AmiBlitz3.ab2@22339> BRA.w JL_0_D036
0003071A <AmiBlitz3.ab2@22342> JMP unterr2
00030720 <AmiBlitz3.ab2@22345> JMP unterr1
00030726 <AmiBlitz3.ab2@22349>   MOVE.l firstrep,D0
0003072A <AmiBlitz3.ab2@22350>    BEQ.w JUMP_unterr1
0003072E <AmiBlitz3.ab2@22351>   BSR.w do_if
00030734 <AmiBlitz3.ab2@22352>   JSR reget
00030738 <AmiBlitz3.ab2@22353>    BNE.w JUMP_syntaxerr
0003073E <AmiBlitz3.ab2@22354>   MOVE.w dontwrite,D1
00030742 <AmiBlitz3.ab2@22355>    BNE.w JL_0_D020
00030748 <AmiBlitz3.ab2@22356>   MOVEA.l firstrep,A0
0003074E <AmiBlitz3.ab2@22357>   MOVEA.l destpointer,A1
00030754 <AmiBlitz3.ab2@22359>     TST.b fast
00030758 <AmiBlitz3.ab2@22360>     BEQ 'l1
0003075A <AmiBlitz3.ab2@22361>     SUBQ.w #4,a1
0003075E <AmiBlitz3.ab2@22362>     MOVE.l $4(A0),D2
00030760 <AmiBlitz3.ab2@22363>     SUB.l A1,D2
00030762 <AmiBlitz3.ab2@22364>     MOVE.l d2,(a1)
00030766 <AmiBlitz3.ab2@22365>   BRA JL_0_D020
00030768 <AmiBlitz3.ab2@22369>   SUBQ.w #2,A1
0003076C <AmiBlitz3.ab2@22370>   MOVE.l $4(A0),D2
0003076E <AmiBlitz3.ab2@22371>   SUB.l A1,D2
00030770 <AmiBlitz3.ab2@22372>   TST.w D2
00030774 <AmiBlitz3.ab2@22373>    BPL.w JUMP_unterr2
00030776 <AmiBlitz3.ab2@22374>   MOVE.w D2,(A1)
0003077C <AmiBlitz3.ab2@22377>   MOVEA.l firstiff,A1
00030782 <AmiBlitz3.ab2@22378>   MOVE.l (A1),firstiff
00030784 <AmiBlitz3.ab2@22379>   MOVEQ.l #$0E,D0
0003078A <AmiBlitz3.ab2@22380>   MOVEA.l _execbase,A6
00030790 <AmiBlitz3.ab2@22381>   MOVE.l mempool,a0
00030794 <AmiBlitz3.ab2@22382>   JSR _FreePooled(A6)
0003079A <AmiBlitz3.ab2@22385>   MOVEA.l firstrep,A1
000307A0 <AmiBlitz3.ab2@22386>   MOVE.l (A1),firstrep
000307A2 <AmiBlitz3.ab2@22387>   MOVEQ.l #$08,D0
000307A8 <AmiBlitz3.ab2@22388>   MOVE.l mempool,a0
000307AC <AmiBlitz3.ab2@22389> JMP _FreePooled(A6)
000307B0 <AmiBlitz3.ab2@22392> iflineat:   Ds.l 1
000307B2 <AmiBlitz3.ab2@22396>   MOVEQ.l #$00,D2
000307B8 <AmiBlitz3.ab2@22397>   TST.b fast
000307BC <AmiBlitz3.ab2@22398>   BEQ 'l1
000307C4 <AmiBlitz3.ab2@22399>   MOVE.b #1,nostringopt
000307CC <AmiBlitz3.ab2@22400>   MOVE.b #1,iniffcommand
000307CE <AmiBlitz3.ab2@22404>   MOVEQ.l #$00,D1
000307D0 <AmiBlitz3.ab2@22407>   MOVE.w D1,-(A7)
000307D6 <AmiBlitz3.ab2@22408>   MOVE.l destpointer,-(A7)
000307D8 <AmiBlitz3.ab2@22409>   MOVE.w D2,-(A7)
000307E2 <AmiBlitz3.ab2@22410>   MOVE.l linenumat,iflineat
000307E4 <AmiBlitz3.ab2@22411>   MOVEQ.l #$00,D2
000307EE <AmiBlitz3.ab2@22412>   MOVE.b optistring,optistring2
000307F6 <AmiBlitz3.ab2@22413>   MOVE.b #1,optistring
000307FA <AmiBlitz3.ab2@22414>   BSR.w bakevalu
00030804 <AmiBlitz3.ab2@22415>   MOVE.b optistring2,optistring
00030808 <AmiBlitz3.ab2@22416>   CMP.w #$5,D2
0003080C <AmiBlitz3.ab2@22417>    BEQ.w JL_0_D09C
00030810 <AmiBlitz3.ab2@22418>   MOVE.w thetst1(PC),D1
00030814 <AmiBlitz3.ab2@22419>   CMP.w #$1,D2
00030818 <AmiBlitz3.ab2@22420>    BEQ.w writebranchcode
0003081C <AmiBlitz3.ab2@22421>   MOVE.w thetst2(PC),D1
00030820 <AmiBlitz3.ab2@22422>   CMP.w #$2,D2
00030824 <AmiBlitz3.ab2@22423>    BEQ.w writebranchcode
00030828 <AmiBlitz3.ab2@22424>   MOVE.w thetst4(PC),D1
0003082C <AmiBlitz3.ab2@22425>   CMP.w #$7,D2
00030830 <AmiBlitz3.ab2@22426>    BEQ.w writebranchcode
00030834 <AmiBlitz3.ab2@22427>   MOVE.w thetst3(PC),D1
00030838 <AmiBlitz3.ab2@22428> BRA.w writebranchcode
0003083E <AmiBlitz3.ab2@22431>   TST.b fpu
00030842 <AmiBlitz3.ab2@22432>   BEQ 'dofpu
00030848 <AmiBlitz3.ab2@22433>   MOVE.l #$f200003a,d1
0003084C <AmiBlitz3.ab2@22434>   BSR writelong
00030850 <AmiBlitz3.ab2@22435>   MOVE.w #$f2c1,d1
00030854 <AmiBlitz3.ab2@22436>   BSR writeword
00030858 <AmiBlitz3.ab2@22437>   BSR writelong
0003085A <AmiBlitz3.ab2@22438>   ADDQ.l #2,a7
0003085E <AmiBlitz3.ab2@22439> BRA.w br2
00030862 <AmiBlitz3.ab2@22442>    MOVE.w #$C900,D1
00030866 <AmiBlitz3.ab2@22443>    BSR.w Atokejsr
0003086A <AmiBlitz3.ab2@22444>   MOVE.l thetst5(PC),D1
0003086E <AmiBlitz3.ab2@22445>    BSR.w writelong
00030872 <AmiBlitz3.ab2@22446> BRA.w JL_0_D0B4
00030878 <AmiBlitz3.ab2@22450>          CLR.b iniffcommand
0003087E <AmiBlitz3.ab2@22451>          TST.b fast                                        ;branchcode
00030882 <AmiBlitz3.ab2@22452>          BEQ b6
00030888 <AmiBlitz3.ab2@22453>          TST.b fpu
0003088C <AmiBlitz3.ab2@22454>          BEQ 'nofpu
00030892 <AmiBlitz3.ab2@22458>           MOVE.l destpointer,a0
00030898 <AmiBlitz3.ab2@22459>          SUB.l load_var_addr,a0
0003089E <AmiBlitz3.ab2@22460>          CMP.l #4,a0
000308A2 <AmiBlitz3.ab2@22461>          BEQ 'nofpu
000308AA <AmiBlitz3.ab2@22462>          CMP.l #$f2400014,-4(a4)                           ;<
000308AE <AmiBlitz3.ab2@22463>          BNE 'nolt
000308B4 <AmiBlitz3.ab2@22464>          SUBQ.l #2,destpointer
000308BA <AmiBlitz3.ab2@22465>          MOVE.w #$f293,-4(a4)                              ;
000308BE <AmiBlitz3.ab2@22466> BRA 'brf
000308C6 <AmiBlitz3.ab2@22469>   CMP.l #$f2400015,-4(a4)                                  ;<=
000308CA <AmiBlitz3.ab2@22470>          BNE 'nole
000308D0 <AmiBlitz3.ab2@22471>          SUBQ.l #2,destpointer
000308D6 <AmiBlitz3.ab2@22472>          MOVE.w #$f292,-4(a4)
000308DA <AmiBlitz3.ab2@22473> BRA 'brf
000308E2 <AmiBlitz3.ab2@22476>   CMP.l #$f2400013,-4(a4)                                  ;=>
000308E6 <AmiBlitz3.ab2@22477>          BNE 'noge
000308EC <AmiBlitz3.ab2@22478>          SUBQ.l #2,destpointer
000308F2 <AmiBlitz3.ab2@22479>          MOVE.w #$f294,-4(a4)
000308F6 <AmiBlitz3.ab2@22480> BRA 'brf
000308FE <AmiBlitz3.ab2@22483>   CMP.l #$f2400012,-4(a4)                                  ;>
00030902 <AmiBlitz3.ab2@22484>          BNE 'nogt
00030908 <AmiBlitz3.ab2@22485>          SUBQ.l #2,destpointer
0003090E <AmiBlitz3.ab2@22486>          MOVE.w #$f295,-4(a4)
00030912 <AmiBlitz3.ab2@22487> BRA 'brf
0003091A <AmiBlitz3.ab2@22490>   CMP.l #$f2400001,-4(a4)                                  ;=
0003091E <AmiBlitz3.ab2@22491>          BNE 'noeq
00030924 <AmiBlitz3.ab2@22492>          SUBQ.l #2,destpointer
0003092A <AmiBlitz3.ab2@22493>          MOVE.w #$f28e,-4(a4)
0003092E <AmiBlitz3.ab2@22494> BRA 'brf
00030936 <AmiBlitz3.ab2@22497>   CMP.l #$f240000e,-4(a4)                                  ;<>
0003093A <AmiBlitz3.ab2@22498>          BNE 'none
00030940 <AmiBlitz3.ab2@22499>          SUBQ.l #2,destpointer
00030946 <AmiBlitz3.ab2@22500>          MOVE.w #$f281,-4(a4)
00030948 <AmiBlitz3.ab2@22503>   ADDQ.l #2,a7
0003094E <AmiBlitz3.ab2@22505>     TST.b fast
00030952 <AmiBlitz3.ab2@22506>     BEQ 'l1
00030958 <AmiBlitz3.ab2@22507>     OR.b #$40,-3(a4)
0003095C <AmiBlitz3.ab2@22508>     BSR writeword
00030960 <AmiBlitz3.ab2@22512>  BSR writeword
00030964 <AmiBlitz3.ab2@22513> BRA.s br2
0003096A <AmiBlitz3.ab2@22517>   MOVE.l destpointer,a0
00030970 <AmiBlitz3.ab2@22518>          SUB.l load_var_addr,a0
00030976 <AmiBlitz3.ab2@22519>          CMP.l #4,a0
0003097A <AmiBlitz3.ab2@22520>          BEQ JL_0_D0B4
00030980 <AmiBlitz3.ab2@22521>          CMP.w #$4eb9,-6(a4)
00030984 <AmiBlitz3.ab2@22522>          BEQ b6
0003098A <AmiBlitz3.ab2@22523>          CMP.w #$5ec0,-2(a4)                               ;>
0003098E <AmiBlitz3.ab2@22524>      BNE.s 'lb1
00030994 <AmiBlitz3.ab2@22525>          MOVE.w #$6f00,-2(a4)                              ;ble
00030998 <AmiBlitz3.ab2@22526> BRA.s br
0003099E <AmiBlitz3.ab2@22529>  CMP.w #$5dc0,-2(a4)                                       ;<
000309A2 <AmiBlitz3.ab2@22530>   BNE.s 'lb2
000309A8 <AmiBlitz3.ab2@22531>          MOVE.w #$6c00,-2(a4)                              ;bge
000309AC <AmiBlitz3.ab2@22532> BRA.s br
000309B2 <AmiBlitz3.ab2@22535>   CMP.w #$57c0,-2(a4)                                      ;=
000309B6 <AmiBlitz3.ab2@22536>   BNE.s 'lb3
000309BC <AmiBlitz3.ab2@22537>          MOVE.w #$6600,-2(a4)                              ;bne
000309C0 <AmiBlitz3.ab2@22538> BRA.s br
000309C6 <AmiBlitz3.ab2@22541>   CMP.w #$56c0,-2(a4)                                      ;<>
000309CA <AmiBlitz3.ab2@22542>   BNE.s 'lb4
000309D0 <AmiBlitz3.ab2@22543>          MOVE.w #$6700,-2(a4)                              ;beq
000309D4 <AmiBlitz3.ab2@22544> BRA.s br
000309DA <AmiBlitz3.ab2@22547>   CMP.w #$5cc0,-2(a4)                                      ;>=
000309DE <AmiBlitz3.ab2@22548>   BNE.s 'lb5
000309E4 <AmiBlitz3.ab2@22549>          MOVE.w #$6d00,-2(a4)                              ;blt
000309E8 <AmiBlitz3.ab2@22550> BRA.s br
000309EE <AmiBlitz3.ab2@22553>   CMP.w #$5fc0,-2(a4)                                      ;<=
000309F2 <AmiBlitz3.ab2@22554>         BNE.s b6
000309F8 <AmiBlitz3.ab2@22555>          MOVE.w #$6e00,-2(a4)                              ;bgt
000309FA <AmiBlitz3.ab2@22558>   TST.w (a7)+
00030A00 <AmiBlitz3.ab2@22560>         TST.b fast
00030A04 <AmiBlitz3.ab2@22561>         BEQ 'l1
00030A0A <AmiBlitz3.ab2@22562>         OR.b #$ff,-1(a4)                                   ;long branches
00030A0E <AmiBlitz3.ab2@22563>         BSR writeword
00030A12 <AmiBlitz3.ab2@22567>         BSR writeword
00030A16 <AmiBlitz3.ab2@22568> BRA.s br2
00030A1A <AmiBlitz3.ab2@22571>   BSR.w writeword
00030A1E <AmiBlitz3.ab2@22574>   MOVE.l posbr(PC),D1
00030A20 <AmiBlitz3.ab2@22575>   TST.w (A7)+
00030A24 <AmiBlitz3.ab2@22576>    BEQ.w JL_0_D0C2
00030A28 <AmiBlitz3.ab2@22577>   MOVE.l negbr(PC),D1
00030A2E <AmiBlitz3.ab2@22580>   TST.b fast
00030A32 <AmiBlitz3.ab2@22581>            BEQ 'l1
00030A38 <AmiBlitz3.ab2@22582>            OR.l #$00ff0000,d1
00030A3C <AmiBlitz3.ab2@22583>            BSR writelong
00030A40 <AmiBlitz3.ab2@22584>            BSR writeword
00030A44 <AmiBlitz3.ab2@22585> BRA br2
00030A48 <AmiBlitz3.ab2@22588>   BSR.w writelong
00030A4A <AmiBlitz3.ab2@22591>  MOVEQ.l #$0E,D0
00030A4C <AmiBlitz3.ab2@22592>   MOVEQ.l #$01,D1
00030A52 <AmiBlitz3.ab2@22593>   MOVEA.l _execbase,A6
00030A58 <AmiBlitz3.ab2@22595>   MOVE.l mempool,a0
00030A5C <AmiBlitz3.ab2@22596>   JSR _AllocPooled(a6)
00030A5E <AmiBlitz3.ab2@22597>   MOVEA.l D0,A0
00030A64 <AmiBlitz3.ab2@22598>   MOVE.l firstiff,(A0)
00030A6A <AmiBlitz3.ab2@22599>   MOVE.l A0,firstiff
00030A6E <AmiBlitz3.ab2@22600>   MOVE.l (A7)+,$4(A0)
00030A76 <AmiBlitz3.ab2@22601>   MOVE.l destpointer,$8(A0)
00030A7A <AmiBlitz3.ab2@22602>   MOVE.w (A7)+,$C(A0)
00030A80 <AmiBlitz3.ab2@22603>    JSR reget
00030A84 <AmiBlitz3.ab2@22604>    BEQ.w JL_0_D10C
00030A8A <AmiBlitz3.ab2@22605>   BSET #$7,$C(A0)
00030A94 <AmiBlitz3.ab2@22609>   MOVE.w oldqflag,instringon
00030A9A <AmiBlitz3.ab2@22610>   MOVEA.l lastsourcepos,A5
00030AA2 <AmiBlitz3.ab2@22611>   MOVE.w #$003A,lastchar
00030AA4 <AmiBlitz3.ab2@22614> RTS
00030AA8 <AmiBlitz3.ab2@22618>   CMP.w #$1,D0
00030AAC <AmiBlitz3.ab2@22619>    BLT.w JL_0_D128
00030AB0 <AmiBlitz3.ab2@22620>   CMP.w #$0,D0
00030AB4 <AmiBlitz3.ab2@22621>    BGT.w JL_0_D128
00030AB6 <AmiBlitz3.ab2@22622>   ADD.w D0,D0
00030AB8 <AmiBlitz3.ab2@22623>   ADD.w D0,D0
00030ABC <AmiBlitz3.ab2@22624>   MOVEA.l JL_0_D128(PC,D0.W),A0
00030ABE <AmiBlitz3.ab2@22627> JMP (A0)
00030AC2 <AmiBlitz3.ab2@22630> BRA.w JL_0_D128
00030AC6 <AmiBlitz3.ab2@22634>   CMP.w #$1,D0
00030ACA <AmiBlitz3.ab2@22635>    BLT.w JL_0_D146
00030ACE <AmiBlitz3.ab2@22636>   CMP.w #$0,D0
00030AD2 <AmiBlitz3.ab2@22637>    BGT.w JL_0_D146
00030AD4 <AmiBlitz3.ab2@22638>   ADD.w D0,D0
00030AD6 <AmiBlitz3.ab2@22639>   ADD.w D0,D0
00030ADA <AmiBlitz3.ab2@22640>   MOVEA.l JL_0_D146(PC,D0.W),A0
00030ADC <AmiBlitz3.ab2@22643>   JSR (A0)
00030AE0 <AmiBlitz3.ab2@22646> BRA.w JL_0_D146
00030AE4 <AmiBlitz3.ab2@22650>   CMP.w #$1,D0
00030AE8 <AmiBlitz3.ab2@22651>    BLT.w JL_0_D168
00030AEC <AmiBlitz3.ab2@22652>   CMP.w #$0,D0
00030AF0 <AmiBlitz3.ab2@22653>    BGT.w JL_0_D168
00030AF2 <AmiBlitz3.ab2@22654>   ADD.w D0,D0
00030AF4 <AmiBlitz3.ab2@22655>   ADD.w D0,D0
00030AF8 <AmiBlitz3.ab2@22656>   MOVEA.l JL_0_D168(PC,D0.W),A0
00030AFC <AmiBlitz3.ab2@22659>   MOVE.w #$6753,-(A7)                                      ;#'gS' ;for runtime error checking!
00030AFE <AmiBlitz3.ab2@22662>    JSR (A0)
00030B02 <AmiBlitz3.ab2@22665> BRA.w JL_0_D168
00030B04 <AmiBlitz3.ab2@22668> labcnt:   Ds.w 1
00030B06 <AmiBlitz3.ab2@22675>   MOVEQ.l #$02,D2
00030B0A <AmiBlitz3.ab2@22676>    BSR.w bakeval
00030B0E <AmiBlitz3.ab2@22677>   LEA JL_0_D10E(PC),A0
00030B12 <AmiBlitz3.ab2@22678>   LEA JL_0_D12C(PC),A1
00030B16 <AmiBlitz3.ab2@22679>   MOVE.w #$001A,D1
00030B1A <AmiBlitz3.ab2@22680>   CMP.w #-$7FFB,D0
00030B1E <AmiBlitz3.ab2@22681>    BEQ.w JL_0_D1B6
00030B22 <AmiBlitz3.ab2@22682>   CMP.w #-$7FFA,D0
00030B26 <AmiBlitz3.ab2@22683>    BNE.w JUMP_syntaxerr
00030B2A <AmiBlitz3.ab2@22684>   LEA JL_0_D12C(PC),A0
00030B2E <AmiBlitz3.ab2@22685>   LEA JL_0_D14A(PC),A1
00030B32 <AmiBlitz3.ab2@22686>   MOVE.w #$001A,D1
00030B38 <AmiBlitz3.ab2@22687>   TST.b debugmode
00030B3C <AmiBlitz3.ab2@22688>    BEQ.b JL_0_D1B6
00030B42 <AmiBlitz3.ab2@22689>    JSR chkstak
00030B46 <AmiBlitz3.ab2@22690>   LEA JL_0_D14A(PC),A0
00030B4A <AmiBlitz3.ab2@22691>   LEA labcnt(PC),A1
00030B4E <AmiBlitz3.ab2@22692>   MOVE.w #$001E,D1
00030B50 <AmiBlitz3.ab2@22695>   MOVE.w D1,-(A7)
00030B56 <AmiBlitz3.ab2@22696>   MOVE.l destpointer,-(A7)                                 ;for when we know number of labels!
00030B5A <AmiBlitz3.ab2@22697>    BSR.w pokecode
00030B60 <AmiBlitz3.ab2@22698>   CLR.w labcnt
00030B66 <AmiBlitz3.ab2@22703>    JSR get1bytemain
00030B6C <AmiBlitz3.ab2@22704>   SUBQ.l #2,destpointer                                    ;for makealab!
00030B70 <AmiBlitz3.ab2@22705>    BSR.w JL_0_AE22
00030B76 <AmiBlitz3.ab2@22706>   ADDQ.l #2,destpointer
00030B7C <AmiBlitz3.ab2@22707>    JSR addoff
00030B80 <AmiBlitz3.ab2@22708>   MOVE.l $8(A2),D1
00030B84 <AmiBlitz3.ab2@22709>    BSR.w writelong
00030B8A <AmiBlitz3.ab2@22710>   ADDQ.w #1,labcnt
00030B90 <AmiBlitz3.ab2@22711>    JSR reget
00030B94 <AmiBlitz3.ab2@22712>   CMP.w #$2C,D0
00030B98 <AmiBlitz3.ab2@22713>    BEQ.w JL_0_D1C8
00030B9A <AmiBlitz3.ab2@22714>   MOVEA.l (A7)+,A0
00030B9C <AmiBlitz3.ab2@22715>   MOVE.w (A7)+,D2
00030BA2 <AmiBlitz3.ab2@22716>   MOVE.w dontwrite,D1
00030BA6 <AmiBlitz3.ab2@22717>    BNE.w JL_0_D21A
00030BAA <AmiBlitz3.ab2@22718>   MOVE.w labcnt(PC),D1
00030BAE <AmiBlitz3.ab2@22719>   MOVE.w D1,$A(A0)
00030BB0 <AmiBlitz3.ab2@22720>   ADD.w D1,D1
00030BB2 <AmiBlitz3.ab2@22721>   ADD.w D1,D1
00030BB4 <AmiBlitz3.ab2@22722>   ADDQ.w #2,D1
00030BB8 <AmiBlitz3.ab2@22723>   MOVE.w D1,$2(A0,D2.W)
00030BBA <AmiBlitz3.ab2@22726> RTS
00030BC0 <AmiBlitz3.ab2@22730>   TST.b debugmode
00030BC4 <AmiBlitz3.ab2@22731>    BEQ.w JL_0_D236
00030BCA <AmiBlitz3.ab2@22732>    JSR chkstak
00030BD0 <AmiBlitz3.ab2@22733>   MOVE.l AL_0_D162,D1
00030BD4 <AmiBlitz3.ab2@22734>    BSR.w writelong
00030BDA <AmiBlitz3.ab2@22736>   MOVE.w gosubcode,D1
00030BDE <AmiBlitz3.ab2@22737> BRA.w JL_0_D246
00030BE4 <AmiBlitz3.ab2@22741>   MOVE.w gotocode,D1
00030BE6 <AmiBlitz3.ab2@22744>   MOVE.w D1,-(A7)
00030BEA <AmiBlitz3.ab2@22745>    BSR.w JL_0_AE22
00030BEC <AmiBlitz3.ab2@22746>   MOVE.w (A7)+,D1
00030BF0 <AmiBlitz3.ab2@22747>    BSR.w writeword
00030BF6 <AmiBlitz3.ab2@22748>    JSR addoff
00030BFA <AmiBlitz3.ab2@22749>   MOVE.l $8(A2),D1
00030BFE <AmiBlitz3.ab2@22750> BRA.w writelong
00030C04 <AmiBlitz3.ab2@22754>   MOVE.w proceduremode,D1
00030C08 <AmiBlitz3.ab2@22755>    BEQ.w JUMP_badpenderr
00030C0C <AmiBlitz3.ab2@22756>   MOVE.w #$4EF9,D1
00030C10 <AmiBlitz3.ab2@22757>    BSR.w writeword
00030C16 <AmiBlitz3.ab2@22758>    JSR addoff
00030C1C <AmiBlitz3.ab2@22759>   MOVEA.l _execbase,A6
00030C1E <AmiBlitz3.ab2@22760>   MOVEQ.l #$08,D0
00030C20 <AmiBlitz3.ab2@22761>   MOVEQ.l #$01,D1
00030C26 <AmiBlitz3.ab2@22763>   MOVE.l mempool,a0
00030C2A <AmiBlitz3.ab2@22764>   JSR _AllocPooled(a6)
00030C2C <AmiBlitz3.ab2@22765>   MOVEA.l D0,A0
00030C32 <AmiBlitz3.ab2@22766>   MOVE.l firstpend,(A0)
00030C38 <AmiBlitz3.ab2@22767>   MOVE.l A0,firstpend
00030C40 <AmiBlitz3.ab2@22768>   MOVE.l destpointer,$4(A0)
00030C44 <AmiBlitz3.ab2@22769> BRA.w writelong
00030C48 <AmiBlitz3.ab2@22773>   BSR.w do_AsmExit
00030C4E <AmiBlitz3.ab2@22774> JMP get1bytemain
00030C56 <AmiBlitz3.ab2@22778>   MOVE.b #1,nostringopt
00030C5A <AmiBlitz3.ab2@22779>   MOVEM.l a0/a1/d1,-(a7)
00030C60 <AmiBlitz3.ab2@22780>   MOVEA.l currentfunction,A0
00030C66 <AmiBlitz3.ab2@22781>     CMP.l #0,a0
00030C6A <AmiBlitz3.ab2@22782>     BNE 'l1
00030C70 <AmiBlitz3.ab2@22783>     JMP errorasmexit
00030C72 <AmiBlitz3.ab2@22784> 'l1 MOVEQ.l #$00,D2
00030C76 <AmiBlitz3.ab2@22785>   MOVE.b $5(A0),D2
00030C7A <AmiBlitz3.ab2@22786>   BSR.w eval
00030C80 <AmiBlitz3.ab2@22788>   MOVEA.l currentfunction,A0
00030C84 <AmiBlitz3.ab2@22789>   MOVE.l funcstruct_returntype(a0),a0
00030C8A <AmiBlitz3.ab2@22790>   CMP.l #0,a0
00030C8E <AmiBlitz3.ab2@22791>   BEQ 'isstatement
00030C96 <AmiBlitz3.ab2@22792>   CMP.l #$100,4(a0)
00030C9A <AmiBlitz3.ab2@22793>   BLT.w 'isvar
00030C9C <AmiBlitz3.ab2@22794>   MOVE.l a2,a1
00030CA2 <AmiBlitz3.ab2@22795>   TST.l typetocast
00030CA6 <AmiBlitz3.ab2@22796>   BEQ 'nocast
00030CAC <AmiBlitz3.ab2@22797>   MOVE.l typetocast,a1
00030CAE <AmiBlitz3.ab2@22798> 'nocast  CMP.l a0,a1
00030CB2 <AmiBlitz3.ab2@22799>   BEQ 'ok
00030CB8 <AmiBlitz3.ab2@22800>   CLR.l typetocast
00030CBE <AmiBlitz3.ab2@22801>   MOVE.l lasttoken,d1
00030CC2 <AmiBlitz3.ab2@22802>   CMP.w #$b581,d1                   ; ok, when token for null
00030CC6 <AmiBlitz3.ab2@22803>   BEQ 'isnull
00030CCC <AmiBlitz3.ab2@22804> 'error  JMP errorconvertreturntype
00030CD0 <AmiBlitz3.ab2@22811>   MOVEM.l (a7)+,a0/a1/d1
00030CD4 <AmiBlitz3.ab2@22812> BRA.w do_AsmExit
00030CDA <AmiBlitz3.ab2@22814> error_convert_types2 JMP error_convert_types
00030CE0 <AmiBlitz3.ab2@22827>   TST.b debugmode
00030CE4 <AmiBlitz3.ab2@22828>    BEQ.w JL_0_D2CA
00030CE8 <AmiBlitz3.ab2@22829>   MOVE.w #$C305,D1
00030CEC <AmiBlitz3.ab2@22830> BRA.w Atokejsr
00030CF0 <AmiBlitz3.ab2@22833>   MOVE.w #$4E75,D1
00030CF4 <AmiBlitz3.ab2@22834> BRA.w writeword
00030CF8 <AmiBlitz3.ab2@22837> localslist:  Ds.l 1                                        ;all locals for procs.;??Looks like obsovled data??
00030CFC <AmiBlitz3.ab2@22838> proclocals:  Ds.l 1                                        ;for debugga!
00030CFE <AmiBlitz3.ab2@22839> procnum:     Ds.w 1
00030D00 <AmiBlitz3.ab2@22840> procnum2:    Ds.w 1
00030D04 <AmiBlitz3.ab2@22841> prolineat:   Ds.l 1
00030D0A <AmiBlitz3.ab2@22845>    TST.w proceduremode
00030D0E <AmiBlitz3.ab2@22846>    BGT JUMP_sreterr
00030D12 <AmiBlitz3.ab2@22847>    CMP.w #-$7FF9,D0
00030D16 <AmiBlitz3.ab2@22848>    BEQ.w JL_0_D29C
00030D18 <AmiBlitz3.ab2@22849>    MOVEQ.l #-$01,D1
00030D1C <AmiBlitz3.ab2@22850> BRA.w do_function2
00030D22 <AmiBlitz3.ab2@22853> JMP sreterr
00030D28 <AmiBlitz3.ab2@22857>   CLR.b skipfunc
00030D2E <AmiBlitz3.ab2@22858>   TST.l unusedfunc
00030D32 <AmiBlitz3.ab2@22859>   BEQ 'ex
00030D36 <AmiBlitz3.ab2@22860>   MOVEM.l d0-d7/a0-a6,-(a7)
00030D3C <AmiBlitz3.ab2@22861>   MOVE.l unusedfunc,d1
00030D42 <AmiBlitz3.ab2@22862>   LEA ptr_parameterstore,a5
00030D44 <AmiBlitz3.ab2@22865>   MOVE.l d1,a0
00030D48 <AmiBlitz3.ab2@22866>   LEA 12(a0),a2
00030D4A <AmiBlitz3.ab2@22867>   MOVE.l a5,a1
00030D4C <AmiBlitz3.ab2@22869>   CMPM.b (a1)+,(a2)+
00030D50 <AmiBlitz3.ab2@22870>   BNE 'neq
00030D52 <AmiBlitz3.ab2@22871>   TST.b (a2)
00030D56 <AmiBlitz3.ab2@22872>   BNE 'ch
00030D58 <AmiBlitz3.ab2@22873>   TST.b (a1)
00030D5C <AmiBlitz3.ab2@22874>   BNE 'neq
00030D64 <AmiBlitz3.ab2@22875>   MOVE.b #1,skipfunc
00030D68 <AmiBlitz3.ab2@22876> BRA 'out
00030D6A <AmiBlitz3.ab2@22879>   MOVE.l (a0),d1
00030D6E <AmiBlitz3.ab2@22880>   BNE 'ag
00030D72 <AmiBlitz3.ab2@22883>   MOVEM.l (a7)+,d0-d7/a0-a6
00030D74 <AmiBlitz3.ab2@22886> RTS
00030D7A <AmiBlitz3.ab2@22890> JMP dupprocerr
00030D80 <AmiBlitz3.ab2@22893> JMP illprocperr
00030D88 <AmiBlitz3.ab2@22900>   CMP.w #-1,proceduremode                                  ;was JUMP_sreterr_2
00030D8C <AmiBlitz3.ab2@22901>    BEQ JUMP_sreterr
00030D90 <AmiBlitz3.ab2@22902>   CMP.w #-$7FF9,D0
00030D94 <AmiBlitz3.ab2@22903>    BEQ.w do_function_return
00030D9E <AmiBlitz3.ab2@22906>   MOVE.w oldqflag,instringon
00030DA4 <AmiBlitz3.ab2@22907>   MOVEA.l lastsourcepos,A5
00030DAA <AmiBlitz3.ab2@22908>   JSR getfunctionreturntype
00030DB0 <AmiBlitz3.ab2@22909>   JSR get1bytemain
00030DB6 <AmiBlitz3.ab2@22912>   TST.b declare
00030DBA <AmiBlitz3.ab2@22913>   BEQ 'l1
00030DC2 <AmiBlitz3.ab2@22914>   MOVE.b #1,nowdeclare
00030DC8 <AmiBlitz3.ab2@22917>   JSR errchx                                           ;writejumpoverfunction
00030DCE <AmiBlitz3.ab2@22920>   CLR.b fastfunc
00030DD8 <AmiBlitz3.ab2@22921>   MOVE.l firstiff,firstiffstore
00030DE0 <AmiBlitz3.ab2@22922>   CMP.l #"FAST",-1(a5)
00030DE4 <AmiBlitz3.ab2@22923>   BNE 'nofast
00030DEA <AmiBlitz3.ab2@22924>   CMP.b #" ",3(a5)
00030DEE <AmiBlitz3.ab2@22925>   BNE 'nofast
00030DF0 <AmiBlitz3.ab2@22926>   ADDQ.l #3,a5
00030DF4 <AmiBlitz3.ab2@22929>     CMP.b #" ",(a5)
00030DF8 <AmiBlitz3.ab2@22930>      BNE 'x1
00030DFA <AmiBlitz3.ab2@22931>     ADDQ #1,a5
00030DFE <AmiBlitz3.ab2@22932> BRA 'x2
00030E04 <AmiBlitz3.ab2@22935>   MOVE.l a5,lastsourcepos
00030E0C <AmiBlitz3.ab2@22936>   MOVE.b #1,fastfunc
00030E14 <AmiBlitz3.ab2@22939>   CMP.l #"NOOP",-1(a5)                                     ;compile 3* so its deactivate
00030E18 <AmiBlitz3.ab2@22940> BRA 'noopt
00030E1E <AmiBlitz3.ab2@22942>   CMP.w #"T ",3(a5)                                        ;??Looks like dead code??
00030E22 <AmiBlitz3.ab2@22943>   BNE 'noopt
00030E24 <AmiBlitz3.ab2@22944>   ADDQ.l #4,a5
00030E28 <AmiBlitz3.ab2@22947>     CMP.b #" ",(a5)
00030E2C <AmiBlitz3.ab2@22948>      BNE 'x1b
00030E2E <AmiBlitz3.ab2@22949>     ADDQ #1,a5
00030E32 <AmiBlitz3.ab2@22950> BRA 'x2b
00030E38 <AmiBlitz3.ab2@22953>   MOVE.l a5,lastsourcepos
00030E3E <AmiBlitz3.ab2@22955>   JSR makename2
00030E42 <AmiBlitz3.ab2@22956> BRA 'l1
00030E48 <AmiBlitz3.ab2@22960>   JSR makename2
00030E4E <AmiBlitz3.ab2@22961>   JSR checkused
00030E54 <AmiBlitz3.ab2@22962>   TST.b skipfunc
00030E58 <AmiBlitz3.ab2@22963>    BEQ 'l1
00030E5E <AmiBlitz3.ab2@22964>   JSR skipme
00030E64 <AmiBlitz3.ab2@22965>   CLR.b fastfunc
00030E66 <AmiBlitz3.ab2@22966> RTS
00030E70 <AmiBlitz3.ab2@22969>   MOVE.l linenumat,prolineat
00030E76 <AmiBlitz3.ab2@22970>   ADDQ.w #1,procnum2
00030E7E <AmiBlitz3.ab2@22971>   MOVE.w procnum2(PC),procnum
00030E84 <AmiBlitz3.ab2@22972>   MOVE.w D1,proceduremode
00030E8A <AmiBlitz3.ab2@22973>   CLR.w locvaroff
00030E8E <AmiBlitz3.ab2@22974>   CMP.w #$7B,D0
00030E92 <AmiBlitz3.ab2@22975>    BNE.w JUMP_syntaxerr
00030E9A <AmiBlitz3.ab2@22976>    MOVE.b #1,infunctioncode
00030EA0 <AmiBlitz3.ab2@22977>   MOVEA.l tempvm,A0
00030EA8 <AmiBlitz3.ab2@22978>   MOVE.w $C(A0),memlibstat
00030EAE <AmiBlitz3.ab2@22979>   BCLR #$7,$C(A0)                                          ;Bit out of range
00030EB2 <AmiBlitz3.ab2@22980>   MOVE.w #$4EF9,D1
00030EB6 <AmiBlitz3.ab2@22981>    BSR.w writeword
00030EBC <AmiBlitz3.ab2@22982>    JSR addoff
00030EC0 <AmiBlitz3.ab2@22983>    BSR.w writelong
00030EC6 <AmiBlitz3.ab2@22984>    JSR findproc                                          ;findproc function
00030ECA <AmiBlitz3.ab2@22985>    BEQ.w JUMP_dupprocerr
00030ED0 <AmiBlitz3.ab2@22986>    JSR addlabel
00030ED6 <AmiBlitz3.ab2@22987>    MOVE.b #31,$20(a2)                                      ;increase if more pars
00030EDC <AmiBlitz3.ab2@22988>    MOVE.b #0,isfunc(a2)
00030EE4 <AmiBlitz3.ab2@22989>    MOVE.l functionreturntype,funcstruct_returntype(a2)
00030EEC <AmiBlitz3.ab2@22990>   MOVE.l destpointer,$E(A2)
00030EF2 <AmiBlitz3.ab2@22991>   MOVE.l A2,currentfunction
00030EF8 <AmiBlitz3.ab2@22992>   LEA nops8,A0
00030EFE <AmiBlitz3.ab2@22993>   LEA dataget,A1
00030F02 <AmiBlitz3.ab2@22994>    BSR.w pokecode2
00030F08 <AmiBlitz3.ab2@22995>   TST.b debugmode
00030F0C <AmiBlitz3.ab2@22996>    BEQ.b JL_0_D3AA
00030F0E <AmiBlitz3.ab2@22997>   MOVEQ.l #$04,D1
00030F14 <AmiBlitz3.ab2@22998>    JSR writetrap
00030F1E <AmiBlitz3.ab2@22999>   MOVE.l destpointer,proclocals
00030F22 <AmiBlitz3.ab2@23000>    BSR.w writelong
00030F26 <AmiBlitz3.ab2@23001>    BSR.w writelong
00030F2A <AmiBlitz3.ab2@23004>    LEA $16(A2),A4
00030F32 <AmiBlitz3.ab2@23005>   MOVE.b proceduremode+1,$5(A2)
00030F34 <AmiBlitz3.ab2@23006>   MOVEQ.l #$00,D6
00030F36 <AmiBlitz3.ab2@23007>   MOVEQ.l #$00,D5
00030F3C <AmiBlitz3.ab2@23008>    JSR get1bytemain
00030F40 <AmiBlitz3.ab2@23009>   CMP.w #$7D,D0
00030F44 <AmiBlitz3.ab2@23010>    BEQ.w JL_0_D466
00030F48 <AmiBlitz3.ab2@23013>    CMP.b #"@",d0
00030F4C <AmiBlitz3.ab2@23014>    BNE 'l2
00030F4E <AmiBlitz3.ab2@23015>    MOVE.l a0,-(a7)
00030F54 <AmiBlitz3.ab2@23016>    MOVE.l currentfunction,a0
00030F5A <AmiBlitz3.ab2@23017>    CMP.b #31,$20(a0)                                       ;increase if morepars
00030F5E <AmiBlitz3.ab2@23018>    BNE 'l1
00030F62 <AmiBlitz3.ab2@23019>    MOVE.b d6,$20(a0)                                       ;increase if morepar
00030F68 <AmiBlitz3.ab2@23022>    JSR get1bytemain
00030F6A <AmiBlitz3.ab2@23023>    MOVE.l (a7)+,a0
00030F6E <AmiBlitz3.ab2@23026>    BSR.w getparameter
00030F72 <AmiBlitz3.ab2@23027>    BSR.w JL_0_8E3C
00030F7A <AmiBlitz3.ab2@23028>   CMPI.l #$7,$4(A2)
00030F7E <AmiBlitz3.ab2@23029>    BNE.w JL_0_D3F6
00030F84 <AmiBlitz3.ab2@23030>   LEA stbuff,A0
00030F86 <AmiBlitz3.ab2@23031>   MOVE.w D5,D1
00030F88 <AmiBlitz3.ab2@23032>   LSL.w #2,D1
00030F8C <AmiBlitz3.ab2@23033>   MOVE.w D6,$0(A0,D1.W)
00030F92 <AmiBlitz3.ab2@23034>   MOVE.w $4(A3),$2(A0,D1.W)
00030F94 <AmiBlitz3.ab2@23035>   ADDQ.w #1,D5
00030F96 <AmiBlitz3.ab2@23036>   MOVEQ.l #$07,D2
00030F9A <AmiBlitz3.ab2@23037> BRA.w JL_0_D442
00030FA0 <AmiBlitz3.ab2@23040> JMP toovarerr
00030FA4 <AmiBlitz3.ab2@23043>   MOVE.w #$2940,D1
00030FA6 <AmiBlitz3.ab2@23044>   MOVEQ.l #$03,D2
00030FAE <AmiBlitz3.ab2@23045>   BTST #$0,flagmask+1
00030FB2 <AmiBlitz3.ab2@23046>    BNE.w JL_0_D430
00030FBA <AmiBlitz3.ab2@23047>   CMPI.l #$100,$4(A2)
00030FBE <AmiBlitz3.ab2@23048>    BCC.w JUMP_illprocperr
00030FC2 <AmiBlitz3.ab2@23049>   MOVE.w $6(A2),D2
00030FC6 <AmiBlitz3.ab2@23050>   CMP.w #$2,D2
00030FCA <AmiBlitz3.ab2@23051>    BHI.w JL_0_D430
00030FCE <AmiBlitz3.ab2@23052>    BEQ.w JL_0_D42C
00030FD2 <AmiBlitz3.ab2@23053>   EORI.w #$3000,D1
00030FD6 <AmiBlitz3.ab2@23054> BRA.w JL_0_D430
00030FDC <AmiBlitz3.ab2@23057> JMP more6pard
00030FE0 <AmiBlitz3.ab2@23060>   ORI.w #$1000,D1
00030FE2 <AmiBlitz3.ab2@23063>   OR.w D6,D1
00030FE8 <AmiBlitz3.ab2@23064>   TST.b fpu
00030FEC <AmiBlitz3.ab2@23065>   BEQ 'nofpu
00030FF0 <AmiBlitz3.ab2@23066>   CMP.b #5,d2
00030FF4 <AmiBlitz3.ab2@23067>   BNE 'nofpu
00030FF8 <AmiBlitz3.ab2@23068>   CMP.w #6,d6
00030FFC <AmiBlitz3.ab2@23069>   BLT 'l10a
00031002 <AmiBlitz3.ab2@23070>   CMP.l #newtype_double,a2
00031006 <AmiBlitz3.ab2@23071>   BEQ JUMP_more6pard
0003100A <AmiBlitz3.ab2@23072> BRA 'nofpu
00031010 <AmiBlitz3.ab2@23075>   MOVE.l #$f22c6400,d1
00031014 <AmiBlitz3.ab2@23076>   MOVEM.l d0/a4,-(a7)
00031016 <AmiBlitz3.ab2@23077>   MOVE.l d6,d0
00031018 <AmiBlitz3.ab2@23078>   ASL.l #7,d0
0003101A <AmiBlitz3.ab2@23079>   OR.w d0,d1
00031020 <AmiBlitz3.ab2@23080>   CMP.l #newtype_double,a2
00031024 <AmiBlitz3.ab2@23081>   BNE 'l1
0003102A <AmiBlitz3.ab2@23082>   OR.l #$1000,d1
0003102E <AmiBlitz3.ab2@23085>   BSR writelong
00031032 <AmiBlitz3.ab2@23086>   MOVE.w 4(a3),d1
00031036 <AmiBlitz3.ab2@23087>   BSR writeword
0003103A <AmiBlitz3.ab2@23088>   MOVEM.l (a7)+,a4/d0
0003103E <AmiBlitz3.ab2@23089> BRA JL_0_D442
00031040 <AmiBlitz3.ab2@23092>   MOVE.l A4,-(A7)
00031044 <AmiBlitz3.ab2@23093>    CMP.w #6,d6
00031048 <AmiBlitz3.ab2@23094>    BLT 'l10
0003104C <AmiBlitz3.ab2@23095>    MOVE.w #$c500-4,d1                                      ;savetemp+regnum
0003104E <AmiBlitz3.ab2@23096>    ADD.w d6,d1
00031054 <AmiBlitz3.ab2@23097>    JSR Atokejsr
0003105A <AmiBlitz3.ab2@23098>    TST.w dontwrite
0003105E <AmiBlitz3.ab2@23099>    BNE 'l10
00031064 <AmiBlitz3.ab2@23100>    MOVE.l data1start,d1
0003106A <AmiBlitz3.ab2@23101>    MOVE.l destpointer,a4
0003106E <AmiBlitz3.ab2@23102>    ADD.l d1,-6(a4)
00031074 <AmiBlitz3.ab2@23103>    MOVE.l destpointer,d1
00031076 <AmiBlitz3.ab2@23104>    SUBQ.l #6,d1
0003107C <AmiBlitz3.ab2@23105>    SUB.l destbufferstart,d1
0003107E <AmiBlitz3.ab2@23107>    MOVE.l d2,-(a7)
00031080 <AmiBlitz3.ab2@23108>    MOVE.l d1,d2
00031086 <AmiBlitz3.ab2@23109>    JSR addhunkoffset                                       ;move.l $0,-x(a4)
00031088 <AmiBlitz3.ab2@23110>    MOVE.l (a7)+,d2
0003108E <AmiBlitz3.ab2@23111>    MOVE.l destpointer,a4
00031092 <AmiBlitz3.ab2@23112>    CMP.w #2,d2
00031096 <AmiBlitz3.ab2@23113>    BNE 'nw1
0003109C <AmiBlitz3.ab2@23115>    MOVE.w #$3979,-8(a4)                                    ;move.w $0,-x(a4)
000310A4 <AmiBlitz3.ab2@23116>    ADD.l #2,-6(a4)
000310A8 <AmiBlitz3.ab2@23119>    CMP.w #1,d2
000310AC <AmiBlitz3.ab2@23120>    BNE 'nb
000310B2 <AmiBlitz3.ab2@23121>    MOVE.w #$1979,-8(a4)                                    ;move.b $0,-x(a4)
000310BA <AmiBlitz3.ab2@23122>    ADD.l #3,-6(a4)
000310C0 <AmiBlitz3.ab2@23125>    MOVE.w $4(a3),-2(a4)
000310C4 <AmiBlitz3.ab2@23126> BRA 'ne1
000310C8 <AmiBlitz3.ab2@23129>   BSR.w writeword                                          ;write storeparameter
000310CC <AmiBlitz3.ab2@23132>   MOVE.w $4(A3),D1
000310D0 <AmiBlitz3.ab2@23133>    BSR.w writeword
000310D2 <AmiBlitz3.ab2@23136>   MOVEA.l (A7)+,A4
000310D8 <AmiBlitz3.ab2@23139>   CLR.l functionreturntype
000310DA <AmiBlitz3.ab2@23140>   ADDQ.w #1,D6
000310DE <AmiBlitz3.ab2@23141>   CMP.w #11,D6                                             ;max function parameters
000310E2 <AmiBlitz3.ab2@23142>    BCC.w JUMP_toovarerr
000310E8 <AmiBlitz3.ab2@23143>   MOVE.l currentfunction,a0
000310EC <AmiBlitz3.ab2@23144>   MOVE.l a2,funcstruct_parametertype-4(a0,d6*4)                                    ;-4 because d6 is increment before
000310EE <AmiBlitz3.ab2@23145>   MOVE.b D2,(A4)+
000310F2 <AmiBlitz3.ab2@23146>   CMP.w #$2C,D0
000310F6 <AmiBlitz3.ab2@23147>    BNE.w JL_0_D45E
000310FC <AmiBlitz3.ab2@23148>    JSR get1bytemain
00031100 <AmiBlitz3.ab2@23160> BRA.w JL_0_D3C6
00031104 <AmiBlitz3.ab2@23163>   CMP.w #$7D,D0
00031108 <AmiBlitz3.ab2@23164>    BNE.w JUMP_syntaxerr
0003110E <AmiBlitz3.ab2@23167>   MOVEA.l currentfunction,A2
00031110 <AmiBlitz3.ab2@23168>   LSL.w #4,D5
00031112 <AmiBlitz3.ab2@23169>   OR.w D5,D6
00031116 <AmiBlitz3.ab2@23170>   MOVE.b D6,$4(A2)
00031118 <AmiBlitz3.ab2@23171>   LSR.w #4,D6
0003111C <AmiBlitz3.ab2@23172>    BEQ.w JL_0_D4C4
00031122 <AmiBlitz3.ab2@23173>   LEA stbuff,A0
00031124 <AmiBlitz3.ab2@23174>   SUBQ.w #1,D6
00031126 <AmiBlitz3.ab2@23177>     MOVE.w D6,D1                                           ;function stringpars
00031128 <AmiBlitz3.ab2@23178>     LSL.w #2,D1                                            ;stringsize was 2
0003112A <AmiBlitz3.ab2@23180>       LSL.w #1,d1
0003112C <AmiBlitz3.ab2@23181>       ADDQ.w #4,d1
0003112E <AmiBlitz3.ab2@23183>     ADDQ.w #8,D1
00031134 <AmiBlitz3.ab2@23184>     MOVE.w D1,funcst+2
0003113A <AmiBlitz3.ab2@23185>     MOVE.l funcst,D1
0003113E <AmiBlitz3.ab2@23186>     BSR.w writelong
00031140 <AmiBlitz3.ab2@23187>     MOVE.w (A0)+,D1
00031144 <AmiBlitz3.ab2@23188>     CMP.b #5,d1
00031148 <AmiBlitz3.ab2@23189>     BLE 's1
0003114C <AmiBlitz3.ab2@23190>     MOVE.w #$266c,d1                                       ;native move.l 4(a4),a3
00031150 <AmiBlitz3.ab2@23191>     BSR writeinstruction
00031152 <AmiBlitz3.ab2@23192>     MOVE.w D6,D1                                           ;function stringpars
00031154 <AmiBlitz3.ab2@23193>     LSL.w #2,D1                                            ;stringsize was 2
00031156 <AmiBlitz3.ab2@23195>       LSL.w #1,d1
00031158 <AmiBlitz3.ab2@23197>     ADDQ.w #8,D1
0003115C <AmiBlitz3.ab2@23198>     BSR writeword
00031160 <AmiBlitz3.ab2@23199>   BRA 's2
00031166 <AmiBlitz3.ab2@23202>     OR.w movedna3,D1
0003116A <AmiBlitz3.ab2@23203>      BSR.w writeword
00031170 <AmiBlitz3.ab2@23206>     MOVE.w (A0)+,least+2
00031176 <AmiBlitz3.ab2@23207>     MOVE.l least,D1
0003117A <AmiBlitz3.ab2@23208>      BSR.w writelong
0003117C <AmiBlitz3.ab2@23209>     MOVE.l A0,-(A7)
00031180 <AmiBlitz3.ab2@23210>     MOVE.w #$C700,D1
00031184 <AmiBlitz3.ab2@23211>      BSR.w Atokejsr
00031186 <AmiBlitz3.ab2@23212>     MOVEA.l (A7)+,A0
0003118A <AmiBlitz3.ab2@23213>   DBF D6,JL_0_D482
00031190 <AmiBlitz3.ab2@23216> JMP get1bytemain
00031196 <AmiBlitz3.ab2@23220>   MOVE.w dontwrite,D1
0003119A <AmiBlitz3.ab2@23221>    BNE.w JL_0_D4F6
000311A0 <AmiBlitz3.ab2@23222>   MOVE.l destpointer,-(A7)
000311A6 <AmiBlitz3.ab2@23223>   MOVE.l A0,destpointer
000311AC <AmiBlitz3.ab2@23224>   MOVE.l linksize,D1
000311B0 <AmiBlitz3.ab2@23225>    BSR.w writelong                                         ;writefunctions jumppos
000311B6 <AmiBlitz3.ab2@23226>    TST.b fastfunc
000311BA <AmiBlitz3.ab2@23227>    BNE 'skip
000311BE <AmiBlitz3.ab2@23228>   MOVE.w #$CC00,D1
000311C2 <AmiBlitz3.ab2@23229>    BSR.w tokejsr2                                          ;write clearvars
000311C8 <AmiBlitz3.ab2@23232>   MOVE.l (A7)+,destpointer
000311CA <AmiBlitz3.ab2@23235> RTS
000311D0 <AmiBlitz3.ab2@23239>   MOVEA.l currentfunction,A2
000311D4 <AmiBlitz3.ab2@23240>   MOVEA.l $E(A2),A0
000311D8 <AmiBlitz3.ab2@23241>   MOVE.w $6(A2),D1
000311DC <AmiBlitz3.ab2@23242>    BEQ.w JL_0_D538
000311E2 <AmiBlitz3.ab2@23243>   MOVE.w D1,linksize+2
000311E6 <AmiBlitz3.ab2@23244>   MOVE.w $8(A2),D1                                         ;check if function memalloc need
000311EA <AmiBlitz3.ab2@23245>    BNE.w JL_0_D522
000311EC <AmiBlitz3.ab2@23246>   ADDQ.w #6,A0
000311F0 <AmiBlitz3.ab2@23247>   MOVE.l A0,$E(A2)
000311F4 <AmiBlitz3.ab2@23248> BRA.w JL_0_D4C8
000311F6 <AmiBlitz3.ab2@23251>   MOVE.l A0,-(A7)
000311FA <AmiBlitz3.ab2@23252>    BSR.w JL_0_D4C8
000311FC <AmiBlitz3.ab2@23253>   MOVEA.l (A7)+,A0
00031200 <AmiBlitz3.ab2@23254>   LEA $A(A0),A0
00031206 <AmiBlitz3.ab2@23255>   MOVEA.l currentfunction,A2
0003120A <AmiBlitz3.ab2@23256> BRA.w JL_0_D54A
0003120E <AmiBlitz3.ab2@23259>   MOVE.w $8(A2),D1
00031212 <AmiBlitz3.ab2@23260>    BNE.w JL_0_D54A
00031216 <AmiBlitz3.ab2@23261>   LEA $10(A0),A0
0003121A <AmiBlitz3.ab2@23262>   MOVE.l A0,$E(A2)
0003121C <AmiBlitz3.ab2@23263> RTS
00031222 <AmiBlitz3.ab2@23267> JMP errormsg_nofast
00031228 <AmiBlitz3.ab2@23270>    MOVE.w dontwrite,D1                                     ;writeallocmem for functions (after releasemem called)
0003122C <AmiBlitz3.ab2@23271>    BNE.w JL_0_D580
00031232 <AmiBlitz3.ab2@23272>    TST.b fastfunc
00031236 <AmiBlitz3.ab2@23273>    BNE JUMP_errormsg_nofast
0003123C <AmiBlitz3.ab2@23274>   MOVE.l destpointer,-(A7)
00031242 <AmiBlitz3.ab2@23275>   MOVE.l A0,destpointer
00031246 <AmiBlitz3.ab2@23276>   MOVE.w #$4EB9,D1
0003124A <AmiBlitz3.ab2@23277>    BSR.w writeword
00031250 <AmiBlitz3.ab2@23278>    JSR addoff
00031254 <AmiBlitz3.ab2@23279>    BSR.w writelong
00031256 <AmiBlitz3.ab2@23280>   MOVEA.l (A7)+,A0
0003125C <AmiBlitz3.ab2@23281>   MOVEA.l destpointer,A1
0003125E <AmiBlitz3.ab2@23282>   MOVE.l A0,-(A1)
00031264 <AmiBlitz3.ab2@23283>   MOVE.l A0,destpointer
00031268 <AmiBlitz3.ab2@23286>   MOVE.w $8(A2),D4
0003126C <AmiBlitz3.ab2@23287>    BPL.w JL_0_D59E
00031270 <AmiBlitz3.ab2@23288>   MOVE.w #$C004,D1
00031274 <AmiBlitz3.ab2@23289>    BSR.w tokejsr2
0003127A <AmiBlitz3.ab2@23290>   MOVEA.l currentfunction,A2
0003127E <AmiBlitz3.ab2@23291>   MOVE.w $8(A2),D4
00031282 <AmiBlitz3.ab2@23292>   ANDI.w #$7FFF,D4
00031286 <AmiBlitz3.ab2@23295>    BEQ.w JL_0_D5E0
0003128A <AmiBlitz3.ab2@23296>   MOVE.b $4(A2),D1
0003128E <AmiBlitz3.ab2@23297>   ANDI.w #$F,D1
00031290 <AmiBlitz3.ab2@23298>   MOVE.w D1,-(A7)
00031294 <AmiBlitz3.ab2@23299>   CMP.w #$5,D1
00031298 <AmiBlitz3.ab2@23300>    BCS.w JL_0_D5BC
0003129C <AmiBlitz3.ab2@23301>   MOVE.w #$2F04,D1
000312A0 <AmiBlitz3.ab2@23302>    BSR.w writeword
000312A6 <AmiBlitz3.ab2@23305>   MOVE.l locdatast,D3
000312AC <AmiBlitz3.ab2@23306>    JSR datastart
000312B0 <AmiBlitz3.ab2@23307>   MOVE.w #$C501,D1
000312B4 <AmiBlitz3.ab2@23308>    BSR.w tokejsr2
000312B6 <AmiBlitz3.ab2@23309>   MOVE.w (A7)+,D1
000312BA <AmiBlitz3.ab2@23310>   CMP.w #$5,D1
000312BE <AmiBlitz3.ab2@23311>    BCS.w JL_0_D5E0
000312C2 <AmiBlitz3.ab2@23312>   MOVE.w #$281F,D1
000312C6 <AmiBlitz3.ab2@23313>    BSR.w writeword
000312CA <AmiBlitz3.ab2@23315>   MOVE.w #$4E75,D1
000312CE <AmiBlitz3.ab2@23316> BRA.w writeword
000312D4 <AmiBlitz3.ab2@23320>   LEA mwait,A0
000312DA <AmiBlitz3.ab2@23321>   LEA mwaitf,A1
000312DE <AmiBlitz3.ab2@23322> BRA.w pokecode
000312E4 <AmiBlitz3.ab2@23326> JMP laberr
000312E8 <AmiBlitz3.ab2@23329>   CMP.w #$2E,D0
000312EC <AmiBlitz3.ab2@23330>   BNE.w JUMP_syntaxerr
000312F2 <AmiBlitz3.ab2@23331>   JSR getparameter2
000312F6 <AmiBlitz3.ab2@23332>   BEQ.w JUMP_laberr
000312FC <AmiBlitz3.ab2@23333>   LEA newtypebase,A2
00031302 <AmiBlitz3.ab2@23334>   JSR findtype
00031306 <AmiBlitz3.ab2@23335>   BNE.w JL_0_D626
0003130E <AmiBlitz3.ab2@23336>   CMPI.l #MaxByte,$4(A2)
00031312 <AmiBlitz3.ab2@23337>   BNE.w JUMP_typeerr
00031316 <AmiBlitz3.ab2@23338> BRA.w JL_0_D62A
0003131C <AmiBlitz3.ab2@23341> JMP typeerr
00031322 <AmiBlitz3.ab2@23344>   JSR addlabel
00031326 <AmiBlitz3.ab2@23347>   CLR.l $4(A2)
0003132C <AmiBlitz3.ab2@23348>   MOVE.l A2,thistype
00031332 <AmiBlitz3.ab2@23349>   CLR.l prevtype
00031338 <AmiBlitz3.ab2@23350>   CLR.w typelen
0003133E <AmiBlitz3.ab2@23351>   CLR.w linemode
00031344 <AmiBlitz3.ab2@23352>   JSR reget
00031348 <AmiBlitz3.ab2@23353>   BNE.w typemode
0003134A <AmiBlitz3.ab2@23354> RTS
0003134E <AmiBlitz3.ab2@23357>   CMP.w #-$7FFE,D0
00031352 <AmiBlitz3.ab2@23358>   BEQ.w JL_0_D82E
0003135C <AmiBlitz3.ab2@23360>   MOVE.w oldqflag,instringon
00031362 <AmiBlitz3.ab2@23361>   MOVEA.l lastsourcepos,A5
00031364 <AmiBlitz3.ab2@23362>   MOVEQ.l #$00,D6
00031368 <AmiBlitz3.ab2@23363>   CMP.w #$2A,D0
0003136C <AmiBlitz3.ab2@23364>   BNE.w JL_0_D670
0003136E <AmiBlitz3.ab2@23365>   MOVEQ.l #$01,D6
00031374 <AmiBlitz3.ab2@23366>   JSR get1bytemain
00031378 <AmiBlitz3.ab2@23367> BRA.w JL_0_D67E
0003137C <AmiBlitz3.ab2@23370>   CMP.w #$40,D0
00031380 <AmiBlitz3.ab2@23371>   BNE.w JL_0_D67E
00031382 <AmiBlitz3.ab2@23372>   MOVEQ.l #$05,D6
00031388 <AmiBlitz3.ab2@23373>   JSR get1bytemain
0003138E <AmiBlitz3.ab2@23376>   MOVE.w D6,flagmask
00031394 <AmiBlitz3.ab2@23377>   JSR getparameter2
00031398 <AmiBlitz3.ab2@23378>   BEQ.w JUMP_syntaxerr
0003139E <AmiBlitz3.ab2@23379>   MOVEA.l thistype,A2
000313A0 <AmiBlitz3.ab2@23380>   ADDQ.w #4,A2
000313A6 <AmiBlitz3.ab2@23381>   JSR findvariable2
000313AA <AmiBlitz3.ab2@23382>   BEQ.w JUMP_dupofferr
000313B0 <AmiBlitz3.ab2@23383>   JSR addlabel
000313B2 <AmiBlitz3.ab2@23384>   MOVE.l A2,-(A7)
000313B6 <AmiBlitz3.ab2@23385>   CMP.w #$2E,D0
000313BA <AmiBlitz3.ab2@23386>    BEQ.w JL_0_D6CE
000313BE <AmiBlitz3.ab2@23387>   CMP.w #$24,D0
000313C2 <AmiBlitz3.ab2@23388>    BNE.w JL_0_D6C0
000313C8 <AmiBlitz3.ab2@23389>   MOVE.l #newtype_string,D2
000313CE <AmiBlitz3.ab2@23390>    JSR get1bytemain
000313D2 <AmiBlitz3.ab2@23391> BRA.w JL_0_D710
000313D8 <AmiBlitz3.ab2@23394> JMP dupofferr
000313DE <AmiBlitz3.ab2@23397>   MOVE.l prevtype,D2
000313E2 <AmiBlitz3.ab2@23398>   BEQ.w JUMP_notypeerr
000313E6 <AmiBlitz3.ab2@23399> BRA.w JL_0_D706
000313EC <AmiBlitz3.ab2@23402> JMP notypeerr
000313F2 <AmiBlitz3.ab2@23405>   JSR getparameter2
000313F6 <AmiBlitz3.ab2@23406>    BEQ.w JUMP_syntaxerr
000313FC <AmiBlitz3.ab2@23407>   LEA newtypebase,A2
00031402 <AmiBlitz3.ab2@23408>    JSR findtype
00031406 <AmiBlitz3.ab2@23409>    BEQ.w JL_0_D704
0003140E <AmiBlitz3.ab2@23410>   BTST #$0,flagmask+1
00031412 <AmiBlitz3.ab2@23411>    BEQ.w JUMP_notypeerr
00031418 <AmiBlitz3.ab2@23412>   JSR addlabel
00031420 <AmiBlitz3.ab2@23415>   MOVE.w linenumat+2,$8(A2)
00031428 <AmiBlitz3.ab2@23416>   MOVE.l #MaxByte,$4(A2)
0003142A <AmiBlitz3.ab2@23419>   MOVE.l A2,D2
00031430 <AmiBlitz3.ab2@23422>   CMP.l #newtype_byte,D2
00031434 <AmiBlitz3.ab2@23423>    BEQ.w JL_0_D71E
0003143A <AmiBlitz3.ab2@23426>   ADDQ.w #1,typelen
00031442 <AmiBlitz3.ab2@23427>   BCLR #$0,typelen+1
00031444 <AmiBlitz3.ab2@23430>   MOVEQ.l #$00,D3
00031446 <AmiBlitz3.ab2@23431>   MOVEA.l D2,A2
0003144C <AmiBlitz3.ab2@23432>   MOVE.l A2,prevtype
00031450 <AmiBlitz3.ab2@23433>   MOVE.w $8(A2),D3
00031452 <AmiBlitz3.ab2@23434>   MOVEA.l (A7)+,A2
00031456 <AmiBlitz3.ab2@23435>   MOVE.l D2,$A(A2)
00031458 <AmiBlitz3.ab2@23436>   MOVEQ.l #$00,D4
0003145E <AmiBlitz3.ab2@23437>   MOVE.w typelen,D4
00031462 <AmiBlitz3.ab2@23438>   MOVE.w D4,$4(A2)
0003146A <AmiBlitz3.ab2@23439>   BTST #$0,flagmask+1
0003146E <AmiBlitz3.ab2@23440>    BEQ.w JL_0_D74C
00031470 <AmiBlitz3.ab2@23441>   MOVEQ.l #$04,D3
00031474 <AmiBlitz3.ab2@23444>   CMP.w #$5B,D0
00031478 <AmiBlitz3.ab2@23445>    BNE.w JL_0_D782
0003147C <AmiBlitz3.ab2@23446>   MOVEM.l D3-D4/A2,-(A7)
00031480 <AmiBlitz3.ab2@23447>    BSR.w AJL_0_BF6E
00031484 <AmiBlitz3.ab2@23448>   CMP.w #$5D,D0
00031488 <AmiBlitz3.ab2@23449>    BNE.w JUMP_syntaxerr
0003148A <AmiBlitz3.ab2@23450>   TST.w D6
0003148E <AmiBlitz3.ab2@23451>    BNE.w JUMP_fpconerr
00031490 <AmiBlitz3.ab2@23452>   MOVE.l D3,D1
00031494 <AmiBlitz3.ab2@23453>   MOVEM.l (A7)+,D3-D4/A2
0003149A <AmiBlitz3.ab2@23454>    JSR get1bytemain
0003149E <AmiBlitz3.ab2@23455>   MOVE.w D1,$8(A2)
000314A2 <AmiBlitz3.ab2@23456>   MULU.l d1,d3                                             ;>32k fix was mulu.w
000314AA <AmiBlitz3.ab2@23457>   ORI.w #$2,flagmask
000314AC <AmiBlitz3.ab2@23460>   ADD.l D3,D4
000314B2 <AmiBlitz3.ab2@23463>     CMP.l #65532,d4
000314B6 <AmiBlitz3.ab2@23468>   BCC JUMP_toolongerr
000314BE <AmiBlitz3.ab2@23469>   MOVE.w flagmask,$6(A2)
000314C4 <AmiBlitz3.ab2@23470>   MOVE.w D4,typelen
000314C6 <AmiBlitz3.ab2@23471> RTS
000314CC <AmiBlitz3.ab2@23474> JMP badenderr
000314D2 <AmiBlitz3.ab2@23477> JMP noiferr
000314D8 <AmiBlitz3.ab2@23480> JMP toolongerr
000314DE <AmiBlitz3.ab2@23483> JMP fpconerr
000314E4 <AmiBlitz3.ab2@23486>   MOVE.l firstiff,D0
000314E8 <AmiBlitz3.ab2@23487>    BEQ.w JUMP_noiferr
000314EA <AmiBlitz3.ab2@23488>   MOVEA.l D0,A0
000314EE <AmiBlitz3.ab2@23489>   MOVE.w $C(A0),D0
000314F2 <AmiBlitz3.ab2@23490>   ANDI.w #$FF,D0
000314F4 <AmiBlitz3.ab2@23491>   CMP.w D0,D1
000314F8 <AmiBlitz3.ab2@23492>    BNE.w JUMP_badenderr
000314FC <AmiBlitz3.ab2@23495>   CMP.w #$1,D1
00031500 <AmiBlitz3.ab2@23496>   BNE.w JL_0_D7D8
00031504 <AmiBlitz3.ab2@23497>   MOVE.w #$6000,D1
0003150A <AmiBlitz3.ab2@23500>     TST.b fast
0003150E <AmiBlitz3.ab2@23501>     BEQ 'l1
00031514 <AmiBlitz3.ab2@23502>     OR.l #$ff,d1
00031518 <AmiBlitz3.ab2@23506>   BSR.w writeword
0003151E <AmiBlitz3.ab2@23507>   MOVEA.l destpointer,A1
00031522 <AmiBlitz3.ab2@23508>   MOVE.l $4(A0),D1
00031524 <AmiBlitz3.ab2@23509>   SUB.l A1,D1
0003152A <AmiBlitz3.ab2@23512>     TST.b fast
0003152E <AmiBlitz3.ab2@23513>     BEQ 'l2
00031532 <AmiBlitz3.ab2@23514>     BSR writelong
00031536 <AmiBlitz3.ab2@23515>   BRA JL_0_D7D8
0003153A <AmiBlitz3.ab2@23519>   BSR.w writeword
0003153E <AmiBlitz3.ab2@23522>   MOVEA.l $8(A0),A1                                        ;write if branch destination
00031544 <AmiBlitz3.ab2@23523>   MOVE.l destpointer,D1
00031546 <AmiBlitz3.ab2@23524>   SUB.l A1,D1
0003154C <AmiBlitz3.ab2@23527>     TST.b fast
00031550 <AmiBlitz3.ab2@23528>     BEQ 'l1
00031552 <AmiBlitz3.ab2@23529>     ADDQ.l #4,D1
00031558 <AmiBlitz3.ab2@23530>     MOVE.w dontwrite,D0
0003155C <AmiBlitz3.ab2@23531>     BNE.w JL_0_D7FE
00031560 <AmiBlitz3.ab2@23532>     MOVE.l d1,-$4(a1)
00031564 <AmiBlitz3.ab2@23533>   BRA JL_0_D7FE
00031566 <AmiBlitz3.ab2@23537>   ADDQ.l #2,d1
0003156C <AmiBlitz3.ab2@23538>   TST.w dontwrite
00031570 <AmiBlitz3.ab2@23539>   BNE JL_0_D7FE
00031576 <AmiBlitz3.ab2@23540>   CMP.l #MinWordSgnd,D1
0003157A <AmiBlitz3.ab2@23541>   BCC.w JUMP_bigiferr
0003157E <AmiBlitz3.ab2@23542>   MOVE.w D1,-$2(A1)
00031580 <AmiBlitz3.ab2@23545> RTS
00031586 <AmiBlitz3.ab2@23548> JMP bigiferr
00031590 <AmiBlitz3.ab2@23553>   MOVE.w oldqflag,instringon
00031596 <AmiBlitz3.ab2@23554>   MOVEA.l lastsourcepos,A5
00031598 <AmiBlitz3.ab2@23557>   MOVEQ.l #$01,D1
0003159C <AmiBlitz3.ab2@23558> BRA.w JL_0_D810
000315A6 <AmiBlitz3.ab2@23562>   MOVE.w oldqflag,instringon
000315AC <AmiBlitz3.ab2@23563>   MOVEA.l lastsourcepos,A5
000315AE <AmiBlitz3.ab2@23566>   MOVEQ.l #$00,D1
000315B2 <AmiBlitz3.ab2@23569>   BSR.w JL_0_D79E
000315B6 <AmiBlitz3.ab2@23570>   BSR.w AJL_0_D81C
000315BC <AmiBlitz3.ab2@23571> JMP get1bytemain
000315C2 <AmiBlitz3.ab2@23574>   MOVE.l (A0),firstiff
000315C4 <AmiBlitz3.ab2@23575>   MOVEA.l A0,A1
000315C6 <AmiBlitz3.ab2@23576>   MOVEQ.l #$0E,D0
000315CC <AmiBlitz3.ab2@23577>   MOVEA.l _execbase,A6
000315D2 <AmiBlitz3.ab2@23578>   MOVE.l mempool,a0
000315D6 <AmiBlitz3.ab2@23579> JMP _FreePooled(A6)
000315DC <AmiBlitz3.ab2@23583>   JSR get1bytemain
000315E0 <AmiBlitz3.ab2@23586>   BEQ.w JL_0_D980
000315E8 <AmiBlitz3.ab2@23587>   CMP.l #"noa7",-1(a5)
000315EC <AmiBlitz3.ab2@23588>   BNE 'l1
000315F2 <AmiBlitz3.ab2@23589>   JSR get1bytemain
000315F8 <AmiBlitz3.ab2@23590>   JSR get1bytemain
000315FE <AmiBlitz3.ab2@23591>   JSR get1bytemain
00031606 <AmiBlitz3.ab2@23592>   MOVE.w #$3a,lastchar
0003160A <AmiBlitz3.ab2@23593> BRA JL_0_D980
00031610 <AmiBlitz3.ab2@23596>   CMP.w #"d0",-1(a5)
00031614 <AmiBlitz3.ab2@23597>   BNE 'l2
0003161C <AmiBlitz3.ab2@23598>   MOVE.b #1,returncode
00031622 <AmiBlitz3.ab2@23599>   CLR.w lastchar
00031626 <AmiBlitz3.ab2@23600> BRA JL_0_D980
0003162A <AmiBlitz3.ab2@23603>   CMP.w #$80d7,d0
0003162E <AmiBlitz3.ab2@23604>   BNE JL_0_D836
00031634 <AmiBlitz3.ab2@23605>   JSR skiprest
00031636 <AmiBlitz3.ab2@23606> RTS
0003163A <AmiBlitz3.ab2@23609>   BSR.w JL_0_D844
00031640 <AmiBlitz3.ab2@23610>   JSR reget
00031644 <AmiBlitz3.ab2@23611>   BNE.w JL_0_D836
00031646 <AmiBlitz3.ab2@23612> RTS
0003164A <AmiBlitz3.ab2@23615>   CMP.w #-$7FFF,D0
0003164E <AmiBlitz3.ab2@23616>    BNE.w JL_0_D87E
00031654 <AmiBlitz3.ab2@23617>   MOVE.w linemode,D1
00031658 <AmiBlitz3.ab2@23618>    BNE.w JUMP_modeerr
0003165E <AmiBlitz3.ab2@23619>   ADDQ.w #1,typelen
00031666 <AmiBlitz3.ab2@23620>   BCLR #$0,typelen+1
0003166C <AmiBlitz3.ab2@23621>   MOVEA.l thistype,A0
00031674 <AmiBlitz3.ab2@23622>   MOVE.w typelen,$8(A0)
0003167C <AmiBlitz3.ab2@23623>   MOVE.w #$FFFF,linemode
00031682 <AmiBlitz3.ab2@23624> JMP get1bytemain
00031688 <AmiBlitz3.ab2@23627> JMP modeerr
0003168C <AmiBlitz3.ab2@23630>   CMP.w #-$7FF5,D0
00031690 <AmiBlitz3.ab2@23631>    BEQ.w JL_0_D80E
00031694 <AmiBlitz3.ab2@23632>   CMP.w #-$7FF4,D0
00031698 <AmiBlitz3.ab2@23633>    BEQ.w JL_0_D804
0003169C <AmiBlitz3.ab2@23634>   CMP.w #-$7FF8,D0
000316A0 <AmiBlitz3.ab2@23635>    BNE.w JL_0_D89A
000316A4 <AmiBlitz3.ab2@23638> BRA.w JL_0_D9E8
000316AA <AmiBlitz3.ab2@23641> JMP interr3
000316AE <AmiBlitz3.ab2@23644>   CMP.w #-$7FF7,D0
000316B2 <AmiBlitz3.ab2@23645>    BNE.w JL_0_D8C8
000316B8 <AmiBlitz3.ab2@23646>    TST.b fpu
000316BC <AmiBlitz3.ab2@23647>    BEQ 'nof
000316C2 <AmiBlitz3.ab2@23648>    MOVEA.l currentfunction,A0
000316C8 <AmiBlitz3.ab2@23649>    CMP.l #0,a0
000316CC <AmiBlitz3.ab2@23650>    BEQ 'nof
000316D2 <AmiBlitz3.ab2@23651>    CMP.b #5,$5(a0)
000316D6 <AmiBlitz3.ab2@23652>     BNE 'nof
000316DC <AmiBlitz3.ab2@23653>    MOVE.l #$f23c5000,d1
000316E0 <AmiBlitz3.ab2@23654>    BSR writelong
000316E4 <AmiBlitz3.ab2@23655>    MOVE.w #0,d1
000316E8 <AmiBlitz3.ab2@23656>    BSR writeword
000316EC <AmiBlitz3.ab2@23659>   MOVE.w #$7000,D1                                         ;end function moveq #0,d0
000316F0 <AmiBlitz3.ab2@23660>    BSR.w writeword
000316F6 <AmiBlitz3.ab2@23661>   MOVEA.l currentfunction,A0
000316FC <AmiBlitz3.ab2@23662>   CMP.l #0,a0
00031700 <AmiBlitz3.ab2@23663>   BEQ JL_0_D896
00031706 <AmiBlitz3.ab2@23664>   MOVE.l destpointer,d1
0003170A <AmiBlitz3.ab2@23665>   SUB.l $e(a0),d1
0003170E <AmiBlitz3.ab2@23666>   MOVE.l d1,isfunc+1(a0)
00031714 <AmiBlitz3.ab2@23667>   CMPI.b #$7,$5(A0)
00031718 <AmiBlitz3.ab2@23668>    BNE.w JL_0_D896
0003171E <AmiBlitz3.ab2@23669>   MOVE.w putstlen,D1
00031722 <AmiBlitz3.ab2@23670>    BSR.w writeword
00031726 <AmiBlitz3.ab2@23671> BRA.w JL_0_D896
0003172C <AmiBlitz3.ab2@23674> JMP interr
00031730 <AmiBlitz3.ab2@23677>  CMP.w #-$7FD0,D0
00031734 <AmiBlitz3.ab2@23678>    BNE.w JL_0_D966
0003173A <AmiBlitz3.ab2@23679>   MOVE.w proceduremode,D1
0003173E <AmiBlitz3.ab2@23680>    BNE.w JUMP_interr3
00031744 <AmiBlitz3.ab2@23681>   TST.b debugmode
00031748 <AmiBlitz3.ab2@23682>    BEQ.w JL_0_D90A
0003174A <AmiBlitz3.ab2@23683>   MOVEQ.l #$03,D1
00031750 <AmiBlitz3.ab2@23684>    JSR writetrap
00031756 <AmiBlitz3.ab2@23685>   MOVE.w dontwrite,D1
0003175A <AmiBlitz3.ab2@23686>    BNE.w JL_0_D90A
00031760 <AmiBlitz3.ab2@23687>   MOVEA.l intcleanat,A0
00031766 <AmiBlitz3.ab2@23688>   MOVE.l destpointer,(A0)
0003176A <AmiBlitz3.ab2@23689>   MOVE.w #$C30C,D1
0003176E <AmiBlitz3.ab2@23690>    BSR.w Atokejsr
00031774 <AmiBlitz3.ab2@23693>   MOVE.w intstring,D1
00031778 <AmiBlitz3.ab2@23694>    BEQ.w JUMP_interr
0003177C <AmiBlitz3.ab2@23695>    BPL.w JL_0_D934
00031782 <AmiBlitz3.ab2@23696>   MOVE.w intlevel,D1
00031786 <AmiBlitz3.ab2@23697>   ORI.w #$7200,D1
0003178A <AmiBlitz3.ab2@23698>    BSR.w writeword
0003178E <AmiBlitz3.ab2@23699>   MOVE.w #$C103,D1
00031792 <AmiBlitz3.ab2@23700>    BSR.w Atokejsr
00031798 <AmiBlitz3.ab2@23701>   CLR.w intlevel
0003179E <AmiBlitz3.ab2@23704>  CLR.w intstring
000317A4 <AmiBlitz3.ab2@23705>   MOVE.l intfin,D1
000317A8 <AmiBlitz3.ab2@23706>    BSR.w writelong
000317AE <AmiBlitz3.ab2@23707>   MOVE.l #$70004E75,D1
000317B2 <AmiBlitz3.ab2@23708>    BSR.w writelong
000317B8 <AmiBlitz3.ab2@23709>   MOVE.w dontwrite,D1
000317BC <AmiBlitz3.ab2@23710>    BNE.w JL_0_D962
000317C2 <AmiBlitz3.ab2@23711>   MOVEA.l intjmpat,A0
000317C6 <AmiBlitz3.ab2@23712>   MOVE.l destpointer(PC),(A0)
000317CC <AmiBlitz3.ab2@23715> JMP get1bytemain
000317D0 <AmiBlitz3.ab2@23719>   CMP.w #-$7FF2,D0
000317D4 <AmiBlitz3.ab2@23720>    BEQ.w doendsel
000317D8 <AmiBlitz3.ab2@23721>   CMP.w #-$7F4C,D0
000317DC <AmiBlitz3.ab2@23722>    BNE.w JL_0_D97C
000317E2 <AmiBlitz3.ab2@23723> JMP doendseterr
000317E8 <AmiBlitz3.ab2@23727> JMP syntaxerr
000317EE <AmiBlitz3.ab2@23731>   TST.w dirmode
000317F2 <AmiBlitz3.ab2@23732>   BNE.w JUMP_baddirerr
000317F6 <AmiBlitz3.ab2@23733>   MOVE.w #$C800,D1
000317FC <AmiBlitz3.ab2@23734>   JSR Atokejsr                                            ;end
00031804 <AmiBlitz3.ab2@23735>   CMP.l #"noa7",-4(a5)
00031808 <AmiBlitz3.ab2@23736>   BNE 'l10
0003180E <AmiBlitz3.ab2@23737>   TST.w dontwrite
00031812 <AmiBlitz3.ab2@23738>   BNE 'l10
00031818 <AmiBlitz3.ab2@23739>   MOVE.l destpointer,d1
0003181A <AmiBlitz3.ab2@23740>   SUBQ.l #4,d1
0003181C <AmiBlitz3.ab2@23741>   MOVE.l a0,-(a7)
0003181E <AmiBlitz3.ab2@23742>   MOVE.l d1,a0
00031820 <AmiBlitz3.ab2@23743>   MOVE.l (a0),a0
00031826 <AmiBlitz3.ab2@23744>   MOVE.l #$60000002,(a0)+
0003182A <AmiBlitz3.ab2@23745>   MOVE.w #$588f,(a0)
0003182C <AmiBlitz3.ab2@23746>   MOVE.l (a7)+,a0
0003182E <AmiBlitz3.ab2@23749> RTS
00031834 <AmiBlitz3.ab2@23753>   TST.w dirmode                                            ;stop
00031838 <AmiBlitz3.ab2@23754>   BNE.w JUMP_baddirerr
0003183A <AmiBlitz3.ab2@23755>   MOVE.w d0,d1
0003183E <AmiBlitz3.ab2@23756>   BEQ 'l10
00031842 <AmiBlitz3.ab2@23757>   CMP.b #$3a,d0
00031846 <AmiBlitz3.ab2@23758>   BEQ 'l10
0003184C <AmiBlitz3.ab2@23759>   JSR get1bytemain
00031852 <AmiBlitz3.ab2@23762>   TST.b debugmode
00031856 <AmiBlitz3.ab2@23763>   BEQ.w newstop
0003185A <AmiBlitz3.ab2@23764>   MOVE.w #$D501,D1
0003185E <AmiBlitz3.ab2@23765> BRA.w Atokejsr
00031860 <AmiBlitz3.ab2@23769>     RTS
00031862 <AmiBlitz3.ab2@23771>   MOVE.w d1,d0
00031866 <AmiBlitz3.ab2@23772>   BEQ 'l10
0003186A <AmiBlitz3.ab2@23773>   CMP.b #$3a,d0
0003186E <AmiBlitz3.ab2@23774>   BEQ 'l10
00031872 <AmiBlitz3.ab2@23775>   SUB.b #$30,d0
00031876 <AmiBlitz3.ab2@23776>   MOVE.w #$4e40,d1
0003187A <AmiBlitz3.ab2@23777> BRA 'l11
0003187E <AmiBlitz3.ab2@23780>   MOVE.w #$4e4a,d1
00031882 <AmiBlitz3.ab2@23781> BRA writeword
00031884 <AmiBlitz3.ab2@23784>   ADD.b d0,d1
00031888 <AmiBlitz3.ab2@23785> BRA writeword
0003188E <AmiBlitz3.ab2@23789> JMP badconterr
00031892 <AmiBlitz3.ab2@23792>   MOVE.w #$4E71,D1
00031896 <AmiBlitz3.ab2@23793> BRA.w writeword
0003189C <AmiBlitz3.ab2@23796>   MOVEA.l firstfor,A2
000318A2 <AmiBlitz3.ab2@23797>   CLR.l firstfor
000318A8 <AmiBlitz3.ab2@23798>   MOVEA.l _execbase,A6
000318AC <AmiBlitz3.ab2@23801>   CMPA.w #$0,A2
000318B0 <AmiBlitz3.ab2@23802>   BEQ.w JL_0_D9E6
000318B2 <AmiBlitz3.ab2@23803>   MOVEA.l A2,A1
000318B4 <AmiBlitz3.ab2@23804>   MOVEA.l (A1),A2
000318B6 <AmiBlitz3.ab2@23805>   MOVEQ.l #$00,D0
000318BC <AmiBlitz3.ab2@23806>   MOVE.l mempool2,a0
000318C0 <AmiBlitz3.ab2@23807>   MOVE.b $10(A1),D0
000318C4 <AmiBlitz3.ab2@23808>   JSR _FreePooled(A6)                                      ;freememfor_error
000318C8 <AmiBlitz3.ab2@23809> BRA.w JL_0_D9CC
000318CA <AmiBlitz3.ab2@23812> RTS
000318D0 <AmiBlitz3.ab2@23816> JMP badpenderr
000318D6 <AmiBlitz3.ab2@23822>   MOVE.w proceduremode,D1
000318DA <AmiBlitz3.ab2@23823>    BEQ.w JUMP_badpenderr
000318E0 <AmiBlitz3.ab2@23825>   MOVE.w dontwrite,D1
000318E4 <AmiBlitz3.ab2@23826>    BNE.w JL_0_DA1A
000318EA <AmiBlitz3.ab2@23827>   MOVEA.l firstpend,A2
000318EE <AmiBlitz3.ab2@23830>   CMPA.w #$0,A2
000318F2 <AmiBlitz3.ab2@23831>    BEQ.w JL_0_DA1A
000318F6 <AmiBlitz3.ab2@23832>   MOVEA.l $4(A2),A0
000318FC <AmiBlitz3.ab2@23833>   MOVE.l destpointer,(A0)
000318FE <AmiBlitz3.ab2@23834>   MOVEA.l (A2),A2
00031902 <AmiBlitz3.ab2@23835> BRA.w JL_0_DA02
00031908 <AmiBlitz3.ab2@23838>   TST.b debugmode
0003190C <AmiBlitz3.ab2@23839>    BEQ.b JL_0_DA2A
0003190E <AmiBlitz3.ab2@23840>   MOVEQ.l #$05,D1
00031914 <AmiBlitz3.ab2@23841>   JSR writetrap
0003191A <AmiBlitz3.ab2@23844>   MOVEA.l firstlocal,A2                                    ;firstlocal
00031920 <AmiBlitz3.ab2@23845>   JSR calcstatic2b                                           ;calcstatic
00031926 <AmiBlitz3.ab2@23846>   MOVEA.l currentfunction,A0
0003192C <AmiBlitz3.ab2@23847>   MOVE.l destpointer,d1
00031930 <AmiBlitz3.ab2@23848>   SUB.l $e(a0),d1
00031934 <AmiBlitz3.ab2@23849>   MOVE.l d1,isfunc+1(a0)                                   ;store function size
00031938 <AmiBlitz3.ab2@23850>   MOVE.w D4,$8(A0)                                         ;set if memalloc need
0003193E <AmiBlitz3.ab2@23851>   MOVE.l D3,locdatast
00031944 <AmiBlitz3.ab2@23852>   MOVEA.l tempvm,A1
0003194A <AmiBlitz3.ab2@23853>  CLR.b infunctioncode
00031950 <AmiBlitz3.ab2@23854>   MOVE.l firstiffstore,d1
00031956 <AmiBlitz3.ab2@23855>   CMP.l firstiff,d1
0003195A <AmiBlitz3.ab2@23856>   BNE JUMP_noenderr
0003195E <AmiBlitz3.ab2@23857>   TST.w $C(A1)                                             ;dim
00031962 <AmiBlitz3.ab2@23858>    BPL.w JL_0_DA64
00031968 <AmiBlitz3.ab2@23859>  BSET #$7,$8(A0)
0003196C <AmiBlitz3.ab2@23860>   MOVE.w #$C005,D1
00031970 <AmiBlitz3.ab2@23861>    BSR.w tokejsr2                                          ;writefreememstatement
00031974 <AmiBlitz3.ab2@23862> BRA.w JL_0_DA6C
0003197A <AmiBlitz3.ab2@23865> JMP noenderr
00031982 <AmiBlitz3.ab2@23868>   MOVE.w memlibstat,$C(A1)
00031988 <AmiBlitz3.ab2@23871>   MOVEA.l currentfunction,A0
0003198C <AmiBlitz3.ab2@23872>   MOVE.l $E(A0),-(A7)
00031994 <AmiBlitz3.ab2@23873>   MOVE.w locvaroff,$6(A0)
0003199A <AmiBlitz3.ab2@23874>   BCLR #$1,$7(A0)
000319A0 <AmiBlitz3.ab2@23875>   BCLR #$0,$7(A0)
000319A6 <AmiBlitz3.ab2@23876>   CMPI.b #$7,$5(A0)
000319AA <AmiBlitz3.ab2@23877>    BNE.w JL_0_DA9E
000319B0 <AmiBlitz3.ab2@23878>   MOVE.w getstlen,D1
000319B4 <AmiBlitz3.ab2@23879>    BSR.w writeword
000319B8 <AmiBlitz3.ab2@23882>   TST.w $6(A0)
000319BC <AmiBlitz3.ab2@23883>    BEQ.w JL_0_DAB8
000319C0 <AmiBlitz3.ab2@23884>   MOVE.w #$FC7B,D1
000319C6 <AmiBlitz3.ab2@23885>    JSR uselib
000319CC <AmiBlitz3.ab2@23886>   MOVE.w unlinka4,D1
000319D0 <AmiBlitz3.ab2@23887>    BSR.w writeword
000319D6 <AmiBlitz3.ab2@23890>   MOVEA.l currentfunction,A0
000319D8 <AmiBlitz3.ab2@23891>   MOVEQ.l #$00,D1
000319DC <AmiBlitz3.ab2@23892>   MOVE.b $4(A0),D1
000319DE <AmiBlitz3.ab2@23893>   LSR.w #4,D1
000319E2 <AmiBlitz3.ab2@23894>    BEQ.w JL_0_DB24
000319E4 <AmiBlitz3.ab2@23896>      LSL.w #1,d1
000319E8 <AmiBlitz3.ab2@23898>   CMP.w #$1,D1
000319EC <AmiBlitz3.ab2@23899>    BNE.w JL_0_DAE0
000319F2 <AmiBlitz3.ab2@23900>   MOVE.w fix1,D1
000319F6 <AmiBlitz3.ab2@23901>    BSR.w writeword
000319FA <AmiBlitz3.ab2@23902> BRA.w JL_0_DB24
000319FC <AmiBlitz3.ab2@23905>   LSL.w #2,D1
000319FE <AmiBlitz3.ab2@23906>   MOVE.w D1,-(A7)
00031A04 <AmiBlitz3.ab2@23907>   MOVE.w D1,moverts+2
00031A0A <AmiBlitz3.ab2@23908>   MOVE.l moverts,D1
00031A10 <AmiBlitz3.ab2@23909>    JSR writelong
00031A12 <AmiBlitz3.ab2@23910>   MOVE.w (A7)+,D1
00031A16 <AmiBlitz3.ab2@23911>   CMP.w #$8,D1
00031A1A <AmiBlitz3.ab2@23912>    BHI.w JL_0_DB14
00031A1E <AmiBlitz3.ab2@23913>   ANDI.w #$7,D1
00031A20 <AmiBlitz3.ab2@23914>   LSL.w #8,D1
00031A22 <AmiBlitz3.ab2@23915>   LSL.w #1,D1
00031A28 <AmiBlitz3.ab2@23916>   OR.w fixq,D1
00031A2E <AmiBlitz3.ab2@23917>    JSR writeword
00031A32 <AmiBlitz3.ab2@23918> BRA.w JL_0_DB24
00031A38 <AmiBlitz3.ab2@23922>    MOVE.w D1,fixstack+2
00031A3E <AmiBlitz3.ab2@23923>   MOVE.l fixstack,D1
00031A44 <AmiBlitz3.ab2@23924>    JSR writelong
00031A48 <AmiBlitz3.ab2@23927>    BSR.w JL_0_D2CA
00031A4C <AmiBlitz3.ab2@23928>    BSR.w JL_0_D4F8
00031A4E <AmiBlitz3.ab2@23929>   MOVEA.l (A7)+,A0
00031A54 <AmiBlitz3.ab2@23930>   MOVE.w dontwrite,D1
00031A58 <AmiBlitz3.ab2@23931>    BNE.w JL_0_DB3E
00031A5E <AmiBlitz3.ab2@23932>   MOVE.l destpointer,-(A0)
00031A64 <AmiBlitz3.ab2@23935>   CLR.w proceduremode
00031A6A <AmiBlitz3.ab2@23936>   CLR.l currentfunction
00031A70 <AmiBlitz3.ab2@23937>   CLR.w procnum
00031A74 <AmiBlitz3.ab2@23938>    BSR.w JL_0_DB5C
00031A7A <AmiBlitz3.ab2@23939>    JSR freepends
00031A80 <AmiBlitz3.ab2@23940> JMP get1bytemain
00031A82 <AmiBlitz3.ab2@23943>   MOVEQ.l #$0C,D0
00031A84 <AmiBlitz3.ab2@23944>   MOVEQ.l #$01,D1
00031A8A <AmiBlitz3.ab2@23945>   MOVEA.l _execbase,A6
00031A90 <AmiBlitz3.ab2@23947>   MOVE.l mempool,a0
00031A94 <AmiBlitz3.ab2@23948>   JSR _AllocPooled(a6)
00031A96 <AmiBlitz3.ab2@23949>   MOVEA.l D0,A0
00031A9C <AmiBlitz3.ab2@23950>   MOVE.l alllocals,(A0)
00031AA2 <AmiBlitz3.ab2@23951>   MOVE.l A0,alllocals
00031AA8 <AmiBlitz3.ab2@23952>   MOVE.l firstlocal,D0
00031AAE <AmiBlitz3.ab2@23953>   CLR.l firstlocal
00031AB2 <AmiBlitz3.ab2@23954>   MOVE.l D0,$4(A0)
00031AB8 <AmiBlitz3.ab2@23955>   MOVE.l firstglob,D1
00031ABE <AmiBlitz3.ab2@23956>   CLR.l firstglob
00031AC2 <AmiBlitz3.ab2@23957>   MOVE.l D1,$8(A0)
00031AC8 <AmiBlitz3.ab2@23958>   TST.b debugmode
00031ACC <AmiBlitz3.ab2@23959>    BEQ.b JL_0_DBB0
00031AD2 <AmiBlitz3.ab2@23960>   TST.w dontwrite
00031AD6 <AmiBlitz3.ab2@23961>    BNE.b JL_0_DBB0
00031ADA <AmiBlitz3.ab2@23962>   MOVEA.l proclocals(PC),A0
00031ADC <AmiBlitz3.ab2@23963>   MOVE.l D0,(A0)+
00031ADE <AmiBlitz3.ab2@23964>   MOVE.l D1,(A0)
00031AE0 <AmiBlitz3.ab2@23967> RTS
00031AE6 <AmiBlitz3.ab2@23970> JMP baddirerr
00031AEC <AmiBlitz3.ab2@23974>   TST.w dirmode
00031AF0 <AmiBlitz3.ab2@23975>    BNE.w JUMP_baddirerr
00031AF6 <AmiBlitz3.ab2@23976>   MOVE.l firstfor,D1
00031AFA <AmiBlitz3.ab2@23977>    BEQ.w JUMP_noforerr
00031B00 <AmiBlitz3.ab2@23978>   JSR reget
00031B04 <AmiBlitz3.ab2@23979>    BEQ.w JL_0_DC18
00031B08 <AmiBlitz3.ab2@23982>   BSR.w getparameter
00031B0C <AmiBlitz3.ab2@23983>   MOVEA.l firstfor(PC),A2
00031B0E <AmiBlitz3.ab2@23984>   MOVEQ.l #$00,D1
00031B12 <AmiBlitz3.ab2@23985>   MOVE.b $10(A2),D1
00031B16 <AmiBlitz3.ab2@23986>   SUBI.w #$12,D1
00031B18 <AmiBlitz3.ab2@23987>   CMP.w D1,D2
00031B1C <AmiBlitz3.ab2@23988>    BNE.w JUMP_noforerr
00031B20 <AmiBlitz3.ab2@23989>   LEA ptr_parameterstore(PC),A0
00031B24 <AmiBlitz3.ab2@23990>   LEA $11(A2),A1
00031B26 <AmiBlitz3.ab2@23991>   SUBQ.w #1,D2
00031B28 <AmiBlitz3.ab2@23994>     CMPM.b (A0)+,(A1)+
00031B2C <AmiBlitz3.ab2@23995>     BNE.w JUMP_noforerr
00031B30 <AmiBlitz3.ab2@23996>   DBF D2,JL_0_DBF0
00031B34 <AmiBlitz3.ab2@23998>    BSR.w JL_0_DC1A
00031B3A <AmiBlitz3.ab2@23999>    JSR reget
00031B3E <AmiBlitz3.ab2@24000>    BEQ.w JL_0_DC16
00031B42 <AmiBlitz3.ab2@24001>   CMP.w #$2C,D0
00031B46 <AmiBlitz3.ab2@24002>    BNE.w JUMP_syntaxerr
00031B4C <AmiBlitz3.ab2@24003>    JSR get1bytemain
00031B50 <AmiBlitz3.ab2@24004> BRA.w JL_0_DBCE
00031B56 <AmiBlitz3.ab2@24007> JMP noforerr
00031B58 <AmiBlitz3.ab2@24010> RTS
00031B5C <AmiBlitz3.ab2@24014>   MOVE.l 8(a7),a2
00031B60 <AmiBlitz3.ab2@24015>   Dc.l  $f2124400                                          ;fmove.s (a2),fp0
00031B64 <AmiBlitz3.ab2@24016>   Dc.l  $F2174422                                          ;fadd.s (a7),fp0
00031B68 <AmiBlitz3.ab2@24017>   Dc.l  $F2126400                                          ;fmove.s fp0,(a2)
00031B6A <AmiBlitz3.ab2@24021>   MOVEA.l D1,A2
00031B70 <AmiBlitz3.ab2@24024>   JSR popnext                                           ;error checking for next.
00031B74 <AmiBlitz3.ab2@24025>   MOVE.w $C(A2),D0
00031B7A <AmiBlitz3.ab2@24026>   LEA nextb,A0
00031B80 <AmiBlitz3.ab2@24027>   LEA nextbf,A1
00031B84 <AmiBlitz3.ab2@24028>   CMP.w #$1,D0
00031B88 <AmiBlitz3.ab2@24029>    BEQ.w JL_0_DC74
00031B8E <AmiBlitz3.ab2@24030>   LEA nextw,A0
00031B94 <AmiBlitz3.ab2@24031>   LEA nextwf,A1
00031B98 <AmiBlitz3.ab2@24032>   CMP.w #$2,D0
00031B9C <AmiBlitz3.ab2@24033>    BEQ.w JL_0_DC74
00031BA2 <AmiBlitz3.ab2@24034>   LEA nextl,A0
00031BA8 <AmiBlitz3.ab2@24035>   LEA nextlf,A1
00031BAC <AmiBlitz3.ab2@24036>   CMP.w #$5,D0
00031BB0 <AmiBlitz3.ab2@24037>    BNE.w JL_0_DC74
00031BB6 <AmiBlitz3.ab2@24038>    TST.b fpu
00031BBA <AmiBlitz3.ab2@24039>    BEQ 'old
00031BC0 <AmiBlitz3.ab2@24040>    LEA fpu2dats,a0                                         ;fpu next code
00031BC6 <AmiBlitz3.ab2@24041>    LEA fpu2date,a1
00031BCA <AmiBlitz3.ab2@24042> BRA JL_0_DC74
00031BCE <AmiBlitz3.ab2@24045>   MOVE.w #$C900,D1
00031BD2 <AmiBlitz3.ab2@24046>    BSR.w Atokejsr
00031BD8 <AmiBlitz3.ab2@24047>   LEA nextf,A0
00031BDE <AmiBlitz3.ab2@24048>   LEA nextff,A1
00031BE4 <AmiBlitz3.ab2@24051>   JSR pokecode
00031BEA <AmiBlitz3.ab2@24052>     TST.b fast                                             ;fast for next deactivate
00031BEE <AmiBlitz3.ab2@24053> BRA 'l1
00031BF4 <AmiBlitz3.ab2@24055>     TST.b onestep
00031BF8 <AmiBlitz3.ab2@24056>     BEQ 'l1
00031BFE <AmiBlitz3.ab2@24057>     CLR.b onestep
00031C04 <AmiBlitz3.ab2@24058>     SUBQ.l #4,destpointer
00031C08 <AmiBlitz3.ab2@24059>     MOVE.w #$5292,d1
00031C0E <AmiBlitz3.ab2@24060>     JSR writeword
00031C12 <AmiBlitz3.ab2@24063>   MOVE.l JL_0_DCF4(PC),D1
00031C18 <AmiBlitz3.ab2@24064>    JSR writelong
00031C1E <AmiBlitz3.ab2@24065>   MOVEA.l firstfor,A2
00031C24 <AmiBlitz3.ab2@24066>   MOVE.l (A2),firstfor
00031C28 <AmiBlitz3.ab2@24067>   MOVEA.l $8(A2),A0
00031C2E <AmiBlitz3.ab2@24068>   MOVEA.l destpointer,A1
00031C30 <AmiBlitz3.ab2@24069>   MOVE.l A1,D1
00031C32 <AmiBlitz3.ab2@24070>   SUB.l A0,D1
00031C34 <AmiBlitz3.ab2@24071>   ADDQ.l #2,D1
00031C3A <AmiBlitz3.ab2@24072>   CMP.l #MinWordSgnd,D1
00031C3E <AmiBlitz3.ab2@24073>    BCC.w JUMP_bigforerr
00031C44 <AmiBlitz3.ab2@24074>   TST.w dontwrite
00031C48 <AmiBlitz3.ab2@24075>    BNE.w JL_0_DCB4
00031C4C <AmiBlitz3.ab2@24076>   MOVE.w D1,-$2(A0)
00031C4E <AmiBlitz3.ab2@24079>   MOVE.l A1,D1
00031C52 <AmiBlitz3.ab2@24080>   SUB.l $4(A2),D1
00031C54 <AmiBlitz3.ab2@24081>   SUBQ.l #6,D1
00031C5A <AmiBlitz3.ab2@24082>   CMP.l #MinWordSgnd,D1
00031C5E <AmiBlitz3.ab2@24083>    BCC.w JUMP_bigforerr
00031C64 <AmiBlitz3.ab2@24084>   TST.w dontwrite
00031C68 <AmiBlitz3.ab2@24085>    BNE.w JL_0_DCD6
00031C6A <AmiBlitz3.ab2@24086>   NEG.w D1
00031C6E <AmiBlitz3.ab2@24087>   MOVE.w D1,-$2(A1)
00031C74 <AmiBlitz3.ab2@24090>   JSR popnext3
00031C7A <AmiBlitz3.ab2@24091>   MOVEA.l _execbase,A6
00031C7C <AmiBlitz3.ab2@24092>   MOVEA.l A2,A1
00031C7E <AmiBlitz3.ab2@24093>   MOVEQ.l #$00,D0
00031C82 <AmiBlitz3.ab2@24094>   MOVE.b $10(A1),D0
00031C88 <AmiBlitz3.ab2@24095>   MOVE.l mempool2,a0
00031C8C <AmiBlitz3.ab2@24096>   JSR _FreePooled(A6)
00031C92 <AmiBlitz3.ab2@24097> JMP reget
00031C98 <AmiBlitz3.ab2@24100> JMP notallowd
00031C9E <AmiBlitz3.ab2@24103> JMP bigforerr
00031CA2 <AmiBlitz3.ab2@24110>   MOVE.w #$664F,-(A7)
00031CA6 <AmiBlitz3.ab2@24113> BRA.w JL_0_DCF4
00031CAC <AmiBlitz3.ab2@24116> JMP error_dublicate_for
00031CB0 <AmiBlitz3.ab2@24119> forlineat:   Ds.l 1
00031CB2 <AmiBlitz3.ab2@24120> fortemp:     Ds.w 1
00031CB8 <AmiBlitz3.ab2@24127>   CLR.l fp0addr
00031CBE <AmiBlitz3.ab2@24128>   TST.w dirmode
00031CC2 <AmiBlitz3.ab2@24129>    BNE.w JUMP_baddirerr
00031CCC <AmiBlitz3.ab2@24130>   MOVE.l linenumat,forlineat
00031CD2 <AmiBlitz3.ab2@24134>   MOVE.l A5,letstart
00031CD6 <AmiBlitz3.ab2@24135>   BSR.w getparameter
00031CDC <AmiBlitz3.ab2@24136>   MOVE.w D2,fortemp
00031CE2 <AmiBlitz3.ab2@24137>   JSR findfor
00031CE6 <AmiBlitz3.ab2@24138>    BEQ.w JUMP_error_dublicate_for
00031CEC <AmiBlitz3.ab2@24139>   LEA firstfor,A2
00031CF2 <AmiBlitz3.ab2@24140>   JSR addhere2
00031CF4 <AmiBlitz3.ab2@24141>   MOVE.l A2,-(A7)
00031CFA <AmiBlitz3.ab2@24142>   TST.b debugmode
00031CFE <AmiBlitz3.ab2@24143>    BEQ.b JL_0_DD4C
00031D04 <AmiBlitz3.ab2@24144>   JSR chkstak
00031D0A <AmiBlitz3.ab2@24145>   MOVE.l AJL_0_DCF0,D1
00031D10 <AmiBlitz3.ab2@24146>   JSR  writelong
00031D14 <AmiBlitz3.ab2@24149>   MOVE.w fortemp(PC),D2
00031D1C <AmiBlitz3.ab2@24150>   MOVE.b #1,formode
00031D20 <AmiBlitz3.ab2@24151>   BSR.w AJL_0_DEA6                                         ;for get 1. value
00031D26 <AmiBlitz3.ab2@24152>   CLR.b formode
00031D2A <AmiBlitz3.ab2@24153>   CMP.w #-$7FE8,D0
00031D2E <AmiBlitz3.ab2@24154>    BNE.w JUMP_syntaxerr
00031D34 <AmiBlitz3.ab2@24155>   MOVE.w commode,D1
00031D38 <AmiBlitz3.ab2@24156>    BNE.w JUMP_syntaxerr
00031D3C <AmiBlitz3.ab2@24157>   CMP.b #$6,D2
00031D40 <AmiBlitz3.ab2@24158>    BCC.w JUMP_badforerr
00031D44 <AmiBlitz3.ab2@24159>   BTST #$F,D2
00031D48 <AmiBlitz3.ab2@24160>    BNE.w JL_0_DD86
00031D4E <AmiBlitz3.ab2@24161>   MOVE.w leaamp,D1
00031D54 <AmiBlitz3.ab2@24162>   JSR pokewda5s
00031D56 <AmiBlitz3.ab2@24163>   MOVE.w D3,D1
00031D5C <AmiBlitz3.ab2@24164>   JSR  writeword
00031D62 <AmiBlitz3.ab2@24167>   MOVE.w pushindex,D1
00031D68 <AmiBlitz3.ab2@24168>   JSR  writeword
00031D6C <AmiBlitz3.ab2@24169>   ANDI.w #$FF,D2
00031D6E <AmiBlitz3.ab2@24171>   MOVEA.l (A7),A1
00031D72 <AmiBlitz3.ab2@24172>   MOVE.w D2,$C(A1)
00031D74 <AmiBlitz3.ab2@24173>   MOVE.w D2,-(A7)
00031D78 <AmiBlitz3.ab2@24174>    BSR.w eval
00031D7E <AmiBlitz3.ab2@24175>    CLR.b onestep
00031D82 <AmiBlitz3.ab2@24176>    CMP.w #$8019,d0
00031D86 <AmiBlitz3.ab2@24177>    BEQ 'l1
00031D8E <AmiBlitz3.ab2@24178>    MOVE.b #1,onestep
00031D90 <AmiBlitz3.ab2@24181>   MOVE.w (A7),D2
00031D96 <AmiBlitz3.ab2@24182>   MOVE.w pushd0l,D1
00031D9A <AmiBlitz3.ab2@24183>   CMP.w #$3,D2
00031D9E <AmiBlitz3.ab2@24184>    BCC.w JL_0_DDB6
00031DA4 <AmiBlitz3.ab2@24185>   MOVE.w pushd0wd,D1
00031DA6 <AmiBlitz3.ab2@24188>    MOVE.w D1,-(A7)
00031DAC <AmiBlitz3.ab2@24189>    TST.b fpu
00031DB0 <AmiBlitz3.ab2@24190>    BEQ 'old
00031DB4 <AmiBlitz3.ab2@24191>    CMP.b #5,d2
00031DB8 <AmiBlitz3.ab2@24192>    BNE 'old
00031DBE <AmiBlitz3.ab2@24193>    MOVE.l #$f2276400,d1
00031DC4 <AmiBlitz3.ab2@24195>    JSR writelong
00031DC8 <AmiBlitz3.ab2@24196> BRA 'weit
00031DCE <AmiBlitz3.ab2@24199>    JSR  writeword                                          ;fpu for end value
00031DD2 <AmiBlitz3.ab2@24202>   CMP.w #-$7FE7,D0
00031DD6 <AmiBlitz3.ab2@24203>    BNE.w JL_0_DDCC
00031DDA <AmiBlitz3.ab2@24204>    BSR.w eval
00031DE0 <AmiBlitz3.ab2@24205>    TST.b fpu
00031DE4 <AmiBlitz3.ab2@24206>    BEQ JL_0_DE0C
00031DE8 <AmiBlitz3.ab2@24207>    CMP.b #5,d2
00031DEC <AmiBlitz3.ab2@24208>    BNE JL_0_DE0C
00031DF2 <AmiBlitz3.ab2@24209>    MOVE.l #$f2276400,d1                                    ;write step <> 1
00031DF8 <AmiBlitz3.ab2@24211>   JSR writelong
00031DFA <AmiBlitz3.ab2@24214>    MOVE.w (a7)+,d1
00031DFE <AmiBlitz3.ab2@24215> BRA fpur
00031E02 <AmiBlitz3.ab2@24218>   CMP.w #$4,D2
00031E06 <AmiBlitz3.ab2@24219>    BCC.w JL_0_DDE0
00031E0A <AmiBlitz3.ab2@24220>   MOVE.w #$7001,D1
00031E10 <AmiBlitz3.ab2@24221>   JSR writeword
00031E14 <AmiBlitz3.ab2@24222> BRA.w JL_0_DE0C
00031E1A <AmiBlitz3.ab2@24225> JMP badforerr
00031E1E <AmiBlitz3.ab2@24228>   BNE.w JL_0_DDFA
00031E22 <AmiBlitz3.ab2@24229>   MOVE.w #$7001,D1
00031E28 <AmiBlitz3.ab2@24230>   JSR writeword
00031E2E <AmiBlitz3.ab2@24231>   MOVE.w swapd0,D1
00031E34 <AmiBlitz3.ab2@24232>   JSR writeword
00031E38 <AmiBlitz3.ab2@24233> BRA.w JL_0_DE0C
00031E3E <AmiBlitz3.ab2@24236>   TST.b fpu
00031E42 <AmiBlitz3.ab2@24237>    BEQ 'old
00031E46 <AmiBlitz3.ab2@24238>   CMP.b #5,d2
00031E4A <AmiBlitz3.ab2@24239>    BNE 'old
00031E50 <AmiBlitz3.ab2@24240>   MOVE.l #$f23c5000,d1
00031E56 <AmiBlitz3.ab2@24241>   JSR writelong
00031E5A <AmiBlitz3.ab2@24242>   MOVE.w #$1,d1
00031E60 <AmiBlitz3.ab2@24243>   JSR writeword
00031E66 <AmiBlitz3.ab2@24244>   MOVE.l #$f2276400,d1
00031E6C <AmiBlitz3.ab2@24245>   JSR writelong
00031E6E <AmiBlitz3.ab2@24246>   MOVE.w (a7)+,d1
00031E72 <AmiBlitz3.ab2@24247> BRA fpur
00031E76 <AmiBlitz3.ab2@24250>   MOVE.w #$203C,D1                                         ;write step 1
00031E7C <AmiBlitz3.ab2@24251>   JSR writeword
00031E82 <AmiBlitz3.ab2@24252>   MOVE.l #SA_BackFill,D1                                   ;#$80000041,d1 org source  ;ffp '1'
00031E88 <AmiBlitz3.ab2@24253>   JSR writelong
00031E8A <AmiBlitz3.ab2@24256>   MOVE.w (A7)+,D1
00031E90 <AmiBlitz3.ab2@24257>   JSR writeword                                            ;push step on stack
00031E92 <AmiBlitz3.ab2@24260>   MOVE.w (A7)+,D2
00031E94 <AmiBlitz3.ab2@24261>   MOVEA.l (A7),A1
00031E9C <AmiBlitz3.ab2@24262>   MOVE.l destpointer,$4(A1)
00031EA2 <AmiBlitz3.ab2@24263>   LEA forcompb,A0
00031EA8 <AmiBlitz3.ab2@24264>   LEA forcompbf,A1
00031EAC <AmiBlitz3.ab2@24265>   CMP.w #$1,D2
00031EB0 <AmiBlitz3.ab2@24266>    BEQ.w JL_0_DE7E
00031EB6 <AmiBlitz3.ab2@24267>   LEA forcompw,A0
00031EBC <AmiBlitz3.ab2@24268>   LEA forcompwf,A1
00031EC0 <AmiBlitz3.ab2@24269>   CMP.w #$2,D2
00031EC4 <AmiBlitz3.ab2@24270>    BEQ.w JL_0_DE7E
00031ECA <AmiBlitz3.ab2@24271>   LEA forcompl,A0
00031ED0 <AmiBlitz3.ab2@24272>   LEA forcomplf,A1
00031ED4 <AmiBlitz3.ab2@24273>   CMP.w #$5,D2
00031ED8 <AmiBlitz3.ab2@24274>    BNE.w JL_0_DE7E
00031EDE <AmiBlitz3.ab2@24275>   TST.b fpu
00031EE2 <AmiBlitz3.ab2@24276>    BEQ 'old
00031EE8 <AmiBlitz3.ab2@24277>   LEA fpu_start,a0
00031EEE <AmiBlitz3.ab2@24278>   LEA fpu_end,a1
00031EF4 <AmiBlitz3.ab2@24279>   JSR pokecode
00031EF8 <AmiBlitz3.ab2@24280> BRA fpu3
00031EFE <AmiBlitz3.ab2@24283>   LEA forcompf,A0                                         ;
00031F04 <AmiBlitz3.ab2@24284>   LEA forcompff,A1
00031F0A <AmiBlitz3.ab2@24285>   JSR pokecode
00031F0E <AmiBlitz3.ab2@24286>   MOVE.w #$C900,D1
00031F12 <AmiBlitz3.ab2@24287>   BSR.w Atokejsr
00031F18 <AmiBlitz3.ab2@24288>   LEA forcompf2,A0
00031F1E <AmiBlitz3.ab2@24289>   LEA forcompf2f,A1
00031F24 <AmiBlitz3.ab2@24292>   JSR pokecode
00031F2A <AmiBlitz3.ab2@24293>   TST.b fast                                               ;fast for next
00031F2E <AmiBlitz3.ab2@24294>    BEQ 's1
00031F32 <AmiBlitz3.ab2@24295>   CMP.w #3,d2
00031F36 <AmiBlitz3.ab2@24296>    BNE 's1
00031F3C <AmiBlitz3.ab2@24297>   TST.b onestep
00031F40 <AmiBlitz3.ab2@24298>    BEQ 's1
00031F4A <AmiBlitz3.ab2@24299>   SUB.l #10,destpointer
00031F4E <AmiBlitz3.ab2@24300>   MOVE.w #$b081,d1
00031F54 <AmiBlitz3.ab2@24301>   JSR writeword
00031F58 <AmiBlitz3.ab2@24305>   MOVE.l thebgt(PC),D1
00031F5E <AmiBlitz3.ab2@24306>   JSR writelong
00031F60 <AmiBlitz3.ab2@24309>   MOVEA.l (A7)+,A1
00031F68 <AmiBlitz3.ab2@24310>   MOVE.l destpointer,$8(A1)
00031F6E <AmiBlitz3.ab2@24311> JMP reget
00031F72 <AmiBlitz3.ab2@24314>   MOVEA.l 8(a7),a2
00031F76 <AmiBlitz3.ab2@24315>   Dc.l $f2124400                                           ;fmove.s (a2),fp0
00031F7C <AmiBlitz3.ab2@24316>   fmove.s 4(a7),fp1
00031F80 <AmiBlitz3.ab2@24317>   BTST.b #7,(a7)
00031F84 <AmiBlitz3.ab2@24318>   BNE 'negi
00031F88 <AmiBlitz3.ab2@24319>   fcmp.x fp1,fp0
00031F8C <AmiBlitz3.ab2@24320> BRA 'negi2
00031F90 <AmiBlitz3.ab2@24323>   fcmp.x fp0,fp1
00031F94 <AmiBlitz3.ab2@24326>   Dc.l $f2920000                                           ;fbgt.w
00031F98 <AmiBlitz3.ab2@24330>   BGT.w thebgt
00031F9E <AmiBlitz3.ab2@24333>   MOVE.l A5,letstart
00031FA2 <AmiBlitz3.ab2@24334>   BSR.w getparameter
00031FAC <AmiBlitz3.ab2@24340>   MOVE.l destpointer,pushpc
00031FB6 <AmiBlitz3.ab2@24341>   MOVE.l hunkoffsetbase,pushoff
00031FBC <AmiBlitz3.ab2@24342>   CLR.l rightsidetype
00031FC4 <AmiBlitz3.ab2@24343>   MOVE.w #$0001,regnum
00031FCA <AmiBlitz3.ab2@24344>   JSR JL_0_8E3C
00031FD0 <AmiBlitz3.ab2@24345>   JSR calcvar
00031FD6 <AmiBlitz3.ab2@24346>   TST.b formode
00031FDA <AmiBlitz3.ab2@24347>   BEQ 'lf1
00031FE0 <AmiBlitz3.ab2@24348>   CMP.l #newtype_double,A2
00031FE4 <AmiBlitz3.ab2@24349>   BEQ JUMP_notallowd
00031FEA <AmiBlitz3.ab2@24350>   MOVE.l a2,currtype
00031FF0 <AmiBlitz3.ab2@24353>   CLR.w startoffsetmore
00031FF4 <AmiBlitz3.ab2@24354>   CMP.w #$3d,d0
00031FF8 <AmiBlitz3.ab2@24355>   BNE 'l1a
00031FFC <AmiBlitz3.ab2@24356>   BTST #15,d2
00032000 <AmiBlitz3.ab2@24357>   BEQ 'l1a
00032004 <AmiBlitz3.ab2@24358>   CMP.b #1,d2
00032008 <AmiBlitz3.ab2@24359>   BNE 'l1a
00032012 <AmiBlitz3.ab2@24360>   MOVE.w leaa0a0+2,startoffsetmore
00032018 <AmiBlitz3.ab2@24363>   CLR.w regnum
0003201C <AmiBlitz3.ab2@24364>   BSR.w JL_0_B5D2
00032022 <AmiBlitz3.ab2@24365>   CLR.w commode
00032028 <AmiBlitz3.ab2@24366>   CLR.w stackcorrect
0003202E <AmiBlitz3.ab2@24367>   CLR.w pcodd
00032034 <AmiBlitz3.ab2@24368>   MOVE.w startoffsetmore,d1
00032038 <AmiBlitz3.ab2@24369>   BTST #0,d1
0003203C <AmiBlitz3.ab2@24370>   BEQ 'l2a
00032044 <AmiBlitz3.ab2@24371>   MOVE.w #1,pcodd
00032048 <AmiBlitz3.ab2@24374>   CMP.w #$3D,D0                                            ;=
0003204C <AmiBlitz3.ab2@24375>   BEQ.w JL_0_DEE0
0003204E <AmiBlitz3.ab2@24378>   MOVE.b (a5)+,d1
00032052 <AmiBlitz3.ab2@24379>   BEQ 'l10
00032056 <AmiBlitz3.ab2@24380>   CMP.b #":",d1
0003205A <AmiBlitz3.ab2@24381>   BEQ 'l10
0003205E <AmiBlitz3.ab2@24382>   CMP.b #";",d1
00032062 <AmiBlitz3.ab2@24383>   BEQ 'l10
00032066 <AmiBlitz3.ab2@24384>   CMP.b #"0",d1
0003206A <AmiBlitz3.ab2@24385>   BLT 'l11
0003206E <AmiBlitz3.ab2@24386>   CMP.b #"9",d1
00032072 <AmiBlitz3.ab2@24387>   BGT 'l11
00032076 <AmiBlitz3.ab2@24388> BRA.s 'l1
0003207E <AmiBlitz3.ab2@24391>   MOVE.b #1,quickadd
00032084 <AmiBlitz3.ab2@24394>   MOVEA.l letstart,A5
00032086 <AmiBlitz3.ab2@24395>   SUBQ.w #1,A5
0003208A <AmiBlitz3.ab2@24398>   CMP.b #$7,D2
0003208E <AmiBlitz3.ab2@24399>    BNE.w JL_0_DF8A
00032092 <AmiBlitz3.ab2@24405>   MOVEM.w D2-D3,-(A7)
00032098 <AmiBlitz3.ab2@24406>   MOVE.l lastoffset_org,-(A7)
0003209E <AmiBlitz3.ab2@24407>   MOVE.w varmode,-(A7)
000320A8 <AmiBlitz3.ab2@24409>    MOVE.l #forthstack,forthsp
000320B2 <AmiBlitz3.ab2@24410>    MOVE.l #precstack,precsp
000320B8 <AmiBlitz3.ab2@24411>    CLR.w regnum
000320BE <AmiBlitz3.ab2@24412>    CLR.w nonew
000320C4 <AmiBlitz3.ab2@24413>    CLR.w sbasegot
000320CE <AmiBlitz3.ab2@24414>    MOVE.w varcodelen,oldvcodelen
000320D4 <AmiBlitz3.ab2@24415>    CLR.w varcodelen
000320DC <AmiBlitz3.ab2@24416>    MOVE.w #$FFFF,lasta6
000320DE <AmiBlitz3.ab2@24419>   MOVEQ.l #$07,D2
000320E2 <AmiBlitz3.ab2@24420>    BSR.w eval
000320E8 <AmiBlitz3.ab2@24421>   MOVE.w (A7)+,varmode
000320EE <AmiBlitz3.ab2@24422>   MOVE.l (A7)+,lastoffset_org
000320F4 <AmiBlitz3.ab2@24423>   MOVE.w moved0a3,D1
000320FA <AmiBlitz3.ab2@24424>    JSR writeword
00032100 <AmiBlitz3.ab2@24425>   MOVE.w commode,D1
00032104 <AmiBlitz3.ab2@24426>    BEQ.w JL_0_DF38
0003210A <AmiBlitz3.ab2@24427>   LEA pulla2st,A0
00032110 <AmiBlitz3.ab2@24428>   LEA pulla2stf,A1
00032116 <AmiBlitz3.ab2@24429>    JSR pokecode
0003211A <AmiBlitz3.ab2@24430> BRA.w JL_0_DF3C
0003211E <AmiBlitz3.ab2@24433>   BSR.w JL_0_B63C
00032122 <AmiBlitz3.ab2@24436>   MOVEM.w (A7)+,D2-D3
00032126 <AmiBlitz3.ab2@24437>   BTST #$F,D2
0003212A <AmiBlitz3.ab2@24438>   BNE.w JL_0_DF58
00032130 <AmiBlitz3.ab2@24439>     MOVE.w D3,leaa5d3a2+2
00032136 <AmiBlitz3.ab2@24440>     MOVE.l leaa5d3a2,D1
0003213C <AmiBlitz3.ab2@24441>     JSR pokela5s
00032140 <AmiBlitz3.ab2@24444>   MOVE.w #$FE6F,D1
00032146 <AmiBlitz3.ab2@24445>   JSR uselib
0003214C <AmiBlitz3.ab2@24446>   MOVE.l #$C700,D1
00032152 <AmiBlitz3.ab2@24447>   MOVE.l d1,lastinstruction
00032158 <AmiBlitz3.ab2@24448>   MOVE.w varmode,D2
0003215C <AmiBlitz3.ab2@24449>   BNE.w JL_0_DF70
0003215E <AmiBlitz3.ab2@24450>     ADDQ.w #1,D1
00032162 <AmiBlitz3.ab2@24453>   BSR.w Atokejsr
00032166 <AmiBlitz3.ab2@24454>   CMP.w #$2C,D0
0003216A <AmiBlitz3.ab2@24455>   BNE.w JL_0_E0C6
00032170 <AmiBlitz3.ab2@24457>   MOVE.w addq4a2,D1
00032176 <AmiBlitz3.ab2@24458>   JSR writeword
0003217A <AmiBlitz3.ab2@24459> BRA.w JL_0_E018
00032180 <AmiBlitz3.ab2@24462> JMP error4char
00032186 <AmiBlitz3.ab2@24465> JMP error_convert_types
0003218A <AmiBlitz3.ab2@24469>    BTST #$E,D2
0003218E <AmiBlitz3.ab2@24470>    BNE.w JL_0_DF9C
00032190 <AmiBlitz3.ab2@24471>   TST.b D2
00032194 <AmiBlitz3.ab2@24472>    BEQ.w JUMP_noleterr
0003219A <AmiBlitz3.ab2@24473>    TST.b newsyntax
0003219E <AmiBlitz3.ab2@24474>    BEQ JL_0_DFA0
000321A2 <AmiBlitz3.ab2@24477>    CMP.w #$4022,(a5)
000321A6 <AmiBlitz3.ab2@24478>    BNE JL_0_DFA0
000321AC <AmiBlitz3.ab2@24479>    CMP.l #3,d2
000321B0 <AmiBlitz3.ab2@24480>    BNE  JUMP_error_convert_types
000321B2 <AmiBlitz3.ab2@24481>    ADDQ #2,a5
000321B4 <AmiBlitz3.ab2@24482>    MOVEQ #0,d0
000321B6 <AmiBlitz3.ab2@24483>    MOVE.b (a5)+,d0
000321BA <AmiBlitz3.ab2@24484>    BEQ JL_0_DFA0
000321BE <AmiBlitz3.ab2@24485>    CMP.b #$22,d0
000321C2 <AmiBlitz3.ab2@24486>    BNE 'l1
000321C6 <AmiBlitz3.ab2@24487>    MOVE.b #0,d0
000321CA <AmiBlitz3.ab2@24488> BRA 'do
000321CC <AmiBlitz3.ab2@24491>   ASL.l #8,d0
000321CE <AmiBlitz3.ab2@24492>    MOVE.b (a5)+,d0
000321D2 <AmiBlitz3.ab2@24493>    BEQ JL_0_DFA0
000321D6 <AmiBlitz3.ab2@24494>    CMP.b #$22,d0
000321DA <AmiBlitz3.ab2@24495>    BNE 'l2
000321DE <AmiBlitz3.ab2@24496>    MOVE.b #0,d0
000321E0 <AmiBlitz3.ab2@24497>    ASR.l #8,d0
000321E4 <AmiBlitz3.ab2@24498> BRA 'do
000321E6 <AmiBlitz3.ab2@24501>   ASL.l #8,d0
000321E8 <AmiBlitz3.ab2@24502>     MOVE.b (a5)+,d0
000321EC <AmiBlitz3.ab2@24503>    BEQ JL_0_DFA0
000321F0 <AmiBlitz3.ab2@24504>    CMP.b #$22,d0
000321F4 <AmiBlitz3.ab2@24505>    BNE 'l3
000321F8 <AmiBlitz3.ab2@24506>    MOVE.b #0,d0
000321FA <AmiBlitz3.ab2@24507>    ASR.l #8,d0
000321FE <AmiBlitz3.ab2@24508> BRA 'do
00032200 <AmiBlitz3.ab2@24511>   ASL.l #8,d0
00032202 <AmiBlitz3.ab2@24512>     MOVE.b (a5)+,d0
00032206 <AmiBlitz3.ab2@24513>    BEQ JL_0_DFA0
0003220A <AmiBlitz3.ab2@24514>    CMP.b #$22,d0
0003220E <AmiBlitz3.ab2@24515>    BNE 'l4
00032212 <AmiBlitz3.ab2@24516>    MOVE.b #0,d0
00032214 <AmiBlitz3.ab2@24517>    ASR.l #8,d0
00032218 <AmiBlitz3.ab2@24518> BRA 'do
0003221C <AmiBlitz3.ab2@24521>    CMP.b #$22,(a5)+
00032220 <AmiBlitz3.ab2@24522>    BNE JUMP_error4char
00032224 <AmiBlitz3.ab2@24525>   MOVE.w #$2b7c,d1
0003222A <AmiBlitz3.ab2@24526>    TST.w varmode
0003222E <AmiBlitz3.ab2@24527>    BEQ 'g3
00032232 <AmiBlitz3.ab2@24528>    BCLR #9,d1
00032238 <AmiBlitz3.ab2@24531>     JSR writeword
0003223A <AmiBlitz3.ab2@24532>     MOVE.l d0,d1
00032240 <AmiBlitz3.ab2@24533>     JSR writelong
00032242 <AmiBlitz3.ab2@24534>     MOVE.w d3,d1
00032248 <AmiBlitz3.ab2@24535>     JSR writeword
0003224E <AmiBlitz3.ab2@24536>     JSR get1bytemain
00032250 <AmiBlitz3.ab2@24537> RTS
00032256 <AmiBlitz3.ab2@24543> JMP noleterr
0003225C <AmiBlitz3.ab2@24547>   MOVE.w d2,vartype
00032260 <AmiBlitz3.ab2@24548>   MOVE.b #$3,D2
00032264 <AmiBlitz3.ab2@24551>   CMP.b #5,d2
00032268 <AmiBlitz3.ab2@24552>   BNE 'l1
0003226E <AmiBlitz3.ab2@24553>   MOVE.l a2,currtype
00032272 <AmiBlitz3.ab2@24557>   MOVEM.w D2-D3,-(A7)
00032278 <AmiBlitz3.ab2@24558>   MOVE.w varmode,-(A7)
0003227E <AmiBlitz3.ab2@24559>   MOVE.l a2,leftsidetype
00032282 <AmiBlitz3.ab2@24560>   BTST #$f,d2
00032286 <AmiBlitz3.ab2@24561>   BEQ 'nomultiassign
0003228C <AmiBlitz3.ab2@24562>   CLR.l leftsidetype                        ;its multiassign to type entries so no typecheck need
00032290 <AmiBlitz3.ab2@24563> 'nomultiassign  ANDI.w #$FF,D2
00032296 <AmiBlitz3.ab2@24564>   MOVE.l lastoffset_org,-(A7)
0003229A <AmiBlitz3.ab2@24565>   BSR.w eval                                ; calc right side of var assign
0003229E <AmiBlitz3.ab2@24567>   MOVEM.l a0/a1,-(a7)
000322A4 <AmiBlitz3.ab2@24568>   MOVE.l leftsidetype,a0
000322AA <AmiBlitz3.ab2@24569>   CMP.l #0,a0
000322AE <AmiBlitz3.ab2@24570>   BEQ 'nocheck
000322B6 <AmiBlitz3.ab2@24571>   CMP.l #$100,4(a0)
000322BA <AmiBlitz3.ab2@24572>   BLE 'nocheck
000322C0 <AmiBlitz3.ab2@24573>   TST.l typetocast
000322C4 <AmiBlitz3.ab2@24574>   BEQ 'nocast
000322CA <AmiBlitz3.ab2@24575>   MOVE.l typetocast,a1
000322CE <AmiBlitz3.ab2@24576>   BRA 'typecheck
000322D4 <AmiBlitz3.ab2@24577> 'nocast  TST.l rightsidetype
000322D8 <AmiBlitz3.ab2@24578>   BEQ 'nocheck
000322DE <AmiBlitz3.ab2@24579>   MOVE.l rightsidetype,a1
000322E6 <AmiBlitz3.ab2@24580>   CMP.l #$100,4(a1)
000322EA <AmiBlitz3.ab2@24581>   BGE 'typecheck
000322F2 <AmiBlitz3.ab2@24582>   CMP.l #$3,4(a1)
000322F6 <AmiBlitz3.ab2@24583>   BEQ 'ok                              ;long assign is allow with this codelines
000322FA <AmiBlitz3.ab2@24584>   BRA 'error
00032300 <AmiBlitz3.ab2@24586>   TST.b typecheck
00032304 <AmiBlitz3.ab2@24587>   BEQ 'nocheck
0003230A <AmiBlitz3.ab2@24588>   TST.b notypecheck
0003230E <AmiBlitz3.ab2@24589>   BNE 'ok
00032310 <AmiBlitz3.ab2@24590>   CMP.l a0,a1
00032314 <AmiBlitz3.ab2@24591>   BEQ 'ok
00032318 <AmiBlitz3.ab2@24593>   MOVE.l 4(a1),a1                   ; load the address of 1. type.
0003231C <AmiBlitz3.ab2@24594>   CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
00032320 <AmiBlitz3.ab2@24595>   BEQ 'ok
00032326 <AmiBlitz3.ab2@24597>  JMP   error_convert_types     ;for syntax 4  = typecheck
0003232C <AmiBlitz3.ab2@24600>    CLR.l typetocast
00032330 <AmiBlitz3.ab2@24601>    MOVEM.l (a7)+, a0/a1
00032336 <AmiBlitz3.ab2@24602>   MOVE.l (A7)+,lastoffset_org
0003233C <AmiBlitz3.ab2@24603>   MOVE.w commode,D1
00032340 <AmiBlitz3.ab2@24604>    BNE.w JL_0_DFCC
00032344 <AmiBlitz3.ab2@24605>    BSR.w JL_0_B63C
0003234A <AmiBlitz3.ab2@24608>   MOVE.w (A7)+,varmode
0003234E <AmiBlitz3.ab2@24609>   MOVEM.w (A7)+,D2-D3
00032352 <AmiBlitz3.ab2@24611>   MOVE.w #$2B40,D1
00032358 <AmiBlitz3.ab2@24612>   MOVE.w varmode,D4
0003235C <AmiBlitz3.ab2@24613>    BEQ.w JL_0_DFE8
00032360 <AmiBlitz3.ab2@24614>   BCLR #$9,D1
00032364 <AmiBlitz3.ab2@24617>   BTST #$F,D2
00032368 <AmiBlitz3.ab2@24618>    BEQ.w JL_0_E090
0003236E <AmiBlitz3.ab2@24619>    TST.b stackcorrect
00032372 <AmiBlitz3.ab2@24620>    BNE 'st1
00032378 <AmiBlitz3.ab2@24621>   MOVE.w commode,D1
0003237C <AmiBlitz3.ab2@24622>    BEQ.w JL_0_E004
00032382 <AmiBlitz3.ab2@24625>   MOVE.w pulla2,D1
00032388 <AmiBlitz3.ab2@24626>    JSR writeword
0003238C <AmiBlitz3.ab2@24629>   MOVE.w #$2480,D1
00032390 <AmiBlitz3.ab2@24630>    MOVEM.l a0/d0,-(a7)
00032396 <AmiBlitz3.ab2@24631>    MOVEA.l lastoffset_org,A0
00032398 <AmiBlitz3.ab2@24632>    MOVE.l A0,D0
0003239C <AmiBlitz3.ab2@24633>    BEQ.w 'skip
0003239E <AmiBlitz3.ab2@24634>    MOVEA.l D0,A0
000323A6 <AmiBlitz3.ab2@24635>    MOVE.l $A(A0),currtype
000323AA <AmiBlitz3.ab2@24638>   MOVEM.l (a7)+,a0/d0
000323AE <AmiBlitz3.ab2@24639>   CMP.w #$2C,D0
000323B2 <AmiBlitz3.ab2@24640>    BNE.w JL_0_E090
000323B6 <AmiBlitz3.ab2@24641>     MOVE.w #$24C0,D1
000323BA <AmiBlitz3.ab2@24642>    BSR.w JL_0_E090                                         ;write store
000323C0 <AmiBlitz3.ab2@24645>    MOVE.l lastoffset_org,D0
000323C8 <AmiBlitz3.ab2@24649>   MOVE.w #$FFFF,commode
000323CE <AmiBlitz3.ab2@24650>   CLR.w varcodelen
000323D6 <AmiBlitz3.ab2@24651>   MOVE.b #1,optiarray
000323DC <AmiBlitz3.ab2@24652>   MOVE.w pusha2,D1
000323E2 <AmiBlitz3.ab2@24653>    JSR writeword
000323E8 <AmiBlitz3.ab2@24654>   TST.l lastoffset_org
000323EC <AmiBlitz3.ab2@24655>   BEQ dimmore
000323F2 <AmiBlitz3.ab2@24656>   MOVEA.l lastoffset_org,A0
000323F4 <AmiBlitz3.ab2@24657>   MOVE.l (A0),D0
000323F8 <AmiBlitz3.ab2@24658>    BEQ.w JUMP_comerr
000323FA <AmiBlitz3.ab2@24659>   MOVEA.l D0,A0
00032400 <AmiBlitz3.ab2@24660>   MOVE.l A0,lastoffset_org
00032406 <AmiBlitz3.ab2@24661>   BTST #$1,$7(A0)
0003240A <AmiBlitz3.ab2@24662>    BNE.w JUMP_nocomerr
0003240E <AmiBlitz3.ab2@24663>   MOVEA.l $A(A0),A1
00032412 <AmiBlitz3.ab2@24664>   MOVE.l $4(A1),D2
00032418 <AmiBlitz3.ab2@24667>   BTST #$0,$7(A0)
0003241C <AmiBlitz3.ab2@24668>    BNE.w JL_0_E078
00032422 <AmiBlitz3.ab2@24669>   CMP.l #$100,D2
00032426 <AmiBlitz3.ab2@24670>    BCC.l JUMP_nocomerr
0003242A <AmiBlitz3.ab2@24671> BRA.w JL_0_E088                                     ; do do type\x= 10,20,30....
00032430 <AmiBlitz3.ab2@24674>         CLR.b optiarray
00032434 <AmiBlitz3.ab2@24675>         CMP.w #"@@",(a5)
00032438 <AmiBlitz3.ab2@24676>         BEQ 'n1
0003243C <AmiBlitz3.ab2@24677> BRA 'd1
00032442 <AmiBlitz3.ab2@24680>   JSR nextline
00032444 <AmiBlitz3.ab2@24681>         MOVE.l a5,-(a7)
00032446 <AmiBlitz3.ab2@24684>   MOVE.b (a5)+,d0
0003244A <AmiBlitz3.ab2@24685>         CMP.b #$20,d0
0003244E <AmiBlitz3.ab2@24686>         BEQ 'l2
00032450 <AmiBlitz3.ab2@24687>         MOVE.l (a7)+,a5
00032454 <AmiBlitz3.ab2@24688>         CMP.b #";",d0
00032458 <AmiBlitz3.ab2@24689>         BEQ 'n1
0003245E <AmiBlitz3.ab2@24692>         TST.w debugmode
00032462 <AmiBlitz3.ab2@24693>         BEQ JL_0_DEE0
00032464 <AmiBlitz3.ab2@24694>         MOVE.l a0,-(a7)
0003246A <AmiBlitz3.ab2@24695>         MOVE.l pushat,a0
00032470 <AmiBlitz3.ab2@24696>         CMP.l #0,a0
00032474 <AmiBlitz3.ab2@24697>         BNE 'o1
00032478 <AmiBlitz3.ab2@24698> BRA 'skip
00032480 <AmiBlitz3.ab2@24701>         ADD.l #1,2(a0)
00032486 <AmiBlitz3.ab2@24704>   CLR.w commode
0003248E <AmiBlitz3.ab2@24705>         MOVE.b #1,stackcorrect
00032490 <AmiBlitz3.ab2@24706>         MOVE.l (a7)+,a0
00032496 <AmiBlitz3.ab2@24707> JMP JL_0_DEE0
0003249C <AmiBlitz3.ab2@24710> JMP nocomerr
000324A2 <AmiBlitz3.ab2@24713>   CMP.l #$100,D2
000324A6 <AmiBlitz3.ab2@24714>    BCS.w JL_0_E084
000324A8 <AmiBlitz3.ab2@24715>   MOVEQ.l #$00,D2
000324AC <AmiBlitz3.ab2@24718>   BSET #$E,D2
000324B0 <AmiBlitz3.ab2@24721>   BSET #$F,D2
000324B4 <AmiBlitz3.ab2@24722> BRA.w JL_0_DEE0
000324BA <AmiBlitz3.ab2@24725>    MOVE.l destpointer,a4
000324C2 <AmiBlitz3.ab2@24726>    MOVE.l #$f22a6400,-4(a4)
000324C8 <AmiBlitz3.ab2@24727>    MOVE.w arrayoffset,d1
000324CE <AmiBlitz3.ab2@24728> JMP writeword
000324D4 <AmiBlitz3.ab2@24731> JMP comerr
000324DA <AmiBlitz3.ab2@24734>    TST.b fpu
000324DE <AmiBlitz3.ab2@24735>    BEQ 'nofloat
000324E2 <AmiBlitz3.ab2@24736>    CMP.b #5,d2
000324E6 <AmiBlitz3.ab2@24737>    BNE 'nofloat
000324EC <AmiBlitz3.ab2@24738>    CLR.w fp0var
000324F2 <AmiBlitz3.ab2@24739>    LEA regtable,a4
000324F4 <AmiBlitz3.ab2@24740>    TST.l (a4)
000324F8 <AmiBlitz3.ab2@24741>    BEQ 'noreg
000324FC <AmiBlitz3.ab2@24742>    BTST #15,d2                                             ;regvars
00032500 <AmiBlitz3.ab2@24743>    BNE 'noreg
00032504 <AmiBlitz3.ab2@24744>    CMP.w 0+4(a4),d3
00032508 <AmiBlitz3.ab2@24745>    BNE 'doreg1
0003250E <AmiBlitz3.ab2@24746>    MOVE.l #$f2000380,d1
00032514 <AmiBlitz3.ab2@24747>    MOVE.w regnum,d0
00032518 <AmiBlitz3.ab2@24748>    BNE 'noopt
0003251E <AmiBlitz3.ab2@24754>    MOVE.l destpointer,a4
00032526 <AmiBlitz3.ab2@24755>    CMP.l #$f2001c80,-8(a4)
0003252A <AmiBlitz3.ab2@24756>    BNE 'noopt
00032532 <AmiBlitz3.ab2@24757>    CMP.l #$f2000422,-4(a4)
00032536 <AmiBlitz3.ab2@24758>    BNE 'noopt
0003253C <AmiBlitz3.ab2@24759>    MOVE.l #$f20003a2,d1
00032546 <AmiBlitz3.ab2@24760>    SUB.l #8,destpointer
00032548 <AmiBlitz3.ab2@24763>    ASL.w #7,d0
0003254A <AmiBlitz3.ab2@24764>    OR.w d0,d1
00032550 <AmiBlitz3.ab2@24765>    JSR writelong
00032552 <AmiBlitz3.ab2@24766> RTS
00032556 <AmiBlitz3.ab2@24769>   CMP.w 8+4(a4),d3
0003255A <AmiBlitz3.ab2@24770>    BNE 'doreg2
00032560 <AmiBlitz3.ab2@24771>    MOVE.l #$f2000300,d1
00032566 <AmiBlitz3.ab2@24772>    MOVE.w regnum,d0
00032568 <AmiBlitz3.ab2@24773>    ASL.w #7,d0
0003256A <AmiBlitz3.ab2@24774>    OR.w d0,d1
00032570 <AmiBlitz3.ab2@24775>    JSR writelong
00032572 <AmiBlitz3.ab2@24776> RTS
00032576 <AmiBlitz3.ab2@24779>   CMP.w 16+4(a4),d3
0003257A <AmiBlitz3.ab2@24780>    BNE 'doreg3
00032580 <AmiBlitz3.ab2@24781>    MOVE.l #$f2000280,d1
00032586 <AmiBlitz3.ab2@24782>    MOVE.w regnum,d0
00032588 <AmiBlitz3.ab2@24783>    ASL.w #7,d0
0003258A <AmiBlitz3.ab2@24784>    OR.w d0,d1
00032590 <AmiBlitz3.ab2@24785>    JSR  writelong
00032592 <AmiBlitz3.ab2@24786>  RTS
00032596 <AmiBlitz3.ab2@24789>   CMP.w 24+4(a4),d3
0003259A <AmiBlitz3.ab2@24790>    BNE 'doreg4
000325A0 <AmiBlitz3.ab2@24791>    MOVE.l #$f2000200,d1
000325A6 <AmiBlitz3.ab2@24792>    MOVE.w regnum,d0
000325A8 <AmiBlitz3.ab2@24793>    ASL.w #7,d0
000325AA <AmiBlitz3.ab2@24794>    OR.w d0,d1
000325B0 <AmiBlitz3.ab2@24795>    JSR writelong
000325B2 <AmiBlitz3.ab2@24796> RTS
000325B6 <AmiBlitz3.ab2@24799>   CMP.w 32+4(a4),d3
000325BA <AmiBlitz3.ab2@24800>    BNE 'noreg
000325C0 <AmiBlitz3.ab2@24801>    MOVE.l #$f2000180,d1
000325C6 <AmiBlitz3.ab2@24802>    MOVE.w regnum,d0
000325C8 <AmiBlitz3.ab2@24803>    ASL.w #7,d0
000325CA <AmiBlitz3.ab2@24804>    OR.w d0,d1
000325D0 <AmiBlitz3.ab2@24805>    JSR writelong
000325D2 <AmiBlitz3.ab2@24806> RTS
000325D8 <AmiBlitz3.ab2@24809>    TST.w regnum
000325DC <AmiBlitz3.ab2@24810>    BNE 'nofp0
000325E2 <AmiBlitz3.ab2@24811>    MOVE.l destpointer ,a4
000325EA <AmiBlitz3.ab2@24812>    CMP.l #$f2304400,-6(a4)
000325EE <AmiBlitz3.ab2@24813>    BNE 'do
000325F4 <AmiBlitz3.ab2@24814>    CMP.w #$1990,-2(a4)
000325F8 <AmiBlitz3.ab2@24815>    BNE 'do
000325FC <AmiBlitz3.ab2@24816>    BTST #15,d2                                             ;types ?
00032600 <AmiBlitz3.ab2@24817>    BNE 'do
00032606 <AmiBlitz3.ab2@24818>   MOVE.l #$2b701990,d1                                     ;var
0003260C <AmiBlitz3.ab2@24819>   TST.w varmode
00032610 <AmiBlitz3.ab2@24820>   BEQ 'glob1
00032614 <AmiBlitz3.ab2@24821>   BCLR #25,d1
00032618 <AmiBlitz3.ab2@24824>   MOVE.l d1,-6(a4)
0003261C <AmiBlitz3.ab2@24825>   MOVE.w d3,-2(a4)
00032622 <AmiBlitz3.ab2@24826>   CLR.w fp0var
0003262A <AmiBlitz3.ab2@24827>   MOVE.w #$ffff,fp0mode
0003262C <AmiBlitz3.ab2@24828> RTS
00032634 <AmiBlitz3.ab2@24831>    CMP.l #$f22d4400,-6(a4)                                 ;fmove.s (a5),fp0
00032638 <AmiBlitz3.ab2@24832>    BNE 'do3
00032642 <AmiBlitz3.ab2@24833>    CMP.l #newtype_double,currtype
00032646 <AmiBlitz3.ab2@24834>    BEQ 'do4
0003264A <AmiBlitz3.ab2@24837>   MOVE.w #$2b6d,d1
00032650 <AmiBlitz3.ab2@24838>    TST.w varmode
00032654 <AmiBlitz3.ab2@24839>    BEQ 'g2
00032658 <AmiBlitz3.ab2@24840>     BCLR #9,d1
0003265C <AmiBlitz3.ab2@24843>     CMP.w #$2b6d,d1
00032660 <AmiBlitz3.ab2@24844>     BNE 'd1
00032664 <AmiBlitz3.ab2@24845>     CMP.w -2(a4),d3
00032668 <AmiBlitz3.ab2@24846>     BNE 'd1
0003266E <AmiBlitz3.ab2@24847>     SUBQ.l #6,destpointer
00032672 <AmiBlitz3.ab2@24848> BRA 'd12
00032676 <AmiBlitz3.ab2@24851>     MOVE.w d1,-6(a4)                                       ;fmove.s to move.l mem,mem
0003267C <AmiBlitz3.ab2@24852>     MOVE.w -2(a4),-4(a4)
00032680 <AmiBlitz3.ab2@24853>     MOVE.w d3,-2(a4)
00032686 <AmiBlitz3.ab2@24856>   CLR.w fp0var
0003268E <AmiBlitz3.ab2@24857>     MOVE.w #$ffff,fp0mode
00032690 <AmiBlitz3.ab2@24858> RTS
00032698 <AmiBlitz3.ab2@24861>   CMP.l #$f22c4400,-6(a4)                                  ;fmove.s (a4)
0003269C <AmiBlitz3.ab2@24862>    BNE 'do4
000326A0 <AmiBlitz3.ab2@24863>    MOVE.w #$2b6c,d1
000326A6 <AmiBlitz3.ab2@24864>       TST.w varmode
000326AA <AmiBlitz3.ab2@24865>    BEQ 'g3
000326AE <AmiBlitz3.ab2@24866>    BCLR #9,d1
000326B2 <AmiBlitz3.ab2@24869>   MOVE.w d1,-6(a4)
000326B8 <AmiBlitz3.ab2@24870>     MOVE.w -2(a4),-4(a4)
000326BC <AmiBlitz3.ab2@24871>     MOVE.w d3,-2(a4)
000326C2 <AmiBlitz3.ab2@24872>     CLR.w fp0var
000326CA <AmiBlitz3.ab2@24873>     MOVE.w #$ffff,fp0mode
000326CC <AmiBlitz3.ab2@24874> RTS
000326D2 <AmiBlitz3.ab2@24877>   MOVE.w d3,fp0var
000326DC <AmiBlitz3.ab2@24878>    MOVE.w varmode,fp0mode
000326DE <AmiBlitz3.ab2@24879>    ADDQ.l #6,a4
000326E4 <AmiBlitz3.ab2@24880>    MOVE.l a4,fp0addr
000326EE <AmiBlitz3.ab2@24881>    MOVE.l firstiff,fp0iff
000326F2 <AmiBlitz3.ab2@24884>   MOVEM.l d0/d4,-(a7)
000326F4 <AmiBlitz3.ab2@24885>    MOVEQ #0,d0
000326FA <AmiBlitz3.ab2@24886>     MOVE.w regnum,d0
000326FC <AmiBlitz3.ab2@24887>    ASL.w #7,d0                                             ;fpu store var
00032700 <AmiBlitz3.ab2@24888>   BTST #15,d2
00032704 <AmiBlitz3.ab2@24889>    BEQ 'var
00032706 <AmiBlitz3.ab2@24890>    MOVE.w d1,d4
0003270A <AmiBlitz3.ab2@24891>    CMP.w #$24c0,d4
0003270E <AmiBlitz3.ab2@24892>    BNE 'nopl
00032714 <AmiBlitz3.ab2@24893>    MOVE.l #$f21a6400,d1
00032716 <AmiBlitz3.ab2@24894>    MOVEQ #0,d3
0003271A <AmiBlitz3.ab2@24895> BRA 'glob
00032720 <AmiBlitz3.ab2@24899>   MOVE.l #$f2126400,d1
00032722 <AmiBlitz3.ab2@24900>    TST.w d3                                                ;offset =0
00032726 <AmiBlitz3.ab2@24901>    BNE 'offset
0003272C <AmiBlitz3.ab2@24902>    MOVE.l #$f2126400,d1
0003272E <AmiBlitz3.ab2@24910>    MOVEQ #0,d3
00032732 <AmiBlitz3.ab2@24911> BRA 'glob
00032738 <AmiBlitz3.ab2@24914>   MOVE.l #$f22d6400,d1                                     ;var
0003273E <AmiBlitz3.ab2@24915>   TST.w varmode
00032742 <AmiBlitz3.ab2@24916>   BEQ 'glob
00032746 <AmiBlitz3.ab2@24917>   BCLR #16,d1
00032748 <AmiBlitz3.ab2@24918>  'glob OR.l d0,d1
00032752 <AmiBlitz3.ab2@24921>   CMP.l #newtype_double,currtype
00032756 <AmiBlitz3.ab2@24922>   BNE 'dbl1
0003275C <AmiBlitz3.ab2@24923>   OR.l #$00001000,d1
00032762 <AmiBlitz3.ab2@24926>   JSR writelong
00032768 <AmiBlitz3.ab2@24927>   CLR.l currtype
0003276C <AmiBlitz3.ab2@24928>   MOVEM.l (a7)+,d0/d4
0003276E <AmiBlitz3.ab2@24929>   MOVE.l d3,d1
00032772 <AmiBlitz3.ab2@24930>   BEQ 'nooffs
00032778 <AmiBlitz3.ab2@24931> JMP writeword
0003277A <AmiBlitz3.ab2@24934> RTS
00032780 <AmiBlitz3.ab2@24948>     TST.b fast                                             ;write lea->xx(a2)
00032784 <AmiBlitz3.ab2@24949>    BEQ 'la10
0003278A <AmiBlitz3.ab2@24953>    TST.b quickadd
00032790 <AmiBlitz3.ab2@24955>      CLR.b quickadd
00032794 <AmiBlitz3.ab2@24956>    CMP.w #$2480,d1
00032798 <AmiBlitz3.ab2@24957>    BNE 'la10
0003279E <AmiBlitz3.ab2@24958>    TST.b optiarray
000327A2 <AmiBlitz3.ab2@24959>    BNE 'la10
000327A8 <AmiBlitz3.ab2@24960>    MOVE.l destpointer,a4
000327AE <AmiBlitz3.ab2@24961>    CMP.w #$45ea,-4(a4)
000327B2 <AmiBlitz3.ab2@24962>    BNE 'la10
000327BA <AmiBlitz3.ab2@24963>    CMP.w #8,pushclen
000327BE <AmiBlitz3.ab2@24964>    BEQ 'la100
000327C6 <AmiBlitz3.ab2@24965>    CMP.w #6,pushclen
000327CA <AmiBlitz3.ab2@24966>    BNE 'la10
000327CE <AmiBlitz3.ab2@24967>    CMP.b #3,d2
000327D2 <AmiBlitz3.ab2@24968>    BCS 'la110
000327D8 <AmiBlitz3.ab2@24970>    MOVE.w #$2540,-2(a4)
000327DE <AmiBlitz3.ab2@24971>    MOVE.w arrayoffset,d1
000327E4 <AmiBlitz3.ab2@24972> JMP writeword
000327EA <AmiBlitz3.ab2@24975>    CLR.b quickadd
000327EC <AmiBlitz3.ab2@24976> RTS
000327F0 <AmiBlitz3.ab2@24979>    CMP.b #2,d2
000327F4 <AmiBlitz3.ab2@24980>    BNE 'la120
000327FA <AmiBlitz3.ab2@24981>     MOVE.w #$3540,-2(a4)
00032800 <AmiBlitz3.ab2@24982>    MOVE.w arrayoffset,d1
00032806 <AmiBlitz3.ab2@24983> JMP writeword
0003280A <AmiBlitz3.ab2@24986>   CMP.b #1,d2
0003280E <AmiBlitz3.ab2@24987>    BNE.s 'la10
00032814 <AmiBlitz3.ab2@24988>     MOVE.w #$1540,-2(a4)
0003281A <AmiBlitz3.ab2@24989>    MOVE.w arrayoffset,d1
00032820 <AmiBlitz3.ab2@24990> JMP writeword
00032824 <AmiBlitz3.ab2@24993>    CMP.b #3,d2
00032828 <AmiBlitz3.ab2@24994>    BCS 'la11
0003282E <AmiBlitz3.ab2@24995>    MOVE.w #$2540,-4(a4)
00032830 <AmiBlitz3.ab2@24996> RTS
00032834 <AmiBlitz3.ab2@24999>    CMP.b #2,d2
00032838 <AmiBlitz3.ab2@25000>    BNE 'la12
0003283E <AmiBlitz3.ab2@25001>     MOVE.w #$3540,-4(a4)
00032840 <AmiBlitz3.ab2@25002> RTS
00032844 <AmiBlitz3.ab2@25004>  'la12 CMP.b #1,d2
00032848 <AmiBlitz3.ab2@25005>    BNE.s 'la10
0003284E <AmiBlitz3.ab2@25006>     MOVE.w #$1540,-4(a4)
00032850 <AmiBlitz3.ab2@25007> RTS
00032856 <AmiBlitz3.ab2@25010>   CLR.b optiarray
0003285A <AmiBlitz3.ab2@25011>    CMP.b #$1,D2
0003285E <AmiBlitz3.ab2@25012>    BEQ.w JL_0_E0AC
00032862 <AmiBlitz3.ab2@25013>    BSR.w varalign
00032866 <AmiBlitz3.ab2@25014>    CMP.b #$3,D2
0003286A <AmiBlitz3.ab2@25015>    BCC.w writevarlong
00032870 <AmiBlitz3.ab2@25016>    TST.b fast                                              ;optiimmi
00032874 <AmiBlitz3.ab2@25017>    BEQ 'l10b
0003287A <AmiBlitz3.ab2@25022>    MOVE.l destpointer,a0
00032880 <AmiBlitz3.ab2@25023>    SUB.l imm_addr,a0
00032886 <AmiBlitz3.ab2@25024>    CMP.l #4,a0
0003288A <AmiBlitz3.ab2@25025>    BNE 'l10
00032890 <AmiBlitz3.ab2@25026>    CLR.l imm_addr
00032896 <AmiBlitz3.ab2@25027>    MOVE.l destpointer,a4
0003289A <AmiBlitz3.ab2@25028>    OR.w #$107c,d1
0003289E <AmiBlitz3.ab2@25029>    MOVE.w d1,-4(a4)
000328A0 <AmiBlitz3.ab2@25030>     MOVE.w D3,D1
000328A6 <AmiBlitz3.ab2@25031> JMP writeword
000328AC <AmiBlitz3.ab2@25034>   MOVE.l destpointer,a0
000328B2 <AmiBlitz3.ab2@25035>   SUB.l load_var_addr,a0
000328B8 <AmiBlitz3.ab2@25036>   CMP.l #4,a0
000328BC <AmiBlitz3.ab2@25037>   BNE 'l10b
000328C2 <AmiBlitz3.ab2@25038>   CMP.w #$302d,-4(a4)                                      ;check 68k opcode
000328C6 <AmiBlitz3.ab2@25039>   BNE 'l10b
000328CC <AmiBlitz3.ab2@25041>   CLR.l load_var_addr
000328D2 <AmiBlitz3.ab2@25042>   MOVE.l destpointer,a4
000328D6 <AmiBlitz3.ab2@25043>   OR.w #$102d,d1
000328DA <AmiBlitz3.ab2@25044>   MOVE.w d1,-4(a4)
000328DC <AmiBlitz3.ab2@25045>   MOVE.w d3,d1
000328E2 <AmiBlitz3.ab2@25046> JMP writeword
000328E6 <AmiBlitz3.ab2@25049>   ORI.w #$1000,D1                                          ;word
000328EA <AmiBlitz3.ab2@25050> BRA.w writestorevar
000328F0 <AmiBlitz3.ab2@25054>    TST.b fast                                              ;optiimmi
000328F4 <AmiBlitz3.ab2@25055>    BEQ 'l10b
000328FA <AmiBlitz3.ab2@25060>    MOVE.l destpointer,a0
00032900 <AmiBlitz3.ab2@25061>    SUB.l imm_addr,a0
00032906 <AmiBlitz3.ab2@25062>    CMP.l #4,a0
0003290A <AmiBlitz3.ab2@25063>    BNE 'l10
00032910 <AmiBlitz3.ab2@25064>    CLR.l imm_addr
00032916 <AmiBlitz3.ab2@25065>    MOVE.l destpointer,a4
0003291A <AmiBlitz3.ab2@25066>    OR.w #$7c,d1
0003291E <AmiBlitz3.ab2@25067>    EORI #$3000,d1
00032922 <AmiBlitz3.ab2@25068>    MOVE.w d1,-4(a4)
00032924 <AmiBlitz3.ab2@25069>       MOVE.w D3,D1
0003292A <AmiBlitz3.ab2@25070> JMP writeword
00032930 <AmiBlitz3.ab2@25073>   MOVE.l destpointer,a0
00032936 <AmiBlitz3.ab2@25074>   SUB.l load_var_addr,a0
0003293C <AmiBlitz3.ab2@25075>   CMP.l #4,a0
00032940 <AmiBlitz3.ab2@25076>   BNE 'l10b
00032946 <AmiBlitz3.ab2@25077>   CLR.l load_var_addr
0003294C <AmiBlitz3.ab2@25078>   MOVE.l destpointer,a4
00032952 <AmiBlitz3.ab2@25079>    CMP.w #$1b6d,-4(a4)
00032956 <AmiBlitz3.ab2@25080>    BNE 'l10b
0003295A <AmiBlitz3.ab2@25081>    OR.w #$2d,d1
0003295E <AmiBlitz3.ab2@25082>    EORI #$3000,d1
00032962 <AmiBlitz3.ab2@25083>    MOVE.w d1,-4(a4)
00032964 <AmiBlitz3.ab2@25084>   MOVE.w d3,d1
0003296A <AmiBlitz3.ab2@25085> JMP writeword
00032970 <AmiBlitz3.ab2@25088>   ADDQ.w #1,pcodd                                          ;byte
00032974 <AmiBlitz3.ab2@25089>   EORI.w #$3000,D1
0003297A <AmiBlitz3.ab2@25092>   JSR writeword
0003297E <AmiBlitz3.ab2@25093>   BTST #$7,D1
00032982 <AmiBlitz3.ab2@25094>    BNE JL_0_E0C6
00032984 <AmiBlitz3.ab2@25095>   MOVE.w D3,D1
0003298A <AmiBlitz3.ab2@25096> JMP writeword
00032990 <AmiBlitz3.ab2@25099>    TST.b fast                                              ;optiimmi
00032994 <AmiBlitz3.ab2@25100>    BEQ 'l10b
0003299A <AmiBlitz3.ab2@25104>    MOVE.l destpointer,a0
000329A0 <AmiBlitz3.ab2@25105>    SUB.l imm_addr,a0
000329A6 <AmiBlitz3.ab2@25106>    CMP.l #6,a0
000329AA <AmiBlitz3.ab2@25107>    BNE 'l10
000329B0 <AmiBlitz3.ab2@25108>    CLR.l imm_addr
000329B6 <AmiBlitz3.ab2@25109>    MOVE.l destpointer,a4
000329BA <AmiBlitz3.ab2@25110>    OR.w #$7c,d1
000329BE <AmiBlitz3.ab2@25111>    MOVE.w d1,-6(a4)
000329C0 <AmiBlitz3.ab2@25112>     MOVE.w D3,D1
000329C6 <AmiBlitz3.ab2@25113> JMP writeword
000329CC <AmiBlitz3.ab2@25116>   MOVE.l destpointer,a0
000329D2 <AmiBlitz3.ab2@25117>   SUB.l load_var_addr,a0
000329D8 <AmiBlitz3.ab2@25118>   CMP.l #4,a0
000329DC <AmiBlitz3.ab2@25119>   BNE 'l10b
000329E2 <AmiBlitz3.ab2@25120>   CLR.l load_var_addr
000329E8 <AmiBlitz3.ab2@25121>   MOVE.l destpointer,a4
000329EE <AmiBlitz3.ab2@25122>   CMP.w #$245f,-2(a4)
000329F2 <AmiBlitz3.ab2@25123>   BEQ 'l10b
000329F6 <AmiBlitz3.ab2@25124>   OR.w #$28,d1
000329FA <AmiBlitz3.ab2@25125>   OR.w d1,-4(a4)
00032A00 <AmiBlitz3.ab2@25126>   CMP.w #$2b6d,-4(a4)
00032A04 <AmiBlitz3.ab2@25127>   BNE 'd1
00032A08 <AmiBlitz3.ab2@25128>   CMP.w -2(a4),d3
00032A0C <AmiBlitz3.ab2@25129>   BNE 'd1
00032A12 <AmiBlitz3.ab2@25130>   SUBQ.l #4,destpointer
00032A14 <AmiBlitz3.ab2@25131> RTS
00032A16 <AmiBlitz3.ab2@25134>   MOVE.w d3,d1
00032A1C <AmiBlitz3.ab2@25135> JMP writeword
00032A22 <AmiBlitz3.ab2@25138>   JSR writeword
00032A26 <AmiBlitz3.ab2@25139>   BTST #$7,D1
00032A2A <AmiBlitz3.ab2@25140>    BNE.b JL_0_E0C6
00032A2C <AmiBlitz3.ab2@25141>   MOVE.w D3,D1
00032A32 <AmiBlitz3.ab2@25142> JMP writeword
00032A34 <AmiBlitz3.ab2@25145> RTS
00032A36 <AmiBlitz3.ab2@25149>   MOVE.w D1,-(A7)
00032A3A <AmiBlitz3.ab2@25150>   MOVE.w pcodd(PC),D1
00032A3C <AmiBlitz3.ab2@25151>   LSR.w #1,D1
00032A40 <AmiBlitz3.ab2@25152>    BCC.b JL_0_E0E2
00032A46 <AmiBlitz3.ab2@25153>   CLR.w pcodd
00032A4C <AmiBlitz3.ab2@25154>   MOVE.w add1a2,D1
00032A52 <AmiBlitz3.ab2@25155>    JSR writeword
00032A54 <AmiBlitz3.ab2@25158>   MOVE.w (A7)+,D1
00032A56 <AmiBlitz3.ab2@25159> RTS
00032A58 <AmiBlitz3.ab2@25163> add1a2:     Dc.b $52,$4A                                   ;ADDQ.W  #1,A2
00032A5A <AmiBlitz3.ab2@25166> pcodd:     Ds.w 1                                          ;add 1 to this for bytes
00032A5C <AmiBlitz3.ab2@25167> listadd:   Ds.w 1                                          ;set to 8 if it's a list
00032A5E <AmiBlitz3.ab2@25168> listsize:  Ds.w 1
00032A64 <AmiBlitz3.ab2@25172>   ADDQ.w #1,regnum
00032A6C <AmiBlitz3.ab2@25173>   MOVE.b #1,nowdeclare
00032A72 <AmiBlitz3.ab2@25174>   CLR.b dimkeep
00032A7A <AmiBlitz3.ab2@25175>    CMP.l #"KEEP",-1(a5)
00032A7E <AmiBlitz3.ab2@25176>   BNE 'nokeep
00032A84 <AmiBlitz3.ab2@25177>   CMP.b #" ",3(a5)
00032A88 <AmiBlitz3.ab2@25178>   BNE 'nokeep
00032A8A <AmiBlitz3.ab2@25179>   ADDQ.l #3,a5
00032A8E <AmiBlitz3.ab2@25182>     CMP.b #" ",(a5)
00032A92 <AmiBlitz3.ab2@25183>     BNE '1
00032A94 <AmiBlitz3.ab2@25184>    ADDQ #1,a5
00032A98 <AmiBlitz3.ab2@25185> BRA '2
00032A9E <AmiBlitz3.ab2@25188>   MOVE.l a5,lastsourcepos
00032AA6 <AmiBlitz3.ab2@25189>   MOVE.b #1,dimkeep
00032AAA <AmiBlitz3.ab2@25197>   MOVE.w #$FF9A,D1
00032AB0 <AmiBlitz3.ab2@25198>   JSR uselib
00032AB6 <AmiBlitz3.ab2@25201>   CLR.w listadd
00032ABA <AmiBlitz3.ab2@25202>   CMP.w #-$7F4D,D0
00032ABE <AmiBlitz3.ab2@25203>    BNE.w JL_0_E11E
00032AC6 <AmiBlitz3.ab2@25204>   MOVE.w #$0008,listadd
00032ACA <AmiBlitz3.ab2@25205>   MOVE.w #$FFFA,D1
00032AD0 <AmiBlitz3.ab2@25206>    JSR uselib
00032AD6 <AmiBlitz3.ab2@25207>    JSR get1bytemain
00032ADC <AmiBlitz3.ab2@25210>   CLR.w nonew
00032AE2 <AmiBlitz3.ab2@25211>    JSR getparameter
00032AEA <AmiBlitz3.ab2@25212>   BTST #$1,flagmask+1
00032AEE <AmiBlitz3.ab2@25213>    BEQ.w JUMP_syntaxerr
00032AF4 <AmiBlitz3.ab2@25214>    JSR JL_0_8E3C
00032AFA <AmiBlitz3.ab2@25215>   MOVE.w notshared,D1
00032AFE <AmiBlitz3.ab2@25216>    BNE.w JL_0_E198
00032B06 <AmiBlitz3.ab2@25217>   MOVE.w $8(A3),temp1
00032B0C <AmiBlitz3.ab2@25218>   MOVE.w proceduremode,D2
00032B10 <AmiBlitz3.ab2@25219>    BNE.w JL_0_E176
00032B16 <AmiBlitz3.ab2@25220>   MOVE.w globalvarpointer,-(A7)
00032B1E <AmiBlitz3.ab2@25221>   MOVE.w $4(A3),globalvarpointer
00032B24 <AmiBlitz3.ab2@25222>   ADDQ.w #4,globalvarpointer
00032B28 <AmiBlitz3.ab2@25223>    BSR.w write_dim_code
00032B2E <AmiBlitz3.ab2@25224>   MOVE.w (A7)+,globalvarpointer
00032B32 <AmiBlitz3.ab2@25225> BRA.w JL_0_E1BA
00032B38 <AmiBlitz3.ab2@25236>   MOVE.w globalvarpointer,-(A7)
00032B3E <AmiBlitz3.ab2@25237>             MOVE.w proceduremode,-(a7)
00032B44 <AmiBlitz3.ab2@25238>             CLR.w proceduremode
00032B4C <AmiBlitz3.ab2@25239>   MOVE.w $4(A3),globalvarpointer
00032B52 <AmiBlitz3.ab2@25240>   ADDQ.w #4,globalvarpointer
00032B56 <AmiBlitz3.ab2@25241>    BSR.w write_dim_code
00032B5C <AmiBlitz3.ab2@25242>    MOVE.w (a7)+,proceduremode
00032B62 <AmiBlitz3.ab2@25243>   MOVE.w (A7)+,globalvarpointer
00032B66 <AmiBlitz3.ab2@25244> BRA.w JL_0_E1BA
00032B6E <AmiBlitz3.ab2@25247>   MOVE.w #$FFFF,temp1
00032B72 <AmiBlitz3.ab2@25248>   MOVE.w listadd(PC),D1
00032B76 <AmiBlitz3.ab2@25249>    BEQ.w JL_0_E1B6
00032B7E <AmiBlitz3.ab2@25250>   MOVE.w #$4000,temp1
00032B84 <AmiBlitz3.ab2@25251>   BSET #$0,$6(A3)
00032B8A <AmiBlitz3.ab2@25254>         TST.w proceduremode
00032B8E <AmiBlitz3.ab2@25255>        BNE 'l1
00032B94 <AmiBlitz3.ab2@25256>        MOVE.w locvaroff,-(a7)
00032B98 <AmiBlitz3.ab2@25259>   BSR.w write_dim_code
00032B9E <AmiBlitz3.ab2@25260>         TST.w proceduremode
00032BA2 <AmiBlitz3.ab2@25261>         BNE JL_0_E1BA
00032BA8 <AmiBlitz3.ab2@25262>        MOVE.w (A7)+,locvaroff
00032BAE <AmiBlitz3.ab2@25265>   JSR get1bytemain
00032BB2 <AmiBlitz3.ab2@25266>   CMP.w #$2C,D0
00032BB6 <AmiBlitz3.ab2@25267>    BNE.w JL_0_E1CE
00032BBC <AmiBlitz3.ab2@25268>    JSR get1bytemain
00032BC0 <AmiBlitz3.ab2@25269> BRA.w JL_0_E0FC
00032BC2 <AmiBlitz3.ab2@25272> RTS
00032BCA <AmiBlitz3.ab2@25275>   MOVE.w #$FFFF,nonew                                      ;#-1,nonew org source
00032BD0 <AmiBlitz3.ab2@25276>   MOVE.w beginarr,D1
00032BD6 <AmiBlitz3.ab2@25277>    JSR writeword
00032BD8 <AmiBlitz3.ab2@25278>   MOVEQ.l #$00,D1
00032BDE <AmiBlitz3.ab2@25279>    JSR writeword
00032BE0 <AmiBlitz3.ab2@25280>   MOVEQ.l #$04,D1
00032BE8 <AmiBlitz3.ab2@25281>   BTST #$0,flagmask+1
00032BEC <AmiBlitz3.ab2@25282>    BNE.w write_dim_code__pointer
00032BF0 <AmiBlitz3.ab2@25283>   MOVE.w $8(A2),D1
00032BF4 <AmiBlitz3.ab2@25286>   ADD.w listadd(PC),D1                                     ;size of one element.
00032BFA <AmiBlitz3.ab2@25287>   MOVE.w D1,listsize
00032C00 <AmiBlitz3.ab2@25288>    JSR writeword
00032C06 <AmiBlitz3.ab2@25289>   CLR.w temp2                                              ;# dim's got
00032C08 <AmiBlitz3.ab2@25290>   MOVE.l A3,-(A7)
00032C0E <AmiBlitz3.ab2@25293>   ADDQ.w #1,temp2
00032C10 <AmiBlitz3.ab2@25294>   MOVEQ.l #$03,D2                                          ;get word
00032C16 <AmiBlitz3.ab2@25295>   MOVE.w notshared,-(a7)
00032C1C <AmiBlitz3.ab2@25296>    JSR eval
00032C22 <AmiBlitz3.ab2@25297>   MOVE.w (a7)+,notshared
00032C28 <AmiBlitz3.ab2@25298>   TST.b debugmode
00032C2C <AmiBlitz3.ab2@25299>    BEQ.w write_dim_code__norerr0
00032C30 <AmiBlitz3.ab2@25300>   MOVE.w #$C30F,D1
00032C34 <AmiBlitz3.ab2@25306>       MOVE.w #$5281,d1
00032C3A <AmiBlitz3.ab2@25307>       JSR writeword
00032C40 <AmiBlitz3.ab2@25308>       MOVE.l #$4c010800,d1                                 ;dim >65536 fix
00032C46 <AmiBlitz3.ab2@25309>       JSR writelong
00032C4C <AmiBlitz3.ab2@25310>   MOVE.w proceduremode,D2
00032C50 <AmiBlitz3.ab2@25311>    BEQ.w write_dim_code__global
00032C56 <AmiBlitz3.ab2@25312>   SUBQ.w #4,locvaroff
00032C60 <AmiBlitz3.ab2@25313>   MOVE.w locvaroff,putarr+2
00032C64 <AmiBlitz3.ab2@25314> BRA.w write_dim_code__doit
00032C6A <AmiBlitz3.ab2@25317> JMP syntaxerr
00032C74 <AmiBlitz3.ab2@25320>   MOVE.w globalvarpointer,putarr+2
00032C7A <AmiBlitz3.ab2@25321>   ADDQ.w #4,globalvarpointer
00032C80 <AmiBlitz3.ab2@25324>   TST.b dimkeep
00032C84 <AmiBlitz3.ab2@25325>            BEQ write_dim_code__doit_l1
00032C86 <AmiBlitz3.ab2@25326>       MOVEQ #0,d1
00032C8C <AmiBlitz3.ab2@25327>       MOVE.w putarr+2,d1
00032C92 <AmiBlitz3.ab2@25328>       OR.l  #$222d0000,d1
00032C98 <AmiBlitz3.ab2@25329>       MOVE.w proceduremode,D2
00032C9C <AmiBlitz3.ab2@25330>       BEQ write_dim_code__doit_l2
00032CA2 <AmiBlitz3.ab2@25331>       TST.w notshared
00032CA6 <AmiBlitz3.ab2@25332>       BEQ write_dim_code__doit_l2
00032CAC <AmiBlitz3.ab2@25333>       SUB.l #$00010000,d1
00032CB2 <AmiBlitz3.ab2@25336>   JSR writelong
00032CB8 <AmiBlitz3.ab2@25339>   MOVE.l putarr,D1
00032CBE <AmiBlitz3.ab2@25340>       TST.w notshared
00032CC2 <AmiBlitz3.ab2@25341>       BNE write_dim_code__doit_l1a
00032CC8 <AmiBlitz3.ab2@25342>       JSR writelong
00032CCC <AmiBlitz3.ab2@25343> BRA write_dim_code__doit_l4
00032CD2 <AmiBlitz3.ab2@25346>   JSR pokela5d
00032CD6 <AmiBlitz3.ab2@25349>   CMP.w #$2C,D0
00032CDA <AmiBlitz3.ab2@25350>    BEQ.w write_dim_code__loop
00032CDE <AmiBlitz3.ab2@25351>   CMP.w #$29,D0
00032CE2 <AmiBlitz3.ab2@25352>    BNE.w JUMP_syntaxerr
00032CE4 <AmiBlitz3.ab2@25353>   MOVEA.l (A7)+,A3
00032CEA <AmiBlitz3.ab2@25354>   MOVE.w temp1,D1
00032CEE <AmiBlitz3.ab2@25355>    BMI.w write_dim_code__nocare
00032CF2 <AmiBlitz3.ab2@25359>   BTST #$E,D1
00032CF6 <AmiBlitz3.ab2@25360>    BEQ.w write_dim_code__notl
00032CFE <AmiBlitz3.ab2@25361>   CMPI.w #$1,temp2
00032D02 <AmiBlitz3.ab2@25362>    BNE.w JUMP_redimerr
00032D06 <AmiBlitz3.ab2@25363> BRA.w write_dim_code__nocare
00032D0C <AmiBlitz3.ab2@25366> JMP redimerr
00032D12 <AmiBlitz3.ab2@25369>   CMP.w temp2,D1
00032D16 <AmiBlitz3.ab2@25370>    BNE.w JUMP_redimerr                                      ;range too long
00032D1C <AmiBlitz3.ab2@25373>   LEA globalvarpointer,A0
00032D22 <AmiBlitz3.ab2@25374>   MOVE.w proceduremode,D1
00032D26 <AmiBlitz3.ab2@25375>   BEQ.w write_dim_code__gskip
00032D2C <AmiBlitz3.ab2@25376>   LEA locvaroff,A0
00032D32 <AmiBlitz3.ab2@25379>   MOVE.W  extraword,(A0)
00032D36 <AmiBlitz3.ab2@25380>   BRA.W   write_dim_code__care
00032D3E <AmiBlitz3.ab2@25383>   MOVE.w temp2,$8(A3)                                      ;set # dim's
00032D44 <AmiBlitz3.ab2@25386>   LEA doarr,A0
00032D4A <AmiBlitz3.ab2@25387>   MOVE.w $4(A3),$2(A0)
00032D52 <AmiBlitz3.ab2@25388>   MOVE.w putarr+2,$6(A0)
00032D54 <AmiBlitz3.ab2@25389>   MOVE.l (A0)+,D1
00032D5A <AmiBlitz3.ab2@25390>    JSR writelong
00032D5C <AmiBlitz3.ab2@25391>   MOVE.l (A0),D1
00032D62 <AmiBlitz3.ab2@25392>    JSR writelong
00032D68 <AmiBlitz3.ab2@25393>    TST.b dimkeep
00032D6C <AmiBlitz3.ab2@25394>   BNE write_dim_code__care_l3
00032D70 <AmiBlitz3.ab2@25397>   MOVE.w #$C400,D1
00032D74 <AmiBlitz3.ab2@25398> BRA write_dim_code__care_l2
00032D78 <AmiBlitz3.ab2@25401>   MOVE.w #$C405,d1
00032D7E <AmiBlitz3.ab2@25404>   MOVE.w proceduremode,D2
00032D82 <AmiBlitz3.ab2@25405>    BEQ.w write_dim_code__isg
00032D88 <AmiBlitz3.ab2@25406>    TST.w notshared
00032D8C <AmiBlitz3.ab2@25407>    BEQ write_dim_code__isg
00032D8E <AmiBlitz3.ab2@25408>   ADDQ.w #1,D1
00032D92 <AmiBlitz3.ab2@25411>   MOVE.w listadd(PC),D2
00032D96 <AmiBlitz3.ab2@25412>    BEQ.w write_dim_code__isrg
00032D98 <AmiBlitz3.ab2@25413>   MOVE.w D1,-(A7)
00032D9C <AmiBlitz3.ab2@25414>   MOVE.w setles(PC),D1
00032DA2 <AmiBlitz3.ab2@25415>    JSR writeword
00032DA6 <AmiBlitz3.ab2@25416>   MOVE.w listsize(PC),D1
00032DAC <AmiBlitz3.ab2@25417>    JSR writeword
00032DAE <AmiBlitz3.ab2@25418>   MOVE.w (A7)+,D1
00032DB0 <AmiBlitz3.ab2@25419>   ADDQ.w #3,D1
00032DB4 <AmiBlitz3.ab2@25422> BRA.w Atokejsr
00032DBA <AmiBlitz3.ab2@25429>     MOVE.l #$f23c4400,d1
00032DC0 <AmiBlitz3.ab2@25431>   MOVE.w regnum,d0
00032DC2 <AmiBlitz3.ab2@25432>   ASL.w #7,d0
00032DC4 <AmiBlitz3.ab2@25433>   OR.w d0,d1
00032DCA <AmiBlitz3.ab2@25434>   JSR writelong
00032DD0 <AmiBlitz3.ab2@25440>     MOVE.l #$40490fd9,d1
00032DD6 <AmiBlitz3.ab2@25442>   JSR writelong
00032DDC <AmiBlitz3.ab2@25443> JMP get1bytemain
00032DE0 <AmiBlitz3.ab2@25447> setles:   Dc.b $38,$3C,$00,$00                             ;MOVE.W  #$0000,D4
00032DE4 <AmiBlitz3.ab2@25454> vbr:                Ds.l 1
00032DE6 <AmiBlitz3.ab2@25455> cfetchmode:         Ds.w 1                               ;1=fetching a constant
00032DEC <AmiBlitz3.ab2@25457> constlibs           Dc.w $FDA7,$FCDF,$FD43               ;64935,64735,64835  org source
00032DF0 <AmiBlitz3.ab2@25461> constpcat:          Ds.l 1
00032DF4 <AmiBlitz3.ab2@25462> constlibat:         Ds.l 1
00032DF8 <AmiBlitz3.ab2@25463> constmaxpc:         Dc.l $400
00032DFC <AmiBlitz3.ab2@25465> stacksize:          Dc.l 32768                           ;stackfuck org source
00032E00 <AmiBlitz3.ab2@25466> currentlabeladdr:   Dc.l labelbase                       ;lastrescon org source
00032E04 <AmiBlitz3.ab2@25467> currentmacroaddr:   Dc.l macrobase                       ;lastresmac org source
00032E08 <AmiBlitz3.ab2@25468> lastrestype:        Dc.l newtype_string
00032E0A <AmiBlitz3.ab2@25469> rescnt:             Ds.w 1                               ;# resident
00032E0C <AmiBlitz3.ab2@25470> state_of_residents: Ds.w 1                               ;reschg org source ;flag for if res's have changed
00032E10 <AmiBlitz3.ab2@25471> resat:              Dc.l residents_table                 ;??looks like not used anymore??
00032E12 <AmiBlitz3.ab2@25472> linedone:           Ds.w 1
00032E28 <AmiBlitz3.ab2@25473> directbuffer:       Ds.w 11                              ;dirpcat  dc.w 0 org source
00032E2C <AmiBlitz3.ab2@25482>   Dc.l 0                                        ; bytetobyte
00032E30 <AmiBlitz3.ab2@25483>   Dc.l convert_byte_to_word                     ; bytetoword
00032E34 <AmiBlitz3.ab2@25484>   Dc.l convert_byte_to_long                     ; bytetolong
00032E38 <AmiBlitz3.ab2@25485>   Dc.l convert_byte_to_quick                    ; bytetoquick
00032E3C <AmiBlitz3.ab2@25486>   Dc.l convert_byte_to_float                    ; bytetofloat
00032E40 <AmiBlitz3.ab2@25487>   Dc.l convert_byte_to_long                     ; bytetolong
00032E44 <AmiBlitz3.ab2@25488>   Dc.l error_convert_types                      ; noconerr
00032E48 <AmiBlitz3.ab2@25491>   Dc.l convert_word_to_byte                     ; wordtobyte
00032E4C <AmiBlitz3.ab2@25492>   Dc.l 0                                        ; wordtoword
00032E50 <AmiBlitz3.ab2@25493>   Dc.l convert_word_to_long                     ; wordtolong
00032E54 <AmiBlitz3.ab2@25494>   Dc.l convert_word_to_quick                    ; wordtoquick
00032E58 <AmiBlitz3.ab2@25495>   Dc.l convert_word_to_float                    ; wordtofloat
00032E5C <AmiBlitz3.ab2@25496>   Dc.l convert_word_to_long                     ; wordtolong
00032E60 <AmiBlitz3.ab2@25497>   Dc.l error_convert_types                      ; noconerr
00032E64 <AmiBlitz3.ab2@25500>   Dc.l convert_long_to_byte                     ; longtobyte
00032E68 <AmiBlitz3.ab2@25501>   Dc.l convert_long_to_word                     ; longtoword
00032E6C <AmiBlitz3.ab2@25502>   Dc.l 0                                        ; longtolong
00032E70 <AmiBlitz3.ab2@25503>   Dc.l convert_long_to_quick                    ; longtoquick
00032E74 <AmiBlitz3.ab2@25504>   Dc.l convert_long_to_float                    ; longtofloat
00032E78 <AmiBlitz3.ab2@25505>   Dc.l 0                                        ; longtolong
00032E7C <AmiBlitz3.ab2@25506>   Dc.l error_convert_types                      ; noconerr
00032E80 <AmiBlitz3.ab2@25509>   Dc.l convert_quick_to_byte                    ; quicktobyte
00032E84 <AmiBlitz3.ab2@25510>   Dc.l convert_quick_to_word                    ; quicktoword
00032E88 <AmiBlitz3.ab2@25511>   Dc.l convert_quick_to_long                    ; quicktolong
00032E8C <AmiBlitz3.ab2@25512>   Dc.l 0                                        ; quicktoquick
00032E90 <AmiBlitz3.ab2@25513>   Dc.l convert_quick_to_float                   ; quicktofloat
00032E94 <AmiBlitz3.ab2@25514>   Dc.l convert_quick_to_long                    ; quicktolong
00032E98 <AmiBlitz3.ab2@25515>   Dc.l error_convert_types                      ; noconerr
00032E9C <AmiBlitz3.ab2@25518>   Dc.l convert_float_to_byte                    ; floattobyte
00032EA0 <AmiBlitz3.ab2@25519>   Dc.l convert_float_to_word                    ; floattoword
00032EA4 <AmiBlitz3.ab2@25520>   Dc.l convert_float_to_long                    ; floattolong
00032EA8 <AmiBlitz3.ab2@25521>   Dc.l convert_float_to_quick                   ; floattoquick
00032EAC <AmiBlitz3.ab2@25522>   Dc.l 0                                        ; floattofloat
00032EB0 <AmiBlitz3.ab2@25523>   Dc.l convert_float_to_long                    ; floattolong
00032EB4 <AmiBlitz3.ab2@25524>   Dc.l error_convert_types                      ; noconerr
00032EB8 <AmiBlitz3.ab2@25527>   Dc.l convert_long_to_byte                     ; longtobyte
00032EBC <AmiBlitz3.ab2@25528>   Dc.l convert_long_to_word                     ; longtoword
00032EC0 <AmiBlitz3.ab2@25529>   Dc.l 0                                        ; longtolong
00032EC4 <AmiBlitz3.ab2@25530>   Dc.l convert_long_to_quick                    ; longtoquick
00032EC8 <AmiBlitz3.ab2@25531>   Dc.l convert_long_to_float                    ; longtofloat
00032ECC <AmiBlitz3.ab2@25532>   Dc.l 0                                        ; longtolong
00032ED0 <AmiBlitz3.ab2@25533>   Dc.l error_convert_types                      ; noconerr
00032ED4 <AmiBlitz3.ab2@25536>   Dc.l error_convert_types                      ; noconerr
00032ED8 <AmiBlitz3.ab2@25537>   Dc.l error_convert_types                      ; noconerr
00032EDC <AmiBlitz3.ab2@25538>   Dc.l string_to_long                           ; stringtolong
00032EE0 <AmiBlitz3.ab2@25539>   Dc.l error_convert_types                      ; noconerr
00032EE4 <AmiBlitz3.ab2@25540>   Dc.l error_convert_types                      ; noconerr
00032EE8 <AmiBlitz3.ab2@25541>   Dc.l string_to_long                           ; stringtolong
00032EEC <AmiBlitz3.ab2@25542>   Ds.l 1
00032EEE <AmiBlitz3.ab2@25548>   Dc.b $00,$2B                                  ;+ ; add
00032EF2 <AmiBlitz3.ab2@25549>   Dc.l do_plus_byte                             ;doplusb
00032EF6 <AmiBlitz3.ab2@25550>   Dc.l do_plus_word                             ;doplusw
00032EFA <AmiBlitz3.ab2@25551>   Dc.l do_plus_long                             ;doplusl
00032EFE <AmiBlitz3.ab2@25552>   Dc.l do_plus_long                             ;doplusl
00032F02 <AmiBlitz3.ab2@25553>   Dc.l do_plus_float                            ;doplusf
00032F06 <AmiBlitz3.ab2@25554>   Ds.l 1
00032F0A <AmiBlitz3.ab2@25555>   Dc.l add_strings                              ;addstrings
00032F0C <AmiBlitz3.ab2@25556>   Dc.b $0B,$B8
00032F0E <AmiBlitz3.ab2@25558>   Dc.b $00,$2D                                  ;- ; sub
00032F12 <AmiBlitz3.ab2@25559>   Dc.l do_minus_byte                            ;dominusb
00032F16 <AmiBlitz3.ab2@25560>   Dc.l do_minus_word                            ;dominusw
00032F1A <AmiBlitz3.ab2@25561>   Dc.l do_minus_long                            ;dominusl
00032F1E <AmiBlitz3.ab2@25562>   Dc.l do_minus_long                            ;dominusl
00032F22 <AmiBlitz3.ab2@25563>   Dc.l do_minus_float                           ;dominusf
00032F2A <AmiBlitz3.ab2@25564>   Ds.l 2
00032F2C <AmiBlitz3.ab2@25565>   Dc.b $0B,$B8
00032F2E <AmiBlitz3.ab2@25567>   Dc.b $00,$2A                                  ;* ; mul
00032F32 <AmiBlitz3.ab2@25568>   Dc.l do_times_byte                            ;dotimesb
00032F36 <AmiBlitz3.ab2@25569>   Dc.l do_times_word                            ;dotimesw
00032F3A <AmiBlitz3.ab2@25570>   Dc.l do_times_long                            ;dotimesl
00032F3E <AmiBlitz3.ab2@25571>   Dc.l do_times_quick                           ;dotimesq
00032F42 <AmiBlitz3.ab2@25572>   Dc.l do_times_float                           ;dotimesf
00032F4A <AmiBlitz3.ab2@25573>   Ds.l 2
00032F4C <AmiBlitz3.ab2@25574>   Dc.b $0F,$A0
00032F4E <AmiBlitz3.ab2@25576>   Dc.b $00,$2F                                  ;/ ; div
00032F52 <AmiBlitz3.ab2@25577>   Dc.l do_Div_byte                              ;dodivb
00032F56 <AmiBlitz3.ab2@25578>   Dc.l do_Div_word                              ;dodivb
00032F5A <AmiBlitz3.ab2@25579>   Dc.l do_Div_long                              ;dodivl
00032F5E <AmiBlitz3.ab2@25580>   Dc.l do_Div_quick                             ;dodivq
00032F62 <AmiBlitz3.ab2@25581>   Dc.l do_Div_float                             ;dodivf
00032F6A <AmiBlitz3.ab2@25582>   Ds.l 2
00032F6C <AmiBlitz3.ab2@25583>   Dc.b $0F,$A0
00032F6E <AmiBlitz3.ab2@25585>   Dc.b $00,$26                                  ;& ; & int
00032F72 <AmiBlitz3.ab2@25586>   Dc.l do_AND_byte                              ;doandb
00032F76 <AmiBlitz3.ab2@25587>   Dc.l do_AND_word                              ;doandw
00032F7A <AmiBlitz3.ab2@25588>   Dc.l do_AND_long                              ;doandl
00032F7E <AmiBlitz3.ab2@25589>   Dc.l do_AND_long                              ;doandl
00032F8A <AmiBlitz3.ab2@25590>   Ds.l 3
00032F8C <AmiBlitz3.ab2@25591>   Dc.b $13,$88
00032F8E <AmiBlitz3.ab2@25593>   Dc.b $00,$7C                                  ;| ;or int ;
00032F92 <AmiBlitz3.ab2@25594>   Dc.l do_OR_byte                               ;doorb
00032F96 <AmiBlitz3.ab2@25595>   Dc.l do_OR_word                               ;doorw
00032F9A <AmiBlitz3.ab2@25596>   Dc.l do_OR_long                               ;doorl
00032F9E <AmiBlitz3.ab2@25597>   Dc.l do_OR_long                               ;doorl
00032FAA <AmiBlitz3.ab2@25598>   Ds.l 3
00032FAC <AmiBlitz3.ab2@25599>   Dc.b $13,$88
00032FAE <AmiBlitz3.ab2@25601>   Dc.b $80,$42                                  ; AND int  ;(opand-opabcd)/$1c+$8000+fnum
00032FB2 <AmiBlitz3.ab2@25602>   Dc.l do_AND_byte                              ;doandb
00032FB6 <AmiBlitz3.ab2@25603>   Dc.l do_AND_word                              ;doandw
00032FBA <AmiBlitz3.ab2@25604>   Dc.l do_AND_long                              ;doandl
00032FBE <AmiBlitz3.ab2@25605>   Dc.l do_AND_long                              ;doandl
00032FCA <AmiBlitz3.ab2@25606>   Ds.l 3
00032FCC <AmiBlitz3.ab2@25607>   Dc.b $03,$E8
00032FCE <AmiBlitz3.ab2@25609>   Dc.b $80,$8A                                  ; OR int   ;(opor-opabcd)/$1c+$8000+fnum
00032FD2 <AmiBlitz3.ab2@25610>   Dc.l do_OR_byte                               ;doorb
00032FD6 <AmiBlitz3.ab2@25611>   Dc.l do_OR_word                               ;doorw
00032FDA <AmiBlitz3.ab2@25612>   Dc.l do_OR_long                               ;doorl
00032FDE <AmiBlitz3.ab2@25613>   Dc.l do_OR_long                               ;doorl
00032FEA <AmiBlitz3.ab2@25614>   Ds.l 3
00032FEC <AmiBlitz3.ab2@25615>   Dc.b $03,$E8
00032FEE <AmiBlitz3.ab2@25617>   Dc.b $80,$73                                  ; EOR int  ;(opeor-opabcd)/$1c+$8000+fnum
00032FF2 <AmiBlitz3.ab2@25618>   Dc.l do_EOR_byte                              ;doeorb
00032FF6 <AmiBlitz3.ab2@25619>   Dc.l do_EOR_word                              ;doeorw
00032FFA <AmiBlitz3.ab2@25620>   Dc.l do_EOR_long                              ;doeorl
00032FFE <AmiBlitz3.ab2@25621>   Dc.l do_EOR_long                              ;doeorl
0003300A <AmiBlitz3.ab2@25622>   Ds.l 3
0003300C <AmiBlitz3.ab2@25623>   Dc.b $03,$E8
0003300E <AmiBlitz3.ab2@25625>   Dc.b $80,$7C                                  ; LSL int  ;(oplsl-opabcd)/$1c+$8000+fnum
00033012 <AmiBlitz3.ab2@25626>   Dc.l do_LSL                                   ;dolslb
00033016 <AmiBlitz3.ab2@25627>   Dc.l do_LSL                                   ;dolslw
0003301A <AmiBlitz3.ab2@25628>   Dc.l do_LSL                                   ;dolsll
0003301E <AmiBlitz3.ab2@25629>   Dc.l do_LSL                                   ;dolsll
0003302A <AmiBlitz3.ab2@25630>   Ds.l 3
0003302C <AmiBlitz3.ab2@25631>   Dc.b $17,$70
0003302E <AmiBlitz3.ab2@25633>   Dc.b $80,$44                                  ; ASL int  ;(opasl-opabcd)/$1c+$8000+fnum
00033032 <AmiBlitz3.ab2@25634>   Dc.l do_LSL                                   ;dolslb
00033036 <AmiBlitz3.ab2@25635>   Dc.l do_LSL                                   ;dolslw
0003303A <AmiBlitz3.ab2@25636>   Dc.l do_LSL                                   ;dolsll
0003303E <AmiBlitz3.ab2@25637>   Dc.l do_LSL                                   ;dolsll
0003304A <AmiBlitz3.ab2@25638>   Ds.l 3
0003304C <AmiBlitz3.ab2@25639>   Dc.b $17,$70
0003304E <AmiBlitz3.ab2@25641>   Dc.b $80,$7D                                  ; LSR int  ;(oplsr-opabcd)/$1c+$8000+fnum
00033052 <AmiBlitz3.ab2@25642>   Dc.l do_LSR                                   ;dolsrb
00033056 <AmiBlitz3.ab2@25643>   Dc.l do_LSR                                   ;dolsrw
0003305A <AmiBlitz3.ab2@25644>   Dc.l do_LSR                                   ;dolsrl
0003305E <AmiBlitz3.ab2@25645>   Dc.l do_LSR                                   ;dolsrl
0003306A <AmiBlitz3.ab2@25646>   Ds.l 3
0003306C <AmiBlitz3.ab2@25647>   Dc.b $17,$70
0003306E <AmiBlitz3.ab2@25649>   Dc.b $80,$45                                  ; ASR int  ;(opasr-opabcd)/$1c+$8000+fnum
00033072 <AmiBlitz3.ab2@25650>   Dc.l do_ASR                                   ;doasrb
00033076 <AmiBlitz3.ab2@25651>   Dc.l do_ASR                                   ;doasrw
0003307A <AmiBlitz3.ab2@25652>   Dc.l do_ASR                                   ;doasrl
0003307E <AmiBlitz3.ab2@25653>   Dc.l do_ASR                                   ;doasrl
0003308A <AmiBlitz3.ab2@25654>   Ds.l 3
0003308C <AmiBlitz3.ab2@25655>   Dc.b $17,$70
0003308E <AmiBlitz3.ab2@25657>   Dc.b $80,$B9                                  ;mod       ;$8006+tnum
00033092 <AmiBlitz3.ab2@25658>   Dc.l do_mod_byte                              ;domodb
00033096 <AmiBlitz3.ab2@25659>   Dc.l do_mod_word                              ;domodw
0003309A <AmiBlitz3.ab2@25660>   Dc.l do_mod_long                              ;domodl
0003309E <AmiBlitz3.ab2@25661>   Dc.l do_mod_quick                             ;domodq
000330A2 <AmiBlitz3.ab2@25662>   Dc.l do_mod_float                             ;domodf
000330AA <AmiBlitz3.ab2@25663>   Ds.l 2
000330AC <AmiBlitz3.ab2@25664>   Dc.b $13,$88
000330AE <AmiBlitz3.ab2@25667>   Dc.b $00,$5E                                  ;^
000330B2 <AmiBlitz3.ab2@25668>   Dc.l do_pow                                   ;dopow
000330B6 <AmiBlitz3.ab2@25669>   Dc.l do_pow                                   ;dopow
000330BA <AmiBlitz3.ab2@25670>   Dc.l do_pow                                   ;dopow
000330BE <AmiBlitz3.ab2@25671>   Dc.l do_pow                                   ;dopow
000330C2 <AmiBlitz3.ab2@25672>   Dc.l do_pow                                   ;dopow
000330CA <AmiBlitz3.ab2@25673>   Ds.l 2
000330CC <AmiBlitz3.ab2@25674>   Dc.b $1B,$58                                  ;7000
000330CE <AmiBlitz3.ab2@25677>   Dc.b $00,$3D                                  ;=
000330D2 <AmiBlitz3.ab2@25678>   Dc.l do_equal_byte                            ;doeqb
000330D6 <AmiBlitz3.ab2@25679>   Dc.l do_equal_word                            ;doeqw
000330DA <AmiBlitz3.ab2@25680>   Dc.l do_equal_long                            ;doeql
000330DE <AmiBlitz3.ab2@25681>   Dc.l do_equal_long                            ;doeql
000330E2 <AmiBlitz3.ab2@25682>   Dc.l do_equal_float                           ;doeqf
000330E6 <AmiBlitz3.ab2@25683>   Dc.l do_equal_long                            ;doeql
000330EA <AmiBlitz3.ab2@25684>   Dc.l do_equal_string                          ;doeqs
000330EC <AmiBlitz3.ab2@25685>   Dc.b $07,$D0                                  ;2000
000330EE <AmiBlitz3.ab2@25688>   Dc.b $3C,$3E                                  ;<>
000330F2 <AmiBlitz3.ab2@25689>   Dc.l do_not_equal_byte                        ;doneb
000330F6 <AmiBlitz3.ab2@25690>   Dc.l do_not_equal_word                        ;donew
000330FA <AmiBlitz3.ab2@25691>   Dc.l do_not_equal_long                        ;donel
000330FE <AmiBlitz3.ab2@25692>   Dc.l do_not_equal_long                        ;donel
00033102 <AmiBlitz3.ab2@25693>   Dc.l do_not_equal_float                       ;donef
00033106 <AmiBlitz3.ab2@25694>   Dc.l do_not_equal_long                        ;donel
0003310A <AmiBlitz3.ab2@25695>   Dc.l do_not_equal_string                      ;dones
0003310C <AmiBlitz3.ab2@25696>   Dc.b $07,$D0                                  ;2000
0003310E <AmiBlitz3.ab2@25699>   Dc.b $00,$3C                                  ;<
00033112 <AmiBlitz3.ab2@25700>   Dc.l do_littler_byte                          ;doltb
00033116 <AmiBlitz3.ab2@25701>   Dc.l do_littler_word                          ;doltw
0003311A <AmiBlitz3.ab2@25702>   Dc.l do_littler_long                          ;doltl
0003311E <AmiBlitz3.ab2@25703>   Dc.l do_littler_long                          ;doltl
00033122 <AmiBlitz3.ab2@25704>   Dc.l do_littler_float                         ;doltf
00033126 <AmiBlitz3.ab2@25705>   Dc.l do_littler_long                          ;doltl
0003312A <AmiBlitz3.ab2@25706>   Dc.l do_littler_string                        ;dolts
0003312C <AmiBlitz3.ab2@25707>   Dc.b $07,$D0                                  ;2000
0003312E <AmiBlitz3.ab2@25710>   Dc.b $3C,$3D                                  ;<=
00033132 <AmiBlitz3.ab2@25711>   Dc.l do_littler_equal_byte                    ;doleb
00033136 <AmiBlitz3.ab2@25712>   Dc.l do_littler_equal_word                    ;doleb
0003313A <AmiBlitz3.ab2@25713>   Dc.l do_littler_equal_long                    ;dolel
0003313E <AmiBlitz3.ab2@25714>   Dc.l do_littler_equal_long                    ;dolel
00033142 <AmiBlitz3.ab2@25715>   Dc.l do_littler_equal_float                   ;dolef
00033146 <AmiBlitz3.ab2@25716>   Dc.l do_littler_equal_long                    ;dolel
0003314A <AmiBlitz3.ab2@25717>   Dc.l do_littler_equal_string                  ;doles
0003314C <AmiBlitz3.ab2@25718>   Dc.b $07,$D0                                  ;2000
0003314E <AmiBlitz3.ab2@25721>   Dc.b $00,$3E                                  ;>
00033152 <AmiBlitz3.ab2@25722>   Dc.l do_greater_byte                          ;dogtb
00033156 <AmiBlitz3.ab2@25723>   Dc.l do_greater_word                          ;dogtw
0003315A <AmiBlitz3.ab2@25724>   Dc.l do_greater_long                          ;dogtl
0003315E <AmiBlitz3.ab2@25725>   Dc.l do_greater_long                          ;dogtl
00033162 <AmiBlitz3.ab2@25726>   Dc.l do_greater_float                         ;dogtf
00033166 <AmiBlitz3.ab2@25727>   Dc.l do_greater_long                          ;dogtl
0003316A <AmiBlitz3.ab2@25728>   Dc.l do_greater_string                        ;dogts
0003316C <AmiBlitz3.ab2@25729>   Dc.b $07,$D0                                  ;2000
0003316E <AmiBlitz3.ab2@25732>   Dc.b $3E,$3D                                  ;>=
00033172 <AmiBlitz3.ab2@25733>   Dc.l do_greater_equal_byte                    ;dogeb
00033176 <AmiBlitz3.ab2@25734>   Dc.l do_greater_equal_word                    ;dogew
0003317A <AmiBlitz3.ab2@25735>   Dc.l do_greater_equal_long                    ;dogel
0003317E <AmiBlitz3.ab2@25736>   Dc.l do_greater_equal_long                    ;dogel
00033182 <AmiBlitz3.ab2@25737>   Dc.l do_greater_equal_float                   ;dogef
00033186 <AmiBlitz3.ab2@25738>   Dc.l do_greater_equal_long                    ;dogel
0003318A <AmiBlitz3.ab2@25739>   Dc.l do_greater_equal_string                  ;doges
0003318C <AmiBlitz3.ab2@25740>   Dc.b $07,$D0                                  ;2000
0003318E <AmiBlitz3.ab2@25742>   Dc.b $80,$CD                                  ;$8000+26+tnum
00033192 <AmiBlitz3.ab2@25743>   Dc.l _BitTst
00033196 <AmiBlitz3.ab2@25744>   Dc.l _BitTst
0003319A <AmiBlitz3.ab2@25745>   Dc.l _BitTst
0003319E <AmiBlitz3.ab2@25746>   Dc.l _BitTst
000331AA <AmiBlitz3.ab2@25747>   Ds.l 3
000331AC <AmiBlitz3.ab2@25748>   Dc.b $1F,$40                                  ;8000
000331AE <AmiBlitz3.ab2@25750>   Dc.b $80,$CE                                  ;$8000+27+tnum
000331B2 <AmiBlitz3.ab2@25751>   Dc.l _BitSet
000331B6 <AmiBlitz3.ab2@25752>   Dc.l _BitSet
000331BA <AmiBlitz3.ab2@25753>   Dc.l _BitSet
000331BE <AmiBlitz3.ab2@25754>   Dc.l _BitSet
000331CA <AmiBlitz3.ab2@25755>   Ds.l 3
000331CC <AmiBlitz3.ab2@25756>   Dc.b $1F,$40                                  ;8000
000331CE <AmiBlitz3.ab2@25758>   Dc.b $80,$CF                                  ;$8000+28+tnum
000331D2 <AmiBlitz3.ab2@25759>   Dc.l _BitClr
000331D6 <AmiBlitz3.ab2@25760>   Dc.l _BitClr
000331DA <AmiBlitz3.ab2@25761>   Dc.l _BitClr
000331DE <AmiBlitz3.ab2@25762>   Dc.l _BitClr
000331EA <AmiBlitz3.ab2@25763>   Ds.l 3
000331EC <AmiBlitz3.ab2@25764>   Dc.b $1F,$40                                  ;8000
000331EE <AmiBlitz3.ab2@25766>   Dc.b $80,$D0                                  ;$8000+29+tnum
000331F2 <AmiBlitz3.ab2@25767>   Dc.l _BitChg
000331F6 <AmiBlitz3.ab2@25768>   Dc.l _BitChg
000331FA <AmiBlitz3.ab2@25769>   Dc.l _BitChg
000331FE <AmiBlitz3.ab2@25770>   Dc.l _BitChg
0003320A <AmiBlitz3.ab2@25771>   Ds.l 3
0003320C <AmiBlitz3.ab2@25772>   Dc.b $1F,$40                                  ;8000
0003320E <AmiBlitz3.ab2@25774>   Dc.b $00,$00
00033212 <AmiBlitz3.ab2@25779> modetable:   Dc.l typemode
00033216 <AmiBlitz3.ab2@25782> newtypebase: Dc.l newtype_byte
0003321E <AmiBlitz3.ab2@25785>   Dc.l newtype_word,$01                                    
00033220 <AmiBlitz3.ab2@25786>   Dc.w $0001
00033224 <AmiBlitz3.ab2@25787>   Dc.b 13,"b",0,0
0003322C <AmiBlitz3.ab2@25790>   Dc.l newtype_long,$02
0003322E <AmiBlitz3.ab2@25791>   Dc.w $0002
00033232 <AmiBlitz3.ab2@25792>   Dc.b 13,"w",0,0
0003323A <AmiBlitz3.ab2@25795>   Dc.l newtype_quick,$03                                   
0003323C <AmiBlitz3.ab2@25796>   Dc.w $0004
00033240 <AmiBlitz3.ab2@25797>   Dc.b 13,"l",0,0
00033248 <AmiBlitz3.ab2@25800>   Dc.l newtype_float,$04                                   
0003324A <AmiBlitz3.ab2@25801>   Dc.w $0004
0003324E <AmiBlitz3.ab2@25802>   Dc.b 13,"q",0,0
00033256 <AmiBlitz3.ab2@25806>   Dc.l newtype_double,$05                                  ;make problems on old residents
00033258 <AmiBlitz3.ab2@25807>   Dc.w $0004
0003325C <AmiBlitz3.ab2@25808>   Dc.b 13,"f",0,0
00033264 <AmiBlitz3.ab2@25811>   Dc.l newtype_double,$06
00033266 <AmiBlitz3.ab2@25812>   Dc.w $0004
0003326A <AmiBlitz3.ab2@25813>   Dc.b 13,"a",0,0
00033272 <AmiBlitz3.ab2@25816>   Dc.l newtype_string,$05                                  ;?? has to by $06 becous is number 6 not 5
00033274 <AmiBlitz3.ab2@25817>   Dc.w $0008
00033278 <AmiBlitz3.ab2@25818>   Dc.b 13,"d",0,0
00033280 <AmiBlitz3.ab2@25822>   Dc.l $0000000,$07                                        ;stringtype
00033282 <AmiBlitz3.ab2@25823>   Dc.w $0004
00033286 <AmiBlitz3.ab2@25824>   Dc.b 13,"s",0,0
0003328E <AmiBlitz3.ab2@25827>   Dc.l $00,$00
00033290 <AmiBlitz3.ab2@25828>   Dc.w $0000
00033294 <AmiBlitz3.ab2@25829>   Dc.b $01,$00,$00,$00
000332F4 <AmiBlitz3.ab2@25832> incdir:               Ds.l 24                              ;dcb.b   96,0    org source
000332F6 <AmiBlitz3.ab2@25836> dirmode:              Ds.w 1                               ;shows if directmode is on
000332FA <AmiBlitz3.ab2@25838>                       Ds.l 1                               ;int org source ;intuition!
000332FC <AmiBlitz3.ab2@25839> maxobject_pos:        Ds.w 1                               ;maxat org source ;max at
00033300 <AmiBlitz3.ab2@25840> maxsat:               Ds.l 1                               ;data1 info pos
00033302 <AmiBlitz3.ab2@25841> number_of_objects:    Ds.w 1                               ;nummaxs org source ;number of maximums
00033304 <AmiBlitz3.ab2@25843> maxsused:             Ds.w 1                               ;maximums used in prog
00033306 <AmiBlitz3.ab2@25847> dark:                 Ds.w 1                               ;dark compile?
00033308 <AmiBlitz3.ab2@25848> qlab:                 Ds.w 1                               ;quick lab allocate
0003330C <AmiBlitz3.ab2@25849> defaulttype:          Dc.l newtype_quick                   ;dc.l quicktype org source
0003330E <AmiBlitz3.ab2@25854> anyerrs:              Dc.w -1                              ;Any Errors in compile ?
00033310 <AmiBlitz3.ab2@25855> debugversion:         Ds.w 1                               ;makeexec org source ;make an executable file!
00033314 <AmiBlitz3.ab2@25856> noinits:              Ds.l 1                               ;flag for if we have any init routines!
00033318 <AmiBlitz3.ab2@25858> letstart:             Ds.l 1
0003331A <AmiBlitz3.ab2@25859> dontwrite:            Ds.w 1                               ;nomemleft org source
0003339A <AmiBlitz3.ab2@25860> lastgloballabel:      Ds.l 32                              ;lastbiglab ds.b 128 org source
0003339E <AmiBlitz3.ab2@25862> locdatast:            Ds.l 1
000333A2 <AmiBlitz3.ab2@25863> firstpend:            Ds.l 1
000333A6 <AmiBlitz3.ab2@25867> data2at:              Ds.l 1
000333AA <AmiBlitz3.ab2@25868> data2:                Ds.l 1
000333AE <AmiBlitz3.ab2@25869> data1start:           Ds.l 1                               ;data1at org source
000333B2 <AmiBlitz3.ab2@25870> data1:                Ds.l 1                               ;pc for initialized data!
000333B6 <AmiBlitz3.ab2@25871> destbufferstart:      Ds.l 1                               ;pcat org source
000333BA <AmiBlitz3.ab2@25875> destbufferend:        Ds.l 1                               ;libat org source
000333BE <AmiBlitz3.ab2@25876> libend:               Ds.l 1                               ;lib org source
000333C2 <AmiBlitz3.ab2@25877> allat:                Ds.l 1                               ;highest allocmemd location for code
000333CC <AmiBlitz3.ab2@25878> dummyasm:             Dc.w 0,0,0,0,0
000333D0 <AmiBlitz3.ab2@25879>                       Dc.l 0
000333D2 <AmiBlitz3.ab2@25880>                       Dc.w 0
000333D6 <AmiBlitz3.ab2@25884> buff1:                Ds.l 1                               ;buffer for text get
000333DA <AmiBlitz3.ab2@25885> buff2:                Ds.l 1                               ;ditto for dest
000333DC <AmiBlitz3.ab2@25886> constmode:            Ds.w 1                               ;0 for norm, <>0 for assembler
000333DE <AmiBlitz3.ab2@25887> asmtype:              Ds.w 1                               ;0=contains no prog reference
000333E0 <AmiBlitz3.ab2@25888> extraword:            Ds.w 1                               ;the extension word for assembler
000333E2 <AmiBlitz3.ab2@25889> extraword2:           Ds.w 1                               ;ditto
000333E4 <AmiBlitz3.ab2@25890> asmsize:              Ds.w 1
000333E8 <AmiBlitz3.ab2@25891> asmbuff:              Ds.l 1
000333EA <AmiBlitz3.ab2@25892> asmlen:               Ds.w 1                               ;first (src) text len
000333EC <AmiBlitz3.ab2@25893> asmlen2:              Ds.w 1                               ;second (dest)
000333F0 <AmiBlitz3.ab2@25894> templabel:            Ds.l 1                               ;linked list of expressions to resolve
000333F2 <AmiBlitz3.ab2@25897> macnum:               Ds.w 1
000333F6 <AmiBlitz3.ab2@25899>                       Dc.l 0                               ;address of next 0 in include fil
000333FA <AmiBlitz3.ab2@25900> titleat:              Ds.l 1                               ;5 longs for compile streaks
00033404 <AmiBlitz3.ab2@25901> progress_per_line:    Ds.w 5                               ;titleadd ds 5 org source ;5 adds for compile streaks
00033406 <AmiBlitz3.ab2@25902> connest:              Ds.w 1                               ;conditional nest level
0003340A <AmiBlitz3.ab2@25903> firstconst:           Ds.l 1                               ;first constant (#a)
0003340C <AmiBlitz3.ab2@25904> numarg:               Ds.w 1                               ;number of macro arguements
00033410 <AmiBlitz3.ab2@25905> myoline:              Ds.l 1                               ;macro done yet?
00033414 <AmiBlitz3.ab2@25906> myline:               Ds.l 1                               ;pointer to some memory to create
00033418 <AmiBlitz3.ab2@25909>                       Ds.l 1
00033458 <AmiBlitz3.ab2@25910> concomstack:          Ds.l 16                              ;32 deep conditional compilation
0003345C <AmiBlitz3.ab2@25911> concomsp:             Dc.l concomstack                     ;stack pointer
0003345E <AmiBlitz3.ab2@25912> oldqflag:             Ds.w 1
00033462 <AmiBlitz3.ab2@25915>                       Ds.l 1
00033464 <AmiBlitz3.ab2@25917>                       Ds.w 1
00033468 <AmiBlitz3.ab2@25918> firstfor:             Ds.l 1                               ;first for
0003346A <AmiBlitz3.ab2@25919> stackpar:             Ds.w 1                               ;pushflag org source ;1 par to stack 0 normal
0003346C <AmiBlitz3.ab2@25920> sbgot:                Ds.w 1                               ;flag for string got 2
0003346E <AmiBlitz3.ab2@25921> convsize:             Ds.w 1                               ;usertype org source
00033470 <AmiBlitz3.ab2@25922> userp:                Ds.w 1
00033474 <AmiBlitz3.ab2@25927> ptr_userlibs_list:    Ds.l 1                               ;libslist org source
00033476 <AmiBlitz3.ab2@25928> a2offset:             Ds.w 1                               ;stackuse org source ;stack used when gathering lib parameters
00033478 <AmiBlitz3.ab2@25929> numreps:              Ds.w 1                               ;number of repeats in a repeatable
0003347C <AmiBlitz3.ab2@25931> locloc:               Ds.l 1
0003347E <AmiBlitz3.ab2@25932> locchar:              Ds.w 1
000334FE <AmiBlitz3.ab2@25933> stbuff:               Ds.l 32                              ;was 8    ;six string varoffs
00033500 <AmiBlitz3.ab2@25934> commode:              Ds.w 1                               ;in comma mode...
00033504 <AmiBlitz3.ab2@25935> lastoffset_org:       Ds.l 1                               ;lastoffset org source ;last offset in calcvar!
00033508 <AmiBlitz3.ab2@25936> linenumat:            Dc.l $FFFFFFFF                       ;linecounter ;dc -1 org source ;line being processed
0003350C <AmiBlitz3.ab2@25937> compilelinecounter:   Dc.l $FFFFFFFF                       ;menuret dc -1 org source ;menu return code
0003350E <AmiBlitz3.ab2@25939>                       Ds.w 1                               ;opt reset offset
0003360E <AmiBlitz3.ab2@25941>                       Ds.l 64                              ;Ds.b vcodelen org source ;code used to generate
0003370E <AmiBlitz3.ab2@25943>                       Ds.l 64                              ;Ds.b vcodelen org source ;above for let.....
00033710 <AmiBlitz3.ab2@25944> varcodelen:           Ds.w 1                               ;and length
00033712 <AmiBlitz3.ab2@25946>                       Ds.w 1
00033718 <AmiBlitz3.ab2@25947> oldvcodelen:          Ds.w 3                               ;old varcodelen
0003371C <AmiBlitz3.ab2@25951> tempvm:               Ds.l 1                               ;memlib org source ;address of memory library
0003371E <AmiBlitz3.ab2@25952> memlibstat:           Ds.w 1                               ;status of memory library during
00033720 <AmiBlitz3.ab2@25955>                       Dc.w 0
00033722 <AmiBlitz3.ab2@25957>                       Dc.w 0
00033724 <AmiBlitz3.ab2@25959> varmode:              Ds.w 1                               ;0 a5 pointer to global
00033728 <AmiBlitz3.ab2@25961> currentfunction:      Ds.l 1                               ;thisproc org source
0003372C <AmiBlitz3.ab2@25962> firstproc:            Ds.l 1                               ;firstproc org source ;this procedure being 'done'
0003372E <AmiBlitz3.ab2@25963> 
00033730 <AmiBlitz3.ab2@25965> skipcode:             Ds.w 1                               ;nocompile ;comflag org source ;0 if no compile
00033734 <AmiBlitz3.ab2@25966> passstack:            Ds.l 1
00033738 <AmiBlitz3.ab2@25967> zero:                 Ds.l 1                               ;ZERO!
0003373A <AmiBlitz3.ab2@25968> ininclude:            Ds.w 1                               ;numincs org source ;number of include files
0003373E <AmiBlitz3.ab2@25970> xinclude_base:        Ds.l 1                               ;firstxinc org source ;first exclusive include.
00033742 <AmiBlitz3.ab2@25971> constantbase:         Ds.l 1                               ;firstinc org source ;first include
00033744 <AmiBlitz3.ab2@25972> lasta6:               Dc.w $FFFF                           ;-1 org source
00033746 <AmiBlitz3.ab2@25973> instringon:           Ds.w 1                               ;quoteflag org source
0003374A <AmiBlitz3.ab2@25974> ptr_macrobuffer_begin:Ds.l 1                               ;macrobuff org source ;pointer to macro collection buffer ;begin
0003374E <AmiBlitz3.ab2@25975> ptr_macrobuffer_end:  Ds.l 1                               ;macrobufff org source ;end of above ;end of
00033752 <AmiBlitz3.ab2@25976> macrobase:            Ds.l 1                               ;firstmacro org source ;linked list of macro's ;macrolist
00033756 <AmiBlitz3.ab2@25977> endop:                Ds.l 1                               ;end of program pc - before finishups!
0003375A <AmiBlitz3.ab2@25978> labelbase:            Ds.l 1                               ;firstlabel org source ;first lib struct
0003375E <AmiBlitz3.ab2@25979> end_of_tokenlist:     Ds.l 1                               ;lasttoken org source
00033760 <AmiBlitz3.ab2@25980> numstatic:            Ds.w 1                               ;number of static structs
00033764 <AmiBlitz3.ab2@25981> staticdata:           Ds.l 1                               ;data1 val for statics
00033768 <AmiBlitz3.ab2@25982> libpointer:           Ds.l 1                               ;firstlib org source ;first lib struct
0003376A <AmiBlitz3.ab2@25983> sbasegot:             Ds.w 1                               ;string base got?
0003376E <AmiBlitz3.ab2@25984> litdata1:             Ds.l 1
00033772 <AmiBlitz3.ab2@25988> objlen:               Ds.l 1
00033776 <AmiBlitz3.ab2@25989> hunkoffsetcounter:    Ds.l 1                               ;numoffs org source
0003377A <AmiBlitz3.ab2@25990> hunkoffsetbase:       Ds.l 1                               ;firstoff org source ;pointer to linked list
0003377C <AmiBlitz3.ab2@25992> flagmask:             Ds.w 1                               ;mask for flag of variable when
0003377E <AmiBlitz3.ab2@25994> notshared:            Ds.w 1                               ;added org source ;flag for seeing if variable was added!
00033780 <AmiBlitz3.ab2@25995> nonew:                Ds.w 1                               ;1 to inhibit new variable creation
00033784 <AmiBlitz3.ab2@25996> temp1:                Ds.l 1
00033788 <AmiBlitz3.ab2@25997> temp2:                Ds.l 1
0003378C <AmiBlitz3.ab2@25999> ptr_parameterstore:   Ds.l 1                               ;namebuff ds.b 128 org source
00033790 <AmiBlitz3.ab2@26000> fib_DirEntryType:     Ds.l 1                               ;namebuff+4 org source
00033804 <AmiBlitz3.ab2@26001> fib_FileName:         Ds.l 29                              ;namebuff+8 org source
00033808 <AmiBlitz3.ab2@26002> fib_Size:             Ds.l 1                               ;namebuff+124 org source
00033888 <AmiBlitz3.ab2@26004> namebuff2:            Ds.b 128
00033890 <AmiBlitz3.ab2@26005>                       Ds.b 8                               ;for fileinfoblock
000338D0 <AmiBlitz3.ab2@26008> optstuff:             Ds.b 64                              ;temp opt make buffer
0003390E <AmiBlitz3.ab2@26016>   !ComData_GetL{comFunc_OpenCompilerWindow,A1}
00033914 <AmiBlitz3.ab2@26017>   MOVE.l #1000,D0
00033916 <AmiBlitz3.ab2@26018>   JSR (A1)
00033918 <AmiBlitz3.ab2@26019> RTS
0003391A <AmiBlitz3.ab2@26025>   Dc.b $00,$01                                             ; 1 byte schreiben ;one byte stuff...
0003391E <AmiBlitz3.ab2@26026>   Dc.l xtra_versionnumber                                  ; vers org source
00033922 <AmiBlitz3.ab2@26027>   Dc.l create_iconfile                                     ; create icon for executable
00033926 <AmiBlitz3.ab2@26028>   Ds.l 1
00033928 <AmiBlitz3.ab2@26030>   Dc.b $00,$02                                             ; 2 bytes schreiben  ;two byte stuff...
0003392C <AmiBlitz3.ab2@26033>   Dc.l set_use_debugger
00033930 <AmiBlitz3.ab2@26034>   Dc.l AL_0_11010                                          ;+obsolet: debugger
00033934 <AmiBlitz3.ab2@26035>   Dc.l AL_0_1103C                                          ;+obsolet: long arrays
00033938 <AmiBlitz3.ab2@26036>   Dc.l AL_0_11068                                          ;+obsolet: expand macros
0003393C <AmiBlitz3.ab2@26037>   Dc.l AL_0_11094                                          ;+obsolet: quoted macros
00033940 <AmiBlitz3.ab2@26038>   Dc.l set_make_smallestcode
00033944 <AmiBlitz3.ab2@26039>   Dc.l set_link_debuginfo
00033948 <AmiBlitz3.ab2@26040>   Dc.l set_autorun
0003394C <AmiBlitz3.ab2@26041>   Dc.l set_interruptcheck
00033950 <AmiBlitz3.ab2@26042>   Dc.l set_assemblercheck
00033954 <AmiBlitz3.ab2@26044>   Dc.l set_overflowcheck
00033958 <AmiBlitz3.ab2@26045>   Dc.l default_obsolete                                    ;+obsolet: ohne inhalt
0003395C <AmiBlitz3.ab2@26046>   Dc.l default_interruptcheck                              ;+obsolet: interruptcheck vorgabe
00033960 <AmiBlitz3.ab2@26047>   Dc.l default_overflowcheck                               ;+obsolet: overflow vorgabe
00033964 <AmiBlitz3.ab2@26050>   Ds.l 1
00033966 <AmiBlitz3.ab2@26052>   Dc.b $00,$04                                             ; 4 bytes schreiben..  ;four byte stuff...
0003396A <AmiBlitz3.ab2@26059>   Dc.l objectbuffer
0003396E <AmiBlitz3.ab2@26060>   Dc.l libsbuffer
00033972 <AmiBlitz3.ab2@26061>   Dc.l systembuffer
00033976 <AmiBlitz3.ab2@26062>   Dc.l databuffer
0003397A <AmiBlitz3.ab2@26063>   Dc.l macrobuffer_size
0003397E <AmiBlitz3.ab2@26064>   Dc.l stringbuffer
00033982 <AmiBlitz3.ab2@26067>   Ds.l 1
00033984 <AmiBlitz3.ab2@26071>   Dc.b $02,$20                                             ;dc 68*8; 544 bytes schreiben.
0003398C <AmiBlitz3.ab2@26072>   Dc.l residents_table,0
0003398E <AmiBlitz3.ab2@26076>   Dc.b $01,$80                                             ;dc 192*2; 384 bytes schreiben
00033996 <AmiBlitz3.ab2@26077>   Dc.l exepath,0                                           ; exepath und exefilename jeweils 192 bytes
00033998 <AmiBlitz3.ab2@26078>   Ds.w 1
00033A94 <AmiBlitz3.ab2@26082>   Ds.l 63
00033B90 <AmiBlitz3.ab2@26083>   Ds.l 63
00033C8C <AmiBlitz3.ab2@26084>   Ds.l 63
00033D6E <AmiBlitz3.ab2@26085>   Ds.w 113
00033D70 <AmiBlitz3.ab2@26088> comsettings_message:  Ds.w 1                               ;allchg org source
00033D72 <AmiBlitz3.ab2@26089> xtra_versionnumber:   Ds.w 1                               ;vers org source
00033D78 <AmiBlitz3.ab2@26093>   CLR.b exefilename
00033D7A <AmiBlitz3.ab2@26094>   TST.l d0
00033D7E <AmiBlitz3.ab2@26095>   BNE read_xtrafile__l10
00033D80 <AmiBlitz3.ab2@26096> RTS
00033D86 <AmiBlitz3.ab2@26099>   JSR free_residents                                       ;jsr freeres2 org source
00033D8C <AmiBlitz3.ab2@26100> 
00033D92 <AmiBlitz3.ab2@26101>   LEA ptr_xtradata,A2
00033D94 <AmiBlitz3.ab2@26102>   MOVEQ.l #$00,D4
00033D96 <AmiBlitz3.ab2@26105>     MOVE.w (A2)+,D4                                        ; anzahl bytes zum lesen
00033D9A <AmiBlitz3.ab2@26106>     BEQ.b read_xtrafile__done
00033D9C <AmiBlitz3.ab2@26109>     MOVE.l (A2)+,D2
00033DA0 <AmiBlitz3.ab2@26110>   BEQ.b read_xtrafile__loop
00033DA2 <AmiBlitz3.ab2@26112>   MOVE.l D4,D3
00033DA4 <AmiBlitz3.ab2@26113>   MOVE.l D7,D1
00033DA8 <AmiBlitz3.ab2@26114>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
00033DAA <AmiBlitz3.ab2@26115>   TST.l D0
00033DAE <AmiBlitz3.ab2@26116>   BNE.b read_xtrafile__loop2
00033DB2 <AmiBlitz3.ab2@26117> BRA.w read_xtrafile__done2
00033DB8 <AmiBlitz3.ab2@26120>   TST.b xtra_versionnumber
00033DBC <AmiBlitz3.ab2@26121>    BNE.b read_xtrafile__nover0
00033DC4 <AmiBlitz3.ab2@26122>   MOVE.w #$0080,set_autorun                                ;auto run on
00033DCE <AmiBlitz3.ab2@26123>   MOVE.w default_interruptcheck,set_interruptcheck         ;interupt checking on
00033DD4 <AmiBlitz3.ab2@26124>   CLR.w set_assemblercheck                                 ;assembler checking off
00033DDE <AmiBlitz3.ab2@26125>   MOVE.w default_overflowcheck,set_overflowcheck           ;overflow chex
00033DE2 <AmiBlitz3.ab2@26126> BRA.b read_xtrafile__ver0
00033DE4 <AmiBlitz3.ab2@26129>   MOVE.l D7,D1                                             ;load cli arg!
00033DEA <AmiBlitz3.ab2@26130>   MOVE.l #str_cliarguments,D2
00033DF0 <AmiBlitz3.ab2@26131>   MOVE.l #116,D3                                           ; vorher 128 , jetzt 8 weniger fuer die Versionsdaten
00033DF4 <AmiBlitz3.ab2@26132>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
00033DFA <AmiBlitz3.ab2@26133>   MOVE.l #str_cliarguments,A0
00033E00 <AmiBlitz3.ab2@26134>   ADDA.l #115,A0
00033E06 <AmiBlitz3.ab2@26135>   MOVE.l #0,(a0) ; terminate it!
00033E08 <AmiBlitz3.ab2@26137>   MOVE.l D7,D1                                             ; I know, I know. Honitos started this horrible thing, see below...
00033E0E <AmiBlitz3.ab2@26138>   MOVE.l #stacksize,D2
00033E14 <AmiBlitz3.ab2@26139>   MOVE.l #4,D3
00033E18 <AmiBlitz3.ab2@26140>   JSR _Read(A6)
00033E22 <AmiBlitz3.ab2@26141>   CMP.l ##MIN_STACKSIZE,stacksize
00033E26 <AmiBlitz3.ab2@26142>   BGE 'stackok
00033E30 <AmiBlitz3.ab2@26143>   MOVE.l ##MIN_STACKSIZE,stacksize
00033E32 <AmiBlitz3.ab2@26146>   MOVE.l D7,D1
00033E38 <AmiBlitz3.ab2@26147>   MOVE.l #versioninformation,D2
00033E3E <AmiBlitz3.ab2@26148>   MOVE.l #4,D3
00033E42 <AmiBlitz3.ab2@26149>   JSR _Read(A6)
00033E44 <AmiBlitz3.ab2@26151>   MOVE.l D7,D1
00033E4A <AmiBlitz3.ab2@26152>   MOVE.l #number_of_builds,D2
00033E50 <AmiBlitz3.ab2@26153>   MOVE.l #4,D3
00033E54 <AmiBlitz3.ab2@26154>   JSR _Read(A6)
00033E5A <AmiBlitz3.ab2@26160>   MOVE.l A7,errstack
00033E64 <AmiBlitz3.ab2@26161>   MOVE.l #read_xtrafile__done2,errcont
00033E6C <AmiBlitz3.ab2@26162>   MOVE.w #$FFFF,ezerr
00033E72 <AmiBlitz3.ab2@26165>     MOVE.l #temp1,D2                                   ;LOAD maxobjectsvalues
00033E74 <AmiBlitz3.ab2@26166>     MOVEQ.l #$04,D3
00033E76 <AmiBlitz3.ab2@26167>     MOVE.l D7,D1
00033E7A <AmiBlitz3.ab2@26168>     JSR _Read(A6)
00033E7C <AmiBlitz3.ab2@26169>     TST.l D0
00033E80 <AmiBlitz3.ab2@26170>     BEQ.b read_xtrafile__done2
00033E86 <AmiBlitz3.ab2@26171>     MOVE.w temp1,D1
00033E88 <AmiBlitz3.ab2@26172>     TST.w d1                                               ;new
00033E8C <AmiBlitz3.ab2@26173>     BEQ read_xtrafile__done2                                         ;new
00033E92 <AmiBlitz3.ab2@26174>      JSR AJL_0_6F1A
00033E98 <AmiBlitz3.ab2@26176>     CMP.l #0,a1
00033E9C <AmiBlitz3.ab2@26177>     BEQ read_xtrafile__dloop
00033EA0 <AmiBlitz3.ab2@26178>     MOVE.l $12(A1),D0
00033EA8 <AmiBlitz3.ab2@26179>     MOVE.w temp1+2,-$4(A1,D0.L)
00033EAC <AmiBlitz3.ab2@26180> BRA.b read_xtrafile__dloop
00033EB0 <AmiBlitz3.ab2@26186>   LEA residents_table(PC),A0
00033EB2 <AmiBlitz3.ab2@26187>   MOVEQ.l #$07,D0
00033EB6 <AmiBlitz3.ab2@26190>     CLR.l $40(A0)
00033EBA <AmiBlitz3.ab2@26191>     LEA ResidentEntryStep(A0),A0   ; $44
00033EBE <AmiBlitz3.ab2@26192>   DBF D0,read_xtrafile__loop3
00033EC2 <AmiBlitz3.ab2@26194>   MOVEM.l D7/A6,-(A7)
00033EC8 <AmiBlitz3.ab2@26195>   JSR init_buffers
00033ECE <AmiBlitz3.ab2@26196>   JSR reloadresident
00033ED2 <AmiBlitz3.ab2@26197>   MOVEM.l (A7)+,D7/A6
00033ED4 <AmiBlitz3.ab2@26198> RTS
00033EDC <AmiBlitz3.ab2@26202>   MOVE.b #$1,xtra_versionnumber                            ;.xtra version number...
00033EE2 <AmiBlitz3.ab2@26211>   LEA ptr_xtradata,A2
00033EE4 <AmiBlitz3.ab2@26212>   MOVEQ.l #$00,D4
00033EE6 <AmiBlitz3.ab2@26216>   MOVE.w (A2)+,D4                                          ; anzahl bytes zu schreiben
00033EEA <AmiBlitz3.ab2@26217>   BEQ.b write_xtrafile__done
00033EEC <AmiBlitz3.ab2@26220>    MOVE.l (A2)+,D2
00033EF0 <AmiBlitz3.ab2@26221>    BEQ.b write_xtrafile__loop
00033EF2 <AmiBlitz3.ab2@26223>    MOVE.l D4,D3
00033EF4 <AmiBlitz3.ab2@26224>    MOVE.l D7,D1                                            ; schreiben der daten in ptr_xtradata
00033EF8 <AmiBlitz3.ab2@26225>    JSR _Write(A6)                                          ; d1: file, d2: buffer, d3:length
00033EFC <AmiBlitz3.ab2@26226> BRA.b write_xtrafile__loop2
00033EFE <AmiBlitz3.ab2@26229>   MOVE.l D7,D1
00033F04 <AmiBlitz3.ab2@26230>   MOVE.l #str_cliarguments,D2
00033F0A <AmiBlitz3.ab2@26231>   MOVE.l #116,D3
00033F0E <AmiBlitz3.ab2@26232>   JSR _Write(A6)                                           ; hier werden 116 bytes an cli_arguments geschrieben !!
00033F10 <AmiBlitz3.ab2@26234>   MOVE.l D7,D1
00033F16 <AmiBlitz3.ab2@26235>   MOVE.l #stacksize,D2
00033F1C <AmiBlitz3.ab2@26236>   MOVE.l #4,D3
00033F20 <AmiBlitz3.ab2@26237>   JSR _Write(A6)
00033F22 <AmiBlitz3.ab2@26239>   MOVE.l D7,D1
00033F28 <AmiBlitz3.ab2@26240>   MOVE.l #versioninformation,D2
00033F2E <AmiBlitz3.ab2@26241>   MOVE.l #4,D3
00033F32 <AmiBlitz3.ab2@26242>   JSR _Write(A6)
00033F34 <AmiBlitz3.ab2@26244>   MOVE.l D7,D1
00033F3A <AmiBlitz3.ab2@26245>   MOVE.l #number_of_builds,D2
00033F40 <AmiBlitz3.ab2@26246>   MOVE.l #4,D3
00033F44 <AmiBlitz3.ab2@26247>   JSR _Write(A6)
00033F4A <AmiBlitz3.ab2@26253>   LEA libpointer,A2
00033F4C <AmiBlitz3.ab2@26256>     MOVE.l (A2),D0
00033F50 <AmiBlitz3.ab2@26257>     BEQ.w write_xtrafile__done2
00033F52 <AmiBlitz3.ab2@26258>     MOVEA.l D0,A2
00033F56 <AmiBlitz3.ab2@26259>     MOVE.l $12(A2),D4
00033F5A <AmiBlitz3.ab2@26260>     TST.w -$2(A2,D4.L)
00033F5E <AmiBlitz3.ab2@26261>     BEQ.w write_xtrafile__loop3
00033F62 <AmiBlitz3.ab2@26263>     LEA $4(A2),A0
00033F64 <AmiBlitz3.ab2@26264>     MOVE.l A0,D2
00033F66 <AmiBlitz3.ab2@26265>     MOVEQ.l #$02,D3
00033F68 <AmiBlitz3.ab2@26266>     MOVE.l D7,D1                                           ; schreiben der Libnum mit 2 bytes
00033F6C <AmiBlitz3.ab2@26267>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
00033F70 <AmiBlitz3.ab2@26269>     LEA -$4(A2,D4.L),A0
00033F72 <AmiBlitz3.ab2@26270>     MOVE.l A0,D2
00033F74 <AmiBlitz3.ab2@26271>     MOVEQ.l #$02,D3
00033F76 <AmiBlitz3.ab2@26272>     MOVE.l D7,D1                                           ; schreiben der Max Objects mit 2 bytes
00033F7A <AmiBlitz3.ab2@26273>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
00033F7E <AmiBlitz3.ab2@26274> BRA.w write_xtrafile__loop3
00033F84 <AmiBlitz3.ab2@26279>   LEA XTRAEndPadBytes,A2 ; get the start address off the 4 fill/pad/termination bytes
00033F86 <AmiBlitz3.ab2@26280>   MOVE.l A2,D2           ; move the address to d2
00033F8C <AmiBlitz3.ab2@26281>   MOVE.l #4,D3           ; we only need 4 bytes to save
00033F8E <AmiBlitz3.ab2@26282>   MOVE.l D7,D1           ; we set the file handle
00033F92 <AmiBlitz3.ab2@26283>   JSR _Write(A6)         ; and we write it.
00033F94 <AmiBlitz3.ab2@26285> RTS
00033F9A <AmiBlitz3.ab2@26290>   LEA optssave,A0                      ; backup address
00033FA0 <AmiBlitz3.ab2@26291>   LEA ptr_xtradata,A1                  ; source address
00033FA2 <AmiBlitz3.ab2@26294>   MOVE.w (A1)+,D0                                          ;length of data move
00033FA6 <AmiBlitz3.ab2@26295>   BEQ.b 'backupdone
00033FA8 <AmiBlitz3.ab2@26296>   SUBQ.w #1,D0
00033FAA <AmiBlitz3.ab2@26299>     MOVE.l (A1)+,D1
00033FAE <AmiBlitz3.ab2@26300>     BEQ.b 'backuploop
00033FB0 <AmiBlitz3.ab2@26301>     MOVEA.l D1,A2
00033FB2 <AmiBlitz3.ab2@26302>     MOVE.w D0,D1
00033FB4 <AmiBlitz3.ab2@26305>       MOVE.b (A2)+,(A0)+
00033FB8 <AmiBlitz3.ab2@26306>   DBF D1,'backuploop3
00033FBC <AmiBlitz3.ab2@26308> BRA.w 'backuploop2
00033FC2 <AmiBlitz3.ab2@26312>   LEA bufferlist,A1
00033FC4 <AmiBlitz3.ab2@26315>     MOVE.l (A1)+,D2
00033FC8 <AmiBlitz3.ab2@26316>     BEQ.b 'loop4done
00033FCA <AmiBlitz3.ab2@26318>     MOVEA.l D2,A0
00033FCC <AmiBlitz3.ab2@26319>     MOVE.l (A0),D2
00033FCE <AmiBlitz3.ab2@26320>     ADDQ.w #8,A0
00033FD4 <AmiBlitz3.ab2@26321>     JSR makelong
00033FD8 <AmiBlitz3.ab2@26322> BRA.b 'loop4
00033FDE <AmiBlitz3.ab2@26325>   CLR.w state_of_residents                                 ;resident change
00033FE4 <AmiBlitz3.ab2@26326>   CLR.w comsettings_message                                ;alloc change
00033FEA <AmiBlitz3.ab2@26327>   CLR.w maxobject_pos
00033FEC <AmiBlitz3.ab2@26328> RTS   ; new tomsmart1
00033FF2 <AmiBlitz3.ab2@26332>   LEA optssave,A0
00033FF8 <AmiBlitz3.ab2@26333>   LEA ptr_xtradata,A1
00033FFA <AmiBlitz3.ab2@26336>   MOVE.w (A1)+,D0
00033FFE <AmiBlitz3.ab2@26337>   BEQ.b 'restoredone
00034000 <AmiBlitz3.ab2@26338>   SUBQ.w #1,D0
00034002 <AmiBlitz3.ab2@26341>     MOVE.l (A1)+,D1
00034006 <AmiBlitz3.ab2@26342>     BEQ.b 'restoreloop1
00034008 <AmiBlitz3.ab2@26343>     MOVEA.l D1,A2
0003400A <AmiBlitz3.ab2@26344>     MOVE.w D0,D1
0003400C <AmiBlitz3.ab2@26347>       MOVE.b (A0)+,(A2)+
00034010 <AmiBlitz3.ab2@26348>   DBF D1,'restoreloop3
00034014 <AmiBlitz3.ab2@26350> BRA.b 'restoreloop2
00034016 <AmiBlitz3.ab2@26353> RTS
0003401C <AmiBlitz3.ab2@26357>   JSR free_residents                    ; first free the allready loaded residents
00034022 <AmiBlitz3.ab2@26358>   JSR Clear_Residents_table             ; second clear the complete resident table
00034024 <AmiBlitz3.ab2@26359> RTS
0003402C <AmiBlitz3.ab2@26363>   MOVE.w #$FFFF,state_of_residents
00034032 <AmiBlitz3.ab2@26364>   MOVE.w state_of_residents,D0
00034038 <AmiBlitz3.ab2@26365>   JSR reloadresident
0003403A <AmiBlitz3.ab2@26366> RTS
0003403C <AmiBlitz3.ab2@26371>   MOVE.l d0,a1
00034042 <AmiBlitz3.ab2@26372>   MOVEA.l libpointer,A2
00034046 <AmiBlitz3.ab2@26375>     MOVE.l $12(A2),D0
0003404A <AmiBlitz3.ab2@26376>     TST.w -$2(A2,D0.L)
0003404E <AmiBlitz3.ab2@26377>      BEQ.w JL_0_102AAa
00034050 <AmiBlitz3.ab2@26378>     SUBQ.w #1,D1
00034054 <AmiBlitz3.ab2@26379>      BPL.w JL_0_102AAa
00034058 <AmiBlitz3.ab2@26380>     MOVEA.l -$1A(A2,D0.L),A3
0003405A <AmiBlitz3.ab2@26381>     ADDA.l A2,A3
0003405C <AmiBlitz3.ab2@26384>       MOVE.b (A3)+,(A1)+
00034060 <AmiBlitz3.ab2@26385>     BNE.w JL_0_10294a
00034062 <AmiBlitz3.ab2@26387>     CLR.b -(A1)
00034066 <AmiBlitz3.ab2@26388>     MOVE.w -$4(A2,D0.L),D0
0003406C <AmiBlitz3.ab2@26389>     AND.l #$ffff,d0
0003406E <AmiBlitz3.ab2@26390> RTS
00034070 <AmiBlitz3.ab2@26393>     MOVEA.l (A2),A2
00034074 <AmiBlitz3.ab2@26394> BRA.w JL_0_1027Ca
00034084 <AmiBlitz3.ab2@26399> str_maxobjects_name:   Dc.b "              ",0 : Even
00034094 <AmiBlitz3.ab2@26400> str_maxobjects_name2:  Dc.b "              ",0 : Even
00034098 <AmiBlitz3.ab2@26401> objectbuffer:          Dc.l $00004000
0003409C <AmiBlitz3.ab2@26402>                        Dc.l $00000000
000340A8 <AmiBlitz3.ab2@26403> str_objectbuffer:      Dc.b "16384",0,0,0,0,0,0,0      ; string max 12 columns
000340AC <AmiBlitz3.ab2@26405> libsbuffer:            Dc.l $00008000
000340B0 <AmiBlitz3.ab2@26406>                        Dc.l $00000000
000340BC <AmiBlitz3.ab2@26407> str_libsbuffer:        Dc.b "32768",0,0,0,0,0,0,0      ;was "16384"; string max 12 columns
000340C0 <AmiBlitz3.ab2@26409> systembuffer:          Dc.l $00001000                      ; systen buffer
000340C4 <AmiBlitz3.ab2@26410>                        Dc.l $00000000
000340D0 <AmiBlitz3.ab2@26411> str_systembuffer:      Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
000340D4 <AmiBlitz3.ab2@26413> databuffer:            Dc.l $00001000                      ; data buffer
000340D8 <AmiBlitz3.ab2@26414>                        Dc.l $00000000
000340E4 <AmiBlitz3.ab2@26415> str_databuffer:        Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
000340E8 <AmiBlitz3.ab2@26417> macrobuffer_size:      Dc.l $00002000                      ; macro buffer
000340EC <AmiBlitz3.ab2@26418>                        Dc.l $00000000
000340F8 <AmiBlitz3.ab2@26419> str_macrobuffer:       Dc.b "8192",0,0,0,0,0,0,0,0     ; string max 12 columns
000340FC <AmiBlitz3.ab2@26421> stringbuffer:          Dc.l $00002800                      ; string buffer
00034100 <AmiBlitz3.ab2@26422>                        Dc.l $00000000
0003410C <AmiBlitz3.ab2@26423> str_stringbuffer:      Dc.b "10240",0,0,0,0,0,0,0      ; string max 12 columns
0003410E <AmiBlitz3.ab2@26425> maxobjects_value:      Dc.w $0064
00034112 <AmiBlitz3.ab2@26426>                        Dc.l $00000000
0003411E <AmiBlitz3.ab2@26427> str_maxobjects_value:  Dc.b "100",0,0,0,0,0,0,0,0,0    ; string max 12 columns
00034120 <AmiBlitz3.ab2@26429> maxobjects_value2:     Dc.w $0014
00034122 <AmiBlitz3.ab2@26430>                        Dc.w $0000
0003412E <AmiBlitz3.ab2@26432> str_maxobjects_value2: Dc.b "20",0,0,0,0,0,0,0,0,0,0   ; string max 12 columns
0003412F <AmiBlitz3.ab2@26436> set_create_iconfile:   Dc.b $00
00034132 <AmiBlitz3.ab2@26437> create_iconfile:       Dc.b $80,$01,$01                    ;create icon
00034134 <AmiBlitz3.ab2@26438>                        Dc.b $00,$01
00034135 <AmiBlitz3.ab2@26440> set_use_debugger:      Dc.b $00                            ; Flags.w
00034138 <AmiBlitz3.ab2@26441> use_debugger:          Dc.b $80,$01,$01                    ; Activation.w
0003413A <AmiBlitz3.ab2@26442>                        Dc.b $00,$01                        ; GadgetType.w
0003413E <AmiBlitz3.ab2@26443> AL_0_11010:            Dc.b $00,$80,$01,$01                ; flags, activation
00034142 <AmiBlitz3.ab2@26444> AL_0_1103C:            Dc.b $00,$80,$01,$01                ; flags, activation
00034146 <AmiBlitz3.ab2@26445> AL_0_11068:            Dc.b $00,$80,$01,$01                ; flags, activation
00034148 <AmiBlitz3.ab2@26446> AL_0_11094:            Ds.w 1
00034149 <AmiBlitz3.ab2@26448> set_make_smallestcode: Ds.b 1
0003414C <AmiBlitz3.ab2@26449> make_smallestcode:     Dc.b $00,$01,$01                    ;make smallest
0003414E <AmiBlitz3.ab2@26450>                        Dc.b $00,$01
0003414F <AmiBlitz3.ab2@26451> set_link_debuginfo:    Ds.b 1
00034152 <AmiBlitz3.ab2@26452> link_debuginfo:        Dc.b $00,$01,$01                    ;create debuginfo
00034154 <AmiBlitz3.ab2@26453>                        Dc.b $00,$01
00034374 <AmiBlitz3.ab2@26458>   Ds.l 136         ;resident files STEP $44 piece 8
000343F4 <AmiBlitz3.ab2@26463> str_calcexpression:        Ds.l 32
000343F8 <AmiBlitz3.ab2@26464> destbufferend_backup_calc: Ds.l 1
00034402 <AmiBlitz3.ab2@26469>   MOVE.l destbufferend,destbufferend_backup_calc
00034408 <AmiBlitz3.ab2@26470>   MOVE.l A7,errstack
00034412 <AmiBlitz3.ab2@26471>   MOVE.l #Calc_Error_Exit,errcont
0003443C <AmiBlitz3.ab2@26478>   !basic         ; get the flage for the conversion form the editor
00034480 <AmiBlitz3.ab2@26479>   !ComData_GetW{comWord_CalculatorButtonBinFlag,D0} : MOVE.w d0,CalculatorButtonBinFlag
000344C4 <AmiBlitz3.ab2@26480>   !ComData_GetW{comWord_CalculatorButtonDecFlag,D0} : MOVE.w d0,CalculatorButtonDecFlag
000344E2 <AmiBlitz3.ab2@26481>   !asm
000344E8 <AmiBlitz3.ab2@26483>   LEA str_calcexpression,A0
000344EE <AmiBlitz3.ab2@26491>   JSR setcvars
000344F4 <AmiBlitz3.ab2@26492>   JSR setsvars
000344FA <AmiBlitz3.ab2@26493>   CLR.w connest
00034500 <AmiBlitz3.ab2@26494>   LEA str_calcexpression,A5
00034506 <AmiBlitz3.ab2@26495>   JSR AJL_0_BF6E
0003450C <AmiBlitz3.ab2@26496>   LEA str_calcexpression,A0
0003450E <AmiBlitz3.ab2@26497>   TST.l D3
00034512 <AmiBlitz3.ab2@26498>    BPL.w JL_0_11AE8
00034516 <AmiBlitz3.ab2@26499>   MOVE.b #$2D,(A0)+
00034518 <AmiBlitz3.ab2@26500>   NEG.l D3
00034520 <AmiBlitz3.ab2@26503>   CMPI.w #$80,CalculatorButtonDecFlag
00034524 <AmiBlitz3.ab2@26504>    BEQ.w JL_0_11B74
00034526 <AmiBlitz3.ab2@26505>   MOVEQ.l #$00,D1
0003452E <AmiBlitz3.ab2@26506>   CMPI.w #$80,CalculatorButtonBinFlag
00034532 <AmiBlitz3.ab2@26507>    BNE.w JL_0_11B36
00034534 <AmiBlitz3.ab2@26508>   MOVEQ.l #$1F,D0
00034538 <AmiBlitz3.ab2@26509>   MOVE.b #$25,(A0)+
0003453A <AmiBlitz3.ab2@26512>       LSL.l #1,D3
0003453E <AmiBlitz3.ab2@26513>        BCC.w JL_0_11B18
00034542 <AmiBlitz3.ab2@26514>       MOVE.b #"1",(A0)+
00034544 <AmiBlitz3.ab2@26515>       MOVEQ.l #-$01,D1
00034548 <AmiBlitz3.ab2@26516>   BRA.w JL_0_11B22
0003454A <AmiBlitz3.ab2@26519>       TST.w D1
0003454E <AmiBlitz3.ab2@26520>       BEQ.w JL_0_11B22
00034552 <AmiBlitz3.ab2@26521>       MOVE.b #"0",(A0)+
00034556 <AmiBlitz3.ab2@26524>  DBF D0,JL_0_11B08
00034558 <AmiBlitz3.ab2@26527>   TST.w D1
0003455C <AmiBlitz3.ab2@26528>   BNE.w JL_0_11B30
00034560 <AmiBlitz3.ab2@26529>   MOVE.b #"0",(A0)+
00034562 <AmiBlitz3.ab2@26532>   CLR.b (A0)
00034566 <AmiBlitz3.ab2@26533> BRA.w JL_0_11B7C
00034568 <AmiBlitz3.ab2@26536>   MOVEQ.l #$07,D0
0003456C <AmiBlitz3.ab2@26537>   MOVE.b #$24,(A0)+
0003456E <AmiBlitz3.ab2@26540>     MOVE.l D3,D2
00034570 <AmiBlitz3.ab2@26541>     SWAP D2
00034572 <AmiBlitz3.ab2@26542>     LSR.w #8,D2
00034574 <AmiBlitz3.ab2@26543>     LSR.w #4,D2
00034578 <AmiBlitz3.ab2@26544>     ADDI.w #$30,D2
0003457C <AmiBlitz3.ab2@26545>     CMP.w #$3A,D2
00034580 <AmiBlitz3.ab2@26546>      BCS.w JL_0_11B52
00034582 <AmiBlitz3.ab2@26547>     ADDQ.w #7,D2
00034586 <AmiBlitz3.ab2@26550>     CMP.w #$30,D2
0003458A <AmiBlitz3.ab2@26551>     BEQ.w JL_0_11B62
0003458C <AmiBlitz3.ab2@26552>     MOVE.b D2,(A0)+
0003458E <AmiBlitz3.ab2@26553>     MOVEQ.l #-$01,D1
00034592 <AmiBlitz3.ab2@26554>   BRA.w JL_0_11B6A
00034594 <AmiBlitz3.ab2@26557>     TST.w D1
00034598 <AmiBlitz3.ab2@26558>      BEQ.w JL_0_11B6A
0003459A <AmiBlitz3.ab2@26559>     MOVE.b D2,(A0)+
0003459C <AmiBlitz3.ab2@26562>     LSL.l #4,D3
000345A0 <AmiBlitz3.ab2@26563>  DBF D0,JL_0_11B3C
000345A4 <AmiBlitz3.ab2@26565> BRA.w JL_0_11B26
000345A6 <AmiBlitz3.ab2@26568>   MOVE.l D3,D2
000345AC <AmiBlitz3.ab2@26569>   JSR makelong
000345B6 <AmiBlitz3.ab2@26576>   MOVE.l destbufferend_backup_calc,destbufferend
000345B8 <AmiBlitz3.ab2@26578> RTS                         ; added tomsmart 2012 03 07 vor Calculator in PED
000346B7 <AmiBlitz3.ab2@26582> str_cliarguments: Ds.b 255   ; a command line can acutally be 255 characters long
000346B8 <AmiBlitz3.ab2@26584> Even
000346F6 <AmiBlitz3.ab2@26589>   !ComData_GetL{comFunc_OpenCompilerWindow,A1}
000346FC <AmiBlitz3.ab2@26590>   MOVE.l #1001,D0
00034702 <AmiBlitz3.ab2@26591>   MOVE.l #str_cliarguments,D1
00034704 <AmiBlitz3.ab2@26592>   JSR (A1)
00034706 <AmiBlitz3.ab2@26593> RTS
00034708 <AmiBlitz3.ab2@26598>     MOVE.b (a5)+,d0
0003470C <AmiBlitz3.ab2@26599>     BEQ 'l2
00034710 <AmiBlitz3.ab2@26600>     CMP.b #$80,d0
00034714 <AmiBlitz3.ab2@26601>     BNE 'l1
00034716 <AmiBlitz3.ab2@26602>     MOVE.b (a5)+,d0
0003471A <AmiBlitz3.ab2@26603>     BEQ 'l2
0003471E <AmiBlitz3.ab2@26604>     CMP.b #$02,d0
00034722 <AmiBlitz3.ab2@26605>   BNE 'l1
00034726 <AmiBlitz3.ab2@26608>     CMP.b #$20,(a5)+
0003472A <AmiBlitz3.ab2@26609>   BEQ 'l3
0003472C <AmiBlitz3.ab2@26610>   SUBQ.l #1,a5
0003472E <AmiBlitz3.ab2@26611>   TST.b (a5)
00034732 <AmiBlitz3.ab2@26612>   BEQ 'l2
00034736 <AmiBlitz3.ab2@26613>   CMP.w #$8008,(a5)
0003473A <AmiBlitz3.ab2@26614>   BEQ 'l4
0003473E <AmiBlitz3.ab2@26615>   CMP.w #$8009,(a5)
00034742 <AmiBlitz3.ab2@26616>   BEQ 'l4
00034746 <AmiBlitz3.ab2@26617> BRA 'l1
00034748 <AmiBlitz3.ab2@26620>   ADDQ.l #2,a5
0003474E <AmiBlitz3.ab2@26621>   JSR skiprest
00034750 <AmiBlitz3.ab2@26622> RTS
00034756 <AmiBlitz3.ab2@26625>   JSR nextline
0003475A <AmiBlitz3.ab2@26626>   BNE 'l1
0003475C <AmiBlitz3.ab2@26627> RTS
00034786 <AmiBlitz3.ab2@26631>   !basic
00034790 <AmiBlitz3.ab2@26632>   DateFormat 1
0003479E <AmiBlitz3.ab2@26633>   i.l=SystemDate
000347C4 <AmiBlitz3.ab2@26634>   a$=Date$ (i)
00034842 <AmiBlitz3.ab2@26635>   a$=Replace$(a$,"/",".")
00034848 <AmiBlitz3.ab2@26636>   GetD0 &a$
0003484A <AmiBlitz3.ab2@26637>   MOVEQ #8,d2
0003484C <AmiBlitz3.ab2@26638>   MOVE.l d0,a0
0003484E <AmiBlitz3.ab2@26641>     MOVE.b (a0)+,d1
00034854 <AmiBlitz3.ab2@26642>     JSR pokedata1b
00034858 <AmiBlitz3.ab2@26643>  DBF d2,'l1
0003485A <AmiBlitz3.ab2@26645>   MOVEQ #0,d0
0003485C <AmiBlitz3.ab2@26646>   MOVE.b (a0)+,d0
0003487A <AmiBlitz3.ab2@26647>   !asm
00034880 <AmiBlitz3.ab2@26648>   ADD.l #9,d2
00034886 <AmiBlitz3.ab2@26649>   ADD.l #9,a5
00034888 <AmiBlitz3.ab2@26650> RTS
000348B2 <AmiBlitz3.ab2@26654>   !basic
000348BC <AmiBlitz3.ab2@26655>   DateFormat 0
000348CA <AmiBlitz3.ab2@26656>   i.l=SystemDate
000348F0 <AmiBlitz3.ab2@26657>   a$=Date$ (i)
0003496E <AmiBlitz3.ab2@26658>   a$=Replace$(a$,"/",".")
00034974 <AmiBlitz3.ab2@26659>   GetD0 &a$
00034976 <AmiBlitz3.ab2@26660>   MOVEQ #8,d2
00034978 <AmiBlitz3.ab2@26661>   MOVE.l d0,a0
0003497A <AmiBlitz3.ab2@26664>     MOVE.b (a0)+,d1
00034980 <AmiBlitz3.ab2@26665>     JSR pokedata1b
00034984 <AmiBlitz3.ab2@26666>  DBF d2,'l1
00034986 <AmiBlitz3.ab2@26668>   MOVEQ #0,d0
00034988 <AmiBlitz3.ab2@26669>   MOVE.b (a0)+,d0
000349A6 <AmiBlitz3.ab2@26670>   !asm
000349AC <AmiBlitz3.ab2@26671>   ADD.l #9,d2
000349B2 <AmiBlitz3.ab2@26672>   ADD.l #13,a5
000349B4 <AmiBlitz3.ab2@26673> RTS
000349DE <AmiBlitz3.ab2@26677>   !basic
000349E8 <AmiBlitz3.ab2@26678>   DateFormat 1
000349F6 <AmiBlitz3.ab2@26679>   i.l = SystemDate
00034A1C <AmiBlitz3.ab2@26680>   a$ = Date$ (i)
00034A9A <AmiBlitz3.ab2@26681>   a$ = Replace$(a$,"/",".")
00034AA0 <AmiBlitz3.ab2@26682>   GetD0 &a$
00034AA2 <AmiBlitz3.ab2@26683>   MOVEQ #8,d2
00034AA4 <AmiBlitz3.ab2@26684>   MOVE.l d0,a0
00034AA6 <AmiBlitz3.ab2@26687>     MOVE.b (a0)+,d1
00034AAC <AmiBlitz3.ab2@26688>     JSR writebyte
00034AB0 <AmiBlitz3.ab2@26689>  DBF d2,'l1
00034AB2 <AmiBlitz3.ab2@26691>   MOVEQ #0,d0
00034AB4 <AmiBlitz3.ab2@26692>   MOVE.b (a0)+,d0
00034AD2 <AmiBlitz3.ab2@26693>   !asm
00034AD8 <AmiBlitz3.ab2@26694>   ADD.l #9,a5
00034ADA <AmiBlitz3.ab2@26695> RTS
00034B04 <AmiBlitz3.ab2@26699>   !basic
00034B0E <AmiBlitz3.ab2@26700>   DateFormat 0
00034B1C <AmiBlitz3.ab2@26701>   i.l=SystemDate
00034B42 <AmiBlitz3.ab2@26702>   a$=Date$ (i)
00034BC0 <AmiBlitz3.ab2@26703>   a$=Replace$(a$,"/",".")
00034BC6 <AmiBlitz3.ab2@26704>   GetD0 &a$
00034BC8 <AmiBlitz3.ab2@26705>   MOVEQ #8,d2
00034BCA <AmiBlitz3.ab2@26706>   MOVE.l d0,a0
00034BCC <AmiBlitz3.ab2@26709>     MOVE.b (a0)+,d1
00034BD2 <AmiBlitz3.ab2@26710>     JSR writebyte
00034BD6 <AmiBlitz3.ab2@26711>  DBF d2,'l1
00034BD8 <AmiBlitz3.ab2@26713>   MOVEQ #0,d0
00034BDA <AmiBlitz3.ab2@26714>   MOVE.b (a0)+,d0
00034BF8 <AmiBlitz3.ab2@26715>   !asm
00034BFE <AmiBlitz3.ab2@26716>   ADD.l #13,a5
00034C00 <AmiBlitz3.ab2@26717> RTS
00034C02 <AmiBlitz3.ab2@26721>   MOVE.l d2,-(a7)                                          ; D2 -> stack
00034C04 <AmiBlitz3.ab2@26722>   MOVE.l a5,d0
00034C2E <AmiBlitz3.ab2@26723>   !basic
00034C32 <AmiBlitz3.ab2@26724>   _myD0.l = PutD0
00034C3C <AmiBlitz3.ab2@26725>   If _myD0
00034C82 <AmiBlitz3.ab2@26726>     verstring$ = Left$(Peek.s(_myD0),9+3)
00034CD4 <AmiBlitz3.ab2@26727>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00034CDA <AmiBlitz3.ab2@26728>   Else
00034D14 <AmiBlitz3.ab2@26729>     error{"INTERNAL: Invalid pointer in version_string!"}
00034D24 <AmiBlitz3.ab2@26734>   actual_version.l = Peek.l(?versioninformation)
00034D34 <AmiBlitz3.ab2@26735>   actual_build.l   = Peek.l(?number_of_builds)
00034D58 <AmiBlitz3.ab2@26737>   Format "00"
00034D8E <AmiBlitz3.ab2@26738>   Select verstring$
00034DB2 <AmiBlitz3.ab2@26740>     Case "VER_MAJOR"
00034DEE <AmiBlitz3.ab2@26741>      put_versionstr$ = Str$(actual_version LSR 24)
00034E18 <AmiBlitz3.ab2@26743>     Case "VER_MINOR"
00034E5C <AmiBlitz3.ab2@26744>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
00034E86 <AmiBlitz3.ab2@26746>     Case "VER_PATCH"
00034ECA <AmiBlitz3.ab2@26747>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
00034EF4 <AmiBlitz3.ab2@26749>     Case "VER_BUILD"
00034F18 <AmiBlitz3.ab2@26750>      Format ""
00034F4C <AmiBlitz3.ab2@26751>      put_versionstr$ = Str$(actual_build)
00034F52 <AmiBlitz3.ab2@26753>     Default
00034F7A <AmiBlitz3.ab2@26754>      put_versionstr$ = "{unknown compilerconstant}"
00034F88 <AmiBlitz3.ab2@26757>   End Select
00034FAC <AmiBlitz3.ab2@26758>   Format ""
00034FBC <AmiBlitz3.ab2@26760>   GetD0 FLen(put_versionstr$)                              ; laenge zielstring -> Stack
00034FBE <AmiBlitz3.ab2@26761>   MOVE.l d0,d2
00034FC0 <AmiBlitz3.ab2@26762>   MOVE.l d2,-(a7)
00034FC4 <AmiBlitz3.ab2@26763>   SUB #1,d2
00034FCA <AmiBlitz3.ab2@26765>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
00034FCC <AmiBlitz3.ab2@26766>   MOVE.l d0,a0
00034FCE <AmiBlitz3.ab2@26769>     MOVE.b (a0)+,d1
00034FD4 <AmiBlitz3.ab2@26770>     JSR pokedata1b
00034FD8 <AmiBlitz3.ab2@26771>  DBF d2,'l1
00034FDA <AmiBlitz3.ab2@26773>   MOVEQ #0,d0
00034FF8 <AmiBlitz3.ab2@26774>   !asm
00034FFA <AmiBlitz3.ab2@26775>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
00034FFC <AmiBlitz3.ab2@26776>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
00034FFE <AmiBlitz3.ab2@26777>   ADD.l d0,d2
00035004 <AmiBlitz3.ab2@26778>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
00035006 <AmiBlitz3.ab2@26779>   MOVEQ #0,d0
00035008 <AmiBlitz3.ab2@26780> RTS
0003500A <AmiBlitz3.ab2@26784>   MOVE.l a5,d0
00035034 <AmiBlitz3.ab2@26785>   !basic
00035038 <AmiBlitz3.ab2@26786>   _myD0.l = PutD0
00035042 <AmiBlitz3.ab2@26787>   If _myD0
00035088 <AmiBlitz3.ab2@26788>     verstring$ = Left$(Peek.s(_myD0),9+3)
000350DA <AmiBlitz3.ab2@26789>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
000350E0 <AmiBlitz3.ab2@26790>   Else
0003511A <AmiBlitz3.ab2@26791>     error{"INTERNAL: Invalid pointer in version_string_dc!"}
0003512A <AmiBlitz3.ab2@26796>   actual_version.l = Peek.l(?versioninformation)
0003513A <AmiBlitz3.ab2@26797>   actual_build.l   = Peek.l(?number_of_builds)
0003515E <AmiBlitz3.ab2@26799>   Format ""
00035194 <AmiBlitz3.ab2@26800>   Select verstring$
000351B8 <AmiBlitz3.ab2@26802>     Case "VER_MAJOR"
000351F4 <AmiBlitz3.ab2@26803>      put_versionstr$ = Str$(actual_version LSR 24)
0003521E <AmiBlitz3.ab2@26805>     Case "VER_MINOR"
00035262 <AmiBlitz3.ab2@26806>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
0003528C <AmiBlitz3.ab2@26808>     Case "VER_PATCH"
000352D0 <AmiBlitz3.ab2@26809>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
000352FA <AmiBlitz3.ab2@26811>     Case "VER_BUILD"
0003531E <AmiBlitz3.ab2@26812>      Format ""
00035352 <AmiBlitz3.ab2@26813>      put_versionstr$ = Str$(actual_build)
00035358 <AmiBlitz3.ab2@26815>     Default
00035380 <AmiBlitz3.ab2@26816>      put_versionstr$ = "{unknown compilerconstant}"
0003538E <AmiBlitz3.ab2@26818>   End Select
000353B2 <AmiBlitz3.ab2@26819>   Format ""
000353C8 <AmiBlitz3.ab2@26821>   GetD0 FLen(put_versionstr$)-1
000353CA <AmiBlitz3.ab2@26822>   MOVE.l d0,d2
000353D0 <AmiBlitz3.ab2@26824>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
000353D2 <AmiBlitz3.ab2@26825>   MOVE.l d0,a0
000353D4 <AmiBlitz3.ab2@26828>     MOVE.b (a0)+,d1
000353DA <AmiBlitz3.ab2@26829>     JSR writebyte
000353DE <AmiBlitz3.ab2@26830>  DBF d2,'l1
000353E0 <AmiBlitz3.ab2@26832>   MOVEQ #0,d0
000353E2 <AmiBlitz3.ab2@26833>   MOVE.b -(a0),d0                                          ; letztes Zeichen in D0
00035400 <AmiBlitz3.ab2@26834>   !asm
00035406 <AmiBlitz3.ab2@26835>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
00035408 <AmiBlitz3.ab2@26836> RTS
0003540A <AmiBlitz3.ab2@26938>  MOVE.l a5,-(a7)
00035436 <AmiBlitz3.ab2@26939>  !fget
0003543A <AmiBlitz3.ab2@26940>  CMP.w #".",d0
0003543E <AmiBlitz3.ab2@26941>  BNE 'skip
00035442 <AmiBlitz3.ab2@26942>  MOVEM.l a2/d2,-(a7)
00035448 <AmiBlitz3.ab2@26943>  LEA newtypebase,a2
0003544E <AmiBlitz3.ab2@26944>  JSR getparameter2
00035452 <AmiBlitz3.ab2@26945>  BEQ.w JUMP_syntaxerr
00035458 <AmiBlitz3.ab2@26946>  JSR findtype
0003545C <AmiBlitz3.ab2@26947>  BNE.w JUMP_notypeerr
00035462 <AmiBlitz3.ab2@26948>  MOVE.l a2,typetocast
00035466 <AmiBlitz3.ab2@26949>  MOVEM.l (a7)+,a2/d2
0003546A <AmiBlitz3.ab2@26950>  CMP.w #")",d0
0003546E <AmiBlitz3.ab2@26951>  BNE JUMP_errorbracketmiss
00035470 <AmiBlitz3.ab2@26952>  ADDQ.l #4,a7
0003549C <AmiBlitz3.ab2@26953>  !fget
000354A2 <AmiBlitz3.ab2@26954>  JMP nocast
000354A4 <AmiBlitz3.ab2@26956> 'skip MOVE.l (a7)+,a5
000354AA <AmiBlitz3.ab2@26957>  JMP JL_0_A410
000354B0 <AmiBlitz3.ab2@26959> JUMP_errorbracketmiss JMP errorbracketmiss
000354DA <AmiBlitz3.ab2@26961> Function.l ab3_GetIncludeLock{filename.s}
000354FA <AmiBlitz3.ab2@26962>   incLock.l  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub
00035552 <AmiBlitz3.ab2@26963>   ex.s       = dos_GetExt{filename}
00035566 <AmiBlitz3.ab2@26965>   If incLock = False
000355DA <AmiBlitz3.ab2@26966>     filename = dos_SetExt{filename,"ab3"}
000355FA <AmiBlitz3.ab2@26967>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab3
0003560E <AmiBlitz3.ab2@26970>   If incLock = False
00035682 <AmiBlitz3.ab2@26971>     filename = dos_SetExt{filename,"ab2"}
000356A2 <AmiBlitz3.ab2@26972>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab2
000356B6 <AmiBlitz3.ab2@26975>   If incLock = False
0003572A <AmiBlitz3.ab2@26976>     filename = dos_SetExt{filename,"bb2"}
0003574A <AmiBlitz3.ab2@26977>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.bb2
0003575E <AmiBlitz3.ab2@26980>   If incLock = False
000357F0 <AmiBlitz3.ab2@26981>     filename = dos_SetExt{filename,ex+".ab3"}
00035810 <AmiBlitz3.ab2@26982>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab3
00035824 <AmiBlitz3.ab2@26985>   If incLock = False
00035898 <AmiBlitz3.ab2@26986>     filename = dos_SetExt{filename,"ab2"}
000358B8 <AmiBlitz3.ab2@26987>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab2
000358CC <AmiBlitz3.ab2@26990>   If incLock = False
00035940 <AmiBlitz3.ab2@26991>     filename = dos_SetExt{filename,"bb2"}
00035960 <AmiBlitz3.ab2@26992>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.bb2
0003596A <AmiBlitz3.ab2@26995>  Function Return incLock
00035984 <AmiBlitz3.ab2@26996> End Function
000359AE <AmiBlitz3.ab2@27000>   !basic
000359D8 <AmiBlitz3.ab2@27001>   incString.s = Peek$(?ptr_parameterstore)
00035A06 <AmiBlitz3.ab2@27003>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
00035A0A <AmiBlitz3.ab2@27004>   incDirP.l   = PutD0                                       ;    "
00035A32 <AmiBlitz3.ab2@27005>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
00035AB2 <AmiBlitz3.ab2@27006>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
00035AE4 <AmiBlitz3.ab2@27007>   incLock.l   = ab3_GetIncludeLock{incFile}                 ; check if file exist
00035AF8 <AmiBlitz3.ab2@27009>   If incLock = False ; not found => check default Include Directory
00035B08 <AmiBlitz3.ab2@27010>     incDirP.l = Peek.l(?incd)
00035B12 <AmiBlitz3.ab2@27011>     If incDirP
00035B3A <AmiBlitz3.ab2@27012>       incDir_.s = Peek.s(incDirP)
00035B40 <AmiBlitz3.ab2@27013>     Else
00035BAA <AmiBlitz3.ab2@27014>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00035C2A <AmiBlitz3.ab2@27016>     incFile.s = dos_AddPart{incDir_,incString}
00035C5C <AmiBlitz3.ab2@27017>     incLock.l = ab3_GetIncludeLock{incFile}
00035C70 <AmiBlitz3.ab2@27020>   If incLock = False ; not found => check relative to current source
00035C88 <AmiBlitz3.ab2@27021>     incDepth.l = Peek.w(?ininclude)-1
00035CAE <AmiBlitz3.ab2@27022>     If incDepth >= 0 AND incDepth < #maxincludes
00035D0E <AmiBlitz3.ab2@27023>       incDir_.s = dos_PathPart{incdim (incDepth)} ;= Peek.s(?includetemp2)
00035D8E <AmiBlitz3.ab2@27024>       incFile.s = dos_AddPart{incDir_,incString}
00035DC0 <AmiBlitz3.ab2@27025>       incLock.l = ab3_GetIncludeLock{incFile}
00035DD4 <AmiBlitz3.ab2@27029>   If incLock = False ; still not found => check default Include Directory and name only
00035DE4 <AmiBlitz3.ab2@27030>     incDirP.l = Peek.l(?incd)
00035DEE <AmiBlitz3.ab2@27031>     If incDirP
00035E16 <AmiBlitz3.ab2@27032>       incDir_.s = Peek.s(incDirP)
00035E1C <AmiBlitz3.ab2@27033>     Else
00035E86 <AmiBlitz3.ab2@27034>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00035F34 <AmiBlitz3.ab2@27036>     incFile.s = dos_AddPart{incDir_,dos_FilePart{incString}}
00035F66 <AmiBlitz3.ab2@27037>     incLock.l = ab3_GetIncludeLock{incFile}
00035F70 <AmiBlitz3.ab2@27040>   If incLock
00035F86 <AmiBlitz3.ab2@27041>     MaxLen incFile = 1024
00035FAA <AmiBlitz3.ab2@27042>     NameFromLock_ incLock,&incFile,1024
00035FD4 <AmiBlitz3.ab2@27043>     incFile = Peek.s(&incFile)
0003600C <AmiBlitz3.ab2@27044>     Poke$ ?ptr_parameterstore,incFile
00036020 <AmiBlitz3.ab2@27045>     i = FLen(incFile)
0003602C <AmiBlitz3.ab2@27046>     GetReg d0,i
00036032 <AmiBlitz3.ab2@27047>     MOVE.l d0,tempstore
00036042 <AmiBlitz3.ab2@27048>     UnLock_ incLock
00036060 <AmiBlitz3.ab2@27051>   !asm
00036066 <AmiBlitz3.ab2@27052>   TST.l tempstore
0003606A <AmiBlitz3.ab2@27053>    BEQ 'l1
00036070 <AmiBlitz3.ab2@27054>   MOVE.l tempstore,d2
00036072 <AmiBlitz3.ab2@27057> RTS
0003609C <AmiBlitz3.ab2@27061>   !basic
000360C6 <AmiBlitz3.ab2@27062>   incString.s = Peek$(?ptr_parameterstore)                  ; get the string
000360F4 <AmiBlitz3.ab2@27063>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
000360F8 <AmiBlitz3.ab2@27064>   incDirP.l   = PutD0                                       ;    "
00036120 <AmiBlitz3.ab2@27065>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
000361A0 <AmiBlitz3.ab2@27066>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
000361C0 <AmiBlitz3.ab2@27067>   incLock.l   = Lock_(&incFile,#ACCESS_READ)                ; check if file exist
000361D4 <AmiBlitz3.ab2@27069>   If incLock = False                                        ; not found => try orignal string only to find
000361F4 <AmiBlitz3.ab2@27070>     incLock.l = Lock_(&incString,#ACCESS_READ)
000361FE <AmiBlitz3.ab2@27073>   If incLock                                                ; found => store full path
00036214 <AmiBlitz3.ab2@27074>     MaxLen incFile = 1024
00036238 <AmiBlitz3.ab2@27075>     NameFromLock_ incLock,&incFile,1024
00036262 <AmiBlitz3.ab2@27076>     incFile = Peek.s(&incFile)
0003629A <AmiBlitz3.ab2@27077>     Poke$ ?ptr_parameterstore,incFile
000362A6 <AmiBlitz3.ab2@27080> 
000362C4 <AmiBlitz3.ab2@27081>   !asm
000362C6 <AmiBlitz3.ab2@27082> RTS
000362CC <AmiBlitz3.ab2@27093>   JSR Aclearallvars
000362D2 <AmiBlitz3.ab2@27094>   JSR free_unusedfunctions
000362DC <AmiBlitz3.ab2@27109>   MOVE.l #"NORE",reqmode
000362E2 <AmiBlitz3.ab2@27110> JSR handle_compileerror
000362E4 <AmiBlitz3.ab2@27113>   MOVE.l d0,-(a7)
000362E6 <AmiBlitz3.ab2@27114>   MOVE.l a5,d0
000362F0 <AmiBlitz3.ab2@27115>   !basica7
000362F4 <AmiBlitz3.ab2@27116>   i.l = PutD0
000362FE <AmiBlitz3.ab2@27117>   If i
00036326 <AmiBlitz3.ab2@27118>     a$ = Peek$(i)
00036358 <AmiBlitz3.ab2@27119>     b$ = Peeks$(i-7,7)
00036490 <AmiBlitz3.ab2@27121> 
00036496 <AmiBlitz3.ab2@27122>     MOVE.l d0,result
0003649A <AmiBlitz3.ab2@27124>   !asma7
0003649C <AmiBlitz3.ab2@27125>   MOVE.l (a7)+,d0
0003649E <AmiBlitz3.ab2@27126> RTS
000364C8 <AmiBlitz3.ab2@27130>   !basic
000364F6 <AmiBlitz3.ab2@27131>   !ComData_LEA{comStr_CurrentDir,D0}
000364FA <AmiBlitz3.ab2@27132>   currentDirP.l = PutD0
00036528 <AmiBlitz3.ab2@27134>   !ComData_LEA{comStr_SourceName,D0}
0003652C <AmiBlitz3.ab2@27135>   fileNameP.l = PutD0
00036554 <AmiBlitz3.ab2@27137>   check_dirname$  = Peek$(currentDirP)
0003657C <AmiBlitz3.ab2@27138>   check_filename$ = Peek$(fileNameP)
00036602 <AmiBlitz3.ab2@27139>   If (olddirname$<>check_dirname$) OR (oldfilename$<>check_filename$)
00036608 <AmiBlitz3.ab2@27140>     JSR free_unusedfunctions
00036652 <AmiBlitz3.ab2@27142>   olddirname$ = Peek$(check_dirname$)
0003669C <AmiBlitz3.ab2@27143>   oldfilename$ = Peek$(check_filename$)
000366C6 <AmiBlitz3.ab2@27144>   For i = 0 To #maxincludes-1
000366DA <AmiBlitz3.ab2@27145>     incline(i) = 0
000366EA <AmiBlitz3.ab2@27146>   Next
00036708 <AmiBlitz3.ab2@27147>   !asm
0003670A <AmiBlitz3.ab2@27148> RTS
0003670C <AmiBlitz3.ab2@27152>   MOVEQ #0,d1
0003670E <AmiBlitz3.ab2@27155>   MOVE.b (a5)+,d0
00036712 <AmiBlitz3.ab2@27156>   BEQ 'er1
00036716 <AmiBlitz3.ab2@27157>   CMP.b #$20,d0
0003671A <AmiBlitz3.ab2@27158>   BEQ 'l1
0003671C <AmiBlitz3.ab2@27159>   ADDQ #1,d1
00036720 <AmiBlitz3.ab2@27160>   CMP.b #$22,d0
00036724 <AmiBlitz3.ab2@27161>   BNE 'l1
00036726 <AmiBlitz3.ab2@27162> RTS
0003672C <AmiBlitz3.ab2@27165> JMP syntaxerr
00036750 <AmiBlitz3.ab2@27176> erro1t   Dc.b "Only one BSS / Chip Segment allowed",0 : Even
0003676E <AmiBlitz3.ab2@27177> nodata   Dc.b "BSS Segment contains Data!!!!",0       : Even
00036774 <AmiBlitz3.ab2@27182>   TST.b exdebug
00036778 <AmiBlitz3.ab2@27183>   BNE 'l10
0003677E <AmiBlitz3.ab2@27184>   MOVE.l #$4e71,d1
00036784 <AmiBlitz3.ab2@27185>   JSR writeword
0003678A <AmiBlitz3.ab2@27186>   MOVE.l destpointer,d0
0003678C <AmiBlitz3.ab2@27187>   MOVE.l d0,d1
0003678E <AmiBlitz3.ab2@27188>   ADDQ.l #3,d1
00036794 <AmiBlitz3.ab2@27189>   AND.l #$fffffffc,d1
0003679A <AmiBlitz3.ab2@27190>   MOVE.l d1,destpointer
000367A0 <AmiBlitz3.ab2@27191>   SUB.l destpointer,d0
000367A4 <AmiBlitz3.ab2@27192>   BEQ 'lnf1
000367AE <AmiBlitz3.ab2@27193>   CMP.l #-1,bssstart
000367B2 <AmiBlitz3.ab2@27194>   BNE 'lnf1
000367BC <AmiBlitz3.ab2@27195>   CMP.l #-1,chipstart
000367C0 <AmiBlitz3.ab2@27196>   BNE 'lnf1
000367C6 <AmiBlitz3.ab2@27197>   MOVE.l destpointer,a4
000367CC <AmiBlitz3.ab2@27198>   TST.w dontwrite
000367D0 <AmiBlitz3.ab2@27199>   BNE 'lnf1
000367D6 <AmiBlitz3.ab2@27200>   MOVE.w #$4e71,-2(a4)
000367E0 <AmiBlitz3.ab2@27203>   CMP.l #-1,bssstart
000367E4 <AmiBlitz3.ab2@27204>   BEQ 'l11
000367EA <AmiBlitz3.ab2@27205>   MOVE.l #erro1t,-(a7)
000367F0 <AmiBlitz3.ab2@27206> JMP handle_compileerror
000367FA <AmiBlitz3.ab2@27209>   MOVE.l destpointer,bssstart
00036802 <AmiBlitz3.ab2@27210>   MOVE.b #1,bssmode
00036808 <AmiBlitz3.ab2@27213>   TST.b chipmode
0003680C <AmiBlitz3.ab2@27214>   BEQ 'l10
00036816 <AmiBlitz3.ab2@27215>   MOVE.l destpointer,chipend
0003681C <AmiBlitz3.ab2@27216>   CLR.b chipmode
00036822 <AmiBlitz3.ab2@27219>   JSR get1bytemain
00036824 <AmiBlitz3.ab2@27220> RTS
0003682A <AmiBlitz3.ab2@27224>    TST.b exdebug
0003682E <AmiBlitz3.ab2@27225>   BNE 'x1
00036834 <AmiBlitz3.ab2@27226>   MOVE.l destpointer,d0
0003683A <AmiBlitz3.ab2@27227>   MOVE.l d0,realbssend
00036840 <AmiBlitz3.ab2@27228>   MOVE.l #$4e71,d1
00036846 <AmiBlitz3.ab2@27229>   JSR writeword
0003684C <AmiBlitz3.ab2@27230>   MOVE.l destpointer,d0
0003684E <AmiBlitz3.ab2@27231>   MOVE.l d0,d1
00036850 <AmiBlitz3.ab2@27232>   ADDQ.l #3,d1
00036856 <AmiBlitz3.ab2@27233>   AND.l #$fffffffc,d1
0003685C <AmiBlitz3.ab2@27234>   MOVE.l d1,destpointer
00036862 <AmiBlitz3.ab2@27235>   SUB.l destpointer,d0
00036866 <AmiBlitz3.ab2@27236>   BEQ 'lnf1
0003686C <AmiBlitz3.ab2@27237>   MOVE.l destpointer,a4
00036876 <AmiBlitz3.ab2@27238>   CMP.l #-1,bssstart
0003687A <AmiBlitz3.ab2@27239>   BNE 'lnf1
00036884 <AmiBlitz3.ab2@27240>   CMP.l #-1,chipstart
00036888 <AmiBlitz3.ab2@27241>   BNE 'lnf1
0003688E <AmiBlitz3.ab2@27242>   TST.w dontwrite
00036892 <AmiBlitz3.ab2@27243>   BNE 'lnf1
00036898 <AmiBlitz3.ab2@27244>   MOVE.w #$4e71,-2(a4)
0003689E <AmiBlitz3.ab2@27247>   TST.b bssmode
000368A2 <AmiBlitz3.ab2@27248>   BEQ 'l10
000368AC <AmiBlitz3.ab2@27249>   MOVE.l destpointer,bssend
000368B2 <AmiBlitz3.ab2@27250>   CLR.b bssmode
000368BC <AmiBlitz3.ab2@27255>   CMP.l #-1,chipstart
000368C0 <AmiBlitz3.ab2@27256>   BEQ 'l11
000368C6 <AmiBlitz3.ab2@27257>   MOVE.l #erro1t,-(a7)
000368CC <AmiBlitz3.ab2@27258> JMP handle_compileerror
000368D6 <AmiBlitz3.ab2@27261>   MOVE.l destpointer,chipstart
000368DE <AmiBlitz3.ab2@27262>   MOVE.b #1,chipmode
000368E4 <AmiBlitz3.ab2@27265>   JSR get1bytemain
000368E6 <AmiBlitz3.ab2@27266> RTS
00036910 <AmiBlitz3.ab2@27270>   !basic
00036922 <AmiBlitz3.ab2@27280>   i.l = Peek.w(?ininclude)
00036948 <AmiBlitz3.ab2@27281>   If i>=0 AND i<#maxincludes
0003697A <AmiBlitz3.ab2@27282>     incdim (i) = Peek.s(?includetemp2)
00036994 <AmiBlitz3.ab2@27283>     incline(i) = Peek.l(?includeline)
0003699E <AmiBlitz3.ab2@27285>     If CLIMode
00036A4C <AmiBlitz3.ab2@27286>       If cli_verbose>=2 Then NPrint "Include \\22",incdim(i),"\\22..."
00036A6A <AmiBlitz3.ab2@27290>   !asm
00036A6C <AmiBlitz3.ab2@27291> RTS
00036A96 <AmiBlitz3.ab2@27295>   !basic
00036AA8 <AmiBlitz3.ab2@27296>   i.l = Peek.w(?ininclude)
00036ACE <AmiBlitz3.ab2@27297>   If i>=0 AND i<#maxincludes
00036AFE <AmiBlitz3.ab2@27298>     incdim (i) = ""
00036B12 <AmiBlitz3.ab2@27299>     incline(i) = 0
00036B4A <AmiBlitz3.ab2@27300>     If i>0 Then Poke.l (?includeline),incline(i-1)+1
00036B68 <AmiBlitz3.ab2@27302>   !asm
00036B6A <AmiBlitz3.ab2@27303> RTS
00036B70 <AmiBlitz3.ab2@27307>   LEA replacedat,a0
00036B74 <AmiBlitz3.ab2@27308>   Dc.w $3181,$0A00                                         ;MOVE.w d1,0(a0,d0.l*2)
00036B76 <AmiBlitz3.ab2@27309> RTS
00036B7C <AmiBlitz3.ab2@27313>   TST.b fpu
00036B80 <AmiBlitz3.ab2@27314>   BEQ 'l1
00036B8A <AmiBlitz3.ab2@27317>   MOVE.l destpointer,newinitaddr
00036B90 <AmiBlitz3.ab2@27318>   JSR writeword
00036B96 <AmiBlitz3.ab2@27319>   JSR writelong
00036B98 <AmiBlitz3.ab2@27320> RTS
00036B9A <AmiBlitz3.ab2@27325>   TST.b (a5)
00036B9E <AmiBlitz3.ab2@27326>    BEQ.s 'll20
00036BA2 <AmiBlitz3.ab2@27327>   CMP.b #$20,(a5)
00036BA6 <AmiBlitz3.ab2@27328>    BNE.s 'll10
00036BA8 <AmiBlitz3.ab2@27329>   ADDQ.l #1,a5
00036BAC <AmiBlitz3.ab2@27330> BRA.s 'll21
00036BB0 <AmiBlitz3.ab2@27333>   CMP.b #";",(a5)
00036BB4 <AmiBlitz3.ab2@27334>   BNE.s 'll20
00036BB6 <AmiBlitz3.ab2@27337>   TST.b (a5)+
00036BBA <AmiBlitz3.ab2@27338>   BEQ.s 'll23
00036BBE <AmiBlitz3.ab2@27339> BRA.s 'll25
00036BC0 <AmiBlitz3.ab2@27342>   SUBQ.l #1,a5
00036BC2 <AmiBlitz3.ab2@27345> RTS
00036BC6 <AmiBlitz3.ab2@27349>   MOVEM.l a2/d2,-(a7)
00036BC8 <AmiBlitz3.ab2@27350>   MOVEQ #0,d2
00036BCE <AmiBlitz3.ab2@27351>   LEA ptr_parameterstore,a0
00036BD4 <AmiBlitz3.ab2@27352>   LEA chartab,a2
00036BD6 <AmiBlitz3.ab2@27355>   MOVE.b (a5),d0
00036BDA <AmiBlitz3.ab2@27356>   TST.b 0(a2,d0)
00036BDE <AmiBlitz3.ab2@27357>   BNE 'l10
00036BE0 <AmiBlitz3.ab2@27358>   ADDQ.l #1,a5
00036BE2 <AmiBlitz3.ab2@27359>   MOVE.b d0,(a0)+
00036BE4 <AmiBlitz3.ab2@27360>   ADDQ.l #1,d2
00036BE8 <AmiBlitz3.ab2@27361> BRA fc2
00036BEA <AmiBlitz3.ab2@27364>   CLR.b (a0)+
00036BF0 <AmiBlitz3.ab2@27365>   JSR findlabel2
00036BF2 <AmiBlitz3.ab2@27366>   MOVE.l a2,a0
00036BF6 <AmiBlitz3.ab2@27367>   MOVEM.l (a7)+,a2/d2
00036BF8 <AmiBlitz3.ab2@27368> RTS
00036BFA <AmiBlitz3.ab2@27372>   TST.l d0
00036BFE <AmiBlitz3.ab2@27373>   BNE 'l10
00036C04 <AmiBlitz3.ab2@27374>     MOVE.l #syntax_,-(a7)
00036C0A <AmiBlitz3.ab2@27375> JMP handle_compileerror
00036C10 <AmiBlitz3.ab2@27378>   CMP.l #1,d0
00036C14 <AmiBlitz3.ab2@27379>   BNE 'l20
00036C1A <AmiBlitz3.ab2@27380>     MOVE.l #overflow,-(a7)
00036C20 <AmiBlitz3.ab2@27381> JMP handle_compileerror
00036C22 <AmiBlitz3.ab2@27384>   ADD.l a2,d0
00036C24 <AmiBlitz3.ab2@27385>   MOVE.l d0,-(a7)
00036C2A <AmiBlitz3.ab2@27386> JMP handle_compileerror
00036C30 <AmiBlitz3.ab2@27390>   JMP _return
00036C36 <AmiBlitz3.ab2@27391>   JMP _return
00036C3C <AmiBlitz3.ab2@27392>   JMP _return
00036C42 <AmiBlitz3.ab2@27393>   JMP _return
00036C48 <AmiBlitz3.ab2@27394>   JMP _return
00036C4E <AmiBlitz3.ab2@27395>   JMP _return
00036C54 <AmiBlitz3.ab2@27396>   JMP _return
00036C5A <AmiBlitz3.ab2@27397>   JMP _return
00036C60 <AmiBlitz3.ab2@27398>   JMP _return
00036C66 <AmiBlitz3.ab2@27399>   JMP _return
00036C6C <AmiBlitz3.ab2@27400>   JMP Atokejsr
00036C72 <AmiBlitz3.ab2@27401>   JMP writeinit
00036C78 <AmiBlitz3.ab2@27402>   JMP macroexecute
00036C7E <AmiBlitz3.ab2@27403>   JMP findnext
00036C84 <AmiBlitz3.ab2@27404>   JMP replacelib
00036C8A <AmiBlitz3.ab2@27405>   JMP findconstant2
00036C90 <AmiBlitz3.ab2@27406>   JMP findchar                                             ;char in d1
00036C96 <AmiBlitz3.ab2@27407>   JMP stripspaces
00036C9C <AmiBlitz3.ab2@27408>   JMP calc                                                 ;d0 varmode
00036CA2 <AmiBlitz3.ab2@27409>   JMP error
00036CA8 <AmiBlitz3.ab2@27410>   JMP writelong                                            ;d1 value
00036CAE <AmiBlitz3.ab2@27411>   JMP writeword                                            ;d1 value
00036CB4 <AmiBlitz3.ab2@27412>   JMP writebyte                                            ;d1 value
00036CBA <AmiBlitz3.ab2@27413> JMP exit
00036CBE <AmiBlitz3.ab2@27417>   destpointer:    Ds.l 1                                ;pc org source      ;Ds.w 1
00036CC0 <AmiBlitz3.ab2@27420>   fast            Dc.w 0
00036CC2 <AmiBlitz3.ab2@27421>   fpu             Dc.w 0
00036CC4 <AmiBlitz3.ab2@27422>   newsyntax       Dc.w 0
00036CC5 <AmiBlitz3.ab2@27424>   optistring      Dc.b 0
00036CC6 <AmiBlitz3.ab2@27425>   optistring2     Dc.b 0
00036CC7 <AmiBlitz3.ab2@27426>   optiarray       Dc.b 0
00036CC8 <AmiBlitz3.ab2@27427>   quickadd        Dc.b 0
00036CCA <AmiBlitz3.ab2@27428>   newmode         Dc.w 0
00036CCC <AmiBlitz3.ab2@27429>   mode            Dc.w 0
00036CCE <AmiBlitz3.ab2@27430>   string1         Dc.w 0
00036CD0 <AmiBlitz3.ab2@27431>   load_var_size   Dc.w 0
00036CD2 <AmiBlitz3.ab2@27432>   load_var_reg    Dc.w 0
00036CD6 <AmiBlitz3.ab2@27433>   load_var_addr   Dc.l 0
00036CD8 <AmiBlitz3.ab2@27434>   imm_size        Dc.w 0
00036CDA <AmiBlitz3.ab2@27435>   imm_reg         Dc.w 0
00036CDE <AmiBlitz3.ab2@27436>   imm_addr        Dc.l 0
00036CDF <AmiBlitz3.ab2@27437>   iee             Dc.b 0
00036CE0 <AmiBlitz3.ab2@27438>   _dcb            Dc.b 0
00036CE4 <AmiBlitz3.ab2@27439>   nohunkoffset    Dc.l 0
00036CE8 <AmiBlitz3.ab2@27442> teddata:        Dc.l tokens
00036CEC <AmiBlitz3.ab2@27443>                 Dc.l 0 ;compilermenu_entries               ; NOT used anymore
00036CF0 <AmiBlitz3.ab2@27444>                 Dc.l read_xtrafile
00036CF4 <AmiBlitz3.ab2@27445>                 Dc.l write_xtrafile
00036CF8 <AmiBlitz3.ab2@27446>                 Dc.l call_menuentry                        ; compile AND RUN ?
00036CFC <AmiBlitz3.ab2@27447>                 Dc.l 0
00036D00 <AmiBlitz3.ab2@27448>                 Dc.b ":",34,".;"
00036D04 <AmiBlitz3.ab2@27449>                 Dc.l "NEW1"
00036D08 <AmiBlitz3.ab2@27450>                 Dc.l newtypebase
00036D0C <AmiBlitz3.ab2@27451> realconstbase:  Dc.l labelbase
00036D10 <AmiBlitz3.ab2@27452> deflib          Dc.l 0
00036D14 <AmiBlitz3.ab2@27453> incd            Dc.l 0
00036D18 <AmiBlitz3.ab2@27454>                 Dc.l 0
00036D1C <AmiBlitz3.ab2@27455>                 Dc.l 0
00036D20 <AmiBlitz3.ab2@27456>                 Dc.l 0
00036D22 <AmiBlitz3.ab2@27457> _return         RTS
00036D23 <AmiBlitz3.ab2@27458>                 Dc.b 0
00037123 <AmiBlitz3.ab2@27459> chartab2        Ds.l 256
00037127 <AmiBlitz3.ab2@27460> codeend         Dc.l 0
0003712B <AmiBlitz3.ab2@27461> hunkoffsetnum   Dc.l 0
0003712F <AmiBlitz3.ab2@27462> chipsize        Dc.l 0
00037133 <AmiBlitz3.ab2@27463> bsssize         Dc.l 0
00037137 <AmiBlitz3.ab2@27464> bssstart        Dc.l -1
0003713B <AmiBlitz3.ab2@27465> bssend          Dc.l -1
0003713F <AmiBlitz3.ab2@27466> chipstart       Dc.l -1
00037143 <AmiBlitz3.ab2@27467> chipend         Dc.l -1
00037144 <AmiBlitz3.ab2@27468> bssmode         Dc.b 0
00037145 <AmiBlitz3.ab2@27469> chipmode        Dc.b 0
00037146 <AmiBlitz3.ab2@27470> newhunk         Dc.b 0
0003714A <AmiBlitz3.ab2@27471> bssnum          Dc.l 0
0003714E <AmiBlitz3.ab2@27472> chipnum         Dc.l 0
00037152 <AmiBlitz3.ab2@27473> lastinstruction Dc.l 0
00037156 <AmiBlitz3.ab2@27474> lastinstructionaddr Dc.l 0
0003716A <AmiBlitz3.ab2@27475> hunkbegin       Dc.l $03F3,$00,$02,$00,$01
0003716E <AmiBlitz3.ab2@27476> tstsize1b:      Ds.l 1
00037172 <AmiBlitz3.ab2@27477> bsssize2        Dc.l 1
00037176 <AmiBlitz3.ab2@27478>                 Dc.l $03E9
0003717A <AmiBlitz3.ab2@27479> tstsize2b:      Dc.l $100
0003718E <AmiBlitz3.ab2@27480> hunkbegin2      Dc.l $03F3,$00,$03,$00,$02
00037192 <AmiBlitz3.ab2@27481> tstsize1c:      Ds.l 1
00037196 <AmiBlitz3.ab2@27482> bsssize3        Dc.l 1
0003719A <AmiBlitz3.ab2@27483> chipsize2       Dc.l 1
0003719E <AmiBlitz3.ab2@27484>                 Dc.l $3e9
000371A2 <AmiBlitz3.ab2@27485> tstsize2c       Dc.l 0
000371B2 <AmiBlitz3.ab2@27486> hunkend         Dc.l $3f2,$3eb,0,$3f2
000371C2 <AmiBlitz3.ab2@27487> hunkend2        Dc.l $3f2,$3ea,0,$3f2
000371C9 <AmiBlitz3.ab2@27488> strcpy          Dc.b "strcpy",0
000371D0 <AmiBlitz3.ab2@27489> strcmp          Dc.b "strcmp",0
000371D7 <AmiBlitz3.ab2@27490> strvar          Dc.b "strvar",0
000371DC <AmiBlitz3.ab2@27491> qmul            Dc.b "qmul",0
000371E1 <AmiBlitz3.ab2@27492> qdiv            Dc.b "qdiv",0
000371E8 <AmiBlitz3.ab2@27493> _MaxLen         Dc.b "maxlen",0
000371ED <AmiBlitz3.ab2@27494> notf            Dc.b "????",0
00037210 <AmiBlitz3.ab2@27496> errtext         Dc.b "only reg addressing Mode supported",0
0003723A <AmiBlitz3.ab2@27497> fpuerr          Dc.b "Instruction not yet supported by 68K FPU ",0
0003727C <AmiBlitz3.ab2@27498> cmplxerr        Dc.b "Formula too complex for 68K FPU or too much regload register used",0 : Even
0003727E <AmiBlitz3.ab2@27499> peeksize        Dc.w 0
00037282 <AmiBlitz3.ab2@27501> mainstart       Dc.l 0
00037283 <AmiBlitz3.ab2@27503> infunctioncode  Dc.b 0
00037285 <AmiBlitz3.ab2@27504> regnumstore     Dc.w 0
000372B2 <AmiBlitz3.ab2@27505>                 Dc.b "$VER: AmiBlitz3 \\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
000372BA <AmiBlitz3.ab2@27506> testcode        Dc.b "print i",0
0003731E <AmiBlitz3.ab2@27507>                 Ds.b 100
0003732C <AmiBlitz3.ab2@27508> devo            Dc.b "developobject",0 : Even
0003733E <AmiBlitz3.ab2@27509> autostorename   Dc.b "__autoconstantnum",0
00037348 <AmiBlitz3.ab2@27510> _include        Dc.b "__include",0
00037350 <AmiBlitz3.ab2@27511> _debug          Dc.b "__debug",0
00037354 <AmiBlitz3.ab2@27512> unusedfunc      Dc.l 0
00037356 <AmiBlitz3.ab2@27516> MOVE.l a0,d0
00037380 <AmiBlitz3.ab2@27517> !basic
00037384 <AmiBlitz3.ab2@27518> *olderror.l= PutD0
000373DE <AmiBlitz3.ab2@27519> 
00037412 <AmiBlitz3.ab2@27520> error_type$ = error$
000374AE <AmiBlitz3.ab2@27521> 
000374C2 <AmiBlitz3.ab2@27522> If Peek.l (?beforeparameterfetch)
000374D8 <AmiBlitz3.ab2@27523>   MaxLen detokenline.s = 65536
0003751A <AmiBlitz3.ab2@27524>  !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0003752A <AmiBlitz3.ab2@27525>  *tn.preprocessor = Peek.l(?include_preprocessor)
00037554 <AmiBlitz3.ab2@27526>   written.l = preproc_DetokenizeLine{*tn,Peek.l (?beforeparameterfetch),&detokenline}
0003757C <AmiBlitz3.ab2@27527>   If written>0 Then Poke.b &detokenline+written,0
000375A6 <AmiBlitz3.ab2@27528>   sourceLineText.s = Peek.s(&detokenline)
000375AC <AmiBlitz3.ab2@27529> Else
000375D4 <AmiBlitz3.ab2@27530>   sourceLineText = "NULL"
00037608 <AmiBlitz3.ab2@27532> error_source$ = sourceLineText
0003765A <AmiBlitz3.ab2@27533> error$=error$+sourceLineText
00037660 <AmiBlitz3.ab2@27534> GetD0 &error$
0003767E <AmiBlitz3.ab2@27535> !asm
00037680 <AmiBlitz3.ab2@27536> MOVE.l d0,a0
00037682 <AmiBlitz3.ab2@27537> RTS
00037684 <AmiBlitz3.ab2@27541>   MOVE.l a0,-(a7)
00037686 <AmiBlitz3.ab2@27542>   MOVE.l a0,d0
00037688 <AmiBlitz3.ab2@27543>   MOVE.l a5,a0                                             ;macro title
000376B2 <AmiBlitz3.ab2@27544>   !basic
000376B6 <AmiBlitz3.ab2@27545>   i = PutD0
000376B8 <AmiBlitz3.ab2@27546>   MOVEQ #20,d0
000376BA <AmiBlitz3.ab2@27549>     MOVE.b -(a0),d1
000376BE <AmiBlitz3.ab2@27550>     BEQ 'l1
000376C2 <AmiBlitz3.ab2@27551>     CMP.b #":",d1
000376C6 <AmiBlitz3.ab2@27552>     BEQ 'l1
000376C8 <AmiBlitz3.ab2@27553>     SUBQ.l #1,d0
000376CC <AmiBlitz3.ab2@27554>     BNE 'l2
000376CE <AmiBlitz3.ab2@27557>   ADDQ #1,a0
000376D0 <AmiBlitz3.ab2@27558>   MOVE.l a0,d0
000376D4 <AmiBlitz3.ab2@27559>   i2.l = PutD0
000376F0 <AmiBlitz3.ab2@27560>   If Peek.w (?ininclude)>0
0003774A <AmiBlitz3.ab2@27561>     Poke.s (?includetemp2),incdim(Peek.w(?ininclude)-1)
0003775A <AmiBlitz3.ab2@27562>     errorline.l = Peek.l(?includeline);-1
00037782 <AmiBlitz3.ab2@27563>     Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
000377AC <AmiBlitz3.ab2@27564>     errorfile.s = Peek.s(?includetemp2)
000377B2 <AmiBlitz3.ab2@27565>   Else
000377EA <AmiBlitz3.ab2@27566>     Poke.s (?includetemp2),Peek.s(?ptr_parameterstore)
00037800 <AmiBlitz3.ab2@27567>     errorline.l = Peek.l(?compilelinecounter) + 1
00037834 <AmiBlitz3.ab2@27568>     errorfile.s = cli_sourcefile
0003783E <AmiBlitz3.ab2@27571>   If i
000378E2 <AmiBlitz3.ab2@27572>     errortext.s = !TRANS{Replace$(Peek.s(i),"\\0a","\n")}
00037960 <AmiBlitz3.ab2@27573>     errortext.s = Replace$(errortext,"\n","\\0a")
00037966 <AmiBlitz3.ab2@27574>   Else
0003798E <AmiBlitz3.ab2@27575>     errortext.s = "???"
00037B06 <AmiBlitz3.ab2@27578>   NPrint "\\1b[1m",!TRANS{"Compiler Error"}," #",Peek.l(?errorcounter)," <",errorfile,"@",errorline,">\\1b[0m "
00037BCE <AmiBlitz3.ab2@27579>   NPrint "  ",error_type$,"\\n  ",error_source$
00037BEC <AmiBlitz3.ab2@27583>   !asm
00037BEE <AmiBlitz3.ab2@27584>   MOVE.l (a7)+,a0
00037BF0 <AmiBlitz3.ab2@27585> RTS
00037BF2 <AmiBlitz3.ab2@27589>   MOVE.l a0,-(a7)
00037BF4 <AmiBlitz3.ab2@27590>   MOVE.l a0,d0
00037BF6 <AmiBlitz3.ab2@27591>   MOVE.l a5,a0                                             ;macro title
00037C20 <AmiBlitz3.ab2@27592>   !basic
00037C24 <AmiBlitz3.ab2@27593>   i = PutD0
00037C26 <AmiBlitz3.ab2@27594>   MOVEQ #20,d0
00037C28 <AmiBlitz3.ab2@27597>     MOVE.b -(a0),d1
00037C2C <AmiBlitz3.ab2@27598>     BEQ 'l1
00037C30 <AmiBlitz3.ab2@27599>     CMP.b #":",d1
00037C34 <AmiBlitz3.ab2@27600>     BEQ 'l1
00037C36 <AmiBlitz3.ab2@27601>     SUBQ.l #1,d0
00037C3A <AmiBlitz3.ab2@27602>     BNE 'l2
00037C3C <AmiBlitz3.ab2@27605>   ADDQ #1,a0
00037C3E <AmiBlitz3.ab2@27606>   MOVE.l a0,d0
00037C42 <AmiBlitz3.ab2@27607>   i2.l = PutD0
00037CC6 <AmiBlitz3.ab2@27608>   fid.l = file_Open{dos_AddPart{my_systemdir$,"ab_compileerror.txt"},#file_forcewrite}
00037CDA <AmiBlitz3.ab2@27609>   If fid <> -1
00037CF6 <AmiBlitz3.ab2@27610>     If Peek.w (?ininclude)>0
00037D50 <AmiBlitz3.ab2@27611>       Poke$(?includetemp2),incdim(Peek.w(?ininclude)-1)
00037D56 <AmiBlitz3.ab2@27612>     Else
00037D82 <AmiBlitz3.ab2@27613>       Poke$(?includetemp2),""
00037DAC <AmiBlitz3.ab2@27615>     a$ = Peek$(?includetemp2)
00037E1E <AmiBlitz3.ab2@27616>     x$ = Replace$(Peek$(i),"\\0a","\n")
00037E50 <AmiBlitz3.ab2@27617>     file_WriteLine{fid,x$}
00037E9A <AmiBlitz3.ab2@27618>     file_WriteLine{fid,Str$(Peek.l(?compilelinecounter) + 1)}
00037EC6 <AmiBlitz3.ab2@27619>     If a$
00037EF8 <AmiBlitz3.ab2@27620>       file_WriteLine{fid,a$}
00037F42 <AmiBlitz3.ab2@27621>       file_WriteLine{fid,Str$(Peek.l(?includeline)-1)}
00037F6A <AmiBlitz3.ab2@27622>       Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
00037F70 <AmiBlitz3.ab2@27623>     Else
00037F96 <AmiBlitz3.ab2@27624>       file_WriteLine{fid,"none"}
00037FC6 <AmiBlitz3.ab2@27626>     file_WriteLine{fid,Peek$(i2)}
0003801C <AmiBlitz3.ab2@27627>     file_WriteLine{fid,Str$(Peek.l(?globallinecount))+" line(s) compiled"}
00038066 <AmiBlitz3.ab2@27628>     file_WriteLine{fid,Hex$(Peek.w(?globalvarpointer))+" global var base"}
00038070 <AmiBlitz3.ab2@27629>     file_Close{fid}
0003808E <AmiBlitz3.ab2@27631>   !asm
00038090 <AmiBlitz3.ab2@27632>   MOVE.l (a7)+,a0
00038092 <AmiBlitz3.ab2@27633> RTS
000380BC <AmiBlitz3.ab2@27637>   !basic
000380C0 <AmiBlitz3.ab2@27638>   progress.l     = PutD0
000380D2 <AmiBlitz3.ab2@27639>   total.l        = Peek.w(?progressbar_width)
000380F0 <AmiBlitz3.ab2@27640>   calcpro        = (progress * 100) / total +1
00038102 <AmiBlitz3.ab2@27641>   pass.l         = Peek.w(?pass)
00038114 <AmiBlitz3.ab2@27642>   typ.l          = Peek.w(?compiler_job)
00038132 <AmiBlitz3.ab2@27645> If (pass><pass_old OR typ><typ_old)
00038140 <AmiBlitz3.ab2@27647>     If pass_old><pass
000381DC <AmiBlitz3.ab2@27648>       passtatusstr.s = !TRANS{"Pass"}+" "+Str$(pass)+"..."
00038232 <AmiBlitz3.ab2@27649>       If cli_verbose>=2 Then NPrint passtatusstr
00038238 <AmiBlitz3.ab2@27652>     pass_old = pass
0003823E <AmiBlitz3.ab2@27653>     typ_old  = typ
00038244 <AmiBlitz3.ab2@27654>     update_comstatus_gui = True
00038256 <AmiBlitz3.ab2@27655>     If typ=0
00038336 <AmiBlitz3.ab2@27656>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Compiling Sources..."}
0003833E <AmiBlitz3.ab2@27657>       calcpro = 0  ; set gauge to 0
00038350 <AmiBlitz3.ab2@27659>     If typ=1
00038430 <AmiBlitz3.ab2@27660>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Building Executable..."}
00038438 <AmiBlitz3.ab2@27661>       calcpro = 0  ; set gauge to 0
0003848E <AmiBlitz3.ab2@27664>     If cli_verbose>=3 Then NPrint comstatusstr
0003849C <AmiBlitz3.ab2@27667>   If (calcpro >< calcpro_old)
000384F0 <AmiBlitz3.ab2@27668>     If cli_verbose>=4 Then NPrint calcpro,"% compiled..."
000384F6 <AmiBlitz3.ab2@27669>     calcpro_old = calcpro
000384FC <AmiBlitz3.ab2@27670>     update_comstatus_gui = True
00038516 <AmiBlitz3.ab2@27673>   If update_comstatus_gui = True                                     ; check if a update of the gui nessecary
00038534 <AmiBlitz3.ab2@27674>     !asm
00038566 <AmiBlitz3.ab2@27675> 
00038590 <AmiBlitz3.ab2@27676>     !basic
00038596 <AmiBlitz3.ab2@27677>     update_comstatus_gui  = False ; because we update the gui
000385B4 <AmiBlitz3.ab2@27679>   !asm
000385B6 <AmiBlitz3.ab2@27680> RTS
000385BC <AmiBlitz3.ab2@27685>   MOVE.w maxobject_pos,D5                                  ;max objects 1. visible
000385C2 <AmiBlitz3.ab2@27686>   LEA maxobjects_value,A3                                  ;current value
000385C8 <AmiBlitz3.ab2@27687>   MOVEA.l libpointer,A2
000385CC <AmiBlitz3.ab2@27690>   CMPA.w #$0,A2
000385D0 <AmiBlitz3.ab2@27691>   BEQ.w menu4c__igotb
000385D2 <AmiBlitz3.ab2@27692>   MOVEA.l A2,A1
000385D6 <AmiBlitz3.ab2@27693>   ADDA.l $12(A1),A1
000385DA <AmiBlitz3.ab2@27694>   TST.w -$2(A1)
000385DE <AmiBlitz3.ab2@27695>   BEQ.w JL_0_FFF6b
000385E0 <AmiBlitz3.ab2@27696>   SUBQ.w #1,D5
000385E4 <AmiBlitz3.ab2@27697>   BMI.w JL_0_FFFCb
000385E6 <AmiBlitz3.ab2@27700>   MOVEA.l (A2),A2
000385EA <AmiBlitz3.ab2@27701> BRA.w JL_0_FFDAb
000385EE <AmiBlitz3.ab2@27704>   MOVE.w (A3),-$4(A1)
000385F0 <AmiBlitz3.ab2@27707> RTS
000385F6 <AmiBlitz3.ab2@27711>   MOVE.w debugnest,d0
000385FC <AmiBlitz3.ab2@27712>   LEA storedebugmode, a0
00038604 <AmiBlitz3.ab2@27713>   MOVE.b 0(a0,d0.w),debugmode
0003860A <AmiBlitz3.ab2@27714>   TST.w debugnest
0003860E <AmiBlitz3.ab2@27715>   BEQ JUMP_unpairrunerrs
00038614 <AmiBlitz3.ab2@27716>   SUBQ.w #1,debugnest
00038616 <AmiBlitz3.ab2@27717> RTS
0003861C <AmiBlitz3.ab2@27720> JMP runerrsoverflow
00038622 <AmiBlitz3.ab2@27723> JMP unpairrunerrs
0003862A <AmiBlitz3.ab2@27727>   BCHG #$7,use_debugger
00038632 <AmiBlitz3.ab2@27729>   BTST #$7,use_debugger
00038636 <AmiBlitz3.ab2@27730>   BNE 'debugon
0003863C <AmiBlitz3.ab2@27731>   CLR.w debugmode
00038640 <AmiBlitz3.ab2@27732> BRA.b 'debugoff
00038646 <AmiBlitz3.ab2@27735>   SNE debugmode
00038648 <AmiBlitz3.ab2@27738>   MOVE.l a0,-(a7)
00038680 <AmiBlitz3.ab2@27741>   !ComData_SetB{comByte_DebugMode,debugmode}
00038682 <AmiBlitz3.ab2@27746>   MOVE.l (a7)+,a0
00038684 <AmiBlitz3.ab2@27747> RTS
0003868C <AmiBlitz3.ab2@27752>   BTST #$7,use_debugger
00038690 <AmiBlitz3.ab2@27753>   BNE 'debugon
00038696 <AmiBlitz3.ab2@27754>   CLR.w debugmode
0003869A <AmiBlitz3.ab2@27755> BRA.b 'debugoff
000386A0 <AmiBlitz3.ab2@27758>   SNE debugmode
000386A2 <AmiBlitz3.ab2@27761> RTS
000386A8 <AmiBlitz3.ab2@27765>   ADDQ.w #1,debugnest
000386AE <AmiBlitz3.ab2@27766>   MOVE.w debugnest,d0
000386B2 <AmiBlitz3.ab2@27767>   CMP.w #18,d0
000386B6 <AmiBlitz3.ab2@27768>    BGE JUMP_runerrsoverflow
000386BC <AmiBlitz3.ab2@27769>   LEA storedebugmode, a0
000386C4 <AmiBlitz3.ab2@27770>   MOVE.b debugmode,0( a0,d0.w)
000386CA <AmiBlitz3.ab2@27773>   SF debugmode
000386CC <AmiBlitz3.ab2@27774> RTS
0003874C <AmiBlitz3.ab2@27777> usedpath:  Ds.l 32
00038750 <AmiBlitz3.ab2@27781>   BEQ.w JUMP_syntaxerr
00038756 <AmiBlitz3.ab2@27782>   LEA lastpath,A0
0003875A <AmiBlitz3.ab2@27783>   MOVEM.l a0-a1/d0,-(a7)
00038760 <AmiBlitz3.ab2@27784>   LEA lastpath2,a1
00038762 <AmiBlitz3.ab2@27787>     MOVE.b (a0)+,(a1)+
00038766 <AmiBlitz3.ab2@27788>   BNE 'l2
0003876A <AmiBlitz3.ab2@27789>   MOVEM.l (a7)+,a0-a1/d0
0003876E <AmiBlitz3.ab2@27790>   LEA usedpath(PC),A0
00038772 <AmiBlitz3.ab2@27791>   MOVEM.l a0-a1/d0,-(a7)
00038778 <AmiBlitz3.ab2@27792>   LEA lastpath,a1
0003877A <AmiBlitz3.ab2@27795>     MOVE.b (a0)+,(a1)+
0003877E <AmiBlitz3.ab2@27796>   BNE 'l1
00038782 <AmiBlitz3.ab2@27797>   MOVEM.l (a7)+,a0-a1/d0
00038784 <AmiBlitz3.ab2@27800>   TST.w D0
00038788 <AmiBlitz3.ab2@27801>    BMI.w JUMP_syntaxerr
0003878A <AmiBlitz3.ab2@27802>   MOVE.b D0,(A0)+
0003878E <AmiBlitz3.ab2@27803>   BSR.w JUMP_get1bytemain
00038792 <AmiBlitz3.ab2@27804>    BNE.w JL_0_4AA8
00038796 <AmiBlitz3.ab2@27805>   MOVE.b #$2,(A0)
00038798 <AmiBlitz3.ab2@27806> RTS
0003879C <AmiBlitz3.ab2@27810>   BEQ.w JUMP_syntaxerr
000387A2 <AmiBlitz3.ab2@27811>   LEA path2,A0
000387A4 <AmiBlitz3.ab2@27821>   TST.w D0
000387A8 <AmiBlitz3.ab2@27822>    BMI.w JUMP_syntaxerr
000387AA <AmiBlitz3.ab2@27823>   MOVE.b D0,(A0)+
000387AE <AmiBlitz3.ab2@27824>   BSR.w JUMP_get1bytemain
000387B2 <AmiBlitz3.ab2@27825>    BNE.w JL_0_4AA8b
000387B6 <AmiBlitz3.ab2@27826>   MOVE.b #$2,(A0)
000387B8 <AmiBlitz3.ab2@27827> RTS
000387BE <AmiBlitz3.ab2@27836> JMP errormsg_reg
000387C8 <AmiBlitz3.ab2@27840>   MOVE.l #$f22d6780,fpucodeglobal
000387D2 <AmiBlitz3.ab2@27841>   MOVE.l #$f22c6780,fpucodelocal
000387D8 <AmiBlitz3.ab2@27842>   LEA regtable,a0
000387E2 <AmiBlitz3.ab2@27843>   MOVE.l #7,maxregs
000387E4 <AmiBlitz3.ab2@27846>   MOVE.l (a0),d0
000387E8 <AmiBlitz3.ab2@27847>   BEQ 'e1
000387EA <AmiBlitz3.ab2@27848>   CLR.l (a0)
000387EE <AmiBlitz3.ab2@27849>   MOVE.w 4(a0),d0
000387F8 <AmiBlitz3.ab2@27850>   MOVE.l fpucodeglobal,fpucode
000387FC <AmiBlitz3.ab2@27851>   TST.w 6(a0)
00038800 <AmiBlitz3.ab2@27852>   BEQ 'glob
0003880A <AmiBlitz3.ab2@27853>   MOVE.l fpucodelocal,fpucode
00038810 <AmiBlitz3.ab2@27856>   MOVE.l fpucode,d1
00038816 <AmiBlitz3.ab2@27857>   JSR writelong
00038820 <AmiBlitz3.ab2@27858>   SUB.l #$80,fpucodelocal
0003882A <AmiBlitz3.ab2@27859>   SUB.l #$80,fpucodeglobal
0003882C <AmiBlitz3.ab2@27860>   MOVE.w d0,d1
00038832 <AmiBlitz3.ab2@27861>   JSR writeword
00038834 <AmiBlitz3.ab2@27862>   ADDQ #8,a0
00038838 <AmiBlitz3.ab2@27863> BRA 'again
0003883A <AmiBlitz3.ab2@27866> RTS
00038840 <AmiBlitz3.ab2@27873> JMP notypeerr
00038846 <AmiBlitz3.ab2@27876> JMP illtypeerr
00038850 <AmiBlitz3.ab2@27879>   MOVE.l #$f22d4780,fpucodeglobal
0003885A <AmiBlitz3.ab2@27880>   MOVE.l #$f22c4780,fpucodelocal
00038860 <AmiBlitz3.ab2@27881>   LEA regtable,a0
00038862 <AmiBlitz3.ab2@27882>   TST.l (a0)
00038866 <AmiBlitz3.ab2@27883>    BNE JUMP_errormsg_reg
00038868 <AmiBlitz3.ab2@27884>   MOVE.l d7,-(a7)
0003886A <AmiBlitz3.ab2@27885>   SUBQ.l #1,a5
00038870 <AmiBlitz3.ab2@27888>   JSR getparameter2
00038874 <AmiBlitz3.ab2@27889>   BEQ.w 'nopar
0003887A <AmiBlitz3.ab2@27890>   MOVE.w d0,lastchar
00038880 <AmiBlitz3.ab2@27891>   JSR findvariable
00038884 <AmiBlitz3.ab2@27892>   BNE 'islocal
0003888E <AmiBlitz3.ab2@27893>   MOVE.l fpucodeglobal,fpucode
00038898 <AmiBlitz3.ab2@27894>   MOVE.l #3,maxregs
0003889A <AmiBlitz3.ab2@27895>   MOVEQ #0,d7
000388A2 <AmiBlitz3.ab2@27898>   CMP.l #newtype_float,$a(a2)                              ;is float type
000388A6 <AmiBlitz3.ab2@27899>    BEQ 'doit
000388AE <AmiBlitz3.ab2@27900>   CMP.l #newtype_double,$a(a2)
000388B2 <AmiBlitz3.ab2@27901>    BNE JUMP_illtypeerr
000388B8 <AmiBlitz3.ab2@27904>   LEA regtable,a0
000388BA <AmiBlitz3.ab2@27905>   MOVEQ #0,d0
000388BC <AmiBlitz3.ab2@27908>   TST.l (a0)
000388C0 <AmiBlitz3.ab2@27909>    BEQ 'store
000388C2 <AmiBlitz3.ab2@27910>   ADDQ.l #4,d0
000388C4 <AmiBlitz3.ab2@27911>   ADDQ.l #8,a0
000388CA <AmiBlitz3.ab2@27912>   CMP.l #16,d0
000388CE <AmiBlitz3.ab2@27913>    BCS 'loop
000388D8 <AmiBlitz3.ab2@27914>   MOVE.l #2,maxregs
000388DE <AmiBlitz3.ab2@27915>   CMP.l #20,d0
000388E2 <AmiBlitz3.ab2@27916>    BCS 'loop
000388EC <AmiBlitz3.ab2@27917>   MOVE.l #1,maxregs
000388F2 <AmiBlitz3.ab2@27918>   CMP.l #24,d0
000388F6 <AmiBlitz3.ab2@27919>    BCS 'loop
000388FC <AmiBlitz3.ab2@27920> JMP toovarerr
00038902 <AmiBlitz3.ab2@27923>   TST.b fpu
00038906 <AmiBlitz3.ab2@27924>    BEQ 'nofpu
00038908 <AmiBlitz3.ab2@27925>   MOVE.l a2,(a0)
0003890E <AmiBlitz3.ab2@27926>   MOVE.w 4(a2),4(a0)
00038912 <AmiBlitz3.ab2@27927>   MOVE.w d7,6(a0)
00038918 <AmiBlitz3.ab2@27928>   MOVE.l fpucode,d1
00038922 <AmiBlitz3.ab2@27929>   SUB.l #$80,fpucodeglobal
0003892C <AmiBlitz3.ab2@27930>   SUB.l #$80,fpucodelocal
00038932 <AmiBlitz3.ab2@27931>   JSR writelong
00038936 <AmiBlitz3.ab2@27932>   MOVE.w 4(a2),d1
0003893C <AmiBlitz3.ab2@27933>   JSR writeword
00038942 <AmiBlitz3.ab2@27936>   MOVE.w lastchar,d0
00038946 <AmiBlitz3.ab2@27937>   CMP.w #":",d0
0003894A <AmiBlitz3.ab2@27938>    BEQ 'nopar
0003894C <AmiBlitz3.ab2@27939>   TST.w d0
00038950 <AmiBlitz3.ab2@27940>    BEQ 'nopar
00038954 <AmiBlitz3.ab2@27941>   CMP.w #",",d0
00038958 <AmiBlitz3.ab2@27942>   BNE JUMP_syntaxerr
0003895C <AmiBlitz3.ab2@27943> BRA 'l2
0003895E <AmiBlitz3.ab2@27946>    MOVE.l (a7)+,d7
00038960 <AmiBlitz3.ab2@27947> RTS
00038962 <AmiBlitz3.ab2@27950>   MOVEQ #1,d7
0003896A <AmiBlitz3.ab2@27951>   MOVE.b #1,newvariable
00038970 <AmiBlitz3.ab2@27952>   LEA firstlocal,a2
00038976 <AmiBlitz3.ab2@27953>   JSR findvariable
0003897C <AmiBlitz3.ab2@27954>   CLR.b newvariable
00038982 <AmiBlitz3.ab2@27955>   CMP.l #-1,d0
00038986 <AmiBlitz3.ab2@27956>   BEQ.w JUMP_notypeerr2
00038990 <AmiBlitz3.ab2@27957>   MOVE.l fpucodelocal,fpucode
00038994 <AmiBlitz3.ab2@27958> BRA 'go
00038998 <AmiBlitz3.ab2@27961>   CMP.b #".",d0
0003899C <AmiBlitz3.ab2@27962>    BNE 'l1
000389A0 <AmiBlitz3.ab2@27963>   BSR JUMP_get1bytemain
000389A4 <AmiBlitz3.ab2@27964>   BSR JUMP_get1bytemain
000389A8 <AmiBlitz3.ab2@27967>   ORI .b #$20,d0
000389AC <AmiBlitz3.ab2@27968>   CMP.b #"d",d0
000389B0 <AmiBlitz3.ab2@27969>    BNE JUMP_illeaerr
000389B4 <AmiBlitz3.ab2@27970>   BSR JUMP_get1bytemain
000389B8 <AmiBlitz3.ab2@27971>   SUB.b #$30,d0
000389BC <AmiBlitz3.ab2@27972>   CMP.b #$7,d0
000389C0 <AmiBlitz3.ab2@27973>    BGT JUMP_syntaxerr
000389C4 <AmiBlitz3.ab2@27974>   MOVE.w #$49c0,d1
000389C6 <AmiBlitz3.ab2@27975>   ADD.b d0,d1
000389CC <AmiBlitz3.ab2@27976>   JSR writeword
000389D0 <AmiBlitz3.ab2@27977>   BSR JUMP_get1bytemain
000389D2 <AmiBlitz3.ab2@27978> RTS
000389D8 <AmiBlitz3.ab2@27982>   LEA lastpath,a0
000389DC <AmiBlitz3.ab2@27983>   LEA usedpath(PC),A1
000389DE <AmiBlitz3.ab2@27986>     MOVE.b (a0)+,(a1)+
000389E2 <AmiBlitz3.ab2@27987>   BNE 'l1
000389E8 <AmiBlitz3.ab2@27989>   LEA lastpath2,a0
000389EE <AmiBlitz3.ab2@27990>   LEA lastpath,A1
000389F0 <AmiBlitz3.ab2@27993>     MOVE.b (a0)+,(a1)+
000389F4 <AmiBlitz3.ab2@27994>   BNE 'l2
000389F6 <AmiBlitz3.ab2@27995> RTS
000389FC <AmiBlitz3.ab2@27999>   TST.b objectcount
00038A00 <AmiBlitz3.ab2@28000>   BEQ 'l2a
00038A06 <AmiBlitz3.ab2@28001> JMP macnesterr
00038A0C <AmiBlitz3.ab2@28004>   LEA devo,a0
00038A12 <AmiBlitz3.ab2@28005>   ADDQ.b #1,objectcount
00038A16 <AmiBlitz3.ab2@28006>   MOVEM.l a1/d2,-(a7)
00038A1C <AmiBlitz3.ab2@28007>   LEA ptr_parameterstore,a1
00038A1E <AmiBlitz3.ab2@28010>     MOVE.b (a0)+,(a1)+
00038A22 <AmiBlitz3.ab2@28011>   BNE 'l1
00038A24 <AmiBlitz3.ab2@28013>   MOVEQ #13,d2
00038A2A <AmiBlitz3.ab2@28014>   JSR findlabel2
00038A2E <AmiBlitz3.ab2@28015>   BNE 'd
00038A32 <AmiBlitz3.ab2@28016>   TST.l 8(a2)
00038A36 <AmiBlitz3.ab2@28017>   BEQ 'd
00038A3C <AmiBlitz3.ab2@28018>   SUBQ.b #1,objectcount
00038A40 <AmiBlitz3.ab2@28019>   MOVEM.l (a7)+,a1/d2
00038A46 <AmiBlitz3.ab2@28020>   JSR skiprest
00038A4E <AmiBlitz3.ab2@28021>   MOVE.b #1,developobject
00038A50 <AmiBlitz3.ab2@28022> RTS
00038A54 <AmiBlitz3.ab2@28025>   MOVEM.l (a7)+,a1/d2
00038A5C <AmiBlitz3.ab2@28026>   MOVE.b #1,resdisable
00038A62 <AmiBlitz3.ab2@28029>   CLR.b developobject
00038A68 <AmiBlitz3.ab2@28030> JMP do_Macro
00038A6E <AmiBlitz3.ab2@28034> JMP illeaerr
00038A74 <AmiBlitz3.ab2@28038>   CLR.b typecheck
00038A7A <AmiBlitz3.ab2@28039>   CLR.b declare
00038A80 <AmiBlitz3.ab2@28040>   CLR.b declare2
00038A84 <AmiBlitz3.ab2@28041>   SUB.b #$30,d0
00038A88 <AmiBlitz3.ab2@28042>   BTST #0,d0
00038A8C <AmiBlitz3.ab2@28043>   BEQ 'l1
00038A94 <AmiBlitz3.ab2@28044>   MOVE.b #1,declare
00038A98 <AmiBlitz3.ab2@28047>   BTST #1,d0
00038A9C <AmiBlitz3.ab2@28048>   BEQ 'l2
00038AA4 <AmiBlitz3.ab2@28049>   MOVE.b #1,declare2
00038AA8 <AmiBlitz3.ab2@28052>   BTST #2,d0
00038AAC <AmiBlitz3.ab2@28053>   BEQ 'l3
00038AB4 <AmiBlitz3.ab2@28054>   MOVE.b #1,typecheck
00038AB8 <AmiBlitz3.ab2@28056>   BSR.w JUMP_get1bytemain
00038ABA <AmiBlitz3.ab2@28057> RTS
00038AC0 <AmiBlitz3.ab2@28060> JMP get1bytemain
00038AEA <AmiBlitz3.ab2@28064>   !basic
00038B0A <AmiBlitz3.ab2@28066>   FillMem ?residents_table,?residents_table_end-?residents_table,0
00038B28 <AmiBlitz3.ab2@28067>   !asm
00038B2A <AmiBlitz3.ab2@28068> Return
00038B2C <AmiBlitz3.ab2@28073>   MOVE.l d2,-(a7)                                          ; D2 -> stack
00038B2E <AmiBlitz3.ab2@28074>   ADDQ #1,a5
00038B30 <AmiBlitz3.ab2@28075>   MOVE.l a5,-(a7)
00038B5A <AmiBlitz3.ab2@28076>   !basic
00038B60 <AmiBlitz3.ab2@28077>   MOVE.l (a7)+,d0 : _myD0.l = PutD0
00038B6A <AmiBlitz3.ab2@28078>   If _myD0
00038BAA <AmiBlitz3.ab2@28079>     newconst$ = UCase$(Peek.s(_myD0))
00038BB0 <AmiBlitz3.ab2@28080>   Else
00038BEA <AmiBlitz3.ab2@28081>     error{"INTERNAL: invalid pointer in check_newconstants!"}
00038C12 <AmiBlitz3.ab2@28082>     nwconst$="xxx"
00038C3A <AmiBlitz3.ab2@28084>   condata$ =""
00038C4A <AmiBlitz3.ab2@28085>   Poke.b ?skip_bytes,0
00038CA6 <AmiBlitz3.ab2@28086>   If Left$(newconst$,2) = "__"
00038D00 <AmiBlitz3.ab2@28087>     Select Mid$(newconst$,3,4)
00038D24 <AmiBlitz3.ab2@28089>      Case "DATE"
00038D7E <AmiBlitz3.ab2@28090>       Select Mid$(newconst$,3,6)
00038DBC <AmiBlitz3.ab2@28091>       Case "DATE__" : DateFormat 1 : Poke.b ?skip_bytes,8
00038E00 <AmiBlitz3.ab2@28092>       Case "DATE_G" : DateFormat 0 : Poke.b ?skip_bytes,12
00038E0E <AmiBlitz3.ab2@28093>       End Select
00038E1C <AmiBlitz3.ab2@28094>       i.l=SystemDate
00038E42 <AmiBlitz3.ab2@28095>       condata$ = Date$ (i)
00038EC0 <AmiBlitz3.ab2@28096>       condata$ = Replace$(condata$,"/",".")
00038EEA <AmiBlitz3.ab2@28098>      Case "VER_"
00038EFA <AmiBlitz3.ab2@28101>       actual_version.l = Peek.l(?versioninformation)
00038F0A <AmiBlitz3.ab2@28102>       actual_build.l   = Peek.l(?number_of_builds)
00038F2E <AmiBlitz3.ab2@28104>       Format ""
00038F88 <AmiBlitz3.ab2@28105>       Select Mid$(newconst$,3,9)
00038FAC <AmiBlitz3.ab2@28107>        Case "VER_MAJOR"
00038FE8 <AmiBlitz3.ab2@28108>         condata$ = Str$(actual_version LSR 24)
00039012 <AmiBlitz3.ab2@28110>        Case "VER_MINOR"
00039056 <AmiBlitz3.ab2@28111>         condata$ = Str$((actual_version LSL 8) LSR 24)
00039080 <AmiBlitz3.ab2@28113>        Case "VER_PATCH"
000390C4 <AmiBlitz3.ab2@28114>         condata$ = Str$((actual_version LSL 16) LSR 24 )
000390EE <AmiBlitz3.ab2@28116>        Case "VER_BUILD"
00039112 <AmiBlitz3.ab2@28117>         Format ""
00039146 <AmiBlitz3.ab2@28118>         condata$ = Str$(actual_build)
0003914C <AmiBlitz3.ab2@28120>        Default
00039174 <AmiBlitz3.ab2@28121>         condata$ = "{unknown compiler constant}"
00039182 <AmiBlitz3.ab2@28123>       End Select
000391A6 <AmiBlitz3.ab2@28124>       Format ""
000391B6 <AmiBlitz3.ab2@28125>       Poke.b ?skip_bytes,11
000391E0 <AmiBlitz3.ab2@28127>      Case "THIS"
0003923A <AmiBlitz3.ab2@28128>       Select Mid$(newconst$,3,9)
0003925E <AmiBlitz3.ab2@28130>        Case "THIS_FUNC"
0003926E <AmiBlitz3.ab2@28131>         Poke.b ?skip_bytes,15
0003928E <AmiBlitz3.ab2@28132>         If Peek.l(?currentfunction)<>0
000392DA <AmiBlitz3.ab2@28133>           condata$ = Peek.s(Peek.l(?currentfunction) + 32 + #funcentry_extend + 1)
000392E0 <AmiBlitz3.ab2@28134>         Else
00039308 <AmiBlitz3.ab2@28135>           condata$ = "GLOBAL"
00039332 <AmiBlitz3.ab2@28138>        Case "THIS_INCL"
00039342 <AmiBlitz3.ab2@28139>         Poke.b ?skip_bytes,14
00039362 <AmiBlitz3.ab2@28140>         If Peek.l(?includetemp2)<>0
000393B0 <AmiBlitz3.ab2@28141>           condata$ = dos_FilePart{Peek$(?includetemp2)}
000393DA <AmiBlitz3.ab2@28144>        Case "THIS_POIN"
000393EA <AmiBlitz3.ab2@28145>         Poke.b ?skip_bytes,14
0003940A <AmiBlitz3.ab2@28146>         If Peek.l(?currentfunction)<>0
00039438 <AmiBlitz3.ab2@28147>           condata$ = Hex$(Peek.l(?currentfunction))
00039446 <AmiBlitz3.ab2@28150>       End Select
00039470 <AmiBlitz3.ab2@28152>      Case "CODE"
00039480 <AmiBlitz3.ab2@28153>       Poke.b ?skip_bytes,10
000394E2 <AmiBlitz3.ab2@28154>       If Mid$(newconst$,3,8) = "CODELINE"
0003951E <AmiBlitz3.ab2@28155>         condata$ = Str$(Peek.l(?globallinecount))
0003952C <AmiBlitz3.ab2@28158>     End Select
00039532 <AmiBlitz3.ab2@28160>   Else
00039586 <AmiBlitz3.ab2@28161>     Select Left$(newconst$,1)
000395AA <AmiBlitz3.ab2@28163>      Case "R"
000395BA <AmiBlitz3.ab2@28164>       Poke.b ?skip_bytes,3
00039632 <AmiBlitz3.ab2@28165>       For i = 1 To Vallong(Mid$(newconst$,2,2))
000396B2 <AmiBlitz3.ab2@28166>         condata$ = condata$ + Mid$(newconst$,4,1)
000396C2 <AmiBlitz3.ab2@28167>       Next
000396EC <AmiBlitz3.ab2@28169>      Case "N"
000396FC <AmiBlitz3.ab2@28170>       Poke.b ?skip_bytes,1
00039720 <AmiBlitz3.ab2@28171>       condata$ = Chr$(10)
00039726 <AmiBlitz3.ab2@28173>      Default
00039738 <AmiBlitz3.ab2@28174>       char1.b = Peek.b(&newconst$)
00039750 <AmiBlitz3.ab2@28175>       char2.b = Peek.b(&newconst$+1)
0003975C <AmiBlitz3.ab2@28176>       nibble1.l = -1
00039768 <AmiBlitz3.ab2@28177>       nibble2.l = -1
000397A6 <AmiBlitz3.ab2@28179>       If (char1>=@"0" AND char1<=@"9") Then nibble1 = char1-@"0"
000397E4 <AmiBlitz3.ab2@28180>       If (char2>=@"0" AND char2<=@"9") Then nibble2 = char2-@"0"
00039828 <AmiBlitz3.ab2@28182>       If (char1>=@"a" AND char1<=@"f") Then nibble1 = char1-@"a" + 10
0003986C <AmiBlitz3.ab2@28183>       If (char2>=@"a" AND char2<=@"f") Then nibble2 = char2-@"a" + 10
000398B0 <AmiBlitz3.ab2@28185>       If (char1>=@"A" AND char1<=@"F") Then nibble1 = char1-@"A" + 10
000398F4 <AmiBlitz3.ab2@28186>       If (char2>=@"A" AND char2<=@"F") Then nibble2 = char2-@"A" + 10
0003991A <AmiBlitz3.ab2@28188>       If nibble1>=0 AND nibble2>=0
00039930 <AmiBlitz3.ab2@28189>         newchar.l = (nibble1 LSL 4) + (nibble2)
00039954 <AmiBlitz3.ab2@28190>         condata$ = Chr$(newchar)
00039964 <AmiBlitz3.ab2@28191>         Poke.b ?skip_bytes,2
00039972 <AmiBlitz3.ab2@28194>     End Select
000399D2 <AmiBlitz3.ab2@28196>   If condata$ = "" AND Peek.b(?skip_bytes)=0
00039AF8 <AmiBlitz3.ab2@28197>     !cout{"detected unknown const: " + newconst$}
00039B2C <AmiBlitz3.ab2@28198>     condata$ = newconst$
00039B42 <AmiBlitz3.ab2@28201>   GetD0 FLen(condata$)-1                                    ; laenge zielstring -> Stack
00039B44 <AmiBlitz3.ab2@28202>   MOVE.l d0,d2
00039B46 <AmiBlitz3.ab2@28203>   MOVE.l d2,-(a7)
00039B4C <AmiBlitz3.ab2@28205>   GetD0 &condata$                                          ; kopieren des neuen Strings in den Zielstring
00039B4E <AmiBlitz3.ab2@28206>   MOVE.l d0,a0
00039B50 <AmiBlitz3.ab2@28209>     MOVE.b (a0)+,d1
00039B56 <AmiBlitz3.ab2@28210>     JSR pokedata1b
00039B5A <AmiBlitz3.ab2@28211>  DBF d2,'l1
00039B78 <AmiBlitz3.ab2@28213>   !asm
00039B7A <AmiBlitz3.ab2@28214>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
00039B7C <AmiBlitz3.ab2@28215>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
00039B7E <AmiBlitz3.ab2@28216>   ADD.l d0,d2                                              ; eingefuegte chars zu D2 dazu
00039B84 <AmiBlitz3.ab2@28217>   ADD.l #1,d2
00039B8A <AmiBlitz3.ab2@28219>   MOVE.l #0,d0                                             ; a5 um konstantennamen weiterschieben
00039B90 <AmiBlitz3.ab2@28220>   MOVE.b skip_bytes,D0
00039B92 <AmiBlitz3.ab2@28221>   ADD.l D0,a5
00039B94 <AmiBlitz3.ab2@28222> RTS
00039B98 <AmiBlitz3.ab2@28297> MOVEM.l a3/d1,-(a7)
00039B9E <AmiBlitz3.ab2@28299> CLR.b a4a5store
00039BA0 <AmiBlitz3.ab2@28300> 'continue: MOVE.b (a3)+,d1
00039BA4 <AmiBlitz3.ab2@28301> CMP.b #$15,d1
00039BA8 <AmiBlitz3.ab2@28302> BEQ 'find
00039BAC <AmiBlitz3.ab2@28303> CMP.b #$14,d1
00039BB0 <AmiBlitz3.ab2@28304> BEQ 'find
00039BB4 <AmiBlitz3.ab2@28305> CMP.b #$ff,d1
00039BB8 <AmiBlitz3.ab2@28306> BNE 'continue
00039BBC <AmiBlitz3.ab2@28307> BRA 'notfind
00039BC2 <AmiBlitz3.ab2@28309> MOVE.l #$48e7000c,d1                  ; write 68k movem.l a4/a5,-(a7)
00039BC8 <AmiBlitz3.ab2@28310> JSR writelong
00039BD0 <AmiBlitz3.ab2@28311> MOVE.b #1,a4a5store
00039BD4 <AmiBlitz3.ab2@28312> 'notfind: MOVEM.l (a7)+,a3/d1
00039BD6 <AmiBlitz3.ab2@28313> RTS
00039BDC <AmiBlitz3.ab2@28316> TST.b a4a5store
00039BE0 <AmiBlitz3.ab2@28317> BEQ 'no
00039BE6 <AmiBlitz3.ab2@28318> MOVE.l #$4cdf3000,d1                  ; write 68k movem.l (a7)+,a4/a5
00039BEC <AmiBlitz3.ab2@28319> JSR writelong
00039BF2 <AmiBlitz3.ab2@28320> CLR.b a4a5store
00039BF4 <AmiBlitz3.ab2@28321> 'no RTS
00039BF4 <internal_commands.ab2@1> INCLUDE "internal_commands.ab2"
00039BF8 <internal_commands.ab2@13> INCLUDE "internal_commands.ab2"
00039BFA <internal_commands.ab2@15> INCLUDE "internal_commands.ab2"
00039C02 <internal_commands.ab2@16> INCLUDE "internal_commands.ab2"
00039C0E <internal_commands.ab2@17> INCLUDE "internal_commands.ab2"
00039C12 <internal_commands.ab2@21> INCLUDE "internal_commands.ab2"
00039C14 <internal_commands.ab2@22> INCLUDE "internal_commands.ab2"
00039C18 <internal_commands.ab2@23> INCLUDE "internal_commands.ab2"
00039C61 <internal_commands.ab2@24> INCLUDE "internal_commands.ab2"
00039C62 <internal_commands.ab2@25> INCLUDE "internal_commands.ab2"
00039C66 <internal_commands.ab2@28> INCLUDE "internal_commands.ab2"
00039C68 <internal_commands.ab2@29> INCLUDE "internal_commands.ab2"
00039C6C <internal_commands.ab2@30> INCLUDE "internal_commands.ab2"
00039C88 <internal_commands.ab2@31> INCLUDE "internal_commands.ab2"
00039C8C <internal_commands.ab2@35> INCLUDE "internal_commands.ab2"
00039C8E <internal_commands.ab2@36> INCLUDE "internal_commands.ab2"
00039C92 <internal_commands.ab2@37> INCLUDE "internal_commands.ab2"
00039CEF <internal_commands.ab2@38> INCLUDE "internal_commands.ab2"
00039CF0 <internal_commands.ab2@39> INCLUDE "internal_commands.ab2"
00039CF4 <internal_commands.ab2@42> INCLUDE "internal_commands.ab2"
00039CF6 <internal_commands.ab2@43> INCLUDE "internal_commands.ab2"
00039CFB <internal_commands.ab2@44> INCLUDE "internal_commands.ab2"
00039D0B <internal_commands.ab2@45> INCLUDE "internal_commands.ab2"
00039D0C <internal_commands.ab2@46> INCLUDE "internal_commands.ab2"
00039D10 <internal_commands.ab2@49> INCLUDE "internal_commands.ab2"
00039D12 <internal_commands.ab2@50> INCLUDE "internal_commands.ab2"
00039D18 <internal_commands.ab2@51> INCLUDE "internal_commands.ab2"
00039D28 <internal_commands.ab2@52> INCLUDE "internal_commands.ab2"
00039D2C <internal_commands.ab2@56> INCLUDE "internal_commands.ab2"
00039D2E <internal_commands.ab2@57> INCLUDE "internal_commands.ab2"
00039D35 <internal_commands.ab2@58> INCLUDE "internal_commands.ab2"
00039D36 <internal_commands.ab2@59> INCLUDE "internal_commands.ab2"
00039D3A <internal_commands.ab2@63> INCLUDE "internal_commands.ab2"
00039D3C <internal_commands.ab2@64> INCLUDE "internal_commands.ab2"
00039D46 <internal_commands.ab2@65> INCLUDE "internal_commands.ab2"
00039D79 <internal_commands.ab2@66> INCLUDE "internal_commands.ab2"
00039D7A <internal_commands.ab2@67> INCLUDE "internal_commands.ab2"
00039D7E <internal_commands.ab2@70> INCLUDE "internal_commands.ab2"
00039D80 <internal_commands.ab2@71> INCLUDE "internal_commands.ab2"
00039D89 <internal_commands.ab2@72> INCLUDE "internal_commands.ab2"
00039DC4 <internal_commands.ab2@73> INCLUDE "internal_commands.ab2"
00039DC8 <internal_commands.ab2@77> INCLUDE "internal_commands.ab2"
00039DCA <internal_commands.ab2@78> INCLUDE "internal_commands.ab2"
00039DD4 <internal_commands.ab2@79> INCLUDE "internal_commands.ab2"
00039DD5 <internal_commands.ab2@80> INCLUDE "internal_commands.ab2"
00039DD6 <internal_commands.ab2@81> INCLUDE "internal_commands.ab2"
00039DDA <internal_commands.ab2@84> INCLUDE "internal_commands.ab2"
00039DDC <internal_commands.ab2@85> INCLUDE "internal_commands.ab2"
00039DDF <internal_commands.ab2@86> INCLUDE "internal_commands.ab2"
00039DF6 <internal_commands.ab2@87> INCLUDE "internal_commands.ab2"
00039DFA <internal_commands.ab2@91> INCLUDE "internal_commands.ab2"
00039DFC <internal_commands.ab2@92> INCLUDE "internal_commands.ab2"
00039E02 <internal_commands.ab2@93> INCLUDE "internal_commands.ab2"
00039E0F <internal_commands.ab2@94> INCLUDE "internal_commands.ab2"
00039E10 <internal_commands.ab2@95> INCLUDE "internal_commands.ab2"
00039E14 <internal_commands.ab2@98> INCLUDE "internal_commands.ab2"
00039E16 <internal_commands.ab2@99> INCLUDE "internal_commands.ab2"
00039E1C <internal_commands.ab2@100> INCLUDE "internal_commands.ab2"
00039E28 <internal_commands.ab2@101> INCLUDE "internal_commands.ab2"
00039E2C <internal_commands.ab2@105> INCLUDE "internal_commands.ab2"
00039E2E <internal_commands.ab2@106> INCLUDE "internal_commands.ab2"
00039E35 <internal_commands.ab2@107> INCLUDE "internal_commands.ab2"
00039E42 <internal_commands.ab2@108> INCLUDE "internal_commands.ab2"
00039E46 <internal_commands.ab2@112> INCLUDE "internal_commands.ab2"
00039E48 <internal_commands.ab2@113> INCLUDE "internal_commands.ab2"
00039E4D <internal_commands.ab2@114> INCLUDE "internal_commands.ab2"
00039E5A <internal_commands.ab2@115> INCLUDE "internal_commands.ab2"
00039E5E <internal_commands.ab2@119> INCLUDE "internal_commands.ab2"
00039E60 <internal_commands.ab2@120> INCLUDE "internal_commands.ab2"
00039E68 <internal_commands.ab2@121> INCLUDE "internal_commands.ab2"
00039E69 <internal_commands.ab2@122> INCLUDE "internal_commands.ab2"
00039E6A <internal_commands.ab2@123> INCLUDE "internal_commands.ab2"
00039E6E <internal_commands.ab2@126> INCLUDE "internal_commands.ab2"
00039E70 <internal_commands.ab2@127> INCLUDE "internal_commands.ab2"
00039E78 <internal_commands.ab2@128> INCLUDE "internal_commands.ab2"
00039E79 <internal_commands.ab2@129> INCLUDE "internal_commands.ab2"
00039E7A <internal_commands.ab2@130> INCLUDE "internal_commands.ab2"
00039E7E <internal_commands.ab2@133> INCLUDE "internal_commands.ab2"
00039E80 <internal_commands.ab2@134> INCLUDE "internal_commands.ab2"
00039E89 <internal_commands.ab2@135> INCLUDE "internal_commands.ab2"
00039E94 <internal_commands.ab2@136> INCLUDE "internal_commands.ab2"
00039E98 <internal_commands.ab2@140> INCLUDE "internal_commands.ab2"
00039E9A <internal_commands.ab2@141> INCLUDE "internal_commands.ab2"
00039EA2 <internal_commands.ab2@142> INCLUDE "internal_commands.ab2"
00039EAD <internal_commands.ab2@143> INCLUDE "internal_commands.ab2"
00039EAE <internal_commands.ab2@144> INCLUDE "internal_commands.ab2"
00039EB2 <internal_commands.ab2@147> INCLUDE "internal_commands.ab2"
00039EB4 <internal_commands.ab2@148> INCLUDE "internal_commands.ab2"
00039EBB <internal_commands.ab2@149> INCLUDE "internal_commands.ab2"
00039F1D <internal_commands.ab2@150> INCLUDE "internal_commands.ab2"
00039F1E <internal_commands.ab2@151> INCLUDE "internal_commands.ab2"
00039F22 <internal_commands.ab2@154> INCLUDE "internal_commands.ab2"
00039F24 <internal_commands.ab2@155> INCLUDE "internal_commands.ab2"
00039F2B <internal_commands.ab2@156> INCLUDE "internal_commands.ab2"
00039F3A <internal_commands.ab2@157> INCLUDE "internal_commands.ab2"
00039F3E <internal_commands.ab2@161> INCLUDE "internal_commands.ab2"
00039F40 <internal_commands.ab2@162> INCLUDE "internal_commands.ab2"
00039F44 <internal_commands.ab2@163> INCLUDE "internal_commands.ab2"
00039F7A <internal_commands.ab2@164> INCLUDE "internal_commands.ab2"
00039F7E <internal_commands.ab2@168> INCLUDE "internal_commands.ab2"
00039F80 <internal_commands.ab2@169> INCLUDE "internal_commands.ab2"
00039F85 <internal_commands.ab2@170> INCLUDE "internal_commands.ab2"
00039F94 <internal_commands.ab2@171> INCLUDE "internal_commands.ab2"
00039F98 <internal_commands.ab2@175> INCLUDE "internal_commands.ab2"
00039F9A <internal_commands.ab2@176> INCLUDE "internal_commands.ab2"
00039F9D <internal_commands.ab2@177> INCLUDE "internal_commands.ab2"
00039FBE <internal_commands.ab2@178> INCLUDE "internal_commands.ab2"
00039FC2 <internal_commands.ab2@182> INCLUDE "internal_commands.ab2"
00039FC4 <internal_commands.ab2@183> INCLUDE "internal_commands.ab2"
00039FC9 <internal_commands.ab2@184> INCLUDE "internal_commands.ab2"
00039FD5 <internal_commands.ab2@185> INCLUDE "internal_commands.ab2"
00039FD6 <internal_commands.ab2@186> INCLUDE "internal_commands.ab2"
00039FDA <internal_commands.ab2@189> INCLUDE "internal_commands.ab2"
00039FDC <internal_commands.ab2@190> INCLUDE "internal_commands.ab2"
00039FE1 <internal_commands.ab2@191> INCLUDE "internal_commands.ab2"
00039FF8 <internal_commands.ab2@192> INCLUDE "internal_commands.ab2"
00039FFC <internal_commands.ab2@196> INCLUDE "internal_commands.ab2"
00039FFE <internal_commands.ab2@197> INCLUDE "internal_commands.ab2"
0003A003 <internal_commands.ab2@198> INCLUDE "internal_commands.ab2"
0003A012 <internal_commands.ab2@199> INCLUDE "internal_commands.ab2"
0003A016 <internal_commands.ab2@203> INCLUDE "internal_commands.ab2"
0003A018 <internal_commands.ab2@204> INCLUDE "internal_commands.ab2"
0003A01D <internal_commands.ab2@205> INCLUDE "internal_commands.ab2"
0003A03C <internal_commands.ab2@206> INCLUDE "internal_commands.ab2"
0003A040 <internal_commands.ab2@210> INCLUDE "internal_commands.ab2"
0003A042 <internal_commands.ab2@211> INCLUDE "internal_commands.ab2"
0003A047 <internal_commands.ab2@212> INCLUDE "internal_commands.ab2"
0003A066 <internal_commands.ab2@213> INCLUDE "internal_commands.ab2"
0003A06A <internal_commands.ab2@217> INCLUDE "internal_commands.ab2"
0003A06C <internal_commands.ab2@218> INCLUDE "internal_commands.ab2"
0003A072 <internal_commands.ab2@219> INCLUDE "internal_commands.ab2"
0003A073 <internal_commands.ab2@220> INCLUDE "internal_commands.ab2"
0003A074 <internal_commands.ab2@221> INCLUDE "internal_commands.ab2"
0003A078 <internal_commands.ab2@224> INCLUDE "internal_commands.ab2"
0003A07A <internal_commands.ab2@225> INCLUDE "internal_commands.ab2"
0003A07F <internal_commands.ab2@226> INCLUDE "internal_commands.ab2"
0003A080 <internal_commands.ab2@227> INCLUDE "internal_commands.ab2"
0003A084 <internal_commands.ab2@231> INCLUDE "internal_commands.ab2"
0003A086 <internal_commands.ab2@232> INCLUDE "internal_commands.ab2"
0003A08B <internal_commands.ab2@233> INCLUDE "internal_commands.ab2"
0003A098 <internal_commands.ab2@234> INCLUDE "internal_commands.ab2"
0003A09C <internal_commands.ab2@238> INCLUDE "internal_commands.ab2"
0003A09E <internal_commands.ab2@239> INCLUDE "internal_commands.ab2"
0003A0A3 <internal_commands.ab2@240> INCLUDE "internal_commands.ab2"
0003A0B2 <internal_commands.ab2@241> INCLUDE "internal_commands.ab2"
0003A0B6 <internal_commands.ab2@245> INCLUDE "internal_commands.ab2"
0003A0B8 <internal_commands.ab2@246> INCLUDE "internal_commands.ab2"
0003A0BD <internal_commands.ab2@247> INCLUDE "internal_commands.ab2"
0003A0CC <internal_commands.ab2@248> INCLUDE "internal_commands.ab2"
0003A0D0 <internal_commands.ab2@252> INCLUDE "internal_commands.ab2"
0003A0D2 <internal_commands.ab2@253> INCLUDE "internal_commands.ab2"
0003A0D8 <internal_commands.ab2@254> INCLUDE "internal_commands.ab2"
0003A0F5 <internal_commands.ab2@255> INCLUDE "internal_commands.ab2"
0003A0F6 <internal_commands.ab2@256> INCLUDE "internal_commands.ab2"
0003A0FA <internal_commands.ab2@259> INCLUDE "internal_commands.ab2"
0003A0FC <internal_commands.ab2@260> INCLUDE "internal_commands.ab2"
0003A102 <internal_commands.ab2@261> INCLUDE "internal_commands.ab2"
0003A11F <internal_commands.ab2@262> INCLUDE "internal_commands.ab2"
0003A120 <internal_commands.ab2@263> INCLUDE "internal_commands.ab2"
0003A124 <internal_commands.ab2@266> INCLUDE "internal_commands.ab2"
0003A126 <internal_commands.ab2@267> INCLUDE "internal_commands.ab2"
0003A129 <internal_commands.ab2@268> INCLUDE "internal_commands.ab2"
0003A140 <internal_commands.ab2@269> INCLUDE "internal_commands.ab2"
0003A144 <internal_commands.ab2@273> INCLUDE "internal_commands.ab2"
0003A146 <internal_commands.ab2@274> INCLUDE "internal_commands.ab2"
0003A149 <internal_commands.ab2@275> INCLUDE "internal_commands.ab2"
0003A158 <internal_commands.ab2@276> INCLUDE "internal_commands.ab2"
0003A15C <internal_commands.ab2@280> INCLUDE "internal_commands.ab2"
0003A15E <internal_commands.ab2@281> INCLUDE "internal_commands.ab2"
0003A163 <internal_commands.ab2@282> INCLUDE "internal_commands.ab2"
0003A164 <internal_commands.ab2@283> INCLUDE "internal_commands.ab2"
0003A168 <internal_commands.ab2@287> INCLUDE "internal_commands.ab2"
0003A16A <internal_commands.ab2@288> INCLUDE "internal_commands.ab2"
0003A16E <internal_commands.ab2@289> INCLUDE "internal_commands.ab2"
0003A183 <internal_commands.ab2@290> INCLUDE "internal_commands.ab2"
0003A184 <internal_commands.ab2@291> INCLUDE "internal_commands.ab2"
0003A188 <internal_commands.ab2@294> INCLUDE "internal_commands.ab2"
0003A18A <internal_commands.ab2@295> INCLUDE "internal_commands.ab2"
0003A191 <internal_commands.ab2@296> INCLUDE "internal_commands.ab2"
0003A1AA <internal_commands.ab2@297> INCLUDE "internal_commands.ab2"
0003A1AE <internal_commands.ab2@301> INCLUDE "internal_commands.ab2"
0003A1B0 <internal_commands.ab2@302> INCLUDE "internal_commands.ab2"
0003A1B7 <internal_commands.ab2@303> INCLUDE "internal_commands.ab2"
0003A1C2 <internal_commands.ab2@304> INCLUDE "internal_commands.ab2"
0003A1C6 <internal_commands.ab2@308> INCLUDE "internal_commands.ab2"
0003A1C8 <internal_commands.ab2@309> INCLUDE "internal_commands.ab2"
0003A1CD <internal_commands.ab2@310> INCLUDE "internal_commands.ab2"
0003A1E4 <internal_commands.ab2@311> INCLUDE "internal_commands.ab2"
0003A1E8 <internal_commands.ab2@315> INCLUDE "internal_commands.ab2"
0003A1EA <internal_commands.ab2@316> INCLUDE "internal_commands.ab2"
0003A1EE <internal_commands.ab2@317> INCLUDE "internal_commands.ab2"
0003A205 <internal_commands.ab2@318> INCLUDE "internal_commands.ab2"
0003A206 <internal_commands.ab2@319> INCLUDE "internal_commands.ab2"
0003A20A <internal_commands.ab2@322> INCLUDE "internal_commands.ab2"
0003A20C <internal_commands.ab2@323> INCLUDE "internal_commands.ab2"
0003A211 <internal_commands.ab2@324> INCLUDE "internal_commands.ab2"
0003A212 <internal_commands.ab2@325> INCLUDE "internal_commands.ab2"
0003A216 <internal_commands.ab2@329> INCLUDE "internal_commands.ab2"
0003A218 <internal_commands.ab2@330> INCLUDE "internal_commands.ab2"
0003A21D <internal_commands.ab2@331> INCLUDE "internal_commands.ab2"
0003A221 <internal_commands.ab2@332> INCLUDE "internal_commands.ab2"
0003A222 <internal_commands.ab2@333> INCLUDE "internal_commands.ab2"
0003A226 <internal_commands.ab2@336> INCLUDE "internal_commands.ab2"
0003A228 <internal_commands.ab2@337> INCLUDE "internal_commands.ab2"
0003A22F <internal_commands.ab2@338> INCLUDE "internal_commands.ab2"
0003A247 <internal_commands.ab2@339> INCLUDE "internal_commands.ab2"
0003A248 <internal_commands.ab2@340> INCLUDE "internal_commands.ab2"
0003A24C <internal_commands.ab2@343> INCLUDE "internal_commands.ab2"
0003A24E <internal_commands.ab2@344> INCLUDE "internal_commands.ab2"
0003A255 <internal_commands.ab2@345> INCLUDE "internal_commands.ab2"
0003A25A <internal_commands.ab2@346> INCLUDE "internal_commands.ab2"
0003A25E <internal_commands.ab2@350> INCLUDE "internal_commands.ab2"
0003A260 <internal_commands.ab2@351> INCLUDE "internal_commands.ab2"
0003A267 <internal_commands.ab2@352> INCLUDE "internal_commands.ab2"
0003A26C <internal_commands.ab2@353> INCLUDE "internal_commands.ab2"
0003A270 <internal_commands.ab2@357> INCLUDE "internal_commands.ab2"
0003A272 <internal_commands.ab2@358> INCLUDE "internal_commands.ab2"
0003A279 <internal_commands.ab2@359> INCLUDE "internal_commands.ab2"
0003A294 <internal_commands.ab2@360> INCLUDE "internal_commands.ab2"
0003A298 <internal_commands.ab2@364> INCLUDE "internal_commands.ab2"
0003A29A <internal_commands.ab2@365> INCLUDE "internal_commands.ab2"
0003A2A2 <internal_commands.ab2@366> INCLUDE "internal_commands.ab2"
0003A2BB <internal_commands.ab2@367> INCLUDE "internal_commands.ab2"
0003A2BC <internal_commands.ab2@368> INCLUDE "internal_commands.ab2"
0003A2C0 <internal_commands.ab2@371> INCLUDE "internal_commands.ab2"
0003A2C2 <internal_commands.ab2@372> INCLUDE "internal_commands.ab2"
0003A2C8 <internal_commands.ab2@373> INCLUDE "internal_commands.ab2"
0003A2C9 <internal_commands.ab2@374> INCLUDE "internal_commands.ab2"
0003A2CA <internal_commands.ab2@375> INCLUDE "internal_commands.ab2"
0003A2CE <internal_commands.ab2@378> INCLUDE "internal_commands.ab2"
0003A2D0 <internal_commands.ab2@379> INCLUDE "internal_commands.ab2"
0003A2D6 <internal_commands.ab2@380> INCLUDE "internal_commands.ab2"
0003A2D7 <internal_commands.ab2@381> INCLUDE "internal_commands.ab2"
0003A2D8 <internal_commands.ab2@382> INCLUDE "internal_commands.ab2"
0003A2DC <internal_commands.ab2@385> INCLUDE "internal_commands.ab2"
0003A2DE <internal_commands.ab2@386> INCLUDE "internal_commands.ab2"
0003A2E5 <internal_commands.ab2@387> INCLUDE "internal_commands.ab2"
0003A2E6 <internal_commands.ab2@388> INCLUDE "internal_commands.ab2"
0003A2EA <internal_commands.ab2@392> INCLUDE "internal_commands.ab2"
0003A2EC <internal_commands.ab2@393> INCLUDE "internal_commands.ab2"
0003A2F2 <internal_commands.ab2@394> INCLUDE "internal_commands.ab2"
0003A2FB <internal_commands.ab2@395> INCLUDE "internal_commands.ab2"
0003A2FC <internal_commands.ab2@396> INCLUDE "internal_commands.ab2"
0003A300 <internal_commands.ab2@399> INCLUDE "internal_commands.ab2"
0003A302 <internal_commands.ab2@400> INCLUDE "internal_commands.ab2"
0003A30A <internal_commands.ab2@401> INCLUDE "internal_commands.ab2"
0003A317 <internal_commands.ab2@402> INCLUDE "internal_commands.ab2"
0003A318 <internal_commands.ab2@403> INCLUDE "internal_commands.ab2"
0003A31C <internal_commands.ab2@406> INCLUDE "internal_commands.ab2"
0003A31E <internal_commands.ab2@407> INCLUDE "internal_commands.ab2"
0003A326 <internal_commands.ab2@408> INCLUDE "internal_commands.ab2"
0003A333 <internal_commands.ab2@409> INCLUDE "internal_commands.ab2"
0003A334 <internal_commands.ab2@410> INCLUDE "internal_commands.ab2"
0003A338 <internal_commands.ab2@413> INCLUDE "internal_commands.ab2"
0003A33A <internal_commands.ab2@414> INCLUDE "internal_commands.ab2"
0003A342 <internal_commands.ab2@415> INCLUDE "internal_commands.ab2"
0003A34F <internal_commands.ab2@416> INCLUDE "internal_commands.ab2"
0003A350 <internal_commands.ab2@417> INCLUDE "internal_commands.ab2"
0003A354 <internal_commands.ab2@420> INCLUDE "internal_commands.ab2"
0003A356 <internal_commands.ab2@421> INCLUDE "internal_commands.ab2"
0003A35B <internal_commands.ab2@422> INCLUDE "internal_commands.ab2"
0003A35C <internal_commands.ab2@423> INCLUDE "internal_commands.ab2"
0003A360 <internal_commands.ab2@437> INCLUDE "internal_commands.ab2"
0003A362 <internal_commands.ab2@438> INCLUDE "internal_commands.ab2"
0003A367 <internal_commands.ab2@439> INCLUDE "internal_commands.ab2"
0003A368 <internal_commands.ab2@440> INCLUDE "internal_commands.ab2"
0003A36A <internal_commands.ab2@443> INCLUDE "internal_commands.ab2"
0003A36E <internal_commands.ab2@444> INCLUDE "internal_commands.ab2"
0003A370 <internal_commands.ab2@445> INCLUDE "internal_commands.ab2"
0003A372 <internal_commands.ab2@446> INCLUDE "internal_commands.ab2"
0003A376 <internal_commands.ab2@447> INCLUDE "internal_commands.ab2"
0003A378 <internal_commands.ab2@448> INCLUDE "internal_commands.ab2"
0003A37C <internal_commands.ab2@452> INCLUDE "internal_commands.ab2"
0003A37E <internal_commands.ab2@453> INCLUDE "internal_commands.ab2"
0003A382 <internal_commands.ab2@454> INCLUDE "internal_commands.ab2"
0003A383 <internal_commands.ab2@455> INCLUDE "internal_commands.ab2"
0003A384 <internal_commands.ab2@456> INCLUDE "internal_commands.ab2"
0003A386 <internal_commands.ab2@458> INCLUDE "internal_commands.ab2"
0003A38A <internal_commands.ab2@459> INCLUDE "internal_commands.ab2"
0003A38C <internal_commands.ab2@460> INCLUDE "internal_commands.ab2"
0003A38E <internal_commands.ab2@461> INCLUDE "internal_commands.ab2"
0003A392 <internal_commands.ab2@462> INCLUDE "internal_commands.ab2"
0003A394 <internal_commands.ab2@463> INCLUDE "internal_commands.ab2"
0003A398 <internal_commands.ab2@467> INCLUDE "internal_commands.ab2"
0003A39A <internal_commands.ab2@468> INCLUDE "internal_commands.ab2"
0003A39F <internal_commands.ab2@469> INCLUDE "internal_commands.ab2"
0003A3A0 <internal_commands.ab2@470> INCLUDE "internal_commands.ab2"
0003A3A2 <internal_commands.ab2@473> INCLUDE "internal_commands.ab2"
0003A3A6 <internal_commands.ab2@474> INCLUDE "internal_commands.ab2"
0003A3A8 <internal_commands.ab2@475> INCLUDE "internal_commands.ab2"
0003A3AA <internal_commands.ab2@476> INCLUDE "internal_commands.ab2"
0003A3AE <internal_commands.ab2@477> INCLUDE "internal_commands.ab2"
0003A3B0 <internal_commands.ab2@478> INCLUDE "internal_commands.ab2"
0003A3B4 <internal_commands.ab2@482> INCLUDE "internal_commands.ab2"
0003A3B6 <internal_commands.ab2@483> INCLUDE "internal_commands.ab2"
0003A3BB <internal_commands.ab2@484> INCLUDE "internal_commands.ab2"
0003A3BC <internal_commands.ab2@485> INCLUDE "internal_commands.ab2"
0003A3BE <internal_commands.ab2@488> INCLUDE "internal_commands.ab2"
0003A3C2 <internal_commands.ab2@489> INCLUDE "internal_commands.ab2"
0003A3C4 <internal_commands.ab2@490> INCLUDE "internal_commands.ab2"
0003A3C6 <internal_commands.ab2@491> INCLUDE "internal_commands.ab2"
0003A3CA <internal_commands.ab2@492> INCLUDE "internal_commands.ab2"
0003A3CC <internal_commands.ab2@493> INCLUDE "internal_commands.ab2"
0003A3D0 <internal_commands.ab2@497> INCLUDE "internal_commands.ab2"
0003A3D2 <internal_commands.ab2@498> INCLUDE "internal_commands.ab2"
0003A3D7 <internal_commands.ab2@499> INCLUDE "internal_commands.ab2"
0003A3D8 <internal_commands.ab2@500> INCLUDE "internal_commands.ab2"
0003A3DA <internal_commands.ab2@503> INCLUDE "internal_commands.ab2"
0003A3DE <internal_commands.ab2@504> INCLUDE "internal_commands.ab2"
0003A3E0 <internal_commands.ab2@505> INCLUDE "internal_commands.ab2"
0003A3E2 <internal_commands.ab2@506> INCLUDE "internal_commands.ab2"
0003A3E6 <internal_commands.ab2@507> INCLUDE "internal_commands.ab2"
0003A3E8 <internal_commands.ab2@508> INCLUDE "internal_commands.ab2"
0003A3EC <internal_commands.ab2@512> INCLUDE "internal_commands.ab2"
0003A3EE <internal_commands.ab2@513> INCLUDE "internal_commands.ab2"
0003A3F3 <internal_commands.ab2@514> INCLUDE "internal_commands.ab2"
0003A3F4 <internal_commands.ab2@515> INCLUDE "internal_commands.ab2"
0003A3F6 <internal_commands.ab2@518> INCLUDE "internal_commands.ab2"
0003A3FA <internal_commands.ab2@519> INCLUDE "internal_commands.ab2"
0003A3FC <internal_commands.ab2@520> INCLUDE "internal_commands.ab2"
0003A3FE <internal_commands.ab2@521> INCLUDE "internal_commands.ab2"
0003A402 <internal_commands.ab2@522> INCLUDE "internal_commands.ab2"
0003A404 <internal_commands.ab2@523> INCLUDE "internal_commands.ab2"
0003A408 <internal_commands.ab2@527> INCLUDE "internal_commands.ab2"
0003A40A <internal_commands.ab2@528> INCLUDE "internal_commands.ab2"
0003A40E <internal_commands.ab2@529> INCLUDE "internal_commands.ab2"
0003A40F <internal_commands.ab2@530> INCLUDE "internal_commands.ab2"
0003A410 <internal_commands.ab2@531> INCLUDE "internal_commands.ab2"
0003A412 <internal_commands.ab2@533> INCLUDE "internal_commands.ab2"
0003A416 <internal_commands.ab2@534> INCLUDE "internal_commands.ab2"
0003A418 <internal_commands.ab2@535> INCLUDE "internal_commands.ab2"
0003A41A <internal_commands.ab2@536> INCLUDE "internal_commands.ab2"
0003A41E <internal_commands.ab2@537> INCLUDE "internal_commands.ab2"
0003A420 <internal_commands.ab2@538> INCLUDE "internal_commands.ab2"
0003A424 <internal_commands.ab2@542> INCLUDE "internal_commands.ab2"
0003A426 <internal_commands.ab2@543> INCLUDE "internal_commands.ab2"
0003A42B <internal_commands.ab2@544> INCLUDE "internal_commands.ab2"
0003A42C <internal_commands.ab2@545> INCLUDE "internal_commands.ab2"
0003A42E <internal_commands.ab2@548> INCLUDE "internal_commands.ab2"
0003A432 <internal_commands.ab2@549> INCLUDE "internal_commands.ab2"
0003A434 <internal_commands.ab2@550> INCLUDE "internal_commands.ab2"
0003A436 <internal_commands.ab2@551> INCLUDE "internal_commands.ab2"
0003A43A <internal_commands.ab2@552> INCLUDE "internal_commands.ab2"
0003A43C <internal_commands.ab2@553> INCLUDE "internal_commands.ab2"
0003A440 <internal_commands.ab2@557> INCLUDE "internal_commands.ab2"
0003A442 <internal_commands.ab2@558> INCLUDE "internal_commands.ab2"
0003A446 <internal_commands.ab2@559> INCLUDE "internal_commands.ab2"
0003A447 <internal_commands.ab2@560> INCLUDE "internal_commands.ab2"
0003A448 <internal_commands.ab2@561> INCLUDE "internal_commands.ab2"
0003A44A <internal_commands.ab2@563> INCLUDE "internal_commands.ab2"
0003A44E <internal_commands.ab2@564> INCLUDE "internal_commands.ab2"
0003A450 <internal_commands.ab2@565> INCLUDE "internal_commands.ab2"
0003A452 <internal_commands.ab2@566> INCLUDE "internal_commands.ab2"
0003A456 <internal_commands.ab2@567> INCLUDE "internal_commands.ab2"
0003A458 <internal_commands.ab2@568> INCLUDE "internal_commands.ab2"
0003A45C <internal_commands.ab2@572> INCLUDE "internal_commands.ab2"
0003A45E <internal_commands.ab2@573> INCLUDE "internal_commands.ab2"
0003A462 <internal_commands.ab2@574> INCLUDE "internal_commands.ab2"
0003A463 <internal_commands.ab2@575> INCLUDE "internal_commands.ab2"
0003A464 <internal_commands.ab2@576> INCLUDE "internal_commands.ab2"
0003A466 <internal_commands.ab2@578> INCLUDE "internal_commands.ab2"
0003A46A <internal_commands.ab2@579> INCLUDE "internal_commands.ab2"
0003A46C <internal_commands.ab2@580> INCLUDE "internal_commands.ab2"
0003A46E <internal_commands.ab2@581> INCLUDE "internal_commands.ab2"
0003A472 <internal_commands.ab2@582> INCLUDE "internal_commands.ab2"
0003A474 <internal_commands.ab2@583> INCLUDE "internal_commands.ab2"
0003A478 <internal_commands.ab2@587> INCLUDE "internal_commands.ab2"
0003A47A <internal_commands.ab2@588> INCLUDE "internal_commands.ab2"
0003A47E <internal_commands.ab2@589> INCLUDE "internal_commands.ab2"
0003A47F <internal_commands.ab2@590> INCLUDE "internal_commands.ab2"
0003A480 <internal_commands.ab2@591> INCLUDE "internal_commands.ab2"
0003A482 <internal_commands.ab2@593> INCLUDE "internal_commands.ab2"
0003A486 <internal_commands.ab2@594> INCLUDE "internal_commands.ab2"
0003A488 <internal_commands.ab2@595> INCLUDE "internal_commands.ab2"
0003A48A <internal_commands.ab2@596> INCLUDE "internal_commands.ab2"
0003A48E <internal_commands.ab2@597> INCLUDE "internal_commands.ab2"
0003A490 <internal_commands.ab2@598> INCLUDE "internal_commands.ab2"
0003A494 <internal_commands.ab2@602> INCLUDE "internal_commands.ab2"
0003A496 <internal_commands.ab2@603> INCLUDE "internal_commands.ab2"
0003A49A <internal_commands.ab2@604> INCLUDE "internal_commands.ab2"
0003A49B <internal_commands.ab2@605> INCLUDE "internal_commands.ab2"
0003A49C <internal_commands.ab2@606> INCLUDE "internal_commands.ab2"
0003A49E <internal_commands.ab2@608> INCLUDE "internal_commands.ab2"
0003A4A2 <internal_commands.ab2@609> INCLUDE "internal_commands.ab2"
0003A4A4 <internal_commands.ab2@610> INCLUDE "internal_commands.ab2"
0003A4A6 <internal_commands.ab2@611> INCLUDE "internal_commands.ab2"
0003A4AA <internal_commands.ab2@612> INCLUDE "internal_commands.ab2"
0003A4AC <internal_commands.ab2@613> INCLUDE "internal_commands.ab2"
0003A4B0 <internal_commands.ab2@617> INCLUDE "internal_commands.ab2"
0003A4B2 <internal_commands.ab2@618> INCLUDE "internal_commands.ab2"
0003A4B6 <internal_commands.ab2@619> INCLUDE "internal_commands.ab2"
0003A4B7 <internal_commands.ab2@620> INCLUDE "internal_commands.ab2"
0003A4B8 <internal_commands.ab2@621> INCLUDE "internal_commands.ab2"
0003A4BA <internal_commands.ab2@623> INCLUDE "internal_commands.ab2"
0003A4BE <internal_commands.ab2@624> INCLUDE "internal_commands.ab2"
0003A4C0 <internal_commands.ab2@625> INCLUDE "internal_commands.ab2"
0003A4C2 <internal_commands.ab2@626> INCLUDE "internal_commands.ab2"
0003A4C6 <internal_commands.ab2@627> INCLUDE "internal_commands.ab2"
0003A4C8 <internal_commands.ab2@628> INCLUDE "internal_commands.ab2"
0003A4CC <internal_commands.ab2@632> INCLUDE "internal_commands.ab2"
0003A4CE <internal_commands.ab2@633> INCLUDE "internal_commands.ab2"
0003A4D2 <internal_commands.ab2@634> INCLUDE "internal_commands.ab2"
0003A4D3 <internal_commands.ab2@635> INCLUDE "internal_commands.ab2"
0003A4D4 <internal_commands.ab2@636> INCLUDE "internal_commands.ab2"
0003A4D6 <internal_commands.ab2@638> INCLUDE "internal_commands.ab2"
0003A4DA <internal_commands.ab2@639> INCLUDE "internal_commands.ab2"
0003A4DC <internal_commands.ab2@640> INCLUDE "internal_commands.ab2"
0003A4DE <internal_commands.ab2@641> INCLUDE "internal_commands.ab2"
0003A4E2 <internal_commands.ab2@642> INCLUDE "internal_commands.ab2"
0003A4E4 <internal_commands.ab2@643> INCLUDE "internal_commands.ab2"
0003A4E8 <internal_commands.ab2@647> INCLUDE "internal_commands.ab2"
0003A4EA <internal_commands.ab2@648> INCLUDE "internal_commands.ab2"
0003A4EE <internal_commands.ab2@649> INCLUDE "internal_commands.ab2"
0003A4EF <internal_commands.ab2@650> INCLUDE "internal_commands.ab2"
0003A4F0 <internal_commands.ab2@651> INCLUDE "internal_commands.ab2"
0003A4F2 <internal_commands.ab2@653> INCLUDE "internal_commands.ab2"
0003A4F6 <internal_commands.ab2@654> INCLUDE "internal_commands.ab2"
0003A4F8 <internal_commands.ab2@655> INCLUDE "internal_commands.ab2"
0003A4FA <internal_commands.ab2@656> INCLUDE "internal_commands.ab2"
0003A4FE <internal_commands.ab2@657> INCLUDE "internal_commands.ab2"
0003A500 <internal_commands.ab2@658> INCLUDE "internal_commands.ab2"
0003A504 <internal_commands.ab2@662> INCLUDE "internal_commands.ab2"
0003A506 <internal_commands.ab2@663> INCLUDE "internal_commands.ab2"
0003A50A <internal_commands.ab2@664> INCLUDE "internal_commands.ab2"
0003A50B <internal_commands.ab2@665> INCLUDE "internal_commands.ab2"
0003A50C <internal_commands.ab2@666> INCLUDE "internal_commands.ab2"
0003A50E <internal_commands.ab2@668> INCLUDE "internal_commands.ab2"
0003A512 <internal_commands.ab2@669> INCLUDE "internal_commands.ab2"
0003A514 <internal_commands.ab2@670> INCLUDE "internal_commands.ab2"
0003A516 <internal_commands.ab2@671> INCLUDE "internal_commands.ab2"
0003A51A <internal_commands.ab2@672> INCLUDE "internal_commands.ab2"
0003A51C <internal_commands.ab2@673> INCLUDE "internal_commands.ab2"
0003A520 <internal_commands.ab2@677> INCLUDE "internal_commands.ab2"
0003A522 <internal_commands.ab2@678> INCLUDE "internal_commands.ab2"
0003A526 <internal_commands.ab2@679> INCLUDE "internal_commands.ab2"
0003A527 <internal_commands.ab2@680> INCLUDE "internal_commands.ab2"
0003A528 <internal_commands.ab2@681> INCLUDE "internal_commands.ab2"
0003A52A <internal_commands.ab2@683> INCLUDE "internal_commands.ab2"
0003A52E <internal_commands.ab2@684> INCLUDE "internal_commands.ab2"
0003A530 <internal_commands.ab2@685> INCLUDE "internal_commands.ab2"
0003A532 <internal_commands.ab2@686> INCLUDE "internal_commands.ab2"
0003A536 <internal_commands.ab2@687> INCLUDE "internal_commands.ab2"
0003A538 <internal_commands.ab2@688> INCLUDE "internal_commands.ab2"
0003A53C <internal_commands.ab2@692> INCLUDE "internal_commands.ab2"
0003A53E <internal_commands.ab2@693> INCLUDE "internal_commands.ab2"
0003A542 <internal_commands.ab2@694> INCLUDE "internal_commands.ab2"
0003A543 <internal_commands.ab2@695> INCLUDE "internal_commands.ab2"
0003A544 <internal_commands.ab2@696> INCLUDE "internal_commands.ab2"
0003A546 <internal_commands.ab2@698> INCLUDE "internal_commands.ab2"
0003A54A <internal_commands.ab2@699> INCLUDE "internal_commands.ab2"
0003A54C <internal_commands.ab2@700> INCLUDE "internal_commands.ab2"
0003A54E <internal_commands.ab2@701> INCLUDE "internal_commands.ab2"
0003A552 <internal_commands.ab2@702> INCLUDE "internal_commands.ab2"
0003A554 <internal_commands.ab2@703> INCLUDE "internal_commands.ab2"
0003A558 <internal_commands.ab2@707> INCLUDE "internal_commands.ab2"
0003A55A <internal_commands.ab2@708> INCLUDE "internal_commands.ab2"
0003A55E <internal_commands.ab2@709> INCLUDE "internal_commands.ab2"
0003A55F <internal_commands.ab2@710> INCLUDE "internal_commands.ab2"
0003A560 <internal_commands.ab2@711> INCLUDE "internal_commands.ab2"
0003A562 <internal_commands.ab2@713> INCLUDE "internal_commands.ab2"
0003A566 <internal_commands.ab2@714> INCLUDE "internal_commands.ab2"
0003A568 <internal_commands.ab2@715> INCLUDE "internal_commands.ab2"
0003A56A <internal_commands.ab2@716> INCLUDE "internal_commands.ab2"
0003A56E <internal_commands.ab2@717> INCLUDE "internal_commands.ab2"
0003A570 <internal_commands.ab2@718> INCLUDE "internal_commands.ab2"
0003A574 <internal_commands.ab2@722> INCLUDE "internal_commands.ab2"
0003A576 <internal_commands.ab2@723> INCLUDE "internal_commands.ab2"
0003A57A <internal_commands.ab2@724> INCLUDE "internal_commands.ab2"
0003A57B <internal_commands.ab2@725> INCLUDE "internal_commands.ab2"
0003A57C <internal_commands.ab2@726> INCLUDE "internal_commands.ab2"
0003A57E <internal_commands.ab2@728> INCLUDE "internal_commands.ab2"
0003A582 <internal_commands.ab2@729> INCLUDE "internal_commands.ab2"
0003A584 <internal_commands.ab2@730> INCLUDE "internal_commands.ab2"
0003A586 <internal_commands.ab2@731> INCLUDE "internal_commands.ab2"
0003A58A <internal_commands.ab2@732> INCLUDE "internal_commands.ab2"
0003A58C <internal_commands.ab2@733> INCLUDE "internal_commands.ab2"
0003A590 <internal_commands.ab2@737> INCLUDE "internal_commands.ab2"
0003A592 <internal_commands.ab2@738> INCLUDE "internal_commands.ab2"
0003A596 <internal_commands.ab2@739> INCLUDE "internal_commands.ab2"
0003A597 <internal_commands.ab2@740> INCLUDE "internal_commands.ab2"
0003A598 <internal_commands.ab2@741> INCLUDE "internal_commands.ab2"
0003A59A <internal_commands.ab2@743> INCLUDE "internal_commands.ab2"
0003A59E <internal_commands.ab2@744> INCLUDE "internal_commands.ab2"
0003A5A0 <internal_commands.ab2@745> INCLUDE "internal_commands.ab2"
0003A5A2 <internal_commands.ab2@746> INCLUDE "internal_commands.ab2"
0003A5A6 <internal_commands.ab2@747> INCLUDE "internal_commands.ab2"
0003A5A8 <internal_commands.ab2@748> INCLUDE "internal_commands.ab2"
0003A5AC <internal_commands.ab2@752> INCLUDE "internal_commands.ab2"
0003A5AE <internal_commands.ab2@753> INCLUDE "internal_commands.ab2"
0003A5B2 <internal_commands.ab2@754> INCLUDE "internal_commands.ab2"
0003A5B3 <internal_commands.ab2@755> INCLUDE "internal_commands.ab2"
0003A5B4 <internal_commands.ab2@756> INCLUDE "internal_commands.ab2"
0003A5B6 <internal_commands.ab2@758> INCLUDE "internal_commands.ab2"
0003A5BA <internal_commands.ab2@759> INCLUDE "internal_commands.ab2"
0003A5BC <internal_commands.ab2@760> INCLUDE "internal_commands.ab2"
0003A5BE <internal_commands.ab2@761> INCLUDE "internal_commands.ab2"
0003A5C2 <internal_commands.ab2@762> INCLUDE "internal_commands.ab2"
0003A5C4 <internal_commands.ab2@763> INCLUDE "internal_commands.ab2"
0003A5C8 <internal_commands.ab2@767> INCLUDE "internal_commands.ab2"
0003A5CA <internal_commands.ab2@768> INCLUDE "internal_commands.ab2"
0003A5CE <internal_commands.ab2@769> INCLUDE "internal_commands.ab2"
0003A5CF <internal_commands.ab2@770> INCLUDE "internal_commands.ab2"
0003A5D0 <internal_commands.ab2@771> INCLUDE "internal_commands.ab2"
0003A5D2 <internal_commands.ab2@773> INCLUDE "internal_commands.ab2"
0003A5D6 <internal_commands.ab2@774> INCLUDE "internal_commands.ab2"
0003A5D8 <internal_commands.ab2@775> INCLUDE "internal_commands.ab2"
0003A5DA <internal_commands.ab2@776> INCLUDE "internal_commands.ab2"
0003A5DE <internal_commands.ab2@777> INCLUDE "internal_commands.ab2"
0003A5E0 <internal_commands.ab2@778> INCLUDE "internal_commands.ab2"
0003A5E4 <internal_commands.ab2@782> INCLUDE "internal_commands.ab2"
0003A5E6 <internal_commands.ab2@783> INCLUDE "internal_commands.ab2"
0003A5EA <internal_commands.ab2@784> INCLUDE "internal_commands.ab2"
0003A5EB <internal_commands.ab2@785> INCLUDE "internal_commands.ab2"
0003A5EC <internal_commands.ab2@786> INCLUDE "internal_commands.ab2"
0003A5EE <internal_commands.ab2@788> INCLUDE "internal_commands.ab2"
0003A5F2 <internal_commands.ab2@789> INCLUDE "internal_commands.ab2"
0003A5F4 <internal_commands.ab2@790> INCLUDE "internal_commands.ab2"
0003A5F6 <internal_commands.ab2@791> INCLUDE "internal_commands.ab2"
0003A5FA <internal_commands.ab2@792> INCLUDE "internal_commands.ab2"
0003A5FC <internal_commands.ab2@793> INCLUDE "internal_commands.ab2"
0003A600 <internal_commands.ab2@797> INCLUDE "internal_commands.ab2"
0003A602 <internal_commands.ab2@798> INCLUDE "internal_commands.ab2"
0003A607 <internal_commands.ab2@799> INCLUDE "internal_commands.ab2"
0003A608 <internal_commands.ab2@800> INCLUDE "internal_commands.ab2"
0003A60A <internal_commands.ab2@803> INCLUDE "internal_commands.ab2"
0003A60E <internal_commands.ab2@804> INCLUDE "internal_commands.ab2"
0003A610 <internal_commands.ab2@805> INCLUDE "internal_commands.ab2"
0003A612 <internal_commands.ab2@806> INCLUDE "internal_commands.ab2"
0003A616 <internal_commands.ab2@807> INCLUDE "internal_commands.ab2"
0003A618 <internal_commands.ab2@808> INCLUDE "internal_commands.ab2"
0003A61C <internal_commands.ab2@812> INCLUDE "internal_commands.ab2"
0003A61E <internal_commands.ab2@813> INCLUDE "internal_commands.ab2"
0003A623 <internal_commands.ab2@814> INCLUDE "internal_commands.ab2"
0003A624 <internal_commands.ab2@815> INCLUDE "internal_commands.ab2"
0003A626 <internal_commands.ab2@818> INCLUDE "internal_commands.ab2"
0003A62A <internal_commands.ab2@819> INCLUDE "internal_commands.ab2"
0003A62C <internal_commands.ab2@820> INCLUDE "internal_commands.ab2"
0003A62E <internal_commands.ab2@821> INCLUDE "internal_commands.ab2"
0003A632 <internal_commands.ab2@822> INCLUDE "internal_commands.ab2"
0003A634 <internal_commands.ab2@823> INCLUDE "internal_commands.ab2"
0003A638 <internal_commands.ab2@827> INCLUDE "internal_commands.ab2"
0003A63A <internal_commands.ab2@828> INCLUDE "internal_commands.ab2"
0003A63F <internal_commands.ab2@829> INCLUDE "internal_commands.ab2"
0003A640 <internal_commands.ab2@830> INCLUDE "internal_commands.ab2"
0003A642 <internal_commands.ab2@833> INCLUDE "internal_commands.ab2"
0003A646 <internal_commands.ab2@834> INCLUDE "internal_commands.ab2"
0003A648 <internal_commands.ab2@835> INCLUDE "internal_commands.ab2"
0003A64A <internal_commands.ab2@836> INCLUDE "internal_commands.ab2"
0003A64E <internal_commands.ab2@837> INCLUDE "internal_commands.ab2"
0003A650 <internal_commands.ab2@838> INCLUDE "internal_commands.ab2"
0003A654 <internal_commands.ab2@842> INCLUDE "internal_commands.ab2"
0003A656 <internal_commands.ab2@843> INCLUDE "internal_commands.ab2"
0003A65B <internal_commands.ab2@844> INCLUDE "internal_commands.ab2"
0003A65C <internal_commands.ab2@845> INCLUDE "internal_commands.ab2"
0003A65E <internal_commands.ab2@848> INCLUDE "internal_commands.ab2"
0003A662 <internal_commands.ab2@849> INCLUDE "internal_commands.ab2"
0003A664 <internal_commands.ab2@850> INCLUDE "internal_commands.ab2"
0003A666 <internal_commands.ab2@851> INCLUDE "internal_commands.ab2"
0003A66A <internal_commands.ab2@852> INCLUDE "internal_commands.ab2"
0003A66C <internal_commands.ab2@853> INCLUDE "internal_commands.ab2"
0003A670 <internal_commands.ab2@857> INCLUDE "internal_commands.ab2"
0003A672 <internal_commands.ab2@858> INCLUDE "internal_commands.ab2"
0003A676 <internal_commands.ab2@859> INCLUDE "internal_commands.ab2"
0003A677 <internal_commands.ab2@860> INCLUDE "internal_commands.ab2"
0003A678 <internal_commands.ab2@861> INCLUDE "internal_commands.ab2"
0003A67A <internal_commands.ab2@863> INCLUDE "internal_commands.ab2"
0003A67E <internal_commands.ab2@864> INCLUDE "internal_commands.ab2"
0003A680 <internal_commands.ab2@865> INCLUDE "internal_commands.ab2"
0003A682 <internal_commands.ab2@866> INCLUDE "internal_commands.ab2"
0003A686 <internal_commands.ab2@867> INCLUDE "internal_commands.ab2"
0003A688 <internal_commands.ab2@868> INCLUDE "internal_commands.ab2"
0003A68C <internal_commands.ab2@872> INCLUDE "internal_commands.ab2"
0003A68E <internal_commands.ab2@873> INCLUDE "internal_commands.ab2"
0003A692 <internal_commands.ab2@874> INCLUDE "internal_commands.ab2"
0003A693 <internal_commands.ab2@875> INCLUDE "internal_commands.ab2"
0003A694 <internal_commands.ab2@876> INCLUDE "internal_commands.ab2"
0003A696 <internal_commands.ab2@878> INCLUDE "internal_commands.ab2"
0003A69A <internal_commands.ab2@879> INCLUDE "internal_commands.ab2"
0003A69C <internal_commands.ab2@880> INCLUDE "internal_commands.ab2"
0003A69E <internal_commands.ab2@881> INCLUDE "internal_commands.ab2"
0003A6A2 <internal_commands.ab2@882> INCLUDE "internal_commands.ab2"
0003A6A4 <internal_commands.ab2@883> INCLUDE "internal_commands.ab2"
0003A6A8 <internal_commands.ab2@887> INCLUDE "internal_commands.ab2"
0003A6AA <internal_commands.ab2@888> INCLUDE "internal_commands.ab2"
0003A6AE <internal_commands.ab2@889> INCLUDE "internal_commands.ab2"
0003A6AF <internal_commands.ab2@890> INCLUDE "internal_commands.ab2"
0003A6B0 <internal_commands.ab2@891> INCLUDE "internal_commands.ab2"
0003A6B2 <internal_commands.ab2@893> INCLUDE "internal_commands.ab2"
0003A6B6 <internal_commands.ab2@894> INCLUDE "internal_commands.ab2"
0003A6B8 <internal_commands.ab2@895> INCLUDE "internal_commands.ab2"
0003A6BA <internal_commands.ab2@896> INCLUDE "internal_commands.ab2"
0003A6BE <internal_commands.ab2@897> INCLUDE "internal_commands.ab2"
0003A6C0 <internal_commands.ab2@898> INCLUDE "internal_commands.ab2"
0003A6C4 <internal_commands.ab2@902> INCLUDE "internal_commands.ab2"
0003A6C6 <internal_commands.ab2@903> INCLUDE "internal_commands.ab2"
0003A6CA <internal_commands.ab2@904> INCLUDE "internal_commands.ab2"
0003A6CB <internal_commands.ab2@905> INCLUDE "internal_commands.ab2"
0003A6CC <internal_commands.ab2@906> INCLUDE "internal_commands.ab2"
0003A6CE <internal_commands.ab2@908> INCLUDE "internal_commands.ab2"
0003A6D2 <internal_commands.ab2@909> INCLUDE "internal_commands.ab2"
0003A6D4 <internal_commands.ab2@910> INCLUDE "internal_commands.ab2"
0003A6D6 <internal_commands.ab2@911> INCLUDE "internal_commands.ab2"
0003A6DA <internal_commands.ab2@912> INCLUDE "internal_commands.ab2"
0003A6DC <internal_commands.ab2@913> INCLUDE "internal_commands.ab2"
0003A6E0 <internal_commands.ab2@917> INCLUDE "internal_commands.ab2"
0003A6E2 <internal_commands.ab2@918> INCLUDE "internal_commands.ab2"
0003A6E6 <internal_commands.ab2@919> INCLUDE "internal_commands.ab2"
0003A6E7 <internal_commands.ab2@920> INCLUDE "internal_commands.ab2"
0003A6E8 <internal_commands.ab2@921> INCLUDE "internal_commands.ab2"
0003A6EA <internal_commands.ab2@923> INCLUDE "internal_commands.ab2"
0003A6EE <internal_commands.ab2@924> INCLUDE "internal_commands.ab2"
0003A6F0 <internal_commands.ab2@925> INCLUDE "internal_commands.ab2"
0003A6F2 <internal_commands.ab2@926> INCLUDE "internal_commands.ab2"
0003A6F6 <internal_commands.ab2@927> INCLUDE "internal_commands.ab2"
0003A6F8 <internal_commands.ab2@928> INCLUDE "internal_commands.ab2"
0003A6FC <internal_commands.ab2@932> INCLUDE "internal_commands.ab2"
0003A6FE <internal_commands.ab2@933> INCLUDE "internal_commands.ab2"
0003A703 <internal_commands.ab2@934> INCLUDE "internal_commands.ab2"
0003A704 <internal_commands.ab2@935> INCLUDE "internal_commands.ab2"
0003A706 <internal_commands.ab2@938> INCLUDE "internal_commands.ab2"
0003A70A <internal_commands.ab2@939> INCLUDE "internal_commands.ab2"
0003A70C <internal_commands.ab2@940> INCLUDE "internal_commands.ab2"
0003A70E <internal_commands.ab2@941> INCLUDE "internal_commands.ab2"
0003A712 <internal_commands.ab2@942> INCLUDE "internal_commands.ab2"
0003A714 <internal_commands.ab2@943> INCLUDE "internal_commands.ab2"
0003A718 <internal_commands.ab2@947> INCLUDE "internal_commands.ab2"
0003A71A <internal_commands.ab2@948> INCLUDE "internal_commands.ab2"
0003A71F <internal_commands.ab2@949> INCLUDE "internal_commands.ab2"
0003A720 <internal_commands.ab2@950> INCLUDE "internal_commands.ab2"
0003A722 <internal_commands.ab2@953> INCLUDE "internal_commands.ab2"
0003A726 <internal_commands.ab2@954> INCLUDE "internal_commands.ab2"
0003A728 <internal_commands.ab2@955> INCLUDE "internal_commands.ab2"
0003A72A <internal_commands.ab2@956> INCLUDE "internal_commands.ab2"
0003A72E <internal_commands.ab2@957> INCLUDE "internal_commands.ab2"
0003A730 <internal_commands.ab2@958> INCLUDE "internal_commands.ab2"
0003A734 <internal_commands.ab2@962> INCLUDE "internal_commands.ab2"
0003A736 <internal_commands.ab2@963> INCLUDE "internal_commands.ab2"
0003A73B <internal_commands.ab2@964> INCLUDE "internal_commands.ab2"
0003A73C <internal_commands.ab2@965> INCLUDE "internal_commands.ab2"
0003A73E <internal_commands.ab2@968> INCLUDE "internal_commands.ab2"
0003A742 <internal_commands.ab2@969> INCLUDE "internal_commands.ab2"
0003A744 <internal_commands.ab2@970> INCLUDE "internal_commands.ab2"
0003A746 <internal_commands.ab2@971> INCLUDE "internal_commands.ab2"
0003A74A <internal_commands.ab2@972> INCLUDE "internal_commands.ab2"
0003A74C <internal_commands.ab2@973> INCLUDE "internal_commands.ab2"
0003A750 <internal_commands.ab2@977> INCLUDE "internal_commands.ab2"
0003A752 <internal_commands.ab2@978> INCLUDE "internal_commands.ab2"
0003A757 <internal_commands.ab2@979> INCLUDE "internal_commands.ab2"
0003A758 <internal_commands.ab2@980> INCLUDE "internal_commands.ab2"
0003A75A <internal_commands.ab2@983> INCLUDE "internal_commands.ab2"
0003A75E <internal_commands.ab2@984> INCLUDE "internal_commands.ab2"
0003A760 <internal_commands.ab2@985> INCLUDE "internal_commands.ab2"
0003A762 <internal_commands.ab2@986> INCLUDE "internal_commands.ab2"
0003A766 <internal_commands.ab2@987> INCLUDE "internal_commands.ab2"
0003A768 <internal_commands.ab2@988> INCLUDE "internal_commands.ab2"
0003A76C <internal_commands.ab2@992> INCLUDE "internal_commands.ab2"
0003A76E <internal_commands.ab2@993> INCLUDE "internal_commands.ab2"
0003A773 <internal_commands.ab2@994> INCLUDE "internal_commands.ab2"
0003A774 <internal_commands.ab2@995> INCLUDE "internal_commands.ab2"
0003A776 <internal_commands.ab2@998> INCLUDE "internal_commands.ab2"
0003A77A <internal_commands.ab2@999> INCLUDE "internal_commands.ab2"
0003A77C <internal_commands.ab2@1000> INCLUDE "internal_commands.ab2"
0003A77E <internal_commands.ab2@1001> INCLUDE "internal_commands.ab2"
0003A782 <internal_commands.ab2@1002> INCLUDE "internal_commands.ab2"
0003A784 <internal_commands.ab2@1003> INCLUDE "internal_commands.ab2"
0003A788 <internal_commands.ab2@1007> INCLUDE "internal_commands.ab2"
0003A78A <internal_commands.ab2@1008> INCLUDE "internal_commands.ab2"
0003A78F <internal_commands.ab2@1009> INCLUDE "internal_commands.ab2"
0003A790 <internal_commands.ab2@1010> INCLUDE "internal_commands.ab2"
0003A792 <internal_commands.ab2@1013> INCLUDE "internal_commands.ab2"
0003A796 <internal_commands.ab2@1014> INCLUDE "internal_commands.ab2"
0003A798 <internal_commands.ab2@1015> INCLUDE "internal_commands.ab2"
0003A79A <internal_commands.ab2@1016> INCLUDE "internal_commands.ab2"
0003A79E <internal_commands.ab2@1017> INCLUDE "internal_commands.ab2"
0003A7A0 <internal_commands.ab2@1018> INCLUDE "internal_commands.ab2"
0003A7A4 <internal_commands.ab2@1022> INCLUDE "internal_commands.ab2"
0003A7A6 <internal_commands.ab2@1023> INCLUDE "internal_commands.ab2"
0003A7AB <internal_commands.ab2@1024> INCLUDE "internal_commands.ab2"
0003A7AC <internal_commands.ab2@1025> INCLUDE "internal_commands.ab2"
0003A7AE <internal_commands.ab2@1028> INCLUDE "internal_commands.ab2"
0003A7B2 <internal_commands.ab2@1029> INCLUDE "internal_commands.ab2"
0003A7B4 <internal_commands.ab2@1030> INCLUDE "internal_commands.ab2"
0003A7B6 <internal_commands.ab2@1031> INCLUDE "internal_commands.ab2"
0003A7BA <internal_commands.ab2@1032> INCLUDE "internal_commands.ab2"
0003A7BC <internal_commands.ab2@1033> INCLUDE "internal_commands.ab2"
0003A7C0 <internal_commands.ab2@1037> INCLUDE "internal_commands.ab2"
0003A7C2 <internal_commands.ab2@1038> INCLUDE "internal_commands.ab2"
0003A7C7 <internal_commands.ab2@1039> INCLUDE "internal_commands.ab2"
0003A7C8 <internal_commands.ab2@1040> INCLUDE "internal_commands.ab2"
0003A7CA <internal_commands.ab2@1043> INCLUDE "internal_commands.ab2"
0003A7CE <internal_commands.ab2@1044> INCLUDE "internal_commands.ab2"
0003A7D0 <internal_commands.ab2@1045> INCLUDE "internal_commands.ab2"
0003A7D2 <internal_commands.ab2@1046> INCLUDE "internal_commands.ab2"
0003A7D6 <internal_commands.ab2@1047> INCLUDE "internal_commands.ab2"
0003A7D8 <internal_commands.ab2@1048> INCLUDE "internal_commands.ab2"
0003A7DC <internal_commands.ab2@1052> INCLUDE "internal_commands.ab2"
0003A7DE <internal_commands.ab2@1053> INCLUDE "internal_commands.ab2"
0003A7E3 <internal_commands.ab2@1054> INCLUDE "internal_commands.ab2"
0003A7E4 <internal_commands.ab2@1055> INCLUDE "internal_commands.ab2"
0003A7E6 <internal_commands.ab2@1058> INCLUDE "internal_commands.ab2"
0003A7EA <internal_commands.ab2@1059> INCLUDE "internal_commands.ab2"
0003A7EC <internal_commands.ab2@1060> INCLUDE "internal_commands.ab2"
0003A7EE <internal_commands.ab2@1061> INCLUDE "internal_commands.ab2"
0003A7F2 <internal_commands.ab2@1062> INCLUDE "internal_commands.ab2"
0003A7F4 <internal_commands.ab2@1063> INCLUDE "internal_commands.ab2"
0003A7F8 <internal_commands.ab2@1067> INCLUDE "internal_commands.ab2"
0003A7FA <internal_commands.ab2@1068> INCLUDE "internal_commands.ab2"
0003A7FF <internal_commands.ab2@1069> INCLUDE "internal_commands.ab2"
0003A800 <internal_commands.ab2@1070> INCLUDE "internal_commands.ab2"
0003A802 <internal_commands.ab2@1073> INCLUDE "internal_commands.ab2"
0003A806 <internal_commands.ab2@1074> INCLUDE "internal_commands.ab2"
0003A808 <internal_commands.ab2@1075> INCLUDE "internal_commands.ab2"
0003A80A <internal_commands.ab2@1076> INCLUDE "internal_commands.ab2"
0003A80E <internal_commands.ab2@1077> INCLUDE "internal_commands.ab2"
0003A810 <internal_commands.ab2@1078> INCLUDE "internal_commands.ab2"
0003A814 <internal_commands.ab2@1082> INCLUDE "internal_commands.ab2"
0003A816 <internal_commands.ab2@1083> INCLUDE "internal_commands.ab2"
0003A81B <internal_commands.ab2@1084> INCLUDE "internal_commands.ab2"
0003A81C <internal_commands.ab2@1085> INCLUDE "internal_commands.ab2"
0003A81E <internal_commands.ab2@1088> INCLUDE "internal_commands.ab2"
0003A822 <internal_commands.ab2@1089> INCLUDE "internal_commands.ab2"
0003A824 <internal_commands.ab2@1090> INCLUDE "internal_commands.ab2"
0003A826 <internal_commands.ab2@1091> INCLUDE "internal_commands.ab2"
0003A82A <internal_commands.ab2@1092> INCLUDE "internal_commands.ab2"
0003A82C <internal_commands.ab2@1093> INCLUDE "internal_commands.ab2"
0003A830 <internal_commands.ab2@1097> INCLUDE "internal_commands.ab2"
0003A832 <internal_commands.ab2@1098> INCLUDE "internal_commands.ab2"
0003A837 <internal_commands.ab2@1099> INCLUDE "internal_commands.ab2"
0003A838 <internal_commands.ab2@1100> INCLUDE "internal_commands.ab2"
0003A83A <internal_commands.ab2@1103> INCLUDE "internal_commands.ab2"
0003A83E <internal_commands.ab2@1104> INCLUDE "internal_commands.ab2"
0003A840 <internal_commands.ab2@1105> INCLUDE "internal_commands.ab2"
0003A842 <internal_commands.ab2@1106> INCLUDE "internal_commands.ab2"
0003A846 <internal_commands.ab2@1107> INCLUDE "internal_commands.ab2"
0003A848 <internal_commands.ab2@1108> INCLUDE "internal_commands.ab2"
0003A84C <internal_commands.ab2@1112> INCLUDE "internal_commands.ab2"
0003A84E <internal_commands.ab2@1113> INCLUDE "internal_commands.ab2"
0003A853 <internal_commands.ab2@1114> INCLUDE "internal_commands.ab2"
0003A854 <internal_commands.ab2@1115> INCLUDE "internal_commands.ab2"
0003A856 <internal_commands.ab2@1118> INCLUDE "internal_commands.ab2"
0003A85A <internal_commands.ab2@1119> INCLUDE "internal_commands.ab2"
0003A85C <internal_commands.ab2@1120> INCLUDE "internal_commands.ab2"
0003A85E <internal_commands.ab2@1121> INCLUDE "internal_commands.ab2"
0003A862 <internal_commands.ab2@1122> INCLUDE "internal_commands.ab2"
0003A864 <internal_commands.ab2@1123> INCLUDE "internal_commands.ab2"
0003A868 <internal_commands.ab2@1127> INCLUDE "internal_commands.ab2"
0003A86A <internal_commands.ab2@1128> INCLUDE "internal_commands.ab2"
0003A86F <internal_commands.ab2@1129> INCLUDE "internal_commands.ab2"
0003A870 <internal_commands.ab2@1130> INCLUDE "internal_commands.ab2"
0003A872 <internal_commands.ab2@1133> INCLUDE "internal_commands.ab2"
0003A876 <internal_commands.ab2@1134> INCLUDE "internal_commands.ab2"
0003A878 <internal_commands.ab2@1135> INCLUDE "internal_commands.ab2"
0003A87A <internal_commands.ab2@1136> INCLUDE "internal_commands.ab2"
0003A87E <internal_commands.ab2@1137> INCLUDE "internal_commands.ab2"
0003A880 <internal_commands.ab2@1138> INCLUDE "internal_commands.ab2"
0003A884 <internal_commands.ab2@1142> INCLUDE "internal_commands.ab2"
0003A886 <internal_commands.ab2@1143> INCLUDE "internal_commands.ab2"
0003A88B <internal_commands.ab2@1144> INCLUDE "internal_commands.ab2"
0003A88C <internal_commands.ab2@1145> INCLUDE "internal_commands.ab2"
0003A88E <internal_commands.ab2@1148> INCLUDE "internal_commands.ab2"
0003A892 <internal_commands.ab2@1149> INCLUDE "internal_commands.ab2"
0003A894 <internal_commands.ab2@1150> INCLUDE "internal_commands.ab2"
0003A896 <internal_commands.ab2@1151> INCLUDE "internal_commands.ab2"
0003A89A <internal_commands.ab2@1152> INCLUDE "internal_commands.ab2"
0003A89C <internal_commands.ab2@1153> INCLUDE "internal_commands.ab2"
0003A8A0 <internal_commands.ab2@1157> INCLUDE "internal_commands.ab2"
0003A8A2 <internal_commands.ab2@1158> INCLUDE "internal_commands.ab2"
0003A8A7 <internal_commands.ab2@1159> INCLUDE "internal_commands.ab2"
0003A8A8 <internal_commands.ab2@1160> INCLUDE "internal_commands.ab2"
0003A8AA <internal_commands.ab2@1163> INCLUDE "internal_commands.ab2"
0003A8AE <internal_commands.ab2@1164> INCLUDE "internal_commands.ab2"
0003A8B0 <internal_commands.ab2@1165> INCLUDE "internal_commands.ab2"
0003A8B2 <internal_commands.ab2@1166> INCLUDE "internal_commands.ab2"
0003A8B6 <internal_commands.ab2@1167> INCLUDE "internal_commands.ab2"
0003A8B8 <internal_commands.ab2@1168> INCLUDE "internal_commands.ab2"
0003A8BC <internal_commands.ab2@1172> INCLUDE "internal_commands.ab2"
0003A8BE <internal_commands.ab2@1173> INCLUDE "internal_commands.ab2"
0003A8C3 <internal_commands.ab2@1174> INCLUDE "internal_commands.ab2"
0003A8C4 <internal_commands.ab2@1175> INCLUDE "internal_commands.ab2"
0003A8C6 <internal_commands.ab2@1178> INCLUDE "internal_commands.ab2"
0003A8CA <internal_commands.ab2@1179> INCLUDE "internal_commands.ab2"
0003A8CC <internal_commands.ab2@1180> INCLUDE "internal_commands.ab2"
0003A8CE <internal_commands.ab2@1181> INCLUDE "internal_commands.ab2"
0003A8D2 <internal_commands.ab2@1182> INCLUDE "internal_commands.ab2"
0003A8D4 <internal_commands.ab2@1183> INCLUDE "internal_commands.ab2"
0003A8D8 <internal_commands.ab2@1186> INCLUDE "internal_commands.ab2"
0003A8DA <internal_commands.ab2@1187> INCLUDE "internal_commands.ab2"
0003A8DE <internal_commands.ab2@1188> INCLUDE "internal_commands.ab2"
0003A8DF <internal_commands.ab2@1189> INCLUDE "internal_commands.ab2"
0003A8E0 <internal_commands.ab2@1190> INCLUDE "internal_commands.ab2"
0003A8E2 <internal_commands.ab2@1192> INCLUDE "internal_commands.ab2"
0003A8E6 <internal_commands.ab2@1193> INCLUDE "internal_commands.ab2"
0003A8E8 <internal_commands.ab2@1194> INCLUDE "internal_commands.ab2"
0003A8EA <internal_commands.ab2@1195> INCLUDE "internal_commands.ab2"
0003A8EE <internal_commands.ab2@1196> INCLUDE "internal_commands.ab2"
0003A8F0 <internal_commands.ab2@1197> INCLUDE "internal_commands.ab2"
0003A8F4 <internal_commands.ab2@1201> INCLUDE "internal_commands.ab2"
0003A8F6 <internal_commands.ab2@1202> INCLUDE "internal_commands.ab2"
0003A8FB <internal_commands.ab2@1203> INCLUDE "internal_commands.ab2"
0003A8FC <internal_commands.ab2@1204> INCLUDE "internal_commands.ab2"
0003A8FE <internal_commands.ab2@1207> INCLUDE "internal_commands.ab2"
0003A902 <internal_commands.ab2@1208> INCLUDE "internal_commands.ab2"
0003A904 <internal_commands.ab2@1209> INCLUDE "internal_commands.ab2"
0003A906 <internal_commands.ab2@1210> INCLUDE "internal_commands.ab2"
0003A90A <internal_commands.ab2@1211> INCLUDE "internal_commands.ab2"
0003A90C <internal_commands.ab2@1212> INCLUDE "internal_commands.ab2"
0003A910 <internal_commands.ab2@1216> INCLUDE "internal_commands.ab2"
0003A912 <internal_commands.ab2@1217> INCLUDE "internal_commands.ab2"
0003A916 <internal_commands.ab2@1218> INCLUDE "internal_commands.ab2"
0003A917 <internal_commands.ab2@1219> INCLUDE "internal_commands.ab2"
0003A918 <internal_commands.ab2@1220> INCLUDE "internal_commands.ab2"
0003A91A <internal_commands.ab2@1222> INCLUDE "internal_commands.ab2"
0003A91E <internal_commands.ab2@1223> INCLUDE "internal_commands.ab2"
0003A920 <internal_commands.ab2@1224> INCLUDE "internal_commands.ab2"
0003A922 <internal_commands.ab2@1225> INCLUDE "internal_commands.ab2"
0003A926 <internal_commands.ab2@1226> INCLUDE "internal_commands.ab2"
0003A928 <internal_commands.ab2@1227> INCLUDE "internal_commands.ab2"
0003A92C <internal_commands.ab2@1231> INCLUDE "internal_commands.ab2"
0003A92E <internal_commands.ab2@1232> INCLUDE "internal_commands.ab2"
0003A933 <internal_commands.ab2@1233> INCLUDE "internal_commands.ab2"
0003A934 <internal_commands.ab2@1234> INCLUDE "internal_commands.ab2"
0003A936 <internal_commands.ab2@1237> INCLUDE "internal_commands.ab2"
0003A93A <internal_commands.ab2@1238> INCLUDE "internal_commands.ab2"
0003A93C <internal_commands.ab2@1239> INCLUDE "internal_commands.ab2"
0003A93E <internal_commands.ab2@1240> INCLUDE "internal_commands.ab2"
0003A942 <internal_commands.ab2@1241> INCLUDE "internal_commands.ab2"
0003A944 <internal_commands.ab2@1242> INCLUDE "internal_commands.ab2"
0003A948 <internal_commands.ab2@1246> INCLUDE "internal_commands.ab2"
0003A94A <internal_commands.ab2@1247> INCLUDE "internal_commands.ab2"
0003A94F <internal_commands.ab2@1248> INCLUDE "internal_commands.ab2"
0003A950 <internal_commands.ab2@1249> INCLUDE "internal_commands.ab2"
0003A952 <internal_commands.ab2@1252> INCLUDE "internal_commands.ab2"
0003A956 <internal_commands.ab2@1253> INCLUDE "internal_commands.ab2"
0003A958 <internal_commands.ab2@1254> INCLUDE "internal_commands.ab2"
0003A95A <internal_commands.ab2@1255> INCLUDE "internal_commands.ab2"
0003A95E <internal_commands.ab2@1256> INCLUDE "internal_commands.ab2"
0003A960 <internal_commands.ab2@1257> INCLUDE "internal_commands.ab2"
0003A964 <internal_commands.ab2@1261> INCLUDE "internal_commands.ab2"
0003A966 <internal_commands.ab2@1262> INCLUDE "internal_commands.ab2"
0003A96A <internal_commands.ab2@1263> INCLUDE "internal_commands.ab2"
0003A96B <internal_commands.ab2@1264> INCLUDE "internal_commands.ab2"
0003A96C <internal_commands.ab2@1265> INCLUDE "internal_commands.ab2"
0003A96E <internal_commands.ab2@1267> INCLUDE "internal_commands.ab2"
0003A972 <internal_commands.ab2@1268> INCLUDE "internal_commands.ab2"
0003A974 <internal_commands.ab2@1269> INCLUDE "internal_commands.ab2"
0003A976 <internal_commands.ab2@1270> INCLUDE "internal_commands.ab2"
0003A97A <internal_commands.ab2@1271> INCLUDE "internal_commands.ab2"
0003A97C <internal_commands.ab2@1272> INCLUDE "internal_commands.ab2"
0003A980 <internal_commands.ab2@1276> INCLUDE "internal_commands.ab2"
0003A982 <internal_commands.ab2@1277> INCLUDE "internal_commands.ab2"
0003A987 <internal_commands.ab2@1278> INCLUDE "internal_commands.ab2"
0003A988 <internal_commands.ab2@1279> INCLUDE "internal_commands.ab2"
0003A98A <internal_commands.ab2@1282> INCLUDE "internal_commands.ab2"
0003A98E <internal_commands.ab2@1283> INCLUDE "internal_commands.ab2"
0003A990 <internal_commands.ab2@1284> INCLUDE "internal_commands.ab2"
0003A992 <internal_commands.ab2@1285> INCLUDE "internal_commands.ab2"
0003A996 <internal_commands.ab2@1286> INCLUDE "internal_commands.ab2"
0003A998 <internal_commands.ab2@1287> INCLUDE "internal_commands.ab2"
0003A99C <internal_commands.ab2@1291> INCLUDE "internal_commands.ab2"
0003A99E <internal_commands.ab2@1292> INCLUDE "internal_commands.ab2"
0003A9A2 <internal_commands.ab2@1293> INCLUDE "internal_commands.ab2"
0003A9A3 <internal_commands.ab2@1294> INCLUDE "internal_commands.ab2"
0003A9A4 <internal_commands.ab2@1295> INCLUDE "internal_commands.ab2"
0003A9A6 <internal_commands.ab2@1297> INCLUDE "internal_commands.ab2"
0003A9AA <internal_commands.ab2@1298> INCLUDE "internal_commands.ab2"
0003A9AC <internal_commands.ab2@1299> INCLUDE "internal_commands.ab2"
0003A9AE <internal_commands.ab2@1300> INCLUDE "internal_commands.ab2"
0003A9B2 <internal_commands.ab2@1301> INCLUDE "internal_commands.ab2"
0003A9B4 <internal_commands.ab2@1302> INCLUDE "internal_commands.ab2"
0003A9B8 <internal_commands.ab2@1306> INCLUDE "internal_commands.ab2"
0003A9BA <internal_commands.ab2@1307> INCLUDE "internal_commands.ab2"
0003A9BE <internal_commands.ab2@1308> INCLUDE "internal_commands.ab2"
0003A9BF <internal_commands.ab2@1309> INCLUDE "internal_commands.ab2"
0003A9C0 <internal_commands.ab2@1310> INCLUDE "internal_commands.ab2"
0003A9C2 <internal_commands.ab2@1312> INCLUDE "internal_commands.ab2"
0003A9C6 <internal_commands.ab2@1313> INCLUDE "internal_commands.ab2"
0003A9C8 <internal_commands.ab2@1314> INCLUDE "internal_commands.ab2"
0003A9CA <internal_commands.ab2@1315> INCLUDE "internal_commands.ab2"
0003A9CE <internal_commands.ab2@1316> INCLUDE "internal_commands.ab2"
0003A9D0 <internal_commands.ab2@1317> INCLUDE "internal_commands.ab2"
0003A9D4 <internal_commands.ab2@1321> INCLUDE "internal_commands.ab2"
0003A9D6 <internal_commands.ab2@1322> INCLUDE "internal_commands.ab2"
0003A9DE <internal_commands.ab2@1323> INCLUDE "internal_commands.ab2"
0003A9DF <internal_commands.ab2@1324> INCLUDE "internal_commands.ab2"
0003A9E0 <internal_commands.ab2@1325> INCLUDE "internal_commands.ab2"
0003A9E2 <internal_commands.ab2@1327> INCLUDE "internal_commands.ab2"
0003A9E6 <internal_commands.ab2@1328> INCLUDE "internal_commands.ab2"
0003A9E8 <internal_commands.ab2@1329> INCLUDE "internal_commands.ab2"
0003A9EA <internal_commands.ab2@1330> INCLUDE "internal_commands.ab2"
0003A9EE <internal_commands.ab2@1331> INCLUDE "internal_commands.ab2"
0003A9F0 <internal_commands.ab2@1332> INCLUDE "internal_commands.ab2"
0003A9F4 <internal_commands.ab2@1336> INCLUDE "internal_commands.ab2"
0003A9F6 <internal_commands.ab2@1337> INCLUDE "internal_commands.ab2"
0003A9FA <internal_commands.ab2@1338> INCLUDE "internal_commands.ab2"
0003A9FB <internal_commands.ab2@1339> INCLUDE "internal_commands.ab2"
0003A9FC <internal_commands.ab2@1340> INCLUDE "internal_commands.ab2"
0003A9FE <internal_commands.ab2@1342> INCLUDE "internal_commands.ab2"
0003AA02 <internal_commands.ab2@1343> INCLUDE "internal_commands.ab2"
0003AA04 <internal_commands.ab2@1344> INCLUDE "internal_commands.ab2"
0003AA06 <internal_commands.ab2@1345> INCLUDE "internal_commands.ab2"
0003AA0A <internal_commands.ab2@1346> INCLUDE "internal_commands.ab2"
0003AA0C <internal_commands.ab2@1347> INCLUDE "internal_commands.ab2"
0003AA10 <internal_commands.ab2@1351> INCLUDE "internal_commands.ab2"
0003AA12 <internal_commands.ab2@1352> INCLUDE "internal_commands.ab2"
0003AA16 <internal_commands.ab2@1353> INCLUDE "internal_commands.ab2"
0003AA17 <internal_commands.ab2@1354> INCLUDE "internal_commands.ab2"
0003AA18 <internal_commands.ab2@1355> INCLUDE "internal_commands.ab2"
0003AA1A <internal_commands.ab2@1357> INCLUDE "internal_commands.ab2"
0003AA1E <internal_commands.ab2@1358> INCLUDE "internal_commands.ab2"
0003AA20 <internal_commands.ab2@1359> INCLUDE "internal_commands.ab2"
0003AA22 <internal_commands.ab2@1360> INCLUDE "internal_commands.ab2"
0003AA26 <internal_commands.ab2@1361> INCLUDE "internal_commands.ab2"
0003AA28 <internal_commands.ab2@1362> INCLUDE "internal_commands.ab2"
0003AA2C <internal_commands.ab2@1366> INCLUDE "internal_commands.ab2"
0003AA2E <internal_commands.ab2@1367> INCLUDE "internal_commands.ab2"
0003AA32 <internal_commands.ab2@1368> INCLUDE "internal_commands.ab2"
0003AA33 <internal_commands.ab2@1369> INCLUDE "internal_commands.ab2"
0003AA34 <internal_commands.ab2@1370> INCLUDE "internal_commands.ab2"
0003AA36 <internal_commands.ab2@1372> INCLUDE "internal_commands.ab2"
0003AA3A <internal_commands.ab2@1373> INCLUDE "internal_commands.ab2"
0003AA3C <internal_commands.ab2@1374> INCLUDE "internal_commands.ab2"
0003AA3E <internal_commands.ab2@1375> INCLUDE "internal_commands.ab2"
0003AA42 <internal_commands.ab2@1376> INCLUDE "internal_commands.ab2"
0003AA44 <internal_commands.ab2@1377> INCLUDE "internal_commands.ab2"
0003AA48 <internal_commands.ab2@1381> INCLUDE "internal_commands.ab2"
0003AA4A <internal_commands.ab2@1382> INCLUDE "internal_commands.ab2"
0003AA4F <internal_commands.ab2@1383> INCLUDE "internal_commands.ab2"
0003AA50 <internal_commands.ab2@1384> INCLUDE "internal_commands.ab2"
0003AA52 <internal_commands.ab2@1387> INCLUDE "internal_commands.ab2"
0003AA56 <internal_commands.ab2@1388> INCLUDE "internal_commands.ab2"
0003AA58 <internal_commands.ab2@1389> INCLUDE "internal_commands.ab2"
0003AA5A <internal_commands.ab2@1390> INCLUDE "internal_commands.ab2"
0003AA5E <internal_commands.ab2@1391> INCLUDE "internal_commands.ab2"
0003AA60 <internal_commands.ab2@1392> INCLUDE "internal_commands.ab2"
0003AA64 <internal_commands.ab2@1396> INCLUDE "internal_commands.ab2"
0003AA66 <internal_commands.ab2@1397> INCLUDE "internal_commands.ab2"
0003AA6A <internal_commands.ab2@1398> INCLUDE "internal_commands.ab2"
0003AA6B <internal_commands.ab2@1399> INCLUDE "internal_commands.ab2"
0003AA6C <internal_commands.ab2@1400> INCLUDE "internal_commands.ab2"
0003AA6E <internal_commands.ab2@1402> INCLUDE "internal_commands.ab2"
0003AA72 <internal_commands.ab2@1403> INCLUDE "internal_commands.ab2"
0003AA74 <internal_commands.ab2@1404> INCLUDE "internal_commands.ab2"
0003AA76 <internal_commands.ab2@1405> INCLUDE "internal_commands.ab2"
0003AA7A <internal_commands.ab2@1406> INCLUDE "internal_commands.ab2"
0003AA7C <internal_commands.ab2@1407> INCLUDE "internal_commands.ab2"
0003AA80 <internal_commands.ab2@1411> INCLUDE "internal_commands.ab2"
0003AA82 <internal_commands.ab2@1412> INCLUDE "internal_commands.ab2"
0003AA86 <internal_commands.ab2@1413> INCLUDE "internal_commands.ab2"
0003AA87 <internal_commands.ab2@1414> INCLUDE "internal_commands.ab2"
0003AA88 <internal_commands.ab2@1415> INCLUDE "internal_commands.ab2"
0003AA8A <internal_commands.ab2@1417> INCLUDE "internal_commands.ab2"
0003AA8E <internal_commands.ab2@1418> INCLUDE "internal_commands.ab2"
0003AA90 <internal_commands.ab2@1419> INCLUDE "internal_commands.ab2"
0003AA92 <internal_commands.ab2@1420> INCLUDE "internal_commands.ab2"
0003AA96 <internal_commands.ab2@1421> INCLUDE "internal_commands.ab2"
0003AA98 <internal_commands.ab2@1422> INCLUDE "internal_commands.ab2"
0003AA9C <internal_commands.ab2@1426> INCLUDE "internal_commands.ab2"
0003AA9E <internal_commands.ab2@1427> INCLUDE "internal_commands.ab2"
0003AAA3 <internal_commands.ab2@1428> INCLUDE "internal_commands.ab2"
0003AAA4 <internal_commands.ab2@1429> INCLUDE "internal_commands.ab2"
0003AAA6 <internal_commands.ab2@1432> INCLUDE "internal_commands.ab2"
0003AAAA <internal_commands.ab2@1433> INCLUDE "internal_commands.ab2"
0003AAAC <internal_commands.ab2@1434> INCLUDE "internal_commands.ab2"
0003AAAE <internal_commands.ab2@1435> INCLUDE "internal_commands.ab2"
0003AAB2 <internal_commands.ab2@1436> INCLUDE "internal_commands.ab2"
0003AAB4 <internal_commands.ab2@1437> INCLUDE "internal_commands.ab2"
0003AAB8 <internal_commands.ab2@1441> INCLUDE "internal_commands.ab2"
0003AABA <internal_commands.ab2@1442> INCLUDE "internal_commands.ab2"
0003AABF <internal_commands.ab2@1443> INCLUDE "internal_commands.ab2"
0003AAC0 <internal_commands.ab2@1444> INCLUDE "internal_commands.ab2"
0003AAC2 <internal_commands.ab2@1447> INCLUDE "internal_commands.ab2"
0003AAC6 <internal_commands.ab2@1448> INCLUDE "internal_commands.ab2"
0003AAC8 <internal_commands.ab2@1449> INCLUDE "internal_commands.ab2"
0003AACA <internal_commands.ab2@1450> INCLUDE "internal_commands.ab2"
0003AACE <internal_commands.ab2@1451> INCLUDE "internal_commands.ab2"
0003AAD0 <internal_commands.ab2@1452> INCLUDE "internal_commands.ab2"
0003AAD4 <internal_commands.ab2@1457> INCLUDE "internal_commands.ab2"
0003AAD6 <internal_commands.ab2@1458> INCLUDE "internal_commands.ab2"
0003AADC <internal_commands.ab2@1459> INCLUDE "internal_commands.ab2"
0003AADD <internal_commands.ab2@1460> INCLUDE "internal_commands.ab2"
0003AADE <internal_commands.ab2@1461> INCLUDE "internal_commands.ab2"
0003AAE0 <internal_commands.ab2@1463> INCLUDE "internal_commands.ab2"
0003AAE4 <internal_commands.ab2@1464> INCLUDE "internal_commands.ab2"
0003AAE6 <internal_commands.ab2@1465> INCLUDE "internal_commands.ab2"
0003AAE8 <internal_commands.ab2@1466> INCLUDE "internal_commands.ab2"
0003AAEC <internal_commands.ab2@1467> INCLUDE "internal_commands.ab2"
0003AAEE <internal_commands.ab2@1468> INCLUDE "internal_commands.ab2"
0003AAF2 <internal_commands.ab2@1472> INCLUDE "internal_commands.ab2"
0003AAF4 <internal_commands.ab2@1473> INCLUDE "internal_commands.ab2"
0003AAFA <internal_commands.ab2@1474> INCLUDE "internal_commands.ab2"
0003AAFB <internal_commands.ab2@1475> INCLUDE "internal_commands.ab2"
0003AAFC <internal_commands.ab2@1476> INCLUDE "internal_commands.ab2"
0003AAFE <internal_commands.ab2@1478> INCLUDE "internal_commands.ab2"
0003AB02 <internal_commands.ab2@1479> INCLUDE "internal_commands.ab2"
0003AB04 <internal_commands.ab2@1480> INCLUDE "internal_commands.ab2"
0003AB06 <internal_commands.ab2@1481> INCLUDE "internal_commands.ab2"
0003AB0A <internal_commands.ab2@1482> INCLUDE "internal_commands.ab2"
0003AB0C <internal_commands.ab2@1483> INCLUDE "internal_commands.ab2"
0003AB10 <internal_commands.ab2@1487> INCLUDE "internal_commands.ab2"
0003AB12 <internal_commands.ab2@1488> INCLUDE "internal_commands.ab2"
0003AB18 <internal_commands.ab2@1489> INCLUDE "internal_commands.ab2"
0003AB19 <internal_commands.ab2@1490> INCLUDE "internal_commands.ab2"
0003AB1A <internal_commands.ab2@1491> INCLUDE "internal_commands.ab2"
0003AB1C <internal_commands.ab2@1493> INCLUDE "internal_commands.ab2"
0003AB20 <internal_commands.ab2@1494> INCLUDE "internal_commands.ab2"
0003AB22 <internal_commands.ab2@1495> INCLUDE "internal_commands.ab2"
0003AB24 <internal_commands.ab2@1496> INCLUDE "internal_commands.ab2"
0003AB28 <internal_commands.ab2@1497> INCLUDE "internal_commands.ab2"
0003AB2A <internal_commands.ab2@1498> INCLUDE "internal_commands.ab2"
0003AB2E <internal_commands.ab2@1502> INCLUDE "internal_commands.ab2"
0003AB30 <internal_commands.ab2@1503> INCLUDE "internal_commands.ab2"
0003AB35 <internal_commands.ab2@1504> INCLUDE "internal_commands.ab2"
0003AB36 <internal_commands.ab2@1505> INCLUDE "internal_commands.ab2"
0003AB38 <internal_commands.ab2@1508> INCLUDE "internal_commands.ab2"
0003AB3C <internal_commands.ab2@1509> INCLUDE "internal_commands.ab2"
0003AB3E <internal_commands.ab2@1510> INCLUDE "internal_commands.ab2"
0003AB40 <internal_commands.ab2@1511> INCLUDE "internal_commands.ab2"
0003AB44 <internal_commands.ab2@1512> INCLUDE "internal_commands.ab2"
0003AB46 <internal_commands.ab2@1513> INCLUDE "internal_commands.ab2"
0003AB4A <internal_commands.ab2@1517> INCLUDE "internal_commands.ab2"
0003AB4C <internal_commands.ab2@1518> INCLUDE "internal_commands.ab2"
0003AB51 <internal_commands.ab2@1519> INCLUDE "internal_commands.ab2"
0003AB52 <internal_commands.ab2@1520> INCLUDE "internal_commands.ab2"
0003AB54 <internal_commands.ab2@1523> INCLUDE "internal_commands.ab2"
0003AB58 <internal_commands.ab2@1524> INCLUDE "internal_commands.ab2"
0003AB5A <internal_commands.ab2@1525> INCLUDE "internal_commands.ab2"
0003AB5C <internal_commands.ab2@1526> INCLUDE "internal_commands.ab2"
0003AB60 <internal_commands.ab2@1527> INCLUDE "internal_commands.ab2"
0003AB62 <internal_commands.ab2@1528> INCLUDE "internal_commands.ab2"
0003AB66 <internal_commands.ab2@1532> INCLUDE "internal_commands.ab2"
0003AB68 <internal_commands.ab2@1533> INCLUDE "internal_commands.ab2"
0003AB6D <internal_commands.ab2@1534> INCLUDE "internal_commands.ab2"
0003AB6E <internal_commands.ab2@1535> INCLUDE "internal_commands.ab2"
0003AB70 <internal_commands.ab2@1538> INCLUDE "internal_commands.ab2"
0003AB74 <internal_commands.ab2@1539> INCLUDE "internal_commands.ab2"
0003AB76 <internal_commands.ab2@1540> INCLUDE "internal_commands.ab2"
0003AB78 <internal_commands.ab2@1541> INCLUDE "internal_commands.ab2"
0003AB7C <internal_commands.ab2@1542> INCLUDE "internal_commands.ab2"
0003AB7E <internal_commands.ab2@1543> INCLUDE "internal_commands.ab2"
0003AB82 <internal_commands.ab2@1547> INCLUDE "internal_commands.ab2"
0003AB84 <internal_commands.ab2@1548> INCLUDE "internal_commands.ab2"
0003AB88 <internal_commands.ab2@1549> INCLUDE "internal_commands.ab2"
0003AB89 <internal_commands.ab2@1550> INCLUDE "internal_commands.ab2"
0003AB8A <internal_commands.ab2@1551> INCLUDE "internal_commands.ab2"
0003AB8C <internal_commands.ab2@1553> INCLUDE "internal_commands.ab2"
0003AB90 <internal_commands.ab2@1554> INCLUDE "internal_commands.ab2"
0003AB92 <internal_commands.ab2@1555> INCLUDE "internal_commands.ab2"
0003AB94 <internal_commands.ab2@1556> INCLUDE "internal_commands.ab2"
0003AB98 <internal_commands.ab2@1557> INCLUDE "internal_commands.ab2"
0003AB9A <internal_commands.ab2@1558> INCLUDE "internal_commands.ab2"
0003AB9E <internal_commands.ab2@1562> INCLUDE "internal_commands.ab2"
0003ABA0 <internal_commands.ab2@1563> INCLUDE "internal_commands.ab2"
0003ABA5 <internal_commands.ab2@1564> INCLUDE "internal_commands.ab2"
0003ABA6 <internal_commands.ab2@1565> INCLUDE "internal_commands.ab2"
0003ABA8 <internal_commands.ab2@1568> INCLUDE "internal_commands.ab2"
0003ABAC <internal_commands.ab2@1569> INCLUDE "internal_commands.ab2"
0003ABAE <internal_commands.ab2@1570> INCLUDE "internal_commands.ab2"
0003ABB0 <internal_commands.ab2@1571> INCLUDE "internal_commands.ab2"
0003ABB4 <internal_commands.ab2@1572> INCLUDE "internal_commands.ab2"
0003ABB6 <internal_commands.ab2@1573> INCLUDE "internal_commands.ab2"
0003ABBA <internal_commands.ab2@1577> INCLUDE "internal_commands.ab2"
0003ABBC <internal_commands.ab2@1578> INCLUDE "internal_commands.ab2"
0003ABC0 <internal_commands.ab2@1579> INCLUDE "internal_commands.ab2"
0003ABC1 <internal_commands.ab2@1580> INCLUDE "internal_commands.ab2"
0003ABC2 <internal_commands.ab2@1581> INCLUDE "internal_commands.ab2"
0003ABC4 <internal_commands.ab2@1583> INCLUDE "internal_commands.ab2"
0003ABC8 <internal_commands.ab2@1584> INCLUDE "internal_commands.ab2"
0003ABCA <internal_commands.ab2@1585> INCLUDE "internal_commands.ab2"
0003ABCC <internal_commands.ab2@1586> INCLUDE "internal_commands.ab2"
0003ABD0 <internal_commands.ab2@1587> INCLUDE "internal_commands.ab2"
0003ABD2 <internal_commands.ab2@1588> INCLUDE "internal_commands.ab2"
0003ABD6 <internal_commands.ab2@1592> INCLUDE "internal_commands.ab2"
0003ABD8 <internal_commands.ab2@1593> INCLUDE "internal_commands.ab2"
0003ABDC <internal_commands.ab2@1594> INCLUDE "internal_commands.ab2"
0003ABDD <internal_commands.ab2@1595> INCLUDE "internal_commands.ab2"
0003ABDE <internal_commands.ab2@1596> INCLUDE "internal_commands.ab2"
0003ABE0 <internal_commands.ab2@1598> INCLUDE "internal_commands.ab2"
0003ABE4 <internal_commands.ab2@1599> INCLUDE "internal_commands.ab2"
0003ABE6 <internal_commands.ab2@1600> INCLUDE "internal_commands.ab2"
0003ABE8 <internal_commands.ab2@1601> INCLUDE "internal_commands.ab2"
0003ABEC <internal_commands.ab2@1602> INCLUDE "internal_commands.ab2"
0003ABEE <internal_commands.ab2@1603> INCLUDE "internal_commands.ab2"
0003ABF2 <internal_commands.ab2@1607> INCLUDE "internal_commands.ab2"
0003ABF4 <internal_commands.ab2@1608> INCLUDE "internal_commands.ab2"
0003ABF7 <internal_commands.ab2@1609> INCLUDE "internal_commands.ab2"
0003ABF8 <internal_commands.ab2@1610> INCLUDE "internal_commands.ab2"
0003ABFA <internal_commands.ab2@1613> INCLUDE "internal_commands.ab2"
0003ABFE <internal_commands.ab2@1614> INCLUDE "internal_commands.ab2"
0003AC00 <internal_commands.ab2@1615> INCLUDE "internal_commands.ab2"
0003AC02 <internal_commands.ab2@1616> INCLUDE "internal_commands.ab2"
0003AC06 <internal_commands.ab2@1617> INCLUDE "internal_commands.ab2"
0003AC08 <internal_commands.ab2@1618> INCLUDE "internal_commands.ab2"
0003AC0C <internal_commands.ab2@1622> INCLUDE "internal_commands.ab2"
0003AC0E <internal_commands.ab2@1623> INCLUDE "internal_commands.ab2"
0003AC12 <internal_commands.ab2@1624> INCLUDE "internal_commands.ab2"
0003AC13 <internal_commands.ab2@1625> INCLUDE "internal_commands.ab2"
0003AC14 <internal_commands.ab2@1626> INCLUDE "internal_commands.ab2"
0003AC16 <internal_commands.ab2@1628> INCLUDE "internal_commands.ab2"
0003AC1A <internal_commands.ab2@1629> INCLUDE "internal_commands.ab2"
0003AC1C <internal_commands.ab2@1630> INCLUDE "internal_commands.ab2"
0003AC1E <internal_commands.ab2@1631> INCLUDE "internal_commands.ab2"
0003AC22 <internal_commands.ab2@1632> INCLUDE "internal_commands.ab2"
0003AC24 <internal_commands.ab2@1633> INCLUDE "internal_commands.ab2"
0003AC28 <internal_commands.ab2@1637> INCLUDE "internal_commands.ab2"
0003AC2A <internal_commands.ab2@1638> INCLUDE "internal_commands.ab2"
0003AC2E <internal_commands.ab2@1639> INCLUDE "internal_commands.ab2"
0003AC2F <internal_commands.ab2@1640> INCLUDE "internal_commands.ab2"
0003AC30 <internal_commands.ab2@1641> INCLUDE "internal_commands.ab2"
0003AC32 <internal_commands.ab2@1643> INCLUDE "internal_commands.ab2"
0003AC36 <internal_commands.ab2@1644> INCLUDE "internal_commands.ab2"
0003AC38 <internal_commands.ab2@1645> INCLUDE "internal_commands.ab2"
0003AC3A <internal_commands.ab2@1646> INCLUDE "internal_commands.ab2"
0003AC3E <internal_commands.ab2@1647> INCLUDE "internal_commands.ab2"
0003AC40 <internal_commands.ab2@1648> INCLUDE "internal_commands.ab2"
0003AC44 <internal_commands.ab2@1652> INCLUDE "internal_commands.ab2"
0003AC46 <internal_commands.ab2@1653> INCLUDE "internal_commands.ab2"
0003AC4C <internal_commands.ab2@1654> INCLUDE "internal_commands.ab2"
0003AC4D <internal_commands.ab2@1655> INCLUDE "internal_commands.ab2"
0003AC4E <internal_commands.ab2@1656> INCLUDE "internal_commands.ab2"
0003AC50 <internal_commands.ab2@1658> INCLUDE "internal_commands.ab2"
0003AC54 <internal_commands.ab2@1659> INCLUDE "internal_commands.ab2"
0003AC56 <internal_commands.ab2@1660> INCLUDE "internal_commands.ab2"
0003AC58 <internal_commands.ab2@1661> INCLUDE "internal_commands.ab2"
0003AC5C <internal_commands.ab2@1662> INCLUDE "internal_commands.ab2"
0003AC5E <internal_commands.ab2@1663> INCLUDE "internal_commands.ab2"
0003AC62 <internal_commands.ab2@1667> INCLUDE "internal_commands.ab2"
0003AC64 <internal_commands.ab2@1668> INCLUDE "internal_commands.ab2"
0003AC68 <internal_commands.ab2@1669> INCLUDE "internal_commands.ab2"
0003AC69 <internal_commands.ab2@1670> INCLUDE "internal_commands.ab2"
0003AC6A <internal_commands.ab2@1671> INCLUDE "internal_commands.ab2"
0003AC6C <internal_commands.ab2@1673> INCLUDE "internal_commands.ab2"
0003AC70 <internal_commands.ab2@1674> INCLUDE "internal_commands.ab2"
0003AC72 <internal_commands.ab2@1675> INCLUDE "internal_commands.ab2"
0003AC74 <internal_commands.ab2@1676> INCLUDE "internal_commands.ab2"
0003AC78 <internal_commands.ab2@1677> INCLUDE "internal_commands.ab2"
0003AC7A <internal_commands.ab2@1678> INCLUDE "internal_commands.ab2"
0003AC7E <internal_commands.ab2@1682> INCLUDE "internal_commands.ab2"
0003AC80 <internal_commands.ab2@1683> INCLUDE "internal_commands.ab2"
0003AC84 <internal_commands.ab2@1684> INCLUDE "internal_commands.ab2"
0003AC85 <internal_commands.ab2@1685> INCLUDE "internal_commands.ab2"
0003AC86 <internal_commands.ab2@1686> INCLUDE "internal_commands.ab2"
0003AC88 <internal_commands.ab2@1688> INCLUDE "internal_commands.ab2"
0003AC8C <internal_commands.ab2@1689> INCLUDE "internal_commands.ab2"
0003AC8E <internal_commands.ab2@1690> INCLUDE "internal_commands.ab2"
0003AC90 <internal_commands.ab2@1691> INCLUDE "internal_commands.ab2"
0003AC94 <internal_commands.ab2@1692> INCLUDE "internal_commands.ab2"
0003AC96 <internal_commands.ab2@1693> INCLUDE "internal_commands.ab2"
0003AC9A <internal_commands.ab2@1697> INCLUDE "internal_commands.ab2"
0003AC9C <internal_commands.ab2@1698> INCLUDE "internal_commands.ab2"
0003ACA1 <internal_commands.ab2@1699> INCLUDE "internal_commands.ab2"
0003ACA2 <internal_commands.ab2@1700> INCLUDE "internal_commands.ab2"
0003ACA4 <internal_commands.ab2@1703> INCLUDE "internal_commands.ab2"
0003ACA8 <internal_commands.ab2@1704> INCLUDE "internal_commands.ab2"
0003ACAA <internal_commands.ab2@1705> INCLUDE "internal_commands.ab2"
0003ACAC <internal_commands.ab2@1706> INCLUDE "internal_commands.ab2"
0003ACB0 <internal_commands.ab2@1707> INCLUDE "internal_commands.ab2"
0003ACB2 <internal_commands.ab2@1708> INCLUDE "internal_commands.ab2"
0003ACB6 <internal_commands.ab2@1712> INCLUDE "internal_commands.ab2"
0003ACB8 <internal_commands.ab2@1713> INCLUDE "internal_commands.ab2"
0003ACBD <internal_commands.ab2@1714> INCLUDE "internal_commands.ab2"
0003ACBE <internal_commands.ab2@1715> INCLUDE "internal_commands.ab2"
0003ACC0 <internal_commands.ab2@1718> INCLUDE "internal_commands.ab2"
0003ACC4 <internal_commands.ab2@1719> INCLUDE "internal_commands.ab2"
0003ACC6 <internal_commands.ab2@1720> INCLUDE "internal_commands.ab2"
0003ACC8 <internal_commands.ab2@1721> INCLUDE "internal_commands.ab2"
0003ACCC <internal_commands.ab2@1722> INCLUDE "internal_commands.ab2"
0003ACCE <internal_commands.ab2@1723> INCLUDE "internal_commands.ab2"
0003ACD2 <internal_commands.ab2@1727> INCLUDE "internal_commands.ab2"
0003ACD4 <internal_commands.ab2@1728> INCLUDE "internal_commands.ab2"
0003ACD8 <internal_commands.ab2@1729> INCLUDE "internal_commands.ab2"
0003ACD9 <internal_commands.ab2@1730> INCLUDE "internal_commands.ab2"
0003ACDA <internal_commands.ab2@1731> INCLUDE "internal_commands.ab2"
0003ACDC <internal_commands.ab2@1733> INCLUDE "internal_commands.ab2"
0003ACE0 <internal_commands.ab2@1734> INCLUDE "internal_commands.ab2"
0003ACE2 <internal_commands.ab2@1735> INCLUDE "internal_commands.ab2"
0003ACE4 <internal_commands.ab2@1736> INCLUDE "internal_commands.ab2"
0003ACE8 <internal_commands.ab2@1737> INCLUDE "internal_commands.ab2"
0003ACEA <internal_commands.ab2@1738> INCLUDE "internal_commands.ab2"
0003ACEE <internal_commands.ab2@1742> INCLUDE "internal_commands.ab2"
0003ACF0 <internal_commands.ab2@1743> INCLUDE "internal_commands.ab2"
0003ACF4 <internal_commands.ab2@1744> INCLUDE "internal_commands.ab2"
0003ACF5 <internal_commands.ab2@1745> INCLUDE "internal_commands.ab2"
0003ACF6 <internal_commands.ab2@1746> INCLUDE "internal_commands.ab2"
0003ACF8 <internal_commands.ab2@1748> INCLUDE "internal_commands.ab2"
0003ACFC <internal_commands.ab2@1749> INCLUDE "internal_commands.ab2"
0003ACFE <internal_commands.ab2@1750> INCLUDE "internal_commands.ab2"
0003AD00 <internal_commands.ab2@1751> INCLUDE "internal_commands.ab2"
0003AD04 <internal_commands.ab2@1752> INCLUDE "internal_commands.ab2"
0003AD06 <internal_commands.ab2@1753> INCLUDE "internal_commands.ab2"
0003AD0A <internal_commands.ab2@1757> INCLUDE "internal_commands.ab2"
0003AD0C <internal_commands.ab2@1758> INCLUDE "internal_commands.ab2"
0003AD10 <internal_commands.ab2@1759> INCLUDE "internal_commands.ab2"
0003AD11 <internal_commands.ab2@1760> INCLUDE "internal_commands.ab2"
0003AD12 <internal_commands.ab2@1761> INCLUDE "internal_commands.ab2"
0003AD14 <internal_commands.ab2@1763> INCLUDE "internal_commands.ab2"
0003AD18 <internal_commands.ab2@1764> INCLUDE "internal_commands.ab2"
0003AD1A <internal_commands.ab2@1765> INCLUDE "internal_commands.ab2"
0003AD1C <internal_commands.ab2@1766> INCLUDE "internal_commands.ab2"
0003AD20 <internal_commands.ab2@1767> INCLUDE "internal_commands.ab2"
0003AD22 <internal_commands.ab2@1768> INCLUDE "internal_commands.ab2"
0003AD26 <internal_commands.ab2@1772> INCLUDE "internal_commands.ab2"
0003AD28 <internal_commands.ab2@1773> INCLUDE "internal_commands.ab2"
0003AD2D <internal_commands.ab2@1774> INCLUDE "internal_commands.ab2"
0003AD2E <internal_commands.ab2@1775> INCLUDE "internal_commands.ab2"
0003AD30 <internal_commands.ab2@1778> INCLUDE "internal_commands.ab2"
0003AD34 <internal_commands.ab2@1779> INCLUDE "internal_commands.ab2"
0003AD36 <internal_commands.ab2@1780> INCLUDE "internal_commands.ab2"
0003AD38 <internal_commands.ab2@1781> INCLUDE "internal_commands.ab2"
0003AD3C <internal_commands.ab2@1782> INCLUDE "internal_commands.ab2"
0003AD3E <internal_commands.ab2@1783> INCLUDE "internal_commands.ab2"
0003AD42 <internal_commands.ab2@1787> INCLUDE "internal_commands.ab2"
0003AD44 <internal_commands.ab2@1788> INCLUDE "internal_commands.ab2"
0003AD48 <internal_commands.ab2@1789> INCLUDE "internal_commands.ab2"
0003AD49 <internal_commands.ab2@1790> INCLUDE "internal_commands.ab2"
0003AD4A <internal_commands.ab2@1791> INCLUDE "internal_commands.ab2"
0003AD4C <internal_commands.ab2@1793> INCLUDE "internal_commands.ab2"
0003AD50 <internal_commands.ab2@1794> INCLUDE "internal_commands.ab2"
0003AD52 <internal_commands.ab2@1795> INCLUDE "internal_commands.ab2"
0003AD54 <internal_commands.ab2@1796> INCLUDE "internal_commands.ab2"
0003AD58 <internal_commands.ab2@1797> INCLUDE "internal_commands.ab2"
0003AD5A <internal_commands.ab2@1798> INCLUDE "internal_commands.ab2"
0003AD5E <internal_commands.ab2@1802> INCLUDE "internal_commands.ab2"
0003AD60 <internal_commands.ab2@1803> INCLUDE "internal_commands.ab2"
0003AD64 <internal_commands.ab2@1804> INCLUDE "internal_commands.ab2"
0003AD65 <internal_commands.ab2@1805> INCLUDE "internal_commands.ab2"
0003AD66 <internal_commands.ab2@1806> INCLUDE "internal_commands.ab2"
0003AD68 <internal_commands.ab2@1808> INCLUDE "internal_commands.ab2"
0003AD6C <internal_commands.ab2@1809> INCLUDE "internal_commands.ab2"
0003AD6E <internal_commands.ab2@1810> INCLUDE "internal_commands.ab2"
0003AD70 <internal_commands.ab2@1811> INCLUDE "internal_commands.ab2"
0003AD74 <internal_commands.ab2@1812> INCLUDE "internal_commands.ab2"
0003AD76 <internal_commands.ab2@1813> INCLUDE "internal_commands.ab2"
0003AD7A <internal_commands.ab2@1817> INCLUDE "internal_commands.ab2"
0003AD7C <internal_commands.ab2@1818> INCLUDE "internal_commands.ab2"
0003AD80 <internal_commands.ab2@1819> INCLUDE "internal_commands.ab2"
0003AD81 <internal_commands.ab2@1820> INCLUDE "internal_commands.ab2"
0003AD82 <internal_commands.ab2@1821> INCLUDE "internal_commands.ab2"
0003AD84 <internal_commands.ab2@1823> INCLUDE "internal_commands.ab2"
0003AD88 <internal_commands.ab2@1824> INCLUDE "internal_commands.ab2"
0003AD8A <internal_commands.ab2@1825> INCLUDE "internal_commands.ab2"
0003AD8C <internal_commands.ab2@1826> INCLUDE "internal_commands.ab2"
0003AD90 <internal_commands.ab2@1827> INCLUDE "internal_commands.ab2"
0003AD92 <internal_commands.ab2@1828> INCLUDE "internal_commands.ab2"
0003AD96 <internal_commands.ab2@1832> INCLUDE "internal_commands.ab2"
0003AD98 <internal_commands.ab2@1833> INCLUDE "internal_commands.ab2"
0003AD9C <internal_commands.ab2@1834> INCLUDE "internal_commands.ab2"
0003AD9D <internal_commands.ab2@1835> INCLUDE "internal_commands.ab2"
0003AD9E <internal_commands.ab2@1836> INCLUDE "internal_commands.ab2"
0003ADA0 <internal_commands.ab2@1838> INCLUDE "internal_commands.ab2"
0003ADA4 <internal_commands.ab2@1839> INCLUDE "internal_commands.ab2"
0003ADA6 <internal_commands.ab2@1840> INCLUDE "internal_commands.ab2"
0003ADA8 <internal_commands.ab2@1841> INCLUDE "internal_commands.ab2"
0003ADAC <internal_commands.ab2@1842> INCLUDE "internal_commands.ab2"
0003ADAE <internal_commands.ab2@1843> INCLUDE "internal_commands.ab2"
0003ADB2 <internal_commands.ab2@1847> INCLUDE "internal_commands.ab2"
0003ADB4 <internal_commands.ab2@1848> INCLUDE "internal_commands.ab2"
0003ADB8 <internal_commands.ab2@1849> INCLUDE "internal_commands.ab2"
0003ADB9 <internal_commands.ab2@1850> INCLUDE "internal_commands.ab2"
0003ADBA <internal_commands.ab2@1851> INCLUDE "internal_commands.ab2"
0003ADBC <internal_commands.ab2@1853> INCLUDE "internal_commands.ab2"
0003ADC0 <internal_commands.ab2@1854> INCLUDE "internal_commands.ab2"
0003ADC2 <internal_commands.ab2@1855> INCLUDE "internal_commands.ab2"
0003ADC4 <internal_commands.ab2@1856> INCLUDE "internal_commands.ab2"
0003ADC8 <internal_commands.ab2@1857> INCLUDE "internal_commands.ab2"
0003ADCA <internal_commands.ab2@1858> INCLUDE "internal_commands.ab2"
0003ADCE <internal_commands.ab2@1862> INCLUDE "internal_commands.ab2"
0003ADD0 <internal_commands.ab2@1863> INCLUDE "internal_commands.ab2"
0003ADD4 <internal_commands.ab2@1864> INCLUDE "internal_commands.ab2"
0003ADD5 <internal_commands.ab2@1865> INCLUDE "internal_commands.ab2"
0003ADD6 <internal_commands.ab2@1866> INCLUDE "internal_commands.ab2"
0003ADD8 <internal_commands.ab2@1868> INCLUDE "internal_commands.ab2"
0003ADDC <internal_commands.ab2@1869> INCLUDE "internal_commands.ab2"
0003ADDE <internal_commands.ab2@1870> INCLUDE "internal_commands.ab2"
0003ADE0 <internal_commands.ab2@1871> INCLUDE "internal_commands.ab2"
0003ADE4 <internal_commands.ab2@1872> INCLUDE "internal_commands.ab2"
0003ADE6 <internal_commands.ab2@1873> INCLUDE "internal_commands.ab2"
0003ADEA <internal_commands.ab2@1877> INCLUDE "internal_commands.ab2"
0003ADEC <internal_commands.ab2@1878> INCLUDE "internal_commands.ab2"
0003ADF0 <internal_commands.ab2@1879> INCLUDE "internal_commands.ab2"
0003ADF1 <internal_commands.ab2@1880> INCLUDE "internal_commands.ab2"
0003ADF2 <internal_commands.ab2@1881> INCLUDE "internal_commands.ab2"
0003ADF4 <internal_commands.ab2@1883> INCLUDE "internal_commands.ab2"
0003ADF8 <internal_commands.ab2@1884> INCLUDE "internal_commands.ab2"
0003ADFA <internal_commands.ab2@1885> INCLUDE "internal_commands.ab2"
0003ADFC <internal_commands.ab2@1886> INCLUDE "internal_commands.ab2"
0003AE00 <internal_commands.ab2@1887> INCLUDE "internal_commands.ab2"
0003AE02 <internal_commands.ab2@1888> INCLUDE "internal_commands.ab2"
0003AE06 <internal_commands.ab2@1892> INCLUDE "internal_commands.ab2"
0003AE08 <internal_commands.ab2@1893> INCLUDE "internal_commands.ab2"
0003AE0C <internal_commands.ab2@1894> INCLUDE "internal_commands.ab2"
0003AE0D <internal_commands.ab2@1895> INCLUDE "internal_commands.ab2"
0003AE0E <internal_commands.ab2@1896> INCLUDE "internal_commands.ab2"
0003AE10 <internal_commands.ab2@1898> INCLUDE "internal_commands.ab2"
0003AE14 <internal_commands.ab2@1899> INCLUDE "internal_commands.ab2"
0003AE16 <internal_commands.ab2@1900> INCLUDE "internal_commands.ab2"
0003AE18 <internal_commands.ab2@1901> INCLUDE "internal_commands.ab2"
0003AE1C <internal_commands.ab2@1902> INCLUDE "internal_commands.ab2"
0003AE1E <internal_commands.ab2@1903> INCLUDE "internal_commands.ab2"
0003AE22 <internal_commands.ab2@1907> INCLUDE "internal_commands.ab2"
0003AE24 <internal_commands.ab2@1908> INCLUDE "internal_commands.ab2"
0003AE28 <internal_commands.ab2@1909> INCLUDE "internal_commands.ab2"
0003AE29 <internal_commands.ab2@1910> INCLUDE "internal_commands.ab2"
0003AE2A <internal_commands.ab2@1911> INCLUDE "internal_commands.ab2"
0003AE2C <internal_commands.ab2@1913> INCLUDE "internal_commands.ab2"
0003AE30 <internal_commands.ab2@1914> INCLUDE "internal_commands.ab2"
0003AE32 <internal_commands.ab2@1915> INCLUDE "internal_commands.ab2"
0003AE34 <internal_commands.ab2@1916> INCLUDE "internal_commands.ab2"
0003AE38 <internal_commands.ab2@1917> INCLUDE "internal_commands.ab2"
0003AE3A <internal_commands.ab2@1918> INCLUDE "internal_commands.ab2"
0003AE3E <internal_commands.ab2@1922> INCLUDE "internal_commands.ab2"
0003AE40 <internal_commands.ab2@1923> INCLUDE "internal_commands.ab2"
0003AE44 <internal_commands.ab2@1924> INCLUDE "internal_commands.ab2"
0003AE45 <internal_commands.ab2@1925> INCLUDE "internal_commands.ab2"
0003AE46 <internal_commands.ab2@1926> INCLUDE "internal_commands.ab2"
0003AE48 <internal_commands.ab2@1928> INCLUDE "internal_commands.ab2"
0003AE4C <internal_commands.ab2@1929> INCLUDE "internal_commands.ab2"
0003AE4E <internal_commands.ab2@1930> INCLUDE "internal_commands.ab2"
0003AE50 <internal_commands.ab2@1931> INCLUDE "internal_commands.ab2"
0003AE54 <internal_commands.ab2@1932> INCLUDE "internal_commands.ab2"
0003AE56 <internal_commands.ab2@1933> INCLUDE "internal_commands.ab2"
0003AE5A <internal_commands.ab2@1937> INCLUDE "internal_commands.ab2"
0003AE5C <internal_commands.ab2@1938> INCLUDE "internal_commands.ab2"
0003AE60 <internal_commands.ab2@1939> INCLUDE "internal_commands.ab2"
0003AE61 <internal_commands.ab2@1940> INCLUDE "internal_commands.ab2"
0003AE62 <internal_commands.ab2@1941> INCLUDE "internal_commands.ab2"
0003AE64 <internal_commands.ab2@1943> INCLUDE "internal_commands.ab2"
0003AE68 <internal_commands.ab2@1944> INCLUDE "internal_commands.ab2"
0003AE6A <internal_commands.ab2@1945> INCLUDE "internal_commands.ab2"
0003AE6C <internal_commands.ab2@1946> INCLUDE "internal_commands.ab2"
0003AE70 <internal_commands.ab2@1947> INCLUDE "internal_commands.ab2"
0003AE72 <internal_commands.ab2@1948> INCLUDE "internal_commands.ab2"
0003AE76 <internal_commands.ab2@1952> INCLUDE "internal_commands.ab2"
0003AE78 <internal_commands.ab2@1953> INCLUDE "internal_commands.ab2"
0003AE7C <internal_commands.ab2@1954> INCLUDE "internal_commands.ab2"
0003AE7D <internal_commands.ab2@1955> INCLUDE "internal_commands.ab2"
0003AE7E <internal_commands.ab2@1956> INCLUDE "internal_commands.ab2"
0003AE80 <internal_commands.ab2@1958> INCLUDE "internal_commands.ab2"
0003AE84 <internal_commands.ab2@1959> INCLUDE "internal_commands.ab2"
0003AE86 <internal_commands.ab2@1960> INCLUDE "internal_commands.ab2"
0003AE88 <internal_commands.ab2@1961> INCLUDE "internal_commands.ab2"
0003AE8C <internal_commands.ab2@1962> INCLUDE "internal_commands.ab2"
0003AE8E <internal_commands.ab2@1963> INCLUDE "internal_commands.ab2"
0003AE92 <internal_commands.ab2@1967> INCLUDE "internal_commands.ab2"
0003AE94 <internal_commands.ab2@1968> INCLUDE "internal_commands.ab2"
0003AE98 <internal_commands.ab2@1969> INCLUDE "internal_commands.ab2"
0003AE99 <internal_commands.ab2@1970> INCLUDE "internal_commands.ab2"
0003AE9A <internal_commands.ab2@1971> INCLUDE "internal_commands.ab2"
0003AE9C <internal_commands.ab2@1973> INCLUDE "internal_commands.ab2"
0003AEA0 <internal_commands.ab2@1974> INCLUDE "internal_commands.ab2"
0003AEA2 <internal_commands.ab2@1975> INCLUDE "internal_commands.ab2"
0003AEA4 <internal_commands.ab2@1976> INCLUDE "internal_commands.ab2"
0003AEA8 <internal_commands.ab2@1977> INCLUDE "internal_commands.ab2"
0003AEAA <internal_commands.ab2@1978> INCLUDE "internal_commands.ab2"
0003AEAE <internal_commands.ab2@1982> INCLUDE "internal_commands.ab2"
0003AEB0 <internal_commands.ab2@1983> INCLUDE "internal_commands.ab2"
0003AEB4 <internal_commands.ab2@1984> INCLUDE "internal_commands.ab2"
0003AEB5 <internal_commands.ab2@1985> INCLUDE "internal_commands.ab2"
0003AEB6 <internal_commands.ab2@1986> INCLUDE "internal_commands.ab2"
0003AEB8 <internal_commands.ab2@1988> INCLUDE "internal_commands.ab2"
0003AEBC <internal_commands.ab2@1989> INCLUDE "internal_commands.ab2"
0003AEBE <internal_commands.ab2@1990> INCLUDE "internal_commands.ab2"
0003AEC0 <internal_commands.ab2@1991> INCLUDE "internal_commands.ab2"
0003AEC4 <internal_commands.ab2@1992> INCLUDE "internal_commands.ab2"
0003AEC6 <internal_commands.ab2@1993> INCLUDE "internal_commands.ab2"
0003AECA <internal_commands.ab2@1997> INCLUDE "internal_commands.ab2"
0003AECC <internal_commands.ab2@1998> INCLUDE "internal_commands.ab2"
0003AECF <internal_commands.ab2@1999> INCLUDE "internal_commands.ab2"
0003AED0 <internal_commands.ab2@2000> INCLUDE "internal_commands.ab2"
0003AED2 <internal_commands.ab2@2003> INCLUDE "internal_commands.ab2"
0003AED6 <internal_commands.ab2@2004> INCLUDE "internal_commands.ab2"
0003AED8 <internal_commands.ab2@2005> INCLUDE "internal_commands.ab2"
0003AEDA <internal_commands.ab2@2006> INCLUDE "internal_commands.ab2"
0003AEDE <internal_commands.ab2@2007> INCLUDE "internal_commands.ab2"
0003AEE0 <internal_commands.ab2@2008> INCLUDE "internal_commands.ab2"
0003AEE4 <internal_commands.ab2@2012> INCLUDE "internal_commands.ab2"
0003AEE6 <internal_commands.ab2@2013> INCLUDE "internal_commands.ab2"
0003AEE9 <internal_commands.ab2@2014> INCLUDE "internal_commands.ab2"
0003AEEA <internal_commands.ab2@2015> INCLUDE "internal_commands.ab2"
0003AEEC <internal_commands.ab2@2018> INCLUDE "internal_commands.ab2"
0003AEF0 <internal_commands.ab2@2019> INCLUDE "internal_commands.ab2"
0003AEF2 <internal_commands.ab2@2020> INCLUDE "internal_commands.ab2"
0003AEF4 <internal_commands.ab2@2021> INCLUDE "internal_commands.ab2"
0003AEF8 <internal_commands.ab2@2022> INCLUDE "internal_commands.ab2"
0003AEFA <internal_commands.ab2@2023> INCLUDE "internal_commands.ab2"
0003AEFE <internal_commands.ab2@2027> INCLUDE "internal_commands.ab2"
0003AF00 <internal_commands.ab2@2028> INCLUDE "internal_commands.ab2"
0003AF05 <internal_commands.ab2@2029> INCLUDE "internal_commands.ab2"
0003AF06 <internal_commands.ab2@2030> INCLUDE "internal_commands.ab2"
0003AF08 <internal_commands.ab2@2033> INCLUDE "internal_commands.ab2"
0003AF0C <internal_commands.ab2@2034> INCLUDE "internal_commands.ab2"
0003AF0E <internal_commands.ab2@2035> INCLUDE "internal_commands.ab2"
0003AF10 <internal_commands.ab2@2036> INCLUDE "internal_commands.ab2"
0003AF14 <internal_commands.ab2@2037> INCLUDE "internal_commands.ab2"
0003AF16 <internal_commands.ab2@2038> INCLUDE "internal_commands.ab2"
0003AF1A <internal_commands.ab2@2042> INCLUDE "internal_commands.ab2"
0003AF1C <internal_commands.ab2@2043> INCLUDE "internal_commands.ab2"
0003AF20 <internal_commands.ab2@2044> INCLUDE "internal_commands.ab2"
0003AF21 <internal_commands.ab2@2045> INCLUDE "internal_commands.ab2"
0003AF22 <internal_commands.ab2@2046> INCLUDE "internal_commands.ab2"
0003AF24 <internal_commands.ab2@2048> INCLUDE "internal_commands.ab2"
0003AF28 <internal_commands.ab2@2049> INCLUDE "internal_commands.ab2"
0003AF2A <internal_commands.ab2@2050> INCLUDE "internal_commands.ab2"
0003AF2C <internal_commands.ab2@2051> INCLUDE "internal_commands.ab2"
0003AF30 <internal_commands.ab2@2052> INCLUDE "internal_commands.ab2"
0003AF32 <internal_commands.ab2@2053> INCLUDE "internal_commands.ab2"
0003AF36 <internal_commands.ab2@2057> INCLUDE "internal_commands.ab2"
0003AF38 <internal_commands.ab2@2058> INCLUDE "internal_commands.ab2"
0003AF3D <internal_commands.ab2@2059> INCLUDE "internal_commands.ab2"
0003AF3E <internal_commands.ab2@2060> INCLUDE "internal_commands.ab2"
0003AF40 <internal_commands.ab2@2063> INCLUDE "internal_commands.ab2"
0003AF44 <internal_commands.ab2@2064> INCLUDE "internal_commands.ab2"
0003AF46 <internal_commands.ab2@2065> INCLUDE "internal_commands.ab2"
0003AF48 <internal_commands.ab2@2066> INCLUDE "internal_commands.ab2"
0003AF4C <internal_commands.ab2@2067> INCLUDE "internal_commands.ab2"
0003AF4E <internal_commands.ab2@2068> INCLUDE "internal_commands.ab2"
0003AF52 <internal_commands.ab2@2072> INCLUDE "internal_commands.ab2"
0003AF54 <internal_commands.ab2@2073> INCLUDE "internal_commands.ab2"
0003AF59 <internal_commands.ab2@2074> INCLUDE "internal_commands.ab2"
0003AF5A <internal_commands.ab2@2075> INCLUDE "internal_commands.ab2"
0003AF5C <internal_commands.ab2@2078> INCLUDE "internal_commands.ab2"
0003AF60 <internal_commands.ab2@2079> INCLUDE "internal_commands.ab2"
0003AF62 <internal_commands.ab2@2080> INCLUDE "internal_commands.ab2"
0003AF64 <internal_commands.ab2@2081> INCLUDE "internal_commands.ab2"
0003AF68 <internal_commands.ab2@2082> INCLUDE "internal_commands.ab2"
0003AF6A <internal_commands.ab2@2083> INCLUDE "internal_commands.ab2"
0003AF6E <internal_commands.ab2@2087> INCLUDE "internal_commands.ab2"
0003AF70 <internal_commands.ab2@2088> INCLUDE "internal_commands.ab2"
0003AF75 <internal_commands.ab2@2089> INCLUDE "internal_commands.ab2"
0003AF76 <internal_commands.ab2@2090> INCLUDE "internal_commands.ab2"
0003AF78 <internal_commands.ab2@2093> INCLUDE "internal_commands.ab2"
0003AF7C <internal_commands.ab2@2094> INCLUDE "internal_commands.ab2"
0003AF7E <internal_commands.ab2@2095> INCLUDE "internal_commands.ab2"
0003AF80 <internal_commands.ab2@2096> INCLUDE "internal_commands.ab2"
0003AF84 <internal_commands.ab2@2097> INCLUDE "internal_commands.ab2"
0003AF86 <internal_commands.ab2@2098> INCLUDE "internal_commands.ab2"
0003AF8A <internal_commands.ab2@2102> INCLUDE "internal_commands.ab2"
0003AF8C <internal_commands.ab2@2103> INCLUDE "internal_commands.ab2"
0003AF91 <internal_commands.ab2@2104> INCLUDE "internal_commands.ab2"
0003AF92 <internal_commands.ab2@2105> INCLUDE "internal_commands.ab2"
0003AF94 <internal_commands.ab2@2108> INCLUDE "internal_commands.ab2"
0003AF98 <internal_commands.ab2@2109> INCLUDE "internal_commands.ab2"
0003AF9A <internal_commands.ab2@2110> INCLUDE "internal_commands.ab2"
0003AF9C <internal_commands.ab2@2111> INCLUDE "internal_commands.ab2"
0003AFA0 <internal_commands.ab2@2112> INCLUDE "internal_commands.ab2"
0003AFA2 <internal_commands.ab2@2113> INCLUDE "internal_commands.ab2"
0003AFA6 <internal_commands.ab2@2117> INCLUDE "internal_commands.ab2"
0003AFA8 <internal_commands.ab2@2118> INCLUDE "internal_commands.ab2"
0003AFAD <internal_commands.ab2@2119> INCLUDE "internal_commands.ab2"
0003AFAE <internal_commands.ab2@2120> INCLUDE "internal_commands.ab2"
0003AFB0 <internal_commands.ab2@2123> INCLUDE "internal_commands.ab2"
0003AFB4 <internal_commands.ab2@2124> INCLUDE "internal_commands.ab2"
0003AFB6 <internal_commands.ab2@2125> INCLUDE "internal_commands.ab2"
0003AFB8 <internal_commands.ab2@2126> INCLUDE "internal_commands.ab2"
0003AFBC <internal_commands.ab2@2127> INCLUDE "internal_commands.ab2"
0003AFBE <internal_commands.ab2@2128> INCLUDE "internal_commands.ab2"
0003AFC2 <internal_commands.ab2@2132> INCLUDE "internal_commands.ab2"
0003AFC4 <internal_commands.ab2@2133> INCLUDE "internal_commands.ab2"
0003AFC8 <internal_commands.ab2@2134> INCLUDE "internal_commands.ab2"
0003AFC9 <internal_commands.ab2@2135> INCLUDE "internal_commands.ab2"
0003AFCA <internal_commands.ab2@2136> INCLUDE "internal_commands.ab2"
0003AFCC <internal_commands.ab2@2138> INCLUDE "internal_commands.ab2"
0003AFD0 <internal_commands.ab2@2139> INCLUDE "internal_commands.ab2"
0003AFD2 <internal_commands.ab2@2140> INCLUDE "internal_commands.ab2"
0003AFD4 <internal_commands.ab2@2141> INCLUDE "internal_commands.ab2"
0003AFD8 <internal_commands.ab2@2142> INCLUDE "internal_commands.ab2"
0003AFDA <internal_commands.ab2@2143> INCLUDE "internal_commands.ab2"
0003AFDE <internal_commands.ab2@2147> INCLUDE "internal_commands.ab2"
0003AFE0 <internal_commands.ab2@2148> INCLUDE "internal_commands.ab2"
0003AFE5 <internal_commands.ab2@2149> INCLUDE "internal_commands.ab2"
0003AFE6 <internal_commands.ab2@2150> INCLUDE "internal_commands.ab2"
0003AFE8 <internal_commands.ab2@2153> INCLUDE "internal_commands.ab2"
0003AFEC <internal_commands.ab2@2154> INCLUDE "internal_commands.ab2"
0003AFEE <internal_commands.ab2@2155> INCLUDE "internal_commands.ab2"
0003AFF0 <internal_commands.ab2@2156> INCLUDE "internal_commands.ab2"
0003AFF4 <internal_commands.ab2@2157> INCLUDE "internal_commands.ab2"
0003AFF6 <internal_commands.ab2@2158> INCLUDE "internal_commands.ab2"
0003AFFA <internal_commands.ab2@2162> INCLUDE "internal_commands.ab2"
0003AFFC <internal_commands.ab2@2163> INCLUDE "internal_commands.ab2"
0003B002 <internal_commands.ab2@2164> INCLUDE "internal_commands.ab2"
0003B003 <internal_commands.ab2@2165> INCLUDE "internal_commands.ab2"
0003B004 <internal_commands.ab2@2166> INCLUDE "internal_commands.ab2"
0003B006 <internal_commands.ab2@2168> INCLUDE "internal_commands.ab2"
0003B00A <internal_commands.ab2@2169> INCLUDE "internal_commands.ab2"
0003B00C <internal_commands.ab2@2170> INCLUDE "internal_commands.ab2"
0003B00E <internal_commands.ab2@2171> INCLUDE "internal_commands.ab2"
0003B012 <internal_commands.ab2@2172> INCLUDE "internal_commands.ab2"
0003B014 <internal_commands.ab2@2173> INCLUDE "internal_commands.ab2"
0003B018 <internal_commands.ab2@2177> INCLUDE "internal_commands.ab2"
0003B01A <internal_commands.ab2@2178> INCLUDE "internal_commands.ab2"
0003B01E <internal_commands.ab2@2179> INCLUDE "internal_commands.ab2"
0003B01F <internal_commands.ab2@2180> INCLUDE "internal_commands.ab2"
0003B020 <internal_commands.ab2@2181> INCLUDE "internal_commands.ab2"
0003B022 <internal_commands.ab2@2183> INCLUDE "internal_commands.ab2"
0003B026 <internal_commands.ab2@2184> INCLUDE "internal_commands.ab2"
0003B028 <internal_commands.ab2@2185> INCLUDE "internal_commands.ab2"
0003B02A <internal_commands.ab2@2186> INCLUDE "internal_commands.ab2"
0003B02E <internal_commands.ab2@2187> INCLUDE "internal_commands.ab2"
0003B030 <internal_commands.ab2@2188> INCLUDE "internal_commands.ab2"
0003B034 <internal_commands.ab2@2192> INCLUDE "internal_commands.ab2"
0003B036 <internal_commands.ab2@2193> INCLUDE "internal_commands.ab2"
0003B03B <internal_commands.ab2@2194> INCLUDE "internal_commands.ab2"
0003B03C <internal_commands.ab2@2195> INCLUDE "internal_commands.ab2"
0003B03E <internal_commands.ab2@2198> INCLUDE "internal_commands.ab2"
0003B042 <internal_commands.ab2@2199> INCLUDE "internal_commands.ab2"
0003B044 <internal_commands.ab2@2200> INCLUDE "internal_commands.ab2"
0003B046 <internal_commands.ab2@2201> INCLUDE "internal_commands.ab2"
0003B04A <internal_commands.ab2@2202> INCLUDE "internal_commands.ab2"
0003B04C <internal_commands.ab2@2203> INCLUDE "internal_commands.ab2"
0003B050 <internal_commands.ab2@2208> INCLUDE "internal_commands.ab2"
0003B052 <internal_commands.ab2@2209> INCLUDE "internal_commands.ab2"
0003B059 <internal_commands.ab2@2210> INCLUDE "internal_commands.ab2"
0003B05A <internal_commands.ab2@2211> INCLUDE "internal_commands.ab2"
0003B05C <internal_commands.ab2@2230> INCLUDE "internal_commands.ab2"
0003B05E <internal_commands.ab2@2231> INCLUDE "internal_commands.ab2"
0003B060 <internal_commands.ab2@2235> INCLUDE "internal_commands.ab2"
0003B062 <internal_commands.ab2@2236> INCLUDE "internal_commands.ab2"
0003B064 <internal_commands.ab2@2240> INCLUDE "internal_commands.ab2"
0003B066 <internal_commands.ab2@2241> INCLUDE "internal_commands.ab2"
0003B068 <internal_commands.ab2@2245> INCLUDE "internal_commands.ab2"
0003B06A <internal_commands.ab2@2246> INCLUDE "internal_commands.ab2"
0003B06C <internal_commands.ab2@2251> INCLUDE "internal_commands.ab2"
0003B070 <internal_commands.ab2@2252> INCLUDE "internal_commands.ab2"
0003B072 <internal_commands.ab2@2253> INCLUDE "internal_commands.ab2"
0003B074 <internal_commands.ab2@2254> INCLUDE "internal_commands.ab2"
0003B076 <internal_commands.ab2@2255> INCLUDE "internal_commands.ab2"
0003B078 <internal_commands.ab2@2256> INCLUDE "internal_commands.ab2"
0003B07C <internal_commands.ab2@2257> INCLUDE "internal_commands.ab2"
0003B082 <internal_commands.ab2@2260> INCLUDE "internal_commands.ab2"
0003B086 <internal_commands.ab2@2261> INCLUDE "internal_commands.ab2"
0003B088 <internal_commands.ab2@2262> INCLUDE "internal_commands.ab2"
0003B08A <internal_commands.ab2@2263> INCLUDE "internal_commands.ab2"
0003B08C <internal_commands.ab2@2264> INCLUDE "internal_commands.ab2"
0003B08E <internal_commands.ab2@2265> INCLUDE "internal_commands.ab2"
0003B090 <internal_commands.ab2@2266> INCLUDE "internal_commands.ab2"
0003B092 <internal_commands.ab2@2273> INCLUDE "internal_commands.ab2"
0003B096 <internal_commands.ab2@2274> INCLUDE "internal_commands.ab2"
0003B09A <internal_commands.ab2@2275> INCLUDE "internal_commands.ab2"
0003B09E <internal_commands.ab2@2276> INCLUDE "internal_commands.ab2"
0003B0A2 <internal_commands.ab2@2277> INCLUDE "internal_commands.ab2"
0003B0A6 <internal_commands.ab2@2278> INCLUDE "internal_commands.ab2"
0003B0A8 <internal_commands.ab2@2281> INCLUDE "internal_commands.ab2"
0003B0AA <internal_commands.ab2@2282> INCLUDE "internal_commands.ab2"
0003B0AE <internal_commands.ab2@2283> INCLUDE "internal_commands.ab2"
0003B0B2 <internal_commands.ab2@2284> INCLUDE "internal_commands.ab2"
0003B0B6 <internal_commands.ab2@2285> INCLUDE "internal_commands.ab2"
0003B0BA <internal_commands.ab2@2286> INCLUDE "internal_commands.ab2"
0003B0BC <internal_commands.ab2@2289> INCLUDE "internal_commands.ab2"
0003B0BE <internal_commands.ab2@2290> INCLUDE "internal_commands.ab2"
0003B0C2 <internal_commands.ab2@2291> INCLUDE "internal_commands.ab2"
0003B0C6 <internal_commands.ab2@2292> INCLUDE "internal_commands.ab2"
0003B0CA <internal_commands.ab2@2293> INCLUDE "internal_commands.ab2"
0003B0CE <internal_commands.ab2@2294> INCLUDE "internal_commands.ab2"
0003B0D0 <internal_commands.ab2@2295> INCLUDE "internal_commands.ab2"
0003B0D2 <internal_commands.ab2@2298> INCLUDE "internal_commands.ab2"
0003B0D4 <internal_commands.ab2@2299> INCLUDE "internal_commands.ab2"
0003B0D8 <internal_commands.ab2@2300> INCLUDE "internal_commands.ab2"
0003B0DA <internal_commands.ab2@2302> INCLUDE "internal_commands.ab2"
0003B0DE <internal_commands.ab2@2303> INCLUDE "internal_commands.ab2"
0003B0E0 <internal_commands.ab2@2307> INCLUDE "internal_commands.ab2"
0003B0E4 <internal_commands.ab2@2308> INCLUDE "internal_commands.ab2"
0003B0E6 <internal_commands.ab2@2309> INCLUDE "internal_commands.ab2"
0003B0EA <internal_commands.ab2@2310> INCLUDE "internal_commands.ab2"
0003B0EE <internal_commands.ab2@2311> INCLUDE "internal_commands.ab2"
0003B0F2 <internal_commands.ab2@2312> INCLUDE "internal_commands.ab2"
0003B0F6 <internal_commands.ab2@2316> INCLUDE "internal_commands.ab2"
0003B0FA <internal_commands.ab2@2317> INCLUDE "internal_commands.ab2"
0003B0FE <internal_commands.ab2@2319> INCLUDE "internal_commands.ab2"
0003B102 <internal_commands.ab2@2320> INCLUDE "internal_commands.ab2"
0003B106 <internal_commands.ab2@2321> INCLUDE "internal_commands.ab2"
0003B10A <internal_commands.ab2@2322> INCLUDE "internal_commands.ab2"
0003B10E <internal_commands.ab2@2323> INCLUDE "internal_commands.ab2"
0003B112 <internal_commands.ab2@2324> INCLUDE "internal_commands.ab2"
0003B116 <internal_commands.ab2@2325> INCLUDE "internal_commands.ab2"
0003B11A <internal_commands.ab2@2326> INCLUDE "internal_commands.ab2"
0003B11E <internal_commands.ab2@2328> INCLUDE "internal_commands.ab2"
0003B122 <internal_commands.ab2@2331> INCLUDE "internal_commands.ab2"
0003B126 <internal_commands.ab2@2332> INCLUDE "internal_commands.ab2"
0003B12A <internal_commands.ab2@2334> INCLUDE "internal_commands.ab2"
0003B12E <internal_commands.ab2@2335> INCLUDE "internal_commands.ab2"
0003B132 <internal_commands.ab2@2336> INCLUDE "internal_commands.ab2"
0003B136 <internal_commands.ab2@2337> INCLUDE "internal_commands.ab2"
0003B13A <internal_commands.ab2@2338> INCLUDE "internal_commands.ab2"
0003B13E <internal_commands.ab2@2339> INCLUDE "internal_commands.ab2"
0003B142 <internal_commands.ab2@2340> INCLUDE "internal_commands.ab2"
0003B146 <internal_commands.ab2@2341> INCLUDE "internal_commands.ab2"
0003B14A <internal_commands.ab2@2343> INCLUDE "internal_commands.ab2"
0003B14E <internal_commands.ab2@2346> INCLUDE "internal_commands.ab2"
0003B150 <internal_commands.ab2@2347> INCLUDE "internal_commands.ab2"
0003B154 <internal_commands.ab2@2348> INCLUDE "internal_commands.ab2"
0003B158 <internal_commands.ab2@2349> INCLUDE "internal_commands.ab2"
0003B15C <internal_commands.ab2@2350> INCLUDE "internal_commands.ab2"
0003B160 <internal_commands.ab2@2351> INCLUDE "internal_commands.ab2"
0003B164 <internal_commands.ab2@2352> INCLUDE "internal_commands.ab2"
0003B168 <internal_commands.ab2@2353> INCLUDE "internal_commands.ab2"
0003B16C <internal_commands.ab2@2356> INCLUDE "internal_commands.ab2"
0003B170 <internal_commands.ab2@2357> INCLUDE "internal_commands.ab2"
0003B174 <internal_commands.ab2@2358> INCLUDE "internal_commands.ab2"
0003B176 <internal_commands.ab2@2359> INCLUDE "internal_commands.ab2"
0003B178 <internal_commands.ab2@2362> INCLUDE "internal_commands.ab2"
0003B17A <internal_commands.ab2@2363> INCLUDE "internal_commands.ab2"
0003B17C <internal_commands.ab2@2364> INCLUDE "internal_commands.ab2"
0003B17E <internal_commands.ab2@2365> INCLUDE "internal_commands.ab2"
0003B182 <internal_commands.ab2@2366> INCLUDE "internal_commands.ab2"
0003B186 <internal_commands.ab2@2369> INCLUDE "internal_commands.ab2"
0003B18A <internal_commands.ab2@2370> INCLUDE "internal_commands.ab2"
0003B18E <internal_commands.ab2@2371> INCLUDE "internal_commands.ab2"
0003B190 <internal_commands.ab2@2372> INCLUDE "internal_commands.ab2"
0003B194 <internal_commands.ab2@2373> INCLUDE "internal_commands.ab2"
0003B198 <internal_commands.ab2@2376> INCLUDE "internal_commands.ab2"
0003B19C <internal_commands.ab2@2379> INCLUDE "internal_commands.ab2"
0003B1A0 <internal_commands.ab2@2380> INCLUDE "internal_commands.ab2"
0003B1A2 <internal_commands.ab2@2381> INCLUDE "internal_commands.ab2"
0003B1A4 <internal_commands.ab2@2382> INCLUDE "internal_commands.ab2"
0003B1A8 <internal_commands.ab2@2383> INCLUDE "internal_commands.ab2"
0003B1AC <internal_commands.ab2@2386> INCLUDE "internal_commands.ab2"
0003B1B0 <internal_commands.ab2@2387> INCLUDE "internal_commands.ab2"
0003B1B4 <internal_commands.ab2@2390> INCLUDE "internal_commands.ab2"
0003B1B8 <internal_commands.ab2@2393> INCLUDE "internal_commands.ab2"
0003B1BC <internal_commands.ab2@2394> INCLUDE "internal_commands.ab2"
0003B1BE <internal_commands.ab2@2395> INCLUDE "internal_commands.ab2"
0003B1C0 <internal_commands.ab2@2396> INCLUDE "internal_commands.ab2"
0003B1C4 <internal_commands.ab2@2397> INCLUDE "internal_commands.ab2"
0003B1C8 <internal_commands.ab2@2400> INCLUDE "internal_commands.ab2"
0003B1CC <internal_commands.ab2@2401> INCLUDE "internal_commands.ab2"
0003B1CE <internal_commands.ab2@2405> INCLUDE "internal_commands.ab2"
0003B1D2 <internal_commands.ab2@2406> INCLUDE "internal_commands.ab2"
0003B1D6 <internal_commands.ab2@2407> INCLUDE "internal_commands.ab2"
0003B1D8 <internal_commands.ab2@2408> INCLUDE "internal_commands.ab2"
0003B1DC <internal_commands.ab2@2409> INCLUDE "internal_commands.ab2"
0003B1E0 <internal_commands.ab2@2410> INCLUDE "internal_commands.ab2"
0003B1E2 <internal_commands.ab2@2413> INCLUDE "internal_commands.ab2"
0003B1E6 <internal_commands.ab2@2414> INCLUDE "internal_commands.ab2"
0003B1EA <internal_commands.ab2@2415> INCLUDE "internal_commands.ab2"
0003B1EE <internal_commands.ab2@2416> INCLUDE "internal_commands.ab2"
0003B1F2 <internal_commands.ab2@2419> INCLUDE "internal_commands.ab2"
0003B1F6 <internal_commands.ab2@2420> INCLUDE "internal_commands.ab2"
0003B1F8 <internal_commands.ab2@2424> INCLUDE "internal_commands.ab2"
0003B1FC <internal_commands.ab2@2425> INCLUDE "internal_commands.ab2"
0003B1FE <internal_commands.ab2@2426> INCLUDE "internal_commands.ab2"
0003B200 <internal_commands.ab2@2427> INCLUDE "internal_commands.ab2"
0003B202 <internal_commands.ab2@2428> INCLUDE "internal_commands.ab2"
0003B206 <internal_commands.ab2@2429> INCLUDE "internal_commands.ab2"
0003B20A <internal_commands.ab2@2432> INCLUDE "internal_commands.ab2"
0003B20E <internal_commands.ab2@2433> INCLUDE "internal_commands.ab2"
0003B212 <internal_commands.ab2@2434> INCLUDE "internal_commands.ab2"
0003B216 <internal_commands.ab2@2435> INCLUDE "internal_commands.ab2"
0003B21A <internal_commands.ab2@2439> INCLUDE "internal_commands.ab2"
0003B21E <internal_commands.ab2@2440> INCLUDE "internal_commands.ab2"
0003B222 <internal_commands.ab2@2444> INCLUDE "internal_commands.ab2"
0003B226 <internal_commands.ab2@2445> INCLUDE "internal_commands.ab2"
0003B22A <internal_commands.ab2@2449> INCLUDE "internal_commands.ab2"
0003B22E <internal_commands.ab2@2450> INCLUDE "internal_commands.ab2"
0003B232 <internal_commands.ab2@2454> INCLUDE "internal_commands.ab2"
0003B234 <internal_commands.ab2@2456> INCLUDE "internal_commands.ab2"
0003B238 <internal_commands.ab2@2457> INCLUDE "internal_commands.ab2"
0003B23C <internal_commands.ab2@2458> INCLUDE "internal_commands.ab2"
0003B23E <internal_commands.ab2@2459> INCLUDE "internal_commands.ab2"
0003B240 <internal_commands.ab2@2460> INCLUDE "internal_commands.ab2"
0003B242 <internal_commands.ab2@2461> INCLUDE "internal_commands.ab2"
0003B246 <internal_commands.ab2@2462> INCLUDE "internal_commands.ab2"
0003B24A <internal_commands.ab2@2463> INCLUDE "internal_commands.ab2"
0003B24C <internal_commands.ab2@2464> INCLUDE "internal_commands.ab2"
0003B250 <internal_commands.ab2@2465> INCLUDE "internal_commands.ab2"
0003B252 <internal_commands.ab2@2466> INCLUDE "internal_commands.ab2"
0003B254 <internal_commands.ab2@2467> INCLUDE "internal_commands.ab2"
0003B256 <internal_commands.ab2@2468> INCLUDE "internal_commands.ab2"
0003B25A <internal_commands.ab2@2469> INCLUDE "internal_commands.ab2"
0003B25E <internal_commands.ab2@2470> INCLUDE "internal_commands.ab2"
0003B260 <internal_commands.ab2@2473> INCLUDE "internal_commands.ab2"
0003B262 <internal_commands.ab2@2474> INCLUDE "internal_commands.ab2"
0003B266 <internal_commands.ab2@2475> INCLUDE "internal_commands.ab2"
0003B26A <internal_commands.ab2@2476> INCLUDE "internal_commands.ab2"
0003B26E <internal_commands.ab2@2477> INCLUDE "internal_commands.ab2"
0003B272 <internal_commands.ab2@2478> INCLUDE "internal_commands.ab2"
0003B274 <internal_commands.ab2@2479> INCLUDE "internal_commands.ab2"
0003B278 <internal_commands.ab2@2480> INCLUDE "internal_commands.ab2"
0003B27C <internal_commands.ab2@2481> INCLUDE "internal_commands.ab2"
0003B280 <internal_commands.ab2@2482> INCLUDE "internal_commands.ab2"
0003B282 <internal_commands.ab2@2483> INCLUDE "internal_commands.ab2"
0003B284 <internal_commands.ab2@2484> INCLUDE "internal_commands.ab2"
0003B286 <internal_commands.ab2@2485> INCLUDE "internal_commands.ab2"
0003B288 <internal_commands.ab2@2488> INCLUDE "internal_commands.ab2"
0003B28A <internal_commands.ab2@2489> INCLUDE "internal_commands.ab2"
0003B28C <internal_commands.ab2@2490> INCLUDE "internal_commands.ab2"
0003B290 <internal_commands.ab2@2491> INCLUDE "internal_commands.ab2"
0003B294 <internal_commands.ab2@2492> INCLUDE "internal_commands.ab2"
0003B296 <internal_commands.ab2@2496> INCLUDE "internal_commands.ab2"
0003B29A <internal_commands.ab2@2497> INCLUDE "internal_commands.ab2"
0003B29C <internal_commands.ab2@2498> INCLUDE "internal_commands.ab2"
0003B2A0 <internal_commands.ab2@2499> INCLUDE "internal_commands.ab2"
0003B2A4 <internal_commands.ab2@2500> INCLUDE "internal_commands.ab2"
0003B2A6 <internal_commands.ab2@2501> INCLUDE "internal_commands.ab2"
0003B2A8 <internal_commands.ab2@2504> INCLUDE "internal_commands.ab2"
0003B2AA <internal_commands.ab2@2508> INCLUDE "internal_commands.ab2"
0003B2AE <internal_commands.ab2@2509> INCLUDE "internal_commands.ab2"
0003B2B0 <internal_commands.ab2@2510> INCLUDE "internal_commands.ab2"
0003B2B4 <internal_commands.ab2@2511> INCLUDE "internal_commands.ab2"
0003B2B8 <internal_commands.ab2@2512> INCLUDE "internal_commands.ab2"
0003B2BC <internal_commands.ab2@2513> INCLUDE "internal_commands.ab2"
0003B2BE <internal_commands.ab2@2516> INCLUDE "internal_commands.ab2"
0003B2C2 <internal_commands.ab2@2520> INCLUDE "internal_commands.ab2"
0003B2C6 <internal_commands.ab2@2521> INCLUDE "internal_commands.ab2"
0003B2C8 <internal_commands.ab2@2522> INCLUDE "internal_commands.ab2"
0003B2CC <internal_commands.ab2@2523> INCLUDE "internal_commands.ab2"
0003B2D0 <internal_commands.ab2@2524> INCLUDE "internal_commands.ab2"
0003B2D4 <internal_commands.ab2@2527> INCLUDE "internal_commands.ab2"
0003B2D8 <internal_commands.ab2@2528> INCLUDE "internal_commands.ab2"
0003B2DC <internal_commands.ab2@2529> INCLUDE "internal_commands.ab2"
0003B2E0 <internal_commands.ab2@2530> INCLUDE "internal_commands.ab2"
0003B2E4 <internal_commands.ab2@2531> INCLUDE "internal_commands.ab2"
0003B2E8 <internal_commands.ab2@2538> INCLUDE "internal_commands.ab2"
0003B2EA <internal_commands.ab2@2539> INCLUDE "internal_commands.ab2"
0003B2EF <internal_commands.ab2@2540> INCLUDE "internal_commands.ab2"
0003B2F0 <internal_commands.ab2@2541> INCLUDE "internal_commands.ab2"
0003B2F4 <internal_commands.ab2@2545> INCLUDE "internal_commands.ab2"
0003B2F6 <internal_commands.ab2@2546> INCLUDE "internal_commands.ab2"
0003B2FD <internal_commands.ab2@2547> INCLUDE "internal_commands.ab2"
0003B2FE <internal_commands.ab2@2548> INCLUDE "internal_commands.ab2"
0003B302 <internal_commands.ab2@2552> INCLUDE "internal_commands.ab2"
0003B304 <internal_commands.ab2@2553> INCLUDE "internal_commands.ab2"
0003B30B <internal_commands.ab2@2554> INCLUDE "internal_commands.ab2"
0003B30C <internal_commands.ab2@2555> INCLUDE "internal_commands.ab2"
0003B310 <internal_commands.ab2@2559> INCLUDE "internal_commands.ab2"
0003B312 <internal_commands.ab2@2560> INCLUDE "internal_commands.ab2"
0003B31A <internal_commands.ab2@2561> INCLUDE "internal_commands.ab2"
0003B31B <internal_commands.ab2@2562> INCLUDE "internal_commands.ab2"
0003B31C <internal_commands.ab2@2563> INCLUDE "internal_commands.ab2"
0003B320 <internal_commands.ab2@2566> INCLUDE "internal_commands.ab2"
0003B322 <internal_commands.ab2@2567> INCLUDE "internal_commands.ab2"
0003B327 <internal_commands.ab2@2568> INCLUDE "internal_commands.ab2"
0003B33B <internal_commands.ab2@2569> INCLUDE "internal_commands.ab2"
0003B33C <internal_commands.ab2@2570> INCLUDE "internal_commands.ab2"
0003B340 <internal_commands.ab2@2573> INCLUDE "internal_commands.ab2"
0003B342 <internal_commands.ab2@2574> INCLUDE "internal_commands.ab2"
0003B346 <internal_commands.ab2@2575> INCLUDE "internal_commands.ab2"
0003B347 <internal_commands.ab2@2576> INCLUDE "internal_commands.ab2"
0003B348 <internal_commands.ab2@2577> INCLUDE "internal_commands.ab2"
0003B34C <internal_commands.ab2@2580> INCLUDE "internal_commands.ab2"
0003B34E <internal_commands.ab2@2581> INCLUDE "internal_commands.ab2"
0003B351 <internal_commands.ab2@2582> INCLUDE "internal_commands.ab2"
0003B352 <internal_commands.ab2@2583> INCLUDE "internal_commands.ab2"
0003B356 <internal_commands.ab2@2587> INCLUDE "internal_commands.ab2"
0003B358 <internal_commands.ab2@2588> INCLUDE "internal_commands.ab2"
0003B35F <internal_commands.ab2@2589> INCLUDE "internal_commands.ab2"
0003B360 <internal_commands.ab2@2590> INCLUDE "internal_commands.ab2"
0003B364 <internal_commands.ab2@2594> INCLUDE "internal_commands.ab2"
0003B366 <internal_commands.ab2@2595> INCLUDE "internal_commands.ab2"
0003B36C <internal_commands.ab2@2596> INCLUDE "internal_commands.ab2"
0003B379 <internal_commands.ab2@2597> INCLUDE "internal_commands.ab2"
0003B37A <internal_commands.ab2@2598> INCLUDE "internal_commands.ab2"
0003B37E <internal_commands.ab2@2601> INCLUDE "internal_commands.ab2"
0003B380 <internal_commands.ab2@2602> INCLUDE "internal_commands.ab2"
0003B387 <internal_commands.ab2@2603> INCLUDE "internal_commands.ab2"
0003B39F <internal_commands.ab2@2604> INCLUDE "internal_commands.ab2"
0003B3A0 <internal_commands.ab2@2605> INCLUDE "internal_commands.ab2"
0003B3A4 <internal_commands.ab2@2608> INCLUDE "internal_commands.ab2"
0003B3A6 <internal_commands.ab2@2609> INCLUDE "internal_commands.ab2"
0003B3AA <internal_commands.ab2@2610> INCLUDE "internal_commands.ab2"
0003B3CD <internal_commands.ab2@2611> INCLUDE "internal_commands.ab2"
0003B3CE <internal_commands.ab2@2612> INCLUDE "internal_commands.ab2"
0003B3D2 <internal_commands.ab2@2615> INCLUDE "internal_commands.ab2"
0003B3D4 <internal_commands.ab2@2616> INCLUDE "internal_commands.ab2"
0003B3DB <internal_commands.ab2@2617> INCLUDE "internal_commands.ab2"
0003B3E6 <internal_commands.ab2@2618> INCLUDE "internal_commands.ab2"
0003B3EA <internal_commands.ab2@2622> INCLUDE "internal_commands.ab2"
0003B3EC <internal_commands.ab2@2623> INCLUDE "internal_commands.ab2"
0003B3F2 <internal_commands.ab2@2624> INCLUDE "internal_commands.ab2"
0003B3F3 <internal_commands.ab2@2625> INCLUDE "internal_commands.ab2"
0003B3F4 <internal_commands.ab2@2626> INCLUDE "internal_commands.ab2"
0003B3F8 <internal_commands.ab2@2629> INCLUDE "internal_commands.ab2"
0003B3FA <internal_commands.ab2@2630> INCLUDE "internal_commands.ab2"
0003B3FF <internal_commands.ab2@2631> INCLUDE "internal_commands.ab2"
0003B400 <internal_commands.ab2@2632> INCLUDE "internal_commands.ab2"
0003B404 <internal_commands.ab2@2636> INCLUDE "internal_commands.ab2"
0003B406 <internal_commands.ab2@2637> INCLUDE "internal_commands.ab2"
0003B40D <internal_commands.ab2@2638> INCLUDE "internal_commands.ab2"
0003B41F <internal_commands.ab2@2639> INCLUDE "internal_commands.ab2"
0003B420 <internal_commands.ab2@2640> INCLUDE "internal_commands.ab2"
0003B424 <internal_commands.ab2@2643> INCLUDE "internal_commands.ab2"
0003B426 <internal_commands.ab2@2644> INCLUDE "internal_commands.ab2"
0003B430 <internal_commands.ab2@2645> INCLUDE "internal_commands.ab2"
0003B431 <internal_commands.ab2@2646> INCLUDE "internal_commands.ab2"
0003B432 <internal_commands.ab2@2647> INCLUDE "internal_commands.ab2"
0003B436 <internal_commands.ab2@2650> INCLUDE "internal_commands.ab2"
0003B438 <internal_commands.ab2@2651> INCLUDE "internal_commands.ab2"
0003B440 <internal_commands.ab2@2652> INCLUDE "internal_commands.ab2"
0003B44D <internal_commands.ab2@2653> INCLUDE "internal_commands.ab2"
0003B44E <internal_commands.ab2@2654> INCLUDE "internal_commands.ab2"
0003B452 <internal_commands.ab2@2657> INCLUDE "internal_commands.ab2"
0003B454 <internal_commands.ab2@2658> INCLUDE "internal_commands.ab2"
0003B457 <internal_commands.ab2@2659> INCLUDE "internal_commands.ab2"
0003B492 <internal_commands.ab2@2660> INCLUDE "internal_commands.ab2"
0003B496 <internal_commands.ab2@2664> INCLUDE "internal_commands.ab2"
0003B498 <internal_commands.ab2@2665> INCLUDE "internal_commands.ab2"
0003B49C <internal_commands.ab2@2666> INCLUDE "internal_commands.ab2"
0003B49D <internal_commands.ab2@2667> INCLUDE "internal_commands.ab2"
0003B49E <internal_commands.ab2@2668> INCLUDE "internal_commands.ab2"
0003B4A2 <internal_commands.ab2@2671> INCLUDE "internal_commands.ab2"
0003B4A4 <internal_commands.ab2@2672> INCLUDE "internal_commands.ab2"
0003B4AC <internal_commands.ab2@2673> INCLUDE "internal_commands.ab2"
0003B4AD <internal_commands.ab2@2674> INCLUDE "internal_commands.ab2"
0003B4AE <internal_commands.ab2@2675> INCLUDE "internal_commands.ab2"
0003B4B2 <internal_commands.ab2@2678> INCLUDE "internal_commands.ab2"
0003B4B4 <internal_commands.ab2@2679> INCLUDE "internal_commands.ab2"
0003B4BC <internal_commands.ab2@2680> INCLUDE "internal_commands.ab2"
0003B4CC <internal_commands.ab2@2681> INCLUDE "internal_commands.ab2"
0003B4D0 <internal_commands.ab2@2685> INCLUDE "internal_commands.ab2"
0003B4D2 <internal_commands.ab2@2686> INCLUDE "internal_commands.ab2"
0003B4DB <internal_commands.ab2@2687> INCLUDE "internal_commands.ab2"
0003B4E3 <internal_commands.ab2@2688> INCLUDE "internal_commands.ab2"
0003B4E4 <internal_commands.ab2@2689> INCLUDE "internal_commands.ab2"
0003B4E8 <internal_commands.ab2@2692> INCLUDE "internal_commands.ab2"
0003B4EA <internal_commands.ab2@2693> INCLUDE "internal_commands.ab2"
0003B4F2 <internal_commands.ab2@2694> INCLUDE "internal_commands.ab2"
0003B4FB <internal_commands.ab2@2695> INCLUDE "internal_commands.ab2"
0003B4FC <internal_commands.ab2@2696> INCLUDE "internal_commands.ab2"
0003B500 <internal_commands.ab2@2699> INCLUDE "internal_commands.ab2"
0003B502 <internal_commands.ab2@2700> INCLUDE "internal_commands.ab2"
0003B50A <internal_commands.ab2@2701> INCLUDE "internal_commands.ab2"
0003B50B <internal_commands.ab2@2702> INCLUDE "internal_commands.ab2"
0003B50C <internal_commands.ab2@2703> INCLUDE "internal_commands.ab2"
0003B510 <internal_commands.ab2@2706> INCLUDE "internal_commands.ab2"
0003B512 <internal_commands.ab2@2707> INCLUDE "internal_commands.ab2"
0003B518 <internal_commands.ab2@2708> INCLUDE "internal_commands.ab2"
0003B519 <internal_commands.ab2@2709> INCLUDE "internal_commands.ab2"
0003B51A <internal_commands.ab2@2710> INCLUDE "internal_commands.ab2"
0003B51E <internal_commands.ab2@2713> INCLUDE "internal_commands.ab2"
0003B520 <internal_commands.ab2@2714> INCLUDE "internal_commands.ab2"
0003B527 <internal_commands.ab2@2715> INCLUDE "internal_commands.ab2"
0003B528 <internal_commands.ab2@2716> INCLUDE "internal_commands.ab2"
0003B52C <internal_commands.ab2@2720> INCLUDE "internal_commands.ab2"
0003B52E <internal_commands.ab2@2721> INCLUDE "internal_commands.ab2"
0003B535 <internal_commands.ab2@2722> INCLUDE "internal_commands.ab2"
0003B536 <internal_commands.ab2@2723> INCLUDE "internal_commands.ab2"
0003B53A <internal_commands.ab2@2727> INCLUDE "internal_commands.ab2"
0003B53C <internal_commands.ab2@2728> INCLUDE "internal_commands.ab2"
0003B543 <internal_commands.ab2@2729> INCLUDE "internal_commands.ab2"
0003B544 <internal_commands.ab2@2730> INCLUDE "internal_commands.ab2"
0003B548 <internal_commands.ab2@2734> INCLUDE "internal_commands.ab2"
0003B54A <internal_commands.ab2@2735> INCLUDE "internal_commands.ab2"
0003B551 <internal_commands.ab2@2736> INCLUDE "internal_commands.ab2"
0003B552 <internal_commands.ab2@2737> INCLUDE "internal_commands.ab2"
0003B556 <internal_commands.ab2@2741> INCLUDE "internal_commands.ab2"
0003B558 <internal_commands.ab2@2742> INCLUDE "internal_commands.ab2"
0003B55D <internal_commands.ab2@2743> INCLUDE "internal_commands.ab2"
0003B573 <internal_commands.ab2@2744> INCLUDE "internal_commands.ab2"
0003B574 <internal_commands.ab2@2745> INCLUDE "internal_commands.ab2"
0003B578 <internal_commands.ab2@2748> INCLUDE "internal_commands.ab2"
0003B57A <internal_commands.ab2@2749> INCLUDE "internal_commands.ab2"
0003B584 <internal_commands.ab2@2750> INCLUDE "internal_commands.ab2"
0003B585 <internal_commands.ab2@2751> INCLUDE "internal_commands.ab2"
0003B586 <internal_commands.ab2@2752> INCLUDE "internal_commands.ab2"
0003B58A <internal_commands.ab2@2755> INCLUDE "internal_commands.ab2"
0003B58C <internal_commands.ab2@2756> INCLUDE "internal_commands.ab2"
0003B597 <internal_commands.ab2@2757> INCLUDE "internal_commands.ab2"
0003B598 <internal_commands.ab2@2758> INCLUDE "internal_commands.ab2"
0003B59C <internal_commands.ab2@2762> INCLUDE "internal_commands.ab2"
0003B59E <internal_commands.ab2@2763> INCLUDE "internal_commands.ab2"
0003B5AA <internal_commands.ab2@2764> INCLUDE "internal_commands.ab2"
0003B5D7 <internal_commands.ab2@2765> INCLUDE "internal_commands.ab2"
0003B5D8 <internal_commands.ab2@2766> INCLUDE "internal_commands.ab2"
0003B5DC <internal_commands.ab2@2769> INCLUDE "internal_commands.ab2"
0003B5DE <internal_commands.ab2@2770> INCLUDE "internal_commands.ab2"
0003B5E6 <internal_commands.ab2@2771> INCLUDE "internal_commands.ab2"
0003B61D <internal_commands.ab2@2772> INCLUDE "internal_commands.ab2"
0003B61E <internal_commands.ab2@2773> INCLUDE "internal_commands.ab2"
0003B622 <internal_commands.ab2@2776> INCLUDE "internal_commands.ab2"
0003B624 <internal_commands.ab2@2777> INCLUDE "internal_commands.ab2"
0003B62C <internal_commands.ab2@2778> INCLUDE "internal_commands.ab2"
0003B64B <internal_commands.ab2@2779> INCLUDE "internal_commands.ab2"
0003B64C <internal_commands.ab2@2780> INCLUDE "internal_commands.ab2"
0003B650 <internal_commands.ab2@2783> INCLUDE "internal_commands.ab2"
0003B652 <internal_commands.ab2@2784> INCLUDE "internal_commands.ab2"
0003B659 <internal_commands.ab2@2785> INCLUDE "internal_commands.ab2"
0003B68F <internal_commands.ab2@2786> INCLUDE "internal_commands.ab2"
0003B690 <internal_commands.ab2@2787> INCLUDE "internal_commands.ab2"
0003B694 <internal_commands.ab2@2790> INCLUDE "internal_commands.ab2"
0003B696 <internal_commands.ab2@2791> INCLUDE "internal_commands.ab2"
0003B69F <internal_commands.ab2@2792> INCLUDE "internal_commands.ab2"
0003B6D4 <internal_commands.ab2@2793> INCLUDE "internal_commands.ab2"
0003B6D8 <internal_commands.ab2@2797> INCLUDE "internal_commands.ab2"
0003B6DA <internal_commands.ab2@2798> INCLUDE "internal_commands.ab2"
0003B6EA <internal_commands.ab2@2799> INCLUDE "internal_commands.ab2"
0003B721 <internal_commands.ab2@2800> INCLUDE "internal_commands.ab2"
0003B722 <internal_commands.ab2@2801> INCLUDE "internal_commands.ab2"
0003B722 <AmiBlitz3.ab2@28325> INCLUDE "internal_commands.ab2"
0003B726 <AmiBlitz3.ab2@28330>            Dc.l cif_lt                                     ;ciflt
0003B72A <AmiBlitz3.ab2@28331>            Dc.l cif_eq                                     ;cifeq
0003B72E <AmiBlitz3.ab2@28332>            Dc.l cif_gt                                     ;cifgt
0003B732 <AmiBlitz3.ab2@28333>            Ds.l 1                                          ;0
0003B736 <AmiBlitz3.ab2@28334>            Dc.l cif_le                                     ;cifle
0003B73A <AmiBlitz3.ab2@28335>            Dc.l cif_ne                                     ;cifne
0003B73E <AmiBlitz3.ab2@28336>            Dc.l cif_le                                     ;cifge
0003B742 <AmiBlitz3.ab2@28337>            Ds.l 1                                          ;0
0003B746 <AmiBlitz3.ab2@28338>            Dc.l cif_ge                                     ;cifge
0003B74A <AmiBlitz3.ab2@28339>            Dc.l cif_ne                                     ;cifne
0003B74E <AmiBlitz3.ab2@28340>            Dc.l cif_ge                                     ;cifge
0003B752 <AmiBlitz3.ab2@28341>            Ds.l 1                                          ;0
0003B756 <AmiBlitz3.ab2@28344>            Dc.l do_newtype                                 ;donewtype
0003B75A <AmiBlitz3.ab2@28345>            Dc.l do_end                                     ;doend
0003B75E <AmiBlitz3.ab2@28346>            Dc.l do_let                                     ;dolet
0003B762 <AmiBlitz3.ab2@28347>            Dc.l do_dim                                     ;dodim
0003B766 <AmiBlitz3.ab2@28348>            Dc.l do_goto                                    ;dogoto
0003B76A <AmiBlitz3.ab2@28349>            Dc.l do_gosub                                   ;dogosub
0003B76E <AmiBlitz3.ab2@28350>            Dc.l do_return                                  ;doreturn
0003B772 <AmiBlitz3.ab2@28351>            Dc.l do_statement                               ;dostatement
0003B776 <AmiBlitz3.ab2@28352>            Dc.l do_function                                ;dofunc
0003B77A <AmiBlitz3.ab2@28353>            Dc.l do_mousewait                               ;domwait
0003B77E <AmiBlitz3.ab2@28354>            Dc.l do_if                                      ;doif
0003B782 <AmiBlitz3.ab2@28355>            Dc.l do_while                                   ;dowhile
0003B786 <AmiBlitz3.ab2@28356>            Dc.l do_Macro                                   ;domacro
0003B78A <AmiBlitz3.ab2@28357>            Dc.l do_select                                  ;doselect
0003B78E <AmiBlitz3.ab2@28358>            Dc.l do_case                                    ;docase
0003B792 <AmiBlitz3.ab2@28359>            Dc.l do_default                                 ;dodefault
0003B796 <AmiBlitz3.ab2@28360>            Dc.l do_AsmExit                                 ;doasmexit
0003B79A <AmiBlitz3.ab2@28361>            Dc.l do_xinclude                                ;doxinclude
0003B79E <AmiBlitz3.ab2@28362>            Dc.l do_INCLUDE                                 ;doinclude
0003B7A2 <AmiBlitz3.ab2@28363>            Dc.l do_syntax                                  ;syntaxerr
0003B7A6 <AmiBlitz3.ab2@28364>            Dc.l do_shared                                  ;doshared
0003B7AA <AmiBlitz3.ab2@28365>            Dc.l do_for                                     ;dofor
0003B7AE <AmiBlitz3.ab2@28366>            Dc.l do_next                                    ;donext
0003B7B2 <AmiBlitz3.ab2@28367>            Dc.l syntaxerr                                  ; To
0003B7B6 <AmiBlitz3.ab2@28368>            Dc.l syntaxerr                                  ; Step
0003B7BA <AmiBlitz3.ab2@28369>            Dc.l do_data                                    ;dodata
0003B7BE <AmiBlitz3.ab2@28370>            Dc.l do_read                                    ;doread
0003B7C2 <AmiBlitz3.ab2@28374>            Dc.l syntaxerr                                  ; CNIF
0003B7C6 <AmiBlitz3.ab2@28375>            Dc.l syntaxerr                                  ; CSIF
0003B7CA <AmiBlitz3.ab2@28376>            Dc.l syntaxerr                                  ; CELSE
0003B7CE <AmiBlitz3.ab2@28377>            Dc.l syntaxerr                                  ; CEND
0003B7D2 <AmiBlitz3.ab2@28378>            Dc.l do_cerr                                    ;docerr
0003B7D6 <AmiBlitz3.ab2@28379>            Dc.l do_then                                    ;dothen
0003B7DA <AmiBlitz3.ab2@28380>            Dc.l do_else                                    ;doelse
0003B7DE <AmiBlitz3.ab2@28381>            Dc.l do_even4                                   ;doeven4
0003B7E2 <AmiBlitz3.ab2@28382>            Dc.l do_even8                                   ;doeven8
0003B7E6 <AmiBlitz3.ab2@28384>            Dc.l do_dc                                      ;dodc
0003B7EA <AmiBlitz3.ab2@28385>            Dc.l do_ds                                      ;dods
0003B7EE <AmiBlitz3.ab2@28386>            Dc.l do_even                                    ;doeven
0003B7F2 <AmiBlitz3.ab2@28387>            Dc.l do_dcb                                     ;dodcb
0003B7F6 <AmiBlitz3.ab2@28388>            Dc.l do_setreg                                  ;dosetreg
0003B7FA <AmiBlitz3.ab2@28389>            Dc.l do_IncBin                                  ;doincbin
0003B7FE <AmiBlitz3.ab2@28390>            Dc.l do_free                                    ;dofree
0003B802 <AmiBlitz3.ab2@28391>            Dc.l do_use                                     ;douse
0003B806 <AmiBlitz3.ab2@28392>            Dc.l do_Stop                                    ;dostop
0003B80A <AmiBlitz3.ab2@28393>            Dc.l do_Cont                                    ;docont
0003B80E <AmiBlitz3.ab2@28394>            Dc.l syntaxerr                                  ;syntaxeer
0003B812 <AmiBlitz3.ab2@28395>            Dc.l do_SetInt                                  ;dosetint
0003B816 <AmiBlitz3.ab2@28396>            Dc.l do_ClrInt                                  ;doclrint
0003B81A <AmiBlitz3.ab2@28397>            Dc.l do_MaxLen                                  ;domaxlen
0003B81E <AmiBlitz3.ab2@28398>            Dc.l do_DEFTYPE                                 ;dodeftype
0003B822 <AmiBlitz3.ab2@28399>            Dc.l do_BLITZ                                   ;doblitz
0003B826 <AmiBlitz3.ab2@28400>            Dc.l do_AMIGA                                   ;doamiga
0003B82A <AmiBlitz3.ab2@28401>            Dc.l do_QAMIGA                                  ;doqamiga
0003B82E <AmiBlitz3.ab2@28402>            Dc.l do_VWait                                   ;dovwait
0003B832 <AmiBlitz3.ab2@28403>            Dc.l do_LibJsr                                  ;dolibjsr
0003B836 <AmiBlitz3.ab2@28404>            Dc.l do_TokeJsr                                 ;dotokejsr
0003B83A <AmiBlitz3.ab2@28405>            Dc.l do_BLibJsr                                 ;doblibjsr
0003B83E <AmiBlitz3.ab2@28406>            Dc.l _extb                                      ;syntaxerr
0003B842 <AmiBlitz3.ab2@28410>            Dc.l syntaxerr                                  ;syntaxerr      ;flash2 ; for list
0003B846 <AmiBlitz3.ab2@28411>            Dc.l do_SetErr                                  ;doseterr
0003B84A <AmiBlitz3.ab2@28412>            Dc.l do_ClrErr                                  ;doclrerr
0003B84E <AmiBlitz3.ab2@28413>            Dc.l syntaxerr                                  ;syntaxerr
0003B852 <AmiBlitz3.ab2@28414>            Dc.l do_ErrFail                                 ;doerrfail
0003B856 <AmiBlitz3.ab2@28415>            Dc.l syntaxerr
0003B85A <AmiBlitz3.ab2@28416>            Dc.l syntaxerr                                  ;mod
0003B85E <AmiBlitz3.ab2@28417>            Dc.l syntaxerr                                  ;Pi
0003B862 <AmiBlitz3.ab2@28418>            Dc.l do_Repeat                                  ;dorepeat
0003B866 <AmiBlitz3.ab2@28419>            Dc.l do_Until                                   ;dountil
0003B86A <AmiBlitz3.ab2@28420>            Dc.l do_PutReg                                  ;doputreg
0003B86E <AmiBlitz3.ab2@28421>            Dc.l do_Pop                                     ;dopop
0003B872 <AmiBlitz3.ab2@28422>            Dc.l do_INCDIR                                  ;doincdir
0003B876 <AmiBlitz3.ab2@28423>            Dc.l mydo_Endif2                                ;mydoendif2
0003B87A <AmiBlitz3.ab2@28424>            Dc.l do_Wend                                    ;dowend
0003B87E <AmiBlitz3.ab2@28425>            Dc.l do_SysJsr                                  ;dosysjsr
0003B882 <AmiBlitz3.ab2@28426>            Dc.l do_WBStartup                               ;dowbstartup
0003B886 <AmiBlitz3.ab2@28427>            Dc.l syntaxerr
0003B88A <AmiBlitz3.ab2@28428>            Dc.l do_Ongo                                    ;doongo
0003B88E <AmiBlitz3.ab2@28429>            Dc.l syntaxerr
0003B892 <AmiBlitz3.ab2@28430>            Dc.l do_Forever                                 ;doforever
0003B896 <AmiBlitz3.ab2@28431>            Dc.l do_Restore                                 ;dorestore
0003B89A <AmiBlitz3.ab2@28432>            Dc.l do_Exchange                                ;doexchange
0003B89E <AmiBlitz3.ab2@28433>            Dc.l do_USEPATH                                 ;dousepath
0003B8A2 <AmiBlitz3.ab2@28434>            Dc.l do_CloseEd                                 ;doclosed
0003B8A6 <AmiBlitz3.ab2@28435>            Dc.l do_NoCli                                   ;donocli
0003B8AA <AmiBlitz3.ab2@28436>            Dc.l syntaxerr                                  ;syntaxerr
0003B8AE <AmiBlitz3.ab2@28437>            Dc.l syntaxerr                                  ;syntaxerr
0003B8B2 <AmiBlitz3.ab2@28438>            Dc.l syntaxerr                                  ;syntaxerr
0003B8B6 <AmiBlitz3.ab2@28439>            Dc.l syntaxerr                                  ;syntaxerr
0003B8BA <AmiBlitz3.ab2@28440>            Dc.l syntaxerr                                  ;syntaxerr
0003B8BE <AmiBlitz3.ab2@28441>            Dc.l do_runerrson                               ;dorunerrson
0003B8C2 <AmiBlitz3.ab2@28442>            Dc.l do_runerrsoff                              ;dorunerrsoff
0003B8C6 <AmiBlitz3.ab2@28443>            Dc.l do_uselastpath
0003B8CA <AmiBlitz3.ab2@28444>            Dc.l do_regload
0003B8CE <AmiBlitz3.ab2@28445>            Dc.l do_regsave
0003B8D2 <AmiBlitz3.ab2@28446>            Dc.l do_Object
0003B8D6 <AmiBlitz3.ab2@28447>            Dc.l do_usepath2
0003B8DA <AmiBlitz3.ab2@28448>            Dc.l do_LastRunErrsMode
0003B8DE <AmiBlitz3.ab2@28471> menu_items:Dc.l menu_compile_run                                ;menuadds oreg source
0003B8E2 <AmiBlitz3.ab2@28472>            Dc.l menu_run
0003B8E6 <AmiBlitz3.ab2@28473>            Dc.l menu_createexecutable
0003B8EA <AmiBlitz3.ab2@28474>            Dc.l menu_dummyfunc          ;was menu_compileroptions
0003B8EE <AmiBlitz3.ab2@28475>            Dc.l menu_createresidentfile
0003B8F2 <AmiBlitz3.ab2@28476>            Dc.l menu_viewnewtypes
0003B8F6 <AmiBlitz3.ab2@28477>            Dc.l menu_simcliarguments
0003B8FA <AmiBlitz3.ab2@28478>            Dc.l menu_dummyfunc          ;was menu_calculator
0003B8FE <AmiBlitz3.ab2@28479>            Dc.l menu_reloadlibs
0003B902 <AmiBlitz3.ab2@28480>            Dc.l menu_loaddebugmodule
0003B906 <AmiBlitz3.ab2@28481>            Dc.l menu_dummyfunc
0003B90A <AmiBlitz3.ab2@28482>            Dc.l menu_newcreate
0003B90E <AmiBlitz3.ab2@28483>            Dc.l menu_dummyfunc
0003B912 <AmiBlitz3.ab2@28484>            Dc.l toggledebug
0003B916 <AmiBlitz3.ab2@28485>            Dc.l menu_dummyfunc
0003B91A <AmiBlitz3.ab2@28486>            Dc.l menu_dummyfunc
0003B91C <AmiBlitz3.ab2@28487> Even4
0003B946 <AmiBlitz3.ab2@28491>   !basic
0003B9A8 <AmiBlitz3.ab2@28492>   error{!TRANS{"Invalid AmiBlitz3 menu item called!"} }
0003B9C6 <AmiBlitz3.ab2@28493>   !asm
0003B9C8 <AmiBlitz3.ab2@28494> RTS
0003B9C9 <AmiBlitz3.ab2@28500> set_autorun:               Dc.b $00
0003B9CE <AmiBlitz3.ab2@28501> autorun:                   Dc.b $80,$01,$01,$00,$01
0003B9CF <AmiBlitz3.ab2@28503> set_interruptcheck:        Dc.b $00
0003B9D4 <AmiBlitz3.ab2@28504> interruptcheck             Dc.b $80,$01,$01,$00,$01
0003B9D5 <AmiBlitz3.ab2@28506> set_assemblercheck:        Ds.b 1
0003B9DA <AmiBlitz3.ab2@28507> assemblercheck:            Dc.b $00,$01,$01,$00,$01
0003B9DB <AmiBlitz3.ab2@28509> set_overflowcheck:         Ds.b 1
0003B9E0 <AmiBlitz3.ab2@28510> overflowcheck:             Dc.b $00,$01,$01,$00,$01
0003B9E6 <AmiBlitz3.ab2@28512> default_obsolete:          Dc.b $00,$80,$01,$01,$00,$01
0003B9EC <AmiBlitz3.ab2@28513> default_interruptcheck:    Dc.b $00,$80,$01,$01,$00,$01
0003B9F2 <AmiBlitz3.ab2@28514> default_overflowcheck:     Dc.b $00,$80,$01,$01,$00,$01
0003B9F4 <AmiBlitz3.ab2@28515> Even4
0003BA00 <AmiBlitz3.ab2@28518> tsthead:                   Dc.l $000003F3,$00000000,$00000001
0003BA08 <AmiBlitz3.ab2@28519>                            Dc.l $00000000,$00000000
0003BA10 <AmiBlitz3.ab2@28520> tstsize1:                  Dc.l $00000100,$000003E9
0003BA14 <AmiBlitz3.ab2@28521> tstsize2:                  Dc.l $00000100
0003BA18 <AmiBlitz3.ab2@28522> tstend:                    Dc.l $000003EC
0003BA20 <AmiBlitz3.ab2@28523> tstsize3:                  Ds.l 2
0003BA24 <AmiBlitz3.ab2@28524> tstdone:                   Dc.l $000003F2
0003BA28 <AmiBlitz3.ab2@28527> edstruct:                  Dc.l tokens                     ;data for ted
0003BA2C <AmiBlitz3.ab2@28531>                            Dc.l 0
0003BA30 <AmiBlitz3.ab2@28533>                            Dc.l read_xtrafile              ;load .xtra routine
0003BA34 <AmiBlitz3.ab2@28534>                            Dc.l write_xtrafile             ;save .xtra routine
0003BA38 <AmiBlitz3.ab2@28535>                            Dc.l call_menuentry             ;Menu Routine
0003BA3C <AmiBlitz3.ab2@28536>                            Ds.l 1                          ;cleanup (?)
0003BA40 <AmiBlitz3.ab2@28537>                            Dc.b ":",34,".;"
0003BB3C <AmiBlitz3.ab2@28540> 
0003BC1C <AmiBlitz3.ab2@28541>                            Ds.l 56
0003BC1E <AmiBlitz3.ab2@28546> lslimm:                    Dc.b $E1,$48                                             ;LSL.W   #8,D0
0003BC22 <AmiBlitz3.ab2@28549> use:                       Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0003BC24 <AmiBlitz3.ab2@28550>                            Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0003BC28 <AmiBlitz3.ab2@28551>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003BC2E <AmiBlitz3.ab2@28555> beginarr:                  Dc.b $20,$3C,$00,$00,$00,$00                             ;MOVE.L  #$00000000,D0
0003BC30 <AmiBlitz3.ab2@28559>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003BC34 <AmiBlitz3.ab2@28562> putarr:                    Dc.b $2B,$40 :                            Dc.b $00,$00   ;MOVE.L  D0,$0000(A5)
0003BC38 <AmiBlitz3.ab2@28565> doarr:                     Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003BC3C <AmiBlitz3.ab2@28566>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003BC3E <AmiBlitz3.ab2@28572>                            Dc.b $4A,$40                                             ;TST.W   D0
0003BC40 <AmiBlitz3.ab2@28576>                            Dc.b $4A,$80                                             ;TST.L   D0
0003BC42 <AmiBlitz3.ab2@28579> nops8:                     Dc.b $4E,$71                                             ;NOP
0003BC44 <AmiBlitz3.ab2@28580>                            Dc.b $4E,$71                                             ;NOP
0003BC46 <AmiBlitz3.ab2@28581>                            Dc.b $4E,$71                                             ;NOP
0003BC48 <AmiBlitz3.ab2@28582>                            Dc.b $4E,$71                                             ;NOP
0003BC4A <AmiBlitz3.ab2@28583> nops4:                     Dc.b $4E,$71                                             ;NOP
0003BC4C <AmiBlitz3.ab2@28585>                            Dc.b $4E,$71                                             ;NOP
0003BC4E <AmiBlitz3.ab2@28586>                            Dc.b $4E,$71                                             ;NOP
0003BC50 <AmiBlitz3.ab2@28587>                            Dc.b $4E,$71                                             ;NOP
0003BC54 <AmiBlitz3.ab2@28591> dataget:                   Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003BC58 <AmiBlitz3.ab2@28594> dataput:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003BC5A <AmiBlitz3.ab2@28597> stlenget:                  Dc.b $2F,$1B                                             ;MOVE.L  (A3)+,-(A7)
0003BC5C <AmiBlitz3.ab2@28600> stalign:                   Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003BC5E <AmiBlitz3.ab2@28601>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003BC62 <AmiBlitz3.ab2@28602>                            Dc.b $08,$80,$00,$00                                     ;BCLR    #0,D0
0003BC64 <AmiBlitz3.ab2@28603>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003BC66 <AmiBlitz3.ab2@28609> dataletb:                  Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003BC6A <AmiBlitz3.ab2@28610>                            Dc.b $1B,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A5)
0003BC6C <AmiBlitz3.ab2@28615> dataletbl:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003BC70 <AmiBlitz3.ab2@28616>                            Dc.b $19,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A4)
0003BC72 <AmiBlitz3.ab2@28620> dataletb2:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003BC74 <AmiBlitz3.ab2@28621>                            Dc.b $14,$9B                                             ;MOVE.B  (A3)+,(A2)
0003BC78 <AmiBlitz3.ab2@28627> dataletw:                  Dc.b $3B,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A5)
0003BC7A <AmiBlitz3.ab2@28628>                            Dc.b $34,$9B                                             ;MOVE.W  (A3)+,(A2)
0003BC7E <AmiBlitz3.ab2@28629>                            Dc.b $39,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A4)
0003BC82 <AmiBlitz3.ab2@28633> dataletl:                  Dc.b $2B,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A5)
0003BC84 <AmiBlitz3.ab2@28634>                            Dc.b $24,$9B                                             ;MOVE.L  (A3)+,(A2)
0003BC88 <AmiBlitz3.ab2@28635>                            Dc.b $29,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A4)
0003BC8A <AmiBlitz3.ab2@28638> nextfixw:                  Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003BC8E <AmiBlitz3.ab2@28641> nextfixw2:                 Dc.b $4F,$EF,$00,$0A                                     ;LEA $000A(A7),A7
0003BC92 <AmiBlitz3.ab2@28644> nextfixl:                  Dc.b $4F,$EF,$00,$0C                                     ;LEA $000C(A7),A7
0003BC96 <AmiBlitz3.ab2@28647> nextfixl2:                 Dc.b $4F,$EF,$00,$0E                                     ;LEA $000E(A7),A7
0003BC9A <AmiBlitz3.ab2@28651>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003BC9C <AmiBlitz3.ab2@28652>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003BC9E <AmiBlitz3.ab2@28653>                            Dc.b $D1,$12                                             ;ADD.B   D0,(A2)
0003BCA2 <AmiBlitz3.ab2@28658>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003BCA4 <AmiBlitz3.ab2@28659>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003BCA6 <AmiBlitz3.ab2@28660>                            Dc.b $D1,$52                                             ;ADD.W   D0,(A2)
0003BCAA <AmiBlitz3.ab2@28665>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003BCAC <AmiBlitz3.ab2@28666>                            Dc.b $20,$17                                             ;MOVE.L  (A7),D0
0003BCAE <AmiBlitz3.ab2@28667>                            Dc.b $D1,$92                                             ;ADD.L   D0,(A2)
0003BCB2 <AmiBlitz3.ab2@28672>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003BCB4 <AmiBlitz3.ab2@28673>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003BCB6 <AmiBlitz3.ab2@28674>                            Dc.b $22,$17                                             ;MOVE.L  (A7),D1
0003BCBA <AmiBlitz3.ab2@28675>                            Dc.b $4E,$AE,$FF,$BE                                     ;JSR -$0042(A6)
0003BCBC <AmiBlitz3.ab2@28676>                            Dc.b $24,$80                                             ;MOVE.L  D0,(A2)
0003BCC0 <AmiBlitz3.ab2@28681>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003BCC2 <AmiBlitz3.ab2@28682>                            Dc.b $10,$12                                             ;MOVE.B  (A2),D0
0003BCC6 <AmiBlitz3.ab2@28683>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003BCC8 <AmiBlitz3.ab2@28684>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003BCCC <AmiBlitz3.ab2@28685>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000001         ;.skip org source
0003BCCE <AmiBlitz3.ab2@28686>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003BCD0 <AmiBlitz3.ab2@28689>                            Dc.b $B0,$01                                             ;CMP.B   D1,D0
0003BCD4 <AmiBlitz3.ab2@28694>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003BCD6 <AmiBlitz3.ab2@28695>                            Dc.b $30,$12                                             ;MOVE.W  (A2),D0
0003BCDA <AmiBlitz3.ab2@28696>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003BCDC <AmiBlitz3.ab2@28697>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003BCE0 <AmiBlitz3.ab2@28698>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000002         ;.skip org source
0003BCE2 <AmiBlitz3.ab2@28699>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003BCE4 <AmiBlitz3.ab2@28702>                            Dc.b $B0,$41                                             ;CMP.W   D1,D0
0003BCE8 <AmiBlitz3.ab2@28707>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003BCEA <AmiBlitz3.ab2@28708>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003BCEE <AmiBlitz3.ab2@28709>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003BCF0 <AmiBlitz3.ab2@28710>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003BCF4 <AmiBlitz3.ab2@28711>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000003         ;.skip org source
0003BCF6 <AmiBlitz3.ab2@28712>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003BCF8 <AmiBlitz3.ab2@28715>                            Dc.b $B0,$81                                             ;CMP.L   D1,D0
0003BCFC <AmiBlitz3.ab2@28720>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003BCFE <AmiBlitz3.ab2@28721>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003BD02 <AmiBlitz3.ab2@28722>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003BD08 <AmiBlitz3.ab2@28723>                            Dc.b $08,$2F,$00,$07,$00,$03                             ;BTST    #7,$0003(A7)
0003BD0C <AmiBlitz3.ab2@28724>                            Dc.b $67,$00,$00,$04                                     ;BEQ.W   L000004
0003BD0E <AmiBlitz3.ab2@28725>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003BD12 <AmiBlitz3.ab2@28732>                            Dc.b $4E,$AE,$FF,$D6                                     ;JSR -$002A(A6)
0003BD14 <AmiBlitz3.ab2@28736> swapd0:                    Dc.b $48,$40                                             ;SWAP    D0
0003BD16 <AmiBlitz3.ab2@28739> pushindex:                 Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003BD1A <AmiBlitz3.ab2@28742> leaamp:                    Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003BD1C <AmiBlitz3.ab2@28743> leaamp2:                   Dc.b $20,$0A                                             ;MOVE.L  A2,D0
0003BD20 <AmiBlitz3.ab2@28746> leaampl:                   Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003BD22 <AmiBlitz3.ab2@28749> stamp:                     Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003BD26 <AmiBlitz3.ab2@28752> stamp2:                    Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003BD28 <AmiBlitz3.ab2@28756>                            Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
0003BD2A <AmiBlitz3.ab2@28759> pushd0wd:                  Dc.b $3F,$00                                             ;MOVE.W  D0,-(A7)
0003BD2C <AmiBlitz3.ab2@28762> pushd0l:                   Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003BD30 <AmiBlitz3.ab2@28765> movenumrep:                Dc.b $3E,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D7
0003BD34 <AmiBlitz3.ab2@28768> preplibst:                 Dc.b $45,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A2
0003BD38 <AmiBlitz3.ab2@28771> fixlibst:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003BD3A <AmiBlitz3.ab2@28774> pushdn:                    Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003BD3C <AmiBlitz3.ab2@28777> movea3a7:                  Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003BD40 <AmiBlitz3.ab2@28780> movestst2:                 Dc.b $20,$2F :                            Dc.b $00,$06   ;MOVE.L  $0006(A7),D0
0003BD46 <AmiBlitz3.ab2@28781>                            Dc.b $3F,$6F,$00,$04,$00,$08                             ;MOVE.W  $0004(A7),$0008(A7)
0003BD48 <AmiBlitz3.ab2@28782>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003BD4C <AmiBlitz3.ab2@28786> movea7dn:                  Dc.b $20,$2F :                            Dc.b $00,$04   ;MOVE.L  $0004(A7),D0
0003BD4E <AmiBlitz3.ab2@28787>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003BD50 <AmiBlitz3.ab2@28791> moved0a3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003BD54 <AmiBlitz3.ab2@28794> movestdn:                  Dc.b $20,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),D0
0003BD56 <AmiBlitz3.ab2@28798>                            Dc.b $20,$0B                                             ;MOVE.L  A3,D0
0003BD58 <AmiBlitz3.ab2@28802>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003BD5A <AmiBlitz3.ab2@28806>                            Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003BD5E <AmiBlitz3.ab2@28809> moverts:                   Dc.b $2F,$57 :                            Dc.b $00,$00   ;MOVE.L  (A7),$0000(A7)
0003BD62 <AmiBlitz3.ab2@28812> fixstack:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003BD64 <AmiBlitz3.ab2@28815> fixq:                      Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003BD66 <AmiBlitz3.ab2@28818> fix1:                      Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003BD68 <AmiBlitz3.ab2@28821> movedna3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003BD6C <AmiBlitz3.ab2@28824> least:                     Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003BD70 <AmiBlitz3.ab2@28827> funcst:                    Dc.b $2F,$2C :                            Dc.b $00,$00   ;MOVE.L  $0000(A4),-(A7)
0003BD72 <AmiBlitz3.ab2@28830> addq4a2:                   Dc.b $58,$4A                                             ;ADDQ.W  #4,A2
0003BD74 <AmiBlitz3.ab2@28834>                            Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003BD78 <AmiBlitz3.ab2@28837>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003BD7A <AmiBlitz3.ab2@28843>                            Dc.b $26,$5F                                             ;MOVEA.L (A7)+,A3
0003BD7E <AmiBlitz3.ab2@28846>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003BD80 <AmiBlitz3.ab2@28852>                            Dc.b $CB,$4C                                             ;EXG A5,A4
0003BD84 <AmiBlitz3.ab2@28856> linksize:                  Dc.b $4E,$54 :                            Dc.b $00,$00   ;LINK    A4,#-$0000
0003BD86 <AmiBlitz3.ab2@28859> unlinka4:                  Dc.b $4E,$5C                                             ;UNLK    A4
0003BD88 <AmiBlitz3.ab2@28863>                            Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003BD8A <AmiBlitz3.ab2@28867>                            Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003BD90 <AmiBlitz3.ab2@28870> gotocode:                  Dc.b $4E,$F9,$00,$00,$00,$00                             ;JMP $00000000
0003BD96 <AmiBlitz3.ab2@28873> gosubcode:                 Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003BD9E <AmiBlitz3.ab2@28877> mwait:                     Dc.b $08,$39,$00,$06,$00,$BF,$E0,$01                     ;BTST    #6,$00BFE001
0003BDA2 <AmiBlitz3.ab2@28878>                            Dc.b $66,$00,$FF,$F6                                     ;BNE.W   L000005       ;mwait: org source
0003BDA4 <AmiBlitz3.ab2@28882> libreg:                    Dc.b $20,$00                                             ;MOVE.L  D0,D0
0003BDA8 <AmiBlitz3.ab2@28885> libbase:                   Dc.b $2C,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A6
0003BDAC <AmiBlitz3.ab2@28888> libjsr:                    Dc.b $4E,$AE :                            Dc.b $00,$00   ;JSR $0000(A6)
0003BDB0 <AmiBlitz3.ab2@28891> regtransd:                 Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003BDB4 <AmiBlitz3.ab2@28892> regtransa:                 Dc.b $20,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A0
0003BDB8 <AmiBlitz3.ab2@28896>                            Dc.b $26,$7C,$00,$00                                     ;MOVEA.L #$00000000,A3
0003BDBC <AmiBlitz3.ab2@28898>                            Dc.l $3F1B                                               ;MOVE.W  (A3)+,-(A7)
0003BDBE <AmiBlitz3.ab2@28901> movea2dn:                  Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003BDC2 <AmiBlitz3.ab2@28904> moved3a5dn:                Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003BDC4 <AmiBlitz3.ab2@28907> stvarget2:                 Dc.b $70,$00                                             ;MOVEQ   #$00,D0
0003BDC6 <AmiBlitz3.ab2@28908>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003BDC8 <AmiBlitz3.ab2@28909>                            Dc.b $4A,$92                                             ;TST.L   (A2)
0003BDCC <AmiBlitz3.ab2@28910> 
0003BDCE <AmiBlitz3.ab2@28911>                            Dc.b $20,$52                                             ;MOVEA.L (A2),A0
0003BDD0 <AmiBlitz3.ab2@28912>                            Dc.b $59,$48                                             ;SUBQ.W  #4,A0
0003BDD2 <AmiBlitz3.ab2@28913>                            Dc.b $2E,$98                                             ;MOVE.L  (A0)+,(A7)
0003BDD8 <AmiBlitz3.ab2@28915>                            Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003BDDA <AmiBlitz3.ab2@28920> addcode:                   Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003BDDC <AmiBlitz3.ab2@28921>                            Dc.b $D1,$97                                             ;ADD.L   D0,(A7)
0003BDDE <AmiBlitz3.ab2@28925> pushlen:                   Dc.b $2F,$18                                             ;MOVE.L  (A0)+,-(A7)
0003BDE2 <AmiBlitz3.ab2@28928> leaa5d3a2:                 Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003BDE4 <AmiBlitz3.ab2@28931> pusha2:                    Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003BDE6 <AmiBlitz3.ab2@28935>                            Dc.b $24,$57                                             ;MOVEA.L (A7),A2
0003BDE8 <AmiBlitz3.ab2@28938> pulla2:                    Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003BDEC <AmiBlitz3.ab2@28941> pulla2st:                  Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003BDEE <AmiBlitz3.ab2@28942>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003BDF2 <AmiBlitz3.ab2@28946> pusha3:                    Dc.b $2F,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),-(A7)
0003BDF6 <AmiBlitz3.ab2@28947> pusha32:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003BDFA <AmiBlitz3.ab2@28951> pulla3:                    Dc.b $2B,$5F :                            Dc.b $00,$00   ;MOVE.L  (A7)+,$0000(A5)
0003BDFE <AmiBlitz3.ab2@28955> geta3:                     Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003BE04 <AmiBlitz3.ab2@28959> numtoa0:                   Dc.b $20,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A0
0003BE0A <AmiBlitz3.ab2@28962> numtoa2:                   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0003BE0E <AmiBlitz3.ab2@28966> endarray:                  Dc.b $38,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D4
0003BE12 <AmiBlitz3.ab2@28970>                            Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003BE16 <AmiBlitz3.ab2@28971>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003BE1C <AmiBlitz3.ab2@28976>                            Dc.b $20,$3C,$00,$00,$00,$04                             ;MOVE.L  #$00000004,D0
0003BE20 <AmiBlitz3.ab2@28981>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003BE22 <AmiBlitz3.ab2@28986>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003BE26 <AmiBlitz3.ab2@28990>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003BE28 <AmiBlitz3.ab2@28994> movea0:                    Dc.b $24,$52                                             ;MOVEA.L (A2),A2
0003BE2A <AmiBlitz3.ab2@28997> adda0a0:                   Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003BE2C <AmiBlitz3.ab2@28998>                            Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003BE30 <AmiBlitz3.ab2@29002>                            Dc.b $2C,$78,$00,$04                                     ;MOVEA.L $0004,A6
0003BE34 <AmiBlitz3.ab2@29006> movea5a0:                  Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003BE38 <AmiBlitz3.ab2@29009> movea0a0:                  Dc.b $24,$6A :                            Dc.b $00,$00   ;MOVEA.L $0000(A2),A2
0003BE3A <AmiBlitz3.ab2@29012> addqa0:                    Dc.b $52,$4A                                             ;ADDQ.W  #1,A2
0003BE3E <AmiBlitz3.ab2@29015> leaa0a0:                   Dc.b $45,$EA :                            Dc.b $00,$00   ;LEA $0000(A2),A2
0003BE40 <AmiBlitz3.ab2@29018> addrega2:                  Dc.b $D4,$C0                                             ;ADDA.W  D0,A2
0003BE49 <AmiBlitz3.ab2@29022>                            Dc.b "ram:test",0
0003BE4A <AmiBlitz3.ab2@29023> Even
0003BE4E <AmiBlitz3.ab2@29027>                            Dc.l  0                          ;was  Ds.w 3 org source
0003BE50 <AmiBlitz3.ab2@29029>                            Dc.w  0
0003BE54 <AmiBlitz3.ab2@29032> _mathffpbase:              Ds.l 1                           ;maths org source
0003BE56 <AmiBlitz3.ab2@29033> regnum:                    Ds.w 1                           ;regat org source       ;register being used!
0003BE58 <AmiBlitz3.ab2@29034> typelen:                   Ds.w 1
0003BE5C <AmiBlitz3.ab2@29035> prevtype:                  Ds.l 1
0003BE60 <AmiBlitz3.ab2@29036> lastsourcepos:             Ds.l 1                           ;prevloc org source
0003BE62 <AmiBlitz3.ab2@29037> lastchar:                  Ds.w 1
0003BE66 <AmiBlitz3.ab2@29038> thistype:                  Ds.l 1
0003BE6A <AmiBlitz3.ab2@29039> errstack:                  Ds.l 1
0003BE6E <AmiBlitz3.ab2@29040> errcont:                   Ds.l 1
0003BE70 <AmiBlitz3.ab2@29041> linemode:                  Ds.w 1                          ;0 if norm, 1 if newtype
0003BE72 <AmiBlitz3.ab2@29042> linesleft:                 Ds.w 1
0003BE76 <AmiBlitz3.ab2@29043> sourceline:                Ds.l 1                          ;thisitem org source
0003BE7A <AmiBlitz3.ab2@29044> varbase:                   Ds.l 1                          ;firstvar org source
0003BE7E <AmiBlitz3.ab2@29045> alllocals:                 Ds.l 1
0003BE82 <AmiBlitz3.ab2@29046> firstlocal:                Ds.l 1
0003BE86 <AmiBlitz3.ab2@29047> firstglob:                 Ds.l 1
0003BE88 <AmiBlitz3.ab2@29048> globalvarpointer:          Ds.w 1                          ;varoff org source
0003BE8A <AmiBlitz3.ab2@29049> locvaroff:                 Ds.w 1
0003BE8E <AmiBlitz3.ab2@29050> firstitem_:                 Ds.l 1
0003BE90 <AmiBlitz3.ab2@29051> numlines_org:              Ds.w 1                          ;numlines org source
0003BE92 <AmiBlitz3.ab2@29052> returncode_org:            Ds.w 1                          ;returncode org source
0003BE96 <AmiBlitz3.ab2@29053> firstiff:                  Ds.l 1                          ;firstif org source
0003BE9A <AmiBlitz3.ab2@29054> ptr_seg_ped:               Ds.l 1                          ;segadd org source
0003C09A <AmiBlitz3.ab2@29055> str_pedfile:               Ds.b #MAX_STRINGSIZE            ;segname org source
0003C0AA <AmiBlitz3.ab2@29056> str_mathffpname:           Dc.b "mathffp.library",0 : Even ;mathsname org source
0003C2AA <AmiBlitz3.ab2@29057> str_libfilename:           Ds.b #MAX_STRINGSIZE
0003C4AA <AmiBlitz3.ab2@29058> str_path_userlibs:         Ds.b #MAX_STRINGSIZE
0003C6AA <AmiBlitz3.ab2@29059> str_defaultdbug:           Ds.b #MAX_STRINGSIZE            ;debugname org source
0003C6AE <AmiBlitz3.ab2@29061> ptr_seg_debugger:          Ds.l 1                          ;dseg org source
0003C8AE <AmiBlitz3.ab2@29062> str_blitz3assign:          Ds.b #MAX_STRINGSIZE            ;dpath org source
0003CAAE <AmiBlitz3.ab2@29064> str_path_acidlibs:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003CAB2 <AmiBlitz3.ab2@29065> size_acidlibs:             Ds.l 1                          ;acidlibs org source
0003CCB2 <AmiBlitz3.ab2@29066> str_path_deflibs:          Ds.b #MAX_STRINGSIZE            ;defname org source
0003CCB6 <AmiBlitz3.ab2@29067> size_deflibs:              Ds.l 1                          ;deflibs org source
0003CEB6 <AmiBlitz3.ab2@29068> str_tempfilename:          Ds.b #MAX_STRINGSIZE
0003D0B6 <AmiBlitz3.ab2@29070> str_temp_debugmodulename:  Ds.b #MAX_STRINGSIZE            ;dname org source
0003D0BA <AmiBlitz3.ab2@29071> ptr_temp_debugmodule:      Ds.l 1                          ;dname2 org source
0003D2BA <AmiBlitz3.ab2@29073> str_path_includes:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003D2BE <AmiBlitz3.ab2@29079>   Dc.b $E3,$10,$00,$01                                     ;icondata  
0003D2C2 <AmiBlitz3.ab2@29080>   Dc.b $00,$00,$00,$00
0003D2C6 <AmiBlitz3.ab2@29081>   Dc.b $00,$19,$00,$11
0003D2CA <AmiBlitz3.ab2@29082>   Dc.b $00,$2E,$00,$18
0003D2CE <AmiBlitz3.ab2@29083>   Dc.b $00,$04,$00,$03
0003D2D2 <AmiBlitz3.ab2@29084>   Dc.b $00,$01,$00,$22
0003D2D6 <AmiBlitz3.ab2@29085>   Dc.b $73,$68,$00,$00
0003D2DA <AmiBlitz3.ab2@29086>   Dc.b $00,$00,$00,$00
0003D2DE <AmiBlitz3.ab2@29087>   Dc.b $00,$00,$00,$00
0003D2E2 <AmiBlitz3.ab2@29088>   Dc.b $00,$00,$00,$00
0003D2E6 <AmiBlitz3.ab2@29089>   Dc.b $00,$00,$00,$00
0003D2EA <AmiBlitz3.ab2@29090>   Dc.b $00,$00,$00,$00
0003D2EE <AmiBlitz3.ab2@29091>   Dc.b $03,$22,$00,$21
0003D2F2 <AmiBlitz3.ab2@29092>   Dc.b $3C,$28,$00,$22
0003D2F6 <AmiBlitz3.ab2@29093>   Dc.b $6E,$C0,$00,$00
0003D2FA <AmiBlitz3.ab2@29094>   Dc.b $00,$12,$00,$00
0003D2FE <AmiBlitz3.ab2@29095>   Dc.b $00,$0E,$00,$00
0003D302 <AmiBlitz3.ab2@29096>   Dc.b $00,$00,$00,$00
0003D306 <AmiBlitz3.ab2@29097>   Dc.b $00,$00,$00,$00
0003D30A <AmiBlitz3.ab2@29098>   Dc.b $00,$00,$00,$00
0003D30E <AmiBlitz3.ab2@29099>   Dc.b $00,$00,$00,$2E
0003D312 <AmiBlitz3.ab2@29100>   Dc.b $00,$17,$00,$02
0003D316 <AmiBlitz3.ab2@29101>   Dc.b $00,$01,$8E,$80
0003D31A <AmiBlitz3.ab2@29102>   Dc.b $03,$00,$00,$00
0003D31E <AmiBlitz3.ab2@29103>   Dc.b $00,$00,$FF,$FF
0003D322 <AmiBlitz3.ab2@29104>   Dc.b $FF,$FF,$FF,$FC
0003D326 <AmiBlitz3.ab2@29105>   Dc.b $80,$00,$00,$00
0003D32A <AmiBlitz3.ab2@29106>   Dc.b $00,$00,$80,$00
0003D32E <AmiBlitz3.ab2@29107>   Dc.b $00,$3F,$BB,$40
0003D332 <AmiBlitz3.ab2@29108>   Dc.b $80,$1F,$C0,$00
0003D336 <AmiBlitz3.ab2@29109>   Dc.b $00,$00,$80,$3F
0003D33A <AmiBlitz3.ab2@29110>   Dc.b $C0,$0F,$BB,$40
0003D33E <AmiBlitz3.ab2@29111>   Dc.b $80,$1F,$C0,$00
0003D342 <AmiBlitz3.ab2@29112>   Dc.b $00,$00,$8E,$00
0003D346 <AmiBlitz3.ab2@29113>   Dc.b $F8,$00,$00,$00
0003D34A <AmiBlitz3.ab2@29114>   Dc.b $8F,$01,$FF,$00
0003D34E <AmiBlitz3.ab2@29115>   Dc.b $3B,$40,$81,$E3
0003D352 <AmiBlitz3.ab2@29116>   Dc.b $F7,$C0,$00,$00
0003D356 <AmiBlitz3.ab2@29117>   Dc.b $80,$7F,$F8,$70
0003D35A <AmiBlitz3.ab2@29118>   Dc.b $3B,$40,$80,$0F
0003D35E <AmiBlitz3.ab2@29119>   Dc.b $7C,$E0,$00,$00
0003D362 <AmiBlitz3.ab2@29120>   Dc.b $80,$00,$FD,$80
0003D366 <AmiBlitz3.ab2@29121>   Dc.b $00,$00,$80,$01
0003D36A <AmiBlitz3.ab2@29122>   Dc.b $F6,$00,$FB,$40
0003D36E <AmiBlitz3.ab2@29123>   Dc.b $80,$03,$EF,$00
0003D372 <AmiBlitz3.ab2@29124>   Dc.b $00,$00,$80,$07
0003D376 <AmiBlitz3.ab2@29125>   Dc.b $87,$80,$3B,$40
0003D37A <AmiBlitz3.ab2@29126>   Dc.b $80,$0F,$01,$C0
0003D37E <AmiBlitz3.ab2@29127>   Dc.b $00,$00,$80,$03
0003D382 <AmiBlitz3.ab2@29128>   Dc.b $F0,$70,$1D,$40
0003D386 <AmiBlitz3.ab2@29129>   Dc.b $80,$00,$18,$1C
0003D38A <AmiBlitz3.ab2@29130>   Dc.b $00,$00,$80,$00
0003D38E <AmiBlitz3.ab2@29131>   Dc.b $10,$06,$03,$40
0003D392 <AmiBlitz3.ab2@29132>   Dc.b $80,$00,$20,$1F
0003D396 <AmiBlitz3.ab2@29133>   Dc.b $00,$00,$80,$00
0003D39A <AmiBlitz3.ab2@29134>   Dc.b $00,$00,$01,$40
0003D39E <AmiBlitz3.ab2@29135>   Dc.b $80,$00,$00,$00
0003D3A2 <AmiBlitz3.ab2@29136>   Dc.b $00,$00,$80,$00
0003D3A6 <AmiBlitz3.ab2@29137>   Dc.b $00,$00,$00,$00
0003D3AA <AmiBlitz3.ab2@29138>   Dc.b $00,$00,$00,$00
0003D3AE <AmiBlitz3.ab2@29139>   Dc.b $00,$00,$00,$00
0003D3B2 <AmiBlitz3.ab2@29140>   Dc.b $00,$00,$00,$04
0003D3B6 <AmiBlitz3.ab2@29141>   Dc.b $00,$3F,$FC,$01
0003D3BA <AmiBlitz3.ab2@29142>   Dc.b $BB,$44,$00,$60
0003D3BE <AmiBlitz3.ab2@29143>   Dc.b $FE,$00,$00,$04
0003D3C2 <AmiBlitz3.ab2@29144>   Dc.b $00,$CF,$FF,$01
0003D3C6 <AmiBlitz3.ab2@29145>   Dc.b $BB,$44,$1F,$EF
0003D3CA <AmiBlitz3.ab2@29146>   Dc.b $FF,$00,$00,$04
0003D3CE <AmiBlitz3.ab2@29147>   Dc.b $33,$FF,$FF,$E0
0003D3D2 <AmiBlitz3.ab2@29148>   Dc.b $00,$04,$37,$FE
0003D3D6 <AmiBlitz3.ab2@29149>   Dc.b $7F,$FC,$1B,$44
0003D3DA <AmiBlitz3.ab2@29150>   Dc.b $0F,$9C,$FF,$FF
0003D3DE <AmiBlitz3.ab2@29151>   Dc.b $00,$04,$03,$E3
0003D3E2 <AmiBlitz3.ab2@29152>   Dc.b $FF,$FF,$DB,$44
0003D3E6 <AmiBlitz3.ab2@29153>   Dc.b $00,$7F,$BF,$FF
0003D3EA <AmiBlitz3.ab2@29154>   Dc.b $80,$04,$00,$0F
0003D3EE <AmiBlitz3.ab2@29155>   Dc.b $3F,$FE,$00,$04
0003D3F2 <AmiBlitz3.ab2@29156>   Dc.b $00,$06,$7F,$F8
0003D3F6 <AmiBlitz3.ab2@29157>   Dc.b $1B,$44,$00,$0C
0003D3FA <AmiBlitz3.ab2@29158>   Dc.b $F7,$FC,$00,$04
0003D3FE <AmiBlitz3.ab2@29159>   Dc.b $00,$19,$F9,$FE
0003D402 <AmiBlitz3.ab2@29160>   Dc.b $1B,$44,$00,$33
0003D406 <AmiBlitz3.ab2@29161>   Dc.b $FE,$7F,$00,$04
0003D40A <AmiBlitz3.ab2@29162>   Dc.b $00,$0F,$FF,$BF
0003D40E <AmiBlitz3.ab2@29163>   Dc.b $CD,$44,$00,$03
0003D412 <AmiBlitz3.ab2@29164>   Dc.b $EF,$EF,$F0,$04
0003D416 <AmiBlitz3.ab2@29165>   Dc.b $00,$00,$7F,$DF
0003D41A <AmiBlitz3.ab2@29166>   Dc.b $FB,$44,$00,$00
0003D41E <AmiBlitz3.ab2@29167>   Dc.b $FF,$A7,$FC,$04
0003D422 <AmiBlitz3.ab2@29168>   Dc.b $00,$00,$7E,$3F
0003D426 <AmiBlitz3.ab2@29169>   Dc.b $FD,$44,$00,$00
0003D42A <AmiBlitz3.ab2@29170>   Dc.b $00,$00,$00,$04
0003D42E <AmiBlitz3.ab2@29171>   Dc.b $7F,$FF,$FF,$FF
0003D432 <AmiBlitz3.ab2@29172>   Dc.b $FF,$FC,$00,$00
0003D436 <AmiBlitz3.ab2@29173>   Dc.b $00,$01,$00,$00
0003D439 <AmiBlitz3.ab2@29174>   Dc.b $00,$00,$04
0003D43F <AmiBlitz3.ab2@29177> str_infoextention2:  Dc.b ".info",0                           ;infoname org source
0003D497 <AmiBlitz3.ab2@29178> errorlimit_text:     Dc.b "There are too much errors, compiling is stop now. Please fix errors first and try again",0
0003D498 <AmiBlitz3.ab2@29179> Even
0003D49C <AmiBlitz3.ab2@29181> sysdebug:            Dc.l $3F0
0003D4A0 <AmiBlitz3.ab2@29185> exelock              Ds.l 1
0003D4A4 <AmiBlitz3.ab2@29189> includesourceline    Dc.l 0
0003D4A8 <AmiBlitz3.ab2@29190> linenum              Ds.l 1
0003D4AC <AmiBlitz3.ab2@29191> globallinecount      Ds.l 1
0003D4C8 <AmiBlitz3.ab2@29192> myversion            Dc.b "\\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
0003D4CC <AmiBlitz3.ab2@29193> calc_option          Dc.l 1
0003D4D0 <AmiBlitz3.ab2@29194> versioninformation   Dc.l $00
0003D4D4 <AmiBlitz3.ab2@29195> number_of_builds     Dc.l $00
0003D4D8 <AmiBlitz3.ab2@29198> BSS
0003D4DA <AmiBlitz3.ab2@29199> debugnest            Ds.w 1
0003D4DE <AmiBlitz3.ab2@29200> instringf            Ds.l 1
0003D4E2 <AmiBlitz3.ab2@29201> funcscanon           Ds.l 1
0003D4F6 <AmiBlitz3.ab2@29202> storedebugmode       Ds.b 20
0003D4FA <AmiBlitz3.ab2@29203> firsttimepref        Ds.l 1
0003D4FB <AmiBlitz3.ab2@29204> funcparloop          Ds.b 1                   ; is 1 when function calling parameter are compile
0003D4FC <AmiBlitz3.ab2@29205> blitzparloop         Ds.b 1                   ; is 1 when blitzlib calling parameters are compile
0003D4FE <AmiBlitz3.ab2@29206> nostringopt          Ds.w 1
0003D57E <AmiBlitz3.ab2@29207> path2:               Ds.l 32
0003D582 <AmiBlitz3.ab2@29208> typebase             Dc.l 0
0003D584 <AmiBlitz3.ab2@29209> doublepeek           Dc.w 0
0003D588 <AmiBlitz3.ab2@29210> lastoffset           Dc.l 0
0003D58A <AmiBlitz3.ab2@29211> firsttime            Dc.w 0
0003D58E <AmiBlitz3.ab2@29212> lastdestpointer      Dc.l 0
0003D592 <AmiBlitz3.ab2@29213> prevwritedat         Dc.l 0
0003D596 <AmiBlitz3.ab2@29214> lastsourceline       Dc.l 0
0003D59A <AmiBlitz3.ab2@29215> lastwritedat         Dc.l 0
0003D59C <AmiBlitz3.ab2@29216> makeexec             Dc.w 0
0003D59E <AmiBlitz3.ab2@29217> makeexec_remember    Dc.w 0
0003D5A2 <AmiBlitz3.ab2@29218> sharebase            Ds.l 1
0003D5A6 <AmiBlitz3.ab2@29219> tempa7               Ds.l 1
0003D5A8 <AmiBlitz3.ab2@29220> incnif               Ds.w 1
0003D5AC <AmiBlitz3.ab2@29221> tempstore            Ds.l 1
0003D5B0 <AmiBlitz3.ab2@29222> result               Ds.l 1
0003D5B2 <AmiBlitz3.ab2@29223> automode             Ds.w 1
0003D5B4 <AmiBlitz3.ab2@29224> stackcorrect         Ds.w 1
0003D5B6 <AmiBlitz3.ab2@29225> formode              Ds.w 1
0003D5BA <AmiBlitz3.ab2@29226> limitregs            Ds.l 1
0003D5BC <AmiBlitz3.ab2@29227> onestep              Ds.w 1
0003D5C0 <AmiBlitz3.ab2@29228> reqmode              Ds.l 1
0003D660 <AmiBlitz3.ab2@29229> inctab               Ds.l 40
0003D662 <AmiBlitz3.ab2@29230> funcoptimize_deprecated  Ds.w 1 ; deprecated, see comByte_FuncOptimize ; Wanderer
0003D666 <AmiBlitz3.ab2@29231> includeline          Ds.l 1
0003D66A <AmiBlitz3.ab2@29232> morememadd           Ds.l 1
0003D66C <AmiBlitz3.ab2@29233> objectcount          Ds.w 1
0003D670 <AmiBlitz3.ab2@29234> savefuncspace        Ds.l 1
0003D674 <AmiBlitz3.ab2@29235> lasttrap1            Ds.l 1
0003D678 <AmiBlitz3.ab2@29236> currentfunccall      Ds.l 1
0003D679 <AmiBlitz3.ab2@29237> skipfunc             Ds.b 1
0003D67A <AmiBlitz3.ab2@29238> resdisable           Ds.b 1
0003D67B <AmiBlitz3.ab2@29239> skiptoggle           Ds.b 1
0003D67C <AmiBlitz3.ab2@29240> developobject        Ds.b 1
0003D67E <AmiBlitz3.ab2@29241> iniffcommand         Ds.w 1
0003D680 <AmiBlitz3.ab2@29242> startoffsetmore      Ds.w 1
0003D682 <AmiBlitz3.ab2@29243> olddebugmode         Ds.w 1
0003D686 <AmiBlitz3.ab2@29244> fpucodeglobal        Ds.l 1
0003D68A <AmiBlitz3.ab2@29245> fpucodelocal         Ds.l 1
0003D68E <AmiBlitz3.ab2@29246> maxregs              Ds.l 1
0003D692 <AmiBlitz3.ab2@29247> fpucode              Ds.l 1
0003D694 <AmiBlitz3.ab2@29248> firstmline           Ds.w 1
0003D6D4 <AmiBlitz3.ab2@29249> regtable             Ds.l 16
0003D6D6 <AmiBlitz3.ab2@29250> exdebug              Ds.w 1
0003D6D8 <AmiBlitz3.ab2@29251> a2offset2            Ds.w 1
0003D6DC <AmiBlitz3.ab2@29252> parnumtemp           Ds.l 1
0003D6DD <AmiBlitz3.ab2@29253> doimmediate          Ds.b 1
0003D6DE <AmiBlitz3.ab2@29254> notypecheck          Ds.b 1
0003D6E0 <AmiBlitz3.ab2@29255> vartype              Ds.w 1
0003D6E1 <AmiBlitz3.ab2@29256> peekaddrsize         Ds.b 1
0003D6E2 <AmiBlitz3.ab2@29257> declare2             Ds.b 1
0003D6E4 <AmiBlitz3.ab2@29258> parameternum         Ds.w 1
0003D6E8 <AmiBlitz3.ab2@29259> lasttoken            Ds.l 1
0003D6EA <AmiBlitz3.ab2@29260> newvariable          Ds.w 1
0003D6EB <AmiBlitz3.ab2@29261> declare              Ds.b 1
0003D6EC <AmiBlitz3.ab2@29262> typecheck            Ds.b 1
0003D6ED <AmiBlitz3.ab2@29263> nowdeclare           Ds.b 1
0003D6EE <AmiBlitz3.ab2@29264> dimkeep              Ds.b 1
0003D6EF <AmiBlitz3.ab2@29265> a4a5store            Ds.b 1
0003D6F0 <AmiBlitz3.ab2@29266> ___freetouse         Ds.b 1
0003D6F4 <AmiBlitz3.ab2@29267> firstiffstore        Ds.l 1
0003D6F8 <AmiBlitz3.ab2@29268> destpointer2         Ds.l 1
0003D6FC <AmiBlitz3.ab2@29269> stackaddr            Ds.l 1
0003D800 <AmiBlitz3.ab2@29270> allowtab             Ds.b 260
0003D900 <AmiBlitz3.ab2@29271> templine             Ds.b 256
0003D902 <AmiBlitz3.ab2@29272> thenmode             Ds.w 1
0003D904 <AmiBlitz3.ab2@29273> temp                 Ds.w 1
0003D906 <AmiBlitz3.ab2@29274> tempregnum           Ds.w 1
0003D90A <AmiBlitz3.ab2@29276> numlines2            Ds.l 1
0003D90E <AmiBlitz3.ab2@29277> numlines             Ds.l 1
0003D910 <AmiBlitz3.ab2@29278> exmac                Ds.w 1
0003D912 <AmiBlitz3.ab2@29279> returncode           Ds.w 1
0003D916 <AmiBlitz3.ab2@29280> fp0iff               Ds.l 1
0003D91A <AmiBlitz3.ab2@29281> fp0addr              Ds.l 1
0003D91C <AmiBlitz3.ab2@29282> fp0mode              Ds.w 1
0003D91E <AmiBlitz3.ab2@29283> fp0var               Ds.w 1
0003D920 <AmiBlitz3.ab2@29284> fastfunc             Ds.w 1
0003D922 <AmiBlitz3.ab2@29285> retmode              Ds.w 1
0003D924 <AmiBlitz3.ab2@29286> parnum               Ds.w 1
0003D926 <AmiBlitz3.ab2@29287> regmask              Ds.w 1
0003D928 <AmiBlitz3.ab2@29288> regnumfunc           Ds.w 1
0003D92A <AmiBlitz3.ab2@29289> libmode              Ds.w 1
0003D92E <AmiBlitz3.ab2@29290> oldline              Ds.l 1
0003D932 <AmiBlitz3.ab2@29291> sourceline3          Ds.l 1
0003D9FA <AmiBlitz3.ab2@29292> debugstore           Ds.b 200
0003D9FE <AmiBlitz3.ab2@29293> deststore            Ds.l 1
0003DA02 <AmiBlitz3.ab2@29295> loada                Ds.l 1
0003DA06 <AmiBlitz3.ab2@29297> currtype             Ds.l 1
0003DA0A <AmiBlitz3.ab2@29298> arrayoffset          Ds.l 1
0003DA0E <AmiBlitz3.ab2@29299> lastlabel            Ds.l 1
0003DA12 <AmiBlitz3.ab2@29300> curtemplabel         Ds.l 1
0003DA16 <AmiBlitz3.ab2@29301> sourceline2          Ds.l 1
0003DB16 <AmiBlitz3.ab2@29302> chartab              Ds.b 256
0003DB8E <AmiBlitz3.ab2@29303> tempspace            Ds.b 120
000BDB9E <AmiBlitz3.ab2@29304> instrtab             Ds.l 65538*2
000C5B9E <AmiBlitz3.ab2@29306> labelhash            Ds.l 8192                             ;-bssstore clear every compile pass
000E5BA2 <AmiBlitz3.ab2@29307> replacedat           Ds.w 65538
000EDBA2 <AmiBlitz3.ab2@29308> variablehash         Ds.l 8192
000EDBA6 <AmiBlitz3.ab2@29309> newinitaddr          Ds.l 1
000EDBAA <AmiBlitz3.ab2@29310> realbssend           Ds.l 1
000EDBAC <AmiBlitz3.ab2@29311> saved0               Ds.w 1
000EDC2C <AmiBlitz3.ab2@29312> lastpath             Ds.b 128
000EDCAC <AmiBlitz3.ab2@29313> lastpath2            Ds.b 128
000EDD74 <AmiBlitz3.ab2@29314> fpustackbase         Ds.w 100
000EDD78 <AmiBlitz3.ab2@29315> 
000EDD7A <AmiBlitz3.ab2@29316> isconstantvalue      Dc.w 0  ; contain a type (1-7) if a constant expression is used as a Parameter or on right side of =
000EDD7E <AmiBlitz3.ab2@29317> lastfunction         Dc.l 0  ; the address of the function in the Parameter or rght side of =
000EDD82 <AmiBlitz3.ab2@29318> leftsidetype         Dc.l 0  ;this contain the address of the type from the left side of the variable assign
000EDD86 <AmiBlitz3.ab2@29319> rightsidetype        Dc.l 0  ; same as above but right side
000EDD8A <AmiBlitz3.ab2@29322> trap15temp           Ds.l 1
000EDD8E <AmiBlitz3.ab2@29323> trap15temp2          Ds.l 1
000EDD92 <AmiBlitz3.ab2@29324> templibend           Ds.l 1
000EDD96 <AmiBlitz3.ab2@29325> tempdata1start       Ds.l 1
000EDD9A <AmiBlitz3.ab2@29326> stacktrack           Ds.l 1
000EDD9E <AmiBlitz3.ab2@29327> pad                  Ds.l 1
000EDE9E <AmiBlitz3.ab2@29328> includetemp          Ds.b 256
000EE89E <AmiBlitz3.ab2@29329> includetemp2         Ds.b 256*10
000EE8A0 <AmiBlitz3.ab2@29330> funccall             Ds.w 1
000EE8A4 <AmiBlitz3.ab2@29333> ptr_resfile          Ds.l 1
000EE8A6 <AmiBlitz3.ab2@29334> CalculatorButtonBinFlag:    Ds.w 1
000EE8A8 <AmiBlitz3.ab2@29335> CalculatorButtonDecFlag:    Ds.w 1
000EE8AC <AmiBlitz3.ab2@29336> ped_startup_addr:    Ds.l 1
000EE8AD <AmiBlitz3.ab2@29337> start_without_libs:  Ds.b 1
000EE8AE <AmiBlitz3.ab2@29338> skip_bytes:          Ds.b 1
000EE8B2 <AmiBlitz3.ab2@29339> functionreturntype   Ds.l 1  ; a temp store of it.do not read this value
000EE8B6 <AmiBlitz3.ab2@29340> beforeparameterfetch Ds.l 1
000EE8BA <AmiBlitz3.ab2@29341> typetocast           Ds.l 1
000EE8BE <AmiBlitz3.ab2@29342> errorcounter         Ds.l 1
000EE8BF <AmiBlitz3.ab2@29343> iserror              Ds.b 1
000EE8C0 <AmiBlitz3.ab2@29344> Even
000EE8C4 <AmiBlitz3.ab2@29346> CLIMode:             Dc.l 0
000EE8C8 <AmiBlitz3.ab2@29347> XTRAEndPadBytes:     Dc.l 0                             ; 4 fill/pad/termination bytes for the xtra write function  tomsmart1
