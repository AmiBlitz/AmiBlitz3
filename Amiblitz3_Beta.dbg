00000008 <AmiBlitz3_wizzard.ab2@0> 
00000014 <AmiBlitz3_wizzard.ab2@43> optimize 5                               ; don't use FPU (opt. 4)
00000076 <AmiBlitz3_wizzard.ab2@64> !initasm                                 ; some initial mumbo jumbo
000000A0 <AmiBlitz3_wizzard.ab2@65> !basic
000000AC <AmiBlitz3_wizzard.ab2@70> cli_verbose = -1
000000B2 <AmiBlitz3_wizzard.ab2@71> CLIMode     = False
000000C8 <AmiBlitz3_wizzard.ab2@72> MaxLen cli_tempstr.s = 1024
000000E4 <AmiBlitz3_wizzard.ab2@73> GetCurrentDirName_ &cli_tempstr,1024  ; get the current dir to restore it on exit
0000010E <AmiBlitz3_wizzard.ab2@74> cli_path.s = Peek.s(&cli_tempstr)
0000010E <library_offsets.ab3@1> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <AmiBlitz3_wizzard.ab2@78> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <dos.include.bb2@1> XINCLUDE "dos.include.bb2"
0000010E <error.include.bb2@1> XINCLUDE "dos.include.bb2"
00000146 <error.include.bb2@62> XINCLUDE "dos.include.bb2"
0000016E <error.include.bb2@63> XINCLUDE "dos.include.bb2"
00000196 <error.include.bb2@64> XINCLUDE "dos.include.bb2"
000001BE <error.include.bb2@65> XINCLUDE "dos.include.bb2"
000001C4 <error.include.bb2@66> XINCLUDE "dos.include.bb2"
000001F8 <error.include.bb2@67> XINCLUDE "dos.include.bb2"
0000022C <error.include.bb2@68> XINCLUDE "dos.include.bb2"
00000260 <error.include.bb2@69> XINCLUDE "dos.include.bb2"
0000027C <error.include.bb2@73> XINCLUDE "dos.include.bb2"
00000296 <error.include.bb2@99> XINCLUDE "dos.include.bb2"
000002A2 <error.include.bb2@101> XINCLUDE "dos.include.bb2"
000002A6 <error.include.bb2@102> XINCLUDE "dos.include.bb2"
000002B4 <error.include.bb2@104> XINCLUDE "dos.include.bb2"
000002E6 <error.include.bb2@124> XINCLUDE "dos.include.bb2"
0000036A <error.include.bb2@126> XINCLUDE "dos.include.bb2"
00000384 <error.include.bb2@128> XINCLUDE "dos.include.bb2"
000003BC <error.include.bb2@129> XINCLUDE "dos.include.bb2"
0000041C <error.include.bb2@130> XINCLUDE "dos.include.bb2"
0000042A <error.include.bb2@132> XINCLUDE "dos.include.bb2"
00000438 <error.include.bb2@133> XINCLUDE "dos.include.bb2"
00000446 <error.include.bb2@134> XINCLUDE "dos.include.bb2"
00000454 <error.include.bb2@135> XINCLUDE "dos.include.bb2"
0000047C <error.include.bb2@136> XINCLUDE "dos.include.bb2"
0000048A <error.include.bb2@137> XINCLUDE "dos.include.bb2"
00000492 <error.include.bb2@138> XINCLUDE "dos.include.bb2"
000004C4 <error.include.bb2@140> XINCLUDE "dos.include.bb2"
000004DE <error.include.bb2@145> XINCLUDE "dos.include.bb2"
00000516 <error.include.bb2@146> XINCLUDE "dos.include.bb2"
0000051C <error.include.bb2@147> XINCLUDE "dos.include.bb2"
00000560 <error.include.bb2@148> XINCLUDE "dos.include.bb2"
000005A8 <error.include.bb2@149> XINCLUDE "dos.include.bb2"
000005B2 <error.include.bb2@153> XINCLUDE "dos.include.bb2"
000005CA <error.include.bb2@155> XINCLUDE "dos.include.bb2"
00000604 <error.include.bb2@194> XINCLUDE "dos.include.bb2"
0000060C <error.include.bb2@196> XINCLUDE "dos.include.bb2"
0000062E <error.include.bb2@198> XINCLUDE "dos.include.bb2"
0000068E <error.include.bb2@199> XINCLUDE "dos.include.bb2"
0000069C <error.include.bb2@201> XINCLUDE "dos.include.bb2"
000006AA <error.include.bb2@202> XINCLUDE "dos.include.bb2"
000006B8 <error.include.bb2@203> XINCLUDE "dos.include.bb2"
000006C6 <error.include.bb2@204> XINCLUDE "dos.include.bb2"
00000726 <error.include.bb2@205> XINCLUDE "dos.include.bb2"
00000734 <error.include.bb2@206> XINCLUDE "dos.include.bb2"
0000076A <error.include.bb2@209> XINCLUDE "dos.include.bb2"
00000774 <error.include.bb2@213> XINCLUDE "dos.include.bb2"
00000790 <error.include.bb2@214> XINCLUDE "dos.include.bb2"
00000790 <multilist.include.bb2@1> XINCLUDE "dos.include.bb2"
00000790 <strptr.include.bb2@1> XINCLUDE "dos.include.bb2"
00000790 <useful.include.bb2@1> XINCLUDE "dos.include.bb2"
000007BE <useful.include.bb2@220> XINCLUDE "dos.include.bb2"
000007C8 <useful.include.bb2@221> XINCLUDE "dos.include.bb2"
000007DC <useful.include.bb2@222> XINCLUDE "dos.include.bb2"
000007E4 <useful.include.bb2@223> XINCLUDE "dos.include.bb2"
0000080C <useful.include.bb2@224> XINCLUDE "dos.include.bb2"
00000832 <useful.include.bb2@225> XINCLUDE "dos.include.bb2"
00000852 <useful.include.bb2@228> XINCLUDE "dos.include.bb2"
00000860 <useful.include.bb2@229> XINCLUDE "dos.include.bb2"
00000886 <useful.include.bb2@230> XINCLUDE "dos.include.bb2"
0000088E <useful.include.bb2@233> XINCLUDE "dos.include.bb2"
00000896 <useful.include.bb2@234> XINCLUDE "dos.include.bb2"
0000089C <useful.include.bb2@235> XINCLUDE "dos.include.bb2"
000008B8 <useful.include.bb2@236> XINCLUDE "dos.include.bb2"
000008DC <useful.include.bb2@237> XINCLUDE "dos.include.bb2"
000008F0 <useful.include.bb2@238> XINCLUDE "dos.include.bb2"
000008F6 <useful.include.bb2@239> XINCLUDE "dos.include.bb2"
00000940 <useful.include.bb2@240> XINCLUDE "dos.include.bb2"
00000942 <useful.include.bb2@241> XINCLUDE "dos.include.bb2"
00000950 <useful.include.bb2@243> XINCLUDE "dos.include.bb2"
00000970 <useful.include.bb2@245> XINCLUDE "dos.include.bb2"
000009CE <useful.include.bb2@246> XINCLUDE "dos.include.bb2"
000009D4 <useful.include.bb2@247> XINCLUDE "dos.include.bb2"
000009E2 <useful.include.bb2@248> XINCLUDE "dos.include.bb2"
000009F6 <useful.include.bb2@249> XINCLUDE "dos.include.bb2"
00000A08 <useful.include.bb2@250> XINCLUDE "dos.include.bb2"
00000A16 <useful.include.bb2@251> XINCLUDE "dos.include.bb2"
00000A1C <useful.include.bb2@252> XINCLUDE "dos.include.bb2"
00000A28 <useful.include.bb2@253> XINCLUDE "dos.include.bb2"
00000A3C <useful.include.bb2@256> XINCLUDE "dos.include.bb2"
00000A50 <useful.include.bb2@257> XINCLUDE "dos.include.bb2"
00000A62 <useful.include.bb2@258> XINCLUDE "dos.include.bb2"
00000A70 <useful.include.bb2@259> XINCLUDE "dos.include.bb2"
00000A8E <useful.include.bb2@260> XINCLUDE "dos.include.bb2"
00000A94 <useful.include.bb2@261> XINCLUDE "dos.include.bb2"
00000AA8 <useful.include.bb2@265> XINCLUDE "dos.include.bb2"
00000AB2 <useful.include.bb2@266> XINCLUDE "dos.include.bb2"
00000ABA <useful.include.bb2@267> XINCLUDE "dos.include.bb2"
00000AD8 <useful.include.bb2@268> XINCLUDE "dos.include.bb2"
00000ADE <useful.include.bb2@269> XINCLUDE "dos.include.bb2"
00000B0A <useful.include.bb2@270> XINCLUDE "dos.include.bb2"
00000B10 <useful.include.bb2@272> XINCLUDE "dos.include.bb2"
00000B22 <useful.include.bb2@273> XINCLUDE "dos.include.bb2"
00000B3A <useful.include.bb2@274> XINCLUDE "dos.include.bb2"
00000B52 <useful.include.bb2@275> XINCLUDE "dos.include.bb2"
00000B70 <useful.include.bb2@276> XINCLUDE "dos.include.bb2"
00000B72 <useful.include.bb2@278> XINCLUDE "dos.include.bb2"
00000B80 <useful.include.bb2@279> XINCLUDE "dos.include.bb2"
00000BA6 <useful.include.bb2@280> XINCLUDE "dos.include.bb2"
00000C3A <useful.include.bb2@281> XINCLUDE "dos.include.bb2"
00000C48 <useful.include.bb2@283> XINCLUDE "dos.include.bb2"
00000C4E <useful.include.bb2@284> XINCLUDE "dos.include.bb2"
00000C78 <useful.include.bb2@285> XINCLUDE "dos.include.bb2"
00000C96 <useful.include.bb2@286> XINCLUDE "dos.include.bb2"
00000C96 <strptr.include.bb2@31> XINCLUDE "dos.include.bb2"
00000CC0 <strptr.include.bb2@33> XINCLUDE "dos.include.bb2"
00000CDA <strptr.include.bb2@84> XINCLUDE "dos.include.bb2"
00000CE4 <strptr.include.bb2@85> XINCLUDE "dos.include.bb2"
00000D34 <strptr.include.bb2@86> XINCLUDE "dos.include.bb2"
00000D38 <strptr.include.bb2@88> XINCLUDE "dos.include.bb2"
00000D66 <strptr.include.bb2@137> XINCLUDE "dos.include.bb2"
00000D70 <strptr.include.bb2@138> XINCLUDE "dos.include.bb2"
00000DC0 <strptr.include.bb2@139> XINCLUDE "dos.include.bb2"
00000DD4 <strptr.include.bb2@140> XINCLUDE "dos.include.bb2"
00000DE6 <strptr.include.bb2@141> XINCLUDE "dos.include.bb2"
00000E0E <strptr.include.bb2@142> XINCLUDE "dos.include.bb2"
00000E18 <strptr.include.bb2@143> XINCLUDE "dos.include.bb2"
00000E26 <strptr.include.bb2@144> XINCLUDE "dos.include.bb2"
00000E30 <strptr.include.bb2@145> XINCLUDE "dos.include.bb2"
00000E58 <strptr.include.bb2@146> XINCLUDE "dos.include.bb2"
00000E72 <strptr.include.bb2@147> XINCLUDE "dos.include.bb2"
00000E8A <strptr.include.bb2@151> XINCLUDE "dos.include.bb2"
00000EA4 <strptr.include.bb2@213> XINCLUDE "dos.include.bb2"
00000EAE <strptr.include.bb2@214> XINCLUDE "dos.include.bb2"
00000EBC <strptr.include.bb2@215> XINCLUDE "dos.include.bb2"
00000EEE <strptr.include.bb2@216> XINCLUDE "dos.include.bb2"
00000F0C <strptr.include.bb2@218> XINCLUDE "dos.include.bb2"
00000F16 <strptr.include.bb2@219> XINCLUDE "dos.include.bb2"
00000F2C <strptr.include.bb2@221> XINCLUDE "dos.include.bb2"
00000F36 <strptr.include.bb2@222> XINCLUDE "dos.include.bb2"
00000F46 <strptr.include.bb2@223> XINCLUDE "dos.include.bb2"
00000F4E <strptr.include.bb2@224> XINCLUDE "dos.include.bb2"
00000F50 <strptr.include.bb2@226> XINCLUDE "dos.include.bb2"
00000F7E <strptr.include.bb2@227> XINCLUDE "dos.include.bb2"
00000F7E <multilist.include.bb2@44> XINCLUDE "dos.include.bb2"
00000F94 <multilist.include.bb2@61> XINCLUDE "dos.include.bb2"
00000FAE <multilist.include.bb2@406> XINCLUDE "dos.include.bb2"
00000FB8 <multilist.include.bb2@407> XINCLUDE "dos.include.bb2"
00000FDA <multilist.include.bb2@408> XINCLUDE "dos.include.bb2"
00000FFE <multilist.include.bb2@409> XINCLUDE "dos.include.bb2"
00001010 <multilist.include.bb2@410> XINCLUDE "dos.include.bb2"
00001028 <multilist.include.bb2@411> XINCLUDE "dos.include.bb2"
0000103C <multilist.include.bb2@412> XINCLUDE "dos.include.bb2"
0000104E <multilist.include.bb2@415> XINCLUDE "dos.include.bb2"
0000105E <multilist.include.bb2@416> XINCLUDE "dos.include.bb2"
00001064 <multilist.include.bb2@417> XINCLUDE "dos.include.bb2"
00001074 <multilist.include.bb2@418> XINCLUDE "dos.include.bb2"
00001084 <multilist.include.bb2@419> XINCLUDE "dos.include.bb2"
0000109E <multilist.include.bb2@420> XINCLUDE "dos.include.bb2"
000010A2 <multilist.include.bb2@422> XINCLUDE "dos.include.bb2"
000010BC <multilist.include.bb2@585> XINCLUDE "dos.include.bb2"
000010EC <multilist.include.bb2@586> XINCLUDE "dos.include.bb2"
000010F6 <multilist.include.bb2@588> XINCLUDE "dos.include.bb2"
00001100 <multilist.include.bb2@589> XINCLUDE "dos.include.bb2"
00001122 <multilist.include.bb2@590> XINCLUDE "dos.include.bb2"
00001146 <multilist.include.bb2@591> XINCLUDE "dos.include.bb2"
00001158 <multilist.include.bb2@592> XINCLUDE "dos.include.bb2"
00001170 <multilist.include.bb2@593> XINCLUDE "dos.include.bb2"
00001184 <multilist.include.bb2@594> XINCLUDE "dos.include.bb2"
00001196 <multilist.include.bb2@597> XINCLUDE "dos.include.bb2"
000011A6 <multilist.include.bb2@598> XINCLUDE "dos.include.bb2"
000011AC <multilist.include.bb2@599> XINCLUDE "dos.include.bb2"
000011BC <multilist.include.bb2@600> XINCLUDE "dos.include.bb2"
000011CC <multilist.include.bb2@601> XINCLUDE "dos.include.bb2"
000011E6 <multilist.include.bb2@602> XINCLUDE "dos.include.bb2"
000011EC <multilist.include.bb2@603> XINCLUDE "dos.include.bb2"
000011F2 <multilist.include.bb2@604> XINCLUDE "dos.include.bb2"
000011F6 <multilist.include.bb2@605> XINCLUDE "dos.include.bb2"
00001210 <multilist.include.bb2@713> XINCLUDE "dos.include.bb2"
00001218 <multilist.include.bb2@714> XINCLUDE "dos.include.bb2"
00001222 <multilist.include.bb2@715> XINCLUDE "dos.include.bb2"
00001238 <multilist.include.bb2@716> XINCLUDE "dos.include.bb2"
0000124C <multilist.include.bb2@717> XINCLUDE "dos.include.bb2"
00001270 <multilist.include.bb2@718> XINCLUDE "dos.include.bb2"
0000127E <multilist.include.bb2@721> XINCLUDE "dos.include.bb2"
00001288 <multilist.include.bb2@722> XINCLUDE "dos.include.bb2"
0000128E <multilist.include.bb2@723> XINCLUDE "dos.include.bb2"
00001298 <multilist.include.bb2@724> XINCLUDE "dos.include.bb2"
0000129E <multilist.include.bb2@725> XINCLUDE "dos.include.bb2"
000012BC <multilist.include.bb2@742> XINCLUDE "dos.include.bb2"
000012C4 <multilist.include.bb2@743> XINCLUDE "dos.include.bb2"
000012CE <multilist.include.bb2@744> XINCLUDE "dos.include.bb2"
000012EC <multilist.include.bb2@745> XINCLUDE "dos.include.bb2"
00001302 <multilist.include.bb2@746> XINCLUDE "dos.include.bb2"
00001316 <multilist.include.bb2@747> XINCLUDE "dos.include.bb2"
0000134A <multilist.include.bb2@748> XINCLUDE "dos.include.bb2"
00001358 <multilist.include.bb2@751> XINCLUDE "dos.include.bb2"
00001362 <multilist.include.bb2@752> XINCLUDE "dos.include.bb2"
00001368 <multilist.include.bb2@753> XINCLUDE "dos.include.bb2"
00001372 <multilist.include.bb2@754> XINCLUDE "dos.include.bb2"
00001376 <multilist.include.bb2@756> XINCLUDE "dos.include.bb2"
0000137C <multilist.include.bb2@757> XINCLUDE "dos.include.bb2"
00001396 <multilist.include.bb2@795> XINCLUDE "dos.include.bb2"
000013A0 <multilist.include.bb2@796> XINCLUDE "dos.include.bb2"
000013AA <multilist.include.bb2@797> XINCLUDE "dos.include.bb2"
000013C0 <multilist.include.bb2@798> XINCLUDE "dos.include.bb2"
000013D0 <multilist.include.bb2@799> XINCLUDE "dos.include.bb2"
000013DA <multilist.include.bb2@801> XINCLUDE "dos.include.bb2"
000013E0 <multilist.include.bb2@802> XINCLUDE "dos.include.bb2"
000013E4 <multilist.include.bb2@803> XINCLUDE "dos.include.bb2"
00001406 <multilist.include.bb2@821> XINCLUDE "dos.include.bb2"
0000140E <multilist.include.bb2@822> XINCLUDE "dos.include.bb2"
00001428 <multilist.include.bb2@823> XINCLUDE "dos.include.bb2"
00001432 <multilist.include.bb2@824> XINCLUDE "dos.include.bb2"
00001448 <multilist.include.bb2@825> XINCLUDE "dos.include.bb2"
0000145C <multilist.include.bb2@826> XINCLUDE "dos.include.bb2"
000014B2 <multilist.include.bb2@827> XINCLUDE "dos.include.bb2"
000014EC <multilist.include.bb2@828> XINCLUDE "dos.include.bb2"
000014FE <multilist.include.bb2@829> XINCLUDE "dos.include.bb2"
00001520 <multilist.include.bb2@830> XINCLUDE "dos.include.bb2"
00001526 <multilist.include.bb2@831> XINCLUDE "dos.include.bb2"
0000157C <multilist.include.bb2@832> XINCLUDE "dos.include.bb2"
000015B6 <multilist.include.bb2@833> XINCLUDE "dos.include.bb2"
000015BC <multilist.include.bb2@835> XINCLUDE "dos.include.bb2"
000015F6 <multilist.include.bb2@836> XINCLUDE "dos.include.bb2"
00001630 <multilist.include.bb2@837> XINCLUDE "dos.include.bb2"
00001642 <multilist.include.bb2@839> XINCLUDE "dos.include.bb2"
0000164C <multilist.include.bb2@840> XINCLUDE "dos.include.bb2"
00001652 <multilist.include.bb2@841> XINCLUDE "dos.include.bb2"
0000165C <multilist.include.bb2@842> XINCLUDE "dos.include.bb2"
00001670 <multilist.include.bb2@843> XINCLUDE "dos.include.bb2"
000016B6 <multilist.include.bb2@870> XINCLUDE "dos.include.bb2"
000016BE <multilist.include.bb2@871> XINCLUDE "dos.include.bb2"
000016DC <multilist.include.bb2@872> XINCLUDE "dos.include.bb2"
00001708 <multilist.include.bb2@873> XINCLUDE "dos.include.bb2"
00001726 <multilist.include.bb2@874> XINCLUDE "dos.include.bb2"
00001740 <multilist.include.bb2@875> XINCLUDE "dos.include.bb2"
0000175A <multilist.include.bb2@876> XINCLUDE "dos.include.bb2"
000017DC <multilist.include.bb2@877> XINCLUDE "dos.include.bb2"
000017F0 <multilist.include.bb2@879> XINCLUDE "dos.include.bb2"
00001808 <multilist.include.bb2@880> XINCLUDE "dos.include.bb2"
0000180E <multilist.include.bb2@881> XINCLUDE "dos.include.bb2"
00001826 <multilist.include.bb2@882> XINCLUDE "dos.include.bb2"
0000183C <multilist.include.bb2@884> XINCLUDE "dos.include.bb2"
00001856 <multilist.include.bb2@886> XINCLUDE "dos.include.bb2"
0000186A <multilist.include.bb2@887> XINCLUDE "dos.include.bb2"
00001878 <multilist.include.bb2@888> XINCLUDE "dos.include.bb2"
000018CE <multilist.include.bb2@889> XINCLUDE "dos.include.bb2"
00001904 <multilist.include.bb2@890> XINCLUDE "dos.include.bb2"
00001934 <multilist.include.bb2@891> XINCLUDE "dos.include.bb2"
000019BC <multilist.include.bb2@893> XINCLUDE "dos.include.bb2"
000019C2 <multilist.include.bb2@894> XINCLUDE "dos.include.bb2"
000019D0 <multilist.include.bb2@895> XINCLUDE "dos.include.bb2"
00001A26 <multilist.include.bb2@896> XINCLUDE "dos.include.bb2"
00001A5C <multilist.include.bb2@897> XINCLUDE "dos.include.bb2"
00001A8C <multilist.include.bb2@898> XINCLUDE "dos.include.bb2"
00001A92 <multilist.include.bb2@901> XINCLUDE "dos.include.bb2"
00001AAC <multilist.include.bb2@902> XINCLUDE "dos.include.bb2"
00001ABA <multilist.include.bb2@903> XINCLUDE "dos.include.bb2"
00001AF4 <multilist.include.bb2@904> XINCLUDE "dos.include.bb2"
00001B2A <multilist.include.bb2@905> XINCLUDE "dos.include.bb2"
00001B5A <multilist.include.bb2@906> XINCLUDE "dos.include.bb2"
00001B68 <multilist.include.bb2@909> XINCLUDE "dos.include.bb2"
00001B72 <multilist.include.bb2@910> XINCLUDE "dos.include.bb2"
00001B78 <multilist.include.bb2@911> XINCLUDE "dos.include.bb2"
00001B82 <multilist.include.bb2@912> XINCLUDE "dos.include.bb2"
00001B96 <multilist.include.bb2@913> XINCLUDE "dos.include.bb2"
00001B96 <dos.include.bb2@57> XINCLUDE "dos.include.bb2"
00001BAC <dos.include.bb2@60> XINCLUDE "dos.include.bb2"
00001BB4 <dos.include.bb2@78> XINCLUDE "dos.include.bb2"
00001BBC <dos.include.bb2@79> XINCLUDE "dos.include.bb2"
00001BE4 <dos.include.bb2@80> XINCLUDE "dos.include.bb2"
00001BEC <dos.include.bb2@81> XINCLUDE "dos.include.bb2"
00001C14 <dos.include.bb2@82> XINCLUDE "dos.include.bb2"
00001C3C <dos.include.bb2@83> XINCLUDE "dos.include.bb2"
00001C64 <dos.include.bb2@84> XINCLUDE "dos.include.bb2"
00001C6C <dos.include.bb2@85> XINCLUDE "dos.include.bb2"
00001C74 <dos.include.bb2@86> XINCLUDE "dos.include.bb2"
00001C7C <dos.include.bb2@87> XINCLUDE "dos.include.bb2"
00001C84 <dos.include.bb2@88> XINCLUDE "dos.include.bb2"
00001C8C <dos.include.bb2@89> XINCLUDE "dos.include.bb2"
00001C94 <dos.include.bb2@90> XINCLUDE "dos.include.bb2"
00001C9C <dos.include.bb2@91> XINCLUDE "dos.include.bb2"
00001CA4 <dos.include.bb2@92> XINCLUDE "dos.include.bb2"
00001CAC <dos.include.bb2@93> XINCLUDE "dos.include.bb2"
00001CCC <dos.include.bb2@94> XINCLUDE "dos.include.bb2"
00001CD4 <dos.include.bb2@95> XINCLUDE "dos.include.bb2"
00001CDC <dos.include.bb2@96> XINCLUDE "dos.include.bb2"
00001D04 <dos.include.bb2@98> XINCLUDE "dos.include.bb2"
00001D1A <dos.include.bb2@129> XINCLUDE "dos.include.bb2"
00001D26 <dos.include.bb2@130> XINCLUDE "dos.include.bb2"
00001D2A <dos.include.bb2@131> XINCLUDE "dos.include.bb2"
00001D40 <dos.include.bb2@144> XINCLUDE "dos.include.bb2"
00001D5A <dos.include.bb2@145> XINCLUDE "dos.include.bb2"
00001D70 <dos.include.bb2@146> XINCLUDE "dos.include.bb2"
00001D9A <dos.include.bb2@147> XINCLUDE "dos.include.bb2"
00001DA4 <dos.include.bb2@148> XINCLUDE "dos.include.bb2"
00001DAA <dos.include.bb2@149> XINCLUDE "dos.include.bb2"
00001DC0 <dos.include.bb2@162> XINCLUDE "dos.include.bb2"
00001DDA <dos.include.bb2@163> XINCLUDE "dos.include.bb2"
00001DF0 <dos.include.bb2@164> XINCLUDE "dos.include.bb2"
00001E1A <dos.include.bb2@165> XINCLUDE "dos.include.bb2"
00001E24 <dos.include.bb2@166> XINCLUDE "dos.include.bb2"
00001E2A <dos.include.bb2@167> XINCLUDE "dos.include.bb2"
00001E54 <dos.include.bb2@183> XINCLUDE "dos.include.bb2"
00001E60 <dos.include.bb2@184> XINCLUDE "dos.include.bb2"
00001E80 <dos.include.bb2@185> XINCLUDE "dos.include.bb2"
00001E8A <dos.include.bb2@186> XINCLUDE "dos.include.bb2"
00001E9A <dos.include.bb2@187> XINCLUDE "dos.include.bb2"
00001EAA <dos.include.bb2@188> XINCLUDE "dos.include.bb2"
00001EB4 <dos.include.bb2@190> XINCLUDE "dos.include.bb2"
00001ECE <dos.include.bb2@191> XINCLUDE "dos.include.bb2"
00001EE4 <dos.include.bb2@429> XINCLUDE "dos.include.bb2"
00001EF6 <dos.include.bb2@431> XINCLUDE "dos.include.bb2"
00001F70 <dos.include.bb2@432> XINCLUDE "dos.include.bb2"
00001F9A <dos.include.bb2@433> XINCLUDE "dos.include.bb2"
00001FB2 <dos.include.bb2@434> XINCLUDE "dos.include.bb2"
00001FC8 <dos.include.bb2@460> XINCLUDE "dos.include.bb2"
00001FDA <dos.include.bb2@461> XINCLUDE "dos.include.bb2"
00001FDE <dos.include.bb2@462> XINCLUDE "dos.include.bb2"
00001FF4 <dos.include.bb2@478> XINCLUDE "dos.include.bb2"
00001FF6 <dos.include.bb2@479> XINCLUDE "dos.include.bb2"
00002030 <dos.include.bb2@540> XINCLUDE "dos.include.bb2"
00002064 <dos.include.bb2@542> XINCLUDE "dos.include.bb2"
0000208A <dos.include.bb2@543> XINCLUDE "dos.include.bb2"
000020AA <dos.include.bb2@544> XINCLUDE "dos.include.bb2"
000020CA <dos.include.bb2@545> XINCLUDE "dos.include.bb2"
000020F4 <dos.include.bb2@660> XINCLUDE "dos.include.bb2"
0000210A <dos.include.bb2@661> XINCLUDE "dos.include.bb2"
00002114 <dos.include.bb2@662> XINCLUDE "dos.include.bb2"
0000213C <dos.include.bb2@663> XINCLUDE "dos.include.bb2"
00002142 <dos.include.bb2@664> XINCLUDE "dos.include.bb2"
0000216A <dos.include.bb2@665> XINCLUDE "dos.include.bb2"
00002194 <dos.include.bb2@667> XINCLUDE "dos.include.bb2"
000021B2 <dos.include.bb2@668> XINCLUDE "dos.include.bb2"
000021DC <dos.include.bb2@691> XINCLUDE "dos.include.bb2"
0000224C <dos.include.bb2@692> XINCLUDE "dos.include.bb2"
00002276 <dos.include.bb2@693> XINCLUDE "dos.include.bb2"
00002294 <dos.include.bb2@694> XINCLUDE "dos.include.bb2"
000022BE <dos.include.bb2@729> XINCLUDE "dos.include.bb2"
000022DE <dos.include.bb2@730> XINCLUDE "dos.include.bb2"
0000230A <dos.include.bb2@731> XINCLUDE "dos.include.bb2"
00002314 <dos.include.bb2@732> XINCLUDE "dos.include.bb2"
0000232E <dos.include.bb2@733> XINCLUDE "dos.include.bb2"
00002358 <dos.include.bb2@880> XINCLUDE "dos.include.bb2"
00002406 <dos.include.bb2@881> XINCLUDE "dos.include.bb2"
0000241C <dos.include.bb2@882> XINCLUDE "dos.include.bb2"
00002426 <dos.include.bb2@883> XINCLUDE "dos.include.bb2"
0000244E <dos.include.bb2@884> XINCLUDE "dos.include.bb2"
00002458 <dos.include.bb2@885> XINCLUDE "dos.include.bb2"
0000245E <dos.include.bb2@886> XINCLUDE "dos.include.bb2"
00002464 <dos.include.bb2@887> XINCLUDE "dos.include.bb2"
0000246A <dos.include.bb2@888> XINCLUDE "dos.include.bb2"
0000247C <dos.include.bb2@890> XINCLUDE "dos.include.bb2"
00002486 <dos.include.bb2@892> XINCLUDE "dos.include.bb2"
000024A0 <dos.include.bb2@893> XINCLUDE "dos.include.bb2"
000024DE <dos.include.bb2@914> XINCLUDE "dos.include.bb2"
000024E6 <dos.include.bb2@915> XINCLUDE "dos.include.bb2"
00002594 <dos.include.bb2@916> XINCLUDE "dos.include.bb2"
000025A8 <dos.include.bb2@917> XINCLUDE "dos.include.bb2"
000025EA <dos.include.bb2@918> XINCLUDE "dos.include.bb2"
0000260A <dos.include.bb2@920> XINCLUDE "dos.include.bb2"
00002614 <dos.include.bb2@921> XINCLUDE "dos.include.bb2"
00002630 <dos.include.bb2@922> XINCLUDE "dos.include.bb2"
0000266A <dos.include.bb2@974> XINCLUDE "dos.include.bb2"
00002672 <dos.include.bb2@975> XINCLUDE "dos.include.bb2"
00002720 <dos.include.bb2@976> XINCLUDE "dos.include.bb2"
00002756 <dos.include.bb2@977> XINCLUDE "dos.include.bb2"
00002776 <dos.include.bb2@978> XINCLUDE "dos.include.bb2"
00002794 <dos.include.bb2@979> XINCLUDE "dos.include.bb2"
000027B8 <dos.include.bb2@980> XINCLUDE "dos.include.bb2"
000027C2 <dos.include.bb2@982> XINCLUDE "dos.include.bb2"
000027DE <dos.include.bb2@983> XINCLUDE "dos.include.bb2"
00002818 <dos.include.bb2@1000> XINCLUDE "dos.include.bb2"
000028C6 <dos.include.bb2@1001> XINCLUDE "dos.include.bb2"
000028FE <dos.include.bb2@1002> XINCLUDE "dos.include.bb2"
0000291E <dos.include.bb2@1003> XINCLUDE "dos.include.bb2"
00002924 <dos.include.bb2@1004> XINCLUDE "dos.include.bb2"
00002944 <dos.include.bb2@1005> XINCLUDE "dos.include.bb2"
0000294E <dos.include.bb2@1006> XINCLUDE "dos.include.bb2"
00002968 <dos.include.bb2@1007> XINCLUDE "dos.include.bb2"
00002980 <dos.include.bb2@1008> XINCLUDE "dos.include.bb2"
0000298A <dos.include.bb2@1011> XINCLUDE "dos.include.bb2"
000029A6 <dos.include.bb2@1012> XINCLUDE "dos.include.bb2"
000029D0 <dos.include.bb2@1147> XINCLUDE "dos.include.bb2"
000029DE <dos.include.bb2@1149> XINCLUDE "dos.include.bb2"
00002AA4 <dos.include.bb2@1150> XINCLUDE "dos.include.bb2"
00002ACE <dos.include.bb2@1151> XINCLUDE "dos.include.bb2"
00002AF6 <dos.include.bb2@1153> XINCLUDE "dos.include.bb2"
00002B20 <dos.include.bb2@1154> XINCLUDE "dos.include.bb2"
00002B4A <dos.include.bb2@1156> XINCLUDE "dos.include.bb2"
00002B68 <dos.include.bb2@1157> XINCLUDE "dos.include.bb2"
00002B92 <dos.include.bb2@1175> XINCLUDE "dos.include.bb2"
00002BFE <dos.include.bb2@1177> XINCLUDE "dos.include.bb2"
00002C26 <dos.include.bb2@1178> XINCLUDE "dos.include.bb2"
00002C34 <dos.include.bb2@1179> XINCLUDE "dos.include.bb2"
00002C68 <dos.include.bb2@1180> XINCLUDE "dos.include.bb2"
00002C76 <dos.include.bb2@1183> XINCLUDE "dos.include.bb2"
00002C98 <dos.include.bb2@1189> XINCLUDE "dos.include.bb2"
00002CA6 <dos.include.bb2@1193> XINCLUDE "dos.include.bb2"
00002CCA <dos.include.bb2@1194> XINCLUDE "dos.include.bb2"
00002CF4 <dos.include.bb2@1195> XINCLUDE "dos.include.bb2"
00002D1E <dos.include.bb2@1198> XINCLUDE "dos.include.bb2"
00002D3C <dos.include.bb2@1199> XINCLUDE "dos.include.bb2"
00002D66 <dos.include.bb2@1260> XINCLUDE "dos.include.bb2"
00002DBE <dos.include.bb2@1261> XINCLUDE "dos.include.bb2"
00002DE8 <dos.include.bb2@1262> XINCLUDE "dos.include.bb2"
00002E06 <dos.include.bb2@1263> XINCLUDE "dos.include.bb2"
00002E1C <dos.include.bb2@1337> XINCLUDE "dos.include.bb2"
00002E22 <dos.include.bb2@1339> XINCLUDE "dos.include.bb2"
00002E2C <dos.include.bb2@1340> XINCLUDE "dos.include.bb2"
00002E36 <dos.include.bb2@1341> XINCLUDE "dos.include.bb2"
00002E54 <dos.include.bb2@1344> XINCLUDE "dos.include.bb2"
00002E5A <dos.include.bb2@1345> XINCLUDE "dos.include.bb2"
00002E60 <dos.include.bb2@1346> XINCLUDE "dos.include.bb2"
00002E70 <dos.include.bb2@1348> XINCLUDE "dos.include.bb2"
00002E76 <dos.include.bb2@1349> XINCLUDE "dos.include.bb2"
00002E7E <dos.include.bb2@1350> XINCLUDE "dos.include.bb2"
00002EA6 <dos.include.bb2@1351> XINCLUDE "dos.include.bb2"
00002EB0 <dos.include.bb2@1352> XINCLUDE "dos.include.bb2"
00002EBA <dos.include.bb2@1354> XINCLUDE "dos.include.bb2"
00002ECE <dos.include.bb2@1355> XINCLUDE "dos.include.bb2"
00002EE4 <dos.include.bb2@1460> XINCLUDE "dos.include.bb2"
00002EEA <dos.include.bb2@1466> XINCLUDE "dos.include.bb2"
00002F0E <dos.include.bb2@1467> XINCLUDE "dos.include.bb2"
00002F32 <dos.include.bb2@1468> XINCLUDE "dos.include.bb2"
00002F56 <dos.include.bb2@1469> XINCLUDE "dos.include.bb2"
00002F5C <dos.include.bb2@1470> XINCLUDE "dos.include.bb2"
00002F88 <dos.include.bb2@1471> XINCLUDE "dos.include.bb2"
00002F8A <dos.include.bb2@1472> XINCLUDE "dos.include.bb2"
00002FB8 <dos.include.bb2@1473> XINCLUDE "dos.include.bb2"
00002FE2 <dos.include.bb2@1489> XINCLUDE "dos.include.bb2"
00003066 <dos.include.bb2@1492> XINCLUDE "dos.include.bb2"
0000312E <dos.include.bb2@1493> XINCLUDE "dos.include.bb2"
00003138 <dos.include.bb2@1495> XINCLUDE "dos.include.bb2"
00003182 <dos.include.bb2@1496> XINCLUDE "dos.include.bb2"
000031CE <dos.include.bb2@1498> XINCLUDE "dos.include.bb2"
00003206 <dos.include.bb2@1499> XINCLUDE "dos.include.bb2"
00003218 <dos.include.bb2@1500> XINCLUDE "dos.include.bb2"
0000322E <dos.include.bb2@1501> XINCLUDE "dos.include.bb2"
00003234 <dos.include.bb2@1502> XINCLUDE "dos.include.bb2"
0000324A <dos.include.bb2@1503> XINCLUDE "dos.include.bb2"
0000327E <dos.include.bb2@1505> XINCLUDE "dos.include.bb2"
00003284 <dos.include.bb2@1506> XINCLUDE "dos.include.bb2"
0000328E <dos.include.bb2@1508> XINCLUDE "dos.include.bb2"
000032A8 <dos.include.bb2@1509> XINCLUDE "dos.include.bb2"
000032F2 <dos.include.bb2@1539> XINCLUDE "dos.include.bb2"
00003328 <dos.include.bb2@1541> XINCLUDE "dos.include.bb2"
0000334C <dos.include.bb2@1542> XINCLUDE "dos.include.bb2"
00003356 <dos.include.bb2@1543> XINCLUDE "dos.include.bb2"
0000337E <dos.include.bb2@1544> XINCLUDE "dos.include.bb2"
000033C6 <dos.include.bb2@1547> XINCLUDE "dos.include.bb2"
0000349C <dos.include.bb2@1549> XINCLUDE "dos.include.bb2"
000034C6 <dos.include.bb2@1550> XINCLUDE "dos.include.bb2"
000034E6 <dos.include.bb2@1551> XINCLUDE "dos.include.bb2"
00003520 <dos.include.bb2@1570> XINCLUDE "dos.include.bb2"
00003526 <dos.include.bb2@1572> XINCLUDE "dos.include.bb2"
0000352C <dos.include.bb2@1573> XINCLUDE "dos.include.bb2"
00003534 <dos.include.bb2@1574> XINCLUDE "dos.include.bb2"
0000356A <dos.include.bb2@1575> XINCLUDE "dos.include.bb2"
00003578 <dos.include.bb2@1576> XINCLUDE "dos.include.bb2"
00003582 <dos.include.bb2@1577> XINCLUDE "dos.include.bb2"
000035AE <dos.include.bb2@1578> XINCLUDE "dos.include.bb2"
000035BC <dos.include.bb2@1579> XINCLUDE "dos.include.bb2"
000035C6 <dos.include.bb2@1580> XINCLUDE "dos.include.bb2"
000035F4 <dos.include.bb2@1582> XINCLUDE "dos.include.bb2"
00003672 <dos.include.bb2@1585> XINCLUDE "dos.include.bb2"
000036C4 <dos.include.bb2@1588> XINCLUDE "dos.include.bb2"
000036D6 <dos.include.bb2@1589> XINCLUDE "dos.include.bb2"
00003744 <dos.include.bb2@1590> XINCLUDE "dos.include.bb2"
0000374A <dos.include.bb2@1591> XINCLUDE "dos.include.bb2"
00003796 <dos.include.bb2@1592> XINCLUDE "dos.include.bb2"
00003864 <dos.include.bb2@1596> XINCLUDE "dos.include.bb2"
00003944 <dos.include.bb2@1597> XINCLUDE "dos.include.bb2"
000039B0 <dos.include.bb2@1599> XINCLUDE "dos.include.bb2"
000039B6 <dos.include.bb2@1600> XINCLUDE "dos.include.bb2"
000039D2 <dos.include.bb2@1601> XINCLUDE "dos.include.bb2"
000039E0 <dos.include.bb2@1604> XINCLUDE "dos.include.bb2"
000039E6 <dos.include.bb2@1605> XINCLUDE "dos.include.bb2"
000039F8 <dos.include.bb2@1608> XINCLUDE "dos.include.bb2"
00003A0E <dos.include.bb2@1609> XINCLUDE "dos.include.bb2"
00003A18 <dos.include.bb2@1610> XINCLUDE "dos.include.bb2"
00003A34 <dos.include.bb2@1611> XINCLUDE "dos.include.bb2"
00003A5E <dos.include.bb2@2187> XINCLUDE "dos.include.bb2"
00003A72 <dos.include.bb2@2188> XINCLUDE "dos.include.bb2"
00003AB0 <dos.include.bb2@2189> XINCLUDE "dos.include.bb2"
00003B96 <dos.include.bb2@2190> XINCLUDE "dos.include.bb2"
00003B9C <dos.include.bb2@2191> XINCLUDE "dos.include.bb2"
00003BEC <dos.include.bb2@2192> XINCLUDE "dos.include.bb2"
00003C16 <dos.include.bb2@2193> XINCLUDE "dos.include.bb2"
00003C34 <dos.include.bb2@2194> XINCLUDE "dos.include.bb2"
00003C5E <dos.include.bb2@2218> XINCLUDE "dos.include.bb2"
00003C72 <dos.include.bb2@2219> XINCLUDE "dos.include.bb2"
00003CB0 <dos.include.bb2@2220> XINCLUDE "dos.include.bb2"
00003D96 <dos.include.bb2@2221> XINCLUDE "dos.include.bb2"
00003D9C <dos.include.bb2@2222> XINCLUDE "dos.include.bb2"
00003E0E <dos.include.bb2@2223> XINCLUDE "dos.include.bb2"
00003E38 <dos.include.bb2@2224> XINCLUDE "dos.include.bb2"
00003E56 <dos.include.bb2@2225> XINCLUDE "dos.include.bb2"
00003E90 <dos.include.bb2@2251> XINCLUDE "dos.include.bb2"
00003EC8 <dos.include.bb2@2252> XINCLUDE "dos.include.bb2"
00003F20 <dos.include.bb2@2253> XINCLUDE "dos.include.bb2"
00003F84 <dos.include.bb2@2254> XINCLUDE "dos.include.bb2"
00003FAE <dos.include.bb2@2256> XINCLUDE "dos.include.bb2"
00003FCE <dos.include.bb2@2257> XINCLUDE "dos.include.bb2"
00003FF8 <dos.include.bb2@2274> XINCLUDE "dos.include.bb2"
00003FFE <dos.include.bb2@2275> XINCLUDE "dos.include.bb2"
00004014 <dos.include.bb2@2276> XINCLUDE "dos.include.bb2"
0000401E <dos.include.bb2@2277> XINCLUDE "dos.include.bb2"
00004024 <dos.include.bb2@2278> XINCLUDE "dos.include.bb2"
00004034 <dos.include.bb2@2279> XINCLUDE "dos.include.bb2"
0000403E <dos.include.bb2@2281> XINCLUDE "dos.include.bb2"
00004058 <dos.include.bb2@2282> XINCLUDE "dos.include.bb2"
00004086 <dos.include.bb2@2302> XINCLUDE "dos.include.bb2"
000040A0 <dos.include.bb2@2303> XINCLUDE "dos.include.bb2"
000040BE <dos.include.bb2@2304> XINCLUDE "dos.include.bb2"
000040C8 <dos.include.bb2@2305> XINCLUDE "dos.include.bb2"
000040D8 <dos.include.bb2@2306> XINCLUDE "dos.include.bb2"
000040E0 <dos.include.bb2@2307> XINCLUDE "dos.include.bb2"
000040E8 <dos.include.bb2@2309> XINCLUDE "dos.include.bb2"
00004102 <dos.include.bb2@2310> XINCLUDE "dos.include.bb2"
00004130 <dos.include.bb2@2516> XINCLUDE "dos.include.bb2"
00004152 <dos.include.bb2@2517> XINCLUDE "dos.include.bb2"
0000415A <dos.include.bb2@2518> XINCLUDE "dos.include.bb2"
00004168 <dos.include.bb2@2519> XINCLUDE "dos.include.bb2"
00004182 <dos.include.bb2@2521> XINCLUDE "dos.include.bb2"
000041B0 <dos.include.bb2@2540> XINCLUDE "dos.include.bb2"
000041C4 <dos.include.bb2@2541> XINCLUDE "dos.include.bb2"
000041F8 <dos.include.bb2@2542> XINCLUDE "dos.include.bb2"
00004212 <dos.include.bb2@2544> XINCLUDE "dos.include.bb2"
0000421A <dos.include.bb2@2545> XINCLUDE "dos.include.bb2"
00004228 <dos.include.bb2@2546> XINCLUDE "dos.include.bb2"
00004242 <dos.include.bb2@2548> XINCLUDE "dos.include.bb2"
0000426C <dos.include.bb2@2684> XINCLUDE "dos.include.bb2"
00004278 <dos.include.bb2@2686> XINCLUDE "dos.include.bb2"
00004298 <dos.include.bb2@2687> XINCLUDE "dos.include.bb2"
000042BE <dos.include.bb2@2688> XINCLUDE "dos.include.bb2"
000042EA <dos.include.bb2@2689> XINCLUDE "dos.include.bb2"
00004302 <dos.include.bb2@2690> XINCLUDE "dos.include.bb2"
00004310 <dos.include.bb2@2692> XINCLUDE "dos.include.bb2"
00004316 <dos.include.bb2@2693> XINCLUDE "dos.include.bb2"
00004322 <dos.include.bb2@2694> XINCLUDE "dos.include.bb2"
00004328 <dos.include.bb2@2696> XINCLUDE "dos.include.bb2"
00004334 <dos.include.bb2@2697> XINCLUDE "dos.include.bb2"
00004344 <dos.include.bb2@2699> XINCLUDE "dos.include.bb2"
0000434A <dos.include.bb2@2700> XINCLUDE "dos.include.bb2"
00004356 <dos.include.bb2@2701> XINCLUDE "dos.include.bb2"
00004360 <dos.include.bb2@2703> XINCLUDE "dos.include.bb2"
0000437A <dos.include.bb2@2704> XINCLUDE "dos.include.bb2"
0000437A <AmiBlitz3_wizzard.ab2@79> XINCLUDE "dos.include.bb2"
00004388 <AmiBlitz3_wizzard.ab2@81> If dos_FromCLI{}
0000438E <AmiBlitz3_wizzard.ab2@82>   CLIMode.l=True
0000439A <AmiBlitz3_wizzard.ab2@83>   error_SetFlags{#error_stdout}
0000439A <common.ab3@1> XINCLUDE "/Shared/common.ab3"
000043C2 <common.ab3@38> XINCLUDE "/Shared/common.ab3"
000043C8 <common.ab3@250> XINCLUDE "/Shared/common.ab3"
000043CA <common.ab3@251> XINCLUDE "/Shared/common.ab3"
0000455A <common.ab3@252> XINCLUDE "/Shared/common.ab3"
0000455E <common.ab3@253> XINCLUDE "/Shared/common.ab3"
00004562 <common.ab3@255> XINCLUDE "/Shared/common.ab3"
00004566 <common.ab3@256> XINCLUDE "/Shared/common.ab3"
0000456A <common.ab3@258> XINCLUDE "/Shared/common.ab3"
0000456E <common.ab3@259> XINCLUDE "/Shared/common.ab3"
00004572 <common.ab3@260> XINCLUDE "/Shared/common.ab3"
00004576 <common.ab3@261> XINCLUDE "/Shared/common.ab3"
0000457A <common.ab3@262> XINCLUDE "/Shared/common.ab3"
0000457E <common.ab3@263> XINCLUDE "/Shared/common.ab3"
00004582 <common.ab3@264> XINCLUDE "/Shared/common.ab3"
00004586 <common.ab3@265> XINCLUDE "/Shared/common.ab3"
0000458A <common.ab3@266> XINCLUDE "/Shared/common.ab3"
0000458E <common.ab3@268> XINCLUDE "/Shared/common.ab3"
00004592 <common.ab3@270> XINCLUDE "/Shared/common.ab3"
00004596 <common.ab3@271> XINCLUDE "/Shared/common.ab3"
0000459A <common.ab3@272> XINCLUDE "/Shared/common.ab3"
0000459E <common.ab3@273> XINCLUDE "/Shared/common.ab3"
000045A2 <common.ab3@274> XINCLUDE "/Shared/common.ab3"
000045A6 <common.ab3@275> XINCLUDE "/Shared/common.ab3"
000045AA <common.ab3@276> XINCLUDE "/Shared/common.ab3"
000045AE <common.ab3@277> XINCLUDE "/Shared/common.ab3"
000045B2 <common.ab3@278> XINCLUDE "/Shared/common.ab3"
000045B6 <common.ab3@279> XINCLUDE "/Shared/common.ab3"
000045BE <common.ab3@282> XINCLUDE "/Shared/common.ab3"
000045C2 <common.ab3@283> XINCLUDE "/Shared/common.ab3"
000045C4 <common.ab3@284> XINCLUDE "/Shared/common.ab3"
000045C8 <common.ab3@285> XINCLUDE "/Shared/common.ab3"
000045CA <common.ab3@286> XINCLUDE "/Shared/common.ab3"
000045CE <common.ab3@287> XINCLUDE "/Shared/common.ab3"
000045D2 <common.ab3@288> XINCLUDE "/Shared/common.ab3"
000045D6 <common.ab3@289> XINCLUDE "/Shared/common.ab3"
000045DA <common.ab3@290> XINCLUDE "/Shared/common.ab3"
000045DE <common.ab3@291> XINCLUDE "/Shared/common.ab3"
000045E6 <common.ab3@292> XINCLUDE "/Shared/common.ab3"
000045EE <common.ab3@293> XINCLUDE "/Shared/common.ab3"
000045F2 <common.ab3@294> XINCLUDE "/Shared/common.ab3"
000045F6 <common.ab3@295> XINCLUDE "/Shared/common.ab3"
000045FA <common.ab3@296> XINCLUDE "/Shared/common.ab3"
000045FC <common.ab3@298> XINCLUDE "/Shared/common.ab3"
000046BC <common.ab3@299> XINCLUDE "/Shared/common.ab3"
00004704 <common.ab3@300> XINCLUDE "/Shared/common.ab3"
00004708 <common.ab3@302> XINCLUDE "/Shared/common.ab3"
0000470A <common.ab3@303> XINCLUDE "/Shared/common.ab3"
0000470E <common.ab3@304> XINCLUDE "/Shared/common.ab3"
00004710 <common.ab3@305> XINCLUDE "/Shared/common.ab3"
00004712 <common.ab3@306> XINCLUDE "/Shared/common.ab3"
00004714 <common.ab3@307> XINCLUDE "/Shared/common.ab3"
00004716 <common.ab3@308> XINCLUDE "/Shared/common.ab3"
00004718 <common.ab3@310> XINCLUDE "/Shared/common.ab3"
0000471A <common.ab3@311> XINCLUDE "/Shared/common.ab3"
0000471B <common.ab3@313> XINCLUDE "/Shared/common.ab3"
0000471C <common.ab3@314> XINCLUDE "/Shared/common.ab3"
0000471E <common.ab3@315> XINCLUDE "/Shared/common.ab3"
00004720 <common.ab3@316> XINCLUDE "/Shared/common.ab3"
00004722 <common.ab3@318> XINCLUDE "/Shared/common.ab3"
00004724 <common.ab3@321> XINCLUDE "/Shared/common.ab3"
00004726 <common.ab3@323> XINCLUDE "/Shared/common.ab3"
00004728 <common.ab3@325> XINCLUDE "/Shared/common.ab3"
0000472C <common.ab3@327> XINCLUDE "/Shared/common.ab3"
0000472E <common.ab3@329> XINCLUDE "/Shared/common.ab3"
00004730 <common.ab3@330> XINCLUDE "/Shared/common.ab3"
00004732 <common.ab3@332> XINCLUDE "/Shared/common.ab3"
00004736 <common.ab3@334> XINCLUDE "/Shared/common.ab3"
00004738 <common.ab3@335> XINCLUDE "/Shared/common.ab3"
0000473A <common.ab3@336> XINCLUDE "/Shared/common.ab3"
0000473E <common.ab3@339> XINCLUDE "/Shared/common.ab3"
00004740 <common.ab3@340> XINCLUDE "/Shared/common.ab3"
00004742 <common.ab3@341> XINCLUDE "/Shared/common.ab3"
00004744 <common.ab3@342> XINCLUDE "/Shared/common.ab3"
00004746 <common.ab3@344> XINCLUDE "/Shared/common.ab3"
00004748 <common.ab3@345> XINCLUDE "/Shared/common.ab3"
0000474C <common.ab3@347> XINCLUDE "/Shared/common.ab3"
0000474E <common.ab3@348> XINCLUDE "/Shared/common.ab3"
00004750 <common.ab3@349> XINCLUDE "/Shared/common.ab3"
00004752 <common.ab3@353> XINCLUDE "/Shared/common.ab3"
00004754 <common.ab3@354> XINCLUDE "/Shared/common.ab3"
00004758 <common.ab3@355> XINCLUDE "/Shared/common.ab3"
0000475A <common.ab3@361> XINCLUDE "/Shared/common.ab3"
0000475C <common.ab3@363> XINCLUDE "/Shared/common.ab3"
0000475E <common.ab3@365> XINCLUDE "/Shared/common.ab3"
00004760 <common.ab3@366> XINCLUDE "/Shared/common.ab3"
00004762 <common.ab3@367> XINCLUDE "/Shared/common.ab3"
00004766 <common.ab3@368> XINCLUDE "/Shared/common.ab3"
00004768 <common.ab3@369> XINCLUDE "/Shared/common.ab3"
0000476A <common.ab3@370> XINCLUDE "/Shared/common.ab3"
0000476C <common.ab3@371> XINCLUDE "/Shared/common.ab3"
0000476E <common.ab3@372> XINCLUDE "/Shared/common.ab3"
00004770 <common.ab3@374> XINCLUDE "/Shared/common.ab3"
00004772 <common.ab3@376> XINCLUDE "/Shared/common.ab3"
00004774 <common.ab3@378> XINCLUDE "/Shared/common.ab3"
00004778 <common.ab3@379> XINCLUDE "/Shared/common.ab3"
0000477A <common.ab3@380> XINCLUDE "/Shared/common.ab3"
000047A8 <common.ab3@381> XINCLUDE "/Shared/common.ab3"
000047B2 <common.ab3@382> XINCLUDE "/Shared/common.ab3"
000047B6 <common.ab3@383> XINCLUDE "/Shared/common.ab3"
000047B8 <common.ab3@385> XINCLUDE "/Shared/common.ab3"
000047BA <common.ab3@386> XINCLUDE "/Shared/common.ab3"
000047BE <common.ab3@387> XINCLUDE "/Shared/common.ab3"
000047C2 <common.ab3@388> XINCLUDE "/Shared/common.ab3"
000047CB <common.ab3@389> XINCLUDE "/Shared/common.ab3"
000047CE <common.ab3@390> XINCLUDE "/Shared/common.ab3"
000047FB <common.ab3@391> XINCLUDE "/Shared/common.ab3"
0000483B <common.ab3@392> XINCLUDE "/Shared/common.ab3"
00004847 <common.ab3@393> XINCLUDE "/Shared/common.ab3"
00004897 <common.ab3@394> XINCLUDE "/Shared/common.ab3"
000048A3 <common.ab3@395> XINCLUDE "/Shared/common.ab3"
000048F3 <common.ab3@396> XINCLUDE "/Shared/common.ab3"
000049EF <common.ab3@397> XINCLUDE "/Shared/common.ab3"
000049F1 <common.ab3@398> XINCLUDE "/Shared/common.ab3"
00004AB1 <common.ab3@399> XINCLUDE "/Shared/common.ab3"
00004AF1 <common.ab3@400> XINCLUDE "/Shared/common.ab3"
00004AF3 <common.ab3@401> XINCLUDE "/Shared/common.ab3"
00004AF4 <common.ab3@402> XINCLUDE "/Shared/common.ab3"
00004AF8 <common.ab3@405> XINCLUDE "/Shared/common.ab3"
00004AFC <common.ab3@407> XINCLUDE "/Shared/common.ab3"
00004B00 <common.ab3@408> XINCLUDE "/Shared/common.ab3"
00004B04 <common.ab3@409> XINCLUDE "/Shared/common.ab3"
00004B08 <common.ab3@411> XINCLUDE "/Shared/common.ab3"
00004B0C <common.ab3@413> XINCLUDE "/Shared/common.ab3"
00004B10 <common.ab3@414> XINCLUDE "/Shared/common.ab3"
00004B14 <common.ab3@415> XINCLUDE "/Shared/common.ab3"
00004B18 <common.ab3@416> XINCLUDE "/Shared/common.ab3"
00004B1C <common.ab3@417> XINCLUDE "/Shared/common.ab3"
00004B20 <common.ab3@418> XINCLUDE "/Shared/common.ab3"
00004B24 <common.ab3@419> XINCLUDE "/Shared/common.ab3"
00004B28 <common.ab3@420> XINCLUDE "/Shared/common.ab3"
00004B2C <common.ab3@422> XINCLUDE "/Shared/common.ab3"
00004B30 <common.ab3@424> XINCLUDE "/Shared/common.ab3"
00004B34 <common.ab3@426> XINCLUDE "/Shared/common.ab3"
00004B38 <common.ab3@428> XINCLUDE "/Shared/common.ab3"
00004B3C <common.ab3@429> XINCLUDE "/Shared/common.ab3"
00004B46 <common.ab3@430> XINCLUDE "/Shared/common.ab3"
00004B4A <common.ab3@431> XINCLUDE "/Shared/common.ab3"
00004B4E <common.ab3@434> XINCLUDE "/Shared/common.ab3"
00004B50 <common.ab3@435> XINCLUDE "/Shared/common.ab3"
00004B52 <common.ab3@436> XINCLUDE "/Shared/common.ab3"
00004B70 <common.ab3@437> XINCLUDE "/Shared/common.ab3"
00004B74 <common.ab3@438> XINCLUDE "/Shared/common.ab3"
00004B76 <common.ab3@440> XINCLUDE "/Shared/common.ab3"
00004B7A <common.ab3@441> XINCLUDE "/Shared/common.ab3"
00004BAE <common.ab3@442> XINCLUDE "/Shared/common.ab3"
00004BB2 <common.ab3@443> XINCLUDE "/Shared/common.ab3"
00004BC0 <common.ab3@445> XINCLUDE "/Shared/common.ab3"
00004BD2 <common.ab3@446> XINCLUDE "/Shared/common.ab3"
00004BD4 <common.ab3@447> XINCLUDE "/Shared/common.ab3"
00004BE8 <common.ab3@448> XINCLUDE "/Shared/common.ab3"
00004BFE <common.ab3@449> XINCLUDE "/Shared/common.ab3"
00004C14 <common.ab3@450> XINCLUDE "/Shared/common.ab3"
00004C2A <common.ab3@451> XINCLUDE "/Shared/common.ab3"
00004C40 <common.ab3@452> XINCLUDE "/Shared/common.ab3"
00004C42 <common.ab3@453> XINCLUDE "/Shared/common.ab3"
00004C44 <common.ab3@454> XINCLUDE "/Shared/common.ab3"
00004C48 <common.ab3@456> XINCLUDE "/Shared/common.ab3"
00004C4C <common.ab3@458> XINCLUDE "/Shared/common.ab3"
00004C50 <common.ab3@460> XINCLUDE "/Shared/common.ab3"
00004C54 <common.ab3@461> XINCLUDE "/Shared/common.ab3"
00004C58 <common.ab3@462> XINCLUDE "/Shared/common.ab3"
00004C5C <common.ab3@463> XINCLUDE "/Shared/common.ab3"
00004C60 <common.ab3@464> XINCLUDE "/Shared/common.ab3"
00004C64 <common.ab3@465> XINCLUDE "/Shared/common.ab3"
00004C68 <common.ab3@466> XINCLUDE "/Shared/common.ab3"
00004C6C <common.ab3@467> XINCLUDE "/Shared/common.ab3"
00004C72 <common.ab3@468> XINCLUDE "/Shared/common.ab3"
00004C84 <common.ab3@469> XINCLUDE "/Shared/common.ab3"
00004C86 <common.ab3@473> XINCLUDE "/Shared/common.ab3"
00004C8A <common.ab3@474> XINCLUDE "/Shared/common.ab3"
00004C8C <common.ab3@475> XINCLUDE "/Shared/common.ab3"
00004C90 <common.ab3@476> XINCLUDE "/Shared/common.ab3"
00004C92 <common.ab3@477> XINCLUDE "/Shared/common.ab3"
00004C96 <common.ab3@478> XINCLUDE "/Shared/common.ab3"
00004C98 <common.ab3@479> XINCLUDE "/Shared/common.ab3"
00004C9C <common.ab3@480> XINCLUDE "/Shared/common.ab3"
00004C9E <common.ab3@481> XINCLUDE "/Shared/common.ab3"
00004CA2 <common.ab3@482> XINCLUDE "/Shared/common.ab3"
00004CA4 <common.ab3@483> XINCLUDE "/Shared/common.ab3"
00004CA8 <common.ab3@484> XINCLUDE "/Shared/common.ab3"
00004CAA <common.ab3@485> XINCLUDE "/Shared/common.ab3"
00004CAE <common.ab3@486> XINCLUDE "/Shared/common.ab3"
00004CB0 <common.ab3@487> XINCLUDE "/Shared/common.ab3"
00004CB4 <common.ab3@488> XINCLUDE "/Shared/common.ab3"
00004CB6 <common.ab3@489> XINCLUDE "/Shared/common.ab3"
00004CBA <common.ab3@490> XINCLUDE "/Shared/common.ab3"
00004CBC <common.ab3@491> XINCLUDE "/Shared/common.ab3"
00004CC0 <common.ab3@492> XINCLUDE "/Shared/common.ab3"
00004CC2 <common.ab3@493> XINCLUDE "/Shared/common.ab3"
00004CC6 <common.ab3@494> XINCLUDE "/Shared/common.ab3"
00004CC8 <common.ab3@495> XINCLUDE "/Shared/common.ab3"
00004CCC <common.ab3@496> XINCLUDE "/Shared/common.ab3"
00004CCE <common.ab3@497> XINCLUDE "/Shared/common.ab3"
00004CD2 <common.ab3@498> XINCLUDE "/Shared/common.ab3"
00004CD4 <common.ab3@499> XINCLUDE "/Shared/common.ab3"
00004CD8 <common.ab3@500> XINCLUDE "/Shared/common.ab3"
00004CDA <common.ab3@501> XINCLUDE "/Shared/common.ab3"
00004CEE <common.ab3@505> XINCLUDE "/Shared/common.ab3"
00004D02 <common.ab3@506> XINCLUDE "/Shared/common.ab3"
00004D16 <common.ab3@507> XINCLUDE "/Shared/common.ab3"
00004D18 <common.ab3@508> XINCLUDE "/Shared/common.ab3"
00004D1C <common.ab3@509> XINCLUDE "/Shared/common.ab3"
00004D20 <common.ab3@510> XINCLUDE "/Shared/common.ab3"
00004D24 <common.ab3@511> XINCLUDE "/Shared/common.ab3"
00004D28 <common.ab3@512> XINCLUDE "/Shared/common.ab3"
00004D2C <common.ab3@513> XINCLUDE "/Shared/common.ab3"
00004D30 <common.ab3@514> XINCLUDE "/Shared/common.ab3"
00004D34 <common.ab3@515> XINCLUDE "/Shared/common.ab3"
00004D35 <common.ab3@516> XINCLUDE "/Shared/common.ab3"
00004D36 <common.ab3@517> XINCLUDE "/Shared/common.ab3"
00004D37 <common.ab3@518> XINCLUDE "/Shared/common.ab3"
00004D3A <common.ab3@519> XINCLUDE "/Shared/common.ab3"
00004D3E <common.ab3@520> XINCLUDE "/Shared/common.ab3"
00004D42 <common.ab3@521> XINCLUDE "/Shared/common.ab3"
00004D46 <common.ab3@522> XINCLUDE "/Shared/common.ab3"
00004D4A <common.ab3@523> XINCLUDE "/Shared/common.ab3"
00004D4E <common.ab3@524> XINCLUDE "/Shared/common.ab3"
00004D52 <common.ab3@525> XINCLUDE "/Shared/common.ab3"
00004D53 <common.ab3@526> XINCLUDE "/Shared/common.ab3"
00004D54 <common.ab3@527> XINCLUDE "/Shared/common.ab3"
00004D56 <common.ab3@528> XINCLUDE "/Shared/common.ab3"
00004D5A <common.ab3@529> XINCLUDE "/Shared/common.ab3"
00004D5E <common.ab3@530> XINCLUDE "/Shared/common.ab3"
00004D62 <common.ab3@531> XINCLUDE "/Shared/common.ab3"
00004D66 <common.ab3@533> XINCLUDE "/Shared/common.ab3"
00004D6A <common.ab3@534> XINCLUDE "/Shared/common.ab3"
00004D6E <common.ab3@535> XINCLUDE "/Shared/common.ab3"
00004D72 <common.ab3@536> XINCLUDE "/Shared/common.ab3"
00004D76 <common.ab3@537> XINCLUDE "/Shared/common.ab3"
00004D7A <common.ab3@538> XINCLUDE "/Shared/common.ab3"
00004D7E <common.ab3@539> XINCLUDE "/Shared/common.ab3"
00004D82 <common.ab3@540> XINCLUDE "/Shared/common.ab3"
00004D86 <common.ab3@544> XINCLUDE "/Shared/common.ab3"
00004D8A <common.ab3@545> XINCLUDE "/Shared/common.ab3"
00004D8E <common.ab3@546> XINCLUDE "/Shared/common.ab3"
00004D90 <common.ab3@547> XINCLUDE "/Shared/common.ab3"
00004D91 <common.ab3@548> XINCLUDE "/Shared/common.ab3"
00004D95 <common.ab3@549> XINCLUDE "/Shared/common.ab3"
00004D99 <common.ab3@550> XINCLUDE "/Shared/common.ab3"
00004D9D <common.ab3@551> XINCLUDE "/Shared/common.ab3"
00004DA1 <common.ab3@552> XINCLUDE "/Shared/common.ab3"
00004DA2 <common.ab3@554> XINCLUDE "/Shared/common.ab3"
00004DA6 <common.ab3@556> XINCLUDE "/Shared/common.ab3"
00004DAA <common.ab3@557> XINCLUDE "/Shared/common.ab3"
00004DAE <common.ab3@558> XINCLUDE "/Shared/common.ab3"
00004DB2 <common.ab3@559> XINCLUDE "/Shared/common.ab3"
00004DB6 <common.ab3@560> XINCLUDE "/Shared/common.ab3"
00004DB7 <common.ab3@561> XINCLUDE "/Shared/common.ab3"
00004DB8 <common.ab3@563> XINCLUDE "/Shared/common.ab3"
00004DBC <common.ab3@565> XINCLUDE "/Shared/common.ab3"
00004DC0 <common.ab3@566> XINCLUDE "/Shared/common.ab3"
00004DC2 <common.ab3@567> XINCLUDE "/Shared/common.ab3"
00004DC4 <common.ab3@568> XINCLUDE "/Shared/common.ab3"
00004DC8 <common.ab3@572> XINCLUDE "/Shared/common.ab3"
00004DCC <common.ab3@573> XINCLUDE "/Shared/common.ab3"
00004DD0 <common.ab3@575> XINCLUDE "/Shared/common.ab3"
00004DD4 <common.ab3@576> XINCLUDE "/Shared/common.ab3"
00004DD8 <common.ab3@578> XINCLUDE "/Shared/common.ab3"
00004DDC <common.ab3@580> XINCLUDE "/Shared/common.ab3"
00004DE0 <common.ab3@581> XINCLUDE "/Shared/common.ab3"
00004DE4 <common.ab3@582> XINCLUDE "/Shared/common.ab3"
00004DE8 <common.ab3@583> XINCLUDE "/Shared/common.ab3"
00004DEC <common.ab3@584> XINCLUDE "/Shared/common.ab3"
00004DF0 <common.ab3@585> XINCLUDE "/Shared/common.ab3"
00004DF4 <common.ab3@586> XINCLUDE "/Shared/common.ab3"
00004DF8 <common.ab3@587> XINCLUDE "/Shared/common.ab3"
00004DFC <common.ab3@588> XINCLUDE "/Shared/common.ab3"
00004E00 <common.ab3@589> XINCLUDE "/Shared/common.ab3"
00004E04 <common.ab3@590> XINCLUDE "/Shared/common.ab3"
00004E08 <common.ab3@591> XINCLUDE "/Shared/common.ab3"
00004E0C <common.ab3@592> XINCLUDE "/Shared/common.ab3"
00004E10 <common.ab3@593> XINCLUDE "/Shared/common.ab3"
00004E10 <AmiBlitz3_wizzard.ab2@86> XINCLUDE "/Shared/common.ab3"
00004E10 <preprocessor.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E10 <hashmap.include.bb2@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E2E <hashmap.include.bb2@34> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E36 <hashmap.include.bb2@35> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E64 <hashmap.include.bb2@36> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E94 <hashmap.include.bb2@37> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EA4 <hashmap.include.bb2@38> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EAE <hashmap.include.bb2@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EB4 <hashmap.include.bb2@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00004ED6 <hashmap.include.bb2@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EF4 <hashmap.include.bb2@44> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F06 <hashmap.include.bb2@45> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F2E <hashmap.include.bb2@46> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F34 <hashmap.include.bb2@47> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F4E <hashmap.include.bb2@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F66 <hashmap.include.bb2@51> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F78 <hashmap.include.bb2@52> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F86 <hashmap.include.bb2@53> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FBA <hashmap.include.bb2@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FC8 <hashmap.include.bb2@55> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FD2 <hashmap.include.bb2@56> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FE4 <hashmap.include.bb2@57> XINCLUDE "/Shared/preprocessor.include.ab3"
0000501E <hashmap.include.bb2@58> XINCLUDE "/Shared/preprocessor.include.ab3"
0000502E <hashmap.include.bb2@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00005034 <hashmap.include.bb2@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00005044 <hashmap.include.bb2@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00005054 <hashmap.include.bb2@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00005062 <hashmap.include.bb2@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00005072 <hashmap.include.bb2@67> XINCLUDE "/Shared/preprocessor.include.ab3"
00005096 <hashmap.include.bb2@68> XINCLUDE "/Shared/preprocessor.include.ab3"
000050A2 <hashmap.include.bb2@70> XINCLUDE "/Shared/preprocessor.include.ab3"
000050B0 <hashmap.include.bb2@71> XINCLUDE "/Shared/preprocessor.include.ab3"
000050BE <hashmap.include.bb2@72> XINCLUDE "/Shared/preprocessor.include.ab3"
000050CC <hashmap.include.bb2@73> XINCLUDE "/Shared/preprocessor.include.ab3"
000050DA <hashmap.include.bb2@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00005110 <hashmap.include.bb2@75> XINCLUDE "/Shared/preprocessor.include.ab3"
0000511E <hashmap.include.bb2@76> XINCLUDE "/Shared/preprocessor.include.ab3"
0000512E <hashmap.include.bb2@77> XINCLUDE "/Shared/preprocessor.include.ab3"
00005136 <hashmap.include.bb2@78> XINCLUDE "/Shared/preprocessor.include.ab3"
0000513A <hashmap.include.bb2@79> XINCLUDE "/Shared/preprocessor.include.ab3"
00005154 <hashmap.include.bb2@82> XINCLUDE "/Shared/preprocessor.include.ab3"
0000516E <hashmap.include.bb2@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00005188 <hashmap.include.bb2@84> XINCLUDE "/Shared/preprocessor.include.ab3"
000051A8 <hashmap.include.bb2@86> XINCLUDE "/Shared/preprocessor.include.ab3"
000051B2 <hashmap.include.bb2@87> XINCLUDE "/Shared/preprocessor.include.ab3"
000051BE <hashmap.include.bb2@88> XINCLUDE "/Shared/preprocessor.include.ab3"
000051D2 <hashmap.include.bb2@89> XINCLUDE "/Shared/preprocessor.include.ab3"
00005204 <hashmap.include.bb2@90> XINCLUDE "/Shared/preprocessor.include.ab3"
0000521C <hashmap.include.bb2@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00005228 <hashmap.include.bb2@92> XINCLUDE "/Shared/preprocessor.include.ab3"
00005236 <hashmap.include.bb2@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00005244 <hashmap.include.bb2@94> XINCLUDE "/Shared/preprocessor.include.ab3"
00005252 <hashmap.include.bb2@95> XINCLUDE "/Shared/preprocessor.include.ab3"
00005260 <hashmap.include.bb2@96> XINCLUDE "/Shared/preprocessor.include.ab3"
0000528A <hashmap.include.bb2@97> XINCLUDE "/Shared/preprocessor.include.ab3"
00005294 <hashmap.include.bb2@99> XINCLUDE "/Shared/preprocessor.include.ab3"
0000529A <hashmap.include.bb2@100> XINCLUDE "/Shared/preprocessor.include.ab3"
000052C8 <hashmap.include.bb2@103> XINCLUDE "/Shared/preprocessor.include.ab3"
000052E0 <hashmap.include.bb2@104> XINCLUDE "/Shared/preprocessor.include.ab3"
000052FE <hashmap.include.bb2@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00005312 <hashmap.include.bb2@106> XINCLUDE "/Shared/preprocessor.include.ab3"
0000532A <hashmap.include.bb2@107> XINCLUDE "/Shared/preprocessor.include.ab3"
00005352 <hashmap.include.bb2@108> XINCLUDE "/Shared/preprocessor.include.ab3"
0000536A <hashmap.include.bb2@109> XINCLUDE "/Shared/preprocessor.include.ab3"
00005378 <hashmap.include.bb2@110> XINCLUDE "/Shared/preprocessor.include.ab3"
00005386 <hashmap.include.bb2@111> XINCLUDE "/Shared/preprocessor.include.ab3"
00005394 <hashmap.include.bb2@112> XINCLUDE "/Shared/preprocessor.include.ab3"
000053A8 <hashmap.include.bb2@113> XINCLUDE "/Shared/preprocessor.include.ab3"
000053FC <hashmap.include.bb2@114> XINCLUDE "/Shared/preprocessor.include.ab3"
00005426 <hashmap.include.bb2@115> XINCLUDE "/Shared/preprocessor.include.ab3"
0000546A <hashmap.include.bb2@117> XINCLUDE "/Shared/preprocessor.include.ab3"
0000548A <hashmap.include.bb2@118> XINCLUDE "/Shared/preprocessor.include.ab3"
0000549C <hashmap.include.bb2@119> XINCLUDE "/Shared/preprocessor.include.ab3"
000054C0 <hashmap.include.bb2@120> XINCLUDE "/Shared/preprocessor.include.ab3"
000054CE <hashmap.include.bb2@121> XINCLUDE "/Shared/preprocessor.include.ab3"
00005526 <hashmap.include.bb2@122> XINCLUDE "/Shared/preprocessor.include.ab3"
0000556C <hashmap.include.bb2@123> XINCLUDE "/Shared/preprocessor.include.ab3"
00005572 <hashmap.include.bb2@124> XINCLUDE "/Shared/preprocessor.include.ab3"
0000557A <hashmap.include.bb2@125> XINCLUDE "/Shared/preprocessor.include.ab3"
000055A2 <hashmap.include.bb2@127> XINCLUDE "/Shared/preprocessor.include.ab3"
000055B4 <hashmap.include.bb2@128> XINCLUDE "/Shared/preprocessor.include.ab3"
000055C6 <hashmap.include.bb2@129> XINCLUDE "/Shared/preprocessor.include.ab3"
00005600 <hashmap.include.bb2@130> XINCLUDE "/Shared/preprocessor.include.ab3"
00005610 <hashmap.include.bb2@131> XINCLUDE "/Shared/preprocessor.include.ab3"
00005616 <hashmap.include.bb2@133> XINCLUDE "/Shared/preprocessor.include.ab3"
00005626 <hashmap.include.bb2@134> XINCLUDE "/Shared/preprocessor.include.ab3"
0000562C <hashmap.include.bb2@136> XINCLUDE "/Shared/preprocessor.include.ab3"
00005632 <hashmap.include.bb2@138> XINCLUDE "/Shared/preprocessor.include.ab3"
0000564A <hashmap.include.bb2@139> XINCLUDE "/Shared/preprocessor.include.ab3"
00005688 <hashmap.include.bb2@142> XINCLUDE "/Shared/preprocessor.include.ab3"
000056A6 <hashmap.include.bb2@143> XINCLUDE "/Shared/preprocessor.include.ab3"
000056D8 <hashmap.include.bb2@144> XINCLUDE "/Shared/preprocessor.include.ab3"
000056EC <hashmap.include.bb2@145> XINCLUDE "/Shared/preprocessor.include.ab3"
00005700 <hashmap.include.bb2@146> XINCLUDE "/Shared/preprocessor.include.ab3"
00005718 <hashmap.include.bb2@147> XINCLUDE "/Shared/preprocessor.include.ab3"
00005740 <hashmap.include.bb2@149> XINCLUDE "/Shared/preprocessor.include.ab3"
0000574A <hashmap.include.bb2@153> XINCLUDE "/Shared/preprocessor.include.ab3"
00005758 <hashmap.include.bb2@154> XINCLUDE "/Shared/preprocessor.include.ab3"
00005770 <hashmap.include.bb2@155> XINCLUDE "/Shared/preprocessor.include.ab3"
00005776 <hashmap.include.bb2@159> XINCLUDE "/Shared/preprocessor.include.ab3"
0000577E <hashmap.include.bb2@160> XINCLUDE "/Shared/preprocessor.include.ab3"
0000579E <hashmap.include.bb2@163> XINCLUDE "/Shared/preprocessor.include.ab3"
000057C4 <hashmap.include.bb2@164> XINCLUDE "/Shared/preprocessor.include.ab3"
000057CE <hashmap.include.bb2@165> XINCLUDE "/Shared/preprocessor.include.ab3"
000057DC <hashmap.include.bb2@166> XINCLUDE "/Shared/preprocessor.include.ab3"
000057E6 <hashmap.include.bb2@168> XINCLUDE "/Shared/preprocessor.include.ab3"
00005812 <hashmap.include.bb2@169> XINCLUDE "/Shared/preprocessor.include.ab3"
00005826 <hashmap.include.bb2@170> XINCLUDE "/Shared/preprocessor.include.ab3"
0000582C <hashmap.include.bb2@171> XINCLUDE "/Shared/preprocessor.include.ab3"
0000583A <hashmap.include.bb2@172> XINCLUDE "/Shared/preprocessor.include.ab3"
00005870 <hashmap.include.bb2@175> XINCLUDE "/Shared/preprocessor.include.ab3"
000058BE <hashmap.include.bb2@176> XINCLUDE "/Shared/preprocessor.include.ab3"
000058E6 <hashmap.include.bb2@178> XINCLUDE "/Shared/preprocessor.include.ab3"
00005900 <hashmap.include.bb2@179> XINCLUDE "/Shared/preprocessor.include.ab3"
00005912 <hashmap.include.bb2@180> XINCLUDE "/Shared/preprocessor.include.ab3"
0000591C <hashmap.include.bb2@182> XINCLUDE "/Shared/preprocessor.include.ab3"
00005938 <hashmap.include.bb2@183> XINCLUDE "/Shared/preprocessor.include.ab3"
0000595E <hashmap.include.bb2@186> XINCLUDE "/Shared/preprocessor.include.ab3"
0000597C <hashmap.include.bb2@187> XINCLUDE "/Shared/preprocessor.include.ab3"
000059A0 <hashmap.include.bb2@188> XINCLUDE "/Shared/preprocessor.include.ab3"
000059BA <hashmap.include.bb2@189> XINCLUDE "/Shared/preprocessor.include.ab3"
000059E2 <hashmap.include.bb2@190> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A00 <hashmap.include.bb2@191> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A1C <hashmap.include.bb2@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A2A <hashmap.include.bb2@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A3E <hashmap.include.bb2@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A60 <hashmap.include.bb2@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A82 <hashmap.include.bb2@196> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A90 <hashmap.include.bb2@197> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AAA <hashmap.include.bb2@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00005ADA <hashmap.include.bb2@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AE0 <hashmap.include.bb2@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B0E <hashmap.include.bb2@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B50 <hashmap.include.bb2@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B60 <hashmap.include.bb2@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B6A <hashmap.include.bb2@204> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B7A <hashmap.include.bb2@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B80 <hashmap.include.bb2@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B8C <hashmap.include.bb2@210> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B92 <hashmap.include.bb2@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BC0 <hashmap.include.bb2@215> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BF0 <hashmap.include.bb2@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C26 <hashmap.include.bb2@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C3A <hashmap.include.bb2@218> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C52 <hashmap.include.bb2@219> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C7A <hashmap.include.bb2@220> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CAA <hashmap.include.bb2@221> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CC6 <hashmap.include.bb2@222> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CD4 <hashmap.include.bb2@223> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CE8 <hashmap.include.bb2@224> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D3C <hashmap.include.bb2@225> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D66 <hashmap.include.bb2@226> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DAA <hashmap.include.bb2@227> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DD0 <hashmap.include.bb2@228> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DD6 <hashmap.include.bb2@230> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DF4 <hashmap.include.bb2@231> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E12 <hashmap.include.bb2@232> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E30 <hashmap.include.bb2@266> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E36 <hashmap.include.bb2@267> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E5C <hashmap.include.bb2@268> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E8A <hashmap.include.bb2@270> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EB2 <hashmap.include.bb2@271> XINCLUDE "/Shared/preprocessor.include.ab3"
00005ED6 <hashmap.include.bb2@272> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F2C <hashmap.include.bb2@275> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F7E <hashmap.include.bb2@276> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FD4 <hashmap.include.bb2@277> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FE4 <hashmap.include.bb2@280> XINCLUDE "/Shared/preprocessor.include.ab3"
00006036 <hashmap.include.bb2@281> XINCLUDE "/Shared/preprocessor.include.ab3"
0000605E <hashmap.include.bb2@282> XINCLUDE "/Shared/preprocessor.include.ab3"
00006084 <hashmap.include.bb2@283> XINCLUDE "/Shared/preprocessor.include.ab3"
0000609E <hashmap.include.bb2@284> XINCLUDE "/Shared/preprocessor.include.ab3"
000060A6 <hashmap.include.bb2@285> XINCLUDE "/Shared/preprocessor.include.ab3"
000060CE <hashmap.include.bb2@286> XINCLUDE "/Shared/preprocessor.include.ab3"
000060FC <hashmap.include.bb2@289> XINCLUDE "/Shared/preprocessor.include.ab3"
00006124 <hashmap.include.bb2@290> XINCLUDE "/Shared/preprocessor.include.ab3"
0000612C <hashmap.include.bb2@291> XINCLUDE "/Shared/preprocessor.include.ab3"
00006150 <hashmap.include.bb2@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00006184 <hashmap.include.bb2@294> XINCLUDE "/Shared/preprocessor.include.ab3"
000061A0 <hashmap.include.bb2@295> XINCLUDE "/Shared/preprocessor.include.ab3"
000061AA <hashmap.include.bb2@296> XINCLUDE "/Shared/preprocessor.include.ab3"
000061BE <hashmap.include.bb2@297> XINCLUDE "/Shared/preprocessor.include.ab3"
000061DE <hashmap.include.bb2@298> XINCLUDE "/Shared/preprocessor.include.ab3"
000061FA <hashmap.include.bb2@299> XINCLUDE "/Shared/preprocessor.include.ab3"
00006208 <hashmap.include.bb2@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00006216 <hashmap.include.bb2@301> XINCLUDE "/Shared/preprocessor.include.ab3"
0000621C <hashmap.include.bb2@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00006234 <hashmap.include.bb2@303> XINCLUDE "/Shared/preprocessor.include.ab3"
00006244 <hashmap.include.bb2@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00006272 <hashmap.include.bb2@306> XINCLUDE "/Shared/preprocessor.include.ab3"
000062CE <hashmap.include.bb2@307> XINCLUDE "/Shared/preprocessor.include.ab3"
00006346 <hashmap.include.bb2@308> XINCLUDE "/Shared/preprocessor.include.ab3"
000063A2 <hashmap.include.bb2@309> XINCLUDE "/Shared/preprocessor.include.ab3"
000063A8 <hashmap.include.bb2@310> XINCLUDE "/Shared/preprocessor.include.ab3"
000063B2 <hashmap.include.bb2@312> XINCLUDE "/Shared/preprocessor.include.ab3"
000063B8 <hashmap.include.bb2@313> XINCLUDE "/Shared/preprocessor.include.ab3"
000063E6 <hashmap.include.bb2@316> XINCLUDE "/Shared/preprocessor.include.ab3"
000063EC <hashmap.include.bb2@317> XINCLUDE "/Shared/preprocessor.include.ab3"
0000640C <hashmap.include.bb2@318> XINCLUDE "/Shared/preprocessor.include.ab3"
00006416 <hashmap.include.bb2@319> XINCLUDE "/Shared/preprocessor.include.ab3"
00006428 <hashmap.include.bb2@320> XINCLUDE "/Shared/preprocessor.include.ab3"
00006438 <hashmap.include.bb2@321> XINCLUDE "/Shared/preprocessor.include.ab3"
00006442 <hashmap.include.bb2@323> XINCLUDE "/Shared/preprocessor.include.ab3"
0000645C <hashmap.include.bb2@324> XINCLUDE "/Shared/preprocessor.include.ab3"
00006476 <hashmap.include.bb2@327> XINCLUDE "/Shared/preprocessor.include.ab3"
0000647E <hashmap.include.bb2@328> XINCLUDE "/Shared/preprocessor.include.ab3"
00006484 <hashmap.include.bb2@329> XINCLUDE "/Shared/preprocessor.include.ab3"
0000648E <hashmap.include.bb2@330> XINCLUDE "/Shared/preprocessor.include.ab3"
00006496 <hashmap.include.bb2@331> XINCLUDE "/Shared/preprocessor.include.ab3"
000064BE <hashmap.include.bb2@332> XINCLUDE "/Shared/preprocessor.include.ab3"
000064C4 <hashmap.include.bb2@333> XINCLUDE "/Shared/preprocessor.include.ab3"
000064D8 <hashmap.include.bb2@334> XINCLUDE "/Shared/preprocessor.include.ab3"
00006514 <hashmap.include.bb2@336> XINCLUDE "/Shared/preprocessor.include.ab3"
0000653A <hashmap.include.bb2@337> XINCLUDE "/Shared/preprocessor.include.ab3"
00006548 <hashmap.include.bb2@338> XINCLUDE "/Shared/preprocessor.include.ab3"
00006584 <hashmap.include.bb2@340> XINCLUDE "/Shared/preprocessor.include.ab3"
00006598 <hashmap.include.bb2@341> XINCLUDE "/Shared/preprocessor.include.ab3"
000065D4 <hashmap.include.bb2@343> XINCLUDE "/Shared/preprocessor.include.ab3"
000065EA <hashmap.include.bb2@344> XINCLUDE "/Shared/preprocessor.include.ab3"
000065FE <hashmap.include.bb2@346> XINCLUDE "/Shared/preprocessor.include.ab3"
00006608 <hashmap.include.bb2@347> XINCLUDE "/Shared/preprocessor.include.ab3"
0000662C <hashmap.include.bb2@348> XINCLUDE "/Shared/preprocessor.include.ab3"
00006664 <hashmap.include.bb2@349> XINCLUDE "/Shared/preprocessor.include.ab3"
0000666A <hashmap.include.bb2@350> XINCLUDE "/Shared/preprocessor.include.ab3"
00006676 <hashmap.include.bb2@351> XINCLUDE "/Shared/preprocessor.include.ab3"
0000668A <hashmap.include.bb2@354> XINCLUDE "/Shared/preprocessor.include.ab3"
00006694 <hashmap.include.bb2@355> XINCLUDE "/Shared/preprocessor.include.ab3"
000066BC <hashmap.include.bb2@356> XINCLUDE "/Shared/preprocessor.include.ab3"
000066E4 <hashmap.include.bb2@357> XINCLUDE "/Shared/preprocessor.include.ab3"
000066F6 <hashmap.include.bb2@358> XINCLUDE "/Shared/preprocessor.include.ab3"
00006722 <hashmap.include.bb2@359> XINCLUDE "/Shared/preprocessor.include.ab3"
00006756 <hashmap.include.bb2@360> XINCLUDE "/Shared/preprocessor.include.ab3"
00006782 <hashmap.include.bb2@361> XINCLUDE "/Shared/preprocessor.include.ab3"
000067CE <hashmap.include.bb2@362> XINCLUDE "/Shared/preprocessor.include.ab3"
000067DE <hashmap.include.bb2@364> XINCLUDE "/Shared/preprocessor.include.ab3"
000067E4 <hashmap.include.bb2@366> XINCLUDE "/Shared/preprocessor.include.ab3"
000067F0 <hashmap.include.bb2@367> XINCLUDE "/Shared/preprocessor.include.ab3"
0000681E <hashmap.include.bb2@370> XINCLUDE "/Shared/preprocessor.include.ab3"
00006820 <hashmap.include.bb2@372> XINCLUDE "/Shared/preprocessor.include.ab3"
00006826 <hashmap.include.bb2@373> XINCLUDE "/Shared/preprocessor.include.ab3"
00006830 <hashmap.include.bb2@374> XINCLUDE "/Shared/preprocessor.include.ab3"
0000685A <hashmap.include.bb2@375> XINCLUDE "/Shared/preprocessor.include.ab3"
00006864 <hashmap.include.bb2@377> XINCLUDE "/Shared/preprocessor.include.ab3"
0000686A <hashmap.include.bb2@378> XINCLUDE "/Shared/preprocessor.include.ab3"
00006894 <hashmap.include.bb2@381> XINCLUDE "/Shared/preprocessor.include.ab3"
0000689C <hashmap.include.bb2@382> XINCLUDE "/Shared/preprocessor.include.ab3"
000068BC <hashmap.include.bb2@383> XINCLUDE "/Shared/preprocessor.include.ab3"
000068C6 <hashmap.include.bb2@384> XINCLUDE "/Shared/preprocessor.include.ab3"
000068D4 <hashmap.include.bb2@385> XINCLUDE "/Shared/preprocessor.include.ab3"
000068E4 <hashmap.include.bb2@386> XINCLUDE "/Shared/preprocessor.include.ab3"
000068EE <hashmap.include.bb2@388> XINCLUDE "/Shared/preprocessor.include.ab3"
00006908 <hashmap.include.bb2@389> XINCLUDE "/Shared/preprocessor.include.ab3"
00006908 <preprocessor.include.ab3@11> XINCLUDE "/Shared/preprocessor.include.ab3"
00006922 <preprocessor.include.ab3@29> XINCLUDE "/Shared/preprocessor.include.ab3"
0000693C <preprocessor.include.ab3@30> XINCLUDE "/Shared/preprocessor.include.ab3"
0000695E <preprocessor.include.ab3@31> XINCLUDE "/Shared/preprocessor.include.ab3"
00006990 <preprocessor.include.ab3@32> XINCLUDE "/Shared/preprocessor.include.ab3"
00006994 <preprocessor.include.ab3@33> XINCLUDE "/Shared/preprocessor.include.ab3"
000069AE <preprocessor.include.ab3@36> XINCLUDE "/Shared/preprocessor.include.ab3"
000069C8 <preprocessor.include.ab3@37> XINCLUDE "/Shared/preprocessor.include.ab3"
000069D2 <preprocessor.include.ab3@38> XINCLUDE "/Shared/preprocessor.include.ab3"
000069E8 <preprocessor.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
000069EC <preprocessor.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A06 <preprocessor.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A20 <preprocessor.include.ab3@44> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A3A <preprocessor.include.ab3@45> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A5E <preprocessor.include.ab3@46> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A64 <preprocessor.include.ab3@47> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A8E <preprocessor.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AA8 <preprocessor.include.ab3@49> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AB8 <preprocessor.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AC2 <preprocessor.include.ab3@53> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AD0 <preprocessor.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AF2 <preprocessor.include.ab3@55> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B26 <preprocessor.include.ab3@56> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B42 <preprocessor.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B4C <preprocessor.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B68 <preprocessor.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B76 <preprocessor.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B8A <preprocessor.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BAC <preprocessor.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BCE <preprocessor.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BEC <preprocessor.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C1A <preprocessor.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C20 <preprocessor.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C30 <preprocessor.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C34 <preprocessor.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C4A <preprocessor.include.ab3@73> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C6A <preprocessor.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C74 <preprocessor.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C9E <preprocessor.include.ab3@76> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CB4 <preprocessor.include.ab3@77> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CC4 <preprocessor.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CE0 <preprocessor.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CFC <preprocessor.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D18 <preprocessor.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D34 <preprocessor.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D50 <preprocessor.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D6C <preprocessor.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D88 <preprocessor.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DA4 <preprocessor.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DC0 <preprocessor.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DDC <preprocessor.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DF8 <preprocessor.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E14 <preprocessor.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E30 <preprocessor.include.ab3@92> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E4C <preprocessor.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E68 <preprocessor.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E84 <preprocessor.include.ab3@95> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EA0 <preprocessor.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EBC <preprocessor.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
00006ED8 <preprocessor.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EF4 <preprocessor.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F10 <preprocessor.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F2C <preprocessor.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F48 <preprocessor.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F64 <preprocessor.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F80 <preprocessor.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F9C <preprocessor.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FB8 <preprocessor.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FD4 <preprocessor.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FF0 <preprocessor.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
0000700C <preprocessor.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
00007028 <preprocessor.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
00007044 <preprocessor.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
00007060 <preprocessor.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
0000707C <preprocessor.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
00007098 <preprocessor.include.ab3@114> XINCLUDE "/Shared/preprocessor.include.ab3"
000070B4 <preprocessor.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
000070D0 <preprocessor.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
000070EC <preprocessor.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
00007108 <preprocessor.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
00007124 <preprocessor.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
00007140 <preprocessor.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
0000715C <preprocessor.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
00007178 <preprocessor.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
00007194 <preprocessor.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
000071B0 <preprocessor.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
000071CC <preprocessor.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
000071E8 <preprocessor.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
00007204 <preprocessor.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
00007220 <preprocessor.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
0000723C <preprocessor.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
00007258 <preprocessor.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
00007274 <preprocessor.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
00007290 <preprocessor.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
000072AC <preprocessor.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
000072C8 <preprocessor.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
000072E4 <preprocessor.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
00007300 <preprocessor.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
0000731C <preprocessor.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
00007338 <preprocessor.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
00007354 <preprocessor.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
00007370 <preprocessor.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
0000738C <preprocessor.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
000073A8 <preprocessor.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
000073C4 <preprocessor.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
000073E0 <preprocessor.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
000073FC <preprocessor.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
00007418 <preprocessor.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
00007434 <preprocessor.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
00007450 <preprocessor.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
0000746C <preprocessor.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
00007488 <preprocessor.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
000074A4 <preprocessor.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
000074C0 <preprocessor.include.ab3@152> XINCLUDE "/Shared/preprocessor.include.ab3"
000074DC <preprocessor.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
000074F8 <preprocessor.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
00007514 <preprocessor.include.ab3@155> XINCLUDE "/Shared/preprocessor.include.ab3"
00007530 <preprocessor.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
0000754C <preprocessor.include.ab3@157> XINCLUDE "/Shared/preprocessor.include.ab3"
00007568 <preprocessor.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
00007584 <preprocessor.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
000075A0 <preprocessor.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
000075BC <preprocessor.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
000075D8 <preprocessor.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
000075F4 <preprocessor.include.ab3@163> XINCLUDE "/Shared/preprocessor.include.ab3"
00007610 <preprocessor.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
0000762C <preprocessor.include.ab3@165> XINCLUDE "/Shared/preprocessor.include.ab3"
00007648 <preprocessor.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
00007664 <preprocessor.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
00007680 <preprocessor.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
0000769C <preprocessor.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
000076B8 <preprocessor.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
000076D4 <preprocessor.include.ab3@171> XINCLUDE "/Shared/preprocessor.include.ab3"
000076F0 <preprocessor.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
0000770C <preprocessor.include.ab3@173> XINCLUDE "/Shared/preprocessor.include.ab3"
00007728 <preprocessor.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
00007744 <preprocessor.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
00007760 <preprocessor.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
0000777C <preprocessor.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
00007798 <preprocessor.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
000077B4 <preprocessor.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
000077D0 <preprocessor.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
000077EC <preprocessor.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
00007808 <preprocessor.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
00007824 <preprocessor.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
00007840 <preprocessor.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
0000785C <preprocessor.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
00007878 <preprocessor.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
00007894 <preprocessor.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
000078B0 <preprocessor.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
000078CC <preprocessor.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
000078E8 <preprocessor.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
00007904 <preprocessor.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
00007920 <preprocessor.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
0000793C <preprocessor.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00007958 <preprocessor.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00007974 <preprocessor.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00007990 <preprocessor.include.ab3@196> XINCLUDE "/Shared/preprocessor.include.ab3"
000079AC <preprocessor.include.ab3@197> XINCLUDE "/Shared/preprocessor.include.ab3"
000079C8 <preprocessor.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
000079E4 <preprocessor.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A00 <preprocessor.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A1C <preprocessor.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A38 <preprocessor.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A54 <preprocessor.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A70 <preprocessor.include.ab3@204> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A8C <preprocessor.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AA8 <preprocessor.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AC4 <preprocessor.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ACC <preprocessor.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AD6 <preprocessor.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AE0 <preprocessor.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AE6 <preprocessor.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B14 <preprocessor.include.ab3@247> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B30 <preprocessor.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B62 <preprocessor.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B6C <preprocessor.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B8E <preprocessor.include.ab3@251> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B98 <preprocessor.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BA2 <preprocessor.include.ab3@253> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BAC <preprocessor.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BC6 <preprocessor.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BF4 <preprocessor.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C10 <preprocessor.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C1E <preprocessor.include.ab3@261> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C58 <preprocessor.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C60 <preprocessor.include.ab3@264> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C7A <preprocessor.include.ab3@265> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CA0 <preprocessor.include.ab3@272> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CC2 <preprocessor.include.ab3@273> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CE6 <preprocessor.include.ab3@274> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CEC <preprocessor.include.ab3@275> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CFA <preprocessor.include.ab3@276> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D00 <preprocessor.include.ab3@277> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D08 <preprocessor.include.ab3@278> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D0E <preprocessor.include.ab3@279> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D16 <preprocessor.include.ab3@280> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D2A <preprocessor.include.ab3@282> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D50 <preprocessor.include.ab3@283> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D78 <preprocessor.include.ab3@284> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D82 <preprocessor.include.ab3@286> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D96 <preprocessor.include.ab3@287> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DAA <preprocessor.include.ab3@288> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DBA <preprocessor.include.ab3@289> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DD4 <preprocessor.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DFC <preprocessor.include.ab3@291> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E10 <preprocessor.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E32 <preprocessor.include.ab3@293> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E38 <preprocessor.include.ab3@294> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E40 <preprocessor.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E46 <preprocessor.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E68 <preprocessor.include.ab3@298> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E72 <preprocessor.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E80 <preprocessor.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E9E <preprocessor.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EAC <preprocessor.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EB4 <preprocessor.include.ab3@304> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EBA <preprocessor.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ECE <preprocessor.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ED8 <preprocessor.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EE6 <preprocessor.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F00 <preprocessor.include.ab3@312> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F06 <preprocessor.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F0E <preprocessor.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F14 <preprocessor.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F28 <preprocessor.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F32 <preprocessor.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F3A <preprocessor.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F4E <preprocessor.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F62 <preprocessor.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F76 <preprocessor.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F94 <preprocessor.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FA2 <preprocessor.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FB2 <preprocessor.include.ab3@331> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FDA <preprocessor.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FFC <preprocessor.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
00008010 <preprocessor.include.ab3@336> XINCLUDE "/Shared/preprocessor.include.ab3"
0000802E <preprocessor.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
0000803C <preprocessor.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
00008062 <preprocessor.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
0000808A <preprocessor.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
000080AC <preprocessor.include.ab3@342> XINCLUDE "/Shared/preprocessor.include.ab3"
000080DC <preprocessor.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
0000810A <preprocessor.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
0000813C <preprocessor.include.ab3@350> XINCLUDE "/Shared/preprocessor.include.ab3"
0000814A <preprocessor.include.ab3@352> XINCLUDE "/Shared/preprocessor.include.ab3"
00008150 <preprocessor.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
00008160 <preprocessor.include.ab3@356> XINCLUDE "/Shared/preprocessor.include.ab3"
00008166 <preprocessor.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
0000818C <preprocessor.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
000081AE <preprocessor.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
000081D6 <preprocessor.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
000081F6 <preprocessor.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
00008218 <preprocessor.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
0000821E <preprocessor.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
0000822C <preprocessor.include.ab3@366> XINCLUDE "/Shared/preprocessor.include.ab3"
0000823A <preprocessor.include.ab3@367> XINCLUDE "/Shared/preprocessor.include.ab3"
00008240 <preprocessor.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
00008248 <preprocessor.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
00008266 <preprocessor.include.ab3@370> XINCLUDE "/Shared/preprocessor.include.ab3"
0000827A <preprocessor.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
0000828A <preprocessor.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
000082A0 <preprocessor.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
000082B8 <preprocessor.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
000082D4 <preprocessor.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
000082DE <preprocessor.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
000082FA <preprocessor.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
0000830C <preprocessor.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
0000833A <preprocessor.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
00008376 <preprocessor.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
00008386 <preprocessor.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
0000838C <preprocessor.include.ab3@384> XINCLUDE "/Shared/preprocessor.include.ab3"
00008392 <preprocessor.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
000083AA <preprocessor.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
000083BA <preprocessor.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
00008440 <preprocessor.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
0000847A <preprocessor.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
000084B0 <preprocessor.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
000084C0 <preprocessor.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
000084CE <preprocessor.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
000084D4 <preprocessor.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
000084E4 <preprocessor.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
0000850E <preprocessor.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
00008514 <preprocessor.include.ab3@399> XINCLUDE "/Shared/preprocessor.include.ab3"
00008540 <preprocessor.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
00008550 <preprocessor.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
00008560 <preprocessor.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
0000857E <preprocessor.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
0000858C <preprocessor.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
000085C2 <preprocessor.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
000085E6 <preprocessor.include.ab3@409> XINCLUDE "/Shared/preprocessor.include.ab3"
000085FA <preprocessor.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
0000860A <preprocessor.include.ab3@414> XINCLUDE "/Shared/preprocessor.include.ab3"
00008628 <preprocessor.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
00008636 <preprocessor.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
0000865A <preprocessor.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
0000867E <preprocessor.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
0000868C <preprocessor.include.ab3@422> XINCLUDE "/Shared/preprocessor.include.ab3"
0000869A <preprocessor.include.ab3@423> XINCLUDE "/Shared/preprocessor.include.ab3"
000086BA <preprocessor.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
000086C8 <preprocessor.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
000086CE <preprocessor.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
000086D4 <preprocessor.include.ab3@429> XINCLUDE "/Shared/preprocessor.include.ab3"
000086E2 <preprocessor.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
000086F0 <preprocessor.include.ab3@432> XINCLUDE "/Shared/preprocessor.include.ab3"
00008710 <preprocessor.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
0000871E <preprocessor.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
00008724 <preprocessor.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
00008734 <preprocessor.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
0000873E <preprocessor.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
00008752 <preprocessor.include.ab3@443> XINCLUDE "/Shared/preprocessor.include.ab3"
00008778 <preprocessor.include.ab3@448> XINCLUDE "/Shared/preprocessor.include.ab3"
0000879A <preprocessor.include.ab3@449> XINCLUDE "/Shared/preprocessor.include.ab3"
000087C2 <preprocessor.include.ab3@450> XINCLUDE "/Shared/preprocessor.include.ab3"
000087C8 <preprocessor.include.ab3@451> XINCLUDE "/Shared/preprocessor.include.ab3"
000087D6 <preprocessor.include.ab3@452> XINCLUDE "/Shared/preprocessor.include.ab3"
000087DC <preprocessor.include.ab3@453> XINCLUDE "/Shared/preprocessor.include.ab3"
000087F0 <preprocessor.include.ab3@454> XINCLUDE "/Shared/preprocessor.include.ab3"
00008800 <preprocessor.include.ab3@455> XINCLUDE "/Shared/preprocessor.include.ab3"
00008816 <preprocessor.include.ab3@457> XINCLUDE "/Shared/preprocessor.include.ab3"
0000882E <preprocessor.include.ab3@459> XINCLUDE "/Shared/preprocessor.include.ab3"
0000884A <preprocessor.include.ab3@460> XINCLUDE "/Shared/preprocessor.include.ab3"
00008854 <preprocessor.include.ab3@461> XINCLUDE "/Shared/preprocessor.include.ab3"
00008870 <preprocessor.include.ab3@462> XINCLUDE "/Shared/preprocessor.include.ab3"
0000889E <preprocessor.include.ab3@463> XINCLUDE "/Shared/preprocessor.include.ab3"
000088DA <preprocessor.include.ab3@464> XINCLUDE "/Shared/preprocessor.include.ab3"
000088EA <preprocessor.include.ab3@465> XINCLUDE "/Shared/preprocessor.include.ab3"
000088F8 <preprocessor.include.ab3@467> XINCLUDE "/Shared/preprocessor.include.ab3"
000088FE <preprocessor.include.ab3@468> XINCLUDE "/Shared/preprocessor.include.ab3"
0000890E <preprocessor.include.ab3@469> XINCLUDE "/Shared/preprocessor.include.ab3"
00008938 <preprocessor.include.ab3@470> XINCLUDE "/Shared/preprocessor.include.ab3"
0000893E <preprocessor.include.ab3@471> XINCLUDE "/Shared/preprocessor.include.ab3"
0000896A <preprocessor.include.ab3@472> XINCLUDE "/Shared/preprocessor.include.ab3"
0000897A <preprocessor.include.ab3@474> XINCLUDE "/Shared/preprocessor.include.ab3"
0000898A <preprocessor.include.ab3@476> XINCLUDE "/Shared/preprocessor.include.ab3"
000089A8 <preprocessor.include.ab3@477> XINCLUDE "/Shared/preprocessor.include.ab3"
000089B6 <preprocessor.include.ab3@478> XINCLUDE "/Shared/preprocessor.include.ab3"
000089EC <preprocessor.include.ab3@479> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A10 <preprocessor.include.ab3@480> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A24 <preprocessor.include.ab3@483> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A34 <preprocessor.include.ab3@485> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A52 <preprocessor.include.ab3@486> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A60 <preprocessor.include.ab3@487> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A84 <preprocessor.include.ab3@488> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AA8 <preprocessor.include.ab3@489> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AAE <preprocessor.include.ab3@493> XINCLUDE "/Shared/preprocessor.include.ab3"
00008ABE <preprocessor.include.ab3@494> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AC4 <preprocessor.include.ab3@495> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AE6 <preprocessor.include.ab3@499> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AEE <preprocessor.include.ab3@500> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B24 <preprocessor.include.ab3@501> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B40 <preprocessor.include.ab3@502> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B46 <preprocessor.include.ab3@503> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B7C <preprocessor.include.ab3@507> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B98 <preprocessor.include.ab3@508> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BC0 <preprocessor.include.ab3@509> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BDE <preprocessor.include.ab3@510> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BFC <preprocessor.include.ab3@511> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C2A <preprocessor.include.ab3@512> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C8C <preprocessor.include.ab3@513> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CA6 <preprocessor.include.ab3@514> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CC0 <preprocessor.include.ab3@518> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CCA <preprocessor.include.ab3@519> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D08 <preprocessor.include.ab3@520> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D0C <preprocessor.include.ab3@521> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D16 <preprocessor.include.ab3@523> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D44 <preprocessor.include.ab3@524> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D64 <preprocessor.include.ab3@525> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D7C <preprocessor.include.ab3@526> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DDA <preprocessor.include.ab3@527> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E06 <preprocessor.include.ab3@528> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E18 <preprocessor.include.ab3@529> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E28 <preprocessor.include.ab3@530> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E40 <preprocessor.include.ab3@531> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E46 <preprocessor.include.ab3@533> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E80 <preprocessor.include.ab3@534> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E8A <preprocessor.include.ab3@536> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E90 <preprocessor.include.ab3@537> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E9A <preprocessor.include.ab3@538> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EAC <preprocessor.include.ab3@539> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EAC <AmiBlitz3_wizzard.ab2@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EAC <logging.include.bb2@1> XINCLUDE "PE/logging.include.bb2"
00008EB8 <logging.include.bb2@4> XINCLUDE "PE/logging.include.bb2"
00008EB8 <PE_Tools.include.bb2@1> XINCLUDE "PE/logging.include.bb2"
00008EDC <PE_Tools.include.bb2@67> XINCLUDE "PE/logging.include.bb2"
00008EE4 <PE_Tools.include.bb2@76> XINCLUDE "PE/logging.include.bb2"
00008F14 <PE_Tools.include.bb2@77> XINCLUDE "PE/logging.include.bb2"
00008F42 <PE_Tools.include.bb2@78> XINCLUDE "PE/logging.include.bb2"
00008FB2 <PE_Tools.include.bb2@79> XINCLUDE "PE/logging.include.bb2"
00008FC0 <PE_Tools.include.bb2@80> XINCLUDE "PE/logging.include.bb2"
00009010 <PE_Tools.include.bb2@81> XINCLUDE "PE/logging.include.bb2"
00009010 <logging.include.bb2@6> XINCLUDE "PE/logging.include.bb2"
00009010 <file.include.bb2@1> XINCLUDE "PE/logging.include.bb2"
00009010 <asl.include.bb2@1> XINCLUDE "PE/logging.include.bb2"
00009034 <asl.include.bb2@93> XINCLUDE "PE/logging.include.bb2"
0000905C <asl.include.bb2@94> XINCLUDE "PE/logging.include.bb2"
00009080 <asl.include.bb2@95> XINCLUDE "PE/logging.include.bb2"
000090AE <asl.include.bb2@294> XINCLUDE "PE/logging.include.bb2"
0000930A <asl.include.bb2@296> XINCLUDE "PE/logging.include.bb2"
0000933C <asl.include.bb2@298> XINCLUDE "PE/logging.include.bb2"
0000936A <asl.include.bb2@300> XINCLUDE "PE/logging.include.bb2"
000093A8 <asl.include.bb2@301> XINCLUDE "PE/logging.include.bb2"
000093D6 <asl.include.bb2@302> XINCLUDE "PE/logging.include.bb2"
00009404 <asl.include.bb2@303> XINCLUDE "PE/logging.include.bb2"
00009432 <asl.include.bb2@304> XINCLUDE "PE/logging.include.bb2"
00009460 <asl.include.bb2@305> XINCLUDE "PE/logging.include.bb2"
0000948E <asl.include.bb2@306> XINCLUDE "PE/logging.include.bb2"
000094BC <asl.include.bb2@307> XINCLUDE "PE/logging.include.bb2"
000094EA <asl.include.bb2@308> XINCLUDE "PE/logging.include.bb2"
00009518 <asl.include.bb2@309> XINCLUDE "PE/logging.include.bb2"
000095A8 <asl.include.bb2@311> XINCLUDE "PE/logging.include.bb2"
00009638 <asl.include.bb2@312> XINCLUDE "PE/logging.include.bb2"
000096E0 <asl.include.bb2@313> XINCLUDE "PE/logging.include.bb2"
0000972E <asl.include.bb2@314> XINCLUDE "PE/logging.include.bb2"
00009770 <asl.include.bb2@315> XINCLUDE "PE/logging.include.bb2"
00009774 <asl.include.bb2@316> XINCLUDE "PE/logging.include.bb2"
000097C2 <asl.include.bb2@319> XINCLUDE "PE/logging.include.bb2"
00009804 <asl.include.bb2@320> XINCLUDE "PE/logging.include.bb2"
00009830 <asl.include.bb2@321> XINCLUDE "PE/logging.include.bb2"
00009834 <asl.include.bb2@322> XINCLUDE "PE/logging.include.bb2"
00009860 <asl.include.bb2@323> XINCLUDE "PE/logging.include.bb2"
0000988C <asl.include.bb2@325> XINCLUDE "PE/logging.include.bb2"
000098B6 <asl.include.bb2@327> XINCLUDE "PE/logging.include.bb2"
000098C0 <asl.include.bb2@328> XINCLUDE "PE/logging.include.bb2"
000098DE <asl.include.bb2@329> XINCLUDE "PE/logging.include.bb2"
000098FE <asl.include.bb2@330> XINCLUDE "PE/logging.include.bb2"
0000992C <asl.include.bb2@331> XINCLUDE "PE/logging.include.bb2"
0000995A <asl.include.bb2@332> XINCLUDE "PE/logging.include.bb2"
00009988 <asl.include.bb2@333> XINCLUDE "PE/logging.include.bb2"
000099CE <asl.include.bb2@336> XINCLUDE "PE/logging.include.bb2"
00009A14 <asl.include.bb2@337> XINCLUDE "PE/logging.include.bb2"
00009A5A <asl.include.bb2@338> XINCLUDE "PE/logging.include.bb2"
00009A96 <asl.include.bb2@340> XINCLUDE "PE/logging.include.bb2"
00009B92 <asl.include.bb2@341> XINCLUDE "PE/logging.include.bb2"
00009BB0 <asl.include.bb2@343> XINCLUDE "PE/logging.include.bb2"
00009BBA <asl.include.bb2@345> XINCLUDE "PE/logging.include.bb2"
00009BE0 <asl.include.bb2@346> XINCLUDE "PE/logging.include.bb2"
00009BF6 <asl.include.bb2@348> XINCLUDE "PE/logging.include.bb2"
00009C30 <asl.include.bb2@349> XINCLUDE "PE/logging.include.bb2"
00009C6E <asl.include.bb2@350> XINCLUDE "PE/logging.include.bb2"
00009C7E <asl.include.bb2@351> XINCLUDE "PE/logging.include.bb2"
00009CD4 <asl.include.bb2@352> XINCLUDE "PE/logging.include.bb2"
00009D0C <asl.include.bb2@353> XINCLUDE "PE/logging.include.bb2"
00009D1C <asl.include.bb2@355> XINCLUDE "PE/logging.include.bb2"
00009D20 <asl.include.bb2@356> XINCLUDE "PE/logging.include.bb2"
00009D30 <asl.include.bb2@357> XINCLUDE "PE/logging.include.bb2"
00009D3A <asl.include.bb2@358> XINCLUDE "PE/logging.include.bb2"
00009D74 <asl.include.bb2@359> XINCLUDE "PE/logging.include.bb2"
00009D78 <asl.include.bb2@360> XINCLUDE "PE/logging.include.bb2"
00009DD0 <asl.include.bb2@361> XINCLUDE "PE/logging.include.bb2"
00009DEE <asl.include.bb2@363> XINCLUDE "PE/logging.include.bb2"
00009DF4 <asl.include.bb2@366> XINCLUDE "PE/logging.include.bb2"
00009E04 <asl.include.bb2@369> XINCLUDE "PE/logging.include.bb2"
00009E14 <asl.include.bb2@370> XINCLUDE "PE/logging.include.bb2"
00009E24 <asl.include.bb2@371> XINCLUDE "PE/logging.include.bb2"
00009E34 <asl.include.bb2@372> XINCLUDE "PE/logging.include.bb2"
00009E44 <asl.include.bb2@374> XINCLUDE "PE/logging.include.bb2"
00009E4E <asl.include.bb2@376> XINCLUDE "PE/logging.include.bb2"
00009E62 <asl.include.bb2@377> XINCLUDE "PE/logging.include.bb2"
00009E78 <asl.include.bb2@393> XINCLUDE "PE/logging.include.bb2"
00009EA0 <asl.include.bb2@395> XINCLUDE "PE/logging.include.bb2"
00009EAA <asl.include.bb2@396> XINCLUDE "PE/logging.include.bb2"
00009EBA <asl.include.bb2@397> XINCLUDE "PE/logging.include.bb2"
00009EF4 <asl.include.bb2@398> XINCLUDE "PE/logging.include.bb2"
00009EFE <asl.include.bb2@399> XINCLUDE "PE/logging.include.bb2"
00009F28 <asl.include.bb2@401> XINCLUDE "PE/logging.include.bb2"
00009F40 <asl.include.bb2@402> XINCLUDE "PE/logging.include.bb2"
00009F92 <asl.include.bb2@438> XINCLUDE "PE/logging.include.bb2"
00009FC4 <asl.include.bb2@440> XINCLUDE "PE/logging.include.bb2"
0000A05E <asl.include.bb2@441> XINCLUDE "PE/logging.include.bb2"
0000A0A4 <asl.include.bb2@442> XINCLUDE "PE/logging.include.bb2"
0000A13E <asl.include.bb2@443> XINCLUDE "PE/logging.include.bb2"
0000A158 <asl.include.bb2@444> XINCLUDE "PE/logging.include.bb2"
0000A158 <file.include.bb2@57> XINCLUDE "PE/logging.include.bb2"
0000A16E <file.include.bb2@66> XINCLUDE "PE/logging.include.bb2"
0000A184 <file.include.bb2@67> XINCLUDE "PE/logging.include.bb2"
0000A19A <file.include.bb2@68> XINCLUDE "PE/logging.include.bb2"
0000A1B0 <file.include.bb2@70> XINCLUDE "PE/logging.include.bb2"
0000A1BC <file.include.bb2@72> XINCLUDE "PE/logging.include.bb2"
0000A1C8 <file.include.bb2@73> XINCLUDE "PE/logging.include.bb2"
0000A1D4 <file.include.bb2@74> XINCLUDE "PE/logging.include.bb2"
0000A1E0 <file.include.bb2@75> XINCLUDE "PE/logging.include.bb2"
0000A208 <file.include.bb2@77> XINCLUDE "PE/logging.include.bb2"
0000A230 <file.include.bb2@78> XINCLUDE "PE/logging.include.bb2"
0000A258 <file.include.bb2@79> XINCLUDE "PE/logging.include.bb2"
0000A27C <file.include.bb2@109> XINCLUDE "PE/logging.include.bb2"
0000A2A0 <file.include.bb2@110> XINCLUDE "PE/logging.include.bb2"
0000A2BA <file.include.bb2@156> XINCLUDE "PE/logging.include.bb2"
0000A2CA <file.include.bb2@157> XINCLUDE "PE/logging.include.bb2"
0000A2CC <file.include.bb2@158> XINCLUDE "PE/logging.include.bb2"
0000A2CE <file.include.bb2@159> XINCLUDE "PE/logging.include.bb2"
0000A2D0 <file.include.bb2@160> XINCLUDE "PE/logging.include.bb2"
0000A2D2 <file.include.bb2@161> XINCLUDE "PE/logging.include.bb2"
0000A2D4 <file.include.bb2@162> XINCLUDE "PE/logging.include.bb2"
0000A2D8 <file.include.bb2@163> XINCLUDE "PE/logging.include.bb2"
0000A2DC <file.include.bb2@164> XINCLUDE "PE/logging.include.bb2"
0000A2E0 <file.include.bb2@165> XINCLUDE "PE/logging.include.bb2"
0000A2E2 <file.include.bb2@166> XINCLUDE "PE/logging.include.bb2"
0000A2E4 <file.include.bb2@167> XINCLUDE "PE/logging.include.bb2"
0000A2E6 <file.include.bb2@168> XINCLUDE "PE/logging.include.bb2"
0000A2E8 <file.include.bb2@169> XINCLUDE "PE/logging.include.bb2"
0000A2EA <file.include.bb2@170> XINCLUDE "PE/logging.include.bb2"
0000A2EC <file.include.bb2@171> XINCLUDE "PE/logging.include.bb2"
0000A2EE <file.include.bb2@172> XINCLUDE "PE/logging.include.bb2"
0000A2F8 <file.include.bb2@173> XINCLUDE "PE/logging.include.bb2"
0000A2FE <file.include.bb2@174> XINCLUDE "PE/logging.include.bb2"
0000A318 <file.include.bb2@215> XINCLUDE "PE/logging.include.bb2"
0000A336 <file.include.bb2@217> XINCLUDE "PE/logging.include.bb2"
0000A33C <file.include.bb2@218> XINCLUDE "PE/logging.include.bb2"
0000A356 <file.include.bb2@237> XINCLUDE "PE/logging.include.bb2"
0000A370 <file.include.bb2@239> XINCLUDE "PE/logging.include.bb2"
0000A39A <file.include.bb2@240> XINCLUDE "PE/logging.include.bb2"
0000A3BA <file.include.bb2@241> XINCLUDE "PE/logging.include.bb2"
0000A3C4 <file.include.bb2@242> XINCLUDE "PE/logging.include.bb2"
0000A3F0 <file.include.bb2@243> XINCLUDE "PE/logging.include.bb2"
0000A412 <file.include.bb2@244> XINCLUDE "PE/logging.include.bb2"
0000A42C <file.include.bb2@245> XINCLUDE "PE/logging.include.bb2"
0000A430 <file.include.bb2@248> XINCLUDE "PE/logging.include.bb2"
0000A45E <file.include.bb2@249> XINCLUDE "PE/logging.include.bb2"
0000A47C <file.include.bb2@251> XINCLUDE "PE/logging.include.bb2"
0000A482 <file.include.bb2@252> XINCLUDE "PE/logging.include.bb2"
0000A4A0 <file.include.bb2@271> XINCLUDE "PE/logging.include.bb2"
0000A4A6 <file.include.bb2@273> XINCLUDE "PE/logging.include.bb2"
0000A4CE <file.include.bb2@274> XINCLUDE "PE/logging.include.bb2"
0000A4EC <file.include.bb2@275> XINCLUDE "PE/logging.include.bb2"
0000A526 <file.include.bb2@276> XINCLUDE "PE/logging.include.bb2"
0000A542 <file.include.bb2@277> XINCLUDE "PE/logging.include.bb2"
0000A546 <file.include.bb2@278> XINCLUDE "PE/logging.include.bb2"
0000A54C <file.include.bb2@279> XINCLUDE "PE/logging.include.bb2"
0000A550 <file.include.bb2@281> XINCLUDE "PE/logging.include.bb2"
0000A556 <file.include.bb2@282> XINCLUDE "PE/logging.include.bb2"
0000A570 <file.include.bb2@283> XINCLUDE "PE/logging.include.bb2"
0000A5BA <file.include.bb2@285> XINCLUDE "PE/logging.include.bb2"
0000A5C0 <file.include.bb2@286> XINCLUDE "PE/logging.include.bb2"
0000A5EE <file.include.bb2@287> XINCLUDE "PE/logging.include.bb2"
0000A5F8 <file.include.bb2@288> XINCLUDE "PE/logging.include.bb2"
0000A614 <file.include.bb2@289> XINCLUDE "PE/logging.include.bb2"
0000A618 <file.include.bb2@291> XINCLUDE "PE/logging.include.bb2"
0000A646 <file.include.bb2@292> XINCLUDE "PE/logging.include.bb2"
0000A650 <file.include.bb2@296> XINCLUDE "PE/logging.include.bb2"
0000A656 <file.include.bb2@297> XINCLUDE "PE/logging.include.bb2"
0000A674 <file.include.bb2@316> XINCLUDE "PE/logging.include.bb2"
0000A6A2 <file.include.bb2@318> XINCLUDE "PE/logging.include.bb2"
0000A6A8 <file.include.bb2@319> XINCLUDE "PE/logging.include.bb2"
0000A6BE <file.include.bb2@335> XINCLUDE "PE/logging.include.bb2"
0000A6C8 <file.include.bb2@337> XINCLUDE "PE/logging.include.bb2"
0000A736 <file.include.bb2@338> XINCLUDE "PE/logging.include.bb2"
0000A746 <file.include.bb2@339> XINCLUDE "PE/logging.include.bb2"
0000A74A <file.include.bb2@340> XINCLUDE "PE/logging.include.bb2"
0000A784 <file.include.bb2@341> XINCLUDE "PE/logging.include.bb2"
0000A78E <file.include.bb2@342> XINCLUDE "PE/logging.include.bb2"
0000A794 <file.include.bb2@343> XINCLUDE "PE/logging.include.bb2"
0000A7AE <file.include.bb2@397> XINCLUDE "PE/logging.include.bb2"
0000A7C4 <file.include.bb2@399> XINCLUDE "PE/logging.include.bb2"
0000A820 <file.include.bb2@400> XINCLUDE "PE/logging.include.bb2"
0000A85A <file.include.bb2@401> XINCLUDE "PE/logging.include.bb2"
0000A894 <file.include.bb2@402> XINCLUDE "PE/logging.include.bb2"
0000A8B2 <file.include.bb2@403> XINCLUDE "PE/logging.include.bb2"
0000A8D0 <file.include.bb2@404> XINCLUDE "PE/logging.include.bb2"
0000A8E6 <file.include.bb2@405> XINCLUDE "PE/logging.include.bb2"
0000A902 <file.include.bb2@406> XINCLUDE "PE/logging.include.bb2"
0000A91C <file.include.bb2@407> XINCLUDE "PE/logging.include.bb2"
0000A998 <file.include.bb2@408> XINCLUDE "PE/logging.include.bb2"
0000A9AA <file.include.bb2@410> XINCLUDE "PE/logging.include.bb2"
0000A9C0 <file.include.bb2@422> XINCLUDE "PE/logging.include.bb2"
0000A9F4 <file.include.bb2@424> XINCLUDE "PE/logging.include.bb2"
0000A9FE <file.include.bb2@425> XINCLUDE "PE/logging.include.bb2"
0000AA0E <file.include.bb2@426> XINCLUDE "PE/logging.include.bb2"
0000AA12 <file.include.bb2@427> XINCLUDE "PE/logging.include.bb2"
0000AA40 <file.include.bb2@428> XINCLUDE "PE/logging.include.bb2"
0000AA5A <file.include.bb2@447> XINCLUDE "PE/logging.include.bb2"
0000AA70 <file.include.bb2@449> XINCLUDE "PE/logging.include.bb2"
0000AA8E <file.include.bb2@450> XINCLUDE "PE/logging.include.bb2"
0000AAA4 <file.include.bb2@451> XINCLUDE "PE/logging.include.bb2"
0000AADC <file.include.bb2@452> XINCLUDE "PE/logging.include.bb2"
0000AB06 <file.include.bb2@453> XINCLUDE "PE/logging.include.bb2"
0000AB30 <file.include.bb2@456> XINCLUDE "PE/logging.include.bb2"
0000AB48 <file.include.bb2@457> XINCLUDE "PE/logging.include.bb2"
0000AB5E <file.include.bb2@525> XINCLUDE "PE/logging.include.bb2"
0000ABAA <file.include.bb2@527> XINCLUDE "PE/logging.include.bb2"
0000ABCA <file.include.bb2@528> XINCLUDE "PE/logging.include.bb2"
0000ABD2 <file.include.bb2@529> XINCLUDE "PE/logging.include.bb2"
0000AC10 <file.include.bb2@568> XINCLUDE "PE/logging.include.bb2"
0000AC1C <file.include.bb2@570> XINCLUDE "PE/logging.include.bb2"
0000AC26 <file.include.bb2@571> XINCLUDE "PE/logging.include.bb2"
0000AC3C <file.include.bb2@572> XINCLUDE "PE/logging.include.bb2"
0000AC42 <file.include.bb2@573> XINCLUDE "PE/logging.include.bb2"
0000AC4E <file.include.bb2@574> XINCLUDE "PE/logging.include.bb2"
0000AC76 <file.include.bb2@575> XINCLUDE "PE/logging.include.bb2"
0000AC86 <file.include.bb2@576> XINCLUDE "PE/logging.include.bb2"
0000ACAE <file.include.bb2@577> XINCLUDE "PE/logging.include.bb2"
0000ACBE <file.include.bb2@578> XINCLUDE "PE/logging.include.bb2"
0000ACE6 <file.include.bb2@579> XINCLUDE "PE/logging.include.bb2"
0000ACF6 <file.include.bb2@580> XINCLUDE "PE/logging.include.bb2"
0000AD1E <file.include.bb2@581> XINCLUDE "PE/logging.include.bb2"
0000AD20 <file.include.bb2@582> XINCLUDE "PE/logging.include.bb2"
0000AD46 <file.include.bb2@584> XINCLUDE "PE/logging.include.bb2"
0000AD82 <file.include.bb2@586> XINCLUDE "PE/logging.include.bb2"
0000AE0C <file.include.bb2@587> XINCLUDE "PE/logging.include.bb2"
0000AE46 <file.include.bb2@588> XINCLUDE "PE/logging.include.bb2"
0000AE76 <file.include.bb2@589> XINCLUDE "PE/logging.include.bb2"
0000AEB2 <file.include.bb2@593> XINCLUDE "PE/logging.include.bb2"
0000AF0A <file.include.bb2@594> XINCLUDE "PE/logging.include.bb2"
0000AF62 <file.include.bb2@595> XINCLUDE "PE/logging.include.bb2"
0000AFE2 <file.include.bb2@597> XINCLUDE "PE/logging.include.bb2"
0000B016 <file.include.bb2@598> XINCLUDE "PE/logging.include.bb2"
0000B04A <file.include.bb2@599> XINCLUDE "PE/logging.include.bb2"
0000B050 <file.include.bb2@600> XINCLUDE "PE/logging.include.bb2"
0000B05C <file.include.bb2@601> XINCLUDE "PE/logging.include.bb2"
0000B090 <file.include.bb2@602> XINCLUDE "PE/logging.include.bb2"
0000B0C0 <file.include.bb2@603> XINCLUDE "PE/logging.include.bb2"
0000B17C <file.include.bb2@604> XINCLUDE "PE/logging.include.bb2"
0000B1FC <file.include.bb2@605> XINCLUDE "PE/logging.include.bb2"
0000B230 <file.include.bb2@606> XINCLUDE "PE/logging.include.bb2"
0000B24E <file.include.bb2@608> XINCLUDE "PE/logging.include.bb2"
0000B256 <file.include.bb2@609> XINCLUDE "PE/logging.include.bb2"
0000B25A <file.include.bb2@610> XINCLUDE "PE/logging.include.bb2"
0000B31E <file.include.bb2@611> XINCLUDE "PE/logging.include.bb2"
0000B32E <file.include.bb2@614> XINCLUDE "PE/logging.include.bb2"
0000B3EA <file.include.bb2@615> XINCLUDE "PE/logging.include.bb2"
0000B46A <file.include.bb2@616> XINCLUDE "PE/logging.include.bb2"
0000B54A <file.include.bb2@617> XINCLUDE "PE/logging.include.bb2"
0000B554 <file.include.bb2@618> XINCLUDE "PE/logging.include.bb2"
0000B588 <file.include.bb2@619> XINCLUDE "PE/logging.include.bb2"
0000B5A6 <file.include.bb2@620> XINCLUDE "PE/logging.include.bb2"
0000B5AE <file.include.bb2@621> XINCLUDE "PE/logging.include.bb2"
0000B5B2 <file.include.bb2@622> XINCLUDE "PE/logging.include.bb2"
0000B676 <file.include.bb2@623> XINCLUDE "PE/logging.include.bb2"
0000B686 <file.include.bb2@627> XINCLUDE "PE/logging.include.bb2"
0000B6BA <file.include.bb2@628> XINCLUDE "PE/logging.include.bb2"
0000B6EA <file.include.bb2@629> XINCLUDE "PE/logging.include.bb2"
0000B7A6 <file.include.bb2@630> XINCLUDE "PE/logging.include.bb2"
0000B826 <file.include.bb2@631> XINCLUDE "PE/logging.include.bb2"
0000B85A <file.include.bb2@632> XINCLUDE "PE/logging.include.bb2"
0000B878 <file.include.bb2@635> XINCLUDE "PE/logging.include.bb2"
0000B880 <file.include.bb2@636> XINCLUDE "PE/logging.include.bb2"
0000B884 <file.include.bb2@637> XINCLUDE "PE/logging.include.bb2"
0000B948 <file.include.bb2@638> XINCLUDE "PE/logging.include.bb2"
0000B958 <file.include.bb2@641> XINCLUDE "PE/logging.include.bb2"
0000BA14 <file.include.bb2@642> XINCLUDE "PE/logging.include.bb2"
0000BA94 <file.include.bb2@643> XINCLUDE "PE/logging.include.bb2"
0000BAC8 <file.include.bb2@644> XINCLUDE "PE/logging.include.bb2"
0000BAE6 <file.include.bb2@645> XINCLUDE "PE/logging.include.bb2"
0000BAEE <file.include.bb2@646> XINCLUDE "PE/logging.include.bb2"
0000BAF2 <file.include.bb2@647> XINCLUDE "PE/logging.include.bb2"
0000BBB6 <file.include.bb2@648> XINCLUDE "PE/logging.include.bb2"
0000BBBA <file.include.bb2@651> XINCLUDE "PE/logging.include.bb2"
0000BBE8 <file.include.bb2@652> XINCLUDE "PE/logging.include.bb2"
0000BBEA <file.include.bb2@653> XINCLUDE "PE/logging.include.bb2"
0000BBEE <file.include.bb2@655> XINCLUDE "PE/logging.include.bb2"
0000BC7A <file.include.bb2@656> XINCLUDE "PE/logging.include.bb2"
0000BC90 <file.include.bb2@659> XINCLUDE "PE/logging.include.bb2"
0000BCA6 <file.include.bb2@660> XINCLUDE "PE/logging.include.bb2"
0000BD10 <file.include.bb2@661> XINCLUDE "PE/logging.include.bb2"
0000BD7A <file.include.bb2@662> XINCLUDE "PE/logging.include.bb2"
0000BD9A <file.include.bb2@663> XINCLUDE "PE/logging.include.bb2"
0000BDB6 <file.include.bb2@664> XINCLUDE "PE/logging.include.bb2"
0000BDD4 <file.include.bb2@665> XINCLUDE "PE/logging.include.bb2"
0000BDEE <file.include.bb2@666> XINCLUDE "PE/logging.include.bb2"
0000BDF8 <file.include.bb2@668> XINCLUDE "PE/logging.include.bb2"
0000BE14 <file.include.bb2@669> XINCLUDE "PE/logging.include.bb2"
0000BE36 <file.include.bb2@805> XINCLUDE "PE/logging.include.bb2"
0000BE3C <file.include.bb2@807> XINCLUDE "PE/logging.include.bb2"
0000BE64 <file.include.bb2@808> XINCLUDE "PE/logging.include.bb2"
0000BE7E <file.include.bb2@809> XINCLUDE "PE/logging.include.bb2"
0000BE94 <file.include.bb2@810> XINCLUDE "PE/logging.include.bb2"
0000BEF0 <file.include.bb2@811> XINCLUDE "PE/logging.include.bb2"
0000BF28 <file.include.bb2@812> XINCLUDE "PE/logging.include.bb2"
0000BF2C <file.include.bb2@813> XINCLUDE "PE/logging.include.bb2"
0000BF78 <file.include.bb2@814> XINCLUDE "PE/logging.include.bb2"
0000BF92 <file.include.bb2@815> XINCLUDE "PE/logging.include.bb2"
0000BFA6 <file.include.bb2@818> XINCLUDE "PE/logging.include.bb2"
0000BFAC <file.include.bb2@819> XINCLUDE "PE/logging.include.bb2"
0000BFB0 <file.include.bb2@820> XINCLUDE "PE/logging.include.bb2"
0000BFC6 <file.include.bb2@821> XINCLUDE "PE/logging.include.bb2"
0000C0A6 <file.include.bb2@822> XINCLUDE "PE/logging.include.bb2"
0000C0AA <file.include.bb2@823> XINCLUDE "PE/logging.include.bb2"
0000C0F0 <file.include.bb2@824> XINCLUDE "PE/logging.include.bb2"
0000C0FC <file.include.bb2@825> XINCLUDE "PE/logging.include.bb2"
0000C16A <file.include.bb2@826> XINCLUDE "PE/logging.include.bb2"
0000C1A4 <file.include.bb2@827> XINCLUDE "PE/logging.include.bb2"
0000C1F0 <file.include.bb2@830> XINCLUDE "PE/logging.include.bb2"
0000C25C <file.include.bb2@831> XINCLUDE "PE/logging.include.bb2"
0000C260 <file.include.bb2@832> XINCLUDE "PE/logging.include.bb2"
0000C28E <file.include.bb2@833> XINCLUDE "PE/logging.include.bb2"
0000C292 <file.include.bb2@835> XINCLUDE "PE/logging.include.bb2"
0000C2E8 <file.include.bb2@836> XINCLUDE "PE/logging.include.bb2"
0000C2F2 <file.include.bb2@838> XINCLUDE "PE/logging.include.bb2"
0000C306 <file.include.bb2@839> XINCLUDE "PE/logging.include.bb2"
0000C320 <file.include.bb2@841> XINCLUDE "PE/logging.include.bb2"
0000C326 <file.include.bb2@843> XINCLUDE "PE/logging.include.bb2"
0000C34E <file.include.bb2@844> XINCLUDE "PE/logging.include.bb2"
0000C368 <file.include.bb2@845> XINCLUDE "PE/logging.include.bb2"
0000C3C4 <file.include.bb2@846> XINCLUDE "PE/logging.include.bb2"
0000C3C8 <file.include.bb2@849> XINCLUDE "PE/logging.include.bb2"
0000C3EA <file.include.bb2@867> XINCLUDE "PE/logging.include.bb2"
0000C3F0 <file.include.bb2@869> XINCLUDE "PE/logging.include.bb2"
0000C40A <file.include.bb2@870> XINCLUDE "PE/logging.include.bb2"
0000C428 <file.include.bb2@871> XINCLUDE "PE/logging.include.bb2"
0000C46A <file.include.bb2@872> XINCLUDE "PE/logging.include.bb2"
0000C4B8 <file.include.bb2@873> XINCLUDE "PE/logging.include.bb2"
0000C4EE <file.include.bb2@874> XINCLUDE "PE/logging.include.bb2"
0000C4F4 <file.include.bb2@875> XINCLUDE "PE/logging.include.bb2"
0000C4F8 <file.include.bb2@876> XINCLUDE "PE/logging.include.bb2"
0000C528 <file.include.bb2@877> XINCLUDE "PE/logging.include.bb2"
0000C52E <file.include.bb2@878> XINCLUDE "PE/logging.include.bb2"
0000C532 <file.include.bb2@880> XINCLUDE "PE/logging.include.bb2"
0000C548 <file.include.bb2@881> XINCLUDE "PE/logging.include.bb2"
0000C5A4 <file.include.bb2@882> XINCLUDE "PE/logging.include.bb2"
0000C5DC <file.include.bb2@883> XINCLUDE "PE/logging.include.bb2"
0000C5E0 <file.include.bb2@884> XINCLUDE "PE/logging.include.bb2"
0000C62C <file.include.bb2@885> XINCLUDE "PE/logging.include.bb2"
0000C646 <file.include.bb2@886> XINCLUDE "PE/logging.include.bb2"
0000C65A <file.include.bb2@888> XINCLUDE "PE/logging.include.bb2"
0000C660 <file.include.bb2@889> XINCLUDE "PE/logging.include.bb2"
0000C664 <file.include.bb2@890> XINCLUDE "PE/logging.include.bb2"
0000C67A <file.include.bb2@891> XINCLUDE "PE/logging.include.bb2"
0000C680 <file.include.bb2@892> XINCLUDE "PE/logging.include.bb2"
0000C684 <file.include.bb2@893> XINCLUDE "PE/logging.include.bb2"
0000C6D6 <file.include.bb2@894> XINCLUDE "PE/logging.include.bb2"
0000C722 <file.include.bb2@897> XINCLUDE "PE/logging.include.bb2"
0000C72C <file.include.bb2@900> XINCLUDE "PE/logging.include.bb2"
0000C732 <file.include.bb2@901> XINCLUDE "PE/logging.include.bb2"
0000C74C <file.include.bb2@955> XINCLUDE "PE/logging.include.bb2"
0000C752 <file.include.bb2@957> XINCLUDE "PE/logging.include.bb2"
0000C79E <file.include.bb2@958> XINCLUDE "PE/logging.include.bb2"
0000C7E0 <file.include.bb2@959> XINCLUDE "PE/logging.include.bb2"
0000C7EA <file.include.bb2@960> XINCLUDE "PE/logging.include.bb2"
0000C7F0 <file.include.bb2@961> XINCLUDE "PE/logging.include.bb2"
0000C816 <file.include.bb2@1108> XINCLUDE "PE/logging.include.bb2"
0000C81C <file.include.bb2@1110> XINCLUDE "PE/logging.include.bb2"
0000C844 <file.include.bb2@1111> XINCLUDE "PE/logging.include.bb2"
0000C8A8 <file.include.bb2@1112> XINCLUDE "PE/logging.include.bb2"
0000C8C2 <file.include.bb2@1113> XINCLUDE "PE/logging.include.bb2"
0000C8CC <file.include.bb2@1114> XINCLUDE "PE/logging.include.bb2"
0000C8E6 <file.include.bb2@1115> XINCLUDE "PE/logging.include.bb2"
0000C8F0 <file.include.bb2@1116> XINCLUDE "PE/logging.include.bb2"
0000C908 <file.include.bb2@1117> XINCLUDE "PE/logging.include.bb2"
0000C938 <file.include.bb2@1118> XINCLUDE "PE/logging.include.bb2"
0000C954 <file.include.bb2@1119> XINCLUDE "PE/logging.include.bb2"
0000C964 <file.include.bb2@1120> XINCLUDE "PE/logging.include.bb2"
0000C968 <file.include.bb2@1123> XINCLUDE "PE/logging.include.bb2"
0000C996 <file.include.bb2@1124> XINCLUDE "PE/logging.include.bb2"
0000C9A0 <file.include.bb2@1126> XINCLUDE "PE/logging.include.bb2"
0000C9A6 <file.include.bb2@1127> XINCLUDE "PE/logging.include.bb2"
0000C9C4 <file.include.bb2@1148> XINCLUDE "PE/logging.include.bb2"
0000C9CA <file.include.bb2@1150> XINCLUDE "PE/logging.include.bb2"
0000C9E0 <file.include.bb2@1151> XINCLUDE "PE/logging.include.bb2"
0000C9F0 <file.include.bb2@1152> XINCLUDE "PE/logging.include.bb2"
0000CA14 <file.include.bb2@1153> XINCLUDE "PE/logging.include.bb2"
0000CA4A <file.include.bb2@1154> XINCLUDE "PE/logging.include.bb2"
0000CA60 <file.include.bb2@1155> XINCLUDE "PE/logging.include.bb2"
0000CAAE <file.include.bb2@1156> XINCLUDE "PE/logging.include.bb2"
0000CB8C <file.include.bb2@1157> XINCLUDE "PE/logging.include.bb2"
0000CBAA <file.include.bb2@1158> XINCLUDE "PE/logging.include.bb2"
0000CBD4 <file.include.bb2@1160> XINCLUDE "PE/logging.include.bb2"
0000CBF0 <file.include.bb2@1161> XINCLUDE "PE/logging.include.bb2"
0000CC1E <file.include.bb2@1162> XINCLUDE "PE/logging.include.bb2"
0000CC28 <file.include.bb2@1163> XINCLUDE "PE/logging.include.bb2"
0000CC54 <file.include.bb2@1164> XINCLUDE "PE/logging.include.bb2"
0000CC6E <file.include.bb2@1165> XINCLUDE "PE/logging.include.bb2"
0000CC8A <file.include.bb2@1166> XINCLUDE "PE/logging.include.bb2"
0000CC8E <file.include.bb2@1167> XINCLUDE "PE/logging.include.bb2"
0000CCBC <file.include.bb2@1168> XINCLUDE "PE/logging.include.bb2"
0000CCC0 <file.include.bb2@1170> XINCLUDE "PE/logging.include.bb2"
0000CCC6 <file.include.bb2@1171> XINCLUDE "PE/logging.include.bb2"
0000CCCA <file.include.bb2@1173> XINCLUDE "PE/logging.include.bb2"
0000CD5E <file.include.bb2@1174> XINCLUDE "PE/logging.include.bb2"
0000CD62 <file.include.bb2@1176> XINCLUDE "PE/logging.include.bb2"
0000CDF8 <file.include.bb2@1177> XINCLUDE "PE/logging.include.bb2"
0000CDFC <file.include.bb2@1179> XINCLUDE "PE/logging.include.bb2"
0000CE2A <file.include.bb2@1180> XINCLUDE "PE/logging.include.bb2"
0000CE34 <file.include.bb2@1182> XINCLUDE "PE/logging.include.bb2"
0000CE3A <file.include.bb2@1183> XINCLUDE "PE/logging.include.bb2"
0000CE54 <file.include.bb2@1245> XINCLUDE "PE/logging.include.bb2"
0000CE72 <file.include.bb2@1247> XINCLUDE "PE/logging.include.bb2"
0000CE78 <file.include.bb2@1248> XINCLUDE "PE/logging.include.bb2"
0000CE92 <file.include.bb2@1398> XINCLUDE "PE/logging.include.bb2"
0000CEB0 <file.include.bb2@1400> XINCLUDE "PE/logging.include.bb2"
0000CF6E <file.include.bb2@1401> XINCLUDE "PE/logging.include.bb2"
0000CF76 <file.include.bb2@1402> XINCLUDE "PE/logging.include.bb2"
0000CF7A <file.include.bb2@1403> XINCLUDE "PE/logging.include.bb2"
0000CFAA <file.include.bb2@1404> XINCLUDE "PE/logging.include.bb2"
0000CFB6 <file.include.bb2@1406> XINCLUDE "PE/logging.include.bb2"
0000CFBC <file.include.bb2@1407> XINCLUDE "PE/logging.include.bb2"
0000CFD6 <file.include.bb2@1593> XINCLUDE "PE/logging.include.bb2"
0000CFE0 <file.include.bb2@1594> XINCLUDE "PE/logging.include.bb2"
0000CFEA <file.include.bb2@1595> XINCLUDE "PE/logging.include.bb2"
0000D000 <file.include.bb2@1596> XINCLUDE "PE/logging.include.bb2"
0000D016 <file.include.bb2@1597> XINCLUDE "PE/logging.include.bb2"
0000D026 <file.include.bb2@1598> XINCLUDE "PE/logging.include.bb2"
0000D032 <file.include.bb2@1599> XINCLUDE "PE/logging.include.bb2"
0000D036 <file.include.bb2@1600> XINCLUDE "PE/logging.include.bb2"
0000D040 <file.include.bb2@1601> XINCLUDE "PE/logging.include.bb2"
0000D082 <file.include.bb2@1602> XINCLUDE "PE/logging.include.bb2"
0000D098 <file.include.bb2@1603> XINCLUDE "PE/logging.include.bb2"
0000D0BC <file.include.bb2@1604> XINCLUDE "PE/logging.include.bb2"
0000D0D2 <file.include.bb2@1605> XINCLUDE "PE/logging.include.bb2"
0000D0DE <file.include.bb2@1606> XINCLUDE "PE/logging.include.bb2"
0000D0E2 <file.include.bb2@1607> XINCLUDE "PE/logging.include.bb2"
0000D0F2 <file.include.bb2@1608> XINCLUDE "PE/logging.include.bb2"
0000D114 <file.include.bb2@1613> XINCLUDE "PE/logging.include.bb2"
0000D12A <file.include.bb2@1616> XINCLUDE "PE/logging.include.bb2"
0000D176 <file.include.bb2@1617> XINCLUDE "PE/logging.include.bb2"
0000D17A <file.include.bb2@1619> XINCLUDE "PE/logging.include.bb2"
0000D1A4 <file.include.bb2@1621> XINCLUDE "PE/logging.include.bb2"
0000D1BC <file.include.bb2@1622> XINCLUDE "PE/logging.include.bb2"
0000D1EA <file.include.bb2@1706> XINCLUDE "PE/logging.include.bb2"
0000D1FE <file.include.bb2@1707> XINCLUDE "PE/logging.include.bb2"
0000D216 <file.include.bb2@1708> XINCLUDE "PE/logging.include.bb2"
0000D238 <file.include.bb2@1709> XINCLUDE "PE/logging.include.bb2"
0000D250 <file.include.bb2@1710> XINCLUDE "PE/logging.include.bb2"
0000D25A <file.include.bb2@1711> XINCLUDE "PE/logging.include.bb2"
0000D274 <file.include.bb2@1712> XINCLUDE "PE/logging.include.bb2"
0000D296 <file.include.bb2@1787> XINCLUDE "PE/logging.include.bb2"
0000D2AE <file.include.bb2@1789> XINCLUDE "PE/logging.include.bb2"
0000D2D0 <file.include.bb2@1790> XINCLUDE "PE/logging.include.bb2"
0000D2D6 <file.include.bb2@1791> XINCLUDE "PE/logging.include.bb2"
0000D308 <file.include.bb2@1811> XINCLUDE "PE/logging.include.bb2"
0000D31C <file.include.bb2@1813> XINCLUDE "PE/logging.include.bb2"
0000D334 <file.include.bb2@1814> XINCLUDE "PE/logging.include.bb2"
0000D34C <file.include.bb2@1815> XINCLUDE "PE/logging.include.bb2"
0000D36C <file.include.bb2@1816> XINCLUDE "PE/logging.include.bb2"
0000D39E <file.include.bb2@1817> XINCLUDE "PE/logging.include.bb2"
0000D3D0 <file.include.bb2@1818> XINCLUDE "PE/logging.include.bb2"
0000D3E6 <file.include.bb2@1819> XINCLUDE "PE/logging.include.bb2"
0000D3F0 <file.include.bb2@1820> XINCLUDE "PE/logging.include.bb2"
0000D41A <file.include.bb2@1821> XINCLUDE "PE/logging.include.bb2"
0000D424 <file.include.bb2@1823> XINCLUDE "PE/logging.include.bb2"
0000D43E <file.include.bb2@1824> XINCLUDE "PE/logging.include.bb2"
0000D458 <file.include.bb2@1841> XINCLUDE "PE/logging.include.bb2"
0000D476 <file.include.bb2@1843> XINCLUDE "PE/logging.include.bb2"
0000D49A <file.include.bb2@1844> XINCLUDE "PE/logging.include.bb2"
0000D4E4 <file.include.bb2@1845> XINCLUDE "PE/logging.include.bb2"
0000D4FE <file.include.bb2@1846> XINCLUDE "PE/logging.include.bb2"
0000D510 <file.include.bb2@1847> XINCLUDE "PE/logging.include.bb2"
0000D548 <file.include.bb2@1848> XINCLUDE "PE/logging.include.bb2"
0000D55E <file.include.bb2@1849> XINCLUDE "PE/logging.include.bb2"
0000D568 <file.include.bb2@1850> XINCLUDE "PE/logging.include.bb2"
0000D590 <file.include.bb2@1851> XINCLUDE "PE/logging.include.bb2"
0000D594 <file.include.bb2@1853> XINCLUDE "PE/logging.include.bb2"
0000D5BC <file.include.bb2@1854> XINCLUDE "PE/logging.include.bb2"
0000D5CC <file.include.bb2@1856> XINCLUDE "PE/logging.include.bb2"
0000D5E0 <file.include.bb2@1857> XINCLUDE "PE/logging.include.bb2"
0000D5F6 <file.include.bb2@1870> XINCLUDE "PE/logging.include.bb2"
0000D606 <file.include.bb2@1872> XINCLUDE "PE/logging.include.bb2"
0000D60A <file.include.bb2@1873> XINCLUDE "PE/logging.include.bb2"
0000D620 <file.include.bb2@1894> XINCLUDE "PE/logging.include.bb2"
0000D64A <file.include.bb2@1896> XINCLUDE "PE/logging.include.bb2"
0000D652 <file.include.bb2@1897> XINCLUDE "PE/logging.include.bb2"
0000D652 <logging.include.bb2@8> XINCLUDE "PE/logging.include.bb2"
0000D6F0 <logging.include.bb2@30> XINCLUDE "PE/logging.include.bb2"
0000D6F8 <logging.include.bb2@31> XINCLUDE "PE/logging.include.bb2"
0000D700 <logging.include.bb2@32> XINCLUDE "PE/logging.include.bb2"
0000D708 <logging.include.bb2@33> XINCLUDE "PE/logging.include.bb2"
0000D742 <logging.include.bb2@124> XINCLUDE "PE/logging.include.bb2"
0000D774 <logging.include.bb2@126> XINCLUDE "PE/logging.include.bb2"
0000D788 <logging.include.bb2@127> XINCLUDE "PE/logging.include.bb2"
0000D7BA <logging.include.bb2@128> XINCLUDE "PE/logging.include.bb2"
0000DB3C <logging.include.bb2@129> XINCLUDE "PE/logging.include.bb2"
0000DB4A <logging.include.bb2@130> XINCLUDE "PE/logging.include.bb2"
0000DB4E <logging.include.bb2@131> XINCLUDE "PE/logging.include.bb2"
0000DDF0 <logging.include.bb2@132> XINCLUDE "PE/logging.include.bb2"
0000DE0A <logging.include.bb2@134> XINCLUDE "PE/logging.include.bb2"
0000DE44 <logging.include.bb2@137> XINCLUDE "PE/logging.include.bb2"
0000DE96 <logging.include.bb2@138> XINCLUDE "PE/logging.include.bb2"
0000DEAA <logging.include.bb2@139> XINCLUDE "PE/logging.include.bb2"
0000DF00 <logging.include.bb2@140> XINCLUDE "PE/logging.include.bb2"
0000DF04 <logging.include.bb2@141> XINCLUDE "PE/logging.include.bb2"
0000DF80 <logging.include.bb2@142> XINCLUDE "PE/logging.include.bb2"
0000DFF4 <logging.include.bb2@143> XINCLUDE "PE/logging.include.bb2"
0000E00E <logging.include.bb2@145> XINCLUDE "PE/logging.include.bb2"
0000E00E <AmiBlitz3_wizzard.ab2@89> XINCLUDE "PE/logging.include.bb2"
0000E01A <AmiBlitz3_wizzard.ab2@90> optimize 5                               ; added because the include change the optimize and or syntax level  tomsmart1
0000E01A <translation.include.bb2@1> XINCLUDE "translation.include.bb2"
0000E01A <phrasebook.include.bb2@1> XINCLUDE "translation.include.bb2"
0000E01A <prefixtree.include.bb2@1> XINCLUDE "translation.include.bb2"
0000E01A <dynamicarray.include.bb2@1> XINCLUDE "translation.include.bb2"
0000E042 <dynamicarray.include.bb2@42> XINCLUDE "translation.include.bb2"
0000E05C <dynamicarray.include.bb2@55> XINCLUDE "translation.include.bb2"
0000E066 <dynamicarray.include.bb2@56> XINCLUDE "translation.include.bb2"
0000E078 <dynamicarray.include.bb2@57> XINCLUDE "translation.include.bb2"
0000E09C <dynamicarray.include.bb2@58> XINCLUDE "translation.include.bb2"
0000E0AA <dynamicarray.include.bb2@60> XINCLUDE "translation.include.bb2"
0000E0B6 <dynamicarray.include.bb2@61> XINCLUDE "translation.include.bb2"
0000E0BA <dynamicarray.include.bb2@63> XINCLUDE "translation.include.bb2"
0000E0D8 <dynamicarray.include.bb2@99> XINCLUDE "translation.include.bb2"
0000E0F2 <dynamicarray.include.bb2@101> XINCLUDE "translation.include.bb2"
0000E112 <dynamicarray.include.bb2@102> XINCLUDE "translation.include.bb2"
0000E11C <dynamicarray.include.bb2@103> XINCLUDE "translation.include.bb2"
0000E12A <dynamicarray.include.bb2@104> XINCLUDE "translation.include.bb2"
0000E136 <dynamicarray.include.bb2@105> XINCLUDE "translation.include.bb2"
0000E144 <dynamicarray.include.bb2@106> XINCLUDE "translation.include.bb2"
0000E150 <dynamicarray.include.bb2@107> XINCLUDE "translation.include.bb2"
0000E15C <dynamicarray.include.bb2@108> XINCLUDE "translation.include.bb2"
0000E16E <dynamicarray.include.bb2@109> XINCLUDE "translation.include.bb2"
0000E17E <dynamicarray.include.bb2@110> XINCLUDE "translation.include.bb2"
0000E188 <dynamicarray.include.bb2@113> XINCLUDE "translation.include.bb2"
0000E18E <dynamicarray.include.bb2@114> XINCLUDE "translation.include.bb2"
0000E1A8 <dynamicarray.include.bb2@425> XINCLUDE "translation.include.bb2"
0000E1B2 <dynamicarray.include.bb2@427> XINCLUDE "translation.include.bb2"
0000E1BC <dynamicarray.include.bb2@428> XINCLUDE "translation.include.bb2"
0000E1CC <dynamicarray.include.bb2@429> XINCLUDE "translation.include.bb2"
0000E1D6 <dynamicarray.include.bb2@430> XINCLUDE "translation.include.bb2"
0000E1E8 <dynamicarray.include.bb2@431> XINCLUDE "translation.include.bb2"
0000E1FE <dynamicarray.include.bb2@432> XINCLUDE "translation.include.bb2"
0000E208 <dynamicarray.include.bb2@433> XINCLUDE "translation.include.bb2"
0000E20E <dynamicarray.include.bb2@435> XINCLUDE "translation.include.bb2"
0000E212 <dynamicarray.include.bb2@437> XINCLUDE "translation.include.bb2"
0000E228 <dynamicarray.include.bb2@531> XINCLUDE "translation.include.bb2"
0000E22E <dynamicarray.include.bb2@533> XINCLUDE "translation.include.bb2"
0000E238 <dynamicarray.include.bb2@535> XINCLUDE "translation.include.bb2"
0000E26E <dynamicarray.include.bb2@536> XINCLUDE "translation.include.bb2"
0000E278 <dynamicarray.include.bb2@537> XINCLUDE "translation.include.bb2"
0000E27C <dynamicarray.include.bb2@538> XINCLUDE "translation.include.bb2"
0000E2AA <dynamicarray.include.bb2@539> XINCLUDE "translation.include.bb2"
0000E2AA <prefixtree.include.bb2@35> XINCLUDE "translation.include.bb2"
0000E2C4 <prefixtree.include.bb2@100> XINCLUDE "translation.include.bb2"
0000E2CE <prefixtree.include.bb2@101> XINCLUDE "translation.include.bb2"
0000E2F6 <prefixtree.include.bb2@102> XINCLUDE "translation.include.bb2"
0000E318 <prefixtree.include.bb2@103> XINCLUDE "translation.include.bb2"
0000E334 <prefixtree.include.bb2@104> XINCLUDE "translation.include.bb2"
0000E344 <prefixtree.include.bb2@105> XINCLUDE "translation.include.bb2"
0000E348 <prefixtree.include.bb2@107> XINCLUDE "translation.include.bb2"
0000E362 <prefixtree.include.bb2@123> XINCLUDE "translation.include.bb2"
0000E382 <prefixtree.include.bb2@124> XINCLUDE "translation.include.bb2"
0000E38C <prefixtree.include.bb2@125> XINCLUDE "translation.include.bb2"
0000E3A6 <prefixtree.include.bb2@126> XINCLUDE "translation.include.bb2"
0000E3B4 <prefixtree.include.bb2@127> XINCLUDE "translation.include.bb2"
0000E3C2 <prefixtree.include.bb2@128> XINCLUDE "translation.include.bb2"
0000E3D0 <prefixtree.include.bb2@129> XINCLUDE "translation.include.bb2"
0000E3DE <prefixtree.include.bb2@130> XINCLUDE "translation.include.bb2"
0000E3EA <prefixtree.include.bb2@131> XINCLUDE "translation.include.bb2"
0000E3F8 <prefixtree.include.bb2@132> XINCLUDE "translation.include.bb2"
0000E406 <prefixtree.include.bb2@133> XINCLUDE "translation.include.bb2"
0000E414 <prefixtree.include.bb2@134> XINCLUDE "translation.include.bb2"
0000E422 <prefixtree.include.bb2@135> XINCLUDE "translation.include.bb2"
0000E43C <prefixtree.include.bb2@136> XINCLUDE "translation.include.bb2"
0000E44A <prefixtree.include.bb2@137> XINCLUDE "translation.include.bb2"
0000E45A <prefixtree.include.bb2@138> XINCLUDE "translation.include.bb2"
0000E46A <prefixtree.include.bb2@139> XINCLUDE "translation.include.bb2"
0000E47A <prefixtree.include.bb2@140> XINCLUDE "translation.include.bb2"
0000E488 <prefixtree.include.bb2@141> XINCLUDE "translation.include.bb2"
0000E492 <prefixtree.include.bb2@143> XINCLUDE "translation.include.bb2"
0000E498 <prefixtree.include.bb2@144> XINCLUDE "translation.include.bb2"
0000E4B6 <prefixtree.include.bb2@162> XINCLUDE "translation.include.bb2"
0000E4BC <prefixtree.include.bb2@163> XINCLUDE "translation.include.bb2"
0000E4C6 <prefixtree.include.bb2@164> XINCLUDE "translation.include.bb2"
0000E4E6 <prefixtree.include.bb2@165> XINCLUDE "translation.include.bb2"
0000E514 <prefixtree.include.bb2@166> XINCLUDE "translation.include.bb2"
0000E532 <prefixtree.include.bb2@167> XINCLUDE "translation.include.bb2"
0000E53C <prefixtree.include.bb2@168> XINCLUDE "translation.include.bb2"
0000E54E <prefixtree.include.bb2@169> XINCLUDE "translation.include.bb2"
0000E57A <prefixtree.include.bb2@170> XINCLUDE "translation.include.bb2"
0000E590 <prefixtree.include.bb2@171> XINCLUDE "translation.include.bb2"
0000E59C <prefixtree.include.bb2@173> XINCLUDE "translation.include.bb2"
0000E5A8 <prefixtree.include.bb2@174> XINCLUDE "translation.include.bb2"
0000E5AE <prefixtree.include.bb2@175> XINCLUDE "translation.include.bb2"
0000E5B4 <prefixtree.include.bb2@176> XINCLUDE "translation.include.bb2"
0000E5BA <prefixtree.include.bb2@177> XINCLUDE "translation.include.bb2"
0000E5C0 <prefixtree.include.bb2@179> XINCLUDE "translation.include.bb2"
0000E5C6 <prefixtree.include.bb2@180> XINCLUDE "translation.include.bb2"
0000E5D0 <prefixtree.include.bb2@183> XINCLUDE "translation.include.bb2"
0000E5D6 <prefixtree.include.bb2@184> XINCLUDE "translation.include.bb2"
0000E608 <prefixtree.include.bb2@204> XINCLUDE "translation.include.bb2"
0000E622 <prefixtree.include.bb2@205> XINCLUDE "translation.include.bb2"
0000E63A <prefixtree.include.bb2@206> XINCLUDE "translation.include.bb2"
0000E64E <prefixtree.include.bb2@207> XINCLUDE "translation.include.bb2"
0000E69E <prefixtree.include.bb2@208> XINCLUDE "translation.include.bb2"
0000E6BE <prefixtree.include.bb2@210> XINCLUDE "translation.include.bb2"
0000E6D2 <prefixtree.include.bb2@211> XINCLUDE "translation.include.bb2"
0000E6E0 <prefixtree.include.bb2@212> XINCLUDE "translation.include.bb2"
0000E6EC <prefixtree.include.bb2@213> XINCLUDE "translation.include.bb2"
0000E6F4 <prefixtree.include.bb2@214> XINCLUDE "translation.include.bb2"
0000E6FC <prefixtree.include.bb2@215> XINCLUDE "translation.include.bb2"
0000E704 <prefixtree.include.bb2@216> XINCLUDE "translation.include.bb2"
0000E70C <prefixtree.include.bb2@217> XINCLUDE "translation.include.bb2"
0000E712 <prefixtree.include.bb2@218> XINCLUDE "translation.include.bb2"
0000E720 <prefixtree.include.bb2@219> XINCLUDE "translation.include.bb2"
0000E742 <prefixtree.include.bb2@221> XINCLUDE "translation.include.bb2"
0000E76E <prefixtree.include.bb2@222> XINCLUDE "translation.include.bb2"
0000E780 <prefixtree.include.bb2@224> XINCLUDE "translation.include.bb2"
0000E786 <prefixtree.include.bb2@225> XINCLUDE "translation.include.bb2"
0000E7AE <prefixtree.include.bb2@227> XINCLUDE "translation.include.bb2"
0000E7D2 <prefixtree.include.bb2@228> XINCLUDE "translation.include.bb2"
0000E7FA <prefixtree.include.bb2@229> XINCLUDE "translation.include.bb2"
0000E82E <prefixtree.include.bb2@230> XINCLUDE "translation.include.bb2"
0000E83E <prefixtree.include.bb2@231> XINCLUDE "translation.include.bb2"
0000E848 <prefixtree.include.bb2@232> XINCLUDE "translation.include.bb2"
0000E856 <prefixtree.include.bb2@233> XINCLUDE "translation.include.bb2"
0000E86A <prefixtree.include.bb2@234> XINCLUDE "translation.include.bb2"
0000E870 <prefixtree.include.bb2@235> XINCLUDE "translation.include.bb2"
0000E890 <prefixtree.include.bb2@236> XINCLUDE "translation.include.bb2"
0000E896 <prefixtree.include.bb2@237> XINCLUDE "translation.include.bb2"
0000E89E <prefixtree.include.bb2@239> XINCLUDE "translation.include.bb2"
0000E8D8 <prefixtree.include.bb2@241> XINCLUDE "translation.include.bb2"
0000E8FE <prefixtree.include.bb2@242> XINCLUDE "translation.include.bb2"
0000E916 <prefixtree.include.bb2@243> XINCLUDE "translation.include.bb2"
0000E94A <prefixtree.include.bb2@244> XINCLUDE "translation.include.bb2"
0000E952 <prefixtree.include.bb2@245> XINCLUDE "translation.include.bb2"
0000E960 <prefixtree.include.bb2@247> XINCLUDE "translation.include.bb2"
0000E966 <prefixtree.include.bb2@249> XINCLUDE "translation.include.bb2"
0000E97E <prefixtree.include.bb2@250> XINCLUDE "translation.include.bb2"
0000E984 <prefixtree.include.bb2@251> XINCLUDE "translation.include.bb2"
0000E98A <prefixtree.include.bb2@252> XINCLUDE "translation.include.bb2"
0000E9A4 <prefixtree.include.bb2@253> XINCLUDE "translation.include.bb2"
0000E9AA <prefixtree.include.bb2@256> XINCLUDE "translation.include.bb2"
0000E9B0 <prefixtree.include.bb2@258> XINCLUDE "translation.include.bb2"
0000E9B6 <prefixtree.include.bb2@260> XINCLUDE "translation.include.bb2"
0000E9C4 <prefixtree.include.bb2@261> XINCLUDE "translation.include.bb2"
0000E9D2 <prefixtree.include.bb2@262> XINCLUDE "translation.include.bb2"
0000EA0C <prefixtree.include.bb2@264> XINCLUDE "translation.include.bb2"
0000EA32 <prefixtree.include.bb2@265> XINCLUDE "translation.include.bb2"
0000EA4A <prefixtree.include.bb2@266> XINCLUDE "translation.include.bb2"
0000EA56 <prefixtree.include.bb2@269> XINCLUDE "translation.include.bb2"
0000EA62 <prefixtree.include.bb2@270> XINCLUDE "translation.include.bb2"
0000EA6E <prefixtree.include.bb2@271> XINCLUDE "translation.include.bb2"
0000EA7A <prefixtree.include.bb2@272> XINCLUDE "translation.include.bb2"
0000EA86 <prefixtree.include.bb2@273> XINCLUDE "translation.include.bb2"
0000EA90 <prefixtree.include.bb2@274> XINCLUDE "translation.include.bb2"
0000EA98 <prefixtree.include.bb2@276> XINCLUDE "translation.include.bb2"
0000EAB2 <prefixtree.include.bb2@277> XINCLUDE "translation.include.bb2"
0000EAF0 <prefixtree.include.bb2@324> XINCLUDE "translation.include.bb2"
0000EAF6 <prefixtree.include.bb2@325> XINCLUDE "translation.include.bb2"
0000EB36 <prefixtree.include.bb2@326> XINCLUDE "translation.include.bb2"
0000EB8C <prefixtree.include.bb2@327> XINCLUDE "translation.include.bb2"
0000EBFE <prefixtree.include.bb2@328> XINCLUDE "translation.include.bb2"
0000EC0A <prefixtree.include.bb2@330> XINCLUDE "translation.include.bb2"
0000EC18 <prefixtree.include.bb2@331> XINCLUDE "translation.include.bb2"
0000EC5E <prefixtree.include.bb2@332> XINCLUDE "translation.include.bb2"
0000ECA8 <prefixtree.include.bb2@333> XINCLUDE "translation.include.bb2"
0000ECE0 <prefixtree.include.bb2@334> XINCLUDE "translation.include.bb2"
0000ED34 <prefixtree.include.bb2@335> XINCLUDE "translation.include.bb2"
0000ED3A <prefixtree.include.bb2@336> XINCLUDE "translation.include.bb2"
0000ED40 <prefixtree.include.bb2@337> XINCLUDE "translation.include.bb2"
0000ED4E <prefixtree.include.bb2@339> XINCLUDE "translation.include.bb2"
0000ED56 <prefixtree.include.bb2@340> XINCLUDE "translation.include.bb2"
0000ED90 <prefixtree.include.bb2@342> XINCLUDE "translation.include.bb2"
0000EDB6 <prefixtree.include.bb2@343> XINCLUDE "translation.include.bb2"
0000EDCE <prefixtree.include.bb2@344> XINCLUDE "translation.include.bb2"
0000EE04 <prefixtree.include.bb2@345> XINCLUDE "translation.include.bb2"
0000EE1A <prefixtree.include.bb2@346> XINCLUDE "translation.include.bb2"
0000EE28 <prefixtree.include.bb2@348> XINCLUDE "translation.include.bb2"
0000EE40 <prefixtree.include.bb2@349> XINCLUDE "translation.include.bb2"
0000EE78 <prefixtree.include.bb2@350> XINCLUDE "translation.include.bb2"
0000EE9E <prefixtree.include.bb2@351> XINCLUDE "translation.include.bb2"
0000EEE6 <prefixtree.include.bb2@352> XINCLUDE "translation.include.bb2"
0000EEEC <prefixtree.include.bb2@353> XINCLUDE "translation.include.bb2"
0000EF06 <prefixtree.include.bb2@355> XINCLUDE "translation.include.bb2"
0000EF12 <prefixtree.include.bb2@356> XINCLUDE "translation.include.bb2"
0000EF18 <prefixtree.include.bb2@357> XINCLUDE "translation.include.bb2"
0000EF44 <prefixtree.include.bb2@358> XINCLUDE "translation.include.bb2"
0000EF58 <prefixtree.include.bb2@363> XINCLUDE "translation.include.bb2"
0000EF66 <prefixtree.include.bb2@365> XINCLUDE "translation.include.bb2"
0000EF6E <prefixtree.include.bb2@366> XINCLUDE "translation.include.bb2"
0000EFA8 <prefixtree.include.bb2@368> XINCLUDE "translation.include.bb2"
0000EFCE <prefixtree.include.bb2@369> XINCLUDE "translation.include.bb2"
0000EFE6 <prefixtree.include.bb2@370> XINCLUDE "translation.include.bb2"
0000F020 <prefixtree.include.bb2@371> XINCLUDE "translation.include.bb2"
0000F04A <prefixtree.include.bb2@372> XINCLUDE "translation.include.bb2"
0000F062 <prefixtree.include.bb2@373> XINCLUDE "translation.include.bb2"
0000F092 <prefixtree.include.bb2@374> XINCLUDE "translation.include.bb2"
0000F0BE <prefixtree.include.bb2@375> XINCLUDE "translation.include.bb2"
0000F0DA <prefixtree.include.bb2@376> XINCLUDE "translation.include.bb2"
0000F0E8 <prefixtree.include.bb2@378> XINCLUDE "translation.include.bb2"
0000F0F6 <prefixtree.include.bb2@379> XINCLUDE "translation.include.bb2"
0000F134 <prefixtree.include.bb2@380> XINCLUDE "translation.include.bb2"
0000F170 <prefixtree.include.bb2@381> XINCLUDE "translation.include.bb2"
0000F1DC <prefixtree.include.bb2@382> XINCLUDE "translation.include.bb2"
0000F20A <prefixtree.include.bb2@383> XINCLUDE "translation.include.bb2"
0000F238 <prefixtree.include.bb2@384> XINCLUDE "translation.include.bb2"
0000F280 <prefixtree.include.bb2@385> XINCLUDE "translation.include.bb2"
0000F29A <prefixtree.include.bb2@388> XINCLUDE "translation.include.bb2"
0000F2E2 <prefixtree.include.bb2@389> XINCLUDE "translation.include.bb2"
0000F300 <prefixtree.include.bb2@390> XINCLUDE "translation.include.bb2"
0000F31E <prefixtree.include.bb2@391> XINCLUDE "translation.include.bb2"
0000F338 <prefixtree.include.bb2@394> XINCLUDE "translation.include.bb2"
0000F344 <prefixtree.include.bb2@395> XINCLUDE "translation.include.bb2"
0000F34A <prefixtree.include.bb2@396> XINCLUDE "translation.include.bb2"
0000F376 <prefixtree.include.bb2@397> XINCLUDE "translation.include.bb2"
0000F38E <prefixtree.include.bb2@399> XINCLUDE "translation.include.bb2"
0000F394 <prefixtree.include.bb2@400> XINCLUDE "translation.include.bb2"
0000F3A8 <prefixtree.include.bb2@403> XINCLUDE "translation.include.bb2"
0000F3B6 <prefixtree.include.bb2@405> XINCLUDE "translation.include.bb2"
0000F3C4 <prefixtree.include.bb2@406> XINCLUDE "translation.include.bb2"
0000F3D2 <prefixtree.include.bb2@407> XINCLUDE "translation.include.bb2"
0000F3DA <prefixtree.include.bb2@408> XINCLUDE "translation.include.bb2"
0000F3FE <prefixtree.include.bb2@409> XINCLUDE "translation.include.bb2"
0000F426 <prefixtree.include.bb2@410> XINCLUDE "translation.include.bb2"
0000F44E <prefixtree.include.bb2@411> XINCLUDE "translation.include.bb2"
0000F4BA <prefixtree.include.bb2@412> XINCLUDE "translation.include.bb2"
0000F4CA <prefixtree.include.bb2@413> XINCLUDE "translation.include.bb2"
0000F4F6 <prefixtree.include.bb2@414> XINCLUDE "translation.include.bb2"
0000F54C <prefixtree.include.bb2@416> XINCLUDE "translation.include.bb2"
0000F55A <prefixtree.include.bb2@417> XINCLUDE "translation.include.bb2"
0000F568 <prefixtree.include.bb2@418> XINCLUDE "translation.include.bb2"
0000F56E <prefixtree.include.bb2@419> XINCLUDE "translation.include.bb2"
0000F5B6 <prefixtree.include.bb2@421> XINCLUDE "translation.include.bb2"
0000F5FA <prefixtree.include.bb2@422> XINCLUDE "translation.include.bb2"
0000F64A <prefixtree.include.bb2@425> XINCLUDE "translation.include.bb2"
0000F6A0 <prefixtree.include.bb2@426> XINCLUDE "translation.include.bb2"
0000F70C <prefixtree.include.bb2@427> XINCLUDE "translation.include.bb2"
0000F714 <prefixtree.include.bb2@431> XINCLUDE "translation.include.bb2"
0000F74E <prefixtree.include.bb2@433> XINCLUDE "translation.include.bb2"
0000F774 <prefixtree.include.bb2@434> XINCLUDE "translation.include.bb2"
0000F78C <prefixtree.include.bb2@435> XINCLUDE "translation.include.bb2"
0000F7C6 <prefixtree.include.bb2@436> XINCLUDE "translation.include.bb2"
0000F7F0 <prefixtree.include.bb2@437> XINCLUDE "translation.include.bb2"
0000F808 <prefixtree.include.bb2@438> XINCLUDE "translation.include.bb2"
0000F82C <prefixtree.include.bb2@440> XINCLUDE "translation.include.bb2"
0000F880 <prefixtree.include.bb2@441> XINCLUDE "translation.include.bb2"
0000F888 <prefixtree.include.bb2@442> XINCLUDE "translation.include.bb2"
0000F88E <prefixtree.include.bb2@443> XINCLUDE "translation.include.bb2"
0000F8F0 <prefixtree.include.bb2@444> XINCLUDE "translation.include.bb2"
0000F91C <prefixtree.include.bb2@445> XINCLUDE "translation.include.bb2"
0000F938 <prefixtree.include.bb2@448> XINCLUDE "translation.include.bb2"
0000F946 <prefixtree.include.bb2@450> XINCLUDE "translation.include.bb2"
0000F954 <prefixtree.include.bb2@451> XINCLUDE "translation.include.bb2"
0000F962 <prefixtree.include.bb2@453> XINCLUDE "translation.include.bb2"
0000F970 <prefixtree.include.bb2@454> XINCLUDE "translation.include.bb2"
0000F9B4 <prefixtree.include.bb2@455> XINCLUDE "translation.include.bb2"
0000FA20 <prefixtree.include.bb2@456> XINCLUDE "translation.include.bb2"
0000FA4E <prefixtree.include.bb2@457> XINCLUDE "translation.include.bb2"
0000FA62 <prefixtree.include.bb2@458> XINCLUDE "translation.include.bb2"
0000FA94 <prefixtree.include.bb2@459> XINCLUDE "translation.include.bb2"
0000FADE <prefixtree.include.bb2@460> XINCLUDE "translation.include.bb2"
0000FAEE <prefixtree.include.bb2@461> XINCLUDE "translation.include.bb2"
0000FB22 <prefixtree.include.bb2@462> XINCLUDE "translation.include.bb2"
0000FB44 <prefixtree.include.bb2@463> XINCLUDE "translation.include.bb2"
0000FB54 <prefixtree.include.bb2@464> XINCLUDE "translation.include.bb2"
0000FB5C <prefixtree.include.bb2@467> XINCLUDE "translation.include.bb2"
0000FBA0 <prefixtree.include.bb2@468> XINCLUDE "translation.include.bb2"
0000FC0C <prefixtree.include.bb2@469> XINCLUDE "translation.include.bb2"
0000FC3A <prefixtree.include.bb2@470> XINCLUDE "translation.include.bb2"
0000FC5E <prefixtree.include.bb2@472> XINCLUDE "translation.include.bb2"
0000FCA2 <prefixtree.include.bb2@473> XINCLUDE "translation.include.bb2"
0000FD0E <prefixtree.include.bb2@474> XINCLUDE "translation.include.bb2"
0000FD3C <prefixtree.include.bb2@475> XINCLUDE "translation.include.bb2"
0000FD6A <prefixtree.include.bb2@476> XINCLUDE "translation.include.bb2"
0000FD72 <prefixtree.include.bb2@477> XINCLUDE "translation.include.bb2"
0000FDA0 <prefixtree.include.bb2@478> XINCLUDE "translation.include.bb2"
0000FE12 <prefixtree.include.bb2@479> XINCLUDE "translation.include.bb2"
0000FE18 <prefixtree.include.bb2@480> XINCLUDE "translation.include.bb2"
0000FE46 <prefixtree.include.bb2@481> XINCLUDE "translation.include.bb2"
0000FEB8 <prefixtree.include.bb2@482> XINCLUDE "translation.include.bb2"
0000FED6 <prefixtree.include.bb2@485> XINCLUDE "translation.include.bb2"
0000FEFA <prefixtree.include.bb2@486> XINCLUDE "translation.include.bb2"
0000FF12 <prefixtree.include.bb2@487> XINCLUDE "translation.include.bb2"
0000FF18 <prefixtree.include.bb2@488> XINCLUDE "translation.include.bb2"
0000FF1E <prefixtree.include.bb2@491> XINCLUDE "translation.include.bb2"
0000FF20 <prefixtree.include.bb2@493> XINCLUDE "translation.include.bb2"
0000FF2A <prefixtree.include.bb2@496> XINCLUDE "translation.include.bb2"
0000FF56 <prefixtree.include.bb2@497> XINCLUDE "translation.include.bb2"
0000FF78 <prefixtree.include.bb2@515> XINCLUDE "translation.include.bb2"
0000FF80 <prefixtree.include.bb2@516> XINCLUDE "translation.include.bb2"
0000FF86 <prefixtree.include.bb2@517> XINCLUDE "translation.include.bb2"
0000FF94 <prefixtree.include.bb2@518> XINCLUDE "translation.include.bb2"
0000FFCE <prefixtree.include.bb2@520> XINCLUDE "translation.include.bb2"
0000FFF4 <prefixtree.include.bb2@521> XINCLUDE "translation.include.bb2"
0001000C <prefixtree.include.bb2@522> XINCLUDE "translation.include.bb2"
00010046 <prefixtree.include.bb2@523> XINCLUDE "translation.include.bb2"
00010070 <prefixtree.include.bb2@524> XINCLUDE "translation.include.bb2"
00010088 <prefixtree.include.bb2@526> XINCLUDE "translation.include.bb2"
000100A0 <prefixtree.include.bb2@527> XINCLUDE "translation.include.bb2"
000100D8 <prefixtree.include.bb2@528> XINCLUDE "translation.include.bb2"
000100E0 <prefixtree.include.bb2@530> XINCLUDE "translation.include.bb2"
0001011A <prefixtree.include.bb2@532> XINCLUDE "translation.include.bb2"
0001012C <prefixtree.include.bb2@534> XINCLUDE "translation.include.bb2"
00010152 <prefixtree.include.bb2@535> XINCLUDE "translation.include.bb2"
00010168 <prefixtree.include.bb2@536> XINCLUDE "translation.include.bb2"
0001018E <prefixtree.include.bb2@537> XINCLUDE "translation.include.bb2"
000101A2 <prefixtree.include.bb2@538> XINCLUDE "translation.include.bb2"
000101BA <prefixtree.include.bb2@540> XINCLUDE "translation.include.bb2"
000101CC <prefixtree.include.bb2@541> XINCLUDE "translation.include.bb2"
000101D6 <prefixtree.include.bb2@542> XINCLUDE "translation.include.bb2"
000101EA <prefixtree.include.bb2@543> XINCLUDE "translation.include.bb2"
00010204 <prefixtree.include.bb2@560> XINCLUDE "translation.include.bb2"
00010222 <prefixtree.include.bb2@561> XINCLUDE "translation.include.bb2"
00010234 <prefixtree.include.bb2@562> XINCLUDE "translation.include.bb2"
00010252 <prefixtree.include.bb2@563> XINCLUDE "translation.include.bb2"
00010274 <prefixtree.include.bb2@564> XINCLUDE "translation.include.bb2"
00010290 <prefixtree.include.bb2@565> XINCLUDE "translation.include.bb2"
000102B0 <prefixtree.include.bb2@566> XINCLUDE "translation.include.bb2"
000102BA <prefixtree.include.bb2@567> XINCLUDE "translation.include.bb2"
000102C0 <prefixtree.include.bb2@568> XINCLUDE "translation.include.bb2"
000102CA <prefixtree.include.bb2@569> XINCLUDE "translation.include.bb2"
000102D6 <prefixtree.include.bb2@571> XINCLUDE "translation.include.bb2"
000102DC <prefixtree.include.bb2@572> XINCLUDE "translation.include.bb2"
0001030A <prefixtree.include.bb2@591> XINCLUDE "translation.include.bb2"
00010332 <prefixtree.include.bb2@592> XINCLUDE "translation.include.bb2"
00010372 <prefixtree.include.bb2@593> XINCLUDE "translation.include.bb2"
0001038A <prefixtree.include.bb2@594> XINCLUDE "translation.include.bb2"
000103D0 <prefixtree.include.bb2@595> XINCLUDE "translation.include.bb2"
000103FA <prefixtree.include.bb2@598> XINCLUDE "translation.include.bb2"
00010428 <prefixtree.include.bb2@599> XINCLUDE "translation.include.bb2"
00010442 <prefixtree.include.bb2@815> XINCLUDE "translation.include.bb2"
0001044A <prefixtree.include.bb2@816> XINCLUDE "translation.include.bb2"
00010462 <prefixtree.include.bb2@817> XINCLUDE "translation.include.bb2"
0001046C <prefixtree.include.bb2@818> XINCLUDE "translation.include.bb2"
0001047E <prefixtree.include.bb2@819> XINCLUDE "translation.include.bb2"
000104B6 <prefixtree.include.bb2@820> XINCLUDE "translation.include.bb2"
000104C4 <prefixtree.include.bb2@821> XINCLUDE "translation.include.bb2"
000104D0 <prefixtree.include.bb2@822> XINCLUDE "translation.include.bb2"
000104EC <prefixtree.include.bb2@823> XINCLUDE "translation.include.bb2"
0001050E <prefixtree.include.bb2@824> XINCLUDE "translation.include.bb2"
00010530 <prefixtree.include.bb2@825> XINCLUDE "translation.include.bb2"
00010552 <prefixtree.include.bb2@826> XINCLUDE "translation.include.bb2"
00010574 <prefixtree.include.bb2@827> XINCLUDE "translation.include.bb2"
00010590 <prefixtree.include.bb2@828> XINCLUDE "translation.include.bb2"
000105AE <prefixtree.include.bb2@829> XINCLUDE "translation.include.bb2"
000105C2 <prefixtree.include.bb2@830> XINCLUDE "translation.include.bb2"
000105C8 <prefixtree.include.bb2@832> XINCLUDE "translation.include.bb2"
000105CA <prefixtree.include.bb2@834> XINCLUDE "translation.include.bb2"
000105D0 <prefixtree.include.bb2@835> XINCLUDE "translation.include.bb2"
000105DA <prefixtree.include.bb2@837> XINCLUDE "translation.include.bb2"
000105E0 <prefixtree.include.bb2@838> XINCLUDE "translation.include.bb2"
000105FE <prefixtree.include.bb2@856> XINCLUDE "translation.include.bb2"
00010604 <prefixtree.include.bb2@857> XINCLUDE "translation.include.bb2"
00010628 <prefixtree.include.bb2@858> XINCLUDE "translation.include.bb2"
00010646 <prefixtree.include.bb2@859> XINCLUDE "translation.include.bb2"
00010674 <prefixtree.include.bb2@860> XINCLUDE "translation.include.bb2"
000106A2 <prefixtree.include.bb2@861> XINCLUDE "translation.include.bb2"
000106D0 <prefixtree.include.bb2@862> XINCLUDE "translation.include.bb2"
000106FE <prefixtree.include.bb2@863> XINCLUDE "translation.include.bb2"
00010732 <prefixtree.include.bb2@864> XINCLUDE "translation.include.bb2"
00010742 <prefixtree.include.bb2@865> XINCLUDE "translation.include.bb2"
0001074C <prefixtree.include.bb2@867> XINCLUDE "translation.include.bb2"
00010752 <prefixtree.include.bb2@868> XINCLUDE "translation.include.bb2"
00010752 <phrasebook.include.bb2@34> XINCLUDE "translation.include.bb2"
0001079C <phrasebook.include.bb2@58> XINCLUDE "translation.include.bb2"
000107BC <phrasebook.include.bb2@59> XINCLUDE "translation.include.bb2"
000107C6 <phrasebook.include.bb2@60> XINCLUDE "translation.include.bb2"
000107DA <phrasebook.include.bb2@61> XINCLUDE "translation.include.bb2"
00010820 <phrasebook.include.bb2@62> XINCLUDE "translation.include.bb2"
00010866 <phrasebook.include.bb2@63> XINCLUDE "translation.include.bb2"
000108AC <phrasebook.include.bb2@64> XINCLUDE "translation.include.bb2"
000108B6 <phrasebook.include.bb2@66> XINCLUDE "translation.include.bb2"
000108D2 <phrasebook.include.bb2@67> XINCLUDE "translation.include.bb2"
000108FC <phrasebook.include.bb2@70> XINCLUDE "translation.include.bb2"
0001097A <phrasebook.include.bb2@71> XINCLUDE "translation.include.bb2"
000109F8 <phrasebook.include.bb2@72> XINCLUDE "translation.include.bb2"
00010A76 <phrasebook.include.bb2@73> XINCLUDE "translation.include.bb2"
00010AF4 <phrasebook.include.bb2@74> XINCLUDE "translation.include.bb2"
00010B72 <phrasebook.include.bb2@75> XINCLUDE "translation.include.bb2"
00010BF0 <phrasebook.include.bb2@76> XINCLUDE "translation.include.bb2"
00010C6E <phrasebook.include.bb2@77> XINCLUDE "translation.include.bb2"
00010CEC <phrasebook.include.bb2@78> XINCLUDE "translation.include.bb2"
00010D6A <phrasebook.include.bb2@79> XINCLUDE "translation.include.bb2"
00010DE8 <phrasebook.include.bb2@80> XINCLUDE "translation.include.bb2"
00010E6C <phrasebook.include.bb2@81> XINCLUDE "translation.include.bb2"
00010E9C <phrasebook.include.bb2@82> XINCLUDE "translation.include.bb2"
00010EF8 <phrasebook.include.bb2@84> XINCLUDE "translation.include.bb2"
00010F24 <phrasebook.include.bb2@85> XINCLUDE "translation.include.bb2"
00010FEE <phrasebook.include.bb2@86> XINCLUDE "translation.include.bb2"
00010FFC <phrasebook.include.bb2@88> XINCLUDE "translation.include.bb2"
0001103A <phrasebook.include.bb2@89> XINCLUDE "translation.include.bb2"
000110BE <phrasebook.include.bb2@90> XINCLUDE "translation.include.bb2"
000110E8 <phrasebook.include.bb2@91> XINCLUDE "translation.include.bb2"
00011106 <phrasebook.include.bb2@92> XINCLUDE "translation.include.bb2"
00011120 <phrasebook.include.bb2@106> XINCLUDE "translation.include.bb2"
0001112A <phrasebook.include.bb2@107> XINCLUDE "translation.include.bb2"
00011136 <phrasebook.include.bb2@108> XINCLUDE "translation.include.bb2"
00011146 <phrasebook.include.bb2@109> XINCLUDE "translation.include.bb2"
00011156 <phrasebook.include.bb2@110> XINCLUDE "translation.include.bb2"
00011166 <phrasebook.include.bb2@111> XINCLUDE "translation.include.bb2"
00011176 <phrasebook.include.bb2@112> XINCLUDE "translation.include.bb2"
0001117A <phrasebook.include.bb2@114> XINCLUDE "translation.include.bb2"
000111B8 <phrasebook.include.bb2@131> XINCLUDE "translation.include.bb2"
00011210 <phrasebook.include.bb2@132> XINCLUDE "translation.include.bb2"
0001126C <phrasebook.include.bb2@133> XINCLUDE "translation.include.bb2"
000112F6 <phrasebook.include.bb2@134> XINCLUDE "translation.include.bb2"
00011374 <phrasebook.include.bb2@135> XINCLUDE "translation.include.bb2"
0001138E <phrasebook.include.bb2@137> XINCLUDE "translation.include.bb2"
000113BC <phrasebook.include.bb2@155> XINCLUDE "translation.include.bb2"
000113F8 <phrasebook.include.bb2@156> XINCLUDE "translation.include.bb2"
000114C6 <phrasebook.include.bb2@158> XINCLUDE "translation.include.bb2"
00011594 <phrasebook.include.bb2@159> XINCLUDE "translation.include.bb2"
000115E0 <phrasebook.include.bb2@161> XINCLUDE "translation.include.bb2"
0001165E <phrasebook.include.bb2@162> XINCLUDE "translation.include.bb2"
000116DC <phrasebook.include.bb2@163> XINCLUDE "translation.include.bb2"
0001173A <phrasebook.include.bb2@165> XINCLUDE "translation.include.bb2"
000117D0 <phrasebook.include.bb2@166> XINCLUDE "translation.include.bb2"
00011808 <phrasebook.include.bb2@168> XINCLUDE "translation.include.bb2"
00011866 <phrasebook.include.bb2@169> XINCLUDE "translation.include.bb2"
000118EE <phrasebook.include.bb2@170> XINCLUDE "translation.include.bb2"
000118F6 <phrasebook.include.bb2@172> XINCLUDE "translation.include.bb2"
00011960 <phrasebook.include.bb2@174> XINCLUDE "translation.include.bb2"
000119CC <phrasebook.include.bb2@175> XINCLUDE "translation.include.bb2"
00011A0A <phrasebook.include.bb2@176> XINCLUDE "translation.include.bb2"
00011A92 <phrasebook.include.bb2@177> XINCLUDE "translation.include.bb2"
00011ABE <phrasebook.include.bb2@187> XINCLUDE "translation.include.bb2"
00011B1A <phrasebook.include.bb2@188> XINCLUDE "translation.include.bb2"
00011BE2 <phrasebook.include.bb2@189> XINCLUDE "translation.include.bb2"
00011C46 <phrasebook.include.bb2@190> XINCLUDE "translation.include.bb2"
00011C4C <phrasebook.include.bb2@191> XINCLUDE "translation.include.bb2"
00011C80 <phrasebook.include.bb2@192> XINCLUDE "translation.include.bb2"
00011D4E <phrasebook.include.bb2@196> XINCLUDE "translation.include.bb2"
00011E1C <phrasebook.include.bb2@197> XINCLUDE "translation.include.bb2"
00011E46 <phrasebook.include.bb2@199> XINCLUDE "translation.include.bb2"
00011E64 <phrasebook.include.bb2@200> XINCLUDE "translation.include.bb2"
00011E92 <phrasebook.include.bb2@204> XINCLUDE "translation.include.bb2"
00011ECE <phrasebook.include.bb2@205> XINCLUDE "translation.include.bb2"
00011F3E <phrasebook.include.bb2@206> XINCLUDE "translation.include.bb2"
00011F46 <phrasebook.include.bb2@207> XINCLUDE "translation.include.bb2"
00011F98 <phrasebook.include.bb2@208> XINCLUDE "translation.include.bb2"
00011FC0 <phrasebook.include.bb2@209> XINCLUDE "translation.include.bb2"
00011FD8 <phrasebook.include.bb2@210> XINCLUDE "translation.include.bb2"
0001208C <phrasebook.include.bb2@211> XINCLUDE "translation.include.bb2"
0001209A <phrasebook.include.bb2@212> XINCLUDE "translation.include.bb2"
000120F0 <phrasebook.include.bb2@213> XINCLUDE "translation.include.bb2"
0001214E <phrasebook.include.bb2@214> XINCLUDE "translation.include.bb2"
00012154 <phrasebook.include.bb2@215> XINCLUDE "translation.include.bb2"
000121D8 <phrasebook.include.bb2@216> XINCLUDE "translation.include.bb2"
0001225C <phrasebook.include.bb2@217> XINCLUDE "translation.include.bb2"
000122E0 <phrasebook.include.bb2@218> XINCLUDE "translation.include.bb2"
0001235E <phrasebook.include.bb2@219> XINCLUDE "translation.include.bb2"
000123DC <phrasebook.include.bb2@220> XINCLUDE "translation.include.bb2"
0001245A <phrasebook.include.bb2@221> XINCLUDE "translation.include.bb2"
000124D8 <phrasebook.include.bb2@222> XINCLUDE "translation.include.bb2"
00012556 <phrasebook.include.bb2@223> XINCLUDE "translation.include.bb2"
000125D4 <phrasebook.include.bb2@224> XINCLUDE "translation.include.bb2"
00012652 <phrasebook.include.bb2@225> XINCLUDE "translation.include.bb2"
0001267C <phrasebook.include.bb2@226> XINCLUDE "translation.include.bb2"
0001269A <phrasebook.include.bb2@227> XINCLUDE "translation.include.bb2"
000126C8 <phrasebook.include.bb2@245> XINCLUDE "translation.include.bb2"
0001270C <phrasebook.include.bb2@246> XINCLUDE "translation.include.bb2"
00012712 <phrasebook.include.bb2@247> XINCLUDE "translation.include.bb2"
0001272C <phrasebook.include.bb2@248> XINCLUDE "translation.include.bb2"
00012748 <phrasebook.include.bb2@249> XINCLUDE "translation.include.bb2"
0001277C <phrasebook.include.bb2@250> XINCLUDE "translation.include.bb2"
000127A0 <phrasebook.include.bb2@251> XINCLUDE "translation.include.bb2"
000127C8 <phrasebook.include.bb2@252> XINCLUDE "translation.include.bb2"
00012834 <phrasebook.include.bb2@253> XINCLUDE "translation.include.bb2"
00012892 <phrasebook.include.bb2@256> XINCLUDE "translation.include.bb2"
000128F0 <phrasebook.include.bb2@257> XINCLUDE "translation.include.bb2"
0001293C <phrasebook.include.bb2@258> XINCLUDE "translation.include.bb2"
00012996 <phrasebook.include.bb2@259> XINCLUDE "translation.include.bb2"
0001299C <phrasebook.include.bb2@260> XINCLUDE "translation.include.bb2"
000129A2 <phrasebook.include.bb2@262> XINCLUDE "translation.include.bb2"
000129AC <phrasebook.include.bb2@263> XINCLUDE "translation.include.bb2"
000129B6 <phrasebook.include.bb2@264> XINCLUDE "translation.include.bb2"
000129D0 <phrasebook.include.bb2@265> XINCLUDE "translation.include.bb2"
000129FE <phrasebook.include.bb2@282> XINCLUDE "translation.include.bb2"
00012A04 <phrasebook.include.bb2@283> XINCLUDE "translation.include.bb2"
00012A48 <phrasebook.include.bb2@284> XINCLUDE "translation.include.bb2"
00012A62 <phrasebook.include.bb2@285> XINCLUDE "translation.include.bb2"
00012A72 <phrasebook.include.bb2@286> XINCLUDE "translation.include.bb2"
00012A7C <phrasebook.include.bb2@287> XINCLUDE "translation.include.bb2"
00012A88 <phrasebook.include.bb2@288> XINCLUDE "translation.include.bb2"
00012A92 <phrasebook.include.bb2@289> XINCLUDE "translation.include.bb2"
00012AB6 <phrasebook.include.bb2@292> XINCLUDE "translation.include.bb2"
00012AFE <phrasebook.include.bb2@293> XINCLUDE "translation.include.bb2"
00012B46 <phrasebook.include.bb2@294> XINCLUDE "translation.include.bb2"
00012B8E <phrasebook.include.bb2@295> XINCLUDE "translation.include.bb2"
00012BA4 <phrasebook.include.bb2@296> XINCLUDE "translation.include.bb2"
00012BB8 <phrasebook.include.bb2@297> XINCLUDE "translation.include.bb2"
00012BC2 <phrasebook.include.bb2@299> XINCLUDE "translation.include.bb2"
00012BCC <phrasebook.include.bb2@300> XINCLUDE "translation.include.bb2"
00012BE6 <phrasebook.include.bb2@301> XINCLUDE "translation.include.bb2"
00012C10 <phrasebook.include.bb2@317> XINCLUDE "translation.include.bb2"
00012C54 <phrasebook.include.bb2@318> XINCLUDE "translation.include.bb2"
00012C6E <phrasebook.include.bb2@319> XINCLUDE "translation.include.bb2"
00012CCC <phrasebook.include.bb2@320> XINCLUDE "translation.include.bb2"
00012CE6 <phrasebook.include.bb2@321> XINCLUDE "translation.include.bb2"
00012CFE <phrasebook.include.bb2@323> XINCLUDE "translation.include.bb2"
00012D08 <phrasebook.include.bb2@324> XINCLUDE "translation.include.bb2"
00012D24 <phrasebook.include.bb2@325> XINCLUDE "translation.include.bb2"
00012D32 <phrasebook.include.bb2@326> XINCLUDE "translation.include.bb2"
00012D3E <phrasebook.include.bb2@327> XINCLUDE "translation.include.bb2"
00012D8A <phrasebook.include.bb2@328> XINCLUDE "translation.include.bb2"
00012DDC <phrasebook.include.bb2@329> XINCLUDE "translation.include.bb2"
00012E2E <phrasebook.include.bb2@330> XINCLUDE "translation.include.bb2"
00012E42 <phrasebook.include.bb2@331> XINCLUDE "translation.include.bb2"
00012E52 <phrasebook.include.bb2@332> XINCLUDE "translation.include.bb2"
00012E58 <phrasebook.include.bb2@333> XINCLUDE "translation.include.bb2"
00012E5A <phrasebook.include.bb2@335> XINCLUDE "translation.include.bb2"
00012E60 <phrasebook.include.bb2@336> XINCLUDE "translation.include.bb2"
00012E6A <phrasebook.include.bb2@338> XINCLUDE "translation.include.bb2"
00012E74 <phrasebook.include.bb2@339> XINCLUDE "translation.include.bb2"
00012E8E <phrasebook.include.bb2@340> XINCLUDE "translation.include.bb2"
00012EB8 <phrasebook.include.bb2@379> XINCLUDE "translation.include.bb2"
00012ECE <phrasebook.include.bb2@380> XINCLUDE "translation.include.bb2"
00012ED8 <phrasebook.include.bb2@381> XINCLUDE "translation.include.bb2"
00012F50 <phrasebook.include.bb2@382> XINCLUDE "translation.include.bb2"
00012F8C <phrasebook.include.bb2@383> XINCLUDE "translation.include.bb2"
00012F9C <phrasebook.include.bb2@384> XINCLUDE "translation.include.bb2"
00012FBC <phrasebook.include.bb2@385> XINCLUDE "translation.include.bb2"
00012FDC <phrasebook.include.bb2@386> XINCLUDE "translation.include.bb2"
00012FFC <phrasebook.include.bb2@387> XINCLUDE "translation.include.bb2"
00013032 <phrasebook.include.bb2@388> XINCLUDE "translation.include.bb2"
0001305A <phrasebook.include.bb2@389> XINCLUDE "translation.include.bb2"
00013092 <phrasebook.include.bb2@390> XINCLUDE "translation.include.bb2"
000130F6 <phrasebook.include.bb2@391> XINCLUDE "translation.include.bb2"
00013116 <phrasebook.include.bb2@392> XINCLUDE "translation.include.bb2"
00013192 <phrasebook.include.bb2@393> XINCLUDE "translation.include.bb2"
000131CA <phrasebook.include.bb2@396> XINCLUDE "translation.include.bb2"
00013240 <phrasebook.include.bb2@397> XINCLUDE "translation.include.bb2"
00013260 <phrasebook.include.bb2@398> XINCLUDE "translation.include.bb2"
000132DC <phrasebook.include.bb2@399> XINCLUDE "translation.include.bb2"
00013314 <phrasebook.include.bb2@402> XINCLUDE "translation.include.bb2"
0001338A <phrasebook.include.bb2@403> XINCLUDE "translation.include.bb2"
000133AA <phrasebook.include.bb2@404> XINCLUDE "translation.include.bb2"
00013426 <phrasebook.include.bb2@405> XINCLUDE "translation.include.bb2"
00013452 <phrasebook.include.bb2@408> XINCLUDE "translation.include.bb2"
0001345A <phrasebook.include.bb2@409> XINCLUDE "translation.include.bb2"
000134A0 <phrasebook.include.bb2@410> XINCLUDE "translation.include.bb2"
000134C0 <phrasebook.include.bb2@411> XINCLUDE "translation.include.bb2"
000134CA <phrasebook.include.bb2@412> XINCLUDE "translation.include.bb2"
000134E2 <phrasebook.include.bb2@413> XINCLUDE "translation.include.bb2"
000134F2 <phrasebook.include.bb2@414> XINCLUDE "translation.include.bb2"
0001352A <phrasebook.include.bb2@415> XINCLUDE "translation.include.bb2"
0001355C <phrasebook.include.bb2@416> XINCLUDE "translation.include.bb2"
0001356E <phrasebook.include.bb2@419> XINCLUDE "translation.include.bb2"
000135F0 <phrasebook.include.bb2@420> XINCLUDE "translation.include.bb2"
000135FA <phrasebook.include.bb2@421> XINCLUDE "translation.include.bb2"
0001362C <phrasebook.include.bb2@422> XINCLUDE "translation.include.bb2"
0001365E <phrasebook.include.bb2@423> XINCLUDE "translation.include.bb2"
0001368A <phrasebook.include.bb2@428> XINCLUDE "translation.include.bb2"
000136B6 <phrasebook.include.bb2@429> XINCLUDE "translation.include.bb2"
000136D8 <phrasebook.include.bb2@430> XINCLUDE "translation.include.bb2"
000136E2 <phrasebook.include.bb2@432> XINCLUDE "translation.include.bb2"
000136FC <phrasebook.include.bb2@433> XINCLUDE "translation.include.bb2"
000136FC <translation.include.bb2@31> XINCLUDE "translation.include.bb2"
00013712 <translation.include.bb2@43> XINCLUDE "translation.include.bb2"
0001372E <translation.include.bb2@44> XINCLUDE "translation.include.bb2"
00013730 <translation.include.bb2@45> XINCLUDE "translation.include.bb2"
0001375E <translation.include.bb2@46> XINCLUDE "translation.include.bb2"
0001375E <AmiBlitz3_wizzard.ab2@93> XINCLUDE "translation.include.bb2"
0001375E <ted.include.ab3@1> XINCLUDE "/Shared/ted.include.ab3"
00013778 <ted.include.ab3@161> XINCLUDE "/Shared/ted.include.ab3"
00013782 <ted.include.ab3@162> XINCLUDE "/Shared/ted.include.ab3"
000137A4 <ted.include.ab3@163> XINCLUDE "/Shared/ted.include.ab3"
000137BC <ted.include.ab3@164> XINCLUDE "/Shared/ted.include.ab3"
000137D6 <ted.include.ab3@166> XINCLUDE "/Shared/ted.include.ab3"
00013808 <ted.include.ab3@167> XINCLUDE "/Shared/ted.include.ab3"
00013812 <ted.include.ab3@168> XINCLUDE "/Shared/ted.include.ab3"
00013818 <ted.include.ab3@170> XINCLUDE "/Shared/ted.include.ab3"
0001382A <ted.include.ab3@171> XINCLUDE "/Shared/ted.include.ab3"
00013892 <ted.include.ab3@172> XINCLUDE "/Shared/ted.include.ab3"
00013898 <ted.include.ab3@173> XINCLUDE "/Shared/ted.include.ab3"
000138C6 <ted.include.ab3@174> XINCLUDE "/Shared/ted.include.ab3"
000138D0 <ted.include.ab3@177> XINCLUDE "/Shared/ted.include.ab3"
000138D6 <ted.include.ab3@178> XINCLUDE "/Shared/ted.include.ab3"
000138EC <ted.include.ab3@180> XINCLUDE "/Shared/ted.include.ab3"
000138F6 <ted.include.ab3@181> XINCLUDE "/Shared/ted.include.ab3"
0001390E <ted.include.ab3@183> XINCLUDE "/Shared/ted.include.ab3"
00013910 <ted.include.ab3@185> XINCLUDE "/Shared/ted.include.ab3"
0001393E <ted.include.ab3@186> XINCLUDE "/Shared/ted.include.ab3"
00013958 <ted.include.ab3@190> XINCLUDE "/Shared/ted.include.ab3"
0001396E <ted.include.ab3@191> XINCLUDE "/Shared/ted.include.ab3"
000139A2 <ted.include.ab3@192> XINCLUDE "/Shared/ted.include.ab3"
000139A6 <ted.include.ab3@194> XINCLUDE "/Shared/ted.include.ab3"
000139C0 <ted.include.ab3@196> XINCLUDE "/Shared/ted.include.ab3"
000139D6 <ted.include.ab3@197> XINCLUDE "/Shared/ted.include.ab3"
00013A0A <ted.include.ab3@198> XINCLUDE "/Shared/ted.include.ab3"
00013A0E <ted.include.ab3@200> XINCLUDE "/Shared/ted.include.ab3"
00013A28 <ted.include.ab3@216> XINCLUDE "/Shared/ted.include.ab3"
00013A3E <ted.include.ab3@217> XINCLUDE "/Shared/ted.include.ab3"
00013A72 <ted.include.ab3@218> XINCLUDE "/Shared/ted.include.ab3"
00013A76 <ted.include.ab3@220> XINCLUDE "/Shared/ted.include.ab3"
00013A90 <ted.include.ab3@236> XINCLUDE "/Shared/ted.include.ab3"
00013AA6 <ted.include.ab3@237> XINCLUDE "/Shared/ted.include.ab3"
00013ADA <ted.include.ab3@238> XINCLUDE "/Shared/ted.include.ab3"
00013ADE <ted.include.ab3@240> XINCLUDE "/Shared/ted.include.ab3"
00013AF8 <ted.include.ab3@242> XINCLUDE "/Shared/ted.include.ab3"
00013B0E <ted.include.ab3@243> XINCLUDE "/Shared/ted.include.ab3"
00013B42 <ted.include.ab3@244> XINCLUDE "/Shared/ted.include.ab3"
00013B46 <ted.include.ab3@246> XINCLUDE "/Shared/ted.include.ab3"
00013B46 <AmiBlitz3_wizzard.ab2@94> XINCLUDE "/Shared/ted.include.ab3"
00013B46 <CLIModeSupport.ab3@1> XINCLUDE "CLIModeSupport.ab3"
00013B5C <CLIModeSupport.ab3@4> XINCLUDE "CLIModeSupport.ab3"
00013B72 <CLIModeSupport.ab3@7> XINCLUDE "CLIModeSupport.ab3"
00013B80 <CLIModeSupport.ab3@8> XINCLUDE "CLIModeSupport.ab3"
00013B8E <CLIModeSupport.ab3@9> XINCLUDE "CLIModeSupport.ab3"
00013B98 <CLIModeSupport.ab3@11> XINCLUDE "CLIModeSupport.ab3"
00013BAA <CLIModeSupport.ab3@12> XINCLUDE "CLIModeSupport.ab3"
00013BBC <CLIModeSupport.ab3@13> XINCLUDE "CLIModeSupport.ab3"
00013BC2 <CLIModeSupport.ab3@14> XINCLUDE "CLIModeSupport.ab3"
00013BF0 <CLIModeSupport.ab3@15> XINCLUDE "CLIModeSupport.ab3"
00013BF4 <CLIModeSupport.ab3@18> XINCLUDE "CLIModeSupport.ab3"
00013C0A <CLIModeSupport.ab3@21> XINCLUDE "CLIModeSupport.ab3"
00013C20 <CLIModeSupport.ab3@23> XINCLUDE "CLIModeSupport.ab3"
00013C2C <CLIModeSupport.ab3@24> XINCLUDE "CLIModeSupport.ab3"
00013C38 <CLIModeSupport.ab3@25> XINCLUDE "CLIModeSupport.ab3"
00013C40 <CLIModeSupport.ab3@26> XINCLUDE "CLIModeSupport.ab3"
00013C48 <CLIModeSupport.ab3@27> XINCLUDE "CLIModeSupport.ab3"
00013C4C <CLIModeSupport.ab3@28> XINCLUDE "CLIModeSupport.ab3"
00013C76 <CLIModeSupport.ab3@47> XINCLUDE "CLIModeSupport.ab3"
00013CA2 <CLIModeSupport.ab3@49> XINCLUDE "CLIModeSupport.ab3"
00013CB4 <CLIModeSupport.ab3@50> XINCLUDE "CLIModeSupport.ab3"
00013CCC <CLIModeSupport.ab3@52> XINCLUDE "CLIModeSupport.ab3"
00013CE2 <CLIModeSupport.ab3@56> XINCLUDE "CLIModeSupport.ab3"
00013CE8 <CLIModeSupport.ab3@58> XINCLUDE "CLIModeSupport.ab3"
00013D1E <CLIModeSupport.ab3@61> XINCLUDE "CLIModeSupport.ab3"
00013D56 <CLIModeSupport.ab3@62> XINCLUDE "CLIModeSupport.ab3"
00013D8E <CLIModeSupport.ab3@63> XINCLUDE "CLIModeSupport.ab3"
00013DC6 <CLIModeSupport.ab3@64> XINCLUDE "CLIModeSupport.ab3"
00013DFE <CLIModeSupport.ab3@65> XINCLUDE "CLIModeSupport.ab3"
00013E36 <CLIModeSupport.ab3@66> XINCLUDE "CLIModeSupport.ab3"
00013E6E <CLIModeSupport.ab3@67> XINCLUDE "CLIModeSupport.ab3"
00013EA6 <CLIModeSupport.ab3@68> XINCLUDE "CLIModeSupport.ab3"
00013EDE <CLIModeSupport.ab3@69> XINCLUDE "CLIModeSupport.ab3"
00013F16 <CLIModeSupport.ab3@70> XINCLUDE "CLIModeSupport.ab3"
00013F4E <CLIModeSupport.ab3@71> XINCLUDE "CLIModeSupport.ab3"
00013F86 <CLIModeSupport.ab3@72> XINCLUDE "CLIModeSupport.ab3"
00013FBE <CLIModeSupport.ab3@73> XINCLUDE "CLIModeSupport.ab3"
00013FC8 <CLIModeSupport.ab3@74> XINCLUDE "CLIModeSupport.ab3"
00013FD2 <CLIModeSupport.ab3@76> XINCLUDE "CLIModeSupport.ab3"
00013FDC <CLIModeSupport.ab3@77> XINCLUDE "CLIModeSupport.ab3"
00013FF0 <CLIModeSupport.ab3@79> XINCLUDE "CLIModeSupport.ab3"
0001402C <CLIModeSupport.ab3@80> XINCLUDE "CLIModeSupport.ab3"
00014068 <CLIModeSupport.ab3@81> XINCLUDE "CLIModeSupport.ab3"
000140A4 <CLIModeSupport.ab3@82> XINCLUDE "CLIModeSupport.ab3"
000140E0 <CLIModeSupport.ab3@83> XINCLUDE "CLIModeSupport.ab3"
0001411C <CLIModeSupport.ab3@84> XINCLUDE "CLIModeSupport.ab3"
00014122 <CLIModeSupport.ab3@85> XINCLUDE "CLIModeSupport.ab3"
00014150 <CLIModeSupport.ab3@86> XINCLUDE "CLIModeSupport.ab3"
0001417A <CLIModeSupport.ab3@89> XINCLUDE "CLIModeSupport.ab3"
00014184 <CLIModeSupport.ab3@90> XINCLUDE "CLIModeSupport.ab3"
00014188 <CLIModeSupport.ab3@91> XINCLUDE "CLIModeSupport.ab3"
000141BC <CLIModeSupport.ab3@92> XINCLUDE "CLIModeSupport.ab3"
000141C2 <CLIModeSupport.ab3@93> XINCLUDE "CLIModeSupport.ab3"
000141F0 <CLIModeSupport.ab3@94> XINCLUDE "CLIModeSupport.ab3"
000141F6 <CLIModeSupport.ab3@95> XINCLUDE "CLIModeSupport.ab3"
0001420C <CLIModeSupport.ab3@98> XINCLUDE "CLIModeSupport.ab3"
00014216 <CLIModeSupport.ab3@100> XINCLUDE "CLIModeSupport.ab3"
0001421C <CLIModeSupport.ab3@101> XINCLUDE "CLIModeSupport.ab3"
00014232 <CLIModeSupport.ab3@105> XINCLUDE "CLIModeSupport.ab3"
00014238 <CLIModeSupport.ab3@106> XINCLUDE "CLIModeSupport.ab3"
00014276 <CLIModeSupport.ab3@108> XINCLUDE "CLIModeSupport.ab3"
0001427A <CLIModeSupport.ab3@109> XINCLUDE "CLIModeSupport.ab3"
00014284 <CLIModeSupport.ab3@110> XINCLUDE "CLIModeSupport.ab3"
00014286 <CLIModeSupport.ab3@111> XINCLUDE "CLIModeSupport.ab3"
000142BA <CLIModeSupport.ab3@112> XINCLUDE "CLIModeSupport.ab3"
000142CA <CLIModeSupport.ab3@113> XINCLUDE "CLIModeSupport.ab3"
000142D0 <CLIModeSupport.ab3@116> XINCLUDE "CLIModeSupport.ab3"
000142DA <CLIModeSupport.ab3@118> XINCLUDE "CLIModeSupport.ab3"
000142E0 <CLIModeSupport.ab3@119> XINCLUDE "CLIModeSupport.ab3"
000142F6 <CLIModeSupport.ab3@123> XINCLUDE "CLIModeSupport.ab3"
00014334 <CLIModeSupport.ab3@124> XINCLUDE "CLIModeSupport.ab3"
00014338 <CLIModeSupport.ab3@125> XINCLUDE "CLIModeSupport.ab3"
00014340 <CLIModeSupport.ab3@126> XINCLUDE "CLIModeSupport.ab3"
0001437E <CLIModeSupport.ab3@127> XINCLUDE "CLIModeSupport.ab3"
00014380 <CLIModeSupport.ab3@128> XINCLUDE "CLIModeSupport.ab3"
00014384 <CLIModeSupport.ab3@129> XINCLUDE "CLIModeSupport.ab3"
000143C2 <CLIModeSupport.ab3@131> XINCLUDE "CLIModeSupport.ab3"
000143C6 <CLIModeSupport.ab3@132> XINCLUDE "CLIModeSupport.ab3"
00014404 <CLIModeSupport.ab3@134> XINCLUDE "CLIModeSupport.ab3"
00014408 <CLIModeSupport.ab3@135> XINCLUDE "CLIModeSupport.ab3"
00014432 <CLIModeSupport.ab3@137> XINCLUDE "CLIModeSupport.ab3"
0001443C <CLIModeSupport.ab3@138> XINCLUDE "CLIModeSupport.ab3"
00014450 <CLIModeSupport.ab3@139> XINCLUDE "CLIModeSupport.ab3"
00014476 <CLIModeSupport.ab3@140> XINCLUDE "CLIModeSupport.ab3"
0001447C <CLIModeSupport.ab3@141> XINCLUDE "CLIModeSupport.ab3"
0001448A <CLIModeSupport.ab3@142> XINCLUDE "CLIModeSupport.ab3"
00014490 <CLIModeSupport.ab3@143> XINCLUDE "CLIModeSupport.ab3"
000144C8 <CLIModeSupport.ab3@145> XINCLUDE "CLIModeSupport.ab3"
000144CC <CLIModeSupport.ab3@148> XINCLUDE "CLIModeSupport.ab3"
000144F6 <CLIModeSupport.ab3@151> XINCLUDE "CLIModeSupport.ab3"
000144FC <CLIModeSupport.ab3@152> XINCLUDE "CLIModeSupport.ab3"
0001451C <CLIModeSupport.ab3@153> XINCLUDE "CLIModeSupport.ab3"
00014526 <CLIModeSupport.ab3@154> XINCLUDE "CLIModeSupport.ab3"
0001452A <CLIModeSupport.ab3@155> XINCLUDE "CLIModeSupport.ab3"
0001452C <CLIModeSupport.ab3@156> XINCLUDE "CLIModeSupport.ab3"
0001454A <CLIModeSupport.ab3@157> XINCLUDE "CLIModeSupport.ab3"
0001454C <CLIModeSupport.ab3@158> XINCLUDE "CLIModeSupport.ab3"
00014552 <CLIModeSupport.ab3@159> XINCLUDE "CLIModeSupport.ab3"
00014558 <CLIModeSupport.ab3@160> XINCLUDE "CLIModeSupport.ab3"
00014582 <CLIModeSupport.ab3@162> XINCLUDE "CLIModeSupport.ab3"
00014584 <CLIModeSupport.ab3@163> XINCLUDE "CLIModeSupport.ab3"
000145B2 <CLIModeSupport.ab3@164> XINCLUDE "CLIModeSupport.ab3"
000145B6 <CLIModeSupport.ab3@165> XINCLUDE "CLIModeSupport.ab3"
000145E4 <CLIModeSupport.ab3@166> XINCLUDE "CLIModeSupport.ab3"
000145E8 <CLIModeSupport.ab3@167> XINCLUDE "CLIModeSupport.ab3"
0001460E <CLIModeSupport.ab3@169> XINCLUDE "CLIModeSupport.ab3"
0001461E <CLIModeSupport.ab3@170> XINCLUDE "CLIModeSupport.ab3"
00014624 <CLIModeSupport.ab3@171> XINCLUDE "CLIModeSupport.ab3"
0001462A <CLIModeSupport.ab3@172> XINCLUDE "CLIModeSupport.ab3"
00014658 <CLIModeSupport.ab3@173> XINCLUDE "CLIModeSupport.ab3"
00014662 <CLIModeSupport.ab3@175> XINCLUDE "CLIModeSupport.ab3"
0001467C <CLIModeSupport.ab3@176> XINCLUDE "CLIModeSupport.ab3"
0001469A <CLIModeSupport.ab3@188> XINCLUDE "CLIModeSupport.ab3"
000146A2 <CLIModeSupport.ab3@189> XINCLUDE "CLIModeSupport.ab3"
000146A8 <CLIModeSupport.ab3@190> XINCLUDE "CLIModeSupport.ab3"
000146AE <CLIModeSupport.ab3@191> XINCLUDE "CLIModeSupport.ab3"
000146D0 <CLIModeSupport.ab3@192> XINCLUDE "CLIModeSupport.ab3"
000146E8 <CLIModeSupport.ab3@194> XINCLUDE "CLIModeSupport.ab3"
0001470E <CLIModeSupport.ab3@195> XINCLUDE "CLIModeSupport.ab3"
00014738 <CLIModeSupport.ab3@196> XINCLUDE "CLIModeSupport.ab3"
00014746 <CLIModeSupport.ab3@197> XINCLUDE "CLIModeSupport.ab3"
0001474C <CLIModeSupport.ab3@198> XINCLUDE "CLIModeSupport.ab3"
00014760 <CLIModeSupport.ab3@199> XINCLUDE "CLIModeSupport.ab3"
00014778 <CLIModeSupport.ab3@201> XINCLUDE "CLIModeSupport.ab3"
00014786 <CLIModeSupport.ab3@202> XINCLUDE "CLIModeSupport.ab3"
0001479A <CLIModeSupport.ab3@203> XINCLUDE "CLIModeSupport.ab3"
000147D0 <CLIModeSupport.ab3@204> XINCLUDE "CLIModeSupport.ab3"
000147DE <CLIModeSupport.ab3@205> XINCLUDE "CLIModeSupport.ab3"
0001480E <CLIModeSupport.ab3@206> XINCLUDE "CLIModeSupport.ab3"
0001481C <CLIModeSupport.ab3@207> XINCLUDE "CLIModeSupport.ab3"
00014822 <CLIModeSupport.ab3@208> XINCLUDE "CLIModeSupport.ab3"
00014830 <CLIModeSupport.ab3@209> XINCLUDE "CLIModeSupport.ab3"
00014836 <CLIModeSupport.ab3@210> XINCLUDE "CLIModeSupport.ab3"
0001483C <CLIModeSupport.ab3@212> XINCLUDE "CLIModeSupport.ab3"
0001484A <CLIModeSupport.ab3@213> XINCLUDE "CLIModeSupport.ab3"
0001484C <CLIModeSupport.ab3@214> XINCLUDE "CLIModeSupport.ab3"
00014852 <CLIModeSupport.ab3@216> XINCLUDE "CLIModeSupport.ab3"
00014868 <CLIModeSupport.ab3@218> XINCLUDE "CLIModeSupport.ab3"
00014872 <CLIModeSupport.ab3@219> XINCLUDE "CLIModeSupport.ab3"
00014878 <CLIModeSupport.ab3@220> XINCLUDE "CLIModeSupport.ab3"
000148A2 <CLIModeSupport.ab3@224> XINCLUDE "CLIModeSupport.ab3"
000148E0 <CLIModeSupport.ab3@225> XINCLUDE "CLIModeSupport.ab3"
000148E4 <CLIModeSupport.ab3@226> XINCLUDE "CLIModeSupport.ab3"
00014922 <CLIModeSupport.ab3@227> XINCLUDE "CLIModeSupport.ab3"
00014926 <CLIModeSupport.ab3@228> XINCLUDE "CLIModeSupport.ab3"
00014964 <CLIModeSupport.ab3@229> XINCLUDE "CLIModeSupport.ab3"
00014968 <CLIModeSupport.ab3@230> XINCLUDE "CLIModeSupport.ab3"
00014970 <CLIModeSupport.ab3@232> XINCLUDE "CLIModeSupport.ab3"
00014978 <CLIModeSupport.ab3@233> XINCLUDE "CLIModeSupport.ab3"
000149BC <CLIModeSupport.ab3@235> XINCLUDE "CLIModeSupport.ab3"
000149CE <CLIModeSupport.ab3@236> XINCLUDE "CLIModeSupport.ab3"
000149DC <CLIModeSupport.ab3@237> XINCLUDE "CLIModeSupport.ab3"
00014A10 <CLIModeSupport.ab3@238> XINCLUDE "CLIModeSupport.ab3"
00014A34 <CLIModeSupport.ab3@240> XINCLUDE "CLIModeSupport.ab3"
00014A3E <CLIModeSupport.ab3@241> XINCLUDE "CLIModeSupport.ab3"
00014A58 <CLIModeSupport.ab3@242> XINCLUDE "CLIModeSupport.ab3"
00014A6C <CLIModeSupport.ab3@243> XINCLUDE "CLIModeSupport.ab3"
00014AC4 <CLIModeSupport.ab3@244> XINCLUDE "CLIModeSupport.ab3"
00014B64 <CLIModeSupport.ab3@245> XINCLUDE "CLIModeSupport.ab3"
00014B6C <CLIModeSupport.ab3@246> XINCLUDE "CLIModeSupport.ab3"
00014BA4 <CLIModeSupport.ab3@247> XINCLUDE "CLIModeSupport.ab3"
00014BAA <CLIModeSupport.ab3@248> XINCLUDE "CLIModeSupport.ab3"
00014BBA <CLIModeSupport.ab3@249> XINCLUDE "CLIModeSupport.ab3"
00014BE2 <CLIModeSupport.ab3@252> XINCLUDE "CLIModeSupport.ab3"
00014C0A <CLIModeSupport.ab3@253> XINCLUDE "CLIModeSupport.ab3"
00014C12 <CLIModeSupport.ab3@254> XINCLUDE "CLIModeSupport.ab3"
00014C18 <CLIModeSupport.ab3@255> XINCLUDE "CLIModeSupport.ab3"
00014C20 <CLIModeSupport.ab3@256> XINCLUDE "CLIModeSupport.ab3"
00014C48 <CLIModeSupport.ab3@257> XINCLUDE "CLIModeSupport.ab3"
00014C50 <CLIModeSupport.ab3@258> XINCLUDE "CLIModeSupport.ab3"
00014C58 <CLIModeSupport.ab3@259> XINCLUDE "CLIModeSupport.ab3"
00014C5E <CLIModeSupport.ab3@260> XINCLUDE "CLIModeSupport.ab3"
00014C64 <CLIModeSupport.ab3@261> XINCLUDE "CLIModeSupport.ab3"
00014C6A <CLIModeSupport.ab3@262> XINCLUDE "CLIModeSupport.ab3"
00014C70 <CLIModeSupport.ab3@263> XINCLUDE "CLIModeSupport.ab3"
00014C76 <CLIModeSupport.ab3@264> XINCLUDE "CLIModeSupport.ab3"
00014C7C <CLIModeSupport.ab3@265> XINCLUDE "CLIModeSupport.ab3"
00014C82 <CLIModeSupport.ab3@266> XINCLUDE "CLIModeSupport.ab3"
00014C88 <CLIModeSupport.ab3@267> XINCLUDE "CLIModeSupport.ab3"
00014C90 <CLIModeSupport.ab3@268> XINCLUDE "CLIModeSupport.ab3"
00014C98 <CLIModeSupport.ab3@269> XINCLUDE "CLIModeSupport.ab3"
00014CC0 <CLIModeSupport.ab3@270> XINCLUDE "CLIModeSupport.ab3"
00014CC6 <CLIModeSupport.ab3@271> XINCLUDE "CLIModeSupport.ab3"
00014CCC <CLIModeSupport.ab3@272> XINCLUDE "CLIModeSupport.ab3"
00014CD4 <CLIModeSupport.ab3@273> XINCLUDE "CLIModeSupport.ab3"
00014CF4 <CLIModeSupport.ab3@277> XINCLUDE "CLIModeSupport.ab3"
00014D04 <CLIModeSupport.ab3@279> XINCLUDE "CLIModeSupport.ab3"
00014D14 <CLIModeSupport.ab3@280> XINCLUDE "CLIModeSupport.ab3"
00014D24 <CLIModeSupport.ab3@282> XINCLUDE "CLIModeSupport.ab3"
00014D34 <CLIModeSupport.ab3@283> XINCLUDE "CLIModeSupport.ab3"
00014D44 <CLIModeSupport.ab3@284> XINCLUDE "CLIModeSupport.ab3"
00014D54 <CLIModeSupport.ab3@285> XINCLUDE "CLIModeSupport.ab3"
00014D64 <CLIModeSupport.ab3@286> XINCLUDE "CLIModeSupport.ab3"
00014D74 <CLIModeSupport.ab3@287> XINCLUDE "CLIModeSupport.ab3"
00014D84 <CLIModeSupport.ab3@288> XINCLUDE "CLIModeSupport.ab3"
00014D94 <CLIModeSupport.ab3@289> XINCLUDE "CLIModeSupport.ab3"
00014DA4 <CLIModeSupport.ab3@290> XINCLUDE "CLIModeSupport.ab3"
00014DB4 <CLIModeSupport.ab3@291> XINCLUDE "CLIModeSupport.ab3"
00014DC4 <CLIModeSupport.ab3@292> XINCLUDE "CLIModeSupport.ab3"
00014DD4 <CLIModeSupport.ab3@293> XINCLUDE "CLIModeSupport.ab3"
00014DE4 <CLIModeSupport.ab3@294> XINCLUDE "CLIModeSupport.ab3"
00014DF4 <CLIModeSupport.ab3@295> XINCLUDE "CLIModeSupport.ab3"
00014E06 <CLIModeSupport.ab3@297> XINCLUDE "CLIModeSupport.ab3"
00014E18 <CLIModeSupport.ab3@298> XINCLUDE "CLIModeSupport.ab3"
00014E2A <CLIModeSupport.ab3@299> XINCLUDE "CLIModeSupport.ab3"
00014E3C <CLIModeSupport.ab3@300> XINCLUDE "CLIModeSupport.ab3"
00014E4E <CLIModeSupport.ab3@301> XINCLUDE "CLIModeSupport.ab3"
00014E60 <CLIModeSupport.ab3@302> XINCLUDE "CLIModeSupport.ab3"
00014E72 <CLIModeSupport.ab3@304> XINCLUDE "CLIModeSupport.ab3"
00014E84 <CLIModeSupport.ab3@305> XINCLUDE "CLIModeSupport.ab3"
00014EB8 <CLIModeSupport.ab3@308> XINCLUDE "CLIModeSupport.ab3"
00014ED0 <CLIModeSupport.ab3@309> XINCLUDE "CLIModeSupport.ab3"
00014F1C <CLIModeSupport.ab3@310> XINCLUDE "CLIModeSupport.ab3"
00014F2E <CLIModeSupport.ab3@311> XINCLUDE "CLIModeSupport.ab3"
00014F84 <CLIModeSupport.ab3@312> XINCLUDE "CLIModeSupport.ab3"
00014FF6 <CLIModeSupport.ab3@313> XINCLUDE "CLIModeSupport.ab3"
00014FFC <CLIModeSupport.ab3@314> XINCLUDE "CLIModeSupport.ab3"
00015030 <CLIModeSupport.ab3@315> XINCLUDE "CLIModeSupport.ab3"
00015058 <CLIModeSupport.ab3@316> XINCLUDE "CLIModeSupport.ab3"
00015080 <CLIModeSupport.ab3@318> XINCLUDE "CLIModeSupport.ab3"
000150BA <CLIModeSupport.ab3@319> XINCLUDE "CLIModeSupport.ab3"
000150D2 <CLIModeSupport.ab3@320> XINCLUDE "CLIModeSupport.ab3"
00015156 <CLIModeSupport.ab3@321> XINCLUDE "CLIModeSupport.ab3"
00015170 <CLIModeSupport.ab3@322> XINCLUDE "CLIModeSupport.ab3"
000151BE <CLIModeSupport.ab3@323> XINCLUDE "CLIModeSupport.ab3"
000151CE <CLIModeSupport.ab3@325> XINCLUDE "CLIModeSupport.ab3"
000151D6 <CLIModeSupport.ab3@327> XINCLUDE "CLIModeSupport.ab3"
000151EA <CLIModeSupport.ab3@328> XINCLUDE "CLIModeSupport.ab3"
00015230 <CLIModeSupport.ab3@329> XINCLUDE "CLIModeSupport.ab3"
00015236 <CLIModeSupport.ab3@330> XINCLUDE "CLIModeSupport.ab3"
00015280 <CLIModeSupport.ab3@331> XINCLUDE "CLIModeSupport.ab3"
000152EA <CLIModeSupport.ab3@332> XINCLUDE "CLIModeSupport.ab3"
00015350 <CLIModeSupport.ab3@333> XINCLUDE "CLIModeSupport.ab3"
00015384 <CLIModeSupport.ab3@334> XINCLUDE "CLIModeSupport.ab3"
000153B0 <CLIModeSupport.ab3@336> XINCLUDE "CLIModeSupport.ab3"
000153FE <CLIModeSupport.ab3@337> XINCLUDE "CLIModeSupport.ab3"
00015422 <CLIModeSupport.ab3@338> XINCLUDE "CLIModeSupport.ab3"
00015428 <CLIModeSupport.ab3@339> XINCLUDE "CLIModeSupport.ab3"
00015436 <CLIModeSupport.ab3@341> XINCLUDE "CLIModeSupport.ab3"
00015494 <CLIModeSupport.ab3@343> XINCLUDE "CLIModeSupport.ab3"
000154F2 <CLIModeSupport.ab3@344> XINCLUDE "CLIModeSupport.ab3"
0001551C <CLIModeSupport.ab3@345> XINCLUDE "CLIModeSupport.ab3"
00015526 <CLIModeSupport.ab3@346> XINCLUDE "CLIModeSupport.ab3"
0001552E <CLIModeSupport.ab3@347> XINCLUDE "CLIModeSupport.ab3"
0001556C <CLIModeSupport.ab3@348> XINCLUDE "CLIModeSupport.ab3"
000155B8 <CLIModeSupport.ab3@349> XINCLUDE "CLIModeSupport.ab3"
000155CA <CLIModeSupport.ab3@350> XINCLUDE "CLIModeSupport.ab3"
00015620 <CLIModeSupport.ab3@351> XINCLUDE "CLIModeSupport.ab3"
00015698 <CLIModeSupport.ab3@352> XINCLUDE "CLIModeSupport.ab3"
0001569E <CLIModeSupport.ab3@353> XINCLUDE "CLIModeSupport.ab3"
000156D2 <CLIModeSupport.ab3@354> XINCLUDE "CLIModeSupport.ab3"
000156FA <CLIModeSupport.ab3@355> XINCLUDE "CLIModeSupport.ab3"
00015730 <CLIModeSupport.ab3@358> XINCLUDE "CLIModeSupport.ab3"
0001573E <CLIModeSupport.ab3@359> XINCLUDE "CLIModeSupport.ab3"
0001574C <CLIModeSupport.ab3@360> XINCLUDE "CLIModeSupport.ab3"
000157B4 <CLIModeSupport.ab3@361> XINCLUDE "CLIModeSupport.ab3"
000157BA <CLIModeSupport.ab3@362> XINCLUDE "CLIModeSupport.ab3"
00015804 <CLIModeSupport.ab3@363> XINCLUDE "CLIModeSupport.ab3"
0001584E <CLIModeSupport.ab3@364> XINCLUDE "CLIModeSupport.ab3"
0001587E <CLIModeSupport.ab3@365> XINCLUDE "CLIModeSupport.ab3"
000158A8 <CLIModeSupport.ab3@366> XINCLUDE "CLIModeSupport.ab3"
000158FA <CLIModeSupport.ab3@367> XINCLUDE "CLIModeSupport.ab3"
00015950 <CLIModeSupport.ab3@368> XINCLUDE "CLIModeSupport.ab3"
000159A0 <CLIModeSupport.ab3@369> XINCLUDE "CLIModeSupport.ab3"
00015A06 <CLIModeSupport.ab3@370> XINCLUDE "CLIModeSupport.ab3"
00015A72 <CLIModeSupport.ab3@371> XINCLUDE "CLIModeSupport.ab3"
00015A9E <CLIModeSupport.ab3@372> XINCLUDE "CLIModeSupport.ab3"
00015ACE <CLIModeSupport.ab3@373> XINCLUDE "CLIModeSupport.ab3"
00015B4A <CLIModeSupport.ab3@374> XINCLUDE "CLIModeSupport.ab3"
00015B7A <CLIModeSupport.ab3@375> XINCLUDE "CLIModeSupport.ab3"
00015BAA <CLIModeSupport.ab3@376> XINCLUDE "CLIModeSupport.ab3"
00015BDA <CLIModeSupport.ab3@377> XINCLUDE "CLIModeSupport.ab3"
00015C0A <CLIModeSupport.ab3@378> XINCLUDE "CLIModeSupport.ab3"
00015C3A <CLIModeSupport.ab3@379> XINCLUDE "CLIModeSupport.ab3"
00015C6A <CLIModeSupport.ab3@380> XINCLUDE "CLIModeSupport.ab3"
00015C9A <CLIModeSupport.ab3@381> XINCLUDE "CLIModeSupport.ab3"
00015CCA <CLIModeSupport.ab3@382> XINCLUDE "CLIModeSupport.ab3"
00015CFA <CLIModeSupport.ab3@383> XINCLUDE "CLIModeSupport.ab3"
00015D2A <CLIModeSupport.ab3@384> XINCLUDE "CLIModeSupport.ab3"
00015DA6 <CLIModeSupport.ab3@385> XINCLUDE "CLIModeSupport.ab3"
00015DD8 <CLIModeSupport.ab3@386> XINCLUDE "CLIModeSupport.ab3"
00015E0A <CLIModeSupport.ab3@387> XINCLUDE "CLIModeSupport.ab3"
00015E3A <CLIModeSupport.ab3@388> XINCLUDE "CLIModeSupport.ab3"
00015E40 <CLIModeSupport.ab3@389> XINCLUDE "CLIModeSupport.ab3"
00015EB4 <CLIModeSupport.ab3@390> XINCLUDE "CLIModeSupport.ab3"
00015F20 <CLIModeSupport.ab3@391> XINCLUDE "CLIModeSupport.ab3"
00015F32 <CLIModeSupport.ab3@392> XINCLUDE "CLIModeSupport.ab3"
00015F60 <CLIModeSupport.ab3@393> XINCLUDE "CLIModeSupport.ab3"
00015F88 <CLIModeSupport.ab3@394> XINCLUDE "CLIModeSupport.ab3"
00015F9C <CLIModeSupport.ab3@395> XINCLUDE "CLIModeSupport.ab3"
00015FC6 <CLIModeSupport.ab3@396> XINCLUDE "CLIModeSupport.ab3"
0001600A <CLIModeSupport.ab3@397> XINCLUDE "CLIModeSupport.ab3"
0001601A <CLIModeSupport.ab3@398> XINCLUDE "CLIModeSupport.ab3"
0001602A <CLIModeSupport.ab3@399> XINCLUDE "CLIModeSupport.ab3"
00016030 <CLIModeSupport.ab3@400> XINCLUDE "CLIModeSupport.ab3"
00016040 <CLIModeSupport.ab3@402> XINCLUDE "CLIModeSupport.ab3"
0001604E <CLIModeSupport.ab3@406> XINCLUDE "CLIModeSupport.ab3"
00016058 <CLIModeSupport.ab3@409> XINCLUDE "CLIModeSupport.ab3"
00016090 <CLIModeSupport.ab3@412> XINCLUDE "CLIModeSupport.ab3"
000160C8 <CLIModeSupport.ab3@413> XINCLUDE "CLIModeSupport.ab3"
00016100 <CLIModeSupport.ab3@414> XINCLUDE "CLIModeSupport.ab3"
00016110 <CLIModeSupport.ab3@415> XINCLUDE "CLIModeSupport.ab3"
00016178 <CLIModeSupport.ab3@416> XINCLUDE "CLIModeSupport.ab3"
000161B0 <CLIModeSupport.ab3@417> XINCLUDE "CLIModeSupport.ab3"
000161C0 <CLIModeSupport.ab3@418> XINCLUDE "CLIModeSupport.ab3"
000161D0 <CLIModeSupport.ab3@419> XINCLUDE "CLIModeSupport.ab3"
00016238 <CLIModeSupport.ab3@420> XINCLUDE "CLIModeSupport.ab3"
000162A0 <CLIModeSupport.ab3@421> XINCLUDE "CLIModeSupport.ab3"
00016308 <CLIModeSupport.ab3@422> XINCLUDE "CLIModeSupport.ab3"
00016370 <CLIModeSupport.ab3@423> XINCLUDE "CLIModeSupport.ab3"
000163D8 <CLIModeSupport.ab3@424> XINCLUDE "CLIModeSupport.ab3"
00016440 <CLIModeSupport.ab3@425> XINCLUDE "CLIModeSupport.ab3"
000164A8 <CLIModeSupport.ab3@426> XINCLUDE "CLIModeSupport.ab3"
00016510 <CLIModeSupport.ab3@427> XINCLUDE "CLIModeSupport.ab3"
00016520 <CLIModeSupport.ab3@428> XINCLUDE "CLIModeSupport.ab3"
00016558 <CLIModeSupport.ab3@430> XINCLUDE "CLIModeSupport.ab3"
00016592 <CLIModeSupport.ab3@431> XINCLUDE "CLIModeSupport.ab3"
000165CC <CLIModeSupport.ab3@432> XINCLUDE "CLIModeSupport.ab3"
00016604 <CLIModeSupport.ab3@433> XINCLUDE "CLIModeSupport.ab3"
0001662A <CLIModeSupport.ab3@436> XINCLUDE "CLIModeSupport.ab3"
00016632 <CLIModeSupport.ab3@439> XINCLUDE "CLIModeSupport.ab3"
0001663A <CLIModeSupport.ab3@441> XINCLUDE "CLIModeSupport.ab3"
00016642 <CLIModeSupport.ab3@442> XINCLUDE "CLIModeSupport.ab3"
0001664A <CLIModeSupport.ab3@444> XINCLUDE "CLIModeSupport.ab3"
0001665E <CLIModeSupport.ab3@445> XINCLUDE "CLIModeSupport.ab3"
0001668C <CLIModeSupport.ab3@446> XINCLUDE "CLIModeSupport.ab3"
000166A6 <CLIModeSupport.ab3@447> XINCLUDE "CLIModeSupport.ab3"
000166B4 <CLIModeSupport.ab3@448> XINCLUDE "CLIModeSupport.ab3"
00016720 <CLIModeSupport.ab3@449> XINCLUDE "CLIModeSupport.ab3"
00016746 <CLIModeSupport.ab3@450> XINCLUDE "CLIModeSupport.ab3"
00016762 <CLIModeSupport.ab3@451> XINCLUDE "CLIModeSupport.ab3"
0001676C <CLIModeSupport.ab3@452> XINCLUDE "CLIModeSupport.ab3"
00016776 <CLIModeSupport.ab3@453> XINCLUDE "CLIModeSupport.ab3"
00016782 <CLIModeSupport.ab3@454> XINCLUDE "CLIModeSupport.ab3"
00016790 <CLIModeSupport.ab3@455> XINCLUDE "CLIModeSupport.ab3"
0001679C <CLIModeSupport.ab3@456> XINCLUDE "CLIModeSupport.ab3"
000167D8 <CLIModeSupport.ab3@457> XINCLUDE "CLIModeSupport.ab3"
000167F2 <CLIModeSupport.ab3@458> XINCLUDE "CLIModeSupport.ab3"
00016800 <CLIModeSupport.ab3@459> XINCLUDE "CLIModeSupport.ab3"
00016820 <CLIModeSupport.ab3@460> XINCLUDE "CLIModeSupport.ab3"
0001682E <CLIModeSupport.ab3@461> XINCLUDE "CLIModeSupport.ab3"
0001683C <CLIModeSupport.ab3@462> XINCLUDE "CLIModeSupport.ab3"
00016842 <CLIModeSupport.ab3@464> XINCLUDE "CLIModeSupport.ab3"
00016852 <CLIModeSupport.ab3@465> XINCLUDE "CLIModeSupport.ab3"
00016856 <CLIModeSupport.ab3@467> XINCLUDE "CLIModeSupport.ab3"
0001688A <CLIModeSupport.ab3@468> XINCLUDE "CLIModeSupport.ab3"
000168BE <CLIModeSupport.ab3@469> XINCLUDE "CLIModeSupport.ab3"
000168C2 <CLIModeSupport.ab3@470> XINCLUDE "CLIModeSupport.ab3"
000168F6 <CLIModeSupport.ab3@471> XINCLUDE "CLIModeSupport.ab3"
000168FA <CLIModeSupport.ab3@472> XINCLUDE "CLIModeSupport.ab3"
0001692E <CLIModeSupport.ab3@473> XINCLUDE "CLIModeSupport.ab3"
00016934 <CLIModeSupport.ab3@474> XINCLUDE "CLIModeSupport.ab3"
0001696A <CLIModeSupport.ab3@476> XINCLUDE "CLIModeSupport.ab3"
000169A0 <CLIModeSupport.ab3@477> XINCLUDE "CLIModeSupport.ab3"
000169D6 <CLIModeSupport.ab3@478> XINCLUDE "CLIModeSupport.ab3"
00016A0E <CLIModeSupport.ab3@479> XINCLUDE "CLIModeSupport.ab3"
00016A46 <CLIModeSupport.ab3@480> XINCLUDE "CLIModeSupport.ab3"
00016AE6 <CLIModeSupport.ab3@482> XINCLUDE "CLIModeSupport.ab3"
00016B26 <CLIModeSupport.ab3@483> XINCLUDE "CLIModeSupport.ab3"
00016B5E <CLIModeSupport.ab3@486> XINCLUDE "CLIModeSupport.ab3"
00016B7C <CLIModeSupport.ab3@487> XINCLUDE "CLIModeSupport.ab3"
00016B80 <CLIModeSupport.ab3@488> XINCLUDE "CLIModeSupport.ab3"
00016B86 <CLIModeSupport.ab3@489> XINCLUDE "CLIModeSupport.ab3"
00016B8C <CLIModeSupport.ab3@490> XINCLUDE "CLIModeSupport.ab3"
00016B90 <CLIModeSupport.ab3@491> XINCLUDE "CLIModeSupport.ab3"
00016BBA <CLIModeSupport.ab3@492> XINCLUDE "CLIModeSupport.ab3"
00016BCE <CLIModeSupport.ab3@496> XINCLUDE "CLIModeSupport.ab3"
00016C0C <CLIModeSupport.ab3@497> XINCLUDE "CLIModeSupport.ab3"
00016C40 <CLIModeSupport.ab3@498> XINCLUDE "CLIModeSupport.ab3"
00016C76 <CLIModeSupport.ab3@502> XINCLUDE "CLIModeSupport.ab3"
00016CCE <CLIModeSupport.ab3@504> XINCLUDE "CLIModeSupport.ab3"
00016CFC <CLIModeSupport.ab3@505> XINCLUDE "CLIModeSupport.ab3"
00016D00 <CLIModeSupport.ab3@506> XINCLUDE "CLIModeSupport.ab3"
00016D36 <CLIModeSupport.ab3@507> XINCLUDE "CLIModeSupport.ab3"
00016D64 <CLIModeSupport.ab3@508> XINCLUDE "CLIModeSupport.ab3"
00016D92 <CLIModeSupport.ab3@510> XINCLUDE "CLIModeSupport.ab3"
00016D96 <CLIModeSupport.ab3@511> XINCLUDE "CLIModeSupport.ab3"
00016DCC <CLIModeSupport.ab3@512> XINCLUDE "CLIModeSupport.ab3"
00016DFA <CLIModeSupport.ab3@514> XINCLUDE "CLIModeSupport.ab3"
00016DFE <CLIModeSupport.ab3@515> XINCLUDE "CLIModeSupport.ab3"
00016E62 <CLIModeSupport.ab3@516> XINCLUDE "CLIModeSupport.ab3"
00016E68 <CLIModeSupport.ab3@519> XINCLUDE "CLIModeSupport.ab3"
00016E96 <CLIModeSupport.ab3@520> XINCLUDE "CLIModeSupport.ab3"
00016EA0 <CLIModeSupport.ab3@523> XINCLUDE "CLIModeSupport.ab3"
00016EAA <CLIModeSupport.ab3@525> XINCLUDE "CLIModeSupport.ab3"
00016EC4 <CLIModeSupport.ab3@526> XINCLUDE "CLIModeSupport.ab3"
00016EEE <CLIModeSupport.ab3@529> XINCLUDE "CLIModeSupport.ab3"
00016EF4 <CLIModeSupport.ab3@530> XINCLUDE "CLIModeSupport.ab3"
00016F14 <CLIModeSupport.ab3@531> XINCLUDE "CLIModeSupport.ab3"
00016F1E <CLIModeSupport.ab3@532> XINCLUDE "CLIModeSupport.ab3"
00016F22 <CLIModeSupport.ab3@533> XINCLUDE "CLIModeSupport.ab3"
00016F24 <CLIModeSupport.ab3@534> XINCLUDE "CLIModeSupport.ab3"
00016F42 <CLIModeSupport.ab3@535> XINCLUDE "CLIModeSupport.ab3"
00016F44 <CLIModeSupport.ab3@536> XINCLUDE "CLIModeSupport.ab3"
00016F4A <CLIModeSupport.ab3@537> XINCLUDE "CLIModeSupport.ab3"
00016F50 <CLIModeSupport.ab3@539> XINCLUDE "CLIModeSupport.ab3"
00016F7A <CLIModeSupport.ab3@540> XINCLUDE "CLIModeSupport.ab3"
00016F7C <CLIModeSupport.ab3@541> XINCLUDE "CLIModeSupport.ab3"
00016FAA <CLIModeSupport.ab3@542> XINCLUDE "CLIModeSupport.ab3"
00016FAE <CLIModeSupport.ab3@543> XINCLUDE "CLIModeSupport.ab3"
00016FDC <CLIModeSupport.ab3@544> XINCLUDE "CLIModeSupport.ab3"
00016FE0 <CLIModeSupport.ab3@545> XINCLUDE "CLIModeSupport.ab3"
00017006 <CLIModeSupport.ab3@546> XINCLUDE "CLIModeSupport.ab3"
00017016 <CLIModeSupport.ab3@547> XINCLUDE "CLIModeSupport.ab3"
0001701C <CLIModeSupport.ab3@548> XINCLUDE "CLIModeSupport.ab3"
00017022 <CLIModeSupport.ab3@549> XINCLUDE "CLIModeSupport.ab3"
00017050 <CLIModeSupport.ab3@550> XINCLUDE "CLIModeSupport.ab3"
0001705A <CLIModeSupport.ab3@552> XINCLUDE "CLIModeSupport.ab3"
00017074 <CLIModeSupport.ab3@553> XINCLUDE "CLIModeSupport.ab3"
0001708A <CLIModeSupport.ab3@556> XINCLUDE "CLIModeSupport.ab3"
000170B4 <CLIModeSupport.ab3@557> XINCLUDE "CLIModeSupport.ab3"
000170E2 <CLIModeSupport.ab3@558> XINCLUDE "CLIModeSupport.ab3"
000170F6 <CLIModeSupport.ab3@560> XINCLUDE "CLIModeSupport.ab3"
00017132 <CLIModeSupport.ab3@561> XINCLUDE "CLIModeSupport.ab3"
0001716E <CLIModeSupport.ab3@562> XINCLUDE "CLIModeSupport.ab3"
000171AA <CLIModeSupport.ab3@563> XINCLUDE "CLIModeSupport.ab3"
000171E6 <CLIModeSupport.ab3@564> XINCLUDE "CLIModeSupport.ab3"
00017222 <CLIModeSupport.ab3@565> XINCLUDE "CLIModeSupport.ab3"
00017228 <CLIModeSupport.ab3@566> XINCLUDE "CLIModeSupport.ab3"
00017256 <CLIModeSupport.ab3@567> XINCLUDE "CLIModeSupport.ab3"
00017258 <CLIModeSupport.ab3@570> XINCLUDE "CLIModeSupport.ab3"
00017276 <CLIModeSupport.ab3@571> XINCLUDE "CLIModeSupport.ab3"
0001727C <CLIModeSupport.ab3@572> XINCLUDE "CLIModeSupport.ab3"
000172A6 <CLIModeSupport.ab3@573> XINCLUDE "CLIModeSupport.ab3"
000172A8 <CLIModeSupport.ab3@574> XINCLUDE "CLIModeSupport.ab3"
000172BA <CLIModeSupport.ab3@575> XINCLUDE "CLIModeSupport.ab3"
000172EC <CLIModeSupport.ab3@578> XINCLUDE "CLIModeSupport.ab3"
000172F6 <CLIModeSupport.ab3@579> XINCLUDE "CLIModeSupport.ab3"
00017360 <CLIModeSupport.ab3@580> XINCLUDE "CLIModeSupport.ab3"
000173CA <CLIModeSupport.ab3@581> XINCLUDE "CLIModeSupport.ab3"
00017434 <CLIModeSupport.ab3@583> XINCLUDE "CLIModeSupport.ab3"
0001749E <CLIModeSupport.ab3@584> XINCLUDE "CLIModeSupport.ab3"
00017508 <CLIModeSupport.ab3@585> XINCLUDE "CLIModeSupport.ab3"
00017572 <CLIModeSupport.ab3@586> XINCLUDE "CLIModeSupport.ab3"
00017578 <CLIModeSupport.ab3@587> XINCLUDE "CLIModeSupport.ab3"
000175E2 <CLIModeSupport.ab3@588> XINCLUDE "CLIModeSupport.ab3"
0001764C <CLIModeSupport.ab3@589> XINCLUDE "CLIModeSupport.ab3"
00017656 <CLIModeSupport.ab3@592> XINCLUDE "CLIModeSupport.ab3"
000176C0 <CLIModeSupport.ab3@593> XINCLUDE "CLIModeSupport.ab3"
000176C8 <CLIModeSupport.ab3@598> XINCLUDE "CLIModeSupport.ab3"
000176F6 <CLIModeSupport.ab3@600> XINCLUDE "CLIModeSupport.ab3"
000176FA <CLIModeSupport.ab3@601> XINCLUDE "CLIModeSupport.ab3"
00017722 <CLIModeSupport.ab3@602> XINCLUDE "CLIModeSupport.ab3"
00017728 <CLIModeSupport.ab3@605> XINCLUDE "CLIModeSupport.ab3"
0001772E <CLIModeSupport.ab3@608> XINCLUDE "CLIModeSupport.ab3"
00017734 <CLIModeSupport.ab3@609> XINCLUDE "CLIModeSupport.ab3"
0001773A <CLIModeSupport.ab3@610> XINCLUDE "CLIModeSupport.ab3"
00017740 <CLIModeSupport.ab3@611> XINCLUDE "CLIModeSupport.ab3"
0001774A <CLIModeSupport.ab3@612> XINCLUDE "CLIModeSupport.ab3"
00017754 <CLIModeSupport.ab3@613> XINCLUDE "CLIModeSupport.ab3"
00017782 <CLIModeSupport.ab3@615> XINCLUDE "CLIModeSupport.ab3"
000177AE <CLIModeSupport.ab3@617> XINCLUDE "CLIModeSupport.ab3"
000177B6 <CLIModeSupport.ab3@618> XINCLUDE "CLIModeSupport.ab3"
000177EA <CLIModeSupport.ab3@620> XINCLUDE "CLIModeSupport.ab3"
000177FC <CLIModeSupport.ab3@621> XINCLUDE "CLIModeSupport.ab3"
00017862 <CLIModeSupport.ab3@622> XINCLUDE "CLIModeSupport.ab3"
000178C8 <CLIModeSupport.ab3@623> XINCLUDE "CLIModeSupport.ab3"
000178CE <CLIModeSupport.ab3@624> XINCLUDE "CLIModeSupport.ab3"
000178D6 <CLIModeSupport.ab3@625> XINCLUDE "CLIModeSupport.ab3"
000178D8 <CLIModeSupport.ab3@629> XINCLUDE "CLIModeSupport.ab3"
000178F6 <CLIModeSupport.ab3@630> XINCLUDE "CLIModeSupport.ab3"
00017934 <CLIModeSupport.ab3@631> XINCLUDE "CLIModeSupport.ab3"
00017972 <CLIModeSupport.ab3@632> XINCLUDE "CLIModeSupport.ab3"
00017978 <CLIModeSupport.ab3@634> XINCLUDE "CLIModeSupport.ab3"
0001797E <CLIModeSupport.ab3@635> XINCLUDE "CLIModeSupport.ab3"
00017984 <CLIModeSupport.ab3@636> XINCLUDE "CLIModeSupport.ab3"
0001798E <CLIModeSupport.ab3@639> XINCLUDE "CLIModeSupport.ab3"
00017994 <CLIModeSupport.ab3@640> XINCLUDE "CLIModeSupport.ab3"
0001799A <CLIModeSupport.ab3@641> XINCLUDE "CLIModeSupport.ab3"
000179A0 <CLIModeSupport.ab3@642> XINCLUDE "CLIModeSupport.ab3"
000179AA <CLIModeSupport.ab3@643> XINCLUDE "CLIModeSupport.ab3"
000179AE <CLIModeSupport.ab3@644> XINCLUDE "CLIModeSupport.ab3"
000179D8 <CLIModeSupport.ab3@646> XINCLUDE "CLIModeSupport.ab3"
000179DA <CLIModeSupport.ab3@647> XINCLUDE "CLIModeSupport.ab3"
000179E0 <CLIModeSupport.ab3@649> XINCLUDE "CLIModeSupport.ab3"
000179E4 <CLIModeSupport.ab3@650> XINCLUDE "CLIModeSupport.ab3"
000179EA <CLIModeSupport.ab3@652> XINCLUDE "CLIModeSupport.ab3"
000179EE <CLIModeSupport.ab3@653> XINCLUDE "CLIModeSupport.ab3"
00017A48 <CLIModeSupport.ab3@655> XINCLUDE "CLIModeSupport.ab3"
00017A5A <CLIModeSupport.ab3@657> XINCLUDE "CLIModeSupport.ab3"
00017A86 <CLIModeSupport.ab3@658> XINCLUDE "CLIModeSupport.ab3"
00017B2C <CLIModeSupport.ab3@659> XINCLUDE "CLIModeSupport.ab3"
00017B4A <CLIModeSupport.ab3@660> XINCLUDE "CLIModeSupport.ab3"
00017B50 <CLIModeSupport.ab3@661> XINCLUDE "CLIModeSupport.ab3"
00017B7A <CLIModeSupport.ab3@662> XINCLUDE "CLIModeSupport.ab3"
00017B84 <CLIModeSupport.ab3@663> XINCLUDE "CLIModeSupport.ab3"
00017BB6 <CLIModeSupport.ab3@664> XINCLUDE "CLIModeSupport.ab3"
00017BD0 <CLIModeSupport.ab3@665> XINCLUDE "CLIModeSupport.ab3"
00017BE4 <CLIModeSupport.ab3@670> XINCLUDE "CLIModeSupport.ab3"
00017BEE <CLIModeSupport.ab3@672> XINCLUDE "CLIModeSupport.ab3"
00017C08 <CLIModeSupport.ab3@673> XINCLUDE "CLIModeSupport.ab3"
00017C32 <CLIModeSupport.ab3@677> XINCLUDE "CLIModeSupport.ab3"
00017C56 <CLIModeSupport.ab3@678> XINCLUDE "CLIModeSupport.ab3"
00017C94 <CLIModeSupport.ab3@679> XINCLUDE "CLIModeSupport.ab3"
00017C98 <CLIModeSupport.ab3@680> XINCLUDE "CLIModeSupport.ab3"
00017CD6 <CLIModeSupport.ab3@682> XINCLUDE "CLIModeSupport.ab3"
00017CDA <CLIModeSupport.ab3@683> XINCLUDE "CLIModeSupport.ab3"
00017D18 <CLIModeSupport.ab3@686> XINCLUDE "CLIModeSupport.ab3"
00017D56 <CLIModeSupport.ab3@687> XINCLUDE "CLIModeSupport.ab3"
00017D58 <CLIModeSupport.ab3@688> XINCLUDE "CLIModeSupport.ab3"
00017D8C <CLIModeSupport.ab3@689> XINCLUDE "CLIModeSupport.ab3"
00017D92 <CLIModeSupport.ab3@691> XINCLUDE "CLIModeSupport.ab3"
00017DD6 <CLIModeSupport.ab3@692> XINCLUDE "CLIModeSupport.ab3"
00017DE8 <CLIModeSupport.ab3@693> XINCLUDE "CLIModeSupport.ab3"
00017DF0 <CLIModeSupport.ab3@695> XINCLUDE "CLIModeSupport.ab3"
00017DF6 <CLIModeSupport.ab3@696> XINCLUDE "CLIModeSupport.ab3"
00017E00 <CLIModeSupport.ab3@698> XINCLUDE "CLIModeSupport.ab3"
00017E0E <CLIModeSupport.ab3@699> XINCLUDE "CLIModeSupport.ab3"
00017E14 <CLIModeSupport.ab3@700> XINCLUDE "CLIModeSupport.ab3"
00017E3C <CLIModeSupport.ab3@701> XINCLUDE "CLIModeSupport.ab3"
00017E56 <CLIModeSupport.ab3@702> XINCLUDE "CLIModeSupport.ab3"
00017E60 <CLIModeSupport.ab3@703> XINCLUDE "CLIModeSupport.ab3"
00017E66 <CLIModeSupport.ab3@704> XINCLUDE "CLIModeSupport.ab3"
00017E84 <CLIModeSupport.ab3@706> XINCLUDE "CLIModeSupport.ab3"
00017E8E <CLIModeSupport.ab3@707> XINCLUDE "CLIModeSupport.ab3"
00017E94 <CLIModeSupport.ab3@708> XINCLUDE "CLIModeSupport.ab3"
00017E9A <CLIModeSupport.ab3@709> XINCLUDE "CLIModeSupport.ab3"
00017EA4 <CLIModeSupport.ab3@710> XINCLUDE "CLIModeSupport.ab3"
00017EB2 <CLIModeSupport.ab3@711> XINCLUDE "CLIModeSupport.ab3"
00017EB8 <CLIModeSupport.ab3@712> XINCLUDE "CLIModeSupport.ab3"
00017EC8 <CLIModeSupport.ab3@714> XINCLUDE "CLIModeSupport.ab3"
00017EF4 <CLIModeSupport.ab3@715> XINCLUDE "CLIModeSupport.ab3"
00017F0A <CLIModeSupport.ab3@716> XINCLUDE "CLIModeSupport.ab3"
00017F14 <CLIModeSupport.ab3@717> XINCLUDE "CLIModeSupport.ab3"
00017F1A <CLIModeSupport.ab3@718> XINCLUDE "CLIModeSupport.ab3"
00017F72 <CLIModeSupport.ab3@720> XINCLUDE "CLIModeSupport.ab3"
00017FE0 <CLIModeSupport.ab3@722> XINCLUDE "CLIModeSupport.ab3"
00017FF8 <CLIModeSupport.ab3@723> XINCLUDE "CLIModeSupport.ab3"
00017FFE <CLIModeSupport.ab3@724> XINCLUDE "CLIModeSupport.ab3"
00018036 <CLIModeSupport.ab3@725> XINCLUDE "CLIModeSupport.ab3"
00018064 <CLIModeSupport.ab3@727> XINCLUDE "CLIModeSupport.ab3"
0001808E <CLIModeSupport.ab3@728> XINCLUDE "CLIModeSupport.ab3"
00018098 <CLIModeSupport.ab3@730> XINCLUDE "CLIModeSupport.ab3"
000180C0 <CLIModeSupport.ab3@731> XINCLUDE "CLIModeSupport.ab3"
000180EA <CLIModeSupport.ab3@732> XINCLUDE "CLIModeSupport.ab3"
0001818C <CLIModeSupport.ab3@733> XINCLUDE "CLIModeSupport.ab3"
0001819A <CLIModeSupport.ab3@734> XINCLUDE "CLIModeSupport.ab3"
000181EA <CLIModeSupport.ab3@735> XINCLUDE "CLIModeSupport.ab3"
000181FA <CLIModeSupport.ab3@736> XINCLUDE "CLIModeSupport.ab3"
000182C2 <CLIModeSupport.ab3@737> XINCLUDE "CLIModeSupport.ab3"
000182F6 <CLIModeSupport.ab3@739> XINCLUDE "CLIModeSupport.ab3"
0001832A <CLIModeSupport.ab3@740> XINCLUDE "CLIModeSupport.ab3"
0001835E <CLIModeSupport.ab3@741> XINCLUDE "CLIModeSupport.ab3"
00018392 <CLIModeSupport.ab3@742> XINCLUDE "CLIModeSupport.ab3"
000183C6 <CLIModeSupport.ab3@743> XINCLUDE "CLIModeSupport.ab3"
000183FA <CLIModeSupport.ab3@744> XINCLUDE "CLIModeSupport.ab3"
0001842E <CLIModeSupport.ab3@745> XINCLUDE "CLIModeSupport.ab3"
00018462 <CLIModeSupport.ab3@746> XINCLUDE "CLIModeSupport.ab3"
00018464 <CLIModeSupport.ab3@748> XINCLUDE "CLIModeSupport.ab3"
000184A2 <CLIModeSupport.ab3@749> XINCLUDE "CLIModeSupport.ab3"
000184A6 <CLIModeSupport.ab3@750> XINCLUDE "CLIModeSupport.ab3"
000184E4 <CLIModeSupport.ab3@753> XINCLUDE "CLIModeSupport.ab3"
00018522 <CLIModeSupport.ab3@754> XINCLUDE "CLIModeSupport.ab3"
00018524 <CLIModeSupport.ab3@755> XINCLUDE "CLIModeSupport.ab3"
0001852A <CLIModeSupport.ab3@756> XINCLUDE "CLIModeSupport.ab3"
0001852E <CLIModeSupport.ab3@757> XINCLUDE "CLIModeSupport.ab3"
00018530 <CLIModeSupport.ab3@759> XINCLUDE "CLIModeSupport.ab3"
0001856E <CLIModeSupport.ab3@760> XINCLUDE "CLIModeSupport.ab3"
000185AC <CLIModeSupport.ab3@761> XINCLUDE "CLIModeSupport.ab3"
000185AE <CLIModeSupport.ab3@762> XINCLUDE "CLIModeSupport.ab3"
000185B0 <CLIModeSupport.ab3@763> XINCLUDE "CLIModeSupport.ab3"
000185B2 <CLIModeSupport.ab3@764> XINCLUDE "CLIModeSupport.ab3"
000185B8 <CLIModeSupport.ab3@765> XINCLUDE "CLIModeSupport.ab3"
000185BC <CLIModeSupport.ab3@766> XINCLUDE "CLIModeSupport.ab3"
000185CC <CLIModeSupport.ab3@768> XINCLUDE "CLIModeSupport.ab3"
000185E4 <CLIModeSupport.ab3@769> XINCLUDE "CLIModeSupport.ab3"
000185FC <CLIModeSupport.ab3@770> XINCLUDE "CLIModeSupport.ab3"
00018614 <CLIModeSupport.ab3@771> XINCLUDE "CLIModeSupport.ab3"
0001863E <CLIModeSupport.ab3@773> XINCLUDE "CLIModeSupport.ab3"
00018668 <CLIModeSupport.ab3@774> XINCLUDE "CLIModeSupport.ab3"
00018696 <CLIModeSupport.ab3@776> XINCLUDE "CLIModeSupport.ab3"
0001869A <CLIModeSupport.ab3@777> XINCLUDE "CLIModeSupport.ab3"
000186C2 <CLIModeSupport.ab3@778> XINCLUDE "CLIModeSupport.ab3"
000186C4 <CLIModeSupport.ab3@779> XINCLUDE "CLIModeSupport.ab3"
00018702 <CLIModeSupport.ab3@780> XINCLUDE "CLIModeSupport.ab3"
00018706 <CLIModeSupport.ab3@781> XINCLUDE "CLIModeSupport.ab3"
00018744 <CLIModeSupport.ab3@782> XINCLUDE "CLIModeSupport.ab3"
00018748 <CLIModeSupport.ab3@783> XINCLUDE "CLIModeSupport.ab3"
00018786 <CLIModeSupport.ab3@784> XINCLUDE "CLIModeSupport.ab3"
0001878A <CLIModeSupport.ab3@785> XINCLUDE "CLIModeSupport.ab3"
000187B0 <CLIModeSupport.ab3@787> XINCLUDE "CLIModeSupport.ab3"
000187D6 <CLIModeSupport.ab3@788> XINCLUDE "CLIModeSupport.ab3"
000187FC <CLIModeSupport.ab3@789> XINCLUDE "CLIModeSupport.ab3"
00018822 <CLIModeSupport.ab3@790> XINCLUDE "CLIModeSupport.ab3"
00018848 <CLIModeSupport.ab3@791> XINCLUDE "CLIModeSupport.ab3"
0001889E <CLIModeSupport.ab3@792> XINCLUDE "CLIModeSupport.ab3"
000188F4 <CLIModeSupport.ab3@793> XINCLUDE "CLIModeSupport.ab3"
00018942 <CLIModeSupport.ab3@794> XINCLUDE "CLIModeSupport.ab3"
00018998 <CLIModeSupport.ab3@795> XINCLUDE "CLIModeSupport.ab3"
000189BE <CLIModeSupport.ab3@796> XINCLUDE "CLIModeSupport.ab3"
000189E4 <CLIModeSupport.ab3@797> XINCLUDE "CLIModeSupport.ab3"
00018A0A <CLIModeSupport.ab3@798> XINCLUDE "CLIModeSupport.ab3"
00018A60 <CLIModeSupport.ab3@799> XINCLUDE "CLIModeSupport.ab3"
00018AAE <CLIModeSupport.ab3@800> XINCLUDE "CLIModeSupport.ab3"
00018B68 <CLIModeSupport.ab3@801> XINCLUDE "CLIModeSupport.ab3"
00018BBE <CLIModeSupport.ab3@802> XINCLUDE "CLIModeSupport.ab3"
00018BE4 <CLIModeSupport.ab3@803> XINCLUDE "CLIModeSupport.ab3"
00018C0A <CLIModeSupport.ab3@804> XINCLUDE "CLIModeSupport.ab3"
00018C30 <CLIModeSupport.ab3@805> XINCLUDE "CLIModeSupport.ab3"
00018C86 <CLIModeSupport.ab3@806> XINCLUDE "CLIModeSupport.ab3"
00018CDC <CLIModeSupport.ab3@807> XINCLUDE "CLIModeSupport.ab3"
00018D2A <CLIModeSupport.ab3@808> XINCLUDE "CLIModeSupport.ab3"
00018D78 <CLIModeSupport.ab3@809> XINCLUDE "CLIModeSupport.ab3"
00018DC6 <CLIModeSupport.ab3@810> XINCLUDE "CLIModeSupport.ab3"
00018E14 <CLIModeSupport.ab3@811> XINCLUDE "CLIModeSupport.ab3"
00018E62 <CLIModeSupport.ab3@812> XINCLUDE "CLIModeSupport.ab3"
00018EB0 <CLIModeSupport.ab3@813> XINCLUDE "CLIModeSupport.ab3"
00018EFE <CLIModeSupport.ab3@814> XINCLUDE "CLIModeSupport.ab3"
00018F24 <CLIModeSupport.ab3@815> XINCLUDE "CLIModeSupport.ab3"
00018F4A <CLIModeSupport.ab3@816> XINCLUDE "CLIModeSupport.ab3"
00018F70 <CLIModeSupport.ab3@817> XINCLUDE "CLIModeSupport.ab3"
00018FBE <CLIModeSupport.ab3@818> XINCLUDE "CLIModeSupport.ab3"
0001900C <CLIModeSupport.ab3@819> XINCLUDE "CLIModeSupport.ab3"
00019062 <CLIModeSupport.ab3@820> XINCLUDE "CLIModeSupport.ab3"
000190B0 <CLIModeSupport.ab3@821> XINCLUDE "CLIModeSupport.ab3"
000190FE <CLIModeSupport.ab3@822> XINCLUDE "CLIModeSupport.ab3"
0001914C <CLIModeSupport.ab3@823> XINCLUDE "CLIModeSupport.ab3"
00019172 <CLIModeSupport.ab3@824> XINCLUDE "CLIModeSupport.ab3"
00019198 <CLIModeSupport.ab3@825> XINCLUDE "CLIModeSupport.ab3"
000191BE <CLIModeSupport.ab3@826> XINCLUDE "CLIModeSupport.ab3"
000191F6 <CLIModeSupport.ab3@827> XINCLUDE "CLIModeSupport.ab3"
0001921E <CLIModeSupport.ab3@828> XINCLUDE "CLIModeSupport.ab3"
00019232 <CLIModeSupport.ab3@829> XINCLUDE "CLIModeSupport.ab3"
000192A6 <CLIModeSupport.ab3@830> XINCLUDE "CLIModeSupport.ab3"
000192EC <CLIModeSupport.ab3@831> XINCLUDE "CLIModeSupport.ab3"
0001939A <CLIModeSupport.ab3@832> XINCLUDE "CLIModeSupport.ab3"
00019406 <CLIModeSupport.ab3@833> XINCLUDE "CLIModeSupport.ab3"
00019416 <CLIModeSupport.ab3@834> XINCLUDE "CLIModeSupport.ab3"
0001943C <CLIModeSupport.ab3@836> XINCLUDE "CLIModeSupport.ab3"
00019446 <CLIModeSupport.ab3@838> XINCLUDE "CLIModeSupport.ab3"
00019470 <CLIModeSupport.ab3@839> XINCLUDE "CLIModeSupport.ab3"
00019476 <CLIModeSupport.ab3@840> XINCLUDE "CLIModeSupport.ab3"
00019486 <CLIModeSupport.ab3@842> XINCLUDE "CLIModeSupport.ab3"
00019526 <CLIModeSupport.ab3@844> XINCLUDE "CLIModeSupport.ab3"
00019566 <CLIModeSupport.ab3@845> XINCLUDE "CLIModeSupport.ab3"
0001956C <CLIModeSupport.ab3@847> XINCLUDE "CLIModeSupport.ab3"
000195C2 <CLIModeSupport.ab3@848> XINCLUDE "CLIModeSupport.ab3"
000195CC <CLIModeSupport.ab3@850> XINCLUDE "CLIModeSupport.ab3"
000195D6 <CLIModeSupport.ab3@852> XINCLUDE "CLIModeSupport.ab3"
000195F0 <CLIModeSupport.ab3@853> XINCLUDE "CLIModeSupport.ab3"
00019612 <CLIModeSupport.ab3@909> XINCLUDE "CLIModeSupport.ab3"
00019634 <CLIModeSupport.ab3@910> XINCLUDE "CLIModeSupport.ab3"
0001968E <CLIModeSupport.ab3@911> XINCLUDE "CLIModeSupport.ab3"
000196B0 <CLIModeSupport.ab3@912> XINCLUDE "CLIModeSupport.ab3"
0001970A <CLIModeSupport.ab3@913> XINCLUDE "CLIModeSupport.ab3"
0001974C <CLIModeSupport.ab3@914> XINCLUDE "CLIModeSupport.ab3"
00019752 <CLIModeSupport.ab3@916> XINCLUDE "CLIModeSupport.ab3"
00019760 <CLIModeSupport.ab3@917> XINCLUDE "CLIModeSupport.ab3"
00019766 <CLIModeSupport.ab3@919> XINCLUDE "CLIModeSupport.ab3"
0001977A <CLIModeSupport.ab3@920> XINCLUDE "CLIModeSupport.ab3"
00019784 <CLIModeSupport.ab3@921> XINCLUDE "CLIModeSupport.ab3"
000197FE <CLIModeSupport.ab3@922> XINCLUDE "CLIModeSupport.ab3"
00019808 <CLIModeSupport.ab3@923> XINCLUDE "CLIModeSupport.ab3"
0001980E <CLIModeSupport.ab3@924> XINCLUDE "CLIModeSupport.ab3"
00019822 <CLIModeSupport.ab3@927> XINCLUDE "CLIModeSupport.ab3"
0001982C <CLIModeSupport.ab3@928> XINCLUDE "CLIModeSupport.ab3"
000198AC <CLIModeSupport.ab3@929> XINCLUDE "CLIModeSupport.ab3"
000198B6 <CLIModeSupport.ab3@930> XINCLUDE "CLIModeSupport.ab3"
000198BC <CLIModeSupport.ab3@931> XINCLUDE "CLIModeSupport.ab3"
000198D0 <CLIModeSupport.ab3@934> XINCLUDE "CLIModeSupport.ab3"
000198DA <CLIModeSupport.ab3@935> XINCLUDE "CLIModeSupport.ab3"
00019922 <CLIModeSupport.ab3@936> XINCLUDE "CLIModeSupport.ab3"
0001992C <CLIModeSupport.ab3@938> XINCLUDE "CLIModeSupport.ab3"
00019932 <CLIModeSupport.ab3@939> XINCLUDE "CLIModeSupport.ab3"
00019946 <CLIModeSupport.ab3@942> XINCLUDE "CLIModeSupport.ab3"
00019950 <CLIModeSupport.ab3@943> XINCLUDE "CLIModeSupport.ab3"
00019998 <CLIModeSupport.ab3@944> XINCLUDE "CLIModeSupport.ab3"
000199A2 <CLIModeSupport.ab3@945> XINCLUDE "CLIModeSupport.ab3"
000199A8 <CLIModeSupport.ab3@946> XINCLUDE "CLIModeSupport.ab3"
000199BC <CLIModeSupport.ab3@949> XINCLUDE "CLIModeSupport.ab3"
000199E2 <CLIModeSupport.ab3@950> XINCLUDE "CLIModeSupport.ab3"
000199F6 <CLIModeSupport.ab3@953> XINCLUDE "CLIModeSupport.ab3"
00019A1C <CLIModeSupport.ab3@954> XINCLUDE "CLIModeSupport.ab3"
00019A30 <CLIModeSupport.ab3@957> XINCLUDE "CLIModeSupport.ab3"
00019A56 <CLIModeSupport.ab3@958> XINCLUDE "CLIModeSupport.ab3"
00019A6A <CLIModeSupport.ab3@961> XINCLUDE "CLIModeSupport.ab3"
00019A74 <CLIModeSupport.ab3@962> XINCLUDE "CLIModeSupport.ab3"
00019AA2 <CLIModeSupport.ab3@963> XINCLUDE "CLIModeSupport.ab3"
00019AF2 <CLIModeSupport.ab3@964> XINCLUDE "CLIModeSupport.ab3"
00019B12 <CLIModeSupport.ab3@965> XINCLUDE "CLIModeSupport.ab3"
00019B2A <CLIModeSupport.ab3@966> XINCLUDE "CLIModeSupport.ab3"
00019C0E <CLIModeSupport.ab3@967> XINCLUDE "CLIModeSupport.ab3"
00019C18 <CLIModeSupport.ab3@968> XINCLUDE "CLIModeSupport.ab3"
00019C1E <CLIModeSupport.ab3@969> XINCLUDE "CLIModeSupport.ab3"
00019C20 <CLIModeSupport.ab3@971> XINCLUDE "CLIModeSupport.ab3"
00019C34 <CLIModeSupport.ab3@972> XINCLUDE "CLIModeSupport.ab3"
00019C66 <CLIModeSupport.ab3@975> XINCLUDE "CLIModeSupport.ab3"
00019C6C <CLIModeSupport.ab3@976> XINCLUDE "CLIModeSupport.ab3"
00019CB0 <CLIModeSupport.ab3@977> XINCLUDE "CLIModeSupport.ab3"
00019CC2 <CLIModeSupport.ab3@978> XINCLUDE "CLIModeSupport.ab3"
00019CD4 <CLIModeSupport.ab3@979> XINCLUDE "CLIModeSupport.ab3"
00019CDE <CLIModeSupport.ab3@980> XINCLUDE "CLIModeSupport.ab3"
00019CE4 <CLIModeSupport.ab3@981> XINCLUDE "CLIModeSupport.ab3"
00019CEE <CLIModeSupport.ab3@983> XINCLUDE "CLIModeSupport.ab3"
00019D08 <CLIModeSupport.ab3@984> XINCLUDE "CLIModeSupport.ab3"
00019D08 <AmiBlitz3_wizzard.ab2@95> XINCLUDE "CLIModeSupport.ab3"
00019D88 <AmiBlitz3_wizzard.ab2@100> dynassign.s = dos_GetToolString{"ASSIGN",default_assign$}       ; replaced hardcoded path  tomsmart1 2012 03 09
00019DC0 <AmiBlitz3_wizzard.ab2@101> If dynassign <> ""
00019DD6 <AmiBlitz3_wizzard.ab2@102>     *AssignSema.SignalSemaphore = FindSemaphore_(&dynassign)    ; does it already exist?
00019DE0 <AmiBlitz3_wizzard.ab2@103>     If *AssignSema
00019DF0 <AmiBlitz3_wizzard.ab2@104>       ObtainSemaphoreShared_ *AssignSema
00019DF6 <AmiBlitz3_wizzard.ab2@105>     Else                                                        ; no, create one...
00019E16 <AmiBlitz3_wizzard.ab2@106>       *AssignSema = AllocVec_ (SizeOf.SignalSemaphore,#MEMF_PUBLIC|#MEMF_CLEAR)
00019E20 <AmiBlitz3_wizzard.ab2@107>       If *AssignSema
00019E30 <AmiBlitz3_wizzard.ab2@108>         InitSemaphore_ *AssignSema
00019E64 <AmiBlitz3_wizzard.ab2@110>         *AssignSema\ss_Link\ln_Name = AllocVec_(FLen(dynassign)+1,#MEMF_PUBLIC|#MEMF_CLEAR)
00019E76 <AmiBlitz3_wizzard.ab2@111>         If *AssignSema\ss_Link\ln_Name
00019EB2 <AmiBlitz3_wizzard.ab2@112>           Poke.s  *AssignSema\ss_Link\ln_Name,dynassign
00019EBE <AmiBlitz3_wizzard.ab2@114>         *AssignSema\ss_Link\ln_Pri  = 1
00019ECA <AmiBlitz3_wizzard.ab2@115>         *AssignSema\ss_Link\ln_Type = #NT_SIGNALSEM
00019EDA <AmiBlitz3_wizzard.ab2@117>         AddSemaphore_ *AssignSema
00019EEA <AmiBlitz3_wizzard.ab2@118>         ObtainSemaphoreShared_ *AssignSema
00019F36 <AmiBlitz3_wizzard.ab2@124>   mydir.s = dos_GetProgDir{"Sys:"}
00019F96 <AmiBlitz3_wizzard.ab2@125>   If dos_SetAssign{dynassign,mydir,False}
0001A02A <AmiBlitz3_wizzard.ab2@126>     dos_AddAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001A062 <AmiBlitz3_wizzard.ab2@129>   Poke$ ?str_blitz3assign,dynassign
0001A0E4 <AmiBlitz3_wizzard.ab2@130>   Poke$ ?str_defaultdbug,dos_AddPart{dynassign,"Debug/DefaultDBug"}
0001A166 <AmiBlitz3_wizzard.ab2@133>   Poke$ ?str_path_acidlibs,dos_AddPart{dynassign, "BlitzLibs/AcidLibs"}
0001A1E8 <AmiBlitz3_wizzard.ab2@134>   Poke$ ?str_path_deflibs ,dos_AddPart{dynassign, "BlitzLibs/DefLibs" }
0001A26A <AmiBlitz3_wizzard.ab2@135>   Poke$ ?str_path_userlibs,dos_AddPart{dynassign, "BlitzLibs/UserLibs"}
0001A2EC <AmiBlitz3_wizzard.ab2@136>   Poke$ ?str_path_includes,dos_AddPart{dynassign, "Sourcecodes/Includes"}
0001A360 <AmiBlitz3_wizzard.ab2@137>   my_systemdir$    = dos_AddPart{dynassign, "System"}
0001A3D4 <AmiBlitz3_wizzard.ab2@138>   my_residentsdir$ = dos_AddPart{dynassign, "BlitzLibs/Residents"}
0001A448 <AmiBlitz3_wizzard.ab2@139>   my_blitzlibsdir$ = dos_AddPart{dynassign, "BlitzLibs"}
0001A476 <AmiBlitz3_wizzard.ab2@140>   dos_CreateDir{my_blitzlibsdir$}
0001A49A <AmiBlitz3_wizzard.ab2@141>   dos_CreateDir{Peek$(?str_path_userlibs)}
0001A4C8 <AmiBlitz3_wizzard.ab2@142>   dos_CreateDir{my_residentsdir$}
0001A4F6 <AmiBlitz3_wizzard.ab2@143>   dos_CreateDir{my_systemdir$}
0001A5C0 <AmiBlitz3_wizzard.ab2@149> pedfile$ = dos_GetToolString{"EDITOR",dos_AddPart{my_systemdir$,"PED"}}
0001A5F8 <AmiBlitz3_wizzard.ab2@150> Poke.s ?str_pedfile,pedfile$
0001A636 <AmiBlitz3_wizzard.ab2@152> If dos_GetToolState{"START_WITHOUT_LIBS"} = -1
0001A646 <AmiBlitz3_wizzard.ab2@153>   Poke.b ?start_without_libs,1
0001A64C <AmiBlitz3_wizzard.ab2@154> Else
0001A65C <AmiBlitz3_wizzard.ab2@155>   Poke.b ?start_without_libs,0
0001A682 <AmiBlitz3_wizzard.ab2@158> !TRANS_INIT{"AmiBlitz3"}     ; init localization via translation.include
0001A6AA <AmiBlitz3_wizzard.ab2@161> errorout.s = ""                                            ; for the error text
0001A6B0 <AmiBlitz3_wizzard.ab2@162> ende.b     =  False                                        ; abort indicater
0001A6E8 <AmiBlitz3_wizzard.ab2@164> If dos_CheckLib{"wizard.library",42} = False               ; needed for Compiler, PED and REDDebugger
0001A72E <AmiBlitz3_wizzard.ab2@165>   errorout + "Missing wizard.library:\\nThis library is required in version 42 by this IDE.\\n\\n"
0001A734 <AmiBlitz3_wizzard.ab2@166>   ende = True
0001A76C <AmiBlitz3_wizzard.ab2@169> If dos_CheckLib{"reqtools.library",38} = False             ; needed for PED and REDDebugger
0001A7B2 <AmiBlitz3_wizzard.ab2@170>   errorout + "Missing reqtools.library:\\nThis library is required in version 38 by the IDE.\\n\\n"
0001A7B8 <AmiBlitz3_wizzard.ab2@171>   ende = True
0001A7F0 <AmiBlitz3_wizzard.ab2@174> If dos_CheckLib{"ted.library",1} = False                   ; needed for PED and REDDebugger
0001A836 <AmiBlitz3_wizzard.ab2@175>   errorout + "Missing ted.library:\\nThis library is required in version 1 by the IDE.\\n\\n"
0001A83C <AmiBlitz3_wizzard.ab2@176>   ende = True
0001A874 <AmiBlitz3_wizzard.ab2@179> If dos_CheckLib{"disassembler.library",40} = False         ; only needed for REDDebugger
0001A8BA <AmiBlitz3_wizzard.ab2@180> 
0001A8F2 <AmiBlitz3_wizzard.ab2@183> If errorout <> ""                                          ; check if something to show
0001A938 <AmiBlitz3_wizzard.ab2@184>    errorout = "Please reinstall AmiBlitz3 or install the librarys in LIBS:\\n\\n"+errorout
0001A946 <AmiBlitz3_wizzard.ab2@185>    If ende
0001A98C <AmiBlitz3_wizzard.ab2@186>      errorout + "...that the IDE can Start!"               ; for abort
0001A992 <AmiBlitz3_wizzard.ab2@187>    Else
0001A9D8 <AmiBlitz3_wizzard.ab2@188>      errorout + "...for a full working IDE!"               ; for limited start
0001AA3A <AmiBlitz3_wizzard.ab2@190>    error{!TRANS{errorout}}
0001AA46 <AmiBlitz3_wizzard.ab2@193> dbg_fid.l = -1 ; no debug file id yet!
0001AA5A <AmiBlitz3_wizzard.ab2@195> If CLIMode = False ; test only in WB mode because libs only needed by PED      tomsmart 2012 03
0001AA6E <AmiBlitz3_wizzard.ab2@197>   If ende Then Goto abnormal_exit                            ; remove Assigns
0001AA78 <AmiBlitz3_wizzard.ab2@201> If CLIMode
0001AA7E <AmiBlitz3_wizzard.ab2@204>   err.l      = False                                       ; indicate that an error has occured
0001AA84 <AmiBlitz3_wizzard.ab2@205>   showhelp.l = False                                       ; show the CLI tool's help
0001AADC <AmiBlitz3_wizzard.ab2@208>   cli_progpath.s     = dos_GetProgDir{default_assign$}     ; replaced hardcoded path  tomsmart1 2012 03 09
0001AB04 <AmiBlitz3_wizzard.ab2@209>   cli_sourcefile.s   = ""
0001AB2C <AmiBlitz3_wizzard.ab2@210>   cli_exefile.s      = ""
0001AB54 <AmiBlitz3_wizzard.ab2@211>   cli_savefile.s     = ""
0001AB7C <AmiBlitz3_wizzard.ab2@212>   cli_dumpfile.s     = ""
0001ABA4 <AmiBlitz3_wizzard.ab2@213>   cli_includepath.s  = ""
0001ABCC <AmiBlitz3_wizzard.ab2@214>   cli_blitzlibpath.s = ""
0001ABD2 <AmiBlitz3_wizzard.ab2@215>   cli_debuginfo.l    = False
0001ABD8 <AmiBlitz3_wizzard.ab2@216>   cli_run.l          = False
0001ABE0 <AmiBlitz3_wizzard.ab2@217>   cli_dumpflags.l    = $FFFFFFFF
0001AC08 <AmiBlitz3_wizzard.ab2@218>   cli_info.s         = ""
0001AC0E <AmiBlitz3_wizzard.ab2@219>   cli_release.l      = False
0001AC18 <AmiBlitz3_wizzard.ab2@220>   cli_numargs.l      = dos_GetNumArgs{}
0001AC1E <AmiBlitz3_wizzard.ab2@221>   cli_gui.l          = False
0001AC26 <AmiBlitz3_wizzard.ab2@222>   cli_dumpform.l     = 1 ; 0 = bin, 1 = ASCII
0001AC2E <AmiBlitz3_wizzard.ab2@223>   cli_verbose.l      = 1
0001AC46 <AmiBlitz3_wizzard.ab2@224>   If cli_numargs=0 Then showhelp=True
0001AC76 <AmiBlitz3_wizzard.ab2@228>     arg.s = dos_GetNextArg{}                               ; get the next CLI argument
0001ACC2 <AmiBlitz3_wizzard.ab2@229>     larg.s = LCase$(arg)                                   ; lower case the option string
0001AD8A <AmiBlitz3_wizzard.ab2@230>     If Left$(larg,1)="-" Then larg = Right$(larg,FLen(larg)-1)
0001ADC0 <AmiBlitz3_wizzard.ab2@231>     Select larg
0001AE0C <AmiBlitz3_wizzard.ab2@232>       Case "s" : larg="source"
0001AE5E <AmiBlitz3_wizzard.ab2@233>       Case "e" : larg="exe"
0001AEB0 <AmiBlitz3_wizzard.ab2@234>       Case "d" : larg="debug"
0001AF02 <AmiBlitz3_wizzard.ab2@235>       Case "r" : larg="release"
0001AF54 <AmiBlitz3_wizzard.ab2@236>       Case "h" : larg="help"
0001AFA6 <AmiBlitz3_wizzard.ab2@237>       Case "v" : larg="verbose"
0001AFB4 <AmiBlitz3_wizzard.ab2@238>     End Select
0001AFEA <AmiBlitz3_wizzard.ab2@240>     Select larg
0001B03E <AmiBlitz3_wizzard.ab2@241>       Case "exe"      : cli_exefile     = dos_GetNextArg{}
0001B098 <AmiBlitz3_wizzard.ab2@242>       Case "source"   : cli_sourcefile  = dos_GetNextArg{}
0001B0F2 <AmiBlitz3_wizzard.ab2@243>       Case "save"     : cli_savefile    = dos_GetNextArg{}
0001B122 <AmiBlitz3_wizzard.ab2@244>       Case "debug"    : cli_debuginfo   = True
0001B152 <AmiBlitz3_wizzard.ab2@245>       Case "run"      : cli_run         = True
0001B182 <AmiBlitz3_wizzard.ab2@246>       Case "release"  : cli_release     = True
0001B1B2 <AmiBlitz3_wizzard.ab2@247>       Case "ped"      : cli_gui         = True
0001B20C <AmiBlitz3_wizzard.ab2@248>       Case "dform"    : cli_dumpform.l  = Vallong(dos_GetNextArg{})
0001B27E <AmiBlitz3_wizzard.ab2@249>       Case "dump"     : cli_info        = LCase$(dos_GetNextArg{})
0001B2AE <AmiBlitz3_wizzard.ab2@250>                         cli_dumpfile    = dos_GetNextArg{}
0001B2B6 <AmiBlitz3_wizzard.ab2@251>                         cli_dumpflags   = $0
0001B316 <AmiBlitz3_wizzard.ab2@252>                         If Instr(cli_info,"all"  ) Then cli_dumpflags | $FFFFFFFF
0001B376 <AmiBlitz3_wizzard.ab2@253>                         If Instr(cli_info,"token") Then cli_dumpflags | #DUMPFLG_TOKENS
0001B3D6 <AmiBlitz3_wizzard.ab2@254>                         If Instr(cli_info,"label") Then cli_dumpflags | #DUMPFLG_LABELS
0001B436 <AmiBlitz3_wizzard.ab2@255>                         If Instr(cli_info,"var"  ) Then cli_dumpflags | #DUMPFLG_VARS
0001B496 <AmiBlitz3_wizzard.ab2@256>                         If Instr(cli_info,"const") Then cli_dumpflags | #DUMPFLG_CONSTANTS
0001B4F6 <AmiBlitz3_wizzard.ab2@257>                         If Instr(cli_info,"func" ) Then cli_dumpflags | #DUMPFLG_FUNCTIONS
0001B556 <AmiBlitz3_wizzard.ab2@258>                         If Instr(cli_info,"macro") Then cli_dumpflags | #DUMPFLG_MACROS
0001B5B6 <AmiBlitz3_wizzard.ab2@259>                         If Instr(cli_info,"type" ) Then cli_dumpflags | #DUMPFLG_NEWTYPES
0001B616 <AmiBlitz3_wizzard.ab2@260>                         If Instr(cli_info,"lib"  ) Then cli_dumpflags | #DUMPFLG_LIBS
0001B628 <AmiBlitz3_wizzard.ab2@261>                         If cli_dumpflags = $0
0001B62E <AmiBlitz3_wizzard.ab2@262>                          err=True
0001B6C2 <AmiBlitz3_wizzard.ab2@263>                          NPrint "\\1b[1m*** ERROR: Invalid flags for dumpfile \\22",cli_info,"\\22 specified!\\1b[0m"
0001B71C <AmiBlitz3_wizzard.ab2@265>       Case "verbose"  : cli_verbose     = Vallong(dos_GetNextArg{})
0001B74C <AmiBlitz3_wizzard.ab2@266>       Case "h"        : showhelp        = True             ; show the help and quit
0001B752 <AmiBlitz3_wizzard.ab2@267>       Default
0001B78A <AmiBlitz3_wizzard.ab2@268>         If arg><""
0001B81E <AmiBlitz3_wizzard.ab2@269>           NPrint "\\1b[1m*** ERROR: Unknown option \\22",arg,"\\22 specified!\\1b[0m"
0001B824 <AmiBlitz3_wizzard.ab2@270>           err = True
0001B832 <AmiBlitz3_wizzard.ab2@272>     End Select
0001B87E <AmiBlitz3_wizzard.ab2@273>   Until arg = "" OR err=True          ; until we processed all arguments
0001B8A0 <AmiBlitz3_wizzard.ab2@276>   If err><False OR showhelp = True
0001B8AA <AmiBlitz3_wizzard.ab2@277>     If showhelp
0001B90C <AmiBlitz3_wizzard.ab2@278>     NPrint "AmiBlitz ",Peek.s(?myversion)
0001B944 <AmiBlitz3_wizzard.ab2@279>     NPrint "\\nSyntax: AmiBlitz3 [options]"
0001B97C <AmiBlitz3_wizzard.ab2@280>     NPrint "\\nOptions:"
0001B9B4 <AmiBlitz3_wizzard.ab2@281>     NPrint "  -(s)ource <file>    : input source code filename (bb2, ab2 or ab3)"
0001B9EC <AmiBlitz3_wizzard.ab2@282>     NPrint "  -(e)xe <file>       : output executable filename"
0001BA24 <AmiBlitz3_wizzard.ab2@283>     NPrint "  -(d)ebug            : compile with debug info"
0001BA5C <AmiBlitz3_wizzard.ab2@284>     NPrint "  -(r)elease          : create release executable (size optimized)"
0001BA94 <AmiBlitz3_wizzard.ab2@285>     NPrint "  -run                : run compiled program"
0001BACC <AmiBlitz3_wizzard.ab2@286>     NPrint "  -dump <info> <file> : dump compiler internals to file"
0001BB04 <AmiBlitz3_wizzard.ab2@287>     NPrint "                        (info=all|token|label|var|func|const|macro|type|lib)"
0001BB3C <AmiBlitz3_wizzard.ab2@288>     NPrint "  -dform <n>          : format of compiler internals dump (0=bin, 1=ASCII; default=1)"
0001BB74 <AmiBlitz3_wizzard.ab2@289>     NPrint "  -PED                : start AmiBlitz3 IDE (PED)"
0001BBAC <AmiBlitz3_wizzard.ab2@290>     NPrint "  -save <file>        : re-save source code (convert format, if needed)"
0001BBE4 <AmiBlitz3_wizzard.ab2@291>     NPrint "  -(v)erbose <n>      : set verbose level (0, 1 or 2; default=1)"
0001BC1C <AmiBlitz3_wizzard.ab2@292>     NPrint "  -(h)elp             : show this help"
0001BC54 <AmiBlitz3_wizzard.ab2@293>     NPrint "\\nExample:"
0001BC8C <AmiBlitz3_wizzard.ab2@294>     NPrint "  AmiBlitz3 -s \\22DH0:Sourcecodes/MyProgram.ab3\\22 -e RAM:MyProgram.exe"
0001BCC4 <AmiBlitz3_wizzard.ab2@295>     NPrint "\\nNote: To start the AmiBlitz3 IDE, run from Workbench or with -PED option."
0001BCCA <AmiBlitz3_wizzard.ab2@298>     Goto abnormal_exit
0001BCE6 <AmiBlitz3_wizzard.ab2@301>   If cli_gui        Then CLIMode = False : error_SetFlags{#error_requester}
0001BD4A <AmiBlitz3_wizzard.ab2@302>   If cli_sourcefile Then Poke.s ?str_tempfilename,cli_sourcefile
0001BD5A <AmiBlitz3_wizzard.ab2@305> Poke.l ?CLIMode,CLIMode
0001BD7E <AmiBlitz3_wizzard.ab2@335>   Dim incdim.s (#maxincludes)
0001BDA2 <AmiBlitz3_wizzard.ab2@336>   Dim incline.l(#maxincludes)
0001BDBC <AmiBlitz3_wizzard.ab2@602> Function.s Get_Libinfo{addr_libnum.l}
0001BDC8 <AmiBlitz3_wizzard.ab2@604>   lib_ab2.b = False : lib_os.b = False
0001BDCE <AmiBlitz3_wizzard.ab2@605>   addr_counter.l = addr_libnum
0001BDD6 <AmiBlitz3_wizzard.ab2@606>   skip.l = 0
0001BDE8 <AmiBlitz3_wizzard.ab2@607>   If addr_counter=0
0001BE16 <AmiBlitz3_wizzard.ab2@608>     error{"INTERNAL: \\__THIS_FUNCTION: Invalid pointer!"}
0001BE34 <AmiBlitz3_wizzard.ab2@609>     Function Return ""
0001BE42 <AmiBlitz3_wizzard.ab2@614>     mem.l = Peek.l(addr_counter)
0001BE50 <AmiBlitz3_wizzard.ab2@619>     addr_counter + 2
0001BE70 <AmiBlitz3_wizzard.ab2@620>     If (mem = $0000ffff) Then lib_ab2= True : skip = 8
0001BE8A <AmiBlitz3_wizzard.ab2@621>     If (mem LSR 16) = $ffe2
0001BE90 <AmiBlitz3_wizzard.ab2@623>       lib_os = True
0001BE98 <AmiBlitz3_wizzard.ab2@624>       skip = 10
0001BEDE <AmiBlitz3_wizzard.ab2@625>       If Peek$(addr_counter+skip) = "" Then skip + 4
0001BF22 <AmiBlitz3_wizzard.ab2@627>   Until (lib_ab2=True OR lib_os = True) OR (addr_counter>addr_libnum + $400)
0001BF38 <AmiBlitz3_wizzard.ab2@629>   If (addr_counter>addr_libnum + $400)
0001BF56 <AmiBlitz3_wizzard.ab2@631>     Function Return ""
0001BF5C <AmiBlitz3_wizzard.ab2@632>   Else
0001BF80 <AmiBlitz3_wizzard.ab2@633>     Function Return Peek$(addr_counter + skip)
0001BF8A <AmiBlitz3_wizzard.ab2@635> End Function
0001BFA8 <AmiBlitz3_wizzard.ab2@675>   !asm
0001BFAE <AmiBlitz3_wizzard.ab2@676>   MOVEA.l _execbase,A6
0001BFB2 <AmiBlitz3_wizzard.ab2@677>   MOVEM.l d0/a0,-(a7)
0001BFB4 <AmiBlitz3_wizzard.ab2@679>   MOVEQ #127,d0
0001BFBA <AmiBlitz3_wizzard.ab2@680>   LEA chartab,a0
0001BFC0 <AmiBlitz3_wizzard.ab2@683>     MOVE.b #1,128(a0)
0001BFC2 <AmiBlitz3_wizzard.ab2@684>     CLR.b (a0)+
0001BFC6 <AmiBlitz3_wizzard.ab2@685>   DBF d0,'l12
0001BFCC <AmiBlitz3_wizzard.ab2@687>   LEA chartab,a0
0001BFD0 <AmiBlitz3_wizzard.ab2@688>   MOVE.b #1,(a0)
0001BFD6 <AmiBlitz3_wizzard.ab2@689>   MOVE.b #1,","(a0)
0001BFDC <AmiBlitz3_wizzard.ab2@690>   MOVE.b #1,";"(a0)
0001BFE2 <AmiBlitz3_wizzard.ab2@691>   MOVE.b #1,":"(a0)
0001BFE8 <AmiBlitz3_wizzard.ab2@692>   MOVE.b #1,"("(a0)
0001BFEE <AmiBlitz3_wizzard.ab2@693>   MOVE.b #1,")"(a0)
0001BFF4 <AmiBlitz3_wizzard.ab2@694>   MOVE.b #1,"="(a0)
0001BFFA <AmiBlitz3_wizzard.ab2@695>   MOVE.b #1,"+"(a0)
0001C000 <AmiBlitz3_wizzard.ab2@696>   MOVE.b #1,"-"(a0)
0001C006 <AmiBlitz3_wizzard.ab2@697>   MOVE.b #1,"*"(a0)
0001C00C <AmiBlitz3_wizzard.ab2@698>   MOVE.b #1,"/"(a0)
0001C012 <AmiBlitz3_wizzard.ab2@699>   MOVE.b #1,"$"(a0)
0001C018 <AmiBlitz3_wizzard.ab2@700>   MOVE.b #1,"%"(a0)
0001C01E <AmiBlitz3_wizzard.ab2@701>   MOVE.b #1,"."(a0)
0001C024 <AmiBlitz3_wizzard.ab2@702>   MOVE.b #1,"["(a0)
0001C02A <AmiBlitz3_wizzard.ab2@703>   MOVE.b #1,"]"(a0)
0001C030 <AmiBlitz3_wizzard.ab2@704>   MOVE.b #1,"{"(a0)
0001C036 <AmiBlitz3_wizzard.ab2@705>   MOVE.b #1,"}"(a0)
0001C03C <AmiBlitz3_wizzard.ab2@706>   MOVE.b #1,"\"(a0)
0001C042 <AmiBlitz3_wizzard.ab2@707>   MOVE.b #1,">"(a0)
0001C048 <AmiBlitz3_wizzard.ab2@708>   MOVE.b #1,"<"(a0)
0001C04E <AmiBlitz3_wizzard.ab2@709>   MOVE.b #1,"&"(a0)
0001C054 <AmiBlitz3_wizzard.ab2@710>   MOVE.b #1,"|"(a0)
0001C05A <AmiBlitz3_wizzard.ab2@711>   MOVE.b #1,"^"(a0)
0001C060 <AmiBlitz3_wizzard.ab2@712>   MOVE.b #1,$7e(a0)
0001C066 <AmiBlitz3_wizzard.ab2@713>   MOVE.w #$0101,1(a0)
0001C06C <AmiBlitz3_wizzard.ab2@715>   LEA instrtab,a0
0001C072 <AmiBlitz3_wizzard.ab2@716>   MOVE.l #labelhash-instrtab,d0
0001C074 <AmiBlitz3_wizzard.ab2@717>   ASR.l #2,d0
0001C076 <AmiBlitz3_wizzard.ab2@718>   SUBQ.l #1,d0
0001C078 <AmiBlitz3_wizzard.ab2@721>    CLR.l (a0)+
0001C07A <AmiBlitz3_wizzard.ab2@722>    SUBQ.l #1,d0
0001C07E <AmiBlitz3_wizzard.ab2@723>   BNE 'l10
0001C084 <AmiBlitz3_wizzard.ab2@725>   LEA allowtab,a0
0001C08A <AmiBlitz3_wizzard.ab2@726>   MOVE.l #255,d0
0001C08C <AmiBlitz3_wizzard.ab2@729>     CLR.b (a0)+
0001C090 <AmiBlitz3_wizzard.ab2@730>   DBF d0,'la1
0001C096 <AmiBlitz3_wizzard.ab2@732>   LEA allowtab,a0
0001C09C <AmiBlitz3_wizzard.ab2@733>   MOVE.b #1,$7d(a0)
0001C0A2 <AmiBlitz3_wizzard.ab2@734>   MOVE.b #1,$7c(a0)
0001C0A8 <AmiBlitz3_wizzard.ab2@735>   MOVE.b #1,$44(a0)
0001C0AE <AmiBlitz3_wizzard.ab2@736>   MOVE.b #1,$45(a0)
0001C0B4 <AmiBlitz3_wizzard.ab2@737>   MOVE.b #1,$b9(a0)
0001C0BA <AmiBlitz3_wizzard.ab2@738>   MOVE.b #1,$89(a0)
0001C0C0 <AmiBlitz3_wizzard.ab2@739>   MOVE.b #1,$ce(a0)
0001C0C6 <AmiBlitz3_wizzard.ab2@740>   MOVE.b #1,$cf(a0)
0001C0CC <AmiBlitz3_wizzard.ab2@741>   MOVE.b #1,$d0(a0)
0001C0D2 <AmiBlitz3_wizzard.ab2@742>   MOVE.b #1,$cd(a0)
0001C0D4 <AmiBlitz3_wizzard.ab2@743>   MOVEQ #0,d0
0001C0DA <AmiBlitz3_wizzard.ab2@745>   MOVEA.l _execbase,a6
0001C0E0 <AmiBlitz3_wizzard.ab2@750>   MOVE.l #$10000,d0
0001C0E6 <AmiBlitz3_wizzard.ab2@751>   MOVE.l #80000,d1
0001C0E8 <AmiBlitz3_wizzard.ab2@752>   MOVE.l d1,d2
0001C0EC <AmiBlitz3_wizzard.ab2@753>   JSR _CreatePool(a6)                                      ; alloc memory for own stuff
0001C0F2 <AmiBlitz3_wizzard.ab2@754>   MOVE.l d0,mempool
0001C0F6 <AmiBlitz3_wizzard.ab2@755>   MOVEM.l (a7)+,d0/a0
0001C0FC <AmiBlitz3_wizzard.ab2@756>   TST.l mempool
0001C100 <AmiBlitz3_wizzard.ab2@757>   BEQ shutdown_compiler
0001C104 <AmiBlitz3_wizzard.ab2@759>   MOVEA.l $114(A6),A4                                      ; get adress of this.Task-Structure
0001C10A <AmiBlitz3_wizzard.ab2@760>   MOVE.l A4,ptr_ThisTask
0001C10E <AmiBlitz3_wizzard.ab2@762>   BSR.w open_doslibrary
0001C112 <AmiBlitz3_wizzard.ab2@763>   BEQ.w shutdown_compiler
0001C118 <AmiBlitz3_wizzard.ab2@765>   MOVE.l D2,stacksize
0001C11A <AmiBlitz3_wizzard.ab2@769>   MOVEQ.l #$00,D0
0001C120 <AmiBlitz3_wizzard.ab2@770>   LEA tokens,A0
0001C122 <AmiBlitz3_wizzard.ab2@773>     ADDQ.w #1,D0
0001C124 <AmiBlitz3_wizzard.ab2@774>     MOVE.l (A0),D1
0001C128 <AmiBlitz3_wizzard.ab2@775>     BEQ.w JL_0_2D1C
0001C12A <AmiBlitz3_wizzard.ab2@776>     MOVEA.l D1,A0
0001C12E <AmiBlitz3_wizzard.ab2@777> BRA.w JL_0_2D0E
0001C134 <AmiBlitz3_wizzard.ab2@780>   MOVE.l A0,end_of_tokenlist
0001C138 <AmiBlitz3_wizzard.ab2@782>   BSR.w makeasmtable
0001C140 <AmiBlitz3_wizzard.ab2@783>   MOVE.w #$FFFF,returncode_org                             ;#-1,returncode
0001C144 <AmiBlitz3_wizzard.ab2@785>   BSR.w open_mathlibrary
0001C148 <AmiBlitz3_wizzard.ab2@786>   BEQ.w freemem_and_quit4
0001C14E <AmiBlitz3_wizzard.ab2@788>   MOVE.l constmaxpc,D0
0001C150 <AmiBlitz3_wizzard.ab2@789>   MOVEQ.l #$02,D1                                          ;chipmem            ;01 org source
0001C156 <AmiBlitz3_wizzard.ab2@790>   MOVEA.l _execbase,A6
0001C15A <AmiBlitz3_wizzard.ab2@791>   JSR _AllocMem(A6)                                        ;mem for branch routine
0001C160 <AmiBlitz3_wizzard.ab2@792>   MOVE.l D0,constpcat
0001C164 <AmiBlitz3_wizzard.ab2@793>   BEQ.w freemem_and_quit3
0001C16A <AmiBlitz3_wizzard.ab2@794>   ADD.l constmaxpc,D0
0001C170 <AmiBlitz3_wizzard.ab2@795>   MOVE.l D0,constlibat
0001C176 <AmiBlitz3_wizzard.ab2@797>   MOVE.l macrobuffer_size,D0
0001C17C <AmiBlitz3_wizzard.ab2@798>   CMP.l #40000,d0
0001C180 <AmiBlitz3_wizzard.ab2@799>   BGE 'ok
0001C186 <AmiBlitz3_wizzard.ab2@800>     MOVE.l #40000,d0
0001C18C <AmiBlitz3_wizzard.ab2@801>     MOVE.l d0,macrobuffer_size
0001C18E <AmiBlitz3_wizzard.ab2@804>   ADDQ.l #4,d0
0001C190 <AmiBlitz3_wizzard.ab2@805>   MOVEQ.l #$01,D1
0001C196 <AmiBlitz3_wizzard.ab2@806>   MOVEA.l _execbase,A6
0001C19A <AmiBlitz3_wizzard.ab2@807>   JSR _AllocMem(A6)                                        ;macro mem
0001C19C <AmiBlitz3_wizzard.ab2@808>   MOVE.l d0,a0
0001C1A2 <AmiBlitz3_wizzard.ab2@809>   MOVE.l macrobuffer_size,(a0)+
0001C1A4 <AmiBlitz3_wizzard.ab2@810>   MOVE.l a0,d0
0001C1AA <AmiBlitz3_wizzard.ab2@811>   MOVE.l D0,ptr_macrobuffer_begin
0001C1AE <AmiBlitz3_wizzard.ab2@812>   BEQ.w freemem_and_quit2
0001C1B4 <AmiBlitz3_wizzard.ab2@813>   ADD.l macrobuffer_size,D0
0001C1BA <AmiBlitz3_wizzard.ab2@814>   MOVE.l D0,ptr_macrobuffer_end
0001C1C0 <AmiBlitz3_wizzard.ab2@816>   TST.l CLIMode
0001C1C4 <AmiBlitz3_wizzard.ab2@817>   BEQ load_ped
0001C1EE <AmiBlitz3_wizzard.ab2@820>   !basic
0001C1F8 <AmiBlitz3_wizzard.ab2@821>   succ.l = InitEmulatedPED{}
0001C1FC <AmiBlitz3_wizzard.ab2@822>   GetD0 succ
0001C21A <AmiBlitz3_wizzard.ab2@823>   !asm
0001C21C <AmiBlitz3_wizzard.ab2@824>   TST.l d0
0001C220 <AmiBlitz3_wizzard.ab2@825>   BEQ freemem_and_quit
0001C226 <AmiBlitz3_wizzard.ab2@826> JMP skip_ped
0001C22C <AmiBlitz3_wizzard.ab2@831>   MOVE.l #str_pedfile,D1                                   ; Load PED
0001C232 <AmiBlitz3_wizzard.ab2@832>   MOVEA.l _dosbase,A6
0001C236 <AmiBlitz3_wizzard.ab2@833>   JSR _LoadSeg(A6)
0001C23C <AmiBlitz3_wizzard.ab2@834>   MOVE.l D0,ptr_seg_ped
0001C240 <AmiBlitz3_wizzard.ab2@836>   BEQ.w cant_load_PED         ; was freemem_and_quit  added error massage  that we can't load it  tomsmart1  2012 03
0001C242 <AmiBlitz3_wizzard.ab2@840>   MOVEA.l D0,A2
0001C244 <AmiBlitz3_wizzard.ab2@841>   ADDA.l A2,A2
0001C246 <AmiBlitz3_wizzard.ab2@842>   ADDA.l A2,A2
0001C24C <AmiBlitz3_wizzard.ab2@844>   LEA teddata,a1                                           ;lea edstruct,A1
0001C252 <AmiBlitz3_wizzard.ab2@845>   MOVE.l #"TEDY",d1
0001C256 <AmiBlitz3_wizzard.ab2@846>   JSR 4(A2)                                                ; Run PED
0001C25C <AmiBlitz3_wizzard.ab2@848>   MOVE.l A0,ped_startup_addr                               ; PED returns address of routine "startup_code"
0001C262 <AmiBlitz3_wizzard.ab2@849>   MOVE.l A1,comdata                                        ; PED returns address of comdata-area in A1
0001C2A0 <AmiBlitz3_wizzard.ab2@851>   !ComData_GetW{comWord_PEDIsAvailable,D0}                 ; if PED_IsAvailable=0, quit AmiBlitz
0001C2A4 <AmiBlitz3_wizzard.ab2@852>   BEQ.w unload_ped
0001C2A8 <AmiBlitz3_wizzard.ab2@853> 
0001C2AC <AmiBlitz3_wizzard.ab2@854>   BNE old_version_of_PED                                   ; no, than exit
0001C2EA <AmiBlitz3_wizzard.ab2@860>   !ComData_GetL{comData_Magic,D0}
0001C2F0 <AmiBlitz3_wizzard.ab2@861>   CMP.l ##MagicIdentifier_Long,D0                          ;"~::~",D0    ; replace with a constants  tomsmart1 2012 03 09
0001C2F4 <AmiBlitz3_wizzard.ab2@862>   BNE unload_ped
0001C32C <AmiBlitz3_wizzard.ab2@865>   !ComData_SetL{comPtr_Trap15            ,#directTrap15 }
0001C364 <AmiBlitz3_wizzard.ab2@866>   !ComData_SetL{comPtr_DirectBuffer      ,#directbuffer}
0001C39C <AmiBlitz3_wizzard.ab2@867>   !ComData_SetL{comPtr_MacroBase         ,#macrobase}
0001C3D4 <AmiBlitz3_wizzard.ab2@868>   !ComData_SetL{comPtr_VarBase           ,#varbase }
0001C40C <AmiBlitz3_wizzard.ab2@869>   !ComData_SetL{comPtr_InstrBase         ,#instrtab}
0001C444 <AmiBlitz3_wizzard.ab2@870>   !ComData_SetL{comPtr_LibPointer        ,#libpointer}
0001C47C <AmiBlitz3_wizzard.ab2@871>   !ComData_SetL{comPtr_CompilerVersion   ,#myversion }
0001C4B4 <AmiBlitz3_wizzard.ab2@872>   !ComData_SetL{comPtr_VersionInformation,#versioninformation}
0001C4EC <AmiBlitz3_wizzard.ab2@873>   !ComData_SetL{comPtr_NumberOfBuilds    ,#number_of_builds}
0001C524 <AmiBlitz3_wizzard.ab2@874>   !ComData_SetL{comFunc_SaveSource       ,#ab3_SaveSource}
0001C55C <AmiBlitz3_wizzard.ab2@875>   !ComData_SetL{comFunc_LoadSource       ,#ab3_LoadSource}
0001C594 <AmiBlitz3_wizzard.ab2@876>   !ComData_SetL{comFunc_ClearSource      ,#ab3_ClearSource}
0001C5CC <AmiBlitz3_wizzard.ab2@879>   !ComData_SetL{comFunc_CalculatExpression       ,#menu_calculator}
0001C604 <AmiBlitz3_wizzard.ab2@880>   !ComData_SetL{comPtr_CalculatorExpressionString,#str_calcexpression}
0001C63C <AmiBlitz3_wizzard.ab2@883>   !ComData_SetL{comFunc_BackupXtraData       ,#BackupXtraData}
0001C674 <AmiBlitz3_wizzard.ab2@884>   !ComData_SetL{comFunc_RestoreXtraData      ,#RestoreXtraData}
0001C6AC <AmiBlitz3_wizzard.ab2@886>   !ComData_SetL{comFunc_GetObjectEntry       ,#getobjectentry}
0001C6E4 <AmiBlitz3_wizzard.ab2@887>   !ComData_SetL{comFunc_StoreMaxObjects      ,#storemaxobjects}
0001C71C <AmiBlitz3_wizzard.ab2@889>   !ComData_SetL{comFunc_ReloadResidentsForPED,#ReloadResidentsForPED}
0001C754 <AmiBlitz3_wizzard.ab2@891>   !ComData_SetL{comPtr_Residents_Table       ,#residents_table}
0001C78C <AmiBlitz3_wizzard.ab2@892>   !ComData_SetL{comPtr_Stringbuffer_Long     ,#stringbuffer}
0001C7C4 <AmiBlitz3_wizzard.ab2@893>   !ComData_SetL{comPtr_Stacksize_Long        ,#stacksize}
0001C7FC <AmiBlitz3_wizzard.ab2@894>   !ComData_SetL{comPtr_Create_Iconfile_Byte  ,#create_iconfile}
0001C834 <AmiBlitz3_wizzard.ab2@895>   !ComData_SetL{comPtr_Make_Smallestcode_Byte,#make_smallestcode}
0001C86C <AmiBlitz3_wizzard.ab2@896>   !ComData_SetL{comPtr_Link_Debuginfo_Byte   ,#link_debuginfo}
0001C8A4 <AmiBlitz3_wizzard.ab2@897>   !ComData_SetL{comPtr_Use_Debugger_Byte     ,#use_debugger}
0001C8DC <AmiBlitz3_wizzard.ab2@898>   !ComData_SetL{comPtr_Autorun_Byte          ,#autorun}
0001C914 <AmiBlitz3_wizzard.ab2@899>   !ComData_SetL{comPtr_Interruptcheck_Byte   ,#interruptcheck}
0001C94C <AmiBlitz3_wizzard.ab2@900>   !ComData_SetL{comPtr_Assemblercheck_Byte   ,#assemblercheck}
0001C984 <AmiBlitz3_wizzard.ab2@901>   !ComData_SetL{comPtr_Overflowcheck_Byte    ,#overflowcheck}
0001C9BC <AmiBlitz3_wizzard.ab2@902>   !ComData_SetL{comPtr_Number_of_Objects_Word,#number_of_objects}
0001C9F4 <AmiBlitz3_wizzard.ab2@903>   !ComData_SetL{comPtr_MaxObjects_Value_Word ,#maxobjects_value}
0001CA2C <AmiBlitz3_wizzard.ab2@904>   !ComData_SetL{comPtr_MaxObject_Pos_Word    ,#maxobject_pos}
0001CA32 <AmiBlitz3_wizzard.ab2@908>   CLR.w returncode_org
0001CA5C <AmiBlitz3_wizzard.ab2@910>   !basic
0001CA66 <AmiBlitz3_wizzard.ab2@911>   If CLIMode
0001CAD8 <AmiBlitz3_wizzard.ab2@912>     If cli_verbose>=2 Then NPrint !TRANS{"Loading BlitzLibs."}
0001CAF6 <AmiBlitz3_wizzard.ab2@914>   !asm
0001CAFC <AmiBlitz3_wizzard.ab2@918>   TST.b start_without_libs
0001CB00 <AmiBlitz3_wizzard.ab2@919>   BNE skip_loading_libs
0001CB04 <AmiBlitz3_wizzard.ab2@920>     BSR.w call_setpointerbusy
0001CB0E <AmiBlitz3_wizzard.ab2@921>     MOVE.l #$FFFFffff,linenumat
0001CB12 <AmiBlitz3_wizzard.ab2@922>     BSR.w get_libraries
0001CB18 <AmiBlitz3_wizzard.ab2@923>     JSR init_libraries
0001CB1C <AmiBlitz3_wizzard.ab2@924>     BSR.w init_buffers
0001CB20 <AmiBlitz3_wizzard.ab2@925>     BSR.w call_setpointernormal
0001CB22 <AmiBlitz3_wizzard.ab2@930>   MOVEQ.l #-$01,D0
0001CB28 <AmiBlitz3_wizzard.ab2@931>   MOVEA.l _execbase,A6
0001CB2C <AmiBlitz3_wizzard.ab2@932>   JSR _AllocSignal(A6)
0001CB32 <AmiBlitz3_wizzard.ab2@933>   MOVE.l D0,signalNum
0001CB34 <AmiBlitz3_wizzard.ab2@934>   MOVEQ.l #$00,D1
0001CB36 <AmiBlitz3_wizzard.ab2@935>   BSET D0,D1
0001CB3C <AmiBlitz3_wizzard.ab2@936>   MOVE.l D1,signals
0001CB42 <AmiBlitz3_wizzard.ab2@940>   MOVE.l #str_defaultdbug,D1
0001CB46 <AmiBlitz3_wizzard.ab2@941>   MOVEA.l _dosbase(PC),A6
0001CB4A <AmiBlitz3_wizzard.ab2@942>   JSR _LoadSeg(A6)
0001CB50 <AmiBlitz3_wizzard.ab2@943>   MOVE.l D0,ptr_seg_debugger
0001CB52 <AmiBlitz3_wizzard.ab2@944>   TST.l d0
0001CB56 <AmiBlitz3_wizzard.ab2@945>   BNE ok_12
0001CB80 <AmiBlitz3_wizzard.ab2@946>     !basic
0001CBD6 <AmiBlitz3_wizzard.ab2@947>     error{!TRANS{"The Debugexecutor `Defaultdbug` was not found.\\nDebugging is not possible."}}
0001CBF4 <AmiBlitz3_wizzard.ab2@948>     !asm
0001CBFA <AmiBlitz3_wizzard.ab2@951>   TST.l CLIMode
0001CBFE <AmiBlitz3_wizzard.ab2@952>   BEQ run_ped
0001CC28 <AmiBlitz3_wizzard.ab2@958>   !basic
0001CC2E <AmiBlitz3_wizzard.ab2@959>   err.l = False
0001CC5A <AmiBlitz3_wizzard.ab2@967>   If cli_sourcefile
0001CC7A <AmiBlitz3_wizzard.ab2@968>     lock.l = Lock_(&cli_sourcefile,#ACCESS_READ)
0001CC84 <AmiBlitz3_wizzard.ab2@969>     If lock
0001CCA8 <AmiBlitz3_wizzard.ab2@970>       NameFromLock_ lock,&cli_tempstr,1024
0001CCD2 <AmiBlitz3_wizzard.ab2@971>       cli_sourcefile.s = Peek.s(&cli_tempstr)
0001CCE2 <AmiBlitz3_wizzard.ab2@972>       UnLock_ lock
0001CD0E <AmiBlitz3_wizzard.ab2@975>     If cli_exefile
0001CD60 <AmiBlitz3_wizzard.ab2@976>       SetCurrentDir{dos_PathPart{cli_sourcefile}}
0001CDB8 <AmiBlitz3_wizzard.ab2@977>       path.s = dos_PathPart{cli_exefile}
0001CDD8 <AmiBlitz3_wizzard.ab2@978>       lock.l = Lock_(&path,#ACCESS_READ)
0001CDE2 <AmiBlitz3_wizzard.ab2@979>       If lock
0001CE06 <AmiBlitz3_wizzard.ab2@980>         NameFromLock_ lock,&cli_tempstr,1024
0001CE30 <AmiBlitz3_wizzard.ab2@981>         path.s = Peek.s(&cli_tempstr)
0001CEDE <AmiBlitz3_wizzard.ab2@982>         cli_exefile = dos_AddPart{path,dos_FilePart{cli_exefile}}
0001CEEE <AmiBlitz3_wizzard.ab2@983>         UnLock_ lock
0001CF38 <AmiBlitz3_wizzard.ab2@994>   If cli_verbose>=2 Then NPrint "Initializing token hashmap."
0001CFAC <AmiBlitz3_wizzard.ab2@995> 
0001CFB6 <AmiBlitz3_wizzard.ab2@996>   *PreProcessor.preprocessor = preproc_Create{}
0001CFC6 <AmiBlitz3_wizzard.ab2@997>   Poke.l ?comPtr_PreProcessor,*PreProcessor
0001CFF8 <AmiBlitz3_wizzard.ab2@998>   preproc_LoadTokens{*PreProcessor,TokenHashMapFile}
0001D00C <AmiBlitz3_wizzard.ab2@999>   If *PreProcessor\tokens=#NULL
0001D086 <AmiBlitz3_wizzard.ab2@1000>     If cli_verbose>=1 Then NPrint "No hashmap found (\\22"+TokenHashMapFile+"\\22), will be created..."
0001D090 <AmiBlitz3_wizzard.ab2@1001>     preproc_QueryTokens{*PreProcessor}
0001D0C2 <AmiBlitz3_wizzard.ab2@1002>     preproc_SaveTokens{*PreProcessor,TokenHashMapFile}
0001D10E <AmiBlitz3_wizzard.ab2@1010>   If cli_sourcefile><"" AND err=False
0001D1B4 <AmiBlitz3_wizzard.ab2@1011>     If cli_verbose>=2 Then NPrint "Loading sourcecode \\22",cli_sourcefile,"\\22."
0001D1E6 <AmiBlitz3_wizzard.ab2@1012>     succ=LoadSource{cli_sourcefile}
0001D1F0 <AmiBlitz3_wizzard.ab2@1013>     If succ
0001D228 <AmiBlitz3_wizzard.ab2@1014> 
0001D2A2 <AmiBlitz3_wizzard.ab2@1015>         If cli_verbose>=1 Then NPrint "Compiling "+cli_sourcefile+"..."
0001D2DC <AmiBlitz3_wizzard.ab2@1016>         comerr.l = CompileSource{cli_exefile,cli_debuginfo,cli_release}
0001D2E6 <AmiBlitz3_wizzard.ab2@1018>         If comerr
0001D2EC <AmiBlitz3_wizzard.ab2@1020>         Else
0001D2F2 <AmiBlitz3_wizzard.ab2@1024>     Else
0001D342 <AmiBlitz3_wizzard.ab2@1025>       If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to read source file!\\1b[0m" : err=True
0001D38E <AmiBlitz3_wizzard.ab2@1029>   If cli_savefile><"" AND err=False
0001D3F6 <AmiBlitz3_wizzard.ab2@1030>     If cli_verbose>=2 Then NPrint "Saving Sourcefiles as "+cli_savefile
0001D424 <AmiBlitz3_wizzard.ab2@1031>     SaveSource{cli_savefile}
0001D470 <AmiBlitz3_wizzard.ab2@1034>   If cli_dumpfile><"" AND err=False
0001D4BA <AmiBlitz3_wizzard.ab2@1035>     If cli_verbose>=2 Then NPrint "Saving dumpfile."
0001D4F0 <AmiBlitz3_wizzard.ab2@1036>     DumpFile{cli_dumpfile,cli_dumpflags,cli_dumpform}
0001D4FA <AmiBlitz3_wizzard.ab2@1039>   If cli_run
0001D50E <AmiBlitz3_wizzard.ab2@1040>     If comerr=False
0001D53A <AmiBlitz3_wizzard.ab2@1041>       If cli_exefile
0001D5B4 <AmiBlitz3_wizzard.ab2@1042>         If cli_verbose>=1 Then NPrint "Compiling "+cli_sourcefile+"..."
0001D5E2 <AmiBlitz3_wizzard.ab2@1043>         comerr.l = CompileSource{"",cli_debuginfo,cli_release} ; re-compile for launch!
0001D62C <AmiBlitz3_wizzard.ab2@1045>       If cli_verbose>=1 Then NPrint "Running program..."
0001D632 <AmiBlitz3_wizzard.ab2@1046>       RunSource{}
0001D634 <AmiBlitz3_wizzard.ab2@1048>         CLR.l d0
0001D672 <AmiBlitz3_wizzard.ab2@1049>         !ComData_GetB{comByte_RunningFlag,D0}
0001D676 <AmiBlitz3_wizzard.ab2@1050>         running.l = PutD0
0001D692 <AmiBlitz3_wizzard.ab2@1051>         If running Then Delay_ 50
0001D6A6 <AmiBlitz3_wizzard.ab2@1053>       Until running=False
0001D6BA <AmiBlitz3_wizzard.ab2@1054>       If Peek.l(?_runerror)
0001D70A <AmiBlitz3_wizzard.ab2@1055>         If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to run compiled program!\\1b[0m" : err=True
0001D71C <AmiBlitz3_wizzard.ab2@1066>   preproc_Free{*PreProcessor} : *PreProcessor=#NULL
0001D766 <AmiBlitz3_wizzard.ab2@1067>   If cli_verbose>=2 Then NPrint "Exit AmiBlitz3."
0001D76C <AmiBlitz3_wizzard.ab2@1068>   DeinitEmulatedPED{}
0001D78A <AmiBlitz3_wizzard.ab2@1070>   !asm
0001D790 <AmiBlitz3_wizzard.ab2@1071> JMP terminate_ab3
0001D796 <AmiBlitz3_wizzard.ab2@1076>   MOVEA.l ped_startup_addr,A1
0001D79C <AmiBlitz3_wizzard.ab2@1077>   LEA str_tempfilename,A0
0001D79E <AmiBlitz3_wizzard.ab2@1078>   JSR (A1)
0001D7A4 <AmiBlitz3_wizzard.ab2@1085>   MOVE.l signalNum,D0
0001D7AA <AmiBlitz3_wizzard.ab2@1086>   MOVEA.l _execbase,A6
0001D7AE <AmiBlitz3_wizzard.ab2@1087>   JSR _FreeSignal(A6)
0001D7B4 <AmiBlitz3_wizzard.ab2@1089>   MOVE.l ptr_seg_debugger,D1
0001D7B8 <AmiBlitz3_wizzard.ab2@1090>   BEQ.b skip_unload_debugger
0001D7BC <AmiBlitz3_wizzard.ab2@1091>     MOVEA.l _dosbase(PC),A6
0001D7C0 <AmiBlitz3_wizzard.ab2@1092>     JSR _UnLoadSeg(A6)
0001D7C4 <AmiBlitz3_wizzard.ab2@1095>   BSR.w Aclearallvars
0001D7C8 <AmiBlitz3_wizzard.ab2@1096>   BSR.w free_residents
0001D7CE <AmiBlitz3_wizzard.ab2@1097>   JSR free_blitzlibs
0001D7D4 <AmiBlitz3_wizzard.ab2@1100>   MOVE.l ptr_seg_ped,D1
0001D7D8 <AmiBlitz3_wizzard.ab2@1101>   BEQ freemem_and_quit
0001D7DC <AmiBlitz3_wizzard.ab2@1102>   MOVEA.l _dosbase(PC),A6
0001D7E0 <AmiBlitz3_wizzard.ab2@1103>   JSR _UnLoadSeg(A6)
0001D7E4 <AmiBlitz3_wizzard.ab2@1104>   BRA freemem_and_quit     ; added by tomsmart1 for Ped errormessage
0001D80E <AmiBlitz3_wizzard.ab2@1107>   !basic
0001D8C6 <AmiBlitz3_wizzard.ab2@1108> 
0001D8E4 <AmiBlitz3_wizzard.ab2@1109>   !asm
0001D8E8 <AmiBlitz3_wizzard.ab2@1110>   BRA freemem_and_quit
0001D912 <AmiBlitz3_wizzard.ab2@1113>   !basic
0001D9CA <AmiBlitz3_wizzard.ab2@1114>   error{!TRANS{"Can't load the Editor:\n"} + pedfile$ + !TRANS{"\n must quit, sorry!"} }  ; show error message  tomsmart1
0001D9E8 <AmiBlitz3_wizzard.ab2@1115>   !asm
0001D9EC <AmiBlitz3_wizzard.ab2@1119>   BSR.w freeallox
0001D9F2 <AmiBlitz3_wizzard.ab2@1120>   MOVEA.l ptr_macrobuffer_begin,A1
0001D9F4 <AmiBlitz3_wizzard.ab2@1121>   MOVE.l -(a1),D0
0001D9F6 <AmiBlitz3_wizzard.ab2@1122>   ADDQ.l #4,d0
0001D9FC <AmiBlitz3_wizzard.ab2@1123>   MOVEA.l _execbase,A6
0001DA00 <AmiBlitz3_wizzard.ab2@1124>   JSR _FreeMem(A6)
0001DA06 <AmiBlitz3_wizzard.ab2@1127>   MOVEA.l _dosbase,A1
0001DA0C <AmiBlitz3_wizzard.ab2@1128>   MOVEA.l _execbase,A6
0001DA10 <AmiBlitz3_wizzard.ab2@1129>   JSR _CloseLibrary(A6)
0001DA16 <AmiBlitz3_wizzard.ab2@1131>   MOVEA.l constpcat,A1
0001DA1C <AmiBlitz3_wizzard.ab2@1132>   MOVE.l constmaxpc,D0
0001DA22 <AmiBlitz3_wizzard.ab2@1133>   MOVEA.l _execbase,A6
0001DA26 <AmiBlitz3_wizzard.ab2@1134>   JSR _FreeMem(A6)
0001DA2C <AmiBlitz3_wizzard.ab2@1137>   MOVEA.l _mathffpbase,A1
0001DA32 <AmiBlitz3_wizzard.ab2@1138>   MOVEA.l _execbase,A6
0001DA36 <AmiBlitz3_wizzard.ab2@1139>   JSR _CloseLibrary(A6)
0001DA3C <AmiBlitz3_wizzard.ab2@1149>     MOVEA.l _execbase,A6
0001DA42 <AmiBlitz3_wizzard.ab2@1150>     MOVE.l mempool,a0
0001DA46 <AmiBlitz3_wizzard.ab2@1151>     JSR _DeletePool(a6)
0001DA4C <AmiBlitz3_wizzard.ab2@1152>     CLR.l pushat
0001DA52 <AmiBlitz3_wizzard.ab2@1159>   JSR free_unusedfunctions
0001DA54 <AmiBlitz3_wizzard.ab2@1160>   MOVEQ #0,d0
0001DA62 <AmiBlitz3_wizzard.ab2@1163>   !exitasm
0001DA9A <AmiBlitz3_wizzard.ab2@1164>   If dynassign<>""
0001DAA4 <AmiBlitz3_wizzard.ab2@1165>     If *AssignSema
0001DAB4 <AmiBlitz3_wizzard.ab2@1166>       ReleaseSemaphore_ *AssignSema
0001DACC <AmiBlitz3_wizzard.ab2@1167>       If (AttemptSemaphore_ (*AssignSema))                 ; we are the exclusive owner of the sema now!
0001DB60 <AmiBlitz3_wizzard.ab2@1168>         dos_RemAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001DB9A <AmiBlitz3_wizzard.ab2@1169>         dos_RemAssign{dynassign}
0001DBAA <AmiBlitz3_wizzard.ab2@1170>         RemSemaphore_ *AssignSema
0001DBBA <AmiBlitz3_wizzard.ab2@1171>         ReleaseSemaphore_ *AssignSema
0001DBF0 <AmiBlitz3_wizzard.ab2@1172>         If *AssignSema\ss_Link\ln_Name Then FreeVec_ *AssignSema\ss_Link\ln_Name : *AssignSema\ss_Link\ln_Name = #NULL
0001DC00 <AmiBlitz3_wizzard.ab2@1173>         FreeVec_ *AssignSema
0001DC08 <AmiBlitz3_wizzard.ab2@1174>         *AssignSema = #NULL
0001DC36 <AmiBlitz3_wizzard.ab2@1178>   SetCurrentDir{cli_path}
0001DC58 <AmiBlitz3_wizzard.ab2@1179>   !coutclose
0001DC5E <AmiBlitz3_wizzard.ab2@1180> End
0001DC6A <AmiBlitz3_wizzard.ab2@1185> str_doslibrary:     Dc.b "dos.library",0 : Even
0001DC6E <AmiBlitz3_wizzard.ab2@1186> _dosbase:           Ds.l 1
0001DC74 <AmiBlitz3_wizzard.ab2@1190>   MOVEA.l _execbase,A6
0001DC7A <AmiBlitz3_wizzard.ab2@1191>   LEA str_doslibrary,A1
0001DC7E <AmiBlitz3_wizzard.ab2@1192>   JSR _OldOpenLibrary(A6)
0001DC84 <AmiBlitz3_wizzard.ab2@1193>   MOVE.l D0,_dosbase
0001DC86 <AmiBlitz3_wizzard.ab2@1194> RTS
0001DC8C <AmiBlitz3_wizzard.ab2@1198>   MOVEA.l #str_mathffpname,A1
0001DC92 <AmiBlitz3_wizzard.ab2@1199>   MOVEA.l _execbase,A6
0001DC96 <AmiBlitz3_wizzard.ab2@1200>   JSR _OldOpenLibrary(A6)
0001DC9C <AmiBlitz3_wizzard.ab2@1201>   MOVE.l D0,_mathffpbase
0001DC9E <AmiBlitz3_wizzard.ab2@1202> RTS
0001DCD0 <AmiBlitz3_wizzard.ab2@1208>   !ComData_JMP{comFunc_SetNormalPointer}
0001DD02 <AmiBlitz3_wizzard.ab2@1216>   !ComData_JMP{comFunc_SetBusyPointer}
0001DD2C <AmiBlitz3_wizzard.ab2@1221>   !basic
0001DD30 <AmiBlitz3_wizzard.ab2@1222>   ab3save_filenameP.l = PutD0
0001DD3A <AmiBlitz3_wizzard.ab2@1223>   If ab3save_filenameP
0001DD62 <AmiBlitz3_wizzard.ab2@1224>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001DD90 <AmiBlitz3_wizzard.ab2@1226>     SaveSource{ab3save_filename}
0001DD96 <AmiBlitz3_wizzard.ab2@1227>   Else
0001DDC4 <AmiBlitz3_wizzard.ab2@1228>     error{"INTERNAL ERROR: no filename passed in D0 to SaveSource{}!"}
0001DDE2 <AmiBlitz3_wizzard.ab2@1230>   !asm
0001DDE4 <AmiBlitz3_wizzard.ab2@1231>   RTS
0001DE0E <AmiBlitz3_wizzard.ab2@1234>   !basic
0001DE12 <AmiBlitz3_wizzard.ab2@1235>   ab3save_filenameP.l = PutD0
0001DE1C <AmiBlitz3_wizzard.ab2@1236>   If ab3save_filenameP
0001DE44 <AmiBlitz3_wizzard.ab2@1237>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001DE72 <AmiBlitz3_wizzard.ab2@1238>     LoadSource{ab3save_filename}
0001DE78 <AmiBlitz3_wizzard.ab2@1239>   Else
0001DEA6 <AmiBlitz3_wizzard.ab2@1240>     error{"INTERNAL ERROR: no filename passed in D0 to LoadSource{}!"}
0001DEC4 <AmiBlitz3_wizzard.ab2@1242>   !asm
0001DEC6 <AmiBlitz3_wizzard.ab2@1243>   RTS
0001DEF0 <AmiBlitz3_wizzard.ab2@1246>   !basic
0001DEF6 <AmiBlitz3_wizzard.ab2@1247>   ClearSource{}
0001DF14 <AmiBlitz3_wizzard.ab2@1248>   !asm
0001DF16 <AmiBlitz3_wizzard.ab2@1249>   RTS
0001DF40 <AmiBlitz3_wizzard.ab2@1252>   !basic
0001DF46 <AmiBlitz3_wizzard.ab2@1253>   OpenConsoleFake{}
0001DF64 <AmiBlitz3_wizzard.ab2@1254>   !asm
0001DF66 <AmiBlitz3_wizzard.ab2@1255>   RTS
0001DF90 <AmiBlitz3_wizzard.ab2@1259>   !basic
0001DF96 <AmiBlitz3_wizzard.ab2@1260>   CloseConsoleFake{}
0001DFB4 <AmiBlitz3_wizzard.ab2@1261>   !asm
0001DFB6 <AmiBlitz3_wizzard.ab2@1262>   RTS
0001DFBC <AmiBlitz3_wizzard.ab2@1266>   MOVE.w d6,menuitemdebug
0001DFE6 <AmiBlitz3_wizzard.ab2@1267>   !basic
0001DFF8 <AmiBlitz3_wizzard.ab2@1268>   menuitemx.l = Peek.w(?menuitemdebug)
0001E01E <AmiBlitz3_wizzard.ab2@1269>   If menuitemx>16 OR  menuitemx<0
0001E086 <AmiBlitz3_wizzard.ab2@1270>     error{"Called invalid AB3 Menuitem #"+Str$(menuitemx)+"!"}
0001E08E <AmiBlitz3_wizzard.ab2@1271>     menuitemx=0
0001E09E <AmiBlitz3_wizzard.ab2@1273>   Poke.w ?menuitemdebug,menuitemx
0001E0BC <AmiBlitz3_wizzard.ab2@1274>   !asm
0001E0C2 <AmiBlitz3_wizzard.ab2@1275>   MOVE.w menuitemdebug,d6
0001E0C8 <AmiBlitz3_wizzard.ab2@1278>   MOVE.l A5,firstitem_
0001E0CE <AmiBlitz3_wizzard.ab2@1279>   MOVE.w D7,numlines_org
0001E0D4 <AmiBlitz3_wizzard.ab2@1280>   MOVE.l d7,numlines
0001E0D6 <AmiBlitz3_wizzard.ab2@1281>   LSL.w #2,D6
0001E0DC <AmiBlitz3_wizzard.ab2@1282>   LEA menu_items,A0
0001E0E0 <AmiBlitz3_wizzard.ab2@1283>   MOVEA.l $0(A0,D6.W),A0
0001E0EA <AmiBlitz3_wizzard.ab2@1284>   MOVE.l #$FFFFffff,linenumat
0001E0F4 <AmiBlitz3_wizzard.ab2@1285>   MOVE.l #$FFFFffff,compilelinecounter
0001E0F6 <AmiBlitz3_wizzard.ab2@1289>   JSR (A0)
0001E0FC <AmiBlitz3_wizzard.ab2@1290>   MOVE.l compilelinecounter,D0
0001E0FE <AmiBlitz3_wizzard.ab2@1291> RTS
0001E102 <AmiBlitz3_wizzard.ab2@1293> menuitemdebug: Dc.l 0
0001E106 <AmiBlitz3_wizzard.ab2@1295> mempool                Dc.l 0
0001E11C <AmiBlitz3_wizzard.ab2@1296> str_loaddebugmessage:  Dc.b "Debug module to load",0 : Even
0001E122 <AmiBlitz3_wizzard.ab2@1297> dloaderr:             JSR handle_compileerror
0001E13E <AmiBlitz3_wizzard.ab2@1298>                        Dc.b "Can't LoadSeg debug module!",0 : Even
0001E17C <AmiBlitz3_wizzard.ab2@1306>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001E182 <AmiBlitz3_wizzard.ab2@1307>   LEA str_loaddebugmessage,A2
0001E188 <AmiBlitz3_wizzard.ab2@1308>   LEA str_blitz3assign,A0
0001E18E <AmiBlitz3_wizzard.ab2@1309>   LEA str_temp_debugmodulename,A1
0001E190 <AmiBlitz3_wizzard.ab2@1312>   JSR (A3)
0001E194 <AmiBlitz3_wizzard.ab2@1314>   BEQ.w menu_loaddebugmodule_noload
0001E19A <AmiBlitz3_wizzard.ab2@1315>   MOVE.l D0,ptr_temp_debugmodule
0001E19E <AmiBlitz3_wizzard.ab2@1316>   BSR.w call_setpointerbusy
0001E1A4 <AmiBlitz3_wizzard.ab2@1317>   MOVE.l A7,errstack
0001E1AE <AmiBlitz3_wizzard.ab2@1318>   MOVE.l #menu_loaddebugmodule_noload,errcont
0001E1B4 <AmiBlitz3_wizzard.ab2@1319>   MOVE.l ptr_temp_debugmodule,D1
0001E1B8 <AmiBlitz3_wizzard.ab2@1321>   MOVEA.l _dosbase(PC),A6
0001E1BC <AmiBlitz3_wizzard.ab2@1322>   JSR _LoadSeg(A6)
0001E1BE <AmiBlitz3_wizzard.ab2@1323>   MOVE.l D0,D7
0001E1C2 <AmiBlitz3_wizzard.ab2@1324>   BEQ.w dloaderr
0001E1C8 <AmiBlitz3_wizzard.ab2@1325>   MOVE.l ptr_seg_debugger,D1
0001E1CC <AmiBlitz3_wizzard.ab2@1326>   BEQ.b menu_loaddebugmodule_ndseg
0001E1D0 <AmiBlitz3_wizzard.ab2@1327>   MOVEA.l _dosbase(PC),A6
0001E1D4 <AmiBlitz3_wizzard.ab2@1328>   JSR _UnLoadSeg(A6)
0001E1D8 <AmiBlitz3_wizzard.ab2@1329>   BSR.w call_setpointernormal
0001E1DE <AmiBlitz3_wizzard.ab2@1332>   MOVE.l D7,ptr_seg_debugger
0001E1E0 <AmiBlitz3_wizzard.ab2@1335> RTS
0001E1FE <AmiBlitz3_wizzard.ab2@1338> str_request_exename:   Dc.b "Name of Executable to Create:",0 : Even                        ;xtext org source
0001E2BE <AmiBlitz3_wizzard.ab2@1339> exepath:               Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xpath  dcb.b 192,0 org source
0001E37E <AmiBlitz3_wizzard.ab2@1340> exefilename:           Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xname  dcb.b 192,0 org source
0001E382 <AmiBlitz3_wizzard.ab2@1341> ptr_newexefilename:    Dc.l 0                                                               ;execname org
0001E3AC <AmiBlitz3_wizzard.ab2@1345>   !basic
0001E3D6 <AmiBlitz3_wizzard.ab2@1346>   exepath.s = Peek.s(?exepath)
0001E400 <AmiBlitz3_wizzard.ab2@1347>   exefile.s = Peek.s(?exefilename)
0001E480 <AmiBlitz3_wizzard.ab2@1348>   exefile.s = dos_AddPart{exepath,exefile}
0001E4B8 <AmiBlitz3_wizzard.ab2@1349>   Poke.s ?tempspace,exefile
0001E4D6 <AmiBlitz3_wizzard.ab2@1350>   !asm
0001E4DC <AmiBlitz3_wizzard.ab2@1371>   LEA tempspace,a0
0001E4DE <AmiBlitz3_wizzard.ab2@1372>   MOVE.l a0,d0
0001E4E2 <AmiBlitz3_wizzard.ab2@1373> BRA newcreate2
0001E50C <AmiBlitz3_wizzard.ab2@1379>   !basic
0001E536 <AmiBlitz3_wizzard.ab2@1380>   request_exename.s = Peek.s(?str_request_exename )
0001E592 <AmiBlitz3_wizzard.ab2@1381>   request_exename   = !TRANS{request_exename}
0001E598 <AmiBlitz3_wizzard.ab2@1382>   GetD0 &request_exename
0001E5B6 <AmiBlitz3_wizzard.ab2@1383>   !asm
0001E5B8 <AmiBlitz3_wizzard.ab2@1384>   MOVE.l D0,A2
0001E5F6 <AmiBlitz3_wizzard.ab2@1387>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001E5FC <AmiBlitz3_wizzard.ab2@1389>   LEA exepath,A0
0001E602 <AmiBlitz3_wizzard.ab2@1390>   LEA exefilename,A1
0001E604 <AmiBlitz3_wizzard.ab2@1393>   JSR (A3)                                                 ;open ped filerequest
0001E608 <AmiBlitz3_wizzard.ab2@1394>   BEQ.w cancel_createexe
0001E612 <AmiBlitz3_wizzard.ab2@1397>   ADD.l #1,number_of_builds
0001E618 <AmiBlitz3_wizzard.ab2@1400>   MOVE.l D0,ptr_newexefilename
0001E620 <AmiBlitz3_wizzard.ab2@1401>   MOVE.w #-1,debugversion
0001E626 <AmiBlitz3_wizzard.ab2@1402>   MOVE.w set_make_smallestcode,-(A7)
0001E62E <AmiBlitz3_wizzard.ab2@1406>     MOVE.w #1,makeexec
0001E634 <AmiBlitz3_wizzard.ab2@1407>     JSR ab3_OpenDebugFile
0001E638 <AmiBlitz3_wizzard.ab2@1408>     BSR.w startcompile
0001E63E <AmiBlitz3_wizzard.ab2@1409>     JSR ab3_CloseDebugFile
0001E648 <AmiBlitz3_wizzard.ab2@1410>     CMP.l #"NORE",reqmode
0001E64C <AmiBlitz3_wizzard.ab2@1411>   BEQ 'l1
0001E652 <AmiBlitz3_wizzard.ab2@1413>   TST.w anyerrs
0001E656 <AmiBlitz3_wizzard.ab2@1414>   BNE.b menu_createexecutable__skip
0001E65A <AmiBlitz3_wizzard.ab2@1415>   BSR.w savefile
0001E660 <AmiBlitz3_wizzard.ab2@1418>   MOVE.w (A7)+,set_make_smallestcode
0001E662 <AmiBlitz3_wizzard.ab2@1421> RTS
0001E66A <AmiBlitz3_wizzard.ab2@1425>   MOVE.w #-1,flag_noPED
0001E66C <AmiBlitz3_wizzard.ab2@1426> RTS
0001E674 <AmiBlitz3_wizzard.ab2@1430>   MOVE.w #-1,flag_noCLI
0001E676 <AmiBlitz3_wizzard.ab2@1431> RTS
0001E6A0 <AmiBlitz3_wizzard.ab2@1434>   !basic
0001E6C8 <AmiBlitz3_wizzard.ab2@1435>     If dbg_fid>=0 Then file_Close{dbg_fid} : dbg_fid = -1
0001E6D8 <AmiBlitz3_wizzard.ab2@1436>     Poke.w ?word_WriteDebugFileNow,0
0001E6F6 <AmiBlitz3_wizzard.ab2@1437>   !asm
0001E6F8 <AmiBlitz3_wizzard.ab2@1438> RTS
0001E722 <AmiBlitz3_wizzard.ab2@1441>   !basic
0001E732 <AmiBlitz3_wizzard.ab2@1442>   Poke.w ?word_WriteDebugFileNow,0
0001E744 <AmiBlitz3_wizzard.ab2@1443>   If dbg_fid>=0
0001E75A <AmiBlitz3_wizzard.ab2@1444>     file_Close{dbg_fid} : dbg_fid = -1
0001E76C <AmiBlitz3_wizzard.ab2@1446>   If dbg_fid.l<0
0001E76E <AmiBlitz3_wizzard.ab2@1447>     CLR.l d0
0001E7AC <AmiBlitz3_wizzard.ab2@1448>     !ComData_GetW{comWord_CreateDebugFile,D0}
0001E7B0 <AmiBlitz3_wizzard.ab2@1449>     dbg_Create.l = PutD0
0001E7BA <AmiBlitz3_wizzard.ab2@1450>     If (dbg_Create) ; only when set!
0001E7CA <AmiBlitz3_wizzard.ab2@1451>       exefileP.l = Peek.l (?ptr_newexefilename)
0001E7F2 <AmiBlitz3_wizzard.ab2@1452>       exefile.s = ""
0001E824 <AmiBlitz3_wizzard.ab2@1453>       If exefileP Then exefile.s = Peek.s(exefileP)
0001E85C <AmiBlitz3_wizzard.ab2@1454>       If exefile><""
0001E8B2 <AmiBlitz3_wizzard.ab2@1455>         dbg_fid = file_Open{exefile+".dbg",#file_forcewrite}
0001E8C4 <AmiBlitz3_wizzard.ab2@1456>         If dbg_fid>=0
0001E8D6 <AmiBlitz3_wizzard.ab2@1457>           Poke.w ?word_WriteDebugFileNow,-1
0001E8E2 <AmiBlitz3_wizzard.ab2@1460>       oldhunkoffset.l = -1
0001E90A <AmiBlitz3_wizzard.ab2@1461>       oldfile.s       = ""
0001E928 <AmiBlitz3_wizzard.ab2@1464>   !asm
0001E92A <AmiBlitz3_wizzard.ab2@1465> RTS
0001E930 <AmiBlitz3_wizzard.ab2@1468> TST.w word_WriteDebugFileNow
0001E934 <AmiBlitz3_wizzard.ab2@1469> BEQ 'skipdebugfile
0001E95E <AmiBlitz3_wizzard.ab2@1470> !basic
0001E970 <AmiBlitz3_wizzard.ab2@1471>   If dbg_fid>=0
0001E982 <AmiBlitz3_wizzard.ab2@1472>     pass.l          = Peek.w(?pass)
0001E994 <AmiBlitz3_wizzard.ab2@1473>     makesmallest.b  = Peek.b(?make_smallestcode)               ; get the status of make_smallestcode  tomsmart1
0001E9B8 <AmiBlitz3_wizzard.ab2@1474> 
0001E9BE <AmiBlitz3_wizzard.ab2@1475>       oldhunkoffset.l = hunkoffset.l
0001E9F2 <AmiBlitz3_wizzard.ab2@1476>       oldfile.s       = codefile.s
0001EA0E <AmiBlitz3_wizzard.ab2@1477>       If Peek.w (?ininclude)>0
0001EA1E <AmiBlitz3_wizzard.ab2@1478>         codeline.l = Peek.l(?includeline);-1
0001EA8E <AmiBlitz3_wizzard.ab2@1479>         codefile.s = dos_FilePart{incdim(Peek.w(?ininclude)-1)}
0001EA94 <AmiBlitz3_wizzard.ab2@1480>       Else
0001EAC2 <AmiBlitz3_wizzard.ab2@1481>         !ComData_LEA{comStr_SourceName,A0}
0001EAC4 <AmiBlitz3_wizzard.ab2@1482>         MOVE.l A0,D0
0001EAC8 <AmiBlitz3_wizzard.ab2@1483>         sourceP.l = PutD0
0001EAF0 <AmiBlitz3_wizzard.ab2@1484>         codefile.s = Peek.s(sourceP)
0001EB00 <AmiBlitz3_wizzard.ab2@1485>         codeline.l = Peek.l(?linenumat)
0001EB28 <AmiBlitz3_wizzard.ab2@1487>       hunkoffset.l = Peek.l(?destpointer)-Peek.l(?destbufferstart)
0001EB7C <AmiBlitz3_wizzard.ab2@1488>       If oldhunkoffset><hunkoffset OR oldfile><codefile
0001EB8C <AmiBlitz3_wizzard.ab2@1495>         *sourceLine.SourceLine_t = Peek.l(?sourceline)
0001EB96 <AmiBlitz3_wizzard.ab2@1496>         If *sourceLine
0001EBAC <AmiBlitz3_wizzard.ab2@1497>           MaxLen detokenline.s = 65536
0001EBEE <AmiBlitz3_wizzard.ab2@1498>          !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0001EBFE <AmiBlitz3_wizzard.ab2@1499>          *tn.preprocessor = Peek.l(?include_preprocessor)
0001EC2A <AmiBlitz3_wizzard.ab2@1500>           written.l = preproc_Detokenize{*tn,&*sourceLine\Text,&detokenline,*sourceLine\CharLength}
0001EC58 <AmiBlitz3_wizzard.ab2@1501>           If written>0 Then Poke.b &detokenline+written-1,0
0001EC82 <AmiBlitz3_wizzard.ab2@1502>           sourceLineText.s = Peek.s(&detokenline)
0001EC88 <AmiBlitz3_wizzard.ab2@1503>         Else
0001ECB0 <AmiBlitz3_wizzard.ab2@1504>           sourceLineText = "NULL"
0001ED78 <AmiBlitz3_wizzard.ab2@1507>         file_WriteLine{dbg_fid,Hex$(hunkoffset)+" <"+codefile+"@"+Str$(codeline)+"> "+sourceLineText}
0001ED96 <AmiBlitz3_wizzard.ab2@1513> !asm
0001ED98 <AmiBlitz3_wizzard.ab2@1515> RTS
0001ED9A <AmiBlitz3_wizzard.ab2@1517> word_WriteDebugFileNow: Dc.w 0
0001ED9C <AmiBlitz3_wizzard.ab2@1519> flag_noPED:  Ds.w 1                                        ;closeed org source
0001ED9E <AmiBlitz3_wizzard.ab2@1520> flag_noCLI:  Ds.w 1                                        ;nocli org source
0001EDA2 <AmiBlitz3_wizzard.ab2@1524>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
0001EDA8 <AmiBlitz3_wizzard.ab2@1525>   MOVEA.l _execbase,A6
0001EDAC <AmiBlitz3_wizzard.ab2@1526>   JSR _CacheClearU(A6)
0001EDB0 <AmiBlitz3_wizzard.ab2@1527>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
0001EDB2 <AmiBlitz3_wizzard.ab2@1528> RTS
0001EDB6 <AmiBlitz3_wizzard.ab2@1531>   MOVEM.l A2-A3,-(A7)
0001EDBC <AmiBlitz3_wizzard.ab2@1532>   CLR.b doublepeek
0001EDC2 <AmiBlitz3_wizzard.ab2@1533>   MOVE.l A5,lastsourcepos
0001EDC8 <AmiBlitz3_wizzard.ab2@1534>    JSR getchar
0001EDCC <AmiBlitz3_wizzard.ab2@1535>   CMP.w #$2E,D0
0001EDD0 <AmiBlitz3_wizzard.ab2@1536>    BEQ.w JL_0_49B4b
0001EDD6 <AmiBlitz3_wizzard.ab2@1537>   MOVEA.l defaulttype,A2
0001EDDA <AmiBlitz3_wizzard.ab2@1538>   CMP.w #$24,D0
0001EDDE <AmiBlitz3_wizzard.ab2@1539>    BNE.w JL_0_49CAb
0001EDE0 <AmiBlitz3_wizzard.ab2@1540>   MOVEQ.l #$07,D1
0001EDE4 <AmiBlitz3_wizzard.ab2@1541> BRA.w JL_0_49DEb
0001EDEA <AmiBlitz3_wizzard.ab2@1544>   JSR getparameter2
0001EDEE <AmiBlitz3_wizzard.ab2@1545>   BEQ.w syntaxerrb
0001EDF4 <AmiBlitz3_wizzard.ab2@1546>   LEA newtypebase,A2
0001EDFA <AmiBlitz3_wizzard.ab2@1547>   JSR findtype
0001EDFE <AmiBlitz3_wizzard.ab2@1548>   BNE.w notypeerrb
0001EE08 <AmiBlitz3_wizzard.ab2@1553>   MOVE.w oldqflag,instringon
0001EE0E <AmiBlitz3_wizzard.ab2@1554>   MOVEA.l lastsourcepos,A5
0001EE14 <AmiBlitz3_wizzard.ab2@1556>   MOVE.l a2,functionreturntype
0001EE1C <AmiBlitz3_wizzard.ab2@1557>   CMPI.l #$100,$4(A2)
0001EE20 <AmiBlitz3_wizzard.ab2@1558>   BLE.w 'isvar
0001EE22 <AmiBlitz3_wizzard.ab2@1562>   MOVEQ #3,d1
0001EE26 <AmiBlitz3_wizzard.ab2@1563>   BRA JL_0_49DEb
0001EE2A <AmiBlitz3_wizzard.ab2@1570>   MOVE.w $6(A2),D1
0001EE30 <AmiBlitz3_wizzard.ab2@1571>   CMP.w #8,8(a2)
0001EE34 <AmiBlitz3_wizzard.ab2@1572>   BNE 'l1
0001EE3C <AmiBlitz3_wizzard.ab2@1573>   MOVE.b #1,doublepeek
0001EE42 <AmiBlitz3_wizzard.ab2@1576>   MOVE.w D1,convsize
0001EE46 <AmiBlitz3_wizzard.ab2@1577>   MOVEM.l (A7)+,A2-A3
0001EE48 <AmiBlitz3_wizzard.ab2@1578> RTS
0001EE4E <AmiBlitz3_wizzard.ab2@1580> notypeerrb JMP notypeerr
0001EE54 <AmiBlitz3_wizzard.ab2@1581> illtypeerrb JMP illtypeerr
0001EE5A <AmiBlitz3_wizzard.ab2@1582> syntaxerrb JMP syntaxerr
0001EE64 <AmiBlitz3_wizzard.ab2@1627>   ADD.l #1,number_of_builds
0001EE6A <AmiBlitz3_wizzard.ab2@1629>   CLR.w debugversion
0001EE70 <AmiBlitz3_wizzard.ab2@1630>   CLR.w flag_noPED
0001EE76 <AmiBlitz3_wizzard.ab2@1631>   CLR.w flag_noCLI
0001EE7E <AmiBlitz3_wizzard.ab2@1634>     MOVE.w #0,makeexec                                     ;MOVE.w #$FFFF,debugversion
0001EE82 <AmiBlitz3_wizzard.ab2@1635>     BSR.w startcompile
0001EE8C <AmiBlitz3_wizzard.ab2@1636>     CMP.l #"NORE",reqmode
0001EE90 <AmiBlitz3_wizzard.ab2@1637>   BEQ 'l1
0001EE96 <AmiBlitz3_wizzard.ab2@1640>   TST.w anyerrs
0001EE9A <AmiBlitz3_wizzard.ab2@1641>    BNE.w JL_0_3482
0001EE9E <AmiBlitz3_wizzard.ab2@1643>   MOVE.w flag_noPED(PC),D1
0001EEA2 <AmiBlitz3_wizzard.ab2@1644>    BEQ.w skip_closingGUI
0001EED4 <AmiBlitz3_wizzard.ab2@1649>   !ComData_JSR{comFunc_CloseGUI}
0001EED8 <AmiBlitz3_wizzard.ab2@1650> BRA.b runprogram
0001EEDC <AmiBlitz3_wizzard.ab2@1654>   BSR.w compilerequester
0001EEE2 <AmiBlitz3_wizzard.ab2@1657>   MOVEA.l _dosbase,A6
0001EEE8 <AmiBlitz3_wizzard.ab2@1658>   LEA exepath,a0
0001EEEA <AmiBlitz3_wizzard.ab2@1659>   MOVE.l a0,d1
0001EEEC <AmiBlitz3_wizzard.ab2@1660>   MOVEQ #-2,d2
0001EEF0 <AmiBlitz3_wizzard.ab2@1661>   JSR _Lock(a6)                                            ;lock
0001EEF6 <AmiBlitz3_wizzard.ab2@1662>   MOVE.l d0,exelock
0001EEFC <AmiBlitz3_wizzard.ab2@1663>   MOVE.l #0,d1
0001EF00 <AmiBlitz3_wizzard.ab2@1664>   JSR _CurrentDir(A6)
0001EF06 <AmiBlitz3_wizzard.ab2@1665>   MOVE.l D0,lock_currentdir
0001EF08 <AmiBlitz3_wizzard.ab2@1666>   MOVE.l D0,D1
0001EF0C <AmiBlitz3_wizzard.ab2@1667>   JSR _CurrentDir(A6)
0001EF12 <AmiBlitz3_wizzard.ab2@1668>   CLR.l ptr_exetask
0001EF18 <AmiBlitz3_wizzard.ab2@1677>   MOVE.l #str_process_name,D1
0001EF1A <AmiBlitz3_wizzard.ab2@1678>   MOVEQ.l #$00,D2
0001EF20 <AmiBlitz3_wizzard.ab2@1679>   MOVE.l #proc_seglist,D3
0001EF22 <AmiBlitz3_wizzard.ab2@1680>   LSR.l #2,D3
0001EF28 <AmiBlitz3_wizzard.ab2@1681>   MOVE.l stacksize,D4
0001EF2E <AmiBlitz3_wizzard.ab2@1682>   MOVEA.l _dosbase,A6
0001EF32 <AmiBlitz3_wizzard.ab2@1683>   JSR _CreateProc(A6)                                      ;runtask
0001EF34 <AmiBlitz3_wizzard.ab2@1684>   TST.l D0
0001EF38 <AmiBlitz3_wizzard.ab2@1685>    BEQ ErrorRunningProg
0001EF6E <AmiBlitz3_wizzard.ab2@1687>   !ComData_SetB{comByte_RunningFlag,#1}   ; this should be done here, straigt after it is clear that
0001EF74 <AmiBlitz3_wizzard.ab2@1689>   TST.w flag_noPED
0001EF78 <AmiBlitz3_wizzard.ab2@1690>    BNE.b JL_0_344E
0001EF7C <AmiBlitz3_wizzard.ab2@1691>   BSR.w close_compilewin
0001EF82 <AmiBlitz3_wizzard.ab2@1694>   CLR.l firstlocal
0001EF88 <AmiBlitz3_wizzard.ab2@1695>   CLR.l firstglob
0001EF8C <AmiBlitz3_wizzard.ab2@1696>   MOVE.w flag_noPED(PC),D1
0001EF90 <AmiBlitz3_wizzard.ab2@1697>   BEQ.w skip_openGUI
0001EFC2 <AmiBlitz3_wizzard.ab2@1701>   !ComData_JSR{comFunc_CreateGUI}
0001EFC4 <AmiBlitz3_wizzard.ab2@1710> RTS
0001EFCE <AmiBlitz3_wizzard.ab2@1713> MOVE.l #1,_runerror
0001EFD2 <AmiBlitz3_wizzard.ab2@1714> BRA JL_0_344E
0001EFD6 <AmiBlitz3_wizzard.ab2@1716> _runerror: Dc.l 0
0001EFDA <AmiBlitz3_wizzard.ab2@1717> lock_currentdir:    Ds.l 1                                          ;tasklock org source
0001EFDE <AmiBlitz3_wizzard.ab2@1718> ptr_exetask:        Ds.l 1                                          ;panictask org source
0001EFE2 <AmiBlitz3_wizzard.ab2@1719> signalNum:          Ds.l 1                                          ;panicbit org source
0001EFE6 <AmiBlitz3_wizzard.ab2@1720> signals:            Ds.l 1                                          ;panicmask org source
0001EFFC <AmiBlitz3_wizzard.ab2@1722> str_process_name:   Dc.b "Blitz ][ Program Proc",0 : Even           ;procname org source
0001F001 <AmiBlitz3_wizzard.ab2@1723>                     Ds.b 5                                          ;cnop 0,4 :dc.l 0   ;length org source
0001F004 <AmiBlitz3_wizzard.ab2@1724> Even4
0001F008 <AmiBlitz3_wizzard.ab2@1726> ptr_ThisTask:       Ds.l 1                                          ;length
0001F00C <AmiBlitz3_wizzard.ab2@1727> .proc_seglist:      Ds.l 1                                          ;procstart org source ;next
0001F012 <AmiBlitz3_wizzard.ab2@1731>   MOVEA.l $4,A0
0001F01A <AmiBlitz3_wizzard.ab2@1732>   MOVE.l  $114(A0),ptr_exetask
0001F020 <AmiBlitz3_wizzard.ab2@1734>   MOVEA.l _dosbase,A6
0001F026 <AmiBlitz3_wizzard.ab2@1735>   MOVE.l exelock,D1
0001F02A <AmiBlitz3_wizzard.ab2@1736>   JSR _CurrentDir(A6)
0001F060 <AmiBlitz3_wizzard.ab2@1741>   !ComData_SetB{comByte_RunningFlag,#1}
0001F064 <AmiBlitz3_wizzard.ab2@1747>   MOVE.w flag_noCLI(PC),D1
0001F068 <AmiBlitz3_wizzard.ab2@1748>    BNE.b skip_openconsole
0001F09A <AmiBlitz3_wizzard.ab2@1752>   !ComData_JSR{comFunc_OpenConsole}
0001F09E <AmiBlitz3_wizzard.ab2@1755>   BSR.w calcvbr
0001F0A4 <AmiBlitz3_wizzard.ab2@1756>   MOVEA.l vbr,A0
0001F0AA <AmiBlitz3_wizzard.ab2@1761>   CLR.w dirmode
0001F0B0 <AmiBlitz3_wizzard.ab2@1762>   CLR.l firstglob
0001F0B6 <AmiBlitz3_wizzard.ab2@1763>   CLR.l firstlocal
0001F0BC <AmiBlitz3_wizzard.ab2@1765>   MOVE.l stacksize,D2
0001F0C2 <AmiBlitz3_wizzard.ab2@1766>   MOVE.l #$624C745A,D7                                      ;#'bLtZ',d7 org source ;force cli-type run
0001F0C8 <AmiBlitz3_wizzard.ab2@1767>   LEA str_cliarguments,A0                                   ;cli arguement
0001F0CE <AmiBlitz3_wizzard.ab2@1768>   MOVEA.l destbufferstart,A1
0001F0D2 <AmiBlitz3_wizzard.ab2@1769>   BSR.w Aclearcache
0001F0D4 <AmiBlitz3_wizzard.ab2@1772>   JSR (A1)                                                 ; execute compiled code  ;Run the thing!
0001F0DA <AmiBlitz3_wizzard.ab2@1774>   MOVEA.l vbr,A0
0001F0E0 <AmiBlitz3_wizzard.ab2@1776>   CLR.l firstglob
0001F0E6 <AmiBlitz3_wizzard.ab2@1777>   CLR.l firstlocal
0001F0EC <AmiBlitz3_wizzard.ab2@1778>   MOVEA.l _dosbase,A6
0001F0F2 <AmiBlitz3_wizzard.ab2@1779>   MOVE.l exelock,d1
0001F0F6 <AmiBlitz3_wizzard.ab2@1780>   BEQ 'nolock
0001F0FA <AmiBlitz3_wizzard.ab2@1781>   JSR _UnLock(a6)
0001F130 <AmiBlitz3_wizzard.ab2@1786>   !ComData_SetB{comByte_RunningFlag,#0}
0001F134 <AmiBlitz3_wizzard.ab2@1789>   MOVE.w flag_noCLI(PC),D1
0001F138 <AmiBlitz3_wizzard.ab2@1790>    BNE.b skip_closeconsole
0001F16A <AmiBlitz3_wizzard.ab2@1794>   !ComData_JSR{comFunc_CloseConsole}
0001F172 <AmiBlitz3_wizzard.ab2@1797>   MOVE.w #$0001,stopit
0001F176 <AmiBlitz3_wizzard.ab2@1798>   MOVE.l signals(PC),D0
0001F17C <AmiBlitz3_wizzard.ab2@1799>   MOVEA.l ptr_ThisTask,A1
0001F182 <AmiBlitz3_wizzard.ab2@1800>   MOVEA.l _execbase,A6
0001F186 <AmiBlitz3_wizzard.ab2@1801>   JSR _Signal(A6)
0001F188 <AmiBlitz3_wizzard.ab2@1802> RTS
0001F18E <AmiBlitz3_wizzard.ab2@1806>   MOVEA.l _execbase,A6
0001F192 <AmiBlitz3_wizzard.ab2@1807>   MOVE.w $128(A6),D0
0001F194 <AmiBlitz3_wizzard.ab2@1808>   MOVEQ.l #$00,D1
0001F198 <AmiBlitz3_wizzard.ab2@1809>   ANDI.w #$F,D0
0001F19C <AmiBlitz3_wizzard.ab2@1812>     BEQ.b calcvbr__skip
0001F19E <AmiBlitz3_wizzard.ab2@1813>     ADDQ.w #1,D1
0001F1A0 <AmiBlitz3_wizzard.ab2@1814>     LSR.w #1,D0
0001F1A4 <AmiBlitz3_wizzard.ab2@1815> BRA.b calcvbr_loop
0001F1A6 <AmiBlitz3_wizzard.ab2@1818>   MOVEQ.l #$00,D2
0001F1AA <AmiBlitz3_wizzard.ab2@1819>   CMP.w #$2,D1
0001F1AE <AmiBlitz3_wizzard.ab2@1820>    BCS.b calcvbr__skip2
0001F1B4 <AmiBlitz3_wizzard.ab2@1821>   MOVEA.l _execbase,A6
0001F1B8 <AmiBlitz3_wizzard.ab2@1822>   JSR _SuperState(A6)
0001F1BC <AmiBlitz3_wizzard.ab2@1823>   Dc.l $4E7A2801                                           ;movec vbr,D2
0001F1C0 <AmiBlitz3_wizzard.ab2@1824>   JSR _UserState(A6)
0001F1C6 <AmiBlitz3_wizzard.ab2@1827>   MOVE.l D2,vbr
0001F1C8 <AmiBlitz3_wizzard.ab2@1828> RTS
0001F1CE <AmiBlitz3_wizzard.ab2@1832>   LEA instrtab,a0
0001F1D4 <AmiBlitz3_wizzard.ab2@1833>   MOVE.l #labelhash-instrtab,d0
0001F1D6 <AmiBlitz3_wizzard.ab2@1834>   ASR.l #2,d0
0001F1D8 <AmiBlitz3_wizzard.ab2@1835>   SUBQ.l #1,d0
0001F1DA <AmiBlitz3_wizzard.ab2@1838>   CLR.l (a0)+
0001F1DC <AmiBlitz3_wizzard.ab2@1839>   SUBQ.l #1,d0
0001F1E0 <AmiBlitz3_wizzard.ab2@1840>   BNE 'l10
0001F1E4 <AmiBlitz3_wizzard.ab2@1841>   BSR.w call_setpointerbusy
0001F1E8 <AmiBlitz3_wizzard.ab2@1842>   BSR.w free_userlibs
0001F1EC <AmiBlitz3_wizzard.ab2@1843>   BSR.w scan_for_userlibs
0001F1F0 <AmiBlitz3_wizzard.ab2@1844>   BSR.w JL_0_7082
0001F1F4 <AmiBlitz3_wizzard.ab2@1845> BRA.w call_setpointernormal
0001F21E <AmiBlitz3_wizzard.ab2@1851>   !basic
0001F258 <AmiBlitz3_wizzard.ab2@1852>   Poke.l ?size_acidlibs, dos_GetFileSize{Peek$(?str_path_acidlibs)}
0001F268 <AmiBlitz3_wizzard.ab2@1854>   deflibNameP.l = Peek.l(?deflib)
0001F272 <AmiBlitz3_wizzard.ab2@1855>   If deflibNameP
0001F2A4 <AmiBlitz3_wizzard.ab2@1856>     If Peek.s(deflibNameP)<>""
0001F2EE <AmiBlitz3_wizzard.ab2@1857>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(Peek.l(?deflib))}
0001F2F4 <AmiBlitz3_wizzard.ab2@1858>     Else
0001F32E <AmiBlitz3_wizzard.ab2@1859>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
0001F334 <AmiBlitz3_wizzard.ab2@1861>   Else
0001F36E <AmiBlitz3_wizzard.ab2@1862>     Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
0001F39C <AmiBlitz3_wizzard.ab2@1863>     error{"INTERNAL: Invalid deflib name pointer!"}
0001F3BA <AmiBlitz3_wizzard.ab2@1865>   !asm
0001F3C0 <AmiBlitz3_wizzard.ab2@1870>   MOVE.l #str_path_userlibs,D1
0001F3C2 <AmiBlitz3_wizzard.ab2@1871>   MOVEQ.l #-$02,D2
0001F3C8 <AmiBlitz3_wizzard.ab2@1872>   MOVEA.l _dosbase,A6
0001F3CC <AmiBlitz3_wizzard.ab2@1873>   JSR _Lock(A6)
0001F3CE <AmiBlitz3_wizzard.ab2@1874>   MOVE.l D0,D7
0001F3D2 <AmiBlitz3_wizzard.ab2@1875>    BEQ.w exit_get_libraries
0001F3D4 <AmiBlitz3_wizzard.ab2@1876>   MOVE.l D7,D1
0001F3DA <AmiBlitz3_wizzard.ab2@1877>   MOVE.l #ptr_parameterstore,D2
0001F3DE <AmiBlitz3_wizzard.ab2@1878>   JSR _Examine(A6)
0001F3E0 <AmiBlitz3_wizzard.ab2@1879>   TST.l D0
0001F3E4 <AmiBlitz3_wizzard.ab2@1880>   BEQ.w unlock_and_exit_get_libraries
0001F3EA <AmiBlitz3_wizzard.ab2@1881>   MOVE.l fib_DirEntryType,D0
0001F3EE <AmiBlitz3_wizzard.ab2@1882>   BMI.w unlock_and_exit_get_libraries
0001F3F0 <AmiBlitz3_wizzard.ab2@1887>     MOVE.l D7,D1
0001F3F6 <AmiBlitz3_wizzard.ab2@1888>     MOVE.l #ptr_parameterstore,D2
0001F3FC <AmiBlitz3_wizzard.ab2@1889>     MOVEA.l _dosbase,A6
0001F400 <AmiBlitz3_wizzard.ab2@1890>     JSR _ExNext(A6)
0001F402 <AmiBlitz3_wizzard.ab2@1891>     TST.l D0
0001F406 <AmiBlitz3_wizzard.ab2@1892>      BEQ.w exit_scan_libsdrawer                            ; kein weiteres File
0001F40C <AmiBlitz3_wizzard.ab2@1894>     MOVE.l fib_DirEntryType,D0                             ; positive for directoies, negative for files
0001F410 <AmiBlitz3_wizzard.ab2@1895>     BPL.w scan_libsdrawer                                  ; skip directories
0001F416 <AmiBlitz3_wizzard.ab2@1897>     LEA fib_FileName,A0                                    ; pruefen ob infofile
0001F41A <AmiBlitz3_wizzard.ab2@1898>     BSR.w check_for_infoextention
0001F41E <AmiBlitz3_wizzard.ab2@1899>     BEQ.w scan_libsdrawer
0001F424 <AmiBlitz3_wizzard.ab2@1901>     MOVEA.l _execbase,A6                                   ; allocate $26 = 38 bytes fuer listeneintrag
0001F426 <AmiBlitz3_wizzard.ab2@1902>     MOVEQ.l #$26,D0
0001F428 <AmiBlitz3_wizzard.ab2@1903>     MOVEQ.l #$01,D1
0001F42E <AmiBlitz3_wizzard.ab2@1904>     MOVE.l mempool,a0
0001F432 <AmiBlitz3_wizzard.ab2@1905>     JSR _AllocPooled(a6)
0001F438 <AmiBlitz3_wizzard.ab2@1907>     MOVEA.l _dosbase,A6
0001F43A <AmiBlitz3_wizzard.ab2@1908>     MOVE.l D0,D6                                           ; sichere speicheradresse in D6
0001F440 <AmiBlitz3_wizzard.ab2@1911>     LEA ptr_userlibs_list,A0                               ; pruefe liste
0001F442 <AmiBlitz3_wizzard.ab2@1914>     MOVE.l (A0),D5
0001F446 <AmiBlitz3_wizzard.ab2@1915>      BEQ.w JL_0_3722                                       ; kein pointer da? kann springe weiter
0001F448 <AmiBlitz3_wizzard.ab2@1916>     MOVEA.l D5,A2
0001F44A <AmiBlitz3_wizzard.ab2@1917>     ADDQ.w #6,A2                                           ; 6 bytes weiter gehen, um dateinamen zu speichern
0001F450 <AmiBlitz3_wizzard.ab2@1920>     LEA fib_FileName,A1                                    ; vergleich, ob Dateiname schon in der liste ist
0001F452 <AmiBlitz3_wizzard.ab2@1923>       MOVEQ.l #$00,D0
0001F454 <AmiBlitz3_wizzard.ab2@1924>       MOVE.b (A1)+,D0
0001F458 <AmiBlitz3_wizzard.ab2@1925>        BEQ.w JL_0_3722                                     ; dateiname komplett, dann weiter
0001F45A <AmiBlitz3_wizzard.ab2@1926>       MOVEQ.l #$00,D1
0001F45C <AmiBlitz3_wizzard.ab2@1927>       MOVE.b (A2)+,D1
0001F460 <AmiBlitz3_wizzard.ab2@1928>        BEQ.w JL_0_371C
0001F482 <AmiBlitz3_wizzard.ab2@1929>       !compare1                                            ;bsr.w tstalpha
0001F486 <AmiBlitz3_wizzard.ab2@1930>       BNE.w JL_0_3702
0001F48A <AmiBlitz3_wizzard.ab2@1931>       ANDI.w #$DF,D0
0001F48C <AmiBlitz3_wizzard.ab2@1934>       EXG.l D0,D1
0001F4AE <AmiBlitz3_wizzard.ab2@1935>       !compare1                                            ;bsr.w tstalpha
0001F4B2 <AmiBlitz3_wizzard.ab2@1936>       BNE.w JL_0_3710
0001F4B6 <AmiBlitz3_wizzard.ab2@1937>       ANDI.w #$DF,D0
0001F4B8 <AmiBlitz3_wizzard.ab2@1940>       EXG.l D0,D1
0001F4BA <AmiBlitz3_wizzard.ab2@1941>       CMP.b D1,D0
0001F4BE <AmiBlitz3_wizzard.ab2@1942>     BEQ.w JL_0_36E6
0001F4C2 <AmiBlitz3_wizzard.ab2@1943>     BCS.w JL_0_3722
0001F4C4 <AmiBlitz3_wizzard.ab2@1946>     MOVEA.l D5,A0
0001F4C8 <AmiBlitz3_wizzard.ab2@1947> BRA.w JL_0_36D6
0001F4CA <AmiBlitz3_wizzard.ab2@1950>     MOVEA.l D6,A1                                          ; hier war die adresse des allokierten Speicers drin
0001F4CC <AmiBlitz3_wizzard.ab2@1951>     MOVE.l (A0),(A1)
0001F4CE <AmiBlitz3_wizzard.ab2@1952>     MOVE.l A1,(A0)
0001F4D0 <AmiBlitz3_wizzard.ab2@1953>     ADDQ.w #4,A1                                           ; pointer zum naechsten namen ueberspringen
0001F4D4 <AmiBlitz3_wizzard.ab2@1954>     MOVE.w #$FFFF,(A1)+                                    ; $FFFF schreiben
0001F4DA <AmiBlitz3_wizzard.ab2@1955>     MOVEA.l #fib_FileName,A0                               ; dateinamen in die liste kopieren
0001F4DC <AmiBlitz3_wizzard.ab2@1958>       MOVE.b (A0)+,(A1)+
0001F4E0 <AmiBlitz3_wizzard.ab2@1959>     BNE.w JL_0_3734
0001F4E4 <AmiBlitz3_wizzard.ab2@1960> BRA.w scan_libsdrawer
0001F4E6 <AmiBlitz3_wizzard.ab2@1963>   MOVE.l D7,D1
0001F4EC <AmiBlitz3_wizzard.ab2@1964>   MOVEA.l _dosbase,A6
0001F4F0 <AmiBlitz3_wizzard.ab2@1965>   JSR _UnLock(A6)
0001F4F2 <AmiBlitz3_wizzard.ab2@1966>   MOVEQ.l #-$01,D0
0001F4F4 <AmiBlitz3_wizzard.ab2@1969> RTS
0001F4F6 <AmiBlitz3_wizzard.ab2@1972>   MOVE.l D7,D1
0001F4FC <AmiBlitz3_wizzard.ab2@1973>   MOVEA.l _dosbase,A6
0001F500 <AmiBlitz3_wizzard.ab2@1974>   JSR _UnLock(A6)
0001F502 <AmiBlitz3_wizzard.ab2@1975>   MOVEQ.l #$00,D0
0001F504 <AmiBlitz3_wizzard.ab2@1976> RTS
0001F50A <AmiBlitz3_wizzard.ab2@1980>   MOVEA.l _execbase,A6
0001F510 <AmiBlitz3_wizzard.ab2@1981>   MOVEA.l ptr_userlibs_list,A2
0001F516 <AmiBlitz3_wizzard.ab2@1982>   CLR.l ptr_userlibs_list
0001F51A <AmiBlitz3_wizzard.ab2@1985>     CMPA.w #$0,A2
0001F51E <AmiBlitz3_wizzard.ab2@1986>     BEQ.w exit_free_userlib
0001F520 <AmiBlitz3_wizzard.ab2@1987>       MOVEA.l A2,A1
0001F522 <AmiBlitz3_wizzard.ab2@1988>       MOVEQ.l #$26,D0
0001F524 <AmiBlitz3_wizzard.ab2@1989>       MOVEA.l (A2),A2
0001F52A <AmiBlitz3_wizzard.ab2@1990>       MOVE.l mempool,a0
0001F530 <AmiBlitz3_wizzard.ab2@1991>       MOVEA.l _execbase,A6
0001F534 <AmiBlitz3_wizzard.ab2@1992>       JSR _FreePooled(A6)
0001F538 <AmiBlitz3_wizzard.ab2@1993> BRA.w loop_free_userlib
0001F53A <AmiBlitz3_wizzard.ab2@1996> RTS
0001F53C <AmiBlitz3_wizzard.ab2@1999> pass:  Dc.w 0                                             ; smallpass org source
0001F53E <AmiBlitz3_wizzard.ab2@2000> compiler_job: Dc.w 0                                      ; added by thilo: what the compiler is doing at the moment
0001F544 <AmiBlitz3_wizzard.ab2@2004>   MOVE.l A7,errstack                                      ;startcompile
0001F54A <AmiBlitz3_wizzard.ab2@2013>   CLR.l reqmode
0001F554 <AmiBlitz3_wizzard.ab2@2015>   MOVE.l #Aclearallvars,errcont
0001F55E <AmiBlitz3_wizzard.ab2@2016>   MOVE.l #concomstack,concomsp
0001F562 <AmiBlitz3_wizzard.ab2@2023>   MOVE.w #1450,D0
0001F564 <AmiBlitz3_wizzard.ab2@2024>   LSR.w #3,D0
0001F566 <AmiBlitz3_wizzard.ab2@2025>   SUBQ.w #7,D0                                             ; 173
0001F56C <AmiBlitz3_wizzard.ab2@2026>   MOVE.w D0,progressbar_width
0001F56E <AmiBlitz3_wizzard.ab2@2027>   SWAP D0
0001F570 <AmiBlitz3_wizzard.ab2@2028>   CLR.w D0
0001F576 <AmiBlitz3_wizzard.ab2@2029>   MOVE.l numlines,d1
0001F57A <AmiBlitz3_wizzard.ab2@2030>   DIVU.l d1,d0                                             ; progressbar_width / numlines
0001F57C <AmiBlitz3_wizzard.ab2@2032>   TST.w D0
0001F580 <AmiBlitz3_wizzard.ab2@2033>   BNE.w JL_0_37C0
0001F582 <AmiBlitz3_wizzard.ab2@2034>   MOVEQ.l #-$01,D0
0001F588 <AmiBlitz3_wizzard.ab2@2037>   MOVE.w D0,progress_per_line
0001F590 <AmiBlitz3_wizzard.ab2@2045>   BTST #$7,use_debugger
0001F594 <AmiBlitz3_wizzard.ab2@2047>   BNE 'debugon
0001F59A <AmiBlitz3_wizzard.ab2@2048>   CLR.w debugmode
0001F59E <AmiBlitz3_wizzard.ab2@2049> BRA.b 'debugoff
0001F5A4 <AmiBlitz3_wizzard.ab2@2052>   SNE debugmode
0001F5DC <AmiBlitz3_wizzard.ab2@2060>   !ComData_SetB{comByte_DebugMode,debugmode}
0001F5E2 <AmiBlitz3_wizzard.ab2@2063>   CLR.w dirmode                                            ;direct mode flag
0001F5E8 <AmiBlitz3_wizzard.ab2@2064>   CLR.w ezerr                                              ;quiet error
0001F5EE <AmiBlitz3_wizzard.ab2@2065>   CLR.l currentfunction
0001F5F4 <AmiBlitz3_wizzard.ab2@2066>   CLR.w connest
0001F5FA <AmiBlitz3_wizzard.ab2@2067>   CLR.w varmode
0001F600 <AmiBlitz3_wizzard.ab2@2068>   CLR.w proceduremode
0001F606 <AmiBlitz3_wizzard.ab2@2069>   CLR.w ininclude
0001F60C <AmiBlitz3_wizzard.ab2@2070>   CLR.w intstring
0001F612 <AmiBlitz3_wizzard.ab2@2071>   CLR.w pass
0001F61A <AmiBlitz3_wizzard.ab2@2072>   MOVE.w #0,compiler_job
0001F620 <AmiBlitz3_wizzard.ab2@2073>   CLR.l funcscanon
0001F626 <AmiBlitz3_wizzard.ab2@2081>   CLR.l funcscanon
0001F62A <AmiBlitz3_wizzard.ab2@2082>   BSR.w compileall
0001F630 <AmiBlitz3_wizzard.ab2@2084>   MOVE.w dontwrite,d0
0001F634 <AmiBlitz3_wizzard.ab2@2085>   CMP.w #1,d0
0001F638 <AmiBlitz3_wizzard.ab2@2086>   BNE 'l3
0001F63E <AmiBlitz3_wizzard.ab2@2087>   CLR.w dontwrite
0001F642 <AmiBlitz3_wizzard.ab2@2088>   BSR compileall                                           ;if a function is not found
0001F648 <AmiBlitz3_wizzard.ab2@2092>   TST.b funcoptimize
0001F64E <AmiBlitz3_wizzard.ab2@2094>   LEA firstproc,a0
0001F654 <AmiBlitz3_wizzard.ab2@2095>   CLR.l savefuncspace
0001F656 <AmiBlitz3_wizzard.ab2@2096>   MOVE.l (a0),d0
0001F658 <AmiBlitz3_wizzard.ab2@2100>     MOVE.l d0,a0
0001F65C <AmiBlitz3_wizzard.ab2@2101>     BEQ 'out
0001F660 <AmiBlitz3_wizzard.ab2@2102>     TST.b isfunc(a0)
0001F664 <AmiBlitz3_wizzard.ab2@2103>     BNE 'nex
0001F668 <AmiBlitz3_wizzard.ab2@2104>     MOVEM.l d2/a6/a0,-(a7)
0001F66A <AmiBlitz3_wizzard.ab2@2106>     MOVEQ #0,d0
0001F66E <AmiBlitz3_wizzard.ab2@2107>     MOVE.b $21+#funcentry_extend-1(a0),d0
0001F672 <AmiBlitz3_wizzard.ab2@2108>     SUB.w #$21+#funcentry_extend,d0
0001F676 <AmiBlitz3_wizzard.ab2@2109>     ADD.w #16,d0
0001F67C <AmiBlitz3_wizzard.ab2@2110>     MOVE.l #$10000,d1
0001F67E <AmiBlitz3_wizzard.ab2@2111>     MOVE.l d0,d2
0001F684 <AmiBlitz3_wizzard.ab2@2112>     MOVEA.l _execbase,A6
0001F688 <AmiBlitz3_wizzard.ab2@2113>     JSR _AllocMem(a6)         ; thilo: not 100% sure about this!
0001F68A <AmiBlitz3_wizzard.ab2@2114>     MOVE.l d0,a1
0001F68E <AmiBlitz3_wizzard.ab2@2115>     MOVE.l d2,4(a1)
0001F694 <AmiBlitz3_wizzard.ab2@2116>     MOVE.l unusedfunc,(a1)
0001F69A <AmiBlitz3_wizzard.ab2@2117>     MOVE.l d0,unusedfunc
0001F69E <AmiBlitz3_wizzard.ab2@2118>     MOVEM.l (a7)+,a6/a0/d2
0001F6A2 <AmiBlitz3_wizzard.ab2@2119>     MOVE.l isfunc+1(a0),d0
0001F6A4 <AmiBlitz3_wizzard.ab2@2120>     ADDQ.l #6,d0
0001F6AA <AmiBlitz3_wizzard.ab2@2121>     ADD.l d0,savefuncspace
0001F6AE <AmiBlitz3_wizzard.ab2@2124>     MOVE.l d0,8(a1)
0001F6B2 <AmiBlitz3_wizzard.ab2@2125>     LEA 12(a1),a1
0001F6B4 <AmiBlitz3_wizzard.ab2@2126>     MOVE.l a0,-(a7)
0001F6B8 <AmiBlitz3_wizzard.ab2@2127>     LEA $21+#funcentry_extend(a0),a0
0001F6BA <AmiBlitz3_wizzard.ab2@2130>       MOVE.b (a0)+,(a1)+
0001F6BE <AmiBlitz3_wizzard.ab2@2131>     BNE 'l1
0001F6C0 <AmiBlitz3_wizzard.ab2@2132>     MOVE.l (a7)+,a0
0001F6C2 <AmiBlitz3_wizzard.ab2@2135>     MOVE.l (a0),d0
0001F6C6 <AmiBlitz3_wizzard.ab2@2136> BRA 'lr1
0001F6CE <AmiBlitz3_wizzard.ab2@2139>   BTST #$7,make_smallestcode
0001F6D2 <AmiBlitz3_wizzard.ab2@2140>   BEQ.b JL_0_3844                                           ;optimize for executable
0001F6D8 <AmiBlitz3_wizzard.ab2@2141>   CLR.l morememadd
0001F6DC <AmiBlitz3_wizzard.ab2@2143>   BSR.w alloxadj
0001F6E0 <AmiBlitz3_wizzard.ab2@2144>   BEQ.w JL_0_388A
0001F6E6 <AmiBlitz3_wizzard.ab2@2145>   ADDQ.w #1,pass
0001F6EA <AmiBlitz3_wizzard.ab2@2146>   BSR.w compileall
0001F6F0 <AmiBlitz3_wizzard.ab2@2149>   MOVE.w dontwrite,D1
0001F6F4 <AmiBlitz3_wizzard.ab2@2150>   BEQ.w JL_0_38A2
0001F6F8 <AmiBlitz3_wizzard.ab2@2169> BRA.w JL_0_3896
0001F700 <AmiBlitz3_wizzard.ab2@2180>   MOVE.w #$FFFF,anyerrs
0001F704 <AmiBlitz3_wizzard.ab2@2181> BRA.w JL_0_38A2
0001F708 <AmiBlitz3_wizzard.ab2@2184>   BSR.w alloxinc                                          ;increase all by 50%
0001F70C <AmiBlitz3_wizzard.ab2@2185>   BEQ.w Aclearallvars
0001F710 <AmiBlitz3_wizzard.ab2@2186> BRA.w JL_0_3824
0001F714 <AmiBlitz3_wizzard.ab2@2198> BRA.w JL_0_38A6                                            ;???????
0001F71A <AmiBlitz3_wizzard.ab2@2202>   JSR freereps
0001F720 <AmiBlitz3_wizzard.ab2@2203>   JSR freesels
0001F726 <AmiBlitz3_wizzard.ab2@2204>   JSR AJL_0_6DF2
0001F72C <AmiBlitz3_wizzard.ab2@2205>   JSR freepends
0001F732 <AmiBlitz3_wizzard.ab2@2206>   JSR freeifs
0001F738 <AmiBlitz3_wizzard.ab2@2207>   JSR AJL_0_C188
0001F73E <AmiBlitz3_wizzard.ab2@2208>   JSR AJL_0_C15C
0001F744 <AmiBlitz3_wizzard.ab2@2209>   JSR AJL_0_D9BC
0001F74A <AmiBlitz3_wizzard.ab2@2212> JMP cleartemplabel
0001F74E <AmiBlitz3_wizzard.ab2@2215> mempool2:  Dc.l 0
0001F754 <AmiBlitz3_wizzard.ab2@2219>   JSR Aclearcache
0001F75C <AmiBlitz3_wizzard.ab2@2221>   BTST #$7,use_debugger
0001F760 <AmiBlitz3_wizzard.ab2@2223>   BNE 'debugon
0001F766 <AmiBlitz3_wizzard.ab2@2224>   CLR.w debugmode
0001F76A <AmiBlitz3_wizzard.ab2@2225> BRA.b 'debugoff
0001F770 <AmiBlitz3_wizzard.ab2@2228>   SNE debugmode
0001F7A8 <AmiBlitz3_wizzard.ab2@2233>   !ComData_SetB{comByte_DebugMode,debugmode}
0001F7AE <AmiBlitz3_wizzard.ab2@2235>   LEA regtable,a0
0001F7B0 <AmiBlitz3_wizzard.ab2@2236>   MOVEQ #10,d0
0001F7B2 <AmiBlitz3_wizzard.ab2@2239>     CLR.l (a0)+
0001F7B6 <AmiBlitz3_wizzard.ab2@2240>   DBF d0,'l1
0001F7BC <AmiBlitz3_wizzard.ab2@2242>   LEA includetemp2,a0
0001F7BE <AmiBlitz3_wizzard.ab2@2243>   CLR.b (a0)
0001F7C8 <AmiBlitz3_wizzard.ab2@2244>   MOVE.l #7,maxregs
0001F7CE <AmiBlitz3_wizzard.ab2@2245>   CLR.w debugnest
0001F7D4 <AmiBlitz3_wizzard.ab2@2246>   CLR.b funcparloop
0001F7DA <AmiBlitz3_wizzard.ab2@2247>   CLR.b nostringopt
0001F7E0 <AmiBlitz3_wizzard.ab2@2248>   CLR.b firsttime
0001F7E6 <AmiBlitz3_wizzard.ab2@2249>   CLR.l lastdestpointer
0001F7EC <AmiBlitz3_wizzard.ab2@2250>   CLR.l lastwritedat
0001F7F2 <AmiBlitz3_wizzard.ab2@2251>   CLR.l prevwritedat
0001F7F8 <AmiBlitz3_wizzard.ab2@2252>   CLR.l includeline
0001F7FE <AmiBlitz3_wizzard.ab2@2253>   CLR.b incnif
0001F804 <AmiBlitz3_wizzard.ab2@2254>   CLR.b formode
0001F80A <AmiBlitz3_wizzard.ab2@2255>   CLR.b funccall
0001F810 <AmiBlitz3_wizzard.ab2@2256>   CLR.w objectcount
0001F816 <AmiBlitz3_wizzard.ab2@2257>   CLR.b resdisable
0001F81C <AmiBlitz3_wizzard.ab2@2258>   CLR.b developobject
0001F822 <AmiBlitz3_wizzard.ab2@2259>   CLR.b optistring
0001F828 <AmiBlitz3_wizzard.ab2@2260>   CLR.b optistring2
0001F82E <AmiBlitz3_wizzard.ab2@2261>   CLR.b optiarray
0001F834 <AmiBlitz3_wizzard.ab2@2262>   CLR.b quickadd
0001F83A <AmiBlitz3_wizzard.ab2@2263>   CLR.w newmode
0001F840 <AmiBlitz3_wizzard.ab2@2264>   CLR.w mode
0001F846 <AmiBlitz3_wizzard.ab2@2265>   CLR.w string1
0001F84C <AmiBlitz3_wizzard.ab2@2266>   CLR.b fastfunc
0001F852 <AmiBlitz3_wizzard.ab2@2267>   CLR.w load_var_size
0001F858 <AmiBlitz3_wizzard.ab2@2268>   CLR.w load_var_reg
0001F85E <AmiBlitz3_wizzard.ab2@2269>   CLR.l load_var_addr
0001F864 <AmiBlitz3_wizzard.ab2@2270>   CLR.w imm_size
0001F86A <AmiBlitz3_wizzard.ab2@2271>   CLR.w imm_reg
0001F870 <AmiBlitz3_wizzard.ab2@2272>   CLR.l imm_addr
0001F876 <AmiBlitz3_wizzard.ab2@2273>   CLR.b _dcb
0001F87C <AmiBlitz3_wizzard.ab2@2274>   CLR.l nohunkoffset
0001F882 <AmiBlitz3_wizzard.ab2@2275>   CLR.b peekaddrsize
0001F888 <AmiBlitz3_wizzard.ab2@2276>   CLR.b typecheck
0001F88E <AmiBlitz3_wizzard.ab2@2277>   CLR.b declare2
0001F894 <AmiBlitz3_wizzard.ab2@2278>   CLR.b declare
0001F89A <AmiBlitz3_wizzard.ab2@2279>   CLR.l myoline                                          ;check
0001F8A0 <AmiBlitz3_wizzard.ab2@2280>   CLR.l myline                                          ;check
0001F8A6 <AmiBlitz3_wizzard.ab2@2281>   CLR.b newvariable
0001F8AC <AmiBlitz3_wizzard.ab2@2282>   CLR.b saved0
0001F8B2 <AmiBlitz3_wizzard.ab2@2283>   CLR.l bsssize
0001F8B8 <AmiBlitz3_wizzard.ab2@2284>   CLR.l chipsize
0001F8BE <AmiBlitz3_wizzard.ab2@2285>   CLR.b infunctioncode
0001F8C8 <AmiBlitz3_wizzard.ab2@2286>   MOVE.l #-1,bssstart
0001F8D2 <AmiBlitz3_wizzard.ab2@2287>   MOVE.l #-1,bssend
0001F8DC <AmiBlitz3_wizzard.ab2@2288>   MOVE.l #-1,chipstart
0001F8E6 <AmiBlitz3_wizzard.ab2@2289>   MOVE.l #-1,chipend
0001F8EE <AmiBlitz3_wizzard.ab2@2290>   MOVE.w #0,bssmode
0001F8F4 <AmiBlitz3_wizzard.ab2@2291>   CLR.w a2offset
0001F8FA <AmiBlitz3_wizzard.ab2@2292>   CLR.w fast
0001F900 <AmiBlitz3_wizzard.ab2@2293>   CLR.w fpu
0001F906 <AmiBlitz3_wizzard.ab2@2294>   CLR.b iee
0001F90C <AmiBlitz3_wizzard.ab2@2295>   CLR.w newsyntax
0001F910 <AmiBlitz3_wizzard.ab2@2296>   BSR.w JL_0_38A6
0001F916 <AmiBlitz3_wizzard.ab2@2297>   JSR AJL_0_7962
0001F91C <AmiBlitz3_wizzard.ab2@2298>   JSR frallvars
0001F922 <AmiBlitz3_wizzard.ab2@2299>   JSR fralltypes
0001F928 <AmiBlitz3_wizzard.ab2@2300>   JSR freemacs
0001F92E <AmiBlitz3_wizzard.ab2@2301>   JSR clearfunctionlist
0001F934 <AmiBlitz3_wizzard.ab2@2302>   TST.w pass
0001F93A <AmiBlitz3_wizzard.ab2@2304>   JSR clearlabels
0001F940 <AmiBlitz3_wizzard.ab2@2305>   JSR clearhash
0001F946 <AmiBlitz3_wizzard.ab2@2308>   LEA devo,a0
0001F94A <AmiBlitz3_wizzard.ab2@2309>   MOVEM.l a0-a6/d0-d7,-(a7)
0001F950 <AmiBlitz3_wizzard.ab2@2310>   LEA ptr_parameterstore,a1
0001F952 <AmiBlitz3_wizzard.ab2@2313>     MOVE.b (a0)+,(a1)+
0001F956 <AmiBlitz3_wizzard.ab2@2314>   BNE 'l1b
0001F958 <AmiBlitz3_wizzard.ab2@2315>   MOVEQ #13,d2
0001F95E <AmiBlitz3_wizzard.ab2@2316>   JSR findlabel2
0001F962 <AmiBlitz3_wizzard.ab2@2317>   BNE 'd
0001F966 <AmiBlitz3_wizzard.ab2@2318>   CLR.l 8(a2)
0001F96A <AmiBlitz3_wizzard.ab2@2321>   MOVEM.l (a7)+,a0-a6/d0-d7
0001F994 <AmiBlitz3_wizzard.ab2@2322>   !basic
0001FA08 <AmiBlitz3_wizzard.ab2@2323>   dos_Delete{dos_AddPart{my_systemdir$,"ab_compileerror.txt"}}
0001FA26 <AmiBlitz3_wizzard.ab2@2324>   !asm
0001FA2C <AmiBlitz3_wizzard.ab2@2325>   CLR.b returncode
0001FA32 <AmiBlitz3_wizzard.ab2@2326> JMP freeprocvs
0001FA38 <AmiBlitz3_wizzard.ab2@2330>   MOVE.l #bssstore-labelhash,d0
0001FA3A <AmiBlitz3_wizzard.ab2@2331>   ASR.l #2,d0
0001FA40 <AmiBlitz3_wizzard.ab2@2332>   LEA labelhash,a0
0001FA42 <AmiBlitz3_wizzard.ab2@2335>     CLR.l (a0)+
0001FA44 <AmiBlitz3_wizzard.ab2@2336>     SUBQ.l #1,d0
0001FA48 <AmiBlitz3_wizzard.ab2@2337>   BNE.s 'l10
0001FA4E <AmiBlitz3_wizzard.ab2@2339>   LEA labelbase,a1
0001FA50 <AmiBlitz3_wizzard.ab2@2340>   MOVE.l (a1),d0
0001FA54 <AmiBlitz3_wizzard.ab2@2341>   BEQ 'l11
0001FA56 <AmiBlitz3_wizzard.ab2@2344>     MOVE.l d0,a1
0001FA5A <AmiBlitz3_wizzard.ab2@2345>     TST.l 4(a1)
0001FA5E <AmiBlitz3_wizzard.ab2@2346>     BEQ 'l29
0001FA62 <AmiBlitz3_wizzard.ab2@2347>     LEA $13(a1),a0
0001FA64 <AmiBlitz3_wizzard.ab2@2348>     MOVEQ #0,d0
0001FA66 <AmiBlitz3_wizzard.ab2@2349>     MOVEQ #0,d1
0001FA68 <AmiBlitz3_wizzard.ab2@2352>       MOVE.b (a0)+,d1
0001FA6C <AmiBlitz3_wizzard.ab2@2353>       BEQ 'l12
0001FA72 <AmiBlitz3_wizzard.ab2@2354>       !hashalgo
0001FA76 <AmiBlitz3_wizzard.ab2@2355> BRA 'l13
0001FA7C <AmiBlitz3_wizzard.ab2@2358>     LEA labelhash,a0
0001FA82 <AmiBlitz3_wizzard.ab2@2359>     AND.l #hashsize,d0
0001FA84 <AmiBlitz3_wizzard.ab2@2360>      ASL.l #2,d0
0001FA88 <AmiBlitz3_wizzard.ab2@2361>     MOVE.l 0(a0,d0),d1                                     ;*4
0001FA8C <AmiBlitz3_wizzard.ab2@2362>     MOVE.l d1,$c(a1)
0001FA90 <AmiBlitz3_wizzard.ab2@2363>     MOVE.l a1,0(a0,d0)
0001FA92 <AmiBlitz3_wizzard.ab2@2366>     MOVE.l (a1),d0
0001FA96 <AmiBlitz3_wizzard.ab2@2367>   BNE 'l21
0001FA98 <AmiBlitz3_wizzard.ab2@2370> RTS
0001FA9E <AmiBlitz3_wizzard.ab2@2374>   MOVEA.l lastrestype,A0
0001FAA0 <AmiBlitz3_wizzard.ab2@2375>   MOVEA.l (A0),A2
0001FAA2 <AmiBlitz3_wizzard.ab2@2376>   CLR.l (A0)
0001FAA8 <AmiBlitz3_wizzard.ab2@2377> JMP freetypes
0001FAAE <AmiBlitz3_wizzard.ab2@2381>   MOVEA.l varbase,A3
0001FAB4 <AmiBlitz3_wizzard.ab2@2382>   CLR.l varbase
0001FAB8 <AmiBlitz3_wizzard.ab2@2385>   CMPA.w #$0,A3
0001FABC <AmiBlitz3_wizzard.ab2@2386>   BEQ.w 'l20
0001FABE <AmiBlitz3_wizzard.ab2@2387>   MOVEA.l A3,A1
0001FAC0 <AmiBlitz3_wizzard.ab2@2388>   MOVEA.l (A3),A3
0001FAC2 <AmiBlitz3_wizzard.ab2@2389>   MOVEQ.l #$00,D0
0001FAC6 <AmiBlitz3_wizzard.ab2@2390>   MOVE.b $E+4(A1),D0
0001FACC <AmiBlitz3_wizzard.ab2@2391>   MOVEA.l _execbase,A6
0001FAD2 <AmiBlitz3_wizzard.ab2@2392>   MOVE.l mempool2,a0
0001FAD6 <AmiBlitz3_wizzard.ab2@2393>   JSR _FreePooled(A6)
0001FADA <AmiBlitz3_wizzard.ab2@2394> BRA.w 'l10
0001FADC <AmiBlitz3_wizzard.ab2@2397> RTS
0001FAE2 <AmiBlitz3_wizzard.ab2@2402>   LEA firstiff,A2
0001FAE4 <AmiBlitz3_wizzard.ab2@2403>   MOVEQ.l #$0E,D2
0001FAEA <AmiBlitz3_wizzard.ab2@2404> JMP freeslist
0001FAEC <AmiBlitz3_wizzard.ab2@2410> progressbar_width:   Dc.w 100                              ;riteend org source ;right end of include strip
0001FAEE <AmiBlitz3_wizzard.ab2@2411> inmacro:             Ds.w 1                                ;macmask org source ;macro found
0001FAF4 <AmiBlitz3_wizzard.ab2@2415>   CLR.w inmacro
0001FAFA <AmiBlitz3_wizzard.ab2@2416>   ADDQ.l #1,globallinecount
0001FB00 <AmiBlitz3_wizzard.ab2@2417>   CLR.b nostringopt
0001FB04 <AmiBlitz3_wizzard.ab2@2418>   BSR.w JL_0_3CA4
0001FB0A <AmiBlitz3_wizzard.ab2@2419>   CLR.w instringon
0001FB10 <AmiBlitz3_wizzard.ab2@2422>   TST.w ininclude
0001FB14 <AmiBlitz3_wizzard.ab2@2423>   BEQ.w JL_0_39B0
0001FB1A <AmiBlitz3_wizzard.ab2@2424>   ADDQ.l #1,includeline
0001FB20 <AmiBlitz3_wizzard.ab2@2425>     JSR ab3_WriteDebugFile
0001FB26 <AmiBlitz3_wizzard.ab2@2426>   JSR AJL_0_C09E
0001FB2A <AmiBlitz3_wizzard.ab2@2427>   BEQ.w JL_0_39B0
0001FB30 <AmiBlitz3_wizzard.ab2@2428>   MOVE.w ininclude,D0
0001FB34 <AmiBlitz3_wizzard.ab2@2429>   CMP.w #$4,D0
0001FB38 <AmiBlitz3_wizzard.ab2@2430>   BCC.w JL_0_39AC
0001FB3A <AmiBlitz3_wizzard.ab2@2431>   ADD.w D0,D0
0001FB40 <AmiBlitz3_wizzard.ab2@2432>   LEA progress_per_line,A0
0001FB44 <AmiBlitz3_wizzard.ab2@2433>   MOVE.w $0(A0,D0.W),D2
0001FB48 <AmiBlitz3_wizzard.ab2@2434>   CMP.w progressbar_width(PC),D2
0001FB4C <AmiBlitz3_wizzard.ab2@2435>   BCC.w JL_0_39AC
0001FB50 <AmiBlitz3_wizzard.ab2@2436>   ADDQ.w #1,$0(A0,D0.W)
0001FB52 <AmiBlitz3_wizzard.ab2@2437>   LSR.w #1,D0
0001FB54 <AmiBlitz3_wizzard.ab2@2438>   MOVE.l d0,d1
0001FB56 <AmiBlitz3_wizzard.ab2@2439>   EXT.l d1
0001FB58 <AmiBlitz3_wizzard.ab2@2440>   MOVE.l d2,d0
0001FB5A <AmiBlitz3_wizzard.ab2@2441>   EXT.l d0                                                 ;d0=x,d1=y
0001FB60 <AmiBlitz3_wizzard.ab2@2443>   JSR update_progressbar
0001FB62 <AmiBlitz3_wizzard.ab2@2446>   MOVEQ.l #-$01,D0
0001FB64 <AmiBlitz3_wizzard.ab2@2447> RTS
0001FB6A <AmiBlitz3_wizzard.ab2@2451>   MOVE.l titleat,D0
0001FB6C <AmiBlitz3_wizzard.ab2@2452>   MOVEQ.l #$00,D1
0001FB72 <AmiBlitz3_wizzard.ab2@2453>   MOVE.w progress_per_line,D1
0001FB74 <AmiBlitz3_wizzard.ab2@2454>   ADD.l D1,D0
0001FB76 <AmiBlitz3_wizzard.ab2@2455>   MOVE.l D0,D1
0001FB78 <AmiBlitz3_wizzard.ab2@2456>   SWAP D0
0001FB7E <AmiBlitz3_wizzard.ab2@2457>   CMP.w titleat,D0
0001FB82 <AmiBlitz3_wizzard.ab2@2458>    BEQ.w JL_0_39E4
0001FB84 <AmiBlitz3_wizzard.ab2@2461>   EXT.l d0
0001FB86 <AmiBlitz3_wizzard.ab2@2462>   MOVE.l d1,-(a7)
0001FB8E <AmiBlitz3_wizzard.ab2@2465>   MOVE.w #1,compiler_job                                    ; set to compiler job 1 (=build executable)
0001FB94 <AmiBlitz3_wizzard.ab2@2466>   JSR update_progressbar
0001FB9C <AmiBlitz3_wizzard.ab2@2467>   MOVE.w #0,compiler_job                                    ; set to compiler job 0 (=compile source)
0001FB9E <AmiBlitz3_wizzard.ab2@2471>   MOVE.l (a7)+,d1
0001FBA4 <AmiBlitz3_wizzard.ab2@2474>   MOVE.l D1,titleat
0001FBAA <AmiBlitz3_wizzard.ab2@2475>   ADDQ.l #1,linenumat
0001FBB0 <AmiBlitz3_wizzard.ab2@2476>   CLR.w linedone
0001FBB6 <AmiBlitz3_wizzard.ab2@2477>   JSR ab3_WriteDebugFile  ; write to DebugFile every main source line
0001FBBC <AmiBlitz3_wizzard.ab2@2479>   SUBQ.l #1,numlines2
0001FBC0 <AmiBlitz3_wizzard.ab2@2480>    BEQ.w JL_0_3A12
0001FBC6 <AmiBlitz3_wizzard.ab2@2481>   MOVEA.l sourceline,A0
0001FBC8 <AmiBlitz3_wizzard.ab2@2482>   MOVEA.l (A0),A0
0001FBCE <AmiBlitz3_wizzard.ab2@2483>   MOVE.l A0,sourceline
0001FBD2 <AmiBlitz3_wizzard.ab2@2484>   LEA $9(A0),A5
0001FBD4 <AmiBlitz3_wizzard.ab2@2487> RTS
0001FBD6 <AmiBlitz3_wizzard.ab2@2491>   MOVE.w D0,-(A7)
0001FBD8 <AmiBlitz3_wizzard.ab2@2492>   MOVEQ.l #$03,D0
0001FBDA <AmiBlitz3_wizzard.ab2@2495>     MOVE.w D1,D2
0001FBDE <AmiBlitz3_wizzard.ab2@2496>     ANDI.w #$F,D2
0001FBE2 <AmiBlitz3_wizzard.ab2@2497>     ADDI.w #$30,D2
0001FBE6 <AmiBlitz3_wizzard.ab2@2498>     CMP.w #$3A,D2
0001FBEA <AmiBlitz3_wizzard.ab2@2499>      BCS.w JL_0_3A2C
0001FBEC <AmiBlitz3_wizzard.ab2@2500>     ADDQ.w #7,D2
0001FBF0 <AmiBlitz3_wizzard.ab2@2503>     MOVE.b D2,$0(A0,D0.W)
0001FBF2 <AmiBlitz3_wizzard.ab2@2504>     LSR.w #4,D1
0001FBF6 <AmiBlitz3_wizzard.ab2@2505>   DBF D0,JL_0_3A18
0001FBF8 <AmiBlitz3_wizzard.ab2@2507>   MOVE.w (A7)+,D0
0001FBFA <AmiBlitz3_wizzard.ab2@2508> RTS
0001FC00 <AmiBlitz3_wizzard.ab2@2518>   MOVE.w skipcode,D1
0001FC04 <AmiBlitz3_wizzard.ab2@2519>   BNE.w JL_0_3A46
0001FC06 <AmiBlitz3_wizzard.ab2@2520> RTS
0001FC08 <AmiBlitz3_wizzard.ab2@2523>   MOVE.l A5,-(A7)
0001FC0A <AmiBlitz3_wizzard.ab2@2524>   MOVEQ.l #$3A,D1                                          ;':'
0001FC0C <AmiBlitz3_wizzard.ab2@2525>   MOVEQ.l #$21,D2                                          ;'!'
0001FC0E <AmiBlitz3_wizzard.ab2@2526>   MOVEQ.l #$3B,D3                                          ;';'
0001FC10 <AmiBlitz3_wizzard.ab2@2527>   MOVEQ.l #$22,D4                                          ;'"'
0001FC12 <AmiBlitz3_wizzard.ab2@2530>   MOVE.b (A5)+,D0
0001FC16 <AmiBlitz3_wizzard.ab2@2531>    BEQ.w JL_0_3CA0
0001FC1A <AmiBlitz3_wizzard.ab2@2532>    BPL.w JL_0_3A60
0001FC1C <AmiBlitz3_wizzard.ab2@2533>   MOVE.b (A5)+,D0
0001FC20 <AmiBlitz3_wizzard.ab2@2534> BRA.w JL_0_3A50
0001FC22 <AmiBlitz3_wizzard.ab2@2537>   CMP.b D4,D0
0001FC26 <AmiBlitz3_wizzard.ab2@2538>    BNE.w JL_0_3A82
0001FC28 <AmiBlitz3_wizzard.ab2@2541>   MOVE.b (A5)+,D0
0001FC2C <AmiBlitz3_wizzard.ab2@2542>    BEQ.w notqerr
0001FC30 <AmiBlitz3_wizzard.ab2@2548>   CMP.b #$22,D0
0001FC34 <AmiBlitz3_wizzard.ab2@2549>    BNE.w JL_0_3A66
0001FC38 <AmiBlitz3_wizzard.ab2@2550> BRA.w JL_0_3A50
0001FC3A <AmiBlitz3_wizzard.ab2@2553>   CMP.b D1,D0
0001FC3E <AmiBlitz3_wizzard.ab2@2554>    BEQ.w JL_0_3CA0
0001FC40 <AmiBlitz3_wizzard.ab2@2555>   CMP.b D3,D0
0001FC44 <AmiBlitz3_wizzard.ab2@2556>    BEQ.w JL_0_3CA0
0001FC46 <AmiBlitz3_wizzard.ab2@2559>   CMP.b D2,D0
0001FC4A <AmiBlitz3_wizzard.ab2@2560>    BNE.w JL_0_3A50
0001FC52 <AmiBlitz3_wizzard.ab2@2561>   MOVE.w #$FFFF,inmacro                                    ; no runtimecheck in macros
0001FC54 <AmiBlitz3_wizzard.ab2@2562>   MOVEA.l A5,A3
0001FC5A <AmiBlitz3_wizzard.ab2@2563>    JSR getparameter2
0001FC5E <AmiBlitz3_wizzard.ab2@2564>    BNE.w JL_0_3AAC
0001FC64 <AmiBlitz3_wizzard.ab2@2565> JMP syntaxerr
0001FC6E <AmiBlitz3_wizzard.ab2@2570>    MOVE.w oldqflag,instringon
0001FC74 <AmiBlitz3_wizzard.ab2@2571>   MOVEA.l lastsourcepos,A5
0001FC7A <AmiBlitz3_wizzard.ab2@2572>    JSR findmac                                             ;find macro
0001FC7E <AmiBlitz3_wizzard.ab2@2573>    BEQ.w JL_0_3ABE
0001FC84 <AmiBlitz3_wizzard.ab2@2574> JMP nomacerr
0001FC8A <AmiBlitz3_wizzard.ab2@2577>   TST.b debugmode
0001FC8E <AmiBlitz3_wizzard.ab2@2578>   BEQ 'sk1
0001FC92 <AmiBlitz3_wizzard.ab2@2579>   MOVE.w #$4e71,d1
0001FC98 <AmiBlitz3_wizzard.ab2@2580>   JSR writeword
0001FC9A <AmiBlitz3_wizzard.ab2@2581>   MOVE.l a5,-(a7)
0001FC9C <AmiBlitz3_wizzard.ab2@2582>   MOVE.l a3,a5
0001FC9E <AmiBlitz3_wizzard.ab2@2583>   SUBQ.l #1,a5
0001FCA6 <AmiBlitz3_wizzard.ab2@2584>   MOVE.w #$0,inmacro
0001FCAA <AmiBlitz3_wizzard.ab2@2585>   BSR debugstuffa
0001FCB2 <AmiBlitz3_wizzard.ab2@2586>   MOVE.w #$FFFF,inmacro
0001FCB4 <AmiBlitz3_wizzard.ab2@2587>   MOVE.l (a7)+,a5
0001FCB8 <AmiBlitz3_wizzard.ab2@2588>   MOVE.w #$4e71,d1
0001FCBE <AmiBlitz3_wizzard.ab2@2589>   JSR writeword
0001FCC0 <AmiBlitz3_wizzard.ab2@2592>   MOVEA.l A5,A4
0001FCC4 <AmiBlitz3_wizzard.ab2@2595>    CMP.b #" ",(a4)+
0001FCC8 <AmiBlitz3_wizzard.ab2@2596>     BEQ 'l5a
0001FCCA <AmiBlitz3_wizzard.ab2@2597>      SUBQ.l#1,a4
0001FCCE <AmiBlitz3_wizzard.ab2@2598>      CMP.b #",",(a4)
0001FCD2 <AmiBlitz3_wizzard.ab2@2599>     BEQ JL_0_3AEA
0001FCD4 <AmiBlitz3_wizzard.ab2@2602>   MOVEQ.l #$00,D4
0001FCDA <AmiBlitz3_wizzard.ab2@2603>   TST.b newsyntax
0001FCDE <AmiBlitz3_wizzard.ab2@2604>   BEQ 'l10b
0001FCE2 <AmiBlitz3_wizzard.ab2@2605>   MOVEM.l a0/d0,-(a7)
0001FCE6 <AmiBlitz3_wizzard.ab2@2606>   MOVE.l 4(a2),a0
0001FCEA <AmiBlitz3_wizzard.ab2@2607>   MOVE.w 8(a2),d0
0001FCEE <AmiBlitz3_wizzard.ab2@2610>   CMP.b #"`",(a0)+
0001FCF2 <AmiBlitz3_wizzard.ab2@2611>   BEQ 'x1
0001FCF4 <AmiBlitz3_wizzard.ab2@2612>   SUBQ.w #1,d0
0001FCF8 <AmiBlitz3_wizzard.ab2@2613>   BNE 'x2
0001FCFC <AmiBlitz3_wizzard.ab2@2614> BRA 'x3
0001FD00 <AmiBlitz3_wizzard.ab2@2617>   MOVEM.l (a7)+,a0/d0
0001FD04 <AmiBlitz3_wizzard.ab2@2618> BRA 'l10
0001FD08 <AmiBlitz3_wizzard.ab2@2621>   MOVEM.l (a7)+,a0/d0
0001FD0C <AmiBlitz3_wizzard.ab2@2622> BRA JL_0_3AEA
0001FD10 <AmiBlitz3_wizzard.ab2@2625>   CMPI.b #"{",(A4)
0001FD14 <AmiBlitz3_wizzard.ab2@2626>    BNE.w JL_0_3AEA
0001FD16 <AmiBlitz3_wizzard.ab2@2630>   ADDQ.l #1,a4
0001FD1A <AmiBlitz3_wizzard.ab2@2633>     CMP.b #" ",(a4)
0001FD1E <AmiBlitz3_wizzard.ab2@2634>     BEQ 'l5
0001FD22 <AmiBlitz3_wizzard.ab2@2635>     MOVEM.l a0/d0,-(a7)
0001FD28 <AmiBlitz3_wizzard.ab2@2636>     CLR.b exmac
0001FD2E <AmiBlitz3_wizzard.ab2@2637>     LEA chartab,a0
0001FD30 <AmiBlitz3_wizzard.ab2@2638>     MOVEQ #0,d0
0001FD32 <AmiBlitz3_wizzard.ab2@2639>     MOVE.b (a4),d0
0001FD36 <AmiBlitz3_wizzard.ab2@2640>     BMI 'm1
0001FD3A <AmiBlitz3_wizzard.ab2@2641>     TST.b 0(a0,d0)
0001FD3E <AmiBlitz3_wizzard.ab2@2642>     BEQ 'm1
0001FD44 <AmiBlitz3_wizzard.ab2@2643>     TST.b newsyntax
0001FD48 <AmiBlitz3_wizzard.ab2@2644>     BEQ 'ns1
0001FD4C <AmiBlitz3_wizzard.ab2@2645>     CMP.b #"#",d0
0001FD50 <AmiBlitz3_wizzard.ab2@2646>     BEQ 'm1
0001FD54 <AmiBlitz3_wizzard.ab2@2647>     CMP.b #"$",d0
0001FD58 <AmiBlitz3_wizzard.ab2@2648>     BEQ 'm1
0001FD5C <AmiBlitz3_wizzard.ab2@2649>     CMP.b #"-",d0
0001FD60 <AmiBlitz3_wizzard.ab2@2650>     BEQ 'm1
0001FD64 <AmiBlitz3_wizzard.ab2@2653>   CMP.b #",",d0
0001FD68 <AmiBlitz3_wizzard.ab2@2654>     BEQ 'm1
0001FD6C <AmiBlitz3_wizzard.ab2@2655>     CMP.b #"{",d0
0001FD70 <AmiBlitz3_wizzard.ab2@2656>     BNE 'm1b
0001FD72 <AmiBlitz3_wizzard.ab2@2657>     ADDQ.l #1,a4
0001FD76 <AmiBlitz3_wizzard.ab2@2658> BRA 'm1
0001FD7C <AmiBlitz3_wizzard.ab2@2661>   TST.b newsyntax
0001FD80 <AmiBlitz3_wizzard.ab2@2662>     BEQ 'm1
0001FD88 <AmiBlitz3_wizzard.ab2@2663>     MOVE.b #1,exmac
0001FD8C <AmiBlitz3_wizzard.ab2@2666>   MOVEM.l (a7)+,a0/d0
0001FD92 <AmiBlitz3_wizzard.ab2@2667>     TST.b exmac
0001FD96 <AmiBlitz3_wizzard.ab2@2668>     BNE JL_0_3AEA
0001FD98 <AmiBlitz3_wizzard.ab2@2675>   TST.b (a4)
0001FD9C <AmiBlitz3_wizzard.ab2@2676>   BEQ JL_0_3AEA
0001FDA2 <AmiBlitz3_wizzard.ab2@2679>   MOVEA.l ptr_macrobuffer_begin,A0
0001FDA4 <AmiBlitz3_wizzard.ab2@2682>   ADDQ.w #1,D4
0001FDA6 <AmiBlitz3_wizzard.ab2@2683>   MOVE.l A4,(A0)
0001FDAA <AmiBlitz3_wizzard.ab2@2684>   CLR.w 4(a0)
0001FDAE <AmiBlitz3_wizzard.ab2@2685>    BSR.w JL_0_3CC6
0001FDB0 <AmiBlitz3_wizzard.ab2@2687>   ADDQ.l #4,a0
0001FDB2 <AmiBlitz3_wizzard.ab2@2691>   SUBQ.w #1,(a0)+
0001FDB6 <AmiBlitz3_wizzard.ab2@2692>   CMP.b #$7D,D0
0001FDBA <AmiBlitz3_wizzard.ab2@2693>   BEQ 'l10
0001FDBC <AmiBlitz3_wizzard.ab2@2694>   TST.b d0
0001FDC0 <AmiBlitz3_wizzard.ab2@2695>   BEQ 'l10
0001FDC4 <AmiBlitz3_wizzard.ab2@2696> BRA JL_0_3AD0
0001FDCA <AmiBlitz3_wizzard.ab2@2700>   CLR.l sourceline3
0001FDCC <AmiBlitz3_wizzard.ab2@2701>   MOVEA.l A4,A5
0001FDD2 <AmiBlitz3_wizzard.ab2@2704>   MOVE.w D4,numarg
0001FDD8 <AmiBlitz3_wizzard.ab2@2711>   MOVE.l #$01,D1
0001FDDE <AmiBlitz3_wizzard.ab2@2712>   MOVEA.l _execbase,A6
0001FDE4 <AmiBlitz3_wizzard.ab2@2713>   MOVE.l mempool,a0
0001FDEA <AmiBlitz3_wizzard.ab2@2714>   MOVE.l macrobuffer_size,D0
0001FDF0 <AmiBlitz3_wizzard.ab2@2715>   CMP.l #40000,d0
0001FDF4 <AmiBlitz3_wizzard.ab2@2716>   BGE 'l1m
0001FDFA <AmiBlitz3_wizzard.ab2@2717>   MOVE.l #40000,d0
0001FE00 <AmiBlitz3_wizzard.ab2@2718>   MOVE.l d0,macrobuffer_size
0001FE04 <AmiBlitz3_wizzard.ab2@2721>   JSR _AllocPooled(a6)
0001FE0E <AmiBlitz3_wizzard.ab2@2723>   MOVE.l myline,myoline
0001FE10 <AmiBlitz3_wizzard.ab2@2726>   ADDQ.l #1,d0
0001FE16 <AmiBlitz3_wizzard.ab2@2727>   MOVE.l D0,myline
0001FE18 <AmiBlitz3_wizzard.ab2@2728>   MOVEA.l D0,A1
0001FE1E <AmiBlitz3_wizzard.ab2@2729>   MOVE.b #":",-1(a1)
0001FE20 <AmiBlitz3_wizzard.ab2@2730>   MOVEA.l A1,A6
0001FE26 <AmiBlitz3_wizzard.ab2@2731>   ADDA.l macrobuffer_size,A6
0001FE28 <AmiBlitz3_wizzard.ab2@2732>   MOVEA.l (A7)+,A0
0001FE2A <AmiBlitz3_wizzard.ab2@2735>   CMPA.l A6,A1
0001FE2E <AmiBlitz3_wizzard.ab2@2736>    BCC.w mbovererr
0001FE30 <AmiBlitz3_wizzard.ab2@2737>   MOVE.b (A0)+,(a1)+
0001FE32 <AmiBlitz3_wizzard.ab2@2738>   CMPA.l A3,A0
0001FE36 <AmiBlitz3_wizzard.ab2@2739>    BCS.w JL_0_3B1E
0001FE38 <AmiBlitz3_wizzard.ab2@2740>   SUBQ.w #1,A1
0001FE3C <AmiBlitz3_wizzard.ab2@2741>   MOVE.w $8(A2),D1
0001FE40 <AmiBlitz3_wizzard.ab2@2742>    BEQ.w JL_0_3C70
0001FE48 <AmiBlitz3_wizzard.ab2@2743>   MOVE.w $A(A2),macnum
0001FE4C <AmiBlitz3_wizzard.ab2@2744>   ADDQ.w #1,$A(A2)
0001FE50 <AmiBlitz3_wizzard.ab2@2745>   MOVEA.l $4(A2),A2
0001FE52 <AmiBlitz3_wizzard.ab2@2746>   SUBQ.w #1,D1
0001FE58 <AmiBlitz3_wizzard.ab2@2747>   CLR.b firstmline
0001FE5A <AmiBlitz3_wizzard.ab2@2750>     MOVEQ.l #$00,D0
0001FE5C <AmiBlitz3_wizzard.ab2@2751>     MOVE.b (A2)+,D0
0001FE62 <AmiBlitz3_wizzard.ab2@2752>     TST.b firstmline
0001FE66 <AmiBlitz3_wizzard.ab2@2753>     BNE 'c1
0001FE6A <AmiBlitz3_wizzard.ab2@2754>     CMP.b #$22,d0
0001FE6E <AmiBlitz3_wizzard.ab2@2755>     BNE 's1
0001FE76 <AmiBlitz3_wizzard.ab2@2756>     MOVE.b #1,firstmline
0001FE7A <AmiBlitz3_wizzard.ab2@2759>     CMP.b #":",d0
0001FE7E <AmiBlitz3_wizzard.ab2@2760>     BNE 'm1
0001FE86 <AmiBlitz3_wizzard.ab2@2761>     MOVE.b #1,firstmline
0001FE8A <AmiBlitz3_wizzard.ab2@2764>     CMP.b #";",d0
0001FE8E <AmiBlitz3_wizzard.ab2@2765>     BNE 'c1
0001FE90 <AmiBlitz3_wizzard.ab2@2768>     SUBQ.w #1,d1                                           ;filter out comment
0001FE92 <AmiBlitz3_wizzard.ab2@2769>     MOVE.b (a2)+,d0
0001FE98 <AmiBlitz3_wizzard.ab2@2770>     CMP.w #":@",-1(a2)
0001FE9C <AmiBlitz3_wizzard.ab2@2771>     BEQ 'c2
0001FE9E <AmiBlitz3_wizzard.ab2@2772>     TST.w d1
0001FEA2 <AmiBlitz3_wizzard.ab2@2773>     BNE 'l1
0001FEA6 <AmiBlitz3_wizzard.ab2@2774>   BRA JL_0_3C6C
0001FEAC <AmiBlitz3_wizzard.ab2@2777>     CMP.b #":",1(a2)
0001FEB0 <AmiBlitz3_wizzard.ab2@2778>       BNE 'l1
0001FEB2 <AmiBlitz3_wizzard.ab2@2779>       ADDQ #2,a2
0001FEB4 <AmiBlitz3_wizzard.ab2@2780>       SUBQ #3,d1
0001FEB6 <AmiBlitz3_wizzard.ab2@2781>       MOVE.b (a2)+,d0
0001FEBE <AmiBlitz3_wizzard.ab2@2782>       MOVE.b #1,firstmline
0001FEC2 <AmiBlitz3_wizzard.ab2@2785>     CMP.b #"`",D0
0001FEC6 <AmiBlitz3_wizzard.ab2@2786>      BNE.w JL_0_3C56
0001FEC8 <AmiBlitz3_wizzard.ab2@2787>     SUBQ.w #1,D1
0001FECA <AmiBlitz3_wizzard.ab2@2788>     MOVE.b (A2)+,D0
0001FECE <AmiBlitz3_wizzard.ab2@2789>     CMP.w #$7B,D0
0001FED2 <AmiBlitz3_wizzard.ab2@2790>      BEQ.w JL_0_3BB6
0001FED6 <AmiBlitz3_wizzard.ab2@2791>     CMP.w #$40,D0
0001FEDA <AmiBlitz3_wizzard.ab2@2792>      BNE.w JL_0_3B82
0001FEDC <AmiBlitz3_wizzard.ab2@2793>     MOVEQ.l #$00,D2
0001FEE2 <AmiBlitz3_wizzard.ab2@2794>     MOVE.w macnum,D2
0001FEE4 <AmiBlitz3_wizzard.ab2@2795>     MOVEA.l A1,A0
0001FEE6 <AmiBlitz3_wizzard.ab2@2796>     MOVE.w D1,-(A7)
0001FEEC <AmiBlitz3_wizzard.ab2@2797>      JSR makelong
0001FEEE <AmiBlitz3_wizzard.ab2@2798>     MOVEA.l A0,A1
0001FEF0 <AmiBlitz3_wizzard.ab2@2799>     MOVE.w (A7)+,D1
0001FEF4 <AmiBlitz3_wizzard.ab2@2800>   BRA.w JL_0_3C6C
0001FEF8 <AmiBlitz3_wizzard.ab2@2803>     ORI.w #$20,D0
0001FEFC <AmiBlitz3_wizzard.ab2@2804>     CMP.w #$7A,D0
0001FF00 <AmiBlitz3_wizzard.ab2@2805>      BCS.w JL_0_3B94
0001FF06 <AmiBlitz3_wizzard.ab2@2806>   JMP ilconsterr
0001FF0A <AmiBlitz3_wizzard.ab2@2809>     SUBI.w #$30,D0
0001FF0E <AmiBlitz3_wizzard.ab2@2810>     CMP.w #$A,D0
0001FF12 <AmiBlitz3_wizzard.ab2@2811>      BCS.w JL_0_3BF2
0001FF16 <AmiBlitz3_wizzard.ab2@2812>     SUBI.w #$27,D0
0001FF1A <AmiBlitz3_wizzard.ab2@2813>     CMP.w #$A,D0
0001FF1E <AmiBlitz3_wizzard.ab2@2814>      BCC.w JL_0_3BB2
0001FF24 <AmiBlitz3_wizzard.ab2@2815>   JMP ilconsterr
0001FF28 <AmiBlitz3_wizzard.ab2@2818>   BRA.w JL_0_3BF2
0001FF2A <AmiBlitz3_wizzard.ab2@2821>     MOVE.l A5,-(A7)
0001FF2E <AmiBlitz3_wizzard.ab2@2822>     MOVEM.l D1/A1-A2/A6,-(A7)
0001FF30 <AmiBlitz3_wizzard.ab2@2823>     MOVEA.l A2,A5
0001FF36 <AmiBlitz3_wizzard.ab2@2824>      JSR AJL_0_BF6E
0001FF3A <AmiBlitz3_wizzard.ab2@2825>     CMP.w #$7D,D0
0001FF3E <AmiBlitz3_wizzard.ab2@2826>      BEQ.w JL_0_3BD2
0001FF44 <AmiBlitz3_wizzard.ab2@2827>   JMP syntaxerr
0001FF48 <AmiBlitz3_wizzard.ab2@2830>     MOVEM.l (A7)+,D1/A1-A2/A6
0001FF4A <AmiBlitz3_wizzard.ab2@2831>     MOVE.l A5,D2
0001FF4C <AmiBlitz3_wizzard.ab2@2832>     SUB.l A2,D2
0001FF4E <AmiBlitz3_wizzard.ab2@2833>     SUB.w D2,D1
0001FF50 <AmiBlitz3_wizzard.ab2@2834>     MOVEA.l A5,A2
0001FF56 <AmiBlitz3_wizzard.ab2@2835>     CLR.w instringon
0001FF58 <AmiBlitz3_wizzard.ab2@2836>     MOVEA.l (A7)+,A5
0001FF5A <AmiBlitz3_wizzard.ab2@2837>     MOVE.l D3,D0
0001FF5E <AmiBlitz3_wizzard.ab2@2838>     BPL.w JL_0_3BF2
0001FF64 <AmiBlitz3_wizzard.ab2@2839>   JMP ilconsterr
0001FF66 <AmiBlitz3_wizzard.ab2@2842>     SUBQ.w #1,D0
0001FF6A <AmiBlitz3_wizzard.ab2@2843>      BPL.w JL_0_3C20
0001FF70 <AmiBlitz3_wizzard.ab2@2847>     MOVE.w numarg,D0
0001FF74 <AmiBlitz3_wizzard.ab2@2848>     DIVU #$A,D0
0001FF78 <AmiBlitz3_wizzard.ab2@2849>     ADDI.w #$30,D0
0001FF7A <AmiBlitz3_wizzard.ab2@2850>     CMPA.l A6,A1
0001FF7E <AmiBlitz3_wizzard.ab2@2851>      BCC.w mbovererr
0001FF80 <AmiBlitz3_wizzard.ab2@2852>     MOVE.b D0,(A1)+
0001FF82 <AmiBlitz3_wizzard.ab2@2853>     SWAP D0
0001FF86 <AmiBlitz3_wizzard.ab2@2854>     ADDI.w #$30,D0
0001FF88 <AmiBlitz3_wizzard.ab2@2855>     CMPA.l A6,A1
0001FF8C <AmiBlitz3_wizzard.ab2@2856>      BCC.w mbovererr
0001FF8E <AmiBlitz3_wizzard.ab2@2857>     MOVE.b D0,(A1)+
0001FF92 <AmiBlitz3_wizzard.ab2@2858>   BRA.w JL_0_3C6C
0001FF98 <AmiBlitz3_wizzard.ab2@2864>     CMP.w numarg,D0
0001FF9C <AmiBlitz3_wizzard.ab2@2865>      BCC.w JL_0_3C6C
0001FF9E <AmiBlitz3_wizzard.ab2@2866>     LSL.w #1,D0
0001FFA0 <AmiBlitz3_wizzard.ab2@2867>     MOVE.w D0,D4
0001FFA2 <AmiBlitz3_wizzard.ab2@2868>     LSL.w #1,D0
0001FFA4 <AmiBlitz3_wizzard.ab2@2869>     ADD.w D4,D0
0001FFAA <AmiBlitz3_wizzard.ab2@2870>     MOVEA.l ptr_macrobuffer_begin,A0
0001FFAC <AmiBlitz3_wizzard.ab2@2871>     ADDA.w D0,A0
0001FFB0 <AmiBlitz3_wizzard.ab2@2872>     MOVE.w $4(A0),D4
0001FFB4 <AmiBlitz3_wizzard.ab2@2873>      BEQ.w JL_0_3C6C
0001FFB6 <AmiBlitz3_wizzard.ab2@2874>     MOVEA.l (A0),A0
0001FFB8 <AmiBlitz3_wizzard.ab2@2875>     SUBQ.w #1,D4
0001FFBA <AmiBlitz3_wizzard.ab2@2878>       CMPA.l A6,A1
0001FFBE <AmiBlitz3_wizzard.ab2@2879>        BCC.w mbovererr
0001FFC2 <AmiBlitz3_wizzard.ab2@2880>       CMP.w #"@@",(a0)
0001FFC6 <AmiBlitz3_wizzard.ab2@2881>        BNE 'l10
0001FFCC <AmiBlitz3_wizzard.ab2@2882>       TST.w ininclude
0001FFD0 <AmiBlitz3_wizzard.ab2@2883>        BNE errorjoin
0001FFD6 <AmiBlitz3_wizzard.ab2@2886>       MOVE.l sourceline,a0
0001FFD8 <AmiBlitz3_wizzard.ab2@2887>       MOVE.l (a0),a0
0001FFDE <AmiBlitz3_wizzard.ab2@2888>       CMP.l #0,a0
0001FFE2 <AmiBlitz3_wizzard.ab2@2889>       BNE 'l11
0001FFE4 <AmiBlitz3_wizzard.ab2@2890>       MOVEQ #0,d0
0001FFEA <AmiBlitz3_wizzard.ab2@2891>       JSR error
0001FFF0 <AmiBlitz3_wizzard.ab2@2894>       MOVE.l a0,sourceline
0001FFF6 <AmiBlitz3_wizzard.ab2@2895>       ADDQ.l #1,linenumat
0001FFFA <AmiBlitz3_wizzard.ab2@2896>       LEA 9(a0),a0
0001FFFC <AmiBlitz3_wizzard.ab2@2897>       MOVE.l a0,-(a7)
00020000 <AmiBlitz3_wizzard.ab2@2900>       CMP.b #" ",(a0)+
00020004 <AmiBlitz3_wizzard.ab2@2901>        BEQ 'l110
0002000A <AmiBlitz3_wizzard.ab2@2902>       CMP.b #";",-1(a0)
0002000C <AmiBlitz3_wizzard.ab2@2903>       MOVE.l (a7)+,a0
00020010 <AmiBlitz3_wizzard.ab2@2904>        BEQ 'l111
00020012 <AmiBlitz3_wizzard.ab2@2905>       SUBQ.l #1,d4
00020014 <AmiBlitz3_wizzard.ab2@2908>       MOVE.b (A0)+,(A1)+
00020018 <AmiBlitz3_wizzard.ab2@2909>     DBF D4,JL_0_3C46
0002001C <AmiBlitz3_wizzard.ab2@2911>   BRA.w JL_0_3C6C
0002001E <AmiBlitz3_wizzard.ab2@2914>     CMPA.l A6,A1
00020022 <AmiBlitz3_wizzard.ab2@2915>      BCC.w mbovererr
00020024 <AmiBlitz3_wizzard.ab2@2916>     MOVE.b D0,(A1)+
00020028 <AmiBlitz3_wizzard.ab2@2917>      BPL.w JL_0_3C6C
0002002A <AmiBlitz3_wizzard.ab2@2918>     CMPA.l A6,A1
0002002E <AmiBlitz3_wizzard.ab2@2919>      BCC.w mbovererr
00020030 <AmiBlitz3_wizzard.ab2@2920>     MOVE.b (A2)+,(A1)+
00020032 <AmiBlitz3_wizzard.ab2@2921>     SUBQ.w #1,D1
00020036 <AmiBlitz3_wizzard.ab2@2924>   DBF D1,JL_0_3B48
00020038 <AmiBlitz3_wizzard.ab2@2934>   CMPA.l A6,A1
0002003C <AmiBlitz3_wizzard.ab2@2935>    BCC.w mbovererr
0002003E <AmiBlitz3_wizzard.ab2@2936>   MOVE.b (A5)+,(A1)+
00020042 <AmiBlitz3_wizzard.ab2@2937>    BNE.w JL_0_3C70
00020048 <AmiBlitz3_wizzard.ab2@2938>   MOVEA.l myline,A5
0002004E <AmiBlitz3_wizzard.ab2@2939>   MOVE.l myoline,D0
00020052 <AmiBlitz3_wizzard.ab2@2940>    BEQ.w JL_0_3C9C
00020054 <AmiBlitz3_wizzard.ab2@2941>   SUBQ.l #1,d0
00020056 <AmiBlitz3_wizzard.ab2@2942>   MOVEA.l D0,A1
0002005C <AmiBlitz3_wizzard.ab2@2943>   MOVE.l macrobuffer_size,D0
00020062 <AmiBlitz3_wizzard.ab2@2944>   MOVEA.l _execbase,A6
00020068 <AmiBlitz3_wizzard.ab2@2945>   MOVE.l mempool,a0
0002006C <AmiBlitz3_wizzard.ab2@2946>   JSR _FreePooled(A6)
00020070 <AmiBlitz3_wizzard.ab2@2949> BRA.w JL_0_3A46
00020072 <AmiBlitz3_wizzard.ab2@2952>   MOVEA.l (A7)+,A5
00020074 <AmiBlitz3_wizzard.ab2@2953> RTS
0002007A <AmiBlitz3_wizzard.ab2@2957>   MOVE.l myline,D0
0002007E <AmiBlitz3_wizzard.ab2@2958>   BEQ.w JL_0_3CC4
00020080 <AmiBlitz3_wizzard.ab2@2959>   SUBQ.l #1,d0
00020086 <AmiBlitz3_wizzard.ab2@2960>   CLR.l myline
00020088 <AmiBlitz3_wizzard.ab2@2961>   MOVEA.l D0,A1
0002008E <AmiBlitz3_wizzard.ab2@2962>   MOVE.l macrobuffer_size,D0
00020094 <AmiBlitz3_wizzard.ab2@2963>   MOVEA.l _execbase,A6
0002009A <AmiBlitz3_wizzard.ab2@2964>   MOVE.l mempool,a0
0002009E <AmiBlitz3_wizzard.ab2@2965> JMP _FreePooled(A6)
000200A0 <AmiBlitz3_wizzard.ab2@2968> RTS
000200A2 <AmiBlitz3_wizzard.ab2@2972>   MOVEQ.l #$00,D2
000200A6 <AmiBlitz3_wizzard.ab2@2975>   ADDQ.w #1,4(a0)
000200A8 <AmiBlitz3_wizzard.ab2@2976>    MOVE.b (A4)+,D0
000200AC <AmiBlitz3_wizzard.ab2@2978>    BEQ exit1
000200B0 <AmiBlitz3_wizzard.ab2@2979>    BPL.w JL_0_3CD8
000200B4 <AmiBlitz3_wizzard.ab2@2980>   ADDQ.w #1,4(a0)
000200B6 <AmiBlitz3_wizzard.ab2@2981>   ADDQ.w #1,A4
000200BA <AmiBlitz3_wizzard.ab2@2982> BRA.w JL_0_3CC8
000200C0 <AmiBlitz3_wizzard.ab2@2985>    TST.w instringon
000200C4 <AmiBlitz3_wizzard.ab2@2986>    BNE 'lnom
000200C8 <AmiBlitz3_wizzard.ab2@2987>    CMP.b #";",d0
000200CC <AmiBlitz3_wizzard.ab2@2988>    BEQ exit2
000200D0 <AmiBlitz3_wizzard.ab2@2989>    CMP.b #":",d0
000200D4 <AmiBlitz3_wizzard.ab2@2990>    BEQ exit2
000200D8 <AmiBlitz3_wizzard.ab2@2993>   CMP.b #$22,D0
000200DC <AmiBlitz3_wizzard.ab2@2994>    BNE.w JL_0_3CEA
000200E2 <AmiBlitz3_wizzard.ab2@2995>   NOT.w instringon
000200E6 <AmiBlitz3_wizzard.ab2@2996> BRA.w JL_0_3CC8
000200EC <AmiBlitz3_wizzard.ab2@3000>   TST.w instringon
000200F0 <AmiBlitz3_wizzard.ab2@3001>    BNE.w JL_0_3CC8
000200F4 <AmiBlitz3_wizzard.ab2@3002>    CMP.b #"@",d0
000200F8 <AmiBlitz3_wizzard.ab2@3003>    BNE 'l10
000200FC <AmiBlitz3_wizzard.ab2@3004>    CMP.b #"@",(a4)
00020100 <AmiBlitz3_wizzard.ab2@3005>    BNE 'l10
00020106 <AmiBlitz3_wizzard.ab2@3006>    TST.w ininclude
0002010A <AmiBlitz3_wizzard.ab2@3007>    BNE errorjoin
00020110 <AmiBlitz3_wizzard.ab2@3008>    MOVE.l sourceline3,a4
00020116 <AmiBlitz3_wizzard.ab2@3009>    CMP.l #0,a4
0002011A <AmiBlitz3_wizzard.ab2@3010>    BNE 'l11
00020120 <AmiBlitz3_wizzard.ab2@3011>    MOVE.l sourceline,a4
00020122 <AmiBlitz3_wizzard.ab2@3014>   MOVE.l (a4),a4
00020128 <AmiBlitz3_wizzard.ab2@3015>       CMP.l #0,a4
0002012C <AmiBlitz3_wizzard.ab2@3016>       BNE 'l12
0002012E <AmiBlitz3_wizzard.ab2@3017>       MOVEQ #0,d0
00020134 <AmiBlitz3_wizzard.ab2@3018>       JSR error
0002013A <AmiBlitz3_wizzard.ab2@3021>    MOVE.l a4,sourceline3
0002013E <AmiBlitz3_wizzard.ab2@3022>    LEA 9(a4),a4
00020140 <AmiBlitz3_wizzard.ab2@3023>    MOVEQ #",",d0
00020144 <AmiBlitz3_wizzard.ab2@3026>   CMP.b #$2C,D0
00020148 <AmiBlitz3_wizzard.ab2@3027>    BNE.w JL_0_3D06
0002014A <AmiBlitz3_wizzard.ab2@3028>   TST.w D2
0002014E <AmiBlitz3_wizzard.ab2@3029>    BEQ.w JL_0_3D30
00020152 <AmiBlitz3_wizzard.ab2@3030> BRA.w JL_0_3CC8
00020156 <AmiBlitz3_wizzard.ab2@3034>    CMP.b #$7B,D0                                           ;"{"
0002015A <AmiBlitz3_wizzard.ab2@3035>    BEQ.w 'l10
0002015E <AmiBlitz3_wizzard.ab2@3036>   CMP.b #$28,D0                                            ;"("
00020162 <AmiBlitz3_wizzard.ab2@3039>    BNE.w JL_0_3D14
00020164 <AmiBlitz3_wizzard.ab2@3040>   ADDQ.w #1,D2
00020168 <AmiBlitz3_wizzard.ab2@3041> BRA.w JL_0_3CC8
0002016C <AmiBlitz3_wizzard.ab2@3044>   CMP.b #$7D,D0                                           ;"}"
00020170 <AmiBlitz3_wizzard.ab2@3045>    BNE.w JL_0_3D22
00020172 <AmiBlitz3_wizzard.ab2@3046>  TST.w D2
00020176 <AmiBlitz3_wizzard.ab2@3047>    BEQ.w JL_0_3D30
0002017A <AmiBlitz3_wizzard.ab2@3051>    CMP.b #$7D,D0                                           ;"}"
0002017E <AmiBlitz3_wizzard.ab2@3052>    BEQ.w 'l10
00020182 <AmiBlitz3_wizzard.ab2@3053>   CMP.b #$29,D0                                            ;")"
00020186 <AmiBlitz3_wizzard.ab2@3056>    BNE.w JL_0_3CC8
00020188 <AmiBlitz3_wizzard.ab2@3057>   SUBQ.w #1,D2
0002018C <AmiBlitz3_wizzard.ab2@3058> BRA.w JL_0_3CC8
0002018E <AmiBlitz3_wizzard.ab2@3061> RTS
00020190 <AmiBlitz3_wizzard.ab2@3065>       SUBQ.l #1,a4
00020196 <AmiBlitz3_wizzard.ab2@3066>       CLR.l sourceline3
00020198 <AmiBlitz3_wizzard.ab2@3067> RTS
0002019A <AmiBlitz3_wizzard.ab2@3071>       MOVEQ #0,d0
0002019C <AmiBlitz3_wizzard.ab2@3072>       SUBQ.l #1,a4
000201A2 <AmiBlitz3_wizzard.ab2@3073>       CLR.l sourceline3
000201A4 <AmiBlitz3_wizzard.ab2@3074> RTS
000201A8 <AmiBlitz3_wizzard.ab2@3078>   CMP.b #$7B,D0                                            ;"{"
000201AC <AmiBlitz3_wizzard.ab2@3079>   BEQ.w JL_0_3D3E
000201B0 <AmiBlitz3_wizzard.ab2@3080>   CMP.b #$28,D0                                            ;"("
000201B2 <AmiBlitz3_wizzard.ab2@3083> RTS
000201B6 <AmiBlitz3_wizzard.ab2@3087>   CMP.b #$7D,D0                                            ;"}"
000201BA <AmiBlitz3_wizzard.ab2@3088>   BEQ.w JL_0_3D4C
000201BE <AmiBlitz3_wizzard.ab2@3089>   CMP.b #$29,D0                                            ;")"
000201C0 <AmiBlitz3_wizzard.ab2@3092> RTS
000201C2 <AmiBlitz3_wizzard.ab2@3096> stopit:     Ds.w 1
000201C4 <AmiBlitz3_wizzard.ab2@3097> clrreq:     Ds.w 1
000201C8 <AmiBlitz3_wizzard.ab2@3118>   MOVE.w clrreq(PC),D0
000201CC <AmiBlitz3_wizzard.ab2@3119>    BEQ.w close_compilewin__skip
000201FE <AmiBlitz3_wizzard.ab2@3121> 
00020204 <AmiBlitz3_wizzard.ab2@3123>   LEA clrreq,a0
00020206 <AmiBlitz3_wizzard.ab2@3124>   NOT.w (a0)                                               ;reass
0002020C <AmiBlitz3_wizzard.ab2@3125>   MOVEA.l ptr_ThisTask,A0
00020210 <AmiBlitz3_wizzard.ab2@3126>   CLR.l $1E(A0)
00020214 <AmiBlitz3_wizzard.ab2@3127>   CLR.l $2A(A0)
00020216 <AmiBlitz3_wizzard.ab2@3130> RTS
00020218 <AmiBlitz3_wizzard.ab2@3133> intsused:  Ds.w 1
00020220 <AmiBlitz3_wizzard.ab2@3137>   MOVE.w #-1,blitzoff
00020226 <AmiBlitz3_wizzard.ab2@3138>   CLR.w intsused
0002022C <AmiBlitz3_wizzard.ab2@3139>   CLR.w anyerrs
00020232 <AmiBlitz3_wizzard.ab2@3140>   CLR.w blitzmode
00020238 <AmiBlitz3_wizzard.ab2@3141>   CLR.w dontwrite                                              ;nomemleft
0002023E <AmiBlitz3_wizzard.ab2@3142>   CLR.w constmode
00020244 <AmiBlitz3_wizzard.ab2@3143>   CLR.w cmake
0002024A <AmiBlitz3_wizzard.ab2@3144>   CLR.w cfetchmode
00020250 <AmiBlitz3_wizzard.ab2@3145>   CLR.l intdata1
00020256 <AmiBlitz3_wizzard.ab2@3146>   CLR.w fuckpos
0002025C <AmiBlitz3_wizzard.ab2@3147>   CLR.w procnum
00020262 <AmiBlitz3_wizzard.ab2@3148>   CLR.w procnum2
00020268 <AmiBlitz3_wizzard.ab2@3149>   CLR.w dfetch
0002026E <AmiBlitz3_wizzard.ab2@3150>   CLR.l titleat
00020274 <AmiBlitz3_wizzard.ab2@3151>   CLR.b usedpath
0002027A <AmiBlitz3_wizzard.ab2@3152>   CLR.b path2
00020280 <AmiBlitz3_wizzard.ab2@3153>   CLR.w inerr
00020286 <AmiBlitz3_wizzard.ab2@3154>   CLR.w intlevel
0002028C <AmiBlitz3_wizzard.ab2@3155>   CLR.l cont_pc
00020292 <AmiBlitz3_wizzard.ab2@3156>   CLR.l cont_pc2
00020298 <AmiBlitz3_wizzard.ab2@3157>   CLR.l lastcontlink
000202A2 <AmiBlitz3_wizzard.ab2@3158>   MOVE.l destbufferstart,destpointer
000202AC <AmiBlitz3_wizzard.ab2@3159>   MOVE.l destbufferstart,bigpc
000202B6 <AmiBlitz3_wizzard.ab2@3160>   MOVE.l destbufferend,libend
000202C0 <AmiBlitz3_wizzard.ab2@3161>   MOVE.l data1start,data1
000202CA <AmiBlitz3_wizzard.ab2@3162>   MOVE.l data2at,data2
000202D2 <AmiBlitz3_wizzard.ab2@3163>   MOVE.w #-1,skipcode                                      ;#-1,comflag org source
000202DA <AmiBlitz3_wizzard.ab2@3164>   MOVE.w #-1,linemode                                      ;#-1,linemode org soruce
000202E0 <AmiBlitz3_wizzard.ab2@3165>   CLR.w oldvcodelen
000202E6 <AmiBlitz3_wizzard.ab2@3166>   CLR.b lastgloballabel                                    ;lastbiglab org source
000202E8 <AmiBlitz3_wizzard.ab2@3167> RTS
000202EA <AmiBlitz3_wizzard.ab2@3170> debugmode:  Ds.w 1                                         ;debugga org source ;debugger enabled?
000202F0 <AmiBlitz3_wizzard.ab2@3174>   LEA  clrreq,a1
000202F4 <AmiBlitz3_wizzard.ab2@3175>   MOVE.w #2000,(a1)
0002031E <AmiBlitz3_wizzard.ab2@3176>   !basic
00020334 <AmiBlitz3_wizzard.ab2@3177> 
00020384 <AmiBlitz3_wizzard.ab2@3178>   comstatusstr   = !TRANS{"Initializing Compiler..."} ;default settings
0002038C <AmiBlitz3_wizzard.ab2@3179>   calcpro.l      = 0
00020394 <AmiBlitz3_wizzard.ab2@3180>   calcpro_old.l  = 0
000203A0 <AmiBlitz3_wizzard.ab2@3181>   typ_old.l      = -1
000203AC <AmiBlitz3_wizzard.ab2@3182>   pass_old.l     = -1
000203B2 <AmiBlitz3_wizzard.ab2@3183>   update_comstatus_gui.b = True ; for the first
000203EC <AmiBlitz3_wizzard.ab2@3185>   GetD0 &comstatusstr : !ComData_SetL{comPtr_CompileStatusString,d0}  ; set pointer of status string for gui tomsmart1 2012 05 12
00020426 <AmiBlitz3_wizzard.ab2@3186>   GetD0 &calcpro      : !ComData_SetL{comPtr_CompileCalcProLong ,d0}  ; set pointer of calcpro long for gui tomsmart1 2012 05 12
00020444 <AmiBlitz3_wizzard.ab2@3187>   !asm
00020476 <AmiBlitz3_wizzard.ab2@3188> 
0002047C <AmiBlitz3_wizzard.ab2@3190>   CLR.w stopit
0002047E <AmiBlitz3_wizzard.ab2@3191> RTS
00020484 <AmiBlitz3_wizzard.ab2@3195>   CLR.w storedebugmode
0002048A <AmiBlitz3_wizzard.ab2@3196>   CLR.b iserror
0002048E <AmiBlitz3_wizzard.ab2@3197>   BSR.w compilerequester
00020498 <AmiBlitz3_wizzard.ab2@3199>   MOVE.l #0,globallinecount
0002049E <AmiBlitz3_wizzard.ab2@3200>   JSR check_of_same_source
000204A2 <AmiBlitz3_wizzard.ab2@3201>   BSR.w call_setpointerbusy
000204A6 <AmiBlitz3_wizzard.ab2@3202>   BSR.w setcvars
000204AE <AmiBlitz3_wizzard.ab2@3203>   MOVE.w #$8000,globalvarpointer
000204B8 <AmiBlitz3_wizzard.ab2@3204>   MOVE.l #newtype_quick,defaulttype
000204BE <AmiBlitz3_wizzard.ab2@3205>   MOVE.l A7,passstack
000204C8 <AmiBlitz3_wizzard.ab2@3206>   MOVE.l #firstitem_,sourceline
000204D2 <AmiBlitz3_wizzard.ab2@3207>   MOVE.w numlines_org,linesleft
000204DC <AmiBlitz3_wizzard.ab2@3208>   MOVE.l numlines,numlines2
000204E2 <AmiBlitz3_wizzard.ab2@3209>   ADDQ.w #1,linesleft
000204E8 <AmiBlitz3_wizzard.ab2@3210>   ADDQ.l #1,numlines2
000204F2 <AmiBlitz3_wizzard.ab2@3211>   MOVE.l #-1,linenumat
000204F6 <AmiBlitz3_wizzard.ab2@3212>   BSR.w resetlibs
000204FA <AmiBlitz3_wizzard.ab2@3213>   BSR.w Aclearallvars
00020500 <AmiBlitz3_wizzard.ab2@3214>   LEA progress_per_line+2,A0
00020502 <AmiBlitz3_wizzard.ab2@3215>   MOVEQ.l #$03,D0
00020504 <AmiBlitz3_wizzard.ab2@3218>     CLR.w (A0)+
00020508 <AmiBlitz3_wizzard.ab2@3219>   DBF D0,JL_0_40EC
0002050E <AmiBlitz3_wizzard.ab2@3222>   LEA _include,a0
00020512 <AmiBlitz3_wizzard.ab2@3223>   MOVEM.l a0-a6/d0-d7,-(a7)
00020518 <AmiBlitz3_wizzard.ab2@3224>   LEA ptr_parameterstore,a1
0002051A <AmiBlitz3_wizzard.ab2@3227>     MOVE.b (a0)+,(a1)+
0002051E <AmiBlitz3_wizzard.ab2@3228>   BNE 'l1b
00020520 <AmiBlitz3_wizzard.ab2@3230>   MOVEQ #9,d2
00020526 <AmiBlitz3_wizzard.ab2@3231>   JSR findlabel2
0002052A <AmiBlitz3_wizzard.ab2@3232>   BNE 'd
00020532 <AmiBlitz3_wizzard.ab2@3233>   MOVE.l #0,8(a2)
00020536 <AmiBlitz3_wizzard.ab2@3234>   MOVEM.l (a7)+,a0-a6/d0-d7
0002053A <AmiBlitz3_wizzard.ab2@3235> BRA 'd2
00020540 <AmiBlitz3_wizzard.ab2@3238>   JSR addlabelhash
00020548 <AmiBlitz3_wizzard.ab2@3239>   MOVE.l #$1,$4(A2)
00020550 <AmiBlitz3_wizzard.ab2@3240>   MOVE.l #0,8(a2)
00020554 <AmiBlitz3_wizzard.ab2@3241>   MOVEM.l (a7)+,a0-a6/d0-d7
0002055A <AmiBlitz3_wizzard.ab2@3244>   LEA _debug,a0
0002055E <AmiBlitz3_wizzard.ab2@3245>   MOVEM.l a0-a6/d0-d7,-(a7)
00020564 <AmiBlitz3_wizzard.ab2@3246>   LEA ptr_parameterstore,a1
00020566 <AmiBlitz3_wizzard.ab2@3249>     MOVE.b (a0)+,(a1)+
0002056A <AmiBlitz3_wizzard.ab2@3250>   BNE 'l9b
0002056C <AmiBlitz3_wizzard.ab2@3252>   MOVEQ #7,d2
00020572 <AmiBlitz3_wizzard.ab2@3253>   JSR findlabel2
00020576 <AmiBlitz3_wizzard.ab2@3254>   BNE 'd9
0002057A <AmiBlitz3_wizzard.ab2@3255>   MOVE.b debugmode(PC),D0
0002057C <AmiBlitz3_wizzard.ab2@3256>   EXT.w d0
0002057E <AmiBlitz3_wizzard.ab2@3257>   EXT.l d0
00020582 <AmiBlitz3_wizzard.ab2@3258>   MOVE.l d0,8(a2)
00020586 <AmiBlitz3_wizzard.ab2@3259>   MOVEM.l (a7)+,a0-a6/d0-d7
0002058A <AmiBlitz3_wizzard.ab2@3260> BRA 'd9b
00020590 <AmiBlitz3_wizzard.ab2@3263>   JSR addlabelhash
00020598 <AmiBlitz3_wizzard.ab2@3264>   MOVE.l #$1,$4(A2)
0002059C <AmiBlitz3_wizzard.ab2@3265>   MOVE.b debugmode(PC),D0
0002059E <AmiBlitz3_wizzard.ab2@3266>   EXT.w d0
000205A0 <AmiBlitz3_wizzard.ab2@3267>   EXT.l d0
000205A4 <AmiBlitz3_wizzard.ab2@3268>   MOVE.l d0,8(a2)
000205A8 <AmiBlitz3_wizzard.ab2@3269>   MOVEM.l (a7)+,a0-a6/d0-d7
000205AE <AmiBlitz3_wizzard.ab2@3272>   MOVE.l #firstitem_,a0
000205B0 <AmiBlitz3_wizzard.ab2@3273>   MOVE.l (a0),a0
000205B4 <AmiBlitz3_wizzard.ab2@3274>   LEA 9(a0),a0
000205BC <AmiBlitz3_wizzard.ab2@3275>   MOVE.w #0,exdebug
000205C2 <AmiBlitz3_wizzard.ab2@3276>   TST.b debugmode
000205C6 <AmiBlitz3_wizzard.ab2@3277>    BEQ 'l10
000205C8 <AmiBlitz3_wizzard.ab2@3280>   MOVE.b (a0)+,d0
000205CC <AmiBlitz3_wizzard.ab2@3281>    BEQ 'l10
000205D0 <AmiBlitz3_wizzard.ab2@3282>   CMP.b #$20,d0
000205D4 <AmiBlitz3_wizzard.ab2@3283>    BEQ 'l2
000205D6 <AmiBlitz3_wizzard.ab2@3284>   SUBQ.l #1,a0
000205DC <AmiBlitz3_wizzard.ab2@3285>   CMP.l #"DEBU",(a0)
000205E0 <AmiBlitz3_wizzard.ab2@3286>    BNE 'l10
000205E6 <AmiBlitz3_wizzard.ab2@3287>   CMP.b #"G",4(a0)
000205EA <AmiBlitz3_wizzard.ab2@3288>    BNE 'l10
000205F2 <AmiBlitz3_wizzard.ab2@3289>   MOVE.w #$0,debugversion
000205FA <AmiBlitz3_wizzard.ab2@3290>   MOVE.b #1,exdebug
00020600 <AmiBlitz3_wizzard.ab2@3293>   LEA nops4,A0
00020606 <AmiBlitz3_wizzard.ab2@3294>   LEA dataget,A1
0002060C <AmiBlitz3_wizzard.ab2@3295>   JSR pokecode2                                            ;write intro nops
00020612 <AmiBlitz3_wizzard.ab2@3296>   MOVE.l #$01010101,d1
00020618 <AmiBlitz3_wizzard.ab2@3297>   JSR writedatalong                                        ;for the 4 tempregs
0002061E <AmiBlitz3_wizzard.ab2@3298>   JSR writedatalong
00020624 <AmiBlitz3_wizzard.ab2@3299>   JSR writedatalong
0002062A <AmiBlitz3_wizzard.ab2@3300>   JSR writedatalong
00020630 <AmiBlitz3_wizzard.ab2@3301>   TST.b saved0
00020634 <AmiBlitz3_wizzard.ab2@3302>    BEQ 'l1
0002063A <AmiBlitz3_wizzard.ab2@3303>   MOVE.l #$4e714e71,d1
00020640 <AmiBlitz3_wizzard.ab2@3304>   JSR writelong                                            ;add 2 nops
00020646 <AmiBlitz3_wizzard.ab2@3305>   MOVE.l #$4e714e71,d1
0002064C <AmiBlitz3_wizzard.ab2@3306>   JSR writelong                                            ;add 2 nops
00020652 <AmiBlitz3_wizzard.ab2@3307>   MOVE.l #$4e714e71,d1
00020658 <AmiBlitz3_wizzard.ab2@3308>   JSR writelong                                            ;add 2 nops
0002065E <AmiBlitz3_wizzard.ab2@3309>    MOVE.l #$4e714e71,d1
00020664 <AmiBlitz3_wizzard.ab2@3310>   JSR writelong                                            ;add 2 nops
00020668 <AmiBlitz3_wizzard.ab2@3313>   MOVE.b debugmode(PC),D1
0002066C <AmiBlitz3_wizzard.ab2@3314>    BEQ.b JL_0_4132
00020676 <AmiBlitz3_wizzard.ab2@3315>   MOVE.b debugmode,storedebugmode
0002067A <AmiBlitz3_wizzard.ab2@3316>   MOVE.w #$FFDC,D1
0002067E <AmiBlitz3_wizzard.ab2@3317>    BSR.w uselib
00020684 <AmiBlitz3_wizzard.ab2@3318>   TST.w debugversion                                       ;make a version for debugger
00020688 <AmiBlitz3_wizzard.ab2@3319>    BNE.b JL_0_412A
0002068C <AmiBlitz3_wizzard.ab2@3323>   MOVE.w #$FA3C,D1
00020690 <AmiBlitz3_wizzard.ab2@3324>    BSR.w uselib
00020694 <AmiBlitz3_wizzard.ab2@3325>   MOVE.w #$0001,D1
00020698 <AmiBlitz3_wizzard.ab2@3326>    BSR.w uselib
0002069C <AmiBlitz3_wizzard.ab2@3327> BRA.b JL_0_4132
000206A0 <AmiBlitz3_wizzard.ab2@3330>   MOVE.w #$FA32,D1
000206A4 <AmiBlitz3_wizzard.ab2@3331>   BSR.w uselib
000206A8 <AmiBlitz3_wizzard.ab2@3334>   BSR.w nextline
000206AE <AmiBlitz3_wizzard.ab2@3335>   CLR.l linenum
000206B4 <AmiBlitz3_wizzard.ab2@3336>   CLR.l stacktrack
000206BA <AmiBlitz3_wizzard.ab2@3339>   ADDQ.l #1,linenum
000206C4 <AmiBlitz3_wizzard.ab2@3340>   MOVE.l destpointer,destpointer2
000206CA <AmiBlitz3_wizzard.ab2@3341>   MOVE.l a5,sourceline2
000206CE <AmiBlitz3_wizzard.ab2@3342>   BSR.w compile_line                                        ;compile pass
000206D2 <AmiBlitz3_wizzard.ab2@3345>   BSR.w nextline
000206D6 <AmiBlitz3_wizzard.ab2@3346>    BNE.w JL_0_4136
000206DA <AmiBlitz3_wizzard.ab2@3347>   BSR.w JUMP_do_runerrson
000206DE <AmiBlitz3_wizzard.ab2@3348>   BSR.w pointchk
000206E4 <AmiBlitz3_wizzard.ab2@3349>   TST.b objectcount
000206E8 <AmiBlitz3_wizzard.ab2@3350>    BNE macenderr
000206EE <AmiBlitz3_wizzard.ab2@3351>   CLR.l linenumat
000206F2 <AmiBlitz3_wizzard.ab2@3352>   BSR.w errchx2
000206FC <AmiBlitz3_wizzard.ab2@3353>   CMP.l #-1,bssend
00020700 <AmiBlitz3_wizzard.ab2@3354>    BNE 'l30
0002070A <AmiBlitz3_wizzard.ab2@3355>   MOVE.l destpointer,bssend                                ;compile end
00020710 <AmiBlitz3_wizzard.ab2@3358>   MOVE.l destpointer,d0
0002071A <AmiBlitz3_wizzard.ab2@3359>   CMP.l #-1,bssstart
0002071E <AmiBlitz3_wizzard.ab2@3360>   BNE 'lnf6
00020728 <AmiBlitz3_wizzard.ab2@3361>   CMP.l #-1,chipstart
0002072C <AmiBlitz3_wizzard.ab2@3362>   BNE 'lnf6
00020730 <AmiBlitz3_wizzard.ab2@3363> BRA 'leven4
00020736 <AmiBlitz3_wizzard.ab2@3366>   MOVE.l destpointer,d1
00020738 <AmiBlitz3_wizzard.ab2@3367>   ADDQ.l #3,d1
0002073E <AmiBlitz3_wizzard.ab2@3368>   AND.l #$fffffffc,d1                                      ;bug ?
00020744 <AmiBlitz3_wizzard.ab2@3369>   MOVE.l d1,destpointer
0002074E <AmiBlitz3_wizzard.ab2@3372>   MOVE.l destpointer,codeend
00020758 <AmiBlitz3_wizzard.ab2@3373>   CMP.l #-1,chipend
0002075C <AmiBlitz3_wizzard.ab2@3374>   BNE 'l31
00020766 <AmiBlitz3_wizzard.ab2@3375>   MOVE.l destpointer,chipend
0002076C <AmiBlitz3_wizzard.ab2@3378>   MOVE.l destpointer,d1
0002076E <AmiBlitz3_wizzard.ab2@3379>   ADDQ.l #1,d1
00020774 <AmiBlitz3_wizzard.ab2@3380>   AND.l #$fffffffe,d1                                     ;new evenexit
0002077A <AmiBlitz3_wizzard.ab2@3381>   MOVE.l d1,destpointer
0002077E <AmiBlitz3_wizzard.ab2@3382>   MOVE.b debugmode(PC),D1
00020782 <AmiBlitz3_wizzard.ab2@3383>    BEQ.b JL_0_4180
00020786 <AmiBlitz3_wizzard.ab2@3384>    BSR.w debugstuff
0002078A <AmiBlitz3_wizzard.ab2@3385>   MOVE.w #$C300,D1
00020790 <AmiBlitz3_wizzard.ab2@3386>    JSR Atokejsr
00020794 <AmiBlitz3_wizzard.ab2@3387>    BSR.w debugstuff
00020798 <AmiBlitz3_wizzard.ab2@3388>   MOVE.l eopcode(PC),D1
0002079E <AmiBlitz3_wizzard.ab2@3389>    JSR writelong
000207A2 <AmiBlitz3_wizzard.ab2@3390>   MOVE.l lastcontlink(PC),D1
000207A6 <AmiBlitz3_wizzard.ab2@3391>    BEQ.b JL_0_4180
000207A8 <AmiBlitz3_wizzard.ab2@3392>   MOVEA.l D1,A0
000207AC <AmiBlitz3_wizzard.ab2@3393>   CLR.w $6(A0)
000207B6 <AmiBlitz3_wizzard.ab2@3399>   MOVE.l destpointer,endop                                ;where end goes...
000207BC <AmiBlitz3_wizzard.ab2@3401>   TST.w blitzmode
000207C0 <AmiBlitz3_wizzard.ab2@3402>   BEQ.w JL_0_4198
000207C4 <AmiBlitz3_wizzard.ab2@3403>   BSR.w do_AMIGA                                          ;back to amiga if in blitz!
000207CA <AmiBlitz3_wizzard.ab2@3406>   TST.w intsused
000207CE <AmiBlitz3_wizzard.ab2@3407>   BEQ.b JL_0_41AA
000207D2 <AmiBlitz3_wizzard.ab2@3408>   MOVE.w #$C105,D1                                        ;interupts off!
000207D8 <AmiBlitz3_wizzard.ab2@3409>   JSR tokejsr2
000207DC <AmiBlitz3_wizzard.ab2@3412>   BSR.w calcstatic
000207E2 <AmiBlitz3_wizzard.ab2@3413>   MOVE.w D4,numstatic
000207E8 <AmiBlitz3_wizzard.ab2@3414>   MOVE.l D3,staticdata
000207EC <AmiBlitz3_wizzard.ab2@3415>    BSR.w calcmaxs
000207F2 <AmiBlitz3_wizzard.ab2@3417>   TST.l tokeslist
000207F6 <AmiBlitz3_wizzard.ab2@3418>    BEQ.b JL_0_41F8
000207FC <AmiBlitz3_wizzard.ab2@3419>   MOVE.w gotocode,D1                                       ;jmp!
00020802 <AmiBlitz3_wizzard.ab2@3420>    JSR writeword
0002080C <AmiBlitz3_wizzard.ab2@3421>   MOVE.l destpointer,endjmpat
00020810 <AmiBlitz3_wizzard.ab2@3422>    BSR.w addoff
00020816 <AmiBlitz3_wizzard.ab2@3423>    JSR writelong                                           
0002081A <AmiBlitz3_wizzard.ab2@3425>    BSR.w JL_0_6C76                                         ;has to be done before finits!
00020820 <AmiBlitz3_wizzard.ab2@3429>   TST.w dontwrite
00020824 <AmiBlitz3_wizzard.ab2@3430>    BNE.b JL_0_41F8
00020828 <AmiBlitz3_wizzard.ab2@3431>   MOVEA.l endjmpat(PC),A4
0002082E <AmiBlitz3_wizzard.ab2@3432>   MOVE.l destpointer,(A4)
00020834 <AmiBlitz3_wizzard.ab2@3435>   TST.b returncode
00020838 <AmiBlitz3_wizzard.ab2@3436>   BEQ 'l2
0002083C <AmiBlitz3_wizzard.ab2@3437>   MOVE.w #$2e80,d1
00020842 <AmiBlitz3_wizzard.ab2@3438>   JSR writeword
00020848 <AmiBlitz3_wizzard.ab2@3441>   JSR JL_0_B98A
0002084E <AmiBlitz3_wizzard.ab2@3442>   TST.b returncode
00020852 <AmiBlitz3_wizzard.ab2@3443>   BEQ 'l3
00020856 <AmiBlitz3_wizzard.ab2@3444>   MOVE.w #$4e75,d1
0002085C <AmiBlitz3_wizzard.ab2@3445>   JSR writeword
00020860 <AmiBlitz3_wizzard.ab2@3446> BRA 'l1
00020866 <AmiBlitz3_wizzard.ab2@3449>   MOVE.l #$70004E75,D1
0002086C <AmiBlitz3_wizzard.ab2@3450>   JSR writelong                                            ;write moveq #0,d0:rts
00020872 <AmiBlitz3_wizzard.ab2@3453>   JSR JL_0_B73E
00020876 <AmiBlitz3_wizzard.ab2@3454>   BSR.w asmfixer
0002087A <AmiBlitz3_wizzard.ab2@3455>   BSR.w close_compilewin
0002087E <AmiBlitz3_wizzard.ab2@3456> BRA.w call_setpointernormal
00020884 <AmiBlitz3_wizzard.ab2@3460> JMP do_runerrson
00020886 <AmiBlitz3_wizzard.ab2@3464> eopcode:    Dc.b $70,$03                                   ;MOVEQ #$03,D0
00020888 <AmiBlitz3_wizzard.ab2@3465>             Dc.b $4E,$40                                   ;TRAP  #00
0002088C <AmiBlitz3_wizzard.ab2@3467> endjmpat:   Ds.l 1
00020892 <AmiBlitz3_wizzard.ab2@3471>   MOVEA.l newtype_string,A2
00020898 <AmiBlitz3_wizzard.ab2@3472>   MOVE.l #MaxByte,D0                                       ;move.l #$ff,d0 org source
0002089C <AmiBlitz3_wizzard.ab2@3475>     CMPA.w #$0,A2
000208A0 <AmiBlitz3_wizzard.ab2@3476>      BEQ.w pointchk_done
000208A4 <AmiBlitz3_wizzard.ab2@3477>     CMP.l $4(A2),D0
000208A8 <AmiBlitz3_wizzard.ab2@3478>      BNE.w pointchk_next
000208B0 <AmiBlitz3_wizzard.ab2@3479>     MOVE.w $8(A2),linenumat+2                              ;type not found  ;move 8(a2),linenumat org source
000208B4 <AmiBlitz3_wizzard.ab2@3480> BRA.w notypeerr
000208B6 <AmiBlitz3_wizzard.ab2@3483>     MOVEA.l (A2),A2
000208BA <AmiBlitz3_wizzard.ab2@3484> BRA.w pointchk_loop
000208BC <AmiBlitz3_wizzard.ab2@3487> RTS
000208C2 <AmiBlitz3_wizzard.ab2@3491>   LEA labelbase,A2
000208C4 <AmiBlitz3_wizzard.ab2@3495>   MOVE.l (A2),D0                                           ;testlabels
000208C8 <AmiBlitz3_wizzard.ab2@3496>    BEQ.w errchx2_done
000208CA <AmiBlitz3_wizzard.ab2@3497>   MOVEA.l D0,A2
000208CE <AmiBlitz3_wizzard.ab2@3498>   MOVE.l $4(A2),D0
000208D2 <AmiBlitz3_wizzard.ab2@3499>   BTST #$0,D0
000208D6 <AmiBlitz3_wizzard.ab2@3500>    BNE.w errchx2_loop
000208DA <AmiBlitz3_wizzard.ab2@3501>   MOVE.l $8(A2),D0
000208DE <AmiBlitz3_wizzard.ab2@3502>    BNE.w errchx2_loop
000208E6 <AmiBlitz3_wizzard.ab2@3503>   MOVE.w $10(A2),linenumat+2
000208E8 <AmiBlitz3_wizzard.ab2@3504>   MOVEQ #0,d0
000208EC <AmiBlitz3_wizzard.ab2@3505>   MOVE.b $12(a2),d0
000208F4 <AmiBlitz3_wizzard.ab2@3506>   MOVE.w 0(a2,d0),linenumat
000208FA <AmiBlitz3_wizzard.ab2@3507> JMP nolaberr                                               ;label not found
00020900 <AmiBlitz3_wizzard.ab2@3510>   MOVE.l concomsp,D0
00020906 <AmiBlitz3_wizzard.ab2@3511>   CMP.l #concomstack,D0
0002090A <AmiBlitz3_wizzard.ab2@3512>    BNE.w chxerr4
00020910 <AmiBlitz3_wizzard.ab2@3513>   MOVE.w connest,D1
00020914 <AmiBlitz3_wizzard.ab2@3514>    BNE.w chxerr4
00020916 <AmiBlitz3_wizzard.ab2@3517>   MOVE.l D1,-(A7)
0002091C <AmiBlitz3_wizzard.ab2@3518>   MOVE.l firstsel,D1
00020920 <AmiBlitz3_wizzard.ab2@3519>    BNE.w errchx_err1
00020926 <AmiBlitz3_wizzard.ab2@3520>   MOVE.l firstrep,D1
0002092A <AmiBlitz3_wizzard.ab2@3521>    BNE.w errchx_err2
00020930 <AmiBlitz3_wizzard.ab2@3522>   MOVE.w intstring,D1
00020934 <AmiBlitz3_wizzard.ab2@3523>    BNE.w errchx_err3
00020938 <AmiBlitz3_wizzard.ab2@3524>   MOVE.l 4(a7),d1
0002093E <AmiBlitz3_wizzard.ab2@3525>   MOVE.w proceduremode,D1
00020942 <AmiBlitz3_wizzard.ab2@3526>    BNE.w errchx_err6
00020948 <AmiBlitz3_wizzard.ab2@3527>   MOVE.l firstiff,d1
0002094C <AmiBlitz3_wizzard.ab2@3528>    BNE errchx_err5
00020952 <AmiBlitz3_wizzard.ab2@3529>   MOVE.l firstfor,D1
00020956 <AmiBlitz3_wizzard.ab2@3530>    BNE.w errchx_err7
00020958 <AmiBlitz3_wizzard.ab2@3531>   MOVE.l (A7)+,D1
0002095A <AmiBlitz3_wizzard.ab2@3532> RTS
00020964 <AmiBlitz3_wizzard.ab2@3536>   MOVE.l sellineat,linenumat
0002096A <AmiBlitz3_wizzard.ab2@3537> JMP selerrz
00020974 <AmiBlitz3_wizzard.ab2@3540>   MOVE.l replineat,linenumat
0002097A <AmiBlitz3_wizzard.ab2@3541> JMP unterr3
00020984 <AmiBlitz3_wizzard.ab2@3544>   MOVE.l intlineat,linenumat
0002098A <AmiBlitz3_wizzard.ab2@3545> JMP interr2
00020994 <AmiBlitz3_wizzard.ab2@3548>   MOVE.l iflineat,linenumat
0002099A <AmiBlitz3_wizzard.ab2@3549> JMP noenderr
000209A4 <AmiBlitz3_wizzard.ab2@3552>   MOVE.l prolineat,linenumat
000209AA <AmiBlitz3_wizzard.ab2@3553> JMP nopenderr
000209B4 <AmiBlitz3_wizzard.ab2@3556>   MOVE.l forlineat,linenumat
000209BA <AmiBlitz3_wizzard.ab2@3557> JMP nonexterr
000209C4 <AmiBlitz3_wizzard.ab2@3560>   MOVE.l ciflineat,linenumat
000209CA <AmiBlitz3_wizzard.ab2@3561> JMP nocenderr
000209D4 <AmiBlitz3_wizzard.ab2@3565>   MOVE.l data1,maxsat
000209D6 <AmiBlitz3_wizzard.ab2@3566>   MOVEQ.l #$00,D4
000209DC <AmiBlitz3_wizzard.ab2@3567>   MOVEA.l libpointer,A2
000209E0 <AmiBlitz3_wizzard.ab2@3570>     CMPA.w #$0,A2
000209E4 <AmiBlitz3_wizzard.ab2@3571>      BEQ.w calcmaxs_done
000209E8 <AmiBlitz3_wizzard.ab2@3572>     TST.w $C(A2)
000209EC <AmiBlitz3_wizzard.ab2@3573>      BPL.w calcmaxs_next
000209F0 <AmiBlitz3_wizzard.ab2@3574>     MOVE.l $12(A2),D0
000209F4 <AmiBlitz3_wizzard.ab2@3575>     TST.w -$2(A2,D0.L)
000209F8 <AmiBlitz3_wizzard.ab2@3576>      BEQ.w calcmaxs_next
000209FA <AmiBlitz3_wizzard.ab2@3577>     ADDQ.w #1,D4
000209FE <AmiBlitz3_wizzard.ab2@3578>     MOVE.w -$6(A2,D0.L),D1
00020A02 <AmiBlitz3_wizzard.ab2@3579>     BSR.w pokedata1
00020A04 <AmiBlitz3_wizzard.ab2@3580>     MOVEQ.l #$01,D1
00020A08 <AmiBlitz3_wizzard.ab2@3581>     MOVE.w -$2(A2,D0.L),D2
00020A0A <AmiBlitz3_wizzard.ab2@3582>     LSL.w D2,D1
00020A0E <AmiBlitz3_wizzard.ab2@3583>     MULU -$4(A2,D0.L),D1                                   ;write objectspacesize
00020A12 <AmiBlitz3_wizzard.ab2@3584>     BSR.w writedatalong
00020A14 <AmiBlitz3_wizzard.ab2@3587>     MOVEA.l (A2),A2
00020A18 <AmiBlitz3_wizzard.ab2@3588> BRA.w calcmaxs_loop
00020A1E <AmiBlitz3_wizzard.ab2@3591>   MOVE.w D4,maxsused
00020A22 <AmiBlitz3_wizzard.ab2@3592>    BEQ.w calcmaxs_done2
00020A26 <AmiBlitz3_wizzard.ab2@3593>   MOVE.w #$FFFA,D1                                         ;;use memlib
00020A2A <AmiBlitz3_wizzard.ab2@3594> BRA.w uselib
00020A2C <AmiBlitz3_wizzard.ab2@3597> RTS
00020A32 <AmiBlitz3_wizzard.ab2@3601>    MOVE.l a7,stackaddr
00020A36 <AmiBlitz3_wizzard.ab2@3602>    BSR.w compile_term
00020A3A <AmiBlitz3_wizzard.ab2@3603>    BSR.w reget
00020A3E <AmiBlitz3_wizzard.ab2@3604>    BNE.w illeolerr
00020A44 <AmiBlitz3_wizzard.ab2@3605>    TST.w dontwrite
00020A48 <AmiBlitz3_wizzard.ab2@3606>    BNE 'l1
00020A4E <AmiBlitz3_wizzard.ab2@3607>    TST.l stacktrack
00020A52 <AmiBlitz3_wizzard.ab2@3608>    BNE errormsg_stack
00020A56 <AmiBlitz3_wizzard.ab2@3611>    CMP.w #-$7FDE,D0
00020A5A <AmiBlitz3_wizzard.ab2@3612>    BNE.w compile_line_notelse
00020A60 <AmiBlitz3_wizzard.ab2@3613>    JSR do_else2
00020A64 <AmiBlitz3_wizzard.ab2@3614> BRA.w compile_line
00020A66 <AmiBlitz3_wizzard.ab2@3617>   TST.w D0
00020A6A <AmiBlitz3_wizzard.ab2@3618>   BNE.w compile_line
00020A70 <AmiBlitz3_wizzard.ab2@3623>   MOVE.l firstiff,D0
00020A74 <AmiBlitz3_wizzard.ab2@3624>    BEQ.w compile_line_done
00020A76 <AmiBlitz3_wizzard.ab2@3625>   MOVEA.l D0,A0
00020A7A <AmiBlitz3_wizzard.ab2@3626>   MOVE.w $C(A0),D1
00020A7E <AmiBlitz3_wizzard.ab2@3627>    BPL.w compile_line_done
00020A82 <AmiBlitz3_wizzard.ab2@3631>   BCLR #$F,D1
00020A88 <AmiBlitz3_wizzard.ab2@3632>    JSR AJL_0_D7B8
00020A8E <AmiBlitz3_wizzard.ab2@3633>    JSR AJL_0_D81C
00020A92 <AmiBlitz3_wizzard.ab2@3634> BRA.w compile_line_unthen
00020A94 <AmiBlitz3_wizzard.ab2@3637> RTS
00020A9A <AmiBlitz3_wizzard.ab2@3641>   LEA lastgloballabel,A0
00020A9C <AmiBlitz3_wizzard.ab2@3642>   TST.b (A0)
00020AA0 <AmiBlitz3_wizzard.ab2@3643>    BEQ.w nolocerr
00020AA6 <AmiBlitz3_wizzard.ab2@3644>   LEA ptr_parameterstore,A1
00020AA8 <AmiBlitz3_wizzard.ab2@3645>   MOVEQ.l #$00,D2
00020AAA <AmiBlitz3_wizzard.ab2@3648>   ADDQ.w #1,D2
00020AAC <AmiBlitz3_wizzard.ab2@3649>   MOVE.b (A0)+,(A1)+
00020AB0 <AmiBlitz3_wizzard.ab2@3650>    BNE.w createlab_loop
00020AB6 <AmiBlitz3_wizzard.ab2@3651>   MOVE.b #$27,-$1(A1)
00020AB8 <AmiBlitz3_wizzard.ab2@3652>   MOVE.w D2,-(A7)
00020ABE <AmiBlitz3_wizzard.ab2@3653>    JSR makename4
00020AC0 <AmiBlitz3_wizzard.ab2@3654>   CMP.w (A7)+,D2
00020AC4 <AmiBlitz3_wizzard.ab2@3655>    BEQ.w syntaxerr
00020AC6 <AmiBlitz3_wizzard.ab2@3656>    TST.w d0
00020ACA <AmiBlitz3_wizzard.ab2@3657>    BPL createlab_done
00020AD2 <AmiBlitz3_wizzard.ab2@3658>    MOVE.w #$3a,lastchar
00020AD4 <AmiBlitz3_wizzard.ab2@3659>    SUBQ.l #2,a5
00020AD6 <AmiBlitz3_wizzard.ab2@3662> RTS
00020AE0 <AmiBlitz3_wizzard.ab2@3666>   MOVE.l #forthstack,forthsp
00020AEA <AmiBlitz3_wizzard.ab2@3667>   MOVE.l #precstack,precsp
00020AEC <AmiBlitz3_wizzard.ab2@3668> RTS
00020AEE <AmiBlitz3_wizzard.ab2@3675>   MOVEQ.l #$00,D4
00020B18 <AmiBlitz3_wizzard.ab2@3678>   !basic
00020B5A <AmiBlitz3_wizzard.ab2@3679> 
00020B6A <AmiBlitz3_wizzard.ab2@3681>   If (c_abort = 1)           ; check if set
00020B6C <AmiBlitz3_wizzard.ab2@3682>     MOVEQ.l #-$01,d4
00020B72 <AmiBlitz3_wizzard.ab2@3683>     MOVE.w D4,stopit
00020B90 <AmiBlitz3_wizzard.ab2@3684>     !asm
00020B94 <AmiBlitz3_wizzard.ab2@3685>     BRA chkrealstop__skip
00020BB2 <AmiBlitz3_wizzard.ab2@3687>   !asm
00020BB4 <AmiBlitz3_wizzard.ab2@3688>   MOVEQ.l #$00,D6
00020BB6 <AmiBlitz3_wizzard.ab2@3689>   MOVEQ.l #$00,D7                                          ; clr Z-Flag for beq.b in chkstop_chk
00020BB8 <AmiBlitz3_wizzard.ab2@3693> RTS
00020BBC <AmiBlitz3_wizzard.ab2@3697>   MOVE.w stopit(PC),D0
00020BC0 <AmiBlitz3_wizzard.ab2@3698>   BEQ chkstop__chk
00020BC6 <AmiBlitz3_wizzard.ab2@3699>   SUBQ.w #1,stopit
00020BC8 <AmiBlitz3_wizzard.ab2@3703> RTS
00020BD0 <AmiBlitz3_wizzard.ab2@3706>   MOVE.w #2000,stopit
00020BD4 <AmiBlitz3_wizzard.ab2@3707>   BSR.w chkrealstop
00020BD8 <AmiBlitz3_wizzard.ab2@3708>   BEQ.b chkstop__rts
00020BDC <AmiBlitz3_wizzard.ab2@3710>   BSR.w close_compilewin
00020BE0 <AmiBlitz3_wizzard.ab2@3711>   BSR.w call_setpointernormal
00020BE6 <AmiBlitz3_wizzard.ab2@3713>   MOVEA.l errstack,A7
00020BEC <AmiBlitz3_wizzard.ab2@3714>   MOVEA.l errcont,A0
00020BF4 <AmiBlitz3_wizzard.ab2@3715>   MOVE.w #-1,anyerrs
00020BF6 <AmiBlitz3_wizzard.ab2@3716> JMP (A0)
00020BFA <AmiBlitz3_wizzard.ab2@3719> d_pc:           Ds.l 1
00020BFE <AmiBlitz3_wizzard.ab2@3720> d_bigpc:        Ds.l 1
00020C00 <AmiBlitz3_wizzard.ab2@3721> d_nomemleft:    Ds.w 1
00020C04 <AmiBlitz3_wizzard.ab2@3722> cont_pc:        Ds.l 1
00020C08 <AmiBlitz3_wizzard.ab2@3723> cont_pc2:       Ds.l 1
00020C0C <AmiBlitz3_wizzard.ab2@3724> lastcontlink:   Ds.l 1
00020C10 <AmiBlitz3_wizzard.ab2@3728>   ORI.w #$4E40,D1
00020C14 <AmiBlitz3_wizzard.ab2@3729> BRA.w JUMP_writeword
00020C1A <AmiBlitz3_wizzard.ab2@3733>   TST.b debugmode
00020C1E <AmiBlitz3_wizzard.ab2@3734>   BEQ.w debugstuff__rts
00020C24 <AmiBlitz3_wizzard.ab2@3741>   TST.w dirmode                                            ;or while in direct mode...
00020C28 <AmiBlitz3_wizzard.ab2@3742>    BNE debugstuff__rts
00020C32 <AmiBlitz3_wizzard.ab2@3743>   MOVE.l destpointer,d_pc
00020C3C <AmiBlitz3_wizzard.ab2@3744>   MOVE.l bigpc,d_bigpc
00020C46 <AmiBlitz3_wizzard.ab2@3745>   MOVE.w dontwrite,d_nomemleft
00020C4A <AmiBlitz3_wizzard.ab2@3746>   MOVEM.l D0-D1,-(A7)
00020C4C <AmiBlitz3_wizzard.ab2@3747>   MOVEQ.l #$01,D1
00020C50 <AmiBlitz3_wizzard.ab2@3748>    BSR.w writetrap                                         ;write the adress to sourceline
00020C56 <AmiBlitz3_wizzard.ab2@3752>    MOVE.l destpointer,D0
00020C5C <AmiBlitz3_wizzard.ab2@3753>   MOVE.l cont_pc,D1
00020C62 <AmiBlitz3_wizzard.ab2@3754>   MOVE.l D0,cont_pc
00020C68 <AmiBlitz3_wizzard.ab2@3755>   MOVE.l D1,cont_pc2
00020C6C <AmiBlitz3_wizzard.ab2@3756>    BEQ.b debugstuff__skip
00020C72 <AmiBlitz3_wizzard.ab2@3757>   TST.w dontwrite
00020C76 <AmiBlitz3_wizzard.ab2@3758>    BNE.b debugstuff__skip
00020C78 <AmiBlitz3_wizzard.ab2@3759>   MOVEA.l D1,A4
00020C7A <AmiBlitz3_wizzard.ab2@3760>   SUB.l A4,D0
00020C7E <AmiBlitz3_wizzard.ab2@3761>   MOVE.w D0,$6(A4)
00020C84 <AmiBlitz3_wizzard.ab2@3762>   MOVE.l A4,lastcontlink
00020C8A <AmiBlitz3_wizzard.ab2@3765>   TST.w ininclude
00020C90 <AmiBlitz3_wizzard.ab2@3767>   TST.w makeexec
00020C94 <AmiBlitz3_wizzard.ab2@3768>   BEQ 'l1
00020C9A <AmiBlitz3_wizzard.ab2@3769>   TST.w exdebug
00020C9E <AmiBlitz3_wizzard.ab2@3770>   BEQ 'noinc
00020CA2 <AmiBlitz3_wizzard.ab2@3773>   MOVEM.l a0-a1/d2/d3,-(a7)                                ;write source for includes
00020CA8 <AmiBlitz3_wizzard.ab2@3774>   MOVE.l data1,d1
00020CAE <AmiBlitz3_wizzard.ab2@3775>   TST.b firsttime
00020CB2 <AmiBlitz3_wizzard.ab2@3776>   BNE 'nofirst
00020CBA <AmiBlitz3_wizzard.ab2@3777>   MOVE.b #1,firsttime
00020CC0 <AmiBlitz3_wizzard.ab2@3778>   MOVE.l #"DuCk",d1                                        ; to found from debugger the code start
00020CC6 <AmiBlitz3_wizzard.ab2@3779>   JSR writedatalong
00020CCC <AmiBlitz3_wizzard.ab2@3780>   MOVE.l #"AmiB",d1
00020CD2 <AmiBlitz3_wizzard.ab2@3781>   JSR writedatalong
00020CD8 <AmiBlitz3_wizzard.ab2@3782>   MOVE.l destbufferstart,d1
00020CDE <AmiBlitz3_wizzard.ab2@3783>   JSR writedatalong
00020CE4 <AmiBlitz3_wizzard.ab2@3784>   TST.w dontwrite
00020CE8 <AmiBlitz3_wizzard.ab2@3785>   BNE 'nohunk
00020CEE <AmiBlitz3_wizzard.ab2@3786>   MOVE.l data1,d1
00020CF0 <AmiBlitz3_wizzard.ab2@3787>   SUBQ.l #4,d1
00020CF6 <AmiBlitz3_wizzard.ab2@3788>   SUB.l destbufferstart,d1
00020CF8 <AmiBlitz3_wizzard.ab2@3789>   MOVE.l d1,d2
00020CFE <AmiBlitz3_wizzard.ab2@3790>   JSR addhunkoffset
00020D04 <AmiBlitz3_wizzard.ab2@3793>   MOVE.l destpointer,d2
00020D0A <AmiBlitz3_wizzard.ab2@3794>   MOVE.l data1,d1
00020D10 <AmiBlitz3_wizzard.ab2@3797>   MOVE.l destpointer,d2
00020D12 <AmiBlitz3_wizzard.ab2@3798>   MOVE.l d1,d3
00020D18 <AmiBlitz3_wizzard.ab2@3799>   SUB.l destbufferstart,d1
00020D1E <AmiBlitz3_wizzard.ab2@3800>   OR.l #$80000000,d1
00020D24 <AmiBlitz3_wizzard.ab2@3801>   JSR writelong
00020D2A <AmiBlitz3_wizzard.ab2@3802>   TST.w inmacro
00020D2E <AmiBlitz3_wizzard.ab2@3803>   BEQ 'sc1
00020D34 <AmiBlitz3_wizzard.ab2@3804>   MOVE.l myline,a0
00020D38 <AmiBlitz3_wizzard.ab2@3806> BRA 'inc2
00020D3E <AmiBlitz3_wizzard.ab2@3808>  'sc1  TST.w ininclude
00020D42 <AmiBlitz3_wizzard.ab2@3809>   BEQ 'inc
00020D48 <AmiBlitz3_wizzard.ab2@3810>   MOVE.l includesourceline,a0
00020D4C <AmiBlitz3_wizzard.ab2@3811> BRA 'inc2
00020D52 <AmiBlitz3_wizzard.ab2@3814>   MOVE.l sourceline,a0
00020D56 <AmiBlitz3_wizzard.ab2@3815>   LEA 9(a0),a0
00020D58 <AmiBlitz3_wizzard.ab2@3818>   MOVE.l d1,d2
00020D5A <AmiBlitz3_wizzard.ab2@3819>   MOVE.l A5,D1
00020D5C <AmiBlitz3_wizzard.ab2@3820>   SUB.l a0,D1
00020D62 <AmiBlitz3_wizzard.ab2@3821>   ADD.l #9,d1
00020D66 <AmiBlitz3_wizzard.ab2@3822>   BSR.w JUMP_writeword
00020D6C <AmiBlitz3_wizzard.ab2@3823>   CMP.l #9,d1
00020D70 <AmiBlitz3_wizzard.ab2@3824>   BEQ 'pos1
00020D76 <AmiBlitz3_wizzard.ab2@3825>   TST.w dontwrite
00020D7A <AmiBlitz3_wizzard.ab2@3826>   BNE 'nopad
00020D80 <AmiBlitz3_wizzard.ab2@3827>   MOVE.l lastsourceline,d1
00020D84 <AmiBlitz3_wizzard.ab2@3828>   MOVE.l d1,-6(a4)
00020D88 <AmiBlitz3_wizzard.ab2@3829> BRA 'nopad
00020D8E <AmiBlitz3_wizzard.ab2@3832>   MOVE.l d2,lastsourceline
00020D98 <AmiBlitz3_wizzard.ab2@3833>    MOVE.l destpointer,lastdestpointer
00020D9A <AmiBlitz3_wizzard.ab2@3834>    MOVEQ #0,d1
00020DA0 <AmiBlitz3_wizzard.ab2@3835>   MOVE.l data1,d2
00020DA6 <AmiBlitz3_wizzard.ab2@3836>   SUB.l destbufferstart,d2
00020DAC <AmiBlitz3_wizzard.ab2@3837>   JSR writedatalong
00020DB2 <AmiBlitz3_wizzard.ab2@3838>   TST.w dontwrite
00020DB6 <AmiBlitz3_wizzard.ab2@3839>   BNE 'no2
00020DBC <AmiBlitz3_wizzard.ab2@3840>   JSR addhunkoffset
00020DC2 <AmiBlitz3_wizzard.ab2@3843>   MOVE.l data1,d2
00020DC8 <AmiBlitz3_wizzard.ab2@3844>   SUB.l destbufferstart,d2
00020DCE <AmiBlitz3_wizzard.ab2@3845>   JSR writedatalong
00020DD4 <AmiBlitz3_wizzard.ab2@3846>   TST.w dontwrite
00020DD8 <AmiBlitz3_wizzard.ab2@3847>   BNE 'no
00020DDE <AmiBlitz3_wizzard.ab2@3848>   JSR addhunkoffset
00020DE4 <AmiBlitz3_wizzard.ab2@3849>   MOVE.l lastwritedat,a1
00020DEA <AmiBlitz3_wizzard.ab2@3850>   CMP.l #0,a1
00020DEE <AmiBlitz3_wizzard.ab2@3851>   BEQ 'no
00020DF0 <AmiBlitz3_wizzard.ab2@3852>   MOVE.l d3,(a1)
00020DF8 <AmiBlitz3_wizzard.ab2@3853>   MOVE.l prevwritedat,4(a1)
00020E02 <AmiBlitz3_wizzard.ab2@3854>   MOVE.l lastwritedat,prevwritedat
00020E08 <AmiBlitz3_wizzard.ab2@3857>   MOVE.l d3,lastwritedat
00020E0A <AmiBlitz3_wizzard.ab2@3858>   MOVEQ #4,d1
00020E0E <AmiBlitz3_wizzard.ab2@3859>   BSR pokedata1b
00020E10 <AmiBlitz3_wizzard.ab2@3862>   MOVE.b (a0)+,d1
00020E14 <AmiBlitz3_wizzard.ab2@3863>   BEQ 'done
00020E18 <AmiBlitz3_wizzard.ab2@3864>   BSR pokedata1b
00020E1C <AmiBlitz3_wizzard.ab2@3865> BRA 'loop
00020E1E <AmiBlitz3_wizzard.ab2@3868>   MOVEQ #0,d1
00020E22 <AmiBlitz3_wizzard.ab2@3869>   BSR pokedata1b
00020E28 <AmiBlitz3_wizzard.ab2@3870>   MOVE.l data1,d1
00020E2C <AmiBlitz3_wizzard.ab2@3871>   BTST #0,d1
00020E30 <AmiBlitz3_wizzard.ab2@3872>   BEQ 'nopad
00020E32 <AmiBlitz3_wizzard.ab2@3873>   MOVEQ #0,d1
00020E36 <AmiBlitz3_wizzard.ab2@3874>   BSR pokedata1b
00020E3A <AmiBlitz3_wizzard.ab2@3877>   MOVEM.l (a7)+,a0-a1/d2/d3
00020E3E <AmiBlitz3_wizzard.ab2@3878> BRA 'noinc2
00020E44 <AmiBlitz3_wizzard.ab2@3881>   MOVE.l sourceline,D1
00020E4A <AmiBlitz3_wizzard.ab2@3883>   JSR writelong
00020E4C <AmiBlitz3_wizzard.ab2@3884>   MOVE.l A5,D1
00020E52 <AmiBlitz3_wizzard.ab2@3885>   SUB.l sourceline,D1
00020E58 <AmiBlitz3_wizzard.ab2@3887>   JSR writeword
00020E5A <AmiBlitz3_wizzard.ab2@3890>   MOVEQ.l #$00,D1
00020E60 <AmiBlitz3_wizzard.ab2@3891>   JSR writeword                                            ; was: BSR.w writeword
00020E64 <AmiBlitz3_wizzard.ab2@3892>   MOVEM.l (A7)+,D0-D1
00020E66 <AmiBlitz3_wizzard.ab2@3895> RTS
00020E6C <AmiBlitz3_wizzard.ab2@3899>   TST.b debugmode                                          ;extern debug
00020E70 <AmiBlitz3_wizzard.ab2@3900>    BEQ.b undodebug__rts
00020E76 <AmiBlitz3_wizzard.ab2@3901>   TST.b dirmode
00020E7A <AmiBlitz3_wizzard.ab2@3902>   BNE undodebug__rts
00020E84 <AmiBlitz3_wizzard.ab2@3907>   MOVE.w d_nomemleft,dontwrite
00020E8E <AmiBlitz3_wizzard.ab2@3908>   MOVE.l d_bigpc,bigpc
00020E98 <AmiBlitz3_wizzard.ab2@3909>   MOVE.l d_pc,destpointer
00020EA2 <AmiBlitz3_wizzard.ab2@3910>   MOVE.l cont_pc2,cont_pc
00020EA4 <AmiBlitz3_wizzard.ab2@3913> RTS
00020EAE <AmiBlitz3_wizzard.ab2@3917>   MOVE.l #forthstack,forthsp
00020EB8 <AmiBlitz3_wizzard.ab2@3918>   MOVE.l #precstack,precsp
00020EBE <AmiBlitz3_wizzard.ab2@3919>   CLR.w regnum
00020EC4 <AmiBlitz3_wizzard.ab2@3920>   CLR.w nonew
00020ECA <AmiBlitz3_wizzard.ab2@3921>   CLR.w sbasegot
00020ED4 <AmiBlitz3_wizzard.ab2@3922>   MOVE.w varcodelen,oldvcodelen
00020EDA <AmiBlitz3_wizzard.ab2@3923>   CLR.w varcodelen
00020EE2 <AmiBlitz3_wizzard.ab2@3924>   MOVE.w #-1,lasta6
00020EE4 <AmiBlitz3_wizzard.ab2@3925> RTS
00020EEA <AmiBlitz3_wizzard.ab2@3929>   TST.w linemode
00020EEE <AmiBlitz3_wizzard.ab2@3930>   BMI.b smode__skip
00020EF2 <AmiBlitz3_wizzard.ab2@3931>   BSR.w undodebug
00020EF8 <AmiBlitz3_wizzard.ab2@3932>   MOVE.w linemode,D1
00020EFA <AmiBlitz3_wizzard.ab2@3933>   ADDQ.w #4,A7
00020EFC <AmiBlitz3_wizzard.ab2@3934>   LSL.w #2,D1
00020F02 <AmiBlitz3_wizzard.ab2@3935>   LEA modetable,A0
00020F06 <AmiBlitz3_wizzard.ab2@3936>   MOVEA.l $0(A0,D1.W),A0
00020F0A <AmiBlitz3_wizzard.ab2@3937>   BSR.w reget
00020F0C <AmiBlitz3_wizzard.ab2@3940> JMP (A0)                                                   ;jumptokenroutine
00020F0E <AmiBlitz3_wizzard.ab2@3943> RTS
00020F16 <AmiBlitz3_wizzard.ab2@3948>   MOVE.w #0,leaa0a0+2
00020F1C <AmiBlitz3_wizzard.ab2@3949>   CLR.b nowdeclare
00020F22 <AmiBlitz3_wizzard.ab2@3950>   CLR.b notypecheck
00020F28 <AmiBlitz3_wizzard.ab2@3951>   CLR.l lasttoken
00020F2E <AmiBlitz3_wizzard.ab2@3952>   CLR.b doimmediate
00020F34 <AmiBlitz3_wizzard.ab2@3953>   CLR.w vartype
00020F3A <AmiBlitz3_wizzard.ab2@3954>   CLR.w regnumfunc
00020F40 <AmiBlitz3_wizzard.ab2@3955>   CLR.b optistring
00020F46 <AmiBlitz3_wizzard.ab2@3956>   CLR.b iniffcommand
00020F4C <AmiBlitz3_wizzard.ab2@3957>   CLR.w instringon  ; new
00020F52 <AmiBlitz3_wizzard.ab2@3958>   CLR.b funccall
00020F58 <AmiBlitz3_wizzard.ab2@3959>   CLR.l currentfunccall
00020F5E <AmiBlitz3_wizzard.ab2@3960>   CLR.l leftsidetype
00020F64 <AmiBlitz3_wizzard.ab2@3961>   CLR.l rightsidetype
00020F6A <AmiBlitz3_wizzard.ab2@3962>   CLR.b peekaddrsize
00020F70 <AmiBlitz3_wizzard.ab2@3963>   CLR.b blitzparloop
00020F76 <AmiBlitz3_wizzard.ab2@3964>   CLR.b funcparloop
00020F7C <AmiBlitz3_wizzard.ab2@3965>   TST.b debugmode
00020F80 <AmiBlitz3_wizzard.ab2@3966>    BEQ 'fpu
00020F8A <AmiBlitz3_wizzard.ab2@3972>   MOVE.b fpu,iee
00020F8E <AmiBlitz3_wizzard.ab2@3973>   MOVE.w stopit(PC),D0
00020F92 <AmiBlitz3_wizzard.ab2@3974>   BNE chkstop_chkb
00020F96 <AmiBlitz3_wizzard.ab2@3975>   BSR.w chkstop                                          ; message here
00020F9C <AmiBlitz3_wizzard.ab2@3978>   SUBQ.w #1,stopit
00020FA0 <AmiBlitz3_wizzard.ab2@3981>   BSR.w findmacro                                          ;macro
00020FA6 <AmiBlitz3_wizzard.ab2@4035>   TST.b debugmode
00020FAA <AmiBlitz3_wizzard.ab2@4036>    BEQ.s 'l10
00020FB0 <AmiBlitz3_wizzard.ab2@4037>   TST.b exdebug
00020FB4 <AmiBlitz3_wizzard.ab2@4038>   BEQ 'l10a
00020FB6 <AmiBlitz3_wizzard.ab2@4039>   MOVE.w (a5),d0
00020FBA <AmiBlitz3_wizzard.ab2@4040>   CMP.w #$8025,d0
00020FBE <AmiBlitz3_wizzard.ab2@4041>    BEQ 'l10
00020FC2 <AmiBlitz3_wizzard.ab2@4044>   BSR.w debugstuffa                                         ;insert runtimecode debugcode
00020FC6 <AmiBlitz3_wizzard.ab2@4048>   BSR.w get1bytemain                                       ;gettokenmain
00020FCA <AmiBlitz3_wizzard.ab2@4049>    BEQ.w undodebug
00020FCE <AmiBlitz3_wizzard.ab2@4050>   CMP.w #$002b,d0                                            ;check for + cast sign
00020FD2 <AmiBlitz3_wizzard.ab2@4051>     BNE 'lb2
00020FD6 <AmiBlitz3_wizzard.ab2@4052>     BSR.w get1bytemain
00020FDE <AmiBlitz3_wizzard.ab2@4053>     MOVE.b #1,notypecheck
00020FE8 <AmiBlitz3_wizzard.ab2@4061>   MOVE.l #forthstack,forthsp
00020FF2 <AmiBlitz3_wizzard.ab2@4062>   MOVE.l #precstack,precsp
00020FF8 <AmiBlitz3_wizzard.ab2@4063>   CLR.w regnum
00020FFE <AmiBlitz3_wizzard.ab2@4064>   CLR.w nonew
00021004 <AmiBlitz3_wizzard.ab2@4065>   CLR.w sbasegot
0002100E <AmiBlitz3_wizzard.ab2@4066>   MOVE.w varcodelen,oldvcodelen
00021014 <AmiBlitz3_wizzard.ab2@4068>   CLR.w varcodelen
0002101C <AmiBlitz3_wizzard.ab2@4069>   MOVE.w #$FFFF,lasta6
00021020 <AmiBlitz3_wizzard.ab2@4071>   BSR.w smode
00021022 <AmiBlitz3_wizzard.ab2@4072>   TST.w D0
00021026 <AmiBlitz3_wizzard.ab2@4073>   BMI.w get_tokencode
0002102A <AmiBlitz3_wizzard.ab2@4074>   CMP.w #$2E,D0
0002102E <AmiBlitz3_wizzard.ab2@4075>    BEQ.w JL_0_4644                                         ;shortlist
00021032 <AmiBlitz3_wizzard.ab2@4076>   CMP.w #"#",D0
00021036 <AmiBlitz3_wizzard.ab2@4077>    BEQ.w JL_0_4718                                         ;constant found
0002103A <AmiBlitz3_wizzard.ab2@4078>   CMP.w #$27,D0
0002103E <AmiBlitz3_wizzard.ab2@4079>    BEQ.w JL_0_4638                                         ;local label
00021044 <AmiBlitz3_wizzard.ab2@4080>   MOVE.l A5,letstart
0002104A <AmiBlitz3_wizzard.ab2@4081>   JSR getparameter
0002104E <AmiBlitz3_wizzard.ab2@4082>   BSR.w reget
00021052 <AmiBlitz3_wizzard.ab2@4083>    BEQ.w JL_0_4658                                         ;label found
00021056 <AmiBlitz3_wizzard.ab2@4084>   CMP.w #$7B,D0
0002105A <AmiBlitz3_wizzard.ab2@4085>    BEQ.w JL_0_475C
0002105C <AmiBlitz3_wizzard.ab2@4086>   TST.w d0
00021060 <AmiBlitz3_wizzard.ab2@4087>    BPL 'll1
00021066 <AmiBlitz3_wizzard.ab2@4088>   TST.b newsyntax
0002106A <AmiBlitz3_wizzard.ab2@4089>    BEQ 'll1
00021070 <AmiBlitz3_wizzard.ab2@4090>   LEA allowtab,a0
00021072 <AmiBlitz3_wizzard.ab2@4091>   MOVEQ #0,d1
00021074 <AmiBlitz3_wizzard.ab2@4092>   MOVE.b d0,d1
00021078 <AmiBlitz3_wizzard.ab2@4093>   TST.b 0(a0,d1.w)
0002107C <AmiBlitz3_wizzard.ab2@4094>    BNE 'll1
0002107E <AmiBlitz3_wizzard.ab2@4095>   SUBQ.l #2,a5
00021086 <AmiBlitz3_wizzard.ab2@4096>   MOVE.w #":",lastchar                                     ;no doublepoint
0002108A <AmiBlitz3_wizzard.ab2@4097> BRA JL_0_4658
00021092 <AmiBlitz3_wizzard.ab2@4100>   CMP.l #"equ ",-1(a5)
00021096 <AmiBlitz3_wizzard.ab2@4101>    BEQ 'll4
0002109E <AmiBlitz3_wizzard.ab2@4102>   CMP.l #"EQU ",-1(a5)
000210A2 <AmiBlitz3_wizzard.ab2@4103>    BNE 'll2
000210A4 <AmiBlitz3_wizzard.ab2@4106>   ADDQ.l #2,a5
000210A8 <AmiBlitz3_wizzard.ab2@4107>   BSR.w findlabel2
000210AC <AmiBlitz3_wizzard.ab2@4108>   BEQ.w 'lf1
000210B0 <AmiBlitz3_wizzard.ab2@4109>   BSR.w addlabelhash
000210B8 <AmiBlitz3_wizzard.ab2@4110>   MOVE.l #$1,$4(A2)
000210C0 <AmiBlitz3_wizzard.ab2@4113>   CMPI.l #$1,$4(A2)
000210C4 <AmiBlitz3_wizzard.ab2@4114>    BNE.w illconerr
000210C8 <AmiBlitz3_wizzard.ab2@4115>   BSR get1bytemain
000210CA <AmiBlitz3_wizzard.ab2@4116>   MOVE.l A2,-(A7)
000210CC <AmiBlitz3_wizzard.ab2@4127>   SUBQ.l #1,a5
000210CE <AmiBlitz3_wizzard.ab2@4130>   SUBQ.l #1,a5
000210D4 <AmiBlitz3_wizzard.ab2@4131>   JSR AJL_0_BF6E
000210D6 <AmiBlitz3_wizzard.ab2@4132>   MOVEA.l (A7)+,A2
000210DA <AmiBlitz3_wizzard.ab2@4133>   MOVE.l D3,$8(A2)
000210DC <AmiBlitz3_wizzard.ab2@4134>   RTS
000210E0 <AmiBlitz3_wizzard.ab2@4135>   BSR get1bytemain
000210E8 <AmiBlitz3_wizzard.ab2@4138>   CMP.l #"SET ",-1(a5)
000210EC <AmiBlitz3_wizzard.ab2@4139>   BNE 'll3
000210F0 <AmiBlitz3_wizzard.ab2@4140> BRA 'll4
000210F6 <AmiBlitz3_wizzard.ab2@4143> JMP AJL_0_DEA6
000210FA <AmiBlitz3_wizzard.ab2@4146>   CMP.w #-$7FDE,D0
000210FE <AmiBlitz3_wizzard.ab2@4147>   BEQ.w get_tokencode
00021102 <AmiBlitz3_wizzard.ab2@4148> BRA.w undodebug
00021106 <AmiBlitz3_wizzard.ab2@4151>   BSR.w undodebug
0002110A <AmiBlitz3_wizzard.ab2@4152>   BSR.w createlab
0002110E <AmiBlitz3_wizzard.ab2@4153> BRA.w JL_0_466E
00021112 <AmiBlitz3_wizzard.ab2@4156>   BSR.w get1bytemain
00021116 <AmiBlitz3_wizzard.ab2@4157>    BEQ.w JL_0_462C
0002111A <AmiBlitz3_wizzard.ab2@4158>   CMP.w #"'",D0
0002111E <AmiBlitz3_wizzard.ab2@4159>    BEQ.w JL_0_4638
00021122 <AmiBlitz3_wizzard.ab2@4160>    BSR.w makename2
00021124 <AmiBlitz3_wizzard.ab2@4161>    TST.w d0
00021128 <AmiBlitz3_wizzard.ab2@4162>    BPL 'll1
0002112A <AmiBlitz3_wizzard.ab2@4163>    SUBQ.l #2,a5
00021132 <AmiBlitz3_wizzard.ab2@4164>    MOVE.w #":",lastchar
00021136 <AmiBlitz3_wizzard.ab2@4165> BRA JL_0_4658                                              ;????
0002113A <AmiBlitz3_wizzard.ab2@4169>   BSR.w undodebug
00021140 <AmiBlitz3_wizzard.ab2@4170>   LEA ptr_parameterstore,A0
00021146 <AmiBlitz3_wizzard.ab2@4171>   LEA lastgloballabel,A1
00021148 <AmiBlitz3_wizzard.ab2@4174>   MOVE.b (A0)+,(A1)+
0002114C <AmiBlitz3_wizzard.ab2@4175>    BNE.w JL_0_4668
00021150 <AmiBlitz3_wizzard.ab2@4178>   BSR.w findlabel2
00021154 <AmiBlitz3_wizzard.ab2@4179>    BEQ.w JL_0_4698
00021158 <AmiBlitz3_wizzard.ab2@4180>    BSR.w addlabelhash
0002115C <AmiBlitz3_wizzard.ab2@4183>   CLR.l $4(A2)
00021164 <AmiBlitz3_wizzard.ab2@4184>   MOVE.l destpointer,$8(A2)
0002116C <AmiBlitz3_wizzard.ab2@4187>   MOVE.w procnum,$10(A2)
0002116E <AmiBlitz3_wizzard.ab2@4188> RTS
00021172 <AmiBlitz3_wizzard.ab2@4192>   MOVE.l $4(A2),D0
00021176 <AmiBlitz3_wizzard.ab2@4193>   BTST #$0,D0
0002117A <AmiBlitz3_wizzard.ab2@4194>    BNE.w illlaberr
00021180 <AmiBlitz3_wizzard.ab2@4195>   TST.w pass
00021184 <AmiBlitz3_wizzard.ab2@4197>   MOVE.l $8(A2),D0
00021188 <AmiBlitz3_wizzard.ab2@4198>    BNE.w duplaberr
00021190 <AmiBlitz3_wizzard.ab2@4199>   MOVE.w procnum,$10(A2)
00021194 <AmiBlitz3_wizzard.ab2@4200>   MOVEA.l $4(A2),A3
0002119A <AmiBlitz3_wizzard.ab2@4201>   MOVEA.l _execbase,A6
0002119E <AmiBlitz3_wizzard.ab2@4204>   CMPA.w #$0,A3
000211A2 <AmiBlitz3_wizzard.ab2@4205>    BEQ.w JL_0_467A
000211A6 <AmiBlitz3_wizzard.ab2@4206>     MOVE.l $4(A2),D1
000211AA <AmiBlitz3_wizzard.ab2@4207>     BTST #$0,D1
000211AE <AmiBlitz3_wizzard.ab2@4208>     BNE.w illlaberr
000211B2 <AmiBlitz3_wizzard.ab2@4209>   MOVE.w $8(A3),D1
000211B6 <AmiBlitz3_wizzard.ab2@4210>   CMP.w $10(A2),D1
000211BA <AmiBlitz3_wizzard.ab2@4211>    BEQ.w JL_0_46DC
000211C0 <AmiBlitz3_wizzard.ab2@4212>    TST.b newsyntax
000211C4 <AmiBlitz3_wizzard.ab2@4213>    BEQ 'l1
000211C8 <AmiBlitz3_wizzard.ab2@4214> BRA.w JL_0_46DC                                            ;label context out of range fix
000211D0 <AmiBlitz3_wizzard.ab2@4219>   MOVE.w $A(A3),linenumat+2                                ;move 10(a3),linenumat org source
000211D4 <AmiBlitz3_wizzard.ab2@4220> BRA.w referr
000211DA <AmiBlitz3_wizzard.ab2@4223>   MOVE.w dontwrite,D1
000211DE <AmiBlitz3_wizzard.ab2@4224>    BNE.w JL_0_4706
000211E2 <AmiBlitz3_wizzard.ab2@4225>   MOVEA.l $4(A3),A1
000211E8 <AmiBlitz3_wizzard.ab2@4226>   BTST #$0,$7(A3)
000211EC <AmiBlitz3_wizzard.ab2@4227>    BEQ.w JL_0_4700
000211EE <AmiBlitz3_wizzard.ab2@4228>   SUBQ.w #1,A1
000211F4 <AmiBlitz3_wizzard.ab2@4229>   MOVE.l data2,(A1)
000211F8 <AmiBlitz3_wizzard.ab2@4230> BRA.w JL_0_4706
000211FE <AmiBlitz3_wizzard.ab2@4233>   MOVE.l destpointer,(A1)
00021200 <AmiBlitz3_wizzard.ab2@4236>   MOVEA.l A3,A1
00021202 <AmiBlitz3_wizzard.ab2@4237>   MOVEA.l (A3),A3
00021206 <AmiBlitz3_wizzard.ab2@4238>   MOVE.l A3,$4(A2)
00021208 <AmiBlitz3_wizzard.ab2@4239>   MOVEQ.l #$0C+2,D0
0002120E <AmiBlitz3_wizzard.ab2@4240>   MOVE.l mempool,a0
00021214 <AmiBlitz3_wizzard.ab2@4241>   MOVEA.l _execbase,A6
00021218 <AmiBlitz3_wizzard.ab2@4242>   JSR _FreePooled(A6)
0002121C <AmiBlitz3_wizzard.ab2@4243> BRA.w JL_0_46BC
00021226 <AmiBlitz3_wizzard.ab2@4248>    MOVE.l #forthstack,forthsp
00021230 <AmiBlitz3_wizzard.ab2@4249>   MOVE.l #precstack,precsp
00021234 <AmiBlitz3_wizzard.ab2@4250>    BSR.w getparameter2
00021238 <AmiBlitz3_wizzard.ab2@4253>   BSR.w findlabel2
0002123C <AmiBlitz3_wizzard.ab2@4254>    BEQ.w JL_0_4738
00021240 <AmiBlitz3_wizzard.ab2@4255>    BSR.w addlabelhash
00021248 <AmiBlitz3_wizzard.ab2@4256>   MOVE.l #$1,$4(A2)
0002124C <AmiBlitz3_wizzard.ab2@4257> BRA.w JL_0_4744
00021254 <AmiBlitz3_wizzard.ab2@4260>   CMPI.l #$1,$4(A2)
00021258 <AmiBlitz3_wizzard.ab2@4261>    BNE.w illconerr
0002125C <AmiBlitz3_wizzard.ab2@4270>   CMP.w #$3D,D0
00021260 <AmiBlitz3_wizzard.ab2@4271>   BEQ.w JL_0_474E
00021262 <AmiBlitz3_wizzard.ab2@4272> RTS
00021264 <AmiBlitz3_wizzard.ab2@4276>   MOVE.l A2,-(A7)
0002126A <AmiBlitz3_wizzard.ab2@4277>   JSR AJL_0_BF6E
0002126C <AmiBlitz3_wizzard.ab2@4278>   MOVEA.l (A7)+,A2
00021270 <AmiBlitz3_wizzard.ab2@4279>   MOVE.l D3,$8(A2)                                         ;store constant
00021278 <AmiBlitz3_wizzard.ab2@4280>   CMP.w #$0a,lastchar
0002127C <AmiBlitz3_wizzard.ab2@4281>   BNE 'l1
00021284 <AmiBlitz3_wizzard.ab2@4282>   MOVE.w #":",lastchar                                     ;hack to read wizard include files
00021286 <AmiBlitz3_wizzard.ab2@4285> RTS
0002128A <AmiBlitz3_wizzard.ab2@4288>   BSR.w findproc                                           ;write statement call
0002128E <AmiBlitz3_wizzard.ab2@4289>   BEQ _state
00021294 <AmiBlitz3_wizzard.ab2@4290>   TST.l unusedfunc
00021298 <AmiBlitz3_wizzard.ab2@4291>   BEQ noprocerr
0002129E <AmiBlitz3_wizzard.ab2@4293>   JSR gotoendsource
000212A2 <AmiBlitz3_wizzard.ab2@4296>   TST.b $5(A2)
000212A8 <AmiBlitz3_wizzard.ab2@4298>   MOVE.l a2,currentfunccall
000212B0 <AmiBlitz3_wizzard.ab2@4299>   MOVE.b #1,funccall
000212B6 <AmiBlitz3_wizzard.ab2@4300>   MOVE.b #1,isfunc(a2)
000212BA <AmiBlitz3_wizzard.ab2@4301>   MOVE.l $E(A2),-(A7)
000212BC <AmiBlitz3_wizzard.ab2@4302>   MOVEQ.l #$00,D0
000212C0 <AmiBlitz3_wizzard.ab2@4303>   MOVE.b $4(A2),D0
000212C6 <AmiBlitz3_wizzard.ab2@4304>   MOVE.l d0,parnumtemp
000212CA <AmiBlitz3_wizzard.ab2@4305>   BEQ.w JL_0_4786
000212CE <AmiBlitz3_wizzard.ab2@4306>   TST.b $20(a2)                                            ;increase if morepar
000212D2 <AmiBlitz3_wizzard.ab2@4307>   BNE 'no0par
000212D4 <AmiBlitz3_wizzard.ab2@4308>   MOVE.l a5,a4
000212D8 <AmiBlitz3_wizzard.ab2@4311>   CMP.b #$20,(a4)+
000212DC <AmiBlitz3_wizzard.ab2@4312>   BEQ 'l1
000212E2 <AmiBlitz3_wizzard.ab2@4313>   CMP.b #"}",-1(a4)
000212E6 <AmiBlitz3_wizzard.ab2@4314>   BNE  'no0par                                             ;statementcall pars
000212E8 <AmiBlitz3_wizzard.ab2@4315>   MOVEQ #0,d0
000212EC <AmiBlitz3_wizzard.ab2@4318>   LEA $16(A2),A1
000212EE <AmiBlitz3_wizzard.ab2@4321>   MOVE.l d1,-(a7)
000212F0 <AmiBlitz3_wizzard.ab2@4322>   MOVE.b (a1),d2
000212F2 <AmiBlitz3_wizzard.ab2@4323>   MOVE.l d0,d1
000212F6 <AmiBlitz3_wizzard.ab2@4324>   CMP.w #4,d2
000212FA <AmiBlitz3_wizzard.ab2@4325>   BNE 'l1b
00021300 <AmiBlitz3_wizzard.ab2@4326>   ADD.l #$203c,d1
00021306 <AmiBlitz3_wizzard.ab2@4328>   JSR writeword
0002130C <AmiBlitz3_wizzard.ab2@4329>   MOVE.l #$ffff0000,d1
00021312 <AmiBlitz3_wizzard.ab2@4331>   JSR writelong
00021316 <AmiBlitz3_wizzard.ab2@4332> BRA 'l2b
0002131C <AmiBlitz3_wizzard.ab2@4335>   TST.b fpu
00021320 <AmiBlitz3_wizzard.ab2@4336>   BNE 'l1c
00021324 <AmiBlitz3_wizzard.ab2@4337>   CMP.w #5,d2
00021328 <AmiBlitz3_wizzard.ab2@4338>   BNE 'l1c
0002132E <AmiBlitz3_wizzard.ab2@4339>   ADD.l #$203c,d1
00021334 <AmiBlitz3_wizzard.ab2@4341>   JSR writeword
0002133A <AmiBlitz3_wizzard.ab2@4342>   MOVE.l #$800000c1,d1
00021340 <AmiBlitz3_wizzard.ab2@4344>   JSR writelong
00021344 <AmiBlitz3_wizzard.ab2@4345> BRA 'l2b
0002134A <AmiBlitz3_wizzard.ab2@4348>   ADD.l #$70ff,d1
00021350 <AmiBlitz3_wizzard.ab2@4350>   JSR writeword
00021356 <AmiBlitz3_wizzard.ab2@4351>   MOVE.l #$f23c5000,d1
00021358 <AmiBlitz3_wizzard.ab2@4352>   MOVE.l d0,d2
0002135A <AmiBlitz3_wizzard.ab2@4353>   ASR.l #2,d2
0002135C <AmiBlitz3_wizzard.ab2@4354>   ADD.l d2,d1
00021362 <AmiBlitz3_wizzard.ab2@4356>   JSR writelong
00021366 <AmiBlitz3_wizzard.ab2@4357>   MOVE.w #$ffff,d1
0002136C <AmiBlitz3_wizzard.ab2@4359>   JSR writeword
0002136E <AmiBlitz3_wizzard.ab2@4362>   MOVE.l (a7)+,d1
00021370 <AmiBlitz3_wizzard.ab2@4363>   ADDQ.l #1,a1
00021376 <AmiBlitz3_wizzard.ab2@4364>   ADD.l #$0200,d0
0002137C <AmiBlitz3_wizzard.ab2@4365>   CMP.l #$0e00,d0
00021380 <AmiBlitz3_wizzard.ab2@4366>    BEQ syntaxerr
00021382 <AmiBlitz3_wizzard.ab2@4367>   TST.b (a1)
00021386 <AmiBlitz3_wizzard.ab2@4368>    BNE 'again
0002138A <AmiBlitz3_wizzard.ab2@4369> BRA JL_0_4786
00021394 <AmiBlitz3_wizzard.ab2@4372>   MOVE.w a2offset,a2offset2
00021398 <AmiBlitz3_wizzard.ab2@4373>   LEA $16(A2),A2
0002139E <AmiBlitz3_wizzard.ab2@4374>   MOVE.b funcparloop,-(a7)
000213A6 <AmiBlitz3_wizzard.ab2@4375>   MOVE.b #1,funcparloop
000213AC <AmiBlitz3_wizzard.ab2@4376>   MOVE.b blitzparloop,-(a7)
000213B2 <AmiBlitz3_wizzard.ab2@4377>   CLR.b blitzparloop
000213B6 <AmiBlitz3_wizzard.ab2@4378>   BSR.w fetchpees2
000213BC <AmiBlitz3_wizzard.ab2@4379>   MOVE.b (a7)+,blitzparloop
000213C2 <AmiBlitz3_wizzard.ab2@4380>   MOVE.b (a7)+,funcparloop
000213C6 <AmiBlitz3_wizzard.ab2@4381> BRA.w JL_0_478A
000213CA <AmiBlitz3_wizzard.ab2@4384>   BSR.w get1bytemain
000213CE <AmiBlitz3_wizzard.ab2@4387>   CMP.w #$7D,D0
000213D2 <AmiBlitz3_wizzard.ab2@4388>    BNE.w morepar_                                          ;syntax error morepar
000213D8 <AmiBlitz3_wizzard.ab2@4389>    JSR chkstak
000213DA <AmiBlitz3_wizzard.ab2@4390>   MOVE.l (A7)+,D1
000213E0 <AmiBlitz3_wizzard.ab2@4406>    JSR JL_0_AFCA
000213E6 <AmiBlitz3_wizzard.ab2@4428>   CLR.b funccall
000213EA <AmiBlitz3_wizzard.ab2@4429> BRA.w get1bytemain
000213F0 <AmiBlitz3_wizzard.ab2@4433>   MOVE.l d0,lasttoken
000213F4 <AmiBlitz3_wizzard.ab2@4434>   CMP.w #$c09f,d0                                          ;hack to use getregd0 instead of getd0
000213F8 <AmiBlitz3_wizzard.ab2@4435>   BNE 'l2
000213FC <AmiBlitz3_wizzard.ab2@4436>    MOVE.w #$dd05,d0
00021400 <AmiBlitz3_wizzard.ab2@4439>   CMP.w #$c0a0,d0                                          ;hack to use getregd0 instead of getd0
00021404 <AmiBlitz3_wizzard.ab2@4440>   BNE 'l3
00021408 <AmiBlitz3_wizzard.ab2@4441>    MOVE.w #$dd06,d0
0002140C <AmiBlitz3_wizzard.ab2@4444>   CMP.w #-$7FC4,D0
00021410 <AmiBlitz3_wizzard.ab2@4445>   BCS.w JL_0_47C4
00021414 <AmiBlitz3_wizzard.ab2@4446>     CMP.w #-$7F4D,D0
00021418 <AmiBlitz3_wizzard.ab2@4447>     BCC.w JL_0_47C4
00021420 <AmiBlitz3_wizzard.ab2@4448>       BTST #$7,assemblercheck                              ;inline Assembler checking
00021424 <AmiBlitz3_wizzard.ab2@4449>       BNE.b JL_0_47C0
0002142A <AmiBlitz3_wizzard.ab2@4450>         TST.b debugmode
0002142E <AmiBlitz3_wizzard.ab2@4451>         BEQ.b 'l10
00021438 <AmiBlitz3_wizzard.ab2@4456>           MOVE.w d_nomemleft,dontwrite
00021442 <AmiBlitz3_wizzard.ab2@4457>           MOVE.l d_bigpc,bigpc
0002144C <AmiBlitz3_wizzard.ab2@4458>           MOVE.l d_pc,destpointer
00021456 <AmiBlitz3_wizzard.ab2@4459>           MOVE.l cont_pc2,cont_pc
0002145A <AmiBlitz3_wizzard.ab2@4465> BRA.w JL_0_612C
0002145E <AmiBlitz3_wizzard.ab2@4468>   BCLR #$F,D0
00021460 <AmiBlitz3_wizzard.ab2@4469>   MOVE.w D0,D1
00021464 <AmiBlitz3_wizzard.ab2@4470>   ANDI.w #$7F00,D1
00021468 <AmiBlitz3_wizzard.ab2@4471>   BNE.w JL_0_4856
0002146C <AmiBlitz3_wizzard.ab2@4472>     CMP.w #$B3,D0                                          ;intern Instructions
00021470 <AmiBlitz3_wizzard.ab2@4473>     BCS.w JL_0_47F2
00021474 <AmiBlitz3_wizzard.ab2@4474>       SUBI.w #$77,D0
00021478 <AmiBlitz3_wizzard.ab2@4475>       CMP.w #$4B,D0
0002147C <AmiBlitz3_wizzard.ab2@4476>       BEQ.w JL_0_4830
00021480 <AmiBlitz3_wizzard.ab2@4477>         CMP.w #$46,D0
00021484 <AmiBlitz3_wizzard.ab2@4478>         BEQ.w JL_0_4830
00021488 <AmiBlitz3_wizzard.ab2@4479> BRA.w JL_0_4834                                            ; change tokennum
0002148C <AmiBlitz3_wizzard.ab2@4482>     CMP.w #$38,D0
00021490 <AmiBlitz3_wizzard.ab2@4483>      BEQ.w JL_0_4830
00021494 <AmiBlitz3_wizzard.ab2@4484>     CMP.w #$39,D0
00021498 <AmiBlitz3_wizzard.ab2@4485>      BEQ.w JL_0_4830
0002149C <AmiBlitz3_wizzard.ab2@4486>     CMP.w #$D,D0
000214A0 <AmiBlitz3_wizzard.ab2@4487>      BEQ.w JL_0_4830
000214A4 <AmiBlitz3_wizzard.ab2@4488>     CMP.w #$12,D0
000214A8 <AmiBlitz3_wizzard.ab2@4489>      BEQ.w JL_0_4830
000214AC <AmiBlitz3_wizzard.ab2@4490>     CMP.w #$13,D0
000214B0 <AmiBlitz3_wizzard.ab2@4491>      BEQ.w JL_0_4830
000214B4 <AmiBlitz3_wizzard.ab2@4492>     CMP.w #$1A,D0
000214B8 <AmiBlitz3_wizzard.ab2@4493>      BEQ.w JL_0_4830
000214BC <AmiBlitz3_wizzard.ab2@4494>     CMP.w #$2A,D0
000214C0 <AmiBlitz3_wizzard.ab2@4495>      BHI.w JL_0_4834
000214C4 <AmiBlitz3_wizzard.ab2@4496>     CMP.w #$23,D0
000214C8 <AmiBlitz3_wizzard.ab2@4497>      BCS.b JL_0_4834
000214CC <AmiBlitz3_wizzard.ab2@4500>   BSR.w undodebug
000214CE <AmiBlitz3_wizzard.ab2@4503>   SUBQ.w #1,D0
000214D0 <AmiBlitz3_wizzard.ab2@4504>   LSL.w #2,D0
000214D6 <AmiBlitz3_wizzard.ab2@4511>   LEA instructionbase,A0
000214DA <AmiBlitz3_wizzard.ab2@4512>   MOVEA.l $0(A0,D0.W),A0
000214DC <AmiBlitz3_wizzard.ab2@4513>   MOVE.l A0,-(A7)
000214E0 <AmiBlitz3_wizzard.ab2@4514> BRA.w get1bytemain
000214E2 <AmiBlitz3_wizzard.ab2@4520>   MOVE.w D0,D1
000214E6 <AmiBlitz3_wizzard.ab2@4521>    BSR.w searchinstr
000214EC <AmiBlitz3_wizzard.ab2@4522>    TST.b newmode
000214F0 <AmiBlitz3_wizzard.ab2@4523>    BNE compile_term
000214F6 <AmiBlitz3_wizzard.ab2@4524>   BTST #$2,$1(A3)                                          ;a3 = pointer to instr ;toke stuff in a3
000214FA <AmiBlitz3_wizzard.ab2@4525>    BNE.w stamigalib
00021500 <AmiBlitz3_wizzard.ab2@4526>   BTST #$0,$1(A3)
00021504 <AmiBlitz3_wizzard.ab2@4527>    BEQ.w needreturn_                                       ;syntax err need return   ;check it's a statement
00021508 <AmiBlitz3_wizzard.ab2@4528>    BSR.w JL_0_49EA                                         ;does it need a size specifier?
0002150C <AmiBlitz3_wizzard.ab2@4529>    BSR.w JL_0_66F6
00021512 <AmiBlitz3_wizzard.ab2@4535>   MOVE.w numreps,-(A7)
00021518 <AmiBlitz3_wizzard.ab2@4536>   MOVE.w userp,-(A7)
0002151E <AmiBlitz3_wizzard.ab2@4537>   MOVE.w a2offset,-(A7)
00021520 <AmiBlitz3_wizzard.ab2@4538>   MOVE.l A2,-(A7)                                          ;recurs.
0002152A <AmiBlitz3_wizzard.ab2@4539>   MOVE.w convsize,userp
0002152E <AmiBlitz3_wizzard.ab2@4540>   LEA $6(A3),A1
00021530 <AmiBlitz3_wizzard.ab2@4544>    MOVE.w (A1),D2
00021534 <AmiBlitz3_wizzard.ab2@4545>    BMI.w SERR                                              ;statement syntax error
00021538 <AmiBlitz3_wizzard.ab2@4546>   ANDI.w #$FF,D2
0002153A <AmiBlitz3_wizzard.ab2@4547>   CMP.w D2,D1
0002153E <AmiBlitz3_wizzard.ab2@4548>    BEQ.w JL_0_48E0
00021542 <AmiBlitz3_wizzard.ab2@4549>    BCS.w JL_0_48CC
00021544 <AmiBlitz3_wizzard.ab2@4550>   MOVE.b (A1),D3
00021548 <AmiBlitz3_wizzard.ab2@4551>   ANDI.w #$7,D3
0002154C <AmiBlitz3_wizzard.ab2@4552>    BEQ.w JL_0_48CC
0002154E <AmiBlitz3_wizzard.ab2@4553>   MOVE.w D2,D4
00021550 <AmiBlitz3_wizzard.ab2@4554>   SUB.w D3,D4
00021552 <AmiBlitz3_wizzard.ab2@4555>   MOVEQ.l #$00,D5
00021554 <AmiBlitz3_wizzard.ab2@4556>   MOVE.w D1,D5
00021556 <AmiBlitz3_wizzard.ab2@4557>   SUB.w D4,D5
00021558 <AmiBlitz3_wizzard.ab2@4558>   DIVU D3,D5
0002155A <AmiBlitz3_wizzard.ab2@4559>   SWAP D5
0002155C <AmiBlitz3_wizzard.ab2@4560>   TST.w D5
00021560 <AmiBlitz3_wizzard.ab2@4561>    BEQ.w JL_0_48E0
00021562 <AmiBlitz3_wizzard.ab2@4564>   ADDQ.w #2,A1
00021564 <AmiBlitz3_wizzard.ab2@4565>   ADDA.w D2,A1
00021568 <AmiBlitz3_wizzard.ab2@4566>    BSR.w aligna1
0002156C <AmiBlitz3_wizzard.ab2@4567>    BSR.w skiplibreg
00021570 <AmiBlitz3_wizzard.ab2@4568>   LEA $C(A1),A1
00021574 <AmiBlitz3_wizzard.ab2@4569> BRA.w JL_0_489A
00021576 <AmiBlitz3_wizzard.ab2@4572>   MOVE.w (a3),d2
0002157A <AmiBlitz3_wizzard.ab2@4573>   BTST #1,d2
0002157E <AmiBlitz3_wizzard.ab2@4574>   BEQ statement_
00021582 <AmiBlitz3_wizzard.ab2@4575>   CMP.w #1,d1
00021586 <AmiBlitz3_wizzard.ab2@4576>   BEQ statement_
0002158A <AmiBlitz3_wizzard.ab2@4579>   CMP.b #$20,(a5)+
0002158E <AmiBlitz3_wizzard.ab2@4580>   BEQ 'l2
00021594 <AmiBlitz3_wizzard.ab2@4581>   CMP.b #"(",-2(a5)
00021598 <AmiBlitz3_wizzard.ab2@4582>   BNE 'l1
0002159C <AmiBlitz3_wizzard.ab2@4583> BRA parameter_
000215A0 <AmiBlitz3_wizzard.ab2@4586> BRA inbrackets_
000215A2 <AmiBlitz3_wizzard.ab2@4589>   MOVE.b (A1),D2
000215A4 <AmiBlitz3_wizzard.ab2@4590>   LSL.w #8,D2
000215A6 <AmiBlitz3_wizzard.ab2@4591>   OR.w D2,D1
000215A8 <AmiBlitz3_wizzard.ab2@4592>   MOVE.l A1,-(A7)
000215AE <AmiBlitz3_wizzard.ab2@4593>   CLR.w a2offset
000215B0 <AmiBlitz3_wizzard.ab2@4594>   TST.w D1
000215B4 <AmiBlitz3_wizzard.ab2@4595>    BEQ.w JL_0_4900
000215B8 <AmiBlitz3_wizzard.ab2@4596>   LEA $2(A1),A2
000215BE <AmiBlitz3_wizzard.ab2@4598>   MOVE.l lasttoken,-(a7)
000215C4 <AmiBlitz3_wizzard.ab2@4599>   CLR.l lasttoken
000215C8 <AmiBlitz3_wizzard.ab2@4600>   BSR.w fetchlibps
000215CE <AmiBlitz3_wizzard.ab2@4601>   MOVE.l (a7)+,lasttoken
000215D2 <AmiBlitz3_wizzard.ab2@4602> BRA.w JL_0_4904
000215D6 <AmiBlitz3_wizzard.ab2@4605>   BSR.w get1bytemain
000215D8 <AmiBlitz3_wizzard.ab2@4608>   MOVEA.l (A7)+,A1
000215DA <AmiBlitz3_wizzard.ab2@4609>   MOVEA.l (A7)+,A2
000215E0 <AmiBlitz3_wizzard.ab2@4610>   MOVE.w a2offset,D1
000215E4 <AmiBlitz3_wizzard.ab2@4611>    BEQ.w JL_0_493A
000215EA <AmiBlitz3_wizzard.ab2@4612>   MOVE.w D1,preplibst+2
000215F0 <AmiBlitz3_wizzard.ab2@4613>   MOVE.l preplibst,D1
000215F6 <AmiBlitz3_wizzard.ab2@4614>    JSR writelong                                           ;write array offset stack correct
00021600 <AmiBlitz3_wizzard.ab2@4615>   MOVE.w numreps,movenumrep+2
00021604 <AmiBlitz3_wizzard.ab2@4616>    BEQ.w JL_0_493A
0002160A <AmiBlitz3_wizzard.ab2@4617>   MOVE.l movenumrep,D1
00021610 <AmiBlitz3_wizzard.ab2@4618>    JSR writelong
00021616 <AmiBlitz3_wizzard.ab2@4622>   JSR userjsr
0002161C <AmiBlitz3_wizzard.ab2@4625>   MOVE.w a2offset,D1
00021620 <AmiBlitz3_wizzard.ab2@4626>    BEQ.w JL_0_4974
00021624 <AmiBlitz3_wizzard.ab2@4627>   CMP.w #$8,D1
00021628 <AmiBlitz3_wizzard.ab2@4628>    BHI.w JL_0_4964
0002162C <AmiBlitz3_wizzard.ab2@4629>   ANDI.w #$7,D1
0002162E <AmiBlitz3_wizzard.ab2@4630>   LSL.w #8,D1
00021630 <AmiBlitz3_wizzard.ab2@4631>   LSL.w #1,D1
00021634 <AmiBlitz3_wizzard.ab2@4632>   ORI.w #$504F,D1
0002163A <AmiBlitz3_wizzard.ab2@4634>   JSR writeword
0002163E <AmiBlitz3_wizzard.ab2@4635> BRA.w JL_0_4974
00021644 <AmiBlitz3_wizzard.ab2@4638>   MOVE.w D1,fixlibst+2
0002164A <AmiBlitz3_wizzard.ab2@4639>   MOVE.l fixlibst,D1
00021650 <AmiBlitz3_wizzard.ab2@4640>   JSR writelong
00021656 <AmiBlitz3_wizzard.ab2@4643>   MOVE.w (A7)+,a2offset
0002165C <AmiBlitz3_wizzard.ab2@4644>   MOVE.w (A7)+,userp
00021662 <AmiBlitz3_wizzard.ab2@4645>   MOVE.w (A7)+,numreps
00021666 <AmiBlitz3_wizzard.ab2@4646> BRA.w reget
0002166A <AmiBlitz3_wizzard.ab2@4650>   MOVEM.l A2-A3,-(A7)
00021670 <AmiBlitz3_wizzard.ab2@4651>   CLR.b doublepeek
00021676 <AmiBlitz3_wizzard.ab2@4652>   MOVE.l A5,lastsourcepos
0002167A <AmiBlitz3_wizzard.ab2@4653>    BSR.w getchar
0002167E <AmiBlitz3_wizzard.ab2@4654>   CMP.w #$2E,D0
00021682 <AmiBlitz3_wizzard.ab2@4655>    BEQ.w JL_0_49B4
00021688 <AmiBlitz3_wizzard.ab2@4656>   MOVEA.l defaulttype,A2
0002168C <AmiBlitz3_wizzard.ab2@4657>   CMP.w #$24,D0
00021690 <AmiBlitz3_wizzard.ab2@4658>    BNE.w JL_0_49CA
00021692 <AmiBlitz3_wizzard.ab2@4659>   MOVEQ.l #$07,D1
00021696 <AmiBlitz3_wizzard.ab2@4660> BRA.w JL_0_49DE
0002169A <AmiBlitz3_wizzard.ab2@4663>   BSR.w getparameter2
0002169E <AmiBlitz3_wizzard.ab2@4664>   BEQ.w syntaxerr
000216A4 <AmiBlitz3_wizzard.ab2@4665>   LEA newtypebase,A2
000216A8 <AmiBlitz3_wizzard.ab2@4666>   BSR.w findtype
000216AC <AmiBlitz3_wizzard.ab2@4667>   BNE.w notypeerr
000216B6 <AmiBlitz3_wizzard.ab2@4671>   MOVE.w oldqflag,instringon
000216BC <AmiBlitz3_wizzard.ab2@4672>   MOVEA.l lastsourcepos,A5
000216C0 <AmiBlitz3_wizzard.ab2@4677>   MOVE.w $6(A2),D1
000216C6 <AmiBlitz3_wizzard.ab2@4678>   CMP.w #8,8(a2)
000216CA <AmiBlitz3_wizzard.ab2@4679>   BNE 'l1
000216D2 <AmiBlitz3_wizzard.ab2@4680>   MOVE.b #1,doublepeek
000216D8 <AmiBlitz3_wizzard.ab2@4684>   MOVE.w D1,convsize
000216DC <AmiBlitz3_wizzard.ab2@4685>   MOVEM.l (A7)+,A2-A3
000216DE <AmiBlitz3_wizzard.ab2@4686> RTS
000216E4 <AmiBlitz3_wizzard.ab2@4691>   BTST #$3,$1(A3)
000216E8 <AmiBlitz3_wizzard.ab2@4692>   BEQ.w JL_0_4A06
000216EC <AmiBlitz3_wizzard.ab2@4693>   BSR.w AJL_0_498A                                         ;read peek/poke size
000216F0 <AmiBlitz3_wizzard.ab2@4695>   ORI.w #$7000,D1
000216F6 <AmiBlitz3_wizzard.ab2@4696>   JSR writeword
000216FC <AmiBlitz3_wizzard.ab2@4697>   ADDQ.w #1,regnum
000216FE <AmiBlitz3_wizzard.ab2@4700> RTS
00021700 <AmiBlitz3_wizzard.ab2@4706>             Dc.b $10,$12                                   ;MOVE.B  (A2),D0
00021702 <AmiBlitz3_wizzard.ab2@4707>             Dc.b $14,$91                                   ;MOVE.B  (A1),(A2)
00021704 <AmiBlitz3_wizzard.ab2@4708>             Dc.b $12,$80                                   ;MOVE.B  D0,(A1)
00021706 <AmiBlitz3_wizzard.ab2@4712> swapw:      Dc.b $30,$12                                   ;MOVE.W  (A2),D0
00021708 <AmiBlitz3_wizzard.ab2@4713>             Dc.b $34,$91                                   ;MOVE.W  (A1),(A2)
0002170A <AmiBlitz3_wizzard.ab2@4714>             Dc.b $32,$80                                   ;MOVE.W  D0,(A1)
0002170C <AmiBlitz3_wizzard.ab2@4718> swapl:      Dc.b $20,$12                                   ;MOVE.L  (A2),D0
0002170E <AmiBlitz3_wizzard.ab2@4719>             Dc.b $24,$91                                   ;MOVE.L  (A1),(A2)
00021710 <AmiBlitz3_wizzard.ab2@4720>             Dc.b $22,$80                                   ;MOVE.L  D0,(A1)
00021712 <AmiBlitz3_wizzard.ab2@4724> pulla1:     Dc.b $22,$5F                                   ;MOVEA.L (A7)+,A1
00021714 <AmiBlitz3_wizzard.ab2@4727> srctype:    Ds.w 1
00021718 <AmiBlitz3_wizzard.ab2@4732>   BSR.w excget
0002171C <AmiBlitz3_wizzard.ab2@4733>   CMP.w #$2C,D0
00021720 <AmiBlitz3_wizzard.ab2@4734>    BNE.w syntaxerr
00021726 <AmiBlitz3_wizzard.ab2@4735>   MOVE.b D2,srctype
0002172C <AmiBlitz3_wizzard.ab2@4736>   MOVE.w pusha2,D1
00021732 <AmiBlitz3_wizzard.ab2@4737>   JSR writeword
00021736 <AmiBlitz3_wizzard.ab2@4738>   BSR.w get1bytemain
0002173A <AmiBlitz3_wizzard.ab2@4739>   BSR.w excget
00021740 <AmiBlitz3_wizzard.ab2@4740>   CMP.b srctype,D2
00021744 <AmiBlitz3_wizzard.ab2@4741>    BNE.w excerr2
0002174A <AmiBlitz3_wizzard.ab2@4742>   MOVE.w pulla1,D1
00021750 <AmiBlitz3_wizzard.ab2@4743>    JSR writeword
00021754 <AmiBlitz3_wizzard.ab2@4744>   CMP.b #$2,D2
00021758 <AmiBlitz3_wizzard.ab2@4745>    BCS.w JL_0_4B2A
0002175C <AmiBlitz3_wizzard.ab2@4746>    BEQ.w JL_0_4B1E
00021760 <AmiBlitz3_wizzard.ab2@4747>   LEA swapl(PC),A0
00021764 <AmiBlitz3_wizzard.ab2@4748>   LEA swaplf(PC),A1
0002176A <AmiBlitz3_wizzard.ab2@4749> JMP pokecode
0002176E <AmiBlitz3_wizzard.ab2@4752>   LEA swapw(PC),A0
00021772 <AmiBlitz3_wizzard.ab2@4753>   LEA swapwf(PC),A1
00021778 <AmiBlitz3_wizzard.ab2@4754> JMP pokecode
0002177C <AmiBlitz3_wizzard.ab2@4757>   LEA swapb(PC),A0
00021780 <AmiBlitz3_wizzard.ab2@4758>   LEA swapbf(PC),A1
00021786 <AmiBlitz3_wizzard.ab2@4759> JMP pokecode
0002178C <AmiBlitz3_wizzard.ab2@4763>   JSR getparameter
00021790 <AmiBlitz3_wizzard.ab2@4764>   BSR.w JL_0_8E3C
00021794 <AmiBlitz3_wizzard.ab2@4765>   BSR.w calcvar
00021798 <AmiBlitz3_wizzard.ab2@4766>   BTST #$E,D2
0002179C <AmiBlitz3_wizzard.ab2@4767>    BEQ.w JL_0_4B4E
000217A0 <AmiBlitz3_wizzard.ab2@4768>   MOVE.b #$4,D2
000217A2 <AmiBlitz3_wizzard.ab2@4771>   TST.b D2
000217A6 <AmiBlitz3_wizzard.ab2@4772>    BEQ.w excerr
000217AA <AmiBlitz3_wizzard.ab2@4773>   BTST #$F,D2
000217AE <AmiBlitz3_wizzard.ab2@4774>    BNE.w JL_0_4B6A
000217B4 <AmiBlitz3_wizzard.ab2@4775>   MOVE.w leaamp,D1
000217BA <AmiBlitz3_wizzard.ab2@4776>    JSR pokewda5s
000217BC <AmiBlitz3_wizzard.ab2@4777>   MOVE.w D3,D1
000217C2 <AmiBlitz3_wizzard.ab2@4778> JMP writeword
000217C4 <AmiBlitz3_wizzard.ab2@4781> RTS
000217CA <AmiBlitz3_wizzard.ab2@4787>   MOVE.l mempool,a0
000217D0 <AmiBlitz3_wizzard.ab2@4788>   MOVEA.l _execbase,A6
000217D4 <AmiBlitz3_wizzard.ab2@4789> JMP _AllocPooled(a6)
000217D8 <AmiBlitz3_wizzard.ab2@4796>   MOVE.w #$BF00,D1
000217DE <AmiBlitz3_wizzard.ab2@4797> JMP Atokejsr
000217E2 <AmiBlitz3_wizzard.ab2@4801>   CMP.w #-$7FFA,D0
000217E6 <AmiBlitz3_wizzard.ab2@4802>    BEQ.w popreturn
000217EA <AmiBlitz3_wizzard.ab2@4803>   CMP.w #-$7FEA,D0
000217EE <AmiBlitz3_wizzard.ab2@4804>    BEQ.w popnext2
000217F2 <AmiBlitz3_wizzard.ab2@4805>   CMP.w #-$7FF2,D0
000217F6 <AmiBlitz3_wizzard.ab2@4806>    BEQ.w popselect2
000217FA <AmiBlitz3_wizzard.ab2@4807>   CMP.w #-$7FF5,D0
000217FE <AmiBlitz3_wizzard.ab2@4808>    BEQ.w get1bytemain
00021802 <AmiBlitz3_wizzard.ab2@4809>   CMP.w #-$7FF4,D0
00021806 <AmiBlitz3_wizzard.ab2@4810>    BEQ.w get1bytemain
0002180A <AmiBlitz3_wizzard.ab2@4811>   CMP.w #-$7FEC,D0
0002180E <AmiBlitz3_wizzard.ab2@4812>    BEQ.w get1bytemain
00021812 <AmiBlitz3_wizzard.ab2@4813>   CMP.w #-$7F45,D0
00021816 <AmiBlitz3_wizzard.ab2@4814>    BEQ.w get1bytemain
0002181A <AmiBlitz3_wizzard.ab2@4815> BRA.w syntaxerr
00021820 <AmiBlitz3_wizzard.ab2@4818>   TST.b debugmode
00021824 <AmiBlitz3_wizzard.ab2@4819>    BEQ.w popreturn__norerr
00021828 <AmiBlitz3_wizzard.ab2@4820>   LEA popreturn__rfix(PC),A0
0002182C <AmiBlitz3_wizzard.ab2@4821>   LEA popreturn__rfixf(PC),A1
00021832 <AmiBlitz3_wizzard.ab2@4822>    JSR pokecode
00021836 <AmiBlitz3_wizzard.ab2@4823>   MOVE.w #$C305,D1
0002183C <AmiBlitz3_wizzard.ab2@4824>    JSR Atokejsr
00021840 <AmiBlitz3_wizzard.ab2@4825>   MOVE.w popreturn__rfix2(PC),D1
00021846 <AmiBlitz3_wizzard.ab2@4827>    JSR writeword
0002184A <AmiBlitz3_wizzard.ab2@4828> BRA.w get1bytemain
00021850 <AmiBlitz3_wizzard.ab2@4832>   CMPI.w #$6753,$4(A7)                                     ;#"gS",4(A7)
00021854 <AmiBlitz3_wizzard.ab2@4833>   BEQ.w popreturn__rfix2
0002185A <AmiBlitz3_wizzard.ab2@4836>   JSR $20000                                               ;reass
0002185C <AmiBlitz3_wizzard.ab2@4839>   ADDQ.w #6,A7
00021860 <AmiBlitz3_wizzard.ab2@4843>   MOVE.w popreturn__sfix(PC),D1
00021866 <AmiBlitz3_wizzard.ab2@4844>   JSR writeword
0002186A <AmiBlitz3_wizzard.ab2@4845> BRA.w get1bytemain
0002186C <AmiBlitz3_wizzard.ab2@4850>   Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
00021872 <AmiBlitz3_wizzard.ab2@4855>   MOVE.l firstfor,D0
00021876 <AmiBlitz3_wizzard.ab2@4856>    BEQ.w noforerr
00021878 <AmiBlitz3_wizzard.ab2@4857>   MOVEA.l D0,A2
0002187C <AmiBlitz3_wizzard.ab2@4858>    BSR.w get1bytemain
00021880 <AmiBlitz3_wizzard.ab2@4859>   BSR.w popnext
00021886 <AmiBlitz3_wizzard.ab2@4862>   TST.b debugmode
0002188A <AmiBlitz3_wizzard.ab2@4863>    BEQ.w popnext3__ner
00021890 <AmiBlitz3_wizzard.ab2@4864>   MOVE.l nextfixw2,D1
00021896 <AmiBlitz3_wizzard.ab2@4865>   CMPI.w #$3,$C(A2)
0002189A <AmiBlitz3_wizzard.ab2@4866>    BCS.w writelong2
000218A0 <AmiBlitz3_wizzard.ab2@4867>   MOVE.l nextfixl2,D1
000218A6 <AmiBlitz3_wizzard.ab2@4868> writelong2 JMP  writelong
000218AC <AmiBlitz3_wizzard.ab2@4871>   CMPI.w #$3,$C(A2)
000218B0 <AmiBlitz3_wizzard.ab2@4872>    BCS.w popnext3__skip2
000218B6 <AmiBlitz3_wizzard.ab2@4873>   MOVE.l nextfixl,D1
000218BC <AmiBlitz3_wizzard.ab2@4874>   JMP writelong
000218C2 <AmiBlitz3_wizzard.ab2@4877>   MOVE.w nextfixw,D1
000218C8 <AmiBlitz3_wizzard.ab2@4878> JMP writeword
000218CC <AmiBlitz3_wizzard.ab2@4882>   MOVE.w $C(A2),D0
000218D2 <AmiBlitz3_wizzard.ab2@4883>   TST.b debugmode
000218D6 <AmiBlitz3_wizzard.ab2@4884>    BEQ.w popnext__norunerr
000218DA <AmiBlitz3_wizzard.ab2@4885>   MOVE.w #$C306,D1
000218DE <AmiBlitz3_wizzard.ab2@4886>   CMP.w #$3,D0
000218E2 <AmiBlitz3_wizzard.ab2@4887>    BCS.w popnext__oktc
000218E4 <AmiBlitz3_wizzard.ab2@4888>   ADDQ.w #1,D1
000218E6 <AmiBlitz3_wizzard.ab2@4891>   MOVE.l A2,-(A7)
000218EC <AmiBlitz3_wizzard.ab2@4892>   JSR Atokejsr
000218EE <AmiBlitz3_wizzard.ab2@4893>   MOVEA.l (A7)+,A2
000218F0 <AmiBlitz3_wizzard.ab2@4896> RTS
000218F6 <AmiBlitz3_wizzard.ab2@4900>   MOVE.l firstsel,D0
000218FA <AmiBlitz3_wizzard.ab2@4901>    BEQ.w eselerr
000218FC <AmiBlitz3_wizzard.ab2@4902>   MOVEA.l D0,A2
00021900 <AmiBlitz3_wizzard.ab2@4903>    BSR.w get1bytemain
00021904 <AmiBlitz3_wizzard.ab2@4906>   MOVE.w $C(A2),D2
0002190A <AmiBlitz3_wizzard.ab2@4907>   TST.b debugmode
0002190E <AmiBlitz3_wizzard.ab2@4908>    BEQ.w popselect__norerr
00021912 <AmiBlitz3_wizzard.ab2@4909>   MOVE.w #$C313,D1
00021916 <AmiBlitz3_wizzard.ab2@4910>   CMP.w #$3,D2
0002191A <AmiBlitz3_wizzard.ab2@4911>    BCS.w popselect__chkit
0002191C <AmiBlitz3_wizzard.ab2@4912>   ADDQ.w #1,D1
00021922 <AmiBlitz3_wizzard.ab2@4915>   JSR Atokejsr                                             ;make sure next thing on stack
00021924 <AmiBlitz3_wizzard.ab2@4919>   MOVEQ.l #$02,D1
00021928 <AmiBlitz3_wizzard.ab2@4920>   CMP.w #$3,D2
0002192C <AmiBlitz3_wizzard.ab2@4921>    BCS.w popselect__doit
0002192E <AmiBlitz3_wizzard.ab2@4922>   MOVEQ.l #$04,D1
00021932 <AmiBlitz3_wizzard.ab2@4923>   CMP.w #$7,D2
00021936 <AmiBlitz3_wizzard.ab2@4924>    BCS.w popselect__doit
0002193C <AmiBlitz3_wizzard.ab2@4925>   LEA endselstr,A0
00021942 <AmiBlitz3_wizzard.ab2@4926>   LEA endselstrf,A1
00021948 <AmiBlitz3_wizzard.ab2@4927>   TST.b debugmode
0002194C <AmiBlitz3_wizzard.ab2@4928>    BEQ.w popselect__norerr3
00021952 <AmiBlitz3_wizzard.ab2@4929>   LEA endselstrf2,A1
00021958 <AmiBlitz3_wizzard.ab2@4932>   JSR pokecode
0002195C <AmiBlitz3_wizzard.ab2@4933>   MOVE.w #$C003,D1                                         ;global freemem
00021962 <AmiBlitz3_wizzard.ab2@4934> JMP Atokejsr
00021968 <AmiBlitz3_wizzard.ab2@4937>   TST.b debugmode
0002196C <AmiBlitz3_wizzard.ab2@4938>    BEQ.w popselect__norerr2
0002196E <AmiBlitz3_wizzard.ab2@4939>   ADDQ.w #2,D1                                             ;for the "sE"
00021970 <AmiBlitz3_wizzard.ab2@4942>   LSL.w #8,D1
00021972 <AmiBlitz3_wizzard.ab2@4943>   LSL.w #1,D1
00021978 <AmiBlitz3_wizzard.ab2@4944>   OR.w endsel,D1
0002197E <AmiBlitz3_wizzard.ab2@4945> JMP writeword
00021982 <AmiBlitz3_wizzard.ab2@4948> firstrep:    Ds.l 1
00021986 <AmiBlitz3_wizzard.ab2@4949> replineat:   Ds.l 1
0002198C <AmiBlitz3_wizzard.ab2@4958>   CLR.l fp0addr
00021996 <AmiBlitz3_wizzard.ab2@4959>   MOVE.l linenumat,replineat
00021998 <AmiBlitz3_wizzard.ab2@4960>   MOVEQ.l #$08,D0
0002199E <AmiBlitz3_wizzard.ab2@4961>   MOVEA.l _execbase,A6
000219A4 <AmiBlitz3_wizzard.ab2@4962>   MOVE.l mempool,a0
000219A8 <AmiBlitz3_wizzard.ab2@4963>   JSR _AllocPooled(a6)
000219AA <AmiBlitz3_wizzard.ab2@4965>   MOVEA.l D0,A0
000219AE <AmiBlitz3_wizzard.ab2@4966>   MOVE.l firstrep(PC),(A0)
000219B4 <AmiBlitz3_wizzard.ab2@4967>   MOVE.l A0,firstrep
000219BC <AmiBlitz3_wizzard.ab2@4968>   MOVE.l destpointer,$4(A0)
000219BE <AmiBlitz3_wizzard.ab2@4969> RTS
000219C4 <AmiBlitz3_wizzard.ab2@4972> str_temp:  Ds.w 3                                            ;infochk  ds.b 6 org source
000219C8 <AmiBlitz3_wizzard.ab2@4975>   LEA str_temp(PC),A1
000219CA <AmiBlitz3_wizzard.ab2@4976>   CLR.w (A1)
000219CE <AmiBlitz3_wizzard.ab2@4977>   CLR.l $2(A1)
000219D0 <AmiBlitz3_wizzard.ab2@4980>   MOVEQ.l #$04,D0
000219D4 <AmiBlitz3_wizzard.ab2@4983>     MOVE.b $1(A1),(A1)+
000219D8 <AmiBlitz3_wizzard.ab2@4984>   DBF D0,check_for_infoextention__loop
000219DC <AmiBlitz3_wizzard.ab2@4989>   LEA str_temp(PC),A1
000219DE <AmiBlitz3_wizzard.ab2@4990>   MOVE.b (A0),D0
000219E2 <AmiBlitz3_wizzard.ab2@4991>   ORI.b #$20,D0
000219E6 <AmiBlitz3_wizzard.ab2@4992>   MOVE.b D0,$5(A1)
000219E8 <AmiBlitz3_wizzard.ab2@4993>   TST.b (A0)+
000219EC <AmiBlitz3_wizzard.ab2@4994>    BNE.w check_for_infoextention__loop2
000219F0 <AmiBlitz3_wizzard.ab2@4995>   CMPI.w #$2E69,(A1)+                                      ;".i"
000219F4 <AmiBlitz3_wizzard.ab2@4996>    BNE.w check_for_infoextention__no
000219FA <AmiBlitz3_wizzard.ab2@4997>   CMPI.l #$6E666F20,(A1)                                   ;"nfo "
000219FC <AmiBlitz3_wizzard.ab2@5000> RTS
00021A00 <AmiBlitz3_wizzard.ab2@5004>   BPL.w gettokeps__evaltoke
00021A02 <AmiBlitz3_wizzard.ab2@5005>   MOVE.w D0,D1
00021A06 <AmiBlitz3_wizzard.ab2@5006>   ANDI.w #$7F80,D1
00021A0A <AmiBlitz3_wizzard.ab2@5007>    BEQ.w tokeerr
00021A0E <AmiBlitz3_wizzard.ab2@5008>   BCLR #$F,D0
00021A10 <AmiBlitz3_wizzard.ab2@5009>   MOVE.w D0,D4                                             ;got toke number
00021A14 <AmiBlitz3_wizzard.ab2@5010>   BSR.w get1bytemain
00021A18 <AmiBlitz3_wizzard.ab2@5011> BRA.w gettokeps__gotnum
00021A1E <AmiBlitz3_wizzard.ab2@5014>   JSR JL_0_BF6A
00021A24 <AmiBlitz3_wizzard.ab2@5015>   CMP.l #MaxWord,D3
00021A28 <AmiBlitz3_wizzard.ab2@5016>    BHI.w tokeerr
00021A2A <AmiBlitz3_wizzard.ab2@5017>   TST.w D6
00021A2E <AmiBlitz3_wizzard.ab2@5018>    BNE.w tokeerr
00021A30 <AmiBlitz3_wizzard.ab2@5019>   MOVE.w D3,D4
00021A32 <AmiBlitz3_wizzard.ab2@5022>   MOVEQ.l #$00,D5
00021A36 <AmiBlitz3_wizzard.ab2@5023>   CMP.w #$2C,D0
00021A3A <AmiBlitz3_wizzard.ab2@5024>    BNE.w gettokeps__gotfrom
00021A3C <AmiBlitz3_wizzard.ab2@5025>   MOVE.w D4,-(A7)
00021A42 <AmiBlitz3_wizzard.ab2@5026>    JSR AJL_0_BF6E
00021A48 <AmiBlitz3_wizzard.ab2@5027>   CMP.l #MaxWord,D3
00021A4C <AmiBlitz3_wizzard.ab2@5028>    BHI.w tokeerr
00021A4E <AmiBlitz3_wizzard.ab2@5029>   TST.w D6
00021A52 <AmiBlitz3_wizzard.ab2@5030>    BNE.w tokeerr
00021A54 <AmiBlitz3_wizzard.ab2@5031>   MOVE.w D3,D5
00021A56 <AmiBlitz3_wizzard.ab2@5032>   MOVE.w (A7)+,D4
00021A58 <AmiBlitz3_wizzard.ab2@5035> RTS                                                        ;d4=toke, d5=form
00021A5A <AmiBlitz3_wizzard.ab2@5039>   TST.w D0
00021A5E <AmiBlitz3_wizzard.ab2@5040>    BSR.w gettokeps
00021A62 <AmiBlitz3_wizzard.ab2@5041>   MOVE.w #$4EB9,D1
00021A68 <AmiBlitz3_wizzard.ab2@5042>   JSR writeword
00021A6C <AmiBlitz3_wizzard.ab2@5043>   BSR.w addoff
00021A6E <AmiBlitz3_wizzard.ab2@5044>   MOVE.w D5,D1
00021A72 <AmiBlitz3_wizzard.ab2@5045>   ORI.w #$8000,D1                                          ;Toke of Amiga type.
00021A74 <AmiBlitz3_wizzard.ab2@5046>   SWAP D1
00021A76 <AmiBlitz3_wizzard.ab2@5047>   MOVE.w D4,D1
00021A7C <AmiBlitz3_wizzard.ab2@5048> JMP writelong
00021A7E <AmiBlitz3_wizzard.ab2@5052>   TST.w D0
00021A82 <AmiBlitz3_wizzard.ab2@5053>    BSR.w gettokeps
00021A86 <AmiBlitz3_wizzard.ab2@5054>   MOVE.w #$4EB9,D1
00021A8C <AmiBlitz3_wizzard.ab2@5055>   JSR writeword
00021A90 <AmiBlitz3_wizzard.ab2@5056>   BSR.w addoff
00021A92 <AmiBlitz3_wizzard.ab2@5057>   MOVE.w D5,D1
00021A96 <AmiBlitz3_wizzard.ab2@5058>   ORI.w #$C000,D1                                          ;Toke of Blitz type.
00021A98 <AmiBlitz3_wizzard.ab2@5059>   SWAP D1
00021A9A <AmiBlitz3_wizzard.ab2@5060>   MOVE.w D4,D1
00021AA0 <AmiBlitz3_wizzard.ab2@5061>   JMP writelong
00021AA6 <AmiBlitz3_wizzard.ab2@5065>   JSR JL_0_BF6A
00021AAC <AmiBlitz3_wizzard.ab2@5066>   CMP.l #$10000,D3
00021AB0 <AmiBlitz3_wizzard.ab2@5067>    BCC.w tokeerr
00021AB2 <AmiBlitz3_wizzard.ab2@5068>   MOVE.w D3,D1
00021AB8 <AmiBlitz3_wizzard.ab2@5069> JMP Atokejsr
00021ABC <AmiBlitz3_wizzard.ab2@5073>   BSR.w gettokeps
00021AC0 <AmiBlitz3_wizzard.ab2@5074>   MOVE.w #$4EB9,D1
00021AC6 <AmiBlitz3_wizzard.ab2@5075>   JSR writeword
00021ACC <AmiBlitz3_wizzard.ab2@5076>   MOVE.l destpointer,D3
00021AD4 <AmiBlitz3_wizzard.ab2@5077>   BTST #$7,blitzmode
00021AD8 <AmiBlitz3_wizzard.ab2@5078>    BEQ.w do_TokeJsr__inamiga
00021ADC <AmiBlitz3_wizzard.ab2@5079>   BSET #$E,D5
00021AE0 <AmiBlitz3_wizzard.ab2@5082>   BSR.w JL_0_6E86
00021AE4 <AmiBlitz3_wizzard.ab2@5083>   BSR.w addoff
00021AEA <AmiBlitz3_wizzard.ab2@5084>   JMP writelong
00021AEE <AmiBlitz3_wizzard.ab2@5088>   BEQ.w do_VWait__zero
00021AF0 <AmiBlitz3_wizzard.ab2@5089>   MOVEQ.l #$02,D2                                          ;get a word
00021AF6 <AmiBlitz3_wizzard.ab2@5091>   JSR bakeval
00021AFA <AmiBlitz3_wizzard.ab2@5092>   MOVE.w fvwait(PC),D1
00021AFE <AmiBlitz3_wizzard.ab2@5093> BRA.w do_VWait__vcont
00021B02 <AmiBlitz3_wizzard.ab2@5096>   MOVE.w #$7000,D1                                         ;moveq #0,d0
00021B08 <AmiBlitz3_wizzard.ab2@5099>   JSR writeword
00021B0C <AmiBlitz3_wizzard.ab2@5100>   MOVE.w #$C104,D1
00021B12 <AmiBlitz3_wizzard.ab2@5101> JMP Atokejsr
00021B14 <AmiBlitz3_wizzard.ab2@5105>   SUBQ.w #1,D0
00021B1A <AmiBlitz3_wizzard.ab2@5108>   Dc.w $3b7c,$ffff,0                                       ;move.w #$FFFF,$0(A5) ;noopt
00021B1E <AmiBlitz3_wizzard.ab2@5111>   Dc.l $426d0001                                           ;clr.w $0(A5)
00021B22 <AmiBlitz3_wizzard.ab2@5115>   MOVE.b debugmode(PC),D1
00021B26 <AmiBlitz3_wizzard.ab2@5116>   BEQ.b debugmode_codelabel__skip
00021B2A <AmiBlitz3_wizzard.ab2@5117>   MOVE.w #$D500,D1
00021B30 <AmiBlitz3_wizzard.ab2@5118> JMP Atokejsr
00021B32 <AmiBlitz3_wizzard.ab2@5121> RTS
00021B3A <AmiBlitz3_wizzard.ab2@5125>   BSET #$0,blitzmode
00021B42 <AmiBlitz3_wizzard.ab2@5126>   BSET #$7,blitzmode
00021B46 <AmiBlitz3_wizzard.ab2@5127>   MOVE.w #$C200,D1
00021B4C <AmiBlitz3_wizzard.ab2@5128>   JSR Atokejsr
00021B52 <AmiBlitz3_wizzard.ab2@5129>   TST.b debugmode
00021B56 <AmiBlitz3_wizzard.ab2@5130>    BEQ.w do_BLITZ__done
00021B5A <AmiBlitz3_wizzard.ab2@5131>   MOVE.w cgoblitz(PC),D1
00021B60 <AmiBlitz3_wizzard.ab2@5132>   JSR writeword
00021B62 <AmiBlitz3_wizzard.ab2@5133>   MOVEQ.l #-$01,D1
00021B68 <AmiBlitz3_wizzard.ab2@5134>   JSR writeword
00021B6E <AmiBlitz3_wizzard.ab2@5135>   JSR getbbase
00021B74 <AmiBlitz3_wizzard.ab2@5136>   JSR writeword
00021B78 <AmiBlitz3_wizzard.ab2@5139> BRA.w debugmode_codelabel
00021B7C <AmiBlitz3_wizzard.ab2@5143>   MOVE.w #$C201,D1
00021B80 <AmiBlitz3_wizzard.ab2@5144> BRA.w do_AMIGA__toamode
00021B84 <AmiBlitz3_wizzard.ab2@5148>   MOVE.W  #$C202,D1
00021B8C <AmiBlitz3_wizzard.ab2@5151>   BSET #$0,blitzmode
00021B94 <AmiBlitz3_wizzard.ab2@5152>   BCLR #$7,blitzmode
00021B9A <AmiBlitz3_wizzard.ab2@5153>   JSR Atokejsr
00021BA0 <AmiBlitz3_wizzard.ab2@5154>   TST.b debugmode
00021BA4 <AmiBlitz3_wizzard.ab2@5155>    BEQ.w do_AMIGA__done
00021BA8 <AmiBlitz3_wizzard.ab2@5156>   MOVE.w cgoamiga(PC),D1
00021BAE <AmiBlitz3_wizzard.ab2@5157>   JSR writeword
00021BB4 <AmiBlitz3_wizzard.ab2@5158>   JSR getbbase
00021BBA <AmiBlitz3_wizzard.ab2@5159>   JSR writeword
00021BBE <AmiBlitz3_wizzard.ab2@5162> BRA.w debugmode_codelabel
00021BC2 <AmiBlitz3_wizzard.ab2@5166>   MOVEM.l D2-D7/A2-A4,-(A7)
00021BC6 <AmiBlitz3_wizzard.ab2@5169>   MOVEM.l (A7)+,D2-D7/A2-A4
00021BCC <AmiBlitz3_wizzard.ab2@5173>   JSR JL_0_BF6A
00021BD2 <AmiBlitz3_wizzard.ab2@5174>   CMP.l #$E,D3
00021BD6 <AmiBlitz3_wizzard.ab2@5175>    BCC.w interr4
00021BDA <AmiBlitz3_wizzard.ab2@5176>   MOVE.w #$7000,D1
00021BDC <AmiBlitz3_wizzard.ab2@5177>   OR.w D3,D1
00021BE2 <AmiBlitz3_wizzard.ab2@5178>   JSR writeword
00021BE6 <AmiBlitz3_wizzard.ab2@5179>   MOVE.w #$C101,D1
00021BEC <AmiBlitz3_wizzard.ab2@5180> JMP Atokejsr                                               ;clear the interupt
00021BEE <AmiBlitz3_wizzard.ab2@5183> inerr:       Ds.w 1                                        ;flag - in error trap mode
00021BF2 <AmiBlitz3_wizzard.ab2@5184> errjmp:      Ds.l 1                                        ;where err jump is
00021BF6 <AmiBlitz3_wizzard.ab2@5185> errcode:     Ds.l 1
00021BFA <AmiBlitz3_wizzard.ab2@5189>   MOVE.W  #$D202,D1
00021C00 <AmiBlitz3_wizzard.ab2@5190> JMP Atokejsr                                               ;BRA.W Atokejsr
00021C04 <AmiBlitz3_wizzard.ab2@5194>   MOVE.w inerr(PC),D1
00021C08 <AmiBlitz3_wizzard.ab2@5195>    BEQ.w errerr3
00021C0E <AmiBlitz3_wizzard.ab2@5196>   CLR.w inerr
00021C14 <AmiBlitz3_wizzard.ab2@5197>   MOVE.w dontwrite,D1
00021C18 <AmiBlitz3_wizzard.ab2@5198>    BNE.w doendseterr__skip
00021C1C <AmiBlitz3_wizzard.ab2@5199>   MOVEA.l errjmp(PC),A0
00021C22 <AmiBlitz3_wizzard.ab2@5200>   MOVE.l destpointer,(A0)
00021C26 <AmiBlitz3_wizzard.ab2@5203> BRA.w get1bytemain
00021C2A <AmiBlitz3_wizzard.ab2@5207>   MOVE.w #$D205,D1
00021C30 <AmiBlitz3_wizzard.ab2@5208> JMP Atokejsr
00021C36 <AmiBlitz3_wizzard.ab2@5212>   MOVE.w proceduremode,D1
00021C3A <AmiBlitz3_wizzard.ab2@5213>    BNE.w errerr1
00021C3E <AmiBlitz3_wizzard.ab2@5214>   MOVE.w inerr(PC),D1
00021C42 <AmiBlitz3_wizzard.ab2@5215>    BNE.w errerr2
00021C48 <AmiBlitz3_wizzard.ab2@5216>   LEA inerr,a0
00021C4A <AmiBlitz3_wizzard.ab2@5217>   NOT.w (a0)                                               ;reass
00021C4E <AmiBlitz3_wizzard.ab2@5218>   MOVE.w #$203C,D1                                         ;move.l #x,d0
00021C54 <AmiBlitz3_wizzard.ab2@5219>   JSR writeword
00021C5E <AmiBlitz3_wizzard.ab2@5220>   MOVE.l destpointer,errcode
00021C62 <AmiBlitz3_wizzard.ab2@5221>   BSR.w addoff
00021C66 <AmiBlitz3_wizzard.ab2@5222>   BSR.w writelong
00021C6A <AmiBlitz3_wizzard.ab2@5223>   MOVE.w #$D201,D1
00021C70 <AmiBlitz3_wizzard.ab2@5224>   JSR Atokejsr
00021C74 <AmiBlitz3_wizzard.ab2@5225>   MOVE.w #$4EF9,D1                                         ;JMP
00021C78 <AmiBlitz3_wizzard.ab2@5226>   BSR.w writeword
00021C82 <AmiBlitz3_wizzard.ab2@5227>   MOVE.l destpointer,errjmp
00021C86 <AmiBlitz3_wizzard.ab2@5228>   BSR.w addoff
00021C8A <AmiBlitz3_wizzard.ab2@5229>   BSR.w writelong
00021C90 <AmiBlitz3_wizzard.ab2@5230>   MOVE.w dontwrite,D1
00021C94 <AmiBlitz3_wizzard.ab2@5231>    BNE.w do_SetErr__skip
00021C98 <AmiBlitz3_wizzard.ab2@5232>   MOVEA.l errcode(PC),A0
00021C9E <AmiBlitz3_wizzard.ab2@5233>   MOVE.l destpointer,(A0)
00021CA0 <AmiBlitz3_wizzard.ab2@5236> RTS
00021CA4 <AmiBlitz3_wizzard.ab2@5239> intlineat:  Ds.l 1
00021CA6 <AmiBlitz3_wizzard.ab2@5243>   MOVEQ.l #-$01,D1                                        ;type - need new string space
00021CAA <AmiBlitz3_wizzard.ab2@5244>   BSR.w errchx
00021CB0 <AmiBlitz3_wizzard.ab2@5245>   MOVE.w D1,intstring
00021CBA <AmiBlitz3_wizzard.ab2@5246>   MOVE.l linenumat,intlineat
00021CC0 <AmiBlitz3_wizzard.ab2@5247>   JSR JL_0_BF6A                                           ;get constant - int level
00021CC6 <AmiBlitz3_wizzard.ab2@5248>   CMP.l #$E,D3
00021CCA <AmiBlitz3_wizzard.ab2@5249>    BCC.w interr4
00021CD0 <AmiBlitz3_wizzard.ab2@5250>   ST intsused
00021CD6 <AmiBlitz3_wizzard.ab2@5251>   MOVE.w D3,intlevel
00021CDA <AmiBlitz3_wizzard.ab2@5252>   MOVE.w #$7000,D1
00021CDC <AmiBlitz3_wizzard.ab2@5253>   OR.w D3,D1                                              
00021CE0 <AmiBlitz3_wizzard.ab2@5254>   BSR.w writeword                                         ;moveq #x,d0
00021CE4 <AmiBlitz3_wizzard.ab2@5255>   MOVE.w #$223C,D1                                        ;move.l #x,d1
00021CE8 <AmiBlitz3_wizzard.ab2@5256>   BSR.w writeword
00021CEC <AmiBlitz3_wizzard.ab2@5257>   BSR.w addoff
00021CF2 <AmiBlitz3_wizzard.ab2@5258>   MOVE.l destpointer,-(A7)
00021CF6 <AmiBlitz3_wizzard.ab2@5259>   BSR.w writelong
00021CFA <AmiBlitz3_wizzard.ab2@5260>   MOVE.w #$C100,D1
00021D00 <AmiBlitz3_wizzard.ab2@5261>   JSR Atokejsr
00021D04 <AmiBlitz3_wizzard.ab2@5262>   MOVE.w #$4EF9,D1                                        ;jmp
00021D08 <AmiBlitz3_wizzard.ab2@5263>   BSR.w writeword
00021D0C <AmiBlitz3_wizzard.ab2@5264>   BSR.w addoff
00021D16 <AmiBlitz3_wizzard.ab2@5265>   MOVE.l destpointer,intjmpat
00021D1A <AmiBlitz3_wizzard.ab2@5266>   BSR.w writelong
00021D1C <AmiBlitz3_wizzard.ab2@5267>   MOVEA.l (A7)+,A0
00021D22 <AmiBlitz3_wizzard.ab2@5268>   MOVE.w dontwrite,D1
00021D26 <AmiBlitz3_wizzard.ab2@5269>   BNE.w do_SetInt__dontpoke
00021D2C <AmiBlitz3_wizzard.ab2@5270>   MOVE.l destpointer,(A0)
00021D30 <AmiBlitz3_wizzard.ab2@5273>   MOVE.l intstart0(PC),D1
00021D34 <AmiBlitz3_wizzard.ab2@5274>   BSR.w writelong
00021D3A <AmiBlitz3_wizzard.ab2@5275>   TST.b debugmode
00021D3E <AmiBlitz3_wizzard.ab2@5276>    BEQ.w do_SetInt__norerr
00021D40 <AmiBlitz3_wizzard.ab2@5280>   MOVEQ.l #$02,D1
00021D44 <AmiBlitz3_wizzard.ab2@5281>   BSR.w writetrap
00021D48 <AmiBlitz3_wizzard.ab2@5282>   BSR.w addoff
00021D52 <AmiBlitz3_wizzard.ab2@5283>   MOVE.l destpointer,intcleanat
00021D56 <AmiBlitz3_wizzard.ab2@5284>   BSR.w writelong
00021D5C <AmiBlitz3_wizzard.ab2@5285>   MOVE.w intlevel,D1
00021D60 <AmiBlitz3_wizzard.ab2@5286>   BSR.w writeword
00021D64 <AmiBlitz3_wizzard.ab2@5287>   MOVE.w #$C30B,D1                                         ;disable stack checks
00021D6A <AmiBlitz3_wizzard.ab2@5288>   JSR Atokejsr
00021D6E <AmiBlitz3_wizzard.ab2@5291>   MOVE.w #$FED3,D1
00021D72 <AmiBlitz3_wizzard.ab2@5292>   BSR.w uselib
00021D76 <AmiBlitz3_wizzard.ab2@5293>   MOVE.w #$C102,D1
00021D7C <AmiBlitz3_wizzard.ab2@5294>   JSR Atokejsr
00021D84 <AmiBlitz3_wizzard.ab2@5295>   MOVE.w #-1,lasta6
00021D8E <AmiBlitz3_wizzard.ab2@5296>   MOVE.l linenumat,intline
00021D90 <AmiBlitz3_wizzard.ab2@5297> RTS
00021D92 <AmiBlitz3_wizzard.ab2@5301>             Ds.w 1                                         ;??looks like obsolved data??
00021D96 <AmiBlitz3_wizzard.ab2@5303> intdata1:   Ds.l 1                                         ;where in data1 a5 is being kept
00021D9A <AmiBlitz3_wizzard.ab2@5305> intjmpat:   Ds.l 1
00021D9E <AmiBlitz3_wizzard.ab2@5306> intline:    Ds.l 1
00021DA0 <AmiBlitz3_wizzard.ab2@5307> intstring:  Ds.w 1                                         ;flag 0 = no setint
00021DA2 <AmiBlitz3_wizzard.ab2@5310> intlevel:   Ds.w 1
00021DA6 <AmiBlitz3_wizzard.ab2@5311> intcleanat: Ds.l 1
00021DAA <AmiBlitz3_wizzard.ab2@5312> ret15add:   Ds.l 1
00021DAC <AmiBlitz3_wizzard.ab2@5313> ret15cc:    Ds.w 1
00021DB4 <AmiBlitz3_wizzard.ab2@5317>   ADDI.l #$12,$2(A7)
00021DBC <AmiBlitz3_wizzard.ab2@5318>   MOVE.l $2(A7),ret15add
00021DC2 <AmiBlitz3_wizzard.ab2@5319>   MOVE.w (A7),ret15cc
00021DCA <AmiBlitz3_wizzard.ab2@5320>   MOVE.l #directdo,$2(A7)
00021DCC <AmiBlitz3_wizzard.ab2@5321> RTE
00021DD0 <AmiBlitz3_wizzard.ab2@5330>   MOVE.l ret15add(PC),-(A7)
00021DD4 <AmiBlitz3_wizzard.ab2@5331>   MOVE.w ret15cc(PC),-(A7)                                 ;15*4
00021DD8 <AmiBlitz3_wizzard.ab2@5332>   MOVEM.l D0-D7/A0-A6,-(A7)
00021DE2 <AmiBlitz3_wizzard.ab2@5333>   MOVE.l destbufferend,trap15temp                          ;store high buff addr
00021DEC <AmiBlitz3_wizzard.ab2@5334>   MOVE.l destbufferstart,trap15temp2
00021DF6 <AmiBlitz3_wizzard.ab2@5335>   MOVE.l libend,templibend
00021E00 <AmiBlitz3_wizzard.ab2@5336>   MOVE.l data1start,tempdata1start
00021E06 <AmiBlitz3_wizzard.ab2@5337>   CLR.l hunkoffsetcounter
00021E0C <AmiBlitz3_wizzard.ab2@5339>   MOVE.l directbuffer,a0
00021E12 <AmiBlitz3_wizzard.ab2@5343>   MOVE.l a0,destbufferstart
00021E18 <AmiBlitz3_wizzard.ab2@5344>   ADD.l #3900,a0
00021E1E <AmiBlitz3_wizzard.ab2@5345>   MOVE.l a0,destbufferend
00021E24 <AmiBlitz3_wizzard.ab2@5346>   TST.b exdebug
00021E28 <AmiBlitz3_wizzard.ab2@5347>   BEQ 'l1
00021E2E <AmiBlitz3_wizzard.ab2@5348>   MOVE.l a0,libend
00021E34 <AmiBlitz3_wizzard.ab2@5349>   ADD.l #4000,a0
00021E3A <AmiBlitz3_wizzard.ab2@5350>   MOVE.l a0,data1start
00021E44 <AmiBlitz3_wizzard.ab2@5353>   MOVE.l #dircont,errcont
00021E4A <AmiBlitz3_wizzard.ab2@5354>   MOVE.l A7,errstack
00021E52 <AmiBlitz3_wizzard.ab2@5355>   MOVE.w #$FFFF,dirmode
00021E56 <AmiBlitz3_wizzard.ab2@5357>     MOVEA.l ret15add(PC),A1
00021E5C <AmiBlitz3_wizzard.ab2@5358>     MOVE.w -(A1),blitzmode
00021E5E <AmiBlitz3_wizzard.ab2@5359>     CLR.l -(A1)
00021E64 <AmiBlitz3_wizzard.ab2@5360>     MOVE.l -(A1),firstglob
00021E6A <AmiBlitz3_wizzard.ab2@5361>     MOVE.l -(A1),firstlocal
00021E70 <AmiBlitz3_wizzard.ab2@5363>   CLR.w proceduremode
00021E76 <AmiBlitz3_wizzard.ab2@5364>   MOVE.l firstglob,D0
00021E7C <AmiBlitz3_wizzard.ab2@5365>   OR.l firstlocal,D0
00021E80 <AmiBlitz3_wizzard.ab2@5366>   BEQ.b directdo__skip
00021E86 <AmiBlitz3_wizzard.ab2@5367>   NOT.w proceduremode
00021E88 <AmiBlitz3_wizzard.ab2@5370>   MOVEA.l -(A1),A0                                         ;address of string
00021E8A <AmiBlitz3_wizzard.ab2@5374>   MOVE.l A0,-(A7)
00021EC8 <AmiBlitz3_wizzard.ab2@5377>   !ComData_GetL{comFunc_DebugTrap,A1}
00021ECA <AmiBlitz3_wizzard.ab2@5380>   JSR (A1)                                                 ;tokenise line.....
00021ECC <AmiBlitz3_wizzard.ab2@5381>   MOVEA.l (A7)+,A5
00021ED6 <AmiBlitz3_wizzard.ab2@5382>   MOVE.l directbuffer,destpointer
00021EDC <AmiBlitz3_wizzard.ab2@5383>   TST.b exdebug
00021EE0 <AmiBlitz3_wizzard.ab2@5384>   BEQ 'noexdebug
00021EE2 <AmiBlitz3_wizzard.ab2@5385>   MOVE.l a5,a0
00021EE8 <AmiBlitz3_wizzard.ab2@5386>   MOVE.l #200,d0
00021EEE <AmiBlitz3_wizzard.ab2@5389>     MOVE.b 0(a0,d0.l),8(a0,d0.l)
00021EF2 <AmiBlitz3_wizzard.ab2@5390>   DBF d0,'l1
00021EF8 <AmiBlitz3_wizzard.ab2@5395>   MOVE.l destpointer,a0
00021EFC <AmiBlitz3_wizzard.ab2@5396>   MOVE.w #$207c,(a0)+
00021EFE <AmiBlitz3_wizzard.ab2@5397>   MOVE.l a5,d0
00021F04 <AmiBlitz3_wizzard.ab2@5398>   ADD.l #$206,d0                                           ;constant from debuglib
00021F06 <AmiBlitz3_wizzard.ab2@5399>   MOVE.l d0,(a0)+
00021F0C <AmiBlitz3_wizzard.ab2@5400>   MOVE.l a0,destpointer
00021F0E <AmiBlitz3_wizzard.ab2@5401>   MOVE.l a5,a0
00021F12 <AmiBlitz3_wizzard.ab2@5402>   MOVE.w #$8039,(a0)+                                      ;TokeJsr 164 (inputoutputlib) LSL 7+4
00021F18 <AmiBlitz3_wizzard.ab2@5403>   MOVE.l #"$520",(a0)+
00021F1C <AmiBlitz3_wizzard.ab2@5404>   MOVE.w #"4:",(a0)+
00021F22 <AmiBlitz3_wizzard.ab2@5407>   CLR.w dontwrite
00021F2A <AmiBlitz3_wizzard.ab2@5408>   MOVE.w #$FFFF,lasta6
00021F2E <AmiBlitz3_wizzard.ab2@5409>   BSR.w compile_line                                        ;.....compile it
00021F34 <AmiBlitz3_wizzard.ab2@5410>   TST.b exdebug
00021F38 <AmiBlitz3_wizzard.ab2@5411>   BEQ 'noexdebug2
00021F3E <AmiBlitz3_wizzard.ab2@5412>   JSR JL_0_6C76
00021F44 <AmiBlitz3_wizzard.ab2@5415>   CLR.w proceduremode
00021F48 <AmiBlitz3_wizzard.ab2@5416>   BSR.w errchx
00021F4C <AmiBlitz3_wizzard.ab2@5417>   MOVE.w #$4EF9,D1
00021F50 <AmiBlitz3_wizzard.ab2@5418>   BSR.w writeword                                          ;JMP
00021F54 <AmiBlitz3_wizzard.ab2@5419>   MOVE.l ret15add(PC),D1
00021F58 <AmiBlitz3_wizzard.ab2@5420>   BSR.w writelong                                          ;jmp to done
00021F5E <AmiBlitz3_wizzard.ab2@5421>   MOVE.w dontwrite,D0
00021F62 <AmiBlitz3_wizzard.ab2@5422>    BNE.w nodirmem
00021F6A <AmiBlitz3_wizzard.ab2@5423>   MOVE.l directbuffer,$3E(A7)                              ;install code address
00021F70 <AmiBlitz3_wizzard.ab2@5426>   CLR.w dirmode
00021F76 <AmiBlitz3_wizzard.ab2@5427>   MOVE.w ret15cc(PC),$3C(A7)
00021F80 <AmiBlitz3_wizzard.ab2@5428>   MOVE.l trap15temp,destbufferend
00021F8A <AmiBlitz3_wizzard.ab2@5429>   MOVE.l trap15temp2,destbufferstart
00021F94 <AmiBlitz3_wizzard.ab2@5430>   MOVE.l tempdata1start,data1start
00021F9E <AmiBlitz3_wizzard.ab2@5431>   MOVE.l templibend,libend
00021FA2 <AmiBlitz3_wizzard.ab2@5432>   MOVEM.l (A7)+,D0-D7/A0-A6
00021FA6 <AmiBlitz3_wizzard.ab2@5433>   BSR.w Aclearcache                                        ;selden used
00021FA8 <AmiBlitz3_wizzard.ab2@5434> RTR
00021FAC <AmiBlitz3_wizzard.ab2@5437>   MOVEA.l ret15add(PC),A0
00021FAE <AmiBlitz3_wizzard.ab2@5438>   SUBQ.w #2,A0
00021FB0 <AmiBlitz3_wizzard.ab2@5439>   MOVE.l D0,-(A0)
00021FB4 <AmiBlitz3_wizzard.ab2@5440> BRA.w direxit
00021FB8 <AmiBlitz3_wizzard.ab2@5444>   MOVE.w $6(A3),D1
00021FBC <AmiBlitz3_wizzard.ab2@5445>   BSR.w uselib                                             ;get lib for base address
00021FC0 <AmiBlitz3_wizzard.ab2@5446>   MOVE.w $A(A1),-(A7)                                      ;libbase reg
00021FC2 <AmiBlitz3_wizzard.ab2@5447>   ADDQ.w #8,A3
00021FC4 <AmiBlitz3_wizzard.ab2@5448>   MOVE.w (A3)+,-(A7)                                       ;get offset for lib
00021FC6 <AmiBlitz3_wizzard.ab2@5449>   MOVE.l A3,-(A7)
00021FC8 <AmiBlitz3_wizzard.ab2@5453>   MOVEQ.l #$00,D3
00021FCE <AmiBlitz3_wizzard.ab2@5454>   JSR checka4a5
00021FD0 <AmiBlitz3_wizzard.ab2@5456>   MOVE.b (A3)+,D1
00021FD4 <AmiBlitz3_wizzard.ab2@5457>    BMI.w stamigalib__done
00021FD6 <AmiBlitz3_wizzard.ab2@5458>   MOVEQ.l #$03,D2
00021FD8 <AmiBlitz3_wizzard.ab2@5459>   ADDQ.w #1,D3
00021FDC <AmiBlitz3_wizzard.ab2@5460>   MOVEM.l D3/A3,-(A7)
00021FE2 <AmiBlitz3_wizzard.ab2@5461>   MOVE.b funcparloop,-(a7)
00021FEA <AmiBlitz3_wizzard.ab2@5462>   MOVE.b #0,funcparloop
00021FF0 <AmiBlitz3_wizzard.ab2@5463>   MOVE.l leftsidetype,-(a7)
00021FF6 <AmiBlitz3_wizzard.ab2@5464>   MOVE.l rightsidetype,-(a7)
00021FFC <AmiBlitz3_wizzard.ab2@5465>   CLR.l leftsidetype
00022002 <AmiBlitz3_wizzard.ab2@5466>   CLR.l rightsidetype
00022008 <AmiBlitz3_wizzard.ab2@5467>   MOVE.b blitzparloop,-(a7)
00022010 <AmiBlitz3_wizzard.ab2@5468>   MOVE.b #1,blitzparloop                                 ;write the parameter to stack
00022016 <AmiBlitz3_wizzard.ab2@5469>   JSR peval
0002201C <AmiBlitz3_wizzard.ab2@5470>   MOVE.b (a7)+,blitzparloop
00022022 <AmiBlitz3_wizzard.ab2@5471>   MOVE.l (a7)+,rightsidetype
00022028 <AmiBlitz3_wizzard.ab2@5472>   MOVE.l (a7)+,leftsidetype
0002202E <AmiBlitz3_wizzard.ab2@5473>   MOVE.b (a7)+,funcparloop
00022032 <AmiBlitz3_wizzard.ab2@5474>   MOVEM.l (A7)+,D3/A3
00022036 <AmiBlitz3_wizzard.ab2@5475>   CMP.w #$2C,D0
0002203A <AmiBlitz3_wizzard.ab2@5476>    BEQ.w stamigalib__loop
0002203C <AmiBlitz3_wizzard.ab2@5477>   TST.b (A3)
00022040 <AmiBlitz3_wizzard.ab2@5478>    BPL.w syntaxerr
00022042 <AmiBlitz3_wizzard.ab2@5481>   MOVEA.l (A7)+,A3
00022044 <AmiBlitz3_wizzard.ab2@5482>   SUBQ.w #1,D3
00022048 <AmiBlitz3_wizzard.ab2@5483>    BPL.w stamigalib__toend
0002204C <AmiBlitz3_wizzard.ab2@5484>    BSR.w get1bytemain                                      ;no pars - get :
00022050 <AmiBlitz3_wizzard.ab2@5485> BRA.w stamigalib__nopars
00022052 <AmiBlitz3_wizzard.ab2@5488>   TST.b (A3)+                                              ;go to end of params
00022056 <AmiBlitz3_wizzard.ab2@5489>    BPL.w stamigalib__toend
00022058 <AmiBlitz3_wizzard.ab2@5490>   SUBQ.w #1,A3
0002205A <AmiBlitz3_wizzard.ab2@5493>    MOVEQ.l #$00,D1
0002205C <AmiBlitz3_wizzard.ab2@5494>    MOVE.b -(A3),D1
00022060 <AmiBlitz3_wizzard.ab2@5495>    BTST #$4,D1
00022064 <AmiBlitz3_wizzard.ab2@5496>     BNE.w stamigalib__addreg
00022066 <AmiBlitz3_wizzard.ab2@5497>    LSL.w #8,D1
00022068 <AmiBlitz3_wizzard.ab2@5498>    LSL.w #1,D1
0002206C <AmiBlitz3_wizzard.ab2@5499>    ORI.w #$201F,D1
00022070 <AmiBlitz3_wizzard.ab2@5500>  BRA.w stamigalib__gotit
00022074 <AmiBlitz3_wizzard.ab2@5503>    ANDI.w #$7,D1
00022076 <AmiBlitz3_wizzard.ab2@5504>    LSL.w #8,D1
00022078 <AmiBlitz3_wizzard.ab2@5505>    LSL.w #1,D1
0002207C <AmiBlitz3_wizzard.ab2@5506>    ORI.w #$205F,D1
00022080 <AmiBlitz3_wizzard.ab2@5509>     BSR.w writeword
00022084 <AmiBlitz3_wizzard.ab2@5510>   DBF D3,stamigalib__loop2
0002208A <AmiBlitz3_wizzard.ab2@5513>   MOVE.w (A7)+,libjsr+2
00022090 <AmiBlitz3_wizzard.ab2@5514>   MOVE.w (A7)+,libbase+2
00022096 <AmiBlitz3_wizzard.ab2@5515>   MOVE.l libbase,D1
0002209A <AmiBlitz3_wizzard.ab2@5516>    BSR.w writelong
000220A0 <AmiBlitz3_wizzard.ab2@5517>   MOVE.l libjsr,D1
000220A6 <AmiBlitz3_wizzard.ab2@5518>   JSR writelong
000220AC <AmiBlitz3_wizzard.ab2@5519>   JSR restorea4a5
000220AE <AmiBlitz3_wizzard.ab2@5520>   RTS
000220B4 <AmiBlitz3_wizzard.ab2@5523>   MOVE.l data1,D4
000220BA <AmiBlitz3_wizzard.ab2@5524>   SUB.l data1start,D4
000220C0 <AmiBlitz3_wizzard.ab2@5525>   ADD.l #10000,d4
000220C6 <AmiBlitz3_wizzard.ab2@5526>   MOVE.l libend,D3
000220CC <AmiBlitz3_wizzard.ab2@5527>   SUB.l destbufferend,D3
000220D2 <AmiBlitz3_wizzard.ab2@5528>   ADD.l #40000,d3
000220D8 <AmiBlitz3_wizzard.ab2@5529>   MOVE.l bigpc,D2
000220DE <AmiBlitz3_wizzard.ab2@5530>   SUB.l destbufferstart,D2
000220E4 <AmiBlitz3_wizzard.ab2@5531>   ADD.l #20000,d2
000220EA <AmiBlitz3_wizzard.ab2@5532>   MOVE.l databuffer,D5
000220F0 <AmiBlitz3_wizzard.ab2@5533>   ADD.l #10000,D5
000220F4 <AmiBlitz3_wizzard.ab2@5534> BRA newallox
000220FA <AmiBlitz3_wizzard.ab2@5538>   MOVE.l objectbuffer,D2
000220FC <AmiBlitz3_wizzard.ab2@5539>   LSR.l #1,D2
00022102 <AmiBlitz3_wizzard.ab2@5540>   ADD.l objectbuffer,D2
00022108 <AmiBlitz3_wizzard.ab2@5541>   MOVE.l libsbuffer,D3
0002210A <AmiBlitz3_wizzard.ab2@5542>   LSR.l #1,D3
00022110 <AmiBlitz3_wizzard.ab2@5543>   ADD.l libsbuffer,D3
00022116 <AmiBlitz3_wizzard.ab2@5544>   MOVE.l systembuffer,D4
00022118 <AmiBlitz3_wizzard.ab2@5545>   LSR.l #1,D4
0002211E <AmiBlitz3_wizzard.ab2@5546>   ADD.l systembuffer,D4
00022124 <AmiBlitz3_wizzard.ab2@5547>   MOVE.l databuffer,D5
00022126 <AmiBlitz3_wizzard.ab2@5548>   LSR.l #1,D5
0002212C <AmiBlitz3_wizzard.ab2@5549>   ADD.l databuffer,D5
00022130 <AmiBlitz3_wizzard.ab2@5550> BRA.w newallox
00022136 <AmiBlitz3_wizzard.ab2@5554>   MOVE.l bigpc,D2
0002213C <AmiBlitz3_wizzard.ab2@5555>   SUB.l destbufferstart,D2                                     ;size of object buffer
00022142 <AmiBlitz3_wizzard.ab2@5556>   SUB.l savefuncspace,d2
00022148 <AmiBlitz3_wizzard.ab2@5558>   TST.w debugversion
0002214C <AmiBlitz3_wizzard.ab2@5559>    BNE.b alloxadj__skip
00022152 <AmiBlitz3_wizzard.ab2@5560>   ADDI.l #$800,D2
00022158 <AmiBlitz3_wizzard.ab2@5563>   MOVE.l libend,D3
0002215E <AmiBlitz3_wizzard.ab2@5564>   SUB.l destbufferend,D3
00022164 <AmiBlitz3_wizzard.ab2@5566>   MOVE.l data1,D4
0002216A <AmiBlitz3_wizzard.ab2@5567>   SUB.l data1start,D4
00022170 <AmiBlitz3_wizzard.ab2@5569>   MOVE.l data2,D5
00022176 <AmiBlitz3_wizzard.ab2@5570>   SUB.l data2at,D5
0002217C <AmiBlitz3_wizzard.ab2@5572>   CLR.l morememadd
00022180 <AmiBlitz3_wizzard.ab2@5575>   BSR.w makeallox
00022184 <AmiBlitz3_wizzard.ab2@5576>   BNE.w newallox__done
00022188 <AmiBlitz3_wizzard.ab2@5577> BRA.w init_buffers
0002218A <AmiBlitz3_wizzard.ab2@5580> RTS
00022190 <AmiBlitz3_wizzard.ab2@5584>   MOVEA.l _execbase,A6
00022196 <AmiBlitz3_wizzard.ab2@5585>   MOVE.l objlen,D0
0002219A <AmiBlitz3_wizzard.ab2@5586>   BEQ.w freeallox__skip
000221A0 <AmiBlitz3_wizzard.ab2@5587>   CLR.l objlen
000221A6 <AmiBlitz3_wizzard.ab2@5588>   MOVEA.l destbufferstart,A1
000221AC <AmiBlitz3_wizzard.ab2@5589>   MOVE.l mempool,a0
000221B0 <AmiBlitz3_wizzard.ab2@5590> JMP _FreeVec(A6)
000221B2 <AmiBlitz3_wizzard.ab2@5593> RTS
000221B8 <AmiBlitz3_wizzard.ab2@5597>   MOVE.l objectbuffer,D2
000221BE <AmiBlitz3_wizzard.ab2@5598>   MOVE.l libsbuffer,D3
000221C4 <AmiBlitz3_wizzard.ab2@5599>   MOVE.l systembuffer,D4
000221CA <AmiBlitz3_wizzard.ab2@5600>   MOVE.l databuffer,D5
000221D2 <AmiBlitz3_wizzard.ab2@5603>   MOVE.w #$FFFF,anyerrs
000221D6 <AmiBlitz3_wizzard.ab2@5604>   BSR.w freeallox
000221D8 <AmiBlitz3_wizzard.ab2@5608>   ADDQ.l #1,D2
000221DC <AmiBlitz3_wizzard.ab2@5609>   BCLR #$0,D2
000221DE <AmiBlitz3_wizzard.ab2@5610>   ADDQ.l #1,D3
000221E2 <AmiBlitz3_wizzard.ab2@5611>   BCLR #$0,D3
000221E4 <AmiBlitz3_wizzard.ab2@5612>   ADDQ.l #1,D4
000221E8 <AmiBlitz3_wizzard.ab2@5613>   BCLR #$0,D4
000221EA <AmiBlitz3_wizzard.ab2@5614>   TST.l d5
000221EE <AmiBlitz3_wizzard.ab2@5615>   BNE 'l1
000221F0 <AmiBlitz3_wizzard.ab2@5618>   ADDQ.l #1,D5
000221F4 <AmiBlitz3_wizzard.ab2@5619>   BCLR #$0,D5
000221F6 <AmiBlitz3_wizzard.ab2@5620>   MOVE.l D2,D0
000221F8 <AmiBlitz3_wizzard.ab2@5621>   ADD.l D3,D0
000221FA <AmiBlitz3_wizzard.ab2@5622>   ADD.l D4,D0
000221FC <AmiBlitz3_wizzard.ab2@5623>   ADD.l D5,D0
00022202 <AmiBlitz3_wizzard.ab2@5624>   ADD.l #moremem,d0
00022204 <AmiBlitz3_wizzard.ab2@5625>   MOVE.l D0,D6
0002220A <AmiBlitz3_wizzard.ab2@5626>   MOVE.l #MemfPublic_MemfClear,D1
00022210 <AmiBlitz3_wizzard.ab2@5627>   MOVE.l mempool,a0
00022216 <AmiBlitz3_wizzard.ab2@5628>   MOVEA.l _execbase,A6
0002221A <AmiBlitz3_wizzard.ab2@5629>   JSR _AllocVec(a6)                                        ;alloc mem for objectbuffer
0002221C <AmiBlitz3_wizzard.ab2@5631>   TST.l D0
00022220 <AmiBlitz3_wizzard.ab2@5632>   BEQ.w exit_initbuffers
00022226 <AmiBlitz3_wizzard.ab2@5633>   MOVE.l D6,objlen
0002222C <AmiBlitz3_wizzard.ab2@5634>   MOVE.l D2,objectbuffer
00022232 <AmiBlitz3_wizzard.ab2@5635>   MOVE.l D3,libsbuffer
00022238 <AmiBlitz3_wizzard.ab2@5636>   MOVE.l D4,systembuffer
0002223E <AmiBlitz3_wizzard.ab2@5637>   MOVE.l D5,databuffer
00022244 <AmiBlitz3_wizzard.ab2@5638>   MOVE.l D0,destbufferstart
00022278 <AmiBlitz3_wizzard.ab2@5641>   !ComData_SetL{comPtr_DestBufferStart,D0}
0002227A <AmiBlitz3_wizzard.ab2@5642>   ADD.l D2,D0
00022280 <AmiBlitz3_wizzard.ab2@5643>   MOVE.l D0,destbufferend
00022282 <AmiBlitz3_wizzard.ab2@5644>   ADD.l D3,D0
00022288 <AmiBlitz3_wizzard.ab2@5645>   MOVE.l D0,data1start
0002228A <AmiBlitz3_wizzard.ab2@5646>   ADD.l D4,D0
00022290 <AmiBlitz3_wizzard.ab2@5647>   MOVE.l D0,data2at
00022292 <AmiBlitz3_wizzard.ab2@5648>   ADD.l D5,D0
00022298 <AmiBlitz3_wizzard.ab2@5649>   MOVE.l D0,allat
0002229A <AmiBlitz3_wizzard.ab2@5652> RTS
0002229E <AmiBlitz3_wizzard.ab2@5656>   Dc.b $00,$00,$00,$01                                     ;         1
000222A2 <AmiBlitz3_wizzard.ab2@5657>   Dc.b $00,$00,$00,$0A                                     ;        10
000222A6 <AmiBlitz3_wizzard.ab2@5658>   Dc.b $00,$00,$00,$64                                     ;       100
000222AA <AmiBlitz3_wizzard.ab2@5659>   Dc.b $00,$00,$03,$E8                                     ;      1000
000222AE <AmiBlitz3_wizzard.ab2@5660>   Dc.b $00,$00,$27,$10                                     ;     10000
000222B2 <AmiBlitz3_wizzard.ab2@5661>   Dc.b $00,$01,$86,$A0                                     ;    100000
000222B6 <AmiBlitz3_wizzard.ab2@5662>   Dc.b $00,$0F,$42,$40                                     ;   1000000
000222BA <AmiBlitz3_wizzard.ab2@5663>   Dc.b $00,$98,$96,$80                                     ;  10000000
000222BE <AmiBlitz3_wizzard.ab2@5664>   Dc.b $05,$F5,$E1,$00                                     ; 100000000
000222C2 <AmiBlitz3_wizzard.ab2@5665>   Dc.b $3B,$9A,$CA,$00                                     ;1000000000
000222C4 <AmiBlitz3_wizzard.ab2@5669>   MOVEQ.l #$00,D1                                          ;no zero printed
000222C6 <AmiBlitz3_wizzard.ab2@5670>   MOVEQ.l #$24,D3                                          ; "$"
000222C8 <AmiBlitz3_wizzard.ab2@5673>   MOVEQ.l #$30,D4                                          ; "0"
000222CC <AmiBlitz3_wizzard.ab2@5676>     CMP.l divisors(PC,D3.W),D2
000222D0 <AmiBlitz3_wizzard.ab2@5677>     BCS.w makelong__skip
000222D4 <AmiBlitz3_wizzard.ab2@5678>     SUB.l divisors(PC,D3.W),D2
000222D6 <AmiBlitz3_wizzard.ab2@5679>     ADDQ.w #1,D4
000222DA <AmiBlitz3_wizzard.ab2@5680> BRA.w makelong__loop2
000222DE <AmiBlitz3_wizzard.ab2@5683>   CMP.b #"0",D4
000222E2 <AmiBlitz3_wizzard.ab2@5684>   BNE.w makelong__doit
000222E4 <AmiBlitz3_wizzard.ab2@5685>   TST.w D1
000222E8 <AmiBlitz3_wizzard.ab2@5686>   BEQ.w makelong__skip2
000222EA <AmiBlitz3_wizzard.ab2@5689>   MOVE.b D4,(A0)+
000222EC <AmiBlitz3_wizzard.ab2@5690>   MOVEQ.l #$01,D1
000222EE <AmiBlitz3_wizzard.ab2@5693>   SUBQ.w #4,D3
000222F2 <AmiBlitz3_wizzard.ab2@5694>   BPL.w makelong__loop
000222F4 <AmiBlitz3_wizzard.ab2@5695>   TST.w D1
000222F8 <AmiBlitz3_wizzard.ab2@5696>   BNE.w makelong__skip3
000222FC <AmiBlitz3_wizzard.ab2@5697>   MOVE.b #"0",(A0)+
000222FE <AmiBlitz3_wizzard.ab2@5700>   CLR.b (A0)
00022300 <AmiBlitz3_wizzard.ab2@5701> RTS
00022320 <AmiBlitz3_wizzard.ab2@5704> str_residentrequester:  Dc.b "Name of Resident File to Create",0 : Even        ;restext org source
000223E0 <AmiBlitz3_wizzard.ab2@5705> str_residentpath:       Ds.l 48                                                ;respath org source
000224A0 <AmiBlitz3_wizzard.ab2@5706> str_residentname:       Ds.l 48                                                ;resname org source
000224A6 <AmiBlitz3_wizzard.ab2@5710>   MOVE.l macrobase,D0
000224AA <AmiBlitz3_wizzard.ab2@5711>    BNE.w create_residentfile
000224B0 <AmiBlitz3_wizzard.ab2@5712>   MOVE.l newtype_string,D0
000224B4 <AmiBlitz3_wizzard.ab2@5713>    BNE.w create_residentfile
000224BA <AmiBlitz3_wizzard.ab2@5714>   MOVEA.l labelbase,A2
000224BE <AmiBlitz3_wizzard.ab2@5717>     CMPA.w #$0,A2
000224C2 <AmiBlitz3_wizzard.ab2@5718>      BEQ.w menu_createresidentfile__err
000224CA <AmiBlitz3_wizzard.ab2@5719>     CMPI.l #$1,$4(A2)
000224CE <AmiBlitz3_wizzard.ab2@5720>      BEQ.w create_residentfile
000224D0 <AmiBlitz3_wizzard.ab2@5721>     MOVEA.l (A2),A2
000224D4 <AmiBlitz3_wizzard.ab2@5722> BRA.w menu_createresidentfile__loop
000224FE <AmiBlitz3_wizzard.ab2@5725>   !basic
00022554 <AmiBlitz3_wizzard.ab2@5726> 
00022572 <AmiBlitz3_wizzard.ab2@5727>   !asm
00022574 <AmiBlitz3_wizzard.ab2@5728> RTS
000225B2 <AmiBlitz3_wizzard.ab2@5734>   !ComData_GetL{comFunc_ASLFileRequest,A3}
000225B8 <AmiBlitz3_wizzard.ab2@5735>   LEA str_residentrequester,A2
000225BE <AmiBlitz3_wizzard.ab2@5736>   LEA str_residentpath,A0
000225C4 <AmiBlitz3_wizzard.ab2@5737>   LEA str_residentname,A1
000225EE <AmiBlitz3_wizzard.ab2@5738>   !basic
00022626 <AmiBlitz3_wizzard.ab2@5739>     Poke$ ?str_residentpath,my_residentsdir$
00022652 <AmiBlitz3_wizzard.ab2@5740>     Poke$ ?str_residentname,".res"
00022670 <AmiBlitz3_wizzard.ab2@5741>   !asm
00022672 <AmiBlitz3_wizzard.ab2@5744>   JSR (A3)
00022676 <AmiBlitz3_wizzard.ab2@5746>   BEQ.w menu_createresidentfile__err
00022678 <AmiBlitz3_wizzard.ab2@5749>   MOVE.l D0,D1
0002267E <AmiBlitz3_wizzard.ab2@5750>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00022682 <AmiBlitz3_wizzard.ab2@5751>   MOVEA.l _dosbase(PC),A6
00022686 <AmiBlitz3_wizzard.ab2@5752>   JSR _Open(A6)
00022688 <AmiBlitz3_wizzard.ab2@5753>   MOVE.l D0,D7                                             ;handle
0002268C <AmiBlitz3_wizzard.ab2@5754>   BEQ.w menu_createresidentfile__err
00022690 <AmiBlitz3_wizzard.ab2@5755>   MOVEM.l d2-d7/a0-a6,-(a7)
00022696 <AmiBlitz3_wizzard.ab2@5756>   LEA devo,a0
0002269C <AmiBlitz3_wizzard.ab2@5757>   LEA ptr_parameterstore,a1
0002269E <AmiBlitz3_wizzard.ab2@5760>     MOVE.b (a0)+,(a1)+
000226A2 <AmiBlitz3_wizzard.ab2@5761>   BNE 'l1
000226A4 <AmiBlitz3_wizzard.ab2@5762>   MOVEQ #13,d2
000226AA <AmiBlitz3_wizzard.ab2@5763>   JSR findlabel2
000226AE <AmiBlitz3_wizzard.ab2@5764>   BNE 'd
000226B2 <AmiBlitz3_wizzard.ab2@5765>   TST.l 8(a2)
000226B6 <AmiBlitz3_wizzard.ab2@5766>   BEQ 'd2
000226E0 <AmiBlitz3_wizzard.ab2@5767>   !basic
00022736 <AmiBlitz3_wizzard.ab2@5768>     error{!TRANS{"Cannot create Resident with develope debug 1"}}
00022754 <AmiBlitz3_wizzard.ab2@5769>   !asm
00022758 <AmiBlitz3_wizzard.ab2@5770>   MOVEM.l (a7)+,d2-d7/a0-a6
0002275C <AmiBlitz3_wizzard.ab2@5771>   MOVEA.l _dosbase(PC),A6
0002275E <AmiBlitz3_wizzard.ab2@5772>   MOVE.l d7,d1
00022762 <AmiBlitz3_wizzard.ab2@5773>   JSR _Close(a6)
00022766 <AmiBlitz3_wizzard.ab2@5774> BRA menu_createresidentfile__err
0002276A <AmiBlitz3_wizzard.ab2@5778>   MOVEM.l (a7)+,d2-d7/a0-a6
0002276E <AmiBlitz3_wizzard.ab2@5779>   BSR.w call_setpointerbusy
00022772 <AmiBlitz3_wizzard.ab2@5781>   BSR.w AJL_0_7962
00022774 <AmiBlitz3_wizzard.ab2@5782>   MOVE.l D7,D1
0002277A <AmiBlitz3_wizzard.ab2@5783>   MOVE.l #tsthead,D2                                       ;header
0002277C <AmiBlitz3_wizzard.ab2@5784>   MOVEQ.l #$20,D3
00022780 <AmiBlitz3_wizzard.ab2@5785>   MOVEA.l _dosbase(PC),A6
00022784 <AmiBlitz3_wizzard.ab2@5786>   JSR _Write(A6)
00022786 <AmiBlitz3_wizzard.ab2@5787>   MOVEQ.l #$00,D6                                          ;offset from start of file!
0002278A <AmiBlitz3_wizzard.ab2@5788>   BSR.w restypes
0002278E <AmiBlitz3_wizzard.ab2@5789>   BSR.w resmacs
00022792 <AmiBlitz3_wizzard.ab2@5790>   BSR.w resconsts
00022794 <AmiBlitz3_wizzard.ab2@5791>   MOVE.l D6,D3
00022796 <AmiBlitz3_wizzard.ab2@5792>   ADDQ.l #3,D3
0002279C <AmiBlitz3_wizzard.ab2@5793>   ANDI.l #$FFFFFFFC,D3                                    ;long word align
0002279E <AmiBlitz3_wizzard.ab2@5794>   MOVE.l D3,-(A7)
000227A0 <AmiBlitz3_wizzard.ab2@5795>   SUB.l D6,D3
000227A4 <AmiBlitz3_wizzard.ab2@5796>   BEQ.w menu_createresidentfile__noalign
000227AA <AmiBlitz3_wizzard.ab2@5797>   MOVE.l #writelist,D2
000227AC <AmiBlitz3_wizzard.ab2@5798>   MOVE.l D7,D1
000227B2 <AmiBlitz3_wizzard.ab2@5799>   MOVEA.l _dosbase,A6
000227B6 <AmiBlitz3_wizzard.ab2@5800>   JSR _Write(A6)
000227C0 <AmiBlitz3_wizzard.ab2@5803>    MOVE.l hunkoffsetcounter,tstsize3
000227C4 <AmiBlitz3_wizzard.ab2@5804>    BEQ.w menu_createresidentfile__skip2a
000227C6 <AmiBlitz3_wizzard.ab2@5805>   MOVE.l D7,D1
000227CC <AmiBlitz3_wizzard.ab2@5806>   MOVE.l #tstend,D2
000227CE <AmiBlitz3_wizzard.ab2@5807>   MOVEQ.l #$0C,D3
000227D4 <AmiBlitz3_wizzard.ab2@5808>   MOVEA.l _dosbase,A6
000227D8 <AmiBlitz3_wizzard.ab2@5809>    JSR _Write(A6)
000227DE <AmiBlitz3_wizzard.ab2@5813>   MOVEA.l hunkoffsetbase,A2
000227E2 <AmiBlitz3_wizzard.ab2@5816>   CMPA.w #$0,A2
000227E6 <AmiBlitz3_wizzard.ab2@5817>    BEQ.w menu_createresidentfile__skip2
000227EA <AmiBlitz3_wizzard.ab2@5818>   LEA $4(A2),A1
000227EC <AmiBlitz3_wizzard.ab2@5819>   MOVE.l D7,D1
000227EE <AmiBlitz3_wizzard.ab2@5820>   MOVE.l A1,D2
000227F0 <AmiBlitz3_wizzard.ab2@5821>   MOVEQ.l #$04,D3
000227F6 <AmiBlitz3_wizzard.ab2@5822>   MOVEA.l _dosbase,A6
000227FA <AmiBlitz3_wizzard.ab2@5823>    JSR _Write(A6)
000227FC <AmiBlitz3_wizzard.ab2@5824>   MOVEA.l (A2),A2
00022800 <AmiBlitz3_wizzard.ab2@5825> BRA.w menu_createresidentfile__oloop
00022802 <AmiBlitz3_wizzard.ab2@5828>   MOVE.l D7,D1
00022808 <AmiBlitz3_wizzard.ab2@5829>   MOVE.l #zero,D2
0002280A <AmiBlitz3_wizzard.ab2@5830>   MOVEQ.l #$04,D3
00022810 <AmiBlitz3_wizzard.ab2@5831>   MOVEA.l _dosbase,A6
00022814 <AmiBlitz3_wizzard.ab2@5832>   JSR _Write(A6)
00022816 <AmiBlitz3_wizzard.ab2@5835>   MOVE.l D7,D1
0002281C <AmiBlitz3_wizzard.ab2@5836>   MOVE.l #tstdone,D2
0002281E <AmiBlitz3_wizzard.ab2@5837>   MOVEQ.l #$04,D3
00022824 <AmiBlitz3_wizzard.ab2@5838>   MOVEA.l _dosbase,A6
00022828 <AmiBlitz3_wizzard.ab2@5839>    JSR _Write(A6)
0002282A <AmiBlitz3_wizzard.ab2@5840>   MOVE.l (A7)+,D0
0002282C <AmiBlitz3_wizzard.ab2@5841>   LSR.l #2,D0
00022832 <AmiBlitz3_wizzard.ab2@5842>   MOVE.l D0,temp1
00022834 <AmiBlitz3_wizzard.ab2@5843>   MOVE.l D7,D1
00022836 <AmiBlitz3_wizzard.ab2@5844>   MOVEQ.l #$14,D2
00022838 <AmiBlitz3_wizzard.ab2@5845>   MOVEQ.l #-$01,D3
0002283C <AmiBlitz3_wizzard.ab2@5846>   JSR _Seek(A6)
0002283E <AmiBlitz3_wizzard.ab2@5847>   MOVE.l D7,D1
00022844 <AmiBlitz3_wizzard.ab2@5848>   MOVE.l #temp1,D2
00022846 <AmiBlitz3_wizzard.ab2@5849>   MOVEQ.l #$04,D3
0002284A <AmiBlitz3_wizzard.ab2@5850>    JSR _Write(A6)
0002284C <AmiBlitz3_wizzard.ab2@5851>   MOVE.l D7,D1
0002284E <AmiBlitz3_wizzard.ab2@5852>   MOVEQ.l #$1C,D2
00022850 <AmiBlitz3_wizzard.ab2@5853>   MOVEQ.l #-$01,D3
00022854 <AmiBlitz3_wizzard.ab2@5854>    JSR _Seek(A6)
00022856 <AmiBlitz3_wizzard.ab2@5855>   MOVE.l D7,D1
0002285C <AmiBlitz3_wizzard.ab2@5856>   MOVE.l #temp1,D2
0002285E <AmiBlitz3_wizzard.ab2@5857>   MOVEQ.l #$04,D3
00022862 <AmiBlitz3_wizzard.ab2@5858>    JSR _Write(A6)
00022864 <AmiBlitz3_wizzard.ab2@5859>   MOVE.l D7,D1
00022868 <AmiBlitz3_wizzard.ab2@5860>    JSR _Close(A6)
0002286C <AmiBlitz3_wizzard.ab2@5861> BRA.w call_setpointernormal
0002286E <AmiBlitz3_wizzard.ab2@5865>   ADDQ.w #5,D1
00022870 <AmiBlitz3_wizzard.ab2@5866>   ADDQ.b #8,D0
00022874 <AmiBlitz3_wizzard.ab2@5869>     CMPA.w #$0,A2
00022878 <AmiBlitz3_wizzard.ab2@5870>     BEQ.w writelist__done
0002287C <AmiBlitz3_wizzard.ab2@5871>      BSR.w writeitem
0002287E <AmiBlitz3_wizzard.ab2@5872>     MOVEA.l (A2),A2
00022882 <AmiBlitz3_wizzard.ab2@5873> BRA.w writelist__loop
00022884 <AmiBlitz3_wizzard.ab2@5876> RTS
00022886 <AmiBlitz3_wizzard.ab2@5879>   MOVEQ.l #$00,D3
0002288A <AmiBlitz3_wizzard.ab2@5880>   MOVE.b $0(A2,D5.W),D3
0002288C <AmiBlitz3_wizzard.ab2@5881>   ADDQ.w #1,D3
00022890 <AmiBlitz3_wizzard.ab2@5882>   BCLR #$0,D3                                              ;word align
00022892 <AmiBlitz3_wizzard.ab2@5883>   MOVE.l (A2),-(A7)
00022896 <AmiBlitz3_wizzard.ab2@5884>    BEQ.w writeitem__skip
0002289A <AmiBlitz3_wizzard.ab2@5885>    BSR.w resoff
0002289C <AmiBlitz3_wizzard.ab2@5886>   ADD.l D3,D6
0002289E <AmiBlitz3_wizzard.ab2@5887>   MOVE.l D6,(A2)
000228A0 <AmiBlitz3_wizzard.ab2@5888>   SUB.l D3,D6
000228A2 <AmiBlitz3_wizzard.ab2@5891>    ADD.l D3,D6
000228A4 <AmiBlitz3_wizzard.ab2@5892>   MOVE.l A2,D2
000228A6 <AmiBlitz3_wizzard.ab2@5893>   MOVE.l D7,D1
000228AC <AmiBlitz3_wizzard.ab2@5894>   MOVEA.l _dosbase,A6
000228B0 <AmiBlitz3_wizzard.ab2@5895>    JSR _Write(A6)
000228B2 <AmiBlitz3_wizzard.ab2@5896>   MOVE.l (A7)+,(A2)
000228B4 <AmiBlitz3_wizzard.ab2@5897> RTS
000228B6 <AmiBlitz3_wizzard.ab2@5900>   MOVE.l D6,D2
000228BA <AmiBlitz3_wizzard.ab2@5901> BRA.w addhunkoffset
000228BE <AmiBlitz3_wizzard.ab2@5905>     CMPA.w #$0,A2
000228C2 <AmiBlitz3_wizzard.ab2@5906>      BEQ.w writeoffs__done
000228C8 <AmiBlitz3_wizzard.ab2@5907>     MOVEA.l newtypebase,A1
000228CA <AmiBlitz3_wizzard.ab2@5908>     MOVEQ.l #$00,D1
000228CE <AmiBlitz3_wizzard.ab2@5911>       CMPA.w #$0,A1
000228D2 <AmiBlitz3_wizzard.ab2@5912>       BEQ.w writeoffs__found
000228D6 <AmiBlitz3_wizzard.ab2@5913>       CMPA.l $A(A2),A1
000228DA <AmiBlitz3_wizzard.ab2@5914>        BEQ.w writeoffs__found
000228DC <AmiBlitz3_wizzard.ab2@5915>       ADDQ.w #1,D1
000228DE <AmiBlitz3_wizzard.ab2@5916>       MOVEA.l (A1),A1
000228E2 <AmiBlitz3_wizzard.ab2@5917> BRA.w writeoffs__loop2
000228E6 <AmiBlitz3_wizzard.ab2@5920>     MOVE.w $A(A2),-(A7)
000228EA <AmiBlitz3_wizzard.ab2@5921>     MOVE.w D1,$A(A2)
000228EE <AmiBlitz3_wizzard.ab2@5922>      BSR.w writeitem
000228F2 <AmiBlitz3_wizzard.ab2@5923>     MOVE.w (A7)+,$A(A2)
000228F4 <AmiBlitz3_wizzard.ab2@5924>     MOVEA.l (A2),A2
000228F8 <AmiBlitz3_wizzard.ab2@5925> BRA.w writeoffs
000228FA <AmiBlitz3_wizzard.ab2@5928> RTS
000228FC <AmiBlitz3_wizzard.ab2@5932>   MOVEQ.l #$00,D0
00022900 <AmiBlitz3_wizzard.ab2@5935>   CMPA.w #$0,A2
00022904 <AmiBlitz3_wizzard.ab2@5936>    BEQ.w countem__done
00022906 <AmiBlitz3_wizzard.ab2@5937>   ADDQ.w #1,D0
00022908 <AmiBlitz3_wizzard.ab2@5938>   MOVEA.l (A2),A2
0002290C <AmiBlitz3_wizzard.ab2@5939> BRA.w countem__loop
00022912 <AmiBlitz3_wizzard.ab2@5942>   MOVE.w D0,temp1
00022914 <AmiBlitz3_wizzard.ab2@5943>   MOVE.l D7,D1
0002291A <AmiBlitz3_wizzard.ab2@5944>   MOVE.l #temp1,D2
0002291C <AmiBlitz3_wizzard.ab2@5945>   MOVEQ.l #$02,D3
0002291E <AmiBlitz3_wizzard.ab2@5946>   ADDQ.l #2,D6
00022924 <AmiBlitz3_wizzard.ab2@5947>   MOVEA.l _dosbase,A6
00022928 <AmiBlitz3_wizzard.ab2@5948> JMP _Write(A6)
0002292E <AmiBlitz3_wizzard.ab2@5952>    TST.b resdisable
00022932 <AmiBlitz3_wizzard.ab2@5953>    BEQ resmacs__l1
00022938 <AmiBlitz3_wizzard.ab2@5954>    MOVE.l currentmacroaddr,a3
0002293E <AmiBlitz3_wizzard.ab2@5955>    CMP.l #0,a3
00022942 <AmiBlitz3_wizzard.ab2@5956>    BEQ resmacs__l1
00022944 <AmiBlitz3_wizzard.ab2@5957>    MOVE.l (a3),a3
00022948 <AmiBlitz3_wizzard.ab2@5958> BRA resmacs__l2
0002294E <AmiBlitz3_wizzard.ab2@5961>   MOVEA.l macrobase,A3                                     ;??begin org code??
00022950 <AmiBlitz3_wizzard.ab2@5964>   MOVEA.l A3,A2
00022954 <AmiBlitz3_wizzard.ab2@5965>   BSR.w countem
00022958 <AmiBlitz3_wizzard.ab2@5968>    CMPA.w #$0,A3
0002295C <AmiBlitz3_wizzard.ab2@5969>    BEQ.w resmacs__done
0002295E <AmiBlitz3_wizzard.ab2@5970>   MOVE.l D6,D5
00022960 <AmiBlitz3_wizzard.ab2@5971>   MOVE.l (A3),-(A7)
00022964 <AmiBlitz3_wizzard.ab2@5972>   MOVE.l $4(A3),-(A7)
00022966 <AmiBlitz3_wizzard.ab2@5973>   MOVEQ.l #$00,D3
0002296A <AmiBlitz3_wizzard.ab2@5974>   MOVE.b $C(A3),D3
0002296C <AmiBlitz3_wizzard.ab2@5975>   ADDQ.w #1,D3
00022970 <AmiBlitz3_wizzard.ab2@5976>   BCLR #$0,D3
00022972 <AmiBlitz3_wizzard.ab2@5977>   ADD.l D3,D6                                              ;add len of struct
00022976 <AmiBlitz3_wizzard.ab2@5978>   TST.w $8(A3)
0002297A <AmiBlitz3_wizzard.ab2@5979>    BEQ.w resmacs__notext
0002297E <AmiBlitz3_wizzard.ab2@5980>   MOVE.l D6,$4(A3)
00022980 <AmiBlitz3_wizzard.ab2@5981>   MOVE.l D5,D2
00022982 <AmiBlitz3_wizzard.ab2@5982>   ADDQ.l #4,D2
00022986 <AmiBlitz3_wizzard.ab2@5983>    BSR.w addhunkoffset
00022988 <AmiBlitz3_wizzard.ab2@5986>   MOVEQ.l #$00,D4
0002298C <AmiBlitz3_wizzard.ab2@5987>   MOVE.w $8(A3),D4
0002298E <AmiBlitz3_wizzard.ab2@5988>   ADDQ.w #1,D4
00022992 <AmiBlitz3_wizzard.ab2@5989>   BCLR #$0,D4
00022994 <AmiBlitz3_wizzard.ab2@5990>   ADD.l D4,D6
00022996 <AmiBlitz3_wizzard.ab2@5991>   TST.l (A3)
0002299A <AmiBlitz3_wizzard.ab2@5992>    BEQ.w resmacs__nomore
0002299C <AmiBlitz3_wizzard.ab2@5993>   MOVE.l D6,(A3)
0002299E <AmiBlitz3_wizzard.ab2@5994>   MOVE.l D5,D2
000229A2 <AmiBlitz3_wizzard.ab2@5995>    BSR.w addhunkoffset
000229A4 <AmiBlitz3_wizzard.ab2@5998>   MOVE.l A3,D2
000229A6 <AmiBlitz3_wizzard.ab2@5999>   MOVE.l D7,D1
000229AC <AmiBlitz3_wizzard.ab2@6001>    MOVEA.l _dosbase,A6
000229B0 <AmiBlitz3_wizzard.ab2@6002>    JSR _Write(a6)
000229B2 <AmiBlitz3_wizzard.ab2@6003>   TST.l D4
000229B6 <AmiBlitz3_wizzard.ab2@6004>    BEQ.w resmacs__skip
000229B8 <AmiBlitz3_wizzard.ab2@6005>   MOVE.l (A7),D2
000229BA <AmiBlitz3_wizzard.ab2@6006>   MOVE.l D4,D3
000229BC <AmiBlitz3_wizzard.ab2@6007>   MOVE.l D7,D1
000229C2 <AmiBlitz3_wizzard.ab2@6009>     MOVEA.l _dosbase,A6
000229C6 <AmiBlitz3_wizzard.ab2@6010>    JSR _Write(A6)
000229CA <AmiBlitz3_wizzard.ab2@6013>   MOVE.l (A7)+,$4(A3)
000229CC <AmiBlitz3_wizzard.ab2@6014>   MOVE.l (A7)+,(A3)
000229CE <AmiBlitz3_wizzard.ab2@6015>   MOVEA.l (A3),A3
000229D2 <AmiBlitz3_wizzard.ab2@6016> BRA.w resmacs__loop
000229D4 <AmiBlitz3_wizzard.ab2@6019> RTS
000229DA <AmiBlitz3_wizzard.ab2@6023>   TST.b resdisable
000229DE <AmiBlitz3_wizzard.ab2@6024>   BEQ restypes__l1
000229E4 <AmiBlitz3_wizzard.ab2@6025>   MOVE.l lastrestype,a3
000229EA <AmiBlitz3_wizzard.ab2@6026>   CMP.l #0,a3
000229EE <AmiBlitz3_wizzard.ab2@6027>   BEQ restypes__l1
000229F0 <AmiBlitz3_wizzard.ab2@6028>   MOVE.l (a3),a3
000229F4 <AmiBlitz3_wizzard.ab2@6029> BRA restypes__l2
000229FA <AmiBlitz3_wizzard.ab2@6032>   MOVEA.l newtype_string,A3
000229FC <AmiBlitz3_wizzard.ab2@6035>   MOVEA.l A3,A2
00022A00 <AmiBlitz3_wizzard.ab2@6036>    BSR.w countem
00022A04 <AmiBlitz3_wizzard.ab2@6039>    CMPA.w #$0,A3
00022A08 <AmiBlitz3_wizzard.ab2@6040>    BEQ.w restypes__done
00022A0A <AmiBlitz3_wizzard.ab2@6041>   MOVE.l D6,-(A7)
00022A0E <AmiBlitz3_wizzard.ab2@6042>   MOVEA.l $4(A3),A2
00022A10 <AmiBlitz3_wizzard.ab2@6043>   MOVEQ.l #$0E,D5
00022A14 <AmiBlitz3_wizzard.ab2@6044>    BSR.w writeoffs
00022A16 <AmiBlitz3_wizzard.ab2@6045>   MOVE.l (A7)+,D0
00022A1A <AmiBlitz3_wizzard.ab2@6046>   MOVE.l $4(A3),-(A7)
00022A1E <AmiBlitz3_wizzard.ab2@6047>   MOVE.l D0,$4(A3)
00022A20 <AmiBlitz3_wizzard.ab2@6048>   MOVE.l D6,D2
00022A22 <AmiBlitz3_wizzard.ab2@6049>   ADDQ.l #4,D2
00022A26 <AmiBlitz3_wizzard.ab2@6050>    BSR.w addhunkoffset
00022A28 <AmiBlitz3_wizzard.ab2@6051>   MOVEQ.l #$00,D3
00022A2C <AmiBlitz3_wizzard.ab2@6052>   MOVE.b $A(A3),D3
00022A2E <AmiBlitz3_wizzard.ab2@6053>   ADDQ.w #1,D3
00022A32 <AmiBlitz3_wizzard.ab2@6054>   BCLR #$0,D3
00022A34 <AmiBlitz3_wizzard.ab2@6055>   ADD.l D3,D6
00022A36 <AmiBlitz3_wizzard.ab2@6056>   MOVE.l A3,D2
00022A38 <AmiBlitz3_wizzard.ab2@6057>   MOVE.l D7,D1
00022A3E <AmiBlitz3_wizzard.ab2@6059>     MOVEA.l _dosbase,A6
00022A42 <AmiBlitz3_wizzard.ab2@6060>     JSR _Write(A6)
00022A46 <AmiBlitz3_wizzard.ab2@6061>   MOVE.l (A7)+,$4(A3)
00022A48 <AmiBlitz3_wizzard.ab2@6062>   MOVEA.l (A3),A3
00022A4C <AmiBlitz3_wizzard.ab2@6063> BRA.w restypes__loop
00022A4E <AmiBlitz3_wizzard.ab2@6066> RTS
00022A54 <AmiBlitz3_wizzard.ab2@6070>    TST.b resdisable
00022A58 <AmiBlitz3_wizzard.ab2@6071>    BEQ resconsts__l1
00022A5E <AmiBlitz3_wizzard.ab2@6072>    MOVE.l currentlabeladdr,a2
00022A64 <AmiBlitz3_wizzard.ab2@6073>    CMP.l #0,a2
00022A68 <AmiBlitz3_wizzard.ab2@6074>    BEQ resconsts__l1
00022A6A <AmiBlitz3_wizzard.ab2@6075>    MOVE.l (a2),a2
00022A6E <AmiBlitz3_wizzard.ab2@6076> BRA resconsts__l2
00022A74 <AmiBlitz3_wizzard.ab2@6079>    MOVEA.l labelbase,A2
00022A76 <AmiBlitz3_wizzard.ab2@6082>    MOVEQ.l #$00,D0
00022A7A <AmiBlitz3_wizzard.ab2@6085>    CMPA.w #$0,A2
00022A7E <AmiBlitz3_wizzard.ab2@6086>    BEQ.w resconsts__done
00022A86 <AmiBlitz3_wizzard.ab2@6087>   CMPI.l #$1,$4(A2)
00022A8A <AmiBlitz3_wizzard.ab2@6088>    BNE.w resconsts__next
00022A8C <AmiBlitz3_wizzard.ab2@6089>   ADDQ.w #1,D0
00022A8E <AmiBlitz3_wizzard.ab2@6092>   MOVEA.l (A2),A2
00022A92 <AmiBlitz3_wizzard.ab2@6093> BRA.w resconsts__loop
00022A98 <AmiBlitz3_wizzard.ab2@6096>   MOVE.w D0,temp1
00022A9A <AmiBlitz3_wizzard.ab2@6097>   MOVE.l D7,D1
00022AA0 <AmiBlitz3_wizzard.ab2@6098>   MOVE.l #temp1,D2
00022AA2 <AmiBlitz3_wizzard.ab2@6099>   MOVEQ.l #$02,D3
00022AA4 <AmiBlitz3_wizzard.ab2@6100>   ADDQ.l #2,D6
00022AAA <AmiBlitz3_wizzard.ab2@6102>     MOVEA.l _dosbase,A6
00022AAE <AmiBlitz3_wizzard.ab2@6103>     JSR _Write(A6)
00022AB4 <AmiBlitz3_wizzard.ab2@6104>    TST.b resdisable
00022AB8 <AmiBlitz3_wizzard.ab2@6105>    BEQ resconsts__done_l1
00022ABE <AmiBlitz3_wizzard.ab2@6106>    MOVE.l currentlabeladdr,a2
00022AC4 <AmiBlitz3_wizzard.ab2@6107>    CMP.l #0,a2
00022AC8 <AmiBlitz3_wizzard.ab2@6108>    BEQ resconsts__done_l1
00022ACA <AmiBlitz3_wizzard.ab2@6109>    MOVE.l (a2),a2
00022ACE <AmiBlitz3_wizzard.ab2@6110> BRA resconsts__loop2
00022AD4 <AmiBlitz3_wizzard.ab2@6113>    MOVEA.l labelbase,A2                                    ;write resident labels
00022AD8 <AmiBlitz3_wizzard.ab2@6116>    CMPA.w #$0,A2
00022ADC <AmiBlitz3_wizzard.ab2@6117>    BEQ.w resconsts__done2
00022AE4 <AmiBlitz3_wizzard.ab2@6118>   CMPI.l #$1,$4(A2)
00022AE8 <AmiBlitz3_wizzard.ab2@6119>    BNE.w resconsts__next2
00022AEA <AmiBlitz3_wizzard.ab2@6120>    MOVEQ.l #$00,D3
00022AEE <AmiBlitz3_wizzard.ab2@6121>   MOVE.b $12(A2),D3                                        ;length
00022AF0 <AmiBlitz3_wizzard.ab2@6122>   ADDQ.w #1,D3
00022AF4 <AmiBlitz3_wizzard.ab2@6123>   BCLR #$0,D3
00022AF6 <AmiBlitz3_wizzard.ab2@6124>   MOVE.l D6,D2
00022AF8 <AmiBlitz3_wizzard.ab2@6125>   ADD.l D3,D6
00022AFA <AmiBlitz3_wizzard.ab2@6128>   MOVE.l (A2),-(A7)
00022AFC <AmiBlitz3_wizzard.ab2@6129>   TST.l (A2)
00022B00 <AmiBlitz3_wizzard.ab2@6130>    BEQ.w resconsts__nonext
00022B02 <AmiBlitz3_wizzard.ab2@6131>   MOVE.l D6,(A2)
00022B06 <AmiBlitz3_wizzard.ab2@6132>    BSR.w addhunkoffset
00022B08 <AmiBlitz3_wizzard.ab2@6135>   MOVE.l A2,D2
00022B0A <AmiBlitz3_wizzard.ab2@6136>   MOVE.l D7,D1
00022B10 <AmiBlitz3_wizzard.ab2@6138>     MOVEA.l _dosbase,A6
00022B14 <AmiBlitz3_wizzard.ab2@6139>     JSR _Write(A6)
00022B16 <AmiBlitz3_wizzard.ab2@6140>   MOVE.l (A7)+,(A2)
00022B18 <AmiBlitz3_wizzard.ab2@6143>   MOVEA.l (A2),A2
00022B1C <AmiBlitz3_wizzard.ab2@6144> BRA.w resconsts__loop2
00022B1E <AmiBlitz3_wizzard.ab2@6147> RTS
00022B48 <AmiBlitz3_wizzard.ab2@6151>    !basic
00022B4E <AmiBlitz3_wizzard.ab2@6152>     MOVE.l ptr_resfile,d0
00022B5E <AmiBlitz3_wizzard.ab2@6153>     resfileP.l = Peek.l(?ptr_resfile)
00022B68 <AmiBlitz3_wizzard.ab2@6154>     If resfileP
00022B90 <AmiBlitz3_wizzard.ab2@6155>       resfile$ = Peek.s(resfileP)
00022BDC <AmiBlitz3_wizzard.ab2@6156>       tests.b = Instr(resfile$,"/")
00022C28 <AmiBlitz3_wizzard.ab2@6157>       testc.b = Instr(resfile$,":")
00022C4A <AmiBlitz3_wizzard.ab2@6158>       If tests=0 AND testc=0
00022CCA <AmiBlitz3_wizzard.ab2@6159>         resfile$ = dos_AddPart{my_residentsdir$,resfile$}
00022CDC <AmiBlitz3_wizzard.ab2@6160>         Poke.l ?ptr_resfile,&resfile$
00022CE2 <AmiBlitz3_wizzard.ab2@6162>     Else
00022D10 <AmiBlitz3_wizzard.ab2@6163>       error{"INTERNAL: Invalid pointer in ptr_resfile!"}
00022D2E <AmiBlitz3_wizzard.ab2@6165>    !asm
00022D30 <AmiBlitz3_wizzard.ab2@6166> RTS
00022D36 <AmiBlitz3_wizzard.ab2@6170>   MOVE.l A7,errstack
00022D40 <AmiBlitz3_wizzard.ab2@6172>   MOVE.l #next_resentry,errcont
00022D48 <AmiBlitz3_wizzard.ab2@6173>   MOVE.w #$FFFF,ezerr
00022D4C <AmiBlitz3_wizzard.ab2@6174>   BSR.w Aclearallvars
00022D50 <AmiBlitz3_wizzard.ab2@6175>   BSR.w free_residents
00022D56 <AmiBlitz3_wizzard.ab2@6177>   LEA residents_table,A5
00022D58 <AmiBlitz3_wizzard.ab2@6178>   MOVEQ.l #$07,D6
00022D5A <AmiBlitz3_wizzard.ab2@6181>     TST.b (A5)
00022D5E <AmiBlitz3_wizzard.ab2@6182>     BEQ.w next_resentry
00022D64 <AmiBlitz3_wizzard.ab2@6183>     MOVE.l A5,ptr_resfile
00022D68 <AmiBlitz3_wizzard.ab2@6184>     BSR check_residentpath
00022D6E <AmiBlitz3_wizzard.ab2@6185>     MOVE.l ptr_resfile,d1
00022D74 <AmiBlitz3_wizzard.ab2@6186>     MOVEA.l _dosbase,A6
00022D78 <AmiBlitz3_wizzard.ab2@6187>     JSR _LoadSeg(A6)
00022D7C <AmiBlitz3_wizzard.ab2@6188>     MOVE.l D0,$40(A5)
00022D80 <AmiBlitz3_wizzard.ab2@6189>     BNE.w reloadresident__yeah
00022D84 <AmiBlitz3_wizzard.ab2@6190>     BSR.w reserr
00022D86 <AmiBlitz3_wizzard.ab2@6193>     MOVEA.l D0,A3
00022D88 <AmiBlitz3_wizzard.ab2@6194>     ADDA.l A3,A3
00022D8A <AmiBlitz3_wizzard.ab2@6195>     ADDA.l A3,A3
00022D8C <AmiBlitz3_wizzard.ab2@6196>     ADDQ.w #4,A3                                           ;start of res
00022D90 <AmiBlitz3_wizzard.ab2@6197>     BSR.w JL_0_5A9E
00022D94 <AmiBlitz3_wizzard.ab2@6198>     BSR.w JL_0_5A62                                        ;add macros to list
00022D98 <AmiBlitz3_wizzard.ab2@6199>     BSR.w JL_0_5A32                                        ;read labels
00022D9C <AmiBlitz3_wizzard.ab2@6202>     LEA ResidentEntryStep(A5),A5       ;$44
00022DA0 <AmiBlitz3_wizzard.ab2@6203>   DBF D6,reloadresident__loop
00022DAA <AmiBlitz3_wizzard.ab2@6208>   MOVE.l #free_residents,errcont
00022DB0 <AmiBlitz3_wizzard.ab2@6210>   MOVEA.l newtype_string,A3
00022DB2 <AmiBlitz3_wizzard.ab2@6211>   MOVEQ.l #$0B,D7
00022DB6 <AmiBlitz3_wizzard.ab2@6212>   BSR.w checkclash
00022DBC <AmiBlitz3_wizzard.ab2@6214>   MOVEA.l macrobase,A3
00022DBE <AmiBlitz3_wizzard.ab2@6215>   MOVEQ.l #$d,D7
00022DC2 <AmiBlitz3_wizzard.ab2@6216>   BSR.w checkclash
00022DC8 <AmiBlitz3_wizzard.ab2@6218>   MOVEA.l firstconst,A3
00022DCA <AmiBlitz3_wizzard.ab2@6219>   MOVEQ.l #$19,D7
00022DCE <AmiBlitz3_wizzard.ab2@6220>   BSR.w checkclash
00022DD0 <AmiBlitz3_wizzard.ab2@6223> RTS
00022DD2 <AmiBlitz3_wizzard.ab2@6227>   MOVEA.l A3,A4
00022DD6 <AmiBlitz3_wizzard.ab2@6230>     CMPA.w #$0,A4
00022DDA <AmiBlitz3_wizzard.ab2@6231>     BEQ.w checkclash__done
00022DE0 <AmiBlitz3_wizzard.ab2@6233>     LEA ptr_parameterstore,A0
00022DE4 <AmiBlitz3_wizzard.ab2@6234>     LEA $0(A4,D7.W),A1
00022DE6 <AmiBlitz3_wizzard.ab2@6235>     MOVEQ.l #-$01,D2
00022DE8 <AmiBlitz3_wizzard.ab2@6238>       ADDQ.w #1,D2
00022DEA <AmiBlitz3_wizzard.ab2@6239>       MOVE.b (A1)+,(A0)+
00022DEE <AmiBlitz3_wizzard.ab2@6240>     BNE.w checkclash__loop2
00022DF0 <AmiBlitz3_wizzard.ab2@6241>     MOVEA.l A3,A2
00022DF4 <AmiBlitz3_wizzard.ab2@6244>     BSR.w findlab
00022DF8 <AmiBlitz3_wizzard.ab2@6245>     BNE.w checkclash__next                                  ;not found
00022DFA <AmiBlitz3_wizzard.ab2@6246>     CMPA.l A2,A4
00022DFE <AmiBlitz3_wizzard.ab2@6247>     BEQ.w checkclash__l1
00022E00 <AmiBlitz3_wizzard.ab2@6248>     MOVE.l a1,a5
00022E04 <AmiBlitz3_wizzard.ab2@6249> BRA clasherr
00022E08 <AmiBlitz3_wizzard.ab2@6252> BRA.w checkclash__more
00022E0A <AmiBlitz3_wizzard.ab2@6255>     MOVEA.l (A4),A4
00022E0E <AmiBlitz3_wizzard.ab2@6256> BRA.w checkclash__loop
00022E10 <AmiBlitz3_wizzard.ab2@6259> RTS
00022E16 <AmiBlitz3_wizzard.ab2@6263>   MOVEA.l _dosbase,A6
00022E1C <AmiBlitz3_wizzard.ab2@6265>   LEA newtype_string,A0
00022E22 <AmiBlitz3_wizzard.ab2@6266>   MOVE.l A0,lastrestype
00022E24 <AmiBlitz3_wizzard.ab2@6267>   CLR.l (A0)
00022E2A <AmiBlitz3_wizzard.ab2@6269>   LEA macrobase,A0
00022E30 <AmiBlitz3_wizzard.ab2@6270>   MOVE.l A0,currentmacroaddr
00022E32 <AmiBlitz3_wizzard.ab2@6271>   CLR.l (A0)
00022E38 <AmiBlitz3_wizzard.ab2@6273>   LEA labelbase,A0
00022E3E <AmiBlitz3_wizzard.ab2@6274>   MOVE.l A0,currentlabeladdr
00022E40 <AmiBlitz3_wizzard.ab2@6275>   CLR.l (A0)
00022E46 <AmiBlitz3_wizzard.ab2@6276>   CLR.w rescnt
00022E7E <AmiBlitz3_wizzard.ab2@6280>   !ComData_SetB{comByte_DebugMode,debugmode}
00022E84 <AmiBlitz3_wizzard.ab2@6283>   LEA residents_table,A2
00022E86 <AmiBlitz3_wizzard.ab2@6284>   MOVEQ.l #$07,D2
00022E8A <AmiBlitz3_wizzard.ab2@6287>      MOVE.l $40(A2),D1
00022E8E <AmiBlitz3_wizzard.ab2@6288>      BEQ.w free_residents__next
00022E92 <AmiBlitz3_wizzard.ab2@6289>       CLR.l $40(A2)
00022E98 <AmiBlitz3_wizzard.ab2@6290>       MOVEA.l _dosbase,A6
00022E9C <AmiBlitz3_wizzard.ab2@6291>       JSR _UnLoadSeg(A6)
00022EA0 <AmiBlitz3_wizzard.ab2@6294>      LEA ResidentEntryStep(A2),A2   ; $44
00022EA4 <AmiBlitz3_wizzard.ab2@6295>    DBF D2,free_residents__loop
00022EA6 <AmiBlitz3_wizzard.ab2@6297> RTS
00022EA8 <AmiBlitz3_wizzard.ab2@6301>   MOVE.w (A3)+,D1
00022EAC <AmiBlitz3_wizzard.ab2@6302>   BEQ.w JL_0_5A60
00022EB2 <AmiBlitz3_wizzard.ab2@6303>   MOVEA.l currentlabeladdr,A2
00022EB4 <AmiBlitz3_wizzard.ab2@6304>   MOVE.l A3,(A2)
00022EB6 <AmiBlitz3_wizzard.ab2@6305>   SUBQ.w #1,D1
00022EB8 <AmiBlitz3_wizzard.ab2@6308>     MOVEA.l A3,A2
00022EBA <AmiBlitz3_wizzard.ab2@6309>     MOVEA.l (A3),A3
00022EBE <AmiBlitz3_wizzard.ab2@6310>   DBF D1,JL_0_5A42
00022EC0 <AmiBlitz3_wizzard.ab2@6312>   CLR.l (a2)                                               ;bugfix for object
00022EC6 <AmiBlitz3_wizzard.ab2@6313>   MOVE.l A2,currentlabeladdr
00022EC8 <AmiBlitz3_wizzard.ab2@6314>   MOVEA.l A2,A3
00022ECA <AmiBlitz3_wizzard.ab2@6315>   MOVEQ.l #$00,D0
00022ECE <AmiBlitz3_wizzard.ab2@6316>   MOVE.b $12(A3),D0
00022ED0 <AmiBlitz3_wizzard.ab2@6317>   ADDQ.w #1,D0
00022ED4 <AmiBlitz3_wizzard.ab2@6318>   BCLR #$0,D0
00022ED6 <AmiBlitz3_wizzard.ab2@6319>   ADDA.w D0,A3
00022ED8 <AmiBlitz3_wizzard.ab2@6322> RTS
00022EDA <AmiBlitz3_wizzard.ab2@6326>   MOVE.w (A3)+,D1
00022EDE <AmiBlitz3_wizzard.ab2@6327>   BEQ.w JL_0_5A9C
00022EE4 <AmiBlitz3_wizzard.ab2@6329>   MOVEA.l currentmacroaddr,A2
00022EE6 <AmiBlitz3_wizzard.ab2@6330>   MOVE.l A3,(A2)
00022EE8 <AmiBlitz3_wizzard.ab2@6331>   SUBQ.w #1,D1
00022EEA <AmiBlitz3_wizzard.ab2@6334>     MOVEA.l A3,A2
00022EEC <AmiBlitz3_wizzard.ab2@6335>     MOVEA.l (A3),A3
00022EF0 <AmiBlitz3_wizzard.ab2@6336>   DBF D1,JL_0_5A72
00022EF6 <AmiBlitz3_wizzard.ab2@6338>   MOVE.l A2,currentmacroaddr
00022EF8 <AmiBlitz3_wizzard.ab2@6339>   MOVEA.l A2,A3
00022EFA <AmiBlitz3_wizzard.ab2@6340>   MOVEQ.l #$00,D0
00022EFE <AmiBlitz3_wizzard.ab2@6341>   MOVE.b $C(A3),D0
00022F00 <AmiBlitz3_wizzard.ab2@6342>   ADDQ.w #1,D0
00022F04 <AmiBlitz3_wizzard.ab2@6343>   BCLR #$0,D0
00022F08 <AmiBlitz3_wizzard.ab2@6344>   MOVE.w $8(A3),D1
00022F0A <AmiBlitz3_wizzard.ab2@6345>   ADDQ.w #1,D1
00022F0E <AmiBlitz3_wizzard.ab2@6346>   BCLR #$0,D1
00022F10 <AmiBlitz3_wizzard.ab2@6347>   ADDA.w D0,A3
00022F12 <AmiBlitz3_wizzard.ab2@6348>   ADDA.w D1,A3
00022F14 <AmiBlitz3_wizzard.ab2@6351> RTS
00022F16 <AmiBlitz3_wizzard.ab2@6355>   MOVE.w (A3)+,D1
00022F1A <AmiBlitz3_wizzard.ab2@6356>   BEQ.w JL_0_5B38
00022F1C <AmiBlitz3_wizzard.ab2@6357>   MOVE.w D1,-(A7)
00022F1E <AmiBlitz3_wizzard.ab2@6358>   SUBQ.w #1,D1
00022F24 <AmiBlitz3_wizzard.ab2@6359>   MOVEA.l lastrestype,A2
00022F26 <AmiBlitz3_wizzard.ab2@6360>   MOVE.l A2,-(A7)
00022F28 <AmiBlitz3_wizzard.ab2@6363>       MOVE.l (A3),D0
00022F2C <AmiBlitz3_wizzard.ab2@6364>       BEQ.w JL_0_5ABC
00022F2E <AmiBlitz3_wizzard.ab2@6365>       MOVEA.l D0,A3
00022F32 <AmiBlitz3_wizzard.ab2@6366> BRA.w JL_0_5AB0
00022F36 <AmiBlitz3_wizzard.ab2@6369>       MOVE.b $E(A3),D0
00022F38 <AmiBlitz3_wizzard.ab2@6370>       ADDQ.w #1,D0
00022F3C <AmiBlitz3_wizzard.ab2@6371>       BCLR #$0,D0
00022F3E <AmiBlitz3_wizzard.ab2@6372>       ADDA.w D0,A3
00022F40 <AmiBlitz3_wizzard.ab2@6373>       MOVE.l A3,(A2)
00022F42 <AmiBlitz3_wizzard.ab2@6374>       MOVEA.l A3,A2
00022F44 <AmiBlitz3_wizzard.ab2@6375>       MOVEQ.l #$00,D0
00022F48 <AmiBlitz3_wizzard.ab2@6376>       MOVE.b $A(A3),D0
00022F4A <AmiBlitz3_wizzard.ab2@6377>       ADDQ.w #1,D0
00022F4E <AmiBlitz3_wizzard.ab2@6378>       BCLR #$0,D0
00022F50 <AmiBlitz3_wizzard.ab2@6379>       ADDA.w D0,A3
00022F54 <AmiBlitz3_wizzard.ab2@6380>   DBF D1,JL_0_5AB0
00022F56 <AmiBlitz3_wizzard.ab2@6382>   MOVEA.l (A7)+,A0
00022F58 <AmiBlitz3_wizzard.ab2@6383>   MOVEA.l (A0),A0
00022F5C <AmiBlitz3_wizzard.ab2@6386>     CMPA.w #$0,A0
00022F60 <AmiBlitz3_wizzard.ab2@6387>     BEQ.w JL_0_5B2A
00022F64 <AmiBlitz3_wizzard.ab2@6388>     MOVEA.l $4(A0),A1
00022F68 <AmiBlitz3_wizzard.ab2@6391>     CMPA.w #$0,A1
00022F6C <AmiBlitz3_wizzard.ab2@6392>     BEQ.w JL_0_5B24
00022F70 <AmiBlitz3_wizzard.ab2@6393>     MOVE.w $A(A1),D0
00022F76 <AmiBlitz3_wizzard.ab2@6394>     MOVEA.l newtypebase,A4
00022F7A <AmiBlitz3_wizzard.ab2@6395>     CMP.w #$7,D0
00022F7E <AmiBlitz3_wizzard.ab2@6396>     BCS.w JL_0_5B0E
00022F84 <AmiBlitz3_wizzard.ab2@6397>     SUB.w rescnt,D0
00022F86 <AmiBlitz3_wizzard.ab2@6400>     SUBQ.w #1,D0
00022F8A <AmiBlitz3_wizzard.ab2@6401>     BMI.w JL_0_5B1A
00022F8C <AmiBlitz3_wizzard.ab2@6404>        MOVEA.l (A4),A4
00022F90 <AmiBlitz3_wizzard.ab2@6405>   DBF D0,JL_0_5B14
00022F94 <AmiBlitz3_wizzard.ab2@6408>     MOVE.l A4,$A(A1)
00022F96 <AmiBlitz3_wizzard.ab2@6409>     MOVEA.l (A1),A1
00022F9A <AmiBlitz3_wizzard.ab2@6410> BRA.w JL_0_5AEE
00022F9C <AmiBlitz3_wizzard.ab2@6413>     MOVEA.l (A0),A0
00022FA0 <AmiBlitz3_wizzard.ab2@6414> BRA.w JL_0_5AE2
00022FA2 <AmiBlitz3_wizzard.ab2@6417>   MOVE.w (A7)+,D0
00022FA8 <AmiBlitz3_wizzard.ab2@6418>   ADD.w D0,rescnt
00022FAE <AmiBlitz3_wizzard.ab2@6419>   MOVE.l A2,lastrestype
00022FB0 <AmiBlitz3_wizzard.ab2@6422> RTS
00022FB6 <AmiBlitz3_wizzard.ab2@6426>   LEA tokens,A0
00022FBA <AmiBlitz3_wizzard.ab2@6427>   MOVE.w #$003A,D0                                         ; $003A : 58 dec
00022FBC <AmiBlitz3_wizzard.ab2@6430>     MOVEA.l (A0),A0
00022FC0 <AmiBlitz3_wizzard.ab2@6431>   DBF D0,JL_0_5BD0
00022FC6 <AmiBlitz3_wizzard.ab2@6433>   MOVEA.l #asmpnts,A1                                      ;create tokentab
00022FCA <AmiBlitz3_wizzard.ab2@6434>   MOVE.w #$0076,D0                                         ; $0076 : 118 dec
00022FCE <AmiBlitz3_wizzard.ab2@6437>       LEA $6(A0),A2
00022FD0 <AmiBlitz3_wizzard.ab2@6440>         TST.b (A2)+
00022FD4 <AmiBlitz3_wizzard.ab2@6441>       BNE.w JL_0_5BE4
00022FD6 <AmiBlitz3_wizzard.ab2@6444>         TST.b (A2)+
00022FDA <AmiBlitz3_wizzard.ab2@6445>       BNE.w JL_0_5BEA
00022FDC <AmiBlitz3_wizzard.ab2@6447>       ADDQ.w #1,A2
00022FDE <AmiBlitz3_wizzard.ab2@6448>       EXG.l D1,A2
00022FE2 <AmiBlitz3_wizzard.ab2@6449>       BCLR #$0,D1
00022FE4 <AmiBlitz3_wizzard.ab2@6450>       EXG.l D1,A2
00022FE6 <AmiBlitz3_wizzard.ab2@6451>       MOVE.l A2,(A1)+
00022FE8 <AmiBlitz3_wizzard.ab2@6452>       MOVEA.l (A0),A0
00022FEC <AmiBlitz3_wizzard.ab2@6453>   DBF D0,JL_0_5BE0
00022FEE <AmiBlitz3_wizzard.ab2@6454> RTS
00022FF2 <AmiBlitz3_wizzard.ab2@6458>   BSR.w asmconst
00022FF4 <AmiBlitz3_wizzard.ab2@6459>   MOVEQ.l #$0B,D5
00022FF6 <AmiBlitz3_wizzard.ab2@6460> RTS
00022FF8 <AmiBlitz3_wizzard.ab2@6463> unmove:  Ds.w 1
00022FFC <AmiBlitz3_wizzard.ab2@6467>   MOVE.w #$48E7,D1
00023000 <AmiBlitz3_wizzard.ab2@6468>   BSR.w writeword                                          ;movem.l -(a7)
00023004 <AmiBlitz3_wizzard.ab2@6469>   MOVE.w #$000F,D2
00023006 <AmiBlitz3_wizzard.ab2@6470>   SUB.w D4,D2
00023008 <AmiBlitz3_wizzard.ab2@6471>   MOVEQ.l #-$01,D1
0002300A <AmiBlitz3_wizzard.ab2@6472>   BCLR D2,D1
0002300E <AmiBlitz3_wizzard.ab2@6473>   BSR.w writeword
00023010 <AmiBlitz3_wizzard.ab2@6474>   MOVEQ.l #-$01,D1
00023012 <AmiBlitz3_wizzard.ab2@6475>   BCLR D4,D1
00023018 <AmiBlitz3_wizzard.ab2@6476>   MOVE.w D1,unmove
0002301A <AmiBlitz3_wizzard.ab2@6477> RTS
0002301E <AmiBlitz3_wizzard.ab2@6481>   MOVE.w #$4CDF,D1
00023022 <AmiBlitz3_wizzard.ab2@6482>   BSR.w writeword
00023026 <AmiBlitz3_wizzard.ab2@6483>   MOVE.w unmove(PC),D1
0002302A <AmiBlitz3_wizzard.ab2@6484> BRA.w writeword
0002302E <AmiBlitz3_wizzard.ab2@6497>   BSR.w JL_0_5D22
00023032 <AmiBlitz3_wizzard.ab2@6498>   CMP.w #$2C,D0                                            ;#','
00023036 <AmiBlitz3_wizzard.ab2@6499>    BNE.w syntaxerr
0002303C <AmiBlitz3_wizzard.ab2@6500>   MOVE.l #$48E7FFFE,D1                                     ;movem to stack
00023040 <AmiBlitz3_wizzard.ab2@6501>    BSR.w writelong
00023042 <AmiBlitz3_wizzard.ab2@6502>   MOVE.w D4,D1
00023046 <AmiBlitz3_wizzard.ab2@6503>   ORI.w #$2F00,D1
0002304A <AmiBlitz3_wizzard.ab2@6504>    BSR.w writeword
0002304E <AmiBlitz3_wizzard.ab2@6505>    BSR.w get1bytemain
00023052 <AmiBlitz3_wizzard.ab2@6506>    BSR.w getparameter
00023056 <AmiBlitz3_wizzard.ab2@6507>    BSR.w JL_0_8E3C
0002305A <AmiBlitz3_wizzard.ab2@6508>    BSR.w calcvar
0002305E <AmiBlitz3_wizzard.ab2@6509>    BTST #$E,D2
00023062 <AmiBlitz3_wizzard.ab2@6510>    BEQ.w JL_0_5C80
00023066 <AmiBlitz3_wizzard.ab2@6513>    MOVE.b #$3,D2
0002306A <AmiBlitz3_wizzard.ab2@6514> BRA.w JL_0_5C8E
0002306C <AmiBlitz3_wizzard.ab2@6517>   TST.b D2
00023070 <AmiBlitz3_wizzard.ab2@6518>    BEQ.w JL_0_5C78
00023074 <AmiBlitz3_wizzard.ab2@6519>   CMP.b #$7,D2
00023078 <AmiBlitz3_wizzard.ab2@6520>    BEQ.w JL_0_5C78
0002307C <AmiBlitz3_wizzard.ab2@6523>   BTST #$F,D2
00023080 <AmiBlitz3_wizzard.ab2@6524>    BNE.w JL_0_5CA4
00023084 <AmiBlitz3_wizzard.ab2@6525>   MOVE.w #$45ED,D1                                         ;lea x(a5),a2
00023088 <AmiBlitz3_wizzard.ab2@6526>    BSR.w writeword
0002308A <AmiBlitz3_wizzard.ab2@6527>   MOVE.w D3,D1
0002308E <AmiBlitz3_wizzard.ab2@6528>    BSR.w writeword
00023092 <AmiBlitz3_wizzard.ab2@6531>   MOVE.w #$201F,D1                                         ;move.l (a7)+,d0
00023096 <AmiBlitz3_wizzard.ab2@6532>    BSR.w writeword
0002309A <AmiBlitz3_wizzard.ab2@6533>   MOVE.w #$1480,D1
0002309E <AmiBlitz3_wizzard.ab2@6534>   CMP.b #$1,D2
000230A2 <AmiBlitz3_wizzard.ab2@6535>    BEQ.w JL_0_5CC8
000230A6 <AmiBlitz3_wizzard.ab2@6536>   EORI.w #$3000,D1
000230AA <AmiBlitz3_wizzard.ab2@6537>   CMP.b #$2,D2
000230AE <AmiBlitz3_wizzard.ab2@6538>    BNE.w JL_0_5CC8
000230B2 <AmiBlitz3_wizzard.ab2@6539>   ORI.w #$1000,D1
000230B6 <AmiBlitz3_wizzard.ab2@6542>   BSR.w writeword
000230BC <AmiBlitz3_wizzard.ab2@6543>   MOVE.l #$4CDF7FFF,D1
000230C0 <AmiBlitz3_wizzard.ab2@6544> BRA.w writelong
000230C4 <AmiBlitz3_wizzard.ab2@6548>   BSR.w JL_0_5D22
000230C8 <AmiBlitz3_wizzard.ab2@6549>   CMP.w #$2C,D0
000230CC <AmiBlitz3_wizzard.ab2@6550>    BNE.w syntaxerr
000230D0 <AmiBlitz3_wizzard.ab2@6551>    BSR.w regmovems
000230D2 <AmiBlitz3_wizzard.ab2@6552>   MOVE.w D4,-(A7)
000230D4 <AmiBlitz3_wizzard.ab2@6553>   MOVEQ.l #$03,D2
000230D8 <AmiBlitz3_wizzard.ab2@6554>    BSR.w eval
000230DA <AmiBlitz3_wizzard.ab2@6555>   MOVE.w (A7)+,D1
000230DE <AmiBlitz3_wizzard.ab2@6556>    BEQ.w JL_0_5D1A
000230E2 <AmiBlitz3_wizzard.ab2@6557>   CMP.w #$8,D1
000230E6 <AmiBlitz3_wizzard.ab2@6558>    BCC.w JL_0_5D0C
000230E8 <AmiBlitz3_wizzard.ab2@6559>   LSL.w #8,D1
000230EA <AmiBlitz3_wizzard.ab2@6560>   LSL.w #1,D1
000230EE <AmiBlitz3_wizzard.ab2@6561>   ORI.w #$2000,D1
000230F2 <AmiBlitz3_wizzard.ab2@6562>    BSR.w writeword
000230F6 <AmiBlitz3_wizzard.ab2@6563> BRA.w JL_0_5D1A
000230F8 <AmiBlitz3_wizzard.ab2@6566>   SUBQ.w #8,D1
000230FA <AmiBlitz3_wizzard.ab2@6567>   LSL.w #8,D1
000230FC <AmiBlitz3_wizzard.ab2@6568>   LSL.w #1,D1
00023100 <AmiBlitz3_wizzard.ab2@6569>   ORI.w #$2040,D1
00023104 <AmiBlitz3_wizzard.ab2@6570>   BSR.w writeword
00023108 <AmiBlitz3_wizzard.ab2@6573> BRA.w dounmove
0002310C <AmiBlitz3_wizzard.ab2@6577>   BSR.w get1bytemain
00023110 <AmiBlitz3_wizzard.ab2@6580>   ORI.w #$20,D0
00023114 <AmiBlitz3_wizzard.ab2@6581>   CMP.w #$64,D0
00023118 <AmiBlitz3_wizzard.ab2@6582>    BEQ.w JL_0_5D4E
0002311C <AmiBlitz3_wizzard.ab2@6583>   CMP.w #$61,D0
00023120 <AmiBlitz3_wizzard.ab2@6584>    BNE.w syntaxerr
00023124 <AmiBlitz3_wizzard.ab2@6585>    BSR.w JL_0_5D4E
00023126 <AmiBlitz3_wizzard.ab2@6586>   ADDQ.w #8,D4
00023128 <AmiBlitz3_wizzard.ab2@6587> RTS
00023154 <AmiBlitz3_wizzard.ab2@6591>   !fget                                                   ;bsr.w get1bytemain
00023158 <AmiBlitz3_wizzard.ab2@6593>   ORI.w #$20,D0
0002315C <AmiBlitz3_wizzard.ab2@6596>   CMP.w #$61,D0
00023160 <AmiBlitz3_wizzard.ab2@6597>   BNE.w syntaxerr
0002318C <AmiBlitz3_wizzard.ab2@6600>   !fget                                                    ;bsr.w get1bytemain
00023190 <AmiBlitz3_wizzard.ab2@6601>   SUBI.w #$30,D0
00023194 <AmiBlitz3_wizzard.ab2@6602>    BMI.w syntaxerr
00023198 <AmiBlitz3_wizzard.ab2@6603>   CMP.w #$7,D0
0002319C <AmiBlitz3_wizzard.ab2@6604>    BHI.w syntaxerr
0002319E <AmiBlitz3_wizzard.ab2@6605>   MOVE.w D0,D4
000231CA <AmiBlitz3_wizzard.ab2@6606>   !fget
000231CC <AmiBlitz3_wizzard.ab2@6607> RTS                                                        ;bra.w get1bytemain
000231CE <AmiBlitz3_wizzard.ab2@6611>   ADDQ.w #8,D4
000231D0 <AmiBlitz3_wizzard.ab2@6614>   MOVEQ.l #$00,D5
000231D4 <AmiBlitz3_wizzard.ab2@6615>   SUBI.w #$30,D4
000231D8 <AmiBlitz3_wizzard.ab2@6618>   CMP.w #$2D,D0
000231DC <AmiBlitz3_wizzard.ab2@6619>    BEQ.w JL_0_5D9E
000231E0 <AmiBlitz3_wizzard.ab2@6620>   CMP.w #$2F,D0
000231E4 <AmiBlitz3_wizzard.ab2@6621>    BEQ.w JL_0_5D8C
000231E8 <AmiBlitz3_wizzard.ab2@6622> BRA.w syntaxerr
000231EA <AmiBlitz3_wizzard.ab2@6625>   BSET D4,D5
000231EC <AmiBlitz3_wizzard.ab2@6628>   MOVE.w D5,D4
000231EE <AmiBlitz3_wizzard.ab2@6629>   MOVEQ.l #$0F,D5
000231F0 <AmiBlitz3_wizzard.ab2@6630> RTS
000231F2 <AmiBlitz3_wizzard.ab2@6633>   BSET D4,D5
000231F6 <AmiBlitz3_wizzard.ab2@6634>   BSR.w JL_0_5D1E
00023208 <AmiBlitz3_wizzard.ab2@6635>   !compare3                                                ;bsr.w JL_0_5FC0
0002320C <AmiBlitz3_wizzard.ab2@6636>   BNE.w JL_0_5D70
00023210 <AmiBlitz3_wizzard.ab2@6637> BRA.w JL_0_5D84
00023212 <AmiBlitz3_wizzard.ab2@6640>   MOVE.w D4,D1
00023216 <AmiBlitz3_wizzard.ab2@6641>    BSR.w JL_0_5D1E
00023218 <AmiBlitz3_wizzard.ab2@6642>   CMP.w D4,D1
0002321C <AmiBlitz3_wizzard.ab2@6643>    BLS.w JL_0_5DAC
0002321E <AmiBlitz3_wizzard.ab2@6644>   EXG.l D4,D1
00023220 <AmiBlitz3_wizzard.ab2@6647>   BSET D1,D5
00023222 <AmiBlitz3_wizzard.ab2@6648>   ADDQ.w #1,D1
00023224 <AmiBlitz3_wizzard.ab2@6649>   CMP.w D4,D1
00023228 <AmiBlitz3_wizzard.ab2@6650>    BLS.w JL_0_5DAC
0002323A <AmiBlitz3_wizzard.ab2@6651>   !compare3                                                ;bsr.w JL_0_5FC0
0002323E <AmiBlitz3_wizzard.ab2@6652>   BNE.w JL_0_5D70
00023242 <AmiBlitz3_wizzard.ab2@6653> BRA.w JL_0_5D86
00023244 <AmiBlitz3_wizzard.ab2@6656>   MOVEA.l A5,A4                                            ;bsr.w get1bytemain
00023270 <AmiBlitz3_wizzard.ab2@6657>    !fget
00023274 <AmiBlitz3_wizzard.ab2@6658>   CMP.w #$23,D0
00023278 <AmiBlitz3_wizzard.ab2@6659>    BEQ.w getimm
0002327C <AmiBlitz3_wizzard.ab2@6660>   CMP.w #$28,D0
00023280 <AmiBlitz3_wizzard.ab2@6661>    BEQ.w JL_0_5DFE
00023284 <AmiBlitz3_wizzard.ab2@6662>   CMP.w #$2D,D0
00023288 <AmiBlitz3_wizzard.ab2@6663>    BNE.w JL_0_5E20
000232B4 <AmiBlitz3_wizzard.ab2@6664>    !fget                                                   ;bsr.w get1bytemain       -(
000232B8 <AmiBlitz3_wizzard.ab2@6665>   CMP.w #$28,D0
000232BC <AmiBlitz3_wizzard.ab2@6666>    BNE.w JL_0_5F4E
000232C0 <AmiBlitz3_wizzard.ab2@6667>    BSR.w JL_0_5D3E
000232C4 <AmiBlitz3_wizzard.ab2@6668>   CMP.w #$29,D0
000232C8 <AmiBlitz3_wizzard.ab2@6669>    BNE.w syntaxerr
000232CA <AmiBlitz3_wizzard.ab2@6670>   MOVEQ.l #$04,D5
000232F6 <AmiBlitz3_wizzard.ab2@6671>   !fget                                                    ;bsr.w get1bytemain
000232F8 <AmiBlitz3_wizzard.ab2@6672> RTS
000232FC <AmiBlitz3_wizzard.ab2@6676>   BSR.w JL_0_5D3E
00023300 <AmiBlitz3_wizzard.ab2@6677>   CMP.w #$29,D0
00023304 <AmiBlitz3_wizzard.ab2@6678>    BNE.w syntaxerr
00023330 <AmiBlitz3_wizzard.ab2@6679>   !fget                                                    ;bsr.w get1bytemain
00023334 <AmiBlitz3_wizzard.ab2@6680>   CMP.w #$2B,D0
00023338 <AmiBlitz3_wizzard.ab2@6681>    BEQ.w JL_0_5E1A
0002333A <AmiBlitz3_wizzard.ab2@6682>   MOVEQ.l #$02,D5
0002333C <AmiBlitz3_wizzard.ab2@6683> RTS
0002333E <AmiBlitz3_wizzard.ab2@6687>   MOVEQ.l #$03,D5
0002336A <AmiBlitz3_wizzard.ab2@6688>   !fget                                                    ;bra.w get1bytemain
0002336C <AmiBlitz3_wizzard.ab2@6689> RTS
00023370 <AmiBlitz3_wizzard.ab2@6693>   ORI.w #$20,D0
00023372 <AmiBlitz3_wizzard.ab2@6694>   MOVE.w D0,D1                                            
0002339E <AmiBlitz3_wizzard.ab2@6695>    !fget                                                   ;bsr.w get1bytemain
000233A2 <AmiBlitz3_wizzard.ab2@6696>   CMP.w #$64,D1
000233A6 <AmiBlitz3_wizzard.ab2@6697>    BNE.w JL_0_5E6C
000233AA <AmiBlitz3_wizzard.ab2@6698>   CMP.w #$30,D0
000233AE <AmiBlitz3_wizzard.ab2@6699>    BCS.w JL_0_5EAE
000233B2 <AmiBlitz3_wizzard.ab2@6700>   CMP.w #$37,D0
000233B6 <AmiBlitz3_wizzard.ab2@6701>    BHI.w JL_0_5EAE
000233B8 <AmiBlitz3_wizzard.ab2@6702>   MOVE.w D0,D4
000233E4 <AmiBlitz3_wizzard.ab2@6703>    !fget                                                   ;bsr.w get1bytemain
000233F6 <AmiBlitz3_wizzard.ab2@6704>    !compare3                                               ;bsr.w JL_0_5FC0
000233FA <AmiBlitz3_wizzard.ab2@6705>    BEQ.w JL_0_5E64
000233FE <AmiBlitz3_wizzard.ab2@6706>   CMP.w #$2D,D0
00023402 <AmiBlitz3_wizzard.ab2@6707>    BEQ.w JL_0_5D6A
00023406 <AmiBlitz3_wizzard.ab2@6708>   CMP.w #$2F,D0
0002340A <AmiBlitz3_wizzard.ab2@6709>    BEQ.w JL_0_5D6A
0002340E <AmiBlitz3_wizzard.ab2@6710> BRA.w JL_0_5EB8
00023410 <AmiBlitz3_wizzard.ab2@6713>   MOVEQ.l #$00,D5
00023414 <AmiBlitz3_wizzard.ab2@6714>   SUBI.w #$30,D4
00023416 <AmiBlitz3_wizzard.ab2@6715> RTS
0002341A <AmiBlitz3_wizzard.ab2@6718>    CMP.w #$61,D1
0002341E <AmiBlitz3_wizzard.ab2@6719>    BNE.w JL_0_5EAE
00023422 <AmiBlitz3_wizzard.ab2@6720>   CMP.w #$30,D0
00023426 <AmiBlitz3_wizzard.ab2@6721>    BCS.w JL_0_5EAE
0002342A <AmiBlitz3_wizzard.ab2@6722>   CMP.w #$37,D0
0002342E <AmiBlitz3_wizzard.ab2@6723>    BHI.w JL_0_5EAE
00023430 <AmiBlitz3_wizzard.ab2@6724>   MOVE.w D0,D4
0002345C <AmiBlitz3_wizzard.ab2@6725>    !fget                                                   ;bsr.w get1bytemain
0002346E <AmiBlitz3_wizzard.ab2@6726>    !compare3                                               ;bsr.w JL_0_5FC0
00023472 <AmiBlitz3_wizzard.ab2@6727>    BEQ.w JL_0_5EA6
00023476 <AmiBlitz3_wizzard.ab2@6728>   CMP.w #$2D,D0
0002347A <AmiBlitz3_wizzard.ab2@6729>    BEQ.w JL_0_5D68                                         ;movem
0002347E <AmiBlitz3_wizzard.ab2@6730>   CMP.w #$2F,D0
00023482 <AmiBlitz3_wizzard.ab2@6731>    BEQ.w JL_0_5D68
00023486 <AmiBlitz3_wizzard.ab2@6732> BRA.w JL_0_5EB8
00023488 <AmiBlitz3_wizzard.ab2@6735>   MOVEQ.l #1,d5
0002348C <AmiBlitz3_wizzard.ab2@6736>   SUBI.w #$30,D4
00023490 <AmiBlitz3_wizzard.ab2@6738> BRA 'l10
00023492 <AmiBlitz3_wizzard.ab2@6739>   ADDQ.w #8,d4
00023494 <AmiBlitz3_wizzard.ab2@6740>   MOVEQ #0,d5
00023496 <AmiBlitz3_wizzard.ab2@6741>   BSET d4,d5
00023498 <AmiBlitz3_wizzard.ab2@6742>   MOVE.w d5,d4
0002349A <AmiBlitz3_wizzard.ab2@6743>   MOVEQ.l #$0f,D5                                          ;01
0002349C <AmiBlitz3_wizzard.ab2@6746> RTS
000234A0 <AmiBlitz3_wizzard.ab2@6750>   ORI.w #$20,D0
000234A2 <AmiBlitz3_wizzard.ab2@6751>   MOVE.w D0,D4
000234CE <AmiBlitz3_wizzard.ab2@6752>    !fget                                                   ;bsr.w get1bytemain
000234E0 <AmiBlitz3_wizzard.ab2@6755>   !compare3                                                ;bsr.w JL_0_5FC0
000234E4 <AmiBlitz3_wizzard.ab2@6756>    BNE.w JL_0_5EF2
000234E8 <AmiBlitz3_wizzard.ab2@6757>   CMP.w #$73,D1
000234EC <AmiBlitz3_wizzard.ab2@6758>    BNE.w JL_0_5EF2
000234F0 <AmiBlitz3_wizzard.ab2@6759>   CMP.w #$70,D4
000234F4 <AmiBlitz3_wizzard.ab2@6760>    BNE.w JL_0_5EDE
00023506 <AmiBlitz3_wizzard.ab2@6761>    !compare3                                               ;bsr.w JL_0_5FC0
0002350A <AmiBlitz3_wizzard.ab2@6762>    BNE.w JL_0_5F4E
0002350C <AmiBlitz3_wizzard.ab2@6763>   MOVEQ.l #$07,D4
0002350E <AmiBlitz3_wizzard.ab2@6764>   MOVEQ.l #$01,D5
00023510 <AmiBlitz3_wizzard.ab2@6765> RTS
00023514 <AmiBlitz3_wizzard.ab2@6769>   CMP.w #$72,D4
00023518 <AmiBlitz3_wizzard.ab2@6770>    BNE.w JL_0_5F4E
0002352A <AmiBlitz3_wizzard.ab2@6771>    !compare3                                               ;bsr.w JL_0_5FC0
0002352E <AmiBlitz3_wizzard.ab2@6772>    BNE.w JL_0_5F4E
00023530 <AmiBlitz3_wizzard.ab2@6773>   MOVEQ.l #$0D,D5
00023532 <AmiBlitz3_wizzard.ab2@6774> RTS
00023536 <AmiBlitz3_wizzard.ab2@6778>   ORI.w #$20,D0
0002353A <AmiBlitz3_wizzard.ab2@6779>   CMP.w #$63,D1
0002353E <AmiBlitz3_wizzard.ab2@6780>    BNE.w JL_0_5F22
00023542 <AmiBlitz3_wizzard.ab2@6781>   CMP.w #$63,D4
00023546 <AmiBlitz3_wizzard.ab2@6782>    BNE.w JL_0_5F4E
0002354A <AmiBlitz3_wizzard.ab2@6783>   CMP.w #$72,D0
0002354E <AmiBlitz3_wizzard.ab2@6784>    BNE.w JL_0_5F4E
00023552 <AmiBlitz3_wizzard.ab2@6785>    BSR.w get1bytemain                                      ;??wy not !fget
00023556 <AmiBlitz3_wizzard.ab2@6786>    BEQ.w JL_0_5F1E
0002355A <AmiBlitz3_wizzard.ab2@6787>   CMP.w #$2C,D0
0002355E <AmiBlitz3_wizzard.ab2@6788>    BNE.w JL_0_5F4E
00023560 <AmiBlitz3_wizzard.ab2@6791>   MOVEQ.l #$0C,D5
00023562 <AmiBlitz3_wizzard.ab2@6792> RTS
00023566 <AmiBlitz3_wizzard.ab2@6796>   CMP.w #$75,D1
0002356A <AmiBlitz3_wizzard.ab2@6797>    BNE.w JL_0_5F4E
0002356E <AmiBlitz3_wizzard.ab2@6798>   CMP.w #$73,D4
00023572 <AmiBlitz3_wizzard.ab2@6799>    BNE.w JL_0_5F4E
00023576 <AmiBlitz3_wizzard.ab2@6800>   CMP.w #$70,D0
0002357A <AmiBlitz3_wizzard.ab2@6801>    BNE.w JL_0_5F4E
0002357E <AmiBlitz3_wizzard.ab2@6802>    BSR.w get1bytemain                                      ;??wy not !fget
00023582 <AmiBlitz3_wizzard.ab2@6803>    BEQ.w JL_0_5F4A
00023586 <AmiBlitz3_wizzard.ab2@6804>   CMP.w #$2C,D0
0002358A <AmiBlitz3_wizzard.ab2@6805>    BNE.w JL_0_5F4E
0002358C <AmiBlitz3_wizzard.ab2@6808>   MOVEQ.l #$0E,D5
0002358E <AmiBlitz3_wizzard.ab2@6809> RTS
00023590 <AmiBlitz3_wizzard.ab2@6813>   MOVEA.l A4,A5
00023594 <AmiBlitz3_wizzard.ab2@6814>    BSR.w asmconst
000235A6 <AmiBlitz3_wizzard.ab2@6815>    !compare3                                               ;bsr.w JL_0_5FC0
000235AA <AmiBlitz3_wizzard.ab2@6816>    BEQ.w JL_0_5FB8
000235AE <AmiBlitz3_wizzard.ab2@6817>   CMP.w #$2E,D0
000235B2 <AmiBlitz3_wizzard.ab2@6818>    BEQ.w JL_0_5FA0
000235B6 <AmiBlitz3_wizzard.ab2@6819>   CMP.w #$28,D0
000235BA <AmiBlitz3_wizzard.ab2@6820>    BNE.w syntaxerr
000235BE <AmiBlitz3_wizzard.ab2@6821>    BSR.w get1bytemain                                      ;??wy not !fget
000235C2 <AmiBlitz3_wizzard.ab2@6822>   ORI.w #$20,D0
000235C6 <AmiBlitz3_wizzard.ab2@6823>   CMP.w #$70,D0
000235CA <AmiBlitz3_wizzard.ab2@6824>    BNE.w JL_0_5F98
000235CE <AmiBlitz3_wizzard.ab2@6825>    BSR.w get1bytemain                                      ;??wy not !fget
000235D2 <AmiBlitz3_wizzard.ab2@6826>   ORI.w #$20,D0
000235D6 <AmiBlitz3_wizzard.ab2@6827>   CMP.w #$63,D0
000235DA <AmiBlitz3_wizzard.ab2@6828>    BNE.w syntaxerr
000235DE <AmiBlitz3_wizzard.ab2@6829>    BSR.w get1bytemain                                      ;??wy not !fget
000235E2 <AmiBlitz3_wizzard.ab2@6830>    BSR.w JL_0_5FD4
000235E4 <AmiBlitz3_wizzard.ab2@6831>   ADDQ.w #4,D5
000235E6 <AmiBlitz3_wizzard.ab2@6832> RTS
000235EA <AmiBlitz3_wizzard.ab2@6836>   BSR.w JL_0_5D46
000235EE <AmiBlitz3_wizzard.ab2@6837> BRA.w JL_0_5FD4
000235F2 <AmiBlitz3_wizzard.ab2@6841>    BSR.w get1bytemain                                     ;??wy not !fget
000235F6 <AmiBlitz3_wizzard.ab2@6842>   ORI.w #$20,D0
000235FA <AmiBlitz3_wizzard.ab2@6843>   CMP.w #$77,D0
000235FE <AmiBlitz3_wizzard.ab2@6844>    BEQ.w JL_0_5FBC
00023602 <AmiBlitz3_wizzard.ab2@6845>   CMP.w #$6C,D0
00023606 <AmiBlitz3_wizzard.ab2@6846>    BNE.w syntaxerr
00023608 <AmiBlitz3_wizzard.ab2@6849>   MOVEQ.l #$08,D5
0002360A <AmiBlitz3_wizzard.ab2@6850> RTS
0002360C <AmiBlitz3_wizzard.ab2@6854>   MOVEQ.l #$07,D5
0002360E <AmiBlitz3_wizzard.ab2@6855> RTS
00023610 <AmiBlitz3_wizzard.ab2@6859>   TST.w D0
00023614 <AmiBlitz3_wizzard.ab2@6860>    BEQ.w JL_0_5FD2
00023618 <AmiBlitz3_wizzard.ab2@6861>   CMP.w #$3A,D0
0002361C <AmiBlitz3_wizzard.ab2@6862>    BEQ.w JL_0_5FD2
00023620 <AmiBlitz3_wizzard.ab2@6863>   CMP.w #$2C,D0
00023622 <AmiBlitz3_wizzard.ab2@6866> RTS
00023626 <AmiBlitz3_wizzard.ab2@6870>   CMP.w #$2C,D0
0002362A <AmiBlitz3_wizzard.ab2@6871>    BNE.w JL_0_6054
0002362E <AmiBlitz3_wizzard.ab2@6872>    BSR.w get1bytemain                                      ;??wy not !fget
00023632 <AmiBlitz3_wizzard.ab2@6873>   ORI.w #$20,D0
00023634 <AmiBlitz3_wizzard.ab2@6874>   MOVEQ.l #$00,D1
00023638 <AmiBlitz3_wizzard.ab2@6875>   CMP.w #$64,D0
0002363C <AmiBlitz3_wizzard.ab2@6876>    BEQ.w JL_0_5FFA
00023640 <AmiBlitz3_wizzard.ab2@6877>   CMP.w #$61,D0
00023644 <AmiBlitz3_wizzard.ab2@6878>    BNE.w syntaxerr
00023648 <AmiBlitz3_wizzard.ab2@6879>   BSET #$F,D1
0002364C <AmiBlitz3_wizzard.ab2@6882>    BSR.w get1bytemain                                      ;??wy not !fget
00023650 <AmiBlitz3_wizzard.ab2@6883>   SUBI.w #$30,D0
00023654 <AmiBlitz3_wizzard.ab2@6884>    BMI.w syntaxerr
00023658 <AmiBlitz3_wizzard.ab2@6885>   CMP.w #$7,D0
0002365C <AmiBlitz3_wizzard.ab2@6886>    BHI.w syntaxerr
0002365E <AmiBlitz3_wizzard.ab2@6887>   LSL.w #8,D0
00023660 <AmiBlitz3_wizzard.ab2@6888>   LSL.w #4,D0
00023662 <AmiBlitz3_wizzard.ab2@6889>   OR.w D0,D1
00023666 <AmiBlitz3_wizzard.ab2@6890>    BSR.w get1bytemain                                      ;??wy not !fget
0002366A <AmiBlitz3_wizzard.ab2@6891>   CMP.w #$2E,D0
0002366E <AmiBlitz3_wizzard.ab2@6892>    BNE.w JL_0_6040
00023672 <AmiBlitz3_wizzard.ab2@6893>    BSR.w get1bytemain                                      ;??wy not !fget
00023676 <AmiBlitz3_wizzard.ab2@6894>   ORI.w #$20,D0
0002367A <AmiBlitz3_wizzard.ab2@6895>   CMP.w #$77,D0
0002367E <AmiBlitz3_wizzard.ab2@6896>    BEQ.w JL_0_603C
00023682 <AmiBlitz3_wizzard.ab2@6897>   CMP.w #$6C,D0
00023686 <AmiBlitz3_wizzard.ab2@6898>    BNE.w syntaxerr
0002368A <AmiBlitz3_wizzard.ab2@6899>   BSET #$B,D1
0002368E <AmiBlitz3_wizzard.ab2@6902>    BSR.w get1bytemain                                      ;??wy not !fget
00023692 <AmiBlitz3_wizzard.ab2@6905>    CMP.b #"*",d0                                           ;020 * Mode
00023696 <AmiBlitz3_wizzard.ab2@6906>             BNE 'l1
0002369A <AmiBlitz3_wizzard.ab2@6907>             BSR.w get1bytemain                             ;??wy not !fget
0002369E <AmiBlitz3_wizzard.ab2@6908>             CMP.b #"2",d0
000236A2 <AmiBlitz3_wizzard.ab2@6909>             BNE 'l2
000236A6 <AmiBlitz3_wizzard.ab2@6910>             OR.w #$200,d1
000236AA <AmiBlitz3_wizzard.ab2@6911> BRA 'l1b
000236AE <AmiBlitz3_wizzard.ab2@6914>             CMP.b #"4",d0
000236B2 <AmiBlitz3_wizzard.ab2@6915>             BNE 'l3
000236B6 <AmiBlitz3_wizzard.ab2@6916>             OR.w #$400,d1
000236BA <AmiBlitz3_wizzard.ab2@6917> BRA 'l1b
000236BE <AmiBlitz3_wizzard.ab2@6920>             CMP.b #"8",d0
000236C2 <AmiBlitz3_wizzard.ab2@6921>             BNE syntaxerr
000236C6 <AmiBlitz3_wizzard.ab2@6922>             OR.w #$600,d1
000236CA <AmiBlitz3_wizzard.ab2@6925>         BSR.w get1bytemain                                 ;??wy not !fget
000236CE <AmiBlitz3_wizzard.ab2@6928>   CMP.w #$29,D0
000236D2 <AmiBlitz3_wizzard.ab2@6929>    BNE.w syntaxerr
000236D8 <AmiBlitz3_wizzard.ab2@6930>   MOVE.w D1,extraword
000236DA <AmiBlitz3_wizzard.ab2@6931>   MOVEQ.l #$06,D5
000236DE <AmiBlitz3_wizzard.ab2@6932> BRA.w get1bytemain                                         ;??wy not !fget
000236E2 <AmiBlitz3_wizzard.ab2@6936>   CMP.w #")",D0                                            ;")"
000236E6 <AmiBlitz3_wizzard.ab2@6937>    BNE.w errorbracketmiss                                  ; was syntax error
000236E8 <AmiBlitz3_wizzard.ab2@6938>   MOVEQ.l #$05,D5
000236EC <AmiBlitz3_wizzard.ab2@6939> BRA.w get1bytemain                                         ;??wy not !fget
000236F2 <AmiBlitz3_wizzard.ab2@6946>   MOVEA.l asmbuff,A0
000236F8 <AmiBlitz3_wizzard.ab2@6947>   MOVE.w ininclude,D1
000236FE <AmiBlitz3_wizzard.ab2@6948>   OR.w inmacro,D1
00023700 <AmiBlitz3_wizzard.ab2@6949>   MOVE.w D1,(A0)+                                          ;flag!
00023704 <AmiBlitz3_wizzard.ab2@6950>    BNE.w copyconst
00023706 <AmiBlitz3_wizzard.ab2@6951>   MOVE.l A5,-(A7)
0002370A <AmiBlitz3_wizzard.ab2@6952>    BSR.w copyconst
00023710 <AmiBlitz3_wizzard.ab2@6953>   MOVEA.l asmbuff,A0
00023714 <AmiBlitz3_wizzard.ab2@6954>   CMP.w #$4,D1
00023718 <AmiBlitz3_wizzard.ab2@6955>    BLS.w asmconst__leave
0002371E <AmiBlitz3_wizzard.ab2@6956>   TST.w lc
00023722 <AmiBlitz3_wizzard.ab2@6957>    BNE.w asmconst__leave
00023724 <AmiBlitz3_wizzard.ab2@6958>   ADDQ.w #2,A0
00023726 <AmiBlitz3_wizzard.ab2@6959>   MOVE.l (A7)+,(A0)+
00023728 <AmiBlitz3_wizzard.ab2@6960>   CLR.b (A0)
00023730 <AmiBlitz3_wizzard.ab2@6961>   MOVE.w #$0004,asmlen2                                    ;pointer + 0
00023732 <AmiBlitz3_wizzard.ab2@6962> RTS
00023734 <AmiBlitz3_wizzard.ab2@6966>   NOT.w (A0)
00023736 <AmiBlitz3_wizzard.ab2@6967>   ADDQ.w #4,A7
00023738 <AmiBlitz3_wizzard.ab2@6968> RTS
0002373A <AmiBlitz3_wizzard.ab2@6971> lc:  Ds.w 1
00023740 <AmiBlitz3_wizzard.ab2@6975>   CLR.w lc
00023742 <AmiBlitz3_wizzard.ab2@6976>   MOVEQ.l #$00,D1
00023744 <AmiBlitz3_wizzard.ab2@6979>    ADDQ.w #1,D1                                            ;label name
00023770 <AmiBlitz3_wizzard.ab2@6980>    !fget                                                   ;bsr.w get1bytemain
00023774 <AmiBlitz3_wizzard.ab2@6981>    BEQ.w copyconst__done
00023778 <AmiBlitz3_wizzard.ab2@6982>    CMP.w #$22,d0
0002377C <AmiBlitz3_wizzard.ab2@6983>    BNE.s copyconst__loop_l10
00023782 <AmiBlitz3_wizzard.ab2@6984>    NOT.w instringon
00023786 <AmiBlitz3_wizzard.ab2@6987>    CMP.w #":",d0
0002378A <AmiBlitz3_wizzard.ab2@6988>    BNE.s copyconst__loop_l11
00023790 <AmiBlitz3_wizzard.ab2@6989>    TST.w instringon
00023794 <AmiBlitz3_wizzard.ab2@6990>    BEQ copyconst__done
00023796 <AmiBlitz3_wizzard.ab2@6993>   TST.w D0
0002379A <AmiBlitz3_wizzard.ab2@6994>   BPL.w copyconst__notmi
0002379C <AmiBlitz3_wizzard.ab2@6995>   MOVE.w D0,-(A7)
0002379E <AmiBlitz3_wizzard.ab2@6996>   LSR.w #8,D0
000237A0 <AmiBlitz3_wizzard.ab2@6997>   MOVE.b D0,(A0)+
000237A2 <AmiBlitz3_wizzard.ab2@6998>   MOVE.w (A7)+,D0
000237A4 <AmiBlitz3_wizzard.ab2@6999>   MOVE.b D0,(A0)+
000237A6 <AmiBlitz3_wizzard.ab2@7000>   ADDQ.w #1,D1
000237AA <AmiBlitz3_wizzard.ab2@7001> BRA.s copyconst__loop
000237B0 <AmiBlitz3_wizzard.ab2@7004>    TST.w instringon
000237B4 <AmiBlitz3_wizzard.ab2@7005>    BNE.w copyconst__putbyte
000237BA <AmiBlitz3_wizzard.ab2@7006>    TST.b _dcb
000237BE <AmiBlitz3_wizzard.ab2@7007>    BNE copyconst__notmi_l10
000237C2 <AmiBlitz3_wizzard.ab2@7008>    CMP.w #$28,D0
000237C6 <AmiBlitz3_wizzard.ab2@7009>    BEQ.w copyconst__done
000237CA <AmiBlitz3_wizzard.ab2@7012>    CMP.w #$2C,D0
000237CE <AmiBlitz3_wizzard.ab2@7013>    BEQ.w copyconst__done
000237D2 <AmiBlitz3_wizzard.ab2@7014>    CMP.b #"'",D0
000237D6 <AmiBlitz3_wizzard.ab2@7015>    BNE.w copyconst__putbyte
000237DC <AmiBlitz3_wizzard.ab2@7016>    MOVE.w D0,lc                                     ;locallabels
000237DE <AmiBlitz3_wizzard.ab2@7017>    MOVE.l A1,-(A7)
000237E4 <AmiBlitz3_wizzard.ab2@7018>    LEA lastgloballabel,A1
000237E6 <AmiBlitz3_wizzard.ab2@7019>    TST.b (A1)
000237EA <AmiBlitz3_wizzard.ab2@7020>    BEQ.w nolocerr
000237EC <AmiBlitz3_wizzard.ab2@7023>   ADDQ.w #1,D1
000237EE <AmiBlitz3_wizzard.ab2@7024>   MOVE.b (A1)+,(A0)+
000237F2 <AmiBlitz3_wizzard.ab2@7025>    BNE.w copyconst__cloop
000237F4 <AmiBlitz3_wizzard.ab2@7026>   SUBQ.w #1,D1
000237F6 <AmiBlitz3_wizzard.ab2@7027>   SUBQ.w #1,A0
000237F8 <AmiBlitz3_wizzard.ab2@7028>   MOVEA.l (A7)+,A1
000237FA <AmiBlitz3_wizzard.ab2@7031>   MOVE.b D0,(A0)+
000237FE <AmiBlitz3_wizzard.ab2@7032> BRA.w copyconst__loop
00023800 <AmiBlitz3_wizzard.ab2@7035>   CLR.b (A0)
00023806 <AmiBlitz3_wizzard.ab2@7036>   MOVE.w D1,asmlen2
00023808 <AmiBlitz3_wizzard.ab2@7037> RTS
0002380E <AmiBlitz3_wizzard.ab2@7042>   CMP.l #$80ad,d0
00023812 <AmiBlitz3_wizzard.ab2@7043>   BNE.s 'l12
00023818 <AmiBlitz3_wizzard.ab2@7044> JMP bssseg
0002381E <AmiBlitz3_wizzard.ab2@7047>   CMP.l #$807f,d0
00023822 <AmiBlitz3_wizzard.ab2@7048>     BNE.s 'l13
00023828 <AmiBlitz3_wizzard.ab2@7049> JMP chipseg
0002382E <AmiBlitz3_wizzard.ab2@7052>   ADDQ.l #1,destpointer                                    ;even
00023836 <AmiBlitz3_wizzard.ab2@7053>   BCLR #$0,destpointer+3
0002383A <AmiBlitz3_wizzard.ab2@7054>   SUBI.w #$803C,D0
0002383C <AmiBlitz3_wizzard.ab2@7055>   LSL.w #2,D0
00023842 <AmiBlitz3_wizzard.ab2@7056>   MOVEA.l #asmpnts,A0
00023846 <AmiBlitz3_wizzard.ab2@7057>   MOVEA.l $0(A0,D0.W),A0                                   ;begin inline assembler
0002384C <AmiBlitz3_wizzard.ab2@7058>   MOVE.w D0,temp1
0002384E <AmiBlitz3_wizzard.ab2@7059>   MOVE.l A0,-(A7)
00023850 <AmiBlitz3_wizzard.ab2@7060>   MOVEQ.l #$01,D1
0002387C <AmiBlitz3_wizzard.ab2@7061>    !fget                                                   ;bsr.w get1bytemain
00023880 <AmiBlitz3_wizzard.ab2@7062>   CMP.w #$2E,D0
00023884 <AmiBlitz3_wizzard.ab2@7063>    BNE.w JL_0_6184
000238B0 <AmiBlitz3_wizzard.ab2@7064>   !fget                                                    ;bsr.w get1bytemain
000238B4 <AmiBlitz3_wizzard.ab2@7065>   ORI.w #$20,D0
000238B8 <AmiBlitz3_wizzard.ab2@7066>   CMP.w #$77,D0                                            ;long
000238BC <AmiBlitz3_wizzard.ab2@7067>    BEQ.w JL_0_618A
000238C0 <AmiBlitz3_wizzard.ab2@7068>   CMP.w #$62,D0                                            ;byte
000238C4 <AmiBlitz3_wizzard.ab2@7069>    BEQ.w JL_0_617A
000238C8 <AmiBlitz3_wizzard.ab2@7070>   CMP.w #$6C,D0                                            ;word
000238CC <AmiBlitz3_wizzard.ab2@7071>    BEQ.w JL_0_6196
000238D0 <AmiBlitz3_wizzard.ab2@7072>   CMP.w #"s",d0
000238D4 <AmiBlitz3_wizzard.ab2@7073>   BNE syntaxerr
000238D8 <AmiBlitz3_wizzard.ab2@7074> BRA.w JL_0_617A
000238DA <AmiBlitz3_wizzard.ab2@7077>   MOVEQ.l #$00,D1
000238DE <AmiBlitz3_wizzard.ab2@7078>   MOVE.w $8(A0),D0
000238E2 <AmiBlitz3_wizzard.ab2@7079> BRA.w JL_0_619E
000238E4 <AmiBlitz3_wizzard.ab2@7082>   MOVEQ.l #$04,D1
000238E8 <AmiBlitz3_wizzard.ab2@7083> BRA.w JL_0_61AE
000238EA <AmiBlitz3_wizzard.ab2@7086>   MOVEQ.l #$04,D1
000238EE <AmiBlitz3_wizzard.ab2@7087>   MOVE.w $8(A0),D0
000238F0 <AmiBlitz3_wizzard.ab2@7088>   LSR.w #4,D0
000238F4 <AmiBlitz3_wizzard.ab2@7089> BRA.w JL_0_619E
000238F6 <AmiBlitz3_wizzard.ab2@7092>   MOVEQ.l #$08,D1
000238FA <AmiBlitz3_wizzard.ab2@7093>   MOVE.w $8(A0),D0
000238FC <AmiBlitz3_wizzard.ab2@7094>   LSR.w #8,D0
00023900 <AmiBlitz3_wizzard.ab2@7097>    ANDI.w #$F,D0
00023904 <AmiBlitz3_wizzard.ab2@7098>   CMP.w #$F,D0
00023908 <AmiBlitz3_wizzard.ab2@7099>    BNE.w 'cl60
00023910 <AmiBlitz3_wizzard.ab2@7102>    CMP.l #"MULS",-6(a0)
00023914 <AmiBlitz3_wizzard.ab2@7103>    BNE 'c20
0002391A <AmiBlitz3_wizzard.ab2@7104>    MOVE.l #$4c000800,d1
00023920 <AmiBlitz3_wizzard.ab2@7105> JMP do32
00023928 <AmiBlitz3_wizzard.ab2@7108>    CMP.l #"MULU",-6(a0)
0002392C <AmiBlitz3_wizzard.ab2@7109>    BNE 'c30
00023932 <AmiBlitz3_wizzard.ab2@7110>    MOVE.l #$4c000000,d1
00023938 <AmiBlitz3_wizzard.ab2@7111> JMP do32
00023940 <AmiBlitz3_wizzard.ab2@7114>    CMP.l #"DIVS",-6(a0)
00023944 <AmiBlitz3_wizzard.ab2@7115>    BNE 'c40
0002394A <AmiBlitz3_wizzard.ab2@7116>    MOVE.l #$4c400800,d1
00023950 <AmiBlitz3_wizzard.ab2@7117> JMP do32
00023958 <AmiBlitz3_wizzard.ab2@7120>    CMP.l #"DIVU",-6(a0)
0002395C <AmiBlitz3_wizzard.ab2@7121>    BNE 'c50
00023962 <AmiBlitz3_wizzard.ab2@7122>    MOVE.l #$4c400000,d1
00023968 <AmiBlitz3_wizzard.ab2@7123> JMP do32
0002396C <AmiBlitz3_wizzard.ab2@7126> BRA illsizeerr
00023998 <AmiBlitz3_wizzard.ab2@7129>   !fget                                                    ;bsr.w get1bytemain
0002399E <AmiBlitz3_wizzard.ab2@7132>   MOVE.w D1,asmsize
000239A0 <AmiBlitz3_wizzard.ab2@7133>   MOVEQ.l #-$01,D3
000239A4 <AmiBlitz3_wizzard.ab2@7134>    BSR.w reget
000239A8 <AmiBlitz3_wizzard.ab2@7135>    BEQ.w JL_0_6200
000239B2 <AmiBlitz3_wizzard.ab2@7136>   MOVE.l #ptr_parameterstore,asmbuff
000239BC <AmiBlitz3_wizzard.ab2@7138>    MOVE.w oldqflag,instringon
000239C2 <AmiBlitz3_wizzard.ab2@7139>   MOVEA.l lastsourcepos,A5
000239C6 <AmiBlitz3_wizzard.ab2@7140>    BSR.w JL_0_5DC2
000239C8 <AmiBlitz3_wizzard.ab2@7141>   MOVE.l D4,D2                                             ;to src
000239CA <AmiBlitz3_wizzard.ab2@7142>   MOVE.l D5,D3
000239D4 <AmiBlitz3_wizzard.ab2@7143>   MOVE.w asmlen2,asmlen
000239D6 <AmiBlitz3_wizzard.ab2@7144>   MOVEQ.l #-$01,D5
000239E0 <AmiBlitz3_wizzard.ab2@7145>   MOVE.w extraword,extraword2
000239E4 <AmiBlitz3_wizzard.ab2@7146>   CMP.w #$2C,D0                                            ;','
000239E8 <AmiBlitz3_wizzard.ab2@7147>    BNE.w JL_0_6200
000239F2 <AmiBlitz3_wizzard.ab2@7148>   MOVE.l #namebuff2,asmbuff
000239F6 <AmiBlitz3_wizzard.ab2@7149>    BSR.w JL_0_5DC2                                         ;dest
000239F8 <AmiBlitz3_wizzard.ab2@7152>   MOVEA.l (A7)+,A0
000239FE <AmiBlitz3_wizzard.ab2@7153>   MOVEA.l destpointer,A1
00023A00 <AmiBlitz3_wizzard.ab2@7154>   MOVEA.l A1,A4
00023A02 <AmiBlitz3_wizzard.ab2@7155>   ADDQ.w #2,A1
00023A04 <AmiBlitz3_wizzard.ab2@7156>   MOVE.w (A0),D1
00023A06 <AmiBlitz3_wizzard.ab2@7157>   TST.w D3
00023A0A <AmiBlitz3_wizzard.ab2@7158>    BMI.w JL_0_639E
00023A0E <AmiBlitz3_wizzard.ab2@7159>   MOVE.w $E(A0),D0
00023A12 <AmiBlitz3_wizzard.ab2@7160>    BPL.w JL_0_6264
00023A16 <AmiBlitz3_wizzard.ab2@7161>   BTST #$0,D0
00023A1A <AmiBlitz3_wizzard.ab2@7162>    BEQ.w JL_0_6240
00023A1E <AmiBlitz3_wizzard.ab2@7163>   CMP.w #$1,D5
00023A22 <AmiBlitz3_wizzard.ab2@7164>    BNE.w JL_0_6240
00023A26 <AmiBlitz3_wizzard.ab2@7165>   CMP.w #$E,D3
00023A2A <AmiBlitz3_wizzard.ab2@7166>    BEQ.w JL_0_6264
00023A30 <AmiBlitz3_wizzard.ab2@7167>   MOVE.w temp1,D0
00023A32 <AmiBlitz3_wizzard.ab2@7168>   ADDQ.w #4,D0
00023A36 <AmiBlitz3_wizzard.ab2@7169> BRA.w JL_0_6256
00023A3A <AmiBlitz3_wizzard.ab2@7172>   BTST #$1,D0
00023A3E <AmiBlitz3_wizzard.ab2@7173>    BEQ.w JL_0_6264
00023A42 <AmiBlitz3_wizzard.ab2@7174>   CMP.w #$B,D3
00023A46 <AmiBlitz3_wizzard.ab2@7175>    BNE.w JL_0_6264
00023A4C <AmiBlitz3_wizzard.ab2@7176>   MOVE.w temp1,D0
00023A4E <AmiBlitz3_wizzard.ab2@7179>   ADDQ.w #4,D0
00023A54 <AmiBlitz3_wizzard.ab2@7180>   MOVEA.l #asmpnts,A0
00023A58 <AmiBlitz3_wizzard.ab2@7181>   MOVEA.l $0(A0,D0.W),A0
00023A5A <AmiBlitz3_wizzard.ab2@7182>   MOVE.w (A0),D1
00023A64 <AmiBlitz3_wizzard.ab2@7185>   MOVE.l #ptr_parameterstore,buff1
00023A6E <AmiBlitz3_wizzard.ab2@7186>   MOVE.l #namebuff2,buff2
00023A72 <AmiBlitz3_wizzard.ab2@7187>   MOVE.l $A(A0),D0
00023A76 <AmiBlitz3_wizzard.ab2@7188>    BEQ.w JL_0_62DC
00023A78 <AmiBlitz3_wizzard.ab2@7189>   MOVEA.l D0,A3
00023A7E <AmiBlitz3_wizzard.ab2@7190>   MOVE.w asmsize,D6
00023A80 <AmiBlitz3_wizzard.ab2@7193>    JSR (A3)
00023A84 <AmiBlitz3_wizzard.ab2@7194>    BPL.w JL_0_629A
00023A88 <AmiBlitz3_wizzard.ab2@7195>   CMP.w #-$2,D0
00023A8C <AmiBlitz3_wizzard.ab2@7196>    BEQ.w illsizeerr
00023A90 <AmiBlitz3_wizzard.ab2@7197> BRA.w illeaerr
00023A94 <AmiBlitz3_wizzard.ab2@7200>   BEQ.w JL_0_62DC
00023A96 <AmiBlitz3_wizzard.ab2@7201>   EXG.l D2,D4
00023A98 <AmiBlitz3_wizzard.ab2@7202>   EXG.l D3,D5
00023A9E <AmiBlitz3_wizzard.ab2@7203>   MOVE.l extraword,D6
00023AA0 <AmiBlitz3_wizzard.ab2@7204>   SWAP D6
00023AA6 <AmiBlitz3_wizzard.ab2@7205>   MOVE.l D6,extraword
00023AB0 <AmiBlitz3_wizzard.ab2@7206>   MOVE.l #namebuff2,buff1
00023ABA <AmiBlitz3_wizzard.ab2@7207>   MOVE.l #ptr_parameterstore,buff2
00023AC0 <AmiBlitz3_wizzard.ab2@7208>   MOVE.w asmlen,D6
00023AC6 <AmiBlitz3_wizzard.ab2@7209>   MOVE.w asmlen2,D7
00023ACC <AmiBlitz3_wizzard.ab2@7210>   MOVE.w D6,asmlen2
00023AD2 <AmiBlitz3_wizzard.ab2@7211>   MOVE.w D7,asmlen
00023ADC <AmiBlitz3_wizzard.ab2@7214>   MOVE.l buff1,asmbuff
00023AE0 <AmiBlitz3_wizzard.ab2@7215>   MOVE.w $E(A0),D0
00023AE4 <AmiBlitz3_wizzard.ab2@7216>    BEQ.w JL_0_6348
00023AE8 <AmiBlitz3_wizzard.ab2@7217>    BMI.w JL_0_6348
00023AEC <AmiBlitz3_wizzard.ab2@7218>    CMP.w #$7000,d1
00023AF0 <AmiBlitz3_wizzard.ab2@7219>    BNE 'skip
00023AF4 <AmiBlitz3_wizzard.ab2@7220>    CMP.w #$b,d3
00023AF8 <AmiBlitz3_wizzard.ab2@7221>    BNE illeaerr
00023AFC <AmiBlitz3_wizzard.ab2@7224>    CMP.w #$1,D0
00023B00 <AmiBlitz3_wizzard.ab2@7225>    BNE.w JL_0_630E
00023B04 <AmiBlitz3_wizzard.ab2@7226>    CMP.w #$B,D3
00023B08 <AmiBlitz3_wizzard.ab2@7227>    BNE.w JL_0_6348
00023B0C <AmiBlitz3_wizzard.ab2@7230>    BSR.w insasm
00023B0E <AmiBlitz3_wizzard.ab2@7231>   MOVE.w D4,D2
00023B10 <AmiBlitz3_wizzard.ab2@7232>   MOVE.w D5,D3
00023B14 <AmiBlitz3_wizzard.ab2@7233> BRA.w JL_0_6364
00023B18 <AmiBlitz3_wizzard.ab2@7236>    CMP.w #$2,D0
00023B1C <AmiBlitz3_wizzard.ab2@7237>    BNE.w JL_0_6324
00023B20 <AmiBlitz3_wizzard.ab2@7238>   CMP.w #$8,D3
00023B24 <AmiBlitz3_wizzard.ab2@7239>    BNE.w illeaerr
00023B26 <AmiBlitz3_wizzard.ab2@7240>   MOVEQ.l #$09,D3
00023B2A <AmiBlitz3_wizzard.ab2@7241> BRA.w JL_0_6348
00023B2E <AmiBlitz3_wizzard.ab2@7244>    CMP.w #$3,D0
00023B32 <AmiBlitz3_wizzard.ab2@7245>    BEQ.w JL_0_6302
00023B36 <AmiBlitz3_wizzard.ab2@7246>   CMP.w #$4,D0
00023B3A <AmiBlitz3_wizzard.ab2@7247>    BEQ.w JL_0_6302
00023B3E <AmiBlitz3_wizzard.ab2@7248>   CMP.w #$5,D0
00023B42 <AmiBlitz3_wizzard.ab2@7249>    BNE.w JL_0_6348
00023B46 <AmiBlitz3_wizzard.ab2@7250>   CMP.w #$8,D5
00023B4A <AmiBlitz3_wizzard.ab2@7251>    BNE.w illeaerr
00023B4C <AmiBlitz3_wizzard.ab2@7252>   OR.w D2,D1
00023B4E <AmiBlitz3_wizzard.ab2@7253>   MOVEQ.l #$09,D5
00023B52 <AmiBlitz3_wizzard.ab2@7256>   MOVE.w $2(A0),D6
00023B56 <AmiBlitz3_wizzard.ab2@7257>   MOVE.b $6(A0),D7
00023B5A <AmiBlitz3_wizzard.ab2@7258>   MOVEM.l D4-D5,-(A7)
00023B60 <AmiBlitz3_wizzard.ab2@7259>   MOVE.w extraword2,D4
00023B64 <AmiBlitz3_wizzard.ab2@7260>    BSR.w doea
00023B68 <AmiBlitz3_wizzard.ab2@7261>   MOVEM.l (A7)+,D2-D3
00023B6A <AmiBlitz3_wizzard.ab2@7262>   TST.w D3
00023B6E <AmiBlitz3_wizzard.ab2@7265>     BMI.w JL_0_6392
00023B74 <AmiBlitz3_wizzard.ab2@7266>   MOVE.w extraword,D4
00023B78 <AmiBlitz3_wizzard.ab2@7267>   MOVE.w $4(A0),D6
00023B7C <AmiBlitz3_wizzard.ab2@7268>   MOVE.b $7(A0),D7
00023B86 <AmiBlitz3_wizzard.ab2@7269>   MOVE.l buff2,asmbuff
00023B90 <AmiBlitz3_wizzard.ab2@7270>   MOVE.w asmlen2,asmlen
00023B94 <AmiBlitz3_wizzard.ab2@7271>    BSR.w doea
00023B98 <AmiBlitz3_wizzard.ab2@7272> BRA.w JL_0_63AA
00023B9C <AmiBlitz3_wizzard.ab2@7275>   MOVE.w $4(A0),D0
00023BA0 <AmiBlitz3_wizzard.ab2@7276>    BNE.w illeaerr
00023BA4 <AmiBlitz3_wizzard.ab2@7277> BRA.w JL_0_63AA
00023BA8 <AmiBlitz3_wizzard.ab2@7281>   MOVE.w $2(A0),D0
00023BAC <AmiBlitz3_wizzard.ab2@7282>   OR.w $4(A0),D0
00023BB0 <AmiBlitz3_wizzard.ab2@7283>    BNE.w illeaerr
00023BB4 <AmiBlitz3_wizzard.ab2@7286>   MOVE.w $8(A0),D0
00023BB8 <AmiBlitz3_wizzard.ab2@7287>   ANDI.w #$F000,D0
00023BBC <AmiBlitz3_wizzard.ab2@7288>   CMP.w #-$1000,D0
00023BC0 <AmiBlitz3_wizzard.ab2@7289>    BEQ.w JL_0_63D2
00023BC2 <AmiBlitz3_wizzard.ab2@7290>   LSR.w #8,D0
00023BC4 <AmiBlitz3_wizzard.ab2@7291>   LSR.w #4,D0
00023BC8 <AmiBlitz3_wizzard.ab2@7292>   MOVE.w $8(A0),D2
00023BCE <AmiBlitz3_wizzard.ab2@7293>   MOVE.w asmsize,D3
00023BD0 <AmiBlitz3_wizzard.ab2@7294>   LSR.w D3,D2
00023BD4 <AmiBlitz3_wizzard.ab2@7295>   ANDI.w #$F,D2
00023BD6 <AmiBlitz3_wizzard.ab2@7296>   LSL.w D0,D2
00023BD8 <AmiBlitz3_wizzard.ab2@7297>   OR.w D2,D1
00023BDE <AmiBlitz3_wizzard.ab2@7300>   CMPA.l destbufferend,A4
00023BE2 <AmiBlitz3_wizzard.ab2@7301>    BCS.w JL_0_63E8
00023BEA <AmiBlitz3_wizzard.ab2@7303>   MOVE.w #$FFFF,dontwrite
00023BEE <AmiBlitz3_wizzard.ab2@7304> BRA.w JL_0_63EA
00023BF0 <AmiBlitz3_wizzard.ab2@7307>   MOVE.w D1,(A4)
00023BF6 <AmiBlitz3_wizzard.ab2@7310>   MOVE.l A1,destpointer
00023BF8 <AmiBlitz3_wizzard.ab2@7311> RTS
00023BFE <AmiBlitz3_wizzard.ab2@7315>   MOVE.l destpointer,-(A7)
00023C04 <AmiBlitz3_wizzard.ab2@7316>   MOVE.l A1,destpointer
00023C08 <AmiBlitz3_wizzard.ab2@7317>    BSR.w addoff
00023C0E <AmiBlitz3_wizzard.ab2@7318>   MOVEA.l destpointer,A1
00023C14 <AmiBlitz3_wizzard.ab2@7319>   MOVE.l (A7)+,destpointer
00023C16 <AmiBlitz3_wizzard.ab2@7320> RTS
00023C1A <AmiBlitz3_wizzard.ab2@7324>   MOVEM.l d2-d6,-(a7)
00023C20 <AmiBlitz3_wizzard.ab2@7325>   JSR stripspaces
00023C24 <AmiBlitz3_wizzard.ab2@7326>   CMP.b #"d",(a5)+
00023C28 <AmiBlitz3_wizzard.ab2@7327>   BNE noreg
00023C2A <AmiBlitz3_wizzard.ab2@7328>   MOVE.b (a5)+,d0
00023C2E <AmiBlitz3_wizzard.ab2@7329>   CMP.b #$30,d0
00023C32 <AmiBlitz3_wizzard.ab2@7330>   BLT noreg
00023C36 <AmiBlitz3_wizzard.ab2@7331>   CMP.b #$37,d0
00023C3A <AmiBlitz3_wizzard.ab2@7332>   BGT noreg
00023C3E <AmiBlitz3_wizzard.ab2@7333>   SUB.b #$30,d0
00023C40 <AmiBlitz3_wizzard.ab2@7334>   MOVEQ #0,d3
00023C42 <AmiBlitz3_wizzard.ab2@7335>   MOVE.b d0,d3                                             ;reg1
00023C44 <AmiBlitz3_wizzard.ab2@7336>   ASL.l #8,d3
00023C46 <AmiBlitz3_wizzard.ab2@7337>   ASL.l #8,d3
00023C4C <AmiBlitz3_wizzard.ab2@7338>   JSR stripspaces
00023C50 <AmiBlitz3_wizzard.ab2@7339>   CMP.b #",",(a5)+
00023C54 <AmiBlitz3_wizzard.ab2@7340>   BNE noreg
00023C5A <AmiBlitz3_wizzard.ab2@7341>   JSR stripspaces
00023C5E <AmiBlitz3_wizzard.ab2@7342>   CMP.b #"d",(a5)+
00023C62 <AmiBlitz3_wizzard.ab2@7343>   BNE noreg
00023C64 <AmiBlitz3_wizzard.ab2@7344>   MOVE.b (a5)+,d0
00023C68 <AmiBlitz3_wizzard.ab2@7345>   CMP.b #$30,d0
00023C6C <AmiBlitz3_wizzard.ab2@7346>   BLT noreg
00023C70 <AmiBlitz3_wizzard.ab2@7347>   CMP.b #$37,d0
00023C74 <AmiBlitz3_wizzard.ab2@7348>   BGT noreg
00023C78 <AmiBlitz3_wizzard.ab2@7349>   SUB.b #$30,d0
00023C7A <AmiBlitz3_wizzard.ab2@7350>   MOVEQ #0,d4
00023C7C <AmiBlitz3_wizzard.ab2@7351>   MOVE.b d0,d4                                             ;reg2
00023C7E <AmiBlitz3_wizzard.ab2@7352>   ASL.l #8,d4
00023C80 <AmiBlitz3_wizzard.ab2@7353>   ASL.l #4,d4
00023C82 <AmiBlitz3_wizzard.ab2@7354>   OR.b d0,d1
00023C84 <AmiBlitz3_wizzard.ab2@7355>   OR.l d3,d1
00023C86 <AmiBlitz3_wizzard.ab2@7356>   OR.l d4,d1
00023C8C <AmiBlitz3_wizzard.ab2@7357>   JSR writelong
00023C90 <AmiBlitz3_wizzard.ab2@7358>   MOVEM.l (a7)+,d2-d6
00023C94 <AmiBlitz3_wizzard.ab2@7359>   MOVEM.l d1/a1-a3,-(a7)
00023C98 <AmiBlitz3_wizzard.ab2@7360> BRA exit
00023C9C <AmiBlitz3_wizzard.ab2@7364>   MOVEM.l (a7)+,d2-d6
00023CA2 <AmiBlitz3_wizzard.ab2@7365>   LEA errtext,a0
00023CA4 <AmiBlitz3_wizzard.ab2@7366>   MOVE.l a0,-(a7)
00023CAA <AmiBlitz3_wizzard.ab2@7367> JMP handle_compileerror
00023CB0 <AmiBlitz3_wizzard.ab2@7376>   MOVE.w dontwrite,D1
00023CB4 <AmiBlitz3_wizzard.ab2@7377>    BNE.w asmfixer__done
00023CBC <AmiBlitz3_wizzard.ab2@7378>   BTST #$7,make_smallestcode
00023CC0 <AmiBlitz3_wizzard.ab2@7379>    BEQ.w asmfixer__go
00023CC4 <AmiBlitz3_wizzard.ab2@7380>   MOVE.w pass(PC),D1
00023CC8 <AmiBlitz3_wizzard.ab2@7381>    BEQ.w asmfixer__done
00023CCE <AmiBlitz3_wizzard.ab2@7384>   MOVEA.l templabel,A2                                     ;insert labels in Code
00023CD6 <AmiBlitz3_wizzard.ab2@7385>   MOVE.b #1,curtemplabel
00023CDE <AmiBlitz3_wizzard.ab2@7386>   MOVE.w #$FFFF,constmode
00023CE4 <AmiBlitz3_wizzard.ab2@7387>   CLR.w regnum
00023CEE <AmiBlitz3_wizzard.ab2@7388>           MOVE.l #forthstack,forthsp
00023CF8 <AmiBlitz3_wizzard.ab2@7389>           MOVE.l #precstack,precsp
00023CFC <AmiBlitz3_wizzard.ab2@7390>    BSR.w prepstack
00023CFE <AmiBlitz3_wizzard.ab2@7393>   MOVE.l A2,-(A7)
00023D02 <AmiBlitz3_wizzard.ab2@7394>    BSR.w chkstop
00023D04 <AmiBlitz3_wizzard.ab2@7395>   MOVEA.l (A7)+,A2
00023D08 <AmiBlitz3_wizzard.ab2@7396>   CMPA.w #$0,A2
00023D0C <AmiBlitz3_wizzard.ab2@7397>    BEQ.w asmfixer__done2
00023D12 <AmiBlitz3_wizzard.ab2@7398>    CLR.b iee
00023D18 <AmiBlitz3_wizzard.ab2@7399>   MOVE.l A2,asmbuff
00023D1C <AmiBlitz3_wizzard.ab2@7400>   LEA $10(A2),A5
00023D20 <AmiBlitz3_wizzard.ab2@7401>   TST.b $F(A2)
00023D24 <AmiBlitz3_wizzard.ab2@7402>    BNE.w asmfixer__skipo
00023D26 <AmiBlitz3_wizzard.ab2@7403>   MOVEA.l (A5),A5                                          ;pointer to real text
00023D2C <AmiBlitz3_wizzard.ab2@7406>    CLR.w asmtype
00023D30 <AmiBlitz3_wizzard.ab2@7407>    CMP.b #".",(a5)
00023D34 <AmiBlitz3_wizzard.ab2@7408>    BNE.s asmfixer__skipo_l10
00023D36 <AmiBlitz3_wizzard.ab2@7409>    MOVE.l a2,-(a7)
00023D38 <AmiBlitz3_wizzard.ab2@7410>    ADDQ.l #1,a5
00023D3E <AmiBlitz3_wizzard.ab2@7411>    LEA newtypebase,a2
00023D42 <AmiBlitz3_wizzard.ab2@7412>    BSR getparameter2
00023D46 <AmiBlitz3_wizzard.ab2@7413>    BEQ.w syntaxerr
00023D4A <AmiBlitz3_wizzard.ab2@7414>    BSR findtype
00023D4E <AmiBlitz3_wizzard.ab2@7415>    BNE.w notypeerr
00023D52 <AmiBlitz3_wizzard.ab2@7416>    LEA $4(a2),a2
00023D56 <AmiBlitz3_wizzard.ab2@7417>    BSR getparameter2
00023D5A <AmiBlitz3_wizzard.ab2@7418>    BEQ.w syntaxerr
00023D5E <AmiBlitz3_wizzard.ab2@7419>    BSR.w findvariable2
00023D62 <AmiBlitz3_wizzard.ab2@7420>    BNE.w notypeerr
00023D66 <AmiBlitz3_wizzard.ab2@7421>    MOVE.w $4(a2),d3
00023D68 <AmiBlitz3_wizzard.ab2@7422>    EXT.l d3
00023D6C <AmiBlitz3_wizzard.ab2@7423> BRA asmfixer__skipo_l30b
00023D70 <AmiBlitz3_wizzard.ab2@7426>   CMP.b #"\",(a5)
00023D74 <AmiBlitz3_wizzard.ab2@7427>     BNE asmfixer__skipo_l20
00023D76 <AmiBlitz3_wizzard.ab2@7428>     ADDQ.l #1,a5
00023D78 <AmiBlitz3_wizzard.ab2@7429>    MOVE.l a2,-(a7)
00023D7A <AmiBlitz3_wizzard.ab2@7430>    MOVE.l a5,a4
00023D80 <AmiBlitz3_wizzard.ab2@7431>    LEA usedpath,a5
00023D84 <AmiBlitz3_wizzard.ab2@7432>    CMP.b #"*",(a5)
00023D88 <AmiBlitz3_wizzard.ab2@7433>    BNE asmfixer__skipo_lm1
00023D8A <AmiBlitz3_wizzard.ab2@7434>    ADDQ.l #1,a5
00023D8E <AmiBlitz3_wizzard.ab2@7437>    BSR.w getparameter2
00023D92 <AmiBlitz3_wizzard.ab2@7438>    BEQ.w syntaxerr
00023D98 <AmiBlitz3_wizzard.ab2@7439>    LEA varbase,A2
00023DA0 <AmiBlitz3_wizzard.ab2@7440>    MOVE.b #1,newvariable
00023DA4 <AmiBlitz3_wizzard.ab2@7441>    BSR.w findvariable
00023DAA <AmiBlitz3_wizzard.ab2@7442>    CLR.b newvariable
00023DB0 <AmiBlitz3_wizzard.ab2@7443>    CMP.l #-1,d0
00023DB4 <AmiBlitz3_wizzard.ab2@7444>    BEQ.w notypeerr
00023DB6 <AmiBlitz3_wizzard.ab2@7445>    MOVE.l a4,a5
00023DBA <AmiBlitz3_wizzard.ab2@7446>    MOVE.l $a(a2),a2
00023DBE <AmiBlitz3_wizzard.ab2@7447>    LEA $4(a2),a2
00023DC2 <AmiBlitz3_wizzard.ab2@7448>    BSR getparameter2
00023DC6 <AmiBlitz3_wizzard.ab2@7449>    BEQ.w syntaxerr
00023DCA <AmiBlitz3_wizzard.ab2@7450>    BSR.w findvariable2
00023DCE <AmiBlitz3_wizzard.ab2@7451>    BNE.w notypeerr
00023DD2 <AmiBlitz3_wizzard.ab2@7452>   MOVE.w $4(A2),D3
00023DD4 <AmiBlitz3_wizzard.ab2@7453>   EXT.l D3
00023DDA <AmiBlitz3_wizzard.ab2@7456>    CMP.b #"[",-1(a5)
00023DDE <AmiBlitz3_wizzard.ab2@7457>    BNE asmfixer__skipo_l30c
00023DE0 <AmiBlitz3_wizzard.ab2@7458>    MOVEQ #0,d0
00023DE2 <AmiBlitz3_wizzard.ab2@7459>    MOVE.b (a5)+,d0
00023DE4 <AmiBlitz3_wizzard.ab2@7460>    MOVE.l d3,-(a7)
00023DE6 <AmiBlitz3_wizzard.ab2@7461>    MOVEQ #0,d3
00023DEC <AmiBlitz3_wizzard.ab2@7462>    JSR atoi
00023DEE <AmiBlitz3_wizzard.ab2@7463>    MOVE.l (a7)+,d1
00023DF2 <AmiBlitz3_wizzard.ab2@7464>    MOVE.l $a(a2),a2
00023DF6 <AmiBlitz3_wizzard.ab2@7465>    MOVE.w 8(a2),d0
00023DF8 <AmiBlitz3_wizzard.ab2@7466>    MULS d0,d3
00023DFA <AmiBlitz3_wizzard.ab2@7467>    ADD.l d1,d3
00023DFC <AmiBlitz3_wizzard.ab2@7470>   MOVE.l (a7)+,a2
00023E00 <AmiBlitz3_wizzard.ab2@7471> BRA asmfixer__oko
00023E06 <AmiBlitz3_wizzard.ab2@7474>   CMP.w #$c,$8(a2)
00023E0A <AmiBlitz3_wizzard.ab2@7475>      BEQ asmfixer__skipo_lf1
00023E10 <AmiBlitz3_wizzard.ab2@7476>      CMP.w #$d,$8(a2)
00023E14 <AmiBlitz3_wizzard.ab2@7477>      BEQ asmfixer__skipo_lf1
00023E1A <AmiBlitz3_wizzard.ab2@7480>   JSR AJL_0_BF6E
00023E20 <AmiBlitz3_wizzard.ab2@7483>   MOVEA.l asmbuff,A2
00023E24 <AmiBlitz3_wizzard.ab2@7484>    BEQ.w asmfixer__oko
00023E28 <AmiBlitz3_wizzard.ab2@7485>   CMP.w #$28,D0
00023E2C <AmiBlitz3_wizzard.ab2@7486>    BEQ.w asmfixer__oko
00023E30 <AmiBlitz3_wizzard.ab2@7487>   CMP.w #$2C,D0
00023E34 <AmiBlitz3_wizzard.ab2@7488>    BEQ.w asmfixer__oko
00023E38 <AmiBlitz3_wizzard.ab2@7489> BRA.w syntaxerr
00023E40 <AmiBlitz3_wizzard.ab2@7492>   MOVE.b #1,iee
00023E44 <AmiBlitz3_wizzard.ab2@7493> BRA asmfixer__skipo_lf2
00023E48 <AmiBlitz3_wizzard.ab2@7496>   MOVEA.l $4(A2),A1
00023E4C <AmiBlitz3_wizzard.ab2@7498>   MOVE.w $8(A2),D1                                         ;labelmode
00023E50 <AmiBlitz3_wizzard.ab2@7499>   CMP.w #$5,D1
00023E54 <AmiBlitz3_wizzard.ab2@7500>    BNE.w asmfixer__notdan
00023E58 <AmiBlitz3_wizzard.ab2@7503>    BSR.w chkword                                         ;word
00023E5A <AmiBlitz3_wizzard.ab2@7506>   MOVE.w D3,(A1)
00023E5E <AmiBlitz3_wizzard.ab2@7507> BRA.w asmfixer__next
00023E62 <AmiBlitz3_wizzard.ab2@7510>   CMP.w #$6,D1
00023E66 <AmiBlitz3_wizzard.ab2@7511>    BNE.w asmfixer__notdanxi
00023E6A <AmiBlitz3_wizzard.ab2@7514>    BSR.w chkbyte                                         ;byte
00023E6E <AmiBlitz3_wizzard.ab2@7517>   MOVE.b D3,$1(A1)
00023E72 <AmiBlitz3_wizzard.ab2@7518> BRA.w asmfixer__next
00023E76 <AmiBlitz3_wizzard.ab2@7521>    CMP.w #$11,D1                                           ;byte
00023E7A <AmiBlitz3_wizzard.ab2@7522>    BEQ.w asmfixer__isbyte2
00023E7E <AmiBlitz3_wizzard.ab2@7523>    CMP.w #$c,d1
00023E82 <AmiBlitz3_wizzard.ab2@7524>    BEQ asmfixer__single1
00023E86 <AmiBlitz3_wizzard.ab2@7525>    CMP.w #$d,d1
00023E8A <AmiBlitz3_wizzard.ab2@7526>    BEQ asmfixer__double1
00023E8E <AmiBlitz3_wizzard.ab2@7527>   CMP.w #$7,D1
00023E92 <AmiBlitz3_wizzard.ab2@7528>    BEQ.w asmfixer__word                                    ;word
00023E96 <AmiBlitz3_wizzard.ab2@7529>   CMP.w #$8,D1
00023E9A <AmiBlitz3_wizzard.ab2@7530>    BNE.w asmfixer__notabsl
00023EA0 <AmiBlitz3_wizzard.ab2@7533>   MOVE.w asmtype,D1                                        ;long
00023EA4 <AmiBlitz3_wizzard.ab2@7534>    BEQ.w asmfixer__notpcrel
00023EA8 <AmiBlitz3_wizzard.ab2@7535>      BSR.w asmoff
00023EAA <AmiBlitz3_wizzard.ab2@7538>   MOVE.l D3,(A1)
00023EAE <AmiBlitz3_wizzard.ab2@7539> BRA.w asmfixer__next
00023EB4 <AmiBlitz3_wizzard.ab2@7543>   fmove.s fp0,0(a1)
00023EB8 <AmiBlitz3_wizzard.ab2@7544> BRA.w asmfixer__next
00023EBE <AmiBlitz3_wizzard.ab2@7548>   fmove.d fp0,0(a1)
00023EC2 <AmiBlitz3_wizzard.ab2@7549> BRA.w asmfixer__next
00023EC6 <AmiBlitz3_wizzard.ab2@7553>   CMP.w #$9,D1
00023ECA <AmiBlitz3_wizzard.ab2@7554>    BNE.w asmfixer__notdpc
00023ECC <AmiBlitz3_wizzard.ab2@7555>   SUB.l A1,D3                                              ;branchword
00023ED0 <AmiBlitz3_wizzard.ab2@7556>    BSR.w chkword
00023ED2 <AmiBlitz3_wizzard.ab2@7557>   MOVE.w D3,(A1)
00023ED6 <AmiBlitz3_wizzard.ab2@7558> BRA.w asmfixer__next
00023EDA <AmiBlitz3_wizzard.ab2@7562>   CMP.w #$A,D1
00023EDE <AmiBlitz3_wizzard.ab2@7563>    BNE.w asmfixer__imm
00023EE0 <AmiBlitz3_wizzard.ab2@7564>   SUB.l A1,D3                                              ;branchbyte
00023EE4 <AmiBlitz3_wizzard.ab2@7565> BRA.w asmfixer__isbyte
00023EE8 <AmiBlitz3_wizzard.ab2@7569>   CMP.w #$11,d1
00023EEC <AmiBlitz3_wizzard.ab2@7570>   BLE asmfixer__imm_org
00023EEE <AmiBlitz3_wizzard.ab2@7571>   MOVE.l a3,-(a7)
00023EF4 <AmiBlitz3_wizzard.ab2@7572>   LEA pluginbase,a3
00023EF8 <AmiBlitz3_wizzard.ab2@7573>   MOVE.l 8(a2),a0
00023EFA <AmiBlitz3_wizzard.ab2@7574>   JSR (a0)                                                 ;hook
00023EFC <AmiBlitz3_wizzard.ab2@7575>   MOVE.l (a7)+,a3
00023F00 <AmiBlitz3_wizzard.ab2@7576> BRA asmfixer__next
00023F04 <AmiBlitz3_wizzard.ab2@7579>   MOVE.w $A(A2),D0
00023F08 <AmiBlitz3_wizzard.ab2@7580>    BEQ.w asmfixer__noflag
00023F0C <AmiBlitz3_wizzard.ab2@7581>   CMP.w #$1,D0
00023F10 <AmiBlitz3_wizzard.ab2@7582>    BEQ.w asmfixer__tocount
00023F14 <AmiBlitz3_wizzard.ab2@7583>   CMP.w #$3,D0
00023F18 <AmiBlitz3_wizzard.ab2@7584>    BEQ.w asmfixer__tomoveq
00023F1C <AmiBlitz3_wizzard.ab2@7585>   CMP.w #$4,D0
00023F20 <AmiBlitz3_wizzard.ab2@7586>    BEQ.w asmfixer__totrap
00023F24 <AmiBlitz3_wizzard.ab2@7589>   CMP.w #$B,D1                                             ;long
00023F28 <AmiBlitz3_wizzard.ab2@7590>    BEQ.w asmfixer__isabsl
00023F2C <AmiBlitz3_wizzard.ab2@7591> BRA asmfixer__word2                                              ;word
00023F32 <AmiBlitz3_wizzard.ab2@7594>   CMP.l #$F,D3
00023F36 <AmiBlitz3_wizzard.ab2@7595>    BHI.w illtraperr
00023F38 <AmiBlitz3_wizzard.ab2@7596>   OR.b D3,-(A1)
00023F3C <AmiBlitz3_wizzard.ab2@7597> BRA.w asmfixer__next
00023F42 <AmiBlitz3_wizzard.ab2@7600>   CMP.l #$8,D3
00023F46 <AmiBlitz3_wizzard.ab2@7601>    BHI.w illimmerr
00023F48 <AmiBlitz3_wizzard.ab2@7602>   TST.l D3
00023F4C <AmiBlitz3_wizzard.ab2@7603>    BEQ.w illimmerr
00023F50 <AmiBlitz3_wizzard.ab2@7604>   ANDI.w #$7,D3
00023F52 <AmiBlitz3_wizzard.ab2@7605>   LSL.w #8,D3
00023F54 <AmiBlitz3_wizzard.ab2@7606>   LSL.w #1,D3
00023F56 <AmiBlitz3_wizzard.ab2@7607>   OR.w D3,-(A1)
00023F5A <AmiBlitz3_wizzard.ab2@7608> BRA.w asmfixer__next
00023F5E <AmiBlitz3_wizzard.ab2@7611>    BSR.w chkbyte
00023F60 <AmiBlitz3_wizzard.ab2@7612>   MOVE.b D3,-(A1)
00023F62 <AmiBlitz3_wizzard.ab2@7615>   MOVEA.l (A2),A2
00023F66 <AmiBlitz3_wizzard.ab2@7616> BRA.w asmfixer__loop
00023F6C <AmiBlitz3_wizzard.ab2@7619>   CLR.w constmode
00023F72 <AmiBlitz3_wizzard.ab2@7622>   CLR.b curtemplabel
00023F74 <AmiBlitz3_wizzard.ab2@7623> RTS
00023F76 <AmiBlitz3_wizzard.ab2@7632>   BTST D3,D6
00023F7A <AmiBlitz3_wizzard.ab2@7633>    BEQ.w illeaerr
00023F7E <AmiBlitz3_wizzard.ab2@7634>    BSR.w makemode
00023F82 <AmiBlitz3_wizzard.ab2@7635>   CMP.w #$7,D3
00023F86 <AmiBlitz3_wizzard.ab2@7636>    BCS.w doea__skip
00023F88 <AmiBlitz3_wizzard.ab2@7637>   MOVE.w D3,D2
00023F8A <AmiBlitz3_wizzard.ab2@7638>   SUBQ.w #7,D2
00023F8E <AmiBlitz3_wizzard.ab2@7639>   CMP.w #$5,D2
00023F92 <AmiBlitz3_wizzard.ab2@7640>    BCS.w doea__skip0
00023F94 <AmiBlitz3_wizzard.ab2@7641>   MOVEQ.l #$04,D2
00023F96 <AmiBlitz3_wizzard.ab2@7644>   MOVEQ.l #$07,D3
00023F98 <AmiBlitz3_wizzard.ab2@7647>   MOVE.b D7,D0
00023F9C <AmiBlitz3_wizzard.ab2@7648>   ANDI.w #$F,D0
00023FA0 <AmiBlitz3_wizzard.ab2@7649>   CMP.w #$F,D0
00023FA4 <AmiBlitz3_wizzard.ab2@7650>    BEQ.w doea__skip2
00023FA6 <AmiBlitz3_wizzard.ab2@7651>   LSL.w D0,D3
00023FA8 <AmiBlitz3_wizzard.ab2@7652>   OR.w D3,D1
00023FAA <AmiBlitz3_wizzard.ab2@7655>   LSR.w #4,D7
00023FAE <AmiBlitz3_wizzard.ab2@7656>   ANDI.w #$F,D7
00023FB2 <AmiBlitz3_wizzard.ab2@7657>   CMP.w #$F,D7
00023FB6 <AmiBlitz3_wizzard.ab2@7658>    BEQ.w doea__skip3
00023FB8 <AmiBlitz3_wizzard.ab2@7659>   LSL.w D7,D2
00023FBA <AmiBlitz3_wizzard.ab2@7660>   OR.w D2,D1
00023FBC <AmiBlitz3_wizzard.ab2@7663> RTS
00023FC2 <AmiBlitz3_wizzard.ab2@7667>   CMP.l #$7F,D3
00023FC6 <AmiBlitz3_wizzard.ab2@7668>    BGT.w illdiserr
00023FCC <AmiBlitz3_wizzard.ab2@7669>   CMP.l #$FFFFFF80,D3                                      ;#-128,d3 org source
00023FD0 <AmiBlitz3_wizzard.ab2@7670>    BLT.w illdiserr
00023FD2 <AmiBlitz3_wizzard.ab2@7671> RTS
00023FD8 <AmiBlitz3_wizzard.ab2@7675>   CMP.l #$7fff,D3
00023FDC <AmiBlitz3_wizzard.ab2@7676>    BGT.w illdiserr
00023FE2 <AmiBlitz3_wizzard.ab2@7677>   CMP.l #$FFFF8000,D3                                      ;#-32768,d3 org source
00023FE6 <AmiBlitz3_wizzard.ab2@7678>    BLT.w illdiserr
00023FE8 <AmiBlitz3_wizzard.ab2@7679> RTS
00023FEA <AmiBlitz3_wizzard.ab2@7684>   MOVE.b (a5)+,d0
00023FEC <AmiBlitz3_wizzard.ab2@7685>   CMP.b d1,d0
00023FF0 <AmiBlitz3_wizzard.ab2@7686>   BEQ 'll10
00023FF2 <AmiBlitz3_wizzard.ab2@7687>   TST.b d0
00023FF6 <AmiBlitz3_wizzard.ab2@7688>   BNE 'll20
00023FF8 <AmiBlitz3_wizzard.ab2@7691>   SUBQ #1,a5
00023FFA <AmiBlitz3_wizzard.ab2@7692> RTS
00023FFC <AmiBlitz3_wizzard.ab2@7697>   MOVE.b (a5)+,d0
00024000 <AmiBlitz3_wizzard.ab2@7698>   CMP.b #",",d0
00024004 <AmiBlitz3_wizzard.ab2@7699>   BEQ 'll10
00024008 <AmiBlitz3_wizzard.ab2@7700>   CMP.b #";",d0
0002400C <AmiBlitz3_wizzard.ab2@7701>   BEQ 'll10
00024010 <AmiBlitz3_wizzard.ab2@7702>  CMP.b #":",d0
00024014 <AmiBlitz3_wizzard.ab2@7703>   BEQ 'll10
00024016 <AmiBlitz3_wizzard.ab2@7706>   TST.b d0
0002401A <AmiBlitz3_wizzard.ab2@7707>   BNE 'll20
0002401C <AmiBlitz3_wizzard.ab2@7710>   SUBQ #1,a5
0002401E <AmiBlitz3_wizzard.ab2@7711> RTS
00024020 <AmiBlitz3_wizzard.ab2@7715>   ADD.l a2,d1
00024026 <AmiBlitz3_wizzard.ab2@7716>   LEA tempspace,a1
00024028 <AmiBlitz3_wizzard.ab2@7717>   MOVE.l d1,a0
0002402A <AmiBlitz3_wizzard.ab2@7720>   MOVE.b (a0)+,(a1)+
0002402E <AmiBlitz3_wizzard.ab2@7721>   BNE.s 'l10
00024030 <AmiBlitz3_wizzard.ab2@7722>   SUBQ.l #1,a0
00024032 <AmiBlitz3_wizzard.ab2@7723>   SUBQ.l #1,a1
00024034 <AmiBlitz3_wizzard.ab2@7726>   MOVE.b (a5)+,(a1)+
00024038 <AmiBlitz3_wizzard.ab2@7727>   BNE.s 'l20
0002403A <AmiBlitz3_wizzard.ab2@7728>   CLR.b (a1)
00024040 <AmiBlitz3_wizzard.ab2@7729>   LEA tempspace,a5
00024042 <AmiBlitz3_wizzard.ab2@7730> RTS
00024046 <AmiBlitz3_wizzard.ab2@7734>   MOVEM.l D1-D2/A0,-(A7)
00024048 <AmiBlitz3_wizzard.ab2@7735>   MOVE.l d0,d2
0002404A <AmiBlitz3_wizzard.ab2@7736>   MOVEQ #0,d1
0002404C <AmiBlitz3_wizzard.ab2@7737>   MOVE.l a5,a4
0002404E <AmiBlitz3_wizzard.ab2@7740>   ADDQ.l #1,d1
00024050 <AmiBlitz3_wizzard.ab2@7741>   MOVE.b (a5)+,d0
00024054 <AmiBlitz3_wizzard.ab2@7742>   CMP.b #",",d0
00024058 <AmiBlitz3_wizzard.ab2@7743>   BEQ 'll10
0002405C <AmiBlitz3_wizzard.ab2@7744>   CMP.b #";",d0
00024060 <AmiBlitz3_wizzard.ab2@7745>   BEQ 'll10
00024064 <AmiBlitz3_wizzard.ab2@7746>   CMP.b #":",d0
00024068 <AmiBlitz3_wizzard.ab2@7747>   BEQ 'll10
0002406C <AmiBlitz3_wizzard.ab2@7748>   CMP.b #"(",d0
00024070 <AmiBlitz3_wizzard.ab2@7749>   BEQ 'll10
00024072 <AmiBlitz3_wizzard.ab2@7750>   TST.b d0
00024076 <AmiBlitz3_wizzard.ab2@7751>   BNE 'll20
00024078 <AmiBlitz3_wizzard.ab2@7754>   SUBQ #1,a5
0002407C <AmiBlitz3_wizzard.ab2@7755>   CMP.b #"'",(a4)
00024080 <AmiBlitz3_wizzard.ab2@7756>   BEQ 'llocal
00024086 <AmiBlitz3_wizzard.ab2@7757>   TST.w inmacro
0002408A <AmiBlitz3_wizzard.ab2@7758>   BNE 'lmacro
0002408C <AmiBlitz3_wizzard.ab2@7759>   MOVEQ.l #$14+4,D0
0002408E <AmiBlitz3_wizzard.ab2@7760>   ADD.l d1,d0
00024090 <AmiBlitz3_wizzard.ab2@7761>   MOVE.l d1,-(a7)
00024092 <AmiBlitz3_wizzard.ab2@7762>   MOVEQ.l #$01,D1
00024098 <AmiBlitz3_wizzard.ab2@7763>   MOVEA.l _execbase,A6
0002409E <AmiBlitz3_wizzard.ab2@7764>   MOVE.l mempool2,a0
000240A2 <AmiBlitz3_wizzard.ab2@7765>   JSR _AllocPooled(a6)
000240A4 <AmiBlitz3_wizzard.ab2@7767>   MOVE.l (a7)+,d1
000240A6 <AmiBlitz3_wizzard.ab2@7768>   TST.l d0
000240AA <AmiBlitz3_wizzard.ab2@7769>   BEQ nomemory
000240AC <AmiBlitz3_wizzard.ab2@7770>   MOVEA.l D0,A0
000240B4 <AmiBlitz3_wizzard.ab2@7772>   MOVE.w linenumat+2,$A(A0)
000240BA <AmiBlitz3_wizzard.ab2@7774>   MOVE.l templabel,(A0)
000240C0 <AmiBlitz3_wizzard.ab2@7775>   MOVE.l A0,templabel
000240C8 <AmiBlitz3_wizzard.ab2@7776>   MOVE.l destpointer,$4(A0)
000240CC <AmiBlitz3_wizzard.ab2@7777>   MOVE.l d2,$8(A0)
000240D0 <AmiBlitz3_wizzard.ab2@7778>   LEA $E(A0),A0
000240D4 <AmiBlitz3_wizzard.ab2@7779>   MOVE.b #$14,(A0)+
000240D6 <AmiBlitz3_wizzard.ab2@7780>   CLR.b (a0)+
000240D8 <AmiBlitz3_wizzard.ab2@7782>   MOVE.l a0,d2
000240DA <AmiBlitz3_wizzard.ab2@7783>   ADDQ.l #4,d2
000240DC <AmiBlitz3_wizzard.ab2@7784>   MOVE.l d2,(a0)+
000240DE <AmiBlitz3_wizzard.ab2@7787>   MOVE.b (a4)+,(a0)+
000240E0 <AmiBlitz3_wizzard.ab2@7788>   SUBQ.l #1,d1
000240E4 <AmiBlitz3_wizzard.ab2@7789>   BNE 'lc1
000240E6 <AmiBlitz3_wizzard.ab2@7790>   CLR.b (a0)+
000240EC <AmiBlitz3_wizzard.ab2@7791>   MOVE.w linenumat,(a0)
000240F0 <AmiBlitz3_wizzard.ab2@7792>   MOVEM.l (A7)+,D1-D2/A0
000240F2 <AmiBlitz3_wizzard.ab2@7793> RTS
000240F4 <AmiBlitz3_wizzard.ab2@7796>   MOVEQ.l #$10+2,D0
000240F6 <AmiBlitz3_wizzard.ab2@7797>   ADD.l d1,d0
000240FA <AmiBlitz3_wizzard.ab2@7798>   MOVEM.l a4/d3,-(a7)
000240FC <AmiBlitz3_wizzard.ab2@7799>   MOVE.l d1,d3
000240FE <AmiBlitz3_wizzard.ab2@7800>   MOVEQ.l #$01,D1
00024104 <AmiBlitz3_wizzard.ab2@7801>   MOVEA.l _execbase,A6
0002410A <AmiBlitz3_wizzard.ab2@7802>   MOVE.l mempool2,a0
0002410E <AmiBlitz3_wizzard.ab2@7803>   JSR _AllocPooled(a6)
00024110 <AmiBlitz3_wizzard.ab2@7805>   TST.l d0
00024114 <AmiBlitz3_wizzard.ab2@7806>   BEQ nomemory
00024116 <AmiBlitz3_wizzard.ab2@7807>   MOVEA.l D0,A0
0002411E <AmiBlitz3_wizzard.ab2@7810>   MOVE.w linenumat+2,$C(A0)
00024124 <AmiBlitz3_wizzard.ab2@7811>   MOVE.l templabel,(A0)
0002412A <AmiBlitz3_wizzard.ab2@7812>   MOVE.l A0,templabel
00024132 <AmiBlitz3_wizzard.ab2@7813>   MOVE.l destpointer,$4(A0)
00024136 <AmiBlitz3_wizzard.ab2@7814>   MOVE.l d2,$8(A0)
0002413A <AmiBlitz3_wizzard.ab2@7815>   LEA $E(A0),A0
0002413C <AmiBlitz3_wizzard.ab2@7816>   MOVE.b d3,(A0)+
00024142 <AmiBlitz3_wizzard.ab2@7817>   ADD.b #$10,-1(a0)
00024146 <AmiBlitz3_wizzard.ab2@7818>   MOVE.b #$1,(a0)+
00024148 <AmiBlitz3_wizzard.ab2@7819>   SUBQ.w #1,d3
0002414A <AmiBlitz3_wizzard.ab2@7822>   MOVE.b (a4)+,(a0)+
0002414C <AmiBlitz3_wizzard.ab2@7823>   SUBQ.l #1,d3
00024150 <AmiBlitz3_wizzard.ab2@7824>   BNE.s 'lm2
00024152 <AmiBlitz3_wizzard.ab2@7825>   CLR.b (a0)+
00024158 <AmiBlitz3_wizzard.ab2@7826>   MOVE.w linenumat,(a0)
0002415C <AmiBlitz3_wizzard.ab2@7827>   MOVEM.l (a7)+,d3/a4
00024160 <AmiBlitz3_wizzard.ab2@7828>   MOVEM.l (A7)+,D1-D2/A0
00024162 <AmiBlitz3_wizzard.ab2@7829> RTS
00024168 <AmiBlitz3_wizzard.ab2@7832>   LEA lastgloballabel,a1
0002416A <AmiBlitz3_wizzard.ab2@7835>   ADDQ.l #1,d1
0002416C <AmiBlitz3_wizzard.ab2@7836>   TST.b (a1)+
00024170 <AmiBlitz3_wizzard.ab2@7837>   BNE.s 'll11
00024172 <AmiBlitz3_wizzard.ab2@7838>   MOVEQ.l #$10+2,D0
00024174 <AmiBlitz3_wizzard.ab2@7839>   ADD.l d1,d0
00024178 <AmiBlitz3_wizzard.ab2@7840>   MOVEM.l a4/d3,-(a7)
0002417A <AmiBlitz3_wizzard.ab2@7841>   MOVE.l d1,d3
0002417C <AmiBlitz3_wizzard.ab2@7842>   MOVEQ.l #$01,D1
00024182 <AmiBlitz3_wizzard.ab2@7843>   MOVEA.l _execbase,A6
00024188 <AmiBlitz3_wizzard.ab2@7844>   MOVE.l mempool2,a0
0002418C <AmiBlitz3_wizzard.ab2@7845>   JSR _AllocPooled(a6)
0002418E <AmiBlitz3_wizzard.ab2@7847>   TST.l d0
00024192 <AmiBlitz3_wizzard.ab2@7848>   BEQ nomemory
00024194 <AmiBlitz3_wizzard.ab2@7849>   MOVEA.l D0,A0
0002419C <AmiBlitz3_wizzard.ab2@7852>   MOVE.w linenumat+2,$C(A0)
000241A2 <AmiBlitz3_wizzard.ab2@7853>   MOVE.l templabel,(A0)
000241A8 <AmiBlitz3_wizzard.ab2@7854>   MOVE.l A0,templabel
000241B0 <AmiBlitz3_wizzard.ab2@7855>   MOVE.l destpointer,$4(A0)
000241B4 <AmiBlitz3_wizzard.ab2@7856>   MOVE.l d2,$8(A0)
000241B8 <AmiBlitz3_wizzard.ab2@7857>   LEA $E(A0),A0
000241BA <AmiBlitz3_wizzard.ab2@7858>   MOVE.b d3,(A0)+
000241C0 <AmiBlitz3_wizzard.ab2@7859>   ADD.b #$10,-1(a0)
000241C4 <AmiBlitz3_wizzard.ab2@7860>   MOVE.b #$1,(a0)+
000241C6 <AmiBlitz3_wizzard.ab2@7861>   SUBQ.w #1,d3
000241CC <AmiBlitz3_wizzard.ab2@7862>   LEA lastgloballabel,a1
000241CE <AmiBlitz3_wizzard.ab2@7865>   SUBQ.l #1,d3
000241D0 <AmiBlitz3_wizzard.ab2@7866>   MOVE.b (a1)+,(a0)+
000241D4 <AmiBlitz3_wizzard.ab2@7867>   BNE.s 'lm3
000241D6 <AmiBlitz3_wizzard.ab2@7868>   SUBQ.l #1,a0
000241D8 <AmiBlitz3_wizzard.ab2@7871>   MOVE.b (a4)+,(a0)+
000241DA <AmiBlitz3_wizzard.ab2@7872>   SUBQ.l #1,d3
000241DE <AmiBlitz3_wizzard.ab2@7873>   BNE.s 'lm1
000241E0 <AmiBlitz3_wizzard.ab2@7874>   CLR.b (a0)+
000241E6 <AmiBlitz3_wizzard.ab2@7875>   MOVE.w linenumat,(a0)
000241EA <AmiBlitz3_wizzard.ab2@7876>   MOVEM.l (a7)+,d3/a4
000241EE <AmiBlitz3_wizzard.ab2@7877>   MOVEM.l (A7)+,D1-D2/A0
000241F0 <AmiBlitz3_wizzard.ab2@7878> RTS
0002421A <AmiBlitz3_wizzard.ab2@7882>   !basic
00024270 <AmiBlitz3_wizzard.ab2@7883>   error{!TRANS{"No memory available!!!\\nAB3 will terminate due to low memory!"}}
00024282 <AmiBlitz3_wizzard.ab2@7884>   loop Delay_ 1
00024288 <AmiBlitz3_wizzard.ab2@7885> Goto loop
0002428C <AmiBlitz3_wizzard.ab2@7889>   MOVEM.l D0-D2/A0,-(A7)
00024290 <AmiBlitz3_wizzard.ab2@7890>   MOVE.w $E(A0),-(A7)
00024294 <AmiBlitz3_wizzard.ab2@7891>    BPL.w insasm__ok
00024296 <AmiBlitz3_wizzard.ab2@7892>   CLR.w (A7)
00024298 <AmiBlitz3_wizzard.ab2@7895>   MOVE.l A1,-(A7)
0002429A <AmiBlitz3_wizzard.ab2@7896>   MOVEQ.l #$10+2,D0
000242A0 <AmiBlitz3_wizzard.ab2@7897>   ADD.w asmlen,D0
000242A2 <AmiBlitz3_wizzard.ab2@7898>   MOVE.w D0,D2
000242A4 <AmiBlitz3_wizzard.ab2@7899>   MOVEQ.l #$01,D1
000242AA <AmiBlitz3_wizzard.ab2@7900>   MOVEA.l _execbase,A6
000242B0 <AmiBlitz3_wizzard.ab2@7901>   MOVE.l mempool2,a0
000242B4 <AmiBlitz3_wizzard.ab2@7902>   JSR _AllocPooled(a6)
000242B6 <AmiBlitz3_wizzard.ab2@7904>   MOVEA.l D0,A0
000242BE <AmiBlitz3_wizzard.ab2@7907>   MOVE.w linenumat+2,$C(A0)
000242C4 <AmiBlitz3_wizzard.ab2@7908>   MOVE.l templabel,(A0)
000242CA <AmiBlitz3_wizzard.ab2@7909>   MOVE.l A0,templabel
000242CE <AmiBlitz3_wizzard.ab2@7910>   MOVE.l (A7),$4(A0)
000242D2 <AmiBlitz3_wizzard.ab2@7911>   MOVE.w d3,$8(A0)
000242D8 <AmiBlitz3_wizzard.ab2@7912>   MOVE.w $4(A7),$A(A0)
000242DC <AmiBlitz3_wizzard.ab2@7913>   LEA $E(A0),A0
000242DE <AmiBlitz3_wizzard.ab2@7914>   MOVE.b D2,(A0)+                                           ;length
000242E4 <AmiBlitz3_wizzard.ab2@7915>   MOVEA.l asmbuff,A1
000242E6 <AmiBlitz3_wizzard.ab2@7916>   ADDQ.w #1,A1
000242E8 <AmiBlitz3_wizzard.ab2@7917>   MOVE.b (A1)+,(A0)+                                        ;type - 0 = indirect,else direct
000242EC <AmiBlitz3_wizzard.ab2@7918>    BNE.w insasm__loop
000242EE <AmiBlitz3_wizzard.ab2@7919>   MOVE.l (A1)+,(A0)+
000242F4 <AmiBlitz3_wizzard.ab2@7920>   MOVE.w linenumat,(a0)
000242F8 <AmiBlitz3_wizzard.ab2@7921> BRA.w insasm__loopdone
000242FA <AmiBlitz3_wizzard.ab2@7924>    MOVE.b (A1)+,(A0)+
000242FE <AmiBlitz3_wizzard.ab2@7925>    BNE.w insasm__loop
00024304 <AmiBlitz3_wizzard.ab2@7926>    MOVE.w linenumat,(a0)
00024306 <AmiBlitz3_wizzard.ab2@7929>   MOVEA.l (A7)+,A1
00024308 <AmiBlitz3_wizzard.ab2@7930>   ADDQ.w #2,A7
0002430C <AmiBlitz3_wizzard.ab2@7931>   MOVEM.l (A7)+,D0-D2/A0
0002430E <AmiBlitz3_wizzard.ab2@7932> RTS
00024312 <AmiBlitz3_wizzard.ab2@7936>   CMP.w #$5,D3
00024316 <AmiBlitz3_wizzard.ab2@7937>    BCS.w makemode__done
0002431A <AmiBlitz3_wizzard.ab2@7938>   CMP.w #$B,D3
0002431E <AmiBlitz3_wizzard.ab2@7939>    BHI.w makemode__done2
00024322 <AmiBlitz3_wizzard.ab2@7940>    BEQ.w makemode__imm
00024326 <AmiBlitz3_wizzard.ab2@7941>    BSR.w insasm
0002432A <AmiBlitz3_wizzard.ab2@7942>   CMP.w #$5,D3
0002432E <AmiBlitz3_wizzard.ab2@7943>    BEQ.w makemode__word
00024332 <AmiBlitz3_wizzard.ab2@7944>   CMP.w #$6,D3
00024336 <AmiBlitz3_wizzard.ab2@7945>    BEQ.w makemode__dxi
0002433A <AmiBlitz3_wizzard.ab2@7946>   CMP.w #$7,D3
0002433E <AmiBlitz3_wizzard.ab2@7947>    BEQ.w makemode__word
00024342 <AmiBlitz3_wizzard.ab2@7948>   CMP.w #$8,D3
00024346 <AmiBlitz3_wizzard.ab2@7949>    BEQ.w makemode__long
0002434A <AmiBlitz3_wizzard.ab2@7950>   CMP.w #$9,D3
0002434E <AmiBlitz3_wizzard.ab2@7951>    BEQ.w makemode__word
00024354 <AmiBlitz3_wizzard.ab2@7955>   CMPA.l destbufferend,A1
00024358 <AmiBlitz3_wizzard.ab2@7956>    BCS.w makemode__ok7
0002435A <AmiBlitz3_wizzard.ab2@7957>   ADDQ.w #2,A1
0002435C <AmiBlitz3_wizzard.ab2@7958> RTS
0002435E <AmiBlitz3_wizzard.ab2@7961>   MOVE.w D4,(A1)+
00024360 <AmiBlitz3_wizzard.ab2@7962> RTS
00024368 <AmiBlitz3_wizzard.ab2@7965>   CMPI.w #$8,asmsize
0002436C <AmiBlitz3_wizzard.ab2@7966>    BCC.w makemode__immlong
0002436E <AmiBlitz3_wizzard.ab2@7967>   MOVEQ.l #$10,D3
00024372 <AmiBlitz3_wizzard.ab2@7968>    BSR.w insasm
00024374 <AmiBlitz3_wizzard.ab2@7969>   MOVEQ.l #$0B,D3
00024378 <AmiBlitz3_wizzard.ab2@7970> BRA.w makemode__word
0002437C <AmiBlitz3_wizzard.ab2@7973>   BSR.w insasm
0002437E <AmiBlitz3_wizzard.ab2@7976>   ADDQ.w #2,A1
00024380 <AmiBlitz3_wizzard.ab2@7979>   ADDQ.w #2,A1
00024382 <AmiBlitz3_wizzard.ab2@7980> RTS
00024386 <AmiBlitz3_wizzard.ab2@7983>   CMP.w #$F,D3
0002438A <AmiBlitz3_wizzard.ab2@7984>    BNE.w makemode__done
00024390 <AmiBlitz3_wizzard.ab2@7985>   CMPA.l destbufferend,A1
00024394 <AmiBlitz3_wizzard.ab2@7986>    BCS.w makemode__ok3
00024396 <AmiBlitz3_wizzard.ab2@7987>   ADDQ.w #2,A1
00024398 <AmiBlitz3_wizzard.ab2@7988>   ADDQ.w #4,A7
0002439A <AmiBlitz3_wizzard.ab2@7989> RTS
0002439C <AmiBlitz3_wizzard.ab2@7992>   MOVE.w D2,(A1)+
0002439E <AmiBlitz3_wizzard.ab2@7993>   ADDQ.w #4,A7
000243A0 <AmiBlitz3_wizzard.ab2@7996> RTS
000243A4 <AmiBlitz3_wizzard.ab2@8000>   BSR.w storeloc
000243AE <AmiBlitz3_wizzard.ab2@8001>   MOVE.l linenumat,oldline
000243B0 <AmiBlitz3_wizzard.ab2@8002>   MOVEQ.l #$00,D1
000243B4 <AmiBlitz3_wizzard.ab2@8003>    BSR.w get1bytemain
000243B8 <AmiBlitz3_wizzard.ab2@8004>    BEQ.w JL_0_676E
000243BA <AmiBlitz3_wizzard.ab2@8005>   MOVEQ.l #$00,D3
000243BE <AmiBlitz3_wizzard.ab2@8006> BRA.w JL_0_6726
000243C2 <AmiBlitz3_wizzard.ab2@8009>    BSR.w get1bytemain
000243C6 <AmiBlitz3_wizzard.ab2@8010>    BNE.w JL_0_671C
000243C8 <AmiBlitz3_wizzard.ab2@8013>   TST.w D3
000243CC <AmiBlitz3_wizzard.ab2@8014>    BNE.w brackets_                                         ;syntax error brackets
000243D0 <AmiBlitz3_wizzard.ab2@8015> BRA.w JL_0_676C
000243D6 <AmiBlitz3_wizzard.ab2@8018>    MOVE.w instringon,D4
000243DA <AmiBlitz3_wizzard.ab2@8020>      BEQ JL_0_6726
000243DC <AmiBlitz3_wizzard.ab2@8023>     MOVEQ #0,d0
000243DE <AmiBlitz3_wizzard.ab2@8024>      MOVE.b (a5)+,d0                                       ;fix "ue"
000243E4 <AmiBlitz3_wizzard.ab2@8025>      MOVE.w d0,lastchar
000243E8 <AmiBlitz3_wizzard.ab2@8026>      BEQ ready
000243EC <AmiBlitz3_wizzard.ab2@8027>      CMP.b #$22,d0
000243F0 <AmiBlitz3_wizzard.ab2@8028>      BNE 'l1
000243F6 <AmiBlitz3_wizzard.ab2@8029>      NOT.w instringon
000243FA <AmiBlitz3_wizzard.ab2@8030> BRA JL_0_670A
000243FE <AmiBlitz3_wizzard.ab2@8033>            CMP.b #"@",d0                                   ;expand line @@ 1. for parameter
00024402 <AmiBlitz3_wizzard.ab2@8034>            BNE 'l10
00024406 <AmiBlitz3_wizzard.ab2@8035>            CMP.b #"@",(a5)
0002440A <AmiBlitz3_wizzard.ab2@8036>            BNE 'l10
00024410 <AmiBlitz3_wizzard.ab2@8039>            TST.w ininclude
00024414 <AmiBlitz3_wizzard.ab2@8040>            BNE 'inc
0002441A <AmiBlitz3_wizzard.ab2@8041>            MOVE.l sourceline3,a5
00024420 <AmiBlitz3_wizzard.ab2@8042>            CMP.l #0,a5
00024424 <AmiBlitz3_wizzard.ab2@8043>            BNE 'l11t
0002442A <AmiBlitz3_wizzard.ab2@8044>            MOVEA.l sourceline,A5
0002442C <AmiBlitz3_wizzard.ab2@8047>            MOVEA.l (A5),A5
00024432 <AmiBlitz3_wizzard.ab2@8048>            CMP.l #0,a5
00024436 <AmiBlitz3_wizzard.ab2@8049>            BEQ JL_0_676C
0002443C <AmiBlitz3_wizzard.ab2@8050>            MOVE.l a5,sourceline3
00024440 <AmiBlitz3_wizzard.ab2@8051>            LEA $9(A5),A5
00024444 <AmiBlitz3_wizzard.ab2@8052> BRA 'l11
00024446 <AmiBlitz3_wizzard.ab2@8055>            ADDQ.l #1,a5
00024448 <AmiBlitz3_wizzard.ab2@8056>            TST.b (a5)
0002444C <AmiBlitz3_wizzard.ab2@8057>            BNE 'inc
0002444E <AmiBlitz3_wizzard.ab2@8061>            ADDQ.l #1,a5
00024450 <AmiBlitz3_wizzard.ab2@8062>            TST.b (a5)
00024454 <AmiBlitz3_wizzard.ab2@8063>            BEQ illeolerr
00024456 <AmiBlitz3_wizzard.ab2@8064>            MOVE.l a5,-(a7)
0002445A <AmiBlitz3_wizzard.ab2@8067>       CMP.b #" ",(a5)+
0002445E <AmiBlitz3_wizzard.ab2@8068>       BEQ 'l110
00024464 <AmiBlitz3_wizzard.ab2@8069>        CMP.b #";",-1(a5)
00024466 <AmiBlitz3_wizzard.ab2@8070>        MOVE.l (a7)+,a5
0002446A <AmiBlitz3_wizzard.ab2@8071>        BEQ 'l111
0002446E <AmiBlitz3_wizzard.ab2@8072> BRA JL_0_670A
00024472 <AmiBlitz3_wizzard.ab2@8075>    CMP.w #$29,D0
00024476 <AmiBlitz3_wizzard.ab2@8076>    BNE.w JL_0_673A
00024478 <AmiBlitz3_wizzard.ab2@8077>   TST.w D3
0002447C <AmiBlitz3_wizzard.ab2@8078>    BEQ.w JL_0_676C
0002447E <AmiBlitz3_wizzard.ab2@8081>   SUBQ.w #1,D3
00024482 <AmiBlitz3_wizzard.ab2@8082> BRA.w JL_0_670A
00024486 <AmiBlitz3_wizzard.ab2@8085>    CMP.w #$7D,D0
0002448A <AmiBlitz3_wizzard.ab2@8086>    BEQ.w JL_0_6734
0002448E <AmiBlitz3_wizzard.ab2@8087>   CMP.w #$28,D0
00024492 <AmiBlitz3_wizzard.ab2@8088>    BNE.w JL_0_6750
00024494 <AmiBlitz3_wizzard.ab2@8091>    ADDQ.w #1,D3
00024498 <AmiBlitz3_wizzard.ab2@8092> BRA.w JL_0_670A
0002449C <AmiBlitz3_wizzard.ab2@8095>   CMP.w #$7B,D0
000244A0 <AmiBlitz3_wizzard.ab2@8096>    BEQ.w JL_0_674A
000244A4 <AmiBlitz3_wizzard.ab2@8097>   CMP.w #$2C,D0
000244A8 <AmiBlitz3_wizzard.ab2@8098>    BNE.w JL_0_670A
000244AA <AmiBlitz3_wizzard.ab2@8099>   TST.w D3
000244AE <AmiBlitz3_wizzard.ab2@8100>    BNE.w JL_0_670A
000244B0 <AmiBlitz3_wizzard.ab2@8101>   ADDQ.w #1,D1
000244B4 <AmiBlitz3_wizzard.ab2@8102> BRA.w JL_0_670A
000244B6 <AmiBlitz3_wizzard.ab2@8105>   ADDQ.w #1,D1
000244BC <AmiBlitz3_wizzard.ab2@8108>   CLR.l sourceline3
000244C6 <AmiBlitz3_wizzard.ab2@8109>   MOVE.l oldline,linenumat
000244CA <AmiBlitz3_wizzard.ab2@8110> BRA.w resloc
000244D0 <AmiBlitz3_wizzard.ab2@8114>    CLR.w numreps
000244D2 <AmiBlitz3_wizzard.ab2@8115>   MOVE.w D1,D0
000244D6 <AmiBlitz3_wizzard.ab2@8116>   ANDI.w #$FF00,D0
000244DA <AmiBlitz3_wizzard.ab2@8117>    BEQ.w fetchlibps__noreps
000244DC <AmiBlitz3_wizzard.ab2@8118>   LSR.w #8,D0
000244DE <AmiBlitz3_wizzard.ab2@8119>   LSR.w #4,D0
000244E2 <AmiBlitz3_wizzard.ab2@8120>    BEQ.w fetchlibps__skip
000244E4 <AmiBlitz3_wizzard.ab2@8121>   SUB.b D0,D1
000244EE <AmiBlitz3_wizzard.ab2@8122>    MOVE.w regnum,regnumfunc
000244F4 <AmiBlitz3_wizzard.ab2@8123>    MOVE.b funcparloop,-(a7)
000244FC <AmiBlitz3_wizzard.ab2@8124>    MOVE.b #0,funcparloop
00024502 <AmiBlitz3_wizzard.ab2@8125>    MOVE.l leftsidetype,-(a7)
00024508 <AmiBlitz3_wizzard.ab2@8126>    MOVE.l rightsidetype,-(a7)
0002450E <AmiBlitz3_wizzard.ab2@8127>    CLR.l leftsidetype
00024514 <AmiBlitz3_wizzard.ab2@8128>    CLR.l rightsidetype
0002451A <AmiBlitz3_wizzard.ab2@8129>    MOVE.b blitzparloop,-(a7)
00024522 <AmiBlitz3_wizzard.ab2@8130>    MOVE.b #1,blitzparloop
00024526 <AmiBlitz3_wizzard.ab2@8131>    BSR.w fetchpees2
0002452C <AmiBlitz3_wizzard.ab2@8132>    MOVE.b (a7)+,blitzparloop
00024532 <AmiBlitz3_wizzard.ab2@8133>    MOVE.l (a7)+,rightsidetype
00024538 <AmiBlitz3_wizzard.ab2@8134>    MOVE.l (a7)+,leftsidetype
0002453E <AmiBlitz3_wizzard.ab2@8135>    MOVE.b (a7)+,funcparloop
00024542 <AmiBlitz3_wizzard.ab2@8136>   CMP.w #$2C,D0
00024546 <AmiBlitz3_wizzard.ab2@8137>    BNE.w syntaxerr
00024548 <AmiBlitz3_wizzard.ab2@8140>   MOVE.w D1,D2
0002454A <AmiBlitz3_wizzard.ab2@8141>   LSR.w #8,D2
0002454E <AmiBlitz3_wizzard.ab2@8142>   ANDI.w #$7,D2
00024550 <AmiBlitz3_wizzard.ab2@8145>    CMP.b D2,D1
00024554 <AmiBlitz3_wizzard.ab2@8146>    BCS.w fetchlibps__repsdone
00024556 <AmiBlitz3_wizzard.ab2@8147>   SUB.b D2,D1
0002455A <AmiBlitz3_wizzard.ab2@8148>   MOVEM.l D2/A2,-(A7)
0002455C <AmiBlitz3_wizzard.ab2@8149>   MOVE.w D2,D0
00024562 <AmiBlitz3_wizzard.ab2@8150>   MOVE.b funcparloop,-(a7)
0002456A <AmiBlitz3_wizzard.ab2@8151>   MOVE.b #0,funcparloop
00024570 <AmiBlitz3_wizzard.ab2@8152>   MOVE.l leftsidetype,-(a7)
00024576 <AmiBlitz3_wizzard.ab2@8153>   MOVE.l rightsidetype,-(a7)
0002457C <AmiBlitz3_wizzard.ab2@8154>   CLR.l leftsidetype
00024582 <AmiBlitz3_wizzard.ab2@8155>   CLR.l rightsidetype
00024588 <AmiBlitz3_wizzard.ab2@8156>   MOVE.b blitzparloop,-(a7)
00024590 <AmiBlitz3_wizzard.ab2@8157>   MOVE.b #1,blitzparloop
00024594 <AmiBlitz3_wizzard.ab2@8158>   BSR.w fetchpees4
0002459A <AmiBlitz3_wizzard.ab2@8159>   MOVE.b (a7)+,blitzparloop
000245A0 <AmiBlitz3_wizzard.ab2@8160>   MOVE.l (a7)+,rightsidetype
000245A6 <AmiBlitz3_wizzard.ab2@8161>   MOVE.l (a7)+,leftsidetype
000245AC <AmiBlitz3_wizzard.ab2@8162>   MOVE.b (a7)+,funcparloop
000245B0 <AmiBlitz3_wizzard.ab2@8163>   MOVEM.l (A7)+,D2/A2
000245B6 <AmiBlitz3_wizzard.ab2@8164>   ADDQ.w #1,numreps
000245BA <AmiBlitz3_wizzard.ab2@8165> BRA.w fetchlibps__rloop
000245C0 <AmiBlitz3_wizzard.ab2@8168>    MOVE.w numreps,D3
000245C4 <AmiBlitz3_wizzard.ab2@8169>    BEQ.w syntaxerr
000245C6 <AmiBlitz3_wizzard.ab2@8170>   ADDA.w D2,A2
000245CA <AmiBlitz3_wizzard.ab2@8171>   ANDI.w #$FF,D1
000245CE <AmiBlitz3_wizzard.ab2@8172>    BEQ.w fetchlibps__done
000245D2 <AmiBlitz3_wizzard.ab2@8173>   CMP.w #$2C,D0
000245D6 <AmiBlitz3_wizzard.ab2@8174>    BNE.w syntaxerr
000245D8 <AmiBlitz3_wizzard.ab2@8177>    MOVE.w D1,D0
000245DC <AmiBlitz3_wizzard.ab2@8178>    BNE.w fetchpees2b
000245DE <AmiBlitz3_wizzard.ab2@8181> RTS
000245E4 <AmiBlitz3_wizzard.ab2@8184>   MOVE.b funcparloop,-(a7)
000245EA <AmiBlitz3_wizzard.ab2@8185>   MOVE.l leftsidetype,-(a7)
000245F0 <AmiBlitz3_wizzard.ab2@8186>   MOVE.l rightsidetype,-(a7)
000245F6 <AmiBlitz3_wizzard.ab2@8187>   CLR.l leftsidetype
000245FC <AmiBlitz3_wizzard.ab2@8188>   CLR.l rightsidetype
00024604 <AmiBlitz3_wizzard.ab2@8189>   MOVE.b #0,funcparloop
0002460A <AmiBlitz3_wizzard.ab2@8190>   MOVE.b blitzparloop,-(a7)
00024612 <AmiBlitz3_wizzard.ab2@8191>   MOVE.b #1,blitzparloop
00024616 <AmiBlitz3_wizzard.ab2@8192>   BSR.w fetchpees2
0002461C <AmiBlitz3_wizzard.ab2@8193>   MOVE.b (a7)+,blitzparloop
00024622 <AmiBlitz3_wizzard.ab2@8194>   MOVE.l (a7)+,rightsidetype
00024628 <AmiBlitz3_wizzard.ab2@8195>   MOVE.l (a7)+,leftsidetype
0002462E <AmiBlitz3_wizzard.ab2@8196>   MOVE.b (a7)+,funcparloop
00024630 <AmiBlitz3_wizzard.ab2@8197> RTS
00024634 <AmiBlitz3_wizzard.ab2@8201> ptype:    Dc.b $3F,$3C,$00,$00                             ;MOVE.W  #$0000,-(A7)
00024636 <AmiBlitz3_wizzard.ab2@8204> partostack:  Ds.w 1                                        ;pmode org source
00024638 <AmiBlitz3_wizzard.ab2@8208>   MOVEQ.l #$01,D2
0002463C <AmiBlitz3_wizzard.ab2@8209> BRA.w fetchpees3
0002463E <AmiBlitz3_wizzard.ab2@8212>   MOVEQ.l #$00,D2
00024642 <AmiBlitz3_wizzard.ab2@8215>   ANDI.w #$F,D0
00024648 <AmiBlitz3_wizzard.ab2@8223>   CLR.w parnum
0002464A <AmiBlitz3_wizzard.ab2@8224>   MOVE.w D1,-(A7)
0002464E <AmiBlitz3_wizzard.ab2@8225>   MOVE.w partostack(PC),-(A7)                              ;in case of recursion
00024654 <AmiBlitz3_wizzard.ab2@8226>   MOVE.w D2,partostack
00024656 <AmiBlitz3_wizzard.ab2@8227>   MOVE.w D0,-(A7)
0002465A <AmiBlitz3_wizzard.ab2@8228>   CMP.w #"@@",(a5)                                         ;was l15
0002465E <AmiBlitz3_wizzard.ab2@8229>   BNE fetchpees__loop
00024664 <AmiBlitz3_wizzard.ab2@8230>   TST.w ininclude                                          ;merge macrolines
00024668 <AmiBlitz3_wizzard.ab2@8231>   BNE errorjoin
0002466E <AmiBlitz3_wizzard.ab2@8232>        MOVEA.l sourceline,A5
00024670 <AmiBlitz3_wizzard.ab2@8235>            MOVEA.l (A5),A5
00024676 <AmiBlitz3_wizzard.ab2@8236>            MOVE.l a5,sourceline
0002467A <AmiBlitz3_wizzard.ab2@8237>            LEA $9(A5),A5
00024680 <AmiBlitz3_wizzard.ab2@8238>            ADDQ.l #1,linenumat
00024682 <AmiBlitz3_wizzard.ab2@8242>   MOVE.b (A2)+,D2                                          ;parameterloop   d2=vartype
00024686 <AmiBlitz3_wizzard.ab2@8243>    BNE.w fetchpees__skip0
0002468C <AmiBlitz3_wizzard.ab2@8244>   MOVE.w userp,D2                                          ;user selected type
0002468E <AmiBlitz3_wizzard.ab2@8246>    MOVE.l A2,-(A7)
00024694 <AmiBlitz3_wizzard.ab2@8247>    ADDQ.w #1,parnum
0002469A <AmiBlitz3_wizzard.ab2@8248>    TST.b funccall
0002469E <AmiBlitz3_wizzard.ab2@8249>    BEQ fetchpees__skip0_l1
000246A6 <AmiBlitz3_wizzard.ab2@8250>    CMP.w #6,parnum
000246AA <AmiBlitz3_wizzard.ab2@8251>    BLE fetchpees__skip0_l1
000246AE <AmiBlitz3_wizzard.ab2@8252>    CMP.w #7,d2
000246B4 <AmiBlitz3_wizzard.ab2@8258>    TST.b fpu
000246B8 <AmiBlitz3_wizzard.ab2@8259>    BEQ fetchpees__skip0_old
000246BE <AmiBlitz3_wizzard.ab2@8260>    TST.w regnumfunc
000246C2 <AmiBlitz3_wizzard.ab2@8261>    BEQ fetchpees__skip0_old
000246C8 <AmiBlitz3_wizzard.ab2@8262>    CMP.w #$48e7,-4(a4)
000246CC <AmiBlitz3_wizzard.ab2@8263>    BNE fetchpees__skip0_old
000246CE <AmiBlitz3_wizzard.ab2@8264>    MOVEQ #0,d1
000246D4 <AmiBlitz3_wizzard.ab2@8265>    MOVE.w regnum,d1
000246DA <AmiBlitz3_wizzard.ab2@8266>    CMP regnumfunc,d1                                       ;fpu reg function save
000246DE <AmiBlitz3_wizzard.ab2@8267>    BGE fetchpees__skip0_old
000246E0 <AmiBlitz3_wizzard.ab2@8268>    ASL.w #7,d1
000246E2 <AmiBlitz3_wizzard.ab2@8269>    MOVE.l d0,-(a7)
000246E8 <AmiBlitz3_wizzard.ab2@8270>    MOVE.w regnumfunc,d0
000246EE <AmiBlitz3_wizzard.ab2@8271>    CLR.w regmask
000246F4 <AmiBlitz3_wizzard.ab2@8273>    BSET d0,regmask
000246F6 <AmiBlitz3_wizzard.ab2@8274>    SUBQ #1,d0
000246FA <AmiBlitz3_wizzard.ab2@8275>    BNE fetchpees__skip0_loop
000246FC <AmiBlitz3_wizzard.ab2@8276>     MOVEQ #0,d0
00024702 <AmiBlitz3_wizzard.ab2@8279>       BTST d0,regmask
00024706 <AmiBlitz3_wizzard.ab2@8280>       BEQ fetchpees__skip0_noa7
00024708 <AmiBlitz3_wizzard.ab2@8281>       MOVEQ #0,d1
0002470A <AmiBlitz3_wizzard.ab2@8282>       MOVE.w d0,d1
0002470C <AmiBlitz3_wizzard.ab2@8283>       SUBQ.w #1,d1
0002470E <AmiBlitz3_wizzard.ab2@8284>       ASL #7,d1
00024714 <AmiBlitz3_wizzard.ab2@8285>       OR.l #$f2277400,d1                                   ;fmove.d
00024718 <AmiBlitz3_wizzard.ab2@8287>       BSR writelong
0002471E <AmiBlitz3_wizzard.ab2@8289>       ADDQ.l #2,stacktrack
00024724 <AmiBlitz3_wizzard.ab2@8290>       MOVE.l stacktrack,d1
0002472A <AmiBlitz3_wizzard.ab2@8291>       CMP.l #180,d1
0002472E <AmiBlitz3_wizzard.ab2@8292>       BGT conmemerr                                        ;formel too complex
00024730 <AmiBlitz3_wizzard.ab2@8293>       MOVE.l a0,-(a7)
00024736 <AmiBlitz3_wizzard.ab2@8294>       LEA fpustackbase,a0
0002473E <AmiBlitz3_wizzard.ab2@8295>       MOVE.w regmask,0(a0,d1)
00024740 <AmiBlitz3_wizzard.ab2@8296>       MOVE.l (a7)+,a0
00024742 <AmiBlitz3_wizzard.ab2@8299>       ADDQ.w #1,d0
00024748 <AmiBlitz3_wizzard.ab2@8300>       CMP.w regnumfunc,d0
0002474C <AmiBlitz3_wizzard.ab2@8301>       BLE fetchpees__skip0_loop2
0002474E <AmiBlitz3_wizzard.ab2@8304>       MOVE.l (a7)+,d0
00024754 <AmiBlitz3_wizzard.ab2@8307>      MOVE.l currentfunccall,-(a7)
0002475A <AmiBlitz3_wizzard.ab2@8308>      MOVE.w parnum,-(a7)
00024760 <AmiBlitz3_wizzard.ab2@8309>      TST.l rightsidetype
00024764 <AmiBlitz3_wizzard.ab2@8310>      BSR.w JL_0_6836
0002476A <AmiBlitz3_wizzard.ab2@8311>      MOVE.w (a7)+,parnum
00024770 <AmiBlitz3_wizzard.ab2@8313>    MOVE.l (a7)+,currentfunccall
00024776 <AmiBlitz3_wizzard.ab2@8315>    TST.b typecheck                            ;typecheck for function call
0002477A <AmiBlitz3_wizzard.ab2@8316>    BEQ 'notypecheck
00024780 <AmiBlitz3_wizzard.ab2@8317>    TST.b notypecheck
00024784 <AmiBlitz3_wizzard.ab2@8318>    BNE 'notypecheck
0002478A <AmiBlitz3_wizzard.ab2@8319>    TST.b blitzparloop
0002478E <AmiBlitz3_wizzard.ab2@8320>    BNE 'isblitzlibcall                                    ;no typecheck for blitzlibs currently
00024798 <AmiBlitz3_wizzard.ab2@8321>    CMP.l #0,currentfunccall
0002479C <AmiBlitz3_wizzard.ab2@8322>    BEQ 'isblitzlibcall
000247A0 <AmiBlitz3_wizzard.ab2@8323>    MOVEM.l a0/a1,-(a7)
000247A6 <AmiBlitz3_wizzard.ab2@8324>    MOVE.l currentfunccall,a0
000247AC <AmiBlitz3_wizzard.ab2@8325>    MOVE.w parnum,d1
000247B2 <AmiBlitz3_wizzard.ab2@8326>    TST.b isconstantvalue
000247B6 <AmiBlitz3_wizzard.ab2@8327>    BEQ 'noconstant
000247C0 <AmiBlitz3_wizzard.ab2@8328>    CMP.l #0,lastconstantvalue
000247C4 <AmiBlitz3_wizzard.ab2@8329>    BEQ 'isnull
000247C8 <AmiBlitz3_wizzard.ab2@8331>    MOVE.l funcstruct_parametertype-4(a0,d1*4),a0
000247CE <AmiBlitz3_wizzard.ab2@8332>    CMP.l #0,a0
000247D2 <AmiBlitz3_wizzard.ab2@8333>    BEQ 'notype
000247DA <AmiBlitz3_wizzard.ab2@8334>    CMP.l #$100,4(a0)
000247DE <AmiBlitz3_wizzard.ab2@8335>    BLE 'notype
000247E4 <AmiBlitz3_wizzard.ab2@8336>    MOVE.l lasttoken,d1
000247E8 <AmiBlitz3_wizzard.ab2@8337>    CMP.w #$b581,d1                   ; ok, when token for null
000247EC <AmiBlitz3_wizzard.ab2@8338>    BEQ 'isnull
000247F2 <AmiBlitz3_wizzard.ab2@8339>    TST.l typetocast
000247F6 <AmiBlitz3_wizzard.ab2@8340>    BEQ 'nocast
000247FC <AmiBlitz3_wizzard.ab2@8341>    MOVE.l typetocast,a1
00024800 <AmiBlitz3_wizzard.ab2@8342>    BRA 'typecheck
00024806 <AmiBlitz3_wizzard.ab2@8344>    MOVE.l rightsidetype,a1
0002480C <AmiBlitz3_wizzard.ab2@8345>    CMP.l #0,a1
00024810 <AmiBlitz3_wizzard.ab2@8346>    BEQ 'notype
00024818 <AmiBlitz3_wizzard.ab2@8347> 'typecheck   CMP.l #$100,4(a1)
0002481A <AmiBlitz3_wizzard.ab2@8349>    CMP.l a0,a1
0002481E <AmiBlitz3_wizzard.ab2@8350>    BEQ 'ok
00024826 <AmiBlitz3_wizzard.ab2@8352>    CMP.l #$100,4(a1)                 ; is a type here
0002482A <AmiBlitz3_wizzard.ab2@8353>    BLE 'error
0002482E <AmiBlitz3_wizzard.ab2@8354>    MOVE.l 4(a1),a1                   ; load the address of type.
00024832 <AmiBlitz3_wizzard.ab2@8355>    CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
00024836 <AmiBlitz3_wizzard.ab2@8356>    BEQ 'ok
0002483C <AmiBlitz3_wizzard.ab2@8357> 'error: JMP   error_convert_types    ; for syntax 4
00024842 <AmiBlitz3_wizzard.ab2@8361>    CLR.l typetocast
00024846 <AmiBlitz3_wizzard.ab2@8362>    MOVEM.l (a7)+,a0/a1
0002484C <AmiBlitz3_wizzard.ab2@8366>    CLR.l lastfunction
00024852 <AmiBlitz3_wizzard.ab2@8367>    TST.b fpu
00024856 <AmiBlitz3_wizzard.ab2@8368>    BEQ fetchpees__skip0_noprint
00024858 <AmiBlitz3_wizzard.ab2@8369>   MOVE.l (a7),a2
0002485A <AmiBlitz3_wizzard.ab2@8370>   ADDQ.l #1,a2
0002485E <AmiBlitz3_wizzard.ab2@8371>    CMP.b #5,d2
00024862 <AmiBlitz3_wizzard.ab2@8372>   BNE fetchpees__skip0_noprint
00024868 <AmiBlitz3_wizzard.ab2@8373>   CMP.b #$5d,24(a2)
0002486C <AmiBlitz3_wizzard.ab2@8374>   BNE fetchpees__skip0_noprint
00024872 <AmiBlitz3_wizzard.ab2@8375>   CMP.b #$81,25(a2)
00024876 <AmiBlitz3_wizzard.ab2@8376>   BLT fetchpees__skip0_noprint
0002487C <AmiBlitz3_wizzard.ab2@8377>   CMP.b #$86,25(a2)
00024880 <AmiBlitz3_wizzard.ab2@8378>   BEQ fetchpees__skip0_ok
00024886 <AmiBlitz3_wizzard.ab2@8379>   CMP.b #$87,25(a2)
0002488A <AmiBlitz3_wizzard.ab2@8380>   BEQ fetchpees__skip0_ok
00024890 <AmiBlitz3_wizzard.ab2@8381>   CMP.b #$88,25(a2)
00024894 <AmiBlitz3_wizzard.ab2@8382>   BEQ fetchpees__skip0_ok
0002489A <AmiBlitz3_wizzard.ab2@8383>   CMP.b #$83,25(a2)
0002489E <AmiBlitz3_wizzard.ab2@8384>   BGT fetchpees__skip0_noprint
000248A4 <AmiBlitz3_wizzard.ab2@8387>   MOVE.l destpointer,a4
000248AA <AmiBlitz3_wizzard.ab2@8388>   CMP.w #$2f00,-2(a4)
000248AE <AmiBlitz3_wizzard.ab2@8389>   BNE fetchpees__skip0_noprint
000248B4 <AmiBlitz3_wizzard.ab2@8390>   SUBQ.l #2,destpointer
000248BA <AmiBlitz3_wizzard.ab2@8392>   MOVE.l #$f2277400,d1
000248BE <AmiBlitz3_wizzard.ab2@8393>   BSR writelong                                            ;fmove.d fp0,-(a7)
000248C4 <AmiBlitz3_wizzard.ab2@8394>   ADDQ #4,a2offset
000248CA <AmiBlitz3_wizzard.ab2@8412>   CLR.b optistring
000248CC <AmiBlitz3_wizzard.ab2@8413>   MOVEA.l (A7)+,A2
000248D0 <AmiBlitz3_wizzard.ab2@8414>    CMP.w #"@",d0
000248D4 <AmiBlitz3_wizzard.ab2@8415>   BNE fetchpees__skip0_l10
000248D8 <AmiBlitz3_wizzard.ab2@8416>    CMP.b #"@",(a5)
000248DC <AmiBlitz3_wizzard.ab2@8417>   BNE fetchpees__skip0_l10
000248E2 <AmiBlitz3_wizzard.ab2@8418>   TST.w ininclude
000248E6 <AmiBlitz3_wizzard.ab2@8419>   BNE errorjoin
000248EC <AmiBlitz3_wizzard.ab2@8420>   MOVEA.l sourceline,A5
000248EE <AmiBlitz3_wizzard.ab2@8421>            MOVEA.l (A5),A5
000248F4 <AmiBlitz3_wizzard.ab2@8422>            MOVE.l a5,sourceline
000248FA <AmiBlitz3_wizzard.ab2@8423>            ADDQ.l #1,linenumat
000248FE <AmiBlitz3_wizzard.ab2@8424>            LEA $9(A5),A5
00024900 <AmiBlitz3_wizzard.ab2@8425>            MOVEQ #0,d0
00024904 <AmiBlitz3_wizzard.ab2@8426>            BSR get1bytemain
00024908 <AmiBlitz3_wizzard.ab2@8429>    CMP.b #32,(a5)+ ;for space after a ,
0002490C <AmiBlitz3_wizzard.ab2@8430>    BEQ fetchpees__skip0_l10:
0002490E <AmiBlitz3_wizzard.ab2@8431>    SUBQ.l #1,a5
00024912 <AmiBlitz3_wizzard.ab2@8433>    CMP.w #"@@",(a5)                                        ;if merge
00024916 <AmiBlitz3_wizzard.ab2@8434>    BNE fetchpees__skip0_l15
0002491A <AmiBlitz3_wizzard.ab2@8435>    MOVEM.l d0-d7/a0-a4/a6,-(a7)
00024920 <AmiBlitz3_wizzard.ab2@8436>    JSR mergeline
00024924 <AmiBlitz3_wizzard.ab2@8437>    MOVEM.l (a7)+,d0-d7/a0-a4/a6
00024926 <AmiBlitz3_wizzard.ab2@8457>       SUBQ.w #1,(A7)
0002492A <AmiBlitz3_wizzard.ab2@8458>    BEQ.w fetchpees__done
0002492E <AmiBlitz3_wizzard.ab2@8460>     CMP.w #$2C,D0
00024932 <AmiBlitz3_wizzard.ab2@8462>    BNE overloadfunc
00024936 <AmiBlitz3_wizzard.ab2@8463> BRA.w fetchpees__loop
00024938 <AmiBlitz3_wizzard.ab2@8466>   ADDQ.w #2,A7
0002493E <AmiBlitz3_wizzard.ab2@8467>   MOVE.w (A7)+,partostack
00024940 <AmiBlitz3_wizzard.ab2@8468>   MOVE.w (A7)+,D1
00024946 <AmiBlitz3_wizzard.ab2@8469>   CLR.b isconstantvalue
00024950 <AmiBlitz3_wizzard.ab2@8470>   MOVE.l currentfunccall,lastfunction
00024956 <AmiBlitz3_wizzard.ab2@8471>   CLR.b funccall
0002495C <AmiBlitz3_wizzard.ab2@8472>   CLR.l currentfunccall
0002495E <AmiBlitz3_wizzard.ab2@8473> RTS
00024964 <AmiBlitz3_wizzard.ab2@8477>   CLR.b funccall
0002496A <AmiBlitz3_wizzard.ab2@8478>   MOVE.w regnum,d1
00024970 <AmiBlitz3_wizzard.ab2@8479>   MOVE.l currentfunccall,a4
00024974 <AmiBlitz3_wizzard.ab2@8480>   CMP.b $20(a4),d1                                         ;increase if more pars
00024978 <AmiBlitz3_wizzard.ab2@8481>   BLT notparerr
0002497A <AmiBlitz3_wizzard.ab2@8484>   MOVE.b (a2)+,d2
00024982 <AmiBlitz3_wizzard.ab2@8485>   ADD.w #1,parnum
00024988 <AmiBlitz3_wizzard.ab2@8486>   TST.b fpu
0002498C <AmiBlitz3_wizzard.ab2@8487>   BEQ 'nofpu
00024990 <AmiBlitz3_wizzard.ab2@8488>   CMP.b #5,d2
00024994 <AmiBlitz3_wizzard.ab2@8489>   BNE 'nofpu
00024996 <AmiBlitz3_wizzard.ab2@8490>   MOVEQ #0,d1
0002499C <AmiBlitz3_wizzard.ab2@8491>   MOVE.w regnum,d1
000249A4 <AmiBlitz3_wizzard.ab2@8492>   CMP.w #6,regnum
000249A8 <AmiBlitz3_wizzard.ab2@8493>   BLT 'nostack2
000249AC <AmiBlitz3_wizzard.ab2@8498>   MOVE.w #$2c3c,d1
000249B0 <AmiBlitz3_wizzard.ab2@8499>   BSR writeword
000249B6 <AmiBlitz3_wizzard.ab2@8500>   MOVE.l #$bf800000,d1
000249BA <AmiBlitz3_wizzard.ab2@8501>   BSR writelong
000249BE <AmiBlitz3_wizzard.ab2@8502>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
000249C4 <AmiBlitz3_wizzard.ab2@8503>   ADD.w parnum,d1
000249CA <AmiBlitz3_wizzard.ab2@8504>   JSR Atokejsr
000249D0 <AmiBlitz3_wizzard.ab2@8505>   TST.w dontwrite
000249D4 <AmiBlitz3_wizzard.ab2@8506>   BNE 'l1
000249DA <AmiBlitz3_wizzard.ab2@8507>   MOVE.l data1start,d1
000249E0 <AmiBlitz3_wizzard.ab2@8508>   MOVE.l destpointer,a4
000249E4 <AmiBlitz3_wizzard.ab2@8509>   ADD.l d1,-4(a4)
000249EA <AmiBlitz3_wizzard.ab2@8510>   MOVE.l destpointer,d1
000249EC <AmiBlitz3_wizzard.ab2@8511>   SUBQ.l #4,d1
000249F2 <AmiBlitz3_wizzard.ab2@8512>   SUB.l destbufferstart,d1
000249F4 <AmiBlitz3_wizzard.ab2@8513>   MOVE.l d2,-(a7)
000249F6 <AmiBlitz3_wizzard.ab2@8514>   MOVE.l d1,d2
000249FC <AmiBlitz3_wizzard.ab2@8515>   JSR addhunkoffset
000249FE <AmiBlitz3_wizzard.ab2@8516>   MOVE.l (a7)+,d2
00024A02 <AmiBlitz3_wizzard.ab2@8517> BRA 'l1
00024A04 <AmiBlitz3_wizzard.ab2@8520>   ASL.l #7,d1
00024A0A <AmiBlitz3_wizzard.ab2@8521>   OR.l #$F23C5000,d1                                       ;fmove.w #-1,fpx
00024A0E <AmiBlitz3_wizzard.ab2@8522>   BSR writelong
00024A10 <AmiBlitz3_wizzard.ab2@8523>   MOVEQ #-1,d1                                             ;-1
00024A14 <AmiBlitz3_wizzard.ab2@8524>   BSR writeword
00024A18 <AmiBlitz3_wizzard.ab2@8525> BRA 'l1
00024A1E <AmiBlitz3_wizzard.ab2@8528>   MOVE.w regnum,d1
00024A26 <AmiBlitz3_wizzard.ab2@8529>   CMP.w #6,regnum
00024A2A <AmiBlitz3_wizzard.ab2@8530>   BLT 'nostack
00024A2E <AmiBlitz3_wizzard.ab2@8535>   CMP.b #2,d2
00024A32 <AmiBlitz3_wizzard.ab2@8536>   BGT 'nw
00024A36 <AmiBlitz3_wizzard.ab2@8537> BRA 'nos
00024A3A <AmiBlitz3_wizzard.ab2@8546>   CMP.w #7,d2
00024A3E <AmiBlitz3_wizzard.ab2@8547>   BNE 'nos
00024A44 <AmiBlitz3_wizzard.ab2@8548>   ADDQ #4,a2offset
00024A4A <AmiBlitz3_wizzard.ab2@8550>     MOVE.l #$48780000,d1
00024A4E <AmiBlitz3_wizzard.ab2@8551>     BSR writelong
00024A54 <AmiBlitz3_wizzard.ab2@8552>     ADDQ.w #4,a2offset
00024A58 <AmiBlitz3_wizzard.ab2@8553>     MOVE.w #$2f3c,d1
00024A5C <AmiBlitz3_wizzard.ab2@8554>     BSR writeword
00024A62 <AmiBlitz3_wizzard.ab2@8555>     MOVE.l #-1,d1
00024A66 <AmiBlitz3_wizzard.ab2@8556>     BSR writelong
00024A6A <AmiBlitz3_wizzard.ab2@8557>   BRA 'l1
00024A6E <AmiBlitz3_wizzard.ab2@8561>   CMP.b #4,d2
00024A72 <AmiBlitz3_wizzard.ab2@8562>       BNE 'noq
00024A76 <AmiBlitz3_wizzard.ab2@8563>       MOVE.w #$2c3c,d1
00024A7A <AmiBlitz3_wizzard.ab2@8564>       BSR writeword
00024A80 <AmiBlitz3_wizzard.ab2@8565>       MOVE.l #$ffff0000,d1
00024A84 <AmiBlitz3_wizzard.ab2@8566>       BSR writelong
00024A88 <AmiBlitz3_wizzard.ab2@8567> BRA 'noq2
00024A8C <AmiBlitz3_wizzard.ab2@8570>      CMP.b #5,d2
00024A90 <AmiBlitz3_wizzard.ab2@8571>      BNE 'nof
00024A94 <AmiBlitz3_wizzard.ab2@8572>       MOVE.w #$2c3c,d1
00024A98 <AmiBlitz3_wizzard.ab2@8573>       BSR writeword
00024A9E <AmiBlitz3_wizzard.ab2@8574>       MOVE.l #$800000c1,d1
00024AA2 <AmiBlitz3_wizzard.ab2@8575>       BSR writelong
00024AA6 <AmiBlitz3_wizzard.ab2@8576> BRA 'noq2
00024AAA <AmiBlitz3_wizzard.ab2@8579>   MOVE.w #$7cff,d1
00024AAE <AmiBlitz3_wizzard.ab2@8580>   BSR writeword
00024AB2 <AmiBlitz3_wizzard.ab2@8583>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
00024AB8 <AmiBlitz3_wizzard.ab2@8584>   ADD.w parnum,d1
00024ABE <AmiBlitz3_wizzard.ab2@8585>   JSR Atokejsr
00024AC4 <AmiBlitz3_wizzard.ab2@8586>    TST.w dontwrite
00024AC8 <AmiBlitz3_wizzard.ab2@8587>    BNE 'l1
00024ACE <AmiBlitz3_wizzard.ab2@8588>    MOVE.l data1start,d1
00024AD4 <AmiBlitz3_wizzard.ab2@8589>    MOVE.l destpointer,a4
00024AD8 <AmiBlitz3_wizzard.ab2@8590>    ADD.l d1,-4(a4)
00024ADE <AmiBlitz3_wizzard.ab2@8591>    MOVE.l destpointer,d1
00024AE0 <AmiBlitz3_wizzard.ab2@8592>    SUBQ.l #4,d1
00024AE6 <AmiBlitz3_wizzard.ab2@8593>    SUB.l destbufferstart,d1
00024AE8 <AmiBlitz3_wizzard.ab2@8594>    MOVE.l d2,-(a7)
00024AEA <AmiBlitz3_wizzard.ab2@8595>    MOVE.l d1,d2
00024AF0 <AmiBlitz3_wizzard.ab2@8596>    JSR addhunkoffset
00024AF2 <AmiBlitz3_wizzard.ab2@8597>    MOVE.l (a7)+,d2
00024AF6 <AmiBlitz3_wizzard.ab2@8598> BRA 'l1
00024AF8 <AmiBlitz3_wizzard.ab2@8601>   ASL.l #8,d1
00024AFA <AmiBlitz3_wizzard.ab2@8602>   ASL.l #1,d1
00024B00 <AmiBlitz3_wizzard.ab2@8603>   OR.l #$203c,d1                                           ;-1
00024B04 <AmiBlitz3_wizzard.ab2@8604>   BSR writeword
00024B0A <AmiBlitz3_wizzard.ab2@8605>   MOVE.l #-1,d1
00024B0E <AmiBlitz3_wizzard.ab2@8606>   CMP.b #4,d2
00024B12 <AmiBlitz3_wizzard.ab2@8607>   BNE 'nq1
00024B18 <AmiBlitz3_wizzard.ab2@8608>   MOVE.l #$ffff0000,d1
00024B1C <AmiBlitz3_wizzard.ab2@8611>   CMP.b #5,d2
00024B20 <AmiBlitz3_wizzard.ab2@8612>   BNE 'nof2
00024B26 <AmiBlitz3_wizzard.ab2@8613>   TST.b fpu
00024B2A <AmiBlitz3_wizzard.ab2@8614>   BNE 'nof2
00024B30 <AmiBlitz3_wizzard.ab2@8615>   MOVE.l #$800000c1,d1
00024B34 <AmiBlitz3_wizzard.ab2@8618>    BSR writelong
00024B38 <AmiBlitz3_wizzard.ab2@8619>    CMP.b #7,d2
00024B3C <AmiBlitz3_wizzard.ab2@8620>    BNE 'l1
00024B42 <AmiBlitz3_wizzard.ab2@8622>      MOVE.l #$48780000,d1
00024B46 <AmiBlitz3_wizzard.ab2@8623>      BSR writelong
00024B4C <AmiBlitz3_wizzard.ab2@8625>    ADDQ.w #4,a2offset                                      ; bug fix for string parameters
00024B52 <AmiBlitz3_wizzard.ab2@8626>    MOVE.l #$594f,d1                                        ; subq #4,a7
00024B56 <AmiBlitz3_wizzard.ab2@8627>    BSR writeword
00024B58 <AmiBlitz3_wizzard.ab2@8630>    SUBQ.w #1,(A7)
00024B5C <AmiBlitz3_wizzard.ab2@8631>    BEQ.w fetchpees__done
00024B62 <AmiBlitz3_wizzard.ab2@8632>    ADDQ.w #1,regnum
00024B66 <AmiBlitz3_wizzard.ab2@8633> BRA 'ol2
00024B68 <AmiBlitz3_wizzard.ab2@8636>    MOVE.w D2,D1
00024B6C <AmiBlitz3_wizzard.ab2@8637>    ANDI.w #$40,D1
00024B72 <AmiBlitz3_wizzard.ab2@8638>    MOVE.b D1,partostack
00024B74 <AmiBlitz3_wizzard.ab2@8639>    TST.b D2
00024B78 <AmiBlitz3_wizzard.ab2@8640>     BMI.w handlevara
00024B7C <AmiBlitz3_wizzard.ab2@8641>    BTST #$5,D2
00024B80 <AmiBlitz3_wizzard.ab2@8642>     BNE.w handlearr
00024B86 <AmiBlitz3_wizzard.ab2@8643>     MOVE.w regnumstore,-(a7)
00024B8C <AmiBlitz3_wizzard.ab2@8644>     MOVE.w tempregnum,-(a7)
00024B92 <AmiBlitz3_wizzard.ab2@8645>     MOVE.w parnum,-(a7)
00024B96 <AmiBlitz3_wizzard.ab2@8646>     BSR.w getap                                        ;recursive entry
00024B9C <AmiBlitz3_wizzard.ab2@8647>     MOVE.w (a7)+,parnum
00024BA2 <AmiBlitz3_wizzard.ab2@8648>     MOVE.w (a7)+,tempregnum
00024BA8 <AmiBlitz3_wizzard.ab2@8649>     MOVE.w (a7)+,regnumstore
00024BAC <AmiBlitz3_wizzard.ab2@8652>     MOVE.w partostack(PC),D1
00024BB0 <AmiBlitz3_wizzard.ab2@8653>     BEQ.w JL_0_6886
00024BB6 <AmiBlitz3_wizzard.ab2@8656>    ADDQ.w #4,a2offset
00024BBC <AmiBlitz3_wizzard.ab2@8659>    MOVE.w pushdn,D1
00024BC2 <AmiBlitz3_wizzard.ab2@8660>    OR.w regnum,D1
00024BC6 <AmiBlitz3_wizzard.ab2@8661>    CMP.w #$3,D2
00024BCA <AmiBlitz3_wizzard.ab2@8662>     BCC.w JL_0_6880
00024BD0 <AmiBlitz3_wizzard.ab2@8663>    SUBQ.w #2,a2offset
00024BD4 <AmiBlitz3_wizzard.ab2@8664>    ORI.w #$1000,D1
00024BD8 <AmiBlitz3_wizzard.ab2@8665>    BSR.w writeword
00024BDA <AmiBlitz3_wizzard.ab2@8666> RTS
00024BDE <AmiBlitz3_wizzard.ab2@8669>   CMP.b #7,d2
00024BE2 <AmiBlitz3_wizzard.ab2@8670>    BNE 'l10
00024BEA <AmiBlitz3_wizzard.ab2@8671>    CMP.b #2,optistring
00024BF0 <AmiBlitz3_wizzard.ab2@8675>   TST.b iee
00024BF4 <AmiBlitz3_wizzard.ab2@8676>   BEQ 'old
00024BF8 <AmiBlitz3_wizzard.ab2@8677>   CMP.b #5,d2
00024BFC <AmiBlitz3_wizzard.ab2@8678>   BNE 'old
00024C00 <AmiBlitz3_wizzard.ab2@8681>   BSR.w writeword                                          ;write val to stack
00024C02 <AmiBlitz3_wizzard.ab2@8682> RTS
00024C08 <AmiBlitz3_wizzard.ab2@8685>   SUBQ.w #4,a2offset
00024C0A <AmiBlitz3_wizzard.ab2@8686> RTS
00024C10 <AmiBlitz3_wizzard.ab2@8689>   ADDQ.w #1,regnum
00024C12 <AmiBlitz3_wizzard.ab2@8690> RTS
00024C14 <AmiBlitz3_wizzard.ab2@8694>   MOVEQ.l #$03,D2
00024C18 <AmiBlitz3_wizzard.ab2@8695> BRA.w JL_0_6854
00024C1C <AmiBlitz3_wizzard.ab2@8699>   ANDI.w #$7,D2
00024C1E <AmiBlitz3_wizzard.ab2@8700>   MOVE.w D2,-(A7)
00024C22 <AmiBlitz3_wizzard.ab2@8701>    BSR.w JL_0_A916
00024C26 <AmiBlitz3_wizzard.ab2@8702>   CMP.b #$7,D2                                             ;ignore pnt to $
00024C2A <AmiBlitz3_wizzard.ab2@8703>    BEQ.w JL_0_68C0
00024C2E <AmiBlitz3_wizzard.ab2@8704>   BTST #$E,D2
00024C32 <AmiBlitz3_wizzard.ab2@8705>    BEQ.w JL_0_68B6
00024C36 <AmiBlitz3_wizzard.ab2@8706>   MOVE.b #$3,D2                                            ;pointer to long
00024C3A <AmiBlitz3_wizzard.ab2@8707> BRA.w JL_0_68C0
00024C3C <AmiBlitz3_wizzard.ab2@8710>    TST.b D2
00024C40 <AmiBlitz3_wizzard.ab2@8711>    BNE.w JL_0_68C0
00024C44 <AmiBlitz3_wizzard.ab2@8712>   MOVE.b #$3,D2
00024C46 <AmiBlitz3_wizzard.ab2@8715>   MOVE.w (A7)+,D3
00024C48 <AmiBlitz3_wizzard.ab2@8716>   TST.b D3
00024C4C <AmiBlitz3_wizzard.ab2@8717>    BEQ.w JL_0_68D2
00024C4E <AmiBlitz3_wizzard.ab2@8718>   CMP.b D2,D3
00024C52 <AmiBlitz3_wizzard.ab2@8719>    BEQ.w putalp
00024C56 <AmiBlitz3_wizzard.ab2@8720> BRA.w mismatcherr
00024C5C <AmiBlitz3_wizzard.ab2@8723>   ADDQ.w #2,a2offset
00024C60 <AmiBlitz3_wizzard.ab2@8724>   MOVE.w ptype(PC),D1
00024C64 <AmiBlitz3_wizzard.ab2@8725>    BSR.w writeword
00024C66 <AmiBlitz3_wizzard.ab2@8726>   MOVEQ.l #$00,D1
00024C68 <AmiBlitz3_wizzard.ab2@8727>   MOVE.b D2,D1
00024C6C <AmiBlitz3_wizzard.ab2@8728>    BSR.w writeword
00024C70 <AmiBlitz3_wizzard.ab2@8729> BRA.w putalp
00024C72 <AmiBlitz3_wizzard.ab2@8732>    MOVE.w D2,-(A7)
00024C76 <AmiBlitz3_wizzard.ab2@8733>    BSR.w JL_0_694E
00024C7C <AmiBlitz3_wizzard.ab2@8734>   BTST #$4,$1(A7)
00024C80 <AmiBlitz3_wizzard.ab2@8735>    BEQ.w JL_0_6900
00024C84 <AmiBlitz3_wizzard.ab2@8736>    BSR.w JL_0_699A
00024C8A <AmiBlitz3_wizzard.ab2@8739>    BTST #$3,$1(A7)
00024C8E <AmiBlitz3_wizzard.ab2@8740>    BEQ.w JL_0_690E
00024C92 <AmiBlitz3_wizzard.ab2@8741>    BSR.w sendtype
00024C94 <AmiBlitz3_wizzard.ab2@8744>    MOVE.w (A7)+,D2
00024C98 <AmiBlitz3_wizzard.ab2@8745> BRA.w get1bytemain
00024C9E <AmiBlitz3_wizzard.ab2@8748>   MOVE.w regnum,D1
00024CA0 <AmiBlitz3_wizzard.ab2@8749>   LSL.w #8,D1
00024CA2 <AmiBlitz3_wizzard.ab2@8750>   LSL.w #1,D1
00024CA6 <AmiBlitz3_wizzard.ab2@8751>   ORI.w #$7000,D1
00024CAC <AmiBlitz3_wizzard.ab2@8752>   BTST #$0,$7(A3)
00024CB0 <AmiBlitz3_wizzard.ab2@8753>    BNE.w JL_0_6946                                         ;A Pointer
00024CB8 <AmiBlitz3_wizzard.ab2@8754>   CMPI.l #$100,$4(A2)
00024CBC <AmiBlitz3_wizzard.ab2@8755>    BCC.w arrerr1                                           ;illegal type to send
00024CC0 <AmiBlitz3_wizzard.ab2@8756>   MOVE.b $7(A2),D1
00024CC4 <AmiBlitz3_wizzard.ab2@8759>   BSR.w writeword                                          ;moveq #type,d regat
00024CC6 <AmiBlitz3_wizzard.ab2@8760>   MOVEQ.l #$02,D2                                          ;just a word.
00024CCA <AmiBlitz3_wizzard.ab2@8761> BRA.w JL_0_685C
00024CCE <AmiBlitz3_wizzard.ab2@8764>   MOVE.b #$3,D1
00024CD2 <AmiBlitz3_wizzard.ab2@8765> BRA.w JL_0_693C
00024CD6 <AmiBlitz3_wizzard.ab2@8769>    BSR.w get1bytemain                                      ;write array paramter code
00024CDA <AmiBlitz3_wizzard.ab2@8770>    BSR.w getparameter
00024CE2 <AmiBlitz3_wizzard.ab2@8771>   BTST #$1,flagmask+1
00024CE6 <AmiBlitz3_wizzard.ab2@8772>    BEQ.w syntaxerr
00024CEA <AmiBlitz3_wizzard.ab2@8773>    BSR.w JL_0_8E3C
00024CEE <AmiBlitz3_wizzard.ab2@8774>    BSR.w get1bytemain
00024CF2 <AmiBlitz3_wizzard.ab2@8775>   CMP.w #$29,D0                                            ;we just want a() or whatever
00024CF6 <AmiBlitz3_wizzard.ab2@8776>    BNE.w syntaxerr
00024CFC <AmiBlitz3_wizzard.ab2@8777>   MOVE.w notshared,D1
00024D00 <AmiBlitz3_wizzard.ab2@8778>    BNE.w noarrayerr
00024D06 <AmiBlitz3_wizzard.ab2@8779>   MOVE.w regnum,D1
00024D08 <AmiBlitz3_wizzard.ab2@8780>   LSL.w #8,D1
00024D0A <AmiBlitz3_wizzard.ab2@8781>   LSL.w #1,D1
00024D0E <AmiBlitz3_wizzard.ab2@8782>   OR.w fbase(PC),D1
00024D14 <AmiBlitz3_wizzard.ab2@8783>    TST.b varmode
00024D18 <AmiBlitz3_wizzard.ab2@8784>    BEQ 'l1
00024D1C <AmiBlitz3_wizzard.ab2@8785>    BCLR #0,d1
00024D20 <AmiBlitz3_wizzard.ab2@8788>    BSR.w writeword
00024D24 <AmiBlitz3_wizzard.ab2@8789>   MOVE.w $4(A3),D1
00024D28 <AmiBlitz3_wizzard.ab2@8790>    BSR.w writeword
00024D2C <AmiBlitz3_wizzard.ab2@8791> BRA.w putalp
00024D32 <AmiBlitz3_wizzard.ab2@8795>   MOVE.w regnum,D1
00024D34 <AmiBlitz3_wizzard.ab2@8796>   LSL.w #8,D1
00024D36 <AmiBlitz3_wizzard.ab2@8797>   LSL.w #1,D1
00024D3A <AmiBlitz3_wizzard.ab2@8798>   OR.w fbase(PC),D1
00024D40 <AmiBlitz3_wizzard.ab2@8799>    TST.b varmode
00024D44 <AmiBlitz3_wizzard.ab2@8800>    BEQ 'l1
00024D48 <AmiBlitz3_wizzard.ab2@8801>    BCLR #0,d1
00024D4C <AmiBlitz3_wizzard.ab2@8804>    BSR.w writeword
00024D50 <AmiBlitz3_wizzard.ab2@8805>   MOVE.w $8(A3),D1
00024D52 <AmiBlitz3_wizzard.ab2@8806>   LSL.w #2,D1
00024D58 <AmiBlitz3_wizzard.ab2@8807>   MOVE.w varmode,D2
00024D5C <AmiBlitz3_wizzard.ab2@8808>    BEQ.w JL_0_69BE
00024D5E <AmiBlitz3_wizzard.ab2@8809>   NEG.w D1
00024D62 <AmiBlitz3_wizzard.ab2@8812>    ADD.w $4(A3),D1
00024D66 <AmiBlitz3_wizzard.ab2@8813>    BSR.w writeword
00024D6C <AmiBlitz3_wizzard.ab2@8814>   MOVE.w regnum,D1
00024D6E <AmiBlitz3_wizzard.ab2@8815>   LSL.w #8,D1
00024D70 <AmiBlitz3_wizzard.ab2@8816>   LSL.w #1,D1
00024D74 <AmiBlitz3_wizzard.ab2@8817>   MOVE.w partostack(PC),D2
00024D78 <AmiBlitz3_wizzard.ab2@8818>    BNE.w JL_0_69F4
00024D80 <AmiBlitz3_wizzard.ab2@8819>   CMPI.w #$7,regnum
00024D84 <AmiBlitz3_wizzard.ab2@8820>    BCC.w JL_0_69F4
00024D88 <AmiBlitz3_wizzard.ab2@8821>   OR.w pushlast(PC),D1
00024D8E <AmiBlitz3_wizzard.ab2@8822>   MOVE.w regnum,D2
00024D90 <AmiBlitz3_wizzard.ab2@8823>   SUBQ.w #1,D2
00024D92 <AmiBlitz3_wizzard.ab2@8824>   OR.w D2,D1
00024D96 <AmiBlitz3_wizzard.ab2@8825> BRA.w JL_0_69F8
00024D9A <AmiBlitz3_wizzard.ab2@8828>   OR.w pushadd(PC),D1
00024D9E <AmiBlitz3_wizzard.ab2@8831>   BSR.w writeword
00024DA6 <AmiBlitz3_wizzard.ab2@8832>   MOVE.b #$1,partostack
00024DAA <AmiBlitz3_wizzard.ab2@8833> BRA.w putalp
00024DAE <AmiBlitz3_wizzard.ab2@8837> fbase:       Dc.b $20,$2D,$00,$00                           ;MOVE.L  $0000(A5),D0
00024DB0 <AmiBlitz3_wizzard.ab2@8838> pushadd:     Dc.b $D0,$97                                   ;ADD.L (A7),D0
00024DB2 <AmiBlitz3_wizzard.ab2@8839> pushlast:    Dc.b $D0,$80                                   ;ADD.L D0,D0
00024DB6 <AmiBlitz3_wizzard.ab2@8844>   ANDI.w #$7,D2                                            ;0-7 (unknown to string)
00024DBA <AmiBlitz3_wizzard.ab2@8845>    BEQ.w evalu2
00024DBE <AmiBlitz3_wizzard.ab2@8846> BRA.w eval
00024DC4 <AmiBlitz3_wizzard.ab2@8850>   MOVEA.l libpointer,A1
00024DC8 <AmiBlitz3_wizzard.ab2@8853>    CMPA.w #$0,A1
00024DCC <AmiBlitz3_wizzard.ab2@8854>    BEQ.w resetlibs__done
00024DD2 <AmiBlitz3_wizzard.ab2@8855>   MOVE.w #-1,$A(A1)
00024DD8 <AmiBlitz3_wizzard.ab2@8856>   BCLR #$7,$C(A1)
00024DDA <AmiBlitz3_wizzard.ab2@8857>   MOVEA.l (A1),A1
00024DDE <AmiBlitz3_wizzard.ab2@8858> BRA.w resetlibs__loop
00024DE0 <AmiBlitz3_wizzard.ab2@8861> RTS
00024DE4 <AmiBlitz3_wizzard.ab2@8865>   MOVE.w #$FFFE,D1
00024DE8 <AmiBlitz3_wizzard.ab2@8868>    BSR.w JL_0_6F38
00024DEE <AmiBlitz3_wizzard.ab2@8871>   TST.w cfetchmode
00024DF2 <AmiBlitz3_wizzard.ab2@8872>    BEQ.w uselib3__noconst
00024DF8 <AmiBlitz3_wizzard.ab2@8873>   BTST #$6,$C(A1)
00024DFC <AmiBlitz3_wizzard.ab2@8874>    BNE.w uselib3__constok
00024E00 <AmiBlitz3_wizzard.ab2@8875> BRA.w badconerr                                            ;Can't use this Library!
00024E02 <AmiBlitz3_wizzard.ab2@8878> RTS
00024E08 <AmiBlitz3_wizzard.ab2@8881>    BSET #$7,$C(A1)
00024E0C <AmiBlitz3_wizzard.ab2@8882>    BNE.w JL_0_6C74                                         ;already done....
00024E12 <AmiBlitz3_wizzard.ab2@8883>    CMPI.w #-1,$A(A1)
00024E16 <AmiBlitz3_wizzard.ab2@8884>    BNE.w JL_0_6C74                                         ;something already here
00024E1C <AmiBlitz3_wizzard.ab2@8888>    TST.w dirmode
00024E20 <AmiBlitz3_wizzard.ab2@8889>    BEQ.b JL_0_6A86
00024E26 <AmiBlitz3_wizzard.ab2@8890>    TST.b exdebug
00024E2A <AmiBlitz3_wizzard.ab2@8891>    BEQ 'l1
00024E2E <AmiBlitz3_wizzard.ab2@8892> BRA.b JL_0_6A86
00024E34 <AmiBlitz3_wizzard.ab2@8895>   BCLR #$7,$C(A1)
00024E38 <AmiBlitz3_wizzard.ab2@8896> BRA.w dirliberr
00024E3E <AmiBlitz3_wizzard.ab2@8899>   MOVE.b debugmode,-(a7)
00024E42 <AmiBlitz3_wizzard.ab2@8900>   MOVEM.l D1/A0/A2,-(A7)
00024E4A <AmiBlitz3_wizzard.ab2@8906>   BTST #$7,use_debugger
00024E4E <AmiBlitz3_wizzard.ab2@8907>   BNE 'debugon
00024E50 <AmiBlitz3_wizzard.ab2@8908>   CLR.w D1
00024E54 <AmiBlitz3_wizzard.ab2@8909> BRA.b 'debugoff
00024E56 <AmiBlitz3_wizzard.ab2@8912>   SNE D1
00024E5C <AmiBlitz3_wizzard.ab2@8915>   MOVE.b d1,debugmode
00024E5E <AmiBlitz3_wizzard.ab2@8919>   MOVEA.l A1,A0
00024E62 <AmiBlitz3_wizzard.ab2@8920>   ADDA.l $12(A1),A0
00024E66 <AmiBlitz3_wizzard.ab2@8921>   TST.w -$2(A0)
00024E6A <AmiBlitz3_wizzard.ab2@8922>    BEQ.w JL_0_6AD2
00024E6E <AmiBlitz3_wizzard.ab2@8923>   MOVEM.l A0-A1,-(A7)
00024E72 <AmiBlitz3_wizzard.ab2@8924>   MOVE.w #$FB4F,D1
00024E76 <AmiBlitz3_wizzard.ab2@8925>    BSR.w uselib
00024E7A <AmiBlitz3_wizzard.ab2@8926>   MOVEM.l (A7)+,A0-A1
00024E80 <AmiBlitz3_wizzard.ab2@8927>   ADDQ.w #1,globalvarpointer
00024E88 <AmiBlitz3_wizzard.ab2@8928>   BCLR #$0,globalvarpointer+1
00024E90 <AmiBlitz3_wizzard.ab2@8929>   MOVE.w globalvarpointer,-$6(A0)
00024E96 <AmiBlitz3_wizzard.ab2@8930>   ADDQ.w #4,globalvarpointer
00024E9A <AmiBlitz3_wizzard.ab2@8931>   TST.l -$E(A0)
00024E9E <AmiBlitz3_wizzard.ab2@8932>    BEQ.w JL_0_6AD2
00024EA4 <AmiBlitz3_wizzard.ab2@8933>   ADDQ.w #4,globalvarpointer
00024EAC <AmiBlitz3_wizzard.ab2@8936>   MOVE.l libend,$28(A1)
00024EAE <AmiBlitz3_wizzard.ab2@8937>   MOVEA.l A1,A0
00024EB2 <AmiBlitz3_wizzard.ab2@8938>   ADDA.l $12(A1),A0
00024EB4 <AmiBlitz3_wizzard.ab2@8939>   MOVE.l A1,D1
00024EB8 <AmiBlitz3_wizzard.ab2@8940>   ADD.l $6(A1),D1
00024EBC <AmiBlitz3_wizzard.ab2@8941>   TST.l $2C(A1)
00024EC0 <AmiBlitz3_wizzard.ab2@8942>    BEQ.w JL_0_6AFE
00024EC6 <AmiBlitz3_wizzard.ab2@8944>   TST.b debugmode
00024ECA <AmiBlitz3_wizzard.ab2@8945>    BNE.w JL_0_6AFE
00024ECC <AmiBlitz3_wizzard.ab2@8946>   MOVE.l A1,D1
00024ED0 <AmiBlitz3_wizzard.ab2@8947>   ADD.l $2C(A1),D1
00024ED6 <AmiBlitz3_wizzard.ab2@8950>   MOVEA.l libend,A2
00024EDC <AmiBlitz3_wizzard.ab2@8953>   CMPA.l data1start,A2
00024EE0 <AmiBlitz3_wizzard.ab2@8954>    BCS.w JL_0_6B24
00024EE8 <AmiBlitz3_wizzard.ab2@8955>   MOVE.w #$FFFF,dontwrite
00024EEA <AmiBlitz3_wizzard.ab2@8958>   ADDQ.w #2,A0
00024EEC <AmiBlitz3_wizzard.ab2@8959>   ADDQ.w #2,A2
00024EEE <AmiBlitz3_wizzard.ab2@8960>   CMPA.l D1,A0
00024EF2 <AmiBlitz3_wizzard.ab2@8961>    BCS.w JL_0_6B16
00024EF6 <AmiBlitz3_wizzard.ab2@8962> BRA.w JL_0_6B2C
00024EF8 <AmiBlitz3_wizzard.ab2@8965>   MOVE.w (A0)+,(A2)+                                       ;copylibcode
00024EFA <AmiBlitz3_wizzard.ab2@8966>   CMPA.l D1,A0
00024EFE <AmiBlitz3_wizzard.ab2@8967>    BCS.w JL_0_6B04
00024F04 <AmiBlitz3_wizzard.ab2@8970>   MOVE.l A2,libend
00024F08 <AmiBlitz3_wizzard.ab2@8971>   MOVE.l $20(A1),D1
00024F0C <AmiBlitz3_wizzard.ab2@8972>    BEQ.w JL_0_6BB8
00024F10 <AmiBlitz3_wizzard.ab2@8973>   MOVEM.l D0/D2-D3,-(A7)
00024F14 <AmiBlitz3_wizzard.ab2@8974>   MOVEA.l $24(A1),A0
00024F16 <AmiBlitz3_wizzard.ab2@8975>   MOVEQ.l #$00,D3
00024F18 <AmiBlitz3_wizzard.ab2@8978>   MOVE.l (A0)+,D2
00024F1C <AmiBlitz3_wizzard.ab2@8979>   TST.l $2C(A1)
00024F20 <AmiBlitz3_wizzard.ab2@8980>    BEQ.w JL_0_6B60
00024F26 <AmiBlitz3_wizzard.ab2@8981>   TST.b debugmode
00024F2A <AmiBlitz3_wizzard.ab2@8982>    BNE.w JL_0_6B60
00024F2E <AmiBlitz3_wizzard.ab2@8983>   CMP.l $2C(A1),D2
00024F32 <AmiBlitz3_wizzard.ab2@8984>    BCC.w JL_0_6BA0
00024F36 <AmiBlitz3_wizzard.ab2@8987>   TST.w $0(A1,D2.L)
00024F3A <AmiBlitz3_wizzard.ab2@8988>    BPL.w JL_0_6B72
00024F3C <AmiBlitz3_wizzard.ab2@8989>   TST.l D3
00024F40 <AmiBlitz3_wizzard.ab2@8990>    BNE.w JL_0_6B72
00024F42 <AmiBlitz3_wizzard.ab2@8991>   MOVE.l A0,D0
00024F44 <AmiBlitz3_wizzard.ab2@8992>   MOVE.l D1,D3
00024F48 <AmiBlitz3_wizzard.ab2@8995>   SUB.l $12(A1),D2
00024F4C <AmiBlitz3_wizzard.ab2@8996>    BMI.w JL_0_6BA0
00024F50 <AmiBlitz3_wizzard.ab2@8997>   ADD.l $28(A1),D2
00024F52 <AmiBlitz3_wizzard.ab2@8998>   MOVE.l D2,-(A7)
00024F58 <AmiBlitz3_wizzard.ab2@8999>   SUB.l destbufferstart,D2
00024F5C <AmiBlitz3_wizzard.ab2@9000>    BSR.w addhunkoffset
00024F5E <AmiBlitz3_wizzard.ab2@9001>   MOVEA.l (A7)+,A2
00024F64 <AmiBlitz3_wizzard.ab2@9002>   TST.w dontwrite
00024F68 <AmiBlitz3_wizzard.ab2@9003>    BNE.w JL_0_6BA0
00024F6C <AmiBlitz3_wizzard.ab2@9004>   MOVE.l $28(A1),D2
00024F70 <AmiBlitz3_wizzard.ab2@9005>   SUB.l $12(A1),D2
00024F72 <AmiBlitz3_wizzard.ab2@9006>   ADD.l D2,(A2)
00024F74 <AmiBlitz3_wizzard.ab2@9009>    SUBQ.l #1,D1
00024F78 <AmiBlitz3_wizzard.ab2@9010>    BNE.w JL_0_6B44
00024F7A <AmiBlitz3_wizzard.ab2@9011>   MOVE.l D3,D2
00024F7E <AmiBlitz3_wizzard.ab2@9012>    BEQ.w JL_0_6BB4
00024F80 <AmiBlitz3_wizzard.ab2@9013>   MOVEA.l D0,A2
00024F82 <AmiBlitz3_wizzard.ab2@9014>   SUBQ.w #4,A2
00024F86 <AmiBlitz3_wizzard.ab2@9015>    BSR.w JL_0_6E34
00024F8A <AmiBlitz3_wizzard.ab2@9018>    MOVEM.l (A7)+,D0/D2-D3
00024F8E <AmiBlitz3_wizzard.ab2@9021>    MOVEM.l (A7)+,D1/A0/A2
00024F92 <AmiBlitz3_wizzard.ab2@9022>   MOVEM.l D1-D2,-(A7)
00024F96 <AmiBlitz3_wizzard.ab2@9023>   TST.w $1A(A1)
00024F9A <AmiBlitz3_wizzard.ab2@9024>    BNE.w JL_0_6BD0
00024F9E <AmiBlitz3_wizzard.ab2@9025>   CLR.w $A(A1)
00024FA2 <AmiBlitz3_wizzard.ab2@9026> BRA.w JL_0_6C5E
00024FA8 <AmiBlitz3_wizzard.ab2@9029>   ADDQ.w #1,globalvarpointer
00024FB0 <AmiBlitz3_wizzard.ab2@9030>   BCLR #$0,globalvarpointer+1
00024FB8 <AmiBlitz3_wizzard.ab2@9031>   MOVE.w globalvarpointer,$A(A1)
00024FBC <AmiBlitz3_wizzard.ab2@9032>   CMP.w #-$12D,D1
00024FC0 <AmiBlitz3_wizzard.ab2@9033>    BNE.w JL_0_6C16
00024FC8 <AmiBlitz3_wizzard.ab2@9034>   MOVE.w $A(A1),movestdn+2
00024FD0 <AmiBlitz3_wizzard.ab2@9035>   MOVE.w $A(A1),pusha3+2
00024FD8 <AmiBlitz3_wizzard.ab2@9036>   MOVE.w $A(A1),pusha32+2
00024FE0 <AmiBlitz3_wizzard.ab2@9037>   MOVE.w $A(A1),pulla3+2
00024FE8 <AmiBlitz3_wizzard.ab2@9038>   MOVE.w $A(A1),geta3+2
00024FEC <AmiBlitz3_wizzard.ab2@9041>    CMP.w #-$3E9,D1
00024FF0 <AmiBlitz3_wizzard.ab2@9042>    BNE.w JL_0_6C3E
00024FF8 <AmiBlitz3_wizzard.ab2@9043>   MOVE.w $A(A1),dataget+2
00025000 <AmiBlitz3_wizzard.ab2@9044>   MOVE.w $A(A1),dataput+2
00025008 <AmiBlitz3_wizzard.ab2@9045>   MOVE.w $A(A1),rescode+6
00025010 <AmiBlitz3_wizzard.ab2@9046>   MOVE.w $A(A1),rescode2+2
00025016 <AmiBlitz3_wizzard.ab2@9049>   ADDQ.w #2,globalvarpointer
0002501A <AmiBlitz3_wizzard.ab2@9050>   TST.w $1A(A1)
0002501E <AmiBlitz3_wizzard.ab2@9051>    BMI.w JL_0_6C52
00025024 <AmiBlitz3_wizzard.ab2@9052>   ADDQ.w #2,globalvarpointer
00025028 <AmiBlitz3_wizzard.ab2@9055>   MOVEM.l D1/A1,-(A7)
0002502C <AmiBlitz3_wizzard.ab2@9056>   BSR.w uselib2
00025030 <AmiBlitz3_wizzard.ab2@9057>   MOVEM.l (A7)+,D1/A1
00025032 <AmiBlitz3_wizzard.ab2@9060>   MOVE.w D1,D2
00025036 <AmiBlitz3_wizzard.ab2@9061>   MOVE.l $16(A1),D1
0002503A <AmiBlitz3_wizzard.ab2@9062>    BSR.w uselib2_org
0002503E <AmiBlitz3_wizzard.ab2@9063>   MOVE.l $1C(A1),D1
00025042 <AmiBlitz3_wizzard.ab2@9064>    BSR.w uselib2_org
00025046 <AmiBlitz3_wizzard.ab2@9065>   MOVEM.l (A7)+,D1-D2
0002504C <AmiBlitz3_wizzard.ab2@9067>   MOVE.b (a7)+,debugmode
0002504E <AmiBlitz3_wizzard.ab2@9070> RTS
00025050 <AmiBlitz3_wizzard.ab2@9074>   MOVEQ.l #$00,D2
00025056 <AmiBlitz3_wizzard.ab2@9077>   MOVEA.l tokeslist,A2
00025058 <AmiBlitz3_wizzard.ab2@9078>   CMPA.l D2,A2
0002505C <AmiBlitz3_wizzard.ab2@9079>    BEQ.w JL_0_6CE0
0002505E <AmiBlitz3_wizzard.ab2@9080>   MOVE.l A2,-(A7)
00025060 <AmiBlitz3_wizzard.ab2@9083>   MOVEQ.l #$00,D3
00025064 <AmiBlitz3_wizzard.ab2@9086>   MOVEA.l $8(A2),A3
00025066 <AmiBlitz3_wizzard.ab2@9087>   CMPA.l D3,A3
0002506A <AmiBlitz3_wizzard.ab2@9088>    BEQ.w JL_0_6CD2
0002506C <AmiBlitz3_wizzard.ab2@9089>   MOVE.l A3,-(A7)
00025070 <AmiBlitz3_wizzard.ab2@9090>   MOVEM.l D2-D3/A2-A3,-(A7)
00025074 <AmiBlitz3_wizzard.ab2@9091>   MOVE.w $4(A2),D1
00025078 <AmiBlitz3_wizzard.ab2@9092>   MOVE.w $6(A2),D2
0002507C <AmiBlitz3_wizzard.ab2@9093>    BSR.w JL_0_6CE2
00025080 <AmiBlitz3_wizzard.ab2@9094>   MOVEM.l (A7)+,D2-D3/A2-A3
00025086 <AmiBlitz3_wizzard.ab2@9095>   MOVE.w dontwrite,D0
0002508A <AmiBlitz3_wizzard.ab2@9096>    BEQ.w JL_0_6CBE
0002508C <AmiBlitz3_wizzard.ab2@9099>   MOVEA.l (A3),A3
0002508E <AmiBlitz3_wizzard.ab2@9100>   CMPA.l D3,A3
00025092 <AmiBlitz3_wizzard.ab2@9101>    BNE.w JL_0_6CB2
00025096 <AmiBlitz3_wizzard.ab2@9102> BRA.w JL_0_6CCC
0002509A <AmiBlitz3_wizzard.ab2@9105>   MOVEA.l $4(A3),A0
0002509C <AmiBlitz3_wizzard.ab2@9106>   MOVE.l D7,(A0)
0002509E <AmiBlitz3_wizzard.ab2@9107>   MOVEA.l (A3),A3
000250A0 <AmiBlitz3_wizzard.ab2@9108>   CMPA.l D3,A3
000250A4 <AmiBlitz3_wizzard.ab2@9109>    BNE.w JL_0_6CBE
000250A6 <AmiBlitz3_wizzard.ab2@9112>   MOVE.l (A7)+,D3
000250AA <AmiBlitz3_wizzard.ab2@9113> BRA.w JL_0_6C88
000250AC <AmiBlitz3_wizzard.ab2@9116>    MOVEA.l (A2),A2
000250AE <AmiBlitz3_wizzard.ab2@9117>   CMPA.l D2,A2
000250B2 <AmiBlitz3_wizzard.ab2@9118>    BNE.w JL_0_6C86
000250B4 <AmiBlitz3_wizzard.ab2@9119>   MOVE.l (A7)+,D2
000250B8 <AmiBlitz3_wizzard.ab2@9120> BRA.w JL_0_6C78
000250BA <AmiBlitz3_wizzard.ab2@9123> RTS
000250BC <AmiBlitz3_wizzard.ab2@9127>   MOVE.w D2,-(A7)
000250C0 <AmiBlitz3_wizzard.ab2@9128>    BSR.w searchinstr
000250C2 <AmiBlitz3_wizzard.ab2@9129>   MOVE.w (A7)+,D2
000250CA <AmiBlitz3_wizzard.ab2@9130>   BCLR #$7,blitzmode
000250CE <AmiBlitz3_wizzard.ab2@9131>   BCLR #$E,D2
000250D2 <AmiBlitz3_wizzard.ab2@9132>    BEQ.w JL_0_6D02
000250DA <AmiBlitz3_wizzard.ab2@9133>   BSET #$7,blitzmode
000250DC <AmiBlitz3_wizzard.ab2@9136>   TST.w (A3)
000250E0 <AmiBlitz3_wizzard.ab2@9137>    BEQ.w JL_0_6DAC
000250E6 <AmiBlitz3_wizzard.ab2@9138>   BTST #$2,$1(A3)
000250EA <AmiBlitz3_wizzard.ab2@9139>    BNE.w tokeerr
000250F0 <AmiBlitz3_wizzard.ab2@9140>   BTST #$3,$1(A3)
000250F4 <AmiBlitz3_wizzard.ab2@9141>    BNE.w tokeerr
000250F8 <AmiBlitz3_wizzard.ab2@9142>   LEA $6(A3),A3
000250FA <AmiBlitz3_wizzard.ab2@9145>   MOVE.w (A3)+,D0
000250FE <AmiBlitz3_wizzard.ab2@9146>    BMI.w tokeerr
00025102 <AmiBlitz3_wizzard.ab2@9147>   ANDI.w #$FF,D0
00025104 <AmiBlitz3_wizzard.ab2@9148>   ADDA.w D0,A3
00025106 <AmiBlitz3_wizzard.ab2@9149>   ADDQ.w #1,A3
00025108 <AmiBlitz3_wizzard.ab2@9150>   EXG.l D0,A3
0002510C <AmiBlitz3_wizzard.ab2@9151>   BCLR #$0,D0
0002510E <AmiBlitz3_wizzard.ab2@9152>   EXG.l D0,A3
00025110 <AmiBlitz3_wizzard.ab2@9153>   SUBQ.w #1,D2
00025114 <AmiBlitz3_wizzard.ab2@9154>    BPL.w JL_0_6D98
00025116 <AmiBlitz3_wizzard.ab2@9155>   TST.w (A3)
0002511A <AmiBlitz3_wizzard.ab2@9156>    BNE.w JL_0_6D76
0002511E <AmiBlitz3_wizzard.ab2@9157>   MOVE.l $2(A3),D0
00025122 <AmiBlitz3_wizzard.ab2@9158>   OR.l $A(A3),D0
00025126 <AmiBlitz3_wizzard.ab2@9159>    BNE.w JL_0_6D76
0002512C <AmiBlitz3_wizzard.ab2@9160>   BTST #$0,$9(A3)
00025130 <AmiBlitz3_wizzard.ab2@9161>    BNE.w JL_0_6D76
00025134 <AmiBlitz3_wizzard.ab2@9162>   MOVE.l $6(A3),D7
00025138 <AmiBlitz3_wizzard.ab2@9163>   MOVE.w $0(A2,D7.L),D0
0002513C <AmiBlitz3_wizzard.ab2@9164>   ANDI.w #$F000,D0
00025140 <AmiBlitz3_wizzard.ab2@9165>   CMP.w #-$6000,D0
00025144 <AmiBlitz3_wizzard.ab2@9166>    BEQ.w JL_0_6D76
00025148 <AmiBlitz3_wizzard.ab2@9169>   SUB.l $12(A2),D7
0002514C <AmiBlitz3_wizzard.ab2@9170>   ADD.l $28(A2),D7
0002514E <AmiBlitz3_wizzard.ab2@9171> RTS
00025154 <AmiBlitz3_wizzard.ab2@9175>   LEA cutejsr,A0
0002515A <AmiBlitz3_wizzard.ab2@9178>   MOVE.l destpointer,-(A7)
00025162 <AmiBlitz3_wizzard.ab2@9179>   MOVE.w #$FFFF,lasta6
00025164 <AmiBlitz3_wizzard.ab2@9182>    JSR (A0)
00025168 <AmiBlitz3_wizzard.ab2@9183>   MOVE.w #$4E75,D1
0002516C <AmiBlitz3_wizzard.ab2@9184>    BSR.w writeword
0002516E <AmiBlitz3_wizzard.ab2@9185>   MOVE.l (A7)+,D7
00025170 <AmiBlitz3_wizzard.ab2@9186> RTS
00025172 <AmiBlitz3_wizzard.ab2@9190>   TST.w (A3)+
00025176 <AmiBlitz3_wizzard.ab2@9191>    BEQ.w JL_0_6DA4
00025178 <AmiBlitz3_wizzard.ab2@9192>   ADDQ.w #2,A3
0002517C <AmiBlitz3_wizzard.ab2@9193> BRA.w JL_0_6D98
00025180 <AmiBlitz3_wizzard.ab2@9196>   LEA $C(A3),A3
00025184 <AmiBlitz3_wizzard.ab2@9197> BRA.w JL_0_6D20
00025186 <AmiBlitz3_wizzard.ab2@9201>   TST.w D2
0002518A <AmiBlitz3_wizzard.ab2@9202>    BNE.w tokeerr
0002518E <AmiBlitz3_wizzard.ab2@9203>   TST.w $6(A3)
00025192 <AmiBlitz3_wizzard.ab2@9204>    BNE.w JL_0_6DE4
00025196 <AmiBlitz3_wizzard.ab2@9205>   MOVE.l $8(A3),D0
0002519A <AmiBlitz3_wizzard.ab2@9206>   OR.l $10(A3),D0
0002519E <AmiBlitz3_wizzard.ab2@9207>    BNE.w JL_0_6DE4
000251A4 <AmiBlitz3_wizzard.ab2@9208>   BTST #$0,$F(A3)
000251A8 <AmiBlitz3_wizzard.ab2@9209>    BNE.w JL_0_6DE4
000251AC <AmiBlitz3_wizzard.ab2@9210>   MOVE.l $C(A3),D7
000251B0 <AmiBlitz3_wizzard.ab2@9211>   MOVE.w $0(A2,D7.L),D0
000251B4 <AmiBlitz3_wizzard.ab2@9212>   ANDI.w #$F000,D0
000251B8 <AmiBlitz3_wizzard.ab2@9213>   CMP.w #-$6000,D0
000251BC <AmiBlitz3_wizzard.ab2@9214>    BNE.w JL_0_6D6C
000251BE <AmiBlitz3_wizzard.ab2@9217>   MOVE.l A3,D1
000251C0 <AmiBlitz3_wizzard.ab2@9218>   SUB.l A2,D1
000251C6 <AmiBlitz3_wizzard.ab2@9219>   LEA Amakelibsub,A0
000251CA <AmiBlitz3_wizzard.ab2@9220> BRA.w JL_0_6D7C
000251D0 <AmiBlitz3_wizzard.ab2@9224>   MOVEA.l _execbase,A6
000251D6 <AmiBlitz3_wizzard.ab2@9225>   MOVEA.l tokeslist,A2
000251DC <AmiBlitz3_wizzard.ab2@9226>   CLR.l tokeslist
000251E0 <AmiBlitz3_wizzard.ab2@9229>     CMPA.w #$0,A2
000251E4 <AmiBlitz3_wizzard.ab2@9230>      BEQ.w JL_0_6E32
000251E8 <AmiBlitz3_wizzard.ab2@9231>     MOVEA.l $8(A2),A3
000251EC <AmiBlitz3_wizzard.ab2@9234>       CMPA.w #$0,A3
000251F0 <AmiBlitz3_wizzard.ab2@9235>        BEQ.w JL_0_6E24
000251F2 <AmiBlitz3_wizzard.ab2@9236>       MOVEA.l A3,A1
000251F4 <AmiBlitz3_wizzard.ab2@9237>       MOVEA.l (A3),A3
000251F6 <AmiBlitz3_wizzard.ab2@9238>       MOVEQ.l #$08,D0
000251FC <AmiBlitz3_wizzard.ab2@9239>       MOVE.l mempool,a0
00025202 <AmiBlitz3_wizzard.ab2@9240>       MOVEA.l _execbase,A6
00025206 <AmiBlitz3_wizzard.ab2@9241>       JSR _FreePooled(A6)
0002520A <AmiBlitz3_wizzard.ab2@9242> BRA.w JL_0_6E0E
0002520C <AmiBlitz3_wizzard.ab2@9245>     MOVEA.l A2,A1
0002520E <AmiBlitz3_wizzard.ab2@9246>     MOVEA.l (A2),A2
00025210 <AmiBlitz3_wizzard.ab2@9247>     MOVEQ.l #$0C,D0
00025216 <AmiBlitz3_wizzard.ab2@9248>     MOVE.l mempool,a0
0002521C <AmiBlitz3_wizzard.ab2@9249>     MOVEA.l _execbase,A6
00025220 <AmiBlitz3_wizzard.ab2@9250>     JSR _FreePooled(A6)
00025224 <AmiBlitz3_wizzard.ab2@9251> BRA.w JL_0_6E02
00025226 <AmiBlitz3_wizzard.ab2@9254> RTS
0002522A <AmiBlitz3_wizzard.ab2@9258>   MOVEM.l D3-D5/A1-A6,-(A7)
0002522C <AmiBlitz3_wizzard.ab2@9259>   MOVEA.l A1,A4
0002522E <AmiBlitz3_wizzard.ab2@9262>   MOVE.l (A2)+,D3
00025232 <AmiBlitz3_wizzard.ab2@9263>   MOVE.w $0(A4,D3.L),D5
00025236 <AmiBlitz3_wizzard.ab2@9264>    BPL.w JL_0_6E7A
0002523A <AmiBlitz3_wizzard.ab2@9265>   TST.l $2C(A4)
0002523E <AmiBlitz3_wizzard.ab2@9266>    BEQ.w JL_0_6E5E
00025244 <AmiBlitz3_wizzard.ab2@9267>   TST.b debugmode
00025248 <AmiBlitz3_wizzard.ab2@9268>    BNE.w JL_0_6E5E
0002524C <AmiBlitz3_wizzard.ab2@9269>   CMP.l $2C(A4),D3
00025250 <AmiBlitz3_wizzard.ab2@9270>    BCC.w JL_0_6E7A
00025254 <AmiBlitz3_wizzard.ab2@9273>   BCLR #$F,D5
00025258 <AmiBlitz3_wizzard.ab2@9274>   MOVE.w $2(A4,D3.L),D4
0002525C <AmiBlitz3_wizzard.ab2@9275>   SUB.l $12(A4),D3
00025260 <AmiBlitz3_wizzard.ab2@9276>   ADD.l $28(A4),D3
00025264 <AmiBlitz3_wizzard.ab2@9277>   MOVEM.l D2/A2/A4,-(A7)
00025268 <AmiBlitz3_wizzard.ab2@9278>    BSR.w JL_0_6E86
0002526C <AmiBlitz3_wizzard.ab2@9279>   MOVEM.l (A7)+,D2/A2/A4
0002526E <AmiBlitz3_wizzard.ab2@9282>   SUBQ.l #1,D2
00025272 <AmiBlitz3_wizzard.ab2@9283>    BNE.w JL_0_6E3A
00025276 <AmiBlitz3_wizzard.ab2@9284>   MOVEM.l (A7)+,D3-D5/A1-A6
00025278 <AmiBlitz3_wizzard.ab2@9285> RTS
0002527E <AmiBlitz3_wizzard.ab2@9289>   LEA tokeslist,A3
00025284 <AmiBlitz3_wizzard.ab2@9290>   MOVEA.l _execbase,A6
00025286 <AmiBlitz3_wizzard.ab2@9293>   MOVE.l (A3),D0
0002528A <AmiBlitz3_wizzard.ab2@9294>    BEQ.w JL_0_6EAC
0002528C <AmiBlitz3_wizzard.ab2@9295>   MOVEA.l D0,A3
00025290 <AmiBlitz3_wizzard.ab2@9296>   CMP.w $4(A3),D4
00025294 <AmiBlitz3_wizzard.ab2@9297>    BNE.w JL_0_6E90
00025298 <AmiBlitz3_wizzard.ab2@9298>   CMP.w $6(A3),D5
0002529C <AmiBlitz3_wizzard.ab2@9299>    BNE.w JL_0_6E90
000252A0 <AmiBlitz3_wizzard.ab2@9300> BRA.w JL_0_6ED0
000252A2 <AmiBlitz3_wizzard.ab2@9303>   MOVEQ.l #$0C,D0
000252A4 <AmiBlitz3_wizzard.ab2@9304>   MOVEQ.l #$01,D1
000252AA <AmiBlitz3_wizzard.ab2@9305>   MOVE.l mempool,a0
000252AE <AmiBlitz3_wizzard.ab2@9306>   JSR _AllocPooled(a6)
000252B0 <AmiBlitz3_wizzard.ab2@9308>   MOVEA.l D0,A3
000252B6 <AmiBlitz3_wizzard.ab2@9309>   MOVE.l tokeslist,(A3)
000252BC <AmiBlitz3_wizzard.ab2@9310>   MOVE.l A3,tokeslist
000252C0 <AmiBlitz3_wizzard.ab2@9311>   MOVE.w D4,$4(A3)
000252C4 <AmiBlitz3_wizzard.ab2@9312>   MOVE.w D5,$6(A3)
000252C8 <AmiBlitz3_wizzard.ab2@9313>   CLR.l $8(A3)
000252CA <AmiBlitz3_wizzard.ab2@9316>   MOVEQ.l #$08,D0
000252CC <AmiBlitz3_wizzard.ab2@9317>   MOVEQ.l #$01,D1
000252D2 <AmiBlitz3_wizzard.ab2@9318>   MOVE.l mempool,a0
000252D6 <AmiBlitz3_wizzard.ab2@9319>   JSR _AllocPooled(a6)
000252D8 <AmiBlitz3_wizzard.ab2@9321>   MOVEA.l D0,A0
000252DC <AmiBlitz3_wizzard.ab2@9322>   MOVE.l D3,$4(A0)
000252E0 <AmiBlitz3_wizzard.ab2@9323>   MOVE.l $8(A3),(A0)
000252E4 <AmiBlitz3_wizzard.ab2@9324>   MOVE.l A0,$8(A3)
000252E6 <AmiBlitz3_wizzard.ab2@9325>   MOVE.w D4,D1
000252EA <AmiBlitz3_wizzard.ab2@9326> BRA.w searchinstr
000252EE <AmiBlitz3_wizzard.ab2@9329> tokeslist: Ds.l 1
000252F2 <AmiBlitz3_wizzard.ab2@9342>   BEQ.w uselib2_org__skip
000252F4 <AmiBlitz3_wizzard.ab2@9343>   MOVE.l A1,-(A7)
000252F6 <AmiBlitz3_wizzard.ab2@9344>   ADDA.l D1,A1
000252F8 <AmiBlitz3_wizzard.ab2@9345>   ADDQ.w #6,A1
000252FA <AmiBlitz3_wizzard.ab2@9348>     MOVE.w (A1)+,D1
000252FE <AmiBlitz3_wizzard.ab2@9349>     BEQ.w uselib2_org__done
00025300 <AmiBlitz3_wizzard.ab2@9350>     CMP.w D2,D1
00025304 <AmiBlitz3_wizzard.ab2@9351>     BEQ.w uselib2_org__skip2
00025306 <AmiBlitz3_wizzard.ab2@9352>     MOVE.l A1,-(A7)
0002530A <AmiBlitz3_wizzard.ab2@9353>     BSR.w uselib
0002530C <AmiBlitz3_wizzard.ab2@9354>     MOVEA.l (A7)+,A1
0002530E <AmiBlitz3_wizzard.ab2@9357>     ADDQ.w #2,A1
00025312 <AmiBlitz3_wizzard.ab2@9358> BRA.w uselib2_org__loop
00025314 <AmiBlitz3_wizzard.ab2@9361>   MOVEA.l (A7)+,A1
00025316 <AmiBlitz3_wizzard.ab2@9364> RTS
0002531C <AmiBlitz3_wizzard.ab2@9368>   MOVEA.l libpointer,A1
00025320 <AmiBlitz3_wizzard.ab2@9371>   CMPA.w #$0,A1
00025324 <AmiBlitz3_wizzard.ab2@9372>    BEQ.b JL_0_6F36
00025328 <AmiBlitz3_wizzard.ab2@9373>   CMP.w $4(A1),D1
0002532C <AmiBlitz3_wizzard.ab2@9374>    BEQ.w JL_0_6F34
0002532E <AmiBlitz3_wizzard.ab2@9375>   MOVEA.l (A1),A1
00025332 <AmiBlitz3_wizzard.ab2@9376> BRA.w JL_0_6F20
00025334 <AmiBlitz3_wizzard.ab2@9379>   MOVEQ.l #-$01,D1
00025336 <AmiBlitz3_wizzard.ab2@9382> RTS
0002533A <AmiBlitz3_wizzard.ab2@9386>   MOVEM.l d0/a2,-(a7)
0002533C <AmiBlitz3_wizzard.ab2@9387>   MOVEQ #0,d0
00025342 <AmiBlitz3_wizzard.ab2@9388>   LEA instrtab+4,a2
00025344 <AmiBlitz3_wizzard.ab2@9389>   MOVE.w d1,d0
00025346 <AmiBlitz3_wizzard.ab2@9390>   ASL.l #3,d0
0002534A <AmiBlitz3_wizzard.ab2@9391>   MOVE.l 0(a2,d0.l),a1                                     ;*8
00025350 <AmiBlitz3_wizzard.ab2@9392>   CMP.l #0,a1
00025354 <AmiBlitz3_wizzard.ab2@9393>   BNE JL_0_6F54b
0002535A <AmiBlitz3_wizzard.ab2@9395>   MOVEA.l libpointer,A1
0002535E <AmiBlitz3_wizzard.ab2@9398>     CMPA.w #$0,A1
00025362 <AmiBlitz3_wizzard.ab2@9399>     BEQ.w noliberr
00025366 <AmiBlitz3_wizzard.ab2@9400>     CMP.w $4(A1),D1
0002536A <AmiBlitz3_wizzard.ab2@9401>     BEQ.w JL_0_6F54
0002536C <AmiBlitz3_wizzard.ab2@9402>    MOVEA.l (A1),A1
00025370 <AmiBlitz3_wizzard.ab2@9403> BRA.w JL_0_6F3E
00025374 <AmiBlitz3_wizzard.ab2@9406>   MOVE.l a1,0(a2,d0.l)
00025378 <AmiBlitz3_wizzard.ab2@9409>   MOVEM.l (a7)+,d0/a2
0002537A <AmiBlitz3_wizzard.ab2@9410> RTS
0002537E <AmiBlitz3_wizzard.ab2@9413>   MOVEM.l d0-d1/a1,-(a7)
00025380 <AmiBlitz3_wizzard.ab2@9414>   MOVEQ #0,d0
00025386 <AmiBlitz3_wizzard.ab2@9415>   LEA instrtab,a1
00025388 <AmiBlitz3_wizzard.ab2@9416>   MOVE.w d1,d0
0002538A <AmiBlitz3_wizzard.ab2@9417>   ASL.l #3,d0
0002538E <AmiBlitz3_wizzard.ab2@9418>   MOVE.l 0(a1,d0.l),a3
00025392 <AmiBlitz3_wizzard.ab2@9419>   MOVE.l 4(a1,d0.l),a2
00025398 <AmiBlitz3_wizzard.ab2@9420>   CMP.l #0,a3
0002539C <AmiBlitz3_wizzard.ab2@9421>   BNE JL_0_6F92b
000253A2 <AmiBlitz3_wizzard.ab2@9423>   MOVEA.l libpointer,A2
000253A6 <AmiBlitz3_wizzard.ab2@9426>   CMPA.w #$0,A2
000253AA <AmiBlitz3_wizzard.ab2@9427>   BEQ.w notokerr
000253AE <AmiBlitz3_wizzard.ab2@9428>   CMP.w $E(A2),D1
000253B2 <AmiBlitz3_wizzard.ab2@9429>   BCS.w JL_0_6FB8
000253B6 <AmiBlitz3_wizzard.ab2@9430>   CMP.w $10(A2),D1
000253BA <AmiBlitz3_wizzard.ab2@9431>   BCC.w JL_0_6FB8
000253BE <AmiBlitz3_wizzard.ab2@9432>   LEA $30(A2),A3
000253C2 <AmiBlitz3_wizzard.ab2@9433>   TST.w $4(A2)
000253C6 <AmiBlitz3_wizzard.ab2@9434>   BPL.w JL_0_6FA6
000253CA <AmiBlitz3_wizzard.ab2@9437>     CMP.w $E(A2),D1
000253CE <AmiBlitz3_wizzard.ab2@9438>     BEQ.w JL_0_6F92
000253D0 <AmiBlitz3_wizzard.ab2@9439>     SUBQ.w #1,D1
000253D4 <AmiBlitz3_wizzard.ab2@9440>     MOVEA.l $2(A3),A3
000253D8 <AmiBlitz3_wizzard.ab2@9441> BRA.w JL_0_6F80
000253DC <AmiBlitz3_wizzard.ab2@9444>   MOVE.l a3,0(a1,d0.l)
000253E0 <AmiBlitz3_wizzard.ab2@9445>   MOVE.l a2,4(a1,d0.l)
000253E4 <AmiBlitz3_wizzard.ab2@9448>   MOVEM.l (a7)+,d0-d1/a1
000253E8 <AmiBlitz3_wizzard.ab2@9449>   MOVEM.l D1/A1-a3,-(A7)
000253EC <AmiBlitz3_wizzard.ab2@9450>   CMP.w #1,(a3)
000253F0 <AmiBlitz3_wizzard.ab2@9451>   BNE.s ex10
000253F8 <AmiBlitz3_wizzard.ab2@9452>   CMP.l #$12345678,$e(a3)
000253FC <AmiBlitz3_wizzard.ab2@9453>   BNE.s ex10
00025402 <AmiBlitz3_wizzard.ab2@9454>   CMP.w #$ffff,$16(a3)
00025406 <AmiBlitz3_wizzard.ab2@9455>   BNE.s ex10
0002540A <AmiBlitz3_wizzard.ab2@9456>   MOVE.l $12(a3),d1
0002540E <AmiBlitz3_wizzard.ab2@9457>   BEQ.s ex10
00025414 <AmiBlitz3_wizzard.ab2@9458>   LEA pluginbase,a3
00025418 <AmiBlitz3_wizzard.ab2@9460> JMP 0(a2,d1.l)                                             ;plugin
0002541C <AmiBlitz3_wizzard.ab2@9463>   MOVEM.l (A7)+,D1/A1-a3
00025422 <AmiBlitz3_wizzard.ab2@9464>   JSR stripspaces
00025424 <AmiBlitz3_wizzard.ab2@9465>   MOVEQ #0,d0
00025426 <AmiBlitz3_wizzard.ab2@9466>   MOVE.b (a5)+,d0
0002542C <AmiBlitz3_wizzard.ab2@9467>   MOVE.w d0,lastchar
0002542E <AmiBlitz3_wizzard.ab2@9468>   ADDQ.l #4,a7
00025430 <AmiBlitz3_wizzard.ab2@9469> RTS
00025432 <AmiBlitz3_wizzard.ab2@9473>   MOVEA.l A2,A1
00025438 <AmiBlitz3_wizzard.ab2@9474>   CLR.b newmode
0002543C <AmiBlitz3_wizzard.ab2@9475>   MOVE.w $4(A1),D1
00025440 <AmiBlitz3_wizzard.ab2@9478>   BSR.w uselib3
00025444 <AmiBlitz3_wizzard.ab2@9479>   MOVEM.l (A7)+,D1/A1-a3
00025446 <AmiBlitz3_wizzard.ab2@9480> RTS
0002544C <AmiBlitz3_wizzard.ab2@9483>   MOVE.w globalvarpointer,-(a7)
00025454 <AmiBlitz3_wizzard.ab2@9484>   MOVE.w #$8004,globalvarpointer
00025458 <AmiBlitz3_wizzard.ab2@9485>   BSR.w uselib3
0002545E <AmiBlitz3_wizzard.ab2@9486>   MOVE.w (a7)+,globalvarpointer
00025462 <AmiBlitz3_wizzard.ab2@9487>   MOVEM.l (A7)+,D1/A1-a3
00025464 <AmiBlitz3_wizzard.ab2@9488> RTS
00025468 <AmiBlitz3_wizzard.ab2@9491>     CMP.w $E(A2),D1
0002546C <AmiBlitz3_wizzard.ab2@9492>     BEQ.w JL_0_6F92
0002546E <AmiBlitz3_wizzard.ab2@9493>     SUBQ.w #1,D1
00025472 <AmiBlitz3_wizzard.ab2@9494>     MOVEA.l $2(A3),A3
00025476 <AmiBlitz3_wizzard.ab2@9495> BRA.w JL_0_6FA6
00025478 <AmiBlitz3_wizzard.ab2@9498>   MOVEA.l (A2),A2
0002547C <AmiBlitz3_wizzard.ab2@9499> BRA.w JL_0_6F5C
00025482 <AmiBlitz3_wizzard.ab2@9502> JMP writeword
00025486 <AmiBlitz3_wizzard.ab2@9505> ptr_acidlibs:   Ds.l 1                                     ;deflibsat org source
0002548A <AmiBlitz3_wizzard.ab2@9506> ptr_deflibs:    Ds.l 1                                     ;acidlibsat org source
0002548E <AmiBlitz3_wizzard.ab2@9507> ptr_userlibs:   Ds.l 1                                     ;blitzlibsat org source  ;;start of blitzlibs list!
00025490 <AmiBlitz3_wizzard.ab2@9513>   TST.l D0
00025494 <AmiBlitz3_wizzard.ab2@9514>   BEQ.w exit_loadlibsfile
00025496 <AmiBlitz3_wizzard.ab2@9515>     MOVE.l D0,D6                                           ;d6=len
0002549C <AmiBlitz3_wizzard.ab2@9516>     MOVEA.l _dosbase,A6
000254A2 <AmiBlitz3_wizzard.ab2@9517>     MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
000254A6 <AmiBlitz3_wizzard.ab2@9518>     JSR _Open(A6)
000254A8 <AmiBlitz3_wizzard.ab2@9519>     MOVE.l D0,D7
000254AC <AmiBlitz3_wizzard.ab2@9520>     BEQ.w exit_loadlibsfile
000254AE <AmiBlitz3_wizzard.ab2@9521>       MOVE.l D6,D0
000254B0 <AmiBlitz3_wizzard.ab2@9522>       MOVEQ.l #$01,D1
000254B6 <AmiBlitz3_wizzard.ab2@9523>       MOVEA.l _execbase,A6
000254BC <AmiBlitz3_wizzard.ab2@9524>       MOVE.l mempool,a0
000254C0 <AmiBlitz3_wizzard.ab2@9525>       JSR _AllocPooled(a6)
000254C2 <AmiBlitz3_wizzard.ab2@9526>       MOVE.l D0,D5                                         ;start address
000254C4 <AmiBlitz3_wizzard.ab2@9528>       MOVE.l D7,D1                                         ; handle
000254C6 <AmiBlitz3_wizzard.ab2@9529>       MOVE.l D5,D2                                         ; buffer addr
000254C8 <AmiBlitz3_wizzard.ab2@9530>       MOVE.l D6,D3                                         ; size
000254CE <AmiBlitz3_wizzard.ab2@9531>       MOVEA.l _dosbase,A6
000254D2 <AmiBlitz3_wizzard.ab2@9532>       JSR _Read(A6)
000254D4 <AmiBlitz3_wizzard.ab2@9533>       MOVE.l D7,D1
000254D8 <AmiBlitz3_wizzard.ab2@9534>       JSR _Close(A6)
000254DA <AmiBlitz3_wizzard.ab2@9536>       MOVEA.l D5,A0                                        ; buffer addr
000254DC <AmiBlitz3_wizzard.ab2@9542>         MOVE.l (A0)+,D0                                    ; naechster Longwert nach DO
000254E0 <AmiBlitz3_wizzard.ab2@9543>         BEQ.b JL_0_7044                                    ; wenn <> 0, dann
000254E4 <AmiBlitz3_wizzard.ab2@9544>           LEA $20(A0),A1                                   ;   lade inhalt von D0+40bytes nach A1
000254E6 <AmiBlitz3_wizzard.ab2@9545>           MOVE.l A1,(A3)                                   ;   kopiere Adresse in A1 zum libpointer
000254E8 <AmiBlitz3_wizzard.ab2@9546>           MOVEA.l A1,A3                                    ;   kopiere A1 nach A3
000254EA <AmiBlitz3_wizzard.ab2@9547>           ADDA.l D0,A0                                     ;   addiere inhalt von D0 zu A0 hinzu
000254EE <AmiBlitz3_wizzard.ab2@9548>           MOVE.l -$4(A1),D0                                ;   hole die 4bytes vor nach D0
000254F0 <AmiBlitz3_wizzard.ab2@9549>           ADD.l D0,D0                                      ;   verdoppele D0
000254F2 <AmiBlitz3_wizzard.ab2@9550>           ADD.l D0,D0                                      ;   verdoppele D0 nochmal
000254F6 <AmiBlitz3_wizzard.ab2@9551>           MOVE.l D0,$6(A1)                                 ;   schreibe D0 6bytes nach A1
000254FA <AmiBlitz3_wizzard.ab2@9552>           CLR.l $20(A1)                                    ;   loesche D0+40bytes
000254FE <AmiBlitz3_wizzard.ab2@9553>           LEA $C(A1,D0.L),A2                               ;   lade inhalt von (A1)+D0+$C nach A2
00025500 <AmiBlitz3_wizzard.ab2@9554>           CMPA.l A0,A2
00025504 <AmiBlitz3_wizzard.ab2@9555>           BCC.b JL_0_7010                                  ; wenn A0=>A2
0002550A <AmiBlitz3_wizzard.ab2@9556>             MOVE.l -$8(A2),$20(A1)                         ;
0002550E <AmiBlitz3_wizzard.ab2@9557>             MOVE.l A2,$24(A1)                              ;
00025512 <AmiBlitz3_wizzard.ab2@9558> BRA.w JL_0_7010
00025514 <AmiBlitz3_wizzard.ab2@9561>       MOVE.l D5,D0
00025516 <AmiBlitz3_wizzard.ab2@9564> RTS
00025540 <AmiBlitz3_wizzard.ab2@9568>   !basic
000255B4 <AmiBlitz3_wizzard.ab2@9569>    tempmapping$ = dos_AddPart{my_systemdir$,"token_mapping_userlibs.txt"}
000255E8 <AmiBlitz3_wizzard.ab2@9570>    dos_Delete{tempmapping$}
0002562C <AmiBlitz3_wizzard.ab2@9571>    fid.l = file_Open{tempmapping$,#file_forcewrite}
0002564A <AmiBlitz3_wizzard.ab2@9572>   !asm
00025650 <AmiBlitz3_wizzard.ab2@9574>   LEA libpointer,A3
00025656 <AmiBlitz3_wizzard.ab2@9578>   MOVE.l size_deflibs,D0
0002565C <AmiBlitz3_wizzard.ab2@9579>   MOVE.l deflib,d1
00025660 <AmiBlitz3_wizzard.ab2@9580>   BEQ 'l1
00025664 <AmiBlitz3_wizzard.ab2@9581> BRA 'l2
0002566A <AmiBlitz3_wizzard.ab2@9584>   MOVE.l #str_path_deflibs,D1
0002566E <AmiBlitz3_wizzard.ab2@9587>   BSR.w load_libsfile
00025674 <AmiBlitz3_wizzard.ab2@9588>   MOVE.l D0,ptr_deflibs
0002567A <AmiBlitz3_wizzard.ab2@9591>   MOVE.l size_acidlibs,D0
00025680 <AmiBlitz3_wizzard.ab2@9592>   MOVE.l #str_path_acidlibs,D1
00025684 <AmiBlitz3_wizzard.ab2@9593>   BSR.w load_libsfile
0002568A <AmiBlitz3_wizzard.ab2@9594>   MOVE.l D0,ptr_acidlibs
0002568C <AmiBlitz3_wizzard.ab2@9598>   CLR.l (A3)
00025692 <AmiBlitz3_wizzard.ab2@9599>   MOVE.l A3,ptr_userlibs
00025698 <AmiBlitz3_wizzard.ab2@9604>   LEA str_libfilename,A0
0002569E <AmiBlitz3_wizzard.ab2@9605>   LEA str_path_userlibs,A1
000256A0 <AmiBlitz3_wizzard.ab2@9608>     MOVE.b (A1)+,(A0)+
000256A4 <AmiBlitz3_wizzard.ab2@9609>   BNE.b JL_0_708E
000256A6 <AmiBlitz3_wizzard.ab2@9611>   SUBQ.w #1,A0
000256AA <AmiBlitz3_wizzard.ab2@9612>   MOVE.b #$2F,(A0)+
000256AC <AmiBlitz3_wizzard.ab2@9615>   MOVE.l A0,-(A7)                                          ; -- store str_path_userlibs in A7
000256B2 <AmiBlitz3_wizzard.ab2@9617>   LEA ptr_userlibs_list,A2
000256B8 <AmiBlitz3_wizzard.ab2@9618>   MOVEA.l ptr_userlibs,A3
000256BE <AmiBlitz3_wizzard.ab2@9619>   MOVEA.l _dosbase,A6
000256C0 <AmiBlitz3_wizzard.ab2@9624>       MOVE.l (A2),D0                                       ; addresse aus liste nach D0
000256C4 <AmiBlitz3_wizzard.ab2@9625>       BNE.b JL_0_70C6                                      ; wenn nix drin, processing ueberspringen
000256C6 <AmiBlitz3_wizzard.ab2@9627>       CLR.l (A3)
000256C8 <AmiBlitz3_wizzard.ab2@9628>       ADDQ.w #4,A7
000256F2 <AmiBlitz3_wizzard.ab2@9629>       !basic
00025706 <AmiBlitz3_wizzard.ab2@9630>       If fid<>-1
00025710 <AmiBlitz3_wizzard.ab2@9631>         file_Close{fid}
0002571C <AmiBlitz3_wizzard.ab2@9632>         fid = -1
0002573A <AmiBlitz3_wizzard.ab2@9634>       !asm
0002573E <AmiBlitz3_wizzard.ab2@9635> BRA.w process_libraries
00025740 <AmiBlitz3_wizzard.ab2@9638>       MOVEA.l D0,A2                                        ; addresse zureuck nach A2
00025744 <AmiBlitz3_wizzard.ab2@9639>       TST.w $4(A2)                                         ; naechste addresse pruefen
00025748 <AmiBlitz3_wizzard.ab2@9640>     BEQ.b JL_0_70BA
0002574C <AmiBlitz3_wizzard.ab2@9642>     LEA $6(A2),A1
0002574E <AmiBlitz3_wizzard.ab2@9643>     MOVEA.l (A7),A0
00025750 <AmiBlitz3_wizzard.ab2@9646>       MOVE.b (A1)+,(A0)+
00025754 <AmiBlitz3_wizzard.ab2@9647>     BNE.w JL_0_70D4
00025756 <AmiBlitz3_wizzard.ab2@9651>     MOVE.l A0,-(A7)
0002575C <AmiBlitz3_wizzard.ab2@9652>     MOVE.l #str_libfilename,D1
0002575E <AmiBlitz3_wizzard.ab2@9653>     MOVEQ.l #-$02,D2
00025764 <AmiBlitz3_wizzard.ab2@9654>     MOVEA.l _dosbase,A6
00025768 <AmiBlitz3_wizzard.ab2@9655>      JSR _Lock(A6)
0002576A <AmiBlitz3_wizzard.ab2@9656>     MOVE.l D0,D1
0002576E <AmiBlitz3_wizzard.ab2@9657>      BEQ.w JL_0_7156
00025770 <AmiBlitz3_wizzard.ab2@9658>     MOVEA.l (A7),A0
00025776 <AmiBlitz3_wizzard.ab2@9659>     MOVE.b #$2F,-$1(A0)
00025778 <AmiBlitz3_wizzard.ab2@9662>     MOVE.l D1,-(A7)
0002577E <AmiBlitz3_wizzard.ab2@9663>     MOVE.l #ptr_parameterstore,D2
00025784 <AmiBlitz3_wizzard.ab2@9664>     MOVEA.l _dosbase,A6
00025788 <AmiBlitz3_wizzard.ab2@9665>     JSR _Examine(A6)
0002578A <AmiBlitz3_wizzard.ab2@9666>     TST.l D0
0002578E <AmiBlitz3_wizzard.ab2@9667>      BEQ.w JL_0_7150
00025794 <AmiBlitz3_wizzard.ab2@9670>     LEA fib_FileName,A0
00025798 <AmiBlitz3_wizzard.ab2@9671>     BSR.w check_for_infoextention
0002579C <AmiBlitz3_wizzard.ab2@9672>     BEQ.w JL_0_7150
000257C6 <AmiBlitz3_wizzard.ab2@9675>     !basic
0002584A <AmiBlitz3_wizzard.ab2@9676>       Poke$ ?str_libfilename,dos_AddPart{Peek$(?str_path_userlibs),Peek$(?fib_FileName)}
00025868 <AmiBlitz3_wizzard.ab2@9677>     !asm
0002586E <AmiBlitz3_wizzard.ab2@9678>     MOVE.l #str_libfilename,D1
00025872 <AmiBlitz3_wizzard.ab2@9679>     BSR.w open_userlibfile
00025874 <AmiBlitz3_wizzard.ab2@9682>     MOVE.l (A7)+,D1
0002587A <AmiBlitz3_wizzard.ab2@9683>     MOVEA.l _dosbase,A6
0002587E <AmiBlitz3_wizzard.ab2@9684>     JSR _UnLock(A6)
00025880 <AmiBlitz3_wizzard.ab2@9687>     ADDQ.w #4,A7
00025884 <AmiBlitz3_wizzard.ab2@9688> BRA.w JL_0_70BA
0002588A <AmiBlitz3_wizzard.ab2@9691>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00025890 <AmiBlitz3_wizzard.ab2@9692>   MOVEA.l _dosbase,A6
00025894 <AmiBlitz3_wizzard.ab2@9693>    JSR _Open(A6)
00025896 <AmiBlitz3_wizzard.ab2@9694>   MOVE.l D0,D7
0002589A <AmiBlitz3_wizzard.ab2@9695>    BEQ.w exit_userlibfile
0002589C <AmiBlitz3_wizzard.ab2@9698>   MOVE.l D7,D1                                             ; filehandle
000258A2 <AmiBlitz3_wizzard.ab2@9699>   MOVE.l #optstuff,D2                                     ; buffer
000258A8 <AmiBlitz3_wizzard.ab2@9700>   MOVEA.l _dosbase,A6
000258AA <AmiBlitz3_wizzard.ab2@9701>   MOVEQ.l #$20,D3                                          ; size
000258AE <AmiBlitz3_wizzard.ab2@9702>   JSR _Read(A6)
000258B4 <AmiBlitz3_wizzard.ab2@9705>   MOVE.l optstuff+28,D6
000258B6 <AmiBlitz3_wizzard.ab2@9706>   LSL.l #2,D6
000258B8 <AmiBlitz3_wizzard.ab2@9707>   MOVE.l D6,D0
000258BA <AmiBlitz3_wizzard.ab2@9708>   MOVEQ.l #$01,D1
000258C0 <AmiBlitz3_wizzard.ab2@9709>   MOVEA.l _execbase,A6
000258C6 <AmiBlitz3_wizzard.ab2@9710>   MOVE.l mempool,a0
000258CA <AmiBlitz3_wizzard.ab2@9711>   JSR _AllocPooled(a6)
000258CC <AmiBlitz3_wizzard.ab2@9712>   MOVEA.l D0,A5
000258D2 <AmiBlitz3_wizzard.ab2@9715>   MOVEA.l _dosbase,A6
000258D4 <AmiBlitz3_wizzard.ab2@9716>   MOVE.l D7,D1                                             ; filehandle
000258D6 <AmiBlitz3_wizzard.ab2@9717>   MOVE.l A5,D2                                             ; buffer
000258D8 <AmiBlitz3_wizzard.ab2@9718>   MOVE.l D6,D3                                             ; size
000258DC <AmiBlitz3_wizzard.ab2@9719>    JSR _Read(A6)
000258DE <AmiBlitz3_wizzard.ab2@9720>   MOVE.l A5,(A3)
000258E0 <AmiBlitz3_wizzard.ab2@9722>   MOVE.l A5,d0
000258E2 <AmiBlitz3_wizzard.ab2@9724>   MOVEA.l A5,A3
000258E6 <AmiBlitz3_wizzard.ab2@9725>   MOVE.l D6,$6(A5)
000258EA <AmiBlitz3_wizzard.ab2@9726>   CLR.l $20(A5)
00025914 <AmiBlitz3_wizzard.ab2@9728>   !basic
0002591E <AmiBlitz3_wizzard.ab2@9730>   addr_libnum.l = PutD0 + 4
00025932 <AmiBlitz3_wizzard.ab2@9731>   If fid<>-1
000259D2 <AmiBlitz3_wizzard.ab2@9732>     currentlib$ = LSet$(Peek.s(?fib_FileName),30)+";"+LSet$(Get_Libinfo{addr_libnum},30) ;+";"+Str$(Peek.w(addr_libnum))
00025A04 <AmiBlitz3_wizzard.ab2@9733>     file_WriteLine{fid,currentlib$}
00025A22 <AmiBlitz3_wizzard.ab2@9735>   !asm
00025A24 <AmiBlitz3_wizzard.ab2@9738>   MOVE.l D7,D1                                             ; filehandle
00025A2A <AmiBlitz3_wizzard.ab2@9739>   MOVE.l #optstuff,D2                                     ; buffer
00025A2C <AmiBlitz3_wizzard.ab2@9740>   MOVEQ.l #$0C,D3                                          ; size
00025A32 <AmiBlitz3_wizzard.ab2@9741>   MOVEA.l _dosbase,A6
00025A36 <AmiBlitz3_wizzard.ab2@9742>    JSR _Read(A6)
00025A3C <AmiBlitz3_wizzard.ab2@9744>   CMP.l #$C,D0
00025A40 <AmiBlitz3_wizzard.ab2@9745>    BCS.w close_and_exit_userlibfile
00025A46 <AmiBlitz3_wizzard.ab2@9748>   MOVE.l optstuff+4,D0
00025A4A <AmiBlitz3_wizzard.ab2@9749>   MOVE.l D0,$20(A5)
00025A4C <AmiBlitz3_wizzard.ab2@9750>   LSL.l #2,D0
00025A4E <AmiBlitz3_wizzard.ab2@9751>   MOVE.l D0,D5
00025A50 <AmiBlitz3_wizzard.ab2@9752>   MOVEQ.l #$01,D1
00025A56 <AmiBlitz3_wizzard.ab2@9753>   MOVEA.l _execbase,A6
00025A5C <AmiBlitz3_wizzard.ab2@9754>   MOVE.l mempool,a0
00025A60 <AmiBlitz3_wizzard.ab2@9755>   JSR _AllocPooled(a6)
00025A66 <AmiBlitz3_wizzard.ab2@9757>   MOVEA.l _dosbase,A6
00025A6A <AmiBlitz3_wizzard.ab2@9758>   MOVE.l D0,$24(A5)
00025A6C <AmiBlitz3_wizzard.ab2@9759>   MOVE.l D7,D1
00025A6E <AmiBlitz3_wizzard.ab2@9760>   MOVE.l D0,D2
00025A70 <AmiBlitz3_wizzard.ab2@9761>   MOVE.l D5,D3
00025A74 <AmiBlitz3_wizzard.ab2@9762>   JSR _Read(A6)
00025A76 <AmiBlitz3_wizzard.ab2@9765>   MOVE.l D7,D1
00025A7C <AmiBlitz3_wizzard.ab2@9766>   MOVEA.l _dosbase,A6
00025A80 <AmiBlitz3_wizzard.ab2@9767> JMP _Close(A6)
00025A82 <AmiBlitz3_wizzard.ab2@9770> RTS
00025A88 <AmiBlitz3_wizzard.ab2@9776>   CLR.w number_of_objects
00025A8E <AmiBlitz3_wizzard.ab2@9777>   MOVEA.l end_of_tokenlist,A3
00025A94 <AmiBlitz3_wizzard.ab2@9778>   MOVEA.l libpointer,A2
00025A98 <AmiBlitz3_wizzard.ab2@9781>     CMPA.w #$0,A2
00025A9C <AmiBlitz3_wizzard.ab2@9782>     BEQ.w JL_0_72D8                                        ; <-- abbruch mit RTS
00025AA0 <AmiBlitz3_wizzard.ab2@9784>     MOVE.w $4(A2),D7                                       ; <-- get tokennumber
00025AA4 <AmiBlitz3_wizzard.ab2@9785>     BMI.w JL_0_7226
00025AA6 <AmiBlitz3_wizzard.ab2@9786>       LSL.w #7,D7
00025AA8 <AmiBlitz3_wizzard.ab2@9787>       ADDQ.w #1,D7
00025AAC <AmiBlitz3_wizzard.ab2@9788>       MOVE.w D7,$E(A2)
00025AB0 <AmiBlitz3_wizzard.ab2@9791>     LEA $30(A2),A1
00025AB6 <AmiBlitz3_wizzard.ab2@9792>     LEA temp1,A4
00025AB8 <AmiBlitz3_wizzard.ab2@9795>       MOVE.w (A1),D0
00025ABC <AmiBlitz3_wizzard.ab2@9796>       BMI.w JL_0_72AE
00025ABE <AmiBlitz3_wizzard.ab2@9797>       MOVE.l A1,(A4)
00025AC0 <AmiBlitz3_wizzard.ab2@9798>       MOVEA.l A1,A4
00025AC2 <AmiBlitz3_wizzard.ab2@9799>       ADDQ.w #2,A4
00025AC4 <AmiBlitz3_wizzard.ab2@9800>       ADDQ.w #6,A1
00025AC8 <AmiBlitz3_wizzard.ab2@9801>       CMP.w #$8,D0
00025ACC <AmiBlitz3_wizzard.ab2@9802>       BEQ.w JL_0_7290
00025AD0 <AmiBlitz3_wizzard.ab2@9803>         ANDI.w #$F,D0
00025AD4 <AmiBlitz3_wizzard.ab2@9804>         BNE.w JL_0_725C
00025AD8 <AmiBlitz3_wizzard.ab2@9805>           BSR.w skiplibreg
00025ADC <AmiBlitz3_wizzard.ab2@9806>           LEA $C(A1),A1
00025ADE <AmiBlitz3_wizzard.ab2@9807>           ADDQ.w #1,D7
00025AE2 <AmiBlitz3_wizzard.ab2@9808> BRA.w JL_0_7230
00025AE6 <AmiBlitz3_wizzard.ab2@9811>     BTST #$2,D0
00025AEA <AmiBlitz3_wizzard.ab2@9812>     BEQ.w JL_0_7274
00025AEC <AmiBlitz3_wizzard.ab2@9813>       ADDQ.w #4,A1
00025AEE <AmiBlitz3_wizzard.ab2@9816>         TST.b (A1)+
00025AF2 <AmiBlitz3_wizzard.ab2@9817>       BPL.w JL_0_7266
00025AF6 <AmiBlitz3_wizzard.ab2@9818>       BSR.w aligna1
00025AFA <AmiBlitz3_wizzard.ab2@9819> BRA.w JL_0_7290
00025AFC <AmiBlitz3_wizzard.ab2@9822>       MOVE.w (A1)+,D0
00025B00 <AmiBlitz3_wizzard.ab2@9823>       BMI.w JL_0_7290
00025B04 <AmiBlitz3_wizzard.ab2@9824>       ANDI.w #$FF,D0
00025B06 <AmiBlitz3_wizzard.ab2@9825>       ADDA.w D0,A1
00025B0A <AmiBlitz3_wizzard.ab2@9826>       BSR.w aligna1
00025B0E <AmiBlitz3_wizzard.ab2@9827>       BSR.w skiplibreg
00025B12 <AmiBlitz3_wizzard.ab2@9828>       LEA $C(A1),A1
00025B16 <AmiBlitz3_wizzard.ab2@9829> BRA.w JL_0_7274
00025B18 <AmiBlitz3_wizzard.ab2@9832>     MOVE.l A1,(A3)
00025B1A <AmiBlitz3_wizzard.ab2@9833>     MOVEA.l A1,A3
00025B1C <AmiBlitz3_wizzard.ab2@9834>     ADDQ.w #4,A1
00025B1E <AmiBlitz3_wizzard.ab2@9835>     MOVE.w D7,(A1)+
00025B20 <AmiBlitz3_wizzard.ab2@9838>       TST.b (A1)+
00025B24 <AmiBlitz3_wizzard.ab2@9839>     BNE.w JL_0_7298
00025B26 <AmiBlitz3_wizzard.ab2@9842>       TST.b (A1)+
00025B2A <AmiBlitz3_wizzard.ab2@9843>     BNE.w JL_0_729E
00025B2E <AmiBlitz3_wizzard.ab2@9845>     BSR.w aligna1
00025B30 <AmiBlitz3_wizzard.ab2@9846>     ADDQ.w #1,D7
00025B34 <AmiBlitz3_wizzard.ab2@9847> BRA.w JL_0_7230
00025B38 <AmiBlitz3_wizzard.ab2@9850>     TST.w $4(A2)
00025B3C <AmiBlitz3_wizzard.ab2@9851>      BMI.w JL_0_72BA
00025B40 <AmiBlitz3_wizzard.ab2@9852>     MOVE.w D7,$10(A2)
00025B42 <AmiBlitz3_wizzard.ab2@9855>     ADDQ.w #2,A1
00025B44 <AmiBlitz3_wizzard.ab2@9856>     TST.l (A1)+
00025B48 <AmiBlitz3_wizzard.ab2@9857>      BEQ.w JL_0_72CC
00025B4E <AmiBlitz3_wizzard.ab2@9858>     ADDQ.w #1,number_of_objects
00025B52 <AmiBlitz3_wizzard.ab2@9859>     LEA $16(A1),A1
00025B54 <AmiBlitz3_wizzard.ab2@9862>     SUBA.l A2,A1
00025B58 <AmiBlitz3_wizzard.ab2@9863>     MOVE.l A1,$12(A2)
00025B5A <AmiBlitz3_wizzard.ab2@9864>     MOVEA.l (A2),A2
00025B5E <AmiBlitz3_wizzard.ab2@9865> BRA.w JL_0_720E
00025B60 <AmiBlitz3_wizzard.ab2@9868>   CLR.l (A3)
00025B66 <AmiBlitz3_wizzard.ab2@9869>   MOVE.l A7,errstack
00025B70 <AmiBlitz3_wizzard.ab2@9870>   MOVE.l #AL_0_730E,errcont
00025B78 <AmiBlitz3_wizzard.ab2@9871>   MOVE.w #$FFFF,ezerr
00025B7C <AmiBlitz3_wizzard.ab2@9872>   MOVE.w #$FFFA,D1
00025B80 <AmiBlitz3_wizzard.ab2@9873>    BSR.w JL_0_6F38
00025B86 <AmiBlitz3_wizzard.ab2@9874>   MOVE.l A1,tempvm
00025B8A <AmiBlitz3_wizzard.ab2@9875>   MOVE.w #$FDA7,D1
00025B8E <AmiBlitz3_wizzard.ab2@9876>    BSR.w JL_0_6F38
00025B94 <AmiBlitz3_wizzard.ab2@9877>   MOVE.l A1,ffplib
00025B96 <AmiBlitz3_wizzard.ab2@9880> RTS
00025B9A <AmiBlitz3_wizzard.ab2@9883> ffplib:  Ds.l 1
00025B9C <AmiBlitz3_wizzard.ab2@9887>     TST.w (A1)+
00025BA0 <AmiBlitz3_wizzard.ab2@9888>     BEQ.w JL_0_7320
00025BA2 <AmiBlitz3_wizzard.ab2@9889>     ADDQ.w #2,A1
00025BA6 <AmiBlitz3_wizzard.ab2@9890> BRA.w skiplibreg
00025BA8 <AmiBlitz3_wizzard.ab2@9893> RTS
00025BAA <AmiBlitz3_wizzard.ab2@9897>   EXG.l A1,A0
00025BAE <AmiBlitz3_wizzard.ab2@9898>   BSR.w aligna1
00025BB0 <AmiBlitz3_wizzard.ab2@9899>   EXG.l A1,A0
00025BB2 <AmiBlitz3_wizzard.ab2@9900> RTS
00025BB4 <AmiBlitz3_wizzard.ab2@9903>   EXG.l D0,A1
00025BB6 <AmiBlitz3_wizzard.ab2@9904>   ADDQ.l #1,D0
00025BBA <AmiBlitz3_wizzard.ab2@9905>   BCLR #$0,D0
00025BBC <AmiBlitz3_wizzard.ab2@9906>   EXG.l D0,A1
00025BBE <AmiBlitz3_wizzard.ab2@9907> RTS
00025BC4 <AmiBlitz3_wizzard.ab2@9911>   MOVEA.l _execbase,A6
00025BCA <AmiBlitz3_wizzard.ab2@9912>   MOVEA.l ptr_userlibs,A2
00025BCC <AmiBlitz3_wizzard.ab2@9913>   MOVE.l (A2),D0
00025BCE <AmiBlitz3_wizzard.ab2@9914>   CLR.l (A2)
00025BD0 <AmiBlitz3_wizzard.ab2@9915>   MOVEA.l D0,A2
00025BD4 <AmiBlitz3_wizzard.ab2@9918>     CMPA.w #$0,A2
00025BD8 <AmiBlitz3_wizzard.ab2@9919>     BEQ.w free_userlib
00025BDC <AmiBlitz3_wizzard.ab2@9921>     MOVE.l $20(A2),D0
00025BE0 <AmiBlitz3_wizzard.ab2@9922>     BEQ.b JL_0_7360
00025BE2 <AmiBlitz3_wizzard.ab2@9923>       LSL.l #2,D0
00025BE8 <AmiBlitz3_wizzard.ab2@9924>       MOVE.l mempool,a0
00025BEC <AmiBlitz3_wizzard.ab2@9925>       MOVEA.l $24(A2),A1
00025BF0 <AmiBlitz3_wizzard.ab2@9926>       JSR _FreePooled(A6)
00025BF2 <AmiBlitz3_wizzard.ab2@9929>     MOVEA.l A2,A1
00025BF6 <AmiBlitz3_wizzard.ab2@9930>     MOVE.l $6(A1),D0
00025BFC <AmiBlitz3_wizzard.ab2@9931>     MOVE.l mempool,a0
00025BFE <AmiBlitz3_wizzard.ab2@9932>     MOVEA.l (A2),A2
00025C04 <AmiBlitz3_wizzard.ab2@9933>     MOVEA.l _execbase,A6
00025C08 <AmiBlitz3_wizzard.ab2@9934>     JSR _FreePooled(A6)
00025C0C <AmiBlitz3_wizzard.ab2@9935> BRA.w JL_0_7348
00025C10 <AmiBlitz3_wizzard.ab2@9939>   BSR.w free_userlibs
00025C16 <AmiBlitz3_wizzard.ab2@9940>   MOVEA.l _execbase,A6
00025C1C <AmiBlitz3_wizzard.ab2@9941>   CLR.l libpointer
00025C22 <AmiBlitz3_wizzard.ab2@9942>   MOVEA.l end_of_tokenlist,A0
00025C24 <AmiBlitz3_wizzard.ab2@9943>   CLR.l (A0)
00025C2A <AmiBlitz3_wizzard.ab2@9945>   MOVE.l size_acidlibs,D0
00025C2E <AmiBlitz3_wizzard.ab2@9946>   BEQ.b JL_0_73A2
00025C34 <AmiBlitz3_wizzard.ab2@9947>     MOVE.l ptr_acidlibs,D1
00025C38 <AmiBlitz3_wizzard.ab2@9948>     BEQ.b JL_0_73A2
00025C3E <AmiBlitz3_wizzard.ab2@9949>       CLR.l ptr_acidlibs
00025C40 <AmiBlitz3_wizzard.ab2@9950>       MOVEA.l D1,A1
00025C46 <AmiBlitz3_wizzard.ab2@9951>       MOVE.l mempool,a0
00025C4C <AmiBlitz3_wizzard.ab2@9952>       MOVEA.l _execbase,A6
00025C50 <AmiBlitz3_wizzard.ab2@9953>       JSR _FreePooled(A6)                                 ; free acidlibs
00025C56 <AmiBlitz3_wizzard.ab2@9956>   MOVE.l size_deflibs,D0
00025C5A <AmiBlitz3_wizzard.ab2@9957>   BEQ.b JL_0_73BE
00025C60 <AmiBlitz3_wizzard.ab2@9958>     MOVE.l ptr_deflibs,D1
00025C64 <AmiBlitz3_wizzard.ab2@9959>     BEQ.b JL_0_73BE
00025C6A <AmiBlitz3_wizzard.ab2@9960>       CLR.l ptr_deflibs                                    ; d0: memorySize
00025C6C <AmiBlitz3_wizzard.ab2@9961>       MOVEA.l D1,A1                                        ; a1: memory
00025C72 <AmiBlitz3_wizzard.ab2@9962>       MOVE.l mempool,a0                                    ; a0: poolHeader
00025C78 <AmiBlitz3_wizzard.ab2@9963>       MOVEA.l _execbase,A6
00025C7C <AmiBlitz3_wizzard.ab2@9964>       JSR _FreePooled(A6)                                  ; free deflibs
00025C7E <AmiBlitz3_wizzard.ab2@9967> RTS
00025C84 <AmiBlitz3_wizzard.ab2@9971>   MOVEA.l currentmacroaddr,A0
00025C86 <AmiBlitz3_wizzard.ab2@9972>   MOVEA.l (A0),A2
00025C88 <AmiBlitz3_wizzard.ab2@9973>   CLR.l (A0)
00025C8E <AmiBlitz3_wizzard.ab2@9974>   MOVEA.l _execbase,A6
00025C92 <AmiBlitz3_wizzard.ab2@9977>     CMPA.w #$0,A2
00025C96 <AmiBlitz3_wizzard.ab2@9978>     BEQ.w JL_0_73FA
00025C98 <AmiBlitz3_wizzard.ab2@9979>     MOVEQ.l #$00,D0
00025C9C <AmiBlitz3_wizzard.ab2@9980>     MOVE.w $8(A2),D0
00025CA0 <AmiBlitz3_wizzard.ab2@9981>     BEQ.w JL_0_73E8
00025CA4 <AmiBlitz3_wizzard.ab2@9982>     MOVEA.l $4(A2),A1
00025CAA <AmiBlitz3_wizzard.ab2@9983>     MOVE.l mempool,a0
00025CAE <AmiBlitz3_wizzard.ab2@9984>     JSR _FreePooled(A6)
00025CB0 <AmiBlitz3_wizzard.ab2@9987>     MOVEA.l A2,A1
00025CB2 <AmiBlitz3_wizzard.ab2@9988>     MOVEA.l (A2),A2
00025CB4 <AmiBlitz3_wizzard.ab2@9989>     MOVEQ.l #$00,D0
00025CB8 <AmiBlitz3_wizzard.ab2@9990>     MOVE.b $C(A1),D0
00025CBE <AmiBlitz3_wizzard.ab2@9991>     MOVE.l mempool2,a0
00025CC2 <AmiBlitz3_wizzard.ab2@9992>     JSR _FreePooled(A6)
00025CC6 <AmiBlitz3_wizzard.ab2@9993> BRA.w JL_0_73CE
00025CC8 <AmiBlitz3_wizzard.ab2@9996> RTS
00025CCE <AmiBlitz3_wizzard.ab2@10000>   MOVEA.l templabel,A2
00025CD4 <AmiBlitz3_wizzard.ab2@10001>   CLR.l templabel
00025CD6 <AmiBlitz3_wizzard.ab2@10002> RTS
00025CDC <AmiBlitz3_wizzard.ab2@10005>   MOVEA.l _execbase,A6                                     ;??looks like dead code?
00025CE0 <AmiBlitz3_wizzard.ab2@10008>     CMPA.w #$0,A2
00025CE4 <AmiBlitz3_wizzard.ab2@10009>     BEQ.w JL_0_7426
00025CE6 <AmiBlitz3_wizzard.ab2@10010>     MOVEQ.l #$00,D0
00025CEA <AmiBlitz3_wizzard.ab2@10011>     MOVE.b $E(A2),D0                                       ;labeltemp
00025CEC <AmiBlitz3_wizzard.ab2@10012>     MOVEA.l A2,A1
00025CEE <AmiBlitz3_wizzard.ab2@10013>     MOVEA.l (A2),A2
00025CF4 <AmiBlitz3_wizzard.ab2@10014>     MOVE.l mempool2,a0
00025CF8 <AmiBlitz3_wizzard.ab2@10016> BRA.w JL_0_740C
00025CFA <AmiBlitz3_wizzard.ab2@10019> RTS
00025D00 <AmiBlitz3_wizzard.ab2@10023>   MOVEA.l data1,A4
00025D06 <AmiBlitz3_wizzard.ab2@10024>   CMPA.l data2at,A4
00025D0A <AmiBlitz3_wizzard.ab2@10025>   BCC.w JL_0_7442
00025D0C <AmiBlitz3_wizzard.ab2@10026>     MOVE.b D1,(A4)+
00025D12 <AmiBlitz3_wizzard.ab2@10027>     MOVE.l A4,data1
00025D14 <AmiBlitz3_wizzard.ab2@10028> RTS
00025D1C <AmiBlitz3_wizzard.ab2@10031>   MOVE.w #$FFFF,dontwrite                                  ;move #-1, org source
00025D22 <AmiBlitz3_wizzard.ab2@10032>   ADDQ.l #1,data1
00025D24 <AmiBlitz3_wizzard.ab2@10033> RTS
00025D26 <AmiBlitz3_wizzard.ab2@10037>   SWAP D1
00025D2A <AmiBlitz3_wizzard.ab2@10038>   BSR.w pokedata1
00025D2C <AmiBlitz3_wizzard.ab2@10039>   SWAP D1
00025D32 <AmiBlitz3_wizzard.ab2@10042>   MOVEA.l data1,A4
00025D38 <AmiBlitz3_wizzard.ab2@10043>   CMPA.l data2at,A4
00025D3C <AmiBlitz3_wizzard.ab2@10044>    BCC.w JL_0_7474
00025D3E <AmiBlitz3_wizzard.ab2@10045>   MOVE.w D1,(A4)+
00025D44 <AmiBlitz3_wizzard.ab2@10046>   MOVE.l A4,data1
00025D46 <AmiBlitz3_wizzard.ab2@10047> RTS
00025D4E <AmiBlitz3_wizzard.ab2@10050>   MOVE.w #$FFFF,dontwrite
00025D54 <AmiBlitz3_wizzard.ab2@10051>   ADDQ.l #2,data1
00025D56 <AmiBlitz3_wizzard.ab2@10052> RTS
00025D5C <AmiBlitz3_wizzard.ab2@10056>   MOVE.l data1,D3                                      ;write local string/type allocs
00025D5E <AmiBlitz3_wizzard.ab2@10057>   MOVEQ.l #$00,D4
00025D62 <AmiBlitz3_wizzard.ab2@10060>   CMPA.w #$0,A2
00025D66 <AmiBlitz3_wizzard.ab2@10061>    BEQ.w JL_0_74CAc
00025D6A <AmiBlitz3_wizzard.ab2@10062>   TST.w $6(A2)
00025D6E <AmiBlitz3_wizzard.ab2@10063>    BNE.w JL_0_74C4c
00025D72 <AmiBlitz3_wizzard.ab2@10064>   MOVEA.l $A(A2),A3
00025D7A <AmiBlitz3_wizzard.ab2@10065>   CMPI.l #$100,$4(A3)
00025D7E <AmiBlitz3_wizzard.ab2@10066>    BCS.w JL_0_74C4c
00025D82 <AmiBlitz3_wizzard.ab2@10067>   MOVE.w $4(A2),D1
00025D86 <AmiBlitz3_wizzard.ab2@10068>    BSR.w pokedata1
00025D8A <AmiBlitz3_wizzard.ab2@10069>   MOVE.w $8(A3),D1
00025D8E <AmiBlitz3_wizzard.ab2@10070>    BSR.w pokedata1
00025D90 <AmiBlitz3_wizzard.ab2@10071>   ADDQ.w #1,D4
00025D92 <AmiBlitz3_wizzard.ab2@10074>    MOVEA.l (A2),A2
00025D96 <AmiBlitz3_wizzard.ab2@10075> BRA.w JL_0_7492c
00025D98 <AmiBlitz3_wizzard.ab2@10078>    TST.w D4
00025D9C <AmiBlitz3_wizzard.ab2@10079>    BEQ.w JL_0_74E0
00025DA0 <AmiBlitz3_wizzard.ab2@10080>   MOVE.w #$FF37,D1
00025DA4 <AmiBlitz3_wizzard.ab2@10081>    BSR.w uselib
00025DA8 <AmiBlitz3_wizzard.ab2@10082>   MOVE.w #$FFFA,D1
00025DAC <AmiBlitz3_wizzard.ab2@10083> BRA.w uselib
00025DB2 <AmiBlitz3_wizzard.ab2@10091>   MOVEA.l varbase,A2                                       ;add alloc mem for types/strings global
00025DB8 <AmiBlitz3_wizzard.ab2@10094>   MOVE.l data1,D3
00025DBA <AmiBlitz3_wizzard.ab2@10095>   MOVEQ.l #$00,D4
00025DC0 <AmiBlitz3_wizzard.ab2@10096>   TST.b iserror
00025DC4 <AmiBlitz3_wizzard.ab2@10097>   BEQ JL_0_7492
00025DC6 <AmiBlitz3_wizzard.ab2@10098>   RTS
00025DCA <AmiBlitz3_wizzard.ab2@10100>    CMPA.w #$0,A2
00025DCE <AmiBlitz3_wizzard.ab2@10101>    BEQ.w JL_0_74CA
00025DD2 <AmiBlitz3_wizzard.ab2@10102>   TST.w $6(A2)
00025DD6 <AmiBlitz3_wizzard.ab2@10103>    BNE.w JL_0_74C4
00025DDA <AmiBlitz3_wizzard.ab2@10104>   MOVEA.l $A(A2),A3
00025DE2 <AmiBlitz3_wizzard.ab2@10105>   CMPI.l #$100,$4(A3)
00025DE6 <AmiBlitz3_wizzard.ab2@10106>    BCS.w JL_0_74C4
00025DEA <AmiBlitz3_wizzard.ab2@10107>   MOVE.w $4(A2),D1
00025DEE <AmiBlitz3_wizzard.ab2@10108>    BSR.w pokedata1
00025DF2 <AmiBlitz3_wizzard.ab2@10109>   MOVE.w $8(A3),D1
00025DF6 <AmiBlitz3_wizzard.ab2@10110>    BSR.w pokedata1
00025DF8 <AmiBlitz3_wizzard.ab2@10111>   ADDQ.w #1,D4
00025DFA <AmiBlitz3_wizzard.ab2@10114>   MOVEA.l (A2),A2
00025DFE <AmiBlitz3_wizzard.ab2@10115> BRA.w JL_0_7492
00025E04 <AmiBlitz3_wizzard.ab2@10119>   MOVEA.l sharebase,A2
00025E08 <AmiBlitz3_wizzard.ab2@10122>   CMPA.w #$0,A2
00025E0C <AmiBlitz3_wizzard.ab2@10123>    BEQ.w JL_0_74CAb
00025E10 <AmiBlitz3_wizzard.ab2@10125>   TST.w $6(A2)
00025E14 <AmiBlitz3_wizzard.ab2@10126>    BNE.w JL_0_74C4b
00025E18 <AmiBlitz3_wizzard.ab2@10127>   MOVEA.l $A(A2),A3
00025E20 <AmiBlitz3_wizzard.ab2@10128>   CMPI.l #$100,$4(A3)
00025E24 <AmiBlitz3_wizzard.ab2@10129>    BCS.w JL_0_74C4b
00025E28 <AmiBlitz3_wizzard.ab2@10130>   MOVE.w $4(A2),D1
00025E2C <AmiBlitz3_wizzard.ab2@10131>    BSR.w pokedata1
00025E30 <AmiBlitz3_wizzard.ab2@10132>   MOVE.w $8(A3),D1
00025E34 <AmiBlitz3_wizzard.ab2@10133>    BSR.w pokedata1
00025E36 <AmiBlitz3_wizzard.ab2@10134>   ADDQ.w #1,D4
00025E38 <AmiBlitz3_wizzard.ab2@10137>   MOVEA.l (A2),A2
00025E3C <AmiBlitz3_wizzard.ab2@10138> BRA.w JL_0_7492b
00025E3E <AmiBlitz3_wizzard.ab2@10141>    TST.w D4
00025E42 <AmiBlitz3_wizzard.ab2@10142>    BEQ.w JL_0_74E0
00025E46 <AmiBlitz3_wizzard.ab2@10143>   MOVE.w #$FF37,D1
00025E4A <AmiBlitz3_wizzard.ab2@10144>    BSR.w uselib                                            ;use statics lib
00025E4E <AmiBlitz3_wizzard.ab2@10145>   MOVE.w #$FFFA,D1                                         ;use memlib
00025E52 <AmiBlitz3_wizzard.ab2@10146> BRA.w uselib
00025E54 <AmiBlitz3_wizzard.ab2@10149> RTS
00025E5A <AmiBlitz3_wizzard.ab2@10153>   MOVE.w numtoa2,D1
00025E5E <AmiBlitz3_wizzard.ab2@10154>    BSR.w writeword
00025E62 <AmiBlitz3_wizzard.ab2@10155>    BSR.w addoff
00025E64 <AmiBlitz3_wizzard.ab2@10156>   MOVE.l D3,D1
00025E68 <AmiBlitz3_wizzard.ab2@10157>    BSR.w writelong
00025E6A <AmiBlitz3_wizzard.ab2@10158>   SUBQ.w #1,D4
00025E70 <AmiBlitz3_wizzard.ab2@10159>   MOVE.w D4,endarray+2
00025E76 <AmiBlitz3_wizzard.ab2@10160>   MOVE.l endarray,D1
00025E7A <AmiBlitz3_wizzard.ab2@10161> BRA.w writelong
00025E7C <AmiBlitz3_wizzard.ab2@10165>   MOVE.l D3,-(A7)
00025E82 <AmiBlitz3_wizzard.ab2@10168>   MOVEA.l _dosbase,A6
00025E86 <AmiBlitz3_wizzard.ab2@10169>   JSR _Write(a6)
00025E88 <AmiBlitz3_wizzard.ab2@10171>   CMP.l (A7)+,D0
00025E8C <AmiBlitz3_wizzard.ab2@10172>    BNE.w JL_0_7516
00025E8E <AmiBlitz3_wizzard.ab2@10173> RTS
00025E90 <AmiBlitz3_wizzard.ab2@10176>   MOVE.l D7,D1
00025E96 <AmiBlitz3_wizzard.ab2@10178>   MOVEA.l _dosbase,A6
00025E9A <AmiBlitz3_wizzard.ab2@10179>   JSR _Close(a6)
00025EA0 <AmiBlitz3_wizzard.ab2@10182> JMP error_create_exe
00025EA6 <AmiBlitz3_wizzard.ab2@10191>   MOVE.l A7,errstack
00025EAA <AmiBlitz3_wizzard.ab2@10192>   MOVEM.l d2-d7/a2-a6,-(a7)
00025EB4 <AmiBlitz3_wizzard.ab2@10193>   MOVE.l #AL_0_7790,errcont
00025EBA <AmiBlitz3_wizzard.ab2@10194>    JSR call_setpointerbusy
00025EC2 <AmiBlitz3_wizzard.ab2@10195>   MOVE.w #$FFFF,anyerrs
00025ECC <AmiBlitz3_wizzard.ab2@10196>   CMP.l #-1,chipstart
00025ED0 <AmiBlitz3_wizzard.ab2@10197>   BEQ 'l01
00025ED6 <AmiBlitz3_wizzard.ab2@10198>   MOVE.l chipend,d1
00025ED8 <AmiBlitz3_wizzard.ab2@10199>   ADDQ.l #3,d1
00025EDE <AmiBlitz3_wizzard.ab2@10200>   AND.l #$fffffffc,d1                                      ;bug
00025EE4 <AmiBlitz3_wizzard.ab2@10201>   MOVE.l d1,chipend
00025EE6 <AmiBlitz3_wizzard.ab2@10202>   MOVE.l d1,a1
00025EEC <AmiBlitz3_wizzard.ab2@10203>   MOVE.l chipstart,a0
00025EEE <AmiBlitz3_wizzard.ab2@10204>   MOVE.l a1,d1
00025EF0 <AmiBlitz3_wizzard.ab2@10205>   SUB.l a0,d1
00025EF6 <AmiBlitz3_wizzard.ab2@10206>   MOVE.l d1,chipsize
00025F00 <AmiBlitz3_wizzard.ab2@10209>   CMP.l #-1,bssstart
00025F04 <AmiBlitz3_wizzard.ab2@10210>   BEQ 'l11
00025F0A <AmiBlitz3_wizzard.ab2@10211>   MOVE.l realbssend,a1
00025F10 <AmiBlitz3_wizzard.ab2@10212>   MOVE.l bssstart,a0
00025F12 <AmiBlitz3_wizzard.ab2@10213>   MOVE.l a1,d1
00025F14 <AmiBlitz3_wizzard.ab2@10214>   SUB.l a0,d1
00025F1A <AmiBlitz3_wizzard.ab2@10215>   MOVE.l d1,bsssize
00025F1E <AmiBlitz3_wizzard.ab2@10216>   BEQ 'l11
00025F20 <AmiBlitz3_wizzard.ab2@10219>   TST.b (a0)+
00025F24 <AmiBlitz3_wizzard.ab2@10220>   BEQ 'l31
00025F2A <AmiBlitz3_wizzard.ab2@10221>   TST.b debugmode
00025F2E <AmiBlitz3_wizzard.ab2@10222>   BEQ 'l1
00025F34 <AmiBlitz3_wizzard.ab2@10223>   TST.b exdebug
00025F38 <AmiBlitz3_wizzard.ab2@10224>   BNE 'l31
00025F3E <AmiBlitz3_wizzard.ab2@10227>   MOVE.l #nodata,-(a7)
00025F44 <AmiBlitz3_wizzard.ab2@10228> JMP handle_compileerror
00025F46 <AmiBlitz3_wizzard.ab2@10231>   CMP.l a0,a1
00025F4A <AmiBlitz3_wizzard.ab2@10232>   BGT 'l32
00025F50 <AmiBlitz3_wizzard.ab2@10233>   MOVE.l bssend,d1
00025F52 <AmiBlitz3_wizzard.ab2@10234>   ADDQ.l #3,d1
00025F58 <AmiBlitz3_wizzard.ab2@10235>   AND.l #$fffffffc,d1                                      ;bug
00025F5E <AmiBlitz3_wizzard.ab2@10236>   MOVE.l d1,bssend
00025F60 <AmiBlitz3_wizzard.ab2@10237>   MOVE.l d1,a1
00025F66 <AmiBlitz3_wizzard.ab2@10238>   MOVE.l bssstart,a0
00025F68 <AmiBlitz3_wizzard.ab2@10239>   MOVE.l a1,d1
00025F6A <AmiBlitz3_wizzard.ab2@10240>   SUB.l a0,d1
00025F70 <AmiBlitz3_wizzard.ab2@10241>   MOVE.l d1,bsssize
00025F74 <AmiBlitz3_wizzard.ab2@10244>   MOVEM.l d5-d7/d3,-(a7)
00025F7A <AmiBlitz3_wizzard.ab2@10245>   MOVE.w dontwrite,D1
00025F7E <AmiBlitz3_wizzard.ab2@10246>   BNE.w JL_0_757C
00025F84 <AmiBlitz3_wizzard.ab2@10247>   MOVE.l chipsize,d5
00025F8A <AmiBlitz3_wizzard.ab2@10248>   MOVE.l bsssize,d3
00025F90 <AmiBlitz3_wizzard.ab2@10249>   MOVE.l chipstart,d7
00025F96 <AmiBlitz3_wizzard.ab2@10250>   MOVE.l bssstart,d6
00025F9C <AmiBlitz3_wizzard.ab2@10251>   MOVEA.l hunkoffsetbase,A2
00025FA2 <AmiBlitz3_wizzard.ab2@10252>   MOVEA.l destbufferstart,A1
00025FA4 <AmiBlitz3_wizzard.ab2@10253>   MOVE.l A1,D2
00025FAA <AmiBlitz3_wizzard.ab2@10254>   ADD.l noinits,D2
00025FB0 <AmiBlitz3_wizzard.ab2@10255>   CLR.l hunkoffsetnum
00025FB4 <AmiBlitz3_wizzard.ab2@10258>   CMPA.w #$0,A2
00025FB8 <AmiBlitz3_wizzard.ab2@10259>    BEQ.w JL_0_757C
00025FBC <AmiBlitz3_wizzard.ab2@10260>   MOVE.l $4(A2),D0
00025FC0 <AmiBlitz3_wizzard.ab2@10261>    LEA $0(a1,d0.l),a0
00025FC2 <AmiBlitz3_wizzard.ab2@10262>    MOVE.l (a0),d1
00025FC4 <AmiBlitz3_wizzard.ab2@10263>   TST.l d1
00025FC8 <AmiBlitz3_wizzard.ab2@10264>    BMI.w 'lm1
00025FD0 <AmiBlitz3_wizzard.ab2@10265>   MOVE.b #0,newhunk
00025FDA <AmiBlitz3_wizzard.ab2@10266>   CMP.l #-1,chipstart
00025FDE <AmiBlitz3_wizzard.ab2@10267>   BEQ 'l10
00025FE4 <AmiBlitz3_wizzard.ab2@10268>   CMP.l chipstart,d1
00025FE8 <AmiBlitz3_wizzard.ab2@10269>   BLT 'l10
00025FF0 <AmiBlitz3_wizzard.ab2@10270>   MOVE.b #1,newhunk
00025FF6 <AmiBlitz3_wizzard.ab2@10271>   CMP.l chipend,d1
00025FFA <AmiBlitz3_wizzard.ab2@10272>   BGE 'l110
00025FFC <AmiBlitz3_wizzard.ab2@10273>   SUB.l d7,(a0)
00026004 <AmiBlitz3_wizzard.ab2@10274>   ADD.l #$80000000,4(a2)
00026008 <AmiBlitz3_wizzard.ab2@10275> BRA JL_0_7576
0002600C <AmiBlitz3_wizzard.ab2@10278>   SUB.l d5,0(a0)
00026016 <AmiBlitz3_wizzard.ab2@10281>   CMP.l #-1,bssstart
0002601A <AmiBlitz3_wizzard.ab2@10282>     BEQ 'l11
00026020 <AmiBlitz3_wizzard.ab2@10283>   CMP.l bssstart,d1
00026024 <AmiBlitz3_wizzard.ab2@10284>   BLT 'l11
0002602A <AmiBlitz3_wizzard.ab2@10285>   CMP.l bssend,d1
0002602E <AmiBlitz3_wizzard.ab2@10286>   BGE 'l111
00026034 <AmiBlitz3_wizzard.ab2@10287>   TST.b newhunk
00026038 <AmiBlitz3_wizzard.ab2@10288>   BEQ 'ln1
0002603A <AmiBlitz3_wizzard.ab2@10289>   ADD.l d5,(a0)
0002603C <AmiBlitz3_wizzard.ab2@10292>   SUB.l d6,(a0)
00026044 <AmiBlitz3_wizzard.ab2@10293>   ADD.l #$40000000,4(a2)
00026048 <AmiBlitz3_wizzard.ab2@10294> BRA JL_0_7576
0002604C <AmiBlitz3_wizzard.ab2@10297>   SUB.l d3,0(a0)
0002604E <AmiBlitz3_wizzard.ab2@10300>   SUB.l D2,(A0)
00026054 <AmiBlitz3_wizzard.ab2@10303>   ADDQ.l #1,hunkoffsetnum
00026056 <AmiBlitz3_wizzard.ab2@10306>    MOVEA.l (A2),A2
0002605A <AmiBlitz3_wizzard.ab2@10307> BRA.w JL_0_755E
0002605E <AmiBlitz3_wizzard.ab2@10311>   MOVEM.l (a7)+,d5-d7/d3
00026064 <AmiBlitz3_wizzard.ab2@10312>   MOVE.l ptr_newexefilename,D1
0002606A <AmiBlitz3_wizzard.ab2@10313>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00026070 <AmiBlitz3_wizzard.ab2@10314>   MOVEA.l _dosbase,A6
00026074 <AmiBlitz3_wizzard.ab2@10315>    JSR _Open(A6)
00026076 <AmiBlitz3_wizzard.ab2@10316>   MOVE.l D0,D7
0002607A <AmiBlitz3_wizzard.ab2@10317>    BEQ.w execerr
00026080 <AmiBlitz3_wizzard.ab2@10318>   MOVE.l objlen,D0
00026086 <AmiBlitz3_wizzard.ab2@10319>   SUB.l #moremem,d0
0002608C <AmiBlitz3_wizzard.ab2@10320>   SUB.l noinits,D0
00026096 <AmiBlitz3_wizzard.ab2@10321>   CMP.l #-1,bssstart
0002609A <AmiBlitz3_wizzard.ab2@10322>   BEQ 'l60
000260A0 <AmiBlitz3_wizzard.ab2@10323>   SUB.l bsssize,d0
000260A6 <AmiBlitz3_wizzard.ab2@10324>   SUB.l chipsize,d0
000260AA <AmiBlitz3_wizzard.ab2@10325> BRA.s 'l61
000260B4 <AmiBlitz3_wizzard.ab2@10328>   CMP.l #-1,chipstart
000260B8 <AmiBlitz3_wizzard.ab2@10329>   BEQ 'l61
000260BE <AmiBlitz3_wizzard.ab2@10330>   SUB.l bsssize,d0
000260C4 <AmiBlitz3_wizzard.ab2@10331>   SUB.l chipsize,d0
000260C6 <AmiBlitz3_wizzard.ab2@10334>   ADDQ.l #3,D0
000260C8 <AmiBlitz3_wizzard.ab2@10335>   LSR.l #2,D0
000260CE <AmiBlitz3_wizzard.ab2@10336>   MOVE.l D0,tstsize1
000260D4 <AmiBlitz3_wizzard.ab2@10337>   MOVE.l D0,tstsize2
000260D6 <AmiBlitz3_wizzard.ab2@10338>   MOVE.l D7,D1
000260DC <AmiBlitz3_wizzard.ab2@10339>   MOVE.l #tsthead,D2                                      ;hunkbegin
000260DE <AmiBlitz3_wizzard.ab2@10340>   MOVEQ.l #$20,D3
000260E8 <AmiBlitz3_wizzard.ab2@10341>   CMP.l #-1,bssstart
000260EC <AmiBlitz3_wizzard.ab2@10342>   BEQ 'lb1
000260F6 <AmiBlitz3_wizzard.ab2@10343>   CMP.l #-1,chipstart
000260FA <AmiBlitz3_wizzard.ab2@10344>   BEQ 'lb1
00026104 <AmiBlitz3_wizzard.ab2@10345>   MOVE.l #1,bssnum
0002610E <AmiBlitz3_wizzard.ab2@10346>   MOVE.l #2,chipnum
00026110 <AmiBlitz3_wizzard.ab2@10347>   MOVEQ.l #$28,D3
00026116 <AmiBlitz3_wizzard.ab2@10348>   MOVE.l bsssize,d2
00026118 <AmiBlitz3_wizzard.ab2@10349>   ADDQ.l #3,d2
0002611A <AmiBlitz3_wizzard.ab2@10350>   ASR.l #2,d2
00026120 <AmiBlitz3_wizzard.ab2@10351>   MOVE.l d2,hunkend+8
00026126 <AmiBlitz3_wizzard.ab2@10352>   MOVE.l d2,bsssize3
0002612C <AmiBlitz3_wizzard.ab2@10353>   MOVE.l chipsize,d2
0002612E <AmiBlitz3_wizzard.ab2@10354>   ADDQ.l #3,d2
00026130 <AmiBlitz3_wizzard.ab2@10355>   ASR.l #2,d2
00026136 <AmiBlitz3_wizzard.ab2@10356>   MOVE.l d2,chipsize2
00026140 <AmiBlitz3_wizzard.ab2@10357>   ADD.l #$40000000,chipsize2
00026146 <AmiBlitz3_wizzard.ab2@10358>   MOVE.l d2,hunkend2+8
0002614C <AmiBlitz3_wizzard.ab2@10359>   MOVE.l D0,tstsize1c
00026152 <AmiBlitz3_wizzard.ab2@10360>   MOVE.l D0,tstsize2c
00026158 <AmiBlitz3_wizzard.ab2@10361>   MOVE.l #hunkbegin2,d2
0002615C <AmiBlitz3_wizzard.ab2@10362> BRA 'l100
00026166 <AmiBlitz3_wizzard.ab2@10365>   CMP.l #-1,bssstart
0002616A <AmiBlitz3_wizzard.ab2@10366>   BEQ 'l10
00026174 <AmiBlitz3_wizzard.ab2@10367>   MOVE.l #1,bssnum
00026176 <AmiBlitz3_wizzard.ab2@10368>   MOVEQ.l #$24,D3
0002617C <AmiBlitz3_wizzard.ab2@10369>   MOVE.l bsssize,d2
0002617E <AmiBlitz3_wizzard.ab2@10370>   ADDQ.l #3,d2
00026180 <AmiBlitz3_wizzard.ab2@10371>   ASR.l #2,d2
00026186 <AmiBlitz3_wizzard.ab2@10372>   MOVE.l d2,hunkend+8
0002618C <AmiBlitz3_wizzard.ab2@10373>   MOVE.l d2,bsssize2
00026192 <AmiBlitz3_wizzard.ab2@10374>   MOVE.l D0,tstsize1b
00026198 <AmiBlitz3_wizzard.ab2@10375>   MOVE.l D0,tstsize2b
0002619E <AmiBlitz3_wizzard.ab2@10376>   MOVE.l #hunkbegin,d2
000261A8 <AmiBlitz3_wizzard.ab2@10379>   CMP.l #-1,chipstart
000261AC <AmiBlitz3_wizzard.ab2@10380>   BEQ 'l100
000261B6 <AmiBlitz3_wizzard.ab2@10381>   MOVE.l #1,chipnum
000261B8 <AmiBlitz3_wizzard.ab2@10382>   MOVEQ.l #$24,D3
000261BE <AmiBlitz3_wizzard.ab2@10383>   MOVE.l chipsize,d2
000261C0 <AmiBlitz3_wizzard.ab2@10384>   ADDQ.l #3,d2
000261C2 <AmiBlitz3_wizzard.ab2@10385>   ASR.l #2,d2
000261C8 <AmiBlitz3_wizzard.ab2@10386>   MOVE.l d2,hunkend2+8
000261CE <AmiBlitz3_wizzard.ab2@10387>   MOVE.l d2,bsssize2
000261D8 <AmiBlitz3_wizzard.ab2@10388>   ADD.l #$40000000,bsssize2
000261DE <AmiBlitz3_wizzard.ab2@10389>   MOVE.l D0,tstsize1b
000261E4 <AmiBlitz3_wizzard.ab2@10390>   MOVE.l D0,tstsize2b
000261EA <AmiBlitz3_wizzard.ab2@10391>   MOVE.l #hunkbegin,d2
000261EE <AmiBlitz3_wizzard.ab2@10394>    BSR.w mywrite
000261F4 <AmiBlitz3_wizzard.ab2@10395>   MOVE.l destbufferstart,D2
000261FA <AmiBlitz3_wizzard.ab2@10396>   ADD.l noinits,D2
00026200 <AmiBlitz3_wizzard.ab2@10397>   MOVE.l objlen,D3
00026206 <AmiBlitz3_wizzard.ab2@10398>   SUB.l #moremem,d3
0002620C <AmiBlitz3_wizzard.ab2@10399>   SUB.l noinits,D3
00026216 <AmiBlitz3_wizzard.ab2@10400>   CMP.l #-1,bssstart
0002621A <AmiBlitz3_wizzard.ab2@10401>   BNE 'l40
00026224 <AmiBlitz3_wizzard.ab2@10402>   CMP.l #-1,chipstart
00026228 <AmiBlitz3_wizzard.ab2@10403>   BNE 'l40
0002622C <AmiBlitz3_wizzard.ab2@10404> BRA 'l41
00026232 <AmiBlitz3_wizzard.ab2@10407>   MOVE.l codeend,d1
00026234 <AmiBlitz3_wizzard.ab2@10408>     SUB.l d2,d1
00026236 <AmiBlitz3_wizzard.ab2@10409>     MOVE.l d1,d3
0002623C <AmiBlitz3_wizzard.ab2@10410>   SUB.l bsssize,d3
00026242 <AmiBlitz3_wizzard.ab2@10411>   SUB.l chipsize,d3
00026244 <AmiBlitz3_wizzard.ab2@10412>   MOVE.l D7,D1
00026248 <AmiBlitz3_wizzard.ab2@10413>   BSR.w mywrite
0002624E <AmiBlitz3_wizzard.ab2@10414>   MOVE.l objlen,D3
00026254 <AmiBlitz3_wizzard.ab2@10415>   SUB.l #moremem,d3
0002625A <AmiBlitz3_wizzard.ab2@10416>   SUB.l noinits,D3
0002625C <AmiBlitz3_wizzard.ab2@10417>   MOVE.l d3,d1
00026262 <AmiBlitz3_wizzard.ab2@10418>   MOVE.l destbufferstart,D2
00026268 <AmiBlitz3_wizzard.ab2@10419>   ADD.l noinits,D2
0002626A <AmiBlitz3_wizzard.ab2@10420>   ADD.l d2,d1
00026270 <AmiBlitz3_wizzard.ab2@10421>   SUB.l codeend,d1
00026272 <AmiBlitz3_wizzard.ab2@10422>   MOVE.l d1,d3
00026278 <AmiBlitz3_wizzard.ab2@10423>   MOVE.l codeend,d2
0002627A <AmiBlitz3_wizzard.ab2@10426>   MOVE.l d2,d1
0002627C <AmiBlitz3_wizzard.ab2@10427>   ADD.l d3,d1
0002627E <AmiBlitz3_wizzard.ab2@10428>   ADDQ.l #3,D1
00026284 <AmiBlitz3_wizzard.ab2@10429>   ANDI.l #$FFFFFFFC,D1
00026286 <AmiBlitz3_wizzard.ab2@10430>   SUB.l d2,d1
00026288 <AmiBlitz3_wizzard.ab2@10431>   MOVE.l d1,d3
0002628A <AmiBlitz3_wizzard.ab2@10432>   MOVE.l D7,D1
0002628E <AmiBlitz3_wizzard.ab2@10433>    BSR.w mywrite
00026298 <AmiBlitz3_wizzard.ab2@10434>   MOVE.l hunkoffsetcounter,tstsize3
0002629C <AmiBlitz3_wizzard.ab2@10435>    BEQ.w JL_0_7646
0002629E <AmiBlitz3_wizzard.ab2@10436>   MOVE.l D7,D1
000262A4 <AmiBlitz3_wizzard.ab2@10437>   MOVE.l #tstend,D2
000262A6 <AmiBlitz3_wizzard.ab2@10438>   MOVEQ.l #$04,D3
000262AA <AmiBlitz3_wizzard.ab2@10439>    BSR.w mywrite
000262B0 <AmiBlitz3_wizzard.ab2@10440>    MOVEA.l _execbase,A6
000262B6 <AmiBlitz3_wizzard.ab2@10441>    MOVE.l hunkoffsetcounter,d0
000262B8 <AmiBlitz3_wizzard.ab2@10442>    ASL.l #2,d0
000262BE <AmiBlitz3_wizzard.ab2@10443>    ADD.l #12,d0
000262C0 <AmiBlitz3_wizzard.ab2@10444>    MOVEQ #0,d1
000262C4 <AmiBlitz3_wizzard.ab2@10445>    JSR _AllocMem(a6)
000262C6 <AmiBlitz3_wizzard.ab2@10446>    TST.l d0
000262CA <AmiBlitz3_wizzard.ab2@10447>    BEQ nomem
000262D0 <AmiBlitz3_wizzard.ab2@10448>    MOVE.l noinits,D4
000262D2 <AmiBlitz3_wizzard.ab2@10449>    MOVE.l d5,-(a7)
000262D4 <AmiBlitz3_wizzard.ab2@10450>    MOVE.l d0,d5
000262D6 <AmiBlitz3_wizzard.ab2@10451>    MOVE.l d0,a1
000262DC <AmiBlitz3_wizzard.ab2@10452>    MOVEA.l hunkoffsetbase,A2
000262E4 <AmiBlitz3_wizzard.ab2@10453>    MOVE.b #0,newhunk
000262E8 <AmiBlitz3_wizzard.ab2@10456>   CMPA.w #$0,A2
000262EC <AmiBlitz3_wizzard.ab2@10457>    BEQ.w savehunk
000262F2 <AmiBlitz3_wizzard.ab2@10458>   MOVE.l destbufferstart,D2
000262F8 <AmiBlitz3_wizzard.ab2@10459>   ADD.l noinits,D2
000262FC <AmiBlitz3_wizzard.ab2@10460>   MOVE.l  $4(A2),d1
00026300 <AmiBlitz3_wizzard.ab2@10461>   BTST #31,d1
00026304 <AmiBlitz3_wizzard.ab2@10462>   BEQ 'lh1
0002630C <AmiBlitz3_wizzard.ab2@10463>   MOVE.b #1,newhunk
00026310 <AmiBlitz3_wizzard.ab2@10464> BRA 'lh3
00026314 <AmiBlitz3_wizzard.ab2@10467>   BTST #30,d1
00026318 <AmiBlitz3_wizzard.ab2@10468>   BEQ 'lh2
00026320 <AmiBlitz3_wizzard.ab2@10469>   MOVE.b #1,newhunk
00026324 <AmiBlitz3_wizzard.ab2@10470> BRA 'lh3
00026326 <AmiBlitz3_wizzard.ab2@10473>   ADD.l d1,d2
0002632C <AmiBlitz3_wizzard.ab2@10474>   CMP.l chipend,d2
00026330 <AmiBlitz3_wizzard.ab2@10475>   BLT 'l100
00026336 <AmiBlitz3_wizzard.ab2@10476>   SUB.l chipsize,d1
0002633C <AmiBlitz3_wizzard.ab2@10479>   CMP.l bssend,d2
00026340 <AmiBlitz3_wizzard.ab2@10480>   BLT 'l101
00026346 <AmiBlitz3_wizzard.ab2@10481>   SUB.l bsssize,d1
00026348 <AmiBlitz3_wizzard.ab2@10484>   MOVE.l d1,(a1)
0002634A <AmiBlitz3_wizzard.ab2@10485>   SUB.l D4,(A1)+
0002634C <AmiBlitz3_wizzard.ab2@10488>   MOVEA.l (A2),A2
00026350 <AmiBlitz3_wizzard.ab2@10489> BRA.w menu_createresidentfile__oloopb
00026352 <AmiBlitz3_wizzard.ab2@10493>   MOVE.l D7,D1
00026358 <AmiBlitz3_wizzard.ab2@10494>   MOVEA.l _dosbase,A6
00026362 <AmiBlitz3_wizzard.ab2@10495>   MOVE.l hunkoffsetnum,tstsize3
00026366 <AmiBlitz3_wizzard.ab2@10496>   BEQ 'ln1
0002636C <AmiBlitz3_wizzard.ab2@10497>   MOVE.l #tstend+4,d2
0002636E <AmiBlitz3_wizzard.ab2@10498>     MOVEQ #8,d3
00026372 <AmiBlitz3_wizzard.ab2@10499>    JSR _Write(A6)
00026374 <AmiBlitz3_wizzard.ab2@10500>   MOVE.l d7,d1
0002637A <AmiBlitz3_wizzard.ab2@10501>   MOVE.l hunkoffsetnum,d3
0002637C <AmiBlitz3_wizzard.ab2@10502>   ASL.l #2,d3
0002637E <AmiBlitz3_wizzard.ab2@10503>   MOVE.l d5,D2
00026382 <AmiBlitz3_wizzard.ab2@10504>   JSR _Write(a6)
00026388 <AmiBlitz3_wizzard.ab2@10507>   TST.b newhunk
0002638C <AmiBlitz3_wizzard.ab2@10508>   BEQ 'l10
00026392 <AmiBlitz3_wizzard.ab2@10509>   MOVEA.l hunkoffsetbase,A2
00026394 <AmiBlitz3_wizzard.ab2@10510>   MOVE.l d5,a0
00026396 <AmiBlitz3_wizzard.ab2@10511>   ADDQ #8,a0
0002639E <AmiBlitz3_wizzard.ab2@10512>   MOVE.l bssnum,-4(a0)
000263A0 <AmiBlitz3_wizzard.ab2@10513>   MOVEQ #0,d6
000263A4 <AmiBlitz3_wizzard.ab2@10516>   CMPA.w #$0,A2
000263A8 <AmiBlitz3_wizzard.ab2@10517>    BEQ.w 'lh3
000263AE <AmiBlitz3_wizzard.ab2@10518>   MOVE.l destbufferstart,D2
000263B4 <AmiBlitz3_wizzard.ab2@10519>   ADD.l noinits,D2
000263B8 <AmiBlitz3_wizzard.ab2@10520>   MOVE.l  $4(A2),d1
000263BC <AmiBlitz3_wizzard.ab2@10521>   BTST #30,d1
000263C0 <AmiBlitz3_wizzard.ab2@10522>   BEQ 'lh1
000263C4 <AmiBlitz3_wizzard.ab2@10523>   BCLR #30,d1
000263C6 <AmiBlitz3_wizzard.ab2@10524>   MOVE.l d1,(a0)
000263C8 <AmiBlitz3_wizzard.ab2@10525>   SUB.l D4,(A0)+
000263CA <AmiBlitz3_wizzard.ab2@10526>   ADDQ.l #1,d6
000263CC <AmiBlitz3_wizzard.ab2@10529>   MOVE.l (a2),a2
000263D0 <AmiBlitz3_wizzard.ab2@10530> BRA 'lh2
000263D2 <AmiBlitz3_wizzard.ab2@10533>   TST.l d6
000263D6 <AmiBlitz3_wizzard.ab2@10534>     BEQ 'lh10
000263D8 <AmiBlitz3_wizzard.ab2@10535>     MOVE.l d5,a0
000263DA <AmiBlitz3_wizzard.ab2@10536>     MOVE.l d6,(a0)
000263DC <AmiBlitz3_wizzard.ab2@10537>     MOVE.l d7,d1
000263DE <AmiBlitz3_wizzard.ab2@10538>     MOVE.l d5,d2
000263E0 <AmiBlitz3_wizzard.ab2@10539>     MOVE.l d6,d3
000263E2 <AmiBlitz3_wizzard.ab2@10540>     ASL.l #2,d3
000263E4 <AmiBlitz3_wizzard.ab2@10541>     ADDQ.l #8,d3
000263E8 <AmiBlitz3_wizzard.ab2@10542>     BSR.w mywrite
000263EE <AmiBlitz3_wizzard.ab2@10545>   MOVEA.l hunkoffsetbase,A2
000263F0 <AmiBlitz3_wizzard.ab2@10546>   MOVE.l d5,a0
000263F2 <AmiBlitz3_wizzard.ab2@10547>   ADDQ #8,a0
000263FA <AmiBlitz3_wizzard.ab2@10548>   MOVE.l chipnum,-4(a0)
000263FC <AmiBlitz3_wizzard.ab2@10549>   MOVEQ #0,d6
00026400 <AmiBlitz3_wizzard.ab2@10552>   CMPA.w #$0,A2
00026404 <AmiBlitz3_wizzard.ab2@10553>    BEQ.w 'lh30
0002640A <AmiBlitz3_wizzard.ab2@10554>   MOVE.l destbufferstart,D2
00026410 <AmiBlitz3_wizzard.ab2@10555>   ADD.l noinits,D2
00026414 <AmiBlitz3_wizzard.ab2@10556>   MOVE.l  $4(A2),d1
00026418 <AmiBlitz3_wizzard.ab2@10557>   BTST #31,d1
0002641C <AmiBlitz3_wizzard.ab2@10558>   BEQ 'lh11
00026420 <AmiBlitz3_wizzard.ab2@10559>   BCLR #31,d1
00026422 <AmiBlitz3_wizzard.ab2@10560>   MOVE.l d1,(a0)
00026424 <AmiBlitz3_wizzard.ab2@10561>   SUB.l D4,(A0)+
00026426 <AmiBlitz3_wizzard.ab2@10562>   ADDQ.l #1,d6
00026428 <AmiBlitz3_wizzard.ab2@10565>   MOVE.l (a2),a2
0002642C <AmiBlitz3_wizzard.ab2@10566> BRA 'lh20
0002642E <AmiBlitz3_wizzard.ab2@10569>   TST.l d6
00026432 <AmiBlitz3_wizzard.ab2@10570>     BEQ 'l10
00026434 <AmiBlitz3_wizzard.ab2@10571>     MOVE.l d5,a0
00026436 <AmiBlitz3_wizzard.ab2@10572>     MOVE.l d6,(a0)
00026438 <AmiBlitz3_wizzard.ab2@10573>     MOVE.l d7,d1
0002643A <AmiBlitz3_wizzard.ab2@10574>     MOVE.l d5,d2
0002643C <AmiBlitz3_wizzard.ab2@10575>     MOVE.l d6,d3
0002643E <AmiBlitz3_wizzard.ab2@10576>     ASL.l #2,d3
00026440 <AmiBlitz3_wizzard.ab2@10577>     ADDQ.l #8,d3
00026444 <AmiBlitz3_wizzard.ab2@10578>     BSR.w mywrite
0002644A <AmiBlitz3_wizzard.ab2@10582>    MOVEA.l _execbase,A6
00026450 <AmiBlitz3_wizzard.ab2@10583>    MOVE.l hunkoffsetcounter,d0
00026452 <AmiBlitz3_wizzard.ab2@10584>    ASL.l #2,d0
00026458 <AmiBlitz3_wizzard.ab2@10585>    ADD.l #12,d0
0002645A <AmiBlitz3_wizzard.ab2@10586>    MOVE.l d5,a1
0002645E <AmiBlitz3_wizzard.ab2@10587>    JSR _FreeMem(a6)
00026464 <AmiBlitz3_wizzard.ab2@10588>    MOVEA.l _dosbase,A6
00026466 <AmiBlitz3_wizzard.ab2@10589>    MOVE.l (a7)+,d5
0002646A <AmiBlitz3_wizzard.ab2@10590> BRA JL_0_7632
00026470 <AmiBlitz3_wizzard.ab2@10594>   MOVEA.l hunkoffsetbase,A2
00026476 <AmiBlitz3_wizzard.ab2@10595>   MOVE.l noinits,D4
0002647A <AmiBlitz3_wizzard.ab2@10598>   CMPA.w #$0,A2                                            ;write hunkoffsets
0002647E <AmiBlitz3_wizzard.ab2@10599>   BEQ.w JL_0_7632
00026482 <AmiBlitz3_wizzard.ab2@10600>   LEA $4(A2),A1
00026484 <AmiBlitz3_wizzard.ab2@10601>   SUB.l D4,(A1)
00026486 <AmiBlitz3_wizzard.ab2@10602>   MOVE.l D7,D1
00026488 <AmiBlitz3_wizzard.ab2@10603>   MOVE.l A1,D2
0002648A <AmiBlitz3_wizzard.ab2@10604>   MOVEQ.l #$04,D3
0002648E <AmiBlitz3_wizzard.ab2@10605>   BSR.w mywrite
00026492 <AmiBlitz3_wizzard.ab2@10606>   ADD.l D4,$4(A2)
00026494 <AmiBlitz3_wizzard.ab2@10607>   MOVEA.l (A2),A2
00026498 <AmiBlitz3_wizzard.ab2@10608> BRA.w JL_0_7610
0002649E <AmiBlitz3_wizzard.ab2@10611>   CLR.l tstsize3
000264A0 <AmiBlitz3_wizzard.ab2@10612>   MOVE.l D7,D1
000264A6 <AmiBlitz3_wizzard.ab2@10613>   MOVE.l #tstsize3,D2
000264A8 <AmiBlitz3_wizzard.ab2@10614>   MOVEQ.l #$04,D3
000264AC <AmiBlitz3_wizzard.ab2@10615>    BSR.w mywrite
000264B4 <AmiBlitz3_wizzard.ab2@10618>   BTST #$7,link_debuginfo
000264B8 <AmiBlitz3_wizzard.ab2@10619>    BEQ.w JL_0_7706
000264BE <AmiBlitz3_wizzard.ab2@10620>   MOVE.l #sysdebug,D2                                      ;debughunks
000264C0 <AmiBlitz3_wizzard.ab2@10621>   MOVEQ.l #$04,D3
000264C2 <AmiBlitz3_wizzard.ab2@10622>   MOVE.l D7,D1
000264C6 <AmiBlitz3_wizzard.ab2@10623>    BSR.w mywrite
000264CC <AmiBlitz3_wizzard.ab2@10624>   MOVEA.l labelbase,A2
000264D0 <AmiBlitz3_wizzard.ab2@10627>   CMPA.w #$0,A2
000264D4 <AmiBlitz3_wizzard.ab2@10628>    BEQ.w JL_0_76F8
000264DA <AmiBlitz3_wizzard.ab2@10629>   BTST #$0,$7(A2)
000264DE <AmiBlitz3_wizzard.ab2@10630>    BEQ.w JL_0_7682
000264E6 <AmiBlitz3_wizzard.ab2@10631>   CMPI.l #$1,$4(A2)
000264EA <AmiBlitz3_wizzard.ab2@10633>   BRA.w JL_0_76F2                                            ;only addr labels
000264EC <AmiBlitz3_wizzard.ab2@10635>   MOVEQ.l #$00,D4
000264F0 <AmiBlitz3_wizzard.ab2@10636>   MOVE.b $12(A2),D4
000264F4 <AmiBlitz3_wizzard.ab2@10637>   SUBI.w #$13,D4
000264F6 <AmiBlitz3_wizzard.ab2@10638>   ADDQ.w #2,D4
000264FA <AmiBlitz3_wizzard.ab2@10639>   ANDI.w #$FFFC,D4
000264FC <AmiBlitz3_wizzard.ab2@10640>   MOVE.l D4,D5
000264FE <AmiBlitz3_wizzard.ab2@10641>   LSR.w #2,D5
00026504 <AmiBlitz3_wizzard.ab2@10642>   MOVE.l D5,temp1
00026506 <AmiBlitz3_wizzard.ab2@10643>   LSL.w #2,D5
0002650C <AmiBlitz3_wizzard.ab2@10644>   MOVE.l #temp1,a1
00026512 <AmiBlitz3_wizzard.ab2@10646>   LEA debugstore,a0
00026514 <AmiBlitz3_wizzard.ab2@10647>   MOVE.l (a1),(a0)+
00026516 <AmiBlitz3_wizzard.ab2@10648>   MOVEQ.l #$04,D3
0002651A <AmiBlitz3_wizzard.ab2@10651>   LEA $13(A2),A1
0002651C <AmiBlitz3_wizzard.ab2@10652>   MOVE.l d4,d1
0002651E <AmiBlitz3_wizzard.ab2@10653>   SUBQ.l #1,d1
00026520 <AmiBlitz3_wizzard.ab2@10656>     MOVE.b (a1)+,d0
00026524 <AmiBlitz3_wizzard.ab2@10657>     BEQ 'l21
00026528 <AmiBlitz3_wizzard.ab2@10658>     CMP.b #"'",d0                                            ; ' does reassembler/assembler not like, so replace
0002652C <AmiBlitz3_wizzard.ab2@10659>     BNE 'ok
00026530 <AmiBlitz3_wizzard.ab2@10660>     MOVE.b #"_",d0
00026532 <AmiBlitz3_wizzard.ab2@10661> 'ok    MOVE.b d0,(a0)+                                      ; copy labeltext to debuginfo
00026536 <AmiBlitz3_wizzard.ab2@10662>   DBF d1,'l10
0002653A <AmiBlitz3_wizzard.ab2@10664> BRA 'l22
0002653C <AmiBlitz3_wizzard.ab2@10667>       CLR.b (a0)+
00026540 <AmiBlitz3_wizzard.ab2@10668>   DBF d1,'l21
00026542 <AmiBlitz3_wizzard.ab2@10671>   ADD.l d4,d3
00026544 <AmiBlitz3_wizzard.ab2@10676>   SUB.l D4,D5
00026548 <AmiBlitz3_wizzard.ab2@10677>    BEQ.w JL_0_76CE
0002654E <AmiBlitz3_wizzard.ab2@10678>   MOVE.l #zero,a1
00026550 <AmiBlitz3_wizzard.ab2@10680>   MOVE.l (a1),(a0)+
00026552 <AmiBlitz3_wizzard.ab2@10682>   ADD.l d5,d3
00026556 <AmiBlitz3_wizzard.ab2@10687>   MOVE.l $8(A2),D2
0002655C <AmiBlitz3_wizzard.ab2@10688>   SUB.l destbufferstart,D2
00026562 <AmiBlitz3_wizzard.ab2@10689>   SUB.l noinits,D2
00026568 <AmiBlitz3_wizzard.ab2@10690>   MOVE.l D2,temp1
0002656E <AmiBlitz3_wizzard.ab2@10691>   MOVE.l #temp1,a1
00026570 <AmiBlitz3_wizzard.ab2@10693>   MOVE.l (a1),(a0)+
00026576 <AmiBlitz3_wizzard.ab2@10694>   ADD.l #4,d3
0002657C <AmiBlitz3_wizzard.ab2@10695>   LEA debugstore,a0
0002657E <AmiBlitz3_wizzard.ab2@10696>   MOVE.l a0,d2
00026580 <AmiBlitz3_wizzard.ab2@10698>   MOVE.l D7,D1
00026584 <AmiBlitz3_wizzard.ab2@10699>   BSR.w mywrite
00026586 <AmiBlitz3_wizzard.ab2@10702>   MOVEA.l (A2),A2
0002658A <AmiBlitz3_wizzard.ab2@10703> BRA.w JL_0_7664
00026590 <AmiBlitz3_wizzard.ab2@10707>   MOVE.l #zero,D2
00026592 <AmiBlitz3_wizzard.ab2@10708>   MOVEQ.l #$04,D3
00026594 <AmiBlitz3_wizzard.ab2@10709>   MOVE.l D7,D1
00026598 <AmiBlitz3_wizzard.ab2@10710>   BSR.w mywrite
0002659A <AmiBlitz3_wizzard.ab2@10713>   MOVE.l D7,D1
000265A0 <AmiBlitz3_wizzard.ab2@10714>   MOVE.l #tstdone,D2                                      ;hunkend
000265A2 <AmiBlitz3_wizzard.ab2@10715>   MOVEQ.l #$04,D3
000265AC <AmiBlitz3_wizzard.ab2@10716>   CMPI.l #-1,bssstart
000265B0 <AmiBlitz3_wizzard.ab2@10717>   BEQ 'l10
000265B2 <AmiBlitz3_wizzard.ab2@10718>   MOVEQ #16,d3
000265B8 <AmiBlitz3_wizzard.ab2@10719>   MOVE.l #hunkend,d2
000265C2 <AmiBlitz3_wizzard.ab2@10720>   CMPI.l #-1,chipstart
000265C6 <AmiBlitz3_wizzard.ab2@10721>   BEQ 'l10
000265C8 <AmiBlitz3_wizzard.ab2@10722>   MOVE.l d7,d1
000265CA <AmiBlitz3_wizzard.ab2@10723>   MOVEQ #12,d3
000265CE <AmiBlitz3_wizzard.ab2@10724>   BSR.w mywrite
000265D8 <AmiBlitz3_wizzard.ab2@10727>   CMPI.l #-1,chipstart
000265DC <AmiBlitz3_wizzard.ab2@10728>   BEQ 'l11
000265DE <AmiBlitz3_wizzard.ab2@10729>   MOVEQ #12,d3
000265E4 <AmiBlitz3_wizzard.ab2@10730>   MOVE.l #hunkend2,d2
000265E6 <AmiBlitz3_wizzard.ab2@10731>   MOVE.l d7,d1
000265EA <AmiBlitz3_wizzard.ab2@10732>   BSR.w mywrite
000265EC <AmiBlitz3_wizzard.ab2@10733>   MOVE.l d7,d1
000265F2 <AmiBlitz3_wizzard.ab2@10734>   MOVE.l chipstart,d2
000265F8 <AmiBlitz3_wizzard.ab2@10735>   MOVE.l chipsize,d3
000265FC <AmiBlitz3_wizzard.ab2@10736>   BSR.w mywrite
000265FE <AmiBlitz3_wizzard.ab2@10737>   MOVEQ #4,d3
00026604 <AmiBlitz3_wizzard.ab2@10738>   MOVE.l #hunkend,d2
00026606 <AmiBlitz3_wizzard.ab2@10739>   MOVE.l d7,d1
0002660A <AmiBlitz3_wizzard.ab2@10742>   BSR.w mywrite
0002660C <AmiBlitz3_wizzard.ab2@10743>   MOVE.l D7,D1
00026612 <AmiBlitz3_wizzard.ab2@10744>   MOVEA.l _dosbase,A6
00026616 <AmiBlitz3_wizzard.ab2@10745>   JSR _Close(A6)
0002661E <AmiBlitz3_wizzard.ab2@10750>   BTST #$7,create_iconfile
00026622 <AmiBlitz3_wizzard.ab2@10751>    BEQ.w skip_createicon
00026628 <AmiBlitz3_wizzard.ab2@10753>   MOVEA.l ptr_newexefilename,A0
0002662A <AmiBlitz3_wizzard.ab2@10756>     TST.b (A0)+
0002662E <AmiBlitz3_wizzard.ab2@10757>   BNE.w JL_0_772C
00026630 <AmiBlitz3_wizzard.ab2@10758>   SUBQ.w #1,A0
00026632 <AmiBlitz3_wizzard.ab2@10759>   MOVE.l A0,-(A7)
00026638 <AmiBlitz3_wizzard.ab2@10760>   LEA str_infoextention2,A1
0002663A <AmiBlitz3_wizzard.ab2@10763>     MOVE.b (A1)+,(A0)+
0002663E <AmiBlitz3_wizzard.ab2@10764>   BNE.w JL_0_773A
00026644 <AmiBlitz3_wizzard.ab2@10766>   MOVE.l ptr_newexefilename,D1
00026646 <AmiBlitz3_wizzard.ab2@10767>   MOVEQ.l #-$02,D2
0002664C <AmiBlitz3_wizzard.ab2@10768>   MOVEA.l _dosbase,A6
00026650 <AmiBlitz3_wizzard.ab2@10769>   JSR _Lock(A6)
00026652 <AmiBlitz3_wizzard.ab2@10770>   MOVE.l D0,D1
00026656 <AmiBlitz3_wizzard.ab2@10771>   BEQ.w JL_0_775A                                          ;no icon exit so jump to create one  tomsmart1
0002665A <AmiBlitz3_wizzard.ab2@10772>   JSR _UnLock(A6)                                          ;OH!! there is a Icon so we must Unlock it  tomsmart1
0002665E <AmiBlitz3_wizzard.ab2@10773> BRA.w JL_0_7788                                            ;and skip writing a Icon  tomsmart1
00026664 <AmiBlitz3_wizzard.ab2@10776>   MOVE.l ptr_newexefilename,D1
0002666A <AmiBlitz3_wizzard.ab2@10777>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00026670 <AmiBlitz3_wizzard.ab2@10778>   MOVEA.l _dosbase,A6
00026674 <AmiBlitz3_wizzard.ab2@10779>    JSR _Open(A6)
00026676 <AmiBlitz3_wizzard.ab2@10780>   MOVE.l D0,D7
0002667A <AmiBlitz3_wizzard.ab2@10781>    BEQ.w JL_0_7788
00026680 <AmiBlitz3_wizzard.ab2@10782>   MOVE.l #icongfx_data,D2                                  ; icon graphics
00026686 <AmiBlitz3_wizzard.ab2@10783>   MOVE.l #icongfx_data_end-icongfx_data,D3                 ; length of gfx-data
00026688 <AmiBlitz3_wizzard.ab2@10784>   MOVE.l D7,D1
0002668E <AmiBlitz3_wizzard.ab2@10785>   MOVEA.l _dosbase,A6
00026692 <AmiBlitz3_wizzard.ab2@10786>   JSR _Write(A6)
00026694 <AmiBlitz3_wizzard.ab2@10787>   MOVE.l D7,D1
00026698 <AmiBlitz3_wizzard.ab2@10788>   JSR _Close(A6)
0002669A <AmiBlitz3_wizzard.ab2@10791>   MOVEA.l (A7)+,A0
0002669C <AmiBlitz3_wizzard.ab2@10792>   CLR.b (A0)
000266A2 <AmiBlitz3_wizzard.ab2@10797>   TST.b exdebug
000266A6 <AmiBlitz3_wizzard.ab2@10798>    BEQ JL_0_757Cb
000266AC <AmiBlitz3_wizzard.ab2@10799>   MOVE.w dontwrite,D1
000266B0 <AmiBlitz3_wizzard.ab2@10800>   BNE.w JL_0_757Cb
000266B6 <AmiBlitz3_wizzard.ab2@10801>   MOVE.l chipsize,d5
000266BC <AmiBlitz3_wizzard.ab2@10802>   MOVE.l bsssize,d3
000266C2 <AmiBlitz3_wizzard.ab2@10803>   MOVE.l chipstart,d7
000266C8 <AmiBlitz3_wizzard.ab2@10804>   MOVE.l bssstart,d6
000266CE <AmiBlitz3_wizzard.ab2@10805>   MOVEA.l hunkoffsetbase,A2
000266D4 <AmiBlitz3_wizzard.ab2@10806>   MOVEA.l destbufferstart,A1
000266D6 <AmiBlitz3_wizzard.ab2@10807>   MOVE.l A1,D2
000266DC <AmiBlitz3_wizzard.ab2@10808>   ADD.l noinits,D2
000266E2 <AmiBlitz3_wizzard.ab2@10809>   CLR.l hunkoffsetnum
000266E6 <AmiBlitz3_wizzard.ab2@10812>   CMPA.w #$0,A2
000266EA <AmiBlitz3_wizzard.ab2@10813>    BEQ.w JL_0_757Cb
000266EE <AmiBlitz3_wizzard.ab2@10814>   MOVE.l $4(A2),D0
000266F2 <AmiBlitz3_wizzard.ab2@10815>    LEA $0(a1,d0.l),a0
000266F4 <AmiBlitz3_wizzard.ab2@10816>    MOVE.l (a0),d1
000266F6 <AmiBlitz3_wizzard.ab2@10817>   TST.l d1
000266FA <AmiBlitz3_wizzard.ab2@10818>    BMI.w 'lm1
00026702 <AmiBlitz3_wizzard.ab2@10819>   MOVE.b #0,newhunk
0002670C <AmiBlitz3_wizzard.ab2@10820>   CMP.l #-1,chipstart
00026710 <AmiBlitz3_wizzard.ab2@10821>   BEQ 'l10
00026716 <AmiBlitz3_wizzard.ab2@10822>   CMP.l chipstart,d1
0002671A <AmiBlitz3_wizzard.ab2@10823>   BLT 'l10
00026722 <AmiBlitz3_wizzard.ab2@10824>   MOVE.b #1,newhunk
00026728 <AmiBlitz3_wizzard.ab2@10825>   CMP.l chipend,d1
0002672C <AmiBlitz3_wizzard.ab2@10826>   BGE 'l110
0002672E <AmiBlitz3_wizzard.ab2@10827>   ADD.l d7,(a0)
00026736 <AmiBlitz3_wizzard.ab2@10828>   ADD.l #$80000000,4(a2)
0002673A <AmiBlitz3_wizzard.ab2@10829> BRA JL_0_7576b
0002673E <AmiBlitz3_wizzard.ab2@10832>   ADD.l d5,0(a0)
00026748 <AmiBlitz3_wizzard.ab2@10835>   CMP.l #-1,bssstart
0002674C <AmiBlitz3_wizzard.ab2@10836>     BEQ 'l11
00026752 <AmiBlitz3_wizzard.ab2@10837>   CMP.l bssstart,d1
00026756 <AmiBlitz3_wizzard.ab2@10838>   BLT 'l11
0002675C <AmiBlitz3_wizzard.ab2@10839>   CMP.l bssend,d1
00026760 <AmiBlitz3_wizzard.ab2@10840>   BGE 'l111
00026766 <AmiBlitz3_wizzard.ab2@10841>   TST.b newhunk
0002676A <AmiBlitz3_wizzard.ab2@10842>   BEQ 'ln1
0002676C <AmiBlitz3_wizzard.ab2@10843>   ADD.l d5,(a0)
0002676E <AmiBlitz3_wizzard.ab2@10846>   ADD.l d6,(a0)
00026776 <AmiBlitz3_wizzard.ab2@10847>   ADD.l #$40000000,4(a2)
0002677A <AmiBlitz3_wizzard.ab2@10848> BRA JL_0_7576b
0002677E <AmiBlitz3_wizzard.ab2@10851>   ADD.l d3,0(a0)
00026780 <AmiBlitz3_wizzard.ab2@10854>   ADD.l D2,(A0)                                            ;only normal code offsets restore
00026786 <AmiBlitz3_wizzard.ab2@10857>   ADDQ.l #1,hunkoffsetnum
00026788 <AmiBlitz3_wizzard.ab2@10860>   MOVEA.l (A2),A2
0002678C <AmiBlitz3_wizzard.ab2@10861> BRA.w JL_0_755Eb
00026792 <AmiBlitz3_wizzard.ab2@10864>   JSR call_setpointernormal
00026796 <AmiBlitz3_wizzard.ab2@10865>   MOVEM.l (a7)+,d2-d7/a2-a6
00026798 <AmiBlitz3_wizzard.ab2@10867> RTS
0002679A <AmiBlitz3_wizzard.ab2@10871>   MOVE.l D2,-(A7)
000267A0 <AmiBlitz3_wizzard.ab2@10872>   MOVE.l destpointer,D2
000267A6 <AmiBlitz3_wizzard.ab2@10873>   SUB.l destbufferstart,D2
000267AA <AmiBlitz3_wizzard.ab2@10874>   BSR.w addhunkoffset
000267AC <AmiBlitz3_wizzard.ab2@10875>   MOVE.l (A7)+,D2
000267AE <AmiBlitz3_wizzard.ab2@10876> RTS
000267B2 <AmiBlitz3_wizzard.ab2@10880>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
000267B8 <AmiBlitz3_wizzard.ab2@10881>   TST.b nohunkoffset
000267BC <AmiBlitz3_wizzard.ab2@10882>   BNE 'l10
000267BE <AmiBlitz3_wizzard.ab2@10883>   MOVEQ.l #$8,D0
000267C0 <AmiBlitz3_wizzard.ab2@10884>   MOVEQ.l #$01,D1
000267C6 <AmiBlitz3_wizzard.ab2@10885>   MOVEA.l _execbase,A6
000267CC <AmiBlitz3_wizzard.ab2@10886>   MOVE.l mempool2,a0
000267D0 <AmiBlitz3_wizzard.ab2@10887>   JSR _AllocPooled(a6)
000267D6 <AmiBlitz3_wizzard.ab2@10889>   ADDQ.l #1,hunkoffsetcounter
000267D8 <AmiBlitz3_wizzard.ab2@10890>   MOVEA.l D0,A0
000267DE <AmiBlitz3_wizzard.ab2@10891>   MOVE.l hunkoffsetbase,(A0)
000267E4 <AmiBlitz3_wizzard.ab2@10892>   MOVE.l A0,hunkoffsetbase
000267E8 <AmiBlitz3_wizzard.ab2@10893>   MOVE.l D2,$4(A0)
000267EC <AmiBlitz3_wizzard.ab2@10896>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
000267EE <AmiBlitz3_wizzard.ab2@10897> RTS
000267F4 <AmiBlitz3_wizzard.ab2@10901>   CLR.l hunkoffsetbase
000267FA <AmiBlitz3_wizzard.ab2@10902>   MOVEA.l _execbase,A6
00026800 <AmiBlitz3_wizzard.ab2@10903>   MOVEA.l hunkoffsetbase,A2
00026804 <AmiBlitz3_wizzard.ab2@10906>     CMPA.w #$0,A2
00026808 <AmiBlitz3_wizzard.ab2@10907>      BEQ.w JL_0_7988
0002680A <AmiBlitz3_wizzard.ab2@10908>     MOVEA.l A2,A1
0002680C <AmiBlitz3_wizzard.ab2@10909>     MOVEQ.l #$08,D0
0002680E <AmiBlitz3_wizzard.ab2@10910>     MOVEA.l (A2),A2
00026814 <AmiBlitz3_wizzard.ab2@10911>     MOVE.l mempool2,a0
00026818 <AmiBlitz3_wizzard.ab2@10912>     JSR _FreePooled(A6)
0002681C <AmiBlitz3_wizzard.ab2@10913> BRA.w JL_0_7972
00026822 <AmiBlitz3_wizzard.ab2@10916>   CLR.l hunkoffsetcounter
00026824 <AmiBlitz3_wizzard.ab2@10917> RTS
0002683C <AmiBlitz3_wizzard.ab2@10920> cmakebuff:  Ds.l 6                                          ;dc.w 12 org source
00026840 <AmiBlitz3_wizzard.ab2@10921> cmakea5:    Ds.l 1
00026842 <AmiBlitz3_wizzard.ab2@10922> cmake:      Ds.w 1
000268C2 <AmiBlitz3_wizzard.ab2@10923> cmakebak:   Ds.l 32                                         ;ds.b 128 org source
000268C8 <AmiBlitz3_wizzard.ab2@10927>   MOVE.l A5,lastsourcepos
000268D2 <AmiBlitz3_wizzard.ab2@10928>   MOVE.w instringon,oldqflag
000268D4 <AmiBlitz3_wizzard.ab2@10932>   MOVEQ.l #$00,D0
000268D6 <AmiBlitz3_wizzard.ab2@10933>   MOVE.b (A5)+,D0
000268DA <AmiBlitz3_wizzard.ab2@10934>    BEQ getcharb__donea
000268DE <AmiBlitz3_wizzard.ab2@10935>   BPL getcharb__stuffa
000268E0 <AmiBlitz3_wizzard.ab2@10936>   LSL.l #8,D0
000268E2 <AmiBlitz3_wizzard.ab2@10937>   MOVE.b (A5)+,D0
000268E4 <AmiBlitz3_wizzard.ab2@10938>   MOVE.l a1,-(a7)
000268EA <AmiBlitz3_wizzard.ab2@10939>   LEA replacedat,a1
000268EE <AmiBlitz3_wizzard.ab2@10940>   Dc.w $4a71,$0a00                                         ;TST.w 0(a1,d0.l*2)
000268F2 <AmiBlitz3_wizzard.ab2@10941>   BEQ getchar__l10
000268F6 <AmiBlitz3_wizzard.ab2@10942>   Dc.w $3031,$0a00                                         ;MOVE.w 0(a1,d0.l*2),d0
000268F8 <AmiBlitz3_wizzard.ab2@10946>   MOVE.l (a7)+,a1
000268FC <AmiBlitz3_wizzard.ab2@10947> BRA getchar__weiter
00026900 <AmiBlitz3_wizzard.ab2@10950>   CMP.w #$22,D0
00026904 <AmiBlitz3_wizzard.ab2@10951>    BEQ.b swapquotea
00026908 <AmiBlitz3_wizzard.ab2@10952>   CMP.w #$3B,D0
0002690C <AmiBlitz3_wizzard.ab2@10953>    BNE.b getcharb__donea
00026912 <AmiBlitz3_wizzard.ab2@10954>   TST.w instringon
00026916 <AmiBlitz3_wizzard.ab2@10955>    BNE.b getcharb__donea
00026918 <AmiBlitz3_wizzard.ab2@10958>   MOVE.b (A5)+,D0
0002691C <AmiBlitz3_wizzard.ab2@10959>              BEQ getchar__l1
00026920 <AmiBlitz3_wizzard.ab2@10960>              CMP.b #":",d0
00026924 <AmiBlitz3_wizzard.ab2@10961>              BNE getcharb__loopa                                ;:@
00026928 <AmiBlitz3_wizzard.ab2@10962>              CMP.b #"@",(a5)
0002692C <AmiBlitz3_wizzard.ab2@10963>              BNE getcharb__loopa
0002692E <AmiBlitz3_wizzard.ab2@10964>              ADDQ #1,a5
00026934 <AmiBlitz3_wizzard.ab2@10967>   MOVE.w D0,lastchar
00026938 <AmiBlitz3_wizzard.ab2@10970> BRA.s getchar__weiter
0002693E <AmiBlitz3_wizzard.ab2@10973>   NOT.w instringon
00026944 <AmiBlitz3_wizzard.ab2@10976>    MOVE.w D0,lastchar
00026948 <AmiBlitz3_wizzard.ab2@10977>    BEQ.w getchar__done
0002694C <AmiBlitz3_wizzard.ab2@10978>    BPL.w getchar__done2
00026950 <AmiBlitz3_wizzard.ab2@10979>   CMP.w #-$7FE4,D0                                         ;cnif
00026954 <AmiBlitz3_wizzard.ab2@10980>    BEQ.w getchar__cnif
00026958 <AmiBlitz3_wizzard.ab2@10981>   CMP.w #-$7FE3,D0                                         ;csif
0002695C <AmiBlitz3_wizzard.ab2@10982>    BEQ.w getchar__csif
00026960 <AmiBlitz3_wizzard.ab2@10983>   CMP.w #-$7FE2,D0                                         ;celse
00026964 <AmiBlitz3_wizzard.ab2@10984>    BEQ.w getchar__celse
00026968 <AmiBlitz3_wizzard.ab2@10985>   CMP.w #-$7FE1,D0                                         ;cend
0002696C <AmiBlitz3_wizzard.ab2@10986>    BEQ.w getchar__cend
00026972 <AmiBlitz3_wizzard.ab2@10989>   TST.w skipcode
00026976 <AmiBlitz3_wizzard.ab2@10990>    BEQ.w getchar
0002697A <AmiBlitz3_wizzard.ab2@10991>   CMP.w #$7E,D0
0002697E <AmiBlitz3_wizzard.ab2@10992>    BEQ.w getchar__cmake                                         ;tilde
00026982 <AmiBlitz3_wizzard.ab2@10993>   CMP.w #$2,D0
00026986 <AmiBlitz3_wizzard.ab2@10994>    BNE.w getchar__notunpath
0002698C <AmiBlitz3_wizzard.ab2@10995>   MOVEA.l usedfrom,A5
00026992 <AmiBlitz3_wizzard.ab2@10996>   CLR.l usedfrom
00026996 <AmiBlitz3_wizzard.ab2@10997> BRA.w getchar
0002699A <AmiBlitz3_wizzard.ab2@11000>   CMP.w #$1,D0
0002699E <AmiBlitz3_wizzard.ab2@11001>    BNE.w getchar__done
000269A2 <AmiBlitz3_wizzard.ab2@11005>   MOVEA.l cmakea5(PC),A5
000269A6 <AmiBlitz3_wizzard.ab2@11006> BRA.w getchar
000269AC <AmiBlitz3_wizzard.ab2@11009>   TST.w cmake
000269B0 <AmiBlitz3_wizzard.ab2@11010>    BNE.w getchar__done
000269B4 <AmiBlitz3_wizzard.ab2@11012>   MOVEM.l D0-D7/A0-A6,-(A7)
000269BA <AmiBlitz3_wizzard.ab2@11013>   LEA cmake,a0                                         ;reass
000269BC <AmiBlitz3_wizzard.ab2@11014>   NOT.w (a0)
000269C0 <AmiBlitz3_wizzard.ab2@11015>   LEA cmakebak(PC),A0
000269C6 <AmiBlitz3_wizzard.ab2@11016>   LEA ptr_parameterstore,A1
000269C8 <AmiBlitz3_wizzard.ab2@11017>   MOVEQ.l #$1F,D0
000269CA <AmiBlitz3_wizzard.ab2@11020>     MOVE.l (A1)+,(A0)+
000269CE <AmiBlitz3_wizzard.ab2@11021>   DBF D0,getchar__cmloop
000269D4 <AmiBlitz3_wizzard.ab2@11024>    JSR AJL_0_BF6E
000269D8 <AmiBlitz3_wizzard.ab2@11025>   CMP.w #$7E,D0
000269DC <AmiBlitz3_wizzard.ab2@11026>    BNE.w syntaxerr
000269E2 <AmiBlitz3_wizzard.ab2@11027>   MOVE.l A5,cmakea5                                      ;tilde
000269E6 <AmiBlitz3_wizzard.ab2@11028>   LEA cmakebuff(PC),A0
000269E8 <AmiBlitz3_wizzard.ab2@11029>   MOVE.l D3,D2
000269EC <AmiBlitz3_wizzard.ab2@11030>   BSR.w makelong
000269EE <AmiBlitz3_wizzard.ab2@11031>   ADDQ.b #1,(A0)
000269F4 <AmiBlitz3_wizzard.ab2@11032>   LEA cmake,a0
000269F6 <AmiBlitz3_wizzard.ab2@11033>   NOT.w (a0)                                               ;reass
000269FA <AmiBlitz3_wizzard.ab2@11034>   LEA cmakebak(PC),A0
00026A00 <AmiBlitz3_wizzard.ab2@11035>   LEA ptr_parameterstore,A1
00026A02 <AmiBlitz3_wizzard.ab2@11036>   MOVEQ.l #$1F,D0
00026A04 <AmiBlitz3_wizzard.ab2@11039>     MOVE.l (A0)+,(A1)+
00026A08 <AmiBlitz3_wizzard.ab2@11040>   DBF D0,getchar__cmloop2
00026A0C <AmiBlitz3_wizzard.ab2@11042>   MOVEM.l (A7)+,D0-D7/A0-A6
00026A10 <AmiBlitz3_wizzard.ab2@11043>   LEA cmakebuff(PC),A5
00026A14 <AmiBlitz3_wizzard.ab2@11044> BRA.w getchar
00026A16 <AmiBlitz3_wizzard.ab2@11047> RTS
00026A20 <AmiBlitz3_wizzard.ab2@11051>   MOVE.l linenumat,ciflineat                               ;csif
00026A26 <AmiBlitz3_wizzard.ab2@11052>   TST.w skipcode
00026A2A <AmiBlitz3_wizzard.ab2@11053>    BEQ.w getchar__incnest
00026A2E <AmiBlitz3_wizzard.ab2@11054>    BSR.w get1bytemain
00026A30 <AmiBlitz3_wizzard.ab2@11055>    MOVE.l a1,-(a7)
00026A36 <AmiBlitz3_wizzard.ab2@11056>    JSR JL_0_C492
00026A38 <AmiBlitz3_wizzard.ab2@11057>    MOVE.l (a7)+,a1
00026A3C <AmiBlitz3_wizzard.ab2@11058> BRA.w getchar
00026A46 <AmiBlitz3_wizzard.ab2@11061>   MOVE.l linenumat,ciflineat                               ;cnif
00026A4C <AmiBlitz3_wizzard.ab2@11062>   TST.w skipcode
00026A50 <AmiBlitz3_wizzard.ab2@11063>    BEQ.w getchar__incnest
00026A54 <AmiBlitz3_wizzard.ab2@11064>    BSR.w get1bytemain
00026A58 <AmiBlitz3_wizzard.ab2@11065>    CMP.b #"@",d0
00026A5C <AmiBlitz3_wizzard.ab2@11066>    BNE getchar__cnif_ok2
00026A60 <AmiBlitz3_wizzard.ab2@11067>    BSR.w get1bytemain
00026A68 <AmiBlitz3_wizzard.ab2@11068>    MOVE.b #1,incnif
00026A6E <AmiBlitz3_wizzard.ab2@11069>    JSR findconstant2
00026A72 <AmiBlitz3_wizzard.ab2@11070>    BEQ getchar__cnif_ok2
00026A78 <AmiBlitz3_wizzard.ab2@11073>    MOVE.w fast,-(a7)
00026A7E <AmiBlitz3_wizzard.ab2@11074>    CLR.b fast
00026A80 <AmiBlitz3_wizzard.ab2@11075>    MOVE.l a1,-(a7)
00026A86 <AmiBlitz3_wizzard.ab2@11076>    JSR JL_0_C47E
00026A8C <AmiBlitz3_wizzard.ab2@11077>    CLR.b incnif
00026A8E <AmiBlitz3_wizzard.ab2@11078>    MOVE.l (a7)+,a1
00026A94 <AmiBlitz3_wizzard.ab2@11079>    MOVE.w (a7)+,fast
00026A98 <AmiBlitz3_wizzard.ab2@11080> BRA.w getchar
00026A9E <AmiBlitz3_wizzard.ab2@11083>   ADDQ.w #1,connest
00026AA2 <AmiBlitz3_wizzard.ab2@11084> BRA.w getchar
00026AA8 <AmiBlitz3_wizzard.ab2@11087>   MOVE.w connest,D0                                      ;celse
00026AAC <AmiBlitz3_wizzard.ab2@11088>    BNE.w getchar
00026AB2 <AmiBlitz3_wizzard.ab2@11089>   NOT.w skipcode
00026AB6 <AmiBlitz3_wizzard.ab2@11090> BRA.w getchar
00026ABC <AmiBlitz3_wizzard.ab2@11093>   SUBQ.w #1,connest                                      ;cend
00026AC0 <AmiBlitz3_wizzard.ab2@11094>    BPL.w getchar
00026AC6 <AmiBlitz3_wizzard.ab2@11095>   ADDQ.w #1,connest
00026ACC <AmiBlitz3_wizzard.ab2@11096>   MOVEA.l concomsp,A0
00026AD2 <AmiBlitz3_wizzard.ab2@11097>   CMPA.l #concomstack,A0
00026AD6 <AmiBlitz3_wizzard.ab2@11098>    BEQ.w nociferr
00026AD8 <AmiBlitz3_wizzard.ab2@11099>   SUBQ.w #2,A0
00026ADE <AmiBlitz3_wizzard.ab2@11100>   MOVE.l A0,concomsp
00026AE4 <AmiBlitz3_wizzard.ab2@11101>   MOVE.w (A0),skipcode
00026AE8 <AmiBlitz3_wizzard.ab2@11102> BRA.w getchar
00026AEC <AmiBlitz3_wizzard.ab2@11105> ciflineat:   Ds.l 1
00026AEE <AmiBlitz3_wizzard.ab2@11113>   MOVEQ.l #$00,D0
00026AF0 <AmiBlitz3_wizzard.ab2@11114>   MOVE.b (A5)+,D0
00026AF4 <AmiBlitz3_wizzard.ab2@11115>    BEQ.b getcharb__done
00026AF8 <AmiBlitz3_wizzard.ab2@11116>    BPL.b getcharb__stuff
00026AFA <AmiBlitz3_wizzard.ab2@11117>   LSL.w #8,D0
00026AFC <AmiBlitz3_wizzard.ab2@11118>   MOVE.b (A5)+,D0
00026AFE <AmiBlitz3_wizzard.ab2@11119> RTS
00026B02 <AmiBlitz3_wizzard.ab2@11122>   CMP.w #$22,D0
00026B06 <AmiBlitz3_wizzard.ab2@11123>    BEQ.b swapquote
00026B0A <AmiBlitz3_wizzard.ab2@11124>   CMP.w #$3B,D0
00026B0E <AmiBlitz3_wizzard.ab2@11125>    BNE.b getcharb__done
00026B14 <AmiBlitz3_wizzard.ab2@11126>   TST.w instringon
00026B18 <AmiBlitz3_wizzard.ab2@11127>    BNE.b getcharb__done
00026B1A <AmiBlitz3_wizzard.ab2@11130>   MOVE.b (A5)+,D0
00026B1E <AmiBlitz3_wizzard.ab2@11131>             BEQ getcharb__loop_l1
00026B22 <AmiBlitz3_wizzard.ab2@11132>             CMP.b #":",d0
00026B26 <AmiBlitz3_wizzard.ab2@11133>             BNE getcharb__loop
00026B2A <AmiBlitz3_wizzard.ab2@11134>             CMP.b #"@",(a5)
00026B2E <AmiBlitz3_wizzard.ab2@11135>             BNE getcharb__loop
00026B34 <AmiBlitz3_wizzard.ab2@11138>   MOVE.w D0,lastchar
00026B36 <AmiBlitz3_wizzard.ab2@11141> RTS
00026B3C <AmiBlitz3_wizzard.ab2@11144>   NOT.w instringon
00026B3E <AmiBlitz3_wizzard.ab2@11145> RTS
00026B42 <AmiBlitz3_wizzard.ab2@11149>   BSR.w getchar
00026B48 <AmiBlitz3_wizzard.ab2@11150>   TST.w instringon
00026B4C <AmiBlitz3_wizzard.ab2@11151>    BNE.w get1byte__skip
00026B50 <AmiBlitz3_wizzard.ab2@11152>   CMP.w #$20,D0
00026B54 <AmiBlitz3_wizzard.ab2@11153>    BEQ.w get1byte_
00026B56 <AmiBlitz3_wizzard.ab2@11156> RTS
00026B70 <AmiBlitz3_wizzard.ab2@11159> gs:        Ds.w 13                                         ;ds.b 26  org source
00026B74 <AmiBlitz3_wizzard.ab2@11160>            Dc.b $F6,$E4,$FC,$D6                            ;dc.b 228,246,252,196,214,220 org source
00026B76 <AmiBlitz3_wizzard.ab2@11161>            Dc.b $C4,$DC
00026B7A <AmiBlitz3_wizzard.ab2@11167>   BSR.w getchar
00026B80 <AmiBlitz3_wizzard.ab2@11168>   TST.w instringon
00026B84 <AmiBlitz3_wizzard.ab2@11169>    BNE.w gchar2
00026B88 <AmiBlitz3_wizzard.ab2@11170>   CMP.w #$20,D0
00026B8C <AmiBlitz3_wizzard.ab2@11171>    BEQ.w get1bytemain
00026B8E <AmiBlitz3_wizzard.ab2@11173>   TST.w D0
00026B92 <AmiBlitz3_wizzard.ab2@11176>   BEQ.b get1bytemain__zero
00026B98 <AmiBlitz3_wizzard.ab2@11177>   TST.w instringon
00026B9C <AmiBlitz3_wizzard.ab2@11178>    BEQ.b get1bytemain__noqoute
00026BA0 <AmiBlitz3_wizzard.ab2@11179>   CMP.b #$20,D0
00026BA4 <AmiBlitz3_wizzard.ab2@11180>    BCC.b get1bytemain__skip
00026BA8 <AmiBlitz3_wizzard.ab2@11181>   MOVE.b gs(PC,D0.W),D0
00026BAA <AmiBlitz3_wizzard.ab2@11182> RTS
00026BAE <AmiBlitz3_wizzard.ab2@11185>   CMP.w #-$7FDE,D0                                         ;cmp #$8000+34,d0 org source  ;else
00026BB2 <AmiBlitz3_wizzard.ab2@11186>    BEQ.b get1bytemain__zero
00026BB6 <AmiBlitz3_wizzard.ab2@11187>   CMP.w #$3A,D0
00026BBA <AmiBlitz3_wizzard.ab2@11188>    BEQ.b get1bytemain__zero
00026BBC <AmiBlitz3_wizzard.ab2@11191>   TST.w D0
00026BBE <AmiBlitz3_wizzard.ab2@11194> RTS
00026BC4 <AmiBlitz3_wizzard.ab2@11198>   MOVE.w lastchar,D0
00026BC8 <AmiBlitz3_wizzard.ab2@11199> BRA.w gchar2
00026BD2 <AmiBlitz3_wizzard.ab2@11203>   MOVE.w oldqflag,instringon
00026BD8 <AmiBlitz3_wizzard.ab2@11204>   MOVEA.l lastsourcepos,A5
00026BDA <AmiBlitz3_wizzard.ab2@11205> RTS
00026BE0 <AmiBlitz3_wizzard.ab2@11209>   MOVE.w D0,locchar
00026BE6 <AmiBlitz3_wizzard.ab2@11210>   MOVE.l A5,locloc
00026BE8 <AmiBlitz3_wizzard.ab2@11211> RTS
00026BEE <AmiBlitz3_wizzard.ab2@11215>   MOVEA.l locloc,A5
00026BF4 <AmiBlitz3_wizzard.ab2@11216>   MOVE.w locchar,D0
00026BFA <AmiBlitz3_wizzard.ab2@11217>   MOVE.w D0,lastchar
00026BFC <AmiBlitz3_wizzard.ab2@11218> RTS
00026BFC <internal_errormsg.ab2@1> XINCLUDE "internal_errormsg.ab2"
00026C44 <internal_errormsg.ab2@9> XINCLUDE "internal_errormsg.ab2"
00026C96 <internal_errormsg.ab2@10> XINCLUDE "internal_errormsg.ab2"
00026CD4 <internal_errormsg.ab2@11> XINCLUDE "internal_errormsg.ab2"
00026D12 <internal_errormsg.ab2@12> XINCLUDE "internal_errormsg.ab2"
00026D3C <internal_errormsg.ab2@13> XINCLUDE "internal_errormsg.ab2"
00026D6C <internal_errormsg.ab2@14> XINCLUDE "internal_errormsg.ab2"
00026DB6 <internal_errormsg.ab2@15> XINCLUDE "internal_errormsg.ab2"
00026E3C <internal_errormsg.ab2@16> XINCLUDE "internal_errormsg.ab2"
00026E9E <internal_errormsg.ab2@17> XINCLUDE "internal_errormsg.ab2"
00026EE6 <internal_errormsg.ab2@18> XINCLUDE "internal_errormsg.ab2"
00026F38 <internal_errormsg.ab2@19> XINCLUDE "internal_errormsg.ab2"
00026F82 <internal_errormsg.ab2@20> XINCLUDE "internal_errormsg.ab2"
00026FD0 <internal_errormsg.ab2@21> XINCLUDE "internal_errormsg.ab2"
00027006 <internal_errormsg.ab2@22> XINCLUDE "internal_errormsg.ab2"
00027034 <internal_errormsg.ab2@23> XINCLUDE "internal_errormsg.ab2"
0002704E <internal_errormsg.ab2@24> XINCLUDE "internal_errormsg.ab2"
0002706C <internal_errormsg.ab2@25> XINCLUDE "internal_errormsg.ab2"
000270EA <internal_errormsg.ab2@26> XINCLUDE "internal_errormsg.ab2"
00027114 <internal_errormsg.ab2@27> XINCLUDE "internal_errormsg.ab2"
0002713A <internal_errormsg.ab2@28> XINCLUDE "internal_errormsg.ab2"
0002715A <internal_errormsg.ab2@29> XINCLUDE "internal_errormsg.ab2"
00027178 <internal_errormsg.ab2@30> XINCLUDE "internal_errormsg.ab2"
00027198 <internal_errormsg.ab2@31> XINCLUDE "internal_errormsg.ab2"
000271C0 <internal_errormsg.ab2@32> XINCLUDE "internal_errormsg.ab2"
000271EA <internal_errormsg.ab2@33> XINCLUDE "internal_errormsg.ab2"
000271EC <internal_errormsg.ab2@36> XINCLUDE "internal_errormsg.ab2"
00027208 <internal_errormsg.ab2@39> XINCLUDE "internal_errormsg.ab2"
0002722E <internal_errormsg.ab2@40> XINCLUDE "internal_errormsg.ab2"
00027246 <internal_errormsg.ab2@41> XINCLUDE "internal_errormsg.ab2"
000272A4 <internal_errormsg.ab2@42> XINCLUDE "internal_errormsg.ab2"
000272C6 <internal_errormsg.ab2@43> XINCLUDE "internal_errormsg.ab2"
000272EC <internal_errormsg.ab2@44> XINCLUDE "internal_errormsg.ab2"
00027314 <internal_errormsg.ab2@45> XINCLUDE "internal_errormsg.ab2"
00027334 <internal_errormsg.ab2@46> XINCLUDE "internal_errormsg.ab2"
00027358 <internal_errormsg.ab2@47> XINCLUDE "internal_errormsg.ab2"
0002739E <internal_errormsg.ab2@48> XINCLUDE "internal_errormsg.ab2"
000273C2 <internal_errormsg.ab2@49> XINCLUDE "internal_errormsg.ab2"
000273E6 <internal_errormsg.ab2@50> XINCLUDE "internal_errormsg.ab2"
00027406 <internal_errormsg.ab2@51> XINCLUDE "internal_errormsg.ab2"
0002742A <internal_errormsg.ab2@52> XINCLUDE "internal_errormsg.ab2"
0002744C <internal_errormsg.ab2@53> XINCLUDE "internal_errormsg.ab2"
00027478 <internal_errormsg.ab2@54> XINCLUDE "internal_errormsg.ab2"
0002749E <internal_errormsg.ab2@55> XINCLUDE "internal_errormsg.ab2"
000274A8 <internal_errormsg.ab2@58> XINCLUDE "internal_errormsg.ab2"
000274CE <internal_errormsg.ab2@59> XINCLUDE "internal_errormsg.ab2"
00027520 <internal_errormsg.ab2@61> XINCLUDE "internal_errormsg.ab2"
0002758A <internal_errormsg.ab2@62> XINCLUDE "internal_errormsg.ab2"
000275E8 <internal_errormsg.ab2@63> XINCLUDE "internal_errormsg.ab2"
00027656 <internal_errormsg.ab2@64> XINCLUDE "internal_errormsg.ab2"
00027692 <internal_errormsg.ab2@65> XINCLUDE "internal_errormsg.ab2"
000276B0 <internal_errormsg.ab2@66> XINCLUDE "internal_errormsg.ab2"
000276D6 <internal_errormsg.ab2@67> XINCLUDE "internal_errormsg.ab2"
00027706 <internal_errormsg.ab2@68> XINCLUDE "internal_errormsg.ab2"
0002772A <internal_errormsg.ab2@69> XINCLUDE "internal_errormsg.ab2"
00027758 <internal_errormsg.ab2@70> XINCLUDE "internal_errormsg.ab2"
0002777C <internal_errormsg.ab2@71> XINCLUDE "internal_errormsg.ab2"
00027792 <internal_errormsg.ab2@72> XINCLUDE "internal_errormsg.ab2"
000277A8 <internal_errormsg.ab2@73> XINCLUDE "internal_errormsg.ab2"
000277AE <internal_errormsg.ab2@76> XINCLUDE "internal_errormsg.ab2"
000277B6 <internal_errormsg.ab2@78> XINCLUDE "internal_errormsg.ab2"
000277B8 <internal_errormsg.ab2@79> XINCLUDE "internal_errormsg.ab2"
000277BC <internal_errormsg.ab2@80> XINCLUDE "internal_errormsg.ab2"
000277C4 <internal_errormsg.ab2@81> XINCLUDE "internal_errormsg.ab2"
000277C6 <internal_errormsg.ab2@82> XINCLUDE "internal_errormsg.ab2"
00027800 <internal_errormsg.ab2@84> XINCLUDE "internal_errormsg.ab2"
0002782C <internal_errormsg.ab2@85> XINCLUDE "internal_errormsg.ab2"
0002785C <internal_errormsg.ab2@86> XINCLUDE "internal_errormsg.ab2"
00027894 <internal_errormsg.ab2@87> XINCLUDE "internal_errormsg.ab2"
000278EE <internal_errormsg.ab2@88> XINCLUDE "internal_errormsg.ab2"
000278F0 <internal_errormsg.ab2@92> XINCLUDE "internal_errormsg.ab2"
000278F4 <internal_errormsg.ab2@93> XINCLUDE "internal_errormsg.ab2"
000278F8 <internal_errormsg.ab2@94> XINCLUDE "internal_errormsg.ab2"
000278FC <internal_errormsg.ab2@95> XINCLUDE "internal_errormsg.ab2"
00027900 <internal_errormsg.ab2@96> XINCLUDE "internal_errormsg.ab2"
00027904 <internal_errormsg.ab2@97> XINCLUDE "internal_errormsg.ab2"
00027908 <internal_errormsg.ab2@98> XINCLUDE "internal_errormsg.ab2"
0002790C <internal_errormsg.ab2@99> XINCLUDE "internal_errormsg.ab2"
00027910 <internal_errormsg.ab2@100> XINCLUDE "internal_errormsg.ab2"
00027914 <internal_errormsg.ab2@101> XINCLUDE "internal_errormsg.ab2"
00027918 <internal_errormsg.ab2@102> XINCLUDE "internal_errormsg.ab2"
00027956 <internal_errormsg.ab2@103> XINCLUDE "internal_errormsg.ab2"
00027988 <internal_errormsg.ab2@105> XINCLUDE "internal_errormsg.ab2"
000279A6 <internal_errormsg.ab2@106> XINCLUDE "internal_errormsg.ab2"
000279D0 <internal_errormsg.ab2@107> XINCLUDE "internal_errormsg.ab2"
000279EC <internal_errormsg.ab2@108> XINCLUDE "internal_errormsg.ab2"
00027A06 <internal_errormsg.ab2@109> XINCLUDE "internal_errormsg.ab2"
00027A24 <internal_errormsg.ab2@110> XINCLUDE "internal_errormsg.ab2"
00027A48 <internal_errormsg.ab2@111> XINCLUDE "internal_errormsg.ab2"
00027A4A <internal_errormsg.ab2@114> XINCLUDE "internal_errormsg.ab2"
00027A9C <internal_errormsg.ab2@115> XINCLUDE "internal_errormsg.ab2"
00027AC4 <internal_errormsg.ab2@117> XINCLUDE "internal_errormsg.ab2"
00027AEC <internal_errormsg.ab2@118> XINCLUDE "internal_errormsg.ab2"
00027B08 <internal_errormsg.ab2@122> XINCLUDE "internal_errormsg.ab2"
00027B28 <internal_errormsg.ab2@123> XINCLUDE "internal_errormsg.ab2"
00027B40 <internal_errormsg.ab2@124> XINCLUDE "internal_errormsg.ab2"
00027B84 <internal_errormsg.ab2@125> XINCLUDE "internal_errormsg.ab2"
00027BCC <internal_errormsg.ab2@126> XINCLUDE "internal_errormsg.ab2"
00027BF6 <internal_errormsg.ab2@127> XINCLUDE "internal_errormsg.ab2"
00027C20 <internal_errormsg.ab2@128> XINCLUDE "internal_errormsg.ab2"
00027C3A <internal_errormsg.ab2@132> XINCLUDE "internal_errormsg.ab2"
00027C64 <internal_errormsg.ab2@133> XINCLUDE "internal_errormsg.ab2"
00027CB8 <internal_errormsg.ab2@134> XINCLUDE "internal_errormsg.ab2"
00027D04 <internal_errormsg.ab2@135> XINCLUDE "internal_errormsg.ab2"
00027D3C <internal_errormsg.ab2@136> XINCLUDE "internal_errormsg.ab2"
00027D42 <internal_errormsg.ab2@139> XINCLUDE "internal_errormsg.ab2"
00027D50 <internal_errormsg.ab2@141> XINCLUDE "internal_errormsg.ab2"
00027D80 <internal_errormsg.ab2@144> XINCLUDE "internal_errormsg.ab2"
00027DB4 <internal_errormsg.ab2@145> XINCLUDE "internal_errormsg.ab2"
00027E1A <internal_errormsg.ab2@146> XINCLUDE "internal_errormsg.ab2"
00027E38 <internal_errormsg.ab2@147> XINCLUDE "internal_errormsg.ab2"
00027EB2 <internal_errormsg.ab2@148> XINCLUDE "internal_errormsg.ab2"
00027EDA <internal_errormsg.ab2@149> XINCLUDE "internal_errormsg.ab2"
00027EF0 <internal_errormsg.ab2@150> XINCLUDE "internal_errormsg.ab2"
00027F04 <internal_errormsg.ab2@151> XINCLUDE "internal_errormsg.ab2"
00027F06 <internal_errormsg.ab2@154> XINCLUDE "internal_errormsg.ab2"
00027F07 <internal_errormsg.ab2@155> XINCLUDE "internal_errormsg.ab2"
00027F08 <internal_errormsg.ab2@156> XINCLUDE "internal_errormsg.ab2"
00027F28 <internal_errormsg.ab2@158> XINCLUDE "internal_errormsg.ab2"
00027F2E <internal_errormsg.ab2@161> XINCLUDE "internal_errormsg.ab2"
00027F40 <internal_errormsg.ab2@163> XINCLUDE "internal_errormsg.ab2"
00027F74 <internal_errormsg.ab2@166> XINCLUDE "internal_errormsg.ab2"
00027F8C <internal_errormsg.ab2@167> XINCLUDE "internal_errormsg.ab2"
00027FA8 <internal_errormsg.ab2@168> XINCLUDE "internal_errormsg.ab2"
00027FC0 <internal_errormsg.ab2@169> XINCLUDE "internal_errormsg.ab2"
00027FE0 <internal_errormsg.ab2@170> XINCLUDE "internal_errormsg.ab2"
00028000 <internal_errormsg.ab2@171> XINCLUDE "internal_errormsg.ab2"
00028026 <internal_errormsg.ab2@172> XINCLUDE "internal_errormsg.ab2"
0002803C <internal_errormsg.ab2@173> XINCLUDE "internal_errormsg.ab2"
00028058 <internal_errormsg.ab2@174> XINCLUDE "internal_errormsg.ab2"
00028082 <internal_errormsg.ab2@175> XINCLUDE "internal_errormsg.ab2"
0002809A <internal_errormsg.ab2@176> XINCLUDE "internal_errormsg.ab2"
000280B6 <internal_errormsg.ab2@177> XINCLUDE "internal_errormsg.ab2"
000280D6 <internal_errormsg.ab2@178> XINCLUDE "internal_errormsg.ab2"
000280EE <internal_errormsg.ab2@179> XINCLUDE "internal_errormsg.ab2"
000280F2 <internal_errormsg.ab2@182> XINCLUDE "internal_errormsg.ab2"
000280F8 <internal_errormsg.ab2@183> XINCLUDE "internal_errormsg.ab2"
000280FE <internal_errormsg.ab2@184> XINCLUDE "internal_errormsg.ab2"
00028113 <internal_errormsg.ab2@185> XINCLUDE "internal_errormsg.ab2"
00028119 <internal_errormsg.ab2@187> XINCLUDE "internal_errormsg.ab2"
0002811A <internal_errormsg.ab2@188> XINCLUDE "internal_errormsg.ab2"
0002811E <internal_errormsg.ab2@191> XINCLUDE "internal_errormsg.ab2"
00028124 <internal_errormsg.ab2@192> XINCLUDE "internal_errormsg.ab2"
0002812A <internal_errormsg.ab2@193> XINCLUDE "internal_errormsg.ab2"
0002813D <internal_errormsg.ab2@194> XINCLUDE "internal_errormsg.ab2"
00028143 <internal_errormsg.ab2@196> XINCLUDE "internal_errormsg.ab2"
00028144 <internal_errormsg.ab2@197> XINCLUDE "internal_errormsg.ab2"
00028162 <internal_errormsg.ab2@199> XINCLUDE "internal_errormsg.ab2"
0002817A <internal_errormsg.ab2@200> XINCLUDE "internal_errormsg.ab2"
00028196 <internal_errormsg.ab2@201> XINCLUDE "internal_errormsg.ab2"
000281C0 <internal_errormsg.ab2@202> XINCLUDE "internal_errormsg.ab2"
000281DA <internal_errormsg.ab2@203> XINCLUDE "internal_errormsg.ab2"
000281FA <internal_errormsg.ab2@204> XINCLUDE "internal_errormsg.ab2"
00028218 <internal_errormsg.ab2@205> XINCLUDE "internal_errormsg.ab2"
00028246 <internal_errormsg.ab2@206> XINCLUDE "internal_errormsg.ab2"
00028250 <internal_errormsg.ab2@209> XINCLUDE "internal_errormsg.ab2"
00028282 <internal_errormsg.ab2@210> XINCLUDE "internal_errormsg.ab2"
000282A0 <internal_errormsg.ab2@212> XINCLUDE "internal_errormsg.ab2"
000282BE <internal_errormsg.ab2@213> XINCLUDE "internal_errormsg.ab2"
000282DE <internal_errormsg.ab2@214> XINCLUDE "internal_errormsg.ab2"
00028304 <internal_errormsg.ab2@215> XINCLUDE "internal_errormsg.ab2"
0002832A <internal_errormsg.ab2@216> XINCLUDE "internal_errormsg.ab2"
00028352 <internal_errormsg.ab2@217> XINCLUDE "internal_errormsg.ab2"
00028370 <internal_errormsg.ab2@218> XINCLUDE "internal_errormsg.ab2"
00028390 <internal_errormsg.ab2@219> XINCLUDE "internal_errormsg.ab2"
000283AA <internal_errormsg.ab2@220> XINCLUDE "internal_errormsg.ab2"
000283CC <internal_errormsg.ab2@221> XINCLUDE "internal_errormsg.ab2"
000283EA <internal_errormsg.ab2@222> XINCLUDE "internal_errormsg.ab2"
0002840C <internal_errormsg.ab2@223> XINCLUDE "internal_errormsg.ab2"
00028430 <internal_errormsg.ab2@224> XINCLUDE "internal_errormsg.ab2"
00028436 <internal_errormsg.ab2@227> XINCLUDE "internal_errormsg.ab2"
00028452 <internal_errormsg.ab2@228> XINCLUDE "internal_errormsg.ab2"
0002846E <internal_errormsg.ab2@230> XINCLUDE "internal_errormsg.ab2"
0002848C <internal_errormsg.ab2@231> XINCLUDE "internal_errormsg.ab2"
000284AA <internal_errormsg.ab2@232> XINCLUDE "internal_errormsg.ab2"
000284F8 <internal_errormsg.ab2@233> XINCLUDE "internal_errormsg.ab2"
00028516 <internal_errormsg.ab2@234> XINCLUDE "internal_errormsg.ab2"
00028534 <internal_errormsg.ab2@235> XINCLUDE "internal_errormsg.ab2"
0002854E <internal_errormsg.ab2@236> XINCLUDE "internal_errormsg.ab2"
0002859A <internal_errormsg.ab2@237> XINCLUDE "internal_errormsg.ab2"
000285C0 <internal_errormsg.ab2@238> XINCLUDE "internal_errormsg.ab2"
000285E0 <internal_errormsg.ab2@239> XINCLUDE "internal_errormsg.ab2"
00028602 <internal_errormsg.ab2@240> XINCLUDE "internal_errormsg.ab2"
0002861E <internal_errormsg.ab2@241> XINCLUDE "internal_errormsg.ab2"
00028644 <internal_errormsg.ab2@242> XINCLUDE "internal_errormsg.ab2"
00028660 <internal_errormsg.ab2@243> XINCLUDE "internal_errormsg.ab2"
0002867E <internal_errormsg.ab2@244> XINCLUDE "internal_errormsg.ab2"
000286A6 <internal_errormsg.ab2@245> XINCLUDE "internal_errormsg.ab2"
000286C2 <internal_errormsg.ab2@246> XINCLUDE "internal_errormsg.ab2"
000286D2 <internal_errormsg.ab2@247> XINCLUDE "internal_errormsg.ab2"
000286F4 <internal_errormsg.ab2@248> XINCLUDE "internal_errormsg.ab2"
000286F8 <internal_errormsg.ab2@251> XINCLUDE "internal_errormsg.ab2"
000286FA <internal_errormsg.ab2@254> XINCLUDE "internal_errormsg.ab2"
00028714 <internal_errormsg.ab2@255> XINCLUDE "internal_errormsg.ab2"
00028738 <internal_errormsg.ab2@257> XINCLUDE "internal_errormsg.ab2"
00028758 <internal_errormsg.ab2@258> XINCLUDE "internal_errormsg.ab2"
0002878A <internal_errormsg.ab2@259> XINCLUDE "internal_errormsg.ab2"
000287E8 <internal_errormsg.ab2@260> XINCLUDE "internal_errormsg.ab2"
00028820 <internal_errormsg.ab2@261> XINCLUDE "internal_errormsg.ab2"
0002885E <internal_errormsg.ab2@262> XINCLUDE "internal_errormsg.ab2"
00028894 <internal_errormsg.ab2@263> XINCLUDE "internal_errormsg.ab2"
000288C6 <internal_errormsg.ab2@264> XINCLUDE "internal_errormsg.ab2"
000288EA <internal_errormsg.ab2@265> XINCLUDE "internal_errormsg.ab2"
0002890E <internal_errormsg.ab2@266> XINCLUDE "internal_errormsg.ab2"
00028958 <internal_errormsg.ab2@267> XINCLUDE "internal_errormsg.ab2"
00028980 <internal_errormsg.ab2@268> XINCLUDE "internal_errormsg.ab2"
000289CA <internal_errormsg.ab2@269> XINCLUDE "internal_errormsg.ab2"
00028A0A <internal_errormsg.ab2@270> XINCLUDE "internal_errormsg.ab2"
00028A0A <AmiBlitz3_wizzard.ab2@11222> XINCLUDE "internal_errormsg.ab2"
00028A0C <AmiBlitz3_wizzard.ab2@11226> ezerr:   Ds.w 1                                            ;for simple errors
00028A12 <AmiBlitz3_wizzard.ab2@11232>    MOVE.l myline,d0
00028A16 <AmiBlitz3_wizzard.ab2@11233>   BNE handle_compileerror__l2
00028A1C <AmiBlitz3_wizzard.ab2@11235>     MOVE.l a5,lastsourcepos
00028A1E <AmiBlitz3_wizzard.ab2@11237>     SUBA.l a5,a5
00028A24 <AmiBlitz3_wizzard.ab2@11239>   TST.l usedfrom
00028A28 <AmiBlitz3_wizzard.ab2@11240>   BEQ handle_compileerror__org
00028A2E <AmiBlitz3_wizzard.ab2@11241>     MOVEA.l usedfrom,a5
00028A34 <AmiBlitz3_wizzard.ab2@11244>   TST.w dirmode
00028A38 <AmiBlitz3_wizzard.ab2@11245>   BNE.b handle_compileerror__quiet
00028A3E <AmiBlitz3_wizzard.ab2@11246>     JSR call_setpointernormal
00028A42 <AmiBlitz3_wizzard.ab2@11247>     MOVE.w ezerr(PC),D0
00028A46 <AmiBlitz3_wizzard.ab2@11248>     BNE.w handle_compileerror__skip
00028A4C <AmiBlitz3_wizzard.ab2@11249>       MOVE.w cfetchmode,D0
00028A50 <AmiBlitz3_wizzard.ab2@11250>       BEQ.w handle_compileerror__skip2
00028A5A <AmiBlitz3_wizzard.ab2@11251>         MOVE.l oldlibat,destbufferend                      ;fix up lib thing.
00028A60 <AmiBlitz3_wizzard.ab2@11254>   MOVE.w constmode,D0
00028A64 <AmiBlitz3_wizzard.ab2@11255>   BEQ.b handle_compileerror__skip3
00028A68 <AmiBlitz3_wizzard.ab2@11256>     BSR.w asmerr2
00028A6E <AmiBlitz3_wizzard.ab2@11259>   MOVE.l firstlocal,D1
00028A74 <AmiBlitz3_wizzard.ab2@11260>   OR.l firstglob,D1
00028A78 <AmiBlitz3_wizzard.ab2@11261>   BEQ.b handle_compileerror__notproc                       ;?!?!?!
00028A7E <AmiBlitz3_wizzard.ab2@11262>     JSR JL_0_DB5C
00028A86 <AmiBlitz3_wizzard.ab2@11265>   MOVE.w #$FFFF,anyerrs                                    ;#-1,anyerrs org source
00028A90 <AmiBlitz3_wizzard.ab2@11266>   CMP.l #"NORE",reqmode                                    ;for used functions
00028A94 <AmiBlitz3_wizzard.ab2@11267>   BEQ handle_compileerror__notproc_l1
00028A9E <AmiBlitz3_wizzard.ab2@11268>     MOVE.l linenumat,compilelinecounter
00028AA4 <AmiBlitz3_wizzard.ab2@11271>   JSR close_compilewin
00028AA6 <AmiBlitz3_wizzard.ab2@11274>   MOVEA.l (A7)+,A0
00028AAC <AmiBlitz3_wizzard.ab2@11275>   JSR errorstringparse
00028AB6 <AmiBlitz3_wizzard.ab2@11276>   CMP.l #"NORE",reqmode                                    ;for used functions
00028ABA <AmiBlitz3_wizzard.ab2@11277>   BEQ handle_compileerror__skip_Lxx2
00028AC0 <AmiBlitz3_wizzard.ab2@11278>   TST.l CLIMode
00028AC4 <AmiBlitz3_wizzard.ab2@11279>   BNE 'climode_output
00028ACA <AmiBlitz3_wizzard.ab2@11281>     JSR save_errorfile
00028ACE <AmiBlitz3_wizzard.ab2@11282>     BRA 'end_output
00028AD4 <AmiBlitz3_wizzard.ab2@11284>     JSR stdout_error
00028ADA <AmiBlitz3_wizzard.ab2@11286>     MOVE.l lastsourcepos,a5
00028ADC <AmiBlitz3_wizzard.ab2@11287> 'loop TST.b (a5)
00028AE0 <AmiBlitz3_wizzard.ab2@11288>       BEQ 'ok2
00028AE2 <AmiBlitz3_wizzard.ab2@11289>     MOVE.b (a5)+,d0                                  ; position to usefull source position to avoid following errors
00028AE6 <AmiBlitz3_wizzard.ab2@11290>     BEQ 'ok
00028AEA <AmiBlitz3_wizzard.ab2@11291>     CMP.b #":",d0
00028AEE <AmiBlitz3_wizzard.ab2@11292>     BEQ 'ok
00028AF2 <AmiBlitz3_wizzard.ab2@11293>     BRA 'loop
00028AF4 <AmiBlitz3_wizzard.ab2@11294> 'ok SUBQ.l #1,a5
00028AFC <AmiBlitz3_wizzard.ab2@11295> 'ok2 MOVE.w #0,lastchar
00028B04 <AmiBlitz3_wizzard.ab2@11296>     MOVE.b #1,iserror
00028B0A <AmiBlitz3_wizzard.ab2@11297>     MOVE.l stackaddr,a7
00028B0C <AmiBlitz3_wizzard.ab2@11298>     RTS
00028B0E <AmiBlitz3_wizzard.ab2@11304>   MOVE.l A0,-(a7)
00028B4C <AmiBlitz3_wizzard.ab2@11305>   !ComData_GetL{comFunc_ErrorRequest,A1}
00028B4E <AmiBlitz3_wizzard.ab2@11306>   MOVE.l (a7)+,A0
00028B52 <AmiBlitz3_wizzard.ab2@11308>   MOVEM.l d6/D7/A6,-(A7)
00028B58 <AmiBlitz3_wizzard.ab2@11309>   MOVE.l includeline,d7
00028B5E <AmiBlitz3_wizzard.ab2@11310>   MOVE.l #"INLN",a6
00028B68 <AmiBlitz3_wizzard.ab2@11311>   MOVE.l errstack,tempa7
00028B6A <AmiBlitz3_wizzard.ab2@11312>   JSR (A1)
00028B6E <AmiBlitz3_wizzard.ab2@11314>   MOVEM.l (A7)+,D7/d6/A6
00028B74 <AmiBlitz3_wizzard.ab2@11317>   MOVE.l tempa7,a7
00028B7A <AmiBlitz3_wizzard.ab2@11318>   MOVEA.l errcont,A0
00028B7C <AmiBlitz3_wizzard.ab2@11320> RTS
00028B82 <AmiBlitz3_wizzard.ab2@11323>   MOVEA.l errstack,A7
00028B88 <AmiBlitz3_wizzard.ab2@11324>   MOVEA.l errcont,A0
00028B8A <AmiBlitz3_wizzard.ab2@11326> RTS
00028B8C <AmiBlitz3_wizzard.ab2@11329>   MOVE.l (A7),D0
00028B92 <AmiBlitz3_wizzard.ab2@11330>   MOVEA.l errstack,A7
00028B98 <AmiBlitz3_wizzard.ab2@11331>   MOVEA.l errcont,A0
00028B9A <AmiBlitz3_wizzard.ab2@11332> JMP (A0)
00028B9E <AmiBlitz3_wizzard.ab2@11338>   CMP.w #$7A,D0                                            ;'z'
00028BA2 <AmiBlitz3_wizzard.ab2@11339>    BHI.w tstalpha__no
00028BA6 <AmiBlitz3_wizzard.ab2@11340>   CMP.w #$41,D0                                            ;'A'
00028BAA <AmiBlitz3_wizzard.ab2@11341>    BCS.w tstalpha__no
00028BAE <AmiBlitz3_wizzard.ab2@11342>   CMP.w #$61,D0                                            ;'a'
00028BB2 <AmiBlitz3_wizzard.ab2@11343>    BCC.w tstalpha__yes
00028BB6 <AmiBlitz3_wizzard.ab2@11344>   CMP.w #$5A,D0                                            ;'Z'
00028BBA <AmiBlitz3_wizzard.ab2@11345>    BHI.w tstalpha__no
00028BBC <AmiBlitz3_wizzard.ab2@11348>   CMP.w D0,D0
00028BBE <AmiBlitz3_wizzard.ab2@11351> RTS
00028BC2 <AmiBlitz3_wizzard.ab2@11359>   CMP.w #$30,D0                                            ;'0'
00028BC6 <AmiBlitz3_wizzard.ab2@11360>    BCS.w tstnum__skip
00028BCA <AmiBlitz3_wizzard.ab2@11361>   CMP.w #$39,D0                                            ;'9'
00028BCE <AmiBlitz3_wizzard.ab2@11362>    BHI.w tstnum__skip                                     
00028BD0 <AmiBlitz3_wizzard.ab2@11363>   CMP.w D0,D0
00028BD2 <AmiBlitz3_wizzard.ab2@11366> RTS
00028BF4 <AmiBlitz3_wizzard.ab2@11372>   !compare1                                                ;bsr.w tstalpha
00028BF8 <AmiBlitz3_wizzard.ab2@11373>    BEQ.w tstlab__skip
00028C0A <AmiBlitz3_wizzard.ab2@11374>   !compare2                                                ;bsr.w tstnum2
00028C0E <AmiBlitz3_wizzard.ab2@11375>    BEQ.w tstlab__skip
00028C12 <AmiBlitz3_wizzard.ab2@11376>   CMP.w #$5F,D0                                            ;'_'
00028C16 <AmiBlitz3_wizzard.ab2@11377>    BEQ.w tstlab__skip
00028C1A <AmiBlitz3_wizzard.ab2@11378>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
00028C1C <AmiBlitz3_wizzard.ab2@11381> RTS
00028C26 <AmiBlitz3_wizzard.ab2@11386>   MOVE.w oldqflag,instringon
00028C2C <AmiBlitz3_wizzard.ab2@11387>   MOVEA.l lastsourcepos,A5
00028C32 <AmiBlitz3_wizzard.ab2@11390>   MOVE.l a5,beforeparameterfetch
00028C38 <AmiBlitz3_wizzard.ab2@11391>   LEA ptr_parameterstore,A1
00028C3A <AmiBlitz3_wizzard.ab2@11394>   MOVEQ.l #$00,D2
00028C40 <AmiBlitz3_wizzard.ab2@11397>   LEA chartab,a0
00028C42 <AmiBlitz3_wizzard.ab2@11398>   MOVEQ #0,d0
00028C48 <AmiBlitz3_wizzard.ab2@11399>   MOVE.l A5,lastsourcepos
00028C52 <AmiBlitz3_wizzard.ab2@11400>   MOVE.w instringon,oldqflag
00028C54 <AmiBlitz3_wizzard.ab2@11403>     MOVE.b (a5)+,d0
00028C58 <AmiBlitz3_wizzard.ab2@11404>   CMP.b #$20,d0                                            ;space deftype
00028C5C <AmiBlitz3_wizzard.ab2@11405>   BEQ makename4__retry
00028C62 <AmiBlitz3_wizzard.ab2@11407>   MOVE.w d0,lastchar
00028C66 <AmiBlitz3_wizzard.ab2@11408>   TST.b 0(a0,d0.w)
00028C6A <AmiBlitz3_wizzard.ab2@11409>   BNE makename__done
00028C6C <AmiBlitz3_wizzard.ab2@11418>   MOVE.b D0,(A1)+
00028C6E <AmiBlitz3_wizzard.ab2@11419>   ADDQ.l #1,D2
00028C74 <AmiBlitz3_wizzard.ab2@11420>   MOVE.l A5,lastsourcepos
00028C76 <AmiBlitz3_wizzard.ab2@11423>   MOVE.b (a5)+,d0
00028C7C <AmiBlitz3_wizzard.ab2@11424>   MOVE.b d0,lastchar+1
00028C80 <AmiBlitz3_wizzard.ab2@11425>   CMP.b #$20,d0
00028C84 <AmiBlitz3_wizzard.ab2@11426>   BEQ makename__loop_l20
00028C88 <AmiBlitz3_wizzard.ab2@11428>   TST.b 0(a0,d0)
00028C8C <AmiBlitz3_wizzard.ab2@11429>   BEQ makename__loop
00028C90 <AmiBlitz3_wizzard.ab2@11430>   CMP.b #2,d0
00028C94 <AmiBlitz3_wizzard.ab2@11431>   BNE makename__loop_lf1
00028C9A <AmiBlitz3_wizzard.ab2@11432>   MOVEA.l usedfrom,A5
00028CA0 <AmiBlitz3_wizzard.ab2@11433>   CLR.l usedfrom
00028CA4 <AmiBlitz3_wizzard.ab2@11434> BRA makename__loop_ln1
00028CA8 <AmiBlitz3_wizzard.ab2@11437>   CMP.b #1,d0
00028CAC <AmiBlitz3_wizzard.ab2@11438>   BNE makename__loop_l20
00028CB0 <AmiBlitz3_wizzard.ab2@11439>   MOVEA.l cmakea5(PC),A5
00028CB4 <AmiBlitz3_wizzard.ab2@11440> BRA makename__loop_ln1
00028CB8 <AmiBlitz3_wizzard.ab2@11443>   CMP.b #$7e,d0
00028CBC <AmiBlitz3_wizzard.ab2@11444>             BNE makename__loop_lt
00028CC2 <AmiBlitz3_wizzard.ab2@11445>             TST.w cmake
00028CC6 <AmiBlitz3_wizzard.ab2@11446>             BNE.w makename__loop_a1
00028CC8 <AmiBlitz3_wizzard.ab2@11447>             SUBQ.l #1,a5
00028CCC <AmiBlitz3_wizzard.ab2@11448>             BSR.w get1bytemain
00028CD0 <AmiBlitz3_wizzard.ab2@11449> BRA makename__loop
00028CD4 <AmiBlitz3_wizzard.ab2@11453> BRA makename__loop_gpex
00028CD8 <AmiBlitz3_wizzard.ab2@11457>   BSR.w getchar
00028CFA <AmiBlitz3_wizzard.ab2@11458>    !compare1                                               ;bsr.w tstalpha
00028CFE <AmiBlitz3_wizzard.ab2@11459>    BEQ.w makename__loop_getp1
00028D10 <AmiBlitz3_wizzard.ab2@11460>    !compare2                                               ;bsr.w tstnum
00028D14 <AmiBlitz3_wizzard.ab2@11461>    BEQ.w makename__loop_getp1
00028D18 <AmiBlitz3_wizzard.ab2@11462>   CMP.w #$5F,D0                                            ;'_'
00028D1C <AmiBlitz3_wizzard.ab2@11463>    BEQ.w makename__loop_getp1
00028D20 <AmiBlitz3_wizzard.ab2@11464>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
00028D24 <AmiBlitz3_wizzard.ab2@11468>       BNE makename__loop_gpex
00028D28 <AmiBlitz3_wizzard.ab2@11469>       CMP.b #$20,d0
00028D2C <AmiBlitz3_wizzard.ab2@11470>       BNE.w makename__loop
00028D2E <AmiBlitz3_wizzard.ab2@11473>      TST.b d0
00028D32 <AmiBlitz3_wizzard.ab2@11474>      BPL makename__loop_l10
00028D34 <AmiBlitz3_wizzard.ab2@11475>      SUBQ.l #1,a5
00028D38 <AmiBlitz3_wizzard.ab2@11476>      BSR get1byte_
00028D3C <AmiBlitz3_wizzard.ab2@11479>    CMP.w #$20,D0
00028D40 <AmiBlitz3_wizzard.ab2@11480>    BNE.w makename__done
00028D42 <AmiBlitz3_wizzard.ab2@11481>    MOVEQ #0,d0
00028D48 <AmiBlitz3_wizzard.ab2@11482>   MOVE.l a5,lastsourcepos
00028D4A <AmiBlitz3_wizzard.ab2@11485>   MOVE.b (a5)+,d0                                          ;neuneu
00028D4E <AmiBlitz3_wizzard.ab2@11486>   BPL makename__loop_l101:
00028D50 <AmiBlitz3_wizzard.ab2@11487>   ASL.w #8,d0
00028D52 <AmiBlitz3_wizzard.ab2@11488>   MOVE.b (a5)+,d0
00028D58 <AmiBlitz3_wizzard.ab2@11491>   TST.w instringon
00028D5C <AmiBlitz3_wizzard.ab2@11492>   BNE makename__loop_l102
00028D60 <AmiBlitz3_wizzard.ab2@11493>   CMP.b #$20,d0
00028D64 <AmiBlitz3_wizzard.ab2@11494>   BEQ makename__loop_l103
00028D68 <AmiBlitz3_wizzard.ab2@11495>   CMP.b #";",d0
00028D6C <AmiBlitz3_wizzard.ab2@11496>   BNE makename__loop_l102
00028D6E <AmiBlitz3_wizzard.ab2@11499>   MOVE.b (A5)+,D0
00028D72 <AmiBlitz3_wizzard.ab2@11500>              BEQ makename__loop_l1
00028D76 <AmiBlitz3_wizzard.ab2@11501>              CMP.b #":",d0
00028D7A <AmiBlitz3_wizzard.ab2@11502>              BNE makename__loop_lr                         ;:@
00028D7E <AmiBlitz3_wizzard.ab2@11503>              CMP.b #"@",(a5)
00028D82 <AmiBlitz3_wizzard.ab2@11504>              BNE makename__loop_lr
00028D84 <AmiBlitz3_wizzard.ab2@11505>              ADDQ #1,a5
00028D8A <AmiBlitz3_wizzard.ab2@11509>   MOVE.w d0,lastchar
00028D8E <AmiBlitz3_wizzard.ab2@11513>   CMP.b #";",d0
00028D92 <AmiBlitz3_wizzard.ab2@11514>   BEQ makename__done_l11
00028D94 <AmiBlitz3_wizzard.ab2@11515>   CLR.b (A1)
00028D96 <AmiBlitz3_wizzard.ab2@11517>   TST.w D2
00028D98 <AmiBlitz3_wizzard.ab2@11518> RTS
00028D9A <AmiBlitz3_wizzard.ab2@11521>   CLR.b (a1)
00028D9C <AmiBlitz3_wizzard.ab2@11522>   MOVEQ #0,d0
00028DA2 <AmiBlitz3_wizzard.ab2@11523>   MOVE.w d0,lastchar
00028DA4 <AmiBlitz3_wizzard.ab2@11525>   TST.w D2
00028DA6 <AmiBlitz3_wizzard.ab2@11526> RTS
00028DA8 <AmiBlitz3_wizzard.ab2@11532>   MOVE.l (A2),D0
00028DAC <AmiBlitz3_wizzard.ab2@11535>   BEQ.w findlast__here
00028DAE <AmiBlitz3_wizzard.ab2@11536>   MOVEA.l D0,A2
00028DB2 <AmiBlitz3_wizzard.ab2@11537> BRA.w findlast__loop
00028DB6 <AmiBlitz3_wizzard.ab2@11540> BRA.w reget
00028DB8 <AmiBlitz3_wizzard.ab2@11546>   MOVE.l (A2),-(A7)
00028DBC <AmiBlitz3_wizzard.ab2@11547>   BSR.w addlabel
00028DBE <AmiBlitz3_wizzard.ab2@11548>   MOVE.l (A7)+,(A2)
00028DC0 <AmiBlitz3_wizzard.ab2@11549> RTS
00028DC6 <AmiBlitz3_wizzard.ab2@11554>   CLR.l fp0addr
00028DCC <AmiBlitz3_wizzard.ab2@11555>   TST.w dirmode
00028DD0 <AmiBlitz3_wizzard.ab2@11556>    BNE.w illdirerr
00028DD2 <AmiBlitz3_wizzard.ab2@11557>   MOVEQ.l #$00,D0
00028DD4 <AmiBlitz3_wizzard.ab2@11558>   MOVE.w D7,D0
00028DD6 <AmiBlitz3_wizzard.ab2@11559>   ADD.w D2,D0
00028DD8 <AmiBlitz3_wizzard.ab2@11560>   ADDQ.w #1,D0
00028DDA <AmiBlitz3_wizzard.ab2@11561>   MOVE.w D0,D2
00028DDC <AmiBlitz3_wizzard.ab2@11562>   ADDQ.l #2,d0
00028DDE <AmiBlitz3_wizzard.ab2@11563>   MOVEQ.l #$01,D1
00028DE4 <AmiBlitz3_wizzard.ab2@11564>   MOVEA.l _execbase,A6
00028DEA <AmiBlitz3_wizzard.ab2@11565>   MOVE.l mempool2,a0
00028DEE <AmiBlitz3_wizzard.ab2@11566>   JSR _AllocPooled(a6)
00028DF4 <AmiBlitz3_wizzard.ab2@11568>   MOVE.l lastlabel,a2
00028DF6 <AmiBlitz3_wizzard.ab2@11569>   MOVE.l D0,(A2)
00028DF8 <AmiBlitz3_wizzard.ab2@11570>   MOVE.l d0,a0
00028DFA <AmiBlitz3_wizzard.ab2@11571>   CLR.l (a0)
00028E00 <AmiBlitz3_wizzard.ab2@11572>   MOVE.l a0,lastlabel
00028E02 <AmiBlitz3_wizzard.ab2@11573>   MOVE.l d0,A2
00028E06 <AmiBlitz3_wizzard.ab2@11574>   LEA -$1(A0,D7.W),A0
00028E08 <AmiBlitz3_wizzard.ab2@11575>   MOVE.b D2,(A0)+
00028E0E <AmiBlitz3_wizzard.ab2@11576>   LEA ptr_parameterstore,A1
00028E10 <AmiBlitz3_wizzard.ab2@11577>   MOVEQ #0,d0
00028E12 <AmiBlitz3_wizzard.ab2@11578>   MOVEQ #0,d1
00028E14 <AmiBlitz3_wizzard.ab2@11581>   MOVE.b (A1)+,d1
00028E18 <AmiBlitz3_wizzard.ab2@11582>    BEQ 'l1
00028E1E <AmiBlitz3_wizzard.ab2@11583>    !hashalgo
00028E20 <AmiBlitz3_wizzard.ab2@11584>    MOVE.b d1,(A0)+
00028E24 <AmiBlitz3_wizzard.ab2@11585> BRA addlabel_loop2a
00028E26 <AmiBlitz3_wizzard.ab2@11588>    CLR.b (a0)+
00028E2C <AmiBlitz3_wizzard.ab2@11589>    LEA labelhash,a0
00028E32 <AmiBlitz3_wizzard.ab2@11590>    AND.l #hashsize,d0
00028E34 <AmiBlitz3_wizzard.ab2@11591>    ASL.l #2,d0
00028E38 <AmiBlitz3_wizzard.ab2@11592>    MOVE.l 0(a0,d0),d1
00028E3C <AmiBlitz3_wizzard.ab2@11593>    MOVE.l d1,$c(a2)
00028E40 <AmiBlitz3_wizzard.ab2@11594>    MOVE.l a2,0(a0,d0)
00028E42 <AmiBlitz3_wizzard.ab2@11595>    MOVEQ #0,d0
00028E46 <AmiBlitz3_wizzard.ab2@11596> BRA.w reget
00028E4C <AmiBlitz3_wizzard.ab2@11600>    TST.b newvariable
00028E50 <AmiBlitz3_wizzard.ab2@11601>    BNE addlabel
00028E56 <AmiBlitz3_wizzard.ab2@11604>   TST.w dirmode
00028E5A <AmiBlitz3_wizzard.ab2@11605>    BNE.w illdirerr
00028E5C <AmiBlitz3_wizzard.ab2@11606>   MOVEQ.l #$00,D0
00028E5E <AmiBlitz3_wizzard.ab2@11607>   MOVE.w D7,D0
00028E60 <AmiBlitz3_wizzard.ab2@11608>   ADD.w D2,D0
00028E62 <AmiBlitz3_wizzard.ab2@11609>   ADDQ.w #1,D0
00028E64 <AmiBlitz3_wizzard.ab2@11610>   MOVE.w D0,D2
00028E66 <AmiBlitz3_wizzard.ab2@11611>   MOVEQ.l #$01,D1
00028E6C <AmiBlitz3_wizzard.ab2@11612>   MOVEA.l _execbase,A6
00028E72 <AmiBlitz3_wizzard.ab2@11613>   MOVE.l mempool2,a0
00028E76 <AmiBlitz3_wizzard.ab2@11614>   JSR _AllocPooled(a6)
00028E78 <AmiBlitz3_wizzard.ab2@11615>   MOVEA.l D0,A0
00028E7E <AmiBlitz3_wizzard.ab2@11617>   LEA varbase,a2
00028E80 <AmiBlitz3_wizzard.ab2@11618>   MOVE.l (a2),(a0)
00028E82 <AmiBlitz3_wizzard.ab2@11619>   MOVE.l A0,(A2)
00028E84 <AmiBlitz3_wizzard.ab2@11620>   MOVEA.l A0,A2
00028E88 <AmiBlitz3_wizzard.ab2@11621>   LEA -$1(A0,D7.W),A0
00028E8A <AmiBlitz3_wizzard.ab2@11622>   MOVE.b D2,(A0)+
00028E90 <AmiBlitz3_wizzard.ab2@11623>   LEA ptr_parameterstore,A1
00028E92 <AmiBlitz3_wizzard.ab2@11624>   MOVEQ #0,d0
00028E94 <AmiBlitz3_wizzard.ab2@11625>   MOVEQ #0,d1
00028E96 <AmiBlitz3_wizzard.ab2@11628>   MOVE.b (A1)+,d1
00028E9A <AmiBlitz3_wizzard.ab2@11629>    BEQ 'l12
00028EA0 <AmiBlitz3_wizzard.ab2@11630>    !hashalgo
00028EA2 <AmiBlitz3_wizzard.ab2@11631>    MOVE.b d1,(A0)+
00028EA6 <AmiBlitz3_wizzard.ab2@11632> BRA 'l11
00028EA8 <AmiBlitz3_wizzard.ab2@11635>   CLR.b (a0)+
00028EAE <AmiBlitz3_wizzard.ab2@11636>   LEA variablehash,a0
00028EB4 <AmiBlitz3_wizzard.ab2@11637>    AND.l #hashsize,d0
00028EB6 <AmiBlitz3_wizzard.ab2@11638>    ASL.l #2,d0
00028EBA <AmiBlitz3_wizzard.ab2@11639>    MOVE.l 0(a0,d0),d1
00028EBE <AmiBlitz3_wizzard.ab2@11640>    MOVE.l d1,$e(a2)
00028EC2 <AmiBlitz3_wizzard.ab2@11641>    MOVE.l a2,0(a0,d0)
00028EC4 <AmiBlitz3_wizzard.ab2@11642>    MOVEQ #0,d0
00028EC8 <AmiBlitz3_wizzard.ab2@11643> BRA.w reget
00028ECE <AmiBlitz3_wizzard.ab2@11647>   TST.w dirmode
00028ED2 <AmiBlitz3_wizzard.ab2@11648>    BNE.w illdirerr
00028ED4 <AmiBlitz3_wizzard.ab2@11655>   MOVEQ.l #$00,D0
00028ED6 <AmiBlitz3_wizzard.ab2@11656>   MOVE.w D7,D0
00028ED8 <AmiBlitz3_wizzard.ab2@11657>   ADD.w D2,D0
00028EDA <AmiBlitz3_wizzard.ab2@11658>   ADDQ.w #1,D0
00028EDC <AmiBlitz3_wizzard.ab2@11659>   MOVE.w D0,D2
00028EDE <AmiBlitz3_wizzard.ab2@11660>   MOVEQ.l #$01,D1
00028EE4 <AmiBlitz3_wizzard.ab2@11661>   MOVEA.l _execbase,A6
00028EEA <AmiBlitz3_wizzard.ab2@11662>   MOVE.l mempool2,a0
00028EEE <AmiBlitz3_wizzard.ab2@11663>   JSR _AllocPooled(a6)
00028EF0 <AmiBlitz3_wizzard.ab2@11665>   MOVEA.l D0,A0
00028EF2 <AmiBlitz3_wizzard.ab2@11666>   MOVE.l A0,(A2)
00028EF4 <AmiBlitz3_wizzard.ab2@11667>   CLR.l (a0)
00028EF8 <AmiBlitz3_wizzard.ab2@11668>   CLR.l 8(a0)                                              ;clear next
00028EFA <AmiBlitz3_wizzard.ab2@11669>   MOVEA.l A0,A2
00028EFE <AmiBlitz3_wizzard.ab2@11670>   LEA -$1(A0,D7.W),A0
00028F00 <AmiBlitz3_wizzard.ab2@11671>   MOVE.b D2,(A0)+                                          ;put in struct length
00028F06 <AmiBlitz3_wizzard.ab2@11672>   LEA ptr_parameterstore,A1
00028F08 <AmiBlitz3_wizzard.ab2@11673>   MOVEQ #0,d0
00028F0A <AmiBlitz3_wizzard.ab2@11674>   MOVEQ #0,d1
00028F0C <AmiBlitz3_wizzard.ab2@11677>   MOVE.b (A1)+,d1
00028F0E <AmiBlitz3_wizzard.ab2@11680>   MOVE.b d1,(A0)+
00028F12 <AmiBlitz3_wizzard.ab2@11681>   BNE.w addlabel_loop2
00028F16 <AmiBlitz3_wizzard.ab2@11682> BRA.w reget
00028F18 <AmiBlitz3_wizzard.ab2@11686>   MOVEQ.l #$13,D7
00028F1E <AmiBlitz3_wizzard.ab2@11687>   LEA constantbase,A2
00028F22 <AmiBlitz3_wizzard.ab2@11688> BRA.w findlab
00028F24 <AmiBlitz3_wizzard.ab2@11692>   MOVEQ.l #$05+8,D7                                        ;#5,d7 org source
00028F2A <AmiBlitz3_wizzard.ab2@11693>   LEA xinclude_base,A2
00028F2E <AmiBlitz3_wizzard.ab2@11694> BRA.w findlab
00028F30 <AmiBlitz3_wizzard.ab2@11698>   MOVEQ.l #$09,D7
00028F36 <AmiBlitz3_wizzard.ab2@11699>   LEA firstconst,A2
00028F3A <AmiBlitz3_wizzard.ab2@11700> BRA.w findlab
00028F3C <AmiBlitz3_wizzard.ab2@11704>   MOVEQ.l #$0d,D7                                          ;find macro
00028F42 <AmiBlitz3_wizzard.ab2@11705>   LEA macrobase,A2
00028F46 <AmiBlitz3_wizzard.ab2@11706> BRA.w findlab
00028F4C <AmiBlitz3_wizzard.ab2@11710>   LEA labelhash,A2
00028F4E <AmiBlitz3_wizzard.ab2@11711>   MOVEQ.l #$13,D7
00028F50 <AmiBlitz3_wizzard.ab2@11712>   EXT.l d2
00028F56 <AmiBlitz3_wizzard.ab2@11713>   LEA ptr_parameterstore,A0
00028F58 <AmiBlitz3_wizzard.ab2@11714>   MOVEQ #0,d0
00028F5A <AmiBlitz3_wizzard.ab2@11715>   MOVEQ #0,d1
00028F5C <AmiBlitz3_wizzard.ab2@11718>     MOVE.b (a0)+,d1
00028F60 <AmiBlitz3_wizzard.ab2@11719>     BEQ 'l15
00028F66 <AmiBlitz3_wizzard.ab2@11720>     !hashalgo
00028F6A <AmiBlitz3_wizzard.ab2@11721> BRA 'l20
00028F70 <AmiBlitz3_wizzard.ab2@11724>   AND.l #hashsize,d0
00028F72 <AmiBlitz3_wizzard.ab2@11725>   ASL.l #2,d0
00028F76 <AmiBlitz3_wizzard.ab2@11726>   MOVE.l 0(a2,d0),d0
00028F7A <AmiBlitz3_wizzard.ab2@11727> BRA 'l11
00028F7E <AmiBlitz3_wizzard.ab2@11730>   MOVE.l $c(A2),D0                                         ;find label
00028F82 <AmiBlitz3_wizzard.ab2@11733>   BEQ findlab__no
00028F84 <AmiBlitz3_wizzard.ab2@11734>   MOVEA.l D0,A2
00028F86 <AmiBlitz3_wizzard.ab2@11735>   MOVEQ.l #$00,D0
00028F8A <AmiBlitz3_wizzard.ab2@11736>   MOVE.b -$1(A2,D7.l),D0
00028F90 <AmiBlitz3_wizzard.ab2@11737>   LEA ptr_parameterstore,A0
00028F92 <AmiBlitz3_wizzard.ab2@11738>   SUB.l D7,D0
00028F94 <AmiBlitz3_wizzard.ab2@11739>   SUBQ.l #1,D0
00028F96 <AmiBlitz3_wizzard.ab2@11740>   CMP.l D0,D2
00028F9A <AmiBlitz3_wizzard.ab2@11741>    BNE.b 'l10
00028F9E <AmiBlitz3_wizzard.ab2@11742>   LEA $0(A2,D7.W),A1
00028FA0 <AmiBlitz3_wizzard.ab2@11743>   SUBQ.l #1,D0
00028FA2 <AmiBlitz3_wizzard.ab2@11746>     MOVE.b (a1)+,d1
00028FA4 <AmiBlitz3_wizzard.ab2@11747>     CMP.b (a0)+,d1
00028FA8 <AmiBlitz3_wizzard.ab2@11749>     BNE.b 'l10
00028FAC <AmiBlitz3_wizzard.ab2@11750>   DBF D0,'l201
00028FB0 <AmiBlitz3_wizzard.ab2@11752>   BSR.w reget
00028FB2 <AmiBlitz3_wizzard.ab2@11753>   CMP.w D0,D0
00028FB4 <AmiBlitz3_wizzard.ab2@11754> RTS
00028FB6 <AmiBlitz3_wizzard.ab2@11758>   MOVEQ.l #$0B,D7
00028FBA <AmiBlitz3_wizzard.ab2@11759> BRA.w findlab
00028FC0 <AmiBlitz3_wizzard.ab2@11763>   LEA firstproc,A2
00028FC6 <AmiBlitz3_wizzard.ab2@11764>   MOVE.l #$21+#funcentry_extend,D7
00028FCA <AmiBlitz3_wizzard.ab2@11765> BRA findlab
00028FD0 <AmiBlitz3_wizzard.ab2@11769>   LEA firstfor,A2
00028FD2 <AmiBlitz3_wizzard.ab2@11770>   MOVEQ.l #$11,D7
00028FD6 <AmiBlitz3_wizzard.ab2@11771> BRA.w findlab
00028FD8 <AmiBlitz3_wizzard.ab2@11775>   MOVEQ.l #$0F,D7
00028FDC <AmiBlitz3_wizzard.ab2@11776> BRA.w findlab
00028FDE <AmiBlitz3_wizzard.ab2@11780>   MOVEQ.l #$0F+4,D7
00028FE4 <AmiBlitz3_wizzard.ab2@11781>   TST.b newvariable
00028FE8 <AmiBlitz3_wizzard.ab2@11782>    BNE.w findlab
00028FEE <AmiBlitz3_wizzard.ab2@11783>   LEA variablehash,A2
00028FF4 <AmiBlitz3_wizzard.ab2@11784>   LEA ptr_parameterstore,A0
00028FF6 <AmiBlitz3_wizzard.ab2@11785>   MOVEQ #0,d0
00028FF8 <AmiBlitz3_wizzard.ab2@11786>   MOVEQ #0,d1
00028FFA <AmiBlitz3_wizzard.ab2@11789>     MOVE.b (a0)+,d1
00028FFE <AmiBlitz3_wizzard.ab2@11790>     BEQ 'l15
00029004 <AmiBlitz3_wizzard.ab2@11791>     !hashalgo
00029008 <AmiBlitz3_wizzard.ab2@11792> BRA 'l20
0002900E <AmiBlitz3_wizzard.ab2@11795>   AND.l #hashsize,d0
00029010 <AmiBlitz3_wizzard.ab2@11796>   ASL.l #2,d0
00029014 <AmiBlitz3_wizzard.ab2@11797>   MOVE.l 0(a2,d0),d0
00029018 <AmiBlitz3_wizzard.ab2@11798> BRA 'l11
0002901C <AmiBlitz3_wizzard.ab2@11801>   MOVE.l $e(A2),D0                                         ;find label
00029020 <AmiBlitz3_wizzard.ab2@11804>   BEQ findlab__no
00029022 <AmiBlitz3_wizzard.ab2@11805>   MOVEA.l D0,A2
00029024 <AmiBlitz3_wizzard.ab2@11806>   MOVEQ.l #$00,D0
00029028 <AmiBlitz3_wizzard.ab2@11807>   MOVE.b -$1(A2,D7.W),D0
0002902E <AmiBlitz3_wizzard.ab2@11808>   LEA ptr_parameterstore,A0
00029030 <AmiBlitz3_wizzard.ab2@11809>   SUB.w D7,D0
00029032 <AmiBlitz3_wizzard.ab2@11810>   SUBQ.l #1,D0
00029034 <AmiBlitz3_wizzard.ab2@11811>   CMP.w D0,D2
00029038 <AmiBlitz3_wizzard.ab2@11812>    BNE.b 'l10
0002903C <AmiBlitz3_wizzard.ab2@11813>   LEA $0(A2,D7.W),A1
0002903E <AmiBlitz3_wizzard.ab2@11814>   SUBQ.l #1,D0
00029040 <AmiBlitz3_wizzard.ab2@11817>     MOVE.b (a1)+,d1
00029042 <AmiBlitz3_wizzard.ab2@11818>     CMP.b (a0)+,d1
00029046 <AmiBlitz3_wizzard.ab2@11820>     BNE.b 'l10
0002904A <AmiBlitz3_wizzard.ab2@11821>   DBF D0,'l201
0002904E <AmiBlitz3_wizzard.ab2@11823>   BSR.w reget
00029050 <AmiBlitz3_wizzard.ab2@11824>   CMP.w D0,D0
00029052 <AmiBlitz3_wizzard.ab2@11825> RTS
00029054 <AmiBlitz3_wizzard.ab2@11838>     MOVE.l (A2),D0                                         ;find label
00029058 <AmiBlitz3_wizzard.ab2@11839>      BEQ.b findlab__no
0002905A <AmiBlitz3_wizzard.ab2@11840>     MOVEA.l D0,A2
0002905C <AmiBlitz3_wizzard.ab2@11841>     MOVEQ.l #$00,D0
00029060 <AmiBlitz3_wizzard.ab2@11842>     MOVE.b -$1(A2,D7.W),D0
00029062 <AmiBlitz3_wizzard.ab2@11843>     SUB.l D7,D0
00029064 <AmiBlitz3_wizzard.ab2@11844>     SUBQ.l #1,D0
00029066 <AmiBlitz3_wizzard.ab2@11845>   CMP.w D0,D2
0002906A <AmiBlitz3_wizzard.ab2@11846>   BNE.b findlab__loop
0002906E <AmiBlitz3_wizzard.ab2@11848>   LEA $0(A2,D7.W),A1
00029074 <AmiBlitz3_wizzard.ab2@11849>   LEA ptr_parameterstore,A0
00029076 <AmiBlitz3_wizzard.ab2@11850>   SUBQ.l #1,D0
00029078 <AmiBlitz3_wizzard.ab2@11853>     MOVE.b (a1)+,d1
0002907A <AmiBlitz3_wizzard.ab2@11854>     CMP.b (a0)+,d1
0002907E <AmiBlitz3_wizzard.ab2@11856>     BNE.b findlab__loop
00029082 <AmiBlitz3_wizzard.ab2@11857>   DBF D0,findlab__loop2
00029086 <AmiBlitz3_wizzard.ab2@11859>   BSR.w reget
00029088 <AmiBlitz3_wizzard.ab2@11860>   CMP.w D0,D0
0002908A <AmiBlitz3_wizzard.ab2@11861> RTS
0002908E <AmiBlitz3_wizzard.ab2@11864>   BSR.w reget
00029090 <AmiBlitz3_wizzard.ab2@11865>   MOVEQ.l #-$01,D1
00029092 <AmiBlitz3_wizzard.ab2@11866> RTS
00029098 <AmiBlitz3_wizzard.ab2@11870>   MOVEA.l alllocals,A4
0002909E <AmiBlitz3_wizzard.ab2@11871>   CLR.l alllocals
000290A2 <AmiBlitz3_wizzard.ab2@11875>     CMPA.w #$0,A4
000290A6 <AmiBlitz3_wizzard.ab2@11876>      BEQ.b freeprocvs__done
000290AA <AmiBlitz3_wizzard.ab2@11877>     MOVEA.l $4(A4),A3
000290AE <AmiBlitz3_wizzard.ab2@11879>     MOVEA.l $8(A4),A3
000290B0 <AmiBlitz3_wizzard.ab2@11881>     MOVEA.l A4,A1
000290B2 <AmiBlitz3_wizzard.ab2@11882>     MOVEA.l (A4),A4
000290B4 <AmiBlitz3_wizzard.ab2@11883>     MOVEQ.l #$0C,D0
000290BA <AmiBlitz3_wizzard.ab2@11884>     MOVEA.l _execbase,A6
000290C0 <AmiBlitz3_wizzard.ab2@11885>     MOVE.l mempool,a0
000290C4 <AmiBlitz3_wizzard.ab2@11886>     JSR _FreePooled(A6)
000290C8 <AmiBlitz3_wizzard.ab2@11887> BRA.b freeprocvs__loop
000290CE <AmiBlitz3_wizzard.ab2@11890>   CLR.l firstglob                                          ;fix 2*aclearallvar called
000290D4 <AmiBlitz3_wizzard.ab2@11891>   CLR.l firstlocal
000290DA <AmiBlitz3_wizzard.ab2@11892>   CLR.l sharebase
000290E0 <AmiBlitz3_wizzard.ab2@11893>   TST.l mempool2
000290E4 <AmiBlitz3_wizzard.ab2@11894>   BEQ freeprocvs__done_l10
000290EA <AmiBlitz3_wizzard.ab2@11896>   MOVEA.l _execbase,A6
000290F0 <AmiBlitz3_wizzard.ab2@11897>   MOVE.l mempool2,a0
000290F6 <AmiBlitz3_wizzard.ab2@11898>   CLR.l mempool2
000290FA <AmiBlitz3_wizzard.ab2@11899>   JSR _DeletePool(a6)
00029100 <AmiBlitz3_wizzard.ab2@11902>   MOVE.l _execbase,a6
00029106 <AmiBlitz3_wizzard.ab2@11903>   MOVE.l #$10000,d0
0002910C <AmiBlitz3_wizzard.ab2@11904>   MOVE.l #80000,d1
0002910E <AmiBlitz3_wizzard.ab2@11905>   MOVE.l d1,d2
00029112 <AmiBlitz3_wizzard.ab2@11906>   JSR _CreatePool(a6)
00029118 <AmiBlitz3_wizzard.ab2@11907>   MOVE.l d0,mempool2
0002911A <AmiBlitz3_wizzard.ab2@11908> RTS
0002911E <AmiBlitz3_wizzard.ab2@11912>   CMPA.w #$0,A3
00029122 <AmiBlitz3_wizzard.ab2@11913>    BEQ.w freevars__done
00029124 <AmiBlitz3_wizzard.ab2@11914>   MOVEA.l A3,A1
00029126 <AmiBlitz3_wizzard.ab2@11915>   MOVEA.l (A3),A3
00029128 <AmiBlitz3_wizzard.ab2@11916>   MOVEQ.l #$00,D0
0002912C <AmiBlitz3_wizzard.ab2@11917>   MOVE.b $E(A1),D0
00029132 <AmiBlitz3_wizzard.ab2@11918>   MOVEA.l _execbase,A6
00029138 <AmiBlitz3_wizzard.ab2@11919>   MOVE.l mempool2,a0
0002913C <AmiBlitz3_wizzard.ab2@11920>   JSR _FreePooled(A6)
00029140 <AmiBlitz3_wizzard.ab2@11921> BRA.w freevars
00029144 <AmiBlitz3_wizzard.ab2@11924>     CMPA.w #$0,A3
00029148 <AmiBlitz3_wizzard.ab2@11925>      BEQ.w freevars__done
0002914A <AmiBlitz3_wizzard.ab2@11926>     MOVEA.l A3,A1
0002914C <AmiBlitz3_wizzard.ab2@11927>     MOVEA.l (A3),A3
0002914E <AmiBlitz3_wizzard.ab2@11928>     MOVEQ.l #$00,D0
00029152 <AmiBlitz3_wizzard.ab2@11929>     MOVE.b $E+4(A1),D0
00029158 <AmiBlitz3_wizzard.ab2@11930>     MOVEA.l _execbase,A6
0002915E <AmiBlitz3_wizzard.ab2@11931>     MOVE.l mempool2,a0
00029162 <AmiBlitz3_wizzard.ab2@11932>     JSR _FreePooled(A6)
00029166 <AmiBlitz3_wizzard.ab2@11933> BRA.w freevarsb
00029168 <AmiBlitz3_wizzard.ab2@11936> RTS
0002916E <AmiBlitz3_wizzard.ab2@11940>   MOVEA.l currentlabeladdr,A0
00029174 <AmiBlitz3_wizzard.ab2@11941>   MOVE.l a0,lastlabel
00029176 <AmiBlitz3_wizzard.ab2@11942>   MOVEA.l (A0),A2
00029178 <AmiBlitz3_wizzard.ab2@11943>   CLR.l (A0)
0002917E <AmiBlitz3_wizzard.ab2@11944>   MOVEA.l _execbase,A6
00029182 <AmiBlitz3_wizzard.ab2@11947>   CMPA.w #$0,A2
00029186 <AmiBlitz3_wizzard.ab2@11948>    BEQ.w clearlabels__done
0002918A <AmiBlitz3_wizzard.ab2@11949>   MOVE.l $4(A2),D0
0002918E <AmiBlitz3_wizzard.ab2@11950>   BTST #$0,D0
00029192 <AmiBlitz3_wizzard.ab2@11951>    BNE.w clearlabels__skip
00029194 <AmiBlitz3_wizzard.ab2@11952>   MOVEA.l D0,A3
00029198 <AmiBlitz3_wizzard.ab2@11955>     CMPA.w #$0,A3
0002919C <AmiBlitz3_wizzard.ab2@11956>      BEQ.w clearlabels__skip
0002919E <AmiBlitz3_wizzard.ab2@11957>     MOVEA.l A3,A1
000291A0 <AmiBlitz3_wizzard.ab2@11958>     MOVEA.l (A3),A3
000291A2 <AmiBlitz3_wizzard.ab2@11959>     MOVEQ.l #$0C+2,D0                                      ;cancel fix
000291A8 <AmiBlitz3_wizzard.ab2@11960>     MOVE.l mempool,a0
000291AC <AmiBlitz3_wizzard.ab2@11961>     JSR _FreePooled(A6)
000291B0 <AmiBlitz3_wizzard.ab2@11962> BRA.w clearlabels__loop2
000291B2 <AmiBlitz3_wizzard.ab2@11965>   MOVEQ.l #$00,D0
000291B6 <AmiBlitz3_wizzard.ab2@11966>   MOVE.b $12(A2),D0
000291B8 <AmiBlitz3_wizzard.ab2@11967>   MOVEA.l A2,A1
000291BA <AmiBlitz3_wizzard.ab2@11968>   MOVEA.l (A2),A2
000291C0 <AmiBlitz3_wizzard.ab2@11969>   MOVE.l mempool2,a0
000291C4 <AmiBlitz3_wizzard.ab2@11971> BRA.w clearlabels__loop
000291C6 <AmiBlitz3_wizzard.ab2@11974> RTS
000291CC <AmiBlitz3_wizzard.ab2@11978>   MOVEA.l firstpend,A3
000291D2 <AmiBlitz3_wizzard.ab2@11979>   CLR.l firstpend
000291D8 <AmiBlitz3_wizzard.ab2@11980>   MOVEA.l _execbase,A6
000291DC <AmiBlitz3_wizzard.ab2@11983>     CMPA.w #$0,A3
000291E0 <AmiBlitz3_wizzard.ab2@11984>      BEQ.w freepends__done
000291E2 <AmiBlitz3_wizzard.ab2@11985>     MOVEA.l A3,A1
000291E4 <AmiBlitz3_wizzard.ab2@11986>     MOVEQ.l #$08,D0
000291E6 <AmiBlitz3_wizzard.ab2@11987>     MOVEA.l (A3),A3
000291EC <AmiBlitz3_wizzard.ab2@11988>     MOVE.l mempool,a0
000291F0 <AmiBlitz3_wizzard.ab2@11989>     JSR _FreePooled(A6)
000291F4 <AmiBlitz3_wizzard.ab2@11990> BRA.w fpnd2
000291F6 <AmiBlitz3_wizzard.ab2@11993> RTS
000291FC <AmiBlitz3_wizzard.ab2@11997>   MOVEA.l firstproc,A2
00029202 <AmiBlitz3_wizzard.ab2@11998>   CLR.l firstproc
00029208 <AmiBlitz3_wizzard.ab2@11999>   MOVEA.l _execbase,A6
0002920C <AmiBlitz3_wizzard.ab2@12002>     CMPA.w #$0,A2
00029210 <AmiBlitz3_wizzard.ab2@12003>      BEQ.w clearfunctionlist__done
00029212 <AmiBlitz3_wizzard.ab2@12004>     MOVEA.l A2,A1
00029214 <AmiBlitz3_wizzard.ab2@12005>     MOVEA.l (A2),A2
00029216 <AmiBlitz3_wizzard.ab2@12006>     MOVEQ.l #$00,D0
0002921A <AmiBlitz3_wizzard.ab2@12007>     MOVE.b $20+#funcentry_extend(A1),D0
00029220 <AmiBlitz3_wizzard.ab2@12008>     MOVE.l mempool2,a0
00029224 <AmiBlitz3_wizzard.ab2@12009>     JSR _FreePooled(A6)
00029228 <AmiBlitz3_wizzard.ab2@12010> BRA.w clearfunctionlist__loop
0002922A <AmiBlitz3_wizzard.ab2@12013> RTS
0002922E <AmiBlitz3_wizzard.ab2@12017>   CMPA.w #$0,A2
00029232 <AmiBlitz3_wizzard.ab2@12018>    BEQ.w freetypes__done
00029236 <AmiBlitz3_wizzard.ab2@12019>   MOVEA.l $4(A2),A3
0002923A <AmiBlitz3_wizzard.ab2@12020>   CMPA.w #$FF,A3
0002923E <AmiBlitz3_wizzard.ab2@12021>    BEQ.w freetypes__noway
00029242 <AmiBlitz3_wizzard.ab2@12025>    BSR.w freevars
00029244 <AmiBlitz3_wizzard.ab2@12028>     MOVEA.l A2,A1
00029246 <AmiBlitz3_wizzard.ab2@12029>     MOVEA.l (A2),A2
00029248 <AmiBlitz3_wizzard.ab2@12030>     MOVEQ.l #$00,D0
0002924C <AmiBlitz3_wizzard.ab2@12031>     MOVE.b $A(A1),D0
00029252 <AmiBlitz3_wizzard.ab2@12032>     MOVEA.l _execbase,A6
00029258 <AmiBlitz3_wizzard.ab2@12033>     MOVE.l mempool2,a0
0002925C <AmiBlitz3_wizzard.ab2@12034>     JSR _FreePooled(A6)
00029260 <AmiBlitz3_wizzard.ab2@12035> BRA.w freetypes
00029262 <AmiBlitz3_wizzard.ab2@12038> RTS
00029268 <AmiBlitz3_wizzard.ab2@12042>   JSR uselib2
0002926E <AmiBlitz3_wizzard.ab2@12044>   CLR.w notshared
00029274 <AmiBlitz3_wizzard.ab2@12045>   CLR.w varmode
0002927A <AmiBlitz3_wizzard.ab2@12046>   MOVE.w proceduremode,D1
0002927E <AmiBlitz3_wizzard.ab2@12047>    BNE.w JL_0_8F4E
00029284 <AmiBlitz3_wizzard.ab2@12048>   LEA varbase,A2
0002928A <AmiBlitz3_wizzard.ab2@12049>   LEA ptr_parameterstore,a0
0002928E <AmiBlitz3_wizzard.ab2@12050>   CMP.b #$22,(a0)
00029292 <AmiBlitz3_wizzard.ab2@12051>   BNE JL_0_8E5E
00029294 <AmiBlitz3_wizzard.ab2@12052>   MOVEQ #0,d0
0002929A <AmiBlitz3_wizzard.ab2@12053> JMP error
0002929E <AmiBlitz3_wizzard.ab2@12056>   BSR.w findvariable
000292A2 <AmiBlitz3_wizzard.ab2@12059>   BNE.w JL_0_8E7E
000292A8 <AmiBlitz3_wizzard.ab2@12062>   MOVE.b flagmask+1,D1
000292AC <AmiBlitz3_wizzard.ab2@12063>   MOVE.b $7(A2),D3
000292AE <AmiBlitz3_wizzard.ab2@12064>   EOR.b D3,D1
000292B2 <AmiBlitz3_wizzard.ab2@12065>   BNE 'l2
000292BA <AmiBlitz3_wizzard.ab2@12066>   CMP.b #2,nowdeclare
000292BE <AmiBlitz3_wizzard.ab2@12067>   BEQ errormsg_declaredtwice
000292C2 <AmiBlitz3_wizzard.ab2@12068> BRA.w JL_0_8FA8
000292C6 <AmiBlitz3_wizzard.ab2@12071>   BSR.w findlab
000292CA <AmiBlitz3_wizzard.ab2@12072>   BNE 'l1
000292D2 <AmiBlitz3_wizzard.ab2@12073>   CMP.b #2,nowdeclare
000292D6 <AmiBlitz3_wizzard.ab2@12074>   BEQ errormsg_declaredtwice
000292D8 <AmiBlitz3_wizzard.ab2@12075>   CMP.w d0,d0
000292DC <AmiBlitz3_wizzard.ab2@12078> BRA.w JL_0_8E62
000292DE <AmiBlitz3_wizzard.ab2@12081>    MOVE.l a2,-(a7)
000292E4 <AmiBlitz3_wizzard.ab2@12082>    LEA sharebase,a2
000292E6 <AmiBlitz3_wizzard.ab2@12083>    MOVEQ #$f+4,d7
000292EA <AmiBlitz3_wizzard.ab2@12084>    BSR.w findlab
000292EE <AmiBlitz3_wizzard.ab2@12085>    BEQ 'l2x
000292F0 <AmiBlitz3_wizzard.ab2@12086>    MOVE.l (a7)+,a2
000292F4 <AmiBlitz3_wizzard.ab2@12087> BRA 'cont
000292F6 <AmiBlitz3_wizzard.ab2@12090>   ADDQ.l #4,a7
000292FC <AmiBlitz3_wizzard.ab2@12091>   CLR.w varmode
00029302 <AmiBlitz3_wizzard.ab2@12092>   MOVE.b flagmask+1,D1
00029306 <AmiBlitz3_wizzard.ab2@12093>   MOVE.b $7(A2),D3
00029308 <AmiBlitz3_wizzard.ab2@12094>   EOR.b D3,D1
0002930C <AmiBlitz3_wizzard.ab2@12095>   BNE vardeclareerr
00029310 <AmiBlitz3_wizzard.ab2@12096> BRA JL_0_8FA8
00029316 <AmiBlitz3_wizzard.ab2@12099>    MOVE.w nonew,D1
0002931A <AmiBlitz3_wizzard.ab2@12100>    BNE.w nonewerr
00029320 <AmiBlitz3_wizzard.ab2@12101>    TST.b nowdeclare
00029324 <AmiBlitz3_wizzard.ab2@12102>    BNE 'l2
0002932A <AmiBlitz3_wizzard.ab2@12103>    TST.b declare2
0002932E <AmiBlitz3_wizzard.ab2@12104>    BEQ 'l1
00029332 <AmiBlitz3_wizzard.ab2@12105>    CMP.b #$2e,d0
00029336 <AmiBlitz3_wizzard.ab2@12106>    BEQ 'l2
0002933A <AmiBlitz3_wizzard.ab2@12107>    CMP.b #"$",d0
0002933E <AmiBlitz3_wizzard.ab2@12108>    BEQ 'l2
00029342 <AmiBlitz3_wizzard.ab2@12109> BRA vardeclareerr
00029348 <AmiBlitz3_wizzard.ab2@12112>   TST.b declare
0002934C <AmiBlitz3_wizzard.ab2@12113>    BNE vardeclareerr
00029350 <AmiBlitz3_wizzard.ab2@12116>   BSR.w addvariable
00029356 <AmiBlitz3_wizzard.ab2@12117>   NOT.w notshared
00029358 <AmiBlitz3_wizzard.ab2@12118>   MOVEA.l A2,A3
0002935E <AmiBlitz3_wizzard.ab2@12119>   MOVEA.l defaulttype,A2
00029362 <AmiBlitz3_wizzard.ab2@12120>   CMP.w #$2E,D0
00029366 <AmiBlitz3_wizzard.ab2@12121>    BEQ.w JL_0_8EB8
0002936A <AmiBlitz3_wizzard.ab2@12122>   CMP.w #$24,D0
0002936E <AmiBlitz3_wizzard.ab2@12123>    BNE.w JL_0_8ECA
00029374 <AmiBlitz3_wizzard.ab2@12124>   LEA newtype_string,A2
00029378 <AmiBlitz3_wizzard.ab2@12125>    BSR.w get1bytemain
0002937C <AmiBlitz3_wizzard.ab2@12126> BRA.w JL_0_8ECA
00029382 <AmiBlitz3_wizzard.ab2@12129> JMP JUMP_notypeerr
00029386 <AmiBlitz3_wizzard.ab2@12132>    BSR.w getparameter2
0002938C <AmiBlitz3_wizzard.ab2@12133>   LEA newtypebase,A2
00029390 <AmiBlitz3_wizzard.ab2@12134>    BSR.w findtype
00029394 <AmiBlitz3_wizzard.ab2@12135>    BNE.w notypeerr3
0002939A <AmiBlitz3_wizzard.ab2@12138>   CMPA.l #newtype_byte,A2
0002939E <AmiBlitz3_wizzard.ab2@12139>    BEQ.w JL_0_8EECb
000293A4 <AmiBlitz3_wizzard.ab2@12140>   MOVE.w varmode,D1
000293A8 <AmiBlitz3_wizzard.ab2@12141>    BNE.w JL_0_8EE4b
000293AE <AmiBlitz3_wizzard.ab2@12142>   ADDQ.w #1,globalvarpointer
000293B6 <AmiBlitz3_wizzard.ab2@12145>   BCLR #$0,globalvarpointer+1
000293BA <AmiBlitz3_wizzard.ab2@12148>   MOVE.l A2,$A(A3)
000293C2 <AmiBlitz3_wizzard.ab2@12149>   MOVE.w flagmask,$6(A3)                                  ;??????????
000293C4 <AmiBlitz3_wizzard.ab2@12151>   MOVEQ.l #$04,D1
000293CC <AmiBlitz3_wizzard.ab2@12152>   BTST #$0,flagmask+1
000293D0 <AmiBlitz3_wizzard.ab2@12153>    BNE.w JL_0_8F22b
000293D8 <AmiBlitz3_wizzard.ab2@12154>   BTST #$1,flagmask+1
000293DC <AmiBlitz3_wizzard.ab2@12155>    BNE.w JL_0_8F22b
000293E4 <AmiBlitz3_wizzard.ab2@12156>   CMPI.l #$100,$4(A2)
000293E8 <AmiBlitz3_wizzard.ab2@12157>    BCC.w JL_0_8F22b
000293EC <AmiBlitz3_wizzard.ab2@12158>   MOVE.w $8(A2),D1
000293F2 <AmiBlitz3_wizzard.ab2@12161>   TST.w varmode
000293F6 <AmiBlitz3_wizzard.ab2@12162> BRA.w JL_0_8F3E
000293FA <AmiBlitz3_wizzard.ab2@12171>   BSR.w getparameter2
00029400 <AmiBlitz3_wizzard.ab2@12172>   LEA newtypebase,A2
00029404 <AmiBlitz3_wizzard.ab2@12173>    BSR.w findtype
00029408 <AmiBlitz3_wizzard.ab2@12174>    BNE.w notypeerr
0002940E <AmiBlitz3_wizzard.ab2@12177>   CMPA.l #newtype_byte,A2
00029412 <AmiBlitz3_wizzard.ab2@12178>    BEQ.w JL_0_8EEC
00029418 <AmiBlitz3_wizzard.ab2@12179>   MOVE.w varmode,D1
0002941C <AmiBlitz3_wizzard.ab2@12180>    BNE.w JL_0_8EE4
00029422 <AmiBlitz3_wizzard.ab2@12181>   ADDQ.w #1,globalvarpointer
0002942A <AmiBlitz3_wizzard.ab2@12184>   BCLR #$0,globalvarpointer+1
0002942E <AmiBlitz3_wizzard.ab2@12187>   MOVE.l A2,$A(A3)
00029436 <AmiBlitz3_wizzard.ab2@12188>   MOVE.w flagmask,$6(A3)                                  ;??????????
00029438 <AmiBlitz3_wizzard.ab2@12189>   MOVEQ.l #$04,D1
00029440 <AmiBlitz3_wizzard.ab2@12190>   BTST #$0,flagmask+1
00029444 <AmiBlitz3_wizzard.ab2@12191>    BNE.w JL_0_8F22
0002944C <AmiBlitz3_wizzard.ab2@12192>   BTST #$1,flagmask+1
00029450 <AmiBlitz3_wizzard.ab2@12193>    BNE.w JL_0_8F22
00029458 <AmiBlitz3_wizzard.ab2@12194>   CMPI.l #$100,$4(A2)
0002945C <AmiBlitz3_wizzard.ab2@12195>    BCC.w JL_0_8F22
00029460 <AmiBlitz3_wizzard.ab2@12196>   MOVE.w $8(A2),D1
00029466 <AmiBlitz3_wizzard.ab2@12199>   TST.w varmode
0002946A <AmiBlitz3_wizzard.ab2@12200>    BEQ.w JL_0_8F3E
0002946C <AmiBlitz3_wizzard.ab2@12201>   NEG.w D1
00029472 <AmiBlitz3_wizzard.ab2@12202>   ADD.w D1,globalvarpointer
0002947A <AmiBlitz3_wizzard.ab2@12203>   MOVE.w globalvarpointer,$4(A3)
0002947C <AmiBlitz3_wizzard.ab2@12204> RTS
00029484 <AmiBlitz3_wizzard.ab2@12207>   MOVE.w globalvarpointer,$4(A3)
0002948A <AmiBlitz3_wizzard.ab2@12208>   ADD.w D1,globalvarpointer
0002948C <AmiBlitz3_wizzard.ab2@12209> RTS
00029492 <AmiBlitz3_wizzard.ab2@12213>   LEA firstglob,A2
00029496 <AmiBlitz3_wizzard.ab2@12214>    BSR.w findvariable2
0002949A <AmiBlitz3_wizzard.ab2@12217>   BNE.w JL_0_8F74
000294A0 <AmiBlitz3_wizzard.ab2@12218>   MOVE.b flagmask+1,D1
000294A4 <AmiBlitz3_wizzard.ab2@12219>   MOVE.b $7(A2),D3
000294A6 <AmiBlitz3_wizzard.ab2@12220>   EOR.b D3,D1
000294AA <AmiBlitz3_wizzard.ab2@12221>    BEQ.w JL_0_8FA8
000294AE <AmiBlitz3_wizzard.ab2@12222>    BSR.w findlab
000294B2 <AmiBlitz3_wizzard.ab2@12223> BRA.w JL_0_8F58
000294BA <AmiBlitz3_wizzard.ab2@12226>   MOVE.w #$FFFF,varmode
000294C0 <AmiBlitz3_wizzard.ab2@12227>   MOVE.w globalvarpointer,-(A7)
000294CA <AmiBlitz3_wizzard.ab2@12228>   MOVE.w locvaroff,globalvarpointer
000294D0 <AmiBlitz3_wizzard.ab2@12229>   LEA firstlocal,A2
000294D8 <AmiBlitz3_wizzard.ab2@12230>   MOVE.b #1,newvariable
000294DC <AmiBlitz3_wizzard.ab2@12231>    BSR.w JL_0_8E5E
000294E2 <AmiBlitz3_wizzard.ab2@12232>   CLR.b newvariable
000294EC <AmiBlitz3_wizzard.ab2@12233>   MOVE.w globalvarpointer,locvaroff
000294F2 <AmiBlitz3_wizzard.ab2@12234>   MOVE.w (A7)+,globalvarpointer
000294F4 <AmiBlitz3_wizzard.ab2@12235> RTS
000294F6 <AmiBlitz3_wizzard.ab2@12238>   MOVEA.l A2,A3
000294FA <AmiBlitz3_wizzard.ab2@12239>   CMP.w #$2E,D0
000294FE <AmiBlitz3_wizzard.ab2@12240>    BEQ.w JL_0_8FCE
00029502 <AmiBlitz3_wizzard.ab2@12241>   CMP.w #$24,D0
00029506 <AmiBlitz3_wizzard.ab2@12242>    BNE.w JL_0_8FE8
0002950E <AmiBlitz3_wizzard.ab2@12243>   CMPI.l #newtype_string,$A(A3)
00029512 <AmiBlitz3_wizzard.ab2@12244>    BNE.w rongtypeerr
00029516 <AmiBlitz3_wizzard.ab2@12245>    BSR.w get1bytemain
0002951A <AmiBlitz3_wizzard.ab2@12246> BRA.w JL_0_8FE8
0002951E <AmiBlitz3_wizzard.ab2@12249>    BSR.w getparameter2
00029524 <AmiBlitz3_wizzard.ab2@12250>   LEA newtypebase,A2
00029528 <AmiBlitz3_wizzard.ab2@12251>    BSR.w findtype
0002952C <AmiBlitz3_wizzard.ab2@12252>    BNE.w notypeerr
00029530 <AmiBlitz3_wizzard.ab2@12253>   CMPA.l $A(A3),A2
00029534 <AmiBlitz3_wizzard.ab2@12254>    BNE.w rongtypeerr
0002953C <AmiBlitz3_wizzard.ab2@12256>   BTST #$0,flagmask+1
00029540 <AmiBlitz3_wizzard.ab2@12257>    BEQ.w JL_0_8FFE
00029546 <AmiBlitz3_wizzard.ab2@12258>   BTST #$0,$7(A3)
0002954A <AmiBlitz3_wizzard.ab2@12259>    BEQ.w pointerr
0002954E <AmiBlitz3_wizzard.ab2@12262>   MOVEA.l $A(A3),A2
00029550 <AmiBlitz3_wizzard.ab2@12263> RTS
00029552 <AmiBlitz3_wizzard.ab2@12267>    TST.l D3                                                ;newtype >32kb  .w to .l
00029556 <AmiBlitz3_wizzard.ab2@12268>    BEQ.w JL_0_9042
00029560 <AmiBlitz3_wizzard.ab2@12269>    MOVE.l destpointer,loada
00029564 <AmiBlitz3_wizzard.ab2@12272> BRA JL_0_9032
00029568 <AmiBlitz3_wizzard.ab2@12274>   CMP.w #$9,D3                                             ;_addq_arrays
0002956C <AmiBlitz3_wizzard.ab2@12275>    BCC.w JL_0_9032
00029572 <AmiBlitz3_wizzard.ab2@12276>   MOVE.w d3,arrayoffset
00029576 <AmiBlitz3_wizzard.ab2@12277>   ANDI.w #$7,D3
00029578 <AmiBlitz3_wizzard.ab2@12278>   LSL.w #8,D3
0002957A <AmiBlitz3_wizzard.ab2@12279>   LSL.w #1,D3
00029582 <AmiBlitz3_wizzard.ab2@12280>   ANDI.w #$F1FF,addqa0
00029588 <AmiBlitz3_wizzard.ab2@12281>   OR.w D3,addqa0
0002958E <AmiBlitz3_wizzard.ab2@12282>   MOVE.w addqa0,D1
00029592 <AmiBlitz3_wizzard.ab2@12283> BRA.w writeword
00029598 <AmiBlitz3_wizzard.ab2@12286>   CMP.l #$7fff,d3                                          ;>32kb newtypes
0002959C <AmiBlitz3_wizzard.ab2@12287>   BGT longoffset
000295A2 <AmiBlitz3_wizzard.ab2@12288>   MOVE.w D3,leaa0a0+2
000295A8 <AmiBlitz3_wizzard.ab2@12289>   MOVE.w d3,arrayoffset
000295AE <AmiBlitz3_wizzard.ab2@12290>   MOVE.l leaa0a0,D1
000295B2 <AmiBlitz3_wizzard.ab2@12291>   BSR.w writelong
000295B4 <AmiBlitz3_wizzard.ab2@12294> RTS
000295B8 <AmiBlitz3_wizzard.ab2@12297>    MOVE.w #$d5fc,d1
000295BC <AmiBlitz3_wizzard.ab2@12298>    BSR writeword
000295BE <AmiBlitz3_wizzard.ab2@12299>    MOVE.l d3,d1
000295C2 <AmiBlitz3_wizzard.ab2@12300>    BSR.w writelong
000295C4 <AmiBlitz3_wizzard.ab2@12301> RTS
000295C8 <AmiBlitz3_wizzard.ab2@12305>   Dc.w $b0ad,0000                                          ;cmp.l $0(A5),D0    ;nooptimize
000295CC <AmiBlitz3_wizzard.ab2@12308>    BCS.w arrchk3                                           
000295D2 <AmiBlitz3_wizzard.ab2@12309>    JSR $20000                                              ;jsr 0
000295D8 <AmiBlitz3_wizzard.ab2@12315>   TST.b fast
000295DC <AmiBlitz3_wizzard.ab2@12316>   BEQ 'l1
000295DE <AmiBlitz3_wizzard.ab2@12317>    MOVEQ #0,d1                                             ;faster arrays
000295E4 <AmiBlitz3_wizzard.ab2@12318>    MOVE.w regnum,d2
000295E6 <AmiBlitz3_wizzard.ab2@12319>    MOVE.w d2,d1
000295E8 <AmiBlitz3_wizzard.ab2@12320>    LSL.w #8,d1
000295EA <AmiBlitz3_wizzard.ab2@12321>    LSL.w #4,d1
000295EC <AmiBlitz3_wizzard.ab2@12322>    ADD.w d2,d1
000295F2 <AmiBlitz3_wizzard.ab2@12323>    OR.l #$4c2d0000,d1
000295F8 <AmiBlitz3_wizzard.ab2@12324>    TST.w varmode
000295FC <AmiBlitz3_wizzard.ab2@12325>    BEQ 'l1a
00029600 <AmiBlitz3_wizzard.ab2@12326>    BCLR #16,d1
00029604 <AmiBlitz3_wizzard.ab2@12329>    BSR writelong
00029608 <AmiBlitz3_wizzard.ab2@12330>    MOVE.w $4(A7),D1
0002960C <AmiBlitz3_wizzard.ab2@12331>    BSR.w writeword
00029612 <AmiBlitz3_wizzard.ab2@12332>    MOVE.w regnum,D1
00029614 <AmiBlitz3_wizzard.ab2@12333>   SUBQ.w #1,D1
00029616 <AmiBlitz3_wizzard.ab2@12334>   LSL.w #8,D1
00029618 <AmiBlitz3_wizzard.ab2@12335>   LSL.w #1,D1
0002961C <AmiBlitz3_wizzard.ab2@12336>   ORI.w #$D080,D1
00029622 <AmiBlitz3_wizzard.ab2@12337>   OR.w regnum,D1
00029626 <AmiBlitz3_wizzard.ab2@12338>    BSR.w writeword
00029628 <AmiBlitz3_wizzard.ab2@12339> RTS
0002962E <AmiBlitz3_wizzard.ab2@12342>   MOVE.w regnum,D2
00029632 <AmiBlitz3_wizzard.ab2@12343>   MOVE.w arrmul1(PC),D1
00029634 <AmiBlitz3_wizzard.ab2@12344>   OR.w D2,D1
00029636 <AmiBlitz3_wizzard.ab2@12345>   SUBQ.w #1,D1
0002963A <AmiBlitz3_wizzard.ab2@12346>    BSR.w writeword
0002963E <AmiBlitz3_wizzard.ab2@12347>   MOVE.w arrmul2(PC),D1
00029640 <AmiBlitz3_wizzard.ab2@12348>   OR.w D2,D1
00029642 <AmiBlitz3_wizzard.ab2@12349>   MOVE.w D2,D3
00029644 <AmiBlitz3_wizzard.ab2@12350>   SUBQ.w #1,D3
00029646 <AmiBlitz3_wizzard.ab2@12351>   LSL.w #8,D3
00029648 <AmiBlitz3_wizzard.ab2@12352>   LSL.w #1,D3
0002964A <AmiBlitz3_wizzard.ab2@12353>   OR.w D3,D1
0002964E <AmiBlitz3_wizzard.ab2@12354>    BSR.w writeword
00029652 <AmiBlitz3_wizzard.ab2@12355>   MOVE.w arrmul3(PC),D1
00029654 <AmiBlitz3_wizzard.ab2@12356>   MOVE.w D2,D3
00029656 <AmiBlitz3_wizzard.ab2@12357>   LSL.w #8,D3
00029658 <AmiBlitz3_wizzard.ab2@12358>   LSL.w #1,D3
0002965A <AmiBlitz3_wizzard.ab2@12359>   OR.w D3,D1
0002965E <AmiBlitz3_wizzard.ab2@12360>    BSR.w pokewda5s
00029662 <AmiBlitz3_wizzard.ab2@12361>   MOVE.w $4(A7),D1
00029664 <AmiBlitz3_wizzard.ab2@12362>   ADDQ.w #2,D1
00029668 <AmiBlitz3_wizzard.ab2@12363>    BSR.w writeword
0002966C <AmiBlitz3_wizzard.ab2@12364>   MOVE.w arrmul4(PC),D1
0002966E <AmiBlitz3_wizzard.ab2@12365>   MOVE.w D2,D3
00029670 <AmiBlitz3_wizzard.ab2@12366>   SUBQ.w #1,D3
00029672 <AmiBlitz3_wizzard.ab2@12367>   LSL.w #8,D3
00029674 <AmiBlitz3_wizzard.ab2@12368>   LSL.w #1,D3
00029676 <AmiBlitz3_wizzard.ab2@12369>   OR.w D3,D1
0002967A <AmiBlitz3_wizzard.ab2@12370>    BSR.w pokewda5s
0002967E <AmiBlitz3_wizzard.ab2@12371>   MOVE.w $4(A7),D1
00029682 <AmiBlitz3_wizzard.ab2@12372>    BSR.w writeword
00029686 <AmiBlitz3_wizzard.ab2@12373>   MOVE.w arrmul5(PC),D1
00029688 <AmiBlitz3_wizzard.ab2@12374>   OR.w D2,D1
0002968A <AmiBlitz3_wizzard.ab2@12375>   SUBQ.w #1,D1
0002968E <AmiBlitz3_wizzard.ab2@12376>    BSR.w writeword
00029692 <AmiBlitz3_wizzard.ab2@12377>   MOVE.w arrmul6(PC),D1
00029694 <AmiBlitz3_wizzard.ab2@12378>   OR.w D2,D1
00029696 <AmiBlitz3_wizzard.ab2@12379>   SUBQ.w #1,D1
0002969A <AmiBlitz3_wizzard.ab2@12380>    BSR.w writeword
0002969E <AmiBlitz3_wizzard.ab2@12381>   MOVE.w arrmul7(PC),D1
000296A0 <AmiBlitz3_wizzard.ab2@12382>   OR.w D2,D1
000296A2 <AmiBlitz3_wizzard.ab2@12383>   SUBQ.w #1,D1
000296A4 <AmiBlitz3_wizzard.ab2@12384>   MOVE.w D2,D3
000296A6 <AmiBlitz3_wizzard.ab2@12385>   LSL.w #8,D3
000296A8 <AmiBlitz3_wizzard.ab2@12386>   LSL.w #1,D3
000296AA <AmiBlitz3_wizzard.ab2@12387>   OR.w D3,D1
000296AE <AmiBlitz3_wizzard.ab2@12388>    BSR.w writeword
000296B2 <AmiBlitz3_wizzard.ab2@12389>   MOVE.w arrmul8(PC),D1
000296B4 <AmiBlitz3_wizzard.ab2@12390>   MOVE.w D2,D3
000296B6 <AmiBlitz3_wizzard.ab2@12391>   SUBQ.w #1,D3
000296B8 <AmiBlitz3_wizzard.ab2@12392>   LSL.w #8,D3
000296BA <AmiBlitz3_wizzard.ab2@12393>   LSL.w #1,D3
000296BC <AmiBlitz3_wizzard.ab2@12394>   OR.w D3,D1
000296C0 <AmiBlitz3_wizzard.ab2@12395>    BSR.w writeword
000296C6 <AmiBlitz3_wizzard.ab2@12396>   MOVE.w regnum,D1
000296C8 <AmiBlitz3_wizzard.ab2@12397>   SUBQ.w #1,D1
000296CA <AmiBlitz3_wizzard.ab2@12398>   LSL.w #8,D1
000296CC <AmiBlitz3_wizzard.ab2@12399>   LSL.w #1,D1
000296D0 <AmiBlitz3_wizzard.ab2@12400>   ORI.w #$D080,D1
000296D6 <AmiBlitz3_wizzard.ab2@12401>   OR.w regnum,D1
000296DA <AmiBlitz3_wizzard.ab2@12402> BRA.w writeword
000296DC <AmiBlitz3_wizzard.ab2@12410> arrmul1:   MOVE.l d0,-(a7)                                ;write array access
000296DE <AmiBlitz3_wizzard.ab2@12411> arrmul2:   MOVE  d0,d0
000296E2 <AmiBlitz3_wizzard.ab2@12412> arrmul3:   MULU 0(a5),d0                                  ;mulu   x+2(a5),d1  ;lo*lo
000296E6 <AmiBlitz3_wizzard.ab2@12413> arrmul4:   MULU 0(a5),d0                                  ;mulu   x(a5),d0    ;hi*lo
000296E8 <AmiBlitz3_wizzard.ab2@12415> arrmul5:   SWAP d0
000296EA <AmiBlitz3_wizzard.ab2@12416> arrmul6:   CLR d0
000296EC <AmiBlitz3_wizzard.ab2@12417> arrmul7:   ADD.l d0,d0
000296EE <AmiBlitz3_wizzard.ab2@12418> arrmul8:   MOVE.l (a7)+,d0
000296F2 <AmiBlitz3_wizzard.ab2@12423> listcode1:  Dc.b $24,$6D :              Dc.b $00,$00       ;MOVEA.L $0000(A5),A2      ;pointer to start of array data
000296F6 <AmiBlitz3_wizzard.ab2@12424> listcode2:  Dc.b $24,$6A,$FF,$E0                           ;MOVEA.L -$0020(A2),A2     ;pointer to current
000296F8 <AmiBlitz3_wizzard.ab2@12425> listarfix:  Dc.b $50,$4A                                   ;ADDQ.W  #8,A2
000296FE <AmiBlitz3_wizzard.ab2@12443>   CLR.l lastoffset_org
00029704 <AmiBlitz3_wizzard.ab2@12444>   BTST #$1,$7(A3)
00029708 <AmiBlitz3_wizzard.ab2@12445>    BEQ.w calcvar__notarr
0002970E <AmiBlitz3_wizzard.ab2@12446>   MOVE.w notshared,D1
00029712 <AmiBlitz3_wizzard.ab2@12447>    BNE.w noarrerr
00029716 <AmiBlitz3_wizzard.ab2@12448>    BSR.w get1bytemain
0002971A <AmiBlitz3_wizzard.ab2@12449>   CMP.w #$29,D0
0002971E <AmiBlitz3_wizzard.ab2@12450>    BNE.w calcvar__notalist
00029724 <AmiBlitz3_wizzard.ab2@12451>   BTST #$0,$6(A3)
00029728 <AmiBlitz3_wizzard.ab2@12452>    BEQ.w nolisterr
00029730 <AmiBlitz3_wizzard.ab2@12453>   MOVE.w $4(A3),listcode1+2
00029734 <AmiBlitz3_wizzard.ab2@12454>   MOVE.l listcode1(PC),D1
00029738 <AmiBlitz3_wizzard.ab2@12455>    BSR.w pokela5s
0002973C <AmiBlitz3_wizzard.ab2@12456>   MOVE.l listcode2(PC),D1
00029740 <AmiBlitz3_wizzard.ab2@12457>    BSR.w writelong
00029746 <AmiBlitz3_wizzard.ab2@12458>   TST.b debugmode
0002974A <AmiBlitz3_wizzard.ab2@12459>    BEQ.w calcvar__nolrerr
0002974C <AmiBlitz3_wizzard.ab2@12463>   MOVE.l A2,-(A7)
00029750 <AmiBlitz3_wizzard.ab2@12464>   MOVE.w #$C315,D1
00029754 <AmiBlitz3_wizzard.ab2@12465>    BSR.w Atokejsr
00029756 <AmiBlitz3_wizzard.ab2@12466>   MOVEA.l (A7)+,A2
0002975A <AmiBlitz3_wizzard.ab2@12469>    MOVE.w listarfix(PC),D1                                 ;addq #8,a2
0002975E <AmiBlitz3_wizzard.ab2@12471>    BSR.w writeword
00029762 <AmiBlitz3_wizzard.ab2@12472> BRA.w calcvar__normalar
00029764 <AmiBlitz3_wizzard.ab2@12475> calcvar__listoff:   Ds.w 1
0002976A <AmiBlitz3_wizzard.ab2@12479>   CLR.w calcvar__listoff
00029770 <AmiBlitz3_wizzard.ab2@12480>   BTST #$0,$6(A3)
00029774 <AmiBlitz3_wizzard.ab2@12481>    BEQ.w calcvar__knop
0002977C <AmiBlitz3_wizzard.ab2@12482>   MOVE.w #$0008,calcvar__listoff                            ;adjust size of one element if list.
00029780 <AmiBlitz3_wizzard.ab2@12485>   MOVEM.l A2-A3,-(A7)
00029786 <AmiBlitz3_wizzard.ab2@12486>   MOVE.w varmode,-(A7)
0002978A <AmiBlitz3_wizzard.ab2@12487>   MOVE.w $8(A3),-(A7)                                       ;number of dims
0002978E <AmiBlitz3_wizzard.ab2@12488>   MOVE.w $4(A3),-(A7)                                       ;varoff
00029790 <AmiBlitz3_wizzard.ab2@12489>   MOVE.l A2,-(A7)
00029796 <AmiBlitz3_wizzard.ab2@12490>   MOVE.w flagmask,-(A7)
000297A0 <AmiBlitz3_wizzard.ab2@12492>   MOVE.w oldqflag,instringon
000297A6 <AmiBlitz3_wizzard.ab2@12493>   MOVEA.l lastsourcepos,A5
000297AA <AmiBlitz3_wizzard.ab2@12494>    BSR.w arreval
000297B0 <AmiBlitz3_wizzard.ab2@12495>   MOVE.w (A7)+,flagmask
000297B8 <AmiBlitz3_wizzard.ab2@12496>   MOVE.w $8(A7),varmode
000297BE <AmiBlitz3_wizzard.ab2@12497>   TST.b debugmode
000297C2 <AmiBlitz3_wizzard.ab2@12498>    BEQ.w calcvar__noszchk
000297C4 <AmiBlitz3_wizzard.ab2@12502>   MOVEA.l (A7)+,A2
000297C6 <AmiBlitz3_wizzard.ab2@12503>   MOVEQ.l #$04,D1
000297CE <AmiBlitz3_wizzard.ab2@12504>   BTST #$0,flagmask+1                                      ;pointer?
000297D2 <AmiBlitz3_wizzard.ab2@12505>    BNE.b calcvar__domul                                          ;yes, then use 4 byte mul...
000297D6 <AmiBlitz3_wizzard.ab2@12506>   MOVE.w $8(A2),D1
000297DA <AmiBlitz3_wizzard.ab2@12509>   ADD.w calcvar__listoff(PC),D1
000297DE <AmiBlitz3_wizzard.ab2@12510>   BSR.w JL_0_B6DE
000297E4 <AmiBlitz3_wizzard.ab2@12511>   ADDQ.w #1,regnum
000297E6 <AmiBlitz3_wizzard.ab2@12514>   ADDQ.w #4,(A7)
000297EA <AmiBlitz3_wizzard.ab2@12515>   TST.w $4(A7)
000297EE <AmiBlitz3_wizzard.ab2@12516>    BEQ.w calcvar__isglob
000297F0 <AmiBlitz3_wizzard.ab2@12517>   SUBQ.w #8,(A7)                                           ;range check local array
000297F6 <AmiBlitz3_wizzard.ab2@12520>   TST.b debugmode
000297FA <AmiBlitz3_wizzard.ab2@12521>    BEQ.w calcvar__noer1
00029800 <AmiBlitz3_wizzard.ab2@12522>   MOVE.w regnum,D1
00029802 <AmiBlitz3_wizzard.ab2@12523>   SUBQ.w #1,D1
00029804 <AmiBlitz3_wizzard.ab2@12524>   LSL.w #8,D1
00029806 <AmiBlitz3_wizzard.ab2@12525>   LSL.w #1,D1
0002980A <AmiBlitz3_wizzard.ab2@12526>   OR.w zarrchk(PC),D1
0002980E <AmiBlitz3_wizzard.ab2@12527>    BSR.w pokewda5s                                         ;cmp.l x(a5),D regat
00029810 <AmiBlitz3_wizzard.ab2@12528>   MOVE.w (A7),D1
00029814 <AmiBlitz3_wizzard.ab2@12529>    BSR.w writeword
00029818 <AmiBlitz3_wizzard.ab2@12530>   MOVE.l arrchk2(PC),D1
0002981C <AmiBlitz3_wizzard.ab2@12531>    BSR.w writelong
00029820 <AmiBlitz3_wizzard.ab2@12532>   MOVE.w #$C309,D1
00029824 <AmiBlitz3_wizzard.ab2@12533>    BSR.w Atokejsr
00029828 <AmiBlitz3_wizzard.ab2@12536>   SUBQ.w #1,$2(A7)
0002982C <AmiBlitz3_wizzard.ab2@12537>    BEQ.w calcvar__ardone
00029830 <AmiBlitz3_wizzard.ab2@12538>   CMP.w #$2C,D0
00029834 <AmiBlitz3_wizzard.ab2@12539>    BNE.w syntaxerr
0002983A <AmiBlitz3_wizzard.ab2@12540>    TST.b fast
0002983E <AmiBlitz3_wizzard.ab2@12541>    BNE 'l1
00029842 <AmiBlitz3_wizzard.ab2@12542>    BSR.w arrevalchk
00029846 <AmiBlitz3_wizzard.ab2@12543> BRA 'l2
0002984A <AmiBlitz3_wizzard.ab2@12546>   BSR arreval
00029852 <AmiBlitz3_wizzard.ab2@12549>   MOVE.w $4(A7),varmode
00029856 <AmiBlitz3_wizzard.ab2@12550>   BSR.w JL_0_9052
0002985A <AmiBlitz3_wizzard.ab2@12551> BRA.w calcvar__arloop
0002985E <AmiBlitz3_wizzard.ab2@12555>   CMP.w #$29,D0
00029862 <AmiBlitz3_wizzard.ab2@12556>    BNE.w syntaxerr
00029868 <AmiBlitz3_wizzard.ab2@12557>   SUBQ.w #1,regnum
0002986A <AmiBlitz3_wizzard.ab2@12558>   ADDQ.w #6,A7
0002986E <AmiBlitz3_wizzard.ab2@12559>   MOVEM.l (A7)+,A2-A3
00029876 <AmiBlitz3_wizzard.ab2@12560>   MOVE.w $4(A3),movea5a0+2
0002987C <AmiBlitz3_wizzard.ab2@12561>   MOVE.l movea5a0,D1
00029880 <AmiBlitz3_wizzard.ab2@12562>    BSR.w pokela5s
00029886 <AmiBlitz3_wizzard.ab2@12563>   MOVE.w regnum,D1
0002988A <AmiBlitz3_wizzard.ab2@12564>   ORI.w #$D5C0,D1                                          ;add.l Dr,a2
0002988E <AmiBlitz3_wizzard.ab2@12565>    BSR.w writeword
00029894 <AmiBlitz3_wizzard.ab2@12566>   BTST #$0,$6(A3)
00029898 <AmiBlitz3_wizzard.ab2@12567>    BEQ.w calcvar__normalar
0002989C <AmiBlitz3_wizzard.ab2@12571>   MOVE.w listarfix(PC),D1
000298A0 <AmiBlitz3_wizzard.ab2@12572>    BSR.w writeword
000298A4 <AmiBlitz3_wizzard.ab2@12575>   BSR.w get1bytemain
000298AA <AmiBlitz3_wizzard.ab2@12579>   BTST #$0,$7(A3)
000298AE <AmiBlitz3_wizzard.ab2@12580>    BEQ.w calcvar__noppnt
000298B2 <AmiBlitz3_wizzard.ab2@12581>   CMP.w #$5C,D0
000298B6 <AmiBlitz3_wizzard.ab2@12582>    BNE.w calcvar__pmskip
000298BA <AmiBlitz3_wizzard.ab2@12583>   MOVE.w calcvar__pfix(PC),D1
000298BE <AmiBlitz3_wizzard.ab2@12584>    BSR.w writeword
000298C2 <AmiBlitz3_wizzard.ab2@12587>   MOVE.w #$8000,D2
000298C6 <AmiBlitz3_wizzard.ab2@12588> BRA.w calcvar__loopml
000298CA <AmiBlitz3_wizzard.ab2@12591>   MOVE.w #$C000,D2
000298CE <AmiBlitz3_wizzard.ab2@12592> BRA.w calcvar__loopml
000298D0 <AmiBlitz3_wizzard.ab2@12596> calcvar__pfix:   Dc.b $24,$52                                   ;MOVEA.L (A2),A2
000298D4 <AmiBlitz3_wizzard.ab2@12601>   CMP.w #$28,D0
000298D8 <AmiBlitz3_wizzard.ab2@12602>    BEQ.w noarrerr
000298E0 <AmiBlitz3_wizzard.ab2@12603>   CMPI.l #$100,$4(A2)
000298E4 <AmiBlitz3_wizzard.ab2@12604>    BCS.w calcvar__simpvar
000298EA <AmiBlitz3_wizzard.ab2@12605>   BTST #$0,$7(A3)
000298EE <AmiBlitz3_wizzard.ab2@12606>    BEQ.w calcvar__notap
000298F2 <AmiBlitz3_wizzard.ab2@12610>   CMP.w #$5C,D0
000298F6 <AmiBlitz3_wizzard.ab2@12611>    BEQ.w calcvar__notap
000298F8 <AmiBlitz3_wizzard.ab2@12612>   MOVEQ.l #$00,D2
000298FC <AmiBlitz3_wizzard.ab2@12613> BRA.w calcvar__simpvar2
00029900 <AmiBlitz3_wizzard.ab2@12616>   MOVE.w #$8000,D2
00029908 <AmiBlitz3_wizzard.ab2@12617>   MOVE.w $4(A3),movea5a0+2
0002990E <AmiBlitz3_wizzard.ab2@12618>   MOVE.l movea5a0,D1
00029912 <AmiBlitz3_wizzard.ab2@12619>    BSR.w pokela5s                                         ;move.l x(a5),a2
00029918 <AmiBlitz3_wizzard.ab2@12621>    TST.b debugmode
0002991C <AmiBlitz3_wizzard.ab2@12622>    BEQ.w 'skip
00029920 <AmiBlitz3_wizzard.ab2@12623>    MOVE.w #$c320,D1
00029926 <AmiBlitz3_wizzard.ab2@12624>    JSR Atokejsr
00029928 <AmiBlitz3_wizzard.ab2@12628>   MOVEQ.l #$00,D3
0002992C <AmiBlitz3_wizzard.ab2@12631>   CMP.w #$5C,D0
00029930 <AmiBlitz3_wizzard.ab2@12632>    BNE.w calcvar__done
00029938 <AmiBlitz3_wizzard.ab2@12633>   CMPI.l #$100,$4(A2)
0002993C <AmiBlitz3_wizzard.ab2@12634>    BCS.w rongtypeerr
0002993E <AmiBlitz3_wizzard.ab2@12635>   MOVE.w D2,-(A7)
00029942 <AmiBlitz3_wizzard.ab2@12636>    BSR.w getparameter2
00029946 <AmiBlitz3_wizzard.ab2@12637>    BEQ.w syntaxerr
00029948 <AmiBlitz3_wizzard.ab2@12638>   ADDQ.w #4,A2
0002994C <AmiBlitz3_wizzard.ab2@12639>    BSR.w findvariable2
00029950 <AmiBlitz3_wizzard.ab2@12640>    BNE.w noofferr
00029952 <AmiBlitz3_wizzard.ab2@12641>   MOVE.w (A7)+,D2
00029954 <AmiBlitz3_wizzard.ab2@12642>   MOVEA.l A2,A3                                             ;pointer to offset
00029958 <AmiBlitz3_wizzard.ab2@12643>   MOVEA.l $A(A3),A2                                         ;pointer to type
0002995A <AmiBlitz3_wizzard.ab2@12644>   MOVEQ #0,d1
0002995E <AmiBlitz3_wizzard.ab2@12645>   MOVE.w 4(a3),d1
00029960 <AmiBlitz3_wizzard.ab2@12646>   ADD.l d1,d3
00029966 <AmiBlitz3_wizzard.ab2@12648>   MOVE.l A3,lastoffset_org
0002996A <AmiBlitz3_wizzard.ab2@12649>   CMP.w #$5B,D0
0002996E <AmiBlitz3_wizzard.ab2@12650>    BNE.w calcvar__realdone
00029974 <AmiBlitz3_wizzard.ab2@12651>   BTST #$1,$7(A3)                                           ;a array [] in newtype is found
00029978 <AmiBlitz3_wizzard.ab2@12652>    BEQ.w rongtypeerr
0002997C <AmiBlitz3_wizzard.ab2@12653>    BSR.w JL_0_9004
00029980 <AmiBlitz3_wizzard.ab2@12654>   MOVEM.l A2-A3,-(A7)
00029986 <AmiBlitz3_wizzard.ab2@12655>   MOVE.w varmode,-(A7)
0002998C <AmiBlitz3_wizzard.ab2@12656>   MOVE.l lastoffset_org,-(A7)
00029992 <AmiBlitz3_wizzard.ab2@12657>   MOVE.w pusha2,D1
00029996 <AmiBlitz3_wizzard.ab2@12658>    BSR.w writeword
00029998 <AmiBlitz3_wizzard.ab2@12659>   MOVEQ.l #$03,D2                                          ;was 2 >32kb types
000299A2 <AmiBlitz3_wizzard.ab2@12660>   MOVE.l destpointer,deststore
000299A8 <AmiBlitz3_wizzard.ab2@12661>    MOVE.l rightsidetype,-(a7)
000299AE <AmiBlitz3_wizzard.ab2@12662>    MOVE.l leftsidetype,-(a7)
000299B4 <AmiBlitz3_wizzard.ab2@12663>    CLR.l rightsidetype
000299BA <AmiBlitz3_wizzard.ab2@12664>    CLR.l leftsidetype
000299BE <AmiBlitz3_wizzard.ab2@12665>    BSR.w eval
000299C4 <AmiBlitz3_wizzard.ab2@12666>    MOVE.l (a7)+,rightsidetype
000299CA <AmiBlitz3_wizzard.ab2@12667>    MOVE.l (a7)+,leftsidetype
000299CE <AmiBlitz3_wizzard.ab2@12668>   CMP.w #$5D,D0
000299D2 <AmiBlitz3_wizzard.ab2@12669>    BNE.w syntaxerr
000299D8 <AmiBlitz3_wizzard.ab2@12670>   TST.b fast                                               ;a2,-(a7) array
000299DC <AmiBlitz3_wizzard.ab2@12671>   BEQ calcvar__loop0_l10
000299E2 <AmiBlitz3_wizzard.ab2@12675>   MOVE.l destpointer,d1
000299E8 <AmiBlitz3_wizzard.ab2@12676>   SUB.l deststore,d1
000299EE <AmiBlitz3_wizzard.ab2@12677>   CMP.l #4,d1
000299F2 <AmiBlitz3_wizzard.ab2@12678>   BNE calcvar__loop0_l10
000299F8 <AmiBlitz3_wizzard.ab2@12679>   MOVE.l destpointer,a4
000299FE <AmiBlitz3_wizzard.ab2@12680>   MOVE.l -4(a4),-6(a4)
00029A04 <AmiBlitz3_wizzard.ab2@12681>   SUBQ.l #2,destpointer
00029A0A <AmiBlitz3_wizzard.ab2@12682>   CLR.l imm_addr
00029A10 <AmiBlitz3_wizzard.ab2@12683>   CLR.l load_var_addr
00029A14 <AmiBlitz3_wizzard.ab2@12684> BRA calcvar__loop0_l20
00029A1A <AmiBlitz3_wizzard.ab2@12687>   MOVE.w pulla2,D1
00029A1E <AmiBlitz3_wizzard.ab2@12688>    BSR.w writeword
00029A24 <AmiBlitz3_wizzard.ab2@12691>   MOVE.l (A7)+,lastoffset_org
00029A2A <AmiBlitz3_wizzard.ab2@12692>   MOVE.w (A7)+,varmode
00029A2E <AmiBlitz3_wizzard.ab2@12693>   MOVEM.l (A7)+,A2-A3
00029A34 <AmiBlitz3_wizzard.ab2@12699>   TST.w debugmode
00029A38 <AmiBlitz3_wizzard.ab2@12700>    BEQ.b calcvar__nobchk
00029A3C <AmiBlitz3_wizzard.ab2@12701>   MOVE.w $8(A3),D1
00029A40 <AmiBlitz3_wizzard.ab2@12702>    BEQ.b calcvar__nobchk                                   ;no [0] checks!
00029A46 <AmiBlitz3_wizzard.ab2@12706>   MOVE.w D1,brchkcode+2
00029A4C <AmiBlitz3_wizzard.ab2@12707>   MOVE.w regnum,D1
00029A4E <AmiBlitz3_wizzard.ab2@12708>   LSL.w #8,D1
00029A50 <AmiBlitz3_wizzard.ab2@12709>   LSL.w #1,D1
00029A54 <AmiBlitz3_wizzard.ab2@12710>   OR.w brchkcode0(PC),D1
00029A5A <AmiBlitz3_wizzard.ab2@12711>   MOVE.w D1,brchkcode
00029A5E <AmiBlitz3_wizzard.ab2@12712>   MOVE.l brchkcode(PC),D1
00029A62 <AmiBlitz3_wizzard.ab2@12713>    BSR.w writelong
00029A66 <AmiBlitz3_wizzard.ab2@12714>   MOVE.l brchkcode+4(PC),D1
00029A6A <AmiBlitz3_wizzard.ab2@12715>    BSR.w writelong
00029A6E <AmiBlitz3_wizzard.ab2@12716>   MOVE.w brchkcode+8(PC),D1
00029A72 <AmiBlitz3_wizzard.ab2@12717>    BSR.w writeword
00029A74 <AmiBlitz3_wizzard.ab2@12720>   MOVEQ.l #$04,D1
00029A7A <AmiBlitz3_wizzard.ab2@12721>   BTST #$0,$7(A3)
00029A7E <AmiBlitz3_wizzard.ab2@12722>    BNE.w calcvar__dothemul
00029A82 <AmiBlitz3_wizzard.ab2@12723>   MOVE.w $8(A2),D1
00029A86 <AmiBlitz3_wizzard.ab2@12726>   BSR.w JL_0_B6DE
00029A8C <AmiBlitz3_wizzard.ab2@12727>   MOVE.w addrega2,D1
00029A92 <AmiBlitz3_wizzard.ab2@12728>   OR.w regnum,D1
00029A96 <AmiBlitz3_wizzard.ab2@12729>    OR.w #$100,d1                                           ;>32kb types
00029A9A <AmiBlitz3_wizzard.ab2@12730>    BSR.w writeword
00029A9E <AmiBlitz3_wizzard.ab2@12731>    BSR.w get1bytemain
00029AA0 <AmiBlitz3_wizzard.ab2@12732>   MOVEQ.l #$00,D3
00029AA4 <AmiBlitz3_wizzard.ab2@12733>   MOVE.w #$8000,D2
00029AAA <AmiBlitz3_wizzard.ab2@12736>   BTST #$0,$7(A3)
00029AAE <AmiBlitz3_wizzard.ab2@12737>    BNE.w calcvar__pointer
00029AB2 <AmiBlitz3_wizzard.ab2@12738> BRA.w calcvar__loop0
00029AB6 <AmiBlitz3_wizzard.ab2@12742>  CMP.w #$5C,D0
00029ABA <AmiBlitz3_wizzard.ab2@12743>    BNE.w calcvar__done3
00029ABC <AmiBlitz3_wizzard.ab2@12744>   TST.w D3
00029AC0 <AmiBlitz3_wizzard.ab2@12745>    BNE.w calcvar__pskip
00029AC6 <AmiBlitz3_wizzard.ab2@12746>   MOVE.w movea0,D1
00029ACA <AmiBlitz3_wizzard.ab2@12747>    BSR.w writeword
00029ACE <AmiBlitz3_wizzard.ab2@12748> BRA.w calcvar__pmore
00029AD4 <AmiBlitz3_wizzard.ab2@12751>   MOVE.w D3,movea0a0+2
00029ADA <AmiBlitz3_wizzard.ab2@12752>   MOVE.l movea0a0,D1
00029ADE <AmiBlitz3_wizzard.ab2@12753>    BSR.w writelong
00029AE4 <AmiBlitz3_wizzard.ab2@12756>   BTST #$2,$7(A3)
00029AE8 <AmiBlitz3_wizzard.ab2@12757>    BEQ.w calcvar__loopml
00029AEE <AmiBlitz3_wizzard.ab2@12758>   MOVE.l adda0a0,D1
00029AF2 <AmiBlitz3_wizzard.ab2@12759>    BSR.w writelong
00029AF6 <AmiBlitz3_wizzard.ab2@12760> BRA.w calcvar__loopml
00029AFA <AmiBlitz3_wizzard.ab2@12763>   BSET #$E,D2
00029B00 <AmiBlitz3_wizzard.ab2@12764>   BTST #$2,$7(A3)
00029B04 <AmiBlitz3_wizzard.ab2@12765>    BNE.w calcvar__done
00029B08 <AmiBlitz3_wizzard.ab2@12766>   BSET #$D,D2
00029B10 <AmiBlitz3_wizzard.ab2@12769>   CMPI.l #$100,$4(A2)
00029B14 <AmiBlitz3_wizzard.ab2@12770>    BCC.w calcvar__done2
00029B18 <AmiBlitz3_wizzard.ab2@12771>   MOVE.b $7(A2),D2
00029B1C <AmiBlitz3_wizzard.ab2@12774> BRA.w JL_0_9004
00029B20 <AmiBlitz3_wizzard.ab2@12777>   MOVE.w $6(A2),D2
00029B24 <AmiBlitz3_wizzard.ab2@12780>   MOVE.w $4(A3),D3
00029B2A <AmiBlitz3_wizzard.ab2@12781>   BTST #$0,$7(A3)
00029B2E <AmiBlitz3_wizzard.ab2@12782>    BEQ.w calcvar__nopoint
00029B32 <AmiBlitz3_wizzard.ab2@12783>   BSET #$E,D2
00029B34 <AmiBlitz3_wizzard.ab2@12786> RTS
00029B38 <AmiBlitz3_wizzard.ab2@12790> brchkcode0:  Dc.b $B0,$7C,$00,$00                          ;CMP.W   #$0000,D0
00029B3C <AmiBlitz3_wizzard.ab2@12791> brchkcode:   Dc.b $B0,$7C :             Dc.b $00,$00       ;CMP.W   #$0000,D0
00029B3E <AmiBlitz3_wizzard.ab2@12792>              Dc.b $65,$04                                  ;BCS.B   brchkcode__ok
00029B40 <AmiBlitz3_wizzard.ab2@12793>              Dc.b $70,$02                                  ;MOVEQ   #$02,D0
00029B42 <AmiBlitz3_wizzard.ab2@12794>              Dc.b $4E,$40                                  ;TRAP    #00
00029B48 <AmiBlitz3_wizzard.ab2@12802>   TST.w varmode
00029B4C <AmiBlitz3_wizzard.ab2@12803>    BEQ.w writeword
00029B50 <AmiBlitz3_wizzard.ab2@12804>   BCLR #$0,D1
00029B54 <AmiBlitz3_wizzard.ab2@12805> BRA.w writeword
00029B5A <AmiBlitz3_wizzard.ab2@12808>   TST.w varmode
00029B5E <AmiBlitz3_wizzard.ab2@12809>    BEQ.w writeword
00029B62 <AmiBlitz3_wizzard.ab2@12810>   BCLR #$9,D1
00029B66 <AmiBlitz3_wizzard.ab2@12811> BRA.w writeword
00029B6C <AmiBlitz3_wizzard.ab2@12814>   TST.w proceduremode
00029B70 <AmiBlitz3_wizzard.ab2@12815>    BEQ.w writelong
00029B74 <AmiBlitz3_wizzard.ab2@12816>   BCLR #$19,D1
00029B78 <AmiBlitz3_wizzard.ab2@12817> BRA.w writelong
00029B7E <AmiBlitz3_wizzard.ab2@12820>   TST.w varmode
00029B82 <AmiBlitz3_wizzard.ab2@12821>   BEQ.w writelong
00029B86 <AmiBlitz3_wizzard.ab2@12822>   BCLR #$10,D1
00029B8C <AmiBlitz3_wizzard.ab2@12825>   ADDQ.l #1,destpointer
00029B94 <AmiBlitz3_wizzard.ab2@12826>   BCLR #$0,destpointer+3
00029B9A <AmiBlitz3_wizzard.ab2@12827>   MOVEA.l destpointer,A4
00029BA0 <AmiBlitz3_wizzard.ab2@12828>   CMPA.l destbufferend,A4
00029BA4 <AmiBlitz3_wizzard.ab2@12829>    BCC.w writeword__overa
00029BA6 <AmiBlitz3_wizzard.ab2@12830>   MOVE.l D1,(A4)+
00029BAC <AmiBlitz3_wizzard.ab2@12833>   MOVE.l A4,destpointer
00029BB0 <AmiBlitz3_wizzard.ab2@12834>   CMPA.l bigpc(PC),A4
00029BB4 <AmiBlitz3_wizzard.ab2@12835>    BHI.w writeword__nbp
00029BB6 <AmiBlitz3_wizzard.ab2@12836> RTS
00029BBE <AmiBlitz3_wizzard.ab2@12839>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
00029BC4 <AmiBlitz3_wizzard.ab2@12840>   CLR.b fast
00029BCA <AmiBlitz3_wizzard.ab2@12841>   CLR.b fpu
00029BD0 <AmiBlitz3_wizzard.ab2@12842>   CLR.b iee
00029BD2 <AmiBlitz3_wizzard.ab2@12843>   ADDQ.w #4,A4
00029BD6 <AmiBlitz3_wizzard.ab2@12844> BRA.w writeword__msa
00029BDC <AmiBlitz3_wizzard.ab2@12850>   ADDQ.l #1,destpointer
00029BE4 <AmiBlitz3_wizzard.ab2@12851>   BCLR #$0,destpointer+3
00029BEA <AmiBlitz3_wizzard.ab2@12852>   MOVEA.l destpointer,A4
00029BF0 <AmiBlitz3_wizzard.ab2@12853>   CMPA.l destbufferend,A4
00029BF4 <AmiBlitz3_wizzard.ab2@12854>    BCC.w writeword__over
00029BF6 <AmiBlitz3_wizzard.ab2@12855>   MOVE.w D1,(A4)+
00029BFC <AmiBlitz3_wizzard.ab2@12858>   MOVE.l A4,destpointer
00029C00 <AmiBlitz3_wizzard.ab2@12859>   CMPA.l bigpc(PC),A4
00029C04 <AmiBlitz3_wizzard.ab2@12860>    BHI.w writeword__nbp
00029C06 <AmiBlitz3_wizzard.ab2@12861> RTS
00029C0C <AmiBlitz3_wizzard.ab2@12864>   ADDQ.l #1,destpointer
00029C14 <AmiBlitz3_wizzard.ab2@12865>   BCLR #$0,destpointer+3
00029C1A <AmiBlitz3_wizzard.ab2@12866>   MOVEA.l destpointer,A4
00029C20 <AmiBlitz3_wizzard.ab2@12867>   CMPA.l destbufferend,A4
00029C24 <AmiBlitz3_wizzard.ab2@12868>    BCC.w writeword__over
00029C26 <AmiBlitz3_wizzard.ab2@12869>   MOVE.w D1,(A4)+
00029C2C <AmiBlitz3_wizzard.ab2@12870>   MOVE.l A4,destpointer
00029C30 <AmiBlitz3_wizzard.ab2@12871>   CMPA.l bigpc(PC),A4
00029C34 <AmiBlitz3_wizzard.ab2@12872>    BHI.w writeword__nbp
00029C36 <AmiBlitz3_wizzard.ab2@12873> RTS
00029C3C <AmiBlitz3_wizzard.ab2@12876>   TST.w cfetchmode
00029C40 <AmiBlitz3_wizzard.ab2@12877>   BNE.w writeword__nbp2
00029C46 <AmiBlitz3_wizzard.ab2@12878>   MOVE.l A4,bigpc
00029C48 <AmiBlitz3_wizzard.ab2@12881> RTS
00029C50 <AmiBlitz3_wizzard.ab2@12884>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
00029C52 <AmiBlitz3_wizzard.ab2@12885>   ADDQ.w #2,A4
00029C58 <AmiBlitz3_wizzard.ab2@12886>   CLR.b fast
00029C5E <AmiBlitz3_wizzard.ab2@12887>   CLR.b fpu
00029C64 <AmiBlitz3_wizzard.ab2@12888>   CLR.b iee
00029C68 <AmiBlitz3_wizzard.ab2@12889> BRA.w writeword__ms
00029C6E <AmiBlitz3_wizzard.ab2@12893>   MOVEA.l destpointer,A4
00029C74 <AmiBlitz3_wizzard.ab2@12894>   CMPA.l destbufferend,A4
00029C78 <AmiBlitz3_wizzard.ab2@12895>    BCC.w writebyte__over
00029C7A <AmiBlitz3_wizzard.ab2@12896>   MOVE.b D1,(A4)+
00029C80 <AmiBlitz3_wizzard.ab2@12899>   MOVE.l A4,destpointer
00029C84 <AmiBlitz3_wizzard.ab2@12900>   CMPA.l bigpc(PC),A4
00029C88 <AmiBlitz3_wizzard.ab2@12901>    BHI.w writebyte__nbp
00029C8A <AmiBlitz3_wizzard.ab2@12902> RTS
00029C90 <AmiBlitz3_wizzard.ab2@12905>   TST.w cfetchmode
00029C94 <AmiBlitz3_wizzard.ab2@12906>    BNE.w writebyte__nbp2
00029C9A <AmiBlitz3_wizzard.ab2@12907>   MOVE.l A4,bigpc
00029C9C <AmiBlitz3_wizzard.ab2@12910> RTS
00029CA4 <AmiBlitz3_wizzard.ab2@12913>   MOVE.w #-1,dontwrite
00029CA6 <AmiBlitz3_wizzard.ab2@12914>   ADDQ.w #1,A4
00029CAC <AmiBlitz3_wizzard.ab2@12915>   CLR.b fast
00029CB2 <AmiBlitz3_wizzard.ab2@12916>   CLR.b fpu
00029CB8 <AmiBlitz3_wizzard.ab2@12917>   CLR.b iee
00029CBC <AmiBlitz3_wizzard.ab2@12918> BRA.w writebyte__ms
00029CC0 <AmiBlitz3_wizzard.ab2@12921> bigpc:   Ds.l 1
00029CC2 <AmiBlitz3_wizzard.ab2@12925>   MOVE.w (A0)+,D1
00029CC6 <AmiBlitz3_wizzard.ab2@12926>   BSR.w writeword
00029CC8 <AmiBlitz3_wizzard.ab2@12929>     CMPA.l A1,A0
00029CCC <AmiBlitz3_wizzard.ab2@12930>     BCC.w pokecode__done
00029CCE <AmiBlitz3_wizzard.ab2@12931>       MOVE.w (A0)+,D1
00029CD2 <AmiBlitz3_wizzard.ab2@12932>       BSR.w writeword
00029CD6 <AmiBlitz3_wizzard.ab2@12933> BRA.w pokecode__loop
00029CD8 <AmiBlitz3_wizzard.ab2@12936> RTS
00029CDA <AmiBlitz3_wizzard.ab2@12939>   MOVE.w (A0)+,D1
00029CDE <AmiBlitz3_wizzard.ab2@12940>   BSR.w writeword
00029CE0 <AmiBlitz3_wizzard.ab2@12941>   CMPA.l A1,A0
00029CE4 <AmiBlitz3_wizzard.ab2@12942>   BCS.w pokecode2
00029CE6 <AmiBlitz3_wizzard.ab2@12943> RTS
00029CEC <AmiBlitz3_wizzard.ab2@12949>   TST.b iniffcommand
00029CF0 <AmiBlitz3_wizzard.ab2@12950>   BEQ 'l1
00029CF4 <AmiBlitz3_wizzard.ab2@12951>     MOVE.w #$4880,D1
00029CFA <AmiBlitz3_wizzard.ab2@12952>     OR.w regnum,D1
00029CFE <AmiBlitz3_wizzard.ab2@12953>     BSR writeword
00029D00 <AmiBlitz3_wizzard.ab2@12956> RTS
00029D04 <AmiBlitz3_wizzard.ab2@12959>   BSR.w convert_byte_to_word
00029D0A <AmiBlitz3_wizzard.ab2@12962>   TST.b iee
00029D0E <AmiBlitz3_wizzard.ab2@12963>   BEQ 'old
00029D12 <AmiBlitz3_wizzard.ab2@12964>   CMP.b #5,d2
00029D16 <AmiBlitz3_wizzard.ab2@12965>   BEQ wtof
00029D1A <AmiBlitz3_wizzard.ab2@12968>   MOVE.w #$48C0,D1
00029D20 <AmiBlitz3_wizzard.ab2@12969>   OR.w regnum,D1
00029D24 <AmiBlitz3_wizzard.ab2@12970> BRA.w writeword
00029D26 <AmiBlitz3_wizzard.ab2@12973>   MOVEQ #0,d0
00029D2C <AmiBlitz3_wizzard.ab2@12974>   MOVE.w regnum,d0
00029D2E <AmiBlitz3_wizzard.ab2@12975>   ASL.l #7,d0
00029D34 <AmiBlitz3_wizzard.ab2@12976>   MOVE.l #$f2005000,d1
00029D36 <AmiBlitz3_wizzard.ab2@12977>   OR.l d0,d1
00029D38 <AmiBlitz3_wizzard.ab2@12978>   ASL.l #1,d0
00029D3A <AmiBlitz3_wizzard.ab2@12979>   ASL.l #8,d0
00029D3C <AmiBlitz3_wizzard.ab2@12980>   OR.l d0,d1
00029D40 <AmiBlitz3_wizzard.ab2@12981> BRA writelong
00029D44 <AmiBlitz3_wizzard.ab2@12985>   BSR.w convert_byte_to_word
00029D48 <AmiBlitz3_wizzard.ab2@12988>   MOVE.w #$4840,D1
00029D4E <AmiBlitz3_wizzard.ab2@12989>   OR.w regnum,D1
00029D52 <AmiBlitz3_wizzard.ab2@12990>    BSR.w writeword
00029D56 <AmiBlitz3_wizzard.ab2@12991>   MOVE.w #$4240,D1
00029D5C <AmiBlitz3_wizzard.ab2@12992>   OR.w regnum,D1
00029D60 <AmiBlitz3_wizzard.ab2@12993> BRA.w writeword
00029D64 <AmiBlitz3_wizzard.ab2@12997>   CMP.w #$ffdc,d1
00029D68 <AmiBlitz3_wizzard.ab2@12998>   BNE 'negfpu
00029D6A <AmiBlitz3_wizzard.ab2@12999>   MOVEQ #0,d0
00029D70 <AmiBlitz3_wizzard.ab2@13000>   MOVE.w regnum,d0
00029D72 <AmiBlitz3_wizzard.ab2@13001>   ASL.l #7,d0
00029D78 <AmiBlitz3_wizzard.ab2@13002>   MOVE.l #$f2004000,d1
00029D7A <AmiBlitz3_wizzard.ab2@13003>   OR.l d0,d1
00029D7C <AmiBlitz3_wizzard.ab2@13004>   ASL.l #1,d0
00029D7E <AmiBlitz3_wizzard.ab2@13005>   ASL.l #8,d0
00029D80 <AmiBlitz3_wizzard.ab2@13006>   OR.l d0,d1
00029D84 <AmiBlitz3_wizzard.ab2@13007> BRA writelong
00029D86 <AmiBlitz3_wizzard.ab2@13011>   MOVEQ #0,d1
00029D8C <AmiBlitz3_wizzard.ab2@13012>   MOVE.w regnum,d1                                         ;fpu neg
00029D8E <AmiBlitz3_wizzard.ab2@13013>   ASL.l #7,d1
00029D94 <AmiBlitz3_wizzard.ab2@13014>   OR.l #$f200001a,d1
00029D96 <AmiBlitz3_wizzard.ab2@13015>   MOVE.l d0,-(a7)
00029D98 <AmiBlitz3_wizzard.ab2@13016>   MOVEQ #0,d0
00029D9E <AmiBlitz3_wizzard.ab2@13017>   MOVE.w regnum,d0
00029DA0 <AmiBlitz3_wizzard.ab2@13018>   ASL.l #8,d0
00029DA2 <AmiBlitz3_wizzard.ab2@13019>   ASL.l #2,d0
00029DA4 <AmiBlitz3_wizzard.ab2@13020>   OR.l d0,d1
00029DA6 <AmiBlitz3_wizzard.ab2@13021>   MOVE.l (a7)+,d0
00029DAA <AmiBlitz3_wizzard.ab2@13022> BRA writelong
00029DB0 <AmiBlitz3_wizzard.ab2@13025>    TST.b iee
00029DB4 <AmiBlitz3_wizzard.ab2@13026>    BNE wtof
00029DB8 <AmiBlitz3_wizzard.ab2@13027>    BSR.w convert_byte_to_long
00029DBC <AmiBlitz3_wizzard.ab2@13030>    MOVE.w #$FFDC,D1
00029DC2 <AmiBlitz3_wizzard.ab2@13033>    TST.b iee
00029DC6 <AmiBlitz3_wizzard.ab2@13034>    BNE ltof
00029DCC <AmiBlitz3_wizzard.ab2@13035>    MOVE.w D1,libjsr+2
00029DD0 <AmiBlitz3_wizzard.ab2@13036>    BSR.w JL_0_AD40
00029DD2 <AmiBlitz3_wizzard.ab2@13037>   MOVE.l D4,D1
00029DD6 <AmiBlitz3_wizzard.ab2@13038>    BSR.w JL_0_AD38
00029DDA <AmiBlitz3_wizzard.ab2@13039>   MOVE.w #$C900,D1
00029DDE <AmiBlitz3_wizzard.ab2@13040>    BSR.w Atokejsr
00029DE2 <AmiBlitz3_wizzard.ab2@13041>    BSR.w JL_0_A352
00029DE8 <AmiBlitz3_wizzard.ab2@13042>   MOVE.l libjsr,D1
00029DEC <AmiBlitz3_wizzard.ab2@13043>    BSR.w writelong
00029DF0 <AmiBlitz3_wizzard.ab2@13044>    BSR.w JL_0_A36E
00029DF2 <AmiBlitz3_wizzard.ab2@13045>   MOVE.l D5,D1
00029DF6 <AmiBlitz3_wizzard.ab2@13046> BRA.w JL_0_AD38
00029DF8 <AmiBlitz3_wizzard.ab2@13049> RTS
00029DFC <AmiBlitz3_wizzard.ab2@13052>   MOVE.w #$C317,D1
00029E02 <AmiBlitz3_wizzard.ab2@13053>   TST.b typecheck
00029E06 <AmiBlitz3_wizzard.ab2@13054>   BEQ 'l1
00029E0C <AmiBlitz3_wizzard.ab2@13055>    TST.b notypecheck
00029E10 <AmiBlitz3_wizzard.ab2@13056>    BNE 'l1
00029E16 <AmiBlitz3_wizzard.ab2@13057>    TST.l lasttoken
00029E1C <AmiBlitz3_wizzard.ab2@13064>   TST.b debugmode
00029E20 <AmiBlitz3_wizzard.ab2@13065>    BEQ.w JL_0_9696
00029E28 <AmiBlitz3_wizzard.ab2@13066>   BTST #$7,overflowcheck
00029E2C <AmiBlitz3_wizzard.ab2@13067>    BEQ.w JL_0_9696
00029E32 <AmiBlitz3_wizzard.ab2@13068>   TST.w cfetchmode
00029E36 <AmiBlitz3_wizzard.ab2@13069>    BNE.w JL_0_9696
00029E3C <AmiBlitz3_wizzard.ab2@13070>   TST.w regnum
00029E40 <AmiBlitz3_wizzard.ab2@13071>    BEQ.w JL_0_968A
00029E42 <AmiBlitz3_wizzard.ab2@13072>   MOVE.w D1,-(A7)
00029E46 <AmiBlitz3_wizzard.ab2@13073>   MOVE.w JL_0_9698(PC),D1
00029E4A <AmiBlitz3_wizzard.ab2@13074>    BSR.w writeword
00029E50 <AmiBlitz3_wizzard.ab2@13075>   MOVE.w regnum,D1
00029E54 <AmiBlitz3_wizzard.ab2@13076>   OR.w L_0_969C(PC),D1
00029E58 <AmiBlitz3_wizzard.ab2@13077>    BSR.w writeword
00029E5A <AmiBlitz3_wizzard.ab2@13078>   MOVE.w (A7)+,D1
00029E5E <AmiBlitz3_wizzard.ab2@13079>    BSR.w JL_0_968A
00029E62 <AmiBlitz3_wizzard.ab2@13080>   MOVE.w L_0_969A(PC),D1
00029E66 <AmiBlitz3_wizzard.ab2@13081> BRA.w writeword
00029E6A <AmiBlitz3_wizzard.ab2@13085>   MOVEM.l D0-D7/A0-A6,-(A7)
00029E6E <AmiBlitz3_wizzard.ab2@13086>    BSR.w Atokejsr
00029E72 <AmiBlitz3_wizzard.ab2@13087>   MOVEM.l (A7)+,D0-D7/A0-A6
00029E74 <AmiBlitz3_wizzard.ab2@13090> RTS
00029E76 <AmiBlitz3_wizzard.ab2@13093>   MOVE.l D0,-(A7)
00029E78 <AmiBlitz3_wizzard.ab2@13096>   MOVE.l (A7)+,D0
00029E7A <AmiBlitz3_wizzard.ab2@13099>   MOVE.l D0,D0
00029E7E <AmiBlitz3_wizzard.ab2@13102>   BSR.w convert_word_to_long
00029E84 <AmiBlitz3_wizzard.ab2@13103>   TST.b iee
00029E88 <AmiBlitz3_wizzard.ab2@13104>   BEQ 'old
00029E8C <AmiBlitz3_wizzard.ab2@13105>   CMP.b #5,d2
00029E90 <AmiBlitz3_wizzard.ab2@13106>   BNE 'old
00029E92 <AmiBlitz3_wizzard.ab2@13107> RTS
00029E96 <AmiBlitz3_wizzard.ab2@13110> BRA.w JL_0_9600
00029E9A <AmiBlitz3_wizzard.ab2@13114>   MOVE.w #$C316,D1
00029EA0 <AmiBlitz3_wizzard.ab2@13115>   TST.b typecheck
00029EA4 <AmiBlitz3_wizzard.ab2@13116>   BEQ 'l1
00029EAA <AmiBlitz3_wizzard.ab2@13117>   TST.b peekaddrsize
00029EAE <AmiBlitz3_wizzard.ab2@13118>   BNE 'l1
00029EB4 <AmiBlitz3_wizzard.ab2@13119>   TST.b notypecheck
00029EB8 <AmiBlitz3_wizzard.ab2@13120>   BNE 'l1
00029EBE <AmiBlitz3_wizzard.ab2@13121>   TST.l lasttoken
00029EC2 <AmiBlitz3_wizzard.ab2@13127> BRA.w JL_0_963A
00029EC6 <AmiBlitz3_wizzard.ab2@13131>   MOVE.w #$C318,D1
00029ECC <AmiBlitz3_wizzard.ab2@13132>   TST.b typecheck
00029ED0 <AmiBlitz3_wizzard.ab2@13133>   BEQ 'l1
00029ED6 <AmiBlitz3_wizzard.ab2@13134>   TST.b peekaddrsize
00029EDA <AmiBlitz3_wizzard.ab2@13135>   BNE 'l1
00029EE0 <AmiBlitz3_wizzard.ab2@13136>   TST.b notypecheck
00029EE4 <AmiBlitz3_wizzard.ab2@13137>   BNE 'l1
00029EEA <AmiBlitz3_wizzard.ab2@13138>   TST.l lasttoken
00029EEE <AmiBlitz3_wizzard.ab2@13144> BRA.w JL_0_963A
00029EF2 <AmiBlitz3_wizzard.ab2@13148>   MOVE.w #$C318,D1
00029EF8 <AmiBlitz3_wizzard.ab2@13149>   TST.b typecheck
00029EFC <AmiBlitz3_wizzard.ab2@13150>   BEQ 'l1
00029F02 <AmiBlitz3_wizzard.ab2@13151>   TST.b notypecheck
00029F06 <AmiBlitz3_wizzard.ab2@13152>   BNE 'l1
00029F0C <AmiBlitz3_wizzard.ab2@13153>   TST.l lasttoken
00029F10 <AmiBlitz3_wizzard.ab2@13159>   BSR.w JL_0_963A
00029F14 <AmiBlitz3_wizzard.ab2@13160> BRA.w convert_word_to_quick
00029F18 <AmiBlitz3_wizzard.ab2@13164> BRA.w JL_0_9600
00029F1A <AmiBlitz3_wizzard.ab2@13168> RTS
00029F1E <AmiBlitz3_wizzard.ab2@13172>   MOVE.w #$C319,D1
00029F24 <AmiBlitz3_wizzard.ab2@13173>   TST.b typecheck
00029F28 <AmiBlitz3_wizzard.ab2@13174>   BEQ 'l1
00029F2E <AmiBlitz3_wizzard.ab2@13175>   TST.b notypecheck
00029F32 <AmiBlitz3_wizzard.ab2@13176>   BNE 'l1
00029F38 <AmiBlitz3_wizzard.ab2@13177>   TST.l lasttoken
00029F3C <AmiBlitz3_wizzard.ab2@13184>   BSR.w JL_0_963A
00029F40 <AmiBlitz3_wizzard.ab2@13187>   MOVE.w #$4240,D1
00029F46 <AmiBlitz3_wizzard.ab2@13188>   OR.w regnum,D1
00029F4A <AmiBlitz3_wizzard.ab2@13189>   BSR.w writeword
00029F4E <AmiBlitz3_wizzard.ab2@13190>   MOVE.w #$4840,D1
00029F54 <AmiBlitz3_wizzard.ab2@13191>   OR.w regnum,D1
00029F58 <AmiBlitz3_wizzard.ab2@13192> BRA.w writeword
00029F5C <AmiBlitz3_wizzard.ab2@13196> BRA.w JL_0_96D0
00029F60 <AmiBlitz3_wizzard.ab2@13200>   BSR.w JL_0_96D0
00029F64 <AmiBlitz3_wizzard.ab2@13201> BRA.w convert_word_to_long
00029F66 <AmiBlitz3_wizzard.ab2@13206>   MOVEQ #0,d0
00029F6C <AmiBlitz3_wizzard.ab2@13207>   MOVE.w regnum,d0
00029F6E <AmiBlitz3_wizzard.ab2@13208>   ASL.l #7,d0
00029F74 <AmiBlitz3_wizzard.ab2@13209>   MOVE.l #$f2004000,d1
00029F76 <AmiBlitz3_wizzard.ab2@13210>   OR.l d0,d1
00029F78 <AmiBlitz3_wizzard.ab2@13211>   ASL.l #1,d0
00029F7A <AmiBlitz3_wizzard.ab2@13212>   ASL.l #8,d0
00029F7C <AmiBlitz3_wizzard.ab2@13213>   OR.l d0,d1
00029F80 <AmiBlitz3_wizzard.ab2@13214>   BSR writelong
00029F86 <AmiBlitz3_wizzard.ab2@13215>   MOVE.w regnum,d0
00029F88 <AmiBlitz3_wizzard.ab2@13216>   ASL.l #7,d0
00029F8E <AmiBlitz3_wizzard.ab2@13217>   MOVE.l #$f23c4423,d1                                     ;fmul.s #1/65536,fpreg
00029F90 <AmiBlitz3_wizzard.ab2@13218>   OR.w d0,d1
00029F94 <AmiBlitz3_wizzard.ab2@13219>   BSR writelong
00029F9A <AmiBlitz3_wizzard.ab2@13220>   MOVE.l #$37800000,d1
00029F9E <AmiBlitz3_wizzard.ab2@13221>   BSR writelong
00029FA0 <AmiBlitz3_wizzard.ab2@13222> RTS
00029FA6 <AmiBlitz3_wizzard.ab2@13226>   TST.b iee
00029FAA <AmiBlitz3_wizzard.ab2@13227>   BNE qtof
00029FAE <AmiBlitz3_wizzard.ab2@13228>   MOVE.w #$D300,D1
00029FB0 <AmiBlitz3_wizzard.ab2@13231>   MOVE.w D1,-(A7)
00029FB4 <AmiBlitz3_wizzard.ab2@13232>    BSR.w JL_0_AD40
00029FB6 <AmiBlitz3_wizzard.ab2@13233>   MOVE.l D4,D1
00029FBA <AmiBlitz3_wizzard.ab2@13234>    BSR.w JL_0_AD38
00029FBE <AmiBlitz3_wizzard.ab2@13235>    BSR.w JL_0_A352
00029FC0 <AmiBlitz3_wizzard.ab2@13236>   MOVE.w (A7)+,D1
00029FC4 <AmiBlitz3_wizzard.ab2@13237>    BSR.w Atokejsr
00029FC8 <AmiBlitz3_wizzard.ab2@13238>    BSR.w JL_0_A36E
00029FCA <AmiBlitz3_wizzard.ab2@13239>   MOVE.l D5,D1
00029FCE <AmiBlitz3_wizzard.ab2@13240> BRA.w JL_0_AD38
00029FD0 <AmiBlitz3_wizzard.ab2@13244> RTS
00029FD6 <AmiBlitz3_wizzard.ab2@13247>   TST.b typecheck
00029FDA <AmiBlitz3_wizzard.ab2@13248>   BEQ 'l1
00029FE0 <AmiBlitz3_wizzard.ab2@13249>   TST.b notypecheck
00029FE4 <AmiBlitz3_wizzard.ab2@13250>   BNE 'l1
00029FEA <AmiBlitz3_wizzard.ab2@13251>   TST.l lasttoken
00029FF0 <AmiBlitz3_wizzard.ab2@13256>   TST.b iee
00029FF4 <AmiBlitz3_wizzard.ab2@13257>   BNE ftol
00029FF8 <AmiBlitz3_wizzard.ab2@13258>   MOVE.w #$C31A,D1
00029FFC <AmiBlitz3_wizzard.ab2@13259>   BSR.w JL_0_963A
0002A000 <AmiBlitz3_wizzard.ab2@13260>   BSR.w JL_0_974A
0002A004 <AmiBlitz3_wizzard.ab2@13261> BRA.w convert_long_to_byte
0002A006 <AmiBlitz3_wizzard.ab2@13265> RTS
0002A00C <AmiBlitz3_wizzard.ab2@13268>   TST.b typecheck
0002A010 <AmiBlitz3_wizzard.ab2@13269>   BEQ 'l1
0002A016 <AmiBlitz3_wizzard.ab2@13270>   TST.b notypecheck
0002A01A <AmiBlitz3_wizzard.ab2@13271>   BNE 'l1
0002A020 <AmiBlitz3_wizzard.ab2@13272>   TST.l lasttoken
0002A026 <AmiBlitz3_wizzard.ab2@13277>   TST.b iee
0002A02A <AmiBlitz3_wizzard.ab2@13278>   BNE ftol
0002A02E <AmiBlitz3_wizzard.ab2@13279>   MOVE.w #$C31B,D1
0002A032 <AmiBlitz3_wizzard.ab2@13280>   BSR.w JL_0_963A
0002A036 <AmiBlitz3_wizzard.ab2@13281>   BSR.w JL_0_974A
0002A03A <AmiBlitz3_wizzard.ab2@13282> BRA.w convert_long_to_word
0002A03C <AmiBlitz3_wizzard.ab2@13286> RTS
0002A042 <AmiBlitz3_wizzard.ab2@13289>   TST.b iee
0002A046 <AmiBlitz3_wizzard.ab2@13290>   BNE ftol
0002A04A <AmiBlitz3_wizzard.ab2@13291>   MOVE.w #$C31C,D1
0002A04E <AmiBlitz3_wizzard.ab2@13292>   BSR.w JL_0_963A
0002A052 <AmiBlitz3_wizzard.ab2@13295>   MOVE.w #$FFE2,D1
0002A056 <AmiBlitz3_wizzard.ab2@13296> BRA.w JL_0_9604
0002A058 <AmiBlitz3_wizzard.ab2@13299>   MOVE.l d0,-(a7)
0002A05A <AmiBlitz3_wizzard.ab2@13300>   MOVEQ #0,d0
0002A060 <AmiBlitz3_wizzard.ab2@13301>   MOVE.w regnum,d0
0002A062 <AmiBlitz3_wizzard.ab2@13302>   ASL.l #7,d0
0002A068 <AmiBlitz3_wizzard.ab2@13303>   MOVE.l #$f2006000,d1
0002A06A <AmiBlitz3_wizzard.ab2@13304>   OR.l d0,d1
0002A06C <AmiBlitz3_wizzard.ab2@13305>   ASL.l #1,d0
0002A06E <AmiBlitz3_wizzard.ab2@13306>   ASL.l #8,d0
0002A070 <AmiBlitz3_wizzard.ab2@13307>   OR.l d0,d1
0002A072 <AmiBlitz3_wizzard.ab2@13308>   MOVE.l (a7)+,d0
0002A076 <AmiBlitz3_wizzard.ab2@13309> BRA writelong
0002A078 <AmiBlitz3_wizzard.ab2@13313>   MOVE.l d0,-(a7)
0002A07A <AmiBlitz3_wizzard.ab2@13314>   MOVEQ #0,d0
0002A080 <AmiBlitz3_wizzard.ab2@13315>   MOVE.l #$f23c4023,d1
0002A086 <AmiBlitz3_wizzard.ab2@13316>   MOVE.w regnum,d0
0002A088 <AmiBlitz3_wizzard.ab2@13317>   ASL.l #7,d0
0002A08A <AmiBlitz3_wizzard.ab2@13318>   OR.l d0,d1
0002A08E <AmiBlitz3_wizzard.ab2@13319>   BSR writelong
0002A094 <AmiBlitz3_wizzard.ab2@13320>   MOVE.l #$00010000,d1
0002A098 <AmiBlitz3_wizzard.ab2@13321>   BSR writelong
0002A09E <AmiBlitz3_wizzard.ab2@13322>   MOVE.w regnum,d0
0002A0A0 <AmiBlitz3_wizzard.ab2@13323>   ASL.l #7,d0
0002A0A6 <AmiBlitz3_wizzard.ab2@13324>   MOVE.l #$f2006000,d1
0002A0A8 <AmiBlitz3_wizzard.ab2@13325>   OR.l d0,d1
0002A0AA <AmiBlitz3_wizzard.ab2@13326>   ASL.l #1,d0
0002A0AC <AmiBlitz3_wizzard.ab2@13327>   ASL.l #8,d0
0002A0AE <AmiBlitz3_wizzard.ab2@13328>   OR.l d0,d1
0002A0B2 <AmiBlitz3_wizzard.ab2@13329>   BSR writelong
0002A0B4 <AmiBlitz3_wizzard.ab2@13330>   MOVE.l (a7)+,d0
0002A0B6 <AmiBlitz3_wizzard.ab2@13331> RTS
0002A0B8 <AmiBlitz3_wizzard.ab2@13335> RTS
0002A0BE <AmiBlitz3_wizzard.ab2@13339>   TST.b iee
0002A0C2 <AmiBlitz3_wizzard.ab2@13340>   BNE ftoq
0002A0C6 <AmiBlitz3_wizzard.ab2@13341>   MOVE.w #$C31B,D1
0002A0CA <AmiBlitz3_wizzard.ab2@13342>   BSR.w JL_0_963A
0002A0CE <AmiBlitz3_wizzard.ab2@13343>   MOVE.w #$D301,D1
0002A0D2 <AmiBlitz3_wizzard.ab2@13344> BRA.w JL_0_96FC
0002A0D8 <AmiBlitz3_wizzard.ab2@13350>    TST.b blitzparloop
0002A0DC <AmiBlitz3_wizzard.ab2@13351>    BNE 'l1
0002A0E2 <AmiBlitz3_wizzard.ab2@13352>    TST.b funcparloop
0002A0E6 <AmiBlitz3_wizzard.ab2@13353>    BNE 'l1
0002A0EA <AmiBlitz3_wizzard.ab2@13354>    BRA error_convert_types
0002A0F2 <AmiBlitz3_wizzard.ab2@13357>   CMP.b #2,optistring
0002A0F6 <AmiBlitz3_wizzard.ab2@13358>   BEQ JLrts
0002A0FC <AmiBlitz3_wizzard.ab2@13359>   MOVE.w stol,D1
0002A100 <AmiBlitz3_wizzard.ab2@13360>   BSR.w writeword
0002A108 <AmiBlitz3_wizzard.ab2@13361>   CMPI.w #$2,sbgot
0002A10C <AmiBlitz3_wizzard.ab2@13362>   BCS.w sbtolong
0002A110 <AmiBlitz3_wizzard.ab2@13363>   MOVE.w ceos(PC),D1
0002A114 <AmiBlitz3_wizzard.ab2@13364>   BSR.w writeword
0002A11A <AmiBlitz3_wizzard.ab2@13367>   MOVE.w regnum,D1
0002A11C <AmiBlitz3_wizzard.ab2@13368>   LSL.w #8,D1
0002A11E <AmiBlitz3_wizzard.ab2@13369>   LSL.w #1,D1
0002A126 <AmiBlitz3_wizzard.ab2@13370>   CMPI.w #$2,sbgot
0002A12A <AmiBlitz3_wizzard.ab2@13371>   BCS.w JL_0_98E8
0002A130 <AmiBlitz3_wizzard.ab2@13372>   MOVE.w a2offset,D3
0002A136 <AmiBlitz3_wizzard.ab2@13373>   SUB.w thisstuse,D3
0002A13A <AmiBlitz3_wizzard.ab2@13374>   CMP.w #$6,D3
0002A13E <AmiBlitz3_wizzard.ab2@13375>   BNE.w JL_0_98D4b
0002A144 <AmiBlitz3_wizzard.ab2@13376>   OR.w movestst2,D1
0002A148 <AmiBlitz3_wizzard.ab2@13377>   BSR.w writeword
0002A14E <AmiBlitz3_wizzard.ab2@13378>   LEA movestst2+2,A0
0002A154 <AmiBlitz3_wizzard.ab2@13379>   LEA movestst2f,A1
0002A158 <AmiBlitz3_wizzard.ab2@13380> BRA.w pokecode2
0002A15E <AmiBlitz3_wizzard.ab2@13384>   OR.w movea7dn,D1
0002A162 <AmiBlitz3_wizzard.ab2@13385>   BSR.w writeword
0002A168 <AmiBlitz3_wizzard.ab2@13386>   MOVE.l #0,D1
0002A16C <AmiBlitz3_wizzard.ab2@13387> BRA.w writeword
0002A172 <AmiBlitz3_wizzard.ab2@13391>   ADDQ.w #1,fuckpos
0002A176 <AmiBlitz3_wizzard.ab2@13392>   BSR.w writeconvertcode
0002A17C <AmiBlitz3_wizzard.ab2@13393>   SUBQ.w #1,fuckpos
0002A17E <AmiBlitz3_wizzard.ab2@13395> RTS
0002A180 <AmiBlitz3_wizzard.ab2@13399>   MOVE.w D3,D1
0002A184 <AmiBlitz3_wizzard.ab2@13400>   CMP.w #7,d1
0002A188 <AmiBlitz3_wizzard.ab2@13401>   BLE 'ok
0002A18E <AmiBlitz3_wizzard.ab2@13402>   JMP errorinternalconvert
0002A190 <AmiBlitz3_wizzard.ab2@13403> 'ok  SUBQ.w #1,D1
0002A194 <AmiBlitz3_wizzard.ab2@13404>   MULU #$7,D1
0002A196 <AmiBlitz3_wizzard.ab2@13405>   ADD.w D2,D1
0002A198 <AmiBlitz3_wizzard.ab2@13406>   SUBQ.w #1,D1
0002A19A <AmiBlitz3_wizzard.ab2@13407>   LSL.w #2,D1
0002A1A0 <AmiBlitz3_wizzard.ab2@13408>   LEA convtable,A0
0002A1A4 <AmiBlitz3_wizzard.ab2@13409>   MOVE.l $0(A0,D1.W),D1
0002A1A8 <AmiBlitz3_wizzard.ab2@13410>   BEQ.w JL_0_97A2
0002A1AA <AmiBlitz3_wizzard.ab2@13411>     MOVEA.l D1,A0
0002A1AE <AmiBlitz3_wizzard.ab2@13412>     CMP.b #$ff,d3
0002A1B2 <AmiBlitz3_wizzard.ab2@13413>     BEQ JL_0_97A2
0002A1B4 <AmiBlitz3_wizzard.ab2@13414> JMP (A0)
0002A1B6 <AmiBlitz3_wizzard.ab2@13417> RTS
0002A1BA <AmiBlitz3_wizzard.ab2@13420> usedfrom:  Ds.l 1
0002A1BE <AmiBlitz3_wizzard.ab2@13427>   CMP.w #"\",D0
0002A1C2 <AmiBlitz3_wizzard.ab2@13428>   BNE.w JL_0_97C2
0002A1C6 <AmiBlitz3_wizzard.ab2@13429>     CMP.b #"\",(a5)
0002A1CA <AmiBlitz3_wizzard.ab2@13430>     BNE 'first
0002A1D0 <AmiBlitz3_wizzard.ab2@13431>       MOVE.l A5,usedfrom
0002A1D6 <AmiBlitz3_wizzard.ab2@13432>       LEA path2,A5
0002A1DA <AmiBlitz3_wizzard.ab2@13433> BRA 'g1
0002A1DC <AmiBlitz3_wizzard.ab2@13436>     SUBQ.w #1,A5
0002A1E2 <AmiBlitz3_wizzard.ab2@13437>   MOVE.l A5,usedfrom
0002A1E8 <AmiBlitz3_wizzard.ab2@13438>   LEA usedpath,A5                                          ;read path
0002A1EC <AmiBlitz3_wizzard.ab2@13441>   BSR.w get1bytemain
0002A1F2 <AmiBlitz3_wizzard.ab2@13444>   CLR.w flagmask
0002A1F6 <AmiBlitz3_wizzard.ab2@13445>   CMP.w #$2A,D0
0002A1FA <AmiBlitz3_wizzard.ab2@13446>    BNE.w JL_0_983A
0002A202 <AmiBlitz3_wizzard.ab2@13447>   MOVE.w #$0001,flagmask
0002A206 <AmiBlitz3_wizzard.ab2@13449>    BSR.w getparameter2
0002A20A <AmiBlitz3_wizzard.ab2@13452>    BEQ.w syntaxerr
0002A20E <AmiBlitz3_wizzard.ab2@13453>   CMP.w #$28,D0
0002A212 <AmiBlitz3_wizzard.ab2@13454>    BEQ.w JL_0_9830
0002A216 <AmiBlitz3_wizzard.ab2@13455>   CMP.w #$2E,D0
0002A21A <AmiBlitz3_wizzard.ab2@13456>    BEQ.w JL_0_980C
0002A21E <AmiBlitz3_wizzard.ab2@13457>   CMP.w #$24,D0
0002A222 <AmiBlitz3_wizzard.ab2@13458>    BNE.w JL_0_9838
0002A22A <AmiBlitz3_wizzard.ab2@13459>   ORI.w #$8,flagmask
0002A22E <AmiBlitz3_wizzard.ab2@13460>    BSR.w storeloc
0002A232 <AmiBlitz3_wizzard.ab2@13461>    BSR.w get1bytemain
0002A236 <AmiBlitz3_wizzard.ab2@13462> BRA.w JL_0_9822
0002A23A <AmiBlitz3_wizzard.ab2@13466>   BSR.w storeloc
0002A23C <AmiBlitz3_wizzard.ab2@13467>   MOVE.w D2,-(A7)
0002A242 <AmiBlitz3_wizzard.ab2@13468>   LEA namebuff2,A1
0002A246 <AmiBlitz3_wizzard.ab2@13469>    BSR.w makename3
0002A24A <AmiBlitz3_wizzard.ab2@13470>    BEQ.w syntaxerr
0002A24C <AmiBlitz3_wizzard.ab2@13471>   MOVE.w (A7)+,D2
0002A24E <AmiBlitz3_wizzard.ab2@13474>    MOVE.w D0,D1
0002A252 <AmiBlitz3_wizzard.ab2@13475>    BSR.w resloc
0002A256 <AmiBlitz3_wizzard.ab2@13476>    CMP.w #$28,D1
0002A25A <AmiBlitz3_wizzard.ab2@13477>    BNE.w JL_0_9838
0002A262 <AmiBlitz3_wizzard.ab2@13480>   ORI.w #$2,flagmask
0002A264 <AmiBlitz3_wizzard.ab2@13483> RTS
0002A268 <AmiBlitz3_wizzard.ab2@13487>   CMP.w #$40,D0
0002A26C <AmiBlitz3_wizzard.ab2@13488>    BNE.w JL_0_984E
0002A274 <AmiBlitz3_wizzard.ab2@13489>   MOVE.w #$0005,flagmask
0002A278 <AmiBlitz3_wizzard.ab2@13490> BRA.w JL_0_97D8
0002A27C <AmiBlitz3_wizzard.ab2@13494>   BSR.w makename2
0002A280 <AmiBlitz3_wizzard.ab2@13495> BRA.w JL_0_97DC
0002A284 <AmiBlitz3_wizzard.ab2@13499>   MOVE.w #$FED3,D1
0002A288 <AmiBlitz3_wizzard.ab2@13500>    BSR.w uselib
0002A28E <AmiBlitz3_wizzard.ab2@13501>   LEA pusha3,A0
0002A294 <AmiBlitz3_wizzard.ab2@13502>   LEA pusha3f,A1
0002A298 <AmiBlitz3_wizzard.ab2@13503> BRA.w pokecode
0002A29C <AmiBlitz3_wizzard.ab2@13507>   MOVE.w #$FED3,D1
0002A2A0 <AmiBlitz3_wizzard.ab2@13508>    BSR.w uselib
0002A2A6 <AmiBlitz3_wizzard.ab2@13509>   LEA pulla3,A0
0002A2AC <AmiBlitz3_wizzard.ab2@13510>   LEA pulla3f,A1
0002A2B0 <AmiBlitz3_wizzard.ab2@13511> BRA.w pokecode
0002A2B2 <AmiBlitz3_wizzard.ab2@13515> ceos:   Dc.b $42,$1B                                       ;CLR.B   (A3)+             ;*!
0002A2BA <AmiBlitz3_wizzard.ab2@13520>     CMP.b #2,optistring
0002A2BE <AmiBlitz3_wizzard.ab2@13521>    BEQ 'l10
0002A2C2 <AmiBlitz3_wizzard.ab2@13522>    MOVE.w ceos(PC),D1
0002A2C6 <AmiBlitz3_wizzard.ab2@13523>    BSR.w writeword                                         ;clr.b (a3)
0002A2CC <AmiBlitz3_wizzard.ab2@13526>   MOVE.w regnum,D1
0002A2CE <AmiBlitz3_wizzard.ab2@13527>   LSL.w #8,D1
0002A2D0 <AmiBlitz3_wizzard.ab2@13528>   LSL.w #1,D1
0002A2D8 <AmiBlitz3_wizzard.ab2@13529>   CMPI.w #$2,sbgot
0002A2DC <AmiBlitz3_wizzard.ab2@13530>    BCS.w JL_0_98E8
0002A2E2 <AmiBlitz3_wizzard.ab2@13531>   MOVE.w a2offset,D3                                       ;stackuse,d3 org source
0002A2E8 <AmiBlitz3_wizzard.ab2@13532>   SUB.w thisstuse,D3
0002A2EC <AmiBlitz3_wizzard.ab2@13533>   CMP.w #$6,D3
0002A2F0 <AmiBlitz3_wizzard.ab2@13534>    BNE.w JL_0_98D4
0002A2F6 <AmiBlitz3_wizzard.ab2@13535>   OR.w movestst2,D1
0002A2FA <AmiBlitz3_wizzard.ab2@13536>    BSR.w writeword
0002A300 <AmiBlitz3_wizzard.ab2@13537>   LEA movestst2+2,A0
0002A306 <AmiBlitz3_wizzard.ab2@13538>   LEA movestst2f,A1
0002A30A <AmiBlitz3_wizzard.ab2@13539> BRA.w pokecode2
0002A310 <AmiBlitz3_wizzard.ab2@13543>    OR.w movea7dn,D1
0002A314 <AmiBlitz3_wizzard.ab2@13544>    BSR.w writeword
0002A31A <AmiBlitz3_wizzard.ab2@13545>   MOVE.l movea7dn+2,D1
0002A31E <AmiBlitz3_wizzard.ab2@13557>   BSR writelong
0002A326 <AmiBlitz3_wizzard.ab2@13560>    CMP.w #6,regnum
0002A32A <AmiBlitz3_wizzard.ab2@13561>    BEQ 'l1
0002A330 <AmiBlitz3_wizzard.ab2@13562>    TST.w stackpar
0002A334 <AmiBlitz3_wizzard.ab2@13563>    BNE 'l1
0002A33A <AmiBlitz3_wizzard.ab2@13564>    TST.b funcparloop
0002A33E <AmiBlitz3_wizzard.ab2@13565>    BEQ 'l1
0002A344 <AmiBlitz3_wizzard.ab2@13566>    MOVE.l #$48780000,d1
0002A348 <AmiBlitz3_wizzard.ab2@13567>    BSR writelong
0002A34A <AmiBlitz3_wizzard.ab2@13571> RTS
0002A34C <AmiBlitz3_wizzard.ab2@13576>      MOVE.l d1,-(a7)
0002A354 <AmiBlitz3_wizzard.ab2@13577>      CMP.w #6,regnum
0002A358 <AmiBlitz3_wizzard.ab2@13578>      BEQ 'l1
0002A35E <AmiBlitz3_wizzard.ab2@13579>      TST.w stackpar
0002A362 <AmiBlitz3_wizzard.ab2@13580>      BNE 'l1
0002A368 <AmiBlitz3_wizzard.ab2@13581>      TST.b funcparloop
0002A36C <AmiBlitz3_wizzard.ab2@13582>      BEQ 'l1
0002A372 <AmiBlitz3_wizzard.ab2@13583>      MOVE.l #$48780000,d1
0002A376 <AmiBlitz3_wizzard.ab2@13584>      BSR writelong
0002A378 <AmiBlitz3_wizzard.ab2@13587>      MOVE.l (a7)+,d1
0002A37E <AmiBlitz3_wizzard.ab2@13589>    OR.w movestdn,D1
0002A382 <AmiBlitz3_wizzard.ab2@13590>    BSR.w writeword
0002A386 <AmiBlitz3_wizzard.ab2@13591>   MOVE.w #$FED3,D1
0002A38A <AmiBlitz3_wizzard.ab2@13592>    BSR.w uselib
0002A38E <AmiBlitz3_wizzard.ab2@13593>   MOVE.w $A(A1),D1
0002A392 <AmiBlitz3_wizzard.ab2@13594> BRA.w writeword
0002A394 <AmiBlitz3_wizzard.ab2@13597> unknown:    Ds.w 1
0002A39A <AmiBlitz3_wizzard.ab2@13600> somecode:   Dc.b $0C,$80,$00,$01,$00,$00                   ;CMPI.L  #$00010000,D0
0002A39E <AmiBlitz3_wizzard.ab2@13601> somecode2:  Dc.b $65,$00,$00,$08                           ;BCS.W   codeisok
0002A3A4 <AmiBlitz3_wizzard.ab2@13602>             Dc.b $4E,$B9,$00,$00,$00,$00                   ;JSR $00000000
0002A3AA <AmiBlitz3_wizzard.ab2@13608>   TST.b debugmode
0002A3AE <AmiBlitz3_wizzard.ab2@13609>   BEQ.w sharreval
0002A3B2 <AmiBlitz3_wizzard.ab2@13610>  BSR.w arreval
0002A3B6 <AmiBlitz3_wizzard.ab2@13613>   MOVE.w somecode(PC),D1
0002A3BC <AmiBlitz3_wizzard.ab2@13614>   OR.w regnum,D1
0002A3C0 <AmiBlitz3_wizzard.ab2@13615>    BSR.w writeword
0002A3C2 <AmiBlitz3_wizzard.ab2@13616>   MOVEQ.l #$01,D1
0002A3C4 <AmiBlitz3_wizzard.ab2@13617>   SWAP D1
0002A3C8 <AmiBlitz3_wizzard.ab2@13618>    BSR.w writelong
0002A3CC <AmiBlitz3_wizzard.ab2@13619>   MOVE.l somecode2(PC),D1
0002A3D0 <AmiBlitz3_wizzard.ab2@13620>    BSR.w writelong
0002A3D4 <AmiBlitz3_wizzard.ab2@13621>   MOVE.w #$C309,D1
0002A3D8 <AmiBlitz3_wizzard.ab2@13622> BRA.w Atokejsr
0002A3DA <AmiBlitz3_wizzard.ab2@13626>   MOVEQ.l #$02,D2
0002A3DC <AmiBlitz3_wizzard.ab2@13627>   MOVEQ.l #$00,D1
0002A3DE <AmiBlitz3_wizzard.ab2@13628>   MOVEQ.l #$00,D3
0002A3E2 <AmiBlitz3_wizzard.ab2@13629> BRA.w maineval2
0002A3E4 <AmiBlitz3_wizzard.ab2@13633>   MOVEQ.l #$03,D2
0002A3E6 <AmiBlitz3_wizzard.ab2@13634>   MOVEQ.l #$00,D1
0002A3E8 <AmiBlitz3_wizzard.ab2@13635>   MOVEQ.l #$00,D3
0002A3EE <AmiBlitz3_wizzard.ab2@13636>   MOVE.b notypecheck,-(a7)
0002A3F6 <AmiBlitz3_wizzard.ab2@13637>   MOVE.b #1,notypecheck                                    ;typecheck need switch off for array offset calculation code
0002A3FC <AmiBlitz3_wizzard.ab2@13638>   JSR maineval2
0002A402 <AmiBlitz3_wizzard.ab2@13639>   MOVE.b (a7)+,notypecheck                                 ;now its switch to old state
0002A404 <AmiBlitz3_wizzard.ab2@13640>   RTS
0002A40E <AmiBlitz3_wizzard.ab2@13644>   MOVE.w oldqflag,instringon
0002A414 <AmiBlitz3_wizzard.ab2@13645>   MOVEA.l lastsourcepos,A5
0002A416 <AmiBlitz3_wizzard.ab2@13646>   MOVEQ.l #-$01,D1
0002A418 <AmiBlitz3_wizzard.ab2@13647>   MOVEQ.l #-$01,D3
0002A41C <AmiBlitz3_wizzard.ab2@13648> BRA.w peval
0002A426 <AmiBlitz3_wizzard.ab2@13653>   MOVE.w oldqflag,instringon
0002A42C <AmiBlitz3_wizzard.ab2@13654>   MOVEA.l lastsourcepos,A5
0002A42E <AmiBlitz3_wizzard.ab2@13657>   MOVEQ.l #-$01,D1
0002A430 <AmiBlitz3_wizzard.ab2@13658>   MOVEQ.l #$00,D3
0002A436 <AmiBlitz3_wizzard.ab2@13659>   MOVE.l leftsidetype,-(a7)
0002A43C <AmiBlitz3_wizzard.ab2@13660>   MOVE.l rightsidetype,-(a7)
0002A442 <AmiBlitz3_wizzard.ab2@13661>   CLR.l leftsidetype
0002A448 <AmiBlitz3_wizzard.ab2@13662>   CLR.l rightsidetype
0002A44E <AmiBlitz3_wizzard.ab2@13663>   JSR maineval
0002A454 <AmiBlitz3_wizzard.ab2@13664>   MOVE.l (a7)+,rightsidetype
0002A45A <AmiBlitz3_wizzard.ab2@13665>   MOVE.l (a7)+,leftsidetype
0002A45C <AmiBlitz3_wizzard.ab2@13666>   RTS
0002A466 <AmiBlitz3_wizzard.ab2@13670>   MOVE.w oldqflag,instringon
0002A46C <AmiBlitz3_wizzard.ab2@13671>   MOVEA.l lastsourcepos,A5
0002A46E <AmiBlitz3_wizzard.ab2@13672>   MOVEQ.l #$00,D1
0002A470 <AmiBlitz3_wizzard.ab2@13673>   MOVEQ.l #-$01,D3
0002A474 <AmiBlitz3_wizzard.ab2@13674> BRA.w maineval
0002A476 <AmiBlitz3_wizzard.ab2@13678>   MOVEQ.l #$01,D1
0002A478 <AmiBlitz3_wizzard.ab2@13679>   MOVEQ.l #-$01,D3
0002A47C <AmiBlitz3_wizzard.ab2@13680> BRA.w maineval
0002A486 <AmiBlitz3_wizzard.ab2@13685>   MOVE.w oldqflag,instringon
0002A48C <AmiBlitz3_wizzard.ab2@13686>   MOVEA.l lastsourcepos,A5
0002A48E <AmiBlitz3_wizzard.ab2@13689>   MOVEQ.l #$00,D1                                        ;no push
0002A490 <AmiBlitz3_wizzard.ab2@13690>   MOVEQ.l #$00,D3
0002A498 <AmiBlitz3_wizzard.ab2@13711>    CMPI.w #$6,regnum
0002A49C <AmiBlitz3_wizzard.ab2@13712>    BCS.w maineval2
0002A49E <AmiBlitz3_wizzard.ab2@13713>    MOVEQ #0,d1
0002A4A4 <AmiBlitz3_wizzard.ab2@13714>    MOVE.l destpointer,a4
0002A4AA <AmiBlitz3_wizzard.ab2@13716>    CMPA.l destbufferend,A4
0002A4AE <AmiBlitz3_wizzard.ab2@13717>    BCC.w maineval__l2
0002A4B4 <AmiBlitz3_wizzard.ab2@13719>    CMP.w #$2f0a,-2(a4)                                    ;bug is a move.l a2,-(a7) before (show temp calc)?
0002A4B8 <AmiBlitz3_wizzard.ab2@13721>    BNE maineval__l2
0002A4BC <AmiBlitz3_wizzard.ab2@13725> BRA maineval__l1
0002A4BE <AmiBlitz3_wizzard.ab2@13728>   MOVEQ.l #-$01,D1
0002A4C6 <AmiBlitz3_wizzard.ab2@13731>   MOVE.w #$0006,regnum                                     ;write a func par To stack
0002A4CC <AmiBlitz3_wizzard.ab2@13734>   MOVE.w thisstuse,-(A7)
0002A4D6 <AmiBlitz3_wizzard.ab2@13735>   MOVE.w a2offset,thisstuse
0002A4DC <AmiBlitz3_wizzard.ab2@13736>   MOVE.w stackpar,-(A7)
0002A4E2 <AmiBlitz3_wizzard.ab2@13737>   MOVE.w D1,stackpar
0002A4E8 <AmiBlitz3_wizzard.ab2@13738>   MOVE.w sbgot,-(A7)
0002A4EE <AmiBlitz3_wizzard.ab2@13739>   CLR.w sbgot
0002A4F2 <AmiBlitz3_wizzard.ab2@13740>   MOVE.w unknown(PC),-(A7)
0002A4F8 <AmiBlitz3_wizzard.ab2@13741>   MOVE.w D3,unknown
0002A4FA <AmiBlitz3_wizzard.ab2@13742>   MOVE.w D2,-(a7)
0002A500 <AmiBlitz3_wizzard.ab2@13743>   MOVE.w d2,mode
0002A504 <AmiBlitz3_wizzard.ab2@13744>    BSR.w eval3
0002A506 <AmiBlitz3_wizzard.ab2@13745>   MOVE.w (a7)+,d3
0002A50A <AmiBlitz3_wizzard.ab2@13746>    BEQ.w maineval__noconv
0002A50E <AmiBlitz3_wizzard.ab2@13747>   MOVE.w unknown(PC),D1
0002A512 <AmiBlitz3_wizzard.ab2@13748>    BNE.w maineval__noconv
0002A514 <AmiBlitz3_wizzard.ab2@13749>   EXG.l D2,D3
0002A516 <AmiBlitz3_wizzard.ab2@13750>    MOVE.l a2,-(a7)
0002A51C <AmiBlitz3_wizzard.ab2@13751>    TST.b curtemplabel
0002A520 <AmiBlitz3_wizzard.ab2@13752>    BEQ maineval2__l10
0002A526 <AmiBlitz3_wizzard.ab2@13753>    MOVE.l asmbuff,a2
0002A52C <AmiBlitz3_wizzard.ab2@13754>    CMP.w #$c,$8(a2)
0002A530 <AmiBlitz3_wizzard.ab2@13755>    BEQ maineval2__l20
0002A536 <AmiBlitz3_wizzard.ab2@13756>    CMP.w #$d,$8(a2)
0002A53A <AmiBlitz3_wizzard.ab2@13757>    BEQ maineval2__l20
0002A53C <AmiBlitz3_wizzard.ab2@13760>   CMP.w d2,d3
0002A540 <AmiBlitz3_wizzard.ab2@13761>   BEQ maineval2__l20
0002A544 <AmiBlitz3_wizzard.ab2@13762>   BSR.w writeconvertcode
0002A54A <AmiBlitz3_wizzard.ab2@13763>   CLR.b doimmediate
0002A54C <AmiBlitz3_wizzard.ab2@13766>   MOVE.l (a7)+,a2
0002A552 <AmiBlitz3_wizzard.ab2@13769>   MOVE.w (A7)+,unknown
0002A558 <AmiBlitz3_wizzard.ab2@13770>   MOVE.w stackpar,D1
0002A55C <AmiBlitz3_wizzard.ab2@13771>    BEQ.w maineval__skipme
0002A560 <AmiBlitz3_wizzard.ab2@13772>    BMI.w maineval__skipme
0002A566 <AmiBlitz3_wizzard.ab2@13776>   MOVE.w regnum,D1
0002A568 <AmiBlitz3_wizzard.ab2@13777>   LSL.w #8,D1
0002A56A <AmiBlitz3_wizzard.ab2@13778>   LSL.w #1,D1
0002A56E <AmiBlitz3_wizzard.ab2@13779>   CMP.w #$7,D2
0002A572 <AmiBlitz3_wizzard.ab2@13780>    BNE.w maineval__hi1
0002A57A <AmiBlitz3_wizzard.ab2@13781>    CMP.b #2,optistring
0002A57E <AmiBlitz3_wizzard.ab2@13782>    BEQ maineval__hi1a
0002A580 <AmiBlitz3_wizzard.ab2@13783>   MOVE.w D1,-(A7)
0002A586 <AmiBlitz3_wizzard.ab2@13784>   OR.w getstlen,D1
0002A58A <AmiBlitz3_wizzard.ab2@13785>    BSR.w writeword
0002A58C <AmiBlitz3_wizzard.ab2@13786>   MOVE.w (A7)+,D1
0002A592 <AmiBlitz3_wizzard.ab2@13789>   ADDQ.w #2,a2offset                                        ;lib mode to stack
0002A596 <AmiBlitz3_wizzard.ab2@13793>   MOVE.w #$3f3c,d1
0002A59A <AmiBlitz3_wizzard.ab2@13794>    BSR.w writeword
0002A59C <AmiBlitz3_wizzard.ab2@13798>   MOVE.w d2,d1
0002A5A2 <AmiBlitz3_wizzard.ab2@13799>   MOVE.w d1,libmode
0002A5A6 <AmiBlitz3_wizzard.ab2@13800>    BSR.w writeword
0002A5AA <AmiBlitz3_wizzard.ab2@13801>   CMP.w #$7,D2
0002A5AE <AmiBlitz3_wizzard.ab2@13802>    BNE.w maineval__skipme
0002A5B4 <AmiBlitz3_wizzard.ab2@13803>   MOVE.w putstlen,D1
0002A5BA <AmiBlitz3_wizzard.ab2@13804>   OR.w regnum,D1
0002A5BE <AmiBlitz3_wizzard.ab2@13805>    BSR.w writeword
0002A5C2 <AmiBlitz3_wizzard.ab2@13808>    CMP.w #$7,D2
0002A5C6 <AmiBlitz3_wizzard.ab2@13809>    BNE.w maineval__notst
0002A5CE <AmiBlitz3_wizzard.ab2@13820>    CMP.b #2,optistring
0002A5D2 <AmiBlitz3_wizzard.ab2@13821>    BEQ maineval__skipme_l10
0002A5D8 <AmiBlitz3_wizzard.ab2@13822>    ADDQ.w #4,a2offset                                      ;a length on da stack.....
0002A5DC <AmiBlitz3_wizzard.ab2@13823>    BSR.w sbtolong
0002A5E0 <AmiBlitz3_wizzard.ab2@13824> BRA.w maineval__notst2
0002A5E8 <AmiBlitz3_wizzard.ab2@13828>     CMP.w #6,regnum
0002A5EC <AmiBlitz3_wizzard.ab2@13829>     BEQ maineval__skipme_l10_l1
0002A5F2 <AmiBlitz3_wizzard.ab2@13830>     TST.b funcparloop
0002A5F6 <AmiBlitz3_wizzard.ab2@13831>     BEQ maineval__skipme_l10_l1
0002A5FC <AmiBlitz3_wizzard.ab2@13832>     MOVE.l #$48780000,d1
0002A600 <AmiBlitz3_wizzard.ab2@13833>     BSR writelong
0002A604 <AmiBlitz3_wizzard.ab2@13836> BRA.w maineval__notst2
0002A60A <AmiBlitz3_wizzard.ab2@13839>   ADDQ.w #2,a2offset
0002A60E <AmiBlitz3_wizzard.ab2@13840> BRA maineval__skipme
0002A616 <AmiBlitz3_wizzard.ab2@13843>   CMPI.w #$2,sbgot
0002A61A <AmiBlitz3_wizzard.ab2@13844>    BCS.w maineval__notst2                                         ;correct stack
0002A61E <AmiBlitz3_wizzard.ab2@13845>   MOVE.w ststfix(PC),D1
0002A622 <AmiBlitz3_wizzard.ab2@13846>    BSR.w writeword
0002A628 <AmiBlitz3_wizzard.ab2@13849>   MOVE.w (A7)+,sbgot
0002A62E <AmiBlitz3_wizzard.ab2@13850>   MOVE.w stackpar,D1
0002A632 <AmiBlitz3_wizzard.ab2@13851>    BPL.w maineval__skip
0002A636 <AmiBlitz3_wizzard.ab2@13852>    CMP.b #7,d2
0002A63A <AmiBlitz3_wizzard.ab2@13853>    BEQ maineval__notst2_l1
0002A640 <AmiBlitz3_wizzard.ab2@13854>   TST.b funcparloop
0002A644 <AmiBlitz3_wizzard.ab2@13855>   BEQ maineval__notst2_l1
0002A648 <AmiBlitz3_wizzard.ab2@13856>   CMP.b #5,d2
0002A64C <AmiBlitz3_wizzard.ab2@13857>   BNE maineval__notst2_skip
0002A652 <AmiBlitz3_wizzard.ab2@13858>   TST.b fpu
0002A656 <AmiBlitz3_wizzard.ab2@13859>   BEQ maineval__notst2_skip
0002A65C <AmiBlitz3_wizzard.ab2@13860>   MOVE.l #$f2066700,d1                                     ;fmove.s fp6,d6
0002A662 <AmiBlitz3_wizzard.ab2@13861>   JSR writelong
0002A666 <AmiBlitz3_wizzard.ab2@13864>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0002A66C <AmiBlitz3_wizzard.ab2@13865>   ADD.w parnum,d1
0002A672 <AmiBlitz3_wizzard.ab2@13866>   JSR Atokejsr
0002A678 <AmiBlitz3_wizzard.ab2@13867>    TST.w dontwrite
0002A67C <AmiBlitz3_wizzard.ab2@13868>    BNE maineval__notst2_l1
0002A682 <AmiBlitz3_wizzard.ab2@13869>    MOVE.l data1start,d1
0002A688 <AmiBlitz3_wizzard.ab2@13870>    MOVE.l destpointer,a4
0002A68C <AmiBlitz3_wizzard.ab2@13871>    ADD.l d1,-4(a4)
0002A692 <AmiBlitz3_wizzard.ab2@13872>    MOVE.l destpointer,d1
0002A694 <AmiBlitz3_wizzard.ab2@13873>    SUBQ.l #4,d1
0002A69A <AmiBlitz3_wizzard.ab2@13874>    SUB.l destbufferstart,d1
0002A69C <AmiBlitz3_wizzard.ab2@13875>    MOVE.l d2,-(a7)
0002A69E <AmiBlitz3_wizzard.ab2@13876>    MOVE.l d1,d2
0002A6A4 <AmiBlitz3_wizzard.ab2@13877>    JSR addhunkoffset
0002A6A6 <AmiBlitz3_wizzard.ab2@13878>    MOVE.l (a7)+,d2
0002A6AA <AmiBlitz3_wizzard.ab2@13879> BRA maineval__skip
0002A6B0 <AmiBlitz3_wizzard.ab2@13882>   ADDQ.w #2,a2offset
0002A6B6 <AmiBlitz3_wizzard.ab2@13883>   MOVE.w pushd0wd,D1
0002A6BA <AmiBlitz3_wizzard.ab2@13884>   CMP.w #$3,D2                                             ;write parameter to stack
0002A6BE <AmiBlitz3_wizzard.ab2@13885>    BCS.w maineval__ok
0002A6C4 <AmiBlitz3_wizzard.ab2@13886>   ADDQ.w #2,a2offset
0002A6CA <AmiBlitz3_wizzard.ab2@13887>   TST.b fpu
0002A6CE <AmiBlitz3_wizzard.ab2@13888>   BEQ maineval__notst2_nofpu
0002A6D2 <AmiBlitz3_wizzard.ab2@13889>   CMP.w #5,d2
0002A6D6 <AmiBlitz3_wizzard.ab2@13890>   BNE maineval__notst2_nofpu
0002A6D8 <AmiBlitz3_wizzard.ab2@13891>   MOVEQ #0,d1
0002A6DE <AmiBlitz3_wizzard.ab2@13892>   MOVE.w regnum,d1
0002A6E0 <AmiBlitz3_wizzard.ab2@13893>   ASL.l #7,d1
0002A6E6 <AmiBlitz3_wizzard.ab2@13894>   OR.l #$f2276400,d1
0002A6EA <AmiBlitz3_wizzard.ab2@13895>   BSR writelong
0002A6EE <AmiBlitz3_wizzard.ab2@13896> BRA maineval__skip
0002A6F4 <AmiBlitz3_wizzard.ab2@13899>   MOVE.w pushd0l,D1
0002A6FA <AmiBlitz3_wizzard.ab2@13902>    OR.w regnum,D1
0002A6FE <AmiBlitz3_wizzard.ab2@13903>    BSR.w writeword                                         ;nat
0002A704 <AmiBlitz3_wizzard.ab2@13906>   MOVE.w (A7)+,stackpar
0002A70A <AmiBlitz3_wizzard.ab2@13907>   MOVE.w (A7)+,thisstuse
0002A70C <AmiBlitz3_wizzard.ab2@13908> RTS
0002A70E <AmiBlitz3_wizzard.ab2@13911> thisstuse: Ds.w 1
0002A710 <AmiBlitz3_wizzard.ab2@13914> ststfix:   Dc.b $58,$4F                                    ;ADDQ.W  #4,A7
0002A712 <AmiBlitz3_wizzard.ab2@13915> pushut:    Dc.b $3F,$00                                    ;MOVE.W  D0,-(A7)
0002A716 <AmiBlitz3_wizzard.ab2@13920>   BSR.w eval4
0002A720 <AmiBlitz3_wizzard.ab2@13921>   SUBI.l #$12,forthsp
0002A722 <AmiBlitz3_wizzard.ab2@13922> RTS
0002A724 <AmiBlitz3_wizzard.ab2@13926>   MOVEQ.l #$01,D1
0002A728 <AmiBlitz3_wizzard.ab2@13928>       MOVEA.l precsp(PC),A1
0002A72A <AmiBlitz3_wizzard.ab2@13929>       MOVE.l A0,(A1)+
0002A72C <AmiBlitz3_wizzard.ab2@13930>       MOVE.w D1,(A1)+
0002A732 <AmiBlitz3_wizzard.ab2@13931>       MOVE.l A1,precsp
0002A736 <AmiBlitz3_wizzard.ab2@13932>    BSR.w calcloop
0002A738 <AmiBlitz3_wizzard.ab2@13933>   TST.w D1
0002A73C <AmiBlitz3_wizzard.ab2@13934>    BNE.w syntaxerr
0002A742 <AmiBlitz3_wizzard.ab2@13935>   SUBQ.l #6,precsp                                      ;pop the prec set up
0002A744 <AmiBlitz3_wizzard.ab2@13936> RTS
0002A748 <AmiBlitz3_wizzard.ab2@13941>   BSR.w JL_0_9C24
0002A74C <AmiBlitz3_wizzard.ab2@13944>   MOVEA.l precsp(PC),A1
0002A74E <AmiBlitz3_wizzard.ab2@13945>   CMP.w -(A1),D1
0002A752 <AmiBlitz3_wizzard.ab2@13946>    BHI.w JL_0_9B0A
0002A754 <AmiBlitz3_wizzard.ab2@13947> RTS
0002A758 <AmiBlitz3_wizzard.ab2@13952>   MOVEA.l precsp(PC),A1
0002A75A <AmiBlitz3_wizzard.ab2@13953>   MOVE.l A0,(A1)+
0002A75C <AmiBlitz3_wizzard.ab2@13954>   MOVE.w D1,(A1)+
0002A762 <AmiBlitz3_wizzard.ab2@13955>   MOVE.l A1,precsp
0002A764 <AmiBlitz3_wizzard.ab2@13956>   MOVE.w D2,-(A7)
0002A76A <AmiBlitz3_wizzard.ab2@13957>   ADDQ.w #1,regnum
0002A76E <AmiBlitz3_wizzard.ab2@13958>    BSR.w calcloop               ;constant optimizer
0002A774 <AmiBlitz3_wizzard.ab2@13959>   SUBQ.w #1,regnum
0002A776 <AmiBlitz3_wizzard.ab2@13960>   MOVE.w (A7)+,D3
0002A77A <AmiBlitz3_wizzard.ab2@13961>   MOVEM.l D1/A0,-(A7)
0002A77E <AmiBlitz3_wizzard.ab2@13962>    BEQ.w JL_0_9B2E
0002A782 <AmiBlitz3_wizzard.ab2@13963>    BSR.w JL_0_9770
0002A786 <AmiBlitz3_wizzard.ab2@13966>   BSR.w popprec
0002A78A <AmiBlitz3_wizzard.ab2@13967>   BSR.w writecode
0002A78E <AmiBlitz3_wizzard.ab2@13968>   MOVEA.l forthsp(PC),A0
0002A792 <AmiBlitz3_wizzard.ab2@13969>   MOVE.w -$2(A0),D1
0002A796 <AmiBlitz3_wizzard.ab2@13970>   OR.w -$14(A0),D1
0002A79A <AmiBlitz3_wizzard.ab2@13971>   MOVE.w D1,-$14(A0)
0002A79E <AmiBlitz3_wizzard.ab2@13972>    BNE.w JL_0_9C0E
0002A7A4 <AmiBlitz3_wizzard.ab2@13973>   MOVE.w dontwrite,D1
0002A7A8 <AmiBlitz3_wizzard.ab2@13974>    BNE.w JL_0_9C0E
0002A7AC <AmiBlitz3_wizzard.ab2@13975>    MOVEA.l -$24(A0),A0
0002A8E8 <AmiBlitz3_wizzard.ab2@13977>  !newcalc
0002A8EC <AmiBlitz3_wizzard.ab2@13978>    BEQ 'l10
0002A8F0 <AmiBlitz3_wizzard.ab2@13979>    MOVEA.l forthsp(PC),A0
0002A8F8 <AmiBlitz3_wizzard.ab2@13980>    MOVE.w -$18(A0),lasta6
0002A900 <AmiBlitz3_wizzard.ab2@13981>    MOVE.l -$1C(A0),lasta6
0002A904 <AmiBlitz3_wizzard.ab2@13982>    MOVEA.l -$24(A0),A0
0002A90A <AmiBlitz3_wizzard.ab2@13983>    MOVE.l A0,destpointer
0002A910 <AmiBlitz3_wizzard.ab2@13984>    MOVEA.l _mathffpbase,A6
0002A916 <AmiBlitz3_wizzard.ab2@13985>    MOVEA.l ffplib,A1
0002A91A <AmiBlitz3_wizzard.ab2@13986> BRA cont1
0002A91E <AmiBlitz3_wizzard.ab2@13989>   MOVE.w #$2000,D1
0002A924 <AmiBlitz3_wizzard.ab2@13990>   OR.w regnum,D1
0002A928 <AmiBlitz3_wizzard.ab2@13991>    BSR.w writeword
0002A92A <AmiBlitz3_wizzard.ab2@13992>     MOVEQ #0,d1
0002A930 <AmiBlitz3_wizzard.ab2@13993>     MOVE.w regnum,D1
0002A932 <AmiBlitz3_wizzard.ab2@13994>     ASL.l #8,d1
0002A934 <AmiBlitz3_wizzard.ab2@13995>     ASL.l #2,d1
0002A93A <AmiBlitz3_wizzard.ab2@13996>     OR.l #$f2000000,d1
0002A93E <AmiBlitz3_wizzard.ab2@13997>     BSR writelong
0002A942 <AmiBlitz3_wizzard.ab2@13998>   MOVE.w #$4E75,D1
0002A946 <AmiBlitz3_wizzard.ab2@13999>    BSR.w writeword
0002A94E <AmiBlitz3_wizzard.ab2@14000>   MOVE.w -$18(A0),lasta6
0002A956 <AmiBlitz3_wizzard.ab2@14001>   MOVE.l -$1C(A0),lasta6
0002A95A <AmiBlitz3_wizzard.ab2@14002>   MOVEA.l -$24(A0),A0
0002A960 <AmiBlitz3_wizzard.ab2@14003>   MOVE.l A0,destpointer
0002A964 <AmiBlitz3_wizzard.ab2@14004>   MOVEM.l D2/A5,-(A7)
0002A96A <AmiBlitz3_wizzard.ab2@14005>   MOVEA.l _mathffpbase,A6
0002A970 <AmiBlitz3_wizzard.ab2@14006>   MOVEA.l ffplib,A1
0002A974 <AmiBlitz3_wizzard.ab2@14007>   MOVE.w $A(A1),D0
0002A97A <AmiBlitz3_wizzard.ab2@14008>   LEA _mathffpbase,A5
0002A97C <AmiBlitz3_wizzard.ab2@14009>   SUBA.w D0,A5
0002A982 <AmiBlitz3_wizzard.ab2@14010>   JSR Aclearcache                                          ;neg +
0002A988 <AmiBlitz3_wizzard.ab2@14011>   CLR.l load_var_addr
0002A98E <AmiBlitz3_wizzard.ab2@14012>   CLR.l imm_addr
0002A994 <AmiBlitz3_wizzard.ab2@14013>   TST.w dontwrite
0002A998 <AmiBlitz3_wizzard.ab2@14014>   BNE '1
0002A99A <AmiBlitz3_wizzard.ab2@14015>   JSR (A0)                                                 ;calc constant inline expression
0002A99E <AmiBlitz3_wizzard.ab2@14018>   MOVEM.l (A7)+,D2/A5
0002A9A4 <AmiBlitz3_wizzard.ab2@14021>   MOVE.b d2,isconstantvalue
0002A9AA <AmiBlitz3_wizzard.ab2@14022>   MOVE.l d0,lastconstantvalue
0002A9B0 <AmiBlitz3_wizzard.ab2@14023>   MOVE.w regnum,D1
0002A9B2 <AmiBlitz3_wizzard.ab2@14024>   LSL.w #8,D1
0002A9B4 <AmiBlitz3_wizzard.ab2@14025>   LSL.w #1,D1
0002A9B8 <AmiBlitz3_wizzard.ab2@14026>   ORI.w #$203C,D1
0002A9BC <AmiBlitz3_wizzard.ab2@14027>   CMP.w #$3,D2
0002A9C0 <AmiBlitz3_wizzard.ab2@14028>    BCC.w JL_0_9BCE
0002A9C4 <AmiBlitz3_wizzard.ab2@14029>   ORI.w #$1000,D1
0002A9C8 <AmiBlitz3_wizzard.ab2@14030>    BSR.w writeword
0002A9CA <AmiBlitz3_wizzard.ab2@14031>   MOVE.w D0,D1
0002A9CE <AmiBlitz3_wizzard.ab2@14032>    BSR.w writeword
0002A9D2 <AmiBlitz3_wizzard.ab2@14033> BRA.w JL_0_9BD8
0002A9D8 <AmiBlitz3_wizzard.ab2@14037>   TST.b iee                                                ;fpu constant
0002A9DC <AmiBlitz3_wizzard.ab2@14038>   BEQ 'l10
0002A9E0 <AmiBlitz3_wizzard.ab2@14039>   CMP.b #5,d2
0002A9E4 <AmiBlitz3_wizzard.ab2@14040>   BNE 'l10
0002A9E6 <AmiBlitz3_wizzard.ab2@14041>   MOVEQ #0,d1
0002A9EC <AmiBlitz3_wizzard.ab2@14042>   MOVE.w regnum,D1
0002A9EE <AmiBlitz3_wizzard.ab2@14043>   ASL.l #7,d1
0002A9F4 <AmiBlitz3_wizzard.ab2@14044>   OR.l #$f23c5400,d1
0002A9F8 <AmiBlitz3_wizzard.ab2@14045>   BSR writelong
0002A9FA <AmiBlitz3_wizzard.ab2@14046>   SUBQ.l #8,a7
0002AA00 <AmiBlitz3_wizzard.ab2@14047>   fmove.d fp0,0(a7)
0002AA02 <AmiBlitz3_wizzard.ab2@14048>   MOVE.l (a7)+,d1
0002AA06 <AmiBlitz3_wizzard.ab2@14049>   BSR writelong
0002AA08 <AmiBlitz3_wizzard.ab2@14050>   MOVE.l (a7)+,d1
0002AA0C <AmiBlitz3_wizzard.ab2@14051>   BSR writelong
0002AA10 <AmiBlitz3_wizzard.ab2@14052> BRA JL_0_9BD8
0002AA14 <AmiBlitz3_wizzard.ab2@14055>   BSR.w writeword
0002AA16 <AmiBlitz3_wizzard.ab2@14056>   MOVE.l D0,D1
0002AA1A <AmiBlitz3_wizzard.ab2@14057>   BSR.w writelong
0002AA1E <AmiBlitz3_wizzard.ab2@14060>   MOVEA.l forthsp(PC),A0
0002AA22 <AmiBlitz3_wizzard.ab2@14061>   MOVEA.l -$20(A0),A3
0002AA28 <AmiBlitz3_wizzard.ab2@14062>   MOVEA.l hunkoffsetbase,A2
0002AA2E <AmiBlitz3_wizzard.ab2@14063>   MOVE.l A3,hunkoffsetbase
0002AA34 <AmiBlitz3_wizzard.ab2@14064>   MOVEA.l _execbase,A6
0002AA36 <AmiBlitz3_wizzard.ab2@14067>   CMPA.l A3,A2
0002AA3A <AmiBlitz3_wizzard.ab2@14068>   BEQ.w JL_0_9C0A
0002AA40 <AmiBlitz3_wizzard.ab2@14069>   SUBQ.l #1,hunkoffsetcounter
0002AA42 <AmiBlitz3_wizzard.ab2@14070>   MOVEA.l A2,A1
0002AA44 <AmiBlitz3_wizzard.ab2@14071>   MOVEA.l (A2),A2
0002AA46 <AmiBlitz3_wizzard.ab2@14072>   MOVEQ.l #$8,D0
0002AA4C <AmiBlitz3_wizzard.ab2@14073>   MOVE.l mempool2,a0
0002AA50 <AmiBlitz3_wizzard.ab2@14074>    JSR _FreePooled(A6)
0002AA54 <AmiBlitz3_wizzard.ab2@14075> BRA.w JL_0_9BF0
0002AA58 <AmiBlitz3_wizzard.ab2@14079>   MOVEA.l forthsp(PC),A0
0002AA5C <AmiBlitz3_wizzard.ab2@14082>   LEA -$12(A0),A0
0002AA62 <AmiBlitz3_wizzard.ab2@14083>   MOVE.l A0,forthsp
0002AA66 <AmiBlitz3_wizzard.ab2@14084>   MOVEM.l (A7)+,D1/A0
0002AA6A <AmiBlitz3_wizzard.ab2@14085>   BSR.w reget
0002AA6E <AmiBlitz3_wizzard.ab2@14086> BRA.w JL_0_9AFE
0002AA72 <AmiBlitz3_wizzard.ab2@14090>   BSR.w JL_0_A386
0002AA74 <AmiBlitz3_wizzard.ab2@14091>   TST.w d0
0002AA78 <AmiBlitz3_wizzard.ab2@14092>   BEQ JL_0_9C42
0002AA7C <AmiBlitz3_wizzard.ab2@14093>   CMP.b #",",d0
0002AA80 <AmiBlitz3_wizzard.ab2@14094>   BEQ JL_0_9C42
0002AA84 <AmiBlitz3_wizzard.ab2@14095>   CMP.b #"@",d0                                            ;expandline @@
0002AA88 <AmiBlitz3_wizzard.ab2@14096>   BEQ JL_0_9C42
0002AA8E <AmiBlitz3_wizzard.ab2@14097>   LEA operators,A0
0002AA90 <AmiBlitz3_wizzard.ab2@14100>    TST.w (A0)
0002AA94 <AmiBlitz3_wizzard.ab2@14101>    BEQ.w JL_0_9C42
0002AA96 <AmiBlitz3_wizzard.ab2@14102>   CMP.w (A0),D0
0002AA9A <AmiBlitz3_wizzard.ab2@14103>    BEQ.w JL_0_9C46a
0002AA9E <AmiBlitz3_wizzard.ab2@14104>   LEA $20(A0),A0
0002AAA2 <AmiBlitz3_wizzard.ab2@14105> BRA.w JL_0_9C2E
0002AAA4 <AmiBlitz3_wizzard.ab2@14109>   MOVEQ.l #$00,D1
0002AAA6 <AmiBlitz3_wizzard.ab2@14110> RTS
0002AAAA <AmiBlitz3_wizzard.ab2@14114>   CMP.w #$3C,D0
0002AAAE <AmiBlitz3_wizzard.ab2@14115>    BNE.w JL_0_9C70
0002AAB2 <AmiBlitz3_wizzard.ab2@14116>    BSR.w get1bytemain
0002AAB6 <AmiBlitz3_wizzard.ab2@14117>   CMP.w #$3D,D0
0002AABA <AmiBlitz3_wizzard.ab2@14118>    BNE.w JL_0_9C64
0002AAC0 <AmiBlitz3_wizzard.ab2@14119>   LEA ople,A0
0002AAC4 <AmiBlitz3_wizzard.ab2@14120> BRA.w JL_0_9CCA
0002AAC8 <AmiBlitz3_wizzard.ab2@14124>   CMP.w #$3E,D0
0002AACC <AmiBlitz3_wizzard.ab2@14125>    BNE.w JL_0_9C96
0002AAD0 <AmiBlitz3_wizzard.ab2@14126> BRA.w JL_0_9CC4
0002AAD4 <AmiBlitz3_wizzard.ab2@14130>   CMP.w #$3E,D0
0002AAD8 <AmiBlitz3_wizzard.ab2@14131>    BNE.w JL_0_9C9E
0002AADC <AmiBlitz3_wizzard.ab2@14132>    BSR.w get1bytemain
0002AAE0 <AmiBlitz3_wizzard.ab2@14133>   CMP.w #$3D,D0
0002AAE4 <AmiBlitz3_wizzard.ab2@14134>    BNE.w JL_0_9C8E
0002AAEA <AmiBlitz3_wizzard.ab2@14135>   LEA opge,A0
0002AAEE <AmiBlitz3_wizzard.ab2@14136> BRA.w JL_0_9CCA
0002AAF2 <AmiBlitz3_wizzard.ab2@14140>   CMP.w #$3C,D0
0002AAF6 <AmiBlitz3_wizzard.ab2@14141>    BEQ.w JL_0_9CC4
0002AB00 <AmiBlitz3_wizzard.ab2@14145>     MOVE.w oldqflag,instringon
0002AB06 <AmiBlitz3_wizzard.ab2@14146>     MOVEA.l lastsourcepos,A5
0002AB0A <AmiBlitz3_wizzard.ab2@14147> BRA.w JL_0_9CCA
0002AB0E <AmiBlitz3_wizzard.ab2@14151>   CMP.w #$3D,D0
0002AB12 <AmiBlitz3_wizzard.ab2@14152>    BNE.w JL_0_9CCA
0002AB16 <AmiBlitz3_wizzard.ab2@14153>    BSR.w get1bytemain
0002AB1A <AmiBlitz3_wizzard.ab2@14154>   CMP.w #$3E,D0
0002AB1E <AmiBlitz3_wizzard.ab2@14155>    BNE.w JL_0_9CBC
0002AB24 <AmiBlitz3_wizzard.ab2@14156>   LEA opge,A0
0002AB28 <AmiBlitz3_wizzard.ab2@14157> BRA.w JL_0_9CCA
0002AB2C <AmiBlitz3_wizzard.ab2@14161>   CMP.w #$3C,D0
0002AB30 <AmiBlitz3_wizzard.ab2@14162>   BNE.w JL_0_9C96
0002AB36 <AmiBlitz3_wizzard.ab2@14165>   LEA opne,A0
0002AB3A <AmiBlitz3_wizzard.ab2@14168>   MOVE.w $1E(A0),D1
0002AB3C <AmiBlitz3_wizzard.ab2@14169> RTS
0002AB3E <AmiBlitz3_wizzard.ab2@14176>   MOVE.w d2,d1
0002AB40 <AmiBlitz3_wizzard.ab2@14177>   SUBQ.w #1,D1
0002AB44 <AmiBlitz3_wizzard.ab2@14178>    BMI.w illoperr
0002AB46 <AmiBlitz3_wizzard.ab2@14179>   LSL.w #2,D1
0002AB4A <AmiBlitz3_wizzard.ab2@14180>   MOVE.l $2(A0,D1.W),D1
0002AB4E <AmiBlitz3_wizzard.ab2@14181>    BEQ.w illoperr
0002AB50 <AmiBlitz3_wizzard.ab2@14182>   MOVEA.l D1,A0
0002AB52 <AmiBlitz3_wizzard.ab2@14185> JMP (A0)
0002AB56 <AmiBlitz3_wizzard.ab2@14201>   MOVEA.l precsp(PC),A1
0002AB5C <AmiBlitz3_wizzard.ab2@14202>   CMPA.l #precstackf,A1
0002AB60 <AmiBlitz3_wizzard.ab2@14203>    BCC.w pserr
0002AB62 <AmiBlitz3_wizzard.ab2@14204>   MOVE.w -(A1),D1
0002AB64 <AmiBlitz3_wizzard.ab2@14205>   MOVEA.l -(A1),A0
0002AB6A <AmiBlitz3_wizzard.ab2@14206>   MOVE.l A1,precsp
0002AB6C <AmiBlitz3_wizzard.ab2@14207> RTS
0002AB70 <AmiBlitz3_wizzard.ab2@14210> precsp:      Dc.l precstack
0002AC6C <AmiBlitz3_wizzard.ab2@14211> precstack:   Ds.l 63                                       ;ds 6*32 org source   ;Lotsa Room?
0002ACF0 <AmiBlitz3_wizzard.ab2@14212>              Ds.l 33
0002ACF2 <AmiBlitz3_wizzard.ab2@14218> mseq:  SEQ D0
0002ACF4 <AmiBlitz3_wizzard.ab2@14219> msne:    SNE D0
0002ACF6 <AmiBlitz3_wizzard.ab2@14220> mslt:    SLT D0
0002ACF8 <AmiBlitz3_wizzard.ab2@14221> msle:    SLE D0
0002ACFA <AmiBlitz3_wizzard.ab2@14222> msgt:    SGT D0
0002ACFC <AmiBlitz3_wizzard.ab2@14223> msge:    SGE D0
0002ACFE <AmiBlitz3_wizzard.ab2@14225> cmp0:    CMP.b D0,D0
0002AD00 <AmiBlitz3_wizzard.ab2@14226> cmp1:    CMP.w D0,D0
0002AD02 <AmiBlitz3_wizzard.ab2@14227> cmp2:    CMP.l D0,D0
0002AD06 <AmiBlitz3_wizzard.ab2@14231>   MOVE.w cmp0(PC),D1
0002AD0A <AmiBlitz3_wizzard.ab2@14232> BRA.w doeqcmp2                                            ;writecompare
0002AD0E <AmiBlitz3_wizzard.ab2@14236>   MOVE.w cmp0(PC),D1
0002AD12 <AmiBlitz3_wizzard.ab2@14237> BRA.w donecmp2
0002AD16 <AmiBlitz3_wizzard.ab2@14241>   MOVE.w cmp0(PC),D1
0002AD1A <AmiBlitz3_wizzard.ab2@14242> BRA.w doltcmp2
0002AD1E <AmiBlitz3_wizzard.ab2@14246>   MOVE.w cmp0(PC),D1
0002AD22 <AmiBlitz3_wizzard.ab2@14247> BRA.w dolecmp2
0002AD26 <AmiBlitz3_wizzard.ab2@14251>   MOVE.w cmp0(PC),D1
0002AD2A <AmiBlitz3_wizzard.ab2@14252> BRA.w dogtcmp2
0002AD2E <AmiBlitz3_wizzard.ab2@14257>   MOVE.w cmp0(PC),D1
0002AD32 <AmiBlitz3_wizzard.ab2@14258> BRA.w dogecmp2
0002AD36 <AmiBlitz3_wizzard.ab2@14262>   MOVE.w cmp1(PC),D1
0002AD3A <AmiBlitz3_wizzard.ab2@14263> BRA.w doeqcmp2
0002AD3E <AmiBlitz3_wizzard.ab2@14267>   MOVE.w cmp1(PC),D1
0002AD42 <AmiBlitz3_wizzard.ab2@14268> BRA.w donecmp2
0002AD46 <AmiBlitz3_wizzard.ab2@14272>   MOVE.w cmp1(PC),D1
0002AD4A <AmiBlitz3_wizzard.ab2@14273> BRA.w doltcmp2
0002AD4E <AmiBlitz3_wizzard.ab2@14277>   MOVE.w cmp1(PC),D1
0002AD52 <AmiBlitz3_wizzard.ab2@14278> BRA.w dolecmp2
0002AD56 <AmiBlitz3_wizzard.ab2@14282>   MOVE.w cmp1(PC),D1
0002AD5A <AmiBlitz3_wizzard.ab2@14283> BRA.w dogtcmp2
0002AD5E <AmiBlitz3_wizzard.ab2@14288>   MOVE.w cmp1(PC),D1
0002AD62 <AmiBlitz3_wizzard.ab2@14289> BRA.w dogecmp2
0002AD66 <AmiBlitz3_wizzard.ab2@14293>   MOVE.w cmp2(PC),D1                                   ;writecomparelong
0002AD6A <AmiBlitz3_wizzard.ab2@14294> BRA doeqcmp2
0002AD6E <AmiBlitz3_wizzard.ab2@14297>   MOVE.w cmp2(PC),D1
0002AD72 <AmiBlitz3_wizzard.ab2@14298> BRA donecmp2
0002AD76 <AmiBlitz3_wizzard.ab2@14302>   MOVE.w cmp2(PC),D1
0002AD7A <AmiBlitz3_wizzard.ab2@14303> BRA.w doltcmp2
0002AD7E <AmiBlitz3_wizzard.ab2@14307>   MOVE.w cmp2(PC),D1
0002AD82 <AmiBlitz3_wizzard.ab2@14308> BRA.w dolecmp2
0002AD86 <AmiBlitz3_wizzard.ab2@14312>   MOVE.w cmp2(PC),D1
0002AD8A <AmiBlitz3_wizzard.ab2@14313> BRA.w dogtcmp2
0002AD8E <AmiBlitz3_wizzard.ab2@14317>   MOVE.w cmp2(PC),D1
0002AD92 <AmiBlitz3_wizzard.ab2@14318> BRA.w dogecmp2
0002AD94 <AmiBlitz3_wizzard.ab2@14321> cfregat:  Ds.w 1
0002AD9A <AmiBlitz3_wizzard.ab2@14325>   MOVE.w D1,libjsr+2
0002AD9E <AmiBlitz3_wizzard.ab2@14326>    BSR.w JL_0_AD40
0002ADA0 <AmiBlitz3_wizzard.ab2@14327>   MOVE.l D4,D1
0002ADA4 <AmiBlitz3_wizzard.ab2@14328>    BSR.w JL_0_AD38
0002ADA8 <AmiBlitz3_wizzard.ab2@14329>   MOVE.w #$C900,D1
0002ADAC <AmiBlitz3_wizzard.ab2@14330>    BSR.w Atokejsr
0002ADB0 <AmiBlitz3_wizzard.ab2@14331>    BSR.w JL_0_A352
0002ADB6 <AmiBlitz3_wizzard.ab2@14332>   MOVE.l libjsr,D1
0002ADBA <AmiBlitz3_wizzard.ab2@14333>    BSR.w writelong
0002ADC4 <AmiBlitz3_wizzard.ab2@14334>   MOVE.w regnum,cfregat
0002ADCA <AmiBlitz3_wizzard.ab2@14335>   CLR.w regnum
0002ADCC <AmiBlitz3_wizzard.ab2@14336> RTS
0002ADD6 <AmiBlitz3_wizzard.ab2@14340>   MOVE.w cfregat,regnum
0002ADDA <AmiBlitz3_wizzard.ab2@14341>    BSR.w JL_0_A36E
0002ADDC <AmiBlitz3_wizzard.ab2@14342>   MOVE.l D5,D1
0002ADE0 <AmiBlitz3_wizzard.ab2@14343> BRA.w JL_0_AD38
0002ADE2 <AmiBlitz3_wizzard.ab2@14347>    MOVEQ.l #-$2A,D1
0002ADE8 <AmiBlitz3_wizzard.ab2@14348>    TST.b fpu
0002ADEC <AmiBlitz3_wizzard.ab2@14349>    BEQ do_equal_float__nofpu
0002ADEE <AmiBlitz3_wizzard.ab2@14350>    MOVEQ #0,d1
0002ADF4 <AmiBlitz3_wizzard.ab2@14351>    MOVE.w regnum,d1
0002ADF6 <AmiBlitz3_wizzard.ab2@14352>    MOVE.l d1,d2
0002ADF8 <AmiBlitz3_wizzard.ab2@14353>    ASL.l #7,d1
0002ADFA <AmiBlitz3_wizzard.ab2@14354>    ADDQ  #1,d2
0002ADFC <AmiBlitz3_wizzard.ab2@14355>    ASL.l #8,d2
0002ADFE <AmiBlitz3_wizzard.ab2@14356>    ASL.l #2,d2
0002AE00 <AmiBlitz3_wizzard.ab2@14357>    OR.l d2,d1
0002AE06 <AmiBlitz3_wizzard.ab2@14358>    OR.l #$f2000038,d1
0002AE0C <AmiBlitz3_wizzard.ab2@14359>    JSR writelong
0002AE10 <AmiBlitz3_wizzard.ab2@14360>    MOVE.w #$f240,d1
0002AE16 <AmiBlitz3_wizzard.ab2@14361>    OR.w regnum,d1
0002AE1A <AmiBlitz3_wizzard.ab2@14362>    BSR writeword
0002AE1C <AmiBlitz3_wizzard.ab2@14363>    MOVEQ.l #1,d2
0002AE20 <AmiBlitz3_wizzard.ab2@14364>    MOVE.w #1,d1                                            ;fpu comp fseq
0002AE24 <AmiBlitz3_wizzard.ab2@14365>    BSR writeword
0002AE26 <AmiBlitz3_wizzard.ab2@14366> RTS
0002AE2A <AmiBlitz3_wizzard.ab2@14369>    BSR.w docflib
0002AE2E <AmiBlitz3_wizzard.ab2@14370>    BSR.w doeqcmp
0002AE32 <AmiBlitz3_wizzard.ab2@14371> BRA.w docflib2
0002AE34 <AmiBlitz3_wizzard.ab2@14375>   MOVEQ.l #-$2A,D1
0002AE3A <AmiBlitz3_wizzard.ab2@14376>   TST.b fpu
0002AE3E <AmiBlitz3_wizzard.ab2@14377>    BEQ do_not_equal_float__nofpu
0002AE40 <AmiBlitz3_wizzard.ab2@14378>    MOVEQ #0,d1
0002AE46 <AmiBlitz3_wizzard.ab2@14379>    MOVE.w regnum,d1
0002AE48 <AmiBlitz3_wizzard.ab2@14380>    MOVE.l d1,d2
0002AE4A <AmiBlitz3_wizzard.ab2@14381>    ASL.l #7,d1
0002AE4C <AmiBlitz3_wizzard.ab2@14382>    ADDQ  #1,d2
0002AE4E <AmiBlitz3_wizzard.ab2@14383>    ASL.l #8,d2
0002AE50 <AmiBlitz3_wizzard.ab2@14384>    ASL.l #2,d2
0002AE52 <AmiBlitz3_wizzard.ab2@14385>    OR.l d2,d1
0002AE58 <AmiBlitz3_wizzard.ab2@14386>    OR.l #$f2000038,d1
0002AE5E <AmiBlitz3_wizzard.ab2@14387>    JSR writelong
0002AE62 <AmiBlitz3_wizzard.ab2@14388>    MOVE.w #$f240,d1
0002AE68 <AmiBlitz3_wizzard.ab2@14389>    OR.w regnum,d1
0002AE6C <AmiBlitz3_wizzard.ab2@14390>    BSR writeword
0002AE72 <AmiBlitz3_wizzard.ab2@14391>    MOVE.l #1,d2
0002AE76 <AmiBlitz3_wizzard.ab2@14392>    MOVE.w #$e,d1                                           ;fpu comp fsne
0002AE7A <AmiBlitz3_wizzard.ab2@14393>    BSR writeword
0002AE7C <AmiBlitz3_wizzard.ab2@14394> RTS
0002AE80 <AmiBlitz3_wizzard.ab2@14397>    BSR.w docflib
0002AE84 <AmiBlitz3_wizzard.ab2@14398>    BSR.w donecmp
0002AE88 <AmiBlitz3_wizzard.ab2@14399> BRA.w docflib2
0002AE8A <AmiBlitz3_wizzard.ab2@14403>   MOVEQ.l #-$2A,D1
0002AE90 <AmiBlitz3_wizzard.ab2@14404>     TST.b fpu
0002AE94 <AmiBlitz3_wizzard.ab2@14405>    BEQ do_littler_float__nofpu
0002AE96 <AmiBlitz3_wizzard.ab2@14406>    MOVEQ #0,d1
0002AE9C <AmiBlitz3_wizzard.ab2@14407>    MOVE.w regnum,d1
0002AE9E <AmiBlitz3_wizzard.ab2@14408>    MOVE.l d1,d2
0002AEA0 <AmiBlitz3_wizzard.ab2@14409>    ASL.l #7,d1
0002AEA2 <AmiBlitz3_wizzard.ab2@14410>    ADDQ  #1,d2
0002AEA4 <AmiBlitz3_wizzard.ab2@14411>    ASL.l #8,d2
0002AEA6 <AmiBlitz3_wizzard.ab2@14412>    ASL.l #2,d2
0002AEA8 <AmiBlitz3_wizzard.ab2@14413>    OR.l d2,d1
0002AEAE <AmiBlitz3_wizzard.ab2@14414>    OR.l #$f2000038,d1
0002AEB4 <AmiBlitz3_wizzard.ab2@14415>    JSR writelong
0002AEB8 <AmiBlitz3_wizzard.ab2@14416>    MOVE.w #$f240,d1
0002AEBE <AmiBlitz3_wizzard.ab2@14417>    OR.w regnum,d1
0002AEC2 <AmiBlitz3_wizzard.ab2@14418>    BSR writeword
0002AEC8 <AmiBlitz3_wizzard.ab2@14419>    MOVE.l #$1,d2
0002AECC <AmiBlitz3_wizzard.ab2@14420>    MOVE.w #$14,d1                                          ;fpu comp fslt
0002AED0 <AmiBlitz3_wizzard.ab2@14421>    BSR writeword
0002AED2 <AmiBlitz3_wizzard.ab2@14422> RTS
0002AED6 <AmiBlitz3_wizzard.ab2@14425>    BSR.w docflib
0002AEDA <AmiBlitz3_wizzard.ab2@14426>    BSR.w doltcmp
0002AEDE <AmiBlitz3_wizzard.ab2@14427> BRA.w docflib2
0002AEE0 <AmiBlitz3_wizzard.ab2@14431>   MOVEQ.l #-$2A,D1
0002AEE6 <AmiBlitz3_wizzard.ab2@14432>   TST.b fpu
0002AEEA <AmiBlitz3_wizzard.ab2@14433>    BEQ do_littler_equal_float__nofpu
0002AEEC <AmiBlitz3_wizzard.ab2@14434>    MOVEQ #0,d1
0002AEF2 <AmiBlitz3_wizzard.ab2@14435>    MOVE.w regnum,d1
0002AEF4 <AmiBlitz3_wizzard.ab2@14436>    MOVE.l d1,d2
0002AEF6 <AmiBlitz3_wizzard.ab2@14437>    ASL.l #7,d1
0002AEF8 <AmiBlitz3_wizzard.ab2@14438>    ADDQ  #1,d2
0002AEFA <AmiBlitz3_wizzard.ab2@14439>    ASL.l #8,d2
0002AEFC <AmiBlitz3_wizzard.ab2@14440>    ASL.l #2,d2
0002AEFE <AmiBlitz3_wizzard.ab2@14441>    OR.l d2,d1
0002AF04 <AmiBlitz3_wizzard.ab2@14442>    OR.l #$f2000038,d1
0002AF0A <AmiBlitz3_wizzard.ab2@14443>    JSR writelong
0002AF0E <AmiBlitz3_wizzard.ab2@14444>    MOVE.w #$f240,d1
0002AF14 <AmiBlitz3_wizzard.ab2@14445>    OR.w regnum,d1
0002AF18 <AmiBlitz3_wizzard.ab2@14446>    BSR writeword
0002AF1E <AmiBlitz3_wizzard.ab2@14447>    MOVE.l #1,d2
0002AF22 <AmiBlitz3_wizzard.ab2@14448>    MOVE.w #$15,d1                                          ;fpu comp fsle
0002AF26 <AmiBlitz3_wizzard.ab2@14449>    BSR writeword
0002AF28 <AmiBlitz3_wizzard.ab2@14450> RTS
0002AF2C <AmiBlitz3_wizzard.ab2@14453>    BSR.w docflib
0002AF30 <AmiBlitz3_wizzard.ab2@14454>    BSR.w dolecmp
0002AF34 <AmiBlitz3_wizzard.ab2@14455> BRA.w docflib2
0002AF36 <AmiBlitz3_wizzard.ab2@14459>   MOVEQ.l #-$2A,D1
0002AF3C <AmiBlitz3_wizzard.ab2@14460>    TST.b fpu
0002AF40 <AmiBlitz3_wizzard.ab2@14461>    BEQ do_greater_float__nofpu
0002AF42 <AmiBlitz3_wizzard.ab2@14462>     MOVEQ #0,d1
0002AF48 <AmiBlitz3_wizzard.ab2@14463>    MOVE.w regnum,d1
0002AF4A <AmiBlitz3_wizzard.ab2@14464>    MOVE.l d1,d2
0002AF4C <AmiBlitz3_wizzard.ab2@14465>    ASL.l #7,d1
0002AF4E <AmiBlitz3_wizzard.ab2@14466>    ADDQ  #1,d2
0002AF50 <AmiBlitz3_wizzard.ab2@14467>    ASL.l #8,d2
0002AF52 <AmiBlitz3_wizzard.ab2@14468>    ASL.l #2,d2
0002AF54 <AmiBlitz3_wizzard.ab2@14469>    OR.l d2,d1
0002AF5A <AmiBlitz3_wizzard.ab2@14470>    OR.l #$f2000038,d1
0002AF60 <AmiBlitz3_wizzard.ab2@14471>    JSR writelong
0002AF64 <AmiBlitz3_wizzard.ab2@14472>    MOVE.w #$f240,d1
0002AF6A <AmiBlitz3_wizzard.ab2@14473>    OR.w regnum,d1
0002AF6E <AmiBlitz3_wizzard.ab2@14474>    BSR writeword
0002AF74 <AmiBlitz3_wizzard.ab2@14475>    MOVE.l #1,d2
0002AF78 <AmiBlitz3_wizzard.ab2@14476>    MOVE.w #$12,d1                                          ;fpu comp fsgt
0002AF7C <AmiBlitz3_wizzard.ab2@14477>    BSR writeword
0002AF7E <AmiBlitz3_wizzard.ab2@14478> RTS
0002AF82 <AmiBlitz3_wizzard.ab2@14481>    BSR.w docflib
0002AF86 <AmiBlitz3_wizzard.ab2@14482>    BSR.w dogtcmp
0002AF8A <AmiBlitz3_wizzard.ab2@14483> BRA.w docflib2
0002AF8C <AmiBlitz3_wizzard.ab2@14487>   MOVEQ.l #-$2A,D1
0002AF92 <AmiBlitz3_wizzard.ab2@14488>  TST.b fpu
0002AF96 <AmiBlitz3_wizzard.ab2@14489>    BEQ do_greater_equal_float__nofpu
0002AF98 <AmiBlitz3_wizzard.ab2@14490>    MOVEQ #0,d1
0002AF9E <AmiBlitz3_wizzard.ab2@14491>    MOVE.w regnum,d1
0002AFA0 <AmiBlitz3_wizzard.ab2@14492>    MOVE.l d1,d2
0002AFA2 <AmiBlitz3_wizzard.ab2@14493>    ASL.l #7,d1
0002AFA4 <AmiBlitz3_wizzard.ab2@14494>    ADDQ  #1,d2
0002AFA6 <AmiBlitz3_wizzard.ab2@14495>    ASL.l #8,d2
0002AFA8 <AmiBlitz3_wizzard.ab2@14496>    ASL.l #2,d2
0002AFAA <AmiBlitz3_wizzard.ab2@14497>    OR.l d2,d1
0002AFB0 <AmiBlitz3_wizzard.ab2@14498>    OR.l #$f2000038,d1
0002AFB6 <AmiBlitz3_wizzard.ab2@14499>    JSR writelong
0002AFBA <AmiBlitz3_wizzard.ab2@14500>    MOVE.w #$f240,d1
0002AFC0 <AmiBlitz3_wizzard.ab2@14501>    OR.w regnum,d1
0002AFC4 <AmiBlitz3_wizzard.ab2@14502>    BSR writeword
0002AFCA <AmiBlitz3_wizzard.ab2@14503>    MOVE.l #1,d2
0002AFCE <AmiBlitz3_wizzard.ab2@14504>    MOVE.w #$13,d1                                          ;fpu comp fsge
0002AFD2 <AmiBlitz3_wizzard.ab2@14505>    BSR writeword
0002AFD4 <AmiBlitz3_wizzard.ab2@14506> RTS
0002AFD8 <AmiBlitz3_wizzard.ab2@14509>    BSR.w docflib
0002AFDC <AmiBlitz3_wizzard.ab2@14510>    BSR.w dogecmp
0002AFE0 <AmiBlitz3_wizzard.ab2@14511> BRA.w docflib2
0002AFE6 <AmiBlitz3_wizzard.ab2@14516>   MOVE.l #$CE00,D1
0002AFEC <AmiBlitz3_wizzard.ab2@14517>    MOVE.l d1,lastinstruction
0002AFF0 <AmiBlitz3_wizzard.ab2@14518>    BSR.w Atokejsr
0002AFF4 <AmiBlitz3_wizzard.ab2@14519> BRA.w doeqcmp
0002AFFA <AmiBlitz3_wizzard.ab2@14523>   MOVE.l #$CE00,D1
0002B000 <AmiBlitz3_wizzard.ab2@14524>    MOVE.l d1,lastinstruction
0002B004 <AmiBlitz3_wizzard.ab2@14525>    BSR.w Atokejsr
0002B008 <AmiBlitz3_wizzard.ab2@14526> BRA.w donecmp
0002B00E <AmiBlitz3_wizzard.ab2@14530>   MOVE.l #$CE00,D1
0002B014 <AmiBlitz3_wizzard.ab2@14531>    MOVE.l d1,lastinstruction
0002B018 <AmiBlitz3_wizzard.ab2@14532>    BSR.w Atokejsr
0002B01C <AmiBlitz3_wizzard.ab2@14533> BRA.w doltcmp
0002B022 <AmiBlitz3_wizzard.ab2@14537>   MOVE.l #$CE00,D1
0002B028 <AmiBlitz3_wizzard.ab2@14538>    MOVE.l d1,lastinstruction
0002B02C <AmiBlitz3_wizzard.ab2@14539>    BSR.w Atokejsr
0002B030 <AmiBlitz3_wizzard.ab2@14540> BRA.w dolecmp
0002B036 <AmiBlitz3_wizzard.ab2@14544>   MOVE.l #$CE00,D1
0002B03C <AmiBlitz3_wizzard.ab2@14545>    MOVE.l d1,lastinstruction
0002B040 <AmiBlitz3_wizzard.ab2@14546>    BSR.w Atokejsr
0002B044 <AmiBlitz3_wizzard.ab2@14547> BRA.w dogtcmp
0002B04A <AmiBlitz3_wizzard.ab2@14551>   MOVE.l #$CE00,D1
0002B050 <AmiBlitz3_wizzard.ab2@14552>    MOVE.l d1,lastinstruction
0002B054 <AmiBlitz3_wizzard.ab2@14553>    BSR.w Atokejsr
0002B058 <AmiBlitz3_wizzard.ab2@14554> BRA.w dogecmp
0002B05E <AmiBlitz3_wizzard.ab2@14559>   TST.b fast                                               ;compare
0002B062 <AmiBlitz3_wizzard.ab2@14560>   BEQ cmpit__org
0002B068 <AmiBlitz3_wizzard.ab2@14564>   MOVE.l destpointer,a0
0002B06E <AmiBlitz3_wizzard.ab2@14565>   SUB.l imm_addr,a0
0002B074 <AmiBlitz3_wizzard.ab2@14566>   CMP.l #6,a0
0002B078 <AmiBlitz3_wizzard.ab2@14567>   BNE cmpit__l11
0002B07E <AmiBlitz3_wizzard.ab2@14568>   MOVE.l imm_addr,a0
0002B086 <AmiBlitz3_wizzard.ab2@14569>   CMP.w #$223c,imm_addr
0002B08A <AmiBlitz3_wizzard.ab2@14570>   BNE cmpit__org
0002B090 <AmiBlitz3_wizzard.ab2@14571>   ADD.w #$8e80,-6(a4)
0002B096 <AmiBlitz3_wizzard.ab2@14574>   CLR.l imm_addr
0002B098 <AmiBlitz3_wizzard.ab2@14575> RTS
0002B09E <AmiBlitz3_wizzard.ab2@14578>   CMP.l #4,a0
0002B0A2 <AmiBlitz3_wizzard.ab2@14579>   BNE cmpit__l10
0002B0A6 <AmiBlitz3_wizzard.ab2@14580>   CMP.b #2,d3
0002B0AA <AmiBlitz3_wizzard.ab2@14581>   BNE cmpit__l11b
0002B0B0 <AmiBlitz3_wizzard.ab2@14582>   ADD.w #$7e40,-4(a4)
0002B0B2 <AmiBlitz3_wizzard.ab2@14583> RTS
0002B0B8 <AmiBlitz3_wizzard.ab2@14586>  ADD.w #$7e00,-4(a4)
0002B0BA <AmiBlitz3_wizzard.ab2@14587> RTS
0002B0C0 <AmiBlitz3_wizzard.ab2@14590>    MOVE.l destpointer,a0
0002B0C6 <AmiBlitz3_wizzard.ab2@14591>    SUB.l load_var_addr,a0
0002B0CA <AmiBlitz3_wizzard.ab2@14592>    CMP.w #4,a0
0002B0CE <AmiBlitz3_wizzard.ab2@14593>    BNE cmpit__org
0002B0D2 <AmiBlitz3_wizzard.ab2@14594>    CMP.b #3,d3
0002B0D6 <AmiBlitz3_wizzard.ab2@14595>    BCS cmpit__lv1
0002B0DC <AmiBlitz3_wizzard.ab2@14596>    CLR.l load_var_addr
0002B0E2 <AmiBlitz3_wizzard.ab2@14597>    ADD.w #$9080-$200,-4(a4)
0002B0E4 <AmiBlitz3_wizzard.ab2@14598> RTS
0002B0E8 <AmiBlitz3_wizzard.ab2@14601>   CMP.b #2,d3
0002B0EC <AmiBlitz3_wizzard.ab2@14602>    BNE cmpit__org
0002B0F2 <AmiBlitz3_wizzard.ab2@14603>    CLR.l load_var_addr
0002B0F8 <AmiBlitz3_wizzard.ab2@14604>    ADD.w #$8040-$200,-4(a4)
0002B0FA <AmiBlitz3_wizzard.ab2@14605> RTS
0002B100 <AmiBlitz3_wizzard.ab2@14608>   MOVE.w regnum,D3
0002B102 <AmiBlitz3_wizzard.ab2@14609>   OR.w D3,D1
0002B104 <AmiBlitz3_wizzard.ab2@14610>   LSL.w #8,D3
0002B106 <AmiBlitz3_wizzard.ab2@14611>   LSL.w #1,D3
0002B108 <AmiBlitz3_wizzard.ab2@14612>   OR.w D3,D1
0002B10A <AmiBlitz3_wizzard.ab2@14613>   ADDQ.w #1,D1
0002B10E <AmiBlitz3_wizzard.ab2@14614> BRA.w writeword
0002B112 <AmiBlitz3_wizzard.ab2@14618>    BSR.w cmpit
0002B116 <AmiBlitz3_wizzard.ab2@14621>    MOVE.w mseq(PC),D1
0002B11A <AmiBlitz3_wizzard.ab2@14622> BRA.w cpoke
0002B11E <AmiBlitz3_wizzard.ab2@14626>   BSR.w cmpit
0002B122 <AmiBlitz3_wizzard.ab2@14629>   MOVE.w msne(PC),D1
0002B126 <AmiBlitz3_wizzard.ab2@14630> BRA.w cpoke
0002B12A <AmiBlitz3_wizzard.ab2@14634>   BSR.w cmpit
0002B12E <AmiBlitz3_wizzard.ab2@14637>    MOVE.w mslt(PC),D1
0002B132 <AmiBlitz3_wizzard.ab2@14638> BRA.w cpoke
0002B136 <AmiBlitz3_wizzard.ab2@14642>    BSR.w cmpit
0002B13A <AmiBlitz3_wizzard.ab2@14645>    MOVE.w msle(PC),D1
0002B13E <AmiBlitz3_wizzard.ab2@14646> BRA.w cpoke
0002B142 <AmiBlitz3_wizzard.ab2@14650>    BSR.w cmpit
0002B146 <AmiBlitz3_wizzard.ab2@14653>    MOVE.w msgt(PC),D1
0002B14A <AmiBlitz3_wizzard.ab2@14654> BRA.w cpoke
0002B14E <AmiBlitz3_wizzard.ab2@14658>   BSR.w cmpit
0002B152 <AmiBlitz3_wizzard.ab2@14661>    MOVE.w msge(PC),D1
0002B158 <AmiBlitz3_wizzard.ab2@14664>    OR.w regnum,D1
0002B15C <AmiBlitz3_wizzard.ab2@14665>    CMP.w #5,d2
0002B160 <AmiBlitz3_wizzard.ab2@14666>    BNE cpoke__nod0
0002B164 <AmiBlitz3_wizzard.ab2@14667>    CMP.w #5,d3
0002B168 <AmiBlitz3_wizzard.ab2@14668>    BNE cpoke__nod0
0002B16A <AmiBlitz3_wizzard.ab2@14669>    MOVE.l d1,-(a7)
0002B170 <AmiBlitz3_wizzard.ab2@14670>    MOVE.l #$44004a00,d1                                    ;68k neg.b:tst.b
0002B174 <AmiBlitz3_wizzard.ab2@14671>    BSR writelong
0002B176 <AmiBlitz3_wizzard.ab2@14672>    MOVE.l (a7)+,d1
0002B17A <AmiBlitz3_wizzard.ab2@14675>    BSR.w writeword                                         ;writeseq
0002B17C <AmiBlitz3_wizzard.ab2@14676>    MOVEQ.l #1,d2
0002B182 <AmiBlitz3_wizzard.ab2@14677>    MOVE.l lasttoken,d1
0002B188 <AmiBlitz3_wizzard.ab2@14678>     TST.b fast
0002B18C <AmiBlitz3_wizzard.ab2@14679>     BEQ.s cpoke__l11
0002B192 <AmiBlitz3_wizzard.ab2@14680>    CMP.l #$800b,d1
0002B196 <AmiBlitz3_wizzard.ab2@14681>    BEQ cpoke__l10
0002B19A <AmiBlitz3_wizzard.ab2@14684>   MOVE.w #$4880,D1                                         ;ext.w D regat
0002B1A0 <AmiBlitz3_wizzard.ab2@14685>   OR.w regnum,D1
0002B1A4 <AmiBlitz3_wizzard.ab2@14686>    BSR.w writeword                                         ;writeext.w
0002B1A6 <AmiBlitz3_wizzard.ab2@14687>   MOVEQ.l #$02,D2                                          ;type now WORD!
0002B1A8 <AmiBlitz3_wizzard.ab2@14690> RTS
0002B1AC <AmiBlitz3_wizzard.ab2@14695>   MOVE.w #$D040,D1
0002B1AE <AmiBlitz3_wizzard.ab2@14696>   MOVEQ.l #$02,D2                                          ;writeaddword   ;now a word
0002B1B2 <AmiBlitz3_wizzard.ab2@14697> BRA.w doplus2
0002B1B6 <AmiBlitz3_wizzard.ab2@14701>   MOVE.w #$D040,D1
0002B1B8 <AmiBlitz3_wizzard.ab2@14702>   MOVEQ.l #$03,D2                                          ;now a long
0002B1BC <AmiBlitz3_wizzard.ab2@14703>    BSR.w doplus2
0002B1C0 <AmiBlitz3_wizzard.ab2@14704> BRA.w convert_word_to_long
0002B1C4 <AmiBlitz3_wizzard.ab2@14708>   MOVE.w #$D080,D1                                         ;writeaddlong
0002B1C6 <AmiBlitz3_wizzard.ab2@14711>   MOVE.w d1,a1
0002B1CC <AmiBlitz3_wizzard.ab2@14712>   TST.b fast
0002B1D0 <AmiBlitz3_wizzard.ab2@14713>   BEQ doplus2__l10
0002B1D2 <AmiBlitz3_wizzard.ab2@14717>   ASR.w #8,d1
0002B1D6 <AmiBlitz3_wizzard.ab2@14718>   CMP.b #$90,d1
0002B1DA <AmiBlitz3_wizzard.ab2@14719>   BEQ doplus2__sub1
0002B1DE <AmiBlitz3_wizzard.ab2@14720>   CMP.b #$d0,d1
0002B1E2 <AmiBlitz3_wizzard.ab2@14721>   BNE doplus2__l10
0002B1E6 <AmiBlitz3_wizzard.ab2@14722>   CMP.b #3,d3
0002B1EA <AmiBlitz3_wizzard.ab2@14723>   BCS doplus2__lq10
0002B1F0 <AmiBlitz3_wizzard.ab2@14724>   TST.b quickadd
0002B1F6 <AmiBlitz3_wizzard.ab2@14728>    MOVE.l destpointer,a0
0002B1FC <AmiBlitz3_wizzard.ab2@14729>    CLR.b quickadd
0002B202 <AmiBlitz3_wizzard.ab2@14730>    CLR.l load_var_addr
0002B208 <AmiBlitz3_wizzard.ab2@14731>    SUB.l imm_addr,a0
0002B20C <AmiBlitz3_wizzard.ab2@14732>    CMP.w #6,a0
0002B210 <AmiBlitz3_wizzard.ab2@14733>    BEQ doplus2__li10
0002B214 <AmiBlitz3_wizzard.ab2@14734>    CMP.w #4,a0
0002B218 <AmiBlitz3_wizzard.ab2@14735>    BNE.s doplus2__li1
0002B21E <AmiBlitz3_wizzard.ab2@14736>    CLR.l imm_addr
0002B224 <AmiBlitz3_wizzard.ab2@14737>    ADD.w #$a040-$200,-4(a4)
0002B226 <AmiBlitz3_wizzard.ab2@14738> RTS
0002B228 <AmiBlitz3_wizzard.ab2@14741>    MOVE.l a4,a0
0002B22E <AmiBlitz3_wizzard.ab2@14742>    SUB.l load_var_addr,a0
0002B234 <AmiBlitz3_wizzard.ab2@14743>    CMP.l #$a,a0
0002B238 <AmiBlitz3_wizzard.ab2@14744>    BNE doplus2__l10e
0002B23E <AmiBlitz3_wizzard.ab2@14745>    CLR.l load_var_addr
0002B242 <AmiBlitz3_wizzard.ab2@14746>    MOVE.w -$8(a4),d1
0002B248 <AmiBlitz3_wizzard.ab2@14747>    MOVE.l -$4(a4),-$8(a4)
0002B24C <AmiBlitz3_wizzard.ab2@14748>    MOVE.w d1,-$4(a4)
0002B252 <AmiBlitz3_wizzard.ab2@14749>    SUB.w #$1980,-$a(a4)
0002B258 <AmiBlitz3_wizzard.ab2@14750>    SUBQ.l #2,destpointer
0002B25A <AmiBlitz3_wizzard.ab2@14751> RTS
0002B260 <AmiBlitz3_wizzard.ab2@14754>   CLR.b quickadd
0002B264 <AmiBlitz3_wizzard.ab2@14755> BRA doplus2__l10
0002B26A <AmiBlitz3_wizzard.ab2@14758>    CLR.l imm_addr
0002B26E <AmiBlitz3_wizzard.ab2@14759>    TST.l -4(a4)                                            ;skip If ADD.l #0,dx
0002B272 <AmiBlitz3_wizzard.ab2@14760>    BNE doplus2__doit
0002B278 <AmiBlitz3_wizzard.ab2@14761>    SUBQ.l #6,destpointer
0002B27A <AmiBlitz3_wizzard.ab2@14762> RTS
0002B280 <AmiBlitz3_wizzard.ab2@14765>    ADD.w #$b080-$200,-6(a4)
0002B282 <AmiBlitz3_wizzard.ab2@14766> RTS
0002B288 <AmiBlitz3_wizzard.ab2@14769>    MOVE.l destpointer,a0
0002B28E <AmiBlitz3_wizzard.ab2@14770>    SUB.l load_var_addr,a0
0002B292 <AmiBlitz3_wizzard.ab2@14771>    CMP.w #4,a0
0002B296 <AmiBlitz3_wizzard.ab2@14772>    BNE doplus2__l10
0002B29A <AmiBlitz3_wizzard.ab2@14773>    CMP.b #3,d3
0002B29E <AmiBlitz3_wizzard.ab2@14774>    BNE doplus2__lv1
0002B2A4 <AmiBlitz3_wizzard.ab2@14775>    CLR.l load_var_addr
0002B2AA <AmiBlitz3_wizzard.ab2@14776>    ADD.w #$b080-$200,-4(a4)
0002B2AC <AmiBlitz3_wizzard.ab2@14777> RTS
0002B2B0 <AmiBlitz3_wizzard.ab2@14780>   CMP.b #2,d3
0002B2B4 <AmiBlitz3_wizzard.ab2@14781>   BNE doplus2__l10
0002B2BA <AmiBlitz3_wizzard.ab2@14782>   CLR.l load_var_addr
0002B2C0 <AmiBlitz3_wizzard.ab2@14783>   ADD.w #$a040-$200,-4(a4)
0002B2C2 <AmiBlitz3_wizzard.ab2@14784> RTS
0002B2C8 <AmiBlitz3_wizzard.ab2@14787>   MOVE.w regnum,D3
0002B2CA <AmiBlitz3_wizzard.ab2@14788>   MOVE.w a1,d1
0002B2CC <AmiBlitz3_wizzard.ab2@14789>   OR.w D3,D1
0002B2CE <AmiBlitz3_wizzard.ab2@14790>   ADDQ.w #1,D1
0002B2D0 <AmiBlitz3_wizzard.ab2@14791>   LSL.w #8,D3
0002B2D2 <AmiBlitz3_wizzard.ab2@14792>   LSL.w #1,D3
0002B2D4 <AmiBlitz3_wizzard.ab2@14793>   OR.w D3,D1
0002B2D8 <AmiBlitz3_wizzard.ab2@14794> BRA.w writeword
0002B2DC <AmiBlitz3_wizzard.ab2@14797>    CMP.b #3,d3
0002B2E0 <AmiBlitz3_wizzard.ab2@14798>    BCS doplus2__sub1_lq10
0002B2E6 <AmiBlitz3_wizzard.ab2@14799>    TST.b quickadd
0002B2EC <AmiBlitz3_wizzard.ab2@14803>    MOVE.l destpointer,a0
0002B2F2 <AmiBlitz3_wizzard.ab2@14804>    CLR.b quickadd
0002B2F8 <AmiBlitz3_wizzard.ab2@14805>    CLR.l load_var_addr
0002B2FE <AmiBlitz3_wizzard.ab2@14806>    SUB.l imm_addr,a0
0002B302 <AmiBlitz3_wizzard.ab2@14807>    CMP.w #6,a0
0002B306 <AmiBlitz3_wizzard.ab2@14808>    BEQ doplus2__sub1_li10
0002B30A <AmiBlitz3_wizzard.ab2@14809>    CMP.w #4,a0
0002B30E <AmiBlitz3_wizzard.ab2@14810>    BNE.s doplus2__sub1_li1
0002B314 <AmiBlitz3_wizzard.ab2@14811>    CLR.l imm_addr
0002B31A <AmiBlitz3_wizzard.ab2@14812>    ADD.w #$6040-$200,-4(a4)
0002B31C <AmiBlitz3_wizzard.ab2@14813> RTS
0002B31E <AmiBlitz3_wizzard.ab2@14816>    MOVE.l a4,a0
0002B324 <AmiBlitz3_wizzard.ab2@14817>     SUB.l load_var_addr,a0
0002B32A <AmiBlitz3_wizzard.ab2@14818>     CMP.l #$a,a0
0002B32E <AmiBlitz3_wizzard.ab2@14819>     BNE doplus2__sub1_l10e
0002B334 <AmiBlitz3_wizzard.ab2@14820>    CLR.l load_var_addr
0002B338 <AmiBlitz3_wizzard.ab2@14821>    MOVE.w -$8(a4),d1
0002B33E <AmiBlitz3_wizzard.ab2@14822>    MOVE.l -$4(a4),-$8(a4)
0002B342 <AmiBlitz3_wizzard.ab2@14823>    MOVE.w d1,-$4(a4)
0002B348 <AmiBlitz3_wizzard.ab2@14824>    SUB.w #$1b80,-$a(a4)
0002B34E <AmiBlitz3_wizzard.ab2@14825>    SUBQ.l #2,destpointer
0002B350 <AmiBlitz3_wizzard.ab2@14826> RTS
0002B356 <AmiBlitz3_wizzard.ab2@14829>   CLR.b quickadd
0002B35A <AmiBlitz3_wizzard.ab2@14830> BRA doplus2__sub1_l10
0002B360 <AmiBlitz3_wizzard.ab2@14833>    CLR.l imm_addr
0002B366 <AmiBlitz3_wizzard.ab2@14834>    ADD.w #$7080-$200,-6(a4)
0002B368 <AmiBlitz3_wizzard.ab2@14835> RTS
0002B36E <AmiBlitz3_wizzard.ab2@14838>    MOVE.l destpointer,a0
0002B374 <AmiBlitz3_wizzard.ab2@14839>    SUB.l load_var_addr,a0
0002B378 <AmiBlitz3_wizzard.ab2@14840>    CMP.w #4,a0
0002B37C <AmiBlitz3_wizzard.ab2@14841>    BNE doplus2__sub1_l10
0002B380 <AmiBlitz3_wizzard.ab2@14842>    CMP.b #3,d3
0002B384 <AmiBlitz3_wizzard.ab2@14843>    BNE doplus2__sub1_lv1
0002B38A <AmiBlitz3_wizzard.ab2@14844>    CLR.l load_var_addr
0002B390 <AmiBlitz3_wizzard.ab2@14845>    ADD.w #$7080-$200,-4(a4)
0002B392 <AmiBlitz3_wizzard.ab2@14846> RTS
0002B396 <AmiBlitz3_wizzard.ab2@14849>    CMP.b #2,d3
0002B39A <AmiBlitz3_wizzard.ab2@14850>    BNE doplus2__sub1_l10
0002B3A0 <AmiBlitz3_wizzard.ab2@14851>    CLR.l load_var_addr
0002B3A6 <AmiBlitz3_wizzard.ab2@14852>    ADD.w #$6040-$200,-4(a4)
0002B3A8 <AmiBlitz3_wizzard.ab2@14853> RTS
0002B3AE <AmiBlitz3_wizzard.ab2@14856>   MOVE.w regnum,D3
0002B3B0 <AmiBlitz3_wizzard.ab2@14857>   MOVE.w a1,d1
0002B3B2 <AmiBlitz3_wizzard.ab2@14858>   OR.w D3,D1
0002B3B4 <AmiBlitz3_wizzard.ab2@14859>   ADDQ.w #1,D1
0002B3B6 <AmiBlitz3_wizzard.ab2@14860>   LSL.w #8,D3
0002B3B8 <AmiBlitz3_wizzard.ab2@14861>   LSL.w #1,D3
0002B3BA <AmiBlitz3_wizzard.ab2@14862>   OR.w D3,D1
0002B3BE <AmiBlitz3_wizzard.ab2@14863> BRA.w writeword
0002B3C0 <AmiBlitz3_wizzard.ab2@14867>   MOVEQ #0,d0
0002B3C6 <AmiBlitz3_wizzard.ab2@14868>   MOVE.w regnum,d0
0002B3C8 <AmiBlitz3_wizzard.ab2@14869>   ADDQ #1,d0
0002B3CA <AmiBlitz3_wizzard.ab2@14870>   ASL.w #8,d0
0002B3CC <AmiBlitz3_wizzard.ab2@14871>   ASL.w #2,d0
0002B3D2 <AmiBlitz3_wizzard.ab2@14872>   MOVE.l #$f2000022,d1                                     ;fpu add
0002B3D4 <AmiBlitz3_wizzard.ab2@14873>   OR.l d0,d1
0002B3DA <AmiBlitz3_wizzard.ab2@14874>   MOVE.w regnum,d0
0002B3DC <AmiBlitz3_wizzard.ab2@14875>   ASL.w #7,d0
0002B3DE <AmiBlitz3_wizzard.ab2@14876>   OR.l d0,d1
0002B3E2 <AmiBlitz3_wizzard.ab2@14877> BRA.w writelong
0002B3E8 <AmiBlitz3_wizzard.ab2@14883>   TST.b iee
0002B3EC <AmiBlitz3_wizzard.ab2@14884>   BNE do_plus_float__fadd1
0002B3F0 <AmiBlitz3_wizzard.ab2@14885>   MOVE.w #$FFBE,D1                                         ;#-66,d1 org soruce ;floatadd
0002B3F6 <AmiBlitz3_wizzard.ab2@14888>    MOVE.w D1,libjsr+2
0002B3FA <AmiBlitz3_wizzard.ab2@14889>    BSR.w JL_0_AD40
0002B3FC <AmiBlitz3_wizzard.ab2@14890>   MOVE.l D4,D1
0002B400 <AmiBlitz3_wizzard.ab2@14891>    BSR.w JL_0_AD38
0002B404 <AmiBlitz3_wizzard.ab2@14892>   MOVE.w #$C900,D1
0002B408 <AmiBlitz3_wizzard.ab2@14893>    BSR.w Atokejsr
0002B40C <AmiBlitz3_wizzard.ab2@14894>    BSR.w JL_0_A352
0002B412 <AmiBlitz3_wizzard.ab2@14895>   MOVE.l libjsr,D1
0002B416 <AmiBlitz3_wizzard.ab2@14896>    BSR.w writelong
0002B41A <AmiBlitz3_wizzard.ab2@14897>    BSR.w JL_0_A36E
0002B41C <AmiBlitz3_wizzard.ab2@14898>   MOVE.l D5,D1
0002B420 <AmiBlitz3_wizzard.ab2@14899> BRA.w JL_0_AD38
0002B426 <AmiBlitz3_wizzard.ab2@14903>   MOVE.w regnum,D1
0002B428 <AmiBlitz3_wizzard.ab2@14904>   LSL.w #8,D1
0002B42A <AmiBlitz3_wizzard.ab2@14905>   LSL.w #1,D1
0002B42C <AmiBlitz3_wizzard.ab2@14906>   MOVE.w D1,-(A7)
0002B430 <AmiBlitz3_wizzard.ab2@14907>   CMP.w #3072,d1
0002B434 <AmiBlitz3_wizzard.ab2@14908>   BEQ 'l1
0002B43A <AmiBlitz3_wizzard.ab2@14909>   OR.w addcode,D1                                          ;move.l (a7)+,d0
0002B43E <AmiBlitz3_wizzard.ab2@14910> BRA 'l2
0002B442 <AmiBlitz3_wizzard.ab2@14913>    MOVE.w #$588f,d1                                        ;addq.l #4,a7
0002B446 <AmiBlitz3_wizzard.ab2@14916>    BSR.w writeword
0002B448 <AmiBlitz3_wizzard.ab2@14917>   MOVE.w (A7)+,D1
0002B44E <AmiBlitz3_wizzard.ab2@14918>   OR.w addcode+2,D1                                        ;native string add.l d0,(a7)
0002B452 <AmiBlitz3_wizzard.ab2@14919> BRA.w writeword
0002B456 <AmiBlitz3_wizzard.ab2@14925>   MOVE.w #$9040,D1
0002B45A <AmiBlitz3_wizzard.ab2@14926> BRA.w doplus2
0002B45E <AmiBlitz3_wizzard.ab2@14930>   MOVE.w #$9040,D1
0002B462 <AmiBlitz3_wizzard.ab2@14931> BRA.w doplus2
0002B466 <AmiBlitz3_wizzard.ab2@14935>   MOVE.w #$9080,D1
0002B46A <AmiBlitz3_wizzard.ab2@14936> BRA.w doplus2
0002B470 <AmiBlitz3_wizzard.ab2@14940>    TST.b iee
0002B474 <AmiBlitz3_wizzard.ab2@14941>     BNE do_minus_float__fs1
0002B478 <AmiBlitz3_wizzard.ab2@14942>   MOVE.w #$FFB8,D1                                         ;floatsub
0002B47C <AmiBlitz3_wizzard.ab2@14943> BRA.w doflib
0002B47E <AmiBlitz3_wizzard.ab2@14946>   MOVEQ #0,d0
0002B484 <AmiBlitz3_wizzard.ab2@14947>   MOVE.w regnum,d0
0002B486 <AmiBlitz3_wizzard.ab2@14948>   ADDQ #1,d0
0002B488 <AmiBlitz3_wizzard.ab2@14949>   ASL.w #8,d0
0002B48A <AmiBlitz3_wizzard.ab2@14950>   ASL.w #2,d0
0002B490 <AmiBlitz3_wizzard.ab2@14951>   MOVE.l #$f2000028,d1
0002B492 <AmiBlitz3_wizzard.ab2@14952>   OR.l d0,d1
0002B498 <AmiBlitz3_wizzard.ab2@14953>   MOVE.w regnum,d0
0002B49A <AmiBlitz3_wizzard.ab2@14954>   ASL.w #7,d0
0002B49C <AmiBlitz3_wizzard.ab2@14955>   OR.l d0,d1
0002B4A0 <AmiBlitz3_wizzard.ab2@14956> BRA.w writelong
0002B4A4 <AmiBlitz3_wizzard.ab2@14962>   MOVE.w #$C1C0,D1
0002B4A6 <AmiBlitz3_wizzard.ab2@14963>   MOVEQ.l #$02,D2                                          ;now a word
0002B4AA <AmiBlitz3_wizzard.ab2@14964> BRA.w doplus2
0002B4AE <AmiBlitz3_wizzard.ab2@14968>   MOVE.w #$C1C0,D1
0002B4B0 <AmiBlitz3_wizzard.ab2@14969>   MOVEQ.l #$03,D2                                          ;now a long.
0002B4B4 <AmiBlitz3_wizzard.ab2@14970> BRA.w doplus2
0002B4B8 <AmiBlitz3_wizzard.ab2@14974>   MOVE.w #$CA00,D1                                         ;quickmul
0002B4BC <AmiBlitz3_wizzard.ab2@14975> BRA.w domylib
0002B4C2 <AmiBlitz3_wizzard.ab2@14979>   TST.b fast
0002B4C6 <AmiBlitz3_wizzard.ab2@14980>   BNE.s 'l10
0002B4CA <AmiBlitz3_wizzard.ab2@14981>   MOVE.w #$CA01,D1                                         ;writelongmul
0002B4CE <AmiBlitz3_wizzard.ab2@14982> BRA.w domylib
0002B4D4 <AmiBlitz3_wizzard.ab2@14991>    MOVE.l destpointer,a0
0002B4DA <AmiBlitz3_wizzard.ab2@14992>    SUB.l imm_addr,a0
0002B4DE <AmiBlitz3_wizzard.ab2@14993>    CMP.w #6,a0
0002B4E2 <AmiBlitz3_wizzard.ab2@14994>    BNE 'li1
0002B4E4 <AmiBlitz3_wizzard.ab2@14995>    MOVEQ.l #2,d1
0002B4E6 <AmiBlitz3_wizzard.ab2@14996>    MOVEQ #1,d3
0002B4EA <AmiBlitz3_wizzard.ab2@14999>   CMP.l -4(a4),d1
0002B4EE <AmiBlitz3_wizzard.ab2@15000>    BEQ 'oklsl
0002B4F0 <AmiBlitz3_wizzard.ab2@15001>     LSL.l #1,d1
0002B4F6 <AmiBlitz3_wizzard.ab2@15002>     ADD.l #1,d3
0002B4FC <AmiBlitz3_wizzard.ab2@15003>     CMP.l #9,d3
0002B500 <AmiBlitz3_wizzard.ab2@15004>     BNE 'ag
0002B504 <AmiBlitz3_wizzard.ab2@15005>    MOVE.w -2(a4),d1
0002B508 <AmiBlitz3_wizzard.ab2@15006>    BSR writeword
0002B50E <AmiBlitz3_wizzard.ab2@15007>    MOVE.w -6(a4),-4(a4)
0002B516 <AmiBlitz3_wizzard.ab2@15008>    MOVE.l #$4c3c0800,-8(a4)
0002B51C <AmiBlitz3_wizzard.ab2@15009>    MOVE.w regnum,D3
0002B520 <AmiBlitz3_wizzard.ab2@15010>    MULS #$1000,D3
0002B524 <AmiBlitz3_wizzard.ab2@15011>    OR.w D3,-6(a4)
0002B52A <AmiBlitz3_wizzard.ab2@15012>    CLR.l load_var_addr
0002B530 <AmiBlitz3_wizzard.ab2@15013>    CLR.l imm_addr
0002B534 <AmiBlitz3_wizzard.ab2@15014> BRA 'li3
0002B538 <AmiBlitz3_wizzard.ab2@15017>    CMP.w #8,d3
0002B53C <AmiBlitz3_wizzard.ab2@15018>    BEQ 'ok
0002B53E <AmiBlitz3_wizzard.ab2@15019>    ASL.l #1,d3
0002B540 <AmiBlitz3_wizzard.ab2@15020>    ASL.l #8,d3
0002B544 <AmiBlitz3_wizzard.ab2@15021>    MOVE.w #$e188,d1
0002B546 <AmiBlitz3_wizzard.ab2@15022>    OR.w d3,d1
0002B54A <AmiBlitz3_wizzard.ab2@15023>    MOVE.w d1,-6(a4)
0002B54E <AmiBlitz3_wizzard.ab2@15024> BRA 'okls
0002B554 <AmiBlitz3_wizzard.ab2@15027>   MOVE.w #$e188,-6(a4)                                     ;lsl.l #,dx
0002B55A <AmiBlitz3_wizzard.ab2@15030>   MOVE.w regnum,d3
0002B55E <AmiBlitz3_wizzard.ab2@15031>    OR.b d3,-5(a4)
0002B564 <AmiBlitz3_wizzard.ab2@15032>    SUBQ.l #4,destpointer
0002B56A <AmiBlitz3_wizzard.ab2@15033>    CLR.l load_var_addr
0002B570 <AmiBlitz3_wizzard.ab2@15034>    CLR.l imm_addr
0002B574 <AmiBlitz3_wizzard.ab2@15035> BRA 'li3
0002B57A <AmiBlitz3_wizzard.ab2@15038>    MOVE.l destpointer,a0
0002B580 <AmiBlitz3_wizzard.ab2@15039>    SUB.l load_var_addr,a0
0002B584 <AmiBlitz3_wizzard.ab2@15040>    CMP.w #4,a0
0002B588 <AmiBlitz3_wizzard.ab2@15041>    BNE 'li2
0002B58C <AmiBlitz3_wizzard.ab2@15042>    MOVE.w -2(a4),d1
0002B590 <AmiBlitz3_wizzard.ab2@15043>    BSR writeword
0002B596 <AmiBlitz3_wizzard.ab2@15044>    MOVE.b #$4c,-6(a4)
0002B59C <AmiBlitz3_wizzard.ab2@15045>    MOVE.w #$0800,-4(a4)
0002B5A2 <AmiBlitz3_wizzard.ab2@15046>    MOVE.w regnum,D3
0002B5A6 <AmiBlitz3_wizzard.ab2@15047>    MULS #$1000,d3
0002B5AA <AmiBlitz3_wizzard.ab2@15048>    OR.w D3,-4(a4)
0002B5AE <AmiBlitz3_wizzard.ab2@15049> BRA 'li3
0002B5B4 <AmiBlitz3_wizzard.ab2@15052>    MOVE.l #$4c010800,d1
0002B5BA <AmiBlitz3_wizzard.ab2@15053>    MOVE.w regnum,D3
0002B5BC <AmiBlitz3_wizzard.ab2@15054>    EXT.l d3
0002B5C0 <AmiBlitz3_wizzard.ab2@15055>    MULS #$1000,d3
0002B5C2 <AmiBlitz3_wizzard.ab2@15056>    OR.w D3,d1
0002B5C6 <AmiBlitz3_wizzard.ab2@15057>    MULS #$10,d3
0002B5C8 <AmiBlitz3_wizzard.ab2@15058>    ADD.l d3,d1
0002B5CC <AmiBlitz3_wizzard.ab2@15059>    BSR writelong
0002B5CE <AmiBlitz3_wizzard.ab2@15064> RTS
0002B5D0 <AmiBlitz3_wizzard.ab2@15068>   MOVE.w D1,-(A7)
0002B5D4 <AmiBlitz3_wizzard.ab2@15069>    BSR.w JL_0_AD40
0002B5D6 <AmiBlitz3_wizzard.ab2@15070>   MOVE.l D4,D1
0002B5DA <AmiBlitz3_wizzard.ab2@15071>    BSR.w JL_0_AD38
0002B5DE <AmiBlitz3_wizzard.ab2@15072>    BSR.w JL_0_A352
0002B5E0 <AmiBlitz3_wizzard.ab2@15073>   MOVEQ #0,d1
0002B5E2 <AmiBlitz3_wizzard.ab2@15074>   MOVE.w (A7)+,D1
0002B5E8 <AmiBlitz3_wizzard.ab2@15075>   MOVE.l d1,lastinstruction
0002B5EC <AmiBlitz3_wizzard.ab2@15076>    BSR.w Atokejsr
0002B5F0 <AmiBlitz3_wizzard.ab2@15077>    BSR.w JL_0_A36E
0002B5F2 <AmiBlitz3_wizzard.ab2@15078>   MOVE.l D5,D1
0002B5F6 <AmiBlitz3_wizzard.ab2@15079> BRA.w JL_0_AD38
0002B5FC <AmiBlitz3_wizzard.ab2@15083>    TST.b iee
0002B600 <AmiBlitz3_wizzard.ab2@15084>     BNE fm1
0002B604 <AmiBlitz3_wizzard.ab2@15085>  MOVE.w #$FFB2,D1                                          ;floatmul
0002B608 <AmiBlitz3_wizzard.ab2@15086> BRA.w doflib
0002B60A <AmiBlitz3_wizzard.ab2@15089>   MOVEQ #0,d0
0002B610 <AmiBlitz3_wizzard.ab2@15090>  MOVE.w regnum,d0
0002B612 <AmiBlitz3_wizzard.ab2@15091>  ADDQ #1,d0
0002B614 <AmiBlitz3_wizzard.ab2@15092>  ASL.w #8,d0
0002B616 <AmiBlitz3_wizzard.ab2@15093>  ASL.w #2,d0
0002B61C <AmiBlitz3_wizzard.ab2@15094>  MOVE.l #$f2000023,d1
0002B61E <AmiBlitz3_wizzard.ab2@15095>  OR.l d0,d1
0002B624 <AmiBlitz3_wizzard.ab2@15096>  MOVE.w regnum,d0
0002B626 <AmiBlitz3_wizzard.ab2@15097>  ASL.w #7,d0
0002B628 <AmiBlitz3_wizzard.ab2@15098>  OR.l d0,d1
0002B62C <AmiBlitz3_wizzard.ab2@15099> BRA.w writelong
0002B62E <AmiBlitz3_wizzard.ab2@15103>   MOVE.w D2,-(A7)                                          ;dopow
0002B630 <AmiBlitz3_wizzard.ab2@15104>   MOVE.w D2,D3
0002B632 <AmiBlitz3_wizzard.ab2@15105>   MOVEQ.l #$05,D2
0002B636 <AmiBlitz3_wizzard.ab2@15106>    BSR.w JL_0_9770
0002B63C <AmiBlitz3_wizzard.ab2@15107>   ADDQ.w #1,regnum
0002B63E <AmiBlitz3_wizzard.ab2@15108>   MOVE.w (A7)+,D3
0002B640 <AmiBlitz3_wizzard.ab2@15109>   MOVEQ.l #$05,D2
0002B644 <AmiBlitz3_wizzard.ab2@15110>    BSR.w writeconvertcode
0002B64A <AmiBlitz3_wizzard.ab2@15111>   SUBQ.w #1,regnum
0002B64E <AmiBlitz3_wizzard.ab2@15112>    BSR.w nocando
0002B654 <AmiBlitz3_wizzard.ab2@15113>    TST.b fpu
0002B658 <AmiBlitz3_wizzard.ab2@15114>    BEQ 'old
0002B65A <AmiBlitz3_wizzard.ab2@15115>    MOVEQ #0,d1
0002B660 <AmiBlitz3_wizzard.ab2@15116>    MOVE.w regnum,d1
0002B662 <AmiBlitz3_wizzard.ab2@15117>   MOVE.l d1,d0
0002B664 <AmiBlitz3_wizzard.ab2@15118>   ASL.w #7,d1
0002B666 <AmiBlitz3_wizzard.ab2@15119>   ASL.w #8,d0
0002B668 <AmiBlitz3_wizzard.ab2@15120>   ASL.w #2,d0
0002B66A <AmiBlitz3_wizzard.ab2@15121>   OR.w d0,d1
0002B66C <AmiBlitz3_wizzard.ab2@15122>   MOVE.l d1,-(a7)
0002B672 <AmiBlitz3_wizzard.ab2@15124>    OR.l #$f2000016,d1                                       ;flog2.x fp0      ;fpu ^ pow
0002B676 <AmiBlitz3_wizzard.ab2@15125>    BSR writelong
0002B67C <AmiBlitz3_wizzard.ab2@15126>    MOVE.w regnum,d0
0002B67E <AmiBlitz3_wizzard.ab2@15127>  ADDQ #1,d0
0002B680 <AmiBlitz3_wizzard.ab2@15128>  ASL.w #8,d0
0002B682 <AmiBlitz3_wizzard.ab2@15129>  ASL.w #2,d0
0002B688 <AmiBlitz3_wizzard.ab2@15130>  MOVE.l #$f2000023,d1
0002B68A <AmiBlitz3_wizzard.ab2@15131>  OR.l d0,d1
0002B690 <AmiBlitz3_wizzard.ab2@15132>  MOVE.w regnum,d0
0002B692 <AmiBlitz3_wizzard.ab2@15133>  ASL.w #7,d0
0002B694 <AmiBlitz3_wizzard.ab2@15134>  OR.l d0,d1
0002B69A <AmiBlitz3_wizzard.ab2@15135>    OR.l #$f2000023,d1                                      ;fmulx.x fp1,fp0
0002B69E <AmiBlitz3_wizzard.ab2@15136>    BSR writelong
0002B6A0 <AmiBlitz3_wizzard.ab2@15137>    MOVE.l (a7)+,d1
0002B6A6 <AmiBlitz3_wizzard.ab2@15139>    OR.l #$f2000011,d1                                      ;ftwotox.x fp0
0002B6AA <AmiBlitz3_wizzard.ab2@15140>    BSR writelong
0002B6AC <AmiBlitz3_wizzard.ab2@15141> RTS
0002B6B0 <AmiBlitz3_wizzard.ab2@15144>   MOVE.w #$6001,D1
0002B6B4 <AmiBlitz3_wizzard.ab2@15145> BRA.w domylib
0002B6B8 <AmiBlitz3_wizzard.ab2@15151>   MOVEA.l forthsp(PC),A0
0002B6BC <AmiBlitz3_wizzard.ab2@15152>   MOVE.w #$FFFF,-(A0)                                      ;#-1,-(a0) org source
0002B6BE <AmiBlitz3_wizzard.ab2@15153> RTS
0002B6C2 <AmiBlitz3_wizzard.ab2@15159>   MOVE.w #$D400,D1
0002B6C6 <AmiBlitz3_wizzard.ab2@15160> BRA.w domylib
0002B6CA <AmiBlitz3_wizzard.ab2@15164>   MOVE.w #$D401,D1
0002B6CE <AmiBlitz3_wizzard.ab2@15165> BRA.w domylib
0002B6D2 <AmiBlitz3_wizzard.ab2@15169>    BSR.w nocando                                           ;modlib uses an alibjsr here!
0002B6D6 <AmiBlitz3_wizzard.ab2@15170>   MOVE.w #$D402,D1
0002B6DA <AmiBlitz3_wizzard.ab2@15171> BRA.w domylib
0002B6DE <AmiBlitz3_wizzard.ab2@15175>   MOVE.w #$D403,D1
0002B6E0 <AmiBlitz3_wizzard.ab2@15176>   MOVEQ.l #$02,D2                                          ;now a word.
0002B6E4 <AmiBlitz3_wizzard.ab2@15177> BRA.w domylib
0002B6E8 <AmiBlitz3_wizzard.ab2@15181>    BSR.w nocando                                           ;modlib lib uses an alibjsr!  ;domod float
0002B6EE <AmiBlitz3_wizzard.ab2@15182>   TST.b fpu
0002B6F2 <AmiBlitz3_wizzard.ab2@15183>   BEQ 'old
0002B6F4 <AmiBlitz3_wizzard.ab2@15184>   MOVEQ #0,d1
0002B6FA <AmiBlitz3_wizzard.ab2@15185>   MOVE.w regnum,d1                                         ;fpu mod
0002B6FC <AmiBlitz3_wizzard.ab2@15186>   MOVE.l d1,d0
0002B6FE <AmiBlitz3_wizzard.ab2@15187>   ADDQ.l #1,d1
0002B700 <AmiBlitz3_wizzard.ab2@15188>   ASL.l #7,d0
0002B702 <AmiBlitz3_wizzard.ab2@15189>   ASL.l #8,d1
0002B704 <AmiBlitz3_wizzard.ab2@15190>   ASL.l #2,d1
0002B706 <AmiBlitz3_wizzard.ab2@15191>   OR.l d0,d1
0002B708 <AmiBlitz3_wizzard.ab2@15192>   MOVE.l d0,-(a7)
0002B70E <AmiBlitz3_wizzard.ab2@15193>   OR.l #$f2000021,d1
0002B712 <AmiBlitz3_wizzard.ab2@15194>   BSR writelong
0002B714 <AmiBlitz3_wizzard.ab2@15195>   MOVE.l (a7)+,d0
0002B716 <AmiBlitz3_wizzard.ab2@15196>  RTS
0002B71A <AmiBlitz3_wizzard.ab2@15199>   MOVE.w #$D404,D1
0002B71C <AmiBlitz3_wizzard.ab2@15200>   MOVEQ.l #$03,D2                                          ;now a long
0002B720 <AmiBlitz3_wizzard.ab2@15201> BRA.w domylib
0002B724 <AmiBlitz3_wizzard.ab2@15209>   MOVE.w #$48C0,D1
0002B72A <AmiBlitz3_wizzard.ab2@15210>   OR.w regnum,D1
0002B72E <AmiBlitz3_wizzard.ab2@15211>    BSR.w writeword
0002B730 <AmiBlitz3_wizzard.ab2@15212>   ADDQ.w #1,D1
0002B734 <AmiBlitz3_wizzard.ab2@15213>    BSR.w writeword
0002B738 <AmiBlitz3_wizzard.ab2@15216>    MOVE.w #$48C0,D1
0002B73E <AmiBlitz3_wizzard.ab2@15217>   OR.w regnum,D1
0002B742 <AmiBlitz3_wizzard.ab2@15218>    BSR.w writeword
0002B746 <AmiBlitz3_wizzard.ab2@15219>   MOVE.w #$81C0,D1
0002B74A <AmiBlitz3_wizzard.ab2@15220> BRA.w doplus2
0002B750 <AmiBlitz3_wizzard.ab2@15224>   TST.b fast
0002B754 <AmiBlitz3_wizzard.ab2@15225>   BNE.s 'l10
0002B758 <AmiBlitz3_wizzard.ab2@15226>   MOVE.w #$CB01,D1
0002B75C <AmiBlitz3_wizzard.ab2@15227> BRA.w domylib
0002B760 <AmiBlitz3_wizzard.ab2@15233>   BSR.w JL_0_AD40
0002B762 <AmiBlitz3_wizzard.ab2@15234>   MOVE.l D4,D1
0002B766 <AmiBlitz3_wizzard.ab2@15235>    BSR.w JL_0_AD38
0002B76A <AmiBlitz3_wizzard.ab2@15236>    BSR.w JL_0_A352
0002B770 <AmiBlitz3_wizzard.ab2@15250>    MOVE.l #$4c410800,d1
0002B774 <AmiBlitz3_wizzard.ab2@15251>    BSR writelong
0002B778 <AmiBlitz3_wizzard.ab2@15254>   MOVE.w #$4e71,d1
0002B77C <AmiBlitz3_wizzard.ab2@15256>    BSR.w JL_0_A36E
0002B77E <AmiBlitz3_wizzard.ab2@15257>   MOVE.l D5,D1
0002B782 <AmiBlitz3_wizzard.ab2@15258> BRA.w JL_0_AD38
0002B786 <AmiBlitz3_wizzard.ab2@15261>     CMP.w #8,d3
0002B78A <AmiBlitz3_wizzard.ab2@15262>     BEQ 'ok
0002B78C <AmiBlitz3_wizzard.ab2@15263>     ASL.l #1,d3
0002B78E <AmiBlitz3_wizzard.ab2@15264>     ASL.l #8,d3
0002B792 <AmiBlitz3_wizzard.ab2@15265>     MOVE.w #$e080,d1
0002B794 <AmiBlitz3_wizzard.ab2@15266>     OR.w d3,d1
0002B798 <AmiBlitz3_wizzard.ab2@15267> BRA 'oklsr2
0002B79C <AmiBlitz3_wizzard.ab2@15270>   MOVE.w #$e080,d1                                         ;lsr.l #,dx
0002B7A2 <AmiBlitz3_wizzard.ab2@15273>      SUBQ.l #6,destpointer
0002B7A6 <AmiBlitz3_wizzard.ab2@15274>      BSR writeword
0002B7A8 <AmiBlitz3_wizzard.ab2@15275>      MOVE.l (a7)+,d3
0002B7AA <AmiBlitz3_wizzard.ab2@15276>      MOVEQ #0,d1
0002B7B0 <AmiBlitz3_wizzard.ab2@15277>      CLR.l load_var_addr
0002B7B6 <AmiBlitz3_wizzard.ab2@15278>      CLR.l imm_addr
0002B7BA <AmiBlitz3_wizzard.ab2@15279> BRA JL_0_AD38
0002B7BE <AmiBlitz3_wizzard.ab2@15283>   MOVE.w #$CB00,D1                                         ;quickdiv
0002B7C2 <AmiBlitz3_wizzard.ab2@15284> BRA.w domylib
0002B7C8 <AmiBlitz3_wizzard.ab2@15288>    TST.b iee
0002B7CC <AmiBlitz3_wizzard.ab2@15289>    BNE fdiv1
0002B7D0 <AmiBlitz3_wizzard.ab2@15290>    MOVE.w #$FFAC,D1                                        ;floatdiv
0002B7D4 <AmiBlitz3_wizzard.ab2@15291> BRA.w doflib
0002B7D6 <AmiBlitz3_wizzard.ab2@15295>   MOVEQ #0,d0
0002B7DC <AmiBlitz3_wizzard.ab2@15296>   MOVE.w regnum,d0
0002B7DE <AmiBlitz3_wizzard.ab2@15297>   ADDQ #1,d0
0002B7E0 <AmiBlitz3_wizzard.ab2@15298>   ASL.w #8,d0
0002B7E2 <AmiBlitz3_wizzard.ab2@15299>   ASL.w #2,d0
0002B7E8 <AmiBlitz3_wizzard.ab2@15300>   MOVE.l #$f2000020,d1                                     ;fpu div
0002B7EA <AmiBlitz3_wizzard.ab2@15301>   OR.l d0,d1
0002B7F0 <AmiBlitz3_wizzard.ab2@15302>   MOVE.w regnum,d0
0002B7F2 <AmiBlitz3_wizzard.ab2@15303>   ASL.w #7,d0
0002B7F4 <AmiBlitz3_wizzard.ab2@15304>   OR.l d0,d1
0002B7F8 <AmiBlitz3_wizzard.ab2@15305> BRA.w writelong
0002B7FC <AmiBlitz3_wizzard.ab2@15309>   MOVE.w #$C000,D1
0002B800 <AmiBlitz3_wizzard.ab2@15310> BRA.w doplus2
0002B804 <AmiBlitz3_wizzard.ab2@15314>   MOVE.w #$C040,D1
0002B808 <AmiBlitz3_wizzard.ab2@15315> BRA.w doplus2
0002B80C <AmiBlitz3_wizzard.ab2@15319>   MOVE.w #$C080,D1
0002B810 <AmiBlitz3_wizzard.ab2@15320> BRA.w doplus2
0002B814 <AmiBlitz3_wizzard.ab2@15324>   MOVE.w #$8000,D1
0002B818 <AmiBlitz3_wizzard.ab2@15325> BRA.w doplus2
0002B81C <AmiBlitz3_wizzard.ab2@15329>   MOVE.w #$8040,D1
0002B820 <AmiBlitz3_wizzard.ab2@15330> BRA.w doplus2
0002B824 <AmiBlitz3_wizzard.ab2@15334>   MOVE.w #$8080,D1
0002B828 <AmiBlitz3_wizzard.ab2@15335> BRA.w doplus2
0002B82C <AmiBlitz3_wizzard.ab2@15339>   MOVE.w #$B100,D1
0002B832 <AmiBlitz3_wizzard.ab2@15342>    MOVE.w regnum,D3
0002B834 <AmiBlitz3_wizzard.ab2@15343>   OR.w D3,D1
0002B836 <AmiBlitz3_wizzard.ab2@15344>   ADDQ.w #1,D3
0002B838 <AmiBlitz3_wizzard.ab2@15345>   LSL.w #8,D3
0002B83A <AmiBlitz3_wizzard.ab2@15346>   LSL.w #1,D3
0002B83C <AmiBlitz3_wizzard.ab2@15347>   OR.w D3,D1
0002B840 <AmiBlitz3_wizzard.ab2@15348> BRA.w writeword
0002B844 <AmiBlitz3_wizzard.ab2@15352>   MOVE.w #$B140,D1
0002B848 <AmiBlitz3_wizzard.ab2@15353> BRA.w JL_0_A25C
0002B84C <AmiBlitz3_wizzard.ab2@15357>   MOVE.w #$B180,D1
0002B850 <AmiBlitz3_wizzard.ab2@15358> BRA.w JL_0_A25C
0002B854 <AmiBlitz3_wizzard.ab2@15362>   MOVE.w #$E1A8,D1
0002B858 <AmiBlitz3_wizzard.ab2@15363> BRA.w JL_0_A298
0002B85C <AmiBlitz3_wizzard.ab2@15367>   MOVE.w #$E0A8,D1
0002B860 <AmiBlitz3_wizzard.ab2@15368> BRA.w JL_0_A298
0002B864 <AmiBlitz3_wizzard.ab2@15372>   MOVE.w #$E0A0,D1
0002B868 <AmiBlitz3_wizzard.ab2@15373> BRA.w JL_0_A298
0002B86A <AmiBlitz3_wizzard.ab2@15377>   MOVE.w D1,-(A7)
0002B870 <AmiBlitz3_wizzard.ab2@15378>   ADDQ.w #1,regnum
0002B872 <AmiBlitz3_wizzard.ab2@15379>   MOVE.w D2,-(A7)
0002B874 <AmiBlitz3_wizzard.ab2@15380>   MOVE.w D2,D3
0002B876 <AmiBlitz3_wizzard.ab2@15381>   MOVEQ.l #$02,D2
0002B87A <AmiBlitz3_wizzard.ab2@15386>    BSR.w writeconvertcode
0002B87C <AmiBlitz3_wizzard.ab2@15388>   MOVE.w (A7)+,D2
0002B882 <AmiBlitz3_wizzard.ab2@15389>   SUBQ.w #1,regnum
0002B886 <AmiBlitz3_wizzard.ab2@15390>   CMP.w #$4,D2
0002B88A <AmiBlitz3_wizzard.ab2@15391>    BEQ.w JL_0_A2C2
0002B88C <AmiBlitz3_wizzard.ab2@15392>   MOVE.w D2,D3
0002B88E <AmiBlitz3_wizzard.ab2@15393>   MOVEQ.l #$03,D2
0002B892 <AmiBlitz3_wizzard.ab2@15394>    BSR.w JL_0_9770
0002B894 <AmiBlitz3_wizzard.ab2@15397>    MOVE.w (A7)+,D1
0002B89A <AmiBlitz3_wizzard.ab2@15398>   MOVE.w regnum,D3
0002B89C <AmiBlitz3_wizzard.ab2@15399>   OR.w D3,D1
0002B89E <AmiBlitz3_wizzard.ab2@15400>   ADDQ.w #1,D3
0002B8A0 <AmiBlitz3_wizzard.ab2@15401>   LSL.w #8,D3
0002B8A2 <AmiBlitz3_wizzard.ab2@15402>   LSL.w #1,D3
0002B8A4 <AmiBlitz3_wizzard.ab2@15403>   OR.w D3,D1
0002B8A8 <AmiBlitz3_wizzard.ab2@15404> BRA.w writeword
0002B8AC <AmiBlitz3_wizzard.ab2@15408>   MOVE.w #$0100,D1
0002B8B0 <AmiBlitz3_wizzard.ab2@15409>    BSR.w JL_0_A31C
0002B8B6 <AmiBlitz3_wizzard.ab2@15410>   MOVE.w regnum,D1
0002B8BA <AmiBlitz3_wizzard.ab2@15411>   ORI.w #$56C0,D1
0002B8BE <AmiBlitz3_wizzard.ab2@15412>    BSR.w writeword
0002B8C4 <AmiBlitz3_wizzard.ab2@15413>   MOVE.w regnum,D1
0002B8C8 <AmiBlitz3_wizzard.ab2@15414>   ORI.w #$4880,D1
0002B8CC <AmiBlitz3_wizzard.ab2@15415>    BSR.w writeword
0002B8CE <AmiBlitz3_wizzard.ab2@15416>   MOVEQ.l #$02,D2
0002B8D0 <AmiBlitz3_wizzard.ab2@15417> RTS
0002B8D4 <AmiBlitz3_wizzard.ab2@15421>   MOVE.w #$01C0,D1
0002B8D8 <AmiBlitz3_wizzard.ab2@15424>    BSR.w JL_0_A31C
0002B8DA <AmiBlitz3_wizzard.ab2@15425>   MOVEQ.l #$03,D2
0002B8DC <AmiBlitz3_wizzard.ab2@15426> RTS
0002B8E0 <AmiBlitz3_wizzard.ab2@15430>   MOVE.w #$0180,D1
0002B8E4 <AmiBlitz3_wizzard.ab2@15431> BRA.w JL_0_A304
0002B8E8 <AmiBlitz3_wizzard.ab2@15435>   MOVE.w #$0140,D1
0002B8EC <AmiBlitz3_wizzard.ab2@15436> BRA.w JL_0_A304
0002B8EE <AmiBlitz3_wizzard.ab2@15440>   MOVE.w D1,-(A7)
0002B8F0 <AmiBlitz3_wizzard.ab2@15441>   MOVE.w D2,-(A7)
0002B8F2 <AmiBlitz3_wizzard.ab2@15442>   MOVE.w D2,D3
0002B8F4 <AmiBlitz3_wizzard.ab2@15443>   MOVEQ.l #$03,D2
0002B8F8 <AmiBlitz3_wizzard.ab2@15444>    BSR.w JL_0_9770
0002B8FA <AmiBlitz3_wizzard.ab2@15445>   MOVE.w (A7)+,D3
0002B8FC <AmiBlitz3_wizzard.ab2@15446>   MOVEQ.l #$01,D2
0002B902 <AmiBlitz3_wizzard.ab2@15447>   ADDQ.w #1,regnum
0002B906 <AmiBlitz3_wizzard.ab2@15448>    BSR.w writeconvertcode
0002B90C <AmiBlitz3_wizzard.ab2@15449>   SUBQ.w #1,regnum
0002B912 <AmiBlitz3_wizzard.ab2@15450>   MOVE.w regnum,D1
0002B914 <AmiBlitz3_wizzard.ab2@15451>   MOVE.w D1,D2
0002B916 <AmiBlitz3_wizzard.ab2@15452>   ADDQ.w #1,D2
0002B918 <AmiBlitz3_wizzard.ab2@15453>   LSL.w #8,D2
0002B91A <AmiBlitz3_wizzard.ab2@15454>   LSL.w #1,D2
0002B91C <AmiBlitz3_wizzard.ab2@15455>   OR.w (A7)+,D1
0002B91E <AmiBlitz3_wizzard.ab2@15456>   OR.w D2,D1
0002B922 <AmiBlitz3_wizzard.ab2@15457> BRA.w writeword
0002B928 <AmiBlitz3_wizzard.ab2@15461>   MOVE.w regnum,D1
0002B92C <AmiBlitz3_wizzard.ab2@15462>    BEQ.w JL_0_A36C
0002B930 <AmiBlitz3_wizzard.ab2@15463>   ORI.w #$2000,D1
0002B934 <AmiBlitz3_wizzard.ab2@15464>    BSR.w writeword
0002B938 <AmiBlitz3_wizzard.ab2@15465>   ADDI.w #$201,D1
0002B93C <AmiBlitz3_wizzard.ab2@15466>    BSR.w writeword
0002B93E <AmiBlitz3_wizzard.ab2@15469> RTS
0002B944 <AmiBlitz3_wizzard.ab2@15473>   MOVE.w regnum,D1
0002B948 <AmiBlitz3_wizzard.ab2@15474>    BEQ.w JL_0_A384
0002B94A <AmiBlitz3_wizzard.ab2@15475>   LSL.w #8,D1
0002B94C <AmiBlitz3_wizzard.ab2@15476>   LSL.w #1,D1
0002B950 <AmiBlitz3_wizzard.ab2@15477>   ORI.w #$2000,D1
0002B954 <AmiBlitz3_wizzard.ab2@15478>    BSR.w writeword
0002B956 <AmiBlitz3_wizzard.ab2@15481> RTS
0002B95C <AmiBlitz3_wizzard.ab2@15485>    CLR.b isconstantvalue
0002B962 <AmiBlitz3_wizzard.ab2@15486>    CLR.l lastconstantvalue
0002B96A <AmiBlitz3_wizzard.ab2@15487>    CMPI.w #$7,regnum
0002B96E <AmiBlitz3_wizzard.ab2@15488>    BCS.w JL_0_A6B4
0002B974 <AmiBlitz3_wizzard.ab2@15489>   MOVE.l #$f2277700,d1                                     ;fmove.d fp6,-(a7)
0002B978 <AmiBlitz3_wizzard.ab2@15490>   BSR writelong
0002B97C <AmiBlitz3_wizzard.ab2@15491>   MOVE.w #$2F06,D1                                         ;d6 to stack
0002B980 <AmiBlitz3_wizzard.ab2@15493>   CMP.w #$3,D2
0002B984 <AmiBlitz3_wizzard.ab2@15494>    BCS.w JL_0_A3A2
0002B988 <AmiBlitz3_wizzard.ab2@15495>   MOVE.w #$2F06,D1
0002B98C <AmiBlitz3_wizzard.ab2@15498>   BSR.w writeword
0002B98E <AmiBlitz3_wizzard.ab2@15499>   MOVE.w D1,-(A7)
0002B994 <AmiBlitz3_wizzard.ab2@15500>   SUBQ.w #1,regnum
0002B998 <AmiBlitz3_wizzard.ab2@15501>    BSR.w JL_0_A6B4
0002B99E <AmiBlitz3_wizzard.ab2@15502>   ADDQ.w #1,regnum
0002B9A4 <AmiBlitz3_wizzard.ab2@15503>   MOVE.l #$f2001b80,d1
0002B9A8 <AmiBlitz3_wizzard.ab2@15504>   BSR writelong
0002B9AC <AmiBlitz3_wizzard.ab2@15505>   MOVE.w #$3E06,D1
0002B9B0 <AmiBlitz3_wizzard.ab2@15506>   CMP.w #$3,D2
0002B9B4 <AmiBlitz3_wizzard.ab2@15507>    BCS.w JL_0_A3C8
0002B9B8 <AmiBlitz3_wizzard.ab2@15508>   MOVE.w #$2E06,D1
0002B9BC <AmiBlitz3_wizzard.ab2@15511>   BSR.w writeword
0002B9BE <AmiBlitz3_wizzard.ab2@15512>   MOVE.w (A7)+,D1
0002B9C2 <AmiBlitz3_wizzard.ab2@15513>   ANDI.w #$F000,D1
0002B9C6 <AmiBlitz3_wizzard.ab2@15514>   ORI.w #$C1F,D1
0002B9CC <AmiBlitz3_wizzard.ab2@15515>   JSR writeword
0002B9D2 <AmiBlitz3_wizzard.ab2@15516>   MOVE.l #$f21f5700,d1                                     ;fmove.d (a7)+,fp6
0002B9D6 <AmiBlitz3_wizzard.ab2@15517> BRA writelong
0002B9DA <AmiBlitz3_wizzard.ab2@15521>   BSR.w JL_0_A6B4
0002B9DE <AmiBlitz3_wizzard.ab2@15522>   MOVE.w #$4440,D1
0002B9E2 <AmiBlitz3_wizzard.ab2@15523>   CMP.w #$3,D2
0002B9E6 <AmiBlitz3_wizzard.ab2@15524>    BCS.w JL_0_A406
0002B9EA <AmiBlitz3_wizzard.ab2@15525>   MOVE.w #$4480,D1
0002B9EE <AmiBlitz3_wizzard.ab2@15526>   CMP.w #$5,D2
0002B9F2 <AmiBlitz3_wizzard.ab2@15527>    BCS.w JL_0_A406
0002B9F6 <AmiBlitz3_wizzard.ab2@15528>   CMP.w #$6,D2
0002B9FA <AmiBlitz3_wizzard.ab2@15529>    BCC.w illoperr
0002B9FE <AmiBlitz3_wizzard.ab2@15530>   MOVE.w #$FFC4,D1
0002BA02 <AmiBlitz3_wizzard.ab2@15531> BRA.w JL_0_9604
0002BA08 <AmiBlitz3_wizzard.ab2@15534>   OR.w regnum,D1                                           ;negate
0002BA0E <AmiBlitz3_wizzard.ab2@15535>   CLR.l imm_addr
0002BA12 <AmiBlitz3_wizzard.ab2@15536> BRA.w writeword
0002BA16 <AmiBlitz3_wizzard.ab2@15540>    BSR.w eval4
0002BA1A <AmiBlitz3_wizzard.ab2@15541>   CMP.w #")",D0
0002BA1E <AmiBlitz3_wizzard.ab2@15542>    BEQ.w JL_0_A424
0002BA22 <AmiBlitz3_wizzard.ab2@15543>   CMP.w #"}",D0
0002BA26 <AmiBlitz3_wizzard.ab2@15544>    BNE.w brackets_                                         ;syntax error brackets
0002BA2A <AmiBlitz3_wizzard.ab2@15547> BRA.w get1bytemain
0002BA2E <AmiBlitz3_wizzard.ab2@15551>    BSR.w eval4
0002BA32 <AmiBlitz3_wizzard.ab2@15552>   CMP.w #$5,D2
0002BA36 <AmiBlitz3_wizzard.ab2@15553>    BCC.w illoperr
0002BA3C <AmiBlitz3_wizzard.ab2@15554>   MOVE.w regnum,D1
0002BA40 <AmiBlitz3_wizzard.ab2@15555>   ORI.w #$4640,D1
0002BA44 <AmiBlitz3_wizzard.ab2@15556>   CMP.w #$3,D2
0002BA48 <AmiBlitz3_wizzard.ab2@15557>    BCS.w writeword
0002BA4C <AmiBlitz3_wizzard.ab2@15558>   EORI.w #$C0,D1
0002BA50 <AmiBlitz3_wizzard.ab2@15559> BRA.w writeword
0002BA52 <AmiBlitz3_wizzard.ab2@15563>   MOVEQ.l #$05,D2                                          ;fpu pi
0002BA58 <AmiBlitz3_wizzard.ab2@15564>    TST.b fpu
0002BA5C <AmiBlitz3_wizzard.ab2@15565>   BEQ 'old
0002BA62 <AmiBlitz3_wizzard.ab2@15566> JMP fpupi
0002BA68 <AmiBlitz3_wizzard.ab2@15569>   MOVE.w regnum,D1
0002BA6A <AmiBlitz3_wizzard.ab2@15570>   LSL.w #8,D1
0002BA6C <AmiBlitz3_wizzard.ab2@15571>   LSL.w #1,D1
0002BA70 <AmiBlitz3_wizzard.ab2@15572>   ORI.w #$203C,D1
0002BA74 <AmiBlitz3_wizzard.ab2@15573>    BSR.w writeword
0002BA7A <AmiBlitz3_wizzard.ab2@15574>   MOVE.l #$C90FDA42,D1
0002BA7E <AmiBlitz3_wizzard.ab2@15575>    BSR.w writelong
0002BA82 <AmiBlitz3_wizzard.ab2@15576> BRA.w get1bytemain
0002BB7E <AmiBlitz3_wizzard.ab2@15584> forthstack:  Ds.l 63                                       ;ds.b  18*32 org source
0002BC7A <AmiBlitz3_wizzard.ab2@15585>              Ds.l 63
0002BCC2 <AmiBlitz3_wizzard.ab2@15586>              Ds.l 18
0002BCC6 <AmiBlitz3_wizzard.ab2@15587> forthsp:     Dc.l forthstack
0002BCF2 <AmiBlitz3_wizzard.ab2@15592>    !fget
0002BCF6 <AmiBlitz3_wizzard.ab2@15593>    CMP.b #$7e,d0
0002BCFA <AmiBlitz3_wizzard.ab2@15594>    BNE 'noc
0002BCFC <AmiBlitz3_wizzard.ab2@15595>    SUBQ.l #1,a5
0002BD00 <AmiBlitz3_wizzard.ab2@15596>    BSR get1bytemain
0002BD04 <AmiBlitz3_wizzard.ab2@15599>    CMP.b #"#",d0
0002BD08 <AmiBlitz3_wizzard.ab2@15600>    BNE 'ld1
0002BD0C <AmiBlitz3_wizzard.ab2@15601>    CMP.b #$22,(a5)
0002BD10 <AmiBlitz3_wizzard.ab2@15602>    BNE 'ld1
0002BD16 <AmiBlitz3_wizzard.ab2@15603>    JSR addimmi
0002BD1A <AmiBlitz3_wizzard.ab2@15606>    CMP.b #$22,d0
0002BD1E <AmiBlitz3_wizzard.ab2@15607>    BNE 'l11
0002BD24 <AmiBlitz3_wizzard.ab2@15617>    NOT.w instringon
0002BD26 <AmiBlitz3_wizzard.ab2@15620>    TST.b d0
0002BD2A <AmiBlitz3_wizzard.ab2@15621>    BPL 'l10
0002BD2C <AmiBlitz3_wizzard.ab2@15622>    LSL.w #8,d0
0002BD2E <AmiBlitz3_wizzard.ab2@15623>    MOVE.b (a5)+,d0                      ; get blitz instruction with returnvalue
0002BD34 <AmiBlitz3_wizzard.ab2@15624>    MOVE.l d0,lasttoken
0002BD3A <AmiBlitz3_wizzard.ab2@15625>    MOVE.w d0,lastchar
0002BD40 <AmiBlitz3_wizzard.ab2@15626>    CLR.l rightsidetype                  ; blitzlibs do currently no type check
0002BD44 <AmiBlitz3_wizzard.ab2@15628>   CMP.w #"(",D0
0002BD48 <AmiBlitz3_wizzard.ab2@15629>    BEQ.w checkcast2
0002BD4C <AmiBlitz3_wizzard.ab2@15630> nocast CMP.w #"{",D0
0002BD50 <AmiBlitz3_wizzard.ab2@15631>    BEQ.w JL_0_A410
0002BD54 <AmiBlitz3_wizzard.ab2@15632>   CMP.w #$2D,D0
0002BD58 <AmiBlitz3_wizzard.ab2@15633>    BEQ.w JL_0_A3DA
0002BD5C <AmiBlitz3_wizzard.ab2@15634>   CMP.w #-$7F77,D0
0002BD60 <AmiBlitz3_wizzard.ab2@15635>    BEQ.w JL_0_A428
0002BD64 <AmiBlitz3_wizzard.ab2@15636>   MOVEA.l forthsp(PC),A1
0002BD6A <AmiBlitz3_wizzard.ab2@15637>   CMPA.l #forthsp,A1
0002BD6E <AmiBlitz3_wizzard.ab2@15638>    BCC.w conmemerr
0002BD74 <AmiBlitz3_wizzard.ab2@15639>   MOVE.l destpointer,(A1)+
0002BD7A <AmiBlitz3_wizzard.ab2@15640>   MOVE.l hunkoffsetbase,(A1)+
0002BD80 <AmiBlitz3_wizzard.ab2@15641>   MOVE.l lasta6,(A1)+
0002BD86 <AmiBlitz3_wizzard.ab2@15642>   MOVE.w lasta6,(A1)+
0002BD88 <AmiBlitz3_wizzard.ab2@15643>   CLR.w (A1)+
0002BD8A <AmiBlitz3_wizzard.ab2@15644>   CLR.w (A1)+
0002BD90 <AmiBlitz3_wizzard.ab2@15645>   MOVE.l A1,forthsp
0002BDA2 <AmiBlitz3_wizzard.ab2@15647>    !compare2
0002BDA6 <AmiBlitz3_wizzard.ab2@15648>    BEQ.w JL_0_B224
0002BDAA <AmiBlitz3_wizzard.ab2@15649>   CMP.w #".",D0
0002BDAE <AmiBlitz3_wizzard.ab2@15650>    BEQ.w JL_0_B21E
0002BDB2 <AmiBlitz3_wizzard.ab2@15651>   CMP.w #"#",D0
0002BDB6 <AmiBlitz3_wizzard.ab2@15652>    BEQ.w get_constant
0002BDBA <AmiBlitz3_wizzard.ab2@15653>   CMP.w #"$",D0
0002BDBE <AmiBlitz3_wizzard.ab2@15654>    BEQ.w get_hexconstant
0002BDC2 <AmiBlitz3_wizzard.ab2@15655>   CMP.w #"%",D0
0002BDC6 <AmiBlitz3_wizzard.ab2@15656>    BEQ.w JL_0_A8C0
0002BDCA <AmiBlitz3_wizzard.ab2@15657>   CMP.w #-$7FD1,D0
0002BDCE <AmiBlitz3_wizzard.ab2@15658>    BEQ.w _SizeOf
0002BDD2 <AmiBlitz3_wizzard.ab2@15659>   CMP.w #-$7F46,D0
0002BDD6 <AmiBlitz3_wizzard.ab2@15660>    BEQ.w JL_0_A44E
0002BDDA <AmiBlitz3_wizzard.ab2@15661>   CMP.w #-$7F3B,D0
0002BDDE <AmiBlitz3_wizzard.ab2@15662>    BEQ.w JL_0_A83C
0002BDE2 <AmiBlitz3_wizzard.ab2@15663>   CMP.w #-$7F3A,D0
0002BDE6 <AmiBlitz3_wizzard.ab2@15664>    BEQ.w JL_0_A846
0002BDEC <AmiBlitz3_wizzard.ab2@15665>   MOVE.w constmode,D1
0002BDF0 <AmiBlitz3_wizzard.ab2@15666>    BEQ.w JL_0_A776
0002BE12 <AmiBlitz3_wizzard.ab2@15667>    !compare1                                               ;bsr.w tstalpha
0002BE16 <AmiBlitz3_wizzard.ab2@15668>    BEQ.w JL_0_AF22
0002BE1A <AmiBlitz3_wizzard.ab2@15669>   CMP.w #$5F,D0
0002BE1E <AmiBlitz3_wizzard.ab2@15670>    BEQ.w JL_0_AF22
0002BE22 <AmiBlitz3_wizzard.ab2@15671>   CMP.w #$22,D0
0002BE26 <AmiBlitz3_wizzard.ab2@15672>    BEQ.w JL_0_AF00
0002BE2A <AmiBlitz3_wizzard.ab2@15673> BRA.w syntaxerr
0002BE30 <AmiBlitz3_wizzard.ab2@15675> checkcast2 JMP checkcast
0002BE36 <AmiBlitz3_wizzard.ab2@15678>   MOVE.w cfetchmode,D1
0002BE3A <AmiBlitz3_wizzard.ab2@15679>   BEQ.w JL_0_A784
0002BE3E <AmiBlitz3_wizzard.ab2@15680> BRA.w badconerr
0002BE44 <AmiBlitz3_wizzard.ab2@15683> JMP syntaxerropt4
0002BE46 <AmiBlitz3_wizzard.ab2@15687>   NOT.w -(A1)
0002BE68 <AmiBlitz3_wizzard.ab2@15688>   !compare1                                                ;bsr.w tstalpha
0002BE6C <AmiBlitz3_wizzard.ab2@15689>    BEQ.w JL_0_AF4C
0002BE70 <AmiBlitz3_wizzard.ab2@15690>   CMP.w #$2A,D0
0002BE74 <AmiBlitz3_wizzard.ab2@15691>    BEQ.w JL_0_AF4C
0002BE78 <AmiBlitz3_wizzard.ab2@15692>   CMP.w #$5C,D0
0002BE7C <AmiBlitz3_wizzard.ab2@15693>    BEQ.w JL_0_AF4C
0002BE80 <AmiBlitz3_wizzard.ab2@15694>   CMP.w #$22,D0
0002BE84 <AmiBlitz3_wizzard.ab2@15695>    BEQ.w JL_0_ADC0
0002BE88 <AmiBlitz3_wizzard.ab2@15696>   BTST #$F,D0
0002BE8C <AmiBlitz3_wizzard.ab2@15697>    BNE.w JL_0_AAF2
0002BE90 <AmiBlitz3_wizzard.ab2@15698>   CMP.w #"&",D0
0002BE94 <AmiBlitz3_wizzard.ab2@15699>    BEQ.w getvaraddr                                          ;jump to & address of var code
0002BE98 <AmiBlitz3_wizzard.ab2@15700>   CMP.w #"?",D0
0002BE9C <AmiBlitz3_wizzard.ab2@15701>    BEQ.w JL_0_AED4
0002BEA0 <AmiBlitz3_wizzard.ab2@15704>   CMP.b #"@",d0
0002BEA4 <AmiBlitz3_wizzard.ab2@15705>    BNE syntaxerr
0002BEAA <AmiBlitz3_wizzard.ab2@15706>   TST.b newsyntax
0002BEAE <AmiBlitz3_wizzard.ab2@15707>    BEQ JUMP_syntaxerropt4
0002BEB4 <AmiBlitz3_wizzard.ab2@15708>   MOVE.w regnum,D1
0002BEB6 <AmiBlitz3_wizzard.ab2@15709>   LSL.w #8,D1
0002BEB8 <AmiBlitz3_wizzard.ab2@15710>   LSL.w #1,D1
0002BEBC <AmiBlitz3_wizzard.ab2@15711>   ORI.w #$203C,D1
0002BEC0 <AmiBlitz3_wizzard.ab2@15712>   BSR.w writeword
0002BEC4 <AmiBlitz3_wizzard.ab2@15713>   CMP.b #$22,(a5)
0002BEC8 <AmiBlitz3_wizzard.ab2@15714>    BNE syntaxerr
0002BECA <AmiBlitz3_wizzard.ab2@15715>   ADDQ #1,a5
0002BECC <AmiBlitz3_wizzard.ab2@15716>   MOVEQ #0,d0
0002BED0 <AmiBlitz3_wizzard.ab2@15717>   CMP.b #1,d2
0002BED4 <AmiBlitz3_wizzard.ab2@15718>    BEQ 'l3b
0002BED8 <AmiBlitz3_wizzard.ab2@15719>   CMP.b #2,d2
0002BEDC <AmiBlitz3_wizzard.ab2@15720>    BEQ 'l2b
0002BEE0 <AmiBlitz3_wizzard.ab2@15721>   CMP.b #4,d2
0002BEE4 <AmiBlitz3_wizzard.ab2@15722>    BEQ error_convert_types
0002BEE6 <AmiBlitz3_wizzard.ab2@15723>   MOVE.b (a5)+,d0
0002BEEA <AmiBlitz3_wizzard.ab2@15724>   BEQ syntaxerr
0002BEEE <AmiBlitz3_wizzard.ab2@15725>   CMP.b #$22,d0
0002BEF2 <AmiBlitz3_wizzard.ab2@15726>   BNE 'l1
0002BEF6 <AmiBlitz3_wizzard.ab2@15727>     MOVE.b #0,d0
0002BEFA <AmiBlitz3_wizzard.ab2@15728> BRA 'do
0002BEFC <AmiBlitz3_wizzard.ab2@15731>   ASL.l #8,d0
0002BEFE <AmiBlitz3_wizzard.ab2@15732>   MOVE.b (a5)+,d0
0002BF02 <AmiBlitz3_wizzard.ab2@15733>   BEQ syntaxerr
0002BF06 <AmiBlitz3_wizzard.ab2@15734>   CMP.b #$22,d0
0002BF0A <AmiBlitz3_wizzard.ab2@15735>   BNE 'l2
0002BF0E <AmiBlitz3_wizzard.ab2@15736>     MOVE.b #0,d0
0002BF10 <AmiBlitz3_wizzard.ab2@15737>     ASR.l #8,d0
0002BF14 <AmiBlitz3_wizzard.ab2@15738> BRA 'do
0002BF16 <AmiBlitz3_wizzard.ab2@15741>   ASL.l #8,d0
0002BF18 <AmiBlitz3_wizzard.ab2@15744>   MOVE.b (a5)+,d0
0002BF1C <AmiBlitz3_wizzard.ab2@15745>    BEQ syntaxerr
0002BF20 <AmiBlitz3_wizzard.ab2@15746>    CMP.b #$22,d0
0002BF24 <AmiBlitz3_wizzard.ab2@15747>    BNE 'l3
0002BF28 <AmiBlitz3_wizzard.ab2@15748>    MOVE.b #0,d0
0002BF2A <AmiBlitz3_wizzard.ab2@15749>    ASR.l #8,d0
0002BF2E <AmiBlitz3_wizzard.ab2@15750> BRA 'do
0002BF30 <AmiBlitz3_wizzard.ab2@15753>   ASL.l #8,d0
0002BF32 <AmiBlitz3_wizzard.ab2@15756>   MOVE.b (a5)+,d0
0002BF36 <AmiBlitz3_wizzard.ab2@15757>    BEQ syntaxerr
0002BF3A <AmiBlitz3_wizzard.ab2@15758>    CMP.b #$22,d0
0002BF3E <AmiBlitz3_wizzard.ab2@15759>    BNE 'l4
0002BF42 <AmiBlitz3_wizzard.ab2@15760>    MOVE.b #0,d0
0002BF44 <AmiBlitz3_wizzard.ab2@15761>    ASR.l #8,d0
0002BF48 <AmiBlitz3_wizzard.ab2@15762> BRA 'do
0002BF4C <AmiBlitz3_wizzard.ab2@15765>    CMP.b #$22,(a5)+
0002BF50 <AmiBlitz3_wizzard.ab2@15766>    BNE JUMP_error4char
0002BF52 <AmiBlitz3_wizzard.ab2@15769>   MOVE.l d0,d1
0002BF56 <AmiBlitz3_wizzard.ab2@15770>     BSR writelong
0002BF5A <AmiBlitz3_wizzard.ab2@15771>     BSR get1bytemain
0002BF5C <AmiBlitz3_wizzard.ab2@15772> RTS
0002BF60 <AmiBlitz3_wizzard.ab2@15776>   BSR.w get1bytemain
0002BF64 <AmiBlitz3_wizzard.ab2@15777>   CMP.w #$2E,D0
0002BF68 <AmiBlitz3_wizzard.ab2@15778>    BEQ.b JL_0_A7F4
0002BF72 <AmiBlitz3_wizzard.ab2@15780>   MOVE.w oldqflag,instringon
0002BF78 <AmiBlitz3_wizzard.ab2@15781>   MOVEA.l lastsourcepos,A5
0002BF7A <AmiBlitz3_wizzard.ab2@15782>   MOVE.w D2,-(A7)
0002BF7E <AmiBlitz3_wizzard.ab2@15783>    BSR.w getparameter2
0002BF82 <AmiBlitz3_wizzard.ab2@15784>    BEQ.w syntaxerr
0002BF88 <AmiBlitz3_wizzard.ab2@15785>   LEA varbase,A2
0002BF8C <AmiBlitz3_wizzard.ab2@15786>    BSR.w findvariable
0002BF90 <AmiBlitz3_wizzard.ab2@15787>    BNE.w notypeerr
0002BF94 <AmiBlitz3_wizzard.ab2@15788>   MOVE.w $4(A2),D3
0002BF96 <AmiBlitz3_wizzard.ab2@15789>   EXT.l D3
0002BF98 <AmiBlitz3_wizzard.ab2@15790>   MOVE.w (A7)+,D2
0002BF9C <AmiBlitz3_wizzard.ab2@15791> BRA.w JL_0_B46E
0002BF9E <AmiBlitz3_wizzard.ab2@15795>   MOVE.w D2,-(A7)
0002BFA2 <AmiBlitz3_wizzard.ab2@15796>    BSR.w getparameter2
0002BFA6 <AmiBlitz3_wizzard.ab2@15797>    BEQ.w syntaxerr
0002BFAC <AmiBlitz3_wizzard.ab2@15798>   LEA newtypebase,A2
0002BFB0 <AmiBlitz3_wizzard.ab2@15799>    BSR.w findtype
0002BFB4 <AmiBlitz3_wizzard.ab2@15800>    BNE.w notypeerr
0002BFB6 <AmiBlitz3_wizzard.ab2@15801>   MOVEQ.l #$00,D3
0002BFBA <AmiBlitz3_wizzard.ab2@15802>   CMP.w #$5C,D0
0002BFBE <AmiBlitz3_wizzard.ab2@15803>    BNE.w JL_0_A832
0002BFC2 <AmiBlitz3_wizzard.ab2@15804>    BSR.w getparameter2
0002BFC6 <AmiBlitz3_wizzard.ab2@15805>    BEQ.w syntaxerr
0002BFCA <AmiBlitz3_wizzard.ab2@15806>   LEA $4(A2),A2
0002BFCE <AmiBlitz3_wizzard.ab2@15807>    BSR.w findvariable2
0002BFD2 <AmiBlitz3_wizzard.ab2@15808>    BNE.w noofferr
0002BFD6 <AmiBlitz3_wizzard.ab2@15809>   MOVE.w $4(A2),D3
0002BFDA <AmiBlitz3_wizzard.ab2@15810> BRA.w JL_0_A836
0002BFDE <AmiBlitz3_wizzard.ab2@15814>   MOVE.w $8(A2),D3
0002BFE0 <AmiBlitz3_wizzard.ab2@15817>   MOVE.w (A7)+,D2
0002BFE4 <AmiBlitz3_wizzard.ab2@15818> BRA.w JL_0_B46E
0002BFE6 <AmiBlitz3_wizzard.ab2@15822>   MOVEQ.l #-$01,D3
0002BFEA <AmiBlitz3_wizzard.ab2@15823>    BSR.w get1bytemain
0002BFEE <AmiBlitz3_wizzard.ab2@15824> BRA.w JL_0_B46E
0002BFF0 <AmiBlitz3_wizzard.ab2@15828>   MOVEQ.l #$00,D3
0002BFF4 <AmiBlitz3_wizzard.ab2@15829>    BSR.w get1bytemain
0002BFF8 <AmiBlitz3_wizzard.ab2@15830> BRA.w JL_0_B46E
0002BFFC <AmiBlitz3_wizzard.ab2@15834>   CMP.w #$30,D0
0002C000 <AmiBlitz3_wizzard.ab2@15835>    BCS.w JL_0_A876
0002C004 <AmiBlitz3_wizzard.ab2@15836>   CMP.w #$39,D0
0002C008 <AmiBlitz3_wizzard.ab2@15837>    BLS.w JL_0_A874
0002C00C <AmiBlitz3_wizzard.ab2@15838>   ANDI.w #$FFDF,D0
0002C010 <AmiBlitz3_wizzard.ab2@15839>   CMP.w #$46,D0
0002C014 <AmiBlitz3_wizzard.ab2@15840>    BHI.w JL_0_A876
0002C018 <AmiBlitz3_wizzard.ab2@15841>   CMP.w #$41,D0
0002C01C <AmiBlitz3_wizzard.ab2@15842>    BCS.w JL_0_A876
0002C01E <AmiBlitz3_wizzard.ab2@15845>    CMP.w D0,D0
0002C020 <AmiBlitz3_wizzard.ab2@15848> RTS
0002C024 <AmiBlitz3_wizzard.ab2@15852>   CMP.w #$31,D0
0002C028 <AmiBlitz3_wizzard.ab2@15853>    BEQ.w JL_0_A884
0002C02C <AmiBlitz3_wizzard.ab2@15854>   CMP.w #$30,D0
0002C02E <AmiBlitz3_wizzard.ab2@15857> RTS
0002C030 <AmiBlitz3_wizzard.ab2@15861>    MOVEQ #0,d0
0002C032 <AmiBlitz3_wizzard.ab2@15862>    MOVE.b (a5)+,d0
0002C034 <AmiBlitz3_wizzard.ab2@15863>    MOVE.b (a5)+,d0
0002C038 <AmiBlitz3_wizzard.ab2@15864>    BSR ishex
0002C03C <AmiBlitz3_wizzard.ab2@15865>    BNE syntaxerr
0002C040 <AmiBlitz3_wizzard.ab2@15866>    SUBI.w #$30,D0
0002C044 <AmiBlitz3_wizzard.ab2@15867>    CMP.w #$9,D0
0002C048 <AmiBlitz3_wizzard.ab2@15868>    BLS.w 'l1
0002C04A <AmiBlitz3_wizzard.ab2@15869>    SUBQ.w #7,D0
0002C04C <AmiBlitz3_wizzard.ab2@15872>    MOVE.l d0,d1
0002C04E <AmiBlitz3_wizzard.ab2@15873>    MOVE.b (a5)+,d0
0002C052 <AmiBlitz3_wizzard.ab2@15874>      BSR ishex
0002C056 <AmiBlitz3_wizzard.ab2@15875>     BNE syntaxerr
0002C058 <AmiBlitz3_wizzard.ab2@15876>     LSL.l #4,d1
0002C05C <AmiBlitz3_wizzard.ab2@15877>     SUBI.w #$30,D0
0002C060 <AmiBlitz3_wizzard.ab2@15878>    CMP.w #$9,D0
0002C064 <AmiBlitz3_wizzard.ab2@15879>    BLS.w 'l2
0002C066 <AmiBlitz3_wizzard.ab2@15880>    SUBQ.w #7,D0
0002C068 <AmiBlitz3_wizzard.ab2@15883>   ADD.l d1,d0
0002C06A <AmiBlitz3_wizzard.ab2@15884> RTS
0002C06E <AmiBlitz3_wizzard.ab2@15888>    BSR.w get1bytemain
0002C072 <AmiBlitz3_wizzard.ab2@15889>    BSR.w ishex
0002C076 <AmiBlitz3_wizzard.ab2@15890>    BNE.w syntaxerr
0002C078 <AmiBlitz3_wizzard.ab2@15891>   MOVEQ.l #$00,D3
0002C07C <AmiBlitz3_wizzard.ab2@15892>   CMP.w #5,d2
0002C080 <AmiBlitz3_wizzard.ab2@15893>   BNE JL_0_A894
0002C086 <AmiBlitz3_wizzard.ab2@15894>   CMP.l #newtype_double,a2
0002C08A <AmiBlitz3_wizzard.ab2@15895>   BEQ 'doit
0002C090 <AmiBlitz3_wizzard.ab2@15896>   CMP.l #newtype_float,a2
0002C094 <AmiBlitz3_wizzard.ab2@15897>   BNE JL_0_A894
0002C09C <AmiBlitz3_wizzard.ab2@15900>    fmove.s #0,fp0
0002C0A2 <AmiBlitz3_wizzard.ab2@15902>   TST.b fpu
0002C0A6 <AmiBlitz3_wizzard.ab2@15903>   BEQ JL_0_A894
0002C0AC <AmiBlitz3_wizzard.ab2@15904>   fmove.w #16,fp1
0002C0B0 <AmiBlitz3_wizzard.ab2@15905>   fmul.x fp1,fp0
0002C0B4 <AmiBlitz3_wizzard.ab2@15906>   SUBI.w #$30,D0
0002C0B8 <AmiBlitz3_wizzard.ab2@15907>   CMP.w #$9,D0
0002C0BC <AmiBlitz3_wizzard.ab2@15908>    BLS.w JL_0_A8AEa
0002C0BE <AmiBlitz3_wizzard.ab2@15909>   SUBQ.w #7,D0
0002C0C2 <AmiBlitz3_wizzard.ab2@15912>    fmove.w d0,fp1
0002C0C6 <AmiBlitz3_wizzard.ab2@15913>    fadd.x fp1,fp0
0002C0CA <AmiBlitz3_wizzard.ab2@15914>    BSR.w get1bytemain
0002C0CE <AmiBlitz3_wizzard.ab2@15915>    BSR.w ishex
0002C0D2 <AmiBlitz3_wizzard.ab2@15916>    BEQ.w JL_0_A894a
0002C0D6 <AmiBlitz3_wizzard.ab2@15917> BRA.w nofpregload
0002C0DC <AmiBlitz3_wizzard.ab2@15921>   CMP.l #$10000000,D3
0002C0E0 <AmiBlitz3_wizzard.ab2@15922>    BCC.w overerr
0002C0E2 <AmiBlitz3_wizzard.ab2@15923>   LSL.l #4,D3
0002C0E6 <AmiBlitz3_wizzard.ab2@15924>   SUBI.w #$30,D0
0002C0EA <AmiBlitz3_wizzard.ab2@15925>   CMP.w #$9,D0
0002C0EE <AmiBlitz3_wizzard.ab2@15926>    BLS.w JL_0_A8AE
0002C0F0 <AmiBlitz3_wizzard.ab2@15927>   SUBQ.w #7,D0
0002C0F2 <AmiBlitz3_wizzard.ab2@15930>   OR.w D0,D3
0002C0F6 <AmiBlitz3_wizzard.ab2@15931>    BSR.w get1bytemain
0002C0FA <AmiBlitz3_wizzard.ab2@15932>    BSR.w ishex
0002C0FE <AmiBlitz3_wizzard.ab2@15933>    BEQ.w JL_0_A894
0002C102 <AmiBlitz3_wizzard.ab2@15934> BRA.w JL_0_B46E
0002C106 <AmiBlitz3_wizzard.ab2@15938>    BSR.w get1bytemain
0002C10A <AmiBlitz3_wizzard.ab2@15939>    BSR.w JL_0_A878
0002C10E <AmiBlitz3_wizzard.ab2@15940>    BNE.w syntaxerr
0002C110 <AmiBlitz3_wizzard.ab2@15941>    MOVEQ.l #$00,D3
0002C112 <AmiBlitz3_wizzard.ab2@15944>    LSL.l #1,D3
0002C116 <AmiBlitz3_wizzard.ab2@15945>    BCS.w overerr
0002C11A <AmiBlitz3_wizzard.ab2@15946>   SUBI.w #$30,D0
0002C11C <AmiBlitz3_wizzard.ab2@15947>   OR.w D0,D3
0002C120 <AmiBlitz3_wizzard.ab2@15948>    BSR.w get1bytemain
0002C124 <AmiBlitz3_wizzard.ab2@15949>    BSR.w JL_0_A878
0002C128 <AmiBlitz3_wizzard.ab2@15950>    BEQ.w JL_0_A8CE
0002C12C <AmiBlitz3_wizzard.ab2@15951> BRA.w JL_0_B46E
0002C12E <AmiBlitz3_wizzard.ab2@15955>    MOVE.w d2,-(A7)
0002C136 <AmiBlitz3_wizzard.ab2@15956>    MOVE.b #0,automode
0002C13A <AmiBlitz3_wizzard.ab2@15957>    CMP.b #"@",(a5)
0002C13E <AmiBlitz3_wizzard.ab2@15958>    BNE 'l1
0002C140 <AmiBlitz3_wizzard.ab2@15959>    ADDQ.l #1,a5
0002C148 <AmiBlitz3_wizzard.ab2@15960>    MOVE.b #1,automode
0002C14C <AmiBlitz3_wizzard.ab2@15961>    BSR getparameter2
0002C150 <AmiBlitz3_wizzard.ab2@15962>    BSR findlabel2
0002C154 <AmiBlitz3_wizzard.ab2@15963>    BNE 'addit
0002C158 <AmiBlitz3_wizzard.ab2@15964> BRA errormsg_autocount
0002C15C <AmiBlitz3_wizzard.ab2@15967>   BSR.w addlabelhash
0002C164 <AmiBlitz3_wizzard.ab2@15968>   MOVE.l #$1,$4(A2)
0002C168 <AmiBlitz3_wizzard.ab2@15969>   MOVEM.l a2/a5,-(a7)
0002C16E <AmiBlitz3_wizzard.ab2@15970>   MOVE.w lastchar,-(a7)
0002C174 <AmiBlitz3_wizzard.ab2@15971>   LEA autostorename,a5
0002C178 <AmiBlitz3_wizzard.ab2@15972>   BSR getparameter2
0002C17C <AmiBlitz3_wizzard.ab2@15973>   BSR findlabel2
0002C180 <AmiBlitz3_wizzard.ab2@15974>   BEQ 'found
0002C184 <AmiBlitz3_wizzard.ab2@15975>   BSR.w addlabelhash
0002C18C <AmiBlitz3_wizzard.ab2@15976>   MOVE.l #$1,$4(A2)
0002C194 <AmiBlitz3_wizzard.ab2@15977>   MOVE.l #0,8(a2)
0002C196 <AmiBlitz3_wizzard.ab2@15980>    MOVE.w (a7)+,d0
0002C19C <AmiBlitz3_wizzard.ab2@15981>    MOVE.w d0,lastchar
0002C1A0 <AmiBlitz3_wizzard.ab2@15982>   MOVE.l 8(a2),d3
0002C1A8 <AmiBlitz3_wizzard.ab2@15983>   ADD.l #1,8(a2)
0002C1AC <AmiBlitz3_wizzard.ab2@15984>   MOVEM.l (a7)+,a2/a5
0002C1B0 <AmiBlitz3_wizzard.ab2@15985>   MOVE.l d3,8(a2)
0002C1B4 <AmiBlitz3_wizzard.ab2@15986>   MOVE.l $8(A2),D3
0002C1B8 <AmiBlitz3_wizzard.ab2@15987> BRA.l 'l3
0002C1BC <AmiBlitz3_wizzard.ab2@15990>   BSR.w getparameter2
0002C1C2 <AmiBlitz3_wizzard.ab2@15991>     TST.b incnif
0002C1C6 <AmiBlitz3_wizzard.ab2@15992>     BEQ 'lc1
0002C1CA <AmiBlitz3_wizzard.ab2@15993>     BSR.w findlabel2
0002C1CE <AmiBlitz3_wizzard.ab2@15994>     BNE 'l5
0002C1D0 <AmiBlitz3_wizzard.ab2@15995>     MOVEQ #1,d3
0002C1D2 <AmiBlitz3_wizzard.ab2@15996>     MOVE.w (A7)+,D2
0002C1D6 <AmiBlitz3_wizzard.ab2@15997> BRA JL_0_B46E
0002C1D8 <AmiBlitz3_wizzard.ab2@16000>   MOVEQ #0,d3
0002C1DA <AmiBlitz3_wizzard.ab2@16001>     MOVE.w (A7)+,D2
0002C1DE <AmiBlitz3_wizzard.ab2@16002> BRA JL_0_B46E
0002C1E2 <AmiBlitz3_wizzard.ab2@16005>    BSR.w findlabel2
0002C1E6 <AmiBlitz3_wizzard.ab2@16006>    BNE.w cnferr
0002C1EE <AmiBlitz3_wizzard.ab2@16009>    CMPI.l #$1,$4(A2)
0002C1F2 <AmiBlitz3_wizzard.ab2@16010>    BNE.w cnferr
0002C1F6 <AmiBlitz3_wizzard.ab2@16012>    MOVE.l $8(A2),D3
0002C1F8 <AmiBlitz3_wizzard.ab2@16013>    MOVE.w (A7)+,D2
0002C1FC <AmiBlitz3_wizzard.ab2@16014> BRA.w JL_0_B46E
0002C202 <AmiBlitz3_wizzard.ab2@16018>   CLR.w vartype
0002C20A <AmiBlitz3_wizzard.ab2@16019>   MOVE.b #3,peekaddrsize
0002C20E <AmiBlitz3_wizzard.ab2@16020>   BSR.w JL_0_A916
0002C214 <AmiBlitz3_wizzard.ab2@16021>   MOVE.l a2,rightsidetype
0002C216 <AmiBlitz3_wizzard.ab2@16022>   MOVEQ.l #$03,D2
0002C218 <AmiBlitz3_wizzard.ab2@16023> RTS
0002C21C <AmiBlitz3_wizzard.ab2@16027>    BSR.w get1bytemain
0002C22E <AmiBlitz3_wizzard.ab2@16028>    !compare2
0002C232 <AmiBlitz3_wizzard.ab2@16029>    BEQ andop2
0002C236 <AmiBlitz3_wizzard.ab2@16030>    BSR.w getparameter
0002C23A <AmiBlitz3_wizzard.ab2@16031>    BSR.w JL_0_8E3C
0002C23E <AmiBlitz3_wizzard.ab2@16032>    BSR.w calcvar
0002C242 <AmiBlitz3_wizzard.ab2@16033>   CMP.b #$7,D2
0002C246 <AmiBlitz3_wizzard.ab2@16034>    BNE.w JL_0_A960
0002C24A <AmiBlitz3_wizzard.ab2@16035>   BTST #$F,D2
0002C24E <AmiBlitz3_wizzard.ab2@16036>    BNE.w JL_0_A94A
0002C254 <AmiBlitz3_wizzard.ab2@16037>   MOVE.w D3,stamp2+2
0002C25A <AmiBlitz3_wizzard.ab2@16038>   MOVE.l stamp2,D1
0002C25E <AmiBlitz3_wizzard.ab2@16039>    BSR.w pokela5s
0002C262 <AmiBlitz3_wizzard.ab2@16040> BRA.w JL_0_A978
0002C268 <AmiBlitz3_wizzard.ab2@16044>   MOVE.w regnum,D1
0002C26A <AmiBlitz3_wizzard.ab2@16045>   LSL.w #8,D1
0002C26C <AmiBlitz3_wizzard.ab2@16046>   LSL.w #1,D1
0002C272 <AmiBlitz3_wizzard.ab2@16047>   OR.w stamp,D1
0002C276 <AmiBlitz3_wizzard.ab2@16048>    BSR.w writeword
0002C278 <AmiBlitz3_wizzard.ab2@16049> RTS
0002C27C <AmiBlitz3_wizzard.ab2@16053>   BTST #$F,D2
0002C280 <AmiBlitz3_wizzard.ab2@16054>    BNE.w JL_0_A978
0002C286 <AmiBlitz3_wizzard.ab2@16055>   MOVE.w D3,leaamp+2
0002C28C <AmiBlitz3_wizzard.ab2@16056>   MOVE.l leaamp,D1
0002C290 <AmiBlitz3_wizzard.ab2@16057>    BSR.w pokela5s
0002C296 <AmiBlitz3_wizzard.ab2@16060>   MOVE.w regnum,D1
0002C298 <AmiBlitz3_wizzard.ab2@16061>   LSL.w #8,D1
0002C29A <AmiBlitz3_wizzard.ab2@16062>   LSL.w #1,D1
0002C2A0 <AmiBlitz3_wizzard.ab2@16063>   OR.w leaamp2,D1
0002C2A4 <AmiBlitz3_wizzard.ab2@16064> BRA.w writeword
0002C2A8 <AmiBlitz3_wizzard.ab2@16068>   MOVE.w #$D200,D1
0002C2AC <AmiBlitz3_wizzard.ab2@16069>    BSR.w Atokejsr
0002C2AE <AmiBlitz3_wizzard.ab2@16070>   MOVEQ.l #$03,D2
0002C2B0 <AmiBlitz3_wizzard.ab2@16071> RTS
0002C2B4 <AmiBlitz3_wizzard.ab2@16075> addrcode:  Dc.b $20,$6D,$00,$00                            ;MOVEA.L $0000(A5),A0
0002C2B6 <AmiBlitz3_wizzard.ab2@16076>            Dc.b $D0,$C0                                    ;ADDA.W  D0,A0
0002C2B8 <AmiBlitz3_wizzard.ab2@16077>            Dc.b $20,$08                                    ;MOVE.L  A0,D0
0002C2BC <AmiBlitz3_wizzard.ab2@16083>    BSR.w get1bytemain
0002C2BE <AmiBlitz3_wizzard.ab2@16084>   MOVE.w D0,D1
0002C2C2 <AmiBlitz3_wizzard.ab2@16085>    BPL.w syntaxerr
0002C2C4 <AmiBlitz3_wizzard.ab2@16086>   MOVE.w D2,-(A7)
0002C2C8 <AmiBlitz3_wizzard.ab2@16087>   BCLR #$F,D1
0002C2CC <AmiBlitz3_wizzard.ab2@16088>    BSR.w searchinstr
0002C2D0 <AmiBlitz3_wizzard.ab2@16089>   MOVE.l $12(A2),D0
0002C2D4 <AmiBlitz3_wizzard.ab2@16090>   TST.w -$2(A2,D0.L)
0002C2D8 <AmiBlitz3_wizzard.ab2@16091>    BEQ.w freeerr
0002C2DA <AmiBlitz3_wizzard.ab2@16092>   MOVE.w (A7)+,D2
0002C2DC <AmiBlitz3_wizzard.ab2@16093> RTS
0002C2E0 <AmiBlitz3_wizzard.ab2@16097>   MOVE.l $0(A5),D0
0002C2E4 <AmiBlitz3_wizzard.ab2@16098>    BNE.b ucodeskip
0002C2E6 <AmiBlitz3_wizzard.ab2@16099>   MOVEQ.l #-$01,D0
0002C2EA <AmiBlitz3_wizzard.ab2@16100> BRA.b usedcodef
0002C2EE <AmiBlitz3_wizzard.ab2@16103>   SUB.l $0(A5),D0
0002C2F0 <AmiBlitz3_wizzard.ab2@16106>   LSR.w #8,D0
0002C2F4 <AmiBlitz3_wizzard.ab2@16111>    MOVE.l $0(A5),D0
0002C2F8 <AmiBlitz3_wizzard.ab2@16112>    BNE.b ucodeskip2
0002C2FA <AmiBlitz3_wizzard.ab2@16113>   MOVEQ.l #-$01,D0
0002C2FE <AmiBlitz3_wizzard.ab2@16114> BRA.b usedcode2f
0002C302 <AmiBlitz3_wizzard.ab2@16117>   SUB.l $0(A5),D0                                          ;usedcode2
0002C304 <AmiBlitz3_wizzard.ab2@16118>   LSR.w #8,D0
0002C306 <AmiBlitz3_wizzard.ab2@16121>   LSR.w #8,D0
0002C308 <AmiBlitz3_wizzard.ab2@16126>   MOVE.l D0,-(A7)
0002C30A <AmiBlitz3_wizzard.ab2@16129>   MOVE.l (A7)+,D0
0002C30C <AmiBlitz3_wizzard.ab2@16132>   MOVE.l D0,D0
0002C310 <AmiBlitz3_wizzard.ab2@16138>   BSR.w JL_0_A9A0
0002C314 <AmiBlitz3_wizzard.ab2@16140>   MOVE.w -$2(A2,D0.L),D3
0002C318 <AmiBlitz3_wizzard.ab2@16141>   CMP.w #$9,D3
0002C31C <AmiBlitz3_wizzard.ab2@16142>    BCC.w doused__skip
0002C320 <AmiBlitz3_wizzard.ab2@16146>   LEA usedcode(PC),A0
0002C324 <AmiBlitz3_wizzard.ab2@16147>   LEA usedcodef(PC),A1
0002C32A <AmiBlitz3_wizzard.ab2@16149>   ANDI.w #$F1FF,$E+4(A0)                                   ;and #$f1ff,ucodediv-usedcode(a0) org source
0002C32E <AmiBlitz3_wizzard.ab2@16150>   ANDI.w #$7,D3
0002C330 <AmiBlitz3_wizzard.ab2@16151>   LSL.w #8,D3
0002C332 <AmiBlitz3_wizzard.ab2@16152>   LSL.w #1,D3
0002C336 <AmiBlitz3_wizzard.ab2@16153>   OR.w D3,$E+4(A0)                                         ;or  d3,ucodediv-usedcode(a0) org source
0002C33A <AmiBlitz3_wizzard.ab2@16154> BRA.w doused__skip2
0002C33E <AmiBlitz3_wizzard.ab2@16159>   LEA usedcode2(PC),A0
0002C342 <AmiBlitz3_wizzard.ab2@16160>   LEA usedcode2f(PC),A1
0002C348 <AmiBlitz3_wizzard.ab2@16162>   ANDI.w #$F1FF,$10+4(A0)                                  ;and #$f1ff,ucodediv2-usedcode2(a0) org source
0002C34A <AmiBlitz3_wizzard.ab2@16163>   SUBQ.w #8,D3
0002C34C <AmiBlitz3_wizzard.ab2@16164>   LSL.w #8,D3
0002C34E <AmiBlitz3_wizzard.ab2@16165>   LSL.w #1,D3
0002C352 <AmiBlitz3_wizzard.ab2@16166>   OR.w D3,$10+4(A0)                                        ;or  d3,ucodediv2-usedcode2(a0) org source
0002C356 <AmiBlitz3_wizzard.ab2@16169>   MOVE.w -$6(A2,D0.L),D3
0002C35A <AmiBlitz3_wizzard.ab2@16170>   MOVE.w D3,$C+4(A0)                                       ;move d3,ucodeskip-usedcode+2(a0) org source
0002C35C <AmiBlitz3_wizzard.ab2@16171>   ADDQ.w #4,D3
0002C360 <AmiBlitz3_wizzard.ab2@16172>   MOVE.w D3,$2(A0)
0002C366 <AmiBlitz3_wizzard.ab2@16173>   MOVE.w regnum,D1
0002C36A <AmiBlitz3_wizzard.ab2@16174>    BEQ.w doused__skip3
0002C36E <AmiBlitz3_wizzard.ab2@16175>   MOVE.w usedprep(PC),D1
0002C372 <AmiBlitz3_wizzard.ab2@16176>    BSR.w writeword
0002C376 <AmiBlitz3_wizzard.ab2@16179>   BSR.w pokecode
0002C37C <AmiBlitz3_wizzard.ab2@16180>   MOVE.w regnum,D1
0002C380 <AmiBlitz3_wizzard.ab2@16181>    BEQ.w doused__skip4
0002C382 <AmiBlitz3_wizzard.ab2@16182>   LSL.w #8,D1
0002C384 <AmiBlitz3_wizzard.ab2@16183>   LSL.w #1,D1
0002C388 <AmiBlitz3_wizzard.ab2@16184>   OR.w usedfix(PC),D1
0002C38C <AmiBlitz3_wizzard.ab2@16185>    BSR.w writeword
0002C390 <AmiBlitz3_wizzard.ab2@16186>   MOVE.w useddone(PC),D1
0002C394 <AmiBlitz3_wizzard.ab2@16187>    BSR.w writeword
0002C396 <AmiBlitz3_wizzard.ab2@16190>    MOVEQ.l #$02,D2
0002C39A <AmiBlitz3_wizzard.ab2@16191> BRA.w get1bytemain
0002C39E <AmiBlitz3_wizzard.ab2@16199>    BSR.w JL_0_A9A0
0002C3A0 <AmiBlitz3_wizzard.ab2@16201>   MOVEQ.l #$00,D3
0002C3A4 <AmiBlitz3_wizzard.ab2@16202>   MOVE.w -$4(A2,D0.L),D3
0002C3A8 <AmiBlitz3_wizzard.ab2@16203>    BSR.w get1bytemain
0002C3AC <AmiBlitz3_wizzard.ab2@16204> BRA.w JL_0_B46E
0002C3B0 <AmiBlitz3_wizzard.ab2@16211>    BSR.w get1bytemain
0002C3B2 <AmiBlitz3_wizzard.ab2@16212>   MOVE.w D0,-(A7)
0002C3B6 <AmiBlitz3_wizzard.ab2@16213>    BSR.w get1bytemain
0002C3BA <AmiBlitz3_wizzard.ab2@16214>   CMP.w #$28,D0
0002C3BE <AmiBlitz3_wizzard.ab2@16215>    BNE.w syntaxerr
0002C3C0 <AmiBlitz3_wizzard.ab2@16216>   MOVE.w (A7)+,D0
0002C3C4 <AmiBlitz3_wizzard.ab2@16217>    BSR.w JL_0_C340
0002C3C8 <AmiBlitz3_wizzard.ab2@16218>    BSR.w reget
0002C3CC <AmiBlitz3_wizzard.ab2@16219>   CMP.w #$29,D0
0002C3D0 <AmiBlitz3_wizzard.ab2@16220>    BNE.w syntaxerr
0002C3D4 <AmiBlitz3_wizzard.ab2@16224>   LEA addrcode(PC),A0
0002C3D8 <AmiBlitz3_wizzard.ab2@16225>   LEA addrcodef(PC),A1
0002C3DE <AmiBlitz3_wizzard.ab2@16226>   MOVE.w -$6(A2),$2(A0)
0002C3E2 <AmiBlitz3_wizzard.ab2@16227>   MOVE.w $4(A0),D1
0002C3E6 <AmiBlitz3_wizzard.ab2@16228>   ANDI.w #$FFF8,D1
0002C3EC <AmiBlitz3_wizzard.ab2@16229>   OR.w regnum,D1
0002C3F0 <AmiBlitz3_wizzard.ab2@16230>   MOVE.w D1,$4(A0)
0002C3F4 <AmiBlitz3_wizzard.ab2@16231>   MOVE.w $6(A0),D1
0002C3F8 <AmiBlitz3_wizzard.ab2@16232>   ANDI.w #$F1FF,D1
0002C3FE <AmiBlitz3_wizzard.ab2@16233>   MOVE.w regnum,D0
0002C400 <AmiBlitz3_wizzard.ab2@16234>   LSL.w #8,D0
0002C402 <AmiBlitz3_wizzard.ab2@16235>   LSL.w #1,D0
0002C404 <AmiBlitz3_wizzard.ab2@16236>   OR.w D0,D1
0002C408 <AmiBlitz3_wizzard.ab2@16237>   MOVE.w D1,$6(A0)
0002C40C <AmiBlitz3_wizzard.ab2@16238>    BSR.w pokecode
0002C40E <AmiBlitz3_wizzard.ab2@16239>   MOVEQ.l #$03,D2
0002C412 <AmiBlitz3_wizzard.ab2@16240> BRA.w get1bytemain
0002C416 <AmiBlitz3_wizzard.ab2@16244>   CMP.w #-$7F4D,D0
0002C41A <AmiBlitz3_wizzard.ab2@16245>    BHI.w JL_0_AAFE
0002C41E <AmiBlitz3_wizzard.ab2@16246> BRA.w syntaxerr
0002C422 <AmiBlitz3_wizzard.ab2@16253> .do_null   CMP.w #$b581,d0
0002C426 <AmiBlitz3_wizzard.ab2@16254>    BNE 'nonull
0002C42C <AmiBlitz3_wizzard.ab2@16255>    MOVE.l d0,lastinstruction
0002C430 <AmiBlitz3_wizzard.ab2@16256>    MOVE.w #$7000,d1                                            ;asm instr moveq #0,dx
0002C436 <AmiBlitz3_wizzard.ab2@16257>    MOVE.w regnum,d0
0002C438 <AmiBlitz3_wizzard.ab2@16258>    ASL.l #7,d0
0002C43A <AmiBlitz3_wizzard.ab2@16259>    ASL.l #2,d0
0002C43C <AmiBlitz3_wizzard.ab2@16260>    OR.l d0,d1
0002C440 <AmiBlitz3_wizzard.ab2@16261>    BSR writeword
0002C446 <AmiBlitz3_wizzard.ab2@16262>    JSR get1bytemain
0002C448 <AmiBlitz3_wizzard.ab2@16263>    RTS
0002C44C <AmiBlitz3_wizzard.ab2@16265> 'nonull CMP.w #$c982,d0
0002C450 <AmiBlitz3_wizzard.ab2@16266>        BNE nonew_
0002C452 <AmiBlitz3_wizzard.ab2@16268>   MOVE.l a5,-(a7)
0002C458 <AmiBlitz3_wizzard.ab2@16269>   MOVE.w lastchar,-(a7)
0002C45E <AmiBlitz3_wizzard.ab2@16270>   JSR get1bytemain
0002C462 <AmiBlitz3_wizzard.ab2@16271>   CMP.w #"(",d0                                             ; use oldcode
0002C466 <AmiBlitz3_wizzard.ab2@16272>   BNE 'newcode
0002C46C <AmiBlitz3_wizzard.ab2@16273>   JSR get1bytemain
0002C470 <AmiBlitz3_wizzard.ab2@16274>   CMP.w #")",d0
0002C474 <AmiBlitz3_wizzard.ab2@16275>   BEQ 'newcode
0002C47A <AmiBlitz3_wizzard.ab2@16276>   MOVE.w (a7)+,lastchar
0002C47C <AmiBlitz3_wizzard.ab2@16277>   MOVE.l (a7)+,a5
0002C482 <AmiBlitz3_wizzard.ab2@16278>   MOVE.w lastchar,d0
0002C486 <AmiBlitz3_wizzard.ab2@16279>   BRA nonew_
0002C488 <AmiBlitz3_wizzard.ab2@16280> 'newcode  MOVE.l a0,-(a7)
0002C48E <AmiBlitz3_wizzard.ab2@16281>   TST.b blitzparloop
0002C492 <AmiBlitz3_wizzard.ab2@16282>   BNE 'err
0002C498 <AmiBlitz3_wizzard.ab2@16283>   TST.b funcparloop
0002C49C <AmiBlitz3_wizzard.ab2@16284>   BNE 'err
0002C4A0 <AmiBlitz3_wizzard.ab2@16285>   BRA 'ok
0002C4A6 <AmiBlitz3_wizzard.ab2@16286> 'err JMP errornewnotincalls
0002C4AC <AmiBlitz3_wizzard.ab2@16287> 'ok  MOVE.l #$203c0000,d1
0002C4B0 <AmiBlitz3_wizzard.ab2@16288>   BSR writelong                                            ; 68k asm move.l #$xx,d0
0002C4B2 <AmiBlitz3_wizzard.ab2@16289>   MOVEQ #0,d1
0002C4B6 <AmiBlitz3_wizzard.ab2@16290>   MOVE.w 8(a0),d1
0002C4BA <AmiBlitz3_wizzard.ab2@16291>   BSR writeword
0002C4BE <AmiBlitz3_wizzard.ab2@16292>   MOVE.w #$7200,d1                                         ; 68k asm "moveq #0,d1"
0002C4C2 <AmiBlitz3_wizzard.ab2@16293>   BSR writeword
0002C4C6 <AmiBlitz3_wizzard.ab2@16294>   MOVE.w #$C002,D1                                         ;call function to alloc global mem
0002C4CA <AmiBlitz3_wizzard.ab2@16295>   BSR.w tokejsr2
0002C4CC <AmiBlitz3_wizzard.ab2@16296>   MOVE.l (a7)+,a0
0002C4CE <AmiBlitz3_wizzard.ab2@16297>   ADDQ.l #6,a7                      ; a5 need not restore
0002C4D2 <AmiBlitz3_wizzard.ab2@16298>   CMP.w #")",d0
0002C4D6 <AmiBlitz3_wizzard.ab2@16299>   BNE 'nobracket
0002C4DC <AmiBlitz3_wizzard.ab2@16300>   JSR get1bytemain
0002C4DE <AmiBlitz3_wizzard.ab2@16301> 'nobracket  RTS
0002C4E2 <AmiBlitz3_wizzard.ab2@16303> nonew_  CMP.w #-$7F4A,D0
0002C4E6 <AmiBlitz3_wizzard.ab2@16304>    BEQ.w JL_0_A98C
0002C4EA <AmiBlitz3_wizzard.ab2@16305>   CMP.w #-$7F48,D0
0002C4EE <AmiBlitz3_wizzard.ab2@16306>    BEQ.w doaddr
0002C4F2 <AmiBlitz3_wizzard.ab2@16307>   CMP.w #-$7F3C,D0
0002C4F6 <AmiBlitz3_wizzard.ab2@16308>    BEQ.w domaximum
0002C4FA <AmiBlitz3_wizzard.ab2@16309>   CMP.w #-$7F2F,D0
0002C4FE <AmiBlitz3_wizzard.ab2@16310>    BEQ.w doused
0002C500 <AmiBlitz3_wizzard.ab2@16311>   MOVE.w D2,-(A7)
0002C502 <AmiBlitz3_wizzard.ab2@16312>   MOVE.w D0,D1
0002C506 <AmiBlitz3_wizzard.ab2@16313>   BCLR #$F,D1
0002C50A <AmiBlitz3_wizzard.ab2@16315>    BSR.w searchinstr
0002C50C <AmiBlitz3_wizzard.ab2@16316>   MOVE.w (A3),D1
0002C510 <AmiBlitz3_wizzard.ab2@16317>   BTST #$1,D1
0002C514 <AmiBlitz3_wizzard.ab2@16318>    BEQ.w noreturn_                                         ;syntax error noreturn
0002C518 <AmiBlitz3_wizzard.ab2@16319>   BTST #$2,D1
0002C51C <AmiBlitz3_wizzard.ab2@16320>    BNE.w JL_0_AC1A
0002C51E <AmiBlitz3_wizzard.ab2@16321>   LSR.w #8,D1
0002C524 <AmiBlitz3_wizzard.ab2@16322>   BTST #$3,$1(A3)
0002C528 <AmiBlitz3_wizzard.ab2@16323>    BEQ.w JL_0_AB4C
0002C52E <AmiBlitz3_wizzard.ab2@16324>    JSR AJL_0_498A
0002C534 <AmiBlitz3_wizzard.ab2@16327>    CLR.l rightsidetype
0002C536 <AmiBlitz3_wizzard.ab2@16328>    MOVE.w D1,-(A7)                                         ;is library instruction
0002C53A <AmiBlitz3_wizzard.ab2@16329>   CMP.w #$7,D1
0002C53E <AmiBlitz3_wizzard.ab2@16330>    BNE.w JL_0_AB5E
0002C540 <AmiBlitz3_wizzard.ab2@16331>   MOVE.l A2,-(A7)
0002C544 <AmiBlitz3_wizzard.ab2@16332>    BSR.w makesbase
0002C546 <AmiBlitz3_wizzard.ab2@16333>   MOVEA.l (A7)+,A2
0002C54A <AmiBlitz3_wizzard.ab2@16336>     BSR.w JL_0_AFA2
0002C54C <AmiBlitz3_wizzard.ab2@16337>   MOVE.w D3,-(A7)
0002C550 <AmiBlitz3_wizzard.ab2@16338>    BSR.w get1bytemain
0002C552 <AmiBlitz3_wizzard.ab2@16339>   MOVEQ.l #$00,D1
0002C556 <AmiBlitz3_wizzard.ab2@16340>   CMP.w #$28,D0
0002C55A <AmiBlitz3_wizzard.ab2@16341>    BNE.w JL_0_AB80
0002C560 <AmiBlitz3_wizzard.ab2@16342>    JSR JL_0_66F6
0002C562 <AmiBlitz3_wizzard.ab2@16343>   TST.w D1
0002C566 <AmiBlitz3_wizzard.ab2@16344>    BEQ.w syntaxerr
0002C56A <AmiBlitz3_wizzard.ab2@16345> BRA.w JL_0_AB84
0002C574 <AmiBlitz3_wizzard.ab2@16350>   MOVE.w oldqflag,instringon
0002C57A <AmiBlitz3_wizzard.ab2@16351>   MOVEA.l lastsourcepos,A5
0002C580 <AmiBlitz3_wizzard.ab2@16354>    MOVE.w regnum,-(A7)
0002C58A <AmiBlitz3_wizzard.ab2@16355>    MOVE.w regnum,regnumstore
0002C590 <AmiBlitz3_wizzard.ab2@16356>    TST.b fpu
0002C594 <AmiBlitz3_wizzard.ab2@16357>             BEQ 'nofloat
0002C59A <AmiBlitz3_wizzard.ab2@16358>             CMP.w #$ffff,28(a3)
0002C59E <AmiBlitz3_wizzard.ab2@16359>             BNE 'nofloat
0002C5A4 <AmiBlitz3_wizzard.ab2@16360>             CMP.w #$3c01,34(a3)                            ;val do nofpu stuff
0002C5A8 <AmiBlitz3_wizzard.ab2@16361>             BEQ 'nofloat
0002C5AE <AmiBlitz3_wizzard.ab2@16362>             CMP.w #$3c02,34(a3)                            ;int skip
0002C5B2 <AmiBlitz3_wizzard.ab2@16363>             BEQ 'quick
0002C5B6 <AmiBlitz3_wizzard.ab2@16364>             CMP.b #5,(a3)
0002C5BA <AmiBlitz3_wizzard.ab2@16365>             BNE 'nofloat
0002C5C0 <AmiBlitz3_wizzard.ab2@16368>             CLR.l load_var_addr
0002C5C4 <AmiBlitz3_wizzard.ab2@16369> BRA 'isfpu
0002C5CA <AmiBlitz3_wizzard.ab2@16372>    CLR.w regnum
0002C5CC <AmiBlitz3_wizzard.ab2@16375>    MOVE.w D1,-(A7)
0002C5D2 <AmiBlitz3_wizzard.ab2@16376>   BTST #$3,$1(A3)
0002C5D6 <AmiBlitz3_wizzard.ab2@16377>    BEQ.w JL_0_ABB0
0002C5DA <AmiBlitz3_wizzard.ab2@16396>   MOVE.w $6(A7),D1
0002C5E0 <AmiBlitz3_wizzard.ab2@16397>   MOVE.w d1,peeksize
0002C5E4 <AmiBlitz3_wizzard.ab2@16407>   ORI.w #$7000,D1
0002C5E8 <AmiBlitz3_wizzard.ab2@16408>   BSR.w writeword                                          ;write peekmode
0002C5EE <AmiBlitz3_wizzard.ab2@16411>   ADDQ.w #1,regnum
0002C5F0 <AmiBlitz3_wizzard.ab2@16412>   MOVE.w (A7),D1
0002C5F8 <AmiBlitz3_wizzard.ab2@16415>   MOVE.w 2(a7),tempregnum
0002C5FE <AmiBlitz3_wizzard.ab2@16416>   JSR JL_0_4878
0002C600 <AmiBlitz3_wizzard.ab2@16417>   TST.w (A7)+
0002C604 <AmiBlitz3_wizzard.ab2@16418>   BEQ.w JL_0_ABC6
0002C608 <AmiBlitz3_wizzard.ab2@16419>   CMP.w #")",D0                                             ; check if ) here for correct end of blitzlib function call
0002C60C <AmiBlitz3_wizzard.ab2@16420>   BNE.w errorbracketmiss                                    ; was syntax error
0002C612 <AmiBlitz3_wizzard.ab2@16421>   CLR.l lasttoken
0002C616 <AmiBlitz3_wizzard.ab2@16422>   BSR.w get1bytemain
0002C618 <AmiBlitz3_wizzard.ab2@16425>    MOVE.w (A7)+,D1
0002C61E <AmiBlitz3_wizzard.ab2@16426>   MOVE.w D1,regnum
0002C622 <AmiBlitz3_wizzard.ab2@16427>    BEQ.w JL_0_ABDE
0002C628 <AmiBlitz3_wizzard.ab2@16428>    CMP.w #$3c01,24(a2)                                     ;val skipped
0002C62C <AmiBlitz3_wizzard.ab2@16429>    BNE 'noval
0002C632 <AmiBlitz3_wizzard.ab2@16430>    TST.b fpu
0002C636 <AmiBlitz3_wizzard.ab2@16431>    BEQ 'noval
0002C63C <AmiBlitz3_wizzard.ab2@16432>    CLR.l load_var_addr
0002C63E <AmiBlitz3_wizzard.ab2@16433>    MOVEQ #0,d1
0002C644 <AmiBlitz3_wizzard.ab2@16434>    MOVE.w regnum,d1
0002C646 <AmiBlitz3_wizzard.ab2@16435>    LSL.l #7,d1
0002C64C <AmiBlitz3_wizzard.ab2@16436>    OR.l #$f2000000,d1
0002C650 <AmiBlitz3_wizzard.ab2@16437>    BSR writelong
0002C654 <AmiBlitz3_wizzard.ab2@16438> BRA JL_0_ABDE
0002C65A <AmiBlitz3_wizzard.ab2@16442>    CMP.w #$3c02,24(a2)                                     ;int skipped
0002C65E <AmiBlitz3_wizzard.ab2@16443>    BEQ 'quick
0002C662 <AmiBlitz3_wizzard.ab2@16444>    CMP.b #5,d2
0002C666 <AmiBlitz3_wizzard.ab2@16445>    BNE 'nofpu
0002C66C <AmiBlitz3_wizzard.ab2@16446>    TST.b fpu
0002C670 <AmiBlitz3_wizzard.ab2@16447>    BEQ 'nofpu
0002C676 <AmiBlitz3_wizzard.ab2@16452>    CLR.l load_var_addr
0002C67A <AmiBlitz3_wizzard.ab2@16453> BRA JL_0_ABDE
0002C67C <AmiBlitz3_wizzard.ab2@16456>   LSL.w #8,D1
0002C67E <AmiBlitz3_wizzard.ab2@16457>   LSL.w #1,D1
0002C682 <AmiBlitz3_wizzard.ab2@16458>   ORI.w #$2000,D1
0002C686 <AmiBlitz3_wizzard.ab2@16459>   BSR.w writeword                                          ;write move.l d0,dx
0002C68C <AmiBlitz3_wizzard.ab2@16460>   TST.b fpu
0002C690 <AmiBlitz3_wizzard.ab2@16461>   BEQ JL_0_ABDE
0002C692 <AmiBlitz3_wizzard.ab2@16462>   MOVEQ #0,d1
0002C698 <AmiBlitz3_wizzard.ab2@16463>   MOVE.w regnum,d1
0002C69A <AmiBlitz3_wizzard.ab2@16464>   LSL.l #7,d1
0002C6A0 <AmiBlitz3_wizzard.ab2@16465>   OR.l #$f2000000,d1
0002C6A2 <AmiBlitz3_wizzard.ab2@16469>        MOVE.w (A7)+,D3
0002C6A6 <AmiBlitz3_wizzard.ab2@16470>        BEQ.w JL_0_ABFC
0002C6AC <AmiBlitz3_wizzard.ab2@16471>        TST.b fpu
0002C6B0 <AmiBlitz3_wizzard.ab2@16472>        BEQ 'nofpu
0002C6B2 <AmiBlitz3_wizzard.ab2@16473>       MOVE.l d0,-(a7)
0002C6B4 <AmiBlitz3_wizzard.ab2@16474>        MOVE.l a0,-(a7)
0002C6BA <AmiBlitz3_wizzard.ab2@16475>        MOVE.l stacktrack,d1
0002C6C0 <AmiBlitz3_wizzard.ab2@16476>        LEA fpustackbase,a0
0002C6C8 <AmiBlitz3_wizzard.ab2@16477>        MOVE.w 0(a0,d1),regmask
0002C6CA <AmiBlitz3_wizzard.ab2@16478>        MOVE.l (a7)+,a0
0002C6CE <AmiBlitz3_wizzard.ab2@16479>       MOVE.w #8,d0
0002C6D2 <AmiBlitz3_wizzard.ab2@16482>       BEQ 'ready
0002C6D8 <AmiBlitz3_wizzard.ab2@16483>       BTST d0,regmask
0002C6DC <AmiBlitz3_wizzard.ab2@16484>       BEQ 'noa7
0002C6DE <AmiBlitz3_wizzard.ab2@16485>       MOVEQ #0,d1
0002C6E0 <AmiBlitz3_wizzard.ab2@16486>       MOVE.w d0,d1
0002C6E2 <AmiBlitz3_wizzard.ab2@16487>       SUBQ.w #1,d1
0002C6E4 <AmiBlitz3_wizzard.ab2@16488>       ASL #7,d1
0002C6EA <AmiBlitz3_wizzard.ab2@16490>       OR.l #$f21f5400,d1                                   ;fmove.d (a7)+
0002C6EE <AmiBlitz3_wizzard.ab2@16491>       BSR writelong
0002C6F4 <AmiBlitz3_wizzard.ab2@16492>       SUBQ.l #2,stacktrack
0002C6F6 <AmiBlitz3_wizzard.ab2@16495>       SUBQ.w #1,d0
0002C6FA <AmiBlitz3_wizzard.ab2@16496>       BNE 'loop
0002C6FC <AmiBlitz3_wizzard.ab2@16499>       MOVE.l (a7)+,d0
0002C702 <AmiBlitz3_wizzard.ab2@16500>       SUBQ.l #2,stacktrack                                 ;int track
0002C706 <AmiBlitz3_wizzard.ab2@16503>    MOVE.w #$4CDF,D1
0002C70A <AmiBlitz3_wizzard.ab2@16504>    BSR.w writeword                                         ;write movem.l (a7)+,
0002C70C <AmiBlitz3_wizzard.ab2@16505>   MOVEQ.l #$00,D1
0002C70E <AmiBlitz3_wizzard.ab2@16506>   MOVEQ.l #$0F,D4
0002C710 <AmiBlitz3_wizzard.ab2@16509>     LSL.w #1,D3
0002C712 <AmiBlitz3_wizzard.ab2@16510>     ROXR.w #1,D1
0002C716 <AmiBlitz3_wizzard.ab2@16511>   DBF D4,JL_0_ABF0
0002C71A <AmiBlitz3_wizzard.ab2@16513>    BSR.w writeword
0002C720 <AmiBlitz3_wizzard.ab2@16514>    TST.b fast
0002C724 <AmiBlitz3_wizzard.ab2@16515>    BEQ JL_0_ABFC
0002C72A <AmiBlitz3_wizzard.ab2@16516>    TST.w regnum
0002C72E <AmiBlitz3_wizzard.ab2@16517>    BEQ JL_0_ABFC
0002C734 <AmiBlitz3_wizzard.ab2@16518>    CMP.w #$3c0e,$1c(a3)                                    ;true
0002C738 <AmiBlitz3_wizzard.ab2@16519>    BNE 'l1
0002C73E <AmiBlitz3_wizzard.ab2@16520>    MOVE.w regnum,d1
0002C740 <AmiBlitz3_wizzard.ab2@16521>    ASL.l #8,d1
0002C742 <AmiBlitz3_wizzard.ab2@16522>    ASL.l #1,d1
0002C746 <AmiBlitz3_wizzard.ab2@16523>    OR.w #$70ff,d1
0002C750 <AmiBlitz3_wizzard.ab2@16524>    SUB.l #12,destpointer
0002C754 <AmiBlitz3_wizzard.ab2@16525>    BSR writeword
0002C75A <AmiBlitz3_wizzard.ab2@16528>   CMP.w #$3c0f,$1c(a3)                                     ;false
0002C75E <AmiBlitz3_wizzard.ab2@16529>    BNE 'l2
0002C764 <AmiBlitz3_wizzard.ab2@16530>     MOVE.w regnum,d1
0002C766 <AmiBlitz3_wizzard.ab2@16531>     ASL.l #8,d1
0002C768 <AmiBlitz3_wizzard.ab2@16532>     ASL.l #1,d1
0002C76C <AmiBlitz3_wizzard.ab2@16533>     OR.w #$7000,d1
0002C776 <AmiBlitz3_wizzard.ab2@16534>     SUB.l #12,destpointer
0002C77A <AmiBlitz3_wizzard.ab2@16535>     BSR writeword
0002C77C <AmiBlitz3_wizzard.ab2@16539>    MOVE.w (A7)+,D2
0002C780 <AmiBlitz3_wizzard.ab2@16540>   CMP.w #$7,D2                                             ;destination var type
0002C784 <AmiBlitz3_wizzard.ab2@16541>    BNE.w JL_0_AC16
0002C78A <AmiBlitz3_wizzard.ab2@16542>   MOVE.w putstlen,D1
0002C790 <AmiBlitz3_wizzard.ab2@16543>   OR.w regnum,D1
0002C794 <AmiBlitz3_wizzard.ab2@16544>    BSR.w writeword
0002C798 <AmiBlitz3_wizzard.ab2@16547> BRA.w JL_0_AF66
0002C79C <AmiBlitz3_wizzard.ab2@16552>   MOVE.w $6(A3),D1
0002C7A0 <AmiBlitz3_wizzard.ab2@16553>    BSR.w uselib
0002C7A4 <AmiBlitz3_wizzard.ab2@16554>    BSR.w JL_0_AD40
0002C7A6 <AmiBlitz3_wizzard.ab2@16555>   MOVE.l D4,D1
0002C7A8 <AmiBlitz3_wizzard.ab2@16556>   MOVE.l D5,-(A7)
0002C7AC <AmiBlitz3_wizzard.ab2@16557>    BSR.w JL_0_AD38
0002C7B0 <AmiBlitz3_wizzard.ab2@16558>   MOVE.w $A(A1),-(A7)
0002C7B2 <AmiBlitz3_wizzard.ab2@16559>   ADDQ.w #8,A3
0002C7B4 <AmiBlitz3_wizzard.ab2@16560>   MOVE.w (A3)+,-(A7)
0002C7B6 <AmiBlitz3_wizzard.ab2@16561>   MOVE.l A3,-(A7)
0002C7BA <AmiBlitz3_wizzard.ab2@16562>    BSR.w get1bytemain
0002C7BC <AmiBlitz3_wizzard.ab2@16563>   MOVE.w D0,-(A7)
0002C7BE <AmiBlitz3_wizzard.ab2@16564>   MOVEQ.l #$00,D3
0002C7C4 <AmiBlitz3_wizzard.ab2@16565>   JSR checka4a5
0002C7C6 <AmiBlitz3_wizzard.ab2@16567>   MOVE.b (A3)+,D1
0002C7CA <AmiBlitz3_wizzard.ab2@16568>    BMI.w JL_0_AC6A
0002C7CC <AmiBlitz3_wizzard.ab2@16569>   MOVEQ.l #$03,D2
0002C7CE <AmiBlitz3_wizzard.ab2@16570>   ADDQ.w #1,D3
0002C7D2 <AmiBlitz3_wizzard.ab2@16571>   MOVEM.l D3/A3,-(A7)
0002C7D8 <AmiBlitz3_wizzard.ab2@16572>   MOVE.b funcparloop,-(a7)
0002C7DE <AmiBlitz3_wizzard.ab2@16573>   CLR.b funcparloop
0002C7E4 <AmiBlitz3_wizzard.ab2@16574>   MOVE.b blitzparloop,-(a7)
0002C7EC <AmiBlitz3_wizzard.ab2@16575>   MOVE.b #1,blitzparloop
0002C7F2 <AmiBlitz3_wizzard.ab2@16576>   MOVE.l lasttoken,-(a7)
0002C7F8 <AmiBlitz3_wizzard.ab2@16577>   MOVE.l leftsidetype,-(a7)
0002C7FE <AmiBlitz3_wizzard.ab2@16578>   MOVE.l rightsidetype,-(a7)
0002C802 <AmiBlitz3_wizzard.ab2@16579>   BSR.w peval
0002C808 <AmiBlitz3_wizzard.ab2@16580>   MOVE.l (a7)+,rightsidetype
0002C80E <AmiBlitz3_wizzard.ab2@16581>   MOVE.l (a7)+,leftsidetype
0002C814 <AmiBlitz3_wizzard.ab2@16582>   MOVE.l (a7)+,lasttoken
0002C81A <AmiBlitz3_wizzard.ab2@16583>   MOVE.b (a7)+,blitzparloop
0002C820 <AmiBlitz3_wizzard.ab2@16584>   MOVE.b (a7)+,funcparloop
0002C826 <AmiBlitz3_wizzard.ab2@16585>   SUBQ.w #4,a2offset
0002C82A <AmiBlitz3_wizzard.ab2@16586>   MOVEM.l (A7)+,D3/A3
0002C82E <AmiBlitz3_wizzard.ab2@16587>   CMP.w #$2C,D0
0002C832 <AmiBlitz3_wizzard.ab2@16588>    BEQ.w JL_0_AC40
0002C834 <AmiBlitz3_wizzard.ab2@16589>   TST.b (A3)
0002C838 <AmiBlitz3_wizzard.ab2@16590>    BPL.w syntaxerr
0002C83A <AmiBlitz3_wizzard.ab2@16593>   MOVE.w (A7)+,D1
0002C83E <AmiBlitz3_wizzard.ab2@16594>    BSR.w JL_0_AD04
0002C840 <AmiBlitz3_wizzard.ab2@16595>   MOVEA.l (A7)+,A3
0002C842 <AmiBlitz3_wizzard.ab2@16596>   SUBQ.w #1,D3
0002C846 <AmiBlitz3_wizzard.ab2@16597>    BMI.w JL_0_ACBE
0002C848 <AmiBlitz3_wizzard.ab2@16600>   TST.b (A3)+
0002C84C <AmiBlitz3_wizzard.ab2@16601>    BPL.w JL_0_AC78
0002C84E <AmiBlitz3_wizzard.ab2@16602>   SUBQ.w #1,A3
0002C850 <AmiBlitz3_wizzard.ab2@16605>     MOVEQ.l #$00,D1
0002C852 <AmiBlitz3_wizzard.ab2@16606>     MOVE.b -(A3),D1
0002C856 <AmiBlitz3_wizzard.ab2@16607>     BTST #$4,D1
0002C85A <AmiBlitz3_wizzard.ab2@16608>      BNE.w JL_0_ACAA
0002C860 <AmiBlitz3_wizzard.ab2@16609>     CMP.w regnum,D1
0002C864 <AmiBlitz3_wizzard.ab2@16610>      BCC.w JL_0_AC9E
0002C866 <AmiBlitz3_wizzard.ab2@16611>     BSET D1,D5
0002C868 <AmiBlitz3_wizzard.ab2@16612>     MOVEQ.l #$0F,D0
0002C86A <AmiBlitz3_wizzard.ab2@16613>     SUB.w D1,D0
0002C86C <AmiBlitz3_wizzard.ab2@16614>     BSET D0,D4
0002C86E <AmiBlitz3_wizzard.ab2@16617>     LSL.w #8,D1
0002C870 <AmiBlitz3_wizzard.ab2@16618>     LSL.w #1,D1
0002C874 <AmiBlitz3_wizzard.ab2@16619>     ORI.w #$201F,D1
0002C878 <AmiBlitz3_wizzard.ab2@16620>   BRA.w JL_0_ACB6
0002C87C <AmiBlitz3_wizzard.ab2@16623>     ANDI.w #$7,D1
0002C87E <AmiBlitz3_wizzard.ab2@16624>     LSL.w #8,D1
0002C880 <AmiBlitz3_wizzard.ab2@16625>     LSL.w #1,D1
0002C884 <AmiBlitz3_wizzard.ab2@16626>     ORI.w #$205F,D1
0002C888 <AmiBlitz3_wizzard.ab2@16629>      BSR.w writeword
0002C88C <AmiBlitz3_wizzard.ab2@16630>   DBF D3,JL_0_AC80
0002C892 <AmiBlitz3_wizzard.ab2@16633>   MOVE.w (A7)+,libjsr+2
0002C898 <AmiBlitz3_wizzard.ab2@16634>   MOVE.w (A7)+,libbase+2
0002C89E <AmiBlitz3_wizzard.ab2@16635>   MOVE.l libbase,D1
0002C8A2 <AmiBlitz3_wizzard.ab2@16636>    BSR.w writelong
0002C8A8 <AmiBlitz3_wizzard.ab2@16637>   MOVE.l libjsr,D1
0002C8AC <AmiBlitz3_wizzard.ab2@16638>    BSR.w writelong
0002C8B2 <AmiBlitz3_wizzard.ab2@16639>   MOVE.w regnum,D1
0002C8B6 <AmiBlitz3_wizzard.ab2@16640>    BEQ.w JL_0_ACF4
0002C8B8 <AmiBlitz3_wizzard.ab2@16641>   LSL.w #8,D1
0002C8BA <AmiBlitz3_wizzard.ab2@16642>   LSL.w #1,D1
0002C8BE <AmiBlitz3_wizzard.ab2@16643>   ORI.w #$2000,D1
0002C8C2 <AmiBlitz3_wizzard.ab2@16644>    BSR.w writeword
0002C8C4 <AmiBlitz3_wizzard.ab2@16647>   MOVE.l (A7)+,D1
0002C8C8 <AmiBlitz3_wizzard.ab2@16648>    BSR.w JL_0_AD38
0002C8CE <AmiBlitz3_wizzard.ab2@16649>    JSR restorea4a5
0002C8D0 <AmiBlitz3_wizzard.ab2@16650>   MOVEQ.l #$03,D2
0002C8D4 <AmiBlitz3_wizzard.ab2@16651>    BSR.w reget
0002C8D8 <AmiBlitz3_wizzard.ab2@16652> BRA.w JL_0_AF66
0002C8DA <AmiBlitz3_wizzard.ab2@16655>   TST.w D3
0002C8DE <AmiBlitz3_wizzard.ab2@16656>    BEQ.w JL_0_AD1E
0002C8E2 <AmiBlitz3_wizzard.ab2@16657>   CMP.w #$28,D1
0002C8E6 <AmiBlitz3_wizzard.ab2@16658>    BNE.w syntaxerr
0002C8EA <AmiBlitz3_wizzard.ab2@16659>   CMP.w #$29,D0
0002C8EE <AmiBlitz3_wizzard.ab2@16660>    BNE.w syntaxerr
0002C8F2 <AmiBlitz3_wizzard.ab2@16661> BRA.w get1bytemain
0002C8F6 <AmiBlitz3_wizzard.ab2@16664>   CMP.w #$28,D1
0002C8FA <AmiBlitz3_wizzard.ab2@16665>    BNE.w JL_0_AD36
0002C8FE <AmiBlitz3_wizzard.ab2@16666>    BSR.w get1bytemain
0002C902 <AmiBlitz3_wizzard.ab2@16667>   CMP.w #$29,D0
0002C906 <AmiBlitz3_wizzard.ab2@16668>    BNE.w syntaxerr
0002C90A <AmiBlitz3_wizzard.ab2@16669> BRA.w get1bytemain
0002C90C <AmiBlitz3_wizzard.ab2@16672> RTS
0002C90E <AmiBlitz3_wizzard.ab2@16675>   TST.w D1
0002C912 <AmiBlitz3_wizzard.ab2@16676>    BNE.w writelong
0002C914 <AmiBlitz3_wizzard.ab2@16677> RTS
0002C918 <AmiBlitz3_wizzard.ab2@16681>   MOVE.w #$48E7,D4
0002C91A <AmiBlitz3_wizzard.ab2@16682>   SWAP D4
0002C91C <AmiBlitz3_wizzard.ab2@16683>   CLR.w D4
0002C920 <AmiBlitz3_wizzard.ab2@16684>   MOVE.w #$4CDF,D5
0002C922 <AmiBlitz3_wizzard.ab2@16685>   SWAP D5
0002C924 <AmiBlitz3_wizzard.ab2@16686>   CLR.w D5
0002C92A <AmiBlitz3_wizzard.ab2@16687>   MOVE.w regnum,D1
0002C92E <AmiBlitz3_wizzard.ab2@16688>    BEQ.w JL_0_AD74
0002C932 <AmiBlitz3_wizzard.ab2@16689>   BSET #$F,D4
0002C936 <AmiBlitz3_wizzard.ab2@16690>   BSET #$0,D5
0002C93A <AmiBlitz3_wizzard.ab2@16691>   CMP.w #$2,D1
0002C93E <AmiBlitz3_wizzard.ab2@16692>    BCS.w JL_0_AD72
0002C942 <AmiBlitz3_wizzard.ab2@16695>   BSET #$E,D4
0002C946 <AmiBlitz3_wizzard.ab2@16696>   BSET #$1,D5
0002C948 <AmiBlitz3_wizzard.ab2@16699> RTS
0002C94E <AmiBlitz3_wizzard.ab2@16702>   TST.w fuckpos
0002C952 <AmiBlitz3_wizzard.ab2@16703>   BNE.w JL_0_AD6A
0002C954 <AmiBlitz3_wizzard.ab2@16704> RTS
0002C956 <AmiBlitz3_wizzard.ab2@16707> fuckpos:  Ds.w 1
0002C95C <AmiBlitz3_wizzard.ab2@16711>   MOVE.w sbasegot,D1
0002C960 <AmiBlitz3_wizzard.ab2@16712>    BEQ.w makesbase__skip
0002C964 <AmiBlitz3_wizzard.ab2@16716>   MOVE.w sbgot(PC),D1
0002C968 <AmiBlitz3_wizzard.ab2@16717>    BNE.w makesbase__skip2
0002C970 <AmiBlitz3_wizzard.ab2@16721>   MOVE.w #$0002,sbgot
0002C976 <AmiBlitz3_wizzard.ab2@16722>   MOVE.w movea3a7,D1
0002C97A <AmiBlitz3_wizzard.ab2@16723> BRA.w writeword
0002C97C <AmiBlitz3_wizzard.ab2@16726> RTS
0002C984 <AmiBlitz3_wizzard.ab2@16731>   MOVE.w #$0001,sbgot                                      ;voodoo magic! - Will it work?
0002C98A <AmiBlitz3_wizzard.ab2@16734>   MOVE.l #$C601,D1
0002C992 <AmiBlitz3_wizzard.ab2@16735>   MOVE.w #-1,sbasegot
0002C998 <AmiBlitz3_wizzard.ab2@16736>   MOVE.l d1,lastinstruction
0002C99C <AmiBlitz3_wizzard.ab2@16737>   BSR.w Atokejsr
0002C99E <AmiBlitz3_wizzard.ab2@16738> RTS
0002C9A8 <AmiBlitz3_wizzard.ab2@16743>   MOVE.l data1,litdata1
0002C9AE <AmiBlitz3_wizzard.ab2@16744>   TST.b fast
0002C9B2 <AmiBlitz3_wizzard.ab2@16745>   BEQ 'l50                                                 ;optistring  seem impossible to get work
0002C9B6 <AmiBlitz3_wizzard.ab2@16749> BRA 'l50                                                   ;to deactivate
0002C9BC <AmiBlitz3_wizzard.ab2@16755>   TST.b optistring
0002C9C0 <AmiBlitz3_wizzard.ab2@16756>   BNE.s 'l21
0002C9C6 <AmiBlitz3_wizzard.ab2@16757>   CLR.b string1
0002C9CE <AmiBlitz3_wizzard.ab2@16758>   MOVE.b #1,optistring
0002C9D4 <AmiBlitz3_wizzard.ab2@16759>   TST.b nostringopt
0002C9D8 <AmiBlitz3_wizzard.ab2@16760>   BNE 'l21
0002C9DA <AmiBlitz3_wizzard.ab2@16761>   MOVE.l a5,a4
0002C9DC <AmiBlitz3_wizzard.ab2@16762>   SUBQ.l #1,a4
0002C9DE <AmiBlitz3_wizzard.ab2@16765>     TST.b (a4)
0002C9E2 <AmiBlitz3_wizzard.ab2@16766>     BMI 'l19a
0002C9E6 <AmiBlitz3_wizzard.ab2@16767>     BEQ.s 'l20
0002C9EA <AmiBlitz3_wizzard.ab2@16768>     CMP.b #$22,(a4)
0002C9EE <AmiBlitz3_wizzard.ab2@16769>     BEQ.s 'l19
0002C9F4 <AmiBlitz3_wizzard.ab2@16772>     TST.w string1
0002C9F8 <AmiBlitz3_wizzard.ab2@16773>     BNE 'l11
0002C9FC <AmiBlitz3_wizzard.ab2@16774>     CMP.b #":",(a4)
0002CA00 <AmiBlitz3_wizzard.ab2@16775>     BEQ.s 'l20
0002CA04 <AmiBlitz3_wizzard.ab2@16776>     CMP.b #";",(a4)
0002CA08 <AmiBlitz3_wizzard.ab2@16777>     BEQ.s 'l20
0002CA0C <AmiBlitz3_wizzard.ab2@16778>     CMP.b #"+",(a4)
0002CA10 <AmiBlitz3_wizzard.ab2@16779>     BEQ.s 'l21
0002CA14 <AmiBlitz3_wizzard.ab2@16780>     CMP.b #",",(a4)
0002CA18 <AmiBlitz3_wizzard.ab2@16781>     BEQ.s 'l20                                             ;was l21
0002CA1C <AmiBlitz3_wizzard.ab2@16782>     CMP.b #")",(a4)
0002CA20 <AmiBlitz3_wizzard.ab2@16783>     BEQ.s 'l20                                             ;was l21
0002CA22 <AmiBlitz3_wizzard.ab2@16786>     ADDQ.l #1,a4
0002CA26 <AmiBlitz3_wizzard.ab2@16787> BRA.s 'l10
0002CA2E <AmiBlitz3_wizzard.ab2@16790>   BCHG #0,string1
0002CA32 <AmiBlitz3_wizzard.ab2@16791> BRA 'l18
0002CA34 <AmiBlitz3_wizzard.ab2@16794>   ADDQ.l #1,a4
0002CA36 <AmiBlitz3_wizzard.ab2@16795>   TST.b (a4)
0002CA3A <AmiBlitz3_wizzard.ab2@16796>   BEQ 'l21
0002CA3E <AmiBlitz3_wizzard.ab2@16797> BRA 'l11
0002CA40 <AmiBlitz3_wizzard.ab2@16800>   MOVE.l a5,a4
0002CA42 <AmiBlitz3_wizzard.ab2@16801>   SUBQ.l #1,a4
0002CA46 <AmiBlitz3_wizzard.ab2@16804>   CMP.b #$20,-(a4)
0002CA4A <AmiBlitz3_wizzard.ab2@16805>   BEQ 'll1
0002CA4E <AmiBlitz3_wizzard.ab2@16806>   CMP.b #"+",(a4)
0002CA52 <AmiBlitz3_wizzard.ab2@16807>   BEQ 'l21
0002CA5A <AmiBlitz3_wizzard.ab2@16822>   MOVE.b #2,optistring
0002CA62 <AmiBlitz3_wizzard.ab2@16825>   CMP.b #2,optistring
0002CA66 <AmiBlitz3_wizzard.ab2@16826>   BEQ.s 'l100
0002CA6A <AmiBlitz3_wizzard.ab2@16829>   BSR.w makesbase
0002CA6E <AmiBlitz3_wizzard.ab2@16830>   BSR.w pokedata1                                          ;writestringsizespace
0002CA72 <AmiBlitz3_wizzard.ab2@16831>   BSR.w pokedata1
0002CA74 <AmiBlitz3_wizzard.ab2@16834>   MOVEQ.l #$00,D2
0002CA7A <AmiBlitz3_wizzard.ab2@16837>     MOVE.l a5,lastsourcepos
0002CA7C <AmiBlitz3_wizzard.ab2@16838>     MOVEQ #0,d0
0002CA7E <AmiBlitz3_wizzard.ab2@16839>     MOVE.b (a5)+,d0
0002CA80 <AmiBlitz3_wizzard.ab2@16840>     TST.w D0
0002CA84 <AmiBlitz3_wizzard.ab2@16841>      BEQ.w notqerr
0002CA88 <AmiBlitz3_wizzard.ab2@16842>     CMP.w #$22,D0                                          ; --- " ---
0002CA8C <AmiBlitz3_wizzard.ab2@16843>      BEQ.w JL_0_ADF6
0002CA90 <AmiBlitz3_wizzard.ab2@16844>     CMP.b #"\",d0
0002CA94 <AmiBlitz3_wizzard.ab2@16845>      BNE 'l1
0002CA98 <AmiBlitz3_wizzard.ab2@16846>     CMP.b #"\",(a5)
0002CA9C <AmiBlitz3_wizzard.ab2@16847>      BNE 'l1
0002CAA2 <AmiBlitz3_wizzard.ab2@16848>     TST.b newsyntax
0002CAA6 <AmiBlitz3_wizzard.ab2@16849>      BEQ 'l1
0002CAAC <AmiBlitz3_wizzard.ab2@16850>     CMP.w #"\\",1(a5)                                      ; new compiler constants
0002CAB0 <AmiBlitz3_wizzard.ab2@16851>     BNE 'l2
0002CAB2 <AmiBlitz3_wizzard.ab2@16852>     ADDQ #2,a5
0002CAB4 <AmiBlitz3_wizzard.ab2@16855>     ADDQ.w #1,D2
0002CAB6 <AmiBlitz3_wizzard.ab2@16856>     MOVE.w D0,D1
0002CABA <AmiBlitz3_wizzard.ab2@16857>     BSR.w pokedata1b                                        ;writestring
0002CABE <AmiBlitz3_wizzard.ab2@16858> BRA.w writestring
0002CAC4 <AmiBlitz3_wizzard.ab2@16861>     JSR check_newconstants
0002CAC8 <AmiBlitz3_wizzard.ab2@16862> BRA writestring
0002CACE <AmiBlitz3_wizzard.ab2@16865>   NOT instringon
0002CAD4 <AmiBlitz3_wizzard.ab2@16866>   MOVE.w dontwrite,D1
0002CAD8 <AmiBlitz3_wizzard.ab2@16867>   BNE.w JL_0_AE0A
0002CAE0 <AmiBlitz3_wizzard.ab2@16868>   CMP.b #2,optistring
0002CAE4 <AmiBlitz3_wizzard.ab2@16869>   BEQ 'l10
0002CAEA <AmiBlitz3_wizzard.ab2@16870>     MOVEA.l litdata1,A0
0002CAEC <AmiBlitz3_wizzard.ab2@16871>     CLR.w (A0)+                                            ;writesize
0002CAEE <AmiBlitz3_wizzard.ab2@16872>     MOVE.w D2,(A0)
0002CAF2 <AmiBlitz3_wizzard.ab2@16876>   BSR.w JL_0_AEA4                                          ;writestringconstantcode
0002CAF8 <AmiBlitz3_wizzard.ab2@16877>   ADDQ.l #1,data1
0002CB00 <AmiBlitz3_wizzard.ab2@16878>   BCLR #$0,data1+3
0002CB02 <AmiBlitz3_wizzard.ab2@16879>   MOVEQ.l #$07,D2
0002CB06 <AmiBlitz3_wizzard.ab2@16880> BRA.w get1bytemain
0002CB0A <AmiBlitz3_wizzard.ab2@16884>   BSR.w makename2
0002CB0E <AmiBlitz3_wizzard.ab2@16885>   BSR.w findlabel2
0002CB12 <AmiBlitz3_wizzard.ab2@16886>   BEQ.w JL_0_AE4A
0002CB16 <AmiBlitz3_wizzard.ab2@16887>   BSR.w addlabelhash
0002CB1A <AmiBlitz3_wizzard.ab2@16888>   CLR.l $4(A2)
0002CB1E <AmiBlitz3_wizzard.ab2@16889>   CLR.l $8(A2)
0002CB26 <AmiBlitz3_wizzard.ab2@16891>   MOVE.w linenumat+2,$10(A2)
0002CB2C <AmiBlitz3_wizzard.ab2@16892>   MOVE.w linenumat,d0
0002CB2E <AmiBlitz3_wizzard.ab2@16893>   MOVEQ #0,d1
0002CB32 <AmiBlitz3_wizzard.ab2@16894>   MOVE.b -1(a2,d7),d1
0002CB36 <AmiBlitz3_wizzard.ab2@16895>   MOVE.w d0,0(a2,d1)
0002CB3A <AmiBlitz3_wizzard.ab2@16896> BRA.w JL_0_AE52
0002CB3E <AmiBlitz3_wizzard.ab2@16899>   TST.l $8(A2)
0002CB42 <AmiBlitz3_wizzard.ab2@16900>   BNE.w JL_0_AE88
0002CB48 <AmiBlitz3_wizzard.ab2@16903>   MOVEA.l _execbase,A6
0002CB4A <AmiBlitz3_wizzard.ab2@16904>   MOVEQ.l #$0C+2,D0
0002CB4C <AmiBlitz3_wizzard.ab2@16905>   MOVEQ.l #$01,D1
0002CB52 <AmiBlitz3_wizzard.ab2@16906>   MOVE.l mempool,a0
0002CB56 <AmiBlitz3_wizzard.ab2@16907>   JSR _AllocPooled(a6)
0002CB58 <AmiBlitz3_wizzard.ab2@16909>   MOVEA.l D0,A0
0002CB5C <AmiBlitz3_wizzard.ab2@16910>   MOVE.l $4(A2),(A0)
0002CB60 <AmiBlitz3_wizzard.ab2@16911>   MOVE.l A0,$4(A2)
0002CB68 <AmiBlitz3_wizzard.ab2@16912>   MOVE.l destpointer,$4(A0)
0002CB6C <AmiBlitz3_wizzard.ab2@16913>   ADDQ.l #2,$4(A0)
0002CB74 <AmiBlitz3_wizzard.ab2@16914>   MOVE.w procnum,$8(A0)
0002CB7C <AmiBlitz3_wizzard.ab2@16915>   MOVE.w linenumat+2,$A(A0)
0002CB84 <AmiBlitz3_wizzard.ab2@16916>   MOVE.w linenumat,$c(a0)
0002CB86 <AmiBlitz3_wizzard.ab2@16917> RTS
0002CB8A <AmiBlitz3_wizzard.ab2@16920>   MOVE.l $4(A2),D1
0002CB8E <AmiBlitz3_wizzard.ab2@16921>   BTST #$0,D1
0002CB92 <AmiBlitz3_wizzard.ab2@16922>    BNE.w illlaberr
0002CB98 <AmiBlitz3_wizzard.ab2@16923>   MOVE.w procnum,D1
0002CB9C <AmiBlitz3_wizzard.ab2@16924>   CMP.w $10(A2),D1
0002CBA0 <AmiBlitz3_wizzard.ab2@16925>    BNE.w referr
0002CBA2 <AmiBlitz3_wizzard.ab2@16926> RTS
0002CBA4 <AmiBlitz3_wizzard.ab2@16930>   MOVE.w D0,-(A7)
0002CBAC <AmiBlitz3_wizzard.ab2@16931>   CMP.b #2,optistring
0002CBB0 <AmiBlitz3_wizzard.ab2@16932>   BEQ 'l10
0002CBB6 <AmiBlitz3_wizzard.ab2@16935>   MOVE.w numtoa0,D1
0002CBBA <AmiBlitz3_wizzard.ab2@16936>    BSR.w writeword
0002CBBE <AmiBlitz3_wizzard.ab2@16937>    BSR.w addoff
0002CBC4 <AmiBlitz3_wizzard.ab2@16938>   MOVE.l litdata1,D1
0002CBC8 <AmiBlitz3_wizzard.ab2@16939>    BSR.w writelong
0002CBCE <AmiBlitz3_wizzard.ab2@16940>   MOVE.w pushlen,D1
0002CBD2 <AmiBlitz3_wizzard.ab2@16941>    BSR.w writeword
0002CBD6 <AmiBlitz3_wizzard.ab2@16942>   MOVE.w #$C600,D1
0002CBDA <AmiBlitz3_wizzard.ab2@16943>    BSR.w Atokejsr
0002CBDC <AmiBlitz3_wizzard.ab2@16944>   MOVE.w (A7)+,D0
0002CBDE <AmiBlitz3_wizzard.ab2@16945> RTS
0002CBE0 <AmiBlitz3_wizzard.ab2@16948>   MOVEQ #0,d1
0002CBE4 <AmiBlitz3_wizzard.ab2@16949>   BSR.w pokedata1b
0002CBEA <AmiBlitz3_wizzard.ab2@16950>   MOVE.l destpointer,a4
0002CBEE <AmiBlitz3_wizzard.ab2@16951>   MOVE.w #$203c,d1
0002CBF4 <AmiBlitz3_wizzard.ab2@16952>   TST.w mode
0002CBF8 <AmiBlitz3_wizzard.ab2@16953>   BNE 'lm10
0002CBFE <AmiBlitz3_wizzard.ab2@16954>    ADDQ.w #4,a2offset
0002CC02 <AmiBlitz3_wizzard.ab2@16955>   MOVE.w #$2f3c,d1
0002CC08 <AmiBlitz3_wizzard.ab2@16958>   TST.w mode
0002CC0C <AmiBlitz3_wizzard.ab2@16959>   BEQ 'lm3
0002CC12 <AmiBlitz3_wizzard.ab2@16960>   MOVE.w regnum,D0
0002CC14 <AmiBlitz3_wizzard.ab2@16961>   LSL.w #8,D0
0002CC16 <AmiBlitz3_wizzard.ab2@16962>   LSL.w #1,D0
0002CC18 <AmiBlitz3_wizzard.ab2@16963>   OR.w d0,d1
0002CC1C <AmiBlitz3_wizzard.ab2@16964>   BSR writeword
0002CC20 <AmiBlitz3_wizzard.ab2@16965>   BSR.w addoff
0002CC26 <AmiBlitz3_wizzard.ab2@16966>   MOVE.l litdata1,D1
0002CC2A <AmiBlitz3_wizzard.ab2@16967>   BSR.w writelong
0002CC32 <AmiBlitz3_wizzard.ab2@16968>   CMP.w #3,mode
0002CC36 <AmiBlitz3_wizzard.ab2@16969>   BEQ 'l30
0002CC3C <AmiBlitz3_wizzard.ab2@16970>    ADDQ.w #4,a2offset
0002CC40 <AmiBlitz3_wizzard.ab2@16971>   MOVE.w #$4878,D1
0002CC44 <AmiBlitz3_wizzard.ab2@16972>   BSR.w writeword
0002CC46 <AmiBlitz3_wizzard.ab2@16973>   MOVE.l d2,d1
0002CC4A <AmiBlitz3_wizzard.ab2@16974>   BSR writeword
0002CC4C <AmiBlitz3_wizzard.ab2@16977>   MOVE.w (A7)+,D0
0002CC4E <AmiBlitz3_wizzard.ab2@16978> RTS
0002CC54 <AmiBlitz3_wizzard.ab2@16981>   MOVE.l #$3f3c0007,d1
0002CC58 <AmiBlitz3_wizzard.ab2@16982>   BSR writelong
0002CC5E <AmiBlitz3_wizzard.ab2@16983>   MOVE.w regnum,D1
0002CC60 <AmiBlitz3_wizzard.ab2@16984>   LSL.w #8,D1
0002CC62 <AmiBlitz3_wizzard.ab2@16985>   LSL.w #1,D1
0002CC66 <AmiBlitz3_wizzard.ab2@16986>   ORI.w #$2f3c,d1
0002CC6A <AmiBlitz3_wizzard.ab2@16987>   BSR writeword
0002CC70 <AmiBlitz3_wizzard.ab2@16988>    ADDQ.w #4,a2offset
0002CC72 <AmiBlitz3_wizzard.ab2@16989>   MOVE.l d2,d1
0002CC76 <AmiBlitz3_wizzard.ab2@16990>   BSR writelong
0002CC7A <AmiBlitz3_wizzard.ab2@16991>   MOVE.w #$2f3c,d1
0002CC7E <AmiBlitz3_wizzard.ab2@16992>   BSR writeword
0002CC82 <AmiBlitz3_wizzard.ab2@16993>   BSR.w addoff
0002CC88 <AmiBlitz3_wizzard.ab2@16994>   MOVE.l litdata1,D1
0002CC8C <AmiBlitz3_wizzard.ab2@16995>   BSR.w writelong
0002CC8E <AmiBlitz3_wizzard.ab2@16996>   MOVE.w (A7)+,D0
0002CC90 <AmiBlitz3_wizzard.ab2@16997> RTS
0002CC94 <AmiBlitz3_wizzard.ab2@17001>   BSR.w get1bytemain
0002CC98 <AmiBlitz3_wizzard.ab2@17002>    BSR.w JL_0_AE22
0002CC9E <AmiBlitz3_wizzard.ab2@17003>   MOVE.w regnum,D1
0002CCA0 <AmiBlitz3_wizzard.ab2@17004>   LSL.w #8,D1
0002CCA2 <AmiBlitz3_wizzard.ab2@17005>   LSL.w #1,D1
0002CCA6 <AmiBlitz3_wizzard.ab2@17006>   ORI.w #$203C,D1
0002CCAA <AmiBlitz3_wizzard.ab2@17007>    BSR.w writeword
0002CCAE <AmiBlitz3_wizzard.ab2@17008>    BSR.w addoff
0002CCB2 <AmiBlitz3_wizzard.ab2@17009>   MOVE.l $8(A2),D1
0002CCB6 <AmiBlitz3_wizzard.ab2@17010>    BSR.w writelong
0002CCB8 <AmiBlitz3_wizzard.ab2@17011>   MOVEQ.l #$03,D2
0002CCBE <AmiBlitz3_wizzard.ab2@17012>   CLR.b peekaddrsize
0002CCC2 <AmiBlitz3_wizzard.ab2@17013> BRA.w reget
0002CCC4 <AmiBlitz3_wizzard.ab2@17016>   MOVEQ.l #$00,D3
0002CCC8 <AmiBlitz3_wizzard.ab2@17019>   BSR.w get1bytemain
0002CCCC <AmiBlitz3_wizzard.ab2@17020>    BEQ.w syntaxerr
0002CCD0 <AmiBlitz3_wizzard.ab2@17021>   CMP.w #$22,D0
0002CCD4 <AmiBlitz3_wizzard.ab2@17022>    BEQ.w JL_0_AF1A
0002CCD6 <AmiBlitz3_wizzard.ab2@17023>   LSL.l #8,D3
0002CCD8 <AmiBlitz3_wizzard.ab2@17024>   MOVE.b D0,D3
0002CCDC <AmiBlitz3_wizzard.ab2@17025> BRA.w JL_0_AF02
0002CCE0 <AmiBlitz3_wizzard.ab2@17028>   BSR.w get1bytemain
0002CCE4 <AmiBlitz3_wizzard.ab2@17029> BRA.w JL_0_B46E
0002CCE6 <AmiBlitz3_wizzard.ab2@17032>   MOVE.w D2,-(A7)                                          ;basicvarsforasm
0002CCEA <AmiBlitz3_wizzard.ab2@17033>    BSR.w makename2
0002CCEE <AmiBlitz3_wizzard.ab2@17034>    BSR.w findlabel2
0002CCF2 <AmiBlitz3_wizzard.ab2@17035>    BEQ.w 'l10
0002CCF8 <AmiBlitz3_wizzard.ab2@17036>    LEA ptr_parameterstore,a0
0002CCFE <AmiBlitz3_wizzard.ab2@17037>    CMP.b #"@",-1(a0,d2.w)
0002CD02 <AmiBlitz3_wizzard.ab2@17038>    BNE cnferr
0002CD06 <AmiBlitz3_wizzard.ab2@17039>    CLR.b -1(a0,d2.w)
0002CD08 <AmiBlitz3_wizzard.ab2@17040>    SUBQ.l #1,d2
0002CD0E <AmiBlitz3_wizzard.ab2@17041>    LEA varbase,a2
0002CD12 <AmiBlitz3_wizzard.ab2@17042>    BSR findvariable
0002CD16 <AmiBlitz3_wizzard.ab2@17043>    BNE cnferr
0002CD1A <AmiBlitz3_wizzard.ab2@17044>    CMP.b #"\",d0
0002CD1E <AmiBlitz3_wizzard.ab2@17045>    BNE 'l6
0002CD24 <AmiBlitz3_wizzard.ab2@17046>    ADDQ #1,lastsourcepos
0002CD28 <AmiBlitz3_wizzard.ab2@17047>    MOVE.l $a(a2),a2
0002CD2A <AmiBlitz3_wizzard.ab2@17048>    ADDQ.l #4,a2
0002CD2E <AmiBlitz3_wizzard.ab2@17049>    BSR.w makename2
0002CD32 <AmiBlitz3_wizzard.ab2@17050>    BSR findvariable2
0002CD36 <AmiBlitz3_wizzard.ab2@17051>    BNE cnferr
0002CD3A <AmiBlitz3_wizzard.ab2@17052> BRA.s 'l6                                                  ;???
0002CD3E <AmiBlitz3_wizzard.ab2@17055>    MOVE.w $4(a2),d3
0002CD40 <AmiBlitz3_wizzard.ab2@17056>    EXT.l d3
0002CD44 <AmiBlitz3_wizzard.ab2@17057> BRA JL_0_AF46
0002CD48 <AmiBlitz3_wizzard.ab2@17060>   MOVE.l $8(A2),D3
0002CD50 <AmiBlitz3_wizzard.ab2@17061>   CMPI.l #$1,$4(A2)
0002CD54 <AmiBlitz3_wizzard.ab2@17062>    BEQ.w JL_0_AF46
0002CD5A <AmiBlitz3_wizzard.ab2@17063>   NOT.w asmtype
0002CD5C <AmiBlitz3_wizzard.ab2@17066>   MOVE.w (A7)+,D2
0002CD60 <AmiBlitz3_wizzard.ab2@17067> BRA.w JL_0_B46E
0002CD62 <AmiBlitz3_wizzard.ab2@17071>   MOVE.w D2,-(A7)
0002CD66 <AmiBlitz3_wizzard.ab2@17072>    BSR.w getparameter
0002CD6A <AmiBlitz3_wizzard.ab2@17073>   CMP.w #"{",D0                                          ;test if var = function{}
0002CD6E <AmiBlitz3_wizzard.ab2@17074>    BEQ.w isfunction
0002CD72 <AmiBlitz3_wizzard.ab2@17075>    BSR.w JL_0_8E3C
0002CD76 <AmiBlitz3_wizzard.ab2@17077>    BSR.w calcvar                                         ;getvaroffset+type
0002CD7A <AmiBlitz3_wizzard.ab2@17078>    BSR.w JL_0_B150
0002CD80 <AmiBlitz3_wizzard.ab2@17079>    MOVE.l a2,rightsidetype
0002CD86 <AmiBlitz3_wizzard.ab2@17090>    TST.b typecheck
0002CD8A <AmiBlitz3_wizzard.ab2@17091>    BEQ JL_0_AF66
0002CD94 <AmiBlitz3_wizzard.ab2@17092>    CMP.l #$da01,lasttoken                                  ;poke
0002CD98 <AmiBlitz3_wizzard.ab2@17093>    BEQ 'l1
0002CDA2 <AmiBlitz3_wizzard.ab2@17094>    CMP.l #$da02,lasttoken                                  ;peek
0002CDA6 <AmiBlitz3_wizzard.ab2@17095>    BNE 'l2
0002CDAE <AmiBlitz3_wizzard.ab2@17098>    CMP.w #1,parnum                                         ; is not call when & is used in parameter
0002CDB2 <AmiBlitz3_wizzard.ab2@17099>    BNE JL_0_AF66
0002CDB8 <AmiBlitz3_wizzard.ab2@17100>    MOVE.b d2,peekaddrsize
0002CDBC <AmiBlitz3_wizzard.ab2@17101>    BRA JL_0_AF66
0002CDC2 <AmiBlitz3_wizzard.ab2@17104>   CLR.b peekaddrsize
0002CDC6 <AmiBlitz3_wizzard.ab2@17107>   CMP.w #$1,D2
0002CDCA <AmiBlitz3_wizzard.ab2@17108>    BNE.w JL_0_AF7C
0002CDD0 <AmiBlitz3_wizzard.ab2@17109>   MOVE.w regnum,D1
0002CDD4 <AmiBlitz3_wizzard.ab2@17110>   ORI.w #$4880,D1
0002CDD8 <AmiBlitz3_wizzard.ab2@17111>    BSR.w writeword
0002CDDA <AmiBlitz3_wizzard.ab2@17114>   MOVE.w (A7)+,D3
0002CDDE <AmiBlitz3_wizzard.ab2@17115>    BEQ.w JL_0_AF9E
0002CDE4 <AmiBlitz3_wizzard.ab2@17116>    MOVE.l lastinstructionaddr,a0
0002CDE8 <AmiBlitz3_wizzard.ab2@17117>   CMP.w #$3,D3
0002CDEC <AmiBlitz3_wizzard.ab2@17118>    BNE.w JL_0_AF92
0002CDF0 <AmiBlitz3_wizzard.ab2@17119>   CMP.w #$4,D2
0002CDF4 <AmiBlitz3_wizzard.ab2@17120>    BEQ.w JL_0_AF98
0002CDF6 <AmiBlitz3_wizzard.ab2@17123>   CMP.w D2,D3
0002CDFA <AmiBlitz3_wizzard.ab2@17124>    BLS.w JL_0_AF9E
0002CDFC <AmiBlitz3_wizzard.ab2@17127>   EXG.l D2,D3
0002CDFE <AmiBlitz3_wizzard.ab2@17128>   MOVE.l a0,-(a7)
0002CE04 <AmiBlitz3_wizzard.ab2@17129>   TST.b typecheck
0002CE08 <AmiBlitz3_wizzard.ab2@17130>   BEQ 'ok
0002CE0E <AmiBlitz3_wizzard.ab2@17131>   TST.b notypecheck
0002CE12 <AmiBlitz3_wizzard.ab2@17132>   BNE 'ok
0002CE18 <AmiBlitz3_wizzard.ab2@17133>   MOVE.l leftsidetype,a0
0002CE22 <AmiBlitz3_wizzard.ab2@17134>   CMP.l #0,leftsidetype
0002CE26 <AmiBlitz3_wizzard.ab2@17135>   BEQ 'ok
0002CE2E <AmiBlitz3_wizzard.ab2@17136>   CMP.l #$100,4(a0)
0002CE32 <AmiBlitz3_wizzard.ab2@17137>   BLE 'ok
0002CE36 <AmiBlitz3_wizzard.ab2@17138>   CMP.b #3,d3
0002CE3A <AmiBlitz3_wizzard.ab2@17139>   BEQ 'ok
0002CE3E <AmiBlitz3_wizzard.ab2@17140>   CMP.b #7,d3
0002CE42 <AmiBlitz3_wizzard.ab2@17141>   BEQ 'ok
0002CE48 <AmiBlitz3_wizzard.ab2@17142>   JMP   error_convert_types      ;for all syntax only long and string allowed to assign to a type
0002CE4A <AmiBlitz3_wizzard.ab2@17144>   MOVE.l (a7)+,a0
0002CE4E <AmiBlitz3_wizzard.ab2@17145>   BSR.w writeconvertcode         ;called from var assign
0002CE52 <AmiBlitz3_wizzard.ab2@17148> BRA.w reget
0002CE54 <AmiBlitz3_wizzard.ab2@17151>   MOVEQ.l #$00,D3
0002CE5A <AmiBlitz3_wizzard.ab2@17152>   MOVE.w regnum,D1
0002CE5E <AmiBlitz3_wizzard.ab2@17153>    BEQ.w JL_0_AFC8
0002CE60 <AmiBlitz3_wizzard.ab2@17154>   SUBQ.w #1,D1
0002CE62 <AmiBlitz3_wizzard.ab2@17157>      LSR.l #1,D3
0002CE66 <AmiBlitz3_wizzard.ab2@17158>      BSET #$F,D3
0002CE6A <AmiBlitz3_wizzard.ab2@17159>   DBF D1,JL_0_AFB0b
0002CE70 <AmiBlitz3_wizzard.ab2@17161>    TST.b fpu
0002CE74 <AmiBlitz3_wizzard.ab2@17162>    BEQ 'l1
0002CE7A <AmiBlitz3_wizzard.ab2@17163>    ADDQ.l #2,stacktrack                                    ;intern command
0002CE7C <AmiBlitz3_wizzard.ab2@17164>     MOVE.l a0,-(a7)
0002CE82 <AmiBlitz3_wizzard.ab2@17165>     MOVE.l stacktrack,d1
0002CE88 <AmiBlitz3_wizzard.ab2@17166>     LEA fpustackbase,a0
0002CE8C <AmiBlitz3_wizzard.ab2@17167>     CLR.w 0(a0,d1)
0002CE92 <AmiBlitz3_wizzard.ab2@17168>     CLR.w regmask
0002CE94 <AmiBlitz3_wizzard.ab2@17169>     MOVE.l (a7)+,a0
0002CE98 <AmiBlitz3_wizzard.ab2@17172>   MOVE.w #$48E7,D1
0002CE9C <AmiBlitz3_wizzard.ab2@17173>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002CE9E <AmiBlitz3_wizzard.ab2@17174>   MOVE.w D3,D1
0002CEA2 <AmiBlitz3_wizzard.ab2@17175> BRA.w writeword
0002CEA4 <AmiBlitz3_wizzard.ab2@17180>   MOVEQ.l #$00,D3
0002CEAA <AmiBlitz3_wizzard.ab2@17181>   MOVE.w regnum,D1
0002CEAE <AmiBlitz3_wizzard.ab2@17182>    BEQ.w JL_0_AFC8
0002CEB0 <AmiBlitz3_wizzard.ab2@17183>   SUBQ.w #1,D1
0002CEB2 <AmiBlitz3_wizzard.ab2@17186>     LSR.l #1,D3
0002CEB6 <AmiBlitz3_wizzard.ab2@17187>     BSET #$F,D3
0002CEBA <AmiBlitz3_wizzard.ab2@17188>   DBF D1,JL_0_AFB0
0002CEC0 <AmiBlitz3_wizzard.ab2@17190>    TST.b fpu
0002CEC4 <AmiBlitz3_wizzard.ab2@17191>    BEQ 'l1
0002CECA <AmiBlitz3_wizzard.ab2@17192>    ADDQ.l #2,stacktrack                                    ;intern command
0002CECC <AmiBlitz3_wizzard.ab2@17193>     MOVE.l a0,-(a7)
0002CED2 <AmiBlitz3_wizzard.ab2@17194>     MOVE.l stacktrack,d1
0002CED8 <AmiBlitz3_wizzard.ab2@17195>     LEA fpustackbase,a0
0002CEDC <AmiBlitz3_wizzard.ab2@17196>     CLR.w 0(a0,d1)
0002CEE0 <AmiBlitz3_wizzard.ab2@17197>    CMP.b #5,(a3)                                           ;result float ?
0002CEE4 <AmiBlitz3_wizzard.ab2@17198>     BNE 'nofpu
0002CEEE <AmiBlitz3_wizzard.ab2@17200>     MOVE.w regnum,regnumfunc
0002CEF4 <AmiBlitz3_wizzard.ab2@17203>   CLR.w regmask
0002CEF6 <AmiBlitz3_wizzard.ab2@17204>     MOVE.l (a7)+,a0
0002CEFA <AmiBlitz3_wizzard.ab2@17207>   MOVE.w #$48E7,D1
0002CEFE <AmiBlitz3_wizzard.ab2@17208>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002CF00 <AmiBlitz3_wizzard.ab2@17209>   MOVE.w D3,D1
0002CF04 <AmiBlitz3_wizzard.ab2@17210> BRA.w writeword
0002CF06 <AmiBlitz3_wizzard.ab2@17213> RTS
0002CF08 <AmiBlitz3_wizzard.ab2@17217>   MOVE.l D1,-(A7)
0002CF0C <AmiBlitz3_wizzard.ab2@17218>   MOVE.w #$4EB9,D1
0002CF10 <AmiBlitz3_wizzard.ab2@17219>    BSR.w writeword
0002CF14 <AmiBlitz3_wizzard.ab2@17220>    BSR.w addoff
0002CF16 <AmiBlitz3_wizzard.ab2@17221>   MOVE.l (A7)+,D1
0002CF1A <AmiBlitz3_wizzard.ab2@17222> BRA.w writelong
0002CF1E <AmiBlitz3_wizzard.ab2@17226>    BSR.w findproc                                          ;write function call
0002CF22 <AmiBlitz3_wizzard.ab2@17227>    BEQ 'l1
0002CF28 <AmiBlitz3_wizzard.ab2@17228>    TST.l unusedfunc
0002CF2C <AmiBlitz3_wizzard.ab2@17229>    BEQ noprocerr
0002CF32 <AmiBlitz3_wizzard.ab2@17231>    JSR gotoendsource
0002CF3A <AmiBlitz3_wizzard.ab2@17234>   MOVE.l funcstruct_returntype(a2),rightsidetype
0002CF40 <AmiBlitz3_wizzard.ab2@17235>   TST.l typetocast
0002CF44 <AmiBlitz3_wizzard.ab2@17236>   BEQ 'nocast
0002CF4E <AmiBlitz3_wizzard.ab2@17237>   MOVE.l typetocast,rightsidetype
0002CF54 <AmiBlitz3_wizzard.ab2@17238>   CLR.l typetocast
0002CF56 <AmiBlitz3_wizzard.ab2@17239>   MOVE.l a1,-(a7)
0002CF5C <AmiBlitz3_wizzard.ab2@17240>   MOVE.l rightsidetype,a1
0002CF62 <AmiBlitz3_wizzard.ab2@17241>   CMP.l leftsidetype,a1
0002CF66 <AmiBlitz3_wizzard.ab2@17242>   BEQ 'ok
0002CF6C <AmiBlitz3_wizzard.ab2@17243>   JMP errorconvertreturntype2
0002CF6E <AmiBlitz3_wizzard.ab2@17244> 'ok  MOVE.l (a7)+,a1
0002CF70 <AmiBlitz3_wizzard.ab2@17246>   MOVEQ.l #$00,D1
0002CF74 <AmiBlitz3_wizzard.ab2@17247>   MOVE.b $5(A2),D1
0002CF7A <AmiBlitz3_wizzard.ab2@17248>   MOVE.b d1,retmode
0002CF7E <AmiBlitz3_wizzard.ab2@17249>    BMI.w illprocerr
0002CF84 <AmiBlitz3_wizzard.ab2@17250>    MOVE.b #1,isfunc(a2)
0002CF86 <AmiBlitz3_wizzard.ab2@17251>   MOVE.w D1,-(A7)
0002CF88 <AmiBlitz3_wizzard.ab2@17252>   MOVEQ.l #$00,D1
0002CF8C <AmiBlitz3_wizzard.ab2@17253>   MOVE.b $4(A2),D1
0002CF8E <AmiBlitz3_wizzard.ab2@17254>   LSR.w #4,D1
0002CF92 <AmiBlitz3_wizzard.ab2@17255>    BEQ.w JL_0_B006
0002CF94 <AmiBlitz3_wizzard.ab2@17256>   LSL.w #2,D1
0002CF9A <AmiBlitz3_wizzard.ab2@17257>   SUB.w D1,a2offset
0002CF9E <AmiBlitz3_wizzard.ab2@17260>   CMPI.w #$7,(A7)
0002CFA2 <AmiBlitz3_wizzard.ab2@17261>    BNE.b JL_0_B014
0002CFA4 <AmiBlitz3_wizzard.ab2@17262>   MOVE.l A2,-(A7)
0002CFA8 <AmiBlitz3_wizzard.ab2@17263>    BSR.w makesbase
0002CFAA <AmiBlitz3_wizzard.ab2@17264>   MOVEA.l (A7)+,A2
0002CFB0 <AmiBlitz3_wizzard.ab2@17267>   MOVE.w sbasegot,-(A7)
0002CFB4 <AmiBlitz3_wizzard.ab2@17268>    BEQ.b JL_0_B020
0002CFB8 <AmiBlitz3_wizzard.ab2@17269>    BSR.w dopusha3
0002CFBC <AmiBlitz3_wizzard.ab2@17272>   BSR.w JL_0_AFA2func
0002CFBE <AmiBlitz3_wizzard.ab2@17273>   MOVE.w D3,-(A7)
0002CFC2 <AmiBlitz3_wizzard.ab2@17274>   MOVE.l $E(A2),D1
0002CFC6 <AmiBlitz3_wizzard.ab2@17275>   TST.b $20(a2)                                            ;increase if morepar
0002CFCA <AmiBlitz3_wizzard.ab2@17276>   BNE 'no0par
0002CFCC <AmiBlitz3_wizzard.ab2@17277>   MOVE.l a5,a4
0002CFD0 <AmiBlitz3_wizzard.ab2@17280>   CMP.b #$20,(a4)+
0002CFD4 <AmiBlitz3_wizzard.ab2@17281>   BEQ 'l1
0002CFDA <AmiBlitz3_wizzard.ab2@17282>   CMP.b #"}",-1(a4)
0002CFDE <AmiBlitz3_wizzard.ab2@17283>   BNE  'no0par
0002CFE0 <AmiBlitz3_wizzard.ab2@17284>   MOVEQ #0,d0
0002CFE4 <AmiBlitz3_wizzard.ab2@17287>   LEA $16(A2),A1
0002CFE6 <AmiBlitz3_wizzard.ab2@17290>   MOVE.l d1,-(a7)
0002CFE8 <AmiBlitz3_wizzard.ab2@17291>   MOVE.b (a1),d2
0002CFEA <AmiBlitz3_wizzard.ab2@17292>   MOVE.l d0,d1
0002CFEE <AmiBlitz3_wizzard.ab2@17293>   CMP.w #4,d2
0002CFF2 <AmiBlitz3_wizzard.ab2@17294>   BNE 'l1b
0002CFF8 <AmiBlitz3_wizzard.ab2@17295>   ADD.l #$203c,d1
0002CFFC <AmiBlitz3_wizzard.ab2@17296>   BSR writeword
0002D002 <AmiBlitz3_wizzard.ab2@17297>   MOVE.l #$ffff0000,d1
0002D006 <AmiBlitz3_wizzard.ab2@17298>   BSR writelong
0002D00A <AmiBlitz3_wizzard.ab2@17299> BRA 'l2b
0002D010 <AmiBlitz3_wizzard.ab2@17302>    TST.b fpu
0002D014 <AmiBlitz3_wizzard.ab2@17303>    BNE 'l1c
0002D018 <AmiBlitz3_wizzard.ab2@17304>    CMP.w #5,d2
0002D01C <AmiBlitz3_wizzard.ab2@17305>    BNE 'l1c
0002D022 <AmiBlitz3_wizzard.ab2@17306>    ADD.l #$203c,d1
0002D026 <AmiBlitz3_wizzard.ab2@17307>    BSR writeword
0002D02C <AmiBlitz3_wizzard.ab2@17308>    MOVE.l #$800000c1,d1
0002D030 <AmiBlitz3_wizzard.ab2@17309>    BSR writelong
0002D034 <AmiBlitz3_wizzard.ab2@17310> BRA 'l2b
0002D03A <AmiBlitz3_wizzard.ab2@17313>   ADD.l #$70ff,d1
0002D03E <AmiBlitz3_wizzard.ab2@17314>   BSR writeword
0002D042 <AmiBlitz3_wizzard.ab2@17315>   CMP.w #7,d2
0002D046 <AmiBlitz3_wizzard.ab2@17316>   BNE 'l1d
0002D04C <AmiBlitz3_wizzard.ab2@17317>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002D050 <AmiBlitz3_wizzard.ab2@17318>   BSR writelong
0002D052 <AmiBlitz3_wizzard.ab2@17319>   MOVEQ #0,d1
0002D056 <AmiBlitz3_wizzard.ab2@17320>   BSR writeword
0002D05C <AmiBlitz3_wizzard.ab2@17321>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002D060 <AmiBlitz3_wizzard.ab2@17322>   BSR writelong
0002D062 <AmiBlitz3_wizzard.ab2@17323>   MOVEQ #0,d1
0002D066 <AmiBlitz3_wizzard.ab2@17324>   BSR writeword
0002D06C <AmiBlitz3_wizzard.ab2@17326> 'l1d  MOVE.l #$f23c5000,d1
0002D06E <AmiBlitz3_wizzard.ab2@17327>   MOVE.l d0,d2
0002D070 <AmiBlitz3_wizzard.ab2@17328>   ASR.l #2,d2
0002D072 <AmiBlitz3_wizzard.ab2@17329>   ADD.l d2,d1
0002D076 <AmiBlitz3_wizzard.ab2@17330>   BSR writelong
0002D07A <AmiBlitz3_wizzard.ab2@17331>   MOVE.w #$ffff,d1
0002D07E <AmiBlitz3_wizzard.ab2@17332>   BSR writeword
0002D080 <AmiBlitz3_wizzard.ab2@17336>   MOVE.l (a7)+,d1
0002D082 <AmiBlitz3_wizzard.ab2@17337>      ADDQ.l #1,a1
0002D088 <AmiBlitz3_wizzard.ab2@17338>      ADD.l #$0200,d0
0002D08E <AmiBlitz3_wizzard.ab2@17339>      CMP.l #$0e00,d0
0002D092 <AmiBlitz3_wizzard.ab2@17340>      BEQ syntaxerr
0002D094 <AmiBlitz3_wizzard.ab2@17341>      TST.b (a1)
0002D098 <AmiBlitz3_wizzard.ab2@17342>      BNE 'again
0002D09C <AmiBlitz3_wizzard.ab2@17343> BRA 'p1
0002D0A0 <AmiBlitz3_wizzard.ab2@17346>   TST.b $4(A2)
0002D0A4 <AmiBlitz3_wizzard.ab2@17347>    BNE.w JL_0_B03E
0002D0A8 <AmiBlitz3_wizzard.ab2@17350>   BSR.w JL_0_AFCA
0002D0AC <AmiBlitz3_wizzard.ab2@17351>    BSR.w get1bytemain
0002D0B0 <AmiBlitz3_wizzard.ab2@17352> BRA.w JL_0_B06C
0002D0B6 <AmiBlitz3_wizzard.ab2@17356>   MOVE.w regnum,-(A7)
0002D0C0 <AmiBlitz3_wizzard.ab2@17357>   MOVE.w regnum,regnumfunc
0002D0C2 <AmiBlitz3_wizzard.ab2@17360>   MOVE.l D1,-(A7)                                          ;write functioncall with pars
0002D0CA <AmiBlitz3_wizzard.ab2@17361>   MOVE.b #1,funccall
0002D0CC <AmiBlitz3_wizzard.ab2@17362>   MOVEQ.l #$00,D0
0002D0D0 <AmiBlitz3_wizzard.ab2@17363>   MOVE.b $4(A2),D0
0002D0DA <AmiBlitz3_wizzard.ab2@17364>   MOVE.w a2offset,a2offset2
0002D0E2 <AmiBlitz3_wizzard.ab2@17365>   MOVE.b 5(a2),retmode
0002D0E8 <AmiBlitz3_wizzard.ab2@17366>   MOVE.l a2,currentfunccall
0002D0EC <AmiBlitz3_wizzard.ab2@17367>   LEA $16(A2),A2
0002D0F2 <AmiBlitz3_wizzard.ab2@17368>   CLR.w regnum
0002D0F8 <AmiBlitz3_wizzard.ab2@17369>   CLR.w regmask
0002D0FE <AmiBlitz3_wizzard.ab2@17370>   MOVE.b isconstantvalue,-(a7)
0002D104 <AmiBlitz3_wizzard.ab2@17371>   MOVE.b funcparloop,-(a7)
0002D10C <AmiBlitz3_wizzard.ab2@17372>   MOVE.b #1,funcparloop
0002D112 <AmiBlitz3_wizzard.ab2@17373>   MOVE.l rightsidetype,-(a7)
0002D118 <AmiBlitz3_wizzard.ab2@17374>   MOVE.l leftsidetype,-(a7)                               ;store values To stack so it can work recursive
0002D11E <AmiBlitz3_wizzard.ab2@17375>   MOVE.b blitzparloop,-(a7)
0002D124 <AmiBlitz3_wizzard.ab2@17376>   CLR.b blitzparloop
0002D12A <AmiBlitz3_wizzard.ab2@17377>   JSR fetchpees2
0002D130 <AmiBlitz3_wizzard.ab2@17378>   MOVE.b (a7)+,blitzparloop
0002D136 <AmiBlitz3_wizzard.ab2@17379>   MOVE.l (a7)+,leftsidetype
0002D13C <AmiBlitz3_wizzard.ab2@17380>   MOVE.l (a7)+,rightsidetype
0002D142 <AmiBlitz3_wizzard.ab2@17381>   MOVE.b (a7)+,funcparloop
0002D148 <AmiBlitz3_wizzard.ab2@17382>   MOVE.b (a7)+,isconstantvalue
0002D14E <AmiBlitz3_wizzard.ab2@17383>   JSR chkstak
0002D150 <AmiBlitz3_wizzard.ab2@17384>   MOVE.l (A7)+,D1
0002D154 <AmiBlitz3_wizzard.ab2@17400>    BTST #0,d1
0002D158 <AmiBlitz3_wizzard.ab2@17401>    BNE intern1
0002D15C <AmiBlitz3_wizzard.ab2@17402>    BSR.w JL_0_AFCA
0002D162 <AmiBlitz3_wizzard.ab2@17424>   MOVE.w (A7)+,regnum
0002D166 <AmiBlitz3_wizzard.ab2@17427>   CMP.w #"}",D0
0002D16A <AmiBlitz3_wizzard.ab2@17428>    BNE.w errorbracketmiss2
0002D16C <AmiBlitz3_wizzard.ab2@17429>    MOVEQ #0,d1                                            ; end of function call pars
0002D172 <AmiBlitz3_wizzard.ab2@17430>   MOVE.w regnum,D1
0002D176 <AmiBlitz3_wizzard.ab2@17431>    BEQ.w JL_0_B08A
0002D17C <AmiBlitz3_wizzard.ab2@17432>    TST.b fpu
0002D180 <AmiBlitz3_wizzard.ab2@17433>    BEQ 'old
0002D188 <AmiBlitz3_wizzard.ab2@17434>    CMP.b #5,retmode
0002D18C <AmiBlitz3_wizzard.ab2@17435>    BNE 'old
0002D18E <AmiBlitz3_wizzard.ab2@17436>    ASL.l #7,d1
0002D194 <AmiBlitz3_wizzard.ab2@17437>    OR.l #$f2000000,d1
0002D198 <AmiBlitz3_wizzard.ab2@17438>    BSR writelong
0002D19C <AmiBlitz3_wizzard.ab2@17439> BRA JL_0_B08A
0002D19E <AmiBlitz3_wizzard.ab2@17441>  'old  LSL.w #8,D1
0002D1A0 <AmiBlitz3_wizzard.ab2@17442>   LSL.w #1,D1
0002D1A4 <AmiBlitz3_wizzard.ab2@17443>   ORI.w #$2000,D1
0002D1A8 <AmiBlitz3_wizzard.ab2@17444>    BSR.w writeword
0002D1AA <AmiBlitz3_wizzard.ab2@17447>    MOVE.w (A7)+,D3
0002D1AE <AmiBlitz3_wizzard.ab2@17448>    BEQ.w JL_0_B0A8
0002D1B4 <AmiBlitz3_wizzard.ab2@17449>    TST.b fpu
0002D1B8 <AmiBlitz3_wizzard.ab2@17450>    BEQ 'old
0002D1BA <AmiBlitz3_wizzard.ab2@17451>    MOVE.l d0,-(a7)
0002D1BE <AmiBlitz3_wizzard.ab2@17452>    MOVE.w #8,d0
0002D1C0 <AmiBlitz3_wizzard.ab2@17453>    MOVE.l a0,-(a7)
0002D1C6 <AmiBlitz3_wizzard.ab2@17454>    MOVE.l stacktrack,d1
0002D1CC <AmiBlitz3_wizzard.ab2@17455>    LEA fpustackbase,a0
0002D1D4 <AmiBlitz3_wizzard.ab2@17456>    MOVE.w 0(a0,d1),regmask
0002D1D6 <AmiBlitz3_wizzard.ab2@17457>    MOVE.l (a7)+,a0
0002D1DA <AmiBlitz3_wizzard.ab2@17460>   BEQ 'ready
0002D1E0 <AmiBlitz3_wizzard.ab2@17461>    BTST d0,regmask
0002D1E4 <AmiBlitz3_wizzard.ab2@17462>    BEQ 'noa7
0002D1E6 <AmiBlitz3_wizzard.ab2@17463>    MOVEQ #0,d1
0002D1E8 <AmiBlitz3_wizzard.ab2@17464>    MOVE.w d0,d1
0002D1EA <AmiBlitz3_wizzard.ab2@17465>    SUBQ.w #1,d1
0002D1EC <AmiBlitz3_wizzard.ab2@17466>    ASL #7,d1
0002D1F2 <AmiBlitz3_wizzard.ab2@17468>    OR.l #$f21f5400,d1                                      ;fmove.d (a7)+
0002D1F6 <AmiBlitz3_wizzard.ab2@17469>    BSR writelong
0002D1FC <AmiBlitz3_wizzard.ab2@17470>    SUBQ.l #2,stacktrack
0002D1FE <AmiBlitz3_wizzard.ab2@17473>    SUBQ.w #1,d0
0002D202 <AmiBlitz3_wizzard.ab2@17474>    BNE 'loop
0002D208 <AmiBlitz3_wizzard.ab2@17477>   SUBQ.l #2,stacktrack                                     ;integer sub
0002D20A <AmiBlitz3_wizzard.ab2@17478>   MOVE.l (a7)+,d0
0002D20E <AmiBlitz3_wizzard.ab2@17481>   MOVE.w #$4CDF,D1
0002D212 <AmiBlitz3_wizzard.ab2@17482>    BSR.w writeword
0002D214 <AmiBlitz3_wizzard.ab2@17483>   MOVEQ.l #$00,D1
0002D216 <AmiBlitz3_wizzard.ab2@17484>   MOVEQ.l #$0F,D4
0002D218 <AmiBlitz3_wizzard.ab2@17487>     LSL.w #1,D3
0002D21A <AmiBlitz3_wizzard.ab2@17488>     ROXR.w #1,D1
0002D21E <AmiBlitz3_wizzard.ab2@17489>   DBF D4,JL_0_B09C                                         ;movem.l (a7)+,dx
0002D222 <AmiBlitz3_wizzard.ab2@17491>     BSR.w writeword
0002D228 <AmiBlitz3_wizzard.ab2@17492>    CLR.w regnumfunc
0002D22A <AmiBlitz3_wizzard.ab2@17495>   MOVE.w (A7)+,D1
0002D22E <AmiBlitz3_wizzard.ab2@17496>    BEQ.b JL_0_B0D2
0002D232 <AmiBlitz3_wizzard.ab2@17497>   CMPI.w #$7,(A7)
0002D236 <AmiBlitz3_wizzard.ab2@17498>    BEQ.b JL_0_B0C4
0002D23C <AmiBlitz3_wizzard.ab2@17499>   LEA geta3,A0
0002D242 <AmiBlitz3_wizzard.ab2@17500>   LEA numtoa0,A1
0002D246 <AmiBlitz3_wizzard.ab2@17501>    BSR.w pokecode
0002D24A <AmiBlitz3_wizzard.ab2@17502> BRA.b JL_0_B0CE
0002D250 <AmiBlitz3_wizzard.ab2@17505>   MOVE.w deca3,D1
0002D254 <AmiBlitz3_wizzard.ab2@17506>    BSR.w writeword
0002D258 <AmiBlitz3_wizzard.ab2@17509>   BSR.w dopulla3                                           ;fix up string base
0002D25A <AmiBlitz3_wizzard.ab2@17512>   MOVE.w (A7)+,D2                                          ;what it returns!
0002D25E <AmiBlitz3_wizzard.ab2@17513>   CMP.w #$7,D2
0002D262 <AmiBlitz3_wizzard.ab2@17514>    BNE.w JL_0_B0EC
0002D268 <AmiBlitz3_wizzard.ab2@17515>   MOVE.w putstlen,D1
0002D26E <AmiBlitz3_wizzard.ab2@17516>   OR.w regnum,D1
0002D272 <AmiBlitz3_wizzard.ab2@17517>    BSR.w writeword
0002D276 <AmiBlitz3_wizzard.ab2@17520>   BSR.w get1bytemain
0002D27A <AmiBlitz3_wizzard.ab2@17521> BRA.w JL_0_AF66
0002D27C <AmiBlitz3_wizzard.ab2@17525> deca3:   Dc.b $53,$4B                                      ;SUBQ.W  #1,A3
0002D284 <AmiBlitz3_wizzard.ab2@17530>   CMP.b #2,optistring
0002D288 <AmiBlitz3_wizzard.ab2@17531>   BEQ fs2
0002D28C <AmiBlitz3_wizzard.ab2@17532>   BSR.w makesbase                                          ;writestringvariable
0002D290 <AmiBlitz3_wizzard.ab2@17533>   BTST #$F,D2
0002D294 <AmiBlitz3_wizzard.ab2@17534>    BNE.w JL_0_B112
0002D29A <AmiBlitz3_wizzard.ab2@17535>   MOVE.w D3,leaa5d3a2+2
0002D2A0 <AmiBlitz3_wizzard.ab2@17536>   MOVE.l leaa5d3a2,D1
0002D2A4 <AmiBlitz3_wizzard.ab2@17537>    BSR.w pokela5s
0002D2AA <AmiBlitz3_wizzard.ab2@17540>   MOVE.w regnum,D1
0002D2AC <AmiBlitz3_wizzard.ab2@17541>   LSL.w #8,D1
0002D2AE <AmiBlitz3_wizzard.ab2@17542>   LSL.w #1,D1
0002D2B2 <AmiBlitz3_wizzard.ab2@17543>   ORI.w #$7000,D1
0002D2B8 <AmiBlitz3_wizzard.ab2@17544>   LEA stvarget2,A0
0002D2BA <AmiBlitz3_wizzard.ab2@17545>   MOVE.w D1,(A0)
0002D2C0 <AmiBlitz3_wizzard.ab2@17546>   MOVE.w regnum,D1
0002D2C6 <AmiBlitz3_wizzard.ab2@17547>   ANDI.w #$FFF8,$2(A0)
0002D2CA <AmiBlitz3_wizzard.ab2@17548>   OR.w D1,$2(A0)
0002D2D0 <AmiBlitz3_wizzard.ab2@17549>   LEA stvarget2f,A1
0002D2D4 <AmiBlitz3_wizzard.ab2@17550>    BSR.w pokecode
0002D2D8 <AmiBlitz3_wizzard.ab2@17551>   MOVE.w #$C600,D1
0002D2DC <AmiBlitz3_wizzard.ab2@17552>    BSR.w Atokejsr
0002D2DE <AmiBlitz3_wizzard.ab2@17553>   MOVEQ.l #$07,D2
0002D2E2 <AmiBlitz3_wizzard.ab2@17554> BRA.w reget
0002D2E8 <AmiBlitz3_wizzard.ab2@17557>      TST.w stackpar
0002D2EC <AmiBlitz3_wizzard.ab2@17558>      BMI 'l10
0002D2F2 <AmiBlitz3_wizzard.ab2@17559>      MOVE.l #$3f3c0007,d1
0002D2F8 <AmiBlitz3_wizzard.ab2@17560>      ADDQ.w #2,a2offset
0002D2FC <AmiBlitz3_wizzard.ab2@17561>      BSR writelong
0002D300 <AmiBlitz3_wizzard.ab2@17564>   MOVE.w #$4878,d1
0002D306 <AmiBlitz3_wizzard.ab2@17565>      CLR.w stackpar
0002D30A <AmiBlitz3_wizzard.ab2@17566>      BSR writeword
0002D30E <AmiBlitz3_wizzard.ab2@17567>      MOVE.w #$0,d1
0002D312 <AmiBlitz3_wizzard.ab2@17568>      BSR writeword
0002D316 <AmiBlitz3_wizzard.ab2@17569>      MOVE.w #$246d,d1
0002D31A <AmiBlitz3_wizzard.ab2@17570>      BSR writeword
0002D31C <AmiBlitz3_wizzard.ab2@17571>      MOVE.w d3,d1
0002D320 <AmiBlitz3_wizzard.ab2@17572>      BSR writeword
0002D326 <AmiBlitz3_wizzard.ab2@17573>      MOVE.l #$4a926704,d1
0002D32A <AmiBlitz3_wizzard.ab2@17574>      BSR writelong
0002D330 <AmiBlitz3_wizzard.ab2@17575>      MOVE.l #$2eaafffc,d1
0002D334 <AmiBlitz3_wizzard.ab2@17576>      BSR writelong
0002D338 <AmiBlitz3_wizzard.ab2@17577>      MOVE.w #$2f0a,d1
0002D33E <AmiBlitz3_wizzard.ab2@17578>      ADDQ.w #8,a2offset
0002D342 <AmiBlitz3_wizzard.ab2@17579>      BSR writeword
0002D346 <AmiBlitz3_wizzard.ab2@17580> BRA.w reget
0002D34A <AmiBlitz3_wizzard.ab2@17583>   CMP.b #$7,D2                                             ;load basic var
0002D34E <AmiBlitz3_wizzard.ab2@17584>    BEQ.w JL_0_B0F6
0002D354 <AmiBlitz3_wizzard.ab2@17586>    TST.b iee
0002D358 <AmiBlitz3_wizzard.ab2@17587>    BEQ 'noiee
0002D35C <AmiBlitz3_wizzard.ab2@17588>    CMP.b #5,d2
0002D360 <AmiBlitz3_wizzard.ab2@17589>    BNE 'noiee
0002D362 <AmiBlitz3_wizzard.ab2@17590>    MOVE.l d0,-(a7)                                         ;fpu load var
0002D366 <AmiBlitz3_wizzard.ab2@17591>    BTST #15,d2
0002D36A <AmiBlitz3_wizzard.ab2@17592>    BEQ 'var
0002D370 <AmiBlitz3_wizzard.ab2@17593>    CMP.l #$7fff,d3
0002D374 <AmiBlitz3_wizzard.ab2@17594>    BGT 'longoffset
0002D37A <AmiBlitz3_wizzard.ab2@17595>    MOVE.l #$f22a4400,d1                                    ;newtype     >32kb
0002D37C <AmiBlitz3_wizzard.ab2@17596>    TST.w d3                                                ;offset =0
0002D380 <AmiBlitz3_wizzard.ab2@17597>    BNE 'offset
0002D386 <AmiBlitz3_wizzard.ab2@17600>   MOVE.l #$f2124400,d1
0002D388 <AmiBlitz3_wizzard.ab2@17601>    MOVEQ #0,d3
0002D38C <AmiBlitz3_wizzard.ab2@17602> BRA 'glob
0002D392 <AmiBlitz3_wizzard.ab2@17605>   SUBQ.l #4,destpointer
0002D396 <AmiBlitz3_wizzard.ab2@17606> BRA 'glob
0002D39C <AmiBlitz3_wizzard.ab2@17609>   TST.b fast
0002D3A0 <AmiBlitz3_wizzard.ab2@17610>    BEQ 'nofastload
0002D3A6 <AmiBlitz3_wizzard.ab2@17611>    TST.w regnum
0002D3AA <AmiBlitz3_wizzard.ab2@17612>    BNE 'nofastload
0002D3B0 <AmiBlitz3_wizzard.ab2@17613>    CMP.l fp0addr,a4
0002D3B4 <AmiBlitz3_wizzard.ab2@17614>    BNE 'nofastload
0002D3BA <AmiBlitz3_wizzard.ab2@17615>    MOVE.l fp0iff,d1
0002D3C0 <AmiBlitz3_wizzard.ab2@17616>    CMP.l firstiff,d1
0002D3C4 <AmiBlitz3_wizzard.ab2@17617>    BNE 'nofastload
0002D3CA <AmiBlitz3_wizzard.ab2@17618>    MOVE.w varmode,d1
0002D3D0 <AmiBlitz3_wizzard.ab2@17619>    CMP.w fp0mode,d1
0002D3D4 <AmiBlitz3_wizzard.ab2@17620>    BNE 'nofastload
0002D3DA <AmiBlitz3_wizzard.ab2@17621>    CMP.w fp0var,d3
0002D3DE <AmiBlitz3_wizzard.ab2@17622>    BNE 'nofastload
0002D3E2 <AmiBlitz3_wizzard.ab2@17623>    BCLR #16,d2
0002D3E4 <AmiBlitz3_wizzard.ab2@17624>    MOVE.l (a7)+,d0
0002D3E6 <AmiBlitz3_wizzard.ab2@17625> RTS
0002D3E8 <AmiBlitz3_wizzard.ab2@17628>    MOVEQ #0,d0
0002D3EE <AmiBlitz3_wizzard.ab2@17629>    MOVE.w regnum,d0
0002D3F4 <AmiBlitz3_wizzard.ab2@17630>    CMP.l maxregs,d0
0002D3F8 <AmiBlitz3_wizzard.ab2@17631>    BLE 'ok
0002D3FE <AmiBlitz3_wizzard.ab2@17632>    LEA cmplxerr,a0
0002D400 <AmiBlitz3_wizzard.ab2@17633>   MOVE.l a0,-(a7)
0002D406 <AmiBlitz3_wizzard.ab2@17634> JMP handle_compileerror
0002D40C <AmiBlitz3_wizzard.ab2@17637>    LEA regtable,a4
0002D40E <AmiBlitz3_wizzard.ab2@17638>    TST.l (a4)
0002D412 <AmiBlitz3_wizzard.ab2@17639>    BEQ 'noreg
0002D416 <AmiBlitz3_wizzard.ab2@17640>    CMP.w 0+4(a4),d3
0002D41A <AmiBlitz3_wizzard.ab2@17641>    BNE 'doreg1
0002D420 <AmiBlitz3_wizzard.ab2@17642>    MOVE.l #$f2001c00,d1
0002D426 <AmiBlitz3_wizzard.ab2@17643>    MOVE.w regnum,d0
0002D428 <AmiBlitz3_wizzard.ab2@17644>    ASL.w #7,d0
0002D42A <AmiBlitz3_wizzard.ab2@17645>    OR.w d0,d1
0002D42E <AmiBlitz3_wizzard.ab2@17646>    BSR writelong
0002D430 <AmiBlitz3_wizzard.ab2@17647>    MOVE.l (a7)+,d0
0002D432 <AmiBlitz3_wizzard.ab2@17648> RTS
0002D436 <AmiBlitz3_wizzard.ab2@17651>   CMP.w 8+4(a4),d3
0002D43A <AmiBlitz3_wizzard.ab2@17652>    BNE 'doreg2
0002D440 <AmiBlitz3_wizzard.ab2@17653>    MOVE.l #$f2001800,d1
0002D446 <AmiBlitz3_wizzard.ab2@17654>    MOVE.w regnum,d0
0002D448 <AmiBlitz3_wizzard.ab2@17655>    ASL.w #7,d0
0002D44A <AmiBlitz3_wizzard.ab2@17656>    OR.w d0,d1
0002D44E <AmiBlitz3_wizzard.ab2@17657>    BSR writelong
0002D450 <AmiBlitz3_wizzard.ab2@17658>    MOVE.l (a7)+,d0
0002D452 <AmiBlitz3_wizzard.ab2@17659> RTS
0002D456 <AmiBlitz3_wizzard.ab2@17662>   CMP.w 16+4(a4),d3
0002D45A <AmiBlitz3_wizzard.ab2@17663>    BNE 'doreg3
0002D460 <AmiBlitz3_wizzard.ab2@17664>    MOVE.l #$f2001400,d1
0002D466 <AmiBlitz3_wizzard.ab2@17665>    MOVE.w regnum,d0
0002D468 <AmiBlitz3_wizzard.ab2@17666>    ASL.w #7,d0
0002D46A <AmiBlitz3_wizzard.ab2@17667>    OR.w d0,d1
0002D46E <AmiBlitz3_wizzard.ab2@17668>    BSR  writelong
0002D470 <AmiBlitz3_wizzard.ab2@17669>    MOVE.l (a7)+,d0
0002D472 <AmiBlitz3_wizzard.ab2@17670> RTS
0002D476 <AmiBlitz3_wizzard.ab2@17673>   CMP.w 24+4(a4),d3
0002D47A <AmiBlitz3_wizzard.ab2@17674>    BNE 'doreg4
0002D480 <AmiBlitz3_wizzard.ab2@17675>    MOVE.l #$f2001000,d1
0002D486 <AmiBlitz3_wizzard.ab2@17676>    MOVE.w regnum,d0
0002D488 <AmiBlitz3_wizzard.ab2@17677>    ASL.w #7,d0
0002D48A <AmiBlitz3_wizzard.ab2@17678>    OR.w d0,d1
0002D48E <AmiBlitz3_wizzard.ab2@17679>    BSR writelong
0002D490 <AmiBlitz3_wizzard.ab2@17680>    MOVE.l (a7)+,d0
0002D492 <AmiBlitz3_wizzard.ab2@17681> RTS
0002D496 <AmiBlitz3_wizzard.ab2@17684>    CMP.w 32+4(a4),d3
0002D49A <AmiBlitz3_wizzard.ab2@17685>    BNE 'noreg
0002D4A0 <AmiBlitz3_wizzard.ab2@17686>    MOVE.l #$f2000c00,d1
0002D4A6 <AmiBlitz3_wizzard.ab2@17687>    MOVE.w regnum,d0
0002D4A8 <AmiBlitz3_wizzard.ab2@17688>    ASL.w #7,d0
0002D4AA <AmiBlitz3_wizzard.ab2@17689>    OR.w d0,d1
0002D4AE <AmiBlitz3_wizzard.ab2@17690>    BSR writelong
0002D4B0 <AmiBlitz3_wizzard.ab2@17691>    MOVE.l (a7)+,d0
0002D4B2 <AmiBlitz3_wizzard.ab2@17692> RTS
0002D4B8 <AmiBlitz3_wizzard.ab2@17695>    MOVE.l #$f22d4400,d1                                    ;var
0002D4BE <AmiBlitz3_wizzard.ab2@17696>    TST.w varmode
0002D4C2 <AmiBlitz3_wizzard.ab2@17697>   BEQ 'glob
0002D4C6 <AmiBlitz3_wizzard.ab2@17698>   BCLR #16,d1                                              ;local
0002D4C8 <AmiBlitz3_wizzard.ab2@17701>    MOVEQ #0,d0
0002D4CE <AmiBlitz3_wizzard.ab2@17702>    MOVE.w regnum,d0
0002D4D2 <AmiBlitz3_wizzard.ab2@17703>    CMP.w #7,d0
0002D4D6 <AmiBlitz3_wizzard.ab2@17704>    BLE 'ok2
0002D4DC <AmiBlitz3_wizzard.ab2@17705>    LEA cmplxerr,a0
0002D4DE <AmiBlitz3_wizzard.ab2@17706>   MOVE.l a0,-(a7)
0002D4E4 <AmiBlitz3_wizzard.ab2@17707> JMP handle_compileerror
0002D4E6 <AmiBlitz3_wizzard.ab2@17710>      ASL.w #7,d0
0002D4E8 <AmiBlitz3_wizzard.ab2@17711>    OR.l d0,d1
0002D4F0 <AmiBlitz3_wizzard.ab2@17712>    CMP.l #doublecheck,8(a2)
0002D4F4 <AmiBlitz3_wizzard.ab2@17713>    BNE 'dbl
0002D4FA <AmiBlitz3_wizzard.ab2@17714>    OR.l #$00001000,d1
0002D4FE <AmiBlitz3_wizzard.ab2@17717>   BSR writelong
0002D500 <AmiBlitz3_wizzard.ab2@17718>    MOVE.l (a7)+,d0
0002D504 <AmiBlitz3_wizzard.ab2@17719>    AND.w #$ff,d2
0002D506 <AmiBlitz3_wizzard.ab2@17720>    MOVE.w d3,d1
0002D50A <AmiBlitz3_wizzard.ab2@17721>    BEQ 'nooffs
0002D50E <AmiBlitz3_wizzard.ab2@17722> BRA writeword
0002D510 <AmiBlitz3_wizzard.ab2@17727> RTS
0002D516 <AmiBlitz3_wizzard.ab2@17730>   MOVE.w regnum,D1
0002D51C <AmiBlitz3_wizzard.ab2@17731>   MOVE.w d1,load_var_reg
0002D51E <AmiBlitz3_wizzard.ab2@17732>   LSL.w #8,D1
0002D528 <AmiBlitz3_wizzard.ab2@17733>   MOVE.l destpointer,load_var_addr
0002D52E <AmiBlitz3_wizzard.ab2@17734>   MOVE.w d2,load_var_size
0002D530 <AmiBlitz3_wizzard.ab2@17735>   LSL.w #1,D1
0002D534 <AmiBlitz3_wizzard.ab2@17736>   BTST #$E,D2
0002D538 <AmiBlitz3_wizzard.ab2@17737>    BNE.w JL_0_B17A
0002D53A <AmiBlitz3_wizzard.ab2@17738>   TST.b D2
0002D53E <AmiBlitz3_wizzard.ab2@17739>    BNE.w JL_0_B17E
0002D540 <AmiBlitz3_wizzard.ab2@17740>   MOVEQ.l #$03,D2
0002D544 <AmiBlitz3_wizzard.ab2@17741>   ORI.w #$200A,D1
0002D548 <AmiBlitz3_wizzard.ab2@17742> BRA.w writeword
0002D54C <AmiBlitz3_wizzard.ab2@17745>   MOVE.b #$3,D2
0002D550 <AmiBlitz3_wizzard.ab2@17748>   BTST #$F,D2
0002D554 <AmiBlitz3_wizzard.ab2@17749>    BEQ.w JL_0_B19A                                         ;loadarray
0002D55A <AmiBlitz3_wizzard.ab2@17750>    TST.b fast                                              ;lea->move xx(a2)
0002D55E <AmiBlitz3_wizzard.ab2@17751>    BEQ 'la10
0002D564 <AmiBlitz3_wizzard.ab2@17756>    CLR.l load_var_addr
0002D568 <AmiBlitz3_wizzard.ab2@17757> BRA 'la10
0002D570 <AmiBlitz3_wizzard.ab2@17759>    CMP.w #$2012,movea2dn                                  ;??Looks like dead code??
0002D574 <AmiBlitz3_wizzard.ab2@17760>    BNE 'la10
0002D57A <AmiBlitz3_wizzard.ab2@17761>    TST.b optiarray
0002D57E <AmiBlitz3_wizzard.ab2@17762>    BNE 'la10
0002D584 <AmiBlitz3_wizzard.ab2@17763>    MOVE.l destpointer,a4
0002D58A <AmiBlitz3_wizzard.ab2@17764>    SUB.l loada,a4
0002D58E <AmiBlitz3_wizzard.ab2@17765>    CMP.w #4,a4
0002D592 <AmiBlitz3_wizzard.ab2@17766>    BEQ 'la100
0002D596 <AmiBlitz3_wizzard.ab2@17767>    CMP.w #2,a4
0002D59A <AmiBlitz3_wizzard.ab2@17768>    BNE 'la10
0002D5A0 <AmiBlitz3_wizzard.ab2@17769>    MOVE.l destpointer,a4
0002D5A4 <AmiBlitz3_wizzard.ab2@17770>    CMP.b #3,d2
0002D5A8 <AmiBlitz3_wizzard.ab2@17771>    BCS 'la110
0002D5AE <AmiBlitz3_wizzard.ab2@17772>    MOVE.w #$202a,-2(a4)
0002D5B2 <AmiBlitz3_wizzard.ab2@17773>    OR.w d1,-2(a4)
0002D5B8 <AmiBlitz3_wizzard.ab2@17774>    MOVE.w arrayoffset,d1
0002D5BC <AmiBlitz3_wizzard.ab2@17775>    BSR writeword
0002D5C0 <AmiBlitz3_wizzard.ab2@17776> BRA JL_0_B194
0002D5C4 <AmiBlitz3_wizzard.ab2@17779>    CMP.b #2,d2
0002D5C8 <AmiBlitz3_wizzard.ab2@17780>    BNE 'la120
0002D5CE <AmiBlitz3_wizzard.ab2@17781>     MOVE.w #$302a,-2(a4)
0002D5D2 <AmiBlitz3_wizzard.ab2@17782>    OR.w d1,-2(a4)
0002D5D8 <AmiBlitz3_wizzard.ab2@17784>    MOVE.w arrayoffset,d1
0002D5DC <AmiBlitz3_wizzard.ab2@17785>    BSR writeword
0002D5E0 <AmiBlitz3_wizzard.ab2@17786> BRA JL_0_B194
0002D5E4 <AmiBlitz3_wizzard.ab2@17789>   CMP.b #1,d2
0002D5E8 <AmiBlitz3_wizzard.ab2@17790>    BNE.s 'la10
0002D5EE <AmiBlitz3_wizzard.ab2@17791>     MOVE.w #$102a,-2(a4)
0002D5F2 <AmiBlitz3_wizzard.ab2@17792>    OR.w d1,-2(a4)
0002D5F8 <AmiBlitz3_wizzard.ab2@17793>    MOVE.w arrayoffset,d1
0002D5FC <AmiBlitz3_wizzard.ab2@17794>    BSR writeword
0002D600 <AmiBlitz3_wizzard.ab2@17795> BRA JL_0_B194
0002D606 <AmiBlitz3_wizzard.ab2@17798>   MOVE.l destpointer,a4
0002D60C <AmiBlitz3_wizzard.ab2@17799>    CMP.w #$45ea,-2(a4)
0002D610 <AmiBlitz3_wizzard.ab2@17800>    BNE 'la10
0002D614 <AmiBlitz3_wizzard.ab2@17801>    CMP.b #3,d2
0002D618 <AmiBlitz3_wizzard.ab2@17802>    BCS 'la11
0002D61E <AmiBlitz3_wizzard.ab2@17803>    MOVE.w #$202a,-4(a4)
0002D622 <AmiBlitz3_wizzard.ab2@17804>    OR.w d1,-4(a4)
0002D626 <AmiBlitz3_wizzard.ab2@17805> BRA JL_0_B194
0002D62A <AmiBlitz3_wizzard.ab2@17808>    CMP.b #2,d2
0002D62E <AmiBlitz3_wizzard.ab2@17809>    BNE 'la12
0002D634 <AmiBlitz3_wizzard.ab2@17810>     MOVE.w #$302a,-4(a4)
0002D638 <AmiBlitz3_wizzard.ab2@17811>    OR.w d1,-4(a4)
0002D63C <AmiBlitz3_wizzard.ab2@17812> BRA JL_0_B194
0002D640 <AmiBlitz3_wizzard.ab2@17815>   CMP.b #1,d2
0002D644 <AmiBlitz3_wizzard.ab2@17816>    BNE.s 'la10
0002D64A <AmiBlitz3_wizzard.ab2@17817>     MOVE.w #$102a,-4(a4)
0002D64E <AmiBlitz3_wizzard.ab2@17818>    OR.w d1,-4(a4)
0002D652 <AmiBlitz3_wizzard.ab2@17819> BRA JL_0_B194
0002D658 <AmiBlitz3_wizzard.ab2@17822>    OR.w movea2dn,D1
0002D65C <AmiBlitz3_wizzard.ab2@17823>    BSR.w JL_0_B1B2
0002D660 <AmiBlitz3_wizzard.ab2@17824>    BSR.w writeword
0002D664 <AmiBlitz3_wizzard.ab2@17827>   ANDI.w #$FF,D2
0002D666 <AmiBlitz3_wizzard.ab2@17828> RTS
0002D66C <AmiBlitz3_wizzard.ab2@17832>    MOVE.l destpointer,a4
0002D674 <AmiBlitz3_wizzard.ab2@17833>    MOVE.l #$f22a4400,-4(a4)
0002D67A <AmiBlitz3_wizzard.ab2@17834>    MOVE.w arrayoffset,d1
0002D67E <AmiBlitz3_wizzard.ab2@17835> BRA writeword
0002D684 <AmiBlitz3_wizzard.ab2@17839>   OR.w moved3a5dn,D1                                        ;write move.l 0(a5),reg
0002D688 <AmiBlitz3_wizzard.ab2@17840>    BSR.w JL_0_B1B2
0002D68C <AmiBlitz3_wizzard.ab2@17841>    BSR.w pokewda5s
0002D68E <AmiBlitz3_wizzard.ab2@17842>   MOVE.w D3,D1
0002D692 <AmiBlitz3_wizzard.ab2@17843>    BSR.w writeword
0002D696 <AmiBlitz3_wizzard.ab2@17844> BRA.w JL_0_B194
0002D69A <AmiBlitz3_wizzard.ab2@17847>   BTST #$E,D2
0002D69E <AmiBlitz3_wizzard.ab2@17848>    BNE.w JL_0_B1CA
0002D6A2 <AmiBlitz3_wizzard.ab2@17849>   CMP.b #$1,D2
0002D6A6 <AmiBlitz3_wizzard.ab2@17850>    BEQ.w JL_0_B1CC
0002D6AA <AmiBlitz3_wizzard.ab2@17851>   CMP.b #$2,D2
0002D6AE <AmiBlitz3_wizzard.ab2@17852>    BEQ.w JL_0_B1D2
0002D6B0 <AmiBlitz3_wizzard.ab2@17855> RTS
0002D6B4 <AmiBlitz3_wizzard.ab2@17858>   EORI.w #$3000,D1
0002D6B6 <AmiBlitz3_wizzard.ab2@17859> RTS
0002D6BA <AmiBlitz3_wizzard.ab2@17862>   ORI.w #$1000,D1
0002D6BC <AmiBlitz3_wizzard.ab2@17863> RTS
0002D6C4 <AmiBlitz3_wizzard.ab2@17867>   MOVE.w #$FFFF,dfetch
0002D6C8 <AmiBlitz3_wizzard.ab2@17868>   BSR.w get1bytemain
0002D6CC <AmiBlitz3_wizzard.ab2@17869>   CMP.w #$2D,D0
0002D6D0 <AmiBlitz3_wizzard.ab2@17870>    BNE.w JL_0_B206
0002D6D4 <AmiBlitz3_wizzard.ab2@17871>   BSR.w get1bytemain
0002D6D8 <AmiBlitz3_wizzard.ab2@17872>   BSR.w JL_0_B206
0002D6DC <AmiBlitz3_wizzard.ab2@17873>   CMP.w #$5,D2
0002D6E0 <AmiBlitz3_wizzard.ab2@17874>    BCC.w JL_0_B200
0002D6E2 <AmiBlitz3_wizzard.ab2@17875>   NEG.l D0
0002D6E4 <AmiBlitz3_wizzard.ab2@17876> RTS
0002D6EA <AmiBlitz3_wizzard.ab2@17879>   TST.b fpu
0002D6EE <AmiBlitz3_wizzard.ab2@17880>   BEQ 'noneg
0002D6F2 <AmiBlitz3_wizzard.ab2@17881>   fneg.x fp0
0002D6F4 <AmiBlitz3_wizzard.ab2@17882> RTS
0002D6F8 <AmiBlitz3_wizzard.ab2@17885>   BCHG #$7,D0
0002D6FA <AmiBlitz3_wizzard.ab2@17886> RTS
0002D6FE <AmiBlitz3_wizzard.ab2@17889>   CMP.w #$24,D0
0002D702 <AmiBlitz3_wizzard.ab2@17890>    BEQ.w get_hexconstant
0002D706 <AmiBlitz3_wizzard.ab2@17891>   CMP.w #$25,D0
0002D70A <AmiBlitz3_wizzard.ab2@17892>    BEQ.w JL_0_A8C0
0002D70E <AmiBlitz3_wizzard.ab2@17893>   CMP.w #$2E,D0
0002D712 <AmiBlitz3_wizzard.ab2@17894>    BNE.w JL_0_B224
0002D714 <AmiBlitz3_wizzard.ab2@17897>   MOVEQ.l #$00,D3
0002D718 <AmiBlitz3_wizzard.ab2@17898> BRA.w JL_0_B272
0002D71A <AmiBlitz3_wizzard.ab2@17901>   MOVEQ.l #$00,D3                                          ;number
0002D71E <AmiBlitz3_wizzard.ab2@17902>    BSR.w atoi
0002D722 <AmiBlitz3_wizzard.ab2@17903>   CMP.w #$2E,D0
0002D726 <AmiBlitz3_wizzard.ab2@17904>    BEQ.w JL_0_B268
0002D72A <AmiBlitz3_wizzard.ab2@17905>   ORI.w #$20,D0
0002D72E <AmiBlitz3_wizzard.ab2@17906>   CMP.w #$65,D0
0002D732 <AmiBlitz3_wizzard.ab2@17907>    BNE.w JL_0_B46E
0002D738 <AmiBlitz3_wizzard.ab2@17908>   CMP.l #$800000,D3
0002D73C <AmiBlitz3_wizzard.ab2@17909>    BCC.w overerr
0002D73E <AmiBlitz3_wizzard.ab2@17910>   MOVEQ.l #-$01,D6
0002D742 <AmiBlitz3_wizzard.ab2@17911>   fmove.l d3,fp0
0002D744 <AmiBlitz3_wizzard.ab2@17912>   MOVE.l D3,D0
0002D74A <AmiBlitz3_wizzard.ab2@17913>   MOVEA.l _mathffpbase,A6
0002D74E <AmiBlitz3_wizzard.ab2@17914>    JSR -$24(A6)
0002D750 <AmiBlitz3_wizzard.ab2@17915>   MOVE.l D0,D3
0002D754 <AmiBlitz3_wizzard.ab2@17916>    BSR.w JL_0_B2E6
0002D758 <AmiBlitz3_wizzard.ab2@17917>    BSR.w reget
0002D75C <AmiBlitz3_wizzard.ab2@17918>    BSR.w JL_0_B480
0002D760 <AmiBlitz3_wizzard.ab2@17919> BRA.w JL_0_B3DC
0002D764 <AmiBlitz3_wizzard.ab2@17922>   CMP.b #4,d2
0002D768 <AmiBlitz3_wizzard.ab2@17923>   BEQ 'l4
0002D76C <AmiBlitz3_wizzard.ab2@17924>   MOVE.b #5,d2                                             ;nprint 2/0.5 bugfix
0002D772 <AmiBlitz3_wizzard.ab2@17927>    TST.b fpu
0002D776 <AmiBlitz3_wizzard.ab2@17928>    BNE 'l1
0002D77C <AmiBlitz3_wizzard.ab2@17929>    CMP.l #$800000,D3
0002D780 <AmiBlitz3_wizzard.ab2@17930>    BCC.w overerr
0002D784 <AmiBlitz3_wizzard.ab2@17931> BRA JL_0_B272
0002D78A <AmiBlitz3_wizzard.ab2@17934>   CMP.l #$7fffffff,d3
0002D78E <AmiBlitz3_wizzard.ab2@17935>     BCC.w overerr
0002D790 <AmiBlitz3_wizzard.ab2@17938>   MOVEQ.l #-$01,D6
0002D792 <AmiBlitz3_wizzard.ab2@17939>   MOVE.l D3,D0
0002D796 <AmiBlitz3_wizzard.ab2@17940>   fmove.l d3,fp0
0002D79C <AmiBlitz3_wizzard.ab2@17941>   MOVEA.l _mathffpbase,A6
0002D7A0 <AmiBlitz3_wizzard.ab2@17942>    JSR -$24(A6)                                            ;integer to ffp
0002D7A2 <AmiBlitz3_wizzard.ab2@17943>   MOVE.l D0,-(A7)
0002D7A6 <AmiBlitz3_wizzard.ab2@17944>    BSR.w get1bytemain
0002D7AA <AmiBlitz3_wizzard.ab2@17945>    BSR.w tstnum
0002D7AE <AmiBlitz3_wizzard.ab2@17946>    BNE.w syntaxerr
0002D7B0 <AmiBlitz3_wizzard.ab2@17947>   MOVEQ.l #$00,D3
0002D7B4 <AmiBlitz3_wizzard.ab2@17948>    BSR.w atoi
0002D7B6 <AmiBlitz3_wizzard.ab2@17949>   TST.l D3
0002D7BA <AmiBlitz3_wizzard.ab2@17950>    BEQ.w JL_0_B2E0
0002D7C0 <AmiBlitz3_wizzard.ab2@17951>   TST.b fpu
0002D7C4 <AmiBlitz3_wizzard.ab2@17952>   BNE 'l1
0002D7CA <AmiBlitz3_wizzard.ab2@17953>   CMP.l #$800000,D3
0002D7CE <AmiBlitz3_wizzard.ab2@17954>    BCC.w overerr
0002D7D2 <AmiBlitz3_wizzard.ab2@17955> BRA 'l2
0002D7D8 <AmiBlitz3_wizzard.ab2@17958>   CMP.l #$7fffffff,d3
0002D7DC <AmiBlitz3_wizzard.ab2@17959>   BCC overerr
0002D7E0 <AmiBlitz3_wizzard.ab2@17962>   fmove.l d5,fp1
0002D7E2 <AmiBlitz3_wizzard.ab2@17963>   MOVE.l D5,D0
0002D7E6 <AmiBlitz3_wizzard.ab2@17964>    JSR -$24(A6)
0002D7E8 <AmiBlitz3_wizzard.ab2@17965>   MOVE.l D0,D5
0002D7EC <AmiBlitz3_wizzard.ab2@17966>   fmove.l d3,fp2
0002D7EE <AmiBlitz3_wizzard.ab2@17967>   MOVE.l D3,D0
0002D7F2 <AmiBlitz3_wizzard.ab2@17968>    JSR -$24(A6)
0002D7F6 <AmiBlitz3_wizzard.ab2@17969>   fdiv.x fp1,fp2
0002D7F8 <AmiBlitz3_wizzard.ab2@17970>   MOVE.l D5,D1
0002D7FC <AmiBlitz3_wizzard.ab2@17971>    JSR -$54(A6)
0002D800 <AmiBlitz3_wizzard.ab2@17972>   fadd.x fp2,fp0
0002D802 <AmiBlitz3_wizzard.ab2@17973>   MOVE.l (A7)+,D1
0002D806 <AmiBlitz3_wizzard.ab2@17974>    JSR -$42(A6)
0002D808 <AmiBlitz3_wizzard.ab2@17975>   MOVE.l D0,D3
0002D80C <AmiBlitz3_wizzard.ab2@17976>    BSR.w reget
0002D810 <AmiBlitz3_wizzard.ab2@17977>   ORI.w #$20,D0
0002D814 <AmiBlitz3_wizzard.ab2@17978>   CMP.w #$65,D0
0002D818 <AmiBlitz3_wizzard.ab2@17979>    BNE.w JL_0_B2D4
0002D81C <AmiBlitz3_wizzard.ab2@17980>    BSR.w JL_0_B2E6
0002D820 <AmiBlitz3_wizzard.ab2@17983>    BSR.w reget
0002D824 <AmiBlitz3_wizzard.ab2@17984>    BSR.w JL_0_B480
0002D828 <AmiBlitz3_wizzard.ab2@17985> BRA.w JL_0_B3DC
0002D82A <AmiBlitz3_wizzard.ab2@17988>   MOVE.l (A7)+,D3
0002D82E <AmiBlitz3_wizzard.ab2@17989> BRA.w JL_0_B2D4
0002D832 <AmiBlitz3_wizzard.ab2@17992>   BSR.w get1bytemain
0002D836 <AmiBlitz3_wizzard.ab2@17993>   CMP.w #$2B,D0
0002D83A <AmiBlitz3_wizzard.ab2@17994>    BEQ.w JL_0_B30E
0002D83E <AmiBlitz3_wizzard.ab2@17995>   CMP.w #$2D,D0
0002D842 <AmiBlitz3_wizzard.ab2@17996>    BNE.w JL_0_B312
0002D846 <AmiBlitz3_wizzard.ab2@17997>    BSR.w get1bytemain
0002D84A <AmiBlitz3_wizzard.ab2@17998>    BSR.w getsign
0002D84C <AmiBlitz3_wizzard.ab2@17999>   MOVE.l D3,D0
0002D850 <AmiBlitz3_wizzard.ab2@18000>   fdiv.x fp1,fp0
0002D852 <AmiBlitz3_wizzard.ab2@18001>   MOVE.l D4,D1
0002D856 <AmiBlitz3_wizzard.ab2@18002>    JSR -$54(A6)
0002D858 <AmiBlitz3_wizzard.ab2@18003>   MOVE.l D0,D3
0002D85A <AmiBlitz3_wizzard.ab2@18004> RTS
0002D85E <AmiBlitz3_wizzard.ab2@18007>   BSR.w get1bytemain
0002D862 <AmiBlitz3_wizzard.ab2@18010>   BSR.w getsign
0002D866 <AmiBlitz3_wizzard.ab2@18011>   fmul.x fp1,fp0
0002D868 <AmiBlitz3_wizzard.ab2@18012>   MOVE.l D3,D0
0002D86A <AmiBlitz3_wizzard.ab2@18013>   MOVE.l D4,D1
0002D86E <AmiBlitz3_wizzard.ab2@18014>    JSR -$4E(A6)
0002D870 <AmiBlitz3_wizzard.ab2@18015>   MOVE.l D0,D3
0002D872 <AmiBlitz3_wizzard.ab2@18016> RTS
0002D876 <AmiBlitz3_wizzard.ab2@18019>   BSR.w tstnum
0002D87A <AmiBlitz3_wizzard.ab2@18020>    BNE.w syntaxerr
0002D87C <AmiBlitz3_wizzard.ab2@18021>   MOVE.w D0,D4
0002D880 <AmiBlitz3_wizzard.ab2@18022>   SUBI.w #$30,D4
0002D884 <AmiBlitz3_wizzard.ab2@18023>    BSR.w get1bytemain
0002D888 <AmiBlitz3_wizzard.ab2@18024>    BSR.w tstnum
0002D88C <AmiBlitz3_wizzard.ab2@18025>    BNE.w getsign__skip
0002D890 <AmiBlitz3_wizzard.ab2@18026>   MULU #$A,D4
0002D894 <AmiBlitz3_wizzard.ab2@18027>   SUBI.w #$30,D0
0002D896 <AmiBlitz3_wizzard.ab2@18028>   ADD.w D0,D4
0002D89A <AmiBlitz3_wizzard.ab2@18029>    BSR.w get1bytemain
0002D89E <AmiBlitz3_wizzard.ab2@18032>   CMP.w #$12,D4
0002D8A2 <AmiBlitz3_wizzard.ab2@18033>    BHI.w overerr
0002D8A4 <AmiBlitz3_wizzard.ab2@18034>   LSL.w #3,D4
0002D8AA <AmiBlitz3_wizzard.ab2@18035>   LEA fputab,a0
0002D8AC <AmiBlitz3_wizzard.ab2@18036>   ADD.l d4,a0
0002D8B2 <AmiBlitz3_wizzard.ab2@18037>   fmove.d 0(a0),fp1
0002D8B4 <AmiBlitz3_wizzard.ab2@18038>   LSR.w #1,d4
0002D8B8 <AmiBlitz3_wizzard.ab2@18039>   MOVE.l facts(PC,D4.W),D4
0002D8BA <AmiBlitz3_wizzard.ab2@18040> RTS
0002D902 <AmiBlitz3_wizzard.ab2@18044>   Dc.d 1,10,100,1000,10000,100000,1000000,10000000,100000000  ;,1000000000,10000000000
0002D906 <AmiBlitz3_wizzard.ab2@18049>   Dc.l $80000041
0002D90A <AmiBlitz3_wizzard.ab2@18050>   Dc.l $A0000044
0002D90E <AmiBlitz3_wizzard.ab2@18051>   Dc.l $C8000047
0002D912 <AmiBlitz3_wizzard.ab2@18052>   Dc.l $FA00004A
0002D916 <AmiBlitz3_wizzard.ab2@18053>   Dc.l $9C40004E
0002D91A <AmiBlitz3_wizzard.ab2@18054>   Dc.l $C3500051
0002D91E <AmiBlitz3_wizzard.ab2@18055>   Dc.l $F4240054
0002D922 <AmiBlitz3_wizzard.ab2@18056>   Dc.l $98968058
0002D926 <AmiBlitz3_wizzard.ab2@18057>   Dc.l $BEBC205B
0002D92A <AmiBlitz3_wizzard.ab2@18058>   Dc.l $EE6B285E
0002D92E <AmiBlitz3_wizzard.ab2@18059>   Dc.l $9502F962
0002D932 <AmiBlitz3_wizzard.ab2@18060>   Dc.l $BA43B765
0002D936 <AmiBlitz3_wizzard.ab2@18061>   Dc.l $E8D4A568
0002D93A <AmiBlitz3_wizzard.ab2@18062>   Dc.l $9184E76C
0002D93E <AmiBlitz3_wizzard.ab2@18063>   Dc.l $B5E6A96F
0002D942 <AmiBlitz3_wizzard.ab2@18064>   Dc.l $E35F2972
0002D946 <AmiBlitz3_wizzard.ab2@18065>   Dc.l $8E1BCA76
0002D94A <AmiBlitz3_wizzard.ab2@18066>   Dc.l $B1A2BD79
0002D94E <AmiBlitz3_wizzard.ab2@18067>   Dc.l $DE0B6C7C
0002D950 <AmiBlitz3_wizzard.ab2@18071>   MOVEQ.l #$01,D5
0002D952 <AmiBlitz3_wizzard.ab2@18074>   LSL.l #1,D5
0002D954 <AmiBlitz3_wizzard.ab2@18075>   MOVE.l D5,D1
0002D956 <AmiBlitz3_wizzard.ab2@18076>   LSL.l #2,D5
0002D958 <AmiBlitz3_wizzard.ab2@18077>   ADD.l D1,D5                                              ;divisor for frac convert!
0002D95A <AmiBlitz3_wizzard.ab2@18078>   LSL.l #1,D3
0002D95E <AmiBlitz3_wizzard.ab2@18079>    BCS.w overerr
0002D960 <AmiBlitz3_wizzard.ab2@18080>   MOVE.l D3,D1
0002D962 <AmiBlitz3_wizzard.ab2@18081>   LSL.l #1,D3
0002D966 <AmiBlitz3_wizzard.ab2@18082>    BCS.w overerr
0002D968 <AmiBlitz3_wizzard.ab2@18083>   LSL.l #1,D3
0002D96C <AmiBlitz3_wizzard.ab2@18084>    BCS.w overerr
0002D96E <AmiBlitz3_wizzard.ab2@18085>   ADD.l D1,D3
0002D972 <AmiBlitz3_wizzard.ab2@18086>   SUBI.w #$30,D0
0002D974 <AmiBlitz3_wizzard.ab2@18087>   ADD.l D0,D3
0002D9A0 <AmiBlitz3_wizzard.ab2@18088>    !fget                                                   ;bsr.w get1bytemain
0002D9A4 <AmiBlitz3_wizzard.ab2@18089>    CMP.b #1,d0
0002D9A8 <AmiBlitz3_wizzard.ab2@18090>    BNE 'cm1
0002D9AA <AmiBlitz3_wizzard.ab2@18091>    SUBQ.l #1,a5
0002D9AE <AmiBlitz3_wizzard.ab2@18092>    BSR get1bytemain                                        ;??wy not !fget
0002D9B2 <AmiBlitz3_wizzard.ab2@18095>   CMP.b #$7e,d0
0002D9B6 <AmiBlitz3_wizzard.ab2@18096>    BNE 'cm2
0002D9B8 <AmiBlitz3_wizzard.ab2@18097>    SUBQ.l #1,a5
0002D9BC <AmiBlitz3_wizzard.ab2@18098>    BSR get1bytemain
0002D9BE <AmiBlitz3_wizzard.ab2@18101>   TST.b d0
0002D9C2 <AmiBlitz3_wizzard.ab2@18102>    BPL 'l10
0002D9C4 <AmiBlitz3_wizzard.ab2@18103>    LSL.w #8,d0
0002D9C6 <AmiBlitz3_wizzard.ab2@18104>    MOVE.b (a5)+,d0
0002D9CC <AmiBlitz3_wizzard.ab2@18105>    MOVE.w d0,lastchar
0002D9DE <AmiBlitz3_wizzard.ab2@18108>   !compare2                                                ;bsr.w tstnum ;cmake bug
0002D9E2 <AmiBlitz3_wizzard.ab2@18109>    BEQ.w atoi__loop
0002D9E4 <AmiBlitz3_wizzard.ab2@18110> RTS
0002D9E6 <AmiBlitz3_wizzard.ab2@18113> dfetch:  Ds.w 1                                            ;fetching data?
0002D9EA <AmiBlitz3_wizzard.ab2@18117>   MOVE.w dfetch(PC),D1
0002D9EE <AmiBlitz3_wizzard.ab2@18118>    BEQ.w JL_0_B3EC
0002D9F4 <AmiBlitz3_wizzard.ab2@18119>   CLR.w dfetch
0002D9F6 <AmiBlitz3_wizzard.ab2@18120> RTS
0002D9FC <AmiBlitz3_wizzard.ab2@18123>   MOVE.b d2,isconstantvalue
0002DA02 <AmiBlitz3_wizzard.ab2@18124>   MOVE.l d0,lastconstantvalue
0002DA08 <AmiBlitz3_wizzard.ab2@18125>   MOVE.w d2,imm_size
0002DA12 <AmiBlitz3_wizzard.ab2@18126>   MOVE.w regnum,imm_reg
0002DA1C <AmiBlitz3_wizzard.ab2@18127>   MOVE.l destpointer,imm_addr                           ; long
0002DA20 <AmiBlitz3_wizzard.ab2@18128>   CMP.w #$3,D2
0002DA24 <AmiBlitz3_wizzard.ab2@18129>   BEQ.w JL_0_B434
0002DA28 <AmiBlitz3_wizzard.ab2@18130>   CMP.w #$5,D2                                          ;float
0002DA2C <AmiBlitz3_wizzard.ab2@18131>   BEQ.w JL_0_B434
0002DA30 <AmiBlitz3_wizzard.ab2@18132>   CMP.w #$1,D2
0002DA34 <AmiBlitz3_wizzard.ab2@18133>   BEQ.w JL_0_B418
0002DA38 <AmiBlitz3_wizzard.ab2@18134>   CMP.w #$2,D2
0002DA3C <AmiBlitz3_wizzard.ab2@18135>   BEQ.w JL_0_B418
0002DA40 <AmiBlitz3_wizzard.ab2@18136>   CMP.w #$4,D2
0002DA44 <AmiBlitz3_wizzard.ab2@18137>   BEQ.w JL_0_B434
0002DA48 <AmiBlitz3_wizzard.ab2@18139> BRA.w mismatcherr
0002DA4E <AmiBlitz3_wizzard.ab2@18142>   MOVE.w regnum,D1
0002DA50 <AmiBlitz3_wizzard.ab2@18143>   LSL.w #8,D1
0002DA52 <AmiBlitz3_wizzard.ab2@18144>   LSL.w #1,D1
0002DA56 <AmiBlitz3_wizzard.ab2@18145>   ORI.w #$303C,D1
0002DA5A <AmiBlitz3_wizzard.ab2@18146>    BSR.w writeword
0002DA5C <AmiBlitz3_wizzard.ab2@18147>   MOVE.w D0,D1
0002DA60 <AmiBlitz3_wizzard.ab2@18148>    BSR.w writeword
0002DA64 <AmiBlitz3_wizzard.ab2@18149> BRA.w reget
0002DA66 <AmiBlitz3_wizzard.ab2@18152>   MOVEQ #0,d1
0002DA6C <AmiBlitz3_wizzard.ab2@18153>   MOVE.w regnum,D1
0002DA72 <AmiBlitz3_wizzard.ab2@18154>   TST.b fpu
0002DA76 <AmiBlitz3_wizzard.ab2@18155>   BEQ 'f1
0002DA7A <AmiBlitz3_wizzard.ab2@18156>   CMP.w #5,d2
0002DA7E <AmiBlitz3_wizzard.ab2@18157>   BEQ 'l10
0002DA82 <AmiBlitz3_wizzard.ab2@18158> BRA 'f2
0002DA88 <AmiBlitz3_wizzard.ab2@18161>   TST.b iee
0002DA8C <AmiBlitz3_wizzard.ab2@18162>   BNE 'l10
0002DA8E <AmiBlitz3_wizzard.ab2@18165>   LSL.w #8,D1
0002DA90 <AmiBlitz3_wizzard.ab2@18166>   LSL.w #1,D1
0002DA94 <AmiBlitz3_wizzard.ab2@18167>   ORI.w #$203C,D1
0002DA98 <AmiBlitz3_wizzard.ab2@18168>    BSR.w writeword
0002DA9A <AmiBlitz3_wizzard.ab2@18169>   MOVE.l D0,D1
0002DA9E <AmiBlitz3_wizzard.ab2@18170>    BSR.w writelong
0002DAA2 <AmiBlitz3_wizzard.ab2@18171> BRA.w reget
0002DAA4 <AmiBlitz3_wizzard.ab2@18174>   MOVEQ #5,d2
0002DAA6 <AmiBlitz3_wizzard.ab2@18175>   ASL.l #7,d1
0002DAA8 <AmiBlitz3_wizzard.ab2@18176>   SUBQ.l #8,a7
0002DAAE <AmiBlitz3_wizzard.ab2@18181>       OR.l #$f23c4400,d1                                   ;fmove.s
0002DAB4 <AmiBlitz3_wizzard.ab2@18182>        fmove.s fp0,0(a7)
0002DAB8 <AmiBlitz3_wizzard.ab2@18184>   BSR writelong
0002DABA <AmiBlitz3_wizzard.ab2@18185>   MOVE.l (a7)+,d1
0002DABE <AmiBlitz3_wizzard.ab2@18186>   BSR writelong
0002DAC0 <AmiBlitz3_wizzard.ab2@18187>   MOVE.l (a7)+,d1
0002DAC4 <AmiBlitz3_wizzard.ab2@18191> BRA.w reget
0002DAC6 <AmiBlitz3_wizzard.ab2@18197>  MOVE.l D3,D0
0002DAC8 <AmiBlitz3_wizzard.ab2@18198>   TST.w D6
0002DACC <AmiBlitz3_wizzard.ab2@18199>    BEQ.w JL_0_B46C
0002DAD2 <AmiBlitz3_wizzard.ab2@18200>   MOVEA.l _mathffpbase,A6
0002DAD6 <AmiBlitz3_wizzard.ab2@18201>    JSR -$1E(A6)
0002DADA <AmiBlitz3_wizzard.ab2@18202>    BVC.w JL_0_B46C
0002DADC <AmiBlitz3_wizzard.ab2@18203>   ADDQ.w #4,A7
0002DAE0 <AmiBlitz3_wizzard.ab2@18204> BRA.w JL_0_B5A0
0002DAE2 <AmiBlitz3_wizzard.ab2@18207> RTS
0002DAE4 <AmiBlitz3_wizzard.ab2@18211>   MOVEQ.l #$00,D6
0002DAE8 <AmiBlitz3_wizzard.ab2@18212>    fmove.l d3,fp0
0002DAEC <AmiBlitz3_wizzard.ab2@18215>   BSR.w JL_0_B480
0002DAF0 <AmiBlitz3_wizzard.ab2@18216> BRA.w JL_0_B3DC
0002DAF2 <AmiBlitz3_wizzard.ab2@18219>   MOVE.w D2,-(A7)
0002DAF6 <AmiBlitz3_wizzard.ab2@18220>    BSR.w JL_0_BF6A
0002DAF8 <AmiBlitz3_wizzard.ab2@18221>   MOVE.w (A7)+,D2
0002DAFA <AmiBlitz3_wizzard.ab2@18224>   TST.w D2
0002DAFE <AmiBlitz3_wizzard.ab2@18225>    BNE.w JL_0_B498
0002DB00 <AmiBlitz3_wizzard.ab2@18226>   TST.w D6
0002DB04 <AmiBlitz3_wizzard.ab2@18227>    BEQ.w JL_0_B492
0002DB06 <AmiBlitz3_wizzard.ab2@18228>   MOVEQ.l #$04,D2
0002DB0A <AmiBlitz3_wizzard.ab2@18229> BRA.w JL_0_B510
0002DB0C <AmiBlitz3_wizzard.ab2@18232>   MOVEQ.l #$02,D2
0002DB10 <AmiBlitz3_wizzard.ab2@18233> BRA.w JL_0_B4C4
0002DB14 <AmiBlitz3_wizzard.ab2@18236>   CMP.w #$1,D2
0002DB18 <AmiBlitz3_wizzard.ab2@18237>    BEQ.w JL_0_B4C4
0002DB1C <AmiBlitz3_wizzard.ab2@18238>   CMP.w #$2,D2
0002DB20 <AmiBlitz3_wizzard.ab2@18239>    BEQ.w JL_0_B4F8
0002DB24 <AmiBlitz3_wizzard.ab2@18240>   CMP.w #$3,D2
0002DB28 <AmiBlitz3_wizzard.ab2@18241>    BEQ.w JL_0_B57A
0002DB2C <AmiBlitz3_wizzard.ab2@18242>   CMP.w #$4,D2
0002DB30 <AmiBlitz3_wizzard.ab2@18243>    BEQ.w JL_0_B506
0002DB34 <AmiBlitz3_wizzard.ab2@18244>   CMP.w #$5,D2
0002DB38 <AmiBlitz3_wizzard.ab2@18245>    BEQ.w JL_0_B586
0002DB3C <AmiBlitz3_wizzard.ab2@18246> BRA.w mismatcherr
0002DB40 <AmiBlitz3_wizzard.ab2@18249>   BSR.w JL_0_B450                                          ;bugfix if a.b=$90 bug fix
0002DB46 <AmiBlitz3_wizzard.ab2@18250>   CMP.l #$7f,D0
0002DB4A <AmiBlitz3_wizzard.ab2@18251>    BGT.w JL_0_B4DC
0002DB50 <AmiBlitz3_wizzard.ab2@18252>   CMP.l #$FFFFFF80,D0
0002DB54 <AmiBlitz3_wizzard.ab2@18253>    BGE.w JL_0_B59E
0002DB56 <AmiBlitz3_wizzard.ab2@18256>   MOVEQ.l #$02,D2                                          ;was 2 before
0002DB5C <AmiBlitz3_wizzard.ab2@18257>   CMP.l #$7fff,D0
0002DB60 <AmiBlitz3_wizzard.ab2@18258>    BGT.w JL_0_B4F2
0002DB66 <AmiBlitz3_wizzard.ab2@18259>   CMP.l #$FFFF8000,D0
0002DB6A <AmiBlitz3_wizzard.ab2@18260>    BGE.w JL_0_B59E
0002DB6C <AmiBlitz3_wizzard.ab2@18263>   MOVEQ.l #$03,D2
0002DB70 <AmiBlitz3_wizzard.ab2@18264> BRA.w JL_0_B59E
0002DB72 <AmiBlitz3_wizzard.ab2@18290>   TST.w D6
0002DB76 <AmiBlitz3_wizzard.ab2@18291>    BNE.w JL_0_B510
0002DB7A <AmiBlitz3_wizzard.ab2@18292>    BSR.w JL_0_B450
0002DB7E <AmiBlitz3_wizzard.ab2@18293> BRA.w JL_0_B4DC
0002DB82 <AmiBlitz3_wizzard.ab2@18296>   BSR.w JL_0_B450
0002DB84 <AmiBlitz3_wizzard.ab2@18297>   TST.w D6
0002DB88 <AmiBlitz3_wizzard.ab2@18298>   BEQ.w JL_0_B560
0002DB8E <AmiBlitz3_wizzard.ab2@18301>   CMP.l #MaxWordSgnd,D0
0002DB92 <AmiBlitz3_wizzard.ab2@18302>    BGT.w JL_0_B5A0
0002DB98 <AmiBlitz3_wizzard.ab2@18303>   CMP.l #$FFFF8000,D0
0002DB9C <AmiBlitz3_wizzard.ab2@18304>    BLT.w JL_0_B5A0
0002DB9E <AmiBlitz3_wizzard.ab2@18305>   MOVE.w D0,-(A7)
0002DBA2 <AmiBlitz3_wizzard.ab2@18306>    JSR -$24(A6)
0002DBA4 <AmiBlitz3_wizzard.ab2@18307>   MOVE.l D0,D1
0002DBA6 <AmiBlitz3_wizzard.ab2@18308>   MOVE.l D3,D0
0002DBAA <AmiBlitz3_wizzard.ab2@18309>    JSR -$48(A6)
0002DBB0 <AmiBlitz3_wizzard.ab2@18310>   MOVE.l #$80000051,D1
0002DBB4 <AmiBlitz3_wizzard.ab2@18311>    JSR -$4E(A6)
0002DBB8 <AmiBlitz3_wizzard.ab2@18312>    JSR -$1E(A6)
0002DBBC <AmiBlitz3_wizzard.ab2@18313>    BEQ.w JL_0_B55A
0002DBC2 <AmiBlitz3_wizzard.ab2@18314>   CMP.l #$10000,D0
0002DBC6 <AmiBlitz3_wizzard.ab2@18315>    BCC.w JL_0_B55A
0002DBC8 <AmiBlitz3_wizzard.ab2@18316>   MOVE.w D0,D1
0002DBCA <AmiBlitz3_wizzard.ab2@18317>   MOVE.w (A7)+,D0
0002DBCC <AmiBlitz3_wizzard.ab2@18318>   SWAP D0
0002DBCE <AmiBlitz3_wizzard.ab2@18319>   MOVE.w D1,D0
0002DBD2 <AmiBlitz3_wizzard.ab2@18320> BRA.w JL_0_B59E
0002DBD4 <AmiBlitz3_wizzard.ab2@18323>   ADDQ.w #2,A7
0002DBD8 <AmiBlitz3_wizzard.ab2@18324> BRA.w JL_0_B5A0
0002DBDE <AmiBlitz3_wizzard.ab2@18327>   CMP.l #MaxWordSgnd,D0
0002DBE2 <AmiBlitz3_wizzard.ab2@18328>    BGT.w JL_0_B4F2
0002DBE8 <AmiBlitz3_wizzard.ab2@18329>   CMP.l #$FFFF8000,D0
0002DBEC <AmiBlitz3_wizzard.ab2@18330>    BLT.w JL_0_B4F2
0002DBEE <AmiBlitz3_wizzard.ab2@18331>   SWAP D0
0002DBF2 <AmiBlitz3_wizzard.ab2@18332> BRA.w JL_0_B59E
0002DBF4 <AmiBlitz3_wizzard.ab2@18335>   TST.w D6
0002DBF8 <AmiBlitz3_wizzard.ab2@18336>   BNE.w JL_0_B5A0
0002DBFA <AmiBlitz3_wizzard.ab2@18337>   MOVE.l D3,D0
0002DBFE <AmiBlitz3_wizzard.ab2@18338> BRA.w JL_0_B59E
0002DC00 <AmiBlitz3_wizzard.ab2@18341>   TST.w D6
0002DC04 <AmiBlitz3_wizzard.ab2@18342>   BNE.w JL_0_B5A0
0002DC06 <AmiBlitz3_wizzard.ab2@18343>   MOVE.l D3,D0
0002DC0C <AmiBlitz3_wizzard.ab2@18344>   MOVEA.l _mathffpbase,A6
0002DC10 <AmiBlitz3_wizzard.ab2@18345>   JSR -$24(A6)
0002DC12 <AmiBlitz3_wizzard.ab2@18346>   MOVE.l D0,D3
0002DC16 <AmiBlitz3_wizzard.ab2@18347> BRA.w JL_0_B5A0
0002DC18 <AmiBlitz3_wizzard.ab2@18350> RTS
0002DC1A <AmiBlitz3_wizzard.ab2@18353>   MOVEQ.l #$05,D2
0002DC1C <AmiBlitz3_wizzard.ab2@18354>   MOVE.l D3,D0
0002DC1E <AmiBlitz3_wizzard.ab2@18355> RTS
0002DC22 <AmiBlitz3_wizzard.ab2@18359>             Ds.l 1                                         ;??Looks like unused data??
0002DC26 <AmiBlitz3_wizzard.ab2@18360> pushpc:     Ds.l 1
0002DC2A <AmiBlitz3_wizzard.ab2@18361> pushoff:    Ds.l 1
0002DC2E <AmiBlitz3_wizzard.ab2@18362> pushdooff:  Ds.l 1
0002DC30 <AmiBlitz3_wizzard.ab2@18363> pushclen:   Ds.w 1
0002DC34 <AmiBlitz3_wizzard.ab2@18364> pushat:     Ds.l 1
0002DC3E <AmiBlitz3_wizzard.ab2@18368>   MOVE.l destpointer,pushpc
0002DC48 <AmiBlitz3_wizzard.ab2@18369>   MOVE.l hunkoffsetbase,pushoff
0002DC4A <AmiBlitz3_wizzard.ab2@18370> RTS
0002DC4E <AmiBlitz3_wizzard.ab2@18374>   MOVEM.l D0-D1/A0-A1,-(A7)
0002DC54 <AmiBlitz3_wizzard.ab2@18375>   MOVE.l destpointer,D0
0002DC58 <AmiBlitz3_wizzard.ab2@18376>   MOVE.l pushpc(PC),D1
0002DC5E <AmiBlitz3_wizzard.ab2@18377>   MOVE.l D1,destpointer
0002DC60 <AmiBlitz3_wizzard.ab2@18378>   SUB.l D1,D0
0002DC66 <AmiBlitz3_wizzard.ab2@18379>   MOVE.w D0,pushclen
0002DC6A <AmiBlitz3_wizzard.ab2@18380>    BEQ.w JL_0_B636
0002DC70 <AmiBlitz3_wizzard.ab2@18381>   MOVE.w dontwrite,D1
0002DC74 <AmiBlitz3_wizzard.ab2@18382>    BNE.w JL_0_B636
0002DC7C <AmiBlitz3_wizzard.ab2@18383>    CMP.w #1000,pushclen
0002DC80 <AmiBlitz3_wizzard.ab2@18384>    BGE conmemerr
0002DC86 <AmiBlitz3_wizzard.ab2@18385>    MOVE.l pushat,d0
0002DC8A <AmiBlitz3_wizzard.ab2@18386>    BNE 'nomem
0002DC90 <AmiBlitz3_wizzard.ab2@18387>    MOVE.l #1024,d0
0002DC92 <AmiBlitz3_wizzard.ab2@18388>   MOVEQ.l #$01,D1
0002DC98 <AmiBlitz3_wizzard.ab2@18389>   MOVEA.l _execbase,A6
0002DC9E <AmiBlitz3_wizzard.ab2@18390>   MOVE.l mempool,a0
0002DCA2 <AmiBlitz3_wizzard.ab2@18391>   JSR _AllocPooled(a6)
0002DCA8 <AmiBlitz3_wizzard.ab2@18393>   MOVE.l D0,pushat
0002DCAA <AmiBlitz3_wizzard.ab2@18396>   MOVEA.l D0,A0
0002DCB0 <AmiBlitz3_wizzard.ab2@18397>   MOVEA.l pushpc,A1
0002DCB6 <AmiBlitz3_wizzard.ab2@18398>   MOVE.l A1,destpointer
0002DCBC <AmiBlitz3_wizzard.ab2@18399>   MOVE.w pushclen,D0
0002DCBE <AmiBlitz3_wizzard.ab2@18400>   LSR.w #1,D0
0002DCC0 <AmiBlitz3_wizzard.ab2@18401>   SUBQ.w #1,D0
0002DCC2 <AmiBlitz3_wizzard.ab2@18404>     MOVE.w (A1)+,(A0)+
0002DCC6 <AmiBlitz3_wizzard.ab2@18405>   DBF D0,JL_0_B626
0002DCD0 <AmiBlitz3_wizzard.ab2@18407>    MOVE.l hunkoffsetbase,pushdooff
0002DCD4 <AmiBlitz3_wizzard.ab2@18410>   MOVEM.l (A7)+,D0-D1/A0-A1
0002DCD6 <AmiBlitz3_wizzard.ab2@18411> RTS
0002DCDA <AmiBlitz3_wizzard.ab2@18415>   MOVEM.l D0-D1/A0-A1,-(A7)
0002DCDC <AmiBlitz3_wizzard.ab2@18416>   MOVEQ.l #$00,D0
0002DCE2 <AmiBlitz3_wizzard.ab2@18417>   MOVE.w pushclen,D0
0002DCE6 <AmiBlitz3_wizzard.ab2@18418>    BEQ.w JL_0_B6D8
0002DCEC <AmiBlitz3_wizzard.ab2@18419>   MOVE.l destpointer,D1
0002DCF2 <AmiBlitz3_wizzard.ab2@18420>   ADD.l D0,destpointer
0002DCF8 <AmiBlitz3_wizzard.ab2@18421>   TST.w dontwrite
0002DCFC <AmiBlitz3_wizzard.ab2@18422>    BNE.w JL_0_B6D8
0002DCFE <AmiBlitz3_wizzard.ab2@18423>   LSR.w #1,D0
0002DD00 <AmiBlitz3_wizzard.ab2@18424>   SUBQ.w #1,D0
0002DD02 <AmiBlitz3_wizzard.ab2@18425>   MOVEA.l D1,A1
0002DD08 <AmiBlitz3_wizzard.ab2@18426>   MOVEA.l pushat,A0
0002DD0E <AmiBlitz3_wizzard.ab2@18429>     CMPA.l destbufferend,A1
0002DD12 <AmiBlitz3_wizzard.ab2@18430>     BCS.w JL_0_B684
0002DD1A <AmiBlitz3_wizzard.ab2@18432>     MOVE.w #$FFFF,dontwrite
0002DD1E <AmiBlitz3_wizzard.ab2@18433>   BRA.w JL_0_B6D8
0002DD20 <AmiBlitz3_wizzard.ab2@18436>      MOVE.w (A0)+,(A1)+                                    ;copylibcode
0002DD24 <AmiBlitz3_wizzard.ab2@18437>   DBF D0,JL_0_B66E
0002DD2A <AmiBlitz3_wizzard.ab2@18439>   SUB.l pushpc,D1
0002DD2E <AmiBlitz3_wizzard.ab2@18440>   BEQ.w JL_0_B6C2
0002DD34 <AmiBlitz3_wizzard.ab2@18441>   MOVEA.l pushdooff,A0
0002DD3A <AmiBlitz3_wizzard.ab2@18444>   CMPA.l pushoff,A0
0002DD3E <AmiBlitz3_wizzard.ab2@18445>   BEQ.w JL_0_B6C2
0002DD42 <AmiBlitz3_wizzard.ab2@18446>   MOVEA.l $4(A0),A1
0002DD48 <AmiBlitz3_wizzard.ab2@18447>   ADDA.l destbufferstart,A1
0002DD4E <AmiBlitz3_wizzard.ab2@18448>   CMPA.l destbufferend,A1
0002DD52 <AmiBlitz3_wizzard.ab2@18449>   BCC.w JL_0_B6BC
0002DD56 <AmiBlitz3_wizzard.ab2@18450>   ADD.l D1,$4(A0)
0002DD58 <AmiBlitz3_wizzard.ab2@18453>   MOVEA.l (A0),A0
0002DD5C <AmiBlitz3_wizzard.ab2@18454> BRA.w JL_0_B69A
0002DD62 <AmiBlitz3_wizzard.ab2@18457>   MOVEA.l pushat,A1
0002DD64 <AmiBlitz3_wizzard.ab2@18458>   MOVEQ.l #$00,D0
0002DD6A <AmiBlitz3_wizzard.ab2@18459>   MOVE.w pushclen,D0
0002DD70 <AmiBlitz3_wizzard.ab2@18460>   MOVEA.l _execbase,A6
0002DD76 <AmiBlitz3_wizzard.ab2@18461>   MOVE.l mempool,a0
0002DD7A <AmiBlitz3_wizzard.ab2@18465>   MOVEM.l (A7)+,D0-D1/A0-A1
0002DD7C <AmiBlitz3_wizzard.ab2@18466> RTS
0002DD7E <AmiBlitz3_wizzard.ab2@18469>   MOVE.l D1,-(A7)                                          ;array mul
0002DD80 <AmiBlitz3_wizzard.ab2@18470>   MOVEQ.l #$00,D2
0002DD82 <AmiBlitz3_wizzard.ab2@18471>   MOVEQ.l #$0F,D3
0002DD84 <AmiBlitz3_wizzard.ab2@18474>     LSL.w #1,D1
0002DD88 <AmiBlitz3_wizzard.ab2@18475>     BCC.w JL_0_B6EE
0002DD8A <AmiBlitz3_wizzard.ab2@18476>     ADDQ.w #1,D2
0002DD8C <AmiBlitz3_wizzard.ab2@18477>     MOVE.w D3,D4
0002DD90 <AmiBlitz3_wizzard.ab2@18480>   DBF D3,JL_0_B6E4
0002DD92 <AmiBlitz3_wizzard.ab2@18482>   SUBQ.w #1,D2
0002DD96 <AmiBlitz3_wizzard.ab2@18483>    BNE.w JL_0_B726
0002DD98 <AmiBlitz3_wizzard.ab2@18484>   ADDQ.w #4,A7
0002DD9A <AmiBlitz3_wizzard.ab2@18485>   MOVE.w D4,D1
0002DD9E <AmiBlitz3_wizzard.ab2@18486>    BEQ.w JL_0_B724
0002DDA2 <AmiBlitz3_wizzard.ab2@18487>   CMP.w #$8,D1
0002DDA6 <AmiBlitz3_wizzard.ab2@18488>    BCS.w JL_0_B712
0002DDAA <AmiBlitz3_wizzard.ab2@18489>   SUBI.w #$8,D1
0002DDAE <AmiBlitz3_wizzard.ab2@18490>    BSR.w JL_0_B712
0002DDB0 <AmiBlitz3_wizzard.ab2@18491>   MOVEQ.l #$00,D1
0002DDB2 <AmiBlitz3_wizzard.ab2@18494>   LSL.w #8,D1
0002DDB4 <AmiBlitz3_wizzard.ab2@18495>   LSL.w #1,D1
0002DDB8 <AmiBlitz3_wizzard.ab2@18496>   ORI.w #$E188,D1
0002DDBE <AmiBlitz3_wizzard.ab2@18497>   OR.w regnum,D1
0002DDC2 <AmiBlitz3_wizzard.ab2@18498> BRA.w writeword
0002DDC4 <AmiBlitz3_wizzard.ab2@18501> RTS
0002DDC6 <AmiBlitz3_wizzard.ab2@18504>   MOVEQ #0,d1
0002DDCC <AmiBlitz3_wizzard.ab2@18505>   MOVE.w regnum,D1
0002DDCE <AmiBlitz3_wizzard.ab2@18506>   LSL.l #8,D1
0002DDD0 <AmiBlitz3_wizzard.ab2@18508>   LSL.l #4,d1
0002DDD6 <AmiBlitz3_wizzard.ab2@18510>   OR.l #$4c3c0000,d1
0002DDDC <AmiBlitz3_wizzard.ab2@18511>   OR.w regnum,d1
0002DDE0 <AmiBlitz3_wizzard.ab2@18512>   BSR.w writelong
0002DDE2 <AmiBlitz3_wizzard.ab2@18513>   MOVE.l (A7)+,D1
0002DDE6 <AmiBlitz3_wizzard.ab2@18515> BRA writelong
0002DDEC <AmiBlitz3_wizzard.ab2@18518>   MOVE.l destpointer,-(A7)
0002DDEE <AmiBlitz3_wizzard.ab2@18519>   MOVEQ.l #-$01,D7
0002DDF2 <AmiBlitz3_wizzard.ab2@18522>     BSR.w findhilib
0002DDF6 <AmiBlitz3_wizzard.ab2@18523>      BEQ.w JL_0_B8A4
0002DDFA <AmiBlitz3_wizzard.ab2@18524>     TST.w $C(A2)
0002DDFE <AmiBlitz3_wizzard.ab2@18525>      BPL.w JL_0_B746
0002DE02 <AmiBlitz3_wizzard.ab2@18527>     MOVE.l $16(A2),D1
0002DE06 <AmiBlitz3_wizzard.ab2@18528>     BEQ.w JL_0_B746
0002DE0A <AmiBlitz3_wizzard.ab2@18530>     MOVE.w $4(A2),D1                                       ; check state in D1 and do some things
0002DE0E <AmiBlitz3_wizzard.ab2@18531>     CMP.w #-$2,D1
0002DE12 <AmiBlitz3_wizzard.ab2@18532>      BNE.w JL_0_B772
0002DE16 <AmiBlitz3_wizzard.ab2@18533>     BSR.w makevsize
0002DE1A <AmiBlitz3_wizzard.ab2@18534> BRA.w JL_0_B7FE
0002DE1E <AmiBlitz3_wizzard.ab2@18537>     CMP.w #-$5C4,D1
0002DE22 <AmiBlitz3_wizzard.ab2@18538>      BNE.w JL_0_B790
0002DE26 <AmiBlitz3_wizzard.ab2@18539>     MOVE.w #$7000,D1
0002DE2E <AmiBlitz3_wizzard.ab2@18540>     BTST #$7,autorun
0002DE30 <AmiBlitz3_wizzard.ab2@18541>     SNE D1
0002DE34 <AmiBlitz3_wizzard.ab2@18542>     BSR.w writeword
0002DE38 <AmiBlitz3_wizzard.ab2@18543> BRA.w JL_0_B7FE
0002DE3C <AmiBlitz3_wizzard.ab2@18546>     CMP.w #-$12D,D1
0002DE40 <AmiBlitz3_wizzard.ab2@18547>      BNE.w JL_0_B7A0
0002DE44 <AmiBlitz3_wizzard.ab2@18548>     BSR.w makessize
0002DE48 <AmiBlitz3_wizzard.ab2@18549> BRA.w JL_0_B7FE
0002DE4C <AmiBlitz3_wizzard.ab2@18552>     CMP.w #-$1F5,D1
0002DE50 <AmiBlitz3_wizzard.ab2@18553>      BNE.w JL_0_B7C2
0002DE54 <AmiBlitz3_wizzard.ab2@18554>     MOVE.w #$203C,D1
0002DE58 <AmiBlitz3_wizzard.ab2@18555>     BSR.w writeword
0002DE5C <AmiBlitz3_wizzard.ab2@18556>     BSR.w addoff
0002DE62 <AmiBlitz3_wizzard.ab2@18557>     MOVE.l endop,D1
0002DE66 <AmiBlitz3_wizzard.ab2@18558>     BSR.w writelong
0002DE6A <AmiBlitz3_wizzard.ab2@18559> BRA.w JL_0_B7FE
0002DE6E <AmiBlitz3_wizzard.ab2@18562>     CMP.w #-$3E9,D1
0002DE72 <AmiBlitz3_wizzard.ab2@18563>      BNE.w JL_0_B7E4
0002DE76 <AmiBlitz3_wizzard.ab2@18564>     MOVE.w #$203C,D1
0002DE7A <AmiBlitz3_wizzard.ab2@18565>     BSR.w writeword
0002DE7E <AmiBlitz3_wizzard.ab2@18566>     BSR.w addoff
0002DE84 <AmiBlitz3_wizzard.ab2@18567>     MOVE.l data2at,D1
0002DE88 <AmiBlitz3_wizzard.ab2@18568>     BSR.w writelong
0002DE8C <AmiBlitz3_wizzard.ab2@18569> BRA.w JL_0_B7FE
0002DE90 <AmiBlitz3_wizzard.ab2@18572>     CMP.w #$1,D1
0002DE94 <AmiBlitz3_wizzard.ab2@18573>      BNE.w JL_0_B7FE
0002DE98 <AmiBlitz3_wizzard.ab2@18574>     MOVE.w #$203C,D1
0002DE9C <AmiBlitz3_wizzard.ab2@18575>     BSR.w writeword
0002DEA2 <AmiBlitz3_wizzard.ab2@18576>     MOVE.l ptr_seg_debugger,D1
0002DEA6 <AmiBlitz3_wizzard.ab2@18577>     BSR.w writelong
0002DEAA <AmiBlitz3_wizzard.ab2@18580>     MOVE.l $16(A2),D1
0002DEB2 <AmiBlitz3_wizzard.ab2@18581>     MOVE.w #$FFFF,lasta6
0002DEB6 <AmiBlitz3_wizzard.ab2@18582>     BSR.w Amakelibsub
0002DEBC <AmiBlitz3_wizzard.ab2@18583>     CMPI.w #$FFFE,$4(A2)
0002DEC0 <AmiBlitz3_wizzard.ab2@18584>      BNE.w JL_0_B83A
0002DEC6 <AmiBlitz3_wizzard.ab2@18585>     MOVE.l intdata1,D1
0002DECA <AmiBlitz3_wizzard.ab2@18586>      BEQ.w JL_0_B83A
0002DED0 <AmiBlitz3_wizzard.ab2@18587>     MOVE.w putidata1,D1
0002DED4 <AmiBlitz3_wizzard.ab2@18588>     BSR.w writeword
0002DED8 <AmiBlitz3_wizzard.ab2@18589>     BSR.w addoff
0002DEDE <AmiBlitz3_wizzard.ab2@18590>     MOVE.l intdata1,D1
0002DEE2 <AmiBlitz3_wizzard.ab2@18591>     BSR.w writelong
0002DEE6 <AmiBlitz3_wizzard.ab2@18594>     MOVE.w #$2B40,D1
0002DEEA <AmiBlitz3_wizzard.ab2@18595>     TST.w $1A(A2)
0002DEEE <AmiBlitz3_wizzard.ab2@18596>      BEQ.w JL_0_B746
0002DEF2 <AmiBlitz3_wizzard.ab2@18597>      BPL.w JL_0_B84E
0002DEF6 <AmiBlitz3_wizzard.ab2@18598>     MOVE.w #$3B40,D1
0002DEFA <AmiBlitz3_wizzard.ab2@18601>     BSR.w writeword
0002DEFE <AmiBlitz3_wizzard.ab2@18602>     MOVE.w $A(A2),D1
0002DF02 <AmiBlitz3_wizzard.ab2@18603>      BSR.w writeword
0002DF08 <AmiBlitz3_wizzard.ab2@18604>     CMPI.w #$FFFA,$4(A2)
0002DF0C <AmiBlitz3_wizzard.ab2@18605>      BNE.w JL_0_B746
0002DF0E <AmiBlitz3_wizzard.ab2@18606>     MOVE.w D7,-(A7)
0002DF14 <AmiBlitz3_wizzard.ab2@18607>     MOVE.w numstatic,D4
0002DF18 <AmiBlitz3_wizzard.ab2@18608>      BEQ.w JL_0_B882
0002DF1E <AmiBlitz3_wizzard.ab2@18609>     MOVE.l staticdata,D3
0002DF24 <AmiBlitz3_wizzard.ab2@18610>      JSR datastart
0002DF28 <AmiBlitz3_wizzard.ab2@18611>     MOVE.w #$C500,D1
0002DF2C <AmiBlitz3_wizzard.ab2@18612>      BSR.w tokejsr2
0002DF32 <AmiBlitz3_wizzard.ab2@18615>     MOVE.w maxsused,D4
0002DF36 <AmiBlitz3_wizzard.ab2@18616>      BEQ.w JL_0_B89E
0002DF3C <AmiBlitz3_wizzard.ab2@18617>     MOVE.l maxsat,D3
0002DF42 <AmiBlitz3_wizzard.ab2@18618>      JSR datastart
0002DF46 <AmiBlitz3_wizzard.ab2@18619>     MOVE.w #$CF00,D1
0002DF4A <AmiBlitz3_wizzard.ab2@18620>      BSR.w tokejsr2
0002DF4C <AmiBlitz3_wizzard.ab2@18623>     MOVE.w (A7)+,D7
0002DF50 <AmiBlitz3_wizzard.ab2@18624> BRA.w JL_0_B746
0002DF56 <AmiBlitz3_wizzard.ab2@18627>   MOVE.l destpointer,D1
0002DF58 <AmiBlitz3_wizzard.ab2@18628>   CMP.l (A7),D1
0002DF5C <AmiBlitz3_wizzard.ab2@18629>    BNE.w JL_0_B8BC
0002DF64 <AmiBlitz3_wizzard.ab2@18630>   MOVE.w #$0008,noinits+2
0002DF68 <AmiBlitz3_wizzard.ab2@18631> BRA.w JL_0_B8E6
0002DF6E <AmiBlitz3_wizzard.ab2@18634>   CLR.w noinits+2
0002DF74 <AmiBlitz3_wizzard.ab2@18635>   MOVE.w dontwrite,D1
0002DF78 <AmiBlitz3_wizzard.ab2@18636>    BNE.w JL_0_B8DE
0002DF7E <AmiBlitz3_wizzard.ab2@18637>   TST.l newinitaddr
0002DF82 <AmiBlitz3_wizzard.ab2@18638>    BEQ 'l10
0002DF88 <AmiBlitz3_wizzard.ab2@18639>   MOVE.l newinitaddr,D2
0002DF8E <AmiBlitz3_wizzard.ab2@18640>   SUB.l destbufferstart,D2
0002DF90 <AmiBlitz3_wizzard.ab2@18641>   ADDQ.l #2,d2
0002DF96 <AmiBlitz3_wizzard.ab2@18642>   MOVEA.l newinitaddr,A0                                   ;write newinitcode
0002DF9A <AmiBlitz3_wizzard.ab2@18644>   MOVE.w #$4EB9,(A0)+
0002DF9C <AmiBlitz3_wizzard.ab2@18645>   MOVE.l (A7),(A0)+
0002DFA0 <AmiBlitz3_wizzard.ab2@18647> BRA 'l20
0002DFA6 <AmiBlitz3_wizzard.ab2@18650>   MOVEA.l destbufferstart,A0                               ;write initcode
0002DFAC <AmiBlitz3_wizzard.ab2@18651>   TST.b saved0
0002DFB0 <AmiBlitz3_wizzard.ab2@18652>   BEQ 'l1
0002DFB4 <AmiBlitz3_wizzard.ab2@18653>   MOVE.w #$23c0,(a0)+
0002DFB6 <AmiBlitz3_wizzard.ab2@18654>   MOVE.l a0,a1
0002DFB8 <AmiBlitz3_wizzard.ab2@18655>   ADDQ.l #6,a1
0002DFBA <AmiBlitz3_wizzard.ab2@18656>   MOVE.l a1,(a0)+
0002DFBC <AmiBlitz3_wizzard.ab2@18657>   MOVEQ.l #$02,D2
0002DFC0 <AmiBlitz3_wizzard.ab2@18658>   BSR.w addhunkoffset
0002DFC4 <AmiBlitz3_wizzard.ab2@18659>   MOVE.w #$6004,(a0)+
0002DFCA <AmiBlitz3_wizzard.ab2@18660>   MOVE.l #$4e714e71,(a0)+
0002DFCE <AmiBlitz3_wizzard.ab2@18663>   MOVE.w #$4EB9,(A0)+
0002DFD0 <AmiBlitz3_wizzard.ab2@18664>   MOVE.l (A7),(A0)+
0002DFD2 <AmiBlitz3_wizzard.ab2@18665>   MOVEQ #2,d2
0002DFD8 <AmiBlitz3_wizzard.ab2@18666>   TST.b saved0
0002DFDC <AmiBlitz3_wizzard.ab2@18667>   BEQ 'l20
0002DFDE <AmiBlitz3_wizzard.ab2@18668>   MOVEQ.l #14,D2
0002DFE2 <AmiBlitz3_wizzard.ab2@18671>   BSR.w addhunkoffset
0002DFE6 <AmiBlitz3_wizzard.ab2@18672>   MOVE.w #$2039,(a0)+
0002DFE8 <AmiBlitz3_wizzard.ab2@18673>   MOVE.l a1,(a0)+
0002DFEA <AmiBlitz3_wizzard.ab2@18674>   MOVEQ.l #20,d2
0002DFEE <AmiBlitz3_wizzard.ab2@18677>   BSR.w addhunkoffset
0002DFF2 <AmiBlitz3_wizzard.ab2@18680>   MOVE.w #$4E75,D1
0002DFF6 <AmiBlitz3_wizzard.ab2@18681>   BSR.w writeword
0002DFF8 <AmiBlitz3_wizzard.ab2@18684>   ADDQ.w #4,A7
0002DFFA <AmiBlitz3_wizzard.ab2@18685> RTS
0002DFFE <AmiBlitz3_wizzard.ab2@18690>   Dc.b $22,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D1
0002E004 <AmiBlitz3_wizzard.ab2@18692>   Dc.b $23,$CD,$00,$00,$00,$00                             ;MOVE.L  A5,$00000000
0002E00A <AmiBlitz3_wizzard.ab2@18694>   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0002E010 <AmiBlitz3_wizzard.ab2@18699>   MOVE.l stringbuffer,D1
0002E014 <AmiBlitz3_wizzard.ab2@18700> BRA.w makesize
0002E016 <AmiBlitz3_wizzard.ab2@18703>   MOVEQ.l #$00,D1
0002E01C <AmiBlitz3_wizzard.ab2@18704>   MOVE.w globalvarpointer,D1
0002E020 <AmiBlitz3_wizzard.ab2@18705>   SUBI.w #$8000,D1
0002E024 <AmiBlitz3_wizzard.ab2@18706>   BNE.w makesize
0002E026 <AmiBlitz3_wizzard.ab2@18707>     MOVEQ.l #$08,D1
0002E028 <AmiBlitz3_wizzard.ab2@18710>   MOVE.l D1,-(A7)
0002E02C <AmiBlitz3_wizzard.ab2@18711>   MOVE.w #$203C,D1
0002E030 <AmiBlitz3_wizzard.ab2@18712>   BSR.w writeword
0002E032 <AmiBlitz3_wizzard.ab2@18713>   MOVE.l (A7)+,D1
0002E036 <AmiBlitz3_wizzard.ab2@18714> BRA.w writelong
0002E038 <AmiBlitz3_wizzard.ab2@18722>   MOVEQ.l #$00,D1
0002E03E <AmiBlitz3_wizzard.ab2@18723>   MOVEA.l libpointer,A1
0002E042 <AmiBlitz3_wizzard.ab2@18726>     CMPA.w #$0,A1
0002E046 <AmiBlitz3_wizzard.ab2@18727>     BEQ.w findhilib__done
0002E04A <AmiBlitz3_wizzard.ab2@18728>       CMP.w $4(A1),D7
0002E04E <AmiBlitz3_wizzard.ab2@18729>       BLS.w findhilib__next
0002E052 <AmiBlitz3_wizzard.ab2@18730>         CMP.w $4(A1),D1
0002E056 <AmiBlitz3_wizzard.ab2@18731>         BCC.w findhilib__next
0002E05A <AmiBlitz3_wizzard.ab2@18732>           MOVE.w $4(A1),D1
0002E05C <AmiBlitz3_wizzard.ab2@18733>           MOVEA.l A1,A2
0002E05E <AmiBlitz3_wizzard.ab2@18736>     MOVEA.l (A1),A1
0002E062 <AmiBlitz3_wizzard.ab2@18737> BRA.w findhilib__loop
0002E064 <AmiBlitz3_wizzard.ab2@18740>   MOVE.w D1,D7
0002E066 <AmiBlitz3_wizzard.ab2@18741> RTS
0002E068 <AmiBlitz3_wizzard.ab2@18749>   MOVEQ.l #-$01,D1
0002E06E <AmiBlitz3_wizzard.ab2@18750>   MOVEA.l libpointer,A1
0002E072 <AmiBlitz3_wizzard.ab2@18753>     CMPA.w #$0,A1
0002E076 <AmiBlitz3_wizzard.ab2@18754>      BEQ.w findlolib__done
0002E07A <AmiBlitz3_wizzard.ab2@18755>     CMP.w $4(A1),D7
0002E07E <AmiBlitz3_wizzard.ab2@18756>      BCC.w findlolib__next
0002E082 <AmiBlitz3_wizzard.ab2@18757>     CMP.w $4(A1),D1
0002E086 <AmiBlitz3_wizzard.ab2@18758>      BLS.w findlolib__next
0002E08A <AmiBlitz3_wizzard.ab2@18759>     MOVE.w $4(A1),D1
0002E08C <AmiBlitz3_wizzard.ab2@18760>     MOVEA.l A1,A2
0002E08E <AmiBlitz3_wizzard.ab2@18763>     MOVEA.l (A1),A1
0002E092 <AmiBlitz3_wizzard.ab2@18764> BRA.w findlolib__loop
0002E094 <AmiBlitz3_wizzard.ab2@18767>   MOVE.w D1,D7
0002E098 <AmiBlitz3_wizzard.ab2@18768>   CMP.w #-$1,D1
0002E09A <AmiBlitz3_wizzard.ab2@18769> RTS
0002E0A0 <AmiBlitz3_wizzard.ab2@18773>   ADDQ.w #1,globalvarpointer
0002E0A8 <AmiBlitz3_wizzard.ab2@18774>   BCLR #$0,globalvarpointer+1
0002E0AA <AmiBlitz3_wizzard.ab2@18775>   MOVEQ.l #$00,D7
0002E0AE <AmiBlitz3_wizzard.ab2@18778>     BSR.w findlolib
0002E0B2 <AmiBlitz3_wizzard.ab2@18779>     BEQ.w JL_0_BA74
0002E0B6 <AmiBlitz3_wizzard.ab2@18780>     TST.w $C(A2)
0002E0BA <AmiBlitz3_wizzard.ab2@18781>     BPL.w JL_0_B99A
0002E0BC <AmiBlitz3_wizzard.ab2@18782>     MOVEA.l A2,A1
0002E0C0 <AmiBlitz3_wizzard.ab2@18783>     ADDA.l $12(A1),A1
0002E0C4 <AmiBlitz3_wizzard.ab2@18784>     TST.w -$2(A1)
0002E0C8 <AmiBlitz3_wizzard.ab2@18785>     BEQ.w JL_0_BA34
0002E0CC <AmiBlitz3_wizzard.ab2@18786>     MOVE.l -$A(A1),D1
0002E0D0 <AmiBlitz3_wizzard.ab2@18787>     LEA $6(A2,D1.L),A3
0002E0D2 <AmiBlitz3_wizzard.ab2@18790>       TST.w (A3)+
0002E0D6 <AmiBlitz3_wizzard.ab2@18791>       BEQ.w JL_0_B9CC
0002E0D8 <AmiBlitz3_wizzard.ab2@18792>         ADDQ.w #2,A3
0002E0DC <AmiBlitz3_wizzard.ab2@18793> BRA.w JL_0_B9C0
0002E0E0 <AmiBlitz3_wizzard.ab2@18796>     TST.l $4(A3)
0002E0E4 <AmiBlitz3_wizzard.ab2@18797>     BEQ.w JL_0_BA34
0002E0E8 <AmiBlitz3_wizzard.ab2@18798>       MOVE.w freemax(PC),D1
0002E0EC <AmiBlitz3_wizzard.ab2@18799>       BSR.w writeword
0002E0F0 <AmiBlitz3_wizzard.ab2@18800>       MOVE.w -$4(A1),D1
0002E0F4 <AmiBlitz3_wizzard.ab2@18801>       BSR.w writeword
0002E0FA <AmiBlitz3_wizzard.ab2@18802>       MOVE.l free,D1
0002E0FE <AmiBlitz3_wizzard.ab2@18803>       MOVE.w -$6(A1),D1
0002E102 <AmiBlitz3_wizzard.ab2@18804>       BSR.w writelong
0002E108 <AmiBlitz3_wizzard.ab2@18805>       MOVE.l destpointer,-(A7)
0002E10A <AmiBlitz3_wizzard.ab2@18806>       MOVEQ.l #$01,D1
0002E10E <AmiBlitz3_wizzard.ab2@18807>       MOVE.w -$2(A1),D2
0002E110 <AmiBlitz3_wizzard.ab2@18808>       LSL.w D2,D1
0002E112 <AmiBlitz3_wizzard.ab2@18809>       MOVE.w D1,-(A7)
0002E116 <AmiBlitz3_wizzard.ab2@18810>       MOVE.l -$A(A1),D1
0002E11A <AmiBlitz3_wizzard.ab2@18811>       BSR.w Amakelibsub
0002E11E <AmiBlitz3_wizzard.ab2@18812>       MOVE.w freemax3(PC),D1
0002E122 <AmiBlitz3_wizzard.ab2@18813>       BSR.w writeword
0002E124 <AmiBlitz3_wizzard.ab2@18814>       MOVE.w (A7)+,D1
0002E128 <AmiBlitz3_wizzard.ab2@18815>       BSR.w writeword
0002E12C <AmiBlitz3_wizzard.ab2@18816>       MOVE.l freemax2(PC),D1
0002E130 <AmiBlitz3_wizzard.ab2@18817>       BSR.w writelong
0002E132 <AmiBlitz3_wizzard.ab2@18818>       MOVE.l (A7)+,D1
0002E138 <AmiBlitz3_wizzard.ab2@18819>       SUB.l destpointer,D1
0002E13C <AmiBlitz3_wizzard.ab2@18820>       BSR.w writeword
0002E140 <AmiBlitz3_wizzard.ab2@18821>       MOVE.w freemax4(PC),D1
0002E144 <AmiBlitz3_wizzard.ab2@18822>       BSR.w writeword
0002E148 <AmiBlitz3_wizzard.ab2@18825>     MOVE.l $1C(A2),D1
0002E14C <AmiBlitz3_wizzard.ab2@18826>     BEQ.w JL_0_B99A
0002E150 <AmiBlitz3_wizzard.ab2@18828>     MOVE.w $4(A2),D1
0002E154 <AmiBlitz3_wizzard.ab2@18829>     CMP.w #-$2,D1
0002E158 <AmiBlitz3_wizzard.ab2@18830>     BNE.w JL_0_BA50
0002E15C <AmiBlitz3_wizzard.ab2@18831>       BSR.w makevsize
0002E160 <AmiBlitz3_wizzard.ab2@18832> BRA.w JL_0_BA60
0002E164 <AmiBlitz3_wizzard.ab2@18835>     CMP.w #-$12D,D1
0002E168 <AmiBlitz3_wizzard.ab2@18836>     BNE.w JL_0_BA60
0002E16C <AmiBlitz3_wizzard.ab2@18837>       BSR.w makessize
0002E170 <AmiBlitz3_wizzard.ab2@18838> BRA.w JL_0_BA60
0002E174 <AmiBlitz3_wizzard.ab2@18841>     MOVE.l $1C(A2),D1
0002E17C <AmiBlitz3_wizzard.ab2@18842>     MOVE.w #$FFFF,lasta6
0002E180 <AmiBlitz3_wizzard.ab2@18843>     BSR.w Amakelibsub
0002E184 <AmiBlitz3_wizzard.ab2@18844> BRA.w JL_0_B99A
0002E186 <AmiBlitz3_wizzard.ab2@18847> RTS
0002E18A <AmiBlitz3_wizzard.ab2@18851> freemax:   Dc.b $3F,$3C,$00,$00                            ;MOVE.W  #$0000,-(A7)
0002E18C <AmiBlitz3_wizzard.ab2@18853> freemax2:  Dc.b $53,$57                                    ;SUBQ.W  #1,(A7)
0002E190 <AmiBlitz3_wizzard.ab2@18854>            Dc.b $66,$00,$FF,$FC                            ;BNE.W freemax2
0002E192 <AmiBlitz3_wizzard.ab2@18855> freemax4:  Dc.b $54,$4F                                    ;ADDQ.W  #2,A7
0002E196 <AmiBlitz3_wizzard.ab2@18856> freemax3:  Dc.b $47,$EB,$00,$00                            ;LEA $0000(A3),A3
0002E19C <AmiBlitz3_wizzard.ab2@18861>   TST.b debugmode
0002E1A0 <AmiBlitz3_wizzard.ab2@18862>    BEQ.b chkstak__skip
0002E1A6 <AmiBlitz3_wizzard.ab2@18863>   TST.w debugversion
0002E1AA <AmiBlitz3_wizzard.ab2@18864>    BNE.b chkstak__skip
0002E1AE <AmiBlitz3_wizzard.ab2@18865>   MOVE.w #$C308,D1
0002E1B2 <AmiBlitz3_wizzard.ab2@18866> BRA.w Atokejsr
0002E1B4 <AmiBlitz3_wizzard.ab2@18869> RTS
0002E1BC <AmiBlitz3_wizzard.ab2@18873>   MOVE.w #$FFFF,lasta6
0002E1C0 <AmiBlitz3_wizzard.ab2@18878>   MOVEM.l D0-d7/A0-a6,-(A7)
0002E1C8 <AmiBlitz3_wizzard.ab2@18879>   MOVE.b #1,nostringopt
0002E1CE <AmiBlitz3_wizzard.ab2@18880>   JSR searchinstr
0002E1D0 <AmiBlitz3_wizzard.ab2@18881>   MOVE.l A3,D1
0002E1D2 <AmiBlitz3_wizzard.ab2@18882>   SUB.l A2,D1
0002E1D6 <AmiBlitz3_wizzard.ab2@18883>   BSR.w Amakelibsub
0002E1DA <AmiBlitz3_wizzard.ab2@18884>   MOVEM.l (A7)+,d0-d7/a0-a6
0002E1DC <AmiBlitz3_wizzard.ab2@18885> RTS
0002E1E2 <AmiBlitz3_wizzard.ab2@18892>   MOVE.l libisat,-(A7)                                   ;library write
0002E1E8 <AmiBlitz3_wizzard.ab2@18893>   MOVE.l A2,libisat
0002E1EA <AmiBlitz3_wizzard.ab2@18895>   MOVEA.l A1,A2
0002E1EC <AmiBlitz3_wizzard.ab2@18896>   MOVE.w (A2)+,D1
0002E1F2 <AmiBlitz3_wizzard.ab2@18897>   MOVE.l a2,lastinstructionaddr
0002E1F6 <AmiBlitz3_wizzard.ab2@18898>   ANDI.w #$FF,D1
0002E1F8 <AmiBlitz3_wizzard.ab2@18899>   ADDA.w D1,A2
0002E1FA <AmiBlitz3_wizzard.ab2@18900>   EXG.l D0,A2
0002E1FC <AmiBlitz3_wizzard.ab2@18901>   ADDQ.l #1,D0
0002E200 <AmiBlitz3_wizzard.ab2@18902>   BCLR #$0,D0
0002E202 <AmiBlitz3_wizzard.ab2@18903>   EXG.l D0,A2
0002E206 <AmiBlitz3_wizzard.ab2@18904> BRA.w JL_0_BB08
0002E20C <AmiBlitz3_wizzard.ab2@18908>   MOVE.l libisat,-(A7)
0002E212 <AmiBlitz3_wizzard.ab2@18909>   MOVE.l A2,libisat
0002E214 <AmiBlitz3_wizzard.ab2@18910>   MOVEA.l A3,A2
0002E218 <AmiBlitz3_wizzard.ab2@18911> BRA.w JL_0_BB08
0002E21A <AmiBlitz3_wizzard.ab2@18915>   MOVE.l a1,-(a7)
0002E21C <AmiBlitz3_wizzard.ab2@18918>   MOVE.l d0,a0
0002E220 <AmiBlitz3_wizzard.ab2@18919>   MOVE.l $a(a0),d0
0002E222 <AmiBlitz3_wizzard.ab2@18920>   MOVE.l d0,a1
0002E22A <AmiBlitz3_wizzard.ab2@18921>   CMP.l #8,4(a1)
0002E22E <AmiBlitz3_wizzard.ab2@18922>   BLE 'norec
0002E230 <AmiBlitz3_wizzard.ab2@18923>   MOVE.l a0,-(a7)
0002E236 <AmiBlitz3_wizzard.ab2@18924>   MOVE.l typebase,-(a7)
0002E238 <AmiBlitz3_wizzard.ab2@18925>   MOVEQ #0,d0
0002E23C <AmiBlitz3_wizzard.ab2@18926>   MOVE.w 4(a0),d0
0002E242 <AmiBlitz3_wizzard.ab2@18927>   ADD.l d0,typebase
0002E246 <AmiBlitz3_wizzard.ab2@18928>   MOVE.l $4(a1),d0
0002E24A <AmiBlitz3_wizzard.ab2@18929>   BSR scantype
0002E250 <AmiBlitz3_wizzard.ab2@18930>   MOVE.l (a7)+,typebase
0002E252 <AmiBlitz3_wizzard.ab2@18931>   MOVE.l (a7)+,a0
0002E258 <AmiBlitz3_wizzard.ab2@18934>   CMP.l #newtype_string,d0
0002E25C <AmiBlitz3_wizzard.ab2@18935>   BNE 'nostring
0002E262 <AmiBlitz3_wizzard.ab2@18936>   ADDQ #2,a2offset
0002E268 <AmiBlitz3_wizzard.ab2@18937>   MOVE.l #$3f3c0000,d1
0002E26A <AmiBlitz3_wizzard.ab2@18938>   MOVEQ #0,d0
0002E26E <AmiBlitz3_wizzard.ab2@18939>   MOVE.w 4(a0),d0
0002E274 <AmiBlitz3_wizzard.ab2@18940>   ADD.l typebase,d0
0002E276 <AmiBlitz3_wizzard.ab2@18941>   MOVE.w d0,d1
0002E27A <AmiBlitz3_wizzard.ab2@18942>   BSR writelong
0002E280 <AmiBlitz3_wizzard.ab2@18943>   TST.b debugmode
0002E284 <AmiBlitz3_wizzard.ab2@18944>   BEQ 'l1a
0002E286 <AmiBlitz3_wizzard.ab2@18945>   MOVE.l d1,-(a7)
0002E28C <AmiBlitz3_wizzard.ab2@18946>   MOVE.l #$c308,d1
0002E292 <AmiBlitz3_wizzard.ab2@18947>   JSR Atokejsr
0002E294 <AmiBlitz3_wizzard.ab2@18948>   MOVE.l (a7)+,d1
0002E298 <AmiBlitz3_wizzard.ab2@18951>   TST.w 8(a0)
0002E29C <AmiBlitz3_wizzard.ab2@18952>   BEQ 'nostring
0002E2A0 <AmiBlitz3_wizzard.ab2@18953>   MOVEM.l d2/d3,-(a7)
0002E2A2 <AmiBlitz3_wizzard.ab2@18954>   MOVE.l d1,d2
0002E2A4 <AmiBlitz3_wizzard.ab2@18955>   MOVEQ #0,d3
0002E2A8 <AmiBlitz3_wizzard.ab2@18956>   MOVE.w 8(a0),d3
0002E2AA <AmiBlitz3_wizzard.ab2@18957>   SUBQ.l #1,d3
0002E2AE <AmiBlitz3_wizzard.ab2@18958>   BEQ 'nostring2
0002E2B0 <AmiBlitz3_wizzard.ab2@18961>   ADDQ.l #4,d2
0002E2B2 <AmiBlitz3_wizzard.ab2@18962>   MOVE.l d2,d1
0002E2B6 <AmiBlitz3_wizzard.ab2@18963>   BSR writelong
0002E2BC <AmiBlitz3_wizzard.ab2@18964>   TST.b debugmode
0002E2C0 <AmiBlitz3_wizzard.ab2@18965>   BEQ 'l1
0002E2C6 <AmiBlitz3_wizzard.ab2@18966>   MOVE.l #$c308,d1
0002E2CC <AmiBlitz3_wizzard.ab2@18967>   JSR Atokejsr
0002E2D2 <AmiBlitz3_wizzard.ab2@18970>   ADDQ #2,a2offset
0002E2D4 <AmiBlitz3_wizzard.ab2@18971>   SUBQ.l #1,d3
0002E2D8 <AmiBlitz3_wizzard.ab2@18972>   BNE 'loop
0002E2DC <AmiBlitz3_wizzard.ab2@18975>   MOVEM.l (a7)+,d2/d3
0002E2DE <AmiBlitz3_wizzard.ab2@18978>   MOVE.l (a0),d0
0002E2E2 <AmiBlitz3_wizzard.ab2@18979>   BNE 'more
0002E2E4 <AmiBlitz3_wizzard.ab2@18980>   MOVE.l (a7)+,a1
0002E2E6 <AmiBlitz3_wizzard.ab2@18981> RTS
0002E2EA <AmiBlitz3_wizzard.ab2@18984> libisat:   Ds.l 1
0002E2F0 <AmiBlitz3_wizzard.ab2@18990>   MOVE.l libisat,-(A7)                                   
0002E2F6 <AmiBlitz3_wizzard.ab2@18991>   MOVE.l A2,libisat
0002E2FA <AmiBlitz3_wizzard.ab2@18992>   LEA $6(A2,D1.L),A2
0002E302 <AmiBlitz3_wizzard.ab2@18996>   CMP.l #$3e19436c,$1c-8(a2)                               ;clear type
0002E306 <AmiBlitz3_wizzard.ab2@18997>   BEQ 'dowritevar
0002E30E <AmiBlitz3_wizzard.ab2@18998>   CMP.l #$3e18436f,$1c-8(a2)                               ;copy type
0002E312 <AmiBlitz3_wizzard.ab2@18999>   BEQ 'dowritevar
0002E31A <AmiBlitz3_wizzard.ab2@19000>   CMP.l #$3e175265,$1c(a2)
0002E31E <AmiBlitz3_wizzard.ab2@19001>   BEQ 'dowritevar
0002E326 <AmiBlitz3_wizzard.ab2@19002>   CMP.l #$3e165772,$1c(a2)
0002E32A <AmiBlitz3_wizzard.ab2@19003>   BNE 'nowritef
0002E32E <AmiBlitz3_wizzard.ab2@19006>   MOVEM.l a0-a2/d2,-(a7)
0002E330 <AmiBlitz3_wizzard.ab2@19007>   MOVEQ #0,d1
0002E33A <AmiBlitz3_wizzard.ab2@19008>   MOVE.l #0,typebase
0002E33E <AmiBlitz3_wizzard.ab2@19009>   MOVE.l $a(a3),a0
0002E342 <AmiBlitz3_wizzard.ab2@19010>   MOVE.l $4(a0),d0
0002E348 <AmiBlitz3_wizzard.ab2@19011>   CMP.l #8,d0
0002E34C <AmiBlitz3_wizzard.ab2@19012>   BLE 'notype
0002E350 <AmiBlitz3_wizzard.ab2@19013>   BSR scantype
0002E356 <AmiBlitz3_wizzard.ab2@19016>   MOVE.l #$3f3c0000,d1
0002E35C <AmiBlitz3_wizzard.ab2@19017>   MOVE.w a2offset,d1
0002E360 <AmiBlitz3_wizzard.ab2@19018>   BSR writelong
0002E366 <AmiBlitz3_wizzard.ab2@19019>   MOVE.l #$3f3c0000,d1
0002E36A <AmiBlitz3_wizzard.ab2@19020>   MOVE.l $a(a3),a0
0002E36E <AmiBlitz3_wizzard.ab2@19021>   MOVE.w 8(a0),d1
0002E372 <AmiBlitz3_wizzard.ab2@19022>   BSR writelong
0002E378 <AmiBlitz3_wizzard.ab2@19023>   MOVE.l #$3f3cab12,d1
0002E37C <AmiBlitz3_wizzard.ab2@19024>   BSR writelong
0002E382 <AmiBlitz3_wizzard.ab2@19025>   ADDQ.w #6,a2offset
0002E386 <AmiBlitz3_wizzard.ab2@19026>   MOVEM.l (a7)+,a0-a2/d2
0002E38C <AmiBlitz3_wizzard.ab2@19029>   TST.b fpu
0002E390 <AmiBlitz3_wizzard.ab2@19030>   BEQ 'nofpu2
0002E398 <AmiBlitz3_wizzard.ab2@19031>   CMP.l #$496e7400,$1a(a2)
0002E39C <AmiBlitz3_wizzard.ab2@19032>   BNE 'noint
0002E39E <AmiBlitz3_wizzard.ab2@19033>   MOVEQ #0,d1
0002E3A4 <AmiBlitz3_wizzard.ab2@19034>   SUBQ.l #8,destpointer                                    ;fpu int
0002E3AA <AmiBlitz3_wizzard.ab2@19035>   CLR.w a2offset
0002E3AE <AmiBlitz3_wizzard.ab2@19036>   CMP.b #2,d2
0002E3B2 <AmiBlitz3_wizzard.ab2@19037>   BGT 'noword
0002E3B6 <AmiBlitz3_wizzard.ab2@19038>   MOVE.w #$48c0,d1
0002E3BC <AmiBlitz3_wizzard.ab2@19039>   OR.w regnumstore,d1
0002E3C0 <AmiBlitz3_wizzard.ab2@19040>   BSR writeword
0002E3C4 <AmiBlitz3_wizzard.ab2@19041> BRA 'exit2
0002E3C8 <AmiBlitz3_wizzard.ab2@19044>    CMP.b #3,d2
0002E3CC <AmiBlitz3_wizzard.ab2@19045>         BNE 'nolong
0002E3D0 <AmiBlitz3_wizzard.ab2@19046> BRA 'exit2
0002E3D4 <AmiBlitz3_wizzard.ab2@19049>    CMP.b #4,d2
0002E3D8 <AmiBlitz3_wizzard.ab2@19050>         BNE 'noquick
0002E3DC <AmiBlitz3_wizzard.ab2@19051>         MOVE.w #$e080,d1
0002E3E2 <AmiBlitz3_wizzard.ab2@19052>         OR.w regnumstore,d1
0002E3E6 <AmiBlitz3_wizzard.ab2@19053>         BSR writeword
0002E3EA <AmiBlitz3_wizzard.ab2@19054>         MOVE.w #$e080,d1
0002E3F0 <AmiBlitz3_wizzard.ab2@19055>         OR.w regnumstore,d1
0002E3F4 <AmiBlitz3_wizzard.ab2@19056>         BSR writeword
0002E3F8 <AmiBlitz3_wizzard.ab2@19057> BRA 'exit2
0002E3FA <AmiBlitz3_wizzard.ab2@19060>         MOVEQ #0,d0
0002E3FC <AmiBlitz3_wizzard.ab2@19061>         MOVEQ #0,d1
0002E402 <AmiBlitz3_wizzard.ab2@19062>         MOVE.w regnumstore,d0
0002E404 <AmiBlitz3_wizzard.ab2@19063>         ASL.l #7,d0
0002E40A <AmiBlitz3_wizzard.ab2@19064>         OR.l #$f23c4428,d1                                 ;fsub.s 0.5,fpx
0002E40C <AmiBlitz3_wizzard.ab2@19065>         OR.l d0,d1
0002E412 <AmiBlitz3_wizzard.ab2@19067>         MOVE.l #$3f000000,d1
0002E414 <AmiBlitz3_wizzard.ab2@19069>         MOVEQ #0,d0
0002E416 <AmiBlitz3_wizzard.ab2@19070>         MOVEQ #0,d1
0002E41C <AmiBlitz3_wizzard.ab2@19071>         MOVE.w regnumstore,d0
0002E41E <AmiBlitz3_wizzard.ab2@19072>         ASL.l #7,d0
0002E420 <AmiBlitz3_wizzard.ab2@19073>         MOVE.l d0,d1
0002E426 <AmiBlitz3_wizzard.ab2@19074>         OR.l #$f2000003,d1                                 ;fintrz fpx
0002E428 <AmiBlitz3_wizzard.ab2@19075>         ASL.l #3,d0
0002E42A <AmiBlitz3_wizzard.ab2@19076>         OR.l d0,d1
0002E42E <AmiBlitz3_wizzard.ab2@19077>         BSR writelong
0002E430 <AmiBlitz3_wizzard.ab2@19078>         MOVEQ #0,d0
0002E436 <AmiBlitz3_wizzard.ab2@19079>         MOVE.w regnumstore,d0
0002E438 <AmiBlitz3_wizzard.ab2@19080>         ASL.l #7,d0
0002E43E <AmiBlitz3_wizzard.ab2@19081>         MOVE.l #$f2006000,d1                               ;fmove.l fp0,d0
0002E440 <AmiBlitz3_wizzard.ab2@19082>         OR.l d0,d1
0002E442 <AmiBlitz3_wizzard.ab2@19083>         ASL.l #1,d0
0002E444 <AmiBlitz3_wizzard.ab2@19084>         ASL.l #8,d0
0002E446 <AmiBlitz3_wizzard.ab2@19085>         OR.l d0,d1
0002E44A <AmiBlitz3_wizzard.ab2@19086> BRA 'exit
0002E450 <AmiBlitz3_wizzard.ab2@19089>   CMP.w #$3c01,24(a2)
0002E454 <AmiBlitz3_wizzard.ab2@19090>   BNE 'noval
0002E456 <AmiBlitz3_wizzard.ab2@19091>   MOVE.l a2,-(a7)
0002E45A <AmiBlitz3_wizzard.ab2@19092>   BSR.w JL_0_BB14
0002E45C <AmiBlitz3_wizzard.ab2@19093>   MOVE.l (a7)+,a2
0002E460 <AmiBlitz3_wizzard.ab2@19094> BRA 'exit2
0002E468 <AmiBlitz3_wizzard.ab2@19111>   CMP.l #$41627300,$1a(a2)
0002E46C <AmiBlitz3_wizzard.ab2@19112>   BNE 'noabs
0002E46E <AmiBlitz3_wizzard.ab2@19113>   MOVEQ #0,d1
0002E474 <AmiBlitz3_wizzard.ab2@19114>   MOVE.w regnumstore,d1
0002E476 <AmiBlitz3_wizzard.ab2@19115>   MOVE.w d1,d0
0002E478 <AmiBlitz3_wizzard.ab2@19116>   ASL.w #7,d1
0002E47A <AmiBlitz3_wizzard.ab2@19117>   ASL.w #8,d0
0002E47C <AmiBlitz3_wizzard.ab2@19118>   ASL.w #2,d0
0002E47E <AmiBlitz3_wizzard.ab2@19119>   OR.w d0,d1
0002E484 <AmiBlitz3_wizzard.ab2@19120>   SUBQ.l #8,destpointer                                    ;fpu abs
0002E488 <AmiBlitz3_wizzard.ab2@19121>   MOVEM.l d3/d1,-(a7)
0002E48C <AmiBlitz3_wizzard.ab2@19122>   MOVE.w #5,d3
0002E48E <AmiBlitz3_wizzard.ab2@19123>   EXG d2,d3
0002E494 <AmiBlitz3_wizzard.ab2@19124>   MOVE.w regnum,-(a7)
0002E49E <AmiBlitz3_wizzard.ab2@19125>   MOVE.w regnumstore,regnum
0002E4A2 <AmiBlitz3_wizzard.ab2@19126>   BSR writeconvertcode
0002E4A8 <AmiBlitz3_wizzard.ab2@19127>   MOVE.w (a7)+,regnum
0002E4AA <AmiBlitz3_wizzard.ab2@19128>   EXG d2,d3
0002E4AE <AmiBlitz3_wizzard.ab2@19129>   MOVEM.l (a7)+,d3/d1
0002E4B4 <AmiBlitz3_wizzard.ab2@19130>   OR.l #$f2000018,d1
0002E4BA <AmiBlitz3_wizzard.ab2@19131>   CLR.w a2offset
0002E4BE <AmiBlitz3_wizzard.ab2@19132> BRA 'exit
0002E4C2 <AmiBlitz3_wizzard.ab2@19135>   CMP.b #5,d2
0002E4C6 <AmiBlitz3_wizzard.ab2@19136>   BNE 'nofpu2
0002E4CA <AmiBlitz3_wizzard.ab2@19137>   MOVE.b 24(a2),d0
0002E4CE <AmiBlitz3_wizzard.ab2@19138>   CMP.b #$60,d0                                            ;nolib $edxx
0002E4D2 <AmiBlitz3_wizzard.ab2@19139>   BNE 'nofpu
0002E4D4 <AmiBlitz3_wizzard.ab2@19140>   MOVEQ #0,d1
0002E4DA <AmiBlitz3_wizzard.ab2@19141>   MOVE.w regnumstore,d1
0002E4DC <AmiBlitz3_wizzard.ab2@19142>   MOVE.w d1,d0
0002E4DE <AmiBlitz3_wizzard.ab2@19143>   ASL.w #7,d1
0002E4E0 <AmiBlitz3_wizzard.ab2@19144>   ASL.w #8,d0
0002E4E2 <AmiBlitz3_wizzard.ab2@19145>   ASL.w #2,d0
0002E4E4 <AmiBlitz3_wizzard.ab2@19146>   OR.w d0,d1
0002E4E8 <AmiBlitz3_wizzard.ab2@19147>   MOVE.b 25(a2),d0
0002E4EC <AmiBlitz3_wizzard.ab2@19148>   CMP.b #5,d0
0002E4F0 <AmiBlitz3_wizzard.ab2@19149>   BNE 'nocos
0002E4F6 <AmiBlitz3_wizzard.ab2@19150>   OR.l #$f200001d,d1                                       ;fpu cos
0002E4FA <AmiBlitz3_wizzard.ab2@19151> BRA 'exit
0002E4FE <AmiBlitz3_wizzard.ab2@19154>   CMP.b #$c,d0
0002E502 <AmiBlitz3_wizzard.ab2@19155>   BNE 'nosqr
0002E508 <AmiBlitz3_wizzard.ab2@19156>   OR.l #$f2000004,d1                                       ;fpu sqr
0002E50C <AmiBlitz3_wizzard.ab2@19157> BRA 'exit
0002E510 <AmiBlitz3_wizzard.ab2@19160>   CMP.b #$d,d0
0002E514 <AmiBlitz3_wizzard.ab2@19161>   BNE 'notan
0002E51A <AmiBlitz3_wizzard.ab2@19162>   OR.l #$f200000f,d1                                       ;fpu tan
0002E51E <AmiBlitz3_wizzard.ab2@19163> BRA 'exit
0002E522 <AmiBlitz3_wizzard.ab2@19166>   CMP.b #$a,d0
0002E526 <AmiBlitz3_wizzard.ab2@19167>   BNE 'nosin
0002E52C <AmiBlitz3_wizzard.ab2@19168>   OR.l #$f200000e,d1                                       ;fpu sin
0002E530 <AmiBlitz3_wizzard.ab2@19169> BRA 'exit
0002E534 <AmiBlitz3_wizzard.ab2@19172>   CMP.b #$3,d0
0002E538 <AmiBlitz3_wizzard.ab2@19173>   BNE 'noasin
0002E53E <AmiBlitz3_wizzard.ab2@19174>   OR.l #$f200000c,d1                                       ;fpu asin
0002E542 <AmiBlitz3_wizzard.ab2@19175> BRA 'exit
0002E546 <AmiBlitz3_wizzard.ab2@19178>   CMP.b #$2,d0
0002E54A <AmiBlitz3_wizzard.ab2@19179>   BNE 'noacos
0002E550 <AmiBlitz3_wizzard.ab2@19180>   OR.l #$f200001c,d1                                       ;fpu acos
0002E554 <AmiBlitz3_wizzard.ab2@19181> BRA 'exit
0002E558 <AmiBlitz3_wizzard.ab2@19184>   CMP.b #$4,d0
0002E55C <AmiBlitz3_wizzard.ab2@19185>   BNE 'noatan
0002E562 <AmiBlitz3_wizzard.ab2@19186>   OR.l #$f200000a,d1                                       ;fpu atan
0002E566 <AmiBlitz3_wizzard.ab2@19187> BRA 'exit
0002E56A <AmiBlitz3_wizzard.ab2@19190>   CMP.b #$e,d0
0002E56E <AmiBlitz3_wizzard.ab2@19191>   BNE 'nohtan
0002E574 <AmiBlitz3_wizzard.ab2@19192>   OR.l #$f2000009,d1                                       ;fpu htan
0002E578 <AmiBlitz3_wizzard.ab2@19193> BRA 'exit
0002E57C <AmiBlitz3_wizzard.ab2@19196>   CMP.b #$6,d0
0002E580 <AmiBlitz3_wizzard.ab2@19197>   BNE 'nohcos
0002E586 <AmiBlitz3_wizzard.ab2@19198>   OR.l #$f2000019,d1                                       ;fpu hcos
0002E58A <AmiBlitz3_wizzard.ab2@19199> BRA 'exit
0002E58E <AmiBlitz3_wizzard.ab2@19202>   CMP.b #$b,d0
0002E592 <AmiBlitz3_wizzard.ab2@19203>   BNE 'nohsin
0002E598 <AmiBlitz3_wizzard.ab2@19204>   OR.l #$f2000002,d1                                       ;fpu hsin
0002E59C <AmiBlitz3_wizzard.ab2@19205> BRA 'exit
0002E5A0 <AmiBlitz3_wizzard.ab2@19208>   CMP.b #$9,d0
0002E5A4 <AmiBlitz3_wizzard.ab2@19209>   BNE 'nolog
0002E5AA <AmiBlitz3_wizzard.ab2@19210>   OR.l #$f2000014,d1                                       ;fpu log
0002E5AE <AmiBlitz3_wizzard.ab2@19211> BRA 'exit
0002E5B2 <AmiBlitz3_wizzard.ab2@19214>   CMP.b #$8,d0
0002E5B6 <AmiBlitz3_wizzard.ab2@19215>   BNE 'nolog10
0002E5BC <AmiBlitz3_wizzard.ab2@19216>   OR.l #$f2000015,d1                                       ;fpu log10
0002E5C0 <AmiBlitz3_wizzard.ab2@19217> BRA 'exit
0002E5C4 <AmiBlitz3_wizzard.ab2@19220>   CMP.b #$7,d0
0002E5C8 <AmiBlitz3_wizzard.ab2@19221>   BNE 'noexp
0002E5CE <AmiBlitz3_wizzard.ab2@19222>   OR.l #$f2000010,d1                                       ;fpu exp
0002E5D2 <AmiBlitz3_wizzard.ab2@19223> BRA 'exit
0002E5D8 <AmiBlitz3_wizzard.ab2@19226>   LEA fpuerr,a0
0002E5DA <AmiBlitz3_wizzard.ab2@19227>   MOVE.l a0,-(a7)
0002E5E0 <AmiBlitz3_wizzard.ab2@19228> JMP handle_compileerror
0002E5E4 <AmiBlitz3_wizzard.ab2@19232>   CMP.b #$3c,d0
0002E5E8 <AmiBlitz3_wizzard.ab2@19233>   BNE 'nofpu2
0002E5EA <AmiBlitz3_wizzard.ab2@19234>   MOVEQ #0,d1
0002E5F0 <AmiBlitz3_wizzard.ab2@19235>       MOVE.w regnumstore,d1
0002E5F2 <AmiBlitz3_wizzard.ab2@19236>       MOVE.w d1,d0
0002E5F4 <AmiBlitz3_wizzard.ab2@19237>       ASL.w #7,d1
0002E5F6 <AmiBlitz3_wizzard.ab2@19238>       ASL.w #8,d0
0002E5F8 <AmiBlitz3_wizzard.ab2@19239>       ASL.w #2,d0
0002E5FA <AmiBlitz3_wizzard.ab2@19240>       OR.w d0,d1
0002E600 <AmiBlitz3_wizzard.ab2@19241>       CMP.b #$03,25(a2)
0002E604 <AmiBlitz3_wizzard.ab2@19242>       BNE 'nosgn
0002E60A <AmiBlitz3_wizzard.ab2@19245>       SUBQ.l #8,destpointer                                ;fpu sgn
0002E610 <AmiBlitz3_wizzard.ab2@19246>         OR.l #$f200003a,d1
0002E614 <AmiBlitz3_wizzard.ab2@19247>         BSR writelong
0002E61A <AmiBlitz3_wizzard.ab2@19248>         CLR.w a2offset
0002E620 <AmiBlitz3_wizzard.ab2@19249>          MOVE.l #$F28E0006,d1
0002E624 <AmiBlitz3_wizzard.ab2@19250>          BSR writelong
0002E62A <AmiBlitz3_wizzard.ab2@19251>   MOVE.l #$7000600a,d1
0002E62E <AmiBlitz3_wizzard.ab2@19252>   BSR writelong
0002E634 <AmiBlitz3_wizzard.ab2@19253>   MOVE.l #$70014840,d1
0002E638 <AmiBlitz3_wizzard.ab2@19254>   BSR writelong
0002E63E <AmiBlitz3_wizzard.ab2@19255>   MOVE.l #$F292,d1
0002E642 <AmiBlitz3_wizzard.ab2@19256>   BSR writeword
0002E648 <AmiBlitz3_wizzard.ab2@19257>   MOVE.l #$000470FF,d1
0002E64C <AmiBlitz3_wizzard.ab2@19258> BRA 'exit
0002E654 <AmiBlitz3_wizzard.ab2@19261>   CMP.l #"Frac",$1a(a2)
0002E658 <AmiBlitz3_wizzard.ab2@19262>   BNE 'nofrac
0002E65E <AmiBlitz3_wizzard.ab2@19263> JMP notwork
0002E662 <AmiBlitz3_wizzard.ab2@19304> BRA 'exit
0002E666 <AmiBlitz3_wizzard.ab2@19308>   BSR.w JL_0_BB14                                          ;write lib code
0002E66C <AmiBlitz3_wizzard.ab2@19309>   MOVE.l (A7)+,libisat
0002E66E <AmiBlitz3_wizzard.ab2@19310> RTS
0002E672 <AmiBlitz3_wizzard.ab2@19313>   BSR writelong
0002E678 <AmiBlitz3_wizzard.ab2@19316>   MOVE.l (A7)+,libisat
0002E67A <AmiBlitz3_wizzard.ab2@19317> RTS
0002E67E <AmiBlitz3_wizzard.ab2@19321>   BSR.w fetchregs
0002E684 <AmiBlitz3_wizzard.ab2@19322>   TST.b debugmode
0002E688 <AmiBlitz3_wizzard.ab2@19323>    BEQ.w JL_0_BB76
0002E68A <AmiBlitz3_wizzard.ab2@19324>   MOVE.l (A2),D1
0002E68E <AmiBlitz3_wizzard.ab2@19325>   OR.l $8(A2),D1
0002E692 <AmiBlitz3_wizzard.ab2@19326>   BCLR #$0,D1
0002E694 <AmiBlitz3_wizzard.ab2@19327>   TST.l D1
0002E698 <AmiBlitz3_wizzard.ab2@19328>    BEQ.w JL_0_BB76
0002E69A <AmiBlitz3_wizzard.ab2@19329>   MOVE.l (A2)+,D1
0002E69E <AmiBlitz3_wizzard.ab2@19330>   BTST #$0,D1
0002E6A2 <AmiBlitz3_wizzard.ab2@19331>    BEQ.w JL_0_BB60
0002E6A8 <AmiBlitz3_wizzard.ab2@19332>   TST.w blitzmode
0002E6AC <AmiBlitz3_wizzard.ab2@19333>    BPL.w blitzerr
0002E6B2 <AmiBlitz3_wizzard.ab2@19334>   TST.b debugmode
0002E6B6 <AmiBlitz3_wizzard.ab2@19335>    BEQ.w JL_0_BB5C
0002E6B8 <AmiBlitz3_wizzard.ab2@19336>   MOVE.l D1,-(A7)
0002E6BC <AmiBlitz3_wizzard.ab2@19337>   MOVE.w #$C311,D1
0002E6C0 <AmiBlitz3_wizzard.ab2@19338>    BSR.w makebtst
0002E6C2 <AmiBlitz3_wizzard.ab2@19339>   MOVE.l (A7)+,D1
0002E6C6 <AmiBlitz3_wizzard.ab2@19342>   BCLR #$0,D1
0002E6C8 <AmiBlitz3_wizzard.ab2@19345>   TST.l D1
0002E6CC <AmiBlitz3_wizzard.ab2@19346>    BSR.w JL_0_BBC6
0002E6CE <AmiBlitz3_wizzard.ab2@19347>   MOVE.l (A2)+,D1
0002E6D2 <AmiBlitz3_wizzard.ab2@19348>    BSR.w JL_0_BB98
0002E6D4 <AmiBlitz3_wizzard.ab2@19349>   MOVE.l (A2)+,D1
0002E6D8 <AmiBlitz3_wizzard.ab2@19350>    BSR.w JL_0_BBC6
0002E6DC <AmiBlitz3_wizzard.ab2@19351> BRA.w JL_0_BB90
0002E6E2 <AmiBlitz3_wizzard.ab2@19354>   BTST #$0,$3(A2)
0002E6E6 <AmiBlitz3_wizzard.ab2@19355>    BEQ.w JL_0_BB88
0002E6EA <AmiBlitz3_wizzard.ab2@19356>   MOVE.w blitzmode(PC),D1
0002E6EE <AmiBlitz3_wizzard.ab2@19357>    BPL.w blitzerr
0002E6F2 <AmiBlitz3_wizzard.ab2@19360>   MOVE.l $4(A2),D1
0002E6F6 <AmiBlitz3_wizzard.ab2@19361>    BSR.w JL_0_BB98
0002E6FC <AmiBlitz3_wizzard.ab2@19364>   MOVEA.l libisat,A2
0002E6FE <AmiBlitz3_wizzard.ab2@19365> RTS
0002E702 <AmiBlitz3_wizzard.ab2@19368>   BTST #$0,D1
0002E706 <AmiBlitz3_wizzard.ab2@19369>    BEQ.w JL_0_BBC4
0002E70C <AmiBlitz3_wizzard.ab2@19370>   TST.w blitzmode
0002E710 <AmiBlitz3_wizzard.ab2@19371>    BMI.w amigaerr
0002E716 <AmiBlitz3_wizzard.ab2@19372>   TST.b debugmode
0002E71A <AmiBlitz3_wizzard.ab2@19373>    BEQ.w JL_0_BBC0
0002E71C <AmiBlitz3_wizzard.ab2@19374>   MOVE.l D1,-(A7)
0002E720 <AmiBlitz3_wizzard.ab2@19375>   MOVE.w #$C312,D1
0002E724 <AmiBlitz3_wizzard.ab2@19376>    BSR.w makebtst
0002E726 <AmiBlitz3_wizzard.ab2@19377>   MOVE.l (A7)+,D1
0002E72A <AmiBlitz3_wizzard.ab2@19380>   BCLR #$0,D1
0002E72C <AmiBlitz3_wizzard.ab2@19383>   TST.l D1
0002E730 <AmiBlitz3_wizzard.ab2@19386>    BEQ.w JL_0_BBD2
0002E732 <AmiBlitz3_wizzard.ab2@19387>   MOVE.l A1,-(A7)
0002E736 <AmiBlitz3_wizzard.ab2@19388>    BSR.w JL_0_BBD4
0002E738 <AmiBlitz3_wizzard.ab2@19389>   MOVEA.l (A7)+,A1
0002E73A <AmiBlitz3_wizzard.ab2@19392> RTS
0002E740 <AmiBlitz3_wizzard.ab2@19395>   MOVEA.l libisat,A0
0002E746 <AmiBlitz3_wizzard.ab2@19396>   TST.w cfetchmode
0002E74A <AmiBlitz3_wizzard.ab2@19397>    BEQ.w JL_0_BBF6
0002E74C <AmiBlitz3_wizzard.ab2@19398>   ADD.l A0,D1
0002E74E <AmiBlitz3_wizzard.ab2@19399>   MOVE.l D1,-(A7)
0002E752 <AmiBlitz3_wizzard.ab2@19400>   MOVE.w #$4EB9,D1
0002E756 <AmiBlitz3_wizzard.ab2@19401>    BSR.w writeword
0002E758 <AmiBlitz3_wizzard.ab2@19402>   MOVE.l (A7)+,D1
0002E75C <AmiBlitz3_wizzard.ab2@19403> BRA.w writelong
0002E760 <AmiBlitz3_wizzard.ab2@19406>   LEA $0(A0,D1.L),A1
0002E766 <AmiBlitz3_wizzard.ab2@19407>   CLR.w inline
0002E76A <AmiBlitz3_wizzard.ab2@19410>   CMPI.b #$A0,(A1)+
0002E76E <AmiBlitz3_wizzard.ab2@19411>    BNE.w JL_0_BC68
0002E770 <AmiBlitz3_wizzard.ab2@19412>   TST.b (A1)+
0002E774 <AmiBlitz3_wizzard.ab2@19413>    BEQ.w JL_0_BC18
0002E77A <AmiBlitz3_wizzard.ab2@19414>   CMPI.b #$1,-$1(A1)
0002E77E <AmiBlitz3_wizzard.ab2@19415>    BEQ.w JL_0_BC24
0002E784 <AmiBlitz3_wizzard.ab2@19418>   MOVE.w (A1)+,inline
0002E786 <AmiBlitz3_wizzard.ab2@19419>   ADDQ.l #4,D1
0002E78A <AmiBlitz3_wizzard.ab2@19420> BRA.w JL_0_BC00
0002E790 <AmiBlitz3_wizzard.ab2@19423>   TST.w blitzmode
0002E794 <AmiBlitz3_wizzard.ab2@19424>    BPL.w JL_0_BC4A
0002E79A <AmiBlitz3_wizzard.ab2@19425>   TST.b debugmode
0002E79E <AmiBlitz3_wizzard.ab2@19426>    BEQ.w JL_0_BC40
0002E7A2 <AmiBlitz3_wizzard.ab2@19427>   MOVE.w #$C311,D1
0002E7A6 <AmiBlitz3_wizzard.ab2@19428>    BSR.w makebtst
0002E7A8 <AmiBlitz3_wizzard.ab2@19431>   MOVE.l (A1)+,D1
0002E7AC <AmiBlitz3_wizzard.ab2@19432>   LEA $0(A0,D1.L),A1
0002E7B0 <AmiBlitz3_wizzard.ab2@19433> BRA.w JL_0_BC00
0002E7B6 <AmiBlitz3_wizzard.ab2@19436>   TST.b debugmode
0002E7BA <AmiBlitz3_wizzard.ab2@19437>    BEQ.w JL_0_BC60
0002E7BC <AmiBlitz3_wizzard.ab2@19438>   MOVE.l D1,-(A7)
0002E7C0 <AmiBlitz3_wizzard.ab2@19439>   MOVE.w #$C312,D1
0002E7C4 <AmiBlitz3_wizzard.ab2@19440>    BSR.w makebtst
0002E7C6 <AmiBlitz3_wizzard.ab2@19441>   MOVE.l (A7)+,D1
0002E7C8 <AmiBlitz3_wizzard.ab2@19444>   ADDQ.w #4,A1
0002E7CA <AmiBlitz3_wizzard.ab2@19445>   ADDQ.l #6,D1
0002E7CE <AmiBlitz3_wizzard.ab2@19446> BRA.w JL_0_BC00
0002E7D4 <AmiBlitz3_wizzard.ab2@19449>   TST.w inline
0002E7D8 <AmiBlitz3_wizzard.ab2@19450>    BEQ.w JL_0_BC7E
0002E7DA <AmiBlitz3_wizzard.ab2@19451>   SUBQ.w #1,A1
0002E7DC <AmiBlitz3_wizzard.ab2@19452>   MOVEA.l A1,A0
0002E7E0 <AmiBlitz3_wizzard.ab2@19453>   ADDA.w inline(PC),A1
0002E7E4 <AmiBlitz3_wizzard.ab2@19454> BRA.w pokecode2
0002E7E8 <AmiBlitz3_wizzard.ab2@19457>   MOVEM.l a0/D1,-(A7)
0002E7EE <AmiBlitz3_wizzard.ab2@19458>   TST.w debugversion
0002E7F2 <AmiBlitz3_wizzard.ab2@19459>   BEQ 'l11
0002E7FA <AmiBlitz3_wizzard.ab2@19460>   BTST #$7,link_debuginfo
0002E7FE <AmiBlitz3_wizzard.ab2@19461>   BEQ.w 'l11
0002E804 <AmiBlitz3_wizzard.ab2@19462>   MOVE.l lastinstruction,d1
0002E808 <AmiBlitz3_wizzard.ab2@19463>   BEQ 'l11
0002E80E <AmiBlitz3_wizzard.ab2@19464>   CLR.l lastinstruction
0002E814 <AmiBlitz3_wizzard.ab2@19465>   CMP.l #$e000,d1
0002E818 <AmiBlitz3_wizzard.ab2@19466>   BGE 'ln99
0002E81E <AmiBlitz3_wizzard.ab2@19467>   LEA notf,a0
0002E824 <AmiBlitz3_wizzard.ab2@19468>   CMP.l #$c601,d1
0002E828 <AmiBlitz3_wizzard.ab2@19469>   BNE 'ln1
0002E82E <AmiBlitz3_wizzard.ab2@19470>   LEA strcpy,a0
0002E832 <AmiBlitz3_wizzard.ab2@19471> BRA 'ln3
0002E838 <AmiBlitz3_wizzard.ab2@19474>   CMP.l #$c700,d1
0002E83C <AmiBlitz3_wizzard.ab2@19475>   BNE 'ln2
0002E842 <AmiBlitz3_wizzard.ab2@19476>   LEA strvar,a0
0002E846 <AmiBlitz3_wizzard.ab2@19477> BRA 'ln3
0002E84C <AmiBlitz3_wizzard.ab2@19480>   CMP.l #$ce00,d1
0002E850 <AmiBlitz3_wizzard.ab2@19481>   BNE 'ln4
0002E856 <AmiBlitz3_wizzard.ab2@19482>   LEA strcmp,a0
0002E85A <AmiBlitz3_wizzard.ab2@19483> BRA 'ln3
0002E860 <AmiBlitz3_wizzard.ab2@19486>   CMP.l #$ca00,d1
0002E864 <AmiBlitz3_wizzard.ab2@19487>   BNE 'ln5
0002E86A <AmiBlitz3_wizzard.ab2@19488>   LEA qmul,a0
0002E86E <AmiBlitz3_wizzard.ab2@19489> BRA 'ln3
0002E874 <AmiBlitz3_wizzard.ab2@19492>   CMP.l #$d000,d1
0002E878 <AmiBlitz3_wizzard.ab2@19493>      BNE 'ln6
0002E87E <AmiBlitz3_wizzard.ab2@19494>      LEA _MaxLen,a0
0002E882 <AmiBlitz3_wizzard.ab2@19495> BRA 'ln3
0002E888 <AmiBlitz3_wizzard.ab2@19498>   CMP.l #$cb00,d1
0002E88C <AmiBlitz3_wizzard.ab2@19499>   BNE 'ln3
0002E892 <AmiBlitz3_wizzard.ab2@19500>   LEA qdiv,a0
0002E896 <AmiBlitz3_wizzard.ab2@19501> BRA 'ln3
0002E898 <AmiBlitz3_wizzard.ab2@19504>   MOVE.l d1,a0
0002E89C <AmiBlitz3_wizzard.ab2@19505>   LEA $8(a0),a0
0002E8A0 <AmiBlitz3_wizzard.ab2@19508>   CMP.w #$ffff,(a0)+
0002E8A4 <AmiBlitz3_wizzard.ab2@19509>   BNE 'l1
0002E8A8 <AmiBlitz3_wizzard.ab2@19510>   LEA 6(a0),a0
0002E8AC <AmiBlitz3_wizzard.ab2@19513>   MOVEM.l a1/a2/d7/d2,-(a7)
0002E8AE <AmiBlitz3_wizzard.ab2@19514>   MOVEQ #0,d2
0002E8B4 <AmiBlitz3_wizzard.ab2@19515>   LEA ptr_parameterstore,a1
0002E8B6 <AmiBlitz3_wizzard.ab2@19518>   ADDQ.l #1,d2
0002E8B8 <AmiBlitz3_wizzard.ab2@19519>   MOVE.b (a0)+,d0
0002E8BC <AmiBlitz3_wizzard.ab2@19520> 
0002E8C0 <AmiBlitz3_wizzard.ab2@19521>   BNE 'nodollar
0002E8C4 <AmiBlitz3_wizzard.ab2@19522>   MOVE.b #"S",d0
0002E8C8 <AmiBlitz3_wizzard.ab2@19524>   CMP.b #"?",d0
0002E8CC <AmiBlitz3_wizzard.ab2@19525>   BEQ 'nolabelwrite
0002E8CE <AmiBlitz3_wizzard.ab2@19526>   MOVE.b d0,(a1)+
0002E8D2 <AmiBlitz3_wizzard.ab2@19527>   BNE 'l2
0002E8D8 <AmiBlitz3_wizzard.ab2@19528>   MOVE.w #"__",-1(a1)
0002E8DA <AmiBlitz3_wizzard.ab2@19529>   ADDQ.l #2,d2
0002E8DE <AmiBlitz3_wizzard.ab2@19530>   CLR.b 1(a1)
0002E8E4 <AmiBlitz3_wizzard.ab2@19531>   JSR findlabel2
0002E8E8 <AmiBlitz3_wizzard.ab2@19532>   BEQ 'l3
0002E8EE <AmiBlitz3_wizzard.ab2@19533>   JSR addlabelhash
0002E8F2 <AmiBlitz3_wizzard.ab2@19536>   CLR.l 4(a2)
0002E8F6 <AmiBlitz3_wizzard.ab2@19537>   MOVE.l $14(a7),a0
0002E8FA <AmiBlitz3_wizzard.ab2@19538>   MOVE.l $10(a7),d1
0002E8FE <AmiBlitz3_wizzard.ab2@19539>   SUB.l $12(a0),d1
0002E902 <AmiBlitz3_wizzard.ab2@19540>   ADD.l $28(a0),d1
0002E906 <AmiBlitz3_wizzard.ab2@19541>   MOVE.l d1,8(a2)
0002E90A <AmiBlitz3_wizzard.ab2@19542> 'nolabelwrite MOVEM.l (a7)+,a1/a2/d7/d2
0002E910 <AmiBlitz3_wizzard.ab2@19545>   TST.b typecheck
0002E914 <AmiBlitz3_wizzard.ab2@19546>   BEQ 'p1
0002E91A <AmiBlitz3_wizzard.ab2@19547>   MOVE.l lasttoken,d1
0002E920 <AmiBlitz3_wizzard.ab2@19548>   CMP.l #$da01,d1                                          ;poke
0002E924 <AmiBlitz3_wizzard.ab2@19549>   BEQ 'lp1
0002E92A <AmiBlitz3_wizzard.ab2@19550>   CMP.l #$da02,d1                                          ;peek
0002E92E <AmiBlitz3_wizzard.ab2@19551>   BNE 'p1
0002E934 <AmiBlitz3_wizzard.ab2@19554>   TST.b peekaddrsize
0002E938 <AmiBlitz3_wizzard.ab2@19555>   BEQ 'p1
0002E940 <AmiBlitz3_wizzard.ab2@19556>   CMP.b #3,peekaddrsize
0002E944 <AmiBlitz3_wizzard.ab2@19557>   BNE errormsg_onlylong
0002E94A <AmiBlitz3_wizzard.ab2@19558>   CLR.b peekaddrsize
0002E950 <AmiBlitz3_wizzard.ab2@19566>    TST.b fpu
0002E954 <AmiBlitz3_wizzard.ab2@19567>   BNE 'optf
0002E95A <AmiBlitz3_wizzard.ab2@19568>   TST.b fast
0002E95E <AmiBlitz3_wizzard.ab2@19569>   BEQ JL11a2
0002E966 <AmiBlitz3_wizzard.ab2@19576>   CMP.l #"Poke",20(a2)                                     ;poke
0002E96A <AmiBlitz3_wizzard.ab2@19577>   BNE peekopt
0002E96E <AmiBlitz3_wizzard.ab2@19578>   TST.b 24(a2)
0002E972 <AmiBlitz3_wizzard.ab2@19579>   BNE peekopt
0002E976 <AmiBlitz3_wizzard.ab2@19580>   CMP.b #3,d2
0002E97A <AmiBlitz3_wizzard.ab2@19581>   BNE 'lw1
0002E980 <AmiBlitz3_wizzard.ab2@19584>   MOVE.l #$21821990,d1
0002E984 <AmiBlitz3_wizzard.ab2@19585> BRA.s 'lpx
0002E988 <AmiBlitz3_wizzard.ab2@19588>   CMP.b #2,d2
0002E98C <AmiBlitz3_wizzard.ab2@19589>   BNE 'lb1
0002E992 <AmiBlitz3_wizzard.ab2@19590>   MOVE.l #$31821990,d1
0002E996 <AmiBlitz3_wizzard.ab2@19591> BRA.s 'lpx
0002E99A <AmiBlitz3_wizzard.ab2@19594>   CMP.b #1,d2
0002E99E <AmiBlitz3_wizzard.ab2@19595>   BNE 'lp3
0002E9A4 <AmiBlitz3_wizzard.ab2@19596>   MOVE.l #$11821990,d1
0002E9A8 <AmiBlitz3_wizzard.ab2@19597> BRA.s 'lpx
0002E9AC <AmiBlitz3_wizzard.ab2@19600>   CMP.b #5,d2
0002E9B0 <AmiBlitz3_wizzard.ab2@19601>     BNE JL11a2
0002E9B6 <AmiBlitz3_wizzard.ab2@19602>     TST.b fpu
0002E9BA <AmiBlitz3_wizzard.ab2@19603>     BEQ 'll1
0002E9C0 <AmiBlitz3_wizzard.ab2@19604>      MOVE.l destpointer,a4
0002E9C8 <AmiBlitz3_wizzard.ab2@19605>     CMP.l #$f22d4500,-6(a4)
0002E9CC <AmiBlitz3_wizzard.ab2@19606>     BNE 'noglob
0002E9D2 <AmiBlitz3_wizzard.ab2@19607>     TST.b doublepeek
0002E9D6 <AmiBlitz3_wizzard.ab2@19608>     BNE 'noglob
0002E9DC <AmiBlitz3_wizzard.ab2@19609>     MOVE.w -2(a4),-4(a4)
0002E9E2 <AmiBlitz3_wizzard.ab2@19610>     MOVE.w #$21ad,-6(a4)
0002E9E8 <AmiBlitz3_wizzard.ab2@19611>     MOVE.w #$1990,-2(a4)
0002E9F0 <AmiBlitz3_wizzard.ab2@19612>     MOVE.w #9,peeksize
0002E9F2 <AmiBlitz3_wizzard.ab2@19613>     ADDQ #8,a7
0002E9F4 <AmiBlitz3_wizzard.ab2@19614> RTS
0002E9FC <AmiBlitz3_wizzard.ab2@19617>     CMP.l #$f22c4500,-6(a4)
0002EA00 <AmiBlitz3_wizzard.ab2@19618>     BNE 'nolocal
0002EA06 <AmiBlitz3_wizzard.ab2@19619>     MOVE.w -2(a4),-4(a4)
0002EA0C <AmiBlitz3_wizzard.ab2@19620>     TST.b doublepeek                                       ;dont move longfix on double floats
0002EA10 <AmiBlitz3_wizzard.ab2@19621>     BNE 'nolocal
0002EA16 <AmiBlitz3_wizzard.ab2@19622>     MOVE.w #$21ac,-6(a4)
0002EA1C <AmiBlitz3_wizzard.ab2@19623>     MOVE.w #$1990,-2(a4)
0002EA24 <AmiBlitz3_wizzard.ab2@19624>     MOVE.w #9,peeksize
0002EA26 <AmiBlitz3_wizzard.ab2@19625>     ADDQ #8,a7
0002EA28 <AmiBlitz3_wizzard.ab2@19626> RTS
0002EA2C <AmiBlitz3_wizzard.ab2@19629>     MOVE.w #$f230,d1
0002EA30 <AmiBlitz3_wizzard.ab2@19630>     BSR writeword
0002EA36 <AmiBlitz3_wizzard.ab2@19631>   MOVE.l #$65001990,d1
0002EA3C <AmiBlitz3_wizzard.ab2@19632>   TST.b doublepeek
0002EA40 <AmiBlitz3_wizzard.ab2@19633>   BEQ 'lpx
0002EA46 <AmiBlitz3_wizzard.ab2@19634>   OR.l   #$10000000,d1
0002EA48 <AmiBlitz3_wizzard.ab2@19638>   ADDQ #8,a7
0002EA50 <AmiBlitz3_wizzard.ab2@19639>   MOVE.w #9,peeksize
0002EA54 <AmiBlitz3_wizzard.ab2@19640> BRA writelong
0002EA5C <AmiBlitz3_wizzard.ab2@19643>   CMP.l #"Peek",20(a2)
0002EA60 <AmiBlitz3_wizzard.ab2@19644>   BNE 'l10
0002EA64 <AmiBlitz3_wizzard.ab2@19645>   TST.b 24(a2)
0002EA68 <AmiBlitz3_wizzard.ab2@19646>   BNE 'l10
0002EA70 <AmiBlitz3_wizzard.ab2@19647>   CMP.w #7,peeksize
0002EA74 <AmiBlitz3_wizzard.ab2@19648>   BEQ 'l10
0002EA7C <AmiBlitz3_wizzard.ab2@19649>    CMP.w #3,peeksize
0002EA80 <AmiBlitz3_wizzard.ab2@19650>    BNE.s 'lw1
0002EA86 <AmiBlitz3_wizzard.ab2@19653>   MOVE.l #$20301990,d1
0002EA8A <AmiBlitz3_wizzard.ab2@19654> BRA exitjsr
0002EA92 <AmiBlitz3_wizzard.ab2@19657>   CMP.w #2,peeksize
0002EA96 <AmiBlitz3_wizzard.ab2@19658>    BNE.s 'lb1
0002EA9C <AmiBlitz3_wizzard.ab2@19659>    MOVE.l #$30301990,d1
0002EAA0 <AmiBlitz3_wizzard.ab2@19660> BRA exitjsr
0002EAA8 <AmiBlitz3_wizzard.ab2@19663>   CMP.w #1,peeksize
0002EAAC <AmiBlitz3_wizzard.ab2@19664>    BNE.s 'lf1
0002EAB2 <AmiBlitz3_wizzard.ab2@19665>    MOVE.l #$10301990,d1
0002EAB6 <AmiBlitz3_wizzard.ab2@19666> BRA exitjsr
0002EABE <AmiBlitz3_wizzard.ab2@19669>   CMP.w #5,peeksize
0002EAC2 <AmiBlitz3_wizzard.ab2@19670>    BNE 'l10
0002EAC8 <AmiBlitz3_wizzard.ab2@19671>    TST.b fpu
0002EACC <AmiBlitz3_wizzard.ab2@19672>    BEQ 'll1
0002EAD0 <AmiBlitz3_wizzard.ab2@19673>    MOVE.w #$f230,d1
0002EAD4 <AmiBlitz3_wizzard.ab2@19674>    BSR writeword
0002EAD6 <AmiBlitz3_wizzard.ab2@19675>    MOVEQ #0,d1
0002EADC <AmiBlitz3_wizzard.ab2@19676>    MOVE.w tempregnum,d1
0002EADE <AmiBlitz3_wizzard.ab2@19677>    ASL.l #7,d1
0002EAE0 <AmiBlitz3_wizzard.ab2@19678>    ASL.l #8,d1
0002EAE2 <AmiBlitz3_wizzard.ab2@19679>    ASL.l #8,d1
0002EAE8 <AmiBlitz3_wizzard.ab2@19680>    ADD.l #$44001990,d1
0002EAEE <AmiBlitz3_wizzard.ab2@19681>     TST.b doublepeek
0002EAF2 <AmiBlitz3_wizzard.ab2@19682>     BEQ 'lpx2
0002EAF8 <AmiBlitz3_wizzard.ab2@19683>     OR.l   #$10000000,d1
0002EAFC <AmiBlitz3_wizzard.ab2@19685> BRA exitjsr
0002EB00 <AmiBlitz3_wizzard.ab2@19689>   MOVE.w #$4EB9,D1
0002EB04 <AmiBlitz3_wizzard.ab2@19690>    BSR.w writeword                                         ;writesysjsr
0002EB08 <AmiBlitz3_wizzard.ab2@19691>   MOVEM.l (A7)+,a0/D1
0002EB0E <AmiBlitz3_wizzard.ab2@19692>    JSR addoff
0002EB12 <AmiBlitz3_wizzard.ab2@19693>   SUB.l $12(A0),D1
0002EB16 <AmiBlitz3_wizzard.ab2@19694>   ADD.l $28(A0),D1
0002EB1A <AmiBlitz3_wizzard.ab2@19695> BRA.w writelong
0002EB1C <AmiBlitz3_wizzard.ab2@19700>   MOVE.w D1,-(A7)
0002EB20 <AmiBlitz3_wizzard.ab2@19701>   MOVE.w tstmode(PC),D1
0002EB24 <AmiBlitz3_wizzard.ab2@19702>    BSR.w writeword
0002EB28 <AmiBlitz3_wizzard.ab2@19703>    BSR.w getbbase
0002EB2C <AmiBlitz3_wizzard.ab2@19704>    BSR.w writeword
0002EB2E <AmiBlitz3_wizzard.ab2@19705>   MOVE.w (A7)+,D1
0002EB32 <AmiBlitz3_wizzard.ab2@19706>   MOVEM.l D0/D3-D7/A0-A2/A4,-(A7)
0002EB36 <AmiBlitz3_wizzard.ab2@19707>    BSR.w Atokejsr
0002EB3A <AmiBlitz3_wizzard.ab2@19708>   MOVEM.l (A7)+,D0/D3-D7/A0-A2/A4
0002EB3C <AmiBlitz3_wizzard.ab2@19709> RTS
0002EB40 <AmiBlitz3_wizzard.ab2@19717>   MOVE.w blitzoff(PC),D1
0002EB44 <AmiBlitz3_wizzard.ab2@19718>   CMP.w #-$1,D1
0002EB48 <AmiBlitz3_wizzard.ab2@19719>    BNE.w getbbase__done
0002EB4E <AmiBlitz3_wizzard.ab2@19720>   ADDQ.w #1,globalvarpointer
0002EB56 <AmiBlitz3_wizzard.ab2@19721>   BCLR #$0,globalvarpointer+1
0002EB5C <AmiBlitz3_wizzard.ab2@19722>   MOVE.w globalvarpointer,D1
0002EB62 <AmiBlitz3_wizzard.ab2@19723>   MOVE.w D1,blitzoff
0002EB68 <AmiBlitz3_wizzard.ab2@19724>   ADDQ.w #2,globalvarpointer
0002EB6A <AmiBlitz3_wizzard.ab2@19727> RTS
0002EB6E <AmiBlitz3_wizzard.ab2@19731> tstmode:    Dc.b $4A,$6D,$00,$00                           ;TST.W $0000(A5)
0002EB70 <AmiBlitz3_wizzard.ab2@19734> inline:     Ds.w 1
0002EB72 <AmiBlitz3_wizzard.ab2@19735> blitzoff:   Dc.w $FFFF                                   ;-1 org source
0002EB74 <AmiBlitz3_wizzard.ab2@19736> blitzmode:  Ds.w 1                                       ;+=amiga, -=blitz
0002EB76 <AmiBlitz3_wizzard.ab2@19740>   MOVE.w (A2)+,D1
0002EB7A <AmiBlitz3_wizzard.ab2@19741>    BEQ.w fetchregs__done
0002EB7C <AmiBlitz3_wizzard.ab2@19742>   MOVE.w (A2)+,D2
0002EB80 <AmiBlitz3_wizzard.ab2@19743>    BSR.w toreg
0002EB84 <AmiBlitz3_wizzard.ab2@19744> BRA.w fetchregs
0002EB86 <AmiBlitz3_wizzard.ab2@19747> RTS
0002EB8A <AmiBlitz3_wizzard.ab2@19752>   CMP.w #-$100,D2
0002EB8E <AmiBlitz3_wizzard.ab2@19753>    BCC.w toreg__yeah
0002EB92 <AmiBlitz3_wizzard.ab2@19755>   BCLR #$F,D2
0002EB96 <AmiBlitz3_wizzard.ab2@19756>    BEQ.w toreg__nobm
0002EB9C <AmiBlitz3_wizzard.ab2@19758>   TST.w blitzmode
0002EBA0 <AmiBlitz3_wizzard.ab2@19759>    BMI.w toreg__yeah
0002EBA2 <AmiBlitz3_wizzard.ab2@19760> RTS
0002EBA6 <AmiBlitz3_wizzard.ab2@19763>   BCLR #$E,D2
0002EBAA <AmiBlitz3_wizzard.ab2@19764>    BEQ.w toreg__yeah
0002EBB0 <AmiBlitz3_wizzard.ab2@19766>   TST.w blitzmode
0002EBB4 <AmiBlitz3_wizzard.ab2@19767>    BPL.w toreg__yeah
0002EBB6 <AmiBlitz3_wizzard.ab2@19768> RTS
0002EBBC <AmiBlitz3_wizzard.ab2@19771>   JSR uselib
0002EBBE <AmiBlitz3_wizzard.ab2@19772>   TST.b D2
0002EBC2 <AmiBlitz3_wizzard.ab2@19773>    BEQ.w toreg__norm
0002EBC6 <AmiBlitz3_wizzard.ab2@19774>   CMP.b #$4,D2
0002EBCA <AmiBlitz3_wizzard.ab2@19775>    BNE.w toreg__suv
0002EBCE <AmiBlitz3_wizzard.ab2@19776>   MOVE.w #$0004,-(A7)
0002EBD4 <AmiBlitz3_wizzard.ab2@19777>   MOVE.l #$FFFFFFFA,-(A7)                                  ;#-6,-(a7) org source
0002EBD8 <AmiBlitz3_wizzard.ab2@19778> BRA.w toreg__sendmd
0002EBDC <AmiBlitz3_wizzard.ab2@19781>   CMP.b #$3,D2
0002EBE0 <AmiBlitz3_wizzard.ab2@19782>    BNE.w toreg__notnmax
0002EBE2 <AmiBlitz3_wizzard.ab2@19783>   CLR.w -(A7)
0002EBE8 <AmiBlitz3_wizzard.ab2@19784>   MOVE.l #$FFFFFFFC,-(A7)                                  ;#-4,-(a7) org source
0002EBEA <AmiBlitz3_wizzard.ab2@19790>   LSR.w #8,D2
0002EBEE <AmiBlitz3_wizzard.ab2@19791>   MOVE.w #$303C,D1                                         ;move.w #x,dn
0002EBF2 <AmiBlitz3_wizzard.ab2@19792>   BTST #$7,D2
0002EBF6 <AmiBlitz3_wizzard.ab2@19793>    BEQ.w toreg__skipad
0002EBFA <AmiBlitz3_wizzard.ab2@19794>   MOVE.w #$307C,D1                                         ;move.w #x,an
0002EBFE <AmiBlitz3_wizzard.ab2@19795>   CMP.w #$16,D2
0002EC02 <AmiBlitz3_wizzard.ab2@19796>    BNE.w toreg__skipad
0002EC0A <AmiBlitz3_wizzard.ab2@19797>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
0002EC0E <AmiBlitz3_wizzard.ab2@19800>   ANDI.w #$7,D2
0002EC10 <AmiBlitz3_wizzard.ab2@19801>   LSL.w #8,D2
0002EC12 <AmiBlitz3_wizzard.ab2@19802>   LSL.w #1,D2
0002EC14 <AmiBlitz3_wizzard.ab2@19803>   OR.w D2,D1
0002EC18 <AmiBlitz3_wizzard.ab2@19804>    BSR.w writeword
0002EC1C <AmiBlitz3_wizzard.ab2@19805>   MOVE.l $12(A1),D1
0002EC1E <AmiBlitz3_wizzard.ab2@19806>   ADD.l (A7)+,D1
0002EC22 <AmiBlitz3_wizzard.ab2@19807>   MOVE.w $0(A1,D1.L),D1
0002EC24 <AmiBlitz3_wizzard.ab2@19808>   ADD.w (A7)+,D1
0002EC28 <AmiBlitz3_wizzard.ab2@19809> BRA.w writeword
0002EC2A <AmiBlitz3_wizzard.ab2@19812>   MOVE.w D2,-(A7)
0002EC2C <AmiBlitz3_wizzard.ab2@19813>   LSR.w #8,D2
0002EC30 <AmiBlitz3_wizzard.ab2@19814>   CMP.w #$16,D2
0002EC34 <AmiBlitz3_wizzard.ab2@19815>    BNE.w toreg__isnta6
0002EC3C <AmiBlitz3_wizzard.ab2@19816>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
0002EC40 <AmiBlitz3_wizzard.ab2@19819>   MOVE.l $12(A1),D1                                        ;objectspace
0002EC44 <AmiBlitz3_wizzard.ab2@19820>   MOVE.w -$6(A1,D1.L),-(A7)
0002EC48 <AmiBlitz3_wizzard.ab2@19821>    BSR.w makeregop
0002EC4C <AmiBlitz3_wizzard.ab2@19822>    BSR.w writeword
0002EC4E <AmiBlitz3_wizzard.ab2@19823>   MOVE.w (A7)+,D1
0002EC50 <AmiBlitz3_wizzard.ab2@19824>   MOVE.w (A7)+,D2
0002EC52 <AmiBlitz3_wizzard.ab2@19825>   TST.b D2
0002EC56 <AmiBlitz3_wizzard.ab2@19826>    BPL.w toreg__skippy1
0002EC5A <AmiBlitz3_wizzard.ab2@19831>    BSR.w writeword                                         ;move.l x(a5),dn
0002EC5C <AmiBlitz3_wizzard.ab2@19832>   MOVE.w D2,-(A7)                                          ;store reg used
0002EC60 <AmiBlitz3_wizzard.ab2@19834>   ADDA.l $12(A1),A1
0002EC62 <AmiBlitz3_wizzard.ab2@19835>   MOVE.b D2,D1
0002EC66 <AmiBlitz3_wizzard.ab2@19836>   ANDI.w #$7,D1
0002EC6C <AmiBlitz3_wizzard.ab2@19838>   TST.b debugmode
0002EC70 <AmiBlitz3_wizzard.ab2@19839>    BEQ.w toreg__norerr
0002EC72 <AmiBlitz3_wizzard.ab2@19841>   MOVE.w D1,-(A7)
0002EC74 <AmiBlitz3_wizzard.ab2@19842>   LSL.w #8,D1
0002EC76 <AmiBlitz3_wizzard.ab2@19843>   LSL.w #1,D1
0002EC7A <AmiBlitz3_wizzard.ab2@19844>   ORI.w #$B07C,D1                                          ;cmp #x,dn
0002EC7E <AmiBlitz3_wizzard.ab2@19845>    BSR.w writeword
0002EC82 <AmiBlitz3_wizzard.ab2@19846>   MOVE.w -$4(A1),D1
0002EC86 <AmiBlitz3_wizzard.ab2@19847>    BSR.w writeword
0002EC8A <AmiBlitz3_wizzard.ab2@19848>   MOVE.l maxchk(PC),D1                                  ;bcs
0002EC8E <AmiBlitz3_wizzard.ab2@19849>    BSR.w writelong
0002EC90 <AmiBlitz3_wizzard.ab2@19850>   MOVE.l A2,-(A7)
0002EC94 <AmiBlitz3_wizzard.ab2@19851>   MOVE.w #$C30A,D1
0002EC98 <AmiBlitz3_wizzard.ab2@19852>    BSR.w Atokejsr
0002EC9A <AmiBlitz3_wizzard.ab2@19853>   MOVEA.l (A7)+,A2
0002EC9C <AmiBlitz3_wizzard.ab2@19854>   MOVE.w (A7)+,D1
0002ECA0 <AmiBlitz3_wizzard.ab2@19857>   MOVE.w -$2(A1),D2                                        ;shift amount
0002ECA4 <AmiBlitz3_wizzard.ab2@19860>   CMP.w #$9,D2
0002ECA8 <AmiBlitz3_wizzard.ab2@19861>    BCS.w toreg__simp
0002ECAC <AmiBlitz3_wizzard.ab2@19862>   MOVEM.w D1-D2,-(A7)
0002ECAE <AmiBlitz3_wizzard.ab2@19864>   MOVEQ.l #$00,D2                                          ;!!!!!
0002ECB0 <AmiBlitz3_wizzard.ab2@19866>   LSL.w #8,D2
0002ECB2 <AmiBlitz3_wizzard.ab2@19867>   LSL.w #1,D2
0002ECB4 <AmiBlitz3_wizzard.ab2@19868>   OR.w D2,D1
0002ECB8 <AmiBlitz3_wizzard.ab2@19869>   OR.w lsldn(PC),D1
0002ECBC <AmiBlitz3_wizzard.ab2@19870>    BSR.w writeword
0002ECC0 <AmiBlitz3_wizzard.ab2@19871>   MOVEM.w (A7)+,D1-D2
0002ECC2 <AmiBlitz3_wizzard.ab2@19872>   SUBQ.w #8,D2
0002ECC6 <AmiBlitz3_wizzard.ab2@19873> BRA.w toreg__shloop
0002ECC8 <AmiBlitz3_wizzard.ab2@19876>   MOVE.w D1,-(A7)
0002ECCC <AmiBlitz3_wizzard.ab2@19877>   OR.w #$48c0,d1
0002ECD0 <AmiBlitz3_wizzard.ab2@19878>   BSR writeword
0002ECD2 <AmiBlitz3_wizzard.ab2@19879>   MOVE.w (a7),d1
0002ECD4 <AmiBlitz3_wizzard.ab2@19880>   TST.w D2
0002ECD8 <AmiBlitz3_wizzard.ab2@19881>   BEQ.w toreg__simp2
0002ECDC <AmiBlitz3_wizzard.ab2@19883>   ANDI.w #$7,D2                                            ;?????
0002ECDE <AmiBlitz3_wizzard.ab2@19885>   LSL.w #8,D2
0002ECE0 <AmiBlitz3_wizzard.ab2@19886>   LSL.w #1,D2
0002ECE2 <AmiBlitz3_wizzard.ab2@19887>   OR.w D2,D1
0002ECE6 <AmiBlitz3_wizzard.ab2@19888>   OR.w lsldn(PC),D1
0002ECEA <AmiBlitz3_wizzard.ab2@19889>    BSR.w writeword
0002ECEC <AmiBlitz3_wizzard.ab2@19895>   MOVE.w (A7)+,D1
0002ECF0 <AmiBlitz3_wizzard.ab2@19896>   ANDI.w #$7,D1
0002ECF4 <AmiBlitz3_wizzard.ab2@19897>   OR.w maxdo(PC),D1
0002ECF6 <AmiBlitz3_wizzard.ab2@19898>   MOVE.w (A7)+,D2
0002ECF8 <AmiBlitz3_wizzard.ab2@19899>   LSL.w #1,D2
0002ECFC <AmiBlitz3_wizzard.ab2@19900>   ANDI.w #$E00,D2
0002ECFE <AmiBlitz3_wizzard.ab2@19901>   OR.w D2,D1
0002ED02 <AmiBlitz3_wizzard.ab2@19902> BRA.w writeword
0002ED06 <AmiBlitz3_wizzard.ab2@19905>   CMP.b #$1,D2
0002ED0A <AmiBlitz3_wizzard.ab2@19906>    BEQ.w toreg__skippy
0002ED0C <AmiBlitz3_wizzard.ab2@19910>   ADDQ.w #4,D1
0002ED12 <AmiBlitz3_wizzard.ab2@19912>   TST.b debugmode
0002ED16 <AmiBlitz3_wizzard.ab2@19913>    BEQ.w toreg__skippy
0002ED1A <AmiBlitz3_wizzard.ab2@19915>    BSR.w writeword
0002ED1C <AmiBlitz3_wizzard.ab2@19916>   SWAP D1
0002ED20 <AmiBlitz3_wizzard.ab2@19917>   MOVE.w toreg__theretest(PC),D1
0002ED22 <AmiBlitz3_wizzard.ab2@19918>   SWAP D1
0002ED26 <AmiBlitz3_wizzard.ab2@19919>    BSR.w writelong
0002ED2A <AmiBlitz3_wizzard.ab2@19920>   MOVE.l toreg__theretest+4(PC),D1
0002ED2E <AmiBlitz3_wizzard.ab2@19921>    BSR.w writelong
0002ED32 <AmiBlitz3_wizzard.ab2@19922>   MOVE.l toreg__theretest+8(PC),D1
0002ED36 <AmiBlitz3_wizzard.ab2@19923> BRA.w writelong
0002ED3A <AmiBlitz3_wizzard.ab2@19926> BRA.w writeword
0002ED3E <AmiBlitz3_wizzard.ab2@19931>             Dc.b $4A,$AD,$00,$00                           ;TST.L  $0000(A5)
0002ED42 <AmiBlitz3_wizzard.ab2@19932>             Dc.b $66,$00,$00,$06                           ;BNE.W  toreg__ttskip
0002ED44 <AmiBlitz3_wizzard.ab2@19933>             Dc.b $70,$01                                   ;MOVEQ  #$01,D0
0002ED46 <AmiBlitz3_wizzard.ab2@19934>             Dc.b $4E,$40                                   ;TRAP   #00
0002ED48 <AmiBlitz3_wizzard.ab2@19939>   LSR.w #8,D2
0002ED4C <AmiBlitz3_wizzard.ab2@19940>   CMP.b #$16,D2
0002ED50 <AmiBlitz3_wizzard.ab2@19941>    BNE.w toreg__nota6
0002ED54 <AmiBlitz3_wizzard.ab2@19942>   MOVE.w $A(A1),D1
0002ED5A <AmiBlitz3_wizzard.ab2@19943>   CMP.w lasta6,D1
0002ED5E <AmiBlitz3_wizzard.ab2@19944>    BEQ.w toreg__sk
0002ED64 <AmiBlitz3_wizzard.ab2@19945>   MOVE.w D1,lasta6
0002ED68 <AmiBlitz3_wizzard.ab2@19948>    BSR.w makeregop
0002ED6C <AmiBlitz3_wizzard.ab2@19949>   TST.w $1A(A1)
0002ED70 <AmiBlitz3_wizzard.ab2@19950>    BPL.w toreg__long
0002ED74 <AmiBlitz3_wizzard.ab2@19951>   CMP.w stackop(PC),D1
0002ED78 <AmiBlitz3_wizzard.ab2@19952>    BNE.w toreg__notst
0002ED7E <AmiBlitz3_wizzard.ab2@19953>   SUBQ.w #2,a2offset
0002ED82 <AmiBlitz3_wizzard.ab2@19956>    ORI.w #$1000,D1
0002ED86 <AmiBlitz3_wizzard.ab2@19959>    BSR.w writeword
0002ED8A <AmiBlitz3_wizzard.ab2@19960>   MOVE.w $A(A1),D1
0002ED8E <AmiBlitz3_wizzard.ab2@19961>    BSR.w writeword
0002ED90 <AmiBlitz3_wizzard.ab2@19964> RTS
0002ED92 <AmiBlitz3_wizzard.ab2@19968> lsldn:      Dc.b $E1,$88                 ;Dc.b $48 ;object long acsess    ;LSL.L   #8,D0
0002ED96 <AmiBlitz3_wizzard.ab2@19969> maxchk:     Dc.b $65,$00,$00,$08                                          ;BCS.W   maxchk__ok
0002ED9C <AmiBlitz3_wizzard.ab2@19970>             Dc.b $4E,$B9,$00,$00,$00,$00                                  ;JSR     $00000000
0002ED9E <AmiBlitz3_wizzard.ab2@19973> 
0002EDA0 <AmiBlitz3_wizzard.ab2@19976>             Dc.b $00,$00
0002EDA4 <AmiBlitz3_wizzard.ab2@19977> stackop:    Dc.b $2F,$2D,$00,$00                                          ;MOVE.L  $0000(A5),-(A7)
0002EDA8 <AmiBlitz3_wizzard.ab2@19984>   CMP.b #$FF,D2
0002EDAC <AmiBlitz3_wizzard.ab2@19985>    BNE.w makeregop__notst
0002EDB0 <AmiBlitz3_wizzard.ab2@19986>   MOVE.w stackop(PC),D1
0002EDB6 <AmiBlitz3_wizzard.ab2@19987>   ADDQ.w #4,a2offset
0002EDB8 <AmiBlitz3_wizzard.ab2@19988> RTS
0002EDBA <AmiBlitz3_wizzard.ab2@19991>   MOVE.l A3,-(A7)
0002EDC0 <AmiBlitz3_wizzard.ab2@19992>   LEA regtransd,A3
0002EDC4 <AmiBlitz3_wizzard.ab2@19993>   BTST #$4,D2
0002EDC8 <AmiBlitz3_wizzard.ab2@19994>    BEQ.w makeregop__skip
0002EDCE <AmiBlitz3_wizzard.ab2@19995>   LEA regtransa,A3
0002EDD2 <AmiBlitz3_wizzard.ab2@19998>   ANDI.w #$7,D2
0002EDD4 <AmiBlitz3_wizzard.ab2@19999>   MOVE.w D2,D1
0002EDD6 <AmiBlitz3_wizzard.ab2@20000>   LSL.w #8,D1
0002EDD8 <AmiBlitz3_wizzard.ab2@20001>   LSL.w #1,D1
0002EDDA <AmiBlitz3_wizzard.ab2@20002>   OR.w (A3),D1
0002EDDC <AmiBlitz3_wizzard.ab2@20003>   MOVEA.l (A7)+,A3
0002EDDE <AmiBlitz3_wizzard.ab2@20004> RTS
0002EDE2 <AmiBlitz3_wizzard.ab2@20010>   CMP.w #$3C,D0
0002EDE6 <AmiBlitz3_wizzard.ab2@20011>    BCS.w ifchar__no
0002EDEA <AmiBlitz3_wizzard.ab2@20012>   CMP.w #$3E,D0
0002EDEE <AmiBlitz3_wizzard.ab2@20013>    BHI.w ifchar__no
0002EDF2 <AmiBlitz3_wizzard.ab2@20014>   SUBI.w #$3C,D0
0002EDF4 <AmiBlitz3_wizzard.ab2@20015>   CMP.w D0,D0
0002EDF6 <AmiBlitz3_wizzard.ab2@20018> RTS
0002EE00 <AmiBlitz3_wizzard.ab2@20023>   MOVE.w oldqflag,instringon
0002EE06 <AmiBlitz3_wizzard.ab2@20024>   MOVEA.l lastsourcepos,A5
0002EE0C <AmiBlitz3_wizzard.ab2@20029>   MOVE.w regnum,-(A7)
0002EE12 <AmiBlitz3_wizzard.ab2@20030>   CLR.w regnum
0002EE18 <AmiBlitz3_wizzard.ab2@20031>   MOVE.l destpointer,-(A7)
0002EE1E <AmiBlitz3_wizzard.ab2@20032>   MOVE.l destbufferend,-(A7)
0002EE24 <AmiBlitz3_wizzard.ab2@20033>   MOVE.w dontwrite,-(A7)
0002EE2A <AmiBlitz3_wizzard.ab2@20034>   MOVE.w lasta6,-(A7)
0002EE30 <AmiBlitz3_wizzard.ab2@20035>   MOVE.w cfetchmode,-(A7)
0002EE34 <AmiBlitz3_wizzard.ab2@20036>    BNE.w JL_0_BFB6
0002EE3E <AmiBlitz3_wizzard.ab2@20037>   MOVE.l destbufferend,oldlibat
0002EE44 <AmiBlitz3_wizzard.ab2@20038>   MOVEA.l constpcat,A0
0002EE4A <AmiBlitz3_wizzard.ab2@20039>   MOVE.l A0,destpointer
0002EE4E <AmiBlitz3_wizzard.ab2@20040> BRA.w JL_0_BFBC
0002EE54 <AmiBlitz3_wizzard.ab2@20043>   MOVEA.l destpointer,A0
0002EE56 <AmiBlitz3_wizzard.ab2@20046>   MOVE.l A0,-(A7)
0002EE60 <AmiBlitz3_wizzard.ab2@20047>   MOVE.l constlibat,destbufferend
0002EE66 <AmiBlitz3_wizzard.ab2@20048>   CLR.w dontwrite
0002EE6E <AmiBlitz3_wizzard.ab2@20050>   MOVE.w #$FFFF,lasta6
0002EE76 <AmiBlitz3_wizzard.ab2@20051>   MOVE.w #$FFFF,cfetchmode
0002EE7A <AmiBlitz3_wizzard.ab2@20053>     BSR.w arreval
0002EE7C <AmiBlitz3_wizzard.ab2@20054>    MOVE.l (a7),a0
0002EFB8 <AmiBlitz3_wizzard.ab2@20056>  !newcalc
0002EFBC <AmiBlitz3_wizzard.ab2@20057>    BEQ 'l10
0002EFBE <AmiBlitz3_wizzard.ab2@20058>    MOVE.l d0,d3
0002EFC0 <AmiBlitz3_wizzard.ab2@20059>    MOVEA.l (A7)+,A0
0002EFC4 <AmiBlitz3_wizzard.ab2@20060> BRA bc1
0002EFC8 <AmiBlitz3_wizzard.ab2@20063>    MOVE.w #$2600,D1
0002EFCE <AmiBlitz3_wizzard.ab2@20064>   OR.w regnum,D1
0002EFD2 <AmiBlitz3_wizzard.ab2@20065>    BSR.w writeword
0002EFD6 <AmiBlitz3_wizzard.ab2@20066>   MOVE.w #$4E75,D1
0002EFDA <AmiBlitz3_wizzard.ab2@20067>    BSR.w writeword
0002EFE0 <AmiBlitz3_wizzard.ab2@20068>   MOVE.w dontwrite,D1
0002EFE4 <AmiBlitz3_wizzard.ab2@20069>    BNE.w conmemerr
0002EFE6 <AmiBlitz3_wizzard.ab2@20070>   MOVEA.l (A7)+,A0
0002EFE8 <AmiBlitz3_wizzard.ab2@20071>   NOP
0002EFEE <AmiBlitz3_wizzard.ab2@20072>    JSR Aclearcache                                         ;simple expression
0002EFF0 <AmiBlitz3_wizzard.ab2@20075>    JSR (A0)                                                ;writeresult
0002EFF6 <AmiBlitz3_wizzard.ab2@20078>   MOVE.w (A7)+,cfetchmode
0002EFFC <AmiBlitz3_wizzard.ab2@20079>   MOVE.w (A7)+,lasta6
0002F002 <AmiBlitz3_wizzard.ab2@20080>   MOVE.w (A7)+,dontwrite
0002F008 <AmiBlitz3_wizzard.ab2@20081>   MOVE.l (A7)+,destbufferend
0002F00E <AmiBlitz3_wizzard.ab2@20082>   MOVE.l (A7)+,destpointer
0002F014 <AmiBlitz3_wizzard.ab2@20083>   MOVE.w (A7)+,regnum
0002F01A <AmiBlitz3_wizzard.ab2@20086> JMP reget
0002F01E <AmiBlitz3_wizzard.ab2@20089> oldlibat:   Ds.l 1
0002F024 <AmiBlitz3_wizzard.ab2@20093>   LEA incdir,A0
0002F028 <AmiBlitz3_wizzard.ab2@20096>   CMP.w #$22,D0
0002F02C <AmiBlitz3_wizzard.ab2@20097>    BEQ.w JL_0_C052
0002F02E <AmiBlitz3_wizzard.ab2@20098>   MOVE.b D0,(A0)+
0002F030 <AmiBlitz3_wizzard.ab2@20099>   TST.w D0
0002F034 <AmiBlitz3_wizzard.ab2@20100>    BEQ.w JL_0_C05A
0002F038 <AmiBlitz3_wizzard.ab2@20101>    BMI.w syntaxerr
0002F03E <AmiBlitz3_wizzard.ab2@20104>   JSR get1bytemain                                         ;_long
0002F042 <AmiBlitz3_wizzard.ab2@20105> BRA.w JL_0_C03E
0002F044 <AmiBlitz3_wizzard.ab2@20108> RTS
0002F04A <AmiBlitz3_wizzard.ab2@20112>   LEA ptr_parameterstore,A1                                ;getparameter
0002F050 <AmiBlitz3_wizzard.ab2@20113>   LEA incdir,A0
0002F052 <AmiBlitz3_wizzard.ab2@20114>   MOVEQ.l #-$01,D2
0002F054 <AmiBlitz3_wizzard.ab2@20117>     ADDQ.w #1,D2
0002F056 <AmiBlitz3_wizzard.ab2@20118>     MOVE.b (A0)+,(A1)+
0002F05A <AmiBlitz3_wizzard.ab2@20119>   BNE.w JL_0_C06A
0002F05C <AmiBlitz3_wizzard.ab2@20120>   SUBQ.w #1,A1
0002F066 <AmiBlitz3_wizzard.ab2@20122>   MOVE.w oldqflag,instringon
0002F06C <AmiBlitz3_wizzard.ab2@20123>   MOVEA.l lastsourcepos,A5
0002F072 <AmiBlitz3_wizzard.ab2@20127>   JSR get1bytemain
0002F074 <AmiBlitz3_wizzard.ab2@20128>   TST.w D0
0002F078 <AmiBlitz3_wizzard.ab2@20129>    BMI.w syntaxerr
0002F07C <AmiBlitz3_wizzard.ab2@20130>   CMP.b #$22,D0
0002F080 <AmiBlitz3_wizzard.ab2@20131>    BEQ.w JL_0_C078
0002F082 <AmiBlitz3_wizzard.ab2@20132>   MOVE.b D0,(A1)+
0002F086 <AmiBlitz3_wizzard.ab2@20133>    BEQ.w JL_0_C096
0002F088 <AmiBlitz3_wizzard.ab2@20134>   ADDQ.w #1,D2
0002F08C <AmiBlitz3_wizzard.ab2@20135> BRA.w JL_0_C078
0002F08E <AmiBlitz3_wizzard.ab2@20138>   TST.w D2
0002F092 <AmiBlitz3_wizzard.ab2@20139>    BEQ.w syntaxerr
0002F094 <AmiBlitz3_wizzard.ab2@20140> RTS
0002F09A <AmiBlitz3_wizzard.ab2@20144>   MOVEA.l constantbase,A2
0002F09E <AmiBlitz3_wizzard.ab2@20145>   MOVEA.l $E(A2),A5
0002F0A4 <AmiBlitz3_wizzard.ab2@20146>   MOVE.l a5,includesourceline
0002F0AA <AmiBlitz3_wizzard.ab2@20147>   LEA inctab,a0
0002F0B0 <AmiBlitz3_wizzard.ab2@20148>   MOVE.w ininclude,d0
0002F0B4 <AmiBlitz3_wizzard.ab2@20149>   MOVE.l $0(a0,d0*4),d0
0002F0B8 <AmiBlitz3_wizzard.ab2@20150>   MOVEA.l $4(A2),A0
0002F0BC <AmiBlitz3_wizzard.ab2@20152>   LEA $0(A0,D0.l),A0
0002F0BE <AmiBlitz3_wizzard.ab2@20153>   MOVEA.l A5,A1
0002F0C0 <AmiBlitz3_wizzard.ab2@20156>     CMPA.l A0,A1
0002F0C4 <AmiBlitz3_wizzard.ab2@20157>      BCC.w JL_0_C0C6
0002F0C6 <AmiBlitz3_wizzard.ab2@20158>   TST.b (A1)+
0002F0CA <AmiBlitz3_wizzard.ab2@20159>   BNE.w JL_0_C0B6
0002F0CE <AmiBlitz3_wizzard.ab2@20160> BRA.w JL_0_C112
0002F0D2 <AmiBlitz3_wizzard.ab2@20163>   MOVEA.l $4(A2),A1
0002F0D4 <AmiBlitz3_wizzard.ab2@20166>   CMPA.l A0,A5
0002F0D8 <AmiBlitz3_wizzard.ab2@20167>   BCC.w JL_0_C0D6
0002F0DA <AmiBlitz3_wizzard.ab2@20168>   MOVE.b (A5)+,(A1)+
0002F0DE <AmiBlitz3_wizzard.ab2@20169> BRA.w JL_0_C0CA
0002F0E0 <AmiBlitz3_wizzard.ab2@20172>   MOVE.l A1,D0
0002F0E4 <AmiBlitz3_wizzard.ab2@20173>   SUB.l $4(A2),D0
0002F0EA <AmiBlitz3_wizzard.ab2@20174>   LEA inctab,a0
0002F0EC <AmiBlitz3_wizzard.ab2@20175>   MOVEQ #0,d1
0002F0F2 <AmiBlitz3_wizzard.ab2@20176>   MOVE.w ininclude,d1
0002F0F6 <AmiBlitz3_wizzard.ab2@20177>   MOVE.l d0,0(a0,d1*4)
0002F0FC <AmiBlitz3_wizzard.ab2@20179>   MOVEA.l _dosbase,A6
0002F100 <AmiBlitz3_wizzard.ab2@20180>   MOVE.l $8(A2),D1
0002F102 <AmiBlitz3_wizzard.ab2@20181>   MOVE.l A1,D2
0002F108 <AmiBlitz3_wizzard.ab2@20182>   MOVE.l D2,include_base
0002F10E <AmiBlitz3_wizzard.ab2@20184>   MOVE.l #$10000000,d3                                     ;load whole file
0002F110 <AmiBlitz3_wizzard.ab2@20185>   SUB.l D0,D3
0002F114 <AmiBlitz3_wizzard.ab2@20186>    JSR _Read(A6)
0002F116 <AmiBlitz3_wizzard.ab2@20187>   TST.l D0
0002F11A <AmiBlitz3_wizzard.ab2@20188>    BMI.w error_reading_file
0002F11E <AmiBlitz3_wizzard.ab2@20189>    BEQ.w JL_0_C120
0002F124 <AmiBlitz3_wizzard.ab2@20190>    MOVE.l D0,include_length
0002F166 <AmiBlitz3_wizzard.ab2@20191>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0002F190 <AmiBlitz3_wizzard.ab2@20192>    !basic
0002F1A0 <AmiBlitz3_wizzard.ab2@20193>    ilen.l  = Peek.l(?include_length)
0002F1B0 <AmiBlitz3_wizzard.ab2@20194>    ibase.l = Peek.l(?include_base)
0002F1C0 <AmiBlitz3_wizzard.ab2@20195>    ido.l   = Peek.l(?include_process)
0002F1D0 <AmiBlitz3_wizzard.ab2@20196>    *tn.preprocessor = Peek.l(?include_preprocessor)
0002F1DA <AmiBlitz3_wizzard.ab2@20197>    If ido
0002F1EC <AmiBlitz3_wizzard.ab2@20198>      ioffset.l = SkipXtraHeader{ibase,ilen}
0002F212 <AmiBlitz3_wizzard.ab2@20199>      nilen.l = preproc_Tokenize{*tn,ibase+ioffset,ibase,ilen-ioffset}
0002F224 <AmiBlitz3_wizzard.ab2@20200>      If nilen>0
0002F234 <AmiBlitz3_wizzard.ab2@20204>        Poke.l ?include_length,nilen
0002F252 <AmiBlitz3_wizzard.ab2@20207>    !asm
0002F25C <AmiBlitz3_wizzard.ab2@20208>    MOVE.l #0,include_process
0002F262 <AmiBlitz3_wizzard.ab2@20209>    MOVE.l include_length,D0
0002F268 <AmiBlitz3_wizzard.ab2@20210>    LEA inctab,a0
0002F26A <AmiBlitz3_wizzard.ab2@20211>    MOVEQ #0,d1
0002F270 <AmiBlitz3_wizzard.ab2@20212>    MOVE.w ininclude,d1
0002F274 <AmiBlitz3_wizzard.ab2@20213>    ADD.l d0,0(a0,d1*4)
0002F278 <AmiBlitz3_wizzard.ab2@20215>   MOVEA.l $4(A2),A5
0002F27C <AmiBlitz3_wizzard.ab2@20217>    MOVE.l 0(a0,d1*4),d0
0002F280 <AmiBlitz3_wizzard.ab2@20218>   CLR.b $0(A5,D0.l)
0002F282 <AmiBlitz3_wizzard.ab2@20221>   MOVEA.l A5,A0
0002F284 <AmiBlitz3_wizzard.ab2@20224>     TST.b (A0)+
0002F288 <AmiBlitz3_wizzard.ab2@20225>   BNE.w JL_0_C114
0002F28C <AmiBlitz3_wizzard.ab2@20226>   MOVE.l A0,$E(A2)
0002F28E <AmiBlitz3_wizzard.ab2@20227> RTS
0002F292 <AmiBlitz3_wizzard.ab2@20230> include_length:        Dc.l 0                              ; for tokenizer!
0002F296 <AmiBlitz3_wizzard.ab2@20231> include_base:          Dc.l 0
0002F29A <AmiBlitz3_wizzard.ab2@20232> include_process:       Dc.l 0
0002F29E <AmiBlitz3_wizzard.ab2@20233> include_preprocessor:  Dc.l 0
0002F2A2 <AmiBlitz3_wizzard.ab2@20237>   MOVE.l $8(A2),D1
0002F2A8 <AmiBlitz3_wizzard.ab2@20239>   MOVEA.l _dosbase,A6
0002F2AC <AmiBlitz3_wizzard.ab2@20240>   JSR _Close(a6)
0002F2B2 <AmiBlitz3_wizzard.ab2@20241>   MOVEA.l _execbase,A6
0002F2B6 <AmiBlitz3_wizzard.ab2@20242>   MOVEA.l $4(A2),A1
0002F2BC <AmiBlitz3_wizzard.ab2@20243>   MOVE.l #$400*8,D0                                        ;exit include
0002F2C0 <AmiBlitz3_wizzard.ab2@20245>   JSR _FreeVec(a6)
0002F2C6 <AmiBlitz3_wizzard.ab2@20248>   MOVE.l (A2),constantbase
0002F2C8 <AmiBlitz3_wizzard.ab2@20249>   MOVEA.l A2,A1
0002F2CA <AmiBlitz3_wizzard.ab2@20250>   MOVEQ.l #$00,D0
0002F2CE <AmiBlitz3_wizzard.ab2@20251>   MOVE.b $12(A2),D0
0002F2D4 <AmiBlitz3_wizzard.ab2@20252>   MOVEA.l _execbase,A6
0002F2DA <AmiBlitz3_wizzard.ab2@20253>   MOVE.l mempool2,a0
0002F2DE <AmiBlitz3_wizzard.ab2@20254>   JSR _FreePooled(A6)
0002F2E4 <AmiBlitz3_wizzard.ab2@20255>   JSR zero_includename
0002F2EA <AmiBlitz3_wizzard.ab2@20256>   SUBQ.w #1,ininclude
0002F2EE <AmiBlitz3_wizzard.ab2@20257>   BNE.w AJL_0_C09E
0002F2F4 <AmiBlitz3_wizzard.ab2@20260>   LEA _include,a0
0002F2F8 <AmiBlitz3_wizzard.ab2@20261>   MOVEM.l a0-a6/d0-d7,-(a7)
0002F2FE <AmiBlitz3_wizzard.ab2@20262>   LEA ptr_parameterstore,a1
0002F300 <AmiBlitz3_wizzard.ab2@20265>     MOVE.b (a0)+,(a1)+
0002F304 <AmiBlitz3_wizzard.ab2@20266>   BNE 'l1b
0002F306 <AmiBlitz3_wizzard.ab2@20267>   MOVEQ #9,d2
0002F30C <AmiBlitz3_wizzard.ab2@20268>   JSR findlabel2
0002F310 <AmiBlitz3_wizzard.ab2@20269>   BNE 'd
0002F314 <AmiBlitz3_wizzard.ab2@20270>   CLR.l 8(a2)
0002F318 <AmiBlitz3_wizzard.ab2@20273>   MOVEM.l (a7)+,a0-a6/d0-d7
0002F31A <AmiBlitz3_wizzard.ab2@20274> RTS
0002F320 <AmiBlitz3_wizzard.ab2@20278>   MOVE.l unusedfunc,d0
0002F324 <AmiBlitz3_wizzard.ab2@20279>   BEQ 'noclear
0002F328 <AmiBlitz3_wizzard.ab2@20280>   MOVEM.l d0-d2/a0-a1/a6,-(a7)
0002F32A <AmiBlitz3_wizzard.ab2@20283>     MOVE.l d0,a1
0002F32E <AmiBlitz3_wizzard.ab2@20284>     MOVE.l 4(a1),d0
0002F330 <AmiBlitz3_wizzard.ab2@20285>     MOVE.l (a1),d2
0002F336 <AmiBlitz3_wizzard.ab2@20286>     MOVE.l _execbase,a6
0002F33A <AmiBlitz3_wizzard.ab2@20287>     JSR _FreeMem(a6)
0002F33C <AmiBlitz3_wizzard.ab2@20288>     MOVE.l d2,d0
0002F340 <AmiBlitz3_wizzard.ab2@20289>   BNE 'f1
0002F346 <AmiBlitz3_wizzard.ab2@20290>   CLR.l unusedfunc
0002F34A <AmiBlitz3_wizzard.ab2@20291>   MOVEM.l (a7)+,a0-a1/a6/d0-d2
0002F34C <AmiBlitz3_wizzard.ab2@20294> RTS
0002F352 <AmiBlitz3_wizzard.ab2@20298>   MOVEA.l xinclude_base,A2
0002F358 <AmiBlitz3_wizzard.ab2@20299>   CLR.l xinclude_base
0002F35C <AmiBlitz3_wizzard.ab2@20302>     CMPA.w #$0,A2
0002F360 <AmiBlitz3_wizzard.ab2@20303>      BEQ.w JL_0_C186
0002F362 <AmiBlitz3_wizzard.ab2@20304>     MOVEQ.l #$00,D0
0002F366 <AmiBlitz3_wizzard.ab2@20305>     MOVE.b 4+8(A2),D0
0002F368 <AmiBlitz3_wizzard.ab2@20306>     MOVEA.l A2,A1
0002F36A <AmiBlitz3_wizzard.ab2@20307>     MOVEA.l (A2),A2
0002F370 <AmiBlitz3_wizzard.ab2@20308>     MOVEA.l _execbase,A6
0002F376 <AmiBlitz3_wizzard.ab2@20309>     MOVE.l mempool2,a0
0002F37A <AmiBlitz3_wizzard.ab2@20310>     JSR _FreePooled(A6)
0002F37E <AmiBlitz3_wizzard.ab2@20311> BRA.w JL_0_C168
0002F380 <AmiBlitz3_wizzard.ab2@20314> RTS
0002F386 <AmiBlitz3_wizzard.ab2@20318>   MOVEA.l constantbase,A2
0002F38C <AmiBlitz3_wizzard.ab2@20319>   CLR.l constantbase
0002F390 <AmiBlitz3_wizzard.ab2@20322>     CMPA.w #$0,A2
0002F394 <AmiBlitz3_wizzard.ab2@20323>      BEQ.w JL_0_C1DC
0002F398 <AmiBlitz3_wizzard.ab2@20324>     MOVE.l $8(A2),D1
0002F39C <AmiBlitz3_wizzard.ab2@20325>      BEQ.w JL_0_C1AE
0002F3A2 <AmiBlitz3_wizzard.ab2@20326>     MOVEA.l _dosbase,A6
0002F3A6 <AmiBlitz3_wizzard.ab2@20327>      JSR _Close(A6)
0002F3AA <AmiBlitz3_wizzard.ab2@20330>     MOVE.l $4(A2),D0
0002F3AE <AmiBlitz3_wizzard.ab2@20331>      BEQ.w JL_0_C1C6
0002F3B0 <AmiBlitz3_wizzard.ab2@20332>     MOVEA.l D0,A1
0002F3B6 <AmiBlitz3_wizzard.ab2@20333>     MOVE.l #$400*8,D0
0002F3BC <AmiBlitz3_wizzard.ab2@20334>     MOVEA.l _execbase,A6
0002F3C2 <AmiBlitz3_wizzard.ab2@20335>     MOVE.l mempool,a0
0002F3C6 <AmiBlitz3_wizzard.ab2@20336>     JSR _FreeVec(a6)
0002F3C8 <AmiBlitz3_wizzard.ab2@20339>     MOVEQ.l #$00,D0
0002F3CC <AmiBlitz3_wizzard.ab2@20340>     MOVE.b $12(A2),D0
0002F3CE <AmiBlitz3_wizzard.ab2@20341>     MOVEA.l A2,A1
0002F3D0 <AmiBlitz3_wizzard.ab2@20342>     MOVEA.l (A2),A2
0002F3D6 <AmiBlitz3_wizzard.ab2@20343>     MOVEA.l _execbase,A6
0002F3DC <AmiBlitz3_wizzard.ab2@20344>     MOVE.l mempool2,a0
0002F3E0 <AmiBlitz3_wizzard.ab2@20345>     JSR _FreePooled(A6)
0002F3E4 <AmiBlitz3_wizzard.ab2@20346> BRA.w JL_0_C194
0002F3E6 <AmiBlitz3_wizzard.ab2@20349> RTS
0002F3E8 <AmiBlitz3_wizzard.ab2@20353>   SWAP D0
0002F3EC <AmiBlitz3_wizzard.ab2@20354>    BSR.w JL_0_C1E6
0002F3EE <AmiBlitz3_wizzard.ab2@20355>   SWAP D0
0002F3F4 <AmiBlitz3_wizzard.ab2@20358>   MOVEA.l data2,A4
0002F3FA <AmiBlitz3_wizzard.ab2@20359>   CMPA.l allat,A4
0002F3FE <AmiBlitz3_wizzard.ab2@20360>    BCC.w JL_0_C200
0002F400 <AmiBlitz3_wizzard.ab2@20361>   MOVE.w D0,(A4)+
0002F406 <AmiBlitz3_wizzard.ab2@20362>   MOVE.l A4,data2
0002F408 <AmiBlitz3_wizzard.ab2@20363> RTS
0002F410 <AmiBlitz3_wizzard.ab2@20366>   MOVE.w #$FFFF,dontwrite
0002F416 <AmiBlitz3_wizzard.ab2@20367>   ADDQ.l #2,data2
0002F418 <AmiBlitz3_wizzard.ab2@20368> RTS
0002F41E <AmiBlitz3_wizzard.ab2@20372>   MOVEA.l data2,A4
0002F424 <AmiBlitz3_wizzard.ab2@20373>   CMPA.l allat,A4
0002F428 <AmiBlitz3_wizzard.ab2@20374>    BCC.w JL_0_C22A
0002F42A <AmiBlitz3_wizzard.ab2@20375>   MOVE.b D0,(A4)+
0002F430 <AmiBlitz3_wizzard.ab2@20376>   MOVE.l A4,data2
0002F432 <AmiBlitz3_wizzard.ab2@20377> RTS
0002F43A <AmiBlitz3_wizzard.ab2@20380>   MOVE.w #$FFFF,dontwrite
0002F440 <AmiBlitz3_wizzard.ab2@20381>   ADDQ.l #1,data2
0002F442 <AmiBlitz3_wizzard.ab2@20382> RTS
0002F446 <AmiBlitz3_wizzard.ab2@20386>   CMP.w #$22,D0
0002F44A <AmiBlitz3_wizzard.ab2@20387>    BNE.w syntaxerr
0002F450 <AmiBlitz3_wizzard.ab2@20391>   JSR get1bytemain
0002F454 <AmiBlitz3_wizzard.ab2@20392>   CMP.b #$22,D0
0002F458 <AmiBlitz3_wizzard.ab2@20393>    BEQ.w JL_0_C25A
0002F45A <AmiBlitz3_wizzard.ab2@20394>   TST.w D0
0002F45E <AmiBlitz3_wizzard.ab2@20395>    BEQ.w syntaxerr
0002F460 <AmiBlitz3_wizzard.ab2@20396>   MOVE.b D0,(A0)+
0002F464 <AmiBlitz3_wizzard.ab2@20397> BRA.w JL_0_C242
0002F466 <AmiBlitz3_wizzard.ab2@20400>   CLR.b (A0)
0002F468 <AmiBlitz3_wizzard.ab2@20401> RTS
0002F46A <AmiBlitz3_wizzard.ab2@20404>   TST.l D3
0002F46C <AmiBlitz3_wizzard.ab2@20405> RTS
0002F472 <AmiBlitz3_wizzard.ab2@20408>   LEA ptr_parameterstore,A0
0002F478 <AmiBlitz3_wizzard.ab2@20409>   LEA namebuff2,A1
0002F47A <AmiBlitz3_wizzard.ab2@20412>     MOVE.b (A0)+,D0
0002F47E <AmiBlitz3_wizzard.ab2@20413>     BEQ.w JL_0_C27C
0002F480 <AmiBlitz3_wizzard.ab2@20414>   CMP.b (A1)+,D0
0002F484 <AmiBlitz3_wizzard.ab2@20415>   BEQ.w JL_0_C26E
0002F486 <AmiBlitz3_wizzard.ab2@20416> RTS
0002F488 <AmiBlitz3_wizzard.ab2@20419>   TST.b (A1)
0002F48C <AmiBlitz3_wizzard.ab2@20420>   BNE.w JL_0_C284
0002F48E <AmiBlitz3_wizzard.ab2@20421> RTS
0002F492 <AmiBlitz3_wizzard.ab2@20424>   CMP.w #$1,D0
0002F494 <AmiBlitz3_wizzard.ab2@20425> RTS
0002F498 <AmiBlitz3_wizzard.ab2@20429>   CMP.w #$2E,D0                                            ;dodeftype
0002F49C <AmiBlitz3_wizzard.ab2@20430>    BNE.w syntaxerr
0002F4A0 <AmiBlitz3_wizzard.ab2@20431>   BSR.w getparameter2
0002F4A6 <AmiBlitz3_wizzard.ab2@20432>   LEA newtypebase,A2
0002F4AA <AmiBlitz3_wizzard.ab2@20433>   BSR.w findtype
0002F4AE <AmiBlitz3_wizzard.ab2@20434>    BNE.w notypeerr
0002F4B4 <AmiBlitz3_wizzard.ab2@20435>   TST.b declare
0002F4B8 <AmiBlitz3_wizzard.ab2@20436>    BNE 'l1
0002F4BE <AmiBlitz3_wizzard.ab2@20437>   TST.b declare2
0002F4C2 <AmiBlitz3_wizzard.ab2@20438>    BEQ 'l2
0002F4CA <AmiBlitz3_wizzard.ab2@20441>   MOVE.b #2,nowdeclare
0002F4D0 <AmiBlitz3_wizzard.ab2@20445>   JSR reget
0002F4D4 <AmiBlitz3_wizzard.ab2@20446>    BNE.w JL_0_C2B4
0002F4DA <AmiBlitz3_wizzard.ab2@20447>   MOVE.l A2,defaulttype
0002F4DC <AmiBlitz3_wizzard.ab2@20448> RTS
0002F4E2 <AmiBlitz3_wizzard.ab2@20451>   MOVE.l defaulttype,-(A7)
0002F4E8 <AmiBlitz3_wizzard.ab2@20452>   MOVE.l A2,defaulttype
0002F4EC <AmiBlitz3_wizzard.ab2@20455>   BSR.w getparameter
0002F4F0 <AmiBlitz3_wizzard.ab2@20456>    BSR.w JL_0_8E3C
0002F4F4 <AmiBlitz3_wizzard.ab2@20457>   CMP.w #$2C,D0
0002F4F8 <AmiBlitz3_wizzard.ab2@20458>    BNE.w JL_0_C2D8
0002F4FE <AmiBlitz3_wizzard.ab2@20459>    JSR get1bytemain                                        ; was BSR.w
0002F502 <AmiBlitz3_wizzard.ab2@20460> BRA.w JL_0_C2C0
0002F508 <AmiBlitz3_wizzard.ab2@20463>   MOVE.l (A7)+,defaulttype
0002F50A <AmiBlitz3_wizzard.ab2@20464> RTS
0002F50E <AmiBlitz3_wizzard.ab2@20468>   LEA $4(A5),A2                                            ;fehler function
0002F510 <AmiBlitz3_wizzard.ab2@20471>   MOVE.l A2,D0
0002F514 <AmiBlitz3_wizzard.ab2@20474>   BSR.w getparameter
0002F518 <AmiBlitz3_wizzard.ab2@20475>   BSR.w JL_0_8E3C
0002F51C <AmiBlitz3_wizzard.ab2@20476>   BSR.w calcvar
0002F520 <AmiBlitz3_wizzard.ab2@20477>   CMP.b #$7,D2
0002F524 <AmiBlitz3_wizzard.ab2@20478>    BNE.w mismatcherr
0002F528 <AmiBlitz3_wizzard.ab2@20479>   MOVE.w varmode(PC),-(A7)
0002F52C <AmiBlitz3_wizzard.ab2@20480>   CMP.w #$3D,D0
0002F530 <AmiBlitz3_wizzard.ab2@20481>    BNE.w syntaxerr
0002F534 <AmiBlitz3_wizzard.ab2@20482>   BTST #$F,D2
0002F538 <AmiBlitz3_wizzard.ab2@20483>    BNE.w JL_0_C31C
0002F53C <AmiBlitz3_wizzard.ab2@20484>   MOVE.w JL_0_C2E0(PC),D1
0002F540 <AmiBlitz3_wizzard.ab2@20485>   BSR.w pokewda5s
0002F542 <AmiBlitz3_wizzard.ab2@20486>   MOVE.w D3,D1
0002F546 <AmiBlitz3_wizzard.ab2@20487>   BSR.w writeword
0002F54A <AmiBlitz3_wizzard.ab2@20490>   MOVE.w L_0_C2E4(PC),D1
0002F54E <AmiBlitz3_wizzard.ab2@20491>   BSR.w writeword
0002F554 <AmiBlitz3_wizzard.ab2@20492>   ADDQ.w #1,regnum
0002F556 <AmiBlitz3_wizzard.ab2@20493>   MOVEQ.l #$03,D2
0002F55A <AmiBlitz3_wizzard.ab2@20494>   BSR.w eval
0002F560 <AmiBlitz3_wizzard.ab2@20495>   MOVE.l #$D000,D1
0002F566 <AmiBlitz3_wizzard.ab2@20496>   MOVE.l d1,lastinstruction
0002F568 <AmiBlitz3_wizzard.ab2@20497>   TST.w (A7)+
0002F56C <AmiBlitz3_wizzard.ab2@20498>    BEQ.w Atokejsr
0002F56E <AmiBlitz3_wizzard.ab2@20499>   ADDQ.w #1,D1
0002F572 <AmiBlitz3_wizzard.ab2@20500> BRA.w Atokejsr
0002F574 <AmiBlitz3_wizzard.ab2@20504>   MOVE.w D0,D1
0002F578 <AmiBlitz3_wizzard.ab2@20505>    BPL.w syntaxerr
0002F57C <AmiBlitz3_wizzard.ab2@20506>   BCLR #$F,D1
0002F582 <AmiBlitz3_wizzard.ab2@20507>    JSR searchinstr
0002F586 <AmiBlitz3_wizzard.ab2@20508>   MOVE.l $12(A2),D0
0002F58A <AmiBlitz3_wizzard.ab2@20509>   TST.w -$2(A2,D0.L)
0002F58E <AmiBlitz3_wizzard.ab2@20510>    BEQ.w freeerr
0002F590 <AmiBlitz3_wizzard.ab2@20511>   MOVEQ.l #$02,D2
0002F592 <AmiBlitz3_wizzard.ab2@20512>   MOVE.l A2,-(A7)
0002F596 <AmiBlitz3_wizzard.ab2@20513>    BSR.w eval
0002F598 <AmiBlitz3_wizzard.ab2@20514>   MOVEA.l (A7)+,A2
0002F59E <AmiBlitz3_wizzard.ab2@20515>   MOVE.l A2,mymaxlib
0002F5A2 <AmiBlitz3_wizzard.ab2@20516>   ADDA.l $12(A2),A2
0002F5A8 <AmiBlitz3_wizzard.ab2@20517>   TST.b debugmode
0002F5AC <AmiBlitz3_wizzard.ab2@20518>    BEQ.w JL_0_C3A8
0002F5B2 <AmiBlitz3_wizzard.ab2@20519>   MOVE.w regnum,D1
0002F5B4 <AmiBlitz3_wizzard.ab2@20520>   LSL.w #8,D1
0002F5B6 <AmiBlitz3_wizzard.ab2@20521>   LSL.w #1,D1
0002F5BA <AmiBlitz3_wizzard.ab2@20522>   ORI.w #$B07C,D1
0002F5BE <AmiBlitz3_wizzard.ab2@20523>    BSR.w writeword
0002F5C2 <AmiBlitz3_wizzard.ab2@20524>   MOVE.w -$4(A2),D1
0002F5C6 <AmiBlitz3_wizzard.ab2@20525>    BSR.w writeword
0002F5CC <AmiBlitz3_wizzard.ab2@20526>   MOVE.l maxchk,D1
0002F5D0 <AmiBlitz3_wizzard.ab2@20527>    BSR.w writelong
0002F5D2 <AmiBlitz3_wizzard.ab2@20528>   MOVE.l A2,-(A7)
0002F5D6 <AmiBlitz3_wizzard.ab2@20529>   MOVE.w #$C30A,D1
0002F5DA <AmiBlitz3_wizzard.ab2@20530>    BSR.w Atokejsr
0002F5DC <AmiBlitz3_wizzard.ab2@20531>   MOVEA.l (A7)+,A2
0002F5E0 <AmiBlitz3_wizzard.ab2@20534>   MOVE.w -$2(A2),D2
0002F5E6 <AmiBlitz3_wizzard.ab2@20537>   MOVE.w regnum,D1
0002F5EC <AmiBlitz3_wizzard.ab2@20538>   OR.w lslimm,D1
0002F5F0 <AmiBlitz3_wizzard.ab2@20539>   CMP.w #$8,D2
0002F5F4 <AmiBlitz3_wizzard.ab2@20540>    BCS.w JL_0_C3CE
0002F5F8 <AmiBlitz3_wizzard.ab2@20541>    BSR.w writeword
0002F5FA <AmiBlitz3_wizzard.ab2@20542>   SUBQ.w #8,D2
0002F5FE <AmiBlitz3_wizzard.ab2@20543>    BNE.w JL_0_C3AC
0002F602 <AmiBlitz3_wizzard.ab2@20544> BRA.w JL_0_C3DA
0002F604 <AmiBlitz3_wizzard.ab2@20547>   MOVE.w D2,D0
0002F606 <AmiBlitz3_wizzard.ab2@20548>   LSL.w #8,D0
0002F608 <AmiBlitz3_wizzard.ab2@20549>   LSL.w #1,D0
0002F60A <AmiBlitz3_wizzard.ab2@20550>   OR.w D0,D1
0002F60E <AmiBlitz3_wizzard.ab2@20551>   BSR.w writeword
0002F610 <AmiBlitz3_wizzard.ab2@20554> RTS
0002F614 <AmiBlitz3_wizzard.ab2@20559>   Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0002F616 <AmiBlitz3_wizzard.ab2@20560>   Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0002F61A <AmiBlitz3_wizzard.ab2@20564> mymaxlib:  Ds.l 1
0002F61E <AmiBlitz3_wizzard.ab2@20568>   BSR.w JL_0_C340
0002F622 <AmiBlitz3_wizzard.ab2@20569>   LEA free(PC),A0
0002F626 <AmiBlitz3_wizzard.ab2@20570>   LEA freef(PC),A1
0002F62C <AmiBlitz3_wizzard.ab2@20571>   MOVE.w -$6(A2),$2(A0)
0002F630 <AmiBlitz3_wizzard.ab2@20572>   BSR.w pokecode
0002F634 <AmiBlitz3_wizzard.ab2@20573>   MOVE.l -$A(A2),D1
0002F638 <AmiBlitz3_wizzard.ab2@20576>   BEQ.w nosuperr
0002F63C <AmiBlitz3_wizzard.ab2@20577>   MOVEA.l mymaxlib(PC),A2
0002F640 <AmiBlitz3_wizzard.ab2@20578> BRA.w Amakelibsub
0002F644 <AmiBlitz3_wizzard.ab2@20583>   BSR.w JL_0_C340
0002F64A <AmiBlitz3_wizzard.ab2@20584>   LEA use,A0
0002F650 <AmiBlitz3_wizzard.ab2@20585>   LEA usef,A1
0002F656 <AmiBlitz3_wizzard.ab2@20586>   MOVE.w -$6(A2),$2(A0)
0002F65C <AmiBlitz3_wizzard.ab2@20587>   MOVE.w -$6(A2),-$2(A1)
0002F660 <AmiBlitz3_wizzard.ab2@20588>   ADDQ.w #4,-$2(A1)
0002F664 <AmiBlitz3_wizzard.ab2@20589>   BSR.w pokecode
0002F668 <AmiBlitz3_wizzard.ab2@20590>   MOVE.l -$E(A2),D1
0002F66C <AmiBlitz3_wizzard.ab2@20591> BRA.w maxjsr
0002F672 <AmiBlitz3_wizzard.ab2@20595>   JSR get1bytemain
0002F678 <AmiBlitz3_wizzard.ab2@20599>   MOVE.l firstiff,D0
0002F67C <AmiBlitz3_wizzard.ab2@20600>    BEQ.w noiferr
0002F67E <AmiBlitz3_wizzard.ab2@20601>   MOVEA.l D0,A0
0002F684 <AmiBlitz3_wizzard.ab2@20602>   CMPI.b #$1,$D(A0)
0002F688 <AmiBlitz3_wizzard.ab2@20603>    BEQ.w illelseerr
0002F68C <AmiBlitz3_wizzard.ab2@20604>   MOVE.w #$6000,D1
0002F692 <AmiBlitz3_wizzard.ab2@20606>     TST.b fast
0002F696 <AmiBlitz3_wizzard.ab2@20607>     BEQ 'l1
0002F69C <AmiBlitz3_wizzard.ab2@20608>     OR.l #$ff,d1
0002F6A0 <AmiBlitz3_wizzard.ab2@20609>     BSR writeword
0002F6A2 <AmiBlitz3_wizzard.ab2@20613>   SWAP D1
0002F6A6 <AmiBlitz3_wizzard.ab2@20614>   BSR.w writelong
0002F6A8 <AmiBlitz3_wizzard.ab2@20615>   MOVEQ.l #$00,D1
0002F6AC <AmiBlitz3_wizzard.ab2@20616>   BSR.w AJL_0_D7B8
0002F6B4 <AmiBlitz3_wizzard.ab2@20617>   MOVE.l destpointer,$8(A0)
0002F6B8 <AmiBlitz3_wizzard.ab2@20618> BRA.w do_then
0002F6BE <AmiBlitz3_wizzard.ab2@20622>   LEA ptr_parameterstore,A0
0002F6C0 <AmiBlitz3_wizzard.ab2@20623>   MOVE.l A0,-(A7)
0002F6C4 <AmiBlitz3_wizzard.ab2@20624>   BSR.w JL_0_C23A
0002F6C8 <AmiBlitz3_wizzard.ab2@20625> BRA.w handle_compileerror
0002F6CC <AmiBlitz3_wizzard.ab2@20629>   BSR.w JL_0_BF6A
0002F6CE <AmiBlitz3_wizzard.ab2@20630>   MOVEQ.l #$05,D1
0002F6D8 <AmiBlitz3_wizzard.ab2@20632>   MOVE.w oldqflag,instringon
0002F6DE <AmiBlitz3_wizzard.ab2@20633>   MOVEA.l lastsourcepos,A5
0002F6E4 <AmiBlitz3_wizzard.ab2@20634>   LEA AJL_0_C25E,A0
0002F6E8 <AmiBlitz3_wizzard.ab2@20635> BRA.w JL_0_C4B4
0002F6EE <AmiBlitz3_wizzard.ab2@20639>   LEA ptr_parameterstore,A0
0002F6F2 <AmiBlitz3_wizzard.ab2@20640>   BSR.w JL_0_C23A
0002F6F8 <AmiBlitz3_wizzard.ab2@20641>   JSR get1bytemain
0002F6FC <AmiBlitz3_wizzard.ab2@20642>   BSR.w JL_0_CCA8
0002F702 <AmiBlitz3_wizzard.ab2@20643>   LEA namebuff2,A0
0002F706 <AmiBlitz3_wizzard.ab2@20644>   BSR.w JL_0_C23A
0002F70C <AmiBlitz3_wizzard.ab2@20645>   LEA AJL_0_C262,A0
0002F70E <AmiBlitz3_wizzard.ab2@20648>   LSL.w #2,D1
0002F714 <AmiBlitz3_wizzard.ab2@20649>   LEA CIF_branches,A1
0002F718 <AmiBlitz3_wizzard.ab2@20650>   MOVE.l $0(A1,D1.W),-(A7)
0002F71A <AmiBlitz3_wizzard.ab2@20651>   MOVEQ.l #-$01,D1
0002F71C <AmiBlitz3_wizzard.ab2@20654>   JSR (A0)
0002F71E <AmiBlitz3_wizzard.ab2@20655>   MOVEA.l (A7)+,A1
0002F720 <AmiBlitz3_wizzard.ab2@20658> JMP (A1)
0002F724 <AmiBlitz3_wizzard.ab2@20662>   BEQ.w JL_0_C4F6
0002F728 <AmiBlitz3_wizzard.ab2@20663> BRA.w JL_0_C4F4
0002F72C <AmiBlitz3_wizzard.ab2@20667>   BNE.w JL_0_C4F6
0002F730 <AmiBlitz3_wizzard.ab2@20668> BRA.w JL_0_C4F4
0002F734 <AmiBlitz3_wizzard.ab2@20672>   BLT.w JL_0_C4F6
0002F738 <AmiBlitz3_wizzard.ab2@20673> BRA.w JL_0_C4F4
0002F73C <AmiBlitz3_wizzard.ab2@20677>   BLE.w JL_0_C4F6
0002F740 <AmiBlitz3_wizzard.ab2@20678> BRA.w JL_0_C4F4
0002F744 <AmiBlitz3_wizzard.ab2@20682>   BGT.w JL_0_C4F6
0002F748 <AmiBlitz3_wizzard.ab2@20683> BRA.w JL_0_C4F4
0002F74C <AmiBlitz3_wizzard.ab2@20687>   BGE.w JL_0_C4F6
0002F74E <AmiBlitz3_wizzard.ab2@20690>   MOVEQ.l #$00,D1
0002F754 <AmiBlitz3_wizzard.ab2@20693>   MOVEA.l concomsp,A0
0002F75A <AmiBlitz3_wizzard.ab2@20694>   MOVE.w skipcode,(A0)+
0002F760 <AmiBlitz3_wizzard.ab2@20695>   MOVE.l A0,concomsp
0002F766 <AmiBlitz3_wizzard.ab2@20696>   MOVE.w D1,skipcode
0002F76C <AmiBlitz3_wizzard.ab2@20697>   JSR get1bytemain
0002F770 <AmiBlitz3_wizzard.ab2@20698>    BNE.w syntaxerr
0002F776 <AmiBlitz3_wizzard.ab2@20699> JMP bakup
0002F77E <AmiBlitz3_wizzard.ab2@20703> rescode:   Dc.b $2B,$7c,$00,$00,$00,$00 :   Ds.w 1         ;MOVE.L  #$00000000,$0000(A5)
0002F782 <AmiBlitz3_wizzard.ab2@20704> rescode2:  Dc.b $2B,$40                 :   Ds.w 1         ;MOVE.L  D0,$0000(A5)
0002F786 <AmiBlitz3_wizzard.ab2@20711>   MOVE.w #$FC17,D1
0002F78C <AmiBlitz3_wizzard.ab2@20712>   JSR uselib
0002F792 <AmiBlitz3_wizzard.ab2@20714>   JSR reget
0002F796 <AmiBlitz3_wizzard.ab2@20715>    BEQ.w do_Restore__resbeg
0002F79A <AmiBlitz3_wizzard.ab2@20716>   BSR.w JL_0_AE22                                          ;get label name!
0002F79E <AmiBlitz3_wizzard.ab2@20717>   MOVE.w rescode(PC),D1
0002F7A2 <AmiBlitz3_wizzard.ab2@20718>   BSR.w writeword
0002F7A8 <AmiBlitz3_wizzard.ab2@20719>   JSR addoff                                               ;add offset
0002F7AC <AmiBlitz3_wizzard.ab2@20720>   MOVE.l $C(A2),D1
0002F7B0 <AmiBlitz3_wizzard.ab2@20721>   BSR.w writelong
0002F7B4 <AmiBlitz3_wizzard.ab2@20722>   MOVE.w rescode+6(PC),D1
0002F7B8 <AmiBlitz3_wizzard.ab2@20723>   BSR.w writeword
0002F7BC <AmiBlitz3_wizzard.ab2@20724>   MOVE.l $4(A2),D1                                         ;is it outstanding?
0002F7C0 <AmiBlitz3_wizzard.ab2@20725>   BEQ.w do_Restore__no
0002F7C2 <AmiBlitz3_wizzard.ab2@20727>   MOVEA.l D1,A1
0002F7C6 <AmiBlitz3_wizzard.ab2@20728>   ADDQ.l #1,$4(A1)                                         ;make odd - flag for data reference.
0002F7C8 <AmiBlitz3_wizzard.ab2@20729> RTS
0002F7CA <AmiBlitz3_wizzard.ab2@20734> RTS
0002F7CE <AmiBlitz3_wizzard.ab2@20737>   MOVE.w #$CD00,D1
0002F7D4 <AmiBlitz3_wizzard.ab2@20738>   JSR Atokejsr
0002F7D8 <AmiBlitz3_wizzard.ab2@20739>   MOVE.l rescode2(PC),D1
0002F7DE <AmiBlitz3_wizzard.ab2@20740> JMP writelong
0002F7E2 <AmiBlitz3_wizzard.ab2@20744>   MOVE.w #$FC17,D1
0002F7E8 <AmiBlitz3_wizzard.ab2@20745>   JSR uselib
0002F7EE <AmiBlitz3_wizzard.ab2@20748>   MOVE.l dataget,D1
0002F7F2 <AmiBlitz3_wizzard.ab2@20749>   BSR.w writelong
0002F7F6 <AmiBlitz3_wizzard.ab2@20750>   BSR.w getparameter
0002F7FA <AmiBlitz3_wizzard.ab2@20751>   BSR.w JL_0_8E3C
0002F7FE <AmiBlitz3_wizzard.ab2@20752>   BSR.w calcvar
0002F802 <AmiBlitz3_wizzard.ab2@20753>   BTST #$E,D2
0002F806 <AmiBlitz3_wizzard.ab2@20754>    BEQ.w JL_0_C5A6
0002F80A <AmiBlitz3_wizzard.ab2@20755>   MOVE.b #$6,D2
0002F80C <AmiBlitz3_wizzard.ab2@20758>   TST.b D2
0002F810 <AmiBlitz3_wizzard.ab2@20759>    BEQ.w noleterr
0002F816 <AmiBlitz3_wizzard.ab2@20760>   TST.b debugmode
0002F81A <AmiBlitz3_wizzard.ab2@20761>    BEQ.w JL_0_C5D0
0002F81E <AmiBlitz3_wizzard.ab2@20762>   MOVE.w #$7000,D1
0002F820 <AmiBlitz3_wizzard.ab2@20763>   MOVE.b D2,D1
0002F824 <AmiBlitz3_wizzard.ab2@20764>   ANDI.b #$F,D1
0002F828 <AmiBlitz3_wizzard.ab2@20765>   BSR.w writeword
0002F82C <AmiBlitz3_wizzard.ab2@20766>   MOVE.w #$C310,D1
0002F82E <AmiBlitz3_wizzard.ab2@20767>   MOVE.w D2,-(A7)
0002F832 <AmiBlitz3_wizzard.ab2@20768>   BSR.w Atokejsr
0002F834 <AmiBlitz3_wizzard.ab2@20769>   MOVE.w (A7)+,D2
0002F838 <AmiBlitz3_wizzard.ab2@20772>   CMP.b #$7,D2
0002F83C <AmiBlitz3_wizzard.ab2@20773>    BEQ.w JL_0_C684
0002F840 <AmiBlitz3_wizzard.ab2@20774>   CMP.b #$1,D2
0002F844 <AmiBlitz3_wizzard.ab2@20775>    BNE.w JL_0_C62A
0002F84A <AmiBlitz3_wizzard.ab2@20776>   LEA dataletb2,A0
0002F850 <AmiBlitz3_wizzard.ab2@20777>   LEA dataletb2f,A1
0002F854 <AmiBlitz3_wizzard.ab2@20778>   BTST #$F,D2
0002F858 <AmiBlitz3_wizzard.ab2@20779>    BEQ.w JL_0_C5FC
0002F85C <AmiBlitz3_wizzard.ab2@20780>   BSR.w pokecode
0002F860 <AmiBlitz3_wizzard.ab2@20781> BRA.w JL_0_C668
0002F866 <AmiBlitz3_wizzard.ab2@20784>   LEA dataletb,A0
0002F86C <AmiBlitz3_wizzard.ab2@20785>   LEA dataletbf,A1
0002F872 <AmiBlitz3_wizzard.ab2@20786>   TST.w varmode
0002F876 <AmiBlitz3_wizzard.ab2@20787>    BEQ.w JL_0_C61E
0002F87C <AmiBlitz3_wizzard.ab2@20788>   LEA dataletbl,A0
0002F882 <AmiBlitz3_wizzard.ab2@20789>   LEA dataletblf,A1
0002F886 <AmiBlitz3_wizzard.ab2@20792>   MOVE.w D3,$4(A0)
0002F88A <AmiBlitz3_wizzard.ab2@20793>   BSR.w pokecode
0002F88E <AmiBlitz3_wizzard.ab2@20794> BRA.w JL_0_C668
0002F894 <AmiBlitz3_wizzard.ab2@20797>   LEA dataletw,A0
0002F898 <AmiBlitz3_wizzard.ab2@20798>   CMP.b #$3,D2
0002F89C <AmiBlitz3_wizzard.ab2@20799>    BCS.w JL_0_C63E
0002F8A2 <AmiBlitz3_wizzard.ab2@20800>   LEA dataletl,A0
0002F8A6 <AmiBlitz3_wizzard.ab2@20803>   BTST #$F,D2
0002F8AA <AmiBlitz3_wizzard.ab2@20804>    BEQ.w JL_0_C652
0002F8AE <AmiBlitz3_wizzard.ab2@20805>   MOVE.w $4(A0),D1
0002F8B2 <AmiBlitz3_wizzard.ab2@20806>    BSR.w writeword
0002F8B6 <AmiBlitz3_wizzard.ab2@20807> BRA.w JL_0_C668
0002F8BC <AmiBlitz3_wizzard.ab2@20810>   TST.w varmode
0002F8C0 <AmiBlitz3_wizzard.ab2@20811>    BEQ.w JL_0_C65E
0002F8C2 <AmiBlitz3_wizzard.ab2@20812>   ADDQ.w #6,A0
0002F8C6 <AmiBlitz3_wizzard.ab2@20815>   MOVE.w D3,$2(A0)
0002F8C8 <AmiBlitz3_wizzard.ab2@20816>   MOVE.l (A0),D1
0002F8CC <AmiBlitz3_wizzard.ab2@20817>   BSR.w writelong
0002F8D2 <AmiBlitz3_wizzard.ab2@20820>   MOVE.l dataput,D1
0002F8D6 <AmiBlitz3_wizzard.ab2@20821>    BSR.w writelong
0002F8DA <AmiBlitz3_wizzard.ab2@20822>   CMP.w #$2C,D0
0002F8DE <AmiBlitz3_wizzard.ab2@20823>    BEQ.w JL_0_C67C
0002F8E0 <AmiBlitz3_wizzard.ab2@20824> RTS
0002F8E6 <AmiBlitz3_wizzard.ab2@20827>   JSR get1bytemain
0002F8EA <AmiBlitz3_wizzard.ab2@20828> BRA.w JL_0_C584
0002F8F0 <AmiBlitz3_wizzard.ab2@20832>   MOVE.w stlenget,D1
0002F8F4 <AmiBlitz3_wizzard.ab2@20833>    BSR.w writeword
0002F8F8 <AmiBlitz3_wizzard.ab2@20834>   BTST #$F,D2
0002F8FC <AmiBlitz3_wizzard.ab2@20835>    BNE.w JL_0_C6C0
0002F902 <AmiBlitz3_wizzard.ab2@20836>   TST.w varmode
0002F906 <AmiBlitz3_wizzard.ab2@20837>    BEQ.w JL_0_C6B0
0002F90C <AmiBlitz3_wizzard.ab2@20838>   MOVE.w D3,leaampl+2
0002F912 <AmiBlitz3_wizzard.ab2@20839>   MOVE.l leaampl,D1
0002F916 <AmiBlitz3_wizzard.ab2@20840> BRA.w JL_0_C6BC
0002F91C <AmiBlitz3_wizzard.ab2@20843>   MOVE.w D3,leaamp+2
0002F922 <AmiBlitz3_wizzard.ab2@20844>   MOVE.l leaamp,D1
0002F926 <AmiBlitz3_wizzard.ab2@20847>   BSR.w writelong
0002F92A <AmiBlitz3_wizzard.ab2@20850>   MOVE.w #$C701,D1
0002F930 <AmiBlitz3_wizzard.ab2@20851>   MOVE.w varmode,D2
0002F934 <AmiBlitz3_wizzard.ab2@20852>    BEQ.w JL_0_C6D0
0002F936 <AmiBlitz3_wizzard.ab2@20853>   SUBQ.w #1,D1
0002F93A <AmiBlitz3_wizzard.ab2@20856>   BSR.w Atokejsr
0002F942 <AmiBlitz3_wizzard.ab2@20857>   MOVE.w #$FFFF,lasta6
0002F948 <AmiBlitz3_wizzard.ab2@20858>   LEA stalign,A0
0002F94E <AmiBlitz3_wizzard.ab2@20859>   LEA stalignf,A1
0002F952 <AmiBlitz3_wizzard.ab2@20860>   BSR.w pokecode
0002F956 <AmiBlitz3_wizzard.ab2@20861> BRA.w JL_0_C668
0002F95A <AmiBlitz3_wizzard.ab2@20865>   CMP.w #$2E,D0                                            ;definecode 'lb 'lw 'll
0002F95E <AmiBlitz3_wizzard.ab2@20866>    BNE.w JL_0_C720
0002F964 <AmiBlitz3_wizzard.ab2@20867>   JSR get1bytemain
0002F968 <AmiBlitz3_wizzard.ab2@20868>   CMP.w #$77,D0
0002F96C <AmiBlitz3_wizzard.ab2@20869>    BEQ.w JL_0_C71C
0002F970 <AmiBlitz3_wizzard.ab2@20870>   CMP.w #$62,D0
0002F974 <AmiBlitz3_wizzard.ab2@20871>    BEQ.w JL_0_C718
0002F978 <AmiBlitz3_wizzard.ab2@20872>   CMP.w #"s",d0
0002F97C <AmiBlitz3_wizzard.ab2@20873>   BEQ single3
0002F980 <AmiBlitz3_wizzard.ab2@20874>   CMP.w #"d",d0
0002F984 <AmiBlitz3_wizzard.ab2@20875>   BEQ double3
0002F988 <AmiBlitz3_wizzard.ab2@20876>   CMP.w #$6C,D0
0002F98C <AmiBlitz3_wizzard.ab2@20877>    BNE.w syntaxerr
0002F98E <AmiBlitz3_wizzard.ab2@20878>   MOVEQ.l #$02,D1
0002F990 <AmiBlitz3_wizzard.ab2@20879> RTS
0002F998 <AmiBlitz3_wizzard.ab2@20883>   MOVE.b #1,iee
0002F99A <AmiBlitz3_wizzard.ab2@20884>   MOVEQ.l #$3,d1
0002F99C <AmiBlitz3_wizzard.ab2@20885> RTS
0002F9A4 <AmiBlitz3_wizzard.ab2@20889>   MOVE.b #1,iee
0002F9A6 <AmiBlitz3_wizzard.ab2@20890>   MOVEQ.l #$4,d1
0002F9A8 <AmiBlitz3_wizzard.ab2@20891> RTS
0002F9AA <AmiBlitz3_wizzard.ab2@20895>   MOVEQ.l #$00,D1
0002F9AC <AmiBlitz3_wizzard.ab2@20896> RTS
0002F9AE <AmiBlitz3_wizzard.ab2@20900>   MOVEQ.l #$01,D1
0002F9B0 <AmiBlitz3_wizzard.ab2@20901> RTS
0002F9B2 <AmiBlitz3_wizzard.ab2@20905>   MOVEQ.l #$01,D1
0002F9B8 <AmiBlitz3_wizzard.ab2@20906> JMP bakup
0002F9BC <AmiBlitz3_wizzard.ab2@20910>   BSR.w JL_0_C6F0
0002F9BE <AmiBlitz3_wizzard.ab2@20912>   MOVE.w D1,-(A7)
0002F9C2 <AmiBlitz3_wizzard.ab2@20913>    BSR.w AJL_0_BF6E
0002F9C6 <AmiBlitz3_wizzard.ab2@20914>   CMP.w #$2C,D0
0002F9CA <AmiBlitz3_wizzard.ab2@20915>    BNE.w syntaxerr
0002F9CC <AmiBlitz3_wizzard.ab2@20916>   MOVE.l D3,-(A7)
0002F9D0 <AmiBlitz3_wizzard.ab2@20917>    BSR.w AJL_0_BF6E
0002F9D2 <AmiBlitz3_wizzard.ab2@20918>   MOVE.l D3,D1
0002F9D4 <AmiBlitz3_wizzard.ab2@20919>   MOVE.l (A7)+,D3
0002F9D6 <AmiBlitz3_wizzard.ab2@20920>   MOVE.w (A7)+,D2
0002F9DA <AmiBlitz3_wizzard.ab2@20921>    BEQ.w JL_0_C774
0002F9DE <AmiBlitz3_wizzard.ab2@20925>   CMP.w #$1,D2
0002F9E2 <AmiBlitz3_wizzard.ab2@20926>    BEQ.w JL_0_C768
0002F9E4 <AmiBlitz3_wizzard.ab2@20929>   SWAP D1
0002F9E8 <AmiBlitz3_wizzard.ab2@20930>    BSR.w writeword
0002F9EA <AmiBlitz3_wizzard.ab2@20931>   SWAP D1
0002F9EE <AmiBlitz3_wizzard.ab2@20932>    BSR.w writeword
0002F9F0 <AmiBlitz3_wizzard.ab2@20933>   SUBQ.l #1,D3
0002F9F4 <AmiBlitz3_wizzard.ab2@20934>    BNE.w JL_0_C754
0002F9F6 <AmiBlitz3_wizzard.ab2@20935> RTS
0002F9FA <AmiBlitz3_wizzard.ab2@20938>    BSR.w writeword
0002F9FC <AmiBlitz3_wizzard.ab2@20939>   SUBQ.l #1,D3
0002FA00 <AmiBlitz3_wizzard.ab2@20940>    BNE.w JL_0_C768
0002FA02 <AmiBlitz3_wizzard.ab2@20941> RTS
0002FA06 <AmiBlitz3_wizzard.ab2@20944>    BSR.w writebyte
0002FA08 <AmiBlitz3_wizzard.ab2@20945>   SUBQ.l #1,D3
0002FA0C <AmiBlitz3_wizzard.ab2@20946>    BNE.w JL_0_C774
0002FA0E <AmiBlitz3_wizzard.ab2@20947> RTS
0002FA12 <AmiBlitz3_wizzard.ab2@20951>   BSR.w JL_0_C6F0                                          ;definestorage
0002FA14 <AmiBlitz3_wizzard.ab2@20952>   MOVE.w D1,-(A7)
0002FA18 <AmiBlitz3_wizzard.ab2@20953>   BSR.w AJL_0_BF6E
0002FA1A <AmiBlitz3_wizzard.ab2@20954>   MOVE.w (A7)+,D1
0002FA1C <AmiBlitz3_wizzard.ab2@20955>   LSL.l D1,D3
0002FA1E <AmiBlitz3_wizzard.ab2@20956>   MOVE.l d3,d0
0002FA22 <AmiBlitz3_wizzard.ab2@20957>   BEQ 'll5
0002FA24 <AmiBlitz3_wizzard.ab2@20958>   MOVEQ #0,d1
0002FA2A <AmiBlitz3_wizzard.ab2@20961>     JSR writebyte
0002FA2C <AmiBlitz3_wizzard.ab2@20962>     SUBQ.l #1,d3
0002FA30 <AmiBlitz3_wizzard.ab2@20963>   BNE.s 'll10
0002FA32 <AmiBlitz3_wizzard.ab2@20966> RTS
0002FA34 <AmiBlitz3_wizzard.ab2@20970>   MOVE.w D0,-(A7)
0002FA3A <AmiBlitz3_wizzard.ab2@20971>   LEA dummyasm,A0
0002FA40 <AmiBlitz3_wizzard.ab2@20972>   MOVEA.l destpointer,A1
0002FA4A <AmiBlitz3_wizzard.ab2@20973>   MOVE.w asmlen2,asmlen
0002FA50 <AmiBlitz3_wizzard.ab2@20974>   JSR insasm
0002FA52 <AmiBlitz3_wizzard.ab2@20975>   MOVE.w (A7)+,D0
0002FA54 <AmiBlitz3_wizzard.ab2@20976> RTS
0002FA58 <AmiBlitz3_wizzard.ab2@20980>   BSR.w JL_0_C6F0
0002FA62 <AmiBlitz3_wizzard.ab2@20982>   MOVE.l #ptr_parameterstore,asmbuff
0002FA64 <AmiBlitz3_wizzard.ab2@20983>   TST.w D1
0002FA68 <AmiBlitz3_wizzard.ab2@20984>    BEQ.w JL_0_C7EE
0002FA6C <AmiBlitz3_wizzard.ab2@20985>   CMP.w #$1,D1
0002FA70 <AmiBlitz3_wizzard.ab2@20986>    BEQ.w JL_0_C844
0002FA74 <AmiBlitz3_wizzard.ab2@20987>   CMP.w #$2,d1
0002FA78 <AmiBlitz3_wizzard.ab2@20988>    BEQ long
0002FA7C <AmiBlitz3_wizzard.ab2@20989>   CMP.w #$3,d1
0002FA80 <AmiBlitz3_wizzard.ab2@20990>    BEQ single
0002FA82 <AmiBlitz3_wizzard.ab2@20991>    MOVEQ.l #$0d,D3
0002FA88 <AmiBlitz3_wizzard.ab2@20997>    JSR asmconst
0002FA8C <AmiBlitz3_wizzard.ab2@20998>    BSR.w JL_0_C796
0002FA90 <AmiBlitz3_wizzard.ab2@20999>    BSR.w writelong
0002FA94 <AmiBlitz3_wizzard.ab2@21000>    BSR   writelong
0002FA98 <AmiBlitz3_wizzard.ab2@21001>   CMP.w #$2C,D0
0002FA9C <AmiBlitz3_wizzard.ab2@21002>    BEQ.w JL_0_C7D8b
0002FA9E <AmiBlitz3_wizzard.ab2@21003> RTS
0002FAA0 <AmiBlitz3_wizzard.ab2@21007>   MOVEQ.l #$0B,D3
0002FAA8 <AmiBlitz3_wizzard.ab2@21011>   MOVE.b #1,_dcb
0002FAAE <AmiBlitz3_wizzard.ab2@21014>   JSR asmconst
0002FAB4 <AmiBlitz3_wizzard.ab2@21015>   CLR.b _dcb
0002FAB8 <AmiBlitz3_wizzard.ab2@21016>   BSR.w JL_0_C796
0002FABC <AmiBlitz3_wizzard.ab2@21017>   BSR writebyte
0002FAC0 <AmiBlitz3_wizzard.ab2@21018>   BSR writebyte
0002FAC4 <AmiBlitz3_wizzard.ab2@21019>   BSR writebyte                                            ;long
0002FAC8 <AmiBlitz3_wizzard.ab2@21020>   BSR writebyte
0002FACC <AmiBlitz3_wizzard.ab2@21021>   CMP.w #$2C,D0
0002FAD0 <AmiBlitz3_wizzard.ab2@21022>    BEQ.w JL_0_C7D8
0002FAD2 <AmiBlitz3_wizzard.ab2@21023> RTS
0002FAD4 <AmiBlitz3_wizzard.ab2@21027>   MOVEQ.l #$0c,D3
0002FADC <AmiBlitz3_wizzard.ab2@21031>   MOVE.b #1,_dcb
0002FAE2 <AmiBlitz3_wizzard.ab2@21034>   JSR asmconst
0002FAE8 <AmiBlitz3_wizzard.ab2@21035>   CLR.b _dcb
0002FAEC <AmiBlitz3_wizzard.ab2@21036>   BSR.w JL_0_C796
0002FAF0 <AmiBlitz3_wizzard.ab2@21037>   BSR.w writebyte
0002FAF4 <AmiBlitz3_wizzard.ab2@21038>   BSR.w writebyte
0002FAF8 <AmiBlitz3_wizzard.ab2@21039>   BSR.w writebyte
0002FAFC <AmiBlitz3_wizzard.ab2@21040>   BSR.w writebyte
0002FB00 <AmiBlitz3_wizzard.ab2@21041>   CMP.w #$2C,D0
0002FB04 <AmiBlitz3_wizzard.ab2@21042>    BEQ.w JL_0_C7D8a
0002FB06 <AmiBlitz3_wizzard.ab2@21043> RTS
0002FB08 <AmiBlitz3_wizzard.ab2@21048>   MOVEQ.l #$11,D3
0002FB0E <AmiBlitz3_wizzard.ab2@21051>   JSR get1bytemain
0002FB12 <AmiBlitz3_wizzard.ab2@21052>   CMP.w #$22,D0
0002FB16 <AmiBlitz3_wizzard.ab2@21053>    BNE.w JL_0_C81E
0002FB18 <AmiBlitz3_wizzard.ab2@21056>   MOVE.b (a5)+,d0                                          ;bsr.w get1bytemain ascii dc.b
0002FB1C <AmiBlitz3_wizzard.ab2@21057>    BEQ.w syntaxerr
0002FB20 <AmiBlitz3_wizzard.ab2@21058>   CMP.w #$22,D0
0002FB24 <AmiBlitz3_wizzard.ab2@21059>    BEQ.w JL_0_C816
0002FB28 <AmiBlitz3_wizzard.ab2@21060>   CMP.b #"\",d0
0002FB2C <AmiBlitz3_wizzard.ab2@21061>    BNE 'n1
0002FB30 <AmiBlitz3_wizzard.ab2@21062>   CMP.b #"\",(a5)
0002FB34 <AmiBlitz3_wizzard.ab2@21063>    BEQ 'do1
0002FB36 <AmiBlitz3_wizzard.ab2@21066>   MOVE.w D0,D1
0002FB3A <AmiBlitz3_wizzard.ab2@21067>   BSR.w writebyte
0002FB3E <AmiBlitz3_wizzard.ab2@21068> BRA.w JL_0_C7FC
0002FB46 <AmiBlitz3_wizzard.ab2@21071>   CMP.l #"__DA",1(a5)
0002FB4A <AmiBlitz3_wizzard.ab2@21072>    BNE 'nodate1
0002FB52 <AmiBlitz3_wizzard.ab2@21073>   CMP.l #"TE__",5(a5)
0002FB56 <AmiBlitz3_wizzard.ab2@21074>    BEQ 'c1
0002FB5E <AmiBlitz3_wizzard.ab2@21075>   CMP.l #"TE_G",5(a5)
0002FB62 <AmiBlitz3_wizzard.ab2@21076>    BNE 'nodate1
0002FB6A <AmiBlitz3_wizzard.ab2@21077>   CMP.l #"ER__",9(a5)
0002FB6E <AmiBlitz3_wizzard.ab2@21078>    BNE 'nodate1
0002FB74 <AmiBlitz3_wizzard.ab2@21079>   JSR compiledatedc_ger
0002FB78 <AmiBlitz3_wizzard.ab2@21080> BRA 'n1
0002FB7E <AmiBlitz3_wizzard.ab2@21083>   JSR compiledatedc
0002FB82 <AmiBlitz3_wizzard.ab2@21084> BRA 'n1
0002FB8A <AmiBlitz3_wizzard.ab2@21087>   CMP.l #"__VE",1(a5)
0002FB8E <AmiBlitz3_wizzard.ab2@21088>    BNE 'n1
0002FB94 <AmiBlitz3_wizzard.ab2@21089>   CMP.w #"R_",5(a5)
0002FB98 <AmiBlitz3_wizzard.ab2@21090>    BNE 'n1
0002FB9E <AmiBlitz3_wizzard.ab2@21091>   JSR version_string_dc
0002FBA2 <AmiBlitz3_wizzard.ab2@21092> BRA.w JL_0_C7FC
0002FBA8 <AmiBlitz3_wizzard.ab2@21096>   CLR.w instringon
0002FBAE <AmiBlitz3_wizzard.ab2@21097>   JSR get1bytemain
0002FBB2 <AmiBlitz3_wizzard.ab2@21098> BRA.w JL_0_C83A
0002FBBC <AmiBlitz3_wizzard.ab2@21103>    MOVE.w oldqflag,instringon
0002FBC2 <AmiBlitz3_wizzard.ab2@21104>   MOVEA.l lastsourcepos,A5
0002FBC8 <AmiBlitz3_wizzard.ab2@21105>    JSR asmconst
0002FBCE <AmiBlitz3_wizzard.ab2@21106>   SUBQ.l #1,destpointer
0002FBD2 <AmiBlitz3_wizzard.ab2@21107>    BSR.w JL_0_C796
0002FBD8 <AmiBlitz3_wizzard.ab2@21108>   ADDQ.l #1,destpointer
0002FBDC <AmiBlitz3_wizzard.ab2@21109>    BSR.w writebyte
0002FBE0 <AmiBlitz3_wizzard.ab2@21112>   CMP.w #$2C,D0
0002FBE4 <AmiBlitz3_wizzard.ab2@21113>    BEQ.w JL_0_C7F0
0002FBE6 <AmiBlitz3_wizzard.ab2@21114> RTS
0002FBE8 <AmiBlitz3_wizzard.ab2@21118>   MOVEQ.l #$10,D3
0002FBF0 <AmiBlitz3_wizzard.ab2@21124>   MOVE.b #1,_dcb
0002FBF6 <AmiBlitz3_wizzard.ab2@21125>   JSR asmconst
0002FBFC <AmiBlitz3_wizzard.ab2@21126>   CLR.b _dcb
0002FC00 <AmiBlitz3_wizzard.ab2@21127>   BSR.w JL_0_C796
0002FC04 <AmiBlitz3_wizzard.ab2@21128>   BSR.w writebyte
0002FC08 <AmiBlitz3_wizzard.ab2@21129>   BSR.w writebyte
0002FC0C <AmiBlitz3_wizzard.ab2@21130>   CMP.w #$2C,D0
0002FC10 <AmiBlitz3_wizzard.ab2@21131>    BEQ.w JL_0_C84A
0002FC12 <AmiBlitz3_wizzard.ab2@21132> RTS
0002FC18 <AmiBlitz3_wizzard.ab2@21136>   ADDQ.l #3,destpointer
0002FC20 <AmiBlitz3_wizzard.ab2@21137>   ANDI.w #$FFFC,destpointer+2
0002FC22 <AmiBlitz3_wizzard.ab2@21138> RTS
0002FC28 <AmiBlitz3_wizzard.ab2@21142>   ADDQ.l #7,destpointer
0002FC30 <AmiBlitz3_wizzard.ab2@21143>   ANDI.w #$FFF8,destpointer+2
0002FC32 <AmiBlitz3_wizzard.ab2@21144> RTS
0002FC38 <AmiBlitz3_wizzard.ab2@21148>   ADDQ.l #1,destpointer                                    ;even
0002FC40 <AmiBlitz3_wizzard.ab2@21149>   BCLR #$0,destpointer+3
0002FC42 <AmiBlitz3_wizzard.ab2@21150> RTS
0002FC44 <AmiBlitz3_wizzard.ab2@21153> datasize: Ds.w 1
0002FC4A <AmiBlitz3_wizzard.ab2@21163>   TST.b debugmode
0002FC4E <AmiBlitz3_wizzard.ab2@21164>   BEQ.w pdt__skip
0002FC52 <AmiBlitz3_wizzard.ab2@21165>   MOVE.w #$4420,D0                                         ;'D '
0002FC56 <AmiBlitz3_wizzard.ab2@21166>   MOVE.b datasize+1(PC),D0
0002FC5A <AmiBlitz3_wizzard.ab2@21167> BRA.w JL_0_C1E6
0002FC5C <AmiBlitz3_wizzard.ab2@21170> RTS
0002FC60 <AmiBlitz3_wizzard.ab2@21174>   MOVE.w #$FC17,D1
0002FC66 <AmiBlitz3_wizzard.ab2@21175>    JSR uselib
0002FC70 <AmiBlitz3_wizzard.ab2@21177>    MOVE.w oldqflag,instringon
0002FC76 <AmiBlitz3_wizzard.ab2@21178>   MOVEA.l lastsourcepos,A5
0002FC7C <AmiBlitz3_wizzard.ab2@21179>    JSR AJL_0_498A
0002FC82 <AmiBlitz3_wizzard.ab2@21180>   MOVE.w D1,datasize
0002FC86 <AmiBlitz3_wizzard.ab2@21181>   CMP.w #$7,D1
0002FC8A <AmiBlitz3_wizzard.ab2@21182>    BEQ.w JL_0_C944
0002FC8C <AmiBlitz3_wizzard.ab2@21183>   MOVE.w D1,-(A7)
0002FC90 <AmiBlitz3_wizzard.ab2@21186>   BSR.w pdt
0002FC92 <AmiBlitz3_wizzard.ab2@21187>   MOVE.w (A7),D2
0002FC96 <AmiBlitz3_wizzard.ab2@21188>    BSR.w JL_0_B1D8
0002FC98 <AmiBlitz3_wizzard.ab2@21189>   CMP.w (A7),D2                                            ;datamode
0002FC9C <AmiBlitz3_wizzard.ab2@21190>    BEQ.w JL_0_C920
0002FC9E <AmiBlitz3_wizzard.ab2@21191>   MOVE.w D2,D1
0002FCA0 <AmiBlitz3_wizzard.ab2@21192>   MOVE.w (A7),D2
0002FCA4 <AmiBlitz3_wizzard.ab2@21193>   CMP.w #$2,D2
0002FCA8 <AmiBlitz3_wizzard.ab2@21194>    BNE.w JL_0_C8FE
0002FCAC <AmiBlitz3_wizzard.ab2@21195>   CMP.w #$3,D1
0002FCB0 <AmiBlitz3_wizzard.ab2@21196>    BNE.w baddaterr
0002FCB6 <AmiBlitz3_wizzard.ab2@21197>   CMP.l #$10000,D3
0002FCBA <AmiBlitz3_wizzard.ab2@21198>    BCC.w baddaterr
0002FCBE <AmiBlitz3_wizzard.ab2@21199> BRA.w JL_0_C920
0002FCC2 <AmiBlitz3_wizzard.ab2@21202>   CMP.w #$1,D2
0002FCC6 <AmiBlitz3_wizzard.ab2@21203>    BNE.w JL_0_C91C
0002FCCA <AmiBlitz3_wizzard.ab2@21204>   CMP.w #$2,D1
0002FCCE <AmiBlitz3_wizzard.ab2@21205>    BNE.w baddaterr
0002FCD4 <AmiBlitz3_wizzard.ab2@21206>   CMP.l #$100,D3
0002FCD8 <AmiBlitz3_wizzard.ab2@21207>    BCC.w baddaterr
0002FCDC <AmiBlitz3_wizzard.ab2@21208> BRA.w JL_0_C920
0002FCE0 <AmiBlitz3_wizzard.ab2@21211> BRA.w baddaterr
0002FCE4 <AmiBlitz3_wizzard.ab2@21214>   CMP.w #$3,D2
0002FCE8 <AmiBlitz3_wizzard.ab2@21215>   BCC.w JL_0_C930
0002FCEC <AmiBlitz3_wizzard.ab2@21216>   BSR.w JL_0_C1E6
0002FCF0 <AmiBlitz3_wizzard.ab2@21217> BRA.w JL_0_C934
0002FCF6 <AmiBlitz3_wizzard.ab2@21220>   TST.b iee
0002FCFA <AmiBlitz3_wizzard.ab2@21221>   BEQ 'old
0002FCFE <AmiBlitz3_wizzard.ab2@21222>   CMP.b #5,d2
0002FD02 <AmiBlitz3_wizzard.ab2@21223>   BNE 'old
0002FD06 <AmiBlitz3_wizzard.ab2@21224>   Dc.l $f2006400                                           ;  fpu data write fmove.s fp0,d0
0002FD0A <AmiBlitz3_wizzard.ab2@21228>   BSR.w JL_0_C1DE                                          ;write data >3
0002FD10 <AmiBlitz3_wizzard.ab2@21231>   JSR reget
0002FD14 <AmiBlitz3_wizzard.ab2@21232>   CMP.w #$2C,D0
0002FD18 <AmiBlitz3_wizzard.ab2@21233>    BEQ.w JL_0_C8CC
0002FD1A <AmiBlitz3_wizzard.ab2@21234>   ADDQ.w #2,A7
0002FD1C <AmiBlitz3_wizzard.ab2@21235> RTS
0002FD20 <AmiBlitz3_wizzard.ab2@21238>    BSR.w pdt
0002FD26 <AmiBlitz3_wizzard.ab2@21239>   MOVE.l data2,-(A7)
0002FD2A <AmiBlitz3_wizzard.ab2@21240>    BSR.w JL_0_C1DE
0002FD2C <AmiBlitz3_wizzard.ab2@21241>   MOVEQ.l #$00,D1
0002FD32 <AmiBlitz3_wizzard.ab2@21242>    JSR get1bytemain
0002FD36 <AmiBlitz3_wizzard.ab2@21243>    BEQ.w JL_0_C9A6
0002FD3A <AmiBlitz3_wizzard.ab2@21244>   CMP.w #$22,D0
0002FD3E <AmiBlitz3_wizzard.ab2@21245>    BEQ.w JL_0_C988
0002FD42 <AmiBlitz3_wizzard.ab2@21246>   CMP.w #$2C,D0
0002FD46 <AmiBlitz3_wizzard.ab2@21247>    BEQ.w JL_0_C9A6
0002FD4A <AmiBlitz3_wizzard.ab2@21250>    BSR.w JL_0_C210
0002FD4C <AmiBlitz3_wizzard.ab2@21251>   ADDQ.w #1,D1
0002FD52 <AmiBlitz3_wizzard.ab2@21252>    JSR getchar
0002FD54 <AmiBlitz3_wizzard.ab2@21253>   TST.w D0
0002FD58 <AmiBlitz3_wizzard.ab2@21254>    BEQ.w JL_0_C9A6
0002FD5C <AmiBlitz3_wizzard.ab2@21255>   CMP.w #$2C,D0
0002FD60 <AmiBlitz3_wizzard.ab2@21256>    BEQ.w JL_0_C9A6
0002FD64 <AmiBlitz3_wizzard.ab2@21257> BRA.w JL_0_C96C
0002FD66 <AmiBlitz3_wizzard.ab2@21261>    MOVEQ #0,d0
0002FD68 <AmiBlitz3_wizzard.ab2@21262>    MOVE.b (a5)+,d0
0002FD6C <AmiBlitz3_wizzard.ab2@21263>    BEQ.w notqerr2
0002FD70 <AmiBlitz3_wizzard.ab2@21264>   CMP.w #$22,D0
0002FD74 <AmiBlitz3_wizzard.ab2@21265>    BEQ.w JL_0_C9A2
0002FD78 <AmiBlitz3_wizzard.ab2@21266>    BSR.w JL_0_C210
0002FD7A <AmiBlitz3_wizzard.ab2@21267>   ADDQ.w #1,D1
0002FD7E <AmiBlitz3_wizzard.ab2@21268> BRA.w JL_0_C988
0002FD84 <AmiBlitz3_wizzard.ab2@21269> notqerr2 JMP notqerr
0002FD8A <AmiBlitz3_wizzard.ab2@21271>   CLR.w instringon
0002FD90 <AmiBlitz3_wizzard.ab2@21272>   JSR get1bytemain
0002FD92 <AmiBlitz3_wizzard.ab2@21275>   MOVEA.l (A7)+,A0
0002FD98 <AmiBlitz3_wizzard.ab2@21276>   MOVE.w dontwrite,D2
0002FD9C <AmiBlitz3_wizzard.ab2@21277>    BNE.w JL_0_C9B4
0002FD9E <AmiBlitz3_wizzard.ab2@21278>   MOVE.l D1,(A0)
0002FDA4 <AmiBlitz3_wizzard.ab2@21281>   ADDQ.l #1,data2
0002FDAC <AmiBlitz3_wizzard.ab2@21282>   BCLR #$0,data2+3
0002FDB0 <AmiBlitz3_wizzard.ab2@21283>   CMP.w #$2C,D0
0002FDB4 <AmiBlitz3_wizzard.ab2@21284>    BEQ.w JL_0_C944
0002FDB6 <AmiBlitz3_wizzard.ab2@21285> RTS
0002FDBC <AmiBlitz3_wizzard.ab2@21289> JMP vardeclareerr
0002FDC2 <AmiBlitz3_wizzard.ab2@21292>   MOVE.w proceduremode,D1                                  ;doshared
0002FDC6 <AmiBlitz3_wizzard.ab2@21294>   BNE.w 'l1
0002FDC8 <AmiBlitz3_wizzard.ab2@21295>   MOVE.w D1,-(A7)
0002FDCE <AmiBlitz3_wizzard.ab2@21296>   CLR.w proceduremode
0002FDD4 <AmiBlitz3_wizzard.ab2@21299>   LEA varbase,a2
0002FDD8 <AmiBlitz3_wizzard.ab2@21300>   BSR.w getparameter
0002FDDA <AmiBlitz3_wizzard.ab2@21301>   MOVE.w d2,-(a7)
0002FDE0 <AmiBlitz3_wizzard.ab2@21302>    JSR findvariable
0002FDE4 <AmiBlitz3_wizzard.ab2@21303>    BEQ 'checkdim
0002FDEA <AmiBlitz3_wizzard.ab2@21304>    LEA sharebase,a2
0002FDEC <AmiBlitz3_wizzard.ab2@21305>    MOVEQ #$f+4,d7
0002FDF0 <AmiBlitz3_wizzard.ab2@21306>    BSR.w findlab                                         ;find var
0002FDF4 <AmiBlitz3_wizzard.ab2@21307>    BEQ.b dupsherr
0002FDF8 <AmiBlitz3_wizzard.ab2@21308>    BSR addlabel
0002FDFC <AmiBlitz3_wizzard.ab2@21309>    CMP.b #".",d0
0002FE00 <AmiBlitz3_wizzard.ab2@21310>    BNE JUMP_vardeclareerr
0002FE02 <AmiBlitz3_wizzard.ab2@21311>    MOVE.l a2,a3
0002FE08 <AmiBlitz3_wizzard.ab2@21312>    JSR JL_0_8EB8b
0002FE0A <AmiBlitz3_wizzard.ab2@21343>   MOVE.w (a7)+,d2
0002FE0E <AmiBlitz3_wizzard.ab2@21344>    CMP.b #",",d0
0002FE12 <AmiBlitz3_wizzard.ab2@21345>    BNE 'ret
0002FE18 <AmiBlitz3_wizzard.ab2@21346>    JSR get1bytemain
0002FE1C <AmiBlitz3_wizzard.ab2@21347> BRA 'again2
0002FE22 <AmiBlitz3_wizzard.ab2@21350>   MOVE.w (A7)+,proceduremode
0002FE24 <AmiBlitz3_wizzard.ab2@21351> RTS
0002FE2A <AmiBlitz3_wizzard.ab2@21358>    CMP.w #2,6(a2)
0002FE2E <AmiBlitz3_wizzard.ab2@21359>    BEQ 'do
0002FE34 <AmiBlitz3_wizzard.ab2@21360>    CMP.w #$102,6(a2)
0002FE38 <AmiBlitz3_wizzard.ab2@21361>    BEQ 'do
0002FE3E <AmiBlitz3_wizzard.ab2@21362> JMP errormsg_declaredtwice                                 ;was BRA 'errormsg_declaredtwice_
0002FE44 <AmiBlitz3_wizzard.ab2@21365>   LEA varbase,a0
0002FE46 <AmiBlitz3_wizzard.ab2@21368>   MOVE.l (A0),D0                                           ;find label
0002FE4A <AmiBlitz3_wizzard.ab2@21369>    BEQ.b 'z1
0002FE4C <AmiBlitz3_wizzard.ab2@21370>    CMP.l d0,a2
0002FE50 <AmiBlitz3_wizzard.ab2@21371>    BEQ 'z1
0002FE52 <AmiBlitz3_wizzard.ab2@21372>    MOVE.l d0,a0
0002FE56 <AmiBlitz3_wizzard.ab2@21373> BRA 'm1
0002FE58 <AmiBlitz3_wizzard.ab2@21376>   MOVE.l (a2),d1
0002FE5A <AmiBlitz3_wizzard.ab2@21377>     MOVE.l d1,(a0)
0002FE5C <AmiBlitz3_wizzard.ab2@21378>     CLR.l (a2)
0002FE62 <AmiBlitz3_wizzard.ab2@21379>     LEA sharebase,a0
0002FE64 <AmiBlitz3_wizzard.ab2@21380>     MOVE.l (a0),(a2)
0002FE66 <AmiBlitz3_wizzard.ab2@21381>     MOVE.l a2,(a0)
0002FE6C <AmiBlitz3_wizzard.ab2@21382>     JSR get1bytemain
0002FE72 <AmiBlitz3_wizzard.ab2@21383>     JSR get1bytemain
0002FE76 <AmiBlitz3_wizzard.ab2@21384> BRA 'domore
0002FE7E <AmiBlitz3_wizzard.ab2@21387>   MOVE.b #1,nowdeclare
0002FE80 <AmiBlitz3_wizzard.ab2@21388>   MOVE.w D1,-(A7)
0002FE86 <AmiBlitz3_wizzard.ab2@21389>   CLR.w proceduremode
0002FE8A <AmiBlitz3_wizzard.ab2@21392>    BSR.w getparameter
0002FE8C <AmiBlitz3_wizzard.ab2@21393>   MOVE.w D2,-(A7)
0002FE92 <AmiBlitz3_wizzard.ab2@21394>   LEA firstglob,A2
0002FE96 <AmiBlitz3_wizzard.ab2@21395>    BSR.w findvariable2
0002FE9A <AmiBlitz3_wizzard.ab2@21396>    BNE.b JL_0_CA06
0002FEA0 <AmiBlitz3_wizzard.ab2@21399>   MOVE.b flagmask+1,D1
0002FEA4 <AmiBlitz3_wizzard.ab2@21400>   MOVE.b $7(A2),D3
0002FEA6 <AmiBlitz3_wizzard.ab2@21401>   EOR.b D3,D1
0002FEAA <AmiBlitz3_wizzard.ab2@21402>    BEQ.w dupsherr
0002FEAE <AmiBlitz3_wizzard.ab2@21403>    BSR.w findlab
0002FEB2 <AmiBlitz3_wizzard.ab2@21404>    BEQ.b JL_0_C9F0
0002FEB6 <AmiBlitz3_wizzard.ab2@21407>    BSR.w addlabel
0002FEB8 <AmiBlitz3_wizzard.ab2@21408>   MOVE.w (A7)+,D2
0002FEBA <AmiBlitz3_wizzard.ab2@21409>   MOVE.l A2,-(A7)
0002FEBE <AmiBlitz3_wizzard.ab2@21410>    BSR.w JL_0_8E3C
0002FEC0 <AmiBlitz3_wizzard.ab2@21411>   MOVEA.l (A7)+,A2
0002FEC2 <AmiBlitz3_wizzard.ab2@21412>   MOVEQ.l #$04,D1
0002FEC4 <AmiBlitz3_wizzard.ab2@21413>   ADDQ.w #4,A2
0002FEC6 <AmiBlitz3_wizzard.ab2@21414>   ADDQ.w #4,A3
0002FEC8 <AmiBlitz3_wizzard.ab2@21417>     MOVE.w (A3)+,(A2)+
0002FECC <AmiBlitz3_wizzard.ab2@21418>   DBF D1,JL_0_CA1A
0002FED4 <AmiBlitz3_wizzard.ab2@21420>   BTST #$1,flagmask+1
0002FED8 <AmiBlitz3_wizzard.ab2@21421>    BEQ.w JL_0_CA3C
0002FEDE <AmiBlitz3_wizzard.ab2@21422>    JSR get1bytemain
0002FEE2 <AmiBlitz3_wizzard.ab2@21423>   CMP.w #$29,D0
0002FEE6 <AmiBlitz3_wizzard.ab2@21424>    BNE.w syntaxerrc
0002FEEC <AmiBlitz3_wizzard.ab2@21425>    JSR get1bytemain
0002FEF0 <AmiBlitz3_wizzard.ab2@21428>    CMP.w #$2C,D0
0002FEF4 <AmiBlitz3_wizzard.ab2@21429>    BNE.w JL_0_CA4C
0002FEFA <AmiBlitz3_wizzard.ab2@21430>    JSR get1bytemain
0002FEFE <AmiBlitz3_wizzard.ab2@21431> BRA.w JL_0_C9DE
0002FF04 <AmiBlitz3_wizzard.ab2@21434>   MOVE.w (A7)+,proceduremode
0002FF06 <AmiBlitz3_wizzard.ab2@21435> RTS
0002FF0C <AmiBlitz3_wizzard.ab2@21437> syntaxerrc JMP syntaxerr
0002FF10 <AmiBlitz3_wizzard.ab2@21440>    BSR.w JL_0_C05C
0002FF16 <AmiBlitz3_wizzard.ab2@21441>    JSR check_incdir                                        ; ergebnis in d2
0002FF1C <AmiBlitz3_wizzard.ab2@21443>    LEA ptr_parameterstore,a1
0002FF1E <AmiBlitz3_wizzard.ab2@21444>    MOVE.l d2,-(a7)
0002FF24 <AmiBlitz3_wizzard.ab2@21445>    LEA includetemp,a0                                      ; filename in includetemp packen
0002FF26 <AmiBlitz3_wizzard.ab2@21448>      MOVE.b (a1)+,(a0)+
0002FF2A <AmiBlitz3_wizzard.ab2@21449>    BNE 'l4
0002FF30 <AmiBlitz3_wizzard.ab2@21451>    LEA ptr_parameterstore,a1
0002FF32 <AmiBlitz3_wizzard.ab2@21452>    MOVE.l a1,a0
0002FF34 <AmiBlitz3_wizzard.ab2@21455>     TST.b (a0)+
0002FF38 <AmiBlitz3_wizzard.ab2@21456>    BNE 'l1
0002FF3A <AmiBlitz3_wizzard.ab2@21459>      MOVE.b -(a0),d0
0002FF3E <AmiBlitz3_wizzard.ab2@21460>      CMP.b #":",d0
0002FF42 <AmiBlitz3_wizzard.ab2@21461>       BEQ 'out
0002FF46 <AmiBlitz3_wizzard.ab2@21462>      CMP.b #"/",d0
0002FF4A <AmiBlitz3_wizzard.ab2@21463>       BEQ 'out
0002FF4C <AmiBlitz3_wizzard.ab2@21464>      CMP.l a1,a0
0002FF50 <AmiBlitz3_wizzard.ab2@21465>       BEQ 'out2
0002FF54 <AmiBlitz3_wizzard.ab2@21466> BRA 'l2
0002FF56 <AmiBlitz3_wizzard.ab2@21469>    ADDQ.l #1,a0                                            ; dateinamen vom pfad extrahiert
0002FF58 <AmiBlitz3_wizzard.ab2@21472>    MOVEQ.l #-$01,D2
0002FF5A <AmiBlitz3_wizzard.ab2@21475>      ADDQ.w #1,D2
0002FF5C <AmiBlitz3_wizzard.ab2@21476>      MOVE.b (a0)+,(a1)+
0002FF60 <AmiBlitz3_wizzard.ab2@21477>    BNE 'l3
0002FF62 <AmiBlitz3_wizzard.ab2@21478>    CLR.b (a1)+
0002FF68 <AmiBlitz3_wizzard.ab2@21480>    LEA ptr_parameterstore,a1
0002FF6C <AmiBlitz3_wizzard.ab2@21481>    BSR.w findxinc                                         ;find include
0002FF70 <AmiBlitz3_wizzard.ab2@21482>     BEQ.w 'outb
0002FF72 <AmiBlitz3_wizzard.ab2@21484>    MOVE.w D2,-(A7)
0002FF76 <AmiBlitz3_wizzard.ab2@21485>    BSR.w addlabel
0002FF78 <AmiBlitz3_wizzard.ab2@21486>    MOVE.w (A7)+,D2
0002FF7E <AmiBlitz3_wizzard.ab2@21488>    LEA ptr_parameterstore,a1
0002FF84 <AmiBlitz3_wizzard.ab2@21489>    LEA includetemp,a0                                      ; namen in includetemp schreiben
0002FF86 <AmiBlitz3_wizzard.ab2@21492>     MOVE.b (a0)+,(a1)+
0002FF8A <AmiBlitz3_wizzard.ab2@21493>    BNE 'l4b
0002FF8C <AmiBlitz3_wizzard.ab2@21495>    MOVE.l (a7)+,d2
0002FF92 <AmiBlitz3_wizzard.ab2@21496>    LEA ptr_parameterstore,a1
0002FF96 <AmiBlitz3_wizzard.ab2@21497> BRA.w JL_0_CB18
0002FF9C <AmiBlitz3_wizzard.ab2@21500>    LEA ptr_parameterstore,a1
0002FFA2 <AmiBlitz3_wizzard.ab2@21501>    LEA includetemp,a0
0002FFA4 <AmiBlitz3_wizzard.ab2@21504>     MOVE.b (a0)+,(a1)+
0002FFA8 <AmiBlitz3_wizzard.ab2@21505>    BNE 'l4b2
0002FFAA <AmiBlitz3_wizzard.ab2@21507>    MOVE.l (a7)+,d2
0002FFB0 <AmiBlitz3_wizzard.ab2@21508>    LEA ptr_parameterstore,a1
0002FFB2 <AmiBlitz3_wizzard.ab2@21511> RTS
0002FFB6 <AmiBlitz3_wizzard.ab2@21515>   BSR.w JL_0_C05C                                              ; test and get the parameter (includestring)
0002FFBC <AmiBlitz3_wizzard.ab2@21517>   JSR check_IncBinDir                                          ; to fix the path problem in CLIMode  tomsmart1
0002FFC2 <AmiBlitz3_wizzard.ab2@21519>   MOVEA.l _dosbase,A6
0002FFC4 <AmiBlitz3_wizzard.ab2@21520>   MOVE.l D0,D7                                                 ; store Lockpointer
0002FFC8 <AmiBlitz3_wizzard.ab2@21521>    BEQ.w error_cant_open_include                               ; no pointer => errormessage
0002FFCA <AmiBlitz3_wizzard.ab2@21522>   MOVE.l D7,D1                                                 ; begin get the size of the file to include
0002FFD0 <AmiBlitz3_wizzard.ab2@21523>   MOVE.l ptr_macrobuffer_begin,D2
0002FFD4 <AmiBlitz3_wizzard.ab2@21524>    JSR _Examine(A6)
0002FFDA <AmiBlitz3_wizzard.ab2@21525>   MOVEA.l ptr_macrobuffer_begin,A0
0002FFDE <AmiBlitz3_wizzard.ab2@21526>   MOVE.l $4(A0),D0
0002FFE2 <AmiBlitz3_wizzard.ab2@21527>    BPL.w error_cant_open_include                               ; something went wrong => errormessage
0002FFE6 <AmiBlitz3_wizzard.ab2@21528>   MOVE.l $7C(A0),D3                                            ; store the size of the file to include
0002FFE8 <AmiBlitz3_wizzard.ab2@21529>   MOVE.l D7,D1                                                 ; begin unlock the file
0002FFEC <AmiBlitz3_wizzard.ab2@21530>    JSR _UnLock(A6)
0002FFF2 <AmiBlitz3_wizzard.ab2@21532>   MOVE.l #ptr_parameterstore,D1                                ; begin Open and Load the file
0002FFF8 <AmiBlitz3_wizzard.ab2@21533>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2                       
0002FFFC <AmiBlitz3_wizzard.ab2@21534>    JSR _Open(A6)
0002FFFE <AmiBlitz3_wizzard.ab2@21535>   MOVE.l D0,D7
00030002 <AmiBlitz3_wizzard.ab2@21536>    BEQ.w error_cant_open_include
00030008 <AmiBlitz3_wizzard.ab2@21537>   MOVE.l destpointer,D0
0003000A <AmiBlitz3_wizzard.ab2@21538>   ADD.l D3,D0
00030010 <AmiBlitz3_wizzard.ab2@21539>   CMP.l destbufferend,D0
00030014 <AmiBlitz3_wizzard.ab2@21540>    BHI.w JL_0_CAF6
0003001A <AmiBlitz3_wizzard.ab2@21541>   MOVE.l destpointer,D2
0003001C <AmiBlitz3_wizzard.ab2@21542>   MOVE.l D7,D1
00030020 <AmiBlitz3_wizzard.ab2@21543>    JSR _Read(A6)
00030026 <AmiBlitz3_wizzard.ab2@21544>   CMP.l #$FFFFFFFF,D0
0003002A <AmiBlitz3_wizzard.ab2@21545>    BEQ.w error_reading_file
00030030 <AmiBlitz3_wizzard.ab2@21546>   ADD.l D0,destpointer
00030034 <AmiBlitz3_wizzard.ab2@21547> BRA.w JL_0_CB04
0003003C <AmiBlitz3_wizzard.ab2@21550>   MOVE.w #$FFFF,dontwrite
00030042 <AmiBlitz3_wizzard.ab2@21551>   MOVE.l D0,destpointer
00030044 <AmiBlitz3_wizzard.ab2@21554>   MOVE.l D7,D1
00030048 <AmiBlitz3_wizzard.ab2@21555> JMP _Close(A6)
0003004E <AmiBlitz3_wizzard.ab2@21559> JMP illdirerr
00030054 <AmiBlitz3_wizzard.ab2@21562>   TST.w dirmode                                            ;include  open
00030058 <AmiBlitz3_wizzard.ab2@21563>    BNE.w JUMP_illdirerr
0003005C <AmiBlitz3_wizzard.ab2@21564>   BSR.w JL_0_C05C
00030062 <AmiBlitz3_wizzard.ab2@21565>   JSR check_incdir
00030066 <AmiBlitz3_wizzard.ab2@21568>   BSR.w findconstant
0003006A <AmiBlitz3_wizzard.ab2@21569>    BEQ.w alincerr
00030070 <AmiBlitz3_wizzard.ab2@21571>   LEA constantbase,A2
00030074 <AmiBlitz3_wizzard.ab2@21572>   BSR.w addhere2
00030078 <AmiBlitz3_wizzard.ab2@21573>   CLR.w $C(A2)
0003007C <AmiBlitz3_wizzard.ab2@21574>   CLR.l $4(A2)
00030082 <AmiBlitz3_wizzard.ab2@21576>   MOVE.l #ptr_parameterstore,D1
00030084 <AmiBlitz3_wizzard.ab2@21577>   MOVE.l d1,a0
0003008A <AmiBlitz3_wizzard.ab2@21578>   LEA includetemp2,a1
0003008C <AmiBlitz3_wizzard.ab2@21581>     MOVE.b (a0)+,(a1)+
00030090 <AmiBlitz3_wizzard.ab2@21582>   BNE 'l1
00030096 <AmiBlitz3_wizzard.ab2@21583>   JSR save_includename
000300A0 <AmiBlitz3_wizzard.ab2@21584>   MOVE.l #0,include_process
000300A8 <AmiBlitz3_wizzard.ab2@21586>   CMP.l #$62623200,-4(a0)                                  ;.bb2
000300AC <AmiBlitz3_wizzard.ab2@21587>   BEQ 'ok
000300B4 <AmiBlitz3_wizzard.ab2@21588>   CMP.l #$61623300,-4(a0)                                  ;.ab3
000300B8 <AmiBlitz3_wizzard.ab2@21589>   BEQ 'ok_tokenize
000300C0 <AmiBlitz3_wizzard.ab2@21590>   CMP.l #$61623200,-4(a0)                                  ;.ab2
000300C4 <AmiBlitz3_wizzard.ab2@21591>   BEQ 'ok_tokenize
000300CC <AmiBlitz3_wizzard.ab2@21592>   CMP.l #$2e626200,-4(a0)                                  ;.bb files
000300D0 <AmiBlitz3_wizzard.ab2@21593>   BEQ 'ok
000300D6 <AmiBlitz3_wizzard.ab2@21594> JMP errortoken                                             ;can only include
000300E0 <AmiBlitz3_wizzard.ab2@21597>    MOVE.l #-1,include_process                              ; must tokenize the include
000300E6 <AmiBlitz3_wizzard.ab2@21600>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
000300EC <AmiBlitz3_wizzard.ab2@21601>   MOVEA.l _dosbase,A6
000300F0 <AmiBlitz3_wizzard.ab2@21602>   JSR _Open(A6)
000300F4 <AmiBlitz3_wizzard.ab2@21603>   MOVE.l D0,$8(A2)
000300F8 <AmiBlitz3_wizzard.ab2@21604>   BEQ.w error_cant_open_include
000300FE <AmiBlitz3_wizzard.ab2@21605>   CLR.l includeline
00030102 <AmiBlitz3_wizzard.ab2@21606>   MOVE.l 8(a2),d1
00030104 <AmiBlitz3_wizzard.ab2@21607>   MOVE.l d3,-(a7)
00030106 <AmiBlitz3_wizzard.ab2@21608>   MOVEQ #0,d2
00030108 <AmiBlitz3_wizzard.ab2@21609>   MOVEQ #1,d3
0003010C <AmiBlitz3_wizzard.ab2@21610>   JSR _Seek(a6)                                            ; -66
00030110 <AmiBlitz3_wizzard.ab2@21611>   MOVE.l 8(a2),d1
00030112 <AmiBlitz3_wizzard.ab2@21612>   MOVEQ #0,d2
00030114 <AmiBlitz3_wizzard.ab2@21613>   MOVEQ #-1,d3
00030118 <AmiBlitz3_wizzard.ab2@21614>   JSR _Seek(a6)                                            ; -66
0003011A <AmiBlitz3_wizzard.ab2@21615>   MOVE.l (a7)+,d3
0003011C <AmiBlitz3_wizzard.ab2@21616>   ADDQ.l #4,d0
00030122 <AmiBlitz3_wizzard.ab2@21618>   MOVE.l #$10000,D1
00030128 <AmiBlitz3_wizzard.ab2@21619>   MOVEA.l _execbase,A6
0003012C <AmiBlitz3_wizzard.ab2@21622>   JSR _AllocVec(a6)
00030130 <AmiBlitz3_wizzard.ab2@21624>   MOVE.l D0,$4(A2)
00030134 <AmiBlitz3_wizzard.ab2@21625>   MOVE.l D0,$E(A2)
00030136 <AmiBlitz3_wizzard.ab2@21626>   MOVEA.l D0,A5
0003013C <AmiBlitz3_wizzard.ab2@21633>   ADDQ.w #1,ininclude                                      ;enter include
00030142 <AmiBlitz3_wizzard.ab2@21636>   LEA _include,a0
00030146 <AmiBlitz3_wizzard.ab2@21637>   MOVEM.l a0-a6/d0-d7,-(a7)
0003014C <AmiBlitz3_wizzard.ab2@21638>   LEA ptr_parameterstore,a1
0003014E <AmiBlitz3_wizzard.ab2@21641>     MOVE.b (a0)+,(a1)+
00030152 <AmiBlitz3_wizzard.ab2@21642>   BNE 'l1b
00030154 <AmiBlitz3_wizzard.ab2@21644>   MOVEQ #9,d2
0003015A <AmiBlitz3_wizzard.ab2@21645>   JSR findlabel2
0003015E <AmiBlitz3_wizzard.ab2@21646>   BNE 'd
00030166 <AmiBlitz3_wizzard.ab2@21647>   MOVE.l #1,8(a2)
0003016A <AmiBlitz3_wizzard.ab2@21648>   MOVEM.l (a7)+,a0-a6/d0-d7
0003016E <AmiBlitz3_wizzard.ab2@21649> BRA 'd2
00030174 <AmiBlitz3_wizzard.ab2@21652>   JSR addlabelhash
0003017C <AmiBlitz3_wizzard.ab2@21653>   MOVE.l #$1,$4(A2)
00030184 <AmiBlitz3_wizzard.ab2@21654>   MOVE.l #1,8(a2)
00030188 <AmiBlitz3_wizzard.ab2@21655>   MOVEM.l (a7)+,a0-a6/d0-d7
0003018E <AmiBlitz3_wizzard.ab2@21658>   LEA inctab,a0
00030190 <AmiBlitz3_wizzard.ab2@21659>   MOVEQ #0,d1
00030196 <AmiBlitz3_wizzard.ab2@21660>   MOVE.w ininclude,d1
0003019A <AmiBlitz3_wizzard.ab2@21661>   CLR.l $0(a0,d1*4)
000301A0 <AmiBlitz3_wizzard.ab2@21662>   MOVEA.l passstack,A7
000301A6 <AmiBlitz3_wizzard.ab2@21663> JMP AJL_0_413A
000301AC <AmiBlitz3_wizzard.ab2@21665> JUMP_dupmacerr JMP dupmacerr
000301AE <AmiBlitz3_wizzard.ab2@21667> coolnest:   Ds.w 1
000301B2 <AmiBlitz3_wizzard.ab2@21668> macline:    Ds.l 1
000301BC <AmiBlitz3_wizzard.ab2@21672>   MOVE.l linenumat,macline
000301C0 <AmiBlitz3_wizzard.ab2@21673>    BSR.w makename2
000301C4 <AmiBlitz3_wizzard.ab2@21674>    BEQ.w JUMP_syntaxerr
000301CA <AmiBlitz3_wizzard.ab2@21676>    CLR.b thenmode
000301D4 <AmiBlitz3_wizzard.ab2@21678>    MOVE.w oldqflag,instringon
000301DA <AmiBlitz3_wizzard.ab2@21679>   MOVEA.l lastsourcepos,A5
000301DE <AmiBlitz3_wizzard.ab2@21680>    BSR.w findmac
000301E2 <AmiBlitz3_wizzard.ab2@21681>    BEQ.w JUMP_dupmacerr
000301E6 <AmiBlitz3_wizzard.ab2@21682>    BSR.w addlabel
000301EA <AmiBlitz3_wizzard.ab2@21683>   CLR.w $A(A2)
000301F0 <AmiBlitz3_wizzard.ab2@21684>   MOVEA.l ptr_macrobuffer_begin,A0
000301F2 <AmiBlitz3_wizzard.ab2@21685>   MOVEQ.l #$00,D2
000301F8 <AmiBlitz3_wizzard.ab2@21686>   CLR.w coolnest
000301FA <AmiBlitz3_wizzard.ab2@21689>   MOVE.b (a5),d0
000301FE <AmiBlitz3_wizzard.ab2@21690>      BEQ 'l3
00030202 <AmiBlitz3_wizzard.ab2@21691>      CMP.b #" ",d0
00030206 <AmiBlitz3_wizzard.ab2@21692>       BNE 'l2                                              ;space macro
00030208 <AmiBlitz3_wizzard.ab2@21693>       ADDQ.l #1,a5
0003020C <AmiBlitz3_wizzard.ab2@21694> BRA 'l1
00030210 <AmiBlitz3_wizzard.ab2@21697>    CMP.b #";",d0
00030214 <AmiBlitz3_wizzard.ab2@21698>       BNE 'l3
00030216 <AmiBlitz3_wizzard.ab2@21701>    MOVE.b (a5),d0
0003021A <AmiBlitz3_wizzard.ab2@21702>       BEQ 'l5
0003021E <AmiBlitz3_wizzard.ab2@21703>       BSR.w JL_0_CC98                                      ;add comment
00030220 <AmiBlitz3_wizzard.ab2@21704>       ADDQ.l #1,a5
00030224 <AmiBlitz3_wizzard.ab2@21705> BRA 'l4
00030228 <AmiBlitz3_wizzard.ab2@21708>    MOVE.b #":",d0
0003022C <AmiBlitz3_wizzard.ab2@21709>       BSR.w JL_0_CC98
00030230 <AmiBlitz3_wizzard.ab2@21710>       MOVE.b #"@",d0
00030234 <AmiBlitz3_wizzard.ab2@21711>       BSR.w JL_0_CC98
0003023C <AmiBlitz3_wizzard.ab2@21714>    MOVE.b #0,temp
00030244 <AmiBlitz3_wizzard.ab2@21715>       MOVE.b #0,thenmode
0003024A <AmiBlitz3_wizzard.ab2@21718>   JSR getcharb
0003024C <AmiBlitz3_wizzard.ab2@21719>   TST.w D0
00030250 <AmiBlitz3_wizzard.ab2@21720>    BNE.w JL_0_CBDE
00030254 <AmiBlitz3_wizzard.ab2@21721>   MOVEM.l D2/A0/A2,-(A7)
0003025A <AmiBlitz3_wizzard.ab2@21722>   CMP.w #"@@",-3(a5)
0003025E <AmiBlitz3_wizzard.ab2@21723>   BNE 'l2a
00030264 <AmiBlitz3_wizzard.ab2@21724>   JSR nextline
00030268 <AmiBlitz3_wizzard.ab2@21725>   BEQ.w JUMP_macenderr
0003026C <AmiBlitz3_wizzard.ab2@21726>   MOVEM.l (A7)+,D2/A0/A2
00030270 <AmiBlitz3_wizzard.ab2@21727> BRA.w JL_0_CBB6
00030276 <AmiBlitz3_wizzard.ab2@21730>    JSR nextline
0003027A <AmiBlitz3_wizzard.ab2@21731>    BEQ.w JUMP_macenderr
0003027E <AmiBlitz3_wizzard.ab2@21732>   MOVEM.l (A7)+,D2/A0/A2
00030280 <AmiBlitz3_wizzard.ab2@21733>   TST.w D2
00030284 <AmiBlitz3_wizzard.ab2@21734>    BEQ.w JL_0_CBB6
00030286 <AmiBlitz3_wizzard.ab2@21737>   MOVE.b (a5),d0
0003028A <AmiBlitz3_wizzard.ab2@21738>       CMP.b #" ",d0
0003028E <AmiBlitz3_wizzard.ab2@21739>       BNE 'l1
00030290 <AmiBlitz3_wizzard.ab2@21740>       ADDQ.w #1,a5
00030294 <AmiBlitz3_wizzard.ab2@21741> BRA 'l2
0003029A <AmiBlitz3_wizzard.ab2@21744>   TST.b thenmode
0003029E <AmiBlitz3_wizzard.ab2@21745>      BEQ 'l3
000302A0 <AmiBlitz3_wizzard.ab2@21746>      MOVEQ #":",d0
000302A4 <AmiBlitz3_wizzard.ab2@21747>      BSR.w JL_0_CC98
000302A8 <AmiBlitz3_wizzard.ab2@21748>      MOVE.w #-$7FFE,D0                                     ;write end if
000302AC <AmiBlitz3_wizzard.ab2@21749>      BSR macputw
000302B0 <AmiBlitz3_wizzard.ab2@21750>      MOVE.w #$800b,d0
000302B4 <AmiBlitz3_wizzard.ab2@21751>      BSR.w macputw
000302BA <AmiBlitz3_wizzard.ab2@21752>      CLR.b thenmode
000302BC <AmiBlitz3_wizzard.ab2@21755>    MOVEQ.l #$3A,D0
000302C4 <AmiBlitz3_wizzard.ab2@21756>      MOVE.b #1,temp
000302C8 <AmiBlitz3_wizzard.ab2@21758> BRA.w JL_0_CC2A
000302CC <AmiBlitz3_wizzard.ab2@21762>   BPL.w JL_0_CC2A
000302D0 <AmiBlitz3_wizzard.ab2@21763>   CMP.w #-$7FF3,D0                                         ;macro ?
000302D4 <AmiBlitz3_wizzard.ab2@21764>    BNE.w JL_0_CBF4
000302DA <AmiBlitz3_wizzard.ab2@21765>   ADDQ.w #1,coolnest
000302DE <AmiBlitz3_wizzard.ab2@21766> BRA.w JL_0_CC22
000302E4 <AmiBlitz3_wizzard.ab2@21768> JUMP_macnesterr JMP macnesterr
000302E8 <AmiBlitz3_wizzard.ab2@21771>   CMP.w #$80d7,d0                                          ;object ?
000302EC <AmiBlitz3_wizzard.ab2@21772>     BNE 'l1x
000302F2 <AmiBlitz3_wizzard.ab2@21773>     TST.b objectcount
000302F6 <AmiBlitz3_wizzard.ab2@21774>     BNE JUMP_macnesterr
000302FA <AmiBlitz3_wizzard.ab2@21777>   CMP.w #$8021,d0
000302FE <AmiBlitz3_wizzard.ab2@21778>     BNE 'nothen
00030306 <AmiBlitz3_wizzard.ab2@21779>     MOVE.b #1,thenmode
0003030C <AmiBlitz3_wizzard.ab2@21782>   TST.b thenmode
00030310 <AmiBlitz3_wizzard.ab2@21783>         BEQ 'l1
00030314 <AmiBlitz3_wizzard.ab2@21784>    CMP.w #$8002,d0                                         ;end if
00030318 <AmiBlitz3_wizzard.ab2@21785>    BNE 'l1
0003031C <AmiBlitz3_wizzard.ab2@21786>    MOVEM.l d0/a5,-(a7)
00030322 <AmiBlitz3_wizzard.ab2@21787>    JSR get1bytemain
00030324 <AmiBlitz3_wizzard.ab2@21788>    MOVE.w d0,d1
00030328 <AmiBlitz3_wizzard.ab2@21789>    MOVEM.l (a7)+,a5/d0
0003032C <AmiBlitz3_wizzard.ab2@21790>    CMP.w #$800b,d1
00030330 <AmiBlitz3_wizzard.ab2@21791>    BNE 'l1
00030336 <AmiBlitz3_wizzard.ab2@21792>    CLR.b thenmode
0003033A <AmiBlitz3_wizzard.ab2@21795>    CMP.w #-$7FFE,D0                                        ;end ?
0003033E <AmiBlitz3_wizzard.ab2@21796>    BNE.w JL_0_CC22
00030340 <AmiBlitz3_wizzard.ab2@21797>    MOVE.l a5,-(a7)
00030346 <AmiBlitz3_wizzard.ab2@21798>    JSR get1bytemain
00030348 <AmiBlitz3_wizzard.ab2@21799>    MOVE.l (a7)+,a5
0003034A <AmiBlitz3_wizzard.ab2@21800>    TST.w d0
0003034E <AmiBlitz3_wizzard.ab2@21801>    BEQ 'doend
00030352 <AmiBlitz3_wizzard.ab2@21802>    CMP.w #":",d0
00030356 <AmiBlitz3_wizzard.ab2@21803>    BEQ 'doend
0003035A <AmiBlitz3_wizzard.ab2@21804>    CMP.w #";",d0
0003035E <AmiBlitz3_wizzard.ab2@21805>    BEQ 'doend
00030360 <AmiBlitz3_wizzard.ab2@21806>    MOVE.l a5,-(a7)
00030366 <AmiBlitz3_wizzard.ab2@21807>    JSR get1bytemain
0003036A <AmiBlitz3_wizzard.ab2@21808>    MOVE.l -1(a5),d0
0003036C <AmiBlitz3_wizzard.ab2@21809>    MOVE.l (a7)+,a5
00030372 <AmiBlitz3_wizzard.ab2@21810>    CMP.l #"noa7",d0
00030376 <AmiBlitz3_wizzard.ab2@21811>    BEQ 'doend
0003037A <AmiBlitz3_wizzard.ab2@21812> BRA 'morechar
0003037E <AmiBlitz3_wizzard.ab2@21815>   MOVE.w #$8002,D0
00030382 <AmiBlitz3_wizzard.ab2@21816>    BSR.w macputw
00030386 <AmiBlitz3_wizzard.ab2@21817> BRA JL_0_CBB6
0003038C <AmiBlitz3_wizzard.ab2@21820>   JSR get1bytemain
00030390 <AmiBlitz3_wizzard.ab2@21821>    CMP.w #-$7FF3,D0                                        ;end macro
00030394 <AmiBlitz3_wizzard.ab2@21822>    BEQ.w 'lo1
00030398 <AmiBlitz3_wizzard.ab2@21823>   CMP.w #$80d7,d0                                          ;end object
0003039C <AmiBlitz3_wizzard.ab2@21824>   BNE JL_0_CC12
000303A2 <AmiBlitz3_wizzard.ab2@21825>   SUBQ.b #1,objectcount
000303A8 <AmiBlitz3_wizzard.ab2@21826>   TST.b developobject
000303AC <AmiBlitz3_wizzard.ab2@21827>   BEQ 'lo1
000303B0 <AmiBlitz3_wizzard.ab2@21828>   BSR skiprest
000303B2 <AmiBlitz3_wizzard.ab2@21829> RTS
000303B8 <AmiBlitz3_wizzard.ab2@21832>   SUBQ.w #1,coolnest
000303BC <AmiBlitz3_wizzard.ab2@21833>    BMI.w JL_0_CC32
000303BE <AmiBlitz3_wizzard.ab2@21836>   MOVE.w D0,-(A7)
000303C2 <AmiBlitz3_wizzard.ab2@21837>   MOVE.w #$8002,D0
000303C6 <AmiBlitz3_wizzard.ab2@21838>    BSR.w macputw
000303C8 <AmiBlitz3_wizzard.ab2@21839>   MOVE.w (A7)+,D0
000303CC <AmiBlitz3_wizzard.ab2@21840> BRA.w JL_0_CC22
000303D0 <AmiBlitz3_wizzard.ab2@21843>   BSR.w macputw
000303D4 <AmiBlitz3_wizzard.ab2@21844> BRA.w JL_0_CBB6
000303DA <AmiBlitz3_wizzard.ab2@21846> JUMP_macenderr JMP macenderr
000303E0 <AmiBlitz3_wizzard.ab2@21849>     CMP.w #"@@",-1(a5)                                     ;merge lines
000303E4 <AmiBlitz3_wizzard.ab2@21850>     BNE 'no
000303E8 <AmiBlitz3_wizzard.ab2@21851>      MOVEM.l D2/A0/A2,-(A7)
000303EE <AmiBlitz3_wizzard.ab2@21852>    JSR nextline
000303F2 <AmiBlitz3_wizzard.ab2@21853>    BEQ.w JUMP_macenderr
000303F6 <AmiBlitz3_wizzard.ab2@21854>   MOVEM.l (A7)+,D2/A0/A2
000303F8 <AmiBlitz3_wizzard.ab2@21855>     TST.w D2
000303FC <AmiBlitz3_wizzard.ab2@21856>    BEQ.w JL_0_CBB6
00030400 <AmiBlitz3_wizzard.ab2@21857> BRA JL_0_CBB6
00030404 <AmiBlitz3_wizzard.ab2@21861>   BSR.w JL_0_CC98
00030408 <AmiBlitz3_wizzard.ab2@21862> BRA.w JL_0_CBB6
0003040A <AmiBlitz3_wizzard.ab2@21865>   ADDQ.w #4,A7
0003040C <AmiBlitz3_wizzard.ab2@21866>   MOVE.l A0,D0
00030412 <AmiBlitz3_wizzard.ab2@21867>   SUB.l ptr_macrobuffer_begin,D0
00030416 <AmiBlitz3_wizzard.ab2@21870>    BEQ.w JL_0_CC5E
0003041A <AmiBlitz3_wizzard.ab2@21871>   CMPI.b #":",-(A0)
0003041E <AmiBlitz3_wizzard.ab2@21872>    BNE.w JL_0_CC5E
00030422 <AmiBlitz3_wizzard.ab2@21873>   CMP.w #$1,D0
00030426 <AmiBlitz3_wizzard.ab2@21874>    BEQ.w JL_0_CC58
0003042A <AmiBlitz3_wizzard.ab2@21875>   TST.b -$1(A0)
0003042E <AmiBlitz3_wizzard.ab2@21876>    BMI.w JL_0_CC5E
00030430 <AmiBlitz3_wizzard.ab2@21879>   SUBQ.w #1,D0
00030434 <AmiBlitz3_wizzard.ab2@21880> BRA.w JL_0_CC3C
00030438 <AmiBlitz3_wizzard.ab2@21883>   MOVE.w D0,$8(A2)
0003043C <AmiBlitz3_wizzard.ab2@21884>    BEQ.w JL_0_CC8E
0003043E <AmiBlitz3_wizzard.ab2@21885>   MOVEQ.l #$01,D1
00030444 <AmiBlitz3_wizzard.ab2@21886>   MOVEA.l _execbase,A6
0003044A <AmiBlitz3_wizzard.ab2@21887>   MOVE.l mempool,a0
0003044E <AmiBlitz3_wizzard.ab2@21888>   JSR _AllocPooled(a6)
00030450 <AmiBlitz3_wizzard.ab2@21890>   MOVEA.l D0,A0
00030454 <AmiBlitz3_wizzard.ab2@21891>   MOVE.l A0,$4(A2)
00030458 <AmiBlitz3_wizzard.ab2@21892>   MOVE.w $8(A2),D1
0003045C <AmiBlitz3_wizzard.ab2@21893>    BEQ.w JL_0_CC8E
0003045E <AmiBlitz3_wizzard.ab2@21894>   SUBQ.w #1,D1
00030464 <AmiBlitz3_wizzard.ab2@21895>   MOVEA.l ptr_macrobuffer_begin,A1
00030466 <AmiBlitz3_wizzard.ab2@21898>     MOVE.b (A1)+,(A0)+
0003046A <AmiBlitz3_wizzard.ab2@21899>   DBF D1,JL_0_CC88
00030470 <AmiBlitz3_wizzard.ab2@21902> JMP get1bytemain
00030472 <AmiBlitz3_wizzard.ab2@21906>   MOVE.w D0,D1
00030474 <AmiBlitz3_wizzard.ab2@21907>   LSR.w #8,D1
00030476 <AmiBlitz3_wizzard.ab2@21908>   MOVE.b D1,(A0)+
00030478 <AmiBlitz3_wizzard.ab2@21911>   MOVEQ.l #-$01,D2
0003047A <AmiBlitz3_wizzard.ab2@21912>   MOVE.b D0,(A0)+
00030480 <AmiBlitz3_wizzard.ab2@21913>   CMPA.l ptr_macrobuffer_end,A0
00030484 <AmiBlitz3_wizzard.ab2@21914>    BCC.w macbigerr2
00030486 <AmiBlitz3_wizzard.ab2@21915> RTS
0003048C <AmiBlitz3_wizzard.ab2@21916> macbigerr2 JMP macbigerr
0003048E <AmiBlitz3_wizzard.ab2@21919>   MOVE.l d0,-(a7)
00030490 <AmiBlitz3_wizzard.ab2@21920>   MOVEQ #0,d0
00030496 <AmiBlitz3_wizzard.ab2@21921>   CLR.b skiptoggle
00030498 <AmiBlitz3_wizzard.ab2@21924>     MOVE.b (a5),d0
0003049C <AmiBlitz3_wizzard.ab2@21925>     BEQ 'l3
000304A0 <AmiBlitz3_wizzard.ab2@21926>     CMP.b #";",d0
000304A4 <AmiBlitz3_wizzard.ab2@21927>     BNE 'l2
000304AC <AmiBlitz3_wizzard.ab2@21928>     MOVE.b #1,skiptoggle
000304B2 <AmiBlitz3_wizzard.ab2@21931>     TST.b skiptoggle
000304B6 <AmiBlitz3_wizzard.ab2@21932>     BNE 'l4
000304BA <AmiBlitz3_wizzard.ab2@21933>     CMP.b #":",d0
000304BE <AmiBlitz3_wizzard.ab2@21934>     BEQ 'l3
000304C0 <AmiBlitz3_wizzard.ab2@21937>     ADDQ #1,a5
000304C4 <AmiBlitz3_wizzard.ab2@21938> BRA 'loop
000304CA <AmiBlitz3_wizzard.ab2@21941>   MOVE.w d0,lastchar
000304CC <AmiBlitz3_wizzard.ab2@21942>   MOVE.l (a7)+,d0
000304CE <AmiBlitz3_wizzard.ab2@21943> RTS
000304D2 <AmiBlitz3_wizzard.ab2@21947>   BSR.w ifchar
000304D6 <AmiBlitz3_wizzard.ab2@21948>    BNE.w JUMP_syntaxerr
000304D8 <AmiBlitz3_wizzard.ab2@21949>   MOVE.w D0,D1
000304DE <AmiBlitz3_wizzard.ab2@21950>   JSR get1bytemain
000304E2 <AmiBlitz3_wizzard.ab2@21951>   BSR.w ifchar
000304E6 <AmiBlitz3_wizzard.ab2@21952>    BNE.w JL_0_CCDA
000304E8 <AmiBlitz3_wizzard.ab2@21953>   ADDQ.w #1,D0
000304EA <AmiBlitz3_wizzard.ab2@21954>   MOVE.w D0,D2
000304EC <AmiBlitz3_wizzard.ab2@21955>   ADD.w D0,D0
000304EE <AmiBlitz3_wizzard.ab2@21956>   ADD.w D2,D0
000304F0 <AmiBlitz3_wizzard.ab2@21957>   ADD.w D0,D1
000304F2 <AmiBlitz3_wizzard.ab2@21958>   MOVE.w D1,D0
000304F6 <AmiBlitz3_wizzard.ab2@21959>   ANDI.w #$3,D0
000304FA <AmiBlitz3_wizzard.ab2@21960>   CMP.w #$3,D0
000304FE <AmiBlitz3_wizzard.ab2@21961>    BEQ.w JUMP_syntaxerr
00030504 <AmiBlitz3_wizzard.ab2@21963>   JSR get1bytemain
00030506 <AmiBlitz3_wizzard.ab2@21966> RTS
00030508 <AmiBlitz3_wizzard.ab2@21972> thetst1:  TST.b D0
0003050A <AmiBlitz3_wizzard.ab2@21973> thetst2:  TST.w D0
0003050C <AmiBlitz3_wizzard.ab2@21974> thetst3:  TST.l D0
0003050E <AmiBlitz3_wizzard.ab2@21975> thetst4:  TST.l (A7)+                                      ;Any Length?
00030512 <AmiBlitz3_wizzard.ab2@21976> thetst5:  JSR _Reschedule(A6)
00030516 <AmiBlitz3_wizzard.ab2@21978> posbr:    BEQ.w posbr
0003051A <AmiBlitz3_wizzard.ab2@21979> negbr:    BNE.w negbr
0003051C <AmiBlitz3_wizzard.ab2@21983>   MOVEQ.l #-$01,D2
00030520 <AmiBlitz3_wizzard.ab2@21984> BRA.w JL_0_D04C
00030526 <AmiBlitz3_wizzard.ab2@21988>   CLR.l fp0addr
00030528 <AmiBlitz3_wizzard.ab2@21989>   MOVEQ.l #$01,D1                                          ;while flag
0003052A <AmiBlitz3_wizzard.ab2@21990>   MOVEQ.l #$00,D2                                          ;negate flag
0003052E <AmiBlitz3_wizzard.ab2@21991> BRA.w JL_0_D04E
00030534 <AmiBlitz3_wizzard.ab2@21995>   LEA firstrep,A2
00030536 <AmiBlitz3_wizzard.ab2@21996>   MOVEQ.l #$08,D2
0003053A <AmiBlitz3_wizzard.ab2@21997> BRA.w freeslist
0003053E <AmiBlitz3_wizzard.ab2@22001>   LEA firstsel(PC),A2
00030540 <AmiBlitz3_wizzard.ab2@22002>   MOVEQ.l #$0E,D2
00030542 <AmiBlitz3_wizzard.ab2@22007>   MOVEQ.l #$00,D3
00030544 <AmiBlitz3_wizzard.ab2@22015>   MOVE.l (A2),D0
00030546 <AmiBlitz3_wizzard.ab2@22016>   CLR.l (A2)
00030548 <AmiBlitz3_wizzard.ab2@22017>   MOVEA.l D0,A2
0003054E <AmiBlitz3_wizzard.ab2@22018>   MOVEA.l _execbase,A6
00030552 <AmiBlitz3_wizzard.ab2@22021>     CMPA.w #$0,A2
00030556 <AmiBlitz3_wizzard.ab2@22022>      BEQ.w freelist__done
00030558 <AmiBlitz3_wizzard.ab2@22023>     TST.w D3
0003055C <AmiBlitz3_wizzard.ab2@22024>      BEQ.w freelist__skip
00030560 <AmiBlitz3_wizzard.ab2@22025>     MOVEM.l D2-D3/A2,-(A7)
00030562 <AmiBlitz3_wizzard.ab2@22026>     ADDA.w D3,A2
00030564 <AmiBlitz3_wizzard.ab2@22027>     MOVE.l D4,D2
00030568 <AmiBlitz3_wizzard.ab2@22028>     BSR.w freeslist
0003056C <AmiBlitz3_wizzard.ab2@22029>     MOVEM.l (A7)+,D2-D3/A2
0003056E <AmiBlitz3_wizzard.ab2@22032>     MOVEA.l A2,A1
00030570 <AmiBlitz3_wizzard.ab2@22033>     MOVE.l D2,D0
00030572 <AmiBlitz3_wizzard.ab2@22034>     MOVEA.l (A2),A2
00030578 <AmiBlitz3_wizzard.ab2@22035>     MOVE.l mempool,a0
0003057C <AmiBlitz3_wizzard.ab2@22036>     JSR _FreePooled(A6)
00030580 <AmiBlitz3_wizzard.ab2@22037> BRA.w freelist__loop
00030582 <AmiBlitz3_wizzard.ab2@22040> RTS
00030588 <AmiBlitz3_wizzard.ab2@22043> JMP eselerr
0003058C <AmiBlitz3_wizzard.ab2@22046> firstsel:  Ds.l 1
00030590 <AmiBlitz3_wizzard.ab2@22049> selpushb:   Dc.b $02,$40,$00,$FF                           ;ANDI.W  #$00FF,D0
00030592 <AmiBlitz3_wizzard.ab2@22052> selpushw:   MOVE.w D0,-(A7)
00030594 <AmiBlitz3_wizzard.ab2@22054> selpushl:   MOVE.l D0,-(A7)
00030598 <AmiBlitz3_wizzard.ab2@22056> selpushs:   LEA $4(A7),A2                                  ;(a7)=len of string!
0003059C <AmiBlitz3_wizzard.ab2@22059> selcomb:    ANDI.w #$FF,D0
0003059E <AmiBlitz3_wizzard.ab2@22060> selcomw:    CMP.w (A7),D0
000305A0 <AmiBlitz3_wizzard.ab2@22062> selcoml:    CMP.l (A7),D0
000305A4 <AmiBlitz3_wizzard.ab2@22064> selbne:     BNE.w selbne
000305A6 <AmiBlitz3_wizzard.ab2@22066> endsel:     ADDQ.w #8,A7
000305AA <AmiBlitz3_wizzard.ab2@22072>   MOVE.l firstsel(PC),D0                                  
000305AE <AmiBlitz3_wizzard.ab2@22073>    BEQ.w JUMP_eselerr
000305B0 <AmiBlitz3_wizzard.ab2@22074>   MOVEA.l D0,A2
000305B4 <AmiBlitz3_wizzard.ab2@22075>    BSR.w JL_0_CDFC
000305BA <AmiBlitz3_wizzard.ab2@22078>   MOVEA.l _execbase,A6
000305BE <AmiBlitz3_wizzard.ab2@22081>   MOVE.l $4(A2),D0
000305C2 <AmiBlitz3_wizzard.ab2@22082>    BEQ.w doendsel__done
000305C4 <AmiBlitz3_wizzard.ab2@22083>   MOVEA.l D0,A3
000305C8 <AmiBlitz3_wizzard.ab2@22084>   MOVEA.l $4(A3),A0
000305CE <AmiBlitz3_wizzard.ab2@22085>   MOVE.l destpointer,D1
000305D0 <AmiBlitz3_wizzard.ab2@22086>   SUB.l A0,D1
000305D6 <AmiBlitz3_wizzard.ab2@22088>     TST.b fast
000305DA <AmiBlitz3_wizzard.ab2@22089>     BEQ doendsel__loop_l1
000305E0 <AmiBlitz3_wizzard.ab2@22090>     MOVE.w dontwrite,D0
000305E4 <AmiBlitz3_wizzard.ab2@22091>     BNE.w doendsel__skip
000305E6 <AmiBlitz3_wizzard.ab2@22092>     ADDQ.l #2,d1
000305EA <AmiBlitz3_wizzard.ab2@22093>     MOVE.l d1,-2(a0)
000305EE <AmiBlitz3_wizzard.ab2@22094>   BRA doendsel__skip
000305F4 <AmiBlitz3_wizzard.ab2@22098>   TST.w dontwrite
000305F8 <AmiBlitz3_wizzard.ab2@22099>      BNE.w doendsel__skip
000305FE <AmiBlitz3_wizzard.ab2@22100>   CMP.l #MaxWordSgnd,D1
00030602 <AmiBlitz3_wizzard.ab2@22101>    BHI.w JUMP_cbraerr
00030604 <AmiBlitz3_wizzard.ab2@22102>   MOVE.w D1,(A0)
00030608 <AmiBlitz3_wizzard.ab2@22105>   MOVE.l (A3),$4(A2)                                       ;next of me is new first
0003060A <AmiBlitz3_wizzard.ab2@22106>   MOVEA.l A3,A1
0003060C <AmiBlitz3_wizzard.ab2@22107>   MOVEQ.l #$08,D0
00030612 <AmiBlitz3_wizzard.ab2@22108>   MOVE.l mempool,a0
00030616 <AmiBlitz3_wizzard.ab2@22109>    JSR _FreePooled(A6)
0003061A <AmiBlitz3_wizzard.ab2@22110> BRA.w doendsel__loop
00030620 <AmiBlitz3_wizzard.ab2@22113>   JSR popselect                                            ;fix stack on select
00030624 <AmiBlitz3_wizzard.ab2@22114>   MOVEA.l firstsel(PC),A1
0003062A <AmiBlitz3_wizzard.ab2@22115>   MOVE.l (A1),firstsel
0003062C <AmiBlitz3_wizzard.ab2@22116>   MOVEQ.l #$0E,D0
00030632 <AmiBlitz3_wizzard.ab2@22117>   MOVEA.l _execbase,A6
00030638 <AmiBlitz3_wizzard.ab2@22118>   MOVE.l mempool,a0
0003063C <AmiBlitz3_wizzard.ab2@22119>   JSR _FreePooled(A6)
00030642 <AmiBlitz3_wizzard.ab2@22120> JMP get1bytemain
00030644 <AmiBlitz3_wizzard.ab2@22124>   MOVEA.l (A7)+,A1
00030646 <AmiBlitz3_wizzard.ab2@22125>   SUBQ.w #8,A1
00030648 <AmiBlitz3_wizzard.ab2@22126>   MOVEQ.l #$09,D0
0003064A <AmiBlitz3_wizzard.ab2@22127>   ADD.l (A1),D0
0003064C <AmiBlitz3_wizzard.ab2@22130>   ADDQ.w #2,A7                                             ;for runtime errs!
00030650 <AmiBlitz3_wizzard.ab2@22135>   MOVE.l firstsel(PC),D0
00030654 <AmiBlitz3_wizzard.ab2@22136>    BEQ.w JUMP_defaerr
00030656 <AmiBlitz3_wizzard.ab2@22137>   MOVEA.l D0,A2
0003065A <AmiBlitz3_wizzard.ab2@22138>   BSR.w JL_0_CE26
0003065E <AmiBlitz3_wizzard.ab2@22139>   BSR.w JL_0_CDFC
00030662 <AmiBlitz3_wizzard.ab2@22140>   CLR.l $8(A2)
00030666 <AmiBlitz3_wizzard.ab2@22141>   MOVE.w $C(A2),D2
0003066A <AmiBlitz3_wizzard.ab2@22142> BRA.w JL_0_CE5E
00030670 <AmiBlitz3_wizzard.ab2@22145> JMP defaerr
00030674 <AmiBlitz3_wizzard.ab2@22148>   MOVE.l $8(A2),D0
00030678 <AmiBlitz3_wizzard.ab2@22149>    BEQ.w JL_0_CE24
0003067A <AmiBlitz3_wizzard.ab2@22150>   MOVEA.l D0,A0
00030680 <AmiBlitz3_wizzard.ab2@22151>   MOVE.l destpointer,D1
00030682 <AmiBlitz3_wizzard.ab2@22152>   SUB.l A0,D1
00030688 <AmiBlitz3_wizzard.ab2@22154>     TST.b fast
0003068C <AmiBlitz3_wizzard.ab2@22155>     BEQ 'l1
00030692 <AmiBlitz3_wizzard.ab2@22156>     TST.w dontwrite
00030696 <AmiBlitz3_wizzard.ab2@22157>     BNE.w JL_0_CE24
00030698 <AmiBlitz3_wizzard.ab2@22158>     ADDQ.l #2,d1
0003069C <AmiBlitz3_wizzard.ab2@22159>     MOVE.l D1,-2(A0)
000306A0 <AmiBlitz3_wizzard.ab2@22160>   BRA JL_0_CE24
000306A6 <AmiBlitz3_wizzard.ab2@22164>   TST.w dontwrite
000306AA <AmiBlitz3_wizzard.ab2@22165>      BNE.w JL_0_CE24
000306B0 <AmiBlitz3_wizzard.ab2@22166>    CMP.l #MaxWordSgnd,D1
000306B4 <AmiBlitz3_wizzard.ab2@22167>    BHI.w JUMP_cbraerr
000306B6 <AmiBlitz3_wizzard.ab2@22168>   MOVE.w D1,(A0)
000306B8 <AmiBlitz3_wizzard.ab2@22171> RTS
000306BE <AmiBlitz3_wizzard.ab2@22174> JMP cbraerr
000306C2 <AmiBlitz3_wizzard.ab2@22178>   MOVE.l $8(A2),D0
000306C6 <AmiBlitz3_wizzard.ab2@22179>    BEQ.w JL_0_CE5C
000306C8 <AmiBlitz3_wizzard.ab2@22180>   MOVEA.l D0,A3
000306CC <AmiBlitz3_wizzard.ab2@22181>   MOVE.w #$6000,D1
000306D2 <AmiBlitz3_wizzard.ab2@22183>    TST.b fast
000306D6 <AmiBlitz3_wizzard.ab2@22184>    BEQ 'l1
000306DC <AmiBlitz3_wizzard.ab2@22185>    OR.l #$ff,d1
000306E0 <AmiBlitz3_wizzard.ab2@22186>    BSR writeword
000306E4 <AmiBlitz3_wizzard.ab2@22190>   BSR.w writeword
000306E6 <AmiBlitz3_wizzard.ab2@22191>   MOVEQ.l #$08,D0
000306E8 <AmiBlitz3_wizzard.ab2@22192>   MOVEQ.l #$01,D1
000306EE <AmiBlitz3_wizzard.ab2@22193>   MOVEA.l _execbase,A6
000306F4 <AmiBlitz3_wizzard.ab2@22194>   MOVE.l mempool,a0
000306F8 <AmiBlitz3_wizzard.ab2@22195>   JSR _AllocPooled(a6)
000306FA <AmiBlitz3_wizzard.ab2@22197>   MOVEA.l D0,A0
000306FE <AmiBlitz3_wizzard.ab2@22198>   MOVE.l $4(A2),(A0)
00030702 <AmiBlitz3_wizzard.ab2@22199>   MOVE.l A0,$4(A2)
0003070A <AmiBlitz3_wizzard.ab2@22200>   MOVE.l destpointer,$4(A0)
0003070E <AmiBlitz3_wizzard.ab2@22201> BRA.w writeword
00030710 <AmiBlitz3_wizzard.ab2@22204> RTS
00030716 <AmiBlitz3_wizzard.ab2@22208>   TST.b debugmode
0003071A <AmiBlitz3_wizzard.ab2@22209>    BEQ.w JL_0_CE7A
0003071E <AmiBlitz3_wizzard.ab2@22210>   MOVE.w #$C313,D1
00030722 <AmiBlitz3_wizzard.ab2@22211>   CMP.w #$3,D2
00030726 <AmiBlitz3_wizzard.ab2@22212>    BCS.w JL_0_CE76
00030728 <AmiBlitz3_wizzard.ab2@22213>   ADDQ.w #1,D1
0003072C <AmiBlitz3_wizzard.ab2@22216> BRA.w Atokejsr
0003072E <AmiBlitz3_wizzard.ab2@22219> RTS
00030734 <AmiBlitz3_wizzard.ab2@22223> JMP caseerr
00030738 <AmiBlitz3_wizzard.ab2@22226>   MOVE.l firstsel(PC),D0
0003073C <AmiBlitz3_wizzard.ab2@22227>    BEQ.w JUMP_caseerr
0003073E <AmiBlitz3_wizzard.ab2@22228>   MOVEA.l D0,A2
00030742 <AmiBlitz3_wizzard.ab2@22229>    BSR.w JL_0_CE26
00030746 <AmiBlitz3_wizzard.ab2@22230>    BSR.w JL_0_CDFC
0003074A <AmiBlitz3_wizzard.ab2@22231>   MOVE.w $C(A2),D2
0003074C <AmiBlitz3_wizzard.ab2@22232>   MOVE.w D2,-(A7)
00030750 <AmiBlitz3_wizzard.ab2@22233>    BSR.w JL_0_CE5E
00030752 <AmiBlitz3_wizzard.ab2@22234>   MOVE.w (A7),D2
00030756 <AmiBlitz3_wizzard.ab2@22235>    BSR.w bakeval
00030758 <AmiBlitz3_wizzard.ab2@22236>   MOVE.w (A7)+,D2
0003075C <AmiBlitz3_wizzard.ab2@22237>   LEA selcomb(PC),A0
00030760 <AmiBlitz3_wizzard.ab2@22238>   LEA selcombf(PC),A1
00030764 <AmiBlitz3_wizzard.ab2@22239>   CMP.w #$1,D2
00030768 <AmiBlitz3_wizzard.ab2@22240>    BEQ.w JL_0_CED8
0003076C <AmiBlitz3_wizzard.ab2@22241>   LEA selcomw(PC),A0
00030770 <AmiBlitz3_wizzard.ab2@22242>   CMP.w #$2,D2
00030774 <AmiBlitz3_wizzard.ab2@22243>    BEQ.w JL_0_CED8
00030778 <AmiBlitz3_wizzard.ab2@22244>   LEA selcoml(PC),A0
0003077C <AmiBlitz3_wizzard.ab2@22245>   LEA selcomlf(PC),A1
00030780 <AmiBlitz3_wizzard.ab2@22246>   CMP.w #$7,D2
00030784 <AmiBlitz3_wizzard.ab2@22247>    BCS.w JL_0_CED8
00030788 <AmiBlitz3_wizzard.ab2@22249>   MOVE.w #$CE01,D1
0003078C <AmiBlitz3_wizzard.ab2@22250>    BSR.w Atokejsr
00030790 <AmiBlitz3_wizzard.ab2@22251> BRA.w JL_0_CEDC
00030794 <AmiBlitz3_wizzard.ab2@22254>   BSR.w pokecode
00030798 <AmiBlitz3_wizzard.ab2@22257>   MOVE.w selbne(PC),D1
0003079E <AmiBlitz3_wizzard.ab2@22259>     TST.b fast
000307A2 <AmiBlitz3_wizzard.ab2@22260>     BEQ 'l1
000307A8 <AmiBlitz3_wizzard.ab2@22261>     ORI.l #$ff,d1
000307AC <AmiBlitz3_wizzard.ab2@22262>     BSR writeword
000307B0 <AmiBlitz3_wizzard.ab2@22265>   BSR.w writeword
000307B4 <AmiBlitz3_wizzard.ab2@22266>   MOVEA.l firstsel(PC),A0
000307BC <AmiBlitz3_wizzard.ab2@22267>   MOVE.l destpointer,$8(A0)
000307C0 <AmiBlitz3_wizzard.ab2@22268> BRA.w writeword
000307C4 <AmiBlitz3_wizzard.ab2@22272> pcchk:      Dc.b $3F,$3C,$73,$45                           ;MOVE.W  #$7345,-(A7)   ;#"sE",-(a7) org source
000307C6 <AmiBlitz3_wizzard.ab2@22273> clrst:      Dc.b $42,$A7                                   ;CLR.L   -(A7)
000307CA <AmiBlitz3_wizzard.ab2@22276> sellineat:  Ds.l 1
000307D0 <AmiBlitz3_wizzard.ab2@22282>   TST.b debugmode
000307D4 <AmiBlitz3_wizzard.ab2@22283>    BEQ.w JL_0_CF0E
000307D8 <AmiBlitz3_wizzard.ab2@22284>   MOVE.l pcchk(PC),D1                                      ;move #"sE",-(a7)
000307DC <AmiBlitz3_wizzard.ab2@22285>    BSR.w writelong
000307E6 <AmiBlitz3_wizzard.ab2@22288>   MOVE.l linenumat,sellineat
000307F0 <AmiBlitz3_wizzard.ab2@22290>    MOVE.l destpointer,pushpc
000307FA <AmiBlitz3_wizzard.ab2@22291>   MOVE.l hunkoffsetbase,pushoff
000307FC <AmiBlitz3_wizzard.ab2@22292>   MOVEQ.l #$00,D2
00030800 <AmiBlitz3_wizzard.ab2@22293>    BSR.w bakevalu                                          ;Evaluate
00030804 <AmiBlitz3_wizzard.ab2@22294>    BSR.w JL_0_B5D2
00030808 <AmiBlitz3_wizzard.ab2@22295>   CMP.w #$7,D2
0003080C <AmiBlitz3_wizzard.ab2@22296>    BNE.w JL_0_CF36
00030810 <AmiBlitz3_wizzard.ab2@22297>   MOVE.w clrst(PC),D1
00030814 <AmiBlitz3_wizzard.ab2@22298>    BSR.w writeword
00030818 <AmiBlitz3_wizzard.ab2@22301>    BSR.w JL_0_B63C
0003081C <AmiBlitz3_wizzard.ab2@22302>   LEA selpushb(PC),A0
00030820 <AmiBlitz3_wizzard.ab2@22303>   LEA selpushbf(PC),A1
00030824 <AmiBlitz3_wizzard.ab2@22304>   CMP.w #$1,D2
00030828 <AmiBlitz3_wizzard.ab2@22305>    BEQ.w JL_0_CF88
0003082C <AmiBlitz3_wizzard.ab2@22306>   LEA selpushw(PC),A0
00030830 <AmiBlitz3_wizzard.ab2@22307>   CMP.w #$2,D2
00030834 <AmiBlitz3_wizzard.ab2@22308>    BEQ.w JL_0_CF88
00030838 <AmiBlitz3_wizzard.ab2@22309>   LEA selpushl(PC),A0
0003083C <AmiBlitz3_wizzard.ab2@22310>   LEA selpushlf(PC),A1
00030840 <AmiBlitz3_wizzard.ab2@22311>   CMP.w #$7,D2
00030844 <AmiBlitz3_wizzard.ab2@22312>    BCS.w JL_0_CF88
0003084A <AmiBlitz3_wizzard.ab2@22314>   MOVE.w moved0a3,D1                                       ;d0 to a3!
0003084E <AmiBlitz3_wizzard.ab2@22315>    BSR.w writeword
00030852 <AmiBlitz3_wizzard.ab2@22316>   LEA selpushs(PC),A0
00030856 <AmiBlitz3_wizzard.ab2@22317>   LEA selpushsf(PC),A1
0003085A <AmiBlitz3_wizzard.ab2@22318>    BSR.w pokecode
0003085E <AmiBlitz3_wizzard.ab2@22319>   MOVE.w #$C701,D1
00030862 <AmiBlitz3_wizzard.ab2@22320>    BSR.w Atokejsr
00030866 <AmiBlitz3_wizzard.ab2@22321> BRA.w JL_0_CF8C
0003086A <AmiBlitz3_wizzard.ab2@22324>   BSR.w pokecode
0003086C <AmiBlitz3_wizzard.ab2@22327>   MOVEQ.l #$0E,D0
0003086E <AmiBlitz3_wizzard.ab2@22328>   MOVEQ.l #$01,D1
00030874 <AmiBlitz3_wizzard.ab2@22329>   MOVEA.l _execbase,A6
0003087A <AmiBlitz3_wizzard.ab2@22331>   MOVE.l mempool,a0
0003087E <AmiBlitz3_wizzard.ab2@22332>   JSR _AllocPooled(a6)
00030880 <AmiBlitz3_wizzard.ab2@22333>   MOVEA.l D0,A0
00030884 <AmiBlitz3_wizzard.ab2@22334>   MOVE.l firstsel(PC),(A0)
0003088A <AmiBlitz3_wizzard.ab2@22335>   MOVE.l A0,firstsel
0003088E <AmiBlitz3_wizzard.ab2@22336>   CLR.l $4(A0)
00030892 <AmiBlitz3_wizzard.ab2@22337>   CLR.l $8(A0)
00030896 <AmiBlitz3_wizzard.ab2@22338>   MOVE.w D2,$C(A0)
00030898 <AmiBlitz3_wizzard.ab2@22339> RTS
0003089E <AmiBlitz3_wizzard.ab2@22343>   MOVE.l firstrep,D0
000308A2 <AmiBlitz3_wizzard.ab2@22344>    BEQ.w JUMP_unterr1
000308A6 <AmiBlitz3_wizzard.ab2@22345>   MOVE.w #$6000,D1
000308AA <AmiBlitz3_wizzard.ab2@22346>   BSR.w writeword
000308AC <AmiBlitz3_wizzard.ab2@22347>   MOVEA.l D0,A0
000308B0 <AmiBlitz3_wizzard.ab2@22348>   MOVE.l $4(A0),D1
000308B6 <AmiBlitz3_wizzard.ab2@22349>   SUB.l destpointer,D1
000308B8 <AmiBlitz3_wizzard.ab2@22350>   TST.w D1
000308BC <AmiBlitz3_wizzard.ab2@22351>    BPL.w JUMP_unterr2
000308C0 <AmiBlitz3_wizzard.ab2@22352>   BSR.w writeword
000308C6 <AmiBlitz3_wizzard.ab2@22353>   MOVEA.l _execbase,A6
000308CA <AmiBlitz3_wizzard.ab2@22354> BRA.w JL_0_D036
000308D0 <AmiBlitz3_wizzard.ab2@22357> JMP unterr2
000308D6 <AmiBlitz3_wizzard.ab2@22360> JMP unterr1
000308DC <AmiBlitz3_wizzard.ab2@22364>   MOVE.l firstrep,D0
000308E0 <AmiBlitz3_wizzard.ab2@22365>    BEQ.w JUMP_unterr1
000308E4 <AmiBlitz3_wizzard.ab2@22366>   BSR.w do_if
000308EA <AmiBlitz3_wizzard.ab2@22367>   JSR reget
000308EE <AmiBlitz3_wizzard.ab2@22368>    BNE.w JUMP_syntaxerr
000308F4 <AmiBlitz3_wizzard.ab2@22369>   MOVE.w dontwrite,D1
000308F8 <AmiBlitz3_wizzard.ab2@22370>    BNE.w JL_0_D020
000308FE <AmiBlitz3_wizzard.ab2@22371>   MOVEA.l firstrep,A0
00030904 <AmiBlitz3_wizzard.ab2@22372>   MOVEA.l destpointer,A1
0003090A <AmiBlitz3_wizzard.ab2@22374>     TST.b fast
0003090E <AmiBlitz3_wizzard.ab2@22375>     BEQ 'l1
00030910 <AmiBlitz3_wizzard.ab2@22376>     SUBQ.w #4,a1
00030914 <AmiBlitz3_wizzard.ab2@22377>     MOVE.l $4(A0),D2
00030916 <AmiBlitz3_wizzard.ab2@22378>     SUB.l A1,D2
00030918 <AmiBlitz3_wizzard.ab2@22379>     MOVE.l d2,(a1)
0003091C <AmiBlitz3_wizzard.ab2@22380>   BRA JL_0_D020
0003091E <AmiBlitz3_wizzard.ab2@22384>   SUBQ.w #2,A1
00030922 <AmiBlitz3_wizzard.ab2@22385>   MOVE.l $4(A0),D2
00030924 <AmiBlitz3_wizzard.ab2@22386>   SUB.l A1,D2
00030926 <AmiBlitz3_wizzard.ab2@22387>   TST.w D2
0003092A <AmiBlitz3_wizzard.ab2@22388>    BPL.w JUMP_unterr2
0003092C <AmiBlitz3_wizzard.ab2@22389>   MOVE.w D2,(A1)
00030932 <AmiBlitz3_wizzard.ab2@22392>   MOVEA.l firstiff,A1
00030938 <AmiBlitz3_wizzard.ab2@22393>   MOVE.l (A1),firstiff
0003093A <AmiBlitz3_wizzard.ab2@22394>   MOVEQ.l #$0E,D0
00030940 <AmiBlitz3_wizzard.ab2@22395>   MOVEA.l _execbase,A6
00030946 <AmiBlitz3_wizzard.ab2@22396>   MOVE.l mempool,a0
0003094A <AmiBlitz3_wizzard.ab2@22397>   JSR _FreePooled(A6)
00030950 <AmiBlitz3_wizzard.ab2@22400>   MOVEA.l firstrep,A1
00030956 <AmiBlitz3_wizzard.ab2@22401>   MOVE.l (A1),firstrep
00030958 <AmiBlitz3_wizzard.ab2@22402>   MOVEQ.l #$08,D0
0003095E <AmiBlitz3_wizzard.ab2@22403>   MOVE.l mempool,a0
00030962 <AmiBlitz3_wizzard.ab2@22404> JMP _FreePooled(A6)
00030966 <AmiBlitz3_wizzard.ab2@22407> iflineat:   Ds.l 1
00030968 <AmiBlitz3_wizzard.ab2@22411>   MOVEQ.l #$00,D2
0003096E <AmiBlitz3_wizzard.ab2@22412>   TST.b fast
00030972 <AmiBlitz3_wizzard.ab2@22413>   BEQ 'l1
0003097A <AmiBlitz3_wizzard.ab2@22414>   MOVE.b #1,nostringopt
00030982 <AmiBlitz3_wizzard.ab2@22415>   MOVE.b #1,iniffcommand
00030984 <AmiBlitz3_wizzard.ab2@22419>   MOVEQ.l #$00,D1
00030986 <AmiBlitz3_wizzard.ab2@22422>   MOVE.w D1,-(A7)
0003098C <AmiBlitz3_wizzard.ab2@22423>   MOVE.l destpointer,-(A7)
0003098E <AmiBlitz3_wizzard.ab2@22424>   MOVE.w D2,-(A7)
00030998 <AmiBlitz3_wizzard.ab2@22425>   MOVE.l linenumat,iflineat
0003099A <AmiBlitz3_wizzard.ab2@22426>   MOVEQ.l #$00,D2
000309A4 <AmiBlitz3_wizzard.ab2@22427>   MOVE.b optistring,optistring2
000309AC <AmiBlitz3_wizzard.ab2@22428>   MOVE.b #1,optistring
000309B0 <AmiBlitz3_wizzard.ab2@22429>   BSR.w bakevalu
000309BA <AmiBlitz3_wizzard.ab2@22430>   MOVE.b optistring2,optistring
000309BE <AmiBlitz3_wizzard.ab2@22431>   CMP.w #$5,D2
000309C2 <AmiBlitz3_wizzard.ab2@22432>    BEQ.w JL_0_D09C
000309C6 <AmiBlitz3_wizzard.ab2@22433>   MOVE.w thetst1(PC),D1
000309CA <AmiBlitz3_wizzard.ab2@22434>   CMP.w #$1,D2
000309CE <AmiBlitz3_wizzard.ab2@22435>    BEQ.w writebranchcode
000309D2 <AmiBlitz3_wizzard.ab2@22436>   MOVE.w thetst2(PC),D1
000309D6 <AmiBlitz3_wizzard.ab2@22437>   CMP.w #$2,D2
000309DA <AmiBlitz3_wizzard.ab2@22438>    BEQ.w writebranchcode
000309DE <AmiBlitz3_wizzard.ab2@22439>   MOVE.w thetst4(PC),D1
000309E2 <AmiBlitz3_wizzard.ab2@22440>   CMP.w #$7,D2
000309E6 <AmiBlitz3_wizzard.ab2@22441>    BEQ.w writebranchcode
000309EA <AmiBlitz3_wizzard.ab2@22442>   MOVE.w thetst3(PC),D1
000309EE <AmiBlitz3_wizzard.ab2@22443> BRA.w writebranchcode
000309F4 <AmiBlitz3_wizzard.ab2@22446>   TST.b fpu
000309F8 <AmiBlitz3_wizzard.ab2@22447>   BEQ 'dofpu
000309FE <AmiBlitz3_wizzard.ab2@22448>   MOVE.l #$f200003a,d1
00030A02 <AmiBlitz3_wizzard.ab2@22449>   BSR writelong
00030A06 <AmiBlitz3_wizzard.ab2@22450>   MOVE.w #$f2c1,d1
00030A0A <AmiBlitz3_wizzard.ab2@22451>   BSR writeword
00030A0E <AmiBlitz3_wizzard.ab2@22452>   BSR writelong
00030A10 <AmiBlitz3_wizzard.ab2@22453>   ADDQ.l #2,a7
00030A14 <AmiBlitz3_wizzard.ab2@22454> BRA.w br2
00030A18 <AmiBlitz3_wizzard.ab2@22457>    MOVE.w #$C900,D1
00030A1C <AmiBlitz3_wizzard.ab2@22458>    BSR.w Atokejsr
00030A20 <AmiBlitz3_wizzard.ab2@22459>   MOVE.l thetst5(PC),D1
00030A24 <AmiBlitz3_wizzard.ab2@22460>    BSR.w writelong
00030A28 <AmiBlitz3_wizzard.ab2@22461> BRA.w JL_0_D0B4
00030A2E <AmiBlitz3_wizzard.ab2@22465>          CLR.b iniffcommand
00030A34 <AmiBlitz3_wizzard.ab2@22466>          TST.b fast                                        ;branchcode
00030A38 <AmiBlitz3_wizzard.ab2@22467>          BEQ b6
00030A3E <AmiBlitz3_wizzard.ab2@22468>          TST.b fpu
00030A42 <AmiBlitz3_wizzard.ab2@22469>          BEQ 'nofpu
00030A48 <AmiBlitz3_wizzard.ab2@22473>           MOVE.l destpointer,a0
00030A4E <AmiBlitz3_wizzard.ab2@22474>          SUB.l load_var_addr,a0
00030A54 <AmiBlitz3_wizzard.ab2@22475>          CMP.l #4,a0
00030A58 <AmiBlitz3_wizzard.ab2@22476>          BEQ 'nofpu
00030A60 <AmiBlitz3_wizzard.ab2@22477>          CMP.l #$f2400014,-4(a4)                           ;<
00030A64 <AmiBlitz3_wizzard.ab2@22478>          BNE 'nolt
00030A6A <AmiBlitz3_wizzard.ab2@22479>          SUBQ.l #2,destpointer
00030A70 <AmiBlitz3_wizzard.ab2@22480>          MOVE.w #$f293,-4(a4)                              ;
00030A74 <AmiBlitz3_wizzard.ab2@22481> BRA 'brf
00030A7C <AmiBlitz3_wizzard.ab2@22484>   CMP.l #$f2400015,-4(a4)                                  ;<=
00030A80 <AmiBlitz3_wizzard.ab2@22485>          BNE 'nole
00030A86 <AmiBlitz3_wizzard.ab2@22486>          SUBQ.l #2,destpointer
00030A8C <AmiBlitz3_wizzard.ab2@22487>          MOVE.w #$f292,-4(a4)
00030A90 <AmiBlitz3_wizzard.ab2@22488> BRA 'brf
00030A98 <AmiBlitz3_wizzard.ab2@22491>   CMP.l #$f2400013,-4(a4)                                  ;=>
00030A9C <AmiBlitz3_wizzard.ab2@22492>          BNE 'noge
00030AA2 <AmiBlitz3_wizzard.ab2@22493>          SUBQ.l #2,destpointer
00030AA8 <AmiBlitz3_wizzard.ab2@22494>          MOVE.w #$f294,-4(a4)
00030AAC <AmiBlitz3_wizzard.ab2@22495> BRA 'brf
00030AB4 <AmiBlitz3_wizzard.ab2@22498>   CMP.l #$f2400012,-4(a4)                                  ;>
00030AB8 <AmiBlitz3_wizzard.ab2@22499>          BNE 'nogt
00030ABE <AmiBlitz3_wizzard.ab2@22500>          SUBQ.l #2,destpointer
00030AC4 <AmiBlitz3_wizzard.ab2@22501>          MOVE.w #$f295,-4(a4)
00030AC8 <AmiBlitz3_wizzard.ab2@22502> BRA 'brf
00030AD0 <AmiBlitz3_wizzard.ab2@22505>   CMP.l #$f2400001,-4(a4)                                  ;=
00030AD4 <AmiBlitz3_wizzard.ab2@22506>          BNE 'noeq
00030ADA <AmiBlitz3_wizzard.ab2@22507>          SUBQ.l #2,destpointer
00030AE0 <AmiBlitz3_wizzard.ab2@22508>          MOVE.w #$f28e,-4(a4)
00030AE4 <AmiBlitz3_wizzard.ab2@22509> BRA 'brf
00030AEC <AmiBlitz3_wizzard.ab2@22512>   CMP.l #$f240000e,-4(a4)                                  ;<>
00030AF0 <AmiBlitz3_wizzard.ab2@22513>          BNE 'none
00030AF6 <AmiBlitz3_wizzard.ab2@22514>          SUBQ.l #2,destpointer
00030AFC <AmiBlitz3_wizzard.ab2@22515>          MOVE.w #$f281,-4(a4)
00030AFE <AmiBlitz3_wizzard.ab2@22518>   ADDQ.l #2,a7
00030B04 <AmiBlitz3_wizzard.ab2@22520>     TST.b fast
00030B08 <AmiBlitz3_wizzard.ab2@22521>     BEQ 'l1
00030B0E <AmiBlitz3_wizzard.ab2@22522>     OR.b #$40,-3(a4)
00030B12 <AmiBlitz3_wizzard.ab2@22523>     BSR writeword
00030B16 <AmiBlitz3_wizzard.ab2@22527>  BSR writeword
00030B1A <AmiBlitz3_wizzard.ab2@22528> BRA.s br2
00030B20 <AmiBlitz3_wizzard.ab2@22532>   MOVE.l destpointer,a0
00030B26 <AmiBlitz3_wizzard.ab2@22533>          SUB.l load_var_addr,a0
00030B2C <AmiBlitz3_wizzard.ab2@22534>          CMP.l #4,a0
00030B30 <AmiBlitz3_wizzard.ab2@22535>          BEQ JL_0_D0B4
00030B36 <AmiBlitz3_wizzard.ab2@22536>          CMP.w #$4eb9,-6(a4)
00030B3A <AmiBlitz3_wizzard.ab2@22537>          BEQ b6
00030B40 <AmiBlitz3_wizzard.ab2@22538>          CMP.w #$5ec0,-2(a4)                               ;>
00030B44 <AmiBlitz3_wizzard.ab2@22539>      BNE.s 'lb1
00030B4A <AmiBlitz3_wizzard.ab2@22540>          MOVE.w #$6f00,-2(a4)                              ;ble
00030B4E <AmiBlitz3_wizzard.ab2@22541> BRA.s br
00030B54 <AmiBlitz3_wizzard.ab2@22544>  CMP.w #$5dc0,-2(a4)                                       ;<
00030B58 <AmiBlitz3_wizzard.ab2@22545>   BNE.s 'lb2
00030B5E <AmiBlitz3_wizzard.ab2@22546>          MOVE.w #$6c00,-2(a4)                              ;bge
00030B62 <AmiBlitz3_wizzard.ab2@22547> BRA.s br
00030B68 <AmiBlitz3_wizzard.ab2@22550>   CMP.w #$57c0,-2(a4)                                      ;=
00030B6C <AmiBlitz3_wizzard.ab2@22551>   BNE.s 'lb3
00030B72 <AmiBlitz3_wizzard.ab2@22552>          MOVE.w #$6600,-2(a4)                              ;bne
00030B76 <AmiBlitz3_wizzard.ab2@22553> BRA.s br
00030B7C <AmiBlitz3_wizzard.ab2@22556>   CMP.w #$56c0,-2(a4)                                      ;<>
00030B80 <AmiBlitz3_wizzard.ab2@22557>   BNE.s 'lb4
00030B86 <AmiBlitz3_wizzard.ab2@22558>          MOVE.w #$6700,-2(a4)                              ;beq
00030B8A <AmiBlitz3_wizzard.ab2@22559> BRA.s br
00030B90 <AmiBlitz3_wizzard.ab2@22562>   CMP.w #$5cc0,-2(a4)                                      ;>=
00030B94 <AmiBlitz3_wizzard.ab2@22563>   BNE.s 'lb5
00030B9A <AmiBlitz3_wizzard.ab2@22564>          MOVE.w #$6d00,-2(a4)                              ;blt
00030B9E <AmiBlitz3_wizzard.ab2@22565> BRA.s br
00030BA4 <AmiBlitz3_wizzard.ab2@22568>   CMP.w #$5fc0,-2(a4)                                      ;<=
00030BA8 <AmiBlitz3_wizzard.ab2@22569>         BNE.s b6
00030BAE <AmiBlitz3_wizzard.ab2@22570>          MOVE.w #$6e00,-2(a4)                              ;bgt
00030BB0 <AmiBlitz3_wizzard.ab2@22573>   TST.w (a7)+
00030BB6 <AmiBlitz3_wizzard.ab2@22575>         TST.b fast
00030BBA <AmiBlitz3_wizzard.ab2@22576>         BEQ 'l1
00030BC0 <AmiBlitz3_wizzard.ab2@22577>         OR.b #$ff,-1(a4)                                   ;long branches
00030BC4 <AmiBlitz3_wizzard.ab2@22578>         BSR writeword
00030BC8 <AmiBlitz3_wizzard.ab2@22582>         BSR writeword
00030BCC <AmiBlitz3_wizzard.ab2@22583> BRA.s br2
00030BD0 <AmiBlitz3_wizzard.ab2@22586>   BSR.w writeword
00030BD4 <AmiBlitz3_wizzard.ab2@22589>   MOVE.l posbr(PC),D1
00030BD6 <AmiBlitz3_wizzard.ab2@22590>   TST.w (A7)+
00030BDA <AmiBlitz3_wizzard.ab2@22591>    BEQ.w JL_0_D0C2
00030BDE <AmiBlitz3_wizzard.ab2@22592>   MOVE.l negbr(PC),D1
00030BE4 <AmiBlitz3_wizzard.ab2@22595>   TST.b fast
00030BE8 <AmiBlitz3_wizzard.ab2@22596>            BEQ 'l1
00030BEE <AmiBlitz3_wizzard.ab2@22597>            OR.l #$00ff0000,d1
00030BF2 <AmiBlitz3_wizzard.ab2@22598>            BSR writelong
00030BF6 <AmiBlitz3_wizzard.ab2@22599>            BSR writeword
00030BFA <AmiBlitz3_wizzard.ab2@22600> BRA br2
00030BFE <AmiBlitz3_wizzard.ab2@22603>   BSR.w writelong
00030C00 <AmiBlitz3_wizzard.ab2@22606>  MOVEQ.l #$0E,D0
00030C02 <AmiBlitz3_wizzard.ab2@22607>   MOVEQ.l #$01,D1
00030C08 <AmiBlitz3_wizzard.ab2@22608>   MOVEA.l _execbase,A6
00030C0E <AmiBlitz3_wizzard.ab2@22610>   MOVE.l mempool,a0
00030C12 <AmiBlitz3_wizzard.ab2@22611>   JSR _AllocPooled(a6)
00030C14 <AmiBlitz3_wizzard.ab2@22612>   MOVEA.l D0,A0
00030C1A <AmiBlitz3_wizzard.ab2@22613>   MOVE.l firstiff,(A0)
00030C20 <AmiBlitz3_wizzard.ab2@22614>   MOVE.l A0,firstiff
00030C24 <AmiBlitz3_wizzard.ab2@22615>   MOVE.l (A7)+,$4(A0)
00030C2C <AmiBlitz3_wizzard.ab2@22616>   MOVE.l destpointer,$8(A0)
00030C30 <AmiBlitz3_wizzard.ab2@22617>   MOVE.w (A7)+,$C(A0)
00030C36 <AmiBlitz3_wizzard.ab2@22618>    JSR reget
00030C3A <AmiBlitz3_wizzard.ab2@22619>    BEQ.w JL_0_D10C
00030C40 <AmiBlitz3_wizzard.ab2@22620>   BSET #$7,$C(A0)
00030C4A <AmiBlitz3_wizzard.ab2@22624>   MOVE.w oldqflag,instringon
00030C50 <AmiBlitz3_wizzard.ab2@22625>   MOVEA.l lastsourcepos,A5
00030C58 <AmiBlitz3_wizzard.ab2@22626>   MOVE.w #$003A,lastchar
00030C5A <AmiBlitz3_wizzard.ab2@22629> RTS
00030C5E <AmiBlitz3_wizzard.ab2@22633>   CMP.w #$1,D0
00030C62 <AmiBlitz3_wizzard.ab2@22634>    BLT.w JL_0_D128
00030C66 <AmiBlitz3_wizzard.ab2@22635>   CMP.w #$0,D0
00030C6A <AmiBlitz3_wizzard.ab2@22636>    BGT.w JL_0_D128
00030C6C <AmiBlitz3_wizzard.ab2@22637>   ADD.w D0,D0
00030C6E <AmiBlitz3_wizzard.ab2@22638>   ADD.w D0,D0
00030C72 <AmiBlitz3_wizzard.ab2@22639>   MOVEA.l JL_0_D128(PC,D0.W),A0
00030C74 <AmiBlitz3_wizzard.ab2@22642> JMP (A0)
00030C78 <AmiBlitz3_wizzard.ab2@22645> BRA.w JL_0_D128
00030C7C <AmiBlitz3_wizzard.ab2@22649>   CMP.w #$1,D0
00030C80 <AmiBlitz3_wizzard.ab2@22650>    BLT.w JL_0_D146
00030C84 <AmiBlitz3_wizzard.ab2@22651>   CMP.w #$0,D0
00030C88 <AmiBlitz3_wizzard.ab2@22652>    BGT.w JL_0_D146
00030C8A <AmiBlitz3_wizzard.ab2@22653>   ADD.w D0,D0
00030C8C <AmiBlitz3_wizzard.ab2@22654>   ADD.w D0,D0
00030C90 <AmiBlitz3_wizzard.ab2@22655>   MOVEA.l JL_0_D146(PC,D0.W),A0
00030C92 <AmiBlitz3_wizzard.ab2@22658>   JSR (A0)
00030C96 <AmiBlitz3_wizzard.ab2@22661> BRA.w JL_0_D146
00030C9A <AmiBlitz3_wizzard.ab2@22665>   CMP.w #$1,D0
00030C9E <AmiBlitz3_wizzard.ab2@22666>    BLT.w JL_0_D168
00030CA2 <AmiBlitz3_wizzard.ab2@22667>   CMP.w #$0,D0
00030CA6 <AmiBlitz3_wizzard.ab2@22668>    BGT.w JL_0_D168
00030CA8 <AmiBlitz3_wizzard.ab2@22669>   ADD.w D0,D0
00030CAA <AmiBlitz3_wizzard.ab2@22670>   ADD.w D0,D0
00030CAE <AmiBlitz3_wizzard.ab2@22671>   MOVEA.l JL_0_D168(PC,D0.W),A0
00030CB2 <AmiBlitz3_wizzard.ab2@22674>   MOVE.w #$6753,-(A7)                                      ;#'gS' ;for runtime error checking!
00030CB4 <AmiBlitz3_wizzard.ab2@22677>    JSR (A0)
00030CB8 <AmiBlitz3_wizzard.ab2@22680> BRA.w JL_0_D168
00030CBA <AmiBlitz3_wizzard.ab2@22683> labcnt:   Ds.w 1
00030CBC <AmiBlitz3_wizzard.ab2@22690>   MOVEQ.l #$02,D2
00030CC0 <AmiBlitz3_wizzard.ab2@22691>    BSR.w bakeval
00030CC4 <AmiBlitz3_wizzard.ab2@22692>   LEA JL_0_D10E(PC),A0
00030CC8 <AmiBlitz3_wizzard.ab2@22693>   LEA JL_0_D12C(PC),A1
00030CCC <AmiBlitz3_wizzard.ab2@22694>   MOVE.w #$001A,D1
00030CD0 <AmiBlitz3_wizzard.ab2@22695>   CMP.w #-$7FFB,D0
00030CD4 <AmiBlitz3_wizzard.ab2@22696>    BEQ.w JL_0_D1B6
00030CD8 <AmiBlitz3_wizzard.ab2@22697>   CMP.w #-$7FFA,D0
00030CDC <AmiBlitz3_wizzard.ab2@22698>    BNE.w JUMP_syntaxerr
00030CE0 <AmiBlitz3_wizzard.ab2@22699>   LEA JL_0_D12C(PC),A0
00030CE4 <AmiBlitz3_wizzard.ab2@22700>   LEA JL_0_D14A(PC),A1
00030CE8 <AmiBlitz3_wizzard.ab2@22701>   MOVE.w #$001A,D1
00030CEE <AmiBlitz3_wizzard.ab2@22702>   TST.b debugmode
00030CF2 <AmiBlitz3_wizzard.ab2@22703>    BEQ.b JL_0_D1B6
00030CF8 <AmiBlitz3_wizzard.ab2@22704>    JSR chkstak
00030CFC <AmiBlitz3_wizzard.ab2@22705>   LEA JL_0_D14A(PC),A0
00030D00 <AmiBlitz3_wizzard.ab2@22706>   LEA labcnt(PC),A1
00030D04 <AmiBlitz3_wizzard.ab2@22707>   MOVE.w #$001E,D1
00030D06 <AmiBlitz3_wizzard.ab2@22710>   MOVE.w D1,-(A7)
00030D0C <AmiBlitz3_wizzard.ab2@22711>   MOVE.l destpointer,-(A7)                                 ;for when we know number of labels!
00030D10 <AmiBlitz3_wizzard.ab2@22712>    BSR.w pokecode
00030D16 <AmiBlitz3_wizzard.ab2@22713>   CLR.w labcnt
00030D1C <AmiBlitz3_wizzard.ab2@22718>    JSR get1bytemain
00030D22 <AmiBlitz3_wizzard.ab2@22719>   SUBQ.l #2,destpointer                                    ;for makealab!
00030D26 <AmiBlitz3_wizzard.ab2@22720>    BSR.w JL_0_AE22
00030D2C <AmiBlitz3_wizzard.ab2@22721>   ADDQ.l #2,destpointer
00030D32 <AmiBlitz3_wizzard.ab2@22722>    JSR addoff
00030D36 <AmiBlitz3_wizzard.ab2@22723>   MOVE.l $8(A2),D1
00030D3A <AmiBlitz3_wizzard.ab2@22724>    BSR.w writelong
00030D40 <AmiBlitz3_wizzard.ab2@22725>   ADDQ.w #1,labcnt
00030D46 <AmiBlitz3_wizzard.ab2@22726>    JSR reget
00030D4A <AmiBlitz3_wizzard.ab2@22727>   CMP.w #$2C,D0
00030D4E <AmiBlitz3_wizzard.ab2@22728>    BEQ.w JL_0_D1C8
00030D50 <AmiBlitz3_wizzard.ab2@22729>   MOVEA.l (A7)+,A0
00030D52 <AmiBlitz3_wizzard.ab2@22730>   MOVE.w (A7)+,D2
00030D58 <AmiBlitz3_wizzard.ab2@22731>   MOVE.w dontwrite,D1
00030D5C <AmiBlitz3_wizzard.ab2@22732>    BNE.w JL_0_D21A
00030D60 <AmiBlitz3_wizzard.ab2@22733>   MOVE.w labcnt(PC),D1
00030D64 <AmiBlitz3_wizzard.ab2@22734>   MOVE.w D1,$A(A0)
00030D66 <AmiBlitz3_wizzard.ab2@22735>   ADD.w D1,D1
00030D68 <AmiBlitz3_wizzard.ab2@22736>   ADD.w D1,D1
00030D6A <AmiBlitz3_wizzard.ab2@22737>   ADDQ.w #2,D1
00030D6E <AmiBlitz3_wizzard.ab2@22738>   MOVE.w D1,$2(A0,D2.W)
00030D70 <AmiBlitz3_wizzard.ab2@22741> RTS
00030D76 <AmiBlitz3_wizzard.ab2@22745>   TST.b debugmode
00030D7A <AmiBlitz3_wizzard.ab2@22746>    BEQ.w JL_0_D236
00030D80 <AmiBlitz3_wizzard.ab2@22747>    JSR chkstak
00030D86 <AmiBlitz3_wizzard.ab2@22748>   MOVE.l AL_0_D162,D1
00030D8A <AmiBlitz3_wizzard.ab2@22749>    BSR.w writelong
00030D90 <AmiBlitz3_wizzard.ab2@22751>   MOVE.w gosubcode,D1
00030D94 <AmiBlitz3_wizzard.ab2@22752> BRA.w JL_0_D246
00030D9A <AmiBlitz3_wizzard.ab2@22756>   MOVE.w gotocode,D1
00030D9C <AmiBlitz3_wizzard.ab2@22759>   MOVE.w D1,-(A7)
00030DA0 <AmiBlitz3_wizzard.ab2@22760>    BSR.w JL_0_AE22
00030DA2 <AmiBlitz3_wizzard.ab2@22761>   MOVE.w (A7)+,D1
00030DA6 <AmiBlitz3_wizzard.ab2@22762>    BSR.w writeword
00030DAC <AmiBlitz3_wizzard.ab2@22763>    JSR addoff
00030DB0 <AmiBlitz3_wizzard.ab2@22764>   MOVE.l $8(A2),D1
00030DB4 <AmiBlitz3_wizzard.ab2@22765> BRA.w writelong
00030DBA <AmiBlitz3_wizzard.ab2@22769>   MOVE.w proceduremode,D1
00030DBE <AmiBlitz3_wizzard.ab2@22770>    BEQ.w JUMP_badpenderr
00030DC2 <AmiBlitz3_wizzard.ab2@22771>   MOVE.w #$4EF9,D1
00030DC6 <AmiBlitz3_wizzard.ab2@22772>    BSR.w writeword
00030DCC <AmiBlitz3_wizzard.ab2@22773>    JSR addoff
00030DD2 <AmiBlitz3_wizzard.ab2@22774>   MOVEA.l _execbase,A6
00030DD4 <AmiBlitz3_wizzard.ab2@22775>   MOVEQ.l #$08,D0
00030DD6 <AmiBlitz3_wizzard.ab2@22776>   MOVEQ.l #$01,D1
00030DDC <AmiBlitz3_wizzard.ab2@22778>   MOVE.l mempool,a0
00030DE0 <AmiBlitz3_wizzard.ab2@22779>   JSR _AllocPooled(a6)
00030DE2 <AmiBlitz3_wizzard.ab2@22780>   MOVEA.l D0,A0
00030DE8 <AmiBlitz3_wizzard.ab2@22781>   MOVE.l firstpend,(A0)
00030DEE <AmiBlitz3_wizzard.ab2@22782>   MOVE.l A0,firstpend
00030DF6 <AmiBlitz3_wizzard.ab2@22783>   MOVE.l destpointer,$4(A0)
00030DFA <AmiBlitz3_wizzard.ab2@22784> BRA.w writelong
00030DFE <AmiBlitz3_wizzard.ab2@22788>   BSR.w do_AsmExit
00030E04 <AmiBlitz3_wizzard.ab2@22789> JMP get1bytemain
00030E0C <AmiBlitz3_wizzard.ab2@22793>   MOVE.b #1,nostringopt
00030E10 <AmiBlitz3_wizzard.ab2@22794>   MOVEM.l a0/a1/d1,-(a7)
00030E16 <AmiBlitz3_wizzard.ab2@22795>   MOVEA.l currentfunction,A0
00030E1C <AmiBlitz3_wizzard.ab2@22796>     CMP.l #0,a0
00030E20 <AmiBlitz3_wizzard.ab2@22797>     BNE 'l1
00030E26 <AmiBlitz3_wizzard.ab2@22798>     JMP errorasmexit
00030E28 <AmiBlitz3_wizzard.ab2@22799> 'l1 MOVEQ.l #$00,D2
00030E2C <AmiBlitz3_wizzard.ab2@22800>   MOVE.b $5(A0),D2
00030E30 <AmiBlitz3_wizzard.ab2@22801>   BSR.w eval
00030E36 <AmiBlitz3_wizzard.ab2@22803>   MOVEA.l currentfunction,A0
00030E3A <AmiBlitz3_wizzard.ab2@22804>   MOVE.l funcstruct_returntype(a0),a0
00030E40 <AmiBlitz3_wizzard.ab2@22805>   CMP.l #0,a0
00030E44 <AmiBlitz3_wizzard.ab2@22806>   BEQ 'isstatement
00030E4C <AmiBlitz3_wizzard.ab2@22807>   CMP.l #$100,4(a0)
00030E50 <AmiBlitz3_wizzard.ab2@22808>   BLT.w 'isvar
00030E52 <AmiBlitz3_wizzard.ab2@22809>   MOVE.l a2,a1
00030E58 <AmiBlitz3_wizzard.ab2@22810>   TST.l typetocast
00030E5C <AmiBlitz3_wizzard.ab2@22811>   BEQ 'nocast
00030E62 <AmiBlitz3_wizzard.ab2@22812>   MOVE.l typetocast,a1
00030E64 <AmiBlitz3_wizzard.ab2@22813> 'nocast  CMP.l a0,a1
00030E68 <AmiBlitz3_wizzard.ab2@22814>   BEQ 'ok
00030E6E <AmiBlitz3_wizzard.ab2@22815>   CLR.l typetocast
00030E74 <AmiBlitz3_wizzard.ab2@22816>   MOVE.l lasttoken,d1
00030E78 <AmiBlitz3_wizzard.ab2@22817>   CMP.w #$b581,d1                   ; ok, when token for null
00030E7C <AmiBlitz3_wizzard.ab2@22818>   BEQ 'isnull
00030E82 <AmiBlitz3_wizzard.ab2@22819> 'error  JMP errorconvertreturntype
00030E86 <AmiBlitz3_wizzard.ab2@22826>   MOVEM.l (a7)+,a0/a1/d1
00030E8A <AmiBlitz3_wizzard.ab2@22827> BRA.w do_AsmExit
00030E90 <AmiBlitz3_wizzard.ab2@22829> error_convert_types2 JMP error_convert_types
00030E96 <AmiBlitz3_wizzard.ab2@22842>   TST.b debugmode
00030E9A <AmiBlitz3_wizzard.ab2@22843>    BEQ.w JL_0_D2CA
00030E9E <AmiBlitz3_wizzard.ab2@22844>   MOVE.w #$C305,D1
00030EA2 <AmiBlitz3_wizzard.ab2@22845> BRA.w Atokejsr
00030EA6 <AmiBlitz3_wizzard.ab2@22848>   MOVE.w #$4E75,D1
00030EAA <AmiBlitz3_wizzard.ab2@22849> BRA.w writeword
00030EAE <AmiBlitz3_wizzard.ab2@22852> localslist:  Ds.l 1                                        ;all locals for procs.;??Looks like obsovled data??
00030EB2 <AmiBlitz3_wizzard.ab2@22853> proclocals:  Ds.l 1                                        ;for debugga!
00030EB4 <AmiBlitz3_wizzard.ab2@22854> procnum:     Ds.w 1
00030EB6 <AmiBlitz3_wizzard.ab2@22855> procnum2:    Ds.w 1
00030EBA <AmiBlitz3_wizzard.ab2@22856> prolineat:   Ds.l 1
00030EC0 <AmiBlitz3_wizzard.ab2@22860>    TST.w proceduremode
00030EC4 <AmiBlitz3_wizzard.ab2@22861>    BGT JUMP_sreterr
00030EC8 <AmiBlitz3_wizzard.ab2@22862>    CMP.w #-$7FF9,D0
00030ECC <AmiBlitz3_wizzard.ab2@22863>    BEQ.w JL_0_D29C
00030ECE <AmiBlitz3_wizzard.ab2@22864>    MOVEQ.l #-$01,D1
00030ED2 <AmiBlitz3_wizzard.ab2@22865> BRA.w do_function2
00030ED8 <AmiBlitz3_wizzard.ab2@22868> JMP sreterr
00030EDE <AmiBlitz3_wizzard.ab2@22872>   CLR.b skipfunc
00030EE4 <AmiBlitz3_wizzard.ab2@22873>   TST.l unusedfunc
00030EE8 <AmiBlitz3_wizzard.ab2@22874>   BEQ 'ex
00030EEC <AmiBlitz3_wizzard.ab2@22875>   MOVEM.l d0-d7/a0-a6,-(a7)
00030EF2 <AmiBlitz3_wizzard.ab2@22876>   MOVE.l unusedfunc,d1
00030EF8 <AmiBlitz3_wizzard.ab2@22877>   LEA ptr_parameterstore,a5
00030EFA <AmiBlitz3_wizzard.ab2@22880>   MOVE.l d1,a0
00030EFE <AmiBlitz3_wizzard.ab2@22881>   LEA 12(a0),a2
00030F00 <AmiBlitz3_wizzard.ab2@22882>   MOVE.l a5,a1
00030F02 <AmiBlitz3_wizzard.ab2@22884>   CMPM.b (a1)+,(a2)+
00030F06 <AmiBlitz3_wizzard.ab2@22885>   BNE 'neq
00030F08 <AmiBlitz3_wizzard.ab2@22886>   TST.b (a2)
00030F0C <AmiBlitz3_wizzard.ab2@22887>   BNE 'ch
00030F0E <AmiBlitz3_wizzard.ab2@22888>   TST.b (a1)
00030F12 <AmiBlitz3_wizzard.ab2@22889>   BNE 'neq
00030F1A <AmiBlitz3_wizzard.ab2@22890>   MOVE.b #1,skipfunc
00030F1E <AmiBlitz3_wizzard.ab2@22891> BRA 'out
00030F20 <AmiBlitz3_wizzard.ab2@22894>   MOVE.l (a0),d1
00030F24 <AmiBlitz3_wizzard.ab2@22895>   BNE 'ag
00030F28 <AmiBlitz3_wizzard.ab2@22898>   MOVEM.l (a7)+,d0-d7/a0-a6
00030F2A <AmiBlitz3_wizzard.ab2@22901> RTS
00030F30 <AmiBlitz3_wizzard.ab2@22905> JMP dupprocerr
00030F36 <AmiBlitz3_wizzard.ab2@22908> JMP illprocperr
00030F3E <AmiBlitz3_wizzard.ab2@22915>   CMP.w #-1,proceduremode                                  ;was JUMP_sreterr_2
00030F42 <AmiBlitz3_wizzard.ab2@22916>    BEQ JUMP_sreterr
00030F46 <AmiBlitz3_wizzard.ab2@22917>   CMP.w #-$7FF9,D0
00030F4A <AmiBlitz3_wizzard.ab2@22918>    BEQ.w do_function_return
00030F54 <AmiBlitz3_wizzard.ab2@22921>   MOVE.w oldqflag,instringon
00030F5A <AmiBlitz3_wizzard.ab2@22922>   MOVEA.l lastsourcepos,A5
00030F60 <AmiBlitz3_wizzard.ab2@22923>   JSR getfunctionreturntype
00030F66 <AmiBlitz3_wizzard.ab2@22924>   JSR get1bytemain
00030F6C <AmiBlitz3_wizzard.ab2@22927>   TST.b declare
00030F70 <AmiBlitz3_wizzard.ab2@22928>   BEQ 'l1
00030F78 <AmiBlitz3_wizzard.ab2@22929>   MOVE.b #1,nowdeclare
00030F7E <AmiBlitz3_wizzard.ab2@22932>   JSR errchx                                           ;writejumpoverfunction
00030F84 <AmiBlitz3_wizzard.ab2@22935>   CLR.b fastfunc
00030F8E <AmiBlitz3_wizzard.ab2@22936>   MOVE.l firstiff,firstiffstore
00030F96 <AmiBlitz3_wizzard.ab2@22937>   CMP.l #"FAST",-1(a5)
00030F9A <AmiBlitz3_wizzard.ab2@22938>   BNE 'nofast
00030FA0 <AmiBlitz3_wizzard.ab2@22939>   CMP.b #" ",3(a5)
00030FA4 <AmiBlitz3_wizzard.ab2@22940>   BNE 'nofast
00030FA6 <AmiBlitz3_wizzard.ab2@22941>   ADDQ.l #3,a5
00030FAA <AmiBlitz3_wizzard.ab2@22944>     CMP.b #" ",(a5)
00030FAE <AmiBlitz3_wizzard.ab2@22945>      BNE 'x1
00030FB0 <AmiBlitz3_wizzard.ab2@22946>     ADDQ #1,a5
00030FB4 <AmiBlitz3_wizzard.ab2@22947> BRA 'x2
00030FBA <AmiBlitz3_wizzard.ab2@22950>   MOVE.l a5,lastsourcepos
00030FC2 <AmiBlitz3_wizzard.ab2@22951>   MOVE.b #1,fastfunc
00030FCA <AmiBlitz3_wizzard.ab2@22954>   CMP.l #"NOOP",-1(a5)                                     ;compile 3* so its deactivate
00030FCE <AmiBlitz3_wizzard.ab2@22955> BRA 'noopt
00030FD4 <AmiBlitz3_wizzard.ab2@22957>   CMP.w #"T ",3(a5)                                        ;??Looks like dead code??
00030FD8 <AmiBlitz3_wizzard.ab2@22958>   BNE 'noopt
00030FDA <AmiBlitz3_wizzard.ab2@22959>   ADDQ.l #4,a5
00030FDE <AmiBlitz3_wizzard.ab2@22962>     CMP.b #" ",(a5)
00030FE2 <AmiBlitz3_wizzard.ab2@22963>      BNE 'x1b
00030FE4 <AmiBlitz3_wizzard.ab2@22964>     ADDQ #1,a5
00030FE8 <AmiBlitz3_wizzard.ab2@22965> BRA 'x2b
00030FEE <AmiBlitz3_wizzard.ab2@22968>   MOVE.l a5,lastsourcepos
00030FF4 <AmiBlitz3_wizzard.ab2@22970>   JSR makename2
00030FF8 <AmiBlitz3_wizzard.ab2@22971> BRA 'l1
00030FFE <AmiBlitz3_wizzard.ab2@22975>   JSR makename2
00031004 <AmiBlitz3_wizzard.ab2@22976>   JSR checkused
0003100A <AmiBlitz3_wizzard.ab2@22977>   TST.b skipfunc
0003100E <AmiBlitz3_wizzard.ab2@22978>    BEQ 'l1
00031014 <AmiBlitz3_wizzard.ab2@22979>   JSR skipme
0003101A <AmiBlitz3_wizzard.ab2@22980>   CLR.b fastfunc
0003101C <AmiBlitz3_wizzard.ab2@22981> RTS
00031026 <AmiBlitz3_wizzard.ab2@22984>   MOVE.l linenumat,prolineat
0003102C <AmiBlitz3_wizzard.ab2@22985>   ADDQ.w #1,procnum2
00031034 <AmiBlitz3_wizzard.ab2@22986>   MOVE.w procnum2(PC),procnum
0003103A <AmiBlitz3_wizzard.ab2@22987>   MOVE.w D1,proceduremode
00031040 <AmiBlitz3_wizzard.ab2@22988>   CLR.w locvaroff
00031044 <AmiBlitz3_wizzard.ab2@22989>   CMP.w #$7B,D0
00031048 <AmiBlitz3_wizzard.ab2@22990>    BNE.w JUMP_syntaxerr
00031050 <AmiBlitz3_wizzard.ab2@22991>    MOVE.b #1,infunctioncode
00031056 <AmiBlitz3_wizzard.ab2@22992>   MOVEA.l tempvm,A0
0003105E <AmiBlitz3_wizzard.ab2@22993>   MOVE.w $C(A0),memlibstat
00031064 <AmiBlitz3_wizzard.ab2@22994>   BCLR #$7,$C(A0)                                          ;Bit out of range
00031068 <AmiBlitz3_wizzard.ab2@22995>   MOVE.w #$4EF9,D1
0003106C <AmiBlitz3_wizzard.ab2@22996>    BSR.w writeword
00031072 <AmiBlitz3_wizzard.ab2@22997>    JSR addoff
00031076 <AmiBlitz3_wizzard.ab2@22998>    BSR.w writelong
0003107C <AmiBlitz3_wizzard.ab2@22999>    JSR findproc                                          ;findproc function
00031080 <AmiBlitz3_wizzard.ab2@23000>    BEQ.w JUMP_dupprocerr
00031086 <AmiBlitz3_wizzard.ab2@23001>    JSR addlabel
0003108C <AmiBlitz3_wizzard.ab2@23002>    MOVE.b #31,$20(a2)                                      ;increase if more pars
00031092 <AmiBlitz3_wizzard.ab2@23003>    MOVE.b #0,isfunc(a2)
0003109A <AmiBlitz3_wizzard.ab2@23004>    MOVE.l functionreturntype,funcstruct_returntype(a2)
000310A2 <AmiBlitz3_wizzard.ab2@23005>   MOVE.l destpointer,$E(A2)
000310A8 <AmiBlitz3_wizzard.ab2@23006>   MOVE.l A2,currentfunction
000310AE <AmiBlitz3_wizzard.ab2@23007>   LEA nops8,A0
000310B4 <AmiBlitz3_wizzard.ab2@23008>   LEA dataget,A1
000310B8 <AmiBlitz3_wizzard.ab2@23009>    BSR.w pokecode2
000310BE <AmiBlitz3_wizzard.ab2@23010>   TST.b debugmode
000310C2 <AmiBlitz3_wizzard.ab2@23011>    BEQ.b JL_0_D3AA
000310C4 <AmiBlitz3_wizzard.ab2@23012>   MOVEQ.l #$04,D1
000310CA <AmiBlitz3_wizzard.ab2@23013>    JSR writetrap
000310D4 <AmiBlitz3_wizzard.ab2@23014>   MOVE.l destpointer,proclocals
000310D8 <AmiBlitz3_wizzard.ab2@23015>    BSR.w writelong
000310DC <AmiBlitz3_wizzard.ab2@23016>    BSR.w writelong
000310E0 <AmiBlitz3_wizzard.ab2@23019>    LEA $16(A2),A4
000310E8 <AmiBlitz3_wizzard.ab2@23020>   MOVE.b proceduremode+1,$5(A2)
000310EA <AmiBlitz3_wizzard.ab2@23021>   MOVEQ.l #$00,D6
000310EC <AmiBlitz3_wizzard.ab2@23022>   MOVEQ.l #$00,D5
000310F2 <AmiBlitz3_wizzard.ab2@23023>    JSR get1bytemain
000310F6 <AmiBlitz3_wizzard.ab2@23024>   CMP.w #$7D,D0
000310FA <AmiBlitz3_wizzard.ab2@23025>    BEQ.w JL_0_D466
000310FE <AmiBlitz3_wizzard.ab2@23028>    CMP.b #"@",d0
00031102 <AmiBlitz3_wizzard.ab2@23029>    BNE 'l2
00031104 <AmiBlitz3_wizzard.ab2@23030>    MOVE.l a0,-(a7)
0003110A <AmiBlitz3_wizzard.ab2@23031>    MOVE.l currentfunction,a0
00031110 <AmiBlitz3_wizzard.ab2@23032>    CMP.b #31,$20(a0)                                       ;increase if morepars
00031114 <AmiBlitz3_wizzard.ab2@23033>    BNE 'l1
00031118 <AmiBlitz3_wizzard.ab2@23034>    MOVE.b d6,$20(a0)                                       ;increase if morepar
0003111E <AmiBlitz3_wizzard.ab2@23037>    JSR get1bytemain
00031120 <AmiBlitz3_wizzard.ab2@23038>    MOVE.l (a7)+,a0
00031124 <AmiBlitz3_wizzard.ab2@23041>    BSR.w getparameter
00031128 <AmiBlitz3_wizzard.ab2@23042>    BSR.w JL_0_8E3C
00031130 <AmiBlitz3_wizzard.ab2@23043>   CMPI.l #$7,$4(A2)
00031134 <AmiBlitz3_wizzard.ab2@23044>    BNE.w JL_0_D3F6
0003113A <AmiBlitz3_wizzard.ab2@23045>   LEA stbuff,A0
0003113C <AmiBlitz3_wizzard.ab2@23046>   MOVE.w D5,D1
0003113E <AmiBlitz3_wizzard.ab2@23047>   LSL.w #2,D1
00031142 <AmiBlitz3_wizzard.ab2@23048>   MOVE.w D6,$0(A0,D1.W)
00031148 <AmiBlitz3_wizzard.ab2@23049>   MOVE.w $4(A3),$2(A0,D1.W)
0003114A <AmiBlitz3_wizzard.ab2@23050>   ADDQ.w #1,D5
0003114C <AmiBlitz3_wizzard.ab2@23051>   MOVEQ.l #$07,D2
00031150 <AmiBlitz3_wizzard.ab2@23052> BRA.w JL_0_D442
00031156 <AmiBlitz3_wizzard.ab2@23055> JMP toovarerr
0003115A <AmiBlitz3_wizzard.ab2@23058>   MOVE.w #$2940,D1
0003115C <AmiBlitz3_wizzard.ab2@23059>   MOVEQ.l #$03,D2
00031164 <AmiBlitz3_wizzard.ab2@23060>   BTST #$0,flagmask+1
00031168 <AmiBlitz3_wizzard.ab2@23061>    BNE.w JL_0_D430
00031170 <AmiBlitz3_wizzard.ab2@23062>   CMPI.l #$100,$4(A2)
00031174 <AmiBlitz3_wizzard.ab2@23063>    BCC.w JUMP_illprocperr
00031178 <AmiBlitz3_wizzard.ab2@23064>   MOVE.w $6(A2),D2
0003117C <AmiBlitz3_wizzard.ab2@23065>   CMP.w #$2,D2
00031180 <AmiBlitz3_wizzard.ab2@23066>    BHI.w JL_0_D430
00031184 <AmiBlitz3_wizzard.ab2@23067>    BEQ.w JL_0_D42C
00031188 <AmiBlitz3_wizzard.ab2@23068>   EORI.w #$3000,D1
0003118C <AmiBlitz3_wizzard.ab2@23069> BRA.w JL_0_D430
00031192 <AmiBlitz3_wizzard.ab2@23072> JMP more6pard
00031196 <AmiBlitz3_wizzard.ab2@23075>   ORI.w #$1000,D1
00031198 <AmiBlitz3_wizzard.ab2@23078>   OR.w D6,D1
0003119E <AmiBlitz3_wizzard.ab2@23079>   TST.b fpu
000311A2 <AmiBlitz3_wizzard.ab2@23080>   BEQ 'nofpu
000311A6 <AmiBlitz3_wizzard.ab2@23081>   CMP.b #5,d2
000311AA <AmiBlitz3_wizzard.ab2@23082>   BNE 'nofpu
000311AE <AmiBlitz3_wizzard.ab2@23083>   CMP.w #6,d6
000311B2 <AmiBlitz3_wizzard.ab2@23084>   BLT 'l10a
000311B8 <AmiBlitz3_wizzard.ab2@23085>   CMP.l #newtype_double,a2
000311BC <AmiBlitz3_wizzard.ab2@23086>   BEQ JUMP_more6pard
000311C0 <AmiBlitz3_wizzard.ab2@23087> BRA 'nofpu
000311C6 <AmiBlitz3_wizzard.ab2@23090>   MOVE.l #$f22c6400,d1
000311CA <AmiBlitz3_wizzard.ab2@23091>   MOVEM.l d0/a4,-(a7)
000311CC <AmiBlitz3_wizzard.ab2@23092>   MOVE.l d6,d0
000311CE <AmiBlitz3_wizzard.ab2@23093>   ASL.l #7,d0
000311D0 <AmiBlitz3_wizzard.ab2@23094>   OR.w d0,d1
000311D6 <AmiBlitz3_wizzard.ab2@23095>   CMP.l #newtype_double,a2
000311DA <AmiBlitz3_wizzard.ab2@23096>   BNE 'l1
000311E0 <AmiBlitz3_wizzard.ab2@23097>   OR.l #$1000,d1
000311E4 <AmiBlitz3_wizzard.ab2@23100>   BSR writelong
000311E8 <AmiBlitz3_wizzard.ab2@23101>   MOVE.w 4(a3),d1
000311EC <AmiBlitz3_wizzard.ab2@23102>   BSR writeword
000311F0 <AmiBlitz3_wizzard.ab2@23103>   MOVEM.l (a7)+,a4/d0
000311F4 <AmiBlitz3_wizzard.ab2@23104> BRA JL_0_D442
000311F6 <AmiBlitz3_wizzard.ab2@23107>   MOVE.l A4,-(A7)
000311FA <AmiBlitz3_wizzard.ab2@23108>    CMP.w #6,d6
000311FE <AmiBlitz3_wizzard.ab2@23109>    BLT 'l10
00031202 <AmiBlitz3_wizzard.ab2@23110>    MOVE.w #$c500-4,d1                                      ;savetemp+regnum
00031204 <AmiBlitz3_wizzard.ab2@23111>    ADD.w d6,d1
0003120A <AmiBlitz3_wizzard.ab2@23112>    JSR Atokejsr
00031210 <AmiBlitz3_wizzard.ab2@23113>    TST.w dontwrite
00031214 <AmiBlitz3_wizzard.ab2@23114>    BNE 'l10
0003121A <AmiBlitz3_wizzard.ab2@23115>    MOVE.l data1start,d1
00031220 <AmiBlitz3_wizzard.ab2@23116>    MOVE.l destpointer,a4
00031224 <AmiBlitz3_wizzard.ab2@23117>    ADD.l d1,-6(a4)
0003122A <AmiBlitz3_wizzard.ab2@23118>    MOVE.l destpointer,d1
0003122C <AmiBlitz3_wizzard.ab2@23119>    SUBQ.l #6,d1
00031232 <AmiBlitz3_wizzard.ab2@23120>    SUB.l destbufferstart,d1
00031234 <AmiBlitz3_wizzard.ab2@23122>    MOVE.l d2,-(a7)
00031236 <AmiBlitz3_wizzard.ab2@23123>    MOVE.l d1,d2
0003123C <AmiBlitz3_wizzard.ab2@23124>    JSR addhunkoffset                                       ;move.l $0,-x(a4)
0003123E <AmiBlitz3_wizzard.ab2@23125>    MOVE.l (a7)+,d2
00031244 <AmiBlitz3_wizzard.ab2@23126>    MOVE.l destpointer,a4
00031248 <AmiBlitz3_wizzard.ab2@23127>    CMP.w #2,d2
0003124C <AmiBlitz3_wizzard.ab2@23128>    BNE 'nw1
00031252 <AmiBlitz3_wizzard.ab2@23130>    MOVE.w #$3979,-8(a4)                                    ;move.w $0,-x(a4)
0003125A <AmiBlitz3_wizzard.ab2@23131>    ADD.l #2,-6(a4)
0003125E <AmiBlitz3_wizzard.ab2@23134>    CMP.w #1,d2
00031262 <AmiBlitz3_wizzard.ab2@23135>    BNE 'nb
00031268 <AmiBlitz3_wizzard.ab2@23136>    MOVE.w #$1979,-8(a4)                                    ;move.b $0,-x(a4)
00031270 <AmiBlitz3_wizzard.ab2@23137>    ADD.l #3,-6(a4)
00031276 <AmiBlitz3_wizzard.ab2@23140>    MOVE.w $4(a3),-2(a4)
0003127A <AmiBlitz3_wizzard.ab2@23141> BRA 'ne1
0003127E <AmiBlitz3_wizzard.ab2@23144>   BSR.w writeword                                          ;write storeparameter
00031282 <AmiBlitz3_wizzard.ab2@23147>   MOVE.w $4(A3),D1
00031286 <AmiBlitz3_wizzard.ab2@23148>    BSR.w writeword
00031288 <AmiBlitz3_wizzard.ab2@23151>   MOVEA.l (A7)+,A4
0003128E <AmiBlitz3_wizzard.ab2@23154>   CLR.l functionreturntype
00031290 <AmiBlitz3_wizzard.ab2@23155>   ADDQ.w #1,D6
00031294 <AmiBlitz3_wizzard.ab2@23156>   CMP.w #11,D6                                             ;max function parameters
00031298 <AmiBlitz3_wizzard.ab2@23157>    BCC.w JUMP_toovarerr
0003129E <AmiBlitz3_wizzard.ab2@23158>   MOVE.l currentfunction,a0
000312A2 <AmiBlitz3_wizzard.ab2@23159>   MOVE.l a2,funcstruct_parametertype-4(a0,d6*4)                                    ;-4 because d6 is increment before
000312A4 <AmiBlitz3_wizzard.ab2@23160>   MOVE.b D2,(A4)+
000312A8 <AmiBlitz3_wizzard.ab2@23161>   CMP.w #$2C,D0
000312AC <AmiBlitz3_wizzard.ab2@23162>    BNE.w JL_0_D45E
000312B2 <AmiBlitz3_wizzard.ab2@23163>    JSR get1bytemain
000312B6 <AmiBlitz3_wizzard.ab2@23175> BRA.w JL_0_D3C6
000312BA <AmiBlitz3_wizzard.ab2@23178>   CMP.w #$7D,D0
000312BE <AmiBlitz3_wizzard.ab2@23179>    BNE.w JUMP_syntaxerr
000312C4 <AmiBlitz3_wizzard.ab2@23182>   MOVEA.l currentfunction,A2
000312C6 <AmiBlitz3_wizzard.ab2@23183>   LSL.w #4,D5
000312C8 <AmiBlitz3_wizzard.ab2@23184>   OR.w D5,D6
000312CC <AmiBlitz3_wizzard.ab2@23185>   MOVE.b D6,$4(A2)
000312CE <AmiBlitz3_wizzard.ab2@23186>   LSR.w #4,D6
000312D2 <AmiBlitz3_wizzard.ab2@23187>    BEQ.w JL_0_D4C4
000312D8 <AmiBlitz3_wizzard.ab2@23188>   LEA stbuff,A0
000312DA <AmiBlitz3_wizzard.ab2@23189>   SUBQ.w #1,D6
000312DC <AmiBlitz3_wizzard.ab2@23192>     MOVE.w D6,D1                                           ;function stringpars
000312DE <AmiBlitz3_wizzard.ab2@23193>     LSL.w #2,D1                                            ;stringsize was 2
000312E0 <AmiBlitz3_wizzard.ab2@23195>       LSL.w #1,d1
000312E2 <AmiBlitz3_wizzard.ab2@23196>       ADDQ.w #4,d1
000312E4 <AmiBlitz3_wizzard.ab2@23198>     ADDQ.w #8,D1
000312EA <AmiBlitz3_wizzard.ab2@23199>     MOVE.w D1,funcst+2
000312F0 <AmiBlitz3_wizzard.ab2@23200>     MOVE.l funcst,D1
000312F4 <AmiBlitz3_wizzard.ab2@23201>     BSR.w writelong
000312F6 <AmiBlitz3_wizzard.ab2@23202>     MOVE.w (A0)+,D1
000312FA <AmiBlitz3_wizzard.ab2@23203>     CMP.b #5,d1
000312FE <AmiBlitz3_wizzard.ab2@23204>     BLE 's1
00031302 <AmiBlitz3_wizzard.ab2@23205>     MOVE.w #$266c,d1                                       ;native move.l 4(a4),a3
00031306 <AmiBlitz3_wizzard.ab2@23206>     BSR writeinstruction
00031308 <AmiBlitz3_wizzard.ab2@23207>     MOVE.w D6,D1                                           ;function stringpars
0003130A <AmiBlitz3_wizzard.ab2@23208>     LSL.w #2,D1                                            ;stringsize was 2
0003130C <AmiBlitz3_wizzard.ab2@23210>       LSL.w #1,d1
0003130E <AmiBlitz3_wizzard.ab2@23212>     ADDQ.w #8,D1
00031312 <AmiBlitz3_wizzard.ab2@23213>     BSR writeword
00031316 <AmiBlitz3_wizzard.ab2@23214>   BRA 's2
0003131C <AmiBlitz3_wizzard.ab2@23217>     OR.w movedna3,D1
00031320 <AmiBlitz3_wizzard.ab2@23218>      BSR.w writeword
00031326 <AmiBlitz3_wizzard.ab2@23221>     MOVE.w (A0)+,least+2
0003132C <AmiBlitz3_wizzard.ab2@23222>     MOVE.l least,D1
00031330 <AmiBlitz3_wizzard.ab2@23223>      BSR.w writelong
00031332 <AmiBlitz3_wizzard.ab2@23224>     MOVE.l A0,-(A7)
00031336 <AmiBlitz3_wizzard.ab2@23225>     MOVE.w #$C700,D1
0003133A <AmiBlitz3_wizzard.ab2@23226>      BSR.w Atokejsr
0003133C <AmiBlitz3_wizzard.ab2@23227>     MOVEA.l (A7)+,A0
00031340 <AmiBlitz3_wizzard.ab2@23228>   DBF D6,JL_0_D482
00031346 <AmiBlitz3_wizzard.ab2@23231> JMP get1bytemain
0003134C <AmiBlitz3_wizzard.ab2@23235>   MOVE.w dontwrite,D1
00031350 <AmiBlitz3_wizzard.ab2@23236>    BNE.w JL_0_D4F6
00031356 <AmiBlitz3_wizzard.ab2@23237>   MOVE.l destpointer,-(A7)
0003135C <AmiBlitz3_wizzard.ab2@23238>   MOVE.l A0,destpointer
00031362 <AmiBlitz3_wizzard.ab2@23239>   MOVE.l linksize,D1
00031366 <AmiBlitz3_wizzard.ab2@23240>    BSR.w writelong                                         ;writefunctions jumppos
0003136C <AmiBlitz3_wizzard.ab2@23241>    TST.b fastfunc
00031370 <AmiBlitz3_wizzard.ab2@23242>    BNE 'skip
00031374 <AmiBlitz3_wizzard.ab2@23243>   MOVE.w #$CC00,D1
00031378 <AmiBlitz3_wizzard.ab2@23244>    BSR.w tokejsr2                                          ;write clearvars
0003137E <AmiBlitz3_wizzard.ab2@23247>   MOVE.l (A7)+,destpointer
00031380 <AmiBlitz3_wizzard.ab2@23250> RTS
00031386 <AmiBlitz3_wizzard.ab2@23254>   MOVEA.l currentfunction,A2
0003138A <AmiBlitz3_wizzard.ab2@23255>   MOVEA.l $E(A2),A0
0003138E <AmiBlitz3_wizzard.ab2@23256>   MOVE.w $6(A2),D1
00031392 <AmiBlitz3_wizzard.ab2@23257>    BEQ.w JL_0_D538
00031398 <AmiBlitz3_wizzard.ab2@23258>   MOVE.w D1,linksize+2
0003139C <AmiBlitz3_wizzard.ab2@23259>   MOVE.w $8(A2),D1                                         ;check if function memalloc need
000313A0 <AmiBlitz3_wizzard.ab2@23260>    BNE.w JL_0_D522
000313A2 <AmiBlitz3_wizzard.ab2@23261>   ADDQ.w #6,A0
000313A6 <AmiBlitz3_wizzard.ab2@23262>   MOVE.l A0,$E(A2)
000313AA <AmiBlitz3_wizzard.ab2@23263> BRA.w JL_0_D4C8
000313AC <AmiBlitz3_wizzard.ab2@23266>   MOVE.l A0,-(A7)
000313B0 <AmiBlitz3_wizzard.ab2@23267>    BSR.w JL_0_D4C8
000313B2 <AmiBlitz3_wizzard.ab2@23268>   MOVEA.l (A7)+,A0
000313B6 <AmiBlitz3_wizzard.ab2@23269>   LEA $A(A0),A0
000313BC <AmiBlitz3_wizzard.ab2@23270>   MOVEA.l currentfunction,A2
000313C0 <AmiBlitz3_wizzard.ab2@23271> BRA.w JL_0_D54A
000313C4 <AmiBlitz3_wizzard.ab2@23274>   MOVE.w $8(A2),D1
000313C8 <AmiBlitz3_wizzard.ab2@23275>    BNE.w JL_0_D54A
000313CC <AmiBlitz3_wizzard.ab2@23276>   LEA $10(A0),A0
000313D0 <AmiBlitz3_wizzard.ab2@23277>   MOVE.l A0,$E(A2)
000313D2 <AmiBlitz3_wizzard.ab2@23278> RTS
000313D8 <AmiBlitz3_wizzard.ab2@23282> JMP errormsg_nofast
000313DE <AmiBlitz3_wizzard.ab2@23285>    MOVE.w dontwrite,D1                                     ;writeallocmem for functions (after releasemem called)
000313E2 <AmiBlitz3_wizzard.ab2@23286>    BNE.w JL_0_D580
000313E8 <AmiBlitz3_wizzard.ab2@23287>    TST.b fastfunc
000313EC <AmiBlitz3_wizzard.ab2@23288>    BNE JUMP_errormsg_nofast
000313F2 <AmiBlitz3_wizzard.ab2@23289>   MOVE.l destpointer,-(A7)
000313F8 <AmiBlitz3_wizzard.ab2@23290>   MOVE.l A0,destpointer
000313FC <AmiBlitz3_wizzard.ab2@23291>   MOVE.w #$4EB9,D1
00031400 <AmiBlitz3_wizzard.ab2@23292>    BSR.w writeword
00031406 <AmiBlitz3_wizzard.ab2@23293>    JSR addoff
0003140A <AmiBlitz3_wizzard.ab2@23294>    BSR.w writelong
0003140C <AmiBlitz3_wizzard.ab2@23295>   MOVEA.l (A7)+,A0
00031412 <AmiBlitz3_wizzard.ab2@23296>   MOVEA.l destpointer,A1
00031414 <AmiBlitz3_wizzard.ab2@23297>   MOVE.l A0,-(A1)
0003141A <AmiBlitz3_wizzard.ab2@23298>   MOVE.l A0,destpointer
0003141E <AmiBlitz3_wizzard.ab2@23301>   MOVE.w $8(A2),D4
00031422 <AmiBlitz3_wizzard.ab2@23302>    BPL.w JL_0_D59E
00031426 <AmiBlitz3_wizzard.ab2@23303>   MOVE.w #$C004,D1
0003142A <AmiBlitz3_wizzard.ab2@23304>    BSR.w tokejsr2
00031430 <AmiBlitz3_wizzard.ab2@23305>   MOVEA.l currentfunction,A2
00031434 <AmiBlitz3_wizzard.ab2@23306>   MOVE.w $8(A2),D4
00031438 <AmiBlitz3_wizzard.ab2@23307>   ANDI.w #$7FFF,D4
0003143C <AmiBlitz3_wizzard.ab2@23310>    BEQ.w JL_0_D5E0
00031440 <AmiBlitz3_wizzard.ab2@23311>   MOVE.b $4(A2),D1
00031444 <AmiBlitz3_wizzard.ab2@23312>   ANDI.w #$F,D1
00031446 <AmiBlitz3_wizzard.ab2@23313>   MOVE.w D1,-(A7)
0003144A <AmiBlitz3_wizzard.ab2@23314>   CMP.w #$5,D1
0003144E <AmiBlitz3_wizzard.ab2@23315>    BCS.w JL_0_D5BC
00031452 <AmiBlitz3_wizzard.ab2@23316>   MOVE.w #$2F04,D1
00031456 <AmiBlitz3_wizzard.ab2@23317>    BSR.w writeword
0003145C <AmiBlitz3_wizzard.ab2@23320>   MOVE.l locdatast,D3
00031462 <AmiBlitz3_wizzard.ab2@23321>    JSR datastart
00031466 <AmiBlitz3_wizzard.ab2@23322>   MOVE.w #$C501,D1
0003146A <AmiBlitz3_wizzard.ab2@23323>    BSR.w tokejsr2
0003146C <AmiBlitz3_wizzard.ab2@23324>   MOVE.w (A7)+,D1
00031470 <AmiBlitz3_wizzard.ab2@23325>   CMP.w #$5,D1
00031474 <AmiBlitz3_wizzard.ab2@23326>    BCS.w JL_0_D5E0
00031478 <AmiBlitz3_wizzard.ab2@23327>   MOVE.w #$281F,D1
0003147C <AmiBlitz3_wizzard.ab2@23328>    BSR.w writeword
00031480 <AmiBlitz3_wizzard.ab2@23330>   MOVE.w #$4E75,D1
00031484 <AmiBlitz3_wizzard.ab2@23331> BRA.w writeword
0003148A <AmiBlitz3_wizzard.ab2@23335>   LEA mwait,A0
00031490 <AmiBlitz3_wizzard.ab2@23336>   LEA mwaitf,A1
00031494 <AmiBlitz3_wizzard.ab2@23337> BRA.w pokecode
0003149A <AmiBlitz3_wizzard.ab2@23341> JMP laberr
0003149E <AmiBlitz3_wizzard.ab2@23344>   CMP.w #$2E,D0
000314A2 <AmiBlitz3_wizzard.ab2@23345>   BNE.w JUMP_syntaxerr
000314A8 <AmiBlitz3_wizzard.ab2@23346>   JSR getparameter2
000314AC <AmiBlitz3_wizzard.ab2@23347>   BEQ.w JUMP_laberr
000314B2 <AmiBlitz3_wizzard.ab2@23348>   LEA newtypebase,A2
000314B8 <AmiBlitz3_wizzard.ab2@23349>   JSR findtype
000314BC <AmiBlitz3_wizzard.ab2@23350>   BNE.w JL_0_D626
000314C4 <AmiBlitz3_wizzard.ab2@23351>   CMPI.l #MaxByte,$4(A2)
000314C8 <AmiBlitz3_wizzard.ab2@23352>   BNE.w JUMP_typeerr
000314CC <AmiBlitz3_wizzard.ab2@23353> BRA.w JL_0_D62A
000314D2 <AmiBlitz3_wizzard.ab2@23356> JMP typeerr
000314D8 <AmiBlitz3_wizzard.ab2@23359>   JSR addlabel
000314DC <AmiBlitz3_wizzard.ab2@23362>   CLR.l $4(A2)
000314E2 <AmiBlitz3_wizzard.ab2@23363>   MOVE.l A2,thistype
000314E8 <AmiBlitz3_wizzard.ab2@23364>   CLR.l prevtype
000314EE <AmiBlitz3_wizzard.ab2@23365>   CLR.w typelen
000314F4 <AmiBlitz3_wizzard.ab2@23366>   CLR.w linemode
000314FA <AmiBlitz3_wizzard.ab2@23367>   JSR reget
000314FE <AmiBlitz3_wizzard.ab2@23368>   BNE.w typemode
00031500 <AmiBlitz3_wizzard.ab2@23369> RTS
00031504 <AmiBlitz3_wizzard.ab2@23372>   CMP.w #-$7FFE,D0
00031508 <AmiBlitz3_wizzard.ab2@23373>   BEQ.w JL_0_D82E
00031512 <AmiBlitz3_wizzard.ab2@23375>   MOVE.w oldqflag,instringon
00031518 <AmiBlitz3_wizzard.ab2@23376>   MOVEA.l lastsourcepos,A5
0003151A <AmiBlitz3_wizzard.ab2@23377>   MOVEQ.l #$00,D6
0003151E <AmiBlitz3_wizzard.ab2@23378>   CMP.w #$2A,D0
00031522 <AmiBlitz3_wizzard.ab2@23379>   BNE.w JL_0_D670
00031524 <AmiBlitz3_wizzard.ab2@23380>   MOVEQ.l #$01,D6
0003152A <AmiBlitz3_wizzard.ab2@23381>   JSR get1bytemain
0003152E <AmiBlitz3_wizzard.ab2@23382> BRA.w JL_0_D67E
00031532 <AmiBlitz3_wizzard.ab2@23385>   CMP.w #$40,D0
00031536 <AmiBlitz3_wizzard.ab2@23386>   BNE.w JL_0_D67E
00031538 <AmiBlitz3_wizzard.ab2@23387>   MOVEQ.l #$05,D6
0003153E <AmiBlitz3_wizzard.ab2@23388>   JSR get1bytemain
00031544 <AmiBlitz3_wizzard.ab2@23391>   MOVE.w D6,flagmask
0003154A <AmiBlitz3_wizzard.ab2@23392>   JSR getparameter2
0003154E <AmiBlitz3_wizzard.ab2@23393>   BEQ.w JUMP_syntaxerr
00031554 <AmiBlitz3_wizzard.ab2@23394>   MOVEA.l thistype,A2
00031556 <AmiBlitz3_wizzard.ab2@23395>   ADDQ.w #4,A2
0003155C <AmiBlitz3_wizzard.ab2@23396>   JSR findvariable2
00031560 <AmiBlitz3_wizzard.ab2@23397>   BEQ.w JUMP_dupofferr
00031566 <AmiBlitz3_wizzard.ab2@23398>   JSR addlabel
00031568 <AmiBlitz3_wizzard.ab2@23399>   MOVE.l A2,-(A7)
0003156C <AmiBlitz3_wizzard.ab2@23400>   CMP.w #$2E,D0
00031570 <AmiBlitz3_wizzard.ab2@23401>    BEQ.w JL_0_D6CE
00031574 <AmiBlitz3_wizzard.ab2@23402>   CMP.w #$24,D0
00031578 <AmiBlitz3_wizzard.ab2@23403>    BNE.w JL_0_D6C0
0003157E <AmiBlitz3_wizzard.ab2@23404>   MOVE.l #newtype_string,D2
00031584 <AmiBlitz3_wizzard.ab2@23405>    JSR get1bytemain
00031588 <AmiBlitz3_wizzard.ab2@23406> BRA.w JL_0_D710
0003158E <AmiBlitz3_wizzard.ab2@23409> JMP dupofferr
00031594 <AmiBlitz3_wizzard.ab2@23412>   MOVE.l prevtype,D2
00031598 <AmiBlitz3_wizzard.ab2@23413>   BEQ.w JUMP_notypeerr
0003159C <AmiBlitz3_wizzard.ab2@23414> BRA.w JL_0_D706
000315A2 <AmiBlitz3_wizzard.ab2@23417> JMP notypeerr
000315A8 <AmiBlitz3_wizzard.ab2@23420>   JSR getparameter2
000315AC <AmiBlitz3_wizzard.ab2@23421>    BEQ.w JUMP_syntaxerr
000315B2 <AmiBlitz3_wizzard.ab2@23422>   LEA newtypebase,A2
000315B8 <AmiBlitz3_wizzard.ab2@23423>    JSR findtype
000315BC <AmiBlitz3_wizzard.ab2@23424>    BEQ.w JL_0_D704
000315C4 <AmiBlitz3_wizzard.ab2@23425>   BTST #$0,flagmask+1
000315C8 <AmiBlitz3_wizzard.ab2@23426>    BEQ.w JUMP_notypeerr
000315CE <AmiBlitz3_wizzard.ab2@23427>   JSR addlabel
000315D6 <AmiBlitz3_wizzard.ab2@23430>   MOVE.w linenumat+2,$8(A2)
000315DE <AmiBlitz3_wizzard.ab2@23431>   MOVE.l #MaxByte,$4(A2)
000315E0 <AmiBlitz3_wizzard.ab2@23434>   MOVE.l A2,D2
000315E6 <AmiBlitz3_wizzard.ab2@23437>   CMP.l #newtype_byte,D2
000315EA <AmiBlitz3_wizzard.ab2@23438>    BEQ.w JL_0_D71E
000315F0 <AmiBlitz3_wizzard.ab2@23441>   ADDQ.w #1,typelen
000315F8 <AmiBlitz3_wizzard.ab2@23442>   BCLR #$0,typelen+1
000315FA <AmiBlitz3_wizzard.ab2@23445>   MOVEQ.l #$00,D3
000315FC <AmiBlitz3_wizzard.ab2@23446>   MOVEA.l D2,A2
00031602 <AmiBlitz3_wizzard.ab2@23447>   MOVE.l A2,prevtype
00031606 <AmiBlitz3_wizzard.ab2@23448>   MOVE.w $8(A2),D3
00031608 <AmiBlitz3_wizzard.ab2@23449>   MOVEA.l (A7)+,A2
0003160C <AmiBlitz3_wizzard.ab2@23450>   MOVE.l D2,$A(A2)
0003160E <AmiBlitz3_wizzard.ab2@23451>   MOVEQ.l #$00,D4
00031614 <AmiBlitz3_wizzard.ab2@23452>   MOVE.w typelen,D4
00031618 <AmiBlitz3_wizzard.ab2@23453>   MOVE.w D4,$4(A2)
00031620 <AmiBlitz3_wizzard.ab2@23454>   BTST #$0,flagmask+1
00031624 <AmiBlitz3_wizzard.ab2@23455>    BEQ.w JL_0_D74C
00031626 <AmiBlitz3_wizzard.ab2@23456>   MOVEQ.l #$04,D3
0003162A <AmiBlitz3_wizzard.ab2@23459>   CMP.w #$5B,D0
0003162E <AmiBlitz3_wizzard.ab2@23460>    BNE.w JL_0_D782
00031632 <AmiBlitz3_wizzard.ab2@23461>   MOVEM.l D3-D4/A2,-(A7)
00031636 <AmiBlitz3_wizzard.ab2@23462>    BSR.w AJL_0_BF6E
0003163A <AmiBlitz3_wizzard.ab2@23463>   CMP.w #$5D,D0
0003163E <AmiBlitz3_wizzard.ab2@23464>    BNE.w JUMP_syntaxerr
00031640 <AmiBlitz3_wizzard.ab2@23465>   TST.w D6
00031644 <AmiBlitz3_wizzard.ab2@23466>    BNE.w JUMP_fpconerr
00031646 <AmiBlitz3_wizzard.ab2@23467>   MOVE.l D3,D1
0003164A <AmiBlitz3_wizzard.ab2@23468>   MOVEM.l (A7)+,D3-D4/A2
00031650 <AmiBlitz3_wizzard.ab2@23469>    JSR get1bytemain
00031654 <AmiBlitz3_wizzard.ab2@23470>   MOVE.w D1,$8(A2)
00031658 <AmiBlitz3_wizzard.ab2@23471>   MULU.l d1,d3                                             ;>32k fix was mulu.w
00031660 <AmiBlitz3_wizzard.ab2@23472>   ORI.w #$2,flagmask
00031662 <AmiBlitz3_wizzard.ab2@23475>   ADD.l D3,D4
00031668 <AmiBlitz3_wizzard.ab2@23478>     CMP.l #65532,d4
0003166C <AmiBlitz3_wizzard.ab2@23483>   BCC JUMP_toolongerr
00031674 <AmiBlitz3_wizzard.ab2@23484>   MOVE.w flagmask,$6(A2)
0003167A <AmiBlitz3_wizzard.ab2@23485>   MOVE.w D4,typelen
0003167C <AmiBlitz3_wizzard.ab2@23486> RTS
00031682 <AmiBlitz3_wizzard.ab2@23489> JMP badenderr
00031688 <AmiBlitz3_wizzard.ab2@23492> JMP noiferr
0003168E <AmiBlitz3_wizzard.ab2@23495> JMP toolongerr
00031694 <AmiBlitz3_wizzard.ab2@23498> JMP fpconerr
0003169A <AmiBlitz3_wizzard.ab2@23501>   MOVE.l firstiff,D0
0003169E <AmiBlitz3_wizzard.ab2@23502>    BEQ.w JUMP_noiferr
000316A0 <AmiBlitz3_wizzard.ab2@23503>   MOVEA.l D0,A0
000316A4 <AmiBlitz3_wizzard.ab2@23504>   MOVE.w $C(A0),D0
000316A8 <AmiBlitz3_wizzard.ab2@23505>   ANDI.w #$FF,D0
000316AA <AmiBlitz3_wizzard.ab2@23506>   CMP.w D0,D1
000316AE <AmiBlitz3_wizzard.ab2@23507>    BNE.w JUMP_badenderr
000316B2 <AmiBlitz3_wizzard.ab2@23510>   CMP.w #$1,D1
000316B6 <AmiBlitz3_wizzard.ab2@23511>   BNE.w JL_0_D7D8
000316BA <AmiBlitz3_wizzard.ab2@23512>   MOVE.w #$6000,D1
000316C0 <AmiBlitz3_wizzard.ab2@23515>     TST.b fast
000316C4 <AmiBlitz3_wizzard.ab2@23516>     BEQ 'l1
000316CA <AmiBlitz3_wizzard.ab2@23517>     OR.l #$ff,d1
000316CE <AmiBlitz3_wizzard.ab2@23521>   BSR.w writeword
000316D4 <AmiBlitz3_wizzard.ab2@23522>   MOVEA.l destpointer,A1
000316D8 <AmiBlitz3_wizzard.ab2@23523>   MOVE.l $4(A0),D1
000316DA <AmiBlitz3_wizzard.ab2@23524>   SUB.l A1,D1
000316E0 <AmiBlitz3_wizzard.ab2@23527>     TST.b fast
000316E4 <AmiBlitz3_wizzard.ab2@23528>     BEQ 'l2
000316E8 <AmiBlitz3_wizzard.ab2@23529>     BSR writelong
000316EC <AmiBlitz3_wizzard.ab2@23530>   BRA JL_0_D7D8
000316F0 <AmiBlitz3_wizzard.ab2@23534>   BSR.w writeword
000316F4 <AmiBlitz3_wizzard.ab2@23537>   MOVEA.l $8(A0),A1                                        ;write if branch destination
000316FA <AmiBlitz3_wizzard.ab2@23538>   MOVE.l destpointer,D1
000316FC <AmiBlitz3_wizzard.ab2@23539>   SUB.l A1,D1
00031702 <AmiBlitz3_wizzard.ab2@23542>     TST.b fast
00031706 <AmiBlitz3_wizzard.ab2@23543>     BEQ 'l1
00031708 <AmiBlitz3_wizzard.ab2@23544>     ADDQ.l #4,D1
0003170E <AmiBlitz3_wizzard.ab2@23545>     MOVE.w dontwrite,D0
00031712 <AmiBlitz3_wizzard.ab2@23546>     BNE.w JL_0_D7FE
00031716 <AmiBlitz3_wizzard.ab2@23547>     MOVE.l d1,-$4(a1)
0003171A <AmiBlitz3_wizzard.ab2@23548>   BRA JL_0_D7FE
0003171C <AmiBlitz3_wizzard.ab2@23552>   ADDQ.l #2,d1
00031722 <AmiBlitz3_wizzard.ab2@23553>   TST.w dontwrite
00031726 <AmiBlitz3_wizzard.ab2@23554>   BNE JL_0_D7FE
0003172C <AmiBlitz3_wizzard.ab2@23555>   CMP.l #MinWordSgnd,D1
00031730 <AmiBlitz3_wizzard.ab2@23556>   BCC.w JUMP_bigiferr
00031734 <AmiBlitz3_wizzard.ab2@23557>   MOVE.w D1,-$2(A1)
00031736 <AmiBlitz3_wizzard.ab2@23560> RTS
0003173C <AmiBlitz3_wizzard.ab2@23563> JMP bigiferr
00031746 <AmiBlitz3_wizzard.ab2@23568>   MOVE.w oldqflag,instringon
0003174C <AmiBlitz3_wizzard.ab2@23569>   MOVEA.l lastsourcepos,A5
0003174E <AmiBlitz3_wizzard.ab2@23572>   MOVEQ.l #$01,D1
00031752 <AmiBlitz3_wizzard.ab2@23573> BRA.w JL_0_D810
0003175C <AmiBlitz3_wizzard.ab2@23577>   MOVE.w oldqflag,instringon
00031762 <AmiBlitz3_wizzard.ab2@23578>   MOVEA.l lastsourcepos,A5
00031764 <AmiBlitz3_wizzard.ab2@23581>   MOVEQ.l #$00,D1
00031768 <AmiBlitz3_wizzard.ab2@23584>   BSR.w JL_0_D79E
0003176C <AmiBlitz3_wizzard.ab2@23585>   BSR.w AJL_0_D81C
00031772 <AmiBlitz3_wizzard.ab2@23586> JMP get1bytemain
00031778 <AmiBlitz3_wizzard.ab2@23589>   MOVE.l (A0),firstiff
0003177A <AmiBlitz3_wizzard.ab2@23590>   MOVEA.l A0,A1
0003177C <AmiBlitz3_wizzard.ab2@23591>   MOVEQ.l #$0E,D0
00031782 <AmiBlitz3_wizzard.ab2@23592>   MOVEA.l _execbase,A6
00031788 <AmiBlitz3_wizzard.ab2@23593>   MOVE.l mempool,a0
0003178C <AmiBlitz3_wizzard.ab2@23594> JMP _FreePooled(A6)
00031792 <AmiBlitz3_wizzard.ab2@23598>   JSR get1bytemain
00031796 <AmiBlitz3_wizzard.ab2@23601>   BEQ.w JL_0_D980
0003179E <AmiBlitz3_wizzard.ab2@23602>   CMP.l #"noa7",-1(a5)
000317A2 <AmiBlitz3_wizzard.ab2@23603>   BNE 'l1
000317A8 <AmiBlitz3_wizzard.ab2@23604>   JSR get1bytemain
000317AE <AmiBlitz3_wizzard.ab2@23605>   JSR get1bytemain
000317B4 <AmiBlitz3_wizzard.ab2@23606>   JSR get1bytemain
000317BC <AmiBlitz3_wizzard.ab2@23607>   MOVE.w #$3a,lastchar
000317C0 <AmiBlitz3_wizzard.ab2@23608> BRA JL_0_D980
000317C6 <AmiBlitz3_wizzard.ab2@23611>   CMP.w #"d0",-1(a5)
000317CA <AmiBlitz3_wizzard.ab2@23612>   BNE 'l2
000317D2 <AmiBlitz3_wizzard.ab2@23613>   MOVE.b #1,returncode
000317D8 <AmiBlitz3_wizzard.ab2@23614>   CLR.w lastchar
000317DC <AmiBlitz3_wizzard.ab2@23615> BRA JL_0_D980
000317E0 <AmiBlitz3_wizzard.ab2@23618>   CMP.w #$80d7,d0
000317E4 <AmiBlitz3_wizzard.ab2@23619>   BNE JL_0_D836
000317EA <AmiBlitz3_wizzard.ab2@23620>   JSR skiprest
000317EC <AmiBlitz3_wizzard.ab2@23621> RTS
000317F0 <AmiBlitz3_wizzard.ab2@23624>   BSR.w JL_0_D844
000317F6 <AmiBlitz3_wizzard.ab2@23625>   JSR reget
000317FA <AmiBlitz3_wizzard.ab2@23626>   BNE.w JL_0_D836
000317FC <AmiBlitz3_wizzard.ab2@23627> RTS
00031800 <AmiBlitz3_wizzard.ab2@23630>   CMP.w #-$7FFF,D0
00031804 <AmiBlitz3_wizzard.ab2@23631>    BNE.w JL_0_D87E
0003180A <AmiBlitz3_wizzard.ab2@23632>   MOVE.w linemode,D1
0003180E <AmiBlitz3_wizzard.ab2@23633>    BNE.w JUMP_modeerr
00031814 <AmiBlitz3_wizzard.ab2@23634>   ADDQ.w #1,typelen
0003181C <AmiBlitz3_wizzard.ab2@23635>   BCLR #$0,typelen+1
00031822 <AmiBlitz3_wizzard.ab2@23636>   MOVEA.l thistype,A0
0003182A <AmiBlitz3_wizzard.ab2@23637>   MOVE.w typelen,$8(A0)
00031832 <AmiBlitz3_wizzard.ab2@23638>   MOVE.w #$FFFF,linemode
00031838 <AmiBlitz3_wizzard.ab2@23639> JMP get1bytemain
0003183E <AmiBlitz3_wizzard.ab2@23642> JMP modeerr
00031842 <AmiBlitz3_wizzard.ab2@23645>   CMP.w #-$7FF5,D0
00031846 <AmiBlitz3_wizzard.ab2@23646>    BEQ.w JL_0_D80E
0003184A <AmiBlitz3_wizzard.ab2@23647>   CMP.w #-$7FF4,D0
0003184E <AmiBlitz3_wizzard.ab2@23648>    BEQ.w JL_0_D804
00031852 <AmiBlitz3_wizzard.ab2@23649>   CMP.w #-$7FF8,D0
00031856 <AmiBlitz3_wizzard.ab2@23650>    BNE.w JL_0_D89A
0003185A <AmiBlitz3_wizzard.ab2@23653> BRA.w JL_0_D9E8
00031860 <AmiBlitz3_wizzard.ab2@23656> JMP interr3
00031864 <AmiBlitz3_wizzard.ab2@23659>   CMP.w #-$7FF7,D0
00031868 <AmiBlitz3_wizzard.ab2@23660>    BNE.w JL_0_D8C8
0003186E <AmiBlitz3_wizzard.ab2@23661>    TST.b fpu
00031872 <AmiBlitz3_wizzard.ab2@23662>    BEQ 'nof
00031878 <AmiBlitz3_wizzard.ab2@23663>    MOVEA.l currentfunction,A0
0003187E <AmiBlitz3_wizzard.ab2@23664>    CMP.l #0,a0
00031882 <AmiBlitz3_wizzard.ab2@23665>    BEQ 'nof
00031888 <AmiBlitz3_wizzard.ab2@23666>    CMP.b #5,$5(a0)
0003188C <AmiBlitz3_wizzard.ab2@23667>     BNE 'nof
00031892 <AmiBlitz3_wizzard.ab2@23668>    MOVE.l #$f23c5000,d1
00031896 <AmiBlitz3_wizzard.ab2@23669>    BSR writelong
0003189A <AmiBlitz3_wizzard.ab2@23670>    MOVE.w #0,d1
0003189E <AmiBlitz3_wizzard.ab2@23671>    BSR writeword
000318A2 <AmiBlitz3_wizzard.ab2@23674>   MOVE.w #$7000,D1                                         ;end function moveq #0,d0
000318A6 <AmiBlitz3_wizzard.ab2@23675>    BSR.w writeword
000318AC <AmiBlitz3_wizzard.ab2@23676>   MOVEA.l currentfunction,A0
000318B2 <AmiBlitz3_wizzard.ab2@23677>   CMP.l #0,a0
000318B6 <AmiBlitz3_wizzard.ab2@23678>   BEQ JL_0_D896
000318BC <AmiBlitz3_wizzard.ab2@23679>   MOVE.l destpointer,d1
000318C0 <AmiBlitz3_wizzard.ab2@23680>   SUB.l $e(a0),d1
000318C4 <AmiBlitz3_wizzard.ab2@23681>   MOVE.l d1,isfunc+1(a0)
000318CA <AmiBlitz3_wizzard.ab2@23682>   CMPI.b #$7,$5(A0)
000318CE <AmiBlitz3_wizzard.ab2@23683>    BNE.w JL_0_D896
000318D4 <AmiBlitz3_wizzard.ab2@23684>   MOVE.w putstlen,D1
000318D8 <AmiBlitz3_wizzard.ab2@23685>    BSR.w writeword
000318DC <AmiBlitz3_wizzard.ab2@23686> BRA.w JL_0_D896
000318E2 <AmiBlitz3_wizzard.ab2@23689> JMP interr
000318E6 <AmiBlitz3_wizzard.ab2@23692>  CMP.w #-$7FD0,D0
000318EA <AmiBlitz3_wizzard.ab2@23693>    BNE.w JL_0_D966
000318F0 <AmiBlitz3_wizzard.ab2@23694>   MOVE.w proceduremode,D1
000318F4 <AmiBlitz3_wizzard.ab2@23695>    BNE.w JUMP_interr3
000318FA <AmiBlitz3_wizzard.ab2@23696>   TST.b debugmode
000318FE <AmiBlitz3_wizzard.ab2@23697>    BEQ.w JL_0_D90A
00031900 <AmiBlitz3_wizzard.ab2@23698>   MOVEQ.l #$03,D1
00031906 <AmiBlitz3_wizzard.ab2@23699>    JSR writetrap
0003190C <AmiBlitz3_wizzard.ab2@23700>   MOVE.w dontwrite,D1
00031910 <AmiBlitz3_wizzard.ab2@23701>    BNE.w JL_0_D90A
00031916 <AmiBlitz3_wizzard.ab2@23702>   MOVEA.l intcleanat,A0
0003191C <AmiBlitz3_wizzard.ab2@23703>   MOVE.l destpointer,(A0)
00031920 <AmiBlitz3_wizzard.ab2@23704>   MOVE.w #$C30C,D1
00031924 <AmiBlitz3_wizzard.ab2@23705>    BSR.w Atokejsr
0003192A <AmiBlitz3_wizzard.ab2@23708>   MOVE.w intstring,D1
0003192E <AmiBlitz3_wizzard.ab2@23709>    BEQ.w JUMP_interr
00031932 <AmiBlitz3_wizzard.ab2@23710>    BPL.w JL_0_D934
00031938 <AmiBlitz3_wizzard.ab2@23711>   MOVE.w intlevel,D1
0003193C <AmiBlitz3_wizzard.ab2@23712>   ORI.w #$7200,D1
00031940 <AmiBlitz3_wizzard.ab2@23713>    BSR.w writeword
00031944 <AmiBlitz3_wizzard.ab2@23714>   MOVE.w #$C103,D1
00031948 <AmiBlitz3_wizzard.ab2@23715>    BSR.w Atokejsr
0003194E <AmiBlitz3_wizzard.ab2@23716>   CLR.w intlevel
00031954 <AmiBlitz3_wizzard.ab2@23719>  CLR.w intstring
0003195A <AmiBlitz3_wizzard.ab2@23720>   MOVE.l intfin,D1
0003195E <AmiBlitz3_wizzard.ab2@23721>    BSR.w writelong
00031964 <AmiBlitz3_wizzard.ab2@23722>   MOVE.l #$70004E75,D1
00031968 <AmiBlitz3_wizzard.ab2@23723>    BSR.w writelong
0003196E <AmiBlitz3_wizzard.ab2@23724>   MOVE.w dontwrite,D1
00031972 <AmiBlitz3_wizzard.ab2@23725>    BNE.w JL_0_D962
00031978 <AmiBlitz3_wizzard.ab2@23726>   MOVEA.l intjmpat,A0
0003197C <AmiBlitz3_wizzard.ab2@23727>   MOVE.l destpointer(PC),(A0)
00031982 <AmiBlitz3_wizzard.ab2@23730> JMP get1bytemain
00031986 <AmiBlitz3_wizzard.ab2@23734>   CMP.w #-$7FF2,D0
0003198A <AmiBlitz3_wizzard.ab2@23735>    BEQ.w doendsel
0003198E <AmiBlitz3_wizzard.ab2@23736>   CMP.w #-$7F4C,D0
00031992 <AmiBlitz3_wizzard.ab2@23737>    BNE.w JL_0_D97C
00031998 <AmiBlitz3_wizzard.ab2@23738> JMP doendseterr
0003199E <AmiBlitz3_wizzard.ab2@23742> JMP syntaxerr
000319A4 <AmiBlitz3_wizzard.ab2@23746>   TST.w dirmode
000319A8 <AmiBlitz3_wizzard.ab2@23747>   BNE.w JUMP_baddirerr
000319AC <AmiBlitz3_wizzard.ab2@23748>   MOVE.w #$C800,D1
000319B2 <AmiBlitz3_wizzard.ab2@23749>   JSR Atokejsr                                            ;end
000319BA <AmiBlitz3_wizzard.ab2@23750>   CMP.l #"noa7",-4(a5)
000319BE <AmiBlitz3_wizzard.ab2@23751>   BNE 'l10
000319C4 <AmiBlitz3_wizzard.ab2@23752>   TST.w dontwrite
000319C8 <AmiBlitz3_wizzard.ab2@23753>   BNE 'l10
000319CE <AmiBlitz3_wizzard.ab2@23754>   MOVE.l destpointer,d1
000319D0 <AmiBlitz3_wizzard.ab2@23755>   SUBQ.l #4,d1
000319D2 <AmiBlitz3_wizzard.ab2@23756>   MOVE.l a0,-(a7)
000319D4 <AmiBlitz3_wizzard.ab2@23757>   MOVE.l d1,a0
000319D6 <AmiBlitz3_wizzard.ab2@23758>   MOVE.l (a0),a0
000319DC <AmiBlitz3_wizzard.ab2@23759>   MOVE.l #$60000002,(a0)+
000319E0 <AmiBlitz3_wizzard.ab2@23760>   MOVE.w #$588f,(a0)
000319E2 <AmiBlitz3_wizzard.ab2@23761>   MOVE.l (a7)+,a0
000319E4 <AmiBlitz3_wizzard.ab2@23764> RTS
000319EA <AmiBlitz3_wizzard.ab2@23768>   TST.w dirmode                                            ;stop
000319EE <AmiBlitz3_wizzard.ab2@23769>   BNE.w JUMP_baddirerr
000319F0 <AmiBlitz3_wizzard.ab2@23770>   MOVE.w d0,d1
000319F4 <AmiBlitz3_wizzard.ab2@23771>   BEQ 'l10
000319F8 <AmiBlitz3_wizzard.ab2@23772>   CMP.b #$3a,d0
000319FC <AmiBlitz3_wizzard.ab2@23773>   BEQ 'l10
00031A02 <AmiBlitz3_wizzard.ab2@23774>   JSR get1bytemain
00031A08 <AmiBlitz3_wizzard.ab2@23777>   TST.b debugmode
00031A0C <AmiBlitz3_wizzard.ab2@23778>   BEQ.w newstop
00031A10 <AmiBlitz3_wizzard.ab2@23779>   MOVE.w #$D501,D1
00031A14 <AmiBlitz3_wizzard.ab2@23780> BRA.w Atokejsr
00031A16 <AmiBlitz3_wizzard.ab2@23784>     RTS
00031A18 <AmiBlitz3_wizzard.ab2@23786>   MOVE.w d1,d0
00031A1C <AmiBlitz3_wizzard.ab2@23787>   BEQ 'l10
00031A20 <AmiBlitz3_wizzard.ab2@23788>   CMP.b #$3a,d0
00031A24 <AmiBlitz3_wizzard.ab2@23789>   BEQ 'l10
00031A28 <AmiBlitz3_wizzard.ab2@23790>   SUB.b #$30,d0
00031A2C <AmiBlitz3_wizzard.ab2@23791>   MOVE.w #$4e40,d1
00031A30 <AmiBlitz3_wizzard.ab2@23792> BRA 'l11
00031A34 <AmiBlitz3_wizzard.ab2@23795>   MOVE.w #$4e4a,d1
00031A38 <AmiBlitz3_wizzard.ab2@23796> BRA writeword
00031A3A <AmiBlitz3_wizzard.ab2@23799>   ADD.b d0,d1
00031A3E <AmiBlitz3_wizzard.ab2@23800> BRA writeword
00031A44 <AmiBlitz3_wizzard.ab2@23804> JMP badconterr
00031A48 <AmiBlitz3_wizzard.ab2@23807>   MOVE.w #$4E71,D1
00031A4C <AmiBlitz3_wizzard.ab2@23808> BRA.w writeword
00031A52 <AmiBlitz3_wizzard.ab2@23811>   MOVEA.l firstfor,A2
00031A58 <AmiBlitz3_wizzard.ab2@23812>   CLR.l firstfor
00031A5E <AmiBlitz3_wizzard.ab2@23813>   MOVEA.l _execbase,A6
00031A62 <AmiBlitz3_wizzard.ab2@23816>   CMPA.w #$0,A2
00031A66 <AmiBlitz3_wizzard.ab2@23817>   BEQ.w JL_0_D9E6
00031A68 <AmiBlitz3_wizzard.ab2@23818>   MOVEA.l A2,A1
00031A6A <AmiBlitz3_wizzard.ab2@23819>   MOVEA.l (A1),A2
00031A6C <AmiBlitz3_wizzard.ab2@23820>   MOVEQ.l #$00,D0
00031A72 <AmiBlitz3_wizzard.ab2@23821>   MOVE.l mempool2,a0
00031A76 <AmiBlitz3_wizzard.ab2@23822>   MOVE.b $10(A1),D0
00031A7A <AmiBlitz3_wizzard.ab2@23823>   JSR _FreePooled(A6)                                      ;freememfor_error
00031A7E <AmiBlitz3_wizzard.ab2@23824> BRA.w JL_0_D9CC
00031A80 <AmiBlitz3_wizzard.ab2@23827> RTS
00031A86 <AmiBlitz3_wizzard.ab2@23831> JMP badpenderr
00031A8C <AmiBlitz3_wizzard.ab2@23837>   MOVE.w proceduremode,D1
00031A90 <AmiBlitz3_wizzard.ab2@23838>    BEQ.w JUMP_badpenderr
00031A96 <AmiBlitz3_wizzard.ab2@23840>   MOVE.w dontwrite,D1
00031A9A <AmiBlitz3_wizzard.ab2@23841>    BNE.w JL_0_DA1A
00031AA0 <AmiBlitz3_wizzard.ab2@23842>   MOVEA.l firstpend,A2
00031AA4 <AmiBlitz3_wizzard.ab2@23845>   CMPA.w #$0,A2
00031AA8 <AmiBlitz3_wizzard.ab2@23846>    BEQ.w JL_0_DA1A
00031AAC <AmiBlitz3_wizzard.ab2@23847>   MOVEA.l $4(A2),A0
00031AB2 <AmiBlitz3_wizzard.ab2@23848>   MOVE.l destpointer,(A0)
00031AB4 <AmiBlitz3_wizzard.ab2@23849>   MOVEA.l (A2),A2
00031AB8 <AmiBlitz3_wizzard.ab2@23850> BRA.w JL_0_DA02
00031ABE <AmiBlitz3_wizzard.ab2@23853>   TST.b debugmode
00031AC2 <AmiBlitz3_wizzard.ab2@23854>    BEQ.b JL_0_DA2A
00031AC4 <AmiBlitz3_wizzard.ab2@23855>   MOVEQ.l #$05,D1
00031ACA <AmiBlitz3_wizzard.ab2@23856>   JSR writetrap
00031AD0 <AmiBlitz3_wizzard.ab2@23859>   MOVEA.l firstlocal,A2                                    ;firstlocal
00031AD6 <AmiBlitz3_wizzard.ab2@23860>   JSR calcstatic2b                                           ;calcstatic
00031ADC <AmiBlitz3_wizzard.ab2@23861>   MOVEA.l currentfunction,A0
00031AE2 <AmiBlitz3_wizzard.ab2@23862>   MOVE.l destpointer,d1
00031AE6 <AmiBlitz3_wizzard.ab2@23863>   SUB.l $e(a0),d1
00031AEA <AmiBlitz3_wizzard.ab2@23864>   MOVE.l d1,isfunc+1(a0)                                   ;store function size
00031AEE <AmiBlitz3_wizzard.ab2@23865>   MOVE.w D4,$8(A0)                                         ;set if memalloc need
00031AF4 <AmiBlitz3_wizzard.ab2@23866>   MOVE.l D3,locdatast
00031AFA <AmiBlitz3_wizzard.ab2@23867>   MOVEA.l tempvm,A1
00031B00 <AmiBlitz3_wizzard.ab2@23868>  CLR.b infunctioncode
00031B06 <AmiBlitz3_wizzard.ab2@23869>   MOVE.l firstiffstore,d1
00031B0C <AmiBlitz3_wizzard.ab2@23870>   CMP.l firstiff,d1
00031B10 <AmiBlitz3_wizzard.ab2@23871>   BNE JUMP_noenderr
00031B14 <AmiBlitz3_wizzard.ab2@23872>   TST.w $C(A1)                                             ;dim
00031B18 <AmiBlitz3_wizzard.ab2@23873>    BPL.w JL_0_DA64
00031B1E <AmiBlitz3_wizzard.ab2@23874>  BSET #$7,$8(A0)
00031B22 <AmiBlitz3_wizzard.ab2@23875>   MOVE.w #$C005,D1
00031B26 <AmiBlitz3_wizzard.ab2@23876>    BSR.w tokejsr2                                          ;writefreememstatement
00031B2A <AmiBlitz3_wizzard.ab2@23877> BRA.w JL_0_DA6C
00031B30 <AmiBlitz3_wizzard.ab2@23880> JMP noenderr
00031B38 <AmiBlitz3_wizzard.ab2@23883>   MOVE.w memlibstat,$C(A1)
00031B3E <AmiBlitz3_wizzard.ab2@23886>   MOVEA.l currentfunction,A0
00031B42 <AmiBlitz3_wizzard.ab2@23887>   MOVE.l $E(A0),-(A7)
00031B4A <AmiBlitz3_wizzard.ab2@23888>   MOVE.w locvaroff,$6(A0)
00031B50 <AmiBlitz3_wizzard.ab2@23889>   BCLR #$1,$7(A0)
00031B56 <AmiBlitz3_wizzard.ab2@23890>   BCLR #$0,$7(A0)
00031B5C <AmiBlitz3_wizzard.ab2@23891>   CMPI.b #$7,$5(A0)
00031B60 <AmiBlitz3_wizzard.ab2@23892>    BNE.w JL_0_DA9E
00031B66 <AmiBlitz3_wizzard.ab2@23893>   MOVE.w getstlen,D1
00031B6A <AmiBlitz3_wizzard.ab2@23894>    BSR.w writeword
00031B6E <AmiBlitz3_wizzard.ab2@23897>   TST.w $6(A0)
00031B72 <AmiBlitz3_wizzard.ab2@23898>    BEQ.w JL_0_DAB8
00031B76 <AmiBlitz3_wizzard.ab2@23899>   MOVE.w #$FC7B,D1
00031B7C <AmiBlitz3_wizzard.ab2@23900>    JSR uselib
00031B82 <AmiBlitz3_wizzard.ab2@23901>   MOVE.w unlinka4,D1
00031B86 <AmiBlitz3_wizzard.ab2@23902>    BSR.w writeword
00031B8C <AmiBlitz3_wizzard.ab2@23905>   MOVEA.l currentfunction,A0
00031B8E <AmiBlitz3_wizzard.ab2@23906>   MOVEQ.l #$00,D1
00031B92 <AmiBlitz3_wizzard.ab2@23907>   MOVE.b $4(A0),D1
00031B94 <AmiBlitz3_wizzard.ab2@23908>   LSR.w #4,D1
00031B98 <AmiBlitz3_wizzard.ab2@23909>    BEQ.w JL_0_DB24
00031B9A <AmiBlitz3_wizzard.ab2@23911>      LSL.w #1,d1
00031B9E <AmiBlitz3_wizzard.ab2@23913>   CMP.w #$1,D1
00031BA2 <AmiBlitz3_wizzard.ab2@23914>    BNE.w JL_0_DAE0
00031BA8 <AmiBlitz3_wizzard.ab2@23915>   MOVE.w fix1,D1
00031BAC <AmiBlitz3_wizzard.ab2@23916>    BSR.w writeword
00031BB0 <AmiBlitz3_wizzard.ab2@23917> BRA.w JL_0_DB24
00031BB2 <AmiBlitz3_wizzard.ab2@23920>   LSL.w #2,D1
00031BB4 <AmiBlitz3_wizzard.ab2@23921>   MOVE.w D1,-(A7)
00031BBA <AmiBlitz3_wizzard.ab2@23922>   MOVE.w D1,moverts+2
00031BC0 <AmiBlitz3_wizzard.ab2@23923>   MOVE.l moverts,D1
00031BC6 <AmiBlitz3_wizzard.ab2@23924>    JSR writelong
00031BC8 <AmiBlitz3_wizzard.ab2@23925>   MOVE.w (A7)+,D1
00031BCC <AmiBlitz3_wizzard.ab2@23926>   CMP.w #$8,D1
00031BD0 <AmiBlitz3_wizzard.ab2@23927>    BHI.w JL_0_DB14
00031BD4 <AmiBlitz3_wizzard.ab2@23928>   ANDI.w #$7,D1
00031BD6 <AmiBlitz3_wizzard.ab2@23929>   LSL.w #8,D1
00031BD8 <AmiBlitz3_wizzard.ab2@23930>   LSL.w #1,D1
00031BDE <AmiBlitz3_wizzard.ab2@23931>   OR.w fixq,D1
00031BE4 <AmiBlitz3_wizzard.ab2@23932>    JSR writeword
00031BE8 <AmiBlitz3_wizzard.ab2@23933> BRA.w JL_0_DB24
00031BEE <AmiBlitz3_wizzard.ab2@23937>    MOVE.w D1,fixstack+2
00031BF4 <AmiBlitz3_wizzard.ab2@23938>   MOVE.l fixstack,D1
00031BFA <AmiBlitz3_wizzard.ab2@23939>    JSR writelong
00031BFE <AmiBlitz3_wizzard.ab2@23942>    BSR.w JL_0_D2CA
00031C02 <AmiBlitz3_wizzard.ab2@23943>    BSR.w JL_0_D4F8
00031C04 <AmiBlitz3_wizzard.ab2@23944>   MOVEA.l (A7)+,A0
00031C0A <AmiBlitz3_wizzard.ab2@23945>   MOVE.w dontwrite,D1
00031C0E <AmiBlitz3_wizzard.ab2@23946>    BNE.w JL_0_DB3E
00031C14 <AmiBlitz3_wizzard.ab2@23947>   MOVE.l destpointer,-(A0)
00031C1A <AmiBlitz3_wizzard.ab2@23950>   CLR.w proceduremode
00031C20 <AmiBlitz3_wizzard.ab2@23951>   CLR.l currentfunction
00031C26 <AmiBlitz3_wizzard.ab2@23952>   CLR.w procnum
00031C2A <AmiBlitz3_wizzard.ab2@23953>    BSR.w JL_0_DB5C
00031C30 <AmiBlitz3_wizzard.ab2@23954>    JSR freepends
00031C36 <AmiBlitz3_wizzard.ab2@23955> JMP get1bytemain
00031C38 <AmiBlitz3_wizzard.ab2@23958>   MOVEQ.l #$0C,D0
00031C3A <AmiBlitz3_wizzard.ab2@23959>   MOVEQ.l #$01,D1
00031C40 <AmiBlitz3_wizzard.ab2@23960>   MOVEA.l _execbase,A6
00031C46 <AmiBlitz3_wizzard.ab2@23962>   MOVE.l mempool,a0
00031C4A <AmiBlitz3_wizzard.ab2@23963>   JSR _AllocPooled(a6)
00031C4C <AmiBlitz3_wizzard.ab2@23964>   MOVEA.l D0,A0
00031C52 <AmiBlitz3_wizzard.ab2@23965>   MOVE.l alllocals,(A0)
00031C58 <AmiBlitz3_wizzard.ab2@23966>   MOVE.l A0,alllocals
00031C5E <AmiBlitz3_wizzard.ab2@23967>   MOVE.l firstlocal,D0
00031C64 <AmiBlitz3_wizzard.ab2@23968>   CLR.l firstlocal
00031C68 <AmiBlitz3_wizzard.ab2@23969>   MOVE.l D0,$4(A0)
00031C6E <AmiBlitz3_wizzard.ab2@23970>   MOVE.l firstglob,D1
00031C74 <AmiBlitz3_wizzard.ab2@23971>   CLR.l firstglob
00031C78 <AmiBlitz3_wizzard.ab2@23972>   MOVE.l D1,$8(A0)
00031C7E <AmiBlitz3_wizzard.ab2@23973>   TST.b debugmode
00031C82 <AmiBlitz3_wizzard.ab2@23974>    BEQ.b JL_0_DBB0
00031C88 <AmiBlitz3_wizzard.ab2@23975>   TST.w dontwrite
00031C8C <AmiBlitz3_wizzard.ab2@23976>    BNE.b JL_0_DBB0
00031C90 <AmiBlitz3_wizzard.ab2@23977>   MOVEA.l proclocals(PC),A0
00031C92 <AmiBlitz3_wizzard.ab2@23978>   MOVE.l D0,(A0)+
00031C94 <AmiBlitz3_wizzard.ab2@23979>   MOVE.l D1,(A0)
00031C96 <AmiBlitz3_wizzard.ab2@23982> RTS
00031C9C <AmiBlitz3_wizzard.ab2@23985> JMP baddirerr
00031CA2 <AmiBlitz3_wizzard.ab2@23989>   TST.w dirmode
00031CA6 <AmiBlitz3_wizzard.ab2@23990>    BNE.w JUMP_baddirerr
00031CAC <AmiBlitz3_wizzard.ab2@23991>   MOVE.l firstfor,D1
00031CB0 <AmiBlitz3_wizzard.ab2@23992>    BEQ.w JUMP_noforerr
00031CB6 <AmiBlitz3_wizzard.ab2@23993>   JSR reget
00031CBA <AmiBlitz3_wizzard.ab2@23994>    BEQ.w JL_0_DC18
00031CBE <AmiBlitz3_wizzard.ab2@23997>   BSR.w getparameter
00031CC2 <AmiBlitz3_wizzard.ab2@23998>   MOVEA.l firstfor(PC),A2
00031CC4 <AmiBlitz3_wizzard.ab2@23999>   MOVEQ.l #$00,D1
00031CC8 <AmiBlitz3_wizzard.ab2@24000>   MOVE.b $10(A2),D1
00031CCC <AmiBlitz3_wizzard.ab2@24001>   SUBI.w #$12,D1
00031CCE <AmiBlitz3_wizzard.ab2@24002>   CMP.w D1,D2
00031CD2 <AmiBlitz3_wizzard.ab2@24003>    BNE.w JUMP_noforerr
00031CD6 <AmiBlitz3_wizzard.ab2@24004>   LEA ptr_parameterstore(PC),A0
00031CDA <AmiBlitz3_wizzard.ab2@24005>   LEA $11(A2),A1
00031CDC <AmiBlitz3_wizzard.ab2@24006>   SUBQ.w #1,D2
00031CDE <AmiBlitz3_wizzard.ab2@24009>     CMPM.b (A0)+,(A1)+
00031CE2 <AmiBlitz3_wizzard.ab2@24010>     BNE.w JUMP_noforerr
00031CE6 <AmiBlitz3_wizzard.ab2@24011>   DBF D2,JL_0_DBF0
00031CEA <AmiBlitz3_wizzard.ab2@24013>    BSR.w JL_0_DC1A
00031CF0 <AmiBlitz3_wizzard.ab2@24014>    JSR reget
00031CF4 <AmiBlitz3_wizzard.ab2@24015>    BEQ.w JL_0_DC16
00031CF8 <AmiBlitz3_wizzard.ab2@24016>   CMP.w #$2C,D0
00031CFC <AmiBlitz3_wizzard.ab2@24017>    BNE.w JUMP_syntaxerr
00031D02 <AmiBlitz3_wizzard.ab2@24018>    JSR get1bytemain
00031D06 <AmiBlitz3_wizzard.ab2@24019> BRA.w JL_0_DBCE
00031D0C <AmiBlitz3_wizzard.ab2@24022> JMP noforerr
00031D0E <AmiBlitz3_wizzard.ab2@24025> RTS
00031D12 <AmiBlitz3_wizzard.ab2@24029>   MOVE.l 8(a7),a2
00031D16 <AmiBlitz3_wizzard.ab2@24030>   Dc.l  $f2124400                                          ;fmove.s (a2),fp0
00031D1A <AmiBlitz3_wizzard.ab2@24031>   Dc.l  $F2174422                                          ;fadd.s (a7),fp0
00031D1E <AmiBlitz3_wizzard.ab2@24032>   Dc.l  $F2126400                                          ;fmove.s fp0,(a2)
00031D20 <AmiBlitz3_wizzard.ab2@24036>   MOVEA.l D1,A2
00031D26 <AmiBlitz3_wizzard.ab2@24039>   JSR popnext                                           ;error checking for next.
00031D2A <AmiBlitz3_wizzard.ab2@24040>   MOVE.w $C(A2),D0
00031D30 <AmiBlitz3_wizzard.ab2@24041>   LEA nextb,A0
00031D36 <AmiBlitz3_wizzard.ab2@24042>   LEA nextbf,A1
00031D3A <AmiBlitz3_wizzard.ab2@24043>   CMP.w #$1,D0
00031D3E <AmiBlitz3_wizzard.ab2@24044>    BEQ.w JL_0_DC74
00031D44 <AmiBlitz3_wizzard.ab2@24045>   LEA nextw,A0
00031D4A <AmiBlitz3_wizzard.ab2@24046>   LEA nextwf,A1
00031D4E <AmiBlitz3_wizzard.ab2@24047>   CMP.w #$2,D0
00031D52 <AmiBlitz3_wizzard.ab2@24048>    BEQ.w JL_0_DC74
00031D58 <AmiBlitz3_wizzard.ab2@24049>   LEA nextl,A0
00031D5E <AmiBlitz3_wizzard.ab2@24050>   LEA nextlf,A1
00031D62 <AmiBlitz3_wizzard.ab2@24051>   CMP.w #$5,D0
00031D66 <AmiBlitz3_wizzard.ab2@24052>    BNE.w JL_0_DC74
00031D6C <AmiBlitz3_wizzard.ab2@24053>    TST.b fpu
00031D70 <AmiBlitz3_wizzard.ab2@24054>    BEQ 'old
00031D76 <AmiBlitz3_wizzard.ab2@24055>    LEA fpu2dats,a0                                         ;fpu next code
00031D7C <AmiBlitz3_wizzard.ab2@24056>    LEA fpu2date,a1
00031D80 <AmiBlitz3_wizzard.ab2@24057> BRA JL_0_DC74
00031D84 <AmiBlitz3_wizzard.ab2@24060>   MOVE.w #$C900,D1
00031D88 <AmiBlitz3_wizzard.ab2@24061>    BSR.w Atokejsr
00031D8E <AmiBlitz3_wizzard.ab2@24062>   LEA nextf,A0
00031D94 <AmiBlitz3_wizzard.ab2@24063>   LEA nextff,A1
00031D9A <AmiBlitz3_wizzard.ab2@24066>   JSR pokecode
00031DA0 <AmiBlitz3_wizzard.ab2@24067>     TST.b fast                                             ;fast for next deactivate
00031DA4 <AmiBlitz3_wizzard.ab2@24068> BRA 'l1
00031DAA <AmiBlitz3_wizzard.ab2@24070>     TST.b onestep
00031DAE <AmiBlitz3_wizzard.ab2@24071>     BEQ 'l1
00031DB4 <AmiBlitz3_wizzard.ab2@24072>     CLR.b onestep
00031DBA <AmiBlitz3_wizzard.ab2@24073>     SUBQ.l #4,destpointer
00031DBE <AmiBlitz3_wizzard.ab2@24074>     MOVE.w #$5292,d1
00031DC4 <AmiBlitz3_wizzard.ab2@24075>     JSR writeword
00031DC8 <AmiBlitz3_wizzard.ab2@24078>   MOVE.l JL_0_DCF4(PC),D1
00031DCE <AmiBlitz3_wizzard.ab2@24079>    JSR writelong
00031DD4 <AmiBlitz3_wizzard.ab2@24080>   MOVEA.l firstfor,A2
00031DDA <AmiBlitz3_wizzard.ab2@24081>   MOVE.l (A2),firstfor
00031DDE <AmiBlitz3_wizzard.ab2@24082>   MOVEA.l $8(A2),A0
00031DE4 <AmiBlitz3_wizzard.ab2@24083>   MOVEA.l destpointer,A1
00031DE6 <AmiBlitz3_wizzard.ab2@24084>   MOVE.l A1,D1
00031DE8 <AmiBlitz3_wizzard.ab2@24085>   SUB.l A0,D1
00031DEA <AmiBlitz3_wizzard.ab2@24086>   ADDQ.l #2,D1
00031DF0 <AmiBlitz3_wizzard.ab2@24087>   CMP.l #MinWordSgnd,D1
00031DF4 <AmiBlitz3_wizzard.ab2@24088>    BCC.w JUMP_bigforerr
00031DFA <AmiBlitz3_wizzard.ab2@24089>   TST.w dontwrite
00031DFE <AmiBlitz3_wizzard.ab2@24090>    BNE.w JL_0_DCB4
00031E02 <AmiBlitz3_wizzard.ab2@24091>   MOVE.w D1,-$2(A0)
00031E04 <AmiBlitz3_wizzard.ab2@24094>   MOVE.l A1,D1
00031E08 <AmiBlitz3_wizzard.ab2@24095>   SUB.l $4(A2),D1
00031E0A <AmiBlitz3_wizzard.ab2@24096>   SUBQ.l #6,D1
00031E10 <AmiBlitz3_wizzard.ab2@24097>   CMP.l #MinWordSgnd,D1
00031E14 <AmiBlitz3_wizzard.ab2@24098>    BCC.w JUMP_bigforerr
00031E1A <AmiBlitz3_wizzard.ab2@24099>   TST.w dontwrite
00031E1E <AmiBlitz3_wizzard.ab2@24100>    BNE.w JL_0_DCD6
00031E20 <AmiBlitz3_wizzard.ab2@24101>   NEG.w D1
00031E24 <AmiBlitz3_wizzard.ab2@24102>   MOVE.w D1,-$2(A1)
00031E2A <AmiBlitz3_wizzard.ab2@24105>   JSR popnext3
00031E30 <AmiBlitz3_wizzard.ab2@24106>   MOVEA.l _execbase,A6
00031E32 <AmiBlitz3_wizzard.ab2@24107>   MOVEA.l A2,A1
00031E34 <AmiBlitz3_wizzard.ab2@24108>   MOVEQ.l #$00,D0
00031E38 <AmiBlitz3_wizzard.ab2@24109>   MOVE.b $10(A1),D0
00031E3E <AmiBlitz3_wizzard.ab2@24110>   MOVE.l mempool2,a0
00031E42 <AmiBlitz3_wizzard.ab2@24111>   JSR _FreePooled(A6)
00031E48 <AmiBlitz3_wizzard.ab2@24112> JMP reget
00031E4E <AmiBlitz3_wizzard.ab2@24115> JMP notallowd
00031E54 <AmiBlitz3_wizzard.ab2@24118> JMP bigforerr
00031E58 <AmiBlitz3_wizzard.ab2@24125>   MOVE.w #$664F,-(A7)
00031E5C <AmiBlitz3_wizzard.ab2@24128> BRA.w JL_0_DCF4
00031E62 <AmiBlitz3_wizzard.ab2@24131> JMP error_dublicate_for
00031E66 <AmiBlitz3_wizzard.ab2@24134> forlineat:   Ds.l 1
00031E68 <AmiBlitz3_wizzard.ab2@24135> fortemp:     Ds.w 1
00031E6E <AmiBlitz3_wizzard.ab2@24142>   CLR.l fp0addr
00031E74 <AmiBlitz3_wizzard.ab2@24143>   TST.w dirmode
00031E78 <AmiBlitz3_wizzard.ab2@24144>    BNE.w JUMP_baddirerr
00031E82 <AmiBlitz3_wizzard.ab2@24145>   MOVE.l linenumat,forlineat
00031E88 <AmiBlitz3_wizzard.ab2@24149>   MOVE.l A5,letstart
00031E8C <AmiBlitz3_wizzard.ab2@24150>   BSR.w getparameter
00031E92 <AmiBlitz3_wizzard.ab2@24151>   MOVE.w D2,fortemp
00031E98 <AmiBlitz3_wizzard.ab2@24152>   JSR findfor
00031E9C <AmiBlitz3_wizzard.ab2@24153>    BEQ.w JUMP_error_dublicate_for
00031EA2 <AmiBlitz3_wizzard.ab2@24154>   LEA firstfor,A2
00031EA8 <AmiBlitz3_wizzard.ab2@24155>   JSR addhere2
00031EAA <AmiBlitz3_wizzard.ab2@24156>   MOVE.l A2,-(A7)
00031EB0 <AmiBlitz3_wizzard.ab2@24157>   TST.b debugmode
00031EB4 <AmiBlitz3_wizzard.ab2@24158>    BEQ.b JL_0_DD4C
00031EBA <AmiBlitz3_wizzard.ab2@24159>   JSR chkstak
00031EC0 <AmiBlitz3_wizzard.ab2@24160>   MOVE.l AJL_0_DCF0,D1
00031EC6 <AmiBlitz3_wizzard.ab2@24161>   JSR  writelong
00031ECA <AmiBlitz3_wizzard.ab2@24164>   MOVE.w fortemp(PC),D2
00031ED2 <AmiBlitz3_wizzard.ab2@24165>   MOVE.b #1,formode
00031ED6 <AmiBlitz3_wizzard.ab2@24166>   BSR.w AJL_0_DEA6                                         ;for get 1. value
00031EDC <AmiBlitz3_wizzard.ab2@24167>   CLR.b formode
00031EE0 <AmiBlitz3_wizzard.ab2@24168>   CMP.w #-$7FE8,D0
00031EE4 <AmiBlitz3_wizzard.ab2@24169>    BNE.w JUMP_syntaxerr
00031EEA <AmiBlitz3_wizzard.ab2@24170>   MOVE.w commode,D1
00031EEE <AmiBlitz3_wizzard.ab2@24171>    BNE.w JUMP_syntaxerr
00031EF2 <AmiBlitz3_wizzard.ab2@24172>   CMP.b #$6,D2
00031EF6 <AmiBlitz3_wizzard.ab2@24173>    BCC.w JUMP_badforerr
00031EFA <AmiBlitz3_wizzard.ab2@24174>   BTST #$F,D2
00031EFE <AmiBlitz3_wizzard.ab2@24175>    BNE.w JL_0_DD86
00031F04 <AmiBlitz3_wizzard.ab2@24176>   MOVE.w leaamp,D1
00031F0A <AmiBlitz3_wizzard.ab2@24177>   JSR pokewda5s
00031F0C <AmiBlitz3_wizzard.ab2@24178>   MOVE.w D3,D1
00031F12 <AmiBlitz3_wizzard.ab2@24179>   JSR  writeword
00031F18 <AmiBlitz3_wizzard.ab2@24182>   MOVE.w pushindex,D1
00031F1E <AmiBlitz3_wizzard.ab2@24183>   JSR  writeword
00031F22 <AmiBlitz3_wizzard.ab2@24184>   ANDI.w #$FF,D2
00031F24 <AmiBlitz3_wizzard.ab2@24186>   MOVEA.l (A7),A1
00031F28 <AmiBlitz3_wizzard.ab2@24187>   MOVE.w D2,$C(A1)
00031F2A <AmiBlitz3_wizzard.ab2@24188>   MOVE.w D2,-(A7)
00031F2E <AmiBlitz3_wizzard.ab2@24189>    BSR.w eval
00031F34 <AmiBlitz3_wizzard.ab2@24190>    CLR.b onestep
00031F38 <AmiBlitz3_wizzard.ab2@24191>    CMP.w #$8019,d0
00031F3C <AmiBlitz3_wizzard.ab2@24192>    BEQ 'l1
00031F44 <AmiBlitz3_wizzard.ab2@24193>    MOVE.b #1,onestep
00031F46 <AmiBlitz3_wizzard.ab2@24196>   MOVE.w (A7),D2
00031F4C <AmiBlitz3_wizzard.ab2@24197>   MOVE.w pushd0l,D1
00031F50 <AmiBlitz3_wizzard.ab2@24198>   CMP.w #$3,D2
00031F54 <AmiBlitz3_wizzard.ab2@24199>    BCC.w JL_0_DDB6
00031F5A <AmiBlitz3_wizzard.ab2@24200>   MOVE.w pushd0wd,D1
00031F5C <AmiBlitz3_wizzard.ab2@24203>    MOVE.w D1,-(A7)
00031F62 <AmiBlitz3_wizzard.ab2@24204>    TST.b fpu
00031F66 <AmiBlitz3_wizzard.ab2@24205>    BEQ 'old
00031F6A <AmiBlitz3_wizzard.ab2@24206>    CMP.b #5,d2
00031F6E <AmiBlitz3_wizzard.ab2@24207>    BNE 'old
00031F74 <AmiBlitz3_wizzard.ab2@24208>    MOVE.l #$f2276400,d1
00031F7A <AmiBlitz3_wizzard.ab2@24210>    JSR writelong
00031F7E <AmiBlitz3_wizzard.ab2@24211> BRA 'weit
00031F84 <AmiBlitz3_wizzard.ab2@24214>    JSR  writeword                                          ;fpu for end value
00031F88 <AmiBlitz3_wizzard.ab2@24217>   CMP.w #-$7FE7,D0
00031F8C <AmiBlitz3_wizzard.ab2@24218>    BNE.w JL_0_DDCC
00031F90 <AmiBlitz3_wizzard.ab2@24219>    BSR.w eval
00031F96 <AmiBlitz3_wizzard.ab2@24220>    TST.b fpu
00031F9A <AmiBlitz3_wizzard.ab2@24221>    BEQ JL_0_DE0C
00031F9E <AmiBlitz3_wizzard.ab2@24222>    CMP.b #5,d2
00031FA2 <AmiBlitz3_wizzard.ab2@24223>    BNE JL_0_DE0C
00031FA8 <AmiBlitz3_wizzard.ab2@24224>    MOVE.l #$f2276400,d1                                    ;write step <> 1
00031FAE <AmiBlitz3_wizzard.ab2@24226>   JSR writelong
00031FB0 <AmiBlitz3_wizzard.ab2@24229>    MOVE.w (a7)+,d1
00031FB4 <AmiBlitz3_wizzard.ab2@24230> BRA fpur
00031FB8 <AmiBlitz3_wizzard.ab2@24233>   CMP.w #$4,D2
00031FBC <AmiBlitz3_wizzard.ab2@24234>    BCC.w JL_0_DDE0
00031FC0 <AmiBlitz3_wizzard.ab2@24235>   MOVE.w #$7001,D1
00031FC6 <AmiBlitz3_wizzard.ab2@24236>   JSR writeword
00031FCA <AmiBlitz3_wizzard.ab2@24237> BRA.w JL_0_DE0C
00031FD0 <AmiBlitz3_wizzard.ab2@24240> JMP badforerr
00031FD4 <AmiBlitz3_wizzard.ab2@24243>   BNE.w JL_0_DDFA
00031FD8 <AmiBlitz3_wizzard.ab2@24244>   MOVE.w #$7001,D1
00031FDE <AmiBlitz3_wizzard.ab2@24245>   JSR writeword
00031FE4 <AmiBlitz3_wizzard.ab2@24246>   MOVE.w swapd0,D1
00031FEA <AmiBlitz3_wizzard.ab2@24247>   JSR writeword
00031FEE <AmiBlitz3_wizzard.ab2@24248> BRA.w JL_0_DE0C
00031FF4 <AmiBlitz3_wizzard.ab2@24251>   TST.b fpu
00031FF8 <AmiBlitz3_wizzard.ab2@24252>    BEQ 'old
00031FFC <AmiBlitz3_wizzard.ab2@24253>   CMP.b #5,d2
00032000 <AmiBlitz3_wizzard.ab2@24254>    BNE 'old
00032006 <AmiBlitz3_wizzard.ab2@24255>   MOVE.l #$f23c5000,d1
0003200C <AmiBlitz3_wizzard.ab2@24256>   JSR writelong
00032010 <AmiBlitz3_wizzard.ab2@24257>   MOVE.w #$1,d1
00032016 <AmiBlitz3_wizzard.ab2@24258>   JSR writeword
0003201C <AmiBlitz3_wizzard.ab2@24259>   MOVE.l #$f2276400,d1
00032022 <AmiBlitz3_wizzard.ab2@24260>   JSR writelong
00032024 <AmiBlitz3_wizzard.ab2@24261>   MOVE.w (a7)+,d1
00032028 <AmiBlitz3_wizzard.ab2@24262> BRA fpur
0003202C <AmiBlitz3_wizzard.ab2@24265>   MOVE.w #$203C,D1                                         ;write step 1
00032032 <AmiBlitz3_wizzard.ab2@24266>   JSR writeword
00032038 <AmiBlitz3_wizzard.ab2@24267>   MOVE.l #SA_BackFill,D1                                   ;#$80000041,d1 org source  ;ffp '1'
0003203E <AmiBlitz3_wizzard.ab2@24268>   JSR writelong
00032040 <AmiBlitz3_wizzard.ab2@24271>   MOVE.w (A7)+,D1
00032046 <AmiBlitz3_wizzard.ab2@24272>   JSR writeword                                            ;push step on stack
00032048 <AmiBlitz3_wizzard.ab2@24275>   MOVE.w (A7)+,D2
0003204A <AmiBlitz3_wizzard.ab2@24276>   MOVEA.l (A7),A1
00032052 <AmiBlitz3_wizzard.ab2@24277>   MOVE.l destpointer,$4(A1)
00032058 <AmiBlitz3_wizzard.ab2@24278>   LEA forcompb,A0
0003205E <AmiBlitz3_wizzard.ab2@24279>   LEA forcompbf,A1
00032062 <AmiBlitz3_wizzard.ab2@24280>   CMP.w #$1,D2
00032066 <AmiBlitz3_wizzard.ab2@24281>    BEQ.w JL_0_DE7E
0003206C <AmiBlitz3_wizzard.ab2@24282>   LEA forcompw,A0
00032072 <AmiBlitz3_wizzard.ab2@24283>   LEA forcompwf,A1
00032076 <AmiBlitz3_wizzard.ab2@24284>   CMP.w #$2,D2
0003207A <AmiBlitz3_wizzard.ab2@24285>    BEQ.w JL_0_DE7E
00032080 <AmiBlitz3_wizzard.ab2@24286>   LEA forcompl,A0
00032086 <AmiBlitz3_wizzard.ab2@24287>   LEA forcomplf,A1
0003208A <AmiBlitz3_wizzard.ab2@24288>   CMP.w #$5,D2
0003208E <AmiBlitz3_wizzard.ab2@24289>    BNE.w JL_0_DE7E
00032094 <AmiBlitz3_wizzard.ab2@24290>   TST.b fpu
00032098 <AmiBlitz3_wizzard.ab2@24291>    BEQ 'old
0003209E <AmiBlitz3_wizzard.ab2@24292>   LEA fpu_start,a0
000320A4 <AmiBlitz3_wizzard.ab2@24293>   LEA fpu_end,a1
000320AA <AmiBlitz3_wizzard.ab2@24294>   JSR pokecode
000320AE <AmiBlitz3_wizzard.ab2@24295> BRA fpu3
000320B4 <AmiBlitz3_wizzard.ab2@24298>   LEA forcompf,A0                                         ;
000320BA <AmiBlitz3_wizzard.ab2@24299>   LEA forcompff,A1
000320C0 <AmiBlitz3_wizzard.ab2@24300>   JSR pokecode
000320C4 <AmiBlitz3_wizzard.ab2@24301>   MOVE.w #$C900,D1
000320C8 <AmiBlitz3_wizzard.ab2@24302>   BSR.w Atokejsr
000320CE <AmiBlitz3_wizzard.ab2@24303>   LEA forcompf2,A0
000320D4 <AmiBlitz3_wizzard.ab2@24304>   LEA forcompf2f,A1
000320DA <AmiBlitz3_wizzard.ab2@24307>   JSR pokecode
000320E0 <AmiBlitz3_wizzard.ab2@24308>   TST.b fast                                               ;fast for next
000320E4 <AmiBlitz3_wizzard.ab2@24309>    BEQ 's1
000320E8 <AmiBlitz3_wizzard.ab2@24310>   CMP.w #3,d2
000320EC <AmiBlitz3_wizzard.ab2@24311>    BNE 's1
000320F2 <AmiBlitz3_wizzard.ab2@24312>   TST.b onestep
000320F6 <AmiBlitz3_wizzard.ab2@24313>    BEQ 's1
00032100 <AmiBlitz3_wizzard.ab2@24314>   SUB.l #10,destpointer
00032104 <AmiBlitz3_wizzard.ab2@24315>   MOVE.w #$b081,d1
0003210A <AmiBlitz3_wizzard.ab2@24316>   JSR writeword
0003210E <AmiBlitz3_wizzard.ab2@24320>   MOVE.l thebgt(PC),D1
00032114 <AmiBlitz3_wizzard.ab2@24321>   JSR writelong
00032116 <AmiBlitz3_wizzard.ab2@24324>   MOVEA.l (A7)+,A1
0003211E <AmiBlitz3_wizzard.ab2@24325>   MOVE.l destpointer,$8(A1)
00032124 <AmiBlitz3_wizzard.ab2@24326> JMP reget
00032128 <AmiBlitz3_wizzard.ab2@24329>   MOVEA.l 8(a7),a2
0003212C <AmiBlitz3_wizzard.ab2@24330>   Dc.l $f2124400                                           ;fmove.s (a2),fp0
00032132 <AmiBlitz3_wizzard.ab2@24331>   fmove.s 4(a7),fp1
00032136 <AmiBlitz3_wizzard.ab2@24332>   BTST.b #7,(a7)
0003213A <AmiBlitz3_wizzard.ab2@24333>   BNE 'negi
0003213E <AmiBlitz3_wizzard.ab2@24334>   fcmp.x fp1,fp0
00032142 <AmiBlitz3_wizzard.ab2@24335> BRA 'negi2
00032146 <AmiBlitz3_wizzard.ab2@24338>   fcmp.x fp0,fp1
0003214A <AmiBlitz3_wizzard.ab2@24341>   Dc.l $f2920000                                           ;fbgt.w
0003214E <AmiBlitz3_wizzard.ab2@24345>   BGT.w thebgt
00032154 <AmiBlitz3_wizzard.ab2@24348>   MOVE.l A5,letstart
00032158 <AmiBlitz3_wizzard.ab2@24349>   BSR.w getparameter
00032162 <AmiBlitz3_wizzard.ab2@24355>   MOVE.l destpointer,pushpc
0003216C <AmiBlitz3_wizzard.ab2@24356>   MOVE.l hunkoffsetbase,pushoff
00032172 <AmiBlitz3_wizzard.ab2@24357>   CLR.l rightsidetype
0003217A <AmiBlitz3_wizzard.ab2@24358>   MOVE.w #$0001,regnum
00032180 <AmiBlitz3_wizzard.ab2@24359>   JSR JL_0_8E3C
00032186 <AmiBlitz3_wizzard.ab2@24360>   JSR calcvar
0003218C <AmiBlitz3_wizzard.ab2@24361>   TST.b formode
00032190 <AmiBlitz3_wizzard.ab2@24362>   BEQ 'lf1
00032196 <AmiBlitz3_wizzard.ab2@24363>   CMP.l #newtype_double,A2
0003219A <AmiBlitz3_wizzard.ab2@24364>   BEQ JUMP_notallowd
000321A0 <AmiBlitz3_wizzard.ab2@24365>   MOVE.l a2,currtype
000321A6 <AmiBlitz3_wizzard.ab2@24368>   CLR.w startoffsetmore
000321AA <AmiBlitz3_wizzard.ab2@24369>   CMP.w #$3d,d0
000321AE <AmiBlitz3_wizzard.ab2@24370>   BNE 'l1a
000321B2 <AmiBlitz3_wizzard.ab2@24371>   BTST #15,d2
000321B6 <AmiBlitz3_wizzard.ab2@24372>   BEQ 'l1a
000321BA <AmiBlitz3_wizzard.ab2@24373>   CMP.b #1,d2
000321BE <AmiBlitz3_wizzard.ab2@24374>   BNE 'l1a
000321C8 <AmiBlitz3_wizzard.ab2@24375>   MOVE.w leaa0a0+2,startoffsetmore
000321CE <AmiBlitz3_wizzard.ab2@24378>   CLR.w regnum
000321D2 <AmiBlitz3_wizzard.ab2@24379>   BSR.w JL_0_B5D2
000321D8 <AmiBlitz3_wizzard.ab2@24380>   CLR.w commode
000321DE <AmiBlitz3_wizzard.ab2@24381>   CLR.w stackcorrect
000321E4 <AmiBlitz3_wizzard.ab2@24382>   CLR.w pcodd
000321EA <AmiBlitz3_wizzard.ab2@24383>   MOVE.w startoffsetmore,d1
000321EE <AmiBlitz3_wizzard.ab2@24384>   BTST #0,d1
000321F2 <AmiBlitz3_wizzard.ab2@24385>   BEQ 'l2a
000321FA <AmiBlitz3_wizzard.ab2@24386>   MOVE.w #1,pcodd
000321FE <AmiBlitz3_wizzard.ab2@24389>   CMP.w #$3D,D0                                            ;=
00032202 <AmiBlitz3_wizzard.ab2@24390>   BEQ.w JL_0_DEE0
00032204 <AmiBlitz3_wizzard.ab2@24393>   MOVE.b (a5)+,d1
00032208 <AmiBlitz3_wizzard.ab2@24394>   BEQ 'l10
0003220C <AmiBlitz3_wizzard.ab2@24395>   CMP.b #":",d1
00032210 <AmiBlitz3_wizzard.ab2@24396>   BEQ 'l10
00032214 <AmiBlitz3_wizzard.ab2@24397>   CMP.b #";",d1
00032218 <AmiBlitz3_wizzard.ab2@24398>   BEQ 'l10
0003221C <AmiBlitz3_wizzard.ab2@24399>   CMP.b #"0",d1
00032220 <AmiBlitz3_wizzard.ab2@24400>   BLT 'l11
00032224 <AmiBlitz3_wizzard.ab2@24401>   CMP.b #"9",d1
00032228 <AmiBlitz3_wizzard.ab2@24402>   BGT 'l11
0003222C <AmiBlitz3_wizzard.ab2@24403> BRA.s 'l1
00032234 <AmiBlitz3_wizzard.ab2@24406>   MOVE.b #1,quickadd
0003223A <AmiBlitz3_wizzard.ab2@24409>   MOVEA.l letstart,A5
0003223C <AmiBlitz3_wizzard.ab2@24410>   SUBQ.w #1,A5
00032240 <AmiBlitz3_wizzard.ab2@24413>   CMP.b #$7,D2
00032244 <AmiBlitz3_wizzard.ab2@24414>    BNE.w JL_0_DF8A
00032248 <AmiBlitz3_wizzard.ab2@24420>   MOVEM.w D2-D3,-(A7)
0003224E <AmiBlitz3_wizzard.ab2@24421>   MOVE.l lastoffset_org,-(A7)
00032254 <AmiBlitz3_wizzard.ab2@24422>   MOVE.w varmode,-(A7)
0003225E <AmiBlitz3_wizzard.ab2@24424>    MOVE.l #forthstack,forthsp
00032268 <AmiBlitz3_wizzard.ab2@24425>    MOVE.l #precstack,precsp
0003226E <AmiBlitz3_wizzard.ab2@24426>    CLR.w regnum
00032274 <AmiBlitz3_wizzard.ab2@24427>    CLR.w nonew
0003227A <AmiBlitz3_wizzard.ab2@24428>    CLR.w sbasegot
00032284 <AmiBlitz3_wizzard.ab2@24429>    MOVE.w varcodelen,oldvcodelen
0003228A <AmiBlitz3_wizzard.ab2@24430>    CLR.w varcodelen
00032292 <AmiBlitz3_wizzard.ab2@24431>    MOVE.w #$FFFF,lasta6
00032294 <AmiBlitz3_wizzard.ab2@24434>   MOVEQ.l #$07,D2
00032298 <AmiBlitz3_wizzard.ab2@24435>    BSR.w eval
0003229E <AmiBlitz3_wizzard.ab2@24436>   MOVE.w (A7)+,varmode
000322A4 <AmiBlitz3_wizzard.ab2@24437>   MOVE.l (A7)+,lastoffset_org
000322AA <AmiBlitz3_wizzard.ab2@24438>   MOVE.w moved0a3,D1
000322B0 <AmiBlitz3_wizzard.ab2@24439>    JSR writeword
000322B6 <AmiBlitz3_wizzard.ab2@24440>   MOVE.w commode,D1
000322BA <AmiBlitz3_wizzard.ab2@24441>    BEQ.w JL_0_DF38
000322C0 <AmiBlitz3_wizzard.ab2@24442>   LEA pulla2st,A0
000322C6 <AmiBlitz3_wizzard.ab2@24443>   LEA pulla2stf,A1
000322CC <AmiBlitz3_wizzard.ab2@24444>    JSR pokecode
000322D0 <AmiBlitz3_wizzard.ab2@24445> BRA.w JL_0_DF3C
000322D4 <AmiBlitz3_wizzard.ab2@24448>   BSR.w JL_0_B63C
000322D8 <AmiBlitz3_wizzard.ab2@24451>   MOVEM.w (A7)+,D2-D3
000322DC <AmiBlitz3_wizzard.ab2@24452>   BTST #$F,D2
000322E0 <AmiBlitz3_wizzard.ab2@24453>   BNE.w JL_0_DF58
000322E6 <AmiBlitz3_wizzard.ab2@24454>     MOVE.w D3,leaa5d3a2+2
000322EC <AmiBlitz3_wizzard.ab2@24455>     MOVE.l leaa5d3a2,D1
000322F2 <AmiBlitz3_wizzard.ab2@24456>     JSR pokela5s
000322F6 <AmiBlitz3_wizzard.ab2@24459>   MOVE.w #$FE6F,D1
000322FC <AmiBlitz3_wizzard.ab2@24460>   JSR uselib
00032302 <AmiBlitz3_wizzard.ab2@24461>   MOVE.l #$C700,D1
00032308 <AmiBlitz3_wizzard.ab2@24462>   MOVE.l d1,lastinstruction
0003230E <AmiBlitz3_wizzard.ab2@24463>   MOVE.w varmode,D2
00032312 <AmiBlitz3_wizzard.ab2@24464>   BNE.w JL_0_DF70
00032314 <AmiBlitz3_wizzard.ab2@24465>     ADDQ.w #1,D1
00032318 <AmiBlitz3_wizzard.ab2@24468>   BSR.w Atokejsr
0003231C <AmiBlitz3_wizzard.ab2@24469>   CMP.w #$2C,D0
00032320 <AmiBlitz3_wizzard.ab2@24470>   BNE.w JL_0_E0C6
00032326 <AmiBlitz3_wizzard.ab2@24472>   MOVE.w addq4a2,D1
0003232C <AmiBlitz3_wizzard.ab2@24473>   JSR writeword
00032330 <AmiBlitz3_wizzard.ab2@24474> BRA.w JL_0_E018
00032336 <AmiBlitz3_wizzard.ab2@24477> JMP error4char
0003233C <AmiBlitz3_wizzard.ab2@24480> JMP error_convert_types
00032340 <AmiBlitz3_wizzard.ab2@24484>    BTST #$E,D2
00032344 <AmiBlitz3_wizzard.ab2@24485>    BNE.w JL_0_DF9C
00032346 <AmiBlitz3_wizzard.ab2@24486>   TST.b D2
0003234A <AmiBlitz3_wizzard.ab2@24487>    BEQ.w JUMP_noleterr
00032350 <AmiBlitz3_wizzard.ab2@24488>    TST.b newsyntax
00032354 <AmiBlitz3_wizzard.ab2@24489>    BEQ JL_0_DFA0
00032358 <AmiBlitz3_wizzard.ab2@24492>    CMP.w #$4022,(a5)
0003235C <AmiBlitz3_wizzard.ab2@24493>    BNE JL_0_DFA0
00032362 <AmiBlitz3_wizzard.ab2@24494>    CMP.l #3,d2
00032366 <AmiBlitz3_wizzard.ab2@24495>    BNE  JUMP_error_convert_types
00032368 <AmiBlitz3_wizzard.ab2@24496>    ADDQ #2,a5
0003236A <AmiBlitz3_wizzard.ab2@24497>    MOVEQ #0,d0
0003236C <AmiBlitz3_wizzard.ab2@24498>    MOVE.b (a5)+,d0
00032370 <AmiBlitz3_wizzard.ab2@24499>    BEQ JL_0_DFA0
00032374 <AmiBlitz3_wizzard.ab2@24500>    CMP.b #$22,d0
00032378 <AmiBlitz3_wizzard.ab2@24501>    BNE 'l1
0003237C <AmiBlitz3_wizzard.ab2@24502>    MOVE.b #0,d0
00032380 <AmiBlitz3_wizzard.ab2@24503> BRA 'do
00032382 <AmiBlitz3_wizzard.ab2@24506>   ASL.l #8,d0
00032384 <AmiBlitz3_wizzard.ab2@24507>    MOVE.b (a5)+,d0
00032388 <AmiBlitz3_wizzard.ab2@24508>    BEQ JL_0_DFA0
0003238C <AmiBlitz3_wizzard.ab2@24509>    CMP.b #$22,d0
00032390 <AmiBlitz3_wizzard.ab2@24510>    BNE 'l2
00032394 <AmiBlitz3_wizzard.ab2@24511>    MOVE.b #0,d0
00032396 <AmiBlitz3_wizzard.ab2@24512>    ASR.l #8,d0
0003239A <AmiBlitz3_wizzard.ab2@24513> BRA 'do
0003239C <AmiBlitz3_wizzard.ab2@24516>   ASL.l #8,d0
0003239E <AmiBlitz3_wizzard.ab2@24517>     MOVE.b (a5)+,d0
000323A2 <AmiBlitz3_wizzard.ab2@24518>    BEQ JL_0_DFA0
000323A6 <AmiBlitz3_wizzard.ab2@24519>    CMP.b #$22,d0
000323AA <AmiBlitz3_wizzard.ab2@24520>    BNE 'l3
000323AE <AmiBlitz3_wizzard.ab2@24521>    MOVE.b #0,d0
000323B0 <AmiBlitz3_wizzard.ab2@24522>    ASR.l #8,d0
000323B4 <AmiBlitz3_wizzard.ab2@24523> BRA 'do
000323B6 <AmiBlitz3_wizzard.ab2@24526>   ASL.l #8,d0
000323B8 <AmiBlitz3_wizzard.ab2@24527>     MOVE.b (a5)+,d0
000323BC <AmiBlitz3_wizzard.ab2@24528>    BEQ JL_0_DFA0
000323C0 <AmiBlitz3_wizzard.ab2@24529>    CMP.b #$22,d0
000323C4 <AmiBlitz3_wizzard.ab2@24530>    BNE 'l4
000323C8 <AmiBlitz3_wizzard.ab2@24531>    MOVE.b #0,d0
000323CA <AmiBlitz3_wizzard.ab2@24532>    ASR.l #8,d0
000323CE <AmiBlitz3_wizzard.ab2@24533> BRA 'do
000323D2 <AmiBlitz3_wizzard.ab2@24536>    CMP.b #$22,(a5)+
000323D6 <AmiBlitz3_wizzard.ab2@24537>    BNE JUMP_error4char
000323DA <AmiBlitz3_wizzard.ab2@24540>   MOVE.w #$2b7c,d1
000323E0 <AmiBlitz3_wizzard.ab2@24541>    TST.w varmode
000323E4 <AmiBlitz3_wizzard.ab2@24542>    BEQ 'g3
000323E8 <AmiBlitz3_wizzard.ab2@24543>    BCLR #9,d1
000323EE <AmiBlitz3_wizzard.ab2@24546>     JSR writeword
000323F0 <AmiBlitz3_wizzard.ab2@24547>     MOVE.l d0,d1
000323F6 <AmiBlitz3_wizzard.ab2@24548>     JSR writelong
000323F8 <AmiBlitz3_wizzard.ab2@24549>     MOVE.w d3,d1
000323FE <AmiBlitz3_wizzard.ab2@24550>     JSR writeword
00032404 <AmiBlitz3_wizzard.ab2@24551>     JSR get1bytemain
00032406 <AmiBlitz3_wizzard.ab2@24552> RTS
0003240C <AmiBlitz3_wizzard.ab2@24558> JMP noleterr
00032412 <AmiBlitz3_wizzard.ab2@24562>   MOVE.w d2,vartype
00032416 <AmiBlitz3_wizzard.ab2@24563>   MOVE.b #$3,D2
0003241A <AmiBlitz3_wizzard.ab2@24566>   CMP.b #5,d2
0003241E <AmiBlitz3_wizzard.ab2@24567>   BNE 'l1
00032424 <AmiBlitz3_wizzard.ab2@24568>   MOVE.l a2,currtype
00032428 <AmiBlitz3_wizzard.ab2@24572>   MOVEM.w D2-D3,-(A7)
0003242E <AmiBlitz3_wizzard.ab2@24573>   MOVE.w varmode,-(A7)
00032434 <AmiBlitz3_wizzard.ab2@24574>   MOVE.l a2,leftsidetype
00032438 <AmiBlitz3_wizzard.ab2@24575>   BTST #$f,d2
0003243C <AmiBlitz3_wizzard.ab2@24576>   BEQ 'nomultiassign
00032442 <AmiBlitz3_wizzard.ab2@24577>   CLR.l leftsidetype                        ;its multiassign to type entries so no typecheck need
00032446 <AmiBlitz3_wizzard.ab2@24578> 'nomultiassign  ANDI.w #$FF,D2
0003244C <AmiBlitz3_wizzard.ab2@24579>   MOVE.l lastoffset_org,-(A7)
00032450 <AmiBlitz3_wizzard.ab2@24580>   BSR.w eval                                ; calc right side of var assign
00032454 <AmiBlitz3_wizzard.ab2@24582>   MOVEM.l a0/a1,-(a7)
0003245A <AmiBlitz3_wizzard.ab2@24583>   MOVE.l leftsidetype,a0
00032460 <AmiBlitz3_wizzard.ab2@24584>   CMP.l #0,a0
00032464 <AmiBlitz3_wizzard.ab2@24585>   BEQ 'nocheck
0003246C <AmiBlitz3_wizzard.ab2@24586>   CMP.l #$100,4(a0)
00032470 <AmiBlitz3_wizzard.ab2@24587>   BLE 'nocheck
00032476 <AmiBlitz3_wizzard.ab2@24588>   TST.l typetocast
0003247A <AmiBlitz3_wizzard.ab2@24589>   BEQ 'nocast
00032480 <AmiBlitz3_wizzard.ab2@24590>   MOVE.l typetocast,a1
00032484 <AmiBlitz3_wizzard.ab2@24591>   BRA 'typecheck
0003248A <AmiBlitz3_wizzard.ab2@24592> 'nocast  TST.l rightsidetype
0003248E <AmiBlitz3_wizzard.ab2@24593>   BEQ 'nocheck
00032494 <AmiBlitz3_wizzard.ab2@24594>   MOVE.l rightsidetype,a1
0003249C <AmiBlitz3_wizzard.ab2@24595>   CMP.l #$100,4(a1)
000324A0 <AmiBlitz3_wizzard.ab2@24596>   BGE 'typecheck
000324A8 <AmiBlitz3_wizzard.ab2@24597>   CMP.l #$3,4(a1)
000324AC <AmiBlitz3_wizzard.ab2@24598>   BEQ 'ok                              ;long assign is allow with this codelines
000324B0 <AmiBlitz3_wizzard.ab2@24599>   BRA 'error
000324B6 <AmiBlitz3_wizzard.ab2@24601>   TST.b typecheck
000324BA <AmiBlitz3_wizzard.ab2@24602>   BEQ 'nocheck
000324C0 <AmiBlitz3_wizzard.ab2@24603>   TST.b notypecheck
000324C4 <AmiBlitz3_wizzard.ab2@24604>   BNE 'ok
000324C6 <AmiBlitz3_wizzard.ab2@24605>   CMP.l a0,a1
000324CA <AmiBlitz3_wizzard.ab2@24606>   BEQ 'ok
000324CE <AmiBlitz3_wizzard.ab2@24608>   MOVE.l 4(a1),a1                   ; load the address of 1. type.
000324D2 <AmiBlitz3_wizzard.ab2@24609>   CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
000324D6 <AmiBlitz3_wizzard.ab2@24610>   BEQ 'ok
000324DC <AmiBlitz3_wizzard.ab2@24612>  JMP   error_convert_types     ;for syntax 4  = typecheck
000324E2 <AmiBlitz3_wizzard.ab2@24615>    CLR.l typetocast
000324E6 <AmiBlitz3_wizzard.ab2@24616>    MOVEM.l (a7)+, a0/a1
000324EC <AmiBlitz3_wizzard.ab2@24617>   MOVE.l (A7)+,lastoffset_org
000324F2 <AmiBlitz3_wizzard.ab2@24618>   MOVE.w commode,D1
000324F6 <AmiBlitz3_wizzard.ab2@24619>    BNE.w JL_0_DFCC
000324FA <AmiBlitz3_wizzard.ab2@24620>    BSR.w JL_0_B63C
00032500 <AmiBlitz3_wizzard.ab2@24623>   MOVE.w (A7)+,varmode
00032504 <AmiBlitz3_wizzard.ab2@24624>   MOVEM.w (A7)+,D2-D3
00032508 <AmiBlitz3_wizzard.ab2@24626>   MOVE.w #$2B40,D1
0003250E <AmiBlitz3_wizzard.ab2@24627>   MOVE.w varmode,D4
00032512 <AmiBlitz3_wizzard.ab2@24628>    BEQ.w JL_0_DFE8
00032516 <AmiBlitz3_wizzard.ab2@24629>   BCLR #$9,D1
0003251A <AmiBlitz3_wizzard.ab2@24632>   BTST #$F,D2
0003251E <AmiBlitz3_wizzard.ab2@24633>    BEQ.w JL_0_E090
00032524 <AmiBlitz3_wizzard.ab2@24634>    TST.b stackcorrect
00032528 <AmiBlitz3_wizzard.ab2@24635>    BNE 'st1
0003252E <AmiBlitz3_wizzard.ab2@24636>   MOVE.w commode,D1
00032532 <AmiBlitz3_wizzard.ab2@24637>    BEQ.w JL_0_E004
00032538 <AmiBlitz3_wizzard.ab2@24640>   MOVE.w pulla2,D1
0003253E <AmiBlitz3_wizzard.ab2@24641>    JSR writeword
00032542 <AmiBlitz3_wizzard.ab2@24644>   MOVE.w #$2480,D1
00032546 <AmiBlitz3_wizzard.ab2@24645>    MOVEM.l a0/d0,-(a7)
0003254C <AmiBlitz3_wizzard.ab2@24646>    MOVEA.l lastoffset_org,A0
0003254E <AmiBlitz3_wizzard.ab2@24647>    MOVE.l A0,D0
00032552 <AmiBlitz3_wizzard.ab2@24648>    BEQ.w 'skip
00032554 <AmiBlitz3_wizzard.ab2@24649>    MOVEA.l D0,A0
0003255C <AmiBlitz3_wizzard.ab2@24650>    MOVE.l $A(A0),currtype
00032560 <AmiBlitz3_wizzard.ab2@24653>   MOVEM.l (a7)+,a0/d0
00032564 <AmiBlitz3_wizzard.ab2@24654>   CMP.w #$2C,D0
00032568 <AmiBlitz3_wizzard.ab2@24655>    BNE.w JL_0_E090
0003256C <AmiBlitz3_wizzard.ab2@24656>     MOVE.w #$24C0,D1
00032570 <AmiBlitz3_wizzard.ab2@24657>    BSR.w JL_0_E090                                         ;write store
00032576 <AmiBlitz3_wizzard.ab2@24660>    MOVE.l lastoffset_org,D0
0003257E <AmiBlitz3_wizzard.ab2@24664>   MOVE.w #$FFFF,commode
00032584 <AmiBlitz3_wizzard.ab2@24665>   CLR.w varcodelen
0003258C <AmiBlitz3_wizzard.ab2@24666>   MOVE.b #1,optiarray
00032592 <AmiBlitz3_wizzard.ab2@24667>   MOVE.w pusha2,D1
00032598 <AmiBlitz3_wizzard.ab2@24668>    JSR writeword
0003259E <AmiBlitz3_wizzard.ab2@24669>   TST.l lastoffset_org
000325A2 <AmiBlitz3_wizzard.ab2@24670>   BEQ dimmore
000325A8 <AmiBlitz3_wizzard.ab2@24671>   MOVEA.l lastoffset_org,A0
000325AA <AmiBlitz3_wizzard.ab2@24672>   MOVE.l (A0),D0
000325AE <AmiBlitz3_wizzard.ab2@24673>    BEQ.w JUMP_comerr
000325B0 <AmiBlitz3_wizzard.ab2@24674>   MOVEA.l D0,A0
000325B6 <AmiBlitz3_wizzard.ab2@24675>   MOVE.l A0,lastoffset_org
000325BC <AmiBlitz3_wizzard.ab2@24676>   BTST #$1,$7(A0)
000325C0 <AmiBlitz3_wizzard.ab2@24677>    BNE.w JUMP_nocomerr
000325C4 <AmiBlitz3_wizzard.ab2@24678>   MOVEA.l $A(A0),A1
000325C8 <AmiBlitz3_wizzard.ab2@24679>   MOVE.l $4(A1),D2
000325CE <AmiBlitz3_wizzard.ab2@24682>   BTST #$0,$7(A0)
000325D2 <AmiBlitz3_wizzard.ab2@24683>    BNE.w JL_0_E078
000325D8 <AmiBlitz3_wizzard.ab2@24684>   CMP.l #$100,D2
000325DC <AmiBlitz3_wizzard.ab2@24685>    BCC.l JUMP_nocomerr
000325E0 <AmiBlitz3_wizzard.ab2@24686> BRA.w JL_0_E088                                     ; do do type\x= 10,20,30....
000325E6 <AmiBlitz3_wizzard.ab2@24689>         CLR.b optiarray
000325EA <AmiBlitz3_wizzard.ab2@24690>         CMP.w #"@@",(a5)
000325EE <AmiBlitz3_wizzard.ab2@24691>         BEQ 'n1
000325F2 <AmiBlitz3_wizzard.ab2@24692> BRA 'd1
000325F8 <AmiBlitz3_wizzard.ab2@24695>   JSR nextline
000325FA <AmiBlitz3_wizzard.ab2@24696>         MOVE.l a5,-(a7)
000325FC <AmiBlitz3_wizzard.ab2@24699>   MOVE.b (a5)+,d0
00032600 <AmiBlitz3_wizzard.ab2@24700>         CMP.b #$20,d0
00032604 <AmiBlitz3_wizzard.ab2@24701>         BEQ 'l2
00032606 <AmiBlitz3_wizzard.ab2@24702>         MOVE.l (a7)+,a5
0003260A <AmiBlitz3_wizzard.ab2@24703>         CMP.b #";",d0
0003260E <AmiBlitz3_wizzard.ab2@24704>         BEQ 'n1
00032614 <AmiBlitz3_wizzard.ab2@24707>         TST.w debugmode
00032618 <AmiBlitz3_wizzard.ab2@24708>         BEQ JL_0_DEE0
0003261A <AmiBlitz3_wizzard.ab2@24709>         MOVE.l a0,-(a7)
00032620 <AmiBlitz3_wizzard.ab2@24710>         MOVE.l pushat,a0
00032626 <AmiBlitz3_wizzard.ab2@24711>         CMP.l #0,a0
0003262A <AmiBlitz3_wizzard.ab2@24712>         BNE 'o1
0003262E <AmiBlitz3_wizzard.ab2@24713> BRA 'skip
00032636 <AmiBlitz3_wizzard.ab2@24716>         ADD.l #1,2(a0)
0003263C <AmiBlitz3_wizzard.ab2@24719>   CLR.w commode
00032644 <AmiBlitz3_wizzard.ab2@24720>         MOVE.b #1,stackcorrect
00032646 <AmiBlitz3_wizzard.ab2@24721>         MOVE.l (a7)+,a0
0003264C <AmiBlitz3_wizzard.ab2@24722> JMP JL_0_DEE0
00032652 <AmiBlitz3_wizzard.ab2@24725> JMP nocomerr
00032658 <AmiBlitz3_wizzard.ab2@24728>   CMP.l #$100,D2
0003265C <AmiBlitz3_wizzard.ab2@24729>    BCS.w JL_0_E084
0003265E <AmiBlitz3_wizzard.ab2@24730>   MOVEQ.l #$00,D2
00032662 <AmiBlitz3_wizzard.ab2@24733>   BSET #$E,D2
00032666 <AmiBlitz3_wizzard.ab2@24736>   BSET #$F,D2
0003266A <AmiBlitz3_wizzard.ab2@24737> BRA.w JL_0_DEE0
00032670 <AmiBlitz3_wizzard.ab2@24740>    MOVE.l destpointer,a4
00032678 <AmiBlitz3_wizzard.ab2@24741>    MOVE.l #$f22a6400,-4(a4)
0003267E <AmiBlitz3_wizzard.ab2@24742>    MOVE.w arrayoffset,d1
00032684 <AmiBlitz3_wizzard.ab2@24743> JMP writeword
0003268A <AmiBlitz3_wizzard.ab2@24746> JMP comerr
00032690 <AmiBlitz3_wizzard.ab2@24749>    TST.b fpu
00032694 <AmiBlitz3_wizzard.ab2@24750>    BEQ 'nofloat
00032698 <AmiBlitz3_wizzard.ab2@24751>    CMP.b #5,d2
0003269C <AmiBlitz3_wizzard.ab2@24752>    BNE 'nofloat
000326A2 <AmiBlitz3_wizzard.ab2@24753>    CLR.w fp0var
000326A8 <AmiBlitz3_wizzard.ab2@24754>    LEA regtable,a4
000326AA <AmiBlitz3_wizzard.ab2@24755>    TST.l (a4)
000326AE <AmiBlitz3_wizzard.ab2@24756>    BEQ 'noreg
000326B2 <AmiBlitz3_wizzard.ab2@24757>    BTST #15,d2                                             ;regvars
000326B6 <AmiBlitz3_wizzard.ab2@24758>    BNE 'noreg
000326BA <AmiBlitz3_wizzard.ab2@24759>    CMP.w 0+4(a4),d3
000326BE <AmiBlitz3_wizzard.ab2@24760>    BNE 'doreg1
000326C4 <AmiBlitz3_wizzard.ab2@24761>    MOVE.l #$f2000380,d1
000326CA <AmiBlitz3_wizzard.ab2@24762>    MOVE.w regnum,d0
000326CE <AmiBlitz3_wizzard.ab2@24763>    BNE 'noopt
000326D4 <AmiBlitz3_wizzard.ab2@24769>    MOVE.l destpointer,a4
000326DC <AmiBlitz3_wizzard.ab2@24770>    CMP.l #$f2001c80,-8(a4)
000326E0 <AmiBlitz3_wizzard.ab2@24771>    BNE 'noopt
000326E8 <AmiBlitz3_wizzard.ab2@24772>    CMP.l #$f2000422,-4(a4)
000326EC <AmiBlitz3_wizzard.ab2@24773>    BNE 'noopt
000326F2 <AmiBlitz3_wizzard.ab2@24774>    MOVE.l #$f20003a2,d1
000326FC <AmiBlitz3_wizzard.ab2@24775>    SUB.l #8,destpointer
000326FE <AmiBlitz3_wizzard.ab2@24778>    ASL.w #7,d0
00032700 <AmiBlitz3_wizzard.ab2@24779>    OR.w d0,d1
00032706 <AmiBlitz3_wizzard.ab2@24780>    JSR writelong
00032708 <AmiBlitz3_wizzard.ab2@24781> RTS
0003270C <AmiBlitz3_wizzard.ab2@24784>   CMP.w 8+4(a4),d3
00032710 <AmiBlitz3_wizzard.ab2@24785>    BNE 'doreg2
00032716 <AmiBlitz3_wizzard.ab2@24786>    MOVE.l #$f2000300,d1
0003271C <AmiBlitz3_wizzard.ab2@24787>    MOVE.w regnum,d0
0003271E <AmiBlitz3_wizzard.ab2@24788>    ASL.w #7,d0
00032720 <AmiBlitz3_wizzard.ab2@24789>    OR.w d0,d1
00032726 <AmiBlitz3_wizzard.ab2@24790>    JSR writelong
00032728 <AmiBlitz3_wizzard.ab2@24791> RTS
0003272C <AmiBlitz3_wizzard.ab2@24794>   CMP.w 16+4(a4),d3
00032730 <AmiBlitz3_wizzard.ab2@24795>    BNE 'doreg3
00032736 <AmiBlitz3_wizzard.ab2@24796>    MOVE.l #$f2000280,d1
0003273C <AmiBlitz3_wizzard.ab2@24797>    MOVE.w regnum,d0
0003273E <AmiBlitz3_wizzard.ab2@24798>    ASL.w #7,d0
00032740 <AmiBlitz3_wizzard.ab2@24799>    OR.w d0,d1
00032746 <AmiBlitz3_wizzard.ab2@24800>    JSR  writelong
00032748 <AmiBlitz3_wizzard.ab2@24801>  RTS
0003274C <AmiBlitz3_wizzard.ab2@24804>   CMP.w 24+4(a4),d3
00032750 <AmiBlitz3_wizzard.ab2@24805>    BNE 'doreg4
00032756 <AmiBlitz3_wizzard.ab2@24806>    MOVE.l #$f2000200,d1
0003275C <AmiBlitz3_wizzard.ab2@24807>    MOVE.w regnum,d0
0003275E <AmiBlitz3_wizzard.ab2@24808>    ASL.w #7,d0
00032760 <AmiBlitz3_wizzard.ab2@24809>    OR.w d0,d1
00032766 <AmiBlitz3_wizzard.ab2@24810>    JSR writelong
00032768 <AmiBlitz3_wizzard.ab2@24811> RTS
0003276C <AmiBlitz3_wizzard.ab2@24814>   CMP.w 32+4(a4),d3
00032770 <AmiBlitz3_wizzard.ab2@24815>    BNE 'noreg
00032776 <AmiBlitz3_wizzard.ab2@24816>    MOVE.l #$f2000180,d1
0003277C <AmiBlitz3_wizzard.ab2@24817>    MOVE.w regnum,d0
0003277E <AmiBlitz3_wizzard.ab2@24818>    ASL.w #7,d0
00032780 <AmiBlitz3_wizzard.ab2@24819>    OR.w d0,d1
00032786 <AmiBlitz3_wizzard.ab2@24820>    JSR writelong
00032788 <AmiBlitz3_wizzard.ab2@24821> RTS
0003278E <AmiBlitz3_wizzard.ab2@24824>    TST.w regnum
00032792 <AmiBlitz3_wizzard.ab2@24825>    BNE 'nofp0
00032798 <AmiBlitz3_wizzard.ab2@24826>    MOVE.l destpointer ,a4
000327A0 <AmiBlitz3_wizzard.ab2@24827>    CMP.l #$f2304400,-6(a4)
000327A4 <AmiBlitz3_wizzard.ab2@24828>    BNE 'do
000327AA <AmiBlitz3_wizzard.ab2@24829>    CMP.w #$1990,-2(a4)
000327AE <AmiBlitz3_wizzard.ab2@24830>    BNE 'do
000327B2 <AmiBlitz3_wizzard.ab2@24831>    BTST #15,d2                                             ;types ?
000327B6 <AmiBlitz3_wizzard.ab2@24832>    BNE 'do
000327BC <AmiBlitz3_wizzard.ab2@24833>   MOVE.l #$2b701990,d1                                     ;var
000327C2 <AmiBlitz3_wizzard.ab2@24834>   TST.w varmode
000327C6 <AmiBlitz3_wizzard.ab2@24835>   BEQ 'glob1
000327CA <AmiBlitz3_wizzard.ab2@24836>   BCLR #25,d1
000327CE <AmiBlitz3_wizzard.ab2@24839>   MOVE.l d1,-6(a4)
000327D2 <AmiBlitz3_wizzard.ab2@24840>   MOVE.w d3,-2(a4)
000327D8 <AmiBlitz3_wizzard.ab2@24841>   CLR.w fp0var
000327E0 <AmiBlitz3_wizzard.ab2@24842>   MOVE.w #$ffff,fp0mode
000327E2 <AmiBlitz3_wizzard.ab2@24843> RTS
000327EA <AmiBlitz3_wizzard.ab2@24846>    CMP.l #$f22d4400,-6(a4)                                 ;fmove.s (a5),fp0
000327EE <AmiBlitz3_wizzard.ab2@24847>    BNE 'do3
000327F8 <AmiBlitz3_wizzard.ab2@24848>    CMP.l #newtype_double,currtype
000327FC <AmiBlitz3_wizzard.ab2@24849>    BEQ 'do4
00032800 <AmiBlitz3_wizzard.ab2@24852>   MOVE.w #$2b6d,d1
00032806 <AmiBlitz3_wizzard.ab2@24853>    TST.w varmode
0003280A <AmiBlitz3_wizzard.ab2@24854>    BEQ 'g2
0003280E <AmiBlitz3_wizzard.ab2@24855>     BCLR #9,d1
00032812 <AmiBlitz3_wizzard.ab2@24858>     CMP.w #$2b6d,d1
00032816 <AmiBlitz3_wizzard.ab2@24859>     BNE 'd1
0003281A <AmiBlitz3_wizzard.ab2@24860>     CMP.w -2(a4),d3
0003281E <AmiBlitz3_wizzard.ab2@24861>     BNE 'd1
00032824 <AmiBlitz3_wizzard.ab2@24862>     SUBQ.l #6,destpointer
00032828 <AmiBlitz3_wizzard.ab2@24863> BRA 'd12
0003282C <AmiBlitz3_wizzard.ab2@24866>     MOVE.w d1,-6(a4)                                       ;fmove.s to move.l mem,mem
00032832 <AmiBlitz3_wizzard.ab2@24867>     MOVE.w -2(a4),-4(a4)
00032836 <AmiBlitz3_wizzard.ab2@24868>     MOVE.w d3,-2(a4)
0003283C <AmiBlitz3_wizzard.ab2@24871>   CLR.w fp0var
00032844 <AmiBlitz3_wizzard.ab2@24872>     MOVE.w #$ffff,fp0mode
00032846 <AmiBlitz3_wizzard.ab2@24873> RTS
0003284E <AmiBlitz3_wizzard.ab2@24876>   CMP.l #$f22c4400,-6(a4)                                  ;fmove.s (a4)
00032852 <AmiBlitz3_wizzard.ab2@24877>    BNE 'do4
00032856 <AmiBlitz3_wizzard.ab2@24878>    MOVE.w #$2b6c,d1
0003285C <AmiBlitz3_wizzard.ab2@24879>       TST.w varmode
00032860 <AmiBlitz3_wizzard.ab2@24880>    BEQ 'g3
00032864 <AmiBlitz3_wizzard.ab2@24881>    BCLR #9,d1
00032868 <AmiBlitz3_wizzard.ab2@24884>   MOVE.w d1,-6(a4)
0003286E <AmiBlitz3_wizzard.ab2@24885>     MOVE.w -2(a4),-4(a4)
00032872 <AmiBlitz3_wizzard.ab2@24886>     MOVE.w d3,-2(a4)
00032878 <AmiBlitz3_wizzard.ab2@24887>     CLR.w fp0var
00032880 <AmiBlitz3_wizzard.ab2@24888>     MOVE.w #$ffff,fp0mode
00032882 <AmiBlitz3_wizzard.ab2@24889> RTS
00032888 <AmiBlitz3_wizzard.ab2@24892>   MOVE.w d3,fp0var
00032892 <AmiBlitz3_wizzard.ab2@24893>    MOVE.w varmode,fp0mode
00032894 <AmiBlitz3_wizzard.ab2@24894>    ADDQ.l #6,a4
0003289A <AmiBlitz3_wizzard.ab2@24895>    MOVE.l a4,fp0addr
000328A4 <AmiBlitz3_wizzard.ab2@24896>    MOVE.l firstiff,fp0iff
000328A8 <AmiBlitz3_wizzard.ab2@24899>   MOVEM.l d0/d4,-(a7)
000328AA <AmiBlitz3_wizzard.ab2@24900>    MOVEQ #0,d0
000328B0 <AmiBlitz3_wizzard.ab2@24901>     MOVE.w regnum,d0
000328B2 <AmiBlitz3_wizzard.ab2@24902>    ASL.w #7,d0                                             ;fpu store var
000328B6 <AmiBlitz3_wizzard.ab2@24903>   BTST #15,d2
000328BA <AmiBlitz3_wizzard.ab2@24904>    BEQ 'var
000328BC <AmiBlitz3_wizzard.ab2@24905>    MOVE.w d1,d4
000328C0 <AmiBlitz3_wizzard.ab2@24906>    CMP.w #$24c0,d4
000328C4 <AmiBlitz3_wizzard.ab2@24907>    BNE 'nopl
000328CA <AmiBlitz3_wizzard.ab2@24908>    MOVE.l #$f21a6400,d1
000328CC <AmiBlitz3_wizzard.ab2@24909>    MOVEQ #0,d3
000328D0 <AmiBlitz3_wizzard.ab2@24910> BRA 'glob
000328D6 <AmiBlitz3_wizzard.ab2@24914>   MOVE.l #$f2126400,d1
000328D8 <AmiBlitz3_wizzard.ab2@24915>    TST.w d3                                                ;offset =0
000328DC <AmiBlitz3_wizzard.ab2@24916>    BNE 'offset
000328E2 <AmiBlitz3_wizzard.ab2@24917>    MOVE.l #$f2126400,d1
000328E4 <AmiBlitz3_wizzard.ab2@24925>    MOVEQ #0,d3
000328E8 <AmiBlitz3_wizzard.ab2@24926> BRA 'glob
000328EE <AmiBlitz3_wizzard.ab2@24929>   MOVE.l #$f22d6400,d1                                     ;var
000328F4 <AmiBlitz3_wizzard.ab2@24930>   TST.w varmode
000328F8 <AmiBlitz3_wizzard.ab2@24931>   BEQ 'glob
000328FC <AmiBlitz3_wizzard.ab2@24932>   BCLR #16,d1
000328FE <AmiBlitz3_wizzard.ab2@24933>  'glob OR.l d0,d1
00032908 <AmiBlitz3_wizzard.ab2@24936>   CMP.l #newtype_double,currtype
0003290C <AmiBlitz3_wizzard.ab2@24937>   BNE 'dbl1
00032912 <AmiBlitz3_wizzard.ab2@24938>   OR.l #$00001000,d1
00032918 <AmiBlitz3_wizzard.ab2@24941>   JSR writelong
0003291E <AmiBlitz3_wizzard.ab2@24942>   CLR.l currtype
00032922 <AmiBlitz3_wizzard.ab2@24943>   MOVEM.l (a7)+,d0/d4
00032924 <AmiBlitz3_wizzard.ab2@24944>   MOVE.l d3,d1
00032928 <AmiBlitz3_wizzard.ab2@24945>   BEQ 'nooffs
0003292E <AmiBlitz3_wizzard.ab2@24946> JMP writeword
00032930 <AmiBlitz3_wizzard.ab2@24949> RTS
00032936 <AmiBlitz3_wizzard.ab2@24963>     TST.b fast                                             ;write lea->xx(a2)
0003293A <AmiBlitz3_wizzard.ab2@24964>    BEQ 'la10
00032940 <AmiBlitz3_wizzard.ab2@24968>    TST.b quickadd
00032946 <AmiBlitz3_wizzard.ab2@24970>      CLR.b quickadd
0003294A <AmiBlitz3_wizzard.ab2@24971>    CMP.w #$2480,d1
0003294E <AmiBlitz3_wizzard.ab2@24972>    BNE 'la10
00032954 <AmiBlitz3_wizzard.ab2@24973>    TST.b optiarray
00032958 <AmiBlitz3_wizzard.ab2@24974>    BNE 'la10
0003295E <AmiBlitz3_wizzard.ab2@24975>    MOVE.l destpointer,a4
00032964 <AmiBlitz3_wizzard.ab2@24976>    CMP.w #$45ea,-4(a4)
00032968 <AmiBlitz3_wizzard.ab2@24977>    BNE 'la10
00032970 <AmiBlitz3_wizzard.ab2@24978>    CMP.w #8,pushclen
00032974 <AmiBlitz3_wizzard.ab2@24979>    BEQ 'la100
0003297C <AmiBlitz3_wizzard.ab2@24980>    CMP.w #6,pushclen
00032980 <AmiBlitz3_wizzard.ab2@24981>    BNE 'la10
00032984 <AmiBlitz3_wizzard.ab2@24982>    CMP.b #3,d2
00032988 <AmiBlitz3_wizzard.ab2@24983>    BCS 'la110
0003298E <AmiBlitz3_wizzard.ab2@24985>    MOVE.w #$2540,-2(a4)
00032994 <AmiBlitz3_wizzard.ab2@24986>    MOVE.w arrayoffset,d1
0003299A <AmiBlitz3_wizzard.ab2@24987> JMP writeword
000329A0 <AmiBlitz3_wizzard.ab2@24990>    CLR.b quickadd
000329A2 <AmiBlitz3_wizzard.ab2@24991> RTS
000329A6 <AmiBlitz3_wizzard.ab2@24994>    CMP.b #2,d2
000329AA <AmiBlitz3_wizzard.ab2@24995>    BNE 'la120
000329B0 <AmiBlitz3_wizzard.ab2@24996>     MOVE.w #$3540,-2(a4)
000329B6 <AmiBlitz3_wizzard.ab2@24997>    MOVE.w arrayoffset,d1
000329BC <AmiBlitz3_wizzard.ab2@24998> JMP writeword
000329C0 <AmiBlitz3_wizzard.ab2@25001>   CMP.b #1,d2
000329C4 <AmiBlitz3_wizzard.ab2@25002>    BNE.s 'la10
000329CA <AmiBlitz3_wizzard.ab2@25003>     MOVE.w #$1540,-2(a4)
000329D0 <AmiBlitz3_wizzard.ab2@25004>    MOVE.w arrayoffset,d1
000329D6 <AmiBlitz3_wizzard.ab2@25005> JMP writeword
000329DA <AmiBlitz3_wizzard.ab2@25008>    CMP.b #3,d2
000329DE <AmiBlitz3_wizzard.ab2@25009>    BCS 'la11
000329E4 <AmiBlitz3_wizzard.ab2@25010>    MOVE.w #$2540,-4(a4)
000329E6 <AmiBlitz3_wizzard.ab2@25011> RTS
000329EA <AmiBlitz3_wizzard.ab2@25014>    CMP.b #2,d2
000329EE <AmiBlitz3_wizzard.ab2@25015>    BNE 'la12
000329F4 <AmiBlitz3_wizzard.ab2@25016>     MOVE.w #$3540,-4(a4)
000329F6 <AmiBlitz3_wizzard.ab2@25017> RTS
000329FA <AmiBlitz3_wizzard.ab2@25019>  'la12 CMP.b #1,d2
000329FE <AmiBlitz3_wizzard.ab2@25020>    BNE.s 'la10
00032A04 <AmiBlitz3_wizzard.ab2@25021>     MOVE.w #$1540,-4(a4)
00032A06 <AmiBlitz3_wizzard.ab2@25022> RTS
00032A0C <AmiBlitz3_wizzard.ab2@25025>   CLR.b optiarray
00032A10 <AmiBlitz3_wizzard.ab2@25026>    CMP.b #$1,D2
00032A14 <AmiBlitz3_wizzard.ab2@25027>    BEQ.w JL_0_E0AC
00032A18 <AmiBlitz3_wizzard.ab2@25028>    BSR.w varalign
00032A1C <AmiBlitz3_wizzard.ab2@25029>    CMP.b #$3,D2
00032A20 <AmiBlitz3_wizzard.ab2@25030>    BCC.w writevarlong
00032A26 <AmiBlitz3_wizzard.ab2@25031>    TST.b fast                                              ;optiimmi
00032A2A <AmiBlitz3_wizzard.ab2@25032>    BEQ 'l10b
00032A30 <AmiBlitz3_wizzard.ab2@25037>    MOVE.l destpointer,a0
00032A36 <AmiBlitz3_wizzard.ab2@25038>    SUB.l imm_addr,a0
00032A3C <AmiBlitz3_wizzard.ab2@25039>    CMP.l #4,a0
00032A40 <AmiBlitz3_wizzard.ab2@25040>    BNE 'l10
00032A46 <AmiBlitz3_wizzard.ab2@25041>    CLR.l imm_addr
00032A4C <AmiBlitz3_wizzard.ab2@25042>    MOVE.l destpointer,a4
00032A50 <AmiBlitz3_wizzard.ab2@25043>    OR.w #$107c,d1
00032A54 <AmiBlitz3_wizzard.ab2@25044>    MOVE.w d1,-4(a4)
00032A56 <AmiBlitz3_wizzard.ab2@25045>     MOVE.w D3,D1
00032A5C <AmiBlitz3_wizzard.ab2@25046> JMP writeword
00032A62 <AmiBlitz3_wizzard.ab2@25049>   MOVE.l destpointer,a0
00032A68 <AmiBlitz3_wizzard.ab2@25050>   SUB.l load_var_addr,a0
00032A6E <AmiBlitz3_wizzard.ab2@25051>   CMP.l #4,a0
00032A72 <AmiBlitz3_wizzard.ab2@25052>   BNE 'l10b
00032A78 <AmiBlitz3_wizzard.ab2@25053>   CMP.w #$302d,-4(a4)                                      ;check 68k opcode
00032A7C <AmiBlitz3_wizzard.ab2@25054>   BNE 'l10b
00032A82 <AmiBlitz3_wizzard.ab2@25056>   CLR.l load_var_addr
00032A88 <AmiBlitz3_wizzard.ab2@25057>   MOVE.l destpointer,a4
00032A8C <AmiBlitz3_wizzard.ab2@25058>   OR.w #$102d,d1
00032A90 <AmiBlitz3_wizzard.ab2@25059>   MOVE.w d1,-4(a4)
00032A92 <AmiBlitz3_wizzard.ab2@25060>   MOVE.w d3,d1
00032A98 <AmiBlitz3_wizzard.ab2@25061> JMP writeword
00032A9C <AmiBlitz3_wizzard.ab2@25064>   ORI.w #$1000,D1                                          ;word
00032AA0 <AmiBlitz3_wizzard.ab2@25065> BRA.w writestorevar
00032AA6 <AmiBlitz3_wizzard.ab2@25069>    TST.b fast                                              ;optiimmi
00032AAA <AmiBlitz3_wizzard.ab2@25070>    BEQ 'l10b
00032AB0 <AmiBlitz3_wizzard.ab2@25075>    MOVE.l destpointer,a0
00032AB6 <AmiBlitz3_wizzard.ab2@25076>    SUB.l imm_addr,a0
00032ABC <AmiBlitz3_wizzard.ab2@25077>    CMP.l #4,a0
00032AC0 <AmiBlitz3_wizzard.ab2@25078>    BNE 'l10
00032AC6 <AmiBlitz3_wizzard.ab2@25079>    CLR.l imm_addr
00032ACC <AmiBlitz3_wizzard.ab2@25080>    MOVE.l destpointer,a4
00032AD0 <AmiBlitz3_wizzard.ab2@25081>    OR.w #$7c,d1
00032AD4 <AmiBlitz3_wizzard.ab2@25082>    EORI #$3000,d1
00032AD8 <AmiBlitz3_wizzard.ab2@25083>    MOVE.w d1,-4(a4)
00032ADA <AmiBlitz3_wizzard.ab2@25084>       MOVE.w D3,D1
00032AE0 <AmiBlitz3_wizzard.ab2@25085> JMP writeword
00032AE6 <AmiBlitz3_wizzard.ab2@25088>   MOVE.l destpointer,a0
00032AEC <AmiBlitz3_wizzard.ab2@25089>   SUB.l load_var_addr,a0
00032AF2 <AmiBlitz3_wizzard.ab2@25090>   CMP.l #4,a0
00032AF6 <AmiBlitz3_wizzard.ab2@25091>   BNE 'l10b
00032AFC <AmiBlitz3_wizzard.ab2@25092>   CLR.l load_var_addr
00032B02 <AmiBlitz3_wizzard.ab2@25093>   MOVE.l destpointer,a4
00032B08 <AmiBlitz3_wizzard.ab2@25094>    CMP.w #$1b6d,-4(a4)
00032B0C <AmiBlitz3_wizzard.ab2@25095>    BNE 'l10b
00032B10 <AmiBlitz3_wizzard.ab2@25096>    OR.w #$2d,d1
00032B14 <AmiBlitz3_wizzard.ab2@25097>    EORI #$3000,d1
00032B18 <AmiBlitz3_wizzard.ab2@25098>    MOVE.w d1,-4(a4)
00032B1A <AmiBlitz3_wizzard.ab2@25099>   MOVE.w d3,d1
00032B20 <AmiBlitz3_wizzard.ab2@25100> JMP writeword
00032B26 <AmiBlitz3_wizzard.ab2@25103>   ADDQ.w #1,pcodd                                          ;byte
00032B2A <AmiBlitz3_wizzard.ab2@25104>   EORI.w #$3000,D1
00032B30 <AmiBlitz3_wizzard.ab2@25107>   JSR writeword
00032B34 <AmiBlitz3_wizzard.ab2@25108>   BTST #$7,D1
00032B38 <AmiBlitz3_wizzard.ab2@25109>    BNE JL_0_E0C6
00032B3A <AmiBlitz3_wizzard.ab2@25110>   MOVE.w D3,D1
00032B40 <AmiBlitz3_wizzard.ab2@25111> JMP writeword
00032B46 <AmiBlitz3_wizzard.ab2@25114>    TST.b fast                                              ;optiimmi
00032B4A <AmiBlitz3_wizzard.ab2@25115>    BEQ 'l10b
00032B50 <AmiBlitz3_wizzard.ab2@25119>    MOVE.l destpointer,a0
00032B56 <AmiBlitz3_wizzard.ab2@25120>    SUB.l imm_addr,a0
00032B5C <AmiBlitz3_wizzard.ab2@25121>    CMP.l #6,a0
00032B60 <AmiBlitz3_wizzard.ab2@25122>    BNE 'l10
00032B66 <AmiBlitz3_wizzard.ab2@25123>    CLR.l imm_addr
00032B6C <AmiBlitz3_wizzard.ab2@25124>    MOVE.l destpointer,a4
00032B70 <AmiBlitz3_wizzard.ab2@25125>    OR.w #$7c,d1
00032B74 <AmiBlitz3_wizzard.ab2@25126>    MOVE.w d1,-6(a4)
00032B76 <AmiBlitz3_wizzard.ab2@25127>     MOVE.w D3,D1
00032B7C <AmiBlitz3_wizzard.ab2@25128> JMP writeword
00032B82 <AmiBlitz3_wizzard.ab2@25131>   MOVE.l destpointer,a0
00032B88 <AmiBlitz3_wizzard.ab2@25132>   SUB.l load_var_addr,a0
00032B8E <AmiBlitz3_wizzard.ab2@25133>   CMP.l #4,a0
00032B92 <AmiBlitz3_wizzard.ab2@25134>   BNE 'l10b
00032B98 <AmiBlitz3_wizzard.ab2@25135>   CLR.l load_var_addr
00032B9E <AmiBlitz3_wizzard.ab2@25136>   MOVE.l destpointer,a4
00032BA4 <AmiBlitz3_wizzard.ab2@25137>   CMP.w #$245f,-2(a4)
00032BA8 <AmiBlitz3_wizzard.ab2@25138>   BEQ 'l10b
00032BAC <AmiBlitz3_wizzard.ab2@25139>   OR.w #$28,d1
00032BB0 <AmiBlitz3_wizzard.ab2@25140>   OR.w d1,-4(a4)
00032BB6 <AmiBlitz3_wizzard.ab2@25141>   CMP.w #$2b6d,-4(a4)
00032BBA <AmiBlitz3_wizzard.ab2@25142>   BNE 'd1
00032BBE <AmiBlitz3_wizzard.ab2@25143>   CMP.w -2(a4),d3
00032BC2 <AmiBlitz3_wizzard.ab2@25144>   BNE 'd1
00032BC8 <AmiBlitz3_wizzard.ab2@25145>   SUBQ.l #4,destpointer
00032BCA <AmiBlitz3_wizzard.ab2@25146> RTS
00032BCC <AmiBlitz3_wizzard.ab2@25149>   MOVE.w d3,d1
00032BD2 <AmiBlitz3_wizzard.ab2@25150> JMP writeword
00032BD8 <AmiBlitz3_wizzard.ab2@25153>   JSR writeword
00032BDC <AmiBlitz3_wizzard.ab2@25154>   BTST #$7,D1
00032BE0 <AmiBlitz3_wizzard.ab2@25155>    BNE.b JL_0_E0C6
00032BE2 <AmiBlitz3_wizzard.ab2@25156>   MOVE.w D3,D1
00032BE8 <AmiBlitz3_wizzard.ab2@25157> JMP writeword
00032BEA <AmiBlitz3_wizzard.ab2@25160> RTS
00032BEC <AmiBlitz3_wizzard.ab2@25164>   MOVE.w D1,-(A7)
00032BF0 <AmiBlitz3_wizzard.ab2@25165>   MOVE.w pcodd(PC),D1
00032BF2 <AmiBlitz3_wizzard.ab2@25166>   LSR.w #1,D1
00032BF6 <AmiBlitz3_wizzard.ab2@25167>    BCC.b JL_0_E0E2
00032BFC <AmiBlitz3_wizzard.ab2@25168>   CLR.w pcodd
00032C02 <AmiBlitz3_wizzard.ab2@25169>   MOVE.w add1a2,D1
00032C08 <AmiBlitz3_wizzard.ab2@25170>    JSR writeword
00032C0A <AmiBlitz3_wizzard.ab2@25173>   MOVE.w (A7)+,D1
00032C0C <AmiBlitz3_wizzard.ab2@25174> RTS
00032C0E <AmiBlitz3_wizzard.ab2@25178> add1a2:     Dc.b $52,$4A                                   ;ADDQ.W  #1,A2
00032C10 <AmiBlitz3_wizzard.ab2@25181> pcodd:     Ds.w 1                                          ;add 1 to this for bytes
00032C12 <AmiBlitz3_wizzard.ab2@25182> listadd:   Ds.w 1                                          ;set to 8 if it's a list
00032C14 <AmiBlitz3_wizzard.ab2@25183> listsize:  Ds.w 1
00032C1A <AmiBlitz3_wizzard.ab2@25187>   ADDQ.w #1,regnum
00032C22 <AmiBlitz3_wizzard.ab2@25188>   MOVE.b #1,nowdeclare
00032C28 <AmiBlitz3_wizzard.ab2@25189>   CLR.b dimkeep
00032C30 <AmiBlitz3_wizzard.ab2@25190>    CMP.l #"KEEP",-1(a5)
00032C34 <AmiBlitz3_wizzard.ab2@25191>   BNE 'nokeep
00032C3A <AmiBlitz3_wizzard.ab2@25192>   CMP.b #" ",3(a5)
00032C3E <AmiBlitz3_wizzard.ab2@25193>   BNE 'nokeep
00032C40 <AmiBlitz3_wizzard.ab2@25194>   ADDQ.l #3,a5
00032C44 <AmiBlitz3_wizzard.ab2@25197>     CMP.b #" ",(a5)
00032C48 <AmiBlitz3_wizzard.ab2@25198>     BNE '1
00032C4A <AmiBlitz3_wizzard.ab2@25199>    ADDQ #1,a5
00032C4E <AmiBlitz3_wizzard.ab2@25200> BRA '2
00032C54 <AmiBlitz3_wizzard.ab2@25203>   MOVE.l a5,lastsourcepos
00032C5C <AmiBlitz3_wizzard.ab2@25204>   MOVE.b #1,dimkeep
00032C60 <AmiBlitz3_wizzard.ab2@25212>   MOVE.w #$FF9A,D1
00032C66 <AmiBlitz3_wizzard.ab2@25213>   JSR uselib
00032C6C <AmiBlitz3_wizzard.ab2@25216>   CLR.w listadd
00032C70 <AmiBlitz3_wizzard.ab2@25217>   CMP.w #-$7F4D,D0
00032C74 <AmiBlitz3_wizzard.ab2@25218>    BNE.w JL_0_E11E
00032C7C <AmiBlitz3_wizzard.ab2@25219>   MOVE.w #$0008,listadd
00032C80 <AmiBlitz3_wizzard.ab2@25220>   MOVE.w #$FFFA,D1
00032C86 <AmiBlitz3_wizzard.ab2@25221>    JSR uselib
00032C8C <AmiBlitz3_wizzard.ab2@25222>    JSR get1bytemain
00032C92 <AmiBlitz3_wizzard.ab2@25225>   CLR.w nonew
00032C98 <AmiBlitz3_wizzard.ab2@25226>    JSR getparameter
00032CA0 <AmiBlitz3_wizzard.ab2@25227>   BTST #$1,flagmask+1
00032CA4 <AmiBlitz3_wizzard.ab2@25228>    BEQ.w JUMP_syntaxerr
00032CAA <AmiBlitz3_wizzard.ab2@25229>    JSR JL_0_8E3C
00032CB0 <AmiBlitz3_wizzard.ab2@25230>   MOVE.w notshared,D1
00032CB4 <AmiBlitz3_wizzard.ab2@25231>    BNE.w JL_0_E198
00032CBC <AmiBlitz3_wizzard.ab2@25232>   MOVE.w $8(A3),temp1
00032CC2 <AmiBlitz3_wizzard.ab2@25233>   MOVE.w proceduremode,D2
00032CC6 <AmiBlitz3_wizzard.ab2@25234>    BNE.w JL_0_E176
00032CCC <AmiBlitz3_wizzard.ab2@25235>   MOVE.w globalvarpointer,-(A7)
00032CD4 <AmiBlitz3_wizzard.ab2@25236>   MOVE.w $4(A3),globalvarpointer
00032CDA <AmiBlitz3_wizzard.ab2@25237>   ADDQ.w #4,globalvarpointer
00032CDE <AmiBlitz3_wizzard.ab2@25238>    BSR.w write_dim_code
00032CE4 <AmiBlitz3_wizzard.ab2@25239>   MOVE.w (A7)+,globalvarpointer
00032CE8 <AmiBlitz3_wizzard.ab2@25240> BRA.w JL_0_E1BA
00032CEE <AmiBlitz3_wizzard.ab2@25251>   MOVE.w globalvarpointer,-(A7)
00032CF4 <AmiBlitz3_wizzard.ab2@25252>             MOVE.w proceduremode,-(a7)
00032CFA <AmiBlitz3_wizzard.ab2@25253>             CLR.w proceduremode
00032D02 <AmiBlitz3_wizzard.ab2@25254>   MOVE.w $4(A3),globalvarpointer
00032D08 <AmiBlitz3_wizzard.ab2@25255>   ADDQ.w #4,globalvarpointer
00032D0C <AmiBlitz3_wizzard.ab2@25256>    BSR.w write_dim_code
00032D12 <AmiBlitz3_wizzard.ab2@25257>    MOVE.w (a7)+,proceduremode
00032D18 <AmiBlitz3_wizzard.ab2@25258>   MOVE.w (A7)+,globalvarpointer
00032D1C <AmiBlitz3_wizzard.ab2@25259> BRA.w JL_0_E1BA
00032D24 <AmiBlitz3_wizzard.ab2@25262>   MOVE.w #$FFFF,temp1
00032D28 <AmiBlitz3_wizzard.ab2@25263>   MOVE.w listadd(PC),D1
00032D2C <AmiBlitz3_wizzard.ab2@25264>    BEQ.w JL_0_E1B6
00032D34 <AmiBlitz3_wizzard.ab2@25265>   MOVE.w #$4000,temp1
00032D3A <AmiBlitz3_wizzard.ab2@25266>   BSET #$0,$6(A3)
00032D40 <AmiBlitz3_wizzard.ab2@25269>         TST.w proceduremode
00032D44 <AmiBlitz3_wizzard.ab2@25270>        BNE 'l1
00032D4A <AmiBlitz3_wizzard.ab2@25271>        MOVE.w locvaroff,-(a7)
00032D4E <AmiBlitz3_wizzard.ab2@25274>   BSR.w write_dim_code
00032D54 <AmiBlitz3_wizzard.ab2@25275>         TST.w proceduremode
00032D58 <AmiBlitz3_wizzard.ab2@25276>         BNE JL_0_E1BA
00032D5E <AmiBlitz3_wizzard.ab2@25277>        MOVE.w (A7)+,locvaroff
00032D64 <AmiBlitz3_wizzard.ab2@25280>   JSR get1bytemain
00032D68 <AmiBlitz3_wizzard.ab2@25281>   CMP.w #$2C,D0
00032D6C <AmiBlitz3_wizzard.ab2@25282>    BNE.w JL_0_E1CE
00032D72 <AmiBlitz3_wizzard.ab2@25283>    JSR get1bytemain
00032D76 <AmiBlitz3_wizzard.ab2@25284> BRA.w JL_0_E0FC
00032D78 <AmiBlitz3_wizzard.ab2@25287> RTS
00032D80 <AmiBlitz3_wizzard.ab2@25290>   MOVE.w #$FFFF,nonew                                      ;#-1,nonew org source
00032D86 <AmiBlitz3_wizzard.ab2@25291>   MOVE.w beginarr,D1
00032D8C <AmiBlitz3_wizzard.ab2@25292>    JSR writeword
00032D8E <AmiBlitz3_wizzard.ab2@25293>   MOVEQ.l #$00,D1
00032D94 <AmiBlitz3_wizzard.ab2@25294>    JSR writeword
00032D96 <AmiBlitz3_wizzard.ab2@25295>   MOVEQ.l #$04,D1
00032D9E <AmiBlitz3_wizzard.ab2@25296>   BTST #$0,flagmask+1
00032DA2 <AmiBlitz3_wizzard.ab2@25297>    BNE.w write_dim_code__pointer
00032DA6 <AmiBlitz3_wizzard.ab2@25298>   MOVE.w $8(A2),D1
00032DAA <AmiBlitz3_wizzard.ab2@25301>   ADD.w listadd(PC),D1                                     ;size of one element.
00032DB0 <AmiBlitz3_wizzard.ab2@25302>   MOVE.w D1,listsize
00032DB6 <AmiBlitz3_wizzard.ab2@25303>    JSR writeword
00032DBC <AmiBlitz3_wizzard.ab2@25304>   CLR.w temp2                                              ;# dim's got
00032DBE <AmiBlitz3_wizzard.ab2@25305>   MOVE.l A3,-(A7)
00032DC4 <AmiBlitz3_wizzard.ab2@25308>   ADDQ.w #1,temp2
00032DC6 <AmiBlitz3_wizzard.ab2@25309>   MOVEQ.l #$03,D2                                          ;get word
00032DCC <AmiBlitz3_wizzard.ab2@25310>   MOVE.w notshared,-(a7)
00032DD2 <AmiBlitz3_wizzard.ab2@25311>    JSR eval
00032DD8 <AmiBlitz3_wizzard.ab2@25312>   MOVE.w (a7)+,notshared
00032DDE <AmiBlitz3_wizzard.ab2@25313>   TST.b debugmode
00032DE2 <AmiBlitz3_wizzard.ab2@25314>    BEQ.w write_dim_code__norerr0
00032DE6 <AmiBlitz3_wizzard.ab2@25315>   MOVE.w #$C30F,D1
00032DEA <AmiBlitz3_wizzard.ab2@25321>       MOVE.w #$5281,d1
00032DF0 <AmiBlitz3_wizzard.ab2@25322>       JSR writeword
00032DF6 <AmiBlitz3_wizzard.ab2@25323>       MOVE.l #$4c010800,d1                                 ;dim >65536 fix
00032DFC <AmiBlitz3_wizzard.ab2@25324>       JSR writelong
00032E02 <AmiBlitz3_wizzard.ab2@25325>   MOVE.w proceduremode,D2
00032E06 <AmiBlitz3_wizzard.ab2@25326>    BEQ.w write_dim_code__global
00032E0C <AmiBlitz3_wizzard.ab2@25327>   SUBQ.w #4,locvaroff
00032E16 <AmiBlitz3_wizzard.ab2@25328>   MOVE.w locvaroff,putarr+2
00032E1A <AmiBlitz3_wizzard.ab2@25329> BRA.w write_dim_code__doit
00032E20 <AmiBlitz3_wizzard.ab2@25332> JMP syntaxerr
00032E2A <AmiBlitz3_wizzard.ab2@25335>   MOVE.w globalvarpointer,putarr+2
00032E30 <AmiBlitz3_wizzard.ab2@25336>   ADDQ.w #4,globalvarpointer
00032E36 <AmiBlitz3_wizzard.ab2@25339>   TST.b dimkeep
00032E3A <AmiBlitz3_wizzard.ab2@25340>            BEQ write_dim_code__doit_l1
00032E3C <AmiBlitz3_wizzard.ab2@25341>       MOVEQ #0,d1
00032E42 <AmiBlitz3_wizzard.ab2@25342>       MOVE.w putarr+2,d1
00032E48 <AmiBlitz3_wizzard.ab2@25343>       OR.l  #$222d0000,d1
00032E4E <AmiBlitz3_wizzard.ab2@25344>       MOVE.w proceduremode,D2
00032E52 <AmiBlitz3_wizzard.ab2@25345>       BEQ write_dim_code__doit_l2
00032E58 <AmiBlitz3_wizzard.ab2@25346>       TST.w notshared
00032E5C <AmiBlitz3_wizzard.ab2@25347>       BEQ write_dim_code__doit_l2
00032E62 <AmiBlitz3_wizzard.ab2@25348>       SUB.l #$00010000,d1
00032E68 <AmiBlitz3_wizzard.ab2@25351>   JSR writelong
00032E6E <AmiBlitz3_wizzard.ab2@25354>   MOVE.l putarr,D1
00032E74 <AmiBlitz3_wizzard.ab2@25355>       TST.w notshared
00032E78 <AmiBlitz3_wizzard.ab2@25356>       BNE write_dim_code__doit_l1a
00032E7E <AmiBlitz3_wizzard.ab2@25357>       JSR writelong
00032E82 <AmiBlitz3_wizzard.ab2@25358> BRA write_dim_code__doit_l4
00032E88 <AmiBlitz3_wizzard.ab2@25361>   JSR pokela5d
00032E8C <AmiBlitz3_wizzard.ab2@25364>   CMP.w #$2C,D0
00032E90 <AmiBlitz3_wizzard.ab2@25365>    BEQ.w write_dim_code__loop
00032E94 <AmiBlitz3_wizzard.ab2@25366>   CMP.w #$29,D0
00032E98 <AmiBlitz3_wizzard.ab2@25367>    BNE.w JUMP_syntaxerr
00032E9A <AmiBlitz3_wizzard.ab2@25368>   MOVEA.l (A7)+,A3
00032EA0 <AmiBlitz3_wizzard.ab2@25369>   MOVE.w temp1,D1
00032EA4 <AmiBlitz3_wizzard.ab2@25370>    BMI.w write_dim_code__nocare
00032EA8 <AmiBlitz3_wizzard.ab2@25374>   BTST #$E,D1
00032EAC <AmiBlitz3_wizzard.ab2@25375>    BEQ.w write_dim_code__notl
00032EB4 <AmiBlitz3_wizzard.ab2@25376>   CMPI.w #$1,temp2
00032EB8 <AmiBlitz3_wizzard.ab2@25377>    BNE.w JUMP_redimerr
00032EBC <AmiBlitz3_wizzard.ab2@25378> BRA.w write_dim_code__nocare
00032EC2 <AmiBlitz3_wizzard.ab2@25381> JMP redimerr
00032EC8 <AmiBlitz3_wizzard.ab2@25384>   CMP.w temp2,D1
00032ECC <AmiBlitz3_wizzard.ab2@25385>    BNE.w JUMP_redimerr                                      ;range too long
00032ED2 <AmiBlitz3_wizzard.ab2@25388>   LEA globalvarpointer,A0
00032ED8 <AmiBlitz3_wizzard.ab2@25389>   MOVE.w proceduremode,D1
00032EDC <AmiBlitz3_wizzard.ab2@25390>   BEQ.w write_dim_code__gskip
00032EE2 <AmiBlitz3_wizzard.ab2@25391>   LEA locvaroff,A0
00032EE8 <AmiBlitz3_wizzard.ab2@25394>   MOVE.W  extraword,(A0)
00032EEC <AmiBlitz3_wizzard.ab2@25395>   BRA.W   write_dim_code__care
00032EF4 <AmiBlitz3_wizzard.ab2@25398>   MOVE.w temp2,$8(A3)                                      ;set # dim's
00032EFA <AmiBlitz3_wizzard.ab2@25401>   LEA doarr,A0
00032F00 <AmiBlitz3_wizzard.ab2@25402>   MOVE.w $4(A3),$2(A0)
00032F08 <AmiBlitz3_wizzard.ab2@25403>   MOVE.w putarr+2,$6(A0)
00032F0A <AmiBlitz3_wizzard.ab2@25404>   MOVE.l (A0)+,D1
00032F10 <AmiBlitz3_wizzard.ab2@25405>    JSR writelong
00032F12 <AmiBlitz3_wizzard.ab2@25406>   MOVE.l (A0),D1
00032F18 <AmiBlitz3_wizzard.ab2@25407>    JSR writelong
00032F1E <AmiBlitz3_wizzard.ab2@25408>    TST.b dimkeep
00032F22 <AmiBlitz3_wizzard.ab2@25409>   BNE write_dim_code__care_l3
00032F26 <AmiBlitz3_wizzard.ab2@25412>   MOVE.w #$C400,D1
00032F2A <AmiBlitz3_wizzard.ab2@25413> BRA write_dim_code__care_l2
00032F2E <AmiBlitz3_wizzard.ab2@25416>   MOVE.w #$C405,d1
00032F34 <AmiBlitz3_wizzard.ab2@25419>   MOVE.w proceduremode,D2
00032F38 <AmiBlitz3_wizzard.ab2@25420>    BEQ.w write_dim_code__isg
00032F3E <AmiBlitz3_wizzard.ab2@25421>    TST.w notshared
00032F42 <AmiBlitz3_wizzard.ab2@25422>    BEQ write_dim_code__isg
00032F44 <AmiBlitz3_wizzard.ab2@25423>   ADDQ.w #1,D1
00032F48 <AmiBlitz3_wizzard.ab2@25426>   MOVE.w listadd(PC),D2
00032F4C <AmiBlitz3_wizzard.ab2@25427>    BEQ.w write_dim_code__isrg
00032F4E <AmiBlitz3_wizzard.ab2@25428>   MOVE.w D1,-(A7)
00032F52 <AmiBlitz3_wizzard.ab2@25429>   MOVE.w setles(PC),D1
00032F58 <AmiBlitz3_wizzard.ab2@25430>    JSR writeword
00032F5C <AmiBlitz3_wizzard.ab2@25431>   MOVE.w listsize(PC),D1
00032F62 <AmiBlitz3_wizzard.ab2@25432>    JSR writeword
00032F64 <AmiBlitz3_wizzard.ab2@25433>   MOVE.w (A7)+,D1
00032F66 <AmiBlitz3_wizzard.ab2@25434>   ADDQ.w #3,D1
00032F6A <AmiBlitz3_wizzard.ab2@25437> BRA.w Atokejsr
00032F70 <AmiBlitz3_wizzard.ab2@25444>     MOVE.l #$f23c4400,d1
00032F76 <AmiBlitz3_wizzard.ab2@25446>   MOVE.w regnum,d0
00032F78 <AmiBlitz3_wizzard.ab2@25447>   ASL.w #7,d0
00032F7A <AmiBlitz3_wizzard.ab2@25448>   OR.w d0,d1
00032F80 <AmiBlitz3_wizzard.ab2@25449>   JSR writelong
00032F86 <AmiBlitz3_wizzard.ab2@25455>     MOVE.l #$40490fd9,d1
00032F8C <AmiBlitz3_wizzard.ab2@25457>   JSR writelong
00032F92 <AmiBlitz3_wizzard.ab2@25458> JMP get1bytemain
00032F96 <AmiBlitz3_wizzard.ab2@25462> setles:   Dc.b $38,$3C,$00,$00                             ;MOVE.W  #$0000,D4
00032F9A <AmiBlitz3_wizzard.ab2@25469> vbr:                Ds.l 1
00032F9C <AmiBlitz3_wizzard.ab2@25470> cfetchmode:         Ds.w 1                               ;1=fetching a constant
00032FA2 <AmiBlitz3_wizzard.ab2@25472> constlibs           Dc.w $FDA7,$FCDF,$FD43               ;64935,64735,64835  org source
00032FA6 <AmiBlitz3_wizzard.ab2@25476> constpcat:          Ds.l 1
00032FAA <AmiBlitz3_wizzard.ab2@25477> constlibat:         Ds.l 1
00032FAE <AmiBlitz3_wizzard.ab2@25478> constmaxpc:         Dc.l $400
00032FB2 <AmiBlitz3_wizzard.ab2@25480> stacksize:          Dc.l 32768                           ;stackfuck org source
00032FB6 <AmiBlitz3_wizzard.ab2@25481> currentlabeladdr:   Dc.l labelbase                       ;lastrescon org source
00032FBA <AmiBlitz3_wizzard.ab2@25482> currentmacroaddr:   Dc.l macrobase                       ;lastresmac org source
00032FBE <AmiBlitz3_wizzard.ab2@25483> lastrestype:        Dc.l newtype_string
00032FC0 <AmiBlitz3_wizzard.ab2@25484> rescnt:             Ds.w 1                               ;# resident
00032FC2 <AmiBlitz3_wizzard.ab2@25485> state_of_residents: Ds.w 1                               ;reschg org source ;flag for if res's have changed
00032FC6 <AmiBlitz3_wizzard.ab2@25486> resat:              Dc.l residents_table                 ;??looks like not used anymore??
00032FC8 <AmiBlitz3_wizzard.ab2@25487> linedone:           Ds.w 1
00032FDE <AmiBlitz3_wizzard.ab2@25488> directbuffer:       Ds.w 11                              ;dirpcat  dc.w 0 org source
00032FE2 <AmiBlitz3_wizzard.ab2@25497>   Dc.l 0                                        ; bytetobyte
00032FE6 <AmiBlitz3_wizzard.ab2@25498>   Dc.l convert_byte_to_word                     ; bytetoword
00032FEA <AmiBlitz3_wizzard.ab2@25499>   Dc.l convert_byte_to_long                     ; bytetolong
00032FEE <AmiBlitz3_wizzard.ab2@25500>   Dc.l convert_byte_to_quick                    ; bytetoquick
00032FF2 <AmiBlitz3_wizzard.ab2@25501>   Dc.l convert_byte_to_float                    ; bytetofloat
00032FF6 <AmiBlitz3_wizzard.ab2@25502>   Dc.l convert_byte_to_long                     ; bytetolong
00032FFA <AmiBlitz3_wizzard.ab2@25503>   Dc.l error_convert_types                      ; noconerr
00032FFE <AmiBlitz3_wizzard.ab2@25506>   Dc.l convert_word_to_byte                     ; wordtobyte
00033002 <AmiBlitz3_wizzard.ab2@25507>   Dc.l 0                                        ; wordtoword
00033006 <AmiBlitz3_wizzard.ab2@25508>   Dc.l convert_word_to_long                     ; wordtolong
0003300A <AmiBlitz3_wizzard.ab2@25509>   Dc.l convert_word_to_quick                    ; wordtoquick
0003300E <AmiBlitz3_wizzard.ab2@25510>   Dc.l convert_word_to_float                    ; wordtofloat
00033012 <AmiBlitz3_wizzard.ab2@25511>   Dc.l convert_word_to_long                     ; wordtolong
00033016 <AmiBlitz3_wizzard.ab2@25512>   Dc.l error_convert_types                      ; noconerr
0003301A <AmiBlitz3_wizzard.ab2@25515>   Dc.l convert_long_to_byte                     ; longtobyte
0003301E <AmiBlitz3_wizzard.ab2@25516>   Dc.l convert_long_to_word                     ; longtoword
00033022 <AmiBlitz3_wizzard.ab2@25517>   Dc.l 0                                        ; longtolong
00033026 <AmiBlitz3_wizzard.ab2@25518>   Dc.l convert_long_to_quick                    ; longtoquick
0003302A <AmiBlitz3_wizzard.ab2@25519>   Dc.l convert_long_to_float                    ; longtofloat
0003302E <AmiBlitz3_wizzard.ab2@25520>   Dc.l 0                                        ; longtolong
00033032 <AmiBlitz3_wizzard.ab2@25521>   Dc.l error_convert_types                      ; noconerr
00033036 <AmiBlitz3_wizzard.ab2@25524>   Dc.l convert_quick_to_byte                    ; quicktobyte
0003303A <AmiBlitz3_wizzard.ab2@25525>   Dc.l convert_quick_to_word                    ; quicktoword
0003303E <AmiBlitz3_wizzard.ab2@25526>   Dc.l convert_quick_to_long                    ; quicktolong
00033042 <AmiBlitz3_wizzard.ab2@25527>   Dc.l 0                                        ; quicktoquick
00033046 <AmiBlitz3_wizzard.ab2@25528>   Dc.l convert_quick_to_float                   ; quicktofloat
0003304A <AmiBlitz3_wizzard.ab2@25529>   Dc.l convert_quick_to_long                    ; quicktolong
0003304E <AmiBlitz3_wizzard.ab2@25530>   Dc.l error_convert_types                      ; noconerr
00033052 <AmiBlitz3_wizzard.ab2@25533>   Dc.l convert_float_to_byte                    ; floattobyte
00033056 <AmiBlitz3_wizzard.ab2@25534>   Dc.l convert_float_to_word                    ; floattoword
0003305A <AmiBlitz3_wizzard.ab2@25535>   Dc.l convert_float_to_long                    ; floattolong
0003305E <AmiBlitz3_wizzard.ab2@25536>   Dc.l convert_float_to_quick                   ; floattoquick
00033062 <AmiBlitz3_wizzard.ab2@25537>   Dc.l 0                                        ; floattofloat
00033066 <AmiBlitz3_wizzard.ab2@25538>   Dc.l convert_float_to_long                    ; floattolong
0003306A <AmiBlitz3_wizzard.ab2@25539>   Dc.l error_convert_types                      ; noconerr
0003306E <AmiBlitz3_wizzard.ab2@25542>   Dc.l convert_long_to_byte                     ; longtobyte
00033072 <AmiBlitz3_wizzard.ab2@25543>   Dc.l convert_long_to_word                     ; longtoword
00033076 <AmiBlitz3_wizzard.ab2@25544>   Dc.l 0                                        ; longtolong
0003307A <AmiBlitz3_wizzard.ab2@25545>   Dc.l convert_long_to_quick                    ; longtoquick
0003307E <AmiBlitz3_wizzard.ab2@25546>   Dc.l convert_long_to_float                    ; longtofloat
00033082 <AmiBlitz3_wizzard.ab2@25547>   Dc.l 0                                        ; longtolong
00033086 <AmiBlitz3_wizzard.ab2@25548>   Dc.l error_convert_types                      ; noconerr
0003308A <AmiBlitz3_wizzard.ab2@25551>   Dc.l error_convert_types                      ; noconerr
0003308E <AmiBlitz3_wizzard.ab2@25552>   Dc.l error_convert_types                      ; noconerr
00033092 <AmiBlitz3_wizzard.ab2@25553>   Dc.l string_to_long                           ; stringtolong
00033096 <AmiBlitz3_wizzard.ab2@25554>   Dc.l error_convert_types                      ; noconerr
0003309A <AmiBlitz3_wizzard.ab2@25555>   Dc.l error_convert_types                      ; noconerr
0003309E <AmiBlitz3_wizzard.ab2@25556>   Dc.l string_to_long                           ; stringtolong
000330A2 <AmiBlitz3_wizzard.ab2@25557>   Ds.l 1
000330A4 <AmiBlitz3_wizzard.ab2@25563>   Dc.b $00,$2B                                  ;+ ; add
000330A8 <AmiBlitz3_wizzard.ab2@25564>   Dc.l do_plus_byte                             ;doplusb
000330AC <AmiBlitz3_wizzard.ab2@25565>   Dc.l do_plus_word                             ;doplusw
000330B0 <AmiBlitz3_wizzard.ab2@25566>   Dc.l do_plus_long                             ;doplusl
000330B4 <AmiBlitz3_wizzard.ab2@25567>   Dc.l do_plus_long                             ;doplusl
000330B8 <AmiBlitz3_wizzard.ab2@25568>   Dc.l do_plus_float                            ;doplusf
000330BC <AmiBlitz3_wizzard.ab2@25569>   Ds.l 1
000330C0 <AmiBlitz3_wizzard.ab2@25570>   Dc.l add_strings                              ;addstrings
000330C2 <AmiBlitz3_wizzard.ab2@25571>   Dc.b $0B,$B8
000330C4 <AmiBlitz3_wizzard.ab2@25573>   Dc.b $00,$2D                                  ;- ; sub
000330C8 <AmiBlitz3_wizzard.ab2@25574>   Dc.l do_minus_byte                            ;dominusb
000330CC <AmiBlitz3_wizzard.ab2@25575>   Dc.l do_minus_word                            ;dominusw
000330D0 <AmiBlitz3_wizzard.ab2@25576>   Dc.l do_minus_long                            ;dominusl
000330D4 <AmiBlitz3_wizzard.ab2@25577>   Dc.l do_minus_long                            ;dominusl
000330D8 <AmiBlitz3_wizzard.ab2@25578>   Dc.l do_minus_float                           ;dominusf
000330E0 <AmiBlitz3_wizzard.ab2@25579>   Ds.l 2
000330E2 <AmiBlitz3_wizzard.ab2@25580>   Dc.b $0B,$B8
000330E4 <AmiBlitz3_wizzard.ab2@25582>   Dc.b $00,$2A                                  ;* ; mul
000330E8 <AmiBlitz3_wizzard.ab2@25583>   Dc.l do_times_byte                            ;dotimesb
000330EC <AmiBlitz3_wizzard.ab2@25584>   Dc.l do_times_word                            ;dotimesw
000330F0 <AmiBlitz3_wizzard.ab2@25585>   Dc.l do_times_long                            ;dotimesl
000330F4 <AmiBlitz3_wizzard.ab2@25586>   Dc.l do_times_quick                           ;dotimesq
000330F8 <AmiBlitz3_wizzard.ab2@25587>   Dc.l do_times_float                           ;dotimesf
00033100 <AmiBlitz3_wizzard.ab2@25588>   Ds.l 2
00033102 <AmiBlitz3_wizzard.ab2@25589>   Dc.b $0F,$A0
00033104 <AmiBlitz3_wizzard.ab2@25591>   Dc.b $00,$2F                                  ;/ ; div
00033108 <AmiBlitz3_wizzard.ab2@25592>   Dc.l do_Div_byte                              ;dodivb
0003310C <AmiBlitz3_wizzard.ab2@25593>   Dc.l do_Div_word                              ;dodivb
00033110 <AmiBlitz3_wizzard.ab2@25594>   Dc.l do_Div_long                              ;dodivl
00033114 <AmiBlitz3_wizzard.ab2@25595>   Dc.l do_Div_quick                             ;dodivq
00033118 <AmiBlitz3_wizzard.ab2@25596>   Dc.l do_Div_float                             ;dodivf
00033120 <AmiBlitz3_wizzard.ab2@25597>   Ds.l 2
00033122 <AmiBlitz3_wizzard.ab2@25598>   Dc.b $0F,$A0
00033124 <AmiBlitz3_wizzard.ab2@25600>   Dc.b $00,$26                                  ;& ; & int
00033128 <AmiBlitz3_wizzard.ab2@25601>   Dc.l do_AND_byte                              ;doandb
0003312C <AmiBlitz3_wizzard.ab2@25602>   Dc.l do_AND_word                              ;doandw
00033130 <AmiBlitz3_wizzard.ab2@25603>   Dc.l do_AND_long                              ;doandl
00033134 <AmiBlitz3_wizzard.ab2@25604>   Dc.l do_AND_long                              ;doandl
00033140 <AmiBlitz3_wizzard.ab2@25605>   Ds.l 3
00033142 <AmiBlitz3_wizzard.ab2@25606>   Dc.b $13,$88
00033144 <AmiBlitz3_wizzard.ab2@25608>   Dc.b $00,$7C                                  ;| ;or int ;
00033148 <AmiBlitz3_wizzard.ab2@25609>   Dc.l do_OR_byte                               ;doorb
0003314C <AmiBlitz3_wizzard.ab2@25610>   Dc.l do_OR_word                               ;doorw
00033150 <AmiBlitz3_wizzard.ab2@25611>   Dc.l do_OR_long                               ;doorl
00033154 <AmiBlitz3_wizzard.ab2@25612>   Dc.l do_OR_long                               ;doorl
00033160 <AmiBlitz3_wizzard.ab2@25613>   Ds.l 3
00033162 <AmiBlitz3_wizzard.ab2@25614>   Dc.b $13,$88
00033164 <AmiBlitz3_wizzard.ab2@25616>   Dc.b $80,$42                                  ; AND int  ;(opand-opabcd)/$1c+$8000+fnum
00033168 <AmiBlitz3_wizzard.ab2@25617>   Dc.l do_AND_byte                              ;doandb
0003316C <AmiBlitz3_wizzard.ab2@25618>   Dc.l do_AND_word                              ;doandw
00033170 <AmiBlitz3_wizzard.ab2@25619>   Dc.l do_AND_long                              ;doandl
00033174 <AmiBlitz3_wizzard.ab2@25620>   Dc.l do_AND_long                              ;doandl
00033180 <AmiBlitz3_wizzard.ab2@25621>   Ds.l 3
00033182 <AmiBlitz3_wizzard.ab2@25622>   Dc.b $03,$E8
00033184 <AmiBlitz3_wizzard.ab2@25624>   Dc.b $80,$8A                                  ; OR int   ;(opor-opabcd)/$1c+$8000+fnum
00033188 <AmiBlitz3_wizzard.ab2@25625>   Dc.l do_OR_byte                               ;doorb
0003318C <AmiBlitz3_wizzard.ab2@25626>   Dc.l do_OR_word                               ;doorw
00033190 <AmiBlitz3_wizzard.ab2@25627>   Dc.l do_OR_long                               ;doorl
00033194 <AmiBlitz3_wizzard.ab2@25628>   Dc.l do_OR_long                               ;doorl
000331A0 <AmiBlitz3_wizzard.ab2@25629>   Ds.l 3
000331A2 <AmiBlitz3_wizzard.ab2@25630>   Dc.b $03,$E8
000331A4 <AmiBlitz3_wizzard.ab2@25632>   Dc.b $80,$73                                  ; EOR int  ;(opeor-opabcd)/$1c+$8000+fnum
000331A8 <AmiBlitz3_wizzard.ab2@25633>   Dc.l do_EOR_byte                              ;doeorb
000331AC <AmiBlitz3_wizzard.ab2@25634>   Dc.l do_EOR_word                              ;doeorw
000331B0 <AmiBlitz3_wizzard.ab2@25635>   Dc.l do_EOR_long                              ;doeorl
000331B4 <AmiBlitz3_wizzard.ab2@25636>   Dc.l do_EOR_long                              ;doeorl
000331C0 <AmiBlitz3_wizzard.ab2@25637>   Ds.l 3
000331C2 <AmiBlitz3_wizzard.ab2@25638>   Dc.b $03,$E8
000331C4 <AmiBlitz3_wizzard.ab2@25640>   Dc.b $80,$7C                                  ; LSL int  ;(oplsl-opabcd)/$1c+$8000+fnum
000331C8 <AmiBlitz3_wizzard.ab2@25641>   Dc.l do_LSL                                   ;dolslb
000331CC <AmiBlitz3_wizzard.ab2@25642>   Dc.l do_LSL                                   ;dolslw
000331D0 <AmiBlitz3_wizzard.ab2@25643>   Dc.l do_LSL                                   ;dolsll
000331D4 <AmiBlitz3_wizzard.ab2@25644>   Dc.l do_LSL                                   ;dolsll
000331E0 <AmiBlitz3_wizzard.ab2@25645>   Ds.l 3
000331E2 <AmiBlitz3_wizzard.ab2@25646>   Dc.b $17,$70
000331E4 <AmiBlitz3_wizzard.ab2@25648>   Dc.b $80,$44                                  ; ASL int  ;(opasl-opabcd)/$1c+$8000+fnum
000331E8 <AmiBlitz3_wizzard.ab2@25649>   Dc.l do_LSL                                   ;dolslb
000331EC <AmiBlitz3_wizzard.ab2@25650>   Dc.l do_LSL                                   ;dolslw
000331F0 <AmiBlitz3_wizzard.ab2@25651>   Dc.l do_LSL                                   ;dolsll
000331F4 <AmiBlitz3_wizzard.ab2@25652>   Dc.l do_LSL                                   ;dolsll
00033200 <AmiBlitz3_wizzard.ab2@25653>   Ds.l 3
00033202 <AmiBlitz3_wizzard.ab2@25654>   Dc.b $17,$70
00033204 <AmiBlitz3_wizzard.ab2@25656>   Dc.b $80,$7D                                  ; LSR int  ;(oplsr-opabcd)/$1c+$8000+fnum
00033208 <AmiBlitz3_wizzard.ab2@25657>   Dc.l do_LSR                                   ;dolsrb
0003320C <AmiBlitz3_wizzard.ab2@25658>   Dc.l do_LSR                                   ;dolsrw
00033210 <AmiBlitz3_wizzard.ab2@25659>   Dc.l do_LSR                                   ;dolsrl
00033214 <AmiBlitz3_wizzard.ab2@25660>   Dc.l do_LSR                                   ;dolsrl
00033220 <AmiBlitz3_wizzard.ab2@25661>   Ds.l 3
00033222 <AmiBlitz3_wizzard.ab2@25662>   Dc.b $17,$70
00033224 <AmiBlitz3_wizzard.ab2@25664>   Dc.b $80,$45                                  ; ASR int  ;(opasr-opabcd)/$1c+$8000+fnum
00033228 <AmiBlitz3_wizzard.ab2@25665>   Dc.l do_ASR                                   ;doasrb
0003322C <AmiBlitz3_wizzard.ab2@25666>   Dc.l do_ASR                                   ;doasrw
00033230 <AmiBlitz3_wizzard.ab2@25667>   Dc.l do_ASR                                   ;doasrl
00033234 <AmiBlitz3_wizzard.ab2@25668>   Dc.l do_ASR                                   ;doasrl
00033240 <AmiBlitz3_wizzard.ab2@25669>   Ds.l 3
00033242 <AmiBlitz3_wizzard.ab2@25670>   Dc.b $17,$70
00033244 <AmiBlitz3_wizzard.ab2@25672>   Dc.b $80,$B9                                  ;mod       ;$8006+tnum
00033248 <AmiBlitz3_wizzard.ab2@25673>   Dc.l do_mod_byte                              ;domodb
0003324C <AmiBlitz3_wizzard.ab2@25674>   Dc.l do_mod_word                              ;domodw
00033250 <AmiBlitz3_wizzard.ab2@25675>   Dc.l do_mod_long                              ;domodl
00033254 <AmiBlitz3_wizzard.ab2@25676>   Dc.l do_mod_quick                             ;domodq
00033258 <AmiBlitz3_wizzard.ab2@25677>   Dc.l do_mod_float                             ;domodf
00033260 <AmiBlitz3_wizzard.ab2@25678>   Ds.l 2
00033262 <AmiBlitz3_wizzard.ab2@25679>   Dc.b $13,$88
00033264 <AmiBlitz3_wizzard.ab2@25682>   Dc.b $00,$5E                                  ;^
00033268 <AmiBlitz3_wizzard.ab2@25683>   Dc.l do_pow                                   ;dopow
0003326C <AmiBlitz3_wizzard.ab2@25684>   Dc.l do_pow                                   ;dopow
00033270 <AmiBlitz3_wizzard.ab2@25685>   Dc.l do_pow                                   ;dopow
00033274 <AmiBlitz3_wizzard.ab2@25686>   Dc.l do_pow                                   ;dopow
00033278 <AmiBlitz3_wizzard.ab2@25687>   Dc.l do_pow                                   ;dopow
00033280 <AmiBlitz3_wizzard.ab2@25688>   Ds.l 2
00033282 <AmiBlitz3_wizzard.ab2@25689>   Dc.b $1B,$58                                  ;7000
00033284 <AmiBlitz3_wizzard.ab2@25692>   Dc.b $00,$3D                                  ;=
00033288 <AmiBlitz3_wizzard.ab2@25693>   Dc.l do_equal_byte                            ;doeqb
0003328C <AmiBlitz3_wizzard.ab2@25694>   Dc.l do_equal_word                            ;doeqw
00033290 <AmiBlitz3_wizzard.ab2@25695>   Dc.l do_equal_long                            ;doeql
00033294 <AmiBlitz3_wizzard.ab2@25696>   Dc.l do_equal_long                            ;doeql
00033298 <AmiBlitz3_wizzard.ab2@25697>   Dc.l do_equal_float                           ;doeqf
0003329C <AmiBlitz3_wizzard.ab2@25698>   Dc.l do_equal_long                            ;doeql
000332A0 <AmiBlitz3_wizzard.ab2@25699>   Dc.l do_equal_string                          ;doeqs
000332A2 <AmiBlitz3_wizzard.ab2@25700>   Dc.b $07,$D0                                  ;2000
000332A4 <AmiBlitz3_wizzard.ab2@25703>   Dc.b $3C,$3E                                  ;<>
000332A8 <AmiBlitz3_wizzard.ab2@25704>   Dc.l do_not_equal_byte                        ;doneb
000332AC <AmiBlitz3_wizzard.ab2@25705>   Dc.l do_not_equal_word                        ;donew
000332B0 <AmiBlitz3_wizzard.ab2@25706>   Dc.l do_not_equal_long                        ;donel
000332B4 <AmiBlitz3_wizzard.ab2@25707>   Dc.l do_not_equal_long                        ;donel
000332B8 <AmiBlitz3_wizzard.ab2@25708>   Dc.l do_not_equal_float                       ;donef
000332BC <AmiBlitz3_wizzard.ab2@25709>   Dc.l do_not_equal_long                        ;donel
000332C0 <AmiBlitz3_wizzard.ab2@25710>   Dc.l do_not_equal_string                      ;dones
000332C2 <AmiBlitz3_wizzard.ab2@25711>   Dc.b $07,$D0                                  ;2000
000332C4 <AmiBlitz3_wizzard.ab2@25714>   Dc.b $00,$3C                                  ;<
000332C8 <AmiBlitz3_wizzard.ab2@25715>   Dc.l do_littler_byte                          ;doltb
000332CC <AmiBlitz3_wizzard.ab2@25716>   Dc.l do_littler_word                          ;doltw
000332D0 <AmiBlitz3_wizzard.ab2@25717>   Dc.l do_littler_long                          ;doltl
000332D4 <AmiBlitz3_wizzard.ab2@25718>   Dc.l do_littler_long                          ;doltl
000332D8 <AmiBlitz3_wizzard.ab2@25719>   Dc.l do_littler_float                         ;doltf
000332DC <AmiBlitz3_wizzard.ab2@25720>   Dc.l do_littler_long                          ;doltl
000332E0 <AmiBlitz3_wizzard.ab2@25721>   Dc.l do_littler_string                        ;dolts
000332E2 <AmiBlitz3_wizzard.ab2@25722>   Dc.b $07,$D0                                  ;2000
000332E4 <AmiBlitz3_wizzard.ab2@25725>   Dc.b $3C,$3D                                  ;<=
000332E8 <AmiBlitz3_wizzard.ab2@25726>   Dc.l do_littler_equal_byte                    ;doleb
000332EC <AmiBlitz3_wizzard.ab2@25727>   Dc.l do_littler_equal_word                    ;doleb
000332F0 <AmiBlitz3_wizzard.ab2@25728>   Dc.l do_littler_equal_long                    ;dolel
000332F4 <AmiBlitz3_wizzard.ab2@25729>   Dc.l do_littler_equal_long                    ;dolel
000332F8 <AmiBlitz3_wizzard.ab2@25730>   Dc.l do_littler_equal_float                   ;dolef
000332FC <AmiBlitz3_wizzard.ab2@25731>   Dc.l do_littler_equal_long                    ;dolel
00033300 <AmiBlitz3_wizzard.ab2@25732>   Dc.l do_littler_equal_string                  ;doles
00033302 <AmiBlitz3_wizzard.ab2@25733>   Dc.b $07,$D0                                  ;2000
00033304 <AmiBlitz3_wizzard.ab2@25736>   Dc.b $00,$3E                                  ;>
00033308 <AmiBlitz3_wizzard.ab2@25737>   Dc.l do_greater_byte                          ;dogtb
0003330C <AmiBlitz3_wizzard.ab2@25738>   Dc.l do_greater_word                          ;dogtw
00033310 <AmiBlitz3_wizzard.ab2@25739>   Dc.l do_greater_long                          ;dogtl
00033314 <AmiBlitz3_wizzard.ab2@25740>   Dc.l do_greater_long                          ;dogtl
00033318 <AmiBlitz3_wizzard.ab2@25741>   Dc.l do_greater_float                         ;dogtf
0003331C <AmiBlitz3_wizzard.ab2@25742>   Dc.l do_greater_long                          ;dogtl
00033320 <AmiBlitz3_wizzard.ab2@25743>   Dc.l do_greater_string                        ;dogts
00033322 <AmiBlitz3_wizzard.ab2@25744>   Dc.b $07,$D0                                  ;2000
00033324 <AmiBlitz3_wizzard.ab2@25747>   Dc.b $3E,$3D                                  ;>=
00033328 <AmiBlitz3_wizzard.ab2@25748>   Dc.l do_greater_equal_byte                    ;dogeb
0003332C <AmiBlitz3_wizzard.ab2@25749>   Dc.l do_greater_equal_word                    ;dogew
00033330 <AmiBlitz3_wizzard.ab2@25750>   Dc.l do_greater_equal_long                    ;dogel
00033334 <AmiBlitz3_wizzard.ab2@25751>   Dc.l do_greater_equal_long                    ;dogel
00033338 <AmiBlitz3_wizzard.ab2@25752>   Dc.l do_greater_equal_float                   ;dogef
0003333C <AmiBlitz3_wizzard.ab2@25753>   Dc.l do_greater_equal_long                    ;dogel
00033340 <AmiBlitz3_wizzard.ab2@25754>   Dc.l do_greater_equal_string                  ;doges
00033342 <AmiBlitz3_wizzard.ab2@25755>   Dc.b $07,$D0                                  ;2000
00033344 <AmiBlitz3_wizzard.ab2@25757>   Dc.b $80,$CD                                  ;$8000+26+tnum
00033348 <AmiBlitz3_wizzard.ab2@25758>   Dc.l _BitTst
0003334C <AmiBlitz3_wizzard.ab2@25759>   Dc.l _BitTst
00033350 <AmiBlitz3_wizzard.ab2@25760>   Dc.l _BitTst
00033354 <AmiBlitz3_wizzard.ab2@25761>   Dc.l _BitTst
00033360 <AmiBlitz3_wizzard.ab2@25762>   Ds.l 3
00033362 <AmiBlitz3_wizzard.ab2@25763>   Dc.b $1F,$40                                  ;8000
00033364 <AmiBlitz3_wizzard.ab2@25765>   Dc.b $80,$CE                                  ;$8000+27+tnum
00033368 <AmiBlitz3_wizzard.ab2@25766>   Dc.l _BitSet
0003336C <AmiBlitz3_wizzard.ab2@25767>   Dc.l _BitSet
00033370 <AmiBlitz3_wizzard.ab2@25768>   Dc.l _BitSet
00033374 <AmiBlitz3_wizzard.ab2@25769>   Dc.l _BitSet
00033380 <AmiBlitz3_wizzard.ab2@25770>   Ds.l 3
00033382 <AmiBlitz3_wizzard.ab2@25771>   Dc.b $1F,$40                                  ;8000
00033384 <AmiBlitz3_wizzard.ab2@25773>   Dc.b $80,$CF                                  ;$8000+28+tnum
00033388 <AmiBlitz3_wizzard.ab2@25774>   Dc.l _BitClr
0003338C <AmiBlitz3_wizzard.ab2@25775>   Dc.l _BitClr
00033390 <AmiBlitz3_wizzard.ab2@25776>   Dc.l _BitClr
00033394 <AmiBlitz3_wizzard.ab2@25777>   Dc.l _BitClr
000333A0 <AmiBlitz3_wizzard.ab2@25778>   Ds.l 3
000333A2 <AmiBlitz3_wizzard.ab2@25779>   Dc.b $1F,$40                                  ;8000
000333A4 <AmiBlitz3_wizzard.ab2@25781>   Dc.b $80,$D0                                  ;$8000+29+tnum
000333A8 <AmiBlitz3_wizzard.ab2@25782>   Dc.l _BitChg
000333AC <AmiBlitz3_wizzard.ab2@25783>   Dc.l _BitChg
000333B0 <AmiBlitz3_wizzard.ab2@25784>   Dc.l _BitChg
000333B4 <AmiBlitz3_wizzard.ab2@25785>   Dc.l _BitChg
000333C0 <AmiBlitz3_wizzard.ab2@25786>   Ds.l 3
000333C2 <AmiBlitz3_wizzard.ab2@25787>   Dc.b $1F,$40                                  ;8000
000333C4 <AmiBlitz3_wizzard.ab2@25789>   Dc.b $00,$00
000333C8 <AmiBlitz3_wizzard.ab2@25794> modetable:   Dc.l typemode
000333CC <AmiBlitz3_wizzard.ab2@25797> newtypebase: Dc.l newtype_byte
000333D4 <AmiBlitz3_wizzard.ab2@25800>   Dc.l newtype_word,$01                                    
000333D6 <AmiBlitz3_wizzard.ab2@25801>   Dc.w $0001
000333DA <AmiBlitz3_wizzard.ab2@25802>   Dc.b 13,"b",0,0
000333E2 <AmiBlitz3_wizzard.ab2@25805>   Dc.l newtype_long,$02
000333E4 <AmiBlitz3_wizzard.ab2@25806>   Dc.w $0002
000333E8 <AmiBlitz3_wizzard.ab2@25807>   Dc.b 13,"w",0,0
000333F0 <AmiBlitz3_wizzard.ab2@25810>   Dc.l newtype_quick,$03                                   
000333F2 <AmiBlitz3_wizzard.ab2@25811>   Dc.w $0004
000333F6 <AmiBlitz3_wizzard.ab2@25812>   Dc.b 13,"l",0,0
000333FE <AmiBlitz3_wizzard.ab2@25815>   Dc.l newtype_float,$04                                   
00033400 <AmiBlitz3_wizzard.ab2@25816>   Dc.w $0004
00033404 <AmiBlitz3_wizzard.ab2@25817>   Dc.b 13,"q",0,0
0003340C <AmiBlitz3_wizzard.ab2@25821>   Dc.l newtype_double,$05                                  ;make problems on old residents
0003340E <AmiBlitz3_wizzard.ab2@25822>   Dc.w $0004
00033412 <AmiBlitz3_wizzard.ab2@25823>   Dc.b 13,"f",0,0
0003341A <AmiBlitz3_wizzard.ab2@25826>   Dc.l newtype_double,$06
0003341C <AmiBlitz3_wizzard.ab2@25827>   Dc.w $0004
00033420 <AmiBlitz3_wizzard.ab2@25828>   Dc.b 13,"a",0,0
00033428 <AmiBlitz3_wizzard.ab2@25831>   Dc.l newtype_string,$05                                  ;?? has to by $06 becous is number 6 not 5
0003342A <AmiBlitz3_wizzard.ab2@25832>   Dc.w $0008
0003342E <AmiBlitz3_wizzard.ab2@25833>   Dc.b 13,"d",0,0
00033436 <AmiBlitz3_wizzard.ab2@25837>   Dc.l $0000000,$07                                        ;stringtype
00033438 <AmiBlitz3_wizzard.ab2@25838>   Dc.w $0004
0003343C <AmiBlitz3_wizzard.ab2@25839>   Dc.b 13,"s",0,0
00033444 <AmiBlitz3_wizzard.ab2@25842>   Dc.l $00,$00
00033446 <AmiBlitz3_wizzard.ab2@25843>   Dc.w $0000
0003344A <AmiBlitz3_wizzard.ab2@25844>   Dc.b $01,$00,$00,$00
000334AA <AmiBlitz3_wizzard.ab2@25847> incdir:               Ds.l 24                              ;dcb.b   96,0    org source
000334AC <AmiBlitz3_wizzard.ab2@25851> dirmode:              Ds.w 1                               ;shows if directmode is on
000334B0 <AmiBlitz3_wizzard.ab2@25853>                       Ds.l 1                               ;int org source ;intuition!
000334B2 <AmiBlitz3_wizzard.ab2@25854> maxobject_pos:        Ds.w 1                               ;maxat org source ;max at
000334B6 <AmiBlitz3_wizzard.ab2@25855> maxsat:               Ds.l 1                               ;data1 info pos
000334B8 <AmiBlitz3_wizzard.ab2@25856> number_of_objects:    Ds.w 1                               ;nummaxs org source ;number of maximums
000334BA <AmiBlitz3_wizzard.ab2@25858> maxsused:             Ds.w 1                               ;maximums used in prog
000334BC <AmiBlitz3_wizzard.ab2@25862> dark:                 Ds.w 1                               ;dark compile?
000334BE <AmiBlitz3_wizzard.ab2@25863> qlab:                 Ds.w 1                               ;quick lab allocate
000334C2 <AmiBlitz3_wizzard.ab2@25864> defaulttype:          Dc.l newtype_quick                   ;dc.l quicktype org source
000334C4 <AmiBlitz3_wizzard.ab2@25869> anyerrs:              Dc.w -1                              ;Any Errors in compile ?
000334C6 <AmiBlitz3_wizzard.ab2@25870> debugversion:         Ds.w 1                               ;makeexec org source ;make an executable file!
000334CA <AmiBlitz3_wizzard.ab2@25871> noinits:              Ds.l 1                               ;flag for if we have any init routines!
000334CE <AmiBlitz3_wizzard.ab2@25873> letstart:             Ds.l 1
000334D0 <AmiBlitz3_wizzard.ab2@25874> dontwrite:            Ds.w 1                               ;nomemleft org source
00033550 <AmiBlitz3_wizzard.ab2@25875> lastgloballabel:      Ds.l 32                              ;lastbiglab ds.b 128 org source
00033554 <AmiBlitz3_wizzard.ab2@25877> locdatast:            Ds.l 1
00033558 <AmiBlitz3_wizzard.ab2@25878> firstpend:            Ds.l 1
0003355C <AmiBlitz3_wizzard.ab2@25882> data2at:              Ds.l 1
00033560 <AmiBlitz3_wizzard.ab2@25883> data2:                Ds.l 1
00033564 <AmiBlitz3_wizzard.ab2@25884> data1start:           Ds.l 1                               ;data1at org source
00033568 <AmiBlitz3_wizzard.ab2@25885> data1:                Ds.l 1                               ;pc for initialized data!
0003356C <AmiBlitz3_wizzard.ab2@25886> destbufferstart:      Ds.l 1                               ;pcat org source
00033570 <AmiBlitz3_wizzard.ab2@25890> destbufferend:        Ds.l 1                               ;libat org source
00033574 <AmiBlitz3_wizzard.ab2@25891> libend:               Ds.l 1                               ;lib org source
00033578 <AmiBlitz3_wizzard.ab2@25892> allat:                Ds.l 1                               ;highest allocmemd location for code
00033582 <AmiBlitz3_wizzard.ab2@25893> dummyasm:             Dc.w 0,0,0,0,0
00033586 <AmiBlitz3_wizzard.ab2@25894>                       Dc.l 0
00033588 <AmiBlitz3_wizzard.ab2@25895>                       Dc.w 0
0003358C <AmiBlitz3_wizzard.ab2@25899> buff1:                Ds.l 1                               ;buffer for text get
00033590 <AmiBlitz3_wizzard.ab2@25900> buff2:                Ds.l 1                               ;ditto for dest
00033592 <AmiBlitz3_wizzard.ab2@25901> constmode:            Ds.w 1                               ;0 for norm, <>0 for assembler
00033594 <AmiBlitz3_wizzard.ab2@25902> asmtype:              Ds.w 1                               ;0=contains no prog reference
00033596 <AmiBlitz3_wizzard.ab2@25903> extraword:            Ds.w 1                               ;the extension word for assembler
00033598 <AmiBlitz3_wizzard.ab2@25904> extraword2:           Ds.w 1                               ;ditto
0003359A <AmiBlitz3_wizzard.ab2@25905> asmsize:              Ds.w 1
0003359E <AmiBlitz3_wizzard.ab2@25906> asmbuff:              Ds.l 1
000335A0 <AmiBlitz3_wizzard.ab2@25907> asmlen:               Ds.w 1                               ;first (src) text len
000335A2 <AmiBlitz3_wizzard.ab2@25908> asmlen2:              Ds.w 1                               ;second (dest)
000335A6 <AmiBlitz3_wizzard.ab2@25909> templabel:            Ds.l 1                               ;linked list of expressions to resolve
000335A8 <AmiBlitz3_wizzard.ab2@25912> macnum:               Ds.w 1
000335AC <AmiBlitz3_wizzard.ab2@25914>                       Dc.l 0                               ;address of next 0 in include fil
000335B0 <AmiBlitz3_wizzard.ab2@25915> titleat:              Ds.l 1                               ;5 longs for compile streaks
000335BA <AmiBlitz3_wizzard.ab2@25916> progress_per_line:    Ds.w 5                               ;titleadd ds 5 org source ;5 adds for compile streaks
000335BC <AmiBlitz3_wizzard.ab2@25917> connest:              Ds.w 1                               ;conditional nest level
000335C0 <AmiBlitz3_wizzard.ab2@25918> firstconst:           Ds.l 1                               ;first constant (#a)
000335C2 <AmiBlitz3_wizzard.ab2@25919> numarg:               Ds.w 1                               ;number of macro arguements
000335C6 <AmiBlitz3_wizzard.ab2@25920> myoline:              Ds.l 1                               ;macro done yet?
000335CA <AmiBlitz3_wizzard.ab2@25921> myline:               Ds.l 1                               ;pointer to some memory to create
000335CE <AmiBlitz3_wizzard.ab2@25924>                       Ds.l 1
0003360E <AmiBlitz3_wizzard.ab2@25925> concomstack:          Ds.l 16                              ;32 deep conditional compilation
00033612 <AmiBlitz3_wizzard.ab2@25926> concomsp:             Dc.l concomstack                     ;stack pointer
00033614 <AmiBlitz3_wizzard.ab2@25927> oldqflag:             Ds.w 1
00033618 <AmiBlitz3_wizzard.ab2@25930>                       Ds.l 1
0003361A <AmiBlitz3_wizzard.ab2@25932>                       Ds.w 1
0003361E <AmiBlitz3_wizzard.ab2@25933> firstfor:             Ds.l 1                               ;first for
00033620 <AmiBlitz3_wizzard.ab2@25934> stackpar:             Ds.w 1                               ;pushflag org source ;1 par to stack 0 normal
00033622 <AmiBlitz3_wizzard.ab2@25935> sbgot:                Ds.w 1                               ;flag for string got 2
00033624 <AmiBlitz3_wizzard.ab2@25936> convsize:             Ds.w 1                               ;usertype org source
00033626 <AmiBlitz3_wizzard.ab2@25937> userp:                Ds.w 1
0003362A <AmiBlitz3_wizzard.ab2@25942> ptr_userlibs_list:    Ds.l 1                               ;libslist org source
0003362C <AmiBlitz3_wizzard.ab2@25943> a2offset:             Ds.w 1                               ;stackuse org source ;stack used when gathering lib parameters
0003362E <AmiBlitz3_wizzard.ab2@25944> numreps:              Ds.w 1                               ;number of repeats in a repeatable
00033632 <AmiBlitz3_wizzard.ab2@25946> locloc:               Ds.l 1
00033634 <AmiBlitz3_wizzard.ab2@25947> locchar:              Ds.w 1
000336B4 <AmiBlitz3_wizzard.ab2@25948> stbuff:               Ds.l 32                              ;was 8    ;six string varoffs
000336B6 <AmiBlitz3_wizzard.ab2@25949> commode:              Ds.w 1                               ;in comma mode...
000336BA <AmiBlitz3_wizzard.ab2@25950> lastoffset_org:       Ds.l 1                               ;lastoffset org source ;last offset in calcvar!
000336BE <AmiBlitz3_wizzard.ab2@25951> linenumat:            Dc.l $FFFFFFFF                       ;linecounter ;dc -1 org source ;line being processed
000336C2 <AmiBlitz3_wizzard.ab2@25952> compilelinecounter:   Dc.l $FFFFFFFF                       ;menuret dc -1 org source ;menu return code
000336C4 <AmiBlitz3_wizzard.ab2@25954>                       Ds.w 1                               ;opt reset offset
000337C4 <AmiBlitz3_wizzard.ab2@25956>                       Ds.l 64                              ;Ds.b vcodelen org source ;code used to generate
000338C4 <AmiBlitz3_wizzard.ab2@25958>                       Ds.l 64                              ;Ds.b vcodelen org source ;above for let.....
000338C6 <AmiBlitz3_wizzard.ab2@25959> varcodelen:           Ds.w 1                               ;and length
000338C8 <AmiBlitz3_wizzard.ab2@25961>                       Ds.w 1
000338CE <AmiBlitz3_wizzard.ab2@25962> oldvcodelen:          Ds.w 3                               ;old varcodelen
000338D0 <AmiBlitz3_wizzard.ab2@25965> Even4
000338D4 <AmiBlitz3_wizzard.ab2@25966> tempvm:               Ds.l 1                               ;memlib org source ;address of memory library
000338D6 <AmiBlitz3_wizzard.ab2@25967> memlibstat:           Ds.w 1                               ;status of memory library during
000338D8 <AmiBlitz3_wizzard.ab2@25970>                       Dc.w 0
000338DA <AmiBlitz3_wizzard.ab2@25972>                       Dc.w 0
000338DC <AmiBlitz3_wizzard.ab2@25974> varmode:              Ds.w 1                               ;0 a5 pointer to global
000338E0 <AmiBlitz3_wizzard.ab2@25976> currentfunction:      Ds.l 1                               ;thisproc org source
000338E4 <AmiBlitz3_wizzard.ab2@25977> firstproc:            Ds.l 1                               ;firstproc org source ;this procedure being 'done'
000338E6 <AmiBlitz3_wizzard.ab2@25978> 
000338E8 <AmiBlitz3_wizzard.ab2@25980> skipcode:             Ds.w 1                               ;nocompile ;comflag org source ;0 if no compile
000338EC <AmiBlitz3_wizzard.ab2@25981> passstack:            Ds.l 1
000338F0 <AmiBlitz3_wizzard.ab2@25982> zero:                 Ds.l 1                               ;ZERO!
000338F2 <AmiBlitz3_wizzard.ab2@25983> ininclude:            Ds.w 1                               ;numincs org source ;number of include files
000338F6 <AmiBlitz3_wizzard.ab2@25985> xinclude_base:        Ds.l 1                               ;firstxinc org source ;first exclusive include.
000338FA <AmiBlitz3_wizzard.ab2@25986> constantbase:         Ds.l 1                               ;firstinc org source ;first include
000338FC <AmiBlitz3_wizzard.ab2@25987> lasta6:               Dc.w $FFFF                           ;-1 org source
000338FE <AmiBlitz3_wizzard.ab2@25988> instringon:           Ds.w 1                               ;quoteflag org source
00033902 <AmiBlitz3_wizzard.ab2@25989> ptr_macrobuffer_begin:Ds.l 1                               ;macrobuff org source ;pointer to macro collection buffer ;begin
00033906 <AmiBlitz3_wizzard.ab2@25990> ptr_macrobuffer_end:  Ds.l 1                               ;macrobufff org source ;end of above ;end of
0003390A <AmiBlitz3_wizzard.ab2@25991> macrobase:            Ds.l 1                               ;firstmacro org source ;linked list of macro's ;macrolist
0003390E <AmiBlitz3_wizzard.ab2@25992> endop:                Ds.l 1                               ;end of program pc - before finishups!
00033912 <AmiBlitz3_wizzard.ab2@25993> labelbase:            Ds.l 1                               ;firstlabel org source ;first lib struct
00033916 <AmiBlitz3_wizzard.ab2@25994> end_of_tokenlist:     Ds.l 1                               ;lasttoken org source
00033918 <AmiBlitz3_wizzard.ab2@25995> numstatic:            Ds.w 1                               ;number of static structs
0003391C <AmiBlitz3_wizzard.ab2@25996> staticdata:           Ds.l 1                               ;data1 val for statics
00033920 <AmiBlitz3_wizzard.ab2@25997> libpointer:           Ds.l 1                               ;firstlib org source ;first lib struct
00033922 <AmiBlitz3_wizzard.ab2@25998> sbasegot:             Ds.w 1                               ;string base got?
00033926 <AmiBlitz3_wizzard.ab2@25999> litdata1:             Ds.l 1
0003392A <AmiBlitz3_wizzard.ab2@26003> objlen:               Ds.l 1
0003392E <AmiBlitz3_wizzard.ab2@26004> hunkoffsetcounter:    Ds.l 1                               ;numoffs org source
00033932 <AmiBlitz3_wizzard.ab2@26005> hunkoffsetbase:       Ds.l 1                               ;firstoff org source ;pointer to linked list
00033934 <AmiBlitz3_wizzard.ab2@26007> flagmask:             Ds.w 1                               ;mask for flag of variable when
00033936 <AmiBlitz3_wizzard.ab2@26009> notshared:            Ds.w 1                               ;added org source ;flag for seeing if variable was added!
00033938 <AmiBlitz3_wizzard.ab2@26010> nonew:                Ds.w 1                               ;1 to inhibit new variable creation
0003393C <AmiBlitz3_wizzard.ab2@26011> temp1:                Ds.l 1
00033940 <AmiBlitz3_wizzard.ab2@26012> temp2:                Ds.l 1
00033944 <AmiBlitz3_wizzard.ab2@26014> ptr_parameterstore:   Ds.l 1                               ;namebuff ds.b 128 org source
00033948 <AmiBlitz3_wizzard.ab2@26015> fib_DirEntryType:     Ds.l 1                               ;namebuff+4 org source
000339BC <AmiBlitz3_wizzard.ab2@26016> fib_FileName:         Ds.l 29                              ;namebuff+8 org source
000339C0 <AmiBlitz3_wizzard.ab2@26017> fib_Size:             Ds.l 1                               ;namebuff+124 org source
00033A40 <AmiBlitz3_wizzard.ab2@26019> namebuff2:            Ds.b 128
00033A48 <AmiBlitz3_wizzard.ab2@26020>                       Ds.b 8                               ;for fileinfoblock
00033A88 <AmiBlitz3_wizzard.ab2@26023> optstuff:             Ds.b 64                              ;temp opt make buffer
00033AC6 <AmiBlitz3_wizzard.ab2@26031>   !ComData_GetL{comFunc_OpenCompilerWindow,A1}
00033ACC <AmiBlitz3_wizzard.ab2@26032>   MOVE.l #1000,D0
00033ACE <AmiBlitz3_wizzard.ab2@26033>   JSR (A1)
00033AD0 <AmiBlitz3_wizzard.ab2@26034> RTS
00033AD2 <AmiBlitz3_wizzard.ab2@26040>   Dc.b $00,$01                                             ; 1 byte schreiben ;one byte stuff...
00033AD6 <AmiBlitz3_wizzard.ab2@26041>   Dc.l xtra_versionnumber                                  ; vers org source
00033ADA <AmiBlitz3_wizzard.ab2@26042>   Dc.l create_iconfile                                     ; create icon for executable
00033ADE <AmiBlitz3_wizzard.ab2@26043>   Ds.l 1
00033AE0 <AmiBlitz3_wizzard.ab2@26045>   Dc.b $00,$02                                             ; 2 bytes schreiben  ;two byte stuff...
00033AE4 <AmiBlitz3_wizzard.ab2@26048>   Dc.l set_use_debugger
00033AE8 <AmiBlitz3_wizzard.ab2@26049>   Dc.l AL_0_11010                                          ;+obsolet: debugger
00033AEC <AmiBlitz3_wizzard.ab2@26050>   Dc.l AL_0_1103C                                          ;+obsolet: long arrays
00033AF0 <AmiBlitz3_wizzard.ab2@26051>   Dc.l AL_0_11068                                          ;+obsolet: expand macros
00033AF4 <AmiBlitz3_wizzard.ab2@26052>   Dc.l AL_0_11094                                          ;+obsolet: quoted macros
00033AF8 <AmiBlitz3_wizzard.ab2@26053>   Dc.l set_make_smallestcode
00033AFC <AmiBlitz3_wizzard.ab2@26054>   Dc.l set_link_debuginfo
00033B00 <AmiBlitz3_wizzard.ab2@26055>   Dc.l set_autorun
00033B04 <AmiBlitz3_wizzard.ab2@26056>   Dc.l set_interruptcheck
00033B08 <AmiBlitz3_wizzard.ab2@26057>   Dc.l set_assemblercheck
00033B0C <AmiBlitz3_wizzard.ab2@26059>   Dc.l set_overflowcheck
00033B10 <AmiBlitz3_wizzard.ab2@26060>   Dc.l default_obsolete                                    ;+obsolet: ohne inhalt
00033B14 <AmiBlitz3_wizzard.ab2@26061>   Dc.l default_interruptcheck                              ;+obsolet: interruptcheck vorgabe
00033B18 <AmiBlitz3_wizzard.ab2@26062>   Dc.l default_overflowcheck                               ;+obsolet: overflow vorgabe
00033B1C <AmiBlitz3_wizzard.ab2@26065>   Ds.l 1
00033B1E <AmiBlitz3_wizzard.ab2@26067>   Dc.b $00,$04                                             ; 4 bytes schreiben..  ;four byte stuff...
00033B22 <AmiBlitz3_wizzard.ab2@26074>   Dc.l objectbuffer
00033B26 <AmiBlitz3_wizzard.ab2@26075>   Dc.l libsbuffer
00033B2A <AmiBlitz3_wizzard.ab2@26076>   Dc.l systembuffer
00033B2E <AmiBlitz3_wizzard.ab2@26077>   Dc.l databuffer
00033B32 <AmiBlitz3_wizzard.ab2@26078>   Dc.l macrobuffer_size
00033B36 <AmiBlitz3_wizzard.ab2@26079>   Dc.l stringbuffer
00033B3A <AmiBlitz3_wizzard.ab2@26082>   Ds.l 1
00033B3C <AmiBlitz3_wizzard.ab2@26086>   Dc.b $02,$20                                             ;dc 68*8; 544 bytes schreiben.
00033B44 <AmiBlitz3_wizzard.ab2@26087>   Dc.l residents_table,0
00033B46 <AmiBlitz3_wizzard.ab2@26091>   Dc.b $01,$80                                             ;dc 192*2; 384 bytes schreiben
00033B4E <AmiBlitz3_wizzard.ab2@26092>   Dc.l exepath,0                                           ; exepath und exefilename jeweils 192 bytes
00033B50 <AmiBlitz3_wizzard.ab2@26093>   Ds.w 1
00033C4C <AmiBlitz3_wizzard.ab2@26097>   Ds.l 63
00033D48 <AmiBlitz3_wizzard.ab2@26098>   Ds.l 63
00033E44 <AmiBlitz3_wizzard.ab2@26099>   Ds.l 63
00033F26 <AmiBlitz3_wizzard.ab2@26100>   Ds.w 113
00033F28 <AmiBlitz3_wizzard.ab2@26103> comsettings_message:  Ds.w 1                               ;allchg org source
00033F2A <AmiBlitz3_wizzard.ab2@26104> xtra_versionnumber:   Ds.w 1                               ;vers org source
00033F30 <AmiBlitz3_wizzard.ab2@26108>   CLR.b exefilename
00033F32 <AmiBlitz3_wizzard.ab2@26109>   TST.l d0
00033F36 <AmiBlitz3_wizzard.ab2@26110>   BNE read_xtrafile__l10
00033F38 <AmiBlitz3_wizzard.ab2@26111> RTS
00033F3E <AmiBlitz3_wizzard.ab2@26114>   JSR free_residents                                       ;jsr freeres2 org source
00033F44 <AmiBlitz3_wizzard.ab2@26115>   LEA ptr_xtradata,A2
00033F46 <AmiBlitz3_wizzard.ab2@26116>   MOVEQ.l #$00,D4
00033F48 <AmiBlitz3_wizzard.ab2@26119>     MOVE.w (A2)+,D4                                        ; anzahl bytes zum lesen
00033F4C <AmiBlitz3_wizzard.ab2@26120>     BEQ.b read_xtrafile__done
00033F4E <AmiBlitz3_wizzard.ab2@26123>     MOVE.l (A2)+,D2
00033F52 <AmiBlitz3_wizzard.ab2@26124>   BEQ.b read_xtrafile__loop
00033F54 <AmiBlitz3_wizzard.ab2@26126>   MOVE.l D4,D3
00033F56 <AmiBlitz3_wizzard.ab2@26127>   MOVE.l D7,D1
00033F5A <AmiBlitz3_wizzard.ab2@26128>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
00033F5C <AmiBlitz3_wizzard.ab2@26129>   TST.l D0
00033F60 <AmiBlitz3_wizzard.ab2@26130>   BNE.b read_xtrafile__loop2
00033F64 <AmiBlitz3_wizzard.ab2@26131> BRA.w read_xtrafile__done2
00033F6A <AmiBlitz3_wizzard.ab2@26134>   TST.b xtra_versionnumber
00033F6E <AmiBlitz3_wizzard.ab2@26135>    BNE.b read_xtrafile__nover0
00033F76 <AmiBlitz3_wizzard.ab2@26136>   MOVE.w #$0080,set_autorun                                ;auto run on
00033F80 <AmiBlitz3_wizzard.ab2@26137>   MOVE.w default_interruptcheck,set_interruptcheck         ;interupt checking on
00033F86 <AmiBlitz3_wizzard.ab2@26138>   CLR.w set_assemblercheck                                 ;assembler checking off
00033F90 <AmiBlitz3_wizzard.ab2@26139>   MOVE.w default_overflowcheck,set_overflowcheck           ;overflow chex
00033F94 <AmiBlitz3_wizzard.ab2@26140> BRA.b read_xtrafile__ver0
00033F96 <AmiBlitz3_wizzard.ab2@26143>   MOVE.l D7,D1                                             ;load cli arg!
00033F9C <AmiBlitz3_wizzard.ab2@26144>   MOVE.l #str_cliarguments,D2
00033FA2 <AmiBlitz3_wizzard.ab2@26145>   MOVE.l #116,D3                                           ; vorher 128 , jetzt 8 weniger fuer die Versionsdaten
00033FA6 <AmiBlitz3_wizzard.ab2@26146>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
00033FAC <AmiBlitz3_wizzard.ab2@26147>   MOVE.l #str_cliarguments,A0
00033FB2 <AmiBlitz3_wizzard.ab2@26148>   ADDA.l #115,A0
00033FB8 <AmiBlitz3_wizzard.ab2@26149>   MOVE.l #0,(a0) ; terminate it!
00033FBA <AmiBlitz3_wizzard.ab2@26151>   MOVE.l D7,D1                                             ; I know, I know. Honitos started this horrible thing, see below...
00033FC0 <AmiBlitz3_wizzard.ab2@26152>   MOVE.l #stacksize,D2
00033FC6 <AmiBlitz3_wizzard.ab2@26153>   MOVE.l #4,D3
00033FCA <AmiBlitz3_wizzard.ab2@26154>   JSR _Read(A6)
00033FD4 <AmiBlitz3_wizzard.ab2@26155>   CMP.l ##MIN_STACKSIZE,stacksize
00033FD8 <AmiBlitz3_wizzard.ab2@26156>   BGE 'stackok
00033FE2 <AmiBlitz3_wizzard.ab2@26157>   MOVE.l ##MIN_STACKSIZE,stacksize
00033FE4 <AmiBlitz3_wizzard.ab2@26160>   MOVE.l D7,D1
00033FEA <AmiBlitz3_wizzard.ab2@26161>   MOVE.l #versioninformation,D2
00033FF0 <AmiBlitz3_wizzard.ab2@26162>   MOVE.l #4,D3
00033FF4 <AmiBlitz3_wizzard.ab2@26163>   JSR _Read(A6)
00033FF6 <AmiBlitz3_wizzard.ab2@26165>   MOVE.l D7,D1
00033FFC <AmiBlitz3_wizzard.ab2@26166>   MOVE.l #number_of_builds,D2
00034002 <AmiBlitz3_wizzard.ab2@26167>   MOVE.l #4,D3
00034006 <AmiBlitz3_wizzard.ab2@26168>   JSR _Read(A6)
0003400C <AmiBlitz3_wizzard.ab2@26174>   MOVE.l A7,errstack
00034016 <AmiBlitz3_wizzard.ab2@26175>   MOVE.l #read_xtrafile__done2,errcont
0003401E <AmiBlitz3_wizzard.ab2@26176>   MOVE.w #$FFFF,ezerr
00034024 <AmiBlitz3_wizzard.ab2@26179>     MOVE.l #temp1,D2                                   ;LOAD maxobjectsvalues
00034026 <AmiBlitz3_wizzard.ab2@26180>     MOVEQ.l #$04,D3
00034028 <AmiBlitz3_wizzard.ab2@26181>     MOVE.l D7,D1
0003402C <AmiBlitz3_wizzard.ab2@26182>     JSR _Read(A6)
0003402E <AmiBlitz3_wizzard.ab2@26183>     TST.l D0
00034032 <AmiBlitz3_wizzard.ab2@26184>     BEQ.b read_xtrafile__done2
00034038 <AmiBlitz3_wizzard.ab2@26185>     MOVE.w temp1,D1
0003403A <AmiBlitz3_wizzard.ab2@26186>     TST.w d1                                               ;new
0003403E <AmiBlitz3_wizzard.ab2@26187>     BEQ read_xtrafile__done2                                         ;new
00034044 <AmiBlitz3_wizzard.ab2@26188>      JSR AJL_0_6F1A
0003404A <AmiBlitz3_wizzard.ab2@26190>     CMP.l #0,a1
0003404E <AmiBlitz3_wizzard.ab2@26191>     BEQ read_xtrafile__dloop
00034052 <AmiBlitz3_wizzard.ab2@26192>     MOVE.l $12(A1),D0
0003405A <AmiBlitz3_wizzard.ab2@26193>     MOVE.w temp1+2,-$4(A1,D0.L)
0003405E <AmiBlitz3_wizzard.ab2@26194> BRA.b read_xtrafile__dloop
00034062 <AmiBlitz3_wizzard.ab2@26200>   LEA residents_table(PC),A0
00034064 <AmiBlitz3_wizzard.ab2@26201>   MOVEQ.l #$07,D0
00034068 <AmiBlitz3_wizzard.ab2@26204>     CLR.l $40(A0)
0003406C <AmiBlitz3_wizzard.ab2@26205>     LEA ResidentEntryStep(A0),A0   ; $44
00034070 <AmiBlitz3_wizzard.ab2@26206>   DBF D0,read_xtrafile__loop3
00034074 <AmiBlitz3_wizzard.ab2@26208>   MOVEM.l D7/A6,-(A7)
0003407A <AmiBlitz3_wizzard.ab2@26209>   JSR init_buffers
00034080 <AmiBlitz3_wizzard.ab2@26210>   JSR reloadresident
00034084 <AmiBlitz3_wizzard.ab2@26211>   MOVEM.l (A7)+,D7/A6
00034086 <AmiBlitz3_wizzard.ab2@26212> RTS
0003408E <AmiBlitz3_wizzard.ab2@26216>   MOVE.b #$1,xtra_versionnumber                            ;.xtra version number...
00034094 <AmiBlitz3_wizzard.ab2@26225>   LEA ptr_xtradata,A2
00034096 <AmiBlitz3_wizzard.ab2@26226>   MOVEQ.l #$00,D4
00034098 <AmiBlitz3_wizzard.ab2@26230>   MOVE.w (A2)+,D4                                          ; anzahl bytes zu schreiben
0003409C <AmiBlitz3_wizzard.ab2@26231>   BEQ.b write_xtrafile__done
0003409E <AmiBlitz3_wizzard.ab2@26234>    MOVE.l (A2)+,D2
000340A2 <AmiBlitz3_wizzard.ab2@26235>    BEQ.b write_xtrafile__loop
000340A4 <AmiBlitz3_wizzard.ab2@26237>    MOVE.l D4,D3
000340A6 <AmiBlitz3_wizzard.ab2@26238>    MOVE.l D7,D1                                            ; schreiben der daten in ptr_xtradata
000340AA <AmiBlitz3_wizzard.ab2@26239>    JSR _Write(A6)                                          ; d1: file, d2: buffer, d3:length
000340AE <AmiBlitz3_wizzard.ab2@26240> BRA.b write_xtrafile__loop2
000340B0 <AmiBlitz3_wizzard.ab2@26243>   MOVE.l D7,D1
000340B6 <AmiBlitz3_wizzard.ab2@26244>   MOVE.l #str_cliarguments,D2
000340BC <AmiBlitz3_wizzard.ab2@26245>   MOVE.l #116,D3
000340C0 <AmiBlitz3_wizzard.ab2@26246>   JSR _Write(A6)                                           ; hier werden 116 bytes an cli_arguments geschrieben !!
000340C2 <AmiBlitz3_wizzard.ab2@26248>   MOVE.l D7,D1
000340C8 <AmiBlitz3_wizzard.ab2@26249>   MOVE.l #stacksize,D2
000340CE <AmiBlitz3_wizzard.ab2@26250>   MOVE.l #4,D3
000340D2 <AmiBlitz3_wizzard.ab2@26251>   JSR _Write(A6)
000340D4 <AmiBlitz3_wizzard.ab2@26253>   MOVE.l D7,D1
000340DA <AmiBlitz3_wizzard.ab2@26254>   MOVE.l #versioninformation,D2
000340E0 <AmiBlitz3_wizzard.ab2@26255>   MOVE.l #4,D3
000340E4 <AmiBlitz3_wizzard.ab2@26256>   JSR _Write(A6)
000340E6 <AmiBlitz3_wizzard.ab2@26258>   MOVE.l D7,D1
000340EC <AmiBlitz3_wizzard.ab2@26259>   MOVE.l #number_of_builds,D2
000340F2 <AmiBlitz3_wizzard.ab2@26260>   MOVE.l #4,D3
000340F6 <AmiBlitz3_wizzard.ab2@26261>   JSR _Write(A6)
000340FC <AmiBlitz3_wizzard.ab2@26267>   LEA libpointer,A2
000340FE <AmiBlitz3_wizzard.ab2@26270>     MOVE.l (A2),D0
00034102 <AmiBlitz3_wizzard.ab2@26271>     BEQ.w write_xtrafile__done2
00034104 <AmiBlitz3_wizzard.ab2@26272>     MOVEA.l D0,A2
00034108 <AmiBlitz3_wizzard.ab2@26273>     MOVE.l $12(A2),D4
0003410C <AmiBlitz3_wizzard.ab2@26274>     TST.w -$2(A2,D4.L)
00034110 <AmiBlitz3_wizzard.ab2@26275>     BEQ.w write_xtrafile__loop3
00034114 <AmiBlitz3_wizzard.ab2@26277>     LEA $4(A2),A0
00034116 <AmiBlitz3_wizzard.ab2@26278>     MOVE.l A0,D2
00034118 <AmiBlitz3_wizzard.ab2@26279>     MOVEQ.l #$02,D3
0003411A <AmiBlitz3_wizzard.ab2@26280>     MOVE.l D7,D1                                           ; schreiben der Libnum mit 2 bytes
0003411E <AmiBlitz3_wizzard.ab2@26281>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
00034122 <AmiBlitz3_wizzard.ab2@26283>     LEA -$4(A2,D4.L),A0
00034124 <AmiBlitz3_wizzard.ab2@26284>     MOVE.l A0,D2
00034126 <AmiBlitz3_wizzard.ab2@26285>     MOVEQ.l #$02,D3
00034128 <AmiBlitz3_wizzard.ab2@26286>     MOVE.l D7,D1                                           ; schreiben der Max Objects mit 2 bytes
0003412C <AmiBlitz3_wizzard.ab2@26287>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
00034130 <AmiBlitz3_wizzard.ab2@26288> BRA.w write_xtrafile__loop3
00034136 <AmiBlitz3_wizzard.ab2@26293>   LEA XTRAEndPadBytes,A2 ; get the start address off the 4 fill/pad/termination bytes
00034138 <AmiBlitz3_wizzard.ab2@26294>   MOVE.l A2,D2           ; move the address to d2
0003413E <AmiBlitz3_wizzard.ab2@26295>   MOVE.l #4,D3           ; we only need 4 bytes to save
00034140 <AmiBlitz3_wizzard.ab2@26296>   MOVE.l D7,D1           ; we set the file handle
00034144 <AmiBlitz3_wizzard.ab2@26297>   JSR _Write(A6)         ; and we write it.
00034146 <AmiBlitz3_wizzard.ab2@26299> RTS
0003414C <AmiBlitz3_wizzard.ab2@26304>   LEA optssave,A0                      ; backup address
00034152 <AmiBlitz3_wizzard.ab2@26305>   LEA ptr_xtradata,A1                  ; source address
00034154 <AmiBlitz3_wizzard.ab2@26308>   MOVE.w (A1)+,D0                                          ;length of data move
00034158 <AmiBlitz3_wizzard.ab2@26309>   BEQ.b 'backupdone
0003415A <AmiBlitz3_wizzard.ab2@26310>   SUBQ.w #1,D0
0003415C <AmiBlitz3_wizzard.ab2@26313>     MOVE.l (A1)+,D1
00034160 <AmiBlitz3_wizzard.ab2@26314>     BEQ.b 'backuploop
00034162 <AmiBlitz3_wizzard.ab2@26315>     MOVEA.l D1,A2
00034164 <AmiBlitz3_wizzard.ab2@26316>     MOVE.w D0,D1
00034166 <AmiBlitz3_wizzard.ab2@26319>       MOVE.b (A2)+,(A0)+
0003416A <AmiBlitz3_wizzard.ab2@26320>   DBF D1,'backuploop3
0003416E <AmiBlitz3_wizzard.ab2@26322> BRA.w 'backuploop2
00034174 <AmiBlitz3_wizzard.ab2@26326>   LEA bufferlist,A1
00034176 <AmiBlitz3_wizzard.ab2@26329>     MOVE.l (A1)+,D2
0003417A <AmiBlitz3_wizzard.ab2@26330>     BEQ.b 'loop4done
0003417C <AmiBlitz3_wizzard.ab2@26332>     MOVEA.l D2,A0
0003417E <AmiBlitz3_wizzard.ab2@26333>     MOVE.l (A0),D2
00034180 <AmiBlitz3_wizzard.ab2@26334>     ADDQ.w #8,A0
00034186 <AmiBlitz3_wizzard.ab2@26335>     JSR makelong
0003418A <AmiBlitz3_wizzard.ab2@26336> BRA.b 'loop4
00034190 <AmiBlitz3_wizzard.ab2@26339>   CLR.w state_of_residents                                 ;resident change
00034196 <AmiBlitz3_wizzard.ab2@26340>   CLR.w comsettings_message                                ;alloc change
0003419C <AmiBlitz3_wizzard.ab2@26341>   CLR.w maxobject_pos
0003419E <AmiBlitz3_wizzard.ab2@26342> RTS   ; new tomsmart1
000341A4 <AmiBlitz3_wizzard.ab2@26346>   LEA optssave,A0
000341AA <AmiBlitz3_wizzard.ab2@26347>   LEA ptr_xtradata,A1
000341AC <AmiBlitz3_wizzard.ab2@26350>   MOVE.w (A1)+,D0
000341B0 <AmiBlitz3_wizzard.ab2@26351>   BEQ.b 'restoredone
000341B2 <AmiBlitz3_wizzard.ab2@26352>   SUBQ.w #1,D0
000341B4 <AmiBlitz3_wizzard.ab2@26355>     MOVE.l (A1)+,D1
000341B8 <AmiBlitz3_wizzard.ab2@26356>     BEQ.b 'restoreloop1
000341BA <AmiBlitz3_wizzard.ab2@26357>     MOVEA.l D1,A2
000341BC <AmiBlitz3_wizzard.ab2@26358>     MOVE.w D0,D1
000341BE <AmiBlitz3_wizzard.ab2@26361>       MOVE.b (A0)+,(A2)+
000341C2 <AmiBlitz3_wizzard.ab2@26362>   DBF D1,'restoreloop3
000341C6 <AmiBlitz3_wizzard.ab2@26364> BRA.b 'restoreloop2
000341C8 <AmiBlitz3_wizzard.ab2@26367> RTS
000341D0 <AmiBlitz3_wizzard.ab2@26371>   MOVE.w #$FFFF,state_of_residents
000341D6 <AmiBlitz3_wizzard.ab2@26372>   MOVE.w state_of_residents,D0
000341DC <AmiBlitz3_wizzard.ab2@26373>   JSR reloadresident
000341DE <AmiBlitz3_wizzard.ab2@26374> RTS
000341E0 <AmiBlitz3_wizzard.ab2@26379>   MOVE.l d0,a1
000341E6 <AmiBlitz3_wizzard.ab2@26380>   MOVEA.l libpointer,A2
000341EA <AmiBlitz3_wizzard.ab2@26383>     MOVE.l $12(A2),D0
000341EE <AmiBlitz3_wizzard.ab2@26384>     TST.w -$2(A2,D0.L)
000341F2 <AmiBlitz3_wizzard.ab2@26385>      BEQ.w JL_0_102AAa
000341F4 <AmiBlitz3_wizzard.ab2@26386>     SUBQ.w #1,D1
000341F8 <AmiBlitz3_wizzard.ab2@26387>      BPL.w JL_0_102AAa
000341FC <AmiBlitz3_wizzard.ab2@26388>     MOVEA.l -$1A(A2,D0.L),A3
000341FE <AmiBlitz3_wizzard.ab2@26389>     ADDA.l A2,A3
00034200 <AmiBlitz3_wizzard.ab2@26392>       MOVE.b (A3)+,(A1)+
00034204 <AmiBlitz3_wizzard.ab2@26393>     BNE.w JL_0_10294a
00034206 <AmiBlitz3_wizzard.ab2@26395>     CLR.b -(A1)
0003420A <AmiBlitz3_wizzard.ab2@26396>     MOVE.w -$4(A2,D0.L),D0
00034210 <AmiBlitz3_wizzard.ab2@26397>     AND.l #$ffff,d0
00034212 <AmiBlitz3_wizzard.ab2@26398> RTS
00034214 <AmiBlitz3_wizzard.ab2@26401>     MOVEA.l (A2),A2
00034218 <AmiBlitz3_wizzard.ab2@26402> BRA.w JL_0_1027Ca
00034228 <AmiBlitz3_wizzard.ab2@26407> str_maxobjects_name:   Dc.b "              ",0 : Even
00034238 <AmiBlitz3_wizzard.ab2@26408> str_maxobjects_name2:  Dc.b "              ",0 : Even
0003423C <AmiBlitz3_wizzard.ab2@26409> objectbuffer:          Dc.l $00004000
00034240 <AmiBlitz3_wizzard.ab2@26410>                        Dc.l $00000000
0003424C <AmiBlitz3_wizzard.ab2@26411> str_objectbuffer:      Dc.b "16384",0,0,0,0,0,0,0      ; string max 12 columns
00034250 <AmiBlitz3_wizzard.ab2@26413> libsbuffer:            Dc.l $00008000
00034254 <AmiBlitz3_wizzard.ab2@26414>                        Dc.l $00000000
00034260 <AmiBlitz3_wizzard.ab2@26415> str_libsbuffer:        Dc.b "32768",0,0,0,0,0,0,0      ;was "16384"; string max 12 columns
00034264 <AmiBlitz3_wizzard.ab2@26417> systembuffer:          Dc.l $00001000                      ; systen buffer
00034268 <AmiBlitz3_wizzard.ab2@26418>                        Dc.l $00000000
00034274 <AmiBlitz3_wizzard.ab2@26419> str_systembuffer:      Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
00034278 <AmiBlitz3_wizzard.ab2@26421> databuffer:            Dc.l $00001000                      ; data buffer
0003427C <AmiBlitz3_wizzard.ab2@26422>                        Dc.l $00000000
00034288 <AmiBlitz3_wizzard.ab2@26423> str_databuffer:        Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
0003428C <AmiBlitz3_wizzard.ab2@26425> macrobuffer_size:      Dc.l $00002000                      ; macro buffer
00034290 <AmiBlitz3_wizzard.ab2@26426>                        Dc.l $00000000
0003429C <AmiBlitz3_wizzard.ab2@26427> str_macrobuffer:       Dc.b "8192",0,0,0,0,0,0,0,0     ; string max 12 columns
000342A0 <AmiBlitz3_wizzard.ab2@26429> stringbuffer:          Dc.l $00002800                      ; string buffer
000342A4 <AmiBlitz3_wizzard.ab2@26430>                        Dc.l $00000000
000342B0 <AmiBlitz3_wizzard.ab2@26431> str_stringbuffer:      Dc.b "10240",0,0,0,0,0,0,0      ; string max 12 columns
000342B2 <AmiBlitz3_wizzard.ab2@26433> maxobjects_value:      Dc.w $0064
000342B6 <AmiBlitz3_wizzard.ab2@26434>                        Dc.l $00000000
000342C2 <AmiBlitz3_wizzard.ab2@26435> str_maxobjects_value:  Dc.b "100",0,0,0,0,0,0,0,0,0    ; string max 12 columns
000342C4 <AmiBlitz3_wizzard.ab2@26437> maxobjects_value2:     Dc.w $0014
000342C6 <AmiBlitz3_wizzard.ab2@26438>                        Dc.w $0000
000342D2 <AmiBlitz3_wizzard.ab2@26440> str_maxobjects_value2: Dc.b "20",0,0,0,0,0,0,0,0,0,0   ; string max 12 columns
000342D3 <AmiBlitz3_wizzard.ab2@26444> set_create_iconfile:   Dc.b $00
000342D6 <AmiBlitz3_wizzard.ab2@26445> create_iconfile:       Dc.b $80,$01,$01                    ;create icon
000342D8 <AmiBlitz3_wizzard.ab2@26446>                        Dc.b $00,$01
000342D9 <AmiBlitz3_wizzard.ab2@26448> set_use_debugger:      Dc.b $00                            ; Flags.w
000342DC <AmiBlitz3_wizzard.ab2@26449> use_debugger:          Dc.b $80,$01,$01                    ; Activation.w
000342DE <AmiBlitz3_wizzard.ab2@26450>                        Dc.b $00,$01                        ; GadgetType.w
000342E2 <AmiBlitz3_wizzard.ab2@26451> AL_0_11010:            Dc.b $00,$80,$01,$01                ; flags, activation
000342E6 <AmiBlitz3_wizzard.ab2@26452> AL_0_1103C:            Dc.b $00,$80,$01,$01                ; flags, activation
000342EA <AmiBlitz3_wizzard.ab2@26453> AL_0_11068:            Dc.b $00,$80,$01,$01                ; flags, activation
000342EC <AmiBlitz3_wizzard.ab2@26454> AL_0_11094:            Ds.w 1
000342ED <AmiBlitz3_wizzard.ab2@26456> set_make_smallestcode: Ds.b 1
000342F0 <AmiBlitz3_wizzard.ab2@26457> make_smallestcode:     Dc.b $00,$01,$01                    ;make smallest
000342F2 <AmiBlitz3_wizzard.ab2@26458>                        Dc.b $00,$01
000342F3 <AmiBlitz3_wizzard.ab2@26459> set_link_debuginfo:    Ds.b 1
000342F6 <AmiBlitz3_wizzard.ab2@26460> link_debuginfo:        Dc.b $00,$01,$01                    ;create debuginfo
000342F8 <AmiBlitz3_wizzard.ab2@26461>                        Dc.b $00,$01
0003433C <AmiBlitz3_wizzard.ab2@26466>   Ds.l 17          ;resident files STEP $44 piece 8
00034438 <AmiBlitz3_wizzard.ab2@26468>   Ds.l 63
000344D4 <AmiBlitz3_wizzard.ab2@26469>   Ds.l 39
00034518 <AmiBlitz3_wizzard.ab2@26471>   Ds.l 17
00034598 <AmiBlitz3_wizzard.ab2@26474> str_calcexpression:        Ds.l 32
0003459C <AmiBlitz3_wizzard.ab2@26475> destbufferend_backup_calc: Ds.l 1
000345A6 <AmiBlitz3_wizzard.ab2@26480>   MOVE.l destbufferend,destbufferend_backup_calc
000345AC <AmiBlitz3_wizzard.ab2@26481>   MOVE.l A7,errstack
000345B6 <AmiBlitz3_wizzard.ab2@26482>   MOVE.l #Calc_Error_Exit,errcont
000345E0 <AmiBlitz3_wizzard.ab2@26489>   !basic         ; get the flage for the conversion form the editor
00034624 <AmiBlitz3_wizzard.ab2@26490>   !ComData_GetW{comWord_CalculatorButtonBinFlag,D0} : MOVE.w d0,CalculatorButtonBinFlag
00034668 <AmiBlitz3_wizzard.ab2@26491>   !ComData_GetW{comWord_CalculatorButtonDecFlag,D0} : MOVE.w d0,CalculatorButtonDecFlag
00034686 <AmiBlitz3_wizzard.ab2@26492>   !asm
0003468C <AmiBlitz3_wizzard.ab2@26494>   LEA str_calcexpression,A0
00034692 <AmiBlitz3_wizzard.ab2@26502>   JSR setcvars
00034698 <AmiBlitz3_wizzard.ab2@26503>   JSR setsvars
0003469E <AmiBlitz3_wizzard.ab2@26504>   CLR.w connest
000346A4 <AmiBlitz3_wizzard.ab2@26505>   LEA str_calcexpression,A5
000346AA <AmiBlitz3_wizzard.ab2@26506>   JSR AJL_0_BF6E
000346B0 <AmiBlitz3_wizzard.ab2@26507>   LEA str_calcexpression,A0
000346B2 <AmiBlitz3_wizzard.ab2@26508>   TST.l D3
000346B6 <AmiBlitz3_wizzard.ab2@26509>    BPL.w JL_0_11AE8
000346BA <AmiBlitz3_wizzard.ab2@26510>   MOVE.b #$2D,(A0)+
000346BC <AmiBlitz3_wizzard.ab2@26511>   NEG.l D3
000346C4 <AmiBlitz3_wizzard.ab2@26514>   CMPI.w #$80,CalculatorButtonDecFlag
000346C8 <AmiBlitz3_wizzard.ab2@26515>    BEQ.w JL_0_11B74
000346CA <AmiBlitz3_wizzard.ab2@26516>   MOVEQ.l #$00,D1
000346D2 <AmiBlitz3_wizzard.ab2@26517>   CMPI.w #$80,CalculatorButtonBinFlag
000346D6 <AmiBlitz3_wizzard.ab2@26518>    BNE.w JL_0_11B36
000346D8 <AmiBlitz3_wizzard.ab2@26519>   MOVEQ.l #$1F,D0
000346DC <AmiBlitz3_wizzard.ab2@26520>   MOVE.b #$25,(A0)+
000346DE <AmiBlitz3_wizzard.ab2@26523>       LSL.l #1,D3
000346E2 <AmiBlitz3_wizzard.ab2@26524>        BCC.w JL_0_11B18
000346E6 <AmiBlitz3_wizzard.ab2@26525>       MOVE.b #"1",(A0)+
000346E8 <AmiBlitz3_wizzard.ab2@26526>       MOVEQ.l #-$01,D1
000346EC <AmiBlitz3_wizzard.ab2@26527>   BRA.w JL_0_11B22
000346EE <AmiBlitz3_wizzard.ab2@26530>       TST.w D1
000346F2 <AmiBlitz3_wizzard.ab2@26531>       BEQ.w JL_0_11B22
000346F6 <AmiBlitz3_wizzard.ab2@26532>       MOVE.b #"0",(A0)+
000346FA <AmiBlitz3_wizzard.ab2@26535>  DBF D0,JL_0_11B08
000346FC <AmiBlitz3_wizzard.ab2@26538>   TST.w D1
00034700 <AmiBlitz3_wizzard.ab2@26539>   BNE.w JL_0_11B30
00034704 <AmiBlitz3_wizzard.ab2@26540>   MOVE.b #"0",(A0)+
00034706 <AmiBlitz3_wizzard.ab2@26543>   CLR.b (A0)
0003470A <AmiBlitz3_wizzard.ab2@26544> BRA.w JL_0_11B7C
0003470C <AmiBlitz3_wizzard.ab2@26547>   MOVEQ.l #$07,D0
00034710 <AmiBlitz3_wizzard.ab2@26548>   MOVE.b #$24,(A0)+
00034712 <AmiBlitz3_wizzard.ab2@26551>     MOVE.l D3,D2
00034714 <AmiBlitz3_wizzard.ab2@26552>     SWAP D2
00034716 <AmiBlitz3_wizzard.ab2@26553>     LSR.w #8,D2
00034718 <AmiBlitz3_wizzard.ab2@26554>     LSR.w #4,D2
0003471C <AmiBlitz3_wizzard.ab2@26555>     ADDI.w #$30,D2
00034720 <AmiBlitz3_wizzard.ab2@26556>     CMP.w #$3A,D2
00034724 <AmiBlitz3_wizzard.ab2@26557>      BCS.w JL_0_11B52
00034726 <AmiBlitz3_wizzard.ab2@26558>     ADDQ.w #7,D2
0003472A <AmiBlitz3_wizzard.ab2@26561>     CMP.w #$30,D2
0003472E <AmiBlitz3_wizzard.ab2@26562>     BEQ.w JL_0_11B62
00034730 <AmiBlitz3_wizzard.ab2@26563>     MOVE.b D2,(A0)+
00034732 <AmiBlitz3_wizzard.ab2@26564>     MOVEQ.l #-$01,D1
00034736 <AmiBlitz3_wizzard.ab2@26565>   BRA.w JL_0_11B6A
00034738 <AmiBlitz3_wizzard.ab2@26568>     TST.w D1
0003473C <AmiBlitz3_wizzard.ab2@26569>      BEQ.w JL_0_11B6A
0003473E <AmiBlitz3_wizzard.ab2@26570>     MOVE.b D2,(A0)+
00034740 <AmiBlitz3_wizzard.ab2@26573>     LSL.l #4,D3
00034744 <AmiBlitz3_wizzard.ab2@26574>  DBF D0,JL_0_11B3C
00034748 <AmiBlitz3_wizzard.ab2@26576> BRA.w JL_0_11B26
0003474A <AmiBlitz3_wizzard.ab2@26579>   MOVE.l D3,D2
00034750 <AmiBlitz3_wizzard.ab2@26580>   JSR makelong
0003475A <AmiBlitz3_wizzard.ab2@26587>   MOVE.l destbufferend_backup_calc,destbufferend
0003475C <AmiBlitz3_wizzard.ab2@26589> RTS                         ; added tomsmart 2012 03 07 vor Calculator in PED
0003485B <AmiBlitz3_wizzard.ab2@26593> str_cliarguments: Ds.b 255   ; a command line can acutally be 255 characters long
0003485C <AmiBlitz3_wizzard.ab2@26595> Even
0003489A <AmiBlitz3_wizzard.ab2@26600>   !ComData_GetL{comFunc_OpenCompilerWindow,A1}
000348A0 <AmiBlitz3_wizzard.ab2@26601>   MOVE.l #1001,D0
000348A6 <AmiBlitz3_wizzard.ab2@26602>   MOVE.l #str_cliarguments,D1
000348A8 <AmiBlitz3_wizzard.ab2@26603>   JSR (A1)
000348AA <AmiBlitz3_wizzard.ab2@26604> RTS
000348AC <AmiBlitz3_wizzard.ab2@26609>     MOVE.b (a5)+,d0
000348B0 <AmiBlitz3_wizzard.ab2@26610>     BEQ 'l2
000348B4 <AmiBlitz3_wizzard.ab2@26611>     CMP.b #$80,d0
000348B8 <AmiBlitz3_wizzard.ab2@26612>     BNE 'l1
000348BA <AmiBlitz3_wizzard.ab2@26613>     MOVE.b (a5)+,d0
000348BE <AmiBlitz3_wizzard.ab2@26614>     BEQ 'l2
000348C2 <AmiBlitz3_wizzard.ab2@26615>     CMP.b #$02,d0
000348C6 <AmiBlitz3_wizzard.ab2@26616>   BNE 'l1
000348CA <AmiBlitz3_wizzard.ab2@26619>     CMP.b #$20,(a5)+
000348CE <AmiBlitz3_wizzard.ab2@26620>   BEQ 'l3
000348D0 <AmiBlitz3_wizzard.ab2@26621>   SUBQ.l #1,a5
000348D2 <AmiBlitz3_wizzard.ab2@26622>   TST.b (a5)
000348D6 <AmiBlitz3_wizzard.ab2@26623>   BEQ 'l2
000348DA <AmiBlitz3_wizzard.ab2@26624>   CMP.w #$8008,(a5)
000348DE <AmiBlitz3_wizzard.ab2@26625>   BEQ 'l4
000348E2 <AmiBlitz3_wizzard.ab2@26626>   CMP.w #$8009,(a5)
000348E6 <AmiBlitz3_wizzard.ab2@26627>   BEQ 'l4
000348EA <AmiBlitz3_wizzard.ab2@26628> BRA 'l1
000348EC <AmiBlitz3_wizzard.ab2@26631>   ADDQ.l #2,a5
000348F2 <AmiBlitz3_wizzard.ab2@26632>   JSR skiprest
000348F4 <AmiBlitz3_wizzard.ab2@26633> RTS
000348FA <AmiBlitz3_wizzard.ab2@26636>   JSR nextline
000348FE <AmiBlitz3_wizzard.ab2@26637>   BNE 'l1
00034900 <AmiBlitz3_wizzard.ab2@26638> RTS
0003492A <AmiBlitz3_wizzard.ab2@26642>   !basic
00034934 <AmiBlitz3_wizzard.ab2@26643>   DateFormat 1
00034942 <AmiBlitz3_wizzard.ab2@26644>   i.l=SystemDate
00034968 <AmiBlitz3_wizzard.ab2@26645>   a$=Date$ (i)
000349E6 <AmiBlitz3_wizzard.ab2@26646>   a$=Replace$(a$,"/",".")
000349EC <AmiBlitz3_wizzard.ab2@26647>   GetD0 &a$
000349EE <AmiBlitz3_wizzard.ab2@26648>   MOVEQ #8,d2
000349F0 <AmiBlitz3_wizzard.ab2@26649>   MOVE.l d0,a0
000349F2 <AmiBlitz3_wizzard.ab2@26652>     MOVE.b (a0)+,d1
000349F8 <AmiBlitz3_wizzard.ab2@26653>     JSR pokedata1b
000349FC <AmiBlitz3_wizzard.ab2@26654>  DBF d2,'l1
000349FE <AmiBlitz3_wizzard.ab2@26656>   MOVEQ #0,d0
00034A00 <AmiBlitz3_wizzard.ab2@26657>   MOVE.b (a0)+,d0
00034A1E <AmiBlitz3_wizzard.ab2@26658>   !asm
00034A24 <AmiBlitz3_wizzard.ab2@26659>   ADD.l #9,d2
00034A2A <AmiBlitz3_wizzard.ab2@26660>   ADD.l #9,a5
00034A2C <AmiBlitz3_wizzard.ab2@26661> RTS
00034A56 <AmiBlitz3_wizzard.ab2@26665>   !basic
00034A60 <AmiBlitz3_wizzard.ab2@26666>   DateFormat 0
00034A6E <AmiBlitz3_wizzard.ab2@26667>   i.l=SystemDate
00034A94 <AmiBlitz3_wizzard.ab2@26668>   a$=Date$ (i)
00034B12 <AmiBlitz3_wizzard.ab2@26669>   a$=Replace$(a$,"/",".")
00034B18 <AmiBlitz3_wizzard.ab2@26670>   GetD0 &a$
00034B1A <AmiBlitz3_wizzard.ab2@26671>   MOVEQ #8,d2
00034B1C <AmiBlitz3_wizzard.ab2@26672>   MOVE.l d0,a0
00034B1E <AmiBlitz3_wizzard.ab2@26675>     MOVE.b (a0)+,d1
00034B24 <AmiBlitz3_wizzard.ab2@26676>     JSR pokedata1b
00034B28 <AmiBlitz3_wizzard.ab2@26677>  DBF d2,'l1
00034B2A <AmiBlitz3_wizzard.ab2@26679>   MOVEQ #0,d0
00034B2C <AmiBlitz3_wizzard.ab2@26680>   MOVE.b (a0)+,d0
00034B4A <AmiBlitz3_wizzard.ab2@26681>   !asm
00034B50 <AmiBlitz3_wizzard.ab2@26682>   ADD.l #9,d2
00034B56 <AmiBlitz3_wizzard.ab2@26683>   ADD.l #13,a5
00034B58 <AmiBlitz3_wizzard.ab2@26684> RTS
00034B82 <AmiBlitz3_wizzard.ab2@26688>   !basic
00034B8C <AmiBlitz3_wizzard.ab2@26689>   DateFormat 1
00034B9A <AmiBlitz3_wizzard.ab2@26690>   i.l = SystemDate
00034BC0 <AmiBlitz3_wizzard.ab2@26691>   a$ = Date$ (i)
00034C3E <AmiBlitz3_wizzard.ab2@26692>   a$ = Replace$(a$,"/",".")
00034C44 <AmiBlitz3_wizzard.ab2@26693>   GetD0 &a$
00034C46 <AmiBlitz3_wizzard.ab2@26694>   MOVEQ #8,d2
00034C48 <AmiBlitz3_wizzard.ab2@26695>   MOVE.l d0,a0
00034C4A <AmiBlitz3_wizzard.ab2@26698>     MOVE.b (a0)+,d1
00034C50 <AmiBlitz3_wizzard.ab2@26699>     JSR writebyte
00034C54 <AmiBlitz3_wizzard.ab2@26700>  DBF d2,'l1
00034C56 <AmiBlitz3_wizzard.ab2@26702>   MOVEQ #0,d0
00034C58 <AmiBlitz3_wizzard.ab2@26703>   MOVE.b (a0)+,d0
00034C76 <AmiBlitz3_wizzard.ab2@26704>   !asm
00034C7C <AmiBlitz3_wizzard.ab2@26705>   ADD.l #9,a5
00034C7E <AmiBlitz3_wizzard.ab2@26706> RTS
00034CA8 <AmiBlitz3_wizzard.ab2@26710>   !basic
00034CB2 <AmiBlitz3_wizzard.ab2@26711>   DateFormat 0
00034CC0 <AmiBlitz3_wizzard.ab2@26712>   i.l=SystemDate
00034CE6 <AmiBlitz3_wizzard.ab2@26713>   a$=Date$ (i)
00034D64 <AmiBlitz3_wizzard.ab2@26714>   a$=Replace$(a$,"/",".")
00034D6A <AmiBlitz3_wizzard.ab2@26715>   GetD0 &a$
00034D6C <AmiBlitz3_wizzard.ab2@26716>   MOVEQ #8,d2
00034D6E <AmiBlitz3_wizzard.ab2@26717>   MOVE.l d0,a0
00034D70 <AmiBlitz3_wizzard.ab2@26720>     MOVE.b (a0)+,d1
00034D76 <AmiBlitz3_wizzard.ab2@26721>     JSR writebyte
00034D7A <AmiBlitz3_wizzard.ab2@26722>  DBF d2,'l1
00034D7C <AmiBlitz3_wizzard.ab2@26724>   MOVEQ #0,d0
00034D7E <AmiBlitz3_wizzard.ab2@26725>   MOVE.b (a0)+,d0
00034D9C <AmiBlitz3_wizzard.ab2@26726>   !asm
00034DA2 <AmiBlitz3_wizzard.ab2@26727>   ADD.l #13,a5
00034DA4 <AmiBlitz3_wizzard.ab2@26728> RTS
00034DA6 <AmiBlitz3_wizzard.ab2@26732>   MOVE.l d2,-(a7)                                          ; D2 -> stack
00034DA8 <AmiBlitz3_wizzard.ab2@26733>   MOVE.l a5,d0
00034DD2 <AmiBlitz3_wizzard.ab2@26734>   !basic
00034DD6 <AmiBlitz3_wizzard.ab2@26735>   _myD0.l = PutD0
00034DE0 <AmiBlitz3_wizzard.ab2@26736>   If _myD0
00034E26 <AmiBlitz3_wizzard.ab2@26737>     verstring$ = Left$(Peek.s(_myD0),9+3)
00034E78 <AmiBlitz3_wizzard.ab2@26738>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00034E7E <AmiBlitz3_wizzard.ab2@26739>   Else
00034EAC <AmiBlitz3_wizzard.ab2@26740>     error{"INTERNAL: Invalid pointer in version_string!"}
00034EBC <AmiBlitz3_wizzard.ab2@26745>   actual_version.l = Peek.l(?versioninformation)
00034ECC <AmiBlitz3_wizzard.ab2@26746>   actual_build.l   = Peek.l(?number_of_builds)
00034EF0 <AmiBlitz3_wizzard.ab2@26748>   Format "00"
00034F26 <AmiBlitz3_wizzard.ab2@26749>   Select verstring$
00034F4A <AmiBlitz3_wizzard.ab2@26751>     Case "VER_MAJOR"
00034F86 <AmiBlitz3_wizzard.ab2@26752>      put_versionstr$ = Str$(actual_version LSR 24)
00034FB0 <AmiBlitz3_wizzard.ab2@26754>     Case "VER_MINOR"
00034FF4 <AmiBlitz3_wizzard.ab2@26755>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
0003501E <AmiBlitz3_wizzard.ab2@26757>     Case "VER_PATCH"
00035062 <AmiBlitz3_wizzard.ab2@26758>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
0003508C <AmiBlitz3_wizzard.ab2@26760>     Case "VER_BUILD"
000350B0 <AmiBlitz3_wizzard.ab2@26761>      Format ""
000350E4 <AmiBlitz3_wizzard.ab2@26762>      put_versionstr$ = Str$(actual_build)
000350EA <AmiBlitz3_wizzard.ab2@26764>     Default
00035112 <AmiBlitz3_wizzard.ab2@26765>      put_versionstr$ = "{unknown compilerconstant}"
00035120 <AmiBlitz3_wizzard.ab2@26768>   End Select
00035144 <AmiBlitz3_wizzard.ab2@26769>   Format ""
00035154 <AmiBlitz3_wizzard.ab2@26771>   GetD0 FLen(put_versionstr$)                              ; laenge zielstring -> Stack
00035156 <AmiBlitz3_wizzard.ab2@26772>   MOVE.l d0,d2
00035158 <AmiBlitz3_wizzard.ab2@26773>   MOVE.l d2,-(a7)
0003515C <AmiBlitz3_wizzard.ab2@26774>   SUB #1,d2
00035162 <AmiBlitz3_wizzard.ab2@26776>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
00035164 <AmiBlitz3_wizzard.ab2@26777>   MOVE.l d0,a0
00035166 <AmiBlitz3_wizzard.ab2@26780>     MOVE.b (a0)+,d1
0003516C <AmiBlitz3_wizzard.ab2@26781>     JSR pokedata1b
00035170 <AmiBlitz3_wizzard.ab2@26782>  DBF d2,'l1
00035172 <AmiBlitz3_wizzard.ab2@26784>   MOVEQ #0,d0
00035190 <AmiBlitz3_wizzard.ab2@26785>   !asm
00035192 <AmiBlitz3_wizzard.ab2@26786>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
00035194 <AmiBlitz3_wizzard.ab2@26787>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
00035196 <AmiBlitz3_wizzard.ab2@26788>   ADD.l d0,d2
0003519C <AmiBlitz3_wizzard.ab2@26789>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
0003519E <AmiBlitz3_wizzard.ab2@26790>   MOVEQ #0,d0
000351A0 <AmiBlitz3_wizzard.ab2@26791> RTS
000351A2 <AmiBlitz3_wizzard.ab2@26795>   MOVE.l a5,d0
000351CC <AmiBlitz3_wizzard.ab2@26796>   !basic
000351D0 <AmiBlitz3_wizzard.ab2@26797>   _myD0.l = PutD0
000351DA <AmiBlitz3_wizzard.ab2@26798>   If _myD0
00035220 <AmiBlitz3_wizzard.ab2@26799>     verstring$ = Left$(Peek.s(_myD0),9+3)
00035272 <AmiBlitz3_wizzard.ab2@26800>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00035278 <AmiBlitz3_wizzard.ab2@26801>   Else
000352A6 <AmiBlitz3_wizzard.ab2@26802>     error{"INTERNAL: Invalid pointer in version_string_dc!"}
000352B6 <AmiBlitz3_wizzard.ab2@26807>   actual_version.l = Peek.l(?versioninformation)
000352C6 <AmiBlitz3_wizzard.ab2@26808>   actual_build.l   = Peek.l(?number_of_builds)
000352EA <AmiBlitz3_wizzard.ab2@26810>   Format ""
00035320 <AmiBlitz3_wizzard.ab2@26811>   Select verstring$
00035344 <AmiBlitz3_wizzard.ab2@26813>     Case "VER_MAJOR"
00035380 <AmiBlitz3_wizzard.ab2@26814>      put_versionstr$ = Str$(actual_version LSR 24)
000353AA <AmiBlitz3_wizzard.ab2@26816>     Case "VER_MINOR"
000353EE <AmiBlitz3_wizzard.ab2@26817>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
00035418 <AmiBlitz3_wizzard.ab2@26819>     Case "VER_PATCH"
0003545C <AmiBlitz3_wizzard.ab2@26820>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
00035486 <AmiBlitz3_wizzard.ab2@26822>     Case "VER_BUILD"
000354AA <AmiBlitz3_wizzard.ab2@26823>      Format ""
000354DE <AmiBlitz3_wizzard.ab2@26824>      put_versionstr$ = Str$(actual_build)
000354E4 <AmiBlitz3_wizzard.ab2@26826>     Default
0003550C <AmiBlitz3_wizzard.ab2@26827>      put_versionstr$ = "{unknown compilerconstant}"
0003551A <AmiBlitz3_wizzard.ab2@26829>   End Select
0003553E <AmiBlitz3_wizzard.ab2@26830>   Format ""
00035554 <AmiBlitz3_wizzard.ab2@26832>   GetD0 FLen(put_versionstr$)-1
00035556 <AmiBlitz3_wizzard.ab2@26833>   MOVE.l d0,d2
0003555C <AmiBlitz3_wizzard.ab2@26835>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
0003555E <AmiBlitz3_wizzard.ab2@26836>   MOVE.l d0,a0
00035560 <AmiBlitz3_wizzard.ab2@26839>     MOVE.b (a0)+,d1
00035566 <AmiBlitz3_wizzard.ab2@26840>     JSR writebyte
0003556A <AmiBlitz3_wizzard.ab2@26841>  DBF d2,'l1
0003556C <AmiBlitz3_wizzard.ab2@26843>   MOVEQ #0,d0
0003556E <AmiBlitz3_wizzard.ab2@26844>   MOVE.b -(a0),d0                                          ; letztes Zeichen in D0
0003558C <AmiBlitz3_wizzard.ab2@26845>   !asm
00035592 <AmiBlitz3_wizzard.ab2@26846>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
00035594 <AmiBlitz3_wizzard.ab2@26847> RTS
00035596 <AmiBlitz3_wizzard.ab2@26949>  MOVE.l a5,-(a7)
000355C2 <AmiBlitz3_wizzard.ab2@26950>  !fget
000355C6 <AmiBlitz3_wizzard.ab2@26951>  CMP.w #".",d0
000355CA <AmiBlitz3_wizzard.ab2@26952>  BNE 'skip
000355CE <AmiBlitz3_wizzard.ab2@26953>  MOVEM.l a2/d2,-(a7)
000355D4 <AmiBlitz3_wizzard.ab2@26954>  LEA newtypebase,a2
000355DA <AmiBlitz3_wizzard.ab2@26955>  JSR getparameter2
000355DE <AmiBlitz3_wizzard.ab2@26956>  BEQ.w JUMP_syntaxerr
000355E4 <AmiBlitz3_wizzard.ab2@26957>  JSR findtype
000355E8 <AmiBlitz3_wizzard.ab2@26958>  BNE.w JUMP_notypeerr
000355EE <AmiBlitz3_wizzard.ab2@26959>  MOVE.l a2,typetocast
000355F2 <AmiBlitz3_wizzard.ab2@26960>  MOVEM.l (a7)+,a2/d2
000355F6 <AmiBlitz3_wizzard.ab2@26961>  CMP.w #")",d0
000355FA <AmiBlitz3_wizzard.ab2@26962>  BNE JUMP_errorbracketmiss
000355FC <AmiBlitz3_wizzard.ab2@26963>  ADDQ.l #4,a7
00035628 <AmiBlitz3_wizzard.ab2@26964>  !fget
0003562E <AmiBlitz3_wizzard.ab2@26965>  JMP nocast
00035630 <AmiBlitz3_wizzard.ab2@26967> 'skip MOVE.l (a7)+,a5
00035636 <AmiBlitz3_wizzard.ab2@26968>  JMP JL_0_A410
0003563C <AmiBlitz3_wizzard.ab2@26970> JUMP_errorbracketmiss JMP errorbracketmiss
00035666 <AmiBlitz3_wizzard.ab2@26972> Function.l ab3_GetIncludeLock{filename.s}
00035686 <AmiBlitz3_wizzard.ab2@26973>   incLock.l  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub
000356DE <AmiBlitz3_wizzard.ab2@26974>   ex.s       = dos_GetExt{filename}
000356F2 <AmiBlitz3_wizzard.ab2@26976>   If incLock = False
00035766 <AmiBlitz3_wizzard.ab2@26977>     filename = dos_SetExt{filename,"ab3"}
00035786 <AmiBlitz3_wizzard.ab2@26978>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab3
0003579A <AmiBlitz3_wizzard.ab2@26981>   If incLock = False
0003580E <AmiBlitz3_wizzard.ab2@26982>     filename = dos_SetExt{filename,"ab2"}
0003582E <AmiBlitz3_wizzard.ab2@26983>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab2
00035842 <AmiBlitz3_wizzard.ab2@26986>   If incLock = False
000358B6 <AmiBlitz3_wizzard.ab2@26987>     filename = dos_SetExt{filename,"bb2"}
000358D6 <AmiBlitz3_wizzard.ab2@26988>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.bb2
000358EA <AmiBlitz3_wizzard.ab2@26991>   If incLock = False
0003597C <AmiBlitz3_wizzard.ab2@26992>     filename = dos_SetExt{filename,ex+".ab3"}
0003599C <AmiBlitz3_wizzard.ab2@26993>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab3
000359B0 <AmiBlitz3_wizzard.ab2@26996>   If incLock = False
00035A24 <AmiBlitz3_wizzard.ab2@26997>     filename = dos_SetExt{filename,"ab2"}
00035A44 <AmiBlitz3_wizzard.ab2@26998>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab2
00035A58 <AmiBlitz3_wizzard.ab2@27001>   If incLock = False
00035ACC <AmiBlitz3_wizzard.ab2@27002>     filename = dos_SetExt{filename,"bb2"}
00035AEC <AmiBlitz3_wizzard.ab2@27003>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.bb2
00035AF6 <AmiBlitz3_wizzard.ab2@27006>  Function Return incLock
00035B10 <AmiBlitz3_wizzard.ab2@27007> End Function
00035B3A <AmiBlitz3_wizzard.ab2@27011>   !basic
00035B64 <AmiBlitz3_wizzard.ab2@27012>   incString.s = Peek$(?ptr_parameterstore)
00035B92 <AmiBlitz3_wizzard.ab2@27014>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
00035B96 <AmiBlitz3_wizzard.ab2@27015>   incDirP.l   = PutD0                                       ;    "
00035BBE <AmiBlitz3_wizzard.ab2@27016>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
00035C3E <AmiBlitz3_wizzard.ab2@27017>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
00035C70 <AmiBlitz3_wizzard.ab2@27018>   incLock.l   = ab3_GetIncludeLock{incFile}                 ; check if file exist
00035C84 <AmiBlitz3_wizzard.ab2@27020>   If incLock = False ; not found => check default Include Directory
00035C94 <AmiBlitz3_wizzard.ab2@27021>     incDirP.l = Peek.l(?incd)
00035C9E <AmiBlitz3_wizzard.ab2@27022>     If incDirP
00035CC6 <AmiBlitz3_wizzard.ab2@27023>       incDir_.s = Peek.s(incDirP)
00035CCC <AmiBlitz3_wizzard.ab2@27024>     Else
00035D36 <AmiBlitz3_wizzard.ab2@27025>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00035DB6 <AmiBlitz3_wizzard.ab2@27027>     incFile.s = dos_AddPart{incDir_,incString}
00035DE8 <AmiBlitz3_wizzard.ab2@27028>     incLock.l = ab3_GetIncludeLock{incFile}
00035DFC <AmiBlitz3_wizzard.ab2@27031>   If incLock = False ; not found => check relative to current source
00035E14 <AmiBlitz3_wizzard.ab2@27032>     incDepth.l = Peek.w(?ininclude)-1
00035E3A <AmiBlitz3_wizzard.ab2@27033>     If incDepth >= 0 AND incDepth < #maxincludes
00035E9A <AmiBlitz3_wizzard.ab2@27034>       incDir_.s = dos_PathPart{incdim (incDepth)} ;= Peek.s(?includetemp2)
00035F1A <AmiBlitz3_wizzard.ab2@27035>       incFile.s = dos_AddPart{incDir_,incString}
00035F4C <AmiBlitz3_wizzard.ab2@27036>       incLock.l = ab3_GetIncludeLock{incFile}
00035F60 <AmiBlitz3_wizzard.ab2@27040>   If incLock = False ; still not found => check default Include Directory and name only
00035F70 <AmiBlitz3_wizzard.ab2@27041>     incDirP.l = Peek.l(?incd)
00035F7A <AmiBlitz3_wizzard.ab2@27042>     If incDirP
00035FA2 <AmiBlitz3_wizzard.ab2@27043>       incDir_.s = Peek.s(incDirP)
00035FA8 <AmiBlitz3_wizzard.ab2@27044>     Else
00036012 <AmiBlitz3_wizzard.ab2@27045>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
000360C0 <AmiBlitz3_wizzard.ab2@27047>     incFile.s = dos_AddPart{incDir_,dos_FilePart{incString}}
000360F2 <AmiBlitz3_wizzard.ab2@27048>     incLock.l = ab3_GetIncludeLock{incFile}
000360FC <AmiBlitz3_wizzard.ab2@27051>   If incLock
00036112 <AmiBlitz3_wizzard.ab2@27052>     MaxLen incFile = 1024
00036136 <AmiBlitz3_wizzard.ab2@27053>     NameFromLock_ incLock,&incFile,1024
00036160 <AmiBlitz3_wizzard.ab2@27054>     incFile = Peek.s(&incFile)
00036198 <AmiBlitz3_wizzard.ab2@27055>     Poke$ ?ptr_parameterstore,incFile
000361AC <AmiBlitz3_wizzard.ab2@27056>     i = FLen(incFile)
000361B8 <AmiBlitz3_wizzard.ab2@27057>     GetReg d0,i
000361BE <AmiBlitz3_wizzard.ab2@27058>     MOVE.l d0,tempstore
000361CE <AmiBlitz3_wizzard.ab2@27059>     UnLock_ incLock
000361EC <AmiBlitz3_wizzard.ab2@27062>   !asm
000361F2 <AmiBlitz3_wizzard.ab2@27063>   TST.l tempstore
000361F6 <AmiBlitz3_wizzard.ab2@27064>    BEQ 'l1
000361FC <AmiBlitz3_wizzard.ab2@27065>   MOVE.l tempstore,d2
000361FE <AmiBlitz3_wizzard.ab2@27068> RTS
00036228 <AmiBlitz3_wizzard.ab2@27072>   !basic
00036252 <AmiBlitz3_wizzard.ab2@27073>   incString.s = Peek$(?ptr_parameterstore)                  ; get the string
00036280 <AmiBlitz3_wizzard.ab2@27074>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
00036284 <AmiBlitz3_wizzard.ab2@27075>   incDirP.l   = PutD0                                       ;    "
000362AC <AmiBlitz3_wizzard.ab2@27076>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
0003632C <AmiBlitz3_wizzard.ab2@27077>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
0003634C <AmiBlitz3_wizzard.ab2@27078>   incLock.l   = Lock_(&incFile,#ACCESS_READ)                ; check if file exist
00036360 <AmiBlitz3_wizzard.ab2@27080>   If incLock = False                                        ; not found => try orignal string only to find
00036380 <AmiBlitz3_wizzard.ab2@27081>     incLock.l = Lock_(&incString,#ACCESS_READ)
0003638A <AmiBlitz3_wizzard.ab2@27084>   If incLock                                                ; found => store full path
000363A0 <AmiBlitz3_wizzard.ab2@27085>     MaxLen incFile = 1024
000363C4 <AmiBlitz3_wizzard.ab2@27086>     NameFromLock_ incLock,&incFile,1024
000363EE <AmiBlitz3_wizzard.ab2@27087>     incFile = Peek.s(&incFile)
00036426 <AmiBlitz3_wizzard.ab2@27088>     Poke$ ?ptr_parameterstore,incFile
00036432 <AmiBlitz3_wizzard.ab2@27091> 
00036450 <AmiBlitz3_wizzard.ab2@27092>   !asm
00036452 <AmiBlitz3_wizzard.ab2@27093> RTS
00036458 <AmiBlitz3_wizzard.ab2@27104>   JSR Aclearallvars
0003645E <AmiBlitz3_wizzard.ab2@27105>   JSR free_unusedfunctions
00036468 <AmiBlitz3_wizzard.ab2@27120>   MOVE.l #"NORE",reqmode
0003646E <AmiBlitz3_wizzard.ab2@27121> JSR handle_compileerror
00036470 <AmiBlitz3_wizzard.ab2@27124>   MOVE.l d0,-(a7)
00036472 <AmiBlitz3_wizzard.ab2@27125>   MOVE.l a5,d0
0003647C <AmiBlitz3_wizzard.ab2@27126>   !basica7
00036480 <AmiBlitz3_wizzard.ab2@27127>   i.l = PutD0
0003648A <AmiBlitz3_wizzard.ab2@27128>   If i
000364B2 <AmiBlitz3_wizzard.ab2@27129>     a$ = Peek$(i)
000364E4 <AmiBlitz3_wizzard.ab2@27130>     b$ = Peeks$(i-7,7)
000365CA <AmiBlitz3_wizzard.ab2@27131>     i = Request(!TRANS{"Do workaround ?"},b$ + a$,!TRANS{"Yes|No"})
000365D0 <AmiBlitz3_wizzard.ab2@27132>     MOVE.l d0,result
000365D4 <AmiBlitz3_wizzard.ab2@27134>   !asma7
000365D6 <AmiBlitz3_wizzard.ab2@27135>   MOVE.l (a7)+,d0
000365D8 <AmiBlitz3_wizzard.ab2@27136> RTS
00036602 <AmiBlitz3_wizzard.ab2@27140>   !basic
00036630 <AmiBlitz3_wizzard.ab2@27141>   !ComData_LEA{comStr_CurrentDir,D0}
00036634 <AmiBlitz3_wizzard.ab2@27142>   currentDirP.l = PutD0
00036662 <AmiBlitz3_wizzard.ab2@27144>   !ComData_LEA{comStr_SourceName,D0}
00036666 <AmiBlitz3_wizzard.ab2@27145>   fileNameP.l = PutD0
0003668E <AmiBlitz3_wizzard.ab2@27147>   check_dirname$  = Peek$(currentDirP)
000366B6 <AmiBlitz3_wizzard.ab2@27148>   check_filename$ = Peek$(fileNameP)
0003673C <AmiBlitz3_wizzard.ab2@27149>   If (olddirname$<>check_dirname$) OR (oldfilename$<>check_filename$)
00036742 <AmiBlitz3_wizzard.ab2@27150>     JSR free_unusedfunctions
0003678C <AmiBlitz3_wizzard.ab2@27152>   olddirname$ = Peek$(check_dirname$)
000367D6 <AmiBlitz3_wizzard.ab2@27153>   oldfilename$ = Peek$(check_filename$)
00036800 <AmiBlitz3_wizzard.ab2@27154>   For i = 0 To #maxincludes-1
00036814 <AmiBlitz3_wizzard.ab2@27155>     incline(i) = 0
00036824 <AmiBlitz3_wizzard.ab2@27156>   Next
00036842 <AmiBlitz3_wizzard.ab2@27157>   !asm
00036844 <AmiBlitz3_wizzard.ab2@27158> RTS
00036846 <AmiBlitz3_wizzard.ab2@27162>   MOVEQ #0,d1
00036848 <AmiBlitz3_wizzard.ab2@27165>   MOVE.b (a5)+,d0
0003684C <AmiBlitz3_wizzard.ab2@27166>   BEQ 'er1
00036850 <AmiBlitz3_wizzard.ab2@27167>   CMP.b #$20,d0
00036854 <AmiBlitz3_wizzard.ab2@27168>   BEQ 'l1
00036856 <AmiBlitz3_wizzard.ab2@27169>   ADDQ #1,d1
0003685A <AmiBlitz3_wizzard.ab2@27170>   CMP.b #$22,d0
0003685E <AmiBlitz3_wizzard.ab2@27171>   BNE 'l1
00036860 <AmiBlitz3_wizzard.ab2@27172> RTS
00036866 <AmiBlitz3_wizzard.ab2@27175> JMP syntaxerr
0003688A <AmiBlitz3_wizzard.ab2@27186> erro1t   Dc.b "Only one BSS / Chip Segment allowed",0 : Even
000368A8 <AmiBlitz3_wizzard.ab2@27187> nodata   Dc.b "BSS Segment contains Data!!!!",0       : Even
000368AE <AmiBlitz3_wizzard.ab2@27192>   TST.b exdebug
000368B2 <AmiBlitz3_wizzard.ab2@27193>   BNE 'l10
000368B8 <AmiBlitz3_wizzard.ab2@27194>   MOVE.l #$4e71,d1
000368BE <AmiBlitz3_wizzard.ab2@27195>   JSR writeword
000368C4 <AmiBlitz3_wizzard.ab2@27196>   MOVE.l destpointer,d0
000368C6 <AmiBlitz3_wizzard.ab2@27197>   MOVE.l d0,d1
000368C8 <AmiBlitz3_wizzard.ab2@27198>   ADDQ.l #3,d1
000368CE <AmiBlitz3_wizzard.ab2@27199>   AND.l #$fffffffc,d1
000368D4 <AmiBlitz3_wizzard.ab2@27200>   MOVE.l d1,destpointer
000368DA <AmiBlitz3_wizzard.ab2@27201>   SUB.l destpointer,d0
000368DE <AmiBlitz3_wizzard.ab2@27202>   BEQ 'lnf1
000368E8 <AmiBlitz3_wizzard.ab2@27203>   CMP.l #-1,bssstart
000368EC <AmiBlitz3_wizzard.ab2@27204>   BNE 'lnf1
000368F6 <AmiBlitz3_wizzard.ab2@27205>   CMP.l #-1,chipstart
000368FA <AmiBlitz3_wizzard.ab2@27206>   BNE 'lnf1
00036900 <AmiBlitz3_wizzard.ab2@27207>   MOVE.l destpointer,a4
00036906 <AmiBlitz3_wizzard.ab2@27208>   TST.w dontwrite
0003690A <AmiBlitz3_wizzard.ab2@27209>   BNE 'lnf1
00036910 <AmiBlitz3_wizzard.ab2@27210>   MOVE.w #$4e71,-2(a4)
0003691A <AmiBlitz3_wizzard.ab2@27213>   CMP.l #-1,bssstart
0003691E <AmiBlitz3_wizzard.ab2@27214>   BEQ 'l11
00036924 <AmiBlitz3_wizzard.ab2@27215>   MOVE.l #erro1t,-(a7)
0003692A <AmiBlitz3_wizzard.ab2@27216> JMP handle_compileerror
00036934 <AmiBlitz3_wizzard.ab2@27219>   MOVE.l destpointer,bssstart
0003693C <AmiBlitz3_wizzard.ab2@27220>   MOVE.b #1,bssmode
00036942 <AmiBlitz3_wizzard.ab2@27223>   TST.b chipmode
00036946 <AmiBlitz3_wizzard.ab2@27224>   BEQ 'l10
00036950 <AmiBlitz3_wizzard.ab2@27225>   MOVE.l destpointer,chipend
00036956 <AmiBlitz3_wizzard.ab2@27226>   CLR.b chipmode
0003695C <AmiBlitz3_wizzard.ab2@27229>   JSR get1bytemain
0003695E <AmiBlitz3_wizzard.ab2@27230> RTS
00036964 <AmiBlitz3_wizzard.ab2@27234>    TST.b exdebug
00036968 <AmiBlitz3_wizzard.ab2@27235>   BNE 'x1
0003696E <AmiBlitz3_wizzard.ab2@27236>   MOVE.l destpointer,d0
00036974 <AmiBlitz3_wizzard.ab2@27237>   MOVE.l d0,realbssend
0003697A <AmiBlitz3_wizzard.ab2@27238>   MOVE.l #$4e71,d1
00036980 <AmiBlitz3_wizzard.ab2@27239>   JSR writeword
00036986 <AmiBlitz3_wizzard.ab2@27240>   MOVE.l destpointer,d0
00036988 <AmiBlitz3_wizzard.ab2@27241>   MOVE.l d0,d1
0003698A <AmiBlitz3_wizzard.ab2@27242>   ADDQ.l #3,d1
00036990 <AmiBlitz3_wizzard.ab2@27243>   AND.l #$fffffffc,d1
00036996 <AmiBlitz3_wizzard.ab2@27244>   MOVE.l d1,destpointer
0003699C <AmiBlitz3_wizzard.ab2@27245>   SUB.l destpointer,d0
000369A0 <AmiBlitz3_wizzard.ab2@27246>   BEQ 'lnf1
000369A6 <AmiBlitz3_wizzard.ab2@27247>   MOVE.l destpointer,a4
000369B0 <AmiBlitz3_wizzard.ab2@27248>   CMP.l #-1,bssstart
000369B4 <AmiBlitz3_wizzard.ab2@27249>   BNE 'lnf1
000369BE <AmiBlitz3_wizzard.ab2@27250>   CMP.l #-1,chipstart
000369C2 <AmiBlitz3_wizzard.ab2@27251>   BNE 'lnf1
000369C8 <AmiBlitz3_wizzard.ab2@27252>   TST.w dontwrite
000369CC <AmiBlitz3_wizzard.ab2@27253>   BNE 'lnf1
000369D2 <AmiBlitz3_wizzard.ab2@27254>   MOVE.w #$4e71,-2(a4)
000369D8 <AmiBlitz3_wizzard.ab2@27257>   TST.b bssmode
000369DC <AmiBlitz3_wizzard.ab2@27258>   BEQ 'l10
000369E6 <AmiBlitz3_wizzard.ab2@27259>   MOVE.l destpointer,bssend
000369EC <AmiBlitz3_wizzard.ab2@27260>   CLR.b bssmode
000369F6 <AmiBlitz3_wizzard.ab2@27265>   CMP.l #-1,chipstart
000369FA <AmiBlitz3_wizzard.ab2@27266>   BEQ 'l11
00036A00 <AmiBlitz3_wizzard.ab2@27267>   MOVE.l #erro1t,-(a7)
00036A06 <AmiBlitz3_wizzard.ab2@27268> JMP handle_compileerror
00036A10 <AmiBlitz3_wizzard.ab2@27271>   MOVE.l destpointer,chipstart
00036A18 <AmiBlitz3_wizzard.ab2@27272>   MOVE.b #1,chipmode
00036A1E <AmiBlitz3_wizzard.ab2@27275>   JSR get1bytemain
00036A20 <AmiBlitz3_wizzard.ab2@27276> RTS
00036A4A <AmiBlitz3_wizzard.ab2@27280>   !basic
00036A5C <AmiBlitz3_wizzard.ab2@27290>   i.l = Peek.w(?ininclude)
00036A82 <AmiBlitz3_wizzard.ab2@27291>   If i>=0 AND i<#maxincludes
00036AB4 <AmiBlitz3_wizzard.ab2@27292>     incdim (i) = Peek.s(?includetemp2)
00036ACE <AmiBlitz3_wizzard.ab2@27293>     incline(i) = Peek.l(?includeline)
00036AD8 <AmiBlitz3_wizzard.ab2@27295>     If CLIMode
00036B86 <AmiBlitz3_wizzard.ab2@27296>       If cli_verbose>=2 Then NPrint "  -> Compiling ",incdim(i),"..."
00036BA4 <AmiBlitz3_wizzard.ab2@27300>   !asm
00036BA6 <AmiBlitz3_wizzard.ab2@27301> RTS
00036BD0 <AmiBlitz3_wizzard.ab2@27305>   !basic
00036BE2 <AmiBlitz3_wizzard.ab2@27306>   i.l = Peek.w(?ininclude)
00036C08 <AmiBlitz3_wizzard.ab2@27307>   If i>=0 AND i<#maxincludes
00036C38 <AmiBlitz3_wizzard.ab2@27308>     incdim (i) = ""
00036C4C <AmiBlitz3_wizzard.ab2@27309>     incline(i) = 0
00036C84 <AmiBlitz3_wizzard.ab2@27310>     If i>0 Then Poke.l (?includeline),incline(i-1)+1
00036CA2 <AmiBlitz3_wizzard.ab2@27312>   !asm
00036CA4 <AmiBlitz3_wizzard.ab2@27313> RTS
00036CAA <AmiBlitz3_wizzard.ab2@27317>   LEA replacedat,a0
00036CAE <AmiBlitz3_wizzard.ab2@27318>   Dc.w $3181,$0A00                                         ;MOVE.w d1,0(a0,d0.l*2)
00036CB0 <AmiBlitz3_wizzard.ab2@27319> RTS
00036CB6 <AmiBlitz3_wizzard.ab2@27323>   TST.b fpu
00036CBA <AmiBlitz3_wizzard.ab2@27324>   BEQ 'l1
00036CC4 <AmiBlitz3_wizzard.ab2@27327>   MOVE.l destpointer,newinitaddr
00036CCA <AmiBlitz3_wizzard.ab2@27328>   JSR writeword
00036CD0 <AmiBlitz3_wizzard.ab2@27329>   JSR writelong
00036CD2 <AmiBlitz3_wizzard.ab2@27330> RTS
00036CD4 <AmiBlitz3_wizzard.ab2@27335>   TST.b (a5)
00036CD8 <AmiBlitz3_wizzard.ab2@27336>    BEQ.s 'll20
00036CDC <AmiBlitz3_wizzard.ab2@27337>   CMP.b #$20,(a5)
00036CE0 <AmiBlitz3_wizzard.ab2@27338>    BNE.s 'll10
00036CE2 <AmiBlitz3_wizzard.ab2@27339>   ADDQ.l #1,a5
00036CE6 <AmiBlitz3_wizzard.ab2@27340> BRA.s 'll21
00036CEA <AmiBlitz3_wizzard.ab2@27343>   CMP.b #";",(a5)
00036CEE <AmiBlitz3_wizzard.ab2@27344>   BNE.s 'll20
00036CF0 <AmiBlitz3_wizzard.ab2@27347>   TST.b (a5)+
00036CF4 <AmiBlitz3_wizzard.ab2@27348>   BEQ.s 'll23
00036CF8 <AmiBlitz3_wizzard.ab2@27349> BRA.s 'll25
00036CFA <AmiBlitz3_wizzard.ab2@27352>   SUBQ.l #1,a5
00036CFC <AmiBlitz3_wizzard.ab2@27355> RTS
00036D00 <AmiBlitz3_wizzard.ab2@27359>   MOVEM.l a2/d2,-(a7)
00036D02 <AmiBlitz3_wizzard.ab2@27360>   MOVEQ #0,d2
00036D08 <AmiBlitz3_wizzard.ab2@27361>   LEA ptr_parameterstore,a0
00036D0E <AmiBlitz3_wizzard.ab2@27362>   LEA chartab,a2
00036D10 <AmiBlitz3_wizzard.ab2@27365>   MOVE.b (a5),d0
00036D14 <AmiBlitz3_wizzard.ab2@27366>   TST.b 0(a2,d0)
00036D18 <AmiBlitz3_wizzard.ab2@27367>   BNE 'l10
00036D1A <AmiBlitz3_wizzard.ab2@27368>   ADDQ.l #1,a5
00036D1C <AmiBlitz3_wizzard.ab2@27369>   MOVE.b d0,(a0)+
00036D1E <AmiBlitz3_wizzard.ab2@27370>   ADDQ.l #1,d2
00036D22 <AmiBlitz3_wizzard.ab2@27371> BRA fc2
00036D24 <AmiBlitz3_wizzard.ab2@27374>   CLR.b (a0)+
00036D2A <AmiBlitz3_wizzard.ab2@27375>   JSR findlabel2
00036D2C <AmiBlitz3_wizzard.ab2@27376>   MOVE.l a2,a0
00036D30 <AmiBlitz3_wizzard.ab2@27377>   MOVEM.l (a7)+,a2/d2
00036D32 <AmiBlitz3_wizzard.ab2@27378> RTS
00036D34 <AmiBlitz3_wizzard.ab2@27382>   TST.l d0
00036D38 <AmiBlitz3_wizzard.ab2@27383>   BNE 'l10
00036D3E <AmiBlitz3_wizzard.ab2@27384>     MOVE.l #syntax_,-(a7)
00036D44 <AmiBlitz3_wizzard.ab2@27385> JMP handle_compileerror
00036D4A <AmiBlitz3_wizzard.ab2@27388>   CMP.l #1,d0
00036D4E <AmiBlitz3_wizzard.ab2@27389>   BNE 'l20
00036D54 <AmiBlitz3_wizzard.ab2@27390>     MOVE.l #overflow,-(a7)
00036D5A <AmiBlitz3_wizzard.ab2@27391> JMP handle_compileerror
00036D5C <AmiBlitz3_wizzard.ab2@27394>   ADD.l a2,d0
00036D5E <AmiBlitz3_wizzard.ab2@27395>   MOVE.l d0,-(a7)
00036D64 <AmiBlitz3_wizzard.ab2@27396> JMP handle_compileerror
00036D6A <AmiBlitz3_wizzard.ab2@27400>   JMP _return
00036D70 <AmiBlitz3_wizzard.ab2@27401>   JMP _return
00036D76 <AmiBlitz3_wizzard.ab2@27402>   JMP _return
00036D7C <AmiBlitz3_wizzard.ab2@27403>   JMP _return
00036D82 <AmiBlitz3_wizzard.ab2@27404>   JMP _return
00036D88 <AmiBlitz3_wizzard.ab2@27405>   JMP _return
00036D8E <AmiBlitz3_wizzard.ab2@27406>   JMP _return
00036D94 <AmiBlitz3_wizzard.ab2@27407>   JMP _return
00036D9A <AmiBlitz3_wizzard.ab2@27408>   JMP _return
00036DA0 <AmiBlitz3_wizzard.ab2@27409>   JMP _return
00036DA6 <AmiBlitz3_wizzard.ab2@27410>   JMP Atokejsr
00036DAC <AmiBlitz3_wizzard.ab2@27411>   JMP writeinit
00036DB2 <AmiBlitz3_wizzard.ab2@27412>   JMP macroexecute
00036DB8 <AmiBlitz3_wizzard.ab2@27413>   JMP findnext
00036DBE <AmiBlitz3_wizzard.ab2@27414>   JMP replacelib
00036DC4 <AmiBlitz3_wizzard.ab2@27415>   JMP findconstant2
00036DCA <AmiBlitz3_wizzard.ab2@27416>   JMP findchar                                             ;char in d1
00036DD0 <AmiBlitz3_wizzard.ab2@27417>   JMP stripspaces
00036DD6 <AmiBlitz3_wizzard.ab2@27418>   JMP calc                                                 ;d0 varmode
00036DDC <AmiBlitz3_wizzard.ab2@27419>   JMP error
00036DE2 <AmiBlitz3_wizzard.ab2@27420>   JMP writelong                                            ;d1 value
00036DE8 <AmiBlitz3_wizzard.ab2@27421>   JMP writeword                                            ;d1 value
00036DEE <AmiBlitz3_wizzard.ab2@27422>   JMP writebyte                                            ;d1 value
00036DF4 <AmiBlitz3_wizzard.ab2@27423> JMP exit
00036DF8 <AmiBlitz3_wizzard.ab2@27427>   destpointer:    Ds.l 1                                ;pc org source      ;Ds.w 1
00036DFA <AmiBlitz3_wizzard.ab2@27430>   fast            Dc.w 0
00036DFC <AmiBlitz3_wizzard.ab2@27431>   fpu             Dc.w 0
00036DFE <AmiBlitz3_wizzard.ab2@27432>   newsyntax       Dc.w 0
00036DFF <AmiBlitz3_wizzard.ab2@27434>   optistring      Dc.b 0
00036E00 <AmiBlitz3_wizzard.ab2@27435>   optistring2     Dc.b 0
00036E01 <AmiBlitz3_wizzard.ab2@27436>   optiarray       Dc.b 0
00036E02 <AmiBlitz3_wizzard.ab2@27437>   quickadd        Dc.b 0
00036E04 <AmiBlitz3_wizzard.ab2@27438>   newmode         Dc.w 0
00036E06 <AmiBlitz3_wizzard.ab2@27439>   mode            Dc.w 0
00036E08 <AmiBlitz3_wizzard.ab2@27440>   string1         Dc.w 0
00036E0A <AmiBlitz3_wizzard.ab2@27441>   load_var_size   Dc.w 0
00036E0C <AmiBlitz3_wizzard.ab2@27442>   load_var_reg    Dc.w 0
00036E10 <AmiBlitz3_wizzard.ab2@27443>   load_var_addr   Dc.l 0
00036E12 <AmiBlitz3_wizzard.ab2@27444>   imm_size        Dc.w 0
00036E14 <AmiBlitz3_wizzard.ab2@27445>   imm_reg         Dc.w 0
00036E18 <AmiBlitz3_wizzard.ab2@27446>   imm_addr        Dc.l 0
00036E19 <AmiBlitz3_wizzard.ab2@27447>   iee             Dc.b 0
00036E1A <AmiBlitz3_wizzard.ab2@27448>   _dcb            Dc.b 0
00036E1E <AmiBlitz3_wizzard.ab2@27449>   nohunkoffset    Dc.l 0
00036E22 <AmiBlitz3_wizzard.ab2@27452> teddata:        Dc.l tokens
00036E26 <AmiBlitz3_wizzard.ab2@27453>                 Dc.l 0 ;compilermenu_entries               ; NOT used anymore
00036E2A <AmiBlitz3_wizzard.ab2@27454>                 Dc.l read_xtrafile
00036E2E <AmiBlitz3_wizzard.ab2@27455>                 Dc.l write_xtrafile
00036E32 <AmiBlitz3_wizzard.ab2@27456>                 Dc.l call_menuentry                        ; compile AND RUN ?
00036E36 <AmiBlitz3_wizzard.ab2@27457>                 Dc.l 0
00036E3A <AmiBlitz3_wizzard.ab2@27458>                 Dc.b ":",34,".;"
00036E3E <AmiBlitz3_wizzard.ab2@27459>                 Dc.l "NEW1"
00036E42 <AmiBlitz3_wizzard.ab2@27460>                 Dc.l newtypebase
00036E46 <AmiBlitz3_wizzard.ab2@27461> realconstbase:  Dc.l labelbase
00036E4A <AmiBlitz3_wizzard.ab2@27462> deflib          Dc.l 0
00036E4E <AmiBlitz3_wizzard.ab2@27463> incd            Dc.l 0
00036E52 <AmiBlitz3_wizzard.ab2@27464>                 Dc.l 0
00036E56 <AmiBlitz3_wizzard.ab2@27465>                 Dc.l 0
00036E5A <AmiBlitz3_wizzard.ab2@27466>                 Dc.l 0
00036E5C <AmiBlitz3_wizzard.ab2@27467> _return         RTS
00036E5D <AmiBlitz3_wizzard.ab2@27468>                 Dc.b 0
0003725D <AmiBlitz3_wizzard.ab2@27469> chartab2        Ds.l 256
00037261 <AmiBlitz3_wizzard.ab2@27470> codeend         Dc.l 0
00037265 <AmiBlitz3_wizzard.ab2@27471> hunkoffsetnum   Dc.l 0
00037269 <AmiBlitz3_wizzard.ab2@27472> chipsize        Dc.l 0
0003726D <AmiBlitz3_wizzard.ab2@27473> bsssize         Dc.l 0
00037271 <AmiBlitz3_wizzard.ab2@27474> bssstart        Dc.l -1
00037275 <AmiBlitz3_wizzard.ab2@27475> bssend          Dc.l -1
00037279 <AmiBlitz3_wizzard.ab2@27476> chipstart       Dc.l -1
0003727D <AmiBlitz3_wizzard.ab2@27477> chipend         Dc.l -1
0003727E <AmiBlitz3_wizzard.ab2@27478> bssmode         Dc.b 0
0003727F <AmiBlitz3_wizzard.ab2@27479> chipmode        Dc.b 0
00037280 <AmiBlitz3_wizzard.ab2@27480> newhunk         Dc.b 0
00037284 <AmiBlitz3_wizzard.ab2@27481> bssnum          Dc.l 0
00037288 <AmiBlitz3_wizzard.ab2@27482> chipnum         Dc.l 0
0003728C <AmiBlitz3_wizzard.ab2@27483> lastinstruction Dc.l 0
00037290 <AmiBlitz3_wizzard.ab2@27484> lastinstructionaddr Dc.l 0
000372A4 <AmiBlitz3_wizzard.ab2@27485> hunkbegin       Dc.l $03F3,$00,$02,$00,$01
000372A8 <AmiBlitz3_wizzard.ab2@27486> tstsize1b:      Ds.l 1
000372AC <AmiBlitz3_wizzard.ab2@27487> bsssize2        Dc.l 1
000372B0 <AmiBlitz3_wizzard.ab2@27488>                 Dc.l $03E9
000372B4 <AmiBlitz3_wizzard.ab2@27489> tstsize2b:      Dc.l $100
000372C8 <AmiBlitz3_wizzard.ab2@27490> hunkbegin2      Dc.l $03F3,$00,$03,$00,$02
000372CC <AmiBlitz3_wizzard.ab2@27491> tstsize1c:      Ds.l 1
000372D0 <AmiBlitz3_wizzard.ab2@27492> bsssize3        Dc.l 1
000372D4 <AmiBlitz3_wizzard.ab2@27493> chipsize2       Dc.l 1
000372D8 <AmiBlitz3_wizzard.ab2@27494>                 Dc.l $3e9
000372DC <AmiBlitz3_wizzard.ab2@27495> tstsize2c       Dc.l 0
000372EC <AmiBlitz3_wizzard.ab2@27496> hunkend         Dc.l $3f2,$3eb,0,$3f2
000372FC <AmiBlitz3_wizzard.ab2@27497> hunkend2        Dc.l $3f2,$3ea,0,$3f2
00037303 <AmiBlitz3_wizzard.ab2@27498> strcpy          Dc.b "strcpy",0
0003730A <AmiBlitz3_wizzard.ab2@27499> strcmp          Dc.b "strcmp",0
00037311 <AmiBlitz3_wizzard.ab2@27500> strvar          Dc.b "strvar",0
00037316 <AmiBlitz3_wizzard.ab2@27501> qmul            Dc.b "qmul",0
0003731B <AmiBlitz3_wizzard.ab2@27502> qdiv            Dc.b "qdiv",0
00037322 <AmiBlitz3_wizzard.ab2@27503> _MaxLen         Dc.b "maxlen",0
00037327 <AmiBlitz3_wizzard.ab2@27504> notf            Dc.b "????",0
0003734A <AmiBlitz3_wizzard.ab2@27506> errtext         Dc.b "only reg addressing Mode supported",0
00037374 <AmiBlitz3_wizzard.ab2@27507> fpuerr          Dc.b "Instruction not yet supported by 68K FPU ",0
000373B6 <AmiBlitz3_wizzard.ab2@27508> cmplxerr        Dc.b "Formula too complex for 68K FPU or too much regload register used",0 : Even
000373B8 <AmiBlitz3_wizzard.ab2@27509> peeksize        Dc.w 0
000373BC <AmiBlitz3_wizzard.ab2@27511> mainstart       Dc.l 0
000373BD <AmiBlitz3_wizzard.ab2@27513> infunctioncode  Dc.b 0
000373BF <AmiBlitz3_wizzard.ab2@27514> regnumstore     Dc.w 0
000373EC <AmiBlitz3_wizzard.ab2@27515>                 Dc.b "$VER: AmiBlitz3 \\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
000373F4 <AmiBlitz3_wizzard.ab2@27516> testcode        Dc.b "print i",0
00037458 <AmiBlitz3_wizzard.ab2@27517>                 Ds.b 100
00037466 <AmiBlitz3_wizzard.ab2@27518> devo            Dc.b "developobject",0 : Even
00037478 <AmiBlitz3_wizzard.ab2@27519> autostorename   Dc.b "__autoconstantnum",0
00037482 <AmiBlitz3_wizzard.ab2@27520> _include        Dc.b "__include",0
0003748A <AmiBlitz3_wizzard.ab2@27521> _debug          Dc.b "__debug",0
0003748E <AmiBlitz3_wizzard.ab2@27522> unusedfunc      Dc.l 0
00037490 <AmiBlitz3_wizzard.ab2@27526> MOVE.l a0,d0
000374BA <AmiBlitz3_wizzard.ab2@27527> !basic
000374BE <AmiBlitz3_wizzard.ab2@27528> *olderror.l= PutD0
000374E6 <AmiBlitz3_wizzard.ab2@27529> error$=Peek.s(*olderror)
0003752C <AmiBlitz3_wizzard.ab2@27530> error$=error$+"\\nPossible wrong Code begin here: "
00037540 <AmiBlitz3_wizzard.ab2@27531>         If Peek.l (?beforeparameterfetch)
00037556 <AmiBlitz3_wizzard.ab2@27532>           MaxLen detokenline.s = 65536
00037598 <AmiBlitz3_wizzard.ab2@27533>          !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
000375A8 <AmiBlitz3_wizzard.ab2@27534>          *tn.preprocessor = Peek.l(?include_preprocessor)
000375D2 <AmiBlitz3_wizzard.ab2@27535>           written.l = preproc_DetokenizeLine{*tn,Peek.l (?beforeparameterfetch),&detokenline}
000375FA <AmiBlitz3_wizzard.ab2@27536>           If written>0 Then Poke.b &detokenline+written,0
00037624 <AmiBlitz3_wizzard.ab2@27537>           sourceLineText.s = Peek.s(&detokenline)
0003762A <AmiBlitz3_wizzard.ab2@27538>         Else
00037652 <AmiBlitz3_wizzard.ab2@27539>           sourceLineText = "NULL"
000376A4 <AmiBlitz3_wizzard.ab2@27541> error$=error$+sourceLineText
000376AA <AmiBlitz3_wizzard.ab2@27542> GetD0 &error$
000376C8 <AmiBlitz3_wizzard.ab2@27543> !asm
000376CA <AmiBlitz3_wizzard.ab2@27544> MOVE.l d0,a0
000376CC <AmiBlitz3_wizzard.ab2@27545> RTS
000376CE <AmiBlitz3_wizzard.ab2@27549>   MOVE.l a0,-(a7)
000376D0 <AmiBlitz3_wizzard.ab2@27550>   MOVE.l a0,d0
000376D2 <AmiBlitz3_wizzard.ab2@27551>   MOVE.l a5,a0                                             ;macro title
000376FC <AmiBlitz3_wizzard.ab2@27552>   !basic
00037700 <AmiBlitz3_wizzard.ab2@27553>   i = PutD0
00037702 <AmiBlitz3_wizzard.ab2@27554>   MOVEQ #20,d0
00037704 <AmiBlitz3_wizzard.ab2@27557>     MOVE.b -(a0),d1
00037708 <AmiBlitz3_wizzard.ab2@27558>     BEQ 'l1
0003770C <AmiBlitz3_wizzard.ab2@27559>     CMP.b #":",d1
00037710 <AmiBlitz3_wizzard.ab2@27560>     BEQ 'l1
00037712 <AmiBlitz3_wizzard.ab2@27561>     SUBQ.l #1,d0
00037716 <AmiBlitz3_wizzard.ab2@27562>     BNE 'l2
00037718 <AmiBlitz3_wizzard.ab2@27565>   ADDQ #1,a0
0003771A <AmiBlitz3_wizzard.ab2@27566>   MOVE.l a0,d0
0003771E <AmiBlitz3_wizzard.ab2@27567>   i2.l = PutD0
0003773A <AmiBlitz3_wizzard.ab2@27568>   If Peek.w (?ininclude)>0
00037794 <AmiBlitz3_wizzard.ab2@27569>     Poke.s (?includetemp2),incdim(Peek.w(?ininclude)-1)
000377A4 <AmiBlitz3_wizzard.ab2@27570>     errorline.l = Peek.l(?includeline);-1
000377CC <AmiBlitz3_wizzard.ab2@27571>     Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
000377F6 <AmiBlitz3_wizzard.ab2@27572>     errorfile.s = Peek.s(?includetemp2)
000377FC <AmiBlitz3_wizzard.ab2@27573>   Else
00037834 <AmiBlitz3_wizzard.ab2@27574>     Poke.s (?includetemp2),Peek.s(?ptr_parameterstore)
0003784A <AmiBlitz3_wizzard.ab2@27575>     errorline.l = Peek.l(?compilelinecounter) + 1
0003787E <AmiBlitz3_wizzard.ab2@27576>     errorfile.s = cli_sourcefile
00037888 <AmiBlitz3_wizzard.ab2@27579>   If i
0003792C <AmiBlitz3_wizzard.ab2@27580>     errortext.s = !TRANS{Replace$(Peek.s(i),"\\0a","\n")}
00037932 <AmiBlitz3_wizzard.ab2@27581>   Else
0003795A <AmiBlitz3_wizzard.ab2@27582>     errortext.s = "???"
00037ACC <AmiBlitz3_wizzard.ab2@27585>   NPrint "\\1b[1m",!TRANS{"Compiler Error"}," <",errorfile,"@",errorline,">\\1b[0m ",errortext
00037AEA <AmiBlitz3_wizzard.ab2@27589>   !asm
00037AEC <AmiBlitz3_wizzard.ab2@27590>   MOVE.l (a7)+,a0
00037AEE <AmiBlitz3_wizzard.ab2@27591> RTS
00037AF0 <AmiBlitz3_wizzard.ab2@27595>   MOVE.l a0,-(a7)
00037AF2 <AmiBlitz3_wizzard.ab2@27596>   MOVE.l a0,d0
00037AF4 <AmiBlitz3_wizzard.ab2@27597>   MOVE.l a5,a0                                             ;macro title
00037B1E <AmiBlitz3_wizzard.ab2@27598>   !basic
00037B22 <AmiBlitz3_wizzard.ab2@27599>   i = PutD0
00037B24 <AmiBlitz3_wizzard.ab2@27600>   MOVEQ #20,d0
00037B26 <AmiBlitz3_wizzard.ab2@27603>     MOVE.b -(a0),d1
00037B2A <AmiBlitz3_wizzard.ab2@27604>     BEQ 'l1
00037B2E <AmiBlitz3_wizzard.ab2@27605>     CMP.b #":",d1
00037B32 <AmiBlitz3_wizzard.ab2@27606>     BEQ 'l1
00037B34 <AmiBlitz3_wizzard.ab2@27607>     SUBQ.l #1,d0
00037B38 <AmiBlitz3_wizzard.ab2@27608>     BNE 'l2
00037B3A <AmiBlitz3_wizzard.ab2@27611>   ADDQ #1,a0
00037B3C <AmiBlitz3_wizzard.ab2@27612>   MOVE.l a0,d0
00037B40 <AmiBlitz3_wizzard.ab2@27613>   i2.l = PutD0
00037BC4 <AmiBlitz3_wizzard.ab2@27614>   fid.l = file_Open{dos_AddPart{my_systemdir$,"ab_compileerror.txt"},#file_forcewrite}
00037BD8 <AmiBlitz3_wizzard.ab2@27615>   If fid <> -1
00037BF4 <AmiBlitz3_wizzard.ab2@27616>     If Peek.w (?ininclude)>0
00037C4E <AmiBlitz3_wizzard.ab2@27617>       Poke$(?includetemp2),incdim(Peek.w(?ininclude)-1)
00037C54 <AmiBlitz3_wizzard.ab2@27618>     Else
00037C80 <AmiBlitz3_wizzard.ab2@27619>       Poke$(?includetemp2),""
00037CAA <AmiBlitz3_wizzard.ab2@27621>     a$ = Peek$(?includetemp2)
00037D1C <AmiBlitz3_wizzard.ab2@27622>     x$ = Replace$(Peek$(i),"\\0a","\n")
00037D4E <AmiBlitz3_wizzard.ab2@27623>     file_WriteLine{fid,x$}
00037D98 <AmiBlitz3_wizzard.ab2@27624>     file_WriteLine{fid,Str$(Peek.l(?compilelinecounter) + 1)}
00037DC4 <AmiBlitz3_wizzard.ab2@27625>     If a$
00037DF6 <AmiBlitz3_wizzard.ab2@27626>       file_WriteLine{fid,a$}
00037E40 <AmiBlitz3_wizzard.ab2@27627>       file_WriteLine{fid,Str$(Peek.l(?includeline)-1)}
00037E68 <AmiBlitz3_wizzard.ab2@27628>       Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
00037E6E <AmiBlitz3_wizzard.ab2@27629>     Else
00037E94 <AmiBlitz3_wizzard.ab2@27630>       file_WriteLine{fid,"none"}
00037EC4 <AmiBlitz3_wizzard.ab2@27632>     file_WriteLine{fid,Peek$(i2)}
00037F1A <AmiBlitz3_wizzard.ab2@27633>     file_WriteLine{fid,Str$(Peek.l(?globallinecount))+" line(s) compiled"}
00037F64 <AmiBlitz3_wizzard.ab2@27634>     file_WriteLine{fid,Hex$(Peek.w(?globalvarpointer))+" global var base"}
00037F6E <AmiBlitz3_wizzard.ab2@27635>     file_Close{fid}
00037F8C <AmiBlitz3_wizzard.ab2@27637>   !asm
00037F8E <AmiBlitz3_wizzard.ab2@27638>   MOVE.l (a7)+,a0
00037F90 <AmiBlitz3_wizzard.ab2@27639> RTS
00037FBA <AmiBlitz3_wizzard.ab2@27643>   !basic
00037FBE <AmiBlitz3_wizzard.ab2@27644>   progress.l     = PutD0
00037FD0 <AmiBlitz3_wizzard.ab2@27645>   total.l        = Peek.w(?progressbar_width)
00037FEE <AmiBlitz3_wizzard.ab2@27646>   calcpro        = (progress * 100) / total +1
00038000 <AmiBlitz3_wizzard.ab2@27647>   pass.l         = Peek.w(?pass)
00038012 <AmiBlitz3_wizzard.ab2@27648>   typ.l          = Peek.w(?compiler_job)
00038030 <AmiBlitz3_wizzard.ab2@27651> If (pass><pass_old OR typ><typ_old)
00038036 <AmiBlitz3_wizzard.ab2@27652>     pass_old = pass
0003803C <AmiBlitz3_wizzard.ab2@27653>     typ_old  = typ
00038042 <AmiBlitz3_wizzard.ab2@27654>     update_comstatus_gui = True
00038054 <AmiBlitz3_wizzard.ab2@27655>     If typ=0
00038134 <AmiBlitz3_wizzard.ab2@27656>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Compiling Sources..."}
0003813C <AmiBlitz3_wizzard.ab2@27657>       calcpro = 0  ; set gauge to 0
0003814E <AmiBlitz3_wizzard.ab2@27659>     If typ=1
0003822E <AmiBlitz3_wizzard.ab2@27660>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Building Executable..."}
00038236 <AmiBlitz3_wizzard.ab2@27661>       calcpro = 0  ; set gauge to 0
0003828C <AmiBlitz3_wizzard.ab2@27663>     If cli_verbose>=2 Then NPrint comstatusstr
0003829A <AmiBlitz3_wizzard.ab2@27666>   If (calcpro >< calcpro_old)
000382EE <AmiBlitz3_wizzard.ab2@27667>     If cli_verbose>=3 Then NPrint calcpro,"% compiled..."
000382F4 <AmiBlitz3_wizzard.ab2@27668>     calcpro_old = calcpro
000382FA <AmiBlitz3_wizzard.ab2@27669>     update_comstatus_gui = True
00038314 <AmiBlitz3_wizzard.ab2@27672>   If update_comstatus_gui = True                                     ; check if a update of the gui nessecary
00038332 <AmiBlitz3_wizzard.ab2@27673>     !asm
00038364 <AmiBlitz3_wizzard.ab2@27674> 
0003838E <AmiBlitz3_wizzard.ab2@27675>     !basic
00038394 <AmiBlitz3_wizzard.ab2@27676>     update_comstatus_gui  = False ; because we update the gui
000383B2 <AmiBlitz3_wizzard.ab2@27678>   !asm
000383B4 <AmiBlitz3_wizzard.ab2@27679> RTS
000383BA <AmiBlitz3_wizzard.ab2@27684>   MOVE.w maxobject_pos,D5                                  ;max objects 1. visible
000383C0 <AmiBlitz3_wizzard.ab2@27685>   LEA maxobjects_value,A3                                  ;current value
000383C6 <AmiBlitz3_wizzard.ab2@27686>   MOVEA.l libpointer,A2
000383CA <AmiBlitz3_wizzard.ab2@27689>   CMPA.w #$0,A2
000383CE <AmiBlitz3_wizzard.ab2@27690>   BEQ.w menu4c__igotb
000383D0 <AmiBlitz3_wizzard.ab2@27691>   MOVEA.l A2,A1
000383D4 <AmiBlitz3_wizzard.ab2@27692>   ADDA.l $12(A1),A1
000383D8 <AmiBlitz3_wizzard.ab2@27693>   TST.w -$2(A1)
000383DC <AmiBlitz3_wizzard.ab2@27694>   BEQ.w JL_0_FFF6b
000383DE <AmiBlitz3_wizzard.ab2@27695>   SUBQ.w #1,D5
000383E2 <AmiBlitz3_wizzard.ab2@27696>   BMI.w JL_0_FFFCb
000383E4 <AmiBlitz3_wizzard.ab2@27699>   MOVEA.l (A2),A2
000383E8 <AmiBlitz3_wizzard.ab2@27700> BRA.w JL_0_FFDAb
000383EC <AmiBlitz3_wizzard.ab2@27703>   MOVE.w (A3),-$4(A1)
000383EE <AmiBlitz3_wizzard.ab2@27706> RTS
000383F4 <AmiBlitz3_wizzard.ab2@27710>   MOVE.w debugnest,d0
000383FA <AmiBlitz3_wizzard.ab2@27711>   LEA storedebugmode, a0
00038402 <AmiBlitz3_wizzard.ab2@27712>   MOVE.b 0(a0,d0.w),debugmode
00038408 <AmiBlitz3_wizzard.ab2@27713>   TST.w debugnest
0003840C <AmiBlitz3_wizzard.ab2@27714>   BEQ JUMP_unpairrunerrs
00038412 <AmiBlitz3_wizzard.ab2@27715>   SUBQ.w #1,debugnest
00038414 <AmiBlitz3_wizzard.ab2@27716> RTS
0003841A <AmiBlitz3_wizzard.ab2@27719> JMP runerrsoverflow
00038420 <AmiBlitz3_wizzard.ab2@27722> JMP unpairrunerrs
00038428 <AmiBlitz3_wizzard.ab2@27726>   BCHG #$7,use_debugger
00038430 <AmiBlitz3_wizzard.ab2@27728>   BTST #$7,use_debugger
00038434 <AmiBlitz3_wizzard.ab2@27729>   BNE 'debugon
0003843A <AmiBlitz3_wizzard.ab2@27730>   CLR.w debugmode
0003843E <AmiBlitz3_wizzard.ab2@27731> BRA.b 'debugoff
00038444 <AmiBlitz3_wizzard.ab2@27734>   SNE debugmode
00038446 <AmiBlitz3_wizzard.ab2@27737>   MOVE.l a0,-(a7)
0003847E <AmiBlitz3_wizzard.ab2@27740>   !ComData_SetB{comByte_DebugMode,debugmode}
00038480 <AmiBlitz3_wizzard.ab2@27745>   MOVE.l (a7)+,a0
00038482 <AmiBlitz3_wizzard.ab2@27746> RTS
0003848A <AmiBlitz3_wizzard.ab2@27751>   BTST #$7,use_debugger
0003848E <AmiBlitz3_wizzard.ab2@27752>   BNE 'debugon
00038494 <AmiBlitz3_wizzard.ab2@27753>   CLR.w debugmode
00038498 <AmiBlitz3_wizzard.ab2@27754> BRA.b 'debugoff
0003849E <AmiBlitz3_wizzard.ab2@27757>   SNE debugmode
000384A0 <AmiBlitz3_wizzard.ab2@27760> RTS
000384A6 <AmiBlitz3_wizzard.ab2@27764>   ADDQ.w #1,debugnest
000384AC <AmiBlitz3_wizzard.ab2@27765>   MOVE.w debugnest,d0
000384B0 <AmiBlitz3_wizzard.ab2@27766>   CMP.w #18,d0
000384B4 <AmiBlitz3_wizzard.ab2@27767>    BGE JUMP_runerrsoverflow
000384BA <AmiBlitz3_wizzard.ab2@27768>   LEA storedebugmode, a0
000384C2 <AmiBlitz3_wizzard.ab2@27769>   MOVE.b debugmode,0( a0,d0.w)
000384C8 <AmiBlitz3_wizzard.ab2@27772>   SF debugmode
000384CA <AmiBlitz3_wizzard.ab2@27773> RTS
0003854A <AmiBlitz3_wizzard.ab2@27776> usedpath:  Ds.l 32
0003854E <AmiBlitz3_wizzard.ab2@27780>   BEQ.w JUMP_syntaxerr
00038554 <AmiBlitz3_wizzard.ab2@27781>   LEA lastpath,A0
00038558 <AmiBlitz3_wizzard.ab2@27782>   MOVEM.l a0-a1/d0,-(a7)
0003855E <AmiBlitz3_wizzard.ab2@27783>   LEA lastpath2,a1
00038560 <AmiBlitz3_wizzard.ab2@27786>     MOVE.b (a0)+,(a1)+
00038564 <AmiBlitz3_wizzard.ab2@27787>   BNE 'l2
00038568 <AmiBlitz3_wizzard.ab2@27788>   MOVEM.l (a7)+,a0-a1/d0
0003856C <AmiBlitz3_wizzard.ab2@27789>   LEA usedpath(PC),A0
00038570 <AmiBlitz3_wizzard.ab2@27790>   MOVEM.l a0-a1/d0,-(a7)
00038576 <AmiBlitz3_wizzard.ab2@27791>   LEA lastpath,a1
00038578 <AmiBlitz3_wizzard.ab2@27794>     MOVE.b (a0)+,(a1)+
0003857C <AmiBlitz3_wizzard.ab2@27795>   BNE 'l1
00038580 <AmiBlitz3_wizzard.ab2@27796>   MOVEM.l (a7)+,a0-a1/d0
00038582 <AmiBlitz3_wizzard.ab2@27799>   TST.w D0
00038586 <AmiBlitz3_wizzard.ab2@27800>    BMI.w JUMP_syntaxerr
00038588 <AmiBlitz3_wizzard.ab2@27801>   MOVE.b D0,(A0)+
0003858C <AmiBlitz3_wizzard.ab2@27802>   BSR.w JUMP_get1bytemain
00038590 <AmiBlitz3_wizzard.ab2@27803>    BNE.w JL_0_4AA8
00038594 <AmiBlitz3_wizzard.ab2@27804>   MOVE.b #$2,(A0)
00038596 <AmiBlitz3_wizzard.ab2@27805> RTS
0003859A <AmiBlitz3_wizzard.ab2@27809>   BEQ.w JUMP_syntaxerr
000385A0 <AmiBlitz3_wizzard.ab2@27810>   LEA path2,A0
000385A2 <AmiBlitz3_wizzard.ab2@27820>   TST.w D0
000385A6 <AmiBlitz3_wizzard.ab2@27821>    BMI.w JUMP_syntaxerr
000385A8 <AmiBlitz3_wizzard.ab2@27822>   MOVE.b D0,(A0)+
000385AC <AmiBlitz3_wizzard.ab2@27823>   BSR.w JUMP_get1bytemain
000385B0 <AmiBlitz3_wizzard.ab2@27824>    BNE.w JL_0_4AA8b
000385B4 <AmiBlitz3_wizzard.ab2@27825>   MOVE.b #$2,(A0)
000385B6 <AmiBlitz3_wizzard.ab2@27826> RTS
000385BC <AmiBlitz3_wizzard.ab2@27835> JMP errormsg_reg
000385C6 <AmiBlitz3_wizzard.ab2@27839>   MOVE.l #$f22d6780,fpucodeglobal
000385D0 <AmiBlitz3_wizzard.ab2@27840>   MOVE.l #$f22c6780,fpucodelocal
000385D6 <AmiBlitz3_wizzard.ab2@27841>   LEA regtable,a0
000385E0 <AmiBlitz3_wizzard.ab2@27842>   MOVE.l #7,maxregs
000385E2 <AmiBlitz3_wizzard.ab2@27845>   MOVE.l (a0),d0
000385E6 <AmiBlitz3_wizzard.ab2@27846>   BEQ 'e1
000385E8 <AmiBlitz3_wizzard.ab2@27847>   CLR.l (a0)
000385EC <AmiBlitz3_wizzard.ab2@27848>   MOVE.w 4(a0),d0
000385F6 <AmiBlitz3_wizzard.ab2@27849>   MOVE.l fpucodeglobal,fpucode
000385FA <AmiBlitz3_wizzard.ab2@27850>   TST.w 6(a0)
000385FE <AmiBlitz3_wizzard.ab2@27851>   BEQ 'glob
00038608 <AmiBlitz3_wizzard.ab2@27852>   MOVE.l fpucodelocal,fpucode
0003860E <AmiBlitz3_wizzard.ab2@27855>   MOVE.l fpucode,d1
00038614 <AmiBlitz3_wizzard.ab2@27856>   JSR writelong
0003861E <AmiBlitz3_wizzard.ab2@27857>   SUB.l #$80,fpucodelocal
00038628 <AmiBlitz3_wizzard.ab2@27858>   SUB.l #$80,fpucodeglobal
0003862A <AmiBlitz3_wizzard.ab2@27859>   MOVE.w d0,d1
00038630 <AmiBlitz3_wizzard.ab2@27860>   JSR writeword
00038632 <AmiBlitz3_wizzard.ab2@27861>   ADDQ #8,a0
00038636 <AmiBlitz3_wizzard.ab2@27862> BRA 'again
00038638 <AmiBlitz3_wizzard.ab2@27865> RTS
0003863E <AmiBlitz3_wizzard.ab2@27872> JMP notypeerr
00038644 <AmiBlitz3_wizzard.ab2@27875> JMP illtypeerr
0003864E <AmiBlitz3_wizzard.ab2@27878>   MOVE.l #$f22d4780,fpucodeglobal
00038658 <AmiBlitz3_wizzard.ab2@27879>   MOVE.l #$f22c4780,fpucodelocal
0003865E <AmiBlitz3_wizzard.ab2@27880>   LEA regtable,a0
00038660 <AmiBlitz3_wizzard.ab2@27881>   TST.l (a0)
00038664 <AmiBlitz3_wizzard.ab2@27882>    BNE JUMP_errormsg_reg
00038666 <AmiBlitz3_wizzard.ab2@27883>   MOVE.l d7,-(a7)
00038668 <AmiBlitz3_wizzard.ab2@27884>   SUBQ.l #1,a5
0003866E <AmiBlitz3_wizzard.ab2@27887>   JSR getparameter2
00038672 <AmiBlitz3_wizzard.ab2@27888>   BEQ.w 'nopar
00038678 <AmiBlitz3_wizzard.ab2@27889>   MOVE.w d0,lastchar
0003867E <AmiBlitz3_wizzard.ab2@27890>   JSR findvariable
00038682 <AmiBlitz3_wizzard.ab2@27891>   BNE 'islocal
0003868C <AmiBlitz3_wizzard.ab2@27892>   MOVE.l fpucodeglobal,fpucode
00038696 <AmiBlitz3_wizzard.ab2@27893>   MOVE.l #3,maxregs
00038698 <AmiBlitz3_wizzard.ab2@27894>   MOVEQ #0,d7
000386A0 <AmiBlitz3_wizzard.ab2@27897>   CMP.l #newtype_float,$a(a2)                              ;is float type
000386A4 <AmiBlitz3_wizzard.ab2@27898>    BEQ 'doit
000386AC <AmiBlitz3_wizzard.ab2@27899>   CMP.l #newtype_double,$a(a2)
000386B0 <AmiBlitz3_wizzard.ab2@27900>    BNE JUMP_illtypeerr
000386B6 <AmiBlitz3_wizzard.ab2@27903>   LEA regtable,a0
000386B8 <AmiBlitz3_wizzard.ab2@27904>   MOVEQ #0,d0
000386BA <AmiBlitz3_wizzard.ab2@27907>   TST.l (a0)
000386BE <AmiBlitz3_wizzard.ab2@27908>    BEQ 'store
000386C0 <AmiBlitz3_wizzard.ab2@27909>   ADDQ.l #4,d0
000386C2 <AmiBlitz3_wizzard.ab2@27910>   ADDQ.l #8,a0
000386C8 <AmiBlitz3_wizzard.ab2@27911>   CMP.l #16,d0
000386CC <AmiBlitz3_wizzard.ab2@27912>    BCS 'loop
000386D6 <AmiBlitz3_wizzard.ab2@27913>   MOVE.l #2,maxregs
000386DC <AmiBlitz3_wizzard.ab2@27914>   CMP.l #20,d0
000386E0 <AmiBlitz3_wizzard.ab2@27915>    BCS 'loop
000386EA <AmiBlitz3_wizzard.ab2@27916>   MOVE.l #1,maxregs
000386F0 <AmiBlitz3_wizzard.ab2@27917>   CMP.l #24,d0
000386F4 <AmiBlitz3_wizzard.ab2@27918>    BCS 'loop
000386FA <AmiBlitz3_wizzard.ab2@27919> JMP toovarerr
00038700 <AmiBlitz3_wizzard.ab2@27922>   TST.b fpu
00038704 <AmiBlitz3_wizzard.ab2@27923>    BEQ 'nofpu
00038706 <AmiBlitz3_wizzard.ab2@27924>   MOVE.l a2,(a0)
0003870C <AmiBlitz3_wizzard.ab2@27925>   MOVE.w 4(a2),4(a0)
00038710 <AmiBlitz3_wizzard.ab2@27926>   MOVE.w d7,6(a0)
00038716 <AmiBlitz3_wizzard.ab2@27927>   MOVE.l fpucode,d1
00038720 <AmiBlitz3_wizzard.ab2@27928>   SUB.l #$80,fpucodeglobal
0003872A <AmiBlitz3_wizzard.ab2@27929>   SUB.l #$80,fpucodelocal
00038730 <AmiBlitz3_wizzard.ab2@27930>   JSR writelong
00038734 <AmiBlitz3_wizzard.ab2@27931>   MOVE.w 4(a2),d1
0003873A <AmiBlitz3_wizzard.ab2@27932>   JSR writeword
00038740 <AmiBlitz3_wizzard.ab2@27935>   MOVE.w lastchar,d0
00038744 <AmiBlitz3_wizzard.ab2@27936>   CMP.w #":",d0
00038748 <AmiBlitz3_wizzard.ab2@27937>    BEQ 'nopar
0003874A <AmiBlitz3_wizzard.ab2@27938>   TST.w d0
0003874E <AmiBlitz3_wizzard.ab2@27939>    BEQ 'nopar
00038752 <AmiBlitz3_wizzard.ab2@27940>   CMP.w #",",d0
00038756 <AmiBlitz3_wizzard.ab2@27941>   BNE JUMP_syntaxerr
0003875A <AmiBlitz3_wizzard.ab2@27942> BRA 'l2
0003875C <AmiBlitz3_wizzard.ab2@27945>    MOVE.l (a7)+,d7
0003875E <AmiBlitz3_wizzard.ab2@27946> RTS
00038760 <AmiBlitz3_wizzard.ab2@27949>   MOVEQ #1,d7
00038768 <AmiBlitz3_wizzard.ab2@27950>   MOVE.b #1,newvariable
0003876E <AmiBlitz3_wizzard.ab2@27951>   LEA firstlocal,a2
00038774 <AmiBlitz3_wizzard.ab2@27952>   JSR findvariable
0003877A <AmiBlitz3_wizzard.ab2@27953>   CLR.b newvariable
00038780 <AmiBlitz3_wizzard.ab2@27954>   CMP.l #-1,d0
00038784 <AmiBlitz3_wizzard.ab2@27955>   BEQ.w JUMP_notypeerr2
0003878E <AmiBlitz3_wizzard.ab2@27956>   MOVE.l fpucodelocal,fpucode
00038792 <AmiBlitz3_wizzard.ab2@27957> BRA 'go
00038796 <AmiBlitz3_wizzard.ab2@27960>   CMP.b #".",d0
0003879A <AmiBlitz3_wizzard.ab2@27961>    BNE 'l1
0003879E <AmiBlitz3_wizzard.ab2@27962>   BSR JUMP_get1bytemain
000387A2 <AmiBlitz3_wizzard.ab2@27963>   BSR JUMP_get1bytemain
000387A6 <AmiBlitz3_wizzard.ab2@27966>   ORI .b #$20,d0
000387AA <AmiBlitz3_wizzard.ab2@27967>   CMP.b #"d",d0
000387AE <AmiBlitz3_wizzard.ab2@27968>    BNE JUMP_illeaerr
000387B2 <AmiBlitz3_wizzard.ab2@27969>   BSR JUMP_get1bytemain
000387B6 <AmiBlitz3_wizzard.ab2@27970>   SUB.b #$30,d0
000387BA <AmiBlitz3_wizzard.ab2@27971>   CMP.b #$7,d0
000387BE <AmiBlitz3_wizzard.ab2@27972>    BGT JUMP_syntaxerr
000387C2 <AmiBlitz3_wizzard.ab2@27973>   MOVE.w #$49c0,d1
000387C4 <AmiBlitz3_wizzard.ab2@27974>   ADD.b d0,d1
000387CA <AmiBlitz3_wizzard.ab2@27975>   JSR writeword
000387CE <AmiBlitz3_wizzard.ab2@27976>   BSR JUMP_get1bytemain
000387D0 <AmiBlitz3_wizzard.ab2@27977> RTS
000387D6 <AmiBlitz3_wizzard.ab2@27981>   LEA lastpath,a0
000387DA <AmiBlitz3_wizzard.ab2@27982>   LEA usedpath(PC),A1
000387DC <AmiBlitz3_wizzard.ab2@27985>     MOVE.b (a0)+,(a1)+
000387E0 <AmiBlitz3_wizzard.ab2@27986>   BNE 'l1
000387E6 <AmiBlitz3_wizzard.ab2@27988>   LEA lastpath2,a0
000387EC <AmiBlitz3_wizzard.ab2@27989>   LEA lastpath,A1
000387EE <AmiBlitz3_wizzard.ab2@27992>     MOVE.b (a0)+,(a1)+
000387F2 <AmiBlitz3_wizzard.ab2@27993>   BNE 'l2
000387F4 <AmiBlitz3_wizzard.ab2@27994> RTS
000387FA <AmiBlitz3_wizzard.ab2@27998>   TST.b objectcount
000387FE <AmiBlitz3_wizzard.ab2@27999>   BEQ 'l2a
00038804 <AmiBlitz3_wizzard.ab2@28000> JMP macnesterr
0003880A <AmiBlitz3_wizzard.ab2@28003>   LEA devo,a0
00038810 <AmiBlitz3_wizzard.ab2@28004>   ADDQ.b #1,objectcount
00038814 <AmiBlitz3_wizzard.ab2@28005>   MOVEM.l a1/d2,-(a7)
0003881A <AmiBlitz3_wizzard.ab2@28006>   LEA ptr_parameterstore,a1
0003881C <AmiBlitz3_wizzard.ab2@28009>     MOVE.b (a0)+,(a1)+
00038820 <AmiBlitz3_wizzard.ab2@28010>   BNE 'l1
00038822 <AmiBlitz3_wizzard.ab2@28012>   MOVEQ #13,d2
00038828 <AmiBlitz3_wizzard.ab2@28013>   JSR findlabel2
0003882C <AmiBlitz3_wizzard.ab2@28014>   BNE 'd
00038830 <AmiBlitz3_wizzard.ab2@28015>   TST.l 8(a2)
00038834 <AmiBlitz3_wizzard.ab2@28016>   BEQ 'd
0003883A <AmiBlitz3_wizzard.ab2@28017>   SUBQ.b #1,objectcount
0003883E <AmiBlitz3_wizzard.ab2@28018>   MOVEM.l (a7)+,a1/d2
00038844 <AmiBlitz3_wizzard.ab2@28019>   JSR skiprest
0003884C <AmiBlitz3_wizzard.ab2@28020>   MOVE.b #1,developobject
0003884E <AmiBlitz3_wizzard.ab2@28021> RTS
00038852 <AmiBlitz3_wizzard.ab2@28024>   MOVEM.l (a7)+,a1/d2
0003885A <AmiBlitz3_wizzard.ab2@28025>   MOVE.b #1,resdisable
00038860 <AmiBlitz3_wizzard.ab2@28028>   CLR.b developobject
00038866 <AmiBlitz3_wizzard.ab2@28029> JMP do_Macro
0003886C <AmiBlitz3_wizzard.ab2@28033> JMP illeaerr
00038872 <AmiBlitz3_wizzard.ab2@28037>   CLR.b typecheck
00038878 <AmiBlitz3_wizzard.ab2@28038>   CLR.b declare
0003887E <AmiBlitz3_wizzard.ab2@28039>   CLR.b declare2
00038882 <AmiBlitz3_wizzard.ab2@28040>   SUB.b #$30,d0
00038886 <AmiBlitz3_wizzard.ab2@28041>   BTST #0,d0
0003888A <AmiBlitz3_wizzard.ab2@28042>   BEQ 'l1
00038892 <AmiBlitz3_wizzard.ab2@28043>   MOVE.b #1,declare
00038896 <AmiBlitz3_wizzard.ab2@28046>   BTST #1,d0
0003889A <AmiBlitz3_wizzard.ab2@28047>   BEQ 'l2
000388A2 <AmiBlitz3_wizzard.ab2@28048>   MOVE.b #1,declare2
000388A6 <AmiBlitz3_wizzard.ab2@28051>   BTST #2,d0
000388AA <AmiBlitz3_wizzard.ab2@28052>   BEQ 'l3
000388B2 <AmiBlitz3_wizzard.ab2@28053>   MOVE.b #1,typecheck
000388B6 <AmiBlitz3_wizzard.ab2@28055>   BSR.w JUMP_get1bytemain
000388B8 <AmiBlitz3_wizzard.ab2@28056> RTS
000388BE <AmiBlitz3_wizzard.ab2@28059> JMP get1bytemain
000388C0 <AmiBlitz3_wizzard.ab2@28064>   MOVE.l d2,-(a7)                                          ; D2 -> stack
000388C2 <AmiBlitz3_wizzard.ab2@28065>   ADDQ #1,a5
000388C4 <AmiBlitz3_wizzard.ab2@28066>   MOVE.l a5,-(a7)
000388EE <AmiBlitz3_wizzard.ab2@28067>   !basic
000388F4 <AmiBlitz3_wizzard.ab2@28068>   MOVE.l (a7)+,d0 : _myD0.l = PutD0
000388FE <AmiBlitz3_wizzard.ab2@28069>   If _myD0
0003893E <AmiBlitz3_wizzard.ab2@28070>     newconst$ = UCase$(Peek.s(_myD0))
00038944 <AmiBlitz3_wizzard.ab2@28071>   Else
00038972 <AmiBlitz3_wizzard.ab2@28072>     error{"INTERNAL: invalid pointer in check_newconstants!"}
0003899A <AmiBlitz3_wizzard.ab2@28073>     nwconst$="xxx"
000389C2 <AmiBlitz3_wizzard.ab2@28075>   condata$ =""
000389D2 <AmiBlitz3_wizzard.ab2@28076>   Poke.b ?skip_bytes,0
00038A2E <AmiBlitz3_wizzard.ab2@28077>   If Left$(newconst$,2) = "__"
00038A88 <AmiBlitz3_wizzard.ab2@28078>     Select Mid$(newconst$,3,4)
00038AAC <AmiBlitz3_wizzard.ab2@28080>      Case "DATE"
00038B06 <AmiBlitz3_wizzard.ab2@28081>       Select Mid$(newconst$,3,6)
00038B44 <AmiBlitz3_wizzard.ab2@28082>       Case "DATE__" : DateFormat 1 : Poke.b ?skip_bytes,8
00038B88 <AmiBlitz3_wizzard.ab2@28083>       Case "DATE_G" : DateFormat 0 : Poke.b ?skip_bytes,12
00038B96 <AmiBlitz3_wizzard.ab2@28084>       End Select
00038BA4 <AmiBlitz3_wizzard.ab2@28085>       i.l=SystemDate
00038BCA <AmiBlitz3_wizzard.ab2@28086>       condata$ = Date$ (i)
00038C48 <AmiBlitz3_wizzard.ab2@28087>       condata$ = Replace$(condata$,"/",".")
00038C72 <AmiBlitz3_wizzard.ab2@28089>      Case "VER_"
00038C82 <AmiBlitz3_wizzard.ab2@28092>       actual_version.l = Peek.l(?versioninformation)
00038C92 <AmiBlitz3_wizzard.ab2@28093>       actual_build.l   = Peek.l(?number_of_builds)
00038CB6 <AmiBlitz3_wizzard.ab2@28095>       Format ""
00038D10 <AmiBlitz3_wizzard.ab2@28096>       Select Mid$(newconst$,3,9)
00038D34 <AmiBlitz3_wizzard.ab2@28098>        Case "VER_MAJOR"
00038D70 <AmiBlitz3_wizzard.ab2@28099>         condata$ = Str$(actual_version LSR 24)
00038D9A <AmiBlitz3_wizzard.ab2@28101>        Case "VER_MINOR"
00038DDE <AmiBlitz3_wizzard.ab2@28102>         condata$ = Str$((actual_version LSL 8) LSR 24)
00038E08 <AmiBlitz3_wizzard.ab2@28104>        Case "VER_PATCH"
00038E4C <AmiBlitz3_wizzard.ab2@28105>         condata$ = Str$((actual_version LSL 16) LSR 24 )
00038E76 <AmiBlitz3_wizzard.ab2@28107>        Case "VER_BUILD"
00038E9A <AmiBlitz3_wizzard.ab2@28108>         Format ""
00038ECE <AmiBlitz3_wizzard.ab2@28109>         condata$ = Str$(actual_build)
00038ED4 <AmiBlitz3_wizzard.ab2@28111>        Default
00038EFC <AmiBlitz3_wizzard.ab2@28112>         condata$ = "{unknown compiler constant}"
00038F0A <AmiBlitz3_wizzard.ab2@28114>       End Select
00038F2E <AmiBlitz3_wizzard.ab2@28115>       Format ""
00038F3E <AmiBlitz3_wizzard.ab2@28116>       Poke.b ?skip_bytes,11
00038F68 <AmiBlitz3_wizzard.ab2@28118>      Case "THIS"
00038FC2 <AmiBlitz3_wizzard.ab2@28119>       Select Mid$(newconst$,3,9)
00038FE6 <AmiBlitz3_wizzard.ab2@28121>        Case "THIS_FUNC"
00038FF6 <AmiBlitz3_wizzard.ab2@28122>         Poke.b ?skip_bytes,15
00039016 <AmiBlitz3_wizzard.ab2@28123>         If Peek.l(?currentfunction)<>0
00039062 <AmiBlitz3_wizzard.ab2@28124>           condata$ = Peek.s(Peek.l(?currentfunction) + 32 + #funcentry_extend + 1)
00039068 <AmiBlitz3_wizzard.ab2@28125>         Else
00039090 <AmiBlitz3_wizzard.ab2@28126>           condata$ = "GLOBAL"
000390BA <AmiBlitz3_wizzard.ab2@28129>        Case "THIS_INCL"
000390CA <AmiBlitz3_wizzard.ab2@28130>         Poke.b ?skip_bytes,14
000390EA <AmiBlitz3_wizzard.ab2@28131>         If Peek.l(?includetemp2)<>0
00039138 <AmiBlitz3_wizzard.ab2@28132>           condata$ = dos_FilePart{Peek$(?includetemp2)}
00039162 <AmiBlitz3_wizzard.ab2@28135>        Case "THIS_POIN"
00039172 <AmiBlitz3_wizzard.ab2@28136>         Poke.b ?skip_bytes,14
00039192 <AmiBlitz3_wizzard.ab2@28137>         If Peek.l(?currentfunction)<>0
000391C0 <AmiBlitz3_wizzard.ab2@28138>           condata$ = Hex$(Peek.l(?currentfunction))
000391CE <AmiBlitz3_wizzard.ab2@28141>       End Select
000391F8 <AmiBlitz3_wizzard.ab2@28143>      Case "CODE"
00039208 <AmiBlitz3_wizzard.ab2@28144>       Poke.b ?skip_bytes,10
0003926A <AmiBlitz3_wizzard.ab2@28145>       If Mid$(newconst$,3,8) = "CODELINE"
000392A6 <AmiBlitz3_wizzard.ab2@28146>         condata$ = Str$(Peek.l(?globallinecount))
000392B4 <AmiBlitz3_wizzard.ab2@28149>     End Select
000392BA <AmiBlitz3_wizzard.ab2@28151>   Else
0003930E <AmiBlitz3_wizzard.ab2@28152>     Select Left$(newconst$,1)
00039332 <AmiBlitz3_wizzard.ab2@28154>      Case "R"
00039342 <AmiBlitz3_wizzard.ab2@28155>       Poke.b ?skip_bytes,3
000393BA <AmiBlitz3_wizzard.ab2@28156>       For i = 1 To Vallong(Mid$(newconst$,2,2))
0003943A <AmiBlitz3_wizzard.ab2@28157>         condata$ = condata$ + Mid$(newconst$,4,1)
0003944A <AmiBlitz3_wizzard.ab2@28158>       Next
00039474 <AmiBlitz3_wizzard.ab2@28160>      Case "N"
00039484 <AmiBlitz3_wizzard.ab2@28161>       Poke.b ?skip_bytes,1
000394A8 <AmiBlitz3_wizzard.ab2@28162>       condata$ = Chr$(10)
000394AE <AmiBlitz3_wizzard.ab2@28164>      Default
000394C0 <AmiBlitz3_wizzard.ab2@28165>       char1.b = Peek.b(&newconst$)
000394D8 <AmiBlitz3_wizzard.ab2@28166>       char2.b = Peek.b(&newconst$+1)
000394E4 <AmiBlitz3_wizzard.ab2@28167>       nibble1.l = -1
000394F0 <AmiBlitz3_wizzard.ab2@28168>       nibble2.l = -1
0003952E <AmiBlitz3_wizzard.ab2@28170>       If (char1>=@"0" AND char1<=@"9") Then nibble1 = char1-@"0"
0003956C <AmiBlitz3_wizzard.ab2@28171>       If (char2>=@"0" AND char2<=@"9") Then nibble2 = char2-@"0"
000395B0 <AmiBlitz3_wizzard.ab2@28173>       If (char1>=@"a" AND char1<=@"f") Then nibble1 = char1-@"a" + 10
000395F4 <AmiBlitz3_wizzard.ab2@28174>       If (char2>=@"a" AND char2<=@"f") Then nibble2 = char2-@"a" + 10
00039638 <AmiBlitz3_wizzard.ab2@28176>       If (char1>=@"A" AND char1<=@"F") Then nibble1 = char1-@"A" + 10
0003967C <AmiBlitz3_wizzard.ab2@28177>       If (char2>=@"A" AND char2<=@"F") Then nibble2 = char2-@"A" + 10
000396A2 <AmiBlitz3_wizzard.ab2@28179>       If nibble1>=0 AND nibble2>=0
000396B8 <AmiBlitz3_wizzard.ab2@28180>         newchar.l = (nibble1 LSL 4) + (nibble2)
000396DC <AmiBlitz3_wizzard.ab2@28181>         condata$ = Chr$(newchar)
000396EC <AmiBlitz3_wizzard.ab2@28182>         Poke.b ?skip_bytes,2
000396FA <AmiBlitz3_wizzard.ab2@28185>     End Select
0003975A <AmiBlitz3_wizzard.ab2@28187>   If condata$ = "" AND Peek.b(?skip_bytes)=0
00039880 <AmiBlitz3_wizzard.ab2@28188>     !cout{"detected unknown const: " + newconst$}
000398B4 <AmiBlitz3_wizzard.ab2@28189>     condata$ = newconst$
000398CA <AmiBlitz3_wizzard.ab2@28192>   GetD0 FLen(condata$)-1                                    ; laenge zielstring -> Stack
000398CC <AmiBlitz3_wizzard.ab2@28193>   MOVE.l d0,d2
000398CE <AmiBlitz3_wizzard.ab2@28194>   MOVE.l d2,-(a7)
000398D4 <AmiBlitz3_wizzard.ab2@28196>   GetD0 &condata$                                          ; kopieren des neuen Strings in den Zielstring
000398D6 <AmiBlitz3_wizzard.ab2@28197>   MOVE.l d0,a0
000398D8 <AmiBlitz3_wizzard.ab2@28200>     MOVE.b (a0)+,d1
000398DE <AmiBlitz3_wizzard.ab2@28201>     JSR pokedata1b
000398E2 <AmiBlitz3_wizzard.ab2@28202>  DBF d2,'l1
00039900 <AmiBlitz3_wizzard.ab2@28204>   !asm
00039902 <AmiBlitz3_wizzard.ab2@28205>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
00039904 <AmiBlitz3_wizzard.ab2@28206>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
00039906 <AmiBlitz3_wizzard.ab2@28207>   ADD.l d0,d2                                              ; eingefuegte chars zu D2 dazu
0003990C <AmiBlitz3_wizzard.ab2@28208>   ADD.l #1,d2
00039912 <AmiBlitz3_wizzard.ab2@28210>   MOVE.l #0,d0                                             ; a5 um konstantennamen weiterschieben
00039918 <AmiBlitz3_wizzard.ab2@28211>   MOVE.b skip_bytes,D0
0003991A <AmiBlitz3_wizzard.ab2@28212>   ADD.l D0,a5
0003991C <AmiBlitz3_wizzard.ab2@28213> RTS
00039920 <AmiBlitz3_wizzard.ab2@28288> MOVEM.l a3/d1,-(a7)
00039926 <AmiBlitz3_wizzard.ab2@28290> CLR.b a4a5store
00039928 <AmiBlitz3_wizzard.ab2@28291> 'continue: MOVE.b (a3)+,d1
0003992C <AmiBlitz3_wizzard.ab2@28292> CMP.b #$15,d1
00039930 <AmiBlitz3_wizzard.ab2@28293> BEQ 'find
00039934 <AmiBlitz3_wizzard.ab2@28294> CMP.b #$14,d1
00039938 <AmiBlitz3_wizzard.ab2@28295> BEQ 'find
0003993C <AmiBlitz3_wizzard.ab2@28296> CMP.b #$ff,d1
00039940 <AmiBlitz3_wizzard.ab2@28297> BNE 'continue
00039944 <AmiBlitz3_wizzard.ab2@28298> BRA 'notfind
0003994A <AmiBlitz3_wizzard.ab2@28300> MOVE.l #$48e7000c,d1                  ; write 68k movem.l a4/a5,-(a7)
00039950 <AmiBlitz3_wizzard.ab2@28301> JSR writelong
00039958 <AmiBlitz3_wizzard.ab2@28302> MOVE.b #1,a4a5store
0003995C <AmiBlitz3_wizzard.ab2@28303> 'notfind: MOVEM.l (a7)+,a3/d1
0003995E <AmiBlitz3_wizzard.ab2@28304> RTS
00039964 <AmiBlitz3_wizzard.ab2@28307> TST.b a4a5store
00039968 <AmiBlitz3_wizzard.ab2@28308> BEQ 'no
0003996E <AmiBlitz3_wizzard.ab2@28309> MOVE.l #$4cdf3000,d1                  ; write 68k movem.l (a7)+,a4/a5
00039974 <AmiBlitz3_wizzard.ab2@28310> JSR writelong
0003997A <AmiBlitz3_wizzard.ab2@28311> CLR.b a4a5store
0003997C <AmiBlitz3_wizzard.ab2@28312> 'no RTS
0003997C <internal_commands.ab2@1> INCLUDE "internal_commands.ab2"
00039980 <internal_commands.ab2@13> INCLUDE "internal_commands.ab2"
00039982 <internal_commands.ab2@15> INCLUDE "internal_commands.ab2"
0003998A <internal_commands.ab2@16> INCLUDE "internal_commands.ab2"
00039996 <internal_commands.ab2@17> INCLUDE "internal_commands.ab2"
0003999A <internal_commands.ab2@21> INCLUDE "internal_commands.ab2"
0003999C <internal_commands.ab2@22> INCLUDE "internal_commands.ab2"
000399A0 <internal_commands.ab2@23> INCLUDE "internal_commands.ab2"
000399E9 <internal_commands.ab2@24> INCLUDE "internal_commands.ab2"
000399EA <internal_commands.ab2@25> INCLUDE "internal_commands.ab2"
000399EE <internal_commands.ab2@28> INCLUDE "internal_commands.ab2"
000399F0 <internal_commands.ab2@29> INCLUDE "internal_commands.ab2"
000399F4 <internal_commands.ab2@30> INCLUDE "internal_commands.ab2"
00039A10 <internal_commands.ab2@31> INCLUDE "internal_commands.ab2"
00039A14 <internal_commands.ab2@35> INCLUDE "internal_commands.ab2"
00039A16 <internal_commands.ab2@36> INCLUDE "internal_commands.ab2"
00039A1A <internal_commands.ab2@37> INCLUDE "internal_commands.ab2"
00039A77 <internal_commands.ab2@38> INCLUDE "internal_commands.ab2"
00039A78 <internal_commands.ab2@39> INCLUDE "internal_commands.ab2"
00039A7C <internal_commands.ab2@42> INCLUDE "internal_commands.ab2"
00039A7E <internal_commands.ab2@43> INCLUDE "internal_commands.ab2"
00039A83 <internal_commands.ab2@44> INCLUDE "internal_commands.ab2"
00039A93 <internal_commands.ab2@45> INCLUDE "internal_commands.ab2"
00039A94 <internal_commands.ab2@46> INCLUDE "internal_commands.ab2"
00039A98 <internal_commands.ab2@49> INCLUDE "internal_commands.ab2"
00039A9A <internal_commands.ab2@50> INCLUDE "internal_commands.ab2"
00039AA0 <internal_commands.ab2@51> INCLUDE "internal_commands.ab2"
00039AB0 <internal_commands.ab2@52> INCLUDE "internal_commands.ab2"
00039AB4 <internal_commands.ab2@56> INCLUDE "internal_commands.ab2"
00039AB6 <internal_commands.ab2@57> INCLUDE "internal_commands.ab2"
00039ABD <internal_commands.ab2@58> INCLUDE "internal_commands.ab2"
00039ABE <internal_commands.ab2@59> INCLUDE "internal_commands.ab2"
00039AC2 <internal_commands.ab2@63> INCLUDE "internal_commands.ab2"
00039AC4 <internal_commands.ab2@64> INCLUDE "internal_commands.ab2"
00039ACE <internal_commands.ab2@65> INCLUDE "internal_commands.ab2"
00039B01 <internal_commands.ab2@66> INCLUDE "internal_commands.ab2"
00039B02 <internal_commands.ab2@67> INCLUDE "internal_commands.ab2"
00039B06 <internal_commands.ab2@70> INCLUDE "internal_commands.ab2"
00039B08 <internal_commands.ab2@71> INCLUDE "internal_commands.ab2"
00039B11 <internal_commands.ab2@72> INCLUDE "internal_commands.ab2"
00039B4C <internal_commands.ab2@73> INCLUDE "internal_commands.ab2"
00039B50 <internal_commands.ab2@77> INCLUDE "internal_commands.ab2"
00039B52 <internal_commands.ab2@78> INCLUDE "internal_commands.ab2"
00039B5C <internal_commands.ab2@79> INCLUDE "internal_commands.ab2"
00039B5D <internal_commands.ab2@80> INCLUDE "internal_commands.ab2"
00039B5E <internal_commands.ab2@81> INCLUDE "internal_commands.ab2"
00039B62 <internal_commands.ab2@84> INCLUDE "internal_commands.ab2"
00039B64 <internal_commands.ab2@85> INCLUDE "internal_commands.ab2"
00039B67 <internal_commands.ab2@86> INCLUDE "internal_commands.ab2"
00039B7E <internal_commands.ab2@87> INCLUDE "internal_commands.ab2"
00039B82 <internal_commands.ab2@91> INCLUDE "internal_commands.ab2"
00039B84 <internal_commands.ab2@92> INCLUDE "internal_commands.ab2"
00039B8A <internal_commands.ab2@93> INCLUDE "internal_commands.ab2"
00039B97 <internal_commands.ab2@94> INCLUDE "internal_commands.ab2"
00039B98 <internal_commands.ab2@95> INCLUDE "internal_commands.ab2"
00039B9C <internal_commands.ab2@98> INCLUDE "internal_commands.ab2"
00039B9E <internal_commands.ab2@99> INCLUDE "internal_commands.ab2"
00039BA4 <internal_commands.ab2@100> INCLUDE "internal_commands.ab2"
00039BB0 <internal_commands.ab2@101> INCLUDE "internal_commands.ab2"
00039BB4 <internal_commands.ab2@105> INCLUDE "internal_commands.ab2"
00039BB6 <internal_commands.ab2@106> INCLUDE "internal_commands.ab2"
00039BBD <internal_commands.ab2@107> INCLUDE "internal_commands.ab2"
00039BCA <internal_commands.ab2@108> INCLUDE "internal_commands.ab2"
00039BCE <internal_commands.ab2@112> INCLUDE "internal_commands.ab2"
00039BD0 <internal_commands.ab2@113> INCLUDE "internal_commands.ab2"
00039BD5 <internal_commands.ab2@114> INCLUDE "internal_commands.ab2"
00039BE2 <internal_commands.ab2@115> INCLUDE "internal_commands.ab2"
00039BE6 <internal_commands.ab2@119> INCLUDE "internal_commands.ab2"
00039BE8 <internal_commands.ab2@120> INCLUDE "internal_commands.ab2"
00039BF0 <internal_commands.ab2@121> INCLUDE "internal_commands.ab2"
00039BF1 <internal_commands.ab2@122> INCLUDE "internal_commands.ab2"
00039BF2 <internal_commands.ab2@123> INCLUDE "internal_commands.ab2"
00039BF6 <internal_commands.ab2@126> INCLUDE "internal_commands.ab2"
00039BF8 <internal_commands.ab2@127> INCLUDE "internal_commands.ab2"
00039C00 <internal_commands.ab2@128> INCLUDE "internal_commands.ab2"
00039C01 <internal_commands.ab2@129> INCLUDE "internal_commands.ab2"
00039C02 <internal_commands.ab2@130> INCLUDE "internal_commands.ab2"
00039C06 <internal_commands.ab2@133> INCLUDE "internal_commands.ab2"
00039C08 <internal_commands.ab2@134> INCLUDE "internal_commands.ab2"
00039C11 <internal_commands.ab2@135> INCLUDE "internal_commands.ab2"
00039C1C <internal_commands.ab2@136> INCLUDE "internal_commands.ab2"
00039C20 <internal_commands.ab2@140> INCLUDE "internal_commands.ab2"
00039C22 <internal_commands.ab2@141> INCLUDE "internal_commands.ab2"
00039C2A <internal_commands.ab2@142> INCLUDE "internal_commands.ab2"
00039C35 <internal_commands.ab2@143> INCLUDE "internal_commands.ab2"
00039C36 <internal_commands.ab2@144> INCLUDE "internal_commands.ab2"
00039C3A <internal_commands.ab2@147> INCLUDE "internal_commands.ab2"
00039C3C <internal_commands.ab2@148> INCLUDE "internal_commands.ab2"
00039C43 <internal_commands.ab2@149> INCLUDE "internal_commands.ab2"
00039CA5 <internal_commands.ab2@150> INCLUDE "internal_commands.ab2"
00039CA6 <internal_commands.ab2@151> INCLUDE "internal_commands.ab2"
00039CAA <internal_commands.ab2@154> INCLUDE "internal_commands.ab2"
00039CAC <internal_commands.ab2@155> INCLUDE "internal_commands.ab2"
00039CB3 <internal_commands.ab2@156> INCLUDE "internal_commands.ab2"
00039CC2 <internal_commands.ab2@157> INCLUDE "internal_commands.ab2"
00039CC6 <internal_commands.ab2@161> INCLUDE "internal_commands.ab2"
00039CC8 <internal_commands.ab2@162> INCLUDE "internal_commands.ab2"
00039CCC <internal_commands.ab2@163> INCLUDE "internal_commands.ab2"
00039D02 <internal_commands.ab2@164> INCLUDE "internal_commands.ab2"
00039D06 <internal_commands.ab2@168> INCLUDE "internal_commands.ab2"
00039D08 <internal_commands.ab2@169> INCLUDE "internal_commands.ab2"
00039D0D <internal_commands.ab2@170> INCLUDE "internal_commands.ab2"
00039D1C <internal_commands.ab2@171> INCLUDE "internal_commands.ab2"
00039D20 <internal_commands.ab2@175> INCLUDE "internal_commands.ab2"
00039D22 <internal_commands.ab2@176> INCLUDE "internal_commands.ab2"
00039D25 <internal_commands.ab2@177> INCLUDE "internal_commands.ab2"
00039D46 <internal_commands.ab2@178> INCLUDE "internal_commands.ab2"
00039D4A <internal_commands.ab2@182> INCLUDE "internal_commands.ab2"
00039D4C <internal_commands.ab2@183> INCLUDE "internal_commands.ab2"
00039D51 <internal_commands.ab2@184> INCLUDE "internal_commands.ab2"
00039D5D <internal_commands.ab2@185> INCLUDE "internal_commands.ab2"
00039D5E <internal_commands.ab2@186> INCLUDE "internal_commands.ab2"
00039D62 <internal_commands.ab2@189> INCLUDE "internal_commands.ab2"
00039D64 <internal_commands.ab2@190> INCLUDE "internal_commands.ab2"
00039D69 <internal_commands.ab2@191> INCLUDE "internal_commands.ab2"
00039D80 <internal_commands.ab2@192> INCLUDE "internal_commands.ab2"
00039D84 <internal_commands.ab2@196> INCLUDE "internal_commands.ab2"
00039D86 <internal_commands.ab2@197> INCLUDE "internal_commands.ab2"
00039D8B <internal_commands.ab2@198> INCLUDE "internal_commands.ab2"
00039D9A <internal_commands.ab2@199> INCLUDE "internal_commands.ab2"
00039D9E <internal_commands.ab2@203> INCLUDE "internal_commands.ab2"
00039DA0 <internal_commands.ab2@204> INCLUDE "internal_commands.ab2"
00039DA5 <internal_commands.ab2@205> INCLUDE "internal_commands.ab2"
00039DC4 <internal_commands.ab2@206> INCLUDE "internal_commands.ab2"
00039DC8 <internal_commands.ab2@210> INCLUDE "internal_commands.ab2"
00039DCA <internal_commands.ab2@211> INCLUDE "internal_commands.ab2"
00039DCF <internal_commands.ab2@212> INCLUDE "internal_commands.ab2"
00039DEE <internal_commands.ab2@213> INCLUDE "internal_commands.ab2"
00039DF2 <internal_commands.ab2@217> INCLUDE "internal_commands.ab2"
00039DF4 <internal_commands.ab2@218> INCLUDE "internal_commands.ab2"
00039DFA <internal_commands.ab2@219> INCLUDE "internal_commands.ab2"
00039DFB <internal_commands.ab2@220> INCLUDE "internal_commands.ab2"
00039DFC <internal_commands.ab2@221> INCLUDE "internal_commands.ab2"
00039E00 <internal_commands.ab2@224> INCLUDE "internal_commands.ab2"
00039E02 <internal_commands.ab2@225> INCLUDE "internal_commands.ab2"
00039E07 <internal_commands.ab2@226> INCLUDE "internal_commands.ab2"
00039E08 <internal_commands.ab2@227> INCLUDE "internal_commands.ab2"
00039E0C <internal_commands.ab2@231> INCLUDE "internal_commands.ab2"
00039E0E <internal_commands.ab2@232> INCLUDE "internal_commands.ab2"
00039E13 <internal_commands.ab2@233> INCLUDE "internal_commands.ab2"
00039E20 <internal_commands.ab2@234> INCLUDE "internal_commands.ab2"
00039E24 <internal_commands.ab2@238> INCLUDE "internal_commands.ab2"
00039E26 <internal_commands.ab2@239> INCLUDE "internal_commands.ab2"
00039E2B <internal_commands.ab2@240> INCLUDE "internal_commands.ab2"
00039E3A <internal_commands.ab2@241> INCLUDE "internal_commands.ab2"
00039E3E <internal_commands.ab2@245> INCLUDE "internal_commands.ab2"
00039E40 <internal_commands.ab2@246> INCLUDE "internal_commands.ab2"
00039E45 <internal_commands.ab2@247> INCLUDE "internal_commands.ab2"
00039E54 <internal_commands.ab2@248> INCLUDE "internal_commands.ab2"
00039E58 <internal_commands.ab2@252> INCLUDE "internal_commands.ab2"
00039E5A <internal_commands.ab2@253> INCLUDE "internal_commands.ab2"
00039E60 <internal_commands.ab2@254> INCLUDE "internal_commands.ab2"
00039E7D <internal_commands.ab2@255> INCLUDE "internal_commands.ab2"
00039E7E <internal_commands.ab2@256> INCLUDE "internal_commands.ab2"
00039E82 <internal_commands.ab2@259> INCLUDE "internal_commands.ab2"
00039E84 <internal_commands.ab2@260> INCLUDE "internal_commands.ab2"
00039E8A <internal_commands.ab2@261> INCLUDE "internal_commands.ab2"
00039EA7 <internal_commands.ab2@262> INCLUDE "internal_commands.ab2"
00039EA8 <internal_commands.ab2@263> INCLUDE "internal_commands.ab2"
00039EAC <internal_commands.ab2@266> INCLUDE "internal_commands.ab2"
00039EAE <internal_commands.ab2@267> INCLUDE "internal_commands.ab2"
00039EB1 <internal_commands.ab2@268> INCLUDE "internal_commands.ab2"
00039EC8 <internal_commands.ab2@269> INCLUDE "internal_commands.ab2"
00039ECC <internal_commands.ab2@273> INCLUDE "internal_commands.ab2"
00039ECE <internal_commands.ab2@274> INCLUDE "internal_commands.ab2"
00039ED1 <internal_commands.ab2@275> INCLUDE "internal_commands.ab2"
00039EE0 <internal_commands.ab2@276> INCLUDE "internal_commands.ab2"
00039EE4 <internal_commands.ab2@280> INCLUDE "internal_commands.ab2"
00039EE6 <internal_commands.ab2@281> INCLUDE "internal_commands.ab2"
00039EEB <internal_commands.ab2@282> INCLUDE "internal_commands.ab2"
00039EEC <internal_commands.ab2@283> INCLUDE "internal_commands.ab2"
00039EF0 <internal_commands.ab2@287> INCLUDE "internal_commands.ab2"
00039EF2 <internal_commands.ab2@288> INCLUDE "internal_commands.ab2"
00039EF6 <internal_commands.ab2@289> INCLUDE "internal_commands.ab2"
00039F0B <internal_commands.ab2@290> INCLUDE "internal_commands.ab2"
00039F0C <internal_commands.ab2@291> INCLUDE "internal_commands.ab2"
00039F10 <internal_commands.ab2@294> INCLUDE "internal_commands.ab2"
00039F12 <internal_commands.ab2@295> INCLUDE "internal_commands.ab2"
00039F19 <internal_commands.ab2@296> INCLUDE "internal_commands.ab2"
00039F32 <internal_commands.ab2@297> INCLUDE "internal_commands.ab2"
00039F36 <internal_commands.ab2@301> INCLUDE "internal_commands.ab2"
00039F38 <internal_commands.ab2@302> INCLUDE "internal_commands.ab2"
00039F3F <internal_commands.ab2@303> INCLUDE "internal_commands.ab2"
00039F4A <internal_commands.ab2@304> INCLUDE "internal_commands.ab2"
00039F4E <internal_commands.ab2@308> INCLUDE "internal_commands.ab2"
00039F50 <internal_commands.ab2@309> INCLUDE "internal_commands.ab2"
00039F55 <internal_commands.ab2@310> INCLUDE "internal_commands.ab2"
00039F6C <internal_commands.ab2@311> INCLUDE "internal_commands.ab2"
00039F70 <internal_commands.ab2@315> INCLUDE "internal_commands.ab2"
00039F72 <internal_commands.ab2@316> INCLUDE "internal_commands.ab2"
00039F76 <internal_commands.ab2@317> INCLUDE "internal_commands.ab2"
00039F8D <internal_commands.ab2@318> INCLUDE "internal_commands.ab2"
00039F8E <internal_commands.ab2@319> INCLUDE "internal_commands.ab2"
00039F92 <internal_commands.ab2@322> INCLUDE "internal_commands.ab2"
00039F94 <internal_commands.ab2@323> INCLUDE "internal_commands.ab2"
00039F99 <internal_commands.ab2@324> INCLUDE "internal_commands.ab2"
00039F9A <internal_commands.ab2@325> INCLUDE "internal_commands.ab2"
00039F9E <internal_commands.ab2@329> INCLUDE "internal_commands.ab2"
00039FA0 <internal_commands.ab2@330> INCLUDE "internal_commands.ab2"
00039FA5 <internal_commands.ab2@331> INCLUDE "internal_commands.ab2"
00039FA9 <internal_commands.ab2@332> INCLUDE "internal_commands.ab2"
00039FAA <internal_commands.ab2@333> INCLUDE "internal_commands.ab2"
00039FAE <internal_commands.ab2@336> INCLUDE "internal_commands.ab2"
00039FB0 <internal_commands.ab2@337> INCLUDE "internal_commands.ab2"
00039FB7 <internal_commands.ab2@338> INCLUDE "internal_commands.ab2"
00039FCF <internal_commands.ab2@339> INCLUDE "internal_commands.ab2"
00039FD0 <internal_commands.ab2@340> INCLUDE "internal_commands.ab2"
00039FD4 <internal_commands.ab2@343> INCLUDE "internal_commands.ab2"
00039FD6 <internal_commands.ab2@344> INCLUDE "internal_commands.ab2"
00039FDD <internal_commands.ab2@345> INCLUDE "internal_commands.ab2"
00039FE2 <internal_commands.ab2@346> INCLUDE "internal_commands.ab2"
00039FE6 <internal_commands.ab2@350> INCLUDE "internal_commands.ab2"
00039FE8 <internal_commands.ab2@351> INCLUDE "internal_commands.ab2"
00039FEF <internal_commands.ab2@352> INCLUDE "internal_commands.ab2"
00039FF4 <internal_commands.ab2@353> INCLUDE "internal_commands.ab2"
00039FF8 <internal_commands.ab2@357> INCLUDE "internal_commands.ab2"
00039FFA <internal_commands.ab2@358> INCLUDE "internal_commands.ab2"
0003A001 <internal_commands.ab2@359> INCLUDE "internal_commands.ab2"
0003A01C <internal_commands.ab2@360> INCLUDE "internal_commands.ab2"
0003A020 <internal_commands.ab2@364> INCLUDE "internal_commands.ab2"
0003A022 <internal_commands.ab2@365> INCLUDE "internal_commands.ab2"
0003A02A <internal_commands.ab2@366> INCLUDE "internal_commands.ab2"
0003A043 <internal_commands.ab2@367> INCLUDE "internal_commands.ab2"
0003A044 <internal_commands.ab2@368> INCLUDE "internal_commands.ab2"
0003A048 <internal_commands.ab2@371> INCLUDE "internal_commands.ab2"
0003A04A <internal_commands.ab2@372> INCLUDE "internal_commands.ab2"
0003A050 <internal_commands.ab2@373> INCLUDE "internal_commands.ab2"
0003A051 <internal_commands.ab2@374> INCLUDE "internal_commands.ab2"
0003A052 <internal_commands.ab2@375> INCLUDE "internal_commands.ab2"
0003A056 <internal_commands.ab2@378> INCLUDE "internal_commands.ab2"
0003A058 <internal_commands.ab2@379> INCLUDE "internal_commands.ab2"
0003A05E <internal_commands.ab2@380> INCLUDE "internal_commands.ab2"
0003A05F <internal_commands.ab2@381> INCLUDE "internal_commands.ab2"
0003A060 <internal_commands.ab2@382> INCLUDE "internal_commands.ab2"
0003A064 <internal_commands.ab2@385> INCLUDE "internal_commands.ab2"
0003A066 <internal_commands.ab2@386> INCLUDE "internal_commands.ab2"
0003A06D <internal_commands.ab2@387> INCLUDE "internal_commands.ab2"
0003A06E <internal_commands.ab2@388> INCLUDE "internal_commands.ab2"
0003A072 <internal_commands.ab2@392> INCLUDE "internal_commands.ab2"
0003A074 <internal_commands.ab2@393> INCLUDE "internal_commands.ab2"
0003A07A <internal_commands.ab2@394> INCLUDE "internal_commands.ab2"
0003A083 <internal_commands.ab2@395> INCLUDE "internal_commands.ab2"
0003A084 <internal_commands.ab2@396> INCLUDE "internal_commands.ab2"
0003A088 <internal_commands.ab2@399> INCLUDE "internal_commands.ab2"
0003A08A <internal_commands.ab2@400> INCLUDE "internal_commands.ab2"
0003A092 <internal_commands.ab2@401> INCLUDE "internal_commands.ab2"
0003A09F <internal_commands.ab2@402> INCLUDE "internal_commands.ab2"
0003A0A0 <internal_commands.ab2@403> INCLUDE "internal_commands.ab2"
0003A0A4 <internal_commands.ab2@406> INCLUDE "internal_commands.ab2"
0003A0A6 <internal_commands.ab2@407> INCLUDE "internal_commands.ab2"
0003A0AE <internal_commands.ab2@408> INCLUDE "internal_commands.ab2"
0003A0BB <internal_commands.ab2@409> INCLUDE "internal_commands.ab2"
0003A0BC <internal_commands.ab2@410> INCLUDE "internal_commands.ab2"
0003A0C0 <internal_commands.ab2@413> INCLUDE "internal_commands.ab2"
0003A0C2 <internal_commands.ab2@414> INCLUDE "internal_commands.ab2"
0003A0CA <internal_commands.ab2@415> INCLUDE "internal_commands.ab2"
0003A0D7 <internal_commands.ab2@416> INCLUDE "internal_commands.ab2"
0003A0D8 <internal_commands.ab2@417> INCLUDE "internal_commands.ab2"
0003A0DC <internal_commands.ab2@420> INCLUDE "internal_commands.ab2"
0003A0DE <internal_commands.ab2@421> INCLUDE "internal_commands.ab2"
0003A0E3 <internal_commands.ab2@422> INCLUDE "internal_commands.ab2"
0003A0E4 <internal_commands.ab2@423> INCLUDE "internal_commands.ab2"
0003A0E8 <internal_commands.ab2@437> INCLUDE "internal_commands.ab2"
0003A0EA <internal_commands.ab2@438> INCLUDE "internal_commands.ab2"
0003A0EF <internal_commands.ab2@439> INCLUDE "internal_commands.ab2"
0003A0F0 <internal_commands.ab2@440> INCLUDE "internal_commands.ab2"
0003A0F2 <internal_commands.ab2@443> INCLUDE "internal_commands.ab2"
0003A0F6 <internal_commands.ab2@444> INCLUDE "internal_commands.ab2"
0003A0F8 <internal_commands.ab2@445> INCLUDE "internal_commands.ab2"
0003A0FA <internal_commands.ab2@446> INCLUDE "internal_commands.ab2"
0003A0FE <internal_commands.ab2@447> INCLUDE "internal_commands.ab2"
0003A100 <internal_commands.ab2@448> INCLUDE "internal_commands.ab2"
0003A104 <internal_commands.ab2@452> INCLUDE "internal_commands.ab2"
0003A106 <internal_commands.ab2@453> INCLUDE "internal_commands.ab2"
0003A10A <internal_commands.ab2@454> INCLUDE "internal_commands.ab2"
0003A10B <internal_commands.ab2@455> INCLUDE "internal_commands.ab2"
0003A10C <internal_commands.ab2@456> INCLUDE "internal_commands.ab2"
0003A10E <internal_commands.ab2@458> INCLUDE "internal_commands.ab2"
0003A112 <internal_commands.ab2@459> INCLUDE "internal_commands.ab2"
0003A114 <internal_commands.ab2@460> INCLUDE "internal_commands.ab2"
0003A116 <internal_commands.ab2@461> INCLUDE "internal_commands.ab2"
0003A11A <internal_commands.ab2@462> INCLUDE "internal_commands.ab2"
0003A11C <internal_commands.ab2@463> INCLUDE "internal_commands.ab2"
0003A120 <internal_commands.ab2@467> INCLUDE "internal_commands.ab2"
0003A122 <internal_commands.ab2@468> INCLUDE "internal_commands.ab2"
0003A127 <internal_commands.ab2@469> INCLUDE "internal_commands.ab2"
0003A128 <internal_commands.ab2@470> INCLUDE "internal_commands.ab2"
0003A12A <internal_commands.ab2@473> INCLUDE "internal_commands.ab2"
0003A12E <internal_commands.ab2@474> INCLUDE "internal_commands.ab2"
0003A130 <internal_commands.ab2@475> INCLUDE "internal_commands.ab2"
0003A132 <internal_commands.ab2@476> INCLUDE "internal_commands.ab2"
0003A136 <internal_commands.ab2@477> INCLUDE "internal_commands.ab2"
0003A138 <internal_commands.ab2@478> INCLUDE "internal_commands.ab2"
0003A13C <internal_commands.ab2@482> INCLUDE "internal_commands.ab2"
0003A13E <internal_commands.ab2@483> INCLUDE "internal_commands.ab2"
0003A143 <internal_commands.ab2@484> INCLUDE "internal_commands.ab2"
0003A144 <internal_commands.ab2@485> INCLUDE "internal_commands.ab2"
0003A146 <internal_commands.ab2@488> INCLUDE "internal_commands.ab2"
0003A14A <internal_commands.ab2@489> INCLUDE "internal_commands.ab2"
0003A14C <internal_commands.ab2@490> INCLUDE "internal_commands.ab2"
0003A14E <internal_commands.ab2@491> INCLUDE "internal_commands.ab2"
0003A152 <internal_commands.ab2@492> INCLUDE "internal_commands.ab2"
0003A154 <internal_commands.ab2@493> INCLUDE "internal_commands.ab2"
0003A158 <internal_commands.ab2@497> INCLUDE "internal_commands.ab2"
0003A15A <internal_commands.ab2@498> INCLUDE "internal_commands.ab2"
0003A15F <internal_commands.ab2@499> INCLUDE "internal_commands.ab2"
0003A160 <internal_commands.ab2@500> INCLUDE "internal_commands.ab2"
0003A162 <internal_commands.ab2@503> INCLUDE "internal_commands.ab2"
0003A166 <internal_commands.ab2@504> INCLUDE "internal_commands.ab2"
0003A168 <internal_commands.ab2@505> INCLUDE "internal_commands.ab2"
0003A16A <internal_commands.ab2@506> INCLUDE "internal_commands.ab2"
0003A16E <internal_commands.ab2@507> INCLUDE "internal_commands.ab2"
0003A170 <internal_commands.ab2@508> INCLUDE "internal_commands.ab2"
0003A174 <internal_commands.ab2@512> INCLUDE "internal_commands.ab2"
0003A176 <internal_commands.ab2@513> INCLUDE "internal_commands.ab2"
0003A17B <internal_commands.ab2@514> INCLUDE "internal_commands.ab2"
0003A17C <internal_commands.ab2@515> INCLUDE "internal_commands.ab2"
0003A17E <internal_commands.ab2@518> INCLUDE "internal_commands.ab2"
0003A182 <internal_commands.ab2@519> INCLUDE "internal_commands.ab2"
0003A184 <internal_commands.ab2@520> INCLUDE "internal_commands.ab2"
0003A186 <internal_commands.ab2@521> INCLUDE "internal_commands.ab2"
0003A18A <internal_commands.ab2@522> INCLUDE "internal_commands.ab2"
0003A18C <internal_commands.ab2@523> INCLUDE "internal_commands.ab2"
0003A190 <internal_commands.ab2@527> INCLUDE "internal_commands.ab2"
0003A192 <internal_commands.ab2@528> INCLUDE "internal_commands.ab2"
0003A196 <internal_commands.ab2@529> INCLUDE "internal_commands.ab2"
0003A197 <internal_commands.ab2@530> INCLUDE "internal_commands.ab2"
0003A198 <internal_commands.ab2@531> INCLUDE "internal_commands.ab2"
0003A19A <internal_commands.ab2@533> INCLUDE "internal_commands.ab2"
0003A19E <internal_commands.ab2@534> INCLUDE "internal_commands.ab2"
0003A1A0 <internal_commands.ab2@535> INCLUDE "internal_commands.ab2"
0003A1A2 <internal_commands.ab2@536> INCLUDE "internal_commands.ab2"
0003A1A6 <internal_commands.ab2@537> INCLUDE "internal_commands.ab2"
0003A1A8 <internal_commands.ab2@538> INCLUDE "internal_commands.ab2"
0003A1AC <internal_commands.ab2@542> INCLUDE "internal_commands.ab2"
0003A1AE <internal_commands.ab2@543> INCLUDE "internal_commands.ab2"
0003A1B3 <internal_commands.ab2@544> INCLUDE "internal_commands.ab2"
0003A1B4 <internal_commands.ab2@545> INCLUDE "internal_commands.ab2"
0003A1B6 <internal_commands.ab2@548> INCLUDE "internal_commands.ab2"
0003A1BA <internal_commands.ab2@549> INCLUDE "internal_commands.ab2"
0003A1BC <internal_commands.ab2@550> INCLUDE "internal_commands.ab2"
0003A1BE <internal_commands.ab2@551> INCLUDE "internal_commands.ab2"
0003A1C2 <internal_commands.ab2@552> INCLUDE "internal_commands.ab2"
0003A1C4 <internal_commands.ab2@553> INCLUDE "internal_commands.ab2"
0003A1C8 <internal_commands.ab2@557> INCLUDE "internal_commands.ab2"
0003A1CA <internal_commands.ab2@558> INCLUDE "internal_commands.ab2"
0003A1CE <internal_commands.ab2@559> INCLUDE "internal_commands.ab2"
0003A1CF <internal_commands.ab2@560> INCLUDE "internal_commands.ab2"
0003A1D0 <internal_commands.ab2@561> INCLUDE "internal_commands.ab2"
0003A1D2 <internal_commands.ab2@563> INCLUDE "internal_commands.ab2"
0003A1D6 <internal_commands.ab2@564> INCLUDE "internal_commands.ab2"
0003A1D8 <internal_commands.ab2@565> INCLUDE "internal_commands.ab2"
0003A1DA <internal_commands.ab2@566> INCLUDE "internal_commands.ab2"
0003A1DE <internal_commands.ab2@567> INCLUDE "internal_commands.ab2"
0003A1E0 <internal_commands.ab2@568> INCLUDE "internal_commands.ab2"
0003A1E4 <internal_commands.ab2@572> INCLUDE "internal_commands.ab2"
0003A1E6 <internal_commands.ab2@573> INCLUDE "internal_commands.ab2"
0003A1EA <internal_commands.ab2@574> INCLUDE "internal_commands.ab2"
0003A1EB <internal_commands.ab2@575> INCLUDE "internal_commands.ab2"
0003A1EC <internal_commands.ab2@576> INCLUDE "internal_commands.ab2"
0003A1EE <internal_commands.ab2@578> INCLUDE "internal_commands.ab2"
0003A1F2 <internal_commands.ab2@579> INCLUDE "internal_commands.ab2"
0003A1F4 <internal_commands.ab2@580> INCLUDE "internal_commands.ab2"
0003A1F6 <internal_commands.ab2@581> INCLUDE "internal_commands.ab2"
0003A1FA <internal_commands.ab2@582> INCLUDE "internal_commands.ab2"
0003A1FC <internal_commands.ab2@583> INCLUDE "internal_commands.ab2"
0003A200 <internal_commands.ab2@587> INCLUDE "internal_commands.ab2"
0003A202 <internal_commands.ab2@588> INCLUDE "internal_commands.ab2"
0003A206 <internal_commands.ab2@589> INCLUDE "internal_commands.ab2"
0003A207 <internal_commands.ab2@590> INCLUDE "internal_commands.ab2"
0003A208 <internal_commands.ab2@591> INCLUDE "internal_commands.ab2"
0003A20A <internal_commands.ab2@593> INCLUDE "internal_commands.ab2"
0003A20E <internal_commands.ab2@594> INCLUDE "internal_commands.ab2"
0003A210 <internal_commands.ab2@595> INCLUDE "internal_commands.ab2"
0003A212 <internal_commands.ab2@596> INCLUDE "internal_commands.ab2"
0003A216 <internal_commands.ab2@597> INCLUDE "internal_commands.ab2"
0003A218 <internal_commands.ab2@598> INCLUDE "internal_commands.ab2"
0003A21C <internal_commands.ab2@602> INCLUDE "internal_commands.ab2"
0003A21E <internal_commands.ab2@603> INCLUDE "internal_commands.ab2"
0003A222 <internal_commands.ab2@604> INCLUDE "internal_commands.ab2"
0003A223 <internal_commands.ab2@605> INCLUDE "internal_commands.ab2"
0003A224 <internal_commands.ab2@606> INCLUDE "internal_commands.ab2"
0003A226 <internal_commands.ab2@608> INCLUDE "internal_commands.ab2"
0003A22A <internal_commands.ab2@609> INCLUDE "internal_commands.ab2"
0003A22C <internal_commands.ab2@610> INCLUDE "internal_commands.ab2"
0003A22E <internal_commands.ab2@611> INCLUDE "internal_commands.ab2"
0003A232 <internal_commands.ab2@612> INCLUDE "internal_commands.ab2"
0003A234 <internal_commands.ab2@613> INCLUDE "internal_commands.ab2"
0003A238 <internal_commands.ab2@617> INCLUDE "internal_commands.ab2"
0003A23A <internal_commands.ab2@618> INCLUDE "internal_commands.ab2"
0003A23E <internal_commands.ab2@619> INCLUDE "internal_commands.ab2"
0003A23F <internal_commands.ab2@620> INCLUDE "internal_commands.ab2"
0003A240 <internal_commands.ab2@621> INCLUDE "internal_commands.ab2"
0003A242 <internal_commands.ab2@623> INCLUDE "internal_commands.ab2"
0003A246 <internal_commands.ab2@624> INCLUDE "internal_commands.ab2"
0003A248 <internal_commands.ab2@625> INCLUDE "internal_commands.ab2"
0003A24A <internal_commands.ab2@626> INCLUDE "internal_commands.ab2"
0003A24E <internal_commands.ab2@627> INCLUDE "internal_commands.ab2"
0003A250 <internal_commands.ab2@628> INCLUDE "internal_commands.ab2"
0003A254 <internal_commands.ab2@632> INCLUDE "internal_commands.ab2"
0003A256 <internal_commands.ab2@633> INCLUDE "internal_commands.ab2"
0003A25A <internal_commands.ab2@634> INCLUDE "internal_commands.ab2"
0003A25B <internal_commands.ab2@635> INCLUDE "internal_commands.ab2"
0003A25C <internal_commands.ab2@636> INCLUDE "internal_commands.ab2"
0003A25E <internal_commands.ab2@638> INCLUDE "internal_commands.ab2"
0003A262 <internal_commands.ab2@639> INCLUDE "internal_commands.ab2"
0003A264 <internal_commands.ab2@640> INCLUDE "internal_commands.ab2"
0003A266 <internal_commands.ab2@641> INCLUDE "internal_commands.ab2"
0003A26A <internal_commands.ab2@642> INCLUDE "internal_commands.ab2"
0003A26C <internal_commands.ab2@643> INCLUDE "internal_commands.ab2"
0003A270 <internal_commands.ab2@647> INCLUDE "internal_commands.ab2"
0003A272 <internal_commands.ab2@648> INCLUDE "internal_commands.ab2"
0003A276 <internal_commands.ab2@649> INCLUDE "internal_commands.ab2"
0003A277 <internal_commands.ab2@650> INCLUDE "internal_commands.ab2"
0003A278 <internal_commands.ab2@651> INCLUDE "internal_commands.ab2"
0003A27A <internal_commands.ab2@653> INCLUDE "internal_commands.ab2"
0003A27E <internal_commands.ab2@654> INCLUDE "internal_commands.ab2"
0003A280 <internal_commands.ab2@655> INCLUDE "internal_commands.ab2"
0003A282 <internal_commands.ab2@656> INCLUDE "internal_commands.ab2"
0003A286 <internal_commands.ab2@657> INCLUDE "internal_commands.ab2"
0003A288 <internal_commands.ab2@658> INCLUDE "internal_commands.ab2"
0003A28C <internal_commands.ab2@662> INCLUDE "internal_commands.ab2"
0003A28E <internal_commands.ab2@663> INCLUDE "internal_commands.ab2"
0003A292 <internal_commands.ab2@664> INCLUDE "internal_commands.ab2"
0003A293 <internal_commands.ab2@665> INCLUDE "internal_commands.ab2"
0003A294 <internal_commands.ab2@666> INCLUDE "internal_commands.ab2"
0003A296 <internal_commands.ab2@668> INCLUDE "internal_commands.ab2"
0003A29A <internal_commands.ab2@669> INCLUDE "internal_commands.ab2"
0003A29C <internal_commands.ab2@670> INCLUDE "internal_commands.ab2"
0003A29E <internal_commands.ab2@671> INCLUDE "internal_commands.ab2"
0003A2A2 <internal_commands.ab2@672> INCLUDE "internal_commands.ab2"
0003A2A4 <internal_commands.ab2@673> INCLUDE "internal_commands.ab2"
0003A2A8 <internal_commands.ab2@677> INCLUDE "internal_commands.ab2"
0003A2AA <internal_commands.ab2@678> INCLUDE "internal_commands.ab2"
0003A2AE <internal_commands.ab2@679> INCLUDE "internal_commands.ab2"
0003A2AF <internal_commands.ab2@680> INCLUDE "internal_commands.ab2"
0003A2B0 <internal_commands.ab2@681> INCLUDE "internal_commands.ab2"
0003A2B2 <internal_commands.ab2@683> INCLUDE "internal_commands.ab2"
0003A2B6 <internal_commands.ab2@684> INCLUDE "internal_commands.ab2"
0003A2B8 <internal_commands.ab2@685> INCLUDE "internal_commands.ab2"
0003A2BA <internal_commands.ab2@686> INCLUDE "internal_commands.ab2"
0003A2BE <internal_commands.ab2@687> INCLUDE "internal_commands.ab2"
0003A2C0 <internal_commands.ab2@688> INCLUDE "internal_commands.ab2"
0003A2C4 <internal_commands.ab2@692> INCLUDE "internal_commands.ab2"
0003A2C6 <internal_commands.ab2@693> INCLUDE "internal_commands.ab2"
0003A2CA <internal_commands.ab2@694> INCLUDE "internal_commands.ab2"
0003A2CB <internal_commands.ab2@695> INCLUDE "internal_commands.ab2"
0003A2CC <internal_commands.ab2@696> INCLUDE "internal_commands.ab2"
0003A2CE <internal_commands.ab2@698> INCLUDE "internal_commands.ab2"
0003A2D2 <internal_commands.ab2@699> INCLUDE "internal_commands.ab2"
0003A2D4 <internal_commands.ab2@700> INCLUDE "internal_commands.ab2"
0003A2D6 <internal_commands.ab2@701> INCLUDE "internal_commands.ab2"
0003A2DA <internal_commands.ab2@702> INCLUDE "internal_commands.ab2"
0003A2DC <internal_commands.ab2@703> INCLUDE "internal_commands.ab2"
0003A2E0 <internal_commands.ab2@707> INCLUDE "internal_commands.ab2"
0003A2E2 <internal_commands.ab2@708> INCLUDE "internal_commands.ab2"
0003A2E6 <internal_commands.ab2@709> INCLUDE "internal_commands.ab2"
0003A2E7 <internal_commands.ab2@710> INCLUDE "internal_commands.ab2"
0003A2E8 <internal_commands.ab2@711> INCLUDE "internal_commands.ab2"
0003A2EA <internal_commands.ab2@713> INCLUDE "internal_commands.ab2"
0003A2EE <internal_commands.ab2@714> INCLUDE "internal_commands.ab2"
0003A2F0 <internal_commands.ab2@715> INCLUDE "internal_commands.ab2"
0003A2F2 <internal_commands.ab2@716> INCLUDE "internal_commands.ab2"
0003A2F6 <internal_commands.ab2@717> INCLUDE "internal_commands.ab2"
0003A2F8 <internal_commands.ab2@718> INCLUDE "internal_commands.ab2"
0003A2FC <internal_commands.ab2@722> INCLUDE "internal_commands.ab2"
0003A2FE <internal_commands.ab2@723> INCLUDE "internal_commands.ab2"
0003A302 <internal_commands.ab2@724> INCLUDE "internal_commands.ab2"
0003A303 <internal_commands.ab2@725> INCLUDE "internal_commands.ab2"
0003A304 <internal_commands.ab2@726> INCLUDE "internal_commands.ab2"
0003A306 <internal_commands.ab2@728> INCLUDE "internal_commands.ab2"
0003A30A <internal_commands.ab2@729> INCLUDE "internal_commands.ab2"
0003A30C <internal_commands.ab2@730> INCLUDE "internal_commands.ab2"
0003A30E <internal_commands.ab2@731> INCLUDE "internal_commands.ab2"
0003A312 <internal_commands.ab2@732> INCLUDE "internal_commands.ab2"
0003A314 <internal_commands.ab2@733> INCLUDE "internal_commands.ab2"
0003A318 <internal_commands.ab2@737> INCLUDE "internal_commands.ab2"
0003A31A <internal_commands.ab2@738> INCLUDE "internal_commands.ab2"
0003A31E <internal_commands.ab2@739> INCLUDE "internal_commands.ab2"
0003A31F <internal_commands.ab2@740> INCLUDE "internal_commands.ab2"
0003A320 <internal_commands.ab2@741> INCLUDE "internal_commands.ab2"
0003A322 <internal_commands.ab2@743> INCLUDE "internal_commands.ab2"
0003A326 <internal_commands.ab2@744> INCLUDE "internal_commands.ab2"
0003A328 <internal_commands.ab2@745> INCLUDE "internal_commands.ab2"
0003A32A <internal_commands.ab2@746> INCLUDE "internal_commands.ab2"
0003A32E <internal_commands.ab2@747> INCLUDE "internal_commands.ab2"
0003A330 <internal_commands.ab2@748> INCLUDE "internal_commands.ab2"
0003A334 <internal_commands.ab2@752> INCLUDE "internal_commands.ab2"
0003A336 <internal_commands.ab2@753> INCLUDE "internal_commands.ab2"
0003A33A <internal_commands.ab2@754> INCLUDE "internal_commands.ab2"
0003A33B <internal_commands.ab2@755> INCLUDE "internal_commands.ab2"
0003A33C <internal_commands.ab2@756> INCLUDE "internal_commands.ab2"
0003A33E <internal_commands.ab2@758> INCLUDE "internal_commands.ab2"
0003A342 <internal_commands.ab2@759> INCLUDE "internal_commands.ab2"
0003A344 <internal_commands.ab2@760> INCLUDE "internal_commands.ab2"
0003A346 <internal_commands.ab2@761> INCLUDE "internal_commands.ab2"
0003A34A <internal_commands.ab2@762> INCLUDE "internal_commands.ab2"
0003A34C <internal_commands.ab2@763> INCLUDE "internal_commands.ab2"
0003A350 <internal_commands.ab2@767> INCLUDE "internal_commands.ab2"
0003A352 <internal_commands.ab2@768> INCLUDE "internal_commands.ab2"
0003A356 <internal_commands.ab2@769> INCLUDE "internal_commands.ab2"
0003A357 <internal_commands.ab2@770> INCLUDE "internal_commands.ab2"
0003A358 <internal_commands.ab2@771> INCLUDE "internal_commands.ab2"
0003A35A <internal_commands.ab2@773> INCLUDE "internal_commands.ab2"
0003A35E <internal_commands.ab2@774> INCLUDE "internal_commands.ab2"
0003A360 <internal_commands.ab2@775> INCLUDE "internal_commands.ab2"
0003A362 <internal_commands.ab2@776> INCLUDE "internal_commands.ab2"
0003A366 <internal_commands.ab2@777> INCLUDE "internal_commands.ab2"
0003A368 <internal_commands.ab2@778> INCLUDE "internal_commands.ab2"
0003A36C <internal_commands.ab2@782> INCLUDE "internal_commands.ab2"
0003A36E <internal_commands.ab2@783> INCLUDE "internal_commands.ab2"
0003A372 <internal_commands.ab2@784> INCLUDE "internal_commands.ab2"
0003A373 <internal_commands.ab2@785> INCLUDE "internal_commands.ab2"
0003A374 <internal_commands.ab2@786> INCLUDE "internal_commands.ab2"
0003A376 <internal_commands.ab2@788> INCLUDE "internal_commands.ab2"
0003A37A <internal_commands.ab2@789> INCLUDE "internal_commands.ab2"
0003A37C <internal_commands.ab2@790> INCLUDE "internal_commands.ab2"
0003A37E <internal_commands.ab2@791> INCLUDE "internal_commands.ab2"
0003A382 <internal_commands.ab2@792> INCLUDE "internal_commands.ab2"
0003A384 <internal_commands.ab2@793> INCLUDE "internal_commands.ab2"
0003A388 <internal_commands.ab2@797> INCLUDE "internal_commands.ab2"
0003A38A <internal_commands.ab2@798> INCLUDE "internal_commands.ab2"
0003A38F <internal_commands.ab2@799> INCLUDE "internal_commands.ab2"
0003A390 <internal_commands.ab2@800> INCLUDE "internal_commands.ab2"
0003A392 <internal_commands.ab2@803> INCLUDE "internal_commands.ab2"
0003A396 <internal_commands.ab2@804> INCLUDE "internal_commands.ab2"
0003A398 <internal_commands.ab2@805> INCLUDE "internal_commands.ab2"
0003A39A <internal_commands.ab2@806> INCLUDE "internal_commands.ab2"
0003A39E <internal_commands.ab2@807> INCLUDE "internal_commands.ab2"
0003A3A0 <internal_commands.ab2@808> INCLUDE "internal_commands.ab2"
0003A3A4 <internal_commands.ab2@812> INCLUDE "internal_commands.ab2"
0003A3A6 <internal_commands.ab2@813> INCLUDE "internal_commands.ab2"
0003A3AB <internal_commands.ab2@814> INCLUDE "internal_commands.ab2"
0003A3AC <internal_commands.ab2@815> INCLUDE "internal_commands.ab2"
0003A3AE <internal_commands.ab2@818> INCLUDE "internal_commands.ab2"
0003A3B2 <internal_commands.ab2@819> INCLUDE "internal_commands.ab2"
0003A3B4 <internal_commands.ab2@820> INCLUDE "internal_commands.ab2"
0003A3B6 <internal_commands.ab2@821> INCLUDE "internal_commands.ab2"
0003A3BA <internal_commands.ab2@822> INCLUDE "internal_commands.ab2"
0003A3BC <internal_commands.ab2@823> INCLUDE "internal_commands.ab2"
0003A3C0 <internal_commands.ab2@827> INCLUDE "internal_commands.ab2"
0003A3C2 <internal_commands.ab2@828> INCLUDE "internal_commands.ab2"
0003A3C7 <internal_commands.ab2@829> INCLUDE "internal_commands.ab2"
0003A3C8 <internal_commands.ab2@830> INCLUDE "internal_commands.ab2"
0003A3CA <internal_commands.ab2@833> INCLUDE "internal_commands.ab2"
0003A3CE <internal_commands.ab2@834> INCLUDE "internal_commands.ab2"
0003A3D0 <internal_commands.ab2@835> INCLUDE "internal_commands.ab2"
0003A3D2 <internal_commands.ab2@836> INCLUDE "internal_commands.ab2"
0003A3D6 <internal_commands.ab2@837> INCLUDE "internal_commands.ab2"
0003A3D8 <internal_commands.ab2@838> INCLUDE "internal_commands.ab2"
0003A3DC <internal_commands.ab2@842> INCLUDE "internal_commands.ab2"
0003A3DE <internal_commands.ab2@843> INCLUDE "internal_commands.ab2"
0003A3E3 <internal_commands.ab2@844> INCLUDE "internal_commands.ab2"
0003A3E4 <internal_commands.ab2@845> INCLUDE "internal_commands.ab2"
0003A3E6 <internal_commands.ab2@848> INCLUDE "internal_commands.ab2"
0003A3EA <internal_commands.ab2@849> INCLUDE "internal_commands.ab2"
0003A3EC <internal_commands.ab2@850> INCLUDE "internal_commands.ab2"
0003A3EE <internal_commands.ab2@851> INCLUDE "internal_commands.ab2"
0003A3F2 <internal_commands.ab2@852> INCLUDE "internal_commands.ab2"
0003A3F4 <internal_commands.ab2@853> INCLUDE "internal_commands.ab2"
0003A3F8 <internal_commands.ab2@857> INCLUDE "internal_commands.ab2"
0003A3FA <internal_commands.ab2@858> INCLUDE "internal_commands.ab2"
0003A3FE <internal_commands.ab2@859> INCLUDE "internal_commands.ab2"
0003A3FF <internal_commands.ab2@860> INCLUDE "internal_commands.ab2"
0003A400 <internal_commands.ab2@861> INCLUDE "internal_commands.ab2"
0003A402 <internal_commands.ab2@863> INCLUDE "internal_commands.ab2"
0003A406 <internal_commands.ab2@864> INCLUDE "internal_commands.ab2"
0003A408 <internal_commands.ab2@865> INCLUDE "internal_commands.ab2"
0003A40A <internal_commands.ab2@866> INCLUDE "internal_commands.ab2"
0003A40E <internal_commands.ab2@867> INCLUDE "internal_commands.ab2"
0003A410 <internal_commands.ab2@868> INCLUDE "internal_commands.ab2"
0003A414 <internal_commands.ab2@872> INCLUDE "internal_commands.ab2"
0003A416 <internal_commands.ab2@873> INCLUDE "internal_commands.ab2"
0003A41A <internal_commands.ab2@874> INCLUDE "internal_commands.ab2"
0003A41B <internal_commands.ab2@875> INCLUDE "internal_commands.ab2"
0003A41C <internal_commands.ab2@876> INCLUDE "internal_commands.ab2"
0003A41E <internal_commands.ab2@878> INCLUDE "internal_commands.ab2"
0003A422 <internal_commands.ab2@879> INCLUDE "internal_commands.ab2"
0003A424 <internal_commands.ab2@880> INCLUDE "internal_commands.ab2"
0003A426 <internal_commands.ab2@881> INCLUDE "internal_commands.ab2"
0003A42A <internal_commands.ab2@882> INCLUDE "internal_commands.ab2"
0003A42C <internal_commands.ab2@883> INCLUDE "internal_commands.ab2"
0003A430 <internal_commands.ab2@887> INCLUDE "internal_commands.ab2"
0003A432 <internal_commands.ab2@888> INCLUDE "internal_commands.ab2"
0003A436 <internal_commands.ab2@889> INCLUDE "internal_commands.ab2"
0003A437 <internal_commands.ab2@890> INCLUDE "internal_commands.ab2"
0003A438 <internal_commands.ab2@891> INCLUDE "internal_commands.ab2"
0003A43A <internal_commands.ab2@893> INCLUDE "internal_commands.ab2"
0003A43E <internal_commands.ab2@894> INCLUDE "internal_commands.ab2"
0003A440 <internal_commands.ab2@895> INCLUDE "internal_commands.ab2"
0003A442 <internal_commands.ab2@896> INCLUDE "internal_commands.ab2"
0003A446 <internal_commands.ab2@897> INCLUDE "internal_commands.ab2"
0003A448 <internal_commands.ab2@898> INCLUDE "internal_commands.ab2"
0003A44C <internal_commands.ab2@902> INCLUDE "internal_commands.ab2"
0003A44E <internal_commands.ab2@903> INCLUDE "internal_commands.ab2"
0003A452 <internal_commands.ab2@904> INCLUDE "internal_commands.ab2"
0003A453 <internal_commands.ab2@905> INCLUDE "internal_commands.ab2"
0003A454 <internal_commands.ab2@906> INCLUDE "internal_commands.ab2"
0003A456 <internal_commands.ab2@908> INCLUDE "internal_commands.ab2"
0003A45A <internal_commands.ab2@909> INCLUDE "internal_commands.ab2"
0003A45C <internal_commands.ab2@910> INCLUDE "internal_commands.ab2"
0003A45E <internal_commands.ab2@911> INCLUDE "internal_commands.ab2"
0003A462 <internal_commands.ab2@912> INCLUDE "internal_commands.ab2"
0003A464 <internal_commands.ab2@913> INCLUDE "internal_commands.ab2"
0003A468 <internal_commands.ab2@917> INCLUDE "internal_commands.ab2"
0003A46A <internal_commands.ab2@918> INCLUDE "internal_commands.ab2"
0003A46E <internal_commands.ab2@919> INCLUDE "internal_commands.ab2"
0003A46F <internal_commands.ab2@920> INCLUDE "internal_commands.ab2"
0003A470 <internal_commands.ab2@921> INCLUDE "internal_commands.ab2"
0003A472 <internal_commands.ab2@923> INCLUDE "internal_commands.ab2"
0003A476 <internal_commands.ab2@924> INCLUDE "internal_commands.ab2"
0003A478 <internal_commands.ab2@925> INCLUDE "internal_commands.ab2"
0003A47A <internal_commands.ab2@926> INCLUDE "internal_commands.ab2"
0003A47E <internal_commands.ab2@927> INCLUDE "internal_commands.ab2"
0003A480 <internal_commands.ab2@928> INCLUDE "internal_commands.ab2"
0003A484 <internal_commands.ab2@932> INCLUDE "internal_commands.ab2"
0003A486 <internal_commands.ab2@933> INCLUDE "internal_commands.ab2"
0003A48B <internal_commands.ab2@934> INCLUDE "internal_commands.ab2"
0003A48C <internal_commands.ab2@935> INCLUDE "internal_commands.ab2"
0003A48E <internal_commands.ab2@938> INCLUDE "internal_commands.ab2"
0003A492 <internal_commands.ab2@939> INCLUDE "internal_commands.ab2"
0003A494 <internal_commands.ab2@940> INCLUDE "internal_commands.ab2"
0003A496 <internal_commands.ab2@941> INCLUDE "internal_commands.ab2"
0003A49A <internal_commands.ab2@942> INCLUDE "internal_commands.ab2"
0003A49C <internal_commands.ab2@943> INCLUDE "internal_commands.ab2"
0003A4A0 <internal_commands.ab2@947> INCLUDE "internal_commands.ab2"
0003A4A2 <internal_commands.ab2@948> INCLUDE "internal_commands.ab2"
0003A4A7 <internal_commands.ab2@949> INCLUDE "internal_commands.ab2"
0003A4A8 <internal_commands.ab2@950> INCLUDE "internal_commands.ab2"
0003A4AA <internal_commands.ab2@953> INCLUDE "internal_commands.ab2"
0003A4AE <internal_commands.ab2@954> INCLUDE "internal_commands.ab2"
0003A4B0 <internal_commands.ab2@955> INCLUDE "internal_commands.ab2"
0003A4B2 <internal_commands.ab2@956> INCLUDE "internal_commands.ab2"
0003A4B6 <internal_commands.ab2@957> INCLUDE "internal_commands.ab2"
0003A4B8 <internal_commands.ab2@958> INCLUDE "internal_commands.ab2"
0003A4BC <internal_commands.ab2@962> INCLUDE "internal_commands.ab2"
0003A4BE <internal_commands.ab2@963> INCLUDE "internal_commands.ab2"
0003A4C3 <internal_commands.ab2@964> INCLUDE "internal_commands.ab2"
0003A4C4 <internal_commands.ab2@965> INCLUDE "internal_commands.ab2"
0003A4C6 <internal_commands.ab2@968> INCLUDE "internal_commands.ab2"
0003A4CA <internal_commands.ab2@969> INCLUDE "internal_commands.ab2"
0003A4CC <internal_commands.ab2@970> INCLUDE "internal_commands.ab2"
0003A4CE <internal_commands.ab2@971> INCLUDE "internal_commands.ab2"
0003A4D2 <internal_commands.ab2@972> INCLUDE "internal_commands.ab2"
0003A4D4 <internal_commands.ab2@973> INCLUDE "internal_commands.ab2"
0003A4D8 <internal_commands.ab2@977> INCLUDE "internal_commands.ab2"
0003A4DA <internal_commands.ab2@978> INCLUDE "internal_commands.ab2"
0003A4DF <internal_commands.ab2@979> INCLUDE "internal_commands.ab2"
0003A4E0 <internal_commands.ab2@980> INCLUDE "internal_commands.ab2"
0003A4E2 <internal_commands.ab2@983> INCLUDE "internal_commands.ab2"
0003A4E6 <internal_commands.ab2@984> INCLUDE "internal_commands.ab2"
0003A4E8 <internal_commands.ab2@985> INCLUDE "internal_commands.ab2"
0003A4EA <internal_commands.ab2@986> INCLUDE "internal_commands.ab2"
0003A4EE <internal_commands.ab2@987> INCLUDE "internal_commands.ab2"
0003A4F0 <internal_commands.ab2@988> INCLUDE "internal_commands.ab2"
0003A4F4 <internal_commands.ab2@992> INCLUDE "internal_commands.ab2"
0003A4F6 <internal_commands.ab2@993> INCLUDE "internal_commands.ab2"
0003A4FB <internal_commands.ab2@994> INCLUDE "internal_commands.ab2"
0003A4FC <internal_commands.ab2@995> INCLUDE "internal_commands.ab2"
0003A4FE <internal_commands.ab2@998> INCLUDE "internal_commands.ab2"
0003A502 <internal_commands.ab2@999> INCLUDE "internal_commands.ab2"
0003A504 <internal_commands.ab2@1000> INCLUDE "internal_commands.ab2"
0003A506 <internal_commands.ab2@1001> INCLUDE "internal_commands.ab2"
0003A50A <internal_commands.ab2@1002> INCLUDE "internal_commands.ab2"
0003A50C <internal_commands.ab2@1003> INCLUDE "internal_commands.ab2"
0003A510 <internal_commands.ab2@1007> INCLUDE "internal_commands.ab2"
0003A512 <internal_commands.ab2@1008> INCLUDE "internal_commands.ab2"
0003A517 <internal_commands.ab2@1009> INCLUDE "internal_commands.ab2"
0003A518 <internal_commands.ab2@1010> INCLUDE "internal_commands.ab2"
0003A51A <internal_commands.ab2@1013> INCLUDE "internal_commands.ab2"
0003A51E <internal_commands.ab2@1014> INCLUDE "internal_commands.ab2"
0003A520 <internal_commands.ab2@1015> INCLUDE "internal_commands.ab2"
0003A522 <internal_commands.ab2@1016> INCLUDE "internal_commands.ab2"
0003A526 <internal_commands.ab2@1017> INCLUDE "internal_commands.ab2"
0003A528 <internal_commands.ab2@1018> INCLUDE "internal_commands.ab2"
0003A52C <internal_commands.ab2@1022> INCLUDE "internal_commands.ab2"
0003A52E <internal_commands.ab2@1023> INCLUDE "internal_commands.ab2"
0003A533 <internal_commands.ab2@1024> INCLUDE "internal_commands.ab2"
0003A534 <internal_commands.ab2@1025> INCLUDE "internal_commands.ab2"
0003A536 <internal_commands.ab2@1028> INCLUDE "internal_commands.ab2"
0003A53A <internal_commands.ab2@1029> INCLUDE "internal_commands.ab2"
0003A53C <internal_commands.ab2@1030> INCLUDE "internal_commands.ab2"
0003A53E <internal_commands.ab2@1031> INCLUDE "internal_commands.ab2"
0003A542 <internal_commands.ab2@1032> INCLUDE "internal_commands.ab2"
0003A544 <internal_commands.ab2@1033> INCLUDE "internal_commands.ab2"
0003A548 <internal_commands.ab2@1037> INCLUDE "internal_commands.ab2"
0003A54A <internal_commands.ab2@1038> INCLUDE "internal_commands.ab2"
0003A54F <internal_commands.ab2@1039> INCLUDE "internal_commands.ab2"
0003A550 <internal_commands.ab2@1040> INCLUDE "internal_commands.ab2"
0003A552 <internal_commands.ab2@1043> INCLUDE "internal_commands.ab2"
0003A556 <internal_commands.ab2@1044> INCLUDE "internal_commands.ab2"
0003A558 <internal_commands.ab2@1045> INCLUDE "internal_commands.ab2"
0003A55A <internal_commands.ab2@1046> INCLUDE "internal_commands.ab2"
0003A55E <internal_commands.ab2@1047> INCLUDE "internal_commands.ab2"
0003A560 <internal_commands.ab2@1048> INCLUDE "internal_commands.ab2"
0003A564 <internal_commands.ab2@1052> INCLUDE "internal_commands.ab2"
0003A566 <internal_commands.ab2@1053> INCLUDE "internal_commands.ab2"
0003A56B <internal_commands.ab2@1054> INCLUDE "internal_commands.ab2"
0003A56C <internal_commands.ab2@1055> INCLUDE "internal_commands.ab2"
0003A56E <internal_commands.ab2@1058> INCLUDE "internal_commands.ab2"
0003A572 <internal_commands.ab2@1059> INCLUDE "internal_commands.ab2"
0003A574 <internal_commands.ab2@1060> INCLUDE "internal_commands.ab2"
0003A576 <internal_commands.ab2@1061> INCLUDE "internal_commands.ab2"
0003A57A <internal_commands.ab2@1062> INCLUDE "internal_commands.ab2"
0003A57C <internal_commands.ab2@1063> INCLUDE "internal_commands.ab2"
0003A580 <internal_commands.ab2@1067> INCLUDE "internal_commands.ab2"
0003A582 <internal_commands.ab2@1068> INCLUDE "internal_commands.ab2"
0003A587 <internal_commands.ab2@1069> INCLUDE "internal_commands.ab2"
0003A588 <internal_commands.ab2@1070> INCLUDE "internal_commands.ab2"
0003A58A <internal_commands.ab2@1073> INCLUDE "internal_commands.ab2"
0003A58E <internal_commands.ab2@1074> INCLUDE "internal_commands.ab2"
0003A590 <internal_commands.ab2@1075> INCLUDE "internal_commands.ab2"
0003A592 <internal_commands.ab2@1076> INCLUDE "internal_commands.ab2"
0003A596 <internal_commands.ab2@1077> INCLUDE "internal_commands.ab2"
0003A598 <internal_commands.ab2@1078> INCLUDE "internal_commands.ab2"
0003A59C <internal_commands.ab2@1082> INCLUDE "internal_commands.ab2"
0003A59E <internal_commands.ab2@1083> INCLUDE "internal_commands.ab2"
0003A5A3 <internal_commands.ab2@1084> INCLUDE "internal_commands.ab2"
0003A5A4 <internal_commands.ab2@1085> INCLUDE "internal_commands.ab2"
0003A5A6 <internal_commands.ab2@1088> INCLUDE "internal_commands.ab2"
0003A5AA <internal_commands.ab2@1089> INCLUDE "internal_commands.ab2"
0003A5AC <internal_commands.ab2@1090> INCLUDE "internal_commands.ab2"
0003A5AE <internal_commands.ab2@1091> INCLUDE "internal_commands.ab2"
0003A5B2 <internal_commands.ab2@1092> INCLUDE "internal_commands.ab2"
0003A5B4 <internal_commands.ab2@1093> INCLUDE "internal_commands.ab2"
0003A5B8 <internal_commands.ab2@1097> INCLUDE "internal_commands.ab2"
0003A5BA <internal_commands.ab2@1098> INCLUDE "internal_commands.ab2"
0003A5BF <internal_commands.ab2@1099> INCLUDE "internal_commands.ab2"
0003A5C0 <internal_commands.ab2@1100> INCLUDE "internal_commands.ab2"
0003A5C2 <internal_commands.ab2@1103> INCLUDE "internal_commands.ab2"
0003A5C6 <internal_commands.ab2@1104> INCLUDE "internal_commands.ab2"
0003A5C8 <internal_commands.ab2@1105> INCLUDE "internal_commands.ab2"
0003A5CA <internal_commands.ab2@1106> INCLUDE "internal_commands.ab2"
0003A5CE <internal_commands.ab2@1107> INCLUDE "internal_commands.ab2"
0003A5D0 <internal_commands.ab2@1108> INCLUDE "internal_commands.ab2"
0003A5D4 <internal_commands.ab2@1112> INCLUDE "internal_commands.ab2"
0003A5D6 <internal_commands.ab2@1113> INCLUDE "internal_commands.ab2"
0003A5DB <internal_commands.ab2@1114> INCLUDE "internal_commands.ab2"
0003A5DC <internal_commands.ab2@1115> INCLUDE "internal_commands.ab2"
0003A5DE <internal_commands.ab2@1118> INCLUDE "internal_commands.ab2"
0003A5E2 <internal_commands.ab2@1119> INCLUDE "internal_commands.ab2"
0003A5E4 <internal_commands.ab2@1120> INCLUDE "internal_commands.ab2"
0003A5E6 <internal_commands.ab2@1121> INCLUDE "internal_commands.ab2"
0003A5EA <internal_commands.ab2@1122> INCLUDE "internal_commands.ab2"
0003A5EC <internal_commands.ab2@1123> INCLUDE "internal_commands.ab2"
0003A5F0 <internal_commands.ab2@1127> INCLUDE "internal_commands.ab2"
0003A5F2 <internal_commands.ab2@1128> INCLUDE "internal_commands.ab2"
0003A5F7 <internal_commands.ab2@1129> INCLUDE "internal_commands.ab2"
0003A5F8 <internal_commands.ab2@1130> INCLUDE "internal_commands.ab2"
0003A5FA <internal_commands.ab2@1133> INCLUDE "internal_commands.ab2"
0003A5FE <internal_commands.ab2@1134> INCLUDE "internal_commands.ab2"
0003A600 <internal_commands.ab2@1135> INCLUDE "internal_commands.ab2"
0003A602 <internal_commands.ab2@1136> INCLUDE "internal_commands.ab2"
0003A606 <internal_commands.ab2@1137> INCLUDE "internal_commands.ab2"
0003A608 <internal_commands.ab2@1138> INCLUDE "internal_commands.ab2"
0003A60C <internal_commands.ab2@1142> INCLUDE "internal_commands.ab2"
0003A60E <internal_commands.ab2@1143> INCLUDE "internal_commands.ab2"
0003A613 <internal_commands.ab2@1144> INCLUDE "internal_commands.ab2"
0003A614 <internal_commands.ab2@1145> INCLUDE "internal_commands.ab2"
0003A616 <internal_commands.ab2@1148> INCLUDE "internal_commands.ab2"
0003A61A <internal_commands.ab2@1149> INCLUDE "internal_commands.ab2"
0003A61C <internal_commands.ab2@1150> INCLUDE "internal_commands.ab2"
0003A61E <internal_commands.ab2@1151> INCLUDE "internal_commands.ab2"
0003A622 <internal_commands.ab2@1152> INCLUDE "internal_commands.ab2"
0003A624 <internal_commands.ab2@1153> INCLUDE "internal_commands.ab2"
0003A628 <internal_commands.ab2@1157> INCLUDE "internal_commands.ab2"
0003A62A <internal_commands.ab2@1158> INCLUDE "internal_commands.ab2"
0003A62F <internal_commands.ab2@1159> INCLUDE "internal_commands.ab2"
0003A630 <internal_commands.ab2@1160> INCLUDE "internal_commands.ab2"
0003A632 <internal_commands.ab2@1163> INCLUDE "internal_commands.ab2"
0003A636 <internal_commands.ab2@1164> INCLUDE "internal_commands.ab2"
0003A638 <internal_commands.ab2@1165> INCLUDE "internal_commands.ab2"
0003A63A <internal_commands.ab2@1166> INCLUDE "internal_commands.ab2"
0003A63E <internal_commands.ab2@1167> INCLUDE "internal_commands.ab2"
0003A640 <internal_commands.ab2@1168> INCLUDE "internal_commands.ab2"
0003A644 <internal_commands.ab2@1172> INCLUDE "internal_commands.ab2"
0003A646 <internal_commands.ab2@1173> INCLUDE "internal_commands.ab2"
0003A64B <internal_commands.ab2@1174> INCLUDE "internal_commands.ab2"
0003A64C <internal_commands.ab2@1175> INCLUDE "internal_commands.ab2"
0003A64E <internal_commands.ab2@1178> INCLUDE "internal_commands.ab2"
0003A652 <internal_commands.ab2@1179> INCLUDE "internal_commands.ab2"
0003A654 <internal_commands.ab2@1180> INCLUDE "internal_commands.ab2"
0003A656 <internal_commands.ab2@1181> INCLUDE "internal_commands.ab2"
0003A65A <internal_commands.ab2@1182> INCLUDE "internal_commands.ab2"
0003A65C <internal_commands.ab2@1183> INCLUDE "internal_commands.ab2"
0003A660 <internal_commands.ab2@1186> INCLUDE "internal_commands.ab2"
0003A662 <internal_commands.ab2@1187> INCLUDE "internal_commands.ab2"
0003A666 <internal_commands.ab2@1188> INCLUDE "internal_commands.ab2"
0003A667 <internal_commands.ab2@1189> INCLUDE "internal_commands.ab2"
0003A668 <internal_commands.ab2@1190> INCLUDE "internal_commands.ab2"
0003A66A <internal_commands.ab2@1192> INCLUDE "internal_commands.ab2"
0003A66E <internal_commands.ab2@1193> INCLUDE "internal_commands.ab2"
0003A670 <internal_commands.ab2@1194> INCLUDE "internal_commands.ab2"
0003A672 <internal_commands.ab2@1195> INCLUDE "internal_commands.ab2"
0003A676 <internal_commands.ab2@1196> INCLUDE "internal_commands.ab2"
0003A678 <internal_commands.ab2@1197> INCLUDE "internal_commands.ab2"
0003A67C <internal_commands.ab2@1201> INCLUDE "internal_commands.ab2"
0003A67E <internal_commands.ab2@1202> INCLUDE "internal_commands.ab2"
0003A683 <internal_commands.ab2@1203> INCLUDE "internal_commands.ab2"
0003A684 <internal_commands.ab2@1204> INCLUDE "internal_commands.ab2"
0003A686 <internal_commands.ab2@1207> INCLUDE "internal_commands.ab2"
0003A68A <internal_commands.ab2@1208> INCLUDE "internal_commands.ab2"
0003A68C <internal_commands.ab2@1209> INCLUDE "internal_commands.ab2"
0003A68E <internal_commands.ab2@1210> INCLUDE "internal_commands.ab2"
0003A692 <internal_commands.ab2@1211> INCLUDE "internal_commands.ab2"
0003A694 <internal_commands.ab2@1212> INCLUDE "internal_commands.ab2"
0003A698 <internal_commands.ab2@1216> INCLUDE "internal_commands.ab2"
0003A69A <internal_commands.ab2@1217> INCLUDE "internal_commands.ab2"
0003A69E <internal_commands.ab2@1218> INCLUDE "internal_commands.ab2"
0003A69F <internal_commands.ab2@1219> INCLUDE "internal_commands.ab2"
0003A6A0 <internal_commands.ab2@1220> INCLUDE "internal_commands.ab2"
0003A6A2 <internal_commands.ab2@1222> INCLUDE "internal_commands.ab2"
0003A6A6 <internal_commands.ab2@1223> INCLUDE "internal_commands.ab2"
0003A6A8 <internal_commands.ab2@1224> INCLUDE "internal_commands.ab2"
0003A6AA <internal_commands.ab2@1225> INCLUDE "internal_commands.ab2"
0003A6AE <internal_commands.ab2@1226> INCLUDE "internal_commands.ab2"
0003A6B0 <internal_commands.ab2@1227> INCLUDE "internal_commands.ab2"
0003A6B4 <internal_commands.ab2@1231> INCLUDE "internal_commands.ab2"
0003A6B6 <internal_commands.ab2@1232> INCLUDE "internal_commands.ab2"
0003A6BB <internal_commands.ab2@1233> INCLUDE "internal_commands.ab2"
0003A6BC <internal_commands.ab2@1234> INCLUDE "internal_commands.ab2"
0003A6BE <internal_commands.ab2@1237> INCLUDE "internal_commands.ab2"
0003A6C2 <internal_commands.ab2@1238> INCLUDE "internal_commands.ab2"
0003A6C4 <internal_commands.ab2@1239> INCLUDE "internal_commands.ab2"
0003A6C6 <internal_commands.ab2@1240> INCLUDE "internal_commands.ab2"
0003A6CA <internal_commands.ab2@1241> INCLUDE "internal_commands.ab2"
0003A6CC <internal_commands.ab2@1242> INCLUDE "internal_commands.ab2"
0003A6D0 <internal_commands.ab2@1246> INCLUDE "internal_commands.ab2"
0003A6D2 <internal_commands.ab2@1247> INCLUDE "internal_commands.ab2"
0003A6D7 <internal_commands.ab2@1248> INCLUDE "internal_commands.ab2"
0003A6D8 <internal_commands.ab2@1249> INCLUDE "internal_commands.ab2"
0003A6DA <internal_commands.ab2@1252> INCLUDE "internal_commands.ab2"
0003A6DE <internal_commands.ab2@1253> INCLUDE "internal_commands.ab2"
0003A6E0 <internal_commands.ab2@1254> INCLUDE "internal_commands.ab2"
0003A6E2 <internal_commands.ab2@1255> INCLUDE "internal_commands.ab2"
0003A6E6 <internal_commands.ab2@1256> INCLUDE "internal_commands.ab2"
0003A6E8 <internal_commands.ab2@1257> INCLUDE "internal_commands.ab2"
0003A6EC <internal_commands.ab2@1261> INCLUDE "internal_commands.ab2"
0003A6EE <internal_commands.ab2@1262> INCLUDE "internal_commands.ab2"
0003A6F2 <internal_commands.ab2@1263> INCLUDE "internal_commands.ab2"
0003A6F3 <internal_commands.ab2@1264> INCLUDE "internal_commands.ab2"
0003A6F4 <internal_commands.ab2@1265> INCLUDE "internal_commands.ab2"
0003A6F6 <internal_commands.ab2@1267> INCLUDE "internal_commands.ab2"
0003A6FA <internal_commands.ab2@1268> INCLUDE "internal_commands.ab2"
0003A6FC <internal_commands.ab2@1269> INCLUDE "internal_commands.ab2"
0003A6FE <internal_commands.ab2@1270> INCLUDE "internal_commands.ab2"
0003A702 <internal_commands.ab2@1271> INCLUDE "internal_commands.ab2"
0003A704 <internal_commands.ab2@1272> INCLUDE "internal_commands.ab2"
0003A708 <internal_commands.ab2@1276> INCLUDE "internal_commands.ab2"
0003A70A <internal_commands.ab2@1277> INCLUDE "internal_commands.ab2"
0003A70F <internal_commands.ab2@1278> INCLUDE "internal_commands.ab2"
0003A710 <internal_commands.ab2@1279> INCLUDE "internal_commands.ab2"
0003A712 <internal_commands.ab2@1282> INCLUDE "internal_commands.ab2"
0003A716 <internal_commands.ab2@1283> INCLUDE "internal_commands.ab2"
0003A718 <internal_commands.ab2@1284> INCLUDE "internal_commands.ab2"
0003A71A <internal_commands.ab2@1285> INCLUDE "internal_commands.ab2"
0003A71E <internal_commands.ab2@1286> INCLUDE "internal_commands.ab2"
0003A720 <internal_commands.ab2@1287> INCLUDE "internal_commands.ab2"
0003A724 <internal_commands.ab2@1291> INCLUDE "internal_commands.ab2"
0003A726 <internal_commands.ab2@1292> INCLUDE "internal_commands.ab2"
0003A72A <internal_commands.ab2@1293> INCLUDE "internal_commands.ab2"
0003A72B <internal_commands.ab2@1294> INCLUDE "internal_commands.ab2"
0003A72C <internal_commands.ab2@1295> INCLUDE "internal_commands.ab2"
0003A72E <internal_commands.ab2@1297> INCLUDE "internal_commands.ab2"
0003A732 <internal_commands.ab2@1298> INCLUDE "internal_commands.ab2"
0003A734 <internal_commands.ab2@1299> INCLUDE "internal_commands.ab2"
0003A736 <internal_commands.ab2@1300> INCLUDE "internal_commands.ab2"
0003A73A <internal_commands.ab2@1301> INCLUDE "internal_commands.ab2"
0003A73C <internal_commands.ab2@1302> INCLUDE "internal_commands.ab2"
0003A740 <internal_commands.ab2@1306> INCLUDE "internal_commands.ab2"
0003A742 <internal_commands.ab2@1307> INCLUDE "internal_commands.ab2"
0003A746 <internal_commands.ab2@1308> INCLUDE "internal_commands.ab2"
0003A747 <internal_commands.ab2@1309> INCLUDE "internal_commands.ab2"
0003A748 <internal_commands.ab2@1310> INCLUDE "internal_commands.ab2"
0003A74A <internal_commands.ab2@1312> INCLUDE "internal_commands.ab2"
0003A74E <internal_commands.ab2@1313> INCLUDE "internal_commands.ab2"
0003A750 <internal_commands.ab2@1314> INCLUDE "internal_commands.ab2"
0003A752 <internal_commands.ab2@1315> INCLUDE "internal_commands.ab2"
0003A756 <internal_commands.ab2@1316> INCLUDE "internal_commands.ab2"
0003A758 <internal_commands.ab2@1317> INCLUDE "internal_commands.ab2"
0003A75C <internal_commands.ab2@1321> INCLUDE "internal_commands.ab2"
0003A75E <internal_commands.ab2@1322> INCLUDE "internal_commands.ab2"
0003A766 <internal_commands.ab2@1323> INCLUDE "internal_commands.ab2"
0003A767 <internal_commands.ab2@1324> INCLUDE "internal_commands.ab2"
0003A768 <internal_commands.ab2@1325> INCLUDE "internal_commands.ab2"
0003A76A <internal_commands.ab2@1327> INCLUDE "internal_commands.ab2"
0003A76E <internal_commands.ab2@1328> INCLUDE "internal_commands.ab2"
0003A770 <internal_commands.ab2@1329> INCLUDE "internal_commands.ab2"
0003A772 <internal_commands.ab2@1330> INCLUDE "internal_commands.ab2"
0003A776 <internal_commands.ab2@1331> INCLUDE "internal_commands.ab2"
0003A778 <internal_commands.ab2@1332> INCLUDE "internal_commands.ab2"
0003A77C <internal_commands.ab2@1336> INCLUDE "internal_commands.ab2"
0003A77E <internal_commands.ab2@1337> INCLUDE "internal_commands.ab2"
0003A782 <internal_commands.ab2@1338> INCLUDE "internal_commands.ab2"
0003A783 <internal_commands.ab2@1339> INCLUDE "internal_commands.ab2"
0003A784 <internal_commands.ab2@1340> INCLUDE "internal_commands.ab2"
0003A786 <internal_commands.ab2@1342> INCLUDE "internal_commands.ab2"
0003A78A <internal_commands.ab2@1343> INCLUDE "internal_commands.ab2"
0003A78C <internal_commands.ab2@1344> INCLUDE "internal_commands.ab2"
0003A78E <internal_commands.ab2@1345> INCLUDE "internal_commands.ab2"
0003A792 <internal_commands.ab2@1346> INCLUDE "internal_commands.ab2"
0003A794 <internal_commands.ab2@1347> INCLUDE "internal_commands.ab2"
0003A798 <internal_commands.ab2@1351> INCLUDE "internal_commands.ab2"
0003A79A <internal_commands.ab2@1352> INCLUDE "internal_commands.ab2"
0003A79E <internal_commands.ab2@1353> INCLUDE "internal_commands.ab2"
0003A79F <internal_commands.ab2@1354> INCLUDE "internal_commands.ab2"
0003A7A0 <internal_commands.ab2@1355> INCLUDE "internal_commands.ab2"
0003A7A2 <internal_commands.ab2@1357> INCLUDE "internal_commands.ab2"
0003A7A6 <internal_commands.ab2@1358> INCLUDE "internal_commands.ab2"
0003A7A8 <internal_commands.ab2@1359> INCLUDE "internal_commands.ab2"
0003A7AA <internal_commands.ab2@1360> INCLUDE "internal_commands.ab2"
0003A7AE <internal_commands.ab2@1361> INCLUDE "internal_commands.ab2"
0003A7B0 <internal_commands.ab2@1362> INCLUDE "internal_commands.ab2"
0003A7B4 <internal_commands.ab2@1366> INCLUDE "internal_commands.ab2"
0003A7B6 <internal_commands.ab2@1367> INCLUDE "internal_commands.ab2"
0003A7BA <internal_commands.ab2@1368> INCLUDE "internal_commands.ab2"
0003A7BB <internal_commands.ab2@1369> INCLUDE "internal_commands.ab2"
0003A7BC <internal_commands.ab2@1370> INCLUDE "internal_commands.ab2"
0003A7BE <internal_commands.ab2@1372> INCLUDE "internal_commands.ab2"
0003A7C2 <internal_commands.ab2@1373> INCLUDE "internal_commands.ab2"
0003A7C4 <internal_commands.ab2@1374> INCLUDE "internal_commands.ab2"
0003A7C6 <internal_commands.ab2@1375> INCLUDE "internal_commands.ab2"
0003A7CA <internal_commands.ab2@1376> INCLUDE "internal_commands.ab2"
0003A7CC <internal_commands.ab2@1377> INCLUDE "internal_commands.ab2"
0003A7D0 <internal_commands.ab2@1381> INCLUDE "internal_commands.ab2"
0003A7D2 <internal_commands.ab2@1382> INCLUDE "internal_commands.ab2"
0003A7D7 <internal_commands.ab2@1383> INCLUDE "internal_commands.ab2"
0003A7D8 <internal_commands.ab2@1384> INCLUDE "internal_commands.ab2"
0003A7DA <internal_commands.ab2@1387> INCLUDE "internal_commands.ab2"
0003A7DE <internal_commands.ab2@1388> INCLUDE "internal_commands.ab2"
0003A7E0 <internal_commands.ab2@1389> INCLUDE "internal_commands.ab2"
0003A7E2 <internal_commands.ab2@1390> INCLUDE "internal_commands.ab2"
0003A7E6 <internal_commands.ab2@1391> INCLUDE "internal_commands.ab2"
0003A7E8 <internal_commands.ab2@1392> INCLUDE "internal_commands.ab2"
0003A7EC <internal_commands.ab2@1396> INCLUDE "internal_commands.ab2"
0003A7EE <internal_commands.ab2@1397> INCLUDE "internal_commands.ab2"
0003A7F2 <internal_commands.ab2@1398> INCLUDE "internal_commands.ab2"
0003A7F3 <internal_commands.ab2@1399> INCLUDE "internal_commands.ab2"
0003A7F4 <internal_commands.ab2@1400> INCLUDE "internal_commands.ab2"
0003A7F6 <internal_commands.ab2@1402> INCLUDE "internal_commands.ab2"
0003A7FA <internal_commands.ab2@1403> INCLUDE "internal_commands.ab2"
0003A7FC <internal_commands.ab2@1404> INCLUDE "internal_commands.ab2"
0003A7FE <internal_commands.ab2@1405> INCLUDE "internal_commands.ab2"
0003A802 <internal_commands.ab2@1406> INCLUDE "internal_commands.ab2"
0003A804 <internal_commands.ab2@1407> INCLUDE "internal_commands.ab2"
0003A808 <internal_commands.ab2@1411> INCLUDE "internal_commands.ab2"
0003A80A <internal_commands.ab2@1412> INCLUDE "internal_commands.ab2"
0003A80E <internal_commands.ab2@1413> INCLUDE "internal_commands.ab2"
0003A80F <internal_commands.ab2@1414> INCLUDE "internal_commands.ab2"
0003A810 <internal_commands.ab2@1415> INCLUDE "internal_commands.ab2"
0003A812 <internal_commands.ab2@1417> INCLUDE "internal_commands.ab2"
0003A816 <internal_commands.ab2@1418> INCLUDE "internal_commands.ab2"
0003A818 <internal_commands.ab2@1419> INCLUDE "internal_commands.ab2"
0003A81A <internal_commands.ab2@1420> INCLUDE "internal_commands.ab2"
0003A81E <internal_commands.ab2@1421> INCLUDE "internal_commands.ab2"
0003A820 <internal_commands.ab2@1422> INCLUDE "internal_commands.ab2"
0003A824 <internal_commands.ab2@1426> INCLUDE "internal_commands.ab2"
0003A826 <internal_commands.ab2@1427> INCLUDE "internal_commands.ab2"
0003A82B <internal_commands.ab2@1428> INCLUDE "internal_commands.ab2"
0003A82C <internal_commands.ab2@1429> INCLUDE "internal_commands.ab2"
0003A82E <internal_commands.ab2@1432> INCLUDE "internal_commands.ab2"
0003A832 <internal_commands.ab2@1433> INCLUDE "internal_commands.ab2"
0003A834 <internal_commands.ab2@1434> INCLUDE "internal_commands.ab2"
0003A836 <internal_commands.ab2@1435> INCLUDE "internal_commands.ab2"
0003A83A <internal_commands.ab2@1436> INCLUDE "internal_commands.ab2"
0003A83C <internal_commands.ab2@1437> INCLUDE "internal_commands.ab2"
0003A840 <internal_commands.ab2@1441> INCLUDE "internal_commands.ab2"
0003A842 <internal_commands.ab2@1442> INCLUDE "internal_commands.ab2"
0003A847 <internal_commands.ab2@1443> INCLUDE "internal_commands.ab2"
0003A848 <internal_commands.ab2@1444> INCLUDE "internal_commands.ab2"
0003A84A <internal_commands.ab2@1447> INCLUDE "internal_commands.ab2"
0003A84E <internal_commands.ab2@1448> INCLUDE "internal_commands.ab2"
0003A850 <internal_commands.ab2@1449> INCLUDE "internal_commands.ab2"
0003A852 <internal_commands.ab2@1450> INCLUDE "internal_commands.ab2"
0003A856 <internal_commands.ab2@1451> INCLUDE "internal_commands.ab2"
0003A858 <internal_commands.ab2@1452> INCLUDE "internal_commands.ab2"
0003A85C <internal_commands.ab2@1457> INCLUDE "internal_commands.ab2"
0003A85E <internal_commands.ab2@1458> INCLUDE "internal_commands.ab2"
0003A864 <internal_commands.ab2@1459> INCLUDE "internal_commands.ab2"
0003A865 <internal_commands.ab2@1460> INCLUDE "internal_commands.ab2"
0003A866 <internal_commands.ab2@1461> INCLUDE "internal_commands.ab2"
0003A868 <internal_commands.ab2@1463> INCLUDE "internal_commands.ab2"
0003A86C <internal_commands.ab2@1464> INCLUDE "internal_commands.ab2"
0003A86E <internal_commands.ab2@1465> INCLUDE "internal_commands.ab2"
0003A870 <internal_commands.ab2@1466> INCLUDE "internal_commands.ab2"
0003A874 <internal_commands.ab2@1467> INCLUDE "internal_commands.ab2"
0003A876 <internal_commands.ab2@1468> INCLUDE "internal_commands.ab2"
0003A87A <internal_commands.ab2@1472> INCLUDE "internal_commands.ab2"
0003A87C <internal_commands.ab2@1473> INCLUDE "internal_commands.ab2"
0003A882 <internal_commands.ab2@1474> INCLUDE "internal_commands.ab2"
0003A883 <internal_commands.ab2@1475> INCLUDE "internal_commands.ab2"
0003A884 <internal_commands.ab2@1476> INCLUDE "internal_commands.ab2"
0003A886 <internal_commands.ab2@1478> INCLUDE "internal_commands.ab2"
0003A88A <internal_commands.ab2@1479> INCLUDE "internal_commands.ab2"
0003A88C <internal_commands.ab2@1480> INCLUDE "internal_commands.ab2"
0003A88E <internal_commands.ab2@1481> INCLUDE "internal_commands.ab2"
0003A892 <internal_commands.ab2@1482> INCLUDE "internal_commands.ab2"
0003A894 <internal_commands.ab2@1483> INCLUDE "internal_commands.ab2"
0003A898 <internal_commands.ab2@1487> INCLUDE "internal_commands.ab2"
0003A89A <internal_commands.ab2@1488> INCLUDE "internal_commands.ab2"
0003A8A0 <internal_commands.ab2@1489> INCLUDE "internal_commands.ab2"
0003A8A1 <internal_commands.ab2@1490> INCLUDE "internal_commands.ab2"
0003A8A2 <internal_commands.ab2@1491> INCLUDE "internal_commands.ab2"
0003A8A4 <internal_commands.ab2@1493> INCLUDE "internal_commands.ab2"
0003A8A8 <internal_commands.ab2@1494> INCLUDE "internal_commands.ab2"
0003A8AA <internal_commands.ab2@1495> INCLUDE "internal_commands.ab2"
0003A8AC <internal_commands.ab2@1496> INCLUDE "internal_commands.ab2"
0003A8B0 <internal_commands.ab2@1497> INCLUDE "internal_commands.ab2"
0003A8B2 <internal_commands.ab2@1498> INCLUDE "internal_commands.ab2"
0003A8B6 <internal_commands.ab2@1502> INCLUDE "internal_commands.ab2"
0003A8B8 <internal_commands.ab2@1503> INCLUDE "internal_commands.ab2"
0003A8BD <internal_commands.ab2@1504> INCLUDE "internal_commands.ab2"
0003A8BE <internal_commands.ab2@1505> INCLUDE "internal_commands.ab2"
0003A8C0 <internal_commands.ab2@1508> INCLUDE "internal_commands.ab2"
0003A8C4 <internal_commands.ab2@1509> INCLUDE "internal_commands.ab2"
0003A8C6 <internal_commands.ab2@1510> INCLUDE "internal_commands.ab2"
0003A8C8 <internal_commands.ab2@1511> INCLUDE "internal_commands.ab2"
0003A8CC <internal_commands.ab2@1512> INCLUDE "internal_commands.ab2"
0003A8CE <internal_commands.ab2@1513> INCLUDE "internal_commands.ab2"
0003A8D2 <internal_commands.ab2@1517> INCLUDE "internal_commands.ab2"
0003A8D4 <internal_commands.ab2@1518> INCLUDE "internal_commands.ab2"
0003A8D9 <internal_commands.ab2@1519> INCLUDE "internal_commands.ab2"
0003A8DA <internal_commands.ab2@1520> INCLUDE "internal_commands.ab2"
0003A8DC <internal_commands.ab2@1523> INCLUDE "internal_commands.ab2"
0003A8E0 <internal_commands.ab2@1524> INCLUDE "internal_commands.ab2"
0003A8E2 <internal_commands.ab2@1525> INCLUDE "internal_commands.ab2"
0003A8E4 <internal_commands.ab2@1526> INCLUDE "internal_commands.ab2"
0003A8E8 <internal_commands.ab2@1527> INCLUDE "internal_commands.ab2"
0003A8EA <internal_commands.ab2@1528> INCLUDE "internal_commands.ab2"
0003A8EE <internal_commands.ab2@1532> INCLUDE "internal_commands.ab2"
0003A8F0 <internal_commands.ab2@1533> INCLUDE "internal_commands.ab2"
0003A8F5 <internal_commands.ab2@1534> INCLUDE "internal_commands.ab2"
0003A8F6 <internal_commands.ab2@1535> INCLUDE "internal_commands.ab2"
0003A8F8 <internal_commands.ab2@1538> INCLUDE "internal_commands.ab2"
0003A8FC <internal_commands.ab2@1539> INCLUDE "internal_commands.ab2"
0003A8FE <internal_commands.ab2@1540> INCLUDE "internal_commands.ab2"
0003A900 <internal_commands.ab2@1541> INCLUDE "internal_commands.ab2"
0003A904 <internal_commands.ab2@1542> INCLUDE "internal_commands.ab2"
0003A906 <internal_commands.ab2@1543> INCLUDE "internal_commands.ab2"
0003A90A <internal_commands.ab2@1547> INCLUDE "internal_commands.ab2"
0003A90C <internal_commands.ab2@1548> INCLUDE "internal_commands.ab2"
0003A910 <internal_commands.ab2@1549> INCLUDE "internal_commands.ab2"
0003A911 <internal_commands.ab2@1550> INCLUDE "internal_commands.ab2"
0003A912 <internal_commands.ab2@1551> INCLUDE "internal_commands.ab2"
0003A914 <internal_commands.ab2@1553> INCLUDE "internal_commands.ab2"
0003A918 <internal_commands.ab2@1554> INCLUDE "internal_commands.ab2"
0003A91A <internal_commands.ab2@1555> INCLUDE "internal_commands.ab2"
0003A91C <internal_commands.ab2@1556> INCLUDE "internal_commands.ab2"
0003A920 <internal_commands.ab2@1557> INCLUDE "internal_commands.ab2"
0003A922 <internal_commands.ab2@1558> INCLUDE "internal_commands.ab2"
0003A926 <internal_commands.ab2@1562> INCLUDE "internal_commands.ab2"
0003A928 <internal_commands.ab2@1563> INCLUDE "internal_commands.ab2"
0003A92D <internal_commands.ab2@1564> INCLUDE "internal_commands.ab2"
0003A92E <internal_commands.ab2@1565> INCLUDE "internal_commands.ab2"
0003A930 <internal_commands.ab2@1568> INCLUDE "internal_commands.ab2"
0003A934 <internal_commands.ab2@1569> INCLUDE "internal_commands.ab2"
0003A936 <internal_commands.ab2@1570> INCLUDE "internal_commands.ab2"
0003A938 <internal_commands.ab2@1571> INCLUDE "internal_commands.ab2"
0003A93C <internal_commands.ab2@1572> INCLUDE "internal_commands.ab2"
0003A93E <internal_commands.ab2@1573> INCLUDE "internal_commands.ab2"
0003A942 <internal_commands.ab2@1577> INCLUDE "internal_commands.ab2"
0003A944 <internal_commands.ab2@1578> INCLUDE "internal_commands.ab2"
0003A948 <internal_commands.ab2@1579> INCLUDE "internal_commands.ab2"
0003A949 <internal_commands.ab2@1580> INCLUDE "internal_commands.ab2"
0003A94A <internal_commands.ab2@1581> INCLUDE "internal_commands.ab2"
0003A94C <internal_commands.ab2@1583> INCLUDE "internal_commands.ab2"
0003A950 <internal_commands.ab2@1584> INCLUDE "internal_commands.ab2"
0003A952 <internal_commands.ab2@1585> INCLUDE "internal_commands.ab2"
0003A954 <internal_commands.ab2@1586> INCLUDE "internal_commands.ab2"
0003A958 <internal_commands.ab2@1587> INCLUDE "internal_commands.ab2"
0003A95A <internal_commands.ab2@1588> INCLUDE "internal_commands.ab2"
0003A95E <internal_commands.ab2@1592> INCLUDE "internal_commands.ab2"
0003A960 <internal_commands.ab2@1593> INCLUDE "internal_commands.ab2"
0003A964 <internal_commands.ab2@1594> INCLUDE "internal_commands.ab2"
0003A965 <internal_commands.ab2@1595> INCLUDE "internal_commands.ab2"
0003A966 <internal_commands.ab2@1596> INCLUDE "internal_commands.ab2"
0003A968 <internal_commands.ab2@1598> INCLUDE "internal_commands.ab2"
0003A96C <internal_commands.ab2@1599> INCLUDE "internal_commands.ab2"
0003A96E <internal_commands.ab2@1600> INCLUDE "internal_commands.ab2"
0003A970 <internal_commands.ab2@1601> INCLUDE "internal_commands.ab2"
0003A974 <internal_commands.ab2@1602> INCLUDE "internal_commands.ab2"
0003A976 <internal_commands.ab2@1603> INCLUDE "internal_commands.ab2"
0003A97A <internal_commands.ab2@1607> INCLUDE "internal_commands.ab2"
0003A97C <internal_commands.ab2@1608> INCLUDE "internal_commands.ab2"
0003A97F <internal_commands.ab2@1609> INCLUDE "internal_commands.ab2"
0003A980 <internal_commands.ab2@1610> INCLUDE "internal_commands.ab2"
0003A982 <internal_commands.ab2@1613> INCLUDE "internal_commands.ab2"
0003A986 <internal_commands.ab2@1614> INCLUDE "internal_commands.ab2"
0003A988 <internal_commands.ab2@1615> INCLUDE "internal_commands.ab2"
0003A98A <internal_commands.ab2@1616> INCLUDE "internal_commands.ab2"
0003A98E <internal_commands.ab2@1617> INCLUDE "internal_commands.ab2"
0003A990 <internal_commands.ab2@1618> INCLUDE "internal_commands.ab2"
0003A994 <internal_commands.ab2@1622> INCLUDE "internal_commands.ab2"
0003A996 <internal_commands.ab2@1623> INCLUDE "internal_commands.ab2"
0003A99A <internal_commands.ab2@1624> INCLUDE "internal_commands.ab2"
0003A99B <internal_commands.ab2@1625> INCLUDE "internal_commands.ab2"
0003A99C <internal_commands.ab2@1626> INCLUDE "internal_commands.ab2"
0003A99E <internal_commands.ab2@1628> INCLUDE "internal_commands.ab2"
0003A9A2 <internal_commands.ab2@1629> INCLUDE "internal_commands.ab2"
0003A9A4 <internal_commands.ab2@1630> INCLUDE "internal_commands.ab2"
0003A9A6 <internal_commands.ab2@1631> INCLUDE "internal_commands.ab2"
0003A9AA <internal_commands.ab2@1632> INCLUDE "internal_commands.ab2"
0003A9AC <internal_commands.ab2@1633> INCLUDE "internal_commands.ab2"
0003A9B0 <internal_commands.ab2@1637> INCLUDE "internal_commands.ab2"
0003A9B2 <internal_commands.ab2@1638> INCLUDE "internal_commands.ab2"
0003A9B6 <internal_commands.ab2@1639> INCLUDE "internal_commands.ab2"
0003A9B7 <internal_commands.ab2@1640> INCLUDE "internal_commands.ab2"
0003A9B8 <internal_commands.ab2@1641> INCLUDE "internal_commands.ab2"
0003A9BA <internal_commands.ab2@1643> INCLUDE "internal_commands.ab2"
0003A9BE <internal_commands.ab2@1644> INCLUDE "internal_commands.ab2"
0003A9C0 <internal_commands.ab2@1645> INCLUDE "internal_commands.ab2"
0003A9C2 <internal_commands.ab2@1646> INCLUDE "internal_commands.ab2"
0003A9C6 <internal_commands.ab2@1647> INCLUDE "internal_commands.ab2"
0003A9C8 <internal_commands.ab2@1648> INCLUDE "internal_commands.ab2"
0003A9CC <internal_commands.ab2@1652> INCLUDE "internal_commands.ab2"
0003A9CE <internal_commands.ab2@1653> INCLUDE "internal_commands.ab2"
0003A9D4 <internal_commands.ab2@1654> INCLUDE "internal_commands.ab2"
0003A9D5 <internal_commands.ab2@1655> INCLUDE "internal_commands.ab2"
0003A9D6 <internal_commands.ab2@1656> INCLUDE "internal_commands.ab2"
0003A9D8 <internal_commands.ab2@1658> INCLUDE "internal_commands.ab2"
0003A9DC <internal_commands.ab2@1659> INCLUDE "internal_commands.ab2"
0003A9DE <internal_commands.ab2@1660> INCLUDE "internal_commands.ab2"
0003A9E0 <internal_commands.ab2@1661> INCLUDE "internal_commands.ab2"
0003A9E4 <internal_commands.ab2@1662> INCLUDE "internal_commands.ab2"
0003A9E6 <internal_commands.ab2@1663> INCLUDE "internal_commands.ab2"
0003A9EA <internal_commands.ab2@1667> INCLUDE "internal_commands.ab2"
0003A9EC <internal_commands.ab2@1668> INCLUDE "internal_commands.ab2"
0003A9F0 <internal_commands.ab2@1669> INCLUDE "internal_commands.ab2"
0003A9F1 <internal_commands.ab2@1670> INCLUDE "internal_commands.ab2"
0003A9F2 <internal_commands.ab2@1671> INCLUDE "internal_commands.ab2"
0003A9F4 <internal_commands.ab2@1673> INCLUDE "internal_commands.ab2"
0003A9F8 <internal_commands.ab2@1674> INCLUDE "internal_commands.ab2"
0003A9FA <internal_commands.ab2@1675> INCLUDE "internal_commands.ab2"
0003A9FC <internal_commands.ab2@1676> INCLUDE "internal_commands.ab2"
0003AA00 <internal_commands.ab2@1677> INCLUDE "internal_commands.ab2"
0003AA02 <internal_commands.ab2@1678> INCLUDE "internal_commands.ab2"
0003AA06 <internal_commands.ab2@1682> INCLUDE "internal_commands.ab2"
0003AA08 <internal_commands.ab2@1683> INCLUDE "internal_commands.ab2"
0003AA0C <internal_commands.ab2@1684> INCLUDE "internal_commands.ab2"
0003AA0D <internal_commands.ab2@1685> INCLUDE "internal_commands.ab2"
0003AA0E <internal_commands.ab2@1686> INCLUDE "internal_commands.ab2"
0003AA10 <internal_commands.ab2@1688> INCLUDE "internal_commands.ab2"
0003AA14 <internal_commands.ab2@1689> INCLUDE "internal_commands.ab2"
0003AA16 <internal_commands.ab2@1690> INCLUDE "internal_commands.ab2"
0003AA18 <internal_commands.ab2@1691> INCLUDE "internal_commands.ab2"
0003AA1C <internal_commands.ab2@1692> INCLUDE "internal_commands.ab2"
0003AA1E <internal_commands.ab2@1693> INCLUDE "internal_commands.ab2"
0003AA22 <internal_commands.ab2@1697> INCLUDE "internal_commands.ab2"
0003AA24 <internal_commands.ab2@1698> INCLUDE "internal_commands.ab2"
0003AA29 <internal_commands.ab2@1699> INCLUDE "internal_commands.ab2"
0003AA2A <internal_commands.ab2@1700> INCLUDE "internal_commands.ab2"
0003AA2C <internal_commands.ab2@1703> INCLUDE "internal_commands.ab2"
0003AA30 <internal_commands.ab2@1704> INCLUDE "internal_commands.ab2"
0003AA32 <internal_commands.ab2@1705> INCLUDE "internal_commands.ab2"
0003AA34 <internal_commands.ab2@1706> INCLUDE "internal_commands.ab2"
0003AA38 <internal_commands.ab2@1707> INCLUDE "internal_commands.ab2"
0003AA3A <internal_commands.ab2@1708> INCLUDE "internal_commands.ab2"
0003AA3E <internal_commands.ab2@1712> INCLUDE "internal_commands.ab2"
0003AA40 <internal_commands.ab2@1713> INCLUDE "internal_commands.ab2"
0003AA45 <internal_commands.ab2@1714> INCLUDE "internal_commands.ab2"
0003AA46 <internal_commands.ab2@1715> INCLUDE "internal_commands.ab2"
0003AA48 <internal_commands.ab2@1718> INCLUDE "internal_commands.ab2"
0003AA4C <internal_commands.ab2@1719> INCLUDE "internal_commands.ab2"
0003AA4E <internal_commands.ab2@1720> INCLUDE "internal_commands.ab2"
0003AA50 <internal_commands.ab2@1721> INCLUDE "internal_commands.ab2"
0003AA54 <internal_commands.ab2@1722> INCLUDE "internal_commands.ab2"
0003AA56 <internal_commands.ab2@1723> INCLUDE "internal_commands.ab2"
0003AA5A <internal_commands.ab2@1727> INCLUDE "internal_commands.ab2"
0003AA5C <internal_commands.ab2@1728> INCLUDE "internal_commands.ab2"
0003AA60 <internal_commands.ab2@1729> INCLUDE "internal_commands.ab2"
0003AA61 <internal_commands.ab2@1730> INCLUDE "internal_commands.ab2"
0003AA62 <internal_commands.ab2@1731> INCLUDE "internal_commands.ab2"
0003AA64 <internal_commands.ab2@1733> INCLUDE "internal_commands.ab2"
0003AA68 <internal_commands.ab2@1734> INCLUDE "internal_commands.ab2"
0003AA6A <internal_commands.ab2@1735> INCLUDE "internal_commands.ab2"
0003AA6C <internal_commands.ab2@1736> INCLUDE "internal_commands.ab2"
0003AA70 <internal_commands.ab2@1737> INCLUDE "internal_commands.ab2"
0003AA72 <internal_commands.ab2@1738> INCLUDE "internal_commands.ab2"
0003AA76 <internal_commands.ab2@1742> INCLUDE "internal_commands.ab2"
0003AA78 <internal_commands.ab2@1743> INCLUDE "internal_commands.ab2"
0003AA7C <internal_commands.ab2@1744> INCLUDE "internal_commands.ab2"
0003AA7D <internal_commands.ab2@1745> INCLUDE "internal_commands.ab2"
0003AA7E <internal_commands.ab2@1746> INCLUDE "internal_commands.ab2"
0003AA80 <internal_commands.ab2@1748> INCLUDE "internal_commands.ab2"
0003AA84 <internal_commands.ab2@1749> INCLUDE "internal_commands.ab2"
0003AA86 <internal_commands.ab2@1750> INCLUDE "internal_commands.ab2"
0003AA88 <internal_commands.ab2@1751> INCLUDE "internal_commands.ab2"
0003AA8C <internal_commands.ab2@1752> INCLUDE "internal_commands.ab2"
0003AA8E <internal_commands.ab2@1753> INCLUDE "internal_commands.ab2"
0003AA92 <internal_commands.ab2@1757> INCLUDE "internal_commands.ab2"
0003AA94 <internal_commands.ab2@1758> INCLUDE "internal_commands.ab2"
0003AA98 <internal_commands.ab2@1759> INCLUDE "internal_commands.ab2"
0003AA99 <internal_commands.ab2@1760> INCLUDE "internal_commands.ab2"
0003AA9A <internal_commands.ab2@1761> INCLUDE "internal_commands.ab2"
0003AA9C <internal_commands.ab2@1763> INCLUDE "internal_commands.ab2"
0003AAA0 <internal_commands.ab2@1764> INCLUDE "internal_commands.ab2"
0003AAA2 <internal_commands.ab2@1765> INCLUDE "internal_commands.ab2"
0003AAA4 <internal_commands.ab2@1766> INCLUDE "internal_commands.ab2"
0003AAA8 <internal_commands.ab2@1767> INCLUDE "internal_commands.ab2"
0003AAAA <internal_commands.ab2@1768> INCLUDE "internal_commands.ab2"
0003AAAE <internal_commands.ab2@1772> INCLUDE "internal_commands.ab2"
0003AAB0 <internal_commands.ab2@1773> INCLUDE "internal_commands.ab2"
0003AAB5 <internal_commands.ab2@1774> INCLUDE "internal_commands.ab2"
0003AAB6 <internal_commands.ab2@1775> INCLUDE "internal_commands.ab2"
0003AAB8 <internal_commands.ab2@1778> INCLUDE "internal_commands.ab2"
0003AABC <internal_commands.ab2@1779> INCLUDE "internal_commands.ab2"
0003AABE <internal_commands.ab2@1780> INCLUDE "internal_commands.ab2"
0003AAC0 <internal_commands.ab2@1781> INCLUDE "internal_commands.ab2"
0003AAC4 <internal_commands.ab2@1782> INCLUDE "internal_commands.ab2"
0003AAC6 <internal_commands.ab2@1783> INCLUDE "internal_commands.ab2"
0003AACA <internal_commands.ab2@1787> INCLUDE "internal_commands.ab2"
0003AACC <internal_commands.ab2@1788> INCLUDE "internal_commands.ab2"
0003AAD0 <internal_commands.ab2@1789> INCLUDE "internal_commands.ab2"
0003AAD1 <internal_commands.ab2@1790> INCLUDE "internal_commands.ab2"
0003AAD2 <internal_commands.ab2@1791> INCLUDE "internal_commands.ab2"
0003AAD4 <internal_commands.ab2@1793> INCLUDE "internal_commands.ab2"
0003AAD8 <internal_commands.ab2@1794> INCLUDE "internal_commands.ab2"
0003AADA <internal_commands.ab2@1795> INCLUDE "internal_commands.ab2"
0003AADC <internal_commands.ab2@1796> INCLUDE "internal_commands.ab2"
0003AAE0 <internal_commands.ab2@1797> INCLUDE "internal_commands.ab2"
0003AAE2 <internal_commands.ab2@1798> INCLUDE "internal_commands.ab2"
0003AAE6 <internal_commands.ab2@1802> INCLUDE "internal_commands.ab2"
0003AAE8 <internal_commands.ab2@1803> INCLUDE "internal_commands.ab2"
0003AAEC <internal_commands.ab2@1804> INCLUDE "internal_commands.ab2"
0003AAED <internal_commands.ab2@1805> INCLUDE "internal_commands.ab2"
0003AAEE <internal_commands.ab2@1806> INCLUDE "internal_commands.ab2"
0003AAF0 <internal_commands.ab2@1808> INCLUDE "internal_commands.ab2"
0003AAF4 <internal_commands.ab2@1809> INCLUDE "internal_commands.ab2"
0003AAF6 <internal_commands.ab2@1810> INCLUDE "internal_commands.ab2"
0003AAF8 <internal_commands.ab2@1811> INCLUDE "internal_commands.ab2"
0003AAFC <internal_commands.ab2@1812> INCLUDE "internal_commands.ab2"
0003AAFE <internal_commands.ab2@1813> INCLUDE "internal_commands.ab2"
0003AB02 <internal_commands.ab2@1817> INCLUDE "internal_commands.ab2"
0003AB04 <internal_commands.ab2@1818> INCLUDE "internal_commands.ab2"
0003AB08 <internal_commands.ab2@1819> INCLUDE "internal_commands.ab2"
0003AB09 <internal_commands.ab2@1820> INCLUDE "internal_commands.ab2"
0003AB0A <internal_commands.ab2@1821> INCLUDE "internal_commands.ab2"
0003AB0C <internal_commands.ab2@1823> INCLUDE "internal_commands.ab2"
0003AB10 <internal_commands.ab2@1824> INCLUDE "internal_commands.ab2"
0003AB12 <internal_commands.ab2@1825> INCLUDE "internal_commands.ab2"
0003AB14 <internal_commands.ab2@1826> INCLUDE "internal_commands.ab2"
0003AB18 <internal_commands.ab2@1827> INCLUDE "internal_commands.ab2"
0003AB1A <internal_commands.ab2@1828> INCLUDE "internal_commands.ab2"
0003AB1E <internal_commands.ab2@1832> INCLUDE "internal_commands.ab2"
0003AB20 <internal_commands.ab2@1833> INCLUDE "internal_commands.ab2"
0003AB24 <internal_commands.ab2@1834> INCLUDE "internal_commands.ab2"
0003AB25 <internal_commands.ab2@1835> INCLUDE "internal_commands.ab2"
0003AB26 <internal_commands.ab2@1836> INCLUDE "internal_commands.ab2"
0003AB28 <internal_commands.ab2@1838> INCLUDE "internal_commands.ab2"
0003AB2C <internal_commands.ab2@1839> INCLUDE "internal_commands.ab2"
0003AB2E <internal_commands.ab2@1840> INCLUDE "internal_commands.ab2"
0003AB30 <internal_commands.ab2@1841> INCLUDE "internal_commands.ab2"
0003AB34 <internal_commands.ab2@1842> INCLUDE "internal_commands.ab2"
0003AB36 <internal_commands.ab2@1843> INCLUDE "internal_commands.ab2"
0003AB3A <internal_commands.ab2@1847> INCLUDE "internal_commands.ab2"
0003AB3C <internal_commands.ab2@1848> INCLUDE "internal_commands.ab2"
0003AB40 <internal_commands.ab2@1849> INCLUDE "internal_commands.ab2"
0003AB41 <internal_commands.ab2@1850> INCLUDE "internal_commands.ab2"
0003AB42 <internal_commands.ab2@1851> INCLUDE "internal_commands.ab2"
0003AB44 <internal_commands.ab2@1853> INCLUDE "internal_commands.ab2"
0003AB48 <internal_commands.ab2@1854> INCLUDE "internal_commands.ab2"
0003AB4A <internal_commands.ab2@1855> INCLUDE "internal_commands.ab2"
0003AB4C <internal_commands.ab2@1856> INCLUDE "internal_commands.ab2"
0003AB50 <internal_commands.ab2@1857> INCLUDE "internal_commands.ab2"
0003AB52 <internal_commands.ab2@1858> INCLUDE "internal_commands.ab2"
0003AB56 <internal_commands.ab2@1862> INCLUDE "internal_commands.ab2"
0003AB58 <internal_commands.ab2@1863> INCLUDE "internal_commands.ab2"
0003AB5C <internal_commands.ab2@1864> INCLUDE "internal_commands.ab2"
0003AB5D <internal_commands.ab2@1865> INCLUDE "internal_commands.ab2"
0003AB5E <internal_commands.ab2@1866> INCLUDE "internal_commands.ab2"
0003AB60 <internal_commands.ab2@1868> INCLUDE "internal_commands.ab2"
0003AB64 <internal_commands.ab2@1869> INCLUDE "internal_commands.ab2"
0003AB66 <internal_commands.ab2@1870> INCLUDE "internal_commands.ab2"
0003AB68 <internal_commands.ab2@1871> INCLUDE "internal_commands.ab2"
0003AB6C <internal_commands.ab2@1872> INCLUDE "internal_commands.ab2"
0003AB6E <internal_commands.ab2@1873> INCLUDE "internal_commands.ab2"
0003AB72 <internal_commands.ab2@1877> INCLUDE "internal_commands.ab2"
0003AB74 <internal_commands.ab2@1878> INCLUDE "internal_commands.ab2"
0003AB78 <internal_commands.ab2@1879> INCLUDE "internal_commands.ab2"
0003AB79 <internal_commands.ab2@1880> INCLUDE "internal_commands.ab2"
0003AB7A <internal_commands.ab2@1881> INCLUDE "internal_commands.ab2"
0003AB7C <internal_commands.ab2@1883> INCLUDE "internal_commands.ab2"
0003AB80 <internal_commands.ab2@1884> INCLUDE "internal_commands.ab2"
0003AB82 <internal_commands.ab2@1885> INCLUDE "internal_commands.ab2"
0003AB84 <internal_commands.ab2@1886> INCLUDE "internal_commands.ab2"
0003AB88 <internal_commands.ab2@1887> INCLUDE "internal_commands.ab2"
0003AB8A <internal_commands.ab2@1888> INCLUDE "internal_commands.ab2"
0003AB8E <internal_commands.ab2@1892> INCLUDE "internal_commands.ab2"
0003AB90 <internal_commands.ab2@1893> INCLUDE "internal_commands.ab2"
0003AB94 <internal_commands.ab2@1894> INCLUDE "internal_commands.ab2"
0003AB95 <internal_commands.ab2@1895> INCLUDE "internal_commands.ab2"
0003AB96 <internal_commands.ab2@1896> INCLUDE "internal_commands.ab2"
0003AB98 <internal_commands.ab2@1898> INCLUDE "internal_commands.ab2"
0003AB9C <internal_commands.ab2@1899> INCLUDE "internal_commands.ab2"
0003AB9E <internal_commands.ab2@1900> INCLUDE "internal_commands.ab2"
0003ABA0 <internal_commands.ab2@1901> INCLUDE "internal_commands.ab2"
0003ABA4 <internal_commands.ab2@1902> INCLUDE "internal_commands.ab2"
0003ABA6 <internal_commands.ab2@1903> INCLUDE "internal_commands.ab2"
0003ABAA <internal_commands.ab2@1907> INCLUDE "internal_commands.ab2"
0003ABAC <internal_commands.ab2@1908> INCLUDE "internal_commands.ab2"
0003ABB0 <internal_commands.ab2@1909> INCLUDE "internal_commands.ab2"
0003ABB1 <internal_commands.ab2@1910> INCLUDE "internal_commands.ab2"
0003ABB2 <internal_commands.ab2@1911> INCLUDE "internal_commands.ab2"
0003ABB4 <internal_commands.ab2@1913> INCLUDE "internal_commands.ab2"
0003ABB8 <internal_commands.ab2@1914> INCLUDE "internal_commands.ab2"
0003ABBA <internal_commands.ab2@1915> INCLUDE "internal_commands.ab2"
0003ABBC <internal_commands.ab2@1916> INCLUDE "internal_commands.ab2"
0003ABC0 <internal_commands.ab2@1917> INCLUDE "internal_commands.ab2"
0003ABC2 <internal_commands.ab2@1918> INCLUDE "internal_commands.ab2"
0003ABC6 <internal_commands.ab2@1922> INCLUDE "internal_commands.ab2"
0003ABC8 <internal_commands.ab2@1923> INCLUDE "internal_commands.ab2"
0003ABCC <internal_commands.ab2@1924> INCLUDE "internal_commands.ab2"
0003ABCD <internal_commands.ab2@1925> INCLUDE "internal_commands.ab2"
0003ABCE <internal_commands.ab2@1926> INCLUDE "internal_commands.ab2"
0003ABD0 <internal_commands.ab2@1928> INCLUDE "internal_commands.ab2"
0003ABD4 <internal_commands.ab2@1929> INCLUDE "internal_commands.ab2"
0003ABD6 <internal_commands.ab2@1930> INCLUDE "internal_commands.ab2"
0003ABD8 <internal_commands.ab2@1931> INCLUDE "internal_commands.ab2"
0003ABDC <internal_commands.ab2@1932> INCLUDE "internal_commands.ab2"
0003ABDE <internal_commands.ab2@1933> INCLUDE "internal_commands.ab2"
0003ABE2 <internal_commands.ab2@1937> INCLUDE "internal_commands.ab2"
0003ABE4 <internal_commands.ab2@1938> INCLUDE "internal_commands.ab2"
0003ABE8 <internal_commands.ab2@1939> INCLUDE "internal_commands.ab2"
0003ABE9 <internal_commands.ab2@1940> INCLUDE "internal_commands.ab2"
0003ABEA <internal_commands.ab2@1941> INCLUDE "internal_commands.ab2"
0003ABEC <internal_commands.ab2@1943> INCLUDE "internal_commands.ab2"
0003ABF0 <internal_commands.ab2@1944> INCLUDE "internal_commands.ab2"
0003ABF2 <internal_commands.ab2@1945> INCLUDE "internal_commands.ab2"
0003ABF4 <internal_commands.ab2@1946> INCLUDE "internal_commands.ab2"
0003ABF8 <internal_commands.ab2@1947> INCLUDE "internal_commands.ab2"
0003ABFA <internal_commands.ab2@1948> INCLUDE "internal_commands.ab2"
0003ABFE <internal_commands.ab2@1952> INCLUDE "internal_commands.ab2"
0003AC00 <internal_commands.ab2@1953> INCLUDE "internal_commands.ab2"
0003AC04 <internal_commands.ab2@1954> INCLUDE "internal_commands.ab2"
0003AC05 <internal_commands.ab2@1955> INCLUDE "internal_commands.ab2"
0003AC06 <internal_commands.ab2@1956> INCLUDE "internal_commands.ab2"
0003AC08 <internal_commands.ab2@1958> INCLUDE "internal_commands.ab2"
0003AC0C <internal_commands.ab2@1959> INCLUDE "internal_commands.ab2"
0003AC0E <internal_commands.ab2@1960> INCLUDE "internal_commands.ab2"
0003AC10 <internal_commands.ab2@1961> INCLUDE "internal_commands.ab2"
0003AC14 <internal_commands.ab2@1962> INCLUDE "internal_commands.ab2"
0003AC16 <internal_commands.ab2@1963> INCLUDE "internal_commands.ab2"
0003AC1A <internal_commands.ab2@1967> INCLUDE "internal_commands.ab2"
0003AC1C <internal_commands.ab2@1968> INCLUDE "internal_commands.ab2"
0003AC20 <internal_commands.ab2@1969> INCLUDE "internal_commands.ab2"
0003AC21 <internal_commands.ab2@1970> INCLUDE "internal_commands.ab2"
0003AC22 <internal_commands.ab2@1971> INCLUDE "internal_commands.ab2"
0003AC24 <internal_commands.ab2@1973> INCLUDE "internal_commands.ab2"
0003AC28 <internal_commands.ab2@1974> INCLUDE "internal_commands.ab2"
0003AC2A <internal_commands.ab2@1975> INCLUDE "internal_commands.ab2"
0003AC2C <internal_commands.ab2@1976> INCLUDE "internal_commands.ab2"
0003AC30 <internal_commands.ab2@1977> INCLUDE "internal_commands.ab2"
0003AC32 <internal_commands.ab2@1978> INCLUDE "internal_commands.ab2"
0003AC36 <internal_commands.ab2@1982> INCLUDE "internal_commands.ab2"
0003AC38 <internal_commands.ab2@1983> INCLUDE "internal_commands.ab2"
0003AC3C <internal_commands.ab2@1984> INCLUDE "internal_commands.ab2"
0003AC3D <internal_commands.ab2@1985> INCLUDE "internal_commands.ab2"
0003AC3E <internal_commands.ab2@1986> INCLUDE "internal_commands.ab2"
0003AC40 <internal_commands.ab2@1988> INCLUDE "internal_commands.ab2"
0003AC44 <internal_commands.ab2@1989> INCLUDE "internal_commands.ab2"
0003AC46 <internal_commands.ab2@1990> INCLUDE "internal_commands.ab2"
0003AC48 <internal_commands.ab2@1991> INCLUDE "internal_commands.ab2"
0003AC4C <internal_commands.ab2@1992> INCLUDE "internal_commands.ab2"
0003AC4E <internal_commands.ab2@1993> INCLUDE "internal_commands.ab2"
0003AC52 <internal_commands.ab2@1997> INCLUDE "internal_commands.ab2"
0003AC54 <internal_commands.ab2@1998> INCLUDE "internal_commands.ab2"
0003AC57 <internal_commands.ab2@1999> INCLUDE "internal_commands.ab2"
0003AC58 <internal_commands.ab2@2000> INCLUDE "internal_commands.ab2"
0003AC5A <internal_commands.ab2@2003> INCLUDE "internal_commands.ab2"
0003AC5E <internal_commands.ab2@2004> INCLUDE "internal_commands.ab2"
0003AC60 <internal_commands.ab2@2005> INCLUDE "internal_commands.ab2"
0003AC62 <internal_commands.ab2@2006> INCLUDE "internal_commands.ab2"
0003AC66 <internal_commands.ab2@2007> INCLUDE "internal_commands.ab2"
0003AC68 <internal_commands.ab2@2008> INCLUDE "internal_commands.ab2"
0003AC6C <internal_commands.ab2@2012> INCLUDE "internal_commands.ab2"
0003AC6E <internal_commands.ab2@2013> INCLUDE "internal_commands.ab2"
0003AC71 <internal_commands.ab2@2014> INCLUDE "internal_commands.ab2"
0003AC72 <internal_commands.ab2@2015> INCLUDE "internal_commands.ab2"
0003AC74 <internal_commands.ab2@2018> INCLUDE "internal_commands.ab2"
0003AC78 <internal_commands.ab2@2019> INCLUDE "internal_commands.ab2"
0003AC7A <internal_commands.ab2@2020> INCLUDE "internal_commands.ab2"
0003AC7C <internal_commands.ab2@2021> INCLUDE "internal_commands.ab2"
0003AC80 <internal_commands.ab2@2022> INCLUDE "internal_commands.ab2"
0003AC82 <internal_commands.ab2@2023> INCLUDE "internal_commands.ab2"
0003AC86 <internal_commands.ab2@2027> INCLUDE "internal_commands.ab2"
0003AC88 <internal_commands.ab2@2028> INCLUDE "internal_commands.ab2"
0003AC8D <internal_commands.ab2@2029> INCLUDE "internal_commands.ab2"
0003AC8E <internal_commands.ab2@2030> INCLUDE "internal_commands.ab2"
0003AC90 <internal_commands.ab2@2033> INCLUDE "internal_commands.ab2"
0003AC94 <internal_commands.ab2@2034> INCLUDE "internal_commands.ab2"
0003AC96 <internal_commands.ab2@2035> INCLUDE "internal_commands.ab2"
0003AC98 <internal_commands.ab2@2036> INCLUDE "internal_commands.ab2"
0003AC9C <internal_commands.ab2@2037> INCLUDE "internal_commands.ab2"
0003AC9E <internal_commands.ab2@2038> INCLUDE "internal_commands.ab2"
0003ACA2 <internal_commands.ab2@2042> INCLUDE "internal_commands.ab2"
0003ACA4 <internal_commands.ab2@2043> INCLUDE "internal_commands.ab2"
0003ACA8 <internal_commands.ab2@2044> INCLUDE "internal_commands.ab2"
0003ACA9 <internal_commands.ab2@2045> INCLUDE "internal_commands.ab2"
0003ACAA <internal_commands.ab2@2046> INCLUDE "internal_commands.ab2"
0003ACAC <internal_commands.ab2@2048> INCLUDE "internal_commands.ab2"
0003ACB0 <internal_commands.ab2@2049> INCLUDE "internal_commands.ab2"
0003ACB2 <internal_commands.ab2@2050> INCLUDE "internal_commands.ab2"
0003ACB4 <internal_commands.ab2@2051> INCLUDE "internal_commands.ab2"
0003ACB8 <internal_commands.ab2@2052> INCLUDE "internal_commands.ab2"
0003ACBA <internal_commands.ab2@2053> INCLUDE "internal_commands.ab2"
0003ACBE <internal_commands.ab2@2057> INCLUDE "internal_commands.ab2"
0003ACC0 <internal_commands.ab2@2058> INCLUDE "internal_commands.ab2"
0003ACC5 <internal_commands.ab2@2059> INCLUDE "internal_commands.ab2"
0003ACC6 <internal_commands.ab2@2060> INCLUDE "internal_commands.ab2"
0003ACC8 <internal_commands.ab2@2063> INCLUDE "internal_commands.ab2"
0003ACCC <internal_commands.ab2@2064> INCLUDE "internal_commands.ab2"
0003ACCE <internal_commands.ab2@2065> INCLUDE "internal_commands.ab2"
0003ACD0 <internal_commands.ab2@2066> INCLUDE "internal_commands.ab2"
0003ACD4 <internal_commands.ab2@2067> INCLUDE "internal_commands.ab2"
0003ACD6 <internal_commands.ab2@2068> INCLUDE "internal_commands.ab2"
0003ACDA <internal_commands.ab2@2072> INCLUDE "internal_commands.ab2"
0003ACDC <internal_commands.ab2@2073> INCLUDE "internal_commands.ab2"
0003ACE1 <internal_commands.ab2@2074> INCLUDE "internal_commands.ab2"
0003ACE2 <internal_commands.ab2@2075> INCLUDE "internal_commands.ab2"
0003ACE4 <internal_commands.ab2@2078> INCLUDE "internal_commands.ab2"
0003ACE8 <internal_commands.ab2@2079> INCLUDE "internal_commands.ab2"
0003ACEA <internal_commands.ab2@2080> INCLUDE "internal_commands.ab2"
0003ACEC <internal_commands.ab2@2081> INCLUDE "internal_commands.ab2"
0003ACF0 <internal_commands.ab2@2082> INCLUDE "internal_commands.ab2"
0003ACF2 <internal_commands.ab2@2083> INCLUDE "internal_commands.ab2"
0003ACF6 <internal_commands.ab2@2087> INCLUDE "internal_commands.ab2"
0003ACF8 <internal_commands.ab2@2088> INCLUDE "internal_commands.ab2"
0003ACFD <internal_commands.ab2@2089> INCLUDE "internal_commands.ab2"
0003ACFE <internal_commands.ab2@2090> INCLUDE "internal_commands.ab2"
0003AD00 <internal_commands.ab2@2093> INCLUDE "internal_commands.ab2"
0003AD04 <internal_commands.ab2@2094> INCLUDE "internal_commands.ab2"
0003AD06 <internal_commands.ab2@2095> INCLUDE "internal_commands.ab2"
0003AD08 <internal_commands.ab2@2096> INCLUDE "internal_commands.ab2"
0003AD0C <internal_commands.ab2@2097> INCLUDE "internal_commands.ab2"
0003AD0E <internal_commands.ab2@2098> INCLUDE "internal_commands.ab2"
0003AD12 <internal_commands.ab2@2102> INCLUDE "internal_commands.ab2"
0003AD14 <internal_commands.ab2@2103> INCLUDE "internal_commands.ab2"
0003AD19 <internal_commands.ab2@2104> INCLUDE "internal_commands.ab2"
0003AD1A <internal_commands.ab2@2105> INCLUDE "internal_commands.ab2"
0003AD1C <internal_commands.ab2@2108> INCLUDE "internal_commands.ab2"
0003AD20 <internal_commands.ab2@2109> INCLUDE "internal_commands.ab2"
0003AD22 <internal_commands.ab2@2110> INCLUDE "internal_commands.ab2"
0003AD24 <internal_commands.ab2@2111> INCLUDE "internal_commands.ab2"
0003AD28 <internal_commands.ab2@2112> INCLUDE "internal_commands.ab2"
0003AD2A <internal_commands.ab2@2113> INCLUDE "internal_commands.ab2"
0003AD2E <internal_commands.ab2@2117> INCLUDE "internal_commands.ab2"
0003AD30 <internal_commands.ab2@2118> INCLUDE "internal_commands.ab2"
0003AD35 <internal_commands.ab2@2119> INCLUDE "internal_commands.ab2"
0003AD36 <internal_commands.ab2@2120> INCLUDE "internal_commands.ab2"
0003AD38 <internal_commands.ab2@2123> INCLUDE "internal_commands.ab2"
0003AD3C <internal_commands.ab2@2124> INCLUDE "internal_commands.ab2"
0003AD3E <internal_commands.ab2@2125> INCLUDE "internal_commands.ab2"
0003AD40 <internal_commands.ab2@2126> INCLUDE "internal_commands.ab2"
0003AD44 <internal_commands.ab2@2127> INCLUDE "internal_commands.ab2"
0003AD46 <internal_commands.ab2@2128> INCLUDE "internal_commands.ab2"
0003AD4A <internal_commands.ab2@2132> INCLUDE "internal_commands.ab2"
0003AD4C <internal_commands.ab2@2133> INCLUDE "internal_commands.ab2"
0003AD50 <internal_commands.ab2@2134> INCLUDE "internal_commands.ab2"
0003AD51 <internal_commands.ab2@2135> INCLUDE "internal_commands.ab2"
0003AD52 <internal_commands.ab2@2136> INCLUDE "internal_commands.ab2"
0003AD54 <internal_commands.ab2@2138> INCLUDE "internal_commands.ab2"
0003AD58 <internal_commands.ab2@2139> INCLUDE "internal_commands.ab2"
0003AD5A <internal_commands.ab2@2140> INCLUDE "internal_commands.ab2"
0003AD5C <internal_commands.ab2@2141> INCLUDE "internal_commands.ab2"
0003AD60 <internal_commands.ab2@2142> INCLUDE "internal_commands.ab2"
0003AD62 <internal_commands.ab2@2143> INCLUDE "internal_commands.ab2"
0003AD66 <internal_commands.ab2@2147> INCLUDE "internal_commands.ab2"
0003AD68 <internal_commands.ab2@2148> INCLUDE "internal_commands.ab2"
0003AD6D <internal_commands.ab2@2149> INCLUDE "internal_commands.ab2"
0003AD6E <internal_commands.ab2@2150> INCLUDE "internal_commands.ab2"
0003AD70 <internal_commands.ab2@2153> INCLUDE "internal_commands.ab2"
0003AD74 <internal_commands.ab2@2154> INCLUDE "internal_commands.ab2"
0003AD76 <internal_commands.ab2@2155> INCLUDE "internal_commands.ab2"
0003AD78 <internal_commands.ab2@2156> INCLUDE "internal_commands.ab2"
0003AD7C <internal_commands.ab2@2157> INCLUDE "internal_commands.ab2"
0003AD7E <internal_commands.ab2@2158> INCLUDE "internal_commands.ab2"
0003AD82 <internal_commands.ab2@2162> INCLUDE "internal_commands.ab2"
0003AD84 <internal_commands.ab2@2163> INCLUDE "internal_commands.ab2"
0003AD8A <internal_commands.ab2@2164> INCLUDE "internal_commands.ab2"
0003AD8B <internal_commands.ab2@2165> INCLUDE "internal_commands.ab2"
0003AD8C <internal_commands.ab2@2166> INCLUDE "internal_commands.ab2"
0003AD8E <internal_commands.ab2@2168> INCLUDE "internal_commands.ab2"
0003AD92 <internal_commands.ab2@2169> INCLUDE "internal_commands.ab2"
0003AD94 <internal_commands.ab2@2170> INCLUDE "internal_commands.ab2"
0003AD96 <internal_commands.ab2@2171> INCLUDE "internal_commands.ab2"
0003AD9A <internal_commands.ab2@2172> INCLUDE "internal_commands.ab2"
0003AD9C <internal_commands.ab2@2173> INCLUDE "internal_commands.ab2"
0003ADA0 <internal_commands.ab2@2177> INCLUDE "internal_commands.ab2"
0003ADA2 <internal_commands.ab2@2178> INCLUDE "internal_commands.ab2"
0003ADA6 <internal_commands.ab2@2179> INCLUDE "internal_commands.ab2"
0003ADA7 <internal_commands.ab2@2180> INCLUDE "internal_commands.ab2"
0003ADA8 <internal_commands.ab2@2181> INCLUDE "internal_commands.ab2"
0003ADAA <internal_commands.ab2@2183> INCLUDE "internal_commands.ab2"
0003ADAE <internal_commands.ab2@2184> INCLUDE "internal_commands.ab2"
0003ADB0 <internal_commands.ab2@2185> INCLUDE "internal_commands.ab2"
0003ADB2 <internal_commands.ab2@2186> INCLUDE "internal_commands.ab2"
0003ADB6 <internal_commands.ab2@2187> INCLUDE "internal_commands.ab2"
0003ADB8 <internal_commands.ab2@2188> INCLUDE "internal_commands.ab2"
0003ADBC <internal_commands.ab2@2192> INCLUDE "internal_commands.ab2"
0003ADBE <internal_commands.ab2@2193> INCLUDE "internal_commands.ab2"
0003ADC3 <internal_commands.ab2@2194> INCLUDE "internal_commands.ab2"
0003ADC4 <internal_commands.ab2@2195> INCLUDE "internal_commands.ab2"
0003ADC6 <internal_commands.ab2@2198> INCLUDE "internal_commands.ab2"
0003ADCA <internal_commands.ab2@2199> INCLUDE "internal_commands.ab2"
0003ADCC <internal_commands.ab2@2200> INCLUDE "internal_commands.ab2"
0003ADCE <internal_commands.ab2@2201> INCLUDE "internal_commands.ab2"
0003ADD2 <internal_commands.ab2@2202> INCLUDE "internal_commands.ab2"
0003ADD4 <internal_commands.ab2@2203> INCLUDE "internal_commands.ab2"
0003ADD8 <internal_commands.ab2@2208> INCLUDE "internal_commands.ab2"
0003ADDA <internal_commands.ab2@2209> INCLUDE "internal_commands.ab2"
0003ADE1 <internal_commands.ab2@2210> INCLUDE "internal_commands.ab2"
0003ADE2 <internal_commands.ab2@2211> INCLUDE "internal_commands.ab2"
0003ADE4 <internal_commands.ab2@2230> INCLUDE "internal_commands.ab2"
0003ADE6 <internal_commands.ab2@2231> INCLUDE "internal_commands.ab2"
0003ADE8 <internal_commands.ab2@2235> INCLUDE "internal_commands.ab2"
0003ADEA <internal_commands.ab2@2236> INCLUDE "internal_commands.ab2"
0003ADEC <internal_commands.ab2@2240> INCLUDE "internal_commands.ab2"
0003ADEE <internal_commands.ab2@2241> INCLUDE "internal_commands.ab2"
0003ADF0 <internal_commands.ab2@2245> INCLUDE "internal_commands.ab2"
0003ADF2 <internal_commands.ab2@2246> INCLUDE "internal_commands.ab2"
0003ADF4 <internal_commands.ab2@2251> INCLUDE "internal_commands.ab2"
0003ADF8 <internal_commands.ab2@2252> INCLUDE "internal_commands.ab2"
0003ADFA <internal_commands.ab2@2253> INCLUDE "internal_commands.ab2"
0003ADFC <internal_commands.ab2@2254> INCLUDE "internal_commands.ab2"
0003ADFE <internal_commands.ab2@2255> INCLUDE "internal_commands.ab2"
0003AE00 <internal_commands.ab2@2256> INCLUDE "internal_commands.ab2"
0003AE04 <internal_commands.ab2@2257> INCLUDE "internal_commands.ab2"
0003AE0A <internal_commands.ab2@2260> INCLUDE "internal_commands.ab2"
0003AE0E <internal_commands.ab2@2261> INCLUDE "internal_commands.ab2"
0003AE10 <internal_commands.ab2@2262> INCLUDE "internal_commands.ab2"
0003AE12 <internal_commands.ab2@2263> INCLUDE "internal_commands.ab2"
0003AE14 <internal_commands.ab2@2264> INCLUDE "internal_commands.ab2"
0003AE16 <internal_commands.ab2@2265> INCLUDE "internal_commands.ab2"
0003AE18 <internal_commands.ab2@2266> INCLUDE "internal_commands.ab2"
0003AE1A <internal_commands.ab2@2273> INCLUDE "internal_commands.ab2"
0003AE1E <internal_commands.ab2@2274> INCLUDE "internal_commands.ab2"
0003AE22 <internal_commands.ab2@2275> INCLUDE "internal_commands.ab2"
0003AE26 <internal_commands.ab2@2276> INCLUDE "internal_commands.ab2"
0003AE2A <internal_commands.ab2@2277> INCLUDE "internal_commands.ab2"
0003AE2E <internal_commands.ab2@2278> INCLUDE "internal_commands.ab2"
0003AE30 <internal_commands.ab2@2281> INCLUDE "internal_commands.ab2"
0003AE32 <internal_commands.ab2@2282> INCLUDE "internal_commands.ab2"
0003AE36 <internal_commands.ab2@2283> INCLUDE "internal_commands.ab2"
0003AE3A <internal_commands.ab2@2284> INCLUDE "internal_commands.ab2"
0003AE3E <internal_commands.ab2@2285> INCLUDE "internal_commands.ab2"
0003AE42 <internal_commands.ab2@2286> INCLUDE "internal_commands.ab2"
0003AE44 <internal_commands.ab2@2289> INCLUDE "internal_commands.ab2"
0003AE46 <internal_commands.ab2@2290> INCLUDE "internal_commands.ab2"
0003AE4A <internal_commands.ab2@2291> INCLUDE "internal_commands.ab2"
0003AE4E <internal_commands.ab2@2292> INCLUDE "internal_commands.ab2"
0003AE52 <internal_commands.ab2@2293> INCLUDE "internal_commands.ab2"
0003AE56 <internal_commands.ab2@2294> INCLUDE "internal_commands.ab2"
0003AE58 <internal_commands.ab2@2295> INCLUDE "internal_commands.ab2"
0003AE5A <internal_commands.ab2@2298> INCLUDE "internal_commands.ab2"
0003AE5C <internal_commands.ab2@2299> INCLUDE "internal_commands.ab2"
0003AE60 <internal_commands.ab2@2300> INCLUDE "internal_commands.ab2"
0003AE62 <internal_commands.ab2@2302> INCLUDE "internal_commands.ab2"
0003AE66 <internal_commands.ab2@2303> INCLUDE "internal_commands.ab2"
0003AE68 <internal_commands.ab2@2307> INCLUDE "internal_commands.ab2"
0003AE6C <internal_commands.ab2@2308> INCLUDE "internal_commands.ab2"
0003AE6E <internal_commands.ab2@2309> INCLUDE "internal_commands.ab2"
0003AE72 <internal_commands.ab2@2310> INCLUDE "internal_commands.ab2"
0003AE76 <internal_commands.ab2@2311> INCLUDE "internal_commands.ab2"
0003AE7A <internal_commands.ab2@2312> INCLUDE "internal_commands.ab2"
0003AE7E <internal_commands.ab2@2316> INCLUDE "internal_commands.ab2"
0003AE82 <internal_commands.ab2@2317> INCLUDE "internal_commands.ab2"
0003AE86 <internal_commands.ab2@2319> INCLUDE "internal_commands.ab2"
0003AE8A <internal_commands.ab2@2320> INCLUDE "internal_commands.ab2"
0003AE8E <internal_commands.ab2@2321> INCLUDE "internal_commands.ab2"
0003AE92 <internal_commands.ab2@2322> INCLUDE "internal_commands.ab2"
0003AE96 <internal_commands.ab2@2323> INCLUDE "internal_commands.ab2"
0003AE9A <internal_commands.ab2@2324> INCLUDE "internal_commands.ab2"
0003AE9E <internal_commands.ab2@2325> INCLUDE "internal_commands.ab2"
0003AEA2 <internal_commands.ab2@2326> INCLUDE "internal_commands.ab2"
0003AEA6 <internal_commands.ab2@2328> INCLUDE "internal_commands.ab2"
0003AEAA <internal_commands.ab2@2331> INCLUDE "internal_commands.ab2"
0003AEAE <internal_commands.ab2@2332> INCLUDE "internal_commands.ab2"
0003AEB2 <internal_commands.ab2@2334> INCLUDE "internal_commands.ab2"
0003AEB6 <internal_commands.ab2@2335> INCLUDE "internal_commands.ab2"
0003AEBA <internal_commands.ab2@2336> INCLUDE "internal_commands.ab2"
0003AEBE <internal_commands.ab2@2337> INCLUDE "internal_commands.ab2"
0003AEC2 <internal_commands.ab2@2338> INCLUDE "internal_commands.ab2"
0003AEC6 <internal_commands.ab2@2339> INCLUDE "internal_commands.ab2"
0003AECA <internal_commands.ab2@2340> INCLUDE "internal_commands.ab2"
0003AECE <internal_commands.ab2@2341> INCLUDE "internal_commands.ab2"
0003AED2 <internal_commands.ab2@2343> INCLUDE "internal_commands.ab2"
0003AED6 <internal_commands.ab2@2346> INCLUDE "internal_commands.ab2"
0003AED8 <internal_commands.ab2@2347> INCLUDE "internal_commands.ab2"
0003AEDC <internal_commands.ab2@2348> INCLUDE "internal_commands.ab2"
0003AEE0 <internal_commands.ab2@2349> INCLUDE "internal_commands.ab2"
0003AEE4 <internal_commands.ab2@2350> INCLUDE "internal_commands.ab2"
0003AEE8 <internal_commands.ab2@2351> INCLUDE "internal_commands.ab2"
0003AEEC <internal_commands.ab2@2352> INCLUDE "internal_commands.ab2"
0003AEF0 <internal_commands.ab2@2353> INCLUDE "internal_commands.ab2"
0003AEF4 <internal_commands.ab2@2356> INCLUDE "internal_commands.ab2"
0003AEF8 <internal_commands.ab2@2357> INCLUDE "internal_commands.ab2"
0003AEFC <internal_commands.ab2@2358> INCLUDE "internal_commands.ab2"
0003AEFE <internal_commands.ab2@2359> INCLUDE "internal_commands.ab2"
0003AF00 <internal_commands.ab2@2362> INCLUDE "internal_commands.ab2"
0003AF02 <internal_commands.ab2@2363> INCLUDE "internal_commands.ab2"
0003AF04 <internal_commands.ab2@2364> INCLUDE "internal_commands.ab2"
0003AF06 <internal_commands.ab2@2365> INCLUDE "internal_commands.ab2"
0003AF0A <internal_commands.ab2@2366> INCLUDE "internal_commands.ab2"
0003AF0E <internal_commands.ab2@2369> INCLUDE "internal_commands.ab2"
0003AF12 <internal_commands.ab2@2370> INCLUDE "internal_commands.ab2"
0003AF16 <internal_commands.ab2@2371> INCLUDE "internal_commands.ab2"
0003AF18 <internal_commands.ab2@2372> INCLUDE "internal_commands.ab2"
0003AF1C <internal_commands.ab2@2373> INCLUDE "internal_commands.ab2"
0003AF20 <internal_commands.ab2@2376> INCLUDE "internal_commands.ab2"
0003AF24 <internal_commands.ab2@2379> INCLUDE "internal_commands.ab2"
0003AF28 <internal_commands.ab2@2380> INCLUDE "internal_commands.ab2"
0003AF2A <internal_commands.ab2@2381> INCLUDE "internal_commands.ab2"
0003AF2C <internal_commands.ab2@2382> INCLUDE "internal_commands.ab2"
0003AF30 <internal_commands.ab2@2383> INCLUDE "internal_commands.ab2"
0003AF34 <internal_commands.ab2@2386> INCLUDE "internal_commands.ab2"
0003AF38 <internal_commands.ab2@2387> INCLUDE "internal_commands.ab2"
0003AF3C <internal_commands.ab2@2390> INCLUDE "internal_commands.ab2"
0003AF40 <internal_commands.ab2@2393> INCLUDE "internal_commands.ab2"
0003AF44 <internal_commands.ab2@2394> INCLUDE "internal_commands.ab2"
0003AF46 <internal_commands.ab2@2395> INCLUDE "internal_commands.ab2"
0003AF48 <internal_commands.ab2@2396> INCLUDE "internal_commands.ab2"
0003AF4C <internal_commands.ab2@2397> INCLUDE "internal_commands.ab2"
0003AF50 <internal_commands.ab2@2400> INCLUDE "internal_commands.ab2"
0003AF54 <internal_commands.ab2@2401> INCLUDE "internal_commands.ab2"
0003AF56 <internal_commands.ab2@2405> INCLUDE "internal_commands.ab2"
0003AF5A <internal_commands.ab2@2406> INCLUDE "internal_commands.ab2"
0003AF5E <internal_commands.ab2@2407> INCLUDE "internal_commands.ab2"
0003AF60 <internal_commands.ab2@2408> INCLUDE "internal_commands.ab2"
0003AF64 <internal_commands.ab2@2409> INCLUDE "internal_commands.ab2"
0003AF68 <internal_commands.ab2@2410> INCLUDE "internal_commands.ab2"
0003AF6A <internal_commands.ab2@2413> INCLUDE "internal_commands.ab2"
0003AF6E <internal_commands.ab2@2414> INCLUDE "internal_commands.ab2"
0003AF72 <internal_commands.ab2@2415> INCLUDE "internal_commands.ab2"
0003AF76 <internal_commands.ab2@2416> INCLUDE "internal_commands.ab2"
0003AF7A <internal_commands.ab2@2419> INCLUDE "internal_commands.ab2"
0003AF7E <internal_commands.ab2@2420> INCLUDE "internal_commands.ab2"
0003AF80 <internal_commands.ab2@2424> INCLUDE "internal_commands.ab2"
0003AF84 <internal_commands.ab2@2425> INCLUDE "internal_commands.ab2"
0003AF86 <internal_commands.ab2@2426> INCLUDE "internal_commands.ab2"
0003AF88 <internal_commands.ab2@2427> INCLUDE "internal_commands.ab2"
0003AF8A <internal_commands.ab2@2428> INCLUDE "internal_commands.ab2"
0003AF8E <internal_commands.ab2@2429> INCLUDE "internal_commands.ab2"
0003AF92 <internal_commands.ab2@2432> INCLUDE "internal_commands.ab2"
0003AF96 <internal_commands.ab2@2433> INCLUDE "internal_commands.ab2"
0003AF9A <internal_commands.ab2@2434> INCLUDE "internal_commands.ab2"
0003AF9E <internal_commands.ab2@2435> INCLUDE "internal_commands.ab2"
0003AFA2 <internal_commands.ab2@2439> INCLUDE "internal_commands.ab2"
0003AFA6 <internal_commands.ab2@2440> INCLUDE "internal_commands.ab2"
0003AFAA <internal_commands.ab2@2444> INCLUDE "internal_commands.ab2"
0003AFAE <internal_commands.ab2@2445> INCLUDE "internal_commands.ab2"
0003AFB2 <internal_commands.ab2@2449> INCLUDE "internal_commands.ab2"
0003AFB6 <internal_commands.ab2@2450> INCLUDE "internal_commands.ab2"
0003AFBA <internal_commands.ab2@2454> INCLUDE "internal_commands.ab2"
0003AFBC <internal_commands.ab2@2456> INCLUDE "internal_commands.ab2"
0003AFC0 <internal_commands.ab2@2457> INCLUDE "internal_commands.ab2"
0003AFC4 <internal_commands.ab2@2458> INCLUDE "internal_commands.ab2"
0003AFC6 <internal_commands.ab2@2459> INCLUDE "internal_commands.ab2"
0003AFC8 <internal_commands.ab2@2460> INCLUDE "internal_commands.ab2"
0003AFCA <internal_commands.ab2@2461> INCLUDE "internal_commands.ab2"
0003AFCE <internal_commands.ab2@2462> INCLUDE "internal_commands.ab2"
0003AFD2 <internal_commands.ab2@2463> INCLUDE "internal_commands.ab2"
0003AFD4 <internal_commands.ab2@2464> INCLUDE "internal_commands.ab2"
0003AFD8 <internal_commands.ab2@2465> INCLUDE "internal_commands.ab2"
0003AFDA <internal_commands.ab2@2466> INCLUDE "internal_commands.ab2"
0003AFDC <internal_commands.ab2@2467> INCLUDE "internal_commands.ab2"
0003AFDE <internal_commands.ab2@2468> INCLUDE "internal_commands.ab2"
0003AFE2 <internal_commands.ab2@2469> INCLUDE "internal_commands.ab2"
0003AFE6 <internal_commands.ab2@2470> INCLUDE "internal_commands.ab2"
0003AFE8 <internal_commands.ab2@2473> INCLUDE "internal_commands.ab2"
0003AFEA <internal_commands.ab2@2474> INCLUDE "internal_commands.ab2"
0003AFEE <internal_commands.ab2@2475> INCLUDE "internal_commands.ab2"
0003AFF2 <internal_commands.ab2@2476> INCLUDE "internal_commands.ab2"
0003AFF6 <internal_commands.ab2@2477> INCLUDE "internal_commands.ab2"
0003AFFA <internal_commands.ab2@2478> INCLUDE "internal_commands.ab2"
0003AFFC <internal_commands.ab2@2479> INCLUDE "internal_commands.ab2"
0003B000 <internal_commands.ab2@2480> INCLUDE "internal_commands.ab2"
0003B004 <internal_commands.ab2@2481> INCLUDE "internal_commands.ab2"
0003B008 <internal_commands.ab2@2482> INCLUDE "internal_commands.ab2"
0003B00A <internal_commands.ab2@2483> INCLUDE "internal_commands.ab2"
0003B00C <internal_commands.ab2@2484> INCLUDE "internal_commands.ab2"
0003B00E <internal_commands.ab2@2485> INCLUDE "internal_commands.ab2"
0003B010 <internal_commands.ab2@2488> INCLUDE "internal_commands.ab2"
0003B012 <internal_commands.ab2@2489> INCLUDE "internal_commands.ab2"
0003B014 <internal_commands.ab2@2490> INCLUDE "internal_commands.ab2"
0003B018 <internal_commands.ab2@2491> INCLUDE "internal_commands.ab2"
0003B01C <internal_commands.ab2@2492> INCLUDE "internal_commands.ab2"
0003B01E <internal_commands.ab2@2496> INCLUDE "internal_commands.ab2"
0003B022 <internal_commands.ab2@2497> INCLUDE "internal_commands.ab2"
0003B024 <internal_commands.ab2@2498> INCLUDE "internal_commands.ab2"
0003B028 <internal_commands.ab2@2499> INCLUDE "internal_commands.ab2"
0003B02C <internal_commands.ab2@2500> INCLUDE "internal_commands.ab2"
0003B02E <internal_commands.ab2@2501> INCLUDE "internal_commands.ab2"
0003B030 <internal_commands.ab2@2504> INCLUDE "internal_commands.ab2"
0003B032 <internal_commands.ab2@2508> INCLUDE "internal_commands.ab2"
0003B036 <internal_commands.ab2@2509> INCLUDE "internal_commands.ab2"
0003B038 <internal_commands.ab2@2510> INCLUDE "internal_commands.ab2"
0003B03C <internal_commands.ab2@2511> INCLUDE "internal_commands.ab2"
0003B040 <internal_commands.ab2@2512> INCLUDE "internal_commands.ab2"
0003B044 <internal_commands.ab2@2513> INCLUDE "internal_commands.ab2"
0003B046 <internal_commands.ab2@2516> INCLUDE "internal_commands.ab2"
0003B04A <internal_commands.ab2@2520> INCLUDE "internal_commands.ab2"
0003B04E <internal_commands.ab2@2521> INCLUDE "internal_commands.ab2"
0003B050 <internal_commands.ab2@2522> INCLUDE "internal_commands.ab2"
0003B054 <internal_commands.ab2@2523> INCLUDE "internal_commands.ab2"
0003B058 <internal_commands.ab2@2524> INCLUDE "internal_commands.ab2"
0003B05C <internal_commands.ab2@2527> INCLUDE "internal_commands.ab2"
0003B060 <internal_commands.ab2@2528> INCLUDE "internal_commands.ab2"
0003B064 <internal_commands.ab2@2529> INCLUDE "internal_commands.ab2"
0003B068 <internal_commands.ab2@2530> INCLUDE "internal_commands.ab2"
0003B06C <internal_commands.ab2@2531> INCLUDE "internal_commands.ab2"
0003B070 <internal_commands.ab2@2538> INCLUDE "internal_commands.ab2"
0003B072 <internal_commands.ab2@2539> INCLUDE "internal_commands.ab2"
0003B077 <internal_commands.ab2@2540> INCLUDE "internal_commands.ab2"
0003B078 <internal_commands.ab2@2541> INCLUDE "internal_commands.ab2"
0003B07C <internal_commands.ab2@2545> INCLUDE "internal_commands.ab2"
0003B07E <internal_commands.ab2@2546> INCLUDE "internal_commands.ab2"
0003B085 <internal_commands.ab2@2547> INCLUDE "internal_commands.ab2"
0003B086 <internal_commands.ab2@2548> INCLUDE "internal_commands.ab2"
0003B08A <internal_commands.ab2@2552> INCLUDE "internal_commands.ab2"
0003B08C <internal_commands.ab2@2553> INCLUDE "internal_commands.ab2"
0003B093 <internal_commands.ab2@2554> INCLUDE "internal_commands.ab2"
0003B094 <internal_commands.ab2@2555> INCLUDE "internal_commands.ab2"
0003B098 <internal_commands.ab2@2559> INCLUDE "internal_commands.ab2"
0003B09A <internal_commands.ab2@2560> INCLUDE "internal_commands.ab2"
0003B0A2 <internal_commands.ab2@2561> INCLUDE "internal_commands.ab2"
0003B0A3 <internal_commands.ab2@2562> INCLUDE "internal_commands.ab2"
0003B0A4 <internal_commands.ab2@2563> INCLUDE "internal_commands.ab2"
0003B0A8 <internal_commands.ab2@2566> INCLUDE "internal_commands.ab2"
0003B0AA <internal_commands.ab2@2567> INCLUDE "internal_commands.ab2"
0003B0AF <internal_commands.ab2@2568> INCLUDE "internal_commands.ab2"
0003B0C3 <internal_commands.ab2@2569> INCLUDE "internal_commands.ab2"
0003B0C4 <internal_commands.ab2@2570> INCLUDE "internal_commands.ab2"
0003B0C8 <internal_commands.ab2@2573> INCLUDE "internal_commands.ab2"
0003B0CA <internal_commands.ab2@2574> INCLUDE "internal_commands.ab2"
0003B0CE <internal_commands.ab2@2575> INCLUDE "internal_commands.ab2"
0003B0CF <internal_commands.ab2@2576> INCLUDE "internal_commands.ab2"
0003B0D0 <internal_commands.ab2@2577> INCLUDE "internal_commands.ab2"
0003B0D4 <internal_commands.ab2@2580> INCLUDE "internal_commands.ab2"
0003B0D6 <internal_commands.ab2@2581> INCLUDE "internal_commands.ab2"
0003B0D9 <internal_commands.ab2@2582> INCLUDE "internal_commands.ab2"
0003B0DA <internal_commands.ab2@2583> INCLUDE "internal_commands.ab2"
0003B0DE <internal_commands.ab2@2587> INCLUDE "internal_commands.ab2"
0003B0E0 <internal_commands.ab2@2588> INCLUDE "internal_commands.ab2"
0003B0E7 <internal_commands.ab2@2589> INCLUDE "internal_commands.ab2"
0003B0E8 <internal_commands.ab2@2590> INCLUDE "internal_commands.ab2"
0003B0EC <internal_commands.ab2@2594> INCLUDE "internal_commands.ab2"
0003B0EE <internal_commands.ab2@2595> INCLUDE "internal_commands.ab2"
0003B0F4 <internal_commands.ab2@2596> INCLUDE "internal_commands.ab2"
0003B101 <internal_commands.ab2@2597> INCLUDE "internal_commands.ab2"
0003B102 <internal_commands.ab2@2598> INCLUDE "internal_commands.ab2"
0003B106 <internal_commands.ab2@2601> INCLUDE "internal_commands.ab2"
0003B108 <internal_commands.ab2@2602> INCLUDE "internal_commands.ab2"
0003B10F <internal_commands.ab2@2603> INCLUDE "internal_commands.ab2"
0003B127 <internal_commands.ab2@2604> INCLUDE "internal_commands.ab2"
0003B128 <internal_commands.ab2@2605> INCLUDE "internal_commands.ab2"
0003B12C <internal_commands.ab2@2608> INCLUDE "internal_commands.ab2"
0003B12E <internal_commands.ab2@2609> INCLUDE "internal_commands.ab2"
0003B132 <internal_commands.ab2@2610> INCLUDE "internal_commands.ab2"
0003B155 <internal_commands.ab2@2611> INCLUDE "internal_commands.ab2"
0003B156 <internal_commands.ab2@2612> INCLUDE "internal_commands.ab2"
0003B15A <internal_commands.ab2@2615> INCLUDE "internal_commands.ab2"
0003B15C <internal_commands.ab2@2616> INCLUDE "internal_commands.ab2"
0003B163 <internal_commands.ab2@2617> INCLUDE "internal_commands.ab2"
0003B16E <internal_commands.ab2@2618> INCLUDE "internal_commands.ab2"
0003B172 <internal_commands.ab2@2622> INCLUDE "internal_commands.ab2"
0003B174 <internal_commands.ab2@2623> INCLUDE "internal_commands.ab2"
0003B17A <internal_commands.ab2@2624> INCLUDE "internal_commands.ab2"
0003B17B <internal_commands.ab2@2625> INCLUDE "internal_commands.ab2"
0003B17C <internal_commands.ab2@2626> INCLUDE "internal_commands.ab2"
0003B180 <internal_commands.ab2@2629> INCLUDE "internal_commands.ab2"
0003B182 <internal_commands.ab2@2630> INCLUDE "internal_commands.ab2"
0003B187 <internal_commands.ab2@2631> INCLUDE "internal_commands.ab2"
0003B188 <internal_commands.ab2@2632> INCLUDE "internal_commands.ab2"
0003B18C <internal_commands.ab2@2636> INCLUDE "internal_commands.ab2"
0003B18E <internal_commands.ab2@2637> INCLUDE "internal_commands.ab2"
0003B195 <internal_commands.ab2@2638> INCLUDE "internal_commands.ab2"
0003B1A7 <internal_commands.ab2@2639> INCLUDE "internal_commands.ab2"
0003B1A8 <internal_commands.ab2@2640> INCLUDE "internal_commands.ab2"
0003B1AC <internal_commands.ab2@2643> INCLUDE "internal_commands.ab2"
0003B1AE <internal_commands.ab2@2644> INCLUDE "internal_commands.ab2"
0003B1B8 <internal_commands.ab2@2645> INCLUDE "internal_commands.ab2"
0003B1B9 <internal_commands.ab2@2646> INCLUDE "internal_commands.ab2"
0003B1BA <internal_commands.ab2@2647> INCLUDE "internal_commands.ab2"
0003B1BE <internal_commands.ab2@2650> INCLUDE "internal_commands.ab2"
0003B1C0 <internal_commands.ab2@2651> INCLUDE "internal_commands.ab2"
0003B1C8 <internal_commands.ab2@2652> INCLUDE "internal_commands.ab2"
0003B1D5 <internal_commands.ab2@2653> INCLUDE "internal_commands.ab2"
0003B1D6 <internal_commands.ab2@2654> INCLUDE "internal_commands.ab2"
0003B1DA <internal_commands.ab2@2657> INCLUDE "internal_commands.ab2"
0003B1DC <internal_commands.ab2@2658> INCLUDE "internal_commands.ab2"
0003B1DF <internal_commands.ab2@2659> INCLUDE "internal_commands.ab2"
0003B21A <internal_commands.ab2@2660> INCLUDE "internal_commands.ab2"
0003B21E <internal_commands.ab2@2664> INCLUDE "internal_commands.ab2"
0003B220 <internal_commands.ab2@2665> INCLUDE "internal_commands.ab2"
0003B224 <internal_commands.ab2@2666> INCLUDE "internal_commands.ab2"
0003B225 <internal_commands.ab2@2667> INCLUDE "internal_commands.ab2"
0003B226 <internal_commands.ab2@2668> INCLUDE "internal_commands.ab2"
0003B22A <internal_commands.ab2@2671> INCLUDE "internal_commands.ab2"
0003B22C <internal_commands.ab2@2672> INCLUDE "internal_commands.ab2"
0003B234 <internal_commands.ab2@2673> INCLUDE "internal_commands.ab2"
0003B235 <internal_commands.ab2@2674> INCLUDE "internal_commands.ab2"
0003B236 <internal_commands.ab2@2675> INCLUDE "internal_commands.ab2"
0003B23A <internal_commands.ab2@2678> INCLUDE "internal_commands.ab2"
0003B23C <internal_commands.ab2@2679> INCLUDE "internal_commands.ab2"
0003B244 <internal_commands.ab2@2680> INCLUDE "internal_commands.ab2"
0003B254 <internal_commands.ab2@2681> INCLUDE "internal_commands.ab2"
0003B258 <internal_commands.ab2@2685> INCLUDE "internal_commands.ab2"
0003B25A <internal_commands.ab2@2686> INCLUDE "internal_commands.ab2"
0003B263 <internal_commands.ab2@2687> INCLUDE "internal_commands.ab2"
0003B26B <internal_commands.ab2@2688> INCLUDE "internal_commands.ab2"
0003B26C <internal_commands.ab2@2689> INCLUDE "internal_commands.ab2"
0003B270 <internal_commands.ab2@2692> INCLUDE "internal_commands.ab2"
0003B272 <internal_commands.ab2@2693> INCLUDE "internal_commands.ab2"
0003B27A <internal_commands.ab2@2694> INCLUDE "internal_commands.ab2"
0003B283 <internal_commands.ab2@2695> INCLUDE "internal_commands.ab2"
0003B284 <internal_commands.ab2@2696> INCLUDE "internal_commands.ab2"
0003B288 <internal_commands.ab2@2699> INCLUDE "internal_commands.ab2"
0003B28A <internal_commands.ab2@2700> INCLUDE "internal_commands.ab2"
0003B292 <internal_commands.ab2@2701> INCLUDE "internal_commands.ab2"
0003B293 <internal_commands.ab2@2702> INCLUDE "internal_commands.ab2"
0003B294 <internal_commands.ab2@2703> INCLUDE "internal_commands.ab2"
0003B298 <internal_commands.ab2@2706> INCLUDE "internal_commands.ab2"
0003B29A <internal_commands.ab2@2707> INCLUDE "internal_commands.ab2"
0003B2A0 <internal_commands.ab2@2708> INCLUDE "internal_commands.ab2"
0003B2A1 <internal_commands.ab2@2709> INCLUDE "internal_commands.ab2"
0003B2A2 <internal_commands.ab2@2710> INCLUDE "internal_commands.ab2"
0003B2A6 <internal_commands.ab2@2713> INCLUDE "internal_commands.ab2"
0003B2A8 <internal_commands.ab2@2714> INCLUDE "internal_commands.ab2"
0003B2AF <internal_commands.ab2@2715> INCLUDE "internal_commands.ab2"
0003B2B0 <internal_commands.ab2@2716> INCLUDE "internal_commands.ab2"
0003B2B4 <internal_commands.ab2@2720> INCLUDE "internal_commands.ab2"
0003B2B6 <internal_commands.ab2@2721> INCLUDE "internal_commands.ab2"
0003B2BD <internal_commands.ab2@2722> INCLUDE "internal_commands.ab2"
0003B2BE <internal_commands.ab2@2723> INCLUDE "internal_commands.ab2"
0003B2C2 <internal_commands.ab2@2727> INCLUDE "internal_commands.ab2"
0003B2C4 <internal_commands.ab2@2728> INCLUDE "internal_commands.ab2"
0003B2CB <internal_commands.ab2@2729> INCLUDE "internal_commands.ab2"
0003B2CC <internal_commands.ab2@2730> INCLUDE "internal_commands.ab2"
0003B2D0 <internal_commands.ab2@2734> INCLUDE "internal_commands.ab2"
0003B2D2 <internal_commands.ab2@2735> INCLUDE "internal_commands.ab2"
0003B2D9 <internal_commands.ab2@2736> INCLUDE "internal_commands.ab2"
0003B2DA <internal_commands.ab2@2737> INCLUDE "internal_commands.ab2"
0003B2DE <internal_commands.ab2@2741> INCLUDE "internal_commands.ab2"
0003B2E0 <internal_commands.ab2@2742> INCLUDE "internal_commands.ab2"
0003B2E5 <internal_commands.ab2@2743> INCLUDE "internal_commands.ab2"
0003B2FB <internal_commands.ab2@2744> INCLUDE "internal_commands.ab2"
0003B2FC <internal_commands.ab2@2745> INCLUDE "internal_commands.ab2"
0003B300 <internal_commands.ab2@2748> INCLUDE "internal_commands.ab2"
0003B302 <internal_commands.ab2@2749> INCLUDE "internal_commands.ab2"
0003B30C <internal_commands.ab2@2750> INCLUDE "internal_commands.ab2"
0003B30D <internal_commands.ab2@2751> INCLUDE "internal_commands.ab2"
0003B30E <internal_commands.ab2@2752> INCLUDE "internal_commands.ab2"
0003B312 <internal_commands.ab2@2755> INCLUDE "internal_commands.ab2"
0003B314 <internal_commands.ab2@2756> INCLUDE "internal_commands.ab2"
0003B31F <internal_commands.ab2@2757> INCLUDE "internal_commands.ab2"
0003B320 <internal_commands.ab2@2758> INCLUDE "internal_commands.ab2"
0003B324 <internal_commands.ab2@2762> INCLUDE "internal_commands.ab2"
0003B326 <internal_commands.ab2@2763> INCLUDE "internal_commands.ab2"
0003B332 <internal_commands.ab2@2764> INCLUDE "internal_commands.ab2"
0003B35F <internal_commands.ab2@2765> INCLUDE "internal_commands.ab2"
0003B360 <internal_commands.ab2@2766> INCLUDE "internal_commands.ab2"
0003B364 <internal_commands.ab2@2769> INCLUDE "internal_commands.ab2"
0003B366 <internal_commands.ab2@2770> INCLUDE "internal_commands.ab2"
0003B36E <internal_commands.ab2@2771> INCLUDE "internal_commands.ab2"
0003B3A5 <internal_commands.ab2@2772> INCLUDE "internal_commands.ab2"
0003B3A6 <internal_commands.ab2@2773> INCLUDE "internal_commands.ab2"
0003B3AA <internal_commands.ab2@2776> INCLUDE "internal_commands.ab2"
0003B3AC <internal_commands.ab2@2777> INCLUDE "internal_commands.ab2"
0003B3B4 <internal_commands.ab2@2778> INCLUDE "internal_commands.ab2"
0003B3D3 <internal_commands.ab2@2779> INCLUDE "internal_commands.ab2"
0003B3D4 <internal_commands.ab2@2780> INCLUDE "internal_commands.ab2"
0003B3D8 <internal_commands.ab2@2783> INCLUDE "internal_commands.ab2"
0003B3DA <internal_commands.ab2@2784> INCLUDE "internal_commands.ab2"
0003B3E1 <internal_commands.ab2@2785> INCLUDE "internal_commands.ab2"
0003B417 <internal_commands.ab2@2786> INCLUDE "internal_commands.ab2"
0003B418 <internal_commands.ab2@2787> INCLUDE "internal_commands.ab2"
0003B41C <internal_commands.ab2@2790> INCLUDE "internal_commands.ab2"
0003B41E <internal_commands.ab2@2791> INCLUDE "internal_commands.ab2"
0003B427 <internal_commands.ab2@2792> INCLUDE "internal_commands.ab2"
0003B45C <internal_commands.ab2@2793> INCLUDE "internal_commands.ab2"
0003B460 <internal_commands.ab2@2797> INCLUDE "internal_commands.ab2"
0003B462 <internal_commands.ab2@2798> INCLUDE "internal_commands.ab2"
0003B472 <internal_commands.ab2@2799> INCLUDE "internal_commands.ab2"
0003B4A9 <internal_commands.ab2@2800> INCLUDE "internal_commands.ab2"
0003B4AA <internal_commands.ab2@2801> INCLUDE "internal_commands.ab2"
0003B4AA <AmiBlitz3_wizzard.ab2@28316> INCLUDE "internal_commands.ab2"
0003B4AE <AmiBlitz3_wizzard.ab2@28321>            Dc.l cif_lt                                     ;ciflt
0003B4B2 <AmiBlitz3_wizzard.ab2@28322>            Dc.l cif_eq                                     ;cifeq
0003B4B6 <AmiBlitz3_wizzard.ab2@28323>            Dc.l cif_gt                                     ;cifgt
0003B4BA <AmiBlitz3_wizzard.ab2@28324>            Ds.l 1                                          ;0
0003B4BE <AmiBlitz3_wizzard.ab2@28325>            Dc.l cif_le                                     ;cifle
0003B4C2 <AmiBlitz3_wizzard.ab2@28326>            Dc.l cif_ne                                     ;cifne
0003B4C6 <AmiBlitz3_wizzard.ab2@28327>            Dc.l cif_le                                     ;cifge
0003B4CA <AmiBlitz3_wizzard.ab2@28328>            Ds.l 1                                          ;0
0003B4CE <AmiBlitz3_wizzard.ab2@28329>            Dc.l cif_ge                                     ;cifge
0003B4D2 <AmiBlitz3_wizzard.ab2@28330>            Dc.l cif_ne                                     ;cifne
0003B4D6 <AmiBlitz3_wizzard.ab2@28331>            Dc.l cif_ge                                     ;cifge
0003B4DA <AmiBlitz3_wizzard.ab2@28332>            Ds.l 1                                          ;0
0003B4DE <AmiBlitz3_wizzard.ab2@28335>            Dc.l do_newtype                                 ;donewtype
0003B4E2 <AmiBlitz3_wizzard.ab2@28336>            Dc.l do_end                                     ;doend
0003B4E6 <AmiBlitz3_wizzard.ab2@28337>            Dc.l do_let                                     ;dolet
0003B4EA <AmiBlitz3_wizzard.ab2@28338>            Dc.l do_dim                                     ;dodim
0003B4EE <AmiBlitz3_wizzard.ab2@28339>            Dc.l do_goto                                    ;dogoto
0003B4F2 <AmiBlitz3_wizzard.ab2@28340>            Dc.l do_gosub                                   ;dogosub
0003B4F6 <AmiBlitz3_wizzard.ab2@28341>            Dc.l do_return                                  ;doreturn
0003B4FA <AmiBlitz3_wizzard.ab2@28342>            Dc.l do_statement                               ;dostatement
0003B4FE <AmiBlitz3_wizzard.ab2@28343>            Dc.l do_function                                ;dofunc
0003B502 <AmiBlitz3_wizzard.ab2@28344>            Dc.l do_mousewait                               ;domwait
0003B506 <AmiBlitz3_wizzard.ab2@28345>            Dc.l do_if                                      ;doif
0003B50A <AmiBlitz3_wizzard.ab2@28346>            Dc.l do_while                                   ;dowhile
0003B50E <AmiBlitz3_wizzard.ab2@28347>            Dc.l do_Macro                                   ;domacro
0003B512 <AmiBlitz3_wizzard.ab2@28348>            Dc.l do_select                                  ;doselect
0003B516 <AmiBlitz3_wizzard.ab2@28349>            Dc.l do_case                                    ;docase
0003B51A <AmiBlitz3_wizzard.ab2@28350>            Dc.l do_default                                 ;dodefault
0003B51E <AmiBlitz3_wizzard.ab2@28351>            Dc.l do_AsmExit                                 ;doasmexit
0003B522 <AmiBlitz3_wizzard.ab2@28352>            Dc.l do_xinclude                                ;doxinclude
0003B526 <AmiBlitz3_wizzard.ab2@28353>            Dc.l do_INCLUDE                                 ;doinclude
0003B52A <AmiBlitz3_wizzard.ab2@28354>            Dc.l do_syntax                                  ;syntaxerr
0003B52E <AmiBlitz3_wizzard.ab2@28355>            Dc.l do_shared                                  ;doshared
0003B532 <AmiBlitz3_wizzard.ab2@28356>            Dc.l do_for                                     ;dofor
0003B536 <AmiBlitz3_wizzard.ab2@28357>            Dc.l do_next                                    ;donext
0003B53A <AmiBlitz3_wizzard.ab2@28358>            Dc.l syntaxerr                                  ; To
0003B53E <AmiBlitz3_wizzard.ab2@28359>            Dc.l syntaxerr                                  ; Step
0003B542 <AmiBlitz3_wizzard.ab2@28360>            Dc.l do_data                                    ;dodata
0003B546 <AmiBlitz3_wizzard.ab2@28361>            Dc.l do_read                                    ;doread
0003B54A <AmiBlitz3_wizzard.ab2@28365>            Dc.l syntaxerr                                  ; CNIF
0003B54E <AmiBlitz3_wizzard.ab2@28366>            Dc.l syntaxerr                                  ; CSIF
0003B552 <AmiBlitz3_wizzard.ab2@28367>            Dc.l syntaxerr                                  ; CELSE
0003B556 <AmiBlitz3_wizzard.ab2@28368>            Dc.l syntaxerr                                  ; CEND
0003B55A <AmiBlitz3_wizzard.ab2@28369>            Dc.l do_cerr                                    ;docerr
0003B55E <AmiBlitz3_wizzard.ab2@28370>            Dc.l do_then                                    ;dothen
0003B562 <AmiBlitz3_wizzard.ab2@28371>            Dc.l do_else                                    ;doelse
0003B566 <AmiBlitz3_wizzard.ab2@28372>            Dc.l do_even4                                   ;doeven4
0003B56A <AmiBlitz3_wizzard.ab2@28373>            Dc.l do_even8                                   ;doeven8
0003B56E <AmiBlitz3_wizzard.ab2@28375>            Dc.l do_dc                                      ;dodc
0003B572 <AmiBlitz3_wizzard.ab2@28376>            Dc.l do_ds                                      ;dods
0003B576 <AmiBlitz3_wizzard.ab2@28377>            Dc.l do_even                                    ;doeven
0003B57A <AmiBlitz3_wizzard.ab2@28378>            Dc.l do_dcb                                     ;dodcb
0003B57E <AmiBlitz3_wizzard.ab2@28379>            Dc.l do_setreg                                  ;dosetreg
0003B582 <AmiBlitz3_wizzard.ab2@28380>            Dc.l do_IncBin                                  ;doincbin
0003B586 <AmiBlitz3_wizzard.ab2@28381>            Dc.l do_free                                    ;dofree
0003B58A <AmiBlitz3_wizzard.ab2@28382>            Dc.l do_use                                     ;douse
0003B58E <AmiBlitz3_wizzard.ab2@28383>            Dc.l do_Stop                                    ;dostop
0003B592 <AmiBlitz3_wizzard.ab2@28384>            Dc.l do_Cont                                    ;docont
0003B596 <AmiBlitz3_wizzard.ab2@28385>            Dc.l syntaxerr                                  ;syntaxeer
0003B59A <AmiBlitz3_wizzard.ab2@28386>            Dc.l do_SetInt                                  ;dosetint
0003B59E <AmiBlitz3_wizzard.ab2@28387>            Dc.l do_ClrInt                                  ;doclrint
0003B5A2 <AmiBlitz3_wizzard.ab2@28388>            Dc.l do_MaxLen                                  ;domaxlen
0003B5A6 <AmiBlitz3_wizzard.ab2@28389>            Dc.l do_DEFTYPE                                 ;dodeftype
0003B5AA <AmiBlitz3_wizzard.ab2@28390>            Dc.l do_BLITZ                                   ;doblitz
0003B5AE <AmiBlitz3_wizzard.ab2@28391>            Dc.l do_AMIGA                                   ;doamiga
0003B5B2 <AmiBlitz3_wizzard.ab2@28392>            Dc.l do_QAMIGA                                  ;doqamiga
0003B5B6 <AmiBlitz3_wizzard.ab2@28393>            Dc.l do_VWait                                   ;dovwait
0003B5BA <AmiBlitz3_wizzard.ab2@28394>            Dc.l do_LibJsr                                  ;dolibjsr
0003B5BE <AmiBlitz3_wizzard.ab2@28395>            Dc.l do_TokeJsr                                 ;dotokejsr
0003B5C2 <AmiBlitz3_wizzard.ab2@28396>            Dc.l do_BLibJsr                                 ;doblibjsr
0003B5C6 <AmiBlitz3_wizzard.ab2@28397>            Dc.l _extb                                      ;syntaxerr
0003B5CA <AmiBlitz3_wizzard.ab2@28401>            Dc.l syntaxerr                                  ;syntaxerr      ;flash2 ; for list
0003B5CE <AmiBlitz3_wizzard.ab2@28402>            Dc.l do_SetErr                                  ;doseterr
0003B5D2 <AmiBlitz3_wizzard.ab2@28403>            Dc.l do_ClrErr                                  ;doclrerr
0003B5D6 <AmiBlitz3_wizzard.ab2@28404>            Dc.l syntaxerr                                  ;syntaxerr
0003B5DA <AmiBlitz3_wizzard.ab2@28405>            Dc.l do_ErrFail                                 ;doerrfail
0003B5DE <AmiBlitz3_wizzard.ab2@28406>            Dc.l syntaxerr
0003B5E2 <AmiBlitz3_wizzard.ab2@28407>            Dc.l syntaxerr                                  ;mod
0003B5E6 <AmiBlitz3_wizzard.ab2@28408>            Dc.l syntaxerr                                  ;Pi
0003B5EA <AmiBlitz3_wizzard.ab2@28409>            Dc.l do_Repeat                                  ;dorepeat
0003B5EE <AmiBlitz3_wizzard.ab2@28410>            Dc.l do_Until                                   ;dountil
0003B5F2 <AmiBlitz3_wizzard.ab2@28411>            Dc.l do_PutReg                                  ;doputreg
0003B5F6 <AmiBlitz3_wizzard.ab2@28412>            Dc.l do_Pop                                     ;dopop
0003B5FA <AmiBlitz3_wizzard.ab2@28413>            Dc.l do_INCDIR                                  ;doincdir
0003B5FE <AmiBlitz3_wizzard.ab2@28414>            Dc.l mydo_Endif2                                ;mydoendif2
0003B602 <AmiBlitz3_wizzard.ab2@28415>            Dc.l do_Wend                                    ;dowend
0003B606 <AmiBlitz3_wizzard.ab2@28416>            Dc.l do_SysJsr                                  ;dosysjsr
0003B60A <AmiBlitz3_wizzard.ab2@28417>            Dc.l do_WBStartup                               ;dowbstartup
0003B60E <AmiBlitz3_wizzard.ab2@28418>            Dc.l syntaxerr
0003B612 <AmiBlitz3_wizzard.ab2@28419>            Dc.l do_Ongo                                    ;doongo
0003B616 <AmiBlitz3_wizzard.ab2@28420>            Dc.l syntaxerr
0003B61A <AmiBlitz3_wizzard.ab2@28421>            Dc.l do_Forever                                 ;doforever
0003B61E <AmiBlitz3_wizzard.ab2@28422>            Dc.l do_Restore                                 ;dorestore
0003B622 <AmiBlitz3_wizzard.ab2@28423>            Dc.l do_Exchange                                ;doexchange
0003B626 <AmiBlitz3_wizzard.ab2@28424>            Dc.l do_USEPATH                                 ;dousepath
0003B62A <AmiBlitz3_wizzard.ab2@28425>            Dc.l do_CloseEd                                 ;doclosed
0003B62E <AmiBlitz3_wizzard.ab2@28426>            Dc.l do_NoCli                                   ;donocli
0003B632 <AmiBlitz3_wizzard.ab2@28427>            Dc.l syntaxerr                                  ;syntaxerr
0003B636 <AmiBlitz3_wizzard.ab2@28428>            Dc.l syntaxerr                                  ;syntaxerr
0003B63A <AmiBlitz3_wizzard.ab2@28429>            Dc.l syntaxerr                                  ;syntaxerr
0003B63E <AmiBlitz3_wizzard.ab2@28430>            Dc.l syntaxerr                                  ;syntaxerr
0003B642 <AmiBlitz3_wizzard.ab2@28431>            Dc.l syntaxerr                                  ;syntaxerr
0003B646 <AmiBlitz3_wizzard.ab2@28432>            Dc.l do_runerrson                               ;dorunerrson
0003B64A <AmiBlitz3_wizzard.ab2@28433>            Dc.l do_runerrsoff                              ;dorunerrsoff
0003B64E <AmiBlitz3_wizzard.ab2@28434>            Dc.l do_uselastpath
0003B652 <AmiBlitz3_wizzard.ab2@28435>            Dc.l do_regload
0003B656 <AmiBlitz3_wizzard.ab2@28436>            Dc.l do_regsave
0003B65A <AmiBlitz3_wizzard.ab2@28437>            Dc.l do_Object
0003B65E <AmiBlitz3_wizzard.ab2@28438>            Dc.l do_usepath2
0003B662 <AmiBlitz3_wizzard.ab2@28439>            Dc.l do_LastRunErrsMode
0003B666 <AmiBlitz3_wizzard.ab2@28462> menu_items:Dc.l menu_compile_run                                ;menuadds oreg source
0003B66A <AmiBlitz3_wizzard.ab2@28463>            Dc.l menu_run
0003B66E <AmiBlitz3_wizzard.ab2@28464>            Dc.l menu_createexecutable
0003B672 <AmiBlitz3_wizzard.ab2@28465>            Dc.l menu_dummyfunc          ;was menu_compileroptions
0003B676 <AmiBlitz3_wizzard.ab2@28466>            Dc.l menu_createresidentfile
0003B67A <AmiBlitz3_wizzard.ab2@28467>            Dc.l menu_viewnewtypes
0003B67E <AmiBlitz3_wizzard.ab2@28468>            Dc.l menu_simcliarguments
0003B682 <AmiBlitz3_wizzard.ab2@28469>            Dc.l menu_dummyfunc          ;was menu_calculator
0003B686 <AmiBlitz3_wizzard.ab2@28470>            Dc.l menu_reloadlibs
0003B68A <AmiBlitz3_wizzard.ab2@28471>            Dc.l menu_loaddebugmodule
0003B68E <AmiBlitz3_wizzard.ab2@28472>            Dc.l menu_dummyfunc
0003B692 <AmiBlitz3_wizzard.ab2@28473>            Dc.l menu_newcreate
0003B696 <AmiBlitz3_wizzard.ab2@28474>            Dc.l menu_dummyfunc
0003B69A <AmiBlitz3_wizzard.ab2@28475>            Dc.l toggledebug
0003B69E <AmiBlitz3_wizzard.ab2@28476>            Dc.l menu_dummyfunc
0003B6A2 <AmiBlitz3_wizzard.ab2@28477>            Dc.l menu_dummyfunc
0003B6A4 <AmiBlitz3_wizzard.ab2@28478> Even4
0003B6CE <AmiBlitz3_wizzard.ab2@28482>   !basic
0003B724 <AmiBlitz3_wizzard.ab2@28483>   error{!TRANS{"Inavlid amiblitz3 menu item called!"} }
0003B742 <AmiBlitz3_wizzard.ab2@28484>   !asm
0003B744 <AmiBlitz3_wizzard.ab2@28485> RTS
0003B745 <AmiBlitz3_wizzard.ab2@28491> set_autorun:               Dc.b $00
0003B74A <AmiBlitz3_wizzard.ab2@28492> autorun:                   Dc.b $80,$01,$01,$00,$01
0003B74B <AmiBlitz3_wizzard.ab2@28494> set_interruptcheck:        Dc.b $00
0003B750 <AmiBlitz3_wizzard.ab2@28495> interruptcheck             Dc.b $80,$01,$01,$00,$01
0003B751 <AmiBlitz3_wizzard.ab2@28497> set_assemblercheck:        Ds.b 1
0003B756 <AmiBlitz3_wizzard.ab2@28498> assemblercheck:            Dc.b $00,$01,$01,$00,$01
0003B757 <AmiBlitz3_wizzard.ab2@28500> set_overflowcheck:         Ds.b 1
0003B75C <AmiBlitz3_wizzard.ab2@28501> overflowcheck:             Dc.b $00,$01,$01,$00,$01
0003B762 <AmiBlitz3_wizzard.ab2@28503> default_obsolete:          Dc.b $00,$80,$01,$01,$00,$01
0003B768 <AmiBlitz3_wizzard.ab2@28504> default_interruptcheck:    Dc.b $00,$80,$01,$01,$00,$01
0003B76E <AmiBlitz3_wizzard.ab2@28505> default_overflowcheck:     Dc.b $00,$80,$01,$01,$00,$01
0003B770 <AmiBlitz3_wizzard.ab2@28506> Even4
0003B77C <AmiBlitz3_wizzard.ab2@28509> tsthead:                   Dc.l $000003F3,$00000000,$00000001
0003B784 <AmiBlitz3_wizzard.ab2@28510>                            Dc.l $00000000,$00000000
0003B78C <AmiBlitz3_wizzard.ab2@28511> tstsize1:                  Dc.l $00000100,$000003E9
0003B790 <AmiBlitz3_wizzard.ab2@28512> tstsize2:                  Dc.l $00000100
0003B794 <AmiBlitz3_wizzard.ab2@28513> tstend:                    Dc.l $000003EC
0003B79C <AmiBlitz3_wizzard.ab2@28514> tstsize3:                  Ds.l 2
0003B7A0 <AmiBlitz3_wizzard.ab2@28515> tstdone:                   Dc.l $000003F2
0003B7A4 <AmiBlitz3_wizzard.ab2@28518> edstruct:                  Dc.l tokens                     ;data for ted
0003B7A8 <AmiBlitz3_wizzard.ab2@28522>                            Dc.l 0
0003B7AC <AmiBlitz3_wizzard.ab2@28524>                            Dc.l read_xtrafile              ;load .xtra routine
0003B7B0 <AmiBlitz3_wizzard.ab2@28525>                            Dc.l write_xtrafile             ;save .xtra routine
0003B7B4 <AmiBlitz3_wizzard.ab2@28526>                            Dc.l call_menuentry             ;Menu Routine
0003B7B8 <AmiBlitz3_wizzard.ab2@28527>                            Ds.l 1                          ;cleanup (?)
0003B7BC <AmiBlitz3_wizzard.ab2@28528>                            Dc.b ":",34,".;"
0003B8B8 <AmiBlitz3_wizzard.ab2@28531> 
0003B998 <AmiBlitz3_wizzard.ab2@28532>                            Ds.l 56
0003B99A <AmiBlitz3_wizzard.ab2@28537> lslimm:                    Dc.b $E1,$48                                             ;LSL.W   #8,D0
0003B99E <AmiBlitz3_wizzard.ab2@28540> use:                       Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0003B9A0 <AmiBlitz3_wizzard.ab2@28541>                            Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0003B9A4 <AmiBlitz3_wizzard.ab2@28542>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003B9AA <AmiBlitz3_wizzard.ab2@28546> beginarr:                  Dc.b $20,$3C,$00,$00,$00,$00                             ;MOVE.L  #$00000000,D0
0003B9AC <AmiBlitz3_wizzard.ab2@28550>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003B9B0 <AmiBlitz3_wizzard.ab2@28553> putarr:                    Dc.b $2B,$40 :                            Dc.b $00,$00   ;MOVE.L  D0,$0000(A5)
0003B9B4 <AmiBlitz3_wizzard.ab2@28556> doarr:                     Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003B9B8 <AmiBlitz3_wizzard.ab2@28557>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003B9BA <AmiBlitz3_wizzard.ab2@28563>                            Dc.b $4A,$40                                             ;TST.W   D0
0003B9BC <AmiBlitz3_wizzard.ab2@28567>                            Dc.b $4A,$80                                             ;TST.L   D0
0003B9BE <AmiBlitz3_wizzard.ab2@28570> nops8:                     Dc.b $4E,$71                                             ;NOP
0003B9C0 <AmiBlitz3_wizzard.ab2@28571>                            Dc.b $4E,$71                                             ;NOP
0003B9C2 <AmiBlitz3_wizzard.ab2@28572>                            Dc.b $4E,$71                                             ;NOP
0003B9C4 <AmiBlitz3_wizzard.ab2@28573>                            Dc.b $4E,$71                                             ;NOP
0003B9C6 <AmiBlitz3_wizzard.ab2@28574> nops4:                     Dc.b $4E,$71                                             ;NOP
0003B9C8 <AmiBlitz3_wizzard.ab2@28576>                            Dc.b $4E,$71                                             ;NOP
0003B9CA <AmiBlitz3_wizzard.ab2@28577>                            Dc.b $4E,$71                                             ;NOP
0003B9CC <AmiBlitz3_wizzard.ab2@28578>                            Dc.b $4E,$71                                             ;NOP
0003B9D0 <AmiBlitz3_wizzard.ab2@28582> dataget:                   Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003B9D4 <AmiBlitz3_wizzard.ab2@28585> dataput:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003B9D6 <AmiBlitz3_wizzard.ab2@28588> stlenget:                  Dc.b $2F,$1B                                             ;MOVE.L  (A3)+,-(A7)
0003B9D8 <AmiBlitz3_wizzard.ab2@28591> stalign:                   Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003B9DA <AmiBlitz3_wizzard.ab2@28592>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003B9DE <AmiBlitz3_wizzard.ab2@28593>                            Dc.b $08,$80,$00,$00                                     ;BCLR    #0,D0
0003B9E0 <AmiBlitz3_wizzard.ab2@28594>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003B9E2 <AmiBlitz3_wizzard.ab2@28600> dataletb:                  Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003B9E6 <AmiBlitz3_wizzard.ab2@28601>                            Dc.b $1B,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A5)
0003B9E8 <AmiBlitz3_wizzard.ab2@28606> dataletbl:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003B9EC <AmiBlitz3_wizzard.ab2@28607>                            Dc.b $19,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A4)
0003B9EE <AmiBlitz3_wizzard.ab2@28611> dataletb2:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003B9F0 <AmiBlitz3_wizzard.ab2@28612>                            Dc.b $14,$9B                                             ;MOVE.B  (A3)+,(A2)
0003B9F4 <AmiBlitz3_wizzard.ab2@28618> dataletw:                  Dc.b $3B,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A5)
0003B9F6 <AmiBlitz3_wizzard.ab2@28619>                            Dc.b $34,$9B                                             ;MOVE.W  (A3)+,(A2)
0003B9FA <AmiBlitz3_wizzard.ab2@28620>                            Dc.b $39,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A4)
0003B9FE <AmiBlitz3_wizzard.ab2@28624> dataletl:                  Dc.b $2B,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A5)
0003BA00 <AmiBlitz3_wizzard.ab2@28625>                            Dc.b $24,$9B                                             ;MOVE.L  (A3)+,(A2)
0003BA04 <AmiBlitz3_wizzard.ab2@28626>                            Dc.b $29,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A4)
0003BA06 <AmiBlitz3_wizzard.ab2@28629> nextfixw:                  Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003BA0A <AmiBlitz3_wizzard.ab2@28632> nextfixw2:                 Dc.b $4F,$EF,$00,$0A                                     ;LEA $000A(A7),A7
0003BA0E <AmiBlitz3_wizzard.ab2@28635> nextfixl:                  Dc.b $4F,$EF,$00,$0C                                     ;LEA $000C(A7),A7
0003BA12 <AmiBlitz3_wizzard.ab2@28638> nextfixl2:                 Dc.b $4F,$EF,$00,$0E                                     ;LEA $000E(A7),A7
0003BA16 <AmiBlitz3_wizzard.ab2@28642>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003BA18 <AmiBlitz3_wizzard.ab2@28643>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003BA1A <AmiBlitz3_wizzard.ab2@28644>                            Dc.b $D1,$12                                             ;ADD.B   D0,(A2)
0003BA1E <AmiBlitz3_wizzard.ab2@28649>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003BA20 <AmiBlitz3_wizzard.ab2@28650>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003BA22 <AmiBlitz3_wizzard.ab2@28651>                            Dc.b $D1,$52                                             ;ADD.W   D0,(A2)
0003BA26 <AmiBlitz3_wizzard.ab2@28656>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003BA28 <AmiBlitz3_wizzard.ab2@28657>                            Dc.b $20,$17                                             ;MOVE.L  (A7),D0
0003BA2A <AmiBlitz3_wizzard.ab2@28658>                            Dc.b $D1,$92                                             ;ADD.L   D0,(A2)
0003BA2E <AmiBlitz3_wizzard.ab2@28663>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003BA30 <AmiBlitz3_wizzard.ab2@28664>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003BA32 <AmiBlitz3_wizzard.ab2@28665>                            Dc.b $22,$17                                             ;MOVE.L  (A7),D1
0003BA36 <AmiBlitz3_wizzard.ab2@28666>                            Dc.b $4E,$AE,$FF,$BE                                     ;JSR -$0042(A6)
0003BA38 <AmiBlitz3_wizzard.ab2@28667>                            Dc.b $24,$80                                             ;MOVE.L  D0,(A2)
0003BA3C <AmiBlitz3_wizzard.ab2@28672>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003BA3E <AmiBlitz3_wizzard.ab2@28673>                            Dc.b $10,$12                                             ;MOVE.B  (A2),D0
0003BA42 <AmiBlitz3_wizzard.ab2@28674>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003BA44 <AmiBlitz3_wizzard.ab2@28675>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003BA48 <AmiBlitz3_wizzard.ab2@28676>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000001         ;.skip org source
0003BA4A <AmiBlitz3_wizzard.ab2@28677>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003BA4C <AmiBlitz3_wizzard.ab2@28680>                            Dc.b $B0,$01                                             ;CMP.B   D1,D0
0003BA50 <AmiBlitz3_wizzard.ab2@28685>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003BA52 <AmiBlitz3_wizzard.ab2@28686>                            Dc.b $30,$12                                             ;MOVE.W  (A2),D0
0003BA56 <AmiBlitz3_wizzard.ab2@28687>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003BA58 <AmiBlitz3_wizzard.ab2@28688>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003BA5C <AmiBlitz3_wizzard.ab2@28689>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000002         ;.skip org source
0003BA5E <AmiBlitz3_wizzard.ab2@28690>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003BA60 <AmiBlitz3_wizzard.ab2@28693>                            Dc.b $B0,$41                                             ;CMP.W   D1,D0
0003BA64 <AmiBlitz3_wizzard.ab2@28698>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003BA66 <AmiBlitz3_wizzard.ab2@28699>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003BA6A <AmiBlitz3_wizzard.ab2@28700>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003BA6C <AmiBlitz3_wizzard.ab2@28701>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003BA70 <AmiBlitz3_wizzard.ab2@28702>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000003         ;.skip org source
0003BA72 <AmiBlitz3_wizzard.ab2@28703>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003BA74 <AmiBlitz3_wizzard.ab2@28706>                            Dc.b $B0,$81                                             ;CMP.L   D1,D0
0003BA78 <AmiBlitz3_wizzard.ab2@28711>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003BA7A <AmiBlitz3_wizzard.ab2@28712>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003BA7E <AmiBlitz3_wizzard.ab2@28713>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003BA84 <AmiBlitz3_wizzard.ab2@28714>                            Dc.b $08,$2F,$00,$07,$00,$03                             ;BTST    #7,$0003(A7)
0003BA88 <AmiBlitz3_wizzard.ab2@28715>                            Dc.b $67,$00,$00,$04                                     ;BEQ.W   L000004
0003BA8A <AmiBlitz3_wizzard.ab2@28716>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003BA8E <AmiBlitz3_wizzard.ab2@28723>                            Dc.b $4E,$AE,$FF,$D6                                     ;JSR -$002A(A6)
0003BA90 <AmiBlitz3_wizzard.ab2@28727> swapd0:                    Dc.b $48,$40                                             ;SWAP    D0
0003BA92 <AmiBlitz3_wizzard.ab2@28730> pushindex:                 Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003BA96 <AmiBlitz3_wizzard.ab2@28733> leaamp:                    Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003BA98 <AmiBlitz3_wizzard.ab2@28734> leaamp2:                   Dc.b $20,$0A                                             ;MOVE.L  A2,D0
0003BA9C <AmiBlitz3_wizzard.ab2@28737> leaampl:                   Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003BA9E <AmiBlitz3_wizzard.ab2@28740> stamp:                     Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003BAA2 <AmiBlitz3_wizzard.ab2@28743> stamp2:                    Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003BAA4 <AmiBlitz3_wizzard.ab2@28747>                            Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
0003BAA6 <AmiBlitz3_wizzard.ab2@28750> pushd0wd:                  Dc.b $3F,$00                                             ;MOVE.W  D0,-(A7)
0003BAA8 <AmiBlitz3_wizzard.ab2@28753> pushd0l:                   Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003BAAC <AmiBlitz3_wizzard.ab2@28756> movenumrep:                Dc.b $3E,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D7
0003BAB0 <AmiBlitz3_wizzard.ab2@28759> preplibst:                 Dc.b $45,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A2
0003BAB4 <AmiBlitz3_wizzard.ab2@28762> fixlibst:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003BAB6 <AmiBlitz3_wizzard.ab2@28765> pushdn:                    Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003BAB8 <AmiBlitz3_wizzard.ab2@28768> movea3a7:                  Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003BABC <AmiBlitz3_wizzard.ab2@28771> movestst2:                 Dc.b $20,$2F :                            Dc.b $00,$06   ;MOVE.L  $0006(A7),D0
0003BAC2 <AmiBlitz3_wizzard.ab2@28772>                            Dc.b $3F,$6F,$00,$04,$00,$08                             ;MOVE.W  $0004(A7),$0008(A7)
0003BAC4 <AmiBlitz3_wizzard.ab2@28773>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003BAC8 <AmiBlitz3_wizzard.ab2@28777> movea7dn:                  Dc.b $20,$2F :                            Dc.b $00,$04   ;MOVE.L  $0004(A7),D0
0003BACA <AmiBlitz3_wizzard.ab2@28778>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003BACC <AmiBlitz3_wizzard.ab2@28782> moved0a3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003BAD0 <AmiBlitz3_wizzard.ab2@28785> movestdn:                  Dc.b $20,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),D0
0003BAD2 <AmiBlitz3_wizzard.ab2@28789>                            Dc.b $20,$0B                                             ;MOVE.L  A3,D0
0003BAD4 <AmiBlitz3_wizzard.ab2@28793>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003BAD6 <AmiBlitz3_wizzard.ab2@28797>                            Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003BADA <AmiBlitz3_wizzard.ab2@28800> moverts:                   Dc.b $2F,$57 :                            Dc.b $00,$00   ;MOVE.L  (A7),$0000(A7)
0003BADE <AmiBlitz3_wizzard.ab2@28803> fixstack:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003BAE0 <AmiBlitz3_wizzard.ab2@28806> fixq:                      Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003BAE2 <AmiBlitz3_wizzard.ab2@28809> fix1:                      Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003BAE4 <AmiBlitz3_wizzard.ab2@28812> movedna3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003BAE8 <AmiBlitz3_wizzard.ab2@28815> least:                     Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003BAEC <AmiBlitz3_wizzard.ab2@28818> funcst:                    Dc.b $2F,$2C :                            Dc.b $00,$00   ;MOVE.L  $0000(A4),-(A7)
0003BAEE <AmiBlitz3_wizzard.ab2@28821> addq4a2:                   Dc.b $58,$4A                                             ;ADDQ.W  #4,A2
0003BAF0 <AmiBlitz3_wizzard.ab2@28825>                            Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003BAF4 <AmiBlitz3_wizzard.ab2@28828>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003BAF6 <AmiBlitz3_wizzard.ab2@28834>                            Dc.b $26,$5F                                             ;MOVEA.L (A7)+,A3
0003BAFA <AmiBlitz3_wizzard.ab2@28837>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003BAFC <AmiBlitz3_wizzard.ab2@28843>                            Dc.b $CB,$4C                                             ;EXG A5,A4
0003BB00 <AmiBlitz3_wizzard.ab2@28847> linksize:                  Dc.b $4E,$54 :                            Dc.b $00,$00   ;LINK    A4,#-$0000
0003BB02 <AmiBlitz3_wizzard.ab2@28850> unlinka4:                  Dc.b $4E,$5C                                             ;UNLK    A4
0003BB04 <AmiBlitz3_wizzard.ab2@28854>                            Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003BB06 <AmiBlitz3_wizzard.ab2@28858>                            Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003BB0C <AmiBlitz3_wizzard.ab2@28861> gotocode:                  Dc.b $4E,$F9,$00,$00,$00,$00                             ;JMP $00000000
0003BB12 <AmiBlitz3_wizzard.ab2@28864> gosubcode:                 Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003BB1A <AmiBlitz3_wizzard.ab2@28868> mwait:                     Dc.b $08,$39,$00,$06,$00,$BF,$E0,$01                     ;BTST    #6,$00BFE001
0003BB1E <AmiBlitz3_wizzard.ab2@28869>                            Dc.b $66,$00,$FF,$F6                                     ;BNE.W   L000005       ;mwait: org source
0003BB20 <AmiBlitz3_wizzard.ab2@28873> libreg:                    Dc.b $20,$00                                             ;MOVE.L  D0,D0
0003BB24 <AmiBlitz3_wizzard.ab2@28876> libbase:                   Dc.b $2C,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A6
0003BB28 <AmiBlitz3_wizzard.ab2@28879> libjsr:                    Dc.b $4E,$AE :                            Dc.b $00,$00   ;JSR $0000(A6)
0003BB2C <AmiBlitz3_wizzard.ab2@28882> regtransd:                 Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003BB30 <AmiBlitz3_wizzard.ab2@28883> regtransa:                 Dc.b $20,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A0
0003BB34 <AmiBlitz3_wizzard.ab2@28887>                            Dc.b $26,$7C,$00,$00                                     ;MOVEA.L #$00000000,A3
0003BB38 <AmiBlitz3_wizzard.ab2@28889>                            Dc.l $3F1B                                               ;MOVE.W  (A3)+,-(A7)
0003BB3A <AmiBlitz3_wizzard.ab2@28892> movea2dn:                  Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003BB3E <AmiBlitz3_wizzard.ab2@28895> moved3a5dn:                Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003BB40 <AmiBlitz3_wizzard.ab2@28898> stvarget2:                 Dc.b $70,$00                                             ;MOVEQ   #$00,D0
0003BB42 <AmiBlitz3_wizzard.ab2@28899>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003BB44 <AmiBlitz3_wizzard.ab2@28900>                            Dc.b $4A,$92                                             ;TST.L   (A2)
0003BB48 <AmiBlitz3_wizzard.ab2@28901> 
0003BB4A <AmiBlitz3_wizzard.ab2@28902>                            Dc.b $20,$52                                             ;MOVEA.L (A2),A0
0003BB4C <AmiBlitz3_wizzard.ab2@28903>                            Dc.b $59,$48                                             ;SUBQ.W  #4,A0
0003BB4E <AmiBlitz3_wizzard.ab2@28904>                            Dc.b $2E,$98                                             ;MOVE.L  (A0)+,(A7)
0003BB54 <AmiBlitz3_wizzard.ab2@28906>                            Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003BB56 <AmiBlitz3_wizzard.ab2@28911> addcode:                   Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003BB58 <AmiBlitz3_wizzard.ab2@28912>                            Dc.b $D1,$97                                             ;ADD.L   D0,(A7)
0003BB5A <AmiBlitz3_wizzard.ab2@28916> pushlen:                   Dc.b $2F,$18                                             ;MOVE.L  (A0)+,-(A7)
0003BB5E <AmiBlitz3_wizzard.ab2@28919> leaa5d3a2:                 Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003BB60 <AmiBlitz3_wizzard.ab2@28922> pusha2:                    Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003BB62 <AmiBlitz3_wizzard.ab2@28926>                            Dc.b $24,$57                                             ;MOVEA.L (A7),A2
0003BB64 <AmiBlitz3_wizzard.ab2@28929> pulla2:                    Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003BB68 <AmiBlitz3_wizzard.ab2@28932> pulla2st:                  Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003BB6A <AmiBlitz3_wizzard.ab2@28933>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003BB6E <AmiBlitz3_wizzard.ab2@28937> pusha3:                    Dc.b $2F,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),-(A7)
0003BB72 <AmiBlitz3_wizzard.ab2@28938> pusha32:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003BB76 <AmiBlitz3_wizzard.ab2@28942> pulla3:                    Dc.b $2B,$5F :                            Dc.b $00,$00   ;MOVE.L  (A7)+,$0000(A5)
0003BB7A <AmiBlitz3_wizzard.ab2@28946> geta3:                     Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003BB80 <AmiBlitz3_wizzard.ab2@28950> numtoa0:                   Dc.b $20,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A0
0003BB86 <AmiBlitz3_wizzard.ab2@28953> numtoa2:                   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0003BB8A <AmiBlitz3_wizzard.ab2@28957> endarray:                  Dc.b $38,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D4
0003BB8E <AmiBlitz3_wizzard.ab2@28961>                            Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003BB92 <AmiBlitz3_wizzard.ab2@28962>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003BB98 <AmiBlitz3_wizzard.ab2@28967>                            Dc.b $20,$3C,$00,$00,$00,$04                             ;MOVE.L  #$00000004,D0
0003BB9C <AmiBlitz3_wizzard.ab2@28972>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003BB9E <AmiBlitz3_wizzard.ab2@28977>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003BBA2 <AmiBlitz3_wizzard.ab2@28981>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003BBA4 <AmiBlitz3_wizzard.ab2@28985> movea0:                    Dc.b $24,$52                                             ;MOVEA.L (A2),A2
0003BBA6 <AmiBlitz3_wizzard.ab2@28988> adda0a0:                   Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003BBA8 <AmiBlitz3_wizzard.ab2@28989>                            Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003BBAC <AmiBlitz3_wizzard.ab2@28993>                            Dc.b $2C,$78,$00,$04                                     ;MOVEA.L $0004,A6
0003BBB0 <AmiBlitz3_wizzard.ab2@28997> movea5a0:                  Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003BBB4 <AmiBlitz3_wizzard.ab2@29000> movea0a0:                  Dc.b $24,$6A :                            Dc.b $00,$00   ;MOVEA.L $0000(A2),A2
0003BBB6 <AmiBlitz3_wizzard.ab2@29003> addqa0:                    Dc.b $52,$4A                                             ;ADDQ.W  #1,A2
0003BBBA <AmiBlitz3_wizzard.ab2@29006> leaa0a0:                   Dc.b $45,$EA :                            Dc.b $00,$00   ;LEA $0000(A2),A2
0003BBBC <AmiBlitz3_wizzard.ab2@29009> addrega2:                  Dc.b $D4,$C0                                             ;ADDA.W  D0,A2
0003BBC5 <AmiBlitz3_wizzard.ab2@29013>                            Dc.b "ram:test",0
0003BBC6 <AmiBlitz3_wizzard.ab2@29014> Even
0003BBCA <AmiBlitz3_wizzard.ab2@29018>                            Dc.l  0                          ;was  Ds.w 3 org source
0003BBCC <AmiBlitz3_wizzard.ab2@29020>                            Dc.w  0
0003BBD0 <AmiBlitz3_wizzard.ab2@29023> _mathffpbase:              Ds.l 1                           ;maths org source
0003BBD2 <AmiBlitz3_wizzard.ab2@29024> regnum:                    Ds.w 1                           ;regat org source       ;register being used!
0003BBD4 <AmiBlitz3_wizzard.ab2@29025> typelen:                   Ds.w 1
0003BBD8 <AmiBlitz3_wizzard.ab2@29026> prevtype:                  Ds.l 1
0003BBDC <AmiBlitz3_wizzard.ab2@29027> lastsourcepos:             Ds.l 1                           ;prevloc org source
0003BBDE <AmiBlitz3_wizzard.ab2@29028> lastchar:                  Ds.w 1
0003BBE2 <AmiBlitz3_wizzard.ab2@29029> thistype:                  Ds.l 1
0003BBE6 <AmiBlitz3_wizzard.ab2@29030> errstack:                  Ds.l 1
0003BBEA <AmiBlitz3_wizzard.ab2@29031> errcont:                   Ds.l 1
0003BBEC <AmiBlitz3_wizzard.ab2@29032> linemode:                  Ds.w 1                          ;0 if norm, 1 if newtype
0003BBEE <AmiBlitz3_wizzard.ab2@29033> linesleft:                 Ds.w 1
0003BBF2 <AmiBlitz3_wizzard.ab2@29034> sourceline:                Ds.l 1                          ;thisitem org source
0003BBF6 <AmiBlitz3_wizzard.ab2@29035> varbase:                   Ds.l 1                          ;firstvar org source
0003BBFA <AmiBlitz3_wizzard.ab2@29036> alllocals:                 Ds.l 1
0003BBFE <AmiBlitz3_wizzard.ab2@29037> firstlocal:                Ds.l 1
0003BC02 <AmiBlitz3_wizzard.ab2@29038> firstglob:                 Ds.l 1
0003BC04 <AmiBlitz3_wizzard.ab2@29039> globalvarpointer:          Ds.w 1                          ;varoff org source
0003BC06 <AmiBlitz3_wizzard.ab2@29040> locvaroff:                 Ds.w 1
0003BC0A <AmiBlitz3_wizzard.ab2@29041> firstitem_:                 Ds.l 1
0003BC0C <AmiBlitz3_wizzard.ab2@29042> numlines_org:              Ds.w 1                          ;numlines org source
0003BC0E <AmiBlitz3_wizzard.ab2@29043> returncode_org:            Ds.w 1                          ;returncode org source
0003BC12 <AmiBlitz3_wizzard.ab2@29044> firstiff:                  Ds.l 1                          ;firstif org source
0003BC16 <AmiBlitz3_wizzard.ab2@29045> ptr_seg_ped:               Ds.l 1                          ;segadd org source
0003BE16 <AmiBlitz3_wizzard.ab2@29046> str_pedfile:               Ds.b #MAX_STRINGSIZE            ;segname org source
0003BE26 <AmiBlitz3_wizzard.ab2@29047> str_mathffpname:           Dc.b "mathffp.library",0 : Even ;mathsname org source
0003C026 <AmiBlitz3_wizzard.ab2@29048> str_libfilename:           Ds.b #MAX_STRINGSIZE
0003C226 <AmiBlitz3_wizzard.ab2@29049> str_path_userlibs:         Ds.b #MAX_STRINGSIZE
0003C426 <AmiBlitz3_wizzard.ab2@29050> str_defaultdbug:           Ds.b #MAX_STRINGSIZE            ;debugname org source
0003C42A <AmiBlitz3_wizzard.ab2@29052> ptr_seg_debugger:          Ds.l 1                          ;dseg org source
0003C62A <AmiBlitz3_wizzard.ab2@29053> str_blitz3assign:          Ds.b #MAX_STRINGSIZE            ;dpath org source
0003C82A <AmiBlitz3_wizzard.ab2@29055> str_path_acidlibs:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003C82E <AmiBlitz3_wizzard.ab2@29056> size_acidlibs:             Ds.l 1                          ;acidlibs org source
0003CA2E <AmiBlitz3_wizzard.ab2@29057> str_path_deflibs:          Ds.b #MAX_STRINGSIZE            ;defname org source
0003CA32 <AmiBlitz3_wizzard.ab2@29058> size_deflibs:              Ds.l 1                          ;deflibs org source
0003CC32 <AmiBlitz3_wizzard.ab2@29059> str_tempfilename:          Ds.b #MAX_STRINGSIZE
0003CE32 <AmiBlitz3_wizzard.ab2@29061> str_temp_debugmodulename:  Ds.b #MAX_STRINGSIZE            ;dname org source
0003CE36 <AmiBlitz3_wizzard.ab2@29062> ptr_temp_debugmodule:      Ds.l 1                          ;dname2 org source
0003D036 <AmiBlitz3_wizzard.ab2@29064> str_path_includes:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003D03A <AmiBlitz3_wizzard.ab2@29070>   Dc.b $E3,$10,$00,$01                                     ;icondata  
0003D03E <AmiBlitz3_wizzard.ab2@29071>   Dc.b $00,$00,$00,$00
0003D042 <AmiBlitz3_wizzard.ab2@29072>   Dc.b $00,$19,$00,$11
0003D046 <AmiBlitz3_wizzard.ab2@29073>   Dc.b $00,$2E,$00,$18
0003D04A <AmiBlitz3_wizzard.ab2@29074>   Dc.b $00,$04,$00,$03
0003D04E <AmiBlitz3_wizzard.ab2@29075>   Dc.b $00,$01,$00,$22
0003D052 <AmiBlitz3_wizzard.ab2@29076>   Dc.b $73,$68,$00,$00
0003D056 <AmiBlitz3_wizzard.ab2@29077>   Dc.b $00,$00,$00,$00
0003D05A <AmiBlitz3_wizzard.ab2@29078>   Dc.b $00,$00,$00,$00
0003D05E <AmiBlitz3_wizzard.ab2@29079>   Dc.b $00,$00,$00,$00
0003D062 <AmiBlitz3_wizzard.ab2@29080>   Dc.b $00,$00,$00,$00
0003D066 <AmiBlitz3_wizzard.ab2@29081>   Dc.b $00,$00,$00,$00
0003D06A <AmiBlitz3_wizzard.ab2@29082>   Dc.b $03,$22,$00,$21
0003D06E <AmiBlitz3_wizzard.ab2@29083>   Dc.b $3C,$28,$00,$22
0003D072 <AmiBlitz3_wizzard.ab2@29084>   Dc.b $6E,$C0,$00,$00
0003D076 <AmiBlitz3_wizzard.ab2@29085>   Dc.b $00,$12,$00,$00
0003D07A <AmiBlitz3_wizzard.ab2@29086>   Dc.b $00,$0E,$00,$00
0003D07E <AmiBlitz3_wizzard.ab2@29087>   Dc.b $00,$00,$00,$00
0003D082 <AmiBlitz3_wizzard.ab2@29088>   Dc.b $00,$00,$00,$00
0003D086 <AmiBlitz3_wizzard.ab2@29089>   Dc.b $00,$00,$00,$00
0003D08A <AmiBlitz3_wizzard.ab2@29090>   Dc.b $00,$00,$00,$2E
0003D08E <AmiBlitz3_wizzard.ab2@29091>   Dc.b $00,$17,$00,$02
0003D092 <AmiBlitz3_wizzard.ab2@29092>   Dc.b $00,$01,$8E,$80
0003D096 <AmiBlitz3_wizzard.ab2@29093>   Dc.b $03,$00,$00,$00
0003D09A <AmiBlitz3_wizzard.ab2@29094>   Dc.b $00,$00,$FF,$FF
0003D09E <AmiBlitz3_wizzard.ab2@29095>   Dc.b $FF,$FF,$FF,$FC
0003D0A2 <AmiBlitz3_wizzard.ab2@29096>   Dc.b $80,$00,$00,$00
0003D0A6 <AmiBlitz3_wizzard.ab2@29097>   Dc.b $00,$00,$80,$00
0003D0AA <AmiBlitz3_wizzard.ab2@29098>   Dc.b $00,$3F,$BB,$40
0003D0AE <AmiBlitz3_wizzard.ab2@29099>   Dc.b $80,$1F,$C0,$00
0003D0B2 <AmiBlitz3_wizzard.ab2@29100>   Dc.b $00,$00,$80,$3F
0003D0B6 <AmiBlitz3_wizzard.ab2@29101>   Dc.b $C0,$0F,$BB,$40
0003D0BA <AmiBlitz3_wizzard.ab2@29102>   Dc.b $80,$1F,$C0,$00
0003D0BE <AmiBlitz3_wizzard.ab2@29103>   Dc.b $00,$00,$8E,$00
0003D0C2 <AmiBlitz3_wizzard.ab2@29104>   Dc.b $F8,$00,$00,$00
0003D0C6 <AmiBlitz3_wizzard.ab2@29105>   Dc.b $8F,$01,$FF,$00
0003D0CA <AmiBlitz3_wizzard.ab2@29106>   Dc.b $3B,$40,$81,$E3
0003D0CE <AmiBlitz3_wizzard.ab2@29107>   Dc.b $F7,$C0,$00,$00
0003D0D2 <AmiBlitz3_wizzard.ab2@29108>   Dc.b $80,$7F,$F8,$70
0003D0D6 <AmiBlitz3_wizzard.ab2@29109>   Dc.b $3B,$40,$80,$0F
0003D0DA <AmiBlitz3_wizzard.ab2@29110>   Dc.b $7C,$E0,$00,$00
0003D0DE <AmiBlitz3_wizzard.ab2@29111>   Dc.b $80,$00,$FD,$80
0003D0E2 <AmiBlitz3_wizzard.ab2@29112>   Dc.b $00,$00,$80,$01
0003D0E6 <AmiBlitz3_wizzard.ab2@29113>   Dc.b $F6,$00,$FB,$40
0003D0EA <AmiBlitz3_wizzard.ab2@29114>   Dc.b $80,$03,$EF,$00
0003D0EE <AmiBlitz3_wizzard.ab2@29115>   Dc.b $00,$00,$80,$07
0003D0F2 <AmiBlitz3_wizzard.ab2@29116>   Dc.b $87,$80,$3B,$40
0003D0F6 <AmiBlitz3_wizzard.ab2@29117>   Dc.b $80,$0F,$01,$C0
0003D0FA <AmiBlitz3_wizzard.ab2@29118>   Dc.b $00,$00,$80,$03
0003D0FE <AmiBlitz3_wizzard.ab2@29119>   Dc.b $F0,$70,$1D,$40
0003D102 <AmiBlitz3_wizzard.ab2@29120>   Dc.b $80,$00,$18,$1C
0003D106 <AmiBlitz3_wizzard.ab2@29121>   Dc.b $00,$00,$80,$00
0003D10A <AmiBlitz3_wizzard.ab2@29122>   Dc.b $10,$06,$03,$40
0003D10E <AmiBlitz3_wizzard.ab2@29123>   Dc.b $80,$00,$20,$1F
0003D112 <AmiBlitz3_wizzard.ab2@29124>   Dc.b $00,$00,$80,$00
0003D116 <AmiBlitz3_wizzard.ab2@29125>   Dc.b $00,$00,$01,$40
0003D11A <AmiBlitz3_wizzard.ab2@29126>   Dc.b $80,$00,$00,$00
0003D11E <AmiBlitz3_wizzard.ab2@29127>   Dc.b $00,$00,$80,$00
0003D122 <AmiBlitz3_wizzard.ab2@29128>   Dc.b $00,$00,$00,$00
0003D126 <AmiBlitz3_wizzard.ab2@29129>   Dc.b $00,$00,$00,$00
0003D12A <AmiBlitz3_wizzard.ab2@29130>   Dc.b $00,$00,$00,$00
0003D12E <AmiBlitz3_wizzard.ab2@29131>   Dc.b $00,$00,$00,$04
0003D132 <AmiBlitz3_wizzard.ab2@29132>   Dc.b $00,$3F,$FC,$01
0003D136 <AmiBlitz3_wizzard.ab2@29133>   Dc.b $BB,$44,$00,$60
0003D13A <AmiBlitz3_wizzard.ab2@29134>   Dc.b $FE,$00,$00,$04
0003D13E <AmiBlitz3_wizzard.ab2@29135>   Dc.b $00,$CF,$FF,$01
0003D142 <AmiBlitz3_wizzard.ab2@29136>   Dc.b $BB,$44,$1F,$EF
0003D146 <AmiBlitz3_wizzard.ab2@29137>   Dc.b $FF,$00,$00,$04
0003D14A <AmiBlitz3_wizzard.ab2@29138>   Dc.b $33,$FF,$FF,$E0
0003D14E <AmiBlitz3_wizzard.ab2@29139>   Dc.b $00,$04,$37,$FE
0003D152 <AmiBlitz3_wizzard.ab2@29140>   Dc.b $7F,$FC,$1B,$44
0003D156 <AmiBlitz3_wizzard.ab2@29141>   Dc.b $0F,$9C,$FF,$FF
0003D15A <AmiBlitz3_wizzard.ab2@29142>   Dc.b $00,$04,$03,$E3
0003D15E <AmiBlitz3_wizzard.ab2@29143>   Dc.b $FF,$FF,$DB,$44
0003D162 <AmiBlitz3_wizzard.ab2@29144>   Dc.b $00,$7F,$BF,$FF
0003D166 <AmiBlitz3_wizzard.ab2@29145>   Dc.b $80,$04,$00,$0F
0003D16A <AmiBlitz3_wizzard.ab2@29146>   Dc.b $3F,$FE,$00,$04
0003D16E <AmiBlitz3_wizzard.ab2@29147>   Dc.b $00,$06,$7F,$F8
0003D172 <AmiBlitz3_wizzard.ab2@29148>   Dc.b $1B,$44,$00,$0C
0003D176 <AmiBlitz3_wizzard.ab2@29149>   Dc.b $F7,$FC,$00,$04
0003D17A <AmiBlitz3_wizzard.ab2@29150>   Dc.b $00,$19,$F9,$FE
0003D17E <AmiBlitz3_wizzard.ab2@29151>   Dc.b $1B,$44,$00,$33
0003D182 <AmiBlitz3_wizzard.ab2@29152>   Dc.b $FE,$7F,$00,$04
0003D186 <AmiBlitz3_wizzard.ab2@29153>   Dc.b $00,$0F,$FF,$BF
0003D18A <AmiBlitz3_wizzard.ab2@29154>   Dc.b $CD,$44,$00,$03
0003D18E <AmiBlitz3_wizzard.ab2@29155>   Dc.b $EF,$EF,$F0,$04
0003D192 <AmiBlitz3_wizzard.ab2@29156>   Dc.b $00,$00,$7F,$DF
0003D196 <AmiBlitz3_wizzard.ab2@29157>   Dc.b $FB,$44,$00,$00
0003D19A <AmiBlitz3_wizzard.ab2@29158>   Dc.b $FF,$A7,$FC,$04
0003D19E <AmiBlitz3_wizzard.ab2@29159>   Dc.b $00,$00,$7E,$3F
0003D1A2 <AmiBlitz3_wizzard.ab2@29160>   Dc.b $FD,$44,$00,$00
0003D1A6 <AmiBlitz3_wizzard.ab2@29161>   Dc.b $00,$00,$00,$04
0003D1AA <AmiBlitz3_wizzard.ab2@29162>   Dc.b $7F,$FF,$FF,$FF
0003D1AE <AmiBlitz3_wizzard.ab2@29163>   Dc.b $FF,$FC,$00,$00
0003D1B2 <AmiBlitz3_wizzard.ab2@29164>   Dc.b $00,$01,$00,$00
0003D1B5 <AmiBlitz3_wizzard.ab2@29165>   Dc.b $00,$00,$04
0003D1BB <AmiBlitz3_wizzard.ab2@29168> str_infoextention2:  Dc.b ".info",0                           ;infoname org source
0003D1BC <AmiBlitz3_wizzard.ab2@29169> Even
0003D1C0 <AmiBlitz3_wizzard.ab2@29171> sysdebug:            Dc.l $3F0
0003D1C4 <AmiBlitz3_wizzard.ab2@29175> exelock              Ds.l 1
0003D1C8 <AmiBlitz3_wizzard.ab2@29179> includesourceline    Dc.l 0
0003D1CC <AmiBlitz3_wizzard.ab2@29180> linenum              Ds.l 1
0003D1D0 <AmiBlitz3_wizzard.ab2@29181> globallinecount      Ds.l 1
0003D1EC <AmiBlitz3_wizzard.ab2@29182> myversion            Dc.b "\\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
0003D1F0 <AmiBlitz3_wizzard.ab2@29183> calc_option          Dc.l 1
0003D1F4 <AmiBlitz3_wizzard.ab2@29184> versioninformation   Dc.l $00
0003D1F8 <AmiBlitz3_wizzard.ab2@29185> number_of_builds     Dc.l $00
0003D1FC <AmiBlitz3_wizzard.ab2@29188> BSS
0003D1FE <AmiBlitz3_wizzard.ab2@29189> debugnest            Ds.w 1
0003D202 <AmiBlitz3_wizzard.ab2@29190> instringf            Ds.l 1
0003D206 <AmiBlitz3_wizzard.ab2@29191> funcscanon           Ds.l 1
0003D21A <AmiBlitz3_wizzard.ab2@29192> storedebugmode       Ds.b 20
0003D21E <AmiBlitz3_wizzard.ab2@29193> firsttimepref        Ds.l 1
0003D21F <AmiBlitz3_wizzard.ab2@29194> funcparloop          Ds.b 1                   ; is 1 when function calling parameter are compile
0003D220 <AmiBlitz3_wizzard.ab2@29195> blitzparloop         Ds.b 1                   ; is 1 when blitzlib calling parameters are compile
0003D222 <AmiBlitz3_wizzard.ab2@29196> nostringopt          Ds.w 1
0003D2A2 <AmiBlitz3_wizzard.ab2@29197> path2:               Ds.l 32
0003D2A6 <AmiBlitz3_wizzard.ab2@29198> typebase             Dc.l 0
0003D2A8 <AmiBlitz3_wizzard.ab2@29199> doublepeek           Dc.w 0
0003D2AC <AmiBlitz3_wizzard.ab2@29200> lastoffset           Dc.l 0
0003D2AE <AmiBlitz3_wizzard.ab2@29201> firsttime            Dc.w 0
0003D2B2 <AmiBlitz3_wizzard.ab2@29202> lastdestpointer      Dc.l 0
0003D2B6 <AmiBlitz3_wizzard.ab2@29203> prevwritedat         Dc.l 0
0003D2BA <AmiBlitz3_wizzard.ab2@29204> lastsourceline       Dc.l 0
0003D2BE <AmiBlitz3_wizzard.ab2@29205> lastwritedat         Dc.l 0
0003D2C0 <AmiBlitz3_wizzard.ab2@29206> makeexec             Dc.w 0
0003D2C2 <AmiBlitz3_wizzard.ab2@29207> makeexec_remember    Dc.w 0
0003D2C6 <AmiBlitz3_wizzard.ab2@29208> sharebase            Ds.l 1
0003D2CA <AmiBlitz3_wizzard.ab2@29209> tempa7               Ds.l 1
0003D2CC <AmiBlitz3_wizzard.ab2@29210> incnif               Ds.w 1
0003D2D0 <AmiBlitz3_wizzard.ab2@29211> tempstore            Ds.l 1
0003D2D4 <AmiBlitz3_wizzard.ab2@29212> result               Ds.l 1
0003D2D6 <AmiBlitz3_wizzard.ab2@29213> automode             Ds.w 1
0003D2D8 <AmiBlitz3_wizzard.ab2@29214> stackcorrect         Ds.w 1
0003D2DA <AmiBlitz3_wizzard.ab2@29215> formode              Ds.w 1
0003D2DE <AmiBlitz3_wizzard.ab2@29216> limitregs            Ds.l 1
0003D2E0 <AmiBlitz3_wizzard.ab2@29217> onestep              Ds.w 1
0003D2E4 <AmiBlitz3_wizzard.ab2@29218> reqmode              Ds.l 1
0003D384 <AmiBlitz3_wizzard.ab2@29219> inctab               Ds.l 40
0003D386 <AmiBlitz3_wizzard.ab2@29220> funcoptimize         Ds.w 1
0003D38A <AmiBlitz3_wizzard.ab2@29221> includeline          Ds.l 1
0003D38E <AmiBlitz3_wizzard.ab2@29222> morememadd           Ds.l 1
0003D390 <AmiBlitz3_wizzard.ab2@29223> objectcount          Ds.w 1
0003D394 <AmiBlitz3_wizzard.ab2@29224> savefuncspace        Ds.l 1
0003D398 <AmiBlitz3_wizzard.ab2@29225> lasttrap1            Ds.l 1
0003D39C <AmiBlitz3_wizzard.ab2@29226> currentfunccall      Ds.l 1
0003D39D <AmiBlitz3_wizzard.ab2@29227> skipfunc             Ds.b 1
0003D39E <AmiBlitz3_wizzard.ab2@29228> resdisable           Ds.b 1
0003D39F <AmiBlitz3_wizzard.ab2@29229> skiptoggle           Ds.b 1
0003D3A0 <AmiBlitz3_wizzard.ab2@29230> developobject        Ds.b 1
0003D3A2 <AmiBlitz3_wizzard.ab2@29231> iniffcommand         Ds.w 1
0003D3A4 <AmiBlitz3_wizzard.ab2@29232> startoffsetmore      Ds.w 1
0003D3A6 <AmiBlitz3_wizzard.ab2@29233> olddebugmode         Ds.w 1
0003D3AA <AmiBlitz3_wizzard.ab2@29234> fpucodeglobal        Ds.l 1
0003D3AE <AmiBlitz3_wizzard.ab2@29235> fpucodelocal         Ds.l 1
0003D3B2 <AmiBlitz3_wizzard.ab2@29236> maxregs              Ds.l 1
0003D3B6 <AmiBlitz3_wizzard.ab2@29237> fpucode              Ds.l 1
0003D3B8 <AmiBlitz3_wizzard.ab2@29238> firstmline           Ds.w 1
0003D3F8 <AmiBlitz3_wizzard.ab2@29239> regtable             Ds.l 16
0003D3FA <AmiBlitz3_wizzard.ab2@29240> exdebug              Ds.w 1
0003D3FC <AmiBlitz3_wizzard.ab2@29241> a2offset2            Ds.w 1
0003D400 <AmiBlitz3_wizzard.ab2@29242> parnumtemp           Ds.l 1
0003D401 <AmiBlitz3_wizzard.ab2@29243> doimmediate          Ds.b 1
0003D402 <AmiBlitz3_wizzard.ab2@29244> notypecheck          Ds.b 1
0003D404 <AmiBlitz3_wizzard.ab2@29245> vartype              Ds.w 1
0003D405 <AmiBlitz3_wizzard.ab2@29246> peekaddrsize         Ds.b 1
0003D406 <AmiBlitz3_wizzard.ab2@29247> declare2             Ds.b 1
0003D408 <AmiBlitz3_wizzard.ab2@29248> parameternum         Ds.w 1
0003D40C <AmiBlitz3_wizzard.ab2@29249> lasttoken            Ds.l 1
0003D40E <AmiBlitz3_wizzard.ab2@29250> newvariable          Ds.w 1
0003D40F <AmiBlitz3_wizzard.ab2@29251> declare              Ds.b 1
0003D410 <AmiBlitz3_wizzard.ab2@29252> typecheck            Ds.b 1
0003D411 <AmiBlitz3_wizzard.ab2@29253> nowdeclare           Ds.b 1
0003D412 <AmiBlitz3_wizzard.ab2@29254> dimkeep              Ds.b 1
0003D413 <AmiBlitz3_wizzard.ab2@29255> a4a5store            Ds.b 1
0003D414 <AmiBlitz3_wizzard.ab2@29256> ___freetouse         Ds.b 1
0003D418 <AmiBlitz3_wizzard.ab2@29257> firstiffstore        Ds.l 1
0003D41C <AmiBlitz3_wizzard.ab2@29258> destpointer2         Ds.l 1
0003D420 <AmiBlitz3_wizzard.ab2@29259> stackaddr            Ds.l 1
0003D524 <AmiBlitz3_wizzard.ab2@29260> allowtab             Ds.b 260
0003D624 <AmiBlitz3_wizzard.ab2@29261> templine             Ds.b 256
0003D626 <AmiBlitz3_wizzard.ab2@29262> thenmode             Ds.w 1
0003D628 <AmiBlitz3_wizzard.ab2@29263> temp                 Ds.w 1
0003D62A <AmiBlitz3_wizzard.ab2@29264> tempregnum           Ds.w 1
0003D62E <AmiBlitz3_wizzard.ab2@29266> numlines2            Ds.l 1
0003D632 <AmiBlitz3_wizzard.ab2@29267> numlines             Ds.l 1
0003D634 <AmiBlitz3_wizzard.ab2@29268> exmac                Ds.w 1
0003D636 <AmiBlitz3_wizzard.ab2@29269> returncode           Ds.w 1
0003D63A <AmiBlitz3_wizzard.ab2@29270> fp0iff               Ds.l 1
0003D63E <AmiBlitz3_wizzard.ab2@29271> fp0addr              Ds.l 1
0003D640 <AmiBlitz3_wizzard.ab2@29272> fp0mode              Ds.w 1
0003D642 <AmiBlitz3_wizzard.ab2@29273> fp0var               Ds.w 1
0003D644 <AmiBlitz3_wizzard.ab2@29274> fastfunc             Ds.w 1
0003D646 <AmiBlitz3_wizzard.ab2@29275> retmode              Ds.w 1
0003D648 <AmiBlitz3_wizzard.ab2@29276> parnum               Ds.w 1
0003D64A <AmiBlitz3_wizzard.ab2@29277> regmask              Ds.w 1
0003D64C <AmiBlitz3_wizzard.ab2@29278> regnumfunc           Ds.w 1
0003D64E <AmiBlitz3_wizzard.ab2@29279> libmode              Ds.w 1
0003D652 <AmiBlitz3_wizzard.ab2@29280> oldline              Ds.l 1
0003D656 <AmiBlitz3_wizzard.ab2@29281> sourceline3          Ds.l 1
0003D71E <AmiBlitz3_wizzard.ab2@29282> debugstore           Ds.b 200
0003D722 <AmiBlitz3_wizzard.ab2@29283> deststore            Ds.l 1
0003D726 <AmiBlitz3_wizzard.ab2@29285> loada                Ds.l 1
0003D72A <AmiBlitz3_wizzard.ab2@29287> currtype             Ds.l 1
0003D72E <AmiBlitz3_wizzard.ab2@29288> arrayoffset          Ds.l 1
0003D732 <AmiBlitz3_wizzard.ab2@29289> lastlabel            Ds.l 1
0003D736 <AmiBlitz3_wizzard.ab2@29290> curtemplabel         Ds.l 1
0003D73A <AmiBlitz3_wizzard.ab2@29291> sourceline2          Ds.l 1
0003D83A <AmiBlitz3_wizzard.ab2@29292> chartab              Ds.b 256
0003D8B2 <AmiBlitz3_wizzard.ab2@29293> tempspace            Ds.b 120
000BD8C2 <AmiBlitz3_wizzard.ab2@29294> instrtab             Ds.l 65538*2
000C58C2 <AmiBlitz3_wizzard.ab2@29296> labelhash            Ds.l 8192                             ;-bssstore clear every compile pass
000E58C6 <AmiBlitz3_wizzard.ab2@29297> replacedat           Ds.w 65538
000ED8C6 <AmiBlitz3_wizzard.ab2@29298> variablehash         Ds.l 8192
000ED8CA <AmiBlitz3_wizzard.ab2@29299> newinitaddr          Ds.l 1
000ED8CE <AmiBlitz3_wizzard.ab2@29300> realbssend           Ds.l 1
000ED8D0 <AmiBlitz3_wizzard.ab2@29301> saved0               Ds.w 1
000ED950 <AmiBlitz3_wizzard.ab2@29302> lastpath             Ds.b 128
000ED9D0 <AmiBlitz3_wizzard.ab2@29303> lastpath2            Ds.b 128
000EDA98 <AmiBlitz3_wizzard.ab2@29304> fpustackbase         Ds.w 100
000EDA9C <AmiBlitz3_wizzard.ab2@29305> 
000EDA9E <AmiBlitz3_wizzard.ab2@29306> isconstantvalue      Dc.w 0  ; contain a type (1-7) if a constant expression is used as a Parameter or on right side of =
000EDAA2 <AmiBlitz3_wizzard.ab2@29307> lastfunction         Dc.l 0  ; the address of the function in the Parameter or rght side of =
000EDAA6 <AmiBlitz3_wizzard.ab2@29308> leftsidetype         Dc.l 0  ;this contain the address of the type from the left side of the variable assign
000EDAAA <AmiBlitz3_wizzard.ab2@29309> rightsidetype        Dc.l 0  ; same as above but right side
000EDAAE <AmiBlitz3_wizzard.ab2@29312> trap15temp           Ds.l 1
000EDAB2 <AmiBlitz3_wizzard.ab2@29313> trap15temp2          Ds.l 1
000EDAB6 <AmiBlitz3_wizzard.ab2@29314> templibend           Ds.l 1
000EDABA <AmiBlitz3_wizzard.ab2@29315> tempdata1start       Ds.l 1
000EDABE <AmiBlitz3_wizzard.ab2@29316> stacktrack           Ds.l 1
000EDAC2 <AmiBlitz3_wizzard.ab2@29317> pad                  Ds.l 1
000EDBC2 <AmiBlitz3_wizzard.ab2@29318> includetemp          Ds.b 256
000EE5C2 <AmiBlitz3_wizzard.ab2@29319> includetemp2         Ds.b 256*10
000EE5C4 <AmiBlitz3_wizzard.ab2@29320> funccall             Ds.w 1
000EE5C8 <AmiBlitz3_wizzard.ab2@29323> ptr_resfile          Ds.l 1
000EE5CA <AmiBlitz3_wizzard.ab2@29324> CalculatorButtonBinFlag:    Ds.w 1
000EE5CC <AmiBlitz3_wizzard.ab2@29325> CalculatorButtonDecFlag:    Ds.w 1
000EE5D0 <AmiBlitz3_wizzard.ab2@29326> ped_startup_addr:    Ds.l 1
000EE5D1 <AmiBlitz3_wizzard.ab2@29327> start_without_libs:  Ds.b 1
000EE5D2 <AmiBlitz3_wizzard.ab2@29328> skip_bytes:          Ds.b 1
000EE5D6 <AmiBlitz3_wizzard.ab2@29329> functionreturntype   Ds.l 1  ; a temp store of it.do not read this value
000EE5DA <AmiBlitz3_wizzard.ab2@29330> beforeparameterfetch Ds.l 1
000EE5DE <AmiBlitz3_wizzard.ab2@29331> typetocast           Ds.l 1
000EE5DF <AmiBlitz3_wizzard.ab2@29332> iserror              Ds.b 1
000EE5E0 <AmiBlitz3_wizzard.ab2@29333> Even
000EE5E4 <AmiBlitz3_wizzard.ab2@29335> CLIMode:             Dc.l 0
000EE5E8 <AmiBlitz3_wizzard.ab2@29336> XTRAEndPadBytes:     Dc.l 0                             ; 4 fill/pad/termination bytes for the xtra write function  tomsmart1
