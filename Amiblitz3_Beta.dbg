00000008 <AmiBlitz3.ab3@0> 
00000014 <AmiBlitz3.ab3@43> optimize 5                               ; don't use FPU (opt. 4)
00000076 <AmiBlitz3.ab3@64> !initasm                                 ; some initial mumbo jumbo
000000A0 <AmiBlitz3.ab3@65> !basic
000000AC <AmiBlitz3.ab3@70> cli_verbose = -1
000000B2 <AmiBlitz3.ab3@71> CLIMode     = False
000000C8 <AmiBlitz3.ab3@72> MaxLen cli_tempstr.s = 1024
000000E4 <AmiBlitz3.ab3@73> GetCurrentDirName_ &cli_tempstr,1024  ; get the current dir to restore it on exit
0000010E <AmiBlitz3.ab3@74> cli_path.s = Peek.s(&cli_tempstr)
0000010E <library_offsets.ab3@1> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <AmiBlitz3.ab3@78> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <dos.include.ab3@1> XINCLUDE "dos.include.ab3"
0000010E <error.include.ab3@1> XINCLUDE "dos.include.ab3"
00000146 <error.include.ab3@62> XINCLUDE "dos.include.ab3"
0000016E <error.include.ab3@63> XINCLUDE "dos.include.ab3"
00000196 <error.include.ab3@64> XINCLUDE "dos.include.ab3"
000001BE <error.include.ab3@65> XINCLUDE "dos.include.ab3"
000001C4 <error.include.ab3@66> XINCLUDE "dos.include.ab3"
000001F8 <error.include.ab3@67> XINCLUDE "dos.include.ab3"
0000022C <error.include.ab3@68> XINCLUDE "dos.include.ab3"
00000260 <error.include.ab3@69> XINCLUDE "dos.include.ab3"
0000027C <error.include.ab3@73> XINCLUDE "dos.include.ab3"
00000296 <error.include.ab3@99> XINCLUDE "dos.include.ab3"
000002A2 <error.include.ab3@101> XINCLUDE "dos.include.ab3"
000002A6 <error.include.ab3@102> XINCLUDE "dos.include.ab3"
000002B4 <error.include.ab3@104> XINCLUDE "dos.include.ab3"
000002F6 <error.include.ab3@124> XINCLUDE "dos.include.ab3"
0000037A <error.include.ab3@126> XINCLUDE "dos.include.ab3"
000003E6 <error.include.ab3@127> XINCLUDE "dos.include.ab3"
00000400 <error.include.ab3@129> XINCLUDE "dos.include.ab3"
00000438 <error.include.ab3@130> XINCLUDE "dos.include.ab3"
00000498 <error.include.ab3@131> XINCLUDE "dos.include.ab3"
000004A6 <error.include.ab3@133> XINCLUDE "dos.include.ab3"
000004B4 <error.include.ab3@134> XINCLUDE "dos.include.ab3"
000004C2 <error.include.ab3@135> XINCLUDE "dos.include.ab3"
000004D0 <error.include.ab3@136> XINCLUDE "dos.include.ab3"
000004F8 <error.include.ab3@137> XINCLUDE "dos.include.ab3"
00000506 <error.include.ab3@138> XINCLUDE "dos.include.ab3"
0000050E <error.include.ab3@139> XINCLUDE "dos.include.ab3"
00000540 <error.include.ab3@141> XINCLUDE "dos.include.ab3"
0000055A <error.include.ab3@146> XINCLUDE "dos.include.ab3"
00000592 <error.include.ab3@147> XINCLUDE "dos.include.ab3"
00000598 <error.include.ab3@148> XINCLUDE "dos.include.ab3"
000005DC <error.include.ab3@149> XINCLUDE "dos.include.ab3"
00000624 <error.include.ab3@150> XINCLUDE "dos.include.ab3"
0000062E <error.include.ab3@154> XINCLUDE "dos.include.ab3"
00000648 <error.include.ab3@156> XINCLUDE "dos.include.ab3"
00000692 <error.include.ab3@195> XINCLUDE "dos.include.ab3"
0000069A <error.include.ab3@197> XINCLUDE "dos.include.ab3"
00000706 <error.include.ab3@198> XINCLUDE "dos.include.ab3"
00000728 <error.include.ab3@199> XINCLUDE "dos.include.ab3"
00000788 <error.include.ab3@200> XINCLUDE "dos.include.ab3"
00000796 <error.include.ab3@202> XINCLUDE "dos.include.ab3"
000007A4 <error.include.ab3@203> XINCLUDE "dos.include.ab3"
000007B2 <error.include.ab3@204> XINCLUDE "dos.include.ab3"
000007C0 <error.include.ab3@205> XINCLUDE "dos.include.ab3"
00000820 <error.include.ab3@206> XINCLUDE "dos.include.ab3"
0000082E <error.include.ab3@207> XINCLUDE "dos.include.ab3"
00000864 <error.include.ab3@210> XINCLUDE "dos.include.ab3"
0000086E <error.include.ab3@214> XINCLUDE "dos.include.ab3"
0000088A <error.include.ab3@215> XINCLUDE "dos.include.ab3"
0000088A <multilist.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <strptr.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <useful.include.ab3@1> XINCLUDE "dos.include.ab3"
000008B8 <useful.include.ab3@286> XINCLUDE "dos.include.ab3"
000008C2 <useful.include.ab3@287> XINCLUDE "dos.include.ab3"
000008D6 <useful.include.ab3@288> XINCLUDE "dos.include.ab3"
000008DE <useful.include.ab3@289> XINCLUDE "dos.include.ab3"
00000906 <useful.include.ab3@290> XINCLUDE "dos.include.ab3"
0000092C <useful.include.ab3@291> XINCLUDE "dos.include.ab3"
0000094C <useful.include.ab3@294> XINCLUDE "dos.include.ab3"
0000095A <useful.include.ab3@295> XINCLUDE "dos.include.ab3"
00000980 <useful.include.ab3@296> XINCLUDE "dos.include.ab3"
00000988 <useful.include.ab3@298> XINCLUDE "dos.include.ab3"
00000990 <useful.include.ab3@299> XINCLUDE "dos.include.ab3"
00000996 <useful.include.ab3@300> XINCLUDE "dos.include.ab3"
000009B2 <useful.include.ab3@301> XINCLUDE "dos.include.ab3"
000009D6 <useful.include.ab3@302> XINCLUDE "dos.include.ab3"
000009EA <useful.include.ab3@303> XINCLUDE "dos.include.ab3"
000009F0 <useful.include.ab3@304> XINCLUDE "dos.include.ab3"
00000A3A <useful.include.ab3@305> XINCLUDE "dos.include.ab3"
00000A3C <useful.include.ab3@306> XINCLUDE "dos.include.ab3"
00000A4A <useful.include.ab3@308> XINCLUDE "dos.include.ab3"
00000A6A <useful.include.ab3@310> XINCLUDE "dos.include.ab3"
00000AC8 <useful.include.ab3@311> XINCLUDE "dos.include.ab3"
00000ACE <useful.include.ab3@312> XINCLUDE "dos.include.ab3"
00000ADC <useful.include.ab3@313> XINCLUDE "dos.include.ab3"
00000AF0 <useful.include.ab3@314> XINCLUDE "dos.include.ab3"
00000B02 <useful.include.ab3@315> XINCLUDE "dos.include.ab3"
00000B10 <useful.include.ab3@316> XINCLUDE "dos.include.ab3"
00000B16 <useful.include.ab3@317> XINCLUDE "dos.include.ab3"
00000B22 <useful.include.ab3@318> XINCLUDE "dos.include.ab3"
00000B36 <useful.include.ab3@321> XINCLUDE "dos.include.ab3"
00000B4A <useful.include.ab3@322> XINCLUDE "dos.include.ab3"
00000B5C <useful.include.ab3@323> XINCLUDE "dos.include.ab3"
00000B6A <useful.include.ab3@324> XINCLUDE "dos.include.ab3"
00000B88 <useful.include.ab3@325> XINCLUDE "dos.include.ab3"
00000B8E <useful.include.ab3@326> XINCLUDE "dos.include.ab3"
00000BA2 <useful.include.ab3@330> XINCLUDE "dos.include.ab3"
00000BAC <useful.include.ab3@331> XINCLUDE "dos.include.ab3"
00000BB4 <useful.include.ab3@332> XINCLUDE "dos.include.ab3"
00000BD2 <useful.include.ab3@333> XINCLUDE "dos.include.ab3"
00000BD8 <useful.include.ab3@334> XINCLUDE "dos.include.ab3"
00000C04 <useful.include.ab3@335> XINCLUDE "dos.include.ab3"
00000C0A <useful.include.ab3@337> XINCLUDE "dos.include.ab3"
00000C1C <useful.include.ab3@338> XINCLUDE "dos.include.ab3"
00000C34 <useful.include.ab3@339> XINCLUDE "dos.include.ab3"
00000C4C <useful.include.ab3@340> XINCLUDE "dos.include.ab3"
00000C6A <useful.include.ab3@341> XINCLUDE "dos.include.ab3"
00000C6C <useful.include.ab3@343> XINCLUDE "dos.include.ab3"
00000C7A <useful.include.ab3@344> XINCLUDE "dos.include.ab3"
00000CA0 <useful.include.ab3@345> XINCLUDE "dos.include.ab3"
00000D34 <useful.include.ab3@346> XINCLUDE "dos.include.ab3"
00000D42 <useful.include.ab3@348> XINCLUDE "dos.include.ab3"
00000D48 <useful.include.ab3@349> XINCLUDE "dos.include.ab3"
00000D72 <useful.include.ab3@350> XINCLUDE "dos.include.ab3"
00000D90 <useful.include.ab3@351> XINCLUDE "dos.include.ab3"
00000D90 <strptr.include.ab3@37> XINCLUDE "dos.include.ab3"
00000DAA <strptr.include.ab3@96> XINCLUDE "dos.include.ab3"
00000DB4 <strptr.include.ab3@97> XINCLUDE "dos.include.ab3"
00000DFC <strptr.include.ab3@98> XINCLUDE "dos.include.ab3"
00000E00 <strptr.include.ab3@100> XINCLUDE "dos.include.ab3"
00000E2E <strptr.include.ab3@197> XINCLUDE "dos.include.ab3"
00000E38 <strptr.include.ab3@198> XINCLUDE "dos.include.ab3"
00000E80 <strptr.include.ab3@199> XINCLUDE "dos.include.ab3"
00000E94 <strptr.include.ab3@200> XINCLUDE "dos.include.ab3"
00000EA6 <strptr.include.ab3@201> XINCLUDE "dos.include.ab3"
00000ECA <strptr.include.ab3@205> XINCLUDE "dos.include.ab3"
00000ED4 <strptr.include.ab3@208> XINCLUDE "dos.include.ab3"
00000EE2 <strptr.include.ab3@209> XINCLUDE "dos.include.ab3"
00000EEC <strptr.include.ab3@210> XINCLUDE "dos.include.ab3"
00000F14 <strptr.include.ab3@211> XINCLUDE "dos.include.ab3"
00000F2E <strptr.include.ab3@212> XINCLUDE "dos.include.ab3"
00000F46 <strptr.include.ab3@216> XINCLUDE "dos.include.ab3"
00000F60 <strptr.include.ab3@282> XINCLUDE "dos.include.ab3"
00000F6A <strptr.include.ab3@283> XINCLUDE "dos.include.ab3"
00000F78 <strptr.include.ab3@284> XINCLUDE "dos.include.ab3"
00000FAA <strptr.include.ab3@285> XINCLUDE "dos.include.ab3"
00000FC8 <strptr.include.ab3@287> XINCLUDE "dos.include.ab3"
00000FD2 <strptr.include.ab3@288> XINCLUDE "dos.include.ab3"
00000FD2 <multilist.include.ab3@44> XINCLUDE "dos.include.ab3"
00000FE8 <multilist.include.ab3@61> XINCLUDE "dos.include.ab3"
00001002 <multilist.include.ab3@406> XINCLUDE "dos.include.ab3"
0000100C <multilist.include.ab3@407> XINCLUDE "dos.include.ab3"
0000102E <multilist.include.ab3@408> XINCLUDE "dos.include.ab3"
00001052 <multilist.include.ab3@409> XINCLUDE "dos.include.ab3"
00001064 <multilist.include.ab3@410> XINCLUDE "dos.include.ab3"
0000107C <multilist.include.ab3@411> XINCLUDE "dos.include.ab3"
00001090 <multilist.include.ab3@412> XINCLUDE "dos.include.ab3"
000010A2 <multilist.include.ab3@415> XINCLUDE "dos.include.ab3"
000010B2 <multilist.include.ab3@416> XINCLUDE "dos.include.ab3"
000010B8 <multilist.include.ab3@417> XINCLUDE "dos.include.ab3"
000010C8 <multilist.include.ab3@418> XINCLUDE "dos.include.ab3"
000010D8 <multilist.include.ab3@419> XINCLUDE "dos.include.ab3"
000010F2 <multilist.include.ab3@420> XINCLUDE "dos.include.ab3"
000010F6 <multilist.include.ab3@422> XINCLUDE "dos.include.ab3"
00001110 <multilist.include.ab3@585> XINCLUDE "dos.include.ab3"
00001140 <multilist.include.ab3@586> XINCLUDE "dos.include.ab3"
0000114A <multilist.include.ab3@588> XINCLUDE "dos.include.ab3"
00001154 <multilist.include.ab3@589> XINCLUDE "dos.include.ab3"
00001176 <multilist.include.ab3@590> XINCLUDE "dos.include.ab3"
0000119A <multilist.include.ab3@591> XINCLUDE "dos.include.ab3"
000011AC <multilist.include.ab3@592> XINCLUDE "dos.include.ab3"
000011C4 <multilist.include.ab3@593> XINCLUDE "dos.include.ab3"
000011D8 <multilist.include.ab3@594> XINCLUDE "dos.include.ab3"
000011EA <multilist.include.ab3@597> XINCLUDE "dos.include.ab3"
000011FA <multilist.include.ab3@598> XINCLUDE "dos.include.ab3"
00001200 <multilist.include.ab3@599> XINCLUDE "dos.include.ab3"
00001210 <multilist.include.ab3@600> XINCLUDE "dos.include.ab3"
00001220 <multilist.include.ab3@601> XINCLUDE "dos.include.ab3"
0000123A <multilist.include.ab3@602> XINCLUDE "dos.include.ab3"
00001240 <multilist.include.ab3@603> XINCLUDE "dos.include.ab3"
00001246 <multilist.include.ab3@604> XINCLUDE "dos.include.ab3"
0000124A <multilist.include.ab3@605> XINCLUDE "dos.include.ab3"
00001264 <multilist.include.ab3@713> XINCLUDE "dos.include.ab3"
0000126C <multilist.include.ab3@714> XINCLUDE "dos.include.ab3"
00001276 <multilist.include.ab3@715> XINCLUDE "dos.include.ab3"
0000128C <multilist.include.ab3@716> XINCLUDE "dos.include.ab3"
000012A0 <multilist.include.ab3@717> XINCLUDE "dos.include.ab3"
000012C4 <multilist.include.ab3@718> XINCLUDE "dos.include.ab3"
000012D2 <multilist.include.ab3@721> XINCLUDE "dos.include.ab3"
000012DC <multilist.include.ab3@722> XINCLUDE "dos.include.ab3"
000012E2 <multilist.include.ab3@723> XINCLUDE "dos.include.ab3"
000012EC <multilist.include.ab3@724> XINCLUDE "dos.include.ab3"
000012F2 <multilist.include.ab3@725> XINCLUDE "dos.include.ab3"
00001310 <multilist.include.ab3@742> XINCLUDE "dos.include.ab3"
00001318 <multilist.include.ab3@743> XINCLUDE "dos.include.ab3"
00001322 <multilist.include.ab3@744> XINCLUDE "dos.include.ab3"
00001340 <multilist.include.ab3@745> XINCLUDE "dos.include.ab3"
00001356 <multilist.include.ab3@746> XINCLUDE "dos.include.ab3"
0000136A <multilist.include.ab3@747> XINCLUDE "dos.include.ab3"
0000139E <multilist.include.ab3@748> XINCLUDE "dos.include.ab3"
000013AC <multilist.include.ab3@751> XINCLUDE "dos.include.ab3"
000013B6 <multilist.include.ab3@752> XINCLUDE "dos.include.ab3"
000013BC <multilist.include.ab3@753> XINCLUDE "dos.include.ab3"
000013C6 <multilist.include.ab3@754> XINCLUDE "dos.include.ab3"
000013CA <multilist.include.ab3@756> XINCLUDE "dos.include.ab3"
000013D0 <multilist.include.ab3@757> XINCLUDE "dos.include.ab3"
000013EA <multilist.include.ab3@795> XINCLUDE "dos.include.ab3"
000013F4 <multilist.include.ab3@796> XINCLUDE "dos.include.ab3"
000013FE <multilist.include.ab3@797> XINCLUDE "dos.include.ab3"
00001414 <multilist.include.ab3@798> XINCLUDE "dos.include.ab3"
00001424 <multilist.include.ab3@799> XINCLUDE "dos.include.ab3"
0000142E <multilist.include.ab3@801> XINCLUDE "dos.include.ab3"
00001434 <multilist.include.ab3@802> XINCLUDE "dos.include.ab3"
00001438 <multilist.include.ab3@803> XINCLUDE "dos.include.ab3"
0000145A <multilist.include.ab3@821> XINCLUDE "dos.include.ab3"
00001462 <multilist.include.ab3@822> XINCLUDE "dos.include.ab3"
0000147C <multilist.include.ab3@823> XINCLUDE "dos.include.ab3"
00001486 <multilist.include.ab3@824> XINCLUDE "dos.include.ab3"
0000149C <multilist.include.ab3@825> XINCLUDE "dos.include.ab3"
000014B0 <multilist.include.ab3@826> XINCLUDE "dos.include.ab3"
00001506 <multilist.include.ab3@827> XINCLUDE "dos.include.ab3"
00001540 <multilist.include.ab3@828> XINCLUDE "dos.include.ab3"
00001552 <multilist.include.ab3@829> XINCLUDE "dos.include.ab3"
00001574 <multilist.include.ab3@830> XINCLUDE "dos.include.ab3"
0000157A <multilist.include.ab3@831> XINCLUDE "dos.include.ab3"
000015D0 <multilist.include.ab3@832> XINCLUDE "dos.include.ab3"
0000160A <multilist.include.ab3@833> XINCLUDE "dos.include.ab3"
00001610 <multilist.include.ab3@835> XINCLUDE "dos.include.ab3"
0000164A <multilist.include.ab3@836> XINCLUDE "dos.include.ab3"
00001684 <multilist.include.ab3@837> XINCLUDE "dos.include.ab3"
00001696 <multilist.include.ab3@839> XINCLUDE "dos.include.ab3"
000016A0 <multilist.include.ab3@840> XINCLUDE "dos.include.ab3"
000016A6 <multilist.include.ab3@841> XINCLUDE "dos.include.ab3"
000016B0 <multilist.include.ab3@842> XINCLUDE "dos.include.ab3"
000016C4 <multilist.include.ab3@843> XINCLUDE "dos.include.ab3"
0000170A <multilist.include.ab3@870> XINCLUDE "dos.include.ab3"
00001712 <multilist.include.ab3@871> XINCLUDE "dos.include.ab3"
00001730 <multilist.include.ab3@872> XINCLUDE "dos.include.ab3"
0000175C <multilist.include.ab3@873> XINCLUDE "dos.include.ab3"
0000177A <multilist.include.ab3@874> XINCLUDE "dos.include.ab3"
00001794 <multilist.include.ab3@875> XINCLUDE "dos.include.ab3"
000017AE <multilist.include.ab3@876> XINCLUDE "dos.include.ab3"
00001830 <multilist.include.ab3@877> XINCLUDE "dos.include.ab3"
00001844 <multilist.include.ab3@879> XINCLUDE "dos.include.ab3"
0000185C <multilist.include.ab3@880> XINCLUDE "dos.include.ab3"
00001862 <multilist.include.ab3@881> XINCLUDE "dos.include.ab3"
0000187A <multilist.include.ab3@882> XINCLUDE "dos.include.ab3"
00001890 <multilist.include.ab3@884> XINCLUDE "dos.include.ab3"
000018AA <multilist.include.ab3@886> XINCLUDE "dos.include.ab3"
000018BE <multilist.include.ab3@887> XINCLUDE "dos.include.ab3"
000018CC <multilist.include.ab3@888> XINCLUDE "dos.include.ab3"
00001922 <multilist.include.ab3@889> XINCLUDE "dos.include.ab3"
00001958 <multilist.include.ab3@890> XINCLUDE "dos.include.ab3"
00001988 <multilist.include.ab3@891> XINCLUDE "dos.include.ab3"
00001A10 <multilist.include.ab3@893> XINCLUDE "dos.include.ab3"
00001A16 <multilist.include.ab3@894> XINCLUDE "dos.include.ab3"
00001A24 <multilist.include.ab3@895> XINCLUDE "dos.include.ab3"
00001A7A <multilist.include.ab3@896> XINCLUDE "dos.include.ab3"
00001AB0 <multilist.include.ab3@897> XINCLUDE "dos.include.ab3"
00001AE0 <multilist.include.ab3@898> XINCLUDE "dos.include.ab3"
00001AE6 <multilist.include.ab3@901> XINCLUDE "dos.include.ab3"
00001B00 <multilist.include.ab3@902> XINCLUDE "dos.include.ab3"
00001B0E <multilist.include.ab3@903> XINCLUDE "dos.include.ab3"
00001B48 <multilist.include.ab3@904> XINCLUDE "dos.include.ab3"
00001B7E <multilist.include.ab3@905> XINCLUDE "dos.include.ab3"
00001BAE <multilist.include.ab3@906> XINCLUDE "dos.include.ab3"
00001BBC <multilist.include.ab3@909> XINCLUDE "dos.include.ab3"
00001BC6 <multilist.include.ab3@910> XINCLUDE "dos.include.ab3"
00001BCC <multilist.include.ab3@911> XINCLUDE "dos.include.ab3"
00001BD6 <multilist.include.ab3@912> XINCLUDE "dos.include.ab3"
00001BEA <multilist.include.ab3@913> XINCLUDE "dos.include.ab3"
00001BEA <dos.include.ab3@57> XINCLUDE "dos.include.ab3"
00001BEA <wbstart.include.ab3@1> XINCLUDE "dos.include.ab3"
00001C00 <wbstart.include.ab3@58> XINCLUDE "dos.include.ab3"
00001C0A <wbstart.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C22 <wbstart.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C24 <wbstart.include.ab3@63> XINCLUDE "dos.include.ab3"
00001C52 <wbstart.include.ab3@64> XINCLUDE "dos.include.ab3"
00001C52 <dos.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C68 <dos.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C70 <dos.include.ab3@79> XINCLUDE "dos.include.ab3"
00001C78 <dos.include.ab3@80> XINCLUDE "dos.include.ab3"
00001CA0 <dos.include.ab3@81> XINCLUDE "dos.include.ab3"
00001CA8 <dos.include.ab3@82> XINCLUDE "dos.include.ab3"
00001CD0 <dos.include.ab3@83> XINCLUDE "dos.include.ab3"
00001CF8 <dos.include.ab3@84> XINCLUDE "dos.include.ab3"
00001D20 <dos.include.ab3@85> XINCLUDE "dos.include.ab3"
00001D28 <dos.include.ab3@86> XINCLUDE "dos.include.ab3"
00001D30 <dos.include.ab3@87> XINCLUDE "dos.include.ab3"
00001D38 <dos.include.ab3@88> XINCLUDE "dos.include.ab3"
00001D40 <dos.include.ab3@89> XINCLUDE "dos.include.ab3"
00001D48 <dos.include.ab3@90> XINCLUDE "dos.include.ab3"
00001D50 <dos.include.ab3@91> XINCLUDE "dos.include.ab3"
00001D58 <dos.include.ab3@92> XINCLUDE "dos.include.ab3"
00001D60 <dos.include.ab3@93> XINCLUDE "dos.include.ab3"
00001D68 <dos.include.ab3@94> XINCLUDE "dos.include.ab3"
00001D88 <dos.include.ab3@95> XINCLUDE "dos.include.ab3"
00001D90 <dos.include.ab3@96> XINCLUDE "dos.include.ab3"
00001D98 <dos.include.ab3@97> XINCLUDE "dos.include.ab3"
00001DC0 <dos.include.ab3@99> XINCLUDE "dos.include.ab3"
00001DD6 <dos.include.ab3@130> XINCLUDE "dos.include.ab3"
00001DE2 <dos.include.ab3@131> XINCLUDE "dos.include.ab3"
00001DE6 <dos.include.ab3@132> XINCLUDE "dos.include.ab3"
00001DFC <dos.include.ab3@145> XINCLUDE "dos.include.ab3"
00001E16 <dos.include.ab3@146> XINCLUDE "dos.include.ab3"
00001E2C <dos.include.ab3@147> XINCLUDE "dos.include.ab3"
00001E56 <dos.include.ab3@148> XINCLUDE "dos.include.ab3"
00001E60 <dos.include.ab3@149> XINCLUDE "dos.include.ab3"
00001E66 <dos.include.ab3@150> XINCLUDE "dos.include.ab3"
00001E7C <dos.include.ab3@163> XINCLUDE "dos.include.ab3"
00001E96 <dos.include.ab3@164> XINCLUDE "dos.include.ab3"
00001EAC <dos.include.ab3@165> XINCLUDE "dos.include.ab3"
00001ED6 <dos.include.ab3@166> XINCLUDE "dos.include.ab3"
00001EE0 <dos.include.ab3@167> XINCLUDE "dos.include.ab3"
00001EE6 <dos.include.ab3@168> XINCLUDE "dos.include.ab3"
00001F10 <dos.include.ab3@184> XINCLUDE "dos.include.ab3"
00001F1C <dos.include.ab3@185> XINCLUDE "dos.include.ab3"
00001F3C <dos.include.ab3@186> XINCLUDE "dos.include.ab3"
00001F46 <dos.include.ab3@187> XINCLUDE "dos.include.ab3"
00001F56 <dos.include.ab3@188> XINCLUDE "dos.include.ab3"
00001F66 <dos.include.ab3@189> XINCLUDE "dos.include.ab3"
00001F70 <dos.include.ab3@191> XINCLUDE "dos.include.ab3"
00001F8A <dos.include.ab3@192> XINCLUDE "dos.include.ab3"
00001FA0 <dos.include.ab3@430> XINCLUDE "dos.include.ab3"
00001FB2 <dos.include.ab3@432> XINCLUDE "dos.include.ab3"
0000202C <dos.include.ab3@433> XINCLUDE "dos.include.ab3"
00002056 <dos.include.ab3@434> XINCLUDE "dos.include.ab3"
0000206E <dos.include.ab3@435> XINCLUDE "dos.include.ab3"
00002084 <dos.include.ab3@461> XINCLUDE "dos.include.ab3"
00002096 <dos.include.ab3@462> XINCLUDE "dos.include.ab3"
0000209A <dos.include.ab3@463> XINCLUDE "dos.include.ab3"
000020B0 <dos.include.ab3@479> XINCLUDE "dos.include.ab3"
000020B2 <dos.include.ab3@480> XINCLUDE "dos.include.ab3"
000020EC <dos.include.ab3@541> XINCLUDE "dos.include.ab3"
00002120 <dos.include.ab3@543> XINCLUDE "dos.include.ab3"
00002146 <dos.include.ab3@544> XINCLUDE "dos.include.ab3"
00002166 <dos.include.ab3@545> XINCLUDE "dos.include.ab3"
00002186 <dos.include.ab3@546> XINCLUDE "dos.include.ab3"
000021B0 <dos.include.ab3@549> XINCLUDE "dos.include.ab3"
000021FC <dos.include.ab3@551> XINCLUDE "dos.include.ab3"
0000220E <dos.include.ab3@552> XINCLUDE "dos.include.ab3"
0000225E <dos.include.ab3@553> XINCLUDE "dos.include.ab3"
00002288 <dos.include.ab3@556> XINCLUDE "dos.include.ab3"
000022A6 <dos.include.ab3@558> XINCLUDE "dos.include.ab3"
000022D0 <dos.include.ab3@674> XINCLUDE "dos.include.ab3"
000022E6 <dos.include.ab3@675> XINCLUDE "dos.include.ab3"
000022F0 <dos.include.ab3@676> XINCLUDE "dos.include.ab3"
00002318 <dos.include.ab3@677> XINCLUDE "dos.include.ab3"
0000231E <dos.include.ab3@678> XINCLUDE "dos.include.ab3"
00002346 <dos.include.ab3@679> XINCLUDE "dos.include.ab3"
00002370 <dos.include.ab3@681> XINCLUDE "dos.include.ab3"
0000238E <dos.include.ab3@682> XINCLUDE "dos.include.ab3"
000023B8 <dos.include.ab3@705> XINCLUDE "dos.include.ab3"
00002428 <dos.include.ab3@706> XINCLUDE "dos.include.ab3"
00002452 <dos.include.ab3@707> XINCLUDE "dos.include.ab3"
00002470 <dos.include.ab3@708> XINCLUDE "dos.include.ab3"
0000249A <dos.include.ab3@743> XINCLUDE "dos.include.ab3"
000024BA <dos.include.ab3@744> XINCLUDE "dos.include.ab3"
000024E6 <dos.include.ab3@745> XINCLUDE "dos.include.ab3"
000024F0 <dos.include.ab3@746> XINCLUDE "dos.include.ab3"
0000250A <dos.include.ab3@747> XINCLUDE "dos.include.ab3"
00002534 <dos.include.ab3@894> XINCLUDE "dos.include.ab3"
000025E2 <dos.include.ab3@895> XINCLUDE "dos.include.ab3"
000025F8 <dos.include.ab3@896> XINCLUDE "dos.include.ab3"
00002602 <dos.include.ab3@897> XINCLUDE "dos.include.ab3"
0000262A <dos.include.ab3@898> XINCLUDE "dos.include.ab3"
00002634 <dos.include.ab3@899> XINCLUDE "dos.include.ab3"
0000263A <dos.include.ab3@900> XINCLUDE "dos.include.ab3"
00002640 <dos.include.ab3@901> XINCLUDE "dos.include.ab3"
00002646 <dos.include.ab3@902> XINCLUDE "dos.include.ab3"
00002658 <dos.include.ab3@904> XINCLUDE "dos.include.ab3"
00002662 <dos.include.ab3@906> XINCLUDE "dos.include.ab3"
0000267C <dos.include.ab3@907> XINCLUDE "dos.include.ab3"
000026BA <dos.include.ab3@928> XINCLUDE "dos.include.ab3"
000026C2 <dos.include.ab3@929> XINCLUDE "dos.include.ab3"
00002770 <dos.include.ab3@930> XINCLUDE "dos.include.ab3"
00002784 <dos.include.ab3@931> XINCLUDE "dos.include.ab3"
000027C6 <dos.include.ab3@932> XINCLUDE "dos.include.ab3"
000027E6 <dos.include.ab3@934> XINCLUDE "dos.include.ab3"
000027F0 <dos.include.ab3@935> XINCLUDE "dos.include.ab3"
0000280C <dos.include.ab3@936> XINCLUDE "dos.include.ab3"
00002846 <dos.include.ab3@988> XINCLUDE "dos.include.ab3"
0000284E <dos.include.ab3@989> XINCLUDE "dos.include.ab3"
000028FC <dos.include.ab3@990> XINCLUDE "dos.include.ab3"
00002932 <dos.include.ab3@991> XINCLUDE "dos.include.ab3"
00002952 <dos.include.ab3@992> XINCLUDE "dos.include.ab3"
00002970 <dos.include.ab3@993> XINCLUDE "dos.include.ab3"
00002994 <dos.include.ab3@994> XINCLUDE "dos.include.ab3"
0000299E <dos.include.ab3@996> XINCLUDE "dos.include.ab3"
000029BA <dos.include.ab3@997> XINCLUDE "dos.include.ab3"
000029F4 <dos.include.ab3@1014> XINCLUDE "dos.include.ab3"
00002AA2 <dos.include.ab3@1015> XINCLUDE "dos.include.ab3"
00002ADA <dos.include.ab3@1016> XINCLUDE "dos.include.ab3"
00002AFA <dos.include.ab3@1017> XINCLUDE "dos.include.ab3"
00002B00 <dos.include.ab3@1018> XINCLUDE "dos.include.ab3"
00002B20 <dos.include.ab3@1019> XINCLUDE "dos.include.ab3"
00002B2A <dos.include.ab3@1020> XINCLUDE "dos.include.ab3"
00002B44 <dos.include.ab3@1021> XINCLUDE "dos.include.ab3"
00002B5C <dos.include.ab3@1022> XINCLUDE "dos.include.ab3"
00002B66 <dos.include.ab3@1025> XINCLUDE "dos.include.ab3"
00002B82 <dos.include.ab3@1026> XINCLUDE "dos.include.ab3"
00002BAC <dos.include.ab3@1161> XINCLUDE "dos.include.ab3"
00002BBA <dos.include.ab3@1163> XINCLUDE "dos.include.ab3"
00002C80 <dos.include.ab3@1164> XINCLUDE "dos.include.ab3"
00002CAA <dos.include.ab3@1165> XINCLUDE "dos.include.ab3"
00002CD2 <dos.include.ab3@1167> XINCLUDE "dos.include.ab3"
00002CFC <dos.include.ab3@1168> XINCLUDE "dos.include.ab3"
00002D26 <dos.include.ab3@1170> XINCLUDE "dos.include.ab3"
00002D44 <dos.include.ab3@1171> XINCLUDE "dos.include.ab3"
00002D6E <dos.include.ab3@1189> XINCLUDE "dos.include.ab3"
00002DDA <dos.include.ab3@1191> XINCLUDE "dos.include.ab3"
00002E02 <dos.include.ab3@1192> XINCLUDE "dos.include.ab3"
00002E10 <dos.include.ab3@1193> XINCLUDE "dos.include.ab3"
00002E44 <dos.include.ab3@1194> XINCLUDE "dos.include.ab3"
00002E52 <dos.include.ab3@1197> XINCLUDE "dos.include.ab3"
00002E74 <dos.include.ab3@1203> XINCLUDE "dos.include.ab3"
00002E82 <dos.include.ab3@1207> XINCLUDE "dos.include.ab3"
00002EA6 <dos.include.ab3@1208> XINCLUDE "dos.include.ab3"
00002ED0 <dos.include.ab3@1209> XINCLUDE "dos.include.ab3"
00002EFA <dos.include.ab3@1212> XINCLUDE "dos.include.ab3"
00002F18 <dos.include.ab3@1213> XINCLUDE "dos.include.ab3"
00002F42 <dos.include.ab3@1274> XINCLUDE "dos.include.ab3"
00002F9A <dos.include.ab3@1275> XINCLUDE "dos.include.ab3"
00002FC4 <dos.include.ab3@1276> XINCLUDE "dos.include.ab3"
00002FE2 <dos.include.ab3@1277> XINCLUDE "dos.include.ab3"
00002FF8 <dos.include.ab3@1351> XINCLUDE "dos.include.ab3"
00002FFE <dos.include.ab3@1353> XINCLUDE "dos.include.ab3"
00003008 <dos.include.ab3@1354> XINCLUDE "dos.include.ab3"
00003012 <dos.include.ab3@1355> XINCLUDE "dos.include.ab3"
00003030 <dos.include.ab3@1358> XINCLUDE "dos.include.ab3"
00003036 <dos.include.ab3@1359> XINCLUDE "dos.include.ab3"
0000303C <dos.include.ab3@1360> XINCLUDE "dos.include.ab3"
0000304C <dos.include.ab3@1362> XINCLUDE "dos.include.ab3"
00003052 <dos.include.ab3@1363> XINCLUDE "dos.include.ab3"
0000305A <dos.include.ab3@1364> XINCLUDE "dos.include.ab3"
00003082 <dos.include.ab3@1365> XINCLUDE "dos.include.ab3"
0000308C <dos.include.ab3@1366> XINCLUDE "dos.include.ab3"
00003096 <dos.include.ab3@1368> XINCLUDE "dos.include.ab3"
000030AA <dos.include.ab3@1369> XINCLUDE "dos.include.ab3"
000030C0 <dos.include.ab3@1474> XINCLUDE "dos.include.ab3"
000030C6 <dos.include.ab3@1480> XINCLUDE "dos.include.ab3"
000030EA <dos.include.ab3@1481> XINCLUDE "dos.include.ab3"
0000310E <dos.include.ab3@1482> XINCLUDE "dos.include.ab3"
00003132 <dos.include.ab3@1483> XINCLUDE "dos.include.ab3"
00003138 <dos.include.ab3@1484> XINCLUDE "dos.include.ab3"
00003164 <dos.include.ab3@1485> XINCLUDE "dos.include.ab3"
00003166 <dos.include.ab3@1486> XINCLUDE "dos.include.ab3"
00003194 <dos.include.ab3@1487> XINCLUDE "dos.include.ab3"
000031BE <dos.include.ab3@1503> XINCLUDE "dos.include.ab3"
00003242 <dos.include.ab3@1506> XINCLUDE "dos.include.ab3"
0000330A <dos.include.ab3@1507> XINCLUDE "dos.include.ab3"
00003314 <dos.include.ab3@1509> XINCLUDE "dos.include.ab3"
0000335E <dos.include.ab3@1510> XINCLUDE "dos.include.ab3"
000033AA <dos.include.ab3@1512> XINCLUDE "dos.include.ab3"
000033E2 <dos.include.ab3@1513> XINCLUDE "dos.include.ab3"
000033F4 <dos.include.ab3@1514> XINCLUDE "dos.include.ab3"
0000340A <dos.include.ab3@1515> XINCLUDE "dos.include.ab3"
00003410 <dos.include.ab3@1516> XINCLUDE "dos.include.ab3"
00003426 <dos.include.ab3@1517> XINCLUDE "dos.include.ab3"
0000345A <dos.include.ab3@1519> XINCLUDE "dos.include.ab3"
00003460 <dos.include.ab3@1520> XINCLUDE "dos.include.ab3"
0000346A <dos.include.ab3@1522> XINCLUDE "dos.include.ab3"
00003484 <dos.include.ab3@1523> XINCLUDE "dos.include.ab3"
000034CE <dos.include.ab3@1553> XINCLUDE "dos.include.ab3"
00003504 <dos.include.ab3@1555> XINCLUDE "dos.include.ab3"
00003528 <dos.include.ab3@1556> XINCLUDE "dos.include.ab3"
00003532 <dos.include.ab3@1557> XINCLUDE "dos.include.ab3"
0000355A <dos.include.ab3@1558> XINCLUDE "dos.include.ab3"
000035A2 <dos.include.ab3@1561> XINCLUDE "dos.include.ab3"
00003678 <dos.include.ab3@1563> XINCLUDE "dos.include.ab3"
000036A2 <dos.include.ab3@1564> XINCLUDE "dos.include.ab3"
000036C2 <dos.include.ab3@1565> XINCLUDE "dos.include.ab3"
000036FC <dos.include.ab3@1584> XINCLUDE "dos.include.ab3"
00003702 <dos.include.ab3@1586> XINCLUDE "dos.include.ab3"
00003708 <dos.include.ab3@1587> XINCLUDE "dos.include.ab3"
00003710 <dos.include.ab3@1588> XINCLUDE "dos.include.ab3"
00003746 <dos.include.ab3@1589> XINCLUDE "dos.include.ab3"
00003754 <dos.include.ab3@1590> XINCLUDE "dos.include.ab3"
0000375E <dos.include.ab3@1591> XINCLUDE "dos.include.ab3"
0000378A <dos.include.ab3@1592> XINCLUDE "dos.include.ab3"
00003798 <dos.include.ab3@1593> XINCLUDE "dos.include.ab3"
000037A2 <dos.include.ab3@1594> XINCLUDE "dos.include.ab3"
000037D0 <dos.include.ab3@1596> XINCLUDE "dos.include.ab3"
0000384E <dos.include.ab3@1599> XINCLUDE "dos.include.ab3"
000038A0 <dos.include.ab3@1602> XINCLUDE "dos.include.ab3"
000038B2 <dos.include.ab3@1603> XINCLUDE "dos.include.ab3"
00003920 <dos.include.ab3@1604> XINCLUDE "dos.include.ab3"
00003926 <dos.include.ab3@1605> XINCLUDE "dos.include.ab3"
00003972 <dos.include.ab3@1606> XINCLUDE "dos.include.ab3"
00003A40 <dos.include.ab3@1610> XINCLUDE "dos.include.ab3"
00003B20 <dos.include.ab3@1611> XINCLUDE "dos.include.ab3"
00003B8C <dos.include.ab3@1613> XINCLUDE "dos.include.ab3"
00003B92 <dos.include.ab3@1614> XINCLUDE "dos.include.ab3"
00003BAE <dos.include.ab3@1615> XINCLUDE "dos.include.ab3"
00003BBC <dos.include.ab3@1618> XINCLUDE "dos.include.ab3"
00003BC2 <dos.include.ab3@1619> XINCLUDE "dos.include.ab3"
00003BD4 <dos.include.ab3@1622> XINCLUDE "dos.include.ab3"
00003BEA <dos.include.ab3@1623> XINCLUDE "dos.include.ab3"
00003BF4 <dos.include.ab3@1624> XINCLUDE "dos.include.ab3"
00003C10 <dos.include.ab3@1625> XINCLUDE "dos.include.ab3"
00003C3A <dos.include.ab3@2220> XINCLUDE "dos.include.ab3"
00003C4E <dos.include.ab3@2221> XINCLUDE "dos.include.ab3"
00003C8C <dos.include.ab3@2222> XINCLUDE "dos.include.ab3"
00003D72 <dos.include.ab3@2223> XINCLUDE "dos.include.ab3"
00003D78 <dos.include.ab3@2224> XINCLUDE "dos.include.ab3"
00003DC8 <dos.include.ab3@2225> XINCLUDE "dos.include.ab3"
00003DF2 <dos.include.ab3@2226> XINCLUDE "dos.include.ab3"
00003E10 <dos.include.ab3@2227> XINCLUDE "dos.include.ab3"
00003E3A <dos.include.ab3@2251> XINCLUDE "dos.include.ab3"
00003E4E <dos.include.ab3@2252> XINCLUDE "dos.include.ab3"
00003E8C <dos.include.ab3@2253> XINCLUDE "dos.include.ab3"
00003F72 <dos.include.ab3@2254> XINCLUDE "dos.include.ab3"
00003F78 <dos.include.ab3@2255> XINCLUDE "dos.include.ab3"
00003FEA <dos.include.ab3@2256> XINCLUDE "dos.include.ab3"
00004014 <dos.include.ab3@2257> XINCLUDE "dos.include.ab3"
00004032 <dos.include.ab3@2258> XINCLUDE "dos.include.ab3"
0000406C <dos.include.ab3@2284> XINCLUDE "dos.include.ab3"
000040A4 <dos.include.ab3@2285> XINCLUDE "dos.include.ab3"
000040FC <dos.include.ab3@2286> XINCLUDE "dos.include.ab3"
00004160 <dos.include.ab3@2287> XINCLUDE "dos.include.ab3"
0000418A <dos.include.ab3@2289> XINCLUDE "dos.include.ab3"
000041AA <dos.include.ab3@2290> XINCLUDE "dos.include.ab3"
000041D4 <dos.include.ab3@2307> XINCLUDE "dos.include.ab3"
000041DA <dos.include.ab3@2308> XINCLUDE "dos.include.ab3"
000041F0 <dos.include.ab3@2309> XINCLUDE "dos.include.ab3"
000041FA <dos.include.ab3@2310> XINCLUDE "dos.include.ab3"
00004200 <dos.include.ab3@2311> XINCLUDE "dos.include.ab3"
00004210 <dos.include.ab3@2312> XINCLUDE "dos.include.ab3"
0000421A <dos.include.ab3@2314> XINCLUDE "dos.include.ab3"
00004234 <dos.include.ab3@2315> XINCLUDE "dos.include.ab3"
00004262 <dos.include.ab3@2557> XINCLUDE "dos.include.ab3"
00004284 <dos.include.ab3@2558> XINCLUDE "dos.include.ab3"
0000428C <dos.include.ab3@2559> XINCLUDE "dos.include.ab3"
0000429A <dos.include.ab3@2560> XINCLUDE "dos.include.ab3"
000042B4 <dos.include.ab3@2562> XINCLUDE "dos.include.ab3"
000042E2 <dos.include.ab3@2581> XINCLUDE "dos.include.ab3"
000042F6 <dos.include.ab3@2582> XINCLUDE "dos.include.ab3"
0000432A <dos.include.ab3@2583> XINCLUDE "dos.include.ab3"
00004344 <dos.include.ab3@2585> XINCLUDE "dos.include.ab3"
0000434C <dos.include.ab3@2586> XINCLUDE "dos.include.ab3"
0000435A <dos.include.ab3@2587> XINCLUDE "dos.include.ab3"
00004374 <dos.include.ab3@2589> XINCLUDE "dos.include.ab3"
0000439E <dos.include.ab3@2725> XINCLUDE "dos.include.ab3"
000043AA <dos.include.ab3@2727> XINCLUDE "dos.include.ab3"
000043CA <dos.include.ab3@2728> XINCLUDE "dos.include.ab3"
000043F0 <dos.include.ab3@2729> XINCLUDE "dos.include.ab3"
0000441C <dos.include.ab3@2730> XINCLUDE "dos.include.ab3"
00004434 <dos.include.ab3@2731> XINCLUDE "dos.include.ab3"
00004442 <dos.include.ab3@2733> XINCLUDE "dos.include.ab3"
00004448 <dos.include.ab3@2734> XINCLUDE "dos.include.ab3"
00004454 <dos.include.ab3@2735> XINCLUDE "dos.include.ab3"
0000445A <dos.include.ab3@2737> XINCLUDE "dos.include.ab3"
00004466 <dos.include.ab3@2738> XINCLUDE "dos.include.ab3"
00004476 <dos.include.ab3@2740> XINCLUDE "dos.include.ab3"
0000447C <dos.include.ab3@2741> XINCLUDE "dos.include.ab3"
00004488 <dos.include.ab3@2742> XINCLUDE "dos.include.ab3"
00004492 <dos.include.ab3@2744> XINCLUDE "dos.include.ab3"
000044AC <dos.include.ab3@2745> XINCLUDE "dos.include.ab3"
000044AC <AmiBlitz3.ab3@79> XINCLUDE "dos.include.ab3"
000044BA <AmiBlitz3.ab3@81> If dos_FromCLI{}
000044C0 <AmiBlitz3.ab3@82>   CLIMode.l=True
000044CC <AmiBlitz3.ab3@83>   error_SetFlags{#error_stdout}
000044CC <common.ab3@1> XINCLUDE "/Shared/common.ab3"
000044F4 <common.ab3@49> XINCLUDE "/Shared/common.ab3"
000044FA <common.ab3@262> XINCLUDE "/Shared/common.ab3"
000044FC <common.ab3@263> XINCLUDE "/Shared/common.ab3"
0000468C <common.ab3@264> XINCLUDE "/Shared/common.ab3"
00004690 <common.ab3@265> XINCLUDE "/Shared/common.ab3"
00004694 <common.ab3@267> XINCLUDE "/Shared/common.ab3"
00004698 <common.ab3@268> XINCLUDE "/Shared/common.ab3"
0000469C <common.ab3@270> XINCLUDE "/Shared/common.ab3"
000046A0 <common.ab3@271> XINCLUDE "/Shared/common.ab3"
000046A4 <common.ab3@272> XINCLUDE "/Shared/common.ab3"
000046A8 <common.ab3@273> XINCLUDE "/Shared/common.ab3"
000046AC <common.ab3@274> XINCLUDE "/Shared/common.ab3"
000046B0 <common.ab3@275> XINCLUDE "/Shared/common.ab3"
000046B4 <common.ab3@276> XINCLUDE "/Shared/common.ab3"
000046B8 <common.ab3@277> XINCLUDE "/Shared/common.ab3"
000046BC <common.ab3@278> XINCLUDE "/Shared/common.ab3"
000046C0 <common.ab3@280> XINCLUDE "/Shared/common.ab3"
000046C4 <common.ab3@282> XINCLUDE "/Shared/common.ab3"
000046C8 <common.ab3@283> XINCLUDE "/Shared/common.ab3"
000046CC <common.ab3@284> XINCLUDE "/Shared/common.ab3"
000046D0 <common.ab3@285> XINCLUDE "/Shared/common.ab3"
000046D4 <common.ab3@286> XINCLUDE "/Shared/common.ab3"
000046D8 <common.ab3@287> XINCLUDE "/Shared/common.ab3"
000046DC <common.ab3@288> XINCLUDE "/Shared/common.ab3"
000046E0 <common.ab3@289> XINCLUDE "/Shared/common.ab3"
000046E4 <common.ab3@290> XINCLUDE "/Shared/common.ab3"
000046E8 <common.ab3@291> XINCLUDE "/Shared/common.ab3"
000046F0 <common.ab3@294> XINCLUDE "/Shared/common.ab3"
000046F4 <common.ab3@295> XINCLUDE "/Shared/common.ab3"
000046F6 <common.ab3@296> XINCLUDE "/Shared/common.ab3"
000046FA <common.ab3@297> XINCLUDE "/Shared/common.ab3"
000046FC <common.ab3@298> XINCLUDE "/Shared/common.ab3"
00004700 <common.ab3@299> XINCLUDE "/Shared/common.ab3"
00004704 <common.ab3@300> XINCLUDE "/Shared/common.ab3"
00004708 <common.ab3@301> XINCLUDE "/Shared/common.ab3"
0000470C <common.ab3@302> XINCLUDE "/Shared/common.ab3"
00004710 <common.ab3@303> XINCLUDE "/Shared/common.ab3"
00004718 <common.ab3@304> XINCLUDE "/Shared/common.ab3"
00004720 <common.ab3@305> XINCLUDE "/Shared/common.ab3"
00004724 <common.ab3@306> XINCLUDE "/Shared/common.ab3"
00004728 <common.ab3@307> XINCLUDE "/Shared/common.ab3"
0000472C <common.ab3@308> XINCLUDE "/Shared/common.ab3"
0000472E <common.ab3@310> XINCLUDE "/Shared/common.ab3"
000047EE <common.ab3@311> XINCLUDE "/Shared/common.ab3"
00004836 <common.ab3@312> XINCLUDE "/Shared/common.ab3"
0000483A <common.ab3@314> XINCLUDE "/Shared/common.ab3"
0000483C <common.ab3@315> XINCLUDE "/Shared/common.ab3"
00004840 <common.ab3@316> XINCLUDE "/Shared/common.ab3"
00004842 <common.ab3@317> XINCLUDE "/Shared/common.ab3"
00004844 <common.ab3@318> XINCLUDE "/Shared/common.ab3"
00004846 <common.ab3@319> XINCLUDE "/Shared/common.ab3"
00004848 <common.ab3@320> XINCLUDE "/Shared/common.ab3"
0000484A <common.ab3@322> XINCLUDE "/Shared/common.ab3"
0000484C <common.ab3@323> XINCLUDE "/Shared/common.ab3"
0000484D <common.ab3@327> XINCLUDE "/Shared/common.ab3"
0000484E <common.ab3@329> XINCLUDE "/Shared/common.ab3"
00004850 <common.ab3@330> XINCLUDE "/Shared/common.ab3"
00004852 <common.ab3@331> XINCLUDE "/Shared/common.ab3"
00004854 <common.ab3@333> XINCLUDE "/Shared/common.ab3"
00004856 <common.ab3@336> XINCLUDE "/Shared/common.ab3"
00004858 <common.ab3@338> XINCLUDE "/Shared/common.ab3"
0000485A <common.ab3@340> XINCLUDE "/Shared/common.ab3"
0000485E <common.ab3@342> XINCLUDE "/Shared/common.ab3"
00004860 <common.ab3@344> XINCLUDE "/Shared/common.ab3"
00004862 <common.ab3@345> XINCLUDE "/Shared/common.ab3"
00004864 <common.ab3@347> XINCLUDE "/Shared/common.ab3"
00004868 <common.ab3@349> XINCLUDE "/Shared/common.ab3"
0000486A <common.ab3@350> XINCLUDE "/Shared/common.ab3"
0000486C <common.ab3@351> XINCLUDE "/Shared/common.ab3"
00004870 <common.ab3@354> XINCLUDE "/Shared/common.ab3"
00004872 <common.ab3@355> XINCLUDE "/Shared/common.ab3"
00004874 <common.ab3@356> XINCLUDE "/Shared/common.ab3"
00004876 <common.ab3@357> XINCLUDE "/Shared/common.ab3"
00004878 <common.ab3@359> XINCLUDE "/Shared/common.ab3"
0000487A <common.ab3@360> XINCLUDE "/Shared/common.ab3"
0000487E <common.ab3@362> XINCLUDE "/Shared/common.ab3"
00004880 <common.ab3@363> XINCLUDE "/Shared/common.ab3"
00004882 <common.ab3@364> XINCLUDE "/Shared/common.ab3"
00004884 <common.ab3@368> XINCLUDE "/Shared/common.ab3"
00004886 <common.ab3@369> XINCLUDE "/Shared/common.ab3"
0000488A <common.ab3@370> XINCLUDE "/Shared/common.ab3"
0000488C <common.ab3@376> XINCLUDE "/Shared/common.ab3"
0000488E <common.ab3@378> XINCLUDE "/Shared/common.ab3"
00004890 <common.ab3@380> XINCLUDE "/Shared/common.ab3"
00004892 <common.ab3@381> XINCLUDE "/Shared/common.ab3"
00004894 <common.ab3@382> XINCLUDE "/Shared/common.ab3"
00004898 <common.ab3@383> XINCLUDE "/Shared/common.ab3"
0000489A <common.ab3@384> XINCLUDE "/Shared/common.ab3"
0000489C <common.ab3@385> XINCLUDE "/Shared/common.ab3"
0000489E <common.ab3@386> XINCLUDE "/Shared/common.ab3"
000048A0 <common.ab3@387> XINCLUDE "/Shared/common.ab3"
000048A2 <common.ab3@389> XINCLUDE "/Shared/common.ab3"
000048A4 <common.ab3@391> XINCLUDE "/Shared/common.ab3"
000048A6 <common.ab3@393> XINCLUDE "/Shared/common.ab3"
000048AA <common.ab3@394> XINCLUDE "/Shared/common.ab3"
000048AC <common.ab3@395> XINCLUDE "/Shared/common.ab3"
000048DA <common.ab3@396> XINCLUDE "/Shared/common.ab3"
000048E4 <common.ab3@397> XINCLUDE "/Shared/common.ab3"
000048E8 <common.ab3@398> XINCLUDE "/Shared/common.ab3"
000048EA <common.ab3@400> XINCLUDE "/Shared/common.ab3"
000048EC <common.ab3@401> XINCLUDE "/Shared/common.ab3"
000048F0 <common.ab3@402> XINCLUDE "/Shared/common.ab3"
000048F4 <common.ab3@403> XINCLUDE "/Shared/common.ab3"
000048FD <common.ab3@404> XINCLUDE "/Shared/common.ab3"
00004900 <common.ab3@405> XINCLUDE "/Shared/common.ab3"
0000492D <common.ab3@406> XINCLUDE "/Shared/common.ab3"
0000496D <common.ab3@407> XINCLUDE "/Shared/common.ab3"
00004979 <common.ab3@408> XINCLUDE "/Shared/common.ab3"
000049C9 <common.ab3@409> XINCLUDE "/Shared/common.ab3"
000049D5 <common.ab3@410> XINCLUDE "/Shared/common.ab3"
00004A25 <common.ab3@411> XINCLUDE "/Shared/common.ab3"
00004B21 <common.ab3@412> XINCLUDE "/Shared/common.ab3"
00004B23 <common.ab3@413> XINCLUDE "/Shared/common.ab3"
00004BE3 <common.ab3@414> XINCLUDE "/Shared/common.ab3"
00004C23 <common.ab3@415> XINCLUDE "/Shared/common.ab3"
00004C25 <common.ab3@416> XINCLUDE "/Shared/common.ab3"
00004C26 <common.ab3@417> XINCLUDE "/Shared/common.ab3"
00004C2A <common.ab3@420> XINCLUDE "/Shared/common.ab3"
00004C2E <common.ab3@422> XINCLUDE "/Shared/common.ab3"
00004C32 <common.ab3@423> XINCLUDE "/Shared/common.ab3"
00004C36 <common.ab3@424> XINCLUDE "/Shared/common.ab3"
00004C3A <common.ab3@426> XINCLUDE "/Shared/common.ab3"
00004C3E <common.ab3@428> XINCLUDE "/Shared/common.ab3"
00004C42 <common.ab3@429> XINCLUDE "/Shared/common.ab3"
00004C46 <common.ab3@430> XINCLUDE "/Shared/common.ab3"
00004C4A <common.ab3@431> XINCLUDE "/Shared/common.ab3"
00004C4E <common.ab3@432> XINCLUDE "/Shared/common.ab3"
00004C52 <common.ab3@433> XINCLUDE "/Shared/common.ab3"
00004C56 <common.ab3@434> XINCLUDE "/Shared/common.ab3"
00004C5A <common.ab3@435> XINCLUDE "/Shared/common.ab3"
00004C5E <common.ab3@437> XINCLUDE "/Shared/common.ab3"
00004C62 <common.ab3@439> XINCLUDE "/Shared/common.ab3"
00004C66 <common.ab3@441> XINCLUDE "/Shared/common.ab3"
00004C6A <common.ab3@443> XINCLUDE "/Shared/common.ab3"
00004C6E <common.ab3@444> XINCLUDE "/Shared/common.ab3"
00004C78 <common.ab3@445> XINCLUDE "/Shared/common.ab3"
00004C7C <common.ab3@446> XINCLUDE "/Shared/common.ab3"
00004C80 <common.ab3@449> XINCLUDE "/Shared/common.ab3"
00004C82 <common.ab3@450> XINCLUDE "/Shared/common.ab3"
00004C84 <common.ab3@451> XINCLUDE "/Shared/common.ab3"
00004CA2 <common.ab3@452> XINCLUDE "/Shared/common.ab3"
00004CA6 <common.ab3@453> XINCLUDE "/Shared/common.ab3"
00004CA8 <common.ab3@455> XINCLUDE "/Shared/common.ab3"
00004CAC <common.ab3@456> XINCLUDE "/Shared/common.ab3"
00004CE0 <common.ab3@457> XINCLUDE "/Shared/common.ab3"
00004CE4 <common.ab3@458> XINCLUDE "/Shared/common.ab3"
00004CF2 <common.ab3@460> XINCLUDE "/Shared/common.ab3"
00004D04 <common.ab3@461> XINCLUDE "/Shared/common.ab3"
00004D06 <common.ab3@462> XINCLUDE "/Shared/common.ab3"
00004D1A <common.ab3@463> XINCLUDE "/Shared/common.ab3"
00004D30 <common.ab3@464> XINCLUDE "/Shared/common.ab3"
00004D46 <common.ab3@465> XINCLUDE "/Shared/common.ab3"
00004D5C <common.ab3@466> XINCLUDE "/Shared/common.ab3"
00004D72 <common.ab3@467> XINCLUDE "/Shared/common.ab3"
00004D74 <common.ab3@468> XINCLUDE "/Shared/common.ab3"
00004D76 <common.ab3@469> XINCLUDE "/Shared/common.ab3"
00004D7A <common.ab3@471> XINCLUDE "/Shared/common.ab3"
00004D7E <common.ab3@473> XINCLUDE "/Shared/common.ab3"
00004D82 <common.ab3@475> XINCLUDE "/Shared/common.ab3"
00004D86 <common.ab3@476> XINCLUDE "/Shared/common.ab3"
00004D8A <common.ab3@477> XINCLUDE "/Shared/common.ab3"
00004D8E <common.ab3@478> XINCLUDE "/Shared/common.ab3"
00004D92 <common.ab3@479> XINCLUDE "/Shared/common.ab3"
00004D96 <common.ab3@480> XINCLUDE "/Shared/common.ab3"
00004D9A <common.ab3@481> XINCLUDE "/Shared/common.ab3"
00004D9E <common.ab3@482> XINCLUDE "/Shared/common.ab3"
00004DA4 <common.ab3@483> XINCLUDE "/Shared/common.ab3"
00004DB6 <common.ab3@484> XINCLUDE "/Shared/common.ab3"
00004DB8 <common.ab3@488> XINCLUDE "/Shared/common.ab3"
00004DBC <common.ab3@489> XINCLUDE "/Shared/common.ab3"
00004DBE <common.ab3@490> XINCLUDE "/Shared/common.ab3"
00004DC2 <common.ab3@491> XINCLUDE "/Shared/common.ab3"
00004DC4 <common.ab3@492> XINCLUDE "/Shared/common.ab3"
00004DC8 <common.ab3@493> XINCLUDE "/Shared/common.ab3"
00004DCA <common.ab3@494> XINCLUDE "/Shared/common.ab3"
00004DCE <common.ab3@495> XINCLUDE "/Shared/common.ab3"
00004DD0 <common.ab3@496> XINCLUDE "/Shared/common.ab3"
00004DD4 <common.ab3@497> XINCLUDE "/Shared/common.ab3"
00004DD6 <common.ab3@498> XINCLUDE "/Shared/common.ab3"
00004DDA <common.ab3@499> XINCLUDE "/Shared/common.ab3"
00004DDC <common.ab3@500> XINCLUDE "/Shared/common.ab3"
00004DE0 <common.ab3@501> XINCLUDE "/Shared/common.ab3"
00004DE2 <common.ab3@502> XINCLUDE "/Shared/common.ab3"
00004DE6 <common.ab3@503> XINCLUDE "/Shared/common.ab3"
00004DE8 <common.ab3@504> XINCLUDE "/Shared/common.ab3"
00004DEC <common.ab3@505> XINCLUDE "/Shared/common.ab3"
00004DEE <common.ab3@506> XINCLUDE "/Shared/common.ab3"
00004DF2 <common.ab3@507> XINCLUDE "/Shared/common.ab3"
00004DF4 <common.ab3@508> XINCLUDE "/Shared/common.ab3"
00004DF8 <common.ab3@509> XINCLUDE "/Shared/common.ab3"
00004DFA <common.ab3@510> XINCLUDE "/Shared/common.ab3"
00004DFE <common.ab3@511> XINCLUDE "/Shared/common.ab3"
00004E00 <common.ab3@512> XINCLUDE "/Shared/common.ab3"
00004E04 <common.ab3@513> XINCLUDE "/Shared/common.ab3"
00004E06 <common.ab3@514> XINCLUDE "/Shared/common.ab3"
00004E0A <common.ab3@515> XINCLUDE "/Shared/common.ab3"
00004E0C <common.ab3@516> XINCLUDE "/Shared/common.ab3"
00004E20 <common.ab3@520> XINCLUDE "/Shared/common.ab3"
00004E34 <common.ab3@521> XINCLUDE "/Shared/common.ab3"
00004E48 <common.ab3@522> XINCLUDE "/Shared/common.ab3"
00004E4A <common.ab3@523> XINCLUDE "/Shared/common.ab3"
00004E4E <common.ab3@524> XINCLUDE "/Shared/common.ab3"
00004E52 <common.ab3@525> XINCLUDE "/Shared/common.ab3"
00004E56 <common.ab3@526> XINCLUDE "/Shared/common.ab3"
00004E5A <common.ab3@527> XINCLUDE "/Shared/common.ab3"
00004E5E <common.ab3@528> XINCLUDE "/Shared/common.ab3"
00004E62 <common.ab3@529> XINCLUDE "/Shared/common.ab3"
00004E66 <common.ab3@530> XINCLUDE "/Shared/common.ab3"
00004E67 <common.ab3@531> XINCLUDE "/Shared/common.ab3"
00004E68 <common.ab3@532> XINCLUDE "/Shared/common.ab3"
00004E69 <common.ab3@533> XINCLUDE "/Shared/common.ab3"
00004E6C <common.ab3@534> XINCLUDE "/Shared/common.ab3"
00004E70 <common.ab3@535> XINCLUDE "/Shared/common.ab3"
00004E74 <common.ab3@536> XINCLUDE "/Shared/common.ab3"
00004E78 <common.ab3@537> XINCLUDE "/Shared/common.ab3"
00004E7C <common.ab3@538> XINCLUDE "/Shared/common.ab3"
00004E80 <common.ab3@539> XINCLUDE "/Shared/common.ab3"
00004E84 <common.ab3@540> XINCLUDE "/Shared/common.ab3"
00004E85 <common.ab3@541> XINCLUDE "/Shared/common.ab3"
00004E86 <common.ab3@542> XINCLUDE "/Shared/common.ab3"
00004E88 <common.ab3@543> XINCLUDE "/Shared/common.ab3"
00004E8C <common.ab3@544> XINCLUDE "/Shared/common.ab3"
00004E90 <common.ab3@545> XINCLUDE "/Shared/common.ab3"
00004E94 <common.ab3@546> XINCLUDE "/Shared/common.ab3"
00004E98 <common.ab3@548> XINCLUDE "/Shared/common.ab3"
00004E9C <common.ab3@549> XINCLUDE "/Shared/common.ab3"
00004EA0 <common.ab3@550> XINCLUDE "/Shared/common.ab3"
00004EA4 <common.ab3@551> XINCLUDE "/Shared/common.ab3"
00004EA8 <common.ab3@552> XINCLUDE "/Shared/common.ab3"
00004EAC <common.ab3@553> XINCLUDE "/Shared/common.ab3"
00004EB0 <common.ab3@554> XINCLUDE "/Shared/common.ab3"
00004EB4 <common.ab3@555> XINCLUDE "/Shared/common.ab3"
00004EB8 <common.ab3@559> XINCLUDE "/Shared/common.ab3"
00004EBC <common.ab3@560> XINCLUDE "/Shared/common.ab3"
00004EC0 <common.ab3@561> XINCLUDE "/Shared/common.ab3"
00004EC2 <common.ab3@562> XINCLUDE "/Shared/common.ab3"
00004EC3 <common.ab3@563> XINCLUDE "/Shared/common.ab3"
00004EC7 <common.ab3@564> XINCLUDE "/Shared/common.ab3"
00004ECB <common.ab3@565> XINCLUDE "/Shared/common.ab3"
00004ECF <common.ab3@566> XINCLUDE "/Shared/common.ab3"
00004ED3 <common.ab3@567> XINCLUDE "/Shared/common.ab3"
00004ED4 <common.ab3@569> XINCLUDE "/Shared/common.ab3"
00004ED8 <common.ab3@571> XINCLUDE "/Shared/common.ab3"
00004EDC <common.ab3@572> XINCLUDE "/Shared/common.ab3"
00004EE0 <common.ab3@573> XINCLUDE "/Shared/common.ab3"
00004EE4 <common.ab3@574> XINCLUDE "/Shared/common.ab3"
00004EE8 <common.ab3@575> XINCLUDE "/Shared/common.ab3"
00004EE9 <common.ab3@576> XINCLUDE "/Shared/common.ab3"
00004EEA <common.ab3@578> XINCLUDE "/Shared/common.ab3"
00004EEE <common.ab3@580> XINCLUDE "/Shared/common.ab3"
00004EF2 <common.ab3@581> XINCLUDE "/Shared/common.ab3"
00004EF4 <common.ab3@582> XINCLUDE "/Shared/common.ab3"
00004EF6 <common.ab3@583> XINCLUDE "/Shared/common.ab3"
00004EFA <common.ab3@587> XINCLUDE "/Shared/common.ab3"
00004EFE <common.ab3@588> XINCLUDE "/Shared/common.ab3"
00004F02 <common.ab3@590> XINCLUDE "/Shared/common.ab3"
00004F06 <common.ab3@591> XINCLUDE "/Shared/common.ab3"
00004F0A <common.ab3@593> XINCLUDE "/Shared/common.ab3"
00004F0E <common.ab3@594> XINCLUDE "/Shared/common.ab3"
00004F12 <common.ab3@596> XINCLUDE "/Shared/common.ab3"
00004F16 <common.ab3@597> XINCLUDE "/Shared/common.ab3"
00004F1A <common.ab3@598> XINCLUDE "/Shared/common.ab3"
00004F1E <common.ab3@599> XINCLUDE "/Shared/common.ab3"
00004F22 <common.ab3@600> XINCLUDE "/Shared/common.ab3"
00004F26 <common.ab3@601> XINCLUDE "/Shared/common.ab3"
00004F2A <common.ab3@602> XINCLUDE "/Shared/common.ab3"
00004F2E <common.ab3@603> XINCLUDE "/Shared/common.ab3"
00004F32 <common.ab3@604> XINCLUDE "/Shared/common.ab3"
00004F36 <common.ab3@605> XINCLUDE "/Shared/common.ab3"
00004F3A <common.ab3@606> XINCLUDE "/Shared/common.ab3"
00004F3E <common.ab3@607> XINCLUDE "/Shared/common.ab3"
00004F42 <common.ab3@608> XINCLUDE "/Shared/common.ab3"
00004F46 <common.ab3@609> XINCLUDE "/Shared/common.ab3"
00004F46 <AmiBlitz3.ab3@86> XINCLUDE "/Shared/common.ab3"
00004F46 <preprocessor.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F46 <hashmap.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F64 <hashmap.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F6C <hashmap.include.ab3@41> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F9A <hashmap.include.ab3@42> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FCA <hashmap.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FDA <hashmap.include.ab3@44> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FE4 <hashmap.include.ab3@46> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FEA <hashmap.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
0000500C <hashmap.include.ab3@52> XINCLUDE "/Shared/preprocessor.include.ab3"
0000502C <hashmap.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
0000503E <hashmap.include.ab3@55> XINCLUDE "/Shared/preprocessor.include.ab3"
00005066 <hashmap.include.ab3@56> XINCLUDE "/Shared/preprocessor.include.ab3"
0000506C <hashmap.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00005086 <hashmap.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
000050A0 <hashmap.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
000050B2 <hashmap.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
000050C0 <hashmap.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
000050F4 <hashmap.include.ab3@67> XINCLUDE "/Shared/preprocessor.include.ab3"
00005102 <hashmap.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
0000510C <hashmap.include.ab3@69> XINCLUDE "/Shared/preprocessor.include.ab3"
0000511E <hashmap.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00005158 <hashmap.include.ab3@71> XINCLUDE "/Shared/preprocessor.include.ab3"
00005168 <hashmap.include.ab3@72> XINCLUDE "/Shared/preprocessor.include.ab3"
0000516E <hashmap.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
0000517E <hashmap.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
0000518A <hashmap.include.ab3@77> XINCLUDE "/Shared/preprocessor.include.ab3"
00005198 <hashmap.include.ab3@79> XINCLUDE "/Shared/preprocessor.include.ab3"
000051A8 <hashmap.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
000051C8 <hashmap.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
000051D4 <hashmap.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
000051E2 <hashmap.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
000051F0 <hashmap.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
000051FE <hashmap.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
0000520C <hashmap.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
0000523E <hashmap.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
0000524C <hashmap.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
0000525C <hashmap.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00005262 <hashmap.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00005266 <hashmap.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00005280 <hashmap.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
0000529A <hashmap.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
000052B4 <hashmap.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
000052D4 <hashmap.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
000052DE <hashmap.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
000052EA <hashmap.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
000052FE <hashmap.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00005330 <hashmap.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
00005348 <hashmap.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
00005354 <hashmap.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
00005362 <hashmap.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
00005370 <hashmap.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
0000537A <hashmap.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
00005388 <hashmap.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
000053B2 <hashmap.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
000053BC <hashmap.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
000053C2 <hashmap.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
000053F0 <hashmap.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
0000540A <hashmap.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
0000542A <hashmap.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
0000543E <hashmap.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
00005456 <hashmap.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
0000547E <hashmap.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00005498 <hashmap.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
000054A6 <hashmap.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
000054B4 <hashmap.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
000054C2 <hashmap.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
000054D6 <hashmap.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
0000552A <hashmap.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
00005554 <hashmap.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
00005598 <hashmap.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
000055B8 <hashmap.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000055CA <hashmap.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
000055EE <hashmap.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
000055FC <hashmap.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
00005654 <hashmap.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
0000569A <hashmap.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
000056A0 <hashmap.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
000056A6 <hashmap.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
000056CE <hashmap.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
000056E0 <hashmap.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
000056F2 <hashmap.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
0000572C <hashmap.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
0000573C <hashmap.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00005742 <hashmap.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
00005752 <hashmap.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
00005758 <hashmap.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
0000575E <hashmap.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
00005776 <hashmap.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
000057B4 <hashmap.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
000057D0 <hashmap.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
00005802 <hashmap.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
00005816 <hashmap.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
0000582A <hashmap.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
00005842 <hashmap.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
0000586A <hashmap.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
00005874 <hashmap.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
00005882 <hashmap.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
0000589A <hashmap.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
000058A0 <hashmap.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
000058A8 <hashmap.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
000058C8 <hashmap.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
000058EE <hashmap.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
000058F8 <hashmap.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
00005906 <hashmap.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
00005910 <hashmap.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
0000593C <hashmap.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00005950 <hashmap.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00005956 <hashmap.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00005964 <hashmap.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
0000599A <hashmap.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
000059E8 <hashmap.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A10 <hashmap.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A2A <hashmap.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A3C <hashmap.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A46 <hashmap.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A62 <hashmap.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A8C <hashmap.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AA8 <hashmap.include.ab3@214> XINCLUDE "/Shared/preprocessor.include.ab3"
00005ACA <hashmap.include.ab3@215> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AF8 <hashmap.include.ab3@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B12 <hashmap.include.ab3@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B3A <hashmap.include.ab3@218> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B56 <hashmap.include.ab3@219> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B72 <hashmap.include.ab3@220> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B80 <hashmap.include.ab3@221> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B94 <hashmap.include.ab3@223> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BB6 <hashmap.include.ab3@224> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BD8 <hashmap.include.ab3@225> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BE6 <hashmap.include.ab3@226> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C06 <hashmap.include.ab3@227> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C36 <hashmap.include.ab3@228> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C3C <hashmap.include.ab3@229> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C70 <hashmap.include.ab3@230> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CB2 <hashmap.include.ab3@231> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CC2 <hashmap.include.ab3@232> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CCC <hashmap.include.ab3@233> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CDC <hashmap.include.ab3@234> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CE2 <hashmap.include.ab3@238> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CEA <hashmap.include.ab3@240> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CF0 <hashmap.include.ab3@242> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D1E <hashmap.include.ab3@246> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D50 <hashmap.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D88 <hashmap.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D9C <hashmap.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DB4 <hashmap.include.ab3@251> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DDC <hashmap.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E0E <hashmap.include.ab3@253> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E2A <hashmap.include.ab3@254> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E38 <hashmap.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E4C <hashmap.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EA0 <hashmap.include.ab3@257> XINCLUDE "/Shared/preprocessor.include.ab3"
00005ECA <hashmap.include.ab3@258> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F0E <hashmap.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F34 <hashmap.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F3A <hashmap.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F58 <hashmap.include.ab3@264> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F76 <hashmap.include.ab3@266> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F94 <hashmap.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F9A <hashmap.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FBC <hashmap.include.ab3@306> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FEA <hashmap.include.ab3@308> XINCLUDE "/Shared/preprocessor.include.ab3"
00006012 <hashmap.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
00006036 <hashmap.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
0000608C <hashmap.include.ab3@313> XINCLUDE "/Shared/preprocessor.include.ab3"
000060DE <hashmap.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
00006134 <hashmap.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
00006144 <hashmap.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
00006196 <hashmap.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
000061BE <hashmap.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
000061E4 <hashmap.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
00006200 <hashmap.include.ab3@322> XINCLUDE "/Shared/preprocessor.include.ab3"
00006208 <hashmap.include.ab3@323> XINCLUDE "/Shared/preprocessor.include.ab3"
00006230 <hashmap.include.ab3@324> XINCLUDE "/Shared/preprocessor.include.ab3"
0000625E <hashmap.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
00006286 <hashmap.include.ab3@328> XINCLUDE "/Shared/preprocessor.include.ab3"
0000628E <hashmap.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
000062B2 <hashmap.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
000062E6 <hashmap.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
00006302 <hashmap.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
0000630C <hashmap.include.ab3@334> XINCLUDE "/Shared/preprocessor.include.ab3"
00006320 <hashmap.include.ab3@335> XINCLUDE "/Shared/preprocessor.include.ab3"
00006340 <hashmap.include.ab3@336> XINCLUDE "/Shared/preprocessor.include.ab3"
0000635C <hashmap.include.ab3@337> XINCLUDE "/Shared/preprocessor.include.ab3"
0000636A <hashmap.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
00006378 <hashmap.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
0000637E <hashmap.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
00006396 <hashmap.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
000063A6 <hashmap.include.ab3@343> XINCLUDE "/Shared/preprocessor.include.ab3"
000063D4 <hashmap.include.ab3@344> XINCLUDE "/Shared/preprocessor.include.ab3"
00006430 <hashmap.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
000064A6 <hashmap.include.ab3@346> XINCLUDE "/Shared/preprocessor.include.ab3"
00006502 <hashmap.include.ab3@347> XINCLUDE "/Shared/preprocessor.include.ab3"
00006508 <hashmap.include.ab3@348> XINCLUDE "/Shared/preprocessor.include.ab3"
00006512 <hashmap.include.ab3@351> XINCLUDE "/Shared/preprocessor.include.ab3"
00006518 <hashmap.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
00006546 <hashmap.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
0000654C <hashmap.include.ab3@359> XINCLUDE "/Shared/preprocessor.include.ab3"
0000656C <hashmap.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
00006576 <hashmap.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
00006588 <hashmap.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
00006598 <hashmap.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
000065A2 <hashmap.include.ab3@366> XINCLUDE "/Shared/preprocessor.include.ab3"
000065BC <hashmap.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
000065D6 <hashmap.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
000065DC <hashmap.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
000065E2 <hashmap.include.ab3@375> XINCLUDE "/Shared/preprocessor.include.ab3"
000065EC <hashmap.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
000065F4 <hashmap.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
0000661C <hashmap.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
00006622 <hashmap.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
00006636 <hashmap.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
00006672 <hashmap.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
00006698 <hashmap.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
000066A6 <hashmap.include.ab3@384> XINCLUDE "/Shared/preprocessor.include.ab3"
000066E2 <hashmap.include.ab3@386> XINCLUDE "/Shared/preprocessor.include.ab3"
000066F6 <hashmap.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00006732 <hashmap.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
00006748 <hashmap.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
0000675C <hashmap.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
00006766 <hashmap.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
0000678A <hashmap.include.ab3@394> XINCLUDE "/Shared/preprocessor.include.ab3"
000067C2 <hashmap.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
000067C8 <hashmap.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
000067D0 <hashmap.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
000067E4 <hashmap.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
000067EE <hashmap.include.ab3@401> XINCLUDE "/Shared/preprocessor.include.ab3"
00006816 <hashmap.include.ab3@402> XINCLUDE "/Shared/preprocessor.include.ab3"
0000683E <hashmap.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
00006850 <hashmap.include.ab3@404> XINCLUDE "/Shared/preprocessor.include.ab3"
0000687C <hashmap.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
000068B0 <hashmap.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
000068DC <hashmap.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
00006928 <hashmap.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
00006938 <hashmap.include.ab3@410> XINCLUDE "/Shared/preprocessor.include.ab3"
0000693E <hashmap.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
00006946 <hashmap.include.ab3@413> XINCLUDE "/Shared/preprocessor.include.ab3"
00006974 <hashmap.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
00006976 <hashmap.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
0000697C <hashmap.include.ab3@419> XINCLUDE "/Shared/preprocessor.include.ab3"
00006986 <hashmap.include.ab3@421> XINCLUDE "/Shared/preprocessor.include.ab3"
000069B0 <hashmap.include.ab3@422> XINCLUDE "/Shared/preprocessor.include.ab3"
000069BA <hashmap.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
000069C0 <hashmap.include.ab3@427> XINCLUDE "/Shared/preprocessor.include.ab3"
000069EA <hashmap.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
000069F0 <hashmap.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A10 <hashmap.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A1A <hashmap.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A28 <hashmap.include.ab3@436> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A38 <hashmap.include.ab3@437> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A42 <hashmap.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A5C <hashmap.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A5C <preprocessor.include.ab3@11> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A76 <preprocessor.include.ab3@31> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A90 <preprocessor.include.ab3@32> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AB2 <preprocessor.include.ab3@33> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AE4 <preprocessor.include.ab3@34> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AE8 <preprocessor.include.ab3@35> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B02 <preprocessor.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B1C <preprocessor.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B26 <preprocessor.include.ab3@41> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B3C <preprocessor.include.ab3@42> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B40 <preprocessor.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B5A <preprocessor.include.ab3@47> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B74 <preprocessor.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B8E <preprocessor.include.ab3@49> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BB2 <preprocessor.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BB8 <preprocessor.include.ab3@51> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BE2 <preprocessor.include.ab3@52> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BFC <preprocessor.include.ab3@53> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C0C <preprocessor.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C16 <preprocessor.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C24 <preprocessor.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C46 <preprocessor.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C7A <preprocessor.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C96 <preprocessor.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CA0 <preprocessor.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CBC <preprocessor.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CCA <preprocessor.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CDE <preprocessor.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D00 <preprocessor.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D22 <preprocessor.include.ab3@67> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D40 <preprocessor.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D6E <preprocessor.include.ab3@69> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D74 <preprocessor.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D84 <preprocessor.include.ab3@72> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D88 <preprocessor.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D9E <preprocessor.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DBE <preprocessor.include.ab3@79> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DC8 <preprocessor.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DF2 <preprocessor.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E08 <preprocessor.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E18 <preprocessor.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E34 <preprocessor.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E50 <preprocessor.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E6C <preprocessor.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E88 <preprocessor.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EA4 <preprocessor.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EC0 <preprocessor.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EDC <preprocessor.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EF8 <preprocessor.include.ab3@92> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F14 <preprocessor.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F30 <preprocessor.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F4C <preprocessor.include.ab3@95> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F68 <preprocessor.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F84 <preprocessor.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FA0 <preprocessor.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FBC <preprocessor.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FD8 <preprocessor.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FF4 <preprocessor.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
00007010 <preprocessor.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
0000702C <preprocessor.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
00007048 <preprocessor.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00007064 <preprocessor.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00007080 <preprocessor.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
0000709C <preprocessor.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
000070B8 <preprocessor.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
000070D4 <preprocessor.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
000070F0 <preprocessor.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
0000710C <preprocessor.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
00007128 <preprocessor.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
00007144 <preprocessor.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
00007160 <preprocessor.include.ab3@114> XINCLUDE "/Shared/preprocessor.include.ab3"
0000717C <preprocessor.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
00007198 <preprocessor.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
000071B4 <preprocessor.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
000071D0 <preprocessor.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
000071EC <preprocessor.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
00007208 <preprocessor.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
00007224 <preprocessor.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
00007240 <preprocessor.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
0000725C <preprocessor.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
00007278 <preprocessor.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
00007294 <preprocessor.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
000072B0 <preprocessor.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
000072CC <preprocessor.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
000072E8 <preprocessor.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00007304 <preprocessor.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
00007320 <preprocessor.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
0000733C <preprocessor.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
00007358 <preprocessor.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
00007374 <preprocessor.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
00007390 <preprocessor.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
000073AC <preprocessor.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
000073C8 <preprocessor.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
000073E4 <preprocessor.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
00007400 <preprocessor.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
0000741C <preprocessor.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
00007438 <preprocessor.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
00007454 <preprocessor.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
00007470 <preprocessor.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
0000748C <preprocessor.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
000074A8 <preprocessor.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
000074C4 <preprocessor.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
000074E0 <preprocessor.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
000074FC <preprocessor.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
00007518 <preprocessor.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
00007534 <preprocessor.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
00007550 <preprocessor.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
0000756C <preprocessor.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00007588 <preprocessor.include.ab3@152> XINCLUDE "/Shared/preprocessor.include.ab3"
000075A4 <preprocessor.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
000075C0 <preprocessor.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
000075DC <preprocessor.include.ab3@155> XINCLUDE "/Shared/preprocessor.include.ab3"
000075F8 <preprocessor.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
00007614 <preprocessor.include.ab3@157> XINCLUDE "/Shared/preprocessor.include.ab3"
00007630 <preprocessor.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
0000764C <preprocessor.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
00007668 <preprocessor.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
00007684 <preprocessor.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
000076A0 <preprocessor.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
000076BC <preprocessor.include.ab3@163> XINCLUDE "/Shared/preprocessor.include.ab3"
000076D8 <preprocessor.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
000076F4 <preprocessor.include.ab3@165> XINCLUDE "/Shared/preprocessor.include.ab3"
00007710 <preprocessor.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
0000772C <preprocessor.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
00007748 <preprocessor.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
00007764 <preprocessor.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
00007780 <preprocessor.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
0000779C <preprocessor.include.ab3@171> XINCLUDE "/Shared/preprocessor.include.ab3"
000077B8 <preprocessor.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
000077D4 <preprocessor.include.ab3@173> XINCLUDE "/Shared/preprocessor.include.ab3"
000077F0 <preprocessor.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
0000780C <preprocessor.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
00007828 <preprocessor.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
00007844 <preprocessor.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
00007860 <preprocessor.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
0000787C <preprocessor.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
00007898 <preprocessor.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
000078B4 <preprocessor.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
000078D0 <preprocessor.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
000078EC <preprocessor.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
00007908 <preprocessor.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
00007924 <preprocessor.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
00007940 <preprocessor.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
0000795C <preprocessor.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
00007978 <preprocessor.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
00007994 <preprocessor.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
000079B0 <preprocessor.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
000079CC <preprocessor.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
000079E8 <preprocessor.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A04 <preprocessor.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A20 <preprocessor.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A3C <preprocessor.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A58 <preprocessor.include.ab3@196> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A74 <preprocessor.include.ab3@197> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A90 <preprocessor.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AAC <preprocessor.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AC8 <preprocessor.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AE4 <preprocessor.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B00 <preprocessor.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B1C <preprocessor.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B38 <preprocessor.include.ab3@204> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B54 <preprocessor.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B70 <preprocessor.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B8C <preprocessor.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BA8 <preprocessor.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BC4 <preprocessor.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BE0 <preprocessor.include.ab3@210> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BFC <preprocessor.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C18 <preprocessor.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C20 <preprocessor.include.ab3@213> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C2A <preprocessor.include.ab3@214> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C34 <preprocessor.include.ab3@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C3A <preprocessor.include.ab3@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C68 <preprocessor.include.ab3@254> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C84 <preprocessor.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CB6 <preprocessor.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CC0 <preprocessor.include.ab3@257> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CE2 <preprocessor.include.ab3@258> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CEC <preprocessor.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CF6 <preprocessor.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D00 <preprocessor.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D1A <preprocessor.include.ab3@263> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D48 <preprocessor.include.ab3@267> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D64 <preprocessor.include.ab3@268> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D72 <preprocessor.include.ab3@269> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DAC <preprocessor.include.ab3@270> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DB4 <preprocessor.include.ab3@272> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DCE <preprocessor.include.ab3@273> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DF4 <preprocessor.include.ab3@280> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E16 <preprocessor.include.ab3@281> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E3A <preprocessor.include.ab3@282> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E40 <preprocessor.include.ab3@283> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E4E <preprocessor.include.ab3@284> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E54 <preprocessor.include.ab3@285> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E5C <preprocessor.include.ab3@286> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E62 <preprocessor.include.ab3@287> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E6A <preprocessor.include.ab3@288> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E7E <preprocessor.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EA4 <preprocessor.include.ab3@291> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ECC <preprocessor.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ED6 <preprocessor.include.ab3@294> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EEA <preprocessor.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EFE <preprocessor.include.ab3@296> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F0E <preprocessor.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F28 <preprocessor.include.ab3@298> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F56 <preprocessor.include.ab3@299> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F6A <preprocessor.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F92 <preprocessor.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F98 <preprocessor.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FA0 <preprocessor.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FA6 <preprocessor.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FCE <preprocessor.include.ab3@306> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FD8 <preprocessor.include.ab3@308> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FE6 <preprocessor.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
00008004 <preprocessor.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
00008012 <preprocessor.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
0000801A <preprocessor.include.ab3@312> XINCLUDE "/Shared/preprocessor.include.ab3"
00008020 <preprocessor.include.ab3@313> XINCLUDE "/Shared/preprocessor.include.ab3"
00008034 <preprocessor.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
0000803E <preprocessor.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
0000804C <preprocessor.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
00008066 <preprocessor.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
0000806C <preprocessor.include.ab3@322> XINCLUDE "/Shared/preprocessor.include.ab3"
00008074 <preprocessor.include.ab3@323> XINCLUDE "/Shared/preprocessor.include.ab3"
0000807A <preprocessor.include.ab3@325> XINCLUDE "/Shared/preprocessor.include.ab3"
0000808E <preprocessor.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
00008098 <preprocessor.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
000080A0 <preprocessor.include.ab3@328> XINCLUDE "/Shared/preprocessor.include.ab3"
000080B4 <preprocessor.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
000080C8 <preprocessor.include.ab3@334> XINCLUDE "/Shared/preprocessor.include.ab3"
000080DC <preprocessor.include.ab3@335> XINCLUDE "/Shared/preprocessor.include.ab3"
000080FA <preprocessor.include.ab3@337> XINCLUDE "/Shared/preprocessor.include.ab3"
00008108 <preprocessor.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
00008118 <preprocessor.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
00008140 <preprocessor.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
00008162 <preprocessor.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
00008176 <preprocessor.include.ab3@344> XINCLUDE "/Shared/preprocessor.include.ab3"
00008194 <preprocessor.include.ab3@346> XINCLUDE "/Shared/preprocessor.include.ab3"
000081A2 <preprocessor.include.ab3@347> XINCLUDE "/Shared/preprocessor.include.ab3"
000081C8 <preprocessor.include.ab3@348> XINCLUDE "/Shared/preprocessor.include.ab3"
000081F0 <preprocessor.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
00008212 <preprocessor.include.ab3@350> XINCLUDE "/Shared/preprocessor.include.ab3"
00008242 <preprocessor.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
00008270 <preprocessor.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
000082A2 <preprocessor.include.ab3@358> XINCLUDE "/Shared/preprocessor.include.ab3"
000082B0 <preprocessor.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
000082B6 <preprocessor.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
000082C6 <preprocessor.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
000082CC <preprocessor.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
000082F2 <preprocessor.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
00008314 <preprocessor.include.ab3@370> XINCLUDE "/Shared/preprocessor.include.ab3"
0000833C <preprocessor.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
0000835C <preprocessor.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
0000837E <preprocessor.include.ab3@373> XINCLUDE "/Shared/preprocessor.include.ab3"
00008384 <preprocessor.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
00008392 <preprocessor.include.ab3@375> XINCLUDE "/Shared/preprocessor.include.ab3"
000083A0 <preprocessor.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
000083A6 <preprocessor.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
000083AE <preprocessor.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
000083CC <preprocessor.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
000083E0 <preprocessor.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
000083F0 <preprocessor.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
00008406 <preprocessor.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
0000841E <preprocessor.include.ab3@385> XINCLUDE "/Shared/preprocessor.include.ab3"
0000843A <preprocessor.include.ab3@386> XINCLUDE "/Shared/preprocessor.include.ab3"
00008444 <preprocessor.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00008460 <preprocessor.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
00008472 <preprocessor.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
000084A0 <preprocessor.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
000084DC <preprocessor.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
000084EC <preprocessor.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
000084F2 <preprocessor.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
000084F8 <preprocessor.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
00008510 <preprocessor.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
00008520 <preprocessor.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
000085A6 <preprocessor.include.ab3@399> XINCLUDE "/Shared/preprocessor.include.ab3"
000085E0 <preprocessor.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
00008616 <preprocessor.include.ab3@401> XINCLUDE "/Shared/preprocessor.include.ab3"
00008626 <preprocessor.include.ab3@402> XINCLUDE "/Shared/preprocessor.include.ab3"
00008634 <preprocessor.include.ab3@404> XINCLUDE "/Shared/preprocessor.include.ab3"
0000863A <preprocessor.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
0000864A <preprocessor.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
00008674 <preprocessor.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
0000867A <preprocessor.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
000086A6 <preprocessor.include.ab3@409> XINCLUDE "/Shared/preprocessor.include.ab3"
000086B6 <preprocessor.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
000086C6 <preprocessor.include.ab3@414> XINCLUDE "/Shared/preprocessor.include.ab3"
000086E4 <preprocessor.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
000086F2 <preprocessor.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
00008728 <preprocessor.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
0000874C <preprocessor.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
00008760 <preprocessor.include.ab3@421> XINCLUDE "/Shared/preprocessor.include.ab3"
00008770 <preprocessor.include.ab3@423> XINCLUDE "/Shared/preprocessor.include.ab3"
0000878E <preprocessor.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
0000879C <preprocessor.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
000087C0 <preprocessor.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
000087E4 <preprocessor.include.ab3@427> XINCLUDE "/Shared/preprocessor.include.ab3"
000087F2 <preprocessor.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
00008800 <preprocessor.include.ab3@432> XINCLUDE "/Shared/preprocessor.include.ab3"
00008820 <preprocessor.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
0000882E <preprocessor.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
00008834 <preprocessor.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
0000883A <preprocessor.include.ab3@438> XINCLUDE "/Shared/preprocessor.include.ab3"
00008848 <preprocessor.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
00008856 <preprocessor.include.ab3@441> XINCLUDE "/Shared/preprocessor.include.ab3"
00008876 <preprocessor.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
00008884 <preprocessor.include.ab3@443> XINCLUDE "/Shared/preprocessor.include.ab3"
0000888A <preprocessor.include.ab3@444> XINCLUDE "/Shared/preprocessor.include.ab3"
000088B4 <preprocessor.include.ab3@447> XINCLUDE "/Shared/preprocessor.include.ab3"
000088C4 <preprocessor.include.ab3@450> XINCLUDE "/Shared/preprocessor.include.ab3"
000088CE <preprocessor.include.ab3@452> XINCLUDE "/Shared/preprocessor.include.ab3"
000088E2 <preprocessor.include.ab3@453> XINCLUDE "/Shared/preprocessor.include.ab3"
00008908 <preprocessor.include.ab3@457> XINCLUDE "/Shared/preprocessor.include.ab3"
0000892A <preprocessor.include.ab3@458> XINCLUDE "/Shared/preprocessor.include.ab3"
00008952 <preprocessor.include.ab3@459> XINCLUDE "/Shared/preprocessor.include.ab3"
00008958 <preprocessor.include.ab3@460> XINCLUDE "/Shared/preprocessor.include.ab3"
00008966 <preprocessor.include.ab3@461> XINCLUDE "/Shared/preprocessor.include.ab3"
0000896C <preprocessor.include.ab3@462> XINCLUDE "/Shared/preprocessor.include.ab3"
00008980 <preprocessor.include.ab3@463> XINCLUDE "/Shared/preprocessor.include.ab3"
00008990 <preprocessor.include.ab3@464> XINCLUDE "/Shared/preprocessor.include.ab3"
000089A6 <preprocessor.include.ab3@466> XINCLUDE "/Shared/preprocessor.include.ab3"
000089BE <preprocessor.include.ab3@468> XINCLUDE "/Shared/preprocessor.include.ab3"
000089DA <preprocessor.include.ab3@469> XINCLUDE "/Shared/preprocessor.include.ab3"
000089E4 <preprocessor.include.ab3@470> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A00 <preprocessor.include.ab3@471> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A2E <preprocessor.include.ab3@472> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A6A <preprocessor.include.ab3@473> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A7A <preprocessor.include.ab3@474> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A88 <preprocessor.include.ab3@476> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A8E <preprocessor.include.ab3@477> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A9E <preprocessor.include.ab3@478> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AC8 <preprocessor.include.ab3@479> XINCLUDE "/Shared/preprocessor.include.ab3"
00008ACE <preprocessor.include.ab3@480> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AFA <preprocessor.include.ab3@481> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B0A <preprocessor.include.ab3@483> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B1A <preprocessor.include.ab3@485> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B38 <preprocessor.include.ab3@486> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B46 <preprocessor.include.ab3@487> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B7C <preprocessor.include.ab3@488> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BA0 <preprocessor.include.ab3@489> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BB4 <preprocessor.include.ab3@492> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BC4 <preprocessor.include.ab3@494> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BE2 <preprocessor.include.ab3@495> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BF0 <preprocessor.include.ab3@496> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C14 <preprocessor.include.ab3@497> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C38 <preprocessor.include.ab3@498> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C3E <preprocessor.include.ab3@502> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C4E <preprocessor.include.ab3@503> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C54 <preprocessor.include.ab3@504> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C76 <preprocessor.include.ab3@508> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C7E <preprocessor.include.ab3@509> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CB4 <preprocessor.include.ab3@510> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CD0 <preprocessor.include.ab3@511> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CD6 <preprocessor.include.ab3@512> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D0C <preprocessor.include.ab3@516> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D28 <preprocessor.include.ab3@517> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D50 <preprocessor.include.ab3@518> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D6E <preprocessor.include.ab3@519> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D8C <preprocessor.include.ab3@520> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DBA <preprocessor.include.ab3@521> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E1C <preprocessor.include.ab3@522> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E36 <preprocessor.include.ab3@523> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E50 <preprocessor.include.ab3@527> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E5A <preprocessor.include.ab3@528> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E98 <preprocessor.include.ab3@529> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E9C <preprocessor.include.ab3@530> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EA6 <preprocessor.include.ab3@532> XINCLUDE "/Shared/preprocessor.include.ab3"
00008ED4 <preprocessor.include.ab3@533> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EF4 <preprocessor.include.ab3@534> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F0C <preprocessor.include.ab3@535> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F6A <preprocessor.include.ab3@536> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F96 <preprocessor.include.ab3@537> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FA8 <preprocessor.include.ab3@538> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FB8 <preprocessor.include.ab3@539> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FD0 <preprocessor.include.ab3@540> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FD6 <preprocessor.include.ab3@542> XINCLUDE "/Shared/preprocessor.include.ab3"
00009010 <preprocessor.include.ab3@543> XINCLUDE "/Shared/preprocessor.include.ab3"
0000901A <preprocessor.include.ab3@545> XINCLUDE "/Shared/preprocessor.include.ab3"
00009020 <preprocessor.include.ab3@546> XINCLUDE "/Shared/preprocessor.include.ab3"
0000902A <preprocessor.include.ab3@547> XINCLUDE "/Shared/preprocessor.include.ab3"
0000903C <preprocessor.include.ab3@548> XINCLUDE "/Shared/preprocessor.include.ab3"
0000903C <AmiBlitz3.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
0000903C <logging.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
0000903C <PE_Tools.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009060 <PE_Tools.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
00009068 <PE_Tools.include.ab3@84> XINCLUDE "PE/logging.include.ab3"
00009096 <PE_Tools.include.ab3@85> XINCLUDE "PE/logging.include.ab3"
000090C4 <PE_Tools.include.ab3@86> XINCLUDE "PE/logging.include.ab3"
00009134 <PE_Tools.include.ab3@87> XINCLUDE "PE/logging.include.ab3"
00009142 <PE_Tools.include.ab3@88> XINCLUDE "PE/logging.include.ab3"
00009192 <PE_Tools.include.ab3@89> XINCLUDE "PE/logging.include.ab3"
00009192 <logging.include.ab3@11> XINCLUDE "PE/logging.include.ab3"
00009192 <file.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009192 <asl.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
000091B6 <asl.include.ab3@94> XINCLUDE "PE/logging.include.ab3"
000091DE <asl.include.ab3@95> XINCLUDE "PE/logging.include.ab3"
00009202 <asl.include.ab3@96> XINCLUDE "PE/logging.include.ab3"
00009230 <asl.include.ab3@295> XINCLUDE "PE/logging.include.ab3"
0000944E <asl.include.ab3@297> XINCLUDE "PE/logging.include.ab3"
0000947C <asl.include.ab3@299> XINCLUDE "PE/logging.include.ab3"
000094A8 <asl.include.ab3@301> XINCLUDE "PE/logging.include.ab3"
000094E4 <asl.include.ab3@302> XINCLUDE "PE/logging.include.ab3"
00009510 <asl.include.ab3@303> XINCLUDE "PE/logging.include.ab3"
0000953C <asl.include.ab3@304> XINCLUDE "PE/logging.include.ab3"
00009568 <asl.include.ab3@305> XINCLUDE "PE/logging.include.ab3"
00009594 <asl.include.ab3@306> XINCLUDE "PE/logging.include.ab3"
000095C0 <asl.include.ab3@307> XINCLUDE "PE/logging.include.ab3"
000095EC <asl.include.ab3@308> XINCLUDE "PE/logging.include.ab3"
00009618 <asl.include.ab3@309> XINCLUDE "PE/logging.include.ab3"
00009644 <asl.include.ab3@310> XINCLUDE "PE/logging.include.ab3"
000096CE <asl.include.ab3@312> XINCLUDE "PE/logging.include.ab3"
00009758 <asl.include.ab3@313> XINCLUDE "PE/logging.include.ab3"
000097F6 <asl.include.ab3@314> XINCLUDE "PE/logging.include.ab3"
00009840 <asl.include.ab3@315> XINCLUDE "PE/logging.include.ab3"
00009880 <asl.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
00009886 <asl.include.ab3@317> XINCLUDE "PE/logging.include.ab3"
000098D0 <asl.include.ab3@320> XINCLUDE "PE/logging.include.ab3"
00009910 <asl.include.ab3@321> XINCLUDE "PE/logging.include.ab3"
0000993A <asl.include.ab3@322> XINCLUDE "PE/logging.include.ab3"
00009940 <asl.include.ab3@323> XINCLUDE "PE/logging.include.ab3"
0000996A <asl.include.ab3@324> XINCLUDE "PE/logging.include.ab3"
00009994 <asl.include.ab3@326> XINCLUDE "PE/logging.include.ab3"
000099BE <asl.include.ab3@328> XINCLUDE "PE/logging.include.ab3"
000099C8 <asl.include.ab3@329> XINCLUDE "PE/logging.include.ab3"
000099E6 <asl.include.ab3@330> XINCLUDE "PE/logging.include.ab3"
00009A08 <asl.include.ab3@331> XINCLUDE "PE/logging.include.ab3"
00009A36 <asl.include.ab3@332> XINCLUDE "PE/logging.include.ab3"
00009A64 <asl.include.ab3@333> XINCLUDE "PE/logging.include.ab3"
00009A92 <asl.include.ab3@334> XINCLUDE "PE/logging.include.ab3"
00009AD8 <asl.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
00009B1E <asl.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
00009B64 <asl.include.ab3@339> XINCLUDE "PE/logging.include.ab3"
00009B9C <asl.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
00009C9A <asl.include.ab3@342> XINCLUDE "PE/logging.include.ab3"
00009CB8 <asl.include.ab3@344> XINCLUDE "PE/logging.include.ab3"
00009CC2 <asl.include.ab3@346> XINCLUDE "PE/logging.include.ab3"
00009CE8 <asl.include.ab3@347> XINCLUDE "PE/logging.include.ab3"
00009CFA <asl.include.ab3@349> XINCLUDE "PE/logging.include.ab3"
00009D28 <asl.include.ab3@350> XINCLUDE "PE/logging.include.ab3"
00009D50 <asl.include.ab3@351> XINCLUDE "PE/logging.include.ab3"
00009D62 <asl.include.ab3@352> XINCLUDE "PE/logging.include.ab3"
00009DB8 <asl.include.ab3@353> XINCLUDE "PE/logging.include.ab3"
00009DEE <asl.include.ab3@354> XINCLUDE "PE/logging.include.ab3"
00009DFE <asl.include.ab3@356> XINCLUDE "PE/logging.include.ab3"
00009E04 <asl.include.ab3@357> XINCLUDE "PE/logging.include.ab3"
00009E16 <asl.include.ab3@358> XINCLUDE "PE/logging.include.ab3"
00009E20 <asl.include.ab3@359> XINCLUDE "PE/logging.include.ab3"
00009E5A <asl.include.ab3@360> XINCLUDE "PE/logging.include.ab3"
00009E60 <asl.include.ab3@361> XINCLUDE "PE/logging.include.ab3"
00009EB8 <asl.include.ab3@362> XINCLUDE "PE/logging.include.ab3"
00009ED6 <asl.include.ab3@364> XINCLUDE "PE/logging.include.ab3"
00009EDC <asl.include.ab3@367> XINCLUDE "PE/logging.include.ab3"
00009EEC <asl.include.ab3@370> XINCLUDE "PE/logging.include.ab3"
00009EFC <asl.include.ab3@371> XINCLUDE "PE/logging.include.ab3"
00009F0C <asl.include.ab3@372> XINCLUDE "PE/logging.include.ab3"
00009F1C <asl.include.ab3@373> XINCLUDE "PE/logging.include.ab3"
00009F2C <asl.include.ab3@375> XINCLUDE "PE/logging.include.ab3"
00009F36 <asl.include.ab3@377> XINCLUDE "PE/logging.include.ab3"
00009F4A <asl.include.ab3@378> XINCLUDE "PE/logging.include.ab3"
00009F60 <asl.include.ab3@394> XINCLUDE "PE/logging.include.ab3"
00009F88 <asl.include.ab3@396> XINCLUDE "PE/logging.include.ab3"
00009F92 <asl.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
00009FA4 <asl.include.ab3@398> XINCLUDE "PE/logging.include.ab3"
00009FDE <asl.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
00009FE8 <asl.include.ab3@400> XINCLUDE "PE/logging.include.ab3"
0000A012 <asl.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
0000A02A <asl.include.ab3@403> XINCLUDE "PE/logging.include.ab3"
0000A07C <asl.include.ab3@439> XINCLUDE "PE/logging.include.ab3"
0000A0AA <asl.include.ab3@441> XINCLUDE "PE/logging.include.ab3"
0000A13C <asl.include.ab3@442> XINCLUDE "PE/logging.include.ab3"
0000A182 <asl.include.ab3@443> XINCLUDE "PE/logging.include.ab3"
0000A214 <asl.include.ab3@444> XINCLUDE "PE/logging.include.ab3"
0000A22E <asl.include.ab3@445> XINCLUDE "PE/logging.include.ab3"
0000A22E <file.include.ab3@57> XINCLUDE "PE/logging.include.ab3"
0000A244 <file.include.ab3@66> XINCLUDE "PE/logging.include.ab3"
0000A25A <file.include.ab3@67> XINCLUDE "PE/logging.include.ab3"
0000A270 <file.include.ab3@68> XINCLUDE "PE/logging.include.ab3"
0000A286 <file.include.ab3@70> XINCLUDE "PE/logging.include.ab3"
0000A292 <file.include.ab3@72> XINCLUDE "PE/logging.include.ab3"
0000A29E <file.include.ab3@73> XINCLUDE "PE/logging.include.ab3"
0000A2AA <file.include.ab3@74> XINCLUDE "PE/logging.include.ab3"
0000A2B6 <file.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
0000A2DE <file.include.ab3@77> XINCLUDE "PE/logging.include.ab3"
0000A306 <file.include.ab3@78> XINCLUDE "PE/logging.include.ab3"
0000A32E <file.include.ab3@79> XINCLUDE "PE/logging.include.ab3"
0000A352 <file.include.ab3@109> XINCLUDE "PE/logging.include.ab3"
0000A376 <file.include.ab3@110> XINCLUDE "PE/logging.include.ab3"
0000A390 <file.include.ab3@156> XINCLUDE "PE/logging.include.ab3"
0000A3A0 <file.include.ab3@157> XINCLUDE "PE/logging.include.ab3"
0000A3A2 <file.include.ab3@158> XINCLUDE "PE/logging.include.ab3"
0000A3A4 <file.include.ab3@159> XINCLUDE "PE/logging.include.ab3"
0000A3A6 <file.include.ab3@160> XINCLUDE "PE/logging.include.ab3"
0000A3A8 <file.include.ab3@161> XINCLUDE "PE/logging.include.ab3"
0000A3AA <file.include.ab3@162> XINCLUDE "PE/logging.include.ab3"
0000A3AE <file.include.ab3@163> XINCLUDE "PE/logging.include.ab3"
0000A3B2 <file.include.ab3@164> XINCLUDE "PE/logging.include.ab3"
0000A3B6 <file.include.ab3@165> XINCLUDE "PE/logging.include.ab3"
0000A3B8 <file.include.ab3@166> XINCLUDE "PE/logging.include.ab3"
0000A3BA <file.include.ab3@167> XINCLUDE "PE/logging.include.ab3"
0000A3BC <file.include.ab3@168> XINCLUDE "PE/logging.include.ab3"
0000A3BE <file.include.ab3@169> XINCLUDE "PE/logging.include.ab3"
0000A3C0 <file.include.ab3@170> XINCLUDE "PE/logging.include.ab3"
0000A3C2 <file.include.ab3@171> XINCLUDE "PE/logging.include.ab3"
0000A3C4 <file.include.ab3@172> XINCLUDE "PE/logging.include.ab3"
0000A3CE <file.include.ab3@173> XINCLUDE "PE/logging.include.ab3"
0000A3D4 <file.include.ab3@174> XINCLUDE "PE/logging.include.ab3"
0000A3EE <file.include.ab3@215> XINCLUDE "PE/logging.include.ab3"
0000A40C <file.include.ab3@217> XINCLUDE "PE/logging.include.ab3"
0000A412 <file.include.ab3@218> XINCLUDE "PE/logging.include.ab3"
0000A42C <file.include.ab3@237> XINCLUDE "PE/logging.include.ab3"
0000A448 <file.include.ab3@239> XINCLUDE "PE/logging.include.ab3"
0000A46E <file.include.ab3@240> XINCLUDE "PE/logging.include.ab3"
0000A48E <file.include.ab3@241> XINCLUDE "PE/logging.include.ab3"
0000A498 <file.include.ab3@242> XINCLUDE "PE/logging.include.ab3"
0000A4C4 <file.include.ab3@243> XINCLUDE "PE/logging.include.ab3"
0000A4E6 <file.include.ab3@244> XINCLUDE "PE/logging.include.ab3"
0000A500 <file.include.ab3@245> XINCLUDE "PE/logging.include.ab3"
0000A506 <file.include.ab3@248> XINCLUDE "PE/logging.include.ab3"
0000A540 <file.include.ab3@249> XINCLUDE "PE/logging.include.ab3"
0000A55E <file.include.ab3@251> XINCLUDE "PE/logging.include.ab3"
0000A564 <file.include.ab3@252> XINCLUDE "PE/logging.include.ab3"
0000A582 <file.include.ab3@271> XINCLUDE "PE/logging.include.ab3"
0000A588 <file.include.ab3@273> XINCLUDE "PE/logging.include.ab3"
0000A5AA <file.include.ab3@274> XINCLUDE "PE/logging.include.ab3"
0000A5CA <file.include.ab3@275> XINCLUDE "PE/logging.include.ab3"
0000A602 <file.include.ab3@276> XINCLUDE "PE/logging.include.ab3"
0000A61E <file.include.ab3@277> XINCLUDE "PE/logging.include.ab3"
0000A624 <file.include.ab3@278> XINCLUDE "PE/logging.include.ab3"
0000A62A <file.include.ab3@279> XINCLUDE "PE/logging.include.ab3"
0000A630 <file.include.ab3@281> XINCLUDE "PE/logging.include.ab3"
0000A636 <file.include.ab3@282> XINCLUDE "PE/logging.include.ab3"
0000A652 <file.include.ab3@283> XINCLUDE "PE/logging.include.ab3"
0000A69E <file.include.ab3@285> XINCLUDE "PE/logging.include.ab3"
0000A6A4 <file.include.ab3@286> XINCLUDE "PE/logging.include.ab3"
0000A6DE <file.include.ab3@287> XINCLUDE "PE/logging.include.ab3"
0000A6EA <file.include.ab3@288> XINCLUDE "PE/logging.include.ab3"
0000A706 <file.include.ab3@289> XINCLUDE "PE/logging.include.ab3"
0000A70C <file.include.ab3@291> XINCLUDE "PE/logging.include.ab3"
0000A746 <file.include.ab3@292> XINCLUDE "PE/logging.include.ab3"
0000A750 <file.include.ab3@296> XINCLUDE "PE/logging.include.ab3"
0000A756 <file.include.ab3@297> XINCLUDE "PE/logging.include.ab3"
0000A774 <file.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
0000A7A2 <file.include.ab3@318> XINCLUDE "PE/logging.include.ab3"
0000A7A8 <file.include.ab3@319> XINCLUDE "PE/logging.include.ab3"
0000A7BE <file.include.ab3@335> XINCLUDE "PE/logging.include.ab3"
0000A7C6 <file.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
0000A822 <file.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
0000A830 <file.include.ab3@339> XINCLUDE "PE/logging.include.ab3"
0000A836 <file.include.ab3@340> XINCLUDE "PE/logging.include.ab3"
0000A868 <file.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
0000A872 <file.include.ab3@342> XINCLUDE "PE/logging.include.ab3"
0000A878 <file.include.ab3@343> XINCLUDE "PE/logging.include.ab3"
0000A892 <file.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
0000A8A4 <file.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
0000A902 <file.include.ab3@400> XINCLUDE "PE/logging.include.ab3"
0000A93C <file.include.ab3@401> XINCLUDE "PE/logging.include.ab3"
0000A976 <file.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
0000A994 <file.include.ab3@403> XINCLUDE "PE/logging.include.ab3"
0000A9B2 <file.include.ab3@404> XINCLUDE "PE/logging.include.ab3"
0000A9C8 <file.include.ab3@405> XINCLUDE "PE/logging.include.ab3"
0000A9E4 <file.include.ab3@406> XINCLUDE "PE/logging.include.ab3"
0000A9FE <file.include.ab3@407> XINCLUDE "PE/logging.include.ab3"
0000AA7C <file.include.ab3@408> XINCLUDE "PE/logging.include.ab3"
0000AA8E <file.include.ab3@410> XINCLUDE "PE/logging.include.ab3"
0000AAA4 <file.include.ab3@422> XINCLUDE "PE/logging.include.ab3"
0000AACE <file.include.ab3@424> XINCLUDE "PE/logging.include.ab3"
0000AAD8 <file.include.ab3@425> XINCLUDE "PE/logging.include.ab3"
0000AAE8 <file.include.ab3@426> XINCLUDE "PE/logging.include.ab3"
0000AAEC <file.include.ab3@427> XINCLUDE "PE/logging.include.ab3"
0000AB1A <file.include.ab3@428> XINCLUDE "PE/logging.include.ab3"
0000AB34 <file.include.ab3@447> XINCLUDE "PE/logging.include.ab3"
0000AB46 <file.include.ab3@449> XINCLUDE "PE/logging.include.ab3"
0000AB66 <file.include.ab3@450> XINCLUDE "PE/logging.include.ab3"
0000AB7C <file.include.ab3@451> XINCLUDE "PE/logging.include.ab3"
0000ABB4 <file.include.ab3@452> XINCLUDE "PE/logging.include.ab3"
0000ABDE <file.include.ab3@453> XINCLUDE "PE/logging.include.ab3"
0000AC08 <file.include.ab3@456> XINCLUDE "PE/logging.include.ab3"
0000AC20 <file.include.ab3@457> XINCLUDE "PE/logging.include.ab3"
0000AC36 <file.include.ab3@525> XINCLUDE "PE/logging.include.ab3"
0000AC7E <file.include.ab3@527> XINCLUDE "PE/logging.include.ab3"
0000AC9E <file.include.ab3@528> XINCLUDE "PE/logging.include.ab3"
0000ACA6 <file.include.ab3@529> XINCLUDE "PE/logging.include.ab3"
0000ACE4 <file.include.ab3@568> XINCLUDE "PE/logging.include.ab3"
0000ACF0 <file.include.ab3@570> XINCLUDE "PE/logging.include.ab3"
0000ACFA <file.include.ab3@571> XINCLUDE "PE/logging.include.ab3"
0000AD0C <file.include.ab3@572> XINCLUDE "PE/logging.include.ab3"
0000AD12 <file.include.ab3@573> XINCLUDE "PE/logging.include.ab3"
0000AD20 <file.include.ab3@574> XINCLUDE "PE/logging.include.ab3"
0000AD48 <file.include.ab3@575> XINCLUDE "PE/logging.include.ab3"
0000AD5C <file.include.ab3@576> XINCLUDE "PE/logging.include.ab3"
0000AD84 <file.include.ab3@577> XINCLUDE "PE/logging.include.ab3"
0000AD98 <file.include.ab3@578> XINCLUDE "PE/logging.include.ab3"
0000ADC0 <file.include.ab3@579> XINCLUDE "PE/logging.include.ab3"
0000ADD4 <file.include.ab3@580> XINCLUDE "PE/logging.include.ab3"
0000ADFC <file.include.ab3@581> XINCLUDE "PE/logging.include.ab3"
0000ADFE <file.include.ab3@582> XINCLUDE "PE/logging.include.ab3"
0000AE22 <file.include.ab3@584> XINCLUDE "PE/logging.include.ab3"
0000AE5A <file.include.ab3@586> XINCLUDE "PE/logging.include.ab3"
0000AEE4 <file.include.ab3@587> XINCLUDE "PE/logging.include.ab3"
0000AF0C <file.include.ab3@588> XINCLUDE "PE/logging.include.ab3"
0000AF3C <file.include.ab3@589> XINCLUDE "PE/logging.include.ab3"
0000AF74 <file.include.ab3@593> XINCLUDE "PE/logging.include.ab3"
0000AFCC <file.include.ab3@594> XINCLUDE "PE/logging.include.ab3"
0000B024 <file.include.ab3@595> XINCLUDE "PE/logging.include.ab3"
0000B0A4 <file.include.ab3@597> XINCLUDE "PE/logging.include.ab3"
0000B0D8 <file.include.ab3@598> XINCLUDE "PE/logging.include.ab3"
0000B10C <file.include.ab3@599> XINCLUDE "PE/logging.include.ab3"
0000B112 <file.include.ab3@600> XINCLUDE "PE/logging.include.ab3"
0000B120 <file.include.ab3@601> XINCLUDE "PE/logging.include.ab3"
0000B154 <file.include.ab3@602> XINCLUDE "PE/logging.include.ab3"
0000B17C <file.include.ab3@603> XINCLUDE "PE/logging.include.ab3"
0000B234 <file.include.ab3@604> XINCLUDE "PE/logging.include.ab3"
0000B2B4 <file.include.ab3@605> XINCLUDE "PE/logging.include.ab3"
0000B2E8 <file.include.ab3@606> XINCLUDE "PE/logging.include.ab3"
0000B308 <file.include.ab3@608> XINCLUDE "PE/logging.include.ab3"
0000B30E <file.include.ab3@609> XINCLUDE "PE/logging.include.ab3"
0000B314 <file.include.ab3@610> XINCLUDE "PE/logging.include.ab3"
0000B3E4 <file.include.ab3@611> XINCLUDE "PE/logging.include.ab3"
0000B3F8 <file.include.ab3@614> XINCLUDE "PE/logging.include.ab3"
0000B4B0 <file.include.ab3@615> XINCLUDE "PE/logging.include.ab3"
0000B530 <file.include.ab3@616> XINCLUDE "PE/logging.include.ab3"
0000B620 <file.include.ab3@617> XINCLUDE "PE/logging.include.ab3"
0000B62A <file.include.ab3@618> XINCLUDE "PE/logging.include.ab3"
0000B65E <file.include.ab3@619> XINCLUDE "PE/logging.include.ab3"
0000B67E <file.include.ab3@620> XINCLUDE "PE/logging.include.ab3"
0000B684 <file.include.ab3@621> XINCLUDE "PE/logging.include.ab3"
0000B68A <file.include.ab3@622> XINCLUDE "PE/logging.include.ab3"
0000B75A <file.include.ab3@623> XINCLUDE "PE/logging.include.ab3"
0000B76E <file.include.ab3@627> XINCLUDE "PE/logging.include.ab3"
0000B7A2 <file.include.ab3@628> XINCLUDE "PE/logging.include.ab3"
0000B7CA <file.include.ab3@629> XINCLUDE "PE/logging.include.ab3"
0000B882 <file.include.ab3@630> XINCLUDE "PE/logging.include.ab3"
0000B902 <file.include.ab3@631> XINCLUDE "PE/logging.include.ab3"
0000B936 <file.include.ab3@632> XINCLUDE "PE/logging.include.ab3"
0000B956 <file.include.ab3@635> XINCLUDE "PE/logging.include.ab3"
0000B95C <file.include.ab3@636> XINCLUDE "PE/logging.include.ab3"
0000B962 <file.include.ab3@637> XINCLUDE "PE/logging.include.ab3"
0000BA32 <file.include.ab3@638> XINCLUDE "PE/logging.include.ab3"
0000BA46 <file.include.ab3@641> XINCLUDE "PE/logging.include.ab3"
0000BAFE <file.include.ab3@642> XINCLUDE "PE/logging.include.ab3"
0000BB7E <file.include.ab3@643> XINCLUDE "PE/logging.include.ab3"
0000BBB2 <file.include.ab3@644> XINCLUDE "PE/logging.include.ab3"
0000BBD2 <file.include.ab3@645> XINCLUDE "PE/logging.include.ab3"
0000BBD8 <file.include.ab3@646> XINCLUDE "PE/logging.include.ab3"
0000BBDE <file.include.ab3@647> XINCLUDE "PE/logging.include.ab3"
0000BCAE <file.include.ab3@648> XINCLUDE "PE/logging.include.ab3"
0000BCB4 <file.include.ab3@651> XINCLUDE "PE/logging.include.ab3"
0000BCEE <file.include.ab3@652> XINCLUDE "PE/logging.include.ab3"
0000BCF0 <file.include.ab3@653> XINCLUDE "PE/logging.include.ab3"
0000BCF6 <file.include.ab3@655> XINCLUDE "PE/logging.include.ab3"
0000BD8E <file.include.ab3@656> XINCLUDE "PE/logging.include.ab3"
0000BDA0 <file.include.ab3@659> XINCLUDE "PE/logging.include.ab3"
0000BDB6 <file.include.ab3@660> XINCLUDE "PE/logging.include.ab3"
0000BE20 <file.include.ab3@661> XINCLUDE "PE/logging.include.ab3"
0000BE8A <file.include.ab3@662> XINCLUDE "PE/logging.include.ab3"
0000BEA4 <file.include.ab3@663> XINCLUDE "PE/logging.include.ab3"
0000BEC0 <file.include.ab3@664> XINCLUDE "PE/logging.include.ab3"
0000BEDE <file.include.ab3@665> XINCLUDE "PE/logging.include.ab3"
0000BEF8 <file.include.ab3@666> XINCLUDE "PE/logging.include.ab3"
0000BF02 <file.include.ab3@668> XINCLUDE "PE/logging.include.ab3"
0000BF1E <file.include.ab3@669> XINCLUDE "PE/logging.include.ab3"
0000BF40 <file.include.ab3@805> XINCLUDE "PE/logging.include.ab3"
0000BF46 <file.include.ab3@807> XINCLUDE "PE/logging.include.ab3"
0000BF6C <file.include.ab3@808> XINCLUDE "PE/logging.include.ab3"
0000BF88 <file.include.ab3@809> XINCLUDE "PE/logging.include.ab3"
0000BF9A <file.include.ab3@810> XINCLUDE "PE/logging.include.ab3"
0000BFF8 <file.include.ab3@811> XINCLUDE "PE/logging.include.ab3"
0000C030 <file.include.ab3@812> XINCLUDE "PE/logging.include.ab3"
0000C036 <file.include.ab3@813> XINCLUDE "PE/logging.include.ab3"
0000C07E <file.include.ab3@814> XINCLUDE "PE/logging.include.ab3"
0000C098 <file.include.ab3@815> XINCLUDE "PE/logging.include.ab3"
0000C0A6 <file.include.ab3@818> XINCLUDE "PE/logging.include.ab3"
0000C0AC <file.include.ab3@819> XINCLUDE "PE/logging.include.ab3"
0000C0B2 <file.include.ab3@820> XINCLUDE "PE/logging.include.ab3"
0000C0C4 <file.include.ab3@821> XINCLUDE "PE/logging.include.ab3"
0000C1B0 <file.include.ab3@822> XINCLUDE "PE/logging.include.ab3"
0000C1B6 <file.include.ab3@823> XINCLUDE "PE/logging.include.ab3"
0000C1FC <file.include.ab3@824> XINCLUDE "PE/logging.include.ab3"
0000C208 <file.include.ab3@825> XINCLUDE "PE/logging.include.ab3"
0000C26E <file.include.ab3@826> XINCLUDE "PE/logging.include.ab3"
0000C2B4 <file.include.ab3@827> XINCLUDE "PE/logging.include.ab3"
0000C2FC <file.include.ab3@830> XINCLUDE "PE/logging.include.ab3"
0000C364 <file.include.ab3@831> XINCLUDE "PE/logging.include.ab3"
0000C36A <file.include.ab3@832> XINCLUDE "PE/logging.include.ab3"
0000C3A4 <file.include.ab3@833> XINCLUDE "PE/logging.include.ab3"
0000C3AA <file.include.ab3@835> XINCLUDE "PE/logging.include.ab3"
0000C40C <file.include.ab3@836> XINCLUDE "PE/logging.include.ab3"
0000C416 <file.include.ab3@838> XINCLUDE "PE/logging.include.ab3"
0000C42A <file.include.ab3@839> XINCLUDE "PE/logging.include.ab3"
0000C444 <file.include.ab3@841> XINCLUDE "PE/logging.include.ab3"
0000C44A <file.include.ab3@843> XINCLUDE "PE/logging.include.ab3"
0000C470 <file.include.ab3@844> XINCLUDE "PE/logging.include.ab3"
0000C48C <file.include.ab3@845> XINCLUDE "PE/logging.include.ab3"
0000C4EA <file.include.ab3@846> XINCLUDE "PE/logging.include.ab3"
0000C4EE <file.include.ab3@849> XINCLUDE "PE/logging.include.ab3"
0000C510 <file.include.ab3@867> XINCLUDE "PE/logging.include.ab3"
0000C516 <file.include.ab3@869> XINCLUDE "PE/logging.include.ab3"
0000C532 <file.include.ab3@870> XINCLUDE "PE/logging.include.ab3"
0000C552 <file.include.ab3@871> XINCLUDE "PE/logging.include.ab3"
0000C590 <file.include.ab3@872> XINCLUDE "PE/logging.include.ab3"
0000C5DE <file.include.ab3@873> XINCLUDE "PE/logging.include.ab3"
0000C614 <file.include.ab3@874> XINCLUDE "PE/logging.include.ab3"
0000C61A <file.include.ab3@875> XINCLUDE "PE/logging.include.ab3"
0000C620 <file.include.ab3@876> XINCLUDE "PE/logging.include.ab3"
0000C650 <file.include.ab3@877> XINCLUDE "PE/logging.include.ab3"
0000C656 <file.include.ab3@878> XINCLUDE "PE/logging.include.ab3"
0000C65C <file.include.ab3@880> XINCLUDE "PE/logging.include.ab3"
0000C66E <file.include.ab3@881> XINCLUDE "PE/logging.include.ab3"
0000C6CC <file.include.ab3@882> XINCLUDE "PE/logging.include.ab3"
0000C704 <file.include.ab3@883> XINCLUDE "PE/logging.include.ab3"
0000C70A <file.include.ab3@884> XINCLUDE "PE/logging.include.ab3"
0000C752 <file.include.ab3@885> XINCLUDE "PE/logging.include.ab3"
0000C76C <file.include.ab3@886> XINCLUDE "PE/logging.include.ab3"
0000C77A <file.include.ab3@888> XINCLUDE "PE/logging.include.ab3"
0000C780 <file.include.ab3@889> XINCLUDE "PE/logging.include.ab3"
0000C786 <file.include.ab3@890> XINCLUDE "PE/logging.include.ab3"
0000C798 <file.include.ab3@891> XINCLUDE "PE/logging.include.ab3"
0000C79E <file.include.ab3@892> XINCLUDE "PE/logging.include.ab3"
0000C7A4 <file.include.ab3@893> XINCLUDE "PE/logging.include.ab3"
0000C802 <file.include.ab3@894> XINCLUDE "PE/logging.include.ab3"
0000C84A <file.include.ab3@897> XINCLUDE "PE/logging.include.ab3"
0000C854 <file.include.ab3@900> XINCLUDE "PE/logging.include.ab3"
0000C85A <file.include.ab3@901> XINCLUDE "PE/logging.include.ab3"
0000C874 <file.include.ab3@955> XINCLUDE "PE/logging.include.ab3"
0000C87A <file.include.ab3@957> XINCLUDE "PE/logging.include.ab3"
0000C8C2 <file.include.ab3@958> XINCLUDE "PE/logging.include.ab3"
0000C900 <file.include.ab3@959> XINCLUDE "PE/logging.include.ab3"
0000C90A <file.include.ab3@960> XINCLUDE "PE/logging.include.ab3"
0000C910 <file.include.ab3@961> XINCLUDE "PE/logging.include.ab3"
0000C936 <file.include.ab3@1108> XINCLUDE "PE/logging.include.ab3"
0000C93C <file.include.ab3@1110> XINCLUDE "PE/logging.include.ab3"
0000C962 <file.include.ab3@1111> XINCLUDE "PE/logging.include.ab3"
0000C9C2 <file.include.ab3@1112> XINCLUDE "PE/logging.include.ab3"
0000C9DC <file.include.ab3@1113> XINCLUDE "PE/logging.include.ab3"
0000C9E6 <file.include.ab3@1114> XINCLUDE "PE/logging.include.ab3"
0000CA00 <file.include.ab3@1115> XINCLUDE "PE/logging.include.ab3"
0000CA0A <file.include.ab3@1116> XINCLUDE "PE/logging.include.ab3"
0000CA22 <file.include.ab3@1117> XINCLUDE "PE/logging.include.ab3"
0000CA52 <file.include.ab3@1118> XINCLUDE "PE/logging.include.ab3"
0000CA6E <file.include.ab3@1119> XINCLUDE "PE/logging.include.ab3"
0000CA7C <file.include.ab3@1120> XINCLUDE "PE/logging.include.ab3"
0000CA82 <file.include.ab3@1123> XINCLUDE "PE/logging.include.ab3"
0000CABC <file.include.ab3@1124> XINCLUDE "PE/logging.include.ab3"
0000CAC6 <file.include.ab3@1126> XINCLUDE "PE/logging.include.ab3"
0000CACC <file.include.ab3@1127> XINCLUDE "PE/logging.include.ab3"
0000CAEA <file.include.ab3@1148> XINCLUDE "PE/logging.include.ab3"
0000CAF0 <file.include.ab3@1150> XINCLUDE "PE/logging.include.ab3"
0000CB02 <file.include.ab3@1151> XINCLUDE "PE/logging.include.ab3"
0000CB10 <file.include.ab3@1152> XINCLUDE "PE/logging.include.ab3"
0000CB2E <file.include.ab3@1153> XINCLUDE "PE/logging.include.ab3"
0000CB64 <file.include.ab3@1154> XINCLUDE "PE/logging.include.ab3"
0000CB76 <file.include.ab3@1155> XINCLUDE "PE/logging.include.ab3"
0000CBC0 <file.include.ab3@1156> XINCLUDE "PE/logging.include.ab3"
0000CCAA <file.include.ab3@1157> XINCLUDE "PE/logging.include.ab3"
0000CCC8 <file.include.ab3@1158> XINCLUDE "PE/logging.include.ab3"
0000CCEE <file.include.ab3@1160> XINCLUDE "PE/logging.include.ab3"
0000CD0A <file.include.ab3@1161> XINCLUDE "PE/logging.include.ab3"
0000CD36 <file.include.ab3@1162> XINCLUDE "PE/logging.include.ab3"
0000CD40 <file.include.ab3@1163> XINCLUDE "PE/logging.include.ab3"
0000CD6E <file.include.ab3@1164> XINCLUDE "PE/logging.include.ab3"
0000CD88 <file.include.ab3@1165> XINCLUDE "PE/logging.include.ab3"
0000CDA4 <file.include.ab3@1166> XINCLUDE "PE/logging.include.ab3"
0000CDAA <file.include.ab3@1167> XINCLUDE "PE/logging.include.ab3"
0000CDE4 <file.include.ab3@1168> XINCLUDE "PE/logging.include.ab3"
0000CDEA <file.include.ab3@1170> XINCLUDE "PE/logging.include.ab3"
0000CDF0 <file.include.ab3@1171> XINCLUDE "PE/logging.include.ab3"
0000CDF6 <file.include.ab3@1173> XINCLUDE "PE/logging.include.ab3"
0000CE96 <file.include.ab3@1174> XINCLUDE "PE/logging.include.ab3"
0000CE9C <file.include.ab3@1176> XINCLUDE "PE/logging.include.ab3"
0000CF3E <file.include.ab3@1177> XINCLUDE "PE/logging.include.ab3"
0000CF44 <file.include.ab3@1179> XINCLUDE "PE/logging.include.ab3"
0000CF7E <file.include.ab3@1180> XINCLUDE "PE/logging.include.ab3"
0000CF88 <file.include.ab3@1182> XINCLUDE "PE/logging.include.ab3"
0000CF8E <file.include.ab3@1183> XINCLUDE "PE/logging.include.ab3"
0000CFA8 <file.include.ab3@1245> XINCLUDE "PE/logging.include.ab3"
0000CFC6 <file.include.ab3@1247> XINCLUDE "PE/logging.include.ab3"
0000CFCC <file.include.ab3@1248> XINCLUDE "PE/logging.include.ab3"
0000CFE6 <file.include.ab3@1398> XINCLUDE "PE/logging.include.ab3"
0000D006 <file.include.ab3@1400> XINCLUDE "PE/logging.include.ab3"
0000D0BA <file.include.ab3@1401> XINCLUDE "PE/logging.include.ab3"
0000D0C0 <file.include.ab3@1402> XINCLUDE "PE/logging.include.ab3"
0000D0C6 <file.include.ab3@1403> XINCLUDE "PE/logging.include.ab3"
0000D0F0 <file.include.ab3@1404> XINCLUDE "PE/logging.include.ab3"
0000D0FC <file.include.ab3@1406> XINCLUDE "PE/logging.include.ab3"
0000D102 <file.include.ab3@1407> XINCLUDE "PE/logging.include.ab3"
0000D11C <file.include.ab3@1593> XINCLUDE "PE/logging.include.ab3"
0000D124 <file.include.ab3@1594> XINCLUDE "PE/logging.include.ab3"
0000D12C <file.include.ab3@1595> XINCLUDE "PE/logging.include.ab3"
0000D142 <file.include.ab3@1596> XINCLUDE "PE/logging.include.ab3"
0000D15A <file.include.ab3@1597> XINCLUDE "PE/logging.include.ab3"
0000D16C <file.include.ab3@1598> XINCLUDE "PE/logging.include.ab3"
0000D178 <file.include.ab3@1599> XINCLUDE "PE/logging.include.ab3"
0000D17E <file.include.ab3@1600> XINCLUDE "PE/logging.include.ab3"
0000D186 <file.include.ab3@1601> XINCLUDE "PE/logging.include.ab3"
0000D1BE <file.include.ab3@1602> XINCLUDE "PE/logging.include.ab3"
0000D1D0 <file.include.ab3@1603> XINCLUDE "PE/logging.include.ab3"
0000D1F4 <file.include.ab3@1604> XINCLUDE "PE/logging.include.ab3"
0000D206 <file.include.ab3@1605> XINCLUDE "PE/logging.include.ab3"
0000D212 <file.include.ab3@1606> XINCLUDE "PE/logging.include.ab3"
0000D218 <file.include.ab3@1607> XINCLUDE "PE/logging.include.ab3"
0000D228 <file.include.ab3@1608> XINCLUDE "PE/logging.include.ab3"
0000D246 <file.include.ab3@1613> XINCLUDE "PE/logging.include.ab3"
0000D258 <file.include.ab3@1616> XINCLUDE "PE/logging.include.ab3"
0000D2A4 <file.include.ab3@1617> XINCLUDE "PE/logging.include.ab3"
0000D2AA <file.include.ab3@1619> XINCLUDE "PE/logging.include.ab3"
0000D2D4 <file.include.ab3@1621> XINCLUDE "PE/logging.include.ab3"
0000D2EC <file.include.ab3@1622> XINCLUDE "PE/logging.include.ab3"
0000D31A <file.include.ab3@1706> XINCLUDE "PE/logging.include.ab3"
0000D32E <file.include.ab3@1707> XINCLUDE "PE/logging.include.ab3"
0000D344 <file.include.ab3@1708> XINCLUDE "PE/logging.include.ab3"
0000D364 <file.include.ab3@1709> XINCLUDE "PE/logging.include.ab3"
0000D37A <file.include.ab3@1710> XINCLUDE "PE/logging.include.ab3"
0000D384 <file.include.ab3@1711> XINCLUDE "PE/logging.include.ab3"
0000D39E <file.include.ab3@1712> XINCLUDE "PE/logging.include.ab3"
0000D3C0 <file.include.ab3@1787> XINCLUDE "PE/logging.include.ab3"
0000D3D8 <file.include.ab3@1789> XINCLUDE "PE/logging.include.ab3"
0000D3FA <file.include.ab3@1790> XINCLUDE "PE/logging.include.ab3"
0000D400 <file.include.ab3@1791> XINCLUDE "PE/logging.include.ab3"
0000D432 <file.include.ab3@1811> XINCLUDE "PE/logging.include.ab3"
0000D446 <file.include.ab3@1813> XINCLUDE "PE/logging.include.ab3"
0000D45E <file.include.ab3@1814> XINCLUDE "PE/logging.include.ab3"
0000D476 <file.include.ab3@1815> XINCLUDE "PE/logging.include.ab3"
0000D496 <file.include.ab3@1816> XINCLUDE "PE/logging.include.ab3"
0000D4C6 <file.include.ab3@1817> XINCLUDE "PE/logging.include.ab3"
0000D4F6 <file.include.ab3@1818> XINCLUDE "PE/logging.include.ab3"
0000D508 <file.include.ab3@1819> XINCLUDE "PE/logging.include.ab3"
0000D510 <file.include.ab3@1820> XINCLUDE "PE/logging.include.ab3"
0000D53A <file.include.ab3@1821> XINCLUDE "PE/logging.include.ab3"
0000D544 <file.include.ab3@1823> XINCLUDE "PE/logging.include.ab3"
0000D55E <file.include.ab3@1824> XINCLUDE "PE/logging.include.ab3"
0000D578 <file.include.ab3@1841> XINCLUDE "PE/logging.include.ab3"
0000D596 <file.include.ab3@1843> XINCLUDE "PE/logging.include.ab3"
0000D5B6 <file.include.ab3@1844> XINCLUDE "PE/logging.include.ab3"
0000D600 <file.include.ab3@1845> XINCLUDE "PE/logging.include.ab3"
0000D61A <file.include.ab3@1846> XINCLUDE "PE/logging.include.ab3"
0000D62C <file.include.ab3@1847> XINCLUDE "PE/logging.include.ab3"
0000D662 <file.include.ab3@1848> XINCLUDE "PE/logging.include.ab3"
0000D674 <file.include.ab3@1849> XINCLUDE "PE/logging.include.ab3"
0000D67C <file.include.ab3@1850> XINCLUDE "PE/logging.include.ab3"
0000D6A4 <file.include.ab3@1851> XINCLUDE "PE/logging.include.ab3"
0000D6AA <file.include.ab3@1853> XINCLUDE "PE/logging.include.ab3"
0000D6D2 <file.include.ab3@1854> XINCLUDE "PE/logging.include.ab3"
0000D6E2 <file.include.ab3@1856> XINCLUDE "PE/logging.include.ab3"
0000D6F6 <file.include.ab3@1857> XINCLUDE "PE/logging.include.ab3"
0000D70C <file.include.ab3@1870> XINCLUDE "PE/logging.include.ab3"
0000D71C <file.include.ab3@1872> XINCLUDE "PE/logging.include.ab3"
0000D720 <file.include.ab3@1873> XINCLUDE "PE/logging.include.ab3"
0000D736 <file.include.ab3@1894> XINCLUDE "PE/logging.include.ab3"
0000D760 <file.include.ab3@1896> XINCLUDE "PE/logging.include.ab3"
0000D768 <file.include.ab3@1897> XINCLUDE "PE/logging.include.ab3"
0000D768 <logging.include.ab3@13> XINCLUDE "PE/logging.include.ab3"
0000D806 <logging.include.ab3@35> XINCLUDE "PE/logging.include.ab3"
0000D80C <logging.include.ab3@36> XINCLUDE "PE/logging.include.ab3"
0000D812 <logging.include.ab3@37> XINCLUDE "PE/logging.include.ab3"
0000D818 <logging.include.ab3@38> XINCLUDE "PE/logging.include.ab3"
0000D852 <logging.include.ab3@129> XINCLUDE "PE/logging.include.ab3"
0000D884 <logging.include.ab3@131> XINCLUDE "PE/logging.include.ab3"
0000D892 <logging.include.ab3@132> XINCLUDE "PE/logging.include.ab3"
0000D8C2 <logging.include.ab3@133> XINCLUDE "PE/logging.include.ab3"
0000DC32 <logging.include.ab3@134> XINCLUDE "PE/logging.include.ab3"
0000DC40 <logging.include.ab3@135> XINCLUDE "PE/logging.include.ab3"
0000DC46 <logging.include.ab3@136> XINCLUDE "PE/logging.include.ab3"
0000DED8 <logging.include.ab3@137> XINCLUDE "PE/logging.include.ab3"
0000DEF2 <logging.include.ab3@139> XINCLUDE "PE/logging.include.ab3"
0000DF2C <logging.include.ab3@142> XINCLUDE "PE/logging.include.ab3"
0000DF7E <logging.include.ab3@143> XINCLUDE "PE/logging.include.ab3"
0000DF8C <logging.include.ab3@144> XINCLUDE "PE/logging.include.ab3"
0000DFE2 <logging.include.ab3@145> XINCLUDE "PE/logging.include.ab3"
0000DFE8 <logging.include.ab3@146> XINCLUDE "PE/logging.include.ab3"
0000E062 <logging.include.ab3@147> XINCLUDE "PE/logging.include.ab3"
0000E0D6 <logging.include.ab3@148> XINCLUDE "PE/logging.include.ab3"
0000E0F0 <logging.include.ab3@150> XINCLUDE "PE/logging.include.ab3"
0000E0F0 <AmiBlitz3.ab3@89> XINCLUDE "PE/logging.include.ab3"
0000E0F0 <translation.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0F0 <phrasebook.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0F0 <prefixtree.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0F0 <dynamicarray.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E118 <dynamicarray.include.ab3@42> XINCLUDE "translation.include.ab3"
0000E132 <dynamicarray.include.ab3@55> XINCLUDE "translation.include.ab3"
0000E13C <dynamicarray.include.ab3@56> XINCLUDE "translation.include.ab3"
0000E14E <dynamicarray.include.ab3@57> XINCLUDE "translation.include.ab3"
0000E172 <dynamicarray.include.ab3@58> XINCLUDE "translation.include.ab3"
0000E180 <dynamicarray.include.ab3@60> XINCLUDE "translation.include.ab3"
0000E18C <dynamicarray.include.ab3@61> XINCLUDE "translation.include.ab3"
0000E190 <dynamicarray.include.ab3@63> XINCLUDE "translation.include.ab3"
0000E1AE <dynamicarray.include.ab3@99> XINCLUDE "translation.include.ab3"
0000E1C8 <dynamicarray.include.ab3@101> XINCLUDE "translation.include.ab3"
0000E1E8 <dynamicarray.include.ab3@102> XINCLUDE "translation.include.ab3"
0000E1F2 <dynamicarray.include.ab3@103> XINCLUDE "translation.include.ab3"
0000E200 <dynamicarray.include.ab3@104> XINCLUDE "translation.include.ab3"
0000E20C <dynamicarray.include.ab3@105> XINCLUDE "translation.include.ab3"
0000E21A <dynamicarray.include.ab3@106> XINCLUDE "translation.include.ab3"
0000E226 <dynamicarray.include.ab3@107> XINCLUDE "translation.include.ab3"
0000E232 <dynamicarray.include.ab3@108> XINCLUDE "translation.include.ab3"
0000E244 <dynamicarray.include.ab3@109> XINCLUDE "translation.include.ab3"
0000E254 <dynamicarray.include.ab3@110> XINCLUDE "translation.include.ab3"
0000E25E <dynamicarray.include.ab3@113> XINCLUDE "translation.include.ab3"
0000E264 <dynamicarray.include.ab3@114> XINCLUDE "translation.include.ab3"
0000E27E <dynamicarray.include.ab3@425> XINCLUDE "translation.include.ab3"
0000E288 <dynamicarray.include.ab3@427> XINCLUDE "translation.include.ab3"
0000E292 <dynamicarray.include.ab3@428> XINCLUDE "translation.include.ab3"
0000E2A2 <dynamicarray.include.ab3@429> XINCLUDE "translation.include.ab3"
0000E2AC <dynamicarray.include.ab3@430> XINCLUDE "translation.include.ab3"
0000E2BE <dynamicarray.include.ab3@431> XINCLUDE "translation.include.ab3"
0000E2D4 <dynamicarray.include.ab3@432> XINCLUDE "translation.include.ab3"
0000E2DE <dynamicarray.include.ab3@433> XINCLUDE "translation.include.ab3"
0000E2E4 <dynamicarray.include.ab3@435> XINCLUDE "translation.include.ab3"
0000E2E8 <dynamicarray.include.ab3@437> XINCLUDE "translation.include.ab3"
0000E2FE <dynamicarray.include.ab3@531> XINCLUDE "translation.include.ab3"
0000E304 <dynamicarray.include.ab3@533> XINCLUDE "translation.include.ab3"
0000E30E <dynamicarray.include.ab3@535> XINCLUDE "translation.include.ab3"
0000E344 <dynamicarray.include.ab3@536> XINCLUDE "translation.include.ab3"
0000E34E <dynamicarray.include.ab3@537> XINCLUDE "translation.include.ab3"
0000E352 <dynamicarray.include.ab3@538> XINCLUDE "translation.include.ab3"
0000E380 <dynamicarray.include.ab3@539> XINCLUDE "translation.include.ab3"
0000E380 <prefixtree.include.ab3@156> XINCLUDE "translation.include.ab3"
0000E39A <prefixtree.include.ab3@221> XINCLUDE "translation.include.ab3"
0000E3A4 <prefixtree.include.ab3@223> XINCLUDE "translation.include.ab3"
0000E3CC <prefixtree.include.ab3@224> XINCLUDE "translation.include.ab3"
0000E3EE <prefixtree.include.ab3@225> XINCLUDE "translation.include.ab3"
0000E406 <prefixtree.include.ab3@226> XINCLUDE "translation.include.ab3"
0000E41C <prefixtree.include.ab3@227> XINCLUDE "translation.include.ab3"
0000E420 <prefixtree.include.ab3@230> XINCLUDE "translation.include.ab3"
0000E43A <prefixtree.include.ab3@283> XINCLUDE "translation.include.ab3"
0000E45A <prefixtree.include.ab3@284> XINCLUDE "translation.include.ab3"
0000E464 <prefixtree.include.ab3@285> XINCLUDE "translation.include.ab3"
0000E47E <prefixtree.include.ab3@286> XINCLUDE "translation.include.ab3"
0000E48C <prefixtree.include.ab3@287> XINCLUDE "translation.include.ab3"
0000E49A <prefixtree.include.ab3@288> XINCLUDE "translation.include.ab3"
0000E4A8 <prefixtree.include.ab3@289> XINCLUDE "translation.include.ab3"
0000E4B6 <prefixtree.include.ab3@290> XINCLUDE "translation.include.ab3"
0000E4C2 <prefixtree.include.ab3@291> XINCLUDE "translation.include.ab3"
0000E4CC <prefixtree.include.ab3@292> XINCLUDE "translation.include.ab3"
0000E4DA <prefixtree.include.ab3@293> XINCLUDE "translation.include.ab3"
0000E4E8 <prefixtree.include.ab3@294> XINCLUDE "translation.include.ab3"
0000E4F6 <prefixtree.include.ab3@295> XINCLUDE "translation.include.ab3"
0000E510 <prefixtree.include.ab3@296> XINCLUDE "translation.include.ab3"
0000E51E <prefixtree.include.ab3@297> XINCLUDE "translation.include.ab3"
0000E52E <prefixtree.include.ab3@298> XINCLUDE "translation.include.ab3"
0000E53E <prefixtree.include.ab3@299> XINCLUDE "translation.include.ab3"
0000E54E <prefixtree.include.ab3@300> XINCLUDE "translation.include.ab3"
0000E55C <prefixtree.include.ab3@301> XINCLUDE "translation.include.ab3"
0000E566 <prefixtree.include.ab3@303> XINCLUDE "translation.include.ab3"
0000E56C <prefixtree.include.ab3@304> XINCLUDE "translation.include.ab3"
0000E58A <prefixtree.include.ab3@322> XINCLUDE "translation.include.ab3"
0000E590 <prefixtree.include.ab3@323> XINCLUDE "translation.include.ab3"
0000E59A <prefixtree.include.ab3@324> XINCLUDE "translation.include.ab3"
0000E5BA <prefixtree.include.ab3@325> XINCLUDE "translation.include.ab3"
0000E5E8 <prefixtree.include.ab3@326> XINCLUDE "translation.include.ab3"
0000E606 <prefixtree.include.ab3@327> XINCLUDE "translation.include.ab3"
0000E610 <prefixtree.include.ab3@328> XINCLUDE "translation.include.ab3"
0000E622 <prefixtree.include.ab3@329> XINCLUDE "translation.include.ab3"
0000E64E <prefixtree.include.ab3@330> XINCLUDE "translation.include.ab3"
0000E664 <prefixtree.include.ab3@331> XINCLUDE "translation.include.ab3"
0000E670 <prefixtree.include.ab3@333> XINCLUDE "translation.include.ab3"
0000E67C <prefixtree.include.ab3@334> XINCLUDE "translation.include.ab3"
0000E682 <prefixtree.include.ab3@335> XINCLUDE "translation.include.ab3"
0000E688 <prefixtree.include.ab3@336> XINCLUDE "translation.include.ab3"
0000E68E <prefixtree.include.ab3@337> XINCLUDE "translation.include.ab3"
0000E6C6 <prefixtree.include.ab3@338> XINCLUDE "translation.include.ab3"
0000E6CC <prefixtree.include.ab3@340> XINCLUDE "translation.include.ab3"
0000E6D2 <prefixtree.include.ab3@341> XINCLUDE "translation.include.ab3"
0000E6DC <prefixtree.include.ab3@344> XINCLUDE "translation.include.ab3"
0000E6E2 <prefixtree.include.ab3@345> XINCLUDE "translation.include.ab3"
0000E714 <prefixtree.include.ab3@365> XINCLUDE "translation.include.ab3"
0000E730 <prefixtree.include.ab3@366> XINCLUDE "translation.include.ab3"
0000E74A <prefixtree.include.ab3@367> XINCLUDE "translation.include.ab3"
0000E75E <prefixtree.include.ab3@368> XINCLUDE "translation.include.ab3"
0000E7AE <prefixtree.include.ab3@369> XINCLUDE "translation.include.ab3"
0000E7D0 <prefixtree.include.ab3@371> XINCLUDE "translation.include.ab3"
0000E7E4 <prefixtree.include.ab3@372> XINCLUDE "translation.include.ab3"
0000E7F2 <prefixtree.include.ab3@373> XINCLUDE "translation.include.ab3"
0000E7FE <prefixtree.include.ab3@374> XINCLUDE "translation.include.ab3"
0000E806 <prefixtree.include.ab3@375> XINCLUDE "translation.include.ab3"
0000E80E <prefixtree.include.ab3@376> XINCLUDE "translation.include.ab3"
0000E816 <prefixtree.include.ab3@377> XINCLUDE "translation.include.ab3"
0000E81E <prefixtree.include.ab3@378> XINCLUDE "translation.include.ab3"
0000E824 <prefixtree.include.ab3@379> XINCLUDE "translation.include.ab3"
0000E832 <prefixtree.include.ab3@380> XINCLUDE "translation.include.ab3"
0000E854 <prefixtree.include.ab3@382> XINCLUDE "translation.include.ab3"
0000E880 <prefixtree.include.ab3@383> XINCLUDE "translation.include.ab3"
0000E892 <prefixtree.include.ab3@385> XINCLUDE "translation.include.ab3"
0000E898 <prefixtree.include.ab3@386> XINCLUDE "translation.include.ab3"
0000E8C0 <prefixtree.include.ab3@388> XINCLUDE "translation.include.ab3"
0000E8E4 <prefixtree.include.ab3@389> XINCLUDE "translation.include.ab3"
0000E90C <prefixtree.include.ab3@390> XINCLUDE "translation.include.ab3"
0000E940 <prefixtree.include.ab3@391> XINCLUDE "translation.include.ab3"
0000E950 <prefixtree.include.ab3@392> XINCLUDE "translation.include.ab3"
0000E95A <prefixtree.include.ab3@393> XINCLUDE "translation.include.ab3"
0000E968 <prefixtree.include.ab3@394> XINCLUDE "translation.include.ab3"
0000E97C <prefixtree.include.ab3@395> XINCLUDE "translation.include.ab3"
0000E982 <prefixtree.include.ab3@396> XINCLUDE "translation.include.ab3"
0000E9A2 <prefixtree.include.ab3@397> XINCLUDE "translation.include.ab3"
0000E9A8 <prefixtree.include.ab3@398> XINCLUDE "translation.include.ab3"
0000E9B0 <prefixtree.include.ab3@400> XINCLUDE "translation.include.ab3"
0000E9EA <prefixtree.include.ab3@402> XINCLUDE "translation.include.ab3"
0000EA10 <prefixtree.include.ab3@403> XINCLUDE "translation.include.ab3"
0000EA28 <prefixtree.include.ab3@404> XINCLUDE "translation.include.ab3"
0000EA5C <prefixtree.include.ab3@405> XINCLUDE "translation.include.ab3"
0000EA64 <prefixtree.include.ab3@406> XINCLUDE "translation.include.ab3"
0000EA72 <prefixtree.include.ab3@408> XINCLUDE "translation.include.ab3"
0000EA78 <prefixtree.include.ab3@410> XINCLUDE "translation.include.ab3"
0000EA90 <prefixtree.include.ab3@411> XINCLUDE "translation.include.ab3"
0000EA96 <prefixtree.include.ab3@412> XINCLUDE "translation.include.ab3"
0000EA9C <prefixtree.include.ab3@413> XINCLUDE "translation.include.ab3"
0000EAB6 <prefixtree.include.ab3@414> XINCLUDE "translation.include.ab3"
0000EABC <prefixtree.include.ab3@417> XINCLUDE "translation.include.ab3"
0000EAC2 <prefixtree.include.ab3@419> XINCLUDE "translation.include.ab3"
0000EAC8 <prefixtree.include.ab3@421> XINCLUDE "translation.include.ab3"
0000EAD6 <prefixtree.include.ab3@422> XINCLUDE "translation.include.ab3"
0000EAE4 <prefixtree.include.ab3@423> XINCLUDE "translation.include.ab3"
0000EB1E <prefixtree.include.ab3@425> XINCLUDE "translation.include.ab3"
0000EB44 <prefixtree.include.ab3@426> XINCLUDE "translation.include.ab3"
0000EB5C <prefixtree.include.ab3@427> XINCLUDE "translation.include.ab3"
0000EB68 <prefixtree.include.ab3@430> XINCLUDE "translation.include.ab3"
0000EB74 <prefixtree.include.ab3@431> XINCLUDE "translation.include.ab3"
0000EB80 <prefixtree.include.ab3@432> XINCLUDE "translation.include.ab3"
0000EB8C <prefixtree.include.ab3@433> XINCLUDE "translation.include.ab3"
0000EB98 <prefixtree.include.ab3@434> XINCLUDE "translation.include.ab3"
0000EBA2 <prefixtree.include.ab3@435> XINCLUDE "translation.include.ab3"
0000EBAA <prefixtree.include.ab3@437> XINCLUDE "translation.include.ab3"
0000EBC4 <prefixtree.include.ab3@438> XINCLUDE "translation.include.ab3"
0000EC02 <prefixtree.include.ab3@485> XINCLUDE "translation.include.ab3"
0000EC08 <prefixtree.include.ab3@486> XINCLUDE "translation.include.ab3"
0000EC6E <prefixtree.include.ab3@487> XINCLUDE "translation.include.ab3"
0000ECAE <prefixtree.include.ab3@489> XINCLUDE "translation.include.ab3"
0000ED04 <prefixtree.include.ab3@490> XINCLUDE "translation.include.ab3"
0000ED76 <prefixtree.include.ab3@491> XINCLUDE "translation.include.ab3"
0000ED82 <prefixtree.include.ab3@493> XINCLUDE "translation.include.ab3"
0000ED90 <prefixtree.include.ab3@494> XINCLUDE "translation.include.ab3"
0000EDD6 <prefixtree.include.ab3@495> XINCLUDE "translation.include.ab3"
0000EE20 <prefixtree.include.ab3@496> XINCLUDE "translation.include.ab3"
0000EE58 <prefixtree.include.ab3@497> XINCLUDE "translation.include.ab3"
0000EEAC <prefixtree.include.ab3@498> XINCLUDE "translation.include.ab3"
0000EEB2 <prefixtree.include.ab3@499> XINCLUDE "translation.include.ab3"
0000EEB8 <prefixtree.include.ab3@500> XINCLUDE "translation.include.ab3"
0000EEC6 <prefixtree.include.ab3@502> XINCLUDE "translation.include.ab3"
0000EECE <prefixtree.include.ab3@503> XINCLUDE "translation.include.ab3"
0000EF08 <prefixtree.include.ab3@505> XINCLUDE "translation.include.ab3"
0000EF2E <prefixtree.include.ab3@506> XINCLUDE "translation.include.ab3"
0000EF46 <prefixtree.include.ab3@507> XINCLUDE "translation.include.ab3"
0000EF7C <prefixtree.include.ab3@508> XINCLUDE "translation.include.ab3"
0000EF92 <prefixtree.include.ab3@509> XINCLUDE "translation.include.ab3"
0000EFA0 <prefixtree.include.ab3@511> XINCLUDE "translation.include.ab3"
0000EFB8 <prefixtree.include.ab3@512> XINCLUDE "translation.include.ab3"
0000EFF0 <prefixtree.include.ab3@513> XINCLUDE "translation.include.ab3"
0000F016 <prefixtree.include.ab3@514> XINCLUDE "translation.include.ab3"
0000F05E <prefixtree.include.ab3@515> XINCLUDE "translation.include.ab3"
0000F064 <prefixtree.include.ab3@516> XINCLUDE "translation.include.ab3"
0000F07E <prefixtree.include.ab3@518> XINCLUDE "translation.include.ab3"
0000F08A <prefixtree.include.ab3@519> XINCLUDE "translation.include.ab3"
0000F090 <prefixtree.include.ab3@520> XINCLUDE "translation.include.ab3"
0000F0BC <prefixtree.include.ab3@521> XINCLUDE "translation.include.ab3"
0000F0D0 <prefixtree.include.ab3@526> XINCLUDE "translation.include.ab3"
0000F0DE <prefixtree.include.ab3@528> XINCLUDE "translation.include.ab3"
0000F0E6 <prefixtree.include.ab3@529> XINCLUDE "translation.include.ab3"
0000F120 <prefixtree.include.ab3@531> XINCLUDE "translation.include.ab3"
0000F146 <prefixtree.include.ab3@532> XINCLUDE "translation.include.ab3"
0000F15E <prefixtree.include.ab3@533> XINCLUDE "translation.include.ab3"
0000F198 <prefixtree.include.ab3@534> XINCLUDE "translation.include.ab3"
0000F1C2 <prefixtree.include.ab3@535> XINCLUDE "translation.include.ab3"
0000F1DA <prefixtree.include.ab3@536> XINCLUDE "translation.include.ab3"
0000F20A <prefixtree.include.ab3@537> XINCLUDE "translation.include.ab3"
0000F236 <prefixtree.include.ab3@538> XINCLUDE "translation.include.ab3"
0000F252 <prefixtree.include.ab3@539> XINCLUDE "translation.include.ab3"
0000F260 <prefixtree.include.ab3@541> XINCLUDE "translation.include.ab3"
0000F26E <prefixtree.include.ab3@542> XINCLUDE "translation.include.ab3"
0000F2AC <prefixtree.include.ab3@543> XINCLUDE "translation.include.ab3"
0000F2E8 <prefixtree.include.ab3@544> XINCLUDE "translation.include.ab3"
0000F354 <prefixtree.include.ab3@545> XINCLUDE "translation.include.ab3"
0000F382 <prefixtree.include.ab3@546> XINCLUDE "translation.include.ab3"
0000F3B0 <prefixtree.include.ab3@547> XINCLUDE "translation.include.ab3"
0000F3F8 <prefixtree.include.ab3@548> XINCLUDE "translation.include.ab3"
0000F412 <prefixtree.include.ab3@551> XINCLUDE "translation.include.ab3"
0000F45A <prefixtree.include.ab3@552> XINCLUDE "translation.include.ab3"
0000F478 <prefixtree.include.ab3@553> XINCLUDE "translation.include.ab3"
0000F496 <prefixtree.include.ab3@554> XINCLUDE "translation.include.ab3"
0000F4B0 <prefixtree.include.ab3@557> XINCLUDE "translation.include.ab3"
0000F4BC <prefixtree.include.ab3@558> XINCLUDE "translation.include.ab3"
0000F4C2 <prefixtree.include.ab3@559> XINCLUDE "translation.include.ab3"
0000F4EE <prefixtree.include.ab3@560> XINCLUDE "translation.include.ab3"
0000F506 <prefixtree.include.ab3@562> XINCLUDE "translation.include.ab3"
0000F50C <prefixtree.include.ab3@563> XINCLUDE "translation.include.ab3"
0000F520 <prefixtree.include.ab3@566> XINCLUDE "translation.include.ab3"
0000F52E <prefixtree.include.ab3@568> XINCLUDE "translation.include.ab3"
0000F53C <prefixtree.include.ab3@569> XINCLUDE "translation.include.ab3"
0000F54A <prefixtree.include.ab3@570> XINCLUDE "translation.include.ab3"
0000F552 <prefixtree.include.ab3@571> XINCLUDE "translation.include.ab3"
0000F57E <prefixtree.include.ab3@572> XINCLUDE "translation.include.ab3"
0000F5A6 <prefixtree.include.ab3@573> XINCLUDE "translation.include.ab3"
0000F5CE <prefixtree.include.ab3@574> XINCLUDE "translation.include.ab3"
0000F63A <prefixtree.include.ab3@575> XINCLUDE "translation.include.ab3"
0000F64A <prefixtree.include.ab3@576> XINCLUDE "translation.include.ab3"
0000F676 <prefixtree.include.ab3@577> XINCLUDE "translation.include.ab3"
0000F6CC <prefixtree.include.ab3@579> XINCLUDE "translation.include.ab3"
0000F6DA <prefixtree.include.ab3@580> XINCLUDE "translation.include.ab3"
0000F6E8 <prefixtree.include.ab3@581> XINCLUDE "translation.include.ab3"
0000F6EE <prefixtree.include.ab3@582> XINCLUDE "translation.include.ab3"
0000F742 <prefixtree.include.ab3@584> XINCLUDE "translation.include.ab3"
0000F862 <prefixtree.include.ab3@585> XINCLUDE "translation.include.ab3"
0000F8B2 <prefixtree.include.ab3@587> XINCLUDE "translation.include.ab3"
0000F908 <prefixtree.include.ab3@588> XINCLUDE "translation.include.ab3"
0000F974 <prefixtree.include.ab3@589> XINCLUDE "translation.include.ab3"
0000F97C <prefixtree.include.ab3@593> XINCLUDE "translation.include.ab3"
0000F9B6 <prefixtree.include.ab3@595> XINCLUDE "translation.include.ab3"
0000F9DC <prefixtree.include.ab3@596> XINCLUDE "translation.include.ab3"
0000F9F4 <prefixtree.include.ab3@597> XINCLUDE "translation.include.ab3"
0000FA2E <prefixtree.include.ab3@598> XINCLUDE "translation.include.ab3"
0000FA58 <prefixtree.include.ab3@599> XINCLUDE "translation.include.ab3"
0000FA70 <prefixtree.include.ab3@600> XINCLUDE "translation.include.ab3"
0000FA94 <prefixtree.include.ab3@602> XINCLUDE "translation.include.ab3"
0000FAE8 <prefixtree.include.ab3@603> XINCLUDE "translation.include.ab3"
0000FAF0 <prefixtree.include.ab3@604> XINCLUDE "translation.include.ab3"
0000FAF6 <prefixtree.include.ab3@605> XINCLUDE "translation.include.ab3"
0000FB58 <prefixtree.include.ab3@606> XINCLUDE "translation.include.ab3"
0000FB84 <prefixtree.include.ab3@607> XINCLUDE "translation.include.ab3"
0000FBA0 <prefixtree.include.ab3@610> XINCLUDE "translation.include.ab3"
0000FBAE <prefixtree.include.ab3@612> XINCLUDE "translation.include.ab3"
0000FBBC <prefixtree.include.ab3@613> XINCLUDE "translation.include.ab3"
0000FBCA <prefixtree.include.ab3@615> XINCLUDE "translation.include.ab3"
0000FBD8 <prefixtree.include.ab3@616> XINCLUDE "translation.include.ab3"
0000FC1C <prefixtree.include.ab3@617> XINCLUDE "translation.include.ab3"
0000FC88 <prefixtree.include.ab3@618> XINCLUDE "translation.include.ab3"
0000FCB6 <prefixtree.include.ab3@619> XINCLUDE "translation.include.ab3"
0000FCCA <prefixtree.include.ab3@620> XINCLUDE "translation.include.ab3"
0000FCFC <prefixtree.include.ab3@621> XINCLUDE "translation.include.ab3"
0000FD46 <prefixtree.include.ab3@622> XINCLUDE "translation.include.ab3"
0000FD56 <prefixtree.include.ab3@623> XINCLUDE "translation.include.ab3"
0000FD8A <prefixtree.include.ab3@624> XINCLUDE "translation.include.ab3"
0000FDAC <prefixtree.include.ab3@625> XINCLUDE "translation.include.ab3"
0000FDBC <prefixtree.include.ab3@626> XINCLUDE "translation.include.ab3"
0000FDC4 <prefixtree.include.ab3@629> XINCLUDE "translation.include.ab3"
0000FE08 <prefixtree.include.ab3@630> XINCLUDE "translation.include.ab3"
0000FE74 <prefixtree.include.ab3@631> XINCLUDE "translation.include.ab3"
0000FEA2 <prefixtree.include.ab3@632> XINCLUDE "translation.include.ab3"
0000FEC6 <prefixtree.include.ab3@634> XINCLUDE "translation.include.ab3"
0000FF0A <prefixtree.include.ab3@635> XINCLUDE "translation.include.ab3"
0000FF76 <prefixtree.include.ab3@636> XINCLUDE "translation.include.ab3"
0000FFA4 <prefixtree.include.ab3@637> XINCLUDE "translation.include.ab3"
0000FFD2 <prefixtree.include.ab3@638> XINCLUDE "translation.include.ab3"
0000FFDA <prefixtree.include.ab3@639> XINCLUDE "translation.include.ab3"
00010008 <prefixtree.include.ab3@640> XINCLUDE "translation.include.ab3"
0001007A <prefixtree.include.ab3@641> XINCLUDE "translation.include.ab3"
00010080 <prefixtree.include.ab3@642> XINCLUDE "translation.include.ab3"
000100AE <prefixtree.include.ab3@643> XINCLUDE "translation.include.ab3"
00010120 <prefixtree.include.ab3@644> XINCLUDE "translation.include.ab3"
0001013E <prefixtree.include.ab3@647> XINCLUDE "translation.include.ab3"
00010162 <prefixtree.include.ab3@648> XINCLUDE "translation.include.ab3"
0001017A <prefixtree.include.ab3@649> XINCLUDE "translation.include.ab3"
00010180 <prefixtree.include.ab3@650> XINCLUDE "translation.include.ab3"
00010186 <prefixtree.include.ab3@653> XINCLUDE "translation.include.ab3"
00010188 <prefixtree.include.ab3@655> XINCLUDE "translation.include.ab3"
00010192 <prefixtree.include.ab3@658> XINCLUDE "translation.include.ab3"
000101BE <prefixtree.include.ab3@659> XINCLUDE "translation.include.ab3"
000101E0 <prefixtree.include.ab3@677> XINCLUDE "translation.include.ab3"
000101E8 <prefixtree.include.ab3@679> XINCLUDE "translation.include.ab3"
000101EE <prefixtree.include.ab3@680> XINCLUDE "translation.include.ab3"
000101FC <prefixtree.include.ab3@681> XINCLUDE "translation.include.ab3"
00010236 <prefixtree.include.ab3@683> XINCLUDE "translation.include.ab3"
0001025C <prefixtree.include.ab3@684> XINCLUDE "translation.include.ab3"
00010274 <prefixtree.include.ab3@685> XINCLUDE "translation.include.ab3"
000102AE <prefixtree.include.ab3@686> XINCLUDE "translation.include.ab3"
000102D8 <prefixtree.include.ab3@687> XINCLUDE "translation.include.ab3"
000102F0 <prefixtree.include.ab3@689> XINCLUDE "translation.include.ab3"
00010308 <prefixtree.include.ab3@690> XINCLUDE "translation.include.ab3"
00010340 <prefixtree.include.ab3@691> XINCLUDE "translation.include.ab3"
00010348 <prefixtree.include.ab3@693> XINCLUDE "translation.include.ab3"
00010382 <prefixtree.include.ab3@695> XINCLUDE "translation.include.ab3"
00010394 <prefixtree.include.ab3@697> XINCLUDE "translation.include.ab3"
000103BA <prefixtree.include.ab3@698> XINCLUDE "translation.include.ab3"
000103D0 <prefixtree.include.ab3@699> XINCLUDE "translation.include.ab3"
000103F6 <prefixtree.include.ab3@700> XINCLUDE "translation.include.ab3"
0001040A <prefixtree.include.ab3@701> XINCLUDE "translation.include.ab3"
00010422 <prefixtree.include.ab3@703> XINCLUDE "translation.include.ab3"
00010434 <prefixtree.include.ab3@705> XINCLUDE "translation.include.ab3"
0001043E <prefixtree.include.ab3@707> XINCLUDE "translation.include.ab3"
00010452 <prefixtree.include.ab3@709> XINCLUDE "translation.include.ab3"
0001046C <prefixtree.include.ab3@726> XINCLUDE "translation.include.ab3"
00010488 <prefixtree.include.ab3@728> XINCLUDE "translation.include.ab3"
0001049A <prefixtree.include.ab3@729> XINCLUDE "translation.include.ab3"
000104B6 <prefixtree.include.ab3@730> XINCLUDE "translation.include.ab3"
000104F2 <prefixtree.include.ab3@731> XINCLUDE "translation.include.ab3"
0001050E <prefixtree.include.ab3@732> XINCLUDE "translation.include.ab3"
0001052E <prefixtree.include.ab3@733> XINCLUDE "translation.include.ab3"
00010538 <prefixtree.include.ab3@734> XINCLUDE "translation.include.ab3"
0001053E <prefixtree.include.ab3@735> XINCLUDE "translation.include.ab3"
00010548 <prefixtree.include.ab3@736> XINCLUDE "translation.include.ab3"
00010550 <prefixtree.include.ab3@738> XINCLUDE "translation.include.ab3"
00010556 <prefixtree.include.ab3@740> XINCLUDE "translation.include.ab3"
00010584 <prefixtree.include.ab3@759> XINCLUDE "translation.include.ab3"
000105AC <prefixtree.include.ab3@760> XINCLUDE "translation.include.ab3"
000105EC <prefixtree.include.ab3@761> XINCLUDE "translation.include.ab3"
00010604 <prefixtree.include.ab3@762> XINCLUDE "translation.include.ab3"
0001064A <prefixtree.include.ab3@763> XINCLUDE "translation.include.ab3"
00010674 <prefixtree.include.ab3@766> XINCLUDE "translation.include.ab3"
000106A2 <prefixtree.include.ab3@767> XINCLUDE "translation.include.ab3"
000106BC <prefixtree.include.ab3@966> XINCLUDE "translation.include.ab3"
000106C2 <prefixtree.include.ab3@967> XINCLUDE "translation.include.ab3"
000106DA <prefixtree.include.ab3@968> XINCLUDE "translation.include.ab3"
000106E4 <prefixtree.include.ab3@969> XINCLUDE "translation.include.ab3"
000106F6 <prefixtree.include.ab3@970> XINCLUDE "translation.include.ab3"
0001072E <prefixtree.include.ab3@971> XINCLUDE "translation.include.ab3"
0001073C <prefixtree.include.ab3@972> XINCLUDE "translation.include.ab3"
00010748 <prefixtree.include.ab3@973> XINCLUDE "translation.include.ab3"
00010764 <prefixtree.include.ab3@974> XINCLUDE "translation.include.ab3"
00010786 <prefixtree.include.ab3@975> XINCLUDE "translation.include.ab3"
000107A8 <prefixtree.include.ab3@976> XINCLUDE "translation.include.ab3"
000107CA <prefixtree.include.ab3@977> XINCLUDE "translation.include.ab3"
000107EC <prefixtree.include.ab3@978> XINCLUDE "translation.include.ab3"
00010808 <prefixtree.include.ab3@979> XINCLUDE "translation.include.ab3"
00010826 <prefixtree.include.ab3@980> XINCLUDE "translation.include.ab3"
0001083A <prefixtree.include.ab3@981> XINCLUDE "translation.include.ab3"
00010840 <prefixtree.include.ab3@983> XINCLUDE "translation.include.ab3"
00010842 <prefixtree.include.ab3@985> XINCLUDE "translation.include.ab3"
00010848 <prefixtree.include.ab3@986> XINCLUDE "translation.include.ab3"
00010852 <prefixtree.include.ab3@988> XINCLUDE "translation.include.ab3"
00010858 <prefixtree.include.ab3@989> XINCLUDE "translation.include.ab3"
00010876 <prefixtree.include.ab3@1007> XINCLUDE "translation.include.ab3"
0001087C <prefixtree.include.ab3@1008> XINCLUDE "translation.include.ab3"
000108A0 <prefixtree.include.ab3@1009> XINCLUDE "translation.include.ab3"
000108BE <prefixtree.include.ab3@1010> XINCLUDE "translation.include.ab3"
000108EC <prefixtree.include.ab3@1011> XINCLUDE "translation.include.ab3"
0001091A <prefixtree.include.ab3@1012> XINCLUDE "translation.include.ab3"
00010948 <prefixtree.include.ab3@1013> XINCLUDE "translation.include.ab3"
00010976 <prefixtree.include.ab3@1014> XINCLUDE "translation.include.ab3"
000109AA <prefixtree.include.ab3@1015> XINCLUDE "translation.include.ab3"
000109BA <prefixtree.include.ab3@1016> XINCLUDE "translation.include.ab3"
000109C4 <prefixtree.include.ab3@1018> XINCLUDE "translation.include.ab3"
000109CA <prefixtree.include.ab3@1019> XINCLUDE "translation.include.ab3"
000109CA <phrasebook.include.ab3@34> XINCLUDE "translation.include.ab3"
00010A14 <phrasebook.include.ab3@58> XINCLUDE "translation.include.ab3"
00010A34 <phrasebook.include.ab3@59> XINCLUDE "translation.include.ab3"
00010A3E <phrasebook.include.ab3@60> XINCLUDE "translation.include.ab3"
00010A52 <phrasebook.include.ab3@61> XINCLUDE "translation.include.ab3"
00010A98 <phrasebook.include.ab3@62> XINCLUDE "translation.include.ab3"
00010ADE <phrasebook.include.ab3@63> XINCLUDE "translation.include.ab3"
00010B24 <phrasebook.include.ab3@64> XINCLUDE "translation.include.ab3"
00010B2E <phrasebook.include.ab3@66> XINCLUDE "translation.include.ab3"
00010B4A <phrasebook.include.ab3@67> XINCLUDE "translation.include.ab3"
00010B74 <phrasebook.include.ab3@70> XINCLUDE "translation.include.ab3"
00010BF2 <phrasebook.include.ab3@71> XINCLUDE "translation.include.ab3"
00010C70 <phrasebook.include.ab3@72> XINCLUDE "translation.include.ab3"
00010CEE <phrasebook.include.ab3@73> XINCLUDE "translation.include.ab3"
00010D6C <phrasebook.include.ab3@74> XINCLUDE "translation.include.ab3"
00010DEA <phrasebook.include.ab3@75> XINCLUDE "translation.include.ab3"
00010E68 <phrasebook.include.ab3@76> XINCLUDE "translation.include.ab3"
00010EE6 <phrasebook.include.ab3@77> XINCLUDE "translation.include.ab3"
00010F64 <phrasebook.include.ab3@78> XINCLUDE "translation.include.ab3"
00010FE2 <phrasebook.include.ab3@79> XINCLUDE "translation.include.ab3"
00011060 <phrasebook.include.ab3@80> XINCLUDE "translation.include.ab3"
000110E4 <phrasebook.include.ab3@81> XINCLUDE "translation.include.ab3"
00011114 <phrasebook.include.ab3@82> XINCLUDE "translation.include.ab3"
00011170 <phrasebook.include.ab3@84> XINCLUDE "translation.include.ab3"
0001119C <phrasebook.include.ab3@85> XINCLUDE "translation.include.ab3"
00011266 <phrasebook.include.ab3@86> XINCLUDE "translation.include.ab3"
00011274 <phrasebook.include.ab3@88> XINCLUDE "translation.include.ab3"
000112B2 <phrasebook.include.ab3@89> XINCLUDE "translation.include.ab3"
00011336 <phrasebook.include.ab3@90> XINCLUDE "translation.include.ab3"
00011360 <phrasebook.include.ab3@91> XINCLUDE "translation.include.ab3"
0001137E <phrasebook.include.ab3@92> XINCLUDE "translation.include.ab3"
00011398 <phrasebook.include.ab3@106> XINCLUDE "translation.include.ab3"
000113A2 <phrasebook.include.ab3@107> XINCLUDE "translation.include.ab3"
000113AE <phrasebook.include.ab3@108> XINCLUDE "translation.include.ab3"
000113BE <phrasebook.include.ab3@109> XINCLUDE "translation.include.ab3"
000113CE <phrasebook.include.ab3@110> XINCLUDE "translation.include.ab3"
000113DE <phrasebook.include.ab3@111> XINCLUDE "translation.include.ab3"
000113EE <phrasebook.include.ab3@112> XINCLUDE "translation.include.ab3"
000113F2 <phrasebook.include.ab3@114> XINCLUDE "translation.include.ab3"
00011430 <phrasebook.include.ab3@131> XINCLUDE "translation.include.ab3"
00011488 <phrasebook.include.ab3@132> XINCLUDE "translation.include.ab3"
000114E4 <phrasebook.include.ab3@133> XINCLUDE "translation.include.ab3"
0001156E <phrasebook.include.ab3@134> XINCLUDE "translation.include.ab3"
000115EC <phrasebook.include.ab3@135> XINCLUDE "translation.include.ab3"
00011606 <phrasebook.include.ab3@137> XINCLUDE "translation.include.ab3"
00011634 <phrasebook.include.ab3@155> XINCLUDE "translation.include.ab3"
00011670 <phrasebook.include.ab3@156> XINCLUDE "translation.include.ab3"
0001173E <phrasebook.include.ab3@158> XINCLUDE "translation.include.ab3"
0001180C <phrasebook.include.ab3@159> XINCLUDE "translation.include.ab3"
00011858 <phrasebook.include.ab3@161> XINCLUDE "translation.include.ab3"
000118D6 <phrasebook.include.ab3@162> XINCLUDE "translation.include.ab3"
00011954 <phrasebook.include.ab3@163> XINCLUDE "translation.include.ab3"
000119B2 <phrasebook.include.ab3@165> XINCLUDE "translation.include.ab3"
00011A48 <phrasebook.include.ab3@166> XINCLUDE "translation.include.ab3"
00011A80 <phrasebook.include.ab3@168> XINCLUDE "translation.include.ab3"
00011ADE <phrasebook.include.ab3@169> XINCLUDE "translation.include.ab3"
00011B66 <phrasebook.include.ab3@170> XINCLUDE "translation.include.ab3"
00011B6E <phrasebook.include.ab3@172> XINCLUDE "translation.include.ab3"
00011BD8 <phrasebook.include.ab3@174> XINCLUDE "translation.include.ab3"
00011C44 <phrasebook.include.ab3@175> XINCLUDE "translation.include.ab3"
00011C82 <phrasebook.include.ab3@176> XINCLUDE "translation.include.ab3"
00011D0A <phrasebook.include.ab3@177> XINCLUDE "translation.include.ab3"
00011D36 <phrasebook.include.ab3@187> XINCLUDE "translation.include.ab3"
00011D92 <phrasebook.include.ab3@188> XINCLUDE "translation.include.ab3"
00011E5A <phrasebook.include.ab3@189> XINCLUDE "translation.include.ab3"
00011EBE <phrasebook.include.ab3@190> XINCLUDE "translation.include.ab3"
00011EC4 <phrasebook.include.ab3@191> XINCLUDE "translation.include.ab3"
00011EF8 <phrasebook.include.ab3@192> XINCLUDE "translation.include.ab3"
00011FC6 <phrasebook.include.ab3@196> XINCLUDE "translation.include.ab3"
00012094 <phrasebook.include.ab3@197> XINCLUDE "translation.include.ab3"
000120BE <phrasebook.include.ab3@199> XINCLUDE "translation.include.ab3"
000120DC <phrasebook.include.ab3@200> XINCLUDE "translation.include.ab3"
0001210A <phrasebook.include.ab3@204> XINCLUDE "translation.include.ab3"
00012146 <phrasebook.include.ab3@205> XINCLUDE "translation.include.ab3"
000121B6 <phrasebook.include.ab3@206> XINCLUDE "translation.include.ab3"
000121BE <phrasebook.include.ab3@207> XINCLUDE "translation.include.ab3"
00012210 <phrasebook.include.ab3@208> XINCLUDE "translation.include.ab3"
00012238 <phrasebook.include.ab3@209> XINCLUDE "translation.include.ab3"
00012250 <phrasebook.include.ab3@210> XINCLUDE "translation.include.ab3"
00012304 <phrasebook.include.ab3@211> XINCLUDE "translation.include.ab3"
00012312 <phrasebook.include.ab3@212> XINCLUDE "translation.include.ab3"
00012368 <phrasebook.include.ab3@213> XINCLUDE "translation.include.ab3"
000123C6 <phrasebook.include.ab3@214> XINCLUDE "translation.include.ab3"
000123CC <phrasebook.include.ab3@215> XINCLUDE "translation.include.ab3"
00012450 <phrasebook.include.ab3@216> XINCLUDE "translation.include.ab3"
000124D4 <phrasebook.include.ab3@217> XINCLUDE "translation.include.ab3"
00012558 <phrasebook.include.ab3@218> XINCLUDE "translation.include.ab3"
000125D6 <phrasebook.include.ab3@219> XINCLUDE "translation.include.ab3"
00012654 <phrasebook.include.ab3@220> XINCLUDE "translation.include.ab3"
000126D2 <phrasebook.include.ab3@221> XINCLUDE "translation.include.ab3"
00012750 <phrasebook.include.ab3@222> XINCLUDE "translation.include.ab3"
000127CE <phrasebook.include.ab3@223> XINCLUDE "translation.include.ab3"
0001284C <phrasebook.include.ab3@224> XINCLUDE "translation.include.ab3"
000128CA <phrasebook.include.ab3@225> XINCLUDE "translation.include.ab3"
000128F4 <phrasebook.include.ab3@226> XINCLUDE "translation.include.ab3"
00012912 <phrasebook.include.ab3@227> XINCLUDE "translation.include.ab3"
00012940 <phrasebook.include.ab3@245> XINCLUDE "translation.include.ab3"
00012984 <phrasebook.include.ab3@246> XINCLUDE "translation.include.ab3"
0001298A <phrasebook.include.ab3@247> XINCLUDE "translation.include.ab3"
000129A4 <phrasebook.include.ab3@248> XINCLUDE "translation.include.ab3"
000129C0 <phrasebook.include.ab3@249> XINCLUDE "translation.include.ab3"
000129F4 <phrasebook.include.ab3@250> XINCLUDE "translation.include.ab3"
00012A18 <phrasebook.include.ab3@251> XINCLUDE "translation.include.ab3"
00012A40 <phrasebook.include.ab3@252> XINCLUDE "translation.include.ab3"
00012AAC <phrasebook.include.ab3@253> XINCLUDE "translation.include.ab3"
00012B0A <phrasebook.include.ab3@256> XINCLUDE "translation.include.ab3"
00012B68 <phrasebook.include.ab3@257> XINCLUDE "translation.include.ab3"
00012BB4 <phrasebook.include.ab3@258> XINCLUDE "translation.include.ab3"
00012C0E <phrasebook.include.ab3@259> XINCLUDE "translation.include.ab3"
00012C14 <phrasebook.include.ab3@260> XINCLUDE "translation.include.ab3"
00012C1A <phrasebook.include.ab3@262> XINCLUDE "translation.include.ab3"
00012C24 <phrasebook.include.ab3@263> XINCLUDE "translation.include.ab3"
00012C2E <phrasebook.include.ab3@264> XINCLUDE "translation.include.ab3"
00012C48 <phrasebook.include.ab3@265> XINCLUDE "translation.include.ab3"
00012C76 <phrasebook.include.ab3@282> XINCLUDE "translation.include.ab3"
00012C7C <phrasebook.include.ab3@283> XINCLUDE "translation.include.ab3"
00012CC0 <phrasebook.include.ab3@284> XINCLUDE "translation.include.ab3"
00012CDA <phrasebook.include.ab3@285> XINCLUDE "translation.include.ab3"
00012CEA <phrasebook.include.ab3@286> XINCLUDE "translation.include.ab3"
00012CF4 <phrasebook.include.ab3@287> XINCLUDE "translation.include.ab3"
00012D00 <phrasebook.include.ab3@288> XINCLUDE "translation.include.ab3"
00012D0A <phrasebook.include.ab3@289> XINCLUDE "translation.include.ab3"
00012D2E <phrasebook.include.ab3@292> XINCLUDE "translation.include.ab3"
00012D76 <phrasebook.include.ab3@293> XINCLUDE "translation.include.ab3"
00012DBE <phrasebook.include.ab3@294> XINCLUDE "translation.include.ab3"
00012E06 <phrasebook.include.ab3@295> XINCLUDE "translation.include.ab3"
00012E1C <phrasebook.include.ab3@296> XINCLUDE "translation.include.ab3"
00012E30 <phrasebook.include.ab3@297> XINCLUDE "translation.include.ab3"
00012E3A <phrasebook.include.ab3@299> XINCLUDE "translation.include.ab3"
00012E44 <phrasebook.include.ab3@300> XINCLUDE "translation.include.ab3"
00012E5E <phrasebook.include.ab3@301> XINCLUDE "translation.include.ab3"
00012E88 <phrasebook.include.ab3@317> XINCLUDE "translation.include.ab3"
00012ECC <phrasebook.include.ab3@318> XINCLUDE "translation.include.ab3"
00012EE6 <phrasebook.include.ab3@319> XINCLUDE "translation.include.ab3"
00012F44 <phrasebook.include.ab3@320> XINCLUDE "translation.include.ab3"
00012F5E <phrasebook.include.ab3@321> XINCLUDE "translation.include.ab3"
00012F76 <phrasebook.include.ab3@323> XINCLUDE "translation.include.ab3"
00012F80 <phrasebook.include.ab3@324> XINCLUDE "translation.include.ab3"
00012F9C <phrasebook.include.ab3@325> XINCLUDE "translation.include.ab3"
00012FAA <phrasebook.include.ab3@326> XINCLUDE "translation.include.ab3"
00012FB6 <phrasebook.include.ab3@327> XINCLUDE "translation.include.ab3"
00013002 <phrasebook.include.ab3@328> XINCLUDE "translation.include.ab3"
00013054 <phrasebook.include.ab3@329> XINCLUDE "translation.include.ab3"
000130A6 <phrasebook.include.ab3@330> XINCLUDE "translation.include.ab3"
000130BA <phrasebook.include.ab3@331> XINCLUDE "translation.include.ab3"
000130CA <phrasebook.include.ab3@332> XINCLUDE "translation.include.ab3"
000130D0 <phrasebook.include.ab3@333> XINCLUDE "translation.include.ab3"
000130D2 <phrasebook.include.ab3@335> XINCLUDE "translation.include.ab3"
000130D8 <phrasebook.include.ab3@336> XINCLUDE "translation.include.ab3"
000130E2 <phrasebook.include.ab3@338> XINCLUDE "translation.include.ab3"
000130EC <phrasebook.include.ab3@339> XINCLUDE "translation.include.ab3"
00013106 <phrasebook.include.ab3@340> XINCLUDE "translation.include.ab3"
00013130 <phrasebook.include.ab3@379> XINCLUDE "translation.include.ab3"
00013146 <phrasebook.include.ab3@380> XINCLUDE "translation.include.ab3"
00013150 <phrasebook.include.ab3@381> XINCLUDE "translation.include.ab3"
000131C8 <phrasebook.include.ab3@382> XINCLUDE "translation.include.ab3"
00013204 <phrasebook.include.ab3@383> XINCLUDE "translation.include.ab3"
00013214 <phrasebook.include.ab3@384> XINCLUDE "translation.include.ab3"
00013234 <phrasebook.include.ab3@385> XINCLUDE "translation.include.ab3"
00013254 <phrasebook.include.ab3@386> XINCLUDE "translation.include.ab3"
00013274 <phrasebook.include.ab3@387> XINCLUDE "translation.include.ab3"
000132AA <phrasebook.include.ab3@388> XINCLUDE "translation.include.ab3"
000132D2 <phrasebook.include.ab3@389> XINCLUDE "translation.include.ab3"
0001330A <phrasebook.include.ab3@390> XINCLUDE "translation.include.ab3"
0001336E <phrasebook.include.ab3@391> XINCLUDE "translation.include.ab3"
0001338E <phrasebook.include.ab3@392> XINCLUDE "translation.include.ab3"
0001340A <phrasebook.include.ab3@393> XINCLUDE "translation.include.ab3"
00013442 <phrasebook.include.ab3@396> XINCLUDE "translation.include.ab3"
000134B8 <phrasebook.include.ab3@397> XINCLUDE "translation.include.ab3"
000134D8 <phrasebook.include.ab3@398> XINCLUDE "translation.include.ab3"
00013554 <phrasebook.include.ab3@399> XINCLUDE "translation.include.ab3"
0001358C <phrasebook.include.ab3@402> XINCLUDE "translation.include.ab3"
00013602 <phrasebook.include.ab3@403> XINCLUDE "translation.include.ab3"
00013622 <phrasebook.include.ab3@404> XINCLUDE "translation.include.ab3"
0001369E <phrasebook.include.ab3@405> XINCLUDE "translation.include.ab3"
000136CA <phrasebook.include.ab3@408> XINCLUDE "translation.include.ab3"
000136D2 <phrasebook.include.ab3@409> XINCLUDE "translation.include.ab3"
00013718 <phrasebook.include.ab3@410> XINCLUDE "translation.include.ab3"
00013738 <phrasebook.include.ab3@411> XINCLUDE "translation.include.ab3"
00013742 <phrasebook.include.ab3@412> XINCLUDE "translation.include.ab3"
0001375A <phrasebook.include.ab3@413> XINCLUDE "translation.include.ab3"
0001376A <phrasebook.include.ab3@414> XINCLUDE "translation.include.ab3"
000137A2 <phrasebook.include.ab3@415> XINCLUDE "translation.include.ab3"
000137D4 <phrasebook.include.ab3@416> XINCLUDE "translation.include.ab3"
000137E6 <phrasebook.include.ab3@419> XINCLUDE "translation.include.ab3"
00013868 <phrasebook.include.ab3@420> XINCLUDE "translation.include.ab3"
00013872 <phrasebook.include.ab3@421> XINCLUDE "translation.include.ab3"
000138A4 <phrasebook.include.ab3@422> XINCLUDE "translation.include.ab3"
000138D6 <phrasebook.include.ab3@423> XINCLUDE "translation.include.ab3"
00013902 <phrasebook.include.ab3@428> XINCLUDE "translation.include.ab3"
0001392E <phrasebook.include.ab3@429> XINCLUDE "translation.include.ab3"
00013950 <phrasebook.include.ab3@430> XINCLUDE "translation.include.ab3"
0001395A <phrasebook.include.ab3@432> XINCLUDE "translation.include.ab3"
00013974 <phrasebook.include.ab3@433> XINCLUDE "translation.include.ab3"
00013974 <translation.include.ab3@31> XINCLUDE "translation.include.ab3"
0001398A <translation.include.ab3@43> XINCLUDE "translation.include.ab3"
000139A6 <translation.include.ab3@44> XINCLUDE "translation.include.ab3"
000139A8 <translation.include.ab3@45> XINCLUDE "translation.include.ab3"
000139D6 <translation.include.ab3@46> XINCLUDE "translation.include.ab3"
000139D6 <AmiBlitz3.ab3@91> XINCLUDE "translation.include.ab3"
000139D6 <ted.include.ab3@1> XINCLUDE "/Shared/ted.include.ab3"
000139F0 <ted.include.ab3@161> XINCLUDE "/Shared/ted.include.ab3"
000139FA <ted.include.ab3@162> XINCLUDE "/Shared/ted.include.ab3"
00013A1C <ted.include.ab3@163> XINCLUDE "/Shared/ted.include.ab3"
00013A34 <ted.include.ab3@164> XINCLUDE "/Shared/ted.include.ab3"
00013A4E <ted.include.ab3@166> XINCLUDE "/Shared/ted.include.ab3"
00013A80 <ted.include.ab3@167> XINCLUDE "/Shared/ted.include.ab3"
00013A8A <ted.include.ab3@168> XINCLUDE "/Shared/ted.include.ab3"
00013A90 <ted.include.ab3@170> XINCLUDE "/Shared/ted.include.ab3"
00013AA2 <ted.include.ab3@171> XINCLUDE "/Shared/ted.include.ab3"
00013B16 <ted.include.ab3@172> XINCLUDE "/Shared/ted.include.ab3"
00013B1C <ted.include.ab3@173> XINCLUDE "/Shared/ted.include.ab3"
00013B56 <ted.include.ab3@174> XINCLUDE "/Shared/ted.include.ab3"
00013B60 <ted.include.ab3@177> XINCLUDE "/Shared/ted.include.ab3"
00013B66 <ted.include.ab3@178> XINCLUDE "/Shared/ted.include.ab3"
00013B7C <ted.include.ab3@180> XINCLUDE "/Shared/ted.include.ab3"
00013B86 <ted.include.ab3@181> XINCLUDE "/Shared/ted.include.ab3"
00013B9E <ted.include.ab3@183> XINCLUDE "/Shared/ted.include.ab3"
00013BA0 <ted.include.ab3@185> XINCLUDE "/Shared/ted.include.ab3"
00013BCE <ted.include.ab3@186> XINCLUDE "/Shared/ted.include.ab3"
00013BE8 <ted.include.ab3@190> XINCLUDE "/Shared/ted.include.ab3"
00013BFE <ted.include.ab3@191> XINCLUDE "/Shared/ted.include.ab3"
00013C32 <ted.include.ab3@192> XINCLUDE "/Shared/ted.include.ab3"
00013C36 <ted.include.ab3@194> XINCLUDE "/Shared/ted.include.ab3"
00013C50 <ted.include.ab3@196> XINCLUDE "/Shared/ted.include.ab3"
00013C66 <ted.include.ab3@197> XINCLUDE "/Shared/ted.include.ab3"
00013C9A <ted.include.ab3@198> XINCLUDE "/Shared/ted.include.ab3"
00013C9E <ted.include.ab3@200> XINCLUDE "/Shared/ted.include.ab3"
00013CB8 <ted.include.ab3@216> XINCLUDE "/Shared/ted.include.ab3"
00013CCE <ted.include.ab3@217> XINCLUDE "/Shared/ted.include.ab3"
00013D02 <ted.include.ab3@218> XINCLUDE "/Shared/ted.include.ab3"
00013D06 <ted.include.ab3@220> XINCLUDE "/Shared/ted.include.ab3"
00013D20 <ted.include.ab3@236> XINCLUDE "/Shared/ted.include.ab3"
00013D36 <ted.include.ab3@237> XINCLUDE "/Shared/ted.include.ab3"
00013D6A <ted.include.ab3@238> XINCLUDE "/Shared/ted.include.ab3"
00013D6E <ted.include.ab3@240> XINCLUDE "/Shared/ted.include.ab3"
00013D88 <ted.include.ab3@242> XINCLUDE "/Shared/ted.include.ab3"
00013D9E <ted.include.ab3@243> XINCLUDE "/Shared/ted.include.ab3"
00013DD2 <ted.include.ab3@244> XINCLUDE "/Shared/ted.include.ab3"
00013DD6 <ted.include.ab3@246> XINCLUDE "/Shared/ted.include.ab3"
00013DD6 <AmiBlitz3.ab3@92> XINCLUDE "/Shared/ted.include.ab3"
00013DD6 <CLIModeSupport.ab3@1> XINCLUDE "CLIModeSupport.ab3"
00013DEC <CLIModeSupport.ab3@4> XINCLUDE "CLIModeSupport.ab3"
00013E02 <CLIModeSupport.ab3@7> XINCLUDE "CLIModeSupport.ab3"
00013E10 <CLIModeSupport.ab3@8> XINCLUDE "CLIModeSupport.ab3"
00013E1E <CLIModeSupport.ab3@9> XINCLUDE "CLIModeSupport.ab3"
00013E28 <CLIModeSupport.ab3@11> XINCLUDE "CLIModeSupport.ab3"
00013E3A <CLIModeSupport.ab3@12> XINCLUDE "CLIModeSupport.ab3"
00013E4C <CLIModeSupport.ab3@13> XINCLUDE "CLIModeSupport.ab3"
00013E52 <CLIModeSupport.ab3@14> XINCLUDE "CLIModeSupport.ab3"
00013E8C <CLIModeSupport.ab3@15> XINCLUDE "CLIModeSupport.ab3"
00013E90 <CLIModeSupport.ab3@18> XINCLUDE "CLIModeSupport.ab3"
00013EA6 <CLIModeSupport.ab3@21> XINCLUDE "CLIModeSupport.ab3"
00013EBC <CLIModeSupport.ab3@23> XINCLUDE "CLIModeSupport.ab3"
00013EC8 <CLIModeSupport.ab3@24> XINCLUDE "CLIModeSupport.ab3"
00013ED4 <CLIModeSupport.ab3@25> XINCLUDE "CLIModeSupport.ab3"
00013EDC <CLIModeSupport.ab3@26> XINCLUDE "CLIModeSupport.ab3"
00013EE4 <CLIModeSupport.ab3@27> XINCLUDE "CLIModeSupport.ab3"
00013EE8 <CLIModeSupport.ab3@28> XINCLUDE "CLIModeSupport.ab3"
00013F12 <CLIModeSupport.ab3@47> XINCLUDE "CLIModeSupport.ab3"
00013F3E <CLIModeSupport.ab3@49> XINCLUDE "CLIModeSupport.ab3"
00013F50 <CLIModeSupport.ab3@50> XINCLUDE "CLIModeSupport.ab3"
00013F68 <CLIModeSupport.ab3@52> XINCLUDE "CLIModeSupport.ab3"
00013F7E <CLIModeSupport.ab3@56> XINCLUDE "CLIModeSupport.ab3"
00013F84 <CLIModeSupport.ab3@58> XINCLUDE "CLIModeSupport.ab3"
00013FBA <CLIModeSupport.ab3@61> XINCLUDE "CLIModeSupport.ab3"
00013FF2 <CLIModeSupport.ab3@62> XINCLUDE "CLIModeSupport.ab3"
0001402A <CLIModeSupport.ab3@63> XINCLUDE "CLIModeSupport.ab3"
00014062 <CLIModeSupport.ab3@64> XINCLUDE "CLIModeSupport.ab3"
0001409A <CLIModeSupport.ab3@65> XINCLUDE "CLIModeSupport.ab3"
000140D2 <CLIModeSupport.ab3@66> XINCLUDE "CLIModeSupport.ab3"
0001410A <CLIModeSupport.ab3@67> XINCLUDE "CLIModeSupport.ab3"
00014142 <CLIModeSupport.ab3@68> XINCLUDE "CLIModeSupport.ab3"
0001417A <CLIModeSupport.ab3@69> XINCLUDE "CLIModeSupport.ab3"
000141B2 <CLIModeSupport.ab3@70> XINCLUDE "CLIModeSupport.ab3"
000141EA <CLIModeSupport.ab3@71> XINCLUDE "CLIModeSupport.ab3"
00014222 <CLIModeSupport.ab3@72> XINCLUDE "CLIModeSupport.ab3"
0001425A <CLIModeSupport.ab3@73> XINCLUDE "CLIModeSupport.ab3"
0001428E <CLIModeSupport.ab3@74> XINCLUDE "CLIModeSupport.ab3"
00014298 <CLIModeSupport.ab3@75> XINCLUDE "CLIModeSupport.ab3"
000142A2 <CLIModeSupport.ab3@77> XINCLUDE "CLIModeSupport.ab3"
000142AC <CLIModeSupport.ab3@78> XINCLUDE "CLIModeSupport.ab3"
000142D6 <CLIModeSupport.ab3@82> XINCLUDE "CLIModeSupport.ab3"
000142E0 <CLIModeSupport.ab3@83> XINCLUDE "CLIModeSupport.ab3"
000142E4 <CLIModeSupport.ab3@84> XINCLUDE "CLIModeSupport.ab3"
00014318 <CLIModeSupport.ab3@85> XINCLUDE "CLIModeSupport.ab3"
00014336 <CLIModeSupport.ab3@88> XINCLUDE "CLIModeSupport.ab3"
00014340 <CLIModeSupport.ab3@89> XINCLUDE "CLIModeSupport.ab3"
0001434C <CLIModeSupport.ab3@90> XINCLUDE "CLIModeSupport.ab3"
00014352 <CLIModeSupport.ab3@91> XINCLUDE "CLIModeSupport.ab3"
0001435E <CLIModeSupport.ab3@92> XINCLUDE "CLIModeSupport.ab3"
00014364 <CLIModeSupport.ab3@93> XINCLUDE "CLIModeSupport.ab3"
00014370 <CLIModeSupport.ab3@94> XINCLUDE "CLIModeSupport.ab3"
00014376 <CLIModeSupport.ab3@95> XINCLUDE "CLIModeSupport.ab3"
0001437C <CLIModeSupport.ab3@98> XINCLUDE "CLIModeSupport.ab3"
000143B6 <CLIModeSupport.ab3@99> XINCLUDE "CLIModeSupport.ab3"
000143BC <CLIModeSupport.ab3@100> XINCLUDE "CLIModeSupport.ab3"
000143D2 <CLIModeSupport.ab3@103> XINCLUDE "CLIModeSupport.ab3"
000143DC <CLIModeSupport.ab3@105> XINCLUDE "CLIModeSupport.ab3"
000143E2 <CLIModeSupport.ab3@106> XINCLUDE "CLIModeSupport.ab3"
000143E8 <CLIModeSupport.ab3@108> XINCLUDE "CLIModeSupport.ab3"
000143E9 <CLIModeSupport.ab3@110> XINCLUDE "CLIModeSupport.ab3"
000143EA <CLIModeSupport.ab3@111> XINCLUDE "CLIModeSupport.ab3"
000143EB <CLIModeSupport.ab3@112> XINCLUDE "CLIModeSupport.ab3"
000143EC <CLIModeSupport.ab3@113> XINCLUDE "CLIModeSupport.ab3"
000143EE <CLIModeSupport.ab3@118> XINCLUDE "CLIModeSupport.ab3"
000143F0 <CLIModeSupport.ab3@119> XINCLUDE "CLIModeSupport.ab3"
000143F2 <CLIModeSupport.ab3@122> XINCLUDE "CLIModeSupport.ab3"
000143F4 <CLIModeSupport.ab3@123> XINCLUDE "CLIModeSupport.ab3"
000143F8 <CLIModeSupport.ab3@124> XINCLUDE "CLIModeSupport.ab3"
000143FA <CLIModeSupport.ab3@126> XINCLUDE "CLIModeSupport.ab3"
000143FC <CLIModeSupport.ab3@127> XINCLUDE "CLIModeSupport.ab3"
00014400 <CLIModeSupport.ab3@128> XINCLUDE "CLIModeSupport.ab3"
00014402 <CLIModeSupport.ab3@129> XINCLUDE "CLIModeSupport.ab3"
00014404 <CLIModeSupport.ab3@156> XINCLUDE "CLIModeSupport.ab3"
00014406 <CLIModeSupport.ab3@157> XINCLUDE "CLIModeSupport.ab3"
00014408 <CLIModeSupport.ab3@158> XINCLUDE "CLIModeSupport.ab3"
0001440A <CLIModeSupport.ab3@159> XINCLUDE "CLIModeSupport.ab3"
0001440C <CLIModeSupport.ab3@163> XINCLUDE "CLIModeSupport.ab3"
00014410 <CLIModeSupport.ab3@164> XINCLUDE "CLIModeSupport.ab3"
00014416 <CLIModeSupport.ab3@172> XINCLUDE "CLIModeSupport.ab3"
0001441A <CLIModeSupport.ab3@173> XINCLUDE "CLIModeSupport.ab3"
0001441C <CLIModeSupport.ab3@176> XINCLUDE "CLIModeSupport.ab3"
00014420 <CLIModeSupport.ab3@177> XINCLUDE "CLIModeSupport.ab3"
00014422 <CLIModeSupport.ab3@178> XINCLUDE "CLIModeSupport.ab3"
00014424 <CLIModeSupport.ab3@179> XINCLUDE "CLIModeSupport.ab3"
00014426 <CLIModeSupport.ab3@180> XINCLUDE "CLIModeSupport.ab3"
00014428 <CLIModeSupport.ab3@181> XINCLUDE "CLIModeSupport.ab3"
0001442A <CLIModeSupport.ab3@184> XINCLUDE "CLIModeSupport.ab3"
0001442C <CLIModeSupport.ab3@186> XINCLUDE "CLIModeSupport.ab3"
00014432 <CLIModeSupport.ab3@187> XINCLUDE "CLIModeSupport.ab3"
00014438 <CLIModeSupport.ab3@192> XINCLUDE "CLIModeSupport.ab3"
0001443A <CLIModeSupport.ab3@196> XINCLUDE "CLIModeSupport.ab3"
0001443E <CLIModeSupport.ab3@198> XINCLUDE "CLIModeSupport.ab3"
00014442 <CLIModeSupport.ab3@199> XINCLUDE "CLIModeSupport.ab3"
00014448 <CLIModeSupport.ab3@200> XINCLUDE "CLIModeSupport.ab3"
0001444E <CLIModeSupport.ab3@203> XINCLUDE "CLIModeSupport.ab3"
00014452 <CLIModeSupport.ab3@204> XINCLUDE "CLIModeSupport.ab3"
00014456 <CLIModeSupport.ab3@206> XINCLUDE "CLIModeSupport.ab3"
0001445C <CLIModeSupport.ab3@209> XINCLUDE "CLIModeSupport.ab3"
00014460 <CLIModeSupport.ab3@210> XINCLUDE "CLIModeSupport.ab3"
00014466 <CLIModeSupport.ab3@213> XINCLUDE "CLIModeSupport.ab3"
0001446C <CLIModeSupport.ab3@216> XINCLUDE "CLIModeSupport.ab3"
00014470 <CLIModeSupport.ab3@217> XINCLUDE "CLIModeSupport.ab3"
00014476 <CLIModeSupport.ab3@220> XINCLUDE "CLIModeSupport.ab3"
0001447A <CLIModeSupport.ab3@221> XINCLUDE "CLIModeSupport.ab3"
00014480 <CLIModeSupport.ab3@222> XINCLUDE "CLIModeSupport.ab3"
00014484 <CLIModeSupport.ab3@223> XINCLUDE "CLIModeSupport.ab3"
00014488 <CLIModeSupport.ab3@228> XINCLUDE "CLIModeSupport.ab3"
0001448C <CLIModeSupport.ab3@229> XINCLUDE "CLIModeSupport.ab3"
00014490 <CLIModeSupport.ab3@230> XINCLUDE "CLIModeSupport.ab3"
00014494 <CLIModeSupport.ab3@231> XINCLUDE "CLIModeSupport.ab3"
00014498 <CLIModeSupport.ab3@232> XINCLUDE "CLIModeSupport.ab3"
0001449C <CLIModeSupport.ab3@236> XINCLUDE "CLIModeSupport.ab3"
000144A0 <CLIModeSupport.ab3@237> XINCLUDE "CLIModeSupport.ab3"
000144A4 <CLIModeSupport.ab3@238> XINCLUDE "CLIModeSupport.ab3"
000144A8 <CLIModeSupport.ab3@239> XINCLUDE "CLIModeSupport.ab3"
000144AC <CLIModeSupport.ab3@240> XINCLUDE "CLIModeSupport.ab3"
000144B0 <CLIModeSupport.ab3@241> XINCLUDE "CLIModeSupport.ab3"
000144B6 <CLIModeSupport.ab3@242> XINCLUDE "CLIModeSupport.ab3"
000144BA <CLIModeSupport.ab3@243> XINCLUDE "CLIModeSupport.ab3"
000144C0 <CLIModeSupport.ab3@246> XINCLUDE "CLIModeSupport.ab3"
000144C2 <CLIModeSupport.ab3@247> XINCLUDE "CLIModeSupport.ab3"
000144C6 <CLIModeSupport.ab3@248> XINCLUDE "CLIModeSupport.ab3"
000144CA <CLIModeSupport.ab3@249> XINCLUDE "CLIModeSupport.ab3"
000144CE <CLIModeSupport.ab3@253> XINCLUDE "CLIModeSupport.ab3"
000144D2 <CLIModeSupport.ab3@254> XINCLUDE "CLIModeSupport.ab3"
000144D6 <CLIModeSupport.ab3@255> XINCLUDE "CLIModeSupport.ab3"
000144DA <CLIModeSupport.ab3@256> XINCLUDE "CLIModeSupport.ab3"
000144DE <CLIModeSupport.ab3@258> XINCLUDE "CLIModeSupport.ab3"
000144E2 <CLIModeSupport.ab3@259> XINCLUDE "CLIModeSupport.ab3"
000144E8 <CLIModeSupport.ab3@262> XINCLUDE "CLIModeSupport.ab3"
000144EA <CLIModeSupport.ab3@263> XINCLUDE "CLIModeSupport.ab3"
000144EE <CLIModeSupport.ab3@264> XINCLUDE "CLIModeSupport.ab3"
000144F2 <CLIModeSupport.ab3@267> XINCLUDE "CLIModeSupport.ab3"
000144F6 <CLIModeSupport.ab3@268> XINCLUDE "CLIModeSupport.ab3"
000144FA <CLIModeSupport.ab3@269> XINCLUDE "CLIModeSupport.ab3"
000144FE <CLIModeSupport.ab3@272> XINCLUDE "CLIModeSupport.ab3"
00014502 <CLIModeSupport.ab3@273> XINCLUDE "CLIModeSupport.ab3"
00014506 <CLIModeSupport.ab3@275> XINCLUDE "CLIModeSupport.ab3"
0001450A <CLIModeSupport.ab3@276> XINCLUDE "CLIModeSupport.ab3"
0001450E <CLIModeSupport.ab3@277> XINCLUDE "CLIModeSupport.ab3"
00014512 <CLIModeSupport.ab3@278> XINCLUDE "CLIModeSupport.ab3"
00014516 <CLIModeSupport.ab3@279> XINCLUDE "CLIModeSupport.ab3"
0001451A <CLIModeSupport.ab3@280> XINCLUDE "CLIModeSupport.ab3"
0001451E <CLIModeSupport.ab3@281> XINCLUDE "CLIModeSupport.ab3"
00014522 <CLIModeSupport.ab3@282> XINCLUDE "CLIModeSupport.ab3"
00014526 <CLIModeSupport.ab3@283> XINCLUDE "CLIModeSupport.ab3"
0001452A <CLIModeSupport.ab3@284> XINCLUDE "CLIModeSupport.ab3"
0001452E <CLIModeSupport.ab3@285> XINCLUDE "CLIModeSupport.ab3"
00014532 <CLIModeSupport.ab3@286> XINCLUDE "CLIModeSupport.ab3"
00014538 <CLIModeSupport.ab3@289> XINCLUDE "CLIModeSupport.ab3"
0001453A <CLIModeSupport.ab3@290> XINCLUDE "CLIModeSupport.ab3"
0001453E <CLIModeSupport.ab3@292> XINCLUDE "CLIModeSupport.ab3"
00014542 <CLIModeSupport.ab3@293> XINCLUDE "CLIModeSupport.ab3"
00014548 <CLIModeSupport.ab3@294> XINCLUDE "CLIModeSupport.ab3"
0001454E <CLIModeSupport.ab3@297> XINCLUDE "CLIModeSupport.ab3"
00014552 <CLIModeSupport.ab3@298> XINCLUDE "CLIModeSupport.ab3"
00014556 <CLIModeSupport.ab3@300> XINCLUDE "CLIModeSupport.ab3"
0001455C <CLIModeSupport.ab3@303> XINCLUDE "CLIModeSupport.ab3"
00014560 <CLIModeSupport.ab3@304> XINCLUDE "CLIModeSupport.ab3"
00014566 <CLIModeSupport.ab3@305> XINCLUDE "CLIModeSupport.ab3"
0001456A <CLIModeSupport.ab3@306> XINCLUDE "CLIModeSupport.ab3"
0001456C <CLIModeSupport.ab3@310> XINCLUDE "CLIModeSupport.ab3"
00014572 <CLIModeSupport.ab3@311> XINCLUDE "CLIModeSupport.ab3"
00014574 <CLIModeSupport.ab3@314> XINCLUDE "CLIModeSupport.ab3"
00014576 <CLIModeSupport.ab3@315> XINCLUDE "CLIModeSupport.ab3"
00014578 <CLIModeSupport.ab3@316> XINCLUDE "CLIModeSupport.ab3"
0001457A <CLIModeSupport.ab3@319> XINCLUDE "CLIModeSupport.ab3"
0001457E <CLIModeSupport.ab3@320> XINCLUDE "CLIModeSupport.ab3"
00014580 <CLIModeSupport.ab3@321> XINCLUDE "CLIModeSupport.ab3"
00014584 <CLIModeSupport.ab3@322> XINCLUDE "CLIModeSupport.ab3"
00014588 <CLIModeSupport.ab3@323> XINCLUDE "CLIModeSupport.ab3"
0001458C <CLIModeSupport.ab3@324> XINCLUDE "CLIModeSupport.ab3"
0001458E <CLIModeSupport.ab3@325> XINCLUDE "CLIModeSupport.ab3"
00014592 <CLIModeSupport.ab3@326> XINCLUDE "CLIModeSupport.ab3"
00014594 <CLIModeSupport.ab3@330> XINCLUDE "CLIModeSupport.ab3"
00014596 <CLIModeSupport.ab3@331> XINCLUDE "CLIModeSupport.ab3"
0001459A <CLIModeSupport.ab3@332> XINCLUDE "CLIModeSupport.ab3"
0001459C <CLIModeSupport.ab3@333> XINCLUDE "CLIModeSupport.ab3"
000145A0 <CLIModeSupport.ab3@334> XINCLUDE "CLIModeSupport.ab3"
000145A2 <CLIModeSupport.ab3@338> XINCLUDE "CLIModeSupport.ab3"
000145A6 <CLIModeSupport.ab3@339> XINCLUDE "CLIModeSupport.ab3"
000145AC <CLIModeSupport.ab3@342> XINCLUDE "CLIModeSupport.ab3"
000145AE <CLIModeSupport.ab3@343> XINCLUDE "CLIModeSupport.ab3"
000145B2 <CLIModeSupport.ab3@345> XINCLUDE "CLIModeSupport.ab3"
000145B6 <CLIModeSupport.ab3@346> XINCLUDE "CLIModeSupport.ab3"
000145BC <CLIModeSupport.ab3@347> XINCLUDE "CLIModeSupport.ab3"
000145C2 <CLIModeSupport.ab3@350> XINCLUDE "CLIModeSupport.ab3"
000145C6 <CLIModeSupport.ab3@351> XINCLUDE "CLIModeSupport.ab3"
000145CA <CLIModeSupport.ab3@353> XINCLUDE "CLIModeSupport.ab3"
000145D0 <CLIModeSupport.ab3@356> XINCLUDE "CLIModeSupport.ab3"
000145D4 <CLIModeSupport.ab3@357> XINCLUDE "CLIModeSupport.ab3"
000145DA <CLIModeSupport.ab3@358> XINCLUDE "CLIModeSupport.ab3"
000145DE <CLIModeSupport.ab3@359> XINCLUDE "CLIModeSupport.ab3"
000145E2 <CLIModeSupport.ab3@360> XINCLUDE "CLIModeSupport.ab3"
000145E4 <CLIModeSupport.ab3@363> XINCLUDE "CLIModeSupport.ab3"
000145E8 <CLIModeSupport.ab3@364> XINCLUDE "CLIModeSupport.ab3"
000145EE <CLIModeSupport.ab3@365> XINCLUDE "CLIModeSupport.ab3"
000145F2 <CLIModeSupport.ab3@366> XINCLUDE "CLIModeSupport.ab3"
000145F6 <CLIModeSupport.ab3@368> XINCLUDE "CLIModeSupport.ab3"
000145FA <CLIModeSupport.ab3@369> XINCLUDE "CLIModeSupport.ab3"
000145FE <CLIModeSupport.ab3@370> XINCLUDE "CLIModeSupport.ab3"
00014602 <CLIModeSupport.ab3@371> XINCLUDE "CLIModeSupport.ab3"
00014606 <CLIModeSupport.ab3@372> XINCLUDE "CLIModeSupport.ab3"
0001460A <CLIModeSupport.ab3@376> XINCLUDE "CLIModeSupport.ab3"
0001460E <CLIModeSupport.ab3@377> XINCLUDE "CLIModeSupport.ab3"
00014610 <CLIModeSupport.ab3@378> XINCLUDE "CLIModeSupport.ab3"
00014612 <CLIModeSupport.ab3@379> XINCLUDE "CLIModeSupport.ab3"
00014614 <CLIModeSupport.ab3@382> XINCLUDE "CLIModeSupport.ab3"
00014618 <CLIModeSupport.ab3@383> XINCLUDE "CLIModeSupport.ab3"
0001461A <CLIModeSupport.ab3@384> XINCLUDE "CLIModeSupport.ab3"
0001461C <CLIModeSupport.ab3@385> XINCLUDE "CLIModeSupport.ab3"
0001461E <CLIModeSupport.ab3@386> XINCLUDE "CLIModeSupport.ab3"
00014620 <CLIModeSupport.ab3@387> XINCLUDE "CLIModeSupport.ab3"
00014622 <CLIModeSupport.ab3@388> XINCLUDE "CLIModeSupport.ab3"
00014626 <CLIModeSupport.ab3@389> XINCLUDE "CLIModeSupport.ab3"
00014628 <CLIModeSupport.ab3@390> XINCLUDE "CLIModeSupport.ab3"
0001462C <CLIModeSupport.ab3@391> XINCLUDE "CLIModeSupport.ab3"
0001462E <CLIModeSupport.ab3@395> XINCLUDE "CLIModeSupport.ab3"
00014630 <CLIModeSupport.ab3@396> XINCLUDE "CLIModeSupport.ab3"
00014632 <CLIModeSupport.ab3@397> XINCLUDE "CLIModeSupport.ab3"
00014636 <CLIModeSupport.ab3@398> XINCLUDE "CLIModeSupport.ab3"
00014638 <CLIModeSupport.ab3@399> XINCLUDE "CLIModeSupport.ab3"
0001463A <CLIModeSupport.ab3@403> XINCLUDE "CLIModeSupport.ab3"
0001463C <CLIModeSupport.ab3@406> XINCLUDE "CLIModeSupport.ab3"
00014640 <CLIModeSupport.ab3@407> XINCLUDE "CLIModeSupport.ab3"
00014644 <CLIModeSupport.ab3@412> XINCLUDE "CLIModeSupport.ab3"
00014648 <CLIModeSupport.ab3@413> XINCLUDE "CLIModeSupport.ab3"
0001464C <CLIModeSupport.ab3@414> XINCLUDE "CLIModeSupport.ab3"
00014650 <CLIModeSupport.ab3@415> XINCLUDE "CLIModeSupport.ab3"
00014654 <CLIModeSupport.ab3@416> XINCLUDE "CLIModeSupport.ab3"
00014658 <CLIModeSupport.ab3@417> XINCLUDE "CLIModeSupport.ab3"
0001465C <CLIModeSupport.ab3@418> XINCLUDE "CLIModeSupport.ab3"
00014660 <CLIModeSupport.ab3@419> XINCLUDE "CLIModeSupport.ab3"
00014662 <CLIModeSupport.ab3@422> XINCLUDE "CLIModeSupport.ab3"
00014664 <CLIModeSupport.ab3@425> XINCLUDE "CLIModeSupport.ab3"
00014666 <CLIModeSupport.ab3@429> XINCLUDE "CLIModeSupport.ab3"
0001466A <CLIModeSupport.ab3@430> XINCLUDE "CLIModeSupport.ab3"
0001466C <CLIModeSupport.ab3@431> XINCLUDE "CLIModeSupport.ab3"
0001466E <CLIModeSupport.ab3@432> XINCLUDE "CLIModeSupport.ab3"
00014684 <CLIModeSupport.ab3@437> XINCLUDE "CLIModeSupport.ab3"
0001468A <CLIModeSupport.ab3@438> XINCLUDE "CLIModeSupport.ab3"
000146C8 <CLIModeSupport.ab3@440> XINCLUDE "CLIModeSupport.ab3"
000146CC <CLIModeSupport.ab3@441> XINCLUDE "CLIModeSupport.ab3"
000146D6 <CLIModeSupport.ab3@442> XINCLUDE "CLIModeSupport.ab3"
000146D8 <CLIModeSupport.ab3@443> XINCLUDE "CLIModeSupport.ab3"
0001470C <CLIModeSupport.ab3@444> XINCLUDE "CLIModeSupport.ab3"
0001471C <CLIModeSupport.ab3@445> XINCLUDE "CLIModeSupport.ab3"
0001471E <CLIModeSupport.ab3@448> XINCLUDE "CLIModeSupport.ab3"
00014756 <CLIModeSupport.ab3@449> XINCLUDE "CLIModeSupport.ab3"
0001478E <CLIModeSupport.ab3@450> XINCLUDE "CLIModeSupport.ab3"
000147C6 <CLIModeSupport.ab3@451> XINCLUDE "CLIModeSupport.ab3"
000147D0 <CLIModeSupport.ab3@453> XINCLUDE "CLIModeSupport.ab3"
000147D6 <CLIModeSupport.ab3@454> XINCLUDE "CLIModeSupport.ab3"
000147EC <CLIModeSupport.ab3@458> XINCLUDE "CLIModeSupport.ab3"
0001482A <CLIModeSupport.ab3@459> XINCLUDE "CLIModeSupport.ab3"
0001482E <CLIModeSupport.ab3@460> XINCLUDE "CLIModeSupport.ab3"
00014836 <CLIModeSupport.ab3@461> XINCLUDE "CLIModeSupport.ab3"
00014874 <CLIModeSupport.ab3@462> XINCLUDE "CLIModeSupport.ab3"
00014876 <CLIModeSupport.ab3@463> XINCLUDE "CLIModeSupport.ab3"
0001487A <CLIModeSupport.ab3@464> XINCLUDE "CLIModeSupport.ab3"
000148B8 <CLIModeSupport.ab3@466> XINCLUDE "CLIModeSupport.ab3"
000148BC <CLIModeSupport.ab3@467> XINCLUDE "CLIModeSupport.ab3"
000148FA <CLIModeSupport.ab3@469> XINCLUDE "CLIModeSupport.ab3"
000148FE <CLIModeSupport.ab3@470> XINCLUDE "CLIModeSupport.ab3"
00014928 <CLIModeSupport.ab3@472> XINCLUDE "CLIModeSupport.ab3"
00014932 <CLIModeSupport.ab3@473> XINCLUDE "CLIModeSupport.ab3"
00014946 <CLIModeSupport.ab3@474> XINCLUDE "CLIModeSupport.ab3"
0001496C <CLIModeSupport.ab3@475> XINCLUDE "CLIModeSupport.ab3"
00014972 <CLIModeSupport.ab3@476> XINCLUDE "CLIModeSupport.ab3"
00014980 <CLIModeSupport.ab3@477> XINCLUDE "CLIModeSupport.ab3"
00014986 <CLIModeSupport.ab3@478> XINCLUDE "CLIModeSupport.ab3"
000149BE <CLIModeSupport.ab3@480> XINCLUDE "CLIModeSupport.ab3"
000149C2 <CLIModeSupport.ab3@483> XINCLUDE "CLIModeSupport.ab3"
000149EC <CLIModeSupport.ab3@486> XINCLUDE "CLIModeSupport.ab3"
000149F2 <CLIModeSupport.ab3@487> XINCLUDE "CLIModeSupport.ab3"
00014A12 <CLIModeSupport.ab3@488> XINCLUDE "CLIModeSupport.ab3"
00014A1C <CLIModeSupport.ab3@489> XINCLUDE "CLIModeSupport.ab3"
00014A20 <CLIModeSupport.ab3@490> XINCLUDE "CLIModeSupport.ab3"
00014A22 <CLIModeSupport.ab3@491> XINCLUDE "CLIModeSupport.ab3"
00014A40 <CLIModeSupport.ab3@492> XINCLUDE "CLIModeSupport.ab3"
00014A42 <CLIModeSupport.ab3@493> XINCLUDE "CLIModeSupport.ab3"
00014A48 <CLIModeSupport.ab3@494> XINCLUDE "CLIModeSupport.ab3"
00014A4E <CLIModeSupport.ab3@495> XINCLUDE "CLIModeSupport.ab3"
00014A78 <CLIModeSupport.ab3@497> XINCLUDE "CLIModeSupport.ab3"
00014A7A <CLIModeSupport.ab3@498> XINCLUDE "CLIModeSupport.ab3"
00014AA8 <CLIModeSupport.ab3@499> XINCLUDE "CLIModeSupport.ab3"
00014AAC <CLIModeSupport.ab3@500> XINCLUDE "CLIModeSupport.ab3"
00014ADA <CLIModeSupport.ab3@501> XINCLUDE "CLIModeSupport.ab3"
00014ADE <CLIModeSupport.ab3@502> XINCLUDE "CLIModeSupport.ab3"
00014B04 <CLIModeSupport.ab3@504> XINCLUDE "CLIModeSupport.ab3"
00014B14 <CLIModeSupport.ab3@505> XINCLUDE "CLIModeSupport.ab3"
00014B1A <CLIModeSupport.ab3@506> XINCLUDE "CLIModeSupport.ab3"
00014B20 <CLIModeSupport.ab3@507> XINCLUDE "CLIModeSupport.ab3"
00014B5A <CLIModeSupport.ab3@508> XINCLUDE "CLIModeSupport.ab3"
00014B64 <CLIModeSupport.ab3@510> XINCLUDE "CLIModeSupport.ab3"
00014B7E <CLIModeSupport.ab3@511> XINCLUDE "CLIModeSupport.ab3"
00014B9C <CLIModeSupport.ab3@523> XINCLUDE "CLIModeSupport.ab3"
00014BA4 <CLIModeSupport.ab3@524> XINCLUDE "CLIModeSupport.ab3"
00014BAA <CLIModeSupport.ab3@525> XINCLUDE "CLIModeSupport.ab3"
00014BB0 <CLIModeSupport.ab3@526> XINCLUDE "CLIModeSupport.ab3"
00014BD2 <CLIModeSupport.ab3@527> XINCLUDE "CLIModeSupport.ab3"
00014BEA <CLIModeSupport.ab3@529> XINCLUDE "CLIModeSupport.ab3"
00014C10 <CLIModeSupport.ab3@530> XINCLUDE "CLIModeSupport.ab3"
00014C3A <CLIModeSupport.ab3@531> XINCLUDE "CLIModeSupport.ab3"
00014C48 <CLIModeSupport.ab3@532> XINCLUDE "CLIModeSupport.ab3"
00014C4E <CLIModeSupport.ab3@533> XINCLUDE "CLIModeSupport.ab3"
00014C62 <CLIModeSupport.ab3@534> XINCLUDE "CLIModeSupport.ab3"
00014C7A <CLIModeSupport.ab3@536> XINCLUDE "CLIModeSupport.ab3"
00014C88 <CLIModeSupport.ab3@537> XINCLUDE "CLIModeSupport.ab3"
00014C9C <CLIModeSupport.ab3@538> XINCLUDE "CLIModeSupport.ab3"
00014CD2 <CLIModeSupport.ab3@539> XINCLUDE "CLIModeSupport.ab3"
00014CE0 <CLIModeSupport.ab3@540> XINCLUDE "CLIModeSupport.ab3"
00014D10 <CLIModeSupport.ab3@541> XINCLUDE "CLIModeSupport.ab3"
00014D1E <CLIModeSupport.ab3@542> XINCLUDE "CLIModeSupport.ab3"
00014D24 <CLIModeSupport.ab3@543> XINCLUDE "CLIModeSupport.ab3"
00014D32 <CLIModeSupport.ab3@544> XINCLUDE "CLIModeSupport.ab3"
00014D38 <CLIModeSupport.ab3@545> XINCLUDE "CLIModeSupport.ab3"
00014D3E <CLIModeSupport.ab3@547> XINCLUDE "CLIModeSupport.ab3"
00014D4C <CLIModeSupport.ab3@548> XINCLUDE "CLIModeSupport.ab3"
00014D4E <CLIModeSupport.ab3@549> XINCLUDE "CLIModeSupport.ab3"
00014D54 <CLIModeSupport.ab3@551> XINCLUDE "CLIModeSupport.ab3"
00014D6A <CLIModeSupport.ab3@553> XINCLUDE "CLIModeSupport.ab3"
00014D74 <CLIModeSupport.ab3@554> XINCLUDE "CLIModeSupport.ab3"
00014D7A <CLIModeSupport.ab3@555> XINCLUDE "CLIModeSupport.ab3"
00014DA4 <CLIModeSupport.ab3@559> XINCLUDE "CLIModeSupport.ab3"
00014DE2 <CLIModeSupport.ab3@562> XINCLUDE "CLIModeSupport.ab3"
00014DE6 <CLIModeSupport.ab3@563> XINCLUDE "CLIModeSupport.ab3"
00014E24 <CLIModeSupport.ab3@564> XINCLUDE "CLIModeSupport.ab3"
00014E28 <CLIModeSupport.ab3@565> XINCLUDE "CLIModeSupport.ab3"
00014E66 <CLIModeSupport.ab3@566> XINCLUDE "CLIModeSupport.ab3"
00014E6A <CLIModeSupport.ab3@567> XINCLUDE "CLIModeSupport.ab3"
00014E72 <CLIModeSupport.ab3@569> XINCLUDE "CLIModeSupport.ab3"
00014E7A <CLIModeSupport.ab3@570> XINCLUDE "CLIModeSupport.ab3"
00014EBE <CLIModeSupport.ab3@572> XINCLUDE "CLIModeSupport.ab3"
00014ED0 <CLIModeSupport.ab3@573> XINCLUDE "CLIModeSupport.ab3"
00014EDE <CLIModeSupport.ab3@574> XINCLUDE "CLIModeSupport.ab3"
00014F12 <CLIModeSupport.ab3@575> XINCLUDE "CLIModeSupport.ab3"
00014F36 <CLIModeSupport.ab3@577> XINCLUDE "CLIModeSupport.ab3"
00014F40 <CLIModeSupport.ab3@578> XINCLUDE "CLIModeSupport.ab3"
00014F5A <CLIModeSupport.ab3@579> XINCLUDE "CLIModeSupport.ab3"
00014F6E <CLIModeSupport.ab3@580> XINCLUDE "CLIModeSupport.ab3"
00014FC6 <CLIModeSupport.ab3@581> XINCLUDE "CLIModeSupport.ab3"
00015066 <CLIModeSupport.ab3@582> XINCLUDE "CLIModeSupport.ab3"
0001506E <CLIModeSupport.ab3@583> XINCLUDE "CLIModeSupport.ab3"
000150A6 <CLIModeSupport.ab3@584> XINCLUDE "CLIModeSupport.ab3"
000150AC <CLIModeSupport.ab3@585> XINCLUDE "CLIModeSupport.ab3"
000150BC <CLIModeSupport.ab3@586> XINCLUDE "CLIModeSupport.ab3"
000150E4 <CLIModeSupport.ab3@589> XINCLUDE "CLIModeSupport.ab3"
0001510C <CLIModeSupport.ab3@590> XINCLUDE "CLIModeSupport.ab3"
00015114 <CLIModeSupport.ab3@591> XINCLUDE "CLIModeSupport.ab3"
0001511A <CLIModeSupport.ab3@592> XINCLUDE "CLIModeSupport.ab3"
00015122 <CLIModeSupport.ab3@593> XINCLUDE "CLIModeSupport.ab3"
0001512A <CLIModeSupport.ab3@594> XINCLUDE "CLIModeSupport.ab3"
00015152 <CLIModeSupport.ab3@595> XINCLUDE "CLIModeSupport.ab3"
0001515A <CLIModeSupport.ab3@596> XINCLUDE "CLIModeSupport.ab3"
00015162 <CLIModeSupport.ab3@597> XINCLUDE "CLIModeSupport.ab3"
00015168 <CLIModeSupport.ab3@598> XINCLUDE "CLIModeSupport.ab3"
0001516E <CLIModeSupport.ab3@599> XINCLUDE "CLIModeSupport.ab3"
00015174 <CLIModeSupport.ab3@600> XINCLUDE "CLIModeSupport.ab3"
0001517A <CLIModeSupport.ab3@601> XINCLUDE "CLIModeSupport.ab3"
00015180 <CLIModeSupport.ab3@602> XINCLUDE "CLIModeSupport.ab3"
00015186 <CLIModeSupport.ab3@603> XINCLUDE "CLIModeSupport.ab3"
0001518C <CLIModeSupport.ab3@604> XINCLUDE "CLIModeSupport.ab3"
00015192 <CLIModeSupport.ab3@605> XINCLUDE "CLIModeSupport.ab3"
0001519A <CLIModeSupport.ab3@606> XINCLUDE "CLIModeSupport.ab3"
000151A2 <CLIModeSupport.ab3@607> XINCLUDE "CLIModeSupport.ab3"
000151CA <CLIModeSupport.ab3@608> XINCLUDE "CLIModeSupport.ab3"
000151D0 <CLIModeSupport.ab3@609> XINCLUDE "CLIModeSupport.ab3"
000151D6 <CLIModeSupport.ab3@610> XINCLUDE "CLIModeSupport.ab3"
000151DE <CLIModeSupport.ab3@611> XINCLUDE "CLIModeSupport.ab3"
000151FE <CLIModeSupport.ab3@615> XINCLUDE "CLIModeSupport.ab3"
0001520E <CLIModeSupport.ab3@617> XINCLUDE "CLIModeSupport.ab3"
0001521E <CLIModeSupport.ab3@618> XINCLUDE "CLIModeSupport.ab3"
0001522E <CLIModeSupport.ab3@620> XINCLUDE "CLIModeSupport.ab3"
0001523E <CLIModeSupport.ab3@621> XINCLUDE "CLIModeSupport.ab3"
0001524E <CLIModeSupport.ab3@622> XINCLUDE "CLIModeSupport.ab3"
0001525E <CLIModeSupport.ab3@623> XINCLUDE "CLIModeSupport.ab3"
0001526E <CLIModeSupport.ab3@624> XINCLUDE "CLIModeSupport.ab3"
0001527E <CLIModeSupport.ab3@625> XINCLUDE "CLIModeSupport.ab3"
0001528E <CLIModeSupport.ab3@626> XINCLUDE "CLIModeSupport.ab3"
0001529E <CLIModeSupport.ab3@627> XINCLUDE "CLIModeSupport.ab3"
000152AE <CLIModeSupport.ab3@628> XINCLUDE "CLIModeSupport.ab3"
000152BE <CLIModeSupport.ab3@629> XINCLUDE "CLIModeSupport.ab3"
000152CE <CLIModeSupport.ab3@630> XINCLUDE "CLIModeSupport.ab3"
000152DE <CLIModeSupport.ab3@631> XINCLUDE "CLIModeSupport.ab3"
000152EE <CLIModeSupport.ab3@632> XINCLUDE "CLIModeSupport.ab3"
000152FE <CLIModeSupport.ab3@633> XINCLUDE "CLIModeSupport.ab3"
00015312 <CLIModeSupport.ab3@635> XINCLUDE "CLIModeSupport.ab3"
00015324 <CLIModeSupport.ab3@636> XINCLUDE "CLIModeSupport.ab3"
00015336 <CLIModeSupport.ab3@637> XINCLUDE "CLIModeSupport.ab3"
00015348 <CLIModeSupport.ab3@638> XINCLUDE "CLIModeSupport.ab3"
0001535A <CLIModeSupport.ab3@639> XINCLUDE "CLIModeSupport.ab3"
00015360 <CLIModeSupport.ab3@640> XINCLUDE "CLIModeSupport.ab3"
00015372 <CLIModeSupport.ab3@641> XINCLUDE "CLIModeSupport.ab3"
00015384 <CLIModeSupport.ab3@642> XINCLUDE "CLIModeSupport.ab3"
00015396 <CLIModeSupport.ab3@643> XINCLUDE "CLIModeSupport.ab3"
000153A8 <CLIModeSupport.ab3@644> XINCLUDE "CLIModeSupport.ab3"
000153BA <CLIModeSupport.ab3@646> XINCLUDE "CLIModeSupport.ab3"
000153CC <CLIModeSupport.ab3@647> XINCLUDE "CLIModeSupport.ab3"
000153EA <CLIModeSupport.ab3@649> XINCLUDE "CLIModeSupport.ab3"
000153F0 <CLIModeSupport.ab3@650> XINCLUDE "CLIModeSupport.ab3"
000153F6 <CLIModeSupport.ab3@652> XINCLUDE "CLIModeSupport.ab3"
00015420 <CLIModeSupport.ab3@653> XINCLUDE "CLIModeSupport.ab3"
00015432 <CLIModeSupport.ab3@654> XINCLUDE "CLIModeSupport.ab3"
00015466 <CLIModeSupport.ab3@657> XINCLUDE "CLIModeSupport.ab3"
0001547E <CLIModeSupport.ab3@658> XINCLUDE "CLIModeSupport.ab3"
000154CA <CLIModeSupport.ab3@659> XINCLUDE "CLIModeSupport.ab3"
000154DC <CLIModeSupport.ab3@660> XINCLUDE "CLIModeSupport.ab3"
00015532 <CLIModeSupport.ab3@661> XINCLUDE "CLIModeSupport.ab3"
000155A4 <CLIModeSupport.ab3@662> XINCLUDE "CLIModeSupport.ab3"
000155AA <CLIModeSupport.ab3@663> XINCLUDE "CLIModeSupport.ab3"
000155DE <CLIModeSupport.ab3@664> XINCLUDE "CLIModeSupport.ab3"
00015606 <CLIModeSupport.ab3@665> XINCLUDE "CLIModeSupport.ab3"
0001562E <CLIModeSupport.ab3@667> XINCLUDE "CLIModeSupport.ab3"
00015668 <CLIModeSupport.ab3@668> XINCLUDE "CLIModeSupport.ab3"
00015680 <CLIModeSupport.ab3@669> XINCLUDE "CLIModeSupport.ab3"
00015704 <CLIModeSupport.ab3@670> XINCLUDE "CLIModeSupport.ab3"
0001571E <CLIModeSupport.ab3@671> XINCLUDE "CLIModeSupport.ab3"
0001576C <CLIModeSupport.ab3@672> XINCLUDE "CLIModeSupport.ab3"
0001577C <CLIModeSupport.ab3@674> XINCLUDE "CLIModeSupport.ab3"
00015784 <CLIModeSupport.ab3@676> XINCLUDE "CLIModeSupport.ab3"
00015798 <CLIModeSupport.ab3@677> XINCLUDE "CLIModeSupport.ab3"
000157DE <CLIModeSupport.ab3@678> XINCLUDE "CLIModeSupport.ab3"
000157E4 <CLIModeSupport.ab3@679> XINCLUDE "CLIModeSupport.ab3"
0001582E <CLIModeSupport.ab3@680> XINCLUDE "CLIModeSupport.ab3"
00015898 <CLIModeSupport.ab3@681> XINCLUDE "CLIModeSupport.ab3"
000158FE <CLIModeSupport.ab3@682> XINCLUDE "CLIModeSupport.ab3"
00015932 <CLIModeSupport.ab3@683> XINCLUDE "CLIModeSupport.ab3"
0001595E <CLIModeSupport.ab3@685> XINCLUDE "CLIModeSupport.ab3"
000159AC <CLIModeSupport.ab3@686> XINCLUDE "CLIModeSupport.ab3"
000159D0 <CLIModeSupport.ab3@687> XINCLUDE "CLIModeSupport.ab3"
000159D6 <CLIModeSupport.ab3@688> XINCLUDE "CLIModeSupport.ab3"
000159E4 <CLIModeSupport.ab3@690> XINCLUDE "CLIModeSupport.ab3"
00015A42 <CLIModeSupport.ab3@692> XINCLUDE "CLIModeSupport.ab3"
00015AA0 <CLIModeSupport.ab3@693> XINCLUDE "CLIModeSupport.ab3"
00015ACA <CLIModeSupport.ab3@694> XINCLUDE "CLIModeSupport.ab3"
00015AD4 <CLIModeSupport.ab3@695> XINCLUDE "CLIModeSupport.ab3"
00015ADC <CLIModeSupport.ab3@696> XINCLUDE "CLIModeSupport.ab3"
00015B1A <CLIModeSupport.ab3@697> XINCLUDE "CLIModeSupport.ab3"
00015B66 <CLIModeSupport.ab3@698> XINCLUDE "CLIModeSupport.ab3"
00015B78 <CLIModeSupport.ab3@699> XINCLUDE "CLIModeSupport.ab3"
00015BCE <CLIModeSupport.ab3@700> XINCLUDE "CLIModeSupport.ab3"
00015C46 <CLIModeSupport.ab3@701> XINCLUDE "CLIModeSupport.ab3"
00015C4C <CLIModeSupport.ab3@702> XINCLUDE "CLIModeSupport.ab3"
00015C80 <CLIModeSupport.ab3@703> XINCLUDE "CLIModeSupport.ab3"
00015CA8 <CLIModeSupport.ab3@704> XINCLUDE "CLIModeSupport.ab3"
00015CDE <CLIModeSupport.ab3@707> XINCLUDE "CLIModeSupport.ab3"
00015CEC <CLIModeSupport.ab3@708> XINCLUDE "CLIModeSupport.ab3"
00015CFA <CLIModeSupport.ab3@709> XINCLUDE "CLIModeSupport.ab3"
00015D6E <CLIModeSupport.ab3@710> XINCLUDE "CLIModeSupport.ab3"
00015D74 <CLIModeSupport.ab3@711> XINCLUDE "CLIModeSupport.ab3"
00015DBE <CLIModeSupport.ab3@712> XINCLUDE "CLIModeSupport.ab3"
00015E08 <CLIModeSupport.ab3@713> XINCLUDE "CLIModeSupport.ab3"
00015E38 <CLIModeSupport.ab3@714> XINCLUDE "CLIModeSupport.ab3"
00015E68 <CLIModeSupport.ab3@715> XINCLUDE "CLIModeSupport.ab3"
00015E92 <CLIModeSupport.ab3@716> XINCLUDE "CLIModeSupport.ab3"
00015EE4 <CLIModeSupport.ab3@717> XINCLUDE "CLIModeSupport.ab3"
00015F3A <CLIModeSupport.ab3@718> XINCLUDE "CLIModeSupport.ab3"
00015F8A <CLIModeSupport.ab3@719> XINCLUDE "CLIModeSupport.ab3"
00015FF0 <CLIModeSupport.ab3@720> XINCLUDE "CLIModeSupport.ab3"
0001605C <CLIModeSupport.ab3@721> XINCLUDE "CLIModeSupport.ab3"
00016088 <CLIModeSupport.ab3@722> XINCLUDE "CLIModeSupport.ab3"
000160B8 <CLIModeSupport.ab3@723> XINCLUDE "CLIModeSupport.ab3"
00016134 <CLIModeSupport.ab3@724> XINCLUDE "CLIModeSupport.ab3"
00016164 <CLIModeSupport.ab3@725> XINCLUDE "CLIModeSupport.ab3"
00016194 <CLIModeSupport.ab3@726> XINCLUDE "CLIModeSupport.ab3"
000161C4 <CLIModeSupport.ab3@727> XINCLUDE "CLIModeSupport.ab3"
000161F4 <CLIModeSupport.ab3@728> XINCLUDE "CLIModeSupport.ab3"
00016224 <CLIModeSupport.ab3@729> XINCLUDE "CLIModeSupport.ab3"
00016254 <CLIModeSupport.ab3@730> XINCLUDE "CLIModeSupport.ab3"
00016284 <CLIModeSupport.ab3@731> XINCLUDE "CLIModeSupport.ab3"
000162B4 <CLIModeSupport.ab3@732> XINCLUDE "CLIModeSupport.ab3"
000162E4 <CLIModeSupport.ab3@733> XINCLUDE "CLIModeSupport.ab3"
00016314 <CLIModeSupport.ab3@734> XINCLUDE "CLIModeSupport.ab3"
00016390 <CLIModeSupport.ab3@735> XINCLUDE "CLIModeSupport.ab3"
000163C2 <CLIModeSupport.ab3@736> XINCLUDE "CLIModeSupport.ab3"
000163F4 <CLIModeSupport.ab3@737> XINCLUDE "CLIModeSupport.ab3"
00016424 <CLIModeSupport.ab3@738> XINCLUDE "CLIModeSupport.ab3"
0001642A <CLIModeSupport.ab3@739> XINCLUDE "CLIModeSupport.ab3"
0001649E <CLIModeSupport.ab3@740> XINCLUDE "CLIModeSupport.ab3"
0001650A <CLIModeSupport.ab3@741> XINCLUDE "CLIModeSupport.ab3"
0001651C <CLIModeSupport.ab3@742> XINCLUDE "CLIModeSupport.ab3"
0001654A <CLIModeSupport.ab3@743> XINCLUDE "CLIModeSupport.ab3"
00016572 <CLIModeSupport.ab3@744> XINCLUDE "CLIModeSupport.ab3"
00016586 <CLIModeSupport.ab3@745> XINCLUDE "CLIModeSupport.ab3"
000165B0 <CLIModeSupport.ab3@746> XINCLUDE "CLIModeSupport.ab3"
000165F4 <CLIModeSupport.ab3@747> XINCLUDE "CLIModeSupport.ab3"
00016604 <CLIModeSupport.ab3@748> XINCLUDE "CLIModeSupport.ab3"
00016614 <CLIModeSupport.ab3@749> XINCLUDE "CLIModeSupport.ab3"
0001661A <CLIModeSupport.ab3@750> XINCLUDE "CLIModeSupport.ab3"
0001662A <CLIModeSupport.ab3@752> XINCLUDE "CLIModeSupport.ab3"
00016638 <CLIModeSupport.ab3@756> XINCLUDE "CLIModeSupport.ab3"
00016642 <CLIModeSupport.ab3@759> XINCLUDE "CLIModeSupport.ab3"
0001667A <CLIModeSupport.ab3@762> XINCLUDE "CLIModeSupport.ab3"
000166B2 <CLIModeSupport.ab3@763> XINCLUDE "CLIModeSupport.ab3"
000166EA <CLIModeSupport.ab3@764> XINCLUDE "CLIModeSupport.ab3"
000166FA <CLIModeSupport.ab3@765> XINCLUDE "CLIModeSupport.ab3"
00016762 <CLIModeSupport.ab3@766> XINCLUDE "CLIModeSupport.ab3"
0001679A <CLIModeSupport.ab3@767> XINCLUDE "CLIModeSupport.ab3"
000167AA <CLIModeSupport.ab3@768> XINCLUDE "CLIModeSupport.ab3"
000167BA <CLIModeSupport.ab3@769> XINCLUDE "CLIModeSupport.ab3"
00016822 <CLIModeSupport.ab3@770> XINCLUDE "CLIModeSupport.ab3"
0001688A <CLIModeSupport.ab3@771> XINCLUDE "CLIModeSupport.ab3"
000168F2 <CLIModeSupport.ab3@772> XINCLUDE "CLIModeSupport.ab3"
0001695A <CLIModeSupport.ab3@773> XINCLUDE "CLIModeSupport.ab3"
000169C2 <CLIModeSupport.ab3@774> XINCLUDE "CLIModeSupport.ab3"
00016A2A <CLIModeSupport.ab3@775> XINCLUDE "CLIModeSupport.ab3"
00016A92 <CLIModeSupport.ab3@776> XINCLUDE "CLIModeSupport.ab3"
00016AFA <CLIModeSupport.ab3@777> XINCLUDE "CLIModeSupport.ab3"
00016B0A <CLIModeSupport.ab3@778> XINCLUDE "CLIModeSupport.ab3"
00016B42 <CLIModeSupport.ab3@780> XINCLUDE "CLIModeSupport.ab3"
00016B7C <CLIModeSupport.ab3@781> XINCLUDE "CLIModeSupport.ab3"
00016BB6 <CLIModeSupport.ab3@782> XINCLUDE "CLIModeSupport.ab3"
00016BEE <CLIModeSupport.ab3@783> XINCLUDE "CLIModeSupport.ab3"
00016C0A <CLIModeSupport.ab3@784> XINCLUDE "CLIModeSupport.ab3"
00016C42 <CLIModeSupport.ab3@785> XINCLUDE "CLIModeSupport.ab3"
00016C68 <CLIModeSupport.ab3@787> XINCLUDE "CLIModeSupport.ab3"
00016C70 <CLIModeSupport.ab3@790> XINCLUDE "CLIModeSupport.ab3"
00016C78 <CLIModeSupport.ab3@792> XINCLUDE "CLIModeSupport.ab3"
00016C80 <CLIModeSupport.ab3@793> XINCLUDE "CLIModeSupport.ab3"
00016C88 <CLIModeSupport.ab3@795> XINCLUDE "CLIModeSupport.ab3"
00016C9C <CLIModeSupport.ab3@796> XINCLUDE "CLIModeSupport.ab3"
00016CCA <CLIModeSupport.ab3@797> XINCLUDE "CLIModeSupport.ab3"
00016CE4 <CLIModeSupport.ab3@798> XINCLUDE "CLIModeSupport.ab3"
00016CF2 <CLIModeSupport.ab3@799> XINCLUDE "CLIModeSupport.ab3"
00016D5E <CLIModeSupport.ab3@800> XINCLUDE "CLIModeSupport.ab3"
00016D84 <CLIModeSupport.ab3@801> XINCLUDE "CLIModeSupport.ab3"
00016DA0 <CLIModeSupport.ab3@802> XINCLUDE "CLIModeSupport.ab3"
00016DAA <CLIModeSupport.ab3@803> XINCLUDE "CLIModeSupport.ab3"
00016DB4 <CLIModeSupport.ab3@804> XINCLUDE "CLIModeSupport.ab3"
00016DC0 <CLIModeSupport.ab3@805> XINCLUDE "CLIModeSupport.ab3"
00016DCE <CLIModeSupport.ab3@806> XINCLUDE "CLIModeSupport.ab3"
00016DDA <CLIModeSupport.ab3@807> XINCLUDE "CLIModeSupport.ab3"
00016E16 <CLIModeSupport.ab3@808> XINCLUDE "CLIModeSupport.ab3"
00016E30 <CLIModeSupport.ab3@809> XINCLUDE "CLIModeSupport.ab3"
00016E3E <CLIModeSupport.ab3@810> XINCLUDE "CLIModeSupport.ab3"
00016E5E <CLIModeSupport.ab3@811> XINCLUDE "CLIModeSupport.ab3"
00016E6C <CLIModeSupport.ab3@812> XINCLUDE "CLIModeSupport.ab3"
00016E7A <CLIModeSupport.ab3@813> XINCLUDE "CLIModeSupport.ab3"
00016E80 <CLIModeSupport.ab3@815> XINCLUDE "CLIModeSupport.ab3"
00016E90 <CLIModeSupport.ab3@816> XINCLUDE "CLIModeSupport.ab3"
00016E94 <CLIModeSupport.ab3@818> XINCLUDE "CLIModeSupport.ab3"
00016EC8 <CLIModeSupport.ab3@819> XINCLUDE "CLIModeSupport.ab3"
00016EFC <CLIModeSupport.ab3@820> XINCLUDE "CLIModeSupport.ab3"
00016F00 <CLIModeSupport.ab3@821> XINCLUDE "CLIModeSupport.ab3"
00016F34 <CLIModeSupport.ab3@822> XINCLUDE "CLIModeSupport.ab3"
00016F38 <CLIModeSupport.ab3@823> XINCLUDE "CLIModeSupport.ab3"
00016F6C <CLIModeSupport.ab3@824> XINCLUDE "CLIModeSupport.ab3"
00016F72 <CLIModeSupport.ab3@825> XINCLUDE "CLIModeSupport.ab3"
00016FA8 <CLIModeSupport.ab3@827> XINCLUDE "CLIModeSupport.ab3"
00016FDE <CLIModeSupport.ab3@828> XINCLUDE "CLIModeSupport.ab3"
00017014 <CLIModeSupport.ab3@829> XINCLUDE "CLIModeSupport.ab3"
0001704C <CLIModeSupport.ab3@830> XINCLUDE "CLIModeSupport.ab3"
00017084 <CLIModeSupport.ab3@831> XINCLUDE "CLIModeSupport.ab3"
00017124 <CLIModeSupport.ab3@833> XINCLUDE "CLIModeSupport.ab3"
00017164 <CLIModeSupport.ab3@834> XINCLUDE "CLIModeSupport.ab3"
0001719A <CLIModeSupport.ab3@835> XINCLUDE "CLIModeSupport.ab3"
000171D0 <CLIModeSupport.ab3@836> XINCLUDE "CLIModeSupport.ab3"
00017208 <CLIModeSupport.ab3@839> XINCLUDE "CLIModeSupport.ab3"
00017226 <CLIModeSupport.ab3@840> XINCLUDE "CLIModeSupport.ab3"
0001722A <CLIModeSupport.ab3@841> XINCLUDE "CLIModeSupport.ab3"
00017230 <CLIModeSupport.ab3@842> XINCLUDE "CLIModeSupport.ab3"
00017236 <CLIModeSupport.ab3@843> XINCLUDE "CLIModeSupport.ab3"
0001723A <CLIModeSupport.ab3@844> XINCLUDE "CLIModeSupport.ab3"
00017264 <CLIModeSupport.ab3@845> XINCLUDE "CLIModeSupport.ab3"
00017278 <CLIModeSupport.ab3@849> XINCLUDE "CLIModeSupport.ab3"
000172B6 <CLIModeSupport.ab3@850> XINCLUDE "CLIModeSupport.ab3"
000172EA <CLIModeSupport.ab3@851> XINCLUDE "CLIModeSupport.ab3"
00017320 <CLIModeSupport.ab3@855> XINCLUDE "CLIModeSupport.ab3"
00017378 <CLIModeSupport.ab3@857> XINCLUDE "CLIModeSupport.ab3"
000173A6 <CLIModeSupport.ab3@858> XINCLUDE "CLIModeSupport.ab3"
000173AA <CLIModeSupport.ab3@859> XINCLUDE "CLIModeSupport.ab3"
000173E0 <CLIModeSupport.ab3@860> XINCLUDE "CLIModeSupport.ab3"
0001740E <CLIModeSupport.ab3@861> XINCLUDE "CLIModeSupport.ab3"
0001743C <CLIModeSupport.ab3@863> XINCLUDE "CLIModeSupport.ab3"
00017440 <CLIModeSupport.ab3@864> XINCLUDE "CLIModeSupport.ab3"
00017476 <CLIModeSupport.ab3@865> XINCLUDE "CLIModeSupport.ab3"
000174A4 <CLIModeSupport.ab3@867> XINCLUDE "CLIModeSupport.ab3"
000174A8 <CLIModeSupport.ab3@868> XINCLUDE "CLIModeSupport.ab3"
0001750C <CLIModeSupport.ab3@869> XINCLUDE "CLIModeSupport.ab3"
00017512 <CLIModeSupport.ab3@872> XINCLUDE "CLIModeSupport.ab3"
0001754C <CLIModeSupport.ab3@873> XINCLUDE "CLIModeSupport.ab3"
00017556 <CLIModeSupport.ab3@876> XINCLUDE "CLIModeSupport.ab3"
00017560 <CLIModeSupport.ab3@878> XINCLUDE "CLIModeSupport.ab3"
0001757A <CLIModeSupport.ab3@879> XINCLUDE "CLIModeSupport.ab3"
000175A4 <CLIModeSupport.ab3@882> XINCLUDE "CLIModeSupport.ab3"
000175AA <CLIModeSupport.ab3@883> XINCLUDE "CLIModeSupport.ab3"
000175CA <CLIModeSupport.ab3@884> XINCLUDE "CLIModeSupport.ab3"
000175D4 <CLIModeSupport.ab3@885> XINCLUDE "CLIModeSupport.ab3"
000175D8 <CLIModeSupport.ab3@886> XINCLUDE "CLIModeSupport.ab3"
000175DA <CLIModeSupport.ab3@887> XINCLUDE "CLIModeSupport.ab3"
000175F8 <CLIModeSupport.ab3@888> XINCLUDE "CLIModeSupport.ab3"
000175FA <CLIModeSupport.ab3@889> XINCLUDE "CLIModeSupport.ab3"
00017600 <CLIModeSupport.ab3@890> XINCLUDE "CLIModeSupport.ab3"
00017606 <CLIModeSupport.ab3@892> XINCLUDE "CLIModeSupport.ab3"
00017630 <CLIModeSupport.ab3@893> XINCLUDE "CLIModeSupport.ab3"
00017632 <CLIModeSupport.ab3@894> XINCLUDE "CLIModeSupport.ab3"
00017660 <CLIModeSupport.ab3@895> XINCLUDE "CLIModeSupport.ab3"
00017664 <CLIModeSupport.ab3@896> XINCLUDE "CLIModeSupport.ab3"
00017692 <CLIModeSupport.ab3@897> XINCLUDE "CLIModeSupport.ab3"
00017696 <CLIModeSupport.ab3@898> XINCLUDE "CLIModeSupport.ab3"
000176BC <CLIModeSupport.ab3@899> XINCLUDE "CLIModeSupport.ab3"
000176CC <CLIModeSupport.ab3@900> XINCLUDE "CLIModeSupport.ab3"
000176D2 <CLIModeSupport.ab3@901> XINCLUDE "CLIModeSupport.ab3"
000176D8 <CLIModeSupport.ab3@902> XINCLUDE "CLIModeSupport.ab3"
00017712 <CLIModeSupport.ab3@903> XINCLUDE "CLIModeSupport.ab3"
0001771C <CLIModeSupport.ab3@905> XINCLUDE "CLIModeSupport.ab3"
00017736 <CLIModeSupport.ab3@906> XINCLUDE "CLIModeSupport.ab3"
00017754 <CLIModeSupport.ab3@909> XINCLUDE "CLIModeSupport.ab3"
0001777E <CLIModeSupport.ab3@910> XINCLUDE "CLIModeSupport.ab3"
000177AC <CLIModeSupport.ab3@911> XINCLUDE "CLIModeSupport.ab3"
0001783C <CLIModeSupport.ab3@912> XINCLUDE "CLIModeSupport.ab3"
00017846 <CLIModeSupport.ab3@914> XINCLUDE "CLIModeSupport.ab3"
0001785A <CLIModeSupport.ab3@915> XINCLUDE "CLIModeSupport.ab3"
00017896 <CLIModeSupport.ab3@916> XINCLUDE "CLIModeSupport.ab3"
000178D2 <CLIModeSupport.ab3@917> XINCLUDE "CLIModeSupport.ab3"
0001790E <CLIModeSupport.ab3@918> XINCLUDE "CLIModeSupport.ab3"
0001794A <CLIModeSupport.ab3@919> XINCLUDE "CLIModeSupport.ab3"
00017986 <CLIModeSupport.ab3@920> XINCLUDE "CLIModeSupport.ab3"
0001798C <CLIModeSupport.ab3@921> XINCLUDE "CLIModeSupport.ab3"
000179C6 <CLIModeSupport.ab3@922> XINCLUDE "CLIModeSupport.ab3"
000179D8 <CLIModeSupport.ab3@927> XINCLUDE "CLIModeSupport.ab3"
000179E8 <CLIModeSupport.ab3@928> XINCLUDE "CLIModeSupport.ab3"
000179F4 <CLIModeSupport.ab3@931> XINCLUDE "CLIModeSupport.ab3"
00017A0E <CLIModeSupport.ab3@932> XINCLUDE "CLIModeSupport.ab3"
00017A10 <CLIModeSupport.ab3@934> XINCLUDE "CLIModeSupport.ab3"
00017A2E <CLIModeSupport.ab3@935> XINCLUDE "CLIModeSupport.ab3"
00017A34 <CLIModeSupport.ab3@936> XINCLUDE "CLIModeSupport.ab3"
00017A5E <CLIModeSupport.ab3@937> XINCLUDE "CLIModeSupport.ab3"
00017A60 <CLIModeSupport.ab3@938> XINCLUDE "CLIModeSupport.ab3"
00017A6A <CLIModeSupport.ab3@940> XINCLUDE "CLIModeSupport.ab3"
00017A70 <CLIModeSupport.ab3@941> XINCLUDE "CLIModeSupport.ab3"
00017A82 <CLIModeSupport.ab3@944> XINCLUDE "CLIModeSupport.ab3"
00017ABC <CLIModeSupport.ab3@961> XINCLUDE "CLIModeSupport.ab3"
00017AD6 <CLIModeSupport.ab3@966> XINCLUDE "CLIModeSupport.ab3"
00017AEA <CLIModeSupport.ab3@968> XINCLUDE "CLIModeSupport.ab3"
00017B54 <CLIModeSupport.ab3@969> XINCLUDE "CLIModeSupport.ab3"
00017B5A <CLIModeSupport.ab3@970> XINCLUDE "CLIModeSupport.ab3"
00017BC4 <CLIModeSupport.ab3@971> XINCLUDE "CLIModeSupport.ab3"
00017BD8 <CLIModeSupport.ab3@974> XINCLUDE "CLIModeSupport.ab3"
00017C42 <CLIModeSupport.ab3@975> XINCLUDE "CLIModeSupport.ab3"
00017C78 <CLIModeSupport.ab3@976> XINCLUDE "CLIModeSupport.ab3"
00017C7E <CLIModeSupport.ab3@977> XINCLUDE "CLIModeSupport.ab3"
00017CE8 <CLIModeSupport.ab3@978> XINCLUDE "CLIModeSupport.ab3"
00017CFC <CLIModeSupport.ab3@979> XINCLUDE "CLIModeSupport.ab3"
00017D32 <CLIModeSupport.ab3@980> XINCLUDE "CLIModeSupport.ab3"
00017D38 <CLIModeSupport.ab3@981> XINCLUDE "CLIModeSupport.ab3"
00017D6E <CLIModeSupport.ab3@982> XINCLUDE "CLIModeSupport.ab3"
00017D82 <CLIModeSupport.ab3@986> XINCLUDE "CLIModeSupport.ab3"
00017DEC <CLIModeSupport.ab3@987> XINCLUDE "CLIModeSupport.ab3"
00017DF2 <CLIModeSupport.ab3@988> XINCLUDE "CLIModeSupport.ab3"
00017E5C <CLIModeSupport.ab3@989> XINCLUDE "CLIModeSupport.ab3"
00017E70 <CLIModeSupport.ab3@992> XINCLUDE "CLIModeSupport.ab3"
00017EA6 <CLIModeSupport.ab3@993> XINCLUDE "CLIModeSupport.ab3"
00017EAC <CLIModeSupport.ab3@994> XINCLUDE "CLIModeSupport.ab3"
00017EE2 <CLIModeSupport.ab3@995> XINCLUDE "CLIModeSupport.ab3"
00017EFC <CLIModeSupport.ab3@1000> XINCLUDE "CLIModeSupport.ab3"
00017F10 <CLIModeSupport.ab3@1002> XINCLUDE "CLIModeSupport.ab3"
00017F7A <CLIModeSupport.ab3@1003> XINCLUDE "CLIModeSupport.ab3"
00017F80 <CLIModeSupport.ab3@1004> XINCLUDE "CLIModeSupport.ab3"
00017FEA <CLIModeSupport.ab3@1005> XINCLUDE "CLIModeSupport.ab3"
00017FFE <CLIModeSupport.ab3@1008> XINCLUDE "CLIModeSupport.ab3"
00018068 <CLIModeSupport.ab3@1009> XINCLUDE "CLIModeSupport.ab3"
0001806E <CLIModeSupport.ab3@1010> XINCLUDE "CLIModeSupport.ab3"
000180D8 <CLIModeSupport.ab3@1011> XINCLUDE "CLIModeSupport.ab3"
000180EC <CLIModeSupport.ab3@1014> XINCLUDE "CLIModeSupport.ab3"
00018156 <CLIModeSupport.ab3@1015> XINCLUDE "CLIModeSupport.ab3"
0001815C <CLIModeSupport.ab3@1016> XINCLUDE "CLIModeSupport.ab3"
000181C6 <CLIModeSupport.ab3@1017> XINCLUDE "CLIModeSupport.ab3"
000181DA <CLIModeSupport.ab3@1020> XINCLUDE "CLIModeSupport.ab3"
00018244 <CLIModeSupport.ab3@1021> XINCLUDE "CLIModeSupport.ab3"
0001824A <CLIModeSupport.ab3@1022> XINCLUDE "CLIModeSupport.ab3"
000182B4 <CLIModeSupport.ab3@1023> XINCLUDE "CLIModeSupport.ab3"
000182C6 <CLIModeSupport.ab3@1028> XINCLUDE "CLIModeSupport.ab3"
000182D6 <CLIModeSupport.ab3@1029> XINCLUDE "CLIModeSupport.ab3"
000182E0 <CLIModeSupport.ab3@1032> XINCLUDE "CLIModeSupport.ab3"
0001834A <CLIModeSupport.ab3@1033> XINCLUDE "CLIModeSupport.ab3"
00018350 <CLIModeSupport.ab3@1034> XINCLUDE "CLIModeSupport.ab3"
00018356 <CLIModeSupport.ab3@1035> XINCLUDE "CLIModeSupport.ab3"
000183C0 <CLIModeSupport.ab3@1036> XINCLUDE "CLIModeSupport.ab3"
000183C8 <CLIModeSupport.ab3@1037> XINCLUDE "CLIModeSupport.ab3"
000183D2 <CLIModeSupport.ab3@1040> XINCLUDE "CLIModeSupport.ab3"
0001843C <CLIModeSupport.ab3@1041> XINCLUDE "CLIModeSupport.ab3"
00018472 <CLIModeSupport.ab3@1042> XINCLUDE "CLIModeSupport.ab3"
000184B0 <CLIModeSupport.ab3@1043> XINCLUDE "CLIModeSupport.ab3"
000184B4 <CLIModeSupport.ab3@1044> XINCLUDE "CLIModeSupport.ab3"
000184EA <CLIModeSupport.ab3@1045> XINCLUDE "CLIModeSupport.ab3"
000184F0 <CLIModeSupport.ab3@1046> XINCLUDE "CLIModeSupport.ab3"
000184F6 <CLIModeSupport.ab3@1047> XINCLUDE "CLIModeSupport.ab3"
00018560 <CLIModeSupport.ab3@1049> XINCLUDE "CLIModeSupport.ab3"
00018596 <CLIModeSupport.ab3@1050> XINCLUDE "CLIModeSupport.ab3"
0001859C <CLIModeSupport.ab3@1052> XINCLUDE "CLIModeSupport.ab3"
000185CA <CLIModeSupport.ab3@1056> XINCLUDE "CLIModeSupport.ab3"
000185CE <CLIModeSupport.ab3@1057> XINCLUDE "CLIModeSupport.ab3"
000185F6 <CLIModeSupport.ab3@1058> XINCLUDE "CLIModeSupport.ab3"
000185FC <CLIModeSupport.ab3@1061> XINCLUDE "CLIModeSupport.ab3"
00018602 <CLIModeSupport.ab3@1062> XINCLUDE "CLIModeSupport.ab3"
00018608 <CLIModeSupport.ab3@1063> XINCLUDE "CLIModeSupport.ab3"
00018612 <CLIModeSupport.ab3@1064> XINCLUDE "CLIModeSupport.ab3"
0001861C <CLIModeSupport.ab3@1065> XINCLUDE "CLIModeSupport.ab3"
0001864A <CLIModeSupport.ab3@1067> XINCLUDE "CLIModeSupport.ab3"
00018676 <CLIModeSupport.ab3@1069> XINCLUDE "CLIModeSupport.ab3"
0001867E <CLIModeSupport.ab3@1070> XINCLUDE "CLIModeSupport.ab3"
000186E4 <CLIModeSupport.ab3@1073> XINCLUDE "CLIModeSupport.ab3"
00018718 <CLIModeSupport.ab3@1074> XINCLUDE "CLIModeSupport.ab3"
0001871E <CLIModeSupport.ab3@1075> XINCLUDE "CLIModeSupport.ab3"
0001879E <CLIModeSupport.ab3@1076> XINCLUDE "CLIModeSupport.ab3"
000187B0 <CLIModeSupport.ab3@1078> XINCLUDE "CLIModeSupport.ab3"
00018816 <CLIModeSupport.ab3@1079> XINCLUDE "CLIModeSupport.ab3"
0001887C <CLIModeSupport.ab3@1080> XINCLUDE "CLIModeSupport.ab3"
00018882 <CLIModeSupport.ab3@1081> XINCLUDE "CLIModeSupport.ab3"
0001888A <CLIModeSupport.ab3@1082> XINCLUDE "CLIModeSupport.ab3"
0001888C <CLIModeSupport.ab3@1086> XINCLUDE "CLIModeSupport.ab3"
000188AA <CLIModeSupport.ab3@1087> XINCLUDE "CLIModeSupport.ab3"
000188E8 <CLIModeSupport.ab3@1088> XINCLUDE "CLIModeSupport.ab3"
00018926 <CLIModeSupport.ab3@1089> XINCLUDE "CLIModeSupport.ab3"
0001892C <CLIModeSupport.ab3@1091> XINCLUDE "CLIModeSupport.ab3"
00018932 <CLIModeSupport.ab3@1092> XINCLUDE "CLIModeSupport.ab3"
00018938 <CLIModeSupport.ab3@1093> XINCLUDE "CLIModeSupport.ab3"
00018942 <CLIModeSupport.ab3@1096> XINCLUDE "CLIModeSupport.ab3"
00018948 <CLIModeSupport.ab3@1097> XINCLUDE "CLIModeSupport.ab3"
0001894E <CLIModeSupport.ab3@1098> XINCLUDE "CLIModeSupport.ab3"
00018954 <CLIModeSupport.ab3@1099> XINCLUDE "CLIModeSupport.ab3"
0001895A <CLIModeSupport.ab3@1100> XINCLUDE "CLIModeSupport.ab3"
0001895E <CLIModeSupport.ab3@1101> XINCLUDE "CLIModeSupport.ab3"
00018968 <CLIModeSupport.ab3@1102> XINCLUDE "CLIModeSupport.ab3"
0001896C <CLIModeSupport.ab3@1103> XINCLUDE "CLIModeSupport.ab3"
00018996 <CLIModeSupport.ab3@1106> XINCLUDE "CLIModeSupport.ab3"
00018998 <CLIModeSupport.ab3@1107> XINCLUDE "CLIModeSupport.ab3"
0001899E <CLIModeSupport.ab3@1109> XINCLUDE "CLIModeSupport.ab3"
000189A2 <CLIModeSupport.ab3@1110> XINCLUDE "CLIModeSupport.ab3"
000189A8 <CLIModeSupport.ab3@1112> XINCLUDE "CLIModeSupport.ab3"
000189AC <CLIModeSupport.ab3@1113> XINCLUDE "CLIModeSupport.ab3"
000189BC <CLIModeSupport.ab3@1115> XINCLUDE "CLIModeSupport.ab3"
00018A16 <CLIModeSupport.ab3@1116> XINCLUDE "CLIModeSupport.ab3"
00018A28 <CLIModeSupport.ab3@1118> XINCLUDE "CLIModeSupport.ab3"
00018A92 <CLIModeSupport.ab3@1119> XINCLUDE "CLIModeSupport.ab3"
00018A98 <CLIModeSupport.ab3@1120> XINCLUDE "CLIModeSupport.ab3"
00018AE2 <CLIModeSupport.ab3@1121> XINCLUDE "CLIModeSupport.ab3"
00018AF0 <CLIModeSupport.ab3@1124> XINCLUDE "CLIModeSupport.ab3"
00018B1C <CLIModeSupport.ab3@1125> XINCLUDE "CLIModeSupport.ab3"
00018BC2 <CLIModeSupport.ab3@1126> XINCLUDE "CLIModeSupport.ab3"
00018BE0 <CLIModeSupport.ab3@1127> XINCLUDE "CLIModeSupport.ab3"
00018BE6 <CLIModeSupport.ab3@1128> XINCLUDE "CLIModeSupport.ab3"
00018C10 <CLIModeSupport.ab3@1129> XINCLUDE "CLIModeSupport.ab3"
00018C16 <CLIModeSupport.ab3@1131> XINCLUDE "CLIModeSupport.ab3"
00018C4E <CLIModeSupport.ab3@1132> XINCLUDE "CLIModeSupport.ab3"
00018C5A <CLIModeSupport.ab3@1135> XINCLUDE "CLIModeSupport.ab3"
00018C74 <CLIModeSupport.ab3@1136> XINCLUDE "CLIModeSupport.ab3"
00018C80 <CLIModeSupport.ab3@1138> XINCLUDE "CLIModeSupport.ab3"
00018C9A <CLIModeSupport.ab3@1140> XINCLUDE "CLIModeSupport.ab3"
00018CC4 <CLIModeSupport.ab3@1144> XINCLUDE "CLIModeSupport.ab3"
00018CE8 <CLIModeSupport.ab3@1145> XINCLUDE "CLIModeSupport.ab3"
00018D26 <CLIModeSupport.ab3@1146> XINCLUDE "CLIModeSupport.ab3"
00018D2A <CLIModeSupport.ab3@1147> XINCLUDE "CLIModeSupport.ab3"
00018D68 <CLIModeSupport.ab3@1149> XINCLUDE "CLIModeSupport.ab3"
00018D6C <CLIModeSupport.ab3@1150> XINCLUDE "CLIModeSupport.ab3"
00018DAA <CLIModeSupport.ab3@1153> XINCLUDE "CLIModeSupport.ab3"
00018DE8 <CLIModeSupport.ab3@1154> XINCLUDE "CLIModeSupport.ab3"
00018DEA <CLIModeSupport.ab3@1155> XINCLUDE "CLIModeSupport.ab3"
00018E1E <CLIModeSupport.ab3@1156> XINCLUDE "CLIModeSupport.ab3"
00018E24 <CLIModeSupport.ab3@1158> XINCLUDE "CLIModeSupport.ab3"
00018E68 <CLIModeSupport.ab3@1159> XINCLUDE "CLIModeSupport.ab3"
00018E7A <CLIModeSupport.ab3@1160> XINCLUDE "CLIModeSupport.ab3"
00018E82 <CLIModeSupport.ab3@1162> XINCLUDE "CLIModeSupport.ab3"
00018E88 <CLIModeSupport.ab3@1163> XINCLUDE "CLIModeSupport.ab3"
00018E92 <CLIModeSupport.ab3@1165> XINCLUDE "CLIModeSupport.ab3"
00018EA0 <CLIModeSupport.ab3@1166> XINCLUDE "CLIModeSupport.ab3"
00018EA6 <CLIModeSupport.ab3@1167> XINCLUDE "CLIModeSupport.ab3"
00018ECE <CLIModeSupport.ab3@1168> XINCLUDE "CLIModeSupport.ab3"
00018EE8 <CLIModeSupport.ab3@1169> XINCLUDE "CLIModeSupport.ab3"
00018EF2 <CLIModeSupport.ab3@1170> XINCLUDE "CLIModeSupport.ab3"
00018EF8 <CLIModeSupport.ab3@1171> XINCLUDE "CLIModeSupport.ab3"
00018F16 <CLIModeSupport.ab3@1173> XINCLUDE "CLIModeSupport.ab3"
00018F20 <CLIModeSupport.ab3@1174> XINCLUDE "CLIModeSupport.ab3"
00018F26 <CLIModeSupport.ab3@1175> XINCLUDE "CLIModeSupport.ab3"
00018F2C <CLIModeSupport.ab3@1176> XINCLUDE "CLIModeSupport.ab3"
00018F36 <CLIModeSupport.ab3@1177> XINCLUDE "CLIModeSupport.ab3"
00018F44 <CLIModeSupport.ab3@1178> XINCLUDE "CLIModeSupport.ab3"
00018F4A <CLIModeSupport.ab3@1179> XINCLUDE "CLIModeSupport.ab3"
00018F5A <CLIModeSupport.ab3@1181> XINCLUDE "CLIModeSupport.ab3"
00018F86 <CLIModeSupport.ab3@1182> XINCLUDE "CLIModeSupport.ab3"
00018F9C <CLIModeSupport.ab3@1183> XINCLUDE "CLIModeSupport.ab3"
00018FA6 <CLIModeSupport.ab3@1184> XINCLUDE "CLIModeSupport.ab3"
00018FAC <CLIModeSupport.ab3@1185> XINCLUDE "CLIModeSupport.ab3"
00019004 <CLIModeSupport.ab3@1187> XINCLUDE "CLIModeSupport.ab3"
00019072 <CLIModeSupport.ab3@1189> XINCLUDE "CLIModeSupport.ab3"
0001908A <CLIModeSupport.ab3@1190> XINCLUDE "CLIModeSupport.ab3"
00019090 <CLIModeSupport.ab3@1191> XINCLUDE "CLIModeSupport.ab3"
000190C8 <CLIModeSupport.ab3@1192> XINCLUDE "CLIModeSupport.ab3"
000190F6 <CLIModeSupport.ab3@1194> XINCLUDE "CLIModeSupport.ab3"
00019120 <CLIModeSupport.ab3@1195> XINCLUDE "CLIModeSupport.ab3"
0001912A <CLIModeSupport.ab3@1197> XINCLUDE "CLIModeSupport.ab3"
00019152 <CLIModeSupport.ab3@1198> XINCLUDE "CLIModeSupport.ab3"
0001917C <CLIModeSupport.ab3@1199> XINCLUDE "CLIModeSupport.ab3"
0001921E <CLIModeSupport.ab3@1200> XINCLUDE "CLIModeSupport.ab3"
0001922C <CLIModeSupport.ab3@1201> XINCLUDE "CLIModeSupport.ab3"
0001927C <CLIModeSupport.ab3@1202> XINCLUDE "CLIModeSupport.ab3"
0001928C <CLIModeSupport.ab3@1203> XINCLUDE "CLIModeSupport.ab3"
00019354 <CLIModeSupport.ab3@1204> XINCLUDE "CLIModeSupport.ab3"
00019388 <CLIModeSupport.ab3@1206> XINCLUDE "CLIModeSupport.ab3"
000193BC <CLIModeSupport.ab3@1207> XINCLUDE "CLIModeSupport.ab3"
000193F0 <CLIModeSupport.ab3@1208> XINCLUDE "CLIModeSupport.ab3"
00019424 <CLIModeSupport.ab3@1209> XINCLUDE "CLIModeSupport.ab3"
00019458 <CLIModeSupport.ab3@1210> XINCLUDE "CLIModeSupport.ab3"
0001948C <CLIModeSupport.ab3@1211> XINCLUDE "CLIModeSupport.ab3"
000194C0 <CLIModeSupport.ab3@1212> XINCLUDE "CLIModeSupport.ab3"
000194F4 <CLIModeSupport.ab3@1213> XINCLUDE "CLIModeSupport.ab3"
000194F6 <CLIModeSupport.ab3@1215> XINCLUDE "CLIModeSupport.ab3"
00019534 <CLIModeSupport.ab3@1216> XINCLUDE "CLIModeSupport.ab3"
00019538 <CLIModeSupport.ab3@1217> XINCLUDE "CLIModeSupport.ab3"
00019576 <CLIModeSupport.ab3@1220> XINCLUDE "CLIModeSupport.ab3"
000195B4 <CLIModeSupport.ab3@1221> XINCLUDE "CLIModeSupport.ab3"
000195B6 <CLIModeSupport.ab3@1222> XINCLUDE "CLIModeSupport.ab3"
000195BC <CLIModeSupport.ab3@1223> XINCLUDE "CLIModeSupport.ab3"
000195C0 <CLIModeSupport.ab3@1224> XINCLUDE "CLIModeSupport.ab3"
000195C2 <CLIModeSupport.ab3@1226> XINCLUDE "CLIModeSupport.ab3"
00019600 <CLIModeSupport.ab3@1227> XINCLUDE "CLIModeSupport.ab3"
0001963E <CLIModeSupport.ab3@1228> XINCLUDE "CLIModeSupport.ab3"
00019640 <CLIModeSupport.ab3@1229> XINCLUDE "CLIModeSupport.ab3"
00019642 <CLIModeSupport.ab3@1230> XINCLUDE "CLIModeSupport.ab3"
00019644 <CLIModeSupport.ab3@1231> XINCLUDE "CLIModeSupport.ab3"
0001964A <CLIModeSupport.ab3@1232> XINCLUDE "CLIModeSupport.ab3"
0001964E <CLIModeSupport.ab3@1233> XINCLUDE "CLIModeSupport.ab3"
0001965E <CLIModeSupport.ab3@1235> XINCLUDE "CLIModeSupport.ab3"
00019676 <CLIModeSupport.ab3@1236> XINCLUDE "CLIModeSupport.ab3"
0001968E <CLIModeSupport.ab3@1237> XINCLUDE "CLIModeSupport.ab3"
000196A6 <CLIModeSupport.ab3@1238> XINCLUDE "CLIModeSupport.ab3"
000196D0 <CLIModeSupport.ab3@1240> XINCLUDE "CLIModeSupport.ab3"
000196FA <CLIModeSupport.ab3@1241> XINCLUDE "CLIModeSupport.ab3"
00019728 <CLIModeSupport.ab3@1243> XINCLUDE "CLIModeSupport.ab3"
0001972C <CLIModeSupport.ab3@1244> XINCLUDE "CLIModeSupport.ab3"
00019754 <CLIModeSupport.ab3@1245> XINCLUDE "CLIModeSupport.ab3"
00019756 <CLIModeSupport.ab3@1246> XINCLUDE "CLIModeSupport.ab3"
00019794 <CLIModeSupport.ab3@1247> XINCLUDE "CLIModeSupport.ab3"
00019798 <CLIModeSupport.ab3@1248> XINCLUDE "CLIModeSupport.ab3"
000197D6 <CLIModeSupport.ab3@1249> XINCLUDE "CLIModeSupport.ab3"
000197DA <CLIModeSupport.ab3@1250> XINCLUDE "CLIModeSupport.ab3"
00019818 <CLIModeSupport.ab3@1251> XINCLUDE "CLIModeSupport.ab3"
0001981C <CLIModeSupport.ab3@1252> XINCLUDE "CLIModeSupport.ab3"
0001985A <CLIModeSupport.ab3@1254> XINCLUDE "CLIModeSupport.ab3"
0001985E <CLIModeSupport.ab3@1255> XINCLUDE "CLIModeSupport.ab3"
00019884 <CLIModeSupport.ab3@1257> XINCLUDE "CLIModeSupport.ab3"
000198AA <CLIModeSupport.ab3@1258> XINCLUDE "CLIModeSupport.ab3"
000198D0 <CLIModeSupport.ab3@1259> XINCLUDE "CLIModeSupport.ab3"
000198F6 <CLIModeSupport.ab3@1260> XINCLUDE "CLIModeSupport.ab3"
0001991C <CLIModeSupport.ab3@1261> XINCLUDE "CLIModeSupport.ab3"
00019972 <CLIModeSupport.ab3@1262> XINCLUDE "CLIModeSupport.ab3"
000199C8 <CLIModeSupport.ab3@1263> XINCLUDE "CLIModeSupport.ab3"
00019A16 <CLIModeSupport.ab3@1264> XINCLUDE "CLIModeSupport.ab3"
00019A6C <CLIModeSupport.ab3@1265> XINCLUDE "CLIModeSupport.ab3"
00019A92 <CLIModeSupport.ab3@1266> XINCLUDE "CLIModeSupport.ab3"
00019AB8 <CLIModeSupport.ab3@1267> XINCLUDE "CLIModeSupport.ab3"
00019ADE <CLIModeSupport.ab3@1268> XINCLUDE "CLIModeSupport.ab3"
00019B34 <CLIModeSupport.ab3@1269> XINCLUDE "CLIModeSupport.ab3"
00019B82 <CLIModeSupport.ab3@1270> XINCLUDE "CLIModeSupport.ab3"
00019BD0 <CLIModeSupport.ab3@1271> XINCLUDE "CLIModeSupport.ab3"
00019C8A <CLIModeSupport.ab3@1272> XINCLUDE "CLIModeSupport.ab3"
00019CE0 <CLIModeSupport.ab3@1273> XINCLUDE "CLIModeSupport.ab3"
00019D06 <CLIModeSupport.ab3@1274> XINCLUDE "CLIModeSupport.ab3"
00019D2C <CLIModeSupport.ab3@1275> XINCLUDE "CLIModeSupport.ab3"
00019D52 <CLIModeSupport.ab3@1276> XINCLUDE "CLIModeSupport.ab3"
00019DA8 <CLIModeSupport.ab3@1277> XINCLUDE "CLIModeSupport.ab3"
00019DFE <CLIModeSupport.ab3@1278> XINCLUDE "CLIModeSupport.ab3"
00019E4C <CLIModeSupport.ab3@1279> XINCLUDE "CLIModeSupport.ab3"
00019E9A <CLIModeSupport.ab3@1280> XINCLUDE "CLIModeSupport.ab3"
00019EE8 <CLIModeSupport.ab3@1281> XINCLUDE "CLIModeSupport.ab3"
00019F36 <CLIModeSupport.ab3@1282> XINCLUDE "CLIModeSupport.ab3"
00019F84 <CLIModeSupport.ab3@1283> XINCLUDE "CLIModeSupport.ab3"
00019FD2 <CLIModeSupport.ab3@1284> XINCLUDE "CLIModeSupport.ab3"
0001A020 <CLIModeSupport.ab3@1285> XINCLUDE "CLIModeSupport.ab3"
0001A046 <CLIModeSupport.ab3@1286> XINCLUDE "CLIModeSupport.ab3"
0001A06C <CLIModeSupport.ab3@1287> XINCLUDE "CLIModeSupport.ab3"
0001A092 <CLIModeSupport.ab3@1288> XINCLUDE "CLIModeSupport.ab3"
0001A0E0 <CLIModeSupport.ab3@1289> XINCLUDE "CLIModeSupport.ab3"
0001A12E <CLIModeSupport.ab3@1290> XINCLUDE "CLIModeSupport.ab3"
0001A184 <CLIModeSupport.ab3@1291> XINCLUDE "CLIModeSupport.ab3"
0001A1D2 <CLIModeSupport.ab3@1292> XINCLUDE "CLIModeSupport.ab3"
0001A220 <CLIModeSupport.ab3@1293> XINCLUDE "CLIModeSupport.ab3"
0001A26E <CLIModeSupport.ab3@1294> XINCLUDE "CLIModeSupport.ab3"
0001A294 <CLIModeSupport.ab3@1295> XINCLUDE "CLIModeSupport.ab3"
0001A2BA <CLIModeSupport.ab3@1296> XINCLUDE "CLIModeSupport.ab3"
0001A2E0 <CLIModeSupport.ab3@1297> XINCLUDE "CLIModeSupport.ab3"
0001A318 <CLIModeSupport.ab3@1298> XINCLUDE "CLIModeSupport.ab3"
0001A340 <CLIModeSupport.ab3@1299> XINCLUDE "CLIModeSupport.ab3"
0001A354 <CLIModeSupport.ab3@1300> XINCLUDE "CLIModeSupport.ab3"
0001A3C8 <CLIModeSupport.ab3@1301> XINCLUDE "CLIModeSupport.ab3"
0001A40E <CLIModeSupport.ab3@1302> XINCLUDE "CLIModeSupport.ab3"
0001A4BC <CLIModeSupport.ab3@1303> XINCLUDE "CLIModeSupport.ab3"
0001A528 <CLIModeSupport.ab3@1304> XINCLUDE "CLIModeSupport.ab3"
0001A538 <CLIModeSupport.ab3@1305> XINCLUDE "CLIModeSupport.ab3"
0001A55E <CLIModeSupport.ab3@1307> XINCLUDE "CLIModeSupport.ab3"
0001A568 <CLIModeSupport.ab3@1309> XINCLUDE "CLIModeSupport.ab3"
0001A592 <CLIModeSupport.ab3@1310> XINCLUDE "CLIModeSupport.ab3"
0001A598 <CLIModeSupport.ab3@1311> XINCLUDE "CLIModeSupport.ab3"
0001A5A8 <CLIModeSupport.ab3@1313> XINCLUDE "CLIModeSupport.ab3"
0001A648 <CLIModeSupport.ab3@1315> XINCLUDE "CLIModeSupport.ab3"
0001A688 <CLIModeSupport.ab3@1316> XINCLUDE "CLIModeSupport.ab3"
0001A68E <CLIModeSupport.ab3@1318> XINCLUDE "CLIModeSupport.ab3"
0001A6F0 <CLIModeSupport.ab3@1319> XINCLUDE "CLIModeSupport.ab3"
0001A6FA <CLIModeSupport.ab3@1321> XINCLUDE "CLIModeSupport.ab3"
0001A704 <CLIModeSupport.ab3@1323> XINCLUDE "CLIModeSupport.ab3"
0001A71E <CLIModeSupport.ab3@1324> XINCLUDE "CLIModeSupport.ab3"
0001A740 <CLIModeSupport.ab3@1400> XINCLUDE "CLIModeSupport.ab3"
0001A762 <CLIModeSupport.ab3@1401> XINCLUDE "CLIModeSupport.ab3"
0001A7BC <CLIModeSupport.ab3@1402> XINCLUDE "CLIModeSupport.ab3"
0001A7DE <CLIModeSupport.ab3@1403> XINCLUDE "CLIModeSupport.ab3"
0001A800 <CLIModeSupport.ab3@1404> XINCLUDE "CLIModeSupport.ab3"
0001A85A <CLIModeSupport.ab3@1405> XINCLUDE "CLIModeSupport.ab3"
0001A89C <CLIModeSupport.ab3@1406> XINCLUDE "CLIModeSupport.ab3"
0001A8A2 <CLIModeSupport.ab3@1408> XINCLUDE "CLIModeSupport.ab3"
0001A8B0 <CLIModeSupport.ab3@1409> XINCLUDE "CLIModeSupport.ab3"
0001A8B6 <CLIModeSupport.ab3@1411> XINCLUDE "CLIModeSupport.ab3"
0001A8CA <CLIModeSupport.ab3@1412> XINCLUDE "CLIModeSupport.ab3"
0001A8D4 <CLIModeSupport.ab3@1413> XINCLUDE "CLIModeSupport.ab3"
0001A94E <CLIModeSupport.ab3@1414> XINCLUDE "CLIModeSupport.ab3"
0001A958 <CLIModeSupport.ab3@1415> XINCLUDE "CLIModeSupport.ab3"
0001A95E <CLIModeSupport.ab3@1416> XINCLUDE "CLIModeSupport.ab3"
0001A972 <CLIModeSupport.ab3@1419> XINCLUDE "CLIModeSupport.ab3"
0001A97C <CLIModeSupport.ab3@1420> XINCLUDE "CLIModeSupport.ab3"
0001A9FC <CLIModeSupport.ab3@1421> XINCLUDE "CLIModeSupport.ab3"
0001AA06 <CLIModeSupport.ab3@1422> XINCLUDE "CLIModeSupport.ab3"
0001AA0C <CLIModeSupport.ab3@1423> XINCLUDE "CLIModeSupport.ab3"
0001AA20 <CLIModeSupport.ab3@1426> XINCLUDE "CLIModeSupport.ab3"
0001AA2A <CLIModeSupport.ab3@1427> XINCLUDE "CLIModeSupport.ab3"
0001AA72 <CLIModeSupport.ab3@1428> XINCLUDE "CLIModeSupport.ab3"
0001AA80 <CLIModeSupport.ab3@1429> XINCLUDE "CLIModeSupport.ab3"
0001AAA6 <CLIModeSupport.ab3@1430> XINCLUDE "CLIModeSupport.ab3"
0001AAB0 <CLIModeSupport.ab3@1431> XINCLUDE "CLIModeSupport.ab3"
0001AB1A <CLIModeSupport.ab3@1432> XINCLUDE "CLIModeSupport.ab3"
0001ABEC <CLIModeSupport.ab3@1433> XINCLUDE "CLIModeSupport.ab3"
0001ABF6 <CLIModeSupport.ab3@1434> XINCLUDE "CLIModeSupport.ab3"
0001ABFC <CLIModeSupport.ab3@1435> XINCLUDE "CLIModeSupport.ab3"
0001AC06 <CLIModeSupport.ab3@1437> XINCLUDE "CLIModeSupport.ab3"
0001AC0C <CLIModeSupport.ab3@1438> XINCLUDE "CLIModeSupport.ab3"
0001AC20 <CLIModeSupport.ab3@1441> XINCLUDE "CLIModeSupport.ab3"
0001AC2A <CLIModeSupport.ab3@1442> XINCLUDE "CLIModeSupport.ab3"
0001AC72 <CLIModeSupport.ab3@1443> XINCLUDE "CLIModeSupport.ab3"
0001AC7C <CLIModeSupport.ab3@1444> XINCLUDE "CLIModeSupport.ab3"
0001AC82 <CLIModeSupport.ab3@1445> XINCLUDE "CLIModeSupport.ab3"
0001AC96 <CLIModeSupport.ab3@1448> XINCLUDE "CLIModeSupport.ab3"
0001ACBC <CLIModeSupport.ab3@1449> XINCLUDE "CLIModeSupport.ab3"
0001ACD0 <CLIModeSupport.ab3@1452> XINCLUDE "CLIModeSupport.ab3"
0001ACF6 <CLIModeSupport.ab3@1453> XINCLUDE "CLIModeSupport.ab3"
0001AD0A <CLIModeSupport.ab3@1456> XINCLUDE "CLIModeSupport.ab3"
0001AD30 <CLIModeSupport.ab3@1457> XINCLUDE "CLIModeSupport.ab3"
0001AD44 <CLIModeSupport.ab3@1460> XINCLUDE "CLIModeSupport.ab3"
0001AD4E <CLIModeSupport.ab3@1461> XINCLUDE "CLIModeSupport.ab3"
0001AD7C <CLIModeSupport.ab3@1462> XINCLUDE "CLIModeSupport.ab3"
0001ADCC <CLIModeSupport.ab3@1463> XINCLUDE "CLIModeSupport.ab3"
0001ADEC <CLIModeSupport.ab3@1464> XINCLUDE "CLIModeSupport.ab3"
0001AE04 <CLIModeSupport.ab3@1465> XINCLUDE "CLIModeSupport.ab3"
0001AEE8 <CLIModeSupport.ab3@1466> XINCLUDE "CLIModeSupport.ab3"
0001AEF2 <CLIModeSupport.ab3@1467> XINCLUDE "CLIModeSupport.ab3"
0001AEF8 <CLIModeSupport.ab3@1468> XINCLUDE "CLIModeSupport.ab3"
0001AEFA <CLIModeSupport.ab3@1470> XINCLUDE "CLIModeSupport.ab3"
0001AF0E <CLIModeSupport.ab3@1471> XINCLUDE "CLIModeSupport.ab3"
0001AF40 <CLIModeSupport.ab3@1474> XINCLUDE "CLIModeSupport.ab3"
0001AF46 <CLIModeSupport.ab3@1475> XINCLUDE "CLIModeSupport.ab3"
0001AF8A <CLIModeSupport.ab3@1476> XINCLUDE "CLIModeSupport.ab3"
0001AF9C <CLIModeSupport.ab3@1477> XINCLUDE "CLIModeSupport.ab3"
0001AFAE <CLIModeSupport.ab3@1478> XINCLUDE "CLIModeSupport.ab3"
0001AFB8 <CLIModeSupport.ab3@1479> XINCLUDE "CLIModeSupport.ab3"
0001AFBE <CLIModeSupport.ab3@1480> XINCLUDE "CLIModeSupport.ab3"
0001AFC8 <CLIModeSupport.ab3@1482> XINCLUDE "CLIModeSupport.ab3"
0001AFE2 <CLIModeSupport.ab3@1483> XINCLUDE "CLIModeSupport.ab3"
0001AFE2 <AmiBlitz3.ab3@93> XINCLUDE "CLIModeSupport.ab3"
0001B062 <AmiBlitz3.ab3@98> dynassign.s = dos_GetToolString{"ASSIGN",default_assign$}       ; replaced hardcoded path  tomsmart1 2012 03 09
0001B09A <AmiBlitz3.ab3@99> If dynassign <> ""
0001B0B0 <AmiBlitz3.ab3@100>     *AssignSema.SignalSemaphore = FindSemaphore_(&dynassign)    ; does it already exist?
0001B0BA <AmiBlitz3.ab3@101>     If *AssignSema
0001B0CA <AmiBlitz3.ab3@102>       ObtainSemaphoreShared_ *AssignSema
0001B0D0 <AmiBlitz3.ab3@103>     Else                                                        ; no, create one...
0001B0F0 <AmiBlitz3.ab3@104>       *AssignSema = AllocVec_ (SizeOf.SignalSemaphore,#MEMF_PUBLIC|#MEMF_CLEAR)
0001B0FA <AmiBlitz3.ab3@105>       If *AssignSema
0001B10A <AmiBlitz3.ab3@106>         InitSemaphore_ *AssignSema
0001B13E <AmiBlitz3.ab3@108>         *AssignSema\ss_Link\ln_Name = AllocVec_(FLen(dynassign)+1,#MEMF_PUBLIC|#MEMF_CLEAR)
0001B150 <AmiBlitz3.ab3@109>         If *AssignSema\ss_Link\ln_Name
0001B18C <AmiBlitz3.ab3@110>           Poke.s  *AssignSema\ss_Link\ln_Name,dynassign
0001B198 <AmiBlitz3.ab3@112>         *AssignSema\ss_Link\ln_Pri  = 1
0001B1A4 <AmiBlitz3.ab3@113>         *AssignSema\ss_Link\ln_Type = #NT_SIGNALSEM
0001B1B4 <AmiBlitz3.ab3@115>         AddSemaphore_ *AssignSema
0001B1C4 <AmiBlitz3.ab3@116>         ObtainSemaphoreShared_ *AssignSema
0001B210 <AmiBlitz3.ab3@122>   mydir.s = dos_GetProgDir{"Sys:"}
0001B270 <AmiBlitz3.ab3@123>   If dos_SetAssign{dynassign,mydir,False}
0001B304 <AmiBlitz3.ab3@124>     dos_AddAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001B33C <AmiBlitz3.ab3@127>   Poke$ ?str_blitz3assign,dynassign
0001B3BE <AmiBlitz3.ab3@128>   Poke$ ?str_defaultdbug,dos_AddPart{dynassign,"Debug/DefaultDBug"}
0001B440 <AmiBlitz3.ab3@131>   Poke$ ?str_path_acidlibs,dos_AddPart{dynassign, "BlitzLibs/AcidLibs"}
0001B4C2 <AmiBlitz3.ab3@132>   Poke$ ?str_path_deflibs ,dos_AddPart{dynassign, "BlitzLibs/DefLibs" }
0001B544 <AmiBlitz3.ab3@133>   Poke$ ?str_path_userlibs,dos_AddPart{dynassign, "BlitzLibs/UserLibs"}
0001B5C6 <AmiBlitz3.ab3@134>   Poke$ ?str_path_includes,dos_AddPart{dynassign, "Sourcecodes/Includes"}
0001B63A <AmiBlitz3.ab3@135>   my_systemdir$    = dos_AddPart{dynassign, "System"}
0001B6AE <AmiBlitz3.ab3@136>   my_residentsdir$ = dos_AddPart{dynassign, "BlitzLibs/Residents"}
0001B722 <AmiBlitz3.ab3@137>   my_blitzlibsdir$ = dos_AddPart{dynassign, "BlitzLibs"}
0001B750 <AmiBlitz3.ab3@138>   dos_CreateDir{my_blitzlibsdir$}
0001B774 <AmiBlitz3.ab3@139>   dos_CreateDir{Peek$(?str_path_userlibs)}
0001B7A2 <AmiBlitz3.ab3@140>   dos_CreateDir{my_residentsdir$}
0001B7D0 <AmiBlitz3.ab3@141>   dos_CreateDir{my_systemdir$}
0001B89A <AmiBlitz3.ab3@147> pedfile$ = dos_GetToolString{"EDITOR",dos_AddPart{my_systemdir$,"PED"}}
0001B8D2 <AmiBlitz3.ab3@148> Poke.s ?str_pedfile,pedfile$
0001B910 <AmiBlitz3.ab3@150> If dos_GetToolState{"START_WITHOUT_LIBS"} = -1
0001B920 <AmiBlitz3.ab3@151>   Poke.b ?start_without_libs,1
0001B926 <AmiBlitz3.ab3@152> Else
0001B936 <AmiBlitz3.ab3@153>   Poke.b ?start_without_libs,0
0001B974 <AmiBlitz3.ab3@156> If dos_GetToolState{"ONEPASSCOMPILING"} = -1
0001B97A <AmiBlitz3.ab3@157>   OnePassCompiling.l = True
0001B980 <AmiBlitz3.ab3@158> Else
0001B986 <AmiBlitz3.ab3@159>   OnePassCompiling   = False
0001B9AC <AmiBlitz3.ab3@162> !TRANS_INIT{"AmiBlitz3"}     ; init localization via translation.include
0001B9DA <AmiBlitz3.ab3@167> If ( FindResident_("MorphOS") )
0001B9EA <AmiBlitz3.ab3@168>   Poke.b ?MorphOS,1      ; set it to use CacheClear_E
0001B9F0 <AmiBlitz3.ab3@169> Else
0001BA00 <AmiBlitz3.ab3@170>   Poke.b ?MorphOS,0      ; set it to use CacheClear_U
0001BA06 <AmiBlitz3.ab3@175>  releaseexe.l               = False
0001BA0C <AmiBlitz3.ab3@176>  releasedbg_save.w          = 0
0001BA12 <AmiBlitz3.ab3@177>  releasemakesmall_save.b    = 0
0001BA18 <AmiBlitz3.ab3@178>  releasefuncoptimize_save.b = 0
0001BA1E <AmiBlitz3.ab3@179>  releasedebugger_save.b     = 0
0001BA34 <AmiBlitz3.ab3@182> 
0001BA84 <AmiBlitz3.ab3@183>  comstatusstr   = !TRANS{"Initializing Compiler..."} ;default settings
0001BA8C <AmiBlitz3.ab3@184>  calcpro.l      = 0
0001BA94 <AmiBlitz3.ab3@185>  calcpro_old.l  = 0
0001BAA0 <AmiBlitz3.ab3@186>  typ_old.l      = -1
0001BAAC <AmiBlitz3.ab3@187>  pass_old.l     = -1
0001BAB2 <AmiBlitz3.ab3@188>  update_comstatus_gui.b = False ; for the first
0001BAC8 <AmiBlitz3.ab3@192> MaxLen dbg_detokenlinesBuffer.s = #MAX_dbg_detokenlinesBufferSize
0001BAD4 <AmiBlitz3.ab3@193> dbg_fid.l = -1 ; no debug file id yet!
0001BAE6 <AmiBlitz3.ab3@196> Poke.l ?maxerrorcount,#defaultmaxerrorcount                ; set the default value  tomsmart1
0001BAF0 <AmiBlitz3.ab3@198> If CLIMode
0001BAF6 <AmiBlitz3.ab3@201>   err.l      = False                                       ; indicate that an error has occured
0001BAFC <AmiBlitz3.ab3@202>   showhelp.l = False                                       ; show the CLI tool's help
0001BB54 <AmiBlitz3.ab3@205>   cli_progpath.s      = dos_GetProgDir{default_assign$}    ; replaced hardcoded path  tomsmart1 2012 03 09
0001BB7C <AmiBlitz3.ab3@206>   cli_sourcefile.s    = ""
0001BBA4 <AmiBlitz3.ab3@207>   cli_exefile.s       = ""
0001BBCC <AmiBlitz3.ab3@208>   cli_savefile.s      = ""
0001BBF4 <AmiBlitz3.ab3@209>   cli_dumpfile.s      = ""
0001BC1C <AmiBlitz3.ab3@210>   cli_includepath.s   = ""
0001BC44 <AmiBlitz3.ab3@211>   cli_blitzlibpath.s  = ""
0001BC4A <AmiBlitz3.ab3@212>   cli_debuginfo.l     = False
0001BC50 <AmiBlitz3.ab3@213>   cli_run.l           = False
0001BC58 <AmiBlitz3.ab3@214>   cli_dumpflags.l     = $FFFFFFFF
0001BC80 <AmiBlitz3.ab3@215>   cli_info.s          = ""
0001BC86 <AmiBlitz3.ab3@216>   cli_release.l       = False
0001BC90 <AmiBlitz3.ab3@217>   cli_numargs.l       = dos_GetNumArgs{}
0001BC96 <AmiBlitz3.ab3@218>   cli_gui.l           = False
0001BC9E <AmiBlitz3.ab3@219>   cli_dumpform.l      = 1 ; 0 = bin, 1 = ASCII
0001BCA6 <AmiBlitz3.ab3@220>   cli_verbose.l       = 1
0001BCAE <AmiBlitz3.ab3@221>   cli_comdbgflags.l   = $00000000             ; added to support compiler and debugger settings via CLI  tomsmart1
0001BCB6 <AmiBlitz3.ab3@222>   cli_comstrbufsize.l = 0
0001BCBE <AmiBlitz3.ab3@223>   cli_exestacksize.l  = 0
0001BCC6 <AmiBlitz3.ab3@224>   cli_maxerrors.l     = 0                     ; added to make maxerrorcount changable in CLIMode  tomsmart1
0001BCCC <AmiBlitz3.ab3@225>   OnePassCompiling    = False
0001BCE4 <AmiBlitz3.ab3@226>   If cli_numargs=0 Then showhelp=True
0001BD14 <AmiBlitz3.ab3@230>     arg.s = dos_GetNextArg{}                               ; get the next CLI argument
0001BD60 <AmiBlitz3.ab3@231>     larg.s = LCase$(arg)                                   ; lower case the option string
0001BE28 <AmiBlitz3.ab3@232>     If Left$(larg,1)="-" Then larg = Right$(larg,FLen(larg)-1)
0001BE5E <AmiBlitz3.ab3@233>     Select larg
0001BEAA <AmiBlitz3.ab3@234>       Case "s" : larg="source"
0001BEFC <AmiBlitz3.ab3@235>       Case "e" : larg="exe"
0001BF4E <AmiBlitz3.ab3@236>       Case "d" : larg="debug"
0001BFA0 <AmiBlitz3.ab3@237>       Case "r" : larg="release"
0001BFF2 <AmiBlitz3.ab3@238>       Case "h" : larg="help"
0001C044 <AmiBlitz3.ab3@239>       Case "v" : larg="verbose"
0001C096 <AmiBlitz3.ab3@240>       Case "1" : larg="1pass"
0001C0A4 <AmiBlitz3.ab3@241>     End Select
0001C0DA <AmiBlitz3.ab3@243>     Select larg
0001C12E <AmiBlitz3.ab3@244>       Case "exe"      : cli_exefile     = dos_GetNextArg{}
0001C188 <AmiBlitz3.ab3@245>       Case "source"   : cli_sourcefile  = dos_GetNextArg{}
0001C1E2 <AmiBlitz3.ab3@246>       Case "save"     : cli_savefile    = dos_GetNextArg{}
0001C212 <AmiBlitz3.ab3@247>       Case "debug"    : cli_debuginfo   = True
0001C242 <AmiBlitz3.ab3@248>       Case "run"      : cli_run         = True
0001C272 <AmiBlitz3.ab3@249>       Case "release"  : cli_release     = True
0001C2A2 <AmiBlitz3.ab3@250>       Case "ped"      : cli_gui         = True
0001C2FC <AmiBlitz3.ab3@251>       Case "dform"    : cli_dumpform.l  = Vallong(dos_GetNextArg{})
0001C36E <AmiBlitz3.ab3@252>       Case "dump"     : cli_info        = LCase$(dos_GetNextArg{})
0001C39E <AmiBlitz3.ab3@253>                         cli_dumpfile    = dos_GetNextArg{}
0001C3A6 <AmiBlitz3.ab3@254>                         cli_dumpflags   = $0
0001C406 <AmiBlitz3.ab3@255>                         If Instr(cli_info,"all"  ) Then cli_dumpflags | $FFFFFFFF
0001C466 <AmiBlitz3.ab3@256>                         If Instr(cli_info,"token") Then cli_dumpflags | #DUMPFLG_TOKENS
0001C4C6 <AmiBlitz3.ab3@257>                         If Instr(cli_info,"label") Then cli_dumpflags | #DUMPFLG_LABELS
0001C526 <AmiBlitz3.ab3@258>                         If Instr(cli_info,"var"  ) Then cli_dumpflags | #DUMPFLG_VARS
0001C586 <AmiBlitz3.ab3@259>                         If Instr(cli_info,"const") Then cli_dumpflags | #DUMPFLG_CONSTANTS
0001C5E6 <AmiBlitz3.ab3@260>                         If Instr(cli_info,"func" ) Then cli_dumpflags | #DUMPFLG_FUNCTIONS
0001C646 <AmiBlitz3.ab3@261>                         If Instr(cli_info,"macro") Then cli_dumpflags | #DUMPFLG_MACROS
0001C6A6 <AmiBlitz3.ab3@262>                         If Instr(cli_info,"type" ) Then cli_dumpflags | #DUMPFLG_NEWTYPES
0001C706 <AmiBlitz3.ab3@263>                         If Instr(cli_info,"lib"  ) Then cli_dumpflags | #DUMPFLG_LIBS
0001C718 <AmiBlitz3.ab3@264>                         If cli_dumpflags = $0
0001C71E <AmiBlitz3.ab3@265>                          err=True
0001C7B2 <AmiBlitz3.ab3@266>                          NPrint "\\1b[1m*** ERROR: Invalid flags for dumpfile \\22",cli_info,"\\22 specified!\\1b[0m"
0001C824 <AmiBlitz3.ab3@269>       Case "setcom"   : cli_setcom.s    = LCase$(dos_GetNextArg{})
0001C82C <AmiBlitz3.ab3@270>                         cli_comflags.l  = $0
0001C88C <AmiBlitz3.ab3@271>                         If Instr(cli_setcom,"icon"  ) Then cli_comflags | #CLI_COMSETICONFLAG     ; create Icon
0001C8EC <AmiBlitz3.ab3@272>                         If Instr(cli_setcom,"small" ) Then cli_comflags | #CLI_COMSETSMALLFLAG    ; make smallest code
0001C94C <AmiBlitz3.ab3@273>                         If Instr(cli_setcom,"func"  ) Then cli_comflags | #CLI_COMSETFUNCFLAG     ; use Functionoptimizer
0001C9AC <AmiBlitz3.ab3@274> 
0001CA0C <AmiBlitz3.ab3@275>                         If Instr(cli_setcom,"dbgf"  ) Then cli_comflags | #CLI_COMSETDBGFFLAG     ; create a .dbf file
0001CA26 <AmiBlitz3.ab3@276>                         If (cli_comflags & #CLI_COMSETALLFLAGS) = 0                               ; test if args are correct
0001CA2C <AmiBlitz3.ab3@277>                           err=True                                                                ; no
0001CAC0 <AmiBlitz3.ab3@278>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setcom \\22",cli_setcom,"\\22 specified!\\1b[0m"
0001CAC6 <AmiBlitz3.ab3@279>                         Else
0001CAD4 <AmiBlitz3.ab3@280>                           cli_comdbgflags | cli_comflags                                          ; yes then add it
0001CB46 <AmiBlitz3.ab3@283>       Case "setdbg"   : cli_setdbg.s    = LCase$(dos_GetNextArg{})
0001CB4E <AmiBlitz3.ab3@284>                         cli_dbgflags.l  = $0
0001CBAE <AmiBlitz3.ab3@285>                         If Instr(cli_setdbg,"auto" ) Then cli_dbgflags | #CLI_DEBUGAUTOFLAG       ; autorun
0001CC0E <AmiBlitz3.ab3@286>                         If Instr(cli_setdbg,"irq"  ) Then cli_dbgflags | #CLI_DEBUGIRQFLAG        ; interrupt check
0001CC6E <AmiBlitz3.ab3@287>                         If Instr(cli_setdbg,"asm"  ) Then cli_dbgflags | #CLI_DEBUGASMFLAG        ; assembler check
0001CCCE <AmiBlitz3.ab3@288>                         If Instr(cli_setdbg,"ofl"  ) Then cli_dbgflags | #CLI_DEBUGOFLFLAG        ; overflow check
0001CCE8 <AmiBlitz3.ab3@289>                         If (cli_dbgflags & #CLI_DEBUGALLFLAGS) = 0                                ; yes then add it
0001CCEE <AmiBlitz3.ab3@290>                           err=True                                                                ; no
0001CD82 <AmiBlitz3.ab3@291>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setdbg \\22",cli_setdbg,"\\22 specified!\\1b[0m"
0001CD88 <AmiBlitz3.ab3@292>                         Else
0001CD96 <AmiBlitz3.ab3@293>                           cli_comdbgflags | cli_dbgflags                                          ; yes then add it
0001CDF0 <AmiBlitz3.ab3@295>       Case "strbufsize": cli_comstrbufsize = Vallong(dos_GetNextArg{})
0001CE4A <AmiBlitz3.ab3@296>       Case "stacksize" : cli_exestacksize  = Vallong(dos_GetNextArg{})
0001CEA4 <AmiBlitz3.ab3@297> 
0001CECA <AmiBlitz3.ab3@298>                          If ((cli_maxerrors > 0) AND (cli_maxerrors <4097))                        ; check
0001CEDA <AmiBlitz3.ab3@299>                            Poke.l ?maxerrorcount,cli_maxerrors
0001CF0A <AmiBlitz3.ab3@301>       Case "1pass"     : OnePassCompiling = True   ; added to use big buffers for compile so only 1 pass is needed  tomsmart1
0001CF64 <AmiBlitz3.ab3@302>       Case "verbose"   : cli_verbose      = Vallong(dos_GetNextArg{})
0001CF94 <AmiBlitz3.ab3@303>       Case "help"      : showhelp         = True             ; show the help and quit
0001CF9A <AmiBlitz3.ab3@304>       Default
0001CFD2 <AmiBlitz3.ab3@305>         If arg><""
0001D066 <AmiBlitz3.ab3@306>           NPrint "\\1b[1m*** ERROR: Unknown option \\22",arg,"\\22 specified!\\1b[0m"
0001D06C <AmiBlitz3.ab3@307>           err = True
0001D07A <AmiBlitz3.ab3@309>     End Select
0001D0C6 <AmiBlitz3.ab3@310>   Until arg = "" OR err=True          ; until we processed all arguments
0001D0E8 <AmiBlitz3.ab3@313>   If err><False OR showhelp = True
0001D0F2 <AmiBlitz3.ab3@314>     If showhelp
0001D154 <AmiBlitz3.ab3@315>     NPrint "AmiBlitz ",Peek.s(?myversion)
0001D18C <AmiBlitz3.ab3@316>     NPrint "\\nSyntax: AmiBlitz3 [options]"
0001D1C4 <AmiBlitz3.ab3@317>     NPrint "\\nOptions:"
0001D1FC <AmiBlitz3.ab3@318>     NPrint "  -(s)ource <file>    : input source code filename (bb2, ab2 or ab3)"
0001D234 <AmiBlitz3.ab3@319>     NPrint "  -(e)xe <file>       : output executable filename"
0001D26C <AmiBlitz3.ab3@320>     NPrint "  -(d)ebug            : compile and start runtime debugger"
0001D2A4 <AmiBlitz3.ab3@321>     NPrint "  -(r)elease          : create release executable (size optimized)"
0001D2DC <AmiBlitz3.ab3@322>     NPrint "  -run                : run compiled program"
0001D314 <AmiBlitz3.ab3@323>     NPrint "  -dump <info> <file> : dump compiler internals to file"
0001D34C <AmiBlitz3.ab3@324>     NPrint "                        (info=all|token|label|var|func|const|macro|type|lib)"
0001D384 <AmiBlitz3.ab3@325>     NPrint "  -setcom <options>   : set compiler settings (options=icon|small|func|ldbg|dbgf)"       ; added  tomsmart1
0001D3BC <AmiBlitz3.ab3@326>     NPrint "  -setdbg <check>     : set debugger settings (check=auto|irq|asm|ofl)"                  ; added  tomsmart1
0001D3F4 <AmiBlitz3.ab3@327>     NPrint "  -strbufsize <n>     : set the string buffer size of the compiler"                      ; added  tomsmart1
0001D42C <AmiBlitz3.ab3@328>     NPrint "  -stacksize <n>      : set the stacksize for the exe if it run/debug"                   ; added  tomsmart1
0001D464 <AmiBlitz3.ab3@329>     NPrint "  -maxerrors <n>      : set maxerrorcounter of the compiler (1-4096; default=99)"        ; added  tomsmart1
0001D49C <AmiBlitz3.ab3@330>     NPrint "  -(1)pass            : use large buffers for compile"
0001D4D4 <AmiBlitz3.ab3@331>     NPrint "  -dform <n>          : format of compiler internals dump (0=bin, 1=ASCII; default=1)"
0001D50C <AmiBlitz3.ab3@332>     NPrint "  -PED                : start AmiBlitz3 IDE (PED)"
0001D544 <AmiBlitz3.ab3@333>     NPrint "  -save <file>        : re-save source code (convert format, if needed)"
0001D57C <AmiBlitz3.ab3@334>     NPrint "  -(v)erbose <n>      : set verbose level (0, 1 or 2; default=1)"
0001D5B4 <AmiBlitz3.ab3@335>     NPrint "  -(h)elp             : show this help"
0001D5EC <AmiBlitz3.ab3@336>     NPrint "\\nExample:"
0001D624 <AmiBlitz3.ab3@337>     NPrint "  AmiBlitz3 -s \\22DH0:Sourcecodes/MyProgram.ab3\\22 -e RAM:MyProgram.exe"
0001D65C <AmiBlitz3.ab3@338>     NPrint "\\nNote: To start the AmiBlitz3 IDE, run from Workbench or with -PED option."
0001D662 <AmiBlitz3.ab3@341>     Goto abnormal_exit
0001D67E <AmiBlitz3.ab3@344>   If cli_gui        Then CLIMode = False : error_SetFlags{#error_requester}
0001D6E2 <AmiBlitz3.ab3@345>   If cli_sourcefile Then Poke.s ?str_tempfilename,cli_sourcefile
0001D6F2 <AmiBlitz3.ab3@348> Poke.l ?CLIMode,CLIMode
0001D716 <AmiBlitz3.ab3@383>   Dim incdim.s (#maxincludes)
0001D73A <AmiBlitz3.ab3@384>   Dim incline.l(#maxincludes)
0001D754 <AmiBlitz3.ab3@652> Function.s Get_Libinfo{addr_libnum.l}
0001D760 <AmiBlitz3.ab3@654>   lib_ab2.b = False : lib_os.b = False
0001D766 <AmiBlitz3.ab3@655>   addr_counter.l = addr_libnum
0001D76E <AmiBlitz3.ab3@656>   skip.l = 0
0001D780 <AmiBlitz3.ab3@657>   If addr_counter=0
0001D7BA <AmiBlitz3.ab3@658>     error{"INTERNAL: \\__THIS_FUNCTION: Invalid pointer!"}
0001D7D8 <AmiBlitz3.ab3@659>     Function Return ""
0001D7E6 <AmiBlitz3.ab3@664>     mem.l = Peek.l(addr_counter)
0001D7F4 <AmiBlitz3.ab3@669>     addr_counter + 2
0001D814 <AmiBlitz3.ab3@670>     If (mem = $0000ffff) Then lib_ab2= True : skip = 8
0001D82E <AmiBlitz3.ab3@671>     If (mem LSR 16) = $ffe2
0001D834 <AmiBlitz3.ab3@673>       lib_os = True
0001D83C <AmiBlitz3.ab3@674>       skip = 10
0001D882 <AmiBlitz3.ab3@675>       If Peek$(addr_counter+skip) = "" Then skip + 4
0001D8C6 <AmiBlitz3.ab3@677>   Until (lib_ab2=True OR lib_os = True) OR (addr_counter>addr_libnum + $400)
0001D8DC <AmiBlitz3.ab3@679>   If (addr_counter>addr_libnum + $400)
0001D8FA <AmiBlitz3.ab3@681>     Function Return ""
0001D900 <AmiBlitz3.ab3@682>   Else
0001D924 <AmiBlitz3.ab3@683>     Function Return Peek$(addr_counter + skip)
0001D92E <AmiBlitz3.ab3@685> End Function
0001D94C <AmiBlitz3.ab3@730>   !asm
0001D952 <AmiBlitz3.ab3@731>   MOVEA.l _execbase,A6
0001D956 <AmiBlitz3.ab3@732>   MOVEM.l d0/a0,-(a7)
0001D958 <AmiBlitz3.ab3@734>   MOVEQ #127,d0
0001D95E <AmiBlitz3.ab3@735>   LEA chartab,a0
0001D964 <AmiBlitz3.ab3@738>     MOVE.b #1,128(a0)
0001D966 <AmiBlitz3.ab3@739>     CLR.b (a0)+
0001D96A <AmiBlitz3.ab3@740>   DBF d0,'l12
0001D970 <AmiBlitz3.ab3@742>   LEA chartab,a0
0001D974 <AmiBlitz3.ab3@743>   MOVE.b #1,(a0)
0001D97A <AmiBlitz3.ab3@744>   MOVE.b #1,","(a0)
0001D980 <AmiBlitz3.ab3@745>   MOVE.b #1,";"(a0)
0001D986 <AmiBlitz3.ab3@746>   MOVE.b #1,":"(a0)
0001D98C <AmiBlitz3.ab3@747>   MOVE.b #1,"("(a0)
0001D992 <AmiBlitz3.ab3@748>   MOVE.b #1,")"(a0)
0001D998 <AmiBlitz3.ab3@749>   MOVE.b #1,"="(a0)
0001D99E <AmiBlitz3.ab3@750>   MOVE.b #1,"+"(a0)
0001D9A4 <AmiBlitz3.ab3@751>   MOVE.b #1,"-"(a0)
0001D9AA <AmiBlitz3.ab3@752>   MOVE.b #1,"*"(a0)
0001D9B0 <AmiBlitz3.ab3@753>   MOVE.b #1,"/"(a0)
0001D9B6 <AmiBlitz3.ab3@754>   MOVE.b #1,"$"(a0)
0001D9BC <AmiBlitz3.ab3@755>   MOVE.b #1,"%"(a0)
0001D9C2 <AmiBlitz3.ab3@756>   MOVE.b #1,"."(a0)
0001D9C8 <AmiBlitz3.ab3@757>   MOVE.b #1,"["(a0)
0001D9CE <AmiBlitz3.ab3@758>   MOVE.b #1,"]"(a0)
0001D9D4 <AmiBlitz3.ab3@759>   MOVE.b #1,"{"(a0)
0001D9DA <AmiBlitz3.ab3@760>   MOVE.b #1,"}"(a0)
0001D9E0 <AmiBlitz3.ab3@761>   MOVE.b #1,"\"(a0)
0001D9E6 <AmiBlitz3.ab3@762>   MOVE.b #1,">"(a0)
0001D9EC <AmiBlitz3.ab3@763>   MOVE.b #1,"<"(a0)
0001D9F2 <AmiBlitz3.ab3@764>   MOVE.b #1,"&"(a0)
0001D9F8 <AmiBlitz3.ab3@765>   MOVE.b #1,"|"(a0)
0001D9FE <AmiBlitz3.ab3@766>   MOVE.b #1,"^"(a0)
0001DA04 <AmiBlitz3.ab3@767>   MOVE.b #1,$7e(a0)
0001DA0A <AmiBlitz3.ab3@768>   MOVE.w #$0101,1(a0)
0001DA10 <AmiBlitz3.ab3@770>   LEA instrtab,a0
0001DA16 <AmiBlitz3.ab3@771>   MOVE.l #labelhash-instrtab,d0
0001DA18 <AmiBlitz3.ab3@772>   ASR.l #2,d0
0001DA1A <AmiBlitz3.ab3@773>   SUBQ.l #1,d0
0001DA1C <AmiBlitz3.ab3@776>    CLR.l (a0)+
0001DA1E <AmiBlitz3.ab3@777>    SUBQ.l #1,d0
0001DA22 <AmiBlitz3.ab3@778>   BNE 'l10
0001DA28 <AmiBlitz3.ab3@780>   LEA allowtab,a0
0001DA2E <AmiBlitz3.ab3@781>   MOVE.l #255,d0
0001DA30 <AmiBlitz3.ab3@784>     CLR.b (a0)+
0001DA34 <AmiBlitz3.ab3@785>   DBF d0,'la1
0001DA3A <AmiBlitz3.ab3@787>   LEA allowtab,a0
0001DA40 <AmiBlitz3.ab3@788>   MOVE.b #1,$7d(a0)
0001DA46 <AmiBlitz3.ab3@789>   MOVE.b #1,$7c(a0)
0001DA4C <AmiBlitz3.ab3@790>   MOVE.b #1,$44(a0)
0001DA52 <AmiBlitz3.ab3@791>   MOVE.b #1,$45(a0)
0001DA58 <AmiBlitz3.ab3@792>   MOVE.b #1,$b9(a0)
0001DA5E <AmiBlitz3.ab3@793>   MOVE.b #1,$89(a0)
0001DA64 <AmiBlitz3.ab3@794>   MOVE.b #1,$ce(a0)
0001DA6A <AmiBlitz3.ab3@795>   MOVE.b #1,$cf(a0)
0001DA70 <AmiBlitz3.ab3@796>   MOVE.b #1,$d0(a0)
0001DA76 <AmiBlitz3.ab3@797>   MOVE.b #1,$cd(a0)
0001DA78 <AmiBlitz3.ab3@798>   MOVEQ #0,d0
0001DA7E <AmiBlitz3.ab3@800>   MOVEA.l _execbase,a6
0001DA84 <AmiBlitz3.ab3@805>   MOVE.l #$10000,d0
0001DA8A <AmiBlitz3.ab3@806>   MOVE.l #80000,d1
0001DA8C <AmiBlitz3.ab3@807>   MOVE.l d1,d2
0001DA90 <AmiBlitz3.ab3@808>   JSR _CreatePool(a6)                                      ; alloc memory for own stuff
0001DA96 <AmiBlitz3.ab3@809>   MOVE.l d0,mempool
0001DA9A <AmiBlitz3.ab3@810>   MOVEM.l (a7)+,d0/a0
0001DAA0 <AmiBlitz3.ab3@811>   TST.l mempool
0001DAA4 <AmiBlitz3.ab3@812>   BEQ shutdown_compiler
0001DAA8 <AmiBlitz3.ab3@814>   MOVEA.l $114(A6),A4                                      ; get adress of this.Task-Structure
0001DAAE <AmiBlitz3.ab3@815>   MOVE.l A4,ptr_ThisTask
0001DAB2 <AmiBlitz3.ab3@817>   BSR.w open_doslibrary
0001DAB6 <AmiBlitz3.ab3@818>   BEQ.w shutdown_compiler
0001DABC <AmiBlitz3.ab3@820>   MOVE.l D2,stacksize
0001DABE <AmiBlitz3.ab3@827>   MOVEQ.l #$00,D0
0001DAC4 <AmiBlitz3.ab3@828>   LEA tokens,A0
0001DAC6 <AmiBlitz3.ab3@831>     ADDQ.w #1,D0
0001DAC8 <AmiBlitz3.ab3@832>     MOVE.l (A0),D1
0001DACC <AmiBlitz3.ab3@833>     BEQ.w 'gotlast
0001DACE <AmiBlitz3.ab3@834>     MOVEA.l D1,A0
0001DAD2 <AmiBlitz3.ab3@835>  BRA.w 'loop
0001DAD8 <AmiBlitz3.ab3@838>   MOVE.l A0,end_of_tokenlist
0001DADC <AmiBlitz3.ab3@840>   BSR.w makeasmtable
0001DAE4 <AmiBlitz3.ab3@842>   MOVE.w #$FFFF,returncode_org    ; was -1                         ;#-1,returncode
0001DAE8 <AmiBlitz3.ab3@844>   BSR.w open_mathlibrary
0001DAEC <AmiBlitz3.ab3@845>   BEQ.w freemem_and_quit4
0001DAF2 <AmiBlitz3.ab3@847>   MOVE.l constmaxpc,D0
0001DAF4 <AmiBlitz3.ab3@848>   MOVEQ.l #$02,D1                                          ;chipmem            ;01 org source
0001DAFA <AmiBlitz3.ab3@849>   MOVEA.l _execbase,A6
0001DAFE <AmiBlitz3.ab3@850>   JSR _AllocMem(A6)                                        ;mem for branch routine
0001DB04 <AmiBlitz3.ab3@851>   MOVE.l D0,constpcat
0001DB08 <AmiBlitz3.ab3@852>   BEQ.w freemem_and_quit3
0001DB0E <AmiBlitz3.ab3@853>   ADD.l constmaxpc,D0
0001DB14 <AmiBlitz3.ab3@854>   MOVE.l D0,constlibat
0001DB1A <AmiBlitz3.ab3@856>   MOVE.l macrobuffer_size,D0
0001DB20 <AmiBlitz3.ab3@858>   CMP.l #DEFAULT_MACROBUFFERSIZE,d0                        ; replaced by a constant  tomsmart1
0001DB24 <AmiBlitz3.ab3@859>   BGE 'ok
0001DB2A <AmiBlitz3.ab3@860>     MOVE.l #DEFAULT_MACROBUFFERSIZE,d0
0001DB30 <AmiBlitz3.ab3@861>     MOVE.l d0,macrobuffer_size                             ; replaced with a constant tomsmart1
0001DB32 <AmiBlitz3.ab3@864>   ADDQ.l #4,d0
0001DB34 <AmiBlitz3.ab3@866>   MOVEQ.l #$01,D1
0001DB3A <AmiBlitz3.ab3@867>   MOVEA.l _execbase,A6
0001DB3E <AmiBlitz3.ab3@868>   JSR _AllocMem(A6)                                        ;macro mem
0001DB40 <AmiBlitz3.ab3@870>   MOVE.l d0,a0
0001DB46 <AmiBlitz3.ab3@871>   MOVE.l macrobuffer_size,(a0)+
0001DB48 <AmiBlitz3.ab3@872>   MOVE.l a0,d0
0001DB4E <AmiBlitz3.ab3@874>   MOVE.l D0,ptr_macrobuffer_begin
0001DB52 <AmiBlitz3.ab3@875>   BEQ.w freemem_and_quit2
0001DB58 <AmiBlitz3.ab3@876>   ADD.l macrobuffer_size,D0
0001DB5E <AmiBlitz3.ab3@877>   MOVE.l D0,ptr_macrobuffer_end
0001DB64 <AmiBlitz3.ab3@880>   TST.l CLIMode
0001DB68 <AmiBlitz3.ab3@881>   BEQ load_ped
0001DB92 <AmiBlitz3.ab3@884>   !basic
0001DB9C <AmiBlitz3.ab3@885>   succ.l = InitEmulatedPED{}
0001DBA0 <AmiBlitz3.ab3@886>   GetD0 succ
0001DBBE <AmiBlitz3.ab3@887>   !asm
0001DBC0 <AmiBlitz3.ab3@888>   TST.l d0
0001DBC4 <AmiBlitz3.ab3@889>   BEQ freemem_and_quit
0001DBCA <AmiBlitz3.ab3@890> JMP skip_ped
0001DBD0 <AmiBlitz3.ab3@896>   MOVE.l #str_pedfile,D1                                   ; Load PED
0001DBD6 <AmiBlitz3.ab3@897>   MOVEA.l _dosbase,A6
0001DBDA <AmiBlitz3.ab3@898>   JSR _LoadSeg(A6)
0001DBE0 <AmiBlitz3.ab3@899>   MOVE.l D0,ptr_seg_ped
0001DBE4 <AmiBlitz3.ab3@901>   BEQ.w cant_load_PED         ; was freemem_and_quit  added error massage  that we can't load it  tomsmart1  2012 03
0001DBE6 <AmiBlitz3.ab3@905>   MOVEA.l D0,A2
0001DBE8 <AmiBlitz3.ab3@906>   ADDA.l A2,A2
0001DBEA <AmiBlitz3.ab3@907>   ADDA.l A2,A2
0001DBF0 <AmiBlitz3.ab3@909>   LEA teddata,a1                                           ;lea edstruct,A1
0001DBF6 <AmiBlitz3.ab3@910>   MOVE.l #"TEDY",d1
0001DBFA <AmiBlitz3.ab3@911>   JSR 4(A2)                                                ; Run PED
0001DC00 <AmiBlitz3.ab3@913>   MOVE.l A0,ped_startup_addr                               ; PED returns address of routine "startup_code"
0001DC06 <AmiBlitz3.ab3@914>   MOVE.l A1,comdata                                        ; PED returns address of comdata-area in A1
0001DC44 <AmiBlitz3.ab3@916>   !ComData_GetW{comWord_PEDIsAvailable,D0}                 ; if PED_IsAvailable=0, quit AmiBlitz
0001DC48 <AmiBlitz3.ab3@917>   BEQ.w unload_ped
0001DC4C <AmiBlitz3.ab3@918> 
0001DC50 <AmiBlitz3.ab3@919>   BNE old_version_of_PED                                   ; no, than exit
0001DC8E <AmiBlitz3.ab3@925>   !ComData_GetL{comData_Magic,D0}
0001DC94 <AmiBlitz3.ab3@926>   CMP.l ##MagicIdentifier_Long,D0                          ;"~::~",D0    ; replace with a constants  tomsmart1 2012 03 09
0001DC98 <AmiBlitz3.ab3@927>   BNE unload_ped
0001DCD0 <AmiBlitz3.ab3@930>   !ComData_SetL{comPtr_Trap15            ,#directTrap15 }
0001DD08 <AmiBlitz3.ab3@931>   !ComData_SetL{comPtr_DirectBuffer      ,#directbuffer}
0001DD40 <AmiBlitz3.ab3@932>   !ComData_SetL{comPtr_MacroBase         ,#macrobase}
0001DD78 <AmiBlitz3.ab3@933>   !ComData_SetL{comPtr_VarBase           ,#varbase }
0001DDB0 <AmiBlitz3.ab3@934>   !ComData_SetL{comPtr_InstrBase         ,#instrtab}
0001DDE8 <AmiBlitz3.ab3@935>   !ComData_SetL{comPtr_LibPointer        ,#libpointer}
0001DE20 <AmiBlitz3.ab3@936>   !ComData_SetL{comPtr_CompilerVersion   ,#myversion }
0001DE58 <AmiBlitz3.ab3@937>   !ComData_SetL{comPtr_VersionInformation,#versioninformation}
0001DE90 <AmiBlitz3.ab3@938>   !ComData_SetL{comPtr_NumberOfBuilds    ,#number_of_builds}
0001DEC8 <AmiBlitz3.ab3@939>   !ComData_SetL{comFunc_SaveSource       ,#ab3_SaveSource}
0001DF00 <AmiBlitz3.ab3@940>   !ComData_SetL{comFunc_LoadSource       ,#ab3_LoadSource}
0001DF38 <AmiBlitz3.ab3@941>   !ComData_SetL{comFunc_ClearSource      ,#ab3_ClearSource}
0001DF70 <AmiBlitz3.ab3@944>   !ComData_SetL{comFunc_CalculatExpression       ,#menu_calculator}
0001DFA8 <AmiBlitz3.ab3@945>   !ComData_SetL{comPtr_CalculatorExpressionString,#str_calcexpression}
0001DFE0 <AmiBlitz3.ab3@948>   !ComData_SetL{comFunc_BackupXtraData           ,#BackupXtraData}
0001E018 <AmiBlitz3.ab3@949>   !ComData_SetL{comFunc_RestoreXtraData          ,#RestoreXtraData}
0001E050 <AmiBlitz3.ab3@951>   !ComData_SetL{comFunc_GetObjectEntry           ,#getobjectentry}
0001E088 <AmiBlitz3.ab3@952>   !ComData_SetL{comFunc_StoreMaxObjects          ,#storemaxobjects}
0001E0C0 <AmiBlitz3.ab3@954>   !ComData_SetL{comFunc_ReloadResidentsForPED    ,#ReloadResidentsForPED}
0001E0F8 <AmiBlitz3.ab3@955>   !ComData_SetL{comFunc_FreeClearResidentsForPED ,#FreeClearResidentsForPED}    ; add tomsmart1 2012 06 09
0001E130 <AmiBlitz3.ab3@957>   !ComData_SetL{comPtr_Residents_Table           ,#residents_table}
0001E168 <AmiBlitz3.ab3@958>   !ComData_SetL{comPtr_StringBuffer_Long         ,#stringbuffer}
0001E1A0 <AmiBlitz3.ab3@959>   !ComData_SetL{comPtr_Stacksize_Long            ,#stacksize}
0001E1D8 <AmiBlitz3.ab3@960>   !ComData_SetL{comPtr_Create_IconFile_Byte      ,#create_iconfile}
0001E210 <AmiBlitz3.ab3@961>   !ComData_SetL{comPtr_Make_SmallestCode_Byte    ,#make_smallestcode}
0001E248 <AmiBlitz3.ab3@962>   !ComData_SetL{comPtr_Link_DebugInfo_Byte       ,#link_debuginfo}
0001E280 <AmiBlitz3.ab3@963>   !ComData_SetL{comPtr_Use_Debugger_Byte         ,#use_debugger}
0001E2B8 <AmiBlitz3.ab3@964>   !ComData_SetL{comPtr_Autorun_Byte              ,#autorun}
0001E2F0 <AmiBlitz3.ab3@965>   !ComData_SetL{comPtr_InterruptCheck_Byte       ,#interruptcheck}
0001E328 <AmiBlitz3.ab3@966>   !ComData_SetL{comPtr_AssemblerCheck_Byte       ,#assemblercheck}
0001E360 <AmiBlitz3.ab3@967>   !ComData_SetL{comPtr_OverflowCheck_Byte        ,#overflowcheck}
0001E398 <AmiBlitz3.ab3@968>   !ComData_SetL{comPtr_Number_of_Objects_Word    ,#number_of_objects}
0001E3D0 <AmiBlitz3.ab3@969>   !ComData_SetL{comPtr_MaxObjects_Value_Word     ,#maxobjects_value}
0001E408 <AmiBlitz3.ab3@970>   !ComData_SetL{comPtr_MaxObject_Pos_Word        ,#maxobject_pos}
0001E440 <AmiBlitz3.ab3@973>   !ComData_SetL{comPtr_CLIArgumentsString       ,#str_cliarguments}
0001E446 <AmiBlitz3.ab3@975>   CLR.w returncode_org
0001E470 <AmiBlitz3.ab3@977>   !basic
0001E47A <AmiBlitz3.ab3@978>   If CLIMode
0001E4EC <AmiBlitz3.ab3@979>     If cli_verbose>=3 Then NPrint !TRANS{"Loading BlitzLibs..."}
0001E50A <AmiBlitz3.ab3@981>   !asm
0001E510 <AmiBlitz3.ab3@985>   TST.b start_without_libs
0001E514 <AmiBlitz3.ab3@986>   BNE 'skip_loading_libs
0001E518 <AmiBlitz3.ab3@988>     BSR.w call_setpointerbusy
0001E522 <AmiBlitz3.ab3@989>     MOVE.l #$FFFFffff,linenumat   ; was -1
0001E526 <AmiBlitz3.ab3@990>     BSR.w get_libraries
0001E52C <AmiBlitz3.ab3@991>     JSR init_libraries
0001E530 <AmiBlitz3.ab3@992>     BSR.w init_buffers
0001E534 <AmiBlitz3.ab3@993>     BSR.w call_setpointernormal
0001E536 <AmiBlitz3.ab3@1001>   MOVEQ.l #-$01,D0
0001E53C <AmiBlitz3.ab3@1002>   MOVEA.l _execbase,A6
0001E540 <AmiBlitz3.ab3@1003>   JSR _AllocSignal(A6)
0001E546 <AmiBlitz3.ab3@1004>   MOVE.l D0,signalNum
0001E548 <AmiBlitz3.ab3@1005>   MOVEQ.l #$00,D1
0001E54A <AmiBlitz3.ab3@1006>   BSET D0,D1
0001E550 <AmiBlitz3.ab3@1007>   MOVE.l D1,signals
0001E556 <AmiBlitz3.ab3@1014>   MOVE.l #str_defaultdbug,D1
0001E55A <AmiBlitz3.ab3@1015>   MOVEA.l _dosbase(PC),A6
0001E55E <AmiBlitz3.ab3@1016>   JSR _LoadSeg(A6)
0001E564 <AmiBlitz3.ab3@1017>   MOVE.l D0,ptr_seg_debugger
0001E566 <AmiBlitz3.ab3@1020>   TST.l d0
0001E56A <AmiBlitz3.ab3@1021>   BNE 'ok_12
0001E594 <AmiBlitz3.ab3@1022>     !basic
0001E5F6 <AmiBlitz3.ab3@1023>     error{!TRANS{"The Debugexecutor `Defaultdbug` was not found.\\nDebugging is not possible."}}
0001E614 <AmiBlitz3.ab3@1024>     !asm
0001E61A <AmiBlitz3.ab3@1027>   TST.l CLIMode
0001E61E <AmiBlitz3.ab3@1028>   BEQ run_ped
0001E648 <AmiBlitz3.ab3@1034>   !basic
0001E64E <AmiBlitz3.ab3@1035>   err.l = False
0001E67A <AmiBlitz3.ab3@1043>   If cli_sourcefile
0001E69A <AmiBlitz3.ab3@1044>     lock.l = Lock_(&cli_sourcefile,#ACCESS_READ)
0001E6A4 <AmiBlitz3.ab3@1045>     If lock
0001E6C8 <AmiBlitz3.ab3@1046>       NameFromLock_ lock,&cli_tempstr,1024
0001E6F2 <AmiBlitz3.ab3@1047>       cli_sourcefile.s = Peek.s(&cli_tempstr)
0001E702 <AmiBlitz3.ab3@1048>       UnLock_ lock
0001E72E <AmiBlitz3.ab3@1051>     If cli_exefile
0001E780 <AmiBlitz3.ab3@1052>       SetCurrentDir{dos_PathPart{cli_sourcefile}}
0001E7D8 <AmiBlitz3.ab3@1053>       path.s = dos_PathPart{cli_exefile}
0001E7F8 <AmiBlitz3.ab3@1054>       lock.l = Lock_(&path,#ACCESS_READ)
0001E802 <AmiBlitz3.ab3@1055>       If lock
0001E826 <AmiBlitz3.ab3@1056>         NameFromLock_ lock,&cli_tempstr,1024
0001E850 <AmiBlitz3.ab3@1057>         path.s = Peek.s(&cli_tempstr)
0001E8FE <AmiBlitz3.ab3@1058>         cli_exefile = dos_AddPart{path,dos_FilePart{cli_exefile}}
0001E90E <AmiBlitz3.ab3@1059>         UnLock_ lock
0001E958 <AmiBlitz3.ab3@1070>   If cli_verbose>=3 Then NPrint "Initializing token hashmap..."
0001E9CC <AmiBlitz3.ab3@1071> 
0001E9D6 <AmiBlitz3.ab3@1072>   *PreProcessor.preprocessor = preproc_Create{}
0001E9E6 <AmiBlitz3.ab3@1073>   Poke.l ?comPtr_PreProcessor,*PreProcessor
0001EA18 <AmiBlitz3.ab3@1074>   preproc_LoadTokens{*PreProcessor,TokenHashMapFile}
0001EA2E <AmiBlitz3.ab3@1075>   If *PreProcessor\tokens=Null
0001EAA8 <AmiBlitz3.ab3@1076>     If cli_verbose>=1 Then NPrint "No hashmap found (\\22"+TokenHashMapFile+"\\22), will be created..."
0001EAB2 <AmiBlitz3.ab3@1077>     preproc_QueryTokens{*PreProcessor}
0001EAE4 <AmiBlitz3.ab3@1078>     preproc_SaveTokens{*PreProcessor,TokenHashMapFile}
0001EB30 <AmiBlitz3.ab3@1086>   If cli_sourcefile><"" AND err=False
0001EBD6 <AmiBlitz3.ab3@1087>     If cli_verbose>=3 Then NPrint "Loading sourcecode \\22",cli_sourcefile,"\\22..."
0001EC08 <AmiBlitz3.ab3@1088>     succ=LoadSource{cli_sourcefile}
0001EC12 <AmiBlitz3.ab3@1089>     If succ
0001EC4A <AmiBlitz3.ab3@1090> 
0001ECC4 <AmiBlitz3.ab3@1091>         If cli_verbose>=1 Then NPrint "Compiling \\22"+cli_sourcefile+"\\22..."
0001ED06 <AmiBlitz3.ab3@1092> 
0001ED10 <AmiBlitz3.ab3@1094>         If comerr
0001ED16 <AmiBlitz3.ab3@1096>         Else
0001ED1C <AmiBlitz3.ab3@1100>     Else
0001ED6C <AmiBlitz3.ab3@1101>       If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to read source file!\\1b[0m" : err=True
0001EDB8 <AmiBlitz3.ab3@1105>   If cli_savefile><"" AND err=False
0001EE32 <AmiBlitz3.ab3@1106>     If cli_verbose>=2 Then NPrint "Saving sourcefiles as "+cli_savefile+"..."
0001EE60 <AmiBlitz3.ab3@1107>     SaveSource{cli_savefile}
0001EEAC <AmiBlitz3.ab3@1110>   If cli_dumpfile><"" AND err=False
0001EEF6 <AmiBlitz3.ab3@1111>     If cli_verbose>=2 Then NPrint "Saving dumpfile..."
0001EF2C <AmiBlitz3.ab3@1112>     DumpFile{cli_dumpfile,cli_dumpflags,cli_dumpform}
0001EF36 <AmiBlitz3.ab3@1115>   If cli_run
0001EF4A <AmiBlitz3.ab3@1116>     If comerr=False
0001EF76 <AmiBlitz3.ab3@1117>       If cli_exefile
0001EFF0 <AmiBlitz3.ab3@1118>         If cli_verbose>=1 Then NPrint "Recompiling "+cli_sourcefile+" for debug..."
0001F026 <AmiBlitz3.ab3@1119> 
0001F070 <AmiBlitz3.ab3@1121>       If cli_verbose>=1 Then NPrint "Running program..."
0001F07E <AmiBlitz3.ab3@1122> 
0001F080 <AmiBlitz3.ab3@1124>         CLR.l d0
0001F0BE <AmiBlitz3.ab3@1125>         !ComData_GetB{comByte_RunningFlag,D0}
0001F0C2 <AmiBlitz3.ab3@1126>         running.l = PutD0
0001F0DE <AmiBlitz3.ab3@1127>         If running Then Delay_ 50
0001F0F2 <AmiBlitz3.ab3@1129>       Until running=False
0001F106 <AmiBlitz3.ab3@1130>       If Peek.l(?_runerror)
0001F156 <AmiBlitz3.ab3@1131>         If cli_verbose>=0 Then NPrint "\\1b[1m*** ERROR: Unable to run compiled program!\\1b[0m" : err=True
0001F166 <AmiBlitz3.ab3@1142>   preproc_Free{*PreProcessor} : *PreProcessor=Null
0001F1B0 <AmiBlitz3.ab3@1143>   If cli_verbose>=3 Then NPrint "Exit AmiBlitz3."
0001F1B6 <AmiBlitz3.ab3@1144>   DeinitEmulatedPED{}
0001F1D4 <AmiBlitz3.ab3@1146>   !asm
0001F1DA <AmiBlitz3.ab3@1147> JMP terminate_ab3
0001F1E0 <AmiBlitz3.ab3@1153>   MOVEA.l ped_startup_addr,A1
0001F1E6 <AmiBlitz3.ab3@1154>   LEA str_tempfilename,A0
0001F1E8 <AmiBlitz3.ab3@1155>   JSR (A1)            ;goto editor with filename!
0001F1EE <AmiBlitz3.ab3@1162>   MOVE.l signalNum,D0
0001F1F4 <AmiBlitz3.ab3@1163>   MOVEA.l _execbase,A6
0001F1F8 <AmiBlitz3.ab3@1164>   JSR _FreeSignal(A6)
0001F1FE <AmiBlitz3.ab3@1166>   MOVE.l ptr_seg_debugger,D1
0001F202 <AmiBlitz3.ab3@1167>   BEQ.b 'noseg
0001F206 <AmiBlitz3.ab3@1168>     MOVEA.l _dosbase(PC),A6
0001F20A <AmiBlitz3.ab3@1169>     JSR _UnLoadSeg(A6)
0001F20E <AmiBlitz3.ab3@1172>   BSR.w Aclearallvars
0001F212 <AmiBlitz3.ab3@1173>   BSR.w free_residents
0001F218 <AmiBlitz3.ab3@1174>   JSR free_blitzlibs
0001F21E <AmiBlitz3.ab3@1177>   MOVE.l ptr_seg_ped,D1
0001F222 <AmiBlitz3.ab3@1178>   BEQ freemem_and_quit
0001F226 <AmiBlitz3.ab3@1179>   MOVEA.l _dosbase(PC),A6
0001F22A <AmiBlitz3.ab3@1180>   JSR _UnLoadSeg(A6)
0001F22E <AmiBlitz3.ab3@1181>   BRA freemem_and_quit     ; added by tomsmart1 for Ped errormessage
0001F258 <AmiBlitz3.ab3@1184>   !basic
0001F31C <AmiBlitz3.ab3@1185> 
0001F33A <AmiBlitz3.ab3@1186>   !asm
0001F33E <AmiBlitz3.ab3@1187>   BRA freemem_and_quit
0001F368 <AmiBlitz3.ab3@1190>   !basic
0001F42C <AmiBlitz3.ab3@1191>   error{!TRANS{"Can't load the Editor:\n"} + pedfile$ + !TRANS{"\n must quit, sorry!"} }  ; show error message  tomsmart1
0001F44A <AmiBlitz3.ab3@1192>   !asm
0001F44E <AmiBlitz3.ab3@1196>   BSR.w freeallox
0001F454 <AmiBlitz3.ab3@1198>   MOVEA.l ptr_macrobuffer_begin,A1
0001F456 <AmiBlitz3.ab3@1200>   MOVE.l -(a1),D0
0001F458 <AmiBlitz3.ab3@1201>   ADDQ.l #4,d0
0001F45E <AmiBlitz3.ab3@1203>   MOVEA.l _execbase,A6
0001F462 <AmiBlitz3.ab3@1204>   JSR _FreeMem(A6)
0001F468 <AmiBlitz3.ab3@1207>   MOVEA.l _dosbase,A1
0001F46E <AmiBlitz3.ab3@1208>   MOVEA.l _execbase,A6
0001F472 <AmiBlitz3.ab3@1209>   JSR _CloseLibrary(A6)
0001F478 <AmiBlitz3.ab3@1211>   MOVEA.l constpcat,A1
0001F47E <AmiBlitz3.ab3@1212>   MOVE.l constmaxpc,D0
0001F484 <AmiBlitz3.ab3@1213>   MOVEA.l _execbase,A6
0001F488 <AmiBlitz3.ab3@1214>   JSR _FreeMem(A6)
0001F48E <AmiBlitz3.ab3@1217>   MOVEA.l _mathffpbase,A1
0001F494 <AmiBlitz3.ab3@1218>   MOVEA.l _execbase,A6
0001F498 <AmiBlitz3.ab3@1219>   JSR _CloseLibrary(A6)
0001F49E <AmiBlitz3.ab3@1223>   TST.l mempool2                    ; test if mempool2 is allocated
0001F4A2 <AmiBlitz3.ab3@1224>   BEQ shutdown_compiler             ; no jump
0001F4A8 <AmiBlitz3.ab3@1225>   MOVEA.l _execbase,A6              ; yes delete it to free the memory
0001F4AE <AmiBlitz3.ab3@1226>   MOVE.l mempool2,a0
0001F4B2 <AmiBlitz3.ab3@1227>   JSR _DeletePool(a6)
0001F4B8 <AmiBlitz3.ab3@1228>   CLR.l mempool2
0001F4BE <AmiBlitz3.ab3@1231>   MOVEA.l _execbase,A6
0001F4C4 <AmiBlitz3.ab3@1232>   MOVE.l mempool,a0
0001F4C8 <AmiBlitz3.ab3@1233>   JSR _DeletePool(a6)
0001F4CE <AmiBlitz3.ab3@1234>   CLR.l pushat
0001F4D4 <AmiBlitz3.ab3@1235>   CLR.l mempool
0001F4DA <AmiBlitz3.ab3@1237>   JSR free_unusedfunctions
0001F4DC <AmiBlitz3.ab3@1238>   MOVEQ #0,d0
0001F4EA <AmiBlitz3.ab3@1241>   !exitasm
0001F522 <AmiBlitz3.ab3@1242>   If dynassign<>""
0001F52C <AmiBlitz3.ab3@1243>     If *AssignSema
0001F53C <AmiBlitz3.ab3@1244>       ReleaseSemaphore_ *AssignSema
0001F554 <AmiBlitz3.ab3@1245>       If (AttemptSemaphore_ (*AssignSema))                 ; we are the exclusive owner of the sema now!
0001F5E8 <AmiBlitz3.ab3@1246>         dos_RemAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001F622 <AmiBlitz3.ab3@1247>         dos_RemAssign{dynassign}
0001F632 <AmiBlitz3.ab3@1248>         RemSemaphore_ *AssignSema
0001F642 <AmiBlitz3.ab3@1249>         ReleaseSemaphore_ *AssignSema
0001F674 <AmiBlitz3.ab3@1250>         If *AssignSema\ss_Link\ln_Name Then FreeVec_ *AssignSema\ss_Link\ln_Name : *AssignSema\ss_Link\ln_Name = Null
0001F684 <AmiBlitz3.ab3@1251>         FreeVec_ *AssignSema
0001F68A <AmiBlitz3.ab3@1252>         *AssignSema = Null
0001F6B8 <AmiBlitz3.ab3@1256>   SetCurrentDir{cli_path}
0001F6DA <AmiBlitz3.ab3@1257>   !coutclose
0001F6E0 <AmiBlitz3.ab3@1258> End
0001F6EC <AmiBlitz3.ab3@1262> str_doslibrary:     Dc.b "dos.library",0 : Even
0001F6F0 <AmiBlitz3.ab3@1263> _dosbase:           Ds.l 1
0001F6F6 <AmiBlitz3.ab3@1267>   MOVEA.l _execbase,A6
0001F6FC <AmiBlitz3.ab3@1268>   LEA str_doslibrary,A1
0001F700 <AmiBlitz3.ab3@1269>   JSR _OldOpenLibrary(A6)
0001F706 <AmiBlitz3.ab3@1270>   MOVE.l D0,_dosbase
0001F708 <AmiBlitz3.ab3@1271> RTS
0001F70E <AmiBlitz3.ab3@1275>   MOVEA.l #str_mathffpname,A1
0001F714 <AmiBlitz3.ab3@1276>   MOVEA.l _execbase,A6
0001F718 <AmiBlitz3.ab3@1277>   JSR _OldOpenLibrary(A6)
0001F71E <AmiBlitz3.ab3@1278>   MOVE.l D0,_mathffpbase
0001F720 <AmiBlitz3.ab3@1279> RTS
0001F752 <AmiBlitz3.ab3@1286> !ComData_JMP{comFunc_SetNormalPointer}
0001F784 <AmiBlitz3.ab3@1293> !ComData_JMP{comFunc_SetBusyPointer}
0001F7AE <AmiBlitz3.ab3@1297>   !basic
0001F7B2 <AmiBlitz3.ab3@1298>   ab3save_filenameP.l = PutD0
0001F7BC <AmiBlitz3.ab3@1299>   If ab3save_filenameP
0001F7E4 <AmiBlitz3.ab3@1300>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001F812 <AmiBlitz3.ab3@1302>     SaveSource{ab3save_filename}
0001F818 <AmiBlitz3.ab3@1303>   Else
0001F852 <AmiBlitz3.ab3@1304>     error{"INTERNAL ERROR: no filename passed in D0 to SaveSource{}!"}
0001F870 <AmiBlitz3.ab3@1306>   !asm
0001F872 <AmiBlitz3.ab3@1307>   RTS
0001F89C <AmiBlitz3.ab3@1310>   !basic
0001F8A0 <AmiBlitz3.ab3@1311>   ab3save_filenameP.l = PutD0
0001F8AA <AmiBlitz3.ab3@1312>   If ab3save_filenameP
0001F8D2 <AmiBlitz3.ab3@1313>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001F900 <AmiBlitz3.ab3@1314>     LoadSource{ab3save_filename}
0001F906 <AmiBlitz3.ab3@1315>   Else
0001F940 <AmiBlitz3.ab3@1316>     error{"INTERNAL ERROR: no filename passed in D0 to LoadSource{}!"}
0001F95E <AmiBlitz3.ab3@1318>   !asm
0001F960 <AmiBlitz3.ab3@1319>   RTS
0001F98A <AmiBlitz3.ab3@1322>   !basic
0001F990 <AmiBlitz3.ab3@1323>   ClearSource{}
0001F9AE <AmiBlitz3.ab3@1324>   !asm
0001F9B0 <AmiBlitz3.ab3@1325>   RTS
0001F9DA <AmiBlitz3.ab3@1328>   !basic
0001F9E0 <AmiBlitz3.ab3@1329>   OpenConsoleFake{}
0001F9FE <AmiBlitz3.ab3@1330>   !asm
0001FA00 <AmiBlitz3.ab3@1331>   RTS
0001FA2A <AmiBlitz3.ab3@1335>   !basic
0001FA30 <AmiBlitz3.ab3@1336>   CloseConsoleFake{}
0001FA4E <AmiBlitz3.ab3@1337>   !asm
0001FA50 <AmiBlitz3.ab3@1338>   RTS
0001FA56 <AmiBlitz3.ab3@1343>   MOVE.w d6,menuitemdebug
0001FA80 <AmiBlitz3.ab3@1344>   !basic
0001FA92 <AmiBlitz3.ab3@1345>   menuitemx.l = Peek.w(?menuitemdebug)
0001FAB8 <AmiBlitz3.ab3@1346>   If menuitemx>16 OR  menuitemx<0
0001FB2C <AmiBlitz3.ab3@1347>     error{"Called invalid AB3 Menuitem #"+Str$(menuitemx)+"!"}
0001FB34 <AmiBlitz3.ab3@1348>     menuitemx=0
0001FB44 <AmiBlitz3.ab3@1350>   Poke.w ?menuitemdebug,menuitemx
0001FB62 <AmiBlitz3.ab3@1351>   !asm
0001FB68 <AmiBlitz3.ab3@1352>   MOVE.w menuitemdebug,d6
0001FB6E <AmiBlitz3.ab3@1356>   MOVE.l A5,firstitem_
0001FB74 <AmiBlitz3.ab3@1357>   MOVE.w D7,numlines_org
0001FB7A <AmiBlitz3.ab3@1359>   MOVE.l d7,numlines
0001FB7C <AmiBlitz3.ab3@1361>   LSL.w #2,D6
0001FB82 <AmiBlitz3.ab3@1362>   LEA menu_items,A0
0001FB86 <AmiBlitz3.ab3@1363>   MOVEA.l $0(A0,D6.W),A0
0001FB90 <AmiBlitz3.ab3@1364>   MOVE.l #$FFFFffff,linenumat             ; was -1
0001FB9A <AmiBlitz3.ab3@1365>   MOVE.l #$FFFFffff,compilelinecounter    ; was -1
0001FB9C <AmiBlitz3.ab3@1366>   JSR (A0)                              ; jsr to the function for the menuitem
0001FBA2 <AmiBlitz3.ab3@1367>   MOVE.l compilelinecounter,D0
0001FBA4 <AmiBlitz3.ab3@1368> RTS
0001FBA8 <AmiBlitz3.ab3@1370> menuitemdebug: Dc.l 0
0001FBAC <AmiBlitz3.ab3@1372> mempool                Dc.l 0
0001FBC2 <AmiBlitz3.ab3@1373> str_loaddebugmessage:  Dc.b "Debug module to load",0 : Even        ; was dtext org source
0001FBC8 <AmiBlitz3.ab3@1374> dloaderr:              JSR handle_compileerror
0001FBE4 <AmiBlitz3.ab3@1375>                        Dc.b "Can't LoadSeg debug module!",0 : Even
0001FC22 <AmiBlitz3.ab3@1383>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001FC28 <AmiBlitz3.ab3@1384>   LEA str_loaddebugmessage,A2
0001FC2E <AmiBlitz3.ab3@1385>   LEA str_blitz3assign,A0
0001FC34 <AmiBlitz3.ab3@1386>   LEA str_temp_debugmodulename,A1
0001FC36 <AmiBlitz3.ab3@1387>   JSR (A3)                                                  ;open ped filerequest
0001FC3A <AmiBlitz3.ab3@1388>   BEQ.w nodload
0001FC40 <AmiBlitz3.ab3@1393>   MOVE.l D0,ptr_temp_debugmodule
0001FC44 <AmiBlitz3.ab3@1394>   BSR.w call_setpointerbusy
0001FC4A <AmiBlitz3.ab3@1396> 
0001FC50 <AmiBlitz3.ab3@1398>   MOVE.l A7,errstack
0001FC5A <AmiBlitz3.ab3@1399>   MOVE.l #nodload,errcont
0001FC60 <AmiBlitz3.ab3@1400>   MOVE.l ptr_temp_debugmodule,D1
0001FC64 <AmiBlitz3.ab3@1402>   MOVEA.l _dosbase(PC),A6
0001FC68 <AmiBlitz3.ab3@1403>   JSR _LoadSeg(A6)
0001FC6A <AmiBlitz3.ab3@1404>   MOVE.l D0,D7
0001FC6E <AmiBlitz3.ab3@1405>   BEQ.w dloaderr
0001FC74 <AmiBlitz3.ab3@1406>   MOVE.l ptr_seg_debugger,D1
0001FC78 <AmiBlitz3.ab3@1407>   BEQ.b 'ndseg
0001FC7C <AmiBlitz3.ab3@1408>   MOVEA.l _dosbase(PC),A6
0001FC80 <AmiBlitz3.ab3@1409>   JSR _UnLoadSeg(A6)
0001FC84 <AmiBlitz3.ab3@1410>   BSR.w call_setpointernormal
0001FC8A <AmiBlitz3.ab3@1413>   MOVE.l D7,ptr_seg_debugger
0001FC8C <AmiBlitz3.ab3@1416> RTS
0001FCAA <AmiBlitz3.ab3@1419> str_request_exename:   Dc.b "Name of Executable to Create:",0 : Even                        ;xtext org source
0001FD6A <AmiBlitz3.ab3@1420> exepath:               Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xpath  dcb.b 192,0 org source
0001FE2A <AmiBlitz3.ab3@1421> exefilename:           Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xname  dcb.b 192,0 org source
0001FE2E <AmiBlitz3.ab3@1422> ptr_newexefilename:    Dc.l 0                                                               ;execname org
0001FE58 <AmiBlitz3.ab3@1426>   !basic
0001FE82 <AmiBlitz3.ab3@1427>   exepath.s = Peek.s(?exepath)
0001FEAC <AmiBlitz3.ab3@1428>   exefile.s = Peek.s(?exefilename)
0001FF2C <AmiBlitz3.ab3@1429>   exefile.s = dos_AddPart{exepath,exefile}
0001FF64 <AmiBlitz3.ab3@1430>   Poke.s ?tempspace,exefile
0001FF82 <AmiBlitz3.ab3@1431>   !asm
0001FF88 <AmiBlitz3.ab3@1452>   LEA tempspace,a0
0001FF8A <AmiBlitz3.ab3@1453>   MOVE.l a0,d0
0001FF8E <AmiBlitz3.ab3@1454> BRA newcreate2
0001FFB8 <AmiBlitz3.ab3@1462>   !basic
0001FFE2 <AmiBlitz3.ab3@1463>   request_exename.s = Peek.s(?str_request_exename )
0002003E <AmiBlitz3.ab3@1464>   request_exename   = !TRANS{request_exename}
00020044 <AmiBlitz3.ab3@1465>   GetD0 &request_exename
00020062 <AmiBlitz3.ab3@1466>   !asm
00020064 <AmiBlitz3.ab3@1467>   MOVE.l D0,A2
000200A2 <AmiBlitz3.ab3@1471>   !ComData_GetL{comFunc_ASLFileRequest,A3}
000200A8 <AmiBlitz3.ab3@1473>   LEA exepath,A0
000200AE <AmiBlitz3.ab3@1474>   LEA exefilename,A1
000200B0 <AmiBlitz3.ab3@1475>   JSR (A3)                                                 ;open ped filerequest
000200B4 <AmiBlitz3.ab3@1477>   BEQ.w cancel_createexe    ; was 'err
000200BE <AmiBlitz3.ab3@1481>   ADD.l #1,number_of_builds
000200C4 <AmiBlitz3.ab3@1485>   MOVE.l D0,ptr_newexefilename
000200CC <AmiBlitz3.ab3@1486>   MOVE.w #-1,debugversion
000200D4 <AmiBlitz3.ab3@1492>     MOVE.w #1,makeexec
000200DA <AmiBlitz3.ab3@1493>     JSR ab3_OpenDebugFile
000200DE <AmiBlitz3.ab3@1495>     BSR.w startcompile
000200E4 <AmiBlitz3.ab3@1497>     JSR ab3_CloseDebugFile
000200EE <AmiBlitz3.ab3@1499>     CMP.l #"NORE",reqmode
000200F2 <AmiBlitz3.ab3@1500>   BEQ 'l1
000200F8 <AmiBlitz3.ab3@1502>   TST.w anyerrs
000200FC <AmiBlitz3.ab3@1503>   BNE.b 'skip
00020100 <AmiBlitz3.ab3@1504>   BSR.w savefile
00020102 <AmiBlitz3.ab3@1510> RTS
0002010A <AmiBlitz3.ab3@1514>   MOVE.w #-1,flag_noPED
0002010C <AmiBlitz3.ab3@1515> RTS
00020114 <AmiBlitz3.ab3@1519>   MOVE.w #-1,flag_noCLI
00020116 <AmiBlitz3.ab3@1520> RTS
00020140 <AmiBlitz3.ab3@1524>   !basic
00020152 <AmiBlitz3.ab3@1525>     If dbg_fid>=0
00020164 <AmiBlitz3.ab3@1526> 
00020178 <AmiBlitz3.ab3@1527>         file_WriteMem{dbg_fid,&dbg_detokenlinesBuffer,fillcount} ; yes save it
00020180 <AmiBlitz3.ab3@1528>         fillcount = 0                                            ; set it back to zero bytes
0002018A <AmiBlitz3.ab3@1530>       file_Close{dbg_fid}
00020196 <AmiBlitz3.ab3@1531>       dbg_fid = -1
000201A6 <AmiBlitz3.ab3@1533>     Poke.w ?word_WriteDebugFileNow,0
000201C4 <AmiBlitz3.ab3@1534>   !asm
000201C6 <AmiBlitz3.ab3@1535> RTS
000201CA <AmiBlitz3.ab3@1539>   BSR ab3_CloseDebugFile     ; remove double code and replaced it with a call of the subroutine  tomsmart1
000201F4 <AmiBlitz3.ab3@1540>   !basic
00020206 <AmiBlitz3.ab3@1541>     If dbg_fid.l<0
00020208 <AmiBlitz3.ab3@1542>       CLR.l d0
00020246 <AmiBlitz3.ab3@1543>       !ComData_GetW{comWord_CreateDebugFile,D0}
0002024A <AmiBlitz3.ab3@1544>       dbg_Create.l = PutD0
00020254 <AmiBlitz3.ab3@1545>       If (dbg_Create) ; only when set!
00020264 <AmiBlitz3.ab3@1546>         exefileP.l = Peek.l (?ptr_newexefilename)
0002028C <AmiBlitz3.ab3@1547>         exefile.s = ""
000202BE <AmiBlitz3.ab3@1548>         If exefileP Then exefile.s = Peek.s(exefileP)
000202F6 <AmiBlitz3.ab3@1549>         If exefile><""
0002034C <AmiBlitz3.ab3@1550>           dbg_fid = file_Open{exefile+".dbg",#file_forcewrite}
0002035E <AmiBlitz3.ab3@1551>           If dbg_fid>=0
00020370 <AmiBlitz3.ab3@1552>             Poke.w ?word_WriteDebugFileNow,-1
0002037C <AmiBlitz3.ab3@1555>         oldhunkoffset.l = -1
000203A4 <AmiBlitz3.ab3@1556>         oldfile.s       = ""
000203AC <AmiBlitz3.ab3@1557>         fillcount       = 0       ; set it to zero bytes in the buffer
000203CA <AmiBlitz3.ab3@1560>   !asm
000203CC <AmiBlitz3.ab3@1561> RTS
000203D2 <AmiBlitz3.ab3@1565>   TST.w word_WriteDebugFileNow
000203D6 <AmiBlitz3.ab3@1566>   BEQ 'skipdebugfile
00020400 <AmiBlitz3.ab3@1567>   !basic
00020412 <AmiBlitz3.ab3@1568>     If dbg_fid>=0
00020424 <AmiBlitz3.ab3@1569>       pass.l          = Peek.w(?pass)
00020436 <AmiBlitz3.ab3@1570>       makesmallest.b  = Peek.b(?make_smallestcode)               ; get the status of make_smallestcode  tomsmart1
0002045A <AmiBlitz3.ab3@1571> 
00020460 <AmiBlitz3.ab3@1572>         oldhunkoffset.l = hunkoffset.l
00020494 <AmiBlitz3.ab3@1573>         oldfile.s       = codefile.s
000204B0 <AmiBlitz3.ab3@1574>         If Peek.w (?ininclude)>0
000204C0 <AmiBlitz3.ab3@1575>           codeline.l = Peek.l(?includeline);-1
00020530 <AmiBlitz3.ab3@1576>           codefile.s = dos_FilePart{incdim(Peek.w(?ininclude)-1)}
00020536 <AmiBlitz3.ab3@1577>         Else
00020564 <AmiBlitz3.ab3@1578>           !ComData_LEA{comStr_SourceName,A0}
00020566 <AmiBlitz3.ab3@1579>           MOVE.l A0,D0
0002056A <AmiBlitz3.ab3@1580>           sourceP.l = PutD0
00020592 <AmiBlitz3.ab3@1581>           codefile.s = Peek.s(sourceP)
000205A2 <AmiBlitz3.ab3@1582>           codeline.l = Peek.l(?linenumat)
000205CA <AmiBlitz3.ab3@1584>         hunkoffset.l = Peek.l(?destpointer)-Peek.l(?destbufferstart)
0002061E <AmiBlitz3.ab3@1585>         If oldhunkoffset><hunkoffset OR oldfile><codefile
000206C0 <AmiBlitz3.ab3@1586>           linebegintext.s = Hex$(hunkoffset)+" <"+codefile+"@"+Str$(codeline)+"> "
000206D4 <AmiBlitz3.ab3@1587>           linebeginlen.l  = FLen(linebegintext)
00020712 <AmiBlitz3.ab3@1588>           Poke.s &dbg_detokenlinesBuffer+fillcount,linebegintext           ; copy the begin of the line text to the buffer
00020720 <AmiBlitz3.ab3@1589>           fillcount + linebeginlen
00020730 <AmiBlitz3.ab3@1591>           *sourceLine.SourceLine_t = Peek.l(?sourceline)
0002073A <AmiBlitz3.ab3@1592>           If *sourceLine
0002077C <AmiBlitz3.ab3@1593>             !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0002078C <AmiBlitz3.ab3@1594>             *tn.preprocessor = Peek.l(?include_preprocessor)
000207BE <AmiBlitz3.ab3@1595>             written.l = preproc_Detokenize{*tn,&*sourceLine\Text,&dbg_detokenlinesBuffer+fillcount,*sourceLine\CharLength}
000207D0 <AmiBlitz3.ab3@1596>             If written>0
000207DE <AmiBlitz3.ab3@1597>               written-1
000207EC <AmiBlitz3.ab3@1599>             fillcount + written                                            ; added the dekotenline size to the count
000207F2 <AmiBlitz3.ab3@1600>           Else
00020824 <AmiBlitz3.ab3@1601>             Poke.s &dbg_detokenlinesBuffer+fillcount,"NULL"                ; copy it to the buffer
00020832 <AmiBlitz3.ab3@1602>             fillcount + 4                                                  ; added the size to the count
00020848 <AmiBlitz3.ab3@1605>           Poke.b &dbg_detokenlinesBuffer+fillcount,10                      ; copy line end (return) in to the buffer
00020856 <AmiBlitz3.ab3@1606>           fillcount +1                                                     ; count +1
00020868 <AmiBlitz3.ab3@1608>           If fillcount >= (#MAX_dbg_detokenlinesBufferSize - #MAX_Columns) ; check if we have no room for a nother line
0002087C <AmiBlitz3.ab3@1609>             file_WriteMem{dbg_fid,&dbg_detokenlinesBuffer,fillcount}       ; no room write the buffer it do disk
00020884 <AmiBlitz3.ab3@1610>             fillcount = 0                                                  ; set it back to zero bytes
000208A2 <AmiBlitz3.ab3@1616>   !asm
000208A4 <AmiBlitz3.ab3@1619> RTS
000208A6 <AmiBlitz3.ab3@1621> word_WriteDebugFileNow: Dc.w 0
000208A8 <AmiBlitz3.ab3@1625> flag_noPED:  Ds.w 1                                        ;closeed org source
000208AA <AmiBlitz3.ab3@1626> flag_noCLI:  Ds.w 1                                        ;nocli org source
000208AE <AmiBlitz3.ab3@1630>   MOVEM.l A2-A3,-(A7)
000208B4 <AmiBlitz3.ab3@1631>   CLR.b doublepeek
000208BA <AmiBlitz3.ab3@1632>   MOVE.l A5,lastsourcepos
000208C0 <AmiBlitz3.ab3@1633>    JSR getchar
000208C4 <AmiBlitz3.ab3@1634>   CMP.w #$2E,D0              ;'.'
000208C8 <AmiBlitz3.ab3@1635>    BEQ.w 'ok
000208CE <AmiBlitz3.ab3@1636>   MOVEA.l defaulttype,A2
000208D2 <AmiBlitz3.ab3@1637>   CMP.w #$24,D0              ;'$'
000208D6 <AmiBlitz3.ab3@1638>    BNE.w 'none
000208D8 <AmiBlitz3.ab3@1639>   MOVEQ.l #$07,D1
000208DC <AmiBlitz3.ab3@1640>  BRA.w 'skip
000208E2 <AmiBlitz3.ab3@1643>   JSR getparameter2
000208E6 <AmiBlitz3.ab3@1644>   BEQ.w JUMP_syntaxerr1
000208EC <AmiBlitz3.ab3@1645>   LEA newtypebase,A2
000208F2 <AmiBlitz3.ab3@1646>   JSR findtype
000208F6 <AmiBlitz3.ab3@1647>   BNE.w JUMP_notypeerr1
00020900 <AmiBlitz3.ab3@1652>   MOVE.w oldqflag,instringon
00020906 <AmiBlitz3.ab3@1653>   MOVEA.l lastsourcepos,A5
0002090C <AmiBlitz3.ab3@1655>   MOVE.l a2,functionreturntype
00020914 <AmiBlitz3.ab3@1656>   CMPI.l #$100,$4(A2)
00020918 <AmiBlitz3.ab3@1657>   BLE.w 'isvar
0002091A <AmiBlitz3.ab3@1661>   MOVEQ #3,d1
0002091E <AmiBlitz3.ab3@1662>   BRA 'skip
00020922 <AmiBlitz3.ab3@1672>   MOVE.w $6(A2),D1
00020928 <AmiBlitz3.ab3@1674>   CMP.w #8,8(a2)
0002092C <AmiBlitz3.ab3@1675>   BNE 'l1
00020934 <AmiBlitz3.ab3@1676>   MOVE.b #1,doublepeek
0002093A <AmiBlitz3.ab3@1681>   MOVE.w D1,convsize
0002093E <AmiBlitz3.ab3@1682>   MOVEM.l (A7)+,A2-A3
00020940 <AmiBlitz3.ab3@1683> RTS
00020946 <AmiBlitz3.ab3@1685> JUMP_notypeerr1  JMP notypeerr
0002094C <AmiBlitz3.ab3@1686> JUMP_illtypeerr1 JMP illtypeerr
00020952 <AmiBlitz3.ab3@1687> JUMP_syntaxerr1  JMP syntaxerr
00020956 <AmiBlitz3.ab3@1692>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
0002095C <AmiBlitz3.ab3@1693>   MOVEA.l _execbase,A6
00020962 <AmiBlitz3.ab3@1694>   TST.b MorphOS                    ; test if we have MorphOS ( 0 no, 1 yes)
00020966 <AmiBlitz3.ab3@1695>    BEQ 'useclearU                  ; if we have 0 = No MorpOS then jump
00020968 <AmiBlitz3.ab3@1697>   MOVEQ.l #8,d1
0002096E <AmiBlitz3.ab3@1698>   MOVE.l #200,d0
00020972 <AmiBlitz3.ab3@1699>   JSR _CacheClearE(A6)
00020976 <AmiBlitz3.ab3@1700>  BRA 'exit
0002097A <AmiBlitz3.ab3@1739>   JSR _CacheClearU(A6)
0002097E <AmiBlitz3.ab3@1742>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
00020980 <AmiBlitz3.ab3@1743> RTS
0002098A <AmiBlitz3.ab3@1751>   ADD.l #1,number_of_builds
00020990 <AmiBlitz3.ab3@1753>   CLR.w debugversion
00020996 <AmiBlitz3.ab3@1754>   CLR.w flag_noPED
0002099C <AmiBlitz3.ab3@1755>   CLR.w flag_noCLI
000209A4 <AmiBlitz3.ab3@1759>     MOVE.w #0,makeexec                                     ;MOVE.w #$FFFF,debugversion
000209A8 <AmiBlitz3.ab3@1761>     BSR.w startcompile
000209B2 <AmiBlitz3.ab3@1763>     CMP.l #"NORE",reqmode
000209B6 <AmiBlitz3.ab3@1764>   BEQ 'l1
000209BC <AmiBlitz3.ab3@1770>   TST.w anyerrs
000209C0 <AmiBlitz3.ab3@1771>    BNE.w 'dontrun
000209C4 <AmiBlitz3.ab3@1773>   MOVE.w flag_noPED(PC),D1
000209C8 <AmiBlitz3.ab3@1774>    BEQ.w 'noclose
000209FA <AmiBlitz3.ab3@1778>   !ComData_JSR{comFunc_CloseGUI}
000209FE <AmiBlitz3.ab3@1779>  BRA.b 'runprogram
00020A02 <AmiBlitz3.ab3@1783>   BSR.w compilerequester
00020A08 <AmiBlitz3.ab3@1788>   MOVEA.l _dosbase,A6
00020A0E <AmiBlitz3.ab3@1790>   LEA exepath,a0
00020A10 <AmiBlitz3.ab3@1791>   MOVE.l a0,d1
00020A12 <AmiBlitz3.ab3@1792>   MOVEQ #-2,d2
00020A16 <AmiBlitz3.ab3@1793>   JSR _Lock(a6)                                            ;lock
00020A1C <AmiBlitz3.ab3@1794>   MOVE.l d0,exelock
00020A22 <AmiBlitz3.ab3@1796>   MOVE.l #0,d1
00020A26 <AmiBlitz3.ab3@1797>   JSR _CurrentDir(A6)
00020A2C <AmiBlitz3.ab3@1798>   MOVE.l D0,lock_currentdir
00020A2E <AmiBlitz3.ab3@1799>   MOVE.l D0,D1
00020A32 <AmiBlitz3.ab3@1800>   JSR _CurrentDir(A6)
00020A38 <AmiBlitz3.ab3@1802>   CLR.l ptr_exetask
00020A3E <AmiBlitz3.ab3@1811>   MOVE.l #str_process_name,D1
00020A40 <AmiBlitz3.ab3@1812>   MOVEQ.l #$00,D2
00020A46 <AmiBlitz3.ab3@1813>   MOVE.l #proc_seglist,D3
00020A48 <AmiBlitz3.ab3@1814>   LSR.l #2,D3
00020A4E <AmiBlitz3.ab3@1815>   MOVE.l stacksize,D4
00020A54 <AmiBlitz3.ab3@1816>   MOVEA.l _dosbase,A6
00020A58 <AmiBlitz3.ab3@1817>   JSR _CreateProc(A6)                                      ;runtask
00020A5A <AmiBlitz3.ab3@1818>   TST.l D0
00020A5E <AmiBlitz3.ab3@1819>    BEQ 'ErrorRunningProg
00020A94 <AmiBlitz3.ab3@1824>   !ComData_SetB{comByte_RunningFlag,#1}   ; this should be done here, straigt after it is clear that
00020A9A <AmiBlitz3.ab3@1828>   TST.w flag_noPED
00020A9E <AmiBlitz3.ab3@1829>    BNE.b 'fatal
00020AA2 <AmiBlitz3.ab3@1830>   BSR.w close_compilewin
00020AA8 <AmiBlitz3.ab3@1833>   CLR.l firstlocal
00020AAE <AmiBlitz3.ab3@1834>   CLR.l firstglob
00020AB2 <AmiBlitz3.ab3@1836>   MOVE.w flag_noPED(PC),D1
00020AB6 <AmiBlitz3.ab3@1837>   BEQ.w 'noopen         ;skip_openGUI
00020AE8 <AmiBlitz3.ab3@1841>   !ComData_JSR{comFunc_CreateGUI}
00020AEA <AmiBlitz3.ab3@1851>  RTS
00020AF4 <AmiBlitz3.ab3@1855>   MOVE.l #1,_runerror
00020AF8 <AmiBlitz3.ab3@1856> BRA 'fatal
00020AFC <AmiBlitz3.ab3@1860> _runerror: Dc.l 0
00020B00 <AmiBlitz3.ab3@1861> lock_currentdir:    Ds.l 1                                          ;tasklock org source
00020B04 <AmiBlitz3.ab3@1862> ptr_exetask:        Ds.l 1                                          ;panictask org source
00020B08 <AmiBlitz3.ab3@1863> signalNum:          Ds.l 1                                          ;panicbit org source
00020B0C <AmiBlitz3.ab3@1864> signals:            Ds.l 1                                          ;panicmask org source
00020B22 <AmiBlitz3.ab3@1866> str_process_name:   Dc.b "Blitz ][ Program Proc",0 : Even           ;procname org source
00020B27 <AmiBlitz3.ab3@1867>                     Ds.b 5                                          ;cnop 0,4 :dc.l 0   ;length org source
00020B28 <AmiBlitz3.ab3@1868> Even4
00020B2C <AmiBlitz3.ab3@1870> ptr_ThisTask:       Ds.l 1                                          ;length
00020B30 <AmiBlitz3.ab3@1871> .proc_seglist:      Ds.l 1                                          ;procstart org source ;next
00020B36 <AmiBlitz3.ab3@1875>   MOVEA.l $4,A0
00020B3E <AmiBlitz3.ab3@1876>   MOVE.l  $114(A0),ptr_exetask
00020B44 <AmiBlitz3.ab3@1878>   MOVEA.l _dosbase,A6
00020B4A <AmiBlitz3.ab3@1879>   MOVE.l exelock,D1
00020B4E <AmiBlitz3.ab3@1880>   JSR _CurrentDir(A6)
00020B84 <AmiBlitz3.ab3@1886>   !ComData_SetB{comByte_RunningFlag,#1}
00020B88 <AmiBlitz3.ab3@1893>   MOVE.w flag_noCLI(PC),D1
00020B8C <AmiBlitz3.ab3@1894>    BNE.b 'skip_openconsole
00020BBE <AmiBlitz3.ab3@1898>   !ComData_JSR{comFunc_OpenConsole}
00020BC2 <AmiBlitz3.ab3@1901>   BSR.w calcvbr
00020BC8 <AmiBlitz3.ab3@1902>   MOVEA.l vbr,A0
00020BCE <AmiBlitz3.ab3@1907>   CLR.w dirmode
00020BD4 <AmiBlitz3.ab3@1908>   CLR.l firstglob
00020BDA <AmiBlitz3.ab3@1909>   CLR.l firstlocal
00020BE0 <AmiBlitz3.ab3@1913>   MOVE.l stacksize,D2
00020BE6 <AmiBlitz3.ab3@1914>   MOVE.l #$624C745A,D7                                      ;#'bLtZ',d7 org source ;force cli-type run
00020BEC <AmiBlitz3.ab3@1915>   LEA str_cliarguments,A0                                   ;cli arguement
00020BF2 <AmiBlitz3.ab3@1916>   MOVEA.l destbufferstart,A1
00020BF6 <AmiBlitz3.ab3@1918>   BSR.w Aclearcache
00020BF8 <AmiBlitz3.ab3@1922>   JSR (A1)                                                 ; execute compiled code  ;Run the thing!
00020BFE <AmiBlitz3.ab3@1925>   MOVEA.l vbr,A0
00020C04 <AmiBlitz3.ab3@1927>   CLR.l firstglob
00020C0A <AmiBlitz3.ab3@1928>   CLR.l firstlocal
00020C10 <AmiBlitz3.ab3@1929>   MOVEA.l _dosbase,A6
00020C16 <AmiBlitz3.ab3@1930>   MOVE.l exelock,d1
00020C1A <AmiBlitz3.ab3@1931>   BEQ 'nolock
00020C1E <AmiBlitz3.ab3@1932>   JSR _UnLock(a6)
00020C54 <AmiBlitz3.ab3@1937>   !ComData_SetB{comByte_RunningFlag,#0}
00020C58 <AmiBlitz3.ab3@1941>   MOVE.w flag_noCLI(PC),D1
00020C5C <AmiBlitz3.ab3@1942>    BNE.b 'skip_closeconsole
00020C8E <AmiBlitz3.ab3@1946>   !ComData_JSR{comFunc_CloseConsole}
00020C96 <AmiBlitz3.ab3@1949>   MOVE.w #$0001,stopit      ;ended OK!
00020C9A <AmiBlitz3.ab3@1950>   MOVE.l signals(PC),D0
00020CA0 <AmiBlitz3.ab3@1951>   MOVEA.l ptr_ThisTask,A1
00020CA6 <AmiBlitz3.ab3@1952>   MOVEA.l _execbase,A6
00020CAA <AmiBlitz3.ab3@1953>   JSR _Signal(A6)
00020CAC <AmiBlitz3.ab3@1954> RTS
00020CB2 <AmiBlitz3.ab3@1958>   MOVEA.l _execbase,A6
00020CB6 <AmiBlitz3.ab3@1959>   MOVE.w $128(A6),D0
00020CB8 <AmiBlitz3.ab3@1960>   MOVEQ.l #$00,D1
00020CBC <AmiBlitz3.ab3@1961>   ANDI.w #$F,D0
00020CC0 <AmiBlitz3.ab3@1964>     BEQ.b 'skip
00020CC2 <AmiBlitz3.ab3@1965>     ADDQ.w #1,D1
00020CC4 <AmiBlitz3.ab3@1966>     LSR.w #1,D0
00020CC8 <AmiBlitz3.ab3@1967>  BRA.b 'loop
00020CCA <AmiBlitz3.ab3@1970>   MOVEQ.l #$00,D2
00020CCE <AmiBlitz3.ab3@1971>   CMP.w #$2,D1
00020CD2 <AmiBlitz3.ab3@1972>    BCS.b 'skip2
00020CD8 <AmiBlitz3.ab3@1973>   MOVEA.l _execbase,A6
00020CDC <AmiBlitz3.ab3@1974>   JSR _SuperState(A6)
00020CE0 <AmiBlitz3.ab3@1975>   Dc.l $4E7A2801                                           ;movec vbr,D2
00020CE4 <AmiBlitz3.ab3@1976>   JSR _UserState(A6)
00020CEA <AmiBlitz3.ab3@1979>   MOVE.l D2,vbr
00020CEC <AmiBlitz3.ab3@1980> RTS
00020CF2 <AmiBlitz3.ab3@1985>   LEA instrtab,a0
00020CF8 <AmiBlitz3.ab3@1986>   MOVE.l #labelhash-instrtab,d0
00020CFA <AmiBlitz3.ab3@1987>   ASR.l #2,d0
00020CFC <AmiBlitz3.ab3@1988>   SUBQ.l #1,d0
00020CFE <AmiBlitz3.ab3@1991>   CLR.l (a0)+
00020D00 <AmiBlitz3.ab3@1992>   SUBQ.l #1,d0
00020D04 <AmiBlitz3.ab3@1993>   BNE 'l10
00020D08 <AmiBlitz3.ab3@1995>   BSR.w call_setpointerbusy
00020D0C <AmiBlitz3.ab3@1996>   BSR.w free_userlibs
00020D10 <AmiBlitz3.ab3@1997>   BSR.w scan_for_userlibs
00020D14 <AmiBlitz3.ab3@1998>   BSR.w loadblitzlibs
00020D18 <AmiBlitz3.ab3@1999> BRA.w call_setpointernormal
00020D42 <AmiBlitz3.ab3@2011>   !basic
00020D7C <AmiBlitz3.ab3@2012>   Poke.l ?size_acidlibs, dos_GetFileSize{Peek$(?str_path_acidlibs)}
00020D8C <AmiBlitz3.ab3@2014>   deflibNameP.l = Peek.l(?deflib)
00020D96 <AmiBlitz3.ab3@2015>   If deflibNameP
00020DC8 <AmiBlitz3.ab3@2016>     If Peek.s(deflibNameP)<>""
00020E12 <AmiBlitz3.ab3@2017>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(Peek.l(?deflib))}
00020E18 <AmiBlitz3.ab3@2018>     Else
00020E52 <AmiBlitz3.ab3@2019>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
00020E58 <AmiBlitz3.ab3@2021>   Else
00020E92 <AmiBlitz3.ab3@2022>     Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
00020ECC <AmiBlitz3.ab3@2023>     error{"INTERNAL: Invalid deflib name pointer!"}
00020EEA <AmiBlitz3.ab3@2025>   !asm
00020EF0 <AmiBlitz3.ab3@2031>   MOVE.l #str_path_userlibs,D1
00020EF2 <AmiBlitz3.ab3@2032>   MOVEQ.l #-$02,D2
00020EF8 <AmiBlitz3.ab3@2033>   MOVEA.l _dosbase,A6
00020EFC <AmiBlitz3.ab3@2034>   JSR _Lock(A6)
00020EFE <AmiBlitz3.ab3@2035>   MOVE.l D0,D7
00020F02 <AmiBlitz3.ab3@2036>    BEQ.w 'done     ;exit_get_libraries
00020F04 <AmiBlitz3.ab3@2038>   MOVE.l D7,D1
00020F0A <AmiBlitz3.ab3@2039>   MOVE.l #ptr_parameterstore,D2
00020F0E <AmiBlitz3.ab3@2040>   JSR _Examine(A6)
00020F10 <AmiBlitz3.ab3@2041>   TST.l D0
00020F14 <AmiBlitz3.ab3@2042>   BEQ.w 'done2   ;unlock_and_exit_get_libraries
00020F1A <AmiBlitz3.ab3@2043>   MOVE.l fib_DirEntryType,D0
00020F1E <AmiBlitz3.ab3@2044>   BMI.w 'done2   ;unlock_and_exit_get_libraries
00020F20 <AmiBlitz3.ab3@2052>     MOVE.l D7,D1
00020F26 <AmiBlitz3.ab3@2053>     MOVE.l #ptr_parameterstore,D2
00020F2C <AmiBlitz3.ab3@2054>     MOVEA.l _dosbase,A6
00020F30 <AmiBlitz3.ab3@2055>     JSR _ExNext(A6)
00020F32 <AmiBlitz3.ab3@2056>     TST.l D0
00020F36 <AmiBlitz3.ab3@2057>      BEQ.w 'ok    ;exit_scan_libsdrawer                            ; kein weiteres File
00020F3C <AmiBlitz3.ab3@2059>     MOVE.l fib_DirEntryType,D0                             ; positive for directoies, negative for files
00020F40 <AmiBlitz3.ab3@2060>     BPL.w 'loop    ;scan_libsdrawer                                  ; skip directories
00020F46 <AmiBlitz3.ab3@2062>     LEA fib_FileName,A0                                    ; pruefen ob infofile
00020F4A <AmiBlitz3.ab3@2063>     BSR.w check_for_infoextention
00020F4E <AmiBlitz3.ab3@2064>     BEQ.w 'loop    ;scan_libsdrawer
00020F54 <AmiBlitz3.ab3@2066>     MOVEA.l _execbase,A6                                   ; allocate $26 = 38 bytes fuer listeneintrag
00020F56 <AmiBlitz3.ab3@2067>     MOVEQ.l #$26,D0
00020F58 <AmiBlitz3.ab3@2068>     MOVEQ.l #$01,D1
00020F5E <AmiBlitz3.ab3@2070>     MOVE.l mempool,a0
00020F62 <AmiBlitz3.ab3@2071>     JSR _AllocPooled(a6)
00020F68 <AmiBlitz3.ab3@2074>     MOVEA.l _dosbase,A6
00020F6A <AmiBlitz3.ab3@2076>     MOVE.l D0,D6                                           ; sichere speicheradresse in D6
00020F70 <AmiBlitz3.ab3@2078>     LEA ptr_userlibs_list,A0                               ; pruefe liste
00020F72 <AmiBlitz3.ab3@2081>     MOVE.l (A0),D5
00020F76 <AmiBlitz3.ab3@2082>      BEQ.w 'here                                       ; kein pointer da? kann springe weiter
00020F78 <AmiBlitz3.ab3@2083>     MOVEA.l D5,A2
00020F7A <AmiBlitz3.ab3@2084>     ADDQ.w #6,A2                                       ; 6 bytes weiter gehen, um dateinamen zu speichern
00020F80 <AmiBlitz3.ab3@2086>     LEA fib_FileName,A1    ;filename                  ; vergleich, ob Dateiname schon in der liste ist
00020F82 <AmiBlitz3.ab3@2089>       MOVEQ.l #$00,D0
00020F84 <AmiBlitz3.ab3@2090>       MOVE.b (A1)+,D0
00020F88 <AmiBlitz3.ab3@2091>        BEQ.w 'here         ;I'm shorter                ; dateiname komplett, dann weiter
00020F8A <AmiBlitz3.ab3@2092>       MOVEQ.l #$00,D1
00020F8C <AmiBlitz3.ab3@2093>       MOVE.b (A2)+,D1
00020F90 <AmiBlitz3.ab3@2094>        BEQ.w 'next         ;I'm longer
00020FB2 <AmiBlitz3.ab3@2096>       !compare1                                            ;bsr.w tstalpha
00020FB6 <AmiBlitz3.ab3@2098>       BNE.w 'acskip
00020FBA <AmiBlitz3.ab3@2099>       ANDI.w #$DF,D0       ; was 255-32
00020FBC <AmiBlitz3.ab3@2102>       EXG.l D0,D1
00020FDE <AmiBlitz3.ab3@2104>       !compare1                                            ;bsr.w tstalpha
00020FE2 <AmiBlitz3.ab3@2106>       BNE.w 'acskip2
00020FE6 <AmiBlitz3.ab3@2107>       ANDI.w #$DF,D0        ; was 255-32
00020FE8 <AmiBlitz3.ab3@2110>       EXG.l D0,D1
00020FEA <AmiBlitz3.ab3@2111>       CMP.b D1,D0
00020FEE <AmiBlitz3.ab3@2112>     BEQ.w 'comloop
00020FF2 <AmiBlitz3.ab3@2113>     BCS.w 'here             ;I'm less than
00020FF4 <AmiBlitz3.ab3@2116>     MOVEA.l D5,A0
00020FF8 <AmiBlitz3.ab3@2117>  BRA.w 'insloop
00020FFA <AmiBlitz3.ab3@2120>     MOVEA.l D6,A1                                          ; hier war die adresse des allokierten Speicers drin
00020FFC <AmiBlitz3.ab3@2121>     MOVE.l (A0),(A1)            ;next of last is next of me
00020FFE <AmiBlitz3.ab3@2122>     MOVE.l A1,(A0)              ;I am next of last
00021000 <AmiBlitz3.ab3@2123>     ADDQ.w #4,A1                                           ; pointer zum naechsten namen ueberspringen
00021004 <AmiBlitz3.ab3@2124>     MOVE.w #$FFFF,(A1)+         ; was - 1;set 'Used' flag  ; $FFFF schreiben
0002100A <AmiBlitz3.ab3@2125>     MOVEA.l #fib_FileName,A0    ; was #namebuff+8,         ; dateinamen in die liste kopieren
0002100C <AmiBlitz3.ab3@2128>       MOVE.b (A0)+,(A1)+
00021010 <AmiBlitz3.ab3@2129>     BNE.w 'coploop
00021014 <AmiBlitz3.ab3@2130>  BRA.w 'loop    ;scan_libsdrawer
00021016 <AmiBlitz3.ab3@2133>   MOVE.l D7,D1
0002101C <AmiBlitz3.ab3@2134>   MOVEA.l _dosbase,A6
00021020 <AmiBlitz3.ab3@2135>   JSR _UnLock(A6)
00021022 <AmiBlitz3.ab3@2136>   MOVEQ.l #-$01,D0
00021024 <AmiBlitz3.ab3@2139>  RTS
00021026 <AmiBlitz3.ab3@2142>   MOVE.l D7,D1
0002102C <AmiBlitz3.ab3@2143>   MOVEA.l _dosbase,A6
00021030 <AmiBlitz3.ab3@2144>   JSR _UnLock(A6)
00021032 <AmiBlitz3.ab3@2145>   MOVEQ.l #$00,D0
00021034 <AmiBlitz3.ab3@2146> RTS
0002103A <AmiBlitz3.ab3@2151>   MOVEA.l _execbase,A6
00021040 <AmiBlitz3.ab3@2152>   MOVEA.l ptr_userlibs_list,A2
00021046 <AmiBlitz3.ab3@2153>   CLR.l ptr_userlibs_list
0002104A <AmiBlitz3.ab3@2156>     CMPA.w #$0,A2
0002104E <AmiBlitz3.ab3@2157>     BEQ.w 'done
00021050 <AmiBlitz3.ab3@2158>       MOVEA.l A2,A1
00021052 <AmiBlitz3.ab3@2159>       MOVEQ.l #$26,D0
00021054 <AmiBlitz3.ab3@2160>       MOVEA.l (A2),A2
0002105A <AmiBlitz3.ab3@2162>       MOVE.l mempool,a0
00021060 <AmiBlitz3.ab3@2163>       MOVEA.l _execbase,A6
00021064 <AmiBlitz3.ab3@2164>       JSR _FreePooled(A6)
00021068 <AmiBlitz3.ab3@2167>  BRA.w 'loop
0002106A <AmiBlitz3.ab3@2170> RTS
0002106C <AmiBlitz3.ab3@2174> pass:  Dc.w 0                                             ; smallpass org source
0002106E <AmiBlitz3.ab3@2175> compiler_job: Dc.w 0                                      ; added by thilo: what the compiler is doing at the moment
00021074 <AmiBlitz3.ab3@2181>   MOVE.l A7,errstack                                      ;startcompile
00021078 <AmiBlitz3.ab3@2183>   !regs2stack
00021080 <AmiBlitz3.ab3@2184>   BTST #$7,make_smallestcode       ; test if makesmall is set
00021084 <AmiBlitz3.ab3@2185>   BNE 'nobigallox                  ; yes makesmall is set, we don't change the buffers
0002108A <AmiBlitz3.ab3@2186>     JSR bigallox                   ; no try to make big buffers for 1 pass compile
0002108E <AmiBlitz3.ab3@2189>   !stack2regs
00021094 <AmiBlitz3.ab3@2200>   CLR.l reqmode
0002109E <AmiBlitz3.ab3@2202>   MOVE.l #Aclearallvars,errcont
000210A8 <AmiBlitz3.ab3@2203>   MOVE.l #concomstack,concomsp
000210AC <AmiBlitz3.ab3@2212>   MOVE.w #1450,D0
000210AE <AmiBlitz3.ab3@2214>   LSR.w #3,D0
000210B0 <AmiBlitz3.ab3@2215>   SUBQ.w #7,D0                                             ; 173
000210B6 <AmiBlitz3.ab3@2216>   MOVE.w D0,progressbar_width
000210B8 <AmiBlitz3.ab3@2217>   SWAP D0
000210BA <AmiBlitz3.ab3@2218>   CLR.w D0
000210C0 <AmiBlitz3.ab3@2219>   MOVE.l numlines,d1           ; was divu numlines,d0
000210C4 <AmiBlitz3.ab3@2220>   DIVU.l d1,d0                                             ; progressbar_width / numlines
000210C6 <AmiBlitz3.ab3@2222>   TST.w D0
000210CA <AmiBlitz3.ab3@2223>   BNE.w 'ok
000210CC <AmiBlitz3.ab3@2224>   MOVEQ.l #-$01,D0
000210D2 <AmiBlitz3.ab3@2227>   MOVE.w D0,progress_per_line
000210DA <AmiBlitz3.ab3@2237>   BTST #$7,use_debugger
000210DE <AmiBlitz3.ab3@2240>   BNE 'debugon
000210E4 <AmiBlitz3.ab3@2241>   CLR.w debugmode
000210E8 <AmiBlitz3.ab3@2242>  BRA.b 'debugoff
000210EE <AmiBlitz3.ab3@2245>   SNE debugmode
00021126 <AmiBlitz3.ab3@2253>   !ComData_SetB{comByte_DebugMode,debugmode}
0002112C <AmiBlitz3.ab3@2256>   CLR.w dirmode           ;direct mode flag                                  ;direct mode flag
00021132 <AmiBlitz3.ab3@2257>   CLR.w ezerr             ;quiet error                                 ;quiet error
00021138 <AmiBlitz3.ab3@2258>   CLR.l currentfunction
0002113E <AmiBlitz3.ab3@2259>   CLR.w connest
00021144 <AmiBlitz3.ab3@2260>   CLR.w varmode
0002114A <AmiBlitz3.ab3@2261>   CLR.w proceduremode
00021150 <AmiBlitz3.ab3@2262>   CLR.w ininclude
00021156 <AmiBlitz3.ab3@2263>   CLR.w intstring
0002115C <AmiBlitz3.ab3@2264>   CLR.w pass
00021164 <AmiBlitz3.ab3@2266>   MOVE.w #0,compiler_job
0002116A <AmiBlitz3.ab3@2267>   CLR.l errorcounter
00021170 <AmiBlitz3.ab3@2279>   CLR.l funcscanon
00021174 <AmiBlitz3.ab3@2281>   BSR.w compileall
0002117A <AmiBlitz3.ab3@2283>   ADDQ.w #1,pass
0002117E <AmiBlitz3.ab3@2284> 
000211A8 <AmiBlitz3.ab3@2285>   !basic
000211B0 <AmiBlitz3.ab3@2286>   samesize.l = 0
000211D8 <AmiBlitz3.ab3@2287>   needsize0.l = Peek.l(?bigpc) -Peek.l(?destbufferstart)
000211F6 <AmiBlitz3.ab3@2288>   !asm
000211FA <AmiBlitz3.ab3@2289>   !stack2regs
00021200 <AmiBlitz3.ab3@2291>   TST.l errorcounter
00021204 <AmiBlitz3.ab3@2292>   BEQ 'skiperrorstop
00021206 <AmiBlitz3.ab3@2293>  RTS
0002120C <AmiBlitz3.ab3@2296>   MOVE.w dontwrite_nomemleft,d0
00021210 <AmiBlitz3.ab3@2297>   CMP.w #1,d0
00021214 <AmiBlitz3.ab3@2298>   BNE 'l3
0002121A <AmiBlitz3.ab3@2299>   TST.l errorcounter
0002121E <AmiBlitz3.ab3@2300>   BNE 'l3
00021224 <AmiBlitz3.ab3@2301>   CLR.w dontwrite_nomemleft
0002122A <AmiBlitz3.ab3@2302> 
0002122E <AmiBlitz3.ab3@2303>   BSR compileall                                           ;if a function is not found
00021234 <AmiBlitz3.ab3@2304>   ADDQ.w #1,pass
00021272 <AmiBlitz3.ab3@2308>   !ComData_GetB{comByte_FuncOptimize,D0}  ; now its in the xtra file and can be put to GUI settings ; Wanderer
00021276 <AmiBlitz3.ab3@2309>   BEQ 'out  ; only if func optimize is set >< 0; Wanderer
0002127C <AmiBlitz3.ab3@2310>   LEA firstproc,a0
00021282 <AmiBlitz3.ab3@2311>   CLR.l savefuncspace
00021284 <AmiBlitz3.ab3@2312>   MOVE.l (a0),d0
00021286 <AmiBlitz3.ab3@2316>     MOVE.l d0,a0
0002128A <AmiBlitz3.ab3@2317>     BEQ 'out
0002128E <AmiBlitz3.ab3@2318>     TST.b isfunc(a0)
00021292 <AmiBlitz3.ab3@2319>     BNE 'nex
00021296 <AmiBlitz3.ab3@2320>     MOVEM.l d2/a6/a0,-(a7)
00021298 <AmiBlitz3.ab3@2322>     MOVEQ #0,d0
0002129C <AmiBlitz3.ab3@2323>     MOVE.b $21+#funcentry_extend-1(a0),d0
000212A0 <AmiBlitz3.ab3@2324>     SUB.w #$21+#funcentry_extend,d0
000212A4 <AmiBlitz3.ab3@2325>     ADD.w #16,d0
000212AA <AmiBlitz3.ab3@2326>     MOVE.l #$10000,d1
000212AC <AmiBlitz3.ab3@2327>     MOVE.l d0,d2
000212B2 <AmiBlitz3.ab3@2328>     MOVEA.l _execbase,A6
000212B6 <AmiBlitz3.ab3@2329>     JSR _AllocMem(a6)         ; thilo: not 100% sure about this!
000212B8 <AmiBlitz3.ab3@2330>     MOVE.l d0,a1
000212BC <AmiBlitz3.ab3@2331>     MOVE.l d2,4(a1)
000212C2 <AmiBlitz3.ab3@2332>     MOVE.l unusedfunc,(a1)
000212C8 <AmiBlitz3.ab3@2333>     MOVE.l d0,unusedfunc
000212CC <AmiBlitz3.ab3@2334>     MOVEM.l (a7)+,a6/a0/d2
000212D0 <AmiBlitz3.ab3@2335>     MOVE.l isfunc+1(a0),d0
000212D2 <AmiBlitz3.ab3@2336>     ADDQ.l #6,d0
000212D8 <AmiBlitz3.ab3@2337>     ADD.l d0,savefuncspace
000212DC <AmiBlitz3.ab3@2340>     MOVE.l d0,8(a1)
000212E0 <AmiBlitz3.ab3@2341>     LEA 12(a1),a1
000212E2 <AmiBlitz3.ab3@2342>     MOVE.l a0,-(a7)
000212E6 <AmiBlitz3.ab3@2343>     LEA $21+#funcentry_extend(a0),a0
000212E8 <AmiBlitz3.ab3@2346>       MOVE.b (a0)+,(a1)+
000212EC <AmiBlitz3.ab3@2347>     BNE 'l1
000212EE <AmiBlitz3.ab3@2348>     MOVE.l (a7)+,a0
000212F0 <AmiBlitz3.ab3@2351>     MOVE.l (a0),d0
000212F4 <AmiBlitz3.ab3@2352>  BRA 'lr1
000212FC <AmiBlitz3.ab3@2355>   BTST #$7,make_smallestcode
00021300 <AmiBlitz3.ab3@2356>   BEQ.b 'nosmall                                           ;optimize for executable
00021306 <AmiBlitz3.ab3@2358>   CLR.l morememadd
0002130A <AmiBlitz3.ab3@2362>   BSR.w alloxadj
0002130E <AmiBlitz3.ab3@2363>   BEQ.w 'anerr
00021314 <AmiBlitz3.ab3@2365> 
00021318 <AmiBlitz3.ab3@2366>   BSR.w compileall
0002131E <AmiBlitz3.ab3@2368>   ADDQ.w #1,pass
00021322 <AmiBlitz3.ab3@2369> 
0002134C <AmiBlitz3.ab3@2370>   !basic
00021360 <AmiBlitz3.ab3@2371>   If releaseexe = True                                       ; test if we creat a releas exe
00021388 <AmiBlitz3.ab3@2372>     needsize1.l = Peek.l(?bigpc) -Peek.l(?destbufferstart)   ; get the size form the last compile
000213A6 <AmiBlitz3.ab3@2373> 
000213DC <AmiBlitz3.ab3@2374>       !ComData_SetW{comWord_CreateDebugFile,#1}              ; set create .dbg file to one
000213FA <AmiBlitz3.ab3@2375>       !asm
00021400 <AmiBlitz3.ab3@2376>       JSR ab3_OpenDebugFile                                  ; open the .dbg flie
00021404 <AmiBlitz3.ab3@2377>       !stack2regs
00021408 <AmiBlitz3.ab3@2378>       BSR compileall                                         ; compile for the last time to creat the dbg file
0002140C <AmiBlitz3.ab3@2379>       !regs2stack
00021436 <AmiBlitz3.ab3@2380>       !basic
00021444 <AmiBlitz3.ab3@2382>     If needsize1 < needsize0   ; test if the needed size is smaller then the compile befor
0002144A <AmiBlitz3.ab3@2383>       needsize0 = needsize1    ; yes the new size is that the old size
00021468 <AmiBlitz3.ab3@2384>       !asm
0002146C <AmiBlitz3.ab3@2385>       !stack2regs
00021470 <AmiBlitz3.ab3@2386>       BRA 'l3                  ; back to the funcscan and compile again
0002148E <AmiBlitz3.ab3@2389>   !asm
00021492 <AmiBlitz3.ab3@2390>   !stack2regs
00021498 <AmiBlitz3.ab3@2394>   MOVE.w dontwrite_nomemleft,D1
0002149C <AmiBlitz3.ab3@2395>   BEQ.w 'dosave
000214A0 <AmiBlitz3.ab3@2416>  BRA.w 'inc     ; was beq
000214A8 <AmiBlitz3.ab3@2430>   MOVE.w #$FFFF,anyerrs        ; was -1
000214AC <AmiBlitz3.ab3@2431>  BRA.w 'dosave
000214B0 <AmiBlitz3.ab3@2434>   BSR.w alloxinc                                          ;increase all by 50%
000214B4 <AmiBlitz3.ab3@2435>   BEQ.w Aclearallvars
000214BA <AmiBlitz3.ab3@2436> 
000214BE <AmiBlitz3.ab3@2437>  BRA.w 'retry
000214C2 <AmiBlitz3.ab3@2450> BRA.w qfree        ;used to go after beq .nosave                          ;???????
000214C8 <AmiBlitz3.ab3@2456>   JSR freereps
000214CE <AmiBlitz3.ab3@2457>   JSR freesels
000214D4 <AmiBlitz3.ab3@2458>   JSR freetlist
000214DA <AmiBlitz3.ab3@2459>   JSR freepends
000214E0 <AmiBlitz3.ab3@2460>   JSR freeifs
000214E6 <AmiBlitz3.ab3@2461>   JSR freeincs
000214EC <AmiBlitz3.ab3@2462>   JSR freexincs
000214F2 <AmiBlitz3.ab3@2463>   JSR freefors
000214F8 <AmiBlitz3.ab3@2464> JMP cleartemplabel
000214FC <AmiBlitz3.ab3@2467> mempool2:  Dc.l 0
00021502 <AmiBlitz3.ab3@2472>   JSR Aclearcache
0002150A <AmiBlitz3.ab3@2474>   BTST #$7,use_debugger
0002150E <AmiBlitz3.ab3@2476>   BNE 'debugon
00021514 <AmiBlitz3.ab3@2477>   CLR.w debugmode
00021518 <AmiBlitz3.ab3@2478>  BRA.b 'debugoff
0002151E <AmiBlitz3.ab3@2481>   SNE debugmode
00021556 <AmiBlitz3.ab3@2486>   !ComData_SetB{comByte_DebugMode,debugmode}
0002155C <AmiBlitz3.ab3@2488>   LEA regtable,a0
0002155E <AmiBlitz3.ab3@2489>   MOVEQ #10,d0
00021560 <AmiBlitz3.ab3@2492>     CLR.l (a0)+
00021564 <AmiBlitz3.ab3@2493>   DBF d0,'l1
0002156A <AmiBlitz3.ab3@2495>   LEA includetemp2,a0
0002156C <AmiBlitz3.ab3@2496>   CLR.b (a0)
00021576 <AmiBlitz3.ab3@2497>   MOVE.l #7,maxregs
0002157C <AmiBlitz3.ab3@2498>   CLR.w debugnest
00021582 <AmiBlitz3.ab3@2499>   CLR.b funcparloop
00021588 <AmiBlitz3.ab3@2500>   CLR.b nostringopt
0002158E <AmiBlitz3.ab3@2501>   CLR.b firsttime
00021594 <AmiBlitz3.ab3@2502>   CLR.l lastdestpointer
0002159A <AmiBlitz3.ab3@2503>   CLR.l lastwritedat
000215A0 <AmiBlitz3.ab3@2504>   CLR.l prevwritedat
000215A6 <AmiBlitz3.ab3@2505>   CLR.l includeline
000215AC <AmiBlitz3.ab3@2506>   CLR.b incnif
000215B2 <AmiBlitz3.ab3@2507>   CLR.b formode
000215B8 <AmiBlitz3.ab3@2508>   CLR.b funccall
000215BE <AmiBlitz3.ab3@2509>   CLR.w objectcount
000215C4 <AmiBlitz3.ab3@2510>   CLR.b resdisable
000215CA <AmiBlitz3.ab3@2511>   CLR.b developobject
000215D0 <AmiBlitz3.ab3@2512>   CLR.b optistring
000215D6 <AmiBlitz3.ab3@2513>   CLR.b optistring2
000215DC <AmiBlitz3.ab3@2514>   CLR.b optiarray
000215E2 <AmiBlitz3.ab3@2515>   CLR.b quickadd
000215E8 <AmiBlitz3.ab3@2516>   CLR.w newmode
000215EE <AmiBlitz3.ab3@2517>   CLR.w mode
000215F4 <AmiBlitz3.ab3@2518>   CLR.w string1
000215FA <AmiBlitz3.ab3@2519>   CLR.b fastfunc
00021600 <AmiBlitz3.ab3@2520>   CLR.w load_var_size
00021606 <AmiBlitz3.ab3@2521>   CLR.w load_var_reg
0002160C <AmiBlitz3.ab3@2522>   CLR.l load_var_addr
00021612 <AmiBlitz3.ab3@2523>   CLR.w imm_size
00021618 <AmiBlitz3.ab3@2524>   CLR.w imm_reg
0002161E <AmiBlitz3.ab3@2525>   CLR.l imm_addr
00021624 <AmiBlitz3.ab3@2526>   CLR.b _dcb
0002162A <AmiBlitz3.ab3@2527>   CLR.l nohunkoffset
00021630 <AmiBlitz3.ab3@2528>   CLR.b peekaddrsize
00021636 <AmiBlitz3.ab3@2529>   CLR.b typecheck
0002163C <AmiBlitz3.ab3@2530>   CLR.b declare2
00021642 <AmiBlitz3.ab3@2531>   CLR.b declare
00021648 <AmiBlitz3.ab3@2532>   CLR.l myoline                                          ;check
0002164E <AmiBlitz3.ab3@2533>   CLR.l myline                                          ;check
00021654 <AmiBlitz3.ab3@2534>   CLR.b newvariable
0002165A <AmiBlitz3.ab3@2535>   CLR.b saved0
00021660 <AmiBlitz3.ab3@2536>   CLR.l bsssize
00021666 <AmiBlitz3.ab3@2537>   CLR.l chipsize
0002166C <AmiBlitz3.ab3@2538>   CLR.b infunctioncode
00021672 <AmiBlitz3.ab3@2539>   CLR.l errorcounter
0002167C <AmiBlitz3.ab3@2540>   MOVE.l #-1,bssstart
00021686 <AmiBlitz3.ab3@2541>   MOVE.l #-1,bssend
00021690 <AmiBlitz3.ab3@2542>   MOVE.l #-1,chipstart
0002169A <AmiBlitz3.ab3@2543>   MOVE.l #-1,chipend
000216A2 <AmiBlitz3.ab3@2544>   MOVE.w #0,bssmode
000216A8 <AmiBlitz3.ab3@2545>   CLR.w a2offset
000216AE <AmiBlitz3.ab3@2546>   CLR.w fast
000216B4 <AmiBlitz3.ab3@2547>   CLR.w fpu
000216BA <AmiBlitz3.ab3@2548>   CLR.b iee
000216C0 <AmiBlitz3.ab3@2549>   CLR.w newsyntax
000216C4 <AmiBlitz3.ab3@2551>   BSR.w qfree
000216CA <AmiBlitz3.ab3@2552>   JSR killoffs              ;free up DOS offset table
000216D0 <AmiBlitz3.ab3@2553>   JSR frallvars               ;free up Global vars
000216D6 <AmiBlitz3.ab3@2554>   JSR fralltypes              ;free up all types
000216DC <AmiBlitz3.ab3@2555>   JSR freemacs                ;free up actual macro defines.
000216E2 <AmiBlitz3.ab3@2556>   JSR clearfunctionlist       ;free up states/funcs
000216E8 <AmiBlitz3.ab3@2558>   TST.w pass                  
000216EE <AmiBlitz3.ab3@2561>   JSR clearlabels             ;free up labels
000216F4 <AmiBlitz3.ab3@2563>   JSR clearhash
000216FA <AmiBlitz3.ab3@2566>   LEA devo,a0
000216FE <AmiBlitz3.ab3@2567>   MOVEM.l a0-a6/d0-d7,-(a7)
00021704 <AmiBlitz3.ab3@2568>   LEA ptr_parameterstore,a1
00021706 <AmiBlitz3.ab3@2571>     MOVE.b (a0)+,(a1)+
0002170A <AmiBlitz3.ab3@2572>   BNE 'l1b
0002170C <AmiBlitz3.ab3@2573>   MOVEQ #13,d2
00021712 <AmiBlitz3.ab3@2574>   JSR findlabel2
00021716 <AmiBlitz3.ab3@2575>   BNE 'd
0002171A <AmiBlitz3.ab3@2576>   CLR.l 8(a2)
0002171E <AmiBlitz3.ab3@2579>   MOVEM.l (a7)+,a0-a6/d0-d7
00021748 <AmiBlitz3.ab3@2580>   !basic
000217BC <AmiBlitz3.ab3@2581>   dos_Delete{dos_AddPart{my_systemdir$,"ab_compileerror.txt"}}
000217DA <AmiBlitz3.ab3@2582>   !asm
000217E0 <AmiBlitz3.ab3@2583>   CLR.b returncode
000217E6 <AmiBlitz3.ab3@2585> JMP freeprocvs                     ;free up outstanding proc stuff
000217EC <AmiBlitz3.ab3@2589>   MOVE.l #bssstore-labelhash,d0
000217EE <AmiBlitz3.ab3@2590>   ASR.l #2,d0
000217F4 <AmiBlitz3.ab3@2591>   LEA labelhash,a0
000217F6 <AmiBlitz3.ab3@2594>     CLR.l (a0)+
000217F8 <AmiBlitz3.ab3@2595>     SUBQ.l #1,d0
000217FC <AmiBlitz3.ab3@2596>   BNE.s 'l10
00021802 <AmiBlitz3.ab3@2598>   LEA labelbase,a1
00021804 <AmiBlitz3.ab3@2599>   MOVE.l (a1),d0
00021808 <AmiBlitz3.ab3@2600>   BEQ 'l11
0002180A <AmiBlitz3.ab3@2603>     MOVE.l d0,a1
0002180E <AmiBlitz3.ab3@2604>     TST.l 4(a1)
00021812 <AmiBlitz3.ab3@2605>     BEQ 'l29
00021816 <AmiBlitz3.ab3@2606>     LEA $13(a1),a0
00021818 <AmiBlitz3.ab3@2607>     MOVEQ #0,d0
0002181A <AmiBlitz3.ab3@2608>     MOVEQ #0,d1
0002181C <AmiBlitz3.ab3@2611>       MOVE.b (a0)+,d1
00021820 <AmiBlitz3.ab3@2612>       BEQ 'l12
00021826 <AmiBlitz3.ab3@2613>       !hashalgo
0002182A <AmiBlitz3.ab3@2614>  BRA 'l13
00021830 <AmiBlitz3.ab3@2617>     LEA labelhash,a0
00021836 <AmiBlitz3.ab3@2618>     AND.l #hashsize,d0
00021838 <AmiBlitz3.ab3@2619>      ASL.l #2,d0
0002183C <AmiBlitz3.ab3@2620>     MOVE.l 0(a0,d0),d1                                     ;*4
00021840 <AmiBlitz3.ab3@2621>     MOVE.l d1,$c(a1)
00021844 <AmiBlitz3.ab3@2622>     MOVE.l a1,0(a0,d0)
00021846 <AmiBlitz3.ab3@2625>     MOVE.l (a1),d0
0002184A <AmiBlitz3.ab3@2626>   BNE 'l21
0002184C <AmiBlitz3.ab3@2629> RTS
00021852 <AmiBlitz3.ab3@2633>   MOVEA.l lastrestype,A0
00021854 <AmiBlitz3.ab3@2634>   MOVEA.l (A0),A2
00021856 <AmiBlitz3.ab3@2635>   CLR.l (A0)
0002185C <AmiBlitz3.ab3@2636> JMP freetypes
00021862 <AmiBlitz3.ab3@2640>   MOVEA.l varbase,A3
00021868 <AmiBlitz3.ab3@2641>   CLR.l varbase
0002186C <AmiBlitz3.ab3@2645>   CMPA.w #$0,A3
00021870 <AmiBlitz3.ab3@2646>   BEQ.w 'l20
00021872 <AmiBlitz3.ab3@2647>   MOVEA.l A3,A1
00021874 <AmiBlitz3.ab3@2648>   MOVEA.l (A3),A3
00021876 <AmiBlitz3.ab3@2649>   MOVEQ.l #$00,D0
0002187A <AmiBlitz3.ab3@2650>   MOVE.b $E+4(A1),D0
00021880 <AmiBlitz3.ab3@2651>   MOVEA.l _execbase,A6
00021886 <AmiBlitz3.ab3@2652>   MOVE.l mempool2,a0
0002188A <AmiBlitz3.ab3@2653>   JSR _FreePooled(A6)
0002188E <AmiBlitz3.ab3@2654>  BRA.w 'l10
00021890 <AmiBlitz3.ab3@2657> RTS
00021896 <AmiBlitz3.ab3@2663>   LEA firstiff,A2
00021898 <AmiBlitz3.ab3@2664>   MOVEQ.l #$0E,D2
0002189E <AmiBlitz3.ab3@2665> JMP freeslist
000218A0 <AmiBlitz3.ab3@2671> progressbar_width:   Dc.w 100                              ;riteend org source ;right end of include strip
000218A2 <AmiBlitz3.ab3@2672> inmacro:             Ds.w 1                                ;macmask org source ;macro found
000218A8 <AmiBlitz3.ab3@2679>   CLR.w inmacro
000218AE <AmiBlitz3.ab3@2681>   ADDQ.l #1,globallinecount
000218B4 <AmiBlitz3.ab3@2682>   CLR.b nostringopt
000218B8 <AmiBlitz3.ab3@2684>   BSR.w freembuff
000218BE <AmiBlitz3.ab3@2685>   CLR.w instringon
000218C4 <AmiBlitz3.ab3@2690>   TST.w ininclude
000218C8 <AmiBlitz3.ab3@2691>   BEQ.w 'skip3
000218CE <AmiBlitz3.ab3@2693>   ADDQ.l #1,includeline
000218D4 <AmiBlitz3.ab3@2694>     JSR ab3_WriteDebugFile
000218DA <AmiBlitz3.ab3@2696>   JSR readinc
000218DE <AmiBlitz3.ab3@2697>   BEQ.w 'skip3
000218E4 <AmiBlitz3.ab3@2701>   MOVE.w ininclude,D0
000218E8 <AmiBlitz3.ab3@2702>   CMP.w #$4,D0
000218EC <AmiBlitz3.ab3@2703>   BCC.w 'stskip
000218EE <AmiBlitz3.ab3@2704>   ADD.w D0,D0
000218F4 <AmiBlitz3.ab3@2705>   LEA progress_per_line,A0
000218F8 <AmiBlitz3.ab3@2706>   MOVE.w $0(A0,D0.W),D2     ;offset in line
000218FC <AmiBlitz3.ab3@2707>   CMP.w progressbar_width(PC),D2
00021900 <AmiBlitz3.ab3@2708>   BCC.w 'stskip
00021904 <AmiBlitz3.ab3@2709>   ADDQ.w #1,$0(A0,D0.W)
00021906 <AmiBlitz3.ab3@2711>   LSR.w #1,D0
00021908 <AmiBlitz3.ab3@2713>   MOVE.l d0,d1
0002190A <AmiBlitz3.ab3@2714>   EXT.l d1
0002190C <AmiBlitz3.ab3@2715>   MOVE.l d2,d0
0002190E <AmiBlitz3.ab3@2716>   EXT.l d0                                                 ;d0=x,d1=y
00021914 <AmiBlitz3.ab3@2718>   JSR update_progressbar
00021916 <AmiBlitz3.ab3@2722>   MOVEQ.l #-$01,D0
00021918 <AmiBlitz3.ab3@2723>  RTS
0002191E <AmiBlitz3.ab3@2728>   MOVE.l titleat,D0
00021920 <AmiBlitz3.ab3@2729>   MOVEQ.l #$00,D1
00021926 <AmiBlitz3.ab3@2730>   MOVE.w progress_per_line,D1
00021928 <AmiBlitz3.ab3@2731>   ADD.l D1,D0
0002192A <AmiBlitz3.ab3@2732>   MOVE.l D0,D1
0002192C <AmiBlitz3.ab3@2733>   SWAP D0
00021932 <AmiBlitz3.ab3@2734>   CMP.w titleat,D0
00021936 <AmiBlitz3.ab3@2735>    BEQ.w 'skip3a
00021938 <AmiBlitz3.ab3@2740>   EXT.l d0
0002193A <AmiBlitz3.ab3@2741>   MOVE.l d1,-(a7)
00021942 <AmiBlitz3.ab3@2744>   MOVE.w #1,compiler_job                                    ; set to compiler job 1 (=build executable)
00021948 <AmiBlitz3.ab3@2745>   JSR update_progressbar
00021950 <AmiBlitz3.ab3@2746>   MOVE.w #0,compiler_job                                    ; set to compiler job 0 (=compile source)
00021952 <AmiBlitz3.ab3@2752>   MOVE.l (a7)+,d1
00021958 <AmiBlitz3.ab3@2756>   MOVE.l D1,titleat
0002195E <AmiBlitz3.ab3@2759>   ADDQ.l #1,linenumat
00021964 <AmiBlitz3.ab3@2760>   CLR.w linedone
0002196A <AmiBlitz3.ab3@2762>   JSR ab3_WriteDebugFile  ; write to DebugFile every main source line
00021970 <AmiBlitz3.ab3@2768>   SUBQ.l #1,numlines2
00021974 <AmiBlitz3.ab3@2770>    BEQ.w 'skip
0002197A <AmiBlitz3.ab3@2771>   MOVEA.l sourceline,A0
0002197C <AmiBlitz3.ab3@2772>   MOVEA.l (A0),A0
00021982 <AmiBlitz3.ab3@2773>   MOVE.l A0,sourceline
00021986 <AmiBlitz3.ab3@2774>   LEA $9(A0),A5
00021988 <AmiBlitz3.ab3@2777> RTS
0002198A <AmiBlitz3.ab3@2781>   MOVE.w D0,-(A7)
0002198C <AmiBlitz3.ab3@2782>   MOVEQ.l #$03,D0
0002198E <AmiBlitz3.ab3@2785>     MOVE.w D1,D2
00021992 <AmiBlitz3.ab3@2786>     ANDI.w #$F,D2
00021996 <AmiBlitz3.ab3@2787>     ADDI.w #$30,D2
0002199A <AmiBlitz3.ab3@2788>     CMP.w #$3A,D2
0002199E <AmiBlitz3.ab3@2789>      BCS.w 'skip
000219A0 <AmiBlitz3.ab3@2790>     ADDQ.w #7,D2
000219A4 <AmiBlitz3.ab3@2793>     MOVE.b D2,$0(A0,D0.W)
000219A6 <AmiBlitz3.ab3@2794>     LSR.w #4,D1
000219AA <AmiBlitz3.ab3@2795>   DBF D0,'loop
000219AC <AmiBlitz3.ab3@2797>   MOVE.w (A7)+,D0
000219AE <AmiBlitz3.ab3@2798> RTS
000219B4 <AmiBlitz3.ab3@2808>   MOVE.w skipcode,D1
000219B8 <AmiBlitz3.ab3@2809>   BNE.w 'loop0
000219BA <AmiBlitz3.ab3@2810>  RTS
000219BC <AmiBlitz3.ab3@2813>   MOVE.l A5,-(A7)
000219BE <AmiBlitz3.ab3@2814>   MOVEQ.l #$3A,D1      ;':'
000219C0 <AmiBlitz3.ab3@2815>   MOVEQ.l #$21,D2      ;'!'
000219C2 <AmiBlitz3.ab3@2816>   MOVEQ.l #$3B,D3      ;';'
000219C4 <AmiBlitz3.ab3@2817>   MOVEQ.l #$22,D4      ;'"'
000219C6 <AmiBlitz3.ab3@2820>   MOVE.b (A5)+,D0
000219CA <AmiBlitz3.ab3@2821>    BEQ.w 'done
000219CE <AmiBlitz3.ab3@2822>    BPL.w 'test
000219D0 <AmiBlitz3.ab3@2823>   MOVE.b (A5)+,D0
000219D4 <AmiBlitz3.ab3@2824>  BRA.w 'loop
000219D6 <AmiBlitz3.ab3@2827>   CMP.b D4,D0
000219DA <AmiBlitz3.ab3@2828>    BNE.w 'notq
000219DC <AmiBlitz3.ab3@2831>   MOVE.b (A5)+,D0
000219E0 <AmiBlitz3.ab3@2832>    BEQ.w notqerr
000219E4 <AmiBlitz3.ab3@2838>   CMP.b #$22,D0        ;'"'
000219E8 <AmiBlitz3.ab3@2839>    BNE.w 'qloop
000219EC <AmiBlitz3.ab3@2840>  BRA.w 'loop
000219EE <AmiBlitz3.ab3@2843>   CMP.b D1,D0
000219F2 <AmiBlitz3.ab3@2844>    BEQ.w 'done
000219F4 <AmiBlitz3.ab3@2845>   CMP.b D3,D0
000219F8 <AmiBlitz3.ab3@2846>    BEQ.w 'done       ;macro character!
000219FA <AmiBlitz3.ab3@2847>   CMP.b D2,D0
000219FE <AmiBlitz3.ab3@2848>    BNE.w 'loop
00021A06 <AmiBlitz3.ab3@2852>   MOVE.w #$FFFF,inmacro    ; was -1                                ; no runtimecheck in macros
00021A08 <AmiBlitz3.ab3@2853>   MOVEA.l A5,A3
00021A0E <AmiBlitz3.ab3@2855>    JSR getparameter2
00021A12 <AmiBlitz3.ab3@2856>    BNE.w 'fkitme
00021A18 <AmiBlitz3.ab3@2857>  JMP syntaxerr
00021A22 <AmiBlitz3.ab3@2862>    MOVE.w oldqflag,instringon
00021A28 <AmiBlitz3.ab3@2863>   MOVEA.l lastsourcepos,A5
00021A2E <AmiBlitz3.ab3@2866>    JSR findmac                                             ;find macro
00021A32 <AmiBlitz3.ab3@2867>    BEQ.w 'kl1
00021A38 <AmiBlitz3.ab3@2868>  JMP nomacerr
00021A3E <AmiBlitz3.ab3@2872>   TST.b debugmode
00021A42 <AmiBlitz3.ab3@2873>   BEQ 'sk1
00021A46 <AmiBlitz3.ab3@2874>   MOVE.w #$4e71,d1
00021A4C <AmiBlitz3.ab3@2875>   JSR writeword
00021A4E <AmiBlitz3.ab3@2876>   MOVE.l a5,-(a7)
00021A50 <AmiBlitz3.ab3@2877>   MOVE.l a3,a5
00021A52 <AmiBlitz3.ab3@2878>   SUBQ.l #1,a5
00021A5A <AmiBlitz3.ab3@2879>   MOVE.w #$0,inmacro
00021A5E <AmiBlitz3.ab3@2880>   BSR debugstuffa
00021A66 <AmiBlitz3.ab3@2881>   MOVE.w #$FFFF,inmacro
00021A68 <AmiBlitz3.ab3@2882>   MOVE.l (a7)+,a5
00021A6C <AmiBlitz3.ab3@2883>   MOVE.w #$4e71,d1
00021A72 <AmiBlitz3.ab3@2884>   JSR writeword
00021A74 <AmiBlitz3.ab3@2888>   MOVEA.l A5,A4            ;start of parameters!
00021A78 <AmiBlitz3.ab3@2892>    CMP.b #" ",(a4)+
00021A7C <AmiBlitz3.ab3@2893>     BEQ 'l5a
00021A7E <AmiBlitz3.ab3@2894>      SUBQ.l#1,a4
00021A82 <AmiBlitz3.ab3@2895>      CMP.b #",",(a4)
00021A86 <AmiBlitz3.ab3@2896>     BEQ 'nops
00021A88 <AmiBlitz3.ab3@2900>   MOVEQ.l #$00,D4          ;narg=0
00021A8E <AmiBlitz3.ab3@2902>   TST.b newsyntax
00021A92 <AmiBlitz3.ab3@2903>   BEQ 'l10b
00021A96 <AmiBlitz3.ab3@2904>   MOVEM.l a0/d0,-(a7)
00021A9A <AmiBlitz3.ab3@2905>   MOVE.l 4(a2),a0
00021A9E <AmiBlitz3.ab3@2906>   MOVE.w 8(a2),d0
00021AA2 <AmiBlitz3.ab3@2909>   CMP.b #"`",(a0)+
00021AA6 <AmiBlitz3.ab3@2910>   BEQ 'x1
00021AA8 <AmiBlitz3.ab3@2911>   SUBQ.w #1,d0
00021AAC <AmiBlitz3.ab3@2912>   BNE 'x2
00021AB0 <AmiBlitz3.ab3@2913>  BRA 'x3
00021AB4 <AmiBlitz3.ab3@2916>   MOVEM.l (a7)+,a0/d0
00021AB8 <AmiBlitz3.ab3@2917>  BRA 'l10
00021ABC <AmiBlitz3.ab3@2920>   MOVEM.l (a7)+,a0/d0
00021AC0 <AmiBlitz3.ab3@2921>  BRA 'nops
00021AC4 <AmiBlitz3.ab3@2925>   CMPI.b #"{",(A4)
00021AC8 <AmiBlitz3.ab3@2926>    BNE.w 'nops
00021ACA <AmiBlitz3.ab3@2931>   ADDQ.l #1,a4
00021ACE <AmiBlitz3.ab3@2934>     CMP.b #" ",(a4)
00021AD2 <AmiBlitz3.ab3@2935>     BEQ 'l5
00021AD6 <AmiBlitz3.ab3@2936>     MOVEM.l a0/d0,-(a7)
00021ADC <AmiBlitz3.ab3@2937>     CLR.b exmac
00021AE2 <AmiBlitz3.ab3@2938>     LEA chartab,a0
00021AE4 <AmiBlitz3.ab3@2939>     MOVEQ #0,d0
00021AE6 <AmiBlitz3.ab3@2940>     MOVE.b (a4),d0
00021AEA <AmiBlitz3.ab3@2941>     BMI 'm1
00021AEE <AmiBlitz3.ab3@2942>     TST.b 0(a0,d0)
00021AF2 <AmiBlitz3.ab3@2943>     BEQ 'm1
00021AF8 <AmiBlitz3.ab3@2944>     TST.b newsyntax
00021AFC <AmiBlitz3.ab3@2945>     BEQ 'ns1
00021B00 <AmiBlitz3.ab3@2946>     CMP.b #"#",d0
00021B04 <AmiBlitz3.ab3@2947>     BEQ 'm1
00021B08 <AmiBlitz3.ab3@2948>     CMP.b #"$",d0
00021B0C <AmiBlitz3.ab3@2949>     BEQ 'm1
00021B10 <AmiBlitz3.ab3@2950>     CMP.b #"-",d0
00021B14 <AmiBlitz3.ab3@2951>     BEQ 'm1
00021B18 <AmiBlitz3.ab3@2954>   CMP.b #",",d0
00021B1C <AmiBlitz3.ab3@2955>     BEQ 'm1
00021B20 <AmiBlitz3.ab3@2956>     CMP.b #"{",d0
00021B24 <AmiBlitz3.ab3@2957>     BNE 'm1b
00021B26 <AmiBlitz3.ab3@2958>     ADDQ.l #1,a4
00021B2A <AmiBlitz3.ab3@2959>  BRA 'm1
00021B30 <AmiBlitz3.ab3@2962>   TST.b newsyntax
00021B34 <AmiBlitz3.ab3@2963>     BEQ 'm1
00021B3C <AmiBlitz3.ab3@2964>     MOVE.b #1,exmac
00021B40 <AmiBlitz3.ab3@2967>   MOVEM.l (a7)+,a0/d0
00021B46 <AmiBlitz3.ab3@2968>     TST.b exmac
00021B4A <AmiBlitz3.ab3@2969>     BNE 'nops
00021B4C <AmiBlitz3.ab3@2976>   TST.b (a4)
00021B50 <AmiBlitz3.ab3@2977>   BEQ 'nops
00021B56 <AmiBlitz3.ab3@2981>   MOVEA.l ptr_macrobuffer_begin,A0    ;start of parameter collect
00021B58 <AmiBlitz3.ab3@2984>   ADDQ.w #1,D4                        ;another p
00021B5A <AmiBlitz3.ab3@2985>   MOVE.l A4,(A0)
00021B5E <AmiBlitz3.ab3@2987>   CLR.w 4(a0)
00021B62 <AmiBlitz3.ab3@2989>    BSR.w findit
00021B64 <AmiBlitz3.ab3@2992>   ADDQ.l #4,a0
00021B66 <AmiBlitz3.ab3@2998>   SUBQ.w #1,(a0)+
00021B6A <AmiBlitz3.ab3@3000>   CMP.b #$7D,D0     ;'}'
00021B6E <AmiBlitz3.ab3@3002>   BEQ 'l10b1
00021B70 <AmiBlitz3.ab3@3003>   TST.b d0
00021B74 <AmiBlitz3.ab3@3004>   BEQ 'l10b1
00021B78 <AmiBlitz3.ab3@3005>  BRA 'ppl
00021B7E <AmiBlitz3.ab3@3011>   CLR.l sourceline3
00021B80 <AmiBlitz3.ab3@3013>   MOVEA.l A4,A5
00021B86 <AmiBlitz3.ab3@3016>   MOVE.w D4,numarg
00021B8C <AmiBlitz3.ab3@3027>   MOVE.l #$01,D1
00021B92 <AmiBlitz3.ab3@3028>   MOVEA.l _execbase,A6
00021B98 <AmiBlitz3.ab3@3030>   MOVE.l mempool,a0
00021B9E <AmiBlitz3.ab3@3031>   MOVE.l macrobuffer_size,D0
00021BA4 <AmiBlitz3.ab3@3032>   CMP.l #DEFAULT_MACROBUFFERSIZE,d0                          ; replaced with a constant tomsmart1
00021BA8 <AmiBlitz3.ab3@3033>   BGE 'l1mc
00021BAE <AmiBlitz3.ab3@3034>   MOVE.l #DEFAULT_MACROBUFFERSIZE,d0                         ; replaced with a constant tomsmart1
00021BB4 <AmiBlitz3.ab3@3035>   MOVE.l d0,macrobuffer_size
00021BB8 <AmiBlitz3.ab3@3038>   JSR _AllocPooled(a6)
00021BC2 <AmiBlitz3.ab3@3042>   MOVE.l myline,myoline
00021BC4 <AmiBlitz3.ab3@3046>   ADDQ.l #1,d0
00021BCA <AmiBlitz3.ab3@3048>   MOVE.l D0,myline
00021BCC <AmiBlitz3.ab3@3049>   MOVEA.l D0,A1
00021BD2 <AmiBlitz3.ab3@3051>   MOVE.b #":",-1(a1)
00021BD4 <AmiBlitz3.ab3@3053>   MOVEA.l A1,A6
00021BDA <AmiBlitz3.ab3@3054>   ADDA.l macrobuffer_size,A6   ;end of macro buffer
00021BDC <AmiBlitz3.ab3@3056>   MOVEA.l (A7)+,A0             ;start of the line
00021BDE <AmiBlitz3.ab3@3059>   CMPA.l A6,A1
00021BE2 <AmiBlitz3.ab3@3060>    BCC.w mbovererr
00021BE4 <AmiBlitz3.ab3@3061>   MOVE.b (A0)+,(a1)+
00021BE6 <AmiBlitz3.ab3@3062>   CMPA.l A3,A0
00021BEA <AmiBlitz3.ab3@3063>    BCS.w 'loop2
00021BEC <AmiBlitz3.ab3@3064>   SUBQ.w #1,A1                 ;back over '#'
00021BF0 <AmiBlitz3.ab3@3066>   MOVE.w $8(A2),D1             ;mac len
00021BF4 <AmiBlitz3.ab3@3067>    BEQ.w 'loop4
00021BFC <AmiBlitz3.ab3@3068>   MOVE.w $A(A2),macnum
00021C00 <AmiBlitz3.ab3@3069>   ADDQ.w #1,$A(A2)
00021C04 <AmiBlitz3.ab3@3070>   MOVEA.l $4(A2),A2
00021C06 <AmiBlitz3.ab3@3071>   SUBQ.w #1,D1
00021C0C <AmiBlitz3.ab3@3073>   CLR.b firstmline
00021C0E <AmiBlitz3.ab3@3077>     MOVEQ.l #$00,D0
00021C10 <AmiBlitz3.ab3@3078>     MOVE.b (A2)+,D0
00021C16 <AmiBlitz3.ab3@3080>     TST.b firstmline
00021C1A <AmiBlitz3.ab3@3081>     BNE 'c1
00021C1E <AmiBlitz3.ab3@3082>     CMP.b #$22,d0         ;'"'
00021C22 <AmiBlitz3.ab3@3083>     BNE 's1
00021C2A <AmiBlitz3.ab3@3084>     MOVE.b #1,firstmline
00021C2E <AmiBlitz3.ab3@3087>     CMP.b #":",d0
00021C32 <AmiBlitz3.ab3@3088>     BNE 'm1a
00021C3A <AmiBlitz3.ab3@3089>     MOVE.b #1,firstmline
00021C3E <AmiBlitz3.ab3@3092>     CMP.b #";",d0
00021C42 <AmiBlitz3.ab3@3093>     BNE 'c1
00021C44 <AmiBlitz3.ab3@3096>     SUBQ.w #1,d1                                           ;filter out comment
00021C46 <AmiBlitz3.ab3@3097>     MOVE.b (a2)+,d0
00021C4C <AmiBlitz3.ab3@3098>     CMP.w #":@",-1(a2)
00021C50 <AmiBlitz3.ab3@3099>     BEQ 'c2
00021C52 <AmiBlitz3.ab3@3100>     TST.w d1
00021C56 <AmiBlitz3.ab3@3101>     BNE 'l1d
00021C5A <AmiBlitz3.ab3@3102>    BRA 'oky2
00021C60 <AmiBlitz3.ab3@3105>     CMP.b #":",1(a2)
00021C64 <AmiBlitz3.ab3@3106>       BNE 'l1d
00021C66 <AmiBlitz3.ab3@3107>       ADDQ #2,a2
00021C68 <AmiBlitz3.ab3@3108>       SUBQ #3,d1
00021C6A <AmiBlitz3.ab3@3109>       MOVE.b (a2)+,d0
00021C72 <AmiBlitz3.ab3@3110>       MOVE.b #1,firstmline
00021C76 <AmiBlitz3.ab3@3114>     CMP.b #"`",D0
00021C7A <AmiBlitz3.ab3@3115>      BNE.w 'oky
00021C7C <AmiBlitz3.ab3@3116>     SUBQ.w #1,D1
00021C7E <AmiBlitz3.ab3@3117>     MOVE.b (A2)+,D0
00021C82 <AmiBlitz3.ab3@3118>     CMP.w #$7B,D0       ;'{'
00021C86 <AmiBlitz3.ab3@3119>      BEQ.w 'evalit
00021C8A <AmiBlitz3.ab3@3120>     CMP.w #$40,D0       ;'@'
00021C8E <AmiBlitz3.ab3@3121>      BNE.w 'notnum
00021C90 <AmiBlitz3.ab3@3125>     MOVEQ.l #$00,D2
00021C96 <AmiBlitz3.ab3@3126>     MOVE.w macnum,D2
00021C98 <AmiBlitz3.ab3@3127>     MOVEA.l A1,A0
00021C9A <AmiBlitz3.ab3@3128>     MOVE.w D1,-(A7)
00021CA0 <AmiBlitz3.ab3@3129>      JSR makelong
00021CA2 <AmiBlitz3.ab3@3130>     MOVEA.l A0,A1
00021CA4 <AmiBlitz3.ab3@3131>     MOVE.w (A7)+,D1
00021CA8 <AmiBlitz3.ab3@3133>    BRA.w 'oky2
00021CAC <AmiBlitz3.ab3@3136>     ORI.w #$20,D0
00021CB0 <AmiBlitz3.ab3@3137>     CMP.w #$7A,D0       ;'z'
00021CB4 <AmiBlitz3.ab3@3138>      BCS.w 'fkit
00021CBA <AmiBlitz3.ab3@3139>    JMP ilconsterr
00021CBE <AmiBlitz3.ab3@3142>     SUBI.w #$30,D0
00021CC2 <AmiBlitz3.ab3@3143>     CMP.w #$A,D0
00021CC6 <AmiBlitz3.ab3@3144>      BCS.w 'itsgot
00021CCA <AmiBlitz3.ab3@3146>     SUBI.w #$27,D0
00021CCE <AmiBlitz3.ab3@3147>     CMP.w #$A,D0
00021CD2 <AmiBlitz3.ab3@3148>      BCC.w 'fkit2
00021CD8 <AmiBlitz3.ab3@3149>    JMP ilconsterr
00021CDC <AmiBlitz3.ab3@3152>    BRA.w 'itsgot
00021CDE <AmiBlitz3.ab3@3155>     MOVE.l A5,-(A7)
00021CE2 <AmiBlitz3.ab3@3156>     MOVEM.l D1/A1-A2/A6,-(A7)
00021CE4 <AmiBlitz3.ab3@3157>     MOVEA.l A2,A5
00021CEA <AmiBlitz3.ab3@3158>      JSR evalconst2
00021CEE <AmiBlitz3.ab3@3159>     CMP.w #$7D,D0      ;'}'
00021CF2 <AmiBlitz3.ab3@3160>      BEQ.w 'allisok
00021CF8 <AmiBlitz3.ab3@3161>    JMP syntaxerr
00021CFC <AmiBlitz3.ab3@3164>     MOVEM.l (A7)+,D1/A1-A2/A6
00021CFE <AmiBlitz3.ab3@3165>     MOVE.l A5,D2
00021D00 <AmiBlitz3.ab3@3166>     SUB.l A2,D2
00021D02 <AmiBlitz3.ab3@3167>     SUB.w D2,D1
00021D04 <AmiBlitz3.ab3@3168>     MOVEA.l A5,A2
00021D0A <AmiBlitz3.ab3@3170>     CLR.w instringon
00021D0C <AmiBlitz3.ab3@3171>     MOVEA.l (A7)+,A5
00021D0E <AmiBlitz3.ab3@3173>     MOVE.l D3,D0
00021D12 <AmiBlitz3.ab3@3174>     BPL.w 'itsgot
00021D18 <AmiBlitz3.ab3@3175>    JMP ilconsterr
00021D1A <AmiBlitz3.ab3@3178>     SUBQ.w #1,D0
00021D1E <AmiBlitz3.ab3@3179>      BPL.w 'ok
00021D24 <AmiBlitz3.ab3@3183>     MOVE.w numarg,D0
00021D28 <AmiBlitz3.ab3@3184>     DIVU #$A,D0
00021D2C <AmiBlitz3.ab3@3185>     ADDI.w #$30,D0
00021D2E <AmiBlitz3.ab3@3186>     CMPA.l A6,A1
00021D32 <AmiBlitz3.ab3@3187>      BCC.w mbovererr
00021D34 <AmiBlitz3.ab3@3188>     MOVE.b D0,(A1)+
00021D36 <AmiBlitz3.ab3@3189>     SWAP D0
00021D3A <AmiBlitz3.ab3@3190>     ADDI.w #$30,D0
00021D3C <AmiBlitz3.ab3@3191>     CMPA.l A6,A1
00021D40 <AmiBlitz3.ab3@3192>      BCC.w mbovererr
00021D42 <AmiBlitz3.ab3@3193>     MOVE.b D0,(A1)+
00021D46 <AmiBlitz3.ab3@3194>    BRA.w 'oky2
00021D4C <AmiBlitz3.ab3@3200>     CMP.w numarg,D0
00021D50 <AmiBlitz3.ab3@3201>      BCC.w 'oky2
00021D52 <AmiBlitz3.ab3@3202>     LSL.w #1,D0
00021D54 <AmiBlitz3.ab3@3203>     MOVE.w D0,D4
00021D56 <AmiBlitz3.ab3@3204>     LSL.w #1,D0
00021D58 <AmiBlitz3.ab3@3205>     ADD.w D4,D0          ;*6
00021D5E <AmiBlitz3.ab3@3206>     MOVEA.l ptr_macrobuffer_begin,A0
00021D60 <AmiBlitz3.ab3@3207>     ADDA.w D0,A0
00021D64 <AmiBlitz3.ab3@3208>     MOVE.w $4(A0),D4     ;len of replacetext
00021D68 <AmiBlitz3.ab3@3209>      BEQ.w 'oky2
00021D6A <AmiBlitz3.ab3@3210>     MOVEA.l (A0),A0
00021D6C <AmiBlitz3.ab3@3211>     SUBQ.w #1,D4
00021D6E <AmiBlitz3.ab3@3214>       CMPA.l A6,A1
00021D72 <AmiBlitz3.ab3@3215>        BCC.w mbovererr
00021D76 <AmiBlitz3.ab3@3217>       CMP.w #"@@",(a0)
00021D7A <AmiBlitz3.ab3@3218>        BNE 'l10e
00021D80 <AmiBlitz3.ab3@3219>       TST.w ininclude
00021D84 <AmiBlitz3.ab3@3220>        BNE errorjoin
00021D8A <AmiBlitz3.ab3@3223>       MOVE.l sourceline,a0
00021D8C <AmiBlitz3.ab3@3224>       MOVE.l (a0),a0
00021D92 <AmiBlitz3.ab3@3225>       CMP.l #0,a0
00021D96 <AmiBlitz3.ab3@3226>       BNE 'l11e
00021D98 <AmiBlitz3.ab3@3227>       MOVEQ #0,d0
00021D9E <AmiBlitz3.ab3@3228>       JSR error
00021DA4 <AmiBlitz3.ab3@3231>       MOVE.l a0,sourceline
00021DAA <AmiBlitz3.ab3@3232>       ADDQ.l #1,linenumat
00021DAE <AmiBlitz3.ab3@3233>       LEA 9(a0),a0
00021DB0 <AmiBlitz3.ab3@3234>       MOVE.l a0,-(a7)
00021DB4 <AmiBlitz3.ab3@3237>       CMP.b #" ",(a0)+
00021DB8 <AmiBlitz3.ab3@3238>        BEQ 'l110e
00021DBE <AmiBlitz3.ab3@3239>       CMP.b #";",-1(a0)
00021DC0 <AmiBlitz3.ab3@3240>       MOVE.l (a7)+,a0
00021DC4 <AmiBlitz3.ab3@3241>        BEQ 'l111e
00021DC6 <AmiBlitz3.ab3@3242>       SUBQ.l #1,d4
00021DC8 <AmiBlitz3.ab3@3246>       MOVE.b (A0)+,(A1)+
00021DCC <AmiBlitz3.ab3@3247>     DBF D4,'plp
00021DD0 <AmiBlitz3.ab3@3249>     BRA.w 'oky2
00021DD2 <AmiBlitz3.ab3@3252>     CMPA.l A6,A1
00021DD6 <AmiBlitz3.ab3@3253>      BCC.w mbovererr
00021DD8 <AmiBlitz3.ab3@3254>     MOVE.b D0,(A1)+
00021DDC <AmiBlitz3.ab3@3255>      BPL.w 'oky2
00021DDE <AmiBlitz3.ab3@3256>     CMPA.l A6,A1
00021DE2 <AmiBlitz3.ab3@3257>      BCC.w mbovererr
00021DE4 <AmiBlitz3.ab3@3258>     MOVE.b (A2)+,(A1)+
00021DE6 <AmiBlitz3.ab3@3259>     SUBQ.w #1,D1
00021DEA <AmiBlitz3.ab3@3262>    DBF D1,'loop3
00021DEC <AmiBlitz3.ab3@3272>   CMPA.l A6,A1
00021DF0 <AmiBlitz3.ab3@3273>    BCC.w mbovererr
00021DF2 <AmiBlitz3.ab3@3274>   MOVE.b (A5)+,(A1)+
00021DF6 <AmiBlitz3.ab3@3275>    BNE.w 'loop4
00021DFC <AmiBlitz3.ab3@3277>   MOVEA.l myline,A5
00021E02 <AmiBlitz3.ab3@3279>   MOVE.l myoline,D0
00021E06 <AmiBlitz3.ab3@3280>    BEQ.w 'skip3
00021E08 <AmiBlitz3.ab3@3282>   SUBQ.l #1,d0
00021E0A <AmiBlitz3.ab3@3284>   MOVEA.l D0,A1
00021E10 <AmiBlitz3.ab3@3285>   MOVE.l macrobuffer_size,D0
00021E16 <AmiBlitz3.ab3@3286>   MOVEA.l _execbase,A6
00021E1C <AmiBlitz3.ab3@3288>   MOVE.l mempool,a0
00021E20 <AmiBlitz3.ab3@3289>   JSR _FreePooled(A6)
00021E24 <AmiBlitz3.ab3@3294>  BRA.w 'loop0
00021E26 <AmiBlitz3.ab3@3297>   MOVEA.l (A7)+,A5
00021E28 <AmiBlitz3.ab3@3298> RTS
00021E2E <AmiBlitz3.ab3@3302>   MOVE.l myline,D0
00021E32 <AmiBlitz3.ab3@3303>   BEQ.w 'no
00021E34 <AmiBlitz3.ab3@3305>   SUBQ.l #1,d0
00021E3A <AmiBlitz3.ab3@3307>   CLR.l myline
00021E3C <AmiBlitz3.ab3@3308>   MOVEA.l D0,A1
00021E42 <AmiBlitz3.ab3@3309>   MOVE.l macrobuffer_size,D0
00021E48 <AmiBlitz3.ab3@3310>   MOVEA.l _execbase,A6
00021E4E <AmiBlitz3.ab3@3312>   MOVE.l mempool,a0
00021E52 <AmiBlitz3.ab3@3313>  JMP _FreePooled(A6)
00021E54 <AmiBlitz3.ab3@3318> RTS
00021E56 <AmiBlitz3.ab3@3324>   MOVEQ.l #$00,D2    ;no nesting
00021E5A <AmiBlitz3.ab3@3328>   ADDQ.w #1,4(a0)
00021E5C <AmiBlitz3.ab3@3330>    MOVE.b (A4)+,D0
00021E60 <AmiBlitz3.ab3@3333>    BEQ exit1
00021E64 <AmiBlitz3.ab3@3335>    BPL.w 'tst
00021E68 <AmiBlitz3.ab3@3337>   ADDQ.w #1,4(a0)
00021E6A <AmiBlitz3.ab3@3339>   ADDQ.w #1,A4
00021E6E <AmiBlitz3.ab3@3340>  BRA.w 'loop
00021E74 <AmiBlitz3.ab3@3344>    TST.w instringon
00021E78 <AmiBlitz3.ab3@3345>    BNE 'lnom
00021E7C <AmiBlitz3.ab3@3346>    CMP.b #";",d0
00021E80 <AmiBlitz3.ab3@3347>    BEQ exit2
00021E84 <AmiBlitz3.ab3@3348>    CMP.b #":",d0
00021E88 <AmiBlitz3.ab3@3349>    BEQ exit2
00021E8C <AmiBlitz3.ab3@3353>   CMP.b #$22,D0           ;'"'
00021E90 <AmiBlitz3.ab3@3354>    BNE.w 'notq
00021E96 <AmiBlitz3.ab3@3355>   NOT.w instringon
00021E9A <AmiBlitz3.ab3@3356>  BRA.w 'loop
00021EA0 <AmiBlitz3.ab3@3359>   TST.w instringon
00021EA4 <AmiBlitz3.ab3@3360>    BNE.w 'loop
00021EA8 <AmiBlitz3.ab3@3362>    CMP.b #"@",d0
00021EAC <AmiBlitz3.ab3@3363>    BNE 'l10
00021EB0 <AmiBlitz3.ab3@3364>    CMP.b #"@",(a4)
00021EB4 <AmiBlitz3.ab3@3365>    BNE 'l10
00021EBA <AmiBlitz3.ab3@3366>    TST.w ininclude
00021EBE <AmiBlitz3.ab3@3367>    BNE errorjoin
00021EC4 <AmiBlitz3.ab3@3368>    MOVE.l sourceline3,a4
00021ECA <AmiBlitz3.ab3@3369>    CMP.l #0,a4
00021ECE <AmiBlitz3.ab3@3370>    BNE 'l11
00021ED4 <AmiBlitz3.ab3@3371>    MOVE.l sourceline,a4
00021ED6 <AmiBlitz3.ab3@3374>   MOVE.l (a4),a4
00021EDC <AmiBlitz3.ab3@3375>       CMP.l #0,a4
00021EE0 <AmiBlitz3.ab3@3376>       BNE 'l12
00021EE2 <AmiBlitz3.ab3@3377>       MOVEQ #0,d0
00021EE8 <AmiBlitz3.ab3@3378>       JSR error
00021EEE <AmiBlitz3.ab3@3381>    MOVE.l a4,sourceline3
00021EF2 <AmiBlitz3.ab3@3382>    LEA 9(a4),a4
00021EF4 <AmiBlitz3.ab3@3383>    MOVEQ #",",d0
00021EF8 <AmiBlitz3.ab3@3387>   CMP.b #$2C,D0       ;','
00021EFC <AmiBlitz3.ab3@3388>    BNE.w 'notc
00021EFE <AmiBlitz3.ab3@3389>   TST.w D2
00021F02 <AmiBlitz3.ab3@3390>    BEQ.w 'done
00021F06 <AmiBlitz3.ab3@3391>  BRA.w 'loop
00021F0A <AmiBlitz3.ab3@3396>    CMP.b #$7B,D0      ; same as itisopen                                     ;"{"
00021F0E <AmiBlitz3.ab3@3397>    BEQ.w 'l10b
00021F12 <AmiBlitz3.ab3@3398>   CMP.b #$28,D0                                            ;"("
00021F16 <AmiBlitz3.ab3@3402>    BNE.w 'noto
00021F18 <AmiBlitz3.ab3@3403>   ADDQ.w #1,D2
00021F1C <AmiBlitz3.ab3@3404>  BRA.w 'loop
00021F20 <AmiBlitz3.ab3@3407>   CMP.b #$7D,D0       ;'}'                                    ;"}"
00021F24 <AmiBlitz3.ab3@3408>    BNE.w 'notcb
00021F26 <AmiBlitz3.ab3@3409>  TST.w D2
00021F2A <AmiBlitz3.ab3@3410>    BEQ.w 'done
00021F2E <AmiBlitz3.ab3@3415>    CMP.b #$7D,D0     ; same as isitclose                                       ;"}"
00021F32 <AmiBlitz3.ab3@3416>    BEQ.w 'l10a
00021F36 <AmiBlitz3.ab3@3417>   CMP.b #$29,D0                                            ;")"
00021F3A <AmiBlitz3.ab3@3421>    BNE.w 'loop
00021F3C <AmiBlitz3.ab3@3422>   SUBQ.w #1,D2
00021F40 <AmiBlitz3.ab3@3423> BRA.w 'loop
00021F42 <AmiBlitz3.ab3@3426> RTS
00021F44 <AmiBlitz3.ab3@3431>       SUBQ.l #1,a4
00021F4A <AmiBlitz3.ab3@3432>       CLR.l sourceline3
00021F4C <AmiBlitz3.ab3@3433> RTS
00021F4E <AmiBlitz3.ab3@3437>       MOVEQ #0,d0
00021F50 <AmiBlitz3.ab3@3438>       SUBQ.l #1,a4
00021F56 <AmiBlitz3.ab3@3439>       CLR.l sourceline3
00021F58 <AmiBlitz3.ab3@3440> RTS
00021F5C <AmiBlitz3.ab3@3445>   CMP.b #$7B,D0        ;'{'                                     ;"{"
00021F60 <AmiBlitz3.ab3@3446>   BEQ.w 'yes
00021F64 <AmiBlitz3.ab3@3447>   CMP.b #$28,D0        ;'('                                    ;"("
00021F66 <AmiBlitz3.ab3@3450> RTS
00021F6A <AmiBlitz3.ab3@3454>   CMP.b #$7D,D0         ;'}'                                   ;"}"
00021F6E <AmiBlitz3.ab3@3455>   BEQ.w 'yes
00021F72 <AmiBlitz3.ab3@3456>   CMP.b #$29,D0         ;')'                                   ;")"
00021F74 <AmiBlitz3.ab3@3459> RTS
00021F76 <AmiBlitz3.ab3@3463> stopit:     Ds.w 1
00021F78 <AmiBlitz3.ab3@3464> clrreq:     Ds.w 1
00021F7C <AmiBlitz3.ab3@3486>   MOVE.w clrreq(PC),D0
00021F80 <AmiBlitz3.ab3@3487>    BEQ.w 'skip
00021FB2 <AmiBlitz3.ab3@3489> 
00021FB8 <AmiBlitz3.ab3@3491>   LEA clrreq,a0
00021FBA <AmiBlitz3.ab3@3492>   NOT.w (a0)                                               ;reass
00021FC0 <AmiBlitz3.ab3@3493>   MOVEA.l ptr_ThisTask,A0
00021FC4 <AmiBlitz3.ab3@3494>   CLR.l $1E(A0)
00021FC8 <AmiBlitz3.ab3@3495>   CLR.l $2A(A0)
00021FCA <AmiBlitz3.ab3@3498> RTS
00021FCC <AmiBlitz3.ab3@3501> intsused:  Ds.w 1
00021FD4 <AmiBlitz3.ab3@3505>   MOVE.w #-1,blitzoff
00021FDA <AmiBlitz3.ab3@3506>   CLR.w intsused
00021FE0 <AmiBlitz3.ab3@3507>   CLR.w anyerrs
00021FE6 <AmiBlitz3.ab3@3508>   CLR.w blitzmode
00021FEC <AmiBlitz3.ab3@3509>   CLR.w dontwrite_nomemleft                                              ;nomemleft
00021FF2 <AmiBlitz3.ab3@3510>   CLR.w constmode
00021FF8 <AmiBlitz3.ab3@3511>   CLR.w cmake
00021FFE <AmiBlitz3.ab3@3512>   CLR.w cfetchmode
00022004 <AmiBlitz3.ab3@3513>   CLR.l intdata1
0002200A <AmiBlitz3.ab3@3514>   CLR.w fuckpos
00022010 <AmiBlitz3.ab3@3515>   CLR.w procnum
00022016 <AmiBlitz3.ab3@3516>   CLR.w procnum2
0002201C <AmiBlitz3.ab3@3517>   CLR.w dfetch
00022022 <AmiBlitz3.ab3@3518>   CLR.l titleat
00022028 <AmiBlitz3.ab3@3519>   CLR.b usedpath
0002202E <AmiBlitz3.ab3@3520>   CLR.b path2
00022034 <AmiBlitz3.ab3@3521>   CLR.w inerr
0002203A <AmiBlitz3.ab3@3522>   CLR.w intlevel
00022040 <AmiBlitz3.ab3@3523>   CLR.l cont_pc
00022046 <AmiBlitz3.ab3@3524>   CLR.l cont_pc2
0002204C <AmiBlitz3.ab3@3525>   CLR.l lastcontlink
00022056 <AmiBlitz3.ab3@3527>   MOVE.l destbufferstart,destpointer
00022060 <AmiBlitz3.ab3@3528>   MOVE.l destbufferstart,bigpc
0002206A <AmiBlitz3.ab3@3529>   MOVE.l destbufferend,libend
00022074 <AmiBlitz3.ab3@3530>   MOVE.l data1start,data1
0002207E <AmiBlitz3.ab3@3531>   MOVE.l data2at,data2
00022086 <AmiBlitz3.ab3@3533>   MOVE.w #-1,skipcode                                      ;#-1,comflag org source
0002208E <AmiBlitz3.ab3@3534>   MOVE.w #-1,linemode                                      ;#-1,linemode org soruce
00022094 <AmiBlitz3.ab3@3535>   CLR.w oldvcodelen
0002209A <AmiBlitz3.ab3@3536>   CLR.b lastgloballabel                                    ;lastbiglab org source
0002209C <AmiBlitz3.ab3@3538> RTS
0002209E <AmiBlitz3.ab3@3541> debugmode:  Ds.w 1                                         ;debugga org source ;debugger enabled?
000220A4 <AmiBlitz3.ab3@3545>   LEA  clrreq,a1
000220A8 <AmiBlitz3.ab3@3546>   MOVE.w #2000,(a1)
000220D2 <AmiBlitz3.ab3@3547>   !basic
00022122 <AmiBlitz3.ab3@3548>   comstatusstr  = !TRANS{"Initializing Compiler..."} ;default settings
0002212A <AmiBlitz3.ab3@3549>   calcpro       = 0
00022132 <AmiBlitz3.ab3@3550>   calcpro_old   = 0
0002213E <AmiBlitz3.ab3@3551>   typ_old       = -1
0002214A <AmiBlitz3.ab3@3552>   pass_old      = -1
00022150 <AmiBlitz3.ab3@3553>   update_comstatus_gui = True ; for the first
0002218A <AmiBlitz3.ab3@3555>   GetD0 &comstatusstr : !ComData_SetL{comPtr_CompileStatusString,d0}  ; set pointer of status string for gui tomsmart1 2012 05 12
000221C4 <AmiBlitz3.ab3@3556>   GetD0 &calcpro      : !ComData_SetL{comPtr_CompileCalcProLong ,d0}  ; set pointer of calcpro long for gui tomsmart1 2012 05 12
000221E2 <AmiBlitz3.ab3@3557>   !asm
00022214 <AmiBlitz3.ab3@3558> 
0002221A <AmiBlitz3.ab3@3560>   CLR.w stopit
0002221C <AmiBlitz3.ab3@3561> RTS
00022222 <AmiBlitz3.ab3@3568>   CLR.w storedebugmode
00022228 <AmiBlitz3.ab3@3569>   CLR.b iserror
0002222C <AmiBlitz3.ab3@3571>   BSR.w compilerequester
00022236 <AmiBlitz3.ab3@3573>   MOVE.l #0,globallinecount
0002223C <AmiBlitz3.ab3@3574>   JSR check_of_same_source
00022240 <AmiBlitz3.ab3@3577>   BSR.w call_setpointerbusy
00022244 <AmiBlitz3.ab3@3579>   BSR.w setcvars
0002224C <AmiBlitz3.ab3@3581>   MOVE.w #$8000,globalvarpointer
00022256 <AmiBlitz3.ab3@3582>   MOVE.l #newtype_quick,defaulttype
0002225C <AmiBlitz3.ab3@3584>   MOVE.l A7,passstack
00022266 <AmiBlitz3.ab3@3585>   MOVE.l #firstitem_,sourceline
00022270 <AmiBlitz3.ab3@3586>   MOVE.w numlines_org,linesleft
0002227A <AmiBlitz3.ab3@3588>   MOVE.l numlines,numlines2
00022280 <AmiBlitz3.ab3@3590>   ADDQ.w #1,linesleft
00022286 <AmiBlitz3.ab3@3591>   ADDQ.l #1,numlines2
00022290 <AmiBlitz3.ab3@3592>   MOVE.l #-1,linenumat
00022294 <AmiBlitz3.ab3@3594>   BSR.w resetlibs
00022298 <AmiBlitz3.ab3@3595>   BSR.w Aclearallvars
0002229E <AmiBlitz3.ab3@3597>   LEA progress_per_line+2,A0
000222A0 <AmiBlitz3.ab3@3598>   MOVEQ.l #$03,D0
000222A2 <AmiBlitz3.ab3@3601>     CLR.w (A0)+
000222A6 <AmiBlitz3.ab3@3602>   DBF D0,'okloop
000222AC <AmiBlitz3.ab3@3606>   LEA _include,a0
000222B0 <AmiBlitz3.ab3@3607>   MOVEM.l a0-a6/d0-d7,-(a7)
000222B6 <AmiBlitz3.ab3@3608>   LEA ptr_parameterstore,a1
000222B8 <AmiBlitz3.ab3@3611>     MOVE.b (a0)+,(a1)+
000222BC <AmiBlitz3.ab3@3612>   BNE 'l1b
000222BE <AmiBlitz3.ab3@3614>   MOVEQ #9,d2
000222C4 <AmiBlitz3.ab3@3615>   JSR findlabel2
000222C8 <AmiBlitz3.ab3@3616>   BNE 'd
000222D0 <AmiBlitz3.ab3@3617>   MOVE.l #0,8(a2)
000222D4 <AmiBlitz3.ab3@3618>   MOVEM.l (a7)+,a0-a6/d0-d7
000222D8 <AmiBlitz3.ab3@3619>  BRA 'd2
000222DE <AmiBlitz3.ab3@3622>   JSR addlabelhash
000222E6 <AmiBlitz3.ab3@3623>   MOVE.l #$1,$4(A2)
000222EE <AmiBlitz3.ab3@3624>   MOVE.l #0,8(a2)
000222F2 <AmiBlitz3.ab3@3625>   MOVEM.l (a7)+,a0-a6/d0-d7
000222F8 <AmiBlitz3.ab3@3628>   LEA _debug,a0
000222FC <AmiBlitz3.ab3@3629>   MOVEM.l a0-a6/d0-d7,-(a7)
00022302 <AmiBlitz3.ab3@3630>   LEA ptr_parameterstore,a1
00022304 <AmiBlitz3.ab3@3633>     MOVE.b (a0)+,(a1)+
00022308 <AmiBlitz3.ab3@3634>   BNE 'l9b
0002230A <AmiBlitz3.ab3@3636>   MOVEQ #7,d2
00022310 <AmiBlitz3.ab3@3637>   JSR findlabel2
00022314 <AmiBlitz3.ab3@3638>   BNE 'd9
00022318 <AmiBlitz3.ab3@3639>   MOVE.b debugmode(PC),D0
0002231A <AmiBlitz3.ab3@3640>   EXT.w d0
0002231C <AmiBlitz3.ab3@3641>   EXT.l d0
00022320 <AmiBlitz3.ab3@3642>   MOVE.l d0,8(a2)
00022324 <AmiBlitz3.ab3@3643>   MOVEM.l (a7)+,a0-a6/d0-d7
00022328 <AmiBlitz3.ab3@3644>  BRA 'd9b
0002232E <AmiBlitz3.ab3@3647>   JSR addlabelhash
00022336 <AmiBlitz3.ab3@3648>   MOVE.l #$1,$4(A2)
0002233A <AmiBlitz3.ab3@3649>   MOVE.b debugmode(PC),D0
0002233C <AmiBlitz3.ab3@3650>   EXT.w d0
0002233E <AmiBlitz3.ab3@3651>   EXT.l d0
00022342 <AmiBlitz3.ab3@3652>   MOVE.l d0,8(a2)
00022346 <AmiBlitz3.ab3@3653>   MOVEM.l (a7)+,a0-a6/d0-d7
0002234C <AmiBlitz3.ab3@3656>   MOVE.l #firstitem_,a0
0002234E <AmiBlitz3.ab3@3657>   MOVE.l (a0),a0
00022352 <AmiBlitz3.ab3@3658>   LEA 9(a0),a0
0002235A <AmiBlitz3.ab3@3659>   MOVE.w #0,exdebug
00022360 <AmiBlitz3.ab3@3660>   TST.b debugmode
00022364 <AmiBlitz3.ab3@3661>    BEQ 'l10
00022366 <AmiBlitz3.ab3@3664>   MOVE.b (a0)+,d0
0002236A <AmiBlitz3.ab3@3665>    BEQ 'l10
0002236E <AmiBlitz3.ab3@3666>   CMP.b #$20,d0
00022372 <AmiBlitz3.ab3@3667>    BEQ 'l2
00022374 <AmiBlitz3.ab3@3668>   SUBQ.l #1,a0
0002237A <AmiBlitz3.ab3@3669>   CMP.l #"DEBU",(a0)
0002237E <AmiBlitz3.ab3@3670>    BNE 'l10
00022384 <AmiBlitz3.ab3@3671>   CMP.b #"G",4(a0)
00022388 <AmiBlitz3.ab3@3672>    BNE 'l10
00022390 <AmiBlitz3.ab3@3673>   MOVE.w #$0,debugversion
00022398 <AmiBlitz3.ab3@3674>   MOVE.b #1,exdebug
0002239E <AmiBlitz3.ab3@3681>   LEA nops4,A0
000223A4 <AmiBlitz3.ab3@3682>   LEA nopsf,A1
000223AA <AmiBlitz3.ab3@3683>   JSR pokecode2                                            ;write intro nops
000223B0 <AmiBlitz3.ab3@3685>   MOVE.l #$01010101,d1
000223B6 <AmiBlitz3.ab3@3686>   JSR writedatalong                                        ;for the 4 tempregs
000223BC <AmiBlitz3.ab3@3687>   JSR writedatalong
000223C2 <AmiBlitz3.ab3@3688>   JSR writedatalong
000223C8 <AmiBlitz3.ab3@3689>   JSR writedatalong
000223CE <AmiBlitz3.ab3@3690>   TST.b saved0
000223D2 <AmiBlitz3.ab3@3691>    BEQ 'l1
000223D8 <AmiBlitz3.ab3@3692>   MOVE.l #$4e714e71,d1
000223DE <AmiBlitz3.ab3@3693>   JSR writelong                                            ;add 2 nops
000223E4 <AmiBlitz3.ab3@3694>   MOVE.l #$4e714e71,d1
000223EA <AmiBlitz3.ab3@3695>   JSR writelong                                            ;add 2 nops
000223F0 <AmiBlitz3.ab3@3696>   MOVE.l #$4e714e71,d1
000223F6 <AmiBlitz3.ab3@3697>   JSR writelong                                            ;add 2 nops
000223FC <AmiBlitz3.ab3@3698>    MOVE.l #$4e714e71,d1
00022402 <AmiBlitz3.ab3@3699>   JSR writelong                                            ;add 2 nops
00022406 <AmiBlitz3.ab3@3703>   MOVE.b debugmode(PC),D1
0002240A <AmiBlitz3.ab3@3704>    BEQ.b 'dskip
00022414 <AmiBlitz3.ab3@3705>   MOVE.b debugmode,storedebugmode
00022418 <AmiBlitz3.ab3@3707>   MOVE.w #$FFDC,D1        ;#runerrlib,
0002241C <AmiBlitz3.ab3@3708>    BSR.w uselib
00022422 <AmiBlitz3.ab3@3710>   TST.w debugversion                                       ;make a version for debugger
00022426 <AmiBlitz3.ab3@3711>    BNE.b 'exec
0002242A <AmiBlitz3.ab3@3715>   MOVE.w #$FA3C,D1        ;#debuglib,
0002242E <AmiBlitz3.ab3@3716>    BSR.w uselib
00022432 <AmiBlitz3.ab3@3717>   MOVE.w #$0001,D1        ;#dhandlerlib,
00022436 <AmiBlitz3.ab3@3718>    BSR.w uselib
0002243A <AmiBlitz3.ab3@3719>  BRA.b 'dskip
0002243E <AmiBlitz3.ab3@3724>   MOVE.w #$FA32,D1        ;#rundebuglib,
00022442 <AmiBlitz3.ab3@3725>   BSR.w uselib
00022446 <AmiBlitz3.ab3@3728>   BSR.w nextline
0002244C <AmiBlitz3.ab3@3730>   CLR.l linenum
00022452 <AmiBlitz3.ab3@3731>   CLR.l stacktrack
00022458 <AmiBlitz3.ab3@3737>   ADDQ.l #1,linenum
00022462 <AmiBlitz3.ab3@3738>   MOVE.l destpointer,destpointer2
00022468 <AmiBlitz3.ab3@3739>   MOVE.l a5,sourceline2
0002246C <AmiBlitz3.ab3@3741>   BSR.w compile_line                                        ;compile pass
00022470 <AmiBlitz3.ab3@3745>   BSR.w nextline
00022474 <AmiBlitz3.ab3@3746>    BNE.w passloop
00022478 <AmiBlitz3.ab3@3747>   BSR.w JUMP_do_runerrson
0002247C <AmiBlitz3.ab3@3748>   BSR.w pointchk
00022482 <AmiBlitz3.ab3@3750>   TST.b objectcount
00022486 <AmiBlitz3.ab3@3751>    BNE macenderr
0002248C <AmiBlitz3.ab3@3753>   CLR.l linenumat
00022490 <AmiBlitz3.ab3@3754>   BSR.w errchx2
0002249A <AmiBlitz3.ab3@3756>   CMP.l #-1,bssend
0002249E <AmiBlitz3.ab3@3757>    BNE 'l30
000224A8 <AmiBlitz3.ab3@3758>   MOVE.l destpointer,bssend                                ;compile end
000224AE <AmiBlitz3.ab3@3761>   MOVE.l destpointer,d0
000224B8 <AmiBlitz3.ab3@3762>   CMP.l #-1,bssstart
000224BC <AmiBlitz3.ab3@3763>   BNE 'lnf6
000224C6 <AmiBlitz3.ab3@3764>   CMP.l #-1,chipstart
000224CA <AmiBlitz3.ab3@3765>   BNE 'lnf6
000224CE <AmiBlitz3.ab3@3766>  BRA 'leven4
000224D4 <AmiBlitz3.ab3@3769>   MOVE.l destpointer,d1
000224D6 <AmiBlitz3.ab3@3770>   ADDQ.l #3,d1
000224DC <AmiBlitz3.ab3@3771>   AND.l #$fffffffc,d1                                      ;bug ?
000224E2 <AmiBlitz3.ab3@3772>   MOVE.l d1,destpointer
000224EC <AmiBlitz3.ab3@3775>   MOVE.l destpointer,codeend
000224F6 <AmiBlitz3.ab3@3776>   CMP.l #-1,chipend
000224FA <AmiBlitz3.ab3@3777>   BNE 'l31
00022504 <AmiBlitz3.ab3@3778>   MOVE.l destpointer,chipend
0002250A <AmiBlitz3.ab3@3781>   MOVE.l destpointer,d1
0002250C <AmiBlitz3.ab3@3782>   ADDQ.l #1,d1
00022512 <AmiBlitz3.ab3@3783>   AND.l #$fffffffe,d1                                     ;new evenexit
00022518 <AmiBlitz3.ab3@3784>   MOVE.l d1,destpointer
0002251C <AmiBlitz3.ab3@3787>   MOVE.b debugmode(PC),D1
00022520 <AmiBlitz3.ab3@3788>    BEQ.b 'nodb
00022524 <AmiBlitz3.ab3@3790>    BSR.w debugstuff
00022528 <AmiBlitz3.ab3@3791>   MOVE.w #$C300,D1        ;#finalscheck,
0002252E <AmiBlitz3.ab3@3792>    JSR Atokejsr
00022532 <AmiBlitz3.ab3@3794>    BSR.w debugstuff
00022536 <AmiBlitz3.ab3@3795>   MOVE.l eopcode(PC),D1
0002253C <AmiBlitz3.ab3@3796>    JSR writelong
00022540 <AmiBlitz3.ab3@3797>   MOVE.l lastcontlink(PC),D1
00022544 <AmiBlitz3.ab3@3798>    BEQ.b 'nocl
00022546 <AmiBlitz3.ab3@3799>   MOVEA.l D1,A0
0002254A <AmiBlitz3.ab3@3800>   CLR.w $6(A0)
00022554 <AmiBlitz3.ab3@3807>   MOVE.l destpointer,endop                                ;where end goes...
0002255A <AmiBlitz3.ab3@3809>   TST.w blitzmode
0002255E <AmiBlitz3.ab3@3810>   BEQ.w 'nobl
00022562 <AmiBlitz3.ab3@3811>   BSR.w do_AMIGA                                          ;back to amiga if in blitz!
00022568 <AmiBlitz3.ab3@3814>   TST.w intsused
0002256C <AmiBlitz3.ab3@3815>   BEQ.b 'noints
00022570 <AmiBlitz3.ab3@3816>   MOVE.w #$C105,D1                                        ;interupts off!
00022576 <AmiBlitz3.ab3@3817>   JSR tokejsr2
0002257A <AmiBlitz3.ab3@3820>   BSR.w calcstatic
00022580 <AmiBlitz3.ab3@3821>   MOVE.w D4,numstatic
00022586 <AmiBlitz3.ab3@3822>   MOVE.l D3,staticdata
0002258A <AmiBlitz3.ab3@3823>    BSR.w calcmaxs
00022590 <AmiBlitz3.ab3@3825>   TST.l tokeslist
00022594 <AmiBlitz3.ab3@3826>    BEQ.b 'skipjsrs
0002259A <AmiBlitz3.ab3@3828>   MOVE.w gotocode,D1                                       ;jmp!
000225A0 <AmiBlitz3.ab3@3829>    JSR writeword
000225AA <AmiBlitz3.ab3@3830>   MOVE.l destpointer,endjmpat
000225AE <AmiBlitz3.ab3@3831>    BSR.w addoff
000225B4 <AmiBlitz3.ab3@3832>    JSR writelong                                           
000225B8 <AmiBlitz3.ab3@3834>    BSR.w fixjsrs                                         ;has to be done before finits!
000225BE <AmiBlitz3.ab3@3838>   TST.w dontwrite_nomemleft
000225C2 <AmiBlitz3.ab3@3839>    BNE.b 'skipjsrs
000225C6 <AmiBlitz3.ab3@3840>   MOVEA.l endjmpat(PC),A4
000225CC <AmiBlitz3.ab3@3841>   MOVE.l destpointer,(A4)
000225D2 <AmiBlitz3.ab3@3845>   TST.b returncode
000225D6 <AmiBlitz3.ab3@3846>   BEQ 'l2
000225DA <AmiBlitz3.ab3@3847>   MOVE.w #$2e80,d1
000225E0 <AmiBlitz3.ab3@3848>   JSR writeword
000225E6 <AmiBlitz3.ab3@3852>   JSR makefinits
000225EC <AmiBlitz3.ab3@3854>   TST.b returncode
000225F0 <AmiBlitz3.ab3@3855>   BEQ 'l3
000225F4 <AmiBlitz3.ab3@3856>   MOVE.w #$4e75,d1
000225FA <AmiBlitz3.ab3@3857>   JSR writeword
000225FE <AmiBlitz3.ab3@3858>  BRA 'l1
00022604 <AmiBlitz3.ab3@3862>   MOVE.l #$70004E75,D1
0002260A <AmiBlitz3.ab3@3863>   JSR writelong                                            ;write moveq #0,d0:rts
00022610 <AmiBlitz3.ab3@3866>   JSR makeinits
00022614 <AmiBlitz3.ab3@3867>   BSR.w asmfixer
00022618 <AmiBlitz3.ab3@3869>   BSR.w close_compilewin
0002261C <AmiBlitz3.ab3@3870> BRA.w call_setpointernormal
00022622 <AmiBlitz3.ab3@3873> JUMP_do_runerrson JMP do_runerrson
00022624 <AmiBlitz3.ab3@3877> eopcode:    Dc.b $70,$03                                   ;MOVEQ #$03,D0
00022626 <AmiBlitz3.ab3@3878>             Dc.b $4E,$40                                   ;TRAP  #00
0002262A <AmiBlitz3.ab3@3880> endjmpat:   Ds.l 1
00022630 <AmiBlitz3.ab3@3884>   MOVEA.l newtype_string,A2
00022636 <AmiBlitz3.ab3@3885>   MOVE.l #MaxByte,D0                                       ;move.l #$ff,d0 org source
0002263A <AmiBlitz3.ab3@3888>     CMPA.w #$0,A2
0002263E <AmiBlitz3.ab3@3889>      BEQ.w 'done
00022642 <AmiBlitz3.ab3@3890>     CMP.l $4(A2),D0
00022646 <AmiBlitz3.ab3@3891>      BNE.w 'next
0002264E <AmiBlitz3.ab3@3892>     MOVE.w $8(A2),linenumat+2                              ;type not found  ;move 8(a2),linenumat org source
00022652 <AmiBlitz3.ab3@3893>  BRA.w notypeerr
00022654 <AmiBlitz3.ab3@3896>     MOVEA.l (A2),A2
00022658 <AmiBlitz3.ab3@3897>  BRA.w 'loop
0002265A <AmiBlitz3.ab3@3900> RTS
00022660 <AmiBlitz3.ab3@3904>   LEA labelbase,A2
00022662 <AmiBlitz3.ab3@3908>   MOVE.l (A2),D0                                           ;testlabels
00022666 <AmiBlitz3.ab3@3909>    BEQ.w 'done
00022668 <AmiBlitz3.ab3@3910>   MOVEA.l D0,A2
0002266C <AmiBlitz3.ab3@3911>   MOVE.l $4(A2),D0
00022670 <AmiBlitz3.ab3@3912>   BTST #$0,D0
00022674 <AmiBlitz3.ab3@3913>    BNE.w 'loop
00022678 <AmiBlitz3.ab3@3914>   MOVE.l $8(A2),D0
0002267C <AmiBlitz3.ab3@3915>    BNE.w 'loop
00022684 <AmiBlitz3.ab3@3916>   MOVE.w $10(A2),linenumat+2
00022686 <AmiBlitz3.ab3@3917>   MOVEQ #0,d0
0002268A <AmiBlitz3.ab3@3918>   MOVE.b $12(a2),d0
00022692 <AmiBlitz3.ab3@3919>   MOVE.w 0(a2,d0),linenumat
00022698 <AmiBlitz3.ab3@3920>  JMP nolaberr                                               ;label not found
0002269E <AmiBlitz3.ab3@3923>   MOVE.l concomsp,D0
000226A4 <AmiBlitz3.ab3@3924>   CMP.l #concomstack,D0
000226A8 <AmiBlitz3.ab3@3925>    BNE.w chxerr4
000226AE <AmiBlitz3.ab3@3926>   MOVE.w connest,D1
000226B2 <AmiBlitz3.ab3@3927>    BNE.w chxerr4
000226B4 <AmiBlitz3.ab3@3931>   MOVE.l D1,-(A7)
000226BA <AmiBlitz3.ab3@3932>   MOVE.l firstsel,D1
000226BE <AmiBlitz3.ab3@3933>    BNE.w 'err1
000226C4 <AmiBlitz3.ab3@3934>   MOVE.l firstrep,D1
000226C8 <AmiBlitz3.ab3@3935>    BNE.w 'err2
000226CE <AmiBlitz3.ab3@3936>   MOVE.w intstring,D1
000226D2 <AmiBlitz3.ab3@3937>    BNE.w 'err3
000226D6 <AmiBlitz3.ab3@3938>   MOVE.l 4(a7),d1
000226DC <AmiBlitz3.ab3@3939>   MOVE.w proceduremode,D1
000226E0 <AmiBlitz3.ab3@3940>    BNE.w 'err6
000226E6 <AmiBlitz3.ab3@3941>   MOVE.l firstiff,d1
000226EA <AmiBlitz3.ab3@3942>    BNE 'err5
000226F0 <AmiBlitz3.ab3@3943>   MOVE.l firstfor,D1
000226F4 <AmiBlitz3.ab3@3944>    BNE.w 'err7
000226F6 <AmiBlitz3.ab3@3945>   MOVE.l (A7)+,D1
000226F8 <AmiBlitz3.ab3@3946>  RTS
00022702 <AmiBlitz3.ab3@3949>   MOVE.l sellineat,linenumat
00022708 <AmiBlitz3.ab3@3950>  JMP selerrz
00022712 <AmiBlitz3.ab3@3953>   MOVE.l replineat,linenumat
00022718 <AmiBlitz3.ab3@3954>  JMP unterr3
00022722 <AmiBlitz3.ab3@3957>   MOVE.l intlineat,linenumat
00022728 <AmiBlitz3.ab3@3958>  JMP interr2
00022732 <AmiBlitz3.ab3@3961>   MOVE.l iflineat,linenumat
00022738 <AmiBlitz3.ab3@3962>  JMP noenderr
00022742 <AmiBlitz3.ab3@3965>   MOVE.l prolineat,linenumat
00022748 <AmiBlitz3.ab3@3966>  JMP nopenderr
00022752 <AmiBlitz3.ab3@3969>   MOVE.l forlineat,linenumat
00022758 <AmiBlitz3.ab3@3970> JMP nonexterr
00022762 <AmiBlitz3.ab3@3974>   MOVE.l ciflineat,linenumat
00022768 <AmiBlitz3.ab3@3975> JMP nocenderr
00022772 <AmiBlitz3.ab3@3979>   MOVE.l data1,maxsat
00022774 <AmiBlitz3.ab3@3980>   MOVEQ.l #$00,D4
0002277A <AmiBlitz3.ab3@3981>   MOVEA.l libpointer,A2
0002277E <AmiBlitz3.ab3@3984>     CMPA.w #$0,A2
00022782 <AmiBlitz3.ab3@3985>      BEQ.w 'done
00022786 <AmiBlitz3.ab3@3986>     TST.w $C(A2)
0002278A <AmiBlitz3.ab3@3987>      BPL.w 'next
0002278E <AmiBlitz3.ab3@3988>     MOVE.l $12(A2),D0
00022792 <AmiBlitz3.ab3@3989>     TST.w -$2(A2,D0.L)
00022796 <AmiBlitz3.ab3@3990>      BEQ.w 'next
00022798 <AmiBlitz3.ab3@3992>     ADDQ.w #1,D4
0002279C <AmiBlitz3.ab3@3993>     MOVE.w -$6(A2,D0.L),D1
000227A0 <AmiBlitz3.ab3@3994>     BSR.w pokedata1
000227A2 <AmiBlitz3.ab3@3995>     MOVEQ.l #$01,D1
000227A6 <AmiBlitz3.ab3@3996>     MOVE.w -$2(A2,D0.L),D2
000227A8 <AmiBlitz3.ab3@3997>     LSL.w D2,D1
000227AC <AmiBlitz3.ab3@3998>     MULU -$4(A2,D0.L),D1                                   ;write objectspacesize
000227B0 <AmiBlitz3.ab3@3999>     BSR.w writedatalong
000227B2 <AmiBlitz3.ab3@4002>     MOVEA.l (A2),A2
000227B6 <AmiBlitz3.ab3@4003>  BRA.w 'loop
000227BC <AmiBlitz3.ab3@4006>   MOVE.w D4,maxsused
000227C0 <AmiBlitz3.ab3@4007>    BEQ.w 'done2
000227C4 <AmiBlitz3.ab3@4008>   MOVE.w #$FFFA,D1       ;was #65530    ;use memlib                                  ;;use memlib
000227C8 <AmiBlitz3.ab3@4009> BRA.w uselib
000227CA <AmiBlitz3.ab3@4012> RTS
000227D0 <AmiBlitz3.ab3@4018>    MOVE.l a7,stackaddr
000227D4 <AmiBlitz3.ab3@4020>    BSR.w compile_term
000227D8 <AmiBlitz3.ab3@4021>    BSR.w reget
000227DC <AmiBlitz3.ab3@4022>    BNE.w illeolerr
000227E2 <AmiBlitz3.ab3@4024>    TST.w dontwrite_nomemleft
000227E6 <AmiBlitz3.ab3@4025>    BNE 'l1
000227EC <AmiBlitz3.ab3@4026>    TST.l stacktrack
000227F0 <AmiBlitz3.ab3@4027>    BNE errormsg_stack
000227F4 <AmiBlitz3.ab3@4031>    CMP.w #-$7FDE,D0            ; was #$8000+34
000227F8 <AmiBlitz3.ab3@4032>    BNE.w 'notelse
000227FE <AmiBlitz3.ab3@4033>    JSR do_else2
00022802 <AmiBlitz3.ab3@4034>  BRA.w compile_line
00022804 <AmiBlitz3.ab3@4037>   TST.w D0
00022808 <AmiBlitz3.ab3@4038>   BNE.w compile_line
0002280E <AmiBlitz3.ab3@4044>   MOVE.l firstiff,D0
00022812 <AmiBlitz3.ab3@4045>    BEQ.w 'done
00022814 <AmiBlitz3.ab3@4046>   MOVEA.l D0,A0
00022818 <AmiBlitz3.ab3@4047>   MOVE.w $C(A0),D1
0002281C <AmiBlitz3.ab3@4048>    BPL.w 'done
00022820 <AmiBlitz3.ab3@4052>   BCLR #$F,D1
00022826 <AmiBlitz3.ab3@4053>    JSR doendif2
0002282C <AmiBlitz3.ab3@4054>    JSR freetheifz
00022830 <AmiBlitz3.ab3@4055> BRA.w 'unthen
00022832 <AmiBlitz3.ab3@4058> RTS
00022838 <AmiBlitz3.ab3@4062>   LEA lastgloballabel,A0
0002283A <AmiBlitz3.ab3@4063>   TST.b (A0)
0002283E <AmiBlitz3.ab3@4064>   BEQ.w nolocerr
00022844 <AmiBlitz3.ab3@4065>   LEA ptr_parameterstore,A1
00022846 <AmiBlitz3.ab3@4066>   MOVEQ.l #$00,D2
00022848 <AmiBlitz3.ab3@4069>   ADDQ.w #1,D2
0002284A <AmiBlitz3.ab3@4070>   MOVE.b (A0)+,(A1)+
0002284E <AmiBlitz3.ab3@4071>    BNE.w 'loop
00022854 <AmiBlitz3.ab3@4072>   MOVE.b #$27,-$1(A1)
00022856 <AmiBlitz3.ab3@4073>   MOVE.w D2,-(A7)
0002285C <AmiBlitz3.ab3@4074>    JSR makename4
0002285E <AmiBlitz3.ab3@4075>   CMP.w (A7)+,D2
00022862 <AmiBlitz3.ab3@4076>    BEQ.w syntaxerr
00022864 <AmiBlitz3.ab3@4077>    TST.w d0
00022868 <AmiBlitz3.ab3@4078>    BPL 'done
00022870 <AmiBlitz3.ab3@4079>    MOVE.w #$3a,lastchar
00022872 <AmiBlitz3.ab3@4080>    SUBQ.l #2,a5
00022874 <AmiBlitz3.ab3@4083> RTS
0002287E <AmiBlitz3.ab3@4087>   MOVE.l #forthstack,forthsp
00022888 <AmiBlitz3.ab3@4088>   MOVE.l #precstack,precsp
0002288A <AmiBlitz3.ab3@4089> RTS
0002288C <AmiBlitz3.ab3@4096>   MOVEQ.l #$00,D4
000228B6 <AmiBlitz3.ab3@4099>   !basic
000228F8 <AmiBlitz3.ab3@4100> 
00022908 <AmiBlitz3.ab3@4102>   If (c_abort = 1)           ; check if set
0002290A <AmiBlitz3.ab3@4103>     MOVEQ.l #-$01,d4
00022910 <AmiBlitz3.ab3@4104>     MOVE.w D4,stopit
0002292E <AmiBlitz3.ab3@4105>     !asm
00022932 <AmiBlitz3.ab3@4106>     BRA 'skip
00022950 <AmiBlitz3.ab3@4108>   !asm
00022952 <AmiBlitz3.ab3@4109>   MOVEQ.l #$00,D6
00022954 <AmiBlitz3.ab3@4110>   MOVEQ.l #$00,D7                                          ; clr Z-Flag for beq.b in chkstop_chk
00022956 <AmiBlitz3.ab3@4114> RTS
0002295A <AmiBlitz3.ab3@4118>   MOVE.w stopit(PC),D0
0002295E <AmiBlitz3.ab3@4119>   BEQ 'chk
00022964 <AmiBlitz3.ab3@4121>   SUBQ.w #1,stopit
00022966 <AmiBlitz3.ab3@4126>  RTS
0002296E <AmiBlitz3.ab3@4130>   MOVE.w #2000,stopit
00022972 <AmiBlitz3.ab3@4132>   BSR.w chkrealstop
00022976 <AmiBlitz3.ab3@4133>   BEQ.b 'rts
0002297A <AmiBlitz3.ab3@4136>   BSR.w close_compilewin
0002297E <AmiBlitz3.ab3@4137>   BSR.w call_setpointernormal
00022984 <AmiBlitz3.ab3@4139>   MOVEA.l errstack,A7
0002298A <AmiBlitz3.ab3@4140>   MOVEA.l errcont,A0
00022992 <AmiBlitz3.ab3@4141>   MOVE.w #-1,anyerrs
00022994 <AmiBlitz3.ab3@4142> JMP (A0)
00022998 <AmiBlitz3.ab3@4145> d_pc:           Ds.l 1
0002299C <AmiBlitz3.ab3@4146> d_bigpc:        Ds.l 1
0002299E <AmiBlitz3.ab3@4147> d_nomemleft:    Ds.w 1
000229A2 <AmiBlitz3.ab3@4148> cont_pc:        Ds.l 1
000229A6 <AmiBlitz3.ab3@4149> cont_pc2:       Ds.l 1
000229AA <AmiBlitz3.ab3@4150> lastcontlink:   Ds.l 1
000229AE <AmiBlitz3.ab3@4154>   ORI.w #$4E40,D1
000229B2 <AmiBlitz3.ab3@4155> BRA.w JUMP_writeword
000229B8 <AmiBlitz3.ab3@4159>   TST.b debugmode
000229BC <AmiBlitz3.ab3@4160>   BEQ.w debugstuffa_rts
000229C2 <AmiBlitz3.ab3@4171>   TST.w dirmode                                            ;or while in direct mode...
000229C6 <AmiBlitz3.ab3@4172>    BNE debugstuffa_rts
000229D0 <AmiBlitz3.ab3@4174>   MOVE.l destpointer,d_pc
000229DA <AmiBlitz3.ab3@4175>   MOVE.l bigpc,d_bigpc
000229E4 <AmiBlitz3.ab3@4176>   MOVE.w dontwrite_nomemleft,d_nomemleft
000229E8 <AmiBlitz3.ab3@4178>   MOVEM.l D0-D1,-(A7)
000229EA <AmiBlitz3.ab3@4180>   MOVEQ.l #$01,D1
000229EE <AmiBlitz3.ab3@4181>    BSR.w writetrap                                         ;write the adress to sourceline
000229F4 <AmiBlitz3.ab3@4185>    MOVE.l destpointer,D0
000229FA <AmiBlitz3.ab3@4186>   MOVE.l cont_pc,D1
00022A00 <AmiBlitz3.ab3@4187>   MOVE.l D0,cont_pc
00022A06 <AmiBlitz3.ab3@4188>   MOVE.l D1,cont_pc2
00022A0A <AmiBlitz3.ab3@4189>    BEQ.b 'skip
00022A10 <AmiBlitz3.ab3@4191>   TST.w dontwrite_nomemleft
00022A14 <AmiBlitz3.ab3@4192>    BNE.b 'skip
00022A16 <AmiBlitz3.ab3@4194>   MOVEA.l D1,A4
00022A18 <AmiBlitz3.ab3@4195>   SUB.l A4,D0
00022A1C <AmiBlitz3.ab3@4196>   MOVE.w D0,$6(A4)
00022A22 <AmiBlitz3.ab3@4197>   MOVE.l A4,lastcontlink
00022A28 <AmiBlitz3.ab3@4201>   TST.w ininclude
00022A2E <AmiBlitz3.ab3@4203>   TST.w makeexec
00022A32 <AmiBlitz3.ab3@4204>   BEQ 'l1
00022A38 <AmiBlitz3.ab3@4205>   TST.w exdebug
00022A3C <AmiBlitz3.ab3@4206>   BEQ 'noinc
00022A40 <AmiBlitz3.ab3@4209>   MOVEM.l a0-a1/d2/d3,-(a7)                                ;write source for includes
00022A46 <AmiBlitz3.ab3@4210>   MOVE.l data1,d1
00022A4C <AmiBlitz3.ab3@4211>   TST.b firsttime
00022A50 <AmiBlitz3.ab3@4212>   BNE 'nofirst
00022A58 <AmiBlitz3.ab3@4213>   MOVE.b #1,firsttime
00022A5E <AmiBlitz3.ab3@4214>   MOVE.l #"DuCk",d1                                        ; to found from debugger the code start
00022A64 <AmiBlitz3.ab3@4215>   JSR writedatalong
00022A6A <AmiBlitz3.ab3@4216>   MOVE.l #"AmiB",d1
00022A70 <AmiBlitz3.ab3@4217>   JSR writedatalong
00022A76 <AmiBlitz3.ab3@4218>   MOVE.l destbufferstart,d1
00022A7C <AmiBlitz3.ab3@4219>   JSR writedatalong
00022A82 <AmiBlitz3.ab3@4220>   TST.w dontwrite_nomemleft
00022A86 <AmiBlitz3.ab3@4221>   BNE 'nohunk
00022A8C <AmiBlitz3.ab3@4222>   MOVE.l data1,d1
00022A8E <AmiBlitz3.ab3@4223>   SUBQ.l #4,d1
00022A94 <AmiBlitz3.ab3@4224>   SUB.l destbufferstart,d1
00022A96 <AmiBlitz3.ab3@4225>   MOVE.l d1,d2
00022A9C <AmiBlitz3.ab3@4226>   JSR addhunkoffset
00022AA2 <AmiBlitz3.ab3@4229>   MOVE.l destpointer,d2
00022AA8 <AmiBlitz3.ab3@4230>   MOVE.l data1,d1
00022AAE <AmiBlitz3.ab3@4233>   MOVE.l destpointer,d2
00022AB0 <AmiBlitz3.ab3@4234>   MOVE.l d1,d3
00022AB6 <AmiBlitz3.ab3@4235>   SUB.l destbufferstart,d1
00022ABC <AmiBlitz3.ab3@4236>   OR.l #$80000000,d1
00022AC2 <AmiBlitz3.ab3@4237>   JSR writelong
00022AC8 <AmiBlitz3.ab3@4238>   TST.w inmacro
00022ACC <AmiBlitz3.ab3@4239>   BEQ 'sc1
00022AD2 <AmiBlitz3.ab3@4240>   MOVE.l myline,a0
00022AD6 <AmiBlitz3.ab3@4242>  BRA 'inc2
00022ADC <AmiBlitz3.ab3@4245>   TST.w ininclude
00022AE0 <AmiBlitz3.ab3@4246>   BEQ 'inc
00022AE6 <AmiBlitz3.ab3@4247>   MOVE.l includesourceline,a0
00022AEA <AmiBlitz3.ab3@4248>  BRA 'inc2
00022AF0 <AmiBlitz3.ab3@4251>   MOVE.l sourceline,a0
00022AF4 <AmiBlitz3.ab3@4252>   LEA 9(a0),a0
00022AF6 <AmiBlitz3.ab3@4255>   MOVE.l d1,d2
00022AF8 <AmiBlitz3.ab3@4256>   MOVE.l A5,D1
00022AFA <AmiBlitz3.ab3@4257>   SUB.l a0,D1
00022B00 <AmiBlitz3.ab3@4258>   ADD.l #9,d1
00022B04 <AmiBlitz3.ab3@4259>   BSR.w JUMP_writeword
00022B0A <AmiBlitz3.ab3@4260>   CMP.l #9,d1
00022B0E <AmiBlitz3.ab3@4261>   BEQ 'pos1
00022B14 <AmiBlitz3.ab3@4262>   TST.w dontwrite_nomemleft
00022B18 <AmiBlitz3.ab3@4263>   BNE 'nopad
00022B1E <AmiBlitz3.ab3@4264>   MOVE.l lastsourceline,d1
00022B22 <AmiBlitz3.ab3@4265>   MOVE.l d1,-6(a4)
00022B26 <AmiBlitz3.ab3@4266>  BRA 'nopad
00022B2C <AmiBlitz3.ab3@4269>   MOVE.l d2,lastsourceline
00022B36 <AmiBlitz3.ab3@4270>    MOVE.l destpointer,lastdestpointer
00022B38 <AmiBlitz3.ab3@4271>    MOVEQ #0,d1
00022B3E <AmiBlitz3.ab3@4272>   MOVE.l data1,d2
00022B44 <AmiBlitz3.ab3@4273>   SUB.l destbufferstart,d2
00022B4A <AmiBlitz3.ab3@4274>   JSR writedatalong
00022B50 <AmiBlitz3.ab3@4275>   TST.w dontwrite_nomemleft
00022B54 <AmiBlitz3.ab3@4276>   BNE 'no2
00022B5A <AmiBlitz3.ab3@4277>   JSR addhunkoffset
00022B60 <AmiBlitz3.ab3@4280>   MOVE.l data1,d2
00022B66 <AmiBlitz3.ab3@4281>   SUB.l destbufferstart,d2
00022B6C <AmiBlitz3.ab3@4282>   JSR writedatalong
00022B72 <AmiBlitz3.ab3@4283>   TST.w dontwrite_nomemleft
00022B76 <AmiBlitz3.ab3@4284>   BNE 'no
00022B7C <AmiBlitz3.ab3@4285>   JSR addhunkoffset
00022B82 <AmiBlitz3.ab3@4286>   MOVE.l lastwritedat,a1
00022B88 <AmiBlitz3.ab3@4287>   CMP.l #0,a1
00022B8C <AmiBlitz3.ab3@4288>   BEQ 'no
00022B8E <AmiBlitz3.ab3@4289>   MOVE.l d3,(a1)
00022B96 <AmiBlitz3.ab3@4290>   MOVE.l prevwritedat,4(a1)
00022BA0 <AmiBlitz3.ab3@4291>   MOVE.l lastwritedat,prevwritedat
00022BA6 <AmiBlitz3.ab3@4294>   MOVE.l d3,lastwritedat
00022BA8 <AmiBlitz3.ab3@4295>   MOVEQ #4,d1
00022BAC <AmiBlitz3.ab3@4296>   BSR pokedata1b
00022BAE <AmiBlitz3.ab3@4299>   MOVE.b (a0)+,d1
00022BB2 <AmiBlitz3.ab3@4300>   BEQ 'done
00022BB6 <AmiBlitz3.ab3@4301>   BSR pokedata1b
00022BBA <AmiBlitz3.ab3@4302>  BRA 'loop
00022BBC <AmiBlitz3.ab3@4305>   MOVEQ #0,d1
00022BC0 <AmiBlitz3.ab3@4306>   BSR pokedata1b
00022BC6 <AmiBlitz3.ab3@4307>   MOVE.l data1,d1
00022BCA <AmiBlitz3.ab3@4308>   BTST #0,d1
00022BCE <AmiBlitz3.ab3@4309>   BEQ 'nopad
00022BD0 <AmiBlitz3.ab3@4310>   MOVEQ #0,d1
00022BD4 <AmiBlitz3.ab3@4311>   BSR pokedata1b
00022BD8 <AmiBlitz3.ab3@4314>   MOVEM.l (a7)+,a0-a1/d2/d3
00022BDC <AmiBlitz3.ab3@4315>  BRA 'noinc2
00022BE2 <AmiBlitz3.ab3@4319>   MOVE.l sourceline,D1
00022BE8 <AmiBlitz3.ab3@4320>   JSR writelong
00022BEA <AmiBlitz3.ab3@4321>   MOVE.l A5,D1
00022BF0 <AmiBlitz3.ab3@4322>   SUB.l sourceline,D1
00022BF6 <AmiBlitz3.ab3@4323>   JSR writeword
00022BF8 <AmiBlitz3.ab3@4326>   MOVEQ.l #$00,D1
00022BFE <AmiBlitz3.ab3@4327>   JSR writeword          ;next cont goes here!                                  ; was: BSR.w writeword
00022C02 <AmiBlitz3.ab3@4329>   MOVEM.l (A7)+,D0-D1
00022C04 <AmiBlitz3.ab3@4332> RTS
00022C0A <AmiBlitz3.ab3@4336>   TST.b debugmode                                          ;extern debug
00022C0E <AmiBlitz3.ab3@4337>    BEQ.b 'rts
00022C14 <AmiBlitz3.ab3@4338>   TST.b dirmode
00022C18 <AmiBlitz3.ab3@4339>   BNE 'rts
00022C22 <AmiBlitz3.ab3@4347>   MOVE.w d_nomemleft,dontwrite_nomemleft
00022C2C <AmiBlitz3.ab3@4348>   MOVE.l d_bigpc,bigpc
00022C36 <AmiBlitz3.ab3@4349>   MOVE.l d_pc,destpointer
00022C40 <AmiBlitz3.ab3@4350>   MOVE.l cont_pc2,cont_pc
00022C42 <AmiBlitz3.ab3@4353> RTS
00022C4C <AmiBlitz3.ab3@4358>   MOVE.l #forthstack,forthsp
00022C56 <AmiBlitz3.ab3@4359>   MOVE.l #precstack,precsp
00022C5C <AmiBlitz3.ab3@4360>   CLR.w regnum
00022C62 <AmiBlitz3.ab3@4361>   CLR.w nonew
00022C68 <AmiBlitz3.ab3@4362>   CLR.w sbasegot
00022C72 <AmiBlitz3.ab3@4363>   MOVE.w varcodelen,oldvcodelen
00022C78 <AmiBlitz3.ab3@4364>   CLR.w varcodelen
00022C80 <AmiBlitz3.ab3@4365>   MOVE.w #-1,lasta6
00022C82 <AmiBlitz3.ab3@4366> RTS
00022C88 <AmiBlitz3.ab3@4370>   TST.w linemode
00022C8C <AmiBlitz3.ab3@4371>   BMI.b 'skip
00022C90 <AmiBlitz3.ab3@4372>   BSR.w undodebug
00022C96 <AmiBlitz3.ab3@4373>   MOVE.w linemode,D1
00022C98 <AmiBlitz3.ab3@4374>   ADDQ.w #4,A7
00022C9A <AmiBlitz3.ab3@4375>   LSL.w #2,D1
00022CA0 <AmiBlitz3.ab3@4376>   LEA modetable,A0
00022CA4 <AmiBlitz3.ab3@4377>   MOVEA.l $0(A0,D1.W),A0
00022CA8 <AmiBlitz3.ab3@4378>   BSR.w reget
00022CAA <AmiBlitz3.ab3@4379>  JMP (A0)                                                   ;jumptokenroutine
00022CAC <AmiBlitz3.ab3@4382> RTS
00022CB4 <AmiBlitz3.ab3@4390>   MOVE.w #0,leaa0a0+2
00022CBA <AmiBlitz3.ab3@4391>   CLR.b nowdeclare
00022CC0 <AmiBlitz3.ab3@4392>   CLR.b notypecheck
00022CC6 <AmiBlitz3.ab3@4393>   CLR.l lasttoken
00022CCC <AmiBlitz3.ab3@4394>   CLR.b doimmediate
00022CD2 <AmiBlitz3.ab3@4395>   CLR.w vartype
00022CD8 <AmiBlitz3.ab3@4396>   CLR.w regnumfunc
00022CDE <AmiBlitz3.ab3@4397>   CLR.b optistring
00022CE4 <AmiBlitz3.ab3@4398>   CLR.b iniffcommand
00022CEA <AmiBlitz3.ab3@4399>   CLR.w instringon  ; new
00022CF0 <AmiBlitz3.ab3@4400>   CLR.b funccall
00022CF6 <AmiBlitz3.ab3@4401>   CLR.l currentfunccall
00022CFC <AmiBlitz3.ab3@4402>   CLR.l leftsidetype
00022D02 <AmiBlitz3.ab3@4403>   CLR.l rightsidetype
00022D08 <AmiBlitz3.ab3@4404>   CLR.w leftsideflagmask
00022D0E <AmiBlitz3.ab3@4405>   CLR.w rightsideflagmask
00022D14 <AmiBlitz3.ab3@4406>   CLR.b peekaddrsize
00022D1A <AmiBlitz3.ab3@4407>   CLR.b blitzparloop
00022D20 <AmiBlitz3.ab3@4408>   CLR.b funcparloop
00022D26 <AmiBlitz3.ab3@4409>   CLR.w parnum           ;7.2014
00022D2C <AmiBlitz3.ab3@4410>   TST.b debugmode
00022D30 <AmiBlitz3.ab3@4411>    BEQ 'fpu
00022D3A <AmiBlitz3.ab3@4417>   MOVE.b fpu,iee
00022D3E <AmiBlitz3.ab3@4418>   MOVE.w stopit(PC),D0
00022D42 <AmiBlitz3.ab3@4419>   BNE 'chkstop_chkb
00022D46 <AmiBlitz3.ab3@4421>   BSR.w chkstop                                          ; message here
00022D4C <AmiBlitz3.ab3@4425>   SUBQ.w #1,stopit
00022D50 <AmiBlitz3.ab3@4429>   BSR.w findmacro                                          ;macro
00022D56 <AmiBlitz3.ab3@4491>   TST.b debugmode
00022D5A <AmiBlitz3.ab3@4492>    BEQ.s 'l10
00022D60 <AmiBlitz3.ab3@4493>   TST.b exdebug
00022D64 <AmiBlitz3.ab3@4494>   BEQ 'l10a
00022D66 <AmiBlitz3.ab3@4495>   MOVE.w (a5),d0
00022D6A <AmiBlitz3.ab3@4496>   CMP.w #$8025,d0
00022D6E <AmiBlitz3.ab3@4497>    BEQ 'l10
00022D72 <AmiBlitz3.ab3@4500>   BSR.w debugstuffa                                         ;insert runtimecode debugcode
00022D76 <AmiBlitz3.ab3@4504>   BSR.w get1bytemain                                       ;gettokenmain
00022D7A <AmiBlitz3.ab3@4505>    BEQ.w undodebug
00022D7E <AmiBlitz3.ab3@4506>   CMP.w #$002b,d0                                            ;check for + cast sign
00022D82 <AmiBlitz3.ab3@4507>     BNE 'lb2
00022D86 <AmiBlitz3.ab3@4508>     BSR.w get1bytemain
00022D8E <AmiBlitz3.ab3@4509>     MOVE.b #1,notypecheck
00022D98 <AmiBlitz3.ab3@4520>   MOVE.l #forthstack,forthsp
00022DA2 <AmiBlitz3.ab3@4521>   MOVE.l #precstack,precsp
00022DA8 <AmiBlitz3.ab3@4522>   CLR.w regnum
00022DAE <AmiBlitz3.ab3@4523>   CLR.w nonew
00022DB4 <AmiBlitz3.ab3@4524>   CLR.w sbasegot
00022DBE <AmiBlitz3.ab3@4525>   MOVE.w varcodelen,oldvcodelen
00022DC4 <AmiBlitz3.ab3@4527>   CLR.w varcodelen
00022DCC <AmiBlitz3.ab3@4528>   MOVE.w #$FFFF,lasta6
00022DD0 <AmiBlitz3.ab3@4531>   BSR.w smode
00022DD2 <AmiBlitz3.ab3@4534>   TST.w D0                 ; was behind cmp ... and befor handleascii in org source
00022DD6 <AmiBlitz3.ab3@4535>   BMI.w get_tokencode      ; "
00022DDA <AmiBlitz3.ab3@4537>   CMP.w #$2E,D0            ;'.'
00022DDE <AmiBlitz3.ab3@4538>    BEQ.w handlemouse                                         ;shortlist
00022DE2 <AmiBlitz3.ab3@4539>   CMP.w #"#",D0
00022DE6 <AmiBlitz3.ab3@4540>    BEQ.w handleconst                                         ;constant found
00022DEA <AmiBlitz3.ab3@4541>   CMP.w #$27,D0            ;'''  ; was #loclabch
00022DEE <AmiBlitz3.ab3@4542>    BEQ.w handlelocal                                            ;local label
00022DF4 <AmiBlitz3.ab3@4545>   MOVE.l A5,letstart
00022DFA <AmiBlitz3.ab3@4546>   JSR getparameter
00022DFE <AmiBlitz3.ab3@4547>   BSR.w reget
00022E02 <AmiBlitz3.ab3@4548>    BEQ.w handlelabel                                         ;label found
00022E06 <AmiBlitz3.ab3@4549>   CMP.w #$7B,D0         ;'{'
00022E0A <AmiBlitz3.ab3@4550>    BEQ.w handleproc
00022E0C <AmiBlitz3.ab3@4552>   TST.w d0
00022E10 <AmiBlitz3.ab3@4553>    BPL 'll1
00022E16 <AmiBlitz3.ab3@4554>   TST.b newsyntax
00022E1A <AmiBlitz3.ab3@4555>    BEQ 'll1
00022E20 <AmiBlitz3.ab3@4556>   LEA allowtab,a0
00022E22 <AmiBlitz3.ab3@4557>   MOVEQ #0,d1
00022E24 <AmiBlitz3.ab3@4558>   MOVE.b d0,d1
00022E28 <AmiBlitz3.ab3@4559>   TST.b 0(a0,d1.w)
00022E2C <AmiBlitz3.ab3@4560>    BNE 'll1
00022E2E <AmiBlitz3.ab3@4561>   SUBQ.l #2,a5
00022E36 <AmiBlitz3.ab3@4562>   MOVE.w #":",lastchar                                     ;no doublepoint
00022E3A <AmiBlitz3.ab3@4563>  BRA handlelabel
00022E42 <AmiBlitz3.ab3@4566>   CMP.l #"equ ",-1(a5)
00022E46 <AmiBlitz3.ab3@4567>    BEQ 'll4
00022E4E <AmiBlitz3.ab3@4568>   CMP.l #"EQU ",-1(a5)
00022E52 <AmiBlitz3.ab3@4569>    BNE 'll2
00022E54 <AmiBlitz3.ab3@4572>   ADDQ.l #2,a5
00022E58 <AmiBlitz3.ab3@4573>   BSR.w findlabel2
00022E5C <AmiBlitz3.ab3@4574>   BEQ.w 'lf1
00022E60 <AmiBlitz3.ab3@4575>   BSR.w addlabelhash
00022E68 <AmiBlitz3.ab3@4576>   MOVE.l #$1,$4(A2)
00022E70 <AmiBlitz3.ab3@4579>   CMPI.l #$1,$4(A2)
00022E74 <AmiBlitz3.ab3@4580>    BNE.w illconerr
00022E78 <AmiBlitz3.ab3@4581>   BSR get1bytemain
00022E7A <AmiBlitz3.ab3@4582>   MOVE.l A2,-(A7)
00022E7C <AmiBlitz3.ab3@4593>   SUBQ.l #1,a5
00022E7E <AmiBlitz3.ab3@4596>   SUBQ.l #1,a5
00022E84 <AmiBlitz3.ab3@4597>   JSR evalconst2
00022E86 <AmiBlitz3.ab3@4598>   MOVEA.l (A7)+,A2
00022E8A <AmiBlitz3.ab3@4599>   MOVE.l D3,$8(A2)
00022E8C <AmiBlitz3.ab3@4600>   RTS
00022E90 <AmiBlitz3.ab3@4601>   BSR get1bytemain
00022E98 <AmiBlitz3.ab3@4604>   CMP.l #"SET ",-1(a5)
00022E9C <AmiBlitz3.ab3@4605>   BNE 'll3
00022EA0 <AmiBlitz3.ab3@4606>  BRA 'll4
00022EA6 <AmiBlitz3.ab3@4610> JMP dolet2
00022EAA <AmiBlitz3.ab3@4614>   CMP.w #-$7FDE,D0    ; was #$8000+34,
00022EAE <AmiBlitz3.ab3@4615>   BEQ.w get_tokencode
00022EB2 <AmiBlitz3.ab3@4616> BRA.w undodebug       ;!*!*!
00022EB6 <AmiBlitz3.ab3@4620>   BSR.w undodebug    ;!***!
00022EBA <AmiBlitz3.ab3@4621>   BSR.w createlab
00022EBE <AmiBlitz3.ab3@4622> BRA.w handlelab2
00022EC2 <AmiBlitz3.ab3@4626>   BSR.w get1bytemain
00022EC6 <AmiBlitz3.ab3@4627>    BEQ.w handleeol     ;syntaxerr
00022ECA <AmiBlitz3.ab3@4628>   CMP.w #"'",D0        ; was #loclabch
00022ECE <AmiBlitz3.ab3@4629>    BEQ.w handlelocal
00022ED2 <AmiBlitz3.ab3@4630>    BSR.w makename2
00022ED4 <AmiBlitz3.ab3@4632>    TST.w d0
00022ED8 <AmiBlitz3.ab3@4633>    BPL handlelabel
00022EDA <AmiBlitz3.ab3@4634>    SUBQ.l #2,a5
00022EE2 <AmiBlitz3.ab3@4635>    MOVE.w #":",lastchar
00022EE6 <AmiBlitz3.ab3@4636> BRA handlelabel                                              ;????
00022EEA <AmiBlitz3.ab3@4643>   BSR.w undodebug      ;!***!
00022EF0 <AmiBlitz3.ab3@4645>   LEA ptr_parameterstore,A0
00022EF6 <AmiBlitz3.ab3@4646>   LEA lastgloballabel,A1
00022EF8 <AmiBlitz3.ab3@4649>   MOVE.b (A0)+,(A1)+
00022EFC <AmiBlitz3.ab3@4650>    BNE.w 'coplab
00022F00 <AmiBlitz3.ab3@4654>   BSR.w findlabel2
00022F04 <AmiBlitz3.ab3@4655>    BEQ.w 'found
00022F08 <AmiBlitz3.ab3@4657>    BSR.w addlabelhash
00022F0C <AmiBlitz3.ab3@4660>   CLR.l $4(A2)                ;no refs
00022F14 <AmiBlitz3.ab3@4661>   MOVE.l destpointer,$8(A2)   ;pc of label.
00022F1C <AmiBlitz3.ab3@4666>   MOVE.w procnum,$10(A2)
00022F1E <AmiBlitz3.ab3@4667>  RTS
00022F22 <AmiBlitz3.ab3@4670>   MOVE.l $4(A2),D0
00022F26 <AmiBlitz3.ab3@4671>   BTST #$0,D0
00022F2A <AmiBlitz3.ab3@4672>    BNE.w illlaberr
00022F30 <AmiBlitz3.ab3@4674>   TST.w pass
00022F34 <AmiBlitz3.ab3@4677>   MOVE.l $8(A2),D0
00022F38 <AmiBlitz3.ab3@4678>    BNE.w duplaberr
00022F40 <AmiBlitz3.ab3@4679>   MOVE.w procnum,$10(A2)
00022F44 <AmiBlitz3.ab3@4683>   MOVEA.l $4(A2),A3      ;start of refs list
00022F4A <AmiBlitz3.ab3@4684>   MOVEA.l _execbase,A6
00022F4E <AmiBlitz3.ab3@4687>   CMPA.w #$0,A3
00022F52 <AmiBlitz3.ab3@4688>    BEQ.w 'done
00022F56 <AmiBlitz3.ab3@4690>     MOVE.l $4(A2),D1
00022F5A <AmiBlitz3.ab3@4691>     BTST #$0,D1
00022F5E <AmiBlitz3.ab3@4692>     BNE.w illlaberr
00022F62 <AmiBlitz3.ab3@4694>   MOVE.w $8(A3),D1
00022F66 <AmiBlitz3.ab3@4695>   CMP.w $10(A2),D1
00022F6A <AmiBlitz3.ab3@4696>    BEQ.w 'isok
00022F70 <AmiBlitz3.ab3@4698>    TST.b newsyntax
00022F74 <AmiBlitz3.ab3@4699>    BEQ 'l1
00022F78 <AmiBlitz3.ab3@4700>  BRA.w 'isok                                            ;label context out of range fix
00022F80 <AmiBlitz3.ab3@4706>   MOVE.w $A(A3),linenumat+2                                ;move 10(a3),linenumat org source
00022F84 <AmiBlitz3.ab3@4707>  BRA.w referr
00022F8A <AmiBlitz3.ab3@4710>   MOVE.w dontwrite_nomemleft,D1
00022F8E <AmiBlitz3.ab3@4711>    BNE.w 'isaskip
00022F92 <AmiBlitz3.ab3@4712>   MOVEA.l $4(A3),A1
00022F98 <AmiBlitz3.ab3@4713>   BTST #$0,$7(A3)
00022F9C <AmiBlitz3.ab3@4714>    BEQ.w 'pcref
00022F9E <AmiBlitz3.ab3@4718>   SUBQ.w #1,A1
00022FA4 <AmiBlitz3.ab3@4719>   MOVE.l data2,(A1)
00022FA8 <AmiBlitz3.ab3@4720>  BRA.w 'isaskip
00022FAE <AmiBlitz3.ab3@4723>   MOVE.l destpointer,(A1)
00022FB0 <AmiBlitz3.ab3@4726>   MOVEA.l A3,A1
00022FB2 <AmiBlitz3.ab3@4727>   MOVEA.l (A3),A3
00022FB6 <AmiBlitz3.ab3@4728>   MOVE.l A3,$4(A2)     ;new first.
00022FB8 <AmiBlitz3.ab3@4729>   MOVEQ.l #$0C+2,D0    ; was #12
00022FBE <AmiBlitz3.ab3@4732>   MOVE.l mempool,a0
00022FC4 <AmiBlitz3.ab3@4733>   MOVEA.l _execbase,A6
00022FC8 <AmiBlitz3.ab3@4734>   JSR _FreePooled(A6)
00022FCC <AmiBlitz3.ab3@4736>  BRA.w 'floop
00022FD6 <AmiBlitz3.ab3@4742>    MOVE.l #forthstack,forthsp
00022FE0 <AmiBlitz3.ab3@4743>   MOVE.l #precstack,precsp
00022FE4 <AmiBlitz3.ab3@4745>    BSR.w getparameter2
00022FE8 <AmiBlitz3.ab3@4749>   BSR.w findlabel2
00022FEC <AmiBlitz3.ab3@4750>    BEQ.w 'cfound
00022FF0 <AmiBlitz3.ab3@4751>    BSR.w addlabelhash
00022FF8 <AmiBlitz3.ab3@4752>   MOVE.l #$1,$4(A2)
00022FFC <AmiBlitz3.ab3@4753>  BRA.w 'cn
00023004 <AmiBlitz3.ab3@4756>   CMPI.l #$1,$4(A2)
00023008 <AmiBlitz3.ab3@4757>    BNE.w illconerr
0002300C <AmiBlitz3.ab3@4768>   CMP.w #$3D,D0         ;'='
00023010 <AmiBlitz3.ab3@4769>   BEQ.w 'asscon
00023012 <AmiBlitz3.ab3@4770>  RTS
00023014 <AmiBlitz3.ab3@4773>   MOVE.l A2,-(A7)
0002301A <AmiBlitz3.ab3@4774>   JSR evalconst2
0002301C <AmiBlitz3.ab3@4775>   MOVEA.l (A7)+,A2
00023020 <AmiBlitz3.ab3@4776>   MOVE.l D3,$8(A2)                                         ;store constant
00023028 <AmiBlitz3.ab3@4778>   CMP.w #$0a,lastchar
0002302C <AmiBlitz3.ab3@4779>   BNE 'l1
00023034 <AmiBlitz3.ab3@4780>   MOVE.w #":",lastchar                                     ;hack to read wizard include files
00023036 <AmiBlitz3.ab3@4784> RTS
0002303A <AmiBlitz3.ab3@4790>   BSR.w findproc                                           ;write statement call
0002303E <AmiBlitz3.ab3@4792>   BEQ '_state
00023044 <AmiBlitz3.ab3@4793>   TST.l unusedfunc
00023048 <AmiBlitz3.ab3@4795>   BEQ noprocerr          ; was bne
0002304E <AmiBlitz3.ab3@4798>   JSR gotoendsource
00023052 <AmiBlitz3.ab3@4802>   TST.b $5(A2)
00023058 <AmiBlitz3.ab3@4805>   MOVE.l a2,currentfunccall
00023060 <AmiBlitz3.ab3@4806>   MOVE.b #1,funccall
00023066 <AmiBlitz3.ab3@4807>   MOVE.b #1,isfunc(a2)
0002306A <AmiBlitz3.ab3@4809>   MOVE.l $E(A2),-(A7)         ;pc of proc.
0002306C <AmiBlitz3.ab3@4810>   MOVEQ.l #$00,D0
00023070 <AmiBlitz3.ab3@4811>   MOVE.b $4(A2),D0
00023076 <AmiBlitz3.ab3@4812>   MOVE.l d0,parnumtemp
0002307A <AmiBlitz3.ab3@4813>   BEQ.w 'nopars
0002307E <AmiBlitz3.ab3@4815>   TST.b $20(a2)                                            ;increase if morepar
00023082 <AmiBlitz3.ab3@4816>   BNE 'no0par
00023084 <AmiBlitz3.ab3@4817>   MOVE.l a5,a4
00023088 <AmiBlitz3.ab3@4820>   CMP.b #$20,(a4)+
0002308C <AmiBlitz3.ab3@4821>   BEQ 'l1
00023092 <AmiBlitz3.ab3@4822>   CMP.b #"}",-1(a4)
00023096 <AmiBlitz3.ab3@4823>   BNE  'no0par                                             ;statementcall pars
00023098 <AmiBlitz3.ab3@4824>   MOVEQ #0,d0
0002309C <AmiBlitz3.ab3@4828>   LEA $16(A2),A1            ;pointer to var desc list
0002309E <AmiBlitz3.ab3@4832>   MOVE.l d1,-(a7)
000230A0 <AmiBlitz3.ab3@4833>   MOVE.b (a1),d2
000230A2 <AmiBlitz3.ab3@4834>   MOVE.l d0,d1
000230A6 <AmiBlitz3.ab3@4835>   CMP.w #4,d2
000230AA <AmiBlitz3.ab3@4836>   BNE 'l1b
000230B0 <AmiBlitz3.ab3@4837>   ADD.l #$203c,d1
000230B6 <AmiBlitz3.ab3@4838>   JSR writeword
000230BC <AmiBlitz3.ab3@4839>   MOVE.l #$ffff0000,d1
000230C2 <AmiBlitz3.ab3@4840>   JSR writelong
000230C6 <AmiBlitz3.ab3@4841>  BRA 'l2b
000230CC <AmiBlitz3.ab3@4844>   TST.b fpu
000230D0 <AmiBlitz3.ab3@4845>   BNE 'l1c
000230D4 <AmiBlitz3.ab3@4846>   CMP.w #5,d2
000230D8 <AmiBlitz3.ab3@4847>   BNE 'l1c
000230DE <AmiBlitz3.ab3@4848>   ADD.l #$203c,d1
000230E4 <AmiBlitz3.ab3@4849>   JSR writeword
000230EA <AmiBlitz3.ab3@4850>   MOVE.l #$800000c1,d1
000230F0 <AmiBlitz3.ab3@4851>   JSR writelong
000230F4 <AmiBlitz3.ab3@4852>  BRA 'l2b
000230FA <AmiBlitz3.ab3@4855>   ADD.l #$70ff,d1
00023100 <AmiBlitz3.ab3@4856>   JSR writeword
00023106 <AmiBlitz3.ab3@4857>   MOVE.l #$f23c5000,d1
00023108 <AmiBlitz3.ab3@4858>   MOVE.l d0,d2
0002310A <AmiBlitz3.ab3@4859>   ASR.l #2,d2
0002310C <AmiBlitz3.ab3@4860>   ADD.l d2,d1
00023112 <AmiBlitz3.ab3@4861>   JSR writelong
00023116 <AmiBlitz3.ab3@4862>   MOVE.w #$ffff,d1
0002311C <AmiBlitz3.ab3@4863>   JSR writeword
0002311E <AmiBlitz3.ab3@4866>   MOVE.l (a7)+,d1
00023120 <AmiBlitz3.ab3@4867>   ADDQ.l #1,a1
00023126 <AmiBlitz3.ab3@4868>   ADD.l #$0200,d0
0002312C <AmiBlitz3.ab3@4869>   CMP.l #$0e00,d0
00023130 <AmiBlitz3.ab3@4870>    BEQ syntaxerr
00023132 <AmiBlitz3.ab3@4871>   TST.b (a1)
00023136 <AmiBlitz3.ab3@4872>    BNE 'again
0002313A <AmiBlitz3.ab3@4873>  BRA 'nopars
00023144 <AmiBlitz3.ab3@4876>   MOVE.w a2offset,a2offset2
00023148 <AmiBlitz3.ab3@4877>   LEA $16(A2),A2
0002314E <AmiBlitz3.ab3@4878>   MOVE.b funcparloop,-(a7)
00023156 <AmiBlitz3.ab3@4879>   MOVE.b #1,funcparloop
0002315C <AmiBlitz3.ab3@4880>   MOVE.b blitzparloop,-(a7)
00023162 <AmiBlitz3.ab3@4881>   CLR.b blitzparloop
00023166 <AmiBlitz3.ab3@4883>   BSR.w fetchpees2
0002316C <AmiBlitz3.ab3@4885>   MOVE.b (a7)+,blitzparloop
00023172 <AmiBlitz3.ab3@4886>   MOVE.b (a7)+,funcparloop
00023176 <AmiBlitz3.ab3@4888>  BRA.w 'nopars3
0002317A <AmiBlitz3.ab3@4892>   BSR.w get1bytemain
0002317E <AmiBlitz3.ab3@4895>   CMP.w #$7D,D0        ;'}'
00023182 <AmiBlitz3.ab3@4896>    BNE.w morepar_                                          ;syntax error morepar
00023188 <AmiBlitz3.ab3@4897>    JSR chkstak
0002318A <AmiBlitz3.ab3@4898>   MOVE.l (A7)+,D1
00023190 <AmiBlitz3.ab3@4916>    JSR makefjsr
00023196 <AmiBlitz3.ab3@4939>   CLR.b funccall
0002319A <AmiBlitz3.ab3@4941> BRA.w get1bytemain
000231A0 <AmiBlitz3.ab3@4948>   MOVE.l d0,lasttoken
000231A4 <AmiBlitz3.ab3@4949>   CMP.w #$c09f,d0                                          ;hack to use getregd0 instead of getd0
000231A8 <AmiBlitz3.ab3@4950>   BNE 'l2
000231AC <AmiBlitz3.ab3@4951>    MOVE.w #$dd05,d0
000231B0 <AmiBlitz3.ab3@4954>   CMP.w #$c0a0,d0                                          ;hack to use getregd0 instead of getd0
000231B4 <AmiBlitz3.ab3@4955>   BNE 'l3
000231B8 <AmiBlitz3.ab3@4956>    MOVE.w #$dd06,d0
000231BC <AmiBlitz3.ab3@4960>   CMP.w #-$7FC4,D0               ; was #$8000+fnum,
000231C0 <AmiBlitz3.ab3@4961>   BCS.w 'nono
000231C4 <AmiBlitz3.ab3@4962>     CMP.w #-$7F4D,D0             ; was #$8000+tnum,
000231C8 <AmiBlitz3.ab3@4963>     BCC.w 'nono
000231D0 <AmiBlitz3.ab3@4965>       BTST #$7,assemblercheck    ; was optreq2ga3+13                            ;inline Assembler checking
000231D4 <AmiBlitz3.ab3@4966>       BNE.b 'asmok
000231DA <AmiBlitz3.ab3@4968>         TST.b debugmode
000231DE <AmiBlitz3.ab3@4969>         BEQ.b 'l10
000231E8 <AmiBlitz3.ab3@4974>           MOVE.w d_nomemleft,dontwrite_nomemleft
000231F2 <AmiBlitz3.ab3@4975>           MOVE.l d_bigpc,bigpc
000231FC <AmiBlitz3.ab3@4976>           MOVE.l d_pc,destpointer
00023206 <AmiBlitz3.ab3@4977>           MOVE.l cont_pc2,cont_pc
0002320A <AmiBlitz3.ab3@4985>  BRA.w asmit   ;assemble the bastard
0002320E <AmiBlitz3.ab3@4992>   BCLR #$F,D0
00023210 <AmiBlitz3.ab3@4993>   MOVE.w D0,D1
00023214 <AmiBlitz3.ab3@4994>   ANDI.w #$7F00,D1
00023218 <AmiBlitz3.ab3@4995>   BNE.w handlelib
0002321C <AmiBlitz3.ab3@4997>     CMP.w #$B3,D0        ; was #tnum,                                  ;intern Instructions
00023220 <AmiBlitz3.ab3@4998>     BCS.w 'isokat
00023224 <AmiBlitz3.ab3@5000>       SUBI.w #$77,D0     ; was #tnum-fnum,
00023228 <AmiBlitz3.ab3@5001>       CMP.w #$4B,D0      ; was #fnum+15
0002322C <AmiBlitz3.ab3@5002>       BEQ.w 'noerr
00023230 <AmiBlitz3.ab3@5003>         CMP.w #$46,D0    ; was #fnum+10,
00023234 <AmiBlitz3.ab3@5004>         BEQ.w 'noerr
00023238 <AmiBlitz3.ab3@5005>  BRA.w 'doerr                                            ; change tokennum
0002323C <AmiBlitz3.ab3@5008>     CMP.w #$38,D0        ;check for things which don't want
00023240 <AmiBlitz3.ab3@5009>      BEQ.w 'noerr        ;error checking...
00023244 <AmiBlitz3.ab3@5010>     CMP.w #$39,D0
00023248 <AmiBlitz3.ab3@5011>      BEQ.w 'noerr
0002324C <AmiBlitz3.ab3@5012>     CMP.w #$D,D0
00023250 <AmiBlitz3.ab3@5013>      BEQ.w 'noerr
00023254 <AmiBlitz3.ab3@5014>     CMP.w #$12,D0
00023258 <AmiBlitz3.ab3@5015>      BEQ.w 'noerr
0002325C <AmiBlitz3.ab3@5016>     CMP.w #$13,D0
00023260 <AmiBlitz3.ab3@5017>      BEQ.w 'noerr
00023264 <AmiBlitz3.ab3@5018>     CMP.w #$1A,D0
00023268 <AmiBlitz3.ab3@5019>      BEQ.w 'noerr
0002326C <AmiBlitz3.ab3@5020>     CMP.w #$2A,D0
00023270 <AmiBlitz3.ab3@5021>      BHI.w 'doerr
00023274 <AmiBlitz3.ab3@5022>     CMP.w #$23,D0
00023278 <AmiBlitz3.ab3@5023>      BCS.b 'doerr
0002327C <AmiBlitz3.ab3@5026>   BSR.w undodebug
0002327E <AmiBlitz3.ab3@5029>   SUBQ.w #1,D0
00023280 <AmiBlitz3.ab3@5030>   LSL.w #2,D0
00023286 <AmiBlitz3.ab3@5040>   LEA instructionbase,A0
0002328A <AmiBlitz3.ab3@5041>   MOVEA.l $0(A0,D0.W),A0
0002328C <AmiBlitz3.ab3@5042>   MOVE.l A0,-(A7)
00023290 <AmiBlitz3.ab3@5043> BRA.w get1bytemain
00023292 <AmiBlitz3.ab3@5049>   MOVE.w D0,D1
00023296 <AmiBlitz3.ab3@5050>    BSR.w searchinstr    ;toke stuff in a3
0002329C <AmiBlitz3.ab3@5052>    TST.b newmode
000232A0 <AmiBlitz3.ab3@5053>    BNE compile_term
000232A6 <AmiBlitz3.ab3@5055>   BTST #$2,$1(A3)                                          ;a3 = pointer to instr ;toke stuff in a3
000232AA <AmiBlitz3.ab3@5056>    BNE.w stamigalib
000232B0 <AmiBlitz3.ab3@5057>   BTST #$0,$1(A3)
000232B4 <AmiBlitz3.ab3@5058>    BEQ.w needreturn_                                       ;syntax err need return   ;check it's a statement
000232B8 <AmiBlitz3.ab3@5060>    BSR.w sizespec                                         ;does it need a size specifier?
000232BC <AmiBlitz3.ab3@5061>    BSR.w countpees
000232C2 <AmiBlitz3.ab3@5067>   MOVE.w numreps,-(A7)
000232C8 <AmiBlitz3.ab3@5068>   MOVE.w userp,-(A7)
000232CE <AmiBlitz3.ab3@5069>   MOVE.w a2offset,-(A7)
000232D0 <AmiBlitz3.ab3@5070>   MOVE.l A2,-(A7)                                          ;recurs.
000232DA <AmiBlitz3.ab3@5071>   MOVE.w convsize,userp
000232DE <AmiBlitz3.ab3@5072>   LEA $6(A3),A1
000232E0 <AmiBlitz3.ab3@5077>    MOVE.w (A1),D2
000232E4 <AmiBlitz3.ab3@5078>    BMI.w 'SERR                                              ;statement syntax error
000232E8 <AmiBlitz3.ab3@5079>   ANDI.w #$FF,D2
000232EA <AmiBlitz3.ab3@5080>   CMP.w D2,D1
000232EE <AmiBlitz3.ab3@5081>    BEQ.w 'found
000232F2 <AmiBlitz3.ab3@5082>    BCS.w 'next
000232F4 <AmiBlitz3.ab3@5083>   MOVE.b (A1),D3
000232F8 <AmiBlitz3.ab3@5084>   ANDI.w #$7,D3
000232FC <AmiBlitz3.ab3@5085>    BEQ.w 'next
000232FE <AmiBlitz3.ab3@5086>   MOVE.w D2,D4
00023300 <AmiBlitz3.ab3@5087>   SUB.w D3,D4
00023302 <AmiBlitz3.ab3@5088>   MOVEQ.l #$00,D5
00023304 <AmiBlitz3.ab3@5089>   MOVE.w D1,D5
00023306 <AmiBlitz3.ab3@5090>   SUB.w D4,D5
00023308 <AmiBlitz3.ab3@5091>   DIVU D3,D5
0002330A <AmiBlitz3.ab3@5092>   SWAP D5
0002330C <AmiBlitz3.ab3@5093>   TST.w D5
00023310 <AmiBlitz3.ab3@5094>    BEQ.w 'found
00023312 <AmiBlitz3.ab3@5097>   ADDQ.w #2,A1
00023314 <AmiBlitz3.ab3@5098>   ADDA.w D2,A1
00023318 <AmiBlitz3.ab3@5099>    BSR.w aligna1
0002331C <AmiBlitz3.ab3@5100>    BSR.w skiplibreg
00023320 <AmiBlitz3.ab3@5101>   LEA $C(A1),A1
00023324 <AmiBlitz3.ab3@5102>  BRA.w 'loop
00023326 <AmiBlitz3.ab3@5106>   MOVE.w (a3),d2
0002332A <AmiBlitz3.ab3@5107>   BTST #1,d2
0002332E <AmiBlitz3.ab3@5108>   BEQ statement_
00023332 <AmiBlitz3.ab3@5109>   CMP.w #1,d1
00023336 <AmiBlitz3.ab3@5110>   BEQ statement_
0002333A <AmiBlitz3.ab3@5113>   CMP.b #$20,(a5)+
0002333E <AmiBlitz3.ab3@5114>   BEQ 'l2
00023344 <AmiBlitz3.ab3@5115>   CMP.b #"(",-2(a5)
00023348 <AmiBlitz3.ab3@5116>   BNE 'l1
0002334C <AmiBlitz3.ab3@5117>  BRA parameter_
00023350 <AmiBlitz3.ab3@5120>  BRA inbrackets_
00023352 <AmiBlitz3.ab3@5124>   MOVE.b (A1),D2
00023354 <AmiBlitz3.ab3@5125>   LSL.w #8,D2
00023356 <AmiBlitz3.ab3@5126>   OR.w D2,D1
00023358 <AmiBlitz3.ab3@5127>   MOVE.l A1,-(A7)
0002335E <AmiBlitz3.ab3@5128>   CLR.w a2offset
00023360 <AmiBlitz3.ab3@5129>   TST.w D1
00023364 <AmiBlitz3.ab3@5130>    BEQ.w 'nopees
00023368 <AmiBlitz3.ab3@5131>   LEA $2(A1),A2
0002336E <AmiBlitz3.ab3@5133>   MOVE.l lasttoken,-(a7)
00023374 <AmiBlitz3.ab3@5134>   CLR.l lasttoken
00023378 <AmiBlitz3.ab3@5136>   BSR.w fetchlibps
0002337E <AmiBlitz3.ab3@5138>   MOVE.l (a7)+,lasttoken
00023382 <AmiBlitz3.ab3@5140>  BRA.w 'skip
00023386 <AmiBlitz3.ab3@5143>   BSR.w get1bytemain
00023388 <AmiBlitz3.ab3@5146>   MOVEA.l (A7)+,A1
0002338A <AmiBlitz3.ab3@5147>   MOVEA.l (A7)+,A2
00023390 <AmiBlitz3.ab3@5148>   MOVE.w a2offset,D1
00023394 <AmiBlitz3.ab3@5149>    BEQ.w 'skip2
0002339A <AmiBlitz3.ab3@5150>   MOVE.w D1,preplibst+2
000233A0 <AmiBlitz3.ab3@5151>   MOVE.l preplibst,D1
000233A6 <AmiBlitz3.ab3@5152>    JSR writelong                                           ;write array offset stack correct
000233B0 <AmiBlitz3.ab3@5153>   MOVE.w numreps,movenumrep+2
000233B4 <AmiBlitz3.ab3@5154>    BEQ.w 'skip2
000233BA <AmiBlitz3.ab3@5155>   MOVE.l movenumrep,D1
000233C0 <AmiBlitz3.ab3@5156>    JSR writelong
000233C6 <AmiBlitz3.ab3@5160>   JSR userjsr
000233CC <AmiBlitz3.ab3@5165>   MOVE.w a2offset,D1
000233D0 <AmiBlitz3.ab3@5166>    BEQ.w 'skip3
000233D4 <AmiBlitz3.ab3@5167>   CMP.w #$8,D1
000233D8 <AmiBlitz3.ab3@5168>    BHI.w 'skip4
000233DC <AmiBlitz3.ab3@5169>   ANDI.w #$7,D1
000233DE <AmiBlitz3.ab3@5170>   LSL.w #8,D1
000233E0 <AmiBlitz3.ab3@5171>   LSL.w #1,D1
000233E4 <AmiBlitz3.ab3@5172>   ORI.w #$504F,D1       ;addq #x,a7
000233EA <AmiBlitz3.ab3@5173>   JSR writeword
000233EE <AmiBlitz3.ab3@5174>  BRA.w 'skip3
000233F4 <AmiBlitz3.ab3@5177>   MOVE.w D1,fixlibst+2
000233FA <AmiBlitz3.ab3@5178>   MOVE.l fixlibst,D1
00023400 <AmiBlitz3.ab3@5179>   JSR writelong
00023406 <AmiBlitz3.ab3@5182>   MOVE.w (A7)+,a2offset
0002340C <AmiBlitz3.ab3@5183>   MOVE.w (A7)+,userp
00023412 <AmiBlitz3.ab3@5184>   MOVE.w (A7)+,numreps
00023416 <AmiBlitz3.ab3@5185> BRA.w reget
0002341A <AmiBlitz3.ab3@5189>   MOVEM.l A2-A3,-(A7)
00023420 <AmiBlitz3.ab3@5191>   CLR.b doublepeek
00023426 <AmiBlitz3.ab3@5193>   MOVE.l A5,lastsourcepos
0002342A <AmiBlitz3.ab3@5194>    BSR.w getchar          ;','
0002342E <AmiBlitz3.ab3@5195>   CMP.w #$2E,D0
00023432 <AmiBlitz3.ab3@5196>    BEQ.w 'ok1
00023438 <AmiBlitz3.ab3@5197>   MOVEA.l defaulttype,A2
0002343C <AmiBlitz3.ab3@5198>   CMP.w #$24,D0           ;'$'
00023440 <AmiBlitz3.ab3@5199>    BNE.w 'none
00023442 <AmiBlitz3.ab3@5200>   MOVEQ.l #$07,D1
00023446 <AmiBlitz3.ab3@5201>  BRA.w 'skip
0002344A <AmiBlitz3.ab3@5204>   BSR.w getparameter2
0002344E <AmiBlitz3.ab3@5205>   BEQ.w syntaxerr
00023454 <AmiBlitz3.ab3@5206>   LEA newtypebase,A2
00023458 <AmiBlitz3.ab3@5207>   BSR.w findtype
0002345C <AmiBlitz3.ab3@5208>   BNE.w notypeerr
00023466 <AmiBlitz3.ab3@5213>   MOVE.w oldqflag,instringon
0002346C <AmiBlitz3.ab3@5214>   MOVEA.l lastsourcepos,A5
00023470 <AmiBlitz3.ab3@5222>   MOVE.w $6(A2),D1
00023476 <AmiBlitz3.ab3@5224>   CMP.w #8,8(a2)
0002347A <AmiBlitz3.ab3@5225>   BNE 'l1
00023482 <AmiBlitz3.ab3@5226>   MOVE.b #1,doublepeek
00023488 <AmiBlitz3.ab3@5231>   MOVE.w D1,convsize
0002348C <AmiBlitz3.ab3@5232>   MOVEM.l (A7)+,A2-A3
0002348E <AmiBlitz3.ab3@5233> RTS
00023494 <AmiBlitz3.ab3@5238>   BTST #$3,$1(A3)
00023498 <AmiBlitz3.ab3@5239>   BEQ.w 'skip
0002349C <AmiBlitz3.ab3@5240>   BSR.w sizespec2                                         ;read peek/poke size
000234A0 <AmiBlitz3.ab3@5242>   ORI.w #$7000,D1
000234A6 <AmiBlitz3.ab3@5243>   JSR writeword
000234AC <AmiBlitz3.ab3@5244>   ADDQ.w #1,regnum
000234AE <AmiBlitz3.ab3@5247> RTS
000234B0 <AmiBlitz3.ab3@5254>             Dc.b $10,$12                                   ;MOVE.B  (A2),D0
000234B2 <AmiBlitz3.ab3@5255>             Dc.b $14,$91                                   ;MOVE.B  (A1),(A2)
000234B4 <AmiBlitz3.ab3@5256>             Dc.b $12,$80                                   ;MOVE.B  D0,(A1)
000234B6 <AmiBlitz3.ab3@5260> swapw:      Dc.b $30,$12                                   ;MOVE.W  (A2),D0
000234B8 <AmiBlitz3.ab3@5261>             Dc.b $34,$91                                   ;MOVE.W  (A1),(A2)
000234BA <AmiBlitz3.ab3@5262>             Dc.b $32,$80                                   ;MOVE.W  D0,(A1)
000234BC <AmiBlitz3.ab3@5266> swapl:      Dc.b $20,$12                                   ;MOVE.L  (A2),D0
000234BE <AmiBlitz3.ab3@5267>             Dc.b $24,$91                                   ;MOVE.L  (A1),(A2)
000234C0 <AmiBlitz3.ab3@5268>             Dc.b $22,$80                                   ;MOVE.L  D0,(A1)
000234C2 <AmiBlitz3.ab3@5272> pulla1:     Dc.b $22,$5F                                   ;MOVEA.L (A7)+,A1
000234C4 <AmiBlitz3.ab3@5275> srctype:    Ds.w 1
000234C8 <AmiBlitz3.ab3@5280>   BSR.w excget
000234CC <AmiBlitz3.ab3@5281>   CMP.w #$2C,D0     ;','
000234D0 <AmiBlitz3.ab3@5282>    BNE.w syntaxerr
000234D6 <AmiBlitz3.ab3@5283>   MOVE.b D2,srctype
000234DC <AmiBlitz3.ab3@5284>   MOVE.w pusha2,D1
000234E2 <AmiBlitz3.ab3@5285>   JSR writeword
000234E6 <AmiBlitz3.ab3@5286>   BSR.w get1bytemain
000234EA <AmiBlitz3.ab3@5287>   BSR.w excget
000234F0 <AmiBlitz3.ab3@5288>   CMP.b srctype,D2
000234F4 <AmiBlitz3.ab3@5289>    BNE.w excerr2
000234FA <AmiBlitz3.ab3@5290>   MOVE.w pulla1,D1
00023500 <AmiBlitz3.ab3@5291>    JSR writeword
00023504 <AmiBlitz3.ab3@5293>   CMP.b #$2,D2
00023508 <AmiBlitz3.ab3@5294>    BCS.w 'byte
0002350C <AmiBlitz3.ab3@5295>    BEQ.w 'word
00023510 <AmiBlitz3.ab3@5296>   LEA swapl(PC),A0
00023514 <AmiBlitz3.ab3@5297>   LEA swaplf(PC),A1
0002351A <AmiBlitz3.ab3@5298>  JMP pokecode
0002351E <AmiBlitz3.ab3@5301>   LEA swapw(PC),A0
00023522 <AmiBlitz3.ab3@5302>   LEA swapwf(PC),A1
00023528 <AmiBlitz3.ab3@5303>  JMP pokecode
0002352C <AmiBlitz3.ab3@5306>   LEA swapb(PC),A0
00023530 <AmiBlitz3.ab3@5307>   LEA swapbf(PC),A1
00023536 <AmiBlitz3.ab3@5308> JMP pokecode
0002353C <AmiBlitz3.ab3@5312>   JSR getparameter
00023540 <AmiBlitz3.ab3@5313>   BSR.w fetchvars
00023546 <AmiBlitz3.ab3@5314>   JSR calcvar
0002354A <AmiBlitz3.ab3@5315>   BTST #$E,D2
0002354E <AmiBlitz3.ab3@5316>    BEQ.w 'skip
00023552 <AmiBlitz3.ab3@5317>   MOVE.b #$4,D2
00023554 <AmiBlitz3.ab3@5320>   TST.b D2
00023558 <AmiBlitz3.ab3@5321>    BEQ.w excerr
0002355C <AmiBlitz3.ab3@5322>   BTST #$F,D2
00023560 <AmiBlitz3.ab3@5323>    BNE.w 'done
00023566 <AmiBlitz3.ab3@5324>   MOVE.w leaamp,D1
0002356C <AmiBlitz3.ab3@5325>    JSR pokewda5s
0002356E <AmiBlitz3.ab3@5326>   MOVE.w D3,D1
00023574 <AmiBlitz3.ab3@5327>  JMP writeword
00023576 <AmiBlitz3.ab3@5330> RTS
0002357C <AmiBlitz3.ab3@5339>   MOVE.l mempool,a0
00023582 <AmiBlitz3.ab3@5340>   MOVEA.l _execbase,A6
00023586 <AmiBlitz3.ab3@5341> JMP _AllocPooled(a6)
0002358A <AmiBlitz3.ab3@5346>   MOVE.w #$BF00,D1       ; was #wbstart
00023590 <AmiBlitz3.ab3@5347> JMP Atokejsr
00023594 <AmiBlitz3.ab3@5351>   CMP.w #-$7FFA,D0       ; was  #$8006
00023598 <AmiBlitz3.ab3@5352>    BEQ.w popreturn
0002359C <AmiBlitz3.ab3@5353>   CMP.w #-$7FEA,D0       ; was  #$8000+22,
000235A0 <AmiBlitz3.ab3@5354>    BEQ.w popnext2
000235A4 <AmiBlitz3.ab3@5355>   CMP.w #-$7FF2,D0       ; was  #$8000+14,
000235A8 <AmiBlitz3.ab3@5356>    BEQ.w popselect2
000235AC <AmiBlitz3.ab3@5358>   CMP.w #-$7FF5,D0       ; was  #$8000+11
000235B0 <AmiBlitz3.ab3@5359>    BEQ.w get1bytemain
000235B4 <AmiBlitz3.ab3@5360>   CMP.w #-$7FF4,D0       ; was  #$8000+12
000235B8 <AmiBlitz3.ab3@5361>    BEQ.w get1bytemain
000235BC <AmiBlitz3.ab3@5362>   CMP.w #-$7FEC,D0       ; was  #$8000+20
000235C0 <AmiBlitz3.ab3@5363>    BEQ.w get1bytemain
000235C4 <AmiBlitz3.ab3@5364>   CMP.w #-$7F45,D0       ; was  #$8000+tnum+8
000235C8 <AmiBlitz3.ab3@5365>    BEQ.w get1bytemain
000235CC <AmiBlitz3.ab3@5366> BRA.w syntaxerr
000235D2 <AmiBlitz3.ab3@5370>   TST.b debugmode
000235D6 <AmiBlitz3.ab3@5371>    BEQ.w 'norerr
000235DA <AmiBlitz3.ab3@5372>   LEA 'rfix(PC),A0
000235DE <AmiBlitz3.ab3@5373>   LEA 'rfixf(PC),A1
000235E4 <AmiBlitz3.ab3@5374>    JSR pokecode
000235E8 <AmiBlitz3.ab3@5375>   MOVE.w #$C305,D1
000235EE <AmiBlitz3.ab3@5376>    JSR Atokejsr
000235F2 <AmiBlitz3.ab3@5377>   MOVE.w 'rfix2(PC),D1
000235F8 <AmiBlitz3.ab3@5379>    JSR writeword
000235FC <AmiBlitz3.ab3@5380>  BRA.w get1bytemain
00023602 <AmiBlitz3.ab3@5383>   CMPI.w #$6753,$4(A7)                                     ;#"gS",4(A7)
00023606 <AmiBlitz3.ab3@5384>   BEQ.w 'rfix2
0002360C <AmiBlitz3.ab3@5387>   JSR $20000                                               ;reass
0002360E <AmiBlitz3.ab3@5390>   ADDQ.w #6,A7
00023612 <AmiBlitz3.ab3@5393>   MOVE.w 'sfix(PC),D1
00023618 <AmiBlitz3.ab3@5394>   JSR writeword
0002361C <AmiBlitz3.ab3@5395> BRA.w get1bytemain
0002361E <AmiBlitz3.ab3@5400>   Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
00023624 <AmiBlitz3.ab3@5405>   MOVE.l firstfor,D0
00023628 <AmiBlitz3.ab3@5406>    BEQ.w noforerr
0002362A <AmiBlitz3.ab3@5407>   MOVEA.l D0,A2
0002362E <AmiBlitz3.ab3@5408>    BSR.w get1bytemain
00023632 <AmiBlitz3.ab3@5409>   BSR.w popnext
00023638 <AmiBlitz3.ab3@5412>   TST.b debugmode
0002363C <AmiBlitz3.ab3@5413>    BEQ.w 'ner
00023642 <AmiBlitz3.ab3@5414>   MOVE.l nextfixw2,D1
00023648 <AmiBlitz3.ab3@5415>   CMPI.w #$3,$C(A2)
0002364C <AmiBlitz3.ab3@5416>    BCS.w 'writelong2
00023652 <AmiBlitz3.ab3@5417>   MOVE.l nextfixl2,D1
00023658 <AmiBlitz3.ab3@5420>   JMP  writelong
0002365E <AmiBlitz3.ab3@5423>   CMPI.w #$3,$C(A2)
00023662 <AmiBlitz3.ab3@5424>    BCS.w 'skip2
00023668 <AmiBlitz3.ab3@5425>   MOVE.l nextfixl,D1
0002366E <AmiBlitz3.ab3@5426>   JMP writelong
00023674 <AmiBlitz3.ab3@5429>   MOVE.w nextfixw,D1
0002367A <AmiBlitz3.ab3@5430> JMP writeword
0002367E <AmiBlitz3.ab3@5435>   MOVE.w $C(A2),D0
00023684 <AmiBlitz3.ab3@5436>   TST.b debugmode
00023688 <AmiBlitz3.ab3@5437>    BEQ.w 'norunerr
0002368C <AmiBlitz3.ab3@5438>   MOVE.w #$C306,D1
00023690 <AmiBlitz3.ab3@5439>   CMP.w #$3,D0
00023694 <AmiBlitz3.ab3@5440>    BCS.w 'oktc
00023696 <AmiBlitz3.ab3@5441>   ADDQ.w #1,D1
00023698 <AmiBlitz3.ab3@5444>   MOVE.l A2,-(A7)
0002369E <AmiBlitz3.ab3@5445>   JSR Atokejsr
000236A0 <AmiBlitz3.ab3@5446>   MOVEA.l (A7)+,A2
000236A2 <AmiBlitz3.ab3@5449> RTS
000236A8 <AmiBlitz3.ab3@5453>   MOVE.l firstsel,D0
000236AC <AmiBlitz3.ab3@5454>    BEQ.w eselerr
000236AE <AmiBlitz3.ab3@5455>   MOVEA.l D0,A2
000236B2 <AmiBlitz3.ab3@5456>    BSR.w get1bytemain
000236B6 <AmiBlitz3.ab3@5459>   MOVE.w $C(A2),D2
000236BC <AmiBlitz3.ab3@5460>   TST.b debugmode
000236C0 <AmiBlitz3.ab3@5461>    BEQ.w 'norerr
000236C4 <AmiBlitz3.ab3@5462>   MOVE.w #$C313,D1
000236C8 <AmiBlitz3.ab3@5463>   CMP.w #$3,D2
000236CC <AmiBlitz3.ab3@5464>    BCS.w 'chkit
000236CE <AmiBlitz3.ab3@5465>   ADDQ.w #1,D1
000236D4 <AmiBlitz3.ab3@5468>   JSR Atokejsr                                             ;make sure next thing on stack
000236D6 <AmiBlitz3.ab3@5472>   MOVEQ.l #$02,D1
000236DA <AmiBlitz3.ab3@5473>   CMP.w #$3,D2
000236DE <AmiBlitz3.ab3@5474>    BCS.w 'doit
000236E0 <AmiBlitz3.ab3@5475>   MOVEQ.l #$04,D1
000236E4 <AmiBlitz3.ab3@5476>   CMP.w #$7,D2
000236E8 <AmiBlitz3.ab3@5477>    BCS.w 'doit
000236EE <AmiBlitz3.ab3@5478>   LEA endselstr,A0
000236F4 <AmiBlitz3.ab3@5479>   LEA endselstrf,A1
000236FA <AmiBlitz3.ab3@5480>   TST.b debugmode
000236FE <AmiBlitz3.ab3@5481>    BEQ.w 'norerr3
00023704 <AmiBlitz3.ab3@5482>   LEA endselstrf2,A1
0002370A <AmiBlitz3.ab3@5485>   JSR pokecode
0002370E <AmiBlitz3.ab3@5486>   MOVE.w #$C003,D1                                         ;global freemem
00023714 <AmiBlitz3.ab3@5487>  JMP Atokejsr
0002371A <AmiBlitz3.ab3@5490>   TST.b debugmode
0002371E <AmiBlitz3.ab3@5491>    BEQ.w 'norerr2
00023720 <AmiBlitz3.ab3@5492>   ADDQ.w #2,D1                                             ;for the "sE"
00023722 <AmiBlitz3.ab3@5495>   LSL.w #8,D1
00023724 <AmiBlitz3.ab3@5496>   LSL.w #1,D1
0002372A <AmiBlitz3.ab3@5497>   OR.w endsel,D1
00023730 <AmiBlitz3.ab3@5498> JMP writeword
00023734 <AmiBlitz3.ab3@5501> firstrep:    Ds.l 1
00023738 <AmiBlitz3.ab3@5502> replineat:   Ds.l 1
0002373E <AmiBlitz3.ab3@5511>   CLR.l fp0addr
00023748 <AmiBlitz3.ab3@5512>   MOVE.l linenumat,replineat
0002374A <AmiBlitz3.ab3@5513>   MOVEQ.l #$08,D0
00023750 <AmiBlitz3.ab3@5514>   MOVEA.l _execbase,A6
00023756 <AmiBlitz3.ab3@5515>   MOVE.l mempool,a0
0002375A <AmiBlitz3.ab3@5516>   JSR _AllocPooled(a6)
0002375C <AmiBlitz3.ab3@5518>   MOVEA.l D0,A0
00023760 <AmiBlitz3.ab3@5519>   MOVE.l firstrep(PC),(A0)
00023766 <AmiBlitz3.ab3@5520>   MOVE.l A0,firstrep
0002376E <AmiBlitz3.ab3@5521>   MOVE.l destpointer,$4(A0)
00023770 <AmiBlitz3.ab3@5522> RTS
00023776 <AmiBlitz3.ab3@5525> str_temp:  Ds.w 3                                            ;infochk  ds.b 6 org source
0002377A <AmiBlitz3.ab3@5528>   LEA str_temp(PC),A1
0002377C <AmiBlitz3.ab3@5529>   CLR.w (A1)
00023780 <AmiBlitz3.ab3@5530>   CLR.l $2(A1)
00023782 <AmiBlitz3.ab3@5533>   MOVEQ.l #$04,D0
00023786 <AmiBlitz3.ab3@5536>     MOVE.b $1(A1),(A1)+
0002378A <AmiBlitz3.ab3@5537>   DBF D0,'loop
0002378E <AmiBlitz3.ab3@5542>   LEA str_temp(PC),A1
00023790 <AmiBlitz3.ab3@5543>   MOVE.b (A0),D0
00023794 <AmiBlitz3.ab3@5544>   ORI.b #$20,D0
00023798 <AmiBlitz3.ab3@5545>   MOVE.b D0,$5(A1)
0002379A <AmiBlitz3.ab3@5546>   TST.b (A0)+
0002379E <AmiBlitz3.ab3@5547>    BNE.w 'loop2
000237A2 <AmiBlitz3.ab3@5548>   CMPI.w #$2E69,(A1)+                                      ;".i"
000237A6 <AmiBlitz3.ab3@5549>    BNE.w 'no
000237AC <AmiBlitz3.ab3@5550>   CMPI.l #$6E666F20,(A1)                                   ;"nfo "
000237AE <AmiBlitz3.ab3@5553> RTS
000237B2 <AmiBlitz3.ab3@5557>   BPL.w 'evaltoke
000237B4 <AmiBlitz3.ab3@5558>   MOVE.w D0,D1
000237B8 <AmiBlitz3.ab3@5559>   ANDI.w #$7F80,D1
000237BC <AmiBlitz3.ab3@5560>    BEQ.w tokeerr
000237C0 <AmiBlitz3.ab3@5561>   BCLR #$F,D0
000237C2 <AmiBlitz3.ab3@5562>   MOVE.w D0,D4                                             ;got toke number
000237C6 <AmiBlitz3.ab3@5563>   BSR.w get1bytemain
000237CA <AmiBlitz3.ab3@5564>  BRA.w 'gotnum
000237D0 <AmiBlitz3.ab3@5567>   JSR evalconst
000237D6 <AmiBlitz3.ab3@5568>   CMP.l #MaxWord,D3
000237DA <AmiBlitz3.ab3@5569>    BHI.w tokeerr
000237DC <AmiBlitz3.ab3@5570>   TST.w D6
000237E0 <AmiBlitz3.ab3@5571>    BNE.w tokeerr
000237E2 <AmiBlitz3.ab3@5572>   MOVE.w D3,D4
000237E4 <AmiBlitz3.ab3@5575>   MOVEQ.l #$00,D5
000237E8 <AmiBlitz3.ab3@5576>   CMP.w #$2C,D0
000237EC <AmiBlitz3.ab3@5577>    BNE.w 'gotfrom
000237EE <AmiBlitz3.ab3@5578>   MOVE.w D4,-(A7)
000237F4 <AmiBlitz3.ab3@5579>    JSR evalconst2
000237FA <AmiBlitz3.ab3@5580>   CMP.l #MaxWord,D3
000237FE <AmiBlitz3.ab3@5581>    BHI.w tokeerr
00023800 <AmiBlitz3.ab3@5582>   TST.w D6
00023804 <AmiBlitz3.ab3@5583>    BNE.w tokeerr
00023806 <AmiBlitz3.ab3@5584>   MOVE.w D3,D5
00023808 <AmiBlitz3.ab3@5585>   MOVE.w (A7)+,D4
0002380A <AmiBlitz3.ab3@5588> RTS                                                        ;d4=toke, d5=form
0002380C <AmiBlitz3.ab3@5592>   TST.w D0
00023810 <AmiBlitz3.ab3@5593>    BSR.w gettokeps
00023814 <AmiBlitz3.ab3@5594>   MOVE.w #$4EB9,D1
0002381A <AmiBlitz3.ab3@5595>   JSR writeword
0002381E <AmiBlitz3.ab3@5596>   BSR.w addoff
00023820 <AmiBlitz3.ab3@5597>   MOVE.w D5,D1
00023824 <AmiBlitz3.ab3@5598>   ORI.w #$8000,D1                                          ;Toke of Amiga type.
00023826 <AmiBlitz3.ab3@5599>   SWAP D1
00023828 <AmiBlitz3.ab3@5600>   MOVE.w D4,D1
0002382E <AmiBlitz3.ab3@5601> JMP writelong
00023830 <AmiBlitz3.ab3@5605>   TST.w D0
00023834 <AmiBlitz3.ab3@5606>    BSR.w gettokeps
00023838 <AmiBlitz3.ab3@5607>   MOVE.w #$4EB9,D1
0002383E <AmiBlitz3.ab3@5608>   JSR writeword
00023842 <AmiBlitz3.ab3@5609>   BSR.w addoff
00023844 <AmiBlitz3.ab3@5610>   MOVE.w D5,D1
00023848 <AmiBlitz3.ab3@5611>   ORI.w #$C000,D1                                          ;Toke of Blitz type.
0002384A <AmiBlitz3.ab3@5612>   SWAP D1
0002384C <AmiBlitz3.ab3@5613>   MOVE.w D4,D1
00023852 <AmiBlitz3.ab3@5614>   JMP writelong
00023858 <AmiBlitz3.ab3@5618>   JSR evalconst
0002385E <AmiBlitz3.ab3@5619>   CMP.l #$10000,D3
00023862 <AmiBlitz3.ab3@5620>    BCC.w tokeerr
00023864 <AmiBlitz3.ab3@5621>   MOVE.w D3,D1
0002386A <AmiBlitz3.ab3@5622> JMP Atokejsr
0002386E <AmiBlitz3.ab3@5626>   BSR.w gettokeps
00023872 <AmiBlitz3.ab3@5627>   MOVE.w #$4EB9,D1
00023878 <AmiBlitz3.ab3@5628>   JSR writeword
0002387E <AmiBlitz3.ab3@5629>   MOVE.l destpointer,D3
00023886 <AmiBlitz3.ab3@5630>   BTST #$7,blitzmode
0002388A <AmiBlitz3.ab3@5631>    BEQ.w 'inamiga
0002388E <AmiBlitz3.ab3@5632>   BSET #$E,D5
00023892 <AmiBlitz3.ab3@5635>   BSR.w maketjsr
00023896 <AmiBlitz3.ab3@5636>   BSR.w addoff
0002389C <AmiBlitz3.ab3@5637> JMP writelong
000238A0 <AmiBlitz3.ab3@5641>   BEQ.w 'zero
000238A2 <AmiBlitz3.ab3@5642>   MOVEQ.l #$02,D2                                          ;get a word
000238A8 <AmiBlitz3.ab3@5644>   JSR bakeval
000238AC <AmiBlitz3.ab3@5645>   MOVE.w fvwait(PC),D1
000238B0 <AmiBlitz3.ab3@5646>  BRA.w 'vcont
000238B4 <AmiBlitz3.ab3@5649>   MOVE.w #$7000,D1                                         ;moveq #0,d0
000238BA <AmiBlitz3.ab3@5652>   JSR writeword
000238BE <AmiBlitz3.ab3@5653>   MOVE.w #$C104,D1
000238C4 <AmiBlitz3.ab3@5654> JMP Atokejsr
000238C6 <AmiBlitz3.ab3@5658>   SUBQ.w #1,D0
000238CC <AmiBlitz3.ab3@5661>   Dc.w $3b7c,$ffff,0                                       ;move.w #$FFFF,$0(A5) ;noopt
000238D0 <AmiBlitz3.ab3@5664>   Dc.l $426d0001                                           ;clr.w $0(A5)
000238D4 <AmiBlitz3.ab3@5668>   MOVE.b debugmode(PC),D1
000238D8 <AmiBlitz3.ab3@5669>   BEQ.b 'skip
000238DC <AmiBlitz3.ab3@5670>   MOVE.w #$D500,D1
000238E2 <AmiBlitz3.ab3@5671> JMP Atokejsr
000238E4 <AmiBlitz3.ab3@5674> RTS
000238EC <AmiBlitz3.ab3@5678>   BSET #$0,blitzmode
000238F4 <AmiBlitz3.ab3@5679>   BSET #$7,blitzmode
000238F8 <AmiBlitz3.ab3@5680>   MOVE.w #$C200,D1
000238FE <AmiBlitz3.ab3@5681>   JSR Atokejsr
00023904 <AmiBlitz3.ab3@5682>   TST.b debugmode
00023908 <AmiBlitz3.ab3@5683>    BEQ.w 'done
0002390C <AmiBlitz3.ab3@5684>   MOVE.w cgoblitz(PC),D1
00023912 <AmiBlitz3.ab3@5685>   JSR writeword
00023914 <AmiBlitz3.ab3@5686>   MOVEQ.l #-$01,D1
0002391A <AmiBlitz3.ab3@5687>   JSR writeword
00023920 <AmiBlitz3.ab3@5688>   JSR getbbase
00023926 <AmiBlitz3.ab3@5689>   JSR writeword
0002392A <AmiBlitz3.ab3@5692> BRA.w debugmode_codelabel
0002392E <AmiBlitz3.ab3@5696>   MOVE.w #$C201,D1
00023932 <AmiBlitz3.ab3@5697> BRA.w do_AMIGA_toamode
00023936 <AmiBlitz3.ab3@5700>   MOVE.W  #$C202,D1
0002393E <AmiBlitz3.ab3@5703>   BSET #$0,blitzmode
00023946 <AmiBlitz3.ab3@5704>   BCLR #$7,blitzmode
0002394C <AmiBlitz3.ab3@5705>   JSR Atokejsr
00023952 <AmiBlitz3.ab3@5706>   TST.b debugmode
00023956 <AmiBlitz3.ab3@5707>    BEQ.w 'done
0002395A <AmiBlitz3.ab3@5708>   MOVE.w cgoamiga(PC),D1
00023960 <AmiBlitz3.ab3@5709>   JSR writeword
00023966 <AmiBlitz3.ab3@5710>   JSR getbbase
0002396C <AmiBlitz3.ab3@5711>   JSR writeword
00023970 <AmiBlitz3.ab3@5714> BRA.w debugmode_codelabel
00023974 <AmiBlitz3.ab3@5718>   MOVEM.l D2-D7/A2-A4,-(A7)
00023978 <AmiBlitz3.ab3@5721>   MOVEM.l (A7)+,D2-D7/A2-A4
0002397E <AmiBlitz3.ab3@5725>   JSR evalconst
00023984 <AmiBlitz3.ab3@5726>   CMP.l #$E,D3
00023988 <AmiBlitz3.ab3@5727>    BCC.w interr4
0002398C <AmiBlitz3.ab3@5728>   MOVE.w #$7000,D1
0002398E <AmiBlitz3.ab3@5729>   OR.w D3,D1
00023994 <AmiBlitz3.ab3@5730>   JSR writeword
00023998 <AmiBlitz3.ab3@5731>   MOVE.w #$C101,D1
0002399E <AmiBlitz3.ab3@5732> JMP Atokejsr                                               ;clear the interupt
000239A0 <AmiBlitz3.ab3@5735> inerr:       Ds.w 1                                        ;flag - in error trap mode
000239A4 <AmiBlitz3.ab3@5736> errjmp:      Ds.l 1                                        ;where err jump is
000239A8 <AmiBlitz3.ab3@5737> errcode:     Ds.l 1
000239AC <AmiBlitz3.ab3@5741>   MOVE.W  #$D202,D1
000239B2 <AmiBlitz3.ab3@5742> JMP Atokejsr                                               ;BRA.W Atokejsr
000239B6 <AmiBlitz3.ab3@5746>   MOVE.w inerr(PC),D1
000239BA <AmiBlitz3.ab3@5747>    BEQ.w errerr3
000239C0 <AmiBlitz3.ab3@5748>   CLR.w inerr
000239C6 <AmiBlitz3.ab3@5749>   MOVE.w dontwrite_nomemleft,D1
000239CA <AmiBlitz3.ab3@5750>    BNE.w 'skip
000239CE <AmiBlitz3.ab3@5751>   MOVEA.l errjmp(PC),A0
000239D4 <AmiBlitz3.ab3@5752>   MOVE.l destpointer,(A0)
000239D8 <AmiBlitz3.ab3@5755> BRA.w get1bytemain
000239DC <AmiBlitz3.ab3@5759>   MOVE.w #$D205,D1
000239E2 <AmiBlitz3.ab3@5760> JMP Atokejsr
000239E8 <AmiBlitz3.ab3@5764>   MOVE.w proceduremode,D1
000239EC <AmiBlitz3.ab3@5765>    BNE.w errerr1
000239F0 <AmiBlitz3.ab3@5766>   MOVE.w inerr(PC),D1
000239F4 <AmiBlitz3.ab3@5767>    BNE.w errerr2
000239FA <AmiBlitz3.ab3@5768>   LEA inerr,a0
000239FC <AmiBlitz3.ab3@5769>   NOT.w (a0)                                               ;reass
00023A00 <AmiBlitz3.ab3@5770>   MOVE.w #$203C,D1                                         ;move.l #x,d0
00023A06 <AmiBlitz3.ab3@5771>   JSR writeword
00023A10 <AmiBlitz3.ab3@5772>   MOVE.l destpointer,errcode
00023A14 <AmiBlitz3.ab3@5773>   BSR.w addoff
00023A1A <AmiBlitz3.ab3@5774>   JSR writelong
00023A1E <AmiBlitz3.ab3@5775>   MOVE.w #$D201,D1
00023A24 <AmiBlitz3.ab3@5776>   JSR Atokejsr
00023A28 <AmiBlitz3.ab3@5777>   MOVE.w #$4EF9,D1                                         ;JMP
00023A2E <AmiBlitz3.ab3@5778>   JSR writeword
00023A38 <AmiBlitz3.ab3@5779>   MOVE.l destpointer,errjmp
00023A3C <AmiBlitz3.ab3@5780>   BSR.w addoff
00023A42 <AmiBlitz3.ab3@5781>   JSR writelong
00023A48 <AmiBlitz3.ab3@5782>   MOVE.w dontwrite_nomemleft,D1
00023A4C <AmiBlitz3.ab3@5783>    BNE.w 'skip
00023A50 <AmiBlitz3.ab3@5784>   MOVEA.l errcode(PC),A0
00023A56 <AmiBlitz3.ab3@5785>   MOVE.l destpointer,(A0)
00023A58 <AmiBlitz3.ab3@5788> RTS
00023A5C <AmiBlitz3.ab3@5791> intlineat:  Ds.l 1
00023A5E <AmiBlitz3.ab3@5795>   MOVEQ.l #-$01,D1                                        ;type - need new string space
00023A62 <AmiBlitz3.ab3@5796>   BSR.w errchx
00023A68 <AmiBlitz3.ab3@5797>   MOVE.w D1,intstring
00023A72 <AmiBlitz3.ab3@5798>   MOVE.l linenumat,intlineat
00023A78 <AmiBlitz3.ab3@5799>   JSR evalconst                                           ;get constant - int level
00023A7E <AmiBlitz3.ab3@5800>   CMP.l #$E,D3
00023A82 <AmiBlitz3.ab3@5801>    BCC.w interr4
00023A88 <AmiBlitz3.ab3@5802>   ST intsused
00023A8E <AmiBlitz3.ab3@5803>   MOVE.w D3,intlevel
00023A92 <AmiBlitz3.ab3@5804>   MOVE.w #$7000,D1
00023A94 <AmiBlitz3.ab3@5805>   OR.w D3,D1                                              
00023A9A <AmiBlitz3.ab3@5806>   JSR writeword                                         ;moveq #x,d0
00023A9E <AmiBlitz3.ab3@5807>   MOVE.w #$223C,D1                                        ;move.l #x,d1
00023AA4 <AmiBlitz3.ab3@5808>   JSR writeword
00023AA8 <AmiBlitz3.ab3@5809>   BSR.w addoff
00023AAE <AmiBlitz3.ab3@5810>   MOVE.l destpointer,-(A7)
00023AB2 <AmiBlitz3.ab3@5811>   BSR.w writelong
00023AB6 <AmiBlitz3.ab3@5812>   MOVE.w #$C100,D1
00023ABC <AmiBlitz3.ab3@5813>   JSR Atokejsr
00023AC0 <AmiBlitz3.ab3@5814>   MOVE.w #$4EF9,D1                                        ;jmp
00023AC6 <AmiBlitz3.ab3@5815>   JSR writeword
00023ACA <AmiBlitz3.ab3@5816>   BSR.w addoff
00023AD4 <AmiBlitz3.ab3@5817>   MOVE.l destpointer,intjmpat
00023AD8 <AmiBlitz3.ab3@5818>   BSR.w writelong
00023ADA <AmiBlitz3.ab3@5819>   MOVEA.l (A7)+,A0
00023AE0 <AmiBlitz3.ab3@5820>   MOVE.w dontwrite_nomemleft,D1
00023AE4 <AmiBlitz3.ab3@5821>   BNE.w 'dontpoke
00023AEA <AmiBlitz3.ab3@5822>   MOVE.l destpointer,(A0)
00023AEE <AmiBlitz3.ab3@5825>   MOVE.l intstart0(PC),D1
00023AF2 <AmiBlitz3.ab3@5826>   BSR.w writelong
00023AF8 <AmiBlitz3.ab3@5827>   TST.b debugmode
00023AFC <AmiBlitz3.ab3@5828>    BEQ.w 'norerr
00023AFE <AmiBlitz3.ab3@5832>   MOVEQ.l #$02,D1
00023B02 <AmiBlitz3.ab3@5833>   BSR.w writetrap
00023B06 <AmiBlitz3.ab3@5834>   BSR.w addoff
00023B10 <AmiBlitz3.ab3@5835>   MOVE.l destpointer,intcleanat
00023B14 <AmiBlitz3.ab3@5836>   BSR.w writelong
00023B1A <AmiBlitz3.ab3@5837>   MOVE.w intlevel,D1
00023B1E <AmiBlitz3.ab3@5838>   BSR.w writeword
00023B22 <AmiBlitz3.ab3@5839>   MOVE.w #$C30B,D1                                         ;disable stack checks
00023B28 <AmiBlitz3.ab3@5840>   JSR Atokejsr
00023B2C <AmiBlitz3.ab3@5843>   MOVE.w #$FED3,D1
00023B30 <AmiBlitz3.ab3@5844>   BSR.w uselib
00023B34 <AmiBlitz3.ab3@5845>   MOVE.w #$C102,D1
00023B3A <AmiBlitz3.ab3@5846>   JSR Atokejsr
00023B42 <AmiBlitz3.ab3@5847>   MOVE.w #-1,lasta6
00023B4C <AmiBlitz3.ab3@5848>   MOVE.l linenumat,intline
00023B4E <AmiBlitz3.ab3@5849> RTS
00023B50 <AmiBlitz3.ab3@5853>             Ds.w 1                                         ;??looks like obsolved data??
00023B54 <AmiBlitz3.ab3@5855> intdata1:   Ds.l 1                                         ;where in data1 a5 is being kept
00023B58 <AmiBlitz3.ab3@5857> intjmpat:   Ds.l 1
00023B5C <AmiBlitz3.ab3@5858> intline:    Ds.l 1
00023B5E <AmiBlitz3.ab3@5859> intstring:  Ds.w 1                                         ;flag 0 = no setint
00023B60 <AmiBlitz3.ab3@5862> intlevel:   Ds.w 1
00023B64 <AmiBlitz3.ab3@5863> intcleanat: Ds.l 1
00023B68 <AmiBlitz3.ab3@5864> ret15add:   Ds.l 1
00023B6A <AmiBlitz3.ab3@5865> ret15cc:    Ds.w 1
00023B72 <AmiBlitz3.ab3@5869>   ADDI.l #$12,$2(A7)
00023B7A <AmiBlitz3.ab3@5870>   MOVE.l $2(A7),ret15add
00023B80 <AmiBlitz3.ab3@5871>   MOVE.w (A7),ret15cc
00023B88 <AmiBlitz3.ab3@5872>   MOVE.l #directdo,$2(A7)
00023B8A <AmiBlitz3.ab3@5873> RTE
00023B8E <AmiBlitz3.ab3@5882>   MOVE.l ret15add(PC),-(A7)
00023B92 <AmiBlitz3.ab3@5883>   MOVE.w ret15cc(PC),-(A7)                                 ;15*4
00023B96 <AmiBlitz3.ab3@5884>   MOVEM.l D0-D7/A0-A6,-(A7)
00023BA0 <AmiBlitz3.ab3@5885>   MOVE.l destbufferend,trap15temp                          ;store high buff addr
00023BAA <AmiBlitz3.ab3@5886>   MOVE.l destbufferstart,trap15temp2
00023BB4 <AmiBlitz3.ab3@5887>   MOVE.l libend,templibend
00023BBE <AmiBlitz3.ab3@5888>   MOVE.l data1start,tempdata1start
00023BC4 <AmiBlitz3.ab3@5889>   CLR.l hunkoffsetcounter
00023BCA <AmiBlitz3.ab3@5891>   MOVE.l directbuffer,a0
00023BD0 <AmiBlitz3.ab3@5895>   MOVE.l a0,destbufferstart
00023BD6 <AmiBlitz3.ab3@5896>   ADD.l #3900,a0
00023BDC <AmiBlitz3.ab3@5897>   MOVE.l a0,destbufferend
00023BE2 <AmiBlitz3.ab3@5898>   TST.b exdebug
00023BE6 <AmiBlitz3.ab3@5899>   BEQ 'l1
00023BEC <AmiBlitz3.ab3@5900>   MOVE.l a0,libend
00023BF2 <AmiBlitz3.ab3@5901>   ADD.l #4000,a0
00023BF8 <AmiBlitz3.ab3@5902>   MOVE.l a0,data1start
00023C02 <AmiBlitz3.ab3@5905>   MOVE.l #'dircont,errcont
00023C08 <AmiBlitz3.ab3@5906> 
00023C0E <AmiBlitz3.ab3@5907>   MOVE.l A7,errstack
00023C16 <AmiBlitz3.ab3@5908>   MOVE.w #$FFFF,dirmode
00023C1A <AmiBlitz3.ab3@5910>     MOVEA.l ret15add(PC),A1
00023C20 <AmiBlitz3.ab3@5911>     MOVE.w -(A1),blitzmode
00023C22 <AmiBlitz3.ab3@5912>     CLR.l -(A1)
00023C28 <AmiBlitz3.ab3@5913>     MOVE.l -(A1),firstglob
00023C2E <AmiBlitz3.ab3@5914>     MOVE.l -(A1),firstlocal
00023C34 <AmiBlitz3.ab3@5916>   CLR.w proceduremode
00023C3A <AmiBlitz3.ab3@5917>   MOVE.l firstglob,D0
00023C40 <AmiBlitz3.ab3@5918>   OR.l firstlocal,D0
00023C44 <AmiBlitz3.ab3@5919>   BEQ.b 'skip
00023C4A <AmiBlitz3.ab3@5920>   NOT.w proceduremode
00023C4C <AmiBlitz3.ab3@5923>   MOVEA.l -(A1),A0                                         ;address of string
00023C4E <AmiBlitz3.ab3@5927>   MOVE.l A0,-(A7)
00023C8C <AmiBlitz3.ab3@5930>   !ComData_GetL{comFunc_DebugTrap,A1}
00023C8E <AmiBlitz3.ab3@5931>   JSR (A1)                                                 ;tokenise line.....
00023C90 <AmiBlitz3.ab3@5933>   MOVEA.l (A7)+,A5
00023C9A <AmiBlitz3.ab3@5934>   MOVE.l directbuffer,destpointer
00023CA0 <AmiBlitz3.ab3@5935>   TST.b exdebug
00023CA4 <AmiBlitz3.ab3@5936>   BEQ 'noexdebug
00023CA6 <AmiBlitz3.ab3@5937>   MOVE.l a5,a0
00023CAC <AmiBlitz3.ab3@5938>   MOVE.l #200,d0
00023CB2 <AmiBlitz3.ab3@5941>     MOVE.b 0(a0,d0.l),8(a0,d0.l)
00023CB6 <AmiBlitz3.ab3@5942>   DBF d0,'l2
00023CBC <AmiBlitz3.ab3@5947>   MOVE.l destpointer,a0
00023CC0 <AmiBlitz3.ab3@5948>   MOVE.w #$207c,(a0)+
00023CC2 <AmiBlitz3.ab3@5949>   MOVE.l a5,d0
00023CC8 <AmiBlitz3.ab3@5950>   ADD.l #$206,d0                                           ;constant from debuglib
00023CCA <AmiBlitz3.ab3@5951>   MOVE.l d0,(a0)+
00023CD0 <AmiBlitz3.ab3@5952>   MOVE.l a0,destpointer
00023CD2 <AmiBlitz3.ab3@5953>   MOVE.l a5,a0
00023CD6 <AmiBlitz3.ab3@5954>   MOVE.w #$8039,(a0)+                                      ;TokeJsr 164 (inputoutputlib) LSL 7+4
00023CDC <AmiBlitz3.ab3@5955>   MOVE.l #"$520",(a0)+
00023CE0 <AmiBlitz3.ab3@5956>   MOVE.w #"4:",(a0)+
00023CE6 <AmiBlitz3.ab3@5959>   CLR.w dontwrite_nomemleft
00023CEE <AmiBlitz3.ab3@5960>   MOVE.w #$FFFF,lasta6
00023CF2 <AmiBlitz3.ab3@5961>   BSR.w compile_line                                        ;.....compile it
00023CF8 <AmiBlitz3.ab3@5962>   TST.b exdebug
00023CFC <AmiBlitz3.ab3@5963>   BEQ 'noexdebug2
00023D02 <AmiBlitz3.ab3@5964>   JSR fixjsrs
00023D08 <AmiBlitz3.ab3@5967>   CLR.w proceduremode
00023D0C <AmiBlitz3.ab3@5968>   BSR.w errchx
00023D10 <AmiBlitz3.ab3@5969>   MOVE.w #$4EF9,D1
00023D14 <AmiBlitz3.ab3@5970>   BSR.w writeword                                          ;JMP
00023D18 <AmiBlitz3.ab3@5971>   MOVE.l ret15add(PC),D1
00023D1C <AmiBlitz3.ab3@5972>   BSR.w writelong                                          ;jmp to done
00023D22 <AmiBlitz3.ab3@5973>   MOVE.w dontwrite_nomemleft,D0
00023D26 <AmiBlitz3.ab3@5974>    BNE.w nodirmem
00023D2E <AmiBlitz3.ab3@5975>   MOVE.l directbuffer,$3E(A7)                              ;install code address
00023D34 <AmiBlitz3.ab3@5978>   CLR.w dirmode
00023D3A <AmiBlitz3.ab3@5979>   MOVE.w ret15cc(PC),$3C(A7)
00023D44 <AmiBlitz3.ab3@5980>   MOVE.l trap15temp,destbufferend
00023D4E <AmiBlitz3.ab3@5981>   MOVE.l trap15temp2,destbufferstart
00023D58 <AmiBlitz3.ab3@5982>   MOVE.l tempdata1start,data1start
00023D62 <AmiBlitz3.ab3@5983>   MOVE.l templibend,libend
00023D66 <AmiBlitz3.ab3@5984>   MOVEM.l (A7)+,D0-D7/A0-A6
00023D6A <AmiBlitz3.ab3@5985>   BSR.w Aclearcache                                        ;selden used
00023D6C <AmiBlitz3.ab3@5986> RTR
00023D70 <AmiBlitz3.ab3@5989>   MOVEA.l ret15add(PC),A0
00023D72 <AmiBlitz3.ab3@5990>   SUBQ.w #2,A0
00023D74 <AmiBlitz3.ab3@5991>   MOVE.l D0,-(A0)
00023D78 <AmiBlitz3.ab3@5992> BRA.w 'direxit
00023D7C <AmiBlitz3.ab3@5996>   MOVE.w $6(A3),D1
00023D80 <AmiBlitz3.ab3@5997>   BSR.w uselib                                             ;get lib for base address
00023D84 <AmiBlitz3.ab3@5998>   MOVE.w $A(A1),-(A7)                                      ;libbase reg
00023D86 <AmiBlitz3.ab3@5999>   ADDQ.w #8,A3
00023D88 <AmiBlitz3.ab3@6000>   MOVE.w (A3)+,-(A7)                                       ;get offset for lib
00023D8A <AmiBlitz3.ab3@6001>   MOVE.l A3,-(A7)
00023D8C <AmiBlitz3.ab3@6005>   MOVEQ.l #$00,D3
00023D92 <AmiBlitz3.ab3@6007>   JSR checka4a5
00023D94 <AmiBlitz3.ab3@6011>   MOVE.b (A3)+,D1
00023D98 <AmiBlitz3.ab3@6012>    BMI.w 'done
00023D9A <AmiBlitz3.ab3@6013>   MOVEQ.l #$03,D2
00023D9C <AmiBlitz3.ab3@6014>   ADDQ.w #1,D3
00023DA0 <AmiBlitz3.ab3@6015>   MOVEM.l D3/A3,-(A7)
00023DA6 <AmiBlitz3.ab3@6017>   MOVE.b funcparloop,-(a7)
00023DAE <AmiBlitz3.ab3@6018>   MOVE.b #0,funcparloop
00023DB4 <AmiBlitz3.ab3@6019>   MOVE.l leftsidetype,-(a7)
00023DBA <AmiBlitz3.ab3@6020>   MOVE.l rightsidetype,-(a7)
00023DC0 <AmiBlitz3.ab3@6021>   MOVE.w leftsideflagmask,-(a7)
00023DC6 <AmiBlitz3.ab3@6022>   MOVE.w rightsideflagmask,-(a7)
00023DCC <AmiBlitz3.ab3@6023>   CLR.l leftsidetype
00023DD2 <AmiBlitz3.ab3@6024>   CLR.l rightsidetype
00023DD8 <AmiBlitz3.ab3@6025>   CLR.w leftsideflagmask
00023DDE <AmiBlitz3.ab3@6026>   CLR.w rightsideflagmask
00023DE4 <AmiBlitz3.ab3@6027>   MOVE.b blitzparloop,-(a7)
00023DEC <AmiBlitz3.ab3@6028>   MOVE.b #1,blitzparloop                                 ;write the parameter to stack
00023DF2 <AmiBlitz3.ab3@6030>   JSR peval
00023DF8 <AmiBlitz3.ab3@6032>   MOVE.b (a7)+,blitzparloop
00023DFE <AmiBlitz3.ab3@6033>   MOVE.w (a7)+,rightsideflagmask
00023E04 <AmiBlitz3.ab3@6034>   MOVE.w (a7)+,leftsideflagmask
00023E0A <AmiBlitz3.ab3@6035>   MOVE.l (a7)+,rightsidetype
00023E10 <AmiBlitz3.ab3@6036>   MOVE.l (a7)+,leftsidetype
00023E16 <AmiBlitz3.ab3@6037>   MOVE.b (a7)+,funcparloop
00023E1A <AmiBlitz3.ab3@6038>   MOVEM.l (A7)+,D3/A3
00023E1E <AmiBlitz3.ab3@6040>   CMP.w #$2C,D0     ; ','
00023E22 <AmiBlitz3.ab3@6041>    BEQ.w 'loop
00023E24 <AmiBlitz3.ab3@6042>   TST.b (A3)
00023E28 <AmiBlitz3.ab3@6043>    BPL.w syntaxerr
00023E2A <AmiBlitz3.ab3@6046>   MOVEA.l (A7)+,A3
00023E2C <AmiBlitz3.ab3@6047>   SUBQ.w #1,D3
00023E30 <AmiBlitz3.ab3@6048>    BPL.w 'toend
00023E34 <AmiBlitz3.ab3@6049>    BSR.w get1bytemain                                      ;no pars - get :
00023E38 <AmiBlitz3.ab3@6050>  BRA.w 'nopars
00023E3A <AmiBlitz3.ab3@6053>   TST.b (A3)+                                              ;go to end of params
00023E3E <AmiBlitz3.ab3@6054>    BPL.w 'toend
00023E40 <AmiBlitz3.ab3@6055>   SUBQ.w #1,A3
00023E42 <AmiBlitz3.ab3@6058>    MOVEQ.l #$00,D1
00023E44 <AmiBlitz3.ab3@6059>    MOVE.b -(A3),D1
00023E48 <AmiBlitz3.ab3@6060>    BTST #$4,D1
00023E4C <AmiBlitz3.ab3@6061>     BNE.w 'addreg
00023E4E <AmiBlitz3.ab3@6062>    LSL.w #8,D1
00023E50 <AmiBlitz3.ab3@6063>    LSL.w #1,D1
00023E54 <AmiBlitz3.ab3@6064>    ORI.w #$201F,D1
00023E58 <AmiBlitz3.ab3@6065>  BRA.w 'gotit
00023E5C <AmiBlitz3.ab3@6068>    ANDI.w #$7,D1
00023E5E <AmiBlitz3.ab3@6069>    LSL.w #8,D1
00023E60 <AmiBlitz3.ab3@6070>    LSL.w #1,D1
00023E64 <AmiBlitz3.ab3@6071>    ORI.w #$205F,D1
00023E68 <AmiBlitz3.ab3@6074>     BSR.w writeword
00023E6C <AmiBlitz3.ab3@6075>   DBF D3,'loop2
00023E72 <AmiBlitz3.ab3@6078>   MOVE.w (A7)+,libjsr+2
00023E78 <AmiBlitz3.ab3@6079>   MOVE.w (A7)+,libbase+2
00023E7E <AmiBlitz3.ab3@6080>   MOVE.l libbase,D1
00023E82 <AmiBlitz3.ab3@6081>    BSR.w writelong
00023E88 <AmiBlitz3.ab3@6082>   MOVE.l libjsr,D1
00023E8E <AmiBlitz3.ab3@6083>   JSR writelong
00023E94 <AmiBlitz3.ab3@6085>   JSR restorea4a5
00023E96 <AmiBlitz3.ab3@6087> RTS
00023E9C <AmiBlitz3.ab3@6094>   MOVE.l data1,D4
00023EA2 <AmiBlitz3.ab3@6095>   SUB.l data1start,D4
00023EA8 <AmiBlitz3.ab3@6096>   ADD.l #10000,d4
00023EAE <AmiBlitz3.ab3@6097>   MOVE.l libend,D3
00023EB4 <AmiBlitz3.ab3@6098>   SUB.l destbufferend,D3
00023EBA <AmiBlitz3.ab3@6099>   ADD.l #40000,d3
00023EC0 <AmiBlitz3.ab3@6100>   MOVE.l bigpc,D2
00023EC6 <AmiBlitz3.ab3@6101>   SUB.l destbufferstart,D2
00023ECC <AmiBlitz3.ab3@6102>   ADD.l #20000,d2
00023ED2 <AmiBlitz3.ab3@6103>   MOVE.l databuffer,D5
00023ED8 <AmiBlitz3.ab3@6104>   ADD.l #10000,D5
00023EDC <AmiBlitz3.ab3@6105>  BRA newallox
00023EE2 <AmiBlitz3.ab3@6108>   MOVE.l objectbuffer,D2       ;??Looks like unused code??
00023EE4 <AmiBlitz3.ab3@6109>   LSR.l #1,D2
00023EEA <AmiBlitz3.ab3@6110>   ADD.l objectbuffer,D2
00023EF0 <AmiBlitz3.ab3@6112>   MOVE.l libsbuffer,D3
00023EF2 <AmiBlitz3.ab3@6113>   LSR.l #1,D3
00023EF8 <AmiBlitz3.ab3@6114>   ADD.l libsbuffer,D3
00023EFE <AmiBlitz3.ab3@6116>   MOVE.l systembuffer,D4
00023F00 <AmiBlitz3.ab3@6117>   LSR.l #1,D4
00023F06 <AmiBlitz3.ab3@6118>   ADD.l systembuffer,D4
00023F0C <AmiBlitz3.ab3@6120>   MOVE.l databuffer,D5
00023F0E <AmiBlitz3.ab3@6121>   LSR.l #1,D5
00023F14 <AmiBlitz3.ab3@6122>   ADD.l databuffer,D5
00023F18 <AmiBlitz3.ab3@6124> BRA.w newallox
00023F1E <AmiBlitz3.ab3@6128>   MOVE.l bigpc,D2
00023F24 <AmiBlitz3.ab3@6129>   SUB.l destbufferstart,D2                                     ;size of object buffer
00023F2A <AmiBlitz3.ab3@6130>   SUB.l savefuncspace,d2
00023F30 <AmiBlitz3.ab3@6132>   TST.w debugversion
00023F34 <AmiBlitz3.ab3@6133>    BNE.b 'skip
00023F3A <AmiBlitz3.ab3@6134>   ADDI.l #$800,D2
00023F40 <AmiBlitz3.ab3@6137>   MOVE.l libend,D3
00023F46 <AmiBlitz3.ab3@6138>   SUB.l destbufferend,D3
00023F4C <AmiBlitz3.ab3@6142>   MOVE.l data1,D4
00023F52 <AmiBlitz3.ab3@6143>   SUB.l data1start,D4
00023F58 <AmiBlitz3.ab3@6147>   MOVE.l data2,D5
00023F5E <AmiBlitz3.ab3@6148>   SUB.l data2at,D5
00023F64 <AmiBlitz3.ab3@6151>   CLR.l morememadd
00023F68 <AmiBlitz3.ab3@6155>   BSR.w makeallox
00023F6C <AmiBlitz3.ab3@6156>   BNE.w 'done
00023F70 <AmiBlitz3.ab3@6157>  BRA.w init_buffers
00023F72 <AmiBlitz3.ab3@6160> RTS
00023F78 <AmiBlitz3.ab3@6164>   MOVEA.l _execbase,A6
00023F7E <AmiBlitz3.ab3@6165>   MOVE.l objlen,D0
00023F82 <AmiBlitz3.ab3@6166>   BEQ.w 'skip
00023F88 <AmiBlitz3.ab3@6167>   CLR.l objlen
00023F8E <AmiBlitz3.ab3@6168>   MOVEA.l destbufferstart,A1
00023F94 <AmiBlitz3.ab3@6170>   MOVE.l mempool,a0
00023F98 <AmiBlitz3.ab3@6171> JMP _FreeVec(A6)
00023F9A <AmiBlitz3.ab3@6176> RTS
00023FA0 <AmiBlitz3.ab3@6180>   MOVE.l objectbuffer,D2
00023FA6 <AmiBlitz3.ab3@6181>   MOVE.l libsbuffer,D3
00023FAC <AmiBlitz3.ab3@6182>   MOVE.l systembuffer,D4
00023FB2 <AmiBlitz3.ab3@6183>   MOVE.l databuffer,D5
00023FBA <AmiBlitz3.ab3@6188>   MOVE.w #$FFFF,anyerrs      ; was -1
00023FBE <AmiBlitz3.ab3@6189>   BSR.w freeallox
00023FC0 <AmiBlitz3.ab3@6193>   ADDQ.l #1,D2
00023FC4 <AmiBlitz3.ab3@6194>   BCLR #$0,D2
00023FC6 <AmiBlitz3.ab3@6195>   ADDQ.l #1,D3
00023FCA <AmiBlitz3.ab3@6196>   BCLR #$0,D3
00023FCC <AmiBlitz3.ab3@6197>   ADDQ.l #1,D4
00023FD0 <AmiBlitz3.ab3@6198>   BCLR #$0,D4
00023FD2 <AmiBlitz3.ab3@6200>   TST.l d5        ; ??? make no sence ??
00023FD6 <AmiBlitz3.ab3@6201>   BNE 'l1
00023FD8 <AmiBlitz3.ab3@6205>   ADDQ.l #1,D5
00023FDC <AmiBlitz3.ab3@6206>   BCLR #$0,D5
00023FDE <AmiBlitz3.ab3@6208>   MOVE.l D2,D0
00023FE0 <AmiBlitz3.ab3@6209>   ADD.l D3,D0
00023FE2 <AmiBlitz3.ab3@6210>   ADD.l D4,D0
00023FE4 <AmiBlitz3.ab3@6211>   ADD.l D5,D0
00023FEA <AmiBlitz3.ab3@6213>   ADD.l #moremem,d0
00023FEC <AmiBlitz3.ab3@6215>   MOVE.l D0,D6
00023FF2 <AmiBlitz3.ab3@6216>   MOVE.l #MemfPublic_MemfClear,D1
00023FF8 <AmiBlitz3.ab3@6218>   MOVE.l mempool,a0
00023FFE <AmiBlitz3.ab3@6219>   MOVEA.l _execbase,A6
00024002 <AmiBlitz3.ab3@6220>   JSR _AllocVec(a6)                                        ;alloc mem for objectbuffer
00024004 <AmiBlitz3.ab3@6223>   TST.l D0
00024008 <AmiBlitz3.ab3@6224>   BEQ.w 'done
0002400E <AmiBlitz3.ab3@6225>   MOVE.l D6,objlen
00024014 <AmiBlitz3.ab3@6226>   MOVE.l D2,objectbuffer
0002401A <AmiBlitz3.ab3@6227>   MOVE.l D3,libsbuffer
00024020 <AmiBlitz3.ab3@6228>   MOVE.l D4,systembuffer
00024026 <AmiBlitz3.ab3@6229>   MOVE.l D5,databuffer
0002402C <AmiBlitz3.ab3@6230>   MOVE.l D0,destbufferstart
00024060 <AmiBlitz3.ab3@6234>   !ComData_SetL{comPtr_DestBufferStart,D0}
00024062 <AmiBlitz3.ab3@6236>   ADD.l D2,D0
00024068 <AmiBlitz3.ab3@6237>   MOVE.l D0,destbufferend
0002406A <AmiBlitz3.ab3@6238>   ADD.l D3,D0
00024070 <AmiBlitz3.ab3@6239>   MOVE.l D0,data1start
00024072 <AmiBlitz3.ab3@6240>   ADD.l D4,D0
00024078 <AmiBlitz3.ab3@6241>   MOVE.l D0,data2at
0002407A <AmiBlitz3.ab3@6242>   ADD.l D5,D0
00024080 <AmiBlitz3.ab3@6243>   MOVE.l D0,allat
00024082 <AmiBlitz3.ab3@6246> RTS
00024086 <AmiBlitz3.ab3@6250>   Dc.b $00,$00,$00,$01                                     ;         1
0002408A <AmiBlitz3.ab3@6251>   Dc.b $00,$00,$00,$0A                                     ;        10
0002408E <AmiBlitz3.ab3@6252>   Dc.b $00,$00,$00,$64                                     ;       100
00024092 <AmiBlitz3.ab3@6253>   Dc.b $00,$00,$03,$E8                                     ;      1000
00024096 <AmiBlitz3.ab3@6254>   Dc.b $00,$00,$27,$10                                     ;     10000
0002409A <AmiBlitz3.ab3@6255>   Dc.b $00,$01,$86,$A0                                     ;    100000
0002409E <AmiBlitz3.ab3@6256>   Dc.b $00,$0F,$42,$40                                     ;   1000000
000240A2 <AmiBlitz3.ab3@6257>   Dc.b $00,$98,$96,$80                                     ;  10000000
000240A6 <AmiBlitz3.ab3@6258>   Dc.b $05,$F5,$E1,$00                                     ; 100000000
000240AA <AmiBlitz3.ab3@6259>   Dc.b $3B,$9A,$CA,$00                                     ;1000000000
000240AC <AmiBlitz3.ab3@6263>   MOVEQ.l #$00,D1                                          ;no zero printed
000240AE <AmiBlitz3.ab3@6264>   MOVEQ.l #$24,D3                                          ; "$"
000240B0 <AmiBlitz3.ab3@6267>   MOVEQ.l #$30,D4                                          ; "0"
000240B4 <AmiBlitz3.ab3@6270>     CMP.l divisors(PC,D3.W),D2
000240B8 <AmiBlitz3.ab3@6271>     BCS.w 'skip
000240BC <AmiBlitz3.ab3@6272>     SUB.l divisors(PC,D3.W),D2
000240BE <AmiBlitz3.ab3@6273>     ADDQ.w #1,D4
000240C2 <AmiBlitz3.ab3@6274>  BRA.w 'loop2
000240C6 <AmiBlitz3.ab3@6277>   CMP.b #"0",D4
000240CA <AmiBlitz3.ab3@6278>   BNE.w 'doit
000240CC <AmiBlitz3.ab3@6279>   TST.w D1
000240D0 <AmiBlitz3.ab3@6280>   BEQ.w 'skip2
000240D2 <AmiBlitz3.ab3@6283>   MOVE.b D4,(A0)+
000240D4 <AmiBlitz3.ab3@6284>   MOVEQ.l #$01,D1
000240D6 <AmiBlitz3.ab3@6287>   SUBQ.w #4,D3
000240DA <AmiBlitz3.ab3@6288>   BPL.w 'loop
000240DC <AmiBlitz3.ab3@6289>   TST.w D1
000240E0 <AmiBlitz3.ab3@6290>   BNE.w 'skip3
000240E4 <AmiBlitz3.ab3@6291>   MOVE.b #"0",(A0)+
000240E6 <AmiBlitz3.ab3@6294>   CLR.b (A0)
000240E8 <AmiBlitz3.ab3@6295> RTS
00024108 <AmiBlitz3.ab3@6298> str_residentrequester:  Dc.b "Name of Resident File to Create",0 : Even        ;restext org source
000241C8 <AmiBlitz3.ab3@6299> str_residentpath:       Ds.l 48                                                ;respath org source
00024288 <AmiBlitz3.ab3@6300> str_residentname:       Ds.l 48                                                ;resname org source
0002428E <AmiBlitz3.ab3@6306>   MOVE.l macrobase,D0
00024292 <AmiBlitz3.ab3@6307>    BNE.w 'skip
00024298 <AmiBlitz3.ab3@6308>   MOVE.l newtype_string,D0
0002429C <AmiBlitz3.ab3@6309>    BNE.w 'skip
000242A2 <AmiBlitz3.ab3@6310>   MOVEA.l labelbase,A2
000242A6 <AmiBlitz3.ab3@6313>     CMPA.w #$0,A2
000242AA <AmiBlitz3.ab3@6314>      BEQ.w 'err
000242B2 <AmiBlitz3.ab3@6315>     CMPI.l #$1,$4(A2)
000242B6 <AmiBlitz3.ab3@6316>      BEQ.w 'skip
000242B8 <AmiBlitz3.ab3@6317>     MOVEA.l (A2),A2
000242BC <AmiBlitz3.ab3@6318>  BRA.w 'loop
000242E6 <AmiBlitz3.ab3@6322>   !basic
00024348 <AmiBlitz3.ab3@6323> 
00024366 <AmiBlitz3.ab3@6324>   !asm
00024368 <AmiBlitz3.ab3@6326>  RTS
000243A6 <AmiBlitz3.ab3@6331>   !ComData_GetL{comFunc_ASLFileRequest,A3}
000243AC <AmiBlitz3.ab3@6332>   LEA str_residentrequester,A2
000243B2 <AmiBlitz3.ab3@6333>   LEA str_residentpath,A0
000243B8 <AmiBlitz3.ab3@6334>   LEA str_residentname,A1
000243E2 <AmiBlitz3.ab3@6336>   !basic
0002441A <AmiBlitz3.ab3@6337>     Poke$ ?str_residentpath,my_residentsdir$
00024446 <AmiBlitz3.ab3@6338>     Poke$ ?str_residentname,".res"
00024464 <AmiBlitz3.ab3@6339>   !asm
00024466 <AmiBlitz3.ab3@6341>   JSR (A3)                                                 ;open ped filerequest
0002446A <AmiBlitz3.ab3@6342>   BEQ.w 'err
0002446C <AmiBlitz3.ab3@6346>   MOVE.l D0,D1
00024472 <AmiBlitz3.ab3@6347>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00024476 <AmiBlitz3.ab3@6348>   MOVEA.l _dosbase(PC),A6
0002447A <AmiBlitz3.ab3@6349>   JSR _Open(A6)
0002447C <AmiBlitz3.ab3@6350>   MOVE.l D0,D7               ;handle                                ;handle
00024480 <AmiBlitz3.ab3@6351>   BEQ.w 'err
00024484 <AmiBlitz3.ab3@6353>   MOVEM.l d2-d7/a0-a6,-(a7)
0002448A <AmiBlitz3.ab3@6354>   LEA devo,a0
00024490 <AmiBlitz3.ab3@6355>   LEA ptr_parameterstore,a1
00024492 <AmiBlitz3.ab3@6358>     MOVE.b (a0)+,(a1)+
00024496 <AmiBlitz3.ab3@6359>   BNE 'l1
00024498 <AmiBlitz3.ab3@6360>   MOVEQ #13,d2
0002449E <AmiBlitz3.ab3@6361>   JSR findlabel2
000244A2 <AmiBlitz3.ab3@6362>   BNE 'd
000244A6 <AmiBlitz3.ab3@6363>   TST.l 8(a2)
000244AA <AmiBlitz3.ab3@6364>   BEQ 'd2
000244D4 <AmiBlitz3.ab3@6365>   !basic
00024536 <AmiBlitz3.ab3@6366>     error{!TRANS{"Cannot create Resident with develope debug 1"}}
00024554 <AmiBlitz3.ab3@6367>   !asm
00024558 <AmiBlitz3.ab3@6368>   MOVEM.l (a7)+,d2-d7/a0-a6
0002455C <AmiBlitz3.ab3@6369>   MOVEA.l _dosbase(PC),A6
0002455E <AmiBlitz3.ab3@6370>   MOVE.l d7,d1
00024562 <AmiBlitz3.ab3@6371>   JSR _Close(a6)
00024566 <AmiBlitz3.ab3@6372>  BRA 'err
0002456A <AmiBlitz3.ab3@6376>   MOVEM.l (a7)+,d2-d7/a0-a6
0002456E <AmiBlitz3.ab3@6378>   BSR.w call_setpointerbusy
00024572 <AmiBlitz3.ab3@6380>   BSR.w killoffs
00024574 <AmiBlitz3.ab3@6382>   MOVE.l D7,D1
0002457A <AmiBlitz3.ab3@6383>   MOVE.l #tsthead,D2        ;header                               ;header
0002457C <AmiBlitz3.ab3@6384>   MOVEQ.l #$20,D3
00024580 <AmiBlitz3.ab3@6385>   MOVEA.l _dosbase(PC),A6
00024584 <AmiBlitz3.ab3@6386>   JSR _Write(A6)
00024586 <AmiBlitz3.ab3@6388>   MOVEQ.l #$00,D6           ;offset from start of file!                               ;offset from start of file!
0002458A <AmiBlitz3.ab3@6389>   BSR.w restypes
0002458E <AmiBlitz3.ab3@6390>   BSR.w resmacs
00024592 <AmiBlitz3.ab3@6391>   BSR.w resconsts
00024594 <AmiBlitz3.ab3@6393>   MOVE.l D6,D3
00024596 <AmiBlitz3.ab3@6394>   ADDQ.l #3,D3
0002459C <AmiBlitz3.ab3@6395>   ANDI.l #$FFFFFFFC,D3      ;long word align                               ;long word align
0002459E <AmiBlitz3.ab3@6396>   MOVE.l D3,-(A7)
000245A0 <AmiBlitz3.ab3@6397>   SUB.l D6,D3
000245A4 <AmiBlitz3.ab3@6398>   BEQ.w 'noalign
000245AA <AmiBlitz3.ab3@6399>   MOVE.l #writelist,D2      ; was #hello,
000245AC <AmiBlitz3.ab3@6400>   MOVE.l D7,D1
000245B2 <AmiBlitz3.ab3@6401>   MOVEA.l _dosbase,A6
000245B6 <AmiBlitz3.ab3@6402>   JSR _Write(A6)
000245C0 <AmiBlitz3.ab3@6405>    MOVE.l hunkoffsetcounter,tstsize3
000245C4 <AmiBlitz3.ab3@6406>    BEQ.w 'skip2a
000245C6 <AmiBlitz3.ab3@6407>   MOVE.l D7,D1
000245CC <AmiBlitz3.ab3@6408>   MOVE.l #tstend,D2
000245CE <AmiBlitz3.ab3@6409>   MOVEQ.l #$0C,D3
000245D4 <AmiBlitz3.ab3@6410>   MOVEA.l _dosbase,A6
000245D8 <AmiBlitz3.ab3@6411>    JSR _Write(A6)
000245DE <AmiBlitz3.ab3@6415>   MOVEA.l hunkoffsetbase,A2
000245E2 <AmiBlitz3.ab3@6418>   CMPA.w #$0,A2
000245E6 <AmiBlitz3.ab3@6419>    BEQ.w 'skip2
000245EA <AmiBlitz3.ab3@6420>   LEA $4(A2),A1
000245EC <AmiBlitz3.ab3@6421>   MOVE.l D7,D1
000245EE <AmiBlitz3.ab3@6422>   MOVE.l A1,D2
000245F0 <AmiBlitz3.ab3@6423>   MOVEQ.l #$04,D3
000245F6 <AmiBlitz3.ab3@6424>   MOVEA.l _dosbase,A6
000245FA <AmiBlitz3.ab3@6425>    JSR _Write(A6)
000245FC <AmiBlitz3.ab3@6426>   MOVEA.l (A2),A2
00024600 <AmiBlitz3.ab3@6427>  BRA.w 'oloop
00024602 <AmiBlitz3.ab3@6430>   MOVE.l D7,D1
00024608 <AmiBlitz3.ab3@6431>   MOVE.l #zero,D2
0002460A <AmiBlitz3.ab3@6432>   MOVEQ.l #$04,D3
00024610 <AmiBlitz3.ab3@6433>   MOVEA.l _dosbase,A6
00024614 <AmiBlitz3.ab3@6434>   JSR _Write(A6)
00024616 <AmiBlitz3.ab3@6437>   MOVE.l D7,D1
0002461C <AmiBlitz3.ab3@6438>   MOVE.l #tstdone,D2
0002461E <AmiBlitz3.ab3@6439>   MOVEQ.l #$04,D3
00024624 <AmiBlitz3.ab3@6440>   MOVEA.l _dosbase,A6
00024628 <AmiBlitz3.ab3@6441>    JSR _Write(A6)
0002462A <AmiBlitz3.ab3@6442>   MOVE.l (A7)+,D0
0002462C <AmiBlitz3.ab3@6443>   LSR.l #2,D0
00024632 <AmiBlitz3.ab3@6444>   MOVE.l D0,temp1
00024634 <AmiBlitz3.ab3@6446>   MOVE.l D7,D1
00024636 <AmiBlitz3.ab3@6447>   MOVEQ.l #$14,D2
00024638 <AmiBlitz3.ab3@6448>   MOVEQ.l #-$01,D3
0002463C <AmiBlitz3.ab3@6449>   JSR _Seek(A6)
0002463E <AmiBlitz3.ab3@6450>   MOVE.l D7,D1
00024644 <AmiBlitz3.ab3@6451>   MOVE.l #temp1,D2
00024646 <AmiBlitz3.ab3@6452>   MOVEQ.l #$04,D3
0002464A <AmiBlitz3.ab3@6453>    JSR _Write(A6)
0002464C <AmiBlitz3.ab3@6454>   MOVE.l D7,D1
0002464E <AmiBlitz3.ab3@6455>   MOVEQ.l #$1C,D2
00024650 <AmiBlitz3.ab3@6456>   MOVEQ.l #-$01,D3
00024654 <AmiBlitz3.ab3@6457>    JSR _Seek(A6)
00024656 <AmiBlitz3.ab3@6458>   MOVE.l D7,D1
0002465C <AmiBlitz3.ab3@6459>   MOVE.l #temp1,D2
0002465E <AmiBlitz3.ab3@6460>   MOVEQ.l #$04,D3
00024662 <AmiBlitz3.ab3@6461>    JSR _Write(A6)
00024664 <AmiBlitz3.ab3@6463>   MOVE.l D7,D1
00024668 <AmiBlitz3.ab3@6464>    JSR _Close(A6)
0002466C <AmiBlitz3.ab3@6465> BRA.w call_setpointernormal
0002466E <AmiBlitz3.ab3@6471>   ADDQ.w #5,D1
00024670 <AmiBlitz3.ab3@6472>   ADDQ.b #8,D0
00024674 <AmiBlitz3.ab3@6476>     CMPA.w #$0,A2
00024678 <AmiBlitz3.ab3@6477>     BEQ.w 'done
0002467C <AmiBlitz3.ab3@6478>      BSR.w writeitem
0002467E <AmiBlitz3.ab3@6479>     MOVEA.l (A2),A2
00024682 <AmiBlitz3.ab3@6480>  BRA.w 'loop
00024684 <AmiBlitz3.ab3@6483> RTS
00024686 <AmiBlitz3.ab3@6487>   MOVEQ.l #$00,D3
0002468A <AmiBlitz3.ab3@6488>   MOVE.b $0(A2,D5.W),D3
0002468C <AmiBlitz3.ab3@6489>   ADDQ.w #1,D3
00024690 <AmiBlitz3.ab3@6490>   BCLR #$0,D3                                              ;word align
00024692 <AmiBlitz3.ab3@6491>   MOVE.l (A2),-(A7)
00024696 <AmiBlitz3.ab3@6492>    BEQ.w 'skip
0002469A <AmiBlitz3.ab3@6493>    BSR.w 'resoff
0002469C <AmiBlitz3.ab3@6494>   ADD.l D3,D6
0002469E <AmiBlitz3.ab3@6495>   MOVE.l D6,(A2)
000246A0 <AmiBlitz3.ab3@6496>   SUB.l D3,D6
000246A2 <AmiBlitz3.ab3@6499>    ADD.l D3,D6
000246A4 <AmiBlitz3.ab3@6500>   MOVE.l A2,D2
000246A6 <AmiBlitz3.ab3@6501>   MOVE.l D7,D1
000246AC <AmiBlitz3.ab3@6502>   MOVEA.l _dosbase,A6
000246B0 <AmiBlitz3.ab3@6503>    JSR _Write(A6)
000246B2 <AmiBlitz3.ab3@6504>   MOVE.l (A7)+,(A2)
000246B4 <AmiBlitz3.ab3@6505>  RTS
000246B6 <AmiBlitz3.ab3@6508>   MOVE.l D6,D2
000246BA <AmiBlitz3.ab3@6509> BRA.w addhunkoffset
000246BE <AmiBlitz3.ab3@6516>     CMPA.w #$0,A2
000246C2 <AmiBlitz3.ab3@6517>      BEQ.w 'done
000246C8 <AmiBlitz3.ab3@6518>     MOVEA.l newtypebase,A1
000246CA <AmiBlitz3.ab3@6519>     MOVEQ.l #$00,D1
000246CE <AmiBlitz3.ab3@6522>       CMPA.w #$0,A1
000246D2 <AmiBlitz3.ab3@6523>       BEQ.w 'found
000246D6 <AmiBlitz3.ab3@6524>       CMPA.l $A(A2),A1
000246DA <AmiBlitz3.ab3@6525>        BEQ.w 'found
000246DC <AmiBlitz3.ab3@6526>       ADDQ.w #1,D1
000246DE <AmiBlitz3.ab3@6527>       MOVEA.l (A1),A1
000246E2 <AmiBlitz3.ab3@6528>  BRA.w 'loop2
000246E6 <AmiBlitz3.ab3@6531>     MOVE.w $A(A2),-(A7)
000246EA <AmiBlitz3.ab3@6532>     MOVE.w D1,$A(A2)
000246EE <AmiBlitz3.ab3@6533>      BSR.w writeitem
000246F2 <AmiBlitz3.ab3@6534>     MOVE.w (A7)+,$A(A2)
000246F4 <AmiBlitz3.ab3@6535>     MOVEA.l (A2),A2
000246F8 <AmiBlitz3.ab3@6536>  BRA.w 'loop
000246FA <AmiBlitz3.ab3@6539> RTS
000246FC <AmiBlitz3.ab3@6543>   MOVEQ.l #$00,D0
00024700 <AmiBlitz3.ab3@6546>   CMPA.w #$0,A2
00024704 <AmiBlitz3.ab3@6547>    BEQ.w 'done
00024706 <AmiBlitz3.ab3@6548>   ADDQ.w #1,D0
00024708 <AmiBlitz3.ab3@6549>   MOVEA.l (A2),A2
0002470C <AmiBlitz3.ab3@6550>  BRA.w 'loop
00024712 <AmiBlitz3.ab3@6553>   MOVE.w D0,temp1
00024714 <AmiBlitz3.ab3@6554>   MOVE.l D7,D1
0002471A <AmiBlitz3.ab3@6555>   MOVE.l #temp1,D2
0002471C <AmiBlitz3.ab3@6556>   MOVEQ.l #$02,D3
0002471E <AmiBlitz3.ab3@6557>   ADDQ.l #2,D6
00024724 <AmiBlitz3.ab3@6558>   MOVEA.l _dosbase,A6
00024728 <AmiBlitz3.ab3@6559> JMP _Write(A6)
0002472E <AmiBlitz3.ab3@6566>    TST.b resdisable
00024732 <AmiBlitz3.ab3@6567>    BEQ 'l1
00024738 <AmiBlitz3.ab3@6568>    MOVE.l currentmacroaddr,a3
0002473E <AmiBlitz3.ab3@6569>    CMP.l #0,a3
00024742 <AmiBlitz3.ab3@6570>    BEQ 'l1
00024744 <AmiBlitz3.ab3@6571>    MOVE.l (a3),a3
00024748 <AmiBlitz3.ab3@6572>  BRA 'l2
0002474E <AmiBlitz3.ab3@6576>   MOVEA.l macrobase,A3                                     ;??begin org code??
00024750 <AmiBlitz3.ab3@6579>   MOVEA.l A3,A2
00024754 <AmiBlitz3.ab3@6580>   BSR.w countem
00024758 <AmiBlitz3.ab3@6583>    CMPA.w #$0,A3
0002475C <AmiBlitz3.ab3@6584>    BEQ.w 'done
0002475E <AmiBlitz3.ab3@6585>   MOVE.l D6,D5
00024760 <AmiBlitz3.ab3@6586>   MOVE.l (A3),-(A7)
00024764 <AmiBlitz3.ab3@6587>   MOVE.l $4(A3),-(A7)
00024766 <AmiBlitz3.ab3@6588>   MOVEQ.l #$00,D3
0002476A <AmiBlitz3.ab3@6589>   MOVE.b $C(A3),D3
0002476C <AmiBlitz3.ab3@6590>   ADDQ.w #1,D3
00024770 <AmiBlitz3.ab3@6591>   BCLR #$0,D3
00024772 <AmiBlitz3.ab3@6592>   ADD.l D3,D6                                              ;add len of struct
00024776 <AmiBlitz3.ab3@6593>   TST.w $8(A3)
0002477A <AmiBlitz3.ab3@6594>    BEQ.w 'notext
0002477E <AmiBlitz3.ab3@6595>   MOVE.l D6,$4(A3)
00024780 <AmiBlitz3.ab3@6596>   MOVE.l D5,D2
00024782 <AmiBlitz3.ab3@6597>   ADDQ.l #4,D2
00024786 <AmiBlitz3.ab3@6598>    BSR.w addhunkoffset
00024788 <AmiBlitz3.ab3@6601>   MOVEQ.l #$00,D4
0002478C <AmiBlitz3.ab3@6602>   MOVE.w $8(A3),D4
0002478E <AmiBlitz3.ab3@6603>   ADDQ.w #1,D4
00024792 <AmiBlitz3.ab3@6604>   BCLR #$0,D4
00024794 <AmiBlitz3.ab3@6605>   ADD.l D4,D6
00024796 <AmiBlitz3.ab3@6606>   TST.l (A3)
0002479A <AmiBlitz3.ab3@6607>    BEQ.w 'nomore
0002479C <AmiBlitz3.ab3@6608>   MOVE.l D6,(A3)
0002479E <AmiBlitz3.ab3@6609>   MOVE.l D5,D2
000247A2 <AmiBlitz3.ab3@6610>    BSR.w addhunkoffset
000247A4 <AmiBlitz3.ab3@6613>   MOVE.l A3,D2
000247A6 <AmiBlitz3.ab3@6614>   MOVE.l D7,D1
000247AC <AmiBlitz3.ab3@6615>    MOVEA.l _dosbase,A6
000247B0 <AmiBlitz3.ab3@6616>    JSR _Write(a6)
000247B2 <AmiBlitz3.ab3@6617>   TST.l D4
000247B6 <AmiBlitz3.ab3@6618>    BEQ.w 'skip
000247B8 <AmiBlitz3.ab3@6619>   MOVE.l (A7),D2
000247BA <AmiBlitz3.ab3@6620>   MOVE.l D4,D3
000247BC <AmiBlitz3.ab3@6621>   MOVE.l D7,D1
000247C2 <AmiBlitz3.ab3@6622>     MOVEA.l _dosbase,A6
000247C6 <AmiBlitz3.ab3@6623>    JSR _Write(A6)
000247CA <AmiBlitz3.ab3@6626>   MOVE.l (A7)+,$4(A3)
000247CC <AmiBlitz3.ab3@6627>   MOVE.l (A7)+,(A3)
000247CE <AmiBlitz3.ab3@6628>   MOVEA.l (A3),A3
000247D2 <AmiBlitz3.ab3@6629>  BRA.w 'loop
000247D4 <AmiBlitz3.ab3@6632> RTS
000247DA <AmiBlitz3.ab3@6637>   TST.b resdisable
000247DE <AmiBlitz3.ab3@6638>   BEQ 'l1
000247E4 <AmiBlitz3.ab3@6639>   MOVE.l lastrestype,a3
000247EA <AmiBlitz3.ab3@6640>   CMP.l #0,a3
000247EE <AmiBlitz3.ab3@6641>   BEQ 'l1
000247F0 <AmiBlitz3.ab3@6642>   MOVE.l (a3),a3
000247F4 <AmiBlitz3.ab3@6643>  BRA 'l2
000247FA <AmiBlitz3.ab3@6647>   MOVEA.l newtype_string,A3
000247FC <AmiBlitz3.ab3@6650>   MOVEA.l A3,A2
00024800 <AmiBlitz3.ab3@6651>    BSR.w countem
00024804 <AmiBlitz3.ab3@6654>    CMPA.w #$0,A3
00024808 <AmiBlitz3.ab3@6655>    BEQ.w 'done
0002480A <AmiBlitz3.ab3@6656>   MOVE.l D6,-(A7)
0002480E <AmiBlitz3.ab3@6657>   MOVEA.l $4(A3),A2
00024810 <AmiBlitz3.ab3@6658>   MOVEQ.l #$0E,D5
00024814 <AmiBlitz3.ab3@6659>    BSR.w writeoffs
00024816 <AmiBlitz3.ab3@6661>   MOVE.l (A7)+,D0
0002481A <AmiBlitz3.ab3@6662>   MOVE.l $4(A3),-(A7)
0002481E <AmiBlitz3.ab3@6663>   MOVE.l D0,$4(A3)
00024820 <AmiBlitz3.ab3@6664>   MOVE.l D6,D2
00024822 <AmiBlitz3.ab3@6665>   ADDQ.l #4,D2
00024826 <AmiBlitz3.ab3@6666>    BSR.w addhunkoffset
00024828 <AmiBlitz3.ab3@6667>   MOVEQ.l #$00,D3
0002482C <AmiBlitz3.ab3@6668>   MOVE.b $A(A3),D3
0002482E <AmiBlitz3.ab3@6669>   ADDQ.w #1,D3
00024832 <AmiBlitz3.ab3@6670>   BCLR #$0,D3
00024834 <AmiBlitz3.ab3@6671>   ADD.l D3,D6
00024836 <AmiBlitz3.ab3@6672>   MOVE.l A3,D2
00024838 <AmiBlitz3.ab3@6673>   MOVE.l D7,D1
0002483E <AmiBlitz3.ab3@6674>     MOVEA.l _dosbase,A6
00024842 <AmiBlitz3.ab3@6675>     JSR _Write(A6)
00024846 <AmiBlitz3.ab3@6676>   MOVE.l (A7)+,$4(A3)
00024848 <AmiBlitz3.ab3@6677>   MOVEA.l (A3),A3
0002484C <AmiBlitz3.ab3@6678>  BRA.w 'loop
0002484E <AmiBlitz3.ab3@6681> RTS
00024854 <AmiBlitz3.ab3@6686>    TST.b resdisable
00024858 <AmiBlitz3.ab3@6687>    BEQ 'l1
0002485E <AmiBlitz3.ab3@6688>    MOVE.l currentlabeladdr,a2
00024864 <AmiBlitz3.ab3@6689>    CMP.l #0,a2
00024868 <AmiBlitz3.ab3@6690>    BEQ 'l1
0002486A <AmiBlitz3.ab3@6691>    MOVE.l (a2),a2
0002486E <AmiBlitz3.ab3@6692>  BRA 'l2
00024874 <AmiBlitz3.ab3@6696>    MOVEA.l labelbase,A2
00024876 <AmiBlitz3.ab3@6699>    MOVEQ.l #$00,D0
0002487A <AmiBlitz3.ab3@6702>    CMPA.w #$0,A2
0002487E <AmiBlitz3.ab3@6703>    BEQ.w 'done
00024886 <AmiBlitz3.ab3@6704>   CMPI.l #$1,$4(A2)
0002488A <AmiBlitz3.ab3@6705>    BNE.w 'next
0002488C <AmiBlitz3.ab3@6706>   ADDQ.w #1,D0
0002488E <AmiBlitz3.ab3@6709>   MOVEA.l (A2),A2
00024892 <AmiBlitz3.ab3@6710>  BRA.w 'loop
00024898 <AmiBlitz3.ab3@6713>   MOVE.w D0,temp1
0002489A <AmiBlitz3.ab3@6714>   MOVE.l D7,D1
000248A0 <AmiBlitz3.ab3@6715>   MOVE.l #temp1,D2
000248A2 <AmiBlitz3.ab3@6716>   MOVEQ.l #$02,D3
000248A4 <AmiBlitz3.ab3@6717>   ADDQ.l #2,D6
000248AA <AmiBlitz3.ab3@6718>     MOVEA.l _dosbase,A6
000248AE <AmiBlitz3.ab3@6719>     JSR _Write(A6)
000248B4 <AmiBlitz3.ab3@6721>    TST.b resdisable
000248B8 <AmiBlitz3.ab3@6722>    BEQ 'done_l1
000248BE <AmiBlitz3.ab3@6723>    MOVE.l currentlabeladdr,a2
000248C4 <AmiBlitz3.ab3@6724>    CMP.l #0,a2
000248C8 <AmiBlitz3.ab3@6725>    BEQ 'done_l1
000248CA <AmiBlitz3.ab3@6726>    MOVE.l (a2),a2
000248CE <AmiBlitz3.ab3@6727>  BRA 'loop2
000248D4 <AmiBlitz3.ab3@6731>    MOVEA.l labelbase,A2                                    ;write resident labels
000248D8 <AmiBlitz3.ab3@6734>    CMPA.w #$0,A2
000248DC <AmiBlitz3.ab3@6735>    BEQ.w 'done2
000248E4 <AmiBlitz3.ab3@6736>   CMPI.l #$1,$4(A2)
000248E8 <AmiBlitz3.ab3@6737>    BNE.w 'next2
000248EA <AmiBlitz3.ab3@6738>    MOVEQ.l #$00,D3
000248EE <AmiBlitz3.ab3@6739>   MOVE.b $12(A2),D3                                        ;length
000248F0 <AmiBlitz3.ab3@6740>   ADDQ.w #1,D3
000248F4 <AmiBlitz3.ab3@6741>   BCLR #$0,D3
000248F6 <AmiBlitz3.ab3@6742>   MOVE.l D6,D2
000248F8 <AmiBlitz3.ab3@6743>   ADD.l D3,D6
000248FA <AmiBlitz3.ab3@6744>   MOVE.l (A2),-(A7)
000248FC <AmiBlitz3.ab3@6745>   TST.l (A2)
00024900 <AmiBlitz3.ab3@6746>    BEQ.w 'nonext
00024902 <AmiBlitz3.ab3@6747>   MOVE.l D6,(A2)
00024906 <AmiBlitz3.ab3@6748>    BSR.w addhunkoffset
00024908 <AmiBlitz3.ab3@6751>   MOVE.l A2,D2
0002490A <AmiBlitz3.ab3@6752>   MOVE.l D7,D1
00024910 <AmiBlitz3.ab3@6753>     MOVEA.l _dosbase,A6
00024914 <AmiBlitz3.ab3@6754>     JSR _Write(A6)
00024916 <AmiBlitz3.ab3@6755>   MOVE.l (A7)+,(A2)
00024918 <AmiBlitz3.ab3@6758>   MOVEA.l (A2),A2
0002491C <AmiBlitz3.ab3@6759>  BRA.w 'loop2
0002491E <AmiBlitz3.ab3@6762> RTS
00024948 <AmiBlitz3.ab3@6767>    !basic
0002494E <AmiBlitz3.ab3@6768>     MOVE.l ptr_resfile,d0
0002495E <AmiBlitz3.ab3@6769>     resfileP.l = Peek.l(?ptr_resfile)
00024968 <AmiBlitz3.ab3@6770>     If resfileP
00024990 <AmiBlitz3.ab3@6771>       resfile$ = Peek.s(resfileP)
000249DC <AmiBlitz3.ab3@6772>       tests.b = Instr(resfile$,"/")
00024A28 <AmiBlitz3.ab3@6773>       testc.b = Instr(resfile$,":")
00024A4A <AmiBlitz3.ab3@6774>       If tests=0 AND testc=0
00024ACA <AmiBlitz3.ab3@6775>         resfile$ = dos_AddPart{my_residentsdir$,resfile$}
00024ADC <AmiBlitz3.ab3@6776>         Poke.l ?ptr_resfile,&resfile$
00024AE2 <AmiBlitz3.ab3@6778>     Else
00024B1C <AmiBlitz3.ab3@6779>       error{"INTERNAL: Invalid pointer in ptr_resfile!"}
00024B3A <AmiBlitz3.ab3@6781>    !asm
00024B3C <AmiBlitz3.ab3@6782> RTS
00024B42 <AmiBlitz3.ab3@6789> 
00024B48 <AmiBlitz3.ab3@6790>   MOVE.l A7,errstack
00024B52 <AmiBlitz3.ab3@6794>   MOVE.l #'next,errcont
00024B5A <AmiBlitz3.ab3@6795>   MOVE.w #$FFFF,ezerr         ; was -1
00024B5E <AmiBlitz3.ab3@6797>   BSR.w Aclearallvars
00024B62 <AmiBlitz3.ab3@6798>   BSR.w free_residents
00024B68 <AmiBlitz3.ab3@6800>   LEA residents_table,A5
00024B6A <AmiBlitz3.ab3@6801>   MOVEQ.l #$07,D6
00024B6C <AmiBlitz3.ab3@6804>     TST.b (A5)
00024B70 <AmiBlitz3.ab3@6805>     BEQ.w 'next
00024B76 <AmiBlitz3.ab3@6806>     MOVE.l A5,ptr_resfile
00024B7A <AmiBlitz3.ab3@6807>     BSR check_residentpath
00024B80 <AmiBlitz3.ab3@6808>     MOVE.l ptr_resfile,d1
00024B86 <AmiBlitz3.ab3@6809>     MOVEA.l _dosbase,A6
00024B8A <AmiBlitz3.ab3@6810>     JSR _LoadSeg(A6)
00024B8E <AmiBlitz3.ab3@6811>     MOVE.l D0,$40(A5)
00024B92 <AmiBlitz3.ab3@6812>     BNE.w 'yeah
00024B96 <AmiBlitz3.ab3@6814>     BSR.w reserr
00024B98 <AmiBlitz3.ab3@6818>     MOVEA.l D0,A3
00024B9A <AmiBlitz3.ab3@6819>     ADDA.l A3,A3
00024B9C <AmiBlitz3.ab3@6820>     ADDA.l A3,A3
00024B9E <AmiBlitz3.ab3@6821>     ADDQ.w #4,A3                                           ;start of res
00024BA2 <AmiBlitz3.ab3@6823>     BSR.w fixtypes
00024BA6 <AmiBlitz3.ab3@6824>     BSR.w fixmacs                                        ;add macros to list
00024BAA <AmiBlitz3.ab3@6825>     BSR.w fixconsts                                        ;read labels
00024BAE <AmiBlitz3.ab3@6828>     LEA ResidentEntryStep(A5),A5       ;$44
00024BB2 <AmiBlitz3.ab3@6829>   DBF D6,'loop
00024BBC <AmiBlitz3.ab3@6834>   MOVE.l #free_residents,errcont
00024BC2 <AmiBlitz3.ab3@6836>   MOVEA.l newtype_string,A3
00024BC4 <AmiBlitz3.ab3@6837>   MOVEQ.l #$0B,D7
00024BC8 <AmiBlitz3.ab3@6838>   BSR.w checkclash
00024BCE <AmiBlitz3.ab3@6840>   MOVEA.l macrobase,A3
00024BD0 <AmiBlitz3.ab3@6841>   MOVEQ.l #$d,D7
00024BD4 <AmiBlitz3.ab3@6842>   BSR.w checkclash
00024BDA <AmiBlitz3.ab3@6844>   MOVEA.l firstconst,A3
00024BDC <AmiBlitz3.ab3@6845>   MOVEQ.l #$19,D7
00024BE0 <AmiBlitz3.ab3@6846>   BSR.w checkclash
00024BE2 <AmiBlitz3.ab3@6849> RTS
00024BE4 <AmiBlitz3.ab3@6853>   MOVEA.l A3,A4
00024BE8 <AmiBlitz3.ab3@6856>     CMPA.w #$0,A4
00024BEC <AmiBlitz3.ab3@6857>     BEQ.w 'done
00024BF2 <AmiBlitz3.ab3@6859>     LEA ptr_parameterstore,A0
00024BF6 <AmiBlitz3.ab3@6860>     LEA $0(A4,D7.W),A1
00024BF8 <AmiBlitz3.ab3@6861>     MOVEQ.l #-$01,D2
00024BFA <AmiBlitz3.ab3@6864>       ADDQ.w #1,D2
00024BFC <AmiBlitz3.ab3@6865>       MOVE.b (A1)+,(A0)+
00024C00 <AmiBlitz3.ab3@6866>     BNE.w 'loop2
00024C02 <AmiBlitz3.ab3@6867>     MOVEA.l A3,A2
00024C06 <AmiBlitz3.ab3@6870>     BSR.w findlab
00024C0A <AmiBlitz3.ab3@6871>     BNE.w 'next                                  ;not found
00024C0C <AmiBlitz3.ab3@6872>     CMPA.l A2,A4
00024C10 <AmiBlitz3.ab3@6874>     BEQ.w 'l1
00024C12 <AmiBlitz3.ab3@6875>     MOVE.l a1,a5
00024C16 <AmiBlitz3.ab3@6877>  BRA clasherr      ; was bne
00024C1A <AmiBlitz3.ab3@6880>  BRA.w 'more
00024C1C <AmiBlitz3.ab3@6883>     MOVEA.l (A4),A4
00024C20 <AmiBlitz3.ab3@6884>  BRA.w 'loop
00024C22 <AmiBlitz3.ab3@6887> RTS
00024C28 <AmiBlitz3.ab3@6891>   MOVEA.l _dosbase,A6
00024C2E <AmiBlitz3.ab3@6893>   LEA newtype_string,A0
00024C34 <AmiBlitz3.ab3@6894>   MOVE.l A0,lastrestype
00024C36 <AmiBlitz3.ab3@6895>   CLR.l (A0)
00024C3C <AmiBlitz3.ab3@6897>   LEA macrobase,A0
00024C42 <AmiBlitz3.ab3@6898>   MOVE.l A0,currentmacroaddr
00024C44 <AmiBlitz3.ab3@6899>   CLR.l (A0)
00024C4A <AmiBlitz3.ab3@6901>   LEA labelbase,A0
00024C50 <AmiBlitz3.ab3@6902>   MOVE.l A0,currentlabeladdr
00024C52 <AmiBlitz3.ab3@6903>   CLR.l (A0)
00024C58 <AmiBlitz3.ab3@6904>   CLR.w rescnt
00024C90 <AmiBlitz3.ab3@6908>   !ComData_SetB{comByte_DebugMode,debugmode}
00024C96 <AmiBlitz3.ab3@6911>   LEA residents_table,A2
00024C98 <AmiBlitz3.ab3@6912>   MOVEQ.l #$07,D2
00024C9C <AmiBlitz3.ab3@6915>      MOVE.l $40(A2),D1
00024CA0 <AmiBlitz3.ab3@6916>      BEQ.w 'next
00024CA4 <AmiBlitz3.ab3@6917>       CLR.l $40(A2)
00024CAA <AmiBlitz3.ab3@6918>       MOVEA.l _dosbase,A6
00024CAE <AmiBlitz3.ab3@6919>       JSR _UnLoadSeg(A6)
00024CB2 <AmiBlitz3.ab3@6922>      LEA ResidentEntryStep(A2),A2   ; $44
00024CB6 <AmiBlitz3.ab3@6923>  DBF D2,'loop
00024CB8 <AmiBlitz3.ab3@6925> RTS
00024CBA <AmiBlitz3.ab3@6929>   MOVE.w (A3)+,D1
00024CBE <AmiBlitz3.ab3@6930>   BEQ.w 'done
00024CC4 <AmiBlitz3.ab3@6931>   MOVEA.l currentlabeladdr,A2
00024CC6 <AmiBlitz3.ab3@6932>   MOVE.l A3,(A2)
00024CC8 <AmiBlitz3.ab3@6933>   SUBQ.w #1,D1
00024CCA <AmiBlitz3.ab3@6936>     MOVEA.l A3,A2
00024CCC <AmiBlitz3.ab3@6937>     MOVEA.l (A3),A3
00024CD0 <AmiBlitz3.ab3@6938>   DBF D1,'loop
00024CD2 <AmiBlitz3.ab3@6941>   CLR.l (a2)                                               ;bugfix for object
00024CD8 <AmiBlitz3.ab3@6943>   MOVE.l A2,currentlabeladdr
00024CDA <AmiBlitz3.ab3@6944>   MOVEA.l A2,A3
00024CDC <AmiBlitz3.ab3@6945>   MOVEQ.l #$00,D0
00024CE0 <AmiBlitz3.ab3@6946>   MOVE.b $12(A3),D0
00024CE2 <AmiBlitz3.ab3@6947>   ADDQ.w #1,D0
00024CE6 <AmiBlitz3.ab3@6948>   BCLR #$0,D0
00024CE8 <AmiBlitz3.ab3@6949>   ADDA.w D0,A3
00024CEA <AmiBlitz3.ab3@6952> RTS
00024CEC <AmiBlitz3.ab3@6956>   MOVE.w (A3)+,D1
00024CF0 <AmiBlitz3.ab3@6957>   BEQ.w 'done
00024CF6 <AmiBlitz3.ab3@6958>   MOVEA.l currentmacroaddr,A2
00024CF8 <AmiBlitz3.ab3@6959>   MOVE.l A3,(A2)
00024CFA <AmiBlitz3.ab3@6960>   SUBQ.w #1,D1
00024CFC <AmiBlitz3.ab3@6963>     MOVEA.l A3,A2
00024CFE <AmiBlitz3.ab3@6964>     MOVEA.l (A3),A3
00024D02 <AmiBlitz3.ab3@6965>   DBF D1,'loop
00024D08 <AmiBlitz3.ab3@6967>   MOVE.l A2,currentmacroaddr
00024D0A <AmiBlitz3.ab3@6968>   MOVEA.l A2,A3
00024D0C <AmiBlitz3.ab3@6969>   MOVEQ.l #$00,D0
00024D10 <AmiBlitz3.ab3@6970>   MOVE.b $C(A3),D0
00024D12 <AmiBlitz3.ab3@6971>   ADDQ.w #1,D0
00024D16 <AmiBlitz3.ab3@6972>   BCLR #$0,D0
00024D1A <AmiBlitz3.ab3@6973>   MOVE.w $8(A3),D1
00024D1C <AmiBlitz3.ab3@6974>   ADDQ.w #1,D1
00024D20 <AmiBlitz3.ab3@6975>   BCLR #$0,D1
00024D22 <AmiBlitz3.ab3@6976>   ADDA.w D0,A3
00024D24 <AmiBlitz3.ab3@6977>   ADDA.w D1,A3
00024D26 <AmiBlitz3.ab3@6980> RTS
00024D28 <AmiBlitz3.ab3@6985>   MOVE.w (A3)+,D1            ;number of types to do
00024D2C <AmiBlitz3.ab3@6986>   BEQ.w 'done
00024D2E <AmiBlitz3.ab3@6987>   MOVE.w D1,-(A7)
00024D30 <AmiBlitz3.ab3@6988>   SUBQ.w #1,D1
00024D36 <AmiBlitz3.ab3@6989>   MOVEA.l lastrestype,A2
00024D38 <AmiBlitz3.ab3@6990>   MOVE.l A2,-(A7)
00024D3A <AmiBlitz3.ab3@6993>       MOVE.l (A3),D0          ;skip through offsets
00024D3E <AmiBlitz3.ab3@6994>       BEQ.w 'loopme
00024D40 <AmiBlitz3.ab3@6995>       MOVEA.l D0,A3
00024D44 <AmiBlitz3.ab3@6996>  BRA.w 'loop
00024D48 <AmiBlitz3.ab3@6999>       MOVE.b $E(A3),D0
00024D4A <AmiBlitz3.ab3@7000>       ADDQ.w #1,D0
00024D4E <AmiBlitz3.ab3@7001>       BCLR #$0,D0
00024D50 <AmiBlitz3.ab3@7002>       ADDA.w D0,A3            ;a3=type
00024D52 <AmiBlitz3.ab3@7003>       MOVE.l A3,(A2)          ;link
00024D54 <AmiBlitz3.ab3@7004>       MOVEA.l A3,A2
00024D56 <AmiBlitz3.ab3@7005>       MOVEQ.l #$00,D0
00024D5A <AmiBlitz3.ab3@7006>       MOVE.b $A(A3),D0
00024D5C <AmiBlitz3.ab3@7007>       ADDQ.w #1,D0
00024D60 <AmiBlitz3.ab3@7008>       BCLR #$0,D0
00024D62 <AmiBlitz3.ab3@7009>       ADDA.w D0,A3            ;next offset
00024D66 <AmiBlitz3.ab3@7010>   DBF D1,'loop
00024D68 <AmiBlitz3.ab3@7014>   MOVEA.l (A7)+,A0
00024D6A <AmiBlitz3.ab3@7015>   MOVEA.l (A0),A0
00024D6E <AmiBlitz3.ab3@7018>     CMPA.w #$0,A0
00024D72 <AmiBlitz3.ab3@7019>     BEQ.w 'fdone
00024D76 <AmiBlitz3.ab3@7020>     MOVEA.l $4(A0),A1          ;first offset!
00024D7A <AmiBlitz3.ab3@7023>     CMPA.w #$0,A1
00024D7E <AmiBlitz3.ab3@7024>     BEQ.w 'fofd
00024D82 <AmiBlitz3.ab3@7026>     MOVE.w $A(A1),D0           ;number of type
00024D88 <AmiBlitz3.ab3@7027>     MOVEA.l newtypebase,A4
00024D8C <AmiBlitz3.ab3@7028>     CMP.w #$7,D0
00024D90 <AmiBlitz3.ab3@7029>     BCS.w 'fsys
00024D96 <AmiBlitz3.ab3@7030>     SUB.w rescnt,D0
00024D98 <AmiBlitz3.ab3@7033>     SUBQ.w #1,D0
00024D9C <AmiBlitz3.ab3@7034>     BMI.w 'fdone2
00024D9E <AmiBlitz3.ab3@7037>        MOVEA.l (A4),A4
00024DA2 <AmiBlitz3.ab3@7038>   DBF D0,'floop3
00024DA6 <AmiBlitz3.ab3@7041>     MOVE.l A4,$A(A1)
00024DA8 <AmiBlitz3.ab3@7042>     MOVEA.l (A1),A1
00024DAC <AmiBlitz3.ab3@7043>  BRA.w 'floop2
00024DAE <AmiBlitz3.ab3@7046>     MOVEA.l (A0),A0
00024DB2 <AmiBlitz3.ab3@7047>  BRA.w 'floop
00024DB4 <AmiBlitz3.ab3@7050>   MOVE.w (A7)+,D0
00024DBA <AmiBlitz3.ab3@7051>   ADD.w D0,rescnt
00024DC0 <AmiBlitz3.ab3@7052>   MOVE.l A2,lastrestype
00024DC2 <AmiBlitz3.ab3@7055> RTS
00024DC8 <AmiBlitz3.ab3@7062>   LEA tokens,A0
00024DCC <AmiBlitz3.ab3@7063>   MOVE.w #$003A,D0                                         ; $003A : 58 dec
00024DCE <AmiBlitz3.ab3@7066>     MOVEA.l (A0),A0
00024DD2 <AmiBlitz3.ab3@7067>   DBF D0,'loop
00024DD8 <AmiBlitz3.ab3@7069>   MOVEA.l #asmpnts,A1                                      ;create tokentab
00024DDC <AmiBlitz3.ab3@7070>   MOVE.w #$0076,D0        ; was #tnum-fnum-1,                                 ; $0076 : 118 dec
00024DE0 <AmiBlitz3.ab3@7073>       LEA $6(A0),A2
00024DE2 <AmiBlitz3.ab3@7076>         TST.b (A2)+
00024DE6 <AmiBlitz3.ab3@7077>       BNE.w 'loop3
00024DE8 <AmiBlitz3.ab3@7080>         TST.b (A2)+
00024DEC <AmiBlitz3.ab3@7081>       BNE.w 'loop4
00024DEE <AmiBlitz3.ab3@7083>       ADDQ.w #1,A2
00024DF0 <AmiBlitz3.ab3@7084>       EXG.l D1,A2
00024DF4 <AmiBlitz3.ab3@7085>       BCLR #$0,D1
00024DF6 <AmiBlitz3.ab3@7086>       EXG.l D1,A2
00024DF8 <AmiBlitz3.ab3@7087>       MOVE.l A2,(A1)+
00024DFA <AmiBlitz3.ab3@7088>       MOVEA.l (A0),A0
00024DFE <AmiBlitz3.ab3@7089>   DBF D0,'loop2
00024E00 <AmiBlitz3.ab3@7090> RTS
00024E04 <AmiBlitz3.ab3@7094>   BSR.w asmconst
00024E06 <AmiBlitz3.ab3@7095>   MOVEQ.l #$0B,D5
00024E08 <AmiBlitz3.ab3@7096> RTS
00024E0A <AmiBlitz3.ab3@7099> unmove:  Ds.w 1
00024E0E <AmiBlitz3.ab3@7103>   MOVE.w #$48E7,D1
00024E12 <AmiBlitz3.ab3@7104>   BSR.w writeword                                          ;movem.l -(a7)
00024E16 <AmiBlitz3.ab3@7105>   MOVE.w #$000F,D2
00024E18 <AmiBlitz3.ab3@7106>   SUB.w D4,D2
00024E1A <AmiBlitz3.ab3@7107>   MOVEQ.l #-$01,D1
00024E1C <AmiBlitz3.ab3@7108>   BCLR D2,D1
00024E20 <AmiBlitz3.ab3@7109>   BSR.w writeword
00024E22 <AmiBlitz3.ab3@7110>   MOVEQ.l #-$01,D1
00024E24 <AmiBlitz3.ab3@7111>   BCLR D4,D1
00024E2A <AmiBlitz3.ab3@7112>   MOVE.w D1,unmove
00024E2C <AmiBlitz3.ab3@7113> RTS
00024E30 <AmiBlitz3.ab3@7117>   MOVE.w #$4CDF,D1
00024E34 <AmiBlitz3.ab3@7118>   BSR.w writeword
00024E38 <AmiBlitz3.ab3@7119>   MOVE.w unmove(PC),D1
00024E3C <AmiBlitz3.ab3@7120>  BRA.w writeword
00024E40 <AmiBlitz3.ab3@7133>   BSR.w get_reg2
00024E44 <AmiBlitz3.ab3@7134>   CMP.w #$2C,D0                                            ;#','
00024E48 <AmiBlitz3.ab3@7135>    BNE.w syntaxerr
00024E4E <AmiBlitz3.ab3@7136>   MOVE.l #$48E7FFFE,D1                                     ;movem to stack
00024E52 <AmiBlitz3.ab3@7137>    BSR.w writelong
00024E54 <AmiBlitz3.ab3@7138>   MOVE.w D4,D1
00024E58 <AmiBlitz3.ab3@7139>   ORI.w #$2F00,D1
00024E5C <AmiBlitz3.ab3@7140>    BSR.w writeword
00024E60 <AmiBlitz3.ab3@7142>    BSR.w get1bytemain
00024E64 <AmiBlitz3.ab3@7143>    BSR.w getparameter
00024E68 <AmiBlitz3.ab3@7144>    BSR.w fetchvars
00024E6C <AmiBlitz3.ab3@7145>    BSR.w calcvar
00024E70 <AmiBlitz3.ab3@7146>    BTST #$E,D2
00024E74 <AmiBlitz3.ab3@7147>    BEQ.w 'notp
00024E78 <AmiBlitz3.ab3@7150>    MOVE.b #$3,D2
00024E7C <AmiBlitz3.ab3@7151>  BRA.w 'pd
00024E7E <AmiBlitz3.ab3@7154>   TST.b D2
00024E82 <AmiBlitz3.ab3@7155>    BEQ.w 'issa
00024E86 <AmiBlitz3.ab3@7156>   CMP.b #$7,D2
00024E8A <AmiBlitz3.ab3@7157>    BEQ.w 'issa
00024E8E <AmiBlitz3.ab3@7160>   BTST #$F,D2
00024E92 <AmiBlitz3.ab3@7161>    BNE.w 'nsimp
00024E96 <AmiBlitz3.ab3@7162>   MOVE.w #$45ED,D1                                         ;lea x(a5),a2
00024E9A <AmiBlitz3.ab3@7163>    BSR.w writeword
00024E9C <AmiBlitz3.ab3@7164>   MOVE.w D3,D1
00024EA0 <AmiBlitz3.ab3@7165>    BSR.w writeword
00024EA4 <AmiBlitz3.ab3@7168>   MOVE.w #$201F,D1                                         ;move.l (a7)+,d0
00024EA8 <AmiBlitz3.ab3@7169>    BSR.w writeword
00024EAC <AmiBlitz3.ab3@7170>   MOVE.w #$1480,D1
00024EB0 <AmiBlitz3.ab3@7171>   CMP.b #$1,D2
00024EB4 <AmiBlitz3.ab3@7172>    BEQ.w 'pg
00024EB8 <AmiBlitz3.ab3@7173>   EORI.w #$3000,D1
00024EBC <AmiBlitz3.ab3@7174>   CMP.b #$2,D2
00024EC0 <AmiBlitz3.ab3@7175>    BNE.w 'pg
00024EC4 <AmiBlitz3.ab3@7176>   ORI.w #$1000,D1
00024EC8 <AmiBlitz3.ab3@7179>   BSR.w writeword
00024ECE <AmiBlitz3.ab3@7180>   MOVE.l #$4CDF7FFF,D1
00024ED2 <AmiBlitz3.ab3@7181> BRA.w writelong
00024ED6 <AmiBlitz3.ab3@7185>   BSR.w get_reg2
00024EDA <AmiBlitz3.ab3@7186>   CMP.w #$2C,D0     ;','
00024EDE <AmiBlitz3.ab3@7187>    BNE.w syntaxerr
00024EE2 <AmiBlitz3.ab3@7188>    BSR.w regmovems
00024EE4 <AmiBlitz3.ab3@7189>   MOVE.w D4,-(A7)
00024EE6 <AmiBlitz3.ab3@7190>   MOVEQ.l #$03,D2   ;get a long
00024EEA <AmiBlitz3.ab3@7191>    BSR.w eval
00024EEC <AmiBlitz3.ab3@7192>   MOVE.w (A7)+,D1
00024EF0 <AmiBlitz3.ab3@7193>    BEQ.w 'done
00024EF4 <AmiBlitz3.ab3@7194>   CMP.w #$8,D1
00024EF8 <AmiBlitz3.ab3@7195>    BCC.w 'addreg
00024EFA <AmiBlitz3.ab3@7196>   LSL.w #8,D1
00024EFC <AmiBlitz3.ab3@7197>   LSL.w #1,D1
00024F00 <AmiBlitz3.ab3@7198>   ORI.w #$2000,D1
00024F04 <AmiBlitz3.ab3@7199>    BSR.w writeword
00024F08 <AmiBlitz3.ab3@7200>  BRA.w 'done
00024F0A <AmiBlitz3.ab3@7203>   SUBQ.w #8,D1
00024F0C <AmiBlitz3.ab3@7204>   LSL.w #8,D1
00024F0E <AmiBlitz3.ab3@7205>   LSL.w #1,D1
00024F12 <AmiBlitz3.ab3@7206>   ORI.w #$2040,D1
00024F16 <AmiBlitz3.ab3@7207>   BSR.w writeword
00024F1A <AmiBlitz3.ab3@7210> BRA.w dounmove
00024F1E <AmiBlitz3.ab3@7215>   BSR.w get1bytemain
00024F22 <AmiBlitz3.ab3@7218>   ORI.w #$20,D0
00024F26 <AmiBlitz3.ab3@7219>   CMP.w #$64,D0       ;'d'
00024F2A <AmiBlitz3.ab3@7220>    BEQ.w getan3
00024F2E <AmiBlitz3.ab3@7221>   CMP.w #$61,D0       ;'a'
00024F32 <AmiBlitz3.ab3@7222>    BNE.w syntaxerr
00024F36 <AmiBlitz3.ab3@7223>    BSR.w getan3
00024F38 <AmiBlitz3.ab3@7224>   ADDQ.w #8,D4
00024F3A <AmiBlitz3.ab3@7225> RTS
00024F66 <AmiBlitz3.ab3@7230>   !fget                                                   ;bsr.w get1bytemain
00024F6A <AmiBlitz3.ab3@7232>   ORI.w #$20,D0
00024F6E <AmiBlitz3.ab3@7235>   CMP.w #$61,D0     ;'a'
00024F72 <AmiBlitz3.ab3@7236>   BNE.w syntaxerr
00024F9E <AmiBlitz3.ab3@7240>   !fget                                                    ;bsr.w get1bytemain
00024FA2 <AmiBlitz3.ab3@7242>   SUBI.w #$30,D0
00024FA6 <AmiBlitz3.ab3@7243>    BMI.w syntaxerr
00024FAA <AmiBlitz3.ab3@7244>   CMP.w #$7,D0
00024FAE <AmiBlitz3.ab3@7245>    BHI.w syntaxerr
00024FB0 <AmiBlitz3.ab3@7246>   MOVE.w D0,D4
00024FDC <AmiBlitz3.ab3@7248>   !fget
00024FDE <AmiBlitz3.ab3@7250> RTS                                                        ;bra.w get1bytemain
00024FE0 <AmiBlitz3.ab3@7254>   ADDQ.w #8,D4
00024FE2 <AmiBlitz3.ab3@7257>   MOVEQ.l #$00,D5    ;bits for reg
00024FE6 <AmiBlitz3.ab3@7258>   SUBI.w #$30,D4
00024FEA <AmiBlitz3.ab3@7261>   CMP.w #$2D,D0      ;'-'
00024FEE <AmiBlitz3.ab3@7262>    BEQ.w 'range
00024FF2 <AmiBlitz3.ab3@7263>   CMP.w #$2F,D0      ;'/'
00024FF6 <AmiBlitz3.ab3@7264>    BEQ.w 'one
00024FFA <AmiBlitz3.ab3@7265>  BRA.w syntaxerr
00024FFC <AmiBlitz3.ab3@7268>   BSET D4,D5
00024FFE <AmiBlitz3.ab3@7271>   MOVE.w D5,D4
00025000 <AmiBlitz3.ab3@7272>   MOVEQ.l #$0F,D5
00025002 <AmiBlitz3.ab3@7273>  RTS
00025004 <AmiBlitz3.ab3@7276>   BSET D4,D5
00025008 <AmiBlitz3.ab3@7277>   BSR.w get_reg
0002501A <AmiBlitz3.ab3@7279>   !compare3                                                ;bsr.w tstend2
0002501E <AmiBlitz3.ab3@7281>   BNE.w 'loop
00025022 <AmiBlitz3.ab3@7282>  BRA.w 'done2
00025024 <AmiBlitz3.ab3@7285>   MOVE.w D4,D1    ;from
00025028 <AmiBlitz3.ab3@7286>    BSR.w get_reg
0002502A <AmiBlitz3.ab3@7287>   CMP.w D4,D1
0002502E <AmiBlitz3.ab3@7288>    BLS.w 'loop2
00025030 <AmiBlitz3.ab3@7289>   EXG.l D4,D1
00025032 <AmiBlitz3.ab3@7292>   BSET D1,D5
00025034 <AmiBlitz3.ab3@7293>   ADDQ.w #1,D1
00025036 <AmiBlitz3.ab3@7294>   CMP.w D4,D1
0002503A <AmiBlitz3.ab3@7295>    BLS.w 'loop2
0002504C <AmiBlitz3.ab3@7297>   !compare3                                                ;bsr.w tstend2
00025050 <AmiBlitz3.ab3@7299>   BNE.w 'loop
00025054 <AmiBlitz3.ab3@7300> BRA.w 'done
00025056 <AmiBlitz3.ab3@7306>   MOVEA.l A5,A4                                            ;bsr.w get1bytemain
00025082 <AmiBlitz3.ab3@7308>    !fget
00025086 <AmiBlitz3.ab3@7310>   CMP.w #$23,D0       ;'#'
0002508A <AmiBlitz3.ab3@7311>    BEQ.w getimm
0002508E <AmiBlitz3.ab3@7312>   CMP.w #$28,D0       ;'('
00025092 <AmiBlitz3.ab3@7313>    BEQ.w 'ind
00025096 <AmiBlitz3.ab3@7314>   CMP.w #$2D,D0       ;'-'
0002509A <AmiBlitz3.ab3@7315>    BNE.w 'more
000250C6 <AmiBlitz3.ab3@7317>    !fget                                                   ;bsr.w get1bytemain       -(
000250CA <AmiBlitz3.ab3@7319>   CMP.w #$28,D0       ;'('
000250CE <AmiBlitz3.ab3@7320>    BNE.w 'notccr
000250D2 <AmiBlitz3.ab3@7321>    BSR.w getan
000250D6 <AmiBlitz3.ab3@7322>   CMP.w #$29,D0       ;')'
000250DA <AmiBlitz3.ab3@7323>    BNE.w syntaxerr
000250DC <AmiBlitz3.ab3@7324>   MOVEQ.l #$04,D5
00025108 <AmiBlitz3.ab3@7326>   !fget                                                    ;bsr.w get1bytemain  
0002510A <AmiBlitz3.ab3@7327>  RTS
0002510E <AmiBlitz3.ab3@7331>   BSR.w getan
00025112 <AmiBlitz3.ab3@7332>   CMP.w #$29,D0      ;')'
00025116 <AmiBlitz3.ab3@7333>    BNE.w syntaxerr
00025142 <AmiBlitz3.ab3@7335>   !fget
00025146 <AmiBlitz3.ab3@7337>   CMP.w #$2B,D0      ;'+'
0002514A <AmiBlitz3.ab3@7338>    BEQ.w 'postinc
0002514C <AmiBlitz3.ab3@7339>   MOVEQ.l #$02,D5
0002514E <AmiBlitz3.ab3@7340>  RTS
00025150 <AmiBlitz3.ab3@7343>   MOVEQ.l #$03,D5
0002517C <AmiBlitz3.ab3@7345>   !fget                                                    ;bra.w get1bytemain
0002517E <AmiBlitz3.ab3@7346>  RTS
00025182 <AmiBlitz3.ab3@7350>   ORI.w #$20,D0
00025184 <AmiBlitz3.ab3@7351>   MOVE.w D0,D1      ;first
000251B0 <AmiBlitz3.ab3@7353>    !fget                                                   ;bsr.w get1bytemain  ;get second
000251B4 <AmiBlitz3.ab3@7355>   CMP.w #$64,D1     ;'d'
000251B8 <AmiBlitz3.ab3@7356>    BNE.w 'notdn
000251BC <AmiBlitz3.ab3@7357>   CMP.w #$30,D0     ;'0'
000251C0 <AmiBlitz3.ab3@7358>    BCS.w 'notan
000251C4 <AmiBlitz3.ab3@7359>   CMP.w #$37,D0     ;'7'
000251C8 <AmiBlitz3.ab3@7360>    BHI.w 'notan
000251CA <AmiBlitz3.ab3@7361>   MOVE.w D0,D4
000251F6 <AmiBlitz3.ab3@7363>    !fget                                                   ;bsr.w get1bytemain
00025208 <AmiBlitz3.ab3@7364>    !compare3                                               ;bsr.w tstend2
0002520C <AmiBlitz3.ab3@7366>    BEQ.w 'dn
00025210 <AmiBlitz3.ab3@7367>   CMP.w #$2D,D0     ;'-'
00025214 <AmiBlitz3.ab3@7368>    BEQ.w getmovem
00025218 <AmiBlitz3.ab3@7369>   CMP.w #$2F,D0     ;'/'
0002521C <AmiBlitz3.ab3@7370>    BEQ.w getmovem
00025220 <AmiBlitz3.ab3@7371>  BRA.w 'notan2
00025222 <AmiBlitz3.ab3@7374>   MOVEQ.l #$00,D5
00025226 <AmiBlitz3.ab3@7375>   SUBI.w #$30,D4
00025228 <AmiBlitz3.ab3@7376>  RTS
0002522C <AmiBlitz3.ab3@7379>    CMP.w #$61,D1    ;'a'
00025230 <AmiBlitz3.ab3@7380>    BNE.w 'notan
00025234 <AmiBlitz3.ab3@7382>   CMP.w #$30,D0     ;'0'
00025238 <AmiBlitz3.ab3@7383>    BCS.w 'notan
0002523C <AmiBlitz3.ab3@7384>   CMP.w #$37,D0     ;'7'
00025240 <AmiBlitz3.ab3@7385>    BHI.w 'notan
00025242 <AmiBlitz3.ab3@7386>   MOVE.w D0,D4
0002526E <AmiBlitz3.ab3@7388>    !fget                                                   ;bsr.w get1bytemain
00025280 <AmiBlitz3.ab3@7389>    !compare3                                               ;bsr.w tstend2
00025284 <AmiBlitz3.ab3@7391>    BEQ.w 'an
00025288 <AmiBlitz3.ab3@7392>   CMP.w #$2D,D0     ;'-'
0002528C <AmiBlitz3.ab3@7393>    BEQ.w getmovem2                                         ;movem
00025290 <AmiBlitz3.ab3@7394>   CMP.w #$2F,D0     ;'/'
00025294 <AmiBlitz3.ab3@7395>    BEQ.w getmovem2
00025298 <AmiBlitz3.ab3@7396>  BRA.w 'notan2
0002529A <AmiBlitz3.ab3@7402>   MOVEQ.l #1,d5
0002529E <AmiBlitz3.ab3@7403>   SUBI.w #$30,D4
000252A2 <AmiBlitz3.ab3@7405>   BRA 'l10
000252A4 <AmiBlitz3.ab3@7406>   ADDQ.w #8,d4                             ; ??? looks like dead code ???
000252A6 <AmiBlitz3.ab3@7407>   MOVEQ #0,d5                              ;   "
000252A8 <AmiBlitz3.ab3@7408>   BSET d4,d5                               ;   "
000252AA <AmiBlitz3.ab3@7409>   MOVE.w d5,d4                             ;   "
000252AC <AmiBlitz3.ab3@7410>   MOVEQ.l #$0f,D5                          ;   "             ;01
000252AE <AmiBlitz3.ab3@7414>  RTS
000252B2 <AmiBlitz3.ab3@7417>   ORI.w #$20,D0
000252B4 <AmiBlitz3.ab3@7418>   MOVE.w D0,D4
000252E0 <AmiBlitz3.ab3@7419>    !fget                                                   ;bsr.w get1bytemain ;get third
000252F2 <AmiBlitz3.ab3@7424>   !compare3                                                ;bsr.w tstend2
000252F6 <AmiBlitz3.ab3@7426>    BNE.w 'notsx
000252FA <AmiBlitz3.ab3@7427>   CMP.w #$73,D1       ;'s'
000252FE <AmiBlitz3.ab3@7428>    BNE.w 'notsx
00025302 <AmiBlitz3.ab3@7429>   CMP.w #$70,D4       ;'p'
00025306 <AmiBlitz3.ab3@7430>    BNE.w 'notsp
00025318 <AmiBlitz3.ab3@7432>    !compare3                                               ;bsr.w tstend2
0002531C <AmiBlitz3.ab3@7434>    BNE.w 'notccr
0002531E <AmiBlitz3.ab3@7438>   MOVEQ.l #$07,D4
00025320 <AmiBlitz3.ab3@7439>   MOVEQ.l #$01,D5
00025322 <AmiBlitz3.ab3@7440>  RTS
00025326 <AmiBlitz3.ab3@7443>   CMP.w #$72,D4      ;'r'
0002532A <AmiBlitz3.ab3@7444>    BNE.w 'notccr
0002533C <AmiBlitz3.ab3@7446>    !compare3                                               ;bsr.w tstend2
00025340 <AmiBlitz3.ab3@7448>    BNE.w 'notccr
00025342 <AmiBlitz3.ab3@7449>   MOVEQ.l #$0D,D5
00025344 <AmiBlitz3.ab3@7450>  RTS
00025348 <AmiBlitz3.ab3@7453>   ORI.w #$20,D0
0002534C <AmiBlitz3.ab3@7454>   CMP.w #$63,D1      ;'c'
00025350 <AmiBlitz3.ab3@7455>    BNE.w 'notccr0
00025354 <AmiBlitz3.ab3@7456>   CMP.w #$63,D4      ;'c'
00025358 <AmiBlitz3.ab3@7457>    BNE.w 'notccr
0002535C <AmiBlitz3.ab3@7458>   CMP.w #$72,D0      ;'r'
00025360 <AmiBlitz3.ab3@7459>    BNE.w 'notccr
00025364 <AmiBlitz3.ab3@7460>    BSR.w get1bytemain                                      ;??wy not !fget
00025368 <AmiBlitz3.ab3@7461>    BEQ.w 'ccr
0002536C <AmiBlitz3.ab3@7462>   CMP.w #$2C,D0
00025370 <AmiBlitz3.ab3@7463>    BNE.w 'notccr
00025372 <AmiBlitz3.ab3@7469>   MOVEQ.l #$0C,D5
00025374 <AmiBlitz3.ab3@7470>  RTS
00025378 <AmiBlitz3.ab3@7473>   CMP.w #$75,D1      ;'u'
0002537C <AmiBlitz3.ab3@7474>    BNE.w 'notccr
00025380 <AmiBlitz3.ab3@7475>   CMP.w #$73,D4      ;'s'
00025384 <AmiBlitz3.ab3@7476>    BNE.w 'notccr
00025388 <AmiBlitz3.ab3@7477>   CMP.w #$70,D0      ;'p'
0002538C <AmiBlitz3.ab3@7478>    BNE.w 'notccr
00025390 <AmiBlitz3.ab3@7479>    BSR.w get1bytemain                                      ;??wy not !fget
00025394 <AmiBlitz3.ab3@7480>    BEQ.w 'usp
00025398 <AmiBlitz3.ab3@7481>   CMP.w #$2C,D0      ;','
0002539C <AmiBlitz3.ab3@7482>    BNE.w 'notccr
0002539E <AmiBlitz3.ab3@7485>   MOVEQ.l #$0E,D5
000253A0 <AmiBlitz3.ab3@7486>  RTS
000253A2 <AmiBlitz3.ab3@7492>   MOVEA.l A4,A5
000253A6 <AmiBlitz3.ab3@7493>    BSR.w asmconst
000253B8 <AmiBlitz3.ab3@7496>    !compare3                                               ;bsr.w tstend2
000253BC <AmiBlitz3.ab3@7498>    BEQ.w 'abs1
000253C0 <AmiBlitz3.ab3@7499>   CMP.w #$2E,D0      ;'.'
000253C4 <AmiBlitz3.ab3@7500>    BEQ.w 'absx
000253C8 <AmiBlitz3.ab3@7501>   CMP.w #$28,D0      ;'('
000253CC <AmiBlitz3.ab3@7502>    BNE.w syntaxerr
000253D0 <AmiBlitz3.ab3@7503>    BSR.w get1bytemain                                      ;??wy not !fget
000253D4 <AmiBlitz3.ab3@7504>   ORI.w #$20,D0
000253D8 <AmiBlitz3.ab3@7505>   CMP.w #$70,D0      ;'p'
000253DC <AmiBlitz3.ab3@7506>    BNE.w 'notpcrel
000253E0 <AmiBlitz3.ab3@7507>    BSR.w get1bytemain                                      ;??wy not !fget
000253E4 <AmiBlitz3.ab3@7508>   ORI.w #$20,D0
000253E8 <AmiBlitz3.ab3@7509>   CMP.w #$63,D0      ;'c'
000253EC <AmiBlitz3.ab3@7510>    BNE.w syntaxerr
000253F0 <AmiBlitz3.ab3@7511>    BSR.w get1bytemain                                      ;??wy not !fget
000253F4 <AmiBlitz3.ab3@7512>    BSR.w getrest
000253F6 <AmiBlitz3.ab3@7513>   ADDQ.w #4,D5
000253F8 <AmiBlitz3.ab3@7514>  RTS
000253FC <AmiBlitz3.ab3@7517>   BSR.w getan2
00025400 <AmiBlitz3.ab3@7518>  BRA.w getrest
00025404 <AmiBlitz3.ab3@7521>    BSR.w get1bytemain                                     ;??wy not !fget
00025408 <AmiBlitz3.ab3@7522>   ORI.w #$20,D0
0002540C <AmiBlitz3.ab3@7523>   CMP.w #$77,D0      ;'w'
00025410 <AmiBlitz3.ab3@7524>    BEQ.w 'absw
00025414 <AmiBlitz3.ab3@7525>   CMP.w #$6C,D0      ;'l'
00025418 <AmiBlitz3.ab3@7526>    BNE.w syntaxerr
0002541A <AmiBlitz3.ab3@7529>   MOVEQ.l #$08,D5
0002541C <AmiBlitz3.ab3@7530>  RTS
0002541E <AmiBlitz3.ab3@7533>   MOVEQ.l #$07,D5
00025420 <AmiBlitz3.ab3@7534> RTS
00025422 <AmiBlitz3.ab3@7538>   TST.w D0
00025426 <AmiBlitz3.ab3@7539>    BEQ.w 'ok
0002542A <AmiBlitz3.ab3@7540>   CMP.w #$3A,D0       ;':'
0002542E <AmiBlitz3.ab3@7541>    BEQ.w 'ok
00025432 <AmiBlitz3.ab3@7542>   CMP.w #$2C,D0       ;','
00025434 <AmiBlitz3.ab3@7545> RTS
00025438 <AmiBlitz3.ab3@7549>   CMP.w #$2C,D0       ;','
0002543C <AmiBlitz3.ab3@7550>    BNE.w 'dis
00025440 <AmiBlitz3.ab3@7551>    BSR.w get1bytemain                                      ;??wy not !fget
00025444 <AmiBlitz3.ab3@7552>   ORI.w #$20,D0
00025446 <AmiBlitz3.ab3@7553>   MOVEQ.l #$00,D1
0002544A <AmiBlitz3.ab3@7554>   CMP.w #$64,D0       ;'d'
0002544E <AmiBlitz3.ab3@7555>    BEQ.w 'ianxi
00025452 <AmiBlitz3.ab3@7556>   CMP.w #$61,D0       ;'a'
00025456 <AmiBlitz3.ab3@7557>    BNE.w syntaxerr
0002545A <AmiBlitz3.ab3@7558>   BSET #$F,D1
0002545E <AmiBlitz3.ab3@7561>    BSR.w get1bytemain                                      ;??wy not !fget
00025462 <AmiBlitz3.ab3@7562>   SUBI.w #$30,D0
00025466 <AmiBlitz3.ab3@7563>    BMI.w syntaxerr
0002546A <AmiBlitz3.ab3@7564>   CMP.w #$7,D0
0002546E <AmiBlitz3.ab3@7565>    BHI.w syntaxerr
00025470 <AmiBlitz3.ab3@7566>   LSL.w #8,D0
00025472 <AmiBlitz3.ab3@7567>   LSL.w #4,D0
00025474 <AmiBlitz3.ab3@7568>   OR.w D0,D1
00025478 <AmiBlitz3.ab3@7569>    BSR.w get1bytemain                                      ;??wy not !fget
0002547C <AmiBlitz3.ab3@7570>   CMP.w #$2E,D0       ;'.'
00025480 <AmiBlitz3.ab3@7571>    BNE.w 'ok2
00025484 <AmiBlitz3.ab3@7572>    BSR.w get1bytemain                                      ;??wy not !fget
00025488 <AmiBlitz3.ab3@7573>   ORI.w #$20,D0
0002548C <AmiBlitz3.ab3@7574>   CMP.w #$77,D0       ;'w'
00025490 <AmiBlitz3.ab3@7575>    BEQ.w 'ok
00025494 <AmiBlitz3.ab3@7576>   CMP.w #$6C,D0       ;'l'
00025498 <AmiBlitz3.ab3@7577>    BNE.w syntaxerr
0002549C <AmiBlitz3.ab3@7578>   BSET #$B,D1
000254A0 <AmiBlitz3.ab3@7581>    BSR.w get1bytemain                                      ;??wy not !fget
000254A4 <AmiBlitz3.ab3@7585>    CMP.b #"*",d0                                            ;020 * Mode
000254A8 <AmiBlitz3.ab3@7586>             BNE 'l1
000254AC <AmiBlitz3.ab3@7587>             BSR.w get1bytemain                             ;??wy not !fget
000254B0 <AmiBlitz3.ab3@7588>             CMP.b #"2",d0
000254B4 <AmiBlitz3.ab3@7589>             BNE 'l2
000254B8 <AmiBlitz3.ab3@7590>             OR.w #$200,d1
000254BC <AmiBlitz3.ab3@7591>  BRA 'l1b
000254C0 <AmiBlitz3.ab3@7594>             CMP.b #"4",d0
000254C4 <AmiBlitz3.ab3@7595>             BNE 'l3
000254C8 <AmiBlitz3.ab3@7596>             OR.w #$400,d1
000254CC <AmiBlitz3.ab3@7597>  BRA 'l1b
000254D0 <AmiBlitz3.ab3@7600>             CMP.b #"8",d0
000254D4 <AmiBlitz3.ab3@7601>             BNE syntaxerr
000254D8 <AmiBlitz3.ab3@7602>             OR.w #$600,d1
000254DC <AmiBlitz3.ab3@7605>         BSR.w get1bytemain                                 ;??wy not !fget
000254E0 <AmiBlitz3.ab3@7609>   CMP.w #$29,D0       ;')'
000254E4 <AmiBlitz3.ab3@7610>    BNE.w syntaxerr
000254EA <AmiBlitz3.ab3@7611>   MOVE.w D1,extraword
000254EC <AmiBlitz3.ab3@7612>   MOVEQ.l #$06,D5
000254F0 <AmiBlitz3.ab3@7613>  BRA.w get1bytemain                                         ;??wy not !fget
000254F4 <AmiBlitz3.ab3@7616>   CMP.w #")",D0                                            ;")"
000254F8 <AmiBlitz3.ab3@7617>    BNE.w errorbracketmiss                                  ; was syntax error
000254FA <AmiBlitz3.ab3@7618>   MOVEQ.l #$05,D5
000254FE <AmiBlitz3.ab3@7619> BRA.w get1bytemain                                         ;??wy not !fget
00025504 <AmiBlitz3.ab3@7626>   MOVEA.l asmbuff,A0
0002550A <AmiBlitz3.ab3@7627>   MOVE.w ininclude,D1
00025510 <AmiBlitz3.ab3@7628>   OR.w inmacro,D1
00025512 <AmiBlitz3.ab3@7629>   MOVE.w D1,(A0)+                                          ;flag!
00025516 <AmiBlitz3.ab3@7630>    BNE.w copyconst
00025518 <AmiBlitz3.ab3@7631>   MOVE.l A5,-(A7)
0002551C <AmiBlitz3.ab3@7632>    BSR.w copyconst
00025522 <AmiBlitz3.ab3@7633>   MOVEA.l asmbuff,A0
00025526 <AmiBlitz3.ab3@7634>   CMP.w #$4,D1
0002552A <AmiBlitz3.ab3@7635>    BLS.w 'leave
00025530 <AmiBlitz3.ab3@7636>   TST.w lc
00025534 <AmiBlitz3.ab3@7637>    BNE.w 'leave
00025536 <AmiBlitz3.ab3@7638>   ADDQ.w #2,A0
00025538 <AmiBlitz3.ab3@7639>   MOVE.l (A7)+,(A0)+
0002553A <AmiBlitz3.ab3@7640>   CLR.b (A0)
00025542 <AmiBlitz3.ab3@7641>   MOVE.w #$0004,asmlen2                                    ;pointer + 0
00025544 <AmiBlitz3.ab3@7642>  RTS
00025546 <AmiBlitz3.ab3@7645>   NOT.w (A0)
00025548 <AmiBlitz3.ab3@7646>   ADDQ.w #4,A7
0002554A <AmiBlitz3.ab3@7647> RTS
0002554C <AmiBlitz3.ab3@7650> lc:  Ds.w 1
00025552 <AmiBlitz3.ab3@7654>   CLR.w lc
00025554 <AmiBlitz3.ab3@7655>   MOVEQ.l #$00,D1
00025556 <AmiBlitz3.ab3@7658>    ADDQ.w #1,D1                                            ;label name
00025582 <AmiBlitz3.ab3@7660>    !fget                                                   ;bsr.w get1bytemain
00025586 <AmiBlitz3.ab3@7662>    BEQ.w 'done
0002558A <AmiBlitz3.ab3@7665>    CMP.w #$22,d0
0002558E <AmiBlitz3.ab3@7666>    BNE.s 'loop_l10
00025594 <AmiBlitz3.ab3@7667>    NOT.w instringon
00025598 <AmiBlitz3.ab3@7670>    CMP.w #":",d0
0002559C <AmiBlitz3.ab3@7671>    BNE.s 'loop_l11
000255A2 <AmiBlitz3.ab3@7672>    TST.w instringon
000255A6 <AmiBlitz3.ab3@7673>    BEQ 'done
000255A8 <AmiBlitz3.ab3@7677>   TST.w D0
000255AC <AmiBlitz3.ab3@7678>   BPL.w 'notmi
000255AE <AmiBlitz3.ab3@7679>   MOVE.w D0,-(A7)
000255B0 <AmiBlitz3.ab3@7680>   LSR.w #8,D0
000255B2 <AmiBlitz3.ab3@7681>   MOVE.b D0,(A0)+
000255B4 <AmiBlitz3.ab3@7682>   MOVE.w (A7)+,D0
000255B6 <AmiBlitz3.ab3@7683>   MOVE.b D0,(A0)+
000255B8 <AmiBlitz3.ab3@7684>   ADDQ.w #1,D1
000255BC <AmiBlitz3.ab3@7685>  BRA.s 'loop
000255C2 <AmiBlitz3.ab3@7688>    TST.w instringon
000255C6 <AmiBlitz3.ab3@7689>    BNE.w 'putbyte
000255CC <AmiBlitz3.ab3@7691>    TST.b _dcb
000255D0 <AmiBlitz3.ab3@7692>    BNE 'notmi_l10
000255D4 <AmiBlitz3.ab3@7694>    CMP.w #$28,D0     ;'('
000255D8 <AmiBlitz3.ab3@7695>    BEQ.w 'done
000255DC <AmiBlitz3.ab3@7699>    CMP.w #$2C,D0     ;','
000255E0 <AmiBlitz3.ab3@7700>    BEQ.w 'done
000255E4 <AmiBlitz3.ab3@7701>    CMP.b #"'",D0           ; was #loclabch
000255E8 <AmiBlitz3.ab3@7702>    BNE.w 'putbyte
000255EE <AmiBlitz3.ab3@7703>    MOVE.w D0,lc                                     ;locallabels
000255F0 <AmiBlitz3.ab3@7704>    MOVE.l A1,-(A7)
000255F6 <AmiBlitz3.ab3@7705>    LEA lastgloballabel,A1
000255F8 <AmiBlitz3.ab3@7706>    TST.b (A1)
000255FC <AmiBlitz3.ab3@7707>    BEQ.w nolocerr
000255FE <AmiBlitz3.ab3@7710>   ADDQ.w #1,D1
00025600 <AmiBlitz3.ab3@7711>   MOVE.b (A1)+,(A0)+
00025604 <AmiBlitz3.ab3@7712>    BNE.w 'cloop
00025606 <AmiBlitz3.ab3@7713>   SUBQ.w #1,D1
00025608 <AmiBlitz3.ab3@7714>   SUBQ.w #1,A0
0002560A <AmiBlitz3.ab3@7715>   MOVEA.l (A7)+,A1
0002560C <AmiBlitz3.ab3@7718>   MOVE.b D0,(A0)+
00025610 <AmiBlitz3.ab3@7719>  BRA.w 'loop
00025612 <AmiBlitz3.ab3@7722>   CLR.b (A0)
00025618 <AmiBlitz3.ab3@7723>   MOVE.w D1,asmlen2
0002561A <AmiBlitz3.ab3@7724> RTS
00025620 <AmiBlitz3.ab3@7730>   CMP.l #$80ad,d0      
00025624 <AmiBlitz3.ab3@7731>   BNE.s 'l12
0002562A <AmiBlitz3.ab3@7732>  JMP bssseg
00025630 <AmiBlitz3.ab3@7735>   CMP.l #$807f,d0
00025634 <AmiBlitz3.ab3@7736>     BNE.s 'l13
0002563A <AmiBlitz3.ab3@7737>  JMP chipseg
00025640 <AmiBlitz3.ab3@7740>   ADDQ.l #1,destpointer                                    ;even
00025648 <AmiBlitz3.ab3@7741>   BCLR #$0,destpointer+3
0002564C <AmiBlitz3.ab3@7743>   SUBI.w #$803C,D0         ; was #$8000+fnum
0002564E <AmiBlitz3.ab3@7744>   LSL.w #2,D0
00025654 <AmiBlitz3.ab3@7745>   MOVEA.l #asmpnts,A0
00025658 <AmiBlitz3.ab3@7746>   MOVEA.l $0(A0,D0.W),A0                                   ;begin inline assembler
0002565E <AmiBlitz3.ab3@7747>   MOVE.w D0,temp1
00025660 <AmiBlitz3.ab3@7748>   MOVE.l A0,-(A7)
00025662 <AmiBlitz3.ab3@7750>   MOVEQ.l #$01,D1         ;word len (byte=0, long=2)
0002568E <AmiBlitz3.ab3@7752>    !fget                                                   ;bsr.w get1bytemain
00025692 <AmiBlitz3.ab3@7754>   CMP.w #$2E,D0           ;'.'
00025696 <AmiBlitz3.ab3@7755>    BNE.w 'dsize
000256C2 <AmiBlitz3.ab3@7757>   !fget                                                    ;bsr.w get1bytemain
000256C6 <AmiBlitz3.ab3@7759>   ORI.w #$20,D0
000256CA <AmiBlitz3.ab3@7760>   CMP.w #$77,D0           ;'w'                                  ;long
000256CE <AmiBlitz3.ab3@7761>    BEQ.w 'wsize
000256D2 <AmiBlitz3.ab3@7762>   CMP.w #$62,D0           ;'b'                                 ;byte
000256D6 <AmiBlitz3.ab3@7763>    BEQ.w 'bsize
000256DA <AmiBlitz3.ab3@7764>   CMP.w #$6C,D0           ;'l'                                 ;word
000256DE <AmiBlitz3.ab3@7766>    BEQ.w 'lsize
000256E2 <AmiBlitz3.ab3@7767>   CMP.w #"s",d0
000256E6 <AmiBlitz3.ab3@7769>   BNE syntaxerr
000256EA <AmiBlitz3.ab3@7770>  BRA.w 'bsize             ; was 'lsize org source
000256EC <AmiBlitz3.ab3@7773>   MOVEQ.l #$00,D1
000256F0 <AmiBlitz3.ab3@7774>   MOVE.w $8(A0),D0
000256F4 <AmiBlitz3.ab3@7775>  BRA.w 'tstsize
000256F6 <AmiBlitz3.ab3@7778>   MOVEQ.l #$04,D1
000256FA <AmiBlitz3.ab3@7779>  BRA.w 'putsize
000256FC <AmiBlitz3.ab3@7782>   MOVEQ.l #$04,D1
00025700 <AmiBlitz3.ab3@7783>   MOVE.w $8(A0),D0
00025702 <AmiBlitz3.ab3@7784>   LSR.w #4,D0
00025706 <AmiBlitz3.ab3@7785>  BRA.w 'tstsize
00025708 <AmiBlitz3.ab3@7788>   MOVEQ.l #$08,D1
0002570C <AmiBlitz3.ab3@7789>   MOVE.w $8(A0),D0
0002570E <AmiBlitz3.ab3@7790>   LSR.w #8,D0
00025712 <AmiBlitz3.ab3@7793>    ANDI.w #$F,D0
00025716 <AmiBlitz3.ab3@7794>   CMP.w #$F,D0
0002571A <AmiBlitz3.ab3@7796>    BNE.w 'cl60
00025722 <AmiBlitz3.ab3@7799>    CMP.l #"MULS",-6(a0)
00025726 <AmiBlitz3.ab3@7800>    BNE 'c20
0002572C <AmiBlitz3.ab3@7801>    MOVE.l #$4c000800,d1
00025732 <AmiBlitz3.ab3@7802>  JMP do32
0002573A <AmiBlitz3.ab3@7805>    CMP.l #"MULU",-6(a0)
0002573E <AmiBlitz3.ab3@7806>    BNE 'c30
00025744 <AmiBlitz3.ab3@7807>    MOVE.l #$4c000000,d1
0002574A <AmiBlitz3.ab3@7808>  JMP do32
00025752 <AmiBlitz3.ab3@7811>    CMP.l #"DIVS",-6(a0)
00025756 <AmiBlitz3.ab3@7812>    BNE 'c40
0002575C <AmiBlitz3.ab3@7813>    MOVE.l #$4c400800,d1
00025762 <AmiBlitz3.ab3@7814>  JMP do32
0002576A <AmiBlitz3.ab3@7817>    CMP.l #"DIVU",-6(a0)
0002576E <AmiBlitz3.ab3@7818>    BNE 'c50
00025774 <AmiBlitz3.ab3@7819>    MOVE.l #$4c400000,d1
0002577A <AmiBlitz3.ab3@7820>  JMP do32
0002577E <AmiBlitz3.ab3@7824>  BRA illsizeerr             ; in org source this was afte 'c160
000257AA <AmiBlitz3.ab3@7827>   !fget                                                    ;bsr.w get1bytemain
000257B0 <AmiBlitz3.ab3@7830>   MOVE.w D1,asmsize
000257B2 <AmiBlitz3.ab3@7831>   MOVEQ.l #-$01,D3
000257B6 <AmiBlitz3.ab3@7832>    BSR.w reget
000257BA <AmiBlitz3.ab3@7833>    BEQ.w 'done0
000257C4 <AmiBlitz3.ab3@7834>   MOVE.l #ptr_parameterstore,asmbuff
000257CE <AmiBlitz3.ab3@7837>    MOVE.w oldqflag,instringon
000257D4 <AmiBlitz3.ab3@7838>   MOVEA.l lastsourcepos,A5
000257D8 <AmiBlitz3.ab3@7840>    BSR.w getea
000257DA <AmiBlitz3.ab3@7841>   MOVE.l D4,D2                                              ;to src
000257DC <AmiBlitz3.ab3@7842>   MOVE.l D5,D3
000257E6 <AmiBlitz3.ab3@7843>   MOVE.w asmlen2,asmlen
000257E8 <AmiBlitz3.ab3@7844>   MOVEQ.l #-$01,D5
000257F2 <AmiBlitz3.ab3@7845>   MOVE.w extraword,extraword2
000257F6 <AmiBlitz3.ab3@7846>   CMP.w #$2C,D0                                             ;','
000257FA <AmiBlitz3.ab3@7847>    BNE.w 'done0
00025804 <AmiBlitz3.ab3@7848>   MOVE.l #namebuff2,asmbuff
00025808 <AmiBlitz3.ab3@7849>    BSR.w getea                                              ;dest
0002580A <AmiBlitz3.ab3@7856>   MOVEA.l (A7)+,A0
00025810 <AmiBlitz3.ab3@7860>   MOVEA.l destpointer,A1    ; pc
00025812 <AmiBlitz3.ab3@7862>   MOVEA.l A1,A4
00025814 <AmiBlitz3.ab3@7863>   ADDQ.w #2,A1
00025816 <AmiBlitz3.ab3@7864>   MOVE.w (A0),D1            ;opcode
00025818 <AmiBlitz3.ab3@7865>   TST.w D3
0002581C <AmiBlitz3.ab3@7866>    BMI.w 'none              ;no src/dest ea!
00025820 <AmiBlitz3.ab3@7870>   MOVE.w $E(A0),D0
00025824 <AmiBlitz3.ab3@7871>    BPL.w 'noia
00025828 <AmiBlitz3.ab3@7872>   BTST #$0,D0
0002582C <AmiBlitz3.ab3@7873>    BEQ.w 'noa
00025830 <AmiBlitz3.ab3@7874>   CMP.w #$1,D5
00025834 <AmiBlitz3.ab3@7875>    BNE.w 'noa
00025838 <AmiBlitz3.ab3@7876>   CMP.w #$E,D3
0002583C <AmiBlitz3.ab3@7877>    BEQ.w 'noia
00025842 <AmiBlitz3.ab3@7878>   MOVE.w temp1,D0
00025844 <AmiBlitz3.ab3@7879>   ADDQ.w #4,D0
00025848 <AmiBlitz3.ab3@7880>  BRA.w 'moveon
0002584C <AmiBlitz3.ab3@7883>   BTST #$1,D0
00025850 <AmiBlitz3.ab3@7884>    BEQ.w 'noia
00025854 <AmiBlitz3.ab3@7885>   CMP.w #$B,D3
00025858 <AmiBlitz3.ab3@7886>    BNE.w 'noia
0002585E <AmiBlitz3.ab3@7887>   MOVE.w temp1,D0
00025860 <AmiBlitz3.ab3@7890>   ADDQ.w #4,D0
00025866 <AmiBlitz3.ab3@7891>   MOVEA.l #asmpnts,A0
0002586A <AmiBlitz3.ab3@7892>   MOVEA.l $0(A0,D0.W),A0
0002586C <AmiBlitz3.ab3@7893>   MOVE.w (A0),D1
00025876 <AmiBlitz3.ab3@7896>   MOVE.l #ptr_parameterstore,buff1
00025880 <AmiBlitz3.ab3@7897>   MOVE.l #namebuff2,buff2
00025884 <AmiBlitz3.ab3@7898>   MOVE.l $A(A0),D0
00025888 <AmiBlitz3.ab3@7899>    BEQ.w 'nojsr
0002588A <AmiBlitz3.ab3@7900>   MOVEA.l D0,A3
00025890 <AmiBlitz3.ab3@7901>   MOVE.w asmsize,D6
00025892 <AmiBlitz3.ab3@7902>    JSR (A3)
00025896 <AmiBlitz3.ab3@7903>    BPL.w 'noerr
0002589A <AmiBlitz3.ab3@7904>   CMP.w #-$2,D0
0002589E <AmiBlitz3.ab3@7905>    BEQ.w illsizeerr
000258A2 <AmiBlitz3.ab3@7906>  BRA.w illeaerr
000258A6 <AmiBlitz3.ab3@7909>   BEQ.w 'nojsr
000258A8 <AmiBlitz3.ab3@7911>   EXG.l D2,D4
000258AA <AmiBlitz3.ab3@7912>   EXG.l D3,D5
000258B0 <AmiBlitz3.ab3@7914>   MOVE.l extraword,D6
000258B2 <AmiBlitz3.ab3@7915>   SWAP D6
000258B8 <AmiBlitz3.ab3@7916>   MOVE.l D6,extraword
000258C2 <AmiBlitz3.ab3@7918>   MOVE.l #namebuff2,buff1
000258CC <AmiBlitz3.ab3@7919>   MOVE.l #ptr_parameterstore,buff2
000258D2 <AmiBlitz3.ab3@7921>   MOVE.w asmlen,D6
000258D8 <AmiBlitz3.ab3@7922>   MOVE.w asmlen2,D7
000258DE <AmiBlitz3.ab3@7923>   MOVE.w D6,asmlen2
000258E4 <AmiBlitz3.ab3@7924>   MOVE.w D7,asmlen
000258EE <AmiBlitz3.ab3@7927>   MOVE.l buff1,asmbuff
000258F2 <AmiBlitz3.ab3@7928>   MOVE.w $E(A0),D0
000258F6 <AmiBlitz3.ab3@7929>    BEQ.w 'nothing
000258FA <AmiBlitz3.ab3@7930>    BMI.w 'nothing
000258FE <AmiBlitz3.ab3@7932>    CMP.w #$7000,d1
00025902 <AmiBlitz3.ab3@7933>    BNE 'skip
00025906 <AmiBlitz3.ab3@7934>    CMP.w #$b,d3
0002590A <AmiBlitz3.ab3@7935>    BNE illeaerr
0002590E <AmiBlitz3.ab3@7939>    CMP.w #$1,D0
00025912 <AmiBlitz3.ab3@7940>    BNE.w 'n1to8
00025916 <AmiBlitz3.ab3@7941>    CMP.w #$B,D3
0002591A <AmiBlitz3.ab3@7942>    BNE.w 'nothing
0002591E <AmiBlitz3.ab3@7945>    BSR.w insasm
00025920 <AmiBlitz3.ab3@7946>   MOVE.w D4,D2
00025922 <AmiBlitz3.ab3@7947>   MOVE.w D5,D3
00025926 <AmiBlitz3.ab3@7948>  BRA.w 'skipsrc2
0002592A <AmiBlitz3.ab3@7951>    CMP.w #$2,D0
0002592E <AmiBlitz3.ab3@7952>    BNE.w 'notbcc
00025932 <AmiBlitz3.ab3@7953>   CMP.w #$8,D3
00025936 <AmiBlitz3.ab3@7954>    BNE.w illeaerr
00025938 <AmiBlitz3.ab3@7955>   MOVEQ.l #$09,D3
0002593C <AmiBlitz3.ab3@7956>  BRA.w 'nothing
00025940 <AmiBlitz3.ab3@7959>    CMP.w #$3,D0
00025944 <AmiBlitz3.ab3@7960>    BEQ.w 'skipsrc
00025948 <AmiBlitz3.ab3@7963>   CMP.w #$4,D0
0002594C <AmiBlitz3.ab3@7964>    BEQ.w 'skipsrc
00025950 <AmiBlitz3.ab3@7967>   CMP.w #$5,D0
00025954 <AmiBlitz3.ab3@7968>    BNE.w 'notdbf
00025958 <AmiBlitz3.ab3@7969>   CMP.w #$8,D5
0002595C <AmiBlitz3.ab3@7970>    BNE.w illeaerr
0002595E <AmiBlitz3.ab3@7971>   OR.w D2,D1
00025960 <AmiBlitz3.ab3@7972>   MOVEQ.l #$09,D5
00025964 <AmiBlitz3.ab3@7976>   MOVE.w $2(A0),D6
00025968 <AmiBlitz3.ab3@7977>   MOVE.b $6(A0),D7
0002596C <AmiBlitz3.ab3@7978>   MOVEM.l D4-D5,-(A7)
00025972 <AmiBlitz3.ab3@7979>   MOVE.w extraword2,D4
00025976 <AmiBlitz3.ab3@7980>    BSR.w doea          ;do src
0002597A <AmiBlitz3.ab3@7982>   MOVEM.l (A7)+,D2-D3
0002597C <AmiBlitz3.ab3@7984>   TST.w D3
00025980 <AmiBlitz3.ab3@7987>     BMI.w 'one
00025986 <AmiBlitz3.ab3@7988>   MOVE.w extraword,D4
0002598A <AmiBlitz3.ab3@7989>   MOVE.w $4(A0),D6
0002598E <AmiBlitz3.ab3@7990>   MOVE.b $7(A0),D7
00025998 <AmiBlitz3.ab3@7991>   MOVE.l buff2,asmbuff
000259A2 <AmiBlitz3.ab3@7992>   MOVE.w asmlen2,asmlen
000259A6 <AmiBlitz3.ab3@7993>    BSR.w doea
000259AA <AmiBlitz3.ab3@7994>  BRA.w 'putit
000259AE <AmiBlitz3.ab3@7997>   MOVE.w $4(A0),D0
000259B2 <AmiBlitz3.ab3@7998>    BNE.w illeaerr
000259B6 <AmiBlitz3.ab3@7999>  BRA.w 'putit
000259BA <AmiBlitz3.ab3@8002>   MOVE.w $2(A0),D0
000259BE <AmiBlitz3.ab3@8003>   OR.w $4(A0),D0
000259C2 <AmiBlitz3.ab3@8004>    BNE.w illeaerr
000259C6 <AmiBlitz3.ab3@8009>   MOVE.w $8(A0),D0
000259CA <AmiBlitz3.ab3@8010>   ANDI.w #$F000,D0
000259CE <AmiBlitz3.ab3@8011>   CMP.w #-$1000,D0    ;was #$f000
000259D2 <AmiBlitz3.ab3@8012>    BEQ.w 'nosizep
000259D4 <AmiBlitz3.ab3@8013>   LSR.w #8,D0
000259D6 <AmiBlitz3.ab3@8014>   LSR.w #4,D0         ;shift for size
000259DA <AmiBlitz3.ab3@8016>   MOVE.w $8(A0),D2
000259E0 <AmiBlitz3.ab3@8017>   MOVE.w asmsize,D3
000259E2 <AmiBlitz3.ab3@8018>   LSR.w D3,D2
000259E6 <AmiBlitz3.ab3@8019>   ANDI.w #$F,D2
000259E8 <AmiBlitz3.ab3@8020>   LSL.w D0,D2
000259EA <AmiBlitz3.ab3@8021>   OR.w D2,D1          ;size into opcode
000259F0 <AmiBlitz3.ab3@8024>   CMPA.l destbufferend,A4
000259F4 <AmiBlitz3.ab3@8025>    BCS.w 'oky
000259FC <AmiBlitz3.ab3@8026>   MOVE.w #$FFFF,dontwrite_nomemleft     ; was -1
00025A00 <AmiBlitz3.ab3@8027>  BRA.w 'done
00025A02 <AmiBlitz3.ab3@8030>   MOVE.w D1,(A4)
00025A08 <AmiBlitz3.ab3@8033>   MOVE.l A1,destpointer
00025A0A <AmiBlitz3.ab3@8034> RTS
00025A10 <AmiBlitz3.ab3@8038>   MOVE.l destpointer,-(A7)
00025A16 <AmiBlitz3.ab3@8039>   MOVE.l A1,destpointer
00025A1A <AmiBlitz3.ab3@8040>    BSR.w addoff
00025A20 <AmiBlitz3.ab3@8041>   MOVEA.l destpointer,A1
00025A26 <AmiBlitz3.ab3@8042>   MOVE.l (A7)+,destpointer
00025A28 <AmiBlitz3.ab3@8043> RTS
00025A2C <AmiBlitz3.ab3@8047>   MOVEM.l d2-d6,-(a7)
00025A32 <AmiBlitz3.ab3@8048>   JSR stripspaces
00025A36 <AmiBlitz3.ab3@8049>   CMP.b #"d",(a5)+
00025A3A <AmiBlitz3.ab3@8050>   BNE noreg
00025A3C <AmiBlitz3.ab3@8051>   MOVE.b (a5)+,d0
00025A40 <AmiBlitz3.ab3@8052>   CMP.b #$30,d0
00025A44 <AmiBlitz3.ab3@8053>   BLT noreg
00025A48 <AmiBlitz3.ab3@8054>   CMP.b #$37,d0
00025A4C <AmiBlitz3.ab3@8055>   BGT noreg
00025A50 <AmiBlitz3.ab3@8056>   SUB.b #$30,d0
00025A52 <AmiBlitz3.ab3@8057>   MOVEQ #0,d3
00025A54 <AmiBlitz3.ab3@8058>   MOVE.b d0,d3                                             ;reg1
00025A56 <AmiBlitz3.ab3@8059>   ASL.l #8,d3
00025A58 <AmiBlitz3.ab3@8060>   ASL.l #8,d3
00025A5E <AmiBlitz3.ab3@8061>   JSR stripspaces
00025A62 <AmiBlitz3.ab3@8062>   CMP.b #",",(a5)+
00025A66 <AmiBlitz3.ab3@8063>   BNE noreg
00025A6C <AmiBlitz3.ab3@8064>   JSR stripspaces
00025A70 <AmiBlitz3.ab3@8065>   CMP.b #"d",(a5)+
00025A74 <AmiBlitz3.ab3@8066>   BNE noreg
00025A76 <AmiBlitz3.ab3@8067>   MOVE.b (a5)+,d0
00025A7A <AmiBlitz3.ab3@8068>   CMP.b #$30,d0
00025A7E <AmiBlitz3.ab3@8069>   BLT noreg
00025A82 <AmiBlitz3.ab3@8070>   CMP.b #$37,d0
00025A86 <AmiBlitz3.ab3@8071>   BGT noreg
00025A8A <AmiBlitz3.ab3@8072>   SUB.b #$30,d0
00025A8C <AmiBlitz3.ab3@8073>   MOVEQ #0,d4
00025A8E <AmiBlitz3.ab3@8074>   MOVE.b d0,d4                                             ;reg2
00025A90 <AmiBlitz3.ab3@8075>   ASL.l #8,d4
00025A92 <AmiBlitz3.ab3@8076>   ASL.l #4,d4
00025A94 <AmiBlitz3.ab3@8077>   OR.b d0,d1
00025A96 <AmiBlitz3.ab3@8078>   OR.l d3,d1
00025A98 <AmiBlitz3.ab3@8079>   OR.l d4,d1
00025A9E <AmiBlitz3.ab3@8080>   JSR writelong
00025AA2 <AmiBlitz3.ab3@8081>   MOVEM.l (a7)+,d2-d6
00025AA6 <AmiBlitz3.ab3@8082>   MOVEM.l d1/a1-a3,-(a7)
00025AAA <AmiBlitz3.ab3@8083> BRA exit
00025AAE <AmiBlitz3.ab3@8087>   MOVEM.l (a7)+,d2-d6
00025AB4 <AmiBlitz3.ab3@8088>   LEA errtext,a0
00025AB6 <AmiBlitz3.ab3@8089>   MOVE.l a0,-(a7)
00025ABC <AmiBlitz3.ab3@8090> JMP handle_compileerror
00025AC2 <AmiBlitz3.ab3@8095>   MOVE.w dontwrite_nomemleft,D1
00025AC6 <AmiBlitz3.ab3@8096>    BNE.w 'done
00025ACE <AmiBlitz3.ab3@8097>   BTST #$7,make_smallestcode
00025AD2 <AmiBlitz3.ab3@8098>    BEQ.w 'go
00025AD6 <AmiBlitz3.ab3@8099>   MOVE.w pass(PC),D1
00025ADA <AmiBlitz3.ab3@8100>    BEQ.w 'done
00025AE0 <AmiBlitz3.ab3@8103>   MOVEA.l templabel,A2                                     ;insert labels in Code
00025AE8 <AmiBlitz3.ab3@8104>   MOVE.b #1,curtemplabel
00025AF0 <AmiBlitz3.ab3@8105>   MOVE.w #$FFFF,constmode
00025AF6 <AmiBlitz3.ab3@8106>   CLR.w regnum
00025B00 <AmiBlitz3.ab3@8107>           MOVE.l #forthstack,forthsp
00025B0A <AmiBlitz3.ab3@8108>           MOVE.l #precstack,precsp
00025B0E <AmiBlitz3.ab3@8109>    BSR.w prepstack
00025B10 <AmiBlitz3.ab3@8112>   MOVE.l A2,-(A7)
00025B14 <AmiBlitz3.ab3@8113>    BSR.w chkstop
00025B16 <AmiBlitz3.ab3@8114>   MOVEA.l (A7)+,A2
00025B1A <AmiBlitz3.ab3@8115>   CMPA.w #$0,A2
00025B1E <AmiBlitz3.ab3@8116>    BEQ.w 'done2
00025B24 <AmiBlitz3.ab3@8117>    CLR.b iee
00025B2A <AmiBlitz3.ab3@8118>   MOVE.l A2,asmbuff
00025B2E <AmiBlitz3.ab3@8119>   LEA $10(A2),A5
00025B32 <AmiBlitz3.ab3@8120>   TST.b $F(A2)
00025B36 <AmiBlitz3.ab3@8121>    BNE.w 'skipo
00025B38 <AmiBlitz3.ab3@8122>   MOVEA.l (A5),A5                                          ;pointer to real text
00025B3E <AmiBlitz3.ab3@8125>    CLR.w asmtype
00025B42 <AmiBlitz3.ab3@8126>    CMP.b #".",(a5)
00025B46 <AmiBlitz3.ab3@8127>    BNE.s 'skipo_l10
00025B48 <AmiBlitz3.ab3@8128>    MOVE.l a2,-(a7)
00025B4A <AmiBlitz3.ab3@8129>    ADDQ.l #1,a5
00025B50 <AmiBlitz3.ab3@8130>    LEA newtypebase,a2
00025B54 <AmiBlitz3.ab3@8131>    BSR getparameter2
00025B58 <AmiBlitz3.ab3@8132>    BEQ.w syntaxerr
00025B5C <AmiBlitz3.ab3@8133>    BSR findtype
00025B60 <AmiBlitz3.ab3@8134>    BNE.w notypeerr
00025B64 <AmiBlitz3.ab3@8135>    LEA $4(a2),a2
00025B68 <AmiBlitz3.ab3@8136>    BSR getparameter2
00025B6C <AmiBlitz3.ab3@8137>    BEQ.w syntaxerr
00025B70 <AmiBlitz3.ab3@8138>    BSR.w findvariable2
00025B74 <AmiBlitz3.ab3@8139>    BNE.w notypeerr
00025B78 <AmiBlitz3.ab3@8140>    MOVE.w $4(a2),d3
00025B7A <AmiBlitz3.ab3@8141>    EXT.l d3
00025B7E <AmiBlitz3.ab3@8142>  BRA 'skipo_l30b
00025B82 <AmiBlitz3.ab3@8145>   CMP.b #"\",(a5)
00025B86 <AmiBlitz3.ab3@8146>     BNE 'skipo_l20
00025B88 <AmiBlitz3.ab3@8147>     ADDQ.l #1,a5
00025B8A <AmiBlitz3.ab3@8148>    MOVE.l a2,-(a7)
00025B8C <AmiBlitz3.ab3@8149>    MOVE.l a5,a4
00025B92 <AmiBlitz3.ab3@8150>    LEA usedpath,a5
00025B96 <AmiBlitz3.ab3@8151>    CMP.b #"*",(a5)
00025B9A <AmiBlitz3.ab3@8152>    BNE 'skipo_lm1
00025B9C <AmiBlitz3.ab3@8153>    ADDQ.l #1,a5
00025BA0 <AmiBlitz3.ab3@8156>    BSR.w getparameter2
00025BA4 <AmiBlitz3.ab3@8157>    BEQ.w syntaxerr
00025BAA <AmiBlitz3.ab3@8158>    LEA varbase,A2
00025BB2 <AmiBlitz3.ab3@8159>    MOVE.b #1,newvariable
00025BB6 <AmiBlitz3.ab3@8160>    BSR.w findvariable
00025BBC <AmiBlitz3.ab3@8161>    CLR.b newvariable
00025BC2 <AmiBlitz3.ab3@8162>    CMP.l #-1,d0
00025BC6 <AmiBlitz3.ab3@8163>    BEQ.w notypeerr
00025BC8 <AmiBlitz3.ab3@8164>    MOVE.l a4,a5
00025BCC <AmiBlitz3.ab3@8165>    MOVE.l $a(a2),a2
00025BD0 <AmiBlitz3.ab3@8166>    LEA $4(a2),a2
00025BD4 <AmiBlitz3.ab3@8167>    BSR getparameter2
00025BD8 <AmiBlitz3.ab3@8168>    BEQ.w syntaxerr
00025BDC <AmiBlitz3.ab3@8169>    BSR.w findvariable2
00025BE0 <AmiBlitz3.ab3@8170>    BNE.w notypeerr
00025BE4 <AmiBlitz3.ab3@8171>   MOVE.w $4(A2),D3
00025BE6 <AmiBlitz3.ab3@8172>   EXT.l D3
00025BEC <AmiBlitz3.ab3@8175>    CMP.b #"[",-1(a5)
00025BF0 <AmiBlitz3.ab3@8176>    BNE 'skipo_l30c
00025BF2 <AmiBlitz3.ab3@8177>    MOVEQ #0,d0
00025BF4 <AmiBlitz3.ab3@8178>    MOVE.b (a5)+,d0
00025BF6 <AmiBlitz3.ab3@8179>    MOVE.l d3,-(a7)
00025BF8 <AmiBlitz3.ab3@8180>    MOVEQ #0,d3
00025BFE <AmiBlitz3.ab3@8181>    JSR atoi
00025C00 <AmiBlitz3.ab3@8182>    MOVE.l (a7)+,d1
00025C04 <AmiBlitz3.ab3@8183>    MOVE.l $a(a2),a2
00025C08 <AmiBlitz3.ab3@8184>    MOVE.w 8(a2),d0
00025C0A <AmiBlitz3.ab3@8185>    MULS d0,d3
00025C0C <AmiBlitz3.ab3@8186>    ADD.l d1,d3
00025C0E <AmiBlitz3.ab3@8189>   MOVE.l (a7)+,a2
00025C12 <AmiBlitz3.ab3@8190>  BRA 'oko
00025C18 <AmiBlitz3.ab3@8193>   CMP.w #$c,$8(a2)
00025C1C <AmiBlitz3.ab3@8194>      BEQ 'skipo_lf1
00025C22 <AmiBlitz3.ab3@8195>      CMP.w #$d,$8(a2)
00025C26 <AmiBlitz3.ab3@8196>      BEQ 'skipo_lf1
00025C2C <AmiBlitz3.ab3@8199>   JSR evalconst3
00025C32 <AmiBlitz3.ab3@8202>   MOVEA.l asmbuff,A2
00025C36 <AmiBlitz3.ab3@8203>    BEQ.w 'oko
00025C3A <AmiBlitz3.ab3@8204>   CMP.w #$28,D0
00025C3E <AmiBlitz3.ab3@8205>    BEQ.w 'oko
00025C42 <AmiBlitz3.ab3@8206>   CMP.w #$2C,D0
00025C46 <AmiBlitz3.ab3@8207>    BEQ.w 'oko
00025C4A <AmiBlitz3.ab3@8208>  BRA.w syntaxerr
00025C52 <AmiBlitz3.ab3@8211>   MOVE.b #1,iee
00025C56 <AmiBlitz3.ab3@8212>  BRA 'skipo_lf2
00025C5A <AmiBlitz3.ab3@8215>   MOVEA.l $4(A2),A1
00025C5E <AmiBlitz3.ab3@8217>   MOVE.w $8(A2),D1                                         ;labelmode
00025C62 <AmiBlitz3.ab3@8218>   CMP.w #$5,D1
00025C66 <AmiBlitz3.ab3@8219>    BNE.w 'notdan
00025C6A <AmiBlitz3.ab3@8222>    BSR.w chkword                                           ;word
00025C6C <AmiBlitz3.ab3@8225>   MOVE.w D3,(A1)
00025C70 <AmiBlitz3.ab3@8226>  BRA.w 'next
00025C74 <AmiBlitz3.ab3@8229>   CMP.w #$6,D1
00025C78 <AmiBlitz3.ab3@8230>    BNE.w 'notdanxi
00025C7C <AmiBlitz3.ab3@8233>    BSR.w chkbyte                                           ;byte
00025C80 <AmiBlitz3.ab3@8236>   MOVE.b D3,$1(A1)
00025C84 <AmiBlitz3.ab3@8237>  BRA.w 'next
00025C88 <AmiBlitz3.ab3@8240>    CMP.w #$11,D1                                           ;byte
00025C8C <AmiBlitz3.ab3@8241>    BEQ.w 'isbyte2
00025C90 <AmiBlitz3.ab3@8242>    CMP.w #$c,d1
00025C94 <AmiBlitz3.ab3@8243>    BEQ 'single1
00025C98 <AmiBlitz3.ab3@8244>    CMP.w #$d,d1
00025C9C <AmiBlitz3.ab3@8245>    BEQ 'double1
00025CA0 <AmiBlitz3.ab3@8246>   CMP.w #$7,D1
00025CA4 <AmiBlitz3.ab3@8247>    BEQ.w 'word                                             ;word
00025CA8 <AmiBlitz3.ab3@8248>   CMP.w #$8,D1
00025CAC <AmiBlitz3.ab3@8249>    BNE.w 'notabsl
00025CB2 <AmiBlitz3.ab3@8252>   MOVE.w asmtype,D1                                        ;long
00025CB6 <AmiBlitz3.ab3@8253>    BEQ.w 'notpcrel
00025CBA <AmiBlitz3.ab3@8254>      BSR.w asmoff
00025CBC <AmiBlitz3.ab3@8257>   MOVE.l D3,(A1)
00025CC0 <AmiBlitz3.ab3@8258>  BRA.w 'next
00025CC6 <AmiBlitz3.ab3@8261>   fmove.s fp0,0(a1)
00025CCA <AmiBlitz3.ab3@8262>  BRA.w 'next
00025CD0 <AmiBlitz3.ab3@8265>   fmove.d fp0,0(a1)
00025CD4 <AmiBlitz3.ab3@8266>  BRA.w 'next
00025CD8 <AmiBlitz3.ab3@8269>   CMP.w #$9,D1
00025CDC <AmiBlitz3.ab3@8270>    BNE.w 'notdpc
00025CDE <AmiBlitz3.ab3@8271>   SUB.l A1,D3                                              ;branchword
00025CE2 <AmiBlitz3.ab3@8272>    BSR.w chkword
00025CE4 <AmiBlitz3.ab3@8273>   MOVE.w D3,(A1)
00025CE8 <AmiBlitz3.ab3@8274>  BRA.w 'next
00025CEC <AmiBlitz3.ab3@8277>   CMP.w #$A,D1
00025CF0 <AmiBlitz3.ab3@8278>    BNE.w 'imm
00025CF2 <AmiBlitz3.ab3@8279>   SUB.l A1,D3                                              ;branchbyte
00025CF6 <AmiBlitz3.ab3@8280>  BRA.w 'isbyte
00025CFA <AmiBlitz3.ab3@8283>   CMP.w #$11,d1
00025CFE <AmiBlitz3.ab3@8284>   BLE 'imm_org
00025D00 <AmiBlitz3.ab3@8285>   MOVE.l a3,-(a7)
00025D06 <AmiBlitz3.ab3@8286>   LEA pluginbase,a3
00025D0A <AmiBlitz3.ab3@8287>   MOVE.l 8(a2),a0
00025D0C <AmiBlitz3.ab3@8288>   JSR (a0)                                                 ;hook
00025D0E <AmiBlitz3.ab3@8289>   MOVE.l (a7)+,a3
00025D12 <AmiBlitz3.ab3@8290>  BRA 'next
00025D16 <AmiBlitz3.ab3@8293>   MOVE.w $A(A2),D0
00025D1A <AmiBlitz3.ab3@8294>    BEQ.w 'noflag
00025D1E <AmiBlitz3.ab3@8295>   CMP.w #$1,D0
00025D22 <AmiBlitz3.ab3@8296>    BEQ.w 'tocount
00025D26 <AmiBlitz3.ab3@8297>   CMP.w #$3,D0
00025D2A <AmiBlitz3.ab3@8298>    BEQ.w 'tomoveq
00025D2E <AmiBlitz3.ab3@8299>   CMP.w #$4,D0
00025D32 <AmiBlitz3.ab3@8300>    BEQ.w 'totrap
00025D36 <AmiBlitz3.ab3@8303>   CMP.w #$B,D1                                             ;long
00025D3A <AmiBlitz3.ab3@8304>    BEQ.w 'isabsl
00025D3E <AmiBlitz3.ab3@8305>  BRA 'word2                                                ;word
00025D44 <AmiBlitz3.ab3@8308>   CMP.l #$F,D3
00025D48 <AmiBlitz3.ab3@8309>    BHI.w illtraperr
00025D4A <AmiBlitz3.ab3@8310>   OR.b D3,-(A1)
00025D4E <AmiBlitz3.ab3@8311>  BRA.w 'next
00025D54 <AmiBlitz3.ab3@8314>   CMP.l #$8,D3
00025D58 <AmiBlitz3.ab3@8315>    BHI.w illimmerr
00025D5A <AmiBlitz3.ab3@8316>   TST.l D3
00025D5E <AmiBlitz3.ab3@8317>    BEQ.w illimmerr
00025D62 <AmiBlitz3.ab3@8318>   ANDI.w #$7,D3
00025D64 <AmiBlitz3.ab3@8319>   LSL.w #8,D3
00025D66 <AmiBlitz3.ab3@8320>   LSL.w #1,D3
00025D68 <AmiBlitz3.ab3@8321>   OR.w D3,-(A1)
00025D6C <AmiBlitz3.ab3@8322>  BRA.w 'next
00025D70 <AmiBlitz3.ab3@8325>    BSR.w chkbyte
00025D72 <AmiBlitz3.ab3@8326>   MOVE.b D3,-(A1)
00025D74 <AmiBlitz3.ab3@8329>   MOVEA.l (A2),A2
00025D78 <AmiBlitz3.ab3@8330>  BRA.w 'loop
00025D7E <AmiBlitz3.ab3@8333>   CLR.w constmode
00025D84 <AmiBlitz3.ab3@8336>   CLR.b curtemplabel
00025D86 <AmiBlitz3.ab3@8337> RTS
00025D88 <AmiBlitz3.ab3@8346>   BTST D3,D6
00025D8C <AmiBlitz3.ab3@8347>    BEQ.w illeaerr
00025D90 <AmiBlitz3.ab3@8348>    BSR.w makemode
00025D94 <AmiBlitz3.ab3@8349>   CMP.w #$7,D3
00025D98 <AmiBlitz3.ab3@8350>    BCS.w 'skip
00025D9A <AmiBlitz3.ab3@8351>   MOVE.w D3,D2
00025D9C <AmiBlitz3.ab3@8352>   SUBQ.w #7,D2
00025DA0 <AmiBlitz3.ab3@8353>   CMP.w #$5,D2
00025DA4 <AmiBlitz3.ab3@8354>    BCS.w 'skip0
00025DA6 <AmiBlitz3.ab3@8355>   MOVEQ.l #$04,D2
00025DA8 <AmiBlitz3.ab3@8358>   MOVEQ.l #$07,D3
00025DAA <AmiBlitz3.ab3@8361>   MOVE.b D7,D0
00025DAE <AmiBlitz3.ab3@8362>   ANDI.w #$F,D0
00025DB2 <AmiBlitz3.ab3@8363>   CMP.w #$F,D0
00025DB6 <AmiBlitz3.ab3@8364>    BEQ.w 'skip2
00025DB8 <AmiBlitz3.ab3@8365>   LSL.w D0,D3
00025DBA <AmiBlitz3.ab3@8366>   OR.w D3,D1
00025DBC <AmiBlitz3.ab3@8369>   LSR.w #4,D7
00025DC0 <AmiBlitz3.ab3@8370>   ANDI.w #$F,D7
00025DC4 <AmiBlitz3.ab3@8371>   CMP.w #$F,D7
00025DC8 <AmiBlitz3.ab3@8372>    BEQ.w 'skip3
00025DCA <AmiBlitz3.ab3@8373>   LSL.w D7,D2
00025DCC <AmiBlitz3.ab3@8374>   OR.w D2,D1
00025DCE <AmiBlitz3.ab3@8377> RTS
00025DD4 <AmiBlitz3.ab3@8381>   CMP.l #$7F,D3
00025DD8 <AmiBlitz3.ab3@8382>    BGT.w illdiserr
00025DDE <AmiBlitz3.ab3@8383>   CMP.l #$FFFFFF80,D3                                      ;#-128,d3 org source
00025DE2 <AmiBlitz3.ab3@8384>    BLT.w illdiserr
00025DE4 <AmiBlitz3.ab3@8385> RTS
00025DEA <AmiBlitz3.ab3@8389>   CMP.l #$7fff,D3
00025DEE <AmiBlitz3.ab3@8390>    BGT.w illdiserr
00025DF4 <AmiBlitz3.ab3@8391>   CMP.l #$FFFF8000,D3                                      ;#-32768,d3 org source
00025DF8 <AmiBlitz3.ab3@8392>    BLT.w illdiserr
00025DFA <AmiBlitz3.ab3@8393> RTS
00025DFC <AmiBlitz3.ab3@8398>   MOVE.b (a5)+,d0
00025DFE <AmiBlitz3.ab3@8399>   CMP.b d1,d0
00025E02 <AmiBlitz3.ab3@8400>   BEQ 'll10
00025E04 <AmiBlitz3.ab3@8401>   TST.b d0
00025E08 <AmiBlitz3.ab3@8402>   BNE 'll20
00025E0A <AmiBlitz3.ab3@8405>   SUBQ #1,a5
00025E0C <AmiBlitz3.ab3@8406> RTS
00025E0E <AmiBlitz3.ab3@8411>   MOVE.b (a5)+,d0
00025E12 <AmiBlitz3.ab3@8412>   CMP.b #",",d0
00025E16 <AmiBlitz3.ab3@8413>   BEQ 'll10
00025E1A <AmiBlitz3.ab3@8414>   CMP.b #";",d0
00025E1E <AmiBlitz3.ab3@8415>   BEQ 'll10
00025E22 <AmiBlitz3.ab3@8416>  CMP.b #":",d0
00025E26 <AmiBlitz3.ab3@8417>   BEQ 'll10
00025E28 <AmiBlitz3.ab3@8420>   TST.b d0
00025E2C <AmiBlitz3.ab3@8421>   BNE 'll20
00025E2E <AmiBlitz3.ab3@8424>   SUBQ #1,a5
00025E30 <AmiBlitz3.ab3@8425> RTS
00025E32 <AmiBlitz3.ab3@8429>   ADD.l a2,d1
00025E38 <AmiBlitz3.ab3@8430>   LEA tempspace,a1
00025E3A <AmiBlitz3.ab3@8431>   MOVE.l d1,a0
00025E3C <AmiBlitz3.ab3@8434>   MOVE.b (a0)+,(a1)+
00025E40 <AmiBlitz3.ab3@8435>   BNE.s 'l10
00025E42 <AmiBlitz3.ab3@8436>   SUBQ.l #1,a0
00025E44 <AmiBlitz3.ab3@8437>   SUBQ.l #1,a1
00025E46 <AmiBlitz3.ab3@8440>   MOVE.b (a5)+,(a1)+
00025E4A <AmiBlitz3.ab3@8441>   BNE.s 'l20
00025E4C <AmiBlitz3.ab3@8442>   CLR.b (a1)
00025E52 <AmiBlitz3.ab3@8443>   LEA tempspace,a5
00025E54 <AmiBlitz3.ab3@8444> RTS
00025E58 <AmiBlitz3.ab3@8448>   MOVEM.l D1-D2/A0,-(A7)
00025E5A <AmiBlitz3.ab3@8449>   MOVE.l d0,d2
00025E5C <AmiBlitz3.ab3@8450>   MOVEQ #0,d1
00025E5E <AmiBlitz3.ab3@8451>   MOVE.l a5,a4
00025E60 <AmiBlitz3.ab3@8454>   ADDQ.l #1,d1
00025E62 <AmiBlitz3.ab3@8455>   MOVE.b (a5)+,d0
00025E66 <AmiBlitz3.ab3@8456>   CMP.b #",",d0
00025E6A <AmiBlitz3.ab3@8457>   BEQ 'll10
00025E6E <AmiBlitz3.ab3@8458>   CMP.b #";",d0
00025E72 <AmiBlitz3.ab3@8459>   BEQ 'll10
00025E76 <AmiBlitz3.ab3@8460>   CMP.b #":",d0
00025E7A <AmiBlitz3.ab3@8461>   BEQ 'll10
00025E7E <AmiBlitz3.ab3@8462>   CMP.b #"(",d0
00025E82 <AmiBlitz3.ab3@8463>   BEQ 'll10
00025E84 <AmiBlitz3.ab3@8464>   TST.b d0
00025E88 <AmiBlitz3.ab3@8465>   BNE 'll20
00025E8A <AmiBlitz3.ab3@8468>   SUBQ #1,a5
00025E8E <AmiBlitz3.ab3@8469>   CMP.b #"'",(a4)
00025E92 <AmiBlitz3.ab3@8470>   BEQ 'llocal
00025E98 <AmiBlitz3.ab3@8471>   TST.w inmacro
00025E9C <AmiBlitz3.ab3@8472>   BNE 'lmacro
00025E9E <AmiBlitz3.ab3@8473>   MOVEQ.l #$14+4,D0
00025EA0 <AmiBlitz3.ab3@8474>   ADD.l d1,d0
00025EA2 <AmiBlitz3.ab3@8475>   MOVE.l d1,-(a7)
00025EA4 <AmiBlitz3.ab3@8476>   MOVEQ.l #$01,D1
00025EAA <AmiBlitz3.ab3@8477>   MOVEA.l _execbase,A6
00025EB0 <AmiBlitz3.ab3@8478>   MOVE.l mempool2,a0
00025EB4 <AmiBlitz3.ab3@8479>   JSR _AllocPooled(a6)
00025EB6 <AmiBlitz3.ab3@8481>   MOVE.l (a7)+,d1
00025EB8 <AmiBlitz3.ab3@8482>   TST.l d0
00025EBC <AmiBlitz3.ab3@8483>   BEQ nomemory
00025EBE <AmiBlitz3.ab3@8484>   MOVEA.l D0,A0
00025EC6 <AmiBlitz3.ab3@8486>   MOVE.w linenumat+2,$A(A0)
00025ECC <AmiBlitz3.ab3@8488>   MOVE.l templabel,(A0)
00025ED2 <AmiBlitz3.ab3@8489>   MOVE.l A0,templabel
00025EDA <AmiBlitz3.ab3@8490>   MOVE.l destpointer,$4(A0)
00025EDE <AmiBlitz3.ab3@8491>   MOVE.l d2,$8(A0)
00025EE2 <AmiBlitz3.ab3@8492>   LEA $E(A0),A0
00025EE6 <AmiBlitz3.ab3@8493>   MOVE.b #$14,(A0)+
00025EE8 <AmiBlitz3.ab3@8494>   CLR.b (a0)+
00025EEA <AmiBlitz3.ab3@8496>   MOVE.l a0,d2
00025EEC <AmiBlitz3.ab3@8497>   ADDQ.l #4,d2
00025EEE <AmiBlitz3.ab3@8498>   MOVE.l d2,(a0)+
00025EF0 <AmiBlitz3.ab3@8501>   MOVE.b (a4)+,(a0)+
00025EF2 <AmiBlitz3.ab3@8502>   SUBQ.l #1,d1
00025EF6 <AmiBlitz3.ab3@8503>   BNE 'lc1
00025EF8 <AmiBlitz3.ab3@8504>   CLR.b (a0)+
00025EFE <AmiBlitz3.ab3@8505>   MOVE.w linenumat,(a0)
00025F02 <AmiBlitz3.ab3@8506>   MOVEM.l (A7)+,D1-D2/A0
00025F04 <AmiBlitz3.ab3@8507>  RTS
00025F06 <AmiBlitz3.ab3@8510>   MOVEQ.l #$10+2,D0
00025F08 <AmiBlitz3.ab3@8511>   ADD.l d1,d0
00025F0C <AmiBlitz3.ab3@8512>   MOVEM.l a4/d3,-(a7)
00025F0E <AmiBlitz3.ab3@8513>   MOVE.l d1,d3
00025F10 <AmiBlitz3.ab3@8514>   MOVEQ.l #$01,D1
00025F16 <AmiBlitz3.ab3@8515>   MOVEA.l _execbase,A6
00025F1C <AmiBlitz3.ab3@8516>   MOVE.l mempool2,a0
00025F20 <AmiBlitz3.ab3@8517>   JSR _AllocPooled(a6)
00025F22 <AmiBlitz3.ab3@8519>   TST.l d0
00025F26 <AmiBlitz3.ab3@8520>   BEQ nomemory
00025F28 <AmiBlitz3.ab3@8521>   MOVEA.l D0,A0
00025F30 <AmiBlitz3.ab3@8524>   MOVE.w linenumat+2,$C(A0)
00025F36 <AmiBlitz3.ab3@8525>   MOVE.l templabel,(A0)
00025F3C <AmiBlitz3.ab3@8526>   MOVE.l A0,templabel
00025F44 <AmiBlitz3.ab3@8527>   MOVE.l destpointer,$4(A0)
00025F48 <AmiBlitz3.ab3@8528>   MOVE.l d2,$8(A0)
00025F4C <AmiBlitz3.ab3@8529>   LEA $E(A0),A0
00025F4E <AmiBlitz3.ab3@8530>   MOVE.b d3,(A0)+
00025F54 <AmiBlitz3.ab3@8531>   ADD.b #$10,-1(a0)
00025F58 <AmiBlitz3.ab3@8532>   MOVE.b #$1,(a0)+
00025F5A <AmiBlitz3.ab3@8533>   SUBQ.w #1,d3
00025F5C <AmiBlitz3.ab3@8536>   MOVE.b (a4)+,(a0)+
00025F5E <AmiBlitz3.ab3@8537>   SUBQ.l #1,d3
00025F62 <AmiBlitz3.ab3@8538>   BNE.s 'lm2
00025F64 <AmiBlitz3.ab3@8539>   CLR.b (a0)+
00025F6A <AmiBlitz3.ab3@8540>   MOVE.w linenumat,(a0)
00025F6E <AmiBlitz3.ab3@8541>   MOVEM.l (a7)+,d3/a4
00025F72 <AmiBlitz3.ab3@8542>   MOVEM.l (A7)+,D1-D2/A0
00025F74 <AmiBlitz3.ab3@8543>  RTS
00025F7A <AmiBlitz3.ab3@8546>   LEA lastgloballabel,a1
00025F7C <AmiBlitz3.ab3@8549>   ADDQ.l #1,d1
00025F7E <AmiBlitz3.ab3@8550>   TST.b (a1)+
00025F82 <AmiBlitz3.ab3@8551>   BNE.s 'll11
00025F84 <AmiBlitz3.ab3@8552>   MOVEQ.l #$10+2,D0
00025F86 <AmiBlitz3.ab3@8553>   ADD.l d1,d0
00025F8A <AmiBlitz3.ab3@8554>   MOVEM.l a4/d3,-(a7)
00025F8C <AmiBlitz3.ab3@8555>   MOVE.l d1,d3
00025F8E <AmiBlitz3.ab3@8556>   MOVEQ.l #$01,D1
00025F94 <AmiBlitz3.ab3@8557>   MOVEA.l _execbase,A6
00025F9A <AmiBlitz3.ab3@8558>   MOVE.l mempool2,a0
00025F9E <AmiBlitz3.ab3@8559>   JSR _AllocPooled(a6)
00025FA0 <AmiBlitz3.ab3@8561>   TST.l d0
00025FA4 <AmiBlitz3.ab3@8562>   BEQ nomemory
00025FA6 <AmiBlitz3.ab3@8563>   MOVEA.l D0,A0
00025FAE <AmiBlitz3.ab3@8566>   MOVE.w linenumat+2,$C(A0)
00025FB4 <AmiBlitz3.ab3@8567>   MOVE.l templabel,(A0)
00025FBA <AmiBlitz3.ab3@8568>   MOVE.l A0,templabel
00025FC2 <AmiBlitz3.ab3@8569>   MOVE.l destpointer,$4(A0)
00025FC6 <AmiBlitz3.ab3@8570>   MOVE.l d2,$8(A0)
00025FCA <AmiBlitz3.ab3@8571>   LEA $E(A0),A0
00025FCC <AmiBlitz3.ab3@8572>   MOVE.b d3,(A0)+
00025FD2 <AmiBlitz3.ab3@8573>   ADD.b #$10,-1(a0)
00025FD6 <AmiBlitz3.ab3@8574>   MOVE.b #$1,(a0)+
00025FD8 <AmiBlitz3.ab3@8575>   SUBQ.w #1,d3
00025FDE <AmiBlitz3.ab3@8576>   LEA lastgloballabel,a1
00025FE0 <AmiBlitz3.ab3@8579>   SUBQ.l #1,d3
00025FE2 <AmiBlitz3.ab3@8580>   MOVE.b (a1)+,(a0)+
00025FE6 <AmiBlitz3.ab3@8581>   BNE.s 'lm3
00025FE8 <AmiBlitz3.ab3@8582>   SUBQ.l #1,a0
00025FEA <AmiBlitz3.ab3@8585>   MOVE.b (a4)+,(a0)+
00025FEC <AmiBlitz3.ab3@8586>   SUBQ.l #1,d3
00025FF0 <AmiBlitz3.ab3@8587>   BNE.s 'lm1
00025FF2 <AmiBlitz3.ab3@8588>   CLR.b (a0)+
00025FF8 <AmiBlitz3.ab3@8589>   MOVE.w linenumat,(a0)
00025FFC <AmiBlitz3.ab3@8590>   MOVEM.l (a7)+,d3/a4
00026000 <AmiBlitz3.ab3@8591>   MOVEM.l (A7)+,D1-D2/A0
00026002 <AmiBlitz3.ab3@8592> RTS
0002602C <AmiBlitz3.ab3@8596>   !basic
0002608E <AmiBlitz3.ab3@8597>   error{!TRANS{"No memory available!!!\\nAB3 will terminate due to low memory!"}}
000260A0 <AmiBlitz3.ab3@8598>   loop Delay_ 1
000260A6 <AmiBlitz3.ab3@8599> Goto loop
000260AA <AmiBlitz3.ab3@8603>   MOVEM.l D0-D2/A0,-(A7)
000260AE <AmiBlitz3.ab3@8604>   MOVE.w $E(A0),-(A7)
000260B2 <AmiBlitz3.ab3@8605>    BPL.w 'ok
000260B4 <AmiBlitz3.ab3@8606>   CLR.w (A7)
000260B6 <AmiBlitz3.ab3@8609>   MOVE.l A1,-(A7)
000260B8 <AmiBlitz3.ab3@8610>   MOVEQ.l #$10+2,D0
000260BE <AmiBlitz3.ab3@8611>   ADD.w asmlen,D0
000260C0 <AmiBlitz3.ab3@8612>   MOVE.w D0,D2
000260C2 <AmiBlitz3.ab3@8613>   MOVEQ.l #$01,D1
000260C8 <AmiBlitz3.ab3@8614>   MOVEA.l _execbase,A6
000260CE <AmiBlitz3.ab3@8615>   MOVE.l mempool2,a0
000260D2 <AmiBlitz3.ab3@8616>   JSR _AllocPooled(a6)
000260D4 <AmiBlitz3.ab3@8618>   MOVEA.l D0,A0
000260DC <AmiBlitz3.ab3@8621>   MOVE.w linenumat+2,$C(A0)
000260E2 <AmiBlitz3.ab3@8622>   MOVE.l templabel,(A0)
000260E8 <AmiBlitz3.ab3@8623>   MOVE.l A0,templabel
000260EC <AmiBlitz3.ab3@8624>   MOVE.l (A7),$4(A0)
000260F0 <AmiBlitz3.ab3@8625>   MOVE.w d3,$8(A0)
000260F6 <AmiBlitz3.ab3@8626>   MOVE.w $4(A7),$A(A0)
000260FA <AmiBlitz3.ab3@8627>   LEA $E(A0),A0
000260FC <AmiBlitz3.ab3@8628>   MOVE.b D2,(A0)+                                           ;length
00026102 <AmiBlitz3.ab3@8629>   MOVEA.l asmbuff,A1
00026104 <AmiBlitz3.ab3@8630>   ADDQ.w #1,A1
00026106 <AmiBlitz3.ab3@8631>   MOVE.b (A1)+,(A0)+                                        ;type - 0 = indirect,else direct
0002610A <AmiBlitz3.ab3@8632>    BNE.w 'loop
0002610C <AmiBlitz3.ab3@8633>   MOVE.l (A1)+,(A0)+
00026112 <AmiBlitz3.ab3@8634>   MOVE.w linenumat,(a0)
00026116 <AmiBlitz3.ab3@8635>  BRA.w 'loopdone
00026118 <AmiBlitz3.ab3@8638>    MOVE.b (A1)+,(A0)+
0002611C <AmiBlitz3.ab3@8639>    BNE.w 'loop
00026122 <AmiBlitz3.ab3@8640>    MOVE.w linenumat,(a0)
00026124 <AmiBlitz3.ab3@8643>   MOVEA.l (A7)+,A1
00026126 <AmiBlitz3.ab3@8644>   ADDQ.w #2,A7
0002612A <AmiBlitz3.ab3@8645>   MOVEM.l (A7)+,D0-D2/A0
0002612C <AmiBlitz3.ab3@8646> RTS
00026130 <AmiBlitz3.ab3@8650>   CMP.w #$5,D3
00026134 <AmiBlitz3.ab3@8651>    BCS.w 'done
00026138 <AmiBlitz3.ab3@8652>   CMP.w #$B,D3
0002613C <AmiBlitz3.ab3@8653>    BHI.w 'done2
00026140 <AmiBlitz3.ab3@8654>    BEQ.w 'imm
00026144 <AmiBlitz3.ab3@8655>    BSR.w insasm
00026148 <AmiBlitz3.ab3@8656>   CMP.w #$5,D3
0002614C <AmiBlitz3.ab3@8657>    BEQ.w 'word
00026150 <AmiBlitz3.ab3@8658>   CMP.w #$6,D3
00026154 <AmiBlitz3.ab3@8659>    BEQ.w 'dxi
00026158 <AmiBlitz3.ab3@8660>   CMP.w #$7,D3
0002615C <AmiBlitz3.ab3@8661>    BEQ.w 'word
00026160 <AmiBlitz3.ab3@8662>   CMP.w #$8,D3
00026164 <AmiBlitz3.ab3@8663>    BEQ.w 'long
00026168 <AmiBlitz3.ab3@8664>   CMP.w #$9,D3
0002616C <AmiBlitz3.ab3@8665>    BEQ.w 'word
00026172 <AmiBlitz3.ab3@8669>   CMPA.l destbufferend,A1
00026176 <AmiBlitz3.ab3@8670>    BCS.w 'ok7
00026178 <AmiBlitz3.ab3@8671>   ADDQ.w #2,A1
0002617A <AmiBlitz3.ab3@8672>  RTS
0002617C <AmiBlitz3.ab3@8675>   MOVE.w D4,(A1)+
0002617E <AmiBlitz3.ab3@8676>  RTS
00026186 <AmiBlitz3.ab3@8679>   CMPI.w #$8,asmsize
0002618A <AmiBlitz3.ab3@8680>    BCC.w 'immlong
0002618C <AmiBlitz3.ab3@8681>   MOVEQ.l #$10,D3
00026190 <AmiBlitz3.ab3@8682>    BSR.w insasm
00026192 <AmiBlitz3.ab3@8683>   MOVEQ.l #$0B,D3
00026196 <AmiBlitz3.ab3@8684>  BRA.w 'word
0002619A <AmiBlitz3.ab3@8687>   BSR.w insasm
0002619C <AmiBlitz3.ab3@8690>   ADDQ.w #2,A1
0002619E <AmiBlitz3.ab3@8693>   ADDQ.w #2,A1
000261A0 <AmiBlitz3.ab3@8694>  RTS
000261A4 <AmiBlitz3.ab3@8697>   CMP.w #$F,D3
000261A8 <AmiBlitz3.ab3@8698>    BNE.w 'done
000261AE <AmiBlitz3.ab3@8699>   CMPA.l destbufferend,A1
000261B2 <AmiBlitz3.ab3@8700>    BCS.w 'ok3
000261B4 <AmiBlitz3.ab3@8701>   ADDQ.w #2,A1
000261B6 <AmiBlitz3.ab3@8702>   ADDQ.w #4,A7
000261B8 <AmiBlitz3.ab3@8703>  RTS
000261BA <AmiBlitz3.ab3@8706>   MOVE.w D2,(A1)+
000261BC <AmiBlitz3.ab3@8707>   ADDQ.w #4,A7
000261BE <AmiBlitz3.ab3@8710> RTS
000261C2 <AmiBlitz3.ab3@8719>   BSR.w storeloc
000261CC <AmiBlitz3.ab3@8721>   MOVE.l linenumat,oldline
000261CE <AmiBlitz3.ab3@8723>   MOVEQ.l #$00,D1
000261D2 <AmiBlitz3.ab3@8724>    BSR.w get1bytemain    ;eol?
000261D6 <AmiBlitz3.ab3@8725>    BEQ.w 'done
000261D8 <AmiBlitz3.ab3@8726>   MOVEQ.l #$00,D3
000261DC <AmiBlitz3.ab3@8727>  BRA.w 'skiphelp
000261E0 <AmiBlitz3.ab3@8730>    BSR.w get1bytemain
000261E4 <AmiBlitz3.ab3@8731>    BNE.w 'skip
000261E6 <AmiBlitz3.ab3@8735>   TST.w D3
000261EA <AmiBlitz3.ab3@8736>    BNE.w brackets_                                         ;syntax error brackets
000261EE <AmiBlitz3.ab3@8737>  BRA.w 'done2
000261F4 <AmiBlitz3.ab3@8740>    MOVE.w instringon,D4
000261F8 <AmiBlitz3.ab3@8743>     BEQ 'skiphelp
000261FA <AmiBlitz3.ab3@8746>     MOVEQ #0,d0
000261FC <AmiBlitz3.ab3@8747>      MOVE.b (a5)+,d0                                       ;fix "ue"
00026202 <AmiBlitz3.ab3@8748>      MOVE.w d0,lastchar
00026206 <AmiBlitz3.ab3@8749>      BEQ 'ready
0002620A <AmiBlitz3.ab3@8750>      CMP.b #$22,d0
0002620E <AmiBlitz3.ab3@8751>      BNE 'l1
00026214 <AmiBlitz3.ab3@8752>      NOT.w instringon
00026218 <AmiBlitz3.ab3@8753>  BRA 'loop
0002621C <AmiBlitz3.ab3@8758>            CMP.b #"@",d0                                   ;expand line @@ 1. for parameter
00026220 <AmiBlitz3.ab3@8759>            BNE 'l10
00026224 <AmiBlitz3.ab3@8760>            CMP.b #"@",(a5)
00026228 <AmiBlitz3.ab3@8761>            BNE 'l10
0002622E <AmiBlitz3.ab3@8764>            TST.w ininclude
00026232 <AmiBlitz3.ab3@8765>            BNE 'inc
00026238 <AmiBlitz3.ab3@8766>            MOVE.l sourceline3,a5
0002623E <AmiBlitz3.ab3@8767>            CMP.l #0,a5
00026242 <AmiBlitz3.ab3@8768>            BNE 'l11t
00026248 <AmiBlitz3.ab3@8769>            MOVEA.l sourceline,A5
0002624A <AmiBlitz3.ab3@8772>            MOVEA.l (A5),A5
00026250 <AmiBlitz3.ab3@8773>            CMP.l #0,a5
00026254 <AmiBlitz3.ab3@8774>            BEQ 'done2
0002625A <AmiBlitz3.ab3@8775>            MOVE.l a5,sourceline3
0002625E <AmiBlitz3.ab3@8776>            LEA $9(A5),A5
00026262 <AmiBlitz3.ab3@8777>   BRA 'l11
00026264 <AmiBlitz3.ab3@8780>            ADDQ.l #1,a5
00026266 <AmiBlitz3.ab3@8781>            TST.b (a5)
0002626A <AmiBlitz3.ab3@8782>            BNE 'inc
0002626C <AmiBlitz3.ab3@8786>            ADDQ.l #1,a5
0002626E <AmiBlitz3.ab3@8787>            TST.b (a5)
00026272 <AmiBlitz3.ab3@8788>            BEQ illeolerr
00026274 <AmiBlitz3.ab3@8789>            MOVE.l a5,-(a7)
00026278 <AmiBlitz3.ab3@8792>       CMP.b #" ",(a5)+
0002627C <AmiBlitz3.ab3@8793>       BEQ 'l110
00026282 <AmiBlitz3.ab3@8794>        CMP.b #";",-1(a5)
00026284 <AmiBlitz3.ab3@8795>        MOVE.l (a7)+,a5
00026288 <AmiBlitz3.ab3@8796>        BEQ 'l111
0002628C <AmiBlitz3.ab3@8797>   BRA 'loop
00026290 <AmiBlitz3.ab3@8801>    CMP.w #$29,D0      ;')'
00026294 <AmiBlitz3.ab3@8802>    BNE.w 'skip2
00026296 <AmiBlitz3.ab3@8803>   TST.w D3
0002629A <AmiBlitz3.ab3@8804>    BEQ.w 'done2
0002629C <AmiBlitz3.ab3@8807>   SUBQ.w #1,D3
000262A0 <AmiBlitz3.ab3@8808>  BRA.w 'loop
000262A4 <AmiBlitz3.ab3@8811>    CMP.w #$7D,D0      ;'}'
000262A8 <AmiBlitz3.ab3@8812>    BEQ.w 'skip3
000262AC <AmiBlitz3.ab3@8813>   CMP.w #$28,D0       ;'('
000262B0 <AmiBlitz3.ab3@8814>    BNE.w 'skip4a
000262B2 <AmiBlitz3.ab3@8817>    ADDQ.w #1,D3
000262B6 <AmiBlitz3.ab3@8818>  BRA.w 'loop
000262BA <AmiBlitz3.ab3@8821>   CMP.w #$7B,D0        ;'{'
000262BE <AmiBlitz3.ab3@8822>    BEQ.w 'skip4
000262C2 <AmiBlitz3.ab3@8823>   CMP.w #$2C,D0        ;','
000262C6 <AmiBlitz3.ab3@8824>    BNE.w 'loop
000262C8 <AmiBlitz3.ab3@8825>   TST.w D3
000262CC <AmiBlitz3.ab3@8826>    BNE.w 'loop
000262CE <AmiBlitz3.ab3@8827>   ADDQ.w #1,D1
000262D2 <AmiBlitz3.ab3@8828>  BRA.w 'loop
000262D4 <AmiBlitz3.ab3@8831>   ADDQ.w #1,D1
000262DA <AmiBlitz3.ab3@8835>   CLR.l sourceline3
000262E4 <AmiBlitz3.ab3@8836>   MOVE.l oldline,linenumat
000262E8 <AmiBlitz3.ab3@8838> BRA.w resloc
000262EE <AmiBlitz3.ab3@8851>    CLR.w numreps
000262F0 <AmiBlitz3.ab3@8852>   MOVE.w D1,D0
000262F4 <AmiBlitz3.ab3@8853>   ANDI.w #$FF00,D0
000262F8 <AmiBlitz3.ab3@8854>    BEQ.w 'noreps
000262FA <AmiBlitz3.ab3@8855>   LSR.w #8,D0
000262FC <AmiBlitz3.ab3@8856>   LSR.w #4,D0           ;d0= start of reps
00026300 <AmiBlitz3.ab3@8857>    BEQ.w 'skip
00026302 <AmiBlitz3.ab3@8858>   SUB.b D0,D1           ;new number to fetch
0002630C <AmiBlitz3.ab3@8860>    MOVE.w regnum,regnumfunc
00026312 <AmiBlitz3.ab3@8861>    MOVE.b funcparloop,-(a7)
0002631A <AmiBlitz3.ab3@8862>    MOVE.b #0,funcparloop
00026320 <AmiBlitz3.ab3@8863>    MOVE.l leftsidetype,-(a7)
00026326 <AmiBlitz3.ab3@8864>    MOVE.l rightsidetype,-(a7)
0002632C <AmiBlitz3.ab3@8865>    MOVE.w leftsideflagmask,-(a7)
00026332 <AmiBlitz3.ab3@8866>    MOVE.w rightsideflagmask,-(a7)
00026338 <AmiBlitz3.ab3@8867>    CLR.l leftsidetype
0002633E <AmiBlitz3.ab3@8868>    CLR.l rightsidetype
00026344 <AmiBlitz3.ab3@8869>    CLR.w leftsideflagmask
0002634A <AmiBlitz3.ab3@8870>    CLR.w rightsideflagmask
00026350 <AmiBlitz3.ab3@8871>    MOVE.b blitzparloop,-(a7)
00026358 <AmiBlitz3.ab3@8872>    MOVE.b #1,blitzparloop
0002635C <AmiBlitz3.ab3@8874>    BSR.w fetchpees2      ;fetch first parms
00026362 <AmiBlitz3.ab3@8876>    MOVE.b (a7)+,blitzparloop
00026368 <AmiBlitz3.ab3@8877>    MOVE.w (a7)+,rightsideflagmask
0002636E <AmiBlitz3.ab3@8878>    MOVE.w (a7)+,leftsideflagmask
00026374 <AmiBlitz3.ab3@8879>    MOVE.l (a7)+,rightsidetype
0002637A <AmiBlitz3.ab3@8880>    MOVE.l (a7)+,leftsidetype
00026380 <AmiBlitz3.ab3@8881>    MOVE.b (a7)+,funcparloop
00026384 <AmiBlitz3.ab3@8883>   CMP.w #$2C,D0          ;','
00026388 <AmiBlitz3.ab3@8884>    BNE.w syntaxerr
0002638A <AmiBlitz3.ab3@8889>   MOVE.w D1,D2
0002638C <AmiBlitz3.ab3@8890>   LSR.w #8,D2
00026390 <AmiBlitz3.ab3@8891>   ANDI.w #$7,D2         ;# repeatable....
00026392 <AmiBlitz3.ab3@8894>    CMP.b D2,D1
00026396 <AmiBlitz3.ab3@8895>    BCS.w 'repsdone      ;all reps done....
00026398 <AmiBlitz3.ab3@8896>   SUB.b D2,D1
0002639C <AmiBlitz3.ab3@8897>   MOVEM.l D2/A2,-(A7)
0002639E <AmiBlitz3.ab3@8898>   MOVE.w D2,D0
000263A4 <AmiBlitz3.ab3@8900>   MOVE.b funcparloop,-(a7)
000263AC <AmiBlitz3.ab3@8901>   MOVE.b #0,funcparloop
000263B2 <AmiBlitz3.ab3@8902>   MOVE.l leftsidetype,-(a7)
000263B8 <AmiBlitz3.ab3@8903>   MOVE.l rightsidetype,-(a7)
000263BE <AmiBlitz3.ab3@8904>   MOVE.w leftsideflagmask,-(a7)
000263C4 <AmiBlitz3.ab3@8905>   MOVE.w rightsideflagmask,-(a7)
000263CA <AmiBlitz3.ab3@8906>   CLR.l leftsidetype
000263D0 <AmiBlitz3.ab3@8907>   CLR.l rightsidetype
000263D6 <AmiBlitz3.ab3@8908>   CLR.w leftsideflagmask
000263DC <AmiBlitz3.ab3@8909>   CLR.w rightsideflagmask
000263E2 <AmiBlitz3.ab3@8910>   MOVE.b blitzparloop,-(a7)
000263EA <AmiBlitz3.ab3@8911>   MOVE.b #1,blitzparloop
000263EE <AmiBlitz3.ab3@8913>   BSR.w fetchpees4
000263F4 <AmiBlitz3.ab3@8915>   MOVE.b (a7)+,blitzparloop
000263FA <AmiBlitz3.ab3@8916>   MOVE.w (a7)+,rightsideflagmask
00026400 <AmiBlitz3.ab3@8917>   MOVE.w (a7)+,leftsideflagmask
00026406 <AmiBlitz3.ab3@8918>   MOVE.l (a7)+,rightsidetype
0002640C <AmiBlitz3.ab3@8919>   MOVE.l (a7)+,leftsidetype
00026412 <AmiBlitz3.ab3@8920>   MOVE.b (a7)+,funcparloop
00026416 <AmiBlitz3.ab3@8922>   MOVEM.l (A7)+,D2/A2
0002641C <AmiBlitz3.ab3@8923>   ADDQ.w #1,numreps
00026420 <AmiBlitz3.ab3@8924>  BRA.w 'rloop
00026426 <AmiBlitz3.ab3@8927>    MOVE.w numreps,D3
0002642A <AmiBlitz3.ab3@8928>    BEQ.w syntaxerr
0002642C <AmiBlitz3.ab3@8929>   ADDA.w D2,A2
00026430 <AmiBlitz3.ab3@8930>   ANDI.w #$FF,D1
00026434 <AmiBlitz3.ab3@8931>    BEQ.w 'done
00026438 <AmiBlitz3.ab3@8938>   CMP.w #$2C,D0       ;','
0002643C <AmiBlitz3.ab3@8939>    BNE.w syntaxerr
0002643E <AmiBlitz3.ab3@8942>    MOVE.w D1,D0
00026442 <AmiBlitz3.ab3@8943>    BNE.w 'fetchpees2b
00026444 <AmiBlitz3.ab3@8946>  RTS
0002644A <AmiBlitz3.ab3@8950>   MOVE.b funcparloop,-(a7)
00026450 <AmiBlitz3.ab3@8951>   MOVE.l leftsidetype,-(a7)
00026456 <AmiBlitz3.ab3@8952>   MOVE.l rightsidetype,-(a7)
0002645C <AmiBlitz3.ab3@8953>   MOVE.w leftsideflagmask,-(a7)
00026462 <AmiBlitz3.ab3@8954>   MOVE.w rightsideflagmask,-(a7)
00026468 <AmiBlitz3.ab3@8955>   CLR.l leftsidetype
0002646E <AmiBlitz3.ab3@8956>   CLR.l rightsidetype
00026474 <AmiBlitz3.ab3@8957>   CLR.w leftsideflagmask
0002647A <AmiBlitz3.ab3@8958>   CLR.w rightsideflagmask
00026482 <AmiBlitz3.ab3@8959>   MOVE.b #0,funcparloop
00026488 <AmiBlitz3.ab3@8960>   MOVE.b blitzparloop,-(a7)
00026490 <AmiBlitz3.ab3@8961>   MOVE.b #1,blitzparloop
00026494 <AmiBlitz3.ab3@8962>   BSR.w fetchpees2
0002649A <AmiBlitz3.ab3@8963>   MOVE.b (a7)+,blitzparloop
000264A0 <AmiBlitz3.ab3@8964>   MOVE.w (a7)+,rightsideflagmask
000264A6 <AmiBlitz3.ab3@8965>   MOVE.w (a7)+,leftsideflagmask
000264AC <AmiBlitz3.ab3@8966>   MOVE.l (a7)+,rightsidetype
000264B2 <AmiBlitz3.ab3@8967>   MOVE.l (a7)+,leftsidetype
000264B8 <AmiBlitz3.ab3@8968>   MOVE.b (a7)+,funcparloop
000264BA <AmiBlitz3.ab3@8969> RTS
000264BE <AmiBlitz3.ab3@8973> ptype:    Dc.b $3F,$3C,$00,$00                             ;MOVE.W  #$0000,-(A7)
000264C0 <AmiBlitz3.ab3@8976> partostack:  Ds.w 1                                        ;pmode org source
000264C2 <AmiBlitz3.ab3@8980>   MOVEQ.l #$01,D2
000264C6 <AmiBlitz3.ab3@8981> BRA.w fetchpees3
000264C8 <AmiBlitz3.ab3@8984>   MOVEQ.l #$00,D2
000264CC <AmiBlitz3.ab3@8987>   ANDI.w #$F,D0
000264D2 <AmiBlitz3.ab3@8995>   CLR.w parnum
000264D4 <AmiBlitz3.ab3@8996>   MOVE.w D1,-(A7)
000264D8 <AmiBlitz3.ab3@8997>   MOVE.w partostack(PC),-(A7)                              ;in case of recursion
000264DE <AmiBlitz3.ab3@8998>   MOVE.w D2,partostack
000264E0 <AmiBlitz3.ab3@8999>   MOVE.w D0,-(A7)
000264E4 <AmiBlitz3.ab3@9000>   CMP.w #"@@",(a5)                                        
000264E8 <AmiBlitz3.ab3@9001>   BNE 'loop                                      ;was 'l15
000264EE <AmiBlitz3.ab3@9002>   TST.w ininclude                                          ;merge macrolines
000264F2 <AmiBlitz3.ab3@9003>   BNE errorjoin
000264F8 <AmiBlitz3.ab3@9004>        MOVEA.l sourceline,A5
000264FA <AmiBlitz3.ab3@9007>            MOVEA.l (A5),A5
00026500 <AmiBlitz3.ab3@9008>            MOVE.l a5,sourceline
00026504 <AmiBlitz3.ab3@9009>            LEA $9(A5),A5
0002650A <AmiBlitz3.ab3@9010>            ADDQ.l #1,linenumat
0002650C <AmiBlitz3.ab3@9013>   MOVE.b (A2)+,D2                                          ;parameterloop   d2=vartype
00026510 <AmiBlitz3.ab3@9014>    BNE.w 'skip0
00026516 <AmiBlitz3.ab3@9015>   MOVE.w userp,D2                                          ;user selected type
00026518 <AmiBlitz3.ab3@9018>    MOVE.l A2,-(A7)
0002651E <AmiBlitz3.ab3@9019>    ADDQ.w #1,parnum
00026524 <AmiBlitz3.ab3@9020>    TST.b funccall
00026528 <AmiBlitz3.ab3@9021>    BEQ 'skip0_l1
00026530 <AmiBlitz3.ab3@9022>    CMP.w #6,parnum
00026534 <AmiBlitz3.ab3@9023>    BLE 'skip0_l1
00026538 <AmiBlitz3.ab3@9024>    CMP.w #7,d2
0002653E <AmiBlitz3.ab3@9030>    TST.b fpu
00026542 <AmiBlitz3.ab3@9031>    BEQ 'skip0_old
00026548 <AmiBlitz3.ab3@9032>    TST.w regnumfunc
0002654C <AmiBlitz3.ab3@9033>    BEQ 'skip0_old
00026552 <AmiBlitz3.ab3@9034>    CMP.w #$48e7,-4(a4)
00026556 <AmiBlitz3.ab3@9035>    BNE 'skip0_old
00026558 <AmiBlitz3.ab3@9036>    MOVEQ #0,d1
0002655E <AmiBlitz3.ab3@9037>    MOVE.w regnum,d1
00026564 <AmiBlitz3.ab3@9038>    CMP regnumfunc,d1                                       ;fpu reg function save
00026568 <AmiBlitz3.ab3@9039>    BGE 'skip0_old
0002656A <AmiBlitz3.ab3@9040>    ASL.w #7,d1
0002656C <AmiBlitz3.ab3@9041>    MOVE.l d0,-(a7)
00026572 <AmiBlitz3.ab3@9042>    MOVE.w regnumfunc,d0
00026578 <AmiBlitz3.ab3@9043>    CLR.w regmask
0002657E <AmiBlitz3.ab3@9046>    BSET d0,regmask
00026580 <AmiBlitz3.ab3@9047>    SUBQ #1,d0
00026584 <AmiBlitz3.ab3@9048>    BNE 'skip0_loop
00026586 <AmiBlitz3.ab3@9049>     MOVEQ #0,d0
0002658C <AmiBlitz3.ab3@9052>       BTST d0,regmask
00026590 <AmiBlitz3.ab3@9053>       BEQ 'skip0_noa7
00026592 <AmiBlitz3.ab3@9054>       MOVEQ #0,d1
00026594 <AmiBlitz3.ab3@9055>       MOVE.w d0,d1
00026596 <AmiBlitz3.ab3@9056>       SUBQ.w #1,d1
00026598 <AmiBlitz3.ab3@9057>       ASL #7,d1
0002659E <AmiBlitz3.ab3@9058>       OR.l #$f2277400,d1                                   ;fmove.d
000265A2 <AmiBlitz3.ab3@9060>       BSR writelong
000265A8 <AmiBlitz3.ab3@9062>       ADDQ.l #2,stacktrack
000265AE <AmiBlitz3.ab3@9063>       MOVE.l stacktrack,d1
000265B4 <AmiBlitz3.ab3@9064>       CMP.l #180,d1
000265B8 <AmiBlitz3.ab3@9065>       BGT conmemerr                                        ;formel too complex
000265BA <AmiBlitz3.ab3@9066>       MOVE.l a0,-(a7)
000265C0 <AmiBlitz3.ab3@9067>       LEA fpustackbase,a0
000265C8 <AmiBlitz3.ab3@9068>       MOVE.w regmask,0(a0,d1)
000265CA <AmiBlitz3.ab3@9069>       MOVE.l (a7)+,a0
000265CC <AmiBlitz3.ab3@9072>       ADDQ.w #1,d0
000265D2 <AmiBlitz3.ab3@9073>       CMP.w regnumfunc,d0
000265D6 <AmiBlitz3.ab3@9074>       BLE 'skip0_loop2
000265D8 <AmiBlitz3.ab3@9077>       MOVE.l (a7)+,d0
000265DE <AmiBlitz3.ab3@9080>      MOVE.l currentfunccall,-(a7)
000265E4 <AmiBlitz3.ab3@9081>      MOVE.w parnum,-(a7)
000265EA <AmiBlitz3.ab3@9082>      TST.l rightsidetype
000265EE <AmiBlitz3.ab3@9083>      BSR.w handlep
000265F4 <AmiBlitz3.ab3@9084>      MOVE.w (a7)+,parnum
000265FA <AmiBlitz3.ab3@9086>    MOVE.l (a7)+,currentfunccall
00026600 <AmiBlitz3.ab3@9089>     TST.b typecheck                            ;typecheck for function call
00026604 <AmiBlitz3.ab3@9090>     BEQ 'notypecheck
0002660A <AmiBlitz3.ab3@9091>     TST.b notypecheck
0002660E <AmiBlitz3.ab3@9092>     BNE 'notypecheck
00026614 <AmiBlitz3.ab3@9093>     TST.b blitzparloop
00026618 <AmiBlitz3.ab3@9094>     BNE 'isblitzlibcall                                    ;no typecheck for blitzlibs currently
00026622 <AmiBlitz3.ab3@9095>     CMP.l #0,currentfunccall
00026626 <AmiBlitz3.ab3@9096>     BEQ 'isblitzlibcall
0002662A <AmiBlitz3.ab3@9097>     MOVEM.l a0/a1,-(a7)
00026630 <AmiBlitz3.ab3@9098>     MOVE.l currentfunccall,a0
00026636 <AmiBlitz3.ab3@9099>     MOVE.w parnum,d1
0002663C <AmiBlitz3.ab3@9100>     TST.b isconstantvalue
00026640 <AmiBlitz3.ab3@9101>     BEQ 'noconstant
0002664A <AmiBlitz3.ab3@9102>     CMP.l #0,lastconstantvalue
0002664E <AmiBlitz3.ab3@9103>     BEQ 'isnull
00026652 <AmiBlitz3.ab3@9106>     MOVE.l funcstruct_parametertype-4(a0,d1*4),a0
00026658 <AmiBlitz3.ab3@9107>     CMP.l #0,a0
0002665C <AmiBlitz3.ab3@9108>     BEQ 'notype
00026664 <AmiBlitz3.ab3@9109>     CMP.l #$100,4(a0)
00026668 <AmiBlitz3.ab3@9110>     BLE 'notype
0002666E <AmiBlitz3.ab3@9111>     MOVE.l lasttoken,d1
00026672 <AmiBlitz3.ab3@9112>     CMP.w #NullTokenID,d1                   ;$b581 ok, when token for null
00026676 <AmiBlitz3.ab3@9113>     BEQ 'isnull
0002667C <AmiBlitz3.ab3@9114>     TST.l typetocast
00026680 <AmiBlitz3.ab3@9115>     BEQ 'nocast
00026686 <AmiBlitz3.ab3@9116>     MOVE.l typetocast,a1
0002668A <AmiBlitz3.ab3@9117>     BRA 'typecheck
00026690 <AmiBlitz3.ab3@9120>     MOVE.l rightsidetype,a1
00026696 <AmiBlitz3.ab3@9121>     CMP.l #0,a1
0002669A <AmiBlitz3.ab3@9122>     BEQ 'notype
000266A2 <AmiBlitz3.ab3@9124>   'typecheck   CMP.l #$100,4(a1)
000266A4 <AmiBlitz3.ab3@9126>     CMP.l a0,a1
000266A8 <AmiBlitz3.ab3@9127>     BEQ 'ok
000266B0 <AmiBlitz3.ab3@9129>     CMP.l #$100,4(a1)                 ; is a type here
000266B4 <AmiBlitz3.ab3@9130>     BLE 'error
000266B8 <AmiBlitz3.ab3@9131>     MOVE.l 4(a1),a1                   ; load the address of type.
000266BC <AmiBlitz3.ab3@9132>     CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
000266C0 <AmiBlitz3.ab3@9133>     BEQ 'ok
000266C6 <AmiBlitz3.ab3@9136>    JMP error_convert_types            ; for syntax 4
000266CC <AmiBlitz3.ab3@9141>     CLR.l typetocast
000266D0 <AmiBlitz3.ab3@9142>     MOVEM.l (a7)+,a0/a1
000266D6 <AmiBlitz3.ab3@9148>    CLR.l lastfunction
000266DC <AmiBlitz3.ab3@9149>    TST.b fpu
000266E0 <AmiBlitz3.ab3@9150>    BEQ 'skip0_noprint
000266E2 <AmiBlitz3.ab3@9151>   MOVE.l (a7),a2
000266E4 <AmiBlitz3.ab3@9152>   ADDQ.l #1,a2
000266E8 <AmiBlitz3.ab3@9153>    CMP.b #5,d2
000266EC <AmiBlitz3.ab3@9154>   BNE 'skip0_noprint
000266F2 <AmiBlitz3.ab3@9155>   CMP.b #$5d,24(a2)
000266F6 <AmiBlitz3.ab3@9156>   BNE 'skip0_noprint
000266FC <AmiBlitz3.ab3@9157>   CMP.b #$81,25(a2)
00026700 <AmiBlitz3.ab3@9158>   BLT 'skip0_noprint
00026706 <AmiBlitz3.ab3@9159>   CMP.b #$86,25(a2)
0002670A <AmiBlitz3.ab3@9160>   BEQ 'skip0_ok
00026710 <AmiBlitz3.ab3@9161>   CMP.b #$87,25(a2)
00026714 <AmiBlitz3.ab3@9162>   BEQ 'skip0_ok
0002671A <AmiBlitz3.ab3@9163>   CMP.b #$88,25(a2)
0002671E <AmiBlitz3.ab3@9164>   BEQ 'skip0_ok
00026724 <AmiBlitz3.ab3@9165>   CMP.b #$83,25(a2)
00026728 <AmiBlitz3.ab3@9166>   BGT 'skip0_noprint
0002672E <AmiBlitz3.ab3@9169>   MOVE.l destpointer,a4
00026734 <AmiBlitz3.ab3@9170>   CMP.w #$2f00,-2(a4)
00026738 <AmiBlitz3.ab3@9171>   BNE 'skip0_noprint
0002673E <AmiBlitz3.ab3@9172>   SUBQ.l #2,destpointer
00026744 <AmiBlitz3.ab3@9174>   MOVE.l #$f2277400,d1
00026748 <AmiBlitz3.ab3@9175>   BSR writelong                                            ;fmove.d fp0,-(a7)
0002674E <AmiBlitz3.ab3@9176>   ADDQ #4,a2offset
00026754 <AmiBlitz3.ab3@9193>   CLR.b optistring
00026756 <AmiBlitz3.ab3@9194>   MOVEA.l (A7)+,A2
0002675A <AmiBlitz3.ab3@9195>    CMP.w #"@",d0
0002675E <AmiBlitz3.ab3@9196>   BNE 'skip0_l10
00026762 <AmiBlitz3.ab3@9197>    CMP.b #"@",(a5)
00026766 <AmiBlitz3.ab3@9198>   BNE 'skip0_l10
0002676C <AmiBlitz3.ab3@9199>   TST.w ininclude
00026770 <AmiBlitz3.ab3@9200>   BNE errorjoin
00026776 <AmiBlitz3.ab3@9201>   MOVEA.l sourceline,A5
00026778 <AmiBlitz3.ab3@9202>            MOVEA.l (A5),A5
0002677E <AmiBlitz3.ab3@9203>            MOVE.l a5,sourceline
00026784 <AmiBlitz3.ab3@9204>            ADDQ.l #1,linenumat
00026788 <AmiBlitz3.ab3@9205>            LEA $9(A5),A5
0002678A <AmiBlitz3.ab3@9206>            MOVEQ #0,d0
0002678E <AmiBlitz3.ab3@9207>            BSR get1bytemain
00026792 <AmiBlitz3.ab3@9210>    CMP.b #32,(a5)+ ;for space after a ,
00026796 <AmiBlitz3.ab3@9211>    BEQ 'skip0_l10:
00026798 <AmiBlitz3.ab3@9212>    SUBQ.l #1,a5
0002679C <AmiBlitz3.ab3@9214>    CMP.w #"@@",(a5)                                        ;if merge
000267A0 <AmiBlitz3.ab3@9215>    BNE 'skip0_l15
000267A4 <AmiBlitz3.ab3@9216>    MOVEM.l d0-d7/a0-a4/a6,-(a7)
000267AA <AmiBlitz3.ab3@9217>    JSR mergeline
000267AE <AmiBlitz3.ab3@9218>    MOVEM.l (a7)+,d0-d7/a0-a4/a6
000267B0 <AmiBlitz3.ab3@9238>       SUBQ.w #1,(A7)
000267B4 <AmiBlitz3.ab3@9239>    BEQ.w 'done
000267B8 <AmiBlitz3.ab3@9241>     CMP.w #$2C,D0
000267BC <AmiBlitz3.ab3@9243>    BNE 'overloadfunc
000267C0 <AmiBlitz3.ab3@9244>  BRA.w 'loop
000267C2 <AmiBlitz3.ab3@9247>   ADDQ.w #2,A7
000267C8 <AmiBlitz3.ab3@9248>   MOVE.w (A7)+,partostack
000267CA <AmiBlitz3.ab3@9249>   MOVE.w (A7)+,D1
000267D0 <AmiBlitz3.ab3@9250>   CLR.b isconstantvalue
000267DA <AmiBlitz3.ab3@9251>   MOVE.l currentfunccall,lastfunction
000267E0 <AmiBlitz3.ab3@9252>   CLR.b funccall
000267E6 <AmiBlitz3.ab3@9253>   CLR.l currentfunccall
000267E8 <AmiBlitz3.ab3@9254>  RTS
000267EE <AmiBlitz3.ab3@9257>   CLR.b funccall
000267F4 <AmiBlitz3.ab3@9258>   MOVE.w regnum,d1
000267FA <AmiBlitz3.ab3@9259>   MOVE.l currentfunccall,a4
000267FE <AmiBlitz3.ab3@9260>   CMP.b $20(a4),d1                                         ;increase if more pars
00026802 <AmiBlitz3.ab3@9261>   BLT notparerr
00026804 <AmiBlitz3.ab3@9264>   MOVE.b (a2)+,d2
0002680C <AmiBlitz3.ab3@9265>   ADD.w #1,parnum
00026812 <AmiBlitz3.ab3@9266>   TST.b fpu
00026816 <AmiBlitz3.ab3@9267>   BEQ 'nofpu
0002681A <AmiBlitz3.ab3@9268>   CMP.b #5,d2
0002681E <AmiBlitz3.ab3@9269>   BNE 'nofpu
00026820 <AmiBlitz3.ab3@9270>   MOVEQ #0,d1
00026826 <AmiBlitz3.ab3@9271>   MOVE.w regnum,d1
0002682E <AmiBlitz3.ab3@9272>   CMP.w #6,regnum
00026832 <AmiBlitz3.ab3@9273>   BLT 'nostack2
00026836 <AmiBlitz3.ab3@9280>   MOVE.w #$2c3c,d1
0002683A <AmiBlitz3.ab3@9281>   BSR writeword
00026840 <AmiBlitz3.ab3@9282>   MOVE.l #$bf800000,d1
00026844 <AmiBlitz3.ab3@9283>   BSR writelong
00026848 <AmiBlitz3.ab3@9284>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0002684E <AmiBlitz3.ab3@9285>   ADD.w parnum,d1
00026854 <AmiBlitz3.ab3@9286>   JSR Atokejsr
0002685A <AmiBlitz3.ab3@9287>   TST.w dontwrite_nomemleft
0002685E <AmiBlitz3.ab3@9288>   BNE 'l1
00026864 <AmiBlitz3.ab3@9289>   MOVE.l data1start,d1
0002686A <AmiBlitz3.ab3@9290>   MOVE.l destpointer,a4
0002686E <AmiBlitz3.ab3@9291>   ADD.l d1,-4(a4)
00026874 <AmiBlitz3.ab3@9292>   MOVE.l destpointer,d1
00026876 <AmiBlitz3.ab3@9293>   SUBQ.l #4,d1
0002687C <AmiBlitz3.ab3@9294>   SUB.l destbufferstart,d1
0002687E <AmiBlitz3.ab3@9295>   MOVE.l d2,-(a7)
00026880 <AmiBlitz3.ab3@9296>   MOVE.l d1,d2
00026886 <AmiBlitz3.ab3@9297>   JSR addhunkoffset
00026888 <AmiBlitz3.ab3@9298>   MOVE.l (a7)+,d2
0002688C <AmiBlitz3.ab3@9299>  BRA 'l1
0002688E <AmiBlitz3.ab3@9302>   ASL.l #7,d1
00026894 <AmiBlitz3.ab3@9303>   OR.l #$F23C5000,d1                                       ;fmove.w #-1,fpx
00026898 <AmiBlitz3.ab3@9304>   BSR writelong
0002689A <AmiBlitz3.ab3@9305>   MOVEQ #-1,d1                                             ;-1
0002689E <AmiBlitz3.ab3@9306>   BSR writeword
000268A2 <AmiBlitz3.ab3@9307>  BRA 'l1
000268A8 <AmiBlitz3.ab3@9310>   MOVE.w regnum,d1
000268B0 <AmiBlitz3.ab3@9311>   CMP.w #6,regnum
000268B4 <AmiBlitz3.ab3@9312>   BLT 'nostack
000268B8 <AmiBlitz3.ab3@9317>   CMP.b #2,d2
000268BC <AmiBlitz3.ab3@9318>   BGT 'nw
000268C0 <AmiBlitz3.ab3@9319>  BRA 'nos
000268C4 <AmiBlitz3.ab3@9328>   CMP.w #7,d2
000268C8 <AmiBlitz3.ab3@9329>   BNE 'nos
000268CE <AmiBlitz3.ab3@9330>   ADDQ #4,a2offset
000268D4 <AmiBlitz3.ab3@9333>     MOVE.l #$48780000,d1
000268D8 <AmiBlitz3.ab3@9334>     BSR writelong
000268DE <AmiBlitz3.ab3@9335>     ADDQ.w #4,a2offset
000268E2 <AmiBlitz3.ab3@9336>     MOVE.w #$2f3c,d1
000268E6 <AmiBlitz3.ab3@9337>     BSR writeword
000268EC <AmiBlitz3.ab3@9338>     MOVE.l #-1,d1
000268F0 <AmiBlitz3.ab3@9339>     BSR writelong
000268F4 <AmiBlitz3.ab3@9340>    BRA 'l1
000268F8 <AmiBlitz3.ab3@9344>   CMP.b #4,d2
000268FC <AmiBlitz3.ab3@9345>       BNE 'noq
00026900 <AmiBlitz3.ab3@9346>       MOVE.w #$2c3c,d1
00026904 <AmiBlitz3.ab3@9347>       BSR writeword
0002690A <AmiBlitz3.ab3@9348>       MOVE.l #$ffff0000,d1
0002690E <AmiBlitz3.ab3@9349>       BSR writelong
00026912 <AmiBlitz3.ab3@9350>  BRA 'noq2
00026916 <AmiBlitz3.ab3@9353>      CMP.b #5,d2
0002691A <AmiBlitz3.ab3@9354>      BNE 'nof
0002691E <AmiBlitz3.ab3@9355>       MOVE.w #$2c3c,d1
00026922 <AmiBlitz3.ab3@9356>       BSR writeword
00026928 <AmiBlitz3.ab3@9357>       MOVE.l #$800000c1,d1
0002692C <AmiBlitz3.ab3@9358>       BSR writelong
00026930 <AmiBlitz3.ab3@9359>  BRA 'noq2
00026934 <AmiBlitz3.ab3@9362>   MOVE.w #$7cff,d1
00026938 <AmiBlitz3.ab3@9363>   BSR writeword
0002693C <AmiBlitz3.ab3@9366>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
00026942 <AmiBlitz3.ab3@9367>   ADD.w parnum,d1
00026948 <AmiBlitz3.ab3@9368>   JSR Atokejsr
0002694E <AmiBlitz3.ab3@9369>    TST.w dontwrite_nomemleft
00026952 <AmiBlitz3.ab3@9370>    BNE 'l1
00026958 <AmiBlitz3.ab3@9371>    MOVE.l data1start,d1
0002695E <AmiBlitz3.ab3@9372>    MOVE.l destpointer,a4
00026962 <AmiBlitz3.ab3@9373>    ADD.l d1,-4(a4)
00026968 <AmiBlitz3.ab3@9374>    MOVE.l destpointer,d1
0002696A <AmiBlitz3.ab3@9375>    SUBQ.l #4,d1
00026970 <AmiBlitz3.ab3@9376>    SUB.l destbufferstart,d1
00026972 <AmiBlitz3.ab3@9377>    MOVE.l d2,-(a7)
00026974 <AmiBlitz3.ab3@9378>    MOVE.l d1,d2
0002697A <AmiBlitz3.ab3@9379>    JSR addhunkoffset
0002697C <AmiBlitz3.ab3@9380>    MOVE.l (a7)+,d2
00026980 <AmiBlitz3.ab3@9381>  BRA 'l1
00026982 <AmiBlitz3.ab3@9384>   ASL.l #8,d1
00026984 <AmiBlitz3.ab3@9385>   ASL.l #1,d1
0002698A <AmiBlitz3.ab3@9386>   OR.l #$203c,d1                                           ;-1
0002698E <AmiBlitz3.ab3@9387>   BSR writeword
00026994 <AmiBlitz3.ab3@9388>   MOVE.l #-1,d1
00026998 <AmiBlitz3.ab3@9389>   CMP.b #4,d2
0002699C <AmiBlitz3.ab3@9390>   BNE 'nq1
000269A2 <AmiBlitz3.ab3@9391>   MOVE.l #$ffff0000,d1
000269A6 <AmiBlitz3.ab3@9394>   CMP.b #5,d2
000269AA <AmiBlitz3.ab3@9395>   BNE 'nof2
000269B0 <AmiBlitz3.ab3@9396>   TST.b fpu
000269B4 <AmiBlitz3.ab3@9397>   BNE 'nof2
000269BA <AmiBlitz3.ab3@9398>   MOVE.l #$800000c1,d1
000269BE <AmiBlitz3.ab3@9401>    BSR writelong
000269C2 <AmiBlitz3.ab3@9402>    CMP.b #7,d2
000269C6 <AmiBlitz3.ab3@9403>    BNE 'l1
000269CC <AmiBlitz3.ab3@9405>      MOVE.l #$48780000,d1
000269D0 <AmiBlitz3.ab3@9406>      BSR writelong
000269D6 <AmiBlitz3.ab3@9408>    ADDQ.w #4,a2offset                                      ; bug fix for string parameters
000269DC <AmiBlitz3.ab3@9409>    MOVE.l #$594f,d1                                        ; subq #4,a7
000269E0 <AmiBlitz3.ab3@9410>    BSR writeword
000269E2 <AmiBlitz3.ab3@9413>    SUBQ.w #1,(A7)
000269E6 <AmiBlitz3.ab3@9414>    BEQ.w 'done
000269EC <AmiBlitz3.ab3@9415>    ADDQ.w #1,regnum
000269F0 <AmiBlitz3.ab3@9416>  BRA 'ol2
000269F2 <AmiBlitz3.ab3@9429>    MOVE.w D2,D1
000269F6 <AmiBlitz3.ab3@9430>    ANDI.w #$40,D1          ;push bit
000269FC <AmiBlitz3.ab3@9431>    MOVE.b D1,partostack
000269FE <AmiBlitz3.ab3@9432>    TST.b D2
00026A02 <AmiBlitz3.ab3@9433>     BMI.w handlevara
00026A06 <AmiBlitz3.ab3@9434>    BTST #$5,D2
00026A0A <AmiBlitz3.ab3@9435>     BNE.w handlearr
00026A10 <AmiBlitz3.ab3@9440>     MOVE.w regnumstore,-(a7)
00026A16 <AmiBlitz3.ab3@9441>     MOVE.w tempregnum,-(a7)
00026A1C <AmiBlitz3.ab3@9442>     MOVE.w parnum,-(a7)
00026A20 <AmiBlitz3.ab3@9444>     BSR.w getap                                        ;recursive entry
00026A26 <AmiBlitz3.ab3@9446>     MOVE.w (a7)+,parnum
00026A2C <AmiBlitz3.ab3@9447>     MOVE.w (a7)+,tempregnum
00026A32 <AmiBlitz3.ab3@9448>     MOVE.w (a7)+,regnumstore
00026A36 <AmiBlitz3.ab3@9454>     MOVE.w partostack(PC),D1
00026A3A <AmiBlitz3.ab3@9455>     BEQ.w putapincreg
00026A40 <AmiBlitz3.ab3@9459>    ADDQ.w #4,a2offset
00026A46 <AmiBlitz3.ab3@9461>    MOVE.w pushdn,D1
00026A4C <AmiBlitz3.ab3@9462>    OR.w regnum,D1      ;push long
00026A50 <AmiBlitz3.ab3@9463>    CMP.w #$3,D2
00026A54 <AmiBlitz3.ab3@9464>     BCC.w 'skip
00026A5A <AmiBlitz3.ab3@9465>    SUBQ.w #2,a2offset
00026A5E <AmiBlitz3.ab3@9466>    ORI.w #$1000,D1    ;push word only
00026A62 <AmiBlitz3.ab3@9467>    BSR.w writeword
00026A64 <AmiBlitz3.ab3@9468>  RTS
00026A68 <AmiBlitz3.ab3@9472>   CMP.b #7,d2
00026A6C <AmiBlitz3.ab3@9473>    BNE 'l10a
00026A74 <AmiBlitz3.ab3@9474>    CMP.b #2,optistring
00026A7A <AmiBlitz3.ab3@9478>   TST.b iee
00026A7E <AmiBlitz3.ab3@9479>   BEQ 'olda
00026A82 <AmiBlitz3.ab3@9480>   CMP.b #5,d2
00026A86 <AmiBlitz3.ab3@9481>   BNE 'olda
00026A8A <AmiBlitz3.ab3@9485>   BSR.w writeword                                          ;write val to stack
00026A8C <AmiBlitz3.ab3@9486>  RTS
00026A92 <AmiBlitz3.ab3@9490>   SUBQ.w #4,a2offset
00026A94 <AmiBlitz3.ab3@9491> RTS
00026A9A <AmiBlitz3.ab3@9496>   ADDQ.w #1,regnum
00026A9C <AmiBlitz3.ab3@9497> RTS
00026A9E <AmiBlitz3.ab3@9501>   MOVEQ.l #$03,D2
00026AA2 <AmiBlitz3.ab3@9502> BRA.w putap
00026AA6 <AmiBlitz3.ab3@9508>   ANDI.w #$7,D2
00026AA8 <AmiBlitz3.ab3@9509>   MOVE.w D2,-(A7)
00026AAC <AmiBlitz3.ab3@9511>    BSR.w ampersand2  ;ignore pnt to $
00026AB0 <AmiBlitz3.ab3@9513>   CMP.b #$7,D2                                             ;ignore pnt to $
00026AB4 <AmiBlitz3.ab3@9514>    BEQ.w 'nop2
00026AB8 <AmiBlitz3.ab3@9516>   BTST #$E,D2
00026ABC <AmiBlitz3.ab3@9517>    BEQ.w 'nop
00026AC0 <AmiBlitz3.ab3@9518>   MOVE.b #$3,D2      ;pointer to long                                      ;pointer to long
00026AC4 <AmiBlitz3.ab3@9519>  BRA.w 'nop2
00026AC6 <AmiBlitz3.ab3@9522>    TST.b D2
00026ACA <AmiBlitz3.ab3@9523>    BNE.w 'nop2
00026ACE <AmiBlitz3.ab3@9524>   MOVE.b #$3,D2
00026AD0 <AmiBlitz3.ab3@9527>   MOVE.w (A7)+,D3
00026AD2 <AmiBlitz3.ab3@9528>   TST.b D3
00026AD6 <AmiBlitz3.ab3@9529>    BEQ.w 'unp
00026AD8 <AmiBlitz3.ab3@9530>   CMP.b D2,D3
00026ADC <AmiBlitz3.ab3@9531>    BEQ.w putalp
00026AE0 <AmiBlitz3.ab3@9532>  BRA.w mismatcherr
00026AE6 <AmiBlitz3.ab3@9535>   ADDQ.w #2,a2offset
00026AEA <AmiBlitz3.ab3@9536>   MOVE.w ptype(PC),D1
00026AEE <AmiBlitz3.ab3@9537>    BSR.w writeword
00026AF0 <AmiBlitz3.ab3@9538>   MOVEQ.l #$00,D1
00026AF2 <AmiBlitz3.ab3@9539>   MOVE.b D2,D1
00026AF6 <AmiBlitz3.ab3@9540>    BSR.w writeword
00026AFA <AmiBlitz3.ab3@9541> BRA.w putalp
00026AFC <AmiBlitz3.ab3@9545>    MOVE.w D2,-(A7)
00026B00 <AmiBlitz3.ab3@9546>    BSR.w baseadd
00026B06 <AmiBlitz3.ab3@9547>   BTST #$4,$1(A7)
00026B0A <AmiBlitz3.ab3@9548>    BEQ.w 'nohigh
00026B0E <AmiBlitz3.ab3@9549>    BSR.w highadd
00026B14 <AmiBlitz3.ab3@9552>    BTST #$3,$1(A7)
00026B18 <AmiBlitz3.ab3@9553>    BEQ.w 'notype
00026B1C <AmiBlitz3.ab3@9554>    BSR.w sendtype
00026B1E <AmiBlitz3.ab3@9557>    MOVE.w (A7)+,D2
00026B22 <AmiBlitz3.ab3@9558> BRA.w get1bytemain
00026B28 <AmiBlitz3.ab3@9564>   MOVE.w regnum,D1
00026B2A <AmiBlitz3.ab3@9565>   LSL.w #8,D1
00026B2C <AmiBlitz3.ab3@9566>   LSL.w #1,D1
00026B30 <AmiBlitz3.ab3@9567>   ORI.w #$7000,D1
00026B36 <AmiBlitz3.ab3@9568>   BTST #$0,$7(A3)
00026B3A <AmiBlitz3.ab3@9569>    BNE.w 'isap         ;A Pointer
00026B42 <AmiBlitz3.ab3@9570>   CMPI.l #$100,$4(A2)
00026B46 <AmiBlitz3.ab3@9571>    BCC.w arrerr1       ;illegal type to send
00026B4A <AmiBlitz3.ab3@9572>   MOVE.b $7(A2),D1
00026B4E <AmiBlitz3.ab3@9575>   BSR.w writeword      ;moveq #type,d regat
00026B50 <AmiBlitz3.ab3@9576>   MOVEQ.l #$02,D2      ;just a word.
00026B54 <AmiBlitz3.ab3@9577> BRA.w pushap
00026B58 <AmiBlitz3.ab3@9580>   MOVE.b #$3,D1
00026B5C <AmiBlitz3.ab3@9581> BRA.w 'putit
00026B60 <AmiBlitz3.ab3@9587>    BSR.w get1bytemain                                      ;write array paramter code
00026B64 <AmiBlitz3.ab3@9588>    BSR.w getparameter
00026B6C <AmiBlitz3.ab3@9589>   BTST #$1,flagmask+1
00026B70 <AmiBlitz3.ab3@9590>    BEQ.w syntaxerr
00026B74 <AmiBlitz3.ab3@9591>    BSR.w fetchvars
00026B78 <AmiBlitz3.ab3@9593>    BSR.w get1bytemain
00026B7C <AmiBlitz3.ab3@9594>   CMP.w #$29,D0          ;')'  ;we just want a() or whatever                                 ;we just want a() or whatever
00026B80 <AmiBlitz3.ab3@9595>    BNE.w syntaxerr
00026B86 <AmiBlitz3.ab3@9596>   MOVE.w notshared,D1
00026B8A <AmiBlitz3.ab3@9597>    BNE.w noarrayerr
00026B90 <AmiBlitz3.ab3@9598>   MOVE.w regnum,D1
00026B92 <AmiBlitz3.ab3@9599>   LSL.w #8,D1
00026B94 <AmiBlitz3.ab3@9600>   LSL.w #1,D1
00026B98 <AmiBlitz3.ab3@9601>   OR.w fbase(PC),D1
00026B9E <AmiBlitz3.ab3@9603>    TST.b varmode
00026BA2 <AmiBlitz3.ab3@9604>    BEQ 'l1
00026BA6 <AmiBlitz3.ab3@9605>    BCLR #0,d1
00026BAA <AmiBlitz3.ab3@9609>    BSR.w writeword
00026BAE <AmiBlitz3.ab3@9610>   MOVE.w $4(A3),D1
00026BB2 <AmiBlitz3.ab3@9611>    BSR.w writeword
00026BB6 <AmiBlitz3.ab3@9612> BRA.w putalp      ;OK, we've got da base reg.
00026BBC <AmiBlitz3.ab3@9618>   MOVE.w regnum,D1
00026BBE <AmiBlitz3.ab3@9619>   LSL.w #8,D1
00026BC0 <AmiBlitz3.ab3@9620>   LSL.w #1,D1
00026BC4 <AmiBlitz3.ab3@9621>   OR.w fbase(PC),D1
00026BCA <AmiBlitz3.ab3@9623>    TST.b varmode
00026BCE <AmiBlitz3.ab3@9624>    BEQ 'l1
00026BD2 <AmiBlitz3.ab3@9625>    BCLR #0,d1
00026BD6 <AmiBlitz3.ab3@9629>    BSR.w writeword
00026BDA <AmiBlitz3.ab3@9631>   MOVE.w $8(A3),D1
00026BDC <AmiBlitz3.ab3@9632>   LSL.w #2,D1
00026BE2 <AmiBlitz3.ab3@9633>   MOVE.w varmode,D2
00026BE6 <AmiBlitz3.ab3@9634>    BEQ.w 'isglob
00026BE8 <AmiBlitz3.ab3@9635>   NEG.w D1
00026BEC <AmiBlitz3.ab3@9638>    ADD.w $4(A3),D1
00026BF0 <AmiBlitz3.ab3@9639>    BSR.w writeword
00026BF6 <AmiBlitz3.ab3@9640>   MOVE.w regnum,D1
00026BF8 <AmiBlitz3.ab3@9641>   LSL.w #8,D1
00026BFA <AmiBlitz3.ab3@9642>   LSL.w #1,D1
00026BFE <AmiBlitz3.ab3@9644>   MOVE.w partostack(PC),D2
00026C02 <AmiBlitz3.ab3@9645>    BNE.w 'dopadd           ;we just pushed last parameter!
00026C0A <AmiBlitz3.ab3@9646>   CMPI.w #$7,regnum
00026C0E <AmiBlitz3.ab3@9647>    BCC.w 'dopadd           ;last was d6, it must have been
00026C12 <AmiBlitz3.ab3@9649>   OR.w pushlast(PC),D1
00026C18 <AmiBlitz3.ab3@9650>   MOVE.w regnum,D2
00026C1A <AmiBlitz3.ab3@9651>   SUBQ.w #1,D2
00026C1C <AmiBlitz3.ab3@9652>   OR.w D2,D1
00026C20 <AmiBlitz3.ab3@9653>  BRA.w 'pp
00026C24 <AmiBlitz3.ab3@9658>   OR.w pushadd(PC),D1
00026C28 <AmiBlitz3.ab3@9661>   BSR.w writeword
00026C30 <AmiBlitz3.ab3@9662>   MOVE.b #$1,partostack
00026C34 <AmiBlitz3.ab3@9663> BRA.w putalp
00026C38 <AmiBlitz3.ab3@9667> fbase:       Dc.b $20,$2D,$00,$00                           ;MOVE.L  $0000(A5),D0
00026C3A <AmiBlitz3.ab3@9668> pushadd:     Dc.b $D0,$97                                   ;ADD.L (A7),D0
00026C3C <AmiBlitz3.ab3@9669> pushlast:    Dc.b $D0,$80                                   ;ADD.L D0,D0
00026C40 <AmiBlitz3.ab3@9674>   ANDI.w #$7,D2                                            ;0-7 (unknown to string)
00026C44 <AmiBlitz3.ab3@9675>    BEQ.w evalu2
00026C48 <AmiBlitz3.ab3@9676> BRA.w eval
00026C4E <AmiBlitz3.ab3@9680>   MOVEA.l libpointer,A1
00026C52 <AmiBlitz3.ab3@9683>    CMPA.w #$0,A1
00026C56 <AmiBlitz3.ab3@9684>    BEQ.w 'done
00026C5C <AmiBlitz3.ab3@9685>   MOVE.w #-1,$A(A1)
00026C62 <AmiBlitz3.ab3@9686>   BCLR #$7,$C(A1)
00026C64 <AmiBlitz3.ab3@9687>   MOVEA.l (A1),A1
00026C68 <AmiBlitz3.ab3@9688>  BRA.w 'loop
00026C6A <AmiBlitz3.ab3@9691> RTS
00026C6E <AmiBlitz3.ab3@9695>   MOVE.w #$FFFE,D1       ;#allocvars
00026C72 <AmiBlitz3.ab3@9699>    BSR.w findlib
00026C78 <AmiBlitz3.ab3@9702>   TST.w cfetchmode
00026C7C <AmiBlitz3.ab3@9703>    BEQ.w 'noconst
00026C82 <AmiBlitz3.ab3@9704>   BTST #$6,$C(A1)
00026C86 <AmiBlitz3.ab3@9705>    BNE.w 'constok
00026C8A <AmiBlitz3.ab3@9707>  BRA.w badconerr                                            ;Can't use this Library!
00026C8C <AmiBlitz3.ab3@9710>  RTS
00026C92 <AmiBlitz3.ab3@9713>    BSET #$7,$C(A1)
00026C96 <AmiBlitz3.ab3@9714>    BNE.w 'skip                                         ;already done....
00026C9C <AmiBlitz3.ab3@9715>    CMPI.w #-1,$A(A1)
00026CA0 <AmiBlitz3.ab3@9716>    BNE.w 'skip                                         ;something already here
00026CA6 <AmiBlitz3.ab3@9720>    TST.w dirmode
00026CAA <AmiBlitz3.ab3@9721>    BEQ.b 'oktouse
00026CB0 <AmiBlitz3.ab3@9724>    TST.b exdebug
00026CB4 <AmiBlitz3.ab3@9725>    BEQ 'l1
00026CB8 <AmiBlitz3.ab3@9726>  BRA.b 'oktouse
00026CBE <AmiBlitz3.ab3@9730>   BCLR #$7,$C(A1)
00026CC2 <AmiBlitz3.ab3@9731>  BRA.w dirliberr
00026CC8 <AmiBlitz3.ab3@9735>   MOVE.b debugmode,-(a7)
00026CCC <AmiBlitz3.ab3@9737>   MOVEM.l D1/A0/A2,-(A7)
00026CD4 <AmiBlitz3.ab3@9747>   BTST #$7,use_debugger
00026CD8 <AmiBlitz3.ab3@9748>   BNE 'debugon
00026CDA <AmiBlitz3.ab3@9749>   CLR.w D1
00026CDE <AmiBlitz3.ab3@9750>  BRA.b 'debugoff
00026CE0 <AmiBlitz3.ab3@9753>   SNE D1
00026CE6 <AmiBlitz3.ab3@9756>   MOVE.b d1,debugmode
00026CE8 <AmiBlitz3.ab3@9761>   MOVEA.l A1,A0
00026CEC <AmiBlitz3.ab3@9762>   ADDA.l $12(A1),A0
00026CF0 <AmiBlitz3.ab3@9763>   TST.w -$2(A0)
00026CF4 <AmiBlitz3.ab3@9764>    BEQ.w 'notmax
00026CF8 <AmiBlitz3.ab3@9765>   MOVEM.l A0-A1,-(A7)
00026CFC <AmiBlitz3.ab3@9766>   MOVE.w #$FB4F,D1            ; #64335,
00026D00 <AmiBlitz3.ab3@9767>    BSR.w uselib
00026D04 <AmiBlitz3.ab3@9768>   MOVEM.l (A7)+,A0-A1
00026D0A <AmiBlitz3.ab3@9769>   ADDQ.w #1,globalvarpointer
00026D12 <AmiBlitz3.ab3@9770>   BCLR #$0,globalvarpointer+1
00026D1A <AmiBlitz3.ab3@9771>   MOVE.w globalvarpointer,-$6(A0)
00026D20 <AmiBlitz3.ab3@9772>   ADDQ.w #4,globalvarpointer
00026D24 <AmiBlitz3.ab3@9773>   TST.l -$E(A0)
00026D28 <AmiBlitz3.ab3@9774>    BEQ.w 'notmax
00026D2E <AmiBlitz3.ab3@9775>   ADDQ.w #4,globalvarpointer
00026D36 <AmiBlitz3.ab3@9778>   MOVE.l libend,$28(A1)      ;pc of lib
00026D38 <AmiBlitz3.ab3@9779>   MOVEA.l A1,A0
00026D3C <AmiBlitz3.ab3@9780>   ADDA.l $12(A1),A0          ;start of lib
00026D3E <AmiBlitz3.ab3@9782>   MOVE.l A1,D1
00026D42 <AmiBlitz3.ab3@9783>   ADD.l $6(A1),D1            ;end of lib
00026D46 <AmiBlitz3.ab3@9784>   TST.l $2C(A1)
00026D4A <AmiBlitz3.ab3@9785>    BEQ.w 'nor
00026D50 <AmiBlitz3.ab3@9786>   TST.b debugmode
00026D54 <AmiBlitz3.ab3@9787>    BNE.w 'nor                ;errs turned on
00026D56 <AmiBlitz3.ab3@9788>   MOVE.l A1,D1
00026D5A <AmiBlitz3.ab3@9789>   ADD.l $2C(A1),D1           ;copy only non-errchks
00026D60 <AmiBlitz3.ab3@9792>   MOVEA.l libend,A2
00026D66 <AmiBlitz3.ab3@9795>   CMPA.l data1start,A2
00026D6A <AmiBlitz3.ab3@9796>    BCS.w 'okp
00026D72 <AmiBlitz3.ab3@9797>   MOVE.w #$FFFF,dontwrite_nomemleft     ; -1
00026D74 <AmiBlitz3.ab3@9800>   ADDQ.w #2,A0
00026D76 <AmiBlitz3.ab3@9801>   ADDQ.w #2,A2
00026D78 <AmiBlitz3.ab3@9802>   CMPA.l D1,A0
00026D7C <AmiBlitz3.ab3@9803>    BCS.w 'bad
00026D80 <AmiBlitz3.ab3@9804>  BRA.w 'toreloc
00026D82 <AmiBlitz3.ab3@9807>   MOVE.w (A0)+,(A2)+                                       ;copylibcode
00026D84 <AmiBlitz3.ab3@9808>   CMPA.l D1,A0
00026D88 <AmiBlitz3.ab3@9809>    BCS.w 'loop
00026D8E <AmiBlitz3.ab3@9812>   MOVE.l A2,libend
00026D92 <AmiBlitz3.ab3@9813>   MOVE.l $20(A1),D1
00026D96 <AmiBlitz3.ab3@9814>    BEQ.w 'noreloc
00026D9A <AmiBlitz3.ab3@9816>   MOVEM.l D0/D2-D3,-(A7)
00026D9E <AmiBlitz3.ab3@9817>   MOVEA.l $24(A1),A0         ;start of reloc table
00026DA0 <AmiBlitz3.ab3@9818>   MOVEQ.l #$00,D3            ;no tokejsrs (yet!)
00026DA2 <AmiBlitz3.ab3@9824>   MOVE.l (A0)+,D2
00026DA6 <AmiBlitz3.ab3@9825>   TST.l $2C(A1)
00026DAA <AmiBlitz3.ab3@9826>    BEQ.w 'skipr
00026DB0 <AmiBlitz3.ab3@9827>   TST.b debugmode
00026DB4 <AmiBlitz3.ab3@9828>    BNE.w 'skipr
00026DB8 <AmiBlitz3.ab3@9829>   CMP.l $2C(A1),D2
00026DBC <AmiBlitz3.ab3@9830>    BCC.w 'next
00026DC0 <AmiBlitz3.ab3@9833>   TST.w $0(A1,D2.L)
00026DC4 <AmiBlitz3.ab3@9834>    BPL.w 'notajsr
00026DC6 <AmiBlitz3.ab3@9835>   TST.l D3
00026DCA <AmiBlitz3.ab3@9836>    BNE.w 'notajsr      ;already done...
00026DCC <AmiBlitz3.ab3@9837>   MOVE.l A0,D0
00026DCE <AmiBlitz3.ab3@9838>   MOVE.l D1,D3         ;number left to do!
00026DD2 <AmiBlitz3.ab3@9841>   SUB.l $12(A1),D2
00026DD6 <AmiBlitz3.ab3@9842>    BMI.w 'next
00026DDA <AmiBlitz3.ab3@9843>   ADD.l $28(A1),D2
00026DDC <AmiBlitz3.ab3@9844>   MOVE.l D2,-(A7)
00026DE2 <AmiBlitz3.ab3@9845>   SUB.l destbufferstart,D2
00026DE6 <AmiBlitz3.ab3@9846>    BSR.w addhunkoffset
00026DE8 <AmiBlitz3.ab3@9847>   MOVEA.l (A7)+,A2
00026DEE <AmiBlitz3.ab3@9848>   TST.w dontwrite_nomemleft
00026DF2 <AmiBlitz3.ab3@9849>    BNE.w 'next
00026DF6 <AmiBlitz3.ab3@9850>   MOVE.l $28(A1),D2
00026DFA <AmiBlitz3.ab3@9851>   SUB.l $12(A1),D2
00026DFC <AmiBlitz3.ab3@9852>   ADD.l D2,(A2)
00026DFE <AmiBlitz3.ab3@9855>    SUBQ.l #1,D1
00026E02 <AmiBlitz3.ab3@9856>    BNE.w 'reloop
00026E04 <AmiBlitz3.ab3@9857>   MOVE.l D3,D2
00026E08 <AmiBlitz3.ab3@9858>    BEQ.w 'nohand
00026E0A <AmiBlitz3.ab3@9859>   MOVEA.l D0,A2
00026E0C <AmiBlitz3.ab3@9860>   SUBQ.w #4,A2
00026E10 <AmiBlitz3.ab3@9862>    BSR.w handlejsrs
00026E14 <AmiBlitz3.ab3@9865>    MOVEM.l (A7)+,D0/D2-D3
00026E18 <AmiBlitz3.ab3@9868>    MOVEM.l (A7)+,D1/A0/A2
00026E1C <AmiBlitz3.ab3@9870>   MOVEM.l D1-D2,-(A7)
00026E20 <AmiBlitz3.ab3@9871>   TST.w $1A(A1)
00026E24 <AmiBlitz3.ab3@9872>    BNE.w 'skip2a
00026E28 <AmiBlitz3.ab3@9873>   CLR.w $A(A1)
00026E2C <AmiBlitz3.ab3@9874>  BRA.w 'skip2
00026E32 <AmiBlitz3.ab3@9877>   ADDQ.w #1,globalvarpointer
00026E3A <AmiBlitz3.ab3@9878>   BCLR #$0,globalvarpointer+1
00026E42 <AmiBlitz3.ab3@9879>   MOVE.w globalvarpointer,$A(A1)
00026E46 <AmiBlitz3.ab3@9881>   CMP.w #-$12D,D1            ; was  #65235,
00026E4A <AmiBlitz3.ab3@9882>    BNE.w 'nots1
00026E52 <AmiBlitz3.ab3@9884>   MOVE.w $A(A1),movestdn+2
00026E5A <AmiBlitz3.ab3@9885>   MOVE.w $A(A1),pusha3+2
00026E62 <AmiBlitz3.ab3@9886>   MOVE.w $A(A1),pusha32+2
00026E6A <AmiBlitz3.ab3@9887>   MOVE.w $A(A1),pulla3+2
00026E72 <AmiBlitz3.ab3@9888>   MOVE.w $A(A1),geta3+2
00026E76 <AmiBlitz3.ab3@9891>    CMP.w #-$3E9,D1           ; was #64535,
00026E7A <AmiBlitz3.ab3@9892>    BNE.w 'notd
00026E82 <AmiBlitz3.ab3@9894>   MOVE.w $A(A1),dataget+2
00026E8A <AmiBlitz3.ab3@9895>   MOVE.w $A(A1),dataput+2
00026E92 <AmiBlitz3.ab3@9896>   MOVE.w $A(A1),rescode+6
00026E9A <AmiBlitz3.ab3@9897>   MOVE.w $A(A1),rescode2+2
00026EA0 <AmiBlitz3.ab3@9900>   ADDQ.w #2,globalvarpointer
00026EA4 <AmiBlitz3.ab3@9901>   TST.w $1A(A1)
00026EA8 <AmiBlitz3.ab3@9902>    BMI.w 'jword
00026EAE <AmiBlitz3.ab3@9903>   ADDQ.w #2,globalvarpointer
00026EB2 <AmiBlitz3.ab3@9906>   MOVEM.l D1/A1,-(A7)
00026EB6 <AmiBlitz3.ab3@9907>   BSR.w usevars
00026EBA <AmiBlitz3.ab3@9908>   MOVEM.l (A7)+,D1/A1
00026EBC <AmiBlitz3.ab3@9911>   MOVE.w D1,D2
00026EC0 <AmiBlitz3.ab3@9912>   MOVE.l $16(A1),D1
00026EC4 <AmiBlitz3.ab3@9913>    BSR.w uselib2
00026EC8 <AmiBlitz3.ab3@9914>   MOVE.l $1C(A1),D1
00026ECC <AmiBlitz3.ab3@9915>    BSR.w uselib2
00026ED0 <AmiBlitz3.ab3@9916>   MOVEM.l (A7)+,D1-D2
00026ED6 <AmiBlitz3.ab3@9918>   MOVE.b (a7)+,debugmode
00026ED8 <AmiBlitz3.ab3@9921> RTS
00026EDA <AmiBlitz3.ab3@9928>   MOVEQ.l #$00,D2       ;do list till this...
00026EE0 <AmiBlitz3.ab3@9931>   MOVEA.l tokeslist,A2
00026EE2 <AmiBlitz3.ab3@9932>   CMPA.l D2,A2
00026EE6 <AmiBlitz3.ab3@9933>    BEQ.w 'done
00026EE8 <AmiBlitz3.ab3@9934>   MOVE.l A2,-(A7)       ;next till...
00026EEA <AmiBlitz3.ab3@9937>   MOVEQ.l #$00,D3
00026EEE <AmiBlitz3.ab3@9940>   MOVEA.l $8(A2),A3
00026EF0 <AmiBlitz3.ab3@9941>   CMPA.l D3,A3
00026EF4 <AmiBlitz3.ab3@9942>    BEQ.w 'done4
00026EF6 <AmiBlitz3.ab3@9944>   MOVE.l A3,-(A7)
00026EFA <AmiBlitz3.ab3@9945>   MOVEM.l D2-D3/A2-A3,-(A7)
00026EFE <AmiBlitz3.ab3@9946>   MOVE.w $4(A2),D1
00026F02 <AmiBlitz3.ab3@9947>   MOVE.w $6(A2),D2
00026F06 <AmiBlitz3.ab3@9949>    BSR.w tokecode
00026F0A <AmiBlitz3.ab3@9951>   MOVEM.l (A7)+,D2-D3/A2-A3
00026F10 <AmiBlitz3.ab3@9953>   MOVE.w dontwrite_nomemleft,D0
00026F14 <AmiBlitz3.ab3@9954>    BEQ.w 'ok
00026F16 <AmiBlitz3.ab3@9957>   MOVEA.l (A3),A3
00026F18 <AmiBlitz3.ab3@9958>   CMPA.l D3,A3
00026F1C <AmiBlitz3.ab3@9959>    BNE.w 'loop5
00026F20 <AmiBlitz3.ab3@9960>  BRA.w 'skipz
00026F24 <AmiBlitz3.ab3@9963>   MOVEA.l $4(A3),A0
00026F26 <AmiBlitz3.ab3@9964>   MOVE.l D7,(A0)
00026F28 <AmiBlitz3.ab3@9965>   MOVEA.l (A3),A3
00026F2A <AmiBlitz3.ab3@9966>   CMPA.l D3,A3
00026F2E <AmiBlitz3.ab3@9967>    BNE.w 'ok
00026F30 <AmiBlitz3.ab3@9970>   MOVE.l (A7)+,D3
00026F34 <AmiBlitz3.ab3@9971>  BRA.w 'loop3
00026F36 <AmiBlitz3.ab3@9974>    MOVEA.l (A2),A2
00026F38 <AmiBlitz3.ab3@9975>   CMPA.l D2,A2
00026F3C <AmiBlitz3.ab3@9976>    BNE.w 'loop2
00026F3E <AmiBlitz3.ab3@9977>   MOVE.l (A7)+,D2
00026F42 <AmiBlitz3.ab3@9978>  BRA.w 'loop
00026F44 <AmiBlitz3.ab3@9981> RTS
00026F46 <AmiBlitz3.ab3@9989>   MOVE.w D2,-(A7)
00026F4A <AmiBlitz3.ab3@9990>    BSR.w searchinstr
00026F4C <AmiBlitz3.ab3@9991>   MOVE.w (A7)+,D2
00026F54 <AmiBlitz3.ab3@9993>   BCLR #$7,blitzmode
00026F58 <AmiBlitz3.ab3@9994>   BCLR #$E,D2
00026F5C <AmiBlitz3.ab3@9995>    BEQ.w 'isamiga
00026F64 <AmiBlitz3.ab3@9996>   BSET #$7,blitzmode
00026F66 <AmiBlitz3.ab3@9999>   TST.w (A3)
00026F6A <AmiBlitz3.ab3@10000>    BEQ.w 'simple
00026F70 <AmiBlitz3.ab3@10001>   BTST #$2,$1(A3)
00026F74 <AmiBlitz3.ab3@10002>    BNE.w tokeerr
00026F7A <AmiBlitz3.ab3@10003>   BTST #$3,$1(A3)
00026F7E <AmiBlitz3.ab3@10004>    BNE.w tokeerr
00026F82 <AmiBlitz3.ab3@10008>   LEA $6(A3),A3     ;skip node
00026F84 <AmiBlitz3.ab3@10011>   MOVE.w (A3)+,D0
00026F88 <AmiBlitz3.ab3@10012>    BMI.w tokeerr
00026F8C <AmiBlitz3.ab3@10013>   ANDI.w #$FF,D0
00026F8E <AmiBlitz3.ab3@10014>   ADDA.w D0,A3
00026F90 <AmiBlitz3.ab3@10015>   ADDQ.w #1,A3
00026F92 <AmiBlitz3.ab3@10016>   EXG.l D0,A3
00026F96 <AmiBlitz3.ab3@10017>   BCLR #$0,D0
00026F98 <AmiBlitz3.ab3@10018>   EXG.l D0,A3
00026F9A <AmiBlitz3.ab3@10019>   SUBQ.w #1,D2
00026F9E <AmiBlitz3.ab3@10020>    BPL.w 'loop2
00026FA0 <AmiBlitz3.ab3@10022>   TST.w (A3)
00026FA4 <AmiBlitz3.ab3@10023>    BNE.w 'go4it          ;no libs to fetch....
00026FA8 <AmiBlitz3.ab3@10024>   MOVE.l $2(A3),D0
00026FAC <AmiBlitz3.ab3@10025>   OR.l $A(A3),D0
00026FB0 <AmiBlitz3.ab3@10026>    BNE.w 'go4it          ;no error chx...
00026FB6 <AmiBlitz3.ab3@10027>   BTST #$0,$9(A3)
00026FBA <AmiBlitz3.ab3@10028>    BNE.w 'go4it          ;ditto...
00026FBE <AmiBlitz3.ab3@10029>   MOVE.l $6(A3),D7       ;sub offset
00026FC2 <AmiBlitz3.ab3@10030>   MOVE.w $0(A2,D7.L),D0
00026FC6 <AmiBlitz3.ab3@10031>   ANDI.w #$F000,D0
00026FCA <AmiBlitz3.ab3@10032>   CMP.w #-$6000,D0
00026FCE <AmiBlitz3.ab3@10033>    BEQ.w 'go4it
00026FD2 <AmiBlitz3.ab3@10036>   SUB.l $12(A2),D7
00026FD6 <AmiBlitz3.ab3@10037>   ADD.l $28(A2),D7
00026FD8 <AmiBlitz3.ab3@10038>  RTS
00026FDE <AmiBlitz3.ab3@10041>   LEA cutejsr,A0
00026FE4 <AmiBlitz3.ab3@10045>   MOVE.l destpointer,-(A7)
00026FEC <AmiBlitz3.ab3@10046>   MOVE.w #$FFFF,lasta6     ; was -1
00026FEE <AmiBlitz3.ab3@10048>    JSR (A0)
00026FF2 <AmiBlitz3.ab3@10049>   MOVE.w #$4E75,D1
00026FF6 <AmiBlitz3.ab3@10050>    BSR.w writeword
00026FF8 <AmiBlitz3.ab3@10052>   MOVE.l (A7)+,D7
00026FFA <AmiBlitz3.ab3@10053>  RTS
00026FFC <AmiBlitz3.ab3@10056>   TST.w (A3)+
00027000 <AmiBlitz3.ab3@10057>    BEQ.w 'skip
00027002 <AmiBlitz3.ab3@10058>   ADDQ.w #2,A3
00027006 <AmiBlitz3.ab3@10059>  BRA.w 'loop2
0002700A <AmiBlitz3.ab3@10062>   LEA $C(A3),A3
0002700E <AmiBlitz3.ab3@10063>  BRA.w 'loop
00027010 <AmiBlitz3.ab3@10066>   TST.w D2
00027014 <AmiBlitz3.ab3@10067>    BNE.w tokeerr
00027018 <AmiBlitz3.ab3@10069>   TST.w $6(A3)
0002701C <AmiBlitz3.ab3@10070>    BNE.w 'be4it
00027020 <AmiBlitz3.ab3@10071>   MOVE.l $8(A3),D0
00027024 <AmiBlitz3.ab3@10072>   OR.l $10(A3),D0
00027028 <AmiBlitz3.ab3@10073>    BNE.w 'be4it
0002702E <AmiBlitz3.ab3@10074>   BTST #$0,$F(A3)
00027032 <AmiBlitz3.ab3@10075>    BNE.w 'be4it
00027036 <AmiBlitz3.ab3@10076>   MOVE.l $C(A3),D7
0002703A <AmiBlitz3.ab3@10077>   MOVE.w $0(A2,D7.L),D0
0002703E <AmiBlitz3.ab3@10078>   ANDI.w #$F000,D0
00027042 <AmiBlitz3.ab3@10079>   CMP.w #-$6000,D0        ; was #$a000
00027046 <AmiBlitz3.ab3@10080>    BNE.w 'penis
00027048 <AmiBlitz3.ab3@10083>   MOVE.l A3,D1
0002704A <AmiBlitz3.ab3@10084>   SUB.l A2,D1
00027050 <AmiBlitz3.ab3@10085>   LEA Amakelibsub,A0
00027054 <AmiBlitz3.ab3@10086> BRA.w 'putcode
0002705A <AmiBlitz3.ab3@10090>   MOVEA.l _execbase,A6
00027060 <AmiBlitz3.ab3@10091>   MOVEA.l tokeslist,A2
00027066 <AmiBlitz3.ab3@10092>   CLR.l tokeslist
0002706A <AmiBlitz3.ab3@10095>     CMPA.w #$0,A2
0002706E <AmiBlitz3.ab3@10096>      BEQ.w 'done2
00027072 <AmiBlitz3.ab3@10097>     MOVEA.l $8(A2),A3
00027076 <AmiBlitz3.ab3@10100>       CMPA.w #$0,A3
0002707A <AmiBlitz3.ab3@10101>        BEQ.w 'done3
0002707C <AmiBlitz3.ab3@10102>       MOVEA.l A3,A1
0002707E <AmiBlitz3.ab3@10103>       MOVEA.l (A3),A3
00027080 <AmiBlitz3.ab3@10104>       MOVEQ.l #$08,D0
00027086 <AmiBlitz3.ab3@10106>       MOVE.l mempool,a0
0002708C <AmiBlitz3.ab3@10107>       MOVEA.l _execbase,A6
00027090 <AmiBlitz3.ab3@10108>       JSR _FreePooled(A6)
00027094 <AmiBlitz3.ab3@10111>  BRA.w 'floop2
00027096 <AmiBlitz3.ab3@10114>     MOVEA.l A2,A1
00027098 <AmiBlitz3.ab3@10115>     MOVEA.l (A2),A2
0002709A <AmiBlitz3.ab3@10116>     MOVEQ.l #$0C,D0
000270A0 <AmiBlitz3.ab3@10118>     MOVE.l mempool,a0
000270A6 <AmiBlitz3.ab3@10119>     MOVEA.l _execbase,A6
000270AA <AmiBlitz3.ab3@10120>     JSR _FreePooled(A6)
000270AE <AmiBlitz3.ab3@10123>  BRA.w 'floop
000270B0 <AmiBlitz3.ab3@10126> RTS
000270B4 <AmiBlitz3.ab3@10132>   MOVEM.l D3-D5/A1-A6,-(A7)
000270B6 <AmiBlitz3.ab3@10133>   MOVEA.l A1,A4
000270B8 <AmiBlitz3.ab3@10136>   MOVE.l (A2)+,D3
000270BC <AmiBlitz3.ab3@10137>   MOVE.w $0(A4,D3.L),D5
000270C0 <AmiBlitz3.ab3@10138>    BPL.w 'next
000270C4 <AmiBlitz3.ab3@10140>   TST.l $2C(A4)
000270C8 <AmiBlitz3.ab3@10141>    BEQ.w 'skipr
000270CE <AmiBlitz3.ab3@10142>   TST.b debugmode
000270D2 <AmiBlitz3.ab3@10143>    BNE.w 'skipr
000270D6 <AmiBlitz3.ab3@10144>   CMP.l $2C(A4),D3
000270DA <AmiBlitz3.ab3@10145>    BCC.w 'next
000270DE <AmiBlitz3.ab3@10148>   BCLR #$F,D5             ;to offset number
000270E2 <AmiBlitz3.ab3@10149>   MOVE.w $2(A4,D3.L),D4
000270E6 <AmiBlitz3.ab3@10150>   SUB.l $12(A4),D3
000270EA <AmiBlitz3.ab3@10151>   ADD.l $28(A4),D3
000270EE <AmiBlitz3.ab3@10153>   MOVEM.l D2/A2/A4,-(A7)
000270F2 <AmiBlitz3.ab3@10154>    BSR.w maketjsr
000270F6 <AmiBlitz3.ab3@10155>   MOVEM.l (A7)+,D2/A2/A4
000270F8 <AmiBlitz3.ab3@10158>   SUBQ.l #1,D2
000270FC <AmiBlitz3.ab3@10159>    BNE.w 'loop
00027100 <AmiBlitz3.ab3@10161>   MOVEM.l (A7)+,D3-D5/A1-A6
00027102 <AmiBlitz3.ab3@10162> RTS
00027108 <AmiBlitz3.ab3@10170>   LEA tokeslist,A3
0002710E <AmiBlitz3.ab3@10171>   MOVEA.l _execbase,A6
00027110 <AmiBlitz3.ab3@10174>   MOVE.l (A3),D0
00027114 <AmiBlitz3.ab3@10175>    BEQ.w 'notfound
00027116 <AmiBlitz3.ab3@10176>   MOVEA.l D0,A3
0002711A <AmiBlitz3.ab3@10177>   CMP.w $4(A3),D4
0002711E <AmiBlitz3.ab3@10178>    BNE.w 'loop2
00027122 <AmiBlitz3.ab3@10179>   CMP.w $6(A3),D5
00027126 <AmiBlitz3.ab3@10180>    BNE.w 'loop2
0002712A <AmiBlitz3.ab3@10181>  BRA.w 'found
0002712C <AmiBlitz3.ab3@10186>   MOVEQ.l #$0C,D0
0002712E <AmiBlitz3.ab3@10187>   MOVEQ.l #$01,D1
00027134 <AmiBlitz3.ab3@10189>   MOVE.l mempool,a0
00027138 <AmiBlitz3.ab3@10190>   JSR _AllocPooled(a6)
0002713A <AmiBlitz3.ab3@10193>   MOVEA.l D0,A3
00027140 <AmiBlitz3.ab3@10194>   MOVE.l tokeslist,(A3)
00027146 <AmiBlitz3.ab3@10195>   MOVE.l A3,tokeslist
0002714A <AmiBlitz3.ab3@10196>   MOVE.w D4,$4(A3)
0002714E <AmiBlitz3.ab3@10197>   MOVE.w D5,$6(A3)
00027152 <AmiBlitz3.ab3@10198>   CLR.l $8(A3)
00027154 <AmiBlitz3.ab3@10201>   MOVEQ.l #$08,D0
00027156 <AmiBlitz3.ab3@10202>   MOVEQ.l #$01,D1
0002715C <AmiBlitz3.ab3@10204>   MOVE.l mempool,a0
00027160 <AmiBlitz3.ab3@10205>   JSR _AllocPooled(a6)
00027162 <AmiBlitz3.ab3@10208>   MOVEA.l D0,A0
00027166 <AmiBlitz3.ab3@10209>   MOVE.l D3,$4(A0)
0002716A <AmiBlitz3.ab3@10210>   MOVE.l $8(A3),(A0)
0002716E <AmiBlitz3.ab3@10211>   MOVE.l A0,$8(A3)
00027170 <AmiBlitz3.ab3@10213>   MOVE.w D4,D1
00027174 <AmiBlitz3.ab3@10214> BRA.w searchinstr       ;use this library - NOW!
00027178 <AmiBlitz3.ab3@10217> tokeslist: Ds.l 1
0002717C <AmiBlitz3.ab3@10230>   BEQ.w 'skip
0002717E <AmiBlitz3.ab3@10231>   MOVE.l A1,-(A7)
00027180 <AmiBlitz3.ab3@10232>   ADDA.l D1,A1
00027182 <AmiBlitz3.ab3@10233>   ADDQ.w #6,A1
00027184 <AmiBlitz3.ab3@10236>     MOVE.w (A1)+,D1
00027188 <AmiBlitz3.ab3@10237>     BEQ.w 'done
0002718A <AmiBlitz3.ab3@10238>     CMP.w D2,D1
0002718E <AmiBlitz3.ab3@10239>     BEQ.w 'skip2
00027190 <AmiBlitz3.ab3@10240>     MOVE.l A1,-(A7)
00027194 <AmiBlitz3.ab3@10241>     BSR.w uselib
00027196 <AmiBlitz3.ab3@10242>     MOVEA.l (A7)+,A1
00027198 <AmiBlitz3.ab3@10245>     ADDQ.w #2,A1
0002719C <AmiBlitz3.ab3@10246>  BRA.w 'loop
0002719E <AmiBlitz3.ab3@10249>   MOVEA.l (A7)+,A1
000271A0 <AmiBlitz3.ab3@10252> RTS
000271A6 <AmiBlitz3.ab3@10256>   MOVEA.l libpointer,A1
000271AA <AmiBlitz3.ab3@10259>   CMPA.w #$0,A1
000271AE <AmiBlitz3.ab3@10260>    BEQ.b 'rts
000271B2 <AmiBlitz3.ab3@10261>   CMP.w $4(A1),D1
000271B6 <AmiBlitz3.ab3@10262>    BEQ.w 'found
000271B8 <AmiBlitz3.ab3@10263>   MOVEA.l (A1),A1
000271BC <AmiBlitz3.ab3@10264>  BRA.w 'loop
000271BE <AmiBlitz3.ab3@10267>   MOVEQ.l #-$01,D1
000271C0 <AmiBlitz3.ab3@10270> RTS
000271C4 <AmiBlitz3.ab3@10277>   MOVEM.l d0/a2,-(a7)
000271C6 <AmiBlitz3.ab3@10278>   MOVEQ #0,d0
000271CC <AmiBlitz3.ab3@10279>   LEA instrtab+4,a2
000271CE <AmiBlitz3.ab3@10280>   MOVE.w d1,d0
000271D0 <AmiBlitz3.ab3@10281>   ASL.l #3,d0
000271D4 <AmiBlitz3.ab3@10282>   MOVE.l 0(a2,d0.l),a1                                     ;*8
000271DA <AmiBlitz3.ab3@10283>   CMP.l #0,a1
000271DE <AmiBlitz3.ab3@10284>   BNE 'foundb
000271E4 <AmiBlitz3.ab3@10286>   MOVEA.l libpointer,A1
000271E8 <AmiBlitz3.ab3@10289>     CMPA.w #$0,A1
000271EC <AmiBlitz3.ab3@10291>     BEQ.w noliberr
000271F0 <AmiBlitz3.ab3@10293>     CMP.w $4(A1),D1
000271F4 <AmiBlitz3.ab3@10294>     BEQ.w 'found
000271F6 <AmiBlitz3.ab3@10295>    MOVEA.l (A1),A1
000271FA <AmiBlitz3.ab3@10296>  BRA.w 'loop
000271FE <AmiBlitz3.ab3@10300>   MOVE.l a1,0(a2,d0.l)
00027202 <AmiBlitz3.ab3@10303>   MOVEM.l (a7)+,d0/a2
00027204 <AmiBlitz3.ab3@10305> RTS
00027208 <AmiBlitz3.ab3@10315>   MOVEM.l d0-d1/a1,-(a7)
0002720A <AmiBlitz3.ab3@10316>   MOVEQ #0,d0
00027210 <AmiBlitz3.ab3@10317>   LEA instrtab,a1
00027212 <AmiBlitz3.ab3@10318>   MOVE.w d1,d0
00027214 <AmiBlitz3.ab3@10319>   ASL.l #3,d0
00027218 <AmiBlitz3.ab3@10320>   MOVE.l 0(a1,d0.l),a3
0002721C <AmiBlitz3.ab3@10321>   MOVE.l 4(a1,d0.l),a2
00027222 <AmiBlitz3.ab3@10322>   CMP.l #0,a3
00027226 <AmiBlitz3.ab3@10323>   BNE 'foundb
0002722C <AmiBlitz3.ab3@10326>   MOVEA.l libpointer,A2
00027230 <AmiBlitz3.ab3@10329>   CMPA.w #$0,A2
00027234 <AmiBlitz3.ab3@10330>   BEQ.w notokerr
00027238 <AmiBlitz3.ab3@10331>   CMP.w $E(A2),D1
0002723C <AmiBlitz3.ab3@10332>   BCS.w 'next
00027240 <AmiBlitz3.ab3@10333>   CMP.w $10(A2),D1
00027244 <AmiBlitz3.ab3@10334>   BCC.w 'next
00027248 <AmiBlitz3.ab3@10338>   LEA $30(A2),A3
0002724C <AmiBlitz3.ab3@10339>   TST.w $4(A2)
00027250 <AmiBlitz3.ab3@10340>   BPL.w 'userlib
00027254 <AmiBlitz3.ab3@10343>     CMP.w $E(A2),D1
00027258 <AmiBlitz3.ab3@10344>     BEQ.w 'found
0002725A <AmiBlitz3.ab3@10345>     SUBQ.w #1,D1
0002725E <AmiBlitz3.ab3@10346>     MOVEA.l $2(A3),A3
00027262 <AmiBlitz3.ab3@10347>  BRA.w 'loop2
00027266 <AmiBlitz3.ab3@10351>   MOVE.l a3,0(a1,d0.l)
0002726A <AmiBlitz3.ab3@10352>   MOVE.l a2,4(a1,d0.l)
0002726E <AmiBlitz3.ab3@10355>   MOVEM.l (a7)+,d0-d1/a1
00027272 <AmiBlitz3.ab3@10357>   MOVEM.l D1/A1-a3,-(A7)      ; was  movem.l d1/a1,-(a7)
00027276 <AmiBlitz3.ab3@10359>   CMP.w #1,(a3)
0002727A <AmiBlitz3.ab3@10360>   BNE.s 'ex10
00027282 <AmiBlitz3.ab3@10361>   CMP.l #$12345678,$e(a3)
00027286 <AmiBlitz3.ab3@10362>   BNE.s 'ex10
0002728C <AmiBlitz3.ab3@10363>   CMP.w #$ffff,$16(a3)
00027290 <AmiBlitz3.ab3@10364>   BNE.s 'ex10
00027294 <AmiBlitz3.ab3@10365>   MOVE.l $12(a3),d1
00027298 <AmiBlitz3.ab3@10366>   BEQ.s 'ex10
0002729E <AmiBlitz3.ab3@10367>   LEA pluginbase,a3
000272A2 <AmiBlitz3.ab3@10369>  JMP 0(a2,d1.l)                                             ;plugin
000272A4 <AmiBlitz3.ab3@10373>   MOVEA.l A2,A1
000272AA <AmiBlitz3.ab3@10375>   CLR.b newmode
000272AE <AmiBlitz3.ab3@10377>   MOVE.w $4(A1),D1       ;set lib#
000272B2 <AmiBlitz3.ab3@10382>   BSR.w uselib3
000272B6 <AmiBlitz3.ab3@10383>   MOVEM.l (A7)+,D1/A1-a3
000272B8 <AmiBlitz3.ab3@10384>  RTS
000272BE <AmiBlitz3.ab3@10388>   MOVE.w globalvarpointer,-(a7)         ; "
000272C6 <AmiBlitz3.ab3@10389>   MOVE.w #$8004,globalvarpointer        ; "
000272CA <AmiBlitz3.ab3@10390>   BSR.w uselib3                         ; "
000272D0 <AmiBlitz3.ab3@10391>   MOVE.w (a7)+,globalvarpointer         ; "
000272D4 <AmiBlitz3.ab3@10392>   MOVEM.l (A7)+,D1/A1-a3
000272D6 <AmiBlitz3.ab3@10393>  RTS
000272DA <AmiBlitz3.ab3@10397>     CMP.w $E(A2),D1
000272DE <AmiBlitz3.ab3@10398>     BEQ.w 'found
000272E0 <AmiBlitz3.ab3@10399>     SUBQ.w #1,D1
000272E4 <AmiBlitz3.ab3@10400>     MOVEA.l $2(A3),A3
000272E8 <AmiBlitz3.ab3@10401>  BRA.w 'userlib
000272EA <AmiBlitz3.ab3@10404>   MOVEA.l (A2),A2
000272EE <AmiBlitz3.ab3@10405> BRA.w 'loop
000272F2 <AmiBlitz3.ab3@10409>   MOVEM.l (A7)+,D1/A1-a3
000272F8 <AmiBlitz3.ab3@10410>   JSR stripspaces
000272FA <AmiBlitz3.ab3@10411>   MOVEQ #0,d0
000272FC <AmiBlitz3.ab3@10412>   MOVE.b (a5)+,d0
00027302 <AmiBlitz3.ab3@10413>   MOVE.w d0,lastchar
00027304 <AmiBlitz3.ab3@10414>   ADDQ.l #4,a7
00027306 <AmiBlitz3.ab3@10415> RTS
0002730C <AmiBlitz3.ab3@10418> JUMP_writeword JMP writeword
00027310 <AmiBlitz3.ab3@10421> ptr_acidlibs:   Ds.l 1                                     ;deflibsat org source
00027314 <AmiBlitz3.ab3@10422> ptr_deflibs:    Ds.l 1                                     ;acidlibsat org source
00027318 <AmiBlitz3.ab3@10423> ptr_userlibs:   Ds.l 1                                     ;blitzlibsat org source  ;;start of blitzlibs list!
0002731A <AmiBlitz3.ab3@10433>   TST.l D0
0002731E <AmiBlitz3.ab3@10434>   BEQ.w 'rts
00027320 <AmiBlitz3.ab3@10435>     MOVE.l D0,D6                                           ;d6=len
00027326 <AmiBlitz3.ab3@10436>     MOVEA.l _dosbase,A6
0002732C <AmiBlitz3.ab3@10437>     MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00027330 <AmiBlitz3.ab3@10438>     JSR _Open(A6)
00027332 <AmiBlitz3.ab3@10439>     MOVE.l D0,D7
00027336 <AmiBlitz3.ab3@10440>     BEQ.w 'rts
00027338 <AmiBlitz3.ab3@10441>       MOVE.l D6,D0
0002733A <AmiBlitz3.ab3@10442>       MOVEQ.l #$01,D1
00027340 <AmiBlitz3.ab3@10443>       MOVEA.l _execbase,A6
00027346 <AmiBlitz3.ab3@10446>       MOVE.l mempool,a0
0002734A <AmiBlitz3.ab3@10447>       JSR _AllocPooled(a6)
0002734C <AmiBlitz3.ab3@10449>       MOVE.l D0,D5                                         ;start address
0002734E <AmiBlitz3.ab3@10451>       MOVE.l D7,D1                                         ; handle
00027350 <AmiBlitz3.ab3@10452>       MOVE.l D5,D2                                         ; buffer addr
00027352 <AmiBlitz3.ab3@10453>       MOVE.l D6,D3                                         ; size
00027358 <AmiBlitz3.ab3@10454>       MOVEA.l _dosbase,A6
0002735C <AmiBlitz3.ab3@10455>       JSR _Read(A6)
0002735E <AmiBlitz3.ab3@10456>       MOVE.l D7,D1
00027362 <AmiBlitz3.ab3@10457>       JSR _Close(A6)
00027364 <AmiBlitz3.ab3@10459>       MOVEA.l D5,A0                                        ; buffer addr
00027366 <AmiBlitz3.ab3@10465>         MOVE.l (A0)+,D0                                    ; naechster Longwert nach DO
0002736A <AmiBlitz3.ab3@10466>         BEQ.b 'linkdone                                    ; wenn <> 0, dann
0002736E <AmiBlitz3.ab3@10467>           LEA $20(A0),A1  ;link in.                        ;   lade inhalt von D0+40bytes nach A1
00027370 <AmiBlitz3.ab3@10468>           MOVE.l A1,(A3)                                   ;   kopiere Adresse in A1 zum libpointer
00027372 <AmiBlitz3.ab3@10469>           MOVEA.l A1,A3                                    ;   kopiere A1 nach A3
00027374 <AmiBlitz3.ab3@10470>           ADDA.l D0,A0                                     ;   addiere inhalt von D0 zu A0 hinzu
00027378 <AmiBlitz3.ab3@10474>           MOVE.l -$4(A1),D0    ;number of longwords.       ;   hole die 4bytes vor nach D0
0002737A <AmiBlitz3.ab3@10475>           ADD.l D0,D0          ;to bytes...                ;   verdoppele D0
0002737C <AmiBlitz3.ab3@10476>           ADD.l D0,D0                                      ;   verdoppele D0 nochmal
00027380 <AmiBlitz3.ab3@10477>           MOVE.l D0,$6(A1)     ;fix 1                      ;   schreibe D0 6bytes nach A1
00027384 <AmiBlitz3.ab3@10478>           CLR.l $20(A1)        ;no relocs                  ;   loesche D0+40bytes
00027388 <AmiBlitz3.ab3@10479>           LEA $C(A1,D0.L),A2   ;reloc info.                ;   lade inhalt von (A1)+D0+$C nach A2
0002738A <AmiBlitz3.ab3@10480>           CMPA.l A0,A2         ;is it over?
0002738E <AmiBlitz3.ab3@10481>           BCC.b 'linkloop                                  ; wenn A0=>A2
00027394 <AmiBlitz3.ab3@10483>             MOVE.l -$8(A2),$20(A1)  ;number of relocs.     ;
00027398 <AmiBlitz3.ab3@10484>             MOVE.l A2,$24(A1)       ;pointer to relocs.    ;
0002739C <AmiBlitz3.ab3@10485>   BRA.w 'linkloop
0002739E <AmiBlitz3.ab3@10488>       MOVE.l D5,D0
000273A0 <AmiBlitz3.ab3@10491> RTS
000273CA <AmiBlitz3.ab3@10496>   !basic
0002743E <AmiBlitz3.ab3@10497>    tempmapping$ = dos_AddPart{my_systemdir$,"token_mapping_userlibs.txt"}
00027472 <AmiBlitz3.ab3@10498>    dos_Delete{tempmapping$}
000274B6 <AmiBlitz3.ab3@10499>    fid.l = file_Open{tempmapping$,#file_forcewrite}
000274D4 <AmiBlitz3.ab3@10500>   !asm
000274DA <AmiBlitz3.ab3@10502>   LEA libpointer,A3
000274E0 <AmiBlitz3.ab3@10506>   MOVE.l size_deflibs,D0                 ; in org source was acid libs first
000274E6 <AmiBlitz3.ab3@10507>   MOVE.l deflib,d1
000274EA <AmiBlitz3.ab3@10509>   BEQ 'l1
000274EE <AmiBlitz3.ab3@10510>  BRA 'l2
000274F4 <AmiBlitz3.ab3@10513>   MOVE.l #str_path_deflibs,D1
000274F8 <AmiBlitz3.ab3@10517>   BSR.w load_libsfile
000274FE <AmiBlitz3.ab3@10518>   MOVE.l D0,ptr_deflibs
00027504 <AmiBlitz3.ab3@10521>   MOVE.l size_acidlibs,D0               ; in org source was deflibs libs second
0002750A <AmiBlitz3.ab3@10522>   MOVE.l #str_path_acidlibs,D1
0002750E <AmiBlitz3.ab3@10523>   BSR.w load_libsfile
00027514 <AmiBlitz3.ab3@10524>   MOVE.l D0,ptr_acidlibs
00027516 <AmiBlitz3.ab3@10530>   CLR.l (A3)
0002751C <AmiBlitz3.ab3@10531>   MOVE.l A3,ptr_userlibs
00027522 <AmiBlitz3.ab3@10536>   LEA str_libfilename,A0
00027528 <AmiBlitz3.ab3@10537>   LEA str_path_userlibs,A1
0002752A <AmiBlitz3.ab3@10540>     MOVE.b (A1)+,(A0)+
0002752E <AmiBlitz3.ab3@10541>   BNE.b 'loop0
00027530 <AmiBlitz3.ab3@10544>   SUBQ.w #1,A0
00027534 <AmiBlitz3.ab3@10545>   MOVE.b #$2F,(A0)+
00027536 <AmiBlitz3.ab3@10549>   MOVE.l A0,-(A7) ;store first pos for chars        ; -- store str_path_userlibs in A7
0002753C <AmiBlitz3.ab3@10551>   LEA ptr_userlibs_list,A2   ;lib names!
00027542 <AmiBlitz3.ab3@10552>   MOVEA.l ptr_userlibs,A3
00027548 <AmiBlitz3.ab3@10553>   MOVEA.l _dosbase,A6
0002754A <AmiBlitz3.ab3@10558>       MOVE.l (A2),D0                                       ; addresse aus liste nach D0
0002754E <AmiBlitz3.ab3@10559>       BNE.b 'more                                      ; wenn nix drin, processing ueberspringen
00027550 <AmiBlitz3.ab3@10561>       CLR.l (A3)
00027552 <AmiBlitz3.ab3@10562>       ADDQ.w #4,A7
0002757C <AmiBlitz3.ab3@10564>       !basic
00027590 <AmiBlitz3.ab3@10565>       If fid<>-1
0002759A <AmiBlitz3.ab3@10566>         file_Close{fid}
000275A6 <AmiBlitz3.ab3@10567>         fid = -1
000275C4 <AmiBlitz3.ab3@10569>       !asm
000275C8 <AmiBlitz3.ab3@10571>  BRA.w process_libraries
000275CA <AmiBlitz3.ab3@10574>       MOVEA.l D0,A2                                        ; addresse zureuck nach A2
000275CE <AmiBlitz3.ab3@10575>       TST.w $4(A2)                                         ; naechste addresse pruefen
000275D2 <AmiBlitz3.ab3@10576>     BEQ.b 'loop
000275D6 <AmiBlitz3.ab3@10578>     LEA $6(A2),A1          ;add dir name to libsdir
000275D8 <AmiBlitz3.ab3@10579>     MOVEA.l (A7),A0
000275DA <AmiBlitz3.ab3@10582>       MOVE.b (A1)+,(A0)+
000275DE <AmiBlitz3.ab3@10583>     BNE.w 'loop2
000275E0 <AmiBlitz3.ab3@10587>     MOVE.l A0,-(A7)                  ;pointer for lib name
000275E6 <AmiBlitz3.ab3@10589>     MOVE.l #str_libfilename,D1
000275E8 <AmiBlitz3.ab3@10590>     MOVEQ.l #-$02,D2
000275EE <AmiBlitz3.ab3@10591>     MOVEA.l _dosbase,A6
000275F2 <AmiBlitz3.ab3@10592>      JSR _Lock(A6)
000275F4 <AmiBlitz3.ab3@10593>     MOVE.l D0,D1
000275F8 <AmiBlitz3.ab3@10594>      BEQ.w 'exdone2
000275FA <AmiBlitz3.ab3@10595>     MOVEA.l (A7),A0
00027600 <AmiBlitz3.ab3@10596>     MOVE.b #$2F,-$1(A0)           ;#'/'
00027602 <AmiBlitz3.ab3@10599>     MOVE.l D1,-(A7)               ;lock
00027608 <AmiBlitz3.ab3@10600>     MOVE.l #ptr_parameterstore,D2
0002760E <AmiBlitz3.ab3@10601>     MOVEA.l _dosbase,A6
00027612 <AmiBlitz3.ab3@10602>     JSR _Examine(A6)
00027614 <AmiBlitz3.ab3@10603>     TST.l D0
00027618 <AmiBlitz3.ab3@10604>      BEQ.w 'exdone
0002761E <AmiBlitz3.ab3@10611>     LEA fib_FileName,A0
00027622 <AmiBlitz3.ab3@10612>     BSR.w check_for_infoextention
00027626 <AmiBlitz3.ab3@10613>     BEQ.w 'exdone
00027650 <AmiBlitz3.ab3@10617>     !basic
000276D4 <AmiBlitz3.ab3@10618>       Poke$ ?str_libfilename,dos_AddPart{Peek$(?str_path_userlibs),Peek$(?fib_FileName)}
000276F2 <AmiBlitz3.ab3@10619>     !asm
000276F8 <AmiBlitz3.ab3@10620>     MOVE.l #str_libfilename,D1
000276FC <AmiBlitz3.ab3@10621>     BSR.w open_userlibfile
000276FE <AmiBlitz3.ab3@10625>     MOVE.l (A7)+,D1
00027704 <AmiBlitz3.ab3@10626>     MOVEA.l _dosbase,A6
00027708 <AmiBlitz3.ab3@10627>     JSR _UnLock(A6)
0002770A <AmiBlitz3.ab3@10630>     ADDQ.w #4,A7    ;forget namepos
0002770E <AmiBlitz3.ab3@10631> BRA.w 'loop
00027714 <AmiBlitz3.ab3@10638>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
0002771A <AmiBlitz3.ab3@10639>   MOVEA.l _dosbase,A6
0002771E <AmiBlitz3.ab3@10640>    JSR _Open(A6)
00027720 <AmiBlitz3.ab3@10641>   MOVE.l D0,D7
00027724 <AmiBlitz3.ab3@10642>    BEQ.w 'openerr
00027726 <AmiBlitz3.ab3@10645>   MOVE.l D7,D1                                             ; filehandle
0002772C <AmiBlitz3.ab3@10646>   MOVE.l #optstuff,D2                                     ; buffer
00027732 <AmiBlitz3.ab3@10647>   MOVEA.l _dosbase,A6
00027734 <AmiBlitz3.ab3@10648>   MOVEQ.l #$20,D3                                          ; size
00027738 <AmiBlitz3.ab3@10649>   JSR _Read(A6)
0002773E <AmiBlitz3.ab3@10652>   MOVE.l optstuff+28,D6      ;long words to read
00027740 <AmiBlitz3.ab3@10653>   LSL.l #2,D6
00027742 <AmiBlitz3.ab3@10654>   MOVE.l D6,D0
00027744 <AmiBlitz3.ab3@10655>   MOVEQ.l #$01,D1
0002774A <AmiBlitz3.ab3@10656>   MOVEA.l _execbase,A6
00027750 <AmiBlitz3.ab3@10659>   MOVE.l mempool,a0
00027754 <AmiBlitz3.ab3@10660>   JSR _AllocPooled(a6)
00027756 <AmiBlitz3.ab3@10662>   MOVEA.l D0,A5
0002775C <AmiBlitz3.ab3@10665>   MOVEA.l _dosbase,A6
0002775E <AmiBlitz3.ab3@10666>   MOVE.l D7,D1                                             ; filehandle
00027760 <AmiBlitz3.ab3@10667>   MOVE.l A5,D2                                             ; buffer
00027762 <AmiBlitz3.ab3@10668>   MOVE.l D6,D3                                             ; size
00027766 <AmiBlitz3.ab3@10669>    JSR _Read(A6)   ;read in struct
00027768 <AmiBlitz3.ab3@10671>   MOVE.l A5,(A3)
0002776A <AmiBlitz3.ab3@10674>   MOVE.l A5,d0
0002776C <AmiBlitz3.ab3@10677>   MOVEA.l A5,A3
00027770 <AmiBlitz3.ab3@10678>   MOVE.l D6,$6(A5)
00027774 <AmiBlitz3.ab3@10679>   CLR.l $20(A5)
0002779E <AmiBlitz3.ab3@10681>   !basic
000277A8 <AmiBlitz3.ab3@10683>   addr_libnum.l = PutD0 + 4
000277BC <AmiBlitz3.ab3@10684>   If fid<>-1
0002785C <AmiBlitz3.ab3@10685>     currentlib$ = LSet$(Peek.s(?fib_FileName),30)+";"+LSet$(Get_Libinfo{addr_libnum},30) ;+";"+Str$(Peek.w(addr_libnum))
0002788E <AmiBlitz3.ab3@10686>     file_WriteLine{fid,currentlib$}
000278AC <AmiBlitz3.ab3@10688>   !asm
000278AE <AmiBlitz3.ab3@10691>   MOVE.l D7,D1                                             ; filehandle
000278B4 <AmiBlitz3.ab3@10692>   MOVE.l #optstuff,D2                                     ; buffer
000278B6 <AmiBlitz3.ab3@10693>   MOVEQ.l #$0C,D3                                          ; size
000278BC <AmiBlitz3.ab3@10694>   MOVEA.l _dosbase,A6
000278C0 <AmiBlitz3.ab3@10695>    JSR _Read(A6)
000278C6 <AmiBlitz3.ab3@10698>   CMP.l #$C,D0
000278CA <AmiBlitz3.ab3@10699>    BCS.w 'closeup
000278D0 <AmiBlitz3.ab3@10702>   MOVE.l optstuff+4,D0
000278D4 <AmiBlitz3.ab3@10703>   MOVE.l D0,$20(A5)
000278D6 <AmiBlitz3.ab3@10704>   LSL.l #2,D0
000278D8 <AmiBlitz3.ab3@10705>   MOVE.l D0,D5             ;length of reloc info
000278DA <AmiBlitz3.ab3@10706>   MOVEQ.l #$01,D1
000278E0 <AmiBlitz3.ab3@10707>   MOVEA.l _execbase,A6
000278E6 <AmiBlitz3.ab3@10709>   MOVE.l mempool,a0
000278EA <AmiBlitz3.ab3@10710>   JSR _AllocPooled(a6)
000278F0 <AmiBlitz3.ab3@10713>   MOVEA.l _dosbase,A6
000278F4 <AmiBlitz3.ab3@10715>   MOVE.l D0,$24(A5)        ;pointer to reloc mem
000278F6 <AmiBlitz3.ab3@10716>   MOVE.l D7,D1
000278F8 <AmiBlitz3.ab3@10717>   MOVE.l D0,D2
000278FA <AmiBlitz3.ab3@10718>   MOVE.l D5,D3
000278FE <AmiBlitz3.ab3@10719>   JSR _Read(A6)
00027900 <AmiBlitz3.ab3@10722>   MOVE.l D7,D1
00027906 <AmiBlitz3.ab3@10723>   MOVEA.l _dosbase,A6
0002790A <AmiBlitz3.ab3@10724> JMP _Close(A6)
0002790C <AmiBlitz3.ab3@10727> RTS
00027912 <AmiBlitz3.ab3@10737>   CLR.w number_of_objects
00027918 <AmiBlitz3.ab3@10738>   MOVEA.l end_of_tokenlist,A3
0002791E <AmiBlitz3.ab3@10739>   MOVEA.l libpointer,A2
00027922 <AmiBlitz3.ab3@10742>     CMPA.w #$0,A2
00027926 <AmiBlitz3.ab3@10743>     BEQ.w 'done                                        ; <-- abbruch mit RTS
0002792A <AmiBlitz3.ab3@10745>     MOVE.w $4(A2),D7                                       ; <-- get tokennumber
0002792E <AmiBlitz3.ab3@10746>     BMI.w 'syslib
00027930 <AmiBlitz3.ab3@10747>       LSL.w #7,D7
00027932 <AmiBlitz3.ab3@10748>       ADDQ.w #1,D7
00027936 <AmiBlitz3.ab3@10749>       MOVE.w D7,$E(A2)
0002793A <AmiBlitz3.ab3@10752>     LEA $30(A2),A1
00027940 <AmiBlitz3.ab3@10753>     LEA temp1,A4
00027942 <AmiBlitz3.ab3@10756>       MOVE.w (A1),D0
00027946 <AmiBlitz3.ab3@10757>       BMI.w 'next
00027948 <AmiBlitz3.ab3@10758>       MOVE.l A1,(A4)
0002794A <AmiBlitz3.ab3@10759>       MOVEA.l A1,A4      ;last link for subs
0002794C <AmiBlitz3.ab3@10760>       ADDQ.w #2,A4
0002794E <AmiBlitz3.ab3@10761>       ADDQ.w #6,A1
00027952 <AmiBlitz3.ab3@10762>       CMP.w #$8,D0
00027956 <AmiBlitz3.ab3@10763>       BEQ.w 'addtoke
0002795A <AmiBlitz3.ab3@10764>         ANDI.w #$F,D0
0002795E <AmiBlitz3.ab3@10765>         BNE.w 'something
00027962 <AmiBlitz3.ab3@10769>           BSR.w skiplibreg
00027966 <AmiBlitz3.ab3@10770>           LEA $C(A1),A1
00027968 <AmiBlitz3.ab3@10771>           ADDQ.w #1,D7   ;in case it's a user lib
0002796C <AmiBlitz3.ab3@10772>  BRA.w 'loop2
00027970 <AmiBlitz3.ab3@10775>     BTST #$2,D0
00027974 <AmiBlitz3.ab3@10776>     BEQ.w 'notalib
00027976 <AmiBlitz3.ab3@10777>       ADDQ.w #4,A1
00027978 <AmiBlitz3.ab3@10780>         TST.b (A1)+
0002797C <AmiBlitz3.ab3@10781>       BPL.w 'alibloop
00027980 <AmiBlitz3.ab3@10782>       BSR.w aligna1
00027984 <AmiBlitz3.ab3@10783>  BRA.w 'addtoke
00027986 <AmiBlitz3.ab3@10788>       MOVE.w (A1)+,D0
0002798A <AmiBlitz3.ab3@10789>       BMI.w 'addtoke
0002798E <AmiBlitz3.ab3@10790>       ANDI.w #$FF,D0
00027990 <AmiBlitz3.ab3@10791>       ADDA.w D0,A1
00027994 <AmiBlitz3.ab3@10792>       BSR.w aligna1
00027998 <AmiBlitz3.ab3@10793>       BSR.w skiplibreg
0002799C <AmiBlitz3.ab3@10794>       LEA $C(A1),A1
000279A0 <AmiBlitz3.ab3@10795>  BRA.w 'stloop
000279A2 <AmiBlitz3.ab3@10798>     MOVE.l A1,(A3)
000279A4 <AmiBlitz3.ab3@10799>     MOVEA.l A1,A3
000279A6 <AmiBlitz3.ab3@10800>     ADDQ.w #4,A1
000279A8 <AmiBlitz3.ab3@10802>     MOVE.w D7,(A1)+
000279AA <AmiBlitz3.ab3@10805>       TST.b (A1)+
000279AE <AmiBlitz3.ab3@10806>     BNE.w 'tokeloop
000279B0 <AmiBlitz3.ab3@10809>       TST.b (A1)+
000279B4 <AmiBlitz3.ab3@10810>     BNE.w 'tokeloop2
000279B8 <AmiBlitz3.ab3@10811>     BSR.w aligna1
000279BA <AmiBlitz3.ab3@10812>     ADDQ.w #1,D7
000279BE <AmiBlitz3.ab3@10813>  BRA.w 'loop2
000279C2 <AmiBlitz3.ab3@10816>     TST.w $4(A2)
000279C6 <AmiBlitz3.ab3@10817>      BMI.w 'notulib
000279CA <AmiBlitz3.ab3@10818>     MOVE.w D7,$10(A2)
000279CC <AmiBlitz3.ab3@10821>     ADDQ.w #2,A1
000279CE <AmiBlitz3.ab3@10822>     TST.l (A1)+
000279D2 <AmiBlitz3.ab3@10823>      BEQ.w 'nomax
000279D8 <AmiBlitz3.ab3@10824>     ADDQ.w #1,number_of_objects
000279DC <AmiBlitz3.ab3@10825>     LEA $16(A1),A1
000279DE <AmiBlitz3.ab3@10828>     SUBA.l A2,A1
000279E2 <AmiBlitz3.ab3@10829>     MOVE.l A1,$12(A2)
000279E4 <AmiBlitz3.ab3@10830>     MOVEA.l (A2),A2
000279E8 <AmiBlitz3.ab3@10831>  BRA.w 'loop
000279EA <AmiBlitz3.ab3@10834>   CLR.l (A3)
000279F0 <AmiBlitz3.ab3@10836> 
000279F6 <AmiBlitz3.ab3@10838>   MOVE.l A7,errstack
00027A00 <AmiBlitz3.ab3@10839>   MOVE.l #'cont,errcont
00027A08 <AmiBlitz3.ab3@10840>   MOVE.w #$FFFF,ezerr       ; was -1
00027A0C <AmiBlitz3.ab3@10841>   MOVE.w #$FFFA,D1          ;#65530
00027A10 <AmiBlitz3.ab3@10842>    BSR.w findlib            ;get address of mem lib
00027A16 <AmiBlitz3.ab3@10843>   MOVE.l A1,tempvm
00027A1A <AmiBlitz3.ab3@10844>   MOVE.w #$FDA7,D1          ;#64935,
00027A1E <AmiBlitz3.ab3@10845>    BSR.w findlib
00027A24 <AmiBlitz3.ab3@10846>   MOVE.l A1,ffplib
00027A26 <AmiBlitz3.ab3@10849> RTS
00027A2A <AmiBlitz3.ab3@10852> ffplib:  Ds.l 1
00027A2C <AmiBlitz3.ab3@10856>     TST.w (A1)+
00027A30 <AmiBlitz3.ab3@10857>     BEQ.w 'done
00027A32 <AmiBlitz3.ab3@10858>     ADDQ.w #2,A1
00027A36 <AmiBlitz3.ab3@10859>  BRA.w skiplibreg
00027A38 <AmiBlitz3.ab3@10862> RTS
00027A3A <AmiBlitz3.ab3@10866>   EXG.l A1,A0
00027A3E <AmiBlitz3.ab3@10867>   BSR.w aligna1
00027A40 <AmiBlitz3.ab3@10868>   EXG.l A1,A0
00027A42 <AmiBlitz3.ab3@10869> RTS
00027A44 <AmiBlitz3.ab3@10873>   EXG.l D0,A1
00027A46 <AmiBlitz3.ab3@10874>   ADDQ.l #1,D0
00027A4A <AmiBlitz3.ab3@10875>   BCLR #$0,D0
00027A4C <AmiBlitz3.ab3@10876>   EXG.l D0,A1
00027A4E <AmiBlitz3.ab3@10877> RTS
00027A54 <AmiBlitz3.ab3@10881>   MOVEA.l _execbase,A6
00027A5A <AmiBlitz3.ab3@10882>   MOVEA.l ptr_userlibs,A2
00027A5C <AmiBlitz3.ab3@10883>   MOVE.l (A2),D0
00027A5E <AmiBlitz3.ab3@10884>   CLR.l (A2)
00027A60 <AmiBlitz3.ab3@10885>   MOVEA.l D0,A2
00027A64 <AmiBlitz3.ab3@10888>     CMPA.w #$0,A2
00027A68 <AmiBlitz3.ab3@10889>     BEQ.w free_userlib
00027A6C <AmiBlitz3.ab3@10891>     MOVE.l $20(A2),D0
00027A70 <AmiBlitz3.ab3@10892>     BEQ.b 'skip
00027A72 <AmiBlitz3.ab3@10893>       LSL.l #2,D0
00027A78 <AmiBlitz3.ab3@10895>       MOVE.l mempool,a0
00027A7C <AmiBlitz3.ab3@10897>       MOVEA.l $24(A2),A1
00027A80 <AmiBlitz3.ab3@10899>       JSR _FreePooled(A6)
00027A82 <AmiBlitz3.ab3@10904>     MOVEA.l A2,A1
00027A86 <AmiBlitz3.ab3@10905>     MOVE.l $6(A1),D0
00027A8C <AmiBlitz3.ab3@10907>     MOVE.l mempool,a0
00027A8E <AmiBlitz3.ab3@10909>     MOVEA.l (A2),A2
00027A94 <AmiBlitz3.ab3@10911>     MOVEA.l _execbase,A6
00027A98 <AmiBlitz3.ab3@10912>     JSR _FreePooled(A6)
00027A9C <AmiBlitz3.ab3@10915> BRA.w 'loop
00027AA0 <AmiBlitz3.ab3@10919>   BSR.w free_userlibs
00027AA6 <AmiBlitz3.ab3@10921>   MOVEA.l _execbase,A6
00027AAC <AmiBlitz3.ab3@10922>   CLR.l libpointer
00027AB2 <AmiBlitz3.ab3@10923>   MOVEA.l end_of_tokenlist,A0
00027AB4 <AmiBlitz3.ab3@10924>   CLR.l (A0)
00027ABA <AmiBlitz3.ab3@10926>   MOVE.l size_acidlibs,D0
00027ABE <AmiBlitz3.ab3@10927>   BEQ.b 'defskip
00027AC4 <AmiBlitz3.ab3@10928>     MOVE.l ptr_acidlibs,D1
00027AC8 <AmiBlitz3.ab3@10929>     BEQ.b 'defskip
00027ACE <AmiBlitz3.ab3@10930>       CLR.l ptr_acidlibs
00027AD0 <AmiBlitz3.ab3@10931>       MOVEA.l D1,A1
00027AD6 <AmiBlitz3.ab3@10933>       MOVE.l mempool,a0
00027ADC <AmiBlitz3.ab3@10934>       MOVEA.l _execbase,A6
00027AE0 <AmiBlitz3.ab3@10935>       JSR _FreePooled(A6)                                 ; free acidlibs
00027AE6 <AmiBlitz3.ab3@10940>   MOVE.l size_deflibs,D0
00027AEA <AmiBlitz3.ab3@10941>   BEQ.b 'acidskip
00027AF0 <AmiBlitz3.ab3@10942>     MOVE.l ptr_deflibs,D1
00027AF4 <AmiBlitz3.ab3@10943>     BEQ.b 'acidskip
00027AFA <AmiBlitz3.ab3@10944>       CLR.l ptr_deflibs                                    ; d0: memorySize
00027AFC <AmiBlitz3.ab3@10945>       MOVEA.l D1,A1                                        ; a1: memory
00027B02 <AmiBlitz3.ab3@10947>       MOVE.l mempool,a0                                    ; a0: poolHeader
00027B08 <AmiBlitz3.ab3@10948>       MOVEA.l _execbase,A6
00027B0C <AmiBlitz3.ab3@10949>       JSR _FreePooled(A6)                                  ; free deflibs
00027B0E <AmiBlitz3.ab3@10954> RTS
00027B14 <AmiBlitz3.ab3@10958>   MOVEA.l currentmacroaddr,A0
00027B16 <AmiBlitz3.ab3@10959>   MOVEA.l (A0),A2
00027B18 <AmiBlitz3.ab3@10960>   CLR.l (A0)
00027B1E <AmiBlitz3.ab3@10961>   MOVEA.l _execbase,A6
00027B22 <AmiBlitz3.ab3@10964>     CMPA.w #$0,A2
00027B26 <AmiBlitz3.ab3@10965>     BEQ.w 'done
00027B28 <AmiBlitz3.ab3@10966>     MOVEQ.l #$00,D0
00027B2C <AmiBlitz3.ab3@10967>     MOVE.w $8(A2),D0
00027B30 <AmiBlitz3.ab3@10968>     BEQ.w 'skip
00027B34 <AmiBlitz3.ab3@10969>     MOVEA.l $4(A2),A1
00027B3A <AmiBlitz3.ab3@10971>     MOVE.l mempool,a0
00027B3E <AmiBlitz3.ab3@10972>     JSR _FreePooled(A6)
00027B40 <AmiBlitz3.ab3@10977>     MOVEA.l A2,A1
00027B42 <AmiBlitz3.ab3@10978>     MOVEA.l (A2),A2
00027B44 <AmiBlitz3.ab3@10979>     MOVEQ.l #$00,D0
00027B48 <AmiBlitz3.ab3@10980>     MOVE.b $C(A1),D0
00027B4E <AmiBlitz3.ab3@10982>     MOVE.l mempool2,a0
00027B52 <AmiBlitz3.ab3@10983>     JSR _FreePooled(A6)
00027B56 <AmiBlitz3.ab3@10987>  BRA.w 'loop
00027B58 <AmiBlitz3.ab3@10990> RTS
00027B5E <AmiBlitz3.ab3@10994>   MOVEA.l templabel,A2
00027B64 <AmiBlitz3.ab3@10995>   CLR.l templabel
00027B66 <AmiBlitz3.ab3@10997> RTS
00027B6C <AmiBlitz3.ab3@10999>   MOVEA.l _execbase,A6                                     ;??looks like dead code?
00027B70 <AmiBlitz3.ab3@11002>     CMPA.w #$0,A2
00027B74 <AmiBlitz3.ab3@11003>     BEQ.w 'done
00027B76 <AmiBlitz3.ab3@11004>     MOVEQ.l #$00,D0
00027B7A <AmiBlitz3.ab3@11005>     MOVE.b $E(A2),D0                                       ;labeltemp
00027B7C <AmiBlitz3.ab3@11006>     MOVEA.l A2,A1
00027B7E <AmiBlitz3.ab3@11007>     MOVEA.l (A2),A2
00027B84 <AmiBlitz3.ab3@11009>     MOVE.l mempool2,a0
00027B88 <AmiBlitz3.ab3@11014>  BRA.w 'loop
00027B8A <AmiBlitz3.ab3@11017> RTS
00027B90 <AmiBlitz3.ab3@11021>   MOVEA.l data1,A4
00027B96 <AmiBlitz3.ab3@11022>   CMPA.l data2at,A4
00027B9A <AmiBlitz3.ab3@11023>   BCC.w 'over
00027B9C <AmiBlitz3.ab3@11024>     MOVE.b D1,(A4)+
00027BA2 <AmiBlitz3.ab3@11025>     MOVE.l A4,data1
00027BA4 <AmiBlitz3.ab3@11026>  RTS
00027BAC <AmiBlitz3.ab3@11029>   MOVE.w #$FFFF,dontwrite_nomemleft     ; was -1                             ;move #-1, org source
00027BB2 <AmiBlitz3.ab3@11030>   ADDQ.l #1,data1
00027BB4 <AmiBlitz3.ab3@11031> RTS
00027BB6 <AmiBlitz3.ab3@11035>   SWAP D1
00027BBA <AmiBlitz3.ab3@11036>   BSR.w pokedata1
00027BBC <AmiBlitz3.ab3@11037>   SWAP D1
00027BC2 <AmiBlitz3.ab3@11040>   MOVEA.l data1,A4
00027BC8 <AmiBlitz3.ab3@11041>   CMPA.l data2at,A4
00027BCC <AmiBlitz3.ab3@11042>    BCC.w 'over
00027BCE <AmiBlitz3.ab3@11043>   MOVE.w D1,(A4)+
00027BD4 <AmiBlitz3.ab3@11044>   MOVE.l A4,data1
00027BD6 <AmiBlitz3.ab3@11045>  RTS
00027BDE <AmiBlitz3.ab3@11048>   MOVE.w #$FFFF,dontwrite_nomemleft    ; was -1
00027BE4 <AmiBlitz3.ab3@11049>   ADDQ.l #2,data1
00027BE6 <AmiBlitz3.ab3@11050> RTS
00027BEC <AmiBlitz3.ab3@11054>   MOVE.l data1,D3                                      ;write local string/type allocs
00027BEE <AmiBlitz3.ab3@11055>   MOVEQ.l #$00,D4
00027BF2 <AmiBlitz3.ab3@11058>   CMPA.w #$0,A2
00027BF6 <AmiBlitz3.ab3@11059>    BEQ.w 'done
00027BFA <AmiBlitz3.ab3@11060>   TST.w $6(A2)
00027BFE <AmiBlitz3.ab3@11061>    BNE.w 'next
00027C02 <AmiBlitz3.ab3@11062>   MOVEA.l $A(A2),A3
00027C0A <AmiBlitz3.ab3@11063>   CMPI.l #$100,$4(A3)
00027C0E <AmiBlitz3.ab3@11064>    BCS.w 'next
00027C12 <AmiBlitz3.ab3@11065>   MOVE.w $4(A2),D1
00027C16 <AmiBlitz3.ab3@11066>    BSR.w pokedata1
00027C1A <AmiBlitz3.ab3@11067>   MOVE.w $8(A3),D1
00027C1E <AmiBlitz3.ab3@11068>    BSR.w pokedata1
00027C20 <AmiBlitz3.ab3@11069>   ADDQ.w #1,D4
00027C22 <AmiBlitz3.ab3@11072>    MOVEA.l (A2),A2
00027C26 <AmiBlitz3.ab3@11073>  BRA.w 'loop
00027C28 <AmiBlitz3.ab3@11076>    TST.w D4
00027C2C <AmiBlitz3.ab3@11077>    BEQ.w calcstatic2_skip
00027C30 <AmiBlitz3.ab3@11078>   MOVE.w #$FF37,D1              ;#65335
00027C34 <AmiBlitz3.ab3@11079>    BSR.w uselib                 ;use statics lib
00027C38 <AmiBlitz3.ab3@11080>   MOVE.w #$FFFA,D1              ;use memlib
00027C3C <AmiBlitz3.ab3@11081> BRA.w uselib
00027C42 <AmiBlitz3.ab3@11090>   MOVEA.l varbase,A2                                       ;add alloc mem for types/strings global
00027C48 <AmiBlitz3.ab3@11093>   MOVE.l data1,D3
00027C4A <AmiBlitz3.ab3@11094>   MOVEQ.l #$00,D4
00027C50 <AmiBlitz3.ab3@11096>   TST.b iserror
00027C54 <AmiBlitz3.ab3@11097>   BEQ 'loop
00027C56 <AmiBlitz3.ab3@11098>   RTS
00027C5A <AmiBlitz3.ab3@11102>    CMPA.w #$0,A2
00027C5E <AmiBlitz3.ab3@11103>    BEQ.w 'done
00027C62 <AmiBlitz3.ab3@11104>   TST.w $6(A2)
00027C66 <AmiBlitz3.ab3@11105>    BNE.w 'next
00027C6A <AmiBlitz3.ab3@11106>   MOVEA.l $A(A2),A3
00027C72 <AmiBlitz3.ab3@11107>   CMPI.l #$100,$4(A3)
00027C76 <AmiBlitz3.ab3@11108>    BCS.w 'next
00027C7A <AmiBlitz3.ab3@11109>   MOVE.w $4(A2),D1
00027C7E <AmiBlitz3.ab3@11110>    BSR.w pokedata1
00027C82 <AmiBlitz3.ab3@11111>   MOVE.w $8(A3),D1
00027C86 <AmiBlitz3.ab3@11112>    BSR.w pokedata1
00027C88 <AmiBlitz3.ab3@11113>   ADDQ.w #1,D4
00027C8A <AmiBlitz3.ab3@11116>   MOVEA.l (A2),A2
00027C8E <AmiBlitz3.ab3@11117>  BRA.w 'loop
00027C94 <AmiBlitz3.ab3@11122>   MOVEA.l sharebase,A2  ; org  varbase
00027C98 <AmiBlitz3.ab3@11125>   CMPA.w #$0,A2
00027C9C <AmiBlitz3.ab3@11126>    BEQ.w 'doneb
00027CA0 <AmiBlitz3.ab3@11128>   TST.w $6(A2)
00027CA4 <AmiBlitz3.ab3@11129>    BNE.w 'nextb
00027CA8 <AmiBlitz3.ab3@11130>   MOVEA.l $A(A2),A3
00027CB0 <AmiBlitz3.ab3@11131>   CMPI.l #$100,$4(A3)
00027CB4 <AmiBlitz3.ab3@11132>    BCS.w 'nextb
00027CB8 <AmiBlitz3.ab3@11133>   MOVE.w $4(A2),D1
00027CBC <AmiBlitz3.ab3@11134>    BSR.w pokedata1
00027CC0 <AmiBlitz3.ab3@11135>   MOVE.w $8(A3),D1
00027CC4 <AmiBlitz3.ab3@11136>    BSR.w pokedata1
00027CC6 <AmiBlitz3.ab3@11137>   ADDQ.w #1,D4
00027CC8 <AmiBlitz3.ab3@11140>   MOVEA.l (A2),A2
00027CCC <AmiBlitz3.ab3@11141>  BRA.w 'loopb
00027CCE <AmiBlitz3.ab3@11145>    TST.w D4
00027CD2 <AmiBlitz3.ab3@11146>    BEQ.w calcstatic2_skip
00027CD6 <AmiBlitz3.ab3@11147>   MOVE.w #$FF37,D1      ;#65335
00027CDA <AmiBlitz3.ab3@11148>    BSR.w uselib         ;use statics lib                                   ;use statics lib
00027CDE <AmiBlitz3.ab3@11149>   MOVE.w #$FFFA,D1      ;use memlib                                   ;use memlib
00027CE2 <AmiBlitz3.ab3@11150> BRA.w uselib
00027CE4 <AmiBlitz3.ab3@11153> RTS
00027CEA <AmiBlitz3.ab3@11157>   MOVE.w numtoa2,D1
00027CEE <AmiBlitz3.ab3@11158>    BSR.w writeword
00027CF2 <AmiBlitz3.ab3@11159>    BSR.w addoff
00027CF4 <AmiBlitz3.ab3@11160>   MOVE.l D3,D1
00027CF8 <AmiBlitz3.ab3@11161>    BSR.w writelong
00027CFA <AmiBlitz3.ab3@11162>   SUBQ.w #1,D4
00027D00 <AmiBlitz3.ab3@11163>   MOVE.w D4,endarray+2
00027D06 <AmiBlitz3.ab3@11164>   MOVE.l endarray,D1
00027D0A <AmiBlitz3.ab3@11165> BRA.w writelong
00027D0C <AmiBlitz3.ab3@11169>   MOVE.l D3,-(A7)
00027D12 <AmiBlitz3.ab3@11172>   MOVEA.l _dosbase,A6
00027D16 <AmiBlitz3.ab3@11174>   JSR _Write(a6)
00027D18 <AmiBlitz3.ab3@11175>   CMP.l (A7)+,D0
00027D1C <AmiBlitz3.ab3@11176>    BNE.w 'skip
00027D1E <AmiBlitz3.ab3@11177>  RTS
00027D20 <AmiBlitz3.ab3@11180>   MOVE.l D7,D1
00027D26 <AmiBlitz3.ab3@11183>   MOVEA.l _dosbase,A6
00027D2A <AmiBlitz3.ab3@11185>   JSR _Close(a6)
00027D30 <AmiBlitz3.ab3@11188> JMP error_create_exe
00027D36 <AmiBlitz3.ab3@11197> 
00027D3C <AmiBlitz3.ab3@11199>   MOVE.l A7,errstack
00027D40 <AmiBlitz3.ab3@11201>   MOVEM.l d2-d7/a2-a6,-(a7)
00027D4A <AmiBlitz3.ab3@11203>   MOVE.l #'rts,errcont
00027D50 <AmiBlitz3.ab3@11205>    JSR call_setpointerbusy
00027D58 <AmiBlitz3.ab3@11207>   MOVE.w #$FFFF,anyerrs   ; was -1
00027D62 <AmiBlitz3.ab3@11209>   CMP.l #-1,chipstart
00027D66 <AmiBlitz3.ab3@11210>   BEQ 'l01
00027D6C <AmiBlitz3.ab3@11211>   MOVE.l chipend,d1
00027D6E <AmiBlitz3.ab3@11212>   ADDQ.l #3,d1
00027D74 <AmiBlitz3.ab3@11213>   AND.l #$fffffffc,d1                                      ;bug
00027D7A <AmiBlitz3.ab3@11214>   MOVE.l d1,chipend
00027D7C <AmiBlitz3.ab3@11215>   MOVE.l d1,a1
00027D82 <AmiBlitz3.ab3@11216>   MOVE.l chipstart,a0
00027D84 <AmiBlitz3.ab3@11217>   MOVE.l a1,d1
00027D86 <AmiBlitz3.ab3@11218>   SUB.l a0,d1
00027D8C <AmiBlitz3.ab3@11219>   MOVE.l d1,chipsize
00027D96 <AmiBlitz3.ab3@11222>   CMP.l #-1,bssstart
00027D9A <AmiBlitz3.ab3@11223>   BEQ 'l11
00027DA0 <AmiBlitz3.ab3@11224>   MOVE.l realbssend,a1
00027DA6 <AmiBlitz3.ab3@11225>   MOVE.l bssstart,a0
00027DA8 <AmiBlitz3.ab3@11226>   MOVE.l a1,d1
00027DAA <AmiBlitz3.ab3@11227>   SUB.l a0,d1
00027DB0 <AmiBlitz3.ab3@11228>   MOVE.l d1,bsssize
00027DB4 <AmiBlitz3.ab3@11229>   BEQ 'l11
00027DB6 <AmiBlitz3.ab3@11232>   TST.b (a0)+
00027DBA <AmiBlitz3.ab3@11233>   BEQ 'l31
00027DC0 <AmiBlitz3.ab3@11234>   TST.b debugmode
00027DC4 <AmiBlitz3.ab3@11235>   BEQ 'l1
00027DCA <AmiBlitz3.ab3@11236>   TST.b exdebug
00027DCE <AmiBlitz3.ab3@11237>   BNE 'l31
00027DD4 <AmiBlitz3.ab3@11240>   MOVE.l #nodata,-(a7)
00027DDA <AmiBlitz3.ab3@11241>  JMP handle_compileerror
00027DDC <AmiBlitz3.ab3@11244>   CMP.l a0,a1
00027DE0 <AmiBlitz3.ab3@11245>   BGT 'l32
00027DE6 <AmiBlitz3.ab3@11246>   MOVE.l bssend,d1
00027DE8 <AmiBlitz3.ab3@11247>   ADDQ.l #3,d1
00027DEE <AmiBlitz3.ab3@11248>   AND.l #$fffffffc,d1                                      ;bug
00027DF4 <AmiBlitz3.ab3@11249>   MOVE.l d1,bssend
00027DF6 <AmiBlitz3.ab3@11250>   MOVE.l d1,a1
00027DFC <AmiBlitz3.ab3@11251>   MOVE.l bssstart,a0
00027DFE <AmiBlitz3.ab3@11252>   MOVE.l a1,d1
00027E00 <AmiBlitz3.ab3@11253>   SUB.l a0,d1
00027E06 <AmiBlitz3.ab3@11254>   MOVE.l d1,bsssize
00027E0A <AmiBlitz3.ab3@11257>   MOVEM.l d5-d7/d3,-(a7)
00027E10 <AmiBlitz3.ab3@11259>   MOVE.w dontwrite_nomemleft,D1
00027E14 <AmiBlitz3.ab3@11260>   BNE.w 'fixdone
00027E1A <AmiBlitz3.ab3@11262>   MOVE.l chipsize,d5
00027E20 <AmiBlitz3.ab3@11263>   MOVE.l bsssize,d3
00027E26 <AmiBlitz3.ab3@11264>   MOVE.l chipstart,d7
00027E2C <AmiBlitz3.ab3@11265>   MOVE.l bssstart,d6
00027E32 <AmiBlitz3.ab3@11267>   MOVEA.l hunkoffsetbase,A2
00027E38 <AmiBlitz3.ab3@11268>   MOVEA.l destbufferstart,A1
00027E3A <AmiBlitz3.ab3@11269>   MOVE.l A1,D2
00027E40 <AmiBlitz3.ab3@11270>   ADD.l noinits,D2
00027E46 <AmiBlitz3.ab3@11272>   CLR.l hunkoffsetnum
00027E4A <AmiBlitz3.ab3@11276>   CMPA.w #$0,A2
00027E4E <AmiBlitz3.ab3@11277>    BEQ.w 'fixdone
00027E52 <AmiBlitz3.ab3@11278>   MOVE.l $4(A2),D0
00027E56 <AmiBlitz3.ab3@11280>    LEA $0(a1,d0.l),a0
00027E58 <AmiBlitz3.ab3@11281>    MOVE.l (a0),d1
00027E5A <AmiBlitz3.ab3@11282>   TST.l d1
00027E5E <AmiBlitz3.ab3@11283>    BMI.w 'lm1a
00027E66 <AmiBlitz3.ab3@11284>   MOVE.b #0,newhunk
00027E70 <AmiBlitz3.ab3@11285>   CMP.l #-1,chipstart
00027E74 <AmiBlitz3.ab3@11286>   BEQ 'l10a
00027E7A <AmiBlitz3.ab3@11287>   CMP.l chipstart,d1
00027E7E <AmiBlitz3.ab3@11288>   BLT 'l10a
00027E86 <AmiBlitz3.ab3@11289>   MOVE.b #1,newhunk
00027E8C <AmiBlitz3.ab3@11290>   CMP.l chipend,d1
00027E90 <AmiBlitz3.ab3@11291>   BGE 'l110a
00027E92 <AmiBlitz3.ab3@11292>   SUB.l d7,(a0)
00027E9A <AmiBlitz3.ab3@11293>   ADD.l #$80000000,4(a2)
00027E9E <AmiBlitz3.ab3@11294>  BRA 'noway
00027EA2 <AmiBlitz3.ab3@11297>   SUB.l d5,0(a0)
00027EAC <AmiBlitz3.ab3@11300>   CMP.l #-1,bssstart
00027EB0 <AmiBlitz3.ab3@11301>     BEQ 'l11a
00027EB6 <AmiBlitz3.ab3@11302>   CMP.l bssstart,d1
00027EBA <AmiBlitz3.ab3@11303>   BLT 'l11a
00027EC0 <AmiBlitz3.ab3@11304>   CMP.l bssend,d1
00027EC4 <AmiBlitz3.ab3@11305>   BGE 'l111a
00027ECA <AmiBlitz3.ab3@11306>   TST.b newhunk
00027ECE <AmiBlitz3.ab3@11307>   BEQ 'ln1a
00027ED0 <AmiBlitz3.ab3@11308>   ADD.l d5,(a0)
00027ED2 <AmiBlitz3.ab3@11311>   SUB.l d6,(a0)
00027EDA <AmiBlitz3.ab3@11312>   ADD.l #$40000000,4(a2)
00027EDE <AmiBlitz3.ab3@11313>  BRA 'noway
00027EE2 <AmiBlitz3.ab3@11316>   SUB.l d3,0(a0)
00027EE4 <AmiBlitz3.ab3@11319>   SUB.l D2,(A0)
00027EEA <AmiBlitz3.ab3@11322>   ADDQ.l #1,hunkoffsetnum
00027EEC <AmiBlitz3.ab3@11326>    MOVEA.l (A2),A2
00027EF0 <AmiBlitz3.ab3@11327>  BRA.w 'loop0
00027EF4 <AmiBlitz3.ab3@11331>   MOVEM.l (a7)+,d5-d7/d3
00027EFA <AmiBlitz3.ab3@11333>   MOVE.l ptr_newexefilename,D1
00027F00 <AmiBlitz3.ab3@11334>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00027F06 <AmiBlitz3.ab3@11335>   MOVEA.l _dosbase,A6
00027F0A <AmiBlitz3.ab3@11336>    JSR _Open(A6)
00027F0C <AmiBlitz3.ab3@11337>   MOVE.l D0,D7
00027F10 <AmiBlitz3.ab3@11338>    BEQ.w execerr
00027F16 <AmiBlitz3.ab3@11340>   MOVE.l objlen,D0
00027F1C <AmiBlitz3.ab3@11342>   SUB.l #moremem,d0
00027F22 <AmiBlitz3.ab3@11344>   SUB.l noinits,D0
00027F2C <AmiBlitz3.ab3@11346>   CMP.l #-1,bssstart
00027F30 <AmiBlitz3.ab3@11347>   BEQ 'l60
00027F36 <AmiBlitz3.ab3@11348>   SUB.l bsssize,d0
00027F3C <AmiBlitz3.ab3@11349>   SUB.l chipsize,d0
00027F40 <AmiBlitz3.ab3@11350>  BRA.s 'l61
00027F4A <AmiBlitz3.ab3@11353>   CMP.l #-1,chipstart
00027F4E <AmiBlitz3.ab3@11354>   BEQ 'l61
00027F54 <AmiBlitz3.ab3@11355>   SUB.l bsssize,d0
00027F5A <AmiBlitz3.ab3@11356>   SUB.l chipsize,d0
00027F5C <AmiBlitz3.ab3@11360>   ADDQ.l #3,D0
00027F5E <AmiBlitz3.ab3@11361>   LSR.l #2,D0
00027F64 <AmiBlitz3.ab3@11362>   MOVE.l D0,tstsize1
00027F6A <AmiBlitz3.ab3@11363>   MOVE.l D0,tstsize2
00027F6C <AmiBlitz3.ab3@11364>   MOVE.l D7,D1
00027F72 <AmiBlitz3.ab3@11365>   MOVE.l #tsthead,D2                                      ;hunkbegin
00027F74 <AmiBlitz3.ab3@11366>   MOVEQ.l #$20,D3
00027F7E <AmiBlitz3.ab3@11368>   CMP.l #-1,bssstart
00027F82 <AmiBlitz3.ab3@11369>   BEQ 'lb1
00027F8C <AmiBlitz3.ab3@11370>   CMP.l #-1,chipstart
00027F90 <AmiBlitz3.ab3@11371>   BEQ 'lb1
00027F9A <AmiBlitz3.ab3@11372>   MOVE.l #1,bssnum
00027FA4 <AmiBlitz3.ab3@11373>   MOVE.l #2,chipnum
00027FA6 <AmiBlitz3.ab3@11374>   MOVEQ.l #$28,D3
00027FAC <AmiBlitz3.ab3@11375>   MOVE.l bsssize,d2
00027FAE <AmiBlitz3.ab3@11376>   ADDQ.l #3,d2
00027FB0 <AmiBlitz3.ab3@11377>   ASR.l #2,d2
00027FB6 <AmiBlitz3.ab3@11378>   MOVE.l d2,hunkend+8
00027FBC <AmiBlitz3.ab3@11379>   MOVE.l d2,bsssize3
00027FC2 <AmiBlitz3.ab3@11380>   MOVE.l chipsize,d2
00027FC4 <AmiBlitz3.ab3@11381>   ADDQ.l #3,d2
00027FC6 <AmiBlitz3.ab3@11382>   ASR.l #2,d2
00027FCC <AmiBlitz3.ab3@11383>   MOVE.l d2,chipsize2
00027FD6 <AmiBlitz3.ab3@11384>   ADD.l #$40000000,chipsize2
00027FDC <AmiBlitz3.ab3@11385>   MOVE.l d2,hunkend2+8
00027FE2 <AmiBlitz3.ab3@11386>   MOVE.l D0,tstsize1c
00027FE8 <AmiBlitz3.ab3@11387>   MOVE.l D0,tstsize2c
00027FEE <AmiBlitz3.ab3@11388>   MOVE.l #hunkbegin2,d2
00027FF2 <AmiBlitz3.ab3@11389>  BRA 'l100b
00027FFC <AmiBlitz3.ab3@11392>   CMP.l #-1,bssstart
00028000 <AmiBlitz3.ab3@11393>   BEQ 'l10b
0002800A <AmiBlitz3.ab3@11394>   MOVE.l #1,bssnum
0002800C <AmiBlitz3.ab3@11395>   MOVEQ.l #$24,D3
00028012 <AmiBlitz3.ab3@11396>   MOVE.l bsssize,d2
00028014 <AmiBlitz3.ab3@11397>   ADDQ.l #3,d2
00028016 <AmiBlitz3.ab3@11398>   ASR.l #2,d2
0002801C <AmiBlitz3.ab3@11399>   MOVE.l d2,hunkend+8
00028022 <AmiBlitz3.ab3@11400>   MOVE.l d2,bsssize2
00028028 <AmiBlitz3.ab3@11401>   MOVE.l D0,tstsize1b
0002802E <AmiBlitz3.ab3@11402>   MOVE.l D0,tstsize2b
00028034 <AmiBlitz3.ab3@11403>   MOVE.l #hunkbegin,d2
0002803E <AmiBlitz3.ab3@11406>   CMP.l #-1,chipstart
00028042 <AmiBlitz3.ab3@11407>   BEQ 'l100b
0002804C <AmiBlitz3.ab3@11408>   MOVE.l #1,chipnum
0002804E <AmiBlitz3.ab3@11409>   MOVEQ.l #$24,D3
00028054 <AmiBlitz3.ab3@11410>   MOVE.l chipsize,d2
00028056 <AmiBlitz3.ab3@11411>   ADDQ.l #3,d2
00028058 <AmiBlitz3.ab3@11412>   ASR.l #2,d2
0002805E <AmiBlitz3.ab3@11413>   MOVE.l d2,hunkend2+8
00028064 <AmiBlitz3.ab3@11414>   MOVE.l d2,bsssize2
0002806E <AmiBlitz3.ab3@11415>   ADD.l #$40000000,bsssize2
00028074 <AmiBlitz3.ab3@11416>   MOVE.l D0,tstsize1b
0002807A <AmiBlitz3.ab3@11417>   MOVE.l D0,tstsize2b
00028080 <AmiBlitz3.ab3@11418>   MOVE.l #hunkbegin,d2
00028084 <AmiBlitz3.ab3@11422>    BSR.w mywrite
0002808A <AmiBlitz3.ab3@11424>   MOVE.l destbufferstart,D2
00028090 <AmiBlitz3.ab3@11425>   ADD.l noinits,D2
00028096 <AmiBlitz3.ab3@11426>   MOVE.l objlen,D3
0002809C <AmiBlitz3.ab3@11427>   SUB.l #moremem,d3
000280A2 <AmiBlitz3.ab3@11428>   SUB.l noinits,D3
000280AC <AmiBlitz3.ab3@11430>   CMP.l #-1,bssstart
000280B0 <AmiBlitz3.ab3@11431>   BNE 'l40
000280BA <AmiBlitz3.ab3@11432>   CMP.l #-1,chipstart
000280BE <AmiBlitz3.ab3@11433>   BNE 'l40
000280C2 <AmiBlitz3.ab3@11434>  BRA 'l41
000280C8 <AmiBlitz3.ab3@11437>   MOVE.l codeend,d1
000280CA <AmiBlitz3.ab3@11438>     SUB.l d2,d1
000280CC <AmiBlitz3.ab3@11439>     MOVE.l d1,d3
000280D2 <AmiBlitz3.ab3@11440>   SUB.l bsssize,d3
000280D8 <AmiBlitz3.ab3@11441>   SUB.l chipsize,d3
000280DA <AmiBlitz3.ab3@11442>   MOVE.l D7,D1
000280DE <AmiBlitz3.ab3@11443>   BSR.w mywrite
000280E4 <AmiBlitz3.ab3@11444>   MOVE.l objlen,D3
000280EA <AmiBlitz3.ab3@11445>   SUB.l #moremem,d3
000280F0 <AmiBlitz3.ab3@11446>   SUB.l noinits,D3
000280F2 <AmiBlitz3.ab3@11447>   MOVE.l d3,d1
000280F8 <AmiBlitz3.ab3@11448>   MOVE.l destbufferstart,D2
000280FE <AmiBlitz3.ab3@11449>   ADD.l noinits,D2
00028100 <AmiBlitz3.ab3@11450>   ADD.l d2,d1
00028106 <AmiBlitz3.ab3@11451>   SUB.l codeend,d1
00028108 <AmiBlitz3.ab3@11452>   MOVE.l d1,d3
0002810E <AmiBlitz3.ab3@11453>   MOVE.l codeend,d2
00028110 <AmiBlitz3.ab3@11456>   MOVE.l d2,d1
00028112 <AmiBlitz3.ab3@11457>   ADD.l d3,d1
00028114 <AmiBlitz3.ab3@11459>   ADDQ.l #3,D1
0002811A <AmiBlitz3.ab3@11460>   ANDI.l #$FFFFFFFC,D1
0002811C <AmiBlitz3.ab3@11462>   SUB.l d2,d1
0002811E <AmiBlitz3.ab3@11463>   MOVE.l d1,d3
00028120 <AmiBlitz3.ab3@11464>   MOVE.l D7,D1
00028124 <AmiBlitz3.ab3@11466>    BSR.w mywrite
0002812E <AmiBlitz3.ab3@11468>   MOVE.l hunkoffsetcounter,tstsize3
00028132 <AmiBlitz3.ab3@11469>    BEQ.w 'skip
00028134 <AmiBlitz3.ab3@11470>   MOVE.l D7,D1
0002813A <AmiBlitz3.ab3@11471>   MOVE.l #tstend,D2
0002813C <AmiBlitz3.ab3@11472>   MOVEQ.l #$04,D3           ; was #12
00028140 <AmiBlitz3.ab3@11473>    BSR.w mywrite
00028146 <AmiBlitz3.ab3@11475>    MOVEA.l _execbase,A6
0002814C <AmiBlitz3.ab3@11476>    MOVE.l hunkoffsetcounter,d0
0002814E <AmiBlitz3.ab3@11477>    ASL.l #2,d0
00028154 <AmiBlitz3.ab3@11478>    ADD.l #12,d0
00028156 <AmiBlitz3.ab3@11479>    MOVEQ #0,d1
0002815A <AmiBlitz3.ab3@11480>    JSR _AllocMem(a6)
0002815C <AmiBlitz3.ab3@11481>    TST.l d0
00028160 <AmiBlitz3.ab3@11482>    BEQ 'nomem
00028166 <AmiBlitz3.ab3@11483>    MOVE.l noinits,D4
00028168 <AmiBlitz3.ab3@11484>    MOVE.l d5,-(a7)
0002816A <AmiBlitz3.ab3@11485>    MOVE.l d0,d5
0002816C <AmiBlitz3.ab3@11486>    MOVE.l d0,a1
00028172 <AmiBlitz3.ab3@11487>    MOVEA.l hunkoffsetbase,A2
0002817A <AmiBlitz3.ab3@11488>    MOVE.b #0,newhunk
0002817E <AmiBlitz3.ab3@11491>   CMPA.w #$0,A2
00028182 <AmiBlitz3.ab3@11492>    BEQ.w 'savehunk
00028188 <AmiBlitz3.ab3@11493>   MOVE.l destbufferstart,D2
0002818E <AmiBlitz3.ab3@11494>   ADD.l noinits,D2
00028192 <AmiBlitz3.ab3@11495>   MOVE.l  $4(A2),d1
00028196 <AmiBlitz3.ab3@11496>   BTST #31,d1
0002819A <AmiBlitz3.ab3@11497>   BEQ 'lh1
000281A2 <AmiBlitz3.ab3@11498>   MOVE.b #1,newhunk
000281A6 <AmiBlitz3.ab3@11499>  BRA 'lh3
000281AA <AmiBlitz3.ab3@11502>   BTST #30,d1
000281AE <AmiBlitz3.ab3@11503>   BEQ 'lh2
000281B6 <AmiBlitz3.ab3@11504>   MOVE.b #1,newhunk
000281BA <AmiBlitz3.ab3@11505>  BRA 'lh3
000281BC <AmiBlitz3.ab3@11508>   ADD.l d1,d2
000281C2 <AmiBlitz3.ab3@11509>   CMP.l chipend,d2
000281C6 <AmiBlitz3.ab3@11510>   BLT 'l102c
000281CC <AmiBlitz3.ab3@11511>   SUB.l chipsize,d1
000281D2 <AmiBlitz3.ab3@11514>   CMP.l bssend,d2
000281D6 <AmiBlitz3.ab3@11515>   BLT 'l101c
000281DC <AmiBlitz3.ab3@11516>   SUB.l bsssize,d1
000281DE <AmiBlitz3.ab3@11519>   MOVE.l d1,(a1)
000281E0 <AmiBlitz3.ab3@11520>   SUB.l D4,(A1)+
000281E2 <AmiBlitz3.ab3@11523>   MOVEA.l (A2),A2
000281E6 <AmiBlitz3.ab3@11524>  BRA.w 'oloopb
000281E8 <AmiBlitz3.ab3@11527>   MOVE.l D7,D1
000281EE <AmiBlitz3.ab3@11528>   MOVEA.l _dosbase,A6
000281F8 <AmiBlitz3.ab3@11529>   MOVE.l hunkoffsetnum,tstsize3
000281FC <AmiBlitz3.ab3@11530>   BEQ 'ln1c
00028202 <AmiBlitz3.ab3@11531>   MOVE.l #tstend+4,d2
00028204 <AmiBlitz3.ab3@11532>     MOVEQ #8,d3
00028208 <AmiBlitz3.ab3@11533>    JSR _Write(A6)
0002820A <AmiBlitz3.ab3@11534>   MOVE.l d7,d1
00028210 <AmiBlitz3.ab3@11535>   MOVE.l hunkoffsetnum,d3
00028212 <AmiBlitz3.ab3@11536>   ASL.l #2,d3
00028214 <AmiBlitz3.ab3@11537>   MOVE.l d5,D2
00028218 <AmiBlitz3.ab3@11538>   JSR _Write(a6)
0002821E <AmiBlitz3.ab3@11541>   TST.b newhunk
00028222 <AmiBlitz3.ab3@11542>   BEQ 'l10c
00028228 <AmiBlitz3.ab3@11543>   MOVEA.l hunkoffsetbase,A2
0002822A <AmiBlitz3.ab3@11544>   MOVE.l d5,a0
0002822C <AmiBlitz3.ab3@11545>   ADDQ #8,a0
00028234 <AmiBlitz3.ab3@11546>   MOVE.l bssnum,-4(a0)
00028236 <AmiBlitz3.ab3@11547>   MOVEQ #0,d6
0002823A <AmiBlitz3.ab3@11550>   CMPA.w #$0,A2
0002823E <AmiBlitz3.ab3@11551>    BEQ.w 'lh3c
00028244 <AmiBlitz3.ab3@11552>   MOVE.l destbufferstart,D2
0002824A <AmiBlitz3.ab3@11553>   ADD.l noinits,D2
0002824E <AmiBlitz3.ab3@11554>   MOVE.l  $4(A2),d1
00028252 <AmiBlitz3.ab3@11555>   BTST #30,d1
00028256 <AmiBlitz3.ab3@11556>   BEQ 'lh1c
0002825A <AmiBlitz3.ab3@11557>   BCLR #30,d1
0002825C <AmiBlitz3.ab3@11558>   MOVE.l d1,(a0)
0002825E <AmiBlitz3.ab3@11559>   SUB.l D4,(A0)+
00028260 <AmiBlitz3.ab3@11560>   ADDQ.l #1,d6
00028262 <AmiBlitz3.ab3@11563>   MOVE.l (a2),a2
00028266 <AmiBlitz3.ab3@11564>  BRA 'lh2c
00028268 <AmiBlitz3.ab3@11567>   TST.l d6
0002826C <AmiBlitz3.ab3@11568>     BEQ 'lh10c
0002826E <AmiBlitz3.ab3@11569>     MOVE.l d5,a0
00028270 <AmiBlitz3.ab3@11570>     MOVE.l d6,(a0)
00028272 <AmiBlitz3.ab3@11571>     MOVE.l d7,d1
00028274 <AmiBlitz3.ab3@11572>     MOVE.l d5,d2
00028276 <AmiBlitz3.ab3@11573>     MOVE.l d6,d3
00028278 <AmiBlitz3.ab3@11574>     ASL.l #2,d3
0002827A <AmiBlitz3.ab3@11575>     ADDQ.l #8,d3
0002827E <AmiBlitz3.ab3@11576>     BSR.w mywrite
00028284 <AmiBlitz3.ab3@11579>   MOVEA.l hunkoffsetbase,A2
00028286 <AmiBlitz3.ab3@11580>   MOVE.l d5,a0
00028288 <AmiBlitz3.ab3@11581>   ADDQ #8,a0
00028290 <AmiBlitz3.ab3@11582>   MOVE.l chipnum,-4(a0)
00028292 <AmiBlitz3.ab3@11583>   MOVEQ #0,d6
00028296 <AmiBlitz3.ab3@11586>   CMPA.w #$0,A2
0002829A <AmiBlitz3.ab3@11587>    BEQ.w 'lh30c
000282A0 <AmiBlitz3.ab3@11588>   MOVE.l destbufferstart,D2
000282A6 <AmiBlitz3.ab3@11589>   ADD.l noinits,D2
000282AA <AmiBlitz3.ab3@11590>   MOVE.l  $4(A2),d1
000282AE <AmiBlitz3.ab3@11591>   BTST #31,d1
000282B2 <AmiBlitz3.ab3@11592>   BEQ 'lh11c
000282B6 <AmiBlitz3.ab3@11593>   BCLR #31,d1
000282B8 <AmiBlitz3.ab3@11594>   MOVE.l d1,(a0)
000282BA <AmiBlitz3.ab3@11595>   SUB.l D4,(A0)+
000282BC <AmiBlitz3.ab3@11596>   ADDQ.l #1,d6
000282BE <AmiBlitz3.ab3@11599>   MOVE.l (a2),a2
000282C2 <AmiBlitz3.ab3@11600>  BRA 'lh20c
000282C4 <AmiBlitz3.ab3@11603>   TST.l d6
000282C8 <AmiBlitz3.ab3@11604>     BEQ 'l10c
000282CA <AmiBlitz3.ab3@11605>     MOVE.l d5,a0
000282CC <AmiBlitz3.ab3@11606>     MOVE.l d6,(a0)
000282CE <AmiBlitz3.ab3@11607>     MOVE.l d7,d1
000282D0 <AmiBlitz3.ab3@11608>     MOVE.l d5,d2
000282D2 <AmiBlitz3.ab3@11609>     MOVE.l d6,d3
000282D4 <AmiBlitz3.ab3@11610>     ASL.l #2,d3
000282D6 <AmiBlitz3.ab3@11611>     ADDQ.l #8,d3
000282DA <AmiBlitz3.ab3@11612>     BSR.w mywrite
000282E0 <AmiBlitz3.ab3@11616>    MOVEA.l _execbase,A6
000282E6 <AmiBlitz3.ab3@11617>    MOVE.l hunkoffsetcounter,d0
000282E8 <AmiBlitz3.ab3@11618>    ASL.l #2,d0
000282EE <AmiBlitz3.ab3@11619>    ADD.l #12,d0
000282F0 <AmiBlitz3.ab3@11620>    MOVE.l d5,a1
000282F4 <AmiBlitz3.ab3@11621>    JSR _FreeMem(a6)
000282FA <AmiBlitz3.ab3@11622>    MOVEA.l _dosbase,A6
000282FC <AmiBlitz3.ab3@11623>    MOVE.l (a7)+,d5
00028300 <AmiBlitz3.ab3@11624>  BRA 'skip2
00028306 <AmiBlitz3.ab3@11628>   MOVEA.l hunkoffsetbase,A2
0002830C <AmiBlitz3.ab3@11629>   MOVE.l noinits,D4
00028310 <AmiBlitz3.ab3@11632>   CMPA.w #$0,A2                                            ;write hunkoffsets
00028314 <AmiBlitz3.ab3@11633>   BEQ.w 'skip2
00028318 <AmiBlitz3.ab3@11634>   LEA $4(A2),A1
0002831A <AmiBlitz3.ab3@11635>   SUB.l D4,(A1)
0002831C <AmiBlitz3.ab3@11636>   MOVE.l D7,D1
0002831E <AmiBlitz3.ab3@11637>   MOVE.l A1,D2
00028320 <AmiBlitz3.ab3@11638>   MOVEQ.l #$04,D3
00028324 <AmiBlitz3.ab3@11639>   BSR.w mywrite
00028328 <AmiBlitz3.ab3@11641>   ADD.l D4,$4(A2)
0002832A <AmiBlitz3.ab3@11642>   MOVEA.l (A2),A2
0002832E <AmiBlitz3.ab3@11643>  BRA.w 'loop
00028334 <AmiBlitz3.ab3@11646>   CLR.l tstsize3
00028336 <AmiBlitz3.ab3@11647>   MOVE.l D7,D1
0002833C <AmiBlitz3.ab3@11648>   MOVE.l #tstsize3,D2
0002833E <AmiBlitz3.ab3@11649>   MOVEQ.l #$04,D3
00028342 <AmiBlitz3.ab3@11650>    BSR.w mywrite
0002834A <AmiBlitz3.ab3@11653>   BTST #$7,link_debuginfo
0002834E <AmiBlitz3.ab3@11654>    BEQ.w 'nodebug
00028354 <AmiBlitz3.ab3@11656>   MOVE.l #sysdebug,D2                                      ;debughunks
00028356 <AmiBlitz3.ab3@11657>   MOVEQ.l #$04,D3
00028358 <AmiBlitz3.ab3@11658>   MOVE.l D7,D1
0002835C <AmiBlitz3.ab3@11659>    BSR.w mywrite
00028362 <AmiBlitz3.ab3@11661>   MOVEA.l labelbase,A2
00028366 <AmiBlitz3.ab3@11664>   CMPA.w #$0,A2
0002836A <AmiBlitz3.ab3@11665>    BEQ.w 'dedone
00028370 <AmiBlitz3.ab3@11666>   BTST #$0,$7(A2)
00028374 <AmiBlitz3.ab3@11667>    BEQ.w 'dedeb
0002837C <AmiBlitz3.ab3@11668>   CMPI.l #$1,$4(A2)
00028380 <AmiBlitz3.ab3@11671>   BRA.w 'denext                                            ;only addr labels
00028382 <AmiBlitz3.ab3@11675>   MOVEQ.l #$00,D4
00028386 <AmiBlitz3.ab3@11676>   MOVE.b $12(A2),D4
0002838A <AmiBlitz3.ab3@11677>   SUBI.w #$13,D4
0002838C <AmiBlitz3.ab3@11678>   ADDQ.w #2,D4
00028390 <AmiBlitz3.ab3@11679>   ANDI.w #$FFFC,D4     ;long align
00028392 <AmiBlitz3.ab3@11680>   MOVE.l D4,D5
00028394 <AmiBlitz3.ab3@11681>   LSR.w #2,D5
0002839A <AmiBlitz3.ab3@11682>   MOVE.l D5,temp1
0002839C <AmiBlitz3.ab3@11683>   LSL.w #2,D5          ;#bytes
000283A2 <AmiBlitz3.ab3@11685>   MOVE.l #temp1,a1
000283A8 <AmiBlitz3.ab3@11689>   LEA debugstore,a0
000283AA <AmiBlitz3.ab3@11690>   MOVE.l (a1),(a0)+
000283AC <AmiBlitz3.ab3@11692>   MOVEQ.l #$04,D3
000283B0 <AmiBlitz3.ab3@11696>   LEA $13(A2),A1
000283B2 <AmiBlitz3.ab3@11698>   MOVE.l d4,d1
000283B4 <AmiBlitz3.ab3@11699>   SUBQ.l #1,d1
000283B6 <AmiBlitz3.ab3@11702>     MOVE.b (a1)+,d0
000283BA <AmiBlitz3.ab3@11703>     BEQ 'l21d
000283BE <AmiBlitz3.ab3@11704>     CMP.b #"'",d0                                            ; ' does reassembler/assembler not like, so replace
000283C2 <AmiBlitz3.ab3@11705>     BNE 'ok
000283C6 <AmiBlitz3.ab3@11706>     MOVE.b #"_",d0
000283C8 <AmiBlitz3.ab3@11709>    MOVE.b d0,(a0)+                                      ; copy labeltext to debuginfo
000283CC <AmiBlitz3.ab3@11710>   DBF d1,'l10d
000283D0 <AmiBlitz3.ab3@11712>   BRA 'l22d
000283D2 <AmiBlitz3.ab3@11715>       CLR.b (a0)+
000283D6 <AmiBlitz3.ab3@11716>   DBF d1,'l21d
000283D8 <AmiBlitz3.ab3@11719>   ADD.l d4,d3
000283DA <AmiBlitz3.ab3@11726>   SUB.l D4,D5
000283DE <AmiBlitz3.ab3@11727>    BEQ.w 'deoff
000283E4 <AmiBlitz3.ab3@11729>   MOVE.l #zero,a1
000283E6 <AmiBlitz3.ab3@11733>   MOVE.l (a1),(a0)+
000283E8 <AmiBlitz3.ab3@11737>   ADD.l d5,d3
000283EC <AmiBlitz3.ab3@11743>   MOVE.l $8(A2),D2
000283F2 <AmiBlitz3.ab3@11744>   SUB.l destbufferstart,D2
000283F8 <AmiBlitz3.ab3@11745>   SUB.l noinits,D2
000283FE <AmiBlitz3.ab3@11746>   MOVE.l D2,temp1
00028404 <AmiBlitz3.ab3@11748>   MOVE.l #temp1,a1
00028406 <AmiBlitz3.ab3@11752>   MOVE.l (a1),(a0)+
0002840C <AmiBlitz3.ab3@11753>   ADD.l #4,d3
00028412 <AmiBlitz3.ab3@11754>   LEA debugstore,a0
00028414 <AmiBlitz3.ab3@11755>   MOVE.l a0,d2
00028416 <AmiBlitz3.ab3@11758>   MOVE.l D7,D1
0002841A <AmiBlitz3.ab3@11759>   BSR.w mywrite
0002841C <AmiBlitz3.ab3@11762>   MOVEA.l (A2),A2
00028420 <AmiBlitz3.ab3@11763>  BRA.w 'deloop
00028426 <AmiBlitz3.ab3@11766>   MOVE.l #zero,D2
00028428 <AmiBlitz3.ab3@11767>   MOVEQ.l #$04,D3
0002842A <AmiBlitz3.ab3@11768>   MOVE.l D7,D1
0002842E <AmiBlitz3.ab3@11769>   BSR.w mywrite
00028430 <AmiBlitz3.ab3@11772>   MOVE.l D7,D1
00028436 <AmiBlitz3.ab3@11773>   MOVE.l #tstdone,D2                                      ;hunkend
00028438 <AmiBlitz3.ab3@11774>   MOVEQ.l #$04,D3
00028442 <AmiBlitz3.ab3@11776>   CMPI.l #-1,bssstart
00028446 <AmiBlitz3.ab3@11777>   BEQ 'l10e
00028448 <AmiBlitz3.ab3@11778>   MOVEQ #16,d3
0002844E <AmiBlitz3.ab3@11779>   MOVE.l #hunkend,d2
00028458 <AmiBlitz3.ab3@11780>   CMPI.l #-1,chipstart
0002845C <AmiBlitz3.ab3@11781>   BEQ 'l10e
0002845E <AmiBlitz3.ab3@11782>   MOVE.l d7,d1
00028460 <AmiBlitz3.ab3@11783>   MOVEQ #12,d3
00028464 <AmiBlitz3.ab3@11784>   BSR.w mywrite
0002846E <AmiBlitz3.ab3@11787>   CMPI.l #-1,chipstart
00028472 <AmiBlitz3.ab3@11788>   BEQ 'l11e
00028474 <AmiBlitz3.ab3@11789>   MOVEQ #12,d3
0002847A <AmiBlitz3.ab3@11790>   MOVE.l #hunkend2,d2
0002847C <AmiBlitz3.ab3@11791>   MOVE.l d7,d1
00028480 <AmiBlitz3.ab3@11792>   BSR.w mywrite
00028482 <AmiBlitz3.ab3@11793>   MOVE.l d7,d1
00028488 <AmiBlitz3.ab3@11794>   MOVE.l chipstart,d2
0002848E <AmiBlitz3.ab3@11795>   MOVE.l chipsize,d3
00028492 <AmiBlitz3.ab3@11796>   BSR.w mywrite
00028494 <AmiBlitz3.ab3@11797>   MOVEQ #4,d3
0002849A <AmiBlitz3.ab3@11798>   MOVE.l #hunkend,d2
0002849C <AmiBlitz3.ab3@11799>   MOVE.l d7,d1
000284A0 <AmiBlitz3.ab3@11803>   BSR.w mywrite
000284A2 <AmiBlitz3.ab3@11804>   MOVE.l D7,D1
000284A8 <AmiBlitz3.ab3@11805>   MOVEA.l _dosbase,A6
000284AC <AmiBlitz3.ab3@11806>   JSR _Close(A6)
000284B4 <AmiBlitz3.ab3@11811>   BTST #$7,create_iconfile
000284B8 <AmiBlitz3.ab3@11812>    BEQ.w 'done
000284BE <AmiBlitz3.ab3@11816>   MOVEA.l ptr_newexefilename,A0
000284C0 <AmiBlitz3.ab3@11819>     TST.b (A0)+
000284C4 <AmiBlitz3.ab3@11820>   BNE.w 'iloop
000284C6 <AmiBlitz3.ab3@11821>   SUBQ.w #1,A0
000284C8 <AmiBlitz3.ab3@11822>   MOVE.l A0,-(A7)        ;to later null out!
000284CE <AmiBlitz3.ab3@11823>   LEA str_infoextention2,A1
000284D0 <AmiBlitz3.ab3@11826>     MOVE.b (A1)+,(A0)+
000284D4 <AmiBlitz3.ab3@11827>   BNE.w 'iloop2
000284DA <AmiBlitz3.ab3@11829>   MOVE.l ptr_newexefilename,D1
000284DC <AmiBlitz3.ab3@11830>   MOVEQ.l #-$02,D2
000284E2 <AmiBlitz3.ab3@11831>   MOVEA.l _dosbase,A6
000284E6 <AmiBlitz3.ab3@11832>   JSR _Lock(A6)
000284E8 <AmiBlitz3.ab3@11833>   MOVE.l D0,D1
000284EC <AmiBlitz3.ab3@11834>   BEQ.w 'dildo      ;not exist                                    ;no icon exit so jump to create one  tomsmart1
000284F0 <AmiBlitz3.ab3@11835>   JSR _UnLock(A6)                                          ;OH!! there is a Icon so we must Unlock it  tomsmart1
000284F4 <AmiBlitz3.ab3@11836>  BRA.w 'ifail                                            ;and skip writing a Icon  tomsmart1
000284FA <AmiBlitz3.ab3@11839>   MOVE.l ptr_newexefilename,D1
00028500 <AmiBlitz3.ab3@11840>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00028506 <AmiBlitz3.ab3@11841>   MOVEA.l _dosbase,A6
0002850A <AmiBlitz3.ab3@11842>    JSR _Open(A6)
0002850C <AmiBlitz3.ab3@11843>   MOVE.l D0,D7
00028510 <AmiBlitz3.ab3@11844>    BEQ.w 'ifail
00028516 <AmiBlitz3.ab3@11845>   MOVE.l #icongfx_data,D2                                  ; icon graphics
0002851C <AmiBlitz3.ab3@11846>   MOVE.l #icongfx_data_end-icongfx_data,D3                 ; length of gfx-data
0002851E <AmiBlitz3.ab3@11847>   MOVE.l D7,D1
00028524 <AmiBlitz3.ab3@11848>   MOVEA.l _dosbase,A6
00028528 <AmiBlitz3.ab3@11849>   JSR _Write(A6)
0002852A <AmiBlitz3.ab3@11850>   MOVE.l D7,D1
0002852E <AmiBlitz3.ab3@11851>   JSR _Close(A6)
00028530 <AmiBlitz3.ab3@11854>   MOVEA.l (A7)+,A0
00028532 <AmiBlitz3.ab3@11855>   CLR.b (A0)
00028538 <AmiBlitz3.ab3@11861>   TST.b exdebug
0002853C <AmiBlitz3.ab3@11862>    BEQ 'fixdoneb
00028542 <AmiBlitz3.ab3@11863>   MOVE.w dontwrite_nomemleft,D1
00028546 <AmiBlitz3.ab3@11864>   BNE.w 'fixdoneb
0002854C <AmiBlitz3.ab3@11865>   MOVE.l chipsize,d5
00028552 <AmiBlitz3.ab3@11866>   MOVE.l bsssize,d3
00028558 <AmiBlitz3.ab3@11867>   MOVE.l chipstart,d7
0002855E <AmiBlitz3.ab3@11868>   MOVE.l bssstart,d6
00028564 <AmiBlitz3.ab3@11869>   MOVEA.l hunkoffsetbase,A2
0002856A <AmiBlitz3.ab3@11870>   MOVEA.l destbufferstart,A1
0002856C <AmiBlitz3.ab3@11871>   MOVE.l A1,D2
00028572 <AmiBlitz3.ab3@11872>   ADD.l noinits,D2
00028578 <AmiBlitz3.ab3@11873>   CLR.l hunkoffsetnum
0002857C <AmiBlitz3.ab3@11876>   CMPA.w #$0,A2
00028580 <AmiBlitz3.ab3@11877>    BEQ.w 'fixdoneb
00028584 <AmiBlitz3.ab3@11878>   MOVE.l $4(A2),D0
00028588 <AmiBlitz3.ab3@11879>    LEA $0(a1,d0.l),a0
0002858A <AmiBlitz3.ab3@11880>    MOVE.l (a0),d1
0002858C <AmiBlitz3.ab3@11881>   TST.l d1
00028590 <AmiBlitz3.ab3@11882>    BMI.w 'lm1f
00028598 <AmiBlitz3.ab3@11883>   MOVE.b #0,newhunk
000285A2 <AmiBlitz3.ab3@11884>   CMP.l #-1,chipstart
000285A6 <AmiBlitz3.ab3@11885>   BEQ 'l10f
000285AC <AmiBlitz3.ab3@11886>   CMP.l chipstart,d1
000285B0 <AmiBlitz3.ab3@11887>   BLT 'l10f
000285B8 <AmiBlitz3.ab3@11888>   MOVE.b #1,newhunk
000285BE <AmiBlitz3.ab3@11889>   CMP.l chipend,d1
000285C2 <AmiBlitz3.ab3@11890>   BGE 'l110f
000285C4 <AmiBlitz3.ab3@11891>   ADD.l d7,(a0)
000285CC <AmiBlitz3.ab3@11892>   ADD.l #$80000000,4(a2)
000285D0 <AmiBlitz3.ab3@11893>  BRA 'nowayb
000285D4 <AmiBlitz3.ab3@11896>   ADD.l d5,0(a0)
000285DE <AmiBlitz3.ab3@11899>   CMP.l #-1,bssstart
000285E2 <AmiBlitz3.ab3@11900>     BEQ 'l11f
000285E8 <AmiBlitz3.ab3@11901>   CMP.l bssstart,d1
000285EC <AmiBlitz3.ab3@11902>   BLT 'l11f
000285F2 <AmiBlitz3.ab3@11903>   CMP.l bssend,d1
000285F6 <AmiBlitz3.ab3@11904>   BGE 'l111f
000285FC <AmiBlitz3.ab3@11905>   TST.b newhunk
00028600 <AmiBlitz3.ab3@11906>   BEQ 'ln1f
00028602 <AmiBlitz3.ab3@11907>   ADD.l d5,(a0)
00028604 <AmiBlitz3.ab3@11910>   ADD.l d6,(a0)
0002860C <AmiBlitz3.ab3@11911>   ADD.l #$40000000,4(a2)
00028610 <AmiBlitz3.ab3@11912>  BRA 'nowayb
00028614 <AmiBlitz3.ab3@11915>   ADD.l d3,0(a0)
00028616 <AmiBlitz3.ab3@11918>   ADD.l D2,(A0)                                            ;only normal code offsets restore
0002861C <AmiBlitz3.ab3@11921>   ADDQ.l #1,hunkoffsetnum
0002861E <AmiBlitz3.ab3@11924>   MOVEA.l (A2),A2
00028622 <AmiBlitz3.ab3@11925>  BRA.w 'loop0b
00028628 <AmiBlitz3.ab3@11929>   JSR call_setpointernormal
0002862C <AmiBlitz3.ab3@11930>   MOVEM.l (a7)+,d2-d7/a2-a6
0002862E <AmiBlitz3.ab3@11933> RTS
00028630 <AmiBlitz3.ab3@11939>   MOVE.l D2,-(A7)
00028636 <AmiBlitz3.ab3@11940>   MOVE.l destpointer,D2
0002863C <AmiBlitz3.ab3@11941>   SUB.l destbufferstart,D2
00028640 <AmiBlitz3.ab3@11942>   BSR.w addhunkoffset
00028642 <AmiBlitz3.ab3@11943>   MOVE.l (A7)+,D2
00028644 <AmiBlitz3.ab3@11944> RTS
00028648 <AmiBlitz3.ab3@11950>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
0002864E <AmiBlitz3.ab3@11952>   TST.b nohunkoffset
00028652 <AmiBlitz3.ab3@11953>   BNE 'l10
00028654 <AmiBlitz3.ab3@11955>   MOVEQ.l #$8,D0
00028656 <AmiBlitz3.ab3@11956>   MOVEQ.l #$01,D1
0002865C <AmiBlitz3.ab3@11957>   MOVEA.l _execbase,A6
00028662 <AmiBlitz3.ab3@11959>   MOVE.l mempool2,a0
00028666 <AmiBlitz3.ab3@11960>   JSR _AllocPooled(a6)
0002866C <AmiBlitz3.ab3@11964>   ADDQ.l #1,hunkoffsetcounter
0002866E <AmiBlitz3.ab3@11965>   MOVEA.l D0,A0
00028674 <AmiBlitz3.ab3@11966>   MOVE.l hunkoffsetbase,(A0)
0002867A <AmiBlitz3.ab3@11967>   MOVE.l A0,hunkoffsetbase
0002867E <AmiBlitz3.ab3@11968>   MOVE.l D2,$4(A0)
00028682 <AmiBlitz3.ab3@11973>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
00028684 <AmiBlitz3.ab3@11974> RTS
0002868A <AmiBlitz3.ab3@11980>   CLR.l hunkoffsetbase
00028690 <AmiBlitz3.ab3@11981>   MOVEA.l _execbase,A6
00028696 <AmiBlitz3.ab3@11982>   MOVEA.l hunkoffsetbase,A2
0002869A <AmiBlitz3.ab3@11985>     CMPA.w #$0,A2
0002869E <AmiBlitz3.ab3@11986>      BEQ.w 'skip
000286A0 <AmiBlitz3.ab3@11987>     MOVEA.l A2,A1
000286A2 <AmiBlitz3.ab3@11988>     MOVEQ.l #$08,D0
000286A4 <AmiBlitz3.ab3@11989>     MOVEA.l (A2),A2
000286AA <AmiBlitz3.ab3@11991>     MOVE.l mempool2,a0
000286AE <AmiBlitz3.ab3@11992>     JSR _FreePooled(A6)
000286B2 <AmiBlitz3.ab3@11995>  BRA.w 'loop
000286B8 <AmiBlitz3.ab3@11998>   CLR.l hunkoffsetcounter
000286BA <AmiBlitz3.ab3@11999> RTS
000286D2 <AmiBlitz3.ab3@12002> cmakebuff:  Ds.l 6                                          ;dc.w 12 org source
000286D6 <AmiBlitz3.ab3@12003> cmakea5:    Ds.l 1
000286D8 <AmiBlitz3.ab3@12004> cmake:      Ds.w 1
00028758 <AmiBlitz3.ab3@12005> cmakebak:   Ds.l 32                                         ;ds.b 128 org source
0002875E <AmiBlitz3.ab3@12009>   MOVE.l A5,lastsourcepos
00028768 <AmiBlitz3.ab3@12010>   MOVE.w instringon,oldqflag
0002876A <AmiBlitz3.ab3@12013>   MOVEQ.l #$00,D0
0002876C <AmiBlitz3.ab3@12014>   MOVE.b (A5)+,D0
00028770 <AmiBlitz3.ab3@12015>    BEQ 'donea
00028774 <AmiBlitz3.ab3@12016>   BPL 'stuffa
00028776 <AmiBlitz3.ab3@12017>   LSL.l #8,D0
00028778 <AmiBlitz3.ab3@12018>   MOVE.b (A5)+,D0
0002877A <AmiBlitz3.ab3@12019>   MOVE.l a1,-(a7)
00028780 <AmiBlitz3.ab3@12020>   LEA replacedat,a1
00028784 <AmiBlitz3.ab3@12021>   Dc.w $4a71,$0a00                                         ;TST.w 0(a1,d0.l*2)
00028788 <AmiBlitz3.ab3@12022>   BEQ 'l10
0002878C <AmiBlitz3.ab3@12023>   Dc.w $3031,$0a00                                         ;MOVE.w 0(a1,d0.l*2),d0
0002878E <AmiBlitz3.ab3@12027>   MOVE.l (a7)+,a1
00028792 <AmiBlitz3.ab3@12028>  BRA 'weiter
00028796 <AmiBlitz3.ab3@12031>   CMP.w #$22,D0
0002879A <AmiBlitz3.ab3@12032>    BEQ.b 'swapquotea
0002879E <AmiBlitz3.ab3@12033>   CMP.w #$3B,D0
000287A2 <AmiBlitz3.ab3@12034>    BNE.b 'donea
000287A8 <AmiBlitz3.ab3@12035>   TST.w instringon
000287AC <AmiBlitz3.ab3@12036>    BNE.b 'donea
000287AE <AmiBlitz3.ab3@12039>   MOVE.b (A5)+,D0
000287B2 <AmiBlitz3.ab3@12040>              BEQ 'l1
000287B6 <AmiBlitz3.ab3@12041>              CMP.b #":",d0
000287BA <AmiBlitz3.ab3@12042>              BNE 'loopa                                ;:@
000287BE <AmiBlitz3.ab3@12043>              CMP.b #"@",(a5)
000287C2 <AmiBlitz3.ab3@12044>              BNE 'loopa
000287C4 <AmiBlitz3.ab3@12045>              ADDQ #1,a5
000287CA <AmiBlitz3.ab3@12048>   MOVE.w D0,lastchar
000287CE <AmiBlitz3.ab3@12051>  BRA.s 'weiter
000287D4 <AmiBlitz3.ab3@12054>   NOT.w instringon
000287DA <AmiBlitz3.ab3@12057>    MOVE.w D0,lastchar
000287DE <AmiBlitz3.ab3@12058>    BEQ.w 'done
000287E2 <AmiBlitz3.ab3@12059>    BPL.w 'done2
000287E6 <AmiBlitz3.ab3@12060>   CMP.w #-$7FE4,D0                                         ;cnif
000287EA <AmiBlitz3.ab3@12061>    BEQ.w 'cnif
000287EE <AmiBlitz3.ab3@12062>   CMP.w #-$7FE3,D0                                         ;csif
000287F2 <AmiBlitz3.ab3@12063>    BEQ.w 'csif
000287F6 <AmiBlitz3.ab3@12064>   CMP.w #-$7FE2,D0                                         ;celse
000287FA <AmiBlitz3.ab3@12065>    BEQ.w 'celse
000287FE <AmiBlitz3.ab3@12066>   CMP.w #-$7FE1,D0                                         ;cend
00028802 <AmiBlitz3.ab3@12067>    BEQ.w 'cend
00028808 <AmiBlitz3.ab3@12070>   TST.w skipcode
0002880C <AmiBlitz3.ab3@12071>    BEQ.w getchar
00028810 <AmiBlitz3.ab3@12072>   CMP.w #$7E,D0
00028814 <AmiBlitz3.ab3@12073>    BEQ.w 'cmake                                            ;tilde
00028818 <AmiBlitz3.ab3@12074>   CMP.w #$2,D0
0002881C <AmiBlitz3.ab3@12075>    BNE.w 'notunpath
00028822 <AmiBlitz3.ab3@12076>   MOVEA.l usedfrom,A5
00028828 <AmiBlitz3.ab3@12077>   CLR.l usedfrom
0002882C <AmiBlitz3.ab3@12078>  BRA.w getchar
00028830 <AmiBlitz3.ab3@12081>   CMP.w #$1,D0
00028834 <AmiBlitz3.ab3@12082>    BNE.w 'done
00028838 <AmiBlitz3.ab3@12086>   MOVEA.l cmakea5(PC),A5
0002883C <AmiBlitz3.ab3@12087>  BRA.w getchar
00028842 <AmiBlitz3.ab3@12090>   TST.w cmake
00028846 <AmiBlitz3.ab3@12091>    BNE.w 'done
0002884A <AmiBlitz3.ab3@12093>   MOVEM.l D0-D7/A0-A6,-(A7)
00028850 <AmiBlitz3.ab3@12094>   LEA cmake,a0                                            ;reass
00028852 <AmiBlitz3.ab3@12095>   NOT.w (a0)
00028856 <AmiBlitz3.ab3@12096>   LEA cmakebak(PC),A0
0002885C <AmiBlitz3.ab3@12097>   LEA ptr_parameterstore,A1
0002885E <AmiBlitz3.ab3@12098>   MOVEQ.l #$1F,D0
00028860 <AmiBlitz3.ab3@12101>     MOVE.l (A1)+,(A0)+
00028864 <AmiBlitz3.ab3@12102>   DBF D0,'cmloop
0002886A <AmiBlitz3.ab3@12105>    JSR evalconst3
0002886E <AmiBlitz3.ab3@12106>   CMP.w #$7E,D0
00028872 <AmiBlitz3.ab3@12107>    BNE.w syntaxerr
00028878 <AmiBlitz3.ab3@12108>   MOVE.l A5,cmakea5                                      ;tilde
0002887C <AmiBlitz3.ab3@12109>   LEA cmakebuff(PC),A0
0002887E <AmiBlitz3.ab3@12110>   MOVE.l D3,D2
00028882 <AmiBlitz3.ab3@12111>   BSR.w makelong
00028884 <AmiBlitz3.ab3@12112>   ADDQ.b #1,(A0)
0002888A <AmiBlitz3.ab3@12113>   LEA cmake,a0
0002888C <AmiBlitz3.ab3@12114>   NOT.w (a0)                                               ;reass
00028890 <AmiBlitz3.ab3@12115>   LEA cmakebak(PC),A0
00028896 <AmiBlitz3.ab3@12116>   LEA ptr_parameterstore,A1
00028898 <AmiBlitz3.ab3@12117>   MOVEQ.l #$1F,D0
0002889A <AmiBlitz3.ab3@12120>     MOVE.l (A0)+,(A1)+
0002889E <AmiBlitz3.ab3@12121>   DBF D0,'cmloop2
000288A2 <AmiBlitz3.ab3@12123>   MOVEM.l (A7)+,D0-D7/A0-A6
000288A6 <AmiBlitz3.ab3@12124>   LEA cmakebuff(PC),A5
000288AA <AmiBlitz3.ab3@12125>  BRA.w getchar
000288AC <AmiBlitz3.ab3@12128>  RTS
000288B6 <AmiBlitz3.ab3@12131>   MOVE.l linenumat,ciflineat                               ;csif
000288BC <AmiBlitz3.ab3@12132>   TST.w skipcode
000288C0 <AmiBlitz3.ab3@12133>    BEQ.w 'incnest
000288C4 <AmiBlitz3.ab3@12134>    BSR.w get1bytemain
000288C6 <AmiBlitz3.ab3@12135>    MOVE.l a1,-(a7)
000288CC <AmiBlitz3.ab3@12136>    JSR do_csif
000288CE <AmiBlitz3.ab3@12137>    MOVE.l (a7)+,a1
000288D2 <AmiBlitz3.ab3@12138>  BRA.w getchar
000288DC <AmiBlitz3.ab3@12141>   MOVE.l linenumat,ciflineat                               ;cnif
000288E2 <AmiBlitz3.ab3@12142>   TST.w skipcode
000288E6 <AmiBlitz3.ab3@12143>    BEQ.w 'incnest
000288EA <AmiBlitz3.ab3@12144>    BSR.w get1bytemain
000288EE <AmiBlitz3.ab3@12145>    CMP.b #"@",d0
000288F2 <AmiBlitz3.ab3@12146>    BNE 'cnif_ok2
000288F6 <AmiBlitz3.ab3@12147>    BSR.w get1bytemain
000288FE <AmiBlitz3.ab3@12148>    MOVE.b #1,incnif
00028904 <AmiBlitz3.ab3@12149>    JSR findconstant2
00028908 <AmiBlitz3.ab3@12150>    BEQ 'cnif_ok2
0002890E <AmiBlitz3.ab3@12153>    MOVE.w fast,-(a7)
00028914 <AmiBlitz3.ab3@12154>    CLR.b fast
00028916 <AmiBlitz3.ab3@12155>    MOVE.l a1,-(a7)
0002891C <AmiBlitz3.ab3@12156>    JSR do_cnif
00028922 <AmiBlitz3.ab3@12157>    CLR.b incnif
00028924 <AmiBlitz3.ab3@12158>    MOVE.l (a7)+,a1
0002892A <AmiBlitz3.ab3@12159>    MOVE.w (a7)+,fast
0002892E <AmiBlitz3.ab3@12160>  BRA.w getchar
00028934 <AmiBlitz3.ab3@12163>   ADDQ.w #1,connest
00028938 <AmiBlitz3.ab3@12164>  BRA.w getchar
0002893E <AmiBlitz3.ab3@12167>   MOVE.w connest,D0                                      ;celse
00028942 <AmiBlitz3.ab3@12168>    BNE.w getchar
00028948 <AmiBlitz3.ab3@12169>   NOT.w skipcode
0002894C <AmiBlitz3.ab3@12170>  BRA.w getchar
00028952 <AmiBlitz3.ab3@12173>   SUBQ.w #1,connest                                      ;cend
00028956 <AmiBlitz3.ab3@12174>    BPL.w getchar
0002895C <AmiBlitz3.ab3@12175>   ADDQ.w #1,connest
00028962 <AmiBlitz3.ab3@12176>   MOVEA.l concomsp,A0
00028968 <AmiBlitz3.ab3@12177>   CMPA.l #concomstack,A0
0002896C <AmiBlitz3.ab3@12178>    BEQ.w nociferr
0002896E <AmiBlitz3.ab3@12179>   SUBQ.w #2,A0
00028974 <AmiBlitz3.ab3@12180>   MOVE.l A0,concomsp
0002897A <AmiBlitz3.ab3@12181>   MOVE.w (A0),skipcode
0002897E <AmiBlitz3.ab3@12182> BRA.w getchar
00028982 <AmiBlitz3.ab3@12185> ciflineat:   Ds.l 1
00028984 <AmiBlitz3.ab3@12193>   MOVEQ.l #$00,D0
00028986 <AmiBlitz3.ab3@12194>   MOVE.b (A5)+,D0
0002898A <AmiBlitz3.ab3@12195>    BEQ.b 'done
0002898E <AmiBlitz3.ab3@12196>    BPL.b 'stuff
00028990 <AmiBlitz3.ab3@12197>   LSL.w #8,D0
00028992 <AmiBlitz3.ab3@12198>   MOVE.b (A5)+,D0
00028994 <AmiBlitz3.ab3@12199>  RTS
00028998 <AmiBlitz3.ab3@12202>   CMP.w #$22,D0
0002899C <AmiBlitz3.ab3@12203>    BEQ.b 'swapquote
000289A0 <AmiBlitz3.ab3@12204>   CMP.w #$3B,D0
000289A4 <AmiBlitz3.ab3@12205>    BNE.b 'done
000289AA <AmiBlitz3.ab3@12206>   TST.w instringon
000289AE <AmiBlitz3.ab3@12207>    BNE.b 'done
000289B0 <AmiBlitz3.ab3@12210>   MOVE.b (A5)+,D0
000289B4 <AmiBlitz3.ab3@12211>             BEQ 'loop_l1
000289B8 <AmiBlitz3.ab3@12212>             CMP.b #":",d0
000289BC <AmiBlitz3.ab3@12213>             BNE 'loop
000289C0 <AmiBlitz3.ab3@12214>             CMP.b #"@",(a5)
000289C4 <AmiBlitz3.ab3@12215>             BNE 'loop
000289CA <AmiBlitz3.ab3@12218>   MOVE.w D0,lastchar
000289CC <AmiBlitz3.ab3@12221>  RTS
000289D2 <AmiBlitz3.ab3@12224>   NOT.w instringon
000289D4 <AmiBlitz3.ab3@12225> RTS
000289D8 <AmiBlitz3.ab3@12229>   BSR.w getchar
000289DE <AmiBlitz3.ab3@12230>   TST.w instringon
000289E2 <AmiBlitz3.ab3@12231>    BNE.w 'skip
000289E6 <AmiBlitz3.ab3@12232>   CMP.w #$20,D0        ;' '
000289EA <AmiBlitz3.ab3@12233>    BEQ.w get1byte_
000289EC <AmiBlitz3.ab3@12236> RTS
00028A06 <AmiBlitz3.ab3@12239> gs:        Ds.w 13                                         ;ds.b 26  org source
00028A0A <AmiBlitz3.ab3@12240>            Dc.b $F6,$E4,$FC,$D6                            ;dc.b 228,246,252,196,214,220 org source
00028A0C <AmiBlitz3.ab3@12241>            Dc.b $C4,$DC
00028A10 <AmiBlitz3.ab3@12248>   BSR.w getchar
00028A16 <AmiBlitz3.ab3@12249>   TST.w instringon
00028A1A <AmiBlitz3.ab3@12250>    BNE.w gchar2
00028A1E <AmiBlitz3.ab3@12251>   CMP.w #$20,D0
00028A22 <AmiBlitz3.ab3@12252>    BEQ.w get1bytemain
00028A24 <AmiBlitz3.ab3@12254>   TST.w D0
00028A28 <AmiBlitz3.ab3@12257>   BEQ.b 'zero
00028A2E <AmiBlitz3.ab3@12258>   TST.w instringon
00028A32 <AmiBlitz3.ab3@12259>    BEQ.b 'noqoute
00028A36 <AmiBlitz3.ab3@12260>   CMP.b #$20,D0           ;' '
00028A3A <AmiBlitz3.ab3@12261>    BCC.b 'skip
00028A3E <AmiBlitz3.ab3@12262>   MOVE.b gs(PC,D0.W),D0
00028A40 <AmiBlitz3.ab3@12263>  RTS
00028A44 <AmiBlitz3.ab3@12266>   CMP.w #-$7FDE,D0                                         ;cmp #$8000+34,d0 org source  ;else
00028A48 <AmiBlitz3.ab3@12267>    BEQ.b 'zero
00028A4C <AmiBlitz3.ab3@12268>   CMP.w #$3A,D0           ;':'
00028A50 <AmiBlitz3.ab3@12269>    BEQ.b 'zero
00028A52 <AmiBlitz3.ab3@12272>   TST.w D0
00028A54 <AmiBlitz3.ab3@12275> RTS
00028A5A <AmiBlitz3.ab3@12279>   MOVE.w lastchar,D0
00028A5E <AmiBlitz3.ab3@12280> BRA.w gchar2
00028A68 <AmiBlitz3.ab3@12284>   MOVE.w oldqflag,instringon
00028A6E <AmiBlitz3.ab3@12285>   MOVEA.l lastsourcepos,A5
00028A70 <AmiBlitz3.ab3@12286> RTS
00028A76 <AmiBlitz3.ab3@12290>   MOVE.w D0,locchar
00028A7C <AmiBlitz3.ab3@12291>   MOVE.l A5,locloc
00028A7E <AmiBlitz3.ab3@12292> RTS
00028A84 <AmiBlitz3.ab3@12296>   MOVEA.l locloc,A5
00028A8A <AmiBlitz3.ab3@12297>   MOVE.w locchar,D0
00028A90 <AmiBlitz3.ab3@12298>   MOVE.w D0,lastchar
00028A92 <AmiBlitz3.ab3@12299> RTS
00028A92 <internal_errormsg.ab3@1> XINCLUDE "internal_errormsg.ab3"
00028ADA <internal_errormsg.ab3@9> XINCLUDE "internal_errormsg.ab3"
00028B2C <internal_errormsg.ab3@10> XINCLUDE "internal_errormsg.ab3"
00028B6A <internal_errormsg.ab3@11> XINCLUDE "internal_errormsg.ab3"
00028BA8 <internal_errormsg.ab3@12> XINCLUDE "internal_errormsg.ab3"
00028BD2 <internal_errormsg.ab3@13> XINCLUDE "internal_errormsg.ab3"
00028C02 <internal_errormsg.ab3@14> XINCLUDE "internal_errormsg.ab3"
00028C4C <internal_errormsg.ab3@15> XINCLUDE "internal_errormsg.ab3"
00028CD2 <internal_errormsg.ab3@16> XINCLUDE "internal_errormsg.ab3"
00028D34 <internal_errormsg.ab3@17> XINCLUDE "internal_errormsg.ab3"
00028D7C <internal_errormsg.ab3@18> XINCLUDE "internal_errormsg.ab3"
00028DCE <internal_errormsg.ab3@19> XINCLUDE "internal_errormsg.ab3"
00028E30 <internal_errormsg.ab3@20> XINCLUDE "internal_errormsg.ab3"
00028E7E <internal_errormsg.ab3@21> XINCLUDE "internal_errormsg.ab3"
00028EB4 <internal_errormsg.ab3@22> XINCLUDE "internal_errormsg.ab3"
00028EE2 <internal_errormsg.ab3@23> XINCLUDE "internal_errormsg.ab3"
00028EFC <internal_errormsg.ab3@24> XINCLUDE "internal_errormsg.ab3"
00028F1A <internal_errormsg.ab3@25> XINCLUDE "internal_errormsg.ab3"
00028F98 <internal_errormsg.ab3@26> XINCLUDE "internal_errormsg.ab3"
00028FC2 <internal_errormsg.ab3@27> XINCLUDE "internal_errormsg.ab3"
00028FE8 <internal_errormsg.ab3@28> XINCLUDE "internal_errormsg.ab3"
00029008 <internal_errormsg.ab3@29> XINCLUDE "internal_errormsg.ab3"
00029026 <internal_errormsg.ab3@30> XINCLUDE "internal_errormsg.ab3"
00029046 <internal_errormsg.ab3@31> XINCLUDE "internal_errormsg.ab3"
0002906E <internal_errormsg.ab3@32> XINCLUDE "internal_errormsg.ab3"
00029098 <internal_errormsg.ab3@33> XINCLUDE "internal_errormsg.ab3"
000290B4 <internal_errormsg.ab3@34> XINCLUDE "internal_errormsg.ab3"
000290DA <internal_errormsg.ab3@35> XINCLUDE "internal_errormsg.ab3"
000290F2 <internal_errormsg.ab3@36> XINCLUDE "internal_errormsg.ab3"
00029150 <internal_errormsg.ab3@37> XINCLUDE "internal_errormsg.ab3"
00029172 <internal_errormsg.ab3@38> XINCLUDE "internal_errormsg.ab3"
00029198 <internal_errormsg.ab3@39> XINCLUDE "internal_errormsg.ab3"
000291C0 <internal_errormsg.ab3@40> XINCLUDE "internal_errormsg.ab3"
000291E0 <internal_errormsg.ab3@41> XINCLUDE "internal_errormsg.ab3"
00029204 <internal_errormsg.ab3@42> XINCLUDE "internal_errormsg.ab3"
0002924A <internal_errormsg.ab3@43> XINCLUDE "internal_errormsg.ab3"
0002926E <internal_errormsg.ab3@44> XINCLUDE "internal_errormsg.ab3"
00029292 <internal_errormsg.ab3@45> XINCLUDE "internal_errormsg.ab3"
000292B2 <internal_errormsg.ab3@46> XINCLUDE "internal_errormsg.ab3"
000292D6 <internal_errormsg.ab3@47> XINCLUDE "internal_errormsg.ab3"
000292F8 <internal_errormsg.ab3@48> XINCLUDE "internal_errormsg.ab3"
00029324 <internal_errormsg.ab3@49> XINCLUDE "internal_errormsg.ab3"
0002934A <internal_errormsg.ab3@50> XINCLUDE "internal_errormsg.ab3"
00029354 <internal_errormsg.ab3@53> XINCLUDE "internal_errormsg.ab3"
0002937A <internal_errormsg.ab3@54> XINCLUDE "internal_errormsg.ab3"
000293CC <internal_errormsg.ab3@56> XINCLUDE "internal_errormsg.ab3"
00029436 <internal_errormsg.ab3@57> XINCLUDE "internal_errormsg.ab3"
00029494 <internal_errormsg.ab3@58> XINCLUDE "internal_errormsg.ab3"
00029502 <internal_errormsg.ab3@59> XINCLUDE "internal_errormsg.ab3"
0002953E <internal_errormsg.ab3@60> XINCLUDE "internal_errormsg.ab3"
0002955C <internal_errormsg.ab3@61> XINCLUDE "internal_errormsg.ab3"
00029582 <internal_errormsg.ab3@62> XINCLUDE "internal_errormsg.ab3"
000295B2 <internal_errormsg.ab3@63> XINCLUDE "internal_errormsg.ab3"
000295D6 <internal_errormsg.ab3@64> XINCLUDE "internal_errormsg.ab3"
00029604 <internal_errormsg.ab3@65> XINCLUDE "internal_errormsg.ab3"
00029628 <internal_errormsg.ab3@66> XINCLUDE "internal_errormsg.ab3"
0002963E <internal_errormsg.ab3@67> XINCLUDE "internal_errormsg.ab3"
00029654 <internal_errormsg.ab3@68> XINCLUDE "internal_errormsg.ab3"
0002965A <internal_errormsg.ab3@71> XINCLUDE "internal_errormsg.ab3"
00029662 <internal_errormsg.ab3@73> XINCLUDE "internal_errormsg.ab3"
00029664 <internal_errormsg.ab3@75> XINCLUDE "internal_errormsg.ab3"
00029668 <internal_errormsg.ab3@76> XINCLUDE "internal_errormsg.ab3"
00029670 <internal_errormsg.ab3@77> XINCLUDE "internal_errormsg.ab3"
00029672 <internal_errormsg.ab3@79> XINCLUDE "internal_errormsg.ab3"
000296AC <internal_errormsg.ab3@81> XINCLUDE "internal_errormsg.ab3"
000296D8 <internal_errormsg.ab3@82> XINCLUDE "internal_errormsg.ab3"
00029708 <internal_errormsg.ab3@83> XINCLUDE "internal_errormsg.ab3"
00029740 <internal_errormsg.ab3@84> XINCLUDE "internal_errormsg.ab3"
0002979A <internal_errormsg.ab3@85> XINCLUDE "internal_errormsg.ab3"
0002979C <internal_errormsg.ab3@89> XINCLUDE "internal_errormsg.ab3"
000297A0 <internal_errormsg.ab3@90> XINCLUDE "internal_errormsg.ab3"
000297A4 <internal_errormsg.ab3@91> XINCLUDE "internal_errormsg.ab3"
000297A8 <internal_errormsg.ab3@92> XINCLUDE "internal_errormsg.ab3"
000297AC <internal_errormsg.ab3@93> XINCLUDE "internal_errormsg.ab3"
000297B0 <internal_errormsg.ab3@94> XINCLUDE "internal_errormsg.ab3"
000297B4 <internal_errormsg.ab3@95> XINCLUDE "internal_errormsg.ab3"
000297B8 <internal_errormsg.ab3@96> XINCLUDE "internal_errormsg.ab3"
000297BC <internal_errormsg.ab3@97> XINCLUDE "internal_errormsg.ab3"
000297C0 <internal_errormsg.ab3@98> XINCLUDE "internal_errormsg.ab3"
000297C4 <internal_errormsg.ab3@99> XINCLUDE "internal_errormsg.ab3"
00029802 <internal_errormsg.ab3@100> XINCLUDE "internal_errormsg.ab3"
00029834 <internal_errormsg.ab3@102> XINCLUDE "internal_errormsg.ab3"
00029852 <internal_errormsg.ab3@103> XINCLUDE "internal_errormsg.ab3"
0002987C <internal_errormsg.ab3@104> XINCLUDE "internal_errormsg.ab3"
00029898 <internal_errormsg.ab3@105> XINCLUDE "internal_errormsg.ab3"
000298B2 <internal_errormsg.ab3@106> XINCLUDE "internal_errormsg.ab3"
000298D0 <internal_errormsg.ab3@107> XINCLUDE "internal_errormsg.ab3"
000298F4 <internal_errormsg.ab3@108> XINCLUDE "internal_errormsg.ab3"
000298F6 <internal_errormsg.ab3@112> XINCLUDE "internal_errormsg.ab3"
00029948 <internal_errormsg.ab3@114> XINCLUDE "internal_errormsg.ab3"
00029970 <internal_errormsg.ab3@116> XINCLUDE "internal_errormsg.ab3"
00029998 <internal_errormsg.ab3@117> XINCLUDE "internal_errormsg.ab3"
000299B4 <internal_errormsg.ab3@121> XINCLUDE "internal_errormsg.ab3"
000299D4 <internal_errormsg.ab3@122> XINCLUDE "internal_errormsg.ab3"
000299EC <internal_errormsg.ab3@123> XINCLUDE "internal_errormsg.ab3"
00029A30 <internal_errormsg.ab3@124> XINCLUDE "internal_errormsg.ab3"
00029A78 <internal_errormsg.ab3@125> XINCLUDE "internal_errormsg.ab3"
00029AA2 <internal_errormsg.ab3@126> XINCLUDE "internal_errormsg.ab3"
00029ACC <internal_errormsg.ab3@127> XINCLUDE "internal_errormsg.ab3"
00029AE6 <internal_errormsg.ab3@131> XINCLUDE "internal_errormsg.ab3"
00029B10 <internal_errormsg.ab3@132> XINCLUDE "internal_errormsg.ab3"
00029B64 <internal_errormsg.ab3@133> XINCLUDE "internal_errormsg.ab3"
00029BB0 <internal_errormsg.ab3@134> XINCLUDE "internal_errormsg.ab3"
00029BE8 <internal_errormsg.ab3@135> XINCLUDE "internal_errormsg.ab3"
00029BEE <internal_errormsg.ab3@138> XINCLUDE "internal_errormsg.ab3"
00029BFC <internal_errormsg.ab3@142> XINCLUDE "internal_errormsg.ab3"
00029C2C <internal_errormsg.ab3@145> XINCLUDE "internal_errormsg.ab3"
00029C60 <internal_errormsg.ab3@146> XINCLUDE "internal_errormsg.ab3"
00029CC6 <internal_errormsg.ab3@147> XINCLUDE "internal_errormsg.ab3"
00029CE4 <internal_errormsg.ab3@148> XINCLUDE "internal_errormsg.ab3"
00029D5E <internal_errormsg.ab3@149> XINCLUDE "internal_errormsg.ab3"
00029D86 <internal_errormsg.ab3@150> XINCLUDE "internal_errormsg.ab3"
00029D9C <internal_errormsg.ab3@151> XINCLUDE "internal_errormsg.ab3"
00029DB0 <internal_errormsg.ab3@152> XINCLUDE "internal_errormsg.ab3"
00029DD0 <internal_errormsg.ab3@153> XINCLUDE "internal_errormsg.ab3"
00029DD6 <internal_errormsg.ab3@156> XINCLUDE "internal_errormsg.ab3"
00029DE8 <internal_errormsg.ab3@160> XINCLUDE "internal_errormsg.ab3"
00029E1C <internal_errormsg.ab3@163> XINCLUDE "internal_errormsg.ab3"
00029E34 <internal_errormsg.ab3@164> XINCLUDE "internal_errormsg.ab3"
00029E50 <internal_errormsg.ab3@165> XINCLUDE "internal_errormsg.ab3"
00029E68 <internal_errormsg.ab3@166> XINCLUDE "internal_errormsg.ab3"
00029E88 <internal_errormsg.ab3@167> XINCLUDE "internal_errormsg.ab3"
00029EA8 <internal_errormsg.ab3@168> XINCLUDE "internal_errormsg.ab3"
00029ECE <internal_errormsg.ab3@169> XINCLUDE "internal_errormsg.ab3"
00029EE4 <internal_errormsg.ab3@170> XINCLUDE "internal_errormsg.ab3"
00029F00 <internal_errormsg.ab3@171> XINCLUDE "internal_errormsg.ab3"
00029F2A <internal_errormsg.ab3@172> XINCLUDE "internal_errormsg.ab3"
00029F42 <internal_errormsg.ab3@173> XINCLUDE "internal_errormsg.ab3"
00029F5E <internal_errormsg.ab3@174> XINCLUDE "internal_errormsg.ab3"
00029F7E <internal_errormsg.ab3@175> XINCLUDE "internal_errormsg.ab3"
00029F96 <internal_errormsg.ab3@176> XINCLUDE "internal_errormsg.ab3"
00029F9A <internal_errormsg.ab3@179> XINCLUDE "internal_errormsg.ab3"
00029FA0 <internal_errormsg.ab3@180> XINCLUDE "internal_errormsg.ab3"
00029FA6 <internal_errormsg.ab3@181> XINCLUDE "internal_errormsg.ab3"
00029FBB <internal_errormsg.ab3@182> XINCLUDE "internal_errormsg.ab3"
00029FC1 <internal_errormsg.ab3@184> XINCLUDE "internal_errormsg.ab3"
00029FC2 <internal_errormsg.ab3@185> XINCLUDE "internal_errormsg.ab3"
00029FC6 <internal_errormsg.ab3@188> XINCLUDE "internal_errormsg.ab3"
00029FCC <internal_errormsg.ab3@189> XINCLUDE "internal_errormsg.ab3"
00029FD2 <internal_errormsg.ab3@190> XINCLUDE "internal_errormsg.ab3"
00029FE5 <internal_errormsg.ab3@191> XINCLUDE "internal_errormsg.ab3"
00029FEB <internal_errormsg.ab3@193> XINCLUDE "internal_errormsg.ab3"
00029FEC <internal_errormsg.ab3@194> XINCLUDE "internal_errormsg.ab3"
0002A00A <internal_errormsg.ab3@196> XINCLUDE "internal_errormsg.ab3"
0002A022 <internal_errormsg.ab3@197> XINCLUDE "internal_errormsg.ab3"
0002A03E <internal_errormsg.ab3@198> XINCLUDE "internal_errormsg.ab3"
0002A068 <internal_errormsg.ab3@199> XINCLUDE "internal_errormsg.ab3"
0002A082 <internal_errormsg.ab3@200> XINCLUDE "internal_errormsg.ab3"
0002A0A2 <internal_errormsg.ab3@201> XINCLUDE "internal_errormsg.ab3"
0002A0C0 <internal_errormsg.ab3@202> XINCLUDE "internal_errormsg.ab3"
0002A0EE <internal_errormsg.ab3@203> XINCLUDE "internal_errormsg.ab3"
0002A0F8 <internal_errormsg.ab3@206> XINCLUDE "internal_errormsg.ab3"
0002A12A <internal_errormsg.ab3@207> XINCLUDE "internal_errormsg.ab3"
0002A148 <internal_errormsg.ab3@209> XINCLUDE "internal_errormsg.ab3"
0002A166 <internal_errormsg.ab3@210> XINCLUDE "internal_errormsg.ab3"
0002A186 <internal_errormsg.ab3@211> XINCLUDE "internal_errormsg.ab3"
0002A1AC <internal_errormsg.ab3@212> XINCLUDE "internal_errormsg.ab3"
0002A1D2 <internal_errormsg.ab3@213> XINCLUDE "internal_errormsg.ab3"
0002A1FA <internal_errormsg.ab3@214> XINCLUDE "internal_errormsg.ab3"
0002A218 <internal_errormsg.ab3@215> XINCLUDE "internal_errormsg.ab3"
0002A238 <internal_errormsg.ab3@216> XINCLUDE "internal_errormsg.ab3"
0002A252 <internal_errormsg.ab3@217> XINCLUDE "internal_errormsg.ab3"
0002A274 <internal_errormsg.ab3@218> XINCLUDE "internal_errormsg.ab3"
0002A292 <internal_errormsg.ab3@219> XINCLUDE "internal_errormsg.ab3"
0002A2B4 <internal_errormsg.ab3@220> XINCLUDE "internal_errormsg.ab3"
0002A2D8 <internal_errormsg.ab3@221> XINCLUDE "internal_errormsg.ab3"
0002A2DE <internal_errormsg.ab3@225> XINCLUDE "internal_errormsg.ab3"
0002A2FA <internal_errormsg.ab3@227> XINCLUDE "internal_errormsg.ab3"
0002A316 <internal_errormsg.ab3@229> XINCLUDE "internal_errormsg.ab3"
0002A334 <internal_errormsg.ab3@230> XINCLUDE "internal_errormsg.ab3"
0002A352 <internal_errormsg.ab3@231> XINCLUDE "internal_errormsg.ab3"
0002A3A0 <internal_errormsg.ab3@232> XINCLUDE "internal_errormsg.ab3"
0002A3BE <internal_errormsg.ab3@233> XINCLUDE "internal_errormsg.ab3"
0002A3DC <internal_errormsg.ab3@234> XINCLUDE "internal_errormsg.ab3"
0002A3F6 <internal_errormsg.ab3@235> XINCLUDE "internal_errormsg.ab3"
0002A442 <internal_errormsg.ab3@236> XINCLUDE "internal_errormsg.ab3"
0002A468 <internal_errormsg.ab3@237> XINCLUDE "internal_errormsg.ab3"
0002A488 <internal_errormsg.ab3@238> XINCLUDE "internal_errormsg.ab3"
0002A4AA <internal_errormsg.ab3@239> XINCLUDE "internal_errormsg.ab3"
0002A4C6 <internal_errormsg.ab3@240> XINCLUDE "internal_errormsg.ab3"
0002A4EC <internal_errormsg.ab3@241> XINCLUDE "internal_errormsg.ab3"
0002A508 <internal_errormsg.ab3@242> XINCLUDE "internal_errormsg.ab3"
0002A526 <internal_errormsg.ab3@243> XINCLUDE "internal_errormsg.ab3"
0002A54E <internal_errormsg.ab3@244> XINCLUDE "internal_errormsg.ab3"
0002A56A <internal_errormsg.ab3@245> XINCLUDE "internal_errormsg.ab3"
0002A57A <internal_errormsg.ab3@246> XINCLUDE "internal_errormsg.ab3"
0002A59C <internal_errormsg.ab3@247> XINCLUDE "internal_errormsg.ab3"
0002A59E <internal_errormsg.ab3@251> XINCLUDE "internal_errormsg.ab3"
0002A5B8 <internal_errormsg.ab3@253> XINCLUDE "internal_errormsg.ab3"
0002A5DC <internal_errormsg.ab3@255> XINCLUDE "internal_errormsg.ab3"
0002A5FC <internal_errormsg.ab3@256> XINCLUDE "internal_errormsg.ab3"
0002A62E <internal_errormsg.ab3@257> XINCLUDE "internal_errormsg.ab3"
0002A68C <internal_errormsg.ab3@258> XINCLUDE "internal_errormsg.ab3"
0002A6C4 <internal_errormsg.ab3@259> XINCLUDE "internal_errormsg.ab3"
0002A702 <internal_errormsg.ab3@260> XINCLUDE "internal_errormsg.ab3"
0002A738 <internal_errormsg.ab3@261> XINCLUDE "internal_errormsg.ab3"
0002A76A <internal_errormsg.ab3@262> XINCLUDE "internal_errormsg.ab3"
0002A78E <internal_errormsg.ab3@263> XINCLUDE "internal_errormsg.ab3"
0002A7B2 <internal_errormsg.ab3@264> XINCLUDE "internal_errormsg.ab3"
0002A7FC <internal_errormsg.ab3@265> XINCLUDE "internal_errormsg.ab3"
0002A824 <internal_errormsg.ab3@266> XINCLUDE "internal_errormsg.ab3"
0002A86E <internal_errormsg.ab3@267> XINCLUDE "internal_errormsg.ab3"
0002A8AE <internal_errormsg.ab3@268> XINCLUDE "internal_errormsg.ab3"
0002A8AE <AmiBlitz3.ab3@12303> XINCLUDE "internal_errormsg.ab3"
0002A8B0 <AmiBlitz3.ab3@12307> ezerr:   Ds.w 1                                            ;for simple errors
0002A8B6 <AmiBlitz3.ab3@12314>    MOVE.l myline,d0
0002A8BA <AmiBlitz3.ab3@12315>   BNE 'l2
0002A8C0 <AmiBlitz3.ab3@12318>     MOVE.l a5,lastsourcepos
0002A8C2 <AmiBlitz3.ab3@12321>     SUBA.l a5,a5
0002A8C8 <AmiBlitz3.ab3@12324>   TST.l usedfrom
0002A8CC <AmiBlitz3.ab3@12325>   BEQ 'org
0002A8D2 <AmiBlitz3.ab3@12326>     MOVEA.l usedfrom,a5
0002A8D8 <AmiBlitz3.ab3@12330>   TST.w dirmode
0002A8DC <AmiBlitz3.ab3@12331>   BNE.b 'quiet
0002A8E2 <AmiBlitz3.ab3@12333>     JSR call_setpointernormal
0002A8E6 <AmiBlitz3.ab3@12335>     MOVE.w ezerr(PC),D0
0002A8EA <AmiBlitz3.ab3@12336>     BNE.w 'skip
0002A8F0 <AmiBlitz3.ab3@12337>       MOVE.w cfetchmode,D0
0002A8F4 <AmiBlitz3.ab3@12338>       BEQ.w 'skip2
0002A8FE <AmiBlitz3.ab3@12339>         MOVE.l oldlibat,destbufferend                      ;fix up lib thing.
0002A904 <AmiBlitz3.ab3@12342>   MOVE.w constmode,D0
0002A908 <AmiBlitz3.ab3@12343>   BEQ.b 'skip3
0002A90C <AmiBlitz3.ab3@12344>     BSR.w asmerr2
0002A912 <AmiBlitz3.ab3@12347>   MOVE.l firstlocal,D1
0002A918 <AmiBlitz3.ab3@12348>   OR.l firstglob,D1
0002A91C <AmiBlitz3.ab3@12349>   BEQ.b 'notproc                                           ;?!?!?!
0002A922 <AmiBlitz3.ab3@12351> 
0002A926 <AmiBlitz3.ab3@12352>     BNE 'notproc                                           ; yes skip
0002A92C <AmiBlitz3.ab3@12354>       JSR droplocals                                        ; no free some data ????
0002A934 <AmiBlitz3.ab3@12357>   MOVE.w #$FFFF,anyerrs                                    ;#-1,anyerrs org source
0002A93E <AmiBlitz3.ab3@12359>   CMP.l #"NORE",reqmode                                    ;for used functions
0002A942 <AmiBlitz3.ab3@12360>   BEQ 'notproc_l1
0002A94C <AmiBlitz3.ab3@12362>     MOVE.l linenumat,compilelinecounter
0002A952 <AmiBlitz3.ab3@12365>   JSR close_compilewin
0002A954 <AmiBlitz3.ab3@12368>   MOVEA.l (A7)+,A0
0002A95A <AmiBlitz3.ab3@12370>   MOVE.l errorcounter,d0                                   ; added to make maxerrorcount changable in CLIMode  tomsmart1
0002A960 <AmiBlitz3.ab3@12371>   CMP.l maxerrorcount,d0                                   ; changed to make maxerrorcount changable in CLIMode  tomsmart1
0002A964 <AmiBlitz3.ab3@12372>   BLT 'lesserror
0002A96A <AmiBlitz3.ab3@12373>   LEA errorlimit_text,a0
0002A970 <AmiBlitz3.ab3@12376>   ADDQ.l #1,errorcounter
0002A976 <AmiBlitz3.ab3@12377>   JSR errorstringparse
0002A980 <AmiBlitz3.ab3@12378>   CMP.l #"NORE",reqmode                                    ;for used functions
0002A984 <AmiBlitz3.ab3@12379>   BEQ 'skip_Lxx2
0002A98A <AmiBlitz3.ab3@12380>   TST.l CLIMode
0002A98E <AmiBlitz3.ab3@12381>   BNE 'climode_output
0002A994 <AmiBlitz3.ab3@12384>     JSR save_errorfile
0002A998 <AmiBlitz3.ab3@12385>     BRA 'end_output
0002A99E <AmiBlitz3.ab3@12388>     JSR stdout_error
0002A9A4 <AmiBlitz3.ab3@12391>        MOVE.l errorcounter,d0                          ; added to make maxerrorcount changable in CLIMode  tomsmart1
0002A9AA <AmiBlitz3.ab3@12392>        CMP.l maxerrorcount,d0                          ; changed to make maxerrorcount changable in CLIMode  tomsmart1
0002A9AE <AmiBlitz3.ab3@12393>        BGT 'end_output
0002A9B4 <AmiBlitz3.ab3@12394>       MOVE.l lastsourcepos,a5
0002A9B6 <AmiBlitz3.ab3@12397>       TST.b (a5)
0002A9BA <AmiBlitz3.ab3@12398>         BEQ 'ok2
0002A9BC <AmiBlitz3.ab3@12399>       MOVE.b (a5)+,d0                                  ; position to usefull source position to avoid following errors
0002A9C0 <AmiBlitz3.ab3@12400>       BEQ 'ok
0002A9C4 <AmiBlitz3.ab3@12401>       CMP.b #":",d0
0002A9C8 <AmiBlitz3.ab3@12402>       BEQ 'ok
0002A9CC <AmiBlitz3.ab3@12403>       BRA 'loop
0002A9CE <AmiBlitz3.ab3@12406>     SUBQ.l #1,a5
0002A9D6 <AmiBlitz3.ab3@12409>       MOVE.w #0,lastchar
0002A9DE <AmiBlitz3.ab3@12410>       MOVE.b #1,iserror
0002A9E4 <AmiBlitz3.ab3@12411>       MOVE.l stackaddr,a7
0002A9E6 <AmiBlitz3.ab3@12412>       RTS
0002A9E8 <AmiBlitz3.ab3@12420>   MOVE.l A0,-(a7)
0002AA26 <AmiBlitz3.ab3@12421>   !ComData_GetL{comFunc_ErrorRequest,A1}
0002AA28 <AmiBlitz3.ab3@12422>   MOVE.l (a7)+,A0
0002AA2C <AmiBlitz3.ab3@12424>   MOVEM.l d6/D7/A6,-(A7)
0002AA32 <AmiBlitz3.ab3@12426>   MOVE.l includeline,d7
0002AA38 <AmiBlitz3.ab3@12427>   MOVE.l #"INLN",a6
0002AA42 <AmiBlitz3.ab3@12428>   MOVE.l errstack,tempa7
0002AA44 <AmiBlitz3.ab3@12430>   JSR (A1)                                                  ;open ped errorrequest
0002AA48 <AmiBlitz3.ab3@12432>   MOVEM.l (A7)+,D7/d6/A6
0002AA4E <AmiBlitz3.ab3@12436>   MOVE.l tempa7,a7
0002AA54 <AmiBlitz3.ab3@12438>   MOVEA.l errcont,A0
0002AA56 <AmiBlitz3.ab3@12441>  RTS
0002AA5C <AmiBlitz3.ab3@12444>   MOVEA.l errstack,A7
0002AA62 <AmiBlitz3.ab3@12445>   MOVEA.l errcont,A0
0002AA64 <AmiBlitz3.ab3@12447>  RTS
0002AA66 <AmiBlitz3.ab3@12451>   MOVE.l (A7),D0
0002AA6C <AmiBlitz3.ab3@12452>   MOVEA.l errstack,A7
0002AA72 <AmiBlitz3.ab3@12453>   MOVEA.l errcont,A0
0002AA74 <AmiBlitz3.ab3@12454> JMP (A0)
0002AA78 <AmiBlitz3.ab3@12460>   CMP.w #$7A,D0                                            ;'z'
0002AA7C <AmiBlitz3.ab3@12461>    BHI.w 'no
0002AA80 <AmiBlitz3.ab3@12462>   CMP.w #$41,D0                                            ;'A'
0002AA84 <AmiBlitz3.ab3@12463>    BCS.w 'no
0002AA88 <AmiBlitz3.ab3@12464>   CMP.w #$61,D0                                            ;'a'
0002AA8C <AmiBlitz3.ab3@12465>    BCC.w 'yes
0002AA90 <AmiBlitz3.ab3@12466>   CMP.w #$5A,D0                                            ;'Z'
0002AA94 <AmiBlitz3.ab3@12467>    BHI.w 'no
0002AA96 <AmiBlitz3.ab3@12470>   CMP.w D0,D0
0002AA98 <AmiBlitz3.ab3@12473> RTS
0002AA9C <AmiBlitz3.ab3@12481>   CMP.w #$30,D0                                            ;'0'
0002AAA0 <AmiBlitz3.ab3@12482>    BCS.w 'skip
0002AAA4 <AmiBlitz3.ab3@12483>   CMP.w #$39,D0                                            ;'9'
0002AAA8 <AmiBlitz3.ab3@12484>    BHI.w 'skip
0002AAAA <AmiBlitz3.ab3@12485>   CMP.w D0,D0
0002AAAC <AmiBlitz3.ab3@12488> RTS
0002AACE <AmiBlitz3.ab3@12495>   !compare1                                                ;bsr.w tstalpha
0002AAD2 <AmiBlitz3.ab3@12497>    BEQ.w 'skip
0002AAE4 <AmiBlitz3.ab3@12499>   !compare2                                                ;bsr.w tstnum2
0002AAE8 <AmiBlitz3.ab3@12501>    BEQ.w 'skip
0002AAEC <AmiBlitz3.ab3@12502>   CMP.w #$5F,D0                                            ;'_'
0002AAF0 <AmiBlitz3.ab3@12503>    BEQ.w 'skip
0002AAF4 <AmiBlitz3.ab3@12504>   CMP.w #$27,D0                                            ;''';#loclabch,d0 org source
0002AAF6 <AmiBlitz3.ab3@12507> RTS
0002AB00 <AmiBlitz3.ab3@12513>   MOVE.w oldqflag,instringon
0002AB06 <AmiBlitz3.ab3@12514>   MOVEA.l lastsourcepos,A5
0002AB0C <AmiBlitz3.ab3@12523>   MOVE.l a5,beforeparameterfetch
0002AB12 <AmiBlitz3.ab3@12525>   LEA ptr_parameterstore,A1
0002AB14 <AmiBlitz3.ab3@12528>   MOVEQ.l #$00,D2
0002AB1A <AmiBlitz3.ab3@12532>   LEA chartab,a0
0002AB1C <AmiBlitz3.ab3@12533>   MOVEQ #0,d0
0002AB22 <AmiBlitz3.ab3@12534>   MOVE.l A5,lastsourcepos
0002AB2C <AmiBlitz3.ab3@12535>   MOVE.w instringon,oldqflag
0002AB2E <AmiBlitz3.ab3@12538>     MOVE.b (a5)+,d0
0002AB32 <AmiBlitz3.ab3@12539>   CMP.b #$20,d0                                            ;space deftype
0002AB36 <AmiBlitz3.ab3@12540>   BEQ 'retry
0002AB3C <AmiBlitz3.ab3@12542>   MOVE.w d0,lastchar
0002AB40 <AmiBlitz3.ab3@12543>   TST.b 0(a0,d0.w)
0002AB44 <AmiBlitz3.ab3@12544>   BNE 'done
0002AB46 <AmiBlitz3.ab3@12557>   MOVE.b D0,(A1)+
0002AB48 <AmiBlitz3.ab3@12558>   ADDQ.l #1,D2
0002AB4E <AmiBlitz3.ab3@12561>   MOVE.l A5,lastsourcepos
0002AB50 <AmiBlitz3.ab3@12564>   MOVE.b (a5)+,d0
0002AB56 <AmiBlitz3.ab3@12565>   MOVE.b d0,lastchar+1
0002AB5A <AmiBlitz3.ab3@12566>   CMP.b #$20,d0
0002AB5E <AmiBlitz3.ab3@12567>   BEQ 'loop_l20
0002AB62 <AmiBlitz3.ab3@12569>   TST.b 0(a0,d0)
0002AB66 <AmiBlitz3.ab3@12570>   BEQ 'loop
0002AB6A <AmiBlitz3.ab3@12571>   CMP.b #2,d0
0002AB6E <AmiBlitz3.ab3@12572>   BNE 'loop_lf1
0002AB74 <AmiBlitz3.ab3@12573>   MOVEA.l usedfrom,A5
0002AB7A <AmiBlitz3.ab3@12574>   CLR.l usedfrom
0002AB7E <AmiBlitz3.ab3@12575>  BRA 'loop_ln1
0002AB82 <AmiBlitz3.ab3@12578>   CMP.b #1,d0
0002AB86 <AmiBlitz3.ab3@12579>   BNE 'loop_l20
0002AB8A <AmiBlitz3.ab3@12580>   MOVEA.l cmakea5(PC),A5
0002AB8E <AmiBlitz3.ab3@12581>  BRA 'loop_ln1
0002AB92 <AmiBlitz3.ab3@12584>   CMP.b #$7e,d0
0002AB96 <AmiBlitz3.ab3@12585>             BNE 'loop_lt
0002AB9C <AmiBlitz3.ab3@12586>             TST.w cmake
0002ABA0 <AmiBlitz3.ab3@12587>             BNE.w 'loop_a1
0002ABA2 <AmiBlitz3.ab3@12588>             SUBQ.l #1,a5
0002ABA6 <AmiBlitz3.ab3@12589>             BSR.w get1bytemain
0002ABAA <AmiBlitz3.ab3@12590>  BRA 'loop
0002ABAE <AmiBlitz3.ab3@12594>  BRA 'loop_gpex
0002ABB2 <AmiBlitz3.ab3@12598>   BSR.w getchar
0002ABD4 <AmiBlitz3.ab3@12600>    !compare1                                               ;bsr.w tstalpha
0002ABD8 <AmiBlitz3.ab3@12601>    BEQ.w 'loop_getp1
0002ABEA <AmiBlitz3.ab3@12602>    !compare2                                               ;bsr.w tstnum
0002ABEE <AmiBlitz3.ab3@12603>    BEQ.w 'loop_getp1
0002ABF2 <AmiBlitz3.ab3@12604>   CMP.w #$5F,D0                                            ;'_'
0002ABF6 <AmiBlitz3.ab3@12605>    BEQ.w 'loop_getp1
0002ABFA <AmiBlitz3.ab3@12606>   CMP.w #$27,D0                                            ;''';#loclabch,d0 org source
0002ABFE <AmiBlitz3.ab3@12610>       BNE 'loop_gpex
0002AC02 <AmiBlitz3.ab3@12611>       CMP.b #$20,d0
0002AC06 <AmiBlitz3.ab3@12613>       BNE.w 'loop
0002AC08 <AmiBlitz3.ab3@12616>      TST.b d0
0002AC0C <AmiBlitz3.ab3@12617>      BPL 'loop_l10
0002AC0E <AmiBlitz3.ab3@12618>      SUBQ.l #1,a5
0002AC12 <AmiBlitz3.ab3@12619>      BSR get1byte_
0002AC16 <AmiBlitz3.ab3@12627>    CMP.w #$20,D0
0002AC1A <AmiBlitz3.ab3@12628>    BNE.w 'done
0002AC1C <AmiBlitz3.ab3@12630>    MOVEQ #0,d0
0002AC22 <AmiBlitz3.ab3@12631>   MOVE.l a5,lastsourcepos
0002AC24 <AmiBlitz3.ab3@12634>   MOVE.b (a5)+,d0                                          ;neuneu
0002AC28 <AmiBlitz3.ab3@12635>   BPL 'loop_l101
0002AC2A <AmiBlitz3.ab3@12636>   ASL.w #8,d0
0002AC2C <AmiBlitz3.ab3@12637>   MOVE.b (a5)+,d0
0002AC32 <AmiBlitz3.ab3@12640>   TST.w instringon
0002AC36 <AmiBlitz3.ab3@12641>   BNE 'loop_l102
0002AC3A <AmiBlitz3.ab3@12642>   CMP.b #$20,d0
0002AC3E <AmiBlitz3.ab3@12643>   BEQ 'loop_l103
0002AC42 <AmiBlitz3.ab3@12644>   CMP.b #";",d0
0002AC46 <AmiBlitz3.ab3@12645>   BNE 'loop_l102
0002AC48 <AmiBlitz3.ab3@12648>   MOVE.b (A5)+,D0
0002AC4C <AmiBlitz3.ab3@12649>              BEQ 'loop_l1
0002AC50 <AmiBlitz3.ab3@12650>              CMP.b #":",d0
0002AC54 <AmiBlitz3.ab3@12651>              BNE 'loop_lr                         ;:@
0002AC58 <AmiBlitz3.ab3@12652>              CMP.b #"@",(a5)
0002AC5C <AmiBlitz3.ab3@12653>              BNE 'loop_lr
0002AC5E <AmiBlitz3.ab3@12654>              ADDQ #1,a5
0002AC64 <AmiBlitz3.ab3@12658>   MOVE.w d0,lastchar
0002AC68 <AmiBlitz3.ab3@12664>   CMP.b #";",d0
0002AC6C <AmiBlitz3.ab3@12665>   BEQ 'done_l11
0002AC6E <AmiBlitz3.ab3@12667>   CLR.b (A1)
0002AC70 <AmiBlitz3.ab3@12671>   TST.w D2
0002AC72 <AmiBlitz3.ab3@12672>  RTS
0002AC74 <AmiBlitz3.ab3@12676>   CLR.b (a1)
0002AC76 <AmiBlitz3.ab3@12677>   MOVEQ #0,d0
0002AC7C <AmiBlitz3.ab3@12678>   MOVE.w d0,lastchar
0002AC7E <AmiBlitz3.ab3@12681>   TST.w D2
0002AC80 <AmiBlitz3.ab3@12682> RTS
0002AC82 <AmiBlitz3.ab3@12689>   MOVE.l (A2),D0
0002AC86 <AmiBlitz3.ab3@12692>   BEQ.w 'here
0002AC88 <AmiBlitz3.ab3@12693>   MOVEA.l D0,A2
0002AC8C <AmiBlitz3.ab3@12694>  BRA.w 'loop
0002AC90 <AmiBlitz3.ab3@12697> BRA.w reget
0002AC92 <AmiBlitz3.ab3@12703>   MOVE.l (A2),-(A7)
0002AC96 <AmiBlitz3.ab3@12704>   BSR.w addlabel
0002AC98 <AmiBlitz3.ab3@12705>   MOVE.l (A7)+,(A2)
0002AC9A <AmiBlitz3.ab3@12706> RTS
0002ACA0 <AmiBlitz3.ab3@12711>   CLR.l fp0addr
0002ACA6 <AmiBlitz3.ab3@12712>   TST.w dirmode
0002ACAA <AmiBlitz3.ab3@12713>    BNE.w illdirerr
0002ACAC <AmiBlitz3.ab3@12714>   MOVEQ.l #$00,D0
0002ACAE <AmiBlitz3.ab3@12715>   MOVE.w D7,D0
0002ACB0 <AmiBlitz3.ab3@12716>   ADD.w D2,D0
0002ACB2 <AmiBlitz3.ab3@12717>   ADDQ.w #1,D0
0002ACB4 <AmiBlitz3.ab3@12718>   MOVE.w D0,D2
0002ACB6 <AmiBlitz3.ab3@12719>   ADDQ.l #2,d0
0002ACB8 <AmiBlitz3.ab3@12720>   MOVEQ.l #$01,D1
0002ACBE <AmiBlitz3.ab3@12721>   MOVEA.l _execbase,A6
0002ACC4 <AmiBlitz3.ab3@12722>   MOVE.l mempool2,a0
0002ACC8 <AmiBlitz3.ab3@12723>   JSR _AllocPooled(a6)
0002ACCE <AmiBlitz3.ab3@12725>   MOVE.l lastlabel,a2
0002ACD0 <AmiBlitz3.ab3@12726>   MOVE.l D0,(A2)
0002ACD2 <AmiBlitz3.ab3@12727>   MOVE.l d0,a0
0002ACD4 <AmiBlitz3.ab3@12728>   CLR.l (a0)
0002ACDA <AmiBlitz3.ab3@12729>   MOVE.l a0,lastlabel
0002ACDC <AmiBlitz3.ab3@12730>   MOVE.l d0,A2
0002ACE0 <AmiBlitz3.ab3@12731>   LEA -$1(A0,D7.W),A0
0002ACE2 <AmiBlitz3.ab3@12732>   MOVE.b D2,(A0)+
0002ACE8 <AmiBlitz3.ab3@12733>   LEA ptr_parameterstore,A1
0002ACEA <AmiBlitz3.ab3@12734>   MOVEQ #0,d0
0002ACEC <AmiBlitz3.ab3@12735>   MOVEQ #0,d1
0002ACEE <AmiBlitz3.ab3@12738>   MOVE.b (A1)+,d1
0002ACF2 <AmiBlitz3.ab3@12739>    BEQ 'l1
0002ACF8 <AmiBlitz3.ab3@12740>    !hashalgo
0002ACFA <AmiBlitz3.ab3@12741>    MOVE.b d1,(A0)+
0002ACFE <AmiBlitz3.ab3@12742>  BRA 'loop2a
0002AD00 <AmiBlitz3.ab3@12745>    CLR.b (a0)+
0002AD06 <AmiBlitz3.ab3@12746>    LEA labelhash,a0
0002AD0C <AmiBlitz3.ab3@12747>    AND.l #hashsize,d0
0002AD0E <AmiBlitz3.ab3@12748>    ASL.l #2,d0
0002AD12 <AmiBlitz3.ab3@12749>    MOVE.l 0(a0,d0),d1
0002AD16 <AmiBlitz3.ab3@12750>    MOVE.l d1,$c(a2)
0002AD1A <AmiBlitz3.ab3@12751>    MOVE.l a2,0(a0,d0)
0002AD1C <AmiBlitz3.ab3@12752>    MOVEQ #0,d0
0002AD20 <AmiBlitz3.ab3@12753> BRA.w reget
0002AD26 <AmiBlitz3.ab3@12757>    TST.b newvariable
0002AD2A <AmiBlitz3.ab3@12758>    BNE addlabel
0002AD30 <AmiBlitz3.ab3@12761>   TST.w dirmode
0002AD34 <AmiBlitz3.ab3@12762>    BNE.w illdirerr
0002AD36 <AmiBlitz3.ab3@12763>   MOVEQ.l #$00,D0
0002AD38 <AmiBlitz3.ab3@12764>   MOVE.w D7,D0
0002AD3A <AmiBlitz3.ab3@12765>   ADD.w D2,D0
0002AD3C <AmiBlitz3.ab3@12766>   ADDQ.w #1,D0
0002AD3E <AmiBlitz3.ab3@12767>   MOVE.w D0,D2
0002AD40 <AmiBlitz3.ab3@12768>   MOVEQ.l #$01,D1
0002AD46 <AmiBlitz3.ab3@12769>   MOVEA.l _execbase,A6
0002AD4C <AmiBlitz3.ab3@12770>   MOVE.l mempool2,a0
0002AD50 <AmiBlitz3.ab3@12771>   JSR _AllocPooled(a6)
0002AD52 <AmiBlitz3.ab3@12772>   MOVEA.l D0,A0
0002AD58 <AmiBlitz3.ab3@12774>   LEA varbase,a2
0002AD5A <AmiBlitz3.ab3@12775>   MOVE.l (a2),(a0)
0002AD5C <AmiBlitz3.ab3@12776>   MOVE.l A0,(A2)
0002AD5E <AmiBlitz3.ab3@12777>   MOVEA.l A0,A2
0002AD62 <AmiBlitz3.ab3@12778>   LEA -$1(A0,D7.W),A0
0002AD64 <AmiBlitz3.ab3@12779>   MOVE.b D2,(A0)+
0002AD6A <AmiBlitz3.ab3@12780>   LEA ptr_parameterstore,A1
0002AD6C <AmiBlitz3.ab3@12781>   MOVEQ #0,d0
0002AD6E <AmiBlitz3.ab3@12782>   MOVEQ #0,d1
0002AD70 <AmiBlitz3.ab3@12785>   MOVE.b (A1)+,d1
0002AD74 <AmiBlitz3.ab3@12786>    BEQ 'l12
0002AD7A <AmiBlitz3.ab3@12787>    !hashalgo
0002AD7C <AmiBlitz3.ab3@12788>    MOVE.b d1,(A0)+
0002AD80 <AmiBlitz3.ab3@12789>  BRA 'l11
0002AD82 <AmiBlitz3.ab3@12792>   CLR.b (a0)+
0002AD88 <AmiBlitz3.ab3@12793>   LEA variablehash,a0
0002AD8E <AmiBlitz3.ab3@12794>    AND.l #hashsize,d0
0002AD90 <AmiBlitz3.ab3@12795>    ASL.l #2,d0
0002AD94 <AmiBlitz3.ab3@12796>    MOVE.l 0(a0,d0),d1
0002AD98 <AmiBlitz3.ab3@12797>    MOVE.l d1,$e(a2)
0002AD9C <AmiBlitz3.ab3@12798>    MOVE.l a2,0(a0,d0)
0002AD9E <AmiBlitz3.ab3@12799>    MOVEQ #0,d0
0002ADA2 <AmiBlitz3.ab3@12800> BRA.w reget
0002ADA8 <AmiBlitz3.ab3@12804>   TST.w dirmode
0002ADAC <AmiBlitz3.ab3@12805>    BNE.w illdirerr
0002ADAE <AmiBlitz3.ab3@12812>   MOVEQ.l #$00,D0
0002ADB0 <AmiBlitz3.ab3@12813>   MOVE.w D7,D0
0002ADB2 <AmiBlitz3.ab3@12814>   ADD.w D2,D0
0002ADB4 <AmiBlitz3.ab3@12815>   ADDQ.w #1,D0
0002ADB6 <AmiBlitz3.ab3@12816>   MOVE.w D0,D2
0002ADB8 <AmiBlitz3.ab3@12817>   MOVEQ.l #$01,D1
0002ADBE <AmiBlitz3.ab3@12818>   MOVEA.l _execbase,A6
0002ADC4 <AmiBlitz3.ab3@12820>   MOVE.l mempool2,a0
0002ADC8 <AmiBlitz3.ab3@12821>   JSR _AllocPooled(a6)
0002ADCA <AmiBlitz3.ab3@12825>   MOVEA.l D0,A0
0002ADCC <AmiBlitz3.ab3@12826>   MOVE.l A0,(A2)
0002ADCE <AmiBlitz3.ab3@12827>   CLR.l (a0)              ;clear next
0002ADD2 <AmiBlitz3.ab3@12829>   CLR.l 8(a0)
0002ADD4 <AmiBlitz3.ab3@12830>   MOVEA.l A0,A2
0002ADD8 <AmiBlitz3.ab3@12832>   LEA -$1(A0,D7.W),A0
0002ADDA <AmiBlitz3.ab3@12833>   MOVE.b D2,(A0)+          ;put in struct length
0002ADE0 <AmiBlitz3.ab3@12834>   LEA ptr_parameterstore,A1
0002ADE2 <AmiBlitz3.ab3@12836>   MOVEQ #0,d0
0002ADE4 <AmiBlitz3.ab3@12837>   MOVEQ #0,d1
0002ADE6 <AmiBlitz3.ab3@12841> 
0002ADE8 <AmiBlitz3.ab3@12842>   MOVE.b d1,(A0)+       ; "
0002ADEC <AmiBlitz3.ab3@12843>   BNE.w 'loop2
0002ADF0 <AmiBlitz3.ab3@12844> BRA.w reget
0002ADF2 <AmiBlitz3.ab3@12848>   MOVEQ.l #$13,D7
0002ADF8 <AmiBlitz3.ab3@12849>   LEA constantbase,A2
0002ADFC <AmiBlitz3.ab3@12850> BRA.w findlab
0002ADFE <AmiBlitz3.ab3@12854>   MOVEQ.l #$05+8,D7        ; was #5                                ;#5,d7 org source
0002AE04 <AmiBlitz3.ab3@12855>   LEA xinclude_base,A2
0002AE08 <AmiBlitz3.ab3@12856> BRA.w findlab
0002AE0A <AmiBlitz3.ab3@12860>   MOVEQ.l #$09,D7
0002AE10 <AmiBlitz3.ab3@12861>   LEA firstconst,A2
0002AE14 <AmiBlitz3.ab3@12862> BRA.w findlab
0002AE16 <AmiBlitz3.ab3@12866>   MOVEQ.l #$0d,D7                                          ;find macro
0002AE1C <AmiBlitz3.ab3@12867>   LEA macrobase,A2
0002AE20 <AmiBlitz3.ab3@12868> BRA.w findlab
0002AE26 <AmiBlitz3.ab3@12872>   LEA labelhash,A2
0002AE28 <AmiBlitz3.ab3@12873>   MOVEQ.l #$13,D7
0002AE2A <AmiBlitz3.ab3@12875>   EXT.l d2
0002AE30 <AmiBlitz3.ab3@12876>   LEA ptr_parameterstore,A0
0002AE32 <AmiBlitz3.ab3@12877>   MOVEQ #0,d0
0002AE34 <AmiBlitz3.ab3@12878>   MOVEQ #0,d1
0002AE36 <AmiBlitz3.ab3@12881>     MOVE.b (a0)+,d1
0002AE3A <AmiBlitz3.ab3@12882>     BEQ 'l15
0002AE40 <AmiBlitz3.ab3@12883>     !hashalgo
0002AE44 <AmiBlitz3.ab3@12884>  BRA 'l20
0002AE4A <AmiBlitz3.ab3@12887>   AND.l #hashsize,d0
0002AE4C <AmiBlitz3.ab3@12888>   ASL.l #2,d0
0002AE50 <AmiBlitz3.ab3@12889>   MOVE.l 0(a2,d0),d0
0002AE54 <AmiBlitz3.ab3@12890>  BRA 'l11
0002AE58 <AmiBlitz3.ab3@12893>   MOVE.l $c(A2),D0          ;  begin copy of findlabel
0002AE5C <AmiBlitz3.ab3@12896>   BEQ findlab_no
0002AE5E <AmiBlitz3.ab3@12897>   MOVEA.l D0,A2
0002AE60 <AmiBlitz3.ab3@12898>   MOVEQ.l #$00,D0
0002AE64 <AmiBlitz3.ab3@12899>   MOVE.b -$1(A2,D7.l),D0
0002AE6A <AmiBlitz3.ab3@12900>   LEA ptr_parameterstore,A0
0002AE6C <AmiBlitz3.ab3@12901>   SUB.l D7,D0
0002AE6E <AmiBlitz3.ab3@12902>   SUBQ.l #1,D0
0002AE70 <AmiBlitz3.ab3@12903>   CMP.l D0,D2
0002AE74 <AmiBlitz3.ab3@12904>    BNE.b 'loop
0002AE78 <AmiBlitz3.ab3@12905>   LEA $0(A2,D7.W),A1
0002AE7A <AmiBlitz3.ab3@12906>   SUBQ.l #1,D0
0002AE7C <AmiBlitz3.ab3@12909>     MOVE.b (a1)+,d1
0002AE7E <AmiBlitz3.ab3@12910>     CMP.b (a0)+,d1
0002AE82 <AmiBlitz3.ab3@12912>     BNE.b 'loop
0002AE86 <AmiBlitz3.ab3@12913>   DBF D0,'loop2
0002AE8A <AmiBlitz3.ab3@12915>   BSR.w reget
0002AE8C <AmiBlitz3.ab3@12916>   CMP.w D0,D0
0002AE8E <AmiBlitz3.ab3@12917> RTS                     ; end copy of findlab
0002AE90 <AmiBlitz3.ab3@12921>   MOVEQ.l #$0B,D7
0002AE94 <AmiBlitz3.ab3@12922> BRA.w findlab
0002AE9A <AmiBlitz3.ab3@12926>   LEA firstproc,A2
0002AEA0 <AmiBlitz3.ab3@12927>   MOVE.l #$21+#funcentry_extend,D7    ; was #33,
0002AEA4 <AmiBlitz3.ab3@12928> BRA findlab
0002AEAA <AmiBlitz3.ab3@12932>   LEA firstfor,A2
0002AEAC <AmiBlitz3.ab3@12933>   MOVEQ.l #$11,D7
0002AEB0 <AmiBlitz3.ab3@12934> BRA.w findlab
0002AEB2 <AmiBlitz3.ab3@12938>   MOVEQ.l #$0F,D7
0002AEB6 <AmiBlitz3.ab3@12940> BRA.w findlab
0002AEB8 <AmiBlitz3.ab3@12944>   MOVEQ.l #$0F+4,D7
0002AEBE <AmiBlitz3.ab3@12945>   TST.b newvariable
0002AEC2 <AmiBlitz3.ab3@12946>    BNE.w findlab
0002AEC8 <AmiBlitz3.ab3@12947>   LEA variablehash,A2
0002AECE <AmiBlitz3.ab3@12948>   LEA ptr_parameterstore,A0
0002AED0 <AmiBlitz3.ab3@12949>   MOVEQ #0,d0
0002AED2 <AmiBlitz3.ab3@12950>   MOVEQ #0,d1
0002AED4 <AmiBlitz3.ab3@12953>     MOVE.b (a0)+,d1
0002AED8 <AmiBlitz3.ab3@12954>     BEQ 'l15
0002AEDE <AmiBlitz3.ab3@12955>     !hashalgo
0002AEE2 <AmiBlitz3.ab3@12956>  BRA 'l20
0002AEE8 <AmiBlitz3.ab3@12959>   AND.l #hashsize,d0
0002AEEA <AmiBlitz3.ab3@12960>   ASL.l #2,d0
0002AEEE <AmiBlitz3.ab3@12961>   MOVE.l 0(a2,d0),d0
0002AEF2 <AmiBlitz3.ab3@12962>  BRA 'l11
0002AEF6 <AmiBlitz3.ab3@12965>   MOVE.l $e(A2),D0                                         ;find label
0002AEFA <AmiBlitz3.ab3@12968>   BEQ findlab_no
0002AEFC <AmiBlitz3.ab3@12969>   MOVEA.l D0,A2
0002AEFE <AmiBlitz3.ab3@12970>   MOVEQ.l #$00,D0
0002AF02 <AmiBlitz3.ab3@12971>   MOVE.b -$1(A2,D7.W),D0
0002AF08 <AmiBlitz3.ab3@12972>   LEA ptr_parameterstore,A0
0002AF0A <AmiBlitz3.ab3@12973>   SUB.w D7,D0
0002AF0C <AmiBlitz3.ab3@12974>   SUBQ.l #1,D0
0002AF0E <AmiBlitz3.ab3@12975>   CMP.w D0,D2
0002AF12 <AmiBlitz3.ab3@12976>    BNE.b 'l10
0002AF16 <AmiBlitz3.ab3@12977>   LEA $0(A2,D7.W),A1
0002AF18 <AmiBlitz3.ab3@12978>   SUBQ.l #1,D0
0002AF1A <AmiBlitz3.ab3@12981>     MOVE.b (a1)+,d1
0002AF1C <AmiBlitz3.ab3@12982>     CMP.b (a0)+,d1
0002AF20 <AmiBlitz3.ab3@12984>     BNE.b 'l10
0002AF24 <AmiBlitz3.ab3@12985>   DBF D0,'l201
0002AF28 <AmiBlitz3.ab3@12987>   BSR.w reget
0002AF2A <AmiBlitz3.ab3@12988>   CMP.w D0,D0
0002AF2C <AmiBlitz3.ab3@12989> RTS
0002AF2E <AmiBlitz3.ab3@13002>     MOVE.l (A2),D0                                         ;find label
0002AF32 <AmiBlitz3.ab3@13003>      BEQ.b findlab_no
0002AF34 <AmiBlitz3.ab3@13004>     MOVEA.l D0,A2
0002AF36 <AmiBlitz3.ab3@13005>     MOVEQ.l #$00,D0
0002AF3A <AmiBlitz3.ab3@13006>     MOVE.b -$1(A2,D7.W),D0
0002AF3C <AmiBlitz3.ab3@13007>     SUB.l D7,D0
0002AF3E <AmiBlitz3.ab3@13008>     SUBQ.l #1,D0
0002AF40 <AmiBlitz3.ab3@13009>   CMP.w D0,D2
0002AF44 <AmiBlitz3.ab3@13010>   BNE.b 'loop
0002AF48 <AmiBlitz3.ab3@13012>   LEA $0(A2,D7.W),A1
0002AF4E <AmiBlitz3.ab3@13013>   LEA ptr_parameterstore,A0
0002AF50 <AmiBlitz3.ab3@13014>   SUBQ.l #1,D0
0002AF52 <AmiBlitz3.ab3@13018>     MOVE.b (a1)+,d1
0002AF54 <AmiBlitz3.ab3@13019>     CMP.b (a0)+,d1
0002AF58 <AmiBlitz3.ab3@13022>     BNE.b 'loop
0002AF5C <AmiBlitz3.ab3@13023>   DBF D0,'loop2
0002AF60 <AmiBlitz3.ab3@13025>   BSR.w reget
0002AF62 <AmiBlitz3.ab3@13026>   CMP.w D0,D0
0002AF64 <AmiBlitz3.ab3@13027>  RTS
0002AF68 <AmiBlitz3.ab3@13030>   BSR.w reget
0002AF6A <AmiBlitz3.ab3@13031>   MOVEQ.l #-$01,D1
0002AF6C <AmiBlitz3.ab3@13032> RTS
0002AF72 <AmiBlitz3.ab3@13036>   MOVEA.l alllocals,A4
0002AF78 <AmiBlitz3.ab3@13037>   CLR.l alllocals
0002AF7C <AmiBlitz3.ab3@13043>     CMPA.w #$0,A4
0002AF80 <AmiBlitz3.ab3@13044>      BEQ.b 'done
0002AF84 <AmiBlitz3.ab3@13045>     MOVEA.l $4(A4),A3
0002AF88 <AmiBlitz3.ab3@13047>     MOVEA.l $8(A4),A3
0002AF8A <AmiBlitz3.ab3@13049>     MOVEA.l A4,A1
0002AF8C <AmiBlitz3.ab3@13050>     MOVEA.l (A4),A4
0002AF8E <AmiBlitz3.ab3@13051>     MOVEQ.l #$0C,D0
0002AF94 <AmiBlitz3.ab3@13052>     MOVEA.l _execbase,A6
0002AF9A <AmiBlitz3.ab3@13054>     MOVE.l mempool,a0
0002AF9E <AmiBlitz3.ab3@13055>     JSR _FreePooled(A6)
0002AFA2 <AmiBlitz3.ab3@13058>  BRA.b 'loop
0002AFA8 <AmiBlitz3.ab3@13062>   CLR.l firstglob                                          ;fix 2*aclearallvar called
0002AFAE <AmiBlitz3.ab3@13063>   CLR.l firstlocal
0002AFB4 <AmiBlitz3.ab3@13064>   CLR.l sharebase
0002AFBA <AmiBlitz3.ab3@13065>   TST.l mempool2
0002AFBE <AmiBlitz3.ab3@13066>   BEQ 'done_l10
0002AFC4 <AmiBlitz3.ab3@13068>   MOVEA.l _execbase,A6
0002AFCA <AmiBlitz3.ab3@13069>   MOVE.l mempool2,a0
0002AFD0 <AmiBlitz3.ab3@13070>   CLR.l mempool2
0002AFD4 <AmiBlitz3.ab3@13071>   JSR _DeletePool(a6)
0002AFDA <AmiBlitz3.ab3@13074>   MOVE.l _execbase,a6
0002AFE0 <AmiBlitz3.ab3@13075>   MOVE.l #$10000,d0
0002AFE6 <AmiBlitz3.ab3@13076>   MOVE.l #80000,d1
0002AFE8 <AmiBlitz3.ab3@13077>   MOVE.l d1,d2
0002AFEC <AmiBlitz3.ab3@13078>   JSR _CreatePool(a6)
0002AFF2 <AmiBlitz3.ab3@13079>   MOVE.l d0,mempool2
0002AFF4 <AmiBlitz3.ab3@13081> RTS
0002AFF8 <AmiBlitz3.ab3@13086>   CMPA.w #$0,A3
0002AFFC <AmiBlitz3.ab3@13087>    BEQ.w 'done
0002AFFE <AmiBlitz3.ab3@13088>   MOVEA.l A3,A1
0002B000 <AmiBlitz3.ab3@13089>   MOVEA.l (A3),A3
0002B002 <AmiBlitz3.ab3@13090>   MOVEQ.l #$00,D0
0002B006 <AmiBlitz3.ab3@13091>   MOVE.b $E(A1),D0
0002B00C <AmiBlitz3.ab3@13092>   MOVEA.l _execbase,A6
0002B012 <AmiBlitz3.ab3@13094>   MOVE.l mempool2,a0
0002B016 <AmiBlitz3.ab3@13095>   JSR _FreePooled(A6)
0002B01A <AmiBlitz3.ab3@13098>  BRA.w freevars
0002B01E <AmiBlitz3.ab3@13102>     CMPA.w #$0,A3
0002B022 <AmiBlitz3.ab3@13103>      BEQ.w 'done
0002B024 <AmiBlitz3.ab3@13104>     MOVEA.l A3,A1
0002B026 <AmiBlitz3.ab3@13105>     MOVEA.l (A3),A3
0002B028 <AmiBlitz3.ab3@13106>     MOVEQ.l #$00,D0
0002B02C <AmiBlitz3.ab3@13107>     MOVE.b $E+4(A1),D0
0002B032 <AmiBlitz3.ab3@13108>     MOVEA.l _execbase,A6
0002B038 <AmiBlitz3.ab3@13109>     MOVE.l mempool2,a0
0002B03C <AmiBlitz3.ab3@13110>     JSR _FreePooled(A6)
0002B040 <AmiBlitz3.ab3@13111>  BRA.w 'freevarsb
0002B042 <AmiBlitz3.ab3@13115> RTS
0002B048 <AmiBlitz3.ab3@13121>   MOVEA.l currentlabeladdr,A0
0002B04E <AmiBlitz3.ab3@13122>   MOVE.l a0,lastlabel
0002B050 <AmiBlitz3.ab3@13123>   MOVEA.l (A0),A2
0002B052 <AmiBlitz3.ab3@13124>   CLR.l (A0)
0002B058 <AmiBlitz3.ab3@13125>   MOVEA.l _execbase,A6
0002B05C <AmiBlitz3.ab3@13128>   CMPA.w #$0,A2
0002B060 <AmiBlitz3.ab3@13129>    BEQ.w 'done
0002B064 <AmiBlitz3.ab3@13130>   MOVE.l $4(A2),D0
0002B068 <AmiBlitz3.ab3@13131>   BTST #$0,D0
0002B06C <AmiBlitz3.ab3@13132>    BNE.w 'skip
0002B06E <AmiBlitz3.ab3@13133>   MOVEA.l D0,A3
0002B072 <AmiBlitz3.ab3@13136>     CMPA.w #$0,A3
0002B076 <AmiBlitz3.ab3@13137>      BEQ.w 'skip
0002B078 <AmiBlitz3.ab3@13138>     MOVEA.l A3,A1
0002B07A <AmiBlitz3.ab3@13139>     MOVEA.l (A3),A3
0002B07C <AmiBlitz3.ab3@13140>     MOVEQ.l #$0C+2,D0     ; was #12                                 ;cancel fix
0002B082 <AmiBlitz3.ab3@13142>     MOVE.l mempool,a0
0002B086 <AmiBlitz3.ab3@13143>     JSR _FreePooled(A6)
0002B08A <AmiBlitz3.ab3@13146>  BRA.w 'loop2
0002B08C <AmiBlitz3.ab3@13149>   MOVEQ.l #$00,D0
0002B090 <AmiBlitz3.ab3@13150>   MOVE.b $12(A2),D0
0002B092 <AmiBlitz3.ab3@13151>   MOVEA.l A2,A1
0002B094 <AmiBlitz3.ab3@13152>   MOVEA.l (A2),A2
0002B09A <AmiBlitz3.ab3@13154>   MOVE.l mempool2,a0
0002B09E <AmiBlitz3.ab3@13158>  BRA.w 'loop
0002B0A0 <AmiBlitz3.ab3@13161> RTS
0002B0A6 <AmiBlitz3.ab3@13165>   MOVEA.l firstpend,A3
0002B0AC <AmiBlitz3.ab3@13166>   CLR.l firstpend
0002B0B2 <AmiBlitz3.ab3@13167>   MOVEA.l _execbase,A6
0002B0B6 <AmiBlitz3.ab3@13170>     CMPA.w #$0,A3
0002B0BA <AmiBlitz3.ab3@13171>      BEQ.w 'done
0002B0BC <AmiBlitz3.ab3@13172>     MOVEA.l A3,A1
0002B0BE <AmiBlitz3.ab3@13173>     MOVEQ.l #$08,D0
0002B0C0 <AmiBlitz3.ab3@13174>     MOVEA.l (A3),A3
0002B0C6 <AmiBlitz3.ab3@13176>     MOVE.l mempool,a0
0002B0CA <AmiBlitz3.ab3@13177>     JSR _FreePooled(A6)
0002B0CE <AmiBlitz3.ab3@13180>  BRA.w 'fpnd2
0002B0D0 <AmiBlitz3.ab3@13183> RTS
0002B0D6 <AmiBlitz3.ab3@13189>   MOVEA.l firstproc,A2
0002B0DC <AmiBlitz3.ab3@13190>   CLR.l firstproc
0002B0E2 <AmiBlitz3.ab3@13191>   MOVEA.l _execbase,A6
0002B0E6 <AmiBlitz3.ab3@13194>     CMPA.w #$0,A2
0002B0EA <AmiBlitz3.ab3@13195>      BEQ.w 'done
0002B0EC <AmiBlitz3.ab3@13196>     MOVEA.l A2,A1
0002B0EE <AmiBlitz3.ab3@13197>     MOVEA.l (A2),A2
0002B0F0 <AmiBlitz3.ab3@13198>     MOVEQ.l #$00,D0
0002B0F4 <AmiBlitz3.ab3@13199>     MOVE.b $20+#funcentry_extend(A1),D0    ; was 32(a1),
0002B0FA <AmiBlitz3.ab3@13201>     MOVE.l mempool2,a0
0002B0FE <AmiBlitz3.ab3@13202>     JSR _FreePooled(A6)
0002B102 <AmiBlitz3.ab3@13205>  BRA.w 'loop
0002B104 <AmiBlitz3.ab3@13208> RTS
0002B108 <AmiBlitz3.ab3@13213>   CMPA.w #$0,A2
0002B10C <AmiBlitz3.ab3@13214>    BEQ.w 'done
0002B110 <AmiBlitz3.ab3@13215>   MOVEA.l $4(A2),A3
0002B114 <AmiBlitz3.ab3@13216>   CMPA.w #$FF,A3
0002B118 <AmiBlitz3.ab3@13217>    BEQ.w 'noway
0002B11C <AmiBlitz3.ab3@13221>    BSR.w freevars
0002B11E <AmiBlitz3.ab3@13224>     MOVEA.l A2,A1
0002B120 <AmiBlitz3.ab3@13225>     MOVEA.l (A2),A2
0002B122 <AmiBlitz3.ab3@13226>     MOVEQ.l #$00,D0
0002B126 <AmiBlitz3.ab3@13227>     MOVE.b $A(A1),D0
0002B12C <AmiBlitz3.ab3@13228>     MOVEA.l _execbase,A6
0002B132 <AmiBlitz3.ab3@13230>     MOVE.l mempool2,a0
0002B136 <AmiBlitz3.ab3@13231>     JSR _FreePooled(A6)
0002B13A <AmiBlitz3.ab3@13234>  BRA.w freetypes
0002B13C <AmiBlitz3.ab3@13237> RTS
0002B142 <AmiBlitz3.ab3@13246>   JSR usevars
0002B148 <AmiBlitz3.ab3@13248>   CLR.w notshared
0002B14E <AmiBlitz3.ab3@13249>   CLR.w varmode           ;local mode
0002B154 <AmiBlitz3.ab3@13250>   MOVE.w proceduremode,D1
0002B158 <AmiBlitz3.ab3@13251>    BNE.w fvarlocal
0002B15E <AmiBlitz3.ab3@13253>   LEA varbase,A2
0002B164 <AmiBlitz3.ab3@13255>   LEA ptr_parameterstore,a0
0002B168 <AmiBlitz3.ab3@13256>   CMP.b #$22,(a0)
0002B16C <AmiBlitz3.ab3@13257>   BNE fvarback
0002B16E <AmiBlitz3.ab3@13258>   MOVEQ #0,d0
0002B174 <AmiBlitz3.ab3@13259>  JMP error
0002B178 <AmiBlitz3.ab3@13264>   BSR.w findvariable
0002B17C <AmiBlitz3.ab3@13267>   BNE.w fvaradd
0002B182 <AmiBlitz3.ab3@13272>   MOVE.b flagmask+1,D1
0002B186 <AmiBlitz3.ab3@13273>   MOVE.b $7(A2),D3
0002B188 <AmiBlitz3.ab3@13274>   EOR.b D3,D1
0002B18C <AmiBlitz3.ab3@13276>   BNE 'l2
0002B194 <AmiBlitz3.ab3@13277>   CMP.b #2,nowdeclare
0002B198 <AmiBlitz3.ab3@13278>   BEQ errormsg_declaredtwice
0002B19C <AmiBlitz3.ab3@13279>  BRA.w fvarfound
0002B1A0 <AmiBlitz3.ab3@13283>   BSR.w findlab
0002B1A4 <AmiBlitz3.ab3@13285>   BNE 'l1
0002B1AC <AmiBlitz3.ab3@13286>   CMP.b #2,nowdeclare
0002B1B0 <AmiBlitz3.ab3@13287>   BEQ errormsg_declaredtwice
0002B1B2 <AmiBlitz3.ab3@13288>   CMP.w d0,d0
0002B1B6 <AmiBlitz3.ab3@13292>  BRA.w 'more
0002B1B8 <AmiBlitz3.ab3@13296>    MOVE.l a2,-(a7)
0002B1BE <AmiBlitz3.ab3@13297>    LEA sharebase,a2
0002B1C0 <AmiBlitz3.ab3@13298>    MOVEQ #$f+4,d7
0002B1C4 <AmiBlitz3.ab3@13299>    BSR.w findlab
0002B1C8 <AmiBlitz3.ab3@13300>    BEQ 'l2x
0002B1CA <AmiBlitz3.ab3@13301>    MOVE.l (a7)+,a2
0002B1CE <AmiBlitz3.ab3@13302>  BRA 'cont
0002B1D0 <AmiBlitz3.ab3@13305>   ADDQ.l #4,a7
0002B1D6 <AmiBlitz3.ab3@13306>   CLR.w varmode
0002B1DC <AmiBlitz3.ab3@13307>   MOVE.b flagmask+1,D1
0002B1E0 <AmiBlitz3.ab3@13308>   MOVE.b $7(A2),D3
0002B1E2 <AmiBlitz3.ab3@13309>   EOR.b D3,D1
0002B1E6 <AmiBlitz3.ab3@13310>   BNE vardeclareerr
0002B1EA <AmiBlitz3.ab3@13311>  BRA fvarfound
0002B1F0 <AmiBlitz3.ab3@13315>    MOVE.w nonew,D1
0002B1F4 <AmiBlitz3.ab3@13316>    BNE.w nonewerr
0002B1FA <AmiBlitz3.ab3@13318>    TST.b nowdeclare
0002B1FE <AmiBlitz3.ab3@13319>    BNE 'l2b
0002B204 <AmiBlitz3.ab3@13320>    TST.b declare2
0002B208 <AmiBlitz3.ab3@13321>    BEQ 'l1b
0002B20C <AmiBlitz3.ab3@13322>    CMP.b #$2e,d0
0002B210 <AmiBlitz3.ab3@13323>    BEQ 'l2b
0002B214 <AmiBlitz3.ab3@13324>    CMP.b #"$",d0
0002B218 <AmiBlitz3.ab3@13325>    BEQ 'l2b
0002B21C <AmiBlitz3.ab3@13326>  BRA vardeclareerr
0002B222 <AmiBlitz3.ab3@13329>   TST.b declare
0002B226 <AmiBlitz3.ab3@13330>    BNE vardeclareerr
0002B22A <AmiBlitz3.ab3@13334>   BSR.w addvariable      ;create var
0002B230 <AmiBlitz3.ab3@13335>   NOT.w notshared        ;set added flag
0002B232 <AmiBlitz3.ab3@13336>   MOVEA.l A2,A3
0002B238 <AmiBlitz3.ab3@13337>   MOVEA.l defaulttype,A2
0002B23C <AmiBlitz3.ab3@13338>   CMP.w #$2E,D0         ;'.'
0002B240 <AmiBlitz3.ab3@13339>    BEQ.w 'clapton
0002B244 <AmiBlitz3.ab3@13340>   CMP.w #$24,D0         ;'$'
0002B248 <AmiBlitz3.ab3@13341>    BNE.w 'usedef
0002B24E <AmiBlitz3.ab3@13342>   LEA newtype_string,A2
0002B252 <AmiBlitz3.ab3@13343>    BSR.w get1bytemain
0002B256 <AmiBlitz3.ab3@13344>  BRA.w 'usedef
0002B25A <AmiBlitz3.ab3@13347>   BSR.w getparameter2
0002B260 <AmiBlitz3.ab3@13348>   LEA newtypebase,A2
0002B264 <AmiBlitz3.ab3@13349>    BSR.w findtype
0002B268 <AmiBlitz3.ab3@13350>    BNE.w notypeerr
0002B26E <AmiBlitz3.ab3@13353>   CMPA.l #newtype_byte,A2
0002B272 <AmiBlitz3.ab3@13354>    BEQ.w 'byte
0002B278 <AmiBlitz3.ab3@13355>   MOVE.w varmode,D1
0002B27C <AmiBlitz3.ab3@13356>    BNE.w 'pit
0002B282 <AmiBlitz3.ab3@13357>   ADDQ.w #1,globalvarpointer
0002B28A <AmiBlitz3.ab3@13360>   BCLR #$0,globalvarpointer+1
0002B28E <AmiBlitz3.ab3@13363>   MOVE.l A2,$A(A3)           ;set type
0002B296 <AmiBlitz3.ab3@13364>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002B298 <AmiBlitz3.ab3@13365>   MOVEQ.l #$04,D1
0002B2A0 <AmiBlitz3.ab3@13366>   BTST #$0,flagmask+1
0002B2A4 <AmiBlitz3.ab3@13367>    BNE.w 'skip3
0002B2AC <AmiBlitz3.ab3@13368>   BTST #$1,flagmask+1
0002B2B0 <AmiBlitz3.ab3@13369>    BNE.w 'skip3
0002B2B8 <AmiBlitz3.ab3@13370>   CMPI.l #$100,$4(A2)
0002B2BC <AmiBlitz3.ab3@13371>    BCC.w 'skip3
0002B2C0 <AmiBlitz3.ab3@13372>   MOVE.w $8(A2),D1
0002B2C6 <AmiBlitz3.ab3@13375>   TST.w varmode
0002B2CA <AmiBlitz3.ab3@13376>    BEQ.w fvaradd_pit2
0002B2CC <AmiBlitz3.ab3@13377>   NEG.w D1
0002B2D2 <AmiBlitz3.ab3@13378>   ADD.w D1,globalvarpointer
0002B2DA <AmiBlitz3.ab3@13379>   MOVE.w globalvarpointer,$4(A3)
0002B2DC <AmiBlitz3.ab3@13380>  RTS
0002B2E4 <AmiBlitz3.ab3@13383>   MOVE.w globalvarpointer,$4(A3)
0002B2EA <AmiBlitz3.ab3@13384>   ADD.w D1,globalvarpointer
0002B2EC <AmiBlitz3.ab3@13385> RTS
0002B2F0 <AmiBlitz3.ab3@13390>    BSR.w getparameter2
0002B2F6 <AmiBlitz3.ab3@13391>   LEA newtypebase,A2
0002B2FA <AmiBlitz3.ab3@13392>    BSR.w findtype
0002B2FE <AmiBlitz3.ab3@13393>    BNE.w notypeerr
0002B304 <AmiBlitz3.ab3@13396>   CMPA.l #newtype_byte,A2
0002B308 <AmiBlitz3.ab3@13397>    BEQ.w 'byte
0002B30E <AmiBlitz3.ab3@13398>   MOVE.w varmode,D1
0002B312 <AmiBlitz3.ab3@13399>    BNE.w 'pit
0002B318 <AmiBlitz3.ab3@13400>   ADDQ.w #1,globalvarpointer
0002B320 <AmiBlitz3.ab3@13403>   BCLR #$0,globalvarpointer+1
0002B324 <AmiBlitz3.ab3@13406>   MOVE.l A2,$A(A3)              ;set type
0002B32C <AmiBlitz3.ab3@13407>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002B32E <AmiBlitz3.ab3@13409>   MOVEQ.l #$04,D1
0002B336 <AmiBlitz3.ab3@13410>   BTST #$0,flagmask+1
0002B33A <AmiBlitz3.ab3@13411>    BNE.w 'skip3
0002B342 <AmiBlitz3.ab3@13412>   BTST #$1,flagmask+1
0002B346 <AmiBlitz3.ab3@13413>    BNE.w 'skip3
0002B34E <AmiBlitz3.ab3@13414>   CMPI.l #$100,$4(A2)
0002B352 <AmiBlitz3.ab3@13415>    BCC.w 'skip3
0002B356 <AmiBlitz3.ab3@13416>   MOVE.w $8(A2),D1
0002B35C <AmiBlitz3.ab3@13419>   TST.w varmode
0002B360 <AmiBlitz3.ab3@13420> BRA.w fvaradd_pit2
0002B366 <AmiBlitz3.ab3@13430>   LEA firstglob,A2
0002B36A <AmiBlitz3.ab3@13431>    BSR.w findvariable2
0002B36E <AmiBlitz3.ab3@13434>   BNE.w 'hendrix
0002B374 <AmiBlitz3.ab3@13435>   MOVE.b flagmask+1,D1
0002B378 <AmiBlitz3.ab3@13436>   MOVE.b $7(A2),D3
0002B37A <AmiBlitz3.ab3@13437>   EOR.b D3,D1
0002B37E <AmiBlitz3.ab3@13438>    BEQ.w fvarfound
0002B382 <AmiBlitz3.ab3@13439>    BSR.w findlab
0002B386 <AmiBlitz3.ab3@13440>  BRA.w 'more
0002B38E <AmiBlitz3.ab3@13443>   MOVE.w #$FFFF,varmode           ; was -1
0002B394 <AmiBlitz3.ab3@13444>   MOVE.w globalvarpointer,-(A7)
0002B39E <AmiBlitz3.ab3@13445>   MOVE.w locvaroff,globalvarpointer
0002B3A4 <AmiBlitz3.ab3@13446>   LEA firstlocal,A2
0002B3AC <AmiBlitz3.ab3@13448>   MOVE.b #1,newvariable
0002B3B0 <AmiBlitz3.ab3@13450>    BSR.w fvarback
0002B3B6 <AmiBlitz3.ab3@13452>   CLR.b newvariable
0002B3C0 <AmiBlitz3.ab3@13454>   MOVE.w globalvarpointer,locvaroff
0002B3C6 <AmiBlitz3.ab3@13455>   MOVE.w (A7)+,globalvarpointer
0002B3C8 <AmiBlitz3.ab3@13456> RTS
0002B3CA <AmiBlitz3.ab3@13460>   MOVEA.l A2,A3
0002B3CE <AmiBlitz3.ab3@13464>   CMP.w #$2E,D0         ;'.'
0002B3D2 <AmiBlitz3.ab3@13465>    BEQ.w 'skipsh
0002B3D6 <AmiBlitz3.ab3@13466>   CMP.w #$24,D0         ;'$'
0002B3DA <AmiBlitz3.ab3@13467>    BNE.w 'skip4
0002B3E2 <AmiBlitz3.ab3@13468>   CMPI.l #newtype_string,$A(A3)
0002B3E6 <AmiBlitz3.ab3@13469>    BNE.w rongtypeerr
0002B3EA <AmiBlitz3.ab3@13470>    BSR.w get1bytemain
0002B3EE <AmiBlitz3.ab3@13471>  BRA.w 'skip4
0002B3F2 <AmiBlitz3.ab3@13474>    BSR.w getparameter2
0002B3F8 <AmiBlitz3.ab3@13475>   LEA newtypebase,A2
0002B3FC <AmiBlitz3.ab3@13476>    BSR.w findtype
0002B400 <AmiBlitz3.ab3@13477>    BNE.w notypeerr
0002B404 <AmiBlitz3.ab3@13478>   CMPA.l $A(A3),A2
0002B408 <AmiBlitz3.ab3@13479>    BNE.w rongtypeerr
0002B410 <AmiBlitz3.ab3@13482>   BTST #$0,flagmask+1
0002B414 <AmiBlitz3.ab3@13483>    BEQ.w 'skipz
0002B41A <AmiBlitz3.ab3@13485>   BTST #$0,$7(A3)
0002B41E <AmiBlitz3.ab3@13486>    BEQ.w pointerr
0002B422 <AmiBlitz3.ab3@13489>   MOVEA.l $A(A3),A2
0002B424 <AmiBlitz3.ab3@13490> RTS
0002B426 <AmiBlitz3.ab3@13494>    TST.l D3                                                ;newtype >32kb  .w to .l
0002B42A <AmiBlitz3.ab3@13495>    BEQ.w 'done2a
0002B434 <AmiBlitz3.ab3@13497>    MOVE.l destpointer,loada
0002B438 <AmiBlitz3.ab3@13500>  BRA 'done3a
0002B43C <AmiBlitz3.ab3@13503>   CMP.w #$9,D3                                             ;_addq_arrays
0002B440 <AmiBlitz3.ab3@13504>    BCC.w 'done3a
0002B446 <AmiBlitz3.ab3@13506>   MOVE.w d3,arrayoffset
0002B44A <AmiBlitz3.ab3@13508>   ANDI.w #$7,D3
0002B44C <AmiBlitz3.ab3@13509>   LSL.w #8,D3
0002B44E <AmiBlitz3.ab3@13510>   LSL.w #1,D3
0002B456 <AmiBlitz3.ab3@13511>   ANDI.w #$F1FF,addqa0
0002B45C <AmiBlitz3.ab3@13512>   OR.w D3,addqa0
0002B462 <AmiBlitz3.ab3@13513>   MOVE.w addqa0,D1
0002B466 <AmiBlitz3.ab3@13514>  BRA.w writeword
0002B46C <AmiBlitz3.ab3@13518>   CMP.l #$7fff,d3                                          ;>32kb newtypes
0002B470 <AmiBlitz3.ab3@13519>   BGT longoffset
0002B476 <AmiBlitz3.ab3@13521>   MOVE.w D3,leaa0a0+2
0002B47C <AmiBlitz3.ab3@13523>   MOVE.w d3,arrayoffset
0002B482 <AmiBlitz3.ab3@13525>   MOVE.l leaa0a0,D1
0002B486 <AmiBlitz3.ab3@13526>   BSR.w writelong
0002B488 <AmiBlitz3.ab3@13529> RTS
0002B48C <AmiBlitz3.ab3@13533>    MOVE.w #$d5fc,d1
0002B490 <AmiBlitz3.ab3@13534>    BSR writeword
0002B492 <AmiBlitz3.ab3@13535>    MOVE.l d3,d1
0002B496 <AmiBlitz3.ab3@13536>    BSR.w writelong
0002B498 <AmiBlitz3.ab3@13537> RTS
0002B49C <AmiBlitz3.ab3@13541>   Dc.w $b0ad,0000                                          ;cmp.l $0(A5),D0    ;nooptimize
0002B4A0 <AmiBlitz3.ab3@13544>    BCS.w arrchk3                                           
0002B4A6 <AmiBlitz3.ab3@13545>    JSR $20000                                              ;jsr 0
0002B4AC <AmiBlitz3.ab3@13556>   TST.b fast
0002B4B0 <AmiBlitz3.ab3@13557>   BEQ 'l1
0002B4B2 <AmiBlitz3.ab3@13558>    MOVEQ #0,d1                                             ;faster arrays
0002B4B8 <AmiBlitz3.ab3@13559>    MOVE.w regnum,d2
0002B4BA <AmiBlitz3.ab3@13560>    MOVE.w d2,d1
0002B4BC <AmiBlitz3.ab3@13561>    LSL.w #8,d1
0002B4BE <AmiBlitz3.ab3@13562>    LSL.w #4,d1
0002B4C0 <AmiBlitz3.ab3@13563>    ADD.w d2,d1
0002B4C6 <AmiBlitz3.ab3@13564>    OR.l #$4c2d0000,d1
0002B4CC <AmiBlitz3.ab3@13565>    TST.w varmode
0002B4D0 <AmiBlitz3.ab3@13566>    BEQ 'l1a
0002B4D4 <AmiBlitz3.ab3@13567>    BCLR #16,d1
0002B4D8 <AmiBlitz3.ab3@13570>    BSR writelong
0002B4DC <AmiBlitz3.ab3@13571>    MOVE.w $4(A7),D1
0002B4E0 <AmiBlitz3.ab3@13572>    BSR.w writeword
0002B4E6 <AmiBlitz3.ab3@13573>    MOVE.w regnum,D1
0002B4E8 <AmiBlitz3.ab3@13574>   SUBQ.w #1,D1
0002B4EA <AmiBlitz3.ab3@13575>   LSL.w #8,D1
0002B4EC <AmiBlitz3.ab3@13576>   LSL.w #1,D1
0002B4F0 <AmiBlitz3.ab3@13577>   ORI.w #$D080,D1
0002B4F6 <AmiBlitz3.ab3@13578>   OR.w regnum,D1
0002B4FA <AmiBlitz3.ab3@13579>    BSR.w writeword
0002B4FC <AmiBlitz3.ab3@13580>  RTS
0002B502 <AmiBlitz3.ab3@13584>   MOVE.w regnum,D2
0002B506 <AmiBlitz3.ab3@13586>   MOVE.w arrmul1(PC),D1
0002B508 <AmiBlitz3.ab3@13587>   OR.w D2,D1
0002B50A <AmiBlitz3.ab3@13588>   SUBQ.w #1,D1
0002B50E <AmiBlitz3.ab3@13589>    BSR.w writeword
0002B512 <AmiBlitz3.ab3@13590>   MOVE.w arrmul2(PC),D1
0002B514 <AmiBlitz3.ab3@13591>   OR.w D2,D1
0002B516 <AmiBlitz3.ab3@13592>   MOVE.w D2,D3
0002B518 <AmiBlitz3.ab3@13593>   SUBQ.w #1,D3
0002B51A <AmiBlitz3.ab3@13594>   LSL.w #8,D3
0002B51C <AmiBlitz3.ab3@13595>   LSL.w #1,D3
0002B51E <AmiBlitz3.ab3@13596>   OR.w D3,D1
0002B522 <AmiBlitz3.ab3@13597>    BSR.w writeword
0002B526 <AmiBlitz3.ab3@13598>   MOVE.w arrmul3(PC),D1
0002B528 <AmiBlitz3.ab3@13599>   MOVE.w D2,D3
0002B52A <AmiBlitz3.ab3@13600>   LSL.w #8,D3
0002B52C <AmiBlitz3.ab3@13601>   LSL.w #1,D3
0002B52E <AmiBlitz3.ab3@13602>   OR.w D3,D1
0002B532 <AmiBlitz3.ab3@13603>    BSR.w pokewda5s
0002B536 <AmiBlitz3.ab3@13604>   MOVE.w $4(A7),D1         ; was 4+0
0002B538 <AmiBlitz3.ab3@13605>   ADDQ.w #2,D1
0002B53C <AmiBlitz3.ab3@13606>    BSR.w writeword
0002B540 <AmiBlitz3.ab3@13608>   MOVE.w arrmul4(PC),D1
0002B542 <AmiBlitz3.ab3@13609>   MOVE.w D2,D3
0002B544 <AmiBlitz3.ab3@13610>   SUBQ.w #1,D3
0002B546 <AmiBlitz3.ab3@13611>   LSL.w #8,D3
0002B548 <AmiBlitz3.ab3@13612>   LSL.w #1,D3
0002B54A <AmiBlitz3.ab3@13613>   OR.w D3,D1
0002B54E <AmiBlitz3.ab3@13614>    BSR.w pokewda5s
0002B552 <AmiBlitz3.ab3@13615>   MOVE.w $4(A7),D1       ; was 4+0
0002B556 <AmiBlitz3.ab3@13616>    BSR.w writeword
0002B55A <AmiBlitz3.ab3@13618>   MOVE.w arrmul5(PC),D1
0002B55C <AmiBlitz3.ab3@13619>   OR.w D2,D1
0002B55E <AmiBlitz3.ab3@13620>   SUBQ.w #1,D1
0002B562 <AmiBlitz3.ab3@13621>    BSR.w writeword
0002B566 <AmiBlitz3.ab3@13622>   MOVE.w arrmul6(PC),D1
0002B568 <AmiBlitz3.ab3@13623>   OR.w D2,D1
0002B56A <AmiBlitz3.ab3@13624>   SUBQ.w #1,D1
0002B56E <AmiBlitz3.ab3@13625>    BSR.w writeword
0002B572 <AmiBlitz3.ab3@13626>   MOVE.w arrmul7(PC),D1
0002B574 <AmiBlitz3.ab3@13627>   OR.w D2,D1
0002B576 <AmiBlitz3.ab3@13628>   SUBQ.w #1,D1
0002B578 <AmiBlitz3.ab3@13629>   MOVE.w D2,D3
0002B57A <AmiBlitz3.ab3@13630>   LSL.w #8,D3
0002B57C <AmiBlitz3.ab3@13631>   LSL.w #1,D3
0002B57E <AmiBlitz3.ab3@13632>   OR.w D3,D1
0002B582 <AmiBlitz3.ab3@13633>    BSR.w writeword
0002B586 <AmiBlitz3.ab3@13634>   MOVE.w arrmul8(PC),D1
0002B588 <AmiBlitz3.ab3@13635>   MOVE.w D2,D3
0002B58A <AmiBlitz3.ab3@13636>   SUBQ.w #1,D3
0002B58C <AmiBlitz3.ab3@13637>   LSL.w #8,D3
0002B58E <AmiBlitz3.ab3@13638>   LSL.w #1,D3
0002B590 <AmiBlitz3.ab3@13639>   OR.w D3,D1
0002B594 <AmiBlitz3.ab3@13640>    BSR.w writeword
0002B59A <AmiBlitz3.ab3@13642>   MOVE.w regnum,D1
0002B59C <AmiBlitz3.ab3@13643>   SUBQ.w #1,D1
0002B59E <AmiBlitz3.ab3@13644>   LSL.w #8,D1
0002B5A0 <AmiBlitz3.ab3@13645>   LSL.w #1,D1
0002B5A4 <AmiBlitz3.ab3@13646>   ORI.w #$D080,D1
0002B5AA <AmiBlitz3.ab3@13647>   OR.w regnum,D1
0002B5AE <AmiBlitz3.ab3@13648> BRA.w writeword
0002B5B0 <AmiBlitz3.ab3@13656> arrmul1:   MOVE.l d0,-(a7)                                ;write array access
0002B5B2 <AmiBlitz3.ab3@13657> arrmul2:   MOVE  d0,d0
0002B5B6 <AmiBlitz3.ab3@13658> arrmul3:   MULU 0(a5),d0                                  ;mulu   x+2(a5),d1  ;lo*lo
0002B5BA <AmiBlitz3.ab3@13659> arrmul4:   MULU 0(a5),d0                                  ;mulu   x(a5),d0    ;hi*lo
0002B5BC <AmiBlitz3.ab3@13661> arrmul5:   SWAP d0
0002B5BE <AmiBlitz3.ab3@13662> arrmul6:   CLR d0
0002B5C0 <AmiBlitz3.ab3@13663> arrmul7:   ADD.l d0,d0
0002B5C2 <AmiBlitz3.ab3@13664> arrmul8:   MOVE.l (a7)+,d0
0002B5C6 <AmiBlitz3.ab3@13669> listcode1:  Dc.b $24,$6D :              Dc.b $00,$00       ;MOVEA.L $0000(A5),A2      ;pointer to start of array data
0002B5CA <AmiBlitz3.ab3@13670> listcode2:  Dc.b $24,$6A,$FF,$E0                           ;MOVEA.L -$0020(A2),A2     ;pointer to current
0002B5CC <AmiBlitz3.ab3@13671> listarfix:  Dc.b $50,$4A                                   ;ADDQ.W  #8,A2
0002B5D2 <AmiBlitz3.ab3@13689>   CLR.l lastoffset_org
0002B5D8 <AmiBlitz3.ab3@13690>   BTST #$1,$7(A3)
0002B5DC <AmiBlitz3.ab3@13691>    BEQ.w 'notarr
0002B5E2 <AmiBlitz3.ab3@13692>   MOVE.w notshared,D1
0002B5E6 <AmiBlitz3.ab3@13693>    BNE.w noarrerr
0002B5EA <AmiBlitz3.ab3@13694>    BSR.w get1bytemain
0002B5EE <AmiBlitz3.ab3@13695>   CMP.w #$29,D0
0002B5F2 <AmiBlitz3.ab3@13696>    BNE.w 'notalist
0002B5F8 <AmiBlitz3.ab3@13697>   BTST #$0,$6(A3)
0002B5FC <AmiBlitz3.ab3@13698>    BEQ.w nolisterr
0002B604 <AmiBlitz3.ab3@13699>   MOVE.w $4(A3),listcode1+2
0002B608 <AmiBlitz3.ab3@13700>   MOVE.l listcode1(PC),D1
0002B60C <AmiBlitz3.ab3@13701>    BSR.w pokela5s
0002B610 <AmiBlitz3.ab3@13702>   MOVE.l listcode2(PC),D1
0002B614 <AmiBlitz3.ab3@13703>    BSR.w writelong
0002B61A <AmiBlitz3.ab3@13704>   TST.b debugmode
0002B61E <AmiBlitz3.ab3@13705>    BEQ.w 'nolrerr
0002B620 <AmiBlitz3.ab3@13709>   MOVE.l A2,-(A7)
0002B624 <AmiBlitz3.ab3@13710>   MOVE.w #$C315,D1
0002B628 <AmiBlitz3.ab3@13711>    BSR.w Atokejsr
0002B62A <AmiBlitz3.ab3@13712>   MOVEA.l (A7)+,A2
0002B62E <AmiBlitz3.ab3@13715>    MOVE.w listarfix(PC),D1                                 ;addq #8,a2
0002B632 <AmiBlitz3.ab3@13717>    BSR.w writeword
0002B636 <AmiBlitz3.ab3@13718>  BRA.w 'normalar
0002B638 <AmiBlitz3.ab3@13721>  'listoff:   Ds.w 1
0002B63E <AmiBlitz3.ab3@13724>   CLR.w 'listoff
0002B644 <AmiBlitz3.ab3@13725>   BTST #$0,$6(A3)
0002B648 <AmiBlitz3.ab3@13726>    BEQ.w 'knop
0002B650 <AmiBlitz3.ab3@13727>   MOVE.w #$0008,'listoff                            ;adjust size of one element if list.
0002B654 <AmiBlitz3.ab3@13730>   MOVEM.l A2-A3,-(A7)
0002B65A <AmiBlitz3.ab3@13731>   MOVE.w varmode,-(A7)
0002B65E <AmiBlitz3.ab3@13732>   MOVE.w $8(A3),-(A7)                                       ;number of dims
0002B662 <AmiBlitz3.ab3@13733>   MOVE.w $4(A3),-(A7)                                       ;varoff
0002B664 <AmiBlitz3.ab3@13734>   MOVE.l A2,-(A7)
0002B66A <AmiBlitz3.ab3@13735>   MOVE.w flagmask,-(A7)
0002B674 <AmiBlitz3.ab3@13737>   MOVE.w oldqflag,instringon
0002B67A <AmiBlitz3.ab3@13738>   MOVEA.l lastsourcepos,A5
0002B67E <AmiBlitz3.ab3@13739>    BSR.w arreval
0002B684 <AmiBlitz3.ab3@13740>   MOVE.w (A7)+,flagmask
0002B68C <AmiBlitz3.ab3@13741>   MOVE.w $8(A7),varmode
0002B692 <AmiBlitz3.ab3@13742>   TST.b debugmode
0002B696 <AmiBlitz3.ab3@13743>    BEQ.w 'noszchk
0002B698 <AmiBlitz3.ab3@13747>   MOVEA.l (A7)+,A2
0002B69A <AmiBlitz3.ab3@13748>   MOVEQ.l #$04,D1
0002B6A2 <AmiBlitz3.ab3@13749>   BTST #$0,flagmask+1                                      ;pointer?
0002B6A6 <AmiBlitz3.ab3@13750>    BNE.b 'domul                                          ;yes, then use 4 byte mul...
0002B6AA <AmiBlitz3.ab3@13751>   MOVE.w $8(A2),D1
0002B6AE <AmiBlitz3.ab3@13754>   ADD.w 'listoff(PC),D1
0002B6B2 <AmiBlitz3.ab3@13755>   BSR.w muld1
0002B6B8 <AmiBlitz3.ab3@13756>   ADDQ.w #1,regnum
0002B6BA <AmiBlitz3.ab3@13759>   ADDQ.w #4,(A7)
0002B6BE <AmiBlitz3.ab3@13760>   TST.w $4(A7)
0002B6C2 <AmiBlitz3.ab3@13761>    BEQ.w 'isglob
0002B6C4 <AmiBlitz3.ab3@13762>   SUBQ.w #8,(A7)                                           ;range check local array
0002B6CA <AmiBlitz3.ab3@13765>   TST.b debugmode
0002B6CE <AmiBlitz3.ab3@13766>    BEQ.w 'noer1
0002B6D4 <AmiBlitz3.ab3@13767>   MOVE.w regnum,D1
0002B6D6 <AmiBlitz3.ab3@13768>   SUBQ.w #1,D1
0002B6D8 <AmiBlitz3.ab3@13769>   LSL.w #8,D1
0002B6DA <AmiBlitz3.ab3@13770>   LSL.w #1,D1
0002B6DE <AmiBlitz3.ab3@13771>   OR.w zarrchk(PC),D1
0002B6E2 <AmiBlitz3.ab3@13772>    BSR.w pokewda5s                                         ;cmp.l x(a5),D regat
0002B6E4 <AmiBlitz3.ab3@13773>   MOVE.w (A7),D1
0002B6E8 <AmiBlitz3.ab3@13774>    BSR.w writeword
0002B6EC <AmiBlitz3.ab3@13775>   MOVE.l arrchk2(PC),D1
0002B6F0 <AmiBlitz3.ab3@13776>    BSR.w writelong
0002B6F4 <AmiBlitz3.ab3@13777>   MOVE.w #$C309,D1
0002B6F8 <AmiBlitz3.ab3@13778>    BSR.w Atokejsr
0002B6FC <AmiBlitz3.ab3@13781>   SUBQ.w #1,$2(A7)
0002B700 <AmiBlitz3.ab3@13782>    BEQ.w 'ardone
0002B704 <AmiBlitz3.ab3@13783>   CMP.w #$2C,D0
0002B708 <AmiBlitz3.ab3@13784>    BNE.w syntaxerr
0002B70E <AmiBlitz3.ab3@13785>    TST.b fast
0002B712 <AmiBlitz3.ab3@13786>    BNE 'l1
0002B716 <AmiBlitz3.ab3@13787>    BSR.w arrevalchk
0002B71A <AmiBlitz3.ab3@13788>  BRA 'l2
0002B71E <AmiBlitz3.ab3@13791>   BSR arreval
0002B726 <AmiBlitz3.ab3@13794>   MOVE.w $4(A7),varmode
0002B72A <AmiBlitz3.ab3@13795>   BSR.w makeamul
0002B72E <AmiBlitz3.ab3@13796>  BRA.w 'arloop
0002B732 <AmiBlitz3.ab3@13799>   CMP.w #$29,D0
0002B736 <AmiBlitz3.ab3@13800>    BNE.w syntaxerr
0002B73C <AmiBlitz3.ab3@13801>   SUBQ.w #1,regnum
0002B73E <AmiBlitz3.ab3@13802>   ADDQ.w #6,A7
0002B742 <AmiBlitz3.ab3@13803>   MOVEM.l (A7)+,A2-A3
0002B74A <AmiBlitz3.ab3@13804>   MOVE.w $4(A3),movea5a0+2
0002B750 <AmiBlitz3.ab3@13805>   MOVE.l movea5a0,D1
0002B754 <AmiBlitz3.ab3@13806>    BSR.w pokela5s
0002B75A <AmiBlitz3.ab3@13807>   MOVE.w regnum,D1
0002B75E <AmiBlitz3.ab3@13808>   ORI.w #$D5C0,D1                                          ;add.l Dr,a2
0002B762 <AmiBlitz3.ab3@13809>    BSR.w writeword
0002B768 <AmiBlitz3.ab3@13810>   BTST #$0,$6(A3)
0002B76C <AmiBlitz3.ab3@13811>    BEQ.w 'normalar
0002B770 <AmiBlitz3.ab3@13815>   MOVE.w listarfix(PC),D1
0002B774 <AmiBlitz3.ab3@13816>    BSR.w writeword
0002B778 <AmiBlitz3.ab3@13819>   BSR.w get1bytemain
0002B77E <AmiBlitz3.ab3@13823>   BTST #$0,$7(A3)
0002B782 <AmiBlitz3.ab3@13824>    BEQ.w 'noppnt
0002B786 <AmiBlitz3.ab3@13825>   CMP.w #$5C,D0
0002B78A <AmiBlitz3.ab3@13826>    BNE.w 'pmskip
0002B78E <AmiBlitz3.ab3@13827>   MOVE.w 'pfix(PC),D1
0002B792 <AmiBlitz3.ab3@13828>    BSR.w writeword
0002B796 <AmiBlitz3.ab3@13831>   MOVE.w #$8000,D2
0002B79A <AmiBlitz3.ab3@13832>  BRA.w 'loopml
0002B79E <AmiBlitz3.ab3@13835>   MOVE.w #$C000,D2
0002B7A2 <AmiBlitz3.ab3@13836>  BRA.w 'loopml
0002B7A4 <AmiBlitz3.ab3@13839>  'pfix:   Dc.b $24,$52                                   ;MOVEA.L (A2),A2
0002B7A8 <AmiBlitz3.ab3@13844>   CMP.w #$28,D0
0002B7AC <AmiBlitz3.ab3@13845>    BEQ.w noarrerr
0002B7B4 <AmiBlitz3.ab3@13846>   CMPI.l #$100,$4(A2)
0002B7B8 <AmiBlitz3.ab3@13847>    BCS.w 'simpvar
0002B7BE <AmiBlitz3.ab3@13848>   BTST #$0,$7(A3)
0002B7C2 <AmiBlitz3.ab3@13849>    BEQ.w 'notap
0002B7C6 <AmiBlitz3.ab3@13853>   CMP.w #$5C,D0
0002B7CA <AmiBlitz3.ab3@13854>    BEQ.w 'notap
0002B7CC <AmiBlitz3.ab3@13855>   MOVEQ.l #$00,D2
0002B7D0 <AmiBlitz3.ab3@13856>  BRA.w 'simpvar2
0002B7D4 <AmiBlitz3.ab3@13859>   MOVE.w #$8000,D2
0002B7DC <AmiBlitz3.ab3@13860>   MOVE.w $4(A3),movea5a0+2
0002B7E2 <AmiBlitz3.ab3@13861>   MOVE.l movea5a0,D1
0002B7E6 <AmiBlitz3.ab3@13862>    BSR.w pokela5s                                         ;move.l x(a5),a2
0002B7EC <AmiBlitz3.ab3@13864>    TST.b debugmode
0002B7F0 <AmiBlitz3.ab3@13865>    BEQ.w 'skip
0002B7F4 <AmiBlitz3.ab3@13866>    MOVE.w #$c320,D1
0002B7FA <AmiBlitz3.ab3@13867>    JSR Atokejsr
0002B7FC <AmiBlitz3.ab3@13871>   MOVEQ.l #$00,D3
0002B800 <AmiBlitz3.ab3@13874>   CMP.w #$5C,D0
0002B804 <AmiBlitz3.ab3@13875>    BNE.w 'done
0002B80C <AmiBlitz3.ab3@13876>   CMPI.l #$100,$4(A2)
0002B810 <AmiBlitz3.ab3@13877>    BCS.w rongtypeerr
0002B812 <AmiBlitz3.ab3@13878>   MOVE.w D2,-(A7)
0002B816 <AmiBlitz3.ab3@13879>    BSR.w getparameter2
0002B81A <AmiBlitz3.ab3@13880>    BEQ.w syntaxerr
0002B81C <AmiBlitz3.ab3@13881>   ADDQ.w #4,A2
0002B820 <AmiBlitz3.ab3@13882>    BSR.w findvariable2
0002B824 <AmiBlitz3.ab3@13883>    BNE.w noofferr
0002B826 <AmiBlitz3.ab3@13884>   MOVE.w (A7)+,D2
0002B828 <AmiBlitz3.ab3@13885>   MOVEA.l A2,A3                                             ;pointer to offset
0002B82C <AmiBlitz3.ab3@13886>   MOVEA.l $A(A3),A2                                         ;pointer to type
0002B82E <AmiBlitz3.ab3@13887>   MOVEQ #0,d1
0002B832 <AmiBlitz3.ab3@13888>   MOVE.w 4(a3),d1
0002B834 <AmiBlitz3.ab3@13889>   ADD.l d1,d3
0002B83A <AmiBlitz3.ab3@13891>   MOVE.l A3,lastoffset_org
0002B83E <AmiBlitz3.ab3@13892>   CMP.w #$5B,D0
0002B842 <AmiBlitz3.ab3@13893>    BNE.w 'realdone
0002B848 <AmiBlitz3.ab3@13894>   BTST #$1,$7(A3)                                           ;a array [] in newtype is found
0002B84C <AmiBlitz3.ab3@13895>    BEQ.w rongtypeerr
0002B850 <AmiBlitz3.ab3@13896>    BSR.w addd0a0
0002B854 <AmiBlitz3.ab3@13897>   MOVEM.l A2-A3,-(A7)
0002B85A <AmiBlitz3.ab3@13898>   MOVE.w varmode,-(A7)
0002B860 <AmiBlitz3.ab3@13899>   MOVE.l lastoffset_org,-(A7)
0002B866 <AmiBlitz3.ab3@13900>   MOVE.w pusha2,D1
0002B86A <AmiBlitz3.ab3@13901>   BSR.w writeword
0002B86C <AmiBlitz3.ab3@13902>   MOVEQ.l #$03,D2                                          ;was 2 >32kb types
0002B876 <AmiBlitz3.ab3@13903>   MOVE.l destpointer,deststore
0002B87C <AmiBlitz3.ab3@13904>   MOVE.l leftsidetype,-(a7)
0002B882 <AmiBlitz3.ab3@13905>   MOVE.l rightsidetype,-(a7)
0002B888 <AmiBlitz3.ab3@13907>   MOVE.w leftsideflagmask,-(a7)
0002B88E <AmiBlitz3.ab3@13908>   MOVE.w rightsideflagmask,-(a7)
0002B894 <AmiBlitz3.ab3@13909>   CLR.l rightsidetype
0002B89A <AmiBlitz3.ab3@13910>   CLR.l leftsidetype
0002B8A0 <AmiBlitz3.ab3@13911>   CLR.w leftsideflagmask
0002B8A6 <AmiBlitz3.ab3@13912>   CLR.w rightsideflagmask
0002B8AA <AmiBlitz3.ab3@13913>   BSR.w eval
0002B8B0 <AmiBlitz3.ab3@13914>   MOVE.w (a7)+,rightsideflagmask
0002B8B6 <AmiBlitz3.ab3@13915>   MOVE.w (a7)+,leftsideflagmask
0002B8BC <AmiBlitz3.ab3@13916>   MOVE.l (a7)+,rightsidetype
0002B8C2 <AmiBlitz3.ab3@13917>   MOVE.l (a7)+,leftsidetype
0002B8C6 <AmiBlitz3.ab3@13918>   CMP.w #$5D,D0
0002B8CA <AmiBlitz3.ab3@13919>    BNE.w syntaxerr
0002B8D0 <AmiBlitz3.ab3@13920>   TST.b fast                                               ;a2,-(a7) array
0002B8D4 <AmiBlitz3.ab3@13921>   BEQ 'loop0_l10
0002B8DA <AmiBlitz3.ab3@13927>   MOVE.l destpointer,d1
0002B8E0 <AmiBlitz3.ab3@13928>   SUB.l deststore,d1
0002B8E6 <AmiBlitz3.ab3@13929>   CMP.l #4,d1
0002B8EA <AmiBlitz3.ab3@13930>   BNE 'loop0_l10
0002B8F0 <AmiBlitz3.ab3@13931>   MOVE.l destpointer,a4
0002B8F6 <AmiBlitz3.ab3@13932>   MOVE.l -4(a4),-6(a4)
0002B8FC <AmiBlitz3.ab3@13933>   SUBQ.l #2,destpointer
0002B902 <AmiBlitz3.ab3@13934>   CLR.l imm_addr
0002B908 <AmiBlitz3.ab3@13935>   CLR.l load_var_addr
0002B90C <AmiBlitz3.ab3@13936>  BRA 'loop0_l20
0002B912 <AmiBlitz3.ab3@13939>   MOVE.w pulla2,D1
0002B916 <AmiBlitz3.ab3@13940>    BSR.w writeword
0002B91C <AmiBlitz3.ab3@13943>   MOVE.l (A7)+,lastoffset_org
0002B922 <AmiBlitz3.ab3@13944>   MOVE.w (A7)+,varmode
0002B926 <AmiBlitz3.ab3@13945>   MOVEM.l (A7)+,A2-A3
0002B92C <AmiBlitz3.ab3@13951>   TST.w debugmode
0002B930 <AmiBlitz3.ab3@13952>    BEQ.b 'nobchk
0002B934 <AmiBlitz3.ab3@13953>   MOVE.w $8(A3),D1
0002B938 <AmiBlitz3.ab3@13954>    BEQ.b 'nobchk                                   ;no [0] checks!
0002B93E <AmiBlitz3.ab3@13958>   MOVE.w D1,brchkcode+2
0002B944 <AmiBlitz3.ab3@13959>   MOVE.w regnum,D1
0002B946 <AmiBlitz3.ab3@13960>   LSL.w #8,D1
0002B948 <AmiBlitz3.ab3@13961>   LSL.w #1,D1
0002B94C <AmiBlitz3.ab3@13962>   OR.w brchkcode0(PC),D1
0002B952 <AmiBlitz3.ab3@13963>   MOVE.w D1,brchkcode
0002B956 <AmiBlitz3.ab3@13964>   MOVE.l brchkcode(PC),D1
0002B95A <AmiBlitz3.ab3@13965>    BSR.w writelong
0002B95E <AmiBlitz3.ab3@13966>   MOVE.l brchkcode+4(PC),D1
0002B962 <AmiBlitz3.ab3@13967>    BSR.w writelong
0002B966 <AmiBlitz3.ab3@13968>   MOVE.w brchkcode+8(PC),D1
0002B96A <AmiBlitz3.ab3@13969>    BSR.w writeword
0002B96C <AmiBlitz3.ab3@13972>   MOVEQ.l #$04,D1
0002B972 <AmiBlitz3.ab3@13973>   BTST #$0,$7(A3)
0002B976 <AmiBlitz3.ab3@13974>    BNE.w 'dothemul
0002B97A <AmiBlitz3.ab3@13975>   MOVE.w $8(A2),D1
0002B97E <AmiBlitz3.ab3@13978>   BSR.w muld1
0002B984 <AmiBlitz3.ab3@13979>   MOVE.w addrega2,D1
0002B98A <AmiBlitz3.ab3@13980>   OR.w regnum,D1
0002B98E <AmiBlitz3.ab3@13981>    OR.w #$100,d1                                           ;>32kb types
0002B992 <AmiBlitz3.ab3@13982>    BSR.w writeword
0002B996 <AmiBlitz3.ab3@13983>    BSR.w get1bytemain
0002B998 <AmiBlitz3.ab3@13984>   MOVEQ.l #$00,D3
0002B99C <AmiBlitz3.ab3@13985>   MOVE.w #$8000,D2
0002B9A2 <AmiBlitz3.ab3@13988>   BTST #$0,$7(A3)
0002B9A6 <AmiBlitz3.ab3@13989>    BNE.w 'pointer
0002B9AA <AmiBlitz3.ab3@13990>  BRA.w 'loop0
0002B9AE <AmiBlitz3.ab3@13993>  CMP.w #$5C,D0
0002B9B2 <AmiBlitz3.ab3@13994>    BNE.w 'done3
0002B9B4 <AmiBlitz3.ab3@13995>   TST.w D3
0002B9B8 <AmiBlitz3.ab3@13996>    BNE.w 'pskip
0002B9BE <AmiBlitz3.ab3@13997>   MOVE.w movea0,D1
0002B9C2 <AmiBlitz3.ab3@13998>    BSR.w writeword
0002B9C6 <AmiBlitz3.ab3@13999>  BRA.w 'pmore
0002B9CC <AmiBlitz3.ab3@14002>   MOVE.w D3,movea0a0+2
0002B9D2 <AmiBlitz3.ab3@14003>   MOVE.l movea0a0,D1
0002B9D6 <AmiBlitz3.ab3@14004>    BSR.w writelong
0002B9DC <AmiBlitz3.ab3@14007>   BTST #$2,$7(A3)
0002B9E0 <AmiBlitz3.ab3@14008>    BEQ.w 'loopml
0002B9E6 <AmiBlitz3.ab3@14009>   MOVE.l adda0a0,D1
0002B9EA <AmiBlitz3.ab3@14010>    BSR.w writelong
0002B9EE <AmiBlitz3.ab3@14011>  BRA.w 'loopml
0002B9F2 <AmiBlitz3.ab3@14014>   BSET #$E,D2
0002B9F8 <AmiBlitz3.ab3@14015>   BTST #$2,$7(A3)
0002B9FC <AmiBlitz3.ab3@14016>    BNE.w 'done
0002BA00 <AmiBlitz3.ab3@14017>   BSET #$D,D2
0002BA08 <AmiBlitz3.ab3@14020>   CMPI.l #$100,$4(A2)
0002BA0C <AmiBlitz3.ab3@14021>    BCC.w 'done2
0002BA10 <AmiBlitz3.ab3@14022>   MOVE.b $7(A2),D2
0002BA14 <AmiBlitz3.ab3@14025>  BRA.w addd0a0
0002BA18 <AmiBlitz3.ab3@14028>   MOVE.w $6(A2),D2
0002BA1C <AmiBlitz3.ab3@14031>   MOVE.w $4(A3),D3
0002BA22 <AmiBlitz3.ab3@14032>   BTST #$0,$7(A3)
0002BA26 <AmiBlitz3.ab3@14033>    BEQ.w 'nopoint
0002BA2A <AmiBlitz3.ab3@14034>   BSET #$E,D2
0002BA2C <AmiBlitz3.ab3@14037> RTS
0002BA30 <AmiBlitz3.ab3@14041> brchkcode0:  Dc.b $B0,$7C,$00,$00                          ;CMP.W   #$0000,D0
0002BA34 <AmiBlitz3.ab3@14042> brchkcode:   Dc.b $B0,$7C :             Dc.b $00,$00       ;CMP.W   #$0000,D0
0002BA36 <AmiBlitz3.ab3@14043>              Dc.b $65,$04                                  ;BCS.B   brchkcode_ok
0002BA38 <AmiBlitz3.ab3@14044>              Dc.b $70,$02                                  ;MOVEQ   #$02,D0
0002BA3A <AmiBlitz3.ab3@14045>              Dc.b $4E,$40                                  ;TRAP    #00
0002BA40 <AmiBlitz3.ab3@14053>   TST.w varmode
0002BA44 <AmiBlitz3.ab3@14054>    BEQ.w writeword
0002BA48 <AmiBlitz3.ab3@14055>   BCLR #$0,D1
0002BA4C <AmiBlitz3.ab3@14056> BRA.w writeword
0002BA52 <AmiBlitz3.ab3@14059>   TST.w varmode
0002BA56 <AmiBlitz3.ab3@14060>    BEQ.w writeword
0002BA5A <AmiBlitz3.ab3@14061>   BCLR #$9,D1
0002BA5E <AmiBlitz3.ab3@14062> BRA.w writeword
0002BA64 <AmiBlitz3.ab3@14065>   TST.w proceduremode
0002BA68 <AmiBlitz3.ab3@14066>    BEQ.w writelong
0002BA6C <AmiBlitz3.ab3@14067>   BCLR #$19,D1
0002BA70 <AmiBlitz3.ab3@14068> BRA.w writelong
0002BA76 <AmiBlitz3.ab3@14071>   TST.w varmode
0002BA7A <AmiBlitz3.ab3@14072>   BEQ.w writelong
0002BA7E <AmiBlitz3.ab3@14073>   BCLR #$10,D1
0002BA84 <AmiBlitz3.ab3@14081>   ADDQ.l #1,destpointer                                   ; this is a copy of the writewordcode
0002BA8C <AmiBlitz3.ab3@14082>   BCLR #$0,destpointer+3
0002BA92 <AmiBlitz3.ab3@14083>   MOVEA.l destpointer,A4
0002BA98 <AmiBlitz3.ab3@14084>   CMPA.l destbufferend,A4
0002BA9C <AmiBlitz3.ab3@14085>    BCC.w 'overa
0002BA9E <AmiBlitz3.ab3@14086>   MOVE.l D1,(A4)+
0002BAA4 <AmiBlitz3.ab3@14089>   MOVE.l A4,destpointer
0002BAA8 <AmiBlitz3.ab3@14090>   CMPA.l bigpc(PC),A4
0002BAAC <AmiBlitz3.ab3@14091>    BHI.w 'nbpa
0002BAAE <AmiBlitz3.ab3@14092>  RTS
0002BAB4 <AmiBlitz3.ab3@14095>   TST.w cfetchmode                                         ; to complete the subroutine
0002BAB8 <AmiBlitz3.ab3@14096>   BNE.w 'nbp2a                                             ;
0002BABE <AmiBlitz3.ab3@14097>   MOVE.l A4,bigpc                                          ;
0002BAC0 <AmiBlitz3.ab3@14100>  RTS
0002BAC8 <AmiBlitz3.ab3@14103>   MOVE.w #$FFFF,dontwrite_nomemleft                                  ;#-1 org source
0002BACE <AmiBlitz3.ab3@14104>   CLR.b fast
0002BAD4 <AmiBlitz3.ab3@14105>   CLR.b fpu
0002BADA <AmiBlitz3.ab3@14106>   CLR.b iee                                                ; in writeword this is #2
0002BADC <AmiBlitz3.ab3@14107>   ADDQ.w #4,A4
0002BAE0 <AmiBlitz3.ab3@14108> BRA.w 'msa
0002BAE6 <AmiBlitz3.ab3@14127>   ADDQ.l #1,destpointer
0002BAEE <AmiBlitz3.ab3@14128>   BCLR #$0,destpointer+3
0002BAF4 <AmiBlitz3.ab3@14129>   MOVEA.l destpointer,A4
0002BAFA <AmiBlitz3.ab3@14130>   CMPA.l destbufferend,A4
0002BAFE <AmiBlitz3.ab3@14131>    BCC.w 'over
0002BB00 <AmiBlitz3.ab3@14132>   MOVE.w D1,(A4)+
0002BB06 <AmiBlitz3.ab3@14135>   MOVE.l A4,destpointer
0002BB0A <AmiBlitz3.ab3@14136>   CMPA.l bigpc(PC),A4
0002BB0E <AmiBlitz3.ab3@14137>    BHI.w 'nbp
0002BB10 <AmiBlitz3.ab3@14138>  RTS
0002BB16 <AmiBlitz3.ab3@14141>   TST.w cfetchmode
0002BB1A <AmiBlitz3.ab3@14142>   BNE.w 'nbp2
0002BB20 <AmiBlitz3.ab3@14143>   MOVE.l A4,bigpc
0002BB22 <AmiBlitz3.ab3@14146>  RTS
0002BB2A <AmiBlitz3.ab3@14149>   MOVE.w #$FFFF,dontwrite_nomemleft                                  ;#-1 org source
0002BB2C <AmiBlitz3.ab3@14150>   ADDQ.w #2,A4
0002BB32 <AmiBlitz3.ab3@14151>   CLR.b fast
0002BB38 <AmiBlitz3.ab3@14152>   CLR.b fpu
0002BB3E <AmiBlitz3.ab3@14153>   CLR.b iee
0002BB42 <AmiBlitz3.ab3@14154> BRA.w 'ms
0002BB48 <AmiBlitz3.ab3@14158>   MOVEA.l destpointer,A4
0002BB4E <AmiBlitz3.ab3@14159>   CMPA.l destbufferend,A4
0002BB52 <AmiBlitz3.ab3@14160>    BCC.w 'over
0002BB54 <AmiBlitz3.ab3@14161>   MOVE.b D1,(A4)+
0002BB5A <AmiBlitz3.ab3@14164>   MOVE.l A4,destpointer
0002BB5E <AmiBlitz3.ab3@14165>   CMPA.l bigpc(PC),A4
0002BB62 <AmiBlitz3.ab3@14166>    BHI.w 'nbp
0002BB64 <AmiBlitz3.ab3@14167>  RTS
0002BB6A <AmiBlitz3.ab3@14170>   TST.w cfetchmode
0002BB6E <AmiBlitz3.ab3@14171>    BNE.w 'nbp2
0002BB74 <AmiBlitz3.ab3@14172>   MOVE.l A4,bigpc
0002BB76 <AmiBlitz3.ab3@14175>  RTS
0002BB7E <AmiBlitz3.ab3@14178>   MOVE.w #-1,dontwrite_nomemleft
0002BB80 <AmiBlitz3.ab3@14179>   ADDQ.w #1,A4
0002BB86 <AmiBlitz3.ab3@14180>   CLR.b fast
0002BB8C <AmiBlitz3.ab3@14181>   CLR.b fpu
0002BB92 <AmiBlitz3.ab3@14182>   CLR.b iee
0002BB96 <AmiBlitz3.ab3@14183> BRA.w 'ms
0002BB9A <AmiBlitz3.ab3@14186> bigpc:   Ds.l 1
0002BB9C <AmiBlitz3.ab3@14190>   MOVE.w (A0)+,D1
0002BBA0 <AmiBlitz3.ab3@14191>   BSR.w writeword
0002BBA2 <AmiBlitz3.ab3@14194>     CMPA.l A1,A0
0002BBA6 <AmiBlitz3.ab3@14195>     BCC.w 'done
0002BBA8 <AmiBlitz3.ab3@14196>       MOVE.w (A0)+,D1
0002BBAC <AmiBlitz3.ab3@14197>       BSR.w writeword
0002BBB0 <AmiBlitz3.ab3@14198>  BRA.w 'loop
0002BBB2 <AmiBlitz3.ab3@14201> RTS
0002BBB4 <AmiBlitz3.ab3@14205>   MOVE.w (A0)+,D1
0002BBB8 <AmiBlitz3.ab3@14206>   BSR.w writeword
0002BBBA <AmiBlitz3.ab3@14207>   CMPA.l A1,A0
0002BBBE <AmiBlitz3.ab3@14208>   BCS.w pokecode2
0002BBC0 <AmiBlitz3.ab3@14209> RTS
0002BBC6 <AmiBlitz3.ab3@14216>   TST.b iniffcommand
0002BBCA <AmiBlitz3.ab3@14217>   BEQ 'l1
0002BBCE <AmiBlitz3.ab3@14218>     MOVE.w #$4880,D1
0002BBD4 <AmiBlitz3.ab3@14219>     OR.w regnum,D1
0002BBD8 <AmiBlitz3.ab3@14220>     BSR writeword
0002BBDA <AmiBlitz3.ab3@14224> RTS
0002BBDE <AmiBlitz3.ab3@14230>   BSR.w convert_byte_to_word
0002BBE4 <AmiBlitz3.ab3@14234>   TST.b iee
0002BBE8 <AmiBlitz3.ab3@14235>   BEQ 'old
0002BBEC <AmiBlitz3.ab3@14236>   CMP.b #5,d2
0002BBF0 <AmiBlitz3.ab3@14237>   BEQ wtof
0002BBF4 <AmiBlitz3.ab3@14241>   MOVE.w #$48C0,D1
0002BBFA <AmiBlitz3.ab3@14242>   OR.w regnum,D1
0002BBFE <AmiBlitz3.ab3@14243> BRA.w writeword
0002BC00 <AmiBlitz3.ab3@14247>   MOVEQ #0,d0
0002BC06 <AmiBlitz3.ab3@14248>   MOVE.w regnum,d0
0002BC08 <AmiBlitz3.ab3@14249>   ASL.l #7,d0
0002BC0E <AmiBlitz3.ab3@14250>   MOVE.l #$f2005000,d1
0002BC10 <AmiBlitz3.ab3@14251>   OR.l d0,d1
0002BC12 <AmiBlitz3.ab3@14252>   ASL.l #1,d0
0002BC14 <AmiBlitz3.ab3@14253>   ASL.l #8,d0
0002BC16 <AmiBlitz3.ab3@14254>   OR.l d0,d1
0002BC1A <AmiBlitz3.ab3@14255> BRA writelong
0002BC1E <AmiBlitz3.ab3@14259>   BSR.w convert_byte_to_word
0002BC22 <AmiBlitz3.ab3@14262>   MOVE.w #$4840,D1
0002BC28 <AmiBlitz3.ab3@14263>   OR.w regnum,D1
0002BC2C <AmiBlitz3.ab3@14264>    BSR.w writeword
0002BC30 <AmiBlitz3.ab3@14265>   MOVE.w #$4240,D1
0002BC36 <AmiBlitz3.ab3@14266>   OR.w regnum,D1
0002BC3A <AmiBlitz3.ab3@14267> BRA.w writeword
0002BC3E <AmiBlitz3.ab3@14271>   CMP.w #$ffdc,d1
0002BC42 <AmiBlitz3.ab3@14272>   BNE 'negfpu
0002BC44 <AmiBlitz3.ab3@14273>   MOVEQ #0,d0
0002BC4A <AmiBlitz3.ab3@14274>   MOVE.w regnum,d0
0002BC4C <AmiBlitz3.ab3@14275>   ASL.l #7,d0
0002BC52 <AmiBlitz3.ab3@14276>   MOVE.l #$f2004000,d1
0002BC54 <AmiBlitz3.ab3@14277>   OR.l d0,d1
0002BC56 <AmiBlitz3.ab3@14278>   ASL.l #1,d0
0002BC58 <AmiBlitz3.ab3@14279>   ASL.l #8,d0
0002BC5A <AmiBlitz3.ab3@14280>   OR.l d0,d1
0002BC5E <AmiBlitz3.ab3@14281>  BRA writelong
0002BC60 <AmiBlitz3.ab3@14284>   MOVEQ #0,d1
0002BC66 <AmiBlitz3.ab3@14285>   MOVE.w regnum,d1                                         ;fpu neg
0002BC68 <AmiBlitz3.ab3@14286>   ASL.l #7,d1
0002BC6E <AmiBlitz3.ab3@14287>   OR.l #$f200001a,d1
0002BC70 <AmiBlitz3.ab3@14288>   MOVE.l d0,-(a7)
0002BC72 <AmiBlitz3.ab3@14289>   MOVEQ #0,d0
0002BC78 <AmiBlitz3.ab3@14290>   MOVE.w regnum,d0
0002BC7A <AmiBlitz3.ab3@14291>   ASL.l #8,d0
0002BC7C <AmiBlitz3.ab3@14292>   ASL.l #2,d0
0002BC7E <AmiBlitz3.ab3@14293>   OR.l d0,d1
0002BC80 <AmiBlitz3.ab3@14294>   MOVE.l (a7)+,d0
0002BC84 <AmiBlitz3.ab3@14295> BRA writelong
0002BC8A <AmiBlitz3.ab3@14301>    TST.b iee
0002BC8E <AmiBlitz3.ab3@14302>    BNE wtof
0002BC92 <AmiBlitz3.ab3@14304>    BSR.w convert_byte_to_long
0002BC96 <AmiBlitz3.ab3@14307>    MOVE.w #$FFDC,D1
0002BC9C <AmiBlitz3.ab3@14311>    TST.b iee
0002BCA0 <AmiBlitz3.ab3@14312>    BNE ltof
0002BCA6 <AmiBlitz3.ab3@14314>    MOVE.w D1,libjsr+2
0002BCAA <AmiBlitz3.ab3@14315>    BSR.w savereg
0002BCAC <AmiBlitz3.ab3@14316>   MOVE.l D4,D1
0002BCB0 <AmiBlitz3.ab3@14317>    BSR.w pokemovem
0002BCB4 <AmiBlitz3.ab3@14318>   MOVE.w #$C900,D1      ; #getffpbase,
0002BCB8 <AmiBlitz3.ab3@14319>    BSR.w Atokejsr
0002BCBC <AmiBlitz3.ab3@14320>    BSR.w ritetod0
0002BCC2 <AmiBlitz3.ab3@14321>   MOVE.l libjsr,D1
0002BCC6 <AmiBlitz3.ab3@14322>    BSR.w writelong
0002BCCA <AmiBlitz3.ab3@14323>    BSR.w ritefromd0
0002BCCC <AmiBlitz3.ab3@14324>   MOVE.l D5,D1
0002BCD0 <AmiBlitz3.ab3@14325> BRA.w pokemovem
0002BCD2 <AmiBlitz3.ab3@14327> RTS ; dead old code
0002BCD6 <AmiBlitz3.ab3@14330>   MOVE.w #$C317,D1     ;#wtobover
0002BCDC <AmiBlitz3.ab3@14332>   TST.b typecheck
0002BCE0 <AmiBlitz3.ab3@14333>   BEQ 'l1
0002BCE6 <AmiBlitz3.ab3@14334>    TST.b notypecheck
0002BCEA <AmiBlitz3.ab3@14335>    BNE 'l1
0002BCF0 <AmiBlitz3.ab3@14336>    TST.l lasttoken
0002BCF6 <AmiBlitz3.ab3@14346>   TST.b debugmode
0002BCFA <AmiBlitz3.ab3@14347>    BEQ.w 'skip
0002BD02 <AmiBlitz3.ab3@14348>   BTST #$7,overflowcheck      ;;*** was 7! overflow checking?
0002BD06 <AmiBlitz3.ab3@14349>    BEQ.w 'skip
0002BD0C <AmiBlitz3.ab3@14351>   TST.w cfetchmode
0002BD10 <AmiBlitz3.ab3@14352>    BNE.w 'skip
0002BD16 <AmiBlitz3.ab3@14354>   TST.w regnum
0002BD1A <AmiBlitz3.ab3@14355>    BEQ.w 'isok
0002BD1C <AmiBlitz3.ab3@14356>   MOVE.w D1,-(A7)
0002BD20 <AmiBlitz3.ab3@14357>   MOVE.w 'code1(PC),D1
0002BD24 <AmiBlitz3.ab3@14358>    BSR.w writeword
0002BD2A <AmiBlitz3.ab3@14359>   MOVE.w regnum,D1
0002BD2E <AmiBlitz3.ab3@14360>   OR.w 'code3(PC),D1
0002BD32 <AmiBlitz3.ab3@14361>    BSR.w writeword
0002BD34 <AmiBlitz3.ab3@14362>   MOVE.w (A7)+,D1
0002BD38 <AmiBlitz3.ab3@14363>    BSR.w 'isok
0002BD3C <AmiBlitz3.ab3@14364>   MOVE.w 'code2(PC),D1
0002BD40 <AmiBlitz3.ab3@14365>  BRA.w writeword
0002BD44 <AmiBlitz3.ab3@14368>   MOVEM.l D0-D7/A0-A6,-(A7)
0002BD48 <AmiBlitz3.ab3@14369>    BSR.w Atokejsr
0002BD4C <AmiBlitz3.ab3@14370>   MOVEM.l (A7)+,D0-D7/A0-A6
0002BD4E <AmiBlitz3.ab3@14373>  RTS
0002BD50 <AmiBlitz3.ab3@14376>   MOVE.l D0,-(A7)
0002BD52 <AmiBlitz3.ab3@14379>   MOVE.l (A7)+,D0
0002BD54 <AmiBlitz3.ab3@14382>   MOVE.l D0,D0
0002BD58 <AmiBlitz3.ab3@14387>   BSR.w convert_word_to_long
0002BD5E <AmiBlitz3.ab3@14389>   TST.b iee
0002BD62 <AmiBlitz3.ab3@14390>   BEQ 'old
0002BD66 <AmiBlitz3.ab3@14391>   CMP.b #5,d2
0002BD6A <AmiBlitz3.ab3@14392>   BNE 'old
0002BD6C <AmiBlitz3.ab3@14393>  RTS
0002BD70 <AmiBlitz3.ab3@14397> BRA.w bytetof2
0002BD74 <AmiBlitz3.ab3@14400>   MOVE.w #$C316,D1      ; #ltobover
0002BD7A <AmiBlitz3.ab3@14402>   TST.b typecheck
0002BD7E <AmiBlitz3.ab3@14403>   BEQ 'l1
0002BD84 <AmiBlitz3.ab3@14404>   TST.b peekaddrsize
0002BD88 <AmiBlitz3.ab3@14405>   BNE 'l1
0002BD8E <AmiBlitz3.ab3@14406>   TST.b notypecheck
0002BD92 <AmiBlitz3.ab3@14407>   BNE 'l1
0002BD98 <AmiBlitz3.ab3@14408>   TST.l lasttoken
0002BD9C <AmiBlitz3.ab3@14415> BRA.w overchk
0002BDA0 <AmiBlitz3.ab3@14418>   MOVE.w #$C318,D1      ; #ltowover,
0002BDA6 <AmiBlitz3.ab3@14420>   TST.b typecheck
0002BDAA <AmiBlitz3.ab3@14421>   BEQ 'l1
0002BDB0 <AmiBlitz3.ab3@14422>   TST.b peekaddrsize
0002BDB4 <AmiBlitz3.ab3@14423>   BNE 'l1
0002BDBA <AmiBlitz3.ab3@14424>   TST.b notypecheck
0002BDBE <AmiBlitz3.ab3@14425>   BNE 'l1
0002BDC4 <AmiBlitz3.ab3@14426>   TST.l lasttoken
0002BDC8 <AmiBlitz3.ab3@14433> BRA.w overchk
0002BDCC <AmiBlitz3.ab3@14436>   MOVE.w #$C318,D1      ;#ltowover,
0002BDD2 <AmiBlitz3.ab3@14438>   TST.b typecheck
0002BDD6 <AmiBlitz3.ab3@14439>   BEQ 'l1
0002BDDC <AmiBlitz3.ab3@14440>   TST.b notypecheck
0002BDE0 <AmiBlitz3.ab3@14441>   BNE 'l1
0002BDE6 <AmiBlitz3.ab3@14442>   TST.l lasttoken
0002BDEA <AmiBlitz3.ab3@14449>   BSR.w overchk
0002BDEE <AmiBlitz3.ab3@14450> BRA.w convert_word_to_quick
0002BDF2 <AmiBlitz3.ab3@14453> BRA.w bytetof2
0002BDF4 <AmiBlitz3.ab3@14455> RTS ; dead old code
0002BDF8 <AmiBlitz3.ab3@14458>   MOVE.w #$C319,D1         ; #qtobover,
0002BDFE <AmiBlitz3.ab3@14460>   TST.b typecheck
0002BE02 <AmiBlitz3.ab3@14461>   BEQ 'l1
0002BE08 <AmiBlitz3.ab3@14462>   TST.b notypecheck
0002BE0C <AmiBlitz3.ab3@14463>   BNE 'l1
0002BE12 <AmiBlitz3.ab3@14464>   TST.l lasttoken
0002BE16 <AmiBlitz3.ab3@14471>   BSR.w overchk
0002BE1A <AmiBlitz3.ab3@14474>   MOVE.w #$4240,D1
0002BE20 <AmiBlitz3.ab3@14475>   OR.w regnum,D1
0002BE24 <AmiBlitz3.ab3@14476>   BSR.w writeword
0002BE28 <AmiBlitz3.ab3@14477>   MOVE.w #$4840,D1
0002BE2E <AmiBlitz3.ab3@14478>   OR.w regnum,D1
0002BE32 <AmiBlitz3.ab3@14479> BRA.w writeword
0002BE36 <AmiBlitz3.ab3@14482> BRA.w quicktob2
0002BE3A <AmiBlitz3.ab3@14485>   BSR.w quicktob2
0002BE3E <AmiBlitz3.ab3@14486> BRA.w convert_word_to_long
0002BE40 <AmiBlitz3.ab3@14491>   MOVEQ #0,d0
0002BE46 <AmiBlitz3.ab3@14492>   MOVE.w regnum,d0
0002BE48 <AmiBlitz3.ab3@14493>   ASL.l #7,d0
0002BE4E <AmiBlitz3.ab3@14494>   MOVE.l #$f2004000,d1
0002BE50 <AmiBlitz3.ab3@14495>   OR.l d0,d1
0002BE52 <AmiBlitz3.ab3@14496>   ASL.l #1,d0
0002BE54 <AmiBlitz3.ab3@14497>   ASL.l #8,d0
0002BE56 <AmiBlitz3.ab3@14498>   OR.l d0,d1
0002BE5A <AmiBlitz3.ab3@14499>   BSR writelong
0002BE60 <AmiBlitz3.ab3@14500>   MOVE.w regnum,d0
0002BE62 <AmiBlitz3.ab3@14501>   ASL.l #7,d0
0002BE68 <AmiBlitz3.ab3@14502>   MOVE.l #$f23c4423,d1                                     ;fmul.s #1/65536,fpreg
0002BE6A <AmiBlitz3.ab3@14503>   OR.w d0,d1
0002BE6E <AmiBlitz3.ab3@14504>   BSR writelong
0002BE74 <AmiBlitz3.ab3@14505>   MOVE.l #$37800000,d1
0002BE78 <AmiBlitz3.ab3@14506>   BSR writelong
0002BE7A <AmiBlitz3.ab3@14507> RTS
0002BE80 <AmiBlitz3.ab3@14514>   TST.b iee
0002BE84 <AmiBlitz3.ab3@14515>   BNE qtof
0002BE88 <AmiBlitz3.ab3@14517>   MOVE.w #$D300,D1       ; #qutofl,
0002BE8A <AmiBlitz3.ab3@14520>   MOVE.w D1,-(A7)
0002BE8E <AmiBlitz3.ab3@14521>    BSR.w savereg
0002BE90 <AmiBlitz3.ab3@14522>   MOVE.l D4,D1
0002BE94 <AmiBlitz3.ab3@14523>    BSR.w pokemovem
0002BE98 <AmiBlitz3.ab3@14525>    BSR.w ritetod0
0002BE9A <AmiBlitz3.ab3@14526>   MOVE.w (A7)+,D1
0002BE9E <AmiBlitz3.ab3@14527>    BSR.w Atokejsr
0002BEA2 <AmiBlitz3.ab3@14529>    BSR.w ritefromd0
0002BEA4 <AmiBlitz3.ab3@14530>   MOVE.l D5,D1
0002BEA8 <AmiBlitz3.ab3@14531> BRA.w pokemovem
0002BEAA <AmiBlitz3.ab3@14533> RTS ; dead old code
0002BEB0 <AmiBlitz3.ab3@14537>   TST.b typecheck
0002BEB4 <AmiBlitz3.ab3@14538>   BEQ 'l1
0002BEBA <AmiBlitz3.ab3@14539>   TST.b notypecheck
0002BEBE <AmiBlitz3.ab3@14540>   BNE 'l1
0002BEC4 <AmiBlitz3.ab3@14541>   TST.l lasttoken
0002BECA <AmiBlitz3.ab3@14547>   TST.b iee
0002BECE <AmiBlitz3.ab3@14548>   BNE ftol
0002BED2 <AmiBlitz3.ab3@14550>   MOVE.w #$C31A,D1       ; #ftobover
0002BED6 <AmiBlitz3.ab3@14551>   BSR.w overchk
0002BEDA <AmiBlitz3.ab3@14553>   BSR.w floattolong2
0002BEDE <AmiBlitz3.ab3@14554> BRA.w convert_long_to_byte
0002BEE0 <AmiBlitz3.ab3@14556> RTS ; dead old code
0002BEE6 <AmiBlitz3.ab3@14560>   TST.b typecheck
0002BEEA <AmiBlitz3.ab3@14561>   BEQ 'l1
0002BEF0 <AmiBlitz3.ab3@14562>   TST.b notypecheck
0002BEF4 <AmiBlitz3.ab3@14563>   BNE 'l1
0002BEFA <AmiBlitz3.ab3@14564>   TST.l lasttoken
0002BF00 <AmiBlitz3.ab3@14570>   TST.b iee
0002BF04 <AmiBlitz3.ab3@14571>   BNE ftol
0002BF08 <AmiBlitz3.ab3@14573>   MOVE.w #$C31B,D1         ; #ftowover
0002BF0C <AmiBlitz3.ab3@14574>   BSR.w overchk
0002BF10 <AmiBlitz3.ab3@14576>   BSR.w floattolong2
0002BF14 <AmiBlitz3.ab3@14577> BRA.w convert_long_to_word
0002BF16 <AmiBlitz3.ab3@14579> RTS  ; dead old code
0002BF1C <AmiBlitz3.ab3@14583>   TST.b iee
0002BF20 <AmiBlitz3.ab3@14584>   BNE ftol
0002BF24 <AmiBlitz3.ab3@14586>   MOVE.w #$C31C,D1     ; #ftolover,
0002BF28 <AmiBlitz3.ab3@14587>   BSR.w overchk
0002BF2C <AmiBlitz3.ab3@14590>   MOVE.w #$FFE2,D1     ; #-30,
0002BF30 <AmiBlitz3.ab3@14591> BRA.w fdo2
0002BF32 <AmiBlitz3.ab3@14595>   MOVE.l d0,-(a7)
0002BF34 <AmiBlitz3.ab3@14596>   MOVEQ #0,d0
0002BF3A <AmiBlitz3.ab3@14597>   MOVE.w regnum,d0
0002BF3C <AmiBlitz3.ab3@14598>   ASL.l #7,d0
0002BF42 <AmiBlitz3.ab3@14599>   MOVE.l #$f2006000,d1
0002BF44 <AmiBlitz3.ab3@14600>   OR.l d0,d1
0002BF46 <AmiBlitz3.ab3@14601>   ASL.l #1,d0
0002BF48 <AmiBlitz3.ab3@14602>   ASL.l #8,d0
0002BF4A <AmiBlitz3.ab3@14603>   OR.l d0,d1
0002BF4C <AmiBlitz3.ab3@14604>   MOVE.l (a7)+,d0
0002BF50 <AmiBlitz3.ab3@14605> BRA writelong
0002BF52 <AmiBlitz3.ab3@14609>   MOVE.l d0,-(a7)
0002BF54 <AmiBlitz3.ab3@14610>   MOVEQ #0,d0
0002BF5A <AmiBlitz3.ab3@14611>   MOVE.l #$f23c4023,d1
0002BF60 <AmiBlitz3.ab3@14612>   MOVE.w regnum,d0
0002BF62 <AmiBlitz3.ab3@14613>   ASL.l #7,d0
0002BF64 <AmiBlitz3.ab3@14614>   OR.l d0,d1
0002BF68 <AmiBlitz3.ab3@14615>   BSR writelong
0002BF6E <AmiBlitz3.ab3@14616>   MOVE.l #$00010000,d1
0002BF72 <AmiBlitz3.ab3@14617>   BSR writelong
0002BF78 <AmiBlitz3.ab3@14618>   MOVE.w regnum,d0
0002BF7A <AmiBlitz3.ab3@14619>   ASL.l #7,d0
0002BF80 <AmiBlitz3.ab3@14620>   MOVE.l #$f2006000,d1
0002BF82 <AmiBlitz3.ab3@14621>   OR.l d0,d1
0002BF84 <AmiBlitz3.ab3@14622>   ASL.l #1,d0
0002BF86 <AmiBlitz3.ab3@14623>   ASL.l #8,d0
0002BF88 <AmiBlitz3.ab3@14624>   OR.l d0,d1
0002BF8C <AmiBlitz3.ab3@14625>   BSR writelong
0002BF8E <AmiBlitz3.ab3@14626>   MOVE.l (a7)+,d0
0002BF90 <AmiBlitz3.ab3@14627> RTS
0002BF92 <AmiBlitz3.ab3@14630> RTS         ; dead old code
0002BF98 <AmiBlitz3.ab3@14637>   TST.b iee
0002BF9C <AmiBlitz3.ab3@14638>   BNE ftoq
0002BFA0 <AmiBlitz3.ab3@14640>   MOVE.w #$C31B,D1    ; #ftowover,
0002BFA4 <AmiBlitz3.ab3@14641>   BSR.w overchk
0002BFA8 <AmiBlitz3.ab3@14643>   MOVE.w #$D301,D1    ; #fltoqu,
0002BFAC <AmiBlitz3.ab3@14644> BRA.w qtof2
0002BFB2 <AmiBlitz3.ab3@14649>    TST.b blitzparloop
0002BFB6 <AmiBlitz3.ab3@14650>    BNE 'l1
0002BFBC <AmiBlitz3.ab3@14651>    TST.b funcparloop
0002BFC0 <AmiBlitz3.ab3@14652>    BNE 'l1
0002BFC4 <AmiBlitz3.ab3@14653>    BRA error_convert_types
0002BFCC <AmiBlitz3.ab3@14656>   CMP.b #2,optistring
0002BFD0 <AmiBlitz3.ab3@14657>   BEQ JLrts
0002BFD6 <AmiBlitz3.ab3@14659>   MOVE.w stol,D1
0002BFDA <AmiBlitz3.ab3@14660>   BSR.w writeword
0002BFE2 <AmiBlitz3.ab3@14662>   CMPI.w #$2,sbgot
0002BFE6 <AmiBlitz3.ab3@14664>   BCS.w sbtolong                     ; was BRA
0002BFEA <AmiBlitz3.ab3@14666>   MOVE.w ceos(PC),D1                 ; begin copy of sbtolong
0002BFEE <AmiBlitz3.ab3@14667>   BSR.w writeword
0002BFF4 <AmiBlitz3.ab3@14669>   MOVE.w regnum,D1
0002BFF6 <AmiBlitz3.ab3@14670>   LSL.w #8,D1
0002BFF8 <AmiBlitz3.ab3@14671>   LSL.w #1,D1
0002C000 <AmiBlitz3.ab3@14672>   CMPI.w #$2,sbgot
0002C004 <AmiBlitz3.ab3@14673>   BCS.w sbtolong_skip2
0002C00A <AmiBlitz3.ab3@14674>   MOVE.w a2offset,D3
0002C010 <AmiBlitz3.ab3@14675>   SUB.w thisstuse,D3
0002C014 <AmiBlitz3.ab3@14676>   CMP.w #$6,D3
0002C018 <AmiBlitz3.ab3@14677>   BNE.w 'lenonly
0002C01E <AmiBlitz3.ab3@14678>   OR.w movestst2,D1
0002C022 <AmiBlitz3.ab3@14679>   BSR.w writeword
0002C028 <AmiBlitz3.ab3@14680>   LEA movestst2+2,A0
0002C02E <AmiBlitz3.ab3@14681>   LEA movestst2f,A1
0002C032 <AmiBlitz3.ab3@14682>  BRA.w pokecode2
0002C038 <AmiBlitz3.ab3@14685>   OR.w movea7dn,D1
0002C03C <AmiBlitz3.ab3@14686>   BSR.w writeword
0002C042 <AmiBlitz3.ab3@14687>   MOVE.l #0,D1
0002C046 <AmiBlitz3.ab3@14688> BRA.w writeword                      ; end of copy
0002C04C <AmiBlitz3.ab3@14695>   ADDQ.w #1,fuckpos
0002C050 <AmiBlitz3.ab3@14696>   BSR.w writeconvertcode
0002C056 <AmiBlitz3.ab3@14697>   SUBQ.w #1,fuckpos
0002C058 <AmiBlitz3.ab3@14701> RTS
0002C05A <AmiBlitz3.ab3@14705>   MOVE.w D3,D1
0002C05E <AmiBlitz3.ab3@14707>   CMP.w #7,d1
0002C062 <AmiBlitz3.ab3@14708>   BLE 'ok
0002C068 <AmiBlitz3.ab3@14709>   JMP errorinternalconvert
0002C06A <AmiBlitz3.ab3@14713>   SUBQ.w #1,D1
0002C06E <AmiBlitz3.ab3@14714>   MULU #$7,D1
0002C070 <AmiBlitz3.ab3@14715>   ADD.w D2,D1
0002C072 <AmiBlitz3.ab3@14716>   SUBQ.w #1,D1
0002C074 <AmiBlitz3.ab3@14717>   LSL.w #2,D1
0002C07A <AmiBlitz3.ab3@14718>   LEA convtable,A0
0002C07E <AmiBlitz3.ab3@14719>   MOVE.l $0(A0,D1.W),D1
0002C082 <AmiBlitz3.ab3@14720>   BEQ.w 'skip
0002C084 <AmiBlitz3.ab3@14721>     MOVEA.l D1,A0
0002C088 <AmiBlitz3.ab3@14723>     CMP.b #$ff,d3
0002C08C <AmiBlitz3.ab3@14724>     BEQ 'skip
0002C08E <AmiBlitz3.ab3@14726>  JMP (A0)
0002C090 <AmiBlitz3.ab3@14729> RTS
0002C094 <AmiBlitz3.ab3@14732> usedfrom:  Ds.l 1
0002C098 <AmiBlitz3.ab3@14739>   CMP.w #"\",D0
0002C09C <AmiBlitz3.ab3@14740>   BNE.w 'skip0
0002C0A0 <AmiBlitz3.ab3@14742>     CMP.b #"\",(a5)
0002C0A4 <AmiBlitz3.ab3@14743>     BNE 'first
0002C0AA <AmiBlitz3.ab3@14744>       MOVE.l A5,usedfrom
0002C0B0 <AmiBlitz3.ab3@14745>       LEA path2,A5
0002C0B4 <AmiBlitz3.ab3@14746>  BRA 'g1
0002C0B6 <AmiBlitz3.ab3@14750>     SUBQ.w #1,A5
0002C0BC <AmiBlitz3.ab3@14751>   MOVE.l A5,usedfrom
0002C0C2 <AmiBlitz3.ab3@14752>   LEA usedpath,A5                                          ;read path
0002C0C6 <AmiBlitz3.ab3@14757>   BSR.w get1bytemain
0002C0CC <AmiBlitz3.ab3@14760>   CLR.w flagmask
0002C0D0 <AmiBlitz3.ab3@14761>   CMP.w #$2A,D0             ;'*'
0002C0D4 <AmiBlitz3.ab3@14762>    BNE.w 'skip
0002C0DC <AmiBlitz3.ab3@14763>   MOVE.w #$0001,flagmask
0002C0E0 <AmiBlitz3.ab3@14766>    BSR.w getparameter2
0002C0E4 <AmiBlitz3.ab3@14769>    BEQ.w syntaxerr
0002C0E8 <AmiBlitz3.ab3@14770>   CMP.w #$28,D0             ;'('
0002C0EC <AmiBlitz3.ab3@14771>    BEQ.w 'setmask
0002C0F0 <AmiBlitz3.ab3@14772>   CMP.w #$2E,D0             ;'.'
0002C0F4 <AmiBlitz3.ab3@14773>    BEQ.w 'morem
0002C0F8 <AmiBlitz3.ab3@14774>   CMP.w #$24,D0             ;'$'
0002C0FC <AmiBlitz3.ab3@14775>    BNE.w 'done
0002C104 <AmiBlitz3.ab3@14776>   ORI.w #$8,flagmask
0002C108 <AmiBlitz3.ab3@14777>    BSR.w storeloc
0002C10C <AmiBlitz3.ab3@14778>    BSR.w get1bytemain
0002C110 <AmiBlitz3.ab3@14779>  BRA.w 'morez
0002C114 <AmiBlitz3.ab3@14783>   BSR.w storeloc
0002C116 <AmiBlitz3.ab3@14784>   MOVE.w D2,-(A7)
0002C11C <AmiBlitz3.ab3@14785>   LEA namebuff2,A1
0002C120 <AmiBlitz3.ab3@14786>    BSR.w makename3
0002C124 <AmiBlitz3.ab3@14787>    BEQ.w syntaxerr
0002C126 <AmiBlitz3.ab3@14788>   MOVE.w (A7)+,D2
0002C128 <AmiBlitz3.ab3@14791>    MOVE.w D0,D1
0002C12C <AmiBlitz3.ab3@14792>    BSR.w resloc
0002C130 <AmiBlitz3.ab3@14793>    CMP.w #$28,D1             ;'('
0002C134 <AmiBlitz3.ab3@14794>    BNE.w 'done
0002C13C <AmiBlitz3.ab3@14797>   ORI.w #$2,flagmask
0002C13E <AmiBlitz3.ab3@14800>  RTS
0002C142 <AmiBlitz3.ab3@14803>   CMP.w #$40,D0              ;'@'
0002C146 <AmiBlitz3.ab3@14804>    BNE.w 'skip2
0002C14E <AmiBlitz3.ab3@14805>   MOVE.w #$0005,flagmask
0002C152 <AmiBlitz3.ab3@14806>  BRA.w 'more2
0002C156 <AmiBlitz3.ab3@14809>   BSR.w makename2
0002C15A <AmiBlitz3.ab3@14810> BRA.w 'more
0002C15E <AmiBlitz3.ab3@14814>   MOVE.w #$FED3,D1          ; #65235
0002C162 <AmiBlitz3.ab3@14815>    BSR.w uselib
0002C168 <AmiBlitz3.ab3@14816>   LEA pusha3,A0
0002C16E <AmiBlitz3.ab3@14817>   LEA pusha3f,A1
0002C172 <AmiBlitz3.ab3@14818> BRA.w pokecode
0002C176 <AmiBlitz3.ab3@14822>   MOVE.w #$FED3,D1          ; #65235
0002C17A <AmiBlitz3.ab3@14823>    BSR.w uselib
0002C180 <AmiBlitz3.ab3@14824>   LEA pulla3,A0
0002C186 <AmiBlitz3.ab3@14825>   LEA pulla3f,A1
0002C18A <AmiBlitz3.ab3@14826> BRA.w pokecode
0002C18C <AmiBlitz3.ab3@14830> ceos:   Dc.b $42,$1B                                       ;CLR.B   (A3)+             ;*!
0002C194 <AmiBlitz3.ab3@14836>     CMP.b #2,optistring
0002C198 <AmiBlitz3.ab3@14837>    BEQ 'l10
0002C19C <AmiBlitz3.ab3@14839>    MOVE.w ceos(PC),D1
0002C1A0 <AmiBlitz3.ab3@14840>    BSR.w writeword                                         ;clr.b (a3)
0002C1A6 <AmiBlitz3.ab3@14845>   MOVE.w regnum,D1
0002C1A8 <AmiBlitz3.ab3@14846>   LSL.w #8,D1
0002C1AA <AmiBlitz3.ab3@14847>   LSL.w #1,D1
0002C1B2 <AmiBlitz3.ab3@14848>   CMPI.w #$2,sbgot
0002C1B6 <AmiBlitz3.ab3@14849>    BCS.w sbtolong_skip2
0002C1BC <AmiBlitz3.ab3@14850>   MOVE.w a2offset,D3                                       ;stackuse,d3 org source
0002C1C2 <AmiBlitz3.ab3@14851>   SUB.w thisstuse,D3
0002C1C6 <AmiBlitz3.ab3@14852>   CMP.w #$6,D3
0002C1CA <AmiBlitz3.ab3@14853>    BNE.w 'lenonly
0002C1D0 <AmiBlitz3.ab3@14854>   OR.w movestst2,D1
0002C1D4 <AmiBlitz3.ab3@14855>    BSR.w writeword
0002C1DA <AmiBlitz3.ab3@14856>   LEA movestst2+2,A0
0002C1E0 <AmiBlitz3.ab3@14857>   LEA movestst2f,A1
0002C1E4 <AmiBlitz3.ab3@14858>  BRA.w pokecode2
0002C1EA <AmiBlitz3.ab3@14861>    OR.w movea7dn,D1
0002C1EE <AmiBlitz3.ab3@14862>    BSR.w writeword
0002C1F4 <AmiBlitz3.ab3@14863>   MOVE.l movea7dn+2,D1
0002C1F8 <AmiBlitz3.ab3@14876>   BSR writelong
0002C200 <AmiBlitz3.ab3@14879>    CMP.w #6,regnum
0002C204 <AmiBlitz3.ab3@14880>    BEQ 'l1
0002C20A <AmiBlitz3.ab3@14881>    TST.w stackpar
0002C20E <AmiBlitz3.ab3@14882>    BNE 'l1
0002C214 <AmiBlitz3.ab3@14883>    TST.b funcparloop
0002C218 <AmiBlitz3.ab3@14884>    BEQ 'l1
0002C21E <AmiBlitz3.ab3@14885>    MOVE.l #$48780000,d1
0002C222 <AmiBlitz3.ab3@14886>    BSR writelong
0002C224 <AmiBlitz3.ab3@14890>  RTS
0002C226 <AmiBlitz3.ab3@14896>      MOVE.l d1,-(a7)
0002C22E <AmiBlitz3.ab3@14897>      CMP.w #6,regnum
0002C232 <AmiBlitz3.ab3@14898>      BEQ 'l1
0002C238 <AmiBlitz3.ab3@14899>      TST.w stackpar
0002C23C <AmiBlitz3.ab3@14900>      BNE 'l1
0002C242 <AmiBlitz3.ab3@14901>      TST.b funcparloop
0002C246 <AmiBlitz3.ab3@14902>      BEQ 'l1
0002C24C <AmiBlitz3.ab3@14903>      MOVE.l #$48780000,d1
0002C250 <AmiBlitz3.ab3@14904>      BSR writelong
0002C252 <AmiBlitz3.ab3@14907>      MOVE.l (a7)+,d1
0002C258 <AmiBlitz3.ab3@14910>    OR.w movestdn,D1
0002C25C <AmiBlitz3.ab3@14911>    BSR.w writeword
0002C260 <AmiBlitz3.ab3@14912>   MOVE.w #$FED3,D1        ;#65235
0002C264 <AmiBlitz3.ab3@14913>    BSR.w uselib
0002C268 <AmiBlitz3.ab3@14914>   MOVE.w $A(A1),D1
0002C26C <AmiBlitz3.ab3@14915> BRA.w writeword
0002C26E <AmiBlitz3.ab3@14918> unknown:    Ds.w 1
0002C274 <AmiBlitz3.ab3@14921> somecode:   Dc.b $0C,$80,$00,$01,$00,$00                   ;CMPI.L  #$00010000,D0
0002C278 <AmiBlitz3.ab3@14922> somecode2:  Dc.b $65,$00,$00,$08                           ;BCS.W   codeisok
0002C27E <AmiBlitz3.ab3@14923>             Dc.b $4E,$B9,$00,$00,$00,$00                   ;JSR $00000000
0002C284 <AmiBlitz3.ab3@14929>   TST.b debugmode
0002C288 <AmiBlitz3.ab3@14930>   BEQ.w sharreval
0002C28C <AmiBlitz3.ab3@14931>  BSR.w arreval
0002C290 <AmiBlitz3.ab3@14934>   MOVE.w somecode(PC),D1
0002C296 <AmiBlitz3.ab3@14935>   OR.w regnum,D1
0002C29A <AmiBlitz3.ab3@14936>    BSR.w writeword
0002C29C <AmiBlitz3.ab3@14937>   MOVEQ.l #$01,D1
0002C29E <AmiBlitz3.ab3@14938>   SWAP D1
0002C2A2 <AmiBlitz3.ab3@14939>    BSR.w writelong
0002C2A6 <AmiBlitz3.ab3@14940>   MOVE.l somecode2(PC),D1
0002C2AA <AmiBlitz3.ab3@14941>    BSR.w writelong
0002C2AE <AmiBlitz3.ab3@14942>   MOVE.w #$C309,D1     ; was #arrerr,
0002C2B2 <AmiBlitz3.ab3@14943> BRA.w Atokejsr
0002C2B4 <AmiBlitz3.ab3@14947>   MOVEQ.l #$02,D2
0002C2B6 <AmiBlitz3.ab3@14948>   MOVEQ.l #$00,D1
0002C2B8 <AmiBlitz3.ab3@14949>   MOVEQ.l #$00,D3
0002C2BC <AmiBlitz3.ab3@14950> BRA.w maineval2
0002C2BE <AmiBlitz3.ab3@14954>   MOVEQ.l #$03,D2           ;getlong
0002C2C0 <AmiBlitz3.ab3@14955>   MOVEQ.l #$00,D1           ;no push
0002C2C2 <AmiBlitz3.ab3@14956>   MOVEQ.l #$00,D3           ;and convert
0002C2C8 <AmiBlitz3.ab3@14957>   MOVE.b notypecheck,-(a7)
0002C2D0 <AmiBlitz3.ab3@14958>   MOVE.b #1,notypecheck                                    ;typecheck need switch off for array offset calculation code
0002C2D6 <AmiBlitz3.ab3@14959>   JSR maineval2             ;2!* ;was bra
0002C2DC <AmiBlitz3.ab3@14961>   MOVE.b (a7)+,notypecheck                                 ;now its switch to old state
0002C2DE <AmiBlitz3.ab3@14962> RTS
0002C2E8 <AmiBlitz3.ab3@14968>   MOVE.w oldqflag,instringon
0002C2EE <AmiBlitz3.ab3@14969>   MOVEA.l lastsourcepos,A5
0002C2F0 <AmiBlitz3.ab3@14971>   MOVEQ.l #-$01,D1
0002C2F2 <AmiBlitz3.ab3@14972>   MOVEQ.l #-$01,D3
0002C2F6 <AmiBlitz3.ab3@14973> BRA.w peval
0002C300 <AmiBlitz3.ab3@14979>   MOVE.w oldqflag,instringon
0002C306 <AmiBlitz3.ab3@14980>   MOVEA.l lastsourcepos,A5
0002C308 <AmiBlitz3.ab3@14983>   MOVEQ.l #-$01,D1
0002C30A <AmiBlitz3.ab3@14984>   MOVEQ.l #$00,D3
0002C310 <AmiBlitz3.ab3@14986>   MOVE.l leftsidetype,-(a7)
0002C316 <AmiBlitz3.ab3@14987>   MOVE.l rightsidetype,-(a7)
0002C31C <AmiBlitz3.ab3@14988>   MOVE.w leftsideflagmask,-(a7)
0002C322 <AmiBlitz3.ab3@14989>   MOVE.w rightsideflagmask,-(a7)
0002C328 <AmiBlitz3.ab3@14990>   CLR.l leftsidetype
0002C32E <AmiBlitz3.ab3@14991>   CLR.l rightsidetype
0002C334 <AmiBlitz3.ab3@14992>   CLR.w leftsideflagmask
0002C33A <AmiBlitz3.ab3@14993>   CLR.w rightsideflagmask
0002C340 <AmiBlitz3.ab3@14995>   JSR maineval                    ; was bra
0002C346 <AmiBlitz3.ab3@14997>   MOVE.w (a7)+,rightsideflagmask
0002C34C <AmiBlitz3.ab3@14998>   MOVE.w (a7)+,leftsideflagmask
0002C352 <AmiBlitz3.ab3@14999>   MOVE.l (a7)+,rightsidetype
0002C358 <AmiBlitz3.ab3@15000>   MOVE.l (a7)+,leftsidetype
0002C35A <AmiBlitz3.ab3@15001> RTS
0002C364 <AmiBlitz3.ab3@15007>   MOVE.w oldqflag,instringon
0002C36A <AmiBlitz3.ab3@15008>   MOVEA.l lastsourcepos,A5
0002C36C <AmiBlitz3.ab3@15011>   MOVEQ.l #$00,D1
0002C36E <AmiBlitz3.ab3@15012>   MOVEQ.l #-$01,D3
0002C372 <AmiBlitz3.ab3@15013> BRA.w maineval
0002C374 <AmiBlitz3.ab3@15017>   MOVEQ.l #$01,D1
0002C376 <AmiBlitz3.ab3@15018>   MOVEQ.l #-$01,D3
0002C37A <AmiBlitz3.ab3@15019> BRA.w maineval
0002C384 <AmiBlitz3.ab3@15025>   MOVE.w oldqflag,instringon
0002C38A <AmiBlitz3.ab3@15026>   MOVEA.l lastsourcepos,A5
0002C38C <AmiBlitz3.ab3@15030>   MOVEQ.l #$00,D1      ;no push
0002C38E <AmiBlitz3.ab3@15031>   MOVEQ.l #$00,D3
0002C396 <AmiBlitz3.ab3@15052>    CMPI.w #$6,regnum
0002C39A <AmiBlitz3.ab3@15053>    BCS.w maineval2
0002C39C <AmiBlitz3.ab3@15055>    MOVEQ #0,d1
0002C3A2 <AmiBlitz3.ab3@15056>    MOVE.l destpointer,a4
0002C3A8 <AmiBlitz3.ab3@15058>    CMPA.l destbufferend,A4
0002C3AC <AmiBlitz3.ab3@15059>    BCC.w 'l2
0002C3B2 <AmiBlitz3.ab3@15061>    CMP.w #$2f0a,-2(a4)                                    ;bug is a move.l a2,-(a7) before (show temp calc)?
0002C3B6 <AmiBlitz3.ab3@15063>    BNE 'l2
0002C3BA <AmiBlitz3.ab3@15067> BRA 'l1
0002C3BC <AmiBlitz3.ab3@15071>   MOVEQ.l #-$01,D1                                         ;do stackpar write
0002C3C4 <AmiBlitz3.ab3@15074>   MOVE.w #$0006,regnum                                     ;write a func par To stack
0002C3CA <AmiBlitz3.ab3@15080>   MOVE.w thisstuse,-(A7)
0002C3D4 <AmiBlitz3.ab3@15081>   MOVE.w a2offset,thisstuse
0002C3DA <AmiBlitz3.ab3@15083>   MOVE.w stackpar,-(A7)
0002C3E0 <AmiBlitz3.ab3@15084>   MOVE.w D1,stackpar
0002C3E6 <AmiBlitz3.ab3@15085>   MOVE.w sbgot,-(A7)
0002C3EC <AmiBlitz3.ab3@15086>   CLR.w sbgot                ;not pushed yet
0002C3F0 <AmiBlitz3.ab3@15087>   MOVE.w unknown(PC),-(A7)
0002C3F6 <AmiBlitz3.ab3@15088>   MOVE.w D3,unknown
0002C3F8 <AmiBlitz3.ab3@15090>   MOVE.w D2,-(a7)
0002C3FE <AmiBlitz3.ab3@15092>   MOVE.w d2,mode
0002C402 <AmiBlitz3.ab3@15094>    BSR.w eval3
0002C404 <AmiBlitz3.ab3@15095>   MOVE.w (a7)+,d3            ;type asked for
0002C408 <AmiBlitz3.ab3@15096>    BEQ.w 'noconv
0002C40C <AmiBlitz3.ab3@15097>   MOVE.w unknown(PC),D1
0002C410 <AmiBlitz3.ab3@15098>    BNE.w 'noconv
0002C412 <AmiBlitz3.ab3@15099>   EXG.l D2,D3
0002C414 <AmiBlitz3.ab3@15101>    MOVE.l a2,-(a7)
0002C41A <AmiBlitz3.ab3@15102>    TST.b curtemplabel
0002C41E <AmiBlitz3.ab3@15103>    BEQ 'l10
0002C424 <AmiBlitz3.ab3@15104>    MOVE.l asmbuff,a2
0002C42A <AmiBlitz3.ab3@15105>    CMP.w #$c,$8(a2)
0002C42E <AmiBlitz3.ab3@15106>    BEQ 'l20
0002C434 <AmiBlitz3.ab3@15107>    CMP.w #$d,$8(a2)
0002C438 <AmiBlitz3.ab3@15108>    BEQ 'l20
0002C43A <AmiBlitz3.ab3@15111>   CMP.w d2,d3
0002C43E <AmiBlitz3.ab3@15112>   BEQ 'l20
0002C442 <AmiBlitz3.ab3@15113>   BSR.w writeconvertcode
0002C448 <AmiBlitz3.ab3@15114>   CLR.b doimmediate
0002C44A <AmiBlitz3.ab3@15117>   MOVE.l (a7)+,a2
0002C450 <AmiBlitz3.ab3@15121>   MOVE.w (A7)+,unknown
0002C456 <AmiBlitz3.ab3@15122>   MOVE.w stackpar,D1
0002C45A <AmiBlitz3.ab3@15123>    BEQ.w 'skipme
0002C45E <AmiBlitz3.ab3@15124>    BMI.w 'skipme
0002C464 <AmiBlitz3.ab3@15128>   MOVE.w regnum,D1
0002C466 <AmiBlitz3.ab3@15129>   LSL.w #8,D1
0002C468 <AmiBlitz3.ab3@15130>   LSL.w #1,D1
0002C46C <AmiBlitz3.ab3@15131>   CMP.w #$7,D2
0002C470 <AmiBlitz3.ab3@15132>    BNE.w 'hi1
0002C478 <AmiBlitz3.ab3@15134>    CMP.b #2,optistring
0002C47C <AmiBlitz3.ab3@15135>    BEQ 'hi1a
0002C47E <AmiBlitz3.ab3@15137>   MOVE.w D1,-(A7)
0002C484 <AmiBlitz3.ab3@15138>   OR.w getstlen,D1
0002C488 <AmiBlitz3.ab3@15139>    BSR.w writeword
0002C48A <AmiBlitz3.ab3@15140>   MOVE.w (A7)+,D1
0002C490 <AmiBlitz3.ab3@15143>   ADDQ.w #2,a2offset                                        ;lib mode to stack
0002C494 <AmiBlitz3.ab3@15148>   MOVE.w #$3f3c,d1
0002C498 <AmiBlitz3.ab3@15150>    BSR.w writeword
0002C49A <AmiBlitz3.ab3@15155>   MOVE.w d2,d1
0002C4A0 <AmiBlitz3.ab3@15156>   MOVE.w d1,libmode
0002C4A4 <AmiBlitz3.ab3@15158>    BSR.w writeword
0002C4A8 <AmiBlitz3.ab3@15160>   CMP.w #$7,D2
0002C4AC <AmiBlitz3.ab3@15161>    BNE.w 'skipme
0002C4B2 <AmiBlitz3.ab3@15162>   MOVE.w putstlen,D1
0002C4B8 <AmiBlitz3.ab3@15163>   OR.w regnum,D1
0002C4BC <AmiBlitz3.ab3@15164>    BSR.w writeword
0002C4C0 <AmiBlitz3.ab3@15167>    CMP.w #$7,D2
0002C4C4 <AmiBlitz3.ab3@15168>    BNE.w 'notst
0002C4CC <AmiBlitz3.ab3@15181>    CMP.b #2,optistring
0002C4D0 <AmiBlitz3.ab3@15182>    BEQ 'skipme_l10
0002C4D6 <AmiBlitz3.ab3@15184>    ADDQ.w #4,a2offset     ;a length on da stack.....
0002C4DA <AmiBlitz3.ab3@15185>    BSR.w sbtolong
0002C4DE <AmiBlitz3.ab3@15186>  BRA.w 'notst2
0002C4E6 <AmiBlitz3.ab3@15191>     CMP.w #6,regnum
0002C4EA <AmiBlitz3.ab3@15192>     BEQ 'skipme_l10_l1
0002C4F0 <AmiBlitz3.ab3@15193>     TST.b funcparloop
0002C4F4 <AmiBlitz3.ab3@15194>     BEQ 'skipme_l10_l1
0002C4FA <AmiBlitz3.ab3@15195>     MOVE.l #$48780000,d1
0002C4FE <AmiBlitz3.ab3@15196>     BSR writelong
0002C502 <AmiBlitz3.ab3@15200>  BRA.w 'notst2
0002C508 <AmiBlitz3.ab3@15203>   ADDQ.w #2,a2offset
0002C50C <AmiBlitz3.ab3@15204>  BRA 'skipme
0002C514 <AmiBlitz3.ab3@15208>   CMPI.w #$2,sbgot
0002C518 <AmiBlitz3.ab3@15209>    BCS.w 'notst2                                         ;correct stack
0002C51C <AmiBlitz3.ab3@15210>   MOVE.w ststfix(PC),D1
0002C520 <AmiBlitz3.ab3@15211>    BSR.w writeword
0002C526 <AmiBlitz3.ab3@15214>   MOVE.w (A7)+,sbgot
0002C52C <AmiBlitz3.ab3@15216>   MOVE.w stackpar,D1
0002C530 <AmiBlitz3.ab3@15217>    BPL.w 'skip
0002C534 <AmiBlitz3.ab3@15219>    CMP.b #7,d2
0002C538 <AmiBlitz3.ab3@15220>    BEQ 'notst2_l1
0002C53E <AmiBlitz3.ab3@15221>   TST.b funcparloop
0002C542 <AmiBlitz3.ab3@15222>   BEQ 'notst2_l1
0002C546 <AmiBlitz3.ab3@15223>   CMP.b #5,d2
0002C54A <AmiBlitz3.ab3@15224>   BNE 'notst2_skip
0002C550 <AmiBlitz3.ab3@15225>   TST.b fpu
0002C554 <AmiBlitz3.ab3@15226>   BEQ 'notst2_skip
0002C55A <AmiBlitz3.ab3@15227>   MOVE.l #$f2066700,d1                                     ;fmove.s fp6,d6
0002C560 <AmiBlitz3.ab3@15228>   JSR writelong
0002C564 <AmiBlitz3.ab3@15231>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0002C56A <AmiBlitz3.ab3@15232>   ADD.w parnum,d1
0002C570 <AmiBlitz3.ab3@15233>   JSR Atokejsr
0002C576 <AmiBlitz3.ab3@15234>    TST.w dontwrite_nomemleft
0002C57A <AmiBlitz3.ab3@15235>    BNE 'notst2_l1
0002C580 <AmiBlitz3.ab3@15236>    MOVE.l data1start,d1
0002C586 <AmiBlitz3.ab3@15237>    MOVE.l destpointer,a4
0002C58A <AmiBlitz3.ab3@15238>    ADD.l d1,-4(a4)
0002C590 <AmiBlitz3.ab3@15239>    MOVE.l destpointer,d1
0002C592 <AmiBlitz3.ab3@15240>    SUBQ.l #4,d1
0002C598 <AmiBlitz3.ab3@15241>    SUB.l destbufferstart,d1
0002C59A <AmiBlitz3.ab3@15242>    MOVE.l d2,-(a7)
0002C59C <AmiBlitz3.ab3@15243>    MOVE.l d1,d2
0002C5A2 <AmiBlitz3.ab3@15244>    JSR addhunkoffset
0002C5A4 <AmiBlitz3.ab3@15245>    MOVE.l (a7)+,d2
0002C5A8 <AmiBlitz3.ab3@15246>  BRA 'skip
0002C5AE <AmiBlitz3.ab3@15250>   ADDQ.w #2,a2offset
0002C5B4 <AmiBlitz3.ab3@15251>   MOVE.w pushd0wd,D1
0002C5B8 <AmiBlitz3.ab3@15252>   CMP.w #$3,D2                                             ;write parameter to stack
0002C5BC <AmiBlitz3.ab3@15253>    BCS.w 'ok
0002C5C2 <AmiBlitz3.ab3@15254>   ADDQ.w #2,a2offset
0002C5C8 <AmiBlitz3.ab3@15256>   TST.b fpu
0002C5CC <AmiBlitz3.ab3@15257>   BEQ 'notst2_nofpu
0002C5D0 <AmiBlitz3.ab3@15258>   CMP.w #5,d2
0002C5D4 <AmiBlitz3.ab3@15259>   BNE 'notst2_nofpu
0002C5D6 <AmiBlitz3.ab3@15260>   MOVEQ #0,d1
0002C5DC <AmiBlitz3.ab3@15261>   MOVE.w regnum,d1
0002C5DE <AmiBlitz3.ab3@15262>   ASL.l #7,d1
0002C5E4 <AmiBlitz3.ab3@15263>   OR.l #$f2276400,d1
0002C5E8 <AmiBlitz3.ab3@15264>   BSR writelong
0002C5EC <AmiBlitz3.ab3@15265>  BRA 'skip
0002C5F2 <AmiBlitz3.ab3@15269>   MOVE.w pushd0l,D1
0002C5F8 <AmiBlitz3.ab3@15272>    OR.w regnum,D1
0002C5FC <AmiBlitz3.ab3@15273>    BSR.w writeword                                         ;nat
0002C602 <AmiBlitz3.ab3@15276>   MOVE.w (A7)+,stackpar
0002C608 <AmiBlitz3.ab3@15277>   MOVE.w (A7)+,thisstuse
0002C60A <AmiBlitz3.ab3@15278> RTS
0002C60C <AmiBlitz3.ab3@15281> thisstuse: Ds.w 1
0002C60E <AmiBlitz3.ab3@15284> ststfix:   Dc.b $58,$4F                                    ;ADDQ.W  #4,A7
0002C610 <AmiBlitz3.ab3@15285> pushut:    Dc.b $3F,$00                                    ;MOVE.W  D0,-(A7)
0002C614 <AmiBlitz3.ab3@15290>   BSR.w eval4
0002C61E <AmiBlitz3.ab3@15291>   SUBI.l #$12,forthsp
0002C620 <AmiBlitz3.ab3@15292> RTS
0002C622 <AmiBlitz3.ab3@15296>   MOVEQ.l #$01,D1
0002C626 <AmiBlitz3.ab3@15299>       MOVEA.l precsp(PC),A1
0002C628 <AmiBlitz3.ab3@15300>       MOVE.l A0,(A1)+
0002C62A <AmiBlitz3.ab3@15301>       MOVE.w D1,(A1)+
0002C630 <AmiBlitz3.ab3@15302>       MOVE.l A1,precsp
0002C634 <AmiBlitz3.ab3@15304>    BSR.w calcloop
0002C636 <AmiBlitz3.ab3@15305>   TST.w D1
0002C63A <AmiBlitz3.ab3@15306>    BNE.w syntaxerr
0002C640 <AmiBlitz3.ab3@15308>   SUBQ.l #6,precsp           ;pop the prec set up
0002C642 <AmiBlitz3.ab3@15309> RTS
0002C646 <AmiBlitz3.ab3@15313>   BSR.w eval2
0002C64A <AmiBlitz3.ab3@15316>   MOVEA.l precsp(PC),A1
0002C64C <AmiBlitz3.ab3@15317>   CMP.w -(A1),D1
0002C650 <AmiBlitz3.ab3@15318>    BHI.w 'higher
0002C652 <AmiBlitz3.ab3@15319>  RTS
0002C656 <AmiBlitz3.ab3@15325>   MOVEA.l precsp(PC),A1
0002C658 <AmiBlitz3.ab3@15326>   MOVE.l A0,(A1)+
0002C65A <AmiBlitz3.ab3@15327>   MOVE.w D1,(A1)+
0002C660 <AmiBlitz3.ab3@15328>   MOVE.l A1,precsp
0002C662 <AmiBlitz3.ab3@15330>   MOVE.w D2,-(A7)
0002C668 <AmiBlitz3.ab3@15331>   ADDQ.w #1,regnum
0002C66C <AmiBlitz3.ab3@15332>    BSR.w calcloop               ;constant optimizer
0002C672 <AmiBlitz3.ab3@15333>   SUBQ.w #1,regnum
0002C674 <AmiBlitz3.ab3@15334>   MOVE.w (A7)+,D3
0002C678 <AmiBlitz3.ab3@15335>   MOVEM.l D1/A0,-(A7)
0002C67C <AmiBlitz3.ab3@15336>    BEQ.w 'skip
0002C680 <AmiBlitz3.ab3@15337>    BSR.w convtypef     ;could possibly fuck regat+1 !
0002C684 <AmiBlitz3.ab3@15340>   BSR.w popprec
0002C688 <AmiBlitz3.ab3@15341>   BSR.w writecode
0002C68C <AmiBlitz3.ab3@15348>   MOVEA.l forthsp(PC),A0
0002C690 <AmiBlitz3.ab3@15349>   MOVE.w -$2(A0),D1
0002C694 <AmiBlitz3.ab3@15350>   OR.w -$14(A0),D1
0002C698 <AmiBlitz3.ab3@15351>   MOVE.w D1,-$14(A0)
0002C69C <AmiBlitz3.ab3@15352>    BNE.w 'no
0002C6A2 <AmiBlitz3.ab3@15353>   MOVE.w dontwrite_nomemleft,D1
0002C6A6 <AmiBlitz3.ab3@15354>    BNE.w 'no
0002C6AA <AmiBlitz3.ab3@15361>    MOVEA.l -$24(A0),A0
0002C7E6 <AmiBlitz3.ab3@15363>   !newcalc
0002C7EA <AmiBlitz3.ab3@15364>    BEQ 'l10
0002C7EE <AmiBlitz3.ab3@15365>    MOVEA.l forthsp(PC),A0
0002C7F6 <AmiBlitz3.ab3@15366>    MOVE.w -$18(A0),lasta6
0002C7FE <AmiBlitz3.ab3@15367>    MOVE.l -$1C(A0),lasta6
0002C802 <AmiBlitz3.ab3@15368>    MOVEA.l -$24(A0),A0
0002C808 <AmiBlitz3.ab3@15369>    MOVE.l A0,destpointer
0002C80E <AmiBlitz3.ab3@15370>    MOVEA.l _mathffpbase,A6
0002C814 <AmiBlitz3.ab3@15371>    MOVEA.l ffplib,A1
0002C818 <AmiBlitz3.ab3@15372>  BRA 'cont1
0002C81C <AmiBlitz3.ab3@15376>   MOVE.w #$2000,D1
0002C822 <AmiBlitz3.ab3@15377>   OR.w regnum,D1            ; was regat(pc),
0002C826 <AmiBlitz3.ab3@15378>    BSR.w writeword
0002C828 <AmiBlitz3.ab3@15380>     MOVEQ #0,d1
0002C82E <AmiBlitz3.ab3@15381>     MOVE.w regnum,D1
0002C830 <AmiBlitz3.ab3@15382>     ASL.l #8,d1
0002C832 <AmiBlitz3.ab3@15383>     ASL.l #2,d1
0002C838 <AmiBlitz3.ab3@15384>     OR.l #$f2000000,d1
0002C83C <AmiBlitz3.ab3@15385>     BSR writelong
0002C840 <AmiBlitz3.ab3@15387>   MOVE.w #$4E75,D1
0002C844 <AmiBlitz3.ab3@15388>    BSR.w writeword
0002C84C <AmiBlitz3.ab3@15389>   MOVE.w -$18(A0),lasta6
0002C854 <AmiBlitz3.ab3@15390>   MOVE.l -$1C(A0),lasta6
0002C858 <AmiBlitz3.ab3@15391>   MOVEA.l -$24(A0),A0
0002C85E <AmiBlitz3.ab3@15392>   MOVE.l A0,destpointer
0002C862 <AmiBlitz3.ab3@15394>   MOVEM.l D2/A5,-(A7)
0002C868 <AmiBlitz3.ab3@15396>   MOVEA.l _mathffpbase,A6
0002C86E <AmiBlitz3.ab3@15397>   MOVEA.l ffplib,A1
0002C872 <AmiBlitz3.ab3@15398>   MOVE.w $A(A1),D0
0002C878 <AmiBlitz3.ab3@15399>   LEA _mathffpbase,A5
0002C87A <AmiBlitz3.ab3@15400>   SUBA.w D0,A5
0002C880 <AmiBlitz3.ab3@15402>   JSR Aclearcache                                          ;neg +
0002C886 <AmiBlitz3.ab3@15404>   CLR.l load_var_addr
0002C88C <AmiBlitz3.ab3@15405>   CLR.l imm_addr
0002C892 <AmiBlitz3.ab3@15406>   TST.w dontwrite_nomemleft
0002C896 <AmiBlitz3.ab3@15407>   BNE '1
0002C898 <AmiBlitz3.ab3@15409>   JSR (A0)                                                 ;calc constant inline expression
0002C89C <AmiBlitz3.ab3@15413>   MOVEM.l (A7)+,D2/A5
0002C8A2 <AmiBlitz3.ab3@15420>   MOVE.b d2,isconstantvalue
0002C8A8 <AmiBlitz3.ab3@15421>   MOVE.l d0,lastconstantvalue
0002C8AE <AmiBlitz3.ab3@15423>   MOVE.w regnum,D1
0002C8B0 <AmiBlitz3.ab3@15424>   LSL.w #8,D1
0002C8B2 <AmiBlitz3.ab3@15425>   LSL.w #1,D1
0002C8B6 <AmiBlitz3.ab3@15426>   ORI.w #$203C,D1      ;move.l #x,dn
0002C8BA <AmiBlitz3.ab3@15427>   CMP.w #$3,D2
0002C8BE <AmiBlitz3.ab3@15428>    BCC.w 'ok
0002C8C2 <AmiBlitz3.ab3@15429>   ORI.w #$1000,D1
0002C8C6 <AmiBlitz3.ab3@15430>    BSR.w writeword
0002C8C8 <AmiBlitz3.ab3@15431>   MOVE.w D0,D1
0002C8CC <AmiBlitz3.ab3@15432>    BSR.w writeword
0002C8D0 <AmiBlitz3.ab3@15433>  BRA.w 'mode
0002C8D6 <AmiBlitz3.ab3@15437>   TST.b iee                                                ;fpu constant
0002C8DA <AmiBlitz3.ab3@15438>   BEQ 'l10b
0002C8DE <AmiBlitz3.ab3@15439>   CMP.b #5,d2
0002C8E2 <AmiBlitz3.ab3@15440>   BNE 'l10b
0002C8E4 <AmiBlitz3.ab3@15441>   MOVEQ #0,d1
0002C8EA <AmiBlitz3.ab3@15442>   MOVE.w regnum,D1
0002C8EC <AmiBlitz3.ab3@15443>   ASL.l #7,d1
0002C8F2 <AmiBlitz3.ab3@15444>   OR.l #$f23c5400,d1
0002C8F6 <AmiBlitz3.ab3@15445>   BSR writelong
0002C8F8 <AmiBlitz3.ab3@15446>   SUBQ.l #8,a7
0002C8FE <AmiBlitz3.ab3@15447>   fmove.d fp0,0(a7)
0002C900 <AmiBlitz3.ab3@15448>   MOVE.l (a7)+,d1
0002C904 <AmiBlitz3.ab3@15449>   BSR writelong
0002C906 <AmiBlitz3.ab3@15450>   MOVE.l (a7)+,d1
0002C90A <AmiBlitz3.ab3@15451>   BSR writelong
0002C90E <AmiBlitz3.ab3@15452>  BRA 'mode
0002C912 <AmiBlitz3.ab3@15456>   BSR.w writeword
0002C914 <AmiBlitz3.ab3@15457>   MOVE.l D0,D1
0002C918 <AmiBlitz3.ab3@15458>   BSR.w writelong
0002C91C <AmiBlitz3.ab3@15465>   MOVEA.l forthsp(PC),A0
0002C920 <AmiBlitz3.ab3@15466>   MOVEA.l -$20(A0),A3
0002C926 <AmiBlitz3.ab3@15467>   MOVEA.l hunkoffsetbase,A2
0002C92C <AmiBlitz3.ab3@15468>   MOVE.l A3,hunkoffsetbase
0002C932 <AmiBlitz3.ab3@15469>   MOVEA.l _execbase,A6
0002C934 <AmiBlitz3.ab3@15472>   CMPA.l A3,A2
0002C938 <AmiBlitz3.ab3@15473>   BEQ.w 'done
0002C93E <AmiBlitz3.ab3@15474>   SUBQ.l #1,hunkoffsetcounter
0002C940 <AmiBlitz3.ab3@15475>   MOVEA.l A2,A1
0002C942 <AmiBlitz3.ab3@15476>   MOVEA.l (A2),A2
0002C944 <AmiBlitz3.ab3@15477>   MOVEQ.l #$8,D0
0002C94A <AmiBlitz3.ab3@15479>   MOVE.l mempool2,a0
0002C94E <AmiBlitz3.ab3@15480>    JSR _FreePooled(A6)
0002C952 <AmiBlitz3.ab3@15483>  BRA.w 'loop
0002C956 <AmiBlitz3.ab3@15486>   MOVEA.l forthsp(PC),A0
0002C95A <AmiBlitz3.ab3@15489>   LEA -$12(A0),A0
0002C960 <AmiBlitz3.ab3@15490>   MOVE.l A0,forthsp
0002C964 <AmiBlitz3.ab3@15492>   MOVEM.l (A7)+,D1/A0
0002C968 <AmiBlitz3.ab3@15493>   BSR.w reget
0002C96C <AmiBlitz3.ab3@15494> BRA.w 'more
0002C970 <AmiBlitz3.ab3@15503>   BSR.w getelement
0002C972 <AmiBlitz3.ab3@15505>   TST.w d0
0002C976 <AmiBlitz3.ab3@15506>   BEQ 'done
0002C97A <AmiBlitz3.ab3@15507>   CMP.b #",",d0
0002C97E <AmiBlitz3.ab3@15508>   BEQ 'done
0002C982 <AmiBlitz3.ab3@15509>   CMP.b #"@",d0                                            ;expandline @@
0002C986 <AmiBlitz3.ab3@15510>   BEQ 'done
0002C98C <AmiBlitz3.ab3@15513>   LEA operators,A0
0002C98E <AmiBlitz3.ab3@15516>    TST.w (A0)
0002C992 <AmiBlitz3.ab3@15517>    BEQ.w 'done
0002C994 <AmiBlitz3.ab3@15518>   CMP.w (A0),D0
0002C998 <AmiBlitz3.ab3@15519>    BEQ.w 'found
0002C99C <AmiBlitz3.ab3@15520>   LEA $20(A0),A0
0002C9A0 <AmiBlitz3.ab3@15521>  BRA.w 'loop
0002C9A2 <AmiBlitz3.ab3@15524>   MOVEQ.l #$00,D1
0002C9A4 <AmiBlitz3.ab3@15525>  RTS
0002C9A8 <AmiBlitz3.ab3@15528>   CMP.w #$3C,D0
0002C9AC <AmiBlitz3.ab3@15529>    BNE.w 'notlt
0002C9B0 <AmiBlitz3.ab3@15530>    BSR.w get1bytemain
0002C9B4 <AmiBlitz3.ab3@15531>   CMP.w #$3D,D0
0002C9B8 <AmiBlitz3.ab3@15532>    BNE.w 'notlteq
0002C9BE <AmiBlitz3.ab3@15533>   LEA ople,A0
0002C9C2 <AmiBlitz3.ab3@15534>  BRA.w 'found2
0002C9C6 <AmiBlitz3.ab3@15537>   CMP.w #$3E,D0          ;'>'
0002C9CA <AmiBlitz3.ab3@15538>    BNE.w 'found3
0002C9CE <AmiBlitz3.ab3@15539>  BRA.w 'isne
0002C9D2 <AmiBlitz3.ab3@15542>   CMP.w #$3E,D0          ;'>'
0002C9D6 <AmiBlitz3.ab3@15543>    BNE.w 'notqt
0002C9DA <AmiBlitz3.ab3@15544>    BSR.w get1bytemain
0002C9DE <AmiBlitz3.ab3@15545>   CMP.w #$3D,D0          ;'='
0002C9E2 <AmiBlitz3.ab3@15546>    BNE.w 'notgteq
0002C9E8 <AmiBlitz3.ab3@15547>   LEA opge,A0
0002C9EC <AmiBlitz3.ab3@15548>  BRA.w 'found2
0002C9F0 <AmiBlitz3.ab3@15551>   CMP.w #$3C,D0          ;'<'
0002C9F4 <AmiBlitz3.ab3@15552>    BEQ.w 'isne
0002C9FE <AmiBlitz3.ab3@15557>     MOVE.w oldqflag,instringon
0002CA04 <AmiBlitz3.ab3@15558>     MOVEA.l lastsourcepos,A5
0002CA08 <AmiBlitz3.ab3@15560>  BRA.w 'found2
0002CA0C <AmiBlitz3.ab3@15563>   CMP.w #$3D,D0          ;'='
0002CA10 <AmiBlitz3.ab3@15564>    BNE.w 'found2
0002CA14 <AmiBlitz3.ab3@15565>    BSR.w get1bytemain
0002CA18 <AmiBlitz3.ab3@15566>   CMP.w #$3E,D0          ;'>'
0002CA1C <AmiBlitz3.ab3@15567>    BNE.w 'noteqgt
0002CA22 <AmiBlitz3.ab3@15568>   LEA opge,A0
0002CA26 <AmiBlitz3.ab3@15569>  BRA.w 'found2
0002CA2A <AmiBlitz3.ab3@15572>   CMP.w #$3C,D0          ;'<'
0002CA2E <AmiBlitz3.ab3@15573>   BNE.w 'found3
0002CA34 <AmiBlitz3.ab3@15576>   LEA opne,A0
0002CA38 <AmiBlitz3.ab3@15582>   MOVE.w $1E(A0),D1
0002CA3A <AmiBlitz3.ab3@15583> RTS
0002CA3C <AmiBlitz3.ab3@15592>   MOVE.w d2,d1
0002CA3E <AmiBlitz3.ab3@15593>   SUBQ.w #1,D1
0002CA42 <AmiBlitz3.ab3@15594>    BMI.w illoperr
0002CA44 <AmiBlitz3.ab3@15595>   LSL.w #2,D1
0002CA48 <AmiBlitz3.ab3@15596>   MOVE.l $2(A0,D1.W),D1
0002CA4C <AmiBlitz3.ab3@15597>    BEQ.w illoperr
0002CA4E <AmiBlitz3.ab3@15598>   MOVEA.l D1,A0
0002CA50 <AmiBlitz3.ab3@15599> JMP (A0)
0002CA54 <AmiBlitz3.ab3@15615>   MOVEA.l precsp(PC),A1
0002CA5A <AmiBlitz3.ab3@15616>   CMPA.l #precstackf,A1
0002CA5E <AmiBlitz3.ab3@15617>    BCC.w pserr
0002CA60 <AmiBlitz3.ab3@15618>   MOVE.w -(A1),D1
0002CA62 <AmiBlitz3.ab3@15619>   MOVEA.l -(A1),A0
0002CA68 <AmiBlitz3.ab3@15620>   MOVE.l A1,precsp
0002CA6A <AmiBlitz3.ab3@15621> RTS
0002CA6E <AmiBlitz3.ab3@15624> precsp:      Dc.l precstack
0002CB6A <AmiBlitz3.ab3@15625> precstack:   Ds.l 63                                       ;ds 6*32 org source   ;Lotsa Room?
0002CBEE <AmiBlitz3.ab3@15626>              Ds.l 33
0002CBF0 <AmiBlitz3.ab3@15632> mseq:  SEQ D0
0002CBF2 <AmiBlitz3.ab3@15633> msne:    SNE D0
0002CBF4 <AmiBlitz3.ab3@15634> mslt:    SLT D0
0002CBF6 <AmiBlitz3.ab3@15635> msle:    SLE D0
0002CBF8 <AmiBlitz3.ab3@15636> msgt:    SGT D0
0002CBFA <AmiBlitz3.ab3@15637> msge:    SGE D0
0002CBFC <AmiBlitz3.ab3@15639> cmp0:    CMP.b D0,D0
0002CBFE <AmiBlitz3.ab3@15640> cmp1:    CMP.w D0,D0
0002CC00 <AmiBlitz3.ab3@15641> cmp2:    CMP.l D0,D0
0002CC04 <AmiBlitz3.ab3@15645>   MOVE.w cmp0(PC),D1
0002CC08 <AmiBlitz3.ab3@15646> BRA.w doeqcmp2                                            ;writecompare
0002CC0C <AmiBlitz3.ab3@15650>   MOVE.w cmp0(PC),D1
0002CC10 <AmiBlitz3.ab3@15651> BRA.w donecmp2
0002CC14 <AmiBlitz3.ab3@15655>   MOVE.w cmp0(PC),D1
0002CC18 <AmiBlitz3.ab3@15656> BRA.w doltcmp2
0002CC1C <AmiBlitz3.ab3@15660>   MOVE.w cmp0(PC),D1
0002CC20 <AmiBlitz3.ab3@15661> BRA.w dolecmp2
0002CC24 <AmiBlitz3.ab3@15665>   MOVE.w cmp0(PC),D1
0002CC28 <AmiBlitz3.ab3@15666> BRA.w dogtcmp2
0002CC2C <AmiBlitz3.ab3@15671>   MOVE.w cmp0(PC),D1
0002CC30 <AmiBlitz3.ab3@15672> BRA.w dogecmp2
0002CC34 <AmiBlitz3.ab3@15676>   MOVE.w cmp1(PC),D1
0002CC38 <AmiBlitz3.ab3@15677> BRA.w doeqcmp2
0002CC3C <AmiBlitz3.ab3@15681>   MOVE.w cmp1(PC),D1
0002CC40 <AmiBlitz3.ab3@15682> BRA.w donecmp2
0002CC44 <AmiBlitz3.ab3@15686>   MOVE.w cmp1(PC),D1
0002CC48 <AmiBlitz3.ab3@15687> BRA.w doltcmp2
0002CC4C <AmiBlitz3.ab3@15691>   MOVE.w cmp1(PC),D1
0002CC50 <AmiBlitz3.ab3@15692> BRA.w dolecmp2
0002CC54 <AmiBlitz3.ab3@15696>   MOVE.w cmp1(PC),D1
0002CC58 <AmiBlitz3.ab3@15697> BRA.w dogtcmp2
0002CC5C <AmiBlitz3.ab3@15702>   MOVE.w cmp1(PC),D1
0002CC60 <AmiBlitz3.ab3@15703> BRA.w dogecmp2
0002CC64 <AmiBlitz3.ab3@15707>   MOVE.w cmp2(PC),D1                                   ;writecomparelong
0002CC68 <AmiBlitz3.ab3@15708> BRA doeqcmp2
0002CC6C <AmiBlitz3.ab3@15711>   MOVE.w cmp2(PC),D1
0002CC70 <AmiBlitz3.ab3@15712> BRA donecmp2
0002CC74 <AmiBlitz3.ab3@15716>   MOVE.w cmp2(PC),D1
0002CC78 <AmiBlitz3.ab3@15717> BRA.w doltcmp2
0002CC7C <AmiBlitz3.ab3@15721>   MOVE.w cmp2(PC),D1
0002CC80 <AmiBlitz3.ab3@15722> BRA.w dolecmp2
0002CC84 <AmiBlitz3.ab3@15726>   MOVE.w cmp2(PC),D1
0002CC88 <AmiBlitz3.ab3@15727> BRA.w dogtcmp2
0002CC8C <AmiBlitz3.ab3@15731>   MOVE.w cmp2(PC),D1
0002CC90 <AmiBlitz3.ab3@15732> BRA.w dogecmp2
0002CC92 <AmiBlitz3.ab3@15735> cfregat:  Ds.w 1
0002CC98 <AmiBlitz3.ab3@15739>   MOVE.w D1,libjsr+2
0002CC9C <AmiBlitz3.ab3@15740>    BSR.w savereg
0002CC9E <AmiBlitz3.ab3@15741>   MOVE.l D4,D1
0002CCA2 <AmiBlitz3.ab3@15742>    BSR.w pokemovem
0002CCA6 <AmiBlitz3.ab3@15743>   MOVE.w #$C900,D1
0002CCAA <AmiBlitz3.ab3@15744>    BSR.w Atokejsr
0002CCAE <AmiBlitz3.ab3@15745>    BSR.w ritetod0
0002CCB4 <AmiBlitz3.ab3@15746>   MOVE.l libjsr,D1
0002CCB8 <AmiBlitz3.ab3@15747>    BSR.w writelong
0002CCC2 <AmiBlitz3.ab3@15748>   MOVE.w regnum,cfregat
0002CCC8 <AmiBlitz3.ab3@15749>   CLR.w regnum
0002CCCA <AmiBlitz3.ab3@15750> RTS
0002CCD4 <AmiBlitz3.ab3@15754>   MOVE.w cfregat,regnum
0002CCD8 <AmiBlitz3.ab3@15755>    BSR.w ritefromd0
0002CCDA <AmiBlitz3.ab3@15756>   MOVE.l D5,D1
0002CCDE <AmiBlitz3.ab3@15757> BRA.w pokemovem
0002CCE0 <AmiBlitz3.ab3@15761>    MOVEQ.l #-$2A,D1
0002CCE6 <AmiBlitz3.ab3@15762>    TST.b fpu
0002CCEA <AmiBlitz3.ab3@15763>    BEQ 'nofpu
0002CCEC <AmiBlitz3.ab3@15764>    MOVEQ #0,d1
0002CCF2 <AmiBlitz3.ab3@15765>    MOVE.w regnum,d1
0002CCF4 <AmiBlitz3.ab3@15766>    MOVE.l d1,d2
0002CCF6 <AmiBlitz3.ab3@15767>    ASL.l #7,d1
0002CCF8 <AmiBlitz3.ab3@15768>    ADDQ  #1,d2
0002CCFA <AmiBlitz3.ab3@15769>    ASL.l #8,d2
0002CCFC <AmiBlitz3.ab3@15770>    ASL.l #2,d2
0002CCFE <AmiBlitz3.ab3@15771>    OR.l d2,d1
0002CD04 <AmiBlitz3.ab3@15772>    OR.l #$f2000038,d1
0002CD0A <AmiBlitz3.ab3@15773>    JSR writelong
0002CD0E <AmiBlitz3.ab3@15774>    MOVE.w #$f240,d1
0002CD14 <AmiBlitz3.ab3@15775>    OR.w regnum,d1
0002CD18 <AmiBlitz3.ab3@15776>    BSR writeword
0002CD1A <AmiBlitz3.ab3@15777>    MOVEQ.l #1,d2
0002CD1E <AmiBlitz3.ab3@15778>    MOVE.w #1,d1                                            ;fpu comp fseq
0002CD22 <AmiBlitz3.ab3@15779>    BSR writeword
0002CD24 <AmiBlitz3.ab3@15780>  RTS
0002CD28 <AmiBlitz3.ab3@15783>    BSR.w docflib
0002CD2C <AmiBlitz3.ab3@15784>    BSR.w doeqcmp
0002CD30 <AmiBlitz3.ab3@15785> BRA.w docflib2
0002CD32 <AmiBlitz3.ab3@15789>   MOVEQ.l #-$2A,D1
0002CD38 <AmiBlitz3.ab3@15790>   TST.b fpu
0002CD3C <AmiBlitz3.ab3@15791>    BEQ 'nofpu
0002CD3E <AmiBlitz3.ab3@15792>    MOVEQ #0,d1
0002CD44 <AmiBlitz3.ab3@15793>    MOVE.w regnum,d1
0002CD46 <AmiBlitz3.ab3@15794>    MOVE.l d1,d2
0002CD48 <AmiBlitz3.ab3@15795>    ASL.l #7,d1
0002CD4A <AmiBlitz3.ab3@15796>    ADDQ  #1,d2
0002CD4C <AmiBlitz3.ab3@15797>    ASL.l #8,d2
0002CD4E <AmiBlitz3.ab3@15798>    ASL.l #2,d2
0002CD50 <AmiBlitz3.ab3@15799>    OR.l d2,d1
0002CD56 <AmiBlitz3.ab3@15800>    OR.l #$f2000038,d1
0002CD5C <AmiBlitz3.ab3@15801>    JSR writelong
0002CD60 <AmiBlitz3.ab3@15802>    MOVE.w #$f240,d1
0002CD66 <AmiBlitz3.ab3@15803>    OR.w regnum,d1
0002CD6A <AmiBlitz3.ab3@15804>    BSR writeword
0002CD70 <AmiBlitz3.ab3@15805>    MOVE.l #1,d2
0002CD74 <AmiBlitz3.ab3@15806>    MOVE.w #$e,d1                                           ;fpu comp fsne
0002CD78 <AmiBlitz3.ab3@15807>    BSR writeword
0002CD7A <AmiBlitz3.ab3@15808>  RTS
0002CD7E <AmiBlitz3.ab3@15811>    BSR.w docflib
0002CD82 <AmiBlitz3.ab3@15812>    BSR.w donecmp
0002CD86 <AmiBlitz3.ab3@15813> BRA.w docflib2
0002CD88 <AmiBlitz3.ab3@15817>   MOVEQ.l #-$2A,D1
0002CD8E <AmiBlitz3.ab3@15818>     TST.b fpu
0002CD92 <AmiBlitz3.ab3@15819>    BEQ 'nofpu
0002CD94 <AmiBlitz3.ab3@15820>    MOVEQ #0,d1
0002CD9A <AmiBlitz3.ab3@15821>    MOVE.w regnum,d1
0002CD9C <AmiBlitz3.ab3@15822>    MOVE.l d1,d2
0002CD9E <AmiBlitz3.ab3@15823>    ASL.l #7,d1
0002CDA0 <AmiBlitz3.ab3@15824>    ADDQ  #1,d2
0002CDA2 <AmiBlitz3.ab3@15825>    ASL.l #8,d2
0002CDA4 <AmiBlitz3.ab3@15826>    ASL.l #2,d2
0002CDA6 <AmiBlitz3.ab3@15827>    OR.l d2,d1
0002CDAC <AmiBlitz3.ab3@15828>    OR.l #$f2000038,d1
0002CDB2 <AmiBlitz3.ab3@15829>    JSR writelong
0002CDB6 <AmiBlitz3.ab3@15830>    MOVE.w #$f240,d1
0002CDBC <AmiBlitz3.ab3@15831>    OR.w regnum,d1
0002CDC0 <AmiBlitz3.ab3@15832>    BSR writeword
0002CDC6 <AmiBlitz3.ab3@15833>    MOVE.l #$1,d2
0002CDCA <AmiBlitz3.ab3@15834>    MOVE.w #$14,d1                                          ;fpu comp fslt
0002CDCE <AmiBlitz3.ab3@15835>    BSR writeword
0002CDD0 <AmiBlitz3.ab3@15836>  RTS
0002CDD4 <AmiBlitz3.ab3@15839>    BSR.w docflib
0002CDD8 <AmiBlitz3.ab3@15840>    BSR.w doltcmp
0002CDDC <AmiBlitz3.ab3@15841> BRA.w docflib2
0002CDDE <AmiBlitz3.ab3@15845>   MOVEQ.l #-$2A,D1
0002CDE4 <AmiBlitz3.ab3@15846>   TST.b fpu
0002CDE8 <AmiBlitz3.ab3@15847>    BEQ 'nofpu
0002CDEA <AmiBlitz3.ab3@15848>    MOVEQ #0,d1
0002CDF0 <AmiBlitz3.ab3@15849>    MOVE.w regnum,d1
0002CDF2 <AmiBlitz3.ab3@15850>    MOVE.l d1,d2
0002CDF4 <AmiBlitz3.ab3@15851>    ASL.l #7,d1
0002CDF6 <AmiBlitz3.ab3@15852>    ADDQ  #1,d2
0002CDF8 <AmiBlitz3.ab3@15853>    ASL.l #8,d2
0002CDFA <AmiBlitz3.ab3@15854>    ASL.l #2,d2
0002CDFC <AmiBlitz3.ab3@15855>    OR.l d2,d1
0002CE02 <AmiBlitz3.ab3@15856>    OR.l #$f2000038,d1
0002CE08 <AmiBlitz3.ab3@15857>    JSR writelong
0002CE0C <AmiBlitz3.ab3@15858>    MOVE.w #$f240,d1
0002CE12 <AmiBlitz3.ab3@15859>    OR.w regnum,d1
0002CE16 <AmiBlitz3.ab3@15860>    BSR writeword
0002CE1C <AmiBlitz3.ab3@15861>    MOVE.l #1,d2
0002CE20 <AmiBlitz3.ab3@15862>    MOVE.w #$15,d1                                          ;fpu comp fsle
0002CE24 <AmiBlitz3.ab3@15863>    BSR writeword
0002CE26 <AmiBlitz3.ab3@15864>  RTS
0002CE2A <AmiBlitz3.ab3@15867>    BSR.w docflib
0002CE2E <AmiBlitz3.ab3@15868>    BSR.w dolecmp
0002CE32 <AmiBlitz3.ab3@15869> BRA.w docflib2
0002CE34 <AmiBlitz3.ab3@15873>   MOVEQ.l #-$2A,D1
0002CE3A <AmiBlitz3.ab3@15874>    TST.b fpu
0002CE3E <AmiBlitz3.ab3@15875>    BEQ 'nofpu
0002CE40 <AmiBlitz3.ab3@15876>     MOVEQ #0,d1
0002CE46 <AmiBlitz3.ab3@15877>    MOVE.w regnum,d1
0002CE48 <AmiBlitz3.ab3@15878>    MOVE.l d1,d2
0002CE4A <AmiBlitz3.ab3@15879>    ASL.l #7,d1
0002CE4C <AmiBlitz3.ab3@15880>    ADDQ  #1,d2
0002CE4E <AmiBlitz3.ab3@15881>    ASL.l #8,d2
0002CE50 <AmiBlitz3.ab3@15882>    ASL.l #2,d2
0002CE52 <AmiBlitz3.ab3@15883>    OR.l d2,d1
0002CE58 <AmiBlitz3.ab3@15884>    OR.l #$f2000038,d1
0002CE5E <AmiBlitz3.ab3@15885>    JSR writelong
0002CE62 <AmiBlitz3.ab3@15886>    MOVE.w #$f240,d1
0002CE68 <AmiBlitz3.ab3@15887>    OR.w regnum,d1
0002CE6C <AmiBlitz3.ab3@15888>    BSR writeword
0002CE72 <AmiBlitz3.ab3@15889>    MOVE.l #1,d2
0002CE76 <AmiBlitz3.ab3@15890>    MOVE.w #$12,d1                                          ;fpu comp fsgt
0002CE7A <AmiBlitz3.ab3@15891>    BSR writeword
0002CE7C <AmiBlitz3.ab3@15892>  RTS
0002CE80 <AmiBlitz3.ab3@15895>    BSR.w docflib
0002CE84 <AmiBlitz3.ab3@15896>    BSR.w dogtcmp
0002CE88 <AmiBlitz3.ab3@15897> BRA.w docflib2
0002CE8A <AmiBlitz3.ab3@15901>   MOVEQ.l #-$2A,D1
0002CE90 <AmiBlitz3.ab3@15902>  TST.b fpu
0002CE94 <AmiBlitz3.ab3@15903>    BEQ 'nofpu
0002CE96 <AmiBlitz3.ab3@15904>    MOVEQ #0,d1
0002CE9C <AmiBlitz3.ab3@15905>    MOVE.w regnum,d1
0002CE9E <AmiBlitz3.ab3@15906>    MOVE.l d1,d2
0002CEA0 <AmiBlitz3.ab3@15907>    ASL.l #7,d1
0002CEA2 <AmiBlitz3.ab3@15908>    ADDQ  #1,d2
0002CEA4 <AmiBlitz3.ab3@15909>    ASL.l #8,d2
0002CEA6 <AmiBlitz3.ab3@15910>    ASL.l #2,d2
0002CEA8 <AmiBlitz3.ab3@15911>    OR.l d2,d1
0002CEAE <AmiBlitz3.ab3@15912>    OR.l #$f2000038,d1
0002CEB4 <AmiBlitz3.ab3@15913>    JSR writelong
0002CEB8 <AmiBlitz3.ab3@15914>    MOVE.w #$f240,d1
0002CEBE <AmiBlitz3.ab3@15915>    OR.w regnum,d1
0002CEC2 <AmiBlitz3.ab3@15916>    BSR writeword
0002CEC8 <AmiBlitz3.ab3@15917>    MOVE.l #1,d2
0002CECC <AmiBlitz3.ab3@15918>    MOVE.w #$13,d1                                          ;fpu comp fsge
0002CED0 <AmiBlitz3.ab3@15919>    BSR writeword
0002CED2 <AmiBlitz3.ab3@15920>  RTS
0002CED6 <AmiBlitz3.ab3@15923>    BSR.w docflib
0002CEDA <AmiBlitz3.ab3@15924>    BSR.w dogecmp
0002CEDE <AmiBlitz3.ab3@15925> BRA.w docflib2
0002CEE4 <AmiBlitz3.ab3@15930>   MOVE.l #$CE00,D1
0002CEEA <AmiBlitz3.ab3@15931>    MOVE.l d1,lastinstruction
0002CEEE <AmiBlitz3.ab3@15932>    BSR.w Atokejsr
0002CEF2 <AmiBlitz3.ab3@15933> BRA.w doeqcmp
0002CEF8 <AmiBlitz3.ab3@15937>   MOVE.l #$CE00,D1
0002CEFE <AmiBlitz3.ab3@15938>    MOVE.l d1,lastinstruction
0002CF02 <AmiBlitz3.ab3@15939>    BSR.w Atokejsr
0002CF06 <AmiBlitz3.ab3@15940> BRA.w donecmp
0002CF0C <AmiBlitz3.ab3@15944>   MOVE.l #$CE00,D1
0002CF12 <AmiBlitz3.ab3@15945>    MOVE.l d1,lastinstruction
0002CF16 <AmiBlitz3.ab3@15946>    BSR.w Atokejsr
0002CF1A <AmiBlitz3.ab3@15947> BRA.w doltcmp
0002CF20 <AmiBlitz3.ab3@15951>   MOVE.l #$CE00,D1
0002CF26 <AmiBlitz3.ab3@15952>    MOVE.l d1,lastinstruction
0002CF2A <AmiBlitz3.ab3@15953>    BSR.w Atokejsr
0002CF2E <AmiBlitz3.ab3@15954> BRA.w dolecmp
0002CF34 <AmiBlitz3.ab3@15958>   MOVE.l #$CE00,D1
0002CF3A <AmiBlitz3.ab3@15959>    MOVE.l d1,lastinstruction
0002CF3E <AmiBlitz3.ab3@15960>    BSR.w Atokejsr
0002CF42 <AmiBlitz3.ab3@15961> BRA.w dogtcmp
0002CF48 <AmiBlitz3.ab3@15965>   MOVE.l #$CE00,D1
0002CF4E <AmiBlitz3.ab3@15966>    MOVE.l d1,lastinstruction
0002CF52 <AmiBlitz3.ab3@15967>    BSR.w Atokejsr
0002CF56 <AmiBlitz3.ab3@15968> BRA.w dogecmp
0002CF5C <AmiBlitz3.ab3@15973>   TST.b fast                                               ;compare
0002CF60 <AmiBlitz3.ab3@15974>   BEQ 'org
0002CF66 <AmiBlitz3.ab3@15978>   MOVE.l destpointer,a0
0002CF6C <AmiBlitz3.ab3@15979>   SUB.l imm_addr,a0
0002CF72 <AmiBlitz3.ab3@15980>   CMP.l #6,a0
0002CF76 <AmiBlitz3.ab3@15981>   BNE 'l11
0002CF7C <AmiBlitz3.ab3@15982>   MOVE.l imm_addr,a0
0002CF84 <AmiBlitz3.ab3@15983>   CMP.w #$223c,imm_addr
0002CF88 <AmiBlitz3.ab3@15984>   BNE 'org
0002CF8E <AmiBlitz3.ab3@15985>   ADD.w #$8e80,-6(a4)
0002CF94 <AmiBlitz3.ab3@15988>   CLR.l imm_addr
0002CF96 <AmiBlitz3.ab3@15989>  RTS
0002CF9C <AmiBlitz3.ab3@15992>   CMP.l #4,a0
0002CFA0 <AmiBlitz3.ab3@15993>   BNE 'l10
0002CFA4 <AmiBlitz3.ab3@15994>   CMP.b #2,d3
0002CFA8 <AmiBlitz3.ab3@15995>   BNE 'l11b
0002CFAE <AmiBlitz3.ab3@15996>   ADD.w #$7e40,-4(a4)
0002CFB0 <AmiBlitz3.ab3@15997>  RTS
0002CFB6 <AmiBlitz3.ab3@16000>   ADD.w #$7e00,-4(a4)
0002CFB8 <AmiBlitz3.ab3@16001>  RTS
0002CFBE <AmiBlitz3.ab3@16004>    MOVE.l destpointer,a0
0002CFC4 <AmiBlitz3.ab3@16005>    SUB.l load_var_addr,a0
0002CFC8 <AmiBlitz3.ab3@16006>    CMP.w #4,a0
0002CFCC <AmiBlitz3.ab3@16007>    BNE 'org
0002CFD0 <AmiBlitz3.ab3@16008>    CMP.b #3,d3
0002CFD4 <AmiBlitz3.ab3@16009>    BCS 'lv1
0002CFDA <AmiBlitz3.ab3@16010>    CLR.l load_var_addr
0002CFE0 <AmiBlitz3.ab3@16011>    ADD.w #$9080-$200,-4(a4)
0002CFE2 <AmiBlitz3.ab3@16012>  RTS
0002CFE6 <AmiBlitz3.ab3@16015>   CMP.b #2,d3
0002CFEA <AmiBlitz3.ab3@16016>    BNE 'org
0002CFF0 <AmiBlitz3.ab3@16017>    CLR.l load_var_addr
0002CFF6 <AmiBlitz3.ab3@16018>    ADD.w #$8040-$200,-4(a4)
0002CFF8 <AmiBlitz3.ab3@16019>  RTS
0002CFFE <AmiBlitz3.ab3@16022>   MOVE.w regnum,D3
0002D000 <AmiBlitz3.ab3@16023>   OR.w D3,D1
0002D002 <AmiBlitz3.ab3@16024>   LSL.w #8,D3
0002D004 <AmiBlitz3.ab3@16025>   LSL.w #1,D3
0002D006 <AmiBlitz3.ab3@16026>   OR.w D3,D1
0002D008 <AmiBlitz3.ab3@16027>   ADDQ.w #1,D1
0002D00C <AmiBlitz3.ab3@16028> BRA.w writeword
0002D010 <AmiBlitz3.ab3@16032>    BSR.w cmpit
0002D014 <AmiBlitz3.ab3@16035>    MOVE.w mseq(PC),D1
0002D018 <AmiBlitz3.ab3@16036> BRA.w cpoke
0002D01C <AmiBlitz3.ab3@16040>   BSR.w cmpit
0002D020 <AmiBlitz3.ab3@16043>   MOVE.w msne(PC),D1
0002D024 <AmiBlitz3.ab3@16044> BRA.w cpoke
0002D028 <AmiBlitz3.ab3@16048>   BSR.w cmpit
0002D02C <AmiBlitz3.ab3@16051>    MOVE.w mslt(PC),D1
0002D030 <AmiBlitz3.ab3@16052> BRA.w cpoke
0002D034 <AmiBlitz3.ab3@16056>    BSR.w cmpit
0002D038 <AmiBlitz3.ab3@16059>    MOVE.w msle(PC),D1
0002D03C <AmiBlitz3.ab3@16060> BRA.w cpoke
0002D040 <AmiBlitz3.ab3@16064>    BSR.w cmpit
0002D044 <AmiBlitz3.ab3@16067>    MOVE.w msgt(PC),D1
0002D048 <AmiBlitz3.ab3@16068> BRA.w cpoke
0002D04C <AmiBlitz3.ab3@16072>   BSR.w cmpit
0002D050 <AmiBlitz3.ab3@16075>    MOVE.w msge(PC),D1
0002D056 <AmiBlitz3.ab3@16078>    OR.w regnum,D1
0002D05A <AmiBlitz3.ab3@16079>    CMP.w #5,d2
0002D05E <AmiBlitz3.ab3@16080>    BNE 'nod0
0002D062 <AmiBlitz3.ab3@16081>    CMP.w #5,d3
0002D066 <AmiBlitz3.ab3@16082>    BNE 'nod0
0002D068 <AmiBlitz3.ab3@16083>    MOVE.l d1,-(a7)
0002D06E <AmiBlitz3.ab3@16084>    MOVE.l #$44004a00,d1                                    ;68k neg.b:tst.b
0002D072 <AmiBlitz3.ab3@16085>    BSR writelong
0002D074 <AmiBlitz3.ab3@16086>    MOVE.l (a7)+,d1
0002D078 <AmiBlitz3.ab3@16089>    BSR.w writeword                                         ;writeseq
0002D07A <AmiBlitz3.ab3@16090>    MOVEQ.l #1,d2
0002D080 <AmiBlitz3.ab3@16091>    MOVE.l lasttoken,d1
0002D086 <AmiBlitz3.ab3@16092>     TST.b fast
0002D08A <AmiBlitz3.ab3@16093>     BEQ.s 'l11
0002D090 <AmiBlitz3.ab3@16094>    CMP.l #$800b,d1
0002D094 <AmiBlitz3.ab3@16095>    BEQ 'l10
0002D098 <AmiBlitz3.ab3@16098>   MOVE.w #$4880,D1                                         ;ext.w D regat
0002D09E <AmiBlitz3.ab3@16099>   OR.w regnum,D1
0002D0A2 <AmiBlitz3.ab3@16100>    BSR.w writeword                                         ;writeext.w
0002D0A4 <AmiBlitz3.ab3@16101>   MOVEQ.l #$02,D2                                          ;type now WORD!
0002D0A6 <AmiBlitz3.ab3@16104> RTS
0002D0AA <AmiBlitz3.ab3@16109>   MOVE.w #$D040,D1
0002D0AC <AmiBlitz3.ab3@16110>   MOVEQ.l #$02,D2                                          ;writeaddword   ;now a word
0002D0B0 <AmiBlitz3.ab3@16111> BRA.w doplus2
0002D0B4 <AmiBlitz3.ab3@16115>   MOVE.w #$D040,D1
0002D0B6 <AmiBlitz3.ab3@16116>   MOVEQ.l #$03,D2                                          ;now a long
0002D0BA <AmiBlitz3.ab3@16117>    BSR.w doplus2
0002D0BE <AmiBlitz3.ab3@16118> BRA.w convert_word_to_long
0002D0C2 <AmiBlitz3.ab3@16122>   MOVE.w #$D080,D1                                         ;writeaddlong
0002D0C4 <AmiBlitz3.ab3@16125>   MOVE.w d1,a1
0002D0CA <AmiBlitz3.ab3@16126>   TST.b fast
0002D0CE <AmiBlitz3.ab3@16127>   BEQ 'l10
0002D0D0 <AmiBlitz3.ab3@16131>   ASR.w #8,d1
0002D0D4 <AmiBlitz3.ab3@16132>   CMP.b #$90,d1
0002D0D8 <AmiBlitz3.ab3@16133>   BEQ 'sub1
0002D0DC <AmiBlitz3.ab3@16134>   CMP.b #$d0,d1
0002D0E0 <AmiBlitz3.ab3@16135>   BNE 'l10
0002D0E4 <AmiBlitz3.ab3@16136>   CMP.b #3,d3
0002D0E8 <AmiBlitz3.ab3@16137>   BCS 'lq10
0002D0EE <AmiBlitz3.ab3@16138>   TST.b quickadd
0002D0F4 <AmiBlitz3.ab3@16142>    MOVE.l destpointer,a0
0002D0FA <AmiBlitz3.ab3@16143>    CLR.b quickadd
0002D100 <AmiBlitz3.ab3@16144>    CLR.l load_var_addr
0002D106 <AmiBlitz3.ab3@16145>    SUB.l imm_addr,a0
0002D10A <AmiBlitz3.ab3@16146>    CMP.w #6,a0
0002D10E <AmiBlitz3.ab3@16147>    BEQ 'li10
0002D112 <AmiBlitz3.ab3@16148>    CMP.w #4,a0
0002D116 <AmiBlitz3.ab3@16149>    BNE.s 'li1
0002D11C <AmiBlitz3.ab3@16150>    CLR.l imm_addr
0002D122 <AmiBlitz3.ab3@16151>    ADD.w #$a040-$200,-4(a4)
0002D124 <AmiBlitz3.ab3@16152>  RTS
0002D126 <AmiBlitz3.ab3@16155>    MOVE.l a4,a0
0002D12C <AmiBlitz3.ab3@16156>    SUB.l load_var_addr,a0
0002D132 <AmiBlitz3.ab3@16157>    CMP.l #$a,a0
0002D136 <AmiBlitz3.ab3@16158>    BNE 'l10e
0002D13C <AmiBlitz3.ab3@16159>    CLR.l load_var_addr
0002D140 <AmiBlitz3.ab3@16160>    MOVE.w -$8(a4),d1
0002D146 <AmiBlitz3.ab3@16161>    MOVE.l -$4(a4),-$8(a4)
0002D14A <AmiBlitz3.ab3@16162>    MOVE.w d1,-$4(a4)
0002D150 <AmiBlitz3.ab3@16163>    SUB.w #$1980,-$a(a4)
0002D156 <AmiBlitz3.ab3@16164>    SUBQ.l #2,destpointer
0002D158 <AmiBlitz3.ab3@16165>  RTS
0002D15E <AmiBlitz3.ab3@16168>   CLR.b quickadd
0002D162 <AmiBlitz3.ab3@16169>  BRA 'l10
0002D168 <AmiBlitz3.ab3@16172>    CLR.l imm_addr
0002D16C <AmiBlitz3.ab3@16173>    TST.l -4(a4)                                            ;skip If ADD.l #0,dx
0002D170 <AmiBlitz3.ab3@16174>    BNE 'doit
0002D176 <AmiBlitz3.ab3@16175>    SUBQ.l #6,destpointer
0002D178 <AmiBlitz3.ab3@16176>  RTS
0002D17E <AmiBlitz3.ab3@16179>    ADD.w #$b080-$200,-6(a4)
0002D180 <AmiBlitz3.ab3@16180>  RTS
0002D186 <AmiBlitz3.ab3@16183>    MOVE.l destpointer,a0
0002D18C <AmiBlitz3.ab3@16184>    SUB.l load_var_addr,a0
0002D190 <AmiBlitz3.ab3@16185>    CMP.w #4,a0
0002D194 <AmiBlitz3.ab3@16186>    BNE 'l10
0002D198 <AmiBlitz3.ab3@16187>    CMP.b #3,d3
0002D19C <AmiBlitz3.ab3@16188>    BNE 'lv1
0002D1A2 <AmiBlitz3.ab3@16189>    CLR.l load_var_addr
0002D1A8 <AmiBlitz3.ab3@16190>    ADD.w #$b080-$200,-4(a4)
0002D1AA <AmiBlitz3.ab3@16191>  RTS
0002D1AE <AmiBlitz3.ab3@16194>   CMP.b #2,d3
0002D1B2 <AmiBlitz3.ab3@16195>   BNE 'l10
0002D1B8 <AmiBlitz3.ab3@16196>   CLR.l load_var_addr
0002D1BE <AmiBlitz3.ab3@16197>   ADD.w #$a040-$200,-4(a4)
0002D1C0 <AmiBlitz3.ab3@16198>  RTS
0002D1C6 <AmiBlitz3.ab3@16201>   MOVE.w regnum,D3
0002D1C8 <AmiBlitz3.ab3@16202>   MOVE.w a1,d1
0002D1CA <AmiBlitz3.ab3@16203>   OR.w D3,D1
0002D1CC <AmiBlitz3.ab3@16204>   ADDQ.w #1,D1
0002D1CE <AmiBlitz3.ab3@16205>   LSL.w #8,D3
0002D1D0 <AmiBlitz3.ab3@16206>   LSL.w #1,D3
0002D1D2 <AmiBlitz3.ab3@16207>   OR.w D3,D1
0002D1D6 <AmiBlitz3.ab3@16208>  BRA.w writeword
0002D1DA <AmiBlitz3.ab3@16211>    CMP.b #3,d3
0002D1DE <AmiBlitz3.ab3@16212>    BCS 'sub1_lq10
0002D1E4 <AmiBlitz3.ab3@16213>    TST.b quickadd
0002D1EA <AmiBlitz3.ab3@16217>    MOVE.l destpointer,a0
0002D1F0 <AmiBlitz3.ab3@16218>    CLR.b quickadd
0002D1F6 <AmiBlitz3.ab3@16219>    CLR.l load_var_addr
0002D1FC <AmiBlitz3.ab3@16220>    SUB.l imm_addr,a0
0002D200 <AmiBlitz3.ab3@16221>    CMP.w #6,a0
0002D204 <AmiBlitz3.ab3@16222>    BEQ 'sub1_li10
0002D208 <AmiBlitz3.ab3@16223>    CMP.w #4,a0
0002D20C <AmiBlitz3.ab3@16224>    BNE.s 'sub1_li1
0002D212 <AmiBlitz3.ab3@16225>    CLR.l imm_addr
0002D218 <AmiBlitz3.ab3@16226>    ADD.w #$6040-$200,-4(a4)
0002D21A <AmiBlitz3.ab3@16227>  RTS
0002D21C <AmiBlitz3.ab3@16230>    MOVE.l a4,a0
0002D222 <AmiBlitz3.ab3@16231>     SUB.l load_var_addr,a0
0002D228 <AmiBlitz3.ab3@16232>     CMP.l #$a,a0
0002D22C <AmiBlitz3.ab3@16233>     BNE 'sub1_l10e
0002D232 <AmiBlitz3.ab3@16234>    CLR.l load_var_addr
0002D236 <AmiBlitz3.ab3@16235>    MOVE.w -$8(a4),d1
0002D23C <AmiBlitz3.ab3@16236>    MOVE.l -$4(a4),-$8(a4)
0002D240 <AmiBlitz3.ab3@16237>    MOVE.w d1,-$4(a4)
0002D246 <AmiBlitz3.ab3@16238>    SUB.w #$1b80,-$a(a4)
0002D24C <AmiBlitz3.ab3@16239>    SUBQ.l #2,destpointer
0002D24E <AmiBlitz3.ab3@16240>  RTS
0002D254 <AmiBlitz3.ab3@16243>   CLR.b quickadd
0002D258 <AmiBlitz3.ab3@16244>  BRA 'sub1_l10
0002D25E <AmiBlitz3.ab3@16247>    CLR.l imm_addr
0002D264 <AmiBlitz3.ab3@16248>    ADD.w #$7080-$200,-6(a4)
0002D266 <AmiBlitz3.ab3@16249>  RTS
0002D26C <AmiBlitz3.ab3@16252>    MOVE.l destpointer,a0
0002D272 <AmiBlitz3.ab3@16253>    SUB.l load_var_addr,a0
0002D276 <AmiBlitz3.ab3@16254>    CMP.w #4,a0
0002D27A <AmiBlitz3.ab3@16255>    BNE 'sub1_l10
0002D27E <AmiBlitz3.ab3@16256>    CMP.b #3,d3
0002D282 <AmiBlitz3.ab3@16257>    BNE 'sub1_lv1
0002D288 <AmiBlitz3.ab3@16258>    CLR.l load_var_addr
0002D28E <AmiBlitz3.ab3@16259>    ADD.w #$7080-$200,-4(a4)
0002D290 <AmiBlitz3.ab3@16260>  RTS
0002D294 <AmiBlitz3.ab3@16263>    CMP.b #2,d3
0002D298 <AmiBlitz3.ab3@16264>    BNE 'sub1_l10
0002D29E <AmiBlitz3.ab3@16265>    CLR.l load_var_addr
0002D2A4 <AmiBlitz3.ab3@16266>    ADD.w #$6040-$200,-4(a4)
0002D2A6 <AmiBlitz3.ab3@16267>  RTS
0002D2AC <AmiBlitz3.ab3@16270>   MOVE.w regnum,D3
0002D2AE <AmiBlitz3.ab3@16271>   MOVE.w a1,d1
0002D2B0 <AmiBlitz3.ab3@16272>   OR.w D3,D1
0002D2B2 <AmiBlitz3.ab3@16273>   ADDQ.w #1,D1
0002D2B4 <AmiBlitz3.ab3@16274>   LSL.w #8,D3
0002D2B6 <AmiBlitz3.ab3@16275>   LSL.w #1,D3
0002D2B8 <AmiBlitz3.ab3@16276>   OR.w D3,D1
0002D2BC <AmiBlitz3.ab3@16277> BRA.w writeword
0002D2BE <AmiBlitz3.ab3@16281>   MOVEQ #0,d0
0002D2C4 <AmiBlitz3.ab3@16282>   MOVE.w regnum,d0
0002D2C6 <AmiBlitz3.ab3@16283>   ADDQ #1,d0
0002D2C8 <AmiBlitz3.ab3@16284>   ASL.w #8,d0
0002D2CA <AmiBlitz3.ab3@16285>   ASL.w #2,d0
0002D2D0 <AmiBlitz3.ab3@16286>   MOVE.l #$f2000022,d1                                     ;fpu add
0002D2D2 <AmiBlitz3.ab3@16287>   OR.l d0,d1
0002D2D8 <AmiBlitz3.ab3@16288>   MOVE.w regnum,d0
0002D2DA <AmiBlitz3.ab3@16289>   ASL.w #7,d0
0002D2DC <AmiBlitz3.ab3@16290>   OR.l d0,d1
0002D2E0 <AmiBlitz3.ab3@16291> BRA.w writelong
0002D2E6 <AmiBlitz3.ab3@16298>   TST.b iee
0002D2EA <AmiBlitz3.ab3@16299>   BNE do_plus_float_fadd1
0002D2EE <AmiBlitz3.ab3@16300>   MOVE.w #$FFBE,D1                                         ;#-66,d1 org soruce ;floatadd
0002D2F4 <AmiBlitz3.ab3@16303>    MOVE.w D1,libjsr+2
0002D2F8 <AmiBlitz3.ab3@16304>    BSR.w savereg
0002D2FA <AmiBlitz3.ab3@16305>   MOVE.l D4,D1
0002D2FE <AmiBlitz3.ab3@16306>    BSR.w pokemovem
0002D302 <AmiBlitz3.ab3@16307>   MOVE.w #$C900,D1
0002D306 <AmiBlitz3.ab3@16308>    BSR.w Atokejsr
0002D30A <AmiBlitz3.ab3@16309>    BSR.w ritetod0
0002D310 <AmiBlitz3.ab3@16310>   MOVE.l libjsr,D1
0002D314 <AmiBlitz3.ab3@16311>    BSR.w writelong
0002D318 <AmiBlitz3.ab3@16312>    BSR.w ritefromd0
0002D31A <AmiBlitz3.ab3@16313>   MOVE.l D5,D1
0002D31E <AmiBlitz3.ab3@16314> BRA.w pokemovem
0002D324 <AmiBlitz3.ab3@16318>   MOVE.w regnum,D1
0002D326 <AmiBlitz3.ab3@16319>   LSL.w #8,D1
0002D328 <AmiBlitz3.ab3@16320>   LSL.w #1,D1
0002D32A <AmiBlitz3.ab3@16321>   MOVE.w D1,-(A7)
0002D32E <AmiBlitz3.ab3@16322>   CMP.w #3072,d1
0002D332 <AmiBlitz3.ab3@16323>   BEQ 'l1
0002D338 <AmiBlitz3.ab3@16324>   OR.w addcode,D1                                          ;move.l (a7)+,d0
0002D33C <AmiBlitz3.ab3@16325> BRA 'l2
0002D340 <AmiBlitz3.ab3@16328>    MOVE.w #$588f,d1                                        ;addq.l #4,a7
0002D344 <AmiBlitz3.ab3@16331>    BSR.w writeword
0002D346 <AmiBlitz3.ab3@16332>   MOVE.w (A7)+,D1
0002D34C <AmiBlitz3.ab3@16333>   OR.w addcode+2,D1                                        ;native string add.l d0,(a7)
0002D350 <AmiBlitz3.ab3@16334> BRA.w writeword
0002D354 <AmiBlitz3.ab3@16340>   MOVE.w #$9040,D1
0002D358 <AmiBlitz3.ab3@16341> BRA.w doplus2
0002D35C <AmiBlitz3.ab3@16345>   MOVE.w #$9040,D1
0002D360 <AmiBlitz3.ab3@16346> BRA.w doplus2
0002D364 <AmiBlitz3.ab3@16350>   MOVE.w #$9080,D1
0002D368 <AmiBlitz3.ab3@16351> BRA.w doplus2
0002D36E <AmiBlitz3.ab3@16355>    TST.b iee
0002D372 <AmiBlitz3.ab3@16356>     BNE 'fs1
0002D376 <AmiBlitz3.ab3@16357>   MOVE.w #$FFB8,D1                                         ;floatsub
0002D37A <AmiBlitz3.ab3@16358> BRA.w doflib
0002D37C <AmiBlitz3.ab3@16361>   MOVEQ #0,d0
0002D382 <AmiBlitz3.ab3@16362>   MOVE.w regnum,d0
0002D384 <AmiBlitz3.ab3@16363>   ADDQ #1,d0
0002D386 <AmiBlitz3.ab3@16364>   ASL.w #8,d0
0002D388 <AmiBlitz3.ab3@16365>   ASL.w #2,d0
0002D38E <AmiBlitz3.ab3@16366>   MOVE.l #$f2000028,d1
0002D390 <AmiBlitz3.ab3@16367>   OR.l d0,d1
0002D396 <AmiBlitz3.ab3@16368>   MOVE.w regnum,d0
0002D398 <AmiBlitz3.ab3@16369>   ASL.w #7,d0
0002D39A <AmiBlitz3.ab3@16370>   OR.l d0,d1
0002D39E <AmiBlitz3.ab3@16371> BRA.w writelong
0002D3A2 <AmiBlitz3.ab3@16377>   MOVE.w #$C1C0,D1
0002D3A4 <AmiBlitz3.ab3@16378>   MOVEQ.l #$02,D2                                          ;now a word
0002D3A8 <AmiBlitz3.ab3@16379> BRA.w doplus2
0002D3AC <AmiBlitz3.ab3@16383>   MOVE.w #$C1C0,D1
0002D3AE <AmiBlitz3.ab3@16384>   MOVEQ.l #$03,D2                                          ;now a long.
0002D3B2 <AmiBlitz3.ab3@16385> BRA.w doplus2
0002D3B6 <AmiBlitz3.ab3@16389>   MOVE.w #$CA00,D1                                         ;quickmul
0002D3BA <AmiBlitz3.ab3@16390> BRA.w domylib
0002D3C0 <AmiBlitz3.ab3@16394>   TST.b fast
0002D3C4 <AmiBlitz3.ab3@16395>   BNE.s 'l10
0002D3C8 <AmiBlitz3.ab3@16396>   MOVE.w #$CA01,D1                                         ;writelongmul
0002D3CC <AmiBlitz3.ab3@16397> BRA.w domylib
0002D3D2 <AmiBlitz3.ab3@16406>    MOVE.l destpointer,a0
0002D3D8 <AmiBlitz3.ab3@16407>    SUB.l imm_addr,a0
0002D3DC <AmiBlitz3.ab3@16408>    CMP.w #6,a0
0002D3E0 <AmiBlitz3.ab3@16409>    BNE 'li1
0002D3E2 <AmiBlitz3.ab3@16410>    MOVEQ.l #2,d1
0002D3E4 <AmiBlitz3.ab3@16411>    MOVEQ #1,d3
0002D3E8 <AmiBlitz3.ab3@16414>   CMP.l -4(a4),d1
0002D3EC <AmiBlitz3.ab3@16415>    BEQ 'oklsl
0002D3EE <AmiBlitz3.ab3@16416>     LSL.l #1,d1
0002D3F4 <AmiBlitz3.ab3@16417>     ADD.l #1,d3
0002D3FA <AmiBlitz3.ab3@16418>     CMP.l #9,d3
0002D3FE <AmiBlitz3.ab3@16419>     BNE 'ag
0002D402 <AmiBlitz3.ab3@16420>    MOVE.w -2(a4),d1
0002D406 <AmiBlitz3.ab3@16421>    BSR writeword
0002D40C <AmiBlitz3.ab3@16422>    MOVE.w -6(a4),-4(a4)
0002D414 <AmiBlitz3.ab3@16423>    MOVE.l #$4c3c0800,-8(a4)
0002D41A <AmiBlitz3.ab3@16424>    MOVE.w regnum,D3
0002D41E <AmiBlitz3.ab3@16425>    MULS #$1000,D3
0002D422 <AmiBlitz3.ab3@16426>    OR.w D3,-6(a4)
0002D428 <AmiBlitz3.ab3@16427>    CLR.l load_var_addr
0002D42E <AmiBlitz3.ab3@16428>    CLR.l imm_addr
0002D432 <AmiBlitz3.ab3@16429> BRA 'li3
0002D436 <AmiBlitz3.ab3@16432>    CMP.w #8,d3
0002D43A <AmiBlitz3.ab3@16433>    BEQ 'ok
0002D43C <AmiBlitz3.ab3@16434>    ASL.l #1,d3
0002D43E <AmiBlitz3.ab3@16435>    ASL.l #8,d3
0002D442 <AmiBlitz3.ab3@16436>    MOVE.w #$e188,d1
0002D444 <AmiBlitz3.ab3@16437>    OR.w d3,d1
0002D448 <AmiBlitz3.ab3@16438>    MOVE.w d1,-6(a4)
0002D44C <AmiBlitz3.ab3@16439> BRA 'okls
0002D452 <AmiBlitz3.ab3@16442>   MOVE.w #$e188,-6(a4)                                     ;lsl.l #,dx
0002D458 <AmiBlitz3.ab3@16445>   MOVE.w regnum,d3
0002D45C <AmiBlitz3.ab3@16446>    OR.b d3,-5(a4)
0002D462 <AmiBlitz3.ab3@16447>    SUBQ.l #4,destpointer
0002D468 <AmiBlitz3.ab3@16448>    CLR.l load_var_addr
0002D46E <AmiBlitz3.ab3@16449>    CLR.l imm_addr
0002D472 <AmiBlitz3.ab3@16450> BRA 'li3
0002D478 <AmiBlitz3.ab3@16453>    MOVE.l destpointer,a0
0002D47E <AmiBlitz3.ab3@16454>    SUB.l load_var_addr,a0
0002D482 <AmiBlitz3.ab3@16455>    CMP.w #4,a0
0002D486 <AmiBlitz3.ab3@16456>    BNE 'li2
0002D48A <AmiBlitz3.ab3@16457>    MOVE.w -2(a4),d1
0002D48E <AmiBlitz3.ab3@16458>    BSR writeword
0002D494 <AmiBlitz3.ab3@16459>    MOVE.b #$4c,-6(a4)
0002D49A <AmiBlitz3.ab3@16460>    MOVE.w #$0800,-4(a4)
0002D4A0 <AmiBlitz3.ab3@16461>    MOVE.w regnum,D3
0002D4A4 <AmiBlitz3.ab3@16462>    MULS #$1000,d3
0002D4A8 <AmiBlitz3.ab3@16463>    OR.w D3,-4(a4)
0002D4AC <AmiBlitz3.ab3@16464> BRA 'li3
0002D4B2 <AmiBlitz3.ab3@16467>    MOVE.l #$4c010800,d1
0002D4B8 <AmiBlitz3.ab3@16468>    MOVE.w regnum,D3
0002D4BA <AmiBlitz3.ab3@16469>    EXT.l d3
0002D4BE <AmiBlitz3.ab3@16470>    MULS #$1000,d3
0002D4C0 <AmiBlitz3.ab3@16471>    OR.w D3,d1
0002D4C4 <AmiBlitz3.ab3@16472>    MULS #$10,d3
0002D4C6 <AmiBlitz3.ab3@16473>    ADD.l d3,d1
0002D4CA <AmiBlitz3.ab3@16474>    BSR writelong
0002D4CC <AmiBlitz3.ab3@16479> RTS
0002D4CE <AmiBlitz3.ab3@16483>   MOVE.w D1,-(A7)
0002D4D2 <AmiBlitz3.ab3@16484>    BSR.w savereg
0002D4D4 <AmiBlitz3.ab3@16485>   MOVE.l D4,D1
0002D4D8 <AmiBlitz3.ab3@16486>    BSR.w pokemovem
0002D4DC <AmiBlitz3.ab3@16487>    BSR.w ritetod0
0002D4DE <AmiBlitz3.ab3@16488>   MOVEQ #0,d1
0002D4E0 <AmiBlitz3.ab3@16489>   MOVE.w (A7)+,D1
0002D4E6 <AmiBlitz3.ab3@16490>   MOVE.l d1,lastinstruction
0002D4EA <AmiBlitz3.ab3@16491>    BSR.w Atokejsr
0002D4EE <AmiBlitz3.ab3@16492>    BSR.w ritefromd0
0002D4F0 <AmiBlitz3.ab3@16493>   MOVE.l D5,D1
0002D4F4 <AmiBlitz3.ab3@16494> BRA.w pokemovem
0002D4FA <AmiBlitz3.ab3@16498>    TST.b iee
0002D4FE <AmiBlitz3.ab3@16499>     BNE fm1
0002D502 <AmiBlitz3.ab3@16500>  MOVE.w #$FFB2,D1                                          ;floatmul
0002D506 <AmiBlitz3.ab3@16501> BRA.w doflib
0002D508 <AmiBlitz3.ab3@16504>   MOVEQ #0,d0
0002D50E <AmiBlitz3.ab3@16505>  MOVE.w regnum,d0
0002D510 <AmiBlitz3.ab3@16506>  ADDQ #1,d0
0002D512 <AmiBlitz3.ab3@16507>  ASL.w #8,d0
0002D514 <AmiBlitz3.ab3@16508>  ASL.w #2,d0
0002D51A <AmiBlitz3.ab3@16509>  MOVE.l #$f2000023,d1
0002D51C <AmiBlitz3.ab3@16510>  OR.l d0,d1
0002D522 <AmiBlitz3.ab3@16511>  MOVE.w regnum,d0
0002D524 <AmiBlitz3.ab3@16512>  ASL.w #7,d0
0002D526 <AmiBlitz3.ab3@16513>  OR.l d0,d1
0002D52A <AmiBlitz3.ab3@16514> BRA.w writelong
0002D52C <AmiBlitz3.ab3@16518>   MOVE.w D2,-(A7)                                          ;dopow
0002D52E <AmiBlitz3.ab3@16519>   MOVE.w D2,D3
0002D530 <AmiBlitz3.ab3@16520>   MOVEQ.l #$05,D2
0002D534 <AmiBlitz3.ab3@16521>    BSR.w convtypef
0002D53A <AmiBlitz3.ab3@16522>   ADDQ.w #1,regnum
0002D53C <AmiBlitz3.ab3@16523>   MOVE.w (A7)+,D3
0002D53E <AmiBlitz3.ab3@16524>   MOVEQ.l #$05,D2
0002D542 <AmiBlitz3.ab3@16525>    BSR.w writeconvertcode
0002D548 <AmiBlitz3.ab3@16526>   SUBQ.w #1,regnum
0002D54C <AmiBlitz3.ab3@16527>    BSR.w nocando
0002D552 <AmiBlitz3.ab3@16528>    TST.b fpu
0002D556 <AmiBlitz3.ab3@16529>    BEQ 'old
0002D558 <AmiBlitz3.ab3@16530>    MOVEQ #0,d1
0002D55E <AmiBlitz3.ab3@16531>    MOVE.w regnum,d1
0002D560 <AmiBlitz3.ab3@16532>   MOVE.l d1,d0
0002D562 <AmiBlitz3.ab3@16533>   ASL.w #7,d1
0002D564 <AmiBlitz3.ab3@16534>   ASL.w #8,d0
0002D566 <AmiBlitz3.ab3@16535>   ASL.w #2,d0
0002D568 <AmiBlitz3.ab3@16536>   OR.w d0,d1
0002D56A <AmiBlitz3.ab3@16537>   MOVE.l d1,-(a7)
0002D570 <AmiBlitz3.ab3@16539>    OR.l #$f2000016,d1                                       ;flog2.x fp0      ;fpu ^ pow
0002D574 <AmiBlitz3.ab3@16540>    BSR writelong
0002D57A <AmiBlitz3.ab3@16541>    MOVE.w regnum,d0
0002D57C <AmiBlitz3.ab3@16542>  ADDQ #1,d0
0002D57E <AmiBlitz3.ab3@16543>  ASL.w #8,d0
0002D580 <AmiBlitz3.ab3@16544>  ASL.w #2,d0
0002D586 <AmiBlitz3.ab3@16545>  MOVE.l #$f2000023,d1
0002D588 <AmiBlitz3.ab3@16546>  OR.l d0,d1
0002D58E <AmiBlitz3.ab3@16547>  MOVE.w regnum,d0
0002D590 <AmiBlitz3.ab3@16548>  ASL.w #7,d0
0002D592 <AmiBlitz3.ab3@16549>  OR.l d0,d1
0002D598 <AmiBlitz3.ab3@16550>    OR.l #$f2000023,d1                                      ;fmulx.x fp1,fp0
0002D59C <AmiBlitz3.ab3@16551>    BSR writelong
0002D59E <AmiBlitz3.ab3@16552>    MOVE.l (a7)+,d1
0002D5A4 <AmiBlitz3.ab3@16554>    OR.l #$f2000011,d1                                      ;ftwotox.x fp0
0002D5A8 <AmiBlitz3.ab3@16555>    BSR writelong
0002D5AA <AmiBlitz3.ab3@16556> RTS
0002D5AE <AmiBlitz3.ab3@16559>   MOVE.w #$6001,D1
0002D5B2 <AmiBlitz3.ab3@16560> BRA.w domylib
0002D5B6 <AmiBlitz3.ab3@16566>   MOVEA.l forthsp(PC),A0
0002D5BA <AmiBlitz3.ab3@16567>   MOVE.w #$FFFF,-(A0)                                      ;#-1,-(a0) org source
0002D5BC <AmiBlitz3.ab3@16568> RTS
0002D5C0 <AmiBlitz3.ab3@16574>   MOVE.w #$D400,D1
0002D5C4 <AmiBlitz3.ab3@16575> BRA.w domylib
0002D5C8 <AmiBlitz3.ab3@16579>   MOVE.w #$D401,D1
0002D5CC <AmiBlitz3.ab3@16580> BRA.w domylib
0002D5D0 <AmiBlitz3.ab3@16584>    BSR.w nocando                                           ;modlib uses an alibjsr here!
0002D5D4 <AmiBlitz3.ab3@16585>   MOVE.w #$D402,D1
0002D5D8 <AmiBlitz3.ab3@16586> BRA.w domylib
0002D5DC <AmiBlitz3.ab3@16590>   MOVE.w #$D403,D1
0002D5DE <AmiBlitz3.ab3@16591>   MOVEQ.l #$02,D2                                          ;now a word.
0002D5E2 <AmiBlitz3.ab3@16592> BRA.w domylib
0002D5E6 <AmiBlitz3.ab3@16596>    BSR.w nocando                                           ;modlib lib uses an alibjsr!  ;domod float
0002D5EC <AmiBlitz3.ab3@16597>   TST.b fpu
0002D5F0 <AmiBlitz3.ab3@16598>   BEQ 'old
0002D5F2 <AmiBlitz3.ab3@16599>   MOVEQ #0,d1
0002D5F8 <AmiBlitz3.ab3@16600>   MOVE.w regnum,d1                                         ;fpu mod
0002D5FA <AmiBlitz3.ab3@16601>   MOVE.l d1,d0
0002D5FC <AmiBlitz3.ab3@16602>   ADDQ.l #1,d1
0002D5FE <AmiBlitz3.ab3@16603>   ASL.l #7,d0
0002D600 <AmiBlitz3.ab3@16604>   ASL.l #8,d1
0002D602 <AmiBlitz3.ab3@16605>   ASL.l #2,d1
0002D604 <AmiBlitz3.ab3@16606>   OR.l d0,d1
0002D606 <AmiBlitz3.ab3@16607>   MOVE.l d0,-(a7)
0002D60C <AmiBlitz3.ab3@16608>   OR.l #$f2000021,d1
0002D610 <AmiBlitz3.ab3@16609>   BSR writelong
0002D612 <AmiBlitz3.ab3@16610>   MOVE.l (a7)+,d0
0002D614 <AmiBlitz3.ab3@16611>  RTS
0002D618 <AmiBlitz3.ab3@16614>   MOVE.w #$D404,D1
0002D61A <AmiBlitz3.ab3@16615>   MOVEQ.l #$03,D2                                          ;now a long
0002D61E <AmiBlitz3.ab3@16616> BRA.w domylib
0002D622 <AmiBlitz3.ab3@16624>   MOVE.w #$48C0,D1
0002D628 <AmiBlitz3.ab3@16625>   OR.w regnum,D1
0002D62C <AmiBlitz3.ab3@16626>    BSR.w writeword
0002D62E <AmiBlitz3.ab3@16627>   ADDQ.w #1,D1
0002D632 <AmiBlitz3.ab3@16628>    BSR.w writeword
0002D636 <AmiBlitz3.ab3@16631>    MOVE.w #$48C0,D1
0002D63C <AmiBlitz3.ab3@16632>   OR.w regnum,D1
0002D640 <AmiBlitz3.ab3@16633>    BSR.w writeword
0002D644 <AmiBlitz3.ab3@16634>   MOVE.w #$81C0,D1
0002D648 <AmiBlitz3.ab3@16635> BRA.w doplus2
0002D64E <AmiBlitz3.ab3@16639>   TST.b fast
0002D652 <AmiBlitz3.ab3@16640>   BNE.s 'l10
0002D656 <AmiBlitz3.ab3@16641>   MOVE.w #$CB01,D1
0002D65A <AmiBlitz3.ab3@16642> BRA.w domylib
0002D65E <AmiBlitz3.ab3@16648>   BSR.w savereg
0002D660 <AmiBlitz3.ab3@16649>   MOVE.l D4,D1
0002D664 <AmiBlitz3.ab3@16650>    BSR.w pokemovem
0002D668 <AmiBlitz3.ab3@16651>    BSR.w ritetod0
0002D66E <AmiBlitz3.ab3@16665>    MOVE.l #$4c410800,d1
0002D672 <AmiBlitz3.ab3@16666>    BSR writelong
0002D676 <AmiBlitz3.ab3@16669>   MOVE.w #$4e71,d1
0002D67A <AmiBlitz3.ab3@16671>    BSR.w ritefromd0
0002D67C <AmiBlitz3.ab3@16672>   MOVE.l D5,D1
0002D680 <AmiBlitz3.ab3@16673> BRA.w pokemovem
0002D684 <AmiBlitz3.ab3@16676>     CMP.w #8,d3
0002D688 <AmiBlitz3.ab3@16677>     BEQ 'ok
0002D68A <AmiBlitz3.ab3@16678>     ASL.l #1,d3
0002D68C <AmiBlitz3.ab3@16679>     ASL.l #8,d3
0002D690 <AmiBlitz3.ab3@16680>     MOVE.w #$e080,d1
0002D692 <AmiBlitz3.ab3@16681>     OR.w d3,d1
0002D696 <AmiBlitz3.ab3@16682> BRA 'oklsr2
0002D69A <AmiBlitz3.ab3@16685>   MOVE.w #$e080,d1                                         ;lsr.l #,dx
0002D6A0 <AmiBlitz3.ab3@16688>      SUBQ.l #6,destpointer
0002D6A4 <AmiBlitz3.ab3@16689>      BSR writeword
0002D6A6 <AmiBlitz3.ab3@16690>      MOVE.l (a7)+,d3
0002D6A8 <AmiBlitz3.ab3@16691>      MOVEQ #0,d1
0002D6AE <AmiBlitz3.ab3@16692>      CLR.l load_var_addr
0002D6B4 <AmiBlitz3.ab3@16693>      CLR.l imm_addr
0002D6B8 <AmiBlitz3.ab3@16694> BRA pokemovem
0002D6BC <AmiBlitz3.ab3@16698>   MOVE.w #$CB00,D1                                         ;quickdiv
0002D6C0 <AmiBlitz3.ab3@16699> BRA.w domylib
0002D6C6 <AmiBlitz3.ab3@16703>    TST.b iee
0002D6CA <AmiBlitz3.ab3@16704>    BNE fdiv1
0002D6CE <AmiBlitz3.ab3@16705>    MOVE.w #$FFAC,D1                                        ;floatdiv
0002D6D2 <AmiBlitz3.ab3@16706> BRA.w doflib
0002D6D4 <AmiBlitz3.ab3@16710>   MOVEQ #0,d0
0002D6DA <AmiBlitz3.ab3@16711>   MOVE.w regnum,d0
0002D6DC <AmiBlitz3.ab3@16712>   ADDQ #1,d0
0002D6DE <AmiBlitz3.ab3@16713>   ASL.w #8,d0
0002D6E0 <AmiBlitz3.ab3@16714>   ASL.w #2,d0
0002D6E6 <AmiBlitz3.ab3@16715>   MOVE.l #$f2000020,d1                                     ;fpu div
0002D6E8 <AmiBlitz3.ab3@16716>   OR.l d0,d1
0002D6EE <AmiBlitz3.ab3@16717>   MOVE.w regnum,d0
0002D6F0 <AmiBlitz3.ab3@16718>   ASL.w #7,d0
0002D6F2 <AmiBlitz3.ab3@16719>   OR.l d0,d1
0002D6F6 <AmiBlitz3.ab3@16720> BRA.w writelong
0002D6FA <AmiBlitz3.ab3@16724>   MOVE.w #$C000,D1
0002D6FE <AmiBlitz3.ab3@16725> BRA.w doplus2
0002D702 <AmiBlitz3.ab3@16729>   MOVE.w #$C040,D1
0002D706 <AmiBlitz3.ab3@16730> BRA.w doplus2
0002D70A <AmiBlitz3.ab3@16734>   MOVE.w #$C080,D1
0002D70E <AmiBlitz3.ab3@16735> BRA.w doplus2
0002D712 <AmiBlitz3.ab3@16739>   MOVE.w #$8000,D1
0002D716 <AmiBlitz3.ab3@16740> BRA.w doplus2
0002D71A <AmiBlitz3.ab3@16744>   MOVE.w #$8040,D1
0002D71E <AmiBlitz3.ab3@16745> BRA.w doplus2
0002D722 <AmiBlitz3.ab3@16749>   MOVE.w #$8080,D1
0002D726 <AmiBlitz3.ab3@16750> BRA.w doplus2
0002D72A <AmiBlitz3.ab3@16754>   MOVE.w #$B100,D1
0002D730 <AmiBlitz3.ab3@16757>    MOVE.w regnum,D3
0002D732 <AmiBlitz3.ab3@16758>   OR.w D3,D1
0002D734 <AmiBlitz3.ab3@16759>   ADDQ.w #1,D3
0002D736 <AmiBlitz3.ab3@16760>   LSL.w #8,D3
0002D738 <AmiBlitz3.ab3@16761>   LSL.w #1,D3
0002D73A <AmiBlitz3.ab3@16762>   OR.w D3,D1
0002D73E <AmiBlitz3.ab3@16763> BRA.w writeword
0002D742 <AmiBlitz3.ab3@16767>   MOVE.w #$B140,D1
0002D746 <AmiBlitz3.ab3@16768> BRA.w doeor2
0002D74A <AmiBlitz3.ab3@16772>   MOVE.w #$B180,D1
0002D74E <AmiBlitz3.ab3@16773> BRA.w doeor2
0002D752 <AmiBlitz3.ab3@16777>   MOVE.w #$E1A8,D1
0002D756 <AmiBlitz3.ab3@16778> BRA.w shpoke
0002D75A <AmiBlitz3.ab3@16782>   MOVE.w #$E0A8,D1
0002D75E <AmiBlitz3.ab3@16783> BRA.w shpoke
0002D762 <AmiBlitz3.ab3@16787>   MOVE.w #$E0A0,D1
0002D766 <AmiBlitz3.ab3@16788> BRA.w shpoke
0002D768 <AmiBlitz3.ab3@16792>   MOVE.w D1,-(A7)
0002D76E <AmiBlitz3.ab3@16793>   ADDQ.w #1,regnum   ;make second a word!
0002D770 <AmiBlitz3.ab3@16794>   MOVE.w D2,-(A7)
0002D772 <AmiBlitz3.ab3@16795>   MOVE.w D2,D3
0002D774 <AmiBlitz3.ab3@16796>   MOVEQ.l #$02,D2
0002D778 <AmiBlitz3.ab3@16803>    BSR.w writeconvertcode
0002D77A <AmiBlitz3.ab3@16807>   MOVE.w (A7)+,D2     ;type
0002D780 <AmiBlitz3.ab3@16808>   SUBQ.w #1,regnum
0002D784 <AmiBlitz3.ab3@16809>   CMP.w #$4,D2        ;don't fuck with quix
0002D788 <AmiBlitz3.ab3@16810>    BEQ.w 'skip
0002D78A <AmiBlitz3.ab3@16811>   MOVE.w D2,D3
0002D78C <AmiBlitz3.ab3@16812>   MOVEQ.l #$03,D2
0002D790 <AmiBlitz3.ab3@16813>    BSR.w convtypef    ;make first (and current) a long
0002D792 <AmiBlitz3.ab3@16816>    MOVE.w (A7)+,D1
0002D798 <AmiBlitz3.ab3@16818>   MOVE.w regnum,D3
0002D79A <AmiBlitz3.ab3@16819>   OR.w D3,D1
0002D79C <AmiBlitz3.ab3@16820>   ADDQ.w #1,D3
0002D79E <AmiBlitz3.ab3@16821>   LSL.w #8,D3
0002D7A0 <AmiBlitz3.ab3@16822>   LSL.w #1,D3
0002D7A2 <AmiBlitz3.ab3@16823>   OR.w D3,D1
0002D7A6 <AmiBlitz3.ab3@16824> BRA.w writeword
0002D7AA <AmiBlitz3.ab3@16828>   MOVE.w #$0100,D1
0002D7AE <AmiBlitz3.ab3@16829>    BSR.w dothebit
0002D7B4 <AmiBlitz3.ab3@16831>   MOVE.w regnum,D1
0002D7B8 <AmiBlitz3.ab3@16832>   ORI.w #$56C0,D1    ;sne regat
0002D7BC <AmiBlitz3.ab3@16833>    BSR.w writeword
0002D7C2 <AmiBlitz3.ab3@16835>   MOVE.w regnum,D1
0002D7C6 <AmiBlitz3.ab3@16836>   ORI.w #$4880,D1    ;ext.w D regat
0002D7CA <AmiBlitz3.ab3@16837>    BSR.w writeword
0002D7CC <AmiBlitz3.ab3@16839>   MOVEQ.l #$02,D2    ;type now WORD!
0002D7CE <AmiBlitz3.ab3@16840> RTS
0002D7D2 <AmiBlitz3.ab3@16844>   MOVE.w #$01C0,D1
0002D7D6 <AmiBlitz3.ab3@16847>    BSR.w dothebit
0002D7D8 <AmiBlitz3.ab3@16849>   MOVEQ.l #$03,D2    ;type now LONG!
0002D7DA <AmiBlitz3.ab3@16850> RTS
0002D7DE <AmiBlitz3.ab3@16854>   MOVE.w #$0180,D1
0002D7E2 <AmiBlitz3.ab3@16855> BRA.w dothemip
0002D7E6 <AmiBlitz3.ab3@16859>   MOVE.w #$0140,D1
0002D7EA <AmiBlitz3.ab3@16860> BRA.w dothemip
0002D7EC <AmiBlitz3.ab3@16864>   MOVE.w D1,-(A7)
0002D7EE <AmiBlitz3.ab3@16868>   MOVE.w D2,-(A7)
0002D7F0 <AmiBlitz3.ab3@16869>   MOVE.w D2,D3
0002D7F2 <AmiBlitz3.ab3@16870>   MOVEQ.l #$03,D2         ;first to long!
0002D7F6 <AmiBlitz3.ab3@16871>    BSR.w convtypef
0002D7F8 <AmiBlitz3.ab3@16873>   MOVE.w (A7)+,D3
0002D7FA <AmiBlitz3.ab3@16874>   MOVEQ.l #$01,D2         ;second to byte!
0002D800 <AmiBlitz3.ab3@16875>   ADDQ.w #1,regnum
0002D804 <AmiBlitz3.ab3@16876>    BSR.w writeconvertcode
0002D80A <AmiBlitz3.ab3@16877>   SUBQ.w #1,regnum
0002D810 <AmiBlitz3.ab3@16879>   MOVE.w regnum,D1
0002D812 <AmiBlitz3.ab3@16880>   MOVE.w D1,D2
0002D814 <AmiBlitz3.ab3@16881>   ADDQ.w #1,D2
0002D816 <AmiBlitz3.ab3@16882>   LSL.w #8,D2
0002D818 <AmiBlitz3.ab3@16883>   LSL.w #1,D2
0002D81A <AmiBlitz3.ab3@16884>   OR.w (A7)+,D1
0002D81C <AmiBlitz3.ab3@16885>   OR.w D2,D1
0002D820 <AmiBlitz3.ab3@16886> BRA.w writeword        ;btst regat+1,regat
0002D826 <AmiBlitz3.ab3@16892>   MOVE.w regnum,D1
0002D82A <AmiBlitz3.ab3@16893>    BEQ.w 'skip
0002D82E <AmiBlitz3.ab3@16894>   ORI.w #$2000,D1
0002D832 <AmiBlitz3.ab3@16895>    BSR.w writeword
0002D836 <AmiBlitz3.ab3@16896>   ADDI.w #$201,D1
0002D83A <AmiBlitz3.ab3@16897>    BSR.w writeword
0002D83C <AmiBlitz3.ab3@16900> RTS
0002D842 <AmiBlitz3.ab3@16906>   MOVE.w regnum,D1
0002D846 <AmiBlitz3.ab3@16907>    BEQ.w 'skip
0002D848 <AmiBlitz3.ab3@16908>   LSL.w #8,D1
0002D84A <AmiBlitz3.ab3@16909>   LSL.w #1,D1
0002D84E <AmiBlitz3.ab3@16910>   ORI.w #$2000,D1
0002D852 <AmiBlitz3.ab3@16911>    BSR.w writeword
0002D854 <AmiBlitz3.ab3@16914> RTS
0002D85A <AmiBlitz3.ab3@16919>    CLR.b isconstantvalue
0002D860 <AmiBlitz3.ab3@16920>    CLR.l lastconstantvalue
0002D868 <AmiBlitz3.ab3@16922>    CMPI.w #$7,regnum
0002D86C <AmiBlitz3.ab3@16923>    BCS.w getelement2
0002D872 <AmiBlitz3.ab3@16925>   MOVE.l #$f2277700,d1                                     ;fmove.d fp6,-(a7)
0002D876 <AmiBlitz3.ab3@16926>   BSR writelong
0002D87A <AmiBlitz3.ab3@16927>   MOVE.w #$2F06,D1                                         ;d6 to stack
0002D87E <AmiBlitz3.ab3@16930>   CMP.w #$3,D2
0002D882 <AmiBlitz3.ab3@16931>    BCS.w 'skip
0002D886 <AmiBlitz3.ab3@16932>   MOVE.w #$2F06,D1
0002D88A <AmiBlitz3.ab3@16935>   BSR.w writeword
0002D88C <AmiBlitz3.ab3@16936>   MOVE.w D1,-(A7)
0002D892 <AmiBlitz3.ab3@16938>   SUBQ.w #1,regnum
0002D896 <AmiBlitz3.ab3@16939>    BSR.w getelement2
0002D89C <AmiBlitz3.ab3@16940>   ADDQ.w #1,regnum
0002D8A2 <AmiBlitz3.ab3@16943>   MOVE.l #$f2001b80,d1
0002D8A6 <AmiBlitz3.ab3@16944>   BSR writelong
0002D8AA <AmiBlitz3.ab3@16946>   MOVE.w #$3E06,D1
0002D8AE <AmiBlitz3.ab3@16947>   CMP.w #$3,D2
0002D8B2 <AmiBlitz3.ab3@16948>    BCS.w 'skip2
0002D8B6 <AmiBlitz3.ab3@16949>   MOVE.w #$2E06,D1
0002D8BA <AmiBlitz3.ab3@16952>   BSR.w writeword
0002D8BC <AmiBlitz3.ab3@16954>   MOVE.w (A7)+,D1
0002D8C0 <AmiBlitz3.ab3@16955>   ANDI.w #$F000,D1
0002D8C4 <AmiBlitz3.ab3@16956>   ORI.w #$C1F,D1
0002D8CA <AmiBlitz3.ab3@16957>   JSR writeword
0002D8D0 <AmiBlitz3.ab3@16959>   MOVE.l #$f21f5700,d1                                     ;fmove.d (a7)+,fp6
0002D8D4 <AmiBlitz3.ab3@16960> BRA writelong
0002D8D8 <AmiBlitz3.ab3@16965>   BSR.w getelement2
0002D8DC <AmiBlitz3.ab3@16966>   MOVE.w #$4440,D1
0002D8E0 <AmiBlitz3.ab3@16967>   CMP.w #$3,D2
0002D8E4 <AmiBlitz3.ab3@16968>    BCS.w 'doneg
0002D8E8 <AmiBlitz3.ab3@16969>   MOVE.w #$4480,D1
0002D8EC <AmiBlitz3.ab3@16970>   CMP.w #$5,D2
0002D8F0 <AmiBlitz3.ab3@16971>    BCS.w 'doneg
0002D8F4 <AmiBlitz3.ab3@16972>   CMP.w #$6,D2
0002D8F8 <AmiBlitz3.ab3@16973>    BCC.w illoperr
0002D8FC <AmiBlitz3.ab3@16974>   MOVE.w #$FFC4,D1   ; was -60
0002D900 <AmiBlitz3.ab3@16975>  BRA.w fdo2
0002D906 <AmiBlitz3.ab3@16978>   OR.w regnum,D1                                           ;negate
0002D90C <AmiBlitz3.ab3@16980>   CLR.l imm_addr
0002D910 <AmiBlitz3.ab3@16982> BRA.w writeword
0002D914 <AmiBlitz3.ab3@16986>    BSR.w eval4
0002D918 <AmiBlitz3.ab3@16987>   CMP.w #")",D0
0002D91C <AmiBlitz3.ab3@16988>    BEQ.w 'done
0002D920 <AmiBlitz3.ab3@16989>   CMP.w #"}",D0
0002D924 <AmiBlitz3.ab3@16990>    BNE.w brackets_                                         ;syntax error brackets
0002D928 <AmiBlitz3.ab3@16993> BRA.w get1bytemain
0002D92C <AmiBlitz3.ab3@16999>    BSR.w eval4
0002D930 <AmiBlitz3.ab3@17000>   CMP.w #$5,D2
0002D934 <AmiBlitz3.ab3@17001>    BCC.w illoperr
0002D93A <AmiBlitz3.ab3@17002>   MOVE.w regnum,D1
0002D93E <AmiBlitz3.ab3@17003>   ORI.w #$4640,D1     ;not.w
0002D942 <AmiBlitz3.ab3@17004>   CMP.w #$3,D2
0002D946 <AmiBlitz3.ab3@17005>    BCS.w writeword
0002D94A <AmiBlitz3.ab3@17006>   EORI.w #$C0,D1
0002D94E <AmiBlitz3.ab3@17007> BRA.w writeword
0002D950 <AmiBlitz3.ab3@17011>   MOVEQ.l #$05,D2         ;return Pi.;move.l #x,dnf
0002D956 <AmiBlitz3.ab3@17013>    TST.b fpu
0002D95A <AmiBlitz3.ab3@17014>   BEQ 'old
0002D960 <AmiBlitz3.ab3@17015> JMP fpupi
0002D966 <AmiBlitz3.ab3@17019>   MOVE.w regnum,D1
0002D968 <AmiBlitz3.ab3@17020>   LSL.w #8,D1
0002D96A <AmiBlitz3.ab3@17021>   LSL.w #1,D1
0002D96E <AmiBlitz3.ab3@17022>   ORI.w #$203C,D1
0002D972 <AmiBlitz3.ab3@17023>    BSR.w writeword      ;move.l #x,dn
0002D978 <AmiBlitz3.ab3@17024>   MOVE.l #$C90FDA42,D1
0002D97C <AmiBlitz3.ab3@17025>    BSR.w writelong
0002D980 <AmiBlitz3.ab3@17026> BRA.w get1bytemain
0002DA7C <AmiBlitz3.ab3@17034> forthstack:  Ds.l 63                                       ;ds.b  18*32 org source
0002DB78 <AmiBlitz3.ab3@17035>              Ds.l 63
0002DBC0 <AmiBlitz3.ab3@17036>              Ds.l 18
0002DBC4 <AmiBlitz3.ab3@17037> forthsp:     Dc.l forthstack
0002DBCA <AmiBlitz3.ab3@17040> JUMP_checkcast     JMP checkcast
0002DBD0 <AmiBlitz3.ab3@17041> JUMP_syntaxerropt4 JMP syntaxerropt4
0002DBFC <AmiBlitz3.ab3@17049>    !fget
0002DC00 <AmiBlitz3.ab3@17050>    CMP.b #$7e,d0
0002DC04 <AmiBlitz3.ab3@17051>    BNE 'noc
0002DC06 <AmiBlitz3.ab3@17052>    SUBQ.l #1,a5
0002DC0A <AmiBlitz3.ab3@17053>    BSR get1bytemain
0002DC0E <AmiBlitz3.ab3@17056>    CMP.b #"#",d0
0002DC12 <AmiBlitz3.ab3@17057>    BNE 'ld1
0002DC16 <AmiBlitz3.ab3@17058>    CMP.b #$22,(a5)
0002DC1A <AmiBlitz3.ab3@17059>    BNE 'ld1
0002DC20 <AmiBlitz3.ab3@17060>    JSR addimmi
0002DC24 <AmiBlitz3.ab3@17063>    CMP.b #$22,d0
0002DC28 <AmiBlitz3.ab3@17064>    BNE 'l11
0002DC2E <AmiBlitz3.ab3@17074>    NOT.w instringon
0002DC30 <AmiBlitz3.ab3@17077>    TST.b d0
0002DC34 <AmiBlitz3.ab3@17078>    BPL 'l10
0002DC36 <AmiBlitz3.ab3@17079>    LSL.w #8,d0
0002DC38 <AmiBlitz3.ab3@17080>    MOVE.b (a5)+,d0                      ; get blitzlib instruction with returnvalue(called in functions/statement)
0002DC3E <AmiBlitz3.ab3@17081>    MOVE.l d0,lasttoken
0002DC44 <AmiBlitz3.ab3@17082>    MOVE.w d0,lastchar
0002DC4A <AmiBlitz3.ab3@17083>    CLR.l rightsidetype                  ; blitzlibs do currently no type check
0002DC50 <AmiBlitz3.ab3@17084>    CLR.w rightsideflagmask
0002DC54 <AmiBlitz3.ab3@17088>   CMP.w #"(",D0
0002DC58 <AmiBlitz3.ab3@17089>    BEQ.w JUMP_checkcast                 ; was  beq bracket org source
0002DC5C <AmiBlitz3.ab3@17094>   CMP.w #"{",D0
0002DC60 <AmiBlitz3.ab3@17095>    BEQ.w bracket
0002DC64 <AmiBlitz3.ab3@17096>   CMP.w #$2D,D0         ;'-'
0002DC68 <AmiBlitz3.ab3@17097>    BEQ.w negate
0002DC6C <AmiBlitz3.ab3@17098>   CMP.w #-$7F77,D0      ; was #(opnot-opabcd)/$1c+$8000+fnum,
0002DC70 <AmiBlitz3.ab3@17099>    BEQ.w notit
0002DC74 <AmiBlitz3.ab3@17101>   MOVEA.l forthsp(PC),A1
0002DC7A <AmiBlitz3.ab3@17102>   CMPA.l #forthsp,A1
0002DC7E <AmiBlitz3.ab3@17103>    BCC.w conmemerr
0002DC84 <AmiBlitz3.ab3@17105>   MOVE.l destpointer,(A1)+
0002DC8A <AmiBlitz3.ab3@17106>   MOVE.l hunkoffsetbase,(A1)+
0002DC90 <AmiBlitz3.ab3@17107>   MOVE.l lasta6,(A1)+
0002DC96 <AmiBlitz3.ab3@17108>   MOVE.w lasta6,(A1)+
0002DC98 <AmiBlitz3.ab3@17109>   CLR.w (A1)+
0002DC9A <AmiBlitz3.ab3@17111>   CLR.w (A1)+
0002DCA0 <AmiBlitz3.ab3@17112>   MOVE.l A1,forthsp
0002DCB2 <AmiBlitz3.ab3@17118>    !compare2
0002DCB6 <AmiBlitz3.ab3@17120>    BEQ.w fetchnum
0002DCBA <AmiBlitz3.ab3@17121>   CMP.w #".",D0
0002DCBE <AmiBlitz3.ab3@17122>    BEQ.w fetchfrac
0002DCC2 <AmiBlitz3.ab3@17123>   CMP.w #"#",D0
0002DCC6 <AmiBlitz3.ab3@17124>    BEQ.w get_constant
0002DCCA <AmiBlitz3.ab3@17125>   CMP.w #"$",D0
0002DCCE <AmiBlitz3.ab3@17126>    BEQ.w get_hexconstant
0002DCD2 <AmiBlitz3.ab3@17127>   CMP.w #"%",D0
0002DCD6 <AmiBlitz3.ab3@17128>    BEQ.w fetchbin
0002DCDA <AmiBlitz3.ab3@17129>   CMP.w #-$7FD1,D0    ; was #$8000+47,
0002DCDE <AmiBlitz3.ab3@17130>    BEQ.w fetchsize
0002DCE2 <AmiBlitz3.ab3@17131>   CMP.w #-$7F46,D0    ; was #$8007+tnum,
0002DCE6 <AmiBlitz3.ab3@17132>    BEQ.w fetchpi
0002DCEA <AmiBlitz3.ab3@17133>   CMP.w #-$7F3B,D0    ; was #$8000+tnum+18,
0002DCEE <AmiBlitz3.ab3@17134>    BEQ.w fetchon
0002DCF2 <AmiBlitz3.ab3@17135>   CMP.w #-$7F3A,D0    ; was #$8000+tnum+19,
0002DCF6 <AmiBlitz3.ab3@17136>    BEQ.w fetchoff
0002DCFC <AmiBlitz3.ab3@17138>   MOVE.w constmode,D1
0002DD00 <AmiBlitz3.ab3@17139>    BEQ.w 'noasm
0002DD22 <AmiBlitz3.ab3@17141>    !compare1                                               ;bsr.w tstalpha
0002DD26 <AmiBlitz3.ab3@17143>    BEQ.w fetchasm
0002DD2A <AmiBlitz3.ab3@17144>   CMP.w #$5F,D0     ;'_'
0002DD2E <AmiBlitz3.ab3@17145>    BEQ.w fetchasm
0002DD32 <AmiBlitz3.ab3@17146>   CMP.w #$22,D0     ;'"'
0002DD36 <AmiBlitz3.ab3@17147>    BEQ.w fetchqasm
0002DD3A <AmiBlitz3.ab3@17149>  BRA.w syntaxerr
0002DD40 <AmiBlitz3.ab3@17152>   MOVE.w cfetchmode,D1
0002DD44 <AmiBlitz3.ab3@17153>   BEQ.w 'asmok
0002DD48 <AmiBlitz3.ab3@17154>  BRA.w badconerr       ;we're trying to get a const here! 
0002DD4A <AmiBlitz3.ab3@17157>   NOT.w -(A1)    ;set forth stack type to non-const
0002DD6C <AmiBlitz3.ab3@17162>   !compare1                                                ;bsr.w tstalpha
0002DD70 <AmiBlitz3.ab3@17164>    BEQ.w variable
0002DD74 <AmiBlitz3.ab3@17165>   CMP.w #$2A,D0     ;'*'
0002DD78 <AmiBlitz3.ab3@17166>    BEQ.w variable
0002DD7C <AmiBlitz3.ab3@17167>   CMP.w #$5C,D0     ;'\'
0002DD80 <AmiBlitz3.ab3@17168>    BEQ.w variable
0002DD84 <AmiBlitz3.ab3@17169>   CMP.w #$22,D0     ;'"'
0002DD88 <AmiBlitz3.ab3@17170>    BEQ.w litstring
0002DD8C <AmiBlitz3.ab3@17171>   BTST #$F,D0
0002DD90 <AmiBlitz3.ab3@17172>    BNE.w f_unction
0002DD94 <AmiBlitz3.ab3@17173>   CMP.w #"&",D0
0002DD98 <AmiBlitz3.ab3@17174>    BEQ.w getvaraddr                                          ;jump to & address of var code
0002DD9C <AmiBlitz3.ab3@17175>   CMP.w #"?",D0
0002DDA0 <AmiBlitz3.ab3@17176>    BEQ.w qmark
0002DDA4 <AmiBlitz3.ab3@17180>   CMP.b #"@",d0
0002DDA8 <AmiBlitz3.ab3@17181>    BNE syntaxerr
0002DDAE <AmiBlitz3.ab3@17182>   TST.b newsyntax
0002DDB2 <AmiBlitz3.ab3@17183>    BEQ JUMP_syntaxerropt4
0002DDB8 <AmiBlitz3.ab3@17184>   MOVE.w regnum,D1
0002DDBA <AmiBlitz3.ab3@17185>   LSL.w #8,D1
0002DDBC <AmiBlitz3.ab3@17186>   LSL.w #1,D1
0002DDC0 <AmiBlitz3.ab3@17187>   ORI.w #$203C,D1
0002DDC4 <AmiBlitz3.ab3@17188>   BSR.w writeword
0002DDC8 <AmiBlitz3.ab3@17189>   CMP.b #$22,(a5)
0002DDCC <AmiBlitz3.ab3@17190>    BNE syntaxerr
0002DDCE <AmiBlitz3.ab3@17191>   ADDQ #1,a5
0002DDD0 <AmiBlitz3.ab3@17192>   MOVEQ #0,d0
0002DDD4 <AmiBlitz3.ab3@17193>   CMP.b #1,d2
0002DDD8 <AmiBlitz3.ab3@17194>    BEQ 'l3b
0002DDDC <AmiBlitz3.ab3@17195>   CMP.b #2,d2
0002DDE0 <AmiBlitz3.ab3@17196>    BEQ 'l2b
0002DDE4 <AmiBlitz3.ab3@17197>   CMP.b #4,d2
0002DDE8 <AmiBlitz3.ab3@17198>    BEQ error_convert_types
0002DDEA <AmiBlitz3.ab3@17199>   MOVE.b (a5)+,d0
0002DDEE <AmiBlitz3.ab3@17200>   BEQ syntaxerr
0002DDF2 <AmiBlitz3.ab3@17201>   CMP.b #$22,d0
0002DDF6 <AmiBlitz3.ab3@17202>   BNE 'l1
0002DDFA <AmiBlitz3.ab3@17203>     MOVE.b #0,d0
0002DDFE <AmiBlitz3.ab3@17204>  BRA 'do
0002DE00 <AmiBlitz3.ab3@17207>   ASL.l #8,d0
0002DE02 <AmiBlitz3.ab3@17208>   MOVE.b (a5)+,d0
0002DE06 <AmiBlitz3.ab3@17209>   BEQ syntaxerr
0002DE0A <AmiBlitz3.ab3@17210>   CMP.b #$22,d0
0002DE0E <AmiBlitz3.ab3@17211>   BNE 'l2
0002DE12 <AmiBlitz3.ab3@17212>     MOVE.b #0,d0
0002DE14 <AmiBlitz3.ab3@17213>     ASR.l #8,d0
0002DE18 <AmiBlitz3.ab3@17214>  BRA 'do
0002DE1A <AmiBlitz3.ab3@17217>   ASL.l #8,d0
0002DE1C <AmiBlitz3.ab3@17220>   MOVE.b (a5)+,d0
0002DE20 <AmiBlitz3.ab3@17221>    BEQ syntaxerr
0002DE24 <AmiBlitz3.ab3@17222>    CMP.b #$22,d0
0002DE28 <AmiBlitz3.ab3@17223>    BNE 'l3
0002DE2C <AmiBlitz3.ab3@17224>    MOVE.b #0,d0
0002DE2E <AmiBlitz3.ab3@17225>    ASR.l #8,d0
0002DE32 <AmiBlitz3.ab3@17226>  BRA 'do
0002DE34 <AmiBlitz3.ab3@17229>   ASL.l #8,d0
0002DE36 <AmiBlitz3.ab3@17232>   MOVE.b (a5)+,d0
0002DE3A <AmiBlitz3.ab3@17233>    BEQ syntaxerr
0002DE3E <AmiBlitz3.ab3@17234>    CMP.b #$22,d0
0002DE42 <AmiBlitz3.ab3@17235>    BNE 'l4
0002DE46 <AmiBlitz3.ab3@17236>    MOVE.b #0,d0
0002DE48 <AmiBlitz3.ab3@17237>    ASR.l #8,d0
0002DE4C <AmiBlitz3.ab3@17238>  BRA 'do
0002DE50 <AmiBlitz3.ab3@17241>    CMP.b #$22,(a5)+
0002DE54 <AmiBlitz3.ab3@17242>    BNE error4char
0002DE56 <AmiBlitz3.ab3@17245>   MOVE.l d0,d1
0002DE5A <AmiBlitz3.ab3@17246>     BSR writelong
0002DE5E <AmiBlitz3.ab3@17247>     BSR get1bytemain
0002DE60 <AmiBlitz3.ab3@17248> RTS
0002DE64 <AmiBlitz3.ab3@17253>   BSR.w get1bytemain
0002DE68 <AmiBlitz3.ab3@17254>   CMP.w #$2E,D0     ; '.'
0002DE6C <AmiBlitz3.ab3@17255>    BEQ.b sizeobj
0002DE76 <AmiBlitz3.ab3@17261>   MOVE.w oldqflag,instringon
0002DE7C <AmiBlitz3.ab3@17262>   MOVEA.l lastsourcepos,A5
0002DE7E <AmiBlitz3.ab3@17264>   MOVE.w D2,-(A7)
0002DE82 <AmiBlitz3.ab3@17265>    BSR.w getparameter2
0002DE86 <AmiBlitz3.ab3@17266>    BEQ.w syntaxerr
0002DE8C <AmiBlitz3.ab3@17267>   LEA varbase,A2
0002DE90 <AmiBlitz3.ab3@17268>    BSR.w findvariable
0002DE94 <AmiBlitz3.ab3@17269>    BNE.w notypeerr         ;!
0002DE98 <AmiBlitz3.ab3@17272>   MOVE.w $4(A2),D3
0002DE9A <AmiBlitz3.ab3@17273>   EXT.l D3
0002DE9C <AmiBlitz3.ab3@17274>   MOVE.w (A7)+,D2
0002DEA0 <AmiBlitz3.ab3@17275> BRA.w fetchnum2
0002DEA2 <AmiBlitz3.ab3@17279>   MOVE.w D2,-(A7)
0002DEA6 <AmiBlitz3.ab3@17280>    BSR.w getparameter2
0002DEAA <AmiBlitz3.ab3@17281>    BEQ.w syntaxerr
0002DEB0 <AmiBlitz3.ab3@17282>   LEA newtypebase,A2
0002DEB4 <AmiBlitz3.ab3@17283>    BSR.w findtype
0002DEB8 <AmiBlitz3.ab3@17284>    BNE.w notypeerr
0002DEBA <AmiBlitz3.ab3@17285>   MOVEQ.l #$00,D3
0002DEBE <AmiBlitz3.ab3@17286>   CMP.w #$5C,D0     ;'\'
0002DEC2 <AmiBlitz3.ab3@17287>    BNE.w 'jty
0002DEC6 <AmiBlitz3.ab3@17288>    BSR.w getparameter2
0002DECA <AmiBlitz3.ab3@17289>    BEQ.w syntaxerr
0002DECE <AmiBlitz3.ab3@17290>   LEA $4(A2),A2
0002DED2 <AmiBlitz3.ab3@17291>    BSR.w findvariable2
0002DED6 <AmiBlitz3.ab3@17292>    BNE.w noofferr
0002DEDA <AmiBlitz3.ab3@17293>   MOVE.w $4(A2),D3
0002DEDE <AmiBlitz3.ab3@17294>  BRA.w 'jty2
0002DEE2 <AmiBlitz3.ab3@17297>   MOVE.w $8(A2),D3
0002DEE4 <AmiBlitz3.ab3@17300>   MOVE.w (A7)+,D2
0002DEE8 <AmiBlitz3.ab3@17301> BRA.w fetchnum2
0002DEEA <AmiBlitz3.ab3@17305>   MOVEQ.l #-$01,D3
0002DEEE <AmiBlitz3.ab3@17306>    BSR.w get1bytemain
0002DEF2 <AmiBlitz3.ab3@17307> BRA.w fetchnum2
0002DEF4 <AmiBlitz3.ab3@17311>   MOVEQ.l #$00,D3
0002DEF8 <AmiBlitz3.ab3@17312>    BSR.w get1bytemain
0002DEFC <AmiBlitz3.ab3@17313> BRA.w fetchnum2
0002DF00 <AmiBlitz3.ab3@17319>   CMP.w #$30,D0     ;'0'
0002DF04 <AmiBlitz3.ab3@17320>    BCS.w 'no
0002DF08 <AmiBlitz3.ab3@17321>   CMP.w #$39,D0     ;'9'
0002DF0C <AmiBlitz3.ab3@17322>    BLS.w 'yes
0002DF10 <AmiBlitz3.ab3@17323>   ANDI.w #$FFDF,D0
0002DF14 <AmiBlitz3.ab3@17324>   CMP.w #$46,D0     ;'F'
0002DF18 <AmiBlitz3.ab3@17325>    BHI.w 'no
0002DF1C <AmiBlitz3.ab3@17326>   CMP.w #$41,D0     ;'A'
0002DF20 <AmiBlitz3.ab3@17327>    BCS.w 'no
0002DF22 <AmiBlitz3.ab3@17330>    CMP.w D0,D0
0002DF24 <AmiBlitz3.ab3@17333> RTS
0002DF28 <AmiBlitz3.ab3@17337>   CMP.w #$31,D0    ;'1'
0002DF2C <AmiBlitz3.ab3@17338>    BEQ.w 'ok
0002DF30 <AmiBlitz3.ab3@17339>   CMP.w #$30,D0    ;'0'
0002DF32 <AmiBlitz3.ab3@17342> RTS
0002DF34 <AmiBlitz3.ab3@17347>    MOVEQ #0,d0
0002DF36 <AmiBlitz3.ab3@17348>    MOVE.b (a5)+,d0
0002DF38 <AmiBlitz3.ab3@17349>    MOVE.b (a5)+,d0
0002DF3C <AmiBlitz3.ab3@17350>    BSR ishex
0002DF40 <AmiBlitz3.ab3@17351>    BNE syntaxerr
0002DF44 <AmiBlitz3.ab3@17352>    SUBI.w #$30,D0
0002DF48 <AmiBlitz3.ab3@17353>    CMP.w #$9,D0
0002DF4C <AmiBlitz3.ab3@17354>    BLS.w 'l1
0002DF4E <AmiBlitz3.ab3@17355>    SUBQ.w #7,D0
0002DF50 <AmiBlitz3.ab3@17358>    MOVE.l d0,d1
0002DF52 <AmiBlitz3.ab3@17359>    MOVE.b (a5)+,d0
0002DF56 <AmiBlitz3.ab3@17360>      BSR ishex
0002DF5A <AmiBlitz3.ab3@17361>     BNE syntaxerr
0002DF5C <AmiBlitz3.ab3@17362>     LSL.l #4,d1
0002DF60 <AmiBlitz3.ab3@17363>     SUBI.w #$30,D0
0002DF64 <AmiBlitz3.ab3@17364>    CMP.w #$9,D0
0002DF68 <AmiBlitz3.ab3@17365>    BLS.w 'l2
0002DF6A <AmiBlitz3.ab3@17366>    SUBQ.w #7,D0
0002DF6C <AmiBlitz3.ab3@17369>   ADD.l d1,d0
0002DF6E <AmiBlitz3.ab3@17370> RTS
0002DF72 <AmiBlitz3.ab3@17374>    BSR.w get1bytemain
0002DF76 <AmiBlitz3.ab3@17375>    BSR.w ishex
0002DF7A <AmiBlitz3.ab3@17376>    BNE.w syntaxerr
0002DF7C <AmiBlitz3.ab3@17377>   MOVEQ.l #$00,D3
0002DF80 <AmiBlitz3.ab3@17379>   CMP.w #5,d2
0002DF84 <AmiBlitz3.ab3@17380>   BNE 'loop
0002DF8A <AmiBlitz3.ab3@17381>   CMP.l #newtype_double,a2
0002DF8E <AmiBlitz3.ab3@17382>   BEQ 'doit
0002DF94 <AmiBlitz3.ab3@17383>   CMP.l #newtype_float,a2
0002DF98 <AmiBlitz3.ab3@17384>   BNE 'loop
0002DFA0 <AmiBlitz3.ab3@17387>    fmove.s #0,fp0
0002DFA6 <AmiBlitz3.ab3@17390>   TST.b fpu
0002DFAA <AmiBlitz3.ab3@17391>   BEQ 'loop
0002DFB0 <AmiBlitz3.ab3@17392>   fmove.w #16,fp1
0002DFB4 <AmiBlitz3.ab3@17393>   fmul.x fp1,fp0
0002DFB8 <AmiBlitz3.ab3@17394>   SUBI.w #$30,D0
0002DFBC <AmiBlitz3.ab3@17395>   CMP.w #$9,D0
0002DFC0 <AmiBlitz3.ab3@17396>    BLS.w 'skipa
0002DFC2 <AmiBlitz3.ab3@17397>   SUBQ.w #7,D0
0002DFC6 <AmiBlitz3.ab3@17400>    fmove.w d0,fp1
0002DFCA <AmiBlitz3.ab3@17401>    fadd.x fp1,fp0
0002DFCE <AmiBlitz3.ab3@17402>    BSR.w get1bytemain
0002DFD2 <AmiBlitz3.ab3@17403>    BSR.w ishex
0002DFD6 <AmiBlitz3.ab3@17404>    BEQ.w 'loopa
0002DFDA <AmiBlitz3.ab3@17405>  BRA.w nofpregload
0002DFE0 <AmiBlitz3.ab3@17409>   CMP.l #$10000000,D3
0002DFE4 <AmiBlitz3.ab3@17410>    BCC.w overerr
0002DFE6 <AmiBlitz3.ab3@17411>   LSL.l #4,D3
0002DFEA <AmiBlitz3.ab3@17412>   SUBI.w #$30,D0
0002DFEE <AmiBlitz3.ab3@17413>   CMP.w #$9,D0
0002DFF2 <AmiBlitz3.ab3@17414>    BLS.w 'skip
0002DFF4 <AmiBlitz3.ab3@17415>   SUBQ.w #7,D0
0002DFF6 <AmiBlitz3.ab3@17418>   OR.w D0,D3
0002DFFA <AmiBlitz3.ab3@17419>    BSR.w get1bytemain
0002DFFE <AmiBlitz3.ab3@17420>    BSR.w ishex
0002E002 <AmiBlitz3.ab3@17421>    BEQ.w 'loop
0002E006 <AmiBlitz3.ab3@17422> BRA.w fetchnum2
0002E00A <AmiBlitz3.ab3@17426>    BSR.w get1bytemain
0002E00E <AmiBlitz3.ab3@17427>    BSR.w checkbin
0002E012 <AmiBlitz3.ab3@17428>    BNE.w syntaxerr
0002E014 <AmiBlitz3.ab3@17429>    MOVEQ.l #$00,D3
0002E016 <AmiBlitz3.ab3@17432>    LSL.l #1,D3
0002E01A <AmiBlitz3.ab3@17433>    BCS.w overerr
0002E01E <AmiBlitz3.ab3@17434>   SUBI.w #$30,D0
0002E020 <AmiBlitz3.ab3@17435>   OR.w D0,D3
0002E024 <AmiBlitz3.ab3@17436>    BSR.w get1bytemain
0002E028 <AmiBlitz3.ab3@17437>    BSR.w checkbin
0002E02C <AmiBlitz3.ab3@17438>    BEQ.w 'loop
0002E030 <AmiBlitz3.ab3@17439> BRA.w fetchnum2
0002E032 <AmiBlitz3.ab3@17443>    MOVE.w d2,-(A7)
0002E03A <AmiBlitz3.ab3@17445>    MOVE.b #0,automode
0002E03E <AmiBlitz3.ab3@17446>    CMP.b #"@",(a5)
0002E042 <AmiBlitz3.ab3@17447>    BNE 'l1
0002E044 <AmiBlitz3.ab3@17448>    ADDQ.l #1,a5
0002E04C <AmiBlitz3.ab3@17449>    MOVE.b #1,automode
0002E050 <AmiBlitz3.ab3@17450>    BSR getparameter2
0002E054 <AmiBlitz3.ab3@17451>    BSR findlabel2
0002E058 <AmiBlitz3.ab3@17452>    BNE 'addit
0002E05C <AmiBlitz3.ab3@17453>  BRA errormsg_autocount
0002E060 <AmiBlitz3.ab3@17456>   BSR.w addlabelhash
0002E068 <AmiBlitz3.ab3@17457>   MOVE.l #$1,$4(A2)
0002E06C <AmiBlitz3.ab3@17458>   MOVEM.l a2/a5,-(a7)
0002E072 <AmiBlitz3.ab3@17459>   MOVE.w lastchar,-(a7)
0002E078 <AmiBlitz3.ab3@17460>   LEA autostorename,a5
0002E07C <AmiBlitz3.ab3@17461>   BSR getparameter2
0002E080 <AmiBlitz3.ab3@17462>   BSR findlabel2
0002E084 <AmiBlitz3.ab3@17463>   BEQ 'found
0002E088 <AmiBlitz3.ab3@17464>   BSR.w addlabelhash
0002E090 <AmiBlitz3.ab3@17465>   MOVE.l #$1,$4(A2)
0002E098 <AmiBlitz3.ab3@17466>   MOVE.l #0,8(a2)
0002E09A <AmiBlitz3.ab3@17469>    MOVE.w (a7)+,d0
0002E0A0 <AmiBlitz3.ab3@17470>    MOVE.w d0,lastchar
0002E0A4 <AmiBlitz3.ab3@17471>   MOVE.l 8(a2),d3
0002E0AC <AmiBlitz3.ab3@17472>   ADD.l #1,8(a2)
0002E0B0 <AmiBlitz3.ab3@17473>   MOVEM.l (a7)+,a2/a5
0002E0B4 <AmiBlitz3.ab3@17474>   MOVE.l d3,8(a2)
0002E0B8 <AmiBlitz3.ab3@17475>   MOVE.l $8(A2),D3
0002E0BC <AmiBlitz3.ab3@17476>  BRA.l 'l3
0002E0C0 <AmiBlitz3.ab3@17480>   BSR.w getparameter2
0002E0C6 <AmiBlitz3.ab3@17482>     TST.b incnif
0002E0CA <AmiBlitz3.ab3@17483>     BEQ 'lc1
0002E0CE <AmiBlitz3.ab3@17484>     BSR.w findlabel2
0002E0D2 <AmiBlitz3.ab3@17485>     BNE 'l5
0002E0D4 <AmiBlitz3.ab3@17486>     MOVEQ #1,d3
0002E0D6 <AmiBlitz3.ab3@17487>     MOVE.w (A7)+,D2
0002E0DA <AmiBlitz3.ab3@17488>  BRA fetchnum2
0002E0DC <AmiBlitz3.ab3@17491>   MOVEQ #0,d3
0002E0DE <AmiBlitz3.ab3@17492>     MOVE.w (A7)+,D2
0002E0E2 <AmiBlitz3.ab3@17493>  BRA fetchnum2
0002E0E6 <AmiBlitz3.ab3@17497>    BSR.w findlabel2
0002E0EA <AmiBlitz3.ab3@17498>    BNE.w cnferr
0002E0F2 <AmiBlitz3.ab3@17501>    CMPI.l #$1,$4(A2)
0002E0F6 <AmiBlitz3.ab3@17502>    BNE.w cnferr
0002E0FA <AmiBlitz3.ab3@17505>    MOVE.l $8(A2),D3
0002E0FC <AmiBlitz3.ab3@17506>    MOVE.w (A7)+,D2
0002E100 <AmiBlitz3.ab3@17507> BRA.w fetchnum2     ;to right type.
0002E106 <AmiBlitz3.ab3@17512>   CLR.w vartype
0002E10E <AmiBlitz3.ab3@17513>   MOVE.b #3,peekaddrsize
0002E112 <AmiBlitz3.ab3@17515>   BSR.w ampersand2
0002E118 <AmiBlitz3.ab3@17517>   MOVE.l a2,rightsidetype
0002E122 <AmiBlitz3.ab3@17518>   MOVE.w flagmask,rightsideflagmask
0002E124 <AmiBlitz3.ab3@17520>   MOVEQ.l #$03,D2
0002E126 <AmiBlitz3.ab3@17521> RTS
0002E12A <AmiBlitz3.ab3@17525>    BSR.w get1bytemain
0002E13C <AmiBlitz3.ab3@17527>    !compare2
0002E140 <AmiBlitz3.ab3@17528>    BEQ andop2
0002E144 <AmiBlitz3.ab3@17530>    BSR.w getparameter
0002E148 <AmiBlitz3.ab3@17531>    BSR.w fetchvars
0002E14C <AmiBlitz3.ab3@17532>    BSR.w calcvar
0002E150 <AmiBlitz3.ab3@17534>   CMP.b #$7,D2
0002E154 <AmiBlitz3.ab3@17535>    BNE.w 'notst
0002E158 <AmiBlitz3.ab3@17536>   BTST #$F,D2
0002E15C <AmiBlitz3.ab3@17537>    BNE.w 'algot2
0002E162 <AmiBlitz3.ab3@17538>   MOVE.w D3,stamp2+2
0002E168 <AmiBlitz3.ab3@17539>   MOVE.l stamp2,D1
0002E16C <AmiBlitz3.ab3@17540>    BSR.w pokela5s
0002E170 <AmiBlitz3.ab3@17541>  BRA.w 'algot
0002E176 <AmiBlitz3.ab3@17544>   MOVE.w regnum,D1
0002E178 <AmiBlitz3.ab3@17545>   LSL.w #8,D1
0002E17A <AmiBlitz3.ab3@17546>   LSL.w #1,D1
0002E180 <AmiBlitz3.ab3@17547>   OR.w stamp,D1
0002E184 <AmiBlitz3.ab3@17548>    BSR.w writeword
0002E186 <AmiBlitz3.ab3@17549>  RTS
0002E18A <AmiBlitz3.ab3@17552>   BTST #$F,D2
0002E18E <AmiBlitz3.ab3@17553>    BNE.w 'algot
0002E194 <AmiBlitz3.ab3@17554>   MOVE.w D3,leaamp+2
0002E19A <AmiBlitz3.ab3@17555>   MOVE.l leaamp,D1
0002E19E <AmiBlitz3.ab3@17556>    BSR.w pokela5s
0002E1A4 <AmiBlitz3.ab3@17559>   MOVE.w regnum,D1
0002E1A6 <AmiBlitz3.ab3@17560>   LSL.w #8,D1
0002E1A8 <AmiBlitz3.ab3@17561>   LSL.w #1,D1
0002E1AE <AmiBlitz3.ab3@17562>   OR.w leaamp2,D1
0002E1B2 <AmiBlitz3.ab3@17563> BRA.w writeword
0002E1B6 <AmiBlitz3.ab3@17568>   MOVE.w #$D200,D1     ; was #ern,
0002E1BA <AmiBlitz3.ab3@17569>    BSR.w Atokejsr
0002E1BC <AmiBlitz3.ab3@17570>   MOVEQ.l #$03,D2
0002E1BE <AmiBlitz3.ab3@17571> RTS
0002E1C2 <AmiBlitz3.ab3@17575> addrcode:  Dc.b $20,$6D,$00,$00                            ;MOVEA.L $0000(A5),A0
0002E1C4 <AmiBlitz3.ab3@17576>            Dc.b $D0,$C0                                    ;ADDA.W  D0,A0
0002E1C6 <AmiBlitz3.ab3@17577>            Dc.b $20,$08                                    ;MOVE.L  A0,D0
0002E1CA <AmiBlitz3.ab3@17583>    BSR.w get1bytemain
0002E1CC <AmiBlitz3.ab3@17585>   MOVE.w D0,D1
0002E1D0 <AmiBlitz3.ab3@17586>    BPL.w syntaxerr
0002E1D2 <AmiBlitz3.ab3@17587>   MOVE.w D2,-(A7)
0002E1D6 <AmiBlitz3.ab3@17588>   BCLR #$F,D1
0002E1DA <AmiBlitz3.ab3@17589>    BSR.w searchinstr
0002E1DE <AmiBlitz3.ab3@17590>   MOVE.l $12(A2),D0
0002E1E2 <AmiBlitz3.ab3@17591>   TST.w -$2(A2,D0.L)
0002E1E6 <AmiBlitz3.ab3@17592>    BEQ.w freeerr
0002E1E8 <AmiBlitz3.ab3@17593>   MOVE.w (A7)+,D2
0002E1EA <AmiBlitz3.ab3@17594> RTS
0002E1EE <AmiBlitz3.ab3@17598>   MOVE.l $0(A5),D0
0002E1F2 <AmiBlitz3.ab3@17599>    BNE.b ucodeskip
0002E1F4 <AmiBlitz3.ab3@17600>   MOVEQ.l #-$01,D0
0002E1F8 <AmiBlitz3.ab3@17601> BRA.b usedcodef
0002E1FC <AmiBlitz3.ab3@17604>   SUB.l $0(A5),D0
0002E1FE <AmiBlitz3.ab3@17607>   LSR.w #8,D0
0002E202 <AmiBlitz3.ab3@17612>    MOVE.l $0(A5),D0
0002E206 <AmiBlitz3.ab3@17613>    BNE.b ucodeskip2
0002E208 <AmiBlitz3.ab3@17614>   MOVEQ.l #-$01,D0
0002E20C <AmiBlitz3.ab3@17615> BRA.b usedcode2f
0002E210 <AmiBlitz3.ab3@17618>   SUB.l $0(A5),D0                                          ;usedcode2
0002E212 <AmiBlitz3.ab3@17619>   LSR.w #8,D0
0002E214 <AmiBlitz3.ab3@17622>   LSR.w #8,D0
0002E216 <AmiBlitz3.ab3@17627>   MOVE.l D0,-(A7)
0002E218 <AmiBlitz3.ab3@17630>   MOVE.l (A7)+,D0
0002E21A <AmiBlitz3.ab3@17633>   MOVE.l D0,D0
0002E21E <AmiBlitz3.ab3@17639>   BSR.w fetchit
0002E222 <AmiBlitz3.ab3@17641>   MOVE.w -$2(A2,D0.L),D3
0002E226 <AmiBlitz3.ab3@17642>   CMP.w #$9,D3
0002E22A <AmiBlitz3.ab3@17643>    BCC.w 'skip
0002E22E <AmiBlitz3.ab3@17647>   LEA usedcode(PC),A0
0002E232 <AmiBlitz3.ab3@17648>   LEA usedcodef(PC),A1
0002E238 <AmiBlitz3.ab3@17650>   ANDI.w #$F1FF,$E+4(A0)                                   ;and #$f1ff,ucodediv-usedcode(a0) org source
0002E23C <AmiBlitz3.ab3@17651>   ANDI.w #$7,D3
0002E23E <AmiBlitz3.ab3@17652>   LSL.w #8,D3
0002E240 <AmiBlitz3.ab3@17653>   LSL.w #1,D3
0002E244 <AmiBlitz3.ab3@17654>   OR.w D3,$E+4(A0)                                         ;or  d3,ucodediv-usedcode(a0) org source
0002E248 <AmiBlitz3.ab3@17655>  BRA.w 'skip2
0002E24C <AmiBlitz3.ab3@17660>   LEA usedcode2(PC),A0
0002E250 <AmiBlitz3.ab3@17661>   LEA usedcode2f(PC),A1
0002E256 <AmiBlitz3.ab3@17663>   ANDI.w #$F1FF,$10+4(A0)                                  ;and #$f1ff,ucodediv2-usedcode2(a0) org source
0002E258 <AmiBlitz3.ab3@17664>   SUBQ.w #8,D3
0002E25A <AmiBlitz3.ab3@17665>   LSL.w #8,D3
0002E25C <AmiBlitz3.ab3@17666>   LSL.w #1,D3
0002E260 <AmiBlitz3.ab3@17667>   OR.w D3,$10+4(A0)                                        ;or  d3,ucodediv2-usedcode2(a0) org source
0002E264 <AmiBlitz3.ab3@17670>   MOVE.w -$6(A2,D0.L),D3
0002E268 <AmiBlitz3.ab3@17671>   MOVE.w D3,$C+4(A0)                                       ;move d3,ucodeskip-usedcode+2(a0) org source
0002E26A <AmiBlitz3.ab3@17672>   ADDQ.w #4,D3
0002E26E <AmiBlitz3.ab3@17673>   MOVE.w D3,$2(A0)
0002E274 <AmiBlitz3.ab3@17674>   MOVE.w regnum,D1
0002E278 <AmiBlitz3.ab3@17675>    BEQ.w 'skip3
0002E27C <AmiBlitz3.ab3@17676>   MOVE.w usedprep(PC),D1
0002E280 <AmiBlitz3.ab3@17677>    BSR.w writeword
0002E284 <AmiBlitz3.ab3@17680>   BSR.w pokecode
0002E28A <AmiBlitz3.ab3@17681>   MOVE.w regnum,D1
0002E28E <AmiBlitz3.ab3@17682>    BEQ.w 'skip4
0002E290 <AmiBlitz3.ab3@17683>   LSL.w #8,D1
0002E292 <AmiBlitz3.ab3@17684>   LSL.w #1,D1
0002E296 <AmiBlitz3.ab3@17685>   OR.w usedfix(PC),D1
0002E29A <AmiBlitz3.ab3@17686>    BSR.w writeword
0002E29E <AmiBlitz3.ab3@17687>   MOVE.w useddone(PC),D1
0002E2A2 <AmiBlitz3.ab3@17688>    BSR.w writeword
0002E2A4 <AmiBlitz3.ab3@17691>    MOVEQ.l #$02,D2
0002E2A8 <AmiBlitz3.ab3@17692> BRA.w get1bytemain
0002E2AC <AmiBlitz3.ab3@17700>    BSR.w fetchit
0002E2AE <AmiBlitz3.ab3@17702>   MOVEQ.l #$00,D3
0002E2B2 <AmiBlitz3.ab3@17703>   MOVE.w -$4(A2,D0.L),D3
0002E2B6 <AmiBlitz3.ab3@17704>    BSR.w get1bytemain
0002E2BA <AmiBlitz3.ab3@17705> BRA.w fetchnum2
0002E2BE <AmiBlitz3.ab3@17712>    BSR.w get1bytemain    ;get the token
0002E2C0 <AmiBlitz3.ab3@17713>   MOVE.w D0,-(A7)
0002E2C4 <AmiBlitz3.ab3@17714>    BSR.w get1bytemain    ;and the bracket?
0002E2C8 <AmiBlitz3.ab3@17715>   CMP.w #$28,D0          ;'('
0002E2CC <AmiBlitz3.ab3@17716>    BNE.w syntaxerr
0002E2CE <AmiBlitz3.ab3@17717>   MOVE.w (A7)+,D0
0002E2D2 <AmiBlitz3.ab3@17718>    BSR.w getmaxel
0002E2D6 <AmiBlitz3.ab3@17719>    BSR.w reget
0002E2DA <AmiBlitz3.ab3@17720>   CMP.w #$29,D0          ;')'
0002E2DE <AmiBlitz3.ab3@17721>    BNE.w syntaxerr
0002E2E2 <AmiBlitz3.ab3@17725>   LEA addrcode(PC),A0
0002E2E6 <AmiBlitz3.ab3@17726>   LEA addrcodef(PC),A1
0002E2EC <AmiBlitz3.ab3@17727>   MOVE.w -$6(A2),$2(A0) ;x(a5)
0002E2F0 <AmiBlitz3.ab3@17728>   MOVE.w $4(A0),D1
0002E2F4 <AmiBlitz3.ab3@17729>   ANDI.w #$FFF8,D1
0002E2FA <AmiBlitz3.ab3@17730>   OR.w regnum,D1
0002E2FE <AmiBlitz3.ab3@17731>   MOVE.w D1,$4(A0)      ;add Dregat,a0
0002E302 <AmiBlitz3.ab3@17732>   MOVE.w $6(A0),D1
0002E306 <AmiBlitz3.ab3@17733>   ANDI.w #$F1FF,D1
0002E30C <AmiBlitz3.ab3@17734>   MOVE.w regnum,D0
0002E30E <AmiBlitz3.ab3@17735>   LSL.w #8,D0
0002E310 <AmiBlitz3.ab3@17736>   LSL.w #1,D0
0002E312 <AmiBlitz3.ab3@17737>   OR.w D0,D1
0002E316 <AmiBlitz3.ab3@17738>   MOVE.w D1,$6(A0)      ;move.l a0,Dregat
0002E31A <AmiBlitz3.ab3@17739>    BSR.w pokecode
0002E31C <AmiBlitz3.ab3@17740>   MOVEQ.l #$03,D2       ;now a long
0002E320 <AmiBlitz3.ab3@17741> BRA.w get1bytemain
0002E324 <AmiBlitz3.ab3@17747>   CMP.w #-$7F4D,D0     ; was #$8000+tnum,
0002E328 <AmiBlitz3.ab3@17748>    BHI.w 'overasm
0002E32C <AmiBlitz3.ab3@17749>  BRA.w syntaxerr
0002E330 <AmiBlitz3.ab3@17754>   CMP.w #NullTokenID,d0                                ;#$b581 check for lib 107 token 1 "NULL" form elomorsyslib
0002E334 <AmiBlitz3.ab3@17755>    BNE 'nonull
0002E33A <AmiBlitz3.ab3@17756>    MOVE.l d0,lastinstruction
0002E33E <AmiBlitz3.ab3@17757>    MOVE.w #$7000,d1                                            ;asm instr moveq #0,dx
0002E344 <AmiBlitz3.ab3@17758>    MOVE.w regnum,d0
0002E346 <AmiBlitz3.ab3@17759>    ASL.l #7,d0
0002E348 <AmiBlitz3.ab3@17760>    ASL.l #2,d0
0002E34A <AmiBlitz3.ab3@17761>    OR.l d0,d1
0002E34E <AmiBlitz3.ab3@17762>    BSR writeword
0002E354 <AmiBlitz3.ab3@17763>    JSR get1bytemain
0002E356 <AmiBlitz3.ab3@17764>   RTS
0002E35A <AmiBlitz3.ab3@17767>   CMP.w #$c982,d0
0002E35E <AmiBlitz3.ab3@17768>    BNE nonew_
0002E360 <AmiBlitz3.ab3@17771>   MOVE.l a5,-(a7)
0002E366 <AmiBlitz3.ab3@17772>   MOVE.w lastchar,-(a7)
0002E36C <AmiBlitz3.ab3@17773>   JSR get1bytemain
0002E370 <AmiBlitz3.ab3@17774>   CMP.w #"(",d0                                             ; use oldcode
0002E374 <AmiBlitz3.ab3@17775>   BNE 'newcode
0002E37A <AmiBlitz3.ab3@17776>   JSR get1bytemain
0002E37E <AmiBlitz3.ab3@17777>   CMP.w #")",d0
0002E382 <AmiBlitz3.ab3@17778>   BEQ 'newcode
0002E388 <AmiBlitz3.ab3@17779>   MOVE.w (a7)+,lastchar
0002E38A <AmiBlitz3.ab3@17780>   MOVE.l (a7)+,a5
0002E390 <AmiBlitz3.ab3@17781>   MOVE.w lastchar,d0
0002E394 <AmiBlitz3.ab3@17782>   BRA nonew_
0002E396 <AmiBlitz3.ab3@17785>   MOVE.l a0,-(a7)
0002E39C <AmiBlitz3.ab3@17786>   TST.b blitzparloop
0002E3A0 <AmiBlitz3.ab3@17787>   BNE 'err
0002E3A6 <AmiBlitz3.ab3@17788>   TST.b funcparloop
0002E3AA <AmiBlitz3.ab3@17789>   BNE 'err
0002E3AE <AmiBlitz3.ab3@17790>   BRA 'ok
0002E3B4 <AmiBlitz3.ab3@17793>   JMP errornewnotincalls
0002E3BA <AmiBlitz3.ab3@17796>   MOVE.l #$203c0000,d1
0002E3BE <AmiBlitz3.ab3@17797>   BSR writelong                                            ; 68k asm move.l #$xx,d0
0002E3C0 <AmiBlitz3.ab3@17798>   MOVEQ #0,d1
0002E3C4 <AmiBlitz3.ab3@17799>   MOVE.w 8(a0),d1
0002E3C8 <AmiBlitz3.ab3@17800>   BSR writeword
0002E3CC <AmiBlitz3.ab3@17801>   MOVE.w #$7200,d1                                         ; 68k asm "moveq #0,d1"
0002E3D0 <AmiBlitz3.ab3@17802>   BSR writeword
0002E3D4 <AmiBlitz3.ab3@17803>   MOVE.w #$C002,D1                                         ;call function to alloc global mem
0002E3D8 <AmiBlitz3.ab3@17804>   BSR.w tokejsr2
0002E3DA <AmiBlitz3.ab3@17805>   MOVE.l (a7)+,a0
0002E3DC <AmiBlitz3.ab3@17806>   ADDQ.l #6,a7                      ; a5 need not restore
0002E3E0 <AmiBlitz3.ab3@17807>   CMP.w #")",d0
0002E3E4 <AmiBlitz3.ab3@17808>   BNE 'nobracket
0002E3EA <AmiBlitz3.ab3@17809>   JSR get1bytemain
0002E3EC <AmiBlitz3.ab3@17812> RTS
0002E3F0 <AmiBlitz3.ab3@17816>   CMP.w #-$7F4A,D0      ; was #$8003+tnum,
0002E3F4 <AmiBlitz3.ab3@17817>    BEQ.w doern
0002E3F8 <AmiBlitz3.ab3@17818>   CMP.w #-$7F48,D0      ; was #$8005+tnum,
0002E3FC <AmiBlitz3.ab3@17819>    BEQ.w doaddr
0002E400 <AmiBlitz3.ab3@17820>   CMP.w #-$7F3C,D0      ; was #$8011+tnum,
0002E404 <AmiBlitz3.ab3@17821>    BEQ.w domaximum
0002E408 <AmiBlitz3.ab3@17822>   CMP.w #-$7F2F,D0      ; was #$801e+tnum,
0002E40C <AmiBlitz3.ab3@17823>    BEQ.w doused
0002E40E <AmiBlitz3.ab3@17825>   MOVE.w D2,-(A7)       ;remember old type!
0002E410 <AmiBlitz3.ab3@17826>   MOVE.w D0,D1
0002E414 <AmiBlitz3.ab3@17827>   BCLR #$F,D1
0002E418 <AmiBlitz3.ab3@17831>    BSR.w searchinstr
0002E41A <AmiBlitz3.ab3@17832>   MOVE.w (A3),D1
0002E41E <AmiBlitz3.ab3@17833>   BTST #$1,D1
0002E422 <AmiBlitz3.ab3@17834>    BEQ.w noreturn_                                         ;syntax error noreturn
0002E426 <AmiBlitz3.ab3@17835>   BTST #$2,D1
0002E42A <AmiBlitz3.ab3@17836>    BNE.w amigalib
0002E42C <AmiBlitz3.ab3@17842>   LSR.w #8,D1
0002E432 <AmiBlitz3.ab3@17843>   BTST #$3,$1(A3)
0002E436 <AmiBlitz3.ab3@17844>    BEQ.w 'no0
0002E43C <AmiBlitz3.ab3@17846>    JSR sizespec2
0002E442 <AmiBlitz3.ab3@17850>    CLR.l rightsidetype
0002E448 <AmiBlitz3.ab3@17851>    CLR.w rightsideflagmask
0002E44A <AmiBlitz3.ab3@17853>    MOVE.w D1,-(A7)                                         ;is library instruction
0002E44E <AmiBlitz3.ab3@17854>   CMP.w #$7,D1
0002E452 <AmiBlitz3.ab3@17855>    BNE.w 'notst0
0002E454 <AmiBlitz3.ab3@17856>   MOVE.l A2,-(A7)
0002E458 <AmiBlitz3.ab3@17857>    BSR.w makesbase
0002E45A <AmiBlitz3.ab3@17858>   MOVEA.l (A7)+,A2
0002E45E <AmiBlitz3.ab3@17861>     BSR.w savem
0002E460 <AmiBlitz3.ab3@17862>   MOVE.w D3,-(A7)        ;the movem regs
0002E464 <AmiBlitz3.ab3@17864>    BSR.w get1bytemain
0002E466 <AmiBlitz3.ab3@17865>   MOVEQ.l #$00,D1
0002E46A <AmiBlitz3.ab3@17866>   CMP.w #$28,D0          ;'('
0002E46E <AmiBlitz3.ab3@17867>    BNE.w 'nopars
0002E474 <AmiBlitz3.ab3@17868>    JSR countpees
0002E476 <AmiBlitz3.ab3@17869>   TST.w D1
0002E47A <AmiBlitz3.ab3@17870>    BEQ.w syntaxerr
0002E47E <AmiBlitz3.ab3@17871>  BRA.w 'skip0
0002E488 <AmiBlitz3.ab3@17876>   MOVE.w oldqflag,instringon
0002E48E <AmiBlitz3.ab3@17877>   MOVEA.l lastsourcepos,A5
0002E494 <AmiBlitz3.ab3@17881>    MOVE.w regnum,-(A7)
0002E49E <AmiBlitz3.ab3@17883>    MOVE.w regnum,regnumstore
0002E4A4 <AmiBlitz3.ab3@17884>    TST.b fpu
0002E4A8 <AmiBlitz3.ab3@17885>             BEQ 'nofloat
0002E4AE <AmiBlitz3.ab3@17886>             CMP.w #$ffff,28(a3)
0002E4B2 <AmiBlitz3.ab3@17887>             BNE 'nofloat
0002E4B8 <AmiBlitz3.ab3@17888>             CMP.w #$3c01,34(a3)                            ;val do nofpu stuff
0002E4BC <AmiBlitz3.ab3@17889>             BEQ 'nofloat
0002E4C2 <AmiBlitz3.ab3@17890>             CMP.w #$3c02,34(a3)                            ;int skip
0002E4C6 <AmiBlitz3.ab3@17891>             BEQ 'quick1
0002E4CA <AmiBlitz3.ab3@17892>             CMP.b #5,(a3)
0002E4CE <AmiBlitz3.ab3@17893>             BNE 'nofloat
0002E4D4 <AmiBlitz3.ab3@17896>             CLR.l load_var_addr
0002E4D8 <AmiBlitz3.ab3@17897>  BRA 'isfpu
0002E4DE <AmiBlitz3.ab3@17901>    CLR.w regnum
0002E4E0 <AmiBlitz3.ab3@17904>    MOVE.w D1,-(A7)
0002E4E6 <AmiBlitz3.ab3@17905>   BTST #$3,$1(A3)
0002E4EA <AmiBlitz3.ab3@17906>    BEQ.w 'no2
0002E4EE <AmiBlitz3.ab3@17927>   MOVE.w $6(A7),D1
0002E4F4 <AmiBlitz3.ab3@17929>   MOVE.w d1,peeksize
0002E4F8 <AmiBlitz3.ab3@17940>   ORI.w #$7000,D1
0002E4FC <AmiBlitz3.ab3@17941>   BSR.w writeword                                          ;write peekmode
0002E502 <AmiBlitz3.ab3@17944>   ADDQ.w #1,regnum
0002E504 <AmiBlitz3.ab3@17945>   MOVE.w (A7),D1
0002E50C <AmiBlitz3.ab3@17949>   MOVE.w 2(a7),tempregnum
0002E512 <AmiBlitz3.ab3@17950>   MOVE.w parnum,-(a7)                                       ;7.2014 parnum need store to allow functioncall in parameter >6
0002E518 <AmiBlitz3.ab3@17951>   CLR.w parnum                                              ;7.2014
0002E51E <AmiBlitz3.ab3@17953>   JSR dolibtoke                                             ;write code of blitzfunc
0002E524 <AmiBlitz3.ab3@17955>   MOVE.w (a7)+,parnum                                       ;7.2014 new restore parnum
0002E526 <AmiBlitz3.ab3@17957>   TST.w (A7)+
0002E52A <AmiBlitz3.ab3@17958>   BEQ.w 'skip
0002E52E <AmiBlitz3.ab3@17959>   CMP.w #")",D0                                             ; check if ) here for correct end of blitzlib function call
0002E532 <AmiBlitz3.ab3@17960>   BNE.w errorbracketmiss                                    ; was syntax error
0002E538 <AmiBlitz3.ab3@17962>   CLR.l lasttoken
0002E53C <AmiBlitz3.ab3@17964>   BSR.w get1bytemain
0002E53E <AmiBlitz3.ab3@17967>    MOVE.w (A7)+,D1
0002E544 <AmiBlitz3.ab3@17968>    MOVE.w D1,regnum
0002E548 <AmiBlitz3.ab3@17969>    BEQ.w 'skip2
0002E54E <AmiBlitz3.ab3@17971>    CMP.w #$3c01,24(a2)                                     ;val skipped
0002E552 <AmiBlitz3.ab3@17972>    BNE 'noval
0002E558 <AmiBlitz3.ab3@17973>    TST.b fpu
0002E55C <AmiBlitz3.ab3@17974>    BEQ 'noval
0002E562 <AmiBlitz3.ab3@17975>    CLR.l load_var_addr
0002E564 <AmiBlitz3.ab3@17976>    MOVEQ #0,d1
0002E56A <AmiBlitz3.ab3@17977>    MOVE.w regnum,d1
0002E56C <AmiBlitz3.ab3@17978>    LSL.l #7,d1
0002E572 <AmiBlitz3.ab3@17979>    OR.l #$f2000000,d1
0002E576 <AmiBlitz3.ab3@17980>    BSR writelong
0002E57A <AmiBlitz3.ab3@17981>  BRA 'skip2
0002E580 <AmiBlitz3.ab3@17984>    CMP.w #$3c02,24(a2)                                     ;int skipped
0002E584 <AmiBlitz3.ab3@17985>    BEQ 'quick
0002E588 <AmiBlitz3.ab3@17986>    CMP.b #5,d2
0002E58C <AmiBlitz3.ab3@17987>    BNE 'nofpu2
0002E592 <AmiBlitz3.ab3@17988>    TST.b fpu
0002E596 <AmiBlitz3.ab3@17989>    BEQ 'nofpu2
0002E59C <AmiBlitz3.ab3@17994>    CLR.l load_var_addr
0002E5A0 <AmiBlitz3.ab3@17995>  BRA 'skip2
0002E5A2 <AmiBlitz3.ab3@17999>   LSL.w #8,D1
0002E5A4 <AmiBlitz3.ab3@18000>   LSL.w #1,D1
0002E5A8 <AmiBlitz3.ab3@18001>   ORI.w #$2000,D1
0002E5AC <AmiBlitz3.ab3@18002>   BSR.w writeword      ;move.l d0,regat                                    ;write move.l d0,dx
0002E5B2 <AmiBlitz3.ab3@18004>   TST.b fpu
0002E5B6 <AmiBlitz3.ab3@18005>   BEQ 'skip2
0002E5B8 <AmiBlitz3.ab3@18006>   MOVEQ #0,d1
0002E5BE <AmiBlitz3.ab3@18007>   MOVE.w regnum,d1
0002E5C0 <AmiBlitz3.ab3@18008>   LSL.l #7,d1
0002E5C6 <AmiBlitz3.ab3@18009>   OR.l #$f2000000,d1
0002E5C8 <AmiBlitz3.ab3@18014>        MOVE.w (A7)+,D3
0002E5CC <AmiBlitz3.ab3@18015>        BEQ.w 'nomovem
0002E5D2 <AmiBlitz3.ab3@18017>        TST.b fpu
0002E5D6 <AmiBlitz3.ab3@18018>        BEQ 'nofpu3
0002E5D8 <AmiBlitz3.ab3@18019>       MOVE.l d0,-(a7)
0002E5DA <AmiBlitz3.ab3@18020>        MOVE.l a0,-(a7)
0002E5E0 <AmiBlitz3.ab3@18021>        MOVE.l stacktrack,d1
0002E5E6 <AmiBlitz3.ab3@18022>        LEA fpustackbase,a0
0002E5EE <AmiBlitz3.ab3@18023>        MOVE.w 0(a0,d1),regmask
0002E5F0 <AmiBlitz3.ab3@18024>        MOVE.l (a7)+,a0
0002E5F4 <AmiBlitz3.ab3@18025>       MOVE.w #8,d0
0002E5F8 <AmiBlitz3.ab3@18028>       BEQ 'ready
0002E5FE <AmiBlitz3.ab3@18029>       BTST d0,regmask
0002E602 <AmiBlitz3.ab3@18030>       BEQ 'noa7
0002E604 <AmiBlitz3.ab3@18031>       MOVEQ #0,d1
0002E606 <AmiBlitz3.ab3@18032>       MOVE.w d0,d1
0002E608 <AmiBlitz3.ab3@18033>       SUBQ.w #1,d1
0002E60A <AmiBlitz3.ab3@18034>       ASL #7,d1
0002E610 <AmiBlitz3.ab3@18036>       OR.l #$f21f5400,d1                                   ;fmove.d (a7)+
0002E614 <AmiBlitz3.ab3@18037>       BSR writelong
0002E61A <AmiBlitz3.ab3@18038>       SUBQ.l #2,stacktrack
0002E61C <AmiBlitz3.ab3@18041>       SUBQ.w #1,d0
0002E620 <AmiBlitz3.ab3@18042>       BNE 'loop
0002E622 <AmiBlitz3.ab3@18045>       MOVE.l (a7)+,d0
0002E628 <AmiBlitz3.ab3@18046>       SUBQ.l #2,stacktrack                                 ;int track
0002E62C <AmiBlitz3.ab3@18050>    MOVE.w #$4CDF,D1
0002E630 <AmiBlitz3.ab3@18051>    BSR.w writeword                                         ;write movem.l (a7)+,
0002E632 <AmiBlitz3.ab3@18052>   MOVEQ.l #$00,D1
0002E634 <AmiBlitz3.ab3@18053>   MOVEQ.l #$0F,D4
0002E636 <AmiBlitz3.ab3@18056>     LSL.w #1,D3
0002E638 <AmiBlitz3.ab3@18057>     ROXR.w #1,D1
0002E63C <AmiBlitz3.ab3@18058>   DBF D4,'loopsw
0002E640 <AmiBlitz3.ab3@18059>    BSR.w writeword      ;poke movem (a7)+...
0002E646 <AmiBlitz3.ab3@18061>    TST.b fast
0002E64A <AmiBlitz3.ab3@18062>    BEQ 'nomovem
0002E650 <AmiBlitz3.ab3@18063>    TST.w regnum
0002E654 <AmiBlitz3.ab3@18064>    BEQ 'nomovem
0002E65A <AmiBlitz3.ab3@18065>    CMP.w #$3c0e,$1c(a3)                                    ;true
0002E65E <AmiBlitz3.ab3@18066>    BNE 'l1b
0002E664 <AmiBlitz3.ab3@18067>    MOVE.w regnum,d1
0002E666 <AmiBlitz3.ab3@18068>    ASL.l #8,d1
0002E668 <AmiBlitz3.ab3@18069>    ASL.l #1,d1
0002E66C <AmiBlitz3.ab3@18070>    OR.w #$70ff,d1
0002E676 <AmiBlitz3.ab3@18071>    SUB.l #12,destpointer
0002E67A <AmiBlitz3.ab3@18072>    BSR writeword
0002E680 <AmiBlitz3.ab3@18075>   CMP.w #$3c0f,$1c(a3)                                     ;false
0002E684 <AmiBlitz3.ab3@18076>    BNE 'l2b
0002E68A <AmiBlitz3.ab3@18077>     MOVE.w regnum,d1
0002E68C <AmiBlitz3.ab3@18078>     ASL.l #8,d1
0002E68E <AmiBlitz3.ab3@18079>     ASL.l #1,d1
0002E692 <AmiBlitz3.ab3@18080>     OR.w #$7000,d1
0002E69C <AmiBlitz3.ab3@18081>     SUB.l #12,destpointer
0002E6A0 <AmiBlitz3.ab3@18082>     BSR writeword
0002E6A2 <AmiBlitz3.ab3@18087>    MOVE.w (A7)+,D2
0002E6A6 <AmiBlitz3.ab3@18088>   CMP.w #$7,D2                                             ;destination var type
0002E6AA <AmiBlitz3.ab3@18089>    BNE.w 'notst
0002E6B0 <AmiBlitz3.ab3@18090>   MOVE.w putstlen,D1
0002E6B6 <AmiBlitz3.ab3@18091>   OR.w regnum,D1
0002E6BA <AmiBlitz3.ab3@18092>    BSR.w writeword
0002E6BE <AmiBlitz3.ab3@18095> BRA.w varcont
0002E6C2 <AmiBlitz3.ab3@18100>   MOVE.w $6(A3),D1
0002E6C6 <AmiBlitz3.ab3@18101>    BSR.w uselib           ;get lib for base address
0002E6CA <AmiBlitz3.ab3@18102>    BSR.w savereg
0002E6CC <AmiBlitz3.ab3@18103>   MOVE.l D4,D1
0002E6CE <AmiBlitz3.ab3@18104>   MOVE.l D5,-(A7)
0002E6D2 <AmiBlitz3.ab3@18105>    BSR.w pokemovem
0002E6D6 <AmiBlitz3.ab3@18106>   MOVE.w $A(A1),-(A7)     ;libbase reg
0002E6D8 <AmiBlitz3.ab3@18107>   ADDQ.w #8,A3
0002E6DA <AmiBlitz3.ab3@18108>   MOVE.w (A3)+,-(A7)      ;get offset for lib
0002E6DC <AmiBlitz3.ab3@18109>   MOVE.l A3,-(A7)
0002E6E0 <AmiBlitz3.ab3@18110>    BSR.w get1bytemain
0002E6E2 <AmiBlitz3.ab3@18111>   MOVE.w D0,-(A7)         ;remember first bracket....
0002E6E4 <AmiBlitz3.ab3@18115>   MOVEQ.l #$00,D3
0002E6EA <AmiBlitz3.ab3@18117>   JSR checka4a5
0002E6EC <AmiBlitz3.ab3@18121>   MOVE.b (A3)+,D1
0002E6F0 <AmiBlitz3.ab3@18122>    BMI.w 'done
0002E6F2 <AmiBlitz3.ab3@18123>   MOVEQ.l #$03,D2
0002E6F4 <AmiBlitz3.ab3@18124>   ADDQ.w #1,D3
0002E6F8 <AmiBlitz3.ab3@18125>   MOVEM.l D3/A3,-(A7)
0002E6FE <AmiBlitz3.ab3@18127>   MOVE.b funcparloop,-(a7)
0002E704 <AmiBlitz3.ab3@18128>   CLR.b funcparloop
0002E70A <AmiBlitz3.ab3@18129>   MOVE.b blitzparloop,-(a7)
0002E712 <AmiBlitz3.ab3@18130>   MOVE.b #1,blitzparloop
0002E718 <AmiBlitz3.ab3@18131>   MOVE.l lasttoken,-(a7)
0002E71E <AmiBlitz3.ab3@18132>   MOVE.l leftsidetype,-(a7)
0002E724 <AmiBlitz3.ab3@18133>   MOVE.l rightsidetype,-(a7)
0002E728 <AmiBlitz3.ab3@18135>   BSR.w peval
0002E72E <AmiBlitz3.ab3@18137>   MOVE.l (a7)+,rightsidetype
0002E734 <AmiBlitz3.ab3@18138>   MOVE.l (a7)+,leftsidetype
0002E73A <AmiBlitz3.ab3@18139>   MOVE.l (a7)+,lasttoken
0002E740 <AmiBlitz3.ab3@18140>   MOVE.b (a7)+,blitzparloop
0002E746 <AmiBlitz3.ab3@18141>   MOVE.b (a7)+,funcparloop
0002E74C <AmiBlitz3.ab3@18143>   SUBQ.w #4,a2offset              ;readjust stack! it's coming off later!
0002E750 <AmiBlitz3.ab3@18144>   MOVEM.l (A7)+,D3/A3
0002E754 <AmiBlitz3.ab3@18145>   CMP.w #$2C,D0                   ;','
0002E758 <AmiBlitz3.ab3@18146>    BEQ.w 'loop
0002E75A <AmiBlitz3.ab3@18147>   TST.b (A3)
0002E75E <AmiBlitz3.ab3@18148>    BPL.w syntaxerr
0002E760 <AmiBlitz3.ab3@18151>   MOVE.w (A7)+,D1
0002E764 <AmiBlitz3.ab3@18152>    BSR.w tstbras
0002E766 <AmiBlitz3.ab3@18153>   MOVEA.l (A7)+,A3
0002E768 <AmiBlitz3.ab3@18154>   SUBQ.w #1,D3
0002E76C <AmiBlitz3.ab3@18155>    BMI.w 'nopars
0002E76E <AmiBlitz3.ab3@18158>   TST.b (A3)+                     ;go to end of params
0002E772 <AmiBlitz3.ab3@18159>    BPL.w 'toend
0002E774 <AmiBlitz3.ab3@18160>   SUBQ.w #1,A3
0002E776 <AmiBlitz3.ab3@18163>     MOVEQ.l #$00,D1
0002E778 <AmiBlitz3.ab3@18164>     MOVE.b -(A3),D1
0002E77C <AmiBlitz3.ab3@18165>     BTST #$4,D1
0002E780 <AmiBlitz3.ab3@18166>      BNE.w 'addreg
0002E786 <AmiBlitz3.ab3@18167>     CMP.w regnum,D1
0002E78A <AmiBlitz3.ab3@18168>      BCC.w 'nomovem
0002E78C <AmiBlitz3.ab3@18169>     BSET D1,D5
0002E78E <AmiBlitz3.ab3@18170>     MOVEQ.l #$0F,D0
0002E790 <AmiBlitz3.ab3@18171>     SUB.w D1,D0
0002E792 <AmiBlitz3.ab3@18172>     BSET D0,D4
0002E794 <AmiBlitz3.ab3@18175>     LSL.w #8,D1
0002E796 <AmiBlitz3.ab3@18176>     LSL.w #1,D1
0002E79A <AmiBlitz3.ab3@18177>     ORI.w #$201F,D1
0002E79E <AmiBlitz3.ab3@18178>    BRA.w 'gotit
0002E7A2 <AmiBlitz3.ab3@18181>     ANDI.w #$7,D1
0002E7A4 <AmiBlitz3.ab3@18182>     LSL.w #8,D1
0002E7A6 <AmiBlitz3.ab3@18183>     LSL.w #1,D1
0002E7AA <AmiBlitz3.ab3@18184>     ORI.w #$205F,D1
0002E7AE <AmiBlitz3.ab3@18187>      BSR.w writeword
0002E7B2 <AmiBlitz3.ab3@18188>   DBF D3,'loop2
0002E7B8 <AmiBlitz3.ab3@18191>   MOVE.w (A7)+,libjsr+2
0002E7BE <AmiBlitz3.ab3@18192>   MOVE.w (A7)+,libbase+2
0002E7C4 <AmiBlitz3.ab3@18193>   MOVE.l libbase,D1
0002E7C8 <AmiBlitz3.ab3@18194>    BSR.w writelong
0002E7CE <AmiBlitz3.ab3@18195>   MOVE.l libjsr,D1
0002E7D2 <AmiBlitz3.ab3@18196>    BSR.w writelong
0002E7D8 <AmiBlitz3.ab3@18197>   MOVE.w regnum,D1
0002E7DC <AmiBlitz3.ab3@18198>    BEQ.w 'nofin
0002E7DE <AmiBlitz3.ab3@18199>   LSL.w #8,D1
0002E7E0 <AmiBlitz3.ab3@18200>   LSL.w #1,D1
0002E7E4 <AmiBlitz3.ab3@18201>   ORI.w #$2000,D1
0002E7E8 <AmiBlitz3.ab3@18202>    BSR.w writeword
0002E7EA <AmiBlitz3.ab3@18205>   MOVE.l (A7)+,D1
0002E7EE <AmiBlitz3.ab3@18206>    BSR.w pokemovem
0002E7F4 <AmiBlitz3.ab3@18208>    JSR restorea4a5
0002E7F6 <AmiBlitz3.ab3@18210>   MOVEQ.l #$03,D2
0002E7FA <AmiBlitz3.ab3@18211>    BSR.w reget
0002E7FE <AmiBlitz3.ab3@18212> BRA.w varcont
0002E800 <AmiBlitz3.ab3@18221>   TST.w D3
0002E804 <AmiBlitz3.ab3@18222>    BEQ.w 'nopars
0002E808 <AmiBlitz3.ab3@18223>   CMP.w #$28,D1      ;'('
0002E80C <AmiBlitz3.ab3@18224>    BNE.w syntaxerr
0002E810 <AmiBlitz3.ab3@18225>   CMP.w #$29,D0      ;')'
0002E814 <AmiBlitz3.ab3@18226>    BNE.w syntaxerr
0002E818 <AmiBlitz3.ab3@18227>  BRA.w get1bytemain
0002E81C <AmiBlitz3.ab3@18230>   CMP.w #$28,D1       ;'('
0002E820 <AmiBlitz3.ab3@18231>    BNE.w 'skip
0002E824 <AmiBlitz3.ab3@18232>    BSR.w get1bytemain
0002E828 <AmiBlitz3.ab3@18233>   CMP.w #$29,D0       ;')'
0002E82C <AmiBlitz3.ab3@18234>    BNE.w syntaxerr
0002E830 <AmiBlitz3.ab3@18235>  BRA.w get1bytemain
0002E832 <AmiBlitz3.ab3@18238> RTS
0002E834 <AmiBlitz3.ab3@18242>   TST.w D1
0002E838 <AmiBlitz3.ab3@18243>    BNE.w writelong
0002E83A <AmiBlitz3.ab3@18244> RTS
0002E83E <AmiBlitz3.ab3@18249>   MOVE.w #$48E7,D4
0002E840 <AmiBlitz3.ab3@18250>   SWAP D4
0002E842 <AmiBlitz3.ab3@18251>   CLR.w D4
0002E846 <AmiBlitz3.ab3@18252>   MOVE.w #$4CDF,D5
0002E848 <AmiBlitz3.ab3@18253>   SWAP D5
0002E84A <AmiBlitz3.ab3@18254>   CLR.w D5
0002E850 <AmiBlitz3.ab3@18255>   MOVE.w regnum,D1
0002E854 <AmiBlitz3.ab3@18256>    BEQ.w 'skip
0002E858 <AmiBlitz3.ab3@18257>   BSET #$F,D4
0002E85C <AmiBlitz3.ab3@18258>   BSET #$0,D5
0002E860 <AmiBlitz3.ab3@18259>   CMP.w #$2,D1
0002E864 <AmiBlitz3.ab3@18260>    BCS.w 'skip2
0002E868 <AmiBlitz3.ab3@18263>   BSET #$E,D4
0002E86C <AmiBlitz3.ab3@18264>   BSET #$1,D5
0002E86E <AmiBlitz3.ab3@18267>  RTS
0002E874 <AmiBlitz3.ab3@18270>   TST.w fuckpos
0002E878 <AmiBlitz3.ab3@18271>   BNE.w 'skip3
0002E87A <AmiBlitz3.ab3@18272> RTS
0002E87C <AmiBlitz3.ab3@18275> fuckpos:  Ds.w 1
0002E882 <AmiBlitz3.ab3@18279>   MOVE.w sbasegot,D1
0002E886 <AmiBlitz3.ab3@18280>    BEQ.w 'skip
0002E88A <AmiBlitz3.ab3@18284>   MOVE.w sbgot(PC),D1
0002E88E <AmiBlitz3.ab3@18285>    BNE.w 'skip2
0002E896 <AmiBlitz3.ab3@18289>   MOVE.w #$0002,sbgot
0002E89C <AmiBlitz3.ab3@18290>   MOVE.w movea3a7,D1
0002E8A0 <AmiBlitz3.ab3@18291>  BRA.w writeword
0002E8A2 <AmiBlitz3.ab3@18294>  RTS
0002E8AA <AmiBlitz3.ab3@18299>   MOVE.w #$0001,sbgot                                      ;voodoo magic! - Will it work?
0002E8B0 <AmiBlitz3.ab3@18301>   MOVE.l #$C601,D1                  ; was #workstart,
0002E8B8 <AmiBlitz3.ab3@18302>   MOVE.w #-1,sbasegot               
0002E8BE <AmiBlitz3.ab3@18304>   MOVE.l d1,lastinstruction
0002E8C2 <AmiBlitz3.ab3@18306>   BSR.w Atokejsr
0002E8C4 <AmiBlitz3.ab3@18307> RTS
0002E8CE <AmiBlitz3.ab3@18312>   MOVE.l data1,litdata1
0002E8D4 <AmiBlitz3.ab3@18314>   TST.b fast
0002E8D8 <AmiBlitz3.ab3@18315>   BEQ 'l50                                                 ;optistring  seem impossible to get work
0002E8DC <AmiBlitz3.ab3@18319>  BRA 'l50                                                  ;to deactivate
0002E8E2 <AmiBlitz3.ab3@18325>   TST.b optistring
0002E8E6 <AmiBlitz3.ab3@18326>   BNE.s 'l21
0002E8EC <AmiBlitz3.ab3@18327>   CLR.b string1
0002E8F4 <AmiBlitz3.ab3@18328>   MOVE.b #1,optistring
0002E8FA <AmiBlitz3.ab3@18329>   TST.b nostringopt
0002E8FE <AmiBlitz3.ab3@18330>   BNE 'l21
0002E900 <AmiBlitz3.ab3@18331>   MOVE.l a5,a4
0002E902 <AmiBlitz3.ab3@18332>   SUBQ.l #1,a4
0002E904 <AmiBlitz3.ab3@18335>     TST.b (a4)
0002E908 <AmiBlitz3.ab3@18336>     BMI 'l19a
0002E90C <AmiBlitz3.ab3@18337>     BEQ.s 'l20
0002E910 <AmiBlitz3.ab3@18338>     CMP.b #$22,(a4)
0002E914 <AmiBlitz3.ab3@18339>     BEQ.s 'l19
0002E91A <AmiBlitz3.ab3@18342>     TST.w string1
0002E91E <AmiBlitz3.ab3@18343>     BNE 'l11
0002E922 <AmiBlitz3.ab3@18344>     CMP.b #":",(a4)
0002E926 <AmiBlitz3.ab3@18345>     BEQ.s 'l20
0002E92A <AmiBlitz3.ab3@18346>     CMP.b #";",(a4)
0002E92E <AmiBlitz3.ab3@18347>     BEQ.s 'l20
0002E932 <AmiBlitz3.ab3@18348>     CMP.b #"+",(a4)
0002E936 <AmiBlitz3.ab3@18349>     BEQ.s 'l21
0002E93A <AmiBlitz3.ab3@18350>     CMP.b #",",(a4)
0002E93E <AmiBlitz3.ab3@18351>     BEQ.s 'l20                                             ;was l21
0002E942 <AmiBlitz3.ab3@18352>     CMP.b #")",(a4)
0002E946 <AmiBlitz3.ab3@18353>     BEQ.s 'l20                                             ;was l21
0002E948 <AmiBlitz3.ab3@18356>     ADDQ.l #1,a4
0002E94C <AmiBlitz3.ab3@18357>  BRA.s 'l10
0002E954 <AmiBlitz3.ab3@18360>   BCHG #0,string1
0002E958 <AmiBlitz3.ab3@18361>  BRA 'l18
0002E95A <AmiBlitz3.ab3@18364>   ADDQ.l #1,a4
0002E95C <AmiBlitz3.ab3@18365>   TST.b (a4)
0002E960 <AmiBlitz3.ab3@18366>   BEQ 'l21
0002E964 <AmiBlitz3.ab3@18367>  BRA 'l11
0002E966 <AmiBlitz3.ab3@18370>   MOVE.l a5,a4
0002E968 <AmiBlitz3.ab3@18371>   SUBQ.l #1,a4
0002E96C <AmiBlitz3.ab3@18374>   CMP.b #$20,-(a4)
0002E970 <AmiBlitz3.ab3@18375>   BEQ 'll1
0002E974 <AmiBlitz3.ab3@18376>   CMP.b #"+",(a4)
0002E978 <AmiBlitz3.ab3@18377>   BEQ 'l21
0002E980 <AmiBlitz3.ab3@18392>   MOVE.b #2,optistring
0002E988 <AmiBlitz3.ab3@18395>   CMP.b #2,optistring
0002E98C <AmiBlitz3.ab3@18396>   BEQ.s 'l100
0002E990 <AmiBlitz3.ab3@18399>   BSR.w makesbase
0002E994 <AmiBlitz3.ab3@18401>   BSR.w pokedata1                                          ;writestringsizespace
0002E998 <AmiBlitz3.ab3@18402>   BSR.w pokedata1
0002E99A <AmiBlitz3.ab3@18405>   MOVEQ.l #$00,D2
0002E9A0 <AmiBlitz3.ab3@18409>     MOVE.l a5,lastsourcepos
0002E9A2 <AmiBlitz3.ab3@18410>     MOVEQ #0,d0
0002E9A4 <AmiBlitz3.ab3@18411>     MOVE.b (a5)+,d0
0002E9A6 <AmiBlitz3.ab3@18413>     TST.w D0
0002E9AA <AmiBlitz3.ab3@18414>      BEQ.w notqerr
0002E9AE <AmiBlitz3.ab3@18415>     CMP.w #$22,D0     ; '"'                                     ; --- " ---
0002E9B2 <AmiBlitz3.ab3@18416>      BEQ.w 'done
0002E9B6 <AmiBlitz3.ab3@18418>     CMP.b #"\",d0
0002E9BA <AmiBlitz3.ab3@18419>      BNE 'l1
0002E9BE <AmiBlitz3.ab3@18420>     CMP.b #"\",(a5)
0002E9C2 <AmiBlitz3.ab3@18421>      BNE 'l1
0002E9C8 <AmiBlitz3.ab3@18422>     TST.b newsyntax
0002E9CC <AmiBlitz3.ab3@18423>      BEQ 'l1
0002E9D2 <AmiBlitz3.ab3@18424>     CMP.w #"\\",1(a5)                                      ; new compiler constants
0002E9D6 <AmiBlitz3.ab3@18425>     BNE 'l2
0002E9D8 <AmiBlitz3.ab3@18426>     ADDQ #2,a5
0002E9DA <AmiBlitz3.ab3@18429>     ADDQ.w #1,D2
0002E9DC <AmiBlitz3.ab3@18430>     MOVE.w D0,D1
0002E9E0 <AmiBlitz3.ab3@18431>     BSR.w pokedata1b                                        ;writestring
0002E9E4 <AmiBlitz3.ab3@18432>  BRA.w 'writestring
0002E9EA <AmiBlitz3.ab3@18435>     JSR check_newconstants
0002E9EE <AmiBlitz3.ab3@18436>  BRA 'writestring
0002E9F4 <AmiBlitz3.ab3@18441>   NOT instringon
0002E9FA <AmiBlitz3.ab3@18443>   MOVE.w dontwrite_nomemleft,D1
0002E9FE <AmiBlitz3.ab3@18444>   BNE.w 'skip
0002EA06 <AmiBlitz3.ab3@18446>   CMP.b #2,optistring
0002EA0A <AmiBlitz3.ab3@18447>   BEQ 'skip
0002EA10 <AmiBlitz3.ab3@18449>     MOVEA.l litdata1,A0
0002EA12 <AmiBlitz3.ab3@18450>     CLR.w (A0)+                                            ;writesize
0002EA14 <AmiBlitz3.ab3@18451>     MOVE.w D2,(A0)
0002EA18 <AmiBlitz3.ab3@18454>   BSR.w makelit                                          ;writestringconstantcode
0002EA1E <AmiBlitz3.ab3@18455>   ADDQ.l #1,data1
0002EA26 <AmiBlitz3.ab3@18456>   BCLR #$0,data1+3
0002EA28 <AmiBlitz3.ab3@18457>   MOVEQ.l #$07,D2
0002EA2C <AmiBlitz3.ab3@18458> BRA.w get1bytemain
0002EA30 <AmiBlitz3.ab3@18463>   BSR.w makename2
0002EA34 <AmiBlitz3.ab3@18465>   BSR.w findlabel2
0002EA38 <AmiBlitz3.ab3@18466>   BEQ.w 'found
0002EA3C <AmiBlitz3.ab3@18468>   BSR.w addlabelhash
0002EA40 <AmiBlitz3.ab3@18469>   CLR.l $4(A2)           ;no refs
0002EA44 <AmiBlitz3.ab3@18470>   CLR.l $8(A2)           ;not created yet (no PC)
0002EA4C <AmiBlitz3.ab3@18472>   MOVE.w linenumat+2,$10(A2)  ; was linenumat,    ;context
0002EA52 <AmiBlitz3.ab3@18474>   MOVE.w linenumat,d0
0002EA54 <AmiBlitz3.ab3@18475>   MOVEQ #0,d1
0002EA58 <AmiBlitz3.ab3@18476>   MOVE.b -1(a2,d7),d1
0002EA5C <AmiBlitz3.ab3@18477>   MOVE.w d0,0(a2,d1)
0002EA60 <AmiBlitz3.ab3@18479>  BRA.w 'makeit
0002EA64 <AmiBlitz3.ab3@18482>   TST.l $8(A2)
0002EA68 <AmiBlitz3.ab3@18483>   BNE.w 'gotit    ;already made
0002EA6E <AmiBlitz3.ab3@18489>   MOVEA.l _execbase,A6
0002EA70 <AmiBlitz3.ab3@18490>   MOVEQ.l #$0C+2,D0      ; was 12
0002EA72 <AmiBlitz3.ab3@18491>   MOVEQ.l #$01,D1
0002EA78 <AmiBlitz3.ab3@18493>   MOVE.l mempool,a0
0002EA7C <AmiBlitz3.ab3@18494>   JSR _AllocPooled(a6)
0002EA7E <AmiBlitz3.ab3@18497>   MOVEA.l D0,A0
0002EA82 <AmiBlitz3.ab3@18498>   MOVE.l $4(A2),(A0)
0002EA86 <AmiBlitz3.ab3@18499>   MOVE.l A0,$4(A2)
0002EA8E <AmiBlitz3.ab3@18500>   MOVE.l destpointer,$4(A0)
0002EA92 <AmiBlitz3.ab3@18501>   ADDQ.l #2,$4(A0)
0002EA9A <AmiBlitz3.ab3@18502>   MOVE.w procnum,$8(A0)
0002EAA2 <AmiBlitz3.ab3@18503>   MOVE.w linenumat+2,$A(A0)   ; was linenumat,
0002EAAA <AmiBlitz3.ab3@18505>   MOVE.w linenumat,$c(a0)
0002EAAC <AmiBlitz3.ab3@18507>  RTS
0002EAB0 <AmiBlitz3.ab3@18510>   MOVE.l $4(A2),D1
0002EAB4 <AmiBlitz3.ab3@18511>   BTST #$0,D1
0002EAB8 <AmiBlitz3.ab3@18512>    BNE.w illlaberr
0002EABE <AmiBlitz3.ab3@18513>   MOVE.w procnum,D1
0002EAC2 <AmiBlitz3.ab3@18514>   CMP.w $10(A2),D1
0002EAC6 <AmiBlitz3.ab3@18515>    BNE.w referr
0002EAC8 <AmiBlitz3.ab3@18518> RTS
0002EACA <AmiBlitz3.ab3@18524>   MOVE.w D0,-(A7)
0002EAD2 <AmiBlitz3.ab3@18526>   CMP.b #2,optistring
0002EAD6 <AmiBlitz3.ab3@18527>   BEQ 'l10
0002EADC <AmiBlitz3.ab3@18531>   MOVE.w numtoa0,D1
0002EAE0 <AmiBlitz3.ab3@18532>    BSR.w writeword
0002EAE4 <AmiBlitz3.ab3@18533>    BSR.w addoff
0002EAEA <AmiBlitz3.ab3@18534>   MOVE.l litdata1,D1
0002EAEE <AmiBlitz3.ab3@18535>    BSR.w writelong
0002EAF4 <AmiBlitz3.ab3@18536>   MOVE.w pushlen,D1
0002EAF8 <AmiBlitz3.ab3@18537>    BSR.w writeword
0002EAFC <AmiBlitz3.ab3@18538>   MOVE.w #$C600,D1        ; was #copstring
0002EB00 <AmiBlitz3.ab3@18539>    BSR.w Atokejsr
0002EB02 <AmiBlitz3.ab3@18540>   MOVE.w (A7)+,D0
0002EB04 <AmiBlitz3.ab3@18541>  RTS
0002EB06 <AmiBlitz3.ab3@18545>   MOVEQ #0,d1
0002EB0A <AmiBlitz3.ab3@18546>   BSR.w pokedata1b
0002EB10 <AmiBlitz3.ab3@18547>   MOVE.l destpointer,a4
0002EB14 <AmiBlitz3.ab3@18548>   MOVE.w #$203c,d1
0002EB1A <AmiBlitz3.ab3@18549>   TST.w mode
0002EB1E <AmiBlitz3.ab3@18550>   BNE 'lm10
0002EB24 <AmiBlitz3.ab3@18551>    ADDQ.w #4,a2offset
0002EB28 <AmiBlitz3.ab3@18552>   MOVE.w #$2f3c,d1
0002EB2E <AmiBlitz3.ab3@18555>   TST.w mode
0002EB32 <AmiBlitz3.ab3@18556>   BEQ 'lm3
0002EB38 <AmiBlitz3.ab3@18557>   MOVE.w regnum,D0
0002EB3A <AmiBlitz3.ab3@18558>   LSL.w #8,D0
0002EB3C <AmiBlitz3.ab3@18559>   LSL.w #1,D0
0002EB3E <AmiBlitz3.ab3@18560>   OR.w d0,d1
0002EB42 <AmiBlitz3.ab3@18561>   BSR writeword
0002EB46 <AmiBlitz3.ab3@18562>   BSR.w addoff
0002EB4C <AmiBlitz3.ab3@18563>   MOVE.l litdata1,D1
0002EB50 <AmiBlitz3.ab3@18564>   BSR.w writelong
0002EB58 <AmiBlitz3.ab3@18565>   CMP.w #3,mode
0002EB5C <AmiBlitz3.ab3@18566>   BEQ 'l30
0002EB62 <AmiBlitz3.ab3@18567>    ADDQ.w #4,a2offset
0002EB66 <AmiBlitz3.ab3@18568>   MOVE.w #$4878,D1
0002EB6A <AmiBlitz3.ab3@18569>   BSR.w writeword
0002EB6C <AmiBlitz3.ab3@18570>   MOVE.l d2,d1
0002EB70 <AmiBlitz3.ab3@18571>   BSR writeword
0002EB72 <AmiBlitz3.ab3@18574>   MOVE.w (A7)+,D0
0002EB74 <AmiBlitz3.ab3@18575>  RTS
0002EB7A <AmiBlitz3.ab3@18578>   MOVE.l #$3f3c0007,d1
0002EB7E <AmiBlitz3.ab3@18579>   BSR writelong
0002EB84 <AmiBlitz3.ab3@18580>   MOVE.w regnum,D1
0002EB86 <AmiBlitz3.ab3@18581>   LSL.w #8,D1
0002EB88 <AmiBlitz3.ab3@18582>   LSL.w #1,D1
0002EB8C <AmiBlitz3.ab3@18583>   ORI.w #$2f3c,d1
0002EB90 <AmiBlitz3.ab3@18584>   BSR writeword
0002EB96 <AmiBlitz3.ab3@18585>    ADDQ.w #4,a2offset
0002EB98 <AmiBlitz3.ab3@18586>   MOVE.l d2,d1
0002EB9C <AmiBlitz3.ab3@18587>   BSR writelong
0002EBA0 <AmiBlitz3.ab3@18588>   MOVE.w #$2f3c,d1
0002EBA4 <AmiBlitz3.ab3@18589>   BSR writeword
0002EBA8 <AmiBlitz3.ab3@18590>   BSR.w addoff
0002EBAE <AmiBlitz3.ab3@18591>   MOVE.l litdata1,D1
0002EBB2 <AmiBlitz3.ab3@18592>   BSR.w writelong
0002EBB4 <AmiBlitz3.ab3@18593>   MOVE.w (A7)+,D0
0002EBB6 <AmiBlitz3.ab3@18594> RTS
0002EBBA <AmiBlitz3.ab3@18599>   BSR.w get1bytemain
0002EBBE <AmiBlitz3.ab3@18600>    BSR.w makealab2
0002EBC4 <AmiBlitz3.ab3@18602>   MOVE.w regnum,D1
0002EBC6 <AmiBlitz3.ab3@18603>   LSL.w #8,D1
0002EBC8 <AmiBlitz3.ab3@18604>   LSL.w #1,D1
0002EBCC <AmiBlitz3.ab3@18605>   ORI.w #$203C,D1
0002EBD0 <AmiBlitz3.ab3@18606>    BSR.w writeword        ;create move.l #loc,dn
0002EBD4 <AmiBlitz3.ab3@18607>    BSR.w addoff
0002EBD8 <AmiBlitz3.ab3@18608>   MOVE.l $8(A2),D1
0002EBDC <AmiBlitz3.ab3@18609>    BSR.w writelong
0002EBDE <AmiBlitz3.ab3@18610>   MOVEQ.l #$03,D2
0002EBE4 <AmiBlitz3.ab3@18612>   CLR.b peekaddrsize
0002EBE8 <AmiBlitz3.ab3@18614> BRA.w reget
0002EBEA <AmiBlitz3.ab3@18618>   MOVEQ.l #$00,D3
0002EBEE <AmiBlitz3.ab3@18621>   BSR.w get1bytemain
0002EBF2 <AmiBlitz3.ab3@18622>    BEQ.w syntaxerr
0002EBF6 <AmiBlitz3.ab3@18623>   CMP.w #$22,D0         ;'"'
0002EBFA <AmiBlitz3.ab3@18624>    BEQ.w 'done
0002EBFC <AmiBlitz3.ab3@18625>   LSL.l #8,D3
0002EBFE <AmiBlitz3.ab3@18626>   MOVE.b D0,D3
0002EC02 <AmiBlitz3.ab3@18627>  BRA.w 'loop
0002EC06 <AmiBlitz3.ab3@18630>   BSR.w get1bytemain
0002EC0A <AmiBlitz3.ab3@18631> BRA.w fetchnum2
0002EC0C <AmiBlitz3.ab3@18635>   MOVE.w D2,-(A7)                                          ;basicvarsforasm
0002EC10 <AmiBlitz3.ab3@18636>    BSR.w makename2              ;get the things name
0002EC14 <AmiBlitz3.ab3@18637>    BSR.w findlabel2
0002EC18 <AmiBlitz3.ab3@18639>    BEQ.w 'l10
0002EC1E <AmiBlitz3.ab3@18640>    LEA ptr_parameterstore,a0
0002EC24 <AmiBlitz3.ab3@18641>    CMP.b #"@",-1(a0,d2.w)
0002EC28 <AmiBlitz3.ab3@18643>    BNE cnferr
0002EC2C <AmiBlitz3.ab3@18645>    CLR.b -1(a0,d2.w)
0002EC2E <AmiBlitz3.ab3@18646>    SUBQ.l #1,d2
0002EC34 <AmiBlitz3.ab3@18647>    LEA varbase,a2
0002EC38 <AmiBlitz3.ab3@18648>    BSR findvariable
0002EC3C <AmiBlitz3.ab3@18649>    BNE cnferr
0002EC40 <AmiBlitz3.ab3@18650>    CMP.b #"\",d0
0002EC44 <AmiBlitz3.ab3@18651>    BNE 'l6
0002EC4A <AmiBlitz3.ab3@18652>    ADDQ #1,lastsourcepos
0002EC4E <AmiBlitz3.ab3@18653>    MOVE.l $a(a2),a2
0002EC50 <AmiBlitz3.ab3@18654>    ADDQ.l #4,a2
0002EC54 <AmiBlitz3.ab3@18655>    BSR.w makename2
0002EC58 <AmiBlitz3.ab3@18656>    BSR findvariable2
0002EC5C <AmiBlitz3.ab3@18657>    BNE cnferr
0002EC60 <AmiBlitz3.ab3@18658>  BRA.s 'l6                                                  ;???
0002EC64 <AmiBlitz3.ab3@18661>    MOVE.w $4(a2),d3
0002EC66 <AmiBlitz3.ab3@18662>    EXT.l d3
0002EC6A <AmiBlitz3.ab3@18663>  BRA 'npc
0002EC6E <AmiBlitz3.ab3@18667>   MOVE.l $8(A2),D3          ;val.
0002EC76 <AmiBlitz3.ab3@18668>   CMPI.l #$1,$4(A2)
0002EC7A <AmiBlitz3.ab3@18669>    BEQ.w 'npc
0002EC80 <AmiBlitz3.ab3@18670>   NOT.w asmtype
0002EC82 <AmiBlitz3.ab3@18673>   MOVE.w (A7)+,D2
0002EC86 <AmiBlitz3.ab3@18674> BRA.w fetchnum2
0002EC88 <AmiBlitz3.ab3@18678>   MOVE.w D2,-(A7)           ;remember old type
0002EC8C <AmiBlitz3.ab3@18679>    BSR.w getparameter
0002EC90 <AmiBlitz3.ab3@18680>   CMP.w #"{",D0                                          ;test if var = function{}
0002EC94 <AmiBlitz3.ab3@18681>    BEQ.w isfunction
0002EC98 <AmiBlitz3.ab3@18682>    BSR.w fetchvars
0002EC9C <AmiBlitz3.ab3@18684>    BSR.w calcvar                                         ;getvaroffset+type
0002ECA0 <AmiBlitz3.ab3@18685>    BSR.w variable2
0002ECA6 <AmiBlitz3.ab3@18687>    MOVE.l a2,rightsidetype
0002ECB0 <AmiBlitz3.ab3@18688>    MOVE.w flagmask, rightsideflagmask
0002ECB6 <AmiBlitz3.ab3@18700>    TST.b typecheck
0002ECBA <AmiBlitz3.ab3@18701>    BEQ varcont
0002ECC4 <AmiBlitz3.ab3@18702>    CMP.l #$da01,lasttoken                                  ;poke
0002ECC8 <AmiBlitz3.ab3@18703>    BEQ 'l1
0002ECD2 <AmiBlitz3.ab3@18704>    CMP.l #$da02,lasttoken                                  ;peek
0002ECD6 <AmiBlitz3.ab3@18705>    BNE 'l2
0002ECDE <AmiBlitz3.ab3@18708>    CMP.w #1,parnum                                         ; is not call when & is used in parameter
0002ECE2 <AmiBlitz3.ab3@18709>    BNE varcont
0002ECE8 <AmiBlitz3.ab3@18710>    MOVE.b d2,peekaddrsize
0002ECEC <AmiBlitz3.ab3@18711>    BRA varcont
0002ECF2 <AmiBlitz3.ab3@18714>   CLR.b peekaddrsize
0002ECF6 <AmiBlitz3.ab3@18718>   CMP.w #$1,D2
0002ECFA <AmiBlitz3.ab3@18719>    BNE.w 'notabyte
0002ED00 <AmiBlitz3.ab3@18723>   MOVE.w regnum,D1
0002ED04 <AmiBlitz3.ab3@18724>   ORI.w #$4880,D1      ;ext.w Dn
0002ED08 <AmiBlitz3.ab3@18725>    BSR.w writeword
0002ED0A <AmiBlitz3.ab3@18728>   MOVE.w (A7)+,D3      ;old type
0002ED0E <AmiBlitz3.ab3@18729>    BEQ.w 'done         ;type not set yet...
0002ED14 <AmiBlitz3.ab3@18732>    MOVE.l lastinstructionaddr,a0
0002ED18 <AmiBlitz3.ab3@18734>   CMP.w #$3,D3
0002ED1C <AmiBlitz3.ab3@18735>    BNE.w 'nob
0002ED20 <AmiBlitz3.ab3@18736>   CMP.w #$4,D2
0002ED24 <AmiBlitz3.ab3@18737>    BEQ.w 'conv2
0002ED26 <AmiBlitz3.ab3@18740>   CMP.w D2,D3
0002ED2A <AmiBlitz3.ab3@18741>    BLS.w 'done
0002ED2C <AmiBlitz3.ab3@18744>   EXG.l D2,D3
0002ED2E <AmiBlitz3.ab3@18746>   MOVE.l a0,-(a7)
0002ED34 <AmiBlitz3.ab3@18747>   TST.b typecheck
0002ED38 <AmiBlitz3.ab3@18748>   BEQ 'ok
0002ED3E <AmiBlitz3.ab3@18749>   TST.b notypecheck
0002ED42 <AmiBlitz3.ab3@18750>   BNE 'ok
0002ED48 <AmiBlitz3.ab3@18751>   MOVE.l leftsidetype,a0
0002ED52 <AmiBlitz3.ab3@18752>   CMP.l #0,leftsidetype
0002ED56 <AmiBlitz3.ab3@18753>   BEQ 'ok
0002ED5E <AmiBlitz3.ab3@18754>   CMP.w #1,leftsideflagmask
0002ED62 <AmiBlitz3.ab3@18755>   BEQ 'isptr
0002ED6A <AmiBlitz3.ab3@18756>   CMP.l #$100,4(a0)
0002ED6E <AmiBlitz3.ab3@18757>   BLE 'ok
0002ED72 <AmiBlitz3.ab3@18760>   CMP.b #3,d3
0002ED76 <AmiBlitz3.ab3@18761>   BEQ 'ok
0002ED7A <AmiBlitz3.ab3@18762>   CMP.b #7,d3
0002ED7E <AmiBlitz3.ab3@18763>   BEQ 'ok
0002ED84 <AmiBlitz3.ab3@18764>   JMP   error_convert_types      ;for all syntax only long and string allowed to assign to a type
0002ED86 <AmiBlitz3.ab3@18767>   MOVE.l (a7)+,a0
0002ED8A <AmiBlitz3.ab3@18769>   BSR.w writeconvertcode         ;called from var assign      ;bump up new type to old...
0002ED8E <AmiBlitz3.ab3@18772> BRA.w reget
0002ED90 <AmiBlitz3.ab3@18776>   MOVEQ.l #$00,D3
0002ED96 <AmiBlitz3.ab3@18777>   MOVE.w regnum,D1
0002ED9A <AmiBlitz3.ab3@18778>    BEQ.w savem_skip
0002ED9C <AmiBlitz3.ab3@18779>   SUBQ.w #1,D1
0002ED9E <AmiBlitz3.ab3@18782>      LSR.l #1,D3
0002EDA2 <AmiBlitz3.ab3@18783>      BSET #$F,D3
0002EDA6 <AmiBlitz3.ab3@18784>   DBF D1,'loop
0002EDAC <AmiBlitz3.ab3@18786>    TST.b fpu
0002EDB0 <AmiBlitz3.ab3@18787>    BEQ 'l1
0002EDB6 <AmiBlitz3.ab3@18788>    ADDQ.l #2,stacktrack                                    ;intern command
0002EDB8 <AmiBlitz3.ab3@18789>     MOVE.l a0,-(a7)
0002EDBE <AmiBlitz3.ab3@18790>     MOVE.l stacktrack,d1
0002EDC4 <AmiBlitz3.ab3@18791>     LEA fpustackbase,a0
0002EDC8 <AmiBlitz3.ab3@18792>     CLR.w 0(a0,d1)
0002EDCE <AmiBlitz3.ab3@18793>     CLR.w regmask
0002EDD0 <AmiBlitz3.ab3@18794>     MOVE.l (a7)+,a0
0002EDD4 <AmiBlitz3.ab3@18798>   MOVE.w #$48E7,D1
0002EDD8 <AmiBlitz3.ab3@18799>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002EDDA <AmiBlitz3.ab3@18800>   MOVE.w D3,D1
0002EDDE <AmiBlitz3.ab3@18801> BRA.w writeword
0002EDE0 <AmiBlitz3.ab3@18806>   MOVEQ.l #$00,D3
0002EDE6 <AmiBlitz3.ab3@18807>   MOVE.w regnum,D1
0002EDEA <AmiBlitz3.ab3@18808>    BEQ.w savem_skip
0002EDEC <AmiBlitz3.ab3@18809>   SUBQ.w #1,D1
0002EDEE <AmiBlitz3.ab3@18812>     LSR.l #1,D3
0002EDF2 <AmiBlitz3.ab3@18813>     BSET #$F,D3
0002EDF6 <AmiBlitz3.ab3@18814>   DBF D1,'loop
0002EDFC <AmiBlitz3.ab3@18816>    TST.b fpu
0002EE00 <AmiBlitz3.ab3@18817>    BEQ 'l1
0002EE06 <AmiBlitz3.ab3@18818>    ADDQ.l #2,stacktrack                                    ;intern command
0002EE08 <AmiBlitz3.ab3@18819>     MOVE.l a0,-(a7)
0002EE0E <AmiBlitz3.ab3@18820>     MOVE.l stacktrack,d1
0002EE14 <AmiBlitz3.ab3@18821>     LEA fpustackbase,a0
0002EE18 <AmiBlitz3.ab3@18822>     CLR.w 0(a0,d1)
0002EE1C <AmiBlitz3.ab3@18823>    CMP.b #5,(a3)                                           ;result float ?
0002EE20 <AmiBlitz3.ab3@18824>     BNE 'nofpu
0002EE2A <AmiBlitz3.ab3@18826>     MOVE.w regnum,regnumfunc
0002EE30 <AmiBlitz3.ab3@18829>   CLR.w regmask
0002EE32 <AmiBlitz3.ab3@18830>     MOVE.l (a7)+,a0
0002EE36 <AmiBlitz3.ab3@18834>   MOVE.w #$48E7,D1
0002EE3A <AmiBlitz3.ab3@18835>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002EE3C <AmiBlitz3.ab3@18836>   MOVE.w D3,D1
0002EE40 <AmiBlitz3.ab3@18837>  BRA.w writeword
0002EE42 <AmiBlitz3.ab3@18840> RTS
0002EE44 <AmiBlitz3.ab3@18844>   MOVE.l D1,-(A7)
0002EE48 <AmiBlitz3.ab3@18845>   MOVE.w #$4EB9,D1
0002EE4C <AmiBlitz3.ab3@18846>    BSR.w writeword
0002EE50 <AmiBlitz3.ab3@18847>    BSR.w addoff
0002EE52 <AmiBlitz3.ab3@18848>   MOVE.l (A7)+,D1
0002EE56 <AmiBlitz3.ab3@18849> BRA.w writelong
0002EE5A <AmiBlitz3.ab3@18856>    BSR.w findproc                                          ;write function call
0002EE5E <AmiBlitz3.ab3@18858>    BEQ 'l1a
0002EE64 <AmiBlitz3.ab3@18859>    TST.l unusedfunc
0002EE68 <AmiBlitz3.ab3@18861>    BEQ noprocerr
0002EE6E <AmiBlitz3.ab3@18864>    JSR gotoendsource
0002EE76 <AmiBlitz3.ab3@18867>   MOVE.l funcstruct_returntype(a2),rightsidetype
0002EE7C <AmiBlitz3.ab3@18868>   TST.l typetocast
0002EE80 <AmiBlitz3.ab3@18869>   BEQ 'nocast
0002EE8A <AmiBlitz3.ab3@18870>   MOVE.l typetocast,rightsidetype
0002EE90 <AmiBlitz3.ab3@18871>   CLR.l typetocast
0002EE92 <AmiBlitz3.ab3@18872>   MOVE.l a1,-(a7)
0002EE98 <AmiBlitz3.ab3@18873>   MOVE.l rightsidetype,a1
0002EE9E <AmiBlitz3.ab3@18874>   CMP.l leftsidetype,a1
0002EEA2 <AmiBlitz3.ab3@18875>   BEQ 'ok
0002EEA8 <AmiBlitz3.ab3@18876>   JMP errorconvertreturntype2
0002EEAA <AmiBlitz3.ab3@18879>   MOVE.l (a7)+,a1
0002EEAC <AmiBlitz3.ab3@18883>   MOVEQ.l #$00,D1
0002EEB0 <AmiBlitz3.ab3@18884>   MOVE.b $5(A2),D1
0002EEB6 <AmiBlitz3.ab3@18886>   MOVE.b d1,retmode
0002EEBA <AmiBlitz3.ab3@18888>    BMI.w illprocerr
0002EEC0 <AmiBlitz3.ab3@18890>    MOVE.b #1,isfunc(a2)
0002EEC2 <AmiBlitz3.ab3@18892>   MOVE.w D1,-(A7)
0002EEC4 <AmiBlitz3.ab3@18893>   MOVEQ.l #$00,D1
0002EEC8 <AmiBlitz3.ab3@18894>   MOVE.b $4(A2),D1
0002EECA <AmiBlitz3.ab3@18895>   LSR.w #4,D1
0002EECE <AmiBlitz3.ab3@18896>    BEQ.w 'skip
0002EED0 <AmiBlitz3.ab3@18897>   LSL.w #2,D1
0002EED6 <AmiBlitz3.ab3@18898>   SUB.w D1,a2offset
0002EEDA <AmiBlitz3.ab3@18901>   CMPI.w #$7,(A7)       ;function type!
0002EEDE <AmiBlitz3.ab3@18902>    BNE.b 'sss
0002EEE0 <AmiBlitz3.ab3@18903>   MOVE.l A2,-(A7)
0002EEE4 <AmiBlitz3.ab3@18904>    BSR.w makesbase
0002EEE6 <AmiBlitz3.ab3@18905>   MOVEA.l (A7)+,A2
0002EEEC <AmiBlitz3.ab3@18908>   MOVE.w sbasegot,-(A7)
0002EEF0 <AmiBlitz3.ab3@18909>    BEQ.b 'sssz
0002EEF4 <AmiBlitz3.ab3@18910>    BSR.w dopusha3
0002EEF8 <AmiBlitz3.ab3@18913>   BSR.w savemfunc
0002EEFA <AmiBlitz3.ab3@18914>   MOVE.w D3,-(A7)             ;the movem regs
0002EEFE <AmiBlitz3.ab3@18916>   MOVE.l $E(A2),D1            ;pc of function call
0002EF02 <AmiBlitz3.ab3@18918>   TST.b $20(a2)                                            ;increase if morepar
0002EF06 <AmiBlitz3.ab3@18919>   BNE 'no0par
0002EF08 <AmiBlitz3.ab3@18920>   MOVE.l a5,a4
0002EF0C <AmiBlitz3.ab3@18923>   CMP.b #$20,(a4)+
0002EF10 <AmiBlitz3.ab3@18924>   BEQ 'l1
0002EF16 <AmiBlitz3.ab3@18925>   CMP.b #"}",-1(a4)
0002EF1A <AmiBlitz3.ab3@18926>   BNE  'no0par
0002EF1C <AmiBlitz3.ab3@18927>   MOVEQ #0,d0
0002EF20 <AmiBlitz3.ab3@18930>   LEA $16(A2),A1
0002EF22 <AmiBlitz3.ab3@18933>   MOVE.l d1,-(a7)
0002EF24 <AmiBlitz3.ab3@18934>   MOVE.b (a1),d2
0002EF26 <AmiBlitz3.ab3@18935>   MOVE.l d0,d1
0002EF2A <AmiBlitz3.ab3@18936>   CMP.w #4,d2
0002EF2E <AmiBlitz3.ab3@18937>   BNE 'l1b
0002EF34 <AmiBlitz3.ab3@18938>   ADD.l #$203c,d1
0002EF38 <AmiBlitz3.ab3@18939>   BSR writeword
0002EF3E <AmiBlitz3.ab3@18940>   MOVE.l #$ffff0000,d1
0002EF42 <AmiBlitz3.ab3@18941>   BSR writelong
0002EF46 <AmiBlitz3.ab3@18942>  BRA 'l2b
0002EF4C <AmiBlitz3.ab3@18945>    TST.b fpu
0002EF50 <AmiBlitz3.ab3@18946>    BNE 'l1c
0002EF54 <AmiBlitz3.ab3@18947>    CMP.w #5,d2
0002EF58 <AmiBlitz3.ab3@18948>    BNE 'l1c
0002EF5E <AmiBlitz3.ab3@18949>    ADD.l #$203c,d1
0002EF62 <AmiBlitz3.ab3@18950>    BSR writeword
0002EF68 <AmiBlitz3.ab3@18951>    MOVE.l #$800000c1,d1
0002EF6C <AmiBlitz3.ab3@18952>    BSR writelong
0002EF70 <AmiBlitz3.ab3@18953>  BRA 'l2b
0002EF76 <AmiBlitz3.ab3@18956>   ADD.l #$70ff,d1
0002EF7A <AmiBlitz3.ab3@18957>   BSR writeword
0002EF7E <AmiBlitz3.ab3@18958>   CMP.w #7,d2
0002EF82 <AmiBlitz3.ab3@18959>   BNE 'l1d
0002EF88 <AmiBlitz3.ab3@18960>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002EF8C <AmiBlitz3.ab3@18961>   BSR writelong
0002EF8E <AmiBlitz3.ab3@18962>   MOVEQ #0,d1
0002EF92 <AmiBlitz3.ab3@18963>   BSR writeword
0002EF98 <AmiBlitz3.ab3@18964>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002EF9C <AmiBlitz3.ab3@18965>   BSR writelong
0002EF9E <AmiBlitz3.ab3@18966>   MOVEQ #0,d1
0002EFA2 <AmiBlitz3.ab3@18967>   BSR writeword
0002EFA8 <AmiBlitz3.ab3@18970>   MOVE.l #$f23c5000,d1
0002EFAA <AmiBlitz3.ab3@18971>   MOVE.l d0,d2
0002EFAC <AmiBlitz3.ab3@18972>   ASR.l #2,d2
0002EFAE <AmiBlitz3.ab3@18973>   ADD.l d2,d1
0002EFB2 <AmiBlitz3.ab3@18974>   BSR writelong
0002EFB6 <AmiBlitz3.ab3@18975>   MOVE.w #$ffff,d1
0002EFBA <AmiBlitz3.ab3@18976>   BSR writeword
0002EFBC <AmiBlitz3.ab3@18980>   MOVE.l (a7)+,d1
0002EFBE <AmiBlitz3.ab3@18981>      ADDQ.l #1,a1
0002EFC4 <AmiBlitz3.ab3@18982>      ADD.l #$0200,d0
0002EFCA <AmiBlitz3.ab3@18983>      CMP.l #$0e00,d0
0002EFCE <AmiBlitz3.ab3@18984>      BEQ syntaxerr
0002EFD0 <AmiBlitz3.ab3@18985>      TST.b (a1)
0002EFD4 <AmiBlitz3.ab3@18986>      BNE 'again
0002EFD8 <AmiBlitz3.ab3@18987>  BRA 'p1
0002EFDC <AmiBlitz3.ab3@18991>   TST.b $4(A2)
0002EFE0 <AmiBlitz3.ab3@18992>    BNE.w 'somepars
0002EFE4 <AmiBlitz3.ab3@18997>   BSR.w makefjsr
0002EFE8 <AmiBlitz3.ab3@18998>    BSR.w get1bytemain
0002EFEC <AmiBlitz3.ab3@18999>  BRA.w 'nopars
0002EFF2 <AmiBlitz3.ab3@19004>   MOVE.w parnum,-(a7)                                      ;7.2014 need store so function calls in parameter >6 can work
0002EFF8 <AmiBlitz3.ab3@19006>   MOVE.w regnum,-(A7)         ;old regat
0002F002 <AmiBlitz3.ab3@19008>   MOVE.w regnum,regnumfunc
0002F004 <AmiBlitz3.ab3@19012>   MOVE.l D1,-(A7)                                          ;write functioncall with pars
0002F00C <AmiBlitz3.ab3@19014>   MOVE.b #1,funccall
0002F00E <AmiBlitz3.ab3@19016>   MOVEQ.l #$00,D0
0002F012 <AmiBlitz3.ab3@19017>   MOVE.b $4(A2),D0
0002F01C <AmiBlitz3.ab3@19019>   MOVE.w a2offset,a2offset2
0002F024 <AmiBlitz3.ab3@19020>   MOVE.b 5(a2),retmode
0002F02A <AmiBlitz3.ab3@19021>   MOVE.l a2,currentfunccall
0002F02E <AmiBlitz3.ab3@19023>   LEA $16(A2),A2              ;pointer to var desc
0002F034 <AmiBlitz3.ab3@19024>   CLR.w regnum
0002F03A <AmiBlitz3.ab3@19026>   CLR.w regmask
0002F040 <AmiBlitz3.ab3@19027>   MOVE.b isconstantvalue,-(a7)
0002F046 <AmiBlitz3.ab3@19028>   MOVE.b funcparloop,-(a7)
0002F04E <AmiBlitz3.ab3@19029>   MOVE.b #1,funcparloop
0002F054 <AmiBlitz3.ab3@19030>   MOVE.l rightsidetype,-(a7)
0002F05A <AmiBlitz3.ab3@19031>   MOVE.l leftsidetype,-(a7)                               ;store values To stack so it can work recursive
0002F060 <AmiBlitz3.ab3@19032>   MOVE.b blitzparloop,-(a7)
0002F066 <AmiBlitz3.ab3@19033>   CLR.b blitzparloop
0002F06C <AmiBlitz3.ab3@19035>   JSR fetchpees2
0002F072 <AmiBlitz3.ab3@19038>   MOVE.b (a7)+,blitzparloop
0002F078 <AmiBlitz3.ab3@19039>   MOVE.l (a7)+,leftsidetype
0002F07E <AmiBlitz3.ab3@19040>   MOVE.l (a7)+,rightsidetype
0002F084 <AmiBlitz3.ab3@19041>   MOVE.b (a7)+,funcparloop
0002F08A <AmiBlitz3.ab3@19042>   MOVE.b (a7)+,isconstantvalue
0002F090 <AmiBlitz3.ab3@19044>   JSR chkstak
0002F092 <AmiBlitz3.ab3@19045>   MOVE.l (A7)+,D1
0002F096 <AmiBlitz3.ab3@19062>    BTST #0,d1
0002F09A <AmiBlitz3.ab3@19063>    BNE intern1
0002F09E <AmiBlitz3.ab3@19065>    BSR.w makefjsr
0002F0A4 <AmiBlitz3.ab3@19089>   MOVE.w (A7)+,regnum
0002F0AA <AmiBlitz3.ab3@19091>   MOVE.w (a7)+,parnum                                     ;07.2014
0002F0AE <AmiBlitz3.ab3@19095>   CMP.w #"}",D0
0002F0B2 <AmiBlitz3.ab3@19096>    BNE.w errorbracketmiss2
0002F0B4 <AmiBlitz3.ab3@19099>    MOVEQ #0,d1                                            ; end of function call pars
0002F0BA <AmiBlitz3.ab3@19101>   MOVE.w regnum,D1
0002F0BE <AmiBlitz3.ab3@19102>    BEQ.w 'nopars3
0002F0C4 <AmiBlitz3.ab3@19104>    TST.b fpu
0002F0C8 <AmiBlitz3.ab3@19105>    BEQ 'old
0002F0D0 <AmiBlitz3.ab3@19106>    CMP.b #5,retmode
0002F0D4 <AmiBlitz3.ab3@19107>    BNE 'old
0002F0D6 <AmiBlitz3.ab3@19108>    ASL.l #7,d1
0002F0DC <AmiBlitz3.ab3@19109>    OR.l #$f2000000,d1
0002F0E0 <AmiBlitz3.ab3@19110>    BSR writelong
0002F0E4 <AmiBlitz3.ab3@19111>  BRA 'nopars3
0002F0E6 <AmiBlitz3.ab3@19115>   LSL.w #8,D1
0002F0E8 <AmiBlitz3.ab3@19116>   LSL.w #1,D1
0002F0EC <AmiBlitz3.ab3@19117>   ORI.w #$2000,D1
0002F0F0 <AmiBlitz3.ab3@19118>    BSR.w writeword         ;move.l d0,regat
0002F0F2 <AmiBlitz3.ab3@19121>    MOVE.w (A7)+,D3
0002F0F6 <AmiBlitz3.ab3@19122>    BEQ.w 'nomovem
0002F0FC <AmiBlitz3.ab3@19124>    TST.b fpu
0002F100 <AmiBlitz3.ab3@19125>    BEQ 'old2
0002F102 <AmiBlitz3.ab3@19126>    MOVE.l d0,-(a7)
0002F106 <AmiBlitz3.ab3@19127>    MOVE.w #8,d0
0002F108 <AmiBlitz3.ab3@19128>    MOVE.l a0,-(a7)
0002F10E <AmiBlitz3.ab3@19129>    MOVE.l stacktrack,d1
0002F114 <AmiBlitz3.ab3@19130>    LEA fpustackbase,a0
0002F11C <AmiBlitz3.ab3@19131>    MOVE.w 0(a0,d1),regmask
0002F11E <AmiBlitz3.ab3@19132>    MOVE.l (a7)+,a0
0002F122 <AmiBlitz3.ab3@19135>   BEQ 'ready
0002F128 <AmiBlitz3.ab3@19136>    BTST d0,regmask
0002F12C <AmiBlitz3.ab3@19137>    BEQ 'noa7
0002F12E <AmiBlitz3.ab3@19138>    MOVEQ #0,d1
0002F130 <AmiBlitz3.ab3@19139>    MOVE.w d0,d1
0002F132 <AmiBlitz3.ab3@19140>    SUBQ.w #1,d1
0002F134 <AmiBlitz3.ab3@19141>    ASL #7,d1
0002F13A <AmiBlitz3.ab3@19143>    OR.l #$f21f5400,d1                                      ;fmove.d (a7)+
0002F13E <AmiBlitz3.ab3@19144>    BSR writelong
0002F144 <AmiBlitz3.ab3@19145>    SUBQ.l #2,stacktrack
0002F146 <AmiBlitz3.ab3@19148>    SUBQ.w #1,d0
0002F14A <AmiBlitz3.ab3@19149>    BNE 'loop
0002F150 <AmiBlitz3.ab3@19152>   SUBQ.l #2,stacktrack                                     ;integer sub
0002F152 <AmiBlitz3.ab3@19153>   MOVE.l (a7)+,d0
0002F156 <AmiBlitz3.ab3@19157>   MOVE.w #$4CDF,D1
0002F15A <AmiBlitz3.ab3@19158>    BSR.w writeword
0002F15C <AmiBlitz3.ab3@19159>   MOVEQ.l #$00,D1
0002F15E <AmiBlitz3.ab3@19160>   MOVEQ.l #$0F,D4
0002F160 <AmiBlitz3.ab3@19163>     LSL.w #1,D3
0002F162 <AmiBlitz3.ab3@19164>     ROXR.w #1,D1
0002F166 <AmiBlitz3.ab3@19165>   DBF D4,'loopsw                                         ;movem.l (a7)+,dx
0002F16A <AmiBlitz3.ab3@19167>     BSR.w writeword        ;poke movem (a7)+...
0002F170 <AmiBlitz3.ab3@19169>    CLR.w regnumfunc
0002F172 <AmiBlitz3.ab3@19173>   MOVE.w (A7)+,D1
0002F176 <AmiBlitz3.ab3@19174>    BEQ.b 'nores
0002F17A <AmiBlitz3.ab3@19175>   CMPI.w #$7,(A7)
0002F17E <AmiBlitz3.ab3@19176>    BEQ.b 'issb
0002F184 <AmiBlitz3.ab3@19178>   LEA geta3,A0
0002F18A <AmiBlitz3.ab3@19179>   LEA geta3f,A1
0002F18E <AmiBlitz3.ab3@19180>    BSR.w pokecode
0002F192 <AmiBlitz3.ab3@19181>  BRA.b 'nosb
0002F198 <AmiBlitz3.ab3@19185>   MOVE.w deca3,D1
0002F19C <AmiBlitz3.ab3@19186>    BSR.w writeword
0002F1A0 <AmiBlitz3.ab3@19189>   BSR.w dopulla3          ;fix up string base
0002F1A2 <AmiBlitz3.ab3@19192>   MOVE.w (A7)+,D2         ;what it returns!
0002F1A6 <AmiBlitz3.ab3@19193>   CMP.w #$7,D2
0002F1AA <AmiBlitz3.ab3@19194>    BNE.w 'notst
0002F1B0 <AmiBlitz3.ab3@19195>   MOVE.w putstlen,D1
0002F1B6 <AmiBlitz3.ab3@19196>   OR.w regnum,D1
0002F1BA <AmiBlitz3.ab3@19197>    BSR.w writeword
0002F1BE <AmiBlitz3.ab3@19200>   BSR.w get1bytemain
0002F1C2 <AmiBlitz3.ab3@19201> BRA.w varcont
0002F1C4 <AmiBlitz3.ab3@19205> deca3:   Dc.b $53,$4B                                      ;SUBQ.W  #1,A3
0002F1CC <AmiBlitz3.ab3@19213>   CMP.b #2,optistring
0002F1D0 <AmiBlitz3.ab3@19214>   BEQ 'fs2
0002F1D4 <AmiBlitz3.ab3@19216>   BSR.w makesbase                                          ;writestringvariable
0002F1D8 <AmiBlitz3.ab3@19217>   BTST #$F,D2
0002F1DC <AmiBlitz3.ab3@19218>    BNE.w 'already
0002F1E2 <AmiBlitz3.ab3@19219>   MOVE.w D3,leaa5d3a2+2
0002F1E8 <AmiBlitz3.ab3@19220>   MOVE.l leaa5d3a2,D1
0002F1EC <AmiBlitz3.ab3@19221>    BSR.w pokela5s
0002F1F2 <AmiBlitz3.ab3@19224>   MOVE.w regnum,D1
0002F1F4 <AmiBlitz3.ab3@19225>   LSL.w #8,D1
0002F1F6 <AmiBlitz3.ab3@19226>   LSL.w #1,D1
0002F1FA <AmiBlitz3.ab3@19227>   ORI.w #$7000,D1
0002F200 <AmiBlitz3.ab3@19228>   LEA stvarget2,A0
0002F202 <AmiBlitz3.ab3@19229>   MOVE.w D1,(A0)
0002F208 <AmiBlitz3.ab3@19230>   MOVE.w regnum,D1
0002F20E <AmiBlitz3.ab3@19231>   ANDI.w #$FFF8,$2(A0)
0002F212 <AmiBlitz3.ab3@19232>   OR.w D1,$2(A0)
0002F218 <AmiBlitz3.ab3@19233>   LEA stvarget2f,A1
0002F21C <AmiBlitz3.ab3@19234>    BSR.w pokecode
0002F220 <AmiBlitz3.ab3@19235>   MOVE.w #$C600,D1     ; was #copstring,
0002F224 <AmiBlitz3.ab3@19236>    BSR.w Atokejsr
0002F226 <AmiBlitz3.ab3@19237>   MOVEQ.l #$07,D2
0002F22A <AmiBlitz3.ab3@19238>  BRA.w reget
0002F230 <AmiBlitz3.ab3@19242>      TST.w stackpar
0002F234 <AmiBlitz3.ab3@19243>      BMI 'l10
0002F23A <AmiBlitz3.ab3@19244>      MOVE.l #$3f3c0007,d1
0002F240 <AmiBlitz3.ab3@19245>      ADDQ.w #2,a2offset
0002F244 <AmiBlitz3.ab3@19246>      BSR writelong
0002F248 <AmiBlitz3.ab3@19249>   MOVE.w #$4878,d1
0002F24E <AmiBlitz3.ab3@19250>      CLR.w stackpar
0002F252 <AmiBlitz3.ab3@19251>      BSR writeword
0002F256 <AmiBlitz3.ab3@19252>      MOVE.w #$0,d1
0002F25A <AmiBlitz3.ab3@19253>      BSR writeword
0002F25E <AmiBlitz3.ab3@19254>      MOVE.w #$246d,d1
0002F262 <AmiBlitz3.ab3@19255>      BSR writeword
0002F264 <AmiBlitz3.ab3@19256>      MOVE.w d3,d1
0002F268 <AmiBlitz3.ab3@19257>      BSR writeword
0002F26E <AmiBlitz3.ab3@19258>      MOVE.l #$4a926704,d1
0002F272 <AmiBlitz3.ab3@19259>      BSR writelong
0002F278 <AmiBlitz3.ab3@19260>      MOVE.l #$2eaafffc,d1
0002F27C <AmiBlitz3.ab3@19261>      BSR writelong
0002F280 <AmiBlitz3.ab3@19262>      MOVE.w #$2f0a,d1
0002F286 <AmiBlitz3.ab3@19263>      ADDQ.w #8,a2offset
0002F28A <AmiBlitz3.ab3@19264>      BSR writeword
0002F28E <AmiBlitz3.ab3@19265> BRA.w reget
0002F292 <AmiBlitz3.ab3@19270>   CMP.b #$7,D2                                             ;load basic var
0002F296 <AmiBlitz3.ab3@19271>    BEQ.w stvar
0002F29C <AmiBlitz3.ab3@19273>    TST.b iee
0002F2A0 <AmiBlitz3.ab3@19274>    BEQ 'noiee
0002F2A4 <AmiBlitz3.ab3@19275>    CMP.b #5,d2
0002F2A8 <AmiBlitz3.ab3@19276>    BNE 'noiee
0002F2AA <AmiBlitz3.ab3@19277>    MOVE.l d0,-(a7)                                         ;fpu load var
0002F2AE <AmiBlitz3.ab3@19278>    BTST #15,d2
0002F2B2 <AmiBlitz3.ab3@19279>    BEQ 'var
0002F2B8 <AmiBlitz3.ab3@19280>    CMP.l #$7fff,d3
0002F2BC <AmiBlitz3.ab3@19281>    BGT 'longoffset
0002F2C2 <AmiBlitz3.ab3@19282>    MOVE.l #$f22a4400,d1                                    ;newtype     >32kb
0002F2C4 <AmiBlitz3.ab3@19283>    TST.w d3                                                ;offset =0
0002F2C8 <AmiBlitz3.ab3@19284>    BNE 'offset
0002F2CE <AmiBlitz3.ab3@19287>   MOVE.l #$f2124400,d1
0002F2D0 <AmiBlitz3.ab3@19288>    MOVEQ #0,d3
0002F2D4 <AmiBlitz3.ab3@19289>  BRA 'glob
0002F2DA <AmiBlitz3.ab3@19292>   SUBQ.l #4,destpointer
0002F2DE <AmiBlitz3.ab3@19293>  BRA 'glob
0002F2E4 <AmiBlitz3.ab3@19296>   TST.b fast
0002F2E8 <AmiBlitz3.ab3@19297>    BEQ 'nofastload
0002F2EE <AmiBlitz3.ab3@19298>    TST.w regnum
0002F2F2 <AmiBlitz3.ab3@19299>    BNE 'nofastload
0002F2F8 <AmiBlitz3.ab3@19300>    CMP.l fp0addr,a4
0002F2FC <AmiBlitz3.ab3@19301>    BNE 'nofastload
0002F302 <AmiBlitz3.ab3@19302>    MOVE.l fp0iff,d1
0002F308 <AmiBlitz3.ab3@19303>    CMP.l firstiff,d1
0002F30C <AmiBlitz3.ab3@19304>    BNE 'nofastload
0002F312 <AmiBlitz3.ab3@19305>    MOVE.w varmode,d1
0002F318 <AmiBlitz3.ab3@19306>    CMP.w fp0mode,d1
0002F31C <AmiBlitz3.ab3@19307>    BNE 'nofastload
0002F322 <AmiBlitz3.ab3@19308>    CMP.w fp0var,d3
0002F326 <AmiBlitz3.ab3@19309>    BNE 'nofastload
0002F32A <AmiBlitz3.ab3@19310>    BCLR #16,d2
0002F32C <AmiBlitz3.ab3@19311>    MOVE.l (a7)+,d0
0002F32E <AmiBlitz3.ab3@19312>  RTS
0002F330 <AmiBlitz3.ab3@19315>    MOVEQ #0,d0
0002F336 <AmiBlitz3.ab3@19316>    MOVE.w regnum,d0
0002F33C <AmiBlitz3.ab3@19317>    CMP.l maxregs,d0
0002F340 <AmiBlitz3.ab3@19318>    BLE 'ok
0002F346 <AmiBlitz3.ab3@19319>    LEA cmplxerr,a0
0002F348 <AmiBlitz3.ab3@19320>   MOVE.l a0,-(a7)
0002F34E <AmiBlitz3.ab3@19321>  JMP handle_compileerror
0002F354 <AmiBlitz3.ab3@19324>    LEA regtable,a4
0002F356 <AmiBlitz3.ab3@19325>    TST.l (a4)
0002F35A <AmiBlitz3.ab3@19326>    BEQ 'noreg
0002F35E <AmiBlitz3.ab3@19327>    CMP.w 0+4(a4),d3
0002F362 <AmiBlitz3.ab3@19328>    BNE 'doreg1
0002F368 <AmiBlitz3.ab3@19329>    MOVE.l #$f2001c00,d1
0002F36E <AmiBlitz3.ab3@19330>    MOVE.w regnum,d0
0002F370 <AmiBlitz3.ab3@19331>    ASL.w #7,d0
0002F372 <AmiBlitz3.ab3@19332>    OR.w d0,d1
0002F376 <AmiBlitz3.ab3@19333>    BSR writelong
0002F378 <AmiBlitz3.ab3@19334>    MOVE.l (a7)+,d0
0002F37A <AmiBlitz3.ab3@19335>  RTS
0002F37E <AmiBlitz3.ab3@19338>   CMP.w 8+4(a4),d3
0002F382 <AmiBlitz3.ab3@19339>    BNE 'doreg2
0002F388 <AmiBlitz3.ab3@19340>    MOVE.l #$f2001800,d1
0002F38E <AmiBlitz3.ab3@19341>    MOVE.w regnum,d0
0002F390 <AmiBlitz3.ab3@19342>    ASL.w #7,d0
0002F392 <AmiBlitz3.ab3@19343>    OR.w d0,d1
0002F396 <AmiBlitz3.ab3@19344>    BSR writelong
0002F398 <AmiBlitz3.ab3@19345>    MOVE.l (a7)+,d0
0002F39A <AmiBlitz3.ab3@19346>  RTS
0002F39E <AmiBlitz3.ab3@19349>   CMP.w 16+4(a4),d3
0002F3A2 <AmiBlitz3.ab3@19350>    BNE 'doreg3
0002F3A8 <AmiBlitz3.ab3@19351>    MOVE.l #$f2001400,d1
0002F3AE <AmiBlitz3.ab3@19352>    MOVE.w regnum,d0
0002F3B0 <AmiBlitz3.ab3@19353>    ASL.w #7,d0
0002F3B2 <AmiBlitz3.ab3@19354>    OR.w d0,d1
0002F3B6 <AmiBlitz3.ab3@19355>    BSR  writelong
0002F3B8 <AmiBlitz3.ab3@19356>    MOVE.l (a7)+,d0
0002F3BA <AmiBlitz3.ab3@19357>  RTS
0002F3BE <AmiBlitz3.ab3@19360>   CMP.w 24+4(a4),d3
0002F3C2 <AmiBlitz3.ab3@19361>    BNE 'doreg4
0002F3C8 <AmiBlitz3.ab3@19362>    MOVE.l #$f2001000,d1
0002F3CE <AmiBlitz3.ab3@19363>    MOVE.w regnum,d0
0002F3D0 <AmiBlitz3.ab3@19364>    ASL.w #7,d0
0002F3D2 <AmiBlitz3.ab3@19365>    OR.w d0,d1
0002F3D6 <AmiBlitz3.ab3@19366>    BSR writelong
0002F3D8 <AmiBlitz3.ab3@19367>    MOVE.l (a7)+,d0
0002F3DA <AmiBlitz3.ab3@19368>  RTS
0002F3DE <AmiBlitz3.ab3@19371>    CMP.w 32+4(a4),d3
0002F3E2 <AmiBlitz3.ab3@19372>    BNE 'noreg
0002F3E8 <AmiBlitz3.ab3@19373>    MOVE.l #$f2000c00,d1
0002F3EE <AmiBlitz3.ab3@19374>    MOVE.w regnum,d0
0002F3F0 <AmiBlitz3.ab3@19375>    ASL.w #7,d0
0002F3F2 <AmiBlitz3.ab3@19376>    OR.w d0,d1
0002F3F6 <AmiBlitz3.ab3@19377>    BSR writelong
0002F3F8 <AmiBlitz3.ab3@19378>    MOVE.l (a7)+,d0
0002F3FA <AmiBlitz3.ab3@19379>  RTS
0002F400 <AmiBlitz3.ab3@19382>    MOVE.l #$f22d4400,d1                                    ;var
0002F406 <AmiBlitz3.ab3@19383>    TST.w varmode
0002F40A <AmiBlitz3.ab3@19384>   BEQ 'glob
0002F40E <AmiBlitz3.ab3@19385>   BCLR #16,d1                                              ;local
0002F410 <AmiBlitz3.ab3@19388>    MOVEQ #0,d0
0002F416 <AmiBlitz3.ab3@19389>    MOVE.w regnum,d0
0002F41A <AmiBlitz3.ab3@19390>    CMP.w #7,d0
0002F41E <AmiBlitz3.ab3@19391>    BLE 'ok2
0002F424 <AmiBlitz3.ab3@19392>    LEA cmplxerr,a0
0002F426 <AmiBlitz3.ab3@19393>   MOVE.l a0,-(a7)
0002F42C <AmiBlitz3.ab3@19394>  JMP handle_compileerror
0002F42E <AmiBlitz3.ab3@19397>      ASL.w #7,d0
0002F430 <AmiBlitz3.ab3@19398>    OR.l d0,d1
0002F438 <AmiBlitz3.ab3@19399>    CMP.l #doublecheck,8(a2)
0002F43C <AmiBlitz3.ab3@19400>    BNE 'dbl
0002F442 <AmiBlitz3.ab3@19401>    OR.l #$00001000,d1
0002F446 <AmiBlitz3.ab3@19404>   BSR writelong
0002F448 <AmiBlitz3.ab3@19405>    MOVE.l (a7)+,d0
0002F44C <AmiBlitz3.ab3@19406>    AND.w #$ff,d2
0002F44E <AmiBlitz3.ab3@19407>    MOVE.w d3,d1
0002F452 <AmiBlitz3.ab3@19408>    BEQ 'nooffs
0002F456 <AmiBlitz3.ab3@19409>  BRA writeword
0002F458 <AmiBlitz3.ab3@19414>  RTS
0002F45E <AmiBlitz3.ab3@19417>   MOVE.w regnum,D1
0002F464 <AmiBlitz3.ab3@19419>   MOVE.w d1,load_var_reg
0002F466 <AmiBlitz3.ab3@19421>   LSL.w #8,D1
0002F470 <AmiBlitz3.ab3@19423>   MOVE.l destpointer,load_var_addr
0002F476 <AmiBlitz3.ab3@19424>   MOVE.w d2,load_var_size
0002F478 <AmiBlitz3.ab3@19426>   LSL.w #1,D1
0002F47C <AmiBlitz3.ab3@19427>   BTST #$E,D2
0002F480 <AmiBlitz3.ab3@19428>    BNE.w 'pointer
0002F482 <AmiBlitz3.ab3@19429>   TST.b D2
0002F486 <AmiBlitz3.ab3@19430>    BNE.w 'skip2
0002F488 <AmiBlitz3.ab3@19431>   MOVEQ.l #$03,D2
0002F48C <AmiBlitz3.ab3@19432>   ORI.w #$200A,D1
0002F490 <AmiBlitz3.ab3@19433>  BRA.w writeword
0002F494 <AmiBlitz3.ab3@19436>   MOVE.b #$3,D2
0002F498 <AmiBlitz3.ab3@19439>   BTST #$F,D2
0002F49C <AmiBlitz3.ab3@19440>    BEQ.w 'simpvar                                         ;loadarray
0002F4A2 <AmiBlitz3.ab3@19442>    TST.b fast                                              ;lea->move xx(a2)
0002F4A6 <AmiBlitz3.ab3@19443>    BEQ 'la10
0002F4AC <AmiBlitz3.ab3@19448>    CLR.l load_var_addr
0002F4B0 <AmiBlitz3.ab3@19449>  BRA 'la10
0002F4B8 <AmiBlitz3.ab3@19451>    CMP.w #$2012,movea2dn                                  ;??Looks like dead code??
0002F4BC <AmiBlitz3.ab3@19452>    BNE 'la10
0002F4C2 <AmiBlitz3.ab3@19453>    TST.b optiarray
0002F4C6 <AmiBlitz3.ab3@19454>    BNE 'la10
0002F4CC <AmiBlitz3.ab3@19455>    MOVE.l destpointer,a4
0002F4D2 <AmiBlitz3.ab3@19456>    SUB.l loada,a4
0002F4D6 <AmiBlitz3.ab3@19457>    CMP.w #4,a4
0002F4DA <AmiBlitz3.ab3@19458>    BEQ 'la100
0002F4DE <AmiBlitz3.ab3@19459>    CMP.w #2,a4
0002F4E2 <AmiBlitz3.ab3@19460>    BNE 'la10
0002F4E8 <AmiBlitz3.ab3@19461>    MOVE.l destpointer,a4
0002F4EC <AmiBlitz3.ab3@19462>    CMP.b #3,d2
0002F4F0 <AmiBlitz3.ab3@19463>    BCS 'la110
0002F4F6 <AmiBlitz3.ab3@19464>    MOVE.w #$202a,-2(a4)
0002F4FA <AmiBlitz3.ab3@19465>    OR.w d1,-2(a4)
0002F500 <AmiBlitz3.ab3@19466>    MOVE.w arrayoffset,d1
0002F504 <AmiBlitz3.ab3@19467>    BSR writeword
0002F508 <AmiBlitz3.ab3@19468>  BRA 'more
0002F50C <AmiBlitz3.ab3@19471>    CMP.b #2,d2
0002F510 <AmiBlitz3.ab3@19472>    BNE 'la120
0002F516 <AmiBlitz3.ab3@19473>     MOVE.w #$302a,-2(a4)
0002F51A <AmiBlitz3.ab3@19474>    OR.w d1,-2(a4)
0002F520 <AmiBlitz3.ab3@19476>    MOVE.w arrayoffset,d1
0002F524 <AmiBlitz3.ab3@19477>    BSR writeword
0002F528 <AmiBlitz3.ab3@19478>  BRA 'more
0002F52C <AmiBlitz3.ab3@19481>   CMP.b #1,d2
0002F530 <AmiBlitz3.ab3@19482>    BNE.s 'la10
0002F536 <AmiBlitz3.ab3@19483>     MOVE.w #$102a,-2(a4)
0002F53A <AmiBlitz3.ab3@19484>    OR.w d1,-2(a4)
0002F540 <AmiBlitz3.ab3@19485>    MOVE.w arrayoffset,d1
0002F544 <AmiBlitz3.ab3@19486>    BSR writeword
0002F548 <AmiBlitz3.ab3@19487>  BRA 'more
0002F54E <AmiBlitz3.ab3@19490>   MOVE.l destpointer,a4
0002F554 <AmiBlitz3.ab3@19491>    CMP.w #$45ea,-2(a4)
0002F558 <AmiBlitz3.ab3@19492>    BNE 'la10
0002F55C <AmiBlitz3.ab3@19493>    CMP.b #3,d2
0002F560 <AmiBlitz3.ab3@19494>    BCS 'la11
0002F566 <AmiBlitz3.ab3@19495>    MOVE.w #$202a,-4(a4)
0002F56A <AmiBlitz3.ab3@19496>    OR.w d1,-4(a4)
0002F56E <AmiBlitz3.ab3@19497>  BRA 'more
0002F572 <AmiBlitz3.ab3@19500>    CMP.b #2,d2
0002F576 <AmiBlitz3.ab3@19501>    BNE 'la12
0002F57C <AmiBlitz3.ab3@19502>     MOVE.w #$302a,-4(a4)
0002F580 <AmiBlitz3.ab3@19503>    OR.w d1,-4(a4)
0002F584 <AmiBlitz3.ab3@19504>  BRA 'more
0002F588 <AmiBlitz3.ab3@19507>   CMP.b #1,d2
0002F58C <AmiBlitz3.ab3@19508>    BNE.s 'la10
0002F592 <AmiBlitz3.ab3@19509>     MOVE.w #$102a,-4(a4)
0002F596 <AmiBlitz3.ab3@19510>    OR.w d1,-4(a4)
0002F59A <AmiBlitz3.ab3@19511>  BRA 'more
0002F5A0 <AmiBlitz3.ab3@19515>    OR.w movea2dn,D1
0002F5A4 <AmiBlitz3.ab3@19516>    BSR.w 'size
0002F5A8 <AmiBlitz3.ab3@19517>    BSR.w writeword
0002F5AC <AmiBlitz3.ab3@19520>   ANDI.w #$FF,D2
0002F5AE <AmiBlitz3.ab3@19521>  RTS
0002F5B4 <AmiBlitz3.ab3@19525>    MOVE.l destpointer,a4              ; "
0002F5BC <AmiBlitz3.ab3@19526>    MOVE.l #$f22a4400,-4(a4)           ; "
0002F5C2 <AmiBlitz3.ab3@19527>    MOVE.w arrayoffset,d1              ; "
0002F5C6 <AmiBlitz3.ab3@19528>  BRA writeword
0002F5CC <AmiBlitz3.ab3@19532>   OR.w moved3a5dn,D1                                        ;write move.l 0(a5),reg
0002F5D0 <AmiBlitz3.ab3@19533>    BSR.w 'size
0002F5D4 <AmiBlitz3.ab3@19534>    BSR.w pokewda5s
0002F5D6 <AmiBlitz3.ab3@19535>   MOVE.w D3,D1
0002F5DA <AmiBlitz3.ab3@19536>    BSR.w writeword
0002F5DE <AmiBlitz3.ab3@19537>  BRA.w 'more
0002F5E2 <AmiBlitz3.ab3@19542>   BTST #$E,D2
0002F5E6 <AmiBlitz3.ab3@19543>    BNE.w 'long
0002F5EA <AmiBlitz3.ab3@19544>   CMP.b #$1,D2
0002F5EE <AmiBlitz3.ab3@19545>    BEQ.w 'byte
0002F5F2 <AmiBlitz3.ab3@19546>   CMP.b #$2,D2
0002F5F6 <AmiBlitz3.ab3@19547>    BEQ.w 'word
0002F5F8 <AmiBlitz3.ab3@19550>  RTS
0002F5FC <AmiBlitz3.ab3@19553>   EORI.w #$3000,D1
0002F5FE <AmiBlitz3.ab3@19554>  RTS
0002F602 <AmiBlitz3.ab3@19557>   ORI.w #$1000,D1
0002F604 <AmiBlitz3.ab3@19558> RTS
0002F60C <AmiBlitz3.ab3@19564>   MOVE.w #$FFFF,dfetch    ; was -1
0002F610 <AmiBlitz3.ab3@19565>   BSR.w get1bytemain
0002F614 <AmiBlitz3.ab3@19566>   CMP.w #$2D,D0           ;'-'
0002F618 <AmiBlitz3.ab3@19567>    BNE.w 'datado
0002F61C <AmiBlitz3.ab3@19568>   BSR.w get1bytemain
0002F620 <AmiBlitz3.ab3@19569>   BSR.w 'datado
0002F624 <AmiBlitz3.ab3@19571>   CMP.w #$5,D2
0002F628 <AmiBlitz3.ab3@19572>    BCC.w 'nfp
0002F62A <AmiBlitz3.ab3@19573>   NEG.l D0
0002F62C <AmiBlitz3.ab3@19574>  RTS
0002F632 <AmiBlitz3.ab3@19578>   TST.b fpu
0002F636 <AmiBlitz3.ab3@19579>   BEQ 'noneg
0002F63A <AmiBlitz3.ab3@19580>   fneg.x fp0
0002F63C <AmiBlitz3.ab3@19581>  RTS
0002F640 <AmiBlitz3.ab3@19586>   BCHG #$7,D0
0002F642 <AmiBlitz3.ab3@19587>  RTS
0002F646 <AmiBlitz3.ab3@19591>   CMP.w #$24,D0          ;'$'
0002F64A <AmiBlitz3.ab3@19592>    BEQ.w get_hexconstant
0002F64E <AmiBlitz3.ab3@19593>   CMP.w #$25,D0          ;'%'
0002F652 <AmiBlitz3.ab3@19594>    BEQ.w fetchbin
0002F656 <AmiBlitz3.ab3@19597>   CMP.w #$2E,D0          ;'.'
0002F65A <AmiBlitz3.ab3@19598>    BNE.w fetchnum
0002F65C <AmiBlitz3.ab3@19602>   MOVEQ.l #$00,D3
0002F660 <AmiBlitz3.ab3@19603> BRA.w fetchpoint2
0002F662 <AmiBlitz3.ab3@19607>   MOVEQ.l #$00,D3                                          ;number
0002F666 <AmiBlitz3.ab3@19609>    BSR.w atoi
0002F66A <AmiBlitz3.ab3@19611>   CMP.w #$2E,D0             ;'.'
0002F66E <AmiBlitz3.ab3@19612>    BEQ.w fetchpoint
0002F672 <AmiBlitz3.ab3@19613>   ORI.w #$20,D0
0002F676 <AmiBlitz3.ab3@19614>   CMP.w #$65,D0             ;'e'
0002F67A <AmiBlitz3.ab3@19615>    BNE.w fetchnum2
0002F680 <AmiBlitz3.ab3@19616>   CMP.l #$800000,D3
0002F684 <AmiBlitz3.ab3@19617>    BCC.w overerr
0002F686 <AmiBlitz3.ab3@19618>   MOVEQ.l #-$01,D6
0002F68A <AmiBlitz3.ab3@19620>   fmove.l d3,fp0
0002F68C <AmiBlitz3.ab3@19622>   MOVE.l D3,D0
0002F692 <AmiBlitz3.ab3@19623>   MOVEA.l _mathffpbase,A6
0002F696 <AmiBlitz3.ab3@19624>    JSR -$24(A6)             ;int to ffp
0002F698 <AmiBlitz3.ab3@19625>   MOVE.l D0,D3
0002F69C <AmiBlitz3.ab3@19626>    BSR.w dothee
0002F6A0 <AmiBlitz3.ab3@19627>    BSR.w reget
0002F6A4 <AmiBlitz3.ab3@19628>    BSR.w consttype2
0002F6A8 <AmiBlitz3.ab3@19629> BRA.w fetchnum3
0002F6AC <AmiBlitz3.ab3@19634>   CMP.b #4,d2
0002F6B0 <AmiBlitz3.ab3@19635>   BEQ 'l4
0002F6B4 <AmiBlitz3.ab3@19636>   MOVE.b #5,d2                                             ;nprint 2/0.5 bugfix
0002F6BA <AmiBlitz3.ab3@19639>    TST.b fpu
0002F6BE <AmiBlitz3.ab3@19640>    BNE 'l1
0002F6C4 <AmiBlitz3.ab3@19642>    CMP.l #$800000,D3
0002F6C8 <AmiBlitz3.ab3@19643>    BCC.w overerr
0002F6CC <AmiBlitz3.ab3@19645>  BRA fetchpoint2
0002F6D2 <AmiBlitz3.ab3@19648>   CMP.l #$7fffffff,d3
0002F6D6 <AmiBlitz3.ab3@19649>     BCC.w overerr
0002F6D8 <AmiBlitz3.ab3@19654>   MOVEQ.l #-$01,D6         ;now a float.
0002F6DA <AmiBlitz3.ab3@19655>   MOVE.l D3,D0
0002F6DE <AmiBlitz3.ab3@19657>   fmove.l d3,fp0
0002F6E4 <AmiBlitz3.ab3@19659>   MOVEA.l _mathffpbase,A6
0002F6E8 <AmiBlitz3.ab3@19660>    JSR -$24(A6)            ;int to ffp                                       ;integer to ffp
0002F6EA <AmiBlitz3.ab3@19661>   MOVE.l D0,-(A7)          ;save whole number
0002F6EE <AmiBlitz3.ab3@19662>    BSR.w get1bytemain
0002F6F2 <AmiBlitz3.ab3@19663>    BSR.w tstnum
0002F6F6 <AmiBlitz3.ab3@19664>    BNE.w syntaxerr
0002F6F8 <AmiBlitz3.ab3@19665>   MOVEQ.l #$00,D3
0002F6FC <AmiBlitz3.ab3@19666>    BSR.w atoi              ;get int frac
0002F6FE <AmiBlitz3.ab3@19667>   TST.l D3
0002F702 <AmiBlitz3.ab3@19668>    BEQ.w 'pskip
0002F708 <AmiBlitz3.ab3@19670>   TST.b fpu
0002F70C <AmiBlitz3.ab3@19671>   BNE 'l1
0002F712 <AmiBlitz3.ab3@19673>   CMP.l #$800000,D3
0002F716 <AmiBlitz3.ab3@19674>    BCC.w overerr
0002F71A <AmiBlitz3.ab3@19676>  BRA 'l2
0002F720 <AmiBlitz3.ab3@19679>   CMP.l #$7fffffff,d3
0002F724 <AmiBlitz3.ab3@19680>   BCC overerr
0002F728 <AmiBlitz3.ab3@19683>   fmove.l d5,fp1
0002F72A <AmiBlitz3.ab3@19685>   MOVE.l D5,D0
0002F72E <AmiBlitz3.ab3@19686>    JSR -$24(A6)        ;divisor to ffp
0002F730 <AmiBlitz3.ab3@19687>   MOVE.l D0,D5
0002F734 <AmiBlitz3.ab3@19689>   fmove.l d3,fp2
0002F736 <AmiBlitz3.ab3@19691>   MOVE.l D3,D0
0002F73A <AmiBlitz3.ab3@19692>    JSR -$24(A6)        ;to ffp
0002F73E <AmiBlitz3.ab3@19694>   fdiv.x fp1,fp2
0002F740 <AmiBlitz3.ab3@19696>   MOVE.l D5,D1
0002F744 <AmiBlitz3.ab3@19697>    JSR -$54(A6)       ;num/divisor (eg .25=25/100)
0002F748 <AmiBlitz3.ab3@19699>   fadd.x fp2,fp0
0002F74A <AmiBlitz3.ab3@19701>   MOVE.l (A7)+,D1
0002F74E <AmiBlitz3.ab3@19702>    JSR -$42(A6)       ;add 'em
0002F750 <AmiBlitz3.ab3@19703>   MOVE.l D0,D3
0002F754 <AmiBlitz3.ab3@19704>    BSR.w reget
0002F758 <AmiBlitz3.ab3@19705>   ORI.w #$20,D0
0002F75C <AmiBlitz3.ab3@19706>   CMP.w #$65,D0       ;'e'
0002F760 <AmiBlitz3.ab3@19707>    BNE.w 'pskip2
0002F764 <AmiBlitz3.ab3@19710>    BSR.w dothee
0002F768 <AmiBlitz3.ab3@19713>    BSR.w reget
0002F76C <AmiBlitz3.ab3@19714>    BSR.w consttype2
0002F770 <AmiBlitz3.ab3@19715> BRA.w fetchnum3
0002F772 <AmiBlitz3.ab3@19718>   MOVE.l (A7)+,D3
0002F776 <AmiBlitz3.ab3@19719> BRA.w 'pskip2
0002F77A <AmiBlitz3.ab3@19724>   BSR.w get1bytemain
0002F77E <AmiBlitz3.ab3@19725>   CMP.w #$2B,D0       ;'+'
0002F782 <AmiBlitz3.ab3@19726>    BEQ.w 'pos
0002F786 <AmiBlitz3.ab3@19727>   CMP.w #$2D,D0       ;'-'
0002F78A <AmiBlitz3.ab3@19728>    BNE.w 'pos2
0002F78E <AmiBlitz3.ab3@19730>    BSR.w get1bytemain
0002F792 <AmiBlitz3.ab3@19731>    BSR.w getsign
0002F794 <AmiBlitz3.ab3@19735>   MOVE.l D3,D0
0002F798 <AmiBlitz3.ab3@19737>   fdiv.x fp1,fp0
0002F79A <AmiBlitz3.ab3@19739>   MOVE.l D4,D1
0002F79E <AmiBlitz3.ab3@19740>    JSR -$54(A6)
0002F7A0 <AmiBlitz3.ab3@19741>   MOVE.l D0,D3
0002F7A2 <AmiBlitz3.ab3@19742> RTS
0002F7A6 <AmiBlitz3.ab3@19745>   BSR.w get1bytemain
0002F7AA <AmiBlitz3.ab3@19748>   BSR.w getsign
0002F7AE <AmiBlitz3.ab3@19752>   fmul.x fp1,fp0
0002F7B0 <AmiBlitz3.ab3@19753>   MOVE.l D3,D0
0002F7B2 <AmiBlitz3.ab3@19754>   MOVE.l D4,D1
0002F7B6 <AmiBlitz3.ab3@19755>    JSR -$4E(A6)
0002F7B8 <AmiBlitz3.ab3@19756>   MOVE.l D0,D3
0002F7BA <AmiBlitz3.ab3@19757> RTS
0002F7BE <AmiBlitz3.ab3@19761>   BSR.w tstnum
0002F7C2 <AmiBlitz3.ab3@19762>    BNE.w syntaxerr
0002F7C4 <AmiBlitz3.ab3@19763>   MOVE.w D0,D4
0002F7C8 <AmiBlitz3.ab3@19764>   SUBI.w #$30,D4
0002F7CC <AmiBlitz3.ab3@19765>    BSR.w get1bytemain
0002F7D0 <AmiBlitz3.ab3@19766>    BSR.w tstnum
0002F7D4 <AmiBlitz3.ab3@19767>    BNE.w 'skip
0002F7D8 <AmiBlitz3.ab3@19768>   MULU #$A,D4
0002F7DC <AmiBlitz3.ab3@19769>   SUBI.w #$30,D0
0002F7DE <AmiBlitz3.ab3@19770>   ADD.w D0,D4
0002F7E2 <AmiBlitz3.ab3@19771>    BSR.w get1bytemain
0002F7E6 <AmiBlitz3.ab3@19775>   CMP.w #$12,D4
0002F7EA <AmiBlitz3.ab3@19776>    BHI.w overerr
0002F7EC <AmiBlitz3.ab3@19778>   LSL.w #3,D4
0002F7F2 <AmiBlitz3.ab3@19779>   LEA fputab,a0
0002F7F4 <AmiBlitz3.ab3@19780>   ADD.l d4,a0
0002F7FA <AmiBlitz3.ab3@19781>   fmove.d 0(a0),fp1
0002F7FC <AmiBlitz3.ab3@19783>   LSR.w #1,d4               ; was #2
0002F800 <AmiBlitz3.ab3@19784>   MOVE.l facts(PC,D4.W),D4
0002F802 <AmiBlitz3.ab3@19785> RTS
0002F84A <AmiBlitz3.ab3@19789>   Dc.d 1,10,100,1000,10000,100000,1000000,10000000,100000000  ;,1000000000,10000000000
0002F84E <AmiBlitz3.ab3@19794>   Dc.l $80000041
0002F852 <AmiBlitz3.ab3@19795>   Dc.l $A0000044
0002F856 <AmiBlitz3.ab3@19796>   Dc.l $C8000047
0002F85A <AmiBlitz3.ab3@19797>   Dc.l $FA00004A
0002F85E <AmiBlitz3.ab3@19798>   Dc.l $9C40004E
0002F862 <AmiBlitz3.ab3@19799>   Dc.l $C3500051
0002F866 <AmiBlitz3.ab3@19800>   Dc.l $F4240054
0002F86A <AmiBlitz3.ab3@19801>   Dc.l $98968058
0002F86E <AmiBlitz3.ab3@19802>   Dc.l $BEBC205B
0002F872 <AmiBlitz3.ab3@19803>   Dc.l $EE6B285E
0002F876 <AmiBlitz3.ab3@19804>   Dc.l $9502F962
0002F87A <AmiBlitz3.ab3@19805>   Dc.l $BA43B765
0002F87E <AmiBlitz3.ab3@19806>   Dc.l $E8D4A568
0002F882 <AmiBlitz3.ab3@19807>   Dc.l $9184E76C
0002F886 <AmiBlitz3.ab3@19808>   Dc.l $B5E6A96F
0002F88A <AmiBlitz3.ab3@19809>   Dc.l $E35F2972
0002F88E <AmiBlitz3.ab3@19810>   Dc.l $8E1BCA76
0002F892 <AmiBlitz3.ab3@19811>   Dc.l $B1A2BD79
0002F896 <AmiBlitz3.ab3@19812>   Dc.l $DE0B6C7C
0002F898 <AmiBlitz3.ab3@19816>   MOVEQ.l #$01,D5
0002F89A <AmiBlitz3.ab3@19819>   LSL.l #1,D5
0002F89C <AmiBlitz3.ab3@19820>   MOVE.l D5,D1
0002F89E <AmiBlitz3.ab3@19821>   LSL.l #2,D5
0002F8A0 <AmiBlitz3.ab3@19822>   ADD.l D1,D5                                              ;divisor for frac convert!
0002F8A2 <AmiBlitz3.ab3@19824>   LSL.l #1,D3
0002F8A6 <AmiBlitz3.ab3@19825>    BCS.w overerr
0002F8A8 <AmiBlitz3.ab3@19826>   MOVE.l D3,D1
0002F8AA <AmiBlitz3.ab3@19827>   LSL.l #1,D3
0002F8AE <AmiBlitz3.ab3@19828>    BCS.w overerr
0002F8B0 <AmiBlitz3.ab3@19829>   LSL.l #1,D3
0002F8B4 <AmiBlitz3.ab3@19830>    BCS.w overerr
0002F8B6 <AmiBlitz3.ab3@19831>   ADD.l D1,D3
0002F8BA <AmiBlitz3.ab3@19832>   SUBI.w #$30,D0
0002F8BC <AmiBlitz3.ab3@19833>   ADD.l D0,D3
0002F8E8 <AmiBlitz3.ab3@19835>    !fget                                                   ;bsr.w get1bytemain
0002F8EC <AmiBlitz3.ab3@19836>    CMP.b #1,d0
0002F8F0 <AmiBlitz3.ab3@19837>    BNE 'cm1
0002F8F2 <AmiBlitz3.ab3@19838>    SUBQ.l #1,a5
0002F8F6 <AmiBlitz3.ab3@19839>    BSR get1bytemain                                        ;??wy not !fget
0002F8FA <AmiBlitz3.ab3@19842>   CMP.b #$7e,d0
0002F8FE <AmiBlitz3.ab3@19843>    BNE 'cm2
0002F900 <AmiBlitz3.ab3@19844>    SUBQ.l #1,a5
0002F904 <AmiBlitz3.ab3@19845>    BSR get1bytemain
0002F906 <AmiBlitz3.ab3@19848>   TST.b d0
0002F90A <AmiBlitz3.ab3@19849>    BPL 'l10
0002F90C <AmiBlitz3.ab3@19850>    LSL.w #8,d0
0002F90E <AmiBlitz3.ab3@19851>    MOVE.b (a5)+,d0
0002F914 <AmiBlitz3.ab3@19852>    MOVE.w d0,lastchar
0002F926 <AmiBlitz3.ab3@19855>   !compare2                                                ;bsr.w tstnum ;cmake bug
0002F92A <AmiBlitz3.ab3@19857>    BEQ.w 'loop
0002F92C <AmiBlitz3.ab3@19858> RTS
0002F92E <AmiBlitz3.ab3@19861> dfetch:  Ds.w 1                                            ;fetching data?
0002F932 <AmiBlitz3.ab3@19865>   MOVE.w dfetch(PC),D1
0002F936 <AmiBlitz3.ab3@19866>    BEQ.w 'doit
0002F93C <AmiBlitz3.ab3@19867>   CLR.w dfetch
0002F93E <AmiBlitz3.ab3@19868>  RTS
0002F944 <AmiBlitz3.ab3@19872>   MOVE.b d2,isconstantvalue
0002F94A <AmiBlitz3.ab3@19873>   MOVE.l d0,lastconstantvalue
0002F950 <AmiBlitz3.ab3@19874>   MOVE.w d2,imm_size
0002F95A <AmiBlitz3.ab3@19875>   MOVE.w regnum,imm_reg
0002F964 <AmiBlitz3.ab3@19876>   MOVE.l destpointer,imm_addr                           ; long
0002F968 <AmiBlitz3.ab3@19878>   CMP.w #$3,D2          ; order of cmp/beq in org soure is different
0002F96C <AmiBlitz3.ab3@19879>   BEQ.w 'long
0002F970 <AmiBlitz3.ab3@19880>   CMP.w #$5,D2                                          ;float
0002F974 <AmiBlitz3.ab3@19881>   BEQ.w 'long
0002F978 <AmiBlitz3.ab3@19882>   CMP.w #$1,D2
0002F97C <AmiBlitz3.ab3@19883>   BEQ.w 'word
0002F980 <AmiBlitz3.ab3@19884>   CMP.w #$2,D2
0002F984 <AmiBlitz3.ab3@19885>   BEQ.w 'word
0002F988 <AmiBlitz3.ab3@19886>   CMP.w #$4,D2
0002F98C <AmiBlitz3.ab3@19887>   BEQ.w 'long
0002F990 <AmiBlitz3.ab3@19888>  BRA.w mismatcherr
0002F996 <AmiBlitz3.ab3@19891>   MOVE.w regnum,D1
0002F998 <AmiBlitz3.ab3@19892>   LSL.w #8,D1
0002F99A <AmiBlitz3.ab3@19893>   LSL.w #1,D1
0002F99E <AmiBlitz3.ab3@19894>   ORI.w #$303C,D1
0002F9A2 <AmiBlitz3.ab3@19895>    BSR.w writeword
0002F9A4 <AmiBlitz3.ab3@19896>   MOVE.w D0,D1
0002F9A8 <AmiBlitz3.ab3@19897>    BSR.w writeword
0002F9AC <AmiBlitz3.ab3@19898>  BRA.w reget
0002F9AE <AmiBlitz3.ab3@19902>   MOVEQ #0,d1
0002F9B4 <AmiBlitz3.ab3@19904>   MOVE.w regnum,D1
0002F9BA <AmiBlitz3.ab3@19906>   TST.b fpu
0002F9BE <AmiBlitz3.ab3@19907>   BEQ 'f1
0002F9C2 <AmiBlitz3.ab3@19908>   CMP.w #5,d2
0002F9C6 <AmiBlitz3.ab3@19909>   BEQ 'l10
0002F9CA <AmiBlitz3.ab3@19910>  BRA 'f2
0002F9D0 <AmiBlitz3.ab3@19913>   TST.b iee
0002F9D4 <AmiBlitz3.ab3@19914>   BNE 'l10
0002F9D6 <AmiBlitz3.ab3@19918>   LSL.w #8,D1
0002F9D8 <AmiBlitz3.ab3@19919>   LSL.w #1,D1
0002F9DC <AmiBlitz3.ab3@19920>   ORI.w #$203C,D1
0002F9E0 <AmiBlitz3.ab3@19921>    BSR.w writeword
0002F9E2 <AmiBlitz3.ab3@19922>   MOVE.l D0,D1
0002F9E6 <AmiBlitz3.ab3@19923>    BSR.w writelong
0002F9EA <AmiBlitz3.ab3@19924>  BRA.w reget
0002F9EC <AmiBlitz3.ab3@19928>   MOVEQ #5,d2
0002F9EE <AmiBlitz3.ab3@19929>   ASL.l #7,d1
0002F9F0 <AmiBlitz3.ab3@19930>   SUBQ.l #8,a7
0002F9F6 <AmiBlitz3.ab3@19935>       OR.l #$f23c4400,d1                                   ;fmove.s
0002F9FC <AmiBlitz3.ab3@19936>        fmove.s fp0,0(a7)
0002FA00 <AmiBlitz3.ab3@19938>   BSR writelong
0002FA02 <AmiBlitz3.ab3@19939>   MOVE.l (a7)+,d1
0002FA06 <AmiBlitz3.ab3@19940>   BSR writelong
0002FA08 <AmiBlitz3.ab3@19941>   MOVE.l (a7)+,d1
0002FA0C <AmiBlitz3.ab3@19945> BRA.w reget
0002FA0E <AmiBlitz3.ab3@19952>  MOVE.l D3,D0
0002FA10 <AmiBlitz3.ab3@19953>   TST.w D6
0002FA14 <AmiBlitz3.ab3@19954>    BEQ.w 'skip            ;already integer
0002FA1A <AmiBlitz3.ab3@19955>   MOVEA.l _mathffpbase,A6
0002FA1E <AmiBlitz3.ab3@19956>    JSR -$1E(A6)
0002FA22 <AmiBlitz3.ab3@19957>    BVC.w 'skip
0002FA24 <AmiBlitz3.ab3@19958>   ADDQ.w #4,A7
0002FA28 <AmiBlitz3.ab3@19959>  BRA.w numdofloat
0002FA2A <AmiBlitz3.ab3@19962> RTS
0002FA2C <AmiBlitz3.ab3@19966>   MOVEQ.l #$00,D6          ;no frac
0002FA30 <AmiBlitz3.ab3@19968>    fmove.l d3,fp0
0002FA34 <AmiBlitz3.ab3@19972>   BSR.w consttype2
0002FA38 <AmiBlitz3.ab3@19973> BRA.w fetchnum3
0002FA3A <AmiBlitz3.ab3@19981>   MOVE.w D2,-(A7)                       ;
0002FA3E <AmiBlitz3.ab3@19982>    BSR.w evalconst                      ;  "
0002FA40 <AmiBlitz3.ab3@19983>   MOVE.w (A7)+,D2
0002FA42 <AmiBlitz3.ab3@19986>   TST.w D2
0002FA46 <AmiBlitz3.ab3@19987>    BNE.w 'something
0002FA48 <AmiBlitz3.ab3@19991>   TST.w D6
0002FA4C <AmiBlitz3.ab3@19992>    BEQ.w 'nofrac
0002FA4E <AmiBlitz3.ab3@19993>   MOVEQ.l #$04,D2
0002FA52 <AmiBlitz3.ab3@19994>  BRA.w 'quick2
0002FA54 <AmiBlitz3.ab3@19997>   MOVEQ.l #$02,D2
0002FA58 <AmiBlitz3.ab3@19998>  BRA.w 'byte
0002FA5C <AmiBlitz3.ab3@20001>   CMP.w #$1,D2
0002FA60 <AmiBlitz3.ab3@20002>    BEQ.w 'byte
0002FA64 <AmiBlitz3.ab3@20003>   CMP.w #$2,D2
0002FA68 <AmiBlitz3.ab3@20004>    BEQ.w 'word
0002FA6C <AmiBlitz3.ab3@20005>   CMP.w #$3,D2
0002FA70 <AmiBlitz3.ab3@20006>    BEQ.w 'long
0002FA74 <AmiBlitz3.ab3@20007>   CMP.w #$4,D2
0002FA78 <AmiBlitz3.ab3@20008>    BEQ.w 'quick
0002FA7C <AmiBlitz3.ab3@20009>   CMP.w #$5,D2
0002FA80 <AmiBlitz3.ab3@20010>    BEQ.w 'float
0002FA84 <AmiBlitz3.ab3@20011>  BRA.w mismatcherr
0002FA88 <AmiBlitz3.ab3@20014>   BSR.w makeint                                          ;bugfix if a.b=$90 bug fix
0002FA8E <AmiBlitz3.ab3@20015>   CMP.l #$7f,D0             ;127
0002FA92 <AmiBlitz3.ab3@20016>    BGT.w 'over1
0002FA98 <AmiBlitz3.ab3@20017>   CMP.l #$FFFFFF80,D0       ;-128
0002FA9C <AmiBlitz3.ab3@20018>    BGE.w 'dobword
0002FA9E <AmiBlitz3.ab3@20021>   MOVEQ.l #$02,D2                                          ;was 2 before
0002FAA4 <AmiBlitz3.ab3@20022>   CMP.l #$7fff,D0           ;32767
0002FAA8 <AmiBlitz3.ab3@20023>    BGT.w 'byte2
0002FAAE <AmiBlitz3.ab3@20024>   CMP.l #$FFFF8000,D0       ;32768
0002FAB2 <AmiBlitz3.ab3@20025>    BGE.w 'dobword
0002FAB4 <AmiBlitz3.ab3@20028>   MOVEQ.l #$03,D2
0002FAB8 <AmiBlitz3.ab3@20029>  BRA.w 'dobword
0002FABA <AmiBlitz3.ab3@20056>   TST.w D6
0002FABE <AmiBlitz3.ab3@20057>    BNE.w 'quick2
0002FAC2 <AmiBlitz3.ab3@20058>    BSR.w makeint
0002FAC6 <AmiBlitz3.ab3@20059>  BRA.w 'over1
0002FACA <AmiBlitz3.ab3@20062>   BSR.w makeint
0002FACC <AmiBlitz3.ab3@20063>   TST.w D6
0002FAD0 <AmiBlitz3.ab3@20064>   BEQ.w 'qint
0002FAD6 <AmiBlitz3.ab3@20067>   CMP.l #MaxWordSgnd,D0   ;32767
0002FADA <AmiBlitz3.ab3@20068>    BGT.w numdofloat
0002FAE0 <AmiBlitz3.ab3@20069>   CMP.l #$FFFF8000,D0     ;-32768
0002FAE4 <AmiBlitz3.ab3@20070>    BLT.w numdofloat
0002FAE6 <AmiBlitz3.ab3@20072>   MOVE.w D0,-(A7)         ;save whole part
0002FAEA <AmiBlitz3.ab3@20073>    JSR -$24(A6)           ;back to ffp
0002FAEC <AmiBlitz3.ab3@20074>   MOVE.l D0,D1
0002FAEE <AmiBlitz3.ab3@20075>   MOVE.l D3,D0
0002FAF2 <AmiBlitz3.ab3@20076>    JSR -$48(A6)           ;subtract - d0=fraction!
0002FAF8 <AmiBlitz3.ab3@20077>   MOVE.l #$80000051,D1    ;65536
0002FAFC <AmiBlitz3.ab3@20078>    JSR -$4E(A6)           ;*65536
0002FB00 <AmiBlitz3.ab3@20079>    JSR -$1E(A6)           ;back to int
0002FB04 <AmiBlitz3.ab3@20081>    BEQ.w 'knob            ;numdofloat
0002FB0A <AmiBlitz3.ab3@20082>   CMP.l #$10000,D0        ;65536
0002FB0E <AmiBlitz3.ab3@20083>    BCC.w 'knob            ;numdofloat
0002FB10 <AmiBlitz3.ab3@20084>   MOVE.w D0,D1
0002FB12 <AmiBlitz3.ab3@20085>   MOVE.w (A7)+,D0
0002FB14 <AmiBlitz3.ab3@20086>   SWAP D0
0002FB16 <AmiBlitz3.ab3@20087>   MOVE.w D1,D0
0002FB1A <AmiBlitz3.ab3@20088>  BRA.w 'dolong
0002FB1C <AmiBlitz3.ab3@20091>   ADDQ.w #2,A7
0002FB20 <AmiBlitz3.ab3@20092>  BRA.w numdofloat
0002FB26 <AmiBlitz3.ab3@20095>   CMP.l #MaxWordSgnd,D0   ;#32767
0002FB2A <AmiBlitz3.ab3@20096>    BGT.w 'byte2
0002FB30 <AmiBlitz3.ab3@20097>   CMP.l #$FFFF8000,D0     ;#32768
0002FB34 <AmiBlitz3.ab3@20098>    BLT.w 'byte2
0002FB36 <AmiBlitz3.ab3@20099>   SWAP D0
0002FB3A <AmiBlitz3.ab3@20100>  BRA.w 'dolong
0002FB3C <AmiBlitz3.ab3@20103>   TST.w D6
0002FB40 <AmiBlitz3.ab3@20104>   BNE.w numdofloat
0002FB42 <AmiBlitz3.ab3@20105>   MOVE.l D3,D0
0002FB46 <AmiBlitz3.ab3@20106>  BRA.w 'dolong
0002FB48 <AmiBlitz3.ab3@20109>   TST.w D6
0002FB4C <AmiBlitz3.ab3@20110>   BNE.w numdofloat
0002FB4E <AmiBlitz3.ab3@20111>   MOVE.l D3,D0
0002FB54 <AmiBlitz3.ab3@20112>   MOVEA.l _mathffpbase,A6
0002FB58 <AmiBlitz3.ab3@20113>   JSR -$24(A6)           ;int to float
0002FB5A <AmiBlitz3.ab3@20114>   MOVE.l D0,D3
0002FB5E <AmiBlitz3.ab3@20115>  BRA.w numdofloat
0002FB60 <AmiBlitz3.ab3@20119> RTS
0002FB62 <AmiBlitz3.ab3@20123>   MOVEQ.l #$05,D2
0002FB64 <AmiBlitz3.ab3@20124>   MOVE.l D3,D0
0002FB66 <AmiBlitz3.ab3@20125> RTS
0002FB6A <AmiBlitz3.ab3@20129>             Ds.l 1                                         ;??Looks like unused data??
0002FB6E <AmiBlitz3.ab3@20130> pushpc:     Ds.l 1
0002FB72 <AmiBlitz3.ab3@20131> pushoff:    Ds.l 1
0002FB76 <AmiBlitz3.ab3@20132> pushdooff:  Ds.l 1
0002FB78 <AmiBlitz3.ab3@20133> pushclen:   Ds.w 1
0002FB7C <AmiBlitz3.ab3@20134> pushat:     Ds.l 1
0002FB86 <AmiBlitz3.ab3@20140>   MOVE.l destpointer,pushpc
0002FB90 <AmiBlitz3.ab3@20141>   MOVE.l hunkoffsetbase,pushoff
0002FB92 <AmiBlitz3.ab3@20142>  RTS
0002FB96 <AmiBlitz3.ab3@20148>   MOVEM.l D0-D1/A0-A1,-(A7)
0002FB9C <AmiBlitz3.ab3@20150>   MOVE.l destpointer,D0
0002FBA0 <AmiBlitz3.ab3@20151>   MOVE.l pushpc(PC),D1
0002FBA6 <AmiBlitz3.ab3@20152>   MOVE.l D1,destpointer    ;New PC
0002FBA8 <AmiBlitz3.ab3@20153>   SUB.l D1,D0              ;len
0002FBAE <AmiBlitz3.ab3@20154>   MOVE.w D0,pushclen
0002FBB2 <AmiBlitz3.ab3@20155>    BEQ.w 'skip
0002FBB8 <AmiBlitz3.ab3@20156>   MOVE.w dontwrite_nomemleft,D1
0002FBBC <AmiBlitz3.ab3@20157>    BNE.w 'skip
0002FBC4 <AmiBlitz3.ab3@20160>    CMP.w #1000,pushclen
0002FBC8 <AmiBlitz3.ab3@20161>    BGE conmemerr
0002FBCE <AmiBlitz3.ab3@20162>    MOVE.l pushat,d0
0002FBD2 <AmiBlitz3.ab3@20163>    BNE 'nomem
0002FBD8 <AmiBlitz3.ab3@20164>    MOVE.l #1024,d0
0002FBDA <AmiBlitz3.ab3@20166>   MOVEQ.l #$01,D1
0002FBE0 <AmiBlitz3.ab3@20167>   MOVEA.l _execbase,A6
0002FBE6 <AmiBlitz3.ab3@20169>   MOVE.l mempool,a0
0002FBEA <AmiBlitz3.ab3@20170>   JSR _AllocPooled(a6)
0002FBF0 <AmiBlitz3.ab3@20173>   MOVE.l D0,pushat
0002FBF2 <AmiBlitz3.ab3@20178>   MOVEA.l D0,A0          ;destination
0002FBF8 <AmiBlitz3.ab3@20179>   MOVEA.l pushpc,A1      ;source
0002FBFE <AmiBlitz3.ab3@20180>   MOVE.l A1,destpointer
0002FC04 <AmiBlitz3.ab3@20181>   MOVE.w pushclen,D0
0002FC06 <AmiBlitz3.ab3@20182>   LSR.w #1,D0
0002FC08 <AmiBlitz3.ab3@20183>   SUBQ.w #1,D0           ;to word dbf
0002FC0A <AmiBlitz3.ab3@20186>     MOVE.w (A1)+,(A0)+
0002FC0E <AmiBlitz3.ab3@20187>   DBF D0,'loop
0002FC18 <AmiBlitz3.ab3@20189>    MOVE.l hunkoffsetbase,pushdooff
0002FC1C <AmiBlitz3.ab3@20192>   MOVEM.l (A7)+,D0-D1/A0-A1
0002FC1E <AmiBlitz3.ab3@20193> RTS
0002FC22 <AmiBlitz3.ab3@20199>   MOVEM.l D0-D1/A0-A1,-(A7)
0002FC24 <AmiBlitz3.ab3@20200>   MOVEQ.l #$00,D0
0002FC2A <AmiBlitz3.ab3@20201>   MOVE.w pushclen,D0
0002FC2E <AmiBlitz3.ab3@20202>    BEQ.w 'skip
0002FC34 <AmiBlitz3.ab3@20203>   MOVE.l destpointer,D1     ;pc before put
0002FC3A <AmiBlitz3.ab3@20204>   ADD.l D0,destpointer
0002FC40 <AmiBlitz3.ab3@20205>   TST.w dontwrite_nomemleft
0002FC44 <AmiBlitz3.ab3@20206>    BNE.w 'skip
0002FC46 <AmiBlitz3.ab3@20208>   LSR.w #1,D0
0002FC48 <AmiBlitz3.ab3@20209>   SUBQ.w #1,D0
0002FC4A <AmiBlitz3.ab3@20211>   MOVEA.l D1,A1
0002FC50 <AmiBlitz3.ab3@20212>   MOVEA.l pushat,A0
0002FC56 <AmiBlitz3.ab3@20215>     CMPA.l destbufferend,A1
0002FC5A <AmiBlitz3.ab3@20216>     BCS.w 'ok
0002FC62 <AmiBlitz3.ab3@20218>     MOVE.w #$FFFF,dontwrite_nomemleft    ; was -1
0002FC66 <AmiBlitz3.ab3@20219>   BRA.w 'skip
0002FC68 <AmiBlitz3.ab3@20222>      MOVE.w (A0)+,(A1)+                                    ;copylibcode
0002FC6C <AmiBlitz3.ab3@20223>   DBF D0,'loop
0002FC72 <AmiBlitz3.ab3@20228>   SUB.l pushpc,D1
0002FC76 <AmiBlitz3.ab3@20229>   BEQ.w 'skip2
0002FC7C <AmiBlitz3.ab3@20230>   MOVEA.l pushdooff,A0
0002FC82 <AmiBlitz3.ab3@20233>   CMPA.l pushoff,A0
0002FC86 <AmiBlitz3.ab3@20234>   BEQ.w 'done
0002FC8A <AmiBlitz3.ab3@20235>   MOVEA.l $4(A0),A1          ;address in prog.
0002FC90 <AmiBlitz3.ab3@20236>   ADDA.l destbufferstart,A1
0002FC96 <AmiBlitz3.ab3@20237>   CMPA.l destbufferend,A1
0002FC9A <AmiBlitz3.ab3@20238>   BCC.w 'next                ;leave offs >= lib
0002FC9E <AmiBlitz3.ab3@20239>   ADD.l D1,$4(A0)
0002FCA0 <AmiBlitz3.ab3@20242>   MOVEA.l (A0),A0
0002FCA4 <AmiBlitz3.ab3@20243>  BRA.w 'loop2
0002FCAA <AmiBlitz3.ab3@20247>   MOVEA.l pushat,A1
0002FCAC <AmiBlitz3.ab3@20248>   MOVEQ.l #$00,D0
0002FCB2 <AmiBlitz3.ab3@20249>   MOVE.w pushclen,D0
0002FCB8 <AmiBlitz3.ab3@20250>   MOVEA.l _execbase,A6
0002FCBE <AmiBlitz3.ab3@20251>   MOVE.l mempool,a0
0002FCC2 <AmiBlitz3.ab3@20255>   MOVEM.l (A7)+,D0-D1/A0-A1
0002FCC4 <AmiBlitz3.ab3@20256> RTS
0002FCC6 <AmiBlitz3.ab3@20262>   MOVE.l D1,-(A7)                                          ;array mul
0002FCC8 <AmiBlitz3.ab3@20263>   MOVEQ.l #$00,D2
0002FCCA <AmiBlitz3.ab3@20264>   MOVEQ.l #$0F,D3
0002FCCC <AmiBlitz3.ab3@20267>     LSL.w #1,D1
0002FCD0 <AmiBlitz3.ab3@20268>     BCC.w 'shskip
0002FCD2 <AmiBlitz3.ab3@20269>     ADDQ.w #1,D2
0002FCD4 <AmiBlitz3.ab3@20270>     MOVE.w D3,D4
0002FCD8 <AmiBlitz3.ab3@20273>   DBF D3,'shloop
0002FCDA <AmiBlitz3.ab3@20275>   SUBQ.w #1,D2
0002FCDE <AmiBlitz3.ab3@20276>    BNE.w 'domul
0002FCE0 <AmiBlitz3.ab3@20277>   ADDQ.w #4,A7           ; was 2
0002FCE2 <AmiBlitz3.ab3@20278>   MOVE.w D4,D1
0002FCE6 <AmiBlitz3.ab3@20279>    BEQ.w 'done
0002FCEA <AmiBlitz3.ab3@20280>   CMP.w #$8,D1
0002FCEE <AmiBlitz3.ab3@20281>    BCS.w 'once
0002FCF2 <AmiBlitz3.ab3@20282>   SUBI.w #$8,D1
0002FCF6 <AmiBlitz3.ab3@20283>    BSR.w 'once
0002FCF8 <AmiBlitz3.ab3@20284>   MOVEQ.l #$00,D1
0002FCFA <AmiBlitz3.ab3@20287>   LSL.w #8,D1
0002FCFC <AmiBlitz3.ab3@20288>   LSL.w #1,D1
0002FD00 <AmiBlitz3.ab3@20289>   ORI.w #$E188,D1
0002FD06 <AmiBlitz3.ab3@20290>   OR.w regnum,D1
0002FD0A <AmiBlitz3.ab3@20291>  BRA.w writeword
0002FD0C <AmiBlitz3.ab3@20294>  RTS
0002FD0E <AmiBlitz3.ab3@20298>   MOVEQ #0,d1
0002FD14 <AmiBlitz3.ab3@20299>   MOVE.w regnum,D1
0002FD16 <AmiBlitz3.ab3@20301>   LSL.l #8,D1
0002FD18 <AmiBlitz3.ab3@20304>   LSL.l #4,d1
0002FD1E <AmiBlitz3.ab3@20308>   OR.l #$4c3c0000,d1
0002FD24 <AmiBlitz3.ab3@20309>   OR.w regnum,d1
0002FD28 <AmiBlitz3.ab3@20310>   BSR.w writelong          ; was writeword
0002FD2A <AmiBlitz3.ab3@20312>   MOVE.l (A7)+,D1
0002FD2E <AmiBlitz3.ab3@20315> BRA writelong
0002FD34 <AmiBlitz3.ab3@20322>   MOVE.l destpointer,-(A7)
0002FD36 <AmiBlitz3.ab3@20323>   MOVEQ.l #-$01,D7
0002FD3A <AmiBlitz3.ab3@20326>     BSR.w findhilib
0002FD3E <AmiBlitz3.ab3@20327>      BEQ.w 'done
0002FD42 <AmiBlitz3.ab3@20328>     TST.w $C(A2)
0002FD46 <AmiBlitz3.ab3@20329>      BPL.w 'loop
0002FD4A <AmiBlitz3.ab3@20330>     MOVE.l $16(A2),D1
0002FD4E <AmiBlitz3.ab3@20331>     BEQ.w 'loop
0002FD52 <AmiBlitz3.ab3@20333>     MOVE.w $4(A2),D1                                       ; check state in D1 and do some things
0002FD56 <AmiBlitz3.ab3@20334>     CMP.w #-$2,D1          ; was #allocvars
0002FD5A <AmiBlitz3.ab3@20335>      BNE.w 'notvar
0002FD5E <AmiBlitz3.ab3@20336>     BSR.w makevsize
0002FD62 <AmiBlitz3.ab3@20337>  BRA.w 'more
0002FD66 <AmiBlitz3.ab3@20340>     CMP.w #-$5C4,D1       ; was #debuglib
0002FD6A <AmiBlitz3.ab3@20341>      BNE.w 'notdebuglib
0002FD6E <AmiBlitz3.ab3@20345>     MOVE.w #$7000,D1      ;moveq #0,d0
0002FD76 <AmiBlitz3.ab3@20346>     BTST #$7,autorun
0002FD78 <AmiBlitz3.ab3@20347>     SNE D1
0002FD7C <AmiBlitz3.ab3@20348>     BSR.w writeword
0002FD80 <AmiBlitz3.ab3@20349>  BRA.w 'more
0002FD84 <AmiBlitz3.ab3@20352>     CMP.w #-$12D,D1       ; was 65235
0002FD88 <AmiBlitz3.ab3@20353>      BNE.w 'notstring1
0002FD8C <AmiBlitz3.ab3@20354>     BSR.w makessize
0002FD90 <AmiBlitz3.ab3@20355>  BRA.w 'more
0002FD94 <AmiBlitz3.ab3@20358>     CMP.w #-$1F5,D1       ; was 65035
0002FD98 <AmiBlitz3.ab3@20359>      BNE.w 'notexit
0002FD9C <AmiBlitz3.ab3@20361>     MOVE.w #$203C,D1
0002FDA0 <AmiBlitz3.ab3@20362>     BSR.w writeword
0002FDA4 <AmiBlitz3.ab3@20363>     BSR.w addoff
0002FDAA <AmiBlitz3.ab3@20364>     MOVE.l endop,D1
0002FDAE <AmiBlitz3.ab3@20365>     BSR.w writelong
0002FDB2 <AmiBlitz3.ab3@20366>  BRA.w 'more
0002FDB6 <AmiBlitz3.ab3@20369>     CMP.w #-$3E9,D1       ; was 64535
0002FDBA <AmiBlitz3.ab3@20370>      BNE.w 'notdatalib
0002FDBE <AmiBlitz3.ab3@20371>     MOVE.w #$203C,D1
0002FDC2 <AmiBlitz3.ab3@20372>     BSR.w writeword
0002FDC6 <AmiBlitz3.ab3@20373>     BSR.w addoff
0002FDCC <AmiBlitz3.ab3@20374>     MOVE.l data2at,D1
0002FDD0 <AmiBlitz3.ab3@20375>     BSR.w writelong
0002FDD4 <AmiBlitz3.ab3@20376>  BRA.w 'more
0002FDD8 <AmiBlitz3.ab3@20379>     CMP.w #$1,D1          ; was #dhandlerlib
0002FDDC <AmiBlitz3.ab3@20380>      BNE.w 'notdhandler
0002FDE0 <AmiBlitz3.ab3@20381>     MOVE.w #$203C,D1
0002FDE4 <AmiBlitz3.ab3@20382>     BSR.w writeword
0002FDEA <AmiBlitz3.ab3@20383>     MOVE.l ptr_seg_debugger,D1
0002FDEE <AmiBlitz3.ab3@20384>     BSR.w writelong
0002FDF2 <AmiBlitz3.ab3@20388>     MOVE.l $16(A2),D1
0002FDFA <AmiBlitz3.ab3@20389>     MOVE.w #$FFFF,lasta6     ; was -1
0002FDFE <AmiBlitz3.ab3@20390>     BSR.w Amakelibsub
0002FE04 <AmiBlitz3.ab3@20391>     CMPI.w #$FFFE,$4(A2)     ; was #allocvars
0002FE08 <AmiBlitz3.ab3@20392>      BNE.w 'notvar2
0002FE0E <AmiBlitz3.ab3@20394>     MOVE.l intdata1,D1
0002FE12 <AmiBlitz3.ab3@20395>      BEQ.w 'notvar2
0002FE18 <AmiBlitz3.ab3@20396>     MOVE.w putidata1,D1
0002FE1C <AmiBlitz3.ab3@20397>     BSR.w writeword
0002FE20 <AmiBlitz3.ab3@20398>     BSR.w addoff
0002FE26 <AmiBlitz3.ab3@20399>     MOVE.l intdata1,D1
0002FE2A <AmiBlitz3.ab3@20400>     BSR.w writelong
0002FE2E <AmiBlitz3.ab3@20403>     MOVE.w #$2B40,D1
0002FE32 <AmiBlitz3.ab3@20404>     TST.w $1A(A2)
0002FE36 <AmiBlitz3.ab3@20405>      BEQ.w 'loop
0002FE3A <AmiBlitz3.ab3@20406>      BPL.w 'long
0002FE3E <AmiBlitz3.ab3@20407>     MOVE.w #$3B40,D1
0002FE42 <AmiBlitz3.ab3@20410>     BSR.w writeword
0002FE46 <AmiBlitz3.ab3@20411>     MOVE.w $A(A2),D1
0002FE4A <AmiBlitz3.ab3@20412>      BSR.w writeword
0002FE50 <AmiBlitz3.ab3@20413>     CMPI.w #$FFFA,$4(A2)   ; was #65530
0002FE54 <AmiBlitz3.ab3@20414>      BNE.w 'loop
0002FE56 <AmiBlitz3.ab3@20416>     MOVE.w D7,-(A7)
0002FE5C <AmiBlitz3.ab3@20417>     MOVE.w numstatic,D4
0002FE60 <AmiBlitz3.ab3@20418>      BEQ.w 'nostats
0002FE66 <AmiBlitz3.ab3@20419>     MOVE.l staticdata,D3
0002FE6C <AmiBlitz3.ab3@20420>      JSR datastart
0002FE70 <AmiBlitz3.ab3@20421>     MOVE.w #$C500,D1       ; was #alstat
0002FE74 <AmiBlitz3.ab3@20422>      BSR.w tokejsr2
0002FE7A <AmiBlitz3.ab3@20425>     MOVE.w maxsused,D4
0002FE7E <AmiBlitz3.ab3@20426>      BEQ.w 'nomaxs
0002FE84 <AmiBlitz3.ab3@20427>     MOVE.l maxsat,D3
0002FE8A <AmiBlitz3.ab3@20428>      JSR datastart
0002FE8E <AmiBlitz3.ab3@20429>     MOVE.w #$CF00,D1      ; was #setmaxs
0002FE92 <AmiBlitz3.ab3@20430>      BSR.w tokejsr2
0002FE94 <AmiBlitz3.ab3@20433>     MOVE.w (A7)+,D7
0002FE98 <AmiBlitz3.ab3@20435>  BRA.w 'loop
0002FE9E <AmiBlitz3.ab3@20441>   MOVE.l destpointer,D1
0002FEA0 <AmiBlitz3.ab3@20442>   CMP.l (A7),D1
0002FEA4 <AmiBlitz3.ab3@20443>    BNE.w 'yi
0002FEAC <AmiBlitz3.ab3@20444>   MOVE.w #$0008,noinits+2
0002FEB0 <AmiBlitz3.ab3@20445>  BRA.w 'yi3
0002FEB6 <AmiBlitz3.ab3@20448>   CLR.w noinits+2
0002FEBC <AmiBlitz3.ab3@20449>   MOVE.w dontwrite_nomemleft,D1
0002FEC0 <AmiBlitz3.ab3@20450>    BNE.w 'yi2
0002FEC6 <AmiBlitz3.ab3@20452>   TST.l newinitaddr
0002FECA <AmiBlitz3.ab3@20453>    BEQ 'l10
0002FED0 <AmiBlitz3.ab3@20454>   MOVE.l newinitaddr,D2
0002FED6 <AmiBlitz3.ab3@20455>   SUB.l destbufferstart,D2
0002FED8 <AmiBlitz3.ab3@20456>   ADDQ.l #2,d2
0002FEDE <AmiBlitz3.ab3@20458>   MOVEA.l newinitaddr,A0                                   ;write newinitcode
0002FEE2 <AmiBlitz3.ab3@20462>   MOVE.w #$4EB9,(A0)+
0002FEE4 <AmiBlitz3.ab3@20463>   MOVE.l (A7),(A0)+
0002FEE8 <AmiBlitz3.ab3@20466>  BRA 'l20
0002FEEE <AmiBlitz3.ab3@20469>   MOVEA.l destbufferstart,A0                               ;write initcode
0002FEF4 <AmiBlitz3.ab3@20470>   TST.b saved0
0002FEF8 <AmiBlitz3.ab3@20471>   BEQ 'l1
0002FEFC <AmiBlitz3.ab3@20472>   MOVE.w #$23c0,(a0)+
0002FEFE <AmiBlitz3.ab3@20473>   MOVE.l a0,a1
0002FF00 <AmiBlitz3.ab3@20474>   ADDQ.l #6,a1
0002FF02 <AmiBlitz3.ab3@20475>   MOVE.l a1,(a0)+
0002FF04 <AmiBlitz3.ab3@20477>   MOVEQ.l #$02,D2
0002FF08 <AmiBlitz3.ab3@20478>   BSR.w addhunkoffset
0002FF0C <AmiBlitz3.ab3@20480>   MOVE.w #$6004,(a0)+
0002FF12 <AmiBlitz3.ab3@20481>   MOVE.l #$4e714e71,(a0)+
0002FF16 <AmiBlitz3.ab3@20484>   MOVE.w #$4EB9,(A0)+
0002FF18 <AmiBlitz3.ab3@20485>   MOVE.l (A7),(A0)+
0002FF1A <AmiBlitz3.ab3@20486>   MOVEQ #2,d2
0002FF20 <AmiBlitz3.ab3@20487>   TST.b saved0
0002FF24 <AmiBlitz3.ab3@20488>   BEQ 'l20
0002FF26 <AmiBlitz3.ab3@20489>   MOVEQ.l #14,D2
0002FF2A <AmiBlitz3.ab3@20492>   BSR.w addhunkoffset
0002FF2E <AmiBlitz3.ab3@20493>   MOVE.w #$2039,(a0)+
0002FF30 <AmiBlitz3.ab3@20494>   MOVE.l a1,(a0)+
0002FF32 <AmiBlitz3.ab3@20495>   MOVEQ.l #20,d2
0002FF36 <AmiBlitz3.ab3@20498>   BSR.w addhunkoffset
0002FF3A <AmiBlitz3.ab3@20502>   MOVE.w #$4E75,D1
0002FF3E <AmiBlitz3.ab3@20503>   BSR.w writeword
0002FF40 <AmiBlitz3.ab3@20506>   ADDQ.w #4,A7
0002FF42 <AmiBlitz3.ab3@20507> RTS
0002FF46 <AmiBlitz3.ab3@20512>   Dc.b $22,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D1
0002FF4C <AmiBlitz3.ab3@20514>   Dc.b $23,$CD,$00,$00,$00,$00                             ;MOVE.L  A5,$00000000
0002FF52 <AmiBlitz3.ab3@20516>   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0002FF58 <AmiBlitz3.ab3@20521>   MOVE.l stringbuffer,D1
0002FF5C <AmiBlitz3.ab3@20522> BRA.w makesize
0002FF5E <AmiBlitz3.ab3@20527>   MOVEQ.l #$00,D1
0002FF64 <AmiBlitz3.ab3@20528>   MOVE.w globalvarpointer,D1
0002FF68 <AmiBlitz3.ab3@20529>   SUBI.w #$8000,D1
0002FF6C <AmiBlitz3.ab3@20530>   BNE.w makesize
0002FF6E <AmiBlitz3.ab3@20531>     MOVEQ.l #$08,D1
0002FF70 <AmiBlitz3.ab3@20536>   MOVE.l D1,-(A7)
0002FF74 <AmiBlitz3.ab3@20537>   MOVE.w #$203C,D1
0002FF78 <AmiBlitz3.ab3@20538>   BSR.w writeword
0002FF7A <AmiBlitz3.ab3@20539>   MOVE.l (A7)+,D1
0002FF7E <AmiBlitz3.ab3@20540> BRA.w writelong
0002FF80 <AmiBlitz3.ab3@20548>   MOVEQ.l #$00,D1
0002FF86 <AmiBlitz3.ab3@20549>   MOVEA.l libpointer,A1
0002FF8A <AmiBlitz3.ab3@20552>     CMPA.w #$0,A1
0002FF8E <AmiBlitz3.ab3@20553>     BEQ.w 'done
0002FF92 <AmiBlitz3.ab3@20554>       CMP.w $4(A1),D7
0002FF96 <AmiBlitz3.ab3@20555>       BLS.w 'next
0002FF9A <AmiBlitz3.ab3@20556>         CMP.w $4(A1),D1
0002FF9E <AmiBlitz3.ab3@20557>         BCC.w 'next
0002FFA2 <AmiBlitz3.ab3@20558>           MOVE.w $4(A1),D1
0002FFA4 <AmiBlitz3.ab3@20559>           MOVEA.l A1,A2
0002FFA6 <AmiBlitz3.ab3@20562>     MOVEA.l (A1),A1
0002FFAA <AmiBlitz3.ab3@20563>  BRA.w 'loop
0002FFAC <AmiBlitz3.ab3@20566>   MOVE.w D1,D7
0002FFAE <AmiBlitz3.ab3@20567> RTS
0002FFB0 <AmiBlitz3.ab3@20575>   MOVEQ.l #-$01,D1
0002FFB6 <AmiBlitz3.ab3@20576>   MOVEA.l libpointer,A1
0002FFBA <AmiBlitz3.ab3@20579>     CMPA.w #$0,A1
0002FFBE <AmiBlitz3.ab3@20580>      BEQ.w 'done
0002FFC2 <AmiBlitz3.ab3@20581>     CMP.w $4(A1),D7
0002FFC6 <AmiBlitz3.ab3@20582>      BCC.w 'next
0002FFCA <AmiBlitz3.ab3@20583>     CMP.w $4(A1),D1
0002FFCE <AmiBlitz3.ab3@20584>      BLS.w 'next
0002FFD2 <AmiBlitz3.ab3@20585>     MOVE.w $4(A1),D1
0002FFD4 <AmiBlitz3.ab3@20586>     MOVEA.l A1,A2
0002FFD6 <AmiBlitz3.ab3@20589>     MOVEA.l (A1),A1
0002FFDA <AmiBlitz3.ab3@20590> BRA.w 'loop
0002FFDC <AmiBlitz3.ab3@20593>   MOVE.w D1,D7
0002FFE0 <AmiBlitz3.ab3@20594>   CMP.w #-$1,D1
0002FFE2 <AmiBlitz3.ab3@20595> RTS
0002FFE8 <AmiBlitz3.ab3@20603>   ADDQ.w #1,globalvarpointer
0002FFF0 <AmiBlitz3.ab3@20604>   BCLR #$0,globalvarpointer+1
0002FFF2 <AmiBlitz3.ab3@20605>   MOVEQ.l #$00,D7
0002FFF6 <AmiBlitz3.ab3@20608>     BSR.w findlolib
0002FFFA <AmiBlitz3.ab3@20609>     BEQ.w 'azdone
0002FFFE <AmiBlitz3.ab3@20610>     TST.w $C(A2)
00030002 <AmiBlitz3.ab3@20611>     BPL.w 'loop
00030004 <AmiBlitz3.ab3@20614>     MOVEA.l A2,A1
00030008 <AmiBlitz3.ab3@20615>     ADDA.l $12(A1),A1
0003000C <AmiBlitz3.ab3@20616>     TST.w -$2(A1)
00030010 <AmiBlitz3.ab3@20617>     BEQ.w 'nomax
00030014 <AmiBlitz3.ab3@20621>     MOVE.l -$A(A1),D1
00030018 <AmiBlitz3.ab3@20622>     LEA $6(A2,D1.L),A3
0003001A <AmiBlitz3.ab3@20625>       TST.w (A3)+
0003001E <AmiBlitz3.ab3@20626>       BEQ.w 'plopf
00030020 <AmiBlitz3.ab3@20627>         ADDQ.w #2,A3
00030024 <AmiBlitz3.ab3@20628>  BRA.w 'plop
00030028 <AmiBlitz3.ab3@20631>     TST.l $4(A3)
0003002C <AmiBlitz3.ab3@20632>     BEQ.w 'nomax
00030030 <AmiBlitz3.ab3@20636>       MOVE.w freemax(PC),D1    ;move.w #x,-(a7)
00030034 <AmiBlitz3.ab3@20637>       BSR.w writeword
00030038 <AmiBlitz3.ab3@20638>       MOVE.w -$4(A1),D1
0003003C <AmiBlitz3.ab3@20639>       BSR.w writeword          ;x (max)
00030042 <AmiBlitz3.ab3@20640>       MOVE.l free,D1
00030046 <AmiBlitz3.ab3@20641>       MOVE.w -$6(A1),D1
0003004A <AmiBlitz3.ab3@20642>       BSR.w writelong          ;move.l x(a5),a3
00030050 <AmiBlitz3.ab3@20644>       MOVE.l destpointer,-(A7)
00030052 <AmiBlitz3.ab3@20645>       MOVEQ.l #$01,D1
00030056 <AmiBlitz3.ab3@20646>       MOVE.w -$2(A1),D2
00030058 <AmiBlitz3.ab3@20647>       LSL.w D2,D1
0003005A <AmiBlitz3.ab3@20648>       MOVE.w D1,-(A7)
0003005E <AmiBlitz3.ab3@20649>       MOVE.l -$A(A1),D1
00030062 <AmiBlitz3.ab3@20650>       BSR.w Amakelibsub
00030066 <AmiBlitz3.ab3@20651>       MOVE.w freemax3(PC),D1
0003006A <AmiBlitz3.ab3@20652>       BSR.w writeword          ;lea x(a3),a3
0003006C <AmiBlitz3.ab3@20653>       MOVE.w (A7)+,D1
00030070 <AmiBlitz3.ab3@20654>       BSR.w writeword
00030074 <AmiBlitz3.ab3@20655>       MOVE.l freemax2(PC),D1
00030078 <AmiBlitz3.ab3@20656>       BSR.w writelong
0003007A <AmiBlitz3.ab3@20657>       MOVE.l (A7)+,D1
00030080 <AmiBlitz3.ab3@20658>       SUB.l destpointer,D1
00030084 <AmiBlitz3.ab3@20659>       BSR.w writeword
00030088 <AmiBlitz3.ab3@20660>       MOVE.w freemax4(PC),D1
0003008C <AmiBlitz3.ab3@20661>       BSR.w writeword
00030090 <AmiBlitz3.ab3@20664>     MOVE.l $1C(A2),D1
00030094 <AmiBlitz3.ab3@20665>     BEQ.w 'loop
00030098 <AmiBlitz3.ab3@20669>     MOVE.w $4(A2),D1
0003009C <AmiBlitz3.ab3@20670>     CMP.w #-$2,D1              ; was #allocvars
000300A0 <AmiBlitz3.ab3@20671>     BNE.w 'notvfin
000300A4 <AmiBlitz3.ab3@20672>       BSR.w makevsize
000300A8 <AmiBlitz3.ab3@20673>  BRA.w 'more
000300AC <AmiBlitz3.ab3@20676>     CMP.w #-$12D,D1            ; was #65235
000300B0 <AmiBlitz3.ab3@20677>     BNE.w 'more
000300B4 <AmiBlitz3.ab3@20678>       BSR.w makessize
000300B8 <AmiBlitz3.ab3@20679>  BRA.w 'more
000300BC <AmiBlitz3.ab3@20683>     MOVE.l $1C(A2),D1
000300C4 <AmiBlitz3.ab3@20684>     MOVE.w #$FFFF,lasta6       ; was -1
000300C8 <AmiBlitz3.ab3@20685>     BSR.w Amakelibsub
000300CC <AmiBlitz3.ab3@20686>  BRA.w 'loop
000300CE <AmiBlitz3.ab3@20689> RTS
000300D2 <AmiBlitz3.ab3@20693> freemax:   Dc.b $3F,$3C,$00,$00                            ;MOVE.W  #$0000,-(A7)
000300D4 <AmiBlitz3.ab3@20695> freemax2:  Dc.b $53,$57                                    ;SUBQ.W  #1,(A7)
000300D8 <AmiBlitz3.ab3@20696>            Dc.b $66,$00,$FF,$FC                            ;BNE.W freemax2
000300DA <AmiBlitz3.ab3@20697> freemax4:  Dc.b $54,$4F                                    ;ADDQ.W  #2,A7
000300DE <AmiBlitz3.ab3@20698> freemax3:  Dc.b $47,$EB,$00,$00                            ;LEA $0000(A3),A3
000300E4 <AmiBlitz3.ab3@20703>   TST.b debugmode
000300E8 <AmiBlitz3.ab3@20704>    BEQ.b 'skip
000300EE <AmiBlitz3.ab3@20705>   TST.w debugversion
000300F2 <AmiBlitz3.ab3@20706>    BNE.b 'skip
000300F6 <AmiBlitz3.ab3@20707>   MOVE.w #$C308,D1
000300FA <AmiBlitz3.ab3@20708>  BRA.w Atokejsr
000300FC <AmiBlitz3.ab3@20711> RTS
00030104 <AmiBlitz3.ab3@20715>   MOVE.w #$FFFF,lasta6
00030108 <AmiBlitz3.ab3@20720>   MOVEM.l D0-d7/A0-a6,-(A7)
00030110 <AmiBlitz3.ab3@20721>   MOVE.b #1,nostringopt
00030116 <AmiBlitz3.ab3@20722>   JSR searchinstr
00030118 <AmiBlitz3.ab3@20723>   MOVE.l A3,D1
0003011A <AmiBlitz3.ab3@20724>   SUB.l A2,D1
0003011E <AmiBlitz3.ab3@20725>   BSR.w Amakelibsub
00030122 <AmiBlitz3.ab3@20726>   MOVEM.l (A7)+,d0-d7/a0-a6
00030124 <AmiBlitz3.ab3@20727> RTS
0003012A <AmiBlitz3.ab3@20734>   MOVE.l libisat,-(A7)                                   ;library write
00030130 <AmiBlitz3.ab3@20735>   MOVE.l A2,libisat
00030132 <AmiBlitz3.ab3@20737>   MOVEA.l A1,A2
00030134 <AmiBlitz3.ab3@20738>   MOVE.w (A2)+,D1
0003013A <AmiBlitz3.ab3@20739>   MOVE.l a2,lastinstructionaddr
0003013E <AmiBlitz3.ab3@20740>   ANDI.w #$FF,D1
00030140 <AmiBlitz3.ab3@20741>   ADDA.w D1,A2
00030142 <AmiBlitz3.ab3@20742>   EXG.l D0,A2
00030144 <AmiBlitz3.ab3@20743>   ADDQ.l #1,D0
00030148 <AmiBlitz3.ab3@20744>   BCLR #$0,D0
0003014A <AmiBlitz3.ab3@20745>   EXG.l D0,A2
0003014E <AmiBlitz3.ab3@20746> BRA.w makelsub2
00030154 <AmiBlitz3.ab3@20750>   MOVE.l libisat,-(A7)
0003015A <AmiBlitz3.ab3@20751>   MOVE.l A2,libisat
0003015C <AmiBlitz3.ab3@20752>   MOVEA.l A3,A2
00030160 <AmiBlitz3.ab3@20753> BRA.w makelsub2
00030162 <AmiBlitz3.ab3@20757>   MOVE.l a1,-(a7)
00030164 <AmiBlitz3.ab3@20760>   MOVE.l d0,a0
00030168 <AmiBlitz3.ab3@20761>   MOVE.l $a(a0),d0
0003016A <AmiBlitz3.ab3@20762>   MOVE.l d0,a1
00030172 <AmiBlitz3.ab3@20763>   CMP.l #8,4(a1)
00030176 <AmiBlitz3.ab3@20764>   BLE 'norec
00030178 <AmiBlitz3.ab3@20765>   MOVE.l a0,-(a7)
0003017E <AmiBlitz3.ab3@20766>   MOVE.l typebase,-(a7)
00030180 <AmiBlitz3.ab3@20767>   MOVEQ #0,d0
00030184 <AmiBlitz3.ab3@20768>   MOVE.w 4(a0),d0
0003018A <AmiBlitz3.ab3@20769>   ADD.l d0,typebase
0003018E <AmiBlitz3.ab3@20770>   MOVE.l $4(a1),d0
00030192 <AmiBlitz3.ab3@20771>   BSR scantype
00030198 <AmiBlitz3.ab3@20772>   MOVE.l (a7)+,typebase
0003019A <AmiBlitz3.ab3@20773>   MOVE.l (a7)+,a0
000301A0 <AmiBlitz3.ab3@20776>   CMP.l #newtype_string,d0
000301A4 <AmiBlitz3.ab3@20777>   BNE 'nostring
000301AA <AmiBlitz3.ab3@20778>   ADDQ #2,a2offset
000301B0 <AmiBlitz3.ab3@20779>   MOVE.l #$3f3c0000,d1
000301B2 <AmiBlitz3.ab3@20780>   MOVEQ #0,d0
000301B6 <AmiBlitz3.ab3@20781>   MOVE.w 4(a0),d0
000301BC <AmiBlitz3.ab3@20782>   ADD.l typebase,d0
000301BE <AmiBlitz3.ab3@20783>   MOVE.w d0,d1
000301C2 <AmiBlitz3.ab3@20784>   BSR writelong
000301C8 <AmiBlitz3.ab3@20785>   TST.b debugmode
000301CC <AmiBlitz3.ab3@20786>   BEQ 'l1a
000301CE <AmiBlitz3.ab3@20787>   MOVE.l d1,-(a7)
000301D4 <AmiBlitz3.ab3@20788>   MOVE.l #$c308,d1
000301DA <AmiBlitz3.ab3@20789>   JSR Atokejsr
000301DC <AmiBlitz3.ab3@20790>   MOVE.l (a7)+,d1
000301E0 <AmiBlitz3.ab3@20793>   TST.w 8(a0)
000301E4 <AmiBlitz3.ab3@20794>   BEQ 'nostring
000301E8 <AmiBlitz3.ab3@20795>   MOVEM.l d2/d3,-(a7)
000301EA <AmiBlitz3.ab3@20796>   MOVE.l d1,d2
000301EC <AmiBlitz3.ab3@20797>   MOVEQ #0,d3
000301F0 <AmiBlitz3.ab3@20798>   MOVE.w 8(a0),d3
000301F2 <AmiBlitz3.ab3@20799>   SUBQ.l #1,d3
000301F6 <AmiBlitz3.ab3@20800>   BEQ 'nostring2
000301F8 <AmiBlitz3.ab3@20803>   ADDQ.l #4,d2
000301FA <AmiBlitz3.ab3@20804>   MOVE.l d2,d1
000301FE <AmiBlitz3.ab3@20805>   BSR writelong
00030204 <AmiBlitz3.ab3@20806>   TST.b debugmode
00030208 <AmiBlitz3.ab3@20807>   BEQ 'l1
0003020E <AmiBlitz3.ab3@20808>   MOVE.l #$c308,d1
00030214 <AmiBlitz3.ab3@20809>   JSR Atokejsr
0003021A <AmiBlitz3.ab3@20812>   ADDQ #2,a2offset
0003021C <AmiBlitz3.ab3@20813>   SUBQ.l #1,d3
00030220 <AmiBlitz3.ab3@20814>   BNE 'loop
00030224 <AmiBlitz3.ab3@20817>   MOVEM.l (a7)+,d2/d3
00030226 <AmiBlitz3.ab3@20820>   MOVE.l (a0),d0
0003022A <AmiBlitz3.ab3@20821>   BNE 'more
0003022C <AmiBlitz3.ab3@20822>   MOVE.l (a7)+,a1
0003022E <AmiBlitz3.ab3@20823> RTS
00030232 <AmiBlitz3.ab3@20826> libisat:   Ds.l 1
00030238 <AmiBlitz3.ab3@20832>   MOVE.l libisat,-(A7)                                   
0003023E <AmiBlitz3.ab3@20833>   MOVE.l A2,libisat
00030242 <AmiBlitz3.ab3@20834>   LEA $6(A2,D1.L),A2
0003024A <AmiBlitz3.ab3@20839>   CMP.l #$3e19436c,$1c-8(a2)                               ;clear type
0003024E <AmiBlitz3.ab3@20840>   BEQ 'dowritevar
00030256 <AmiBlitz3.ab3@20841>   CMP.l #$3e18436f,$1c-8(a2)                               ;copy type
0003025A <AmiBlitz3.ab3@20842>   BEQ 'dowritevar
00030262 <AmiBlitz3.ab3@20843>   CMP.l #$3e175265,$1c(a2)
00030266 <AmiBlitz3.ab3@20844>   BEQ 'dowritevar
0003026E <AmiBlitz3.ab3@20845>   CMP.l #$3e165772,$1c(a2)
00030272 <AmiBlitz3.ab3@20846>   BNE 'nowritef
00030276 <AmiBlitz3.ab3@20849>   MOVEM.l a0-a2/d2,-(a7)
00030278 <AmiBlitz3.ab3@20850>   MOVEQ #0,d1
00030282 <AmiBlitz3.ab3@20851>   MOVE.l #0,typebase
00030286 <AmiBlitz3.ab3@20852>   MOVE.l $a(a3),a0
0003028A <AmiBlitz3.ab3@20853>   MOVE.l $4(a0),d0
00030290 <AmiBlitz3.ab3@20854>   CMP.l #8,d0
00030294 <AmiBlitz3.ab3@20855>   BLE 'notype
00030298 <AmiBlitz3.ab3@20856>   BSR scantype
0003029E <AmiBlitz3.ab3@20859>   MOVE.l #$3f3c0000,d1
000302A4 <AmiBlitz3.ab3@20860>   MOVE.w a2offset,d1
000302A8 <AmiBlitz3.ab3@20861>   BSR writelong
000302AE <AmiBlitz3.ab3@20862>   MOVE.l #$3f3c0000,d1
000302B2 <AmiBlitz3.ab3@20863>   MOVE.l $a(a3),a0
000302B6 <AmiBlitz3.ab3@20864>   MOVE.w 8(a0),d1
000302BA <AmiBlitz3.ab3@20865>   BSR writelong
000302C0 <AmiBlitz3.ab3@20866>   MOVE.l #$3f3cab12,d1
000302C4 <AmiBlitz3.ab3@20867>   BSR writelong
000302CA <AmiBlitz3.ab3@20868>   ADDQ.w #6,a2offset
000302CE <AmiBlitz3.ab3@20869>   MOVEM.l (a7)+,a0-a2/d2
000302D4 <AmiBlitz3.ab3@20872>   TST.b fpu
000302D8 <AmiBlitz3.ab3@20873>   BEQ 'nofpu2
000302E0 <AmiBlitz3.ab3@20874>   CMP.l #$496e7400,$1a(a2)
000302E4 <AmiBlitz3.ab3@20875>   BNE 'noint
000302E6 <AmiBlitz3.ab3@20876>   MOVEQ #0,d1
000302EC <AmiBlitz3.ab3@20877>   SUBQ.l #8,destpointer                                    ;fpu int
000302F2 <AmiBlitz3.ab3@20878>   CLR.w a2offset
000302F6 <AmiBlitz3.ab3@20879>   CMP.b #2,d2
000302FA <AmiBlitz3.ab3@20880>   BGT 'noword
000302FE <AmiBlitz3.ab3@20881>   MOVE.w #$48c0,d1
00030304 <AmiBlitz3.ab3@20882>   OR.w regnumstore,d1
00030308 <AmiBlitz3.ab3@20883>   BSR writeword
0003030C <AmiBlitz3.ab3@20884>  BRA 'exit2
00030310 <AmiBlitz3.ab3@20887>    CMP.b #3,d2
00030314 <AmiBlitz3.ab3@20888>         BNE 'nolong
00030318 <AmiBlitz3.ab3@20889>  BRA 'exit2
0003031C <AmiBlitz3.ab3@20892>    CMP.b #4,d2
00030320 <AmiBlitz3.ab3@20893>         BNE 'noquick
00030324 <AmiBlitz3.ab3@20894>         MOVE.w #$e080,d1
0003032A <AmiBlitz3.ab3@20895>         OR.w regnumstore,d1
0003032E <AmiBlitz3.ab3@20896>         BSR writeword
00030332 <AmiBlitz3.ab3@20897>         MOVE.w #$e080,d1
00030338 <AmiBlitz3.ab3@20898>         OR.w regnumstore,d1
0003033C <AmiBlitz3.ab3@20899>         BSR writeword
00030340 <AmiBlitz3.ab3@20900>  BRA 'exit2
00030342 <AmiBlitz3.ab3@20903>         MOVEQ #0,d0
00030344 <AmiBlitz3.ab3@20904>         MOVEQ #0,d1
0003034A <AmiBlitz3.ab3@20905>         MOVE.w regnumstore,d0
0003034C <AmiBlitz3.ab3@20906>         ASL.l #7,d0
00030352 <AmiBlitz3.ab3@20907>         OR.l #$f23c4428,d1                                 ;fsub.s 0.5,fpx
00030354 <AmiBlitz3.ab3@20908>         OR.l d0,d1
0003035A <AmiBlitz3.ab3@20910>         MOVE.l #$3f000000,d1
0003035C <AmiBlitz3.ab3@20912>         MOVEQ #0,d0
0003035E <AmiBlitz3.ab3@20913>         MOVEQ #0,d1
00030364 <AmiBlitz3.ab3@20914>         MOVE.w regnumstore,d0
00030366 <AmiBlitz3.ab3@20915>         ASL.l #7,d0
00030368 <AmiBlitz3.ab3@20916>         MOVE.l d0,d1
0003036E <AmiBlitz3.ab3@20917>         OR.l #$f2000003,d1                                 ;fintrz fpx
00030370 <AmiBlitz3.ab3@20918>         ASL.l #3,d0
00030372 <AmiBlitz3.ab3@20919>         OR.l d0,d1
00030376 <AmiBlitz3.ab3@20920>         BSR writelong
00030378 <AmiBlitz3.ab3@20921>         MOVEQ #0,d0
0003037E <AmiBlitz3.ab3@20922>         MOVE.w regnumstore,d0
00030380 <AmiBlitz3.ab3@20923>         ASL.l #7,d0
00030386 <AmiBlitz3.ab3@20924>         MOVE.l #$f2006000,d1                               ;fmove.l fp0,d0
00030388 <AmiBlitz3.ab3@20925>         OR.l d0,d1
0003038A <AmiBlitz3.ab3@20926>         ASL.l #1,d0
0003038C <AmiBlitz3.ab3@20927>         ASL.l #8,d0
0003038E <AmiBlitz3.ab3@20928>         OR.l d0,d1
00030392 <AmiBlitz3.ab3@20929>  BRA 'exit
00030398 <AmiBlitz3.ab3@20932>   CMP.w #$3c01,24(a2)
0003039C <AmiBlitz3.ab3@20933>   BNE 'noval
0003039E <AmiBlitz3.ab3@20934>   MOVE.l a2,-(a7)
000303A2 <AmiBlitz3.ab3@20935>   BSR.w makelsub3
000303A4 <AmiBlitz3.ab3@20936>   MOVE.l (a7)+,a2
000303A8 <AmiBlitz3.ab3@20937>  BRA 'exit2
000303B0 <AmiBlitz3.ab3@20954>   CMP.l #$41627300,$1a(a2)
000303B4 <AmiBlitz3.ab3@20955>   BNE 'noabs
000303B6 <AmiBlitz3.ab3@20956>   MOVEQ #0,d1
000303BC <AmiBlitz3.ab3@20957>   MOVE.w regnumstore,d1
000303BE <AmiBlitz3.ab3@20958>   MOVE.w d1,d0
000303C0 <AmiBlitz3.ab3@20959>   ASL.w #7,d1
000303C2 <AmiBlitz3.ab3@20960>   ASL.w #8,d0
000303C4 <AmiBlitz3.ab3@20961>   ASL.w #2,d0
000303C6 <AmiBlitz3.ab3@20962>   OR.w d0,d1
000303CC <AmiBlitz3.ab3@20963>   SUBQ.l #8,destpointer                                    ;fpu abs
000303D0 <AmiBlitz3.ab3@20964>   MOVEM.l d3/d1,-(a7)
000303D4 <AmiBlitz3.ab3@20965>   MOVE.w #5,d3
000303D6 <AmiBlitz3.ab3@20966>   EXG d2,d3
000303DC <AmiBlitz3.ab3@20967>   MOVE.w regnum,-(a7)
000303E6 <AmiBlitz3.ab3@20968>   MOVE.w regnumstore,regnum
000303EA <AmiBlitz3.ab3@20969>   BSR writeconvertcode
000303F0 <AmiBlitz3.ab3@20970>   MOVE.w (a7)+,regnum
000303F2 <AmiBlitz3.ab3@20971>   EXG d2,d3
000303F6 <AmiBlitz3.ab3@20972>   MOVEM.l (a7)+,d3/d1
000303FC <AmiBlitz3.ab3@20973>   OR.l #$f2000018,d1
00030402 <AmiBlitz3.ab3@20974>   CLR.w a2offset
00030406 <AmiBlitz3.ab3@20975>  BRA 'exit
0003040A <AmiBlitz3.ab3@20978>   CMP.b #5,d2
0003040E <AmiBlitz3.ab3@20979>   BNE 'nofpu2
00030412 <AmiBlitz3.ab3@20980>   MOVE.b 24(a2),d0
00030416 <AmiBlitz3.ab3@20981>   CMP.b #$60,d0                                            ;nolib $edxx
0003041A <AmiBlitz3.ab3@20982>   BNE 'nofpu
0003041C <AmiBlitz3.ab3@20983>   MOVEQ #0,d1
00030422 <AmiBlitz3.ab3@20984>   MOVE.w regnumstore,d1
00030424 <AmiBlitz3.ab3@20985>   MOVE.w d1,d0
00030426 <AmiBlitz3.ab3@20986>   ASL.w #7,d1
00030428 <AmiBlitz3.ab3@20987>   ASL.w #8,d0
0003042A <AmiBlitz3.ab3@20988>   ASL.w #2,d0
0003042C <AmiBlitz3.ab3@20989>   OR.w d0,d1
00030430 <AmiBlitz3.ab3@20990>   MOVE.b 25(a2),d0
00030434 <AmiBlitz3.ab3@20991>   CMP.b #5,d0
00030438 <AmiBlitz3.ab3@20992>   BNE 'nocos
0003043E <AmiBlitz3.ab3@20993>   OR.l #$f200001d,d1                                       ;fpu cos
00030442 <AmiBlitz3.ab3@20994>  BRA 'exit
00030446 <AmiBlitz3.ab3@20997>   CMP.b #$c,d0
0003044A <AmiBlitz3.ab3@20998>   BNE 'nosqr
00030450 <AmiBlitz3.ab3@20999>   OR.l #$f2000004,d1                                       ;fpu sqr
00030454 <AmiBlitz3.ab3@21000>  BRA 'exit
00030458 <AmiBlitz3.ab3@21003>   CMP.b #$d,d0
0003045C <AmiBlitz3.ab3@21004>   BNE 'notan
00030462 <AmiBlitz3.ab3@21005>   OR.l #$f200000f,d1                                       ;fpu tan
00030466 <AmiBlitz3.ab3@21006>  BRA 'exit
0003046A <AmiBlitz3.ab3@21009>   CMP.b #$a,d0
0003046E <AmiBlitz3.ab3@21010>   BNE 'nosin
00030474 <AmiBlitz3.ab3@21011>   OR.l #$f200000e,d1                                       ;fpu sin
00030478 <AmiBlitz3.ab3@21012>  BRA 'exit
0003047C <AmiBlitz3.ab3@21015>   CMP.b #$3,d0
00030480 <AmiBlitz3.ab3@21016>   BNE 'noasin
00030486 <AmiBlitz3.ab3@21017>   OR.l #$f200000c,d1                                       ;fpu asin
0003048A <AmiBlitz3.ab3@21018>  BRA 'exit
0003048E <AmiBlitz3.ab3@21021>   CMP.b #$2,d0
00030492 <AmiBlitz3.ab3@21022>   BNE 'noacos
00030498 <AmiBlitz3.ab3@21023>   OR.l #$f200001c,d1                                       ;fpu acos
0003049C <AmiBlitz3.ab3@21024>  BRA 'exit
000304A0 <AmiBlitz3.ab3@21027>   CMP.b #$4,d0
000304A4 <AmiBlitz3.ab3@21028>   BNE 'noatan
000304AA <AmiBlitz3.ab3@21029>   OR.l #$f200000a,d1                                       ;fpu atan
000304AE <AmiBlitz3.ab3@21030>  BRA 'exit
000304B2 <AmiBlitz3.ab3@21033>   CMP.b #$e,d0
000304B6 <AmiBlitz3.ab3@21034>   BNE 'nohtan
000304BC <AmiBlitz3.ab3@21035>   OR.l #$f2000009,d1                                       ;fpu htan
000304C0 <AmiBlitz3.ab3@21036>  BRA 'exit
000304C4 <AmiBlitz3.ab3@21039>   CMP.b #$6,d0
000304C8 <AmiBlitz3.ab3@21040>   BNE 'nohcos
000304CE <AmiBlitz3.ab3@21041>   OR.l #$f2000019,d1                                       ;fpu hcos
000304D2 <AmiBlitz3.ab3@21042>  BRA 'exit
000304D6 <AmiBlitz3.ab3@21045>   CMP.b #$b,d0
000304DA <AmiBlitz3.ab3@21046>   BNE 'nohsin
000304E0 <AmiBlitz3.ab3@21047>   OR.l #$f2000002,d1                                       ;fpu hsin
000304E4 <AmiBlitz3.ab3@21048>  BRA 'exit
000304E8 <AmiBlitz3.ab3@21051>   CMP.b #$9,d0
000304EC <AmiBlitz3.ab3@21052>   BNE 'nolog
000304F2 <AmiBlitz3.ab3@21053>   OR.l #$f2000014,d1                                       ;fpu log
000304F6 <AmiBlitz3.ab3@21054>  BRA 'exit
000304FA <AmiBlitz3.ab3@21057>   CMP.b #$8,d0
000304FE <AmiBlitz3.ab3@21058>   BNE 'nolog10
00030504 <AmiBlitz3.ab3@21059>   OR.l #$f2000015,d1                                       ;fpu log10
00030508 <AmiBlitz3.ab3@21060>  BRA 'exit
0003050C <AmiBlitz3.ab3@21063>   CMP.b #$7,d0
00030510 <AmiBlitz3.ab3@21064>   BNE 'noexp
00030516 <AmiBlitz3.ab3@21065>   OR.l #$f2000010,d1                                       ;fpu exp
0003051A <AmiBlitz3.ab3@21066>  BRA 'exit
00030520 <AmiBlitz3.ab3@21069>   LEA fpuerr,a0
00030522 <AmiBlitz3.ab3@21070>   MOVE.l a0,-(a7)
00030528 <AmiBlitz3.ab3@21071>  JMP handle_compileerror
0003052C <AmiBlitz3.ab3@21075>   CMP.b #$3c,d0
00030530 <AmiBlitz3.ab3@21076>   BNE 'nofpu2
00030532 <AmiBlitz3.ab3@21077>   MOVEQ #0,d1
00030538 <AmiBlitz3.ab3@21078>       MOVE.w regnumstore,d1
0003053A <AmiBlitz3.ab3@21079>       MOVE.w d1,d0
0003053C <AmiBlitz3.ab3@21080>       ASL.w #7,d1
0003053E <AmiBlitz3.ab3@21081>       ASL.w #8,d0
00030540 <AmiBlitz3.ab3@21082>       ASL.w #2,d0
00030542 <AmiBlitz3.ab3@21083>       OR.w d0,d1
00030548 <AmiBlitz3.ab3@21084>       CMP.b #$03,25(a2)
0003054C <AmiBlitz3.ab3@21085>       BNE 'nosgn
00030552 <AmiBlitz3.ab3@21088>       SUBQ.l #8,destpointer                                ;fpu sgn
00030558 <AmiBlitz3.ab3@21089>         OR.l #$f200003a,d1
0003055C <AmiBlitz3.ab3@21090>         BSR writelong
00030562 <AmiBlitz3.ab3@21091>         CLR.w a2offset
00030568 <AmiBlitz3.ab3@21092>          MOVE.l #$F28E0006,d1
0003056C <AmiBlitz3.ab3@21093>          BSR writelong
00030572 <AmiBlitz3.ab3@21094>   MOVE.l #$7000600a,d1
00030576 <AmiBlitz3.ab3@21095>   BSR writelong
0003057C <AmiBlitz3.ab3@21096>   MOVE.l #$70014840,d1
00030580 <AmiBlitz3.ab3@21097>   BSR writelong
00030586 <AmiBlitz3.ab3@21098>   MOVE.l #$F292,d1
0003058A <AmiBlitz3.ab3@21099>   BSR writeword
00030590 <AmiBlitz3.ab3@21100>   MOVE.l #$000470FF,d1
00030594 <AmiBlitz3.ab3@21101>  BRA 'exit
0003059C <AmiBlitz3.ab3@21104>   CMP.l #"Frac",$1a(a2)
000305A0 <AmiBlitz3.ab3@21105>   BNE 'nofrac
000305A6 <AmiBlitz3.ab3@21106>  JMP notwork
000305AA <AmiBlitz3.ab3@21147>  BRA 'exit
000305AE <AmiBlitz3.ab3@21152>   BSR.w makelsub3                                          ;write lib code
000305B4 <AmiBlitz3.ab3@21153>   MOVE.l (A7)+,libisat
000305B6 <AmiBlitz3.ab3@21154>  RTS
000305BA <AmiBlitz3.ab3@21158>   BSR writelong
000305C0 <AmiBlitz3.ab3@21161>   MOVE.l (A7)+,libisat
000305C2 <AmiBlitz3.ab3@21162> RTS
000305C6 <AmiBlitz3.ab3@21166>   BSR.w fetchregs
000305CC <AmiBlitz3.ab3@21168>   TST.b debugmode
000305D0 <AmiBlitz3.ab3@21169>    BEQ.w 'norerr
000305D2 <AmiBlitz3.ab3@21171>   MOVE.l (A2),D1
000305D6 <AmiBlitz3.ab3@21172>   OR.l $8(A2),D1
000305DA <AmiBlitz3.ab3@21173>   BCLR #$0,D1
000305DC <AmiBlitz3.ab3@21174>   TST.l D1
000305E0 <AmiBlitz3.ab3@21175>    BEQ.w 'norerr
000305E2 <AmiBlitz3.ab3@21177>   MOVE.l (A2)+,D1
000305E6 <AmiBlitz3.ab3@21178>   BTST #$0,D1
000305EA <AmiBlitz3.ab3@21179>    BEQ.w 'skiptt
000305F0 <AmiBlitz3.ab3@21180>   TST.w blitzmode
000305F4 <AmiBlitz3.ab3@21181>    BPL.w blitzerr
000305FA <AmiBlitz3.ab3@21182>   TST.b debugmode
000305FE <AmiBlitz3.ab3@21183>    BEQ.w 'skiptt2
00030600 <AmiBlitz3.ab3@21184>   MOVE.l D1,-(A7)
00030604 <AmiBlitz3.ab3@21185>   MOVE.w #$C311,D1   ; was #inblitz,
00030608 <AmiBlitz3.ab3@21186>    BSR.w makebtst
0003060A <AmiBlitz3.ab3@21187>   MOVE.l (A7)+,D1
0003060E <AmiBlitz3.ab3@21190>   BCLR #$0,D1
00030610 <AmiBlitz3.ab3@21193>   TST.l D1
00030614 <AmiBlitz3.ab3@21195>    BSR.w doajsr
00030616 <AmiBlitz3.ab3@21196>   MOVE.l (A2)+,D1
0003061A <AmiBlitz3.ab3@21197>    BSR.w doajsrrout
0003061C <AmiBlitz3.ab3@21198>   MOVE.l (A2)+,D1
00030620 <AmiBlitz3.ab3@21199>    BSR.w doajsr
00030624 <AmiBlitz3.ab3@21200>  BRA.w 'more
0003062A <AmiBlitz3.ab3@21203>   BTST #$0,$3(A2)
0003062E <AmiBlitz3.ab3@21204>    BEQ.w 'penis
00030632 <AmiBlitz3.ab3@21208>   MOVE.w blitzmode(PC),D1
00030636 <AmiBlitz3.ab3@21209>    BPL.w blitzerr
0003063A <AmiBlitz3.ab3@21212>   MOVE.l $4(A2),D1
0003063E <AmiBlitz3.ab3@21213>    BSR.w doajsrrout
00030644 <AmiBlitz3.ab3@21216>   MOVEA.l libisat,A2
00030646 <AmiBlitz3.ab3@21217> RTS
0003064A <AmiBlitz3.ab3@21224>   BTST #$0,D1
0003064E <AmiBlitz3.ab3@21225>    BEQ.w 'doajsr
00030654 <AmiBlitz3.ab3@21226>   TST.w blitzmode
00030658 <AmiBlitz3.ab3@21227>    BMI.w amigaerr
0003065E <AmiBlitz3.ab3@21228>   TST.b debugmode
00030662 <AmiBlitz3.ab3@21229>    BEQ.w 'doajsr2      
00030664 <AmiBlitz3.ab3@21230>   MOVE.l D1,-(A7)
00030668 <AmiBlitz3.ab3@21231>   MOVE.w #$C312,D1     ; #inamiga,
0003066C <AmiBlitz3.ab3@21232>    BSR.w makebtst
0003066E <AmiBlitz3.ab3@21233>   MOVE.l (A7)+,D1
00030672 <AmiBlitz3.ab3@21236>   BCLR #$0,D1
00030674 <AmiBlitz3.ab3@21239>   TST.l D1
00030678 <AmiBlitz3.ab3@21242>    BEQ.w 'skip
0003067A <AmiBlitz3.ab3@21243>   MOVE.l A1,-(A7)
0003067E <AmiBlitz3.ab3@21244>    BSR.w doajsr2
00030680 <AmiBlitz3.ab3@21245>   MOVEA.l (A7)+,A1
00030682 <AmiBlitz3.ab3@21248> RTS
00030688 <AmiBlitz3.ab3@21252>   MOVEA.l libisat,A0
0003068E <AmiBlitz3.ab3@21253>   TST.w cfetchmode
00030692 <AmiBlitz3.ab3@21254>    BEQ.w 'nfetch
00030694 <AmiBlitz3.ab3@21255>   ADD.l A0,D1
00030696 <AmiBlitz3.ab3@21256>   MOVE.l D1,-(A7)
0003069A <AmiBlitz3.ab3@21257>   MOVE.w #$4EB9,D1
0003069E <AmiBlitz3.ab3@21258>    BSR.w writeword
000306A0 <AmiBlitz3.ab3@21259>   MOVE.l (A7)+,D1
000306A4 <AmiBlitz3.ab3@21260>  BRA.w writelong
000306A8 <AmiBlitz3.ab3@21267>   LEA $0(A0,D1.L),A1
000306AE <AmiBlitz3.ab3@21268>   CLR.w inline
000306B2 <AmiBlitz3.ab3@21271>   CMPI.b #$A0,(A1)+
000306B6 <AmiBlitz3.ab3@21272>    BNE.w 'ugly
000306B8 <AmiBlitz3.ab3@21273>   TST.b (A1)+
000306BC <AmiBlitz3.ab3@21274>    BEQ.w 'iszero
000306C2 <AmiBlitz3.ab3@21275>   CMPI.b #$1,-$1(A1)
000306C6 <AmiBlitz3.ab3@21276>    BEQ.w 'isone
000306CC <AmiBlitz3.ab3@21280>   MOVE.w (A1)+,inline
000306CE <AmiBlitz3.ab3@21281>   ADDQ.l #4,D1
000306D2 <AmiBlitz3.ab3@21282>  BRA.w 'cute
000306D8 <AmiBlitz3.ab3@21287>   TST.w blitzmode
000306DC <AmiBlitz3.ab3@21288>    BPL.w 'inamiga
000306E2 <AmiBlitz3.ab3@21290>   TST.b debugmode
000306E6 <AmiBlitz3.ab3@21291>    BEQ.w 'nobrerr
000306EA <AmiBlitz3.ab3@21292>   MOVE.w #$C311,D1       ; was #inblitz,
000306EE <AmiBlitz3.ab3@21293>    BSR.w makebtst
000306F0 <AmiBlitz3.ab3@21296>   MOVE.l (A1)+,D1
000306F4 <AmiBlitz3.ab3@21297>   LEA $0(A0,D1.L),A1
000306F8 <AmiBlitz3.ab3@21298>  BRA.w 'cute
000306FE <AmiBlitz3.ab3@21301>   TST.b debugmode
00030702 <AmiBlitz3.ab3@21302>    BEQ.w 'noarerr        
00030704 <AmiBlitz3.ab3@21303>   MOVE.l D1,-(A7)
00030708 <AmiBlitz3.ab3@21304>   MOVE.w #$C312,D1       ; was #inamiga,
0003070C <AmiBlitz3.ab3@21305>    BSR.w makebtst
0003070E <AmiBlitz3.ab3@21306>   MOVE.l (A7)+,D1
00030710 <AmiBlitz3.ab3@21309>   ADDQ.w #4,A1
00030712 <AmiBlitz3.ab3@21310>   ADDQ.l #6,D1
00030716 <AmiBlitz3.ab3@21311>  BRA.w 'cute
0003071C <AmiBlitz3.ab3@21314>   TST.w inline
00030720 <AmiBlitz3.ab3@21315>    BEQ.w 'notin
00030722 <AmiBlitz3.ab3@21317>   SUBQ.w #1,A1
00030724 <AmiBlitz3.ab3@21318>   MOVEA.l A1,A0
00030728 <AmiBlitz3.ab3@21319>   ADDA.w inline(PC),A1
0003072C <AmiBlitz3.ab3@21320>  BRA.w pokecode2
00030730 <AmiBlitz3.ab3@21323>   MOVEM.l a0/D1,-(A7)          ; was  d1,-(a7)
00030736 <AmiBlitz3.ab3@21325>   TST.w debugversion
0003073A <AmiBlitz3.ab3@21326>   BEQ 'l11
00030742 <AmiBlitz3.ab3@21327>   BTST #$7,link_debuginfo
00030746 <AmiBlitz3.ab3@21328>   BEQ.w 'l11
0003074C <AmiBlitz3.ab3@21329>   MOVE.l lastinstruction,d1
00030750 <AmiBlitz3.ab3@21330>   BEQ 'l11
00030756 <AmiBlitz3.ab3@21331>   CLR.l lastinstruction
0003075C <AmiBlitz3.ab3@21332>   CMP.l #$e000,d1
00030760 <AmiBlitz3.ab3@21333>   BGE 'ln99
00030766 <AmiBlitz3.ab3@21334>   LEA notf,a0
0003076C <AmiBlitz3.ab3@21335>   CMP.l #$c601,d1
00030770 <AmiBlitz3.ab3@21336>   BNE 'ln1
00030776 <AmiBlitz3.ab3@21337>   LEA strcpy,a0
0003077A <AmiBlitz3.ab3@21338>  BRA 'ln3
00030780 <AmiBlitz3.ab3@21341>   CMP.l #$c700,d1
00030784 <AmiBlitz3.ab3@21342>   BNE 'ln2
0003078A <AmiBlitz3.ab3@21343>   LEA strvar,a0
0003078E <AmiBlitz3.ab3@21344>  BRA 'ln3
00030794 <AmiBlitz3.ab3@21347>   CMP.l #$ce00,d1
00030798 <AmiBlitz3.ab3@21348>   BNE 'ln4
0003079E <AmiBlitz3.ab3@21349>   LEA strcmp,a0
000307A2 <AmiBlitz3.ab3@21350>  BRA 'ln3
000307A8 <AmiBlitz3.ab3@21353>   CMP.l #$ca00,d1
000307AC <AmiBlitz3.ab3@21354>   BNE 'ln5
000307B2 <AmiBlitz3.ab3@21355>   LEA qmul,a0
000307B6 <AmiBlitz3.ab3@21356>  BRA 'ln3
000307BC <AmiBlitz3.ab3@21359>   CMP.l #$d000,d1
000307C0 <AmiBlitz3.ab3@21360>      BNE 'ln6
000307C6 <AmiBlitz3.ab3@21361>      LEA _MaxLen,a0
000307CA <AmiBlitz3.ab3@21362>  BRA 'ln3
000307D0 <AmiBlitz3.ab3@21365>   CMP.l #$cb00,d1
000307D4 <AmiBlitz3.ab3@21366>   BNE 'ln3
000307DA <AmiBlitz3.ab3@21367>   LEA qdiv,a0
000307DE <AmiBlitz3.ab3@21368>  BRA 'ln3
000307E0 <AmiBlitz3.ab3@21371>   MOVE.l d1,a0
000307E4 <AmiBlitz3.ab3@21372>   LEA $8(a0),a0
000307E8 <AmiBlitz3.ab3@21375>   CMP.w #$ffff,(a0)+
000307EC <AmiBlitz3.ab3@21376>   BNE 'l1
000307F0 <AmiBlitz3.ab3@21377>   LEA 6(a0),a0
000307F4 <AmiBlitz3.ab3@21380>   MOVEM.l a1/a2/d7/d2,-(a7)
000307F6 <AmiBlitz3.ab3@21381>   MOVEQ #0,d2
000307FC <AmiBlitz3.ab3@21382>   LEA ptr_parameterstore,a1
000307FE <AmiBlitz3.ab3@21385>   ADDQ.l #1,d2
00030800 <AmiBlitz3.ab3@21386>   MOVE.b (a0)+,d0
00030804 <AmiBlitz3.ab3@21387> 
00030808 <AmiBlitz3.ab3@21388>   BNE 'nodollar
0003080C <AmiBlitz3.ab3@21389>   MOVE.b #"S",d0
00030810 <AmiBlitz3.ab3@21392>   CMP.b #"?",d0
00030814 <AmiBlitz3.ab3@21393>   BEQ 'nolabelwrite
00030816 <AmiBlitz3.ab3@21394>   MOVE.b d0,(a1)+
0003081A <AmiBlitz3.ab3@21395>   BNE 'l2
00030820 <AmiBlitz3.ab3@21396>   MOVE.w #"__",-1(a1)
00030822 <AmiBlitz3.ab3@21397>   ADDQ.l #2,d2
00030826 <AmiBlitz3.ab3@21398>   CLR.b 1(a1)
0003082C <AmiBlitz3.ab3@21399>   JSR findlabel2
00030830 <AmiBlitz3.ab3@21400>   BEQ 'l3
00030836 <AmiBlitz3.ab3@21401>   JSR addlabelhash
0003083A <AmiBlitz3.ab3@21404>   CLR.l 4(a2)
0003083E <AmiBlitz3.ab3@21405>   MOVE.l $14(a7),a0
00030842 <AmiBlitz3.ab3@21406>   MOVE.l $10(a7),d1
00030846 <AmiBlitz3.ab3@21407>   SUB.l $12(a0),d1
0003084A <AmiBlitz3.ab3@21408>   ADD.l $28(a0),d1
0003084E <AmiBlitz3.ab3@21409>   MOVE.l d1,8(a2)
00030852 <AmiBlitz3.ab3@21412>   MOVEM.l (a7)+,a1/a2/d7/d2
00030858 <AmiBlitz3.ab3@21415>   TST.b typecheck
0003085C <AmiBlitz3.ab3@21416>   BEQ 'p1
00030862 <AmiBlitz3.ab3@21417>   MOVE.l lasttoken,d1
00030868 <AmiBlitz3.ab3@21418>   CMP.l #$da01,d1                                          ;poke
0003086C <AmiBlitz3.ab3@21419>   BEQ 'lp1
00030872 <AmiBlitz3.ab3@21420>   CMP.l #$da02,d1                                          ;peek
00030876 <AmiBlitz3.ab3@21421>   BNE 'p1
0003087C <AmiBlitz3.ab3@21424>   TST.b peekaddrsize
00030880 <AmiBlitz3.ab3@21425>   BEQ 'p1
00030888 <AmiBlitz3.ab3@21426>   CMP.b #3,peekaddrsize
0003088C <AmiBlitz3.ab3@21427>   BNE errormsg_onlylong
00030892 <AmiBlitz3.ab3@21428>   CLR.b peekaddrsize
00030898 <AmiBlitz3.ab3@21436>    TST.b fpu
0003089C <AmiBlitz3.ab3@21437>   BNE 'optf
000308A2 <AmiBlitz3.ab3@21438>   TST.b fast
000308A6 <AmiBlitz3.ab3@21439>   BEQ 'l10
000308AE <AmiBlitz3.ab3@21445>   CMP.l #"Poke",20(a2)                                     ;poke
000308B2 <AmiBlitz3.ab3@21446>   BNE 'peekopt
000308B6 <AmiBlitz3.ab3@21447>   TST.b 24(a2)
000308BA <AmiBlitz3.ab3@21448>   BNE 'peekopt
000308BE <AmiBlitz3.ab3@21449>   CMP.b #3,d2
000308C2 <AmiBlitz3.ab3@21450>   BNE 'lw1
000308C8 <AmiBlitz3.ab3@21453>   MOVE.l #$21821990,d1
000308CC <AmiBlitz3.ab3@21454>  BRA.s 'exitjsr
000308D0 <AmiBlitz3.ab3@21457>   CMP.b #2,d2
000308D4 <AmiBlitz3.ab3@21458>   BNE 'lb1
000308DA <AmiBlitz3.ab3@21459>   MOVE.l #$31821990,d1
000308DE <AmiBlitz3.ab3@21460>  BRA.s 'exitjsr
000308E2 <AmiBlitz3.ab3@21463>   CMP.b #1,d2
000308E6 <AmiBlitz3.ab3@21464>   BNE 'lp3
000308EC <AmiBlitz3.ab3@21465>   MOVE.l #$11821990,d1
000308F0 <AmiBlitz3.ab3@21466>  BRA.s 'exitjsr
000308F4 <AmiBlitz3.ab3@21469>   CMP.b #5,d2
000308F8 <AmiBlitz3.ab3@21470>     BNE 'l10
000308FE <AmiBlitz3.ab3@21471>     TST.b fpu
00030902 <AmiBlitz3.ab3@21472>     BEQ 'll1
00030908 <AmiBlitz3.ab3@21473>      MOVE.l destpointer,a4
00030910 <AmiBlitz3.ab3@21474>     CMP.l #$f22d4500,-6(a4)
00030914 <AmiBlitz3.ab3@21475>     BNE 'noglob
0003091A <AmiBlitz3.ab3@21476>     TST.b doublepeek
0003091E <AmiBlitz3.ab3@21477>     BNE 'noglob
00030924 <AmiBlitz3.ab3@21478>     MOVE.w -2(a4),-4(a4)
0003092A <AmiBlitz3.ab3@21479>     MOVE.w #$21ad,-6(a4)
00030930 <AmiBlitz3.ab3@21480>     MOVE.w #$1990,-2(a4)
00030938 <AmiBlitz3.ab3@21481>     MOVE.w #9,peeksize
0003093A <AmiBlitz3.ab3@21482>     ADDQ #8,a7
0003093C <AmiBlitz3.ab3@21483>  RTS
00030944 <AmiBlitz3.ab3@21486>     CMP.l #$f22c4500,-6(a4)
00030948 <AmiBlitz3.ab3@21487>     BNE 'nolocal
0003094E <AmiBlitz3.ab3@21488>     MOVE.w -2(a4),-4(a4)
00030954 <AmiBlitz3.ab3@21489>     TST.b doublepeek                                       ;dont move longfix on double floats
00030958 <AmiBlitz3.ab3@21490>     BNE 'nolocal
0003095E <AmiBlitz3.ab3@21491>     MOVE.w #$21ac,-6(a4)
00030964 <AmiBlitz3.ab3@21492>     MOVE.w #$1990,-2(a4)
0003096C <AmiBlitz3.ab3@21493>     MOVE.w #9,peeksize
0003096E <AmiBlitz3.ab3@21494>     ADDQ #8,a7
00030970 <AmiBlitz3.ab3@21495>  RTS
00030974 <AmiBlitz3.ab3@21498>     MOVE.w #$f230,d1
00030978 <AmiBlitz3.ab3@21499>     BSR writeword
0003097E <AmiBlitz3.ab3@21500>   MOVE.l #$65001990,d1
00030984 <AmiBlitz3.ab3@21501>   TST.b doublepeek
00030988 <AmiBlitz3.ab3@21502>   BEQ 'exitjsr
0003098E <AmiBlitz3.ab3@21503>   OR.l   #$10000000,d1
00030990 <AmiBlitz3.ab3@21506>   ADDQ #8,a7
00030998 <AmiBlitz3.ab3@21507>   MOVE.w #9,peeksize
0003099C <AmiBlitz3.ab3@21508>  BRA writelong
000309A4 <AmiBlitz3.ab3@21511>   CMP.l #"Peek",20(a2)
000309A8 <AmiBlitz3.ab3@21512>   BNE 'l10
000309AC <AmiBlitz3.ab3@21513>   TST.b 24(a2)
000309B0 <AmiBlitz3.ab3@21514>   BNE 'l10
000309B8 <AmiBlitz3.ab3@21515>   CMP.w #7,peeksize
000309BC <AmiBlitz3.ab3@21516>   BEQ 'l10
000309C4 <AmiBlitz3.ab3@21517>    CMP.w #3,peeksize
000309C8 <AmiBlitz3.ab3@21518>    BNE.s 'lw1a
000309CE <AmiBlitz3.ab3@21521>   MOVE.l #$20301990,d1
000309D2 <AmiBlitz3.ab3@21522>  BRA 'exitjsr
000309DA <AmiBlitz3.ab3@21525>   CMP.w #2,peeksize
000309DE <AmiBlitz3.ab3@21526>    BNE.s 'lb1a
000309E4 <AmiBlitz3.ab3@21527>    MOVE.l #$30301990,d1
000309E8 <AmiBlitz3.ab3@21528>  BRA 'exitjsr
000309F0 <AmiBlitz3.ab3@21531>   CMP.w #1,peeksize
000309F4 <AmiBlitz3.ab3@21532>    BNE.s 'lf1
000309FA <AmiBlitz3.ab3@21533>    MOVE.l #$10301990,d1
000309FE <AmiBlitz3.ab3@21534>  BRA 'exitjsr
00030A06 <AmiBlitz3.ab3@21537>   CMP.w #5,peeksize
00030A0A <AmiBlitz3.ab3@21538>    BNE 'l10
00030A10 <AmiBlitz3.ab3@21539>    TST.b fpu
00030A14 <AmiBlitz3.ab3@21540>    BEQ 'll1a
00030A18 <AmiBlitz3.ab3@21541>    MOVE.w #$f230,d1
00030A1C <AmiBlitz3.ab3@21542>    BSR writeword
00030A1E <AmiBlitz3.ab3@21543>    MOVEQ #0,d1
00030A24 <AmiBlitz3.ab3@21544>    MOVE.w tempregnum,d1
00030A26 <AmiBlitz3.ab3@21545>    ASL.l #7,d1
00030A28 <AmiBlitz3.ab3@21546>    ASL.l #8,d1
00030A2A <AmiBlitz3.ab3@21547>    ASL.l #8,d1
00030A30 <AmiBlitz3.ab3@21548>    ADD.l #$44001990,d1
00030A36 <AmiBlitz3.ab3@21549>     TST.b doublepeek
00030A3A <AmiBlitz3.ab3@21550>     BEQ 'exitjsr2
00030A40 <AmiBlitz3.ab3@21551>     OR.l   #$10000000,d1
00030A44 <AmiBlitz3.ab3@21554>  BRA 'exitjsr
00030A48 <AmiBlitz3.ab3@21558>   MOVE.w #$4EB9,D1
00030A4C <AmiBlitz3.ab3@21559>    BSR.w writeword                                         ;writesysjsr
00030A50 <AmiBlitz3.ab3@21560>   MOVEM.l (A7)+,a0/D1        ; was  (a7)+,d1
00030A56 <AmiBlitz3.ab3@21561>    JSR addoff
00030A5A <AmiBlitz3.ab3@21562>   SUB.l $12(A0),D1
00030A5E <AmiBlitz3.ab3@21563>   ADD.l $28(A0),D1
00030A62 <AmiBlitz3.ab3@21564> BRA.w writelong
00030A64 <AmiBlitz3.ab3@21569>   MOVE.w D1,-(A7)
00030A68 <AmiBlitz3.ab3@21570>   MOVE.w tstmode(PC),D1
00030A6C <AmiBlitz3.ab3@21571>    BSR.w writeword
00030A70 <AmiBlitz3.ab3@21572>    BSR.w getbbase
00030A74 <AmiBlitz3.ab3@21573>    BSR.w writeword
00030A76 <AmiBlitz3.ab3@21574>   MOVE.w (A7)+,D1
00030A7A <AmiBlitz3.ab3@21575>   MOVEM.l D0/D3-D7/A0-A2/A4,-(A7)
00030A7E <AmiBlitz3.ab3@21576>    BSR.w Atokejsr
00030A82 <AmiBlitz3.ab3@21577>   MOVEM.l (A7)+,D0/D3-D7/A0-A2/A4
00030A84 <AmiBlitz3.ab3@21578> RTS
00030A88 <AmiBlitz3.ab3@21586>   MOVE.w blitzoff(PC),D1
00030A8C <AmiBlitz3.ab3@21587>   CMP.w #-$1,D1
00030A90 <AmiBlitz3.ab3@21588>    BNE.w 'done
00030A96 <AmiBlitz3.ab3@21589>   ADDQ.w #1,globalvarpointer
00030A9E <AmiBlitz3.ab3@21590>   BCLR #$0,globalvarpointer+1
00030AA4 <AmiBlitz3.ab3@21591>   MOVE.w globalvarpointer,D1
00030AAA <AmiBlitz3.ab3@21592>   MOVE.w D1,blitzoff
00030AB0 <AmiBlitz3.ab3@21593>   ADDQ.w #2,globalvarpointer
00030AB2 <AmiBlitz3.ab3@21596> RTS
00030AB6 <AmiBlitz3.ab3@21600> tstmode:    Dc.b $4A,$6D,$00,$00                           ;TST.W $0000(A5)
00030AB8 <AmiBlitz3.ab3@21603> inline:     Ds.w 1
00030ABA <AmiBlitz3.ab3@21604> blitzoff:   Dc.w $FFFF                                   ;-1 org source
00030ABC <AmiBlitz3.ab3@21605> blitzmode:  Ds.w 1                                       ;+=amiga, -=blitz
00030ABE <AmiBlitz3.ab3@21609>   MOVE.w (A2)+,D1
00030AC2 <AmiBlitz3.ab3@21610>    BEQ.w 'done
00030AC4 <AmiBlitz3.ab3@21611>   MOVE.w (A2)+,D2
00030AC8 <AmiBlitz3.ab3@21612>    BSR.w toreg
00030ACC <AmiBlitz3.ab3@21613>  BRA.w fetchregs
00030ACE <AmiBlitz3.ab3@21616> RTS
00030AD2 <AmiBlitz3.ab3@21622>   CMP.w #-$100,D2
00030AD6 <AmiBlitz3.ab3@21623>    BCC.w 'yeah
00030ADA <AmiBlitz3.ab3@21625>   BCLR #$F,D2
00030ADE <AmiBlitz3.ab3@21626>    BEQ.w 'nobm
00030AE4 <AmiBlitz3.ab3@21628>   TST.w blitzmode
00030AE8 <AmiBlitz3.ab3@21629>    BMI.w 'yeah
00030AEA <AmiBlitz3.ab3@21630>  RTS
00030AEE <AmiBlitz3.ab3@21633>   BCLR #$E,D2
00030AF2 <AmiBlitz3.ab3@21634>    BEQ.w 'yeah
00030AF8 <AmiBlitz3.ab3@21636>   TST.w blitzmode
00030AFC <AmiBlitz3.ab3@21637>    BPL.w 'yeah
00030AFE <AmiBlitz3.ab3@21638>  RTS
00030B04 <AmiBlitz3.ab3@21641>   JSR uselib
00030B06 <AmiBlitz3.ab3@21642>   TST.b D2
00030B0A <AmiBlitz3.ab3@21643>    BEQ.w 'norm
00030B0E <AmiBlitz3.ab3@21644>   CMP.b #$4,D2
00030B12 <AmiBlitz3.ab3@21645>    BNE.w 'suv
00030B16 <AmiBlitz3.ab3@21646>   MOVE.w #$0004,-(A7)
00030B1C <AmiBlitz3.ab3@21647>   MOVE.l #$FFFFFFFA,-(A7)                                  ;#-6,-(a7) org source
00030B20 <AmiBlitz3.ab3@21648>  BRA.w 'sendmd
00030B24 <AmiBlitz3.ab3@21651>   CMP.b #$3,D2
00030B28 <AmiBlitz3.ab3@21652>    BNE.w 'notnmax
00030B2A <AmiBlitz3.ab3@21653>   CLR.w -(A7)
00030B30 <AmiBlitz3.ab3@21654>   MOVE.l #$FFFFFFFC,-(A7)                                  ;#-4,-(a7) org source
00030B32 <AmiBlitz3.ab3@21660>   LSR.w #8,D2
00030B36 <AmiBlitz3.ab3@21661>   MOVE.w #$303C,D1                                         ;move.w #x,dn
00030B3A <AmiBlitz3.ab3@21662>   BTST #$7,D2
00030B3E <AmiBlitz3.ab3@21663>    BEQ.w 'skipad
00030B42 <AmiBlitz3.ab3@21664>   MOVE.w #$307C,D1                                         ;move.w #x,an
00030B46 <AmiBlitz3.ab3@21665>   CMP.w #$16,D2
00030B4A <AmiBlitz3.ab3@21666>    BNE.w 'skipad
00030B52 <AmiBlitz3.ab3@21667>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
00030B56 <AmiBlitz3.ab3@21670>   ANDI.w #$7,D2
00030B58 <AmiBlitz3.ab3@21671>   LSL.w #8,D2
00030B5A <AmiBlitz3.ab3@21672>   LSL.w #1,D2
00030B5C <AmiBlitz3.ab3@21673>   OR.w D2,D1
00030B60 <AmiBlitz3.ab3@21674>    BSR.w writeword
00030B64 <AmiBlitz3.ab3@21675>   MOVE.l $12(A1),D1
00030B66 <AmiBlitz3.ab3@21676>   ADD.l (A7)+,D1
00030B6A <AmiBlitz3.ab3@21677>   MOVE.w $0(A1,D1.L),D1
00030B6C <AmiBlitz3.ab3@21678>   ADD.w (A7)+,D1
00030B70 <AmiBlitz3.ab3@21679>  BRA.w writeword
00030B72 <AmiBlitz3.ab3@21682>   MOVE.w D2,-(A7)
00030B74 <AmiBlitz3.ab3@21683>   LSR.w #8,D2
00030B78 <AmiBlitz3.ab3@21684>   CMP.w #$16,D2
00030B7C <AmiBlitz3.ab3@21685>    BNE.w 'isnta6
00030B84 <AmiBlitz3.ab3@21686>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
00030B88 <AmiBlitz3.ab3@21689>   MOVE.l $12(A1),D1                                        ;objectspace
00030B8C <AmiBlitz3.ab3@21690>   MOVE.w -$6(A1,D1.L),-(A7)
00030B90 <AmiBlitz3.ab3@21691>    BSR.w makeregop
00030B94 <AmiBlitz3.ab3@21692>    BSR.w writeword
00030B96 <AmiBlitz3.ab3@21693>   MOVE.w (A7)+,D1
00030B98 <AmiBlitz3.ab3@21694>   MOVE.w (A7)+,D2
00030B9A <AmiBlitz3.ab3@21695>   TST.b D2
00030B9E <AmiBlitz3.ab3@21696>    BPL.w 'skippy1
00030BA2 <AmiBlitz3.ab3@21701>    BSR.w writeword                                         ;move.l x(a5),dn
00030BA4 <AmiBlitz3.ab3@21702>   MOVE.w D2,-(A7)                                          ;store reg used
00030BA8 <AmiBlitz3.ab3@21704>   ADDA.l $12(A1),A1
00030BAA <AmiBlitz3.ab3@21705>   MOVE.b D2,D1
00030BAE <AmiBlitz3.ab3@21706>   ANDI.w #$7,D1
00030BB4 <AmiBlitz3.ab3@21708>   TST.b debugmode
00030BB8 <AmiBlitz3.ab3@21709>    BEQ.w 'norerr
00030BBA <AmiBlitz3.ab3@21711>   MOVE.w D1,-(A7)
00030BBC <AmiBlitz3.ab3@21712>   LSL.w #8,D1
00030BBE <AmiBlitz3.ab3@21713>   LSL.w #1,D1
00030BC2 <AmiBlitz3.ab3@21714>   ORI.w #$B07C,D1                                          ;cmp #x,dn
00030BC6 <AmiBlitz3.ab3@21715>    BSR.w writeword
00030BCA <AmiBlitz3.ab3@21716>   MOVE.w -$4(A1),D1
00030BCE <AmiBlitz3.ab3@21717>    BSR.w writeword
00030BD2 <AmiBlitz3.ab3@21718>   MOVE.l maxchk(PC),D1                                  ;bcs
00030BD6 <AmiBlitz3.ab3@21719>    BSR.w writelong
00030BD8 <AmiBlitz3.ab3@21720>   MOVE.l A2,-(A7)
00030BDC <AmiBlitz3.ab3@21721>   MOVE.w #$C30A,D1
00030BE0 <AmiBlitz3.ab3@21722>    BSR.w Atokejsr
00030BE2 <AmiBlitz3.ab3@21723>   MOVEA.l (A7)+,A2
00030BE4 <AmiBlitz3.ab3@21724>   MOVE.w (A7)+,D1
00030BE8 <AmiBlitz3.ab3@21727>   MOVE.w -$2(A1),D2                                        ;shift amount
00030BEC <AmiBlitz3.ab3@21730>   CMP.w #$9,D2
00030BF0 <AmiBlitz3.ab3@21731>    BCS.w 'simp
00030BF4 <AmiBlitz3.ab3@21732>   MOVEM.w D1-D2,-(A7)
00030BF6 <AmiBlitz3.ab3@21734>   MOVEQ.l #$00,D2                                          ;!!!!!
00030BF8 <AmiBlitz3.ab3@21736>   LSL.w #8,D2
00030BFA <AmiBlitz3.ab3@21737>   LSL.w #1,D2
00030BFC <AmiBlitz3.ab3@21738>   OR.w D2,D1
00030C00 <AmiBlitz3.ab3@21739>   OR.w lsldn(PC),D1
00030C04 <AmiBlitz3.ab3@21740>    BSR.w writeword
00030C08 <AmiBlitz3.ab3@21741>   MOVEM.w (A7)+,D1-D2
00030C0A <AmiBlitz3.ab3@21742>   SUBQ.w #8,D2
00030C0E <AmiBlitz3.ab3@21743>  BRA.w 'shloop
00030C10 <AmiBlitz3.ab3@21746>   MOVE.w D1,-(A7)
00030C14 <AmiBlitz3.ab3@21747>   OR.w #$48c0,d1
00030C18 <AmiBlitz3.ab3@21748>   BSR writeword
00030C1A <AmiBlitz3.ab3@21749>   MOVE.w (a7),d1
00030C1C <AmiBlitz3.ab3@21750>   TST.w D2
00030C20 <AmiBlitz3.ab3@21751>   BEQ.w 'simp2
00030C24 <AmiBlitz3.ab3@21753>   ANDI.w #$7,D2                                            ;?????
00030C26 <AmiBlitz3.ab3@21755>   LSL.w #8,D2
00030C28 <AmiBlitz3.ab3@21756>   LSL.w #1,D2
00030C2A <AmiBlitz3.ab3@21757>   OR.w D2,D1
00030C2E <AmiBlitz3.ab3@21758>   OR.w lsldn(PC),D1
00030C32 <AmiBlitz3.ab3@21759>    BSR.w writeword
00030C34 <AmiBlitz3.ab3@21765>   MOVE.w (A7)+,D1
00030C38 <AmiBlitz3.ab3@21766>   ANDI.w #$7,D1
00030C3C <AmiBlitz3.ab3@21767>   OR.w maxdo(PC),D1
00030C3E <AmiBlitz3.ab3@21768>   MOVE.w (A7)+,D2
00030C40 <AmiBlitz3.ab3@21769>   LSL.w #1,D2
00030C44 <AmiBlitz3.ab3@21770>   ANDI.w #$E00,D2
00030C46 <AmiBlitz3.ab3@21771>   OR.w D2,D1
00030C4A <AmiBlitz3.ab3@21772>  BRA.w writeword
00030C4E <AmiBlitz3.ab3@21775>   CMP.b #$1,D2
00030C52 <AmiBlitz3.ab3@21776>    BEQ.w 'skippy
00030C54 <AmiBlitz3.ab3@21780>   ADDQ.w #4,D1
00030C5A <AmiBlitz3.ab3@21782>   TST.b debugmode
00030C5E <AmiBlitz3.ab3@21783>    BEQ.w 'skippy
00030C62 <AmiBlitz3.ab3@21785>    BSR.w writeword
00030C64 <AmiBlitz3.ab3@21786>   SWAP D1
00030C68 <AmiBlitz3.ab3@21787>   MOVE.w 'theretest(PC),D1
00030C6A <AmiBlitz3.ab3@21788>   SWAP D1
00030C6E <AmiBlitz3.ab3@21789>    BSR.w writelong
00030C72 <AmiBlitz3.ab3@21790>   MOVE.l 'theretest+4(PC),D1
00030C76 <AmiBlitz3.ab3@21791>    BSR.w writelong
00030C7A <AmiBlitz3.ab3@21792>   MOVE.l 'theretest+8(PC),D1
00030C7E <AmiBlitz3.ab3@21793>  BRA.w writelong
00030C82 <AmiBlitz3.ab3@21796>  BRA.w writeword
00030C86 <AmiBlitz3.ab3@21801>             Dc.b $4A,$AD,$00,$00                           ;TST.L  $0000(A5)
00030C8A <AmiBlitz3.ab3@21802>             Dc.b $66,$00,$00,$06                           ;BNE.W  'ttskip
00030C8C <AmiBlitz3.ab3@21803>             Dc.b $70,$01                                   ;MOVEQ  #$01,D0
00030C8E <AmiBlitz3.ab3@21804>             Dc.b $4E,$40                                   ;TRAP   #00
00030C90 <AmiBlitz3.ab3@21809>   LSR.w #8,D2
00030C94 <AmiBlitz3.ab3@21810>   CMP.b #$16,D2
00030C98 <AmiBlitz3.ab3@21811>    BNE.w 'nota6
00030C9C <AmiBlitz3.ab3@21812>   MOVE.w $A(A1),D1
00030CA2 <AmiBlitz3.ab3@21813>   CMP.w lasta6,D1
00030CA6 <AmiBlitz3.ab3@21814>    BEQ.w 'sk
00030CAC <AmiBlitz3.ab3@21815>   MOVE.w D1,lasta6
00030CB0 <AmiBlitz3.ab3@21818>    BSR.w makeregop
00030CB4 <AmiBlitz3.ab3@21819>   TST.w $1A(A1)
00030CB8 <AmiBlitz3.ab3@21820>    BPL.w 'long
00030CBC <AmiBlitz3.ab3@21821>   CMP.w stackop(PC),D1
00030CC0 <AmiBlitz3.ab3@21822>    BNE.w 'notst
00030CC6 <AmiBlitz3.ab3@21823>   SUBQ.w #2,a2offset
00030CCA <AmiBlitz3.ab3@21826>    ORI.w #$1000,D1
00030CCE <AmiBlitz3.ab3@21829>    BSR.w writeword
00030CD2 <AmiBlitz3.ab3@21830>   MOVE.w $A(A1),D1
00030CD6 <AmiBlitz3.ab3@21831>    BSR.w writeword
00030CD8 <AmiBlitz3.ab3@21834> RTS
00030CDA <AmiBlitz3.ab3@21838> lsldn:      Dc.b $E1,$88                 ;Dc.b $48 ;object long acsess    ;LSL.L   #8,D0
00030CDE <AmiBlitz3.ab3@21839> maxchk:     Dc.b $65,$00,$00,$08                                          ;BCS.W   maxchk_ok
00030CE4 <AmiBlitz3.ab3@21840>             Dc.b $4E,$B9,$00,$00,$00,$00                                  ;JSR     $00000000
00030CE6 <AmiBlitz3.ab3@21843> 
00030CE8 <AmiBlitz3.ab3@21846>             Dc.b $00,$00
00030CEC <AmiBlitz3.ab3@21847> stackop:    Dc.b $2F,$2D,$00,$00                                          ;MOVE.L  $0000(A5),-(A7)
00030CF0 <AmiBlitz3.ab3@21854>   CMP.b #$FF,D2
00030CF4 <AmiBlitz3.ab3@21855>    BNE.w 'notst
00030CF8 <AmiBlitz3.ab3@21856>   MOVE.w stackop(PC),D1
00030CFE <AmiBlitz3.ab3@21857>   ADDQ.w #4,a2offset
00030D00 <AmiBlitz3.ab3@21858>  RTS
00030D02 <AmiBlitz3.ab3@21861>   MOVE.l A3,-(A7)
00030D08 <AmiBlitz3.ab3@21862>   LEA regtransd,A3
00030D0C <AmiBlitz3.ab3@21863>   BTST #$4,D2
00030D10 <AmiBlitz3.ab3@21864>    BEQ.w 'skip
00030D16 <AmiBlitz3.ab3@21865>   LEA regtransa,A3
00030D1A <AmiBlitz3.ab3@21868>   ANDI.w #$7,D2
00030D1C <AmiBlitz3.ab3@21869>   MOVE.w D2,D1
00030D1E <AmiBlitz3.ab3@21870>   LSL.w #8,D1
00030D20 <AmiBlitz3.ab3@21871>   LSL.w #1,D1
00030D22 <AmiBlitz3.ab3@21872>   OR.w (A3),D1
00030D24 <AmiBlitz3.ab3@21873>   MOVEA.l (A7)+,A3
00030D26 <AmiBlitz3.ab3@21874> RTS
00030D2A <AmiBlitz3.ab3@21880>   CMP.w #$3C,D0
00030D2E <AmiBlitz3.ab3@21881>    BCS.w 'no
00030D32 <AmiBlitz3.ab3@21882>   CMP.w #$3E,D0
00030D36 <AmiBlitz3.ab3@21883>    BHI.w 'no
00030D3A <AmiBlitz3.ab3@21884>   SUBI.w #$3C,D0
00030D3C <AmiBlitz3.ab3@21885>   CMP.w D0,D0
00030D3E <AmiBlitz3.ab3@21888> RTS
00030D48 <AmiBlitz3.ab3@21901>   MOVE.w oldqflag,instringon
00030D4E <AmiBlitz3.ab3@21902>   MOVEA.l lastsourcepos,A5
00030D54 <AmiBlitz3.ab3@21911>   MOVE.w regnum,-(A7)
00030D5A <AmiBlitz3.ab3@21912>   CLR.w regnum
00030D60 <AmiBlitz3.ab3@21913>   MOVE.l destpointer,-(A7)
00030D66 <AmiBlitz3.ab3@21914>   MOVE.l destbufferend,-(A7)
00030D6C <AmiBlitz3.ab3@21915>   MOVE.w dontwrite_nomemleft,-(A7)
00030D72 <AmiBlitz3.ab3@21916>   MOVE.w lasta6,-(A7)
00030D78 <AmiBlitz3.ab3@21917>   MOVE.w cfetchmode,-(A7)
00030D7C <AmiBlitz3.ab3@21918>    BNE.w 'something
00030D86 <AmiBlitz3.ab3@21919>   MOVE.l destbufferend,oldlibat
00030D8C <AmiBlitz3.ab3@21920>   MOVEA.l constpcat,A0
00030D92 <AmiBlitz3.ab3@21921>   MOVE.l A0,destpointer
00030D96 <AmiBlitz3.ab3@21922>  BRA.w 'some2
00030D9C <AmiBlitz3.ab3@21927>   MOVEA.l destpointer,A0     ;continue in cmode buff
00030D9E <AmiBlitz3.ab3@21930>   MOVE.l A0,-(A7)
00030DA8 <AmiBlitz3.ab3@21931>   MOVE.l constlibat,destbufferend      ;for overflow
00030DAE <AmiBlitz3.ab3@21932>   CLR.w dontwrite_nomemleft
00030DB6 <AmiBlitz3.ab3@21934>   MOVE.w #$FFFF,lasta6                 ; was -1
00030DBE <AmiBlitz3.ab3@21935>   MOVE.w #$FFFF,cfetchmode             ; was -1
00030DC2 <AmiBlitz3.ab3@21939>     BSR.w arreval                      ;!
00030DC4 <AmiBlitz3.ab3@21941>    MOVE.l (a7),a0
00030F00 <AmiBlitz3.ab3@21943>  !newcalc
00030F04 <AmiBlitz3.ab3@21944>    BEQ 'l10
00030F06 <AmiBlitz3.ab3@21945>    MOVE.l d0,d3
00030F08 <AmiBlitz3.ab3@21946>    MOVEA.l (A7)+,A0
00030F0C <AmiBlitz3.ab3@21947>  BRA 'bc1
00030F10 <AmiBlitz3.ab3@21951>    MOVE.w #$2600,D1              ;move.l d0,d3
00030F16 <AmiBlitz3.ab3@21952>   OR.w regnum,D1
00030F1A <AmiBlitz3.ab3@21953>    BSR.w writeword
00030F1E <AmiBlitz3.ab3@21954>   MOVE.w #$4E75,D1               ;rts!
00030F22 <AmiBlitz3.ab3@21955>    BSR.w writeword
00030F28 <AmiBlitz3.ab3@21957>   MOVE.w dontwrite_nomemleft,D1
00030F2C <AmiBlitz3.ab3@21958>    BNE.w conmemerr
00030F2E <AmiBlitz3.ab3@21960>   MOVEA.l (A7)+,A0
00030F30 <AmiBlitz3.ab3@21962>   NOP
00030F36 <AmiBlitz3.ab3@21964>    JSR Aclearcache                                         ;simple expression
00030F38 <AmiBlitz3.ab3@21966>    JSR (A0)                                                ;writeresult
00030F3E <AmiBlitz3.ab3@21969>   MOVE.w (A7)+,cfetchmode
00030F44 <AmiBlitz3.ab3@21970>   MOVE.w (A7)+,lasta6
00030F4A <AmiBlitz3.ab3@21971>   MOVE.w (A7)+,dontwrite_nomemleft
00030F50 <AmiBlitz3.ab3@21972>   MOVE.l (A7)+,destbufferend
00030F56 <AmiBlitz3.ab3@21973>   MOVE.l (A7)+,destpointer
00030F5C <AmiBlitz3.ab3@21974>   MOVE.w (A7)+,regnum
00030F62 <AmiBlitz3.ab3@21979> JMP reget
00030F66 <AmiBlitz3.ab3@21982> oldlibat:   Ds.l 1
00030F6C <AmiBlitz3.ab3@21986>   LEA incdir,A0
00030F70 <AmiBlitz3.ab3@21989>   CMP.w #$22,D0     ;'"'
00030F74 <AmiBlitz3.ab3@21990>    BEQ.w 'skip
00030F76 <AmiBlitz3.ab3@21991>   MOVE.b D0,(A0)+
00030F78 <AmiBlitz3.ab3@21992>   TST.w D0
00030F7C <AmiBlitz3.ab3@21993>    BEQ.w 'done
00030F80 <AmiBlitz3.ab3@21994>    BMI.w syntaxerr
00030F86 <AmiBlitz3.ab3@21997>   JSR get1bytemain                                         ;_long
00030F8A <AmiBlitz3.ab3@21998>  BRA.w 'loop
00030F8C <AmiBlitz3.ab3@22001> RTS
00030F92 <AmiBlitz3.ab3@22008>   LEA ptr_parameterstore,A1                                ;getparameter
00030F98 <AmiBlitz3.ab3@22009>   LEA incdir,A0
00030F9A <AmiBlitz3.ab3@22010>   MOVEQ.l #-$01,D2
00030F9C <AmiBlitz3.ab3@22013>     ADDQ.w #1,D2
00030F9E <AmiBlitz3.ab3@22014>     MOVE.b (A0)+,(A1)+
00030FA2 <AmiBlitz3.ab3@22015>   BNE.w 'loop0
00030FA4 <AmiBlitz3.ab3@22016>   SUBQ.w #1,A1
00030FAE <AmiBlitz3.ab3@22019>   MOVE.w oldqflag,instringon
00030FB4 <AmiBlitz3.ab3@22020>   MOVEA.l lastsourcepos,A5
00030FBA <AmiBlitz3.ab3@22024>   JSR get1bytemain
00030FBC <AmiBlitz3.ab3@22025>   TST.w D0
00030FC0 <AmiBlitz3.ab3@22026>    BMI.w syntaxerr
00030FC4 <AmiBlitz3.ab3@22027>   CMP.b #$22,D0         ;'"'
00030FC8 <AmiBlitz3.ab3@22028>    BEQ.w 'loop
00030FCA <AmiBlitz3.ab3@22029>   MOVE.b D0,(A1)+
00030FCE <AmiBlitz3.ab3@22030>    BEQ.w 'done
00030FD0 <AmiBlitz3.ab3@22031>   ADDQ.w #1,D2
00030FD4 <AmiBlitz3.ab3@22032>  BRA.w 'loop
00030FD6 <AmiBlitz3.ab3@22035>   TST.w D2
00030FDA <AmiBlitz3.ab3@22036>    BEQ.w syntaxerr
00030FDC <AmiBlitz3.ab3@22037> RTS
00030FE2 <AmiBlitz3.ab3@22044>   MOVEA.l constantbase,A2
00030FE6 <AmiBlitz3.ab3@22046>   MOVEA.l $E(A2),A5
00030FEC <AmiBlitz3.ab3@22048>   MOVE.l a5,includesourceline
00030FF2 <AmiBlitz3.ab3@22049>   LEA inctab,a0
00030FF8 <AmiBlitz3.ab3@22050>   MOVE.w ininclude,d0
00030FFC <AmiBlitz3.ab3@22051>   MOVE.l $0(a0,d0*4),d0
00031000 <AmiBlitz3.ab3@22053>   MOVEA.l $4(A2),A0
00031004 <AmiBlitz3.ab3@22055>   LEA $0(A0,D0.l),A0   ;end of buffer!
00031006 <AmiBlitz3.ab3@22056>   MOVEA.l A5,A1
00031008 <AmiBlitz3.ab3@22059>     CMPA.l A0,A1
0003100C <AmiBlitz3.ab3@22060>      BCC.w readpend
0003100E <AmiBlitz3.ab3@22061>   TST.b (A1)+
00031012 <AmiBlitz3.ab3@22062>   BNE.w 'loop
00031016 <AmiBlitz3.ab3@22063> BRA.w imakeend
0003101A <AmiBlitz3.ab3@22068>   MOVEA.l $4(A2),A1
0003101C <AmiBlitz3.ab3@22071>   CMPA.l A0,A5
00031020 <AmiBlitz3.ab3@22072>   BCC.w 'skip
00031022 <AmiBlitz3.ab3@22073>   MOVE.b (A5)+,(A1)+
00031026 <AmiBlitz3.ab3@22074>  BRA.w 'loop
00031028 <AmiBlitz3.ab3@22077>   MOVE.l A1,D0
0003102C <AmiBlitz3.ab3@22078>   SUB.l $4(A2),D0
00031032 <AmiBlitz3.ab3@22080>   LEA inctab,a0
00031034 <AmiBlitz3.ab3@22081>   MOVEQ #0,d1
0003103A <AmiBlitz3.ab3@22082>   MOVE.w ininclude,d1
0003103E <AmiBlitz3.ab3@22083>   MOVE.l d0,0(a0,d1*4)
00031044 <AmiBlitz3.ab3@22086>   MOVEA.l _dosbase,A6
00031048 <AmiBlitz3.ab3@22087>   MOVE.l $8(A2),D1
0003104A <AmiBlitz3.ab3@22088>   MOVE.l A1,D2
00031050 <AmiBlitz3.ab3@22090>   MOVE.l D2,include_base
00031056 <AmiBlitz3.ab3@22091>   MOVE.l #$10000000,d3                                     ;load whole file
00031058 <AmiBlitz3.ab3@22094>   SUB.l D0,D3
0003105C <AmiBlitz3.ab3@22096>    JSR _Read(A6)
0003105E <AmiBlitz3.ab3@22098>   TST.l D0
00031062 <AmiBlitz3.ab3@22099>    BMI.w error_reading_file
00031066 <AmiBlitz3.ab3@22101>    BEQ.w closeinc
0003106C <AmiBlitz3.ab3@22102>    MOVE.l D0,include_length
000310AE <AmiBlitz3.ab3@22103>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
000310D8 <AmiBlitz3.ab3@22104>    !basic
000310E8 <AmiBlitz3.ab3@22105>    ilen.l  = Peek.l(?include_length)
000310F8 <AmiBlitz3.ab3@22106>    ibase.l = Peek.l(?include_base)
00031108 <AmiBlitz3.ab3@22107>    ido.l   = Peek.l(?include_process)
00031118 <AmiBlitz3.ab3@22108>    *tn.preprocessor = Peek.l(?include_preprocessor)
00031122 <AmiBlitz3.ab3@22109>    If ido
00031134 <AmiBlitz3.ab3@22110>      ioffset.l = SkipXtraHeader{ibase,ilen}
0003115A <AmiBlitz3.ab3@22111>      nilen.l = preproc_Tokenize{*tn,ibase+ioffset,ibase,ilen-ioffset}
0003116C <AmiBlitz3.ab3@22112>      If nilen>0
0003117C <AmiBlitz3.ab3@22116>        Poke.l ?include_length,nilen
0003119A <AmiBlitz3.ab3@22119>    !asm
000311A4 <AmiBlitz3.ab3@22120>    MOVE.l #0,include_process
000311AA <AmiBlitz3.ab3@22121>    MOVE.l include_length,D0
000311B0 <AmiBlitz3.ab3@22122>    LEA inctab,a0
000311B2 <AmiBlitz3.ab3@22123>    MOVEQ #0,d1
000311B8 <AmiBlitz3.ab3@22124>    MOVE.w ininclude,d1
000311BC <AmiBlitz3.ab3@22125>    ADD.l d0,0(a0,d1*4)
000311C0 <AmiBlitz3.ab3@22129>   MOVEA.l $4(A2),A5
000311C4 <AmiBlitz3.ab3@22132>    MOVE.l 0(a0,d1*4),d0
000311C8 <AmiBlitz3.ab3@22134>   CLR.b $0(A5,D0.l)
000311CA <AmiBlitz3.ab3@22137>   MOVEA.l A5,A0
000311CC <AmiBlitz3.ab3@22140>     TST.b (A0)+
000311D0 <AmiBlitz3.ab3@22141>   BNE.w 'loop2
000311D4 <AmiBlitz3.ab3@22142>   MOVE.l A0,$E(A2)
000311D6 <AmiBlitz3.ab3@22143> RTS
000311DA <AmiBlitz3.ab3@22146> include_length:        Dc.l 0                              ; for tokenizer!
000311DE <AmiBlitz3.ab3@22147> include_base:          Dc.l 0
000311E2 <AmiBlitz3.ab3@22148> include_process:       Dc.l 0
000311E6 <AmiBlitz3.ab3@22149> include_preprocessor:  Dc.l 0
000311EA <AmiBlitz3.ab3@22153>   MOVE.l $8(A2),D1
000311F0 <AmiBlitz3.ab3@22154>   MOVEA.l _dosbase,A6
000311F4 <AmiBlitz3.ab3@22155>   JSR _Close(a6)
000311FA <AmiBlitz3.ab3@22156>   MOVEA.l _execbase,A6
000311FE <AmiBlitz3.ab3@22157>   MOVEA.l $4(A2),A1
00031204 <AmiBlitz3.ab3@22158>   MOVE.l #$400*8,D0         ; #inclen                               ;exit include
00031208 <AmiBlitz3.ab3@22163>   JSR _FreeVec(a6)
0003120E <AmiBlitz3.ab3@22166>   MOVE.l (A2),constantbase
00031210 <AmiBlitz3.ab3@22167>   MOVEA.l A2,A1
00031212 <AmiBlitz3.ab3@22168>   MOVEQ.l #$00,D0
00031216 <AmiBlitz3.ab3@22169>   MOVE.b $12(A2),D0
0003121C <AmiBlitz3.ab3@22170>   MOVEA.l _execbase,A6
00031222 <AmiBlitz3.ab3@22173>   MOVE.l mempool2,a0
00031226 <AmiBlitz3.ab3@22174>   JSR _FreePooled(A6)
0003122C <AmiBlitz3.ab3@22175>   JSR zero_includename
00031232 <AmiBlitz3.ab3@22177>   SUBQ.w #1,ininclude
00031236 <AmiBlitz3.ab3@22178>   BNE.w readinc
0003123C <AmiBlitz3.ab3@22182>   LEA _include,a0
00031240 <AmiBlitz3.ab3@22183>   MOVEM.l a0-a6/d0-d7,-(a7)
00031246 <AmiBlitz3.ab3@22184>   LEA ptr_parameterstore,a1
00031248 <AmiBlitz3.ab3@22187>     MOVE.b (a0)+,(a1)+
0003124C <AmiBlitz3.ab3@22188>   BNE 'l1b
0003124E <AmiBlitz3.ab3@22189>   MOVEQ #9,d2
00031254 <AmiBlitz3.ab3@22190>   JSR findlabel2
00031258 <AmiBlitz3.ab3@22191>   BNE 'd
0003125C <AmiBlitz3.ab3@22192>   CLR.l 8(a2)
00031260 <AmiBlitz3.ab3@22195>   MOVEM.l (a7)+,a0-a6/d0-d7
00031262 <AmiBlitz3.ab3@22197> RTS
00031268 <AmiBlitz3.ab3@22202>   MOVE.l unusedfunc,d0
0003126C <AmiBlitz3.ab3@22203>   BEQ 'noclear
00031270 <AmiBlitz3.ab3@22204>   MOVEM.l d0-d2/a0-a1/a6,-(a7)
00031272 <AmiBlitz3.ab3@22207>     MOVE.l d0,a1
00031276 <AmiBlitz3.ab3@22208>     MOVE.l 4(a1),d0
00031278 <AmiBlitz3.ab3@22209>     MOVE.l (a1),d2
0003127E <AmiBlitz3.ab3@22210>     MOVE.l _execbase,a6
00031282 <AmiBlitz3.ab3@22211>     JSR _FreeMem(a6)
00031284 <AmiBlitz3.ab3@22212>     MOVE.l d2,d0
00031288 <AmiBlitz3.ab3@22213>   BNE 'f1
0003128E <AmiBlitz3.ab3@22214>   CLR.l unusedfunc
00031292 <AmiBlitz3.ab3@22215>   MOVEM.l (a7)+,a0-a1/a6/d0-d2
00031294 <AmiBlitz3.ab3@22218> RTS
0003129A <AmiBlitz3.ab3@22223>   MOVEA.l xinclude_base,A2
000312A0 <AmiBlitz3.ab3@22224>   CLR.l xinclude_base
000312A4 <AmiBlitz3.ab3@22227>     CMPA.w #$0,A2
000312A8 <AmiBlitz3.ab3@22228>      BEQ.w 'done
000312AA <AmiBlitz3.ab3@22229>     MOVEQ.l #$00,D0
000312AE <AmiBlitz3.ab3@22230>     MOVE.b 4+8(A2),D0           ; was 4 org
000312B0 <AmiBlitz3.ab3@22231>     MOVEA.l A2,A1
000312B2 <AmiBlitz3.ab3@22232>     MOVEA.l (A2),A2
000312B8 <AmiBlitz3.ab3@22233>     MOVEA.l _execbase,A6
000312BE <AmiBlitz3.ab3@22236>     MOVE.l mempool2,a0
000312C2 <AmiBlitz3.ab3@22237>     JSR _FreePooled(A6)
000312C6 <AmiBlitz3.ab3@22239>  BRA.w 'loop
000312C8 <AmiBlitz3.ab3@22242> RTS
000312CE <AmiBlitz3.ab3@22246>   MOVEA.l constantbase,A2
000312D4 <AmiBlitz3.ab3@22247>   CLR.l constantbase
000312D8 <AmiBlitz3.ab3@22250>     CMPA.w #$0,A2
000312DC <AmiBlitz3.ab3@22251>      BEQ.w 'done
000312E0 <AmiBlitz3.ab3@22252>     MOVE.l $8(A2),D1
000312E4 <AmiBlitz3.ab3@22253>      BEQ.w 'noclose
000312EA <AmiBlitz3.ab3@22254>     MOVEA.l _dosbase,A6
000312EE <AmiBlitz3.ab3@22255>      JSR _Close(A6)
000312F2 <AmiBlitz3.ab3@22258>     MOVE.l $4(A2),D0
000312F6 <AmiBlitz3.ab3@22259>      BEQ.w 'skip
000312F8 <AmiBlitz3.ab3@22260>     MOVEA.l D0,A1
000312FE <AmiBlitz3.ab3@22261>     MOVE.l #$400*8,D0          ; was #inclen
00031304 <AmiBlitz3.ab3@22262>     MOVEA.l _execbase,A6
0003130A <AmiBlitz3.ab3@22265>     MOVE.l mempool,a0
0003130E <AmiBlitz3.ab3@22266>     JSR _FreeVec(a6)
00031310 <AmiBlitz3.ab3@22270>     MOVEQ.l #$00,D0
00031314 <AmiBlitz3.ab3@22271>     MOVE.b $12(A2),D0
00031316 <AmiBlitz3.ab3@22272>     MOVEA.l A2,A1
00031318 <AmiBlitz3.ab3@22273>     MOVEA.l (A2),A2
0003131E <AmiBlitz3.ab3@22274>     MOVEA.l _execbase,A6
00031324 <AmiBlitz3.ab3@22277>     MOVE.l mempool2,a0
00031328 <AmiBlitz3.ab3@22278>     JSR _FreePooled(A6)
0003132C <AmiBlitz3.ab3@22280>  BRA.w 'loop
0003132E <AmiBlitz3.ab3@22283> RTS
00031330 <AmiBlitz3.ab3@22290>   SWAP D0
00031334 <AmiBlitz3.ab3@22291>    BSR.w pokedata2
00031336 <AmiBlitz3.ab3@22292>   SWAP D0
0003133C <AmiBlitz3.ab3@22297>   MOVEA.l data2,A4
00031342 <AmiBlitz3.ab3@22298>   CMPA.l allat,A4
00031346 <AmiBlitz3.ab3@22299>    BCC.w 'over
00031348 <AmiBlitz3.ab3@22300>   MOVE.w D0,(A4)+
0003134E <AmiBlitz3.ab3@22301>   MOVE.l A4,data2
00031350 <AmiBlitz3.ab3@22302>  RTS
00031358 <AmiBlitz3.ab3@22305>   MOVE.w #$FFFF,dontwrite_nomemleft        ; was -1
0003135E <AmiBlitz3.ab3@22306>   ADDQ.l #2,data2
00031360 <AmiBlitz3.ab3@22307> RTS
00031366 <AmiBlitz3.ab3@22311>   MOVEA.l data2,A4
0003136C <AmiBlitz3.ab3@22312>   CMPA.l allat,A4
00031370 <AmiBlitz3.ab3@22313>    BCC.w 'over
00031372 <AmiBlitz3.ab3@22314>   MOVE.b D0,(A4)+
00031378 <AmiBlitz3.ab3@22315>   MOVE.l A4,data2
0003137A <AmiBlitz3.ab3@22316>  RTS
00031382 <AmiBlitz3.ab3@22319>   MOVE.w #$FFFF,dontwrite_nomemleft        ; was -1
00031388 <AmiBlitz3.ab3@22320>   ADDQ.l #1,data2
0003138A <AmiBlitz3.ab3@22321> RTS
0003138E <AmiBlitz3.ab3@22327>   CMP.w #$22,D0          ;'"'
00031392 <AmiBlitz3.ab3@22328>    BNE.w syntaxerr
00031398 <AmiBlitz3.ab3@22331>   JSR get1bytemain
0003139C <AmiBlitz3.ab3@22332>   CMP.b #$22,D0
000313A0 <AmiBlitz3.ab3@22333>    BEQ.w 'done
000313A2 <AmiBlitz3.ab3@22334>   TST.w D0
000313A6 <AmiBlitz3.ab3@22335>    BEQ.w syntaxerr
000313A8 <AmiBlitz3.ab3@22336>   MOVE.b D0,(A0)+
000313AC <AmiBlitz3.ab3@22337>  BRA.w 'getsp2
000313AE <AmiBlitz3.ab3@22340>   CLR.b (A0)
000313B0 <AmiBlitz3.ab3@22341> RTS
000313B2 <AmiBlitz3.ab3@22345>   TST.l D3
000313B4 <AmiBlitz3.ab3@22346> RTS
000313BA <AmiBlitz3.ab3@22352>   LEA ptr_parameterstore,A0
000313C0 <AmiBlitz3.ab3@22353>   LEA namebuff2,A1
000313C2 <AmiBlitz3.ab3@22356>     MOVE.b (A0)+,D0
000313C6 <AmiBlitz3.ab3@22357>     BEQ.w 'short
000313C8 <AmiBlitz3.ab3@22358>   CMP.b (A1)+,D0
000313CC <AmiBlitz3.ab3@22359>   BEQ.w 'loop
000313CE <AmiBlitz3.ab3@22360>  RTS
000313D0 <AmiBlitz3.ab3@22363>   TST.b (A1)
000313D4 <AmiBlitz3.ab3@22364>   BNE.w 'lt
000313D6 <AmiBlitz3.ab3@22365>  RTS
000313DA <AmiBlitz3.ab3@22368>   CMP.w #$1,D0
000313DC <AmiBlitz3.ab3@22369> RTS
000313E0 <AmiBlitz3.ab3@22376>   CMP.w #$2E,D0                ;"."                            ;dodeftype
000313E4 <AmiBlitz3.ab3@22377>    BNE.w syntaxerr
000313E8 <AmiBlitz3.ab3@22378>   BSR.w getparameter2
000313EE <AmiBlitz3.ab3@22379>   LEA newtypebase,A2
000313F2 <AmiBlitz3.ab3@22380>   BSR.w findtype
000313F6 <AmiBlitz3.ab3@22381>    BNE.w notypeerr
000313FC <AmiBlitz3.ab3@22383>   TST.b declare
00031400 <AmiBlitz3.ab3@22384>    BNE 'l1
00031406 <AmiBlitz3.ab3@22385>   TST.b declare2
0003140A <AmiBlitz3.ab3@22386>    BEQ 'l2
00031412 <AmiBlitz3.ab3@22389>   MOVE.b #2,nowdeclare
00031418 <AmiBlitz3.ab3@22393>   JSR reget
0003141C <AmiBlitz3.ab3@22394>    BNE.w 'more
00031422 <AmiBlitz3.ab3@22395>   MOVE.l A2,defaulttype
00031424 <AmiBlitz3.ab3@22396>  RTS
0003142A <AmiBlitz3.ab3@22402>   MOVE.l defaulttype,-(A7)
00031430 <AmiBlitz3.ab3@22403>   MOVE.l A2,defaulttype
00031434 <AmiBlitz3.ab3@22406>   BSR.w getparameter
00031438 <AmiBlitz3.ab3@22407>    BSR.w fetchvars
0003143C <AmiBlitz3.ab3@22408>   CMP.w #$2C,D0            ;","
00031440 <AmiBlitz3.ab3@22409>    BNE.w 'done
00031446 <AmiBlitz3.ab3@22410>    JSR get1bytemain                                        ; was BSR.w
0003144A <AmiBlitz3.ab3@22411>  BRA.w 'loopz
00031450 <AmiBlitz3.ab3@22414>   MOVE.l (A7)+,defaulttype
00031452 <AmiBlitz3.ab3@22415> RTS
00031456 <AmiBlitz3.ab3@22419>   LEA $4(A5),A2                                            ;fehler function
00031458 <AmiBlitz3.ab3@22422>   MOVE.l A2,D0
0003145C <AmiBlitz3.ab3@22427>   BSR.w getparameter
00031460 <AmiBlitz3.ab3@22428>   BSR.w fetchvars
00031464 <AmiBlitz3.ab3@22429>   BSR.w calcvar
00031468 <AmiBlitz3.ab3@22431>   CMP.b #$7,D2
0003146C <AmiBlitz3.ab3@22432>    BNE.w mismatcherr
00031470 <AmiBlitz3.ab3@22433>   MOVE.w varmode(PC),-(A7)
00031474 <AmiBlitz3.ab3@22434>   CMP.w #$3D,D0            ;"="
00031478 <AmiBlitz3.ab3@22435>    BNE.w syntaxerr
0003147C <AmiBlitz3.ab3@22436>   BTST #$F,D2
00031480 <AmiBlitz3.ab3@22437>    BNE.w 'already
00031484 <AmiBlitz3.ab3@22438>   MOVE.w maxprep1(PC),D1
00031488 <AmiBlitz3.ab3@22439>   BSR.w pokewda5s
0003148A <AmiBlitz3.ab3@22440>   MOVE.w D3,D1
0003148E <AmiBlitz3.ab3@22441>   BSR.w writeword
00031492 <AmiBlitz3.ab3@22444>   MOVE.w maxprep2(PC),D1
00031496 <AmiBlitz3.ab3@22445>   BSR.w writeword
0003149C <AmiBlitz3.ab3@22446>   ADDQ.w #1,regnum
0003149E <AmiBlitz3.ab3@22447>   MOVEQ.l #$03,D2
000314A2 <AmiBlitz3.ab3@22448>   BSR.w eval
000314A8 <AmiBlitz3.ab3@22449>   MOVE.l #$D000,D1              ; was #maxlen
000314AE <AmiBlitz3.ab3@22451>   MOVE.l d1,lastinstruction
000314B0 <AmiBlitz3.ab3@22453>   TST.w (A7)+
000314B4 <AmiBlitz3.ab3@22454>    BEQ.w Atokejsr
000314B6 <AmiBlitz3.ab3@22455>   ADDQ.w #1,D1
000314BA <AmiBlitz3.ab3@22456> BRA.w Atokejsr
000314BC <AmiBlitz3.ab3@22460>   MOVE.w D0,D1
000314C0 <AmiBlitz3.ab3@22461>    BPL.w syntaxerr
000314C4 <AmiBlitz3.ab3@22462>   BCLR #$F,D1
000314CA <AmiBlitz3.ab3@22463>    JSR searchinstr
000314CE <AmiBlitz3.ab3@22464>   MOVE.l $12(A2),D0
000314D2 <AmiBlitz3.ab3@22465>   TST.w -$2(A2,D0.L)
000314D6 <AmiBlitz3.ab3@22466>    BEQ.w freeerr
000314D8 <AmiBlitz3.ab3@22467>   MOVEQ.l #$02,D2
000314DA <AmiBlitz3.ab3@22468>   MOVE.l A2,-(A7)
000314DE <AmiBlitz3.ab3@22470>    BSR.w eval
000314E0 <AmiBlitz3.ab3@22472>   MOVEA.l (A7)+,A2
000314E6 <AmiBlitz3.ab3@22473>   MOVE.l A2,mymaxlib
000314EA <AmiBlitz3.ab3@22475>   ADDA.l $12(A2),A2
000314F0 <AmiBlitz3.ab3@22476>   TST.b debugmode
000314F4 <AmiBlitz3.ab3@22477>    BEQ.w 'pen
000314FA <AmiBlitz3.ab3@22481>   MOVE.w regnum,D1
000314FC <AmiBlitz3.ab3@22482>   LSL.w #8,D1
000314FE <AmiBlitz3.ab3@22483>   LSL.w #1,D1
00031502 <AmiBlitz3.ab3@22484>   ORI.w #$B07C,D1       ;cmp #x,dn
00031506 <AmiBlitz3.ab3@22485>    BSR.w writeword
0003150A <AmiBlitz3.ab3@22486>   MOVE.w -$4(A2),D1
0003150E <AmiBlitz3.ab3@22487>    BSR.w writeword
00031514 <AmiBlitz3.ab3@22488>   MOVE.l maxchk,D1      ;bcs
00031518 <AmiBlitz3.ab3@22489>    BSR.w writelong
0003151A <AmiBlitz3.ab3@22490>   MOVE.l A2,-(A7)
0003151E <AmiBlitz3.ab3@22491>   MOVE.w #$C30A,D1      ; was #maxerr,
00031522 <AmiBlitz3.ab3@22492>    BSR.w Atokejsr
00031524 <AmiBlitz3.ab3@22493>   MOVEA.l (A7)+,A2
00031528 <AmiBlitz3.ab3@22496>   MOVE.w -$2(A2),D2     ;# shifts
0003152E <AmiBlitz3.ab3@22499>   MOVE.w regnum,D1
00031534 <AmiBlitz3.ab3@22500>   OR.w lslimm,D1
00031538 <AmiBlitz3.ab3@22501>   CMP.w #$8,D2
0003153C <AmiBlitz3.ab3@22502>    BCS.w 'under
00031540 <AmiBlitz3.ab3@22503>    BSR.w writeword
00031542 <AmiBlitz3.ab3@22504>   SUBQ.w #8,D2
00031546 <AmiBlitz3.ab3@22505>    BNE.w 'loop
0003154A <AmiBlitz3.ab3@22506>  BRA.w 'shdone
0003154C <AmiBlitz3.ab3@22509>   MOVE.w D2,D0
0003154E <AmiBlitz3.ab3@22510>   LSL.w #8,D0
00031550 <AmiBlitz3.ab3@22511>   LSL.w #1,D0
00031552 <AmiBlitz3.ab3@22512>   OR.w D0,D1
00031556 <AmiBlitz3.ab3@22513>   BSR.w writeword
00031558 <AmiBlitz3.ab3@22516> RTS
0003155C <AmiBlitz3.ab3@22521>   Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0003155E <AmiBlitz3.ab3@22522>   Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
00031562 <AmiBlitz3.ab3@22526> mymaxlib:  Ds.l 1
00031566 <AmiBlitz3.ab3@22530>   BSR.w getmaxel
0003156A <AmiBlitz3.ab3@22532>   LEA free(PC),A0
0003156E <AmiBlitz3.ab3@22533>   LEA freef(PC),A1
00031574 <AmiBlitz3.ab3@22534>   MOVE.w -$6(A2),$2(A0)
00031578 <AmiBlitz3.ab3@22535>   BSR.w pokecode
0003157C <AmiBlitz3.ab3@22537>   MOVE.l -$A(A2),D1
00031580 <AmiBlitz3.ab3@22540>   BEQ.w nosuperr
00031584 <AmiBlitz3.ab3@22541>   MOVEA.l mymaxlib(PC),A2
00031588 <AmiBlitz3.ab3@22542> BRA.w Amakelibsub
0003158C <AmiBlitz3.ab3@22546>   BSR.w getmaxel
00031592 <AmiBlitz3.ab3@22548>   LEA use,A0
00031598 <AmiBlitz3.ab3@22549>   LEA usef,A1
0003159E <AmiBlitz3.ab3@22550>   MOVE.w -$6(A2),$2(A0)
000315A4 <AmiBlitz3.ab3@22551>   MOVE.w -$6(A2),-$2(A1)
000315A8 <AmiBlitz3.ab3@22552>   ADDQ.w #4,-$2(A1)
000315AC <AmiBlitz3.ab3@22553>   BSR.w pokecode
000315B0 <AmiBlitz3.ab3@22555>   MOVE.l -$E(A2),D1
000315B4 <AmiBlitz3.ab3@22557> BRA.w maxjsr
000315BA <AmiBlitz3.ab3@22562>   JSR get1bytemain
000315C0 <AmiBlitz3.ab3@22565>   MOVE.l firstiff,D0
000315C4 <AmiBlitz3.ab3@22566>    BEQ.w noiferr
000315C6 <AmiBlitz3.ab3@22567>   MOVEA.l D0,A0
000315CC <AmiBlitz3.ab3@22568>   CMPI.b #$1,$D(A0)
000315D0 <AmiBlitz3.ab3@22569>    BEQ.w illelseerr
000315D4 <AmiBlitz3.ab3@22570>   MOVE.w #$6000,D1
000315DA <AmiBlitz3.ab3@22573>     TST.b fast
000315DE <AmiBlitz3.ab3@22574>     BEQ 'l1
000315E4 <AmiBlitz3.ab3@22575>     OR.l #$ff,d1
000315E8 <AmiBlitz3.ab3@22576>     BSR writeword
000315EA <AmiBlitz3.ab3@22581>   SWAP D1
000315EE <AmiBlitz3.ab3@22582>   BSR.w writelong
000315F0 <AmiBlitz3.ab3@22583>   MOVEQ.l #$00,D1
000315F4 <AmiBlitz3.ab3@22584>   BSR.w doendif2
000315FC <AmiBlitz3.ab3@22585>   MOVE.l destpointer,$8(A0)
00031600 <AmiBlitz3.ab3@22586> BRA.w do_then
00031606 <AmiBlitz3.ab3@22590>   LEA ptr_parameterstore,A0
00031608 <AmiBlitz3.ab3@22591>   MOVE.l A0,-(A7)
0003160C <AmiBlitz3.ab3@22592>   BSR.w getsp
00031610 <AmiBlitz3.ab3@22593> BRA.w handle_compileerror
00031614 <AmiBlitz3.ab3@22597>   BSR.w evalconst
00031616 <AmiBlitz3.ab3@22598>   MOVEQ.l #$05,D1       ;beq
00031620 <AmiBlitz3.ab3@22601>   MOVE.w oldqflag,instringon
00031626 <AmiBlitz3.ab3@22602>   MOVEA.l lastsourcepos,A5
0003162C <AmiBlitz3.ab3@22604>   LEA numcom,A0
00031630 <AmiBlitz3.ab3@22605> BRA.w compare
00031636 <AmiBlitz3.ab3@22609>   LEA ptr_parameterstore,A0
0003163A <AmiBlitz3.ab3@22610>   BSR.w getsp
00031640 <AmiBlitz3.ab3@22611>   JSR get1bytemain
00031644 <AmiBlitz3.ab3@22612>   BSR.w collif
0003164A <AmiBlitz3.ab3@22613>   LEA namebuff2,A0
0003164E <AmiBlitz3.ab3@22614>   BSR.w getsp
00031654 <AmiBlitz3.ab3@22615>   LEA strcom,A0
00031656 <AmiBlitz3.ab3@22623>   LSL.w #2,D1
0003165C <AmiBlitz3.ab3@22624>   LEA CIF_branches,A1
00031660 <AmiBlitz3.ab3@22625>   MOVE.l $0(A1,D1.W),-(A7)
00031662 <AmiBlitz3.ab3@22626>   MOVEQ.l #-$01,D1           ;comp flag
00031664 <AmiBlitz3.ab3@22628>   JSR (A0)
00031666 <AmiBlitz3.ab3@22630>   MOVEA.l (A7)+,A1
00031668 <AmiBlitz3.ab3@22631> JMP (A1)
0003166C <AmiBlitz3.ab3@22635>   BEQ.w cifdo
00031670 <AmiBlitz3.ab3@22636> BRA.w cifdont
00031674 <AmiBlitz3.ab3@22639>   BNE.w cifdo
00031678 <AmiBlitz3.ab3@22640> BRA.w cifdont
0003167C <AmiBlitz3.ab3@22643>   BLT.w cifdo
00031680 <AmiBlitz3.ab3@22644> BRA.w cifdont
00031684 <AmiBlitz3.ab3@22647>   BLE.w cifdo
00031688 <AmiBlitz3.ab3@22648> BRA.w cifdont
0003168C <AmiBlitz3.ab3@22651>   BGT.w cifdo
00031690 <AmiBlitz3.ab3@22652> BRA.w cifdont
00031694 <AmiBlitz3.ab3@22655>   BGE.w cifdo
00031696 <AmiBlitz3.ab3@22658>   MOVEQ.l #$00,D1
0003169C <AmiBlitz3.ab3@22661>   MOVEA.l concomsp,A0
000316A2 <AmiBlitz3.ab3@22662>   MOVE.w skipcode,(A0)+
000316A8 <AmiBlitz3.ab3@22663>   MOVE.l A0,concomsp
000316AE <AmiBlitz3.ab3@22664>   MOVE.w D1,skipcode
000316B4 <AmiBlitz3.ab3@22665>   JSR get1bytemain
000316B8 <AmiBlitz3.ab3@22666>    BNE.w syntaxerr
000316BE <AmiBlitz3.ab3@22667> JMP bakup
000316C6 <AmiBlitz3.ab3@22671> rescode:   Dc.b $2B,$7c,$00,$00,$00,$00 :   Ds.w 1         ;MOVE.L  #$00000000,$0000(A5)
000316CA <AmiBlitz3.ab3@22672> rescode2:  Dc.b $2B,$40                 :   Ds.w 1         ;MOVE.L  D0,$0000(A5)
000316CE <AmiBlitz3.ab3@22679>   MOVE.w #$FC17,D1
000316D4 <AmiBlitz3.ab3@22680>   JSR uselib
000316DA <AmiBlitz3.ab3@22682>   JSR reget
000316DE <AmiBlitz3.ab3@22683>    BEQ.w 'resbeg
000316E2 <AmiBlitz3.ab3@22684>   BSR.w makealab2                                          ;get label name!
000316E6 <AmiBlitz3.ab3@22685>   MOVE.w rescode(PC),D1
000316EA <AmiBlitz3.ab3@22686>   BSR.w writeword
000316F0 <AmiBlitz3.ab3@22687>   JSR addoff                                               ;add offset
000316F4 <AmiBlitz3.ab3@22688>   MOVE.l $C(A2),D1
000316F8 <AmiBlitz3.ab3@22689>   BSR.w writelong
000316FC <AmiBlitz3.ab3@22690>   MOVE.w rescode+6(PC),D1
00031700 <AmiBlitz3.ab3@22691>   BSR.w writeword
00031704 <AmiBlitz3.ab3@22692>   MOVE.l $4(A2),D1                                         ;is it outstanding?
00031708 <AmiBlitz3.ab3@22693>   BEQ.w 'no
0003170A <AmiBlitz3.ab3@22695>   MOVEA.l D1,A1
0003170E <AmiBlitz3.ab3@22696>   ADDQ.l #1,$4(A1)                                         ;make odd - flag for data reference.
00031710 <AmiBlitz3.ab3@22697>  RTS
00031712 <AmiBlitz3.ab3@22702>  RTS
00031716 <AmiBlitz3.ab3@22705>   MOVE.w #$CD00,D1
0003171C <AmiBlitz3.ab3@22706>   JSR Atokejsr
00031720 <AmiBlitz3.ab3@22707>   MOVE.l rescode2(PC),D1
00031726 <AmiBlitz3.ab3@22708> JMP writelong
0003172A <AmiBlitz3.ab3@22712>   MOVE.w #$FC17,D1
00031730 <AmiBlitz3.ab3@22713>   JSR uselib
00031736 <AmiBlitz3.ab3@22716>   MOVE.l dataget,D1
0003173A <AmiBlitz3.ab3@22717>   BSR.w writelong
0003173E <AmiBlitz3.ab3@22718>   BSR.w getparameter
00031742 <AmiBlitz3.ab3@22719>   BSR.w fetchvars
00031746 <AmiBlitz3.ab3@22720>   BSR.w calcvar
0003174A <AmiBlitz3.ab3@22721>   BTST #$E,D2
0003174E <AmiBlitz3.ab3@22722>    BEQ.w 'notap
00031752 <AmiBlitz3.ab3@22724>   MOVE.b #$6,D2      ;pointer becomes an address!
00031754 <AmiBlitz3.ab3@22727>   TST.b D2
00031758 <AmiBlitz3.ab3@22728>    BEQ.w noleterr   ;read in a whole struct....later!
0003175E <AmiBlitz3.ab3@22729>   TST.b debugmode
00031762 <AmiBlitz3.ab3@22730>    BEQ.w 'norerr
00031766 <AmiBlitz3.ab3@22732>   MOVE.w #$7000,D1
00031768 <AmiBlitz3.ab3@22733>   MOVE.b D2,D1
0003176C <AmiBlitz3.ab3@22734>   ANDI.b #$F,D1
00031770 <AmiBlitz3.ab3@22735>   BSR.w writeword
00031774 <AmiBlitz3.ab3@22736>   MOVE.w #$C310,D1     ; was  #datachk
00031776 <AmiBlitz3.ab3@22737>   MOVE.w D2,-(A7)
0003177A <AmiBlitz3.ab3@22738>   BSR.w Atokejsr
0003177C <AmiBlitz3.ab3@22739>   MOVE.w (A7)+,D2
00031780 <AmiBlitz3.ab3@22742>   CMP.b #$7,D2
00031784 <AmiBlitz3.ab3@22743>    BEQ.w 'string
00031788 <AmiBlitz3.ab3@22744>   CMP.b #$1,D2
0003178C <AmiBlitz3.ab3@22745>    BNE.w 'notbyte
00031792 <AmiBlitz3.ab3@22747>   LEA dataletb2,A0
00031798 <AmiBlitz3.ab3@22748>   LEA dataletb2f,A1
0003179C <AmiBlitz3.ab3@22749>   BTST #$F,D2
000317A0 <AmiBlitz3.ab3@22750>    BEQ.w 'bimm
000317A4 <AmiBlitz3.ab3@22751>   BSR.w pokecode
000317A8 <AmiBlitz3.ab3@22752>  BRA.w 'next
000317AE <AmiBlitz3.ab3@22755>   LEA dataletb,A0
000317B4 <AmiBlitz3.ab3@22756>   LEA dataletbf,A1
000317BA <AmiBlitz3.ab3@22758>   TST.w varmode
000317BE <AmiBlitz3.ab3@22759>    BEQ.w 'byteglobal
000317C4 <AmiBlitz3.ab3@22760>   LEA dataletbl,A0
000317CA <AmiBlitz3.ab3@22761>   LEA dataletblf,A1
000317CE <AmiBlitz3.ab3@22764>   MOVE.w D3,$4(A0)
000317D2 <AmiBlitz3.ab3@22765>   BSR.w pokecode
000317D6 <AmiBlitz3.ab3@22766>  BRA.w 'next
000317DC <AmiBlitz3.ab3@22769>   LEA dataletw,A0
000317E0 <AmiBlitz3.ab3@22770>   CMP.b #$3,D2
000317E4 <AmiBlitz3.ab3@22771>    BCS.w 'word
000317EA <AmiBlitz3.ab3@22772>   LEA dataletl,A0
000317EE <AmiBlitz3.ab3@22775>   BTST #$F,D2
000317F2 <AmiBlitz3.ab3@22776>    BEQ.w 'imm
000317F6 <AmiBlitz3.ab3@22777>   MOVE.w $4(A0),D1
000317FA <AmiBlitz3.ab3@22778>    BSR.w writeword
000317FE <AmiBlitz3.ab3@22779>  BRA.w 'next
00031804 <AmiBlitz3.ab3@22782>   TST.w varmode
00031808 <AmiBlitz3.ab3@22783>    BEQ.w 'wlglobal
0003180A <AmiBlitz3.ab3@22784>   ADDQ.w #6,A0
0003180E <AmiBlitz3.ab3@22787>   MOVE.w D3,$2(A0)
00031810 <AmiBlitz3.ab3@22788>   MOVE.l (A0),D1
00031814 <AmiBlitz3.ab3@22789>   BSR.w writelong
0003181A <AmiBlitz3.ab3@22792>   MOVE.l dataput,D1
0003181E <AmiBlitz3.ab3@22793>    BSR.w writelong
00031822 <AmiBlitz3.ab3@22794>   CMP.w #$2C,D0        ;','
00031826 <AmiBlitz3.ab3@22795>    BEQ.w 'more
00031828 <AmiBlitz3.ab3@22796>  RTS
0003182E <AmiBlitz3.ab3@22799>   JSR get1bytemain
00031832 <AmiBlitz3.ab3@22800>  BRA.w 'loop
00031838 <AmiBlitz3.ab3@22803>   MOVE.w stlenget,D1
0003183C <AmiBlitz3.ab3@22804>    BSR.w writeword     ;move.l (a3)+,-(a7)
00031840 <AmiBlitz3.ab3@22805>   BTST #$F,D2
00031844 <AmiBlitz3.ab3@22806>    BNE.w 'ok
0003184A <AmiBlitz3.ab3@22808>   TST.w varmode
0003184E <AmiBlitz3.ab3@22809>    BEQ.w 'sglobal
00031854 <AmiBlitz3.ab3@22810>   MOVE.w D3,leaampl+2
0003185A <AmiBlitz3.ab3@22811>   MOVE.l leaampl,D1
0003185E <AmiBlitz3.ab3@22812>  BRA.w 'sskip
00031864 <AmiBlitz3.ab3@22815>   MOVE.w D3,leaamp+2
0003186A <AmiBlitz3.ab3@22816>   MOVE.l leaamp,D1
0003186E <AmiBlitz3.ab3@22819>   BSR.w writelong
00031872 <AmiBlitz3.ab3@22822>   MOVE.w #$C701,D1     ;was  #astring
00031878 <AmiBlitz3.ab3@22823>   MOVE.w varmode,D2
0003187C <AmiBlitz3.ab3@22824>    BEQ.w 'global
0003187E <AmiBlitz3.ab3@22825>   SUBQ.w #1,D1
00031882 <AmiBlitz3.ab3@22828>   BSR.w Atokejsr
0003188A <AmiBlitz3.ab3@22829>   MOVE.w #$FFFF,lasta6    ; was -1
00031890 <AmiBlitz3.ab3@22830>   LEA stalign,A0
00031896 <AmiBlitz3.ab3@22831>   LEA stalignf,A1
0003189A <AmiBlitz3.ab3@22832>   BSR.w pokecode
0003189E <AmiBlitz3.ab3@22833> BRA.w 'next
000318A2 <AmiBlitz3.ab3@22837>   CMP.w #$2E,D0        ;'.'                                    ;definecode 'lb 'lw 'll
000318A6 <AmiBlitz3.ab3@22838>    BNE.w 'word
000318AC <AmiBlitz3.ab3@22839>   JSR get1bytemain
000318B0 <AmiBlitz3.ab3@22840>   CMP.w #$77,D0        ;'w'
000318B4 <AmiBlitz3.ab3@22841>    BEQ.w 'word2
000318B8 <AmiBlitz3.ab3@22842>   CMP.w #$62,D0        ;'b'
000318BC <AmiBlitz3.ab3@22843>    BEQ.w 'byte
000318C0 <AmiBlitz3.ab3@22845>   CMP.w #"s",d0        ;'s'
000318C4 <AmiBlitz3.ab3@22846>   BEQ 'single3         
000318C8 <AmiBlitz3.ab3@22847>   CMP.w #"d",d0        ;'d'
000318CC <AmiBlitz3.ab3@22848>   BEQ 'double3
000318D0 <AmiBlitz3.ab3@22850>   CMP.w #$6C,D0        ;'l'
000318D4 <AmiBlitz3.ab3@22851>    BNE.w syntaxerr
000318D6 <AmiBlitz3.ab3@22852>   MOVEQ.l #$02,D1
000318D8 <AmiBlitz3.ab3@22853>  RTS
000318E0 <AmiBlitz3.ab3@22857>   MOVE.b #1,iee
000318E2 <AmiBlitz3.ab3@22858>   MOVEQ.l #$3,d1
000318E4 <AmiBlitz3.ab3@22859>  RTS
000318EC <AmiBlitz3.ab3@22862>   MOVE.b #1,iee
000318EE <AmiBlitz3.ab3@22863>   MOVEQ.l #$4,d1
000318F0 <AmiBlitz3.ab3@22864>  RTS
000318F2 <AmiBlitz3.ab3@22868>   MOVEQ.l #$00,D1
000318F4 <AmiBlitz3.ab3@22869>  RTS
000318F6 <AmiBlitz3.ab3@22872>   MOVEQ.l #$01,D1
000318F8 <AmiBlitz3.ab3@22873>  RTS
000318FA <AmiBlitz3.ab3@22876>   MOVEQ.l #$01,D1
00031900 <AmiBlitz3.ab3@22877> JMP bakup
00031904 <AmiBlitz3.ab3@22881>   BSR.w getsize2
00031906 <AmiBlitz3.ab3@22883>   MOVE.w D1,-(A7)
0003190A <AmiBlitz3.ab3@22884>    BSR.w evalconst2
0003190E <AmiBlitz3.ab3@22885>   CMP.w #$2C,D0        ;','
00031912 <AmiBlitz3.ab3@22886>    BNE.w syntaxerr
00031914 <AmiBlitz3.ab3@22887>   MOVE.l D3,-(A7)
00031918 <AmiBlitz3.ab3@22888>    BSR.w evalconst2
0003191A <AmiBlitz3.ab3@22889>   MOVE.l D3,D1        ;to put in memory
0003191C <AmiBlitz3.ab3@22890>   MOVE.l (A7)+,D3     ;number of times
0003191E <AmiBlitz3.ab3@22891>   MOVE.w (A7)+,D2
00031922 <AmiBlitz3.ab3@22892>    BEQ.w 'byte
00031926 <AmiBlitz3.ab3@22898>   CMP.w #$1,D2
0003192A <AmiBlitz3.ab3@22899>    BEQ.w 'word
0003192C <AmiBlitz3.ab3@22902>   SWAP D1
00031930 <AmiBlitz3.ab3@22903>    BSR.w writeword
00031932 <AmiBlitz3.ab3@22904>   SWAP D1
00031936 <AmiBlitz3.ab3@22905>    BSR.w writeword
00031938 <AmiBlitz3.ab3@22906>   SUBQ.l #1,D3
0003193C <AmiBlitz3.ab3@22907>    BNE.w 'long
0003193E <AmiBlitz3.ab3@22908>  RTS
00031942 <AmiBlitz3.ab3@22911>    BSR.w writeword
00031944 <AmiBlitz3.ab3@22912>   SUBQ.l #1,D3
00031948 <AmiBlitz3.ab3@22913>    BNE.w 'word
0003194A <AmiBlitz3.ab3@22914>  RTS
0003194E <AmiBlitz3.ab3@22917>    BSR.w writebyte
00031950 <AmiBlitz3.ab3@22918>   SUBQ.l #1,D3
00031954 <AmiBlitz3.ab3@22919>    BNE.w 'byte
00031956 <AmiBlitz3.ab3@22920> RTS
0003195A <AmiBlitz3.ab3@22924>   BSR.w getsize2                                          ;definestorage
0003195C <AmiBlitz3.ab3@22925>   MOVE.w D1,-(A7)
00031960 <AmiBlitz3.ab3@22926>   BSR.w evalconst3
00031962 <AmiBlitz3.ab3@22927>   MOVE.w (A7)+,D1
00031964 <AmiBlitz3.ab3@22928>   LSL.l D1,D3
00031966 <AmiBlitz3.ab3@22930>   MOVE.l d3,d0
0003196A <AmiBlitz3.ab3@22931>   BEQ 'll5
0003196C <AmiBlitz3.ab3@22932>   MOVEQ #0,d1
00031972 <AmiBlitz3.ab3@22935>     JSR writebyte
00031974 <AmiBlitz3.ab3@22936>     SUBQ.l #1,d3
00031978 <AmiBlitz3.ab3@22937>   BNE.s 'll10
0003197A <AmiBlitz3.ab3@22942> RTS
0003197C <AmiBlitz3.ab3@22946>   MOVE.w D0,-(A7)
00031982 <AmiBlitz3.ab3@22947>   LEA dummyasm,A0
00031988 <AmiBlitz3.ab3@22948>   MOVEA.l destpointer,A1
00031992 <AmiBlitz3.ab3@22949>   MOVE.w asmlen2,asmlen
00031998 <AmiBlitz3.ab3@22950>   JSR insasm
0003199A <AmiBlitz3.ab3@22951>   MOVE.w (A7)+,D0
0003199C <AmiBlitz3.ab3@22952> RTS
000319A0 <AmiBlitz3.ab3@22956>   BSR.w getsize2
000319AA <AmiBlitz3.ab3@22958>   MOVE.l #ptr_parameterstore,asmbuff
000319AC <AmiBlitz3.ab3@22959>   TST.w D1
000319B0 <AmiBlitz3.ab3@22960>    BEQ.w 'byte
000319B4 <AmiBlitz3.ab3@22961>   CMP.w #$1,D1
000319B8 <AmiBlitz3.ab3@22962>    BEQ.w 'word
000319BC <AmiBlitz3.ab3@22964>   CMP.w #$2,d1
000319C0 <AmiBlitz3.ab3@22965>    BEQ 'long
000319C4 <AmiBlitz3.ab3@22966>   CMP.w #$3,d1
000319C8 <AmiBlitz3.ab3@22967>    BEQ 'single
000319CA <AmiBlitz3.ab3@22972>    MOVEQ.l #$0d,D3
000319D0 <AmiBlitz3.ab3@22980>    JSR asmconst
000319D4 <AmiBlitz3.ab3@22981>    BSR.w insasm2
000319D8 <AmiBlitz3.ab3@22982>    BSR.w writelong
000319DC <AmiBlitz3.ab3@22984>    BSR   writelong
000319E0 <AmiBlitz3.ab3@22986>   CMP.w #$2C,D0    ; ','
000319E4 <AmiBlitz3.ab3@22987>    BEQ.w 'lloop
000319E6 <AmiBlitz3.ab3@22988>  RTS
000319E8 <AmiBlitz3.ab3@22992>   MOVEQ.l #$0B,D3
000319F0 <AmiBlitz3.ab3@22996>   MOVE.b #1,_dcb
000319F6 <AmiBlitz3.ab3@22999>   JSR asmconst
000319FC <AmiBlitz3.ab3@23000>   CLR.b _dcb
00031A00 <AmiBlitz3.ab3@23001>   BSR.w insasm2
00031A04 <AmiBlitz3.ab3@23002>   BSR writebyte
00031A08 <AmiBlitz3.ab3@23003>   BSR writebyte
00031A0C <AmiBlitz3.ab3@23004>   BSR writebyte                                            ;long
00031A10 <AmiBlitz3.ab3@23005>   BSR writebyte
00031A14 <AmiBlitz3.ab3@23006>   CMP.w #$2C,D0
00031A18 <AmiBlitz3.ab3@23007>    BEQ.w 'lloopb
00031A1A <AmiBlitz3.ab3@23008>  RTS
00031A1C <AmiBlitz3.ab3@23011>   MOVEQ.l #$0c,D3
00031A24 <AmiBlitz3.ab3@23015>   MOVE.b #1,_dcb
00031A2A <AmiBlitz3.ab3@23018>   JSR asmconst
00031A30 <AmiBlitz3.ab3@23019>   CLR.b _dcb
00031A34 <AmiBlitz3.ab3@23020>   BSR.w insasm2
00031A38 <AmiBlitz3.ab3@23021>   BSR.w writebyte
00031A3C <AmiBlitz3.ab3@23022>   BSR.w writebyte
00031A40 <AmiBlitz3.ab3@23023>   BSR.w writebyte
00031A44 <AmiBlitz3.ab3@23024>   BSR.w writebyte
00031A48 <AmiBlitz3.ab3@23025>   CMP.w #$2C,D0
00031A4C <AmiBlitz3.ab3@23026>    BEQ.w 'lloopa
00031A4E <AmiBlitz3.ab3@23027>  RTS
00031A50 <AmiBlitz3.ab3@23033>   MOVEQ.l #$11,D3
00031A56 <AmiBlitz3.ab3@23036>   JSR get1bytemain
00031A5A <AmiBlitz3.ab3@23037>   CMP.w #$22,D0     ;'"'
00031A5E <AmiBlitz3.ab3@23038>    BNE.w 'notq
00031A60 <AmiBlitz3.ab3@23043>   MOVE.b (a5)+,d0                                          ;bsr.w get1bytemain ascii dc.b
00031A64 <AmiBlitz3.ab3@23045>    BEQ.w syntaxerr
00031A68 <AmiBlitz3.ab3@23046>   CMP.w #$22,D0   ;'"'
00031A6C <AmiBlitz3.ab3@23047>    BEQ.w 'qdone
00031A70 <AmiBlitz3.ab3@23049>   CMP.b #"\",d0
00031A74 <AmiBlitz3.ab3@23050>    BNE 'n1
00031A78 <AmiBlitz3.ab3@23051>   CMP.b #"\",(a5)
00031A7C <AmiBlitz3.ab3@23052>    BEQ 'do1
00031A7E <AmiBlitz3.ab3@23056>   MOVE.w D0,D1
00031A82 <AmiBlitz3.ab3@23057>   BSR.w writebyte
00031A86 <AmiBlitz3.ab3@23058>  BRA.w 'qloop
00031A8E <AmiBlitz3.ab3@23062>   CMP.l #"__DA",1(a5)
00031A92 <AmiBlitz3.ab3@23063>    BNE 'nodate1
00031A9A <AmiBlitz3.ab3@23064>   CMP.l #"TE__",5(a5)
00031A9E <AmiBlitz3.ab3@23065>    BEQ 'c1
00031AA6 <AmiBlitz3.ab3@23066>   CMP.l #"TE_G",5(a5)
00031AAA <AmiBlitz3.ab3@23067>    BNE 'nodate1
00031AB2 <AmiBlitz3.ab3@23068>   CMP.l #"ER__",9(a5)
00031AB6 <AmiBlitz3.ab3@23069>    BNE 'nodate1
00031ABC <AmiBlitz3.ab3@23070>   JSR compiledatedc_ger
00031AC0 <AmiBlitz3.ab3@23071>  BRA 'n1
00031AC6 <AmiBlitz3.ab3@23074>   JSR compiledatedc
00031ACA <AmiBlitz3.ab3@23075>  BRA 'n1
00031AD2 <AmiBlitz3.ab3@23078>   CMP.l #"__VE",1(a5)
00031AD6 <AmiBlitz3.ab3@23079>    BNE 'n1
00031ADC <AmiBlitz3.ab3@23080>   CMP.w #"R_",5(a5)
00031AE0 <AmiBlitz3.ab3@23081>    BNE 'n1
00031AE6 <AmiBlitz3.ab3@23082>   JSR version_string_dc
00031AEA <AmiBlitz3.ab3@23083>  BRA.w 'qloop
00031AF0 <AmiBlitz3.ab3@23087>   CLR.w instringon
00031AF6 <AmiBlitz3.ab3@23089>   JSR get1bytemain
00031AFA <AmiBlitz3.ab3@23090>  BRA.w 'bdone
00031B04 <AmiBlitz3.ab3@23095>    MOVE.w oldqflag,instringon
00031B0A <AmiBlitz3.ab3@23096>   MOVEA.l lastsourcepos,A5
00031B10 <AmiBlitz3.ab3@23098>    JSR asmconst
00031B16 <AmiBlitz3.ab3@23099>   SUBQ.l #1,destpointer
00031B1A <AmiBlitz3.ab3@23100>    BSR.w insasm2
00031B20 <AmiBlitz3.ab3@23101>   ADDQ.l #1,destpointer
00031B24 <AmiBlitz3.ab3@23102>    BSR.w writebyte
00031B28 <AmiBlitz3.ab3@23105>   CMP.w #$2C,D0   ;','
00031B2C <AmiBlitz3.ab3@23106>    BEQ.w 'bloop
00031B2E <AmiBlitz3.ab3@23107>  RTS
00031B30 <AmiBlitz3.ab3@23110>   MOVEQ.l #$10,D3
00031B38 <AmiBlitz3.ab3@23119>   MOVE.b #1,_dcb
00031B3E <AmiBlitz3.ab3@23121>   JSR asmconst
00031B44 <AmiBlitz3.ab3@23123>   CLR.b _dcb
00031B48 <AmiBlitz3.ab3@23125>   BSR.w insasm2
00031B4C <AmiBlitz3.ab3@23128>   BSR.w writebyte
00031B50 <AmiBlitz3.ab3@23129>   BSR.w writebyte
00031B54 <AmiBlitz3.ab3@23131>   CMP.w #$2C,D0      ;','
00031B58 <AmiBlitz3.ab3@23132>    BEQ.w 'wloop
00031B5A <AmiBlitz3.ab3@23133> RTS
00031B60 <AmiBlitz3.ab3@23137>   ADDQ.l #3,destpointer
00031B68 <AmiBlitz3.ab3@23138>   ANDI.w #$FFFC,destpointer+2
00031B6A <AmiBlitz3.ab3@23139> RTS
00031B70 <AmiBlitz3.ab3@23143>   ADDQ.l #7,destpointer
00031B78 <AmiBlitz3.ab3@23144>   ANDI.w #$FFF8,destpointer+2
00031B7A <AmiBlitz3.ab3@23145> RTS
00031B80 <AmiBlitz3.ab3@23149>   ADDQ.l #1,destpointer                                    ;even
00031B88 <AmiBlitz3.ab3@23150>   BCLR #$0,destpointer+3
00031B8A <AmiBlitz3.ab3@23151> RTS
00031B8C <AmiBlitz3.ab3@23154> datasize: Ds.w 1
00031B92 <AmiBlitz3.ab3@23164>   TST.b debugmode
00031B96 <AmiBlitz3.ab3@23165>   BEQ.w 'skip
00031B9A <AmiBlitz3.ab3@23166>   MOVE.w #$4420,D0                                         ;'D '
00031B9E <AmiBlitz3.ab3@23167>   MOVE.b datasize+1(PC),D0
00031BA2 <AmiBlitz3.ab3@23168>  BRA.w pokedata2
00031BA4 <AmiBlitz3.ab3@23171> RTS
00031BA8 <AmiBlitz3.ab3@23175>   MOVE.w #$FC17,D1           ;#64535
00031BAE <AmiBlitz3.ab3@23176>    JSR uselib
00031BB8 <AmiBlitz3.ab3@23179>    MOVE.w oldqflag,instringon
00031BBE <AmiBlitz3.ab3@23180>   MOVEA.l lastsourcepos,A5
00031BC4 <AmiBlitz3.ab3@23182>    JSR sizespec2        ;get size of it into d1
00031BCA <AmiBlitz3.ab3@23183>   MOVE.w D1,datasize
00031BCE <AmiBlitz3.ab3@23187>   CMP.w #$7,D1
00031BD2 <AmiBlitz3.ab3@23188>    BEQ.w 'string
00031BD4 <AmiBlitz3.ab3@23190>   MOVE.w D1,-(A7)
00031BD8 <AmiBlitz3.ab3@23193>   BSR.w pdt
00031BDA <AmiBlitz3.ab3@23194>   MOVE.w (A7),D2
00031BDE <AmiBlitz3.ab3@23195>    BSR.w fetchdata
00031BE0 <AmiBlitz3.ab3@23196>   CMP.w (A7),D2                                            ;datamode
00031BE4 <AmiBlitz3.ab3@23197>    BEQ.w 'dataok
00031BE6 <AmiBlitz3.ab3@23199>   MOVE.w D2,D1
00031BE8 <AmiBlitz3.ab3@23200>   MOVE.w (A7),D2
00031BEC <AmiBlitz3.ab3@23201>   CMP.w #$2,D2
00031BF0 <AmiBlitz3.ab3@23202>    BNE.w 'notw
00031BF4 <AmiBlitz3.ab3@23203>   CMP.w #$3,D1
00031BF8 <AmiBlitz3.ab3@23204>    BNE.w baddaterr
00031BFE <AmiBlitz3.ab3@23205>   CMP.l #$10000,D3        ; was  #65536
00031C02 <AmiBlitz3.ab3@23206>    BCC.w baddaterr
00031C06 <AmiBlitz3.ab3@23207>  BRA.w 'dataok
00031C0A <AmiBlitz3.ab3@23210>   CMP.w #$1,D2
00031C0E <AmiBlitz3.ab3@23211>    BNE.w 'notb
00031C12 <AmiBlitz3.ab3@23212>   CMP.w #$2,D1
00031C16 <AmiBlitz3.ab3@23213>    BNE.w baddaterr
00031C1C <AmiBlitz3.ab3@23214>   CMP.l #$100,D3
00031C20 <AmiBlitz3.ab3@23215>    BCC.w baddaterr
00031C24 <AmiBlitz3.ab3@23216>  BRA.w 'dataok
00031C28 <AmiBlitz3.ab3@23219>  BRA.w baddaterr
00031C2C <AmiBlitz3.ab3@23222>   CMP.w #$3,D2
00031C30 <AmiBlitz3.ab3@23223>   BCC.w 'notword
00031C34 <AmiBlitz3.ab3@23224>   BSR.w pokedata2
00031C38 <AmiBlitz3.ab3@23225>  BRA.w 'next
00031C3E <AmiBlitz3.ab3@23229>   TST.b iee
00031C42 <AmiBlitz3.ab3@23230>   BEQ 'old
00031C46 <AmiBlitz3.ab3@23231>   CMP.b #5,d2
00031C4A <AmiBlitz3.ab3@23232>   BNE 'old
00031C4E <AmiBlitz3.ab3@23233>   Dc.l $f2006400                                           ;  fpu data write fmove.s fp0,d0
00031C52 <AmiBlitz3.ab3@23238>   BSR.w pokedata2l                                          ;write data >3
00031C58 <AmiBlitz3.ab3@23241>   JSR reget
00031C5C <AmiBlitz3.ab3@23242>   CMP.w #$2C,D0     ;','
00031C60 <AmiBlitz3.ab3@23243>    BEQ.w 'more
00031C62 <AmiBlitz3.ab3@23244>   ADDQ.w #2,A7
00031C64 <AmiBlitz3.ab3@23245>  RTS
00031C68 <AmiBlitz3.ab3@23248>    BSR.w pdt
00031C6E <AmiBlitz3.ab3@23249>   MOVE.l data2,-(A7)
00031C72 <AmiBlitz3.ab3@23250>    BSR.w pokedata2l
00031C74 <AmiBlitz3.ab3@23251>   MOVEQ.l #$00,D1
00031C7A <AmiBlitz3.ab3@23253>    JSR get1bytemain
00031C7E <AmiBlitz3.ab3@23254>    BEQ.w 'done
00031C82 <AmiBlitz3.ab3@23255>   CMP.w #$22,D0       ;'"'
00031C86 <AmiBlitz3.ab3@23256>    BEQ.w 'quoted
00031C8A <AmiBlitz3.ab3@23257>   CMP.w #$2C,D0       ;','
00031C8E <AmiBlitz3.ab3@23258>    BEQ.w 'done
00031C92 <AmiBlitz3.ab3@23261>    BSR.w pokedata2b
00031C94 <AmiBlitz3.ab3@23262>   ADDQ.w #1,D1
00031C9A <AmiBlitz3.ab3@23263>    JSR getchar
00031C9C <AmiBlitz3.ab3@23264>   TST.w D0
00031CA0 <AmiBlitz3.ab3@23265>    BEQ.w 'done
00031CA4 <AmiBlitz3.ab3@23266>   CMP.w #$2C,D0
00031CA8 <AmiBlitz3.ab3@23267>    BEQ.w 'done       ;','
00031CAC <AmiBlitz3.ab3@23268>  BRA.w 'loop2
00031CAE <AmiBlitz3.ab3@23273>    MOVEQ #0,d0
00031CB0 <AmiBlitz3.ab3@23274>    MOVE.b (a5)+,d0
00031CB4 <AmiBlitz3.ab3@23276>    BEQ.w notqerr2
00031CB8 <AmiBlitz3.ab3@23277>   CMP.w #$22,D0       ;'"'
00031CBC <AmiBlitz3.ab3@23278>    BEQ.w 'done2
00031CC0 <AmiBlitz3.ab3@23279>    BSR.w pokedata2b
00031CC2 <AmiBlitz3.ab3@23280>   ADDQ.w #1,D1
00031CC6 <AmiBlitz3.ab3@23281>  BRA.w 'quoted
00031CCC <AmiBlitz3.ab3@23285>   CLR.w instringon
00031CD2 <AmiBlitz3.ab3@23287>   JSR get1bytemain
00031CD4 <AmiBlitz3.ab3@23290>   MOVEA.l (A7)+,A0
00031CDA <AmiBlitz3.ab3@23291>   MOVE.w dontwrite_nomemleft,D2
00031CDE <AmiBlitz3.ab3@23292>    BNE.w 'nopoke
00031CE0 <AmiBlitz3.ab3@23293>   MOVE.l D1,(A0)
00031CE6 <AmiBlitz3.ab3@23296>   ADDQ.l #1,data2
00031CEE <AmiBlitz3.ab3@23297>   BCLR #$0,data2+3
00031CF2 <AmiBlitz3.ab3@23298>   CMP.w #$2C,D0      ;','
00031CF6 <AmiBlitz3.ab3@23299>    BEQ.w 'string
00031CF8 <AmiBlitz3.ab3@23300> RTS
00031CFE <AmiBlitz3.ab3@23304> notqerr2           JMP notqerr
00031D04 <AmiBlitz3.ab3@23305> JUMP_vardeclareerr JMP vardeclareerr
00031D0A <AmiBlitz3.ab3@23313>   MOVE.w proceduremode,D1                                  ;doshared
00031D0E <AmiBlitz3.ab3@23316>   BNE.w 'l1
00031D10 <AmiBlitz3.ab3@23317>   MOVE.w D1,-(A7)
00031D16 <AmiBlitz3.ab3@23318>   CLR.w proceduremode
00031D1C <AmiBlitz3.ab3@23321>   LEA varbase,a2
00031D20 <AmiBlitz3.ab3@23322>   BSR.w getparameter
00031D22 <AmiBlitz3.ab3@23323>   MOVE.w d2,-(a7)
00031D28 <AmiBlitz3.ab3@23324>    JSR findvariable
00031D2C <AmiBlitz3.ab3@23325>    BEQ 'checkdim
00031D32 <AmiBlitz3.ab3@23326>    LEA sharebase,a2
00031D34 <AmiBlitz3.ab3@23327>    MOVEQ #$f+4,d7
00031D38 <AmiBlitz3.ab3@23328>    BSR.w findlab                                         ;find var
00031D3C <AmiBlitz3.ab3@23329>    BEQ.b dupsherr
00031D40 <AmiBlitz3.ab3@23330>    BSR addlabel
00031D44 <AmiBlitz3.ab3@23331>    CMP.b #".",d0
00031D48 <AmiBlitz3.ab3@23332>    BNE JUMP_vardeclareerr
00031D4A <AmiBlitz3.ab3@23333>    MOVE.l a2,a3
00031D50 <AmiBlitz3.ab3@23334>    JSR claptonb       ; jump to a copy of fvaradd 'clapton
00031D52 <AmiBlitz3.ab3@23365>   MOVE.w (a7)+,d2
00031D56 <AmiBlitz3.ab3@23366>    CMP.b #",",d0
00031D5A <AmiBlitz3.ab3@23367>    BNE 'ret
00031D60 <AmiBlitz3.ab3@23368>    JSR get1bytemain
00031D64 <AmiBlitz3.ab3@23369>  BRA 'again2
00031D6A <AmiBlitz3.ab3@23372>   MOVE.w (A7)+,proceduremode
00031D6C <AmiBlitz3.ab3@23373>  RTS
00031D72 <AmiBlitz3.ab3@23376>    CMP.w #2,6(a2)
00031D76 <AmiBlitz3.ab3@23377>    BEQ 'do
00031D7C <AmiBlitz3.ab3@23378>    CMP.w #$102,6(a2)
00031D80 <AmiBlitz3.ab3@23379>    BEQ 'do
00031D86 <AmiBlitz3.ab3@23380>  JMP errormsg_declaredtwice                                 ;was BRA 'errormsg_declaredtwice_
00031D8C <AmiBlitz3.ab3@23383>   LEA varbase,a0
00031D8E <AmiBlitz3.ab3@23386>   MOVE.l (A0),D0                                           ;find label
00031D92 <AmiBlitz3.ab3@23387>    BEQ.b 'z1
00031D94 <AmiBlitz3.ab3@23388>    CMP.l d0,a2
00031D98 <AmiBlitz3.ab3@23389>    BEQ 'z1
00031D9A <AmiBlitz3.ab3@23390>    MOVE.l d0,a0
00031D9E <AmiBlitz3.ab3@23391>  BRA 'm1
00031DA0 <AmiBlitz3.ab3@23394>   MOVE.l (a2),d1
00031DA2 <AmiBlitz3.ab3@23395>     MOVE.l d1,(a0)
00031DA4 <AmiBlitz3.ab3@23396>     CLR.l (a2)
00031DAA <AmiBlitz3.ab3@23397>     LEA sharebase,a0
00031DAC <AmiBlitz3.ab3@23398>     MOVE.l (a0),(a2)
00031DAE <AmiBlitz3.ab3@23399>     MOVE.l a2,(a0)
00031DB4 <AmiBlitz3.ab3@23400>     JSR get1bytemain
00031DBA <AmiBlitz3.ab3@23401>     JSR get1bytemain
00031DBE <AmiBlitz3.ab3@23402>  BRA 'domore
00031DC6 <AmiBlitz3.ab3@23405>   MOVE.b #1,nowdeclare
00031DC8 <AmiBlitz3.ab3@23407>   MOVE.w D1,-(A7)
00031DCE <AmiBlitz3.ab3@23408>   CLR.w proceduremode
00031DD2 <AmiBlitz3.ab3@23411>    BSR.w getparameter
00031DD4 <AmiBlitz3.ab3@23412>   MOVE.w D2,-(A7)
00031DDA <AmiBlitz3.ab3@23414>   LEA firstglob,A2
00031DDE <AmiBlitz3.ab3@23415>    BSR.w findvariable2
00031DE2 <AmiBlitz3.ab3@23416>    BNE.b 'notfound
00031DE8 <AmiBlitz3.ab3@23419>   MOVE.b flagmask+1,D1
00031DEC <AmiBlitz3.ab3@23420>   MOVE.b $7(A2),D3
00031DEE <AmiBlitz3.ab3@23421>   EOR.b D3,D1
00031DF2 <AmiBlitz3.ab3@23422>    BEQ.w dupsherr
00031DF6 <AmiBlitz3.ab3@23423>    BSR.w findlab
00031DFA <AmiBlitz3.ab3@23424>    BEQ.b 'try2
00031DFE <AmiBlitz3.ab3@23427>    BSR.w addlabel
00031E00 <AmiBlitz3.ab3@23428>   MOVE.w (A7)+,D2
00031E02 <AmiBlitz3.ab3@23429>   MOVE.l A2,-(A7)   ;new glob
00031E06 <AmiBlitz3.ab3@23430>    BSR.w fetchvars     
00031E08 <AmiBlitz3.ab3@23431>   MOVEA.l (A7)+,A2
00031E0A <AmiBlitz3.ab3@23432>   MOVEQ.l #$04,D1
00031E0C <AmiBlitz3.ab3@23433>   ADDQ.w #4,A2
00031E0E <AmiBlitz3.ab3@23434>   ADDQ.w #4,A3
00031E10 <AmiBlitz3.ab3@23437>     MOVE.w (A3)+,(A2)+
00031E14 <AmiBlitz3.ab3@23438>   DBF D1,'loop
00031E1C <AmiBlitz3.ab3@23440>   BTST #$1,flagmask+1
00031E20 <AmiBlitz3.ab3@23441>    BEQ.w 'done
00031E26 <AmiBlitz3.ab3@23442>    JSR get1bytemain
00031E2A <AmiBlitz3.ab3@23443>   CMP.w #$29,D0         ;')'
00031E2E <AmiBlitz3.ab3@23444>    BNE.w JUMP_syntaxerr
00031E34 <AmiBlitz3.ab3@23445>    JSR get1bytemain
00031E38 <AmiBlitz3.ab3@23448>    CMP.w #$2C,D0         ;','
00031E3C <AmiBlitz3.ab3@23449>    BNE.w 'done2
00031E42 <AmiBlitz3.ab3@23450>    JSR get1bytemain
00031E46 <AmiBlitz3.ab3@23451>  BRA.w 'loop2
00031E4C <AmiBlitz3.ab3@23454>   MOVE.w (A7)+,proceduremode
00031E4E <AmiBlitz3.ab3@23455> RTS
00031E52 <AmiBlitz3.ab3@23462>    BSR.w makeiname
00031E58 <AmiBlitz3.ab3@23463>    JSR check_incdir                                        ; ergebnis in d2
00031E5E <AmiBlitz3.ab3@23465>    LEA ptr_parameterstore,a1
00031E60 <AmiBlitz3.ab3@23466>    MOVE.l d2,-(a7)
00031E66 <AmiBlitz3.ab3@23467>    LEA includetemp,a0                                      ; filename in includetemp packen
00031E68 <AmiBlitz3.ab3@23470>      MOVE.b (a1)+,(a0)+
00031E6C <AmiBlitz3.ab3@23471>    BNE 'l4
00031E72 <AmiBlitz3.ab3@23473>    LEA ptr_parameterstore,a1
00031E74 <AmiBlitz3.ab3@23474>    MOVE.l a1,a0
00031E76 <AmiBlitz3.ab3@23477>     TST.b (a0)+
00031E7A <AmiBlitz3.ab3@23478>    BNE 'l1
00031E7C <AmiBlitz3.ab3@23481>      MOVE.b -(a0),d0
00031E80 <AmiBlitz3.ab3@23482>      CMP.b #":",d0
00031E84 <AmiBlitz3.ab3@23483>       BEQ 'out
00031E88 <AmiBlitz3.ab3@23484>      CMP.b #"/",d0
00031E8C <AmiBlitz3.ab3@23485>       BEQ 'out
00031E8E <AmiBlitz3.ab3@23486>      CMP.l a1,a0
00031E92 <AmiBlitz3.ab3@23487>       BEQ 'out2
00031E96 <AmiBlitz3.ab3@23488>  BRA 'l2
00031E98 <AmiBlitz3.ab3@23491>    ADDQ.l #1,a0                                            ; dateinamen vom pfad extrahiert
00031E9A <AmiBlitz3.ab3@23494>    MOVEQ.l #-$01,D2
00031E9C <AmiBlitz3.ab3@23497>      ADDQ.w #1,D2
00031E9E <AmiBlitz3.ab3@23498>      MOVE.b (a0)+,(a1)+
00031EA2 <AmiBlitz3.ab3@23499>    BNE 'l3
00031EA4 <AmiBlitz3.ab3@23500>    CLR.b (a1)+
00031EAA <AmiBlitz3.ab3@23502>    LEA ptr_parameterstore,a1
00031EAE <AmiBlitz3.ab3@23503>    BSR.w findxinc                                         ;find include
00031EB2 <AmiBlitz3.ab3@23504>     BEQ.w 'outb
00031EB4 <AmiBlitz3.ab3@23506>    MOVE.w D2,-(A7)
00031EB8 <AmiBlitz3.ab3@23507>    BSR.w addlabel
00031EBA <AmiBlitz3.ab3@23508>    MOVE.w (A7)+,D2
00031EC0 <AmiBlitz3.ab3@23510>    LEA ptr_parameterstore,a1
00031EC6 <AmiBlitz3.ab3@23511>    LEA includetemp,a0                                      ; namen in includetemp schreiben
00031EC8 <AmiBlitz3.ab3@23514>     MOVE.b (a0)+,(a1)+
00031ECC <AmiBlitz3.ab3@23515>    BNE 'l4b
00031ECE <AmiBlitz3.ab3@23517>    MOVE.l (a7)+,d2
00031ED4 <AmiBlitz3.ab3@23518>    LEA ptr_parameterstore,a1
00031ED8 <AmiBlitz3.ab3@23520>  BRA.w doinc2
00031EDE <AmiBlitz3.ab3@23524>    LEA ptr_parameterstore,a1
00031EE4 <AmiBlitz3.ab3@23525>    LEA includetemp,a0
00031EE6 <AmiBlitz3.ab3@23528>     MOVE.b (a0)+,(a1)+
00031EEA <AmiBlitz3.ab3@23529>    BNE 'l4b2
00031EEC <AmiBlitz3.ab3@23531>    MOVE.l (a7)+,d2
00031EF2 <AmiBlitz3.ab3@23532>    LEA ptr_parameterstore,a1
00031EF4 <AmiBlitz3.ab3@23534> RTS
00031EF8 <AmiBlitz3.ab3@23538>   BSR.w makeiname                                              ; test and get the parameter (includestring)
00031EFE <AmiBlitz3.ab3@23542>   JSR check_IncBinDir                                          ; to fix the path problem in CLIMode  tomsmart1
00031F04 <AmiBlitz3.ab3@23544>   MOVEA.l _dosbase,A6
00031F06 <AmiBlitz3.ab3@23546>   MOVE.l D0,D7                                                 ; store Lockpointer
00031F0A <AmiBlitz3.ab3@23547>    BEQ.w error_cant_open_include                               ; no pointer => errormessage
00031F0C <AmiBlitz3.ab3@23548>   MOVE.l D7,D1                                                 ; begin get the size of the file to include
00031F12 <AmiBlitz3.ab3@23549>   MOVE.l ptr_macrobuffer_begin,D2
00031F16 <AmiBlitz3.ab3@23550>    JSR _Examine(A6)
00031F1C <AmiBlitz3.ab3@23551>   MOVEA.l ptr_macrobuffer_begin,A0
00031F20 <AmiBlitz3.ab3@23552>   MOVE.l $4(A0),D0
00031F24 <AmiBlitz3.ab3@23553>    BPL.w error_cant_open_include                               ; something went wrong => errormessage
00031F28 <AmiBlitz3.ab3@23554>   MOVE.l $7C(A0),D3      ;length                                       ; store the size of the file to include
00031F2A <AmiBlitz3.ab3@23555>   MOVE.l D7,D1                                                 ; begin unlock the file
00031F2E <AmiBlitz3.ab3@23556>    JSR _UnLock(A6)
00031F34 <AmiBlitz3.ab3@23558>   MOVE.l #ptr_parameterstore,D1                                ; begin Open and Load the file
00031F3A <AmiBlitz3.ab3@23559>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2                       
00031F3E <AmiBlitz3.ab3@23560>    JSR _Open(A6)
00031F40 <AmiBlitz3.ab3@23561>   MOVE.l D0,D7
00031F44 <AmiBlitz3.ab3@23562>    BEQ.w error_cant_open_include
00031F4A <AmiBlitz3.ab3@23563>   MOVE.l destpointer,D0
00031F4C <AmiBlitz3.ab3@23564>   ADD.l D3,D0
00031F52 <AmiBlitz3.ab3@23565>   CMP.l destbufferend,D0
00031F56 <AmiBlitz3.ab3@23566>    BHI.w 'over
00031F5C <AmiBlitz3.ab3@23567>   MOVE.l destpointer,D2
00031F5E <AmiBlitz3.ab3@23568>   MOVE.l D7,D1
00031F62 <AmiBlitz3.ab3@23569>    JSR _Read(A6)
00031F68 <AmiBlitz3.ab3@23570>   CMP.l #$FFFFFFFF,D0              ; was -1
00031F6C <AmiBlitz3.ab3@23571>    BEQ.w error_reading_file
00031F72 <AmiBlitz3.ab3@23572>   ADD.l D0,destpointer
00031F76 <AmiBlitz3.ab3@23573>  BRA.w 'close
00031F7E <AmiBlitz3.ab3@23576>   MOVE.w #$FFFF,dontwrite_nomemleft          ; was -1
00031F84 <AmiBlitz3.ab3@23577>   MOVE.l D0,destpointer
00031F86 <AmiBlitz3.ab3@23580>   MOVE.l D7,D1
00031F8A <AmiBlitz3.ab3@23581> JMP _Close(A6)
00031F90 <AmiBlitz3.ab3@23584> JUMP_illdirerr JMP illdirerr
00031F96 <AmiBlitz3.ab3@23590>   TST.w dirmode                                            ;include  open
00031F9A <AmiBlitz3.ab3@23591>    BNE.w JUMP_illdirerr
00031F9E <AmiBlitz3.ab3@23593>   BSR.w makeiname
00031FA4 <AmiBlitz3.ab3@23595>   JSR check_incdir
00031FA8 <AmiBlitz3.ab3@23599>   BSR.w findconstant
00031FAC <AmiBlitz3.ab3@23600>    BEQ.w alincerr
00031FB2 <AmiBlitz3.ab3@23602>   LEA constantbase,A2
00031FB6 <AmiBlitz3.ab3@23603>   BSR.w addhere2
00031FBA <AmiBlitz3.ab3@23605>   CLR.w $C(A2)
00031FBE <AmiBlitz3.ab3@23606>   CLR.l $4(A2)
00031FC4 <AmiBlitz3.ab3@23608>   MOVE.l #ptr_parameterstore,D1
00031FC6 <AmiBlitz3.ab3@23609>   MOVE.l d1,a0
00031FCC <AmiBlitz3.ab3@23610>   LEA includetemp2,a1
00031FCE <AmiBlitz3.ab3@23613>     MOVE.b (a0)+,(a1)+
00031FD2 <AmiBlitz3.ab3@23614>   BNE 'l1
00031FD8 <AmiBlitz3.ab3@23615>   JSR save_includename
00031FE2 <AmiBlitz3.ab3@23616>   MOVE.l #0,include_process
00031FEA <AmiBlitz3.ab3@23618>   CMP.l #$62623200,-4(a0)                                  ;.bb2
00031FEE <AmiBlitz3.ab3@23619>   BEQ 'ok
00031FF6 <AmiBlitz3.ab3@23620>   CMP.l #$61623300,-4(a0)                                  ;.ab3
00031FFA <AmiBlitz3.ab3@23621>   BEQ 'ok_tokenize
00032002 <AmiBlitz3.ab3@23622>   CMP.l #$61623200,-4(a0)                                  ;.ab2
00032006 <AmiBlitz3.ab3@23623>   BEQ 'ok_tokenize
0003200E <AmiBlitz3.ab3@23624>   CMP.l #$2e626200,-4(a0)                                  ;.bb files
00032012 <AmiBlitz3.ab3@23625>   BEQ 'ok
00032018 <AmiBlitz3.ab3@23626>  JMP errortoken                                             ;can only include
00032022 <AmiBlitz3.ab3@23629>    MOVE.l #-1,include_process                              ; must tokenize the include
00032028 <AmiBlitz3.ab3@23632>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
0003202E <AmiBlitz3.ab3@23633>   MOVEA.l _dosbase,A6
00032032 <AmiBlitz3.ab3@23634>   JSR _Open(A6)
00032036 <AmiBlitz3.ab3@23635>   MOVE.l D0,$8(A2)
0003203A <AmiBlitz3.ab3@23636>   BEQ.w error_cant_open_include
00032040 <AmiBlitz3.ab3@23637>   CLR.l includeline
00032044 <AmiBlitz3.ab3@23638>   MOVE.l 8(a2),d1
00032046 <AmiBlitz3.ab3@23639>   MOVE.l d3,-(a7)
00032048 <AmiBlitz3.ab3@23640>   MOVEQ #0,d2
0003204A <AmiBlitz3.ab3@23641>   MOVEQ #1,d3
0003204E <AmiBlitz3.ab3@23642>   JSR _Seek(a6)                                            ; -66
00032052 <AmiBlitz3.ab3@23643>   MOVE.l 8(a2),d1
00032054 <AmiBlitz3.ab3@23644>   MOVEQ #0,d2
00032056 <AmiBlitz3.ab3@23645>   MOVEQ #-1,d3
0003205A <AmiBlitz3.ab3@23646>   JSR _Seek(a6)                                            ; -66
0003205C <AmiBlitz3.ab3@23647>   MOVE.l (a7)+,d3
0003205E <AmiBlitz3.ab3@23648>   ADDQ.l #4,d0
00032064 <AmiBlitz3.ab3@23652>   MOVE.l #$10000,D1
0003206A <AmiBlitz3.ab3@23654>   MOVEA.l _execbase,A6
0003206E <AmiBlitz3.ab3@23658>   JSR _AllocVec(a6)
00032072 <AmiBlitz3.ab3@23662>   MOVE.l D0,$4(A2)
00032076 <AmiBlitz3.ab3@23663>   MOVE.l D0,$E(A2)
00032078 <AmiBlitz3.ab3@23664>   MOVEA.l D0,A5
0003207E <AmiBlitz3.ab3@23672>   ADDQ.w #1,ininclude                                      ;enter include
00032084 <AmiBlitz3.ab3@23676>   LEA _include,a0
00032088 <AmiBlitz3.ab3@23677>   MOVEM.l a0-a6/d0-d7,-(a7)
0003208E <AmiBlitz3.ab3@23678>   LEA ptr_parameterstore,a1
00032090 <AmiBlitz3.ab3@23681>     MOVE.b (a0)+,(a1)+
00032094 <AmiBlitz3.ab3@23682>   BNE 'l1b
00032096 <AmiBlitz3.ab3@23684>   MOVEQ #9,d2
0003209C <AmiBlitz3.ab3@23685>   JSR findlabel2
000320A0 <AmiBlitz3.ab3@23686>   BNE 'd
000320A8 <AmiBlitz3.ab3@23687>   MOVE.l #1,8(a2)
000320AC <AmiBlitz3.ab3@23688>   MOVEM.l (a7)+,a0-a6/d0-d7
000320B0 <AmiBlitz3.ab3@23689>  BRA 'd2
000320B6 <AmiBlitz3.ab3@23692>   JSR addlabelhash
000320BE <AmiBlitz3.ab3@23693>   MOVE.l #$1,$4(A2)
000320C6 <AmiBlitz3.ab3@23694>   MOVE.l #1,8(a2)
000320CA <AmiBlitz3.ab3@23695>   MOVEM.l (a7)+,a0-a6/d0-d7
000320D0 <AmiBlitz3.ab3@23698>   LEA inctab,a0
000320D2 <AmiBlitz3.ab3@23699>   MOVEQ #0,d1
000320D8 <AmiBlitz3.ab3@23700>   MOVE.w ininclude,d1
000320DC <AmiBlitz3.ab3@23701>   CLR.l $0(a0,d1*4)
000320E2 <AmiBlitz3.ab3@23703>   MOVEA.l passstack,A7
000320E8 <AmiBlitz3.ab3@23704> JMP passnxt
000320EE <AmiBlitz3.ab3@23707> JUMP_dupmacerr  JMP dupmacerr
000320F4 <AmiBlitz3.ab3@23708> JUMP_macenderr  JMP macenderr
000320FA <AmiBlitz3.ab3@23709> JUMP_macnesterr JMP macnesterr
000320FC <AmiBlitz3.ab3@23712> coolnest:   Ds.w 1
00032100 <AmiBlitz3.ab3@23713> macline:    Ds.l 1
0003210A <AmiBlitz3.ab3@23719>   MOVE.l linenumat,macline
0003210E <AmiBlitz3.ab3@23721>    BSR.w makename2
00032112 <AmiBlitz3.ab3@23722>    BEQ.w JUMP_syntaxerr
00032118 <AmiBlitz3.ab3@23724>    CLR.b thenmode
00032122 <AmiBlitz3.ab3@23728>    MOVE.w oldqflag,instringon
00032128 <AmiBlitz3.ab3@23729>   MOVEA.l lastsourcepos,A5
0003212C <AmiBlitz3.ab3@23731>    BSR.w findmac
00032130 <AmiBlitz3.ab3@23732>    BEQ.w JUMP_dupmacerr
00032134 <AmiBlitz3.ab3@23733>    BSR.w addlabel
00032138 <AmiBlitz3.ab3@23734>   CLR.w $A(A2)
0003213E <AmiBlitz3.ab3@23735>   MOVEA.l ptr_macrobuffer_begin,A0
00032140 <AmiBlitz3.ab3@23736>   MOVEQ.l #$00,D2     ;flag for nothing got yet!
00032146 <AmiBlitz3.ab3@23737>   CLR.w coolnest
00032148 <AmiBlitz3.ab3@23741>   MOVE.b (a5),d0
0003214C <AmiBlitz3.ab3@23742>      BEQ 'l3
00032150 <AmiBlitz3.ab3@23743>      CMP.b #" ",d0
00032154 <AmiBlitz3.ab3@23744>       BNE 'l2                                              ;space macro
00032156 <AmiBlitz3.ab3@23745>       ADDQ.l #1,a5
0003215A <AmiBlitz3.ab3@23746>  BRA 'l1
0003215E <AmiBlitz3.ab3@23749>    CMP.b #";",d0
00032162 <AmiBlitz3.ab3@23750>       BNE 'l3
00032164 <AmiBlitz3.ab3@23753>    MOVE.b (a5),d0
00032168 <AmiBlitz3.ab3@23754>       BEQ 'l5
0003216C <AmiBlitz3.ab3@23755>       BSR.w macputb                                      ;add comment
0003216E <AmiBlitz3.ab3@23756>       ADDQ.l #1,a5
00032172 <AmiBlitz3.ab3@23757>  BRA 'l4
00032176 <AmiBlitz3.ab3@23760>    MOVE.b #":",d0
0003217A <AmiBlitz3.ab3@23761>       BSR.w macputb
0003217E <AmiBlitz3.ab3@23762>       MOVE.b #"@",d0
00032182 <AmiBlitz3.ab3@23763>       BSR.w macputb
0003218A <AmiBlitz3.ab3@23766>    MOVE.b #0,temp
00032192 <AmiBlitz3.ab3@23767>       MOVE.b #0,thenmode
00032198 <AmiBlitz3.ab3@23770>   JSR getcharb   ;get next character
0003219A <AmiBlitz3.ab3@23772>   TST.w D0
0003219E <AmiBlitz3.ab3@23773>    BNE.w 'skip
000321A2 <AmiBlitz3.ab3@23774>   MOVEM.l D2/A0/A2,-(A7)
000321A8 <AmiBlitz3.ab3@23776>   CMP.w #"@@",-3(a5)
000321AC <AmiBlitz3.ab3@23777>   BNE 'l2a
000321B2 <AmiBlitz3.ab3@23778>   JSR nextline
000321B6 <AmiBlitz3.ab3@23779>   BEQ.w JUMP_macenderr
000321BA <AmiBlitz3.ab3@23780>   MOVEM.l (A7)+,D2/A0/A2
000321BE <AmiBlitz3.ab3@23781>  BRA.w 'gather
000321C4 <AmiBlitz3.ab3@23785>    JSR nextline
000321C8 <AmiBlitz3.ab3@23786>    BEQ.w JUMP_macenderr
000321CC <AmiBlitz3.ab3@23787>   MOVEM.l (A7)+,D2/A0/A2
000321CE <AmiBlitz3.ab3@23788>   TST.w D2
000321D2 <AmiBlitz3.ab3@23789>    BEQ.w 'gather
000321D4 <AmiBlitz3.ab3@23793>   MOVE.b (a5),d0
000321D8 <AmiBlitz3.ab3@23794>       CMP.b #" ",d0
000321DC <AmiBlitz3.ab3@23795>       BNE 'l1a
000321DE <AmiBlitz3.ab3@23796>       ADDQ.w #1,a5
000321E2 <AmiBlitz3.ab3@23797>  BRA 'l2b
000321E8 <AmiBlitz3.ab3@23800>   TST.b thenmode
000321EC <AmiBlitz3.ab3@23801>      BEQ 'l3a
000321EE <AmiBlitz3.ab3@23802>      MOVEQ #":",d0
000321F2 <AmiBlitz3.ab3@23803>      BSR.w macputb
000321F6 <AmiBlitz3.ab3@23804>      MOVE.w #-$7FFE,D0                                     ;write end if
000321FA <AmiBlitz3.ab3@23805>      BSR macputw
000321FE <AmiBlitz3.ab3@23806>      MOVE.w #$800b,d0
00032202 <AmiBlitz3.ab3@23807>      BSR.w macputw
00032208 <AmiBlitz3.ab3@23808>      CLR.b thenmode
0003220A <AmiBlitz3.ab3@23812>    MOVEQ.l #$3A,D0
00032212 <AmiBlitz3.ab3@23814>      MOVE.b #1,temp
00032216 <AmiBlitz3.ab3@23817>  BRA.w 'notend2
0003221A <AmiBlitz3.ab3@23820>   BPL.w 'notend2
0003221E <AmiBlitz3.ab3@23821>   CMP.w #-$7FF3,D0         ; was #$800d                                ;macro ?
00032222 <AmiBlitz3.ab3@23822>    BNE.w 'notamac
00032228 <AmiBlitz3.ab3@23823>   ADDQ.w #1,coolnest
0003222C <AmiBlitz3.ab3@23824>  BRA.w 'notend
00032230 <AmiBlitz3.ab3@23828>   CMP.w #$80d7,d0                                          ;object ?
00032234 <AmiBlitz3.ab3@23829>     BNE 'l1x
0003223A <AmiBlitz3.ab3@23830>     TST.b objectcount
0003223E <AmiBlitz3.ab3@23831>     BNE JUMP_macnesterr
00032242 <AmiBlitz3.ab3@23834>   CMP.w #$8021,d0
00032246 <AmiBlitz3.ab3@23835>     BNE 'nothen
0003224E <AmiBlitz3.ab3@23836>     MOVE.b #1,thenmode
00032254 <AmiBlitz3.ab3@23839>   TST.b thenmode
00032258 <AmiBlitz3.ab3@23840>         BEQ 'l1c
0003225C <AmiBlitz3.ab3@23841>    CMP.w #$8002,d0                                         ;end if
00032260 <AmiBlitz3.ab3@23842>    BNE 'l1c
00032264 <AmiBlitz3.ab3@23843>    MOVEM.l d0/a5,-(a7)
0003226A <AmiBlitz3.ab3@23844>    JSR get1bytemain
0003226C <AmiBlitz3.ab3@23845>    MOVE.w d0,d1
00032270 <AmiBlitz3.ab3@23846>    MOVEM.l (a7)+,a5/d0
00032274 <AmiBlitz3.ab3@23847>    CMP.w #$800b,d1
00032278 <AmiBlitz3.ab3@23848>    BNE 'l1c
0003227E <AmiBlitz3.ab3@23849>    CLR.b thenmode
00032282 <AmiBlitz3.ab3@23853>    CMP.w #-$7FFE,D0   ; was #$8002                                     ;end ?
00032286 <AmiBlitz3.ab3@23854>    BNE.w 'notend
00032288 <AmiBlitz3.ab3@23856>    MOVE.l a5,-(a7)
0003228E <AmiBlitz3.ab3@23857>    JSR get1bytemain
00032290 <AmiBlitz3.ab3@23858>    MOVE.l (a7)+,a5
00032292 <AmiBlitz3.ab3@23859>    TST.w d0
00032296 <AmiBlitz3.ab3@23860>    BEQ 'doend
0003229A <AmiBlitz3.ab3@23861>    CMP.w #":",d0
0003229E <AmiBlitz3.ab3@23862>    BEQ 'doend
000322A2 <AmiBlitz3.ab3@23863>    CMP.w #";",d0
000322A6 <AmiBlitz3.ab3@23864>    BEQ 'doend
000322A8 <AmiBlitz3.ab3@23865>    MOVE.l a5,-(a7)
000322AE <AmiBlitz3.ab3@23866>    JSR get1bytemain
000322B2 <AmiBlitz3.ab3@23867>    MOVE.l -1(a5),d0
000322B4 <AmiBlitz3.ab3@23868>    MOVE.l (a7)+,a5
000322BA <AmiBlitz3.ab3@23869>    CMP.l #"noa7",d0
000322BE <AmiBlitz3.ab3@23870>    BEQ 'doend
000322C2 <AmiBlitz3.ab3@23871>  BRA 'morechar
000322C6 <AmiBlitz3.ab3@23874>   MOVE.w #$8002,D0
000322CA <AmiBlitz3.ab3@23875>    BSR.w macputw
000322CE <AmiBlitz3.ab3@23876>  BRA 'gather
000322D4 <AmiBlitz3.ab3@23880>   JSR get1bytemain
000322D8 <AmiBlitz3.ab3@23881>    CMP.w #-$7FF3,D0        ;was #$800d,                                ;end macro
000322DC <AmiBlitz3.ab3@23883>    BEQ.w 'lo1
000322E0 <AmiBlitz3.ab3@23884>   CMP.w #$80d7,d0                                          ;end object
000322E4 <AmiBlitz3.ab3@23886>   BNE 'notem
000322EA <AmiBlitz3.ab3@23888>   SUBQ.b #1,objectcount
000322F0 <AmiBlitz3.ab3@23889>   TST.b developobject
000322F4 <AmiBlitz3.ab3@23890>   BEQ 'lo1
000322F8 <AmiBlitz3.ab3@23891>   BSR skiprest
000322FA <AmiBlitz3.ab3@23892>  RTS
00032300 <AmiBlitz3.ab3@23896>   SUBQ.w #1,coolnest
00032304 <AmiBlitz3.ab3@23897>    BMI.w 'macdone
00032306 <AmiBlitz3.ab3@23900>   MOVE.w D0,-(A7)
0003230A <AmiBlitz3.ab3@23901>   MOVE.w #$8002,D0
0003230E <AmiBlitz3.ab3@23902>    BSR.w macputw
00032310 <AmiBlitz3.ab3@23903>   MOVE.w (A7)+,D0
00032314 <AmiBlitz3.ab3@23904>  BRA.w 'notend
00032318 <AmiBlitz3.ab3@23907>   BSR.w macputw
0003231C <AmiBlitz3.ab3@23908>  BRA.w 'gather
00032322 <AmiBlitz3.ab3@23912>     CMP.w #"@@",-1(a5)                                     ;merge lines
00032326 <AmiBlitz3.ab3@23913>     BNE 'no
0003232A <AmiBlitz3.ab3@23914>      MOVEM.l D2/A0/A2,-(A7)
00032330 <AmiBlitz3.ab3@23915>    JSR nextline
00032334 <AmiBlitz3.ab3@23916>    BEQ.w JUMP_macenderr
00032338 <AmiBlitz3.ab3@23917>   MOVEM.l (A7)+,D2/A0/A2
0003233A <AmiBlitz3.ab3@23918>     TST.w D2
0003233E <AmiBlitz3.ab3@23919>    BEQ.w 'gather
00032342 <AmiBlitz3.ab3@23920>  BRA 'gather
00032346 <AmiBlitz3.ab3@23924>   BSR.w macputb
0003234A <AmiBlitz3.ab3@23925>  BRA.w 'gather
0003234C <AmiBlitz3.ab3@23928>   ADDQ.w #4,A7
0003234E <AmiBlitz3.ab3@23929>   MOVE.l A0,D0
00032354 <AmiBlitz3.ab3@23930>   SUB.l ptr_macrobuffer_begin,D0
00032358 <AmiBlitz3.ab3@23936>    BEQ.w 'cdone
0003235C <AmiBlitz3.ab3@23937>   CMPI.b #":",-(A0)
00032360 <AmiBlitz3.ab3@23938>    BNE.w 'cdone
00032364 <AmiBlitz3.ab3@23939>   CMP.w #$1,D0
00032368 <AmiBlitz3.ab3@23940>    BEQ.w 'cdo
0003236C <AmiBlitz3.ab3@23941>   TST.b -$1(A0)
00032370 <AmiBlitz3.ab3@23942>    BMI.w 'cdone
00032372 <AmiBlitz3.ab3@23945>   SUBQ.w #1,D0
00032376 <AmiBlitz3.ab3@23946>  BRA.w 'mclean
0003237A <AmiBlitz3.ab3@23949>   MOVE.w D0,$8(A2)
0003237E <AmiBlitz3.ab3@23950>    BEQ.w 'skip2
00032380 <AmiBlitz3.ab3@23951>   MOVEQ.l #$01,D1
00032386 <AmiBlitz3.ab3@23952>   MOVEA.l _execbase,A6
0003238C <AmiBlitz3.ab3@23954>   MOVE.l mempool,a0
00032390 <AmiBlitz3.ab3@23955>   JSR _AllocPooled(a6)
00032392 <AmiBlitz3.ab3@23958>   MOVEA.l D0,A0
00032396 <AmiBlitz3.ab3@23959>   MOVE.l A0,$4(A2)
0003239A <AmiBlitz3.ab3@23960>   MOVE.w $8(A2),D1
0003239E <AmiBlitz3.ab3@23961>    BEQ.w 'skip2
000323A0 <AmiBlitz3.ab3@23962>   SUBQ.w #1,D1
000323A6 <AmiBlitz3.ab3@23963>   MOVEA.l ptr_macrobuffer_begin,A1
000323A8 <AmiBlitz3.ab3@23966>     MOVE.b (A1)+,(A0)+
000323AC <AmiBlitz3.ab3@23967>   DBF D1,'lll
000323B2 <AmiBlitz3.ab3@23970> JMP get1bytemain
000323B4 <AmiBlitz3.ab3@23974>   MOVE.w D0,D1
000323B6 <AmiBlitz3.ab3@23975>   LSR.w #8,D1
000323B8 <AmiBlitz3.ab3@23976>   MOVE.b D1,(A0)+
000323BA <AmiBlitz3.ab3@23979>   MOVEQ.l #-$01,D2
000323BC <AmiBlitz3.ab3@23980>   MOVE.b D0,(A0)+
000323C2 <AmiBlitz3.ab3@23981>   CMPA.l ptr_macrobuffer_end,A0
000323C6 <AmiBlitz3.ab3@23982>    BCC.w macbigerr2
000323C8 <AmiBlitz3.ab3@23983> RTS
000323CE <AmiBlitz3.ab3@23986> macbigerr2 JMP macbigerr
000323D0 <AmiBlitz3.ab3@23990>   MOVE.l d0,-(a7)
000323D2 <AmiBlitz3.ab3@23991>   MOVEQ #0,d0
000323D8 <AmiBlitz3.ab3@23992>   CLR.b skiptoggle
000323DA <AmiBlitz3.ab3@23995>     MOVE.b (a5),d0
000323DE <AmiBlitz3.ab3@23996>     BEQ 'l3
000323E2 <AmiBlitz3.ab3@23997>     CMP.b #";",d0
000323E6 <AmiBlitz3.ab3@23998>     BNE 'l2
000323EE <AmiBlitz3.ab3@23999>     MOVE.b #1,skiptoggle
000323F4 <AmiBlitz3.ab3@24002>     TST.b skiptoggle
000323F8 <AmiBlitz3.ab3@24003>     BNE 'l4
000323FC <AmiBlitz3.ab3@24004>     CMP.b #":",d0
00032400 <AmiBlitz3.ab3@24005>     BEQ 'l3
00032402 <AmiBlitz3.ab3@24008>     ADDQ #1,a5
00032406 <AmiBlitz3.ab3@24009>  BRA 'loop
0003240C <AmiBlitz3.ab3@24012>   MOVE.w d0,lastchar
0003240E <AmiBlitz3.ab3@24013>   MOVE.l (a7)+,d0
00032410 <AmiBlitz3.ab3@24014> RTS
00032414 <AmiBlitz3.ab3@24021>   BSR.w ifchar
00032418 <AmiBlitz3.ab3@24022>    BNE.w JUMP_syntaxerr
0003241A <AmiBlitz3.ab3@24023>   MOVE.w D0,D1
00032420 <AmiBlitz3.ab3@24024>   JSR get1bytemain
00032424 <AmiBlitz3.ab3@24025>   BSR.w ifchar
00032428 <AmiBlitz3.ab3@24026>    BNE.w 'skip
0003242A <AmiBlitz3.ab3@24027>   ADDQ.w #1,D0
0003242C <AmiBlitz3.ab3@24028>   MOVE.w D0,D2
0003242E <AmiBlitz3.ab3@24029>   ADD.w D0,D0
00032430 <AmiBlitz3.ab3@24030>   ADD.w D2,D0
00032432 <AmiBlitz3.ab3@24031>   ADD.w D0,D1
00032434 <AmiBlitz3.ab3@24032>   MOVE.w D1,D0
00032438 <AmiBlitz3.ab3@24033>   ANDI.w #$3,D0
0003243C <AmiBlitz3.ab3@24034>   CMP.w #$3,D0
00032440 <AmiBlitz3.ab3@24035>    BEQ.w JUMP_syntaxerr
00032446 <AmiBlitz3.ab3@24037>   JSR get1bytemain
00032448 <AmiBlitz3.ab3@24040> RTS
0003244A <AmiBlitz3.ab3@24043> thetst1:  TST.b D0
0003244C <AmiBlitz3.ab3@24044> thetst2:  TST.w D0
0003244E <AmiBlitz3.ab3@24045> thetst3:  TST.l D0
00032450 <AmiBlitz3.ab3@24046> thetst4:  TST.l (A7)+                                      ;Any Length?
00032454 <AmiBlitz3.ab3@24047> thetst5:  JSR _Reschedule(A6)
00032458 <AmiBlitz3.ab3@24049> posbr:    BEQ.w posbr
0003245C <AmiBlitz3.ab3@24050> negbr:    BNE.w negbr
0003245E <AmiBlitz3.ab3@24054>   MOVEQ.l #-$01,D2
00032462 <AmiBlitz3.ab3@24055> BRA.w doifm
00032468 <AmiBlitz3.ab3@24059>   CLR.l fp0addr
0003246A <AmiBlitz3.ab3@24060>   MOVEQ.l #$01,D1                                          ;while flag
0003246C <AmiBlitz3.ab3@24061>   MOVEQ.l #$00,D2                                          ;negate flag
00032470 <AmiBlitz3.ab3@24062> BRA.w doif2
00032476 <AmiBlitz3.ab3@24066>   LEA firstrep,A2
00032478 <AmiBlitz3.ab3@24067>   MOVEQ.l #$08,D2
0003247C <AmiBlitz3.ab3@24068> BRA.w freeslist
00032480 <AmiBlitz3.ab3@24072>   LEA firstsel(PC),A2
00032482 <AmiBlitz3.ab3@24073>   MOVEQ.l #$0E,D2
00032484 <AmiBlitz3.ab3@24078>   MOVEQ.l #$00,D3
00032486 <AmiBlitz3.ab3@24086>   MOVE.l (A2),D0
00032488 <AmiBlitz3.ab3@24087>   CLR.l (A2)
0003248A <AmiBlitz3.ab3@24088>   MOVEA.l D0,A2
00032490 <AmiBlitz3.ab3@24089>   MOVEA.l _execbase,A6
00032494 <AmiBlitz3.ab3@24092>     CMPA.w #$0,A2
00032498 <AmiBlitz3.ab3@24093>      BEQ.w 'done
0003249A <AmiBlitz3.ab3@24094>     TST.w D3
0003249E <AmiBlitz3.ab3@24095>      BEQ.w 'skip
000324A2 <AmiBlitz3.ab3@24096>     MOVEM.l D2-D3/A2,-(A7)
000324A4 <AmiBlitz3.ab3@24097>     ADDA.w D3,A2
000324A6 <AmiBlitz3.ab3@24098>     MOVE.l D4,D2
000324AA <AmiBlitz3.ab3@24099>     BSR.w freeslist
000324AE <AmiBlitz3.ab3@24100>     MOVEM.l (A7)+,D2-D3/A2
000324B0 <AmiBlitz3.ab3@24103>     MOVEA.l A2,A1
000324B2 <AmiBlitz3.ab3@24104>     MOVE.l D2,D0
000324B4 <AmiBlitz3.ab3@24105>     MOVEA.l (A2),A2
000324BA <AmiBlitz3.ab3@24106>     MOVE.l mempool,a0
000324BE <AmiBlitz3.ab3@24107>     JSR _FreePooled(A6)
000324C2 <AmiBlitz3.ab3@24108>  BRA.w 'loop
000324C4 <AmiBlitz3.ab3@24111> RTS
000324CA <AmiBlitz3.ab3@24113> JUMP_eselerr JMP eselerr
000324CE <AmiBlitz3.ab3@24116> firstsel:  Ds.l 1
000324D2 <AmiBlitz3.ab3@24119> selpushb:   Dc.b $02,$40,$00,$FF                           ;ANDI.W  #$00FF,D0
000324D4 <AmiBlitz3.ab3@24122> selpushw:   MOVE.w D0,-(A7)
000324D6 <AmiBlitz3.ab3@24124> selpushl:   MOVE.l D0,-(A7)
000324DA <AmiBlitz3.ab3@24126> selpushs:   LEA $4(A7),A2                                  ;(a7)=len of string!
000324DE <AmiBlitz3.ab3@24129> selcomb:    ANDI.w #$FF,D0
000324E0 <AmiBlitz3.ab3@24130> selcomw:    CMP.w (A7),D0
000324E2 <AmiBlitz3.ab3@24132> selcoml:    CMP.l (A7),D0
000324E6 <AmiBlitz3.ab3@24134> selbne:     BNE.w selbne
000324E8 <AmiBlitz3.ab3@24136> endsel:     ADDQ.w #8,A7
000324EC <AmiBlitz3.ab3@24142>   MOVE.l firstsel(PC),D0                                  
000324F0 <AmiBlitz3.ab3@24143>    BEQ.w JUMP_eselerr
000324F2 <AmiBlitz3.ab3@24144>   MOVEA.l D0,A2
000324F6 <AmiBlitz3.ab3@24145>    BSR.w fillbne
000324FC <AmiBlitz3.ab3@24148>   MOVEA.l _execbase,A6
00032500 <AmiBlitz3.ab3@24151>   MOVE.l $4(A2),D0
00032504 <AmiBlitz3.ab3@24152>    BEQ.w 'done
00032506 <AmiBlitz3.ab3@24153>   MOVEA.l D0,A3
0003250A <AmiBlitz3.ab3@24154>   MOVEA.l $4(A3),A0
00032510 <AmiBlitz3.ab3@24155>   MOVE.l destpointer,D1
00032512 <AmiBlitz3.ab3@24156>   SUB.l A0,D1
00032518 <AmiBlitz3.ab3@24158>     TST.b fast
0003251C <AmiBlitz3.ab3@24159>     BEQ 'loop_l1
00032522 <AmiBlitz3.ab3@24160>     MOVE.w dontwrite_nomemleft,D0
00032526 <AmiBlitz3.ab3@24161>     BNE.w 'skip
00032528 <AmiBlitz3.ab3@24162>     ADDQ.l #2,d1
0003252C <AmiBlitz3.ab3@24163>     MOVE.l d1,-2(a0)
00032530 <AmiBlitz3.ab3@24164>   BRA 'skip
00032536 <AmiBlitz3.ab3@24168>   TST.w dontwrite_nomemleft
0003253A <AmiBlitz3.ab3@24169>      BNE.w 'skip
00032540 <AmiBlitz3.ab3@24170>   CMP.l #MaxWordSgnd,D1
00032544 <AmiBlitz3.ab3@24171>    BHI.w JUMP_cbraerr
00032546 <AmiBlitz3.ab3@24172>   MOVE.w D1,(A0)
0003254A <AmiBlitz3.ab3@24175>   MOVE.l (A3),$4(A2)                                       ;next of me is new first
0003254C <AmiBlitz3.ab3@24176>   MOVEA.l A3,A1
0003254E <AmiBlitz3.ab3@24177>   MOVEQ.l #$08,D0
00032554 <AmiBlitz3.ab3@24178>   MOVE.l mempool,a0
00032558 <AmiBlitz3.ab3@24179>    JSR _FreePooled(A6)
0003255C <AmiBlitz3.ab3@24180>  BRA.w 'loop
00032562 <AmiBlitz3.ab3@24183>   JSR popselect                                            ;fix stack on select
00032566 <AmiBlitz3.ab3@24184>   MOVEA.l firstsel(PC),A1
0003256C <AmiBlitz3.ab3@24185>   MOVE.l (A1),firstsel
0003256E <AmiBlitz3.ab3@24186>   MOVEQ.l #$0E,D0
00032574 <AmiBlitz3.ab3@24187>   MOVEA.l _execbase,A6
0003257A <AmiBlitz3.ab3@24188>   MOVE.l mempool,a0
0003257E <AmiBlitz3.ab3@24189>   JSR _FreePooled(A6)
00032584 <AmiBlitz3.ab3@24190> JMP get1bytemain
00032586 <AmiBlitz3.ab3@24194>   MOVEA.l (A7)+,A1
00032588 <AmiBlitz3.ab3@24195>   SUBQ.w #8,A1
0003258A <AmiBlitz3.ab3@24196>   MOVEQ.l #$09,D0
0003258C <AmiBlitz3.ab3@24197>   ADD.l (A1),D0
0003258E <AmiBlitz3.ab3@24200>   ADDQ.w #2,A7                                             ;for runtime errs!
00032592 <AmiBlitz3.ab3@24205>   MOVE.l firstsel(PC),D0
00032596 <AmiBlitz3.ab3@24206>    BEQ.w JUMP_defaerr
00032598 <AmiBlitz3.ab3@24207>   MOVEA.l D0,A2
0003259C <AmiBlitz3.ab3@24208>   BSR.w fillbra
000325A0 <AmiBlitz3.ab3@24209>   BSR.w fillbne
000325A4 <AmiBlitz3.ab3@24210>   CLR.l $8(A2)
000325A8 <AmiBlitz3.ab3@24211>   MOVE.w $C(A2),D2
000325AC <AmiBlitz3.ab3@24212> BRA.w casechk
000325B2 <AmiBlitz3.ab3@24214> JUMP_defaerr JMP defaerr
000325B6 <AmiBlitz3.ab3@24219>   MOVE.l $8(A2),D0
000325BA <AmiBlitz3.ab3@24220>    BEQ.w 'skip   ;none to do!
000325BC <AmiBlitz3.ab3@24221>   MOVEA.l D0,A0
000325C2 <AmiBlitz3.ab3@24222>   MOVE.l destpointer,D1
000325C4 <AmiBlitz3.ab3@24223>   SUB.l A0,D1
000325CA <AmiBlitz3.ab3@24226>     TST.b fast
000325CE <AmiBlitz3.ab3@24227>     BEQ 'l1
000325D4 <AmiBlitz3.ab3@24228>     TST.w dontwrite_nomemleft
000325D8 <AmiBlitz3.ab3@24229>     BNE.w 'skip
000325DA <AmiBlitz3.ab3@24230>     ADDQ.l #2,d1
000325DE <AmiBlitz3.ab3@24231>     MOVE.l D1,-2(A0)
000325E2 <AmiBlitz3.ab3@24232>   BRA 'skip
000325E8 <AmiBlitz3.ab3@24236>   TST.w dontwrite_nomemleft
000325EC <AmiBlitz3.ab3@24237>      BNE.w 'skip
000325F2 <AmiBlitz3.ab3@24239>    CMP.l #MaxWordSgnd,D1
000325F6 <AmiBlitz3.ab3@24240>    BHI.w JUMP_cbraerr
000325F8 <AmiBlitz3.ab3@24241>   MOVE.w D1,(A0)
000325FA <AmiBlitz3.ab3@24244> RTS
00032600 <AmiBlitz3.ab3@24246> JUMP_cbraerr JMP cbraerr
00032604 <AmiBlitz3.ab3@24252>   MOVE.l $8(A2),D0
00032608 <AmiBlitz3.ab3@24253>    BEQ.w 'skip
0003260A <AmiBlitz3.ab3@24257>   MOVEA.l D0,A3
0003260E <AmiBlitz3.ab3@24258>   MOVE.w #$6000,D1
00032614 <AmiBlitz3.ab3@24261>    TST.b fast
00032618 <AmiBlitz3.ab3@24262>    BEQ 'l1
0003261E <AmiBlitz3.ab3@24263>    OR.l #$ff,d1
00032622 <AmiBlitz3.ab3@24264>    BSR writeword
00032626 <AmiBlitz3.ab3@24269>   BSR.w writeword
00032628 <AmiBlitz3.ab3@24270>   MOVEQ.l #$08,D0
0003262A <AmiBlitz3.ab3@24271>   MOVEQ.l #$01,D1
00032630 <AmiBlitz3.ab3@24272>   MOVEA.l _execbase,A6
00032636 <AmiBlitz3.ab3@24274>   MOVE.l mempool,a0
0003263A <AmiBlitz3.ab3@24275>   JSR _AllocPooled(a6)
0003263C <AmiBlitz3.ab3@24278>   MOVEA.l D0,A0
00032640 <AmiBlitz3.ab3@24279>   MOVE.l $4(A2),(A0)
00032644 <AmiBlitz3.ab3@24280>   MOVE.l A0,$4(A2)
0003264C <AmiBlitz3.ab3@24281>   MOVE.l destpointer,$4(A0)
00032650 <AmiBlitz3.ab3@24282>  BRA.w writeword
00032652 <AmiBlitz3.ab3@24285> RTS
00032658 <AmiBlitz3.ab3@24289>   TST.b debugmode
0003265C <AmiBlitz3.ab3@24290>    BEQ.w 'norerr
00032660 <AmiBlitz3.ab3@24291>   MOVE.w #$C313,D1
00032664 <AmiBlitz3.ab3@24292>   CMP.w #$3,D2
00032668 <AmiBlitz3.ab3@24293>    BCS.w 'dochk
0003266A <AmiBlitz3.ab3@24294>   ADDQ.w #1,D1
0003266E <AmiBlitz3.ab3@24297>  BRA.w Atokejsr
00032670 <AmiBlitz3.ab3@24300> RTS
00032676 <AmiBlitz3.ab3@24303> JUMP_caseerr JMP caseerr
0003267A <AmiBlitz3.ab3@24310>   MOVE.l firstsel(PC),D0
0003267E <AmiBlitz3.ab3@24311>    BEQ.w JUMP_caseerr
00032680 <AmiBlitz3.ab3@24312>   MOVEA.l D0,A2
00032684 <AmiBlitz3.ab3@24313>    BSR.w fillbra
00032688 <AmiBlitz3.ab3@24314>    BSR.w fillbne
0003268C <AmiBlitz3.ab3@24316>   MOVE.w $C(A2),D2    ;type to get!
0003268E <AmiBlitz3.ab3@24317>   MOVE.w D2,-(A7)
00032692 <AmiBlitz3.ab3@24318>    BSR.w casechk
00032694 <AmiBlitz3.ab3@24319>   MOVE.w (A7),D2
00032698 <AmiBlitz3.ab3@24322>    BSR.w bakeval
0003269A <AmiBlitz3.ab3@24323>   MOVE.w (A7)+,D2    ;types to compare
0003269E <AmiBlitz3.ab3@24324>   LEA selcomb(PC),A0
000326A2 <AmiBlitz3.ab3@24325>   LEA selcombf(PC),A1
000326A6 <AmiBlitz3.ab3@24326>   CMP.w #$1,D2
000326AA <AmiBlitz3.ab3@24327>    BEQ.w 'doit
000326AE <AmiBlitz3.ab3@24328>   LEA selcomw(PC),A0
000326B2 <AmiBlitz3.ab3@24329>   CMP.w #$2,D2
000326B6 <AmiBlitz3.ab3@24330>    BEQ.w 'doit
000326BA <AmiBlitz3.ab3@24331>   LEA selcoml(PC),A0
000326BE <AmiBlitz3.ab3@24332>   LEA selcomlf(PC),A1
000326C2 <AmiBlitz3.ab3@24333>   CMP.w #$7,D2
000326C6 <AmiBlitz3.ab3@24334>    BCS.w 'doit
000326CA <AmiBlitz3.ab3@24336>   MOVE.w #$CE01,D1     ; was #casestrcomp
000326CE <AmiBlitz3.ab3@24337>    BSR.w Atokejsr
000326D2 <AmiBlitz3.ab3@24338>  BRA.w 'doneit
000326D6 <AmiBlitz3.ab3@24341>   BSR.w pokecode
000326DA <AmiBlitz3.ab3@24344>   MOVE.w selbne(PC),D1
000326E0 <AmiBlitz3.ab3@24347>     TST.b fast
000326E4 <AmiBlitz3.ab3@24348>     BEQ 'l1
000326EA <AmiBlitz3.ab3@24349>     ORI.l #$ff,d1
000326EE <AmiBlitz3.ab3@24350>     BSR writeword
000326F2 <AmiBlitz3.ab3@24355>   BSR.w writeword
000326F6 <AmiBlitz3.ab3@24356>   MOVEA.l firstsel(PC),A0
000326FE <AmiBlitz3.ab3@24357>   MOVE.l destpointer,$8(A0)
00032702 <AmiBlitz3.ab3@24358> BRA.w writeword
00032706 <AmiBlitz3.ab3@24362> pcchk:      Dc.b $3F,$3C,$73,$45                           ;MOVE.W  #$7345,-(A7)   ;#"sE",-(a7) org source
00032708 <AmiBlitz3.ab3@24363> clrst:      Dc.b $42,$A7                                   ;CLR.L   -(A7)
0003270C <AmiBlitz3.ab3@24366> sellineat:  Ds.l 1
00032712 <AmiBlitz3.ab3@24372>   TST.b debugmode
00032716 <AmiBlitz3.ab3@24373>    BEQ.w 'norerr
0003271A <AmiBlitz3.ab3@24374>   MOVE.l pcchk(PC),D1                                      ;move #"sE",-(a7)
0003271E <AmiBlitz3.ab3@24375>    BSR.w writelong
00032728 <AmiBlitz3.ab3@24378>   MOVE.l linenumat,sellineat
00032732 <AmiBlitz3.ab3@24381>    MOVE.l destpointer,pushpc
0003273C <AmiBlitz3.ab3@24382>   MOVE.l hunkoffsetbase,pushoff
0003273E <AmiBlitz3.ab3@24384>   MOVEQ.l #$00,D2
00032742 <AmiBlitz3.ab3@24385>    BSR.w bakevalu                                          ;Evaluate
00032746 <AmiBlitz3.ab3@24386>    BSR.w pushdo
0003274A <AmiBlitz3.ab3@24387>   CMP.w #$7,D2
0003274E <AmiBlitz3.ab3@24388>    BNE.w 'nos
00032752 <AmiBlitz3.ab3@24389>   MOVE.w clrst(PC),D1
00032756 <AmiBlitz3.ab3@24390>    BSR.w writeword
0003275A <AmiBlitz3.ab3@24393>    BSR.w pushput
0003275E <AmiBlitz3.ab3@24394>   LEA selpushb(PC),A0
00032762 <AmiBlitz3.ab3@24395>   LEA selpushbf(PC),A1
00032766 <AmiBlitz3.ab3@24396>   CMP.w #$1,D2
0003276A <AmiBlitz3.ab3@24397>    BEQ.w 'doit
0003276E <AmiBlitz3.ab3@24398>   LEA selpushw(PC),A0
00032772 <AmiBlitz3.ab3@24399>   CMP.w #$2,D2
00032776 <AmiBlitz3.ab3@24400>    BEQ.w 'doit
0003277A <AmiBlitz3.ab3@24401>   LEA selpushl(PC),A0
0003277E <AmiBlitz3.ab3@24402>   LEA selpushlf(PC),A1
00032782 <AmiBlitz3.ab3@24403>   CMP.w #$7,D2
00032786 <AmiBlitz3.ab3@24404>    BCS.w 'doit
0003278C <AmiBlitz3.ab3@24406>   MOVE.w moved0a3,D1                                       ;d0 to a3!
00032790 <AmiBlitz3.ab3@24407>    BSR.w writeword
00032794 <AmiBlitz3.ab3@24408>   LEA selpushs(PC),A0
00032798 <AmiBlitz3.ab3@24409>   LEA selpushsf(PC),A1
0003279C <AmiBlitz3.ab3@24410>    BSR.w pokecode
000327A0 <AmiBlitz3.ab3@24411>   MOVE.w #$C701,D1     ; was #astring
000327A4 <AmiBlitz3.ab3@24412>    BSR.w Atokejsr
000327A8 <AmiBlitz3.ab3@24413>  BRA.w 'doneit
000327AC <AmiBlitz3.ab3@24416>   BSR.w pokecode
000327AE <AmiBlitz3.ab3@24419>   MOVEQ.l #$0E,D0
000327B0 <AmiBlitz3.ab3@24420>   MOVEQ.l #$01,D1
000327B6 <AmiBlitz3.ab3@24421>   MOVEA.l _execbase,A6
000327BC <AmiBlitz3.ab3@24424>   MOVE.l mempool,a0
000327C0 <AmiBlitz3.ab3@24425>   JSR _AllocPooled(a6)
000327C2 <AmiBlitz3.ab3@24427>   MOVEA.l D0,A0
000327C6 <AmiBlitz3.ab3@24428>   MOVE.l firstsel(PC),(A0)
000327CC <AmiBlitz3.ab3@24429>   MOVE.l A0,firstsel
000327D0 <AmiBlitz3.ab3@24430>   CLR.l $4(A0)
000327D4 <AmiBlitz3.ab3@24431>   CLR.l $8(A0)        ;default mode!
000327D8 <AmiBlitz3.ab3@24432>   MOVE.w D2,$C(A0)
000327DA <AmiBlitz3.ab3@24433> RTS
000327E0 <AmiBlitz3.ab3@24437>   MOVE.l firstrep,D0
000327E4 <AmiBlitz3.ab3@24438>    BEQ.w JUMP_unterr1
000327E8 <AmiBlitz3.ab3@24439>   MOVE.w #$6000,D1      ;BRA
000327EC <AmiBlitz3.ab3@24440>   BSR.w writeword
000327EE <AmiBlitz3.ab3@24441>   MOVEA.l D0,A0
000327F2 <AmiBlitz3.ab3@24442>   MOVE.l $4(A0),D1      ;dest pc
000327F8 <AmiBlitz3.ab3@24443>   SUB.l destpointer,D1
000327FA <AmiBlitz3.ab3@24444>   TST.w D1
000327FE <AmiBlitz3.ab3@24445>    BPL.w JUMP_unterr2
00032802 <AmiBlitz3.ab3@24446>   BSR.w writeword
00032808 <AmiBlitz3.ab3@24447>   MOVEA.l _execbase,A6
0003280C <AmiBlitz3.ab3@24448> BRA.w unlinkrep
00032812 <AmiBlitz3.ab3@24450> JUMP_unterr2 JMP unterr2
00032818 <AmiBlitz3.ab3@24451> JUMP_unterr1 JMP unterr1
0003281E <AmiBlitz3.ab3@24455>   MOVE.l firstrep,D0
00032822 <AmiBlitz3.ab3@24456>    BEQ.w JUMP_unterr1    ;no repeat!
00032826 <AmiBlitz3.ab3@24457>   BSR.w do_if            ;do the until
0003282C <AmiBlitz3.ab3@24459>   JSR reget
00032830 <AmiBlitz3.ab3@24460>    BNE.w JUMP_syntaxerr
00032836 <AmiBlitz3.ab3@24462>   MOVE.w dontwrite_nomemleft,D1
0003283A <AmiBlitz3.ab3@24463>    BNE.w 'skip
00032840 <AmiBlitz3.ab3@24464>   MOVEA.l firstrep,A0
00032846 <AmiBlitz3.ab3@24465>   MOVEA.l destpointer,A1
0003284C <AmiBlitz3.ab3@24468>     TST.b fast
00032850 <AmiBlitz3.ab3@24469>     BEQ 'l1
00032852 <AmiBlitz3.ab3@24470>     SUBQ.w #4,a1
00032856 <AmiBlitz3.ab3@24471>     MOVE.l $4(A0),D2
00032858 <AmiBlitz3.ab3@24472>     SUB.l A1,D2
0003285A <AmiBlitz3.ab3@24473>     MOVE.l d2,(a1)
0003285E <AmiBlitz3.ab3@24474>   BRA 'skip
00032860 <AmiBlitz3.ab3@24479>   SUBQ.w #2,A1
00032864 <AmiBlitz3.ab3@24480>   MOVE.l $4(A0),D2    ;dest pc.
00032866 <AmiBlitz3.ab3@24481>   SUB.l A1,D2
00032868 <AmiBlitz3.ab3@24482>   TST.w D2
0003286C <AmiBlitz3.ab3@24483>    BPL.w JUMP_unterr2
0003286E <AmiBlitz3.ab3@24484>   MOVE.w D2,(A1)      ;put in pra dest.
00032874 <AmiBlitz3.ab3@24487>   MOVEA.l firstiff,A1
0003287A <AmiBlitz3.ab3@24488>   MOVE.l (A1),firstiff
0003287C <AmiBlitz3.ab3@24489>   MOVEQ.l #$0E,D0
00032882 <AmiBlitz3.ab3@24490>   MOVEA.l _execbase,A6
00032888 <AmiBlitz3.ab3@24493>   MOVE.l mempool,a0
0003288C <AmiBlitz3.ab3@24494>   JSR _FreePooled(A6)
00032892 <AmiBlitz3.ab3@24498>   MOVEA.l firstrep,A1
00032898 <AmiBlitz3.ab3@24499>   MOVE.l (A1),firstrep
0003289A <AmiBlitz3.ab3@24500>   MOVEQ.l #$08,D0
000328A0 <AmiBlitz3.ab3@24503>   MOVE.l mempool,a0
000328A4 <AmiBlitz3.ab3@24504> JMP _FreePooled(A6)
000328A8 <AmiBlitz3.ab3@24507> iflineat:   Ds.l 1
000328AA <AmiBlitz3.ab3@24511>   MOVEQ.l #$00,D2   ;negate flag
000328B0 <AmiBlitz3.ab3@24513>   TST.b fast
000328B4 <AmiBlitz3.ab3@24514>   BEQ 'l1
000328BC <AmiBlitz3.ab3@24515>   MOVE.b #1,nostringopt
000328C4 <AmiBlitz3.ab3@24516>   MOVE.b #1,iniffcommand
000328C6 <AmiBlitz3.ab3@24521>   MOVEQ.l #$00,D1  ;if flag
000328C8 <AmiBlitz3.ab3@24527>   MOVE.w D1,-(A7)
000328CE <AmiBlitz3.ab3@24528>   MOVE.l destpointer,-(A7)
000328D0 <AmiBlitz3.ab3@24529>   MOVE.w D2,-(A7)
000328DA <AmiBlitz3.ab3@24530>   MOVE.l linenumat,iflineat
000328DC <AmiBlitz3.ab3@24532>   MOVEQ.l #$00,D2
000328E6 <AmiBlitz3.ab3@24534>   MOVE.b optistring,optistring2
000328EE <AmiBlitz3.ab3@24535>   MOVE.b #1,optistring
000328F2 <AmiBlitz3.ab3@24537>   BSR.w bakevalu       ;Get True/False Expression!
000328FC <AmiBlitz3.ab3@24539>   MOVE.b optistring2,optistring
00032900 <AmiBlitz3.ab3@24541>   CMP.w #$5,D2
00032904 <AmiBlitz3.ab3@24542>    BEQ.w 'float
00032908 <AmiBlitz3.ab3@24543>   MOVE.w thetst1(PC),D1
0003290C <AmiBlitz3.ab3@24544>   CMP.w #$1,D2
00032910 <AmiBlitz3.ab3@24545>    BEQ.w 'writebranchcode
00032914 <AmiBlitz3.ab3@24546>   MOVE.w thetst2(PC),D1
00032918 <AmiBlitz3.ab3@24547>   CMP.w #$2,D2
0003291C <AmiBlitz3.ab3@24548>    BEQ.w 'writebranchcode
00032920 <AmiBlitz3.ab3@24549>   MOVE.w thetst4(PC),D1
00032924 <AmiBlitz3.ab3@24550>   CMP.w #$7,D2
00032928 <AmiBlitz3.ab3@24551>    BEQ.w 'writebranchcode
0003292C <AmiBlitz3.ab3@24552>   MOVE.w thetst3(PC),D1
00032930 <AmiBlitz3.ab3@24553>  BRA.w 'writebranchcode
00032936 <AmiBlitz3.ab3@24557>   TST.b fpu
0003293A <AmiBlitz3.ab3@24558>   BEQ 'dofpu
00032940 <AmiBlitz3.ab3@24559>   MOVE.l #$f200003a,d1
00032944 <AmiBlitz3.ab3@24560>   BSR writelong
00032948 <AmiBlitz3.ab3@24561>   MOVE.w #$f2c1,d1       
0003294C <AmiBlitz3.ab3@24562>   BSR writeword
00032950 <AmiBlitz3.ab3@24563>   BSR writelong
00032952 <AmiBlitz3.ab3@24564>   ADDQ.l #2,a7
00032956 <AmiBlitz3.ab3@24565>  BRA.w 'br2
0003295A <AmiBlitz3.ab3@24569>    MOVE.w #$C900,D1     ;was #getffpbase
0003295E <AmiBlitz3.ab3@24570>    BSR.w Atokejsr
00032962 <AmiBlitz3.ab3@24571>   MOVE.l thetst5(PC),D1
00032966 <AmiBlitz3.ab3@24572>    BSR.w writelong
0003296A <AmiBlitz3.ab3@24573>  BRA.w 'gotst2
00032970 <AmiBlitz3.ab3@24577>          CLR.b iniffcommand
00032976 <AmiBlitz3.ab3@24578>          TST.b fast                                        ;branchcode
0003297A <AmiBlitz3.ab3@24579>          BEQ 'b6
00032980 <AmiBlitz3.ab3@24580>          TST.b fpu
00032984 <AmiBlitz3.ab3@24581>          BEQ 'nofpu
0003298A <AmiBlitz3.ab3@24585>           MOVE.l destpointer,a0
00032990 <AmiBlitz3.ab3@24586>          SUB.l load_var_addr,a0
00032996 <AmiBlitz3.ab3@24587>          CMP.l #4,a0
0003299A <AmiBlitz3.ab3@24588>          BEQ 'nofpu
000329A2 <AmiBlitz3.ab3@24589>          CMP.l #$f2400014,-4(a4)                           ;<
000329A6 <AmiBlitz3.ab3@24590>          BNE 'nolt
000329AC <AmiBlitz3.ab3@24591>          SUBQ.l #2,destpointer
000329B2 <AmiBlitz3.ab3@24592>          MOVE.w #$f293,-4(a4)                              ;
000329B6 <AmiBlitz3.ab3@24593>  BRA 'brf
000329BE <AmiBlitz3.ab3@24596>   CMP.l #$f2400015,-4(a4)                                  ;<=
000329C2 <AmiBlitz3.ab3@24597>          BNE 'nole
000329C8 <AmiBlitz3.ab3@24598>          SUBQ.l #2,destpointer
000329CE <AmiBlitz3.ab3@24599>          MOVE.w #$f292,-4(a4)
000329D2 <AmiBlitz3.ab3@24600>  BRA 'brf
000329DA <AmiBlitz3.ab3@24603>   CMP.l #$f2400013,-4(a4)                                  ;=>
000329DE <AmiBlitz3.ab3@24604>          BNE 'noge
000329E4 <AmiBlitz3.ab3@24605>          SUBQ.l #2,destpointer
000329EA <AmiBlitz3.ab3@24606>          MOVE.w #$f294,-4(a4)
000329EE <AmiBlitz3.ab3@24607>  BRA 'brf
000329F6 <AmiBlitz3.ab3@24610>   CMP.l #$f2400012,-4(a4)                                  ;>
000329FA <AmiBlitz3.ab3@24611>          BNE 'nogt
00032A00 <AmiBlitz3.ab3@24612>          SUBQ.l #2,destpointer
00032A06 <AmiBlitz3.ab3@24613>          MOVE.w #$f295,-4(a4)
00032A0A <AmiBlitz3.ab3@24614>  BRA 'brf
00032A12 <AmiBlitz3.ab3@24617>   CMP.l #$f2400001,-4(a4)                                  ;=
00032A16 <AmiBlitz3.ab3@24618>          BNE 'noeq
00032A1C <AmiBlitz3.ab3@24619>          SUBQ.l #2,destpointer
00032A22 <AmiBlitz3.ab3@24620>          MOVE.w #$f28e,-4(a4)
00032A26 <AmiBlitz3.ab3@24621>  BRA 'brf
00032A2E <AmiBlitz3.ab3@24624>   CMP.l #$f240000e,-4(a4)                                  ;<>
00032A32 <AmiBlitz3.ab3@24625>          BNE 'none
00032A38 <AmiBlitz3.ab3@24626>          SUBQ.l #2,destpointer
00032A3E <AmiBlitz3.ab3@24627>          MOVE.w #$f281,-4(a4)
00032A40 <AmiBlitz3.ab3@24630>   ADDQ.l #2,a7
00032A46 <AmiBlitz3.ab3@24632>     TST.b fast
00032A4A <AmiBlitz3.ab3@24633>     BEQ 'l1
00032A50 <AmiBlitz3.ab3@24634>     OR.b #$40,-3(a4)
00032A54 <AmiBlitz3.ab3@24635>     BSR writeword
00032A58 <AmiBlitz3.ab3@24639>   BSR writeword
00032A5C <AmiBlitz3.ab3@24640>  BRA.s 'br2
00032A62 <AmiBlitz3.ab3@24644>   MOVE.l destpointer,a0
00032A68 <AmiBlitz3.ab3@24645>          SUB.l load_var_addr,a0
00032A6E <AmiBlitz3.ab3@24646>          CMP.l #4,a0
00032A72 <AmiBlitz3.ab3@24647>          BEQ 'gotst2
00032A78 <AmiBlitz3.ab3@24648>          CMP.w #$4eb9,-6(a4)
00032A7C <AmiBlitz3.ab3@24649>          BEQ 'b6
00032A82 <AmiBlitz3.ab3@24650>          CMP.w #$5ec0,-2(a4)                               ;>
00032A86 <AmiBlitz3.ab3@24651>      BNE.s 'lb1
00032A8C <AmiBlitz3.ab3@24652>          MOVE.w #$6f00,-2(a4)                              ;ble
00032A90 <AmiBlitz3.ab3@24653>  BRA.s 'br
00032A96 <AmiBlitz3.ab3@24656>   CMP.w #$5dc0,-2(a4)                                       ;<
00032A9A <AmiBlitz3.ab3@24657>   BNE.s 'lb2
00032AA0 <AmiBlitz3.ab3@24658>          MOVE.w #$6c00,-2(a4)                              ;bge
00032AA4 <AmiBlitz3.ab3@24659>  BRA.s 'br
00032AAA <AmiBlitz3.ab3@24662>   CMP.w #$57c0,-2(a4)                                      ;=
00032AAE <AmiBlitz3.ab3@24663>   BNE.s 'lb3
00032AB4 <AmiBlitz3.ab3@24664>          MOVE.w #$6600,-2(a4)                              ;bne
00032AB8 <AmiBlitz3.ab3@24665>  BRA.s 'br
00032ABE <AmiBlitz3.ab3@24668>   CMP.w #$56c0,-2(a4)                                      ;<>
00032AC2 <AmiBlitz3.ab3@24669>   BNE.s 'lb4
00032AC8 <AmiBlitz3.ab3@24670>          MOVE.w #$6700,-2(a4)                              ;beq
00032ACC <AmiBlitz3.ab3@24671>  BRA.s 'br
00032AD2 <AmiBlitz3.ab3@24674>   CMP.w #$5cc0,-2(a4)                                      ;>=
00032AD6 <AmiBlitz3.ab3@24675>   BNE.s 'lb5
00032ADC <AmiBlitz3.ab3@24676>          MOVE.w #$6d00,-2(a4)                              ;blt
00032AE0 <AmiBlitz3.ab3@24677>  BRA.s 'br
00032AE6 <AmiBlitz3.ab3@24680>   CMP.w #$5fc0,-2(a4)                                      ;<=
00032AEA <AmiBlitz3.ab3@24681>         BNE.s 'b6
00032AF0 <AmiBlitz3.ab3@24682>          MOVE.w #$6e00,-2(a4)                              ;bgt
00032AF2 <AmiBlitz3.ab3@24685>   TST.w (a7)+
00032AF8 <AmiBlitz3.ab3@24687>         TST.b fast
00032AFC <AmiBlitz3.ab3@24688>         BEQ 'l1a
00032B02 <AmiBlitz3.ab3@24689>         OR.b #$ff,-1(a4)                                   ;long branches
00032B06 <AmiBlitz3.ab3@24690>         BSR writeword
00032B0A <AmiBlitz3.ab3@24694>         BSR writeword
00032B0E <AmiBlitz3.ab3@24695>  BRA.s 'br2
00032B12 <AmiBlitz3.ab3@24699>   BSR.w writeword
00032B16 <AmiBlitz3.ab3@24702>   MOVE.l posbr(PC),D1
00032B18 <AmiBlitz3.ab3@24703>   TST.w (A7)+
00032B1C <AmiBlitz3.ab3@24704>    BEQ.w 'skip
00032B20 <AmiBlitz3.ab3@24705>   MOVE.l negbr(PC),D1
00032B26 <AmiBlitz3.ab3@24709>   TST.b fast
00032B2A <AmiBlitz3.ab3@24710>            BEQ 'l1b
00032B30 <AmiBlitz3.ab3@24711>            OR.l #$00ff0000,d1
00032B34 <AmiBlitz3.ab3@24712>            BSR writelong
00032B38 <AmiBlitz3.ab3@24713>            BSR writeword
00032B3C <AmiBlitz3.ab3@24714>  BRA 'br2
00032B40 <AmiBlitz3.ab3@24717>   BSR.w writelong
00032B42 <AmiBlitz3.ab3@24721>   MOVEQ.l #$0E,D0
00032B44 <AmiBlitz3.ab3@24722>   MOVEQ.l #$01,D1
00032B4A <AmiBlitz3.ab3@24723>   MOVEA.l _execbase,A6
00032B50 <AmiBlitz3.ab3@24726>   MOVE.l mempool,a0
00032B54 <AmiBlitz3.ab3@24727>   JSR _AllocPooled(a6)
00032B56 <AmiBlitz3.ab3@24730>   MOVEA.l D0,A0
00032B5C <AmiBlitz3.ab3@24731>   MOVE.l firstiff,(A0)
00032B62 <AmiBlitz3.ab3@24732>   MOVE.l A0,firstiff
00032B66 <AmiBlitz3.ab3@24733>   MOVE.l (A7)+,$4(A0)
00032B6E <AmiBlitz3.ab3@24734>   MOVE.l destpointer,$8(A0)
00032B72 <AmiBlitz3.ab3@24735>   MOVE.w (A7)+,$C(A0)
00032B78 <AmiBlitz3.ab3@24736>    JSR reget
00032B7C <AmiBlitz3.ab3@24737>    BEQ.w ifdone
00032B82 <AmiBlitz3.ab3@24738>   BSET #$7,$C(A0)    ;one liner
00032B8C <AmiBlitz3.ab3@24744>   MOVE.w oldqflag,instringon
00032B92 <AmiBlitz3.ab3@24745>   MOVEA.l lastsourcepos,A5
00032B9A <AmiBlitz3.ab3@24747>   MOVE.w #$003A,lastchar      ; ':'
00032B9C <AmiBlitz3.ab3@24750> RTS
00032BA0 <AmiBlitz3.ab3@24754>   CMP.w #$1,D0     ;4
00032BA4 <AmiBlitz3.ab3@24755>    BLT.w gc1skip   ;4
00032BA8 <AmiBlitz3.ab3@24756>   CMP.w #$0,D0     ;2
00032BAC <AmiBlitz3.ab3@24757>    BGT.w gc1skip
00032BAE <AmiBlitz3.ab3@24758>   ADD.w D0,D0
00032BB0 <AmiBlitz3.ab3@24759>   ADD.w D0,D0
00032BB4 <AmiBlitz3.ab3@24760>   MOVEA.l gc1labs-4(PC,D0.W),A0
00032BB6 <AmiBlitz3.ab3@24761>  JMP (A0)
00032BBA <AmiBlitz3.ab3@24764>  BRA.w gc1skip
00032BBE <AmiBlitz3.ab3@24770>   CMP.w #$1,D0     ;4
00032BC2 <AmiBlitz3.ab3@24771>    BLT.w gc2skip   ;4
00032BC6 <AmiBlitz3.ab3@24772>   CMP.w #$0,D0     ;2
00032BCA <AmiBlitz3.ab3@24773>    BGT.w gc2skip
00032BCC <AmiBlitz3.ab3@24774>   ADD.w D0,D0
00032BCE <AmiBlitz3.ab3@24775>   ADD.w D0,D0
00032BD2 <AmiBlitz3.ab3@24776>   MOVEA.l gc2labs-4(PC,D0.W),A0
00032BD4 <AmiBlitz3.ab3@24777>   JSR (A0)
00032BD8 <AmiBlitz3.ab3@24780>  BRA.w gc2skip
00032BDC <AmiBlitz3.ab3@24786>   CMP.w #$1,D0    ;4
00032BE0 <AmiBlitz3.ab3@24787>    BLT.w gc3skip  ;4
00032BE4 <AmiBlitz3.ab3@24788>   CMP.w #$0,D0    ;2
00032BE8 <AmiBlitz3.ab3@24789>    BGT.w gc3skip
00032BEA <AmiBlitz3.ab3@24790>   ADD.w D0,D0
00032BEC <AmiBlitz3.ab3@24791>   ADD.w D0,D0
00032BF0 <AmiBlitz3.ab3@24792>   MOVEA.l gc3labs-4(PC,D0.W),A0
00032BF4 <AmiBlitz3.ab3@24795>   MOVE.w #$6753,-(A7)                                      ;#'gS' ;for runtime error checking!
00032BF6 <AmiBlitz3.ab3@24796>    JSR (A0)
00032BFA <AmiBlitz3.ab3@24799>  BRA.w gc3skip
00032BFC <AmiBlitz3.ab3@24804> labcnt:   Ds.w 1
00032BFE <AmiBlitz3.ab3@24811>   MOVEQ.l #$02,D2
00032C02 <AmiBlitz3.ab3@24812>    BSR.w bakeval
00032C06 <AmiBlitz3.ab3@24814>   LEA ongotocode(PC),A0
00032C0A <AmiBlitz3.ab3@24815>   LEA ongotocodef(PC),A1
00032C0E <AmiBlitz3.ab3@24816>   MOVE.w #gc1skip-ongotocode,D1      ; is #$001A
00032C12 <AmiBlitz3.ab3@24817>   CMP.w #-$7FFB,D0                   ; was #$8005
00032C16 <AmiBlitz3.ab3@24818>    BEQ.w 'isok
00032C1A <AmiBlitz3.ab3@24819>   CMP.w #-$7FFA,D0                   ; was #$8006
00032C1E <AmiBlitz3.ab3@24820>    BNE.w JUMP_syntaxerr
00032C22 <AmiBlitz3.ab3@24821>   LEA ongosubcode(PC),A0
00032C26 <AmiBlitz3.ab3@24822>   LEA ongosubcodef(PC),A1
00032C2A <AmiBlitz3.ab3@24823>   MOVE.w #gc2skip-ongosubcode,D1     ; is #$001A
00032C30 <AmiBlitz3.ab3@24825>   TST.b debugmode
00032C34 <AmiBlitz3.ab3@24826>    BEQ.b 'isok
00032C3A <AmiBlitz3.ab3@24828>    JSR chkstak
00032C3E <AmiBlitz3.ab3@24829>   LEA ongcode(PC),A0
00032C42 <AmiBlitz3.ab3@24830>   LEA ongcodef(PC),A1
00032C46 <AmiBlitz3.ab3@24831>   MOVE.w #gc3skip-ongcode,D1         ; is #$001E
00032C48 <AmiBlitz3.ab3@24834>   MOVE.w D1,-(A7)
00032C4E <AmiBlitz3.ab3@24835>   MOVE.l destpointer,-(A7)                                 ;for when we know number of labels!
00032C52 <AmiBlitz3.ab3@24836>    BSR.w pokecode
00032C58 <AmiBlitz3.ab3@24837>   CLR.w labcnt
00032C5E <AmiBlitz3.ab3@24843>    JSR get1bytemain
00032C64 <AmiBlitz3.ab3@24844>   SUBQ.l #2,destpointer                                    ;for makealab!
00032C68 <AmiBlitz3.ab3@24845>    BSR.w makealab2
00032C6E <AmiBlitz3.ab3@24846>   ADDQ.l #2,destpointer
00032C74 <AmiBlitz3.ab3@24847>    JSR addoff
00032C78 <AmiBlitz3.ab3@24848>   MOVE.l $8(A2),D1
00032C7C <AmiBlitz3.ab3@24849>    BSR.w writelong
00032C82 <AmiBlitz3.ab3@24850>   ADDQ.w #1,labcnt
00032C88 <AmiBlitz3.ab3@24851>    JSR reget
00032C8C <AmiBlitz3.ab3@24852>   CMP.w #$2C,D0 ; ','
00032C90 <AmiBlitz3.ab3@24853>    BEQ.w 'loop
00032C92 <AmiBlitz3.ab3@24855>   MOVEA.l (A7)+,A0
00032C94 <AmiBlitz3.ab3@24856>   MOVE.w (A7)+,D2
00032C9A <AmiBlitz3.ab3@24857>   MOVE.w dontwrite_nomemleft,D1
00032C9E <AmiBlitz3.ab3@24858>    BNE.w 'done
00032CA2 <AmiBlitz3.ab3@24860>   MOVE.w labcnt(PC),D1
00032CA6 <AmiBlitz3.ab3@24861>   MOVE.w D1,$A(A0)       ;for cmp#
00032CA8 <AmiBlitz3.ab3@24862>   ADD.w D1,D1
00032CAA <AmiBlitz3.ab3@24863>   ADD.w D1,D1
00032CAC <AmiBlitz3.ab3@24864>   ADDQ.w #2,D1
00032CB0 <AmiBlitz3.ab3@24865>   MOVE.w D1,$2(A0,D2.W)  ;for bra!
00032CB2 <AmiBlitz3.ab3@24868> RTS
00032CB8 <AmiBlitz3.ab3@24872>   TST.b debugmode
00032CBC <AmiBlitz3.ab3@24873>    BEQ.w 'noerr
00032CC2 <AmiBlitz3.ab3@24875>    JSR chkstak
00032CC8 <AmiBlitz3.ab3@24876>   MOVE.l goset,D1
00032CCC <AmiBlitz3.ab3@24877>    BSR.w writelong
00032CD2 <AmiBlitz3.ab3@24880>   MOVE.w gosubcode,D1
00032CD6 <AmiBlitz3.ab3@24881> BRA.w dogoto2
00032CDC <AmiBlitz3.ab3@24885>   MOVE.w gotocode,D1
00032CDE <AmiBlitz3.ab3@24888>   MOVE.w D1,-(A7)
00032CE2 <AmiBlitz3.ab3@24889>    BSR.w makealab2
00032CE4 <AmiBlitz3.ab3@24890>   MOVE.w (A7)+,D1
00032CE8 <AmiBlitz3.ab3@24891>    BSR.w writeword
00032CEE <AmiBlitz3.ab3@24892>    JSR addoff
00032CF2 <AmiBlitz3.ab3@24893>   MOVE.l $8(A2),D1
00032CF6 <AmiBlitz3.ab3@24894> BRA.w writelong
00032CFC <AmiBlitz3.ab3@24898>   MOVE.w proceduremode,D1
00032D00 <AmiBlitz3.ab3@24899>    BEQ.w JUMP_badpenderr
00032D04 <AmiBlitz3.ab3@24901>   MOVE.w #$4EF9,D1
00032D08 <AmiBlitz3.ab3@24902>    BSR.w writeword
00032D0E <AmiBlitz3.ab3@24903>    JSR addoff
00032D14 <AmiBlitz3.ab3@24905>   MOVEA.l _execbase,A6
00032D16 <AmiBlitz3.ab3@24906>   MOVEQ.l #$08,D0
00032D18 <AmiBlitz3.ab3@24907>   MOVEQ.l #$01,D1
00032D1E <AmiBlitz3.ab3@24910>   MOVE.l mempool,a0
00032D22 <AmiBlitz3.ab3@24911>   JSR _AllocPooled(a6)
00032D24 <AmiBlitz3.ab3@24913>   MOVEA.l D0,A0
00032D2A <AmiBlitz3.ab3@24914>   MOVE.l firstpend,(A0)
00032D30 <AmiBlitz3.ab3@24915>   MOVE.l A0,firstpend
00032D38 <AmiBlitz3.ab3@24916>   MOVE.l destpointer,$4(A0)
00032D3C <AmiBlitz3.ab3@24918> BRA.w writelong
00032D40 <AmiBlitz3.ab3@24922>   BSR.w do_AsmExit
00032D46 <AmiBlitz3.ab3@24923> JMP get1bytemain
00032D4E <AmiBlitz3.ab3@24928>   MOVE.b #1,nostringopt
00032D52 <AmiBlitz3.ab3@24929>   MOVEM.l a0/a1/d1,-(a7)
00032D58 <AmiBlitz3.ab3@24931>   MOVEA.l currentfunction,A0
00032D5E <AmiBlitz3.ab3@24933>     CMP.l #0,a0
00032D62 <AmiBlitz3.ab3@24934>     BNE 'l1
00032D68 <AmiBlitz3.ab3@24935>     JMP errorasmexit
00032D6A <AmiBlitz3.ab3@24938>   MOVEQ.l #$00,D2
00032D6E <AmiBlitz3.ab3@24940>   MOVE.b $5(A0),D2      ;type returning!
00032D72 <AmiBlitz3.ab3@24941>   BSR.w eval            ;put return val in d0.
00032D78 <AmiBlitz3.ab3@24944>   MOVEA.l currentfunction,A0
00032D7C <AmiBlitz3.ab3@24945>   MOVE.l funcstruct_returntype(a0),a0
00032D82 <AmiBlitz3.ab3@24946>   CMP.l #0,a0
00032D86 <AmiBlitz3.ab3@24947>   BEQ 'isstatement
00032D8E <AmiBlitz3.ab3@24948>   CMP.l #$100,4(a0)
00032D92 <AmiBlitz3.ab3@24949>   BLT.w 'isvar
00032D94 <AmiBlitz3.ab3@24950>   MOVE.l a2,a1
00032D9A <AmiBlitz3.ab3@24951>   TST.l typetocast
00032D9E <AmiBlitz3.ab3@24952>   BEQ 'nocast
00032DA4 <AmiBlitz3.ab3@24953>   MOVE.l typetocast,a1
00032DA6 <AmiBlitz3.ab3@24956>   CMP.l a0,a1
00032DAA <AmiBlitz3.ab3@24957>   BEQ 'ok
00032DB0 <AmiBlitz3.ab3@24958>   CLR.l typetocast
00032DB6 <AmiBlitz3.ab3@24959>   MOVE.l lasttoken,d1
00032DBA <AmiBlitz3.ab3@24960>   CMP.w #NullTokenID,d1                   ;$b581 ok, when token for null
00032DBE <AmiBlitz3.ab3@24961>   BEQ 'isnull
00032DC4 <AmiBlitz3.ab3@24964>   JMP errorconvertreturntype
00032DC8 <AmiBlitz3.ab3@24973>   MOVEM.l (a7)+,a0/a1/d1
00032DCC <AmiBlitz3.ab3@24976> BRA.w do_AsmExit
00032DD2 <AmiBlitz3.ab3@24978> error_convert_types2 JMP error_convert_types
00032DD8 <AmiBlitz3.ab3@24994>   TST.b debugmode
00032DDC <AmiBlitz3.ab3@24995>    BEQ.w normret
00032DE0 <AmiBlitz3.ab3@24996>   MOVE.w #$C305,D1        ; was #chkret,
00032DE4 <AmiBlitz3.ab3@24997> BRA.w Atokejsr
00032DE8 <AmiBlitz3.ab3@25004>   MOVE.w #$4E75,D1
00032DEC <AmiBlitz3.ab3@25005> BRA.w writeword
00032DF0 <AmiBlitz3.ab3@25008> localslist:  Ds.l 1                                        ;all locals for procs.;??Looks like obsovled data??
00032DF4 <AmiBlitz3.ab3@25009> proclocals:  Ds.l 1                                        ;for debugga!
00032DF6 <AmiBlitz3.ab3@25010> procnum:     Ds.w 1
00032DF8 <AmiBlitz3.ab3@25011> procnum2:    Ds.w 1
00032DFC <AmiBlitz3.ab3@25012> prolineat:   Ds.l 1
00032E02 <AmiBlitz3.ab3@25017>    TST.w proceduremode
00032E06 <AmiBlitz3.ab3@25018>    BGT JUMP_sreterr
00032E0A <AmiBlitz3.ab3@25020>    CMP.w #-$7FF9,D0     ;was #$8007
00032E0E <AmiBlitz3.ab3@25021>    BEQ.w stateret
00032E10 <AmiBlitz3.ab3@25022>    MOVEQ.l #-$01,D1  ;statement flag
00032E14 <AmiBlitz3.ab3@25023> BRA.w do_function2
00032E1A <AmiBlitz3.ab3@25025> JUMP_sreterr JMP sreterr
00032E20 <AmiBlitz3.ab3@25029>   CLR.b skipfunc
00032E26 <AmiBlitz3.ab3@25030>   TST.l unusedfunc
00032E2A <AmiBlitz3.ab3@25031>   BEQ 'ex
00032E2E <AmiBlitz3.ab3@25032>   MOVEM.l d0-d7/a0-a6,-(a7)
00032E34 <AmiBlitz3.ab3@25033>   MOVE.l unusedfunc,d1
00032E3A <AmiBlitz3.ab3@25034>   LEA ptr_parameterstore,a5
00032E3C <AmiBlitz3.ab3@25037>   MOVE.l d1,a0
00032E40 <AmiBlitz3.ab3@25038>   LEA 12(a0),a2
00032E42 <AmiBlitz3.ab3@25039>   MOVE.l a5,a1
00032E44 <AmiBlitz3.ab3@25041>   CMPM.b (a1)+,(a2)+
00032E48 <AmiBlitz3.ab3@25042>   BNE 'neq
00032E4A <AmiBlitz3.ab3@25043>   TST.b (a2)
00032E4E <AmiBlitz3.ab3@25044>   BNE 'ch
00032E50 <AmiBlitz3.ab3@25045>   TST.b (a1)
00032E54 <AmiBlitz3.ab3@25046>   BNE 'neq
00032E5C <AmiBlitz3.ab3@25047>   MOVE.b #1,skipfunc
00032E60 <AmiBlitz3.ab3@25048>  BRA 'out
00032E62 <AmiBlitz3.ab3@25051>   MOVE.l (a0),d1
00032E66 <AmiBlitz3.ab3@25052>   BNE 'ag
00032E6A <AmiBlitz3.ab3@25055>   MOVEM.l (a7)+,d0-d7/a0-a6
00032E6C <AmiBlitz3.ab3@25058> RTS
00032E72 <AmiBlitz3.ab3@25061> JUMP_dupprocerr  JMP dupprocerr
00032E78 <AmiBlitz3.ab3@25062> JUMP_illprocperr JMP illprocperr
00032E7E <AmiBlitz3.ab3@25063> JUMP_toovarerr   JMP toovarerr
00032E84 <AmiBlitz3.ab3@25064> JUMP_more6pard   JMP more6pard
00032E8C <AmiBlitz3.ab3@25068>   CMP.w #-1,proceduremode                                  
00032E90 <AmiBlitz3.ab3@25069>    BEQ JUMP_sreterr
00032E94 <AmiBlitz3.ab3@25070>   CMP.w #-$7FF9,D0      ; was #$8007
00032E98 <AmiBlitz3.ab3@25071>    BEQ.w do_function_return
00032EA2 <AmiBlitz3.ab3@25075>   MOVE.w oldqflag,instringon
00032EA8 <AmiBlitz3.ab3@25076>   MOVEA.l lastsourcepos,A5
00032EAE <AmiBlitz3.ab3@25078>   JSR getfunctionreturntype
00032EB4 <AmiBlitz3.ab3@25079>   JSR get1bytemain
00032EBA <AmiBlitz3.ab3@25085>   TST.b declare
00032EBE <AmiBlitz3.ab3@25086>   BEQ 'l3
00032EC6 <AmiBlitz3.ab3@25087>   MOVE.b #1,nowdeclare
00032ECC <AmiBlitz3.ab3@25091>   JSR errchx                                           ;writejumpoverfunction
00032ED2 <AmiBlitz3.ab3@25095>   CLR.b fastfunc
00032EDC <AmiBlitz3.ab3@25096>   MOVE.l firstiff,firstiffstore
00032EE4 <AmiBlitz3.ab3@25097>   CMP.l #"FAST",-1(a5)
00032EE8 <AmiBlitz3.ab3@25098>   BNE 'nofast
00032EEE <AmiBlitz3.ab3@25099>   CMP.b #" ",3(a5)
00032EF2 <AmiBlitz3.ab3@25100>   BNE 'nofast
00032EF4 <AmiBlitz3.ab3@25101>   ADDQ.l #3,a5
00032EF8 <AmiBlitz3.ab3@25104>     CMP.b #" ",(a5)
00032EFC <AmiBlitz3.ab3@25105>      BNE 'x1
00032EFE <AmiBlitz3.ab3@25106>     ADDQ #1,a5
00032F02 <AmiBlitz3.ab3@25107>  BRA 'x2
00032F08 <AmiBlitz3.ab3@25110>   MOVE.l a5,lastsourcepos
00032F10 <AmiBlitz3.ab3@25111>   MOVE.b #1,fastfunc
00032F18 <AmiBlitz3.ab3@25114>   CMP.l #"NOOP",-1(a5)                                     ;compile 3* so its deactivate
00032F1C <AmiBlitz3.ab3@25115>  BRA 'noopt
00032F22 <AmiBlitz3.ab3@25117>   CMP.w #"T ",3(a5)                                        ;??Looks like dead code??
00032F26 <AmiBlitz3.ab3@25118>   BNE 'noopt                                               ;          "
00032F28 <AmiBlitz3.ab3@25119>   ADDQ.l #4,a5                                             ;          "
00032F2C <AmiBlitz3.ab3@25122>     CMP.b #" ",(a5)                                        ;          "
00032F30 <AmiBlitz3.ab3@25123>      BNE 'x1b                                              ;          "
00032F32 <AmiBlitz3.ab3@25124>     ADDQ #1,a5                                             ;          "
00032F36 <AmiBlitz3.ab3@25125>  BRA 'x2b
00032F3C <AmiBlitz3.ab3@25128>   MOVE.l a5,lastsourcepos                                  ;          "
00032F42 <AmiBlitz3.ab3@25129>   JSR makename2                                            ;          "
00032F46 <AmiBlitz3.ab3@25130>  BRA 'l1                                                   ;          "
00032F4C <AmiBlitz3.ab3@25133>   JSR makename2
00032F52 <AmiBlitz3.ab3@25134>   JSR checkused
00032F58 <AmiBlitz3.ab3@25135>   TST.b skipfunc
00032F5C <AmiBlitz3.ab3@25136>    BEQ 'l1
00032F62 <AmiBlitz3.ab3@25137>   JSR skipme
00032F68 <AmiBlitz3.ab3@25138>   CLR.b fastfunc
00032F6A <AmiBlitz3.ab3@25139>  RTS
00032F74 <AmiBlitz3.ab3@25143>   MOVE.l linenumat,prolineat
00032F7A <AmiBlitz3.ab3@25145>   ADDQ.w #1,procnum2
00032F82 <AmiBlitz3.ab3@25146>   MOVE.w procnum2(PC),procnum
00032F88 <AmiBlitz3.ab3@25147>   MOVE.w D1,proceduremode
00032F8E <AmiBlitz3.ab3@25148>   CLR.w locvaroff
00032F92 <AmiBlitz3.ab3@25150>   CMP.w #$7B,D0   ;'{'
00032F96 <AmiBlitz3.ab3@25151>    BNE.w JUMP_syntaxerr
00032F9E <AmiBlitz3.ab3@25153>    MOVE.b #1,infunctioncode
00032FA4 <AmiBlitz3.ab3@25155>   MOVEA.l tempvm,A0
00032FAC <AmiBlitz3.ab3@25156>   MOVE.w $C(A0),memlibstat
00032FB2 <AmiBlitz3.ab3@25157>   BCLR #$7,$C(A0)                                          ;Bit out of range
00032FB6 <AmiBlitz3.ab3@25158>   MOVE.w #$4EF9,D1  ;make a jump around the proc
00032FBA <AmiBlitz3.ab3@25159>    BSR.w writeword
00032FC0 <AmiBlitz3.ab3@25160>    JSR addoff
00032FC4 <AmiBlitz3.ab3@25161>    BSR.w writelong
00032FCA <AmiBlitz3.ab3@25163>    JSR findproc                                          ;findproc function
00032FCE <AmiBlitz3.ab3@25164>    BEQ.w JUMP_dupprocerr
00032FD4 <AmiBlitz3.ab3@25165>    JSR addlabel
00032FDA <AmiBlitz3.ab3@25167>    MOVE.b #31,$20(a2)                                      ;increase if more pars
00032FE0 <AmiBlitz3.ab3@25168>    MOVE.b #0,isfunc(a2)
00032FE8 <AmiBlitz3.ab3@25169>    MOVE.l functionreturntype,funcstruct_returntype(a2)
00032FF0 <AmiBlitz3.ab3@25171>   MOVE.l destpointer,$E(A2)    ;new!
00032FF6 <AmiBlitz3.ab3@25172>   MOVE.l A2,currentfunction
00032FFC <AmiBlitz3.ab3@25174>   LEA nops8,A0
00033002 <AmiBlitz3.ab3@25175>   LEA nopsf,A1
00033006 <AmiBlitz3.ab3@25176>    BSR.w pokecode2
0003300C <AmiBlitz3.ab3@25178>   TST.b debugmode
00033010 <AmiBlitz3.ab3@25179>    BEQ.b 'nodebug
00033012 <AmiBlitz3.ab3@25181>   MOVEQ.l #$04,D1
00033018 <AmiBlitz3.ab3@25182>    JSR writetrap
00033022 <AmiBlitz3.ab3@25183>   MOVE.l destpointer,proclocals
00033026 <AmiBlitz3.ab3@25184>    BSR.w writelong
0003302A <AmiBlitz3.ab3@25185>    BSR.w writelong
0003302E <AmiBlitz3.ab3@25188>    LEA $16(A2),A4
00033036 <AmiBlitz3.ab3@25189>   MOVE.b proceduremode+1,$5(A2)
00033038 <AmiBlitz3.ab3@25190>   MOVEQ.l #$00,D6
0003303A <AmiBlitz3.ab3@25191>   MOVEQ.l #$00,D5
00033040 <AmiBlitz3.ab3@25192>    JSR get1bytemain
00033044 <AmiBlitz3.ab3@25193>   CMP.w #$7D,D0        ; '}'
00033048 <AmiBlitz3.ab3@25194>    BEQ.w 'done
0003304C <AmiBlitz3.ab3@25198>    CMP.b #"@",d0
00033050 <AmiBlitz3.ab3@25199>    BNE 'l2
00033052 <AmiBlitz3.ab3@25200>    MOVE.l a0,-(a7)
00033058 <AmiBlitz3.ab3@25201>    MOVE.l currentfunction,a0
0003305E <AmiBlitz3.ab3@25202>    CMP.b #31,$20(a0)                                       ;increase if morepars
00033062 <AmiBlitz3.ab3@25203>    BNE 'l4
00033066 <AmiBlitz3.ab3@25204>    MOVE.b d6,$20(a0)                                       ;increase if morepar
0003306C <AmiBlitz3.ab3@25207>    JSR get1bytemain
0003306E <AmiBlitz3.ab3@25208>    MOVE.l (a7)+,a0
00033072 <AmiBlitz3.ab3@25212>    BSR.w getparameter
00033076 <AmiBlitz3.ab3@25213>    BSR.w fetchvars
0003307E <AmiBlitz3.ab3@25214>   CMPI.l #$7,$4(A2)
00033082 <AmiBlitz3.ab3@25215>    BNE.w 'notst
00033088 <AmiBlitz3.ab3@25216>   LEA stbuff,A0
0003308A <AmiBlitz3.ab3@25217>   MOVE.w D5,D1
0003308C <AmiBlitz3.ab3@25218>   LSL.w #2,D1
00033090 <AmiBlitz3.ab3@25219>   MOVE.w D6,$0(A0,D1.W)
00033096 <AmiBlitz3.ab3@25220>   MOVE.w $4(A3),$2(A0,D1.W)
00033098 <AmiBlitz3.ab3@25221>   ADDQ.w #1,D5
0003309A <AmiBlitz3.ab3@25222>   MOVEQ.l #$07,D2
0003309E <AmiBlitz3.ab3@25223>  BRA.w 'pgot
000330A2 <AmiBlitz3.ab3@25226>   MOVE.w #$2940,D1
000330A4 <AmiBlitz3.ab3@25227>   MOVEQ.l #$03,D2
000330AC <AmiBlitz3.ab3@25228>   BTST #$0,flagmask+1
000330B0 <AmiBlitz3.ab3@25229>    BNE.w 'sgot
000330B8 <AmiBlitz3.ab3@25230>   CMPI.l #$100,$4(A2)
000330BC <AmiBlitz3.ab3@25231>    BCC.w JUMP_illprocperr
000330C0 <AmiBlitz3.ab3@25232>   MOVE.w $6(A2),D2
000330C4 <AmiBlitz3.ab3@25233>   CMP.w #$2,D2
000330C8 <AmiBlitz3.ab3@25234>    BHI.w 'sgot
000330CC <AmiBlitz3.ab3@25235>    BEQ.w 'wgot
000330D0 <AmiBlitz3.ab3@25236>   EORI.w #$3000,D1
000330D4 <AmiBlitz3.ab3@25237>  BRA.w 'sgot
000330D8 <AmiBlitz3.ab3@25240>   ORI.w #$1000,D1
000330DA <AmiBlitz3.ab3@25243>   OR.w D6,D1
000330E0 <AmiBlitz3.ab3@25245>   TST.b fpu
000330E4 <AmiBlitz3.ab3@25246>   BEQ 'nofpu
000330E8 <AmiBlitz3.ab3@25247>   CMP.b #5,d2
000330EC <AmiBlitz3.ab3@25248>   BNE 'nofpu
000330F0 <AmiBlitz3.ab3@25249>   CMP.w #6,d6
000330F4 <AmiBlitz3.ab3@25250>   BLT 'l10a
000330FA <AmiBlitz3.ab3@25251>   CMP.l #newtype_double,a2
000330FE <AmiBlitz3.ab3@25252>   BEQ JUMP_more6pard
00033102 <AmiBlitz3.ab3@25253>  BRA 'nofpu
00033108 <AmiBlitz3.ab3@25256>   MOVE.l #$f22c6400,d1
0003310C <AmiBlitz3.ab3@25257>   MOVEM.l d0/a4,-(a7)
0003310E <AmiBlitz3.ab3@25258>   MOVE.l d6,d0
00033110 <AmiBlitz3.ab3@25259>   ASL.l #7,d0
00033112 <AmiBlitz3.ab3@25260>   OR.w d0,d1
00033118 <AmiBlitz3.ab3@25261>   CMP.l #newtype_double,a2
0003311C <AmiBlitz3.ab3@25262>   BNE 'l5
00033122 <AmiBlitz3.ab3@25263>   OR.l #$1000,d1
00033126 <AmiBlitz3.ab3@25266>   BSR writelong
0003312A <AmiBlitz3.ab3@25267>   MOVE.w 4(a3),d1
0003312E <AmiBlitz3.ab3@25268>   BSR writeword
00033132 <AmiBlitz3.ab3@25269>   MOVEM.l (a7)+,a4/d0
00033136 <AmiBlitz3.ab3@25270>  BRA 'pgot
00033138 <AmiBlitz3.ab3@25274>   MOVE.l A4,-(A7)
0003313C <AmiBlitz3.ab3@25276>    CMP.w #6,d6
00033140 <AmiBlitz3.ab3@25277>    BLT 'l10
00033144 <AmiBlitz3.ab3@25278>    MOVE.w #$c500-4,d1                                      ;savetemp+regnum
00033146 <AmiBlitz3.ab3@25279>    ADD.w d6,d1
0003314C <AmiBlitz3.ab3@25280>    JSR Atokejsr
00033152 <AmiBlitz3.ab3@25281>    TST.w dontwrite_nomemleft
00033156 <AmiBlitz3.ab3@25282>    BNE 'l10
0003315C <AmiBlitz3.ab3@25283>    MOVE.l data1start,d1
00033162 <AmiBlitz3.ab3@25284>    MOVE.l destpointer,a4
00033166 <AmiBlitz3.ab3@25285>    ADD.l d1,-6(a4)
0003316C <AmiBlitz3.ab3@25286>    MOVE.l destpointer,d1
0003316E <AmiBlitz3.ab3@25287>    SUBQ.l #6,d1
00033174 <AmiBlitz3.ab3@25288>    SUB.l destbufferstart,d1
00033176 <AmiBlitz3.ab3@25290>    MOVE.l d2,-(a7)
00033178 <AmiBlitz3.ab3@25291>    MOVE.l d1,d2
0003317E <AmiBlitz3.ab3@25292>    JSR addhunkoffset                                       ;move.l $0,-x(a4)
00033180 <AmiBlitz3.ab3@25293>    MOVE.l (a7)+,d2
00033186 <AmiBlitz3.ab3@25294>    MOVE.l destpointer,a4
0003318A <AmiBlitz3.ab3@25295>    CMP.w #2,d2
0003318E <AmiBlitz3.ab3@25296>    BNE 'nw1
00033194 <AmiBlitz3.ab3@25298>    MOVE.w #$3979,-8(a4)                                    ;move.w $0,-x(a4)
0003319C <AmiBlitz3.ab3@25299>    ADD.l #2,-6(a4)
000331A0 <AmiBlitz3.ab3@25302>    CMP.w #1,d2
000331A4 <AmiBlitz3.ab3@25303>    BNE 'nb
000331AA <AmiBlitz3.ab3@25304>    MOVE.w #$1979,-8(a4)                                    ;move.b $0,-x(a4)
000331B2 <AmiBlitz3.ab3@25305>    ADD.l #3,-6(a4)
000331B8 <AmiBlitz3.ab3@25308>    MOVE.w $4(a3),-2(a4)
000331BC <AmiBlitz3.ab3@25309>  BRA 'ne1
000331C0 <AmiBlitz3.ab3@25313>   BSR.w writeword                                          ;write storeparameter
000331C4 <AmiBlitz3.ab3@25316>   MOVE.w $4(A3),D1
000331C8 <AmiBlitz3.ab3@25317>    BSR.w writeword
000331CA <AmiBlitz3.ab3@25320>   MOVEA.l (A7)+,A4
000331D0 <AmiBlitz3.ab3@25324>   CLR.l functionreturntype
000331D2 <AmiBlitz3.ab3@25326>   ADDQ.w #1,D6
000331D6 <AmiBlitz3.ab3@25327>   CMP.w #11,D6          ; was #7                            ;max function parameters
000331DA <AmiBlitz3.ab3@25328>    BCC.w JUMP_toovarerr
000331E0 <AmiBlitz3.ab3@25330>   MOVE.l currentfunction,a0
000331E4 <AmiBlitz3.ab3@25331>   MOVE.l a2,funcstruct_parametertype-4(a0,d6*4)             ;-4 because d6 is increment before
000331E6 <AmiBlitz3.ab3@25333>   MOVE.b D2,(A4)+
000331EA <AmiBlitz3.ab3@25334>   CMP.w #$2C,D0      ;','
000331EE <AmiBlitz3.ab3@25335>    BNE.w 'nomore
000331F4 <AmiBlitz3.ab3@25336>    JSR get1bytemain
000331F8 <AmiBlitz3.ab3@25350>  BRA.w 'more
000331FC <AmiBlitz3.ab3@25353>   CMP.w #$7D,D0
00033200 <AmiBlitz3.ab3@25354>    BNE.w JUMP_syntaxerr
00033206 <AmiBlitz3.ab3@25357>   MOVEA.l currentfunction,A2
00033208 <AmiBlitz3.ab3@25358>   LSL.w #4,D5
0003320A <AmiBlitz3.ab3@25359>   OR.w D5,D6
0003320E <AmiBlitz3.ab3@25360>   MOVE.b D6,$4(A2)
00033210 <AmiBlitz3.ab3@25361>   LSR.w #4,D6
00033214 <AmiBlitz3.ab3@25362>    BEQ.w 'nostrings
0003321A <AmiBlitz3.ab3@25363>   LEA stbuff,A0
0003321C <AmiBlitz3.ab3@25364>   SUBQ.w #1,D6
0003321E <AmiBlitz3.ab3@25370>     MOVE.w D6,D1                                           ;function stringpars
00033220 <AmiBlitz3.ab3@25371>     LSL.w #2,D1                                            ;stringsize was 2
00033222 <AmiBlitz3.ab3@25374>       LSL.w #1,d1
00033224 <AmiBlitz3.ab3@25375>       ADDQ.w #4,d1
00033226 <AmiBlitz3.ab3@25378>     ADDQ.w #8,D1
0003322C <AmiBlitz3.ab3@25379>     MOVE.w D1,funcst+2
00033232 <AmiBlitz3.ab3@25380>     MOVE.l funcst,D1
00033236 <AmiBlitz3.ab3@25381>     BSR.w writelong
00033238 <AmiBlitz3.ab3@25382>     MOVE.w (A0)+,D1
0003323C <AmiBlitz3.ab3@25384>     CMP.b #5,d1
00033240 <AmiBlitz3.ab3@25385>     BLE 's1
00033244 <AmiBlitz3.ab3@25386>     MOVE.w #$266c,d1                                       ;native move.l 4(a4),a3
00033248 <AmiBlitz3.ab3@25387>     BSR writeword    ; was writeinstruction  tomsmart1
0003324A <AmiBlitz3.ab3@25388>     MOVE.w D6,D1                                           ;function stringpars
0003324C <AmiBlitz3.ab3@25389>     LSL.w #2,D1                                            ;stringsize was 2
0003324E <AmiBlitz3.ab3@25391>       LSL.w #1,d1
00033250 <AmiBlitz3.ab3@25393>     ADDQ.w #8,D1
00033254 <AmiBlitz3.ab3@25394>     BSR writeword
00033258 <AmiBlitz3.ab3@25395>   BRA 's2
0003325E <AmiBlitz3.ab3@25399>     OR.w movedna3,D1
00033262 <AmiBlitz3.ab3@25400>      BSR.w writeword
00033268 <AmiBlitz3.ab3@25403>     MOVE.w (A0)+,least+2
0003326E <AmiBlitz3.ab3@25404>     MOVE.l least,D1
00033272 <AmiBlitz3.ab3@25405>      BSR.w writelong
00033274 <AmiBlitz3.ab3@25406>     MOVE.l A0,-(A7)
00033278 <AmiBlitz3.ab3@25407>     MOVE.w #$C700,D1
0003327C <AmiBlitz3.ab3@25408>      BSR.w Atokejsr
0003327E <AmiBlitz3.ab3@25409>     MOVEA.l (A7)+,A0
00033282 <AmiBlitz3.ab3@25410>   DBF D6,'stloop
00033288 <AmiBlitz3.ab3@25413> JMP get1bytemain
0003328E <AmiBlitz3.ab3@25417>   MOVE.w dontwrite_nomemleft,D1
00033292 <AmiBlitz3.ab3@25418>    BNE.w 'skip
00033298 <AmiBlitz3.ab3@25419>   MOVE.l destpointer,-(A7)
0003329E <AmiBlitz3.ab3@25421>   MOVE.l A0,destpointer
000332A4 <AmiBlitz3.ab3@25422>   MOVE.l linksize,D1
000332A8 <AmiBlitz3.ab3@25423>    BSR.w writelong                                         ;writefunctions jumppos
000332AE <AmiBlitz3.ab3@25425>    TST.b fastfunc
000332B2 <AmiBlitz3.ab3@25426>    BNE 'skip1
000332B6 <AmiBlitz3.ab3@25428>   MOVE.w #$CC00,D1      ; was #clrloc
000332BA <AmiBlitz3.ab3@25429>    BSR.w tokejsr2                                          ;write clearvars
000332C0 <AmiBlitz3.ab3@25432>   MOVE.l (A7)+,destpointer
000332C2 <AmiBlitz3.ab3@25435> RTS
000332C8 <AmiBlitz3.ab3@25438> JUMP_errormsg_nofast  JMP errormsg_nofast
000332CE <AmiBlitz3.ab3@25443>   MOVEA.l currentfunction,A2
000332D2 <AmiBlitz3.ab3@25444>   MOVEA.l $E(A2),A0          ;pc of proc
000332D6 <AmiBlitz3.ab3@25445>   MOVE.w $6(A2),D1
000332DA <AmiBlitz3.ab3@25446>    BEQ.w 'skiplink
000332E0 <AmiBlitz3.ab3@25447>   MOVE.w D1,linksize+2
000332E4 <AmiBlitz3.ab3@25448>   MOVE.w $8(A2),D1                                         ;check if function memalloc need
000332E8 <AmiBlitz3.ab3@25449>    BNE.w 'howdy
000332EA <AmiBlitz3.ab3@25453>   ADDQ.w #6,A0
000332EE <AmiBlitz3.ab3@25454>   MOVE.l A0,$E(A2)
000332F2 <AmiBlitz3.ab3@25455>  BRA.w linkput
000332F4 <AmiBlitz3.ab3@25460>   MOVE.l A0,-(A7)
000332F8 <AmiBlitz3.ab3@25461>    BSR.w linkput
000332FA <AmiBlitz3.ab3@25462>   MOVEA.l (A7)+,A0
000332FE <AmiBlitz3.ab3@25463>   LEA $A(A0),A0
00033304 <AmiBlitz3.ab3@25464>   MOVEA.l currentfunction,A2
00033308 <AmiBlitz3.ab3@25465>  BRA.w 'cont
0003330C <AmiBlitz3.ab3@25468>   MOVE.w $8(A2),D1
00033310 <AmiBlitz3.ab3@25469>    BNE.w 'cont
00033314 <AmiBlitz3.ab3@25470>   LEA $10(A0),A0
00033318 <AmiBlitz3.ab3@25471>   MOVE.l A0,$E(A2)
0003331A <AmiBlitz3.ab3@25472>  RTS
00033320 <AmiBlitz3.ab3@25475>    MOVE.w dontwrite_nomemleft,D1                                     ;writeallocmem for functions (after releasemem called)
00033324 <AmiBlitz3.ab3@25476>    BNE.w 'contskip
0003332A <AmiBlitz3.ab3@25479>    TST.b fastfunc
0003332E <AmiBlitz3.ab3@25480>    BNE JUMP_errormsg_nofast
00033334 <AmiBlitz3.ab3@25482>   MOVE.l destpointer,-(A7)
0003333A <AmiBlitz3.ab3@25483>   MOVE.l A0,destpointer
0003333E <AmiBlitz3.ab3@25484>   MOVE.w #$4EB9,D1      ;jsr
00033342 <AmiBlitz3.ab3@25485>    BSR.w writeword
00033348 <AmiBlitz3.ab3@25486>    JSR addoff
0003334C <AmiBlitz3.ab3@25487>    BSR.w writelong
0003334E <AmiBlitz3.ab3@25489>   MOVEA.l (A7)+,A0
00033354 <AmiBlitz3.ab3@25490>   MOVEA.l destpointer,A1
00033356 <AmiBlitz3.ab3@25491>   MOVE.l A0,-(A1)
0003335C <AmiBlitz3.ab3@25492>   MOVE.l A0,destpointer
00033360 <AmiBlitz3.ab3@25495>   MOVE.w $8(A2),D4
00033364 <AmiBlitz3.ab3@25496>    BPL.w 'linky
00033368 <AmiBlitz3.ab3@25497>   MOVE.w #$C004,D1   ; was  #newmem
0003336C <AmiBlitz3.ab3@25498>    BSR.w tokejsr2
00033372 <AmiBlitz3.ab3@25499>   MOVEA.l currentfunction,A2
00033376 <AmiBlitz3.ab3@25500>   MOVE.w $8(A2),D4
0003337A <AmiBlitz3.ab3@25501>   ANDI.w #$7FFF,D4        ;#32767,
0003337E <AmiBlitz3.ab3@25504>    BEQ.w 'skipstat
00033382 <AmiBlitz3.ab3@25508>   MOVE.b $4(A2),D1
00033386 <AmiBlitz3.ab3@25509>   ANDI.w #$F,D1
00033388 <AmiBlitz3.ab3@25510>   MOVE.w D1,-(A7)
0003338C <AmiBlitz3.ab3@25511>   CMP.w #$5,D1
00033390 <AmiBlitz3.ab3@25512>    BCS.w 'npush
00033394 <AmiBlitz3.ab3@25513>   MOVE.w #$2F04,D1
00033398 <AmiBlitz3.ab3@25514>    BSR.w writeword
0003339E <AmiBlitz3.ab3@25517>   MOVE.l locdatast,D3
000333A4 <AmiBlitz3.ab3@25518>    JSR datastart
000333A8 <AmiBlitz3.ab3@25519>   MOVE.w #$C501,D1    ; was #localstat
000333AC <AmiBlitz3.ab3@25520>    BSR.w tokejsr2
000333AE <AmiBlitz3.ab3@25522>   MOVE.w (A7)+,D1
000333B2 <AmiBlitz3.ab3@25523>   CMP.w #$5,D1
000333B6 <AmiBlitz3.ab3@25524>    BCS.w 'skipstat
000333BA <AmiBlitz3.ab3@25525>   MOVE.w #$281F,D1
000333BE <AmiBlitz3.ab3@25526>    BSR.w writeword
000333C2 <AmiBlitz3.ab3@25529>   MOVE.w #$4E75,D1
000333C6 <AmiBlitz3.ab3@25530> BRA.w writeword
000333CC <AmiBlitz3.ab3@25534>   LEA mwait,A0
000333D2 <AmiBlitz3.ab3@25535>   LEA mwaitf,A1
000333D6 <AmiBlitz3.ab3@25536> BRA.w pokecode
000333DC <AmiBlitz3.ab3@25539> JUMP_laberr    JMP laberr
000333E2 <AmiBlitz3.ab3@25540> JUMP_typeerr   JMP typeerr
000333E8 <AmiBlitz3.ab3@25541> JUMP_dupofferr JMP dupofferr
000333EC <AmiBlitz3.ab3@25544>   CMP.w #$2E,D0           ;'.'
000333F0 <AmiBlitz3.ab3@25545>   BNE.w JUMP_syntaxerr
000333F6 <AmiBlitz3.ab3@25546>   JSR getparameter2
000333FA <AmiBlitz3.ab3@25547>   BEQ.w JUMP_laberr
00033400 <AmiBlitz3.ab3@25548>   LEA newtypebase,A2
00033406 <AmiBlitz3.ab3@25549>   JSR findtype
0003340A <AmiBlitz3.ab3@25550>   BNE.w 'ok1
00033412 <AmiBlitz3.ab3@25551>   CMPI.l #MaxByte,$4(A2)    ; was #$FF
00033416 <AmiBlitz3.ab3@25552>   BNE.w JUMP_typeerr
0003341A <AmiBlitz3.ab3@25553>  BRA.w 'ok2
00033420 <AmiBlitz3.ab3@25556>   JSR addlabel
00033424 <AmiBlitz3.ab3@25559>   CLR.l $4(A2)
0003342A <AmiBlitz3.ab3@25560>   MOVE.l A2,thistype
00033430 <AmiBlitz3.ab3@25561>   CLR.l prevtype
00033436 <AmiBlitz3.ab3@25562>   CLR.w typelen
0003343C <AmiBlitz3.ab3@25563>   CLR.w linemode
00033442 <AmiBlitz3.ab3@25564>   JSR reget
00033446 <AmiBlitz3.ab3@25565>   BNE.w typemode
00033448 <AmiBlitz3.ab3@25566> RTS
0003344C <AmiBlitz3.ab3@25570>   CMP.w #-$7FFE,D0      ; was #$8002
00033450 <AmiBlitz3.ab3@25571>   BEQ.w doend2
0003345A <AmiBlitz3.ab3@25574>   MOVE.w oldqflag,instringon
00033460 <AmiBlitz3.ab3@25575>   MOVEA.l lastsourcepos,A5
00033462 <AmiBlitz3.ab3@25577>   MOVEQ.l #$00,D6      ;not pointer
00033466 <AmiBlitz3.ab3@25578>   CMP.w #$2A,D0        ;'*'
0003346A <AmiBlitz3.ab3@25579>   BNE.w 'skip
0003346C <AmiBlitz3.ab3@25580>   MOVEQ.l #$01,D6
00033472 <AmiBlitz3.ab3@25581>   JSR get1bytemain
00033476 <AmiBlitz3.ab3@25582>  BRA.w 'skipv
0003347A <AmiBlitz3.ab3@25585>   CMP.w #$40,D0         ;'@'
0003347E <AmiBlitz3.ab3@25586>   BNE.w 'skipv
00033480 <AmiBlitz3.ab3@25587>   MOVEQ.l #$05,D6
00033486 <AmiBlitz3.ab3@25588>   JSR get1bytemain
0003348C <AmiBlitz3.ab3@25591>   MOVE.w D6,flagmask
00033492 <AmiBlitz3.ab3@25592>   JSR getparameter2
00033496 <AmiBlitz3.ab3@25593>   BEQ.w JUMP_syntaxerr
0003349C <AmiBlitz3.ab3@25594>   MOVEA.l thistype,A2
0003349E <AmiBlitz3.ab3@25595>   ADDQ.w #4,A2
000334A4 <AmiBlitz3.ab3@25596>   JSR findvariable2
000334A8 <AmiBlitz3.ab3@25597>   BEQ.w JUMP_dupofferr     ;beq    .skip2
000334AE <AmiBlitz3.ab3@25599>   JSR addlabel
000334B0 <AmiBlitz3.ab3@25602>   MOVE.l A2,-(A7)
000334B4 <AmiBlitz3.ab3@25603>   CMP.w #$2E,D0           ;'.'
000334B8 <AmiBlitz3.ab3@25604>    BEQ.w 'skip3
000334BC <AmiBlitz3.ab3@25605>   CMP.w #$24,D0           ;'$'
000334C0 <AmiBlitz3.ab3@25606>    BNE.w 'notstring
000334C6 <AmiBlitz3.ab3@25607>   MOVE.l #newtype_string,D2
000334CC <AmiBlitz3.ab3@25608>    JSR get1bytemain
000334D0 <AmiBlitz3.ab3@25609>  BRA.w 'skip4a
000334D6 <AmiBlitz3.ab3@25612>   MOVE.l prevtype,D2
000334DA <AmiBlitz3.ab3@25613>   BEQ.w JUMP_notypeerr2
000334DE <AmiBlitz3.ab3@25614>  BRA.w 'skip4
000334E4 <AmiBlitz3.ab3@25617>   JSR getparameter2
000334E8 <AmiBlitz3.ab3@25618>    BEQ.w JUMP_syntaxerr
000334EE <AmiBlitz3.ab3@25619>   LEA newtypebase,A2
000334F4 <AmiBlitz3.ab3@25620>    JSR findtype
000334F8 <AmiBlitz3.ab3@25621>    BEQ.w 'gotit
00033500 <AmiBlitz3.ab3@25622>   BTST #$0,flagmask+1
00033504 <AmiBlitz3.ab3@25623>    BEQ.w JUMP_notypeerr2
0003350A <AmiBlitz3.ab3@25627>   JSR addlabel
00033512 <AmiBlitz3.ab3@25632>   MOVE.w linenumat+2,$8(A2)
0003351A <AmiBlitz3.ab3@25633>   MOVE.l #MaxByte,$4(A2)       ; was $FF  ;set to pointer crap
0003351C <AmiBlitz3.ab3@25636>   MOVE.l A2,D2
00033522 <AmiBlitz3.ab3@25639>   CMP.l #newtype_byte,D2
00033526 <AmiBlitz3.ab3@25640>    BEQ.w 'byte
0003352C <AmiBlitz3.ab3@25643>   ADDQ.w #1,typelen
00033534 <AmiBlitz3.ab3@25644>   BCLR #$0,typelen+1
00033536 <AmiBlitz3.ab3@25647>   MOVEQ.l #$00,D3
00033538 <AmiBlitz3.ab3@25648>   MOVEA.l D2,A2
0003353E <AmiBlitz3.ab3@25649>   MOVE.l A2,prevtype
00033542 <AmiBlitz3.ab3@25650>   MOVE.w $8(A2),D3
00033544 <AmiBlitz3.ab3@25651>   MOVEA.l (A7)+,A2
00033548 <AmiBlitz3.ab3@25652>   MOVE.l D2,$A(A2)
0003354A <AmiBlitz3.ab3@25653>   MOVEQ.l #$00,D4
00033550 <AmiBlitz3.ab3@25654>   MOVE.w typelen,D4
00033554 <AmiBlitz3.ab3@25655>   MOVE.w D4,$4(A2)
0003355C <AmiBlitz3.ab3@25656>   BTST #$0,flagmask+1
00033560 <AmiBlitz3.ab3@25657>    BEQ.w 'skipz
00033562 <AmiBlitz3.ab3@25658>   MOVEQ.l #$04,D3
00033566 <AmiBlitz3.ab3@25661>   CMP.w #$5B,D0            ;'['
0003356A <AmiBlitz3.ab3@25662>    BNE.w 'skipzz
0003356E <AmiBlitz3.ab3@25666>   MOVEM.l D3-D4/A2,-(A7)
00033572 <AmiBlitz3.ab3@25667>    BSR.w evalconst3
00033576 <AmiBlitz3.ab3@25668>   CMP.w #$5D,D0            ;']'
0003357A <AmiBlitz3.ab3@25669>    BNE.w JUMP_syntaxerr
0003357C <AmiBlitz3.ab3@25670>   TST.w D6
00033580 <AmiBlitz3.ab3@25671>    BNE.w JUMP_fpconerr
00033582 <AmiBlitz3.ab3@25672>   MOVE.l D3,D1
00033586 <AmiBlitz3.ab3@25673>   MOVEM.l (A7)+,D3-D4/A2
0003358C <AmiBlitz3.ab3@25674>    JSR get1bytemain
00033590 <AmiBlitz3.ab3@25675>   MOVE.w D1,$8(A2)
00033594 <AmiBlitz3.ab3@25676>   MULU.l d1,d3                                             ;>32k fix was mulu.w
0003359C <AmiBlitz3.ab3@25677>   ORI.w #$2,flagmask
0003359E <AmiBlitz3.ab3@25680>   ADD.l D3,D4
000335A4 <AmiBlitz3.ab3@25683>     CMP.l #65532,d4
000335A8 <AmiBlitz3.ab3@25689>   BCC JUMP_toolongerr
000335B0 <AmiBlitz3.ab3@25690>   MOVE.w flagmask,$6(A2)
000335B6 <AmiBlitz3.ab3@25691>   MOVE.w D4,typelen
000335B8 <AmiBlitz3.ab3@25692> RTS
000335BE <AmiBlitz3.ab3@25695> JUMP_badenderr  JMP badenderr
000335C4 <AmiBlitz3.ab3@25696> JUMP_noiferr    JMP noiferr
000335CA <AmiBlitz3.ab3@25697> JUMP_toolongerr JMP toolongerr
000335D0 <AmiBlitz3.ab3@25698> JUMP_fpconerr   JMP fpconerr
000335D6 <AmiBlitz3.ab3@25702>   MOVE.l firstiff,D0
000335DA <AmiBlitz3.ab3@25703>    BEQ.w JUMP_noiferr
000335DC <AmiBlitz3.ab3@25704>   MOVEA.l D0,A0
000335E0 <AmiBlitz3.ab3@25705>   MOVE.w $C(A0),D0
000335E4 <AmiBlitz3.ab3@25706>   ANDI.w #$FF,D0
000335E6 <AmiBlitz3.ab3@25707>   CMP.w D0,D1
000335EA <AmiBlitz3.ab3@25708>    BNE.w JUMP_badenderr
000335EE <AmiBlitz3.ab3@25711>   CMP.w #$1,D1
000335F2 <AmiBlitz3.ab3@25712>   BNE.w 'calcbra
000335F6 <AmiBlitz3.ab3@25714>   MOVE.w #$6000,D1
000335FC <AmiBlitz3.ab3@25717>     TST.b fast
00033600 <AmiBlitz3.ab3@25718>     BEQ 'l1
00033606 <AmiBlitz3.ab3@25719>     OR.l #$ff,d1
0003360A <AmiBlitz3.ab3@25724>   BSR.w writeword
00033610 <AmiBlitz3.ab3@25725>   MOVEA.l destpointer,A1
00033614 <AmiBlitz3.ab3@25726>   MOVE.l $4(A0),D1
00033616 <AmiBlitz3.ab3@25727>   SUB.l A1,D1
0003361C <AmiBlitz3.ab3@25730>     TST.b fast
00033620 <AmiBlitz3.ab3@25731>     BEQ 'l2
00033624 <AmiBlitz3.ab3@25732>     BSR writelong
00033628 <AmiBlitz3.ab3@25733>   BRA 'calcbra
0003362C <AmiBlitz3.ab3@25738>   BSR.w writeword
00033630 <AmiBlitz3.ab3@25741>   MOVEA.l $8(A0),A1                                        ;write if branch destination
00033636 <AmiBlitz3.ab3@25742>   MOVE.l destpointer,D1
00033638 <AmiBlitz3.ab3@25743>   SUB.l A1,D1
0003363E <AmiBlitz3.ab3@25746>     TST.b fast
00033642 <AmiBlitz3.ab3@25747>     BEQ 'l3
00033644 <AmiBlitz3.ab3@25748>     ADDQ.l #4,D1
0003364A <AmiBlitz3.ab3@25749>     MOVE.w dontwrite_nomemleft,D0
0003364E <AmiBlitz3.ab3@25750>     BNE.w 'skip
00033652 <AmiBlitz3.ab3@25751>     MOVE.l d1,-$4(a1)
00033656 <AmiBlitz3.ab3@25752>   BRA 'skip
00033658 <AmiBlitz3.ab3@25757>   ADDQ.l #2,d1
0003365E <AmiBlitz3.ab3@25759>   TST.w dontwrite_nomemleft
00033662 <AmiBlitz3.ab3@25761>   BNE 'skip
00033668 <AmiBlitz3.ab3@25763>   CMP.l #MinWordSgnd,D1
0003366C <AmiBlitz3.ab3@25764>   BCC.w JUMP_bigiferr
00033670 <AmiBlitz3.ab3@25766>   MOVE.w D1,-$2(A1)
00033672 <AmiBlitz3.ab3@25769> RTS
00033678 <AmiBlitz3.ab3@25771> JUMP_bigiferr JMP bigiferr
00033682 <AmiBlitz3.ab3@25776>   MOVE.w oldqflag,instringon
00033688 <AmiBlitz3.ab3@25777>   MOVEA.l lastsourcepos,A5
0003368A <AmiBlitz3.ab3@25780>   MOVEQ.l #$01,D1
0003368E <AmiBlitz3.ab3@25781> BRA.w doendif
00033698 <AmiBlitz3.ab3@25785>   MOVE.w oldqflag,instringon
0003369E <AmiBlitz3.ab3@25786>   MOVEA.l lastsourcepos,A5
000336A0 <AmiBlitz3.ab3@25789>   MOVEQ.l #$00,D1
000336A4 <AmiBlitz3.ab3@25792>   BSR.w doendif3
000336A8 <AmiBlitz3.ab3@25793>   BSR.w freetheifz
000336AE <AmiBlitz3.ab3@25794> JMP get1bytemain
000336B4 <AmiBlitz3.ab3@25798>   MOVE.l (A0),firstiff
000336B6 <AmiBlitz3.ab3@25799>   MOVEA.l A0,A1
000336B8 <AmiBlitz3.ab3@25800>   MOVEQ.l #$0E,D0
000336BE <AmiBlitz3.ab3@25801>   MOVEA.l _execbase,A6
000336C4 <AmiBlitz3.ab3@25804>   MOVE.l mempool,a0
000336C8 <AmiBlitz3.ab3@25805> JMP _FreePooled(A6)
000336CE <AmiBlitz3.ab3@25809> JUMP_modeerr JMP modeerr
000336D4 <AmiBlitz3.ab3@25810> JUMP_interr3 JMP interr3
000336DA <AmiBlitz3.ab3@25811> JUMP_interr JMP interr
000336E0 <AmiBlitz3.ab3@25815>   JSR get1bytemain
000336E4 <AmiBlitz3.ab3@25818>   BEQ.w 'done
000336EC <AmiBlitz3.ab3@25820>   CMP.l #"noa7",-1(a5)
000336F0 <AmiBlitz3.ab3@25821>   BNE 'l1
000336F6 <AmiBlitz3.ab3@25822>   JSR get1bytemain
000336FC <AmiBlitz3.ab3@25823>   JSR get1bytemain
00033702 <AmiBlitz3.ab3@25824>   JSR get1bytemain
0003370A <AmiBlitz3.ab3@25825>   MOVE.w #$3a,lastchar
0003370E <AmiBlitz3.ab3@25826>  BRA 'done
00033714 <AmiBlitz3.ab3@25829>   CMP.w #"d0",-1(a5)
00033718 <AmiBlitz3.ab3@25830>   BNE 'l2
00033720 <AmiBlitz3.ab3@25831>   MOVE.b #1,returncode
00033726 <AmiBlitz3.ab3@25832>   CLR.w lastchar
0003372A <AmiBlitz3.ab3@25833>  BRA 'done
0003372E <AmiBlitz3.ab3@25836>   CMP.w #$80d7,d0
00033732 <AmiBlitz3.ab3@25837>   BNE 'loop
00033738 <AmiBlitz3.ab3@25838>   JSR skiprest
0003373A <AmiBlitz3.ab3@25839>  RTS
0003373E <AmiBlitz3.ab3@25843>   BSR.w 'doend3
00033744 <AmiBlitz3.ab3@25844>   JSR reget
00033748 <AmiBlitz3.ab3@25845>   BNE.w 'loop
0003374A <AmiBlitz3.ab3@25846>  RTS
0003374E <AmiBlitz3.ab3@25849>   CMP.w #-$7FFF,D0        ; was #$8001
00033752 <AmiBlitz3.ab3@25850>    BNE.w 'nottype
00033758 <AmiBlitz3.ab3@25851>   MOVE.w linemode,D1
0003375C <AmiBlitz3.ab3@25852>    BNE.w JUMP_modeerr
00033762 <AmiBlitz3.ab3@25853>   ADDQ.w #1,typelen
0003376A <AmiBlitz3.ab3@25854>   BCLR #$0,typelen+1
00033770 <AmiBlitz3.ab3@25855>   MOVEA.l thistype,A0
00033778 <AmiBlitz3.ab3@25856>   MOVE.w typelen,$8(A0)
00033780 <AmiBlitz3.ab3@25857>   MOVE.w #$FFFF,linemode        ; was -1
00033786 <AmiBlitz3.ab3@25858>  JMP get1bytemain
0003378A <AmiBlitz3.ab3@25861>   CMP.w #-$7FF5,D0    ; was #$800b
0003378E <AmiBlitz3.ab3@25862>    BEQ.w mydoendif
00033792 <AmiBlitz3.ab3@25865>   CMP.w #-$7FF4,D0    ; was #$800c
00033796 <AmiBlitz3.ab3@25866>    BEQ.w dowend2
0003379A <AmiBlitz3.ab3@25869>   CMP.w #-$7FF8,D0    ; was #$8008
0003379E <AmiBlitz3.ab3@25870>    BNE.w 'notstate
000337A2 <AmiBlitz3.ab3@25875>  BRA.w endstate
000337A6 <AmiBlitz3.ab3@25878>   CMP.w #-$7FF7,D0        ; was #$8009
000337AA <AmiBlitz3.ab3@25879>    BNE.w 'notfunc
000337B0 <AmiBlitz3.ab3@25881>    TST.b fpu
000337B4 <AmiBlitz3.ab3@25882>    BEQ 'nof
000337BA <AmiBlitz3.ab3@25883>    MOVEA.l currentfunction,A0
000337C0 <AmiBlitz3.ab3@25884>    CMP.l #0,a0
000337C4 <AmiBlitz3.ab3@25885>    BEQ 'nof
000337CA <AmiBlitz3.ab3@25886>    CMP.b #5,$5(a0)
000337CE <AmiBlitz3.ab3@25887>     BNE 'nof
000337D4 <AmiBlitz3.ab3@25888>    MOVE.l #$f23c5000,d1
000337D8 <AmiBlitz3.ab3@25889>    BSR writelong
000337DC <AmiBlitz3.ab3@25890>    MOVE.w #0,d1
000337E0 <AmiBlitz3.ab3@25891>    BSR writeword
000337E4 <AmiBlitz3.ab3@25895>   MOVE.w #$7000,D1                                         ;end function moveq #0,d0
000337E8 <AmiBlitz3.ab3@25896>    BSR.w writeword
000337EE <AmiBlitz3.ab3@25897>   MOVEA.l currentfunction,A0
000337F4 <AmiBlitz3.ab3@25899>   CMP.l #0,a0
000337F8 <AmiBlitz3.ab3@25900>   BEQ 'state
000337FE <AmiBlitz3.ab3@25901>   MOVE.l destpointer,d1
00033802 <AmiBlitz3.ab3@25902>   SUB.l $e(a0),d1
00033806 <AmiBlitz3.ab3@25903>   MOVE.l d1,isfunc+1(a0)
0003380C <AmiBlitz3.ab3@25905>   CMPI.b #$7,$5(A0)
00033810 <AmiBlitz3.ab3@25906>    BNE.w 'state
00033816 <AmiBlitz3.ab3@25907>   MOVE.w putstlen,D1
0003381A <AmiBlitz3.ab3@25908>    BSR.w writeword
0003381E <AmiBlitz3.ab3@25909>  BRA.w 'state
00033822 <AmiBlitz3.ab3@25912>   CMP.w #-$7FD0,D0         ; was #$8000+48
00033826 <AmiBlitz3.ab3@25913>    BNE.w 'notsetint
0003382C <AmiBlitz3.ab3@25915>   MOVE.w proceduremode,D1
00033830 <AmiBlitz3.ab3@25916>    BNE.w JUMP_interr3
00033836 <AmiBlitz3.ab3@25918>   TST.b debugmode
0003383A <AmiBlitz3.ab3@25919>    BEQ.w 'norerrf1
0003383C <AmiBlitz3.ab3@25921>   MOVEQ.l #$03,D1
00033842 <AmiBlitz3.ab3@25922>    JSR writetrap
00033848 <AmiBlitz3.ab3@25924>   MOVE.w dontwrite_nomemleft,D1
0003384C <AmiBlitz3.ab3@25925>    BNE.w 'norerrf1
00033852 <AmiBlitz3.ab3@25927>   MOVEA.l intcleanat,A0
00033858 <AmiBlitz3.ab3@25928>   MOVE.l destpointer,(A0)
0003385C <AmiBlitz3.ab3@25930>   MOVE.w #$C30C,D1       ; was #gouse
00033860 <AmiBlitz3.ab3@25931>    BSR.w Atokejsr        ;for runerrlib stack chex
00033866 <AmiBlitz3.ab3@25934>   MOVE.w intstring,D1
0003386A <AmiBlitz3.ab3@25935>    BEQ.w JUMP_interr
0003386E <AmiBlitz3.ab3@25936>    BPL.w 'nosp
00033874 <AmiBlitz3.ab3@25938>   MOVE.w intlevel,D1
00033878 <AmiBlitz3.ab3@25939>   ORI.w #$7200,D1
0003387C <AmiBlitz3.ab3@25940>    BSR.w writeword       ;moveq #level,d1
00033880 <AmiBlitz3.ab3@25941>   MOVE.w #$C103,D1       ; was #oldint,
00033884 <AmiBlitz3.ab3@25942>    BSR.w Atokejsr
0003388A <AmiBlitz3.ab3@25943>   CLR.w intlevel
00033890 <AmiBlitz3.ab3@25946>   CLR.w intstring
00033896 <AmiBlitz3.ab3@25948>   MOVE.l intfin,D1
0003389A <AmiBlitz3.ab3@25949>    BSR.w writelong
000338A0 <AmiBlitz3.ab3@25951>   MOVE.l #$70004E75,D1
000338A4 <AmiBlitz3.ab3@25952>    BSR.w writelong
000338AA <AmiBlitz3.ab3@25954>   MOVE.w dontwrite_nomemleft,D1
000338AE <AmiBlitz3.ab3@25955>    BNE.w 'sintdone
000338B4 <AmiBlitz3.ab3@25956>   MOVEA.l intjmpat,A0
000338B8 <AmiBlitz3.ab3@25957>   MOVE.l destpointer(PC),(A0)
000338BE <AmiBlitz3.ab3@25960>  JMP get1bytemain
000338C2 <AmiBlitz3.ab3@25963>   CMP.w #-$7FF2,D0   ; was #$800e     ;end select?
000338C6 <AmiBlitz3.ab3@25964>    BEQ.w doendsel
000338CA <AmiBlitz3.ab3@25965>   CMP.w #-$7F4C,D0  ; was #$8001+tnum
000338CE <AmiBlitz3.ab3@25966>    BNE.w 'notseterr
000338D4 <AmiBlitz3.ab3@25967>  JMP doendseterr
000338DA <AmiBlitz3.ab3@25971>  JMP syntaxerr
000338E0 <AmiBlitz3.ab3@25974>   TST.w dirmode
000338E4 <AmiBlitz3.ab3@25975>   BNE.w JUMP_baddirerr
000338E8 <AmiBlitz3.ab3@25976>   MOVE.w #$C800,D1      ; #endjmp
000338EE <AmiBlitz3.ab3@25977>   JSR Atokejsr          ; was bra org source                                  ;end
000338F6 <AmiBlitz3.ab3@25979>   CMP.l #"noa7",-4(a5)
000338FA <AmiBlitz3.ab3@25980>   BNE 'l10
00033900 <AmiBlitz3.ab3@25981>   TST.w dontwrite_nomemleft
00033904 <AmiBlitz3.ab3@25982>   BNE 'l10
0003390A <AmiBlitz3.ab3@25983>   MOVE.l destpointer,d1
0003390C <AmiBlitz3.ab3@25984>   SUBQ.l #4,d1
0003390E <AmiBlitz3.ab3@25985>   MOVE.l a0,-(a7)
00033910 <AmiBlitz3.ab3@25986>   MOVE.l d1,a0
00033912 <AmiBlitz3.ab3@25987>   MOVE.l (a0),a0
00033918 <AmiBlitz3.ab3@25988>   MOVE.l #$60000002,(a0)+
0003391C <AmiBlitz3.ab3@25989>   MOVE.w #$588f,(a0)
0003391E <AmiBlitz3.ab3@25990>   MOVE.l (a7)+,a0
00033920 <AmiBlitz3.ab3@25993> RTS
00033926 <AmiBlitz3.ab3@25998>   TST.w dirmode                                            ;stop
0003392A <AmiBlitz3.ab3@25999>   BNE.w JUMP_baddirerr
0003392C <AmiBlitz3.ab3@26001>   MOVE.w d0,d1
00033930 <AmiBlitz3.ab3@26002>   BEQ 'l10
00033934 <AmiBlitz3.ab3@26003>   CMP.b #$3a,d0
00033938 <AmiBlitz3.ab3@26004>   BEQ 'l10
0003393E <AmiBlitz3.ab3@26005>   JSR get1bytemain
00033944 <AmiBlitz3.ab3@26009>   TST.b debugmode
00033948 <AmiBlitz3.ab3@26010>   BEQ.w newstop
0003394C <AmiBlitz3.ab3@26011>   MOVE.w #$D501,D1
00033950 <AmiBlitz3.ab3@26012> BRA.w Atokejsr
00033952 <AmiBlitz3.ab3@26018>     RTS
00033954 <AmiBlitz3.ab3@26020>   MOVE.w d1,d0
00033958 <AmiBlitz3.ab3@26021>   BEQ 'l10
0003395C <AmiBlitz3.ab3@26022>   CMP.b #$3a,d0
00033960 <AmiBlitz3.ab3@26023>   BEQ 'l10
00033964 <AmiBlitz3.ab3@26024>   SUB.b #$30,d0
00033968 <AmiBlitz3.ab3@26025>   MOVE.w #$4e40,d1
0003396C <AmiBlitz3.ab3@26026>  BRA 'l11
00033970 <AmiBlitz3.ab3@26029>   MOVE.w #$4e4a,d1
00033974 <AmiBlitz3.ab3@26030>  BRA writeword
00033976 <AmiBlitz3.ab3@26033>   ADD.b d0,d1
0003397A <AmiBlitz3.ab3@26034> BRA writeword
00033980 <AmiBlitz3.ab3@26038> JMP badconterr        ;cont not currently supported!
00033984 <AmiBlitz3.ab3@26041>   MOVE.w #$4E71,D1
00033988 <AmiBlitz3.ab3@26042> BRA.w writeword
0003398E <AmiBlitz3.ab3@26047>   MOVEA.l firstfor,A2
00033994 <AmiBlitz3.ab3@26048>   CLR.l firstfor
0003399A <AmiBlitz3.ab3@26049>   MOVEA.l _execbase,A6
0003399E <AmiBlitz3.ab3@26052>   CMPA.w #$0,A2
000339A2 <AmiBlitz3.ab3@26053>   BEQ.w 'done
000339A4 <AmiBlitz3.ab3@26054>   MOVEA.l A2,A1
000339A6 <AmiBlitz3.ab3@26055>   MOVEA.l (A1),A2
000339A8 <AmiBlitz3.ab3@26056>   MOVEQ.l #$00,D0
000339AC <AmiBlitz3.ab3@26057>   MOVE.b $10(A1),D0
000339B2 <AmiBlitz3.ab3@26060>   MOVE.l mempool2,a0  
000339B6 <AmiBlitz3.ab3@26061>   JSR _FreePooled(A6)                                      ;freememfor_error
000339BA <AmiBlitz3.ab3@26063>  BRA.w 'loop
000339BC <AmiBlitz3.ab3@26066> RTS
000339C2 <AmiBlitz3.ab3@26069> JUMP_badpenderr JMP badpenderr
000339C8 <AmiBlitz3.ab3@26070> JUMP_noenderr   JMP noenderr
000339CE <AmiBlitz3.ab3@26076>   MOVE.w proceduremode,D1
000339D2 <AmiBlitz3.ab3@26077>    BEQ.w JUMP_badpenderr
000339D8 <AmiBlitz3.ab3@26079>   MOVE.w dontwrite_nomemleft,D1
000339DC <AmiBlitz3.ab3@26080>    BNE.w 'ship
000339E2 <AmiBlitz3.ab3@26081>   MOVEA.l firstpend,A2
000339E6 <AmiBlitz3.ab3@26084>   CMPA.w #$0,A2
000339EA <AmiBlitz3.ab3@26085>    BEQ.w 'ship
000339EE <AmiBlitz3.ab3@26086>   MOVEA.l $4(A2),A0
000339F4 <AmiBlitz3.ab3@26087>   MOVE.l destpointer,(A0)
000339F6 <AmiBlitz3.ab3@26088>   MOVEA.l (A2),A2
000339FA <AmiBlitz3.ab3@26089>  BRA.w 'loop0
00033A00 <AmiBlitz3.ab3@26092>   TST.b debugmode
00033A04 <AmiBlitz3.ab3@26093>    BEQ.b 'ship2
00033A06 <AmiBlitz3.ab3@26095>   MOVEQ.l #$05,D1
00033A0C <AmiBlitz3.ab3@26096>   JSR writetrap
00033A12 <AmiBlitz3.ab3@26099>   MOVEA.l firstlocal,A2                                    ;firstlocal
00033A18 <AmiBlitz3.ab3@26100>   JSR calcstatic2b                                           ;calcstatic
00033A1E <AmiBlitz3.ab3@26101>   MOVEA.l currentfunction,A0
00033A24 <AmiBlitz3.ab3@26103>   MOVE.l destpointer,d1
00033A28 <AmiBlitz3.ab3@26104>   SUB.l $e(a0),d1
00033A2C <AmiBlitz3.ab3@26105>   MOVE.l d1,isfunc+1(a0)                                   ;store function size
00033A30 <AmiBlitz3.ab3@26107>   MOVE.w D4,$8(A0)                                         ;set if memalloc need
00033A36 <AmiBlitz3.ab3@26108>   MOVE.l D3,locdatast
00033A3C <AmiBlitz3.ab3@26109>   MOVEA.l tempvm,A1
00033A42 <AmiBlitz3.ab3@26111>   CLR.b infunctioncode
00033A48 <AmiBlitz3.ab3@26112>   MOVE.l firstiffstore,d1
00033A4E <AmiBlitz3.ab3@26113>   CMP.l firstiff,d1
00033A52 <AmiBlitz3.ab3@26114>   BNE JUMP_noenderr
00033A56 <AmiBlitz3.ab3@26116>   TST.w $C(A1)                                             ;dim
00033A5A <AmiBlitz3.ab3@26117>    BPL.w 'nolskip
00033A60 <AmiBlitz3.ab3@26118>  BSET #$7,$8(A0)
00033A64 <AmiBlitz3.ab3@26119>   MOVE.w #$C005,D1      ;#freelast,
00033A68 <AmiBlitz3.ab3@26120>    BSR.w tokejsr2                                          ;writefreememstatement
00033A6C <AmiBlitz3.ab3@26121>  BRA.w 'lskip2
00033A74 <AmiBlitz3.ab3@26124>   MOVE.w memlibstat,$C(A1)
00033A7A <AmiBlitz3.ab3@26127>   MOVEA.l currentfunction,A0
00033A7E <AmiBlitz3.ab3@26128>   MOVE.l $E(A0),-(A7)
00033A86 <AmiBlitz3.ab3@26129>   MOVE.w locvaroff,$6(A0)
00033A8C <AmiBlitz3.ab3@26130>   BCLR #$1,$7(A0)
00033A92 <AmiBlitz3.ab3@26131>   BCLR #$0,$7(A0)
00033A98 <AmiBlitz3.ab3@26132>   CMPI.b #$7,$5(A0)
00033A9C <AmiBlitz3.ab3@26133>    BNE.w 'penis
00033AA2 <AmiBlitz3.ab3@26134>   MOVE.w getstlen,D1
00033AA6 <AmiBlitz3.ab3@26135>    BSR.w writeword
00033AAA <AmiBlitz3.ab3@26138>   TST.w $6(A0)
00033AAE <AmiBlitz3.ab3@26139>    BEQ.w 'nolink
00033AB2 <AmiBlitz3.ab3@26140>   MOVE.w #$FC7B,D1   ;#64635
00033AB8 <AmiBlitz3.ab3@26141>    JSR uselib
00033ABE <AmiBlitz3.ab3@26142>   MOVE.w unlinka4,D1
00033AC4 <AmiBlitz3.ab3@26143>    JSR writeword
00033ACA <AmiBlitz3.ab3@26149>   MOVEA.l currentfunction,A0
00033ACC <AmiBlitz3.ab3@26150>   MOVEQ.l #$00,D1
00033AD0 <AmiBlitz3.ab3@26151>   MOVE.b $4(A0),D1
00033AD2 <AmiBlitz3.ab3@26152>   LSR.w #4,D1
00033AD6 <AmiBlitz3.ab3@26153>    BEQ.w 'nofix
00033AD8 <AmiBlitz3.ab3@26156>      LSL.w #1,d1
00033ADC <AmiBlitz3.ab3@26159>   CMP.w #$1,D1
00033AE0 <AmiBlitz3.ab3@26160>    BNE.w 'not1
00033AE6 <AmiBlitz3.ab3@26161>   MOVE.w fix1,D1
00033AEC <AmiBlitz3.ab3@26162>    JSR writeword
00033AF0 <AmiBlitz3.ab3@26163>  BRA.w 'nofix
00033AF2 <AmiBlitz3.ab3@26166>   LSL.w #2,D1
00033AF4 <AmiBlitz3.ab3@26167>   MOVE.w D1,-(A7)
00033AFA <AmiBlitz3.ab3@26168>   MOVE.w D1,moverts+2
00033B00 <AmiBlitz3.ab3@26169>   MOVE.l moverts,D1
00033B06 <AmiBlitz3.ab3@26170>    JSR writelong
00033B08 <AmiBlitz3.ab3@26171>   MOVE.w (A7)+,D1
00033B0C <AmiBlitz3.ab3@26172>   CMP.w #$8,D1
00033B10 <AmiBlitz3.ab3@26173>    BHI.w 'fix
00033B14 <AmiBlitz3.ab3@26174>   ANDI.w #$7,D1
00033B16 <AmiBlitz3.ab3@26175>   LSL.w #8,D1
00033B18 <AmiBlitz3.ab3@26176>   LSL.w #1,D1
00033B1E <AmiBlitz3.ab3@26177>   OR.w fixq,D1
00033B24 <AmiBlitz3.ab3@26178>    JSR writeword
00033B28 <AmiBlitz3.ab3@26179>  BRA.w 'nofix
00033B2E <AmiBlitz3.ab3@26182>    MOVE.w D1,fixstack+2
00033B34 <AmiBlitz3.ab3@26183>   MOVE.l fixstack,D1
00033B3A <AmiBlitz3.ab3@26184>    JSR writelong
00033B3E <AmiBlitz3.ab3@26187>    BSR.w normret
00033B42 <AmiBlitz3.ab3@26191>    BSR.w procfixer
00033B44 <AmiBlitz3.ab3@26193>   MOVEA.l (A7)+,A0
00033B4A <AmiBlitz3.ab3@26194>   MOVE.w dontwrite_nomemleft,D1
00033B4E <AmiBlitz3.ab3@26195>    BNE.w 'skipjp
00033B54 <AmiBlitz3.ab3@26196>   MOVE.l destpointer,-(A0)
00033B5A <AmiBlitz3.ab3@26199>   CLR.w proceduremode
00033B60 <AmiBlitz3.ab3@26200>   CLR.l currentfunction
00033B66 <AmiBlitz3.ab3@26201>   CLR.w procnum
00033B6A <AmiBlitz3.ab3@26202>    BSR.w droplocals
00033B70 <AmiBlitz3.ab3@26203>    JSR freepends
00033B76 <AmiBlitz3.ab3@26204> JMP get1bytemain
00033B78 <AmiBlitz3.ab3@26208>   MOVEQ.l #$0C,D0
00033B7A <AmiBlitz3.ab3@26209>   MOVEQ.l #$01,D1
00033B80 <AmiBlitz3.ab3@26210>   MOVEA.l _execbase,A6
00033B86 <AmiBlitz3.ab3@26213>   MOVE.l mempool,a0
00033B8A <AmiBlitz3.ab3@26214>   JSR _AllocPooled(a6)
00033B8C <AmiBlitz3.ab3@26216>   MOVEA.l D0,A0
00033B92 <AmiBlitz3.ab3@26217>   MOVE.l alllocals,(A0)
00033B98 <AmiBlitz3.ab3@26218>   MOVE.l A0,alllocals
00033B9E <AmiBlitz3.ab3@26220>   MOVE.l firstlocal,D0
00033BA4 <AmiBlitz3.ab3@26221>   CLR.l firstlocal
00033BA8 <AmiBlitz3.ab3@26222>   MOVE.l D0,$4(A0)
00033BAE <AmiBlitz3.ab3@26223>   MOVE.l firstglob,D1
00033BB4 <AmiBlitz3.ab3@26224>   CLR.l firstglob
00033BB8 <AmiBlitz3.ab3@26225>   MOVE.l D1,$8(A0)
00033BBE <AmiBlitz3.ab3@26227>   TST.b debugmode
00033BC2 <AmiBlitz3.ab3@26228>    BEQ.b 'skip
00033BC8 <AmiBlitz3.ab3@26229>   TST.w dontwrite_nomemleft
00033BCC <AmiBlitz3.ab3@26230>    BNE.b 'skip
00033BD0 <AmiBlitz3.ab3@26232>   MOVEA.l proclocals(PC),A0
00033BD2 <AmiBlitz3.ab3@26233>   MOVE.l D0,(A0)+
00033BD4 <AmiBlitz3.ab3@26234>   MOVE.l D1,(A0)
00033BD6 <AmiBlitz3.ab3@26237> RTS
00033BDC <AmiBlitz3.ab3@26240> JUMP_baddirerr JMP baddirerr
00033BE2 <AmiBlitz3.ab3@26241> JUMP_noforerr  JMP noforerr
00033BE8 <AmiBlitz3.ab3@26245>   TST.w dirmode
00033BEC <AmiBlitz3.ab3@26246>    BNE.w JUMP_baddirerr
00033BF2 <AmiBlitz3.ab3@26247>   MOVE.l firstfor,D1
00033BF6 <AmiBlitz3.ab3@26248>    BEQ.w JUMP_noforerr
00033BFC <AmiBlitz3.ab3@26249>   JSR reget
00033C00 <AmiBlitz3.ab3@26250>    BEQ.w 'unknown
00033C04 <AmiBlitz3.ab3@26256>   BSR.w getparameter
00033C08 <AmiBlitz3.ab3@26257>   MOVEA.l firstfor(PC),A2
00033C0A <AmiBlitz3.ab3@26258>   MOVEQ.l #$00,D1
00033C0E <AmiBlitz3.ab3@26259>   MOVE.b $10(A2),D1
00033C12 <AmiBlitz3.ab3@26260>   SUBI.w #$12,D1
00033C14 <AmiBlitz3.ab3@26261>   CMP.w D1,D2
00033C18 <AmiBlitz3.ab3@26262>    BNE.w JUMP_noforerr
00033C1C <AmiBlitz3.ab3@26263>   LEA ptr_parameterstore(PC),A0
00033C20 <AmiBlitz3.ab3@26264>   LEA $11(A2),A1
00033C22 <AmiBlitz3.ab3@26265>   SUBQ.w #1,D2
00033C24 <AmiBlitz3.ab3@26268>     CMPM.b (A0)+,(A1)+
00033C28 <AmiBlitz3.ab3@26269>     BNE.w JUMP_noforerr
00033C2C <AmiBlitz3.ab3@26270>   DBF D2,'chkname
00033C30 <AmiBlitz3.ab3@26272>    BSR.w 'unknown2
00033C36 <AmiBlitz3.ab3@26273>    JSR reget
00033C3A <AmiBlitz3.ab3@26274>    BEQ.w 'byebye
00033C3E <AmiBlitz3.ab3@26275>   CMP.w #$2C,D0           ; ','
00033C42 <AmiBlitz3.ab3@26276>    BNE.w JUMP_syntaxerr
00033C48 <AmiBlitz3.ab3@26277>    JSR get1bytemain
00033C4C <AmiBlitz3.ab3@26278>  BRA.w 'nextnext
00033C4E <AmiBlitz3.ab3@26281>  RTS
00033C52 <AmiBlitz3.ab3@26285>   MOVE.l 8(a7),a2
00033C56 <AmiBlitz3.ab3@26286>   Dc.l  $f2124400                                          ;fmove.s (a2),fp0
00033C5A <AmiBlitz3.ab3@26287>   Dc.l  $F2174422                                          ;fadd.s (a7),fp0
00033C5E <AmiBlitz3.ab3@26288>   Dc.l  $F2126400                                          ;fmove.s fp0,(a2)
00033C60 <AmiBlitz3.ab3@26293>   MOVEA.l D1,A2
00033C66 <AmiBlitz3.ab3@26296>   JSR popnext                                           ;error checking for next.
00033C6A <AmiBlitz3.ab3@26297>   MOVE.w $C(A2),D0
00033C70 <AmiBlitz3.ab3@26299>   LEA nextb,A0
00033C76 <AmiBlitz3.ab3@26300>   LEA nextbf,A1
00033C7A <AmiBlitz3.ab3@26301>   CMP.w #$1,D0
00033C7E <AmiBlitz3.ab3@26302>    BEQ.w 'donext
00033C84 <AmiBlitz3.ab3@26303>   LEA nextw,A0
00033C8A <AmiBlitz3.ab3@26304>   LEA nextwf,A1
00033C8E <AmiBlitz3.ab3@26305>   CMP.w #$2,D0
00033C92 <AmiBlitz3.ab3@26306>    BEQ.w 'donext
00033C98 <AmiBlitz3.ab3@26307>   LEA nextl,A0
00033C9E <AmiBlitz3.ab3@26308>   LEA nextlf,A1
00033CA2 <AmiBlitz3.ab3@26309>   CMP.w #$5,D0
00033CA6 <AmiBlitz3.ab3@26310>    BNE.w 'donext
00033CAC <AmiBlitz3.ab3@26312>    TST.b fpu
00033CB0 <AmiBlitz3.ab3@26313>    BEQ 'old
00033CB6 <AmiBlitz3.ab3@26314>    LEA 'fpu2dats,a0                                         ;fpu next code
00033CBC <AmiBlitz3.ab3@26315>    LEA 'fpu2date,a1
00033CC0 <AmiBlitz3.ab3@26316>  BRA 'donext
00033CC4 <AmiBlitz3.ab3@26320>   MOVE.w #$C900,D1     ; #getffpbase
00033CC8 <AmiBlitz3.ab3@26321>    BSR.w Atokejsr
00033CCE <AmiBlitz3.ab3@26322>   LEA nextf,A0
00033CD4 <AmiBlitz3.ab3@26323>   LEA nextff,A1
00033CDA <AmiBlitz3.ab3@26326>   JSR pokecode
00033CE0 <AmiBlitz3.ab3@26328>    TST.b fast                                             ;fast for next deactivate
00033CE4 <AmiBlitz3.ab3@26329>  BRA 'l1
00033CEA <AmiBlitz3.ab3@26331>     TST.b onestep
00033CEE <AmiBlitz3.ab3@26332>     BEQ 'l1
00033CF4 <AmiBlitz3.ab3@26333>     CLR.b onestep
00033CFA <AmiBlitz3.ab3@26334>     SUBQ.l #4,destpointer
00033CFE <AmiBlitz3.ab3@26335>     MOVE.w #$5292,d1
00033D04 <AmiBlitz3.ab3@26336>     JSR writeword
00033D08 <AmiBlitz3.ab3@26340>   MOVE.l thebra(PC),D1
00033D0E <AmiBlitz3.ab3@26341>    JSR writelong
00033D14 <AmiBlitz3.ab3@26343>   MOVEA.l firstfor,A2
00033D1A <AmiBlitz3.ab3@26344>   MOVE.l (A2),firstfor
00033D1E <AmiBlitz3.ab3@26348>   MOVEA.l $8(A2),A0
00033D24 <AmiBlitz3.ab3@26349>   MOVEA.l destpointer,A1
00033D26 <AmiBlitz3.ab3@26350>   MOVE.l A1,D1
00033D28 <AmiBlitz3.ab3@26351>   SUB.l A0,D1            ;d1=positive bra
00033D2A <AmiBlitz3.ab3@26352>   ADDQ.l #2,D1
00033D30 <AmiBlitz3.ab3@26353>   CMP.l #MinWordSgnd,D1  ; #32768,
00033D34 <AmiBlitz3.ab3@26354>    BCC.w JUMP_bigforerr
00033D3A <AmiBlitz3.ab3@26355>   TST.w dontwrite_nomemleft
00033D3E <AmiBlitz3.ab3@26356>    BNE.w 'nopoke1
00033D42 <AmiBlitz3.ab3@26357>   MOVE.w D1,-$2(A0)
00033D44 <AmiBlitz3.ab3@26360>   MOVE.l A1,D1
00033D48 <AmiBlitz3.ab3@26361>   SUB.l $4(A2),D1
00033D4A <AmiBlitz3.ab3@26362>   SUBQ.l #6,D1
00033D50 <AmiBlitz3.ab3@26363>   CMP.l #MinWordSgnd,D1 ;#32768,
00033D54 <AmiBlitz3.ab3@26364>    BCC.w JUMP_bigforerr
00033D5A <AmiBlitz3.ab3@26365>   TST.w dontwrite_nomemleft
00033D5E <AmiBlitz3.ab3@26366>    BNE.w 'skip
00033D60 <AmiBlitz3.ab3@26367>   NEG.w D1
00033D64 <AmiBlitz3.ab3@26368>   MOVE.w D1,-$2(A1)
00033D6A <AmiBlitz3.ab3@26371>   JSR popnext3                ;fix stack
00033D70 <AmiBlitz3.ab3@26373>   MOVEA.l _execbase,A6
00033D72 <AmiBlitz3.ab3@26374>   MOVEA.l A2,A1
00033D74 <AmiBlitz3.ab3@26375>   MOVEQ.l #$00,D0
00033D78 <AmiBlitz3.ab3@26376>   MOVE.b $10(A1),D0
00033D7E <AmiBlitz3.ab3@26379>   MOVE.l mempool2,a0
00033D82 <AmiBlitz3.ab3@26380>   JSR _FreePooled(A6)
00033D88 <AmiBlitz3.ab3@26382> JMP reget
00033D8E <AmiBlitz3.ab3@26385> JUMP_notallowd JMP notallowd
00033D94 <AmiBlitz3.ab3@26386> JUMP_bigforerr JMP bigforerr
00033D98 <AmiBlitz3.ab3@26390>   MOVE.w #$664F,-(A7)          ;#'fO',
00033D9C <AmiBlitz3.ab3@26393>  BRA.w thebra
00033DA2 <AmiBlitz3.ab3@26396> JUMP_error_dublicate_for JMP error_dublicate_for
00033DA8 <AmiBlitz3.ab3@26397> JUMP_badforerr           JMP badforerr
00033DAC <AmiBlitz3.ab3@26400> forlineat:   Ds.l 1
00033DAE <AmiBlitz3.ab3@26401> fortemp:     Ds.w 1
00033DB4 <AmiBlitz3.ab3@26409>   CLR.l fp0addr
00033DBA <AmiBlitz3.ab3@26411>   TST.w dirmode
00033DBE <AmiBlitz3.ab3@26412>    BNE.w JUMP_baddirerr
00033DC8 <AmiBlitz3.ab3@26413>   MOVE.l linenumat,forlineat
00033DCE <AmiBlitz3.ab3@26417>   MOVE.l A5,letstart
00033DD2 <AmiBlitz3.ab3@26418>   BSR.w getparameter
00033DD8 <AmiBlitz3.ab3@26419>   MOVE.w D2,fortemp
00033DDE <AmiBlitz3.ab3@26421>   JSR findfor
00033DE2 <AmiBlitz3.ab3@26422>    BEQ.w JUMP_error_dublicate_for
00033DE8 <AmiBlitz3.ab3@26423>   LEA firstfor,A2
00033DEE <AmiBlitz3.ab3@26424>   JSR addhere2
00033DF0 <AmiBlitz3.ab3@26425>   MOVE.l A2,-(A7)
00033DF6 <AmiBlitz3.ab3@26427>   TST.b debugmode
00033DFA <AmiBlitz3.ab3@26428>    BEQ.b 'noerr
00033E00 <AmiBlitz3.ab3@26430>   JSR chkstak
00033E06 <AmiBlitz3.ab3@26431>   MOVE.l forset,D1
00033E0C <AmiBlitz3.ab3@26432>   JSR  writelong
00033E10 <AmiBlitz3.ab3@26435>   MOVE.w fortemp(PC),D2
00033E18 <AmiBlitz3.ab3@26437>   MOVE.b #1,formode
00033E1C <AmiBlitz3.ab3@26439>   BSR.w dolet2                                         ;for get 1. value
00033E22 <AmiBlitz3.ab3@26440>   CLR.b formode
00033E26 <AmiBlitz3.ab3@26441>   CMP.w #-$7FE8,D0       ; was #$8018,
00033E2A <AmiBlitz3.ab3@26442>    BNE.w JUMP_syntaxerr
00033E30 <AmiBlitz3.ab3@26443>   MOVE.w commode,D1
00033E34 <AmiBlitz3.ab3@26444>    BNE.w JUMP_syntaxerr
00033E38 <AmiBlitz3.ab3@26445>   CMP.b #$6,D2
00033E3C <AmiBlitz3.ab3@26446>    BCC.w JUMP_badforerr
00033E40 <AmiBlitz3.ab3@26447>   BTST #$F,D2
00033E44 <AmiBlitz3.ab3@26448>    BNE.w 'skip
00033E4A <AmiBlitz3.ab3@26449>   MOVE.w leaamp,D1
00033E50 <AmiBlitz3.ab3@26450>   JSR pokewda5s
00033E52 <AmiBlitz3.ab3@26451>   MOVE.w D3,D1
00033E58 <AmiBlitz3.ab3@26452>   JSR  writeword
00033E5E <AmiBlitz3.ab3@26455>   MOVE.w pushindex,D1
00033E64 <AmiBlitz3.ab3@26456>   JSR  writeword         ;index lea on stack
00033E68 <AmiBlitz3.ab3@26457>   ANDI.w #$FF,D2
00033E6A <AmiBlitz3.ab3@26459>   MOVEA.l (A7),A1
00033E6E <AmiBlitz3.ab3@26460>   MOVE.w D2,$C(A1)
00033E70 <AmiBlitz3.ab3@26462>   MOVE.w D2,-(A7)
00033E74 <AmiBlitz3.ab3@26463>    BSR.w eval             ;get fin
00033E7A <AmiBlitz3.ab3@26465>    CLR.b onestep
00033E7E <AmiBlitz3.ab3@26466>    CMP.w #$8019,d0
00033E82 <AmiBlitz3.ab3@26467>    BEQ 'l1
00033E8A <AmiBlitz3.ab3@26468>    MOVE.b #1,onestep
00033E8C <AmiBlitz3.ab3@26472>   MOVE.w (A7),D2
00033E92 <AmiBlitz3.ab3@26474>   MOVE.w pushd0l,D1
00033E96 <AmiBlitz3.ab3@26475>   CMP.w #$3,D2
00033E9A <AmiBlitz3.ab3@26476>    BCC.w 'skip1
00033EA0 <AmiBlitz3.ab3@26477>   MOVE.w pushd0wd,D1
00033EA2 <AmiBlitz3.ab3@26480>    MOVE.w D1,-(A7)
00033EA8 <AmiBlitz3.ab3@26482>    TST.b fpu
00033EAC <AmiBlitz3.ab3@26483>    BEQ 'old
00033EB0 <AmiBlitz3.ab3@26484>    CMP.b #5,d2
00033EB4 <AmiBlitz3.ab3@26485>    BNE 'old
00033EBA <AmiBlitz3.ab3@26486>    MOVE.l #$f2276400,d1
00033EC0 <AmiBlitz3.ab3@26488>    JSR writelong
00033EC4 <AmiBlitz3.ab3@26489>  BRA 'weit
00033ECA <AmiBlitz3.ab3@26493>    JSR  writeword        ;push fin on stack                                   ;fpu for end value
00033ECE <AmiBlitz3.ab3@26496>   CMP.w #-$7FE7,D0      ; was #$8019,
00033ED2 <AmiBlitz3.ab3@26497>    BNE.w 'defstep
00033ED6 <AmiBlitz3.ab3@26499>    BSR.w eval           ;get step
00033EDC <AmiBlitz3.ab3@26501>    TST.b fpu
00033EE0 <AmiBlitz3.ab3@26502>    BEQ 'pushstep
00033EE4 <AmiBlitz3.ab3@26503>    CMP.b #5,d2
00033EE8 <AmiBlitz3.ab3@26504>    BNE 'pushstep
00033EEE <AmiBlitz3.ab3@26505>    MOVE.l #$f2276400,d1                                    ;write step <> 1
00033EF4 <AmiBlitz3.ab3@26507>   JSR writelong
00033EF6 <AmiBlitz3.ab3@26512>    MOVE.w (a7)+,d1
00033EFA <AmiBlitz3.ab3@26513>  BRA 'fpur
00033EFE <AmiBlitz3.ab3@26517>   CMP.w #$4,D2
00033F02 <AmiBlitz3.ab3@26518>    BCC.w 'qup
00033F06 <AmiBlitz3.ab3@26519>   MOVE.w #$7001,D1
00033F0C <AmiBlitz3.ab3@26520>   JSR writeword
00033F10 <AmiBlitz3.ab3@26521>  BRA.w 'pushstep
00033F14 <AmiBlitz3.ab3@26524>   BNE.w 'notq
00033F18 <AmiBlitz3.ab3@26525>   MOVE.w #$7001,D1
00033F1E <AmiBlitz3.ab3@26526>   JSR writeword
00033F24 <AmiBlitz3.ab3@26527>   MOVE.w swapd0,D1
00033F2A <AmiBlitz3.ab3@26528>   JSR writeword
00033F2E <AmiBlitz3.ab3@26529>  BRA.w 'pushstep
00033F34 <AmiBlitz3.ab3@26533>   TST.b fpu
00033F38 <AmiBlitz3.ab3@26534>    BEQ 'old2
00033F3C <AmiBlitz3.ab3@26535>   CMP.b #5,d2
00033F40 <AmiBlitz3.ab3@26536>    BNE 'old2
00033F46 <AmiBlitz3.ab3@26537>   MOVE.l #$f23c5000,d1
00033F4C <AmiBlitz3.ab3@26538>   JSR writelong
00033F50 <AmiBlitz3.ab3@26539>   MOVE.w #$1,d1
00033F56 <AmiBlitz3.ab3@26540>   JSR writeword
00033F5C <AmiBlitz3.ab3@26541>   MOVE.l #$f2276400,d1
00033F62 <AmiBlitz3.ab3@26542>   JSR writelong
00033F64 <AmiBlitz3.ab3@26543>   MOVE.w (a7)+,d1
00033F68 <AmiBlitz3.ab3@26544>  BRA 'fpur
00033F6C <AmiBlitz3.ab3@26548>   MOVE.w #$203C,D1                                         ;write step 1
00033F72 <AmiBlitz3.ab3@26549>   JSR writeword
00033F78 <AmiBlitz3.ab3@26550>   MOVE.l #$80000041,D1     ;ffp '1'                                ;ffp '1'
00033F7E <AmiBlitz3.ab3@26551>   JSR writelong
00033F80 <AmiBlitz3.ab3@26554>   MOVE.w (A7)+,D1
00033F86 <AmiBlitz3.ab3@26555>   JSR writeword           ;push step on stack                                 ;push step on stack
00033F88 <AmiBlitz3.ab3@26560>   MOVE.w (A7)+,D2
00033F8A <AmiBlitz3.ab3@26561>   MOVEA.l (A7),A1
00033F92 <AmiBlitz3.ab3@26562>   MOVE.l destpointer,$4(A1)
00033F98 <AmiBlitz3.ab3@26563>   LEA forcompb,A0
00033F9E <AmiBlitz3.ab3@26564>   LEA forcompbf,A1
00033FA2 <AmiBlitz3.ab3@26565>   CMP.w #$1,D2
00033FA6 <AmiBlitz3.ab3@26566>    BEQ.w 'docomp
00033FAC <AmiBlitz3.ab3@26567>   LEA forcompw,A0
00033FB2 <AmiBlitz3.ab3@26568>   LEA forcompwf,A1
00033FB6 <AmiBlitz3.ab3@26569>   CMP.w #$2,D2
00033FBA <AmiBlitz3.ab3@26570>    BEQ.w 'docomp
00033FC0 <AmiBlitz3.ab3@26571>   LEA forcompl,A0
00033FC6 <AmiBlitz3.ab3@26572>   LEA forcomplf,A1
00033FCA <AmiBlitz3.ab3@26573>   CMP.w #$5,D2
00033FCE <AmiBlitz3.ab3@26574>    BNE.w 'docomp
00033FD4 <AmiBlitz3.ab3@26576>   TST.b fpu
00033FD8 <AmiBlitz3.ab3@26577>    BEQ 'old3
00033FDE <AmiBlitz3.ab3@26578>   LEA fpu_start,a0
00033FE4 <AmiBlitz3.ab3@26579>   LEA fpu_end,a1
00033FEA <AmiBlitz3.ab3@26580>   JSR pokecode
00033FEE <AmiBlitz3.ab3@26581>  BRA 'fpu3
00033FF4 <AmiBlitz3.ab3@26585>   LEA forcompf,A0                                         ;
00033FFA <AmiBlitz3.ab3@26586>   LEA forcompff,A1
00034000 <AmiBlitz3.ab3@26587>   JSR pokecode
00034004 <AmiBlitz3.ab3@26588>   MOVE.w #$C900,D1       ; #getffpbase,
00034008 <AmiBlitz3.ab3@26589>   BSR.w Atokejsr
0003400E <AmiBlitz3.ab3@26590>   LEA forcompf2,A0
00034014 <AmiBlitz3.ab3@26591>   LEA forcompf2f,A1
0003401A <AmiBlitz3.ab3@26594>   JSR pokecode
00034020 <AmiBlitz3.ab3@26596>   TST.b fast                                               ;fast for next
00034024 <AmiBlitz3.ab3@26597>    BEQ 's1
00034028 <AmiBlitz3.ab3@26598>   CMP.w #3,d2
0003402C <AmiBlitz3.ab3@26599>    BNE 's1
00034032 <AmiBlitz3.ab3@26600>   TST.b onestep
00034036 <AmiBlitz3.ab3@26601>    BEQ 's1
00034040 <AmiBlitz3.ab3@26602>   SUB.l #10,destpointer
00034044 <AmiBlitz3.ab3@26603>   MOVE.w #$b081,d1
0003404A <AmiBlitz3.ab3@26604>   JSR writeword
0003404E <AmiBlitz3.ab3@26609>   MOVE.l thebgt(PC),D1
00034054 <AmiBlitz3.ab3@26610>   JSR writelong
00034056 <AmiBlitz3.ab3@26615>   MOVEA.l (A7)+,A1
0003405E <AmiBlitz3.ab3@26616>   MOVE.l destpointer,$8(A1)
00034064 <AmiBlitz3.ab3@26617> JMP reget
00034068 <AmiBlitz3.ab3@26622>   MOVEA.l 8(a7),a2
0003406C <AmiBlitz3.ab3@26623>   Dc.l $f2124400                                           ;fmove.s (a2),fp0
00034072 <AmiBlitz3.ab3@26624>   fmove.s 4(a7),fp1
00034076 <AmiBlitz3.ab3@26625>   BTST.b #7,(a7)
0003407A <AmiBlitz3.ab3@26626>   BNE 'negi
0003407E <AmiBlitz3.ab3@26627>   fcmp.x fp1,fp0
00034082 <AmiBlitz3.ab3@26628>  BRA 'negi2
00034086 <AmiBlitz3.ab3@26631>   fcmp.x fp0,fp1
0003408A <AmiBlitz3.ab3@26634>   Dc.l $f2920000                                           ;fbgt.w
0003408E <AmiBlitz3.ab3@26640>   BGT.w thebgt
00034094 <AmiBlitz3.ab3@26643> JUMP_error4char          JMP error4char
0003409A <AmiBlitz3.ab3@26644> JUMP_error_convert_types JMP error_convert_types
000340A0 <AmiBlitz3.ab3@26645> JUMP_noleterr            JMP noleterr
000340A6 <AmiBlitz3.ab3@26646> JUMP_nocomerr            JMP nocomerr
000340AC <AmiBlitz3.ab3@26647> JUMP_comerr              JMP comerr
000340B2 <AmiBlitz3.ab3@26651>   MOVE.l A5,letstart
000340B8 <AmiBlitz3.ab3@26652>   JSR getparameter
000340C2 <AmiBlitz3.ab3@26659>   MOVE.l destpointer,pushpc
000340CC <AmiBlitz3.ab3@26660>   MOVE.l hunkoffsetbase,pushoff
000340D2 <AmiBlitz3.ab3@26661>   CLR.l rightsidetype
000340D8 <AmiBlitz3.ab3@26662>   CLR.w rightsideflagmask
000340E0 <AmiBlitz3.ab3@26664>   MOVE.w #$0001,regnum            ;don't disturb this reg!
000340E6 <AmiBlitz3.ab3@26665>   JSR fetchvars                   ;var in a3, type in a2
000340EC <AmiBlitz3.ab3@26666>   JSR calcvar                     ;get offset stuff
000340F2 <AmiBlitz3.ab3@26668>   TST.b formode
000340F6 <AmiBlitz3.ab3@26669>   BEQ 'lf1
000340FC <AmiBlitz3.ab3@26670>   CMP.l #newtype_double,A2
00034100 <AmiBlitz3.ab3@26671>   BEQ JUMP_notallowd
00034106 <AmiBlitz3.ab3@26672>   MOVE.l a2,currtype
0003410C <AmiBlitz3.ab3@26675>   CLR.w startoffsetmore
00034110 <AmiBlitz3.ab3@26676>   CMP.w #$3d,d0
00034114 <AmiBlitz3.ab3@26677>   BNE 'l1a
00034118 <AmiBlitz3.ab3@26678>   BTST #15,d2
0003411C <AmiBlitz3.ab3@26679>   BEQ 'l1a
00034120 <AmiBlitz3.ab3@26680>   CMP.b #1,d2
00034124 <AmiBlitz3.ab3@26681>   BNE 'l1a
0003412E <AmiBlitz3.ab3@26682>   MOVE.w leaa0a0+2,startoffsetmore
00034134 <AmiBlitz3.ab3@26686>   CLR.w regnum                     ;don't disturb this reg
00034138 <AmiBlitz3.ab3@26687>   BSR.w pushdo
0003413E <AmiBlitz3.ab3@26688>   CLR.w commode
00034144 <AmiBlitz3.ab3@26690>   CLR.w stackcorrect
0003414A <AmiBlitz3.ab3@26692>   CLR.w pcodd
00034150 <AmiBlitz3.ab3@26694>   MOVE.w startoffsetmore,d1
00034154 <AmiBlitz3.ab3@26695>   BTST #0,d1
00034158 <AmiBlitz3.ab3@26696>   BEQ 'l2a
00034160 <AmiBlitz3.ab3@26697>   MOVE.w #1,pcodd
00034164 <AmiBlitz3.ab3@26702>   CMP.w #$3D,D0              ;'='                              ;=
00034168 <AmiBlitz3.ab3@26703>   BEQ.w 'nextcom
0003416A <AmiBlitz3.ab3@26707>   MOVE.b (a5)+,d1
0003416E <AmiBlitz3.ab3@26708>   BEQ 'l10
00034172 <AmiBlitz3.ab3@26709>   CMP.b #":",d1
00034176 <AmiBlitz3.ab3@26710>   BEQ 'l10
0003417A <AmiBlitz3.ab3@26711>   CMP.b #";",d1
0003417E <AmiBlitz3.ab3@26712>   BEQ 'l10
00034182 <AmiBlitz3.ab3@26713>   CMP.b #"0",d1
00034186 <AmiBlitz3.ab3@26714>   BLT 'l11
0003418A <AmiBlitz3.ab3@26715>   CMP.b #"9",d1
0003418E <AmiBlitz3.ab3@26716>   BGT 'l11
00034192 <AmiBlitz3.ab3@26717>  BRA.s 'l1
0003419A <AmiBlitz3.ab3@26720>   MOVE.b #1,quickadd
000341A0 <AmiBlitz3.ab3@26727>   MOVEA.l letstart,A5
000341A2 <AmiBlitz3.ab3@26728>   SUBQ.w #1,A5
000341A6 <AmiBlitz3.ab3@26731>   CMP.b #$7,D2
000341AA <AmiBlitz3.ab3@26732>    BNE.w 'notstring
000341AE <AmiBlitz3.ab3@26743>   MOVEM.w D2-D3,-(A7)
000341B4 <AmiBlitz3.ab3@26744>   MOVE.l lastoffset_org,-(A7)
000341BA <AmiBlitz3.ab3@26745>   MOVE.w varmode,-(A7)
000341C4 <AmiBlitz3.ab3@26748>     MOVE.l #forthstack,forthsp
000341CE <AmiBlitz3.ab3@26749>    MOVE.l #precstack,precsp
000341D4 <AmiBlitz3.ab3@26750>    CLR.w regnum
000341DA <AmiBlitz3.ab3@26751>    CLR.w nonew
000341E0 <AmiBlitz3.ab3@26752>    CLR.w sbasegot
000341EA <AmiBlitz3.ab3@26753>    MOVE.w varcodelen,oldvcodelen
000341F0 <AmiBlitz3.ab3@26754>    CLR.w varcodelen
000341F8 <AmiBlitz3.ab3@26755>    MOVE.w #$FFFF,lasta6
000341FA <AmiBlitz3.ab3@26759>   MOVEQ.l #$07,D2
000341FE <AmiBlitz3.ab3@26760>    BSR.w eval
00034204 <AmiBlitz3.ab3@26761>   MOVE.w (A7)+,varmode
0003420A <AmiBlitz3.ab3@26762>   MOVE.l (A7)+,lastoffset_org
00034210 <AmiBlitz3.ab3@26763>   MOVE.w moved0a3,D1
00034216 <AmiBlitz3.ab3@26764>    JSR writeword
0003421C <AmiBlitz3.ab3@26765>   MOVE.w commode,D1
00034220 <AmiBlitz3.ab3@26766>    BEQ.w 'stconti
00034226 <AmiBlitz3.ab3@26767>   LEA pulla2st,A0
0003422C <AmiBlitz3.ab3@26768>   LEA pulla2stf,A1
00034232 <AmiBlitz3.ab3@26769>    JSR pokecode
00034236 <AmiBlitz3.ab3@26770>  BRA.w 'stconti2
0003423A <AmiBlitz3.ab3@26773>   BSR.w pushput
0003423E <AmiBlitz3.ab3@26776>   MOVEM.w (A7)+,D2-D3
00034242 <AmiBlitz3.ab3@26777>   BTST #$F,D2
00034246 <AmiBlitz3.ab3@26778>   BNE.w 'already
0003424C <AmiBlitz3.ab3@26779>     MOVE.w D3,leaa5d3a2+2
00034252 <AmiBlitz3.ab3@26780>     MOVE.l leaa5d3a2,D1
00034258 <AmiBlitz3.ab3@26781>     JSR pokela5s
0003425C <AmiBlitz3.ab3@26784>   MOVE.w #$FE6F,D1         ; was #65135,
00034262 <AmiBlitz3.ab3@26785>   JSR uselib
00034268 <AmiBlitz3.ab3@26786>   MOVE.l #$C700,D1         ; was #lastring,
0003426E <AmiBlitz3.ab3@26787>   MOVE.l d1,lastinstruction
00034274 <AmiBlitz3.ab3@26788>   MOVE.w varmode,D2
00034278 <AmiBlitz3.ab3@26789>   BNE.w 'local
0003427A <AmiBlitz3.ab3@26790>     ADDQ.w #1,D1           ;use global allocmem
0003427E <AmiBlitz3.ab3@26793>   BSR.w Atokejsr
00034282 <AmiBlitz3.ab3@26794>   CMP.w #$2C,D0           ;','
00034286 <AmiBlitz3.ab3@26795>   BNE.w 'done
0003428C <AmiBlitz3.ab3@26797>   MOVE.w addq4a2,D1
00034292 <AmiBlitz3.ab3@26798>   JSR writeword
00034296 <AmiBlitz3.ab3@26799>  BRA.w 'nextstr
0003429A <AmiBlitz3.ab3@26802>    BTST #$E,D2             ;pointer, ignore!
0003429E <AmiBlitz3.ab3@26803>    BNE.w 'skip
000342A0 <AmiBlitz3.ab3@26804>   TST.b D2
000342A4 <AmiBlitz3.ab3@26805>    BEQ.w JUMP_noleterr     ;tried to assign a struct - later!
000342AA <AmiBlitz3.ab3@26807>    TST.b newsyntax
000342AE <AmiBlitz3.ab3@26808>    BEQ 'skip2
000342B2 <AmiBlitz3.ab3@26811>    CMP.w #$4022,(a5)
000342B6 <AmiBlitz3.ab3@26812>    BNE 'skip2
000342BC <AmiBlitz3.ab3@26813>    CMP.l #3,d2
000342C0 <AmiBlitz3.ab3@26814>    BNE  JUMP_error_convert_types
000342C2 <AmiBlitz3.ab3@26815>    ADDQ #2,a5
000342C4 <AmiBlitz3.ab3@26816>    MOVEQ #0,d0
000342C6 <AmiBlitz3.ab3@26817>    MOVE.b (a5)+,d0
000342CA <AmiBlitz3.ab3@26818>    BEQ 'skip2
000342CE <AmiBlitz3.ab3@26819>    CMP.b #$22,d0
000342D2 <AmiBlitz3.ab3@26820>    BNE 'l5
000342D6 <AmiBlitz3.ab3@26821>    MOVE.b #0,d0
000342DA <AmiBlitz3.ab3@26822>  BRA 'do
000342DC <AmiBlitz3.ab3@26825>   ASL.l #8,d0
000342DE <AmiBlitz3.ab3@26826>    MOVE.b (a5)+,d0
000342E2 <AmiBlitz3.ab3@26827>    BEQ 'skip2
000342E6 <AmiBlitz3.ab3@26828>    CMP.b #$22,d0
000342EA <AmiBlitz3.ab3@26829>    BNE 'l2
000342EE <AmiBlitz3.ab3@26830>    MOVE.b #0,d0
000342F0 <AmiBlitz3.ab3@26831>    ASR.l #8,d0
000342F4 <AmiBlitz3.ab3@26832>  BRA 'do
000342F6 <AmiBlitz3.ab3@26835>   ASL.l #8,d0
000342F8 <AmiBlitz3.ab3@26836>     MOVE.b (a5)+,d0
000342FC <AmiBlitz3.ab3@26837>    BEQ 'skip2
00034300 <AmiBlitz3.ab3@26838>    CMP.b #$22,d0
00034304 <AmiBlitz3.ab3@26839>    BNE 'l3
00034308 <AmiBlitz3.ab3@26840>    MOVE.b #0,d0
0003430A <AmiBlitz3.ab3@26841>    ASR.l #8,d0
0003430E <AmiBlitz3.ab3@26842>  BRA 'do
00034310 <AmiBlitz3.ab3@26845>   ASL.l #8,d0
00034312 <AmiBlitz3.ab3@26846>     MOVE.b (a5)+,d0
00034316 <AmiBlitz3.ab3@26847>    BEQ 'skip2
0003431A <AmiBlitz3.ab3@26848>    CMP.b #$22,d0
0003431E <AmiBlitz3.ab3@26849>    BNE 'l4
00034322 <AmiBlitz3.ab3@26850>    MOVE.b #0,d0
00034324 <AmiBlitz3.ab3@26851>    ASR.l #8,d0
00034328 <AmiBlitz3.ab3@26852>  BRA 'do
0003432C <AmiBlitz3.ab3@26855>    CMP.b #$22,(a5)+
00034330 <AmiBlitz3.ab3@26856>    BNE JUMP_error4char
00034334 <AmiBlitz3.ab3@26859>   MOVE.w #$2b7c,d1
0003433A <AmiBlitz3.ab3@26860>    TST.w varmode
0003433E <AmiBlitz3.ab3@26861>    BEQ 'g3
00034342 <AmiBlitz3.ab3@26862>    BCLR #9,d1
00034348 <AmiBlitz3.ab3@26865>     JSR writeword
0003434A <AmiBlitz3.ab3@26866>     MOVE.l d0,d1
00034350 <AmiBlitz3.ab3@26867>     JSR writelong
00034352 <AmiBlitz3.ab3@26868>     MOVE.w d3,d1
00034358 <AmiBlitz3.ab3@26869>     JSR writeword
0003435E <AmiBlitz3.ab3@26870>     JSR get1bytemain
00034360 <AmiBlitz3.ab3@26871>  RTS
00034366 <AmiBlitz3.ab3@26878>   MOVE.w d2,vartype
0003436A <AmiBlitz3.ab3@26880>   MOVE.b #$3,D2
0003436E <AmiBlitz3.ab3@26887>   CMP.b #5,d2
00034372 <AmiBlitz3.ab3@26888>   BNE 'l1aa
00034378 <AmiBlitz3.ab3@26889>   MOVE.l a2,currtype
0003437C <AmiBlitz3.ab3@26894>   MOVEM.w D2-D3,-(A7)
00034382 <AmiBlitz3.ab3@26895>   MOVE.w varmode,-(A7)
00034388 <AmiBlitz3.ab3@26897>   MOVE.l a2,leftsidetype
00034392 <AmiBlitz3.ab3@26898>   MOVE.w flagmask,leftsideflagmask
00034396 <AmiBlitz3.ab3@26899>   BTST #$f,d2
0003439A <AmiBlitz3.ab3@26900>   BEQ 'nomultiassign
000343A0 <AmiBlitz3.ab3@26901>   CLR.l leftsidetype                        ;its multiassign to type entries so no typecheck need
000343A6 <AmiBlitz3.ab3@26902>   CLR.w leftsideflagmask
000343AA <AmiBlitz3.ab3@26906>   ANDI.w #$FF,D2
000343B0 <AmiBlitz3.ab3@26907>   MOVE.l lastoffset_org,-(A7)
000343B6 <AmiBlitz3.ab3@26908>   JSR eval                                ; calc right side of var assign
000343BA <AmiBlitz3.ab3@26910>   MOVEM.l a0/a1,-(a7)
000343C0 <AmiBlitz3.ab3@26911>   MOVE.l leftsidetype,a0
000343C6 <AmiBlitz3.ab3@26912>   CMP.l #0,a0
000343CA <AmiBlitz3.ab3@26913>   BEQ 'nocheck
000343D2 <AmiBlitz3.ab3@26914>   CMP.w #1,leftsideflagmask
000343D6 <AmiBlitz3.ab3@26915>   BEQ 'isptr
000343DE <AmiBlitz3.ab3@26916>   CMP.l #$100,4(a0)
000343E2 <AmiBlitz3.ab3@26917>   BLE 'nocheck
000343E8 <AmiBlitz3.ab3@26920>   TST.l typetocast
000343EC <AmiBlitz3.ab3@26921>   BEQ 'nocast
000343F2 <AmiBlitz3.ab3@26922>   MOVE.l typetocast,a1
000343F6 <AmiBlitz3.ab3@26923>   BRA 'typecheck
000343FC <AmiBlitz3.ab3@26926>   TST.l rightsidetype
00034400 <AmiBlitz3.ab3@26927>   BEQ 'nocheck
00034406 <AmiBlitz3.ab3@26928>   MOVE.l rightsidetype,a1
0003440E <AmiBlitz3.ab3@26929>   CMP.w #1,rightsideflagmask
00034412 <AmiBlitz3.ab3@26930>   BEQ 'ok
0003441A <AmiBlitz3.ab3@26931>   CMP.l #$100,4(a1)
0003441E <AmiBlitz3.ab3@26932>   BGE 'typecheck
00034426 <AmiBlitz3.ab3@26933>   CMP.l #$3,4(a1)
0003442A <AmiBlitz3.ab3@26934>   BEQ 'ok                              ;long assign is allow with this codelines
0003442E <AmiBlitz3.ab3@26935>   BRA 'error
00034434 <AmiBlitz3.ab3@26938>   TST.b typecheck
00034438 <AmiBlitz3.ab3@26939>   BEQ 'nocheck
0003443E <AmiBlitz3.ab3@26940>   TST.b notypecheck
00034442 <AmiBlitz3.ab3@26941>   BNE 'ok
00034444 <AmiBlitz3.ab3@26942>   CMP.l a0,a1
00034448 <AmiBlitz3.ab3@26943>   BEQ 'ok
0003444C <AmiBlitz3.ab3@26945>   MOVE.l 4(a1),a1                   ; load the address of 1. type.
00034450 <AmiBlitz3.ab3@26946>   CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
00034454 <AmiBlitz3.ab3@26947>   BEQ 'ok
0003445A <AmiBlitz3.ab3@26950>  JMP   error_convert_types     ;for syntax 4  = typecheck
00034460 <AmiBlitz3.ab3@26954>    CLR.l typetocast
00034464 <AmiBlitz3.ab3@26955>    MOVEM.l (a7)+, a0/a1
0003446A <AmiBlitz3.ab3@26957>   MOVE.l (A7)+,lastoffset_org
00034470 <AmiBlitz3.ab3@26958>   MOVE.w commode,D1
00034474 <AmiBlitz3.ab3@26959>    BNE.w 'conti
00034478 <AmiBlitz3.ab3@26960>    BSR.w pushput
0003447E <AmiBlitz3.ab3@26963>   MOVE.w (A7)+,varmode
00034482 <AmiBlitz3.ab3@26964>   MOVEM.w (A7)+,D2-D3
00034486 <AmiBlitz3.ab3@26969>   MOVE.w #$2B40,D1
0003448C <AmiBlitz3.ab3@26970>   MOVE.w varmode,D4
00034490 <AmiBlitz3.ab3@26971>    BEQ.w 'skip1
00034494 <AmiBlitz3.ab3@26972>   BCLR #$9,D1
00034498 <AmiBlitz3.ab3@26975>   BTST #$F,D2
0003449C <AmiBlitz3.ab3@26976>    BEQ.w 'code
000344A2 <AmiBlitz3.ab3@26979>    TST.b stackcorrect
000344A6 <AmiBlitz3.ab3@26980>    BNE 'st1
000344AC <AmiBlitz3.ab3@26982>   MOVE.w commode,D1
000344B0 <AmiBlitz3.ab3@26983>    BEQ.w 'skipc1
000344B6 <AmiBlitz3.ab3@26988>   MOVE.w pulla2,D1
000344BC <AmiBlitz3.ab3@26989>    JSR writeword
000344C0 <AmiBlitz3.ab3@26992>   MOVE.w #$2480,D1               ;move.l d0,(a2)
000344C4 <AmiBlitz3.ab3@26995>    MOVEM.l a0/d0,-(a7)
000344CA <AmiBlitz3.ab3@26996>    MOVEA.l lastoffset_org,A0
000344CC <AmiBlitz3.ab3@26997>    MOVE.l A0,D0
000344D0 <AmiBlitz3.ab3@26998>    BEQ.w 'skipa
000344D2 <AmiBlitz3.ab3@26999>    MOVEA.l D0,A0
000344DA <AmiBlitz3.ab3@27000>    MOVE.l $A(A0),currtype
000344DE <AmiBlitz3.ab3@27003>   MOVEM.l (a7)+,a0/d0
000344E2 <AmiBlitz3.ab3@27005>   CMP.w #$2C,D0                ; ','
000344E6 <AmiBlitz3.ab3@27006>    BNE.w 'code
000344EA <AmiBlitz3.ab3@27008>     MOVE.w #$24C0,D1           ;move.l d0,(a2)+
000344EE <AmiBlitz3.ab3@27009>    BSR.w 'code                                         ;write store
000344F4 <AmiBlitz3.ab3@27012>    MOVE.l lastoffset_org,D0
000344FC <AmiBlitz3.ab3@27018>   MOVE.w #$FFFF,commode    ; -1
00034502 <AmiBlitz3.ab3@27019>   CLR.w varcodelen
0003450A <AmiBlitz3.ab3@27021>   MOVE.b #1,optiarray
00034510 <AmiBlitz3.ab3@27023>   MOVE.w pusha2,D1
00034516 <AmiBlitz3.ab3@27024>    JSR writeword
0003451C <AmiBlitz3.ab3@27026>   TST.l lastoffset_org
00034520 <AmiBlitz3.ab3@27027>   BEQ 'dimmore
00034526 <AmiBlitz3.ab3@27028>   MOVEA.l lastoffset_org,A0
00034528 <AmiBlitz3.ab3@27030>   MOVE.l (A0),D0
0003452C <AmiBlitz3.ab3@27031>    BEQ.w JUMP_comerr          ;comma past end of struct
0003452E <AmiBlitz3.ab3@27032>   MOVEA.l D0,A0
00034534 <AmiBlitz3.ab3@27033>   MOVE.l A0,lastoffset_org
0003453A <AmiBlitz3.ab3@27034>   BTST #$1,$7(A0)
0003453E <AmiBlitz3.ab3@27035>    BNE.w JUMP_nocomerr        ;can't use comma on multiple entries
00034542 <AmiBlitz3.ab3@27036>   MOVEA.l $A(A0),A1
00034546 <AmiBlitz3.ab3@27037>   MOVE.l $4(A1),D2
0003454C <AmiBlitz3.ab3@27041>   BTST #$0,$7(A0)
00034550 <AmiBlitz3.ab3@27042>    BNE.w 'nextpnt             ;pointer
00034556 <AmiBlitz3.ab3@27043>   CMP.l #$100,D2
0003455A <AmiBlitz3.ab3@27044>    BCC.l JUMP_nocomerr        ;or on structs
0003455E <AmiBlitz3.ab3@27045>  BRA.w 'docom                                     ; do do type\x= 10,20,30....
00034564 <AmiBlitz3.ab3@27049>         CLR.b optiarray
00034568 <AmiBlitz3.ab3@27050>         CMP.w #"@@",(a5)
0003456C <AmiBlitz3.ab3@27051>         BEQ 'n1
00034570 <AmiBlitz3.ab3@27052>  BRA 'd1
00034576 <AmiBlitz3.ab3@27055>   JSR nextline
00034578 <AmiBlitz3.ab3@27056>         MOVE.l a5,-(a7)
0003457A <AmiBlitz3.ab3@27059>   MOVE.b (a5)+,d0
0003457E <AmiBlitz3.ab3@27060>         CMP.b #$20,d0
00034582 <AmiBlitz3.ab3@27061>         BEQ 'l6
00034584 <AmiBlitz3.ab3@27062>         MOVE.l (a7)+,a5
00034588 <AmiBlitz3.ab3@27063>         CMP.b #";",d0
0003458C <AmiBlitz3.ab3@27064>         BEQ 'n1
00034592 <AmiBlitz3.ab3@27067>         TST.w debugmode
00034596 <AmiBlitz3.ab3@27068>         BEQ 'nextcom
00034598 <AmiBlitz3.ab3@27069>         MOVE.l a0,-(a7)
0003459E <AmiBlitz3.ab3@27070>         MOVE.l pushat,a0
000345A4 <AmiBlitz3.ab3@27071>         CMP.l #0,a0
000345A8 <AmiBlitz3.ab3@27072>         BNE 'o1
000345AC <AmiBlitz3.ab3@27073>  BRA 'skipb
000345B4 <AmiBlitz3.ab3@27076>         ADD.l #1,2(a0)
000345BA <AmiBlitz3.ab3@27079>   CLR.w commode
000345C2 <AmiBlitz3.ab3@27080>         MOVE.b #1,stackcorrect
000345C4 <AmiBlitz3.ab3@27081>         MOVE.l (a7)+,a0
000345CA <AmiBlitz3.ab3@27082>  JMP 'nextcom
000345D0 <AmiBlitz3.ab3@27086>   CMP.l #$100,D2
000345D4 <AmiBlitz3.ab3@27087>    BCS.w 'nextpnt2
000345D6 <AmiBlitz3.ab3@27088>   MOVEQ.l #$00,D2
000345DA <AmiBlitz3.ab3@27091>   BSET #$E,D2
000345DE <AmiBlitz3.ab3@27094>   BSET #$F,D2
000345E2 <AmiBlitz3.ab3@27095>  BRA.w 'nextcom
000345E8 <AmiBlitz3.ab3@27099>    MOVE.l destpointer,a4                   ;
000345F0 <AmiBlitz3.ab3@27100>    MOVE.l #$f22a6400,-4(a4)                ;
000345F6 <AmiBlitz3.ab3@27101>    MOVE.w arrayoffset,d1                   ;
000345FC <AmiBlitz3.ab3@27102>  JMP writeword                             ;
00034602 <AmiBlitz3.ab3@27107>    TST.b fpu
00034606 <AmiBlitz3.ab3@27108>    BEQ 'nofloat
0003460A <AmiBlitz3.ab3@27109>    CMP.b #5,d2
0003460E <AmiBlitz3.ab3@27110>    BNE 'nofloat
00034614 <AmiBlitz3.ab3@27111>    CLR.w fp0var
0003461A <AmiBlitz3.ab3@27112>    LEA regtable,a4
0003461C <AmiBlitz3.ab3@27113>    TST.l (a4)
00034620 <AmiBlitz3.ab3@27114>    BEQ 'noreg
00034624 <AmiBlitz3.ab3@27115>    BTST #15,d2                                             ;regvars
00034628 <AmiBlitz3.ab3@27116>    BNE 'noreg
0003462C <AmiBlitz3.ab3@27117>    CMP.w 0+4(a4),d3
00034630 <AmiBlitz3.ab3@27118>    BNE 'doreg1
00034636 <AmiBlitz3.ab3@27119>    MOVE.l #$f2000380,d1
0003463C <AmiBlitz3.ab3@27120>    MOVE.w regnum,d0
00034640 <AmiBlitz3.ab3@27121>    BNE 'noopt
00034646 <AmiBlitz3.ab3@27127>    MOVE.l destpointer,a4
0003464E <AmiBlitz3.ab3@27128>    CMP.l #$f2001c80,-8(a4)
00034652 <AmiBlitz3.ab3@27129>    BNE 'noopt
0003465A <AmiBlitz3.ab3@27130>    CMP.l #$f2000422,-4(a4)
0003465E <AmiBlitz3.ab3@27131>    BNE 'noopt
00034664 <AmiBlitz3.ab3@27132>    MOVE.l #$f20003a2,d1
0003466E <AmiBlitz3.ab3@27133>    SUB.l #8,destpointer
00034670 <AmiBlitz3.ab3@27136>    ASL.w #7,d0
00034672 <AmiBlitz3.ab3@27137>    OR.w d0,d1
00034678 <AmiBlitz3.ab3@27138>    JSR writelong
0003467A <AmiBlitz3.ab3@27139>  RTS
0003467E <AmiBlitz3.ab3@27142>   CMP.w 8+4(a4),d3
00034682 <AmiBlitz3.ab3@27143>    BNE 'doreg2
00034688 <AmiBlitz3.ab3@27144>    MOVE.l #$f2000300,d1
0003468E <AmiBlitz3.ab3@27145>    MOVE.w regnum,d0
00034690 <AmiBlitz3.ab3@27146>    ASL.w #7,d0
00034692 <AmiBlitz3.ab3@27147>    OR.w d0,d1
00034698 <AmiBlitz3.ab3@27148>    JSR writelong
0003469A <AmiBlitz3.ab3@27149>  RTS
0003469E <AmiBlitz3.ab3@27152>   CMP.w 16+4(a4),d3
000346A2 <AmiBlitz3.ab3@27153>    BNE 'doreg3
000346A8 <AmiBlitz3.ab3@27154>    MOVE.l #$f2000280,d1
000346AE <AmiBlitz3.ab3@27155>    MOVE.w regnum,d0
000346B0 <AmiBlitz3.ab3@27156>    ASL.w #7,d0
000346B2 <AmiBlitz3.ab3@27157>    OR.w d0,d1
000346B8 <AmiBlitz3.ab3@27158>    JSR  writelong
000346BA <AmiBlitz3.ab3@27159>  RTS
000346BE <AmiBlitz3.ab3@27162>   CMP.w 24+4(a4),d3
000346C2 <AmiBlitz3.ab3@27163>    BNE 'doreg4
000346C8 <AmiBlitz3.ab3@27164>    MOVE.l #$f2000200,d1
000346CE <AmiBlitz3.ab3@27165>    MOVE.w regnum,d0
000346D0 <AmiBlitz3.ab3@27166>    ASL.w #7,d0
000346D2 <AmiBlitz3.ab3@27167>    OR.w d0,d1
000346D8 <AmiBlitz3.ab3@27168>    JSR writelong
000346DA <AmiBlitz3.ab3@27169>  RTS
000346DE <AmiBlitz3.ab3@27172>   CMP.w 32+4(a4),d3
000346E2 <AmiBlitz3.ab3@27173>    BNE 'noreg
000346E8 <AmiBlitz3.ab3@27174>    MOVE.l #$f2000180,d1
000346EE <AmiBlitz3.ab3@27175>    MOVE.w regnum,d0
000346F0 <AmiBlitz3.ab3@27176>    ASL.w #7,d0
000346F2 <AmiBlitz3.ab3@27177>    OR.w d0,d1
000346F8 <AmiBlitz3.ab3@27178>    JSR writelong
000346FA <AmiBlitz3.ab3@27179>  RTS
00034700 <AmiBlitz3.ab3@27182>    TST.w regnum
00034704 <AmiBlitz3.ab3@27183>    BNE 'nofp0
0003470A <AmiBlitz3.ab3@27184>    MOVE.l destpointer ,a4
00034712 <AmiBlitz3.ab3@27185>    CMP.l #$f2304400,-6(a4)
00034716 <AmiBlitz3.ab3@27186>    BNE 'do5
0003471C <AmiBlitz3.ab3@27187>    CMP.w #$1990,-2(a4)
00034720 <AmiBlitz3.ab3@27188>    BNE 'do5
00034724 <AmiBlitz3.ab3@27189>    BTST #15,d2                                             ;types ?
00034728 <AmiBlitz3.ab3@27190>    BNE 'do5
0003472E <AmiBlitz3.ab3@27191>   MOVE.l #$2b701990,d1                                     ;var
00034734 <AmiBlitz3.ab3@27192>   TST.w varmode
00034738 <AmiBlitz3.ab3@27193>   BEQ 'glob1
0003473C <AmiBlitz3.ab3@27194>   BCLR #25,d1
00034740 <AmiBlitz3.ab3@27197>   MOVE.l d1,-6(a4)
00034744 <AmiBlitz3.ab3@27198>   MOVE.w d3,-2(a4)
0003474A <AmiBlitz3.ab3@27199>   CLR.w fp0var
00034752 <AmiBlitz3.ab3@27200>   MOVE.w #$ffff,fp0mode
00034754 <AmiBlitz3.ab3@27201>  RTS
0003475C <AmiBlitz3.ab3@27204>    CMP.l #$f22d4400,-6(a4)                                 ;fmove.s (a5),fp0
00034760 <AmiBlitz3.ab3@27205>    BNE 'do3
0003476A <AmiBlitz3.ab3@27206>    CMP.l #newtype_double,currtype
0003476E <AmiBlitz3.ab3@27207>    BEQ 'do4
00034772 <AmiBlitz3.ab3@27210>   MOVE.w #$2b6d,d1
00034778 <AmiBlitz3.ab3@27211>    TST.w varmode
0003477C <AmiBlitz3.ab3@27212>    BEQ 'g2
00034780 <AmiBlitz3.ab3@27213>     BCLR #9,d1
00034784 <AmiBlitz3.ab3@27216>     CMP.w #$2b6d,d1
00034788 <AmiBlitz3.ab3@27217>     BNE 'd1a
0003478C <AmiBlitz3.ab3@27218>     CMP.w -2(a4),d3
00034790 <AmiBlitz3.ab3@27219>     BNE 'd1a
00034796 <AmiBlitz3.ab3@27220>     SUBQ.l #6,destpointer
0003479A <AmiBlitz3.ab3@27221>  BRA 'd12
0003479E <AmiBlitz3.ab3@27224>     MOVE.w d1,-6(a4)                                       ;fmove.s to move.l mem,mem
000347A4 <AmiBlitz3.ab3@27225>     MOVE.w -2(a4),-4(a4)
000347A8 <AmiBlitz3.ab3@27226>     MOVE.w d3,-2(a4)
000347AE <AmiBlitz3.ab3@27229>   CLR.w fp0var
000347B6 <AmiBlitz3.ab3@27230>     MOVE.w #$ffff,fp0mode
000347B8 <AmiBlitz3.ab3@27231>  RTS
000347C0 <AmiBlitz3.ab3@27234>   CMP.l #$f22c4400,-6(a4)                                  ;fmove.s (a4)
000347C4 <AmiBlitz3.ab3@27235>    BNE 'do4
000347C8 <AmiBlitz3.ab3@27236>    MOVE.w #$2b6c,d1
000347CE <AmiBlitz3.ab3@27237>       TST.w varmode
000347D2 <AmiBlitz3.ab3@27238>    BEQ 'g3a
000347D6 <AmiBlitz3.ab3@27239>    BCLR #9,d1
000347DA <AmiBlitz3.ab3@27242>   MOVE.w d1,-6(a4)
000347E0 <AmiBlitz3.ab3@27243>     MOVE.w -2(a4),-4(a4)
000347E4 <AmiBlitz3.ab3@27244>     MOVE.w d3,-2(a4)
000347EA <AmiBlitz3.ab3@27245>     CLR.w fp0var
000347F2 <AmiBlitz3.ab3@27246>     MOVE.w #$ffff,fp0mode
000347F4 <AmiBlitz3.ab3@27247>  RTS
000347FA <AmiBlitz3.ab3@27250>   MOVE.w d3,fp0var
00034804 <AmiBlitz3.ab3@27251>    MOVE.w varmode,fp0mode
00034806 <AmiBlitz3.ab3@27252>    ADDQ.l #6,a4
0003480C <AmiBlitz3.ab3@27253>    MOVE.l a4,fp0addr
00034816 <AmiBlitz3.ab3@27254>    MOVE.l firstiff,fp0iff
0003481A <AmiBlitz3.ab3@27257>   MOVEM.l d0/d4,-(a7)
0003481C <AmiBlitz3.ab3@27258>    MOVEQ #0,d0
00034822 <AmiBlitz3.ab3@27259>     MOVE.w regnum,d0
00034824 <AmiBlitz3.ab3@27260>    ASL.w #7,d0                                             ;fpu store var
00034828 <AmiBlitz3.ab3@27261>   BTST #15,d2
0003482C <AmiBlitz3.ab3@27262>    BEQ 'var
0003482E <AmiBlitz3.ab3@27263>    MOVE.w d1,d4
00034832 <AmiBlitz3.ab3@27264>    CMP.w #$24c0,d4
00034836 <AmiBlitz3.ab3@27265>    BNE 'nopl
0003483C <AmiBlitz3.ab3@27266>    MOVE.l #$f21a6400,d1
0003483E <AmiBlitz3.ab3@27267>    MOVEQ #0,d3
00034842 <AmiBlitz3.ab3@27268>  BRA 'glob
00034848 <AmiBlitz3.ab3@27272>   MOVE.l #$f2126400,d1
0003484A <AmiBlitz3.ab3@27273>    TST.w d3                                                ;offset =0
0003484E <AmiBlitz3.ab3@27274>    BNE 'offset
00034854 <AmiBlitz3.ab3@27275>    MOVE.l #$f2126400,d1
00034856 <AmiBlitz3.ab3@27283>    MOVEQ #0,d3
0003485A <AmiBlitz3.ab3@27284>  BRA 'glob
00034860 <AmiBlitz3.ab3@27287>   MOVE.l #$f22d6400,d1                                     ;var
00034866 <AmiBlitz3.ab3@27288>   TST.w varmode
0003486A <AmiBlitz3.ab3@27289>   BEQ 'glob
0003486E <AmiBlitz3.ab3@27290>   BCLR #16,d1
00034870 <AmiBlitz3.ab3@27291>  'glob OR.l d0,d1
0003487A <AmiBlitz3.ab3@27294>   CMP.l #newtype_double,currtype
0003487E <AmiBlitz3.ab3@27295>   BNE 'dbl1
00034884 <AmiBlitz3.ab3@27296>   OR.l #$00001000,d1
0003488A <AmiBlitz3.ab3@27299>   JSR writelong
00034890 <AmiBlitz3.ab3@27300>   CLR.l currtype
00034894 <AmiBlitz3.ab3@27301>   MOVEM.l (a7)+,d0/d4
00034896 <AmiBlitz3.ab3@27302>   MOVE.l d3,d1
0003489A <AmiBlitz3.ab3@27303>   BEQ 'nooffs
000348A0 <AmiBlitz3.ab3@27304>  JMP writeword
000348A2 <AmiBlitz3.ab3@27307>  RTS
000348A8 <AmiBlitz3.ab3@27321>     TST.b fast                                             ;write lea->xx(a2)
000348AC <AmiBlitz3.ab3@27322>    BEQ 'la10
000348B2 <AmiBlitz3.ab3@27326>    TST.b quickadd
000348B8 <AmiBlitz3.ab3@27328>      CLR.b quickadd
000348BC <AmiBlitz3.ab3@27329>    CMP.w #$2480,d1
000348C0 <AmiBlitz3.ab3@27330>    BNE 'la10
000348C6 <AmiBlitz3.ab3@27331>    TST.b optiarray
000348CA <AmiBlitz3.ab3@27332>    BNE 'la10
000348D0 <AmiBlitz3.ab3@27333>    MOVE.l destpointer,a4
000348D6 <AmiBlitz3.ab3@27334>    CMP.w #$45ea,-4(a4)
000348DA <AmiBlitz3.ab3@27335>    BNE 'la10
000348E2 <AmiBlitz3.ab3@27336>    CMP.w #8,pushclen
000348E6 <AmiBlitz3.ab3@27337>    BEQ 'la100
000348EE <AmiBlitz3.ab3@27338>    CMP.w #6,pushclen
000348F2 <AmiBlitz3.ab3@27339>    BNE 'la10
000348F6 <AmiBlitz3.ab3@27340>    CMP.b #3,d2
000348FA <AmiBlitz3.ab3@27341>    BCS 'la110
00034900 <AmiBlitz3.ab3@27343>    MOVE.w #$2540,-2(a4)
00034906 <AmiBlitz3.ab3@27344>    MOVE.w arrayoffset,d1
0003490C <AmiBlitz3.ab3@27345>  JMP writeword
00034912 <AmiBlitz3.ab3@27348>    CLR.b quickadd
00034914 <AmiBlitz3.ab3@27349>  RTS
00034918 <AmiBlitz3.ab3@27352>    CMP.b #2,d2
0003491C <AmiBlitz3.ab3@27353>    BNE 'la120
00034922 <AmiBlitz3.ab3@27354>     MOVE.w #$3540,-2(a4)
00034928 <AmiBlitz3.ab3@27355>    MOVE.w arrayoffset,d1
0003492E <AmiBlitz3.ab3@27356>  JMP writeword
00034932 <AmiBlitz3.ab3@27359>   CMP.b #1,d2
00034936 <AmiBlitz3.ab3@27360>    BNE.s 'la10
0003493C <AmiBlitz3.ab3@27361>     MOVE.w #$1540,-2(a4)
00034942 <AmiBlitz3.ab3@27362>    MOVE.w arrayoffset,d1
00034948 <AmiBlitz3.ab3@27363>  JMP writeword
0003494C <AmiBlitz3.ab3@27366>    CMP.b #3,d2
00034950 <AmiBlitz3.ab3@27367>    BCS 'la11
00034956 <AmiBlitz3.ab3@27368>    MOVE.w #$2540,-4(a4)
00034958 <AmiBlitz3.ab3@27369>  RTS
0003495C <AmiBlitz3.ab3@27372>    CMP.b #2,d2
00034960 <AmiBlitz3.ab3@27373>    BNE 'la12
00034966 <AmiBlitz3.ab3@27374>     MOVE.w #$3540,-4(a4)
00034968 <AmiBlitz3.ab3@27375>  RTS
0003496C <AmiBlitz3.ab3@27378>    CMP.b #1,d2
00034970 <AmiBlitz3.ab3@27379>    BNE.s 'la10
00034976 <AmiBlitz3.ab3@27380>     MOVE.w #$1540,-4(a4)
00034978 <AmiBlitz3.ab3@27381>  RTS
0003497E <AmiBlitz3.ab3@27384>   CLR.b optiarray
00034982 <AmiBlitz3.ab3@27386>    CMP.b #$1,D2
00034986 <AmiBlitz3.ab3@27387>    BEQ.w 'byte
0003498A <AmiBlitz3.ab3@27388>    BSR.w varalign
0003498E <AmiBlitz3.ab3@27389>    CMP.b #$3,D2
00034992 <AmiBlitz3.ab3@27390>    BCC.w 'writevarlong
00034998 <AmiBlitz3.ab3@27392>    TST.b fast                                              ;optiimmi
0003499C <AmiBlitz3.ab3@27393>    BEQ 'l10bc
000349A2 <AmiBlitz3.ab3@27398>    MOVE.l destpointer,a0
000349A8 <AmiBlitz3.ab3@27399>    SUB.l imm_addr,a0
000349AE <AmiBlitz3.ab3@27400>    CMP.l #4,a0
000349B2 <AmiBlitz3.ab3@27401>    BNE 'l10c
000349B8 <AmiBlitz3.ab3@27402>    CLR.l imm_addr
000349BE <AmiBlitz3.ab3@27403>    MOVE.l destpointer,a4
000349C2 <AmiBlitz3.ab3@27404>    OR.w #$107c,d1
000349C6 <AmiBlitz3.ab3@27405>    MOVE.w d1,-4(a4)
000349C8 <AmiBlitz3.ab3@27406>     MOVE.w D3,D1
000349CE <AmiBlitz3.ab3@27407>  JMP writeword
000349D4 <AmiBlitz3.ab3@27410>   MOVE.l destpointer,a0
000349DA <AmiBlitz3.ab3@27411>   SUB.l load_var_addr,a0
000349E0 <AmiBlitz3.ab3@27412>   CMP.l #4,a0
000349E4 <AmiBlitz3.ab3@27413>   BNE 'l10bc
000349EA <AmiBlitz3.ab3@27414>   CMP.w #$302d,-4(a4)                                      ;check 68k opcode
000349EE <AmiBlitz3.ab3@27415>   BNE 'l10bc
000349F4 <AmiBlitz3.ab3@27417>   CLR.l load_var_addr
000349FA <AmiBlitz3.ab3@27418>   MOVE.l destpointer,a4
000349FE <AmiBlitz3.ab3@27419>   OR.w #$102d,d1
00034A02 <AmiBlitz3.ab3@27420>   MOVE.w d1,-4(a4)
00034A04 <AmiBlitz3.ab3@27421>   MOVE.w d3,d1
00034A0A <AmiBlitz3.ab3@27422>  JMP writeword
00034A0E <AmiBlitz3.ab3@27426>   ORI.w #$1000,D1                                          ;word
00034A12 <AmiBlitz3.ab3@27427>  BRA.w 'writestorevar
00034A18 <AmiBlitz3.ab3@27432>    TST.b fast                                              ;optiimmi
00034A1C <AmiBlitz3.ab3@27433>    BEQ 'l10bb
00034A22 <AmiBlitz3.ab3@27438>    MOVE.l destpointer,a0
00034A28 <AmiBlitz3.ab3@27439>    SUB.l imm_addr,a0
00034A2E <AmiBlitz3.ab3@27440>    CMP.l #4,a0
00034A32 <AmiBlitz3.ab3@27441>    BNE 'l10d
00034A38 <AmiBlitz3.ab3@27442>    CLR.l imm_addr
00034A3E <AmiBlitz3.ab3@27443>    MOVE.l destpointer,a4
00034A42 <AmiBlitz3.ab3@27444>    OR.w #$7c,d1
00034A46 <AmiBlitz3.ab3@27445>    EORI #$3000,d1
00034A4A <AmiBlitz3.ab3@27446>    MOVE.w d1,-4(a4)
00034A4C <AmiBlitz3.ab3@27447>       MOVE.w D3,D1
00034A52 <AmiBlitz3.ab3@27448>  JMP writeword
00034A58 <AmiBlitz3.ab3@27451>   MOVE.l destpointer,a0
00034A5E <AmiBlitz3.ab3@27452>   SUB.l load_var_addr,a0
00034A64 <AmiBlitz3.ab3@27453>   CMP.l #4,a0
00034A68 <AmiBlitz3.ab3@27454>   BNE 'l10bb
00034A6E <AmiBlitz3.ab3@27455>   CLR.l load_var_addr
00034A74 <AmiBlitz3.ab3@27456>   MOVE.l destpointer,a4
00034A7A <AmiBlitz3.ab3@27457>    CMP.w #$1b6d,-4(a4)
00034A7E <AmiBlitz3.ab3@27458>    BNE 'l10bb
00034A82 <AmiBlitz3.ab3@27459>    OR.w #$2d,d1
00034A86 <AmiBlitz3.ab3@27460>    EORI #$3000,d1
00034A8A <AmiBlitz3.ab3@27461>    MOVE.w d1,-4(a4)
00034A8C <AmiBlitz3.ab3@27462>   MOVE.w d3,d1
00034A92 <AmiBlitz3.ab3@27463>  JMP writeword
00034A98 <AmiBlitz3.ab3@27467>   ADDQ.w #1,pcodd                                          ;byte
00034A9C <AmiBlitz3.ab3@27468>   EORI.w #$3000,D1
00034AA2 <AmiBlitz3.ab3@27471>   JSR writeword
00034AA6 <AmiBlitz3.ab3@27472>   BTST #$7,D1
00034AAA <AmiBlitz3.ab3@27473>    BNE 'done
00034AAC <AmiBlitz3.ab3@27474>   MOVE.w D3,D1
00034AB2 <AmiBlitz3.ab3@27475>  JMP writeword
00034AB8 <AmiBlitz3.ab3@27478>    TST.b fast                                              ;optiimmi
00034ABC <AmiBlitz3.ab3@27479>    BEQ 'l10ba
00034AC2 <AmiBlitz3.ab3@27483>    MOVE.l destpointer,a0
00034AC8 <AmiBlitz3.ab3@27484>    SUB.l imm_addr,a0
00034ACE <AmiBlitz3.ab3@27485>    CMP.l #6,a0
00034AD2 <AmiBlitz3.ab3@27486>    BNE 'l10e
00034AD8 <AmiBlitz3.ab3@27487>    CLR.l imm_addr
00034ADE <AmiBlitz3.ab3@27488>    MOVE.l destpointer,a4
00034AE2 <AmiBlitz3.ab3@27489>    OR.w #$7c,d1
00034AE6 <AmiBlitz3.ab3@27490>    MOVE.w d1,-6(a4)
00034AE8 <AmiBlitz3.ab3@27491>     MOVE.w D3,D1
00034AEE <AmiBlitz3.ab3@27492>  JMP writeword
00034AF4 <AmiBlitz3.ab3@27495>   MOVE.l destpointer,a0
00034AFA <AmiBlitz3.ab3@27496>   SUB.l load_var_addr,a0
00034B00 <AmiBlitz3.ab3@27497>   CMP.l #4,a0
00034B04 <AmiBlitz3.ab3@27498>   BNE 'l10ba
00034B0A <AmiBlitz3.ab3@27499>   CLR.l load_var_addr
00034B10 <AmiBlitz3.ab3@27500>   MOVE.l destpointer,a4
00034B16 <AmiBlitz3.ab3@27501>   CMP.w #$245f,-2(a4)
00034B1A <AmiBlitz3.ab3@27502>   BEQ 'l10ba
00034B1E <AmiBlitz3.ab3@27503>   OR.w #$28,d1
00034B22 <AmiBlitz3.ab3@27504>   OR.w d1,-4(a4)
00034B28 <AmiBlitz3.ab3@27505>   CMP.w #$2b6d,-4(a4)
00034B2C <AmiBlitz3.ab3@27506>   BNE 'd1aa
00034B30 <AmiBlitz3.ab3@27507>   CMP.w -2(a4),d3
00034B34 <AmiBlitz3.ab3@27508>   BNE 'd1aa
00034B3A <AmiBlitz3.ab3@27509>   SUBQ.l #4,destpointer
00034B3C <AmiBlitz3.ab3@27510>  RTS
00034B3E <AmiBlitz3.ab3@27513>   MOVE.w d3,d1
00034B44 <AmiBlitz3.ab3@27514>  JMP writeword
00034B4A <AmiBlitz3.ab3@27518>   JSR writeword
00034B4E <AmiBlitz3.ab3@27519>   BTST #$7,D1
00034B52 <AmiBlitz3.ab3@27520>    BNE.b 'done
00034B54 <AmiBlitz3.ab3@27521>   MOVE.w D3,D1
00034B5A <AmiBlitz3.ab3@27522>  JMP writeword
00034B5C <AmiBlitz3.ab3@27525> RTS
00034B5E <AmiBlitz3.ab3@27529>   MOVE.w D1,-(A7)
00034B62 <AmiBlitz3.ab3@27530>   MOVE.w pcodd(PC),D1
00034B64 <AmiBlitz3.ab3@27531>   LSR.w #1,D1
00034B68 <AmiBlitz3.ab3@27532>    BCC.b 'done
00034B6E <AmiBlitz3.ab3@27533>   CLR.w pcodd
00034B74 <AmiBlitz3.ab3@27534>   MOVE.w add1a2,D1
00034B7A <AmiBlitz3.ab3@27535>    JSR writeword
00034B7C <AmiBlitz3.ab3@27538>   MOVE.w (A7)+,D1
00034B7E <AmiBlitz3.ab3@27539> RTS
00034B80 <AmiBlitz3.ab3@27543> add1a2:     Dc.b $52,$4A                                   ;ADDQ.W  #1,A2
00034B82 <AmiBlitz3.ab3@27546> pcodd:     Ds.w 1                                          ;add 1 to this for bytes
00034B84 <AmiBlitz3.ab3@27547> listadd:   Ds.w 1                                          ;set to 8 if it's a list
00034B86 <AmiBlitz3.ab3@27548> listsize:  Ds.w 1
00034B8C <AmiBlitz3.ab3@27554>   ADDQ.w #1,regnum               ;get things into d1
00034B94 <AmiBlitz3.ab3@27556>   MOVE.b #1,nowdeclare
00034B9A <AmiBlitz3.ab3@27557>   CLR.b dimkeep
00034BA2 <AmiBlitz3.ab3@27558>    CMP.l #"KEEP",-1(a5)
00034BA6 <AmiBlitz3.ab3@27559>   BNE 'nokeep
00034BAC <AmiBlitz3.ab3@27560>   CMP.b #" ",3(a5)
00034BB0 <AmiBlitz3.ab3@27561>   BNE 'nokeep
00034BB2 <AmiBlitz3.ab3@27562>   ADDQ.l #3,a5
00034BB6 <AmiBlitz3.ab3@27565>     CMP.b #" ",(a5)
00034BBA <AmiBlitz3.ab3@27566>     BNE '1
00034BBC <AmiBlitz3.ab3@27567>    ADDQ #1,a5
00034BC0 <AmiBlitz3.ab3@27568>  BRA '2
00034BC6 <AmiBlitz3.ab3@27571>   MOVE.l a5,lastsourcepos
00034BCE <AmiBlitz3.ab3@27572>   MOVE.b #1,dimkeep
00034BD2 <AmiBlitz3.ab3@27581>   MOVE.w #$FF9A,D1           ; is #65434,
00034BD8 <AmiBlitz3.ab3@27582>   JSR uselib                 ;arrays lib!
00034BDE <AmiBlitz3.ab3@27585>   CLR.w listadd
00034BE2 <AmiBlitz3.ab3@27586>   CMP.w #-$7F4D,D0           ; was #$8000+tnum,d0
00034BE6 <AmiBlitz3.ab3@27587>    BNE.w 'notlist
00034BEE <AmiBlitz3.ab3@27588>   MOVE.w #$0008,listadd      ;it's a list
00034BF2 <AmiBlitz3.ab3@27589>   MOVE.w #$FFFA,D1           ; is #65530
00034BF8 <AmiBlitz3.ab3@27590>    JSR uselib                ;use memlib
00034BFE <AmiBlitz3.ab3@27591>    JSR get1bytemain
00034C04 <AmiBlitz3.ab3@27594>   CLR.w nonew
00034C0A <AmiBlitz3.ab3@27595>    JSR getparameter
00034C10 <AmiBlitz3.ab3@27597>   JSR checkdoubledeclare
00034C18 <AmiBlitz3.ab3@27599>   BTST #$1,flagmask+1
00034C1C <AmiBlitz3.ab3@27600>    BEQ.w JUMP_syntaxerr
00034C22 <AmiBlitz3.ab3@27601>    JSR fetchvars
00034C28 <AmiBlitz3.ab3@27602>   MOVE.w notshared,D1      ; added,
00034C2C <AmiBlitz3.ab3@27603>    BNE.w 'added
00034C34 <AmiBlitz3.ab3@27607>   MOVE.w $8(A3),temp1
00034C3A <AmiBlitz3.ab3@27608>   MOVE.w proceduremode,D2
00034C3E <AmiBlitz3.ab3@27609>    BNE.w 'reloc
00034C44 <AmiBlitz3.ab3@27611>   MOVE.w globalvarpointer,-(A7)
00034C4C <AmiBlitz3.ab3@27612>   MOVE.w $4(A3),globalvarpointer
00034C52 <AmiBlitz3.ab3@27613>   ADDQ.w #4,globalvarpointer
00034C56 <AmiBlitz3.ab3@27614>    BSR.w write_dim_code
00034C5C <AmiBlitz3.ab3@27615>   MOVE.w (A7)+,globalvarpointer
00034C60 <AmiBlitz3.ab3@27616>  BRA.w 'next
00034C66 <AmiBlitz3.ab3@27631>   MOVE.w globalvarpointer,-(A7)
00034C6C <AmiBlitz3.ab3@27632>             MOVE.w proceduremode,-(a7)
00034C72 <AmiBlitz3.ab3@27633>             CLR.w proceduremode
00034C7A <AmiBlitz3.ab3@27634>   MOVE.w $4(A3),globalvarpointer
00034C80 <AmiBlitz3.ab3@27635>   ADDQ.w #4,globalvarpointer
00034C84 <AmiBlitz3.ab3@27636>    BSR.w write_dim_code
00034C8A <AmiBlitz3.ab3@27637>    MOVE.w (a7)+,proceduremode
00034C90 <AmiBlitz3.ab3@27638>   MOVE.w (A7)+,globalvarpointer
00034C94 <AmiBlitz3.ab3@27640>  BRA.w 'next
00034C9C <AmiBlitz3.ab3@27645>   MOVE.w #$FFFF,temp1                ; was -1  ;no care on # dims
00034CA0 <AmiBlitz3.ab3@27646>   MOVE.w listadd(PC),D1
00034CA4 <AmiBlitz3.ab3@27647>    BEQ.w 'isok
00034CAC <AmiBlitz3.ab3@27648>   MOVE.w #$4000,temp1                ;yes, we do care - must be 1
00034CB2 <AmiBlitz3.ab3@27650>   BSET #$0,$6(A3)                    ;set to list type of array
00034CB8 <AmiBlitz3.ab3@27654>         TST.w proceduremode
00034CBC <AmiBlitz3.ab3@27655>        BNE 'l1
00034CC2 <AmiBlitz3.ab3@27656>        MOVE.w locvaroff,-(a7)
00034CC6 <AmiBlitz3.ab3@27660>   BSR.w write_dim_code
00034CCC <AmiBlitz3.ab3@27662>         TST.w proceduremode
00034CD0 <AmiBlitz3.ab3@27663>         BNE 'next
00034CD6 <AmiBlitz3.ab3@27664>        MOVE.w (A7)+,locvaroff
00034CDC <AmiBlitz3.ab3@27668>   JSR get1bytemain
00034CE0 <AmiBlitz3.ab3@27669>   CMP.w #$2C,D0                ; ","
00034CE4 <AmiBlitz3.ab3@27670>    BNE.w 'done
00034CEA <AmiBlitz3.ab3@27671>    JSR get1bytemain
00034CEE <AmiBlitz3.ab3@27672>  BRA.w dodim2
00034CF0 <AmiBlitz3.ab3@27675> RTS
00034CF6 <AmiBlitz3.ab3@27678> JUMP_syntaxerr JMP syntaxerr
00034CFC <AmiBlitz3.ab3@27679> JUMP_redimerr JMP redimerr
00034D04 <AmiBlitz3.ab3@27683>   MOVE.w #$FFFF,nonew                                      ;#-1,nonew org source
00034D0A <AmiBlitz3.ab3@27684>   MOVE.w beginarr,D1
00034D10 <AmiBlitz3.ab3@27685>    JSR writeword
00034D12 <AmiBlitz3.ab3@27686>   MOVEQ.l #$00,D1
00034D18 <AmiBlitz3.ab3@27687>    JSR writeword
00034D1A <AmiBlitz3.ab3@27688>   MOVEQ.l #$04,D1
00034D22 <AmiBlitz3.ab3@27689>   BTST #$0,flagmask+1
00034D26 <AmiBlitz3.ab3@27690>    BNE.w 'pointer
00034D2A <AmiBlitz3.ab3@27691>   MOVE.w $8(A2),D1
00034D2E <AmiBlitz3.ab3@27694>   ADD.w listadd(PC),D1                                     ;size of one element.
00034D34 <AmiBlitz3.ab3@27695>   MOVE.w D1,listsize
00034D3A <AmiBlitz3.ab3@27696>    JSR writeword
00034D40 <AmiBlitz3.ab3@27697>   CLR.w temp2                                              ;# dim's got
00034D42 <AmiBlitz3.ab3@27698>   MOVE.l A3,-(A7)
00034D48 <AmiBlitz3.ab3@27701>   ADDQ.w #1,temp2
00034D4A <AmiBlitz3.ab3@27702>   MOVEQ.l #$03,D2                                          ;get word
00034D50 <AmiBlitz3.ab3@27703>   MOVE.w notshared,-(a7)
00034D56 <AmiBlitz3.ab3@27704>    JSR eval
00034D5C <AmiBlitz3.ab3@27705>   MOVE.w (a7)+,notshared
00034D62 <AmiBlitz3.ab3@27706>   TST.b debugmode
00034D66 <AmiBlitz3.ab3@27707>    BEQ.w 'norerr0
00034D6A <AmiBlitz3.ab3@27708>   MOVE.w #$C30F,D1
00034D6E <AmiBlitz3.ab3@27714>       MOVE.w #$5281,d1
00034D74 <AmiBlitz3.ab3@27715>       JSR writeword
00034D7A <AmiBlitz3.ab3@27716>       MOVE.l #$4c010800,d1                                 ;dim >65536 fix
00034D80 <AmiBlitz3.ab3@27717>       JSR writelong
00034D86 <AmiBlitz3.ab3@27718>   MOVE.w proceduremode,D2
00034D8A <AmiBlitz3.ab3@27719>    BEQ.w 'global
00034D90 <AmiBlitz3.ab3@27720>   SUBQ.w #4,locvaroff
00034D9A <AmiBlitz3.ab3@27721>   MOVE.w locvaroff,putarr+2
00034D9E <AmiBlitz3.ab3@27722>  BRA.w 'doit
00034DA8 <AmiBlitz3.ab3@27725>   MOVE.w globalvarpointer,putarr+2
00034DAE <AmiBlitz3.ab3@27726>   ADDQ.w #4,globalvarpointer
00034DB4 <AmiBlitz3.ab3@27729>   TST.b dimkeep
00034DB8 <AmiBlitz3.ab3@27730>            BEQ 'doit_l1
00034DBA <AmiBlitz3.ab3@27731>       MOVEQ #0,d1
00034DC0 <AmiBlitz3.ab3@27732>       MOVE.w putarr+2,d1
00034DC6 <AmiBlitz3.ab3@27733>       OR.l  #$222d0000,d1
00034DCC <AmiBlitz3.ab3@27734>       MOVE.w proceduremode,D2
00034DD0 <AmiBlitz3.ab3@27735>       BEQ 'doit_l2
00034DD6 <AmiBlitz3.ab3@27736>       TST.w notshared
00034DDA <AmiBlitz3.ab3@27737>       BEQ 'doit_l2
00034DE0 <AmiBlitz3.ab3@27738>       SUB.l #$00010000,d1
00034DE6 <AmiBlitz3.ab3@27741>   JSR writelong
00034DEC <AmiBlitz3.ab3@27744>   MOVE.l putarr,D1
00034DF2 <AmiBlitz3.ab3@27745>       TST.w notshared
00034DF6 <AmiBlitz3.ab3@27746>       BNE 'doit_l1a
00034DFC <AmiBlitz3.ab3@27747>       JSR writelong
00034E00 <AmiBlitz3.ab3@27748>  BRA 'doit_l4
00034E06 <AmiBlitz3.ab3@27751>   JSR pokela5d
00034E0A <AmiBlitz3.ab3@27754>   CMP.w #$2C,D0
00034E0E <AmiBlitz3.ab3@27755>    BEQ.w 'loop
00034E12 <AmiBlitz3.ab3@27756>   CMP.w #$29,D0
00034E16 <AmiBlitz3.ab3@27757>    BNE.w JUMP_syntaxerr
00034E18 <AmiBlitz3.ab3@27758>   MOVEA.l (A7)+,A3
00034E1E <AmiBlitz3.ab3@27759>   MOVE.w temp1,D1
00034E22 <AmiBlitz3.ab3@27760>    BMI.w 'nocare
00034E26 <AmiBlitz3.ab3@27764>   BTST #$E,D1
00034E2A <AmiBlitz3.ab3@27765>    BEQ.w 'notl
00034E32 <AmiBlitz3.ab3@27766>   CMPI.w #$1,temp2
00034E36 <AmiBlitz3.ab3@27767>    BNE.w JUMP_redimerr
00034E3A <AmiBlitz3.ab3@27768>  BRA.w 'nocare
00034E40 <AmiBlitz3.ab3@27771>   CMP.w temp2,D1
00034E44 <AmiBlitz3.ab3@27772>    BNE.w JUMP_redimerr                                     ;range too long
00034E4A <AmiBlitz3.ab3@27775>   LEA globalvarpointer,A0
00034E50 <AmiBlitz3.ab3@27776>   MOVE.w proceduremode,D1
00034E54 <AmiBlitz3.ab3@27777>   BEQ.w 'gskip
00034E5A <AmiBlitz3.ab3@27778>   LEA locvaroff,A0
00034E60 <AmiBlitz3.ab3@27781>   MOVE.W  extraword,(A0)
00034E64 <AmiBlitz3.ab3@27782>   BRA.W   'care
00034E6C <AmiBlitz3.ab3@27785>   MOVE.w temp2,$8(A3)                                      ;set # dim's
00034E72 <AmiBlitz3.ab3@27788>   LEA doarr,A0
00034E78 <AmiBlitz3.ab3@27789>   MOVE.w $4(A3),$2(A0)
00034E80 <AmiBlitz3.ab3@27790>   MOVE.w putarr+2,$6(A0)
00034E82 <AmiBlitz3.ab3@27791>   MOVE.l (A0)+,D1
00034E88 <AmiBlitz3.ab3@27792>    JSR writelong
00034E8A <AmiBlitz3.ab3@27793>   MOVE.l (A0),D1
00034E90 <AmiBlitz3.ab3@27794>    JSR writelong
00034E96 <AmiBlitz3.ab3@27795>    TST.b dimkeep
00034E9A <AmiBlitz3.ab3@27796>   BNE 'care_l3
00034E9E <AmiBlitz3.ab3@27799>   MOVE.w #$C400,D1
00034EA2 <AmiBlitz3.ab3@27800>  BRA 'care_l2
00034EA6 <AmiBlitz3.ab3@27803>   MOVE.w #$C405,d1
00034EAC <AmiBlitz3.ab3@27806>   MOVE.w proceduremode,D2
00034EB0 <AmiBlitz3.ab3@27807>    BEQ.w 'isg
00034EB6 <AmiBlitz3.ab3@27808>    TST.w notshared
00034EBA <AmiBlitz3.ab3@27809>    BEQ 'isg
00034EBC <AmiBlitz3.ab3@27810>   ADDQ.w #1,D1
00034EC0 <AmiBlitz3.ab3@27813>   MOVE.w listadd(PC),D2
00034EC4 <AmiBlitz3.ab3@27814>    BEQ.w 'isrg
00034EC6 <AmiBlitz3.ab3@27815>   MOVE.w D1,-(A7)
00034ECA <AmiBlitz3.ab3@27816>   MOVE.w setles(PC),D1
00034ED0 <AmiBlitz3.ab3@27817>    JSR writeword
00034ED4 <AmiBlitz3.ab3@27818>   MOVE.w listsize(PC),D1
00034EDA <AmiBlitz3.ab3@27819>    JSR writeword
00034EDC <AmiBlitz3.ab3@27820>   MOVE.w (A7)+,D1
00034EDE <AmiBlitz3.ab3@27821>   ADDQ.w #3,D1
00034EE2 <AmiBlitz3.ab3@27824> BRA.w Atokejsr
00034EE6 <AmiBlitz3.ab3@27827> setles:   Dc.b $38,$3C,$00,$00                             ;MOVE.W  #$0000,D4
00034EEC <AmiBlitz3.ab3@27836>     MOVE.l #$f23c4400,d1
00034EF2 <AmiBlitz3.ab3@27838>   MOVE.w regnum,d0
00034EF4 <AmiBlitz3.ab3@27839>   ASL.w #7,d0
00034EF6 <AmiBlitz3.ab3@27840>   OR.w d0,d1
00034EFC <AmiBlitz3.ab3@27841>   JSR writelong
00034F02 <AmiBlitz3.ab3@27847>     MOVE.l #$40490fd9,d1
00034F08 <AmiBlitz3.ab3@27849>   JSR writelong
00034F0E <AmiBlitz3.ab3@27850> JMP get1bytemain
00034F12 <AmiBlitz3.ab3@27857> vbr:                Ds.l 1
00034F14 <AmiBlitz3.ab3@27858> cfetchmode:         Ds.w 1                               ;1=fetching a constant
00034F1A <AmiBlitz3.ab3@27860> constlibs           Dc.w $FDA7,$FCDF,$FD43               ;64935,64735,64835  org source
00034F1E <AmiBlitz3.ab3@27864> constpcat:          Ds.l 1
00034F22 <AmiBlitz3.ab3@27865> constlibat:         Ds.l 1
00034F26 <AmiBlitz3.ab3@27866> constmaxpc:         Dc.l $400
00034F2A <AmiBlitz3.ab3@27868> stacksize:          Dc.l #DEFAULT_STACKSIZE              ;stackfuck org source
00034F2E <AmiBlitz3.ab3@27869> currentlabeladdr:   Dc.l labelbase                       ;lastrescon org source
00034F32 <AmiBlitz3.ab3@27870> currentmacroaddr:   Dc.l macrobase                       ;lastresmac org source
00034F36 <AmiBlitz3.ab3@27871> lastrestype:        Dc.l newtype_string
00034F38 <AmiBlitz3.ab3@27872> rescnt:             Ds.w 1                               ;# resident
00034F3A <AmiBlitz3.ab3@27873> state_of_residents: Ds.w 1                               ;reschg org source ;flag for if res's have changed
00034F3E <AmiBlitz3.ab3@27874> resat:              Dc.l residents_table                 ;??looks like not used anymore??
00034F40 <AmiBlitz3.ab3@27875> linedone:           Ds.w 1
00034F56 <AmiBlitz3.ab3@27876> directbuffer:       Ds.w 11                              ;dirpcat  dc.w 0 org source
00034F5A <AmiBlitz3.ab3@27885>   Dc.l 0                                        ; bytetobyte
00034F5E <AmiBlitz3.ab3@27886>   Dc.l convert_byte_to_word                     ; bytetoword
00034F62 <AmiBlitz3.ab3@27887>   Dc.l convert_byte_to_long                     ; bytetolong
00034F66 <AmiBlitz3.ab3@27888>   Dc.l convert_byte_to_quick                    ; bytetoquick
00034F6A <AmiBlitz3.ab3@27889>   Dc.l convert_byte_to_float                    ; bytetofloat
00034F6E <AmiBlitz3.ab3@27890>   Dc.l convert_byte_to_long                     ; bytetolong
00034F72 <AmiBlitz3.ab3@27891>   Dc.l error_convert_types                      ; noconerr
00034F76 <AmiBlitz3.ab3@27894>   Dc.l convert_word_to_byte                     ; wordtobyte
00034F7A <AmiBlitz3.ab3@27895>   Dc.l 0                                        ; wordtoword
00034F7E <AmiBlitz3.ab3@27896>   Dc.l convert_word_to_long                     ; wordtolong
00034F82 <AmiBlitz3.ab3@27897>   Dc.l convert_word_to_quick                    ; wordtoquick
00034F86 <AmiBlitz3.ab3@27898>   Dc.l convert_word_to_float                    ; wordtofloat
00034F8A <AmiBlitz3.ab3@27899>   Dc.l convert_word_to_long                     ; wordtolong
00034F8E <AmiBlitz3.ab3@27900>   Dc.l error_convert_types                      ; noconerr
00034F92 <AmiBlitz3.ab3@27903>   Dc.l convert_long_to_byte                     ; longtobyte
00034F96 <AmiBlitz3.ab3@27904>   Dc.l convert_long_to_word                     ; longtoword
00034F9A <AmiBlitz3.ab3@27905>   Dc.l 0                                        ; longtolong
00034F9E <AmiBlitz3.ab3@27906>   Dc.l convert_long_to_quick                    ; longtoquick
00034FA2 <AmiBlitz3.ab3@27907>   Dc.l convert_long_to_float                    ; longtofloat
00034FA6 <AmiBlitz3.ab3@27908>   Dc.l 0                                        ; longtolong
00034FAA <AmiBlitz3.ab3@27909>   Dc.l error_convert_types                      ; noconerr
00034FAE <AmiBlitz3.ab3@27912>   Dc.l convert_quick_to_byte                    ; quicktobyte
00034FB2 <AmiBlitz3.ab3@27913>   Dc.l convert_quick_to_word                    ; quicktoword
00034FB6 <AmiBlitz3.ab3@27914>   Dc.l convert_quick_to_long                    ; quicktolong
00034FBA <AmiBlitz3.ab3@27915>   Dc.l 0                                        ; quicktoquick
00034FBE <AmiBlitz3.ab3@27916>   Dc.l convert_quick_to_float                   ; quicktofloat
00034FC2 <AmiBlitz3.ab3@27917>   Dc.l convert_quick_to_long                    ; quicktolong
00034FC6 <AmiBlitz3.ab3@27918>   Dc.l error_convert_types                      ; noconerr
00034FCA <AmiBlitz3.ab3@27921>   Dc.l convert_float_to_byte                    ; floattobyte
00034FCE <AmiBlitz3.ab3@27922>   Dc.l convert_float_to_word                    ; floattoword
00034FD2 <AmiBlitz3.ab3@27923>   Dc.l convert_float_to_long                    ; floattolong
00034FD6 <AmiBlitz3.ab3@27924>   Dc.l convert_float_to_quick                   ; floattoquick
00034FDA <AmiBlitz3.ab3@27925>   Dc.l 0                                        ; floattofloat
00034FDE <AmiBlitz3.ab3@27926>   Dc.l convert_float_to_long                    ; floattolong
00034FE2 <AmiBlitz3.ab3@27927>   Dc.l error_convert_types                      ; noconerr
00034FE6 <AmiBlitz3.ab3@27930>   Dc.l convert_long_to_byte                     ; longtobyte
00034FEA <AmiBlitz3.ab3@27931>   Dc.l convert_long_to_word                     ; longtoword
00034FEE <AmiBlitz3.ab3@27932>   Dc.l 0                                        ; longtolong
00034FF2 <AmiBlitz3.ab3@27933>   Dc.l convert_long_to_quick                    ; longtoquick
00034FF6 <AmiBlitz3.ab3@27934>   Dc.l convert_long_to_float                    ; longtofloat
00034FFA <AmiBlitz3.ab3@27935>   Dc.l 0                                        ; longtolong
00034FFE <AmiBlitz3.ab3@27936>   Dc.l error_convert_types                      ; noconerr
00035002 <AmiBlitz3.ab3@27939>   Dc.l error_convert_types                      ; noconerr
00035006 <AmiBlitz3.ab3@27940>   Dc.l error_convert_types                      ; noconerr
0003500A <AmiBlitz3.ab3@27941>   Dc.l string_to_long                           ; stringtolong
0003500E <AmiBlitz3.ab3@27942>   Dc.l error_convert_types                      ; noconerr
00035012 <AmiBlitz3.ab3@27943>   Dc.l error_convert_types                      ; noconerr
00035016 <AmiBlitz3.ab3@27944>   Dc.l string_to_long                           ; stringtolong
0003501A <AmiBlitz3.ab3@27945>   Ds.l 1
0003501C <AmiBlitz3.ab3@27951>   Dc.b $00,$2B                                  ;+ ; add
00035020 <AmiBlitz3.ab3@27952>   Dc.l do_plus_byte                             ;doplusb
00035024 <AmiBlitz3.ab3@27953>   Dc.l do_plus_word                             ;doplusw
00035028 <AmiBlitz3.ab3@27954>   Dc.l do_plus_long                             ;doplusl
0003502C <AmiBlitz3.ab3@27955>   Dc.l do_plus_long                             ;doplusl
00035030 <AmiBlitz3.ab3@27956>   Dc.l do_plus_float                            ;doplusf
00035034 <AmiBlitz3.ab3@27957>   Ds.l 1
00035038 <AmiBlitz3.ab3@27958>   Dc.l add_strings                              ;addstrings
0003503A <AmiBlitz3.ab3@27959>   Dc.b $0B,$B8
0003503C <AmiBlitz3.ab3@27961>   Dc.b $00,$2D                                  ;- ; sub
00035040 <AmiBlitz3.ab3@27962>   Dc.l do_minus_byte                            ;dominusb
00035044 <AmiBlitz3.ab3@27963>   Dc.l do_minus_word                            ;dominusw
00035048 <AmiBlitz3.ab3@27964>   Dc.l do_minus_long                            ;dominusl
0003504C <AmiBlitz3.ab3@27965>   Dc.l do_minus_long                            ;dominusl
00035050 <AmiBlitz3.ab3@27966>   Dc.l do_minus_float                           ;dominusf
00035058 <AmiBlitz3.ab3@27967>   Ds.l 2
0003505A <AmiBlitz3.ab3@27968>   Dc.b $0B,$B8
0003505C <AmiBlitz3.ab3@27970>   Dc.b $00,$2A                                  ;* ; mul
00035060 <AmiBlitz3.ab3@27971>   Dc.l do_times_byte                            ;dotimesb
00035064 <AmiBlitz3.ab3@27972>   Dc.l do_times_word                            ;dotimesw
00035068 <AmiBlitz3.ab3@27973>   Dc.l do_times_long                            ;dotimesl
0003506C <AmiBlitz3.ab3@27974>   Dc.l do_times_quick                           ;dotimesq
00035070 <AmiBlitz3.ab3@27975>   Dc.l do_times_float                           ;dotimesf
00035078 <AmiBlitz3.ab3@27976>   Ds.l 2
0003507A <AmiBlitz3.ab3@27977>   Dc.b $0F,$A0
0003507C <AmiBlitz3.ab3@27979>   Dc.b $00,$2F                                  ;/ ; div
00035080 <AmiBlitz3.ab3@27980>   Dc.l do_Div_byte                              ;dodivb
00035084 <AmiBlitz3.ab3@27981>   Dc.l do_Div_word                              ;dodivb
00035088 <AmiBlitz3.ab3@27982>   Dc.l do_Div_long                              ;dodivl
0003508C <AmiBlitz3.ab3@27983>   Dc.l do_Div_quick                             ;dodivq
00035090 <AmiBlitz3.ab3@27984>   Dc.l do_Div_float                             ;dodivf
00035098 <AmiBlitz3.ab3@27985>   Ds.l 2
0003509A <AmiBlitz3.ab3@27986>   Dc.b $0F,$A0
0003509C <AmiBlitz3.ab3@27988>   Dc.b $00,$26                                  ;& ; & int
000350A0 <AmiBlitz3.ab3@27989>   Dc.l do_AND_byte                              ;doandb
000350A4 <AmiBlitz3.ab3@27990>   Dc.l do_AND_word                              ;doandw
000350A8 <AmiBlitz3.ab3@27991>   Dc.l do_AND_long                              ;doandl
000350AC <AmiBlitz3.ab3@27992>   Dc.l do_AND_long                              ;doandl
000350B8 <AmiBlitz3.ab3@27993>   Ds.l 3
000350BA <AmiBlitz3.ab3@27994>   Dc.b $13,$88
000350BC <AmiBlitz3.ab3@27996>   Dc.b $00,$7C                                  ;| ;or int ;
000350C0 <AmiBlitz3.ab3@27997>   Dc.l do_OR_byte                               ;doorb
000350C4 <AmiBlitz3.ab3@27998>   Dc.l do_OR_word                               ;doorw
000350C8 <AmiBlitz3.ab3@27999>   Dc.l do_OR_long                               ;doorl
000350CC <AmiBlitz3.ab3@28000>   Dc.l do_OR_long                               ;doorl
000350D8 <AmiBlitz3.ab3@28001>   Ds.l 3
000350DA <AmiBlitz3.ab3@28002>   Dc.b $13,$88
000350DC <AmiBlitz3.ab3@28004>   Dc.b $80,$42                                  ; AND int  ;(opand-opabcd)/$1c+$8000+fnum
000350E0 <AmiBlitz3.ab3@28005>   Dc.l do_AND_byte                              ;doandb
000350E4 <AmiBlitz3.ab3@28006>   Dc.l do_AND_word                              ;doandw
000350E8 <AmiBlitz3.ab3@28007>   Dc.l do_AND_long                              ;doandl
000350EC <AmiBlitz3.ab3@28008>   Dc.l do_AND_long                              ;doandl
000350F8 <AmiBlitz3.ab3@28009>   Ds.l 3
000350FA <AmiBlitz3.ab3@28010>   Dc.b $03,$E8
000350FC <AmiBlitz3.ab3@28012>   Dc.b $80,$8A                                  ; OR int   ;(opor-opabcd)/$1c+$8000+fnum
00035100 <AmiBlitz3.ab3@28013>   Dc.l do_OR_byte                               ;doorb
00035104 <AmiBlitz3.ab3@28014>   Dc.l do_OR_word                               ;doorw
00035108 <AmiBlitz3.ab3@28015>   Dc.l do_OR_long                               ;doorl
0003510C <AmiBlitz3.ab3@28016>   Dc.l do_OR_long                               ;doorl
00035118 <AmiBlitz3.ab3@28017>   Ds.l 3
0003511A <AmiBlitz3.ab3@28018>   Dc.b $03,$E8
0003511C <AmiBlitz3.ab3@28020>   Dc.b $80,$73                                  ; EOR int  ;(opeor-opabcd)/$1c+$8000+fnum
00035120 <AmiBlitz3.ab3@28021>   Dc.l do_EOR_byte                              ;doeorb
00035124 <AmiBlitz3.ab3@28022>   Dc.l do_EOR_word                              ;doeorw
00035128 <AmiBlitz3.ab3@28023>   Dc.l do_EOR_long                              ;doeorl
0003512C <AmiBlitz3.ab3@28024>   Dc.l do_EOR_long                              ;doeorl
00035138 <AmiBlitz3.ab3@28025>   Ds.l 3
0003513A <AmiBlitz3.ab3@28026>   Dc.b $03,$E8
0003513C <AmiBlitz3.ab3@28028>   Dc.b $80,$7C                                  ; LSL int  ;(oplsl-opabcd)/$1c+$8000+fnum
00035140 <AmiBlitz3.ab3@28029>   Dc.l do_LSL                                   ;dolslb
00035144 <AmiBlitz3.ab3@28030>   Dc.l do_LSL                                   ;dolslw
00035148 <AmiBlitz3.ab3@28031>   Dc.l do_LSL                                   ;dolsll
0003514C <AmiBlitz3.ab3@28032>   Dc.l do_LSL                                   ;dolsll
00035158 <AmiBlitz3.ab3@28033>   Ds.l 3
0003515A <AmiBlitz3.ab3@28034>   Dc.b $17,$70
0003515C <AmiBlitz3.ab3@28036>   Dc.b $80,$44                                  ; ASL int  ;(opasl-opabcd)/$1c+$8000+fnum
00035160 <AmiBlitz3.ab3@28037>   Dc.l do_LSL                                   ;dolslb
00035164 <AmiBlitz3.ab3@28038>   Dc.l do_LSL                                   ;dolslw
00035168 <AmiBlitz3.ab3@28039>   Dc.l do_LSL                                   ;dolsll
0003516C <AmiBlitz3.ab3@28040>   Dc.l do_LSL                                   ;dolsll
00035178 <AmiBlitz3.ab3@28041>   Ds.l 3
0003517A <AmiBlitz3.ab3@28042>   Dc.b $17,$70
0003517C <AmiBlitz3.ab3@28044>   Dc.b $80,$7D                                  ; LSR int  ;(oplsr-opabcd)/$1c+$8000+fnum
00035180 <AmiBlitz3.ab3@28045>   Dc.l do_LSR                                   ;dolsrb
00035184 <AmiBlitz3.ab3@28046>   Dc.l do_LSR                                   ;dolsrw
00035188 <AmiBlitz3.ab3@28047>   Dc.l do_LSR                                   ;dolsrl
0003518C <AmiBlitz3.ab3@28048>   Dc.l do_LSR                                   ;dolsrl
00035198 <AmiBlitz3.ab3@28049>   Ds.l 3
0003519A <AmiBlitz3.ab3@28050>   Dc.b $17,$70
0003519C <AmiBlitz3.ab3@28052>   Dc.b $80,$45                                  ; ASR int  ;(opasr-opabcd)/$1c+$8000+fnum
000351A0 <AmiBlitz3.ab3@28053>   Dc.l do_ASR                                   ;doasrb
000351A4 <AmiBlitz3.ab3@28054>   Dc.l do_ASR                                   ;doasrw
000351A8 <AmiBlitz3.ab3@28055>   Dc.l do_ASR                                   ;doasrl
000351AC <AmiBlitz3.ab3@28056>   Dc.l do_ASR                                   ;doasrl
000351B8 <AmiBlitz3.ab3@28057>   Ds.l 3
000351BA <AmiBlitz3.ab3@28058>   Dc.b $17,$70
000351BC <AmiBlitz3.ab3@28060>   Dc.b $80,$B9                                  ;mod       ;$8006+tnum
000351C0 <AmiBlitz3.ab3@28061>   Dc.l do_mod_byte                              ;domodb
000351C4 <AmiBlitz3.ab3@28062>   Dc.l do_mod_word                              ;domodw
000351C8 <AmiBlitz3.ab3@28063>   Dc.l do_mod_long                              ;domodl
000351CC <AmiBlitz3.ab3@28064>   Dc.l do_mod_quick                             ;domodq
000351D0 <AmiBlitz3.ab3@28065>   Dc.l do_mod_float                             ;domodf
000351D8 <AmiBlitz3.ab3@28066>   Ds.l 2
000351DA <AmiBlitz3.ab3@28067>   Dc.b $13,$88
000351DC <AmiBlitz3.ab3@28070>   Dc.b $00,$5E                                  ;^
000351E0 <AmiBlitz3.ab3@28071>   Dc.l do_pow                                   ;dopow
000351E4 <AmiBlitz3.ab3@28072>   Dc.l do_pow                                   ;dopow
000351E8 <AmiBlitz3.ab3@28073>   Dc.l do_pow                                   ;dopow
000351EC <AmiBlitz3.ab3@28074>   Dc.l do_pow                                   ;dopow
000351F0 <AmiBlitz3.ab3@28075>   Dc.l do_pow                                   ;dopow
000351F8 <AmiBlitz3.ab3@28076>   Ds.l 2
000351FA <AmiBlitz3.ab3@28077>   Dc.b $1B,$58                                  ;7000
000351FC <AmiBlitz3.ab3@28080>   Dc.b $00,$3D                                  ;=
00035200 <AmiBlitz3.ab3@28081>   Dc.l do_equal_byte                            ;doeqb
00035204 <AmiBlitz3.ab3@28082>   Dc.l do_equal_word                            ;doeqw
00035208 <AmiBlitz3.ab3@28083>   Dc.l do_equal_long                            ;doeql
0003520C <AmiBlitz3.ab3@28084>   Dc.l do_equal_long                            ;doeql
00035210 <AmiBlitz3.ab3@28085>   Dc.l do_equal_float                           ;doeqf
00035214 <AmiBlitz3.ab3@28086>   Dc.l do_equal_long                            ;doeql
00035218 <AmiBlitz3.ab3@28087>   Dc.l do_equal_string                          ;doeqs
0003521A <AmiBlitz3.ab3@28088>   Dc.b $07,$D0                                  ;2000
0003521C <AmiBlitz3.ab3@28091>   Dc.b $3C,$3E                                  ;<>
00035220 <AmiBlitz3.ab3@28092>   Dc.l do_not_equal_byte                        ;doneb
00035224 <AmiBlitz3.ab3@28093>   Dc.l do_not_equal_word                        ;donew
00035228 <AmiBlitz3.ab3@28094>   Dc.l do_not_equal_long                        ;donel
0003522C <AmiBlitz3.ab3@28095>   Dc.l do_not_equal_long                        ;donel
00035230 <AmiBlitz3.ab3@28096>   Dc.l do_not_equal_float                       ;donef
00035234 <AmiBlitz3.ab3@28097>   Dc.l do_not_equal_long                        ;donel
00035238 <AmiBlitz3.ab3@28098>   Dc.l do_not_equal_string                      ;dones
0003523A <AmiBlitz3.ab3@28099>   Dc.b $07,$D0                                  ;2000
0003523C <AmiBlitz3.ab3@28102>   Dc.b $00,$3C                                  ;<
00035240 <AmiBlitz3.ab3@28103>   Dc.l do_littler_byte                          ;doltb
00035244 <AmiBlitz3.ab3@28104>   Dc.l do_littler_word                          ;doltw
00035248 <AmiBlitz3.ab3@28105>   Dc.l do_littler_long                          ;doltl
0003524C <AmiBlitz3.ab3@28106>   Dc.l do_littler_long                          ;doltl
00035250 <AmiBlitz3.ab3@28107>   Dc.l do_littler_float                         ;doltf
00035254 <AmiBlitz3.ab3@28108>   Dc.l do_littler_long                          ;doltl
00035258 <AmiBlitz3.ab3@28109>   Dc.l do_littler_string                        ;dolts
0003525A <AmiBlitz3.ab3@28110>   Dc.b $07,$D0                                  ;2000
0003525C <AmiBlitz3.ab3@28113>   Dc.b $3C,$3D                                  ;<=
00035260 <AmiBlitz3.ab3@28114>   Dc.l do_littler_equal_byte                    ;doleb
00035264 <AmiBlitz3.ab3@28115>   Dc.l do_littler_equal_word                    ;doleb
00035268 <AmiBlitz3.ab3@28116>   Dc.l do_littler_equal_long                    ;dolel
0003526C <AmiBlitz3.ab3@28117>   Dc.l do_littler_equal_long                    ;dolel
00035270 <AmiBlitz3.ab3@28118>   Dc.l do_littler_equal_float                   ;dolef
00035274 <AmiBlitz3.ab3@28119>   Dc.l do_littler_equal_long                    ;dolel
00035278 <AmiBlitz3.ab3@28120>   Dc.l do_littler_equal_string                  ;doles
0003527A <AmiBlitz3.ab3@28121>   Dc.b $07,$D0                                  ;2000
0003527C <AmiBlitz3.ab3@28124>   Dc.b $00,$3E                                  ;>
00035280 <AmiBlitz3.ab3@28125>   Dc.l do_greater_byte                          ;dogtb
00035284 <AmiBlitz3.ab3@28126>   Dc.l do_greater_word                          ;dogtw
00035288 <AmiBlitz3.ab3@28127>   Dc.l do_greater_long                          ;dogtl
0003528C <AmiBlitz3.ab3@28128>   Dc.l do_greater_long                          ;dogtl
00035290 <AmiBlitz3.ab3@28129>   Dc.l do_greater_float                         ;dogtf
00035294 <AmiBlitz3.ab3@28130>   Dc.l do_greater_long                          ;dogtl
00035298 <AmiBlitz3.ab3@28131>   Dc.l do_greater_string                        ;dogts
0003529A <AmiBlitz3.ab3@28132>   Dc.b $07,$D0                                  ;2000
0003529C <AmiBlitz3.ab3@28135>   Dc.b $3E,$3D                                  ;>=
000352A0 <AmiBlitz3.ab3@28136>   Dc.l do_greater_equal_byte                    ;dogeb
000352A4 <AmiBlitz3.ab3@28137>   Dc.l do_greater_equal_word                    ;dogew
000352A8 <AmiBlitz3.ab3@28138>   Dc.l do_greater_equal_long                    ;dogel
000352AC <AmiBlitz3.ab3@28139>   Dc.l do_greater_equal_long                    ;dogel
000352B0 <AmiBlitz3.ab3@28140>   Dc.l do_greater_equal_float                   ;dogef
000352B4 <AmiBlitz3.ab3@28141>   Dc.l do_greater_equal_long                    ;dogel
000352B8 <AmiBlitz3.ab3@28142>   Dc.l do_greater_equal_string                  ;doges
000352BA <AmiBlitz3.ab3@28143>   Dc.b $07,$D0                                  ;2000
000352BC <AmiBlitz3.ab3@28145>   Dc.b $80,$CD                                  ;$8000+26+tnum
000352C0 <AmiBlitz3.ab3@28146>   Dc.l _BitTst
000352C4 <AmiBlitz3.ab3@28147>   Dc.l _BitTst
000352C8 <AmiBlitz3.ab3@28148>   Dc.l _BitTst
000352CC <AmiBlitz3.ab3@28149>   Dc.l _BitTst
000352D8 <AmiBlitz3.ab3@28150>   Ds.l 3
000352DA <AmiBlitz3.ab3@28151>   Dc.b $1F,$40                                  ;8000
000352DC <AmiBlitz3.ab3@28153>   Dc.b $80,$CE                                  ;$8000+27+tnum
000352E0 <AmiBlitz3.ab3@28154>   Dc.l _BitSet
000352E4 <AmiBlitz3.ab3@28155>   Dc.l _BitSet
000352E8 <AmiBlitz3.ab3@28156>   Dc.l _BitSet
000352EC <AmiBlitz3.ab3@28157>   Dc.l _BitSet
000352F8 <AmiBlitz3.ab3@28158>   Ds.l 3
000352FA <AmiBlitz3.ab3@28159>   Dc.b $1F,$40                                  ;8000
000352FC <AmiBlitz3.ab3@28161>   Dc.b $80,$CF                                  ;$8000+28+tnum
00035300 <AmiBlitz3.ab3@28162>   Dc.l _BitClr
00035304 <AmiBlitz3.ab3@28163>   Dc.l _BitClr
00035308 <AmiBlitz3.ab3@28164>   Dc.l _BitClr
0003530C <AmiBlitz3.ab3@28165>   Dc.l _BitClr
00035318 <AmiBlitz3.ab3@28166>   Ds.l 3
0003531A <AmiBlitz3.ab3@28167>   Dc.b $1F,$40                                  ;8000
0003531C <AmiBlitz3.ab3@28169>   Dc.b $80,$D0                                  ;$8000+29+tnum
00035320 <AmiBlitz3.ab3@28170>   Dc.l _BitChg
00035324 <AmiBlitz3.ab3@28171>   Dc.l _BitChg
00035328 <AmiBlitz3.ab3@28172>   Dc.l _BitChg
0003532C <AmiBlitz3.ab3@28173>   Dc.l _BitChg
00035338 <AmiBlitz3.ab3@28174>   Ds.l 3
0003533A <AmiBlitz3.ab3@28175>   Dc.b $1F,$40                                  ;8000
0003533C <AmiBlitz3.ab3@28177>   Dc.b $00,$00
00035340 <AmiBlitz3.ab3@28182> modetable:   Dc.l typemode
00035344 <AmiBlitz3.ab3@28185> newtypebase: Dc.l newtype_byte
0003534C <AmiBlitz3.ab3@28188>   Dc.l newtype_word,$01                                    
0003534E <AmiBlitz3.ab3@28189>   Dc.w $0001
00035352 <AmiBlitz3.ab3@28190>   Dc.b 13,"b",0,0
0003535A <AmiBlitz3.ab3@28193>   Dc.l newtype_long,$02
0003535C <AmiBlitz3.ab3@28194>   Dc.w $0002
00035360 <AmiBlitz3.ab3@28195>   Dc.b 13,"w",0,0
00035368 <AmiBlitz3.ab3@28198>   Dc.l newtype_quick,$03                                   
0003536A <AmiBlitz3.ab3@28199>   Dc.w $0004
0003536E <AmiBlitz3.ab3@28200>   Dc.b 13,"l",0,0
00035376 <AmiBlitz3.ab3@28203>   Dc.l newtype_float,$04                                   
00035378 <AmiBlitz3.ab3@28204>   Dc.w $0004
0003537C <AmiBlitz3.ab3@28205>   Dc.b 13,"q",0,0
00035384 <AmiBlitz3.ab3@28209>   Dc.l newtype_double,$05                                  ;make problems on old residents
00035386 <AmiBlitz3.ab3@28210>   Dc.w $0004
0003538A <AmiBlitz3.ab3@28211>   Dc.b 13,"f",0,0
00035392 <AmiBlitz3.ab3@28214>   Dc.l newtype_double,$06
00035394 <AmiBlitz3.ab3@28215>   Dc.w $0004
00035398 <AmiBlitz3.ab3@28216>   Dc.b 13,"a",0,0
000353A0 <AmiBlitz3.ab3@28219>   Dc.l newtype_string,$05                                  ;?? has to by $06 becous is number 6 not 5
000353A2 <AmiBlitz3.ab3@28220>   Dc.w $0008
000353A6 <AmiBlitz3.ab3@28221>   Dc.b 13,"d",0,0
000353AE <AmiBlitz3.ab3@28225>   Dc.l $0000000,$07                                        ;stringtype
000353B0 <AmiBlitz3.ab3@28226>   Dc.w $0004
000353B4 <AmiBlitz3.ab3@28227>   Dc.b 13,"s",0,0
000353BC <AmiBlitz3.ab3@28230>   Dc.l $00,$00
000353BE <AmiBlitz3.ab3@28231>   Dc.w $0000
000353C2 <AmiBlitz3.ab3@28232>   Dc.b $01,$00,$00,$00
00035422 <AmiBlitz3.ab3@28235> incdir:               Ds.l 24                              ;dcb.b   96,0    org source
00035424 <AmiBlitz3.ab3@28239> dirmode:              Ds.w 1                               ;shows if directmode is on
00035428 <AmiBlitz3.ab3@28241>                       Ds.l 1                               ;int org source ;intuition!
0003542A <AmiBlitz3.ab3@28242> maxobject_pos:        Ds.w 1                               ;maxat org source ;max at
0003542E <AmiBlitz3.ab3@28243> maxsat:               Ds.l 1                               ;data1 info pos
00035430 <AmiBlitz3.ab3@28244> number_of_objects:    Ds.w 1                               ;nummaxs org source ;number of maximums
00035432 <AmiBlitz3.ab3@28246> maxsused:             Ds.w 1                               ;maximums used in prog
00035434 <AmiBlitz3.ab3@28250> dark:                 Ds.w 1                               ;dark compile?
00035436 <AmiBlitz3.ab3@28251> qlab:                 Ds.w 1                               ;quick lab allocate
0003543A <AmiBlitz3.ab3@28252> defaulttype:          Dc.l newtype_quick                   ;dc.l quicktype org source
0003543C <AmiBlitz3.ab3@28257> anyerrs:              Dc.w -1                              ;Any Errors in compile ?
0003543E <AmiBlitz3.ab3@28258> debugversion:         Ds.w 1                               ;makeexec org source ;make an executable file!
00035442 <AmiBlitz3.ab3@28259> noinits:              Ds.l 1                               ;flag for if we have any init routines!
00035446 <AmiBlitz3.ab3@28261> letstart:             Ds.l 1
00035448 <AmiBlitz3.ab3@28262> dontwrite_nomemleft:  Ds.w 1                               ;nomemleft org source
000354C8 <AmiBlitz3.ab3@28263> lastgloballabel:      Ds.l 32                              ;lastbiglab ds.b 128 org source
000354CC <AmiBlitz3.ab3@28265> locdatast:            Ds.l 1
000354D0 <AmiBlitz3.ab3@28266> firstpend:            Ds.l 1
000354D4 <AmiBlitz3.ab3@28270> data2at:              Ds.l 1
000354D8 <AmiBlitz3.ab3@28271> data2:                Ds.l 1
000354DC <AmiBlitz3.ab3@28272> data1start:           Ds.l 1                               ;data1at org source
000354E0 <AmiBlitz3.ab3@28273> data1:                Ds.l 1                               ;pc for initialized data!
000354E4 <AmiBlitz3.ab3@28274> destbufferstart:      Ds.l 1                               ;pcat org source
000354E8 <AmiBlitz3.ab3@28278> destbufferend:        Ds.l 1                               ;libat org source
000354EC <AmiBlitz3.ab3@28279> libend:               Ds.l 1                               ;lib org source
000354F0 <AmiBlitz3.ab3@28280> allat:                Ds.l 1                               ;highest allocmemd location for code
000354FA <AmiBlitz3.ab3@28281> dummyasm:             Dc.w 0,0,0,0,0
000354FE <AmiBlitz3.ab3@28282>                       Dc.l 0
00035500 <AmiBlitz3.ab3@28283>                       Dc.w 0
00035504 <AmiBlitz3.ab3@28287> buff1:                Ds.l 1                               ;buffer for text get
00035508 <AmiBlitz3.ab3@28288> buff2:                Ds.l 1                               ;ditto for dest
0003550A <AmiBlitz3.ab3@28289> constmode:            Ds.w 1                               ;0 for norm, <>0 for assembler
0003550C <AmiBlitz3.ab3@28290> asmtype:              Ds.w 1                               ;0=contains no prog reference
0003550E <AmiBlitz3.ab3@28291> extraword:            Ds.w 1                               ;the extension word for assembler
00035510 <AmiBlitz3.ab3@28292> extraword2:           Ds.w 1                               ;ditto
00035512 <AmiBlitz3.ab3@28293> asmsize:              Ds.w 1
00035516 <AmiBlitz3.ab3@28294> asmbuff:              Ds.l 1
00035518 <AmiBlitz3.ab3@28295> asmlen:               Ds.w 1                               ;first (src) text len
0003551A <AmiBlitz3.ab3@28296> asmlen2:              Ds.w 1                               ;second (dest)
0003551E <AmiBlitz3.ab3@28297> templabel:            Ds.l 1                               ;linked list of expressions to resolve
00035520 <AmiBlitz3.ab3@28300> macnum:               Ds.w 1
00035524 <AmiBlitz3.ab3@28302>                       Dc.l 0                               ;address of next 0 in include fil
00035528 <AmiBlitz3.ab3@28303> titleat:              Ds.l 1                               ;5 longs for compile streaks
00035532 <AmiBlitz3.ab3@28304> progress_per_line:    Ds.w 5                               ;titleadd ds 5 org source ;5 adds for compile streaks
00035534 <AmiBlitz3.ab3@28305> connest:              Ds.w 1                               ;conditional nest level
00035538 <AmiBlitz3.ab3@28306> firstconst:           Ds.l 1                               ;first constant (#a)
0003553A <AmiBlitz3.ab3@28307> numarg:               Ds.w 1                               ;number of macro arguements
0003553E <AmiBlitz3.ab3@28308> myoline:              Ds.l 1                               ;macro done yet?
00035542 <AmiBlitz3.ab3@28309> myline:               Ds.l 1                               ;pointer to some memory to create
00035546 <AmiBlitz3.ab3@28312>                       Ds.l 1
00035586 <AmiBlitz3.ab3@28313> concomstack:          Ds.l 16                              ;32 deep conditional compilation
0003558A <AmiBlitz3.ab3@28314> concomsp:             Dc.l concomstack                     ;stack pointer
0003558C <AmiBlitz3.ab3@28315> oldqflag:             Ds.w 1
00035590 <AmiBlitz3.ab3@28318>                       Ds.l 1
00035592 <AmiBlitz3.ab3@28320>                       Ds.w 1
00035596 <AmiBlitz3.ab3@28321> firstfor:             Ds.l 1                               ;first for
00035598 <AmiBlitz3.ab3@28322> stackpar:             Ds.w 1                               ;pushflag org source ;1 par to stack 0 normal
0003559A <AmiBlitz3.ab3@28323> sbgot:                Ds.w 1                               ;flag for string got 2
0003559C <AmiBlitz3.ab3@28324> convsize:             Ds.w 1                               ;usertype org source
0003559E <AmiBlitz3.ab3@28325> userp:                Ds.w 1
000355A2 <AmiBlitz3.ab3@28330> ptr_userlibs_list:    Ds.l 1                               ;libslist org source
000355A4 <AmiBlitz3.ab3@28331> a2offset:             Ds.w 1                               ;stackuse org source ;stack used when gathering lib parameters
000355A6 <AmiBlitz3.ab3@28332> numreps:              Ds.w 1                               ;number of repeats in a repeatable
000355AA <AmiBlitz3.ab3@28334> locloc:               Ds.l 1
000355AC <AmiBlitz3.ab3@28335> locchar:              Ds.w 1
0003562C <AmiBlitz3.ab3@28336> stbuff:               Ds.l 32                              ;was 8    ;six string varoffs
0003562E <AmiBlitz3.ab3@28337> commode:              Ds.w 1                               ;in comma mode...
00035632 <AmiBlitz3.ab3@28338> lastoffset_org:       Ds.l 1                               ;lastoffset org source ;last offset in calcvar!
00035636 <AmiBlitz3.ab3@28339> linenumat:            Dc.l $FFFFFFFF                       ;linecounter ;dc -1 org source ;line being processed
0003563A <AmiBlitz3.ab3@28340> compilelinecounter:   Dc.l $FFFFFFFF                       ;menuret dc -1 org source ;menu return code
0003563C <AmiBlitz3.ab3@28342>                       Ds.w 1                               ;opt reset offset
0003573C <AmiBlitz3.ab3@28344>                       Ds.l 64                              ;Ds.b vcodelen org source ;code used to generate
0003583C <AmiBlitz3.ab3@28346>                       Ds.l 64                              ;Ds.b vcodelen org source ;above for let.....
0003583E <AmiBlitz3.ab3@28347> varcodelen:           Ds.w 1                               ;and length
00035840 <AmiBlitz3.ab3@28349>                       Ds.w 1
00035846 <AmiBlitz3.ab3@28350> oldvcodelen:          Ds.w 3                               ;old varcodelen
00035848 <AmiBlitz3.ab3@28353> Even4
0003584C <AmiBlitz3.ab3@28354> tempvm:               Ds.l 1                               ;memlib org source ;address of memory library
0003584E <AmiBlitz3.ab3@28355> memlibstat:           Ds.w 1                               ;status of memory library during
00035850 <AmiBlitz3.ab3@28358>                       Dc.w 0
00035852 <AmiBlitz3.ab3@28360>                       Dc.w 0
00035854 <AmiBlitz3.ab3@28362> varmode:              Ds.w 1                               ;0 a5 pointer to global
00035858 <AmiBlitz3.ab3@28364> currentfunction:      Ds.l 1                               ;thisproc org source
0003585C <AmiBlitz3.ab3@28365> firstproc:            Ds.l 1                               ;firstproc org source ;this procedure being 'done'
0003585E <AmiBlitz3.ab3@28366> 
00035860 <AmiBlitz3.ab3@28368> skipcode:             Ds.w 1                               ;nocompile ;comflag org source ;0 if no compile
00035864 <AmiBlitz3.ab3@28369> passstack:            Ds.l 1
00035868 <AmiBlitz3.ab3@28370> zero:                 Ds.l 1                               ;ZERO!
0003586A <AmiBlitz3.ab3@28371> ininclude:            Ds.w 1                               ;numincs org source ;number of include files
0003586E <AmiBlitz3.ab3@28373> xinclude_base:        Ds.l 1                               ;firstxinc org source ;first exclusive include.
00035872 <AmiBlitz3.ab3@28374> constantbase:         Ds.l 1                               ;firstinc org source ;first include
00035874 <AmiBlitz3.ab3@28375> lasta6:               Dc.w $FFFF                           ;-1 org source
00035876 <AmiBlitz3.ab3@28376> instringon:           Ds.w 1                               ;quoteflag org source
0003587A <AmiBlitz3.ab3@28377> ptr_macrobuffer_begin:Ds.l 1                               ;macrobuff org source ;pointer to macro collection buffer ;begin
0003587E <AmiBlitz3.ab3@28378> ptr_macrobuffer_end:  Ds.l 1                               ;macrobufff org source ;end of above ;end of
00035882 <AmiBlitz3.ab3@28379> macrobase:            Ds.l 1                               ;firstmacro org source ;linked list of macro's ;macrolist
00035886 <AmiBlitz3.ab3@28380> endop:                Ds.l 1                               ;end of program pc - before finishups!
0003588A <AmiBlitz3.ab3@28381> labelbase:            Ds.l 1                               ;firstlabel org source ;first lib struct
0003588E <AmiBlitz3.ab3@28382> end_of_tokenlist:     Ds.l 1                               ;lasttoken org source
00035890 <AmiBlitz3.ab3@28383> numstatic:            Ds.w 1                               ;number of static structs
00035894 <AmiBlitz3.ab3@28384> staticdata:           Ds.l 1                               ;data1 val for statics
00035898 <AmiBlitz3.ab3@28385> libpointer:           Ds.l 1                               ;firstlib org source ;first lib struct
0003589A <AmiBlitz3.ab3@28386> sbasegot:             Ds.w 1                               ;string base got?
0003589E <AmiBlitz3.ab3@28387> litdata1:             Ds.l 1
000358A2 <AmiBlitz3.ab3@28391> objlen:               Ds.l 1
000358A6 <AmiBlitz3.ab3@28392> hunkoffsetcounter:    Ds.l 1                               ;numoffs org source
000358AA <AmiBlitz3.ab3@28393> hunkoffsetbase:       Ds.l 1                               ;firstoff org source ;pointer to linked list
000358AC <AmiBlitz3.ab3@28395> flagmask:             Ds.w 1                               ;mask for flag of variable when
000358AE <AmiBlitz3.ab3@28397> notshared:            Ds.w 1                               ;added org source ;flag for seeing if variable was added!
000358B0 <AmiBlitz3.ab3@28398> nonew:                Ds.w 1                               ;1 to inhibit new variable creation
000358B4 <AmiBlitz3.ab3@28399> temp1:                Ds.l 1
000358B8 <AmiBlitz3.ab3@28400> temp2:                Ds.l 1
000358BC <AmiBlitz3.ab3@28402> ptr_parameterstore:   Ds.l 1                               ;namebuff ds.b 128 org source
000358C0 <AmiBlitz3.ab3@28403> fib_DirEntryType:     Ds.l 1                               ;namebuff+4 org source
00035934 <AmiBlitz3.ab3@28404> fib_FileName:         Ds.l 29                              ;namebuff+8 org source
00035938 <AmiBlitz3.ab3@28405> fib_Size:             Ds.l 1                               ;namebuff+124 org source
000359B8 <AmiBlitz3.ab3@28407> namebuff2:            Ds.b 128
000359C0 <AmiBlitz3.ab3@28408>                       Ds.b 8                               ;for fileinfoblock
00035A00 <AmiBlitz3.ab3@28411> optstuff:             Ds.b 64                              ;temp opt make buffer
00035A02 <AmiBlitz3.ab3@28428>   Dc.b $00,$01                                             ; 1 byte schreiben ;one byte stuff...
00035A06 <AmiBlitz3.ab3@28429>   Dc.l xtra_versionnumber                                  ; vers org source
00035A0A <AmiBlitz3.ab3@28430>   Dc.l create_iconfile                                     ; create icon for executable
00035A0E <AmiBlitz3.ab3@28431>   Ds.l 1
00035A10 <AmiBlitz3.ab3@28433>   Dc.b $00,$02                                             ; 2 bytes schreiben  ;two byte stuff...
00035A14 <AmiBlitz3.ab3@28436>   Dc.l set_use_debugger
00035A18 <AmiBlitz3.ab3@28437>   Dc.l AL_0_11010                                          ;+obsolet: debugger
00035A1C <AmiBlitz3.ab3@28438>   Dc.l AL_0_1103C                                          ;+obsolet: long arrays
00035A20 <AmiBlitz3.ab3@28439>   Dc.l AL_0_11068                                          ;+obsolet: expand macros
00035A24 <AmiBlitz3.ab3@28440>   Dc.l AL_0_11094                                          ;+obsolet: quoted macros
00035A28 <AmiBlitz3.ab3@28441>   Dc.l set_make_smallestcode
00035A2C <AmiBlitz3.ab3@28442>   Dc.l set_link_debuginfo
00035A30 <AmiBlitz3.ab3@28443>   Dc.l set_autorun
00035A34 <AmiBlitz3.ab3@28444>   Dc.l set_interruptcheck
00035A38 <AmiBlitz3.ab3@28445>   Dc.l set_assemblercheck
00035A3C <AmiBlitz3.ab3@28447>   Dc.l set_overflowcheck
00035A40 <AmiBlitz3.ab3@28448>   Dc.l default_obsolete                                    ;+obsolet: ohne inhalt
00035A44 <AmiBlitz3.ab3@28449>   Dc.l default_interruptcheck                              ;+obsolet: interruptcheck vorgabe
00035A48 <AmiBlitz3.ab3@28450>   Dc.l default_overflowcheck                               ;+obsolet: overflow vorgabe
00035A4C <AmiBlitz3.ab3@28453>   Ds.l 1
00035A4E <AmiBlitz3.ab3@28455>   Dc.b $00,$04                                             ; 4 bytes schreiben..  ;four byte stuff...
00035A52 <AmiBlitz3.ab3@28462>   Dc.l objectbuffer
00035A56 <AmiBlitz3.ab3@28463>   Dc.l libsbuffer
00035A5A <AmiBlitz3.ab3@28464>   Dc.l systembuffer
00035A5E <AmiBlitz3.ab3@28465>   Dc.l databuffer
00035A62 <AmiBlitz3.ab3@28466>   Dc.l macrobuffer_size
00035A66 <AmiBlitz3.ab3@28467>   Dc.l stringbuffer
00035A6A <AmiBlitz3.ab3@28470>   Ds.l 1
00035A6C <AmiBlitz3.ab3@28474>   Dc.b $02,$20                                             ;dc 68*8; 544 bytes schreiben.
00035A74 <AmiBlitz3.ab3@28475>   Dc.l residents_table,0
00035A76 <AmiBlitz3.ab3@28479>   Dc.b $01,$80                                             ;dc 192*2; 384 bytes schreiben
00035A7E <AmiBlitz3.ab3@28480>   Dc.l exepath,0                                           ; exepath und exefilename jeweils 192 bytes
00035A80 <AmiBlitz3.ab3@28481>   Ds.w 1
00035B7C <AmiBlitz3.ab3@28485>   Ds.l 63
00035C78 <AmiBlitz3.ab3@28486>   Ds.l 63
00035D74 <AmiBlitz3.ab3@28487>   Ds.l 63
00035E56 <AmiBlitz3.ab3@28488>   Ds.w 113
00035E58 <AmiBlitz3.ab3@28491> comsettings_message:  Ds.w 1                               ;allchg org source
00035E5A <AmiBlitz3.ab3@28492> xtra_versionnumber:   Ds.w 1                               ;vers org source
00035E60 <AmiBlitz3.ab3@28496>   CLR.b exefilename
00035E62 <AmiBlitz3.ab3@28497>   TST.l d0
00035E66 <AmiBlitz3.ab3@28498>   BNE 'l10
00035E68 <AmiBlitz3.ab3@28499>  RTS
00035E6E <AmiBlitz3.ab3@28502>   JSR free_residents                                       ;jsr freeres2 org source
00035E74 <AmiBlitz3.ab3@28503> 
00035E7A <AmiBlitz3.ab3@28504>   LEA ptr_xtradata,A2
00035E7C <AmiBlitz3.ab3@28505>   MOVEQ.l #$00,D4
00035E7E <AmiBlitz3.ab3@28508>     MOVE.w (A2)+,D4                                        ; anzahl bytes zum lesen
00035E82 <AmiBlitz3.ab3@28509>     BEQ.b 'done
00035E84 <AmiBlitz3.ab3@28512>     MOVE.l (A2)+,D2
00035E88 <AmiBlitz3.ab3@28513>   BEQ.b 'loop
00035E8A <AmiBlitz3.ab3@28515>   MOVE.l D4,D3
00035E8C <AmiBlitz3.ab3@28516>   MOVE.l D7,D1
00035E90 <AmiBlitz3.ab3@28517>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
00035E92 <AmiBlitz3.ab3@28518>   TST.l D0
00035E96 <AmiBlitz3.ab3@28519>   BNE.b 'loop2
00035E9A <AmiBlitz3.ab3@28520>  BRA.w 'done2
00035EA0 <AmiBlitz3.ab3@28523>   TST.b xtra_versionnumber
00035EA4 <AmiBlitz3.ab3@28524>    BNE.b 'nover0
00035EAC <AmiBlitz3.ab3@28525>   MOVE.w #$0080,set_autorun                                ;auto run on
00035EB6 <AmiBlitz3.ab3@28526>   MOVE.w default_interruptcheck,set_interruptcheck         ;interupt checking on
00035EBC <AmiBlitz3.ab3@28527>   CLR.w set_assemblercheck                                 ;assembler checking off
00035EC6 <AmiBlitz3.ab3@28528>   MOVE.w default_overflowcheck,set_overflowcheck           ;overflow chex
00035ECA <AmiBlitz3.ab3@28529>  BRA.b 'ver0
00035ECC <AmiBlitz3.ab3@28532>   MOVE.l D7,D1                                             ;load cli arg!
00035ED2 <AmiBlitz3.ab3@28533>   MOVE.l #str_cliarguments,D2
00035ED8 <AmiBlitz3.ab3@28534>   MOVE.l #116,D3                                           ; vorher 128 , jetzt 8 weniger fuer die Versionsdaten
00035EDC <AmiBlitz3.ab3@28535>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
00035EE2 <AmiBlitz3.ab3@28536>   MOVE.l #str_cliarguments,A0
00035EE8 <AmiBlitz3.ab3@28537>   ADDA.l #115,A0
00035EEE <AmiBlitz3.ab3@28538>   MOVE.l #0,(a0) ; terminate it!
00035EF0 <AmiBlitz3.ab3@28540>   MOVE.l D7,D1                                             ; I know, I know. Honitos started this horrible thing, see below...
00035EF6 <AmiBlitz3.ab3@28541>   MOVE.l #stacksize,D2
00035EFC <AmiBlitz3.ab3@28542>   MOVE.l #4,D3
00035F00 <AmiBlitz3.ab3@28543>   JSR _Read(A6)
00035F0A <AmiBlitz3.ab3@28544>   CMP.l ##MIN_STACKSIZE,stacksize
00035F0E <AmiBlitz3.ab3@28545>   BGE 'stackok
00035F18 <AmiBlitz3.ab3@28546>   MOVE.l ##MIN_STACKSIZE,stacksize
00035F1A <AmiBlitz3.ab3@28549>   MOVE.l D7,D1
00035F20 <AmiBlitz3.ab3@28550>   MOVE.l #versioninformation,D2
00035F26 <AmiBlitz3.ab3@28551>   MOVE.l #4,D3
00035F2A <AmiBlitz3.ab3@28552>   JSR _Read(A6)
00035F2C <AmiBlitz3.ab3@28554>   MOVE.l D7,D1
00035F32 <AmiBlitz3.ab3@28555>   MOVE.l #number_of_builds,D2
00035F38 <AmiBlitz3.ab3@28556>   MOVE.l #4,D3
00035F3C <AmiBlitz3.ab3@28557>   JSR _Read(A6)
00035F42 <AmiBlitz3.ab3@28563> 
00035F48 <AmiBlitz3.ab3@28564>   MOVE.l A7,errstack
00035F52 <AmiBlitz3.ab3@28565>   MOVE.l #'done2,errcont
00035F5A <AmiBlitz3.ab3@28566>   MOVE.w #$FFFF,ezerr
00035F60 <AmiBlitz3.ab3@28569>     MOVE.l #temp1,D2                                   ;LOAD maxobjectsvalues
00035F62 <AmiBlitz3.ab3@28570>     MOVEQ.l #$04,D3
00035F64 <AmiBlitz3.ab3@28571>     MOVE.l D7,D1
00035F68 <AmiBlitz3.ab3@28572>     JSR _Read(A6)
00035F6A <AmiBlitz3.ab3@28573>     TST.l D0
00035F6E <AmiBlitz3.ab3@28574>     BEQ.b 'done2
00035F74 <AmiBlitz3.ab3@28575>     MOVE.w temp1,D1
00035F76 <AmiBlitz3.ab3@28576>     TST.w d1                                               ;new
00035F7A <AmiBlitz3.ab3@28577>     BEQ 'done2                                         ;new
00035F80 <AmiBlitz3.ab3@28578>      JSR findlibnoerr
00035F86 <AmiBlitz3.ab3@28580>     CMP.l #0,a1
00035F8A <AmiBlitz3.ab3@28581>     BEQ 'dloop
00035F8E <AmiBlitz3.ab3@28582>     MOVE.l $12(A1),D0
00035F96 <AmiBlitz3.ab3@28583>     MOVE.w temp1+2,-$4(A1,D0.L)
00035F9A <AmiBlitz3.ab3@28584>  BRA.b 'dloop
00035F9E <AmiBlitz3.ab3@28590>   LEA residents_table(PC),A0
00035FA0 <AmiBlitz3.ab3@28591>   MOVEQ.l #$07,D0
00035FA4 <AmiBlitz3.ab3@28594>     CLR.l $40(A0)
00035FA8 <AmiBlitz3.ab3@28595>     LEA ResidentEntryStep(A0),A0   ; $44
00035FAC <AmiBlitz3.ab3@28596>   DBF D0,'loop3
00035FB0 <AmiBlitz3.ab3@28598>   MOVEM.l D7/A6,-(A7)
00035FB6 <AmiBlitz3.ab3@28599>   JSR init_buffers
00035FBC <AmiBlitz3.ab3@28600>   JSR reloadresident
00035FC0 <AmiBlitz3.ab3@28601>   MOVEM.l (A7)+,D7/A6
00035FC2 <AmiBlitz3.ab3@28602> RTS
00035FCA <AmiBlitz3.ab3@28606>   MOVE.b #$1,xtra_versionnumber                            ;.xtra version number...
00035FD0 <AmiBlitz3.ab3@28615>   LEA ptr_xtradata,A2
00035FD2 <AmiBlitz3.ab3@28616>   MOVEQ.l #$00,D4
00035FD4 <AmiBlitz3.ab3@28620>   MOVE.w (A2)+,D4                                          ; anzahl bytes zu schreiben
00035FD8 <AmiBlitz3.ab3@28621>   BEQ.b 'done
00035FDA <AmiBlitz3.ab3@28624>    MOVE.l (A2)+,D2
00035FDE <AmiBlitz3.ab3@28625>    BEQ.b 'loop
00035FE0 <AmiBlitz3.ab3@28627>    MOVE.l D4,D3
00035FE2 <AmiBlitz3.ab3@28628>    MOVE.l D7,D1                                            ; schreiben der daten in ptr_xtradata
00035FE6 <AmiBlitz3.ab3@28629>    JSR _Write(A6)                                          ; d1: file, d2: buffer, d3:length
00035FEA <AmiBlitz3.ab3@28630>  BRA.b 'loop2
00035FEC <AmiBlitz3.ab3@28633>   MOVE.l D7,D1
00035FF2 <AmiBlitz3.ab3@28634>   MOVE.l #str_cliarguments,D2
00035FF8 <AmiBlitz3.ab3@28635>   MOVE.l #116,D3
00035FFC <AmiBlitz3.ab3@28636>   JSR _Write(A6)                                           ; hier werden 116 bytes an cli_arguments geschrieben !!
00035FFE <AmiBlitz3.ab3@28638>   MOVE.l D7,D1
00036004 <AmiBlitz3.ab3@28639>   MOVE.l #stacksize,D2
0003600A <AmiBlitz3.ab3@28640>   MOVE.l #4,D3
0003600E <AmiBlitz3.ab3@28641>   JSR _Write(A6)
00036010 <AmiBlitz3.ab3@28643>   MOVE.l D7,D1
00036016 <AmiBlitz3.ab3@28644>   MOVE.l #versioninformation,D2
0003601C <AmiBlitz3.ab3@28645>   MOVE.l #4,D3
00036020 <AmiBlitz3.ab3@28646>   JSR _Write(A6)
00036022 <AmiBlitz3.ab3@28648>   MOVE.l D7,D1
00036028 <AmiBlitz3.ab3@28649>   MOVE.l #number_of_builds,D2
0003602E <AmiBlitz3.ab3@28650>   MOVE.l #4,D3
00036032 <AmiBlitz3.ab3@28651>   JSR _Write(A6)
00036038 <AmiBlitz3.ab3@28657>   LEA libpointer,A2
0003603A <AmiBlitz3.ab3@28660>     MOVE.l (A2),D0
0003603E <AmiBlitz3.ab3@28661>     BEQ.w 'done2
00036040 <AmiBlitz3.ab3@28662>     MOVEA.l D0,A2
00036044 <AmiBlitz3.ab3@28663>     MOVE.l $12(A2),D4
00036048 <AmiBlitz3.ab3@28664>     TST.w -$2(A2,D4.L)
0003604C <AmiBlitz3.ab3@28665>     BEQ.w 'loop3
00036050 <AmiBlitz3.ab3@28667>     LEA $4(A2),A0
00036052 <AmiBlitz3.ab3@28668>     MOVE.l A0,D2
00036054 <AmiBlitz3.ab3@28669>     MOVEQ.l #$02,D3
00036056 <AmiBlitz3.ab3@28670>     MOVE.l D7,D1                                           ; schreiben der Libnum mit 2 bytes
0003605A <AmiBlitz3.ab3@28671>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
0003605E <AmiBlitz3.ab3@28673>     LEA -$4(A2,D4.L),A0
00036060 <AmiBlitz3.ab3@28674>     MOVE.l A0,D2
00036062 <AmiBlitz3.ab3@28675>     MOVEQ.l #$02,D3
00036064 <AmiBlitz3.ab3@28676>     MOVE.l D7,D1                                           ; schreiben der Max Objects mit 2 bytes
00036068 <AmiBlitz3.ab3@28677>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
0003606C <AmiBlitz3.ab3@28678>  BRA.w 'loop3
00036072 <AmiBlitz3.ab3@28683>   LEA XTRAEndPadBytes,A2 ; get the start address off the 4 fill/pad/termination bytes
00036074 <AmiBlitz3.ab3@28684>   MOVE.l A2,D2           ; move the address to d2
0003607A <AmiBlitz3.ab3@28685>   MOVE.l #4,D3           ; we only need 4 bytes to save
0003607C <AmiBlitz3.ab3@28686>   MOVE.l D7,D1           ; we set the file handle
00036080 <AmiBlitz3.ab3@28687>   JSR _Write(A6)         ; and we write it.
00036082 <AmiBlitz3.ab3@28689> RTS
00036088 <AmiBlitz3.ab3@28694>   LEA optssave,A0                      ; backup address
0003608E <AmiBlitz3.ab3@28695>   LEA ptr_xtradata,A1                  ; source address
00036090 <AmiBlitz3.ab3@28698>   MOVE.w (A1)+,D0                                          ;length of data move
00036094 <AmiBlitz3.ab3@28699>   BEQ.b 'backupdone
00036096 <AmiBlitz3.ab3@28700>   SUBQ.w #1,D0
00036098 <AmiBlitz3.ab3@28703>     MOVE.l (A1)+,D1
0003609C <AmiBlitz3.ab3@28704>     BEQ.b 'backuploop
0003609E <AmiBlitz3.ab3@28705>     MOVEA.l D1,A2
000360A0 <AmiBlitz3.ab3@28706>     MOVE.w D0,D1
000360A2 <AmiBlitz3.ab3@28709>       MOVE.b (A2)+,(A0)+
000360A6 <AmiBlitz3.ab3@28710>   DBF D1,'backuploop3
000360AA <AmiBlitz3.ab3@28712>  BRA.w 'backuploop2
000360B0 <AmiBlitz3.ab3@28716>   LEA bufferlist,A1
000360B2 <AmiBlitz3.ab3@28719>     MOVE.l (A1)+,D2
000360B6 <AmiBlitz3.ab3@28720>     BEQ.b 'loop4done
000360B8 <AmiBlitz3.ab3@28722>     MOVEA.l D2,A0
000360BA <AmiBlitz3.ab3@28723>     MOVE.l (A0),D2
000360BC <AmiBlitz3.ab3@28724>     ADDQ.w #8,A0
000360C2 <AmiBlitz3.ab3@28725>     JSR makelong
000360C6 <AmiBlitz3.ab3@28726>  BRA.b 'loop4
000360CC <AmiBlitz3.ab3@28729>   CLR.w state_of_residents                                 ;resident change
000360D2 <AmiBlitz3.ab3@28730>   CLR.w comsettings_message                                ;alloc change
000360D8 <AmiBlitz3.ab3@28731>   CLR.w maxobject_pos
000360DA <AmiBlitz3.ab3@28732> RTS   ; new tomsmart1
000360E0 <AmiBlitz3.ab3@28736>   LEA optssave,A0
000360E6 <AmiBlitz3.ab3@28737>   LEA ptr_xtradata,A1
000360E8 <AmiBlitz3.ab3@28740>   MOVE.w (A1)+,D0
000360EC <AmiBlitz3.ab3@28741>   BEQ.b 'restoredone
000360EE <AmiBlitz3.ab3@28742>   SUBQ.w #1,D0
000360F0 <AmiBlitz3.ab3@28745>     MOVE.l (A1)+,D1
000360F4 <AmiBlitz3.ab3@28746>     BEQ.b 'restoreloop1
000360F6 <AmiBlitz3.ab3@28747>     MOVEA.l D1,A2
000360F8 <AmiBlitz3.ab3@28748>     MOVE.w D0,D1
000360FA <AmiBlitz3.ab3@28751>       MOVE.b (A0)+,(A2)+
000360FE <AmiBlitz3.ab3@28752>   DBF D1,'restoreloop3
00036102 <AmiBlitz3.ab3@28754>  BRA.b 'restoreloop2
00036104 <AmiBlitz3.ab3@28757> RTS
0003610A <AmiBlitz3.ab3@28761>   JSR free_residents                    ; first free the allready loaded residents
00036110 <AmiBlitz3.ab3@28762>   JSR Clear_Residents_table             ; second clear the complete resident table
00036112 <AmiBlitz3.ab3@28763> RTS
0003611A <AmiBlitz3.ab3@28767>   MOVE.w #$FFFF,state_of_residents
00036120 <AmiBlitz3.ab3@28768>   MOVE.w state_of_residents,D0
00036126 <AmiBlitz3.ab3@28769>   JSR reloadresident
00036128 <AmiBlitz3.ab3@28770> RTS
0003612A <AmiBlitz3.ab3@28776>   MOVE.l d0,a1
00036130 <AmiBlitz3.ab3@28778>   MOVEA.l libpointer,A2
00036134 <AmiBlitz3.ab3@28781>     MOVE.l $12(A2),D0
00036138 <AmiBlitz3.ab3@28782>     TST.w -$2(A2,D0.L)
0003613C <AmiBlitz3.ab3@28783>      BEQ.w 'next
0003613E <AmiBlitz3.ab3@28784>     SUBQ.w #1,D1
00036142 <AmiBlitz3.ab3@28785>      BPL.w 'next
00036146 <AmiBlitz3.ab3@28787>     MOVEA.l -$1A(A2,D0.L),A3    ;token offset
00036148 <AmiBlitz3.ab3@28788>     ADDA.l A2,A3
0003614A <AmiBlitz3.ab3@28791>       MOVE.b (A3)+,(A1)+
0003614E <AmiBlitz3.ab3@28792>     BNE.w 'tt1
00036150 <AmiBlitz3.ab3@28794>     CLR.b -(A1)
00036154 <AmiBlitz3.ab3@28796>     MOVE.w -$4(A2,D0.L),D0
0003615A <AmiBlitz3.ab3@28798>     AND.l #$ffff,d0
0003615C <AmiBlitz3.ab3@28799>  RTS
0003615E <AmiBlitz3.ab3@28803>     MOVEA.l (A2),A2
00036162 <AmiBlitz3.ab3@28804> BRA.w 'loop
00036172 <AmiBlitz3.ab3@28809> str_maxobjects_name:   Dc.b "              ",0 : Even
00036182 <AmiBlitz3.ab3@28810> str_maxobjects_name2:  Dc.b "              ",0 : Even
00036186 <AmiBlitz3.ab3@28811> objectbuffer:          Dc.l #DEFAULT_OBJECTBUFFERSIZE  ; replaced with a constant tomsmart1
0003618A <AmiBlitz3.ab3@28812>                        Dc.l $00000000
00036196 <AmiBlitz3.ab3@28813> str_objectbuffer:      Dc.b "16384",0,0,0,0,0,0,0      ; string max 12 columns
0003619A <AmiBlitz3.ab3@28815> libsbuffer:            Dc.l #DEFAULT_LIBSBUFFERSIZE    ; replaced with a constant tomsmart1
0003619E <AmiBlitz3.ab3@28816>                        Dc.l $00000000
000361AA <AmiBlitz3.ab3@28817> str_libsbuffer:        Dc.b "32768",0,0,0,0,0,0,0      ;was "16384"; string max 12 columns
000361AE <AmiBlitz3.ab3@28819> systembuffer:          Dc.l #DEFAULT_SYSTEMBUFFERSIZE  ; system buffer  ; replaced with a constant tomsmart1
000361B2 <AmiBlitz3.ab3@28820>                        Dc.l $00000000
000361BE <AmiBlitz3.ab3@28821> str_systembuffer:      Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
000361C2 <AmiBlitz3.ab3@28823> databuffer:            Dc.l #DEFAULT_DATABUFFERSIZE    ; data buffer   ; replaced with a constant tomsmart1
000361C6 <AmiBlitz3.ab3@28824>                        Dc.l $00000000
000361D2 <AmiBlitz3.ab3@28825> str_databuffer:        Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
000361D6 <AmiBlitz3.ab3@28827> macrobuffer_size:      Dc.l #DEFAULT_MACROBUFFERSIZE   ; macro buffer ; was $00002000 ; replaced with a constant tomsmart1
000361DA <AmiBlitz3.ab3@28828>                        Dc.l $00000000
000361E6 <AmiBlitz3.ab3@28829> str_macrobuffer:       Dc.b "40000",0,0,0,0,0,0,0      ; string max 12 columns
000361EA <AmiBlitz3.ab3@28831> stringbuffer:          Dc.l #DEFAULT_STRINGBUFFERSIZE  ; string buffer ; replaced with a constant tomsmart1
000361EE <AmiBlitz3.ab3@28832>                        Dc.l $00000000
000361FA <AmiBlitz3.ab3@28833> str_stringbuffer:      Dc.b "10240",0,0,0,0,0,0,0      ; string max 12 columns
000361FC <AmiBlitz3.ab3@28835> maxobjects_value:      Dc.w $0064
00036200 <AmiBlitz3.ab3@28836>                        Dc.l $00000000
0003620C <AmiBlitz3.ab3@28837> str_maxobjects_value:  Dc.b "100",0,0,0,0,0,0,0,0,0    ; string max 12 columns
0003620E <AmiBlitz3.ab3@28839> maxobjects_value2:     Dc.w $0014
00036210 <AmiBlitz3.ab3@28840>                        Dc.w $0000
0003621C <AmiBlitz3.ab3@28842> str_maxobjects_value2: Dc.b "20",0,0,0,0,0,0,0,0,0,0   ; string max 12 columns
0003621D <AmiBlitz3.ab3@28846> set_create_iconfile:   Dc.b $00
00036220 <AmiBlitz3.ab3@28847> create_iconfile:       Dc.b $80,$01,$01                    ;create icon
00036222 <AmiBlitz3.ab3@28848>                        Dc.b $00,$01
00036223 <AmiBlitz3.ab3@28850> set_use_debugger:      Dc.b $00                            ; Flags.w
00036226 <AmiBlitz3.ab3@28851> use_debugger:          Dc.b $80,$01,$01                    ; Activation.w
00036228 <AmiBlitz3.ab3@28852>                        Dc.b $00,$01                        ; GadgetType.w
0003622C <AmiBlitz3.ab3@28853> AL_0_11010:            Dc.b $00,$80,$01,$01                ; flags, activation
00036230 <AmiBlitz3.ab3@28854> AL_0_1103C:            Dc.b $00,$80,$01,$01                ; flags, activation
00036234 <AmiBlitz3.ab3@28855> AL_0_11068:            Dc.b $00,$80,$01,$01                ; flags, activation
00036236 <AmiBlitz3.ab3@28856> AL_0_11094:            Ds.w 1
00036237 <AmiBlitz3.ab3@28858> set_make_smallestcode: Ds.b 1
0003623A <AmiBlitz3.ab3@28859> make_smallestcode:     Dc.b $00,$01,$01                    ;make smallest
0003623C <AmiBlitz3.ab3@28860>                        Dc.b $00,$01
0003623D <AmiBlitz3.ab3@28861> set_link_debuginfo:    Ds.b 1
00036240 <AmiBlitz3.ab3@28862> link_debuginfo:        Dc.b $00,$01,$01                    ;create debuginfo
00036242 <AmiBlitz3.ab3@28863>                        Dc.b $00,$01
00036462 <AmiBlitz3.ab3@28868>   Ds.l 136         ;resident files STEP $44 piece 8
000364E2 <AmiBlitz3.ab3@28873> str_calcexpression:        Ds.l 32
000364E6 <AmiBlitz3.ab3@28874> destbufferend_backup_calc: Ds.l 1             ; was calclibat
000364F0 <AmiBlitz3.ab3@28882>   MOVE.l destbufferend,destbufferend_backup_calc
000364F6 <AmiBlitz3.ab3@28884> 
000364FC <AmiBlitz3.ab3@28886>   MOVE.l A7,errstack
00036506 <AmiBlitz3.ab3@28887>   MOVE.l #Calc_Error_Exit,errcont
00036530 <AmiBlitz3.ab3@28895>   !basic         ; get the flage for the conversion form the editor
00036574 <AmiBlitz3.ab3@28896>   !ComData_GetW{comWord_CalculatorButtonBinFlag,D0} : MOVE.w d0,CalculatorButtonBinFlag
000365B8 <AmiBlitz3.ab3@28897>   !ComData_GetW{comWord_CalculatorButtonDecFlag,D0} : MOVE.w d0,CalculatorButtonDecFlag
000365D6 <AmiBlitz3.ab3@28898>   !asm
000365DC <AmiBlitz3.ab3@28901>   LEA str_calcexpression,A0
000365E2 <AmiBlitz3.ab3@28909>   JSR setcvars
000365E8 <AmiBlitz3.ab3@28910>   JSR setsvars
000365EE <AmiBlitz3.ab3@28912>   CLR.w connest             ;no idea...
000365F4 <AmiBlitz3.ab3@28913>   LEA str_calcexpression,A5
000365FA <AmiBlitz3.ab3@28914>   JSR evalconst3            ;evaluate constant
00036600 <AmiBlitz3.ab3@28916>   LEA str_calcexpression,A0
00036602 <AmiBlitz3.ab3@28917>   TST.l D3
00036606 <AmiBlitz3.ab3@28918>    BPL.w 'ispos
0003660A <AmiBlitz3.ab3@28919>   MOVE.b #$2D,(A0)+         ;'-'
0003660C <AmiBlitz3.ab3@28920>   NEG.l D3
00036614 <AmiBlitz3.ab3@28923>   CMPI.w #$80,CalculatorButtonDecFlag
00036618 <AmiBlitz3.ab3@28924>    BEQ.w 'dec
0003661A <AmiBlitz3.ab3@28925>   MOVEQ.l #$00,D1
00036622 <AmiBlitz3.ab3@28926>   CMPI.w #$80,CalculatorButtonBinFlag
00036626 <AmiBlitz3.ab3@28927>    BNE.w 'hex
00036628 <AmiBlitz3.ab3@28930>   MOVEQ.l #$1F,D0
0003662C <AmiBlitz3.ab3@28931>   MOVE.b #$25,(A0)+      ;'%'
0003662E <AmiBlitz3.ab3@28934>       LSL.l #1,D3
00036632 <AmiBlitz3.ab3@28935>        BCC.w 'bzero
00036636 <AmiBlitz3.ab3@28936>       MOVE.b #"1",(A0)+
00036638 <AmiBlitz3.ab3@28937>       MOVEQ.l #-$01,D1
0003663C <AmiBlitz3.ab3@28938>   BRA.w 'bnext
0003663E <AmiBlitz3.ab3@28941>       TST.w D1
00036642 <AmiBlitz3.ab3@28942>       BEQ.w 'bnext
00036646 <AmiBlitz3.ab3@28943>       MOVE.b #"0",(A0)+
0003664A <AmiBlitz3.ab3@28946>  DBF D0,'bloop
0003664C <AmiBlitz3.ab3@28949>   TST.w D1
00036650 <AmiBlitz3.ab3@28950>   BNE.w 'pc1
00036654 <AmiBlitz3.ab3@28951>   MOVE.b #"0",(A0)+
00036656 <AmiBlitz3.ab3@28954>   CLR.b (A0)
0003665A <AmiBlitz3.ab3@28955>  BRA.w 'pc
0003665C <AmiBlitz3.ab3@28958>   MOVEQ.l #$07,D0
00036660 <AmiBlitz3.ab3@28959>   MOVE.b #$24,(A0)+  ;'$'
00036662 <AmiBlitz3.ab3@28962>     MOVE.l D3,D2
00036664 <AmiBlitz3.ab3@28963>     SWAP D2
00036666 <AmiBlitz3.ab3@28964>     LSR.w #8,D2
00036668 <AmiBlitz3.ab3@28965>     LSR.w #4,D2
0003666C <AmiBlitz3.ab3@28966>     ADDI.w #$30,D2
00036670 <AmiBlitz3.ab3@28967>     CMP.w #$3A,D2
00036674 <AmiBlitz3.ab3@28968>      BCS.w 'hok
00036676 <AmiBlitz3.ab3@28969>     ADDQ.w #7,D2
0003667A <AmiBlitz3.ab3@28972>     CMP.w #$30,D2
0003667E <AmiBlitz3.ab3@28973>     BEQ.w 'hzero
00036680 <AmiBlitz3.ab3@28974>     MOVE.b D2,(A0)+
00036682 <AmiBlitz3.ab3@28975>     MOVEQ.l #-$01,D1
00036686 <AmiBlitz3.ab3@28976>   BRA.w 'hnext
00036688 <AmiBlitz3.ab3@28979>     TST.w D1
0003668C <AmiBlitz3.ab3@28980>      BEQ.w 'hnext
0003668E <AmiBlitz3.ab3@28981>     MOVE.b D2,(A0)+
00036690 <AmiBlitz3.ab3@28984>     LSL.l #4,D3
00036694 <AmiBlitz3.ab3@28985>  DBF D0,'hloop
00036698 <AmiBlitz3.ab3@28987>  BRA.w 'bdone
0003669A <AmiBlitz3.ab3@28990>   MOVE.l D3,D2
000366A0 <AmiBlitz3.ab3@28991>   JSR makelong          ;to long...
000366AA <AmiBlitz3.ab3@28998>   MOVE.l destbufferend_backup_calc,destbufferend
000366AC <AmiBlitz3.ab3@29000> RTS                         ; added tomsmart 2012 03 07 vor Calculator in PED
000367AB <AmiBlitz3.ab3@29004> str_cliarguments: Ds.b 255   ; a command line can acutally be 255 characters long
000367AC <AmiBlitz3.ab3@29006> Even
000367AE <AmiBlitz3.ab3@29024>     MOVE.b (a5)+,d0
000367B2 <AmiBlitz3.ab3@29025>     BEQ 'l2
000367B6 <AmiBlitz3.ab3@29026>     CMP.b #$80,d0
000367BA <AmiBlitz3.ab3@29027>     BNE 'l1
000367BC <AmiBlitz3.ab3@29028>     MOVE.b (a5)+,d0
000367C0 <AmiBlitz3.ab3@29029>     BEQ 'l2
000367C4 <AmiBlitz3.ab3@29030>     CMP.b #$02,d0
000367C8 <AmiBlitz3.ab3@29031>   BNE 'l1
000367CC <AmiBlitz3.ab3@29034>     CMP.b #$20,(a5)+
000367D0 <AmiBlitz3.ab3@29035>   BEQ 'l3
000367D2 <AmiBlitz3.ab3@29036>   SUBQ.l #1,a5
000367D4 <AmiBlitz3.ab3@29037>   TST.b (a5)
000367D8 <AmiBlitz3.ab3@29038>   BEQ 'l2
000367DC <AmiBlitz3.ab3@29039>   CMP.w #$8008,(a5)
000367E0 <AmiBlitz3.ab3@29040>   BEQ 'l4
000367E4 <AmiBlitz3.ab3@29041>   CMP.w #$8009,(a5)
000367E8 <AmiBlitz3.ab3@29042>   BEQ 'l4
000367EC <AmiBlitz3.ab3@29043>  BRA 'l1
000367EE <AmiBlitz3.ab3@29046>   ADDQ.l #2,a5
000367F4 <AmiBlitz3.ab3@29047>   JSR skiprest
000367F6 <AmiBlitz3.ab3@29048> RTS
000367FC <AmiBlitz3.ab3@29051>   JSR nextline
00036800 <AmiBlitz3.ab3@29052>   BNE 'l1
00036802 <AmiBlitz3.ab3@29053> RTS
0003682C <AmiBlitz3.ab3@29057>   !basic
00036836 <AmiBlitz3.ab3@29058>   DateFormat 1
00036844 <AmiBlitz3.ab3@29059>   i.l=SystemDate
0003686A <AmiBlitz3.ab3@29060>   a$=Date$ (i)
000368E8 <AmiBlitz3.ab3@29061>   a$=Replace$(a$,"/",".")
000368EE <AmiBlitz3.ab3@29062>   GetD0 &a$
000368F0 <AmiBlitz3.ab3@29063>   MOVEQ #8,d2
000368F2 <AmiBlitz3.ab3@29064>   MOVE.l d0,a0
000368F4 <AmiBlitz3.ab3@29067>     MOVE.b (a0)+,d1
000368FA <AmiBlitz3.ab3@29068>     JSR pokedata1b
000368FE <AmiBlitz3.ab3@29069>  DBF d2,'l1
00036900 <AmiBlitz3.ab3@29071>   MOVEQ #0,d0
00036902 <AmiBlitz3.ab3@29072>   MOVE.b (a0)+,d0
00036920 <AmiBlitz3.ab3@29073>   !asm
00036926 <AmiBlitz3.ab3@29074>   ADD.l #9,d2
0003692C <AmiBlitz3.ab3@29075>   ADD.l #9,a5
0003692E <AmiBlitz3.ab3@29076> RTS
00036958 <AmiBlitz3.ab3@29080>   !basic
00036962 <AmiBlitz3.ab3@29081>   DateFormat 0
00036970 <AmiBlitz3.ab3@29082>   i.l=SystemDate
00036996 <AmiBlitz3.ab3@29083>   a$=Date$ (i)
00036A14 <AmiBlitz3.ab3@29084>   a$=Replace$(a$,"/",".")
00036A1A <AmiBlitz3.ab3@29085>   GetD0 &a$
00036A1C <AmiBlitz3.ab3@29086>   MOVEQ #8,d2
00036A1E <AmiBlitz3.ab3@29087>   MOVE.l d0,a0
00036A20 <AmiBlitz3.ab3@29090>     MOVE.b (a0)+,d1
00036A26 <AmiBlitz3.ab3@29091>     JSR pokedata1b
00036A2A <AmiBlitz3.ab3@29092>  DBF d2,'l1
00036A2C <AmiBlitz3.ab3@29094>   MOVEQ #0,d0
00036A2E <AmiBlitz3.ab3@29095>   MOVE.b (a0)+,d0
00036A4C <AmiBlitz3.ab3@29096>   !asm
00036A52 <AmiBlitz3.ab3@29097>   ADD.l #9,d2
00036A58 <AmiBlitz3.ab3@29098>   ADD.l #13,a5
00036A5A <AmiBlitz3.ab3@29099> RTS
00036A84 <AmiBlitz3.ab3@29103>   !basic
00036A8E <AmiBlitz3.ab3@29104>   DateFormat 1
00036A9C <AmiBlitz3.ab3@29105>   i.l = SystemDate
00036AC2 <AmiBlitz3.ab3@29106>   a$ = Date$ (i)
00036B40 <AmiBlitz3.ab3@29107>   a$ = Replace$(a$,"/",".")
00036B46 <AmiBlitz3.ab3@29108>   GetD0 &a$
00036B48 <AmiBlitz3.ab3@29109>   MOVEQ #8,d2
00036B4A <AmiBlitz3.ab3@29110>   MOVE.l d0,a0
00036B4C <AmiBlitz3.ab3@29113>     MOVE.b (a0)+,d1
00036B52 <AmiBlitz3.ab3@29114>     JSR writebyte
00036B56 <AmiBlitz3.ab3@29115>  DBF d2,'l1
00036B58 <AmiBlitz3.ab3@29117>   MOVEQ #0,d0
00036B5A <AmiBlitz3.ab3@29118>   MOVE.b (a0)+,d0
00036B78 <AmiBlitz3.ab3@29119>   !asm
00036B7E <AmiBlitz3.ab3@29120>   ADD.l #9,a5
00036B80 <AmiBlitz3.ab3@29121> RTS
00036BAA <AmiBlitz3.ab3@29125>   !basic
00036BB4 <AmiBlitz3.ab3@29126>   DateFormat 0
00036BC2 <AmiBlitz3.ab3@29127>   i.l=SystemDate
00036BE8 <AmiBlitz3.ab3@29128>   a$=Date$ (i)
00036C66 <AmiBlitz3.ab3@29129>   a$=Replace$(a$,"/",".")
00036C6C <AmiBlitz3.ab3@29130>   GetD0 &a$
00036C6E <AmiBlitz3.ab3@29131>   MOVEQ #8,d2
00036C70 <AmiBlitz3.ab3@29132>   MOVE.l d0,a0
00036C72 <AmiBlitz3.ab3@29135>     MOVE.b (a0)+,d1
00036C78 <AmiBlitz3.ab3@29136>     JSR writebyte
00036C7C <AmiBlitz3.ab3@29137>  DBF d2,'l1
00036C7E <AmiBlitz3.ab3@29139>   MOVEQ #0,d0
00036C80 <AmiBlitz3.ab3@29140>   MOVE.b (a0)+,d0
00036C9E <AmiBlitz3.ab3@29141>   !asm
00036CA4 <AmiBlitz3.ab3@29142>   ADD.l #13,a5
00036CA6 <AmiBlitz3.ab3@29143> RTS
00036CA8 <AmiBlitz3.ab3@29147>   MOVE.l d2,-(a7)                                          ; D2 -> stack
00036CAA <AmiBlitz3.ab3@29148>   MOVE.l a5,d0
00036CD4 <AmiBlitz3.ab3@29149>   !basic
00036CD8 <AmiBlitz3.ab3@29150>   _myD0.l = PutD0
00036CE2 <AmiBlitz3.ab3@29151>   If _myD0
00036D28 <AmiBlitz3.ab3@29152>     verstring$ = Left$(Peek.s(_myD0),9+3)
00036D7A <AmiBlitz3.ab3@29153>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00036D80 <AmiBlitz3.ab3@29154>   Else
00036DBA <AmiBlitz3.ab3@29155>     error{"INTERNAL: Invalid pointer in version_string!"}
00036DCA <AmiBlitz3.ab3@29160>   actual_version.l = Peek.l(?versioninformation)
00036DDA <AmiBlitz3.ab3@29161>   actual_build.l   = Peek.l(?number_of_builds)
00036DFE <AmiBlitz3.ab3@29163>   Format "00"
00036E34 <AmiBlitz3.ab3@29164>   Select verstring$
00036E58 <AmiBlitz3.ab3@29166>     Case "VER_MAJOR"
00036E94 <AmiBlitz3.ab3@29167>      put_versionstr$ = Str$(actual_version LSR 24)
00036EBE <AmiBlitz3.ab3@29169>     Case "VER_MINOR"
00036F02 <AmiBlitz3.ab3@29170>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
00036F2C <AmiBlitz3.ab3@29172>     Case "VER_PATCH"
00036F70 <AmiBlitz3.ab3@29173>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
00036F9A <AmiBlitz3.ab3@29175>     Case "VER_BUILD"
00036FBE <AmiBlitz3.ab3@29176>      Format ""
00036FF2 <AmiBlitz3.ab3@29177>      put_versionstr$ = Str$(actual_build)
00036FF8 <AmiBlitz3.ab3@29179>     Default
00037020 <AmiBlitz3.ab3@29180>      put_versionstr$ = "{unknown compilerconstant}"
0003702E <AmiBlitz3.ab3@29183>   End Select
00037052 <AmiBlitz3.ab3@29184>   Format ""
00037062 <AmiBlitz3.ab3@29186>   GetD0 FLen(put_versionstr$)                              ; laenge zielstring -> Stack
00037064 <AmiBlitz3.ab3@29187>   MOVE.l d0,d2
00037066 <AmiBlitz3.ab3@29188>   MOVE.l d2,-(a7)
0003706A <AmiBlitz3.ab3@29189>   SUB #1,d2
00037070 <AmiBlitz3.ab3@29191>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
00037072 <AmiBlitz3.ab3@29192>   MOVE.l d0,a0
00037074 <AmiBlitz3.ab3@29195>     MOVE.b (a0)+,d1
0003707A <AmiBlitz3.ab3@29196>     JSR pokedata1b
0003707E <AmiBlitz3.ab3@29197>  DBF d2,'l1
00037080 <AmiBlitz3.ab3@29199>   MOVEQ #0,d0
0003709E <AmiBlitz3.ab3@29200>   !asm
000370A0 <AmiBlitz3.ab3@29201>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
000370A2 <AmiBlitz3.ab3@29202>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
000370A4 <AmiBlitz3.ab3@29203>   ADD.l d0,d2
000370AA <AmiBlitz3.ab3@29204>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
000370AC <AmiBlitz3.ab3@29205>   MOVEQ #0,d0
000370AE <AmiBlitz3.ab3@29206> RTS
000370B0 <AmiBlitz3.ab3@29210>   MOVE.l a5,d0
000370DA <AmiBlitz3.ab3@29211>   !basic
000370DE <AmiBlitz3.ab3@29212>   _myD0.l = PutD0
000370E8 <AmiBlitz3.ab3@29213>   If _myD0
0003712E <AmiBlitz3.ab3@29214>     verstring$ = Left$(Peek.s(_myD0),9+3)
00037180 <AmiBlitz3.ab3@29215>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00037186 <AmiBlitz3.ab3@29216>   Else
000371C0 <AmiBlitz3.ab3@29217>     error{"INTERNAL: Invalid pointer in version_string_dc!"}
000371D0 <AmiBlitz3.ab3@29222>   actual_version.l = Peek.l(?versioninformation)
000371E0 <AmiBlitz3.ab3@29223>   actual_build.l   = Peek.l(?number_of_builds)
00037204 <AmiBlitz3.ab3@29225>   Format ""
0003723A <AmiBlitz3.ab3@29226>   Select verstring$
0003725E <AmiBlitz3.ab3@29228>     Case "VER_MAJOR"
0003729A <AmiBlitz3.ab3@29229>      put_versionstr$ = Str$(actual_version LSR 24)
000372C4 <AmiBlitz3.ab3@29231>     Case "VER_MINOR"
00037308 <AmiBlitz3.ab3@29232>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
00037332 <AmiBlitz3.ab3@29234>     Case "VER_PATCH"
00037376 <AmiBlitz3.ab3@29235>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
000373A0 <AmiBlitz3.ab3@29237>     Case "VER_BUILD"
000373C4 <AmiBlitz3.ab3@29238>      Format ""
000373F8 <AmiBlitz3.ab3@29239>      put_versionstr$ = Str$(actual_build)
000373FE <AmiBlitz3.ab3@29241>     Default
00037426 <AmiBlitz3.ab3@29242>      put_versionstr$ = "{unknown compilerconstant}"
00037434 <AmiBlitz3.ab3@29244>   End Select
00037458 <AmiBlitz3.ab3@29245>   Format ""
0003746E <AmiBlitz3.ab3@29247>   GetD0 FLen(put_versionstr$)-1
00037470 <AmiBlitz3.ab3@29248>   MOVE.l d0,d2
00037476 <AmiBlitz3.ab3@29250>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
00037478 <AmiBlitz3.ab3@29251>   MOVE.l d0,a0
0003747A <AmiBlitz3.ab3@29254>     MOVE.b (a0)+,d1
00037480 <AmiBlitz3.ab3@29255>     JSR writebyte
00037484 <AmiBlitz3.ab3@29256>  DBF d2,'l1
00037486 <AmiBlitz3.ab3@29258>   MOVEQ #0,d0
00037488 <AmiBlitz3.ab3@29259>   MOVE.b -(a0),d0                                          ; letztes Zeichen in D0
000374A6 <AmiBlitz3.ab3@29260>   !asm
000374AC <AmiBlitz3.ab3@29261>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
000374AE <AmiBlitz3.ab3@29262> RTS
000374B0 <AmiBlitz3.ab3@29364>   MOVE.l a5,-(a7)
000374DC <AmiBlitz3.ab3@29365>   !fget
000374E0 <AmiBlitz3.ab3@29366>   CMP.w #".",d0
000374E4 <AmiBlitz3.ab3@29367>   BNE 'skip
000374E8 <AmiBlitz3.ab3@29368>   MOVEM.l a2/d2,-(a7)
000374EE <AmiBlitz3.ab3@29369>   LEA newtypebase,a2
000374F4 <AmiBlitz3.ab3@29370>   JSR getparameter2
000374F8 <AmiBlitz3.ab3@29371>   BEQ.w JUMP_syntaxerr
000374FE <AmiBlitz3.ab3@29372>   JSR findtype
00037502 <AmiBlitz3.ab3@29373>   BNE.w JUMP_notypeerr2
00037508 <AmiBlitz3.ab3@29374>   MOVE.l a2,typetocast
0003750C <AmiBlitz3.ab3@29375>   MOVEM.l (a7)+,a2/d2
00037510 <AmiBlitz3.ab3@29376>   CMP.w #")",d0
00037514 <AmiBlitz3.ab3@29377>   BNE JUMP_errorbracketmiss
00037516 <AmiBlitz3.ab3@29378>   ADDQ.l #4,a7
00037542 <AmiBlitz3.ab3@29379>   !fget
00037548 <AmiBlitz3.ab3@29380>   JMP nocast
0003754A <AmiBlitz3.ab3@29383>   MOVE.l (a7)+,a5
00037550 <AmiBlitz3.ab3@29384> JMP bracket
00037556 <AmiBlitz3.ab3@29387> JUMP_errorbracketmiss JMP errorbracketmiss
00037580 <AmiBlitz3.ab3@29390> Function.l ab3_GetIncludeLock{filename.s}
000375A0 <AmiBlitz3.ab3@29391>   incLock.l  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub
000375F8 <AmiBlitz3.ab3@29392>   ex.s       = dos_GetExt{filename}
0003760C <AmiBlitz3.ab3@29394>   If incLock = False
00037680 <AmiBlitz3.ab3@29395>     filename = dos_SetExt{filename,"ab3"}
000376A0 <AmiBlitz3.ab3@29396>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab3
000376B4 <AmiBlitz3.ab3@29399>   If incLock = False
00037728 <AmiBlitz3.ab3@29400>     filename = dos_SetExt{filename,"ab2"}
00037748 <AmiBlitz3.ab3@29401>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab2
0003775C <AmiBlitz3.ab3@29404>   If incLock = False
000377D0 <AmiBlitz3.ab3@29405>     filename = dos_SetExt{filename,"bb2"}
000377F0 <AmiBlitz3.ab3@29406>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.bb2
00037804 <AmiBlitz3.ab3@29409>   If incLock = False
00037896 <AmiBlitz3.ab3@29410>     filename = dos_SetExt{filename,ex+".ab3"}
000378B6 <AmiBlitz3.ab3@29411>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab3
000378CA <AmiBlitz3.ab3@29414>   If incLock = False
0003793E <AmiBlitz3.ab3@29415>     filename = dos_SetExt{filename,"ab2"}
0003795E <AmiBlitz3.ab3@29416>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab2
00037972 <AmiBlitz3.ab3@29419>   If incLock = False
000379E6 <AmiBlitz3.ab3@29420>     filename = dos_SetExt{filename,"bb2"}
00037A06 <AmiBlitz3.ab3@29421>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.bb2
00037A10 <AmiBlitz3.ab3@29424>  Function Return incLock
00037A2A <AmiBlitz3.ab3@29425> End Function
00037A54 <AmiBlitz3.ab3@29429>   !basic
00037A7E <AmiBlitz3.ab3@29430>   incString.s = Peek$(?ptr_parameterstore)
00037AAC <AmiBlitz3.ab3@29432>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
00037AB0 <AmiBlitz3.ab3@29433>   incDirP.l   = PutD0                                       ;    "
00037AD8 <AmiBlitz3.ab3@29434>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
00037B58 <AmiBlitz3.ab3@29435>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
00037B8A <AmiBlitz3.ab3@29436>   incLock.l   = ab3_GetIncludeLock{incFile}                 ; check if file exist
00037B9E <AmiBlitz3.ab3@29438>   If incLock = False ; not found => check default Include Directory
00037BAE <AmiBlitz3.ab3@29439>     incDirP.l = Peek.l(?incd)
00037BB8 <AmiBlitz3.ab3@29440>     If incDirP
00037BE0 <AmiBlitz3.ab3@29441>       incDir_.s = Peek.s(incDirP)
00037BE6 <AmiBlitz3.ab3@29442>     Else
00037C50 <AmiBlitz3.ab3@29443>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00037CD0 <AmiBlitz3.ab3@29445>     incFile.s = dos_AddPart{incDir_,incString}
00037D02 <AmiBlitz3.ab3@29446>     incLock.l = ab3_GetIncludeLock{incFile}
00037D16 <AmiBlitz3.ab3@29449>   If incLock = False ; not found => check relative to current source
00037D2E <AmiBlitz3.ab3@29450>     incDepth.l = Peek.w(?ininclude)-1
00037D54 <AmiBlitz3.ab3@29451>     If incDepth >= 0 AND incDepth < #maxincludes
00037DB4 <AmiBlitz3.ab3@29452>       incDir_.s = dos_PathPart{incdim (incDepth)} ;= Peek.s(?includetemp2)
00037E34 <AmiBlitz3.ab3@29453>       incFile.s = dos_AddPart{incDir_,incString}
00037E66 <AmiBlitz3.ab3@29454>       incLock.l = ab3_GetIncludeLock{incFile}
00037E7A <AmiBlitz3.ab3@29458>   If incLock = False ; still not found => check default Include Directory and name only
00037E8A <AmiBlitz3.ab3@29459>     incDirP.l = Peek.l(?incd)
00037E94 <AmiBlitz3.ab3@29460>     If incDirP
00037EBC <AmiBlitz3.ab3@29461>       incDir_.s = Peek.s(incDirP)
00037EC2 <AmiBlitz3.ab3@29462>     Else
00037F2C <AmiBlitz3.ab3@29463>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00037FDA <AmiBlitz3.ab3@29465>     incFile.s = dos_AddPart{incDir_,dos_FilePart{incString}}
0003800C <AmiBlitz3.ab3@29466>     incLock.l = ab3_GetIncludeLock{incFile}
00038016 <AmiBlitz3.ab3@29469>   If incLock
0003802C <AmiBlitz3.ab3@29470>     MaxLen incFile = 1024
00038050 <AmiBlitz3.ab3@29471>     NameFromLock_ incLock,&incFile,1024
0003807A <AmiBlitz3.ab3@29472>     incFile = Peek.s(&incFile)
000380B2 <AmiBlitz3.ab3@29473>     Poke$ ?ptr_parameterstore,incFile
000380C6 <AmiBlitz3.ab3@29474>     i = FLen(incFile)
000380D2 <AmiBlitz3.ab3@29475>     GetReg d0,i
000380D8 <AmiBlitz3.ab3@29476>     MOVE.l d0,tempstore
000380E8 <AmiBlitz3.ab3@29477>     UnLock_ incLock
00038106 <AmiBlitz3.ab3@29480>   !asm
0003810C <AmiBlitz3.ab3@29481>   TST.l tempstore
00038110 <AmiBlitz3.ab3@29482>    BEQ 'l1
00038116 <AmiBlitz3.ab3@29483>   MOVE.l tempstore,d2
00038118 <AmiBlitz3.ab3@29486> RTS
00038142 <AmiBlitz3.ab3@29490>   !basic
0003816C <AmiBlitz3.ab3@29491>   incString.s = Peek$(?ptr_parameterstore)                  ; get the string
0003819A <AmiBlitz3.ab3@29492>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
0003819E <AmiBlitz3.ab3@29493>   incDirP.l   = PutD0                                       ;    "
000381C6 <AmiBlitz3.ab3@29494>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
00038246 <AmiBlitz3.ab3@29495>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
00038266 <AmiBlitz3.ab3@29496>   incLock.l   = Lock_(&incFile,#ACCESS_READ)                ; check if file exist
0003827A <AmiBlitz3.ab3@29498>   If incLock = False                                        ; not found => try orignal string only to find
0003829A <AmiBlitz3.ab3@29499>     incLock.l = Lock_(&incString,#ACCESS_READ)
000382A4 <AmiBlitz3.ab3@29502>   If incLock                                                ; found => store full path
000382BA <AmiBlitz3.ab3@29503>     MaxLen incFile = 1024
000382DE <AmiBlitz3.ab3@29504>     NameFromLock_ incLock,&incFile,1024
00038308 <AmiBlitz3.ab3@29505>     incFile = Peek.s(&incFile)
00038340 <AmiBlitz3.ab3@29506>     Poke$ ?ptr_parameterstore,incFile
0003834C <AmiBlitz3.ab3@29509> 
0003836A <AmiBlitz3.ab3@29510>   !asm
0003836C <AmiBlitz3.ab3@29511> RTS
00038372 <AmiBlitz3.ab3@29522>   JSR Aclearallvars
00038378 <AmiBlitz3.ab3@29523>   JSR free_unusedfunctions
00038382 <AmiBlitz3.ab3@29538>   MOVE.l #"NORE",reqmode
00038388 <AmiBlitz3.ab3@29539> JSR handle_compileerror
0003838A <AmiBlitz3.ab3@29542>   MOVE.l d0,-(a7)
0003838C <AmiBlitz3.ab3@29543>   MOVE.l a5,d0
00038396 <AmiBlitz3.ab3@29544>   !basica7
0003839A <AmiBlitz3.ab3@29545>   i.l = PutD0
000383A4 <AmiBlitz3.ab3@29546>   If i
000383CC <AmiBlitz3.ab3@29547>     a$ = Peek$(i)
000383FE <AmiBlitz3.ab3@29548>     b$ = Peeks$(i-7,7)
00038536 <AmiBlitz3.ab3@29550> 
0003853C <AmiBlitz3.ab3@29551>     MOVE.l d0,result
00038540 <AmiBlitz3.ab3@29553>   !asma7
00038542 <AmiBlitz3.ab3@29554>   MOVE.l (a7)+,d0
00038544 <AmiBlitz3.ab3@29555> RTS
0003856E <AmiBlitz3.ab3@29559>   !basic
0003859C <AmiBlitz3.ab3@29560>   !ComData_LEA{comStr_CurrentDir,D0}
000385A0 <AmiBlitz3.ab3@29561>   currentDirP.l = PutD0
000385CE <AmiBlitz3.ab3@29563>   !ComData_LEA{comStr_SourceName,D0}
000385D2 <AmiBlitz3.ab3@29564>   fileNameP.l = PutD0
000385FA <AmiBlitz3.ab3@29566>   check_dirname$  = Peek$(currentDirP)
00038622 <AmiBlitz3.ab3@29567>   check_filename$ = Peek$(fileNameP)
000386A8 <AmiBlitz3.ab3@29568>   If (olddirname$<>check_dirname$) OR (oldfilename$<>check_filename$)
000386AE <AmiBlitz3.ab3@29569>     JSR free_unusedfunctions
000386F8 <AmiBlitz3.ab3@29571>   olddirname$ = Peek$(check_dirname$)
00038742 <AmiBlitz3.ab3@29572>   oldfilename$ = Peek$(check_filename$)
0003876C <AmiBlitz3.ab3@29573>   For i = 0 To #maxincludes-1
00038780 <AmiBlitz3.ab3@29574>     incline(i) = 0
00038790 <AmiBlitz3.ab3@29575>   Next
000387AE <AmiBlitz3.ab3@29576>   !asm
000387B0 <AmiBlitz3.ab3@29577> RTS
000387B2 <AmiBlitz3.ab3@29581>   MOVEQ #0,d1
000387B4 <AmiBlitz3.ab3@29584>   MOVE.b (a5)+,d0
000387B8 <AmiBlitz3.ab3@29585>   BEQ 'er1
000387BC <AmiBlitz3.ab3@29586>   CMP.b #$20,d0
000387C0 <AmiBlitz3.ab3@29587>   BEQ 'l1
000387C2 <AmiBlitz3.ab3@29588>   ADDQ #1,d1
000387C6 <AmiBlitz3.ab3@29589>   CMP.b #$22,d0
000387CA <AmiBlitz3.ab3@29590>   BNE 'l1
000387CC <AmiBlitz3.ab3@29591>  RTS
000387D2 <AmiBlitz3.ab3@29594> JMP syntaxerr
000387F6 <AmiBlitz3.ab3@29598> erro1t   Dc.b "Only one BSS / Chip Segment allowed",0 : Even
00038814 <AmiBlitz3.ab3@29599> nodata   Dc.b "BSS Segment contains Data!!!!",0       : Even
0003881A <AmiBlitz3.ab3@29604>   TST.b exdebug
0003881E <AmiBlitz3.ab3@29605>   BNE 'l10
00038824 <AmiBlitz3.ab3@29606>   MOVE.l #$4e71,d1
0003882A <AmiBlitz3.ab3@29607>   JSR writeword
00038830 <AmiBlitz3.ab3@29608>   MOVE.l destpointer,d0
00038832 <AmiBlitz3.ab3@29609>   MOVE.l d0,d1
00038834 <AmiBlitz3.ab3@29610>   ADDQ.l #3,d1
0003883A <AmiBlitz3.ab3@29611>   AND.l #$fffffffc,d1
00038840 <AmiBlitz3.ab3@29612>   MOVE.l d1,destpointer
00038846 <AmiBlitz3.ab3@29613>   SUB.l destpointer,d0
0003884A <AmiBlitz3.ab3@29614>   BEQ 'lnf1
00038854 <AmiBlitz3.ab3@29615>   CMP.l #-1,bssstart
00038858 <AmiBlitz3.ab3@29616>   BNE 'lnf1
00038862 <AmiBlitz3.ab3@29617>   CMP.l #-1,chipstart
00038866 <AmiBlitz3.ab3@29618>   BNE 'lnf1
0003886C <AmiBlitz3.ab3@29619>   MOVE.l destpointer,a4
00038872 <AmiBlitz3.ab3@29620>   TST.w dontwrite_nomemleft
00038876 <AmiBlitz3.ab3@29621>   BNE 'lnf1
0003887C <AmiBlitz3.ab3@29622>   MOVE.w #$4e71,-2(a4)
00038886 <AmiBlitz3.ab3@29625>   CMP.l #-1,bssstart
0003888A <AmiBlitz3.ab3@29626>   BEQ 'l11
00038890 <AmiBlitz3.ab3@29627>   MOVE.l #erro1t,-(a7)
00038896 <AmiBlitz3.ab3@29628>  JMP handle_compileerror
000388A0 <AmiBlitz3.ab3@29631>   MOVE.l destpointer,bssstart
000388A8 <AmiBlitz3.ab3@29632>   MOVE.b #1,bssmode
000388AE <AmiBlitz3.ab3@29635>   TST.b chipmode
000388B2 <AmiBlitz3.ab3@29636>   BEQ 'l10
000388BC <AmiBlitz3.ab3@29637>   MOVE.l destpointer,chipend
000388C2 <AmiBlitz3.ab3@29638>   CLR.b chipmode
000388C8 <AmiBlitz3.ab3@29641>   JSR get1bytemain
000388CA <AmiBlitz3.ab3@29642> RTS
000388D0 <AmiBlitz3.ab3@29646>    TST.b exdebug
000388D4 <AmiBlitz3.ab3@29647>   BNE 'x1
000388DA <AmiBlitz3.ab3@29648>   MOVE.l destpointer,d0
000388E0 <AmiBlitz3.ab3@29649>   MOVE.l d0,realbssend
000388E6 <AmiBlitz3.ab3@29650>   MOVE.l #$4e71,d1
000388EC <AmiBlitz3.ab3@29651>   JSR writeword
000388F2 <AmiBlitz3.ab3@29652>   MOVE.l destpointer,d0
000388F4 <AmiBlitz3.ab3@29653>   MOVE.l d0,d1
000388F6 <AmiBlitz3.ab3@29654>   ADDQ.l #3,d1
000388FC <AmiBlitz3.ab3@29655>   AND.l #$fffffffc,d1
00038902 <AmiBlitz3.ab3@29656>   MOVE.l d1,destpointer
00038908 <AmiBlitz3.ab3@29657>   SUB.l destpointer,d0
0003890C <AmiBlitz3.ab3@29658>   BEQ 'lnf1
00038912 <AmiBlitz3.ab3@29659>   MOVE.l destpointer,a4
0003891C <AmiBlitz3.ab3@29660>   CMP.l #-1,bssstart
00038920 <AmiBlitz3.ab3@29661>   BNE 'lnf1
0003892A <AmiBlitz3.ab3@29662>   CMP.l #-1,chipstart
0003892E <AmiBlitz3.ab3@29663>   BNE 'lnf1
00038934 <AmiBlitz3.ab3@29664>   TST.w dontwrite_nomemleft
00038938 <AmiBlitz3.ab3@29665>   BNE 'lnf1
0003893E <AmiBlitz3.ab3@29666>   MOVE.w #$4e71,-2(a4)
00038944 <AmiBlitz3.ab3@29669>   TST.b bssmode
00038948 <AmiBlitz3.ab3@29670>   BEQ 'l10
00038952 <AmiBlitz3.ab3@29671>   MOVE.l destpointer,bssend
00038958 <AmiBlitz3.ab3@29672>   CLR.b bssmode
00038962 <AmiBlitz3.ab3@29677>   CMP.l #-1,chipstart
00038966 <AmiBlitz3.ab3@29678>   BEQ 'l11
0003896C <AmiBlitz3.ab3@29679>   MOVE.l #erro1t,-(a7)
00038972 <AmiBlitz3.ab3@29680>  JMP handle_compileerror
0003897C <AmiBlitz3.ab3@29683>   MOVE.l destpointer,chipstart
00038984 <AmiBlitz3.ab3@29684>   MOVE.b #1,chipmode
0003898A <AmiBlitz3.ab3@29687>   JSR get1bytemain
0003898C <AmiBlitz3.ab3@29688> RTS
000389B6 <AmiBlitz3.ab3@29692>   !basic
000389C8 <AmiBlitz3.ab3@29702>   i.l = Peek.w(?ininclude)
000389EE <AmiBlitz3.ab3@29703>   If i>=0 AND i<#maxincludes
00038A20 <AmiBlitz3.ab3@29704>     incdim (i) = Peek.s(?includetemp2)
00038A3A <AmiBlitz3.ab3@29705>     incline(i) = Peek.l(?includeline)
00038A44 <AmiBlitz3.ab3@29707>     If CLIMode
00038AF2 <AmiBlitz3.ab3@29708>       If cli_verbose>=2 Then NPrint "Include \\22",incdim(i),"\\22..."
00038B10 <AmiBlitz3.ab3@29712>   !asm
00038B12 <AmiBlitz3.ab3@29713> RTS
00038B3C <AmiBlitz3.ab3@29717>   !basic
00038B4E <AmiBlitz3.ab3@29718>   i.l = Peek.w(?ininclude)
00038B74 <AmiBlitz3.ab3@29719>   If i>=0 AND i<#maxincludes
00038BA4 <AmiBlitz3.ab3@29720>     incdim (i) = ""
00038BB8 <AmiBlitz3.ab3@29721>     incline(i) = 0
00038BF0 <AmiBlitz3.ab3@29722>     If i>0 Then Poke.l (?includeline),incline(i-1)+1
00038C0E <AmiBlitz3.ab3@29724>   !asm
00038C10 <AmiBlitz3.ab3@29725> RTS
00038C16 <AmiBlitz3.ab3@29729>   LEA replacedat,a0
00038C1A <AmiBlitz3.ab3@29730>   Dc.w $3181,$0A00                                         ;MOVE.w d1,0(a0,d0.l*2)
00038C1C <AmiBlitz3.ab3@29731> RTS
00038C22 <AmiBlitz3.ab3@29735>   TST.b fpu
00038C26 <AmiBlitz3.ab3@29736>   BEQ 'l1
00038C30 <AmiBlitz3.ab3@29739>   MOVE.l destpointer,newinitaddr
00038C36 <AmiBlitz3.ab3@29740>   JSR writeword
00038C3C <AmiBlitz3.ab3@29741>   JSR writelong
00038C3E <AmiBlitz3.ab3@29742> RTS
00038C40 <AmiBlitz3.ab3@29747>   TST.b (a5)
00038C44 <AmiBlitz3.ab3@29748>    BEQ.s 'll20
00038C48 <AmiBlitz3.ab3@29749>   CMP.b #$20,(a5)
00038C4C <AmiBlitz3.ab3@29750>    BNE.s 'll10
00038C4E <AmiBlitz3.ab3@29751>   ADDQ.l #1,a5
00038C52 <AmiBlitz3.ab3@29752>  BRA.s 'll21
00038C56 <AmiBlitz3.ab3@29755>   CMP.b #";",(a5)
00038C5A <AmiBlitz3.ab3@29756>   BNE.s 'll20
00038C5C <AmiBlitz3.ab3@29759>   TST.b (a5)+
00038C60 <AmiBlitz3.ab3@29760>   BEQ.s 'll23
00038C64 <AmiBlitz3.ab3@29761>  BRA.s 'll25
00038C66 <AmiBlitz3.ab3@29764>   SUBQ.l #1,a5
00038C68 <AmiBlitz3.ab3@29767> RTS
00038C6C <AmiBlitz3.ab3@29771>   MOVEM.l a2/d2,-(a7)
00038C6E <AmiBlitz3.ab3@29772>   MOVEQ #0,d2
00038C74 <AmiBlitz3.ab3@29773>   LEA ptr_parameterstore,a0
00038C7A <AmiBlitz3.ab3@29774>   LEA chartab,a2
00038C7C <AmiBlitz3.ab3@29777>   MOVE.b (a5),d0
00038C80 <AmiBlitz3.ab3@29778>   TST.b 0(a2,d0)
00038C84 <AmiBlitz3.ab3@29779>   BNE 'l10
00038C86 <AmiBlitz3.ab3@29780>   ADDQ.l #1,a5
00038C88 <AmiBlitz3.ab3@29781>   MOVE.b d0,(a0)+
00038C8A <AmiBlitz3.ab3@29782>   ADDQ.l #1,d2
00038C8E <AmiBlitz3.ab3@29783>  BRA fc2
00038C90 <AmiBlitz3.ab3@29786>   CLR.b (a0)+
00038C96 <AmiBlitz3.ab3@29787>   JSR findlabel2
00038C98 <AmiBlitz3.ab3@29788>   MOVE.l a2,a0
00038C9C <AmiBlitz3.ab3@29789>   MOVEM.l (a7)+,a2/d2
00038C9E <AmiBlitz3.ab3@29790> RTS
00038CA0 <AmiBlitz3.ab3@29794>   TST.l d0
00038CA4 <AmiBlitz3.ab3@29795>   BNE 'l10
00038CAA <AmiBlitz3.ab3@29796>     MOVE.l #syntax_,-(a7)
00038CB0 <AmiBlitz3.ab3@29797>  JMP handle_compileerror
00038CB6 <AmiBlitz3.ab3@29800>   CMP.l #1,d0
00038CBA <AmiBlitz3.ab3@29801>   BNE 'l20
00038CC0 <AmiBlitz3.ab3@29802>     MOVE.l #overflow,-(a7)
00038CC6 <AmiBlitz3.ab3@29803>  JMP handle_compileerror
00038CC8 <AmiBlitz3.ab3@29806>   ADD.l a2,d0
00038CCA <AmiBlitz3.ab3@29807>   MOVE.l d0,-(a7)
00038CD0 <AmiBlitz3.ab3@29808> JMP handle_compileerror
00038CD6 <AmiBlitz3.ab3@29812>   JMP _return
00038CDC <AmiBlitz3.ab3@29813>   JMP _return
00038CE2 <AmiBlitz3.ab3@29814>   JMP _return
00038CE8 <AmiBlitz3.ab3@29815>   JMP _return
00038CEE <AmiBlitz3.ab3@29816>   JMP _return
00038CF4 <AmiBlitz3.ab3@29817>   JMP _return
00038CFA <AmiBlitz3.ab3@29818>   JMP _return
00038D00 <AmiBlitz3.ab3@29819>   JMP _return
00038D06 <AmiBlitz3.ab3@29820>   JMP _return
00038D0C <AmiBlitz3.ab3@29821>   JMP _return
00038D12 <AmiBlitz3.ab3@29822>   JMP Atokejsr
00038D18 <AmiBlitz3.ab3@29823>   JMP writeinit
00038D1E <AmiBlitz3.ab3@29824>   JMP macroexecute
00038D24 <AmiBlitz3.ab3@29825>   JMP findnext
00038D2A <AmiBlitz3.ab3@29826>   JMP replacelib
00038D30 <AmiBlitz3.ab3@29827>   JMP findconstant2
00038D36 <AmiBlitz3.ab3@29828>   JMP findchar                                             ;char in d1
00038D3C <AmiBlitz3.ab3@29829>   JMP stripspaces
00038D42 <AmiBlitz3.ab3@29830>   JMP calc                                                 ;d0 varmode
00038D48 <AmiBlitz3.ab3@29831>   JMP error
00038D4E <AmiBlitz3.ab3@29832>   JMP writelong                                            ;d1 value
00038D54 <AmiBlitz3.ab3@29833>   JMP writeword                                            ;d1 value
00038D5A <AmiBlitz3.ab3@29834>   JMP writebyte                                            ;d1 value
00038D60 <AmiBlitz3.ab3@29835> JMP exit
00038D64 <AmiBlitz3.ab3@29839>   destpointer:    Ds.l 1                                ;pc org source      ;Ds.w 1
00038D66 <AmiBlitz3.ab3@29842>   fast            Dc.w 0
00038D68 <AmiBlitz3.ab3@29843>   fpu             Dc.w 0
00038D6A <AmiBlitz3.ab3@29844>   newsyntax       Dc.w 0
00038D6B <AmiBlitz3.ab3@29846>   optistring      Dc.b 0
00038D6C <AmiBlitz3.ab3@29847>   optistring2     Dc.b 0
00038D6D <AmiBlitz3.ab3@29848>   optiarray       Dc.b 0
00038D6E <AmiBlitz3.ab3@29849>   quickadd        Dc.b 0
00038D70 <AmiBlitz3.ab3@29850>   newmode         Dc.w 0
00038D72 <AmiBlitz3.ab3@29851>   mode            Dc.w 0
00038D74 <AmiBlitz3.ab3@29852>   string1         Dc.w 0
00038D76 <AmiBlitz3.ab3@29853>   load_var_size   Dc.w 0
00038D78 <AmiBlitz3.ab3@29854>   load_var_reg    Dc.w 0
00038D7C <AmiBlitz3.ab3@29855>   load_var_addr   Dc.l 0
00038D7E <AmiBlitz3.ab3@29856>   imm_size        Dc.w 0
00038D80 <AmiBlitz3.ab3@29857>   imm_reg         Dc.w 0
00038D84 <AmiBlitz3.ab3@29858>   imm_addr        Dc.l 0
00038D85 <AmiBlitz3.ab3@29859>   iee             Dc.b 0
00038D86 <AmiBlitz3.ab3@29860>   _dcb            Dc.b 0
00038D8A <AmiBlitz3.ab3@29861>   nohunkoffset    Dc.l 0
00038D8E <AmiBlitz3.ab3@29864> teddata:        Dc.l tokens
00038D92 <AmiBlitz3.ab3@29865>                 Dc.l 0 ;compilermenu_entries               ; NOT used anymore
00038D96 <AmiBlitz3.ab3@29866>                 Dc.l read_xtrafile
00038D9A <AmiBlitz3.ab3@29867>                 Dc.l write_xtrafile
00038D9E <AmiBlitz3.ab3@29868>                 Dc.l call_menuentry                        ; compile AND RUN ?
00038DA2 <AmiBlitz3.ab3@29869>                 Dc.l 0
00038DA6 <AmiBlitz3.ab3@29870>                 Dc.b ":",34,".;"
00038DAA <AmiBlitz3.ab3@29871>                 Dc.l "NEW1"
00038DAE <AmiBlitz3.ab3@29872>                 Dc.l newtypebase
00038DB2 <AmiBlitz3.ab3@29873> realconstbase:  Dc.l labelbase
00038DB6 <AmiBlitz3.ab3@29874> deflib          Dc.l 0
00038DBA <AmiBlitz3.ab3@29875> incd            Dc.l 0
00038DBE <AmiBlitz3.ab3@29876>                 Dc.l 0
00038DC2 <AmiBlitz3.ab3@29877>                 Dc.l 0
00038DC6 <AmiBlitz3.ab3@29878>                 Dc.l 0
00038DC8 <AmiBlitz3.ab3@29879> _return         RTS
00038DC9 <AmiBlitz3.ab3@29880>                 Dc.b 0
000391C9 <AmiBlitz3.ab3@29881> chartab2        Ds.l 256
000391CD <AmiBlitz3.ab3@29882> codeend         Dc.l 0
000391D1 <AmiBlitz3.ab3@29883> hunkoffsetnum   Dc.l 0
000391D5 <AmiBlitz3.ab3@29884> chipsize        Dc.l 0
000391D9 <AmiBlitz3.ab3@29885> bsssize         Dc.l 0
000391DD <AmiBlitz3.ab3@29886> bssstart        Dc.l -1
000391E1 <AmiBlitz3.ab3@29887> bssend          Dc.l -1
000391E5 <AmiBlitz3.ab3@29888> chipstart       Dc.l -1
000391E9 <AmiBlitz3.ab3@29889> chipend         Dc.l -1
000391EA <AmiBlitz3.ab3@29890> bssmode         Dc.b 0
000391EB <AmiBlitz3.ab3@29891> chipmode        Dc.b 0
000391EC <AmiBlitz3.ab3@29892> newhunk         Dc.b 0
000391F0 <AmiBlitz3.ab3@29893> bssnum          Dc.l 0
000391F4 <AmiBlitz3.ab3@29894> chipnum         Dc.l 0
000391F8 <AmiBlitz3.ab3@29895> lastinstruction Dc.l 0
000391FC <AmiBlitz3.ab3@29896> lastinstructionaddr Dc.l 0
00039210 <AmiBlitz3.ab3@29897> hunkbegin       Dc.l $03F3,$00,$02,$00,$01
00039214 <AmiBlitz3.ab3@29898> tstsize1b:      Ds.l 1
00039218 <AmiBlitz3.ab3@29899> bsssize2        Dc.l 1
0003921C <AmiBlitz3.ab3@29900>                 Dc.l $03E9
00039220 <AmiBlitz3.ab3@29901> tstsize2b:      Dc.l $100
00039234 <AmiBlitz3.ab3@29902> hunkbegin2      Dc.l $03F3,$00,$03,$00,$02
00039238 <AmiBlitz3.ab3@29903> tstsize1c:      Ds.l 1
0003923C <AmiBlitz3.ab3@29904> bsssize3        Dc.l 1
00039240 <AmiBlitz3.ab3@29905> chipsize2       Dc.l 1
00039244 <AmiBlitz3.ab3@29906>                 Dc.l $3e9
00039248 <AmiBlitz3.ab3@29907> tstsize2c       Dc.l 0
00039258 <AmiBlitz3.ab3@29908> hunkend         Dc.l $3f2,$3eb,0,$3f2
00039268 <AmiBlitz3.ab3@29909> hunkend2        Dc.l $3f2,$3ea,0,$3f2
0003926F <AmiBlitz3.ab3@29910> strcpy          Dc.b "strcpy",0
00039276 <AmiBlitz3.ab3@29911> strcmp          Dc.b "strcmp",0
0003927D <AmiBlitz3.ab3@29912> strvar          Dc.b "strvar",0
00039282 <AmiBlitz3.ab3@29913> qmul            Dc.b "qmul",0
00039287 <AmiBlitz3.ab3@29914> qdiv            Dc.b "qdiv",0
0003928E <AmiBlitz3.ab3@29915> _MaxLen         Dc.b "maxlen",0
00039293 <AmiBlitz3.ab3@29916> notf            Dc.b "????",0
000392B6 <AmiBlitz3.ab3@29918> errtext         Dc.b "only reg addressing Mode supported",0
000392E0 <AmiBlitz3.ab3@29919> fpuerr          Dc.b "Instruction not yet supported by 68K FPU ",0
00039322 <AmiBlitz3.ab3@29920> cmplxerr        Dc.b "Formula too complex for 68K FPU or too much regload register used",0 : Even
00039324 <AmiBlitz3.ab3@29921> peeksize        Dc.w 0
00039328 <AmiBlitz3.ab3@29923> mainstart       Dc.l 0
00039329 <AmiBlitz3.ab3@29925> infunctioncode  Dc.b 0
0003932B <AmiBlitz3.ab3@29926> regnumstore     Dc.w 0
00039358 <AmiBlitz3.ab3@29927>                 Dc.b "$VER: AmiBlitz3 \\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
00039360 <AmiBlitz3.ab3@29928> testcode        Dc.b "print i",0
000393C4 <AmiBlitz3.ab3@29929>                 Ds.b 100
000393D2 <AmiBlitz3.ab3@29930> devo            Dc.b "developobject",0 : Even
000393E4 <AmiBlitz3.ab3@29931> autostorename   Dc.b "__autoconstantnum",0
000393EE <AmiBlitz3.ab3@29932> _include        Dc.b "__include",0
000393F6 <AmiBlitz3.ab3@29933> _debug          Dc.b "__debug",0
000393FA <AmiBlitz3.ab3@29934> unusedfunc      Dc.l 0
000393FC <AmiBlitz3.ab3@29938>   MOVE.l a0,d0
00039426 <AmiBlitz3.ab3@29939>   !basic
0003942A <AmiBlitz3.ab3@29940>   *olderror.l= PutD0
00039484 <AmiBlitz3.ab3@29941> 
000394B8 <AmiBlitz3.ab3@29942>   error_type$ = error$
00039554 <AmiBlitz3.ab3@29943> 
00039568 <AmiBlitz3.ab3@29944>   If Peek.l (?beforeparameterfetch)
0003957E <AmiBlitz3.ab3@29945>     MaxLen detokenline.s = #MAX_Columns+1        ; was 65536  changed it to the max size of a sourceline  tomsmart1
000395C0 <AmiBlitz3.ab3@29946>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
000395D0 <AmiBlitz3.ab3@29947>    *tn.preprocessor = Peek.l(?include_preprocessor)
000395FA <AmiBlitz3.ab3@29948>     written.l = preproc_DetokenizeLine{*tn,Peek.l (?beforeparameterfetch),&detokenline}
00039622 <AmiBlitz3.ab3@29949>     If written>0 Then Poke.b &detokenline+written,0
00039666 <AmiBlitz3.ab3@29950>     If written>40 Then Poke.s &detokenline+36,"..."   ; added to limit the wide of the error requester  tomsmart1
00039690 <AmiBlitz3.ab3@29951>     sourceLineText.s = Peek.s(&detokenline)
00039696 <AmiBlitz3.ab3@29952>   Else
000396BE <AmiBlitz3.ab3@29953>     sourceLineText = "NULL"
000396F2 <AmiBlitz3.ab3@29955>   error_source$ = sourceLineText
00039744 <AmiBlitz3.ab3@29956>   error$ + sourceLineText
0003974A <AmiBlitz3.ab3@29957>   GetD0 &error$
00039768 <AmiBlitz3.ab3@29958>   !asm
0003976A <AmiBlitz3.ab3@29959>   MOVE.l d0,a0
0003976C <AmiBlitz3.ab3@29960> RTS
0003976E <AmiBlitz3.ab3@29964>   MOVE.l a0,-(a7)
00039770 <AmiBlitz3.ab3@29965>   MOVE.l a0,d0
00039772 <AmiBlitz3.ab3@29966>   MOVE.l a5,a0                                             ;macro title
0003979C <AmiBlitz3.ab3@29967>   !basic
000397A0 <AmiBlitz3.ab3@29968>   i = PutD0
000397A2 <AmiBlitz3.ab3@29969>   MOVEQ #20,d0
000397A4 <AmiBlitz3.ab3@29972>     MOVE.b -(a0),d1
000397A8 <AmiBlitz3.ab3@29973>     BEQ 'l1
000397AC <AmiBlitz3.ab3@29974>     CMP.b #":",d1
000397B0 <AmiBlitz3.ab3@29975>     BEQ 'l1
000397B2 <AmiBlitz3.ab3@29976>     SUBQ.l #1,d0
000397B6 <AmiBlitz3.ab3@29977>     BNE 'l2
000397B8 <AmiBlitz3.ab3@29980>   ADDQ #1,a0
000397BA <AmiBlitz3.ab3@29981>   MOVE.l a0,d0
000397BE <AmiBlitz3.ab3@29982>   i2.l = PutD0
000397DA <AmiBlitz3.ab3@29983>   If Peek.w (?ininclude)>0
00039834 <AmiBlitz3.ab3@29984>     Poke.s (?includetemp2),incdim(Peek.w(?ininclude)-1)
00039844 <AmiBlitz3.ab3@29985>     errorline.l = Peek.l(?includeline);-1
0003986C <AmiBlitz3.ab3@29986>     Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
00039896 <AmiBlitz3.ab3@29987>     errorfile.s = Peek.s(?includetemp2)
0003989C <AmiBlitz3.ab3@29988>   Else
000398D4 <AmiBlitz3.ab3@29989>     Poke.s (?includetemp2),Peek.s(?ptr_parameterstore)
000398EA <AmiBlitz3.ab3@29990>     errorline.l = Peek.l(?compilelinecounter) + 1
0003991E <AmiBlitz3.ab3@29991>     errorfile.s = cli_sourcefile
00039928 <AmiBlitz3.ab3@29994>   If i
000399CC <AmiBlitz3.ab3@29995>     errortext.s = !TRANS{Replace$(Peek.s(i),"\\0a","\n")}
00039A4A <AmiBlitz3.ab3@29996>     errortext.s = Replace$(errortext,"\n","\\0a")
00039A50 <AmiBlitz3.ab3@29997>   Else
00039A78 <AmiBlitz3.ab3@29998>     errortext.s = "???"
00039BF0 <AmiBlitz3.ab3@30001>   NPrint "\\1b[1m",!TRANS{"Compiler Error"}," #",Peek.l(?errorcounter)," <",errorfile,"@",errorline,">\\1b[0m "
00039CB8 <AmiBlitz3.ab3@30002>   NPrint "  ",error_type$,"\\n  ",error_source$
00039CD6 <AmiBlitz3.ab3@30006>   !asm
00039CD8 <AmiBlitz3.ab3@30007>   MOVE.l (a7)+,a0
00039CDA <AmiBlitz3.ab3@30008> RTS
00039CDC <AmiBlitz3.ab3@30012>   MOVE.l a0,-(a7)
00039CDE <AmiBlitz3.ab3@30013>   MOVE.l a0,d0
00039CE0 <AmiBlitz3.ab3@30014>   MOVE.l a5,a0                                             ;macro title
00039D0A <AmiBlitz3.ab3@30015>   !basic
00039D0E <AmiBlitz3.ab3@30016>   i = PutD0
00039D10 <AmiBlitz3.ab3@30017>   MOVEQ #20,d0
00039D12 <AmiBlitz3.ab3@30020>     MOVE.b -(a0),d1
00039D16 <AmiBlitz3.ab3@30021>     BEQ 'l1
00039D1A <AmiBlitz3.ab3@30022>     CMP.b #":",d1
00039D1E <AmiBlitz3.ab3@30023>     BEQ 'l1
00039D20 <AmiBlitz3.ab3@30024>     SUBQ.l #1,d0
00039D24 <AmiBlitz3.ab3@30025>     BNE 'l2
00039D26 <AmiBlitz3.ab3@30028>   ADDQ #1,a0
00039D28 <AmiBlitz3.ab3@30029>   MOVE.l a0,d0
00039D2C <AmiBlitz3.ab3@30030>   i2.l = PutD0
00039DB0 <AmiBlitz3.ab3@30031>   fid.l = file_Open{dos_AddPart{my_systemdir$,"ab_compileerror.txt"},#file_forcewrite}
00039DC4 <AmiBlitz3.ab3@30032>   If fid <> -1
00039DE0 <AmiBlitz3.ab3@30033>     If Peek.w (?ininclude)>0
00039E3A <AmiBlitz3.ab3@30034>       Poke$(?includetemp2),incdim(Peek.w(?ininclude)-1)
00039E40 <AmiBlitz3.ab3@30035>     Else
00039E6C <AmiBlitz3.ab3@30036>       Poke$(?includetemp2),""
00039E96 <AmiBlitz3.ab3@30038>     a$ = Peek$(?includetemp2)
00039F08 <AmiBlitz3.ab3@30039>     x$ = Replace$(Peek$(i),"\\0a","\n")
00039F3A <AmiBlitz3.ab3@30040>     file_WriteLine{fid,x$}
00039F84 <AmiBlitz3.ab3@30041>     file_WriteLine{fid,Str$(Peek.l(?compilelinecounter) + 1)}
00039FB0 <AmiBlitz3.ab3@30042>     If a$
00039FE2 <AmiBlitz3.ab3@30043>       file_WriteLine{fid,a$}
0003A02C <AmiBlitz3.ab3@30044>       file_WriteLine{fid,Str$(Peek.l(?includeline)-1)}
0003A054 <AmiBlitz3.ab3@30045>       Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
0003A05A <AmiBlitz3.ab3@30046>     Else
0003A080 <AmiBlitz3.ab3@30047>       file_WriteLine{fid,"none"}
0003A0B0 <AmiBlitz3.ab3@30049>     file_WriteLine{fid,Peek$(i2)}
0003A106 <AmiBlitz3.ab3@30050>     file_WriteLine{fid,Str$(Peek.l(?globallinecount))+" line(s) compiled"}
0003A150 <AmiBlitz3.ab3@30051>     file_WriteLine{fid,Hex$(Peek.w(?globalvarpointer))+" global var base"}
0003A15A <AmiBlitz3.ab3@30052>     file_Close{fid}
0003A178 <AmiBlitz3.ab3@30054>   !asm
0003A17A <AmiBlitz3.ab3@30055>   MOVE.l (a7)+,a0
0003A17C <AmiBlitz3.ab3@30056> RTS
0003A1A6 <AmiBlitz3.ab3@30060>   !basic
0003A1AA <AmiBlitz3.ab3@30061>   progress.l     = PutD0
0003A1BC <AmiBlitz3.ab3@30062>   total.l        = Peek.w(?progressbar_width)
0003A1DA <AmiBlitz3.ab3@30063>   calcpro        = (progress * 100) / total +1
0003A1F2 <AmiBlitz3.ab3@30064>   pass.l         = Peek.w(?pass) + 1           ; added +1 so the shown status info begin with 1 instead of 0  tomsmart1
0003A204 <AmiBlitz3.ab3@30065>   typ.l          = Peek.w(?compiler_job)
0003A222 <AmiBlitz3.ab3@30068>   If (pass><pass_old) OR (typ><typ_old)
0003A230 <AmiBlitz3.ab3@30070>     If pass_old><pass
0003A2CC <AmiBlitz3.ab3@30071>       passtatusstr.s = !TRANS{"Pass"}+" "+Str$(pass)+"..."
0003A322 <AmiBlitz3.ab3@30072>       If cli_verbose>=1 Then NPrint passtatusstr        ; changed form 2 to get compilepass number in verbose mode 1  tomsmart1
0003A328 <AmiBlitz3.ab3@30075>     pass_old = pass
0003A32E <AmiBlitz3.ab3@30076>     typ_old  = typ
0003A334 <AmiBlitz3.ab3@30077>     update_comstatus_gui = True
0003A346 <AmiBlitz3.ab3@30078>     If typ=0
0003A426 <AmiBlitz3.ab3@30079>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Compiling Sources..."}
0003A42E <AmiBlitz3.ab3@30080>       calcpro = 0  ; set gauge to 0
0003A440 <AmiBlitz3.ab3@30082>     If typ=1
0003A520 <AmiBlitz3.ab3@30083>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Building Executable..."}
0003A528 <AmiBlitz3.ab3@30084>       calcpro = 0  ; set gauge to 0
0003A57E <AmiBlitz3.ab3@30087>     If cli_verbose>=3 Then NPrint comstatusstr
0003A58C <AmiBlitz3.ab3@30090>   If (calcpro >< calcpro_old)
0003A5E0 <AmiBlitz3.ab3@30091>     If cli_verbose>=4 Then NPrint calcpro,"% compiled..."
0003A5E6 <AmiBlitz3.ab3@30092>     calcpro_old = calcpro
0003A5EC <AmiBlitz3.ab3@30093>     update_comstatus_gui = True
0003A606 <AmiBlitz3.ab3@30096>   If update_comstatus_gui = True                                     ; check if a update of the gui nessecary
0003A624 <AmiBlitz3.ab3@30097>     !asm
0003A656 <AmiBlitz3.ab3@30098> 
0003A680 <AmiBlitz3.ab3@30099>     !basic
0003A686 <AmiBlitz3.ab3@30100>     update_comstatus_gui  = False ; because we update the gui
0003A6A4 <AmiBlitz3.ab3@30102>   !asm
0003A6A6 <AmiBlitz3.ab3@30103> RTS
0003A6AC <AmiBlitz3.ab3@30108>   MOVE.w maxobject_pos,D5                                  ;max objects 1. visible
0003A6B2 <AmiBlitz3.ab3@30109>   LEA maxobjects_value,A3                                  ;current value
0003A6B8 <AmiBlitz3.ab3@30110>   MOVEA.l libpointer,A2
0003A6BC <AmiBlitz3.ab3@30113>   CMPA.w #$0,A2
0003A6C0 <AmiBlitz3.ab3@30114>   BEQ.w 'igot
0003A6C2 <AmiBlitz3.ab3@30115>   MOVEA.l A2,A1
0003A6C6 <AmiBlitz3.ab3@30116>   ADDA.l $12(A1),A1
0003A6CA <AmiBlitz3.ab3@30117>   TST.w -$2(A1)
0003A6CE <AmiBlitz3.ab3@30118>   BEQ.w 'ugwl2
0003A6D0 <AmiBlitz3.ab3@30119>   SUBQ.w #1,D5
0003A6D4 <AmiBlitz3.ab3@30120>   BMI.w 'ugw2
0003A6D6 <AmiBlitz3.ab3@30123>   MOVEA.l (A2),A2
0003A6DA <AmiBlitz3.ab3@30124>  BRA.w 'ugwl
0003A6DE <AmiBlitz3.ab3@30127>   MOVE.w (A3),-$4(A1)
0003A6E0 <AmiBlitz3.ab3@30130> RTS
0003A6E6 <AmiBlitz3.ab3@30134>   MOVE.w debugnest,d0
0003A6EC <AmiBlitz3.ab3@30135>   LEA storedebugmode, a0
0003A6F4 <AmiBlitz3.ab3@30136>   MOVE.b 0(a0,d0.w),debugmode
0003A6FA <AmiBlitz3.ab3@30137>   TST.w debugnest
0003A6FE <AmiBlitz3.ab3@30138>   BEQ JUMP_unpairrunerrs
0003A704 <AmiBlitz3.ab3@30139>   SUBQ.w #1,debugnest
0003A706 <AmiBlitz3.ab3@30140> RTS
0003A70C <AmiBlitz3.ab3@30142> JUMP_runerrsoverflow JMP runerrsoverflow
0003A712 <AmiBlitz3.ab3@30143> JUMP_unpairrunerrs   JMP unpairrunerrs
0003A71A <AmiBlitz3.ab3@30147>   BCHG #$7,use_debugger
0003A722 <AmiBlitz3.ab3@30149>   BTST #$7,use_debugger
0003A726 <AmiBlitz3.ab3@30150>   BNE 'debugon
0003A72C <AmiBlitz3.ab3@30151>   CLR.w debugmode
0003A730 <AmiBlitz3.ab3@30152>  BRA.b 'debugoff
0003A736 <AmiBlitz3.ab3@30155>   SNE debugmode
0003A738 <AmiBlitz3.ab3@30158>   MOVE.l a0,-(a7)
0003A770 <AmiBlitz3.ab3@30161>   !ComData_SetB{comByte_DebugMode,debugmode}
0003A772 <AmiBlitz3.ab3@30166>   MOVE.l (a7)+,a0
0003A774 <AmiBlitz3.ab3@30167> RTS
0003A77C <AmiBlitz3.ab3@30172>   BTST #$7,use_debugger
0003A780 <AmiBlitz3.ab3@30174>   BNE 'debugon
0003A786 <AmiBlitz3.ab3@30175>   CLR.w debugmode
0003A78A <AmiBlitz3.ab3@30176>  BRA.b 'debugoff
0003A790 <AmiBlitz3.ab3@30180>   SNE debugmode
0003A792 <AmiBlitz3.ab3@30183> RTS
0003A798 <AmiBlitz3.ab3@30188>   ADDQ.w #1,debugnest
0003A79E <AmiBlitz3.ab3@30189>   MOVE.w debugnest,d0
0003A7A2 <AmiBlitz3.ab3@30190>   CMP.w #18,d0
0003A7A6 <AmiBlitz3.ab3@30191>    BGE JUMP_runerrsoverflow
0003A7AC <AmiBlitz3.ab3@30192>   LEA storedebugmode, a0
0003A7B4 <AmiBlitz3.ab3@30193>   MOVE.b debugmode,0( a0,d0.w)
0003A7BA <AmiBlitz3.ab3@30197>   SF debugmode
0003A7BC <AmiBlitz3.ab3@30198> RTS
0003A83C <AmiBlitz3.ab3@30201> usedpath:  Ds.l 32
0003A840 <AmiBlitz3.ab3@30205>   BEQ.w JUMP_syntaxerr
0003A846 <AmiBlitz3.ab3@30206>   LEA lastpath,A0
0003A84A <AmiBlitz3.ab3@30208>   MOVEM.l a0-a1/d0,-(a7)
0003A850 <AmiBlitz3.ab3@30209>   LEA lastpath2,a1
0003A852 <AmiBlitz3.ab3@30212>     MOVE.b (a0)+,(a1)+
0003A856 <AmiBlitz3.ab3@30213>   BNE 'l2
0003A85A <AmiBlitz3.ab3@30214>   MOVEM.l (a7)+,a0-a1/d0
0003A85E <AmiBlitz3.ab3@30215>   LEA usedpath(PC),A0
0003A862 <AmiBlitz3.ab3@30216>   MOVEM.l a0-a1/d0,-(a7)
0003A868 <AmiBlitz3.ab3@30217>   LEA lastpath,a1
0003A86A <AmiBlitz3.ab3@30220>     MOVE.b (a0)+,(a1)+
0003A86E <AmiBlitz3.ab3@30221>   BNE 'l1
0003A872 <AmiBlitz3.ab3@30222>   MOVEM.l (a7)+,a0-a1/d0
0003A874 <AmiBlitz3.ab3@30226>   TST.w D0
0003A878 <AmiBlitz3.ab3@30227>    BMI.w JUMP_syntaxerr
0003A87A <AmiBlitz3.ab3@30228>   MOVE.b D0,(A0)+
0003A87E <AmiBlitz3.ab3@30229>   BSR.w JUMP_get1bytemain
0003A882 <AmiBlitz3.ab3@30230>    BNE.w 'loop
0003A886 <AmiBlitz3.ab3@30233>   MOVE.b #$2,(A0)
0003A888 <AmiBlitz3.ab3@30234> RTS
0003A88C <AmiBlitz3.ab3@30238>   BEQ.w JUMP_syntaxerr
0003A892 <AmiBlitz3.ab3@30239>   LEA path2,A0
0003A894 <AmiBlitz3.ab3@30251>   TST.w D0
0003A898 <AmiBlitz3.ab3@30252>    BMI.w JUMP_syntaxerr
0003A89A <AmiBlitz3.ab3@30253>   MOVE.b D0,(A0)+
0003A89E <AmiBlitz3.ab3@30254>   BSR.w JUMP_get1bytemain
0003A8A2 <AmiBlitz3.ab3@30255>    BNE.w 'loop
0003A8A6 <AmiBlitz3.ab3@30258>   MOVE.b #$2,(A0)
0003A8A8 <AmiBlitz3.ab3@30259> RTS
0003A8AE <AmiBlitz3.ab3@30262> JUMP_errormsg_reg JMP errormsg_reg
0003A8B8 <AmiBlitz3.ab3@30266>   MOVE.l #$f22d6780,fpucodeglobal
0003A8C2 <AmiBlitz3.ab3@30267>   MOVE.l #$f22c6780,fpucodelocal
0003A8C8 <AmiBlitz3.ab3@30268>   LEA regtable,a0
0003A8D2 <AmiBlitz3.ab3@30269>   MOVE.l #7,maxregs
0003A8D4 <AmiBlitz3.ab3@30272>   MOVE.l (a0),d0
0003A8D8 <AmiBlitz3.ab3@30273>   BEQ 'e1
0003A8DA <AmiBlitz3.ab3@30274>   CLR.l (a0)
0003A8DE <AmiBlitz3.ab3@30275>   MOVE.w 4(a0),d0
0003A8E8 <AmiBlitz3.ab3@30276>   MOVE.l fpucodeglobal,fpucode
0003A8EC <AmiBlitz3.ab3@30277>   TST.w 6(a0)
0003A8F0 <AmiBlitz3.ab3@30278>   BEQ 'glob
0003A8FA <AmiBlitz3.ab3@30279>   MOVE.l fpucodelocal,fpucode
0003A900 <AmiBlitz3.ab3@30282>   MOVE.l fpucode,d1
0003A906 <AmiBlitz3.ab3@30283>   JSR writelong
0003A910 <AmiBlitz3.ab3@30284>   SUB.l #$80,fpucodelocal
0003A91A <AmiBlitz3.ab3@30285>   SUB.l #$80,fpucodeglobal
0003A91C <AmiBlitz3.ab3@30286>   MOVE.w d0,d1
0003A922 <AmiBlitz3.ab3@30287>   JSR writeword
0003A924 <AmiBlitz3.ab3@30288>   ADDQ #8,a0
0003A928 <AmiBlitz3.ab3@30289>  BRA 'again
0003A92A <AmiBlitz3.ab3@30292> RTS
0003A930 <AmiBlitz3.ab3@30295> JUMP_notypeerr2 JMP notypeerr
0003A936 <AmiBlitz3.ab3@30296> JUMP_illtypeerr JMP illtypeerr
0003A940 <AmiBlitz3.ab3@30299>   MOVE.l #$f22d4780,fpucodeglobal
0003A94A <AmiBlitz3.ab3@30300>   MOVE.l #$f22c4780,fpucodelocal
0003A950 <AmiBlitz3.ab3@30301>   LEA regtable,a0
0003A952 <AmiBlitz3.ab3@30302>   TST.l (a0)
0003A956 <AmiBlitz3.ab3@30303>    BNE JUMP_errormsg_reg
0003A958 <AmiBlitz3.ab3@30304>   MOVE.l d7,-(a7)
0003A95A <AmiBlitz3.ab3@30305>   SUBQ.l #1,a5
0003A960 <AmiBlitz3.ab3@30308>   JSR getparameter2
0003A964 <AmiBlitz3.ab3@30309>   BEQ.w 'nopar
0003A96A <AmiBlitz3.ab3@30310>   MOVE.w d0,lastchar
0003A970 <AmiBlitz3.ab3@30311>   JSR findvariable
0003A974 <AmiBlitz3.ab3@30312>   BNE 'islocal
0003A97E <AmiBlitz3.ab3@30313>   MOVE.l fpucodeglobal,fpucode
0003A988 <AmiBlitz3.ab3@30314>   MOVE.l #3,maxregs
0003A98A <AmiBlitz3.ab3@30315>   MOVEQ #0,d7
0003A992 <AmiBlitz3.ab3@30318>   CMP.l #newtype_float,$a(a2)                              ;is float type
0003A996 <AmiBlitz3.ab3@30319>    BEQ 'doit
0003A99E <AmiBlitz3.ab3@30320>   CMP.l #newtype_double,$a(a2)
0003A9A2 <AmiBlitz3.ab3@30321>    BNE JUMP_illtypeerr
0003A9A8 <AmiBlitz3.ab3@30324>   LEA regtable,a0
0003A9AA <AmiBlitz3.ab3@30325>   MOVEQ #0,d0
0003A9AC <AmiBlitz3.ab3@30328>   TST.l (a0)
0003A9B0 <AmiBlitz3.ab3@30329>    BEQ 'store
0003A9B2 <AmiBlitz3.ab3@30330>   ADDQ.l #4,d0
0003A9B4 <AmiBlitz3.ab3@30331>   ADDQ.l #8,a0
0003A9BA <AmiBlitz3.ab3@30332>   CMP.l #16,d0
0003A9BE <AmiBlitz3.ab3@30333>    BCS 'loop
0003A9C8 <AmiBlitz3.ab3@30334>   MOVE.l #2,maxregs
0003A9CE <AmiBlitz3.ab3@30335>   CMP.l #20,d0
0003A9D2 <AmiBlitz3.ab3@30336>    BCS 'loop
0003A9DC <AmiBlitz3.ab3@30337>   MOVE.l #1,maxregs
0003A9E2 <AmiBlitz3.ab3@30338>   CMP.l #24,d0
0003A9E6 <AmiBlitz3.ab3@30339>    BCS 'loop
0003A9EC <AmiBlitz3.ab3@30340>  JMP toovarerr
0003A9F2 <AmiBlitz3.ab3@30343>   TST.b fpu
0003A9F6 <AmiBlitz3.ab3@30344>    BEQ 'nofpu
0003A9F8 <AmiBlitz3.ab3@30345>   MOVE.l a2,(a0)
0003A9FE <AmiBlitz3.ab3@30346>   MOVE.w 4(a2),4(a0)
0003AA02 <AmiBlitz3.ab3@30347>   MOVE.w d7,6(a0)
0003AA08 <AmiBlitz3.ab3@30348>   MOVE.l fpucode,d1
0003AA12 <AmiBlitz3.ab3@30349>   SUB.l #$80,fpucodeglobal
0003AA1C <AmiBlitz3.ab3@30350>   SUB.l #$80,fpucodelocal
0003AA22 <AmiBlitz3.ab3@30351>   JSR writelong
0003AA26 <AmiBlitz3.ab3@30352>   MOVE.w 4(a2),d1
0003AA2C <AmiBlitz3.ab3@30353>   JSR writeword
0003AA32 <AmiBlitz3.ab3@30356>   MOVE.w lastchar,d0
0003AA36 <AmiBlitz3.ab3@30357>   CMP.w #":",d0
0003AA3A <AmiBlitz3.ab3@30358>    BEQ 'nopar
0003AA3C <AmiBlitz3.ab3@30359>   TST.w d0
0003AA40 <AmiBlitz3.ab3@30360>    BEQ 'nopar
0003AA44 <AmiBlitz3.ab3@30361>   CMP.w #",",d0
0003AA48 <AmiBlitz3.ab3@30362>   BNE JUMP_syntaxerr
0003AA4C <AmiBlitz3.ab3@30363>  BRA 'l2
0003AA4E <AmiBlitz3.ab3@30366>    MOVE.l (a7)+,d7
0003AA50 <AmiBlitz3.ab3@30367>  RTS
0003AA52 <AmiBlitz3.ab3@30370>   MOVEQ #1,d7
0003AA5A <AmiBlitz3.ab3@30371>   MOVE.b #1,newvariable
0003AA60 <AmiBlitz3.ab3@30372>   LEA firstlocal,a2
0003AA66 <AmiBlitz3.ab3@30373>   JSR findvariable
0003AA6C <AmiBlitz3.ab3@30374>   CLR.b newvariable
0003AA72 <AmiBlitz3.ab3@30375>   CMP.l #-1,d0
0003AA76 <AmiBlitz3.ab3@30376>   BEQ.w JUMP_notypeerr2
0003AA80 <AmiBlitz3.ab3@30377>   MOVE.l fpucodelocal,fpucode
0003AA84 <AmiBlitz3.ab3@30378>  BRA 'go
0003AA88 <AmiBlitz3.ab3@30381>   CMP.b #".",d0
0003AA8C <AmiBlitz3.ab3@30382>    BNE 'l1
0003AA90 <AmiBlitz3.ab3@30383>   BSR JUMP_get1bytemain
0003AA94 <AmiBlitz3.ab3@30384>   BSR JUMP_get1bytemain
0003AA98 <AmiBlitz3.ab3@30387>   ORI .b #$20,d0
0003AA9C <AmiBlitz3.ab3@30388>   CMP.b #"d",d0
0003AAA0 <AmiBlitz3.ab3@30389>    BNE JUMP_illeaerr
0003AAA4 <AmiBlitz3.ab3@30390>   BSR JUMP_get1bytemain
0003AAA8 <AmiBlitz3.ab3@30391>   SUB.b #$30,d0
0003AAAC <AmiBlitz3.ab3@30392>   CMP.b #$7,d0
0003AAB0 <AmiBlitz3.ab3@30393>    BGT JUMP_syntaxerr
0003AAB4 <AmiBlitz3.ab3@30394>   MOVE.w #$49c0,d1
0003AAB6 <AmiBlitz3.ab3@30395>   ADD.b d0,d1
0003AABC <AmiBlitz3.ab3@30396>   JSR writeword
0003AAC0 <AmiBlitz3.ab3@30397>   BSR JUMP_get1bytemain
0003AAC2 <AmiBlitz3.ab3@30398> RTS
0003AAC8 <AmiBlitz3.ab3@30402>   LEA lastpath,a0
0003AACC <AmiBlitz3.ab3@30403>   LEA usedpath(PC),A1
0003AACE <AmiBlitz3.ab3@30406>     MOVE.b (a0)+,(a1)+
0003AAD2 <AmiBlitz3.ab3@30407>   BNE 'l1
0003AAD8 <AmiBlitz3.ab3@30409>   LEA lastpath2,a0
0003AADE <AmiBlitz3.ab3@30410>   LEA lastpath,A1
0003AAE0 <AmiBlitz3.ab3@30413>     MOVE.b (a0)+,(a1)+
0003AAE4 <AmiBlitz3.ab3@30414>   BNE 'l2
0003AAE6 <AmiBlitz3.ab3@30415> RTS
0003AAEC <AmiBlitz3.ab3@30419>   TST.b objectcount
0003AAF0 <AmiBlitz3.ab3@30420>   BEQ 'l2a
0003AAF6 <AmiBlitz3.ab3@30421>  JMP macnesterr
0003AAFC <AmiBlitz3.ab3@30424>   LEA devo,a0
0003AB02 <AmiBlitz3.ab3@30425>   ADDQ.b #1,objectcount
0003AB06 <AmiBlitz3.ab3@30426>   MOVEM.l a1/d2,-(a7)
0003AB0C <AmiBlitz3.ab3@30427>   LEA ptr_parameterstore,a1
0003AB0E <AmiBlitz3.ab3@30430>     MOVE.b (a0)+,(a1)+
0003AB12 <AmiBlitz3.ab3@30431>   BNE 'l1
0003AB14 <AmiBlitz3.ab3@30433>   MOVEQ #13,d2
0003AB1A <AmiBlitz3.ab3@30434>   JSR findlabel2
0003AB1E <AmiBlitz3.ab3@30435>   BNE 'd
0003AB22 <AmiBlitz3.ab3@30436>   TST.l 8(a2)
0003AB26 <AmiBlitz3.ab3@30437>   BEQ 'd
0003AB2C <AmiBlitz3.ab3@30438>   SUBQ.b #1,objectcount
0003AB30 <AmiBlitz3.ab3@30439>   MOVEM.l (a7)+,a1/d2
0003AB36 <AmiBlitz3.ab3@30440>   JSR skiprest
0003AB3E <AmiBlitz3.ab3@30441>   MOVE.b #1,developobject
0003AB40 <AmiBlitz3.ab3@30442>  RTS
0003AB44 <AmiBlitz3.ab3@30445>   MOVEM.l (a7)+,a1/d2
0003AB4C <AmiBlitz3.ab3@30446>   MOVE.b #1,resdisable
0003AB52 <AmiBlitz3.ab3@30449>   CLR.b developobject
0003AB58 <AmiBlitz3.ab3@30450> JMP do_Macro
0003AB5E <AmiBlitz3.ab3@30453> JUMP_illeaerr JMP illeaerr
0003AB64 <AmiBlitz3.ab3@30457>   CLR.b typecheck
0003AB6A <AmiBlitz3.ab3@30458>   CLR.b declare
0003AB70 <AmiBlitz3.ab3@30459>   CLR.b declare2
0003AB74 <AmiBlitz3.ab3@30460>   SUB.b #$30,d0
0003AB78 <AmiBlitz3.ab3@30461>   BTST #0,d0
0003AB7C <AmiBlitz3.ab3@30462>   BEQ 'l1
0003AB84 <AmiBlitz3.ab3@30463>   MOVE.b #1,declare
0003AB88 <AmiBlitz3.ab3@30466>   BTST #1,d0
0003AB8C <AmiBlitz3.ab3@30467>   BEQ 'l2
0003AB94 <AmiBlitz3.ab3@30468>   MOVE.b #1,declare2
0003AB98 <AmiBlitz3.ab3@30471>   BTST #2,d0
0003AB9C <AmiBlitz3.ab3@30472>   BEQ 'l3
0003ABA4 <AmiBlitz3.ab3@30473>   MOVE.b #1,typecheck
0003ABA8 <AmiBlitz3.ab3@30476>   BSR.w JUMP_get1bytemain
0003ABAA <AmiBlitz3.ab3@30477> RTS
0003ABB0 <AmiBlitz3.ab3@30479> JUMP_get1bytemain JMP get1bytemain
0003ABDA <AmiBlitz3.ab3@30483>   !basic
0003ABFA <AmiBlitz3.ab3@30485>   FillMem ?residents_table,?residents_table_end-?residents_table,0
0003AC18 <AmiBlitz3.ab3@30486>   !asm
0003AC1A <AmiBlitz3.ab3@30487> Return
0003AC1C <AmiBlitz3.ab3@30492>   MOVE.l d2,-(a7)                                          ; D2 -> stack
0003AC1E <AmiBlitz3.ab3@30493>   ADDQ #1,a5
0003AC20 <AmiBlitz3.ab3@30494>   MOVE.l a5,-(a7)
0003AC4A <AmiBlitz3.ab3@30495>   !basic
0003AC50 <AmiBlitz3.ab3@30496>   MOVE.l (a7)+,d0 : _myD0.l = PutD0
0003AC5A <AmiBlitz3.ab3@30497>   If _myD0
0003AC9A <AmiBlitz3.ab3@30498>     newconst$ = UCase$(Peek.s(_myD0))
0003ACA0 <AmiBlitz3.ab3@30499>   Else
0003ACDA <AmiBlitz3.ab3@30500>     error{"INTERNAL: invalid pointer in check_newconstants!"}
0003AD02 <AmiBlitz3.ab3@30501>     nwconst$="xxx"
0003AD2A <AmiBlitz3.ab3@30503>   condata$ =""
0003AD3A <AmiBlitz3.ab3@30504>   Poke.b ?skip_bytes,0
0003AD96 <AmiBlitz3.ab3@30505>   If Left$(newconst$,2) = "__"
0003ADF0 <AmiBlitz3.ab3@30506>     Select Mid$(newconst$,3,4)
0003AE14 <AmiBlitz3.ab3@30508>      Case "DATE"
0003AE6E <AmiBlitz3.ab3@30509>       Select Mid$(newconst$,3,6)
0003AEAC <AmiBlitz3.ab3@30510>       Case "DATE__" : DateFormat 1 : Poke.b ?skip_bytes,8
0003AEF0 <AmiBlitz3.ab3@30511>       Case "DATE_G" : DateFormat 0 : Poke.b ?skip_bytes,12
0003AEFE <AmiBlitz3.ab3@30512>       End Select
0003AF0C <AmiBlitz3.ab3@30513>       i.l=SystemDate
0003AF32 <AmiBlitz3.ab3@30514>       condata$ = Date$ (i)
0003AFB0 <AmiBlitz3.ab3@30515>       condata$ = Replace$(condata$,"/",".")
0003AFDA <AmiBlitz3.ab3@30517>      Case "VER_"
0003AFEA <AmiBlitz3.ab3@30520>       actual_version.l = Peek.l(?versioninformation)
0003AFFA <AmiBlitz3.ab3@30521>       actual_build.l   = Peek.l(?number_of_builds)
0003B01E <AmiBlitz3.ab3@30523>       Format ""
0003B078 <AmiBlitz3.ab3@30524>       Select Mid$(newconst$,3,9)
0003B09C <AmiBlitz3.ab3@30526>        Case "VER_MAJOR"
0003B0D8 <AmiBlitz3.ab3@30527>         condata$ = Str$(actual_version LSR 24)
0003B102 <AmiBlitz3.ab3@30529>        Case "VER_MINOR"
0003B146 <AmiBlitz3.ab3@30530>         condata$ = Str$((actual_version LSL 8) LSR 24)
0003B170 <AmiBlitz3.ab3@30532>        Case "VER_PATCH"
0003B1B4 <AmiBlitz3.ab3@30533>         condata$ = Str$((actual_version LSL 16) LSR 24 )
0003B1DE <AmiBlitz3.ab3@30535>        Case "VER_BUILD"
0003B202 <AmiBlitz3.ab3@30536>         Format ""
0003B236 <AmiBlitz3.ab3@30537>         condata$ = Str$(actual_build)
0003B23C <AmiBlitz3.ab3@30539>        Default
0003B264 <AmiBlitz3.ab3@30540>         condata$ = "{unknown compiler constant}"
0003B272 <AmiBlitz3.ab3@30542>       End Select
0003B296 <AmiBlitz3.ab3@30543>       Format ""
0003B2A6 <AmiBlitz3.ab3@30544>       Poke.b ?skip_bytes,11
0003B2D0 <AmiBlitz3.ab3@30546>      Case "THIS"
0003B32A <AmiBlitz3.ab3@30547>       Select Mid$(newconst$,3,9)
0003B34E <AmiBlitz3.ab3@30549>        Case "THIS_FUNC"
0003B35E <AmiBlitz3.ab3@30550>         Poke.b ?skip_bytes,15
0003B37E <AmiBlitz3.ab3@30551>         If Peek.l(?currentfunction)<>0
0003B3CA <AmiBlitz3.ab3@30552>           condata$ = Peek.s(Peek.l(?currentfunction) + 32 + #funcentry_extend + 1)
0003B3D0 <AmiBlitz3.ab3@30553>         Else
0003B3F8 <AmiBlitz3.ab3@30554>           condata$ = "GLOBAL"
0003B422 <AmiBlitz3.ab3@30557>        Case "THIS_INCL"
0003B432 <AmiBlitz3.ab3@30558>         Poke.b ?skip_bytes,14
0003B452 <AmiBlitz3.ab3@30559>         If Peek.l(?includetemp2)<>0
0003B4A0 <AmiBlitz3.ab3@30560>           condata$ = dos_FilePart{Peek$(?includetemp2)}
0003B4CA <AmiBlitz3.ab3@30563>        Case "THIS_POIN"
0003B4DA <AmiBlitz3.ab3@30564>         Poke.b ?skip_bytes,14
0003B4FA <AmiBlitz3.ab3@30565>         If Peek.l(?currentfunction)<>0
0003B528 <AmiBlitz3.ab3@30566>           condata$ = Hex$(Peek.l(?currentfunction))
0003B536 <AmiBlitz3.ab3@30569>       End Select
0003B560 <AmiBlitz3.ab3@30571>      Case "CODE"
0003B570 <AmiBlitz3.ab3@30572>       Poke.b ?skip_bytes,10
0003B5D2 <AmiBlitz3.ab3@30573>       If Mid$(newconst$,3,8) = "CODELINE"
0003B60E <AmiBlitz3.ab3@30574>         condata$ = Str$(Peek.l(?globallinecount))
0003B61C <AmiBlitz3.ab3@30577>     End Select
0003B622 <AmiBlitz3.ab3@30579>   Else
0003B676 <AmiBlitz3.ab3@30580>     Select Left$(newconst$,1)
0003B69A <AmiBlitz3.ab3@30582>      Case "R"
0003B6AA <AmiBlitz3.ab3@30583>       Poke.b ?skip_bytes,3
0003B722 <AmiBlitz3.ab3@30584>       For i = 1 To Vallong(Mid$(newconst$,2,2))
0003B7A2 <AmiBlitz3.ab3@30585>         condata$ = condata$ + Mid$(newconst$,4,1)
0003B7B2 <AmiBlitz3.ab3@30586>       Next
0003B7DC <AmiBlitz3.ab3@30588>      Case "N"
0003B7EC <AmiBlitz3.ab3@30589>       Poke.b ?skip_bytes,1
0003B810 <AmiBlitz3.ab3@30590>       condata$ = Chr$(10)
0003B816 <AmiBlitz3.ab3@30592>      Default
0003B828 <AmiBlitz3.ab3@30593>       char1.b = Peek.b(&newconst$)
0003B840 <AmiBlitz3.ab3@30594>       char2.b = Peek.b(&newconst$+1)
0003B84C <AmiBlitz3.ab3@30595>       nibble1.l = -1
0003B858 <AmiBlitz3.ab3@30596>       nibble2.l = -1
0003B896 <AmiBlitz3.ab3@30598>       If (char1>=@"0" AND char1<=@"9") Then nibble1 = char1-@"0"
0003B8D4 <AmiBlitz3.ab3@30599>       If (char2>=@"0" AND char2<=@"9") Then nibble2 = char2-@"0"
0003B918 <AmiBlitz3.ab3@30601>       If (char1>=@"a" AND char1<=@"f") Then nibble1 = char1-@"a" + 10
0003B95C <AmiBlitz3.ab3@30602>       If (char2>=@"a" AND char2<=@"f") Then nibble2 = char2-@"a" + 10
0003B9A0 <AmiBlitz3.ab3@30604>       If (char1>=@"A" AND char1<=@"F") Then nibble1 = char1-@"A" + 10
0003B9E4 <AmiBlitz3.ab3@30605>       If (char2>=@"A" AND char2<=@"F") Then nibble2 = char2-@"A" + 10
0003BA0A <AmiBlitz3.ab3@30607>       If nibble1>=0 AND nibble2>=0
0003BA20 <AmiBlitz3.ab3@30608>         newchar.l = (nibble1 LSL 4) + (nibble2)
0003BA44 <AmiBlitz3.ab3@30609>         condata$ = Chr$(newchar)
0003BA54 <AmiBlitz3.ab3@30610>         Poke.b ?skip_bytes,2
0003BA62 <AmiBlitz3.ab3@30613>     End Select
0003BAC2 <AmiBlitz3.ab3@30615>   If condata$ = "" AND Peek.b(?skip_bytes)=0
0003BBE8 <AmiBlitz3.ab3@30616>     !cout{"detected unknown const: " + newconst$}
0003BC1C <AmiBlitz3.ab3@30617>     condata$ = newconst$
0003BC32 <AmiBlitz3.ab3@30620>   GetD0 FLen(condata$)-1                                    ; laenge zielstring -> Stack
0003BC34 <AmiBlitz3.ab3@30621>   MOVE.l d0,d2
0003BC36 <AmiBlitz3.ab3@30622>   MOVE.l d2,-(a7)
0003BC3C <AmiBlitz3.ab3@30624>   GetD0 &condata$                                          ; kopieren des neuen Strings in den Zielstring
0003BC3E <AmiBlitz3.ab3@30625>   MOVE.l d0,a0
0003BC40 <AmiBlitz3.ab3@30628>     MOVE.b (a0)+,d1
0003BC46 <AmiBlitz3.ab3@30629>     JSR pokedata1b
0003BC4A <AmiBlitz3.ab3@30630>  DBF d2,'l1
0003BC68 <AmiBlitz3.ab3@30632>   !asm
0003BC6A <AmiBlitz3.ab3@30633>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
0003BC6C <AmiBlitz3.ab3@30634>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
0003BC6E <AmiBlitz3.ab3@30635>   ADD.l d0,d2                                              ; eingefuegte chars zu D2 dazu
0003BC74 <AmiBlitz3.ab3@30636>   ADD.l #1,d2
0003BC7A <AmiBlitz3.ab3@30638>   MOVE.l #0,d0                                             ; a5 um konstantennamen weiterschieben
0003BC80 <AmiBlitz3.ab3@30639>   MOVE.b skip_bytes,D0
0003BC82 <AmiBlitz3.ab3@30640>   ADD.l D0,a5
0003BC84 <AmiBlitz3.ab3@30641> RTS
0003BC88 <AmiBlitz3.ab3@30717>   MOVEM.l d0-d2/a0-a5,-(a7)
0003BC8E <AmiBlitz3.ab3@30718>   TST.w proceduremode                                     ;1 in function
0003BC92 <AmiBlitz3.ab3@30719>   BEQ 'global
0003BC98 <AmiBlitz3.ab3@30720>   LEA firstglob,a2
0003BC9E <AmiBlitz3.ab3@30721>   JSR findvariable2
0003BCA2 <AmiBlitz3.ab3@30722>   BEQ 'isused
0003BCAA <AmiBlitz3.ab3@30723>   MOVE.b #1,newvariable
0003BCB0 <AmiBlitz3.ab3@30724>   LEA firstlocal,a2
0003BCB6 <AmiBlitz3.ab3@30725>   JSR findvariable
0003BCBA <AmiBlitz3.ab3@30726>   BEQ 'isused
0003BCC0 <AmiBlitz3.ab3@30727>   CLR.b newvariable
0003BCC4 <AmiBlitz3.ab3@30728>   MOVEM.l (a7)+,d0-d2/a0-a5
0003BCC6 <AmiBlitz3.ab3@30729>   RTS
0003BCCC <AmiBlitz3.ab3@30732>   JSR findvariable
0003BCD0 <AmiBlitz3.ab3@30733>   BNE 'isunused
0003BCD6 <AmiBlitz3.ab3@30736>    MOVE.w lastchar,-(a7)                                  ;get the typename from source
0003BCDC <AmiBlitz3.ab3@30737>    JSR getparameter2
0003BCE2 <AmiBlitz3.ab3@30738>    MOVE.w (a7)+,lastchar
0003BCE6 <AmiBlitz3.ab3@30739>    MOVE.l $a(a2),a0                                       ; get the name of the type
0003BCEA <AmiBlitz3.ab3@30740>    LEA $b(a0),a0
0003BCF0 <AmiBlitz3.ab3@30741>    LEA ptr_parameterstore,a1
0003BCF2 <AmiBlitz3.ab3@30744>    CMPM.b (a0)+,(a1)+                                     ; compare name
0003BCF6 <AmiBlitz3.ab3@30745>    BNE'error
0003BCF8 <AmiBlitz3.ab3@30746>    TST.b (a1)
0003BCFC <AmiBlitz3.ab3@30747> 
0003BCFE <AmiBlitz3.ab3@30748>    TST.b (a0)
0003BD02 <AmiBlitz3.ab3@30749>    BNE 'error
0003BD06 <AmiBlitz3.ab3@30752>   MOVEM.l (a7)+,d0-d2/a0-a5
0003BD08 <AmiBlitz3.ab3@30753>  RTS
0003BD0E <AmiBlitz3.ab3@30756> JMP errormsg_declaredtwice
0003BD12 <AmiBlitz3.ab3@30760>   MOVEM.l a3/d1,-(a7)
0003BD18 <AmiBlitz3.ab3@30762>   CLR.b a4a5store
0003BD1A <AmiBlitz3.ab3@30765>   MOVE.b (a3)+,d1
0003BD1E <AmiBlitz3.ab3@30766>   CMP.b #$15,d1
0003BD22 <AmiBlitz3.ab3@30767>   BEQ 'find
0003BD26 <AmiBlitz3.ab3@30768>   CMP.b #$14,d1
0003BD2A <AmiBlitz3.ab3@30769>   BEQ 'find
0003BD2E <AmiBlitz3.ab3@30770>   CMP.b #$ff,d1
0003BD32 <AmiBlitz3.ab3@30771>   BNE 'continue
0003BD36 <AmiBlitz3.ab3@30772>   BRA 'notfind
0003BD3C <AmiBlitz3.ab3@30775>   MOVE.l #$48e7000c,d1                  ; write 68k movem.l a4/a5,-(a7)
0003BD42 <AmiBlitz3.ab3@30776>   JSR writelong
0003BD4A <AmiBlitz3.ab3@30777>   MOVE.b #1,a4a5store
0003BD4E <AmiBlitz3.ab3@30780>   MOVEM.l (a7)+,a3/d1
0003BD50 <AmiBlitz3.ab3@30781> RTS
0003BD56 <AmiBlitz3.ab3@30785>   TST.b a4a5store
0003BD5A <AmiBlitz3.ab3@30786>   BEQ 'no
0003BD60 <AmiBlitz3.ab3@30787>   MOVE.l #$4cdf3000,d1                  ; write 68k movem.l (a7)+,a4/a5
0003BD66 <AmiBlitz3.ab3@30788>   JSR writelong
0003BD6C <AmiBlitz3.ab3@30789>   CLR.b a4a5store
0003BD6E <AmiBlitz3.ab3@30792> RTS
0003BD6E <internal_commands.ab3@1> INCLUDE "internal_commands.ab3"
0003BD72 <internal_commands.ab3@13> INCLUDE "internal_commands.ab3"
0003BD74 <internal_commands.ab3@15> INCLUDE "internal_commands.ab3"
0003BD7C <internal_commands.ab3@16> INCLUDE "internal_commands.ab3"
0003BD88 <internal_commands.ab3@17> INCLUDE "internal_commands.ab3"
0003BD8C <internal_commands.ab3@21> INCLUDE "internal_commands.ab3"
0003BD8E <internal_commands.ab3@22> INCLUDE "internal_commands.ab3"
0003BD92 <internal_commands.ab3@23> INCLUDE "internal_commands.ab3"
0003BDDB <internal_commands.ab3@24> INCLUDE "internal_commands.ab3"
0003BDDC <internal_commands.ab3@25> INCLUDE "internal_commands.ab3"
0003BDE0 <internal_commands.ab3@28> INCLUDE "internal_commands.ab3"
0003BDE2 <internal_commands.ab3@29> INCLUDE "internal_commands.ab3"
0003BDE6 <internal_commands.ab3@30> INCLUDE "internal_commands.ab3"
0003BE02 <internal_commands.ab3@31> INCLUDE "internal_commands.ab3"
0003BE06 <internal_commands.ab3@35> INCLUDE "internal_commands.ab3"
0003BE08 <internal_commands.ab3@36> INCLUDE "internal_commands.ab3"
0003BE0C <internal_commands.ab3@37> INCLUDE "internal_commands.ab3"
0003BE69 <internal_commands.ab3@38> INCLUDE "internal_commands.ab3"
0003BE6A <internal_commands.ab3@39> INCLUDE "internal_commands.ab3"
0003BE6E <internal_commands.ab3@42> INCLUDE "internal_commands.ab3"
0003BE70 <internal_commands.ab3@43> INCLUDE "internal_commands.ab3"
0003BE75 <internal_commands.ab3@44> INCLUDE "internal_commands.ab3"
0003BE85 <internal_commands.ab3@45> INCLUDE "internal_commands.ab3"
0003BE86 <internal_commands.ab3@46> INCLUDE "internal_commands.ab3"
0003BE8A <internal_commands.ab3@49> INCLUDE "internal_commands.ab3"
0003BE8C <internal_commands.ab3@50> INCLUDE "internal_commands.ab3"
0003BE92 <internal_commands.ab3@51> INCLUDE "internal_commands.ab3"
0003BEA2 <internal_commands.ab3@52> INCLUDE "internal_commands.ab3"
0003BEA6 <internal_commands.ab3@56> INCLUDE "internal_commands.ab3"
0003BEA8 <internal_commands.ab3@57> INCLUDE "internal_commands.ab3"
0003BEAF <internal_commands.ab3@58> INCLUDE "internal_commands.ab3"
0003BEB0 <internal_commands.ab3@59> INCLUDE "internal_commands.ab3"
0003BEB4 <internal_commands.ab3@63> INCLUDE "internal_commands.ab3"
0003BEB6 <internal_commands.ab3@64> INCLUDE "internal_commands.ab3"
0003BEC0 <internal_commands.ab3@65> INCLUDE "internal_commands.ab3"
0003BEF3 <internal_commands.ab3@66> INCLUDE "internal_commands.ab3"
0003BEF4 <internal_commands.ab3@67> INCLUDE "internal_commands.ab3"
0003BEF8 <internal_commands.ab3@70> INCLUDE "internal_commands.ab3"
0003BEFA <internal_commands.ab3@71> INCLUDE "internal_commands.ab3"
0003BF03 <internal_commands.ab3@72> INCLUDE "internal_commands.ab3"
0003BF3E <internal_commands.ab3@73> INCLUDE "internal_commands.ab3"
0003BF42 <internal_commands.ab3@77> INCLUDE "internal_commands.ab3"
0003BF44 <internal_commands.ab3@78> INCLUDE "internal_commands.ab3"
0003BF4E <internal_commands.ab3@79> INCLUDE "internal_commands.ab3"
0003BF4F <internal_commands.ab3@80> INCLUDE "internal_commands.ab3"
0003BF50 <internal_commands.ab3@81> INCLUDE "internal_commands.ab3"
0003BF54 <internal_commands.ab3@84> INCLUDE "internal_commands.ab3"
0003BF56 <internal_commands.ab3@85> INCLUDE "internal_commands.ab3"
0003BF59 <internal_commands.ab3@86> INCLUDE "internal_commands.ab3"
0003BF70 <internal_commands.ab3@87> INCLUDE "internal_commands.ab3"
0003BF74 <internal_commands.ab3@91> INCLUDE "internal_commands.ab3"
0003BF76 <internal_commands.ab3@92> INCLUDE "internal_commands.ab3"
0003BF7C <internal_commands.ab3@93> INCLUDE "internal_commands.ab3"
0003BF89 <internal_commands.ab3@94> INCLUDE "internal_commands.ab3"
0003BF8A <internal_commands.ab3@95> INCLUDE "internal_commands.ab3"
0003BF8E <internal_commands.ab3@98> INCLUDE "internal_commands.ab3"
0003BF90 <internal_commands.ab3@99> INCLUDE "internal_commands.ab3"
0003BF96 <internal_commands.ab3@100> INCLUDE "internal_commands.ab3"
0003BFA2 <internal_commands.ab3@101> INCLUDE "internal_commands.ab3"
0003BFA6 <internal_commands.ab3@105> INCLUDE "internal_commands.ab3"
0003BFA8 <internal_commands.ab3@106> INCLUDE "internal_commands.ab3"
0003BFAF <internal_commands.ab3@107> INCLUDE "internal_commands.ab3"
0003BFBC <internal_commands.ab3@108> INCLUDE "internal_commands.ab3"
0003BFC0 <internal_commands.ab3@112> INCLUDE "internal_commands.ab3"
0003BFC2 <internal_commands.ab3@113> INCLUDE "internal_commands.ab3"
0003BFC7 <internal_commands.ab3@114> INCLUDE "internal_commands.ab3"
0003BFD4 <internal_commands.ab3@115> INCLUDE "internal_commands.ab3"
0003BFD8 <internal_commands.ab3@119> INCLUDE "internal_commands.ab3"
0003BFDA <internal_commands.ab3@120> INCLUDE "internal_commands.ab3"
0003BFE2 <internal_commands.ab3@121> INCLUDE "internal_commands.ab3"
0003BFE3 <internal_commands.ab3@122> INCLUDE "internal_commands.ab3"
0003BFE4 <internal_commands.ab3@123> INCLUDE "internal_commands.ab3"
0003BFE8 <internal_commands.ab3@126> INCLUDE "internal_commands.ab3"
0003BFEA <internal_commands.ab3@127> INCLUDE "internal_commands.ab3"
0003BFF2 <internal_commands.ab3@128> INCLUDE "internal_commands.ab3"
0003BFF3 <internal_commands.ab3@129> INCLUDE "internal_commands.ab3"
0003BFF4 <internal_commands.ab3@130> INCLUDE "internal_commands.ab3"
0003BFF8 <internal_commands.ab3@133> INCLUDE "internal_commands.ab3"
0003BFFA <internal_commands.ab3@134> INCLUDE "internal_commands.ab3"
0003C003 <internal_commands.ab3@135> INCLUDE "internal_commands.ab3"
0003C00E <internal_commands.ab3@136> INCLUDE "internal_commands.ab3"
0003C012 <internal_commands.ab3@140> INCLUDE "internal_commands.ab3"
0003C014 <internal_commands.ab3@141> INCLUDE "internal_commands.ab3"
0003C01C <internal_commands.ab3@142> INCLUDE "internal_commands.ab3"
0003C027 <internal_commands.ab3@143> INCLUDE "internal_commands.ab3"
0003C028 <internal_commands.ab3@144> INCLUDE "internal_commands.ab3"
0003C02C <internal_commands.ab3@147> INCLUDE "internal_commands.ab3"
0003C02E <internal_commands.ab3@148> INCLUDE "internal_commands.ab3"
0003C035 <internal_commands.ab3@149> INCLUDE "internal_commands.ab3"
0003C097 <internal_commands.ab3@150> INCLUDE "internal_commands.ab3"
0003C098 <internal_commands.ab3@151> INCLUDE "internal_commands.ab3"
0003C09C <internal_commands.ab3@154> INCLUDE "internal_commands.ab3"
0003C09E <internal_commands.ab3@155> INCLUDE "internal_commands.ab3"
0003C0A5 <internal_commands.ab3@156> INCLUDE "internal_commands.ab3"
0003C0B4 <internal_commands.ab3@157> INCLUDE "internal_commands.ab3"
0003C0B8 <internal_commands.ab3@161> INCLUDE "internal_commands.ab3"
0003C0BA <internal_commands.ab3@162> INCLUDE "internal_commands.ab3"
0003C0BE <internal_commands.ab3@163> INCLUDE "internal_commands.ab3"
0003C0F4 <internal_commands.ab3@164> INCLUDE "internal_commands.ab3"
0003C0F8 <internal_commands.ab3@168> INCLUDE "internal_commands.ab3"
0003C0FA <internal_commands.ab3@169> INCLUDE "internal_commands.ab3"
0003C0FF <internal_commands.ab3@170> INCLUDE "internal_commands.ab3"
0003C10E <internal_commands.ab3@171> INCLUDE "internal_commands.ab3"
0003C112 <internal_commands.ab3@175> INCLUDE "internal_commands.ab3"
0003C114 <internal_commands.ab3@176> INCLUDE "internal_commands.ab3"
0003C117 <internal_commands.ab3@177> INCLUDE "internal_commands.ab3"
0003C138 <internal_commands.ab3@178> INCLUDE "internal_commands.ab3"
0003C13C <internal_commands.ab3@182> INCLUDE "internal_commands.ab3"
0003C13E <internal_commands.ab3@183> INCLUDE "internal_commands.ab3"
0003C143 <internal_commands.ab3@184> INCLUDE "internal_commands.ab3"
0003C14F <internal_commands.ab3@185> INCLUDE "internal_commands.ab3"
0003C150 <internal_commands.ab3@186> INCLUDE "internal_commands.ab3"
0003C154 <internal_commands.ab3@189> INCLUDE "internal_commands.ab3"
0003C156 <internal_commands.ab3@190> INCLUDE "internal_commands.ab3"
0003C15B <internal_commands.ab3@191> INCLUDE "internal_commands.ab3"
0003C172 <internal_commands.ab3@192> INCLUDE "internal_commands.ab3"
0003C176 <internal_commands.ab3@196> INCLUDE "internal_commands.ab3"
0003C178 <internal_commands.ab3@197> INCLUDE "internal_commands.ab3"
0003C17D <internal_commands.ab3@198> INCLUDE "internal_commands.ab3"
0003C18C <internal_commands.ab3@199> INCLUDE "internal_commands.ab3"
0003C190 <internal_commands.ab3@203> INCLUDE "internal_commands.ab3"
0003C192 <internal_commands.ab3@204> INCLUDE "internal_commands.ab3"
0003C197 <internal_commands.ab3@205> INCLUDE "internal_commands.ab3"
0003C1B6 <internal_commands.ab3@206> INCLUDE "internal_commands.ab3"
0003C1BA <internal_commands.ab3@210> INCLUDE "internal_commands.ab3"
0003C1BC <internal_commands.ab3@211> INCLUDE "internal_commands.ab3"
0003C1C1 <internal_commands.ab3@212> INCLUDE "internal_commands.ab3"
0003C1E0 <internal_commands.ab3@213> INCLUDE "internal_commands.ab3"
0003C1E4 <internal_commands.ab3@217> INCLUDE "internal_commands.ab3"
0003C1E6 <internal_commands.ab3@218> INCLUDE "internal_commands.ab3"
0003C1EC <internal_commands.ab3@219> INCLUDE "internal_commands.ab3"
0003C1ED <internal_commands.ab3@220> INCLUDE "internal_commands.ab3"
0003C1EE <internal_commands.ab3@221> INCLUDE "internal_commands.ab3"
0003C1F2 <internal_commands.ab3@224> INCLUDE "internal_commands.ab3"
0003C1F4 <internal_commands.ab3@225> INCLUDE "internal_commands.ab3"
0003C1F9 <internal_commands.ab3@226> INCLUDE "internal_commands.ab3"
0003C1FA <internal_commands.ab3@227> INCLUDE "internal_commands.ab3"
0003C1FE <internal_commands.ab3@231> INCLUDE "internal_commands.ab3"
0003C200 <internal_commands.ab3@232> INCLUDE "internal_commands.ab3"
0003C205 <internal_commands.ab3@233> INCLUDE "internal_commands.ab3"
0003C212 <internal_commands.ab3@234> INCLUDE "internal_commands.ab3"
0003C216 <internal_commands.ab3@238> INCLUDE "internal_commands.ab3"
0003C218 <internal_commands.ab3@239> INCLUDE "internal_commands.ab3"
0003C21D <internal_commands.ab3@240> INCLUDE "internal_commands.ab3"
0003C22C <internal_commands.ab3@241> INCLUDE "internal_commands.ab3"
0003C230 <internal_commands.ab3@245> INCLUDE "internal_commands.ab3"
0003C232 <internal_commands.ab3@246> INCLUDE "internal_commands.ab3"
0003C237 <internal_commands.ab3@247> INCLUDE "internal_commands.ab3"
0003C246 <internal_commands.ab3@248> INCLUDE "internal_commands.ab3"
0003C24A <internal_commands.ab3@254> INCLUDE "internal_commands.ab3"
0003C24C <internal_commands.ab3@255> INCLUDE "internal_commands.ab3"
0003C252 <internal_commands.ab3@256> INCLUDE "internal_commands.ab3"
0003C26F <internal_commands.ab3@257> INCLUDE "internal_commands.ab3"
0003C270 <internal_commands.ab3@258> INCLUDE "internal_commands.ab3"
0003C274 <internal_commands.ab3@261> INCLUDE "internal_commands.ab3"
0003C276 <internal_commands.ab3@262> INCLUDE "internal_commands.ab3"
0003C27C <internal_commands.ab3@263> INCLUDE "internal_commands.ab3"
0003C299 <internal_commands.ab3@264> INCLUDE "internal_commands.ab3"
0003C29A <internal_commands.ab3@265> INCLUDE "internal_commands.ab3"
0003C29E <internal_commands.ab3@268> INCLUDE "internal_commands.ab3"
0003C2A0 <internal_commands.ab3@269> INCLUDE "internal_commands.ab3"
0003C2A3 <internal_commands.ab3@270> INCLUDE "internal_commands.ab3"
0003C2BA <internal_commands.ab3@271> INCLUDE "internal_commands.ab3"
0003C2BE <internal_commands.ab3@275> INCLUDE "internal_commands.ab3"
0003C2C0 <internal_commands.ab3@276> INCLUDE "internal_commands.ab3"
0003C2C3 <internal_commands.ab3@277> INCLUDE "internal_commands.ab3"
0003C2D2 <internal_commands.ab3@278> INCLUDE "internal_commands.ab3"
0003C2D6 <internal_commands.ab3@282> INCLUDE "internal_commands.ab3"
0003C2D8 <internal_commands.ab3@283> INCLUDE "internal_commands.ab3"
0003C2DD <internal_commands.ab3@284> INCLUDE "internal_commands.ab3"
0003C2DE <internal_commands.ab3@285> INCLUDE "internal_commands.ab3"
0003C2E2 <internal_commands.ab3@289> INCLUDE "internal_commands.ab3"
0003C2E4 <internal_commands.ab3@290> INCLUDE "internal_commands.ab3"
0003C2E8 <internal_commands.ab3@291> INCLUDE "internal_commands.ab3"
0003C2FD <internal_commands.ab3@292> INCLUDE "internal_commands.ab3"
0003C2FE <internal_commands.ab3@293> INCLUDE "internal_commands.ab3"
0003C302 <internal_commands.ab3@296> INCLUDE "internal_commands.ab3"
0003C304 <internal_commands.ab3@297> INCLUDE "internal_commands.ab3"
0003C30B <internal_commands.ab3@298> INCLUDE "internal_commands.ab3"
0003C324 <internal_commands.ab3@299> INCLUDE "internal_commands.ab3"
0003C328 <internal_commands.ab3@303> INCLUDE "internal_commands.ab3"
0003C32A <internal_commands.ab3@304> INCLUDE "internal_commands.ab3"
0003C331 <internal_commands.ab3@305> INCLUDE "internal_commands.ab3"
0003C33C <internal_commands.ab3@306> INCLUDE "internal_commands.ab3"
0003C340 <internal_commands.ab3@312> INCLUDE "internal_commands.ab3"
0003C342 <internal_commands.ab3@313> INCLUDE "internal_commands.ab3"
0003C347 <internal_commands.ab3@314> INCLUDE "internal_commands.ab3"
0003C35E <internal_commands.ab3@315> INCLUDE "internal_commands.ab3"
0003C362 <internal_commands.ab3@319> INCLUDE "internal_commands.ab3"
0003C364 <internal_commands.ab3@320> INCLUDE "internal_commands.ab3"
0003C368 <internal_commands.ab3@321> INCLUDE "internal_commands.ab3"
0003C37F <internal_commands.ab3@322> INCLUDE "internal_commands.ab3"
0003C380 <internal_commands.ab3@323> INCLUDE "internal_commands.ab3"
0003C384 <internal_commands.ab3@326> INCLUDE "internal_commands.ab3"
0003C386 <internal_commands.ab3@327> INCLUDE "internal_commands.ab3"
0003C38B <internal_commands.ab3@328> INCLUDE "internal_commands.ab3"
0003C38C <internal_commands.ab3@329> INCLUDE "internal_commands.ab3"
0003C390 <internal_commands.ab3@333> INCLUDE "internal_commands.ab3"
0003C392 <internal_commands.ab3@334> INCLUDE "internal_commands.ab3"
0003C397 <internal_commands.ab3@335> INCLUDE "internal_commands.ab3"
0003C39B <internal_commands.ab3@336> INCLUDE "internal_commands.ab3"
0003C39C <internal_commands.ab3@337> INCLUDE "internal_commands.ab3"
0003C3A0 <internal_commands.ab3@340> INCLUDE "internal_commands.ab3"
0003C3A2 <internal_commands.ab3@341> INCLUDE "internal_commands.ab3"
0003C3A9 <internal_commands.ab3@342> INCLUDE "internal_commands.ab3"
0003C3C1 <internal_commands.ab3@343> INCLUDE "internal_commands.ab3"
0003C3C2 <internal_commands.ab3@344> INCLUDE "internal_commands.ab3"
0003C3C6 <internal_commands.ab3@347> INCLUDE "internal_commands.ab3"
0003C3C8 <internal_commands.ab3@348> INCLUDE "internal_commands.ab3"
0003C3CF <internal_commands.ab3@349> INCLUDE "internal_commands.ab3"
0003C3D4 <internal_commands.ab3@350> INCLUDE "internal_commands.ab3"
0003C3D8 <internal_commands.ab3@354> INCLUDE "internal_commands.ab3"
0003C3DA <internal_commands.ab3@355> INCLUDE "internal_commands.ab3"
0003C3E1 <internal_commands.ab3@356> INCLUDE "internal_commands.ab3"
0003C3E6 <internal_commands.ab3@357> INCLUDE "internal_commands.ab3"
0003C3EA <internal_commands.ab3@361> INCLUDE "internal_commands.ab3"
0003C3EC <internal_commands.ab3@362> INCLUDE "internal_commands.ab3"
0003C3F3 <internal_commands.ab3@363> INCLUDE "internal_commands.ab3"
0003C40E <internal_commands.ab3@364> INCLUDE "internal_commands.ab3"
0003C412 <internal_commands.ab3@368> INCLUDE "internal_commands.ab3"
0003C414 <internal_commands.ab3@369> INCLUDE "internal_commands.ab3"
0003C41C <internal_commands.ab3@370> INCLUDE "internal_commands.ab3"
0003C435 <internal_commands.ab3@371> INCLUDE "internal_commands.ab3"
0003C436 <internal_commands.ab3@372> INCLUDE "internal_commands.ab3"
0003C43A <internal_commands.ab3@375> INCLUDE "internal_commands.ab3"
0003C43C <internal_commands.ab3@376> INCLUDE "internal_commands.ab3"
0003C442 <internal_commands.ab3@377> INCLUDE "internal_commands.ab3"
0003C443 <internal_commands.ab3@378> INCLUDE "internal_commands.ab3"
0003C444 <internal_commands.ab3@379> INCLUDE "internal_commands.ab3"
0003C448 <internal_commands.ab3@382> INCLUDE "internal_commands.ab3"
0003C44A <internal_commands.ab3@383> INCLUDE "internal_commands.ab3"
0003C450 <internal_commands.ab3@384> INCLUDE "internal_commands.ab3"
0003C451 <internal_commands.ab3@385> INCLUDE "internal_commands.ab3"
0003C452 <internal_commands.ab3@386> INCLUDE "internal_commands.ab3"
0003C456 <internal_commands.ab3@389> INCLUDE "internal_commands.ab3"
0003C458 <internal_commands.ab3@390> INCLUDE "internal_commands.ab3"
0003C45F <internal_commands.ab3@391> INCLUDE "internal_commands.ab3"
0003C460 <internal_commands.ab3@392> INCLUDE "internal_commands.ab3"
0003C464 <internal_commands.ab3@396> INCLUDE "internal_commands.ab3"
0003C466 <internal_commands.ab3@397> INCLUDE "internal_commands.ab3"
0003C46C <internal_commands.ab3@398> INCLUDE "internal_commands.ab3"
0003C475 <internal_commands.ab3@399> INCLUDE "internal_commands.ab3"
0003C476 <internal_commands.ab3@400> INCLUDE "internal_commands.ab3"
0003C47A <internal_commands.ab3@403> INCLUDE "internal_commands.ab3"
0003C47C <internal_commands.ab3@404> INCLUDE "internal_commands.ab3"
0003C484 <internal_commands.ab3@405> INCLUDE "internal_commands.ab3"
0003C491 <internal_commands.ab3@406> INCLUDE "internal_commands.ab3"
0003C492 <internal_commands.ab3@407> INCLUDE "internal_commands.ab3"
0003C496 <internal_commands.ab3@410> INCLUDE "internal_commands.ab3"
0003C498 <internal_commands.ab3@411> INCLUDE "internal_commands.ab3"
0003C4A0 <internal_commands.ab3@412> INCLUDE "internal_commands.ab3"
0003C4AD <internal_commands.ab3@413> INCLUDE "internal_commands.ab3"
0003C4AE <internal_commands.ab3@414> INCLUDE "internal_commands.ab3"
0003C4B2 <internal_commands.ab3@417> INCLUDE "internal_commands.ab3"
0003C4B4 <internal_commands.ab3@418> INCLUDE "internal_commands.ab3"
0003C4BC <internal_commands.ab3@419> INCLUDE "internal_commands.ab3"
0003C4C9 <internal_commands.ab3@420> INCLUDE "internal_commands.ab3"
0003C4CA <internal_commands.ab3@421> INCLUDE "internal_commands.ab3"
0003C4CE <internal_commands.ab3@424> INCLUDE "internal_commands.ab3"
0003C4D0 <internal_commands.ab3@425> INCLUDE "internal_commands.ab3"
0003C4D5 <internal_commands.ab3@426> INCLUDE "internal_commands.ab3"
0003C4D6 <internal_commands.ab3@427> INCLUDE "internal_commands.ab3"
0003C4DA <internal_commands.ab3@517> INCLUDE "internal_commands.ab3"
0003C4DC <internal_commands.ab3@518> INCLUDE "internal_commands.ab3"
0003C4E1 <internal_commands.ab3@519> INCLUDE "internal_commands.ab3"
0003C4E2 <internal_commands.ab3@520> INCLUDE "internal_commands.ab3"
0003C4E4 <internal_commands.ab3@523> INCLUDE "internal_commands.ab3"
0003C4E8 <internal_commands.ab3@524> INCLUDE "internal_commands.ab3"
0003C4EA <internal_commands.ab3@525> INCLUDE "internal_commands.ab3"
0003C4EC <internal_commands.ab3@526> INCLUDE "internal_commands.ab3"
0003C4F0 <internal_commands.ab3@527> INCLUDE "internal_commands.ab3"
0003C4F2 <internal_commands.ab3@528> INCLUDE "internal_commands.ab3"
0003C4F6 <internal_commands.ab3@532> INCLUDE "internal_commands.ab3"
0003C4F8 <internal_commands.ab3@533> INCLUDE "internal_commands.ab3"
0003C4FC <internal_commands.ab3@534> INCLUDE "internal_commands.ab3"
0003C4FD <internal_commands.ab3@535> INCLUDE "internal_commands.ab3"
0003C4FE <internal_commands.ab3@536> INCLUDE "internal_commands.ab3"
0003C500 <internal_commands.ab3@538> INCLUDE "internal_commands.ab3"
0003C504 <internal_commands.ab3@539> INCLUDE "internal_commands.ab3"
0003C506 <internal_commands.ab3@540> INCLUDE "internal_commands.ab3"
0003C508 <internal_commands.ab3@541> INCLUDE "internal_commands.ab3"
0003C50C <internal_commands.ab3@542> INCLUDE "internal_commands.ab3"
0003C50E <internal_commands.ab3@543> INCLUDE "internal_commands.ab3"
0003C512 <internal_commands.ab3@547> INCLUDE "internal_commands.ab3"
0003C514 <internal_commands.ab3@548> INCLUDE "internal_commands.ab3"
0003C519 <internal_commands.ab3@549> INCLUDE "internal_commands.ab3"
0003C51A <internal_commands.ab3@550> INCLUDE "internal_commands.ab3"
0003C51C <internal_commands.ab3@553> INCLUDE "internal_commands.ab3"
0003C520 <internal_commands.ab3@554> INCLUDE "internal_commands.ab3"
0003C522 <internal_commands.ab3@555> INCLUDE "internal_commands.ab3"
0003C524 <internal_commands.ab3@556> INCLUDE "internal_commands.ab3"
0003C528 <internal_commands.ab3@557> INCLUDE "internal_commands.ab3"
0003C52A <internal_commands.ab3@558> INCLUDE "internal_commands.ab3"
0003C52E <internal_commands.ab3@562> INCLUDE "internal_commands.ab3"
0003C530 <internal_commands.ab3@563> INCLUDE "internal_commands.ab3"
0003C535 <internal_commands.ab3@564> INCLUDE "internal_commands.ab3"
0003C536 <internal_commands.ab3@565> INCLUDE "internal_commands.ab3"
0003C538 <internal_commands.ab3@568> INCLUDE "internal_commands.ab3"
0003C53C <internal_commands.ab3@569> INCLUDE "internal_commands.ab3"
0003C53E <internal_commands.ab3@570> INCLUDE "internal_commands.ab3"
0003C540 <internal_commands.ab3@571> INCLUDE "internal_commands.ab3"
0003C544 <internal_commands.ab3@572> INCLUDE "internal_commands.ab3"
0003C546 <internal_commands.ab3@573> INCLUDE "internal_commands.ab3"
0003C54A <internal_commands.ab3@577> INCLUDE "internal_commands.ab3"
0003C54C <internal_commands.ab3@578> INCLUDE "internal_commands.ab3"
0003C551 <internal_commands.ab3@579> INCLUDE "internal_commands.ab3"
0003C552 <internal_commands.ab3@580> INCLUDE "internal_commands.ab3"
0003C554 <internal_commands.ab3@583> INCLUDE "internal_commands.ab3"
0003C558 <internal_commands.ab3@584> INCLUDE "internal_commands.ab3"
0003C55A <internal_commands.ab3@585> INCLUDE "internal_commands.ab3"
0003C55C <internal_commands.ab3@586> INCLUDE "internal_commands.ab3"
0003C560 <internal_commands.ab3@587> INCLUDE "internal_commands.ab3"
0003C562 <internal_commands.ab3@588> INCLUDE "internal_commands.ab3"
0003C566 <internal_commands.ab3@592> INCLUDE "internal_commands.ab3"
0003C568 <internal_commands.ab3@593> INCLUDE "internal_commands.ab3"
0003C56D <internal_commands.ab3@594> INCLUDE "internal_commands.ab3"
0003C56E <internal_commands.ab3@595> INCLUDE "internal_commands.ab3"
0003C570 <internal_commands.ab3@598> INCLUDE "internal_commands.ab3"
0003C574 <internal_commands.ab3@599> INCLUDE "internal_commands.ab3"
0003C576 <internal_commands.ab3@600> INCLUDE "internal_commands.ab3"
0003C578 <internal_commands.ab3@601> INCLUDE "internal_commands.ab3"
0003C57C <internal_commands.ab3@602> INCLUDE "internal_commands.ab3"
0003C57E <internal_commands.ab3@603> INCLUDE "internal_commands.ab3"
0003C582 <internal_commands.ab3@607> INCLUDE "internal_commands.ab3"
0003C584 <internal_commands.ab3@608> INCLUDE "internal_commands.ab3"
0003C588 <internal_commands.ab3@609> INCLUDE "internal_commands.ab3"
0003C589 <internal_commands.ab3@610> INCLUDE "internal_commands.ab3"
0003C58A <internal_commands.ab3@611> INCLUDE "internal_commands.ab3"
0003C58C <internal_commands.ab3@613> INCLUDE "internal_commands.ab3"
0003C590 <internal_commands.ab3@614> INCLUDE "internal_commands.ab3"
0003C592 <internal_commands.ab3@615> INCLUDE "internal_commands.ab3"
0003C594 <internal_commands.ab3@616> INCLUDE "internal_commands.ab3"
0003C598 <internal_commands.ab3@617> INCLUDE "internal_commands.ab3"
0003C59A <internal_commands.ab3@618> INCLUDE "internal_commands.ab3"
0003C59E <internal_commands.ab3@622> INCLUDE "internal_commands.ab3"
0003C5A0 <internal_commands.ab3@623> INCLUDE "internal_commands.ab3"
0003C5A5 <internal_commands.ab3@624> INCLUDE "internal_commands.ab3"
0003C5A6 <internal_commands.ab3@625> INCLUDE "internal_commands.ab3"
0003C5A8 <internal_commands.ab3@628> INCLUDE "internal_commands.ab3"
0003C5AC <internal_commands.ab3@629> INCLUDE "internal_commands.ab3"
0003C5AE <internal_commands.ab3@630> INCLUDE "internal_commands.ab3"
0003C5B0 <internal_commands.ab3@631> INCLUDE "internal_commands.ab3"
0003C5B4 <internal_commands.ab3@632> INCLUDE "internal_commands.ab3"
0003C5B6 <internal_commands.ab3@633> INCLUDE "internal_commands.ab3"
0003C5BA <internal_commands.ab3@637> INCLUDE "internal_commands.ab3"
0003C5BC <internal_commands.ab3@638> INCLUDE "internal_commands.ab3"
0003C5C0 <internal_commands.ab3@639> INCLUDE "internal_commands.ab3"
0003C5C1 <internal_commands.ab3@640> INCLUDE "internal_commands.ab3"
0003C5C2 <internal_commands.ab3@641> INCLUDE "internal_commands.ab3"
0003C5C4 <internal_commands.ab3@643> INCLUDE "internal_commands.ab3"
0003C5C8 <internal_commands.ab3@644> INCLUDE "internal_commands.ab3"
0003C5CA <internal_commands.ab3@645> INCLUDE "internal_commands.ab3"
0003C5CC <internal_commands.ab3@646> INCLUDE "internal_commands.ab3"
0003C5D0 <internal_commands.ab3@647> INCLUDE "internal_commands.ab3"
0003C5D2 <internal_commands.ab3@648> INCLUDE "internal_commands.ab3"
0003C5D6 <internal_commands.ab3@652> INCLUDE "internal_commands.ab3"
0003C5D8 <internal_commands.ab3@653> INCLUDE "internal_commands.ab3"
0003C5DC <internal_commands.ab3@654> INCLUDE "internal_commands.ab3"
0003C5DD <internal_commands.ab3@655> INCLUDE "internal_commands.ab3"
0003C5DE <internal_commands.ab3@656> INCLUDE "internal_commands.ab3"
0003C5E0 <internal_commands.ab3@658> INCLUDE "internal_commands.ab3"
0003C5E4 <internal_commands.ab3@659> INCLUDE "internal_commands.ab3"
0003C5E6 <internal_commands.ab3@660> INCLUDE "internal_commands.ab3"
0003C5E8 <internal_commands.ab3@661> INCLUDE "internal_commands.ab3"
0003C5EC <internal_commands.ab3@662> INCLUDE "internal_commands.ab3"
0003C5EE <internal_commands.ab3@663> INCLUDE "internal_commands.ab3"
0003C5F2 <internal_commands.ab3@667> INCLUDE "internal_commands.ab3"
0003C5F4 <internal_commands.ab3@668> INCLUDE "internal_commands.ab3"
0003C5F8 <internal_commands.ab3@669> INCLUDE "internal_commands.ab3"
0003C5F9 <internal_commands.ab3@670> INCLUDE "internal_commands.ab3"
0003C5FA <internal_commands.ab3@671> INCLUDE "internal_commands.ab3"
0003C5FC <internal_commands.ab3@673> INCLUDE "internal_commands.ab3"
0003C600 <internal_commands.ab3@674> INCLUDE "internal_commands.ab3"
0003C602 <internal_commands.ab3@675> INCLUDE "internal_commands.ab3"
0003C604 <internal_commands.ab3@676> INCLUDE "internal_commands.ab3"
0003C608 <internal_commands.ab3@677> INCLUDE "internal_commands.ab3"
0003C60A <internal_commands.ab3@678> INCLUDE "internal_commands.ab3"
0003C60E <internal_commands.ab3@682> INCLUDE "internal_commands.ab3"
0003C610 <internal_commands.ab3@683> INCLUDE "internal_commands.ab3"
0003C614 <internal_commands.ab3@684> INCLUDE "internal_commands.ab3"
0003C615 <internal_commands.ab3@685> INCLUDE "internal_commands.ab3"
0003C616 <internal_commands.ab3@686> INCLUDE "internal_commands.ab3"
0003C618 <internal_commands.ab3@688> INCLUDE "internal_commands.ab3"
0003C61C <internal_commands.ab3@689> INCLUDE "internal_commands.ab3"
0003C61E <internal_commands.ab3@690> INCLUDE "internal_commands.ab3"
0003C620 <internal_commands.ab3@691> INCLUDE "internal_commands.ab3"
0003C624 <internal_commands.ab3@692> INCLUDE "internal_commands.ab3"
0003C626 <internal_commands.ab3@693> INCLUDE "internal_commands.ab3"
0003C62A <internal_commands.ab3@697> INCLUDE "internal_commands.ab3"
0003C62C <internal_commands.ab3@698> INCLUDE "internal_commands.ab3"
0003C630 <internal_commands.ab3@699> INCLUDE "internal_commands.ab3"
0003C631 <internal_commands.ab3@700> INCLUDE "internal_commands.ab3"
0003C632 <internal_commands.ab3@701> INCLUDE "internal_commands.ab3"
0003C634 <internal_commands.ab3@703> INCLUDE "internal_commands.ab3"
0003C638 <internal_commands.ab3@704> INCLUDE "internal_commands.ab3"
0003C63A <internal_commands.ab3@705> INCLUDE "internal_commands.ab3"
0003C63C <internal_commands.ab3@706> INCLUDE "internal_commands.ab3"
0003C640 <internal_commands.ab3@707> INCLUDE "internal_commands.ab3"
0003C642 <internal_commands.ab3@708> INCLUDE "internal_commands.ab3"
0003C646 <internal_commands.ab3@712> INCLUDE "internal_commands.ab3"
0003C648 <internal_commands.ab3@713> INCLUDE "internal_commands.ab3"
0003C64C <internal_commands.ab3@714> INCLUDE "internal_commands.ab3"
0003C64D <internal_commands.ab3@715> INCLUDE "internal_commands.ab3"
0003C64E <internal_commands.ab3@716> INCLUDE "internal_commands.ab3"
0003C650 <internal_commands.ab3@718> INCLUDE "internal_commands.ab3"
0003C654 <internal_commands.ab3@719> INCLUDE "internal_commands.ab3"
0003C656 <internal_commands.ab3@720> INCLUDE "internal_commands.ab3"
0003C658 <internal_commands.ab3@721> INCLUDE "internal_commands.ab3"
0003C65C <internal_commands.ab3@722> INCLUDE "internal_commands.ab3"
0003C65E <internal_commands.ab3@723> INCLUDE "internal_commands.ab3"
0003C662 <internal_commands.ab3@727> INCLUDE "internal_commands.ab3"
0003C664 <internal_commands.ab3@728> INCLUDE "internal_commands.ab3"
0003C668 <internal_commands.ab3@729> INCLUDE "internal_commands.ab3"
0003C669 <internal_commands.ab3@730> INCLUDE "internal_commands.ab3"
0003C66A <internal_commands.ab3@731> INCLUDE "internal_commands.ab3"
0003C66C <internal_commands.ab3@733> INCLUDE "internal_commands.ab3"
0003C670 <internal_commands.ab3@734> INCLUDE "internal_commands.ab3"
0003C672 <internal_commands.ab3@735> INCLUDE "internal_commands.ab3"
0003C674 <internal_commands.ab3@736> INCLUDE "internal_commands.ab3"
0003C678 <internal_commands.ab3@737> INCLUDE "internal_commands.ab3"
0003C67A <internal_commands.ab3@738> INCLUDE "internal_commands.ab3"
0003C67E <internal_commands.ab3@742> INCLUDE "internal_commands.ab3"
0003C680 <internal_commands.ab3@743> INCLUDE "internal_commands.ab3"
0003C684 <internal_commands.ab3@744> INCLUDE "internal_commands.ab3"
0003C685 <internal_commands.ab3@745> INCLUDE "internal_commands.ab3"
0003C686 <internal_commands.ab3@746> INCLUDE "internal_commands.ab3"
0003C688 <internal_commands.ab3@748> INCLUDE "internal_commands.ab3"
0003C68C <internal_commands.ab3@749> INCLUDE "internal_commands.ab3"
0003C68E <internal_commands.ab3@750> INCLUDE "internal_commands.ab3"
0003C690 <internal_commands.ab3@751> INCLUDE "internal_commands.ab3"
0003C694 <internal_commands.ab3@752> INCLUDE "internal_commands.ab3"
0003C696 <internal_commands.ab3@753> INCLUDE "internal_commands.ab3"
0003C69A <internal_commands.ab3@757> INCLUDE "internal_commands.ab3"
0003C69C <internal_commands.ab3@758> INCLUDE "internal_commands.ab3"
0003C6A0 <internal_commands.ab3@759> INCLUDE "internal_commands.ab3"
0003C6A1 <internal_commands.ab3@760> INCLUDE "internal_commands.ab3"
0003C6A2 <internal_commands.ab3@761> INCLUDE "internal_commands.ab3"
0003C6A4 <internal_commands.ab3@763> INCLUDE "internal_commands.ab3"
0003C6A8 <internal_commands.ab3@764> INCLUDE "internal_commands.ab3"
0003C6AA <internal_commands.ab3@765> INCLUDE "internal_commands.ab3"
0003C6AC <internal_commands.ab3@766> INCLUDE "internal_commands.ab3"
0003C6B0 <internal_commands.ab3@767> INCLUDE "internal_commands.ab3"
0003C6B2 <internal_commands.ab3@768> INCLUDE "internal_commands.ab3"
0003C6B6 <internal_commands.ab3@772> INCLUDE "internal_commands.ab3"
0003C6B8 <internal_commands.ab3@773> INCLUDE "internal_commands.ab3"
0003C6BC <internal_commands.ab3@774> INCLUDE "internal_commands.ab3"
0003C6BD <internal_commands.ab3@775> INCLUDE "internal_commands.ab3"
0003C6BE <internal_commands.ab3@776> INCLUDE "internal_commands.ab3"
0003C6C0 <internal_commands.ab3@778> INCLUDE "internal_commands.ab3"
0003C6C4 <internal_commands.ab3@779> INCLUDE "internal_commands.ab3"
0003C6C6 <internal_commands.ab3@780> INCLUDE "internal_commands.ab3"
0003C6C8 <internal_commands.ab3@781> INCLUDE "internal_commands.ab3"
0003C6CC <internal_commands.ab3@782> INCLUDE "internal_commands.ab3"
0003C6CE <internal_commands.ab3@783> INCLUDE "internal_commands.ab3"
0003C6D2 <internal_commands.ab3@787> INCLUDE "internal_commands.ab3"
0003C6D4 <internal_commands.ab3@788> INCLUDE "internal_commands.ab3"
0003C6D8 <internal_commands.ab3@789> INCLUDE "internal_commands.ab3"
0003C6D9 <internal_commands.ab3@790> INCLUDE "internal_commands.ab3"
0003C6DA <internal_commands.ab3@791> INCLUDE "internal_commands.ab3"
0003C6DC <internal_commands.ab3@793> INCLUDE "internal_commands.ab3"
0003C6E0 <internal_commands.ab3@794> INCLUDE "internal_commands.ab3"
0003C6E2 <internal_commands.ab3@795> INCLUDE "internal_commands.ab3"
0003C6E4 <internal_commands.ab3@796> INCLUDE "internal_commands.ab3"
0003C6E8 <internal_commands.ab3@797> INCLUDE "internal_commands.ab3"
0003C6EA <internal_commands.ab3@798> INCLUDE "internal_commands.ab3"
0003C6EE <internal_commands.ab3@802> INCLUDE "internal_commands.ab3"
0003C6F0 <internal_commands.ab3@803> INCLUDE "internal_commands.ab3"
0003C6F4 <internal_commands.ab3@804> INCLUDE "internal_commands.ab3"
0003C6F5 <internal_commands.ab3@805> INCLUDE "internal_commands.ab3"
0003C6F6 <internal_commands.ab3@806> INCLUDE "internal_commands.ab3"
0003C6F8 <internal_commands.ab3@808> INCLUDE "internal_commands.ab3"
0003C6FC <internal_commands.ab3@809> INCLUDE "internal_commands.ab3"
0003C6FE <internal_commands.ab3@810> INCLUDE "internal_commands.ab3"
0003C700 <internal_commands.ab3@811> INCLUDE "internal_commands.ab3"
0003C704 <internal_commands.ab3@812> INCLUDE "internal_commands.ab3"
0003C706 <internal_commands.ab3@813> INCLUDE "internal_commands.ab3"
0003C70A <internal_commands.ab3@817> INCLUDE "internal_commands.ab3"
0003C70C <internal_commands.ab3@818> INCLUDE "internal_commands.ab3"
0003C710 <internal_commands.ab3@819> INCLUDE "internal_commands.ab3"
0003C711 <internal_commands.ab3@820> INCLUDE "internal_commands.ab3"
0003C712 <internal_commands.ab3@821> INCLUDE "internal_commands.ab3"
0003C714 <internal_commands.ab3@823> INCLUDE "internal_commands.ab3"
0003C718 <internal_commands.ab3@824> INCLUDE "internal_commands.ab3"
0003C71A <internal_commands.ab3@825> INCLUDE "internal_commands.ab3"
0003C71C <internal_commands.ab3@826> INCLUDE "internal_commands.ab3"
0003C720 <internal_commands.ab3@827> INCLUDE "internal_commands.ab3"
0003C722 <internal_commands.ab3@828> INCLUDE "internal_commands.ab3"
0003C726 <internal_commands.ab3@832> INCLUDE "internal_commands.ab3"
0003C728 <internal_commands.ab3@833> INCLUDE "internal_commands.ab3"
0003C72C <internal_commands.ab3@834> INCLUDE "internal_commands.ab3"
0003C72D <internal_commands.ab3@835> INCLUDE "internal_commands.ab3"
0003C72E <internal_commands.ab3@836> INCLUDE "internal_commands.ab3"
0003C730 <internal_commands.ab3@838> INCLUDE "internal_commands.ab3"
0003C734 <internal_commands.ab3@839> INCLUDE "internal_commands.ab3"
0003C736 <internal_commands.ab3@840> INCLUDE "internal_commands.ab3"
0003C738 <internal_commands.ab3@841> INCLUDE "internal_commands.ab3"
0003C73C <internal_commands.ab3@842> INCLUDE "internal_commands.ab3"
0003C73E <internal_commands.ab3@843> INCLUDE "internal_commands.ab3"
0003C742 <internal_commands.ab3@847> INCLUDE "internal_commands.ab3"
0003C744 <internal_commands.ab3@848> INCLUDE "internal_commands.ab3"
0003C748 <internal_commands.ab3@849> INCLUDE "internal_commands.ab3"
0003C749 <internal_commands.ab3@850> INCLUDE "internal_commands.ab3"
0003C74A <internal_commands.ab3@851> INCLUDE "internal_commands.ab3"
0003C74C <internal_commands.ab3@853> INCLUDE "internal_commands.ab3"
0003C750 <internal_commands.ab3@854> INCLUDE "internal_commands.ab3"
0003C752 <internal_commands.ab3@855> INCLUDE "internal_commands.ab3"
0003C754 <internal_commands.ab3@856> INCLUDE "internal_commands.ab3"
0003C758 <internal_commands.ab3@857> INCLUDE "internal_commands.ab3"
0003C75A <internal_commands.ab3@858> INCLUDE "internal_commands.ab3"
0003C75E <internal_commands.ab3@862> INCLUDE "internal_commands.ab3"
0003C760 <internal_commands.ab3@863> INCLUDE "internal_commands.ab3"
0003C764 <internal_commands.ab3@864> INCLUDE "internal_commands.ab3"
0003C765 <internal_commands.ab3@865> INCLUDE "internal_commands.ab3"
0003C766 <internal_commands.ab3@866> INCLUDE "internal_commands.ab3"
0003C768 <internal_commands.ab3@868> INCLUDE "internal_commands.ab3"
0003C76C <internal_commands.ab3@869> INCLUDE "internal_commands.ab3"
0003C76E <internal_commands.ab3@870> INCLUDE "internal_commands.ab3"
0003C770 <internal_commands.ab3@871> INCLUDE "internal_commands.ab3"
0003C774 <internal_commands.ab3@872> INCLUDE "internal_commands.ab3"
0003C776 <internal_commands.ab3@873> INCLUDE "internal_commands.ab3"
0003C77A <internal_commands.ab3@877> INCLUDE "internal_commands.ab3"
0003C77C <internal_commands.ab3@878> INCLUDE "internal_commands.ab3"
0003C781 <internal_commands.ab3@879> INCLUDE "internal_commands.ab3"
0003C782 <internal_commands.ab3@880> INCLUDE "internal_commands.ab3"
0003C784 <internal_commands.ab3@883> INCLUDE "internal_commands.ab3"
0003C788 <internal_commands.ab3@884> INCLUDE "internal_commands.ab3"
0003C78A <internal_commands.ab3@885> INCLUDE "internal_commands.ab3"
0003C78C <internal_commands.ab3@886> INCLUDE "internal_commands.ab3"
0003C790 <internal_commands.ab3@887> INCLUDE "internal_commands.ab3"
0003C792 <internal_commands.ab3@888> INCLUDE "internal_commands.ab3"
0003C796 <internal_commands.ab3@892> INCLUDE "internal_commands.ab3"
0003C798 <internal_commands.ab3@893> INCLUDE "internal_commands.ab3"
0003C79D <internal_commands.ab3@894> INCLUDE "internal_commands.ab3"
0003C79E <internal_commands.ab3@895> INCLUDE "internal_commands.ab3"
0003C7A0 <internal_commands.ab3@898> INCLUDE "internal_commands.ab3"
0003C7A4 <internal_commands.ab3@899> INCLUDE "internal_commands.ab3"
0003C7A6 <internal_commands.ab3@900> INCLUDE "internal_commands.ab3"
0003C7A8 <internal_commands.ab3@901> INCLUDE "internal_commands.ab3"
0003C7AC <internal_commands.ab3@902> INCLUDE "internal_commands.ab3"
0003C7AE <internal_commands.ab3@903> INCLUDE "internal_commands.ab3"
0003C7B2 <internal_commands.ab3@907> INCLUDE "internal_commands.ab3"
0003C7B4 <internal_commands.ab3@908> INCLUDE "internal_commands.ab3"
0003C7B9 <internal_commands.ab3@909> INCLUDE "internal_commands.ab3"
0003C7BA <internal_commands.ab3@910> INCLUDE "internal_commands.ab3"
0003C7BC <internal_commands.ab3@913> INCLUDE "internal_commands.ab3"
0003C7C0 <internal_commands.ab3@914> INCLUDE "internal_commands.ab3"
0003C7C2 <internal_commands.ab3@915> INCLUDE "internal_commands.ab3"
0003C7C4 <internal_commands.ab3@916> INCLUDE "internal_commands.ab3"
0003C7C8 <internal_commands.ab3@917> INCLUDE "internal_commands.ab3"
0003C7CA <internal_commands.ab3@918> INCLUDE "internal_commands.ab3"
0003C7CE <internal_commands.ab3@922> INCLUDE "internal_commands.ab3"
0003C7D0 <internal_commands.ab3@923> INCLUDE "internal_commands.ab3"
0003C7D5 <internal_commands.ab3@924> INCLUDE "internal_commands.ab3"
0003C7D6 <internal_commands.ab3@925> INCLUDE "internal_commands.ab3"
0003C7D8 <internal_commands.ab3@928> INCLUDE "internal_commands.ab3"
0003C7DC <internal_commands.ab3@929> INCLUDE "internal_commands.ab3"
0003C7DE <internal_commands.ab3@930> INCLUDE "internal_commands.ab3"
0003C7E0 <internal_commands.ab3@931> INCLUDE "internal_commands.ab3"
0003C7E4 <internal_commands.ab3@932> INCLUDE "internal_commands.ab3"
0003C7E6 <internal_commands.ab3@933> INCLUDE "internal_commands.ab3"
0003C7EA <internal_commands.ab3@937> INCLUDE "internal_commands.ab3"
0003C7EC <internal_commands.ab3@938> INCLUDE "internal_commands.ab3"
0003C7F0 <internal_commands.ab3@939> INCLUDE "internal_commands.ab3"
0003C7F1 <internal_commands.ab3@940> INCLUDE "internal_commands.ab3"
0003C7F2 <internal_commands.ab3@941> INCLUDE "internal_commands.ab3"
0003C7F4 <internal_commands.ab3@943> INCLUDE "internal_commands.ab3"
0003C7F8 <internal_commands.ab3@944> INCLUDE "internal_commands.ab3"
0003C7FA <internal_commands.ab3@945> INCLUDE "internal_commands.ab3"
0003C7FC <internal_commands.ab3@946> INCLUDE "internal_commands.ab3"
0003C800 <internal_commands.ab3@947> INCLUDE "internal_commands.ab3"
0003C802 <internal_commands.ab3@948> INCLUDE "internal_commands.ab3"
0003C806 <internal_commands.ab3@952> INCLUDE "internal_commands.ab3"
0003C808 <internal_commands.ab3@953> INCLUDE "internal_commands.ab3"
0003C80C <internal_commands.ab3@954> INCLUDE "internal_commands.ab3"
0003C80D <internal_commands.ab3@955> INCLUDE "internal_commands.ab3"
0003C80E <internal_commands.ab3@956> INCLUDE "internal_commands.ab3"
0003C810 <internal_commands.ab3@958> INCLUDE "internal_commands.ab3"
0003C814 <internal_commands.ab3@959> INCLUDE "internal_commands.ab3"
0003C816 <internal_commands.ab3@960> INCLUDE "internal_commands.ab3"
0003C818 <internal_commands.ab3@961> INCLUDE "internal_commands.ab3"
0003C81C <internal_commands.ab3@962> INCLUDE "internal_commands.ab3"
0003C81E <internal_commands.ab3@963> INCLUDE "internal_commands.ab3"
0003C822 <internal_commands.ab3@967> INCLUDE "internal_commands.ab3"
0003C824 <internal_commands.ab3@968> INCLUDE "internal_commands.ab3"
0003C828 <internal_commands.ab3@969> INCLUDE "internal_commands.ab3"
0003C829 <internal_commands.ab3@970> INCLUDE "internal_commands.ab3"
0003C82A <internal_commands.ab3@971> INCLUDE "internal_commands.ab3"
0003C82C <internal_commands.ab3@973> INCLUDE "internal_commands.ab3"
0003C830 <internal_commands.ab3@974> INCLUDE "internal_commands.ab3"
0003C832 <internal_commands.ab3@975> INCLUDE "internal_commands.ab3"
0003C834 <internal_commands.ab3@976> INCLUDE "internal_commands.ab3"
0003C838 <internal_commands.ab3@977> INCLUDE "internal_commands.ab3"
0003C83A <internal_commands.ab3@978> INCLUDE "internal_commands.ab3"
0003C83E <internal_commands.ab3@982> INCLUDE "internal_commands.ab3"
0003C840 <internal_commands.ab3@983> INCLUDE "internal_commands.ab3"
0003C844 <internal_commands.ab3@984> INCLUDE "internal_commands.ab3"
0003C845 <internal_commands.ab3@985> INCLUDE "internal_commands.ab3"
0003C846 <internal_commands.ab3@986> INCLUDE "internal_commands.ab3"
0003C848 <internal_commands.ab3@988> INCLUDE "internal_commands.ab3"
0003C84C <internal_commands.ab3@989> INCLUDE "internal_commands.ab3"
0003C84E <internal_commands.ab3@990> INCLUDE "internal_commands.ab3"
0003C850 <internal_commands.ab3@991> INCLUDE "internal_commands.ab3"
0003C854 <internal_commands.ab3@992> INCLUDE "internal_commands.ab3"
0003C856 <internal_commands.ab3@993> INCLUDE "internal_commands.ab3"
0003C85A <internal_commands.ab3@997> INCLUDE "internal_commands.ab3"
0003C85C <internal_commands.ab3@998> INCLUDE "internal_commands.ab3"
0003C860 <internal_commands.ab3@999> INCLUDE "internal_commands.ab3"
0003C861 <internal_commands.ab3@1000> INCLUDE "internal_commands.ab3"
0003C862 <internal_commands.ab3@1001> INCLUDE "internal_commands.ab3"
0003C864 <internal_commands.ab3@1003> INCLUDE "internal_commands.ab3"
0003C868 <internal_commands.ab3@1004> INCLUDE "internal_commands.ab3"
0003C86A <internal_commands.ab3@1005> INCLUDE "internal_commands.ab3"
0003C86C <internal_commands.ab3@1006> INCLUDE "internal_commands.ab3"
0003C870 <internal_commands.ab3@1007> INCLUDE "internal_commands.ab3"
0003C872 <internal_commands.ab3@1008> INCLUDE "internal_commands.ab3"
0003C876 <internal_commands.ab3@1012> INCLUDE "internal_commands.ab3"
0003C878 <internal_commands.ab3@1013> INCLUDE "internal_commands.ab3"
0003C87D <internal_commands.ab3@1014> INCLUDE "internal_commands.ab3"
0003C87E <internal_commands.ab3@1015> INCLUDE "internal_commands.ab3"
0003C880 <internal_commands.ab3@1018> INCLUDE "internal_commands.ab3"
0003C884 <internal_commands.ab3@1019> INCLUDE "internal_commands.ab3"
0003C886 <internal_commands.ab3@1020> INCLUDE "internal_commands.ab3"
0003C888 <internal_commands.ab3@1021> INCLUDE "internal_commands.ab3"
0003C88C <internal_commands.ab3@1022> INCLUDE "internal_commands.ab3"
0003C88E <internal_commands.ab3@1023> INCLUDE "internal_commands.ab3"
0003C892 <internal_commands.ab3@1027> INCLUDE "internal_commands.ab3"
0003C894 <internal_commands.ab3@1028> INCLUDE "internal_commands.ab3"
0003C899 <internal_commands.ab3@1029> INCLUDE "internal_commands.ab3"
0003C89A <internal_commands.ab3@1030> INCLUDE "internal_commands.ab3"
0003C89C <internal_commands.ab3@1033> INCLUDE "internal_commands.ab3"
0003C8A0 <internal_commands.ab3@1034> INCLUDE "internal_commands.ab3"
0003C8A2 <internal_commands.ab3@1035> INCLUDE "internal_commands.ab3"
0003C8A4 <internal_commands.ab3@1036> INCLUDE "internal_commands.ab3"
0003C8A8 <internal_commands.ab3@1037> INCLUDE "internal_commands.ab3"
0003C8AA <internal_commands.ab3@1038> INCLUDE "internal_commands.ab3"
0003C8AE <internal_commands.ab3@1042> INCLUDE "internal_commands.ab3"
0003C8B0 <internal_commands.ab3@1043> INCLUDE "internal_commands.ab3"
0003C8B5 <internal_commands.ab3@1044> INCLUDE "internal_commands.ab3"
0003C8B6 <internal_commands.ab3@1045> INCLUDE "internal_commands.ab3"
0003C8B8 <internal_commands.ab3@1048> INCLUDE "internal_commands.ab3"
0003C8BC <internal_commands.ab3@1049> INCLUDE "internal_commands.ab3"
0003C8BE <internal_commands.ab3@1050> INCLUDE "internal_commands.ab3"
0003C8C0 <internal_commands.ab3@1051> INCLUDE "internal_commands.ab3"
0003C8C4 <internal_commands.ab3@1052> INCLUDE "internal_commands.ab3"
0003C8C6 <internal_commands.ab3@1053> INCLUDE "internal_commands.ab3"
0003C8CA <internal_commands.ab3@1057> INCLUDE "internal_commands.ab3"
0003C8CC <internal_commands.ab3@1058> INCLUDE "internal_commands.ab3"
0003C8D1 <internal_commands.ab3@1059> INCLUDE "internal_commands.ab3"
0003C8D2 <internal_commands.ab3@1060> INCLUDE "internal_commands.ab3"
0003C8D4 <internal_commands.ab3@1063> INCLUDE "internal_commands.ab3"
0003C8D8 <internal_commands.ab3@1064> INCLUDE "internal_commands.ab3"
0003C8DA <internal_commands.ab3@1065> INCLUDE "internal_commands.ab3"
0003C8DC <internal_commands.ab3@1066> INCLUDE "internal_commands.ab3"
0003C8E0 <internal_commands.ab3@1067> INCLUDE "internal_commands.ab3"
0003C8E2 <internal_commands.ab3@1068> INCLUDE "internal_commands.ab3"
0003C8E6 <internal_commands.ab3@1072> INCLUDE "internal_commands.ab3"
0003C8E8 <internal_commands.ab3@1073> INCLUDE "internal_commands.ab3"
0003C8ED <internal_commands.ab3@1074> INCLUDE "internal_commands.ab3"
0003C8EE <internal_commands.ab3@1075> INCLUDE "internal_commands.ab3"
0003C8F0 <internal_commands.ab3@1078> INCLUDE "internal_commands.ab3"
0003C8F4 <internal_commands.ab3@1079> INCLUDE "internal_commands.ab3"
0003C8F6 <internal_commands.ab3@1080> INCLUDE "internal_commands.ab3"
0003C8F8 <internal_commands.ab3@1081> INCLUDE "internal_commands.ab3"
0003C8FC <internal_commands.ab3@1082> INCLUDE "internal_commands.ab3"
0003C8FE <internal_commands.ab3@1083> INCLUDE "internal_commands.ab3"
0003C902 <internal_commands.ab3@1087> INCLUDE "internal_commands.ab3"
0003C904 <internal_commands.ab3@1088> INCLUDE "internal_commands.ab3"
0003C909 <internal_commands.ab3@1089> INCLUDE "internal_commands.ab3"
0003C90A <internal_commands.ab3@1090> INCLUDE "internal_commands.ab3"
0003C90C <internal_commands.ab3@1093> INCLUDE "internal_commands.ab3"
0003C910 <internal_commands.ab3@1094> INCLUDE "internal_commands.ab3"
0003C912 <internal_commands.ab3@1095> INCLUDE "internal_commands.ab3"
0003C914 <internal_commands.ab3@1096> INCLUDE "internal_commands.ab3"
0003C918 <internal_commands.ab3@1097> INCLUDE "internal_commands.ab3"
0003C91A <internal_commands.ab3@1098> INCLUDE "internal_commands.ab3"
0003C91E <internal_commands.ab3@1102> INCLUDE "internal_commands.ab3"
0003C920 <internal_commands.ab3@1103> INCLUDE "internal_commands.ab3"
0003C925 <internal_commands.ab3@1104> INCLUDE "internal_commands.ab3"
0003C926 <internal_commands.ab3@1105> INCLUDE "internal_commands.ab3"
0003C928 <internal_commands.ab3@1108> INCLUDE "internal_commands.ab3"
0003C92C <internal_commands.ab3@1109> INCLUDE "internal_commands.ab3"
0003C92E <internal_commands.ab3@1110> INCLUDE "internal_commands.ab3"
0003C930 <internal_commands.ab3@1111> INCLUDE "internal_commands.ab3"
0003C934 <internal_commands.ab3@1112> INCLUDE "internal_commands.ab3"
0003C936 <internal_commands.ab3@1113> INCLUDE "internal_commands.ab3"
0003C93A <internal_commands.ab3@1117> INCLUDE "internal_commands.ab3"
0003C93C <internal_commands.ab3@1118> INCLUDE "internal_commands.ab3"
0003C941 <internal_commands.ab3@1119> INCLUDE "internal_commands.ab3"
0003C942 <internal_commands.ab3@1120> INCLUDE "internal_commands.ab3"
0003C944 <internal_commands.ab3@1123> INCLUDE "internal_commands.ab3"
0003C948 <internal_commands.ab3@1124> INCLUDE "internal_commands.ab3"
0003C94A <internal_commands.ab3@1125> INCLUDE "internal_commands.ab3"
0003C94C <internal_commands.ab3@1126> INCLUDE "internal_commands.ab3"
0003C950 <internal_commands.ab3@1127> INCLUDE "internal_commands.ab3"
0003C952 <internal_commands.ab3@1128> INCLUDE "internal_commands.ab3"
0003C956 <internal_commands.ab3@1132> INCLUDE "internal_commands.ab3"
0003C958 <internal_commands.ab3@1133> INCLUDE "internal_commands.ab3"
0003C95D <internal_commands.ab3@1134> INCLUDE "internal_commands.ab3"
0003C95E <internal_commands.ab3@1135> INCLUDE "internal_commands.ab3"
0003C960 <internal_commands.ab3@1138> INCLUDE "internal_commands.ab3"
0003C964 <internal_commands.ab3@1139> INCLUDE "internal_commands.ab3"
0003C966 <internal_commands.ab3@1140> INCLUDE "internal_commands.ab3"
0003C968 <internal_commands.ab3@1141> INCLUDE "internal_commands.ab3"
0003C96C <internal_commands.ab3@1142> INCLUDE "internal_commands.ab3"
0003C96E <internal_commands.ab3@1143> INCLUDE "internal_commands.ab3"
0003C972 <internal_commands.ab3@1147> INCLUDE "internal_commands.ab3"
0003C974 <internal_commands.ab3@1148> INCLUDE "internal_commands.ab3"
0003C979 <internal_commands.ab3@1149> INCLUDE "internal_commands.ab3"
0003C97A <internal_commands.ab3@1150> INCLUDE "internal_commands.ab3"
0003C97C <internal_commands.ab3@1153> INCLUDE "internal_commands.ab3"
0003C980 <internal_commands.ab3@1154> INCLUDE "internal_commands.ab3"
0003C982 <internal_commands.ab3@1155> INCLUDE "internal_commands.ab3"
0003C984 <internal_commands.ab3@1156> INCLUDE "internal_commands.ab3"
0003C988 <internal_commands.ab3@1157> INCLUDE "internal_commands.ab3"
0003C98A <internal_commands.ab3@1158> INCLUDE "internal_commands.ab3"
0003C98E <internal_commands.ab3@1162> INCLUDE "internal_commands.ab3"
0003C990 <internal_commands.ab3@1163> INCLUDE "internal_commands.ab3"
0003C995 <internal_commands.ab3@1164> INCLUDE "internal_commands.ab3"
0003C996 <internal_commands.ab3@1165> INCLUDE "internal_commands.ab3"
0003C998 <internal_commands.ab3@1168> INCLUDE "internal_commands.ab3"
0003C99C <internal_commands.ab3@1169> INCLUDE "internal_commands.ab3"
0003C99E <internal_commands.ab3@1170> INCLUDE "internal_commands.ab3"
0003C9A0 <internal_commands.ab3@1171> INCLUDE "internal_commands.ab3"
0003C9A4 <internal_commands.ab3@1172> INCLUDE "internal_commands.ab3"
0003C9A6 <internal_commands.ab3@1173> INCLUDE "internal_commands.ab3"
0003C9AA <internal_commands.ab3@1177> INCLUDE "internal_commands.ab3"
0003C9AC <internal_commands.ab3@1178> INCLUDE "internal_commands.ab3"
0003C9B1 <internal_commands.ab3@1179> INCLUDE "internal_commands.ab3"
0003C9B2 <internal_commands.ab3@1180> INCLUDE "internal_commands.ab3"
0003C9B4 <internal_commands.ab3@1183> INCLUDE "internal_commands.ab3"
0003C9B8 <internal_commands.ab3@1184> INCLUDE "internal_commands.ab3"
0003C9BA <internal_commands.ab3@1185> INCLUDE "internal_commands.ab3"
0003C9BC <internal_commands.ab3@1186> INCLUDE "internal_commands.ab3"
0003C9C0 <internal_commands.ab3@1187> INCLUDE "internal_commands.ab3"
0003C9C2 <internal_commands.ab3@1188> INCLUDE "internal_commands.ab3"
0003C9C6 <internal_commands.ab3@1192> INCLUDE "internal_commands.ab3"
0003C9C8 <internal_commands.ab3@1193> INCLUDE "internal_commands.ab3"
0003C9CD <internal_commands.ab3@1194> INCLUDE "internal_commands.ab3"
0003C9CE <internal_commands.ab3@1195> INCLUDE "internal_commands.ab3"
0003C9D0 <internal_commands.ab3@1198> INCLUDE "internal_commands.ab3"
0003C9D4 <internal_commands.ab3@1199> INCLUDE "internal_commands.ab3"
0003C9D6 <internal_commands.ab3@1200> INCLUDE "internal_commands.ab3"
0003C9D8 <internal_commands.ab3@1201> INCLUDE "internal_commands.ab3"
0003C9DC <internal_commands.ab3@1202> INCLUDE "internal_commands.ab3"
0003C9DE <internal_commands.ab3@1203> INCLUDE "internal_commands.ab3"
0003C9E2 <internal_commands.ab3@1207> INCLUDE "internal_commands.ab3"
0003C9E4 <internal_commands.ab3@1208> INCLUDE "internal_commands.ab3"
0003C9E9 <internal_commands.ab3@1209> INCLUDE "internal_commands.ab3"
0003C9EA <internal_commands.ab3@1210> INCLUDE "internal_commands.ab3"
0003C9EC <internal_commands.ab3@1213> INCLUDE "internal_commands.ab3"
0003C9F0 <internal_commands.ab3@1214> INCLUDE "internal_commands.ab3"
0003C9F2 <internal_commands.ab3@1215> INCLUDE "internal_commands.ab3"
0003C9F4 <internal_commands.ab3@1216> INCLUDE "internal_commands.ab3"
0003C9F8 <internal_commands.ab3@1217> INCLUDE "internal_commands.ab3"
0003C9FA <internal_commands.ab3@1218> INCLUDE "internal_commands.ab3"
0003C9FE <internal_commands.ab3@1222> INCLUDE "internal_commands.ab3"
0003CA00 <internal_commands.ab3@1223> INCLUDE "internal_commands.ab3"
0003CA05 <internal_commands.ab3@1224> INCLUDE "internal_commands.ab3"
0003CA06 <internal_commands.ab3@1225> INCLUDE "internal_commands.ab3"
0003CA08 <internal_commands.ab3@1228> INCLUDE "internal_commands.ab3"
0003CA0C <internal_commands.ab3@1229> INCLUDE "internal_commands.ab3"
0003CA0E <internal_commands.ab3@1230> INCLUDE "internal_commands.ab3"
0003CA10 <internal_commands.ab3@1231> INCLUDE "internal_commands.ab3"
0003CA14 <internal_commands.ab3@1232> INCLUDE "internal_commands.ab3"
0003CA16 <internal_commands.ab3@1233> INCLUDE "internal_commands.ab3"
0003CA1A <internal_commands.ab3@1237> INCLUDE "internal_commands.ab3"
0003CA1C <internal_commands.ab3@1238> INCLUDE "internal_commands.ab3"
0003CA21 <internal_commands.ab3@1239> INCLUDE "internal_commands.ab3"
0003CA22 <internal_commands.ab3@1240> INCLUDE "internal_commands.ab3"
0003CA24 <internal_commands.ab3@1243> INCLUDE "internal_commands.ab3"
0003CA28 <internal_commands.ab3@1244> INCLUDE "internal_commands.ab3"
0003CA2A <internal_commands.ab3@1245> INCLUDE "internal_commands.ab3"
0003CA2C <internal_commands.ab3@1246> INCLUDE "internal_commands.ab3"
0003CA30 <internal_commands.ab3@1247> INCLUDE "internal_commands.ab3"
0003CA32 <internal_commands.ab3@1248> INCLUDE "internal_commands.ab3"
0003CA36 <internal_commands.ab3@1252> INCLUDE "internal_commands.ab3"
0003CA38 <internal_commands.ab3@1253> INCLUDE "internal_commands.ab3"
0003CA3D <internal_commands.ab3@1254> INCLUDE "internal_commands.ab3"
0003CA3E <internal_commands.ab3@1255> INCLUDE "internal_commands.ab3"
0003CA40 <internal_commands.ab3@1258> INCLUDE "internal_commands.ab3"
0003CA44 <internal_commands.ab3@1259> INCLUDE "internal_commands.ab3"
0003CA46 <internal_commands.ab3@1260> INCLUDE "internal_commands.ab3"
0003CA48 <internal_commands.ab3@1261> INCLUDE "internal_commands.ab3"
0003CA4C <internal_commands.ab3@1262> INCLUDE "internal_commands.ab3"
0003CA4E <internal_commands.ab3@1263> INCLUDE "internal_commands.ab3"
0003CA52 <internal_commands.ab3@1266> INCLUDE "internal_commands.ab3"
0003CA54 <internal_commands.ab3@1267> INCLUDE "internal_commands.ab3"
0003CA58 <internal_commands.ab3@1268> INCLUDE "internal_commands.ab3"
0003CA59 <internal_commands.ab3@1269> INCLUDE "internal_commands.ab3"
0003CA5A <internal_commands.ab3@1270> INCLUDE "internal_commands.ab3"
0003CA5C <internal_commands.ab3@1272> INCLUDE "internal_commands.ab3"
0003CA60 <internal_commands.ab3@1273> INCLUDE "internal_commands.ab3"
0003CA62 <internal_commands.ab3@1274> INCLUDE "internal_commands.ab3"
0003CA64 <internal_commands.ab3@1275> INCLUDE "internal_commands.ab3"
0003CA68 <internal_commands.ab3@1276> INCLUDE "internal_commands.ab3"
0003CA6A <internal_commands.ab3@1277> INCLUDE "internal_commands.ab3"
0003CA6E <internal_commands.ab3@1281> INCLUDE "internal_commands.ab3"
0003CA70 <internal_commands.ab3@1282> INCLUDE "internal_commands.ab3"
0003CA75 <internal_commands.ab3@1283> INCLUDE "internal_commands.ab3"
0003CA76 <internal_commands.ab3@1284> INCLUDE "internal_commands.ab3"
0003CA78 <internal_commands.ab3@1287> INCLUDE "internal_commands.ab3"
0003CA7C <internal_commands.ab3@1288> INCLUDE "internal_commands.ab3"
0003CA7E <internal_commands.ab3@1289> INCLUDE "internal_commands.ab3"
0003CA80 <internal_commands.ab3@1290> INCLUDE "internal_commands.ab3"
0003CA84 <internal_commands.ab3@1291> INCLUDE "internal_commands.ab3"
0003CA86 <internal_commands.ab3@1292> INCLUDE "internal_commands.ab3"
0003CA8A <internal_commands.ab3@1296> INCLUDE "internal_commands.ab3"
0003CA8C <internal_commands.ab3@1297> INCLUDE "internal_commands.ab3"
0003CA90 <internal_commands.ab3@1298> INCLUDE "internal_commands.ab3"
0003CA91 <internal_commands.ab3@1299> INCLUDE "internal_commands.ab3"
0003CA92 <internal_commands.ab3@1300> INCLUDE "internal_commands.ab3"
0003CA94 <internal_commands.ab3@1302> INCLUDE "internal_commands.ab3"
0003CA98 <internal_commands.ab3@1303> INCLUDE "internal_commands.ab3"
0003CA9A <internal_commands.ab3@1304> INCLUDE "internal_commands.ab3"
0003CA9C <internal_commands.ab3@1305> INCLUDE "internal_commands.ab3"
0003CAA0 <internal_commands.ab3@1306> INCLUDE "internal_commands.ab3"
0003CAA2 <internal_commands.ab3@1307> INCLUDE "internal_commands.ab3"
0003CAA6 <internal_commands.ab3@1311> INCLUDE "internal_commands.ab3"
0003CAA8 <internal_commands.ab3@1312> INCLUDE "internal_commands.ab3"
0003CAAD <internal_commands.ab3@1313> INCLUDE "internal_commands.ab3"
0003CAAE <internal_commands.ab3@1314> INCLUDE "internal_commands.ab3"
0003CAB0 <internal_commands.ab3@1317> INCLUDE "internal_commands.ab3"
0003CAB4 <internal_commands.ab3@1318> INCLUDE "internal_commands.ab3"
0003CAB6 <internal_commands.ab3@1319> INCLUDE "internal_commands.ab3"
0003CAB8 <internal_commands.ab3@1320> INCLUDE "internal_commands.ab3"
0003CABC <internal_commands.ab3@1321> INCLUDE "internal_commands.ab3"
0003CABE <internal_commands.ab3@1322> INCLUDE "internal_commands.ab3"
0003CAC2 <internal_commands.ab3@1326> INCLUDE "internal_commands.ab3"
0003CAC4 <internal_commands.ab3@1327> INCLUDE "internal_commands.ab3"
0003CAC9 <internal_commands.ab3@1328> INCLUDE "internal_commands.ab3"
0003CACA <internal_commands.ab3@1329> INCLUDE "internal_commands.ab3"
0003CACC <internal_commands.ab3@1332> INCLUDE "internal_commands.ab3"
0003CAD0 <internal_commands.ab3@1333> INCLUDE "internal_commands.ab3"
0003CAD2 <internal_commands.ab3@1334> INCLUDE "internal_commands.ab3"
0003CAD4 <internal_commands.ab3@1335> INCLUDE "internal_commands.ab3"
0003CAD8 <internal_commands.ab3@1336> INCLUDE "internal_commands.ab3"
0003CADA <internal_commands.ab3@1337> INCLUDE "internal_commands.ab3"
0003CADE <internal_commands.ab3@1341> INCLUDE "internal_commands.ab3"
0003CAE0 <internal_commands.ab3@1342> INCLUDE "internal_commands.ab3"
0003CAE4 <internal_commands.ab3@1343> INCLUDE "internal_commands.ab3"
0003CAE5 <internal_commands.ab3@1344> INCLUDE "internal_commands.ab3"
0003CAE6 <internal_commands.ab3@1345> INCLUDE "internal_commands.ab3"
0003CAE8 <internal_commands.ab3@1347> INCLUDE "internal_commands.ab3"
0003CAEC <internal_commands.ab3@1348> INCLUDE "internal_commands.ab3"
0003CAEE <internal_commands.ab3@1349> INCLUDE "internal_commands.ab3"
0003CAF0 <internal_commands.ab3@1350> INCLUDE "internal_commands.ab3"
0003CAF4 <internal_commands.ab3@1351> INCLUDE "internal_commands.ab3"
0003CAF6 <internal_commands.ab3@1352> INCLUDE "internal_commands.ab3"
0003CAFA <internal_commands.ab3@1356> INCLUDE "internal_commands.ab3"
0003CAFC <internal_commands.ab3@1357> INCLUDE "internal_commands.ab3"
0003CB01 <internal_commands.ab3@1358> INCLUDE "internal_commands.ab3"
0003CB02 <internal_commands.ab3@1359> INCLUDE "internal_commands.ab3"
0003CB04 <internal_commands.ab3@1362> INCLUDE "internal_commands.ab3"
0003CB08 <internal_commands.ab3@1363> INCLUDE "internal_commands.ab3"
0003CB0A <internal_commands.ab3@1364> INCLUDE "internal_commands.ab3"
0003CB0C <internal_commands.ab3@1365> INCLUDE "internal_commands.ab3"
0003CB10 <internal_commands.ab3@1366> INCLUDE "internal_commands.ab3"
0003CB12 <internal_commands.ab3@1367> INCLUDE "internal_commands.ab3"
0003CB16 <internal_commands.ab3@1371> INCLUDE "internal_commands.ab3"
0003CB18 <internal_commands.ab3@1372> INCLUDE "internal_commands.ab3"
0003CB1C <internal_commands.ab3@1373> INCLUDE "internal_commands.ab3"
0003CB1D <internal_commands.ab3@1374> INCLUDE "internal_commands.ab3"
0003CB1E <internal_commands.ab3@1375> INCLUDE "internal_commands.ab3"
0003CB20 <internal_commands.ab3@1377> INCLUDE "internal_commands.ab3"
0003CB24 <internal_commands.ab3@1378> INCLUDE "internal_commands.ab3"
0003CB26 <internal_commands.ab3@1379> INCLUDE "internal_commands.ab3"
0003CB28 <internal_commands.ab3@1380> INCLUDE "internal_commands.ab3"
0003CB2C <internal_commands.ab3@1381> INCLUDE "internal_commands.ab3"
0003CB2E <internal_commands.ab3@1382> INCLUDE "internal_commands.ab3"
0003CB32 <internal_commands.ab3@1386> INCLUDE "internal_commands.ab3"
0003CB34 <internal_commands.ab3@1387> INCLUDE "internal_commands.ab3"
0003CB38 <internal_commands.ab3@1388> INCLUDE "internal_commands.ab3"
0003CB39 <internal_commands.ab3@1389> INCLUDE "internal_commands.ab3"
0003CB3A <internal_commands.ab3@1390> INCLUDE "internal_commands.ab3"
0003CB3C <internal_commands.ab3@1392> INCLUDE "internal_commands.ab3"
0003CB40 <internal_commands.ab3@1393> INCLUDE "internal_commands.ab3"
0003CB42 <internal_commands.ab3@1394> INCLUDE "internal_commands.ab3"
0003CB44 <internal_commands.ab3@1395> INCLUDE "internal_commands.ab3"
0003CB48 <internal_commands.ab3@1396> INCLUDE "internal_commands.ab3"
0003CB4A <internal_commands.ab3@1397> INCLUDE "internal_commands.ab3"
0003CB4E <internal_commands.ab3@1401> INCLUDE "internal_commands.ab3"
0003CB50 <internal_commands.ab3@1402> INCLUDE "internal_commands.ab3"
0003CB58 <internal_commands.ab3@1403> INCLUDE "internal_commands.ab3"
0003CB59 <internal_commands.ab3@1404> INCLUDE "internal_commands.ab3"
0003CB5A <internal_commands.ab3@1405> INCLUDE "internal_commands.ab3"
0003CB5C <internal_commands.ab3@1407> INCLUDE "internal_commands.ab3"
0003CB60 <internal_commands.ab3@1408> INCLUDE "internal_commands.ab3"
0003CB62 <internal_commands.ab3@1409> INCLUDE "internal_commands.ab3"
0003CB64 <internal_commands.ab3@1410> INCLUDE "internal_commands.ab3"
0003CB68 <internal_commands.ab3@1411> INCLUDE "internal_commands.ab3"
0003CB6A <internal_commands.ab3@1412> INCLUDE "internal_commands.ab3"
0003CB6E <internal_commands.ab3@1416> INCLUDE "internal_commands.ab3"
0003CB70 <internal_commands.ab3@1417> INCLUDE "internal_commands.ab3"
0003CB74 <internal_commands.ab3@1418> INCLUDE "internal_commands.ab3"
0003CB75 <internal_commands.ab3@1419> INCLUDE "internal_commands.ab3"
0003CB76 <internal_commands.ab3@1420> INCLUDE "internal_commands.ab3"
0003CB78 <internal_commands.ab3@1422> INCLUDE "internal_commands.ab3"
0003CB7C <internal_commands.ab3@1423> INCLUDE "internal_commands.ab3"
0003CB7E <internal_commands.ab3@1424> INCLUDE "internal_commands.ab3"
0003CB80 <internal_commands.ab3@1425> INCLUDE "internal_commands.ab3"
0003CB84 <internal_commands.ab3@1426> INCLUDE "internal_commands.ab3"
0003CB86 <internal_commands.ab3@1427> INCLUDE "internal_commands.ab3"
0003CB8A <internal_commands.ab3@1431> INCLUDE "internal_commands.ab3"
0003CB8C <internal_commands.ab3@1432> INCLUDE "internal_commands.ab3"
0003CB90 <internal_commands.ab3@1433> INCLUDE "internal_commands.ab3"
0003CB91 <internal_commands.ab3@1434> INCLUDE "internal_commands.ab3"
0003CB92 <internal_commands.ab3@1435> INCLUDE "internal_commands.ab3"
0003CB94 <internal_commands.ab3@1437> INCLUDE "internal_commands.ab3"
0003CB98 <internal_commands.ab3@1438> INCLUDE "internal_commands.ab3"
0003CB9A <internal_commands.ab3@1439> INCLUDE "internal_commands.ab3"
0003CB9C <internal_commands.ab3@1440> INCLUDE "internal_commands.ab3"
0003CBA0 <internal_commands.ab3@1441> INCLUDE "internal_commands.ab3"
0003CBA2 <internal_commands.ab3@1442> INCLUDE "internal_commands.ab3"
0003CBA6 <internal_commands.ab3@1446> INCLUDE "internal_commands.ab3"
0003CBA8 <internal_commands.ab3@1447> INCLUDE "internal_commands.ab3"
0003CBAC <internal_commands.ab3@1448> INCLUDE "internal_commands.ab3"
0003CBAD <internal_commands.ab3@1449> INCLUDE "internal_commands.ab3"
0003CBAE <internal_commands.ab3@1450> INCLUDE "internal_commands.ab3"
0003CBB0 <internal_commands.ab3@1452> INCLUDE "internal_commands.ab3"
0003CBB4 <internal_commands.ab3@1453> INCLUDE "internal_commands.ab3"
0003CBB6 <internal_commands.ab3@1454> INCLUDE "internal_commands.ab3"
0003CBB8 <internal_commands.ab3@1455> INCLUDE "internal_commands.ab3"
0003CBBC <internal_commands.ab3@1456> INCLUDE "internal_commands.ab3"
0003CBBE <internal_commands.ab3@1457> INCLUDE "internal_commands.ab3"
0003CBC2 <internal_commands.ab3@1461> INCLUDE "internal_commands.ab3"
0003CBC4 <internal_commands.ab3@1462> INCLUDE "internal_commands.ab3"
0003CBC9 <internal_commands.ab3@1463> INCLUDE "internal_commands.ab3"
0003CBCA <internal_commands.ab3@1464> INCLUDE "internal_commands.ab3"
0003CBCC <internal_commands.ab3@1467> INCLUDE "internal_commands.ab3"
0003CBD0 <internal_commands.ab3@1468> INCLUDE "internal_commands.ab3"
0003CBD2 <internal_commands.ab3@1469> INCLUDE "internal_commands.ab3"
0003CBD4 <internal_commands.ab3@1470> INCLUDE "internal_commands.ab3"
0003CBD8 <internal_commands.ab3@1471> INCLUDE "internal_commands.ab3"
0003CBDA <internal_commands.ab3@1472> INCLUDE "internal_commands.ab3"
0003CBDE <internal_commands.ab3@1476> INCLUDE "internal_commands.ab3"
0003CBE0 <internal_commands.ab3@1477> INCLUDE "internal_commands.ab3"
0003CBE4 <internal_commands.ab3@1478> INCLUDE "internal_commands.ab3"
0003CBE5 <internal_commands.ab3@1479> INCLUDE "internal_commands.ab3"
0003CBE6 <internal_commands.ab3@1480> INCLUDE "internal_commands.ab3"
0003CBE8 <internal_commands.ab3@1482> INCLUDE "internal_commands.ab3"
0003CBEC <internal_commands.ab3@1483> INCLUDE "internal_commands.ab3"
0003CBEE <internal_commands.ab3@1484> INCLUDE "internal_commands.ab3"
0003CBF0 <internal_commands.ab3@1485> INCLUDE "internal_commands.ab3"
0003CBF4 <internal_commands.ab3@1486> INCLUDE "internal_commands.ab3"
0003CBF6 <internal_commands.ab3@1487> INCLUDE "internal_commands.ab3"
0003CBFA <internal_commands.ab3@1491> INCLUDE "internal_commands.ab3"
0003CBFC <internal_commands.ab3@1492> INCLUDE "internal_commands.ab3"
0003CC00 <internal_commands.ab3@1493> INCLUDE "internal_commands.ab3"
0003CC01 <internal_commands.ab3@1494> INCLUDE "internal_commands.ab3"
0003CC02 <internal_commands.ab3@1495> INCLUDE "internal_commands.ab3"
0003CC04 <internal_commands.ab3@1497> INCLUDE "internal_commands.ab3"
0003CC08 <internal_commands.ab3@1498> INCLUDE "internal_commands.ab3"
0003CC0A <internal_commands.ab3@1499> INCLUDE "internal_commands.ab3"
0003CC0C <internal_commands.ab3@1500> INCLUDE "internal_commands.ab3"
0003CC10 <internal_commands.ab3@1501> INCLUDE "internal_commands.ab3"
0003CC12 <internal_commands.ab3@1502> INCLUDE "internal_commands.ab3"
0003CC16 <internal_commands.ab3@1506> INCLUDE "internal_commands.ab3"
0003CC18 <internal_commands.ab3@1507> INCLUDE "internal_commands.ab3"
0003CC1D <internal_commands.ab3@1508> INCLUDE "internal_commands.ab3"
0003CC1E <internal_commands.ab3@1509> INCLUDE "internal_commands.ab3"
0003CC20 <internal_commands.ab3@1512> INCLUDE "internal_commands.ab3"
0003CC24 <internal_commands.ab3@1513> INCLUDE "internal_commands.ab3"
0003CC26 <internal_commands.ab3@1514> INCLUDE "internal_commands.ab3"
0003CC28 <internal_commands.ab3@1515> INCLUDE "internal_commands.ab3"
0003CC2C <internal_commands.ab3@1516> INCLUDE "internal_commands.ab3"
0003CC2E <internal_commands.ab3@1517> INCLUDE "internal_commands.ab3"
0003CC32 <internal_commands.ab3@1521> INCLUDE "internal_commands.ab3"
0003CC34 <internal_commands.ab3@1522> INCLUDE "internal_commands.ab3"
0003CC39 <internal_commands.ab3@1523> INCLUDE "internal_commands.ab3"
0003CC3A <internal_commands.ab3@1524> INCLUDE "internal_commands.ab3"
0003CC3C <internal_commands.ab3@1527> INCLUDE "internal_commands.ab3"
0003CC40 <internal_commands.ab3@1528> INCLUDE "internal_commands.ab3"
0003CC42 <internal_commands.ab3@1529> INCLUDE "internal_commands.ab3"
0003CC44 <internal_commands.ab3@1530> INCLUDE "internal_commands.ab3"
0003CC48 <internal_commands.ab3@1531> INCLUDE "internal_commands.ab3"
0003CC4A <internal_commands.ab3@1532> INCLUDE "internal_commands.ab3"
0003CC4E <internal_commands.ab3@1537> INCLUDE "internal_commands.ab3"
0003CC50 <internal_commands.ab3@1538> INCLUDE "internal_commands.ab3"
0003CC56 <internal_commands.ab3@1539> INCLUDE "internal_commands.ab3"
0003CC57 <internal_commands.ab3@1540> INCLUDE "internal_commands.ab3"
0003CC58 <internal_commands.ab3@1541> INCLUDE "internal_commands.ab3"
0003CC5A <internal_commands.ab3@1543> INCLUDE "internal_commands.ab3"
0003CC5E <internal_commands.ab3@1544> INCLUDE "internal_commands.ab3"
0003CC60 <internal_commands.ab3@1545> INCLUDE "internal_commands.ab3"
0003CC62 <internal_commands.ab3@1546> INCLUDE "internal_commands.ab3"
0003CC66 <internal_commands.ab3@1547> INCLUDE "internal_commands.ab3"
0003CC68 <internal_commands.ab3@1548> INCLUDE "internal_commands.ab3"
0003CC6C <internal_commands.ab3@1552> INCLUDE "internal_commands.ab3"
0003CC6E <internal_commands.ab3@1553> INCLUDE "internal_commands.ab3"
0003CC74 <internal_commands.ab3@1554> INCLUDE "internal_commands.ab3"
0003CC75 <internal_commands.ab3@1555> INCLUDE "internal_commands.ab3"
0003CC76 <internal_commands.ab3@1556> INCLUDE "internal_commands.ab3"
0003CC78 <internal_commands.ab3@1558> INCLUDE "internal_commands.ab3"
0003CC7C <internal_commands.ab3@1559> INCLUDE "internal_commands.ab3"
0003CC7E <internal_commands.ab3@1560> INCLUDE "internal_commands.ab3"
0003CC80 <internal_commands.ab3@1561> INCLUDE "internal_commands.ab3"
0003CC84 <internal_commands.ab3@1562> INCLUDE "internal_commands.ab3"
0003CC86 <internal_commands.ab3@1563> INCLUDE "internal_commands.ab3"
0003CC8A <internal_commands.ab3@1567> INCLUDE "internal_commands.ab3"
0003CC8C <internal_commands.ab3@1568> INCLUDE "internal_commands.ab3"
0003CC92 <internal_commands.ab3@1569> INCLUDE "internal_commands.ab3"
0003CC93 <internal_commands.ab3@1570> INCLUDE "internal_commands.ab3"
0003CC94 <internal_commands.ab3@1571> INCLUDE "internal_commands.ab3"
0003CC96 <internal_commands.ab3@1573> INCLUDE "internal_commands.ab3"
0003CC9A <internal_commands.ab3@1574> INCLUDE "internal_commands.ab3"
0003CC9C <internal_commands.ab3@1575> INCLUDE "internal_commands.ab3"
0003CC9E <internal_commands.ab3@1576> INCLUDE "internal_commands.ab3"
0003CCA2 <internal_commands.ab3@1577> INCLUDE "internal_commands.ab3"
0003CCA4 <internal_commands.ab3@1578> INCLUDE "internal_commands.ab3"
0003CCA8 <internal_commands.ab3@1582> INCLUDE "internal_commands.ab3"
0003CCAA <internal_commands.ab3@1583> INCLUDE "internal_commands.ab3"
0003CCAF <internal_commands.ab3@1584> INCLUDE "internal_commands.ab3"
0003CCB0 <internal_commands.ab3@1585> INCLUDE "internal_commands.ab3"
0003CCB2 <internal_commands.ab3@1588> INCLUDE "internal_commands.ab3"
0003CCB6 <internal_commands.ab3@1589> INCLUDE "internal_commands.ab3"
0003CCB8 <internal_commands.ab3@1590> INCLUDE "internal_commands.ab3"
0003CCBA <internal_commands.ab3@1591> INCLUDE "internal_commands.ab3"
0003CCBE <internal_commands.ab3@1592> INCLUDE "internal_commands.ab3"
0003CCC0 <internal_commands.ab3@1593> INCLUDE "internal_commands.ab3"
0003CCC4 <internal_commands.ab3@1597> INCLUDE "internal_commands.ab3"
0003CCC6 <internal_commands.ab3@1598> INCLUDE "internal_commands.ab3"
0003CCCB <internal_commands.ab3@1599> INCLUDE "internal_commands.ab3"
0003CCCC <internal_commands.ab3@1600> INCLUDE "internal_commands.ab3"
0003CCCE <internal_commands.ab3@1603> INCLUDE "internal_commands.ab3"
0003CCD2 <internal_commands.ab3@1604> INCLUDE "internal_commands.ab3"
0003CCD4 <internal_commands.ab3@1605> INCLUDE "internal_commands.ab3"
0003CCD6 <internal_commands.ab3@1606> INCLUDE "internal_commands.ab3"
0003CCDA <internal_commands.ab3@1607> INCLUDE "internal_commands.ab3"
0003CCDC <internal_commands.ab3@1608> INCLUDE "internal_commands.ab3"
0003CCE0 <internal_commands.ab3@1612> INCLUDE "internal_commands.ab3"
0003CCE2 <internal_commands.ab3@1613> INCLUDE "internal_commands.ab3"
0003CCE7 <internal_commands.ab3@1614> INCLUDE "internal_commands.ab3"
0003CCE8 <internal_commands.ab3@1615> INCLUDE "internal_commands.ab3"
0003CCEA <internal_commands.ab3@1618> INCLUDE "internal_commands.ab3"
0003CCEE <internal_commands.ab3@1619> INCLUDE "internal_commands.ab3"
0003CCF0 <internal_commands.ab3@1620> INCLUDE "internal_commands.ab3"
0003CCF2 <internal_commands.ab3@1621> INCLUDE "internal_commands.ab3"
0003CCF6 <internal_commands.ab3@1622> INCLUDE "internal_commands.ab3"
0003CCF8 <internal_commands.ab3@1623> INCLUDE "internal_commands.ab3"
0003CCFC <internal_commands.ab3@1627> INCLUDE "internal_commands.ab3"
0003CCFE <internal_commands.ab3@1628> INCLUDE "internal_commands.ab3"
0003CD02 <internal_commands.ab3@1629> INCLUDE "internal_commands.ab3"
0003CD03 <internal_commands.ab3@1630> INCLUDE "internal_commands.ab3"
0003CD04 <internal_commands.ab3@1631> INCLUDE "internal_commands.ab3"
0003CD06 <internal_commands.ab3@1633> INCLUDE "internal_commands.ab3"
0003CD0A <internal_commands.ab3@1634> INCLUDE "internal_commands.ab3"
0003CD0C <internal_commands.ab3@1635> INCLUDE "internal_commands.ab3"
0003CD0E <internal_commands.ab3@1636> INCLUDE "internal_commands.ab3"
0003CD12 <internal_commands.ab3@1637> INCLUDE "internal_commands.ab3"
0003CD14 <internal_commands.ab3@1638> INCLUDE "internal_commands.ab3"
0003CD18 <internal_commands.ab3@1642> INCLUDE "internal_commands.ab3"
0003CD1A <internal_commands.ab3@1643> INCLUDE "internal_commands.ab3"
0003CD1F <internal_commands.ab3@1644> INCLUDE "internal_commands.ab3"
0003CD20 <internal_commands.ab3@1645> INCLUDE "internal_commands.ab3"
0003CD22 <internal_commands.ab3@1648> INCLUDE "internal_commands.ab3"
0003CD26 <internal_commands.ab3@1649> INCLUDE "internal_commands.ab3"
0003CD28 <internal_commands.ab3@1650> INCLUDE "internal_commands.ab3"
0003CD2A <internal_commands.ab3@1651> INCLUDE "internal_commands.ab3"
0003CD2E <internal_commands.ab3@1652> INCLUDE "internal_commands.ab3"
0003CD30 <internal_commands.ab3@1653> INCLUDE "internal_commands.ab3"
0003CD34 <internal_commands.ab3@1657> INCLUDE "internal_commands.ab3"
0003CD36 <internal_commands.ab3@1658> INCLUDE "internal_commands.ab3"
0003CD3A <internal_commands.ab3@1659> INCLUDE "internal_commands.ab3"
0003CD3B <internal_commands.ab3@1660> INCLUDE "internal_commands.ab3"
0003CD3C <internal_commands.ab3@1661> INCLUDE "internal_commands.ab3"
0003CD3E <internal_commands.ab3@1663> INCLUDE "internal_commands.ab3"
0003CD42 <internal_commands.ab3@1664> INCLUDE "internal_commands.ab3"
0003CD44 <internal_commands.ab3@1665> INCLUDE "internal_commands.ab3"
0003CD46 <internal_commands.ab3@1666> INCLUDE "internal_commands.ab3"
0003CD4A <internal_commands.ab3@1667> INCLUDE "internal_commands.ab3"
0003CD4C <internal_commands.ab3@1668> INCLUDE "internal_commands.ab3"
0003CD50 <internal_commands.ab3@1672> INCLUDE "internal_commands.ab3"
0003CD52 <internal_commands.ab3@1673> INCLUDE "internal_commands.ab3"
0003CD56 <internal_commands.ab3@1674> INCLUDE "internal_commands.ab3"
0003CD57 <internal_commands.ab3@1675> INCLUDE "internal_commands.ab3"
0003CD58 <internal_commands.ab3@1676> INCLUDE "internal_commands.ab3"
0003CD5A <internal_commands.ab3@1678> INCLUDE "internal_commands.ab3"
0003CD5E <internal_commands.ab3@1679> INCLUDE "internal_commands.ab3"
0003CD60 <internal_commands.ab3@1680> INCLUDE "internal_commands.ab3"
0003CD62 <internal_commands.ab3@1681> INCLUDE "internal_commands.ab3"
0003CD66 <internal_commands.ab3@1682> INCLUDE "internal_commands.ab3"
0003CD68 <internal_commands.ab3@1683> INCLUDE "internal_commands.ab3"
0003CD6C <internal_commands.ab3@1687> INCLUDE "internal_commands.ab3"
0003CD6E <internal_commands.ab3@1688> INCLUDE "internal_commands.ab3"
0003CD71 <internal_commands.ab3@1689> INCLUDE "internal_commands.ab3"
0003CD72 <internal_commands.ab3@1690> INCLUDE "internal_commands.ab3"
0003CD74 <internal_commands.ab3@1693> INCLUDE "internal_commands.ab3"
0003CD78 <internal_commands.ab3@1694> INCLUDE "internal_commands.ab3"
0003CD7A <internal_commands.ab3@1695> INCLUDE "internal_commands.ab3"
0003CD7C <internal_commands.ab3@1696> INCLUDE "internal_commands.ab3"
0003CD80 <internal_commands.ab3@1697> INCLUDE "internal_commands.ab3"
0003CD82 <internal_commands.ab3@1698> INCLUDE "internal_commands.ab3"
0003CD86 <internal_commands.ab3@1702> INCLUDE "internal_commands.ab3"
0003CD88 <internal_commands.ab3@1703> INCLUDE "internal_commands.ab3"
0003CD8C <internal_commands.ab3@1704> INCLUDE "internal_commands.ab3"
0003CD8D <internal_commands.ab3@1705> INCLUDE "internal_commands.ab3"
0003CD8E <internal_commands.ab3@1706> INCLUDE "internal_commands.ab3"
0003CD90 <internal_commands.ab3@1708> INCLUDE "internal_commands.ab3"
0003CD94 <internal_commands.ab3@1709> INCLUDE "internal_commands.ab3"
0003CD96 <internal_commands.ab3@1710> INCLUDE "internal_commands.ab3"
0003CD98 <internal_commands.ab3@1711> INCLUDE "internal_commands.ab3"
0003CD9C <internal_commands.ab3@1712> INCLUDE "internal_commands.ab3"
0003CD9E <internal_commands.ab3@1713> INCLUDE "internal_commands.ab3"
0003CDA2 <internal_commands.ab3@1717> INCLUDE "internal_commands.ab3"
0003CDA4 <internal_commands.ab3@1718> INCLUDE "internal_commands.ab3"
0003CDA8 <internal_commands.ab3@1719> INCLUDE "internal_commands.ab3"
0003CDA9 <internal_commands.ab3@1720> INCLUDE "internal_commands.ab3"
0003CDAA <internal_commands.ab3@1721> INCLUDE "internal_commands.ab3"
0003CDAC <internal_commands.ab3@1723> INCLUDE "internal_commands.ab3"
0003CDB0 <internal_commands.ab3@1724> INCLUDE "internal_commands.ab3"
0003CDB2 <internal_commands.ab3@1725> INCLUDE "internal_commands.ab3"
0003CDB4 <internal_commands.ab3@1726> INCLUDE "internal_commands.ab3"
0003CDB8 <internal_commands.ab3@1727> INCLUDE "internal_commands.ab3"
0003CDBA <internal_commands.ab3@1728> INCLUDE "internal_commands.ab3"
0003CDBE <internal_commands.ab3@1732> INCLUDE "internal_commands.ab3"
0003CDC0 <internal_commands.ab3@1733> INCLUDE "internal_commands.ab3"
0003CDC6 <internal_commands.ab3@1734> INCLUDE "internal_commands.ab3"
0003CDC7 <internal_commands.ab3@1735> INCLUDE "internal_commands.ab3"
0003CDC8 <internal_commands.ab3@1736> INCLUDE "internal_commands.ab3"
0003CDCA <internal_commands.ab3@1738> INCLUDE "internal_commands.ab3"
0003CDCE <internal_commands.ab3@1739> INCLUDE "internal_commands.ab3"
0003CDD0 <internal_commands.ab3@1740> INCLUDE "internal_commands.ab3"
0003CDD2 <internal_commands.ab3@1741> INCLUDE "internal_commands.ab3"
0003CDD6 <internal_commands.ab3@1742> INCLUDE "internal_commands.ab3"
0003CDD8 <internal_commands.ab3@1743> INCLUDE "internal_commands.ab3"
0003CDDC <internal_commands.ab3@1747> INCLUDE "internal_commands.ab3"
0003CDDE <internal_commands.ab3@1748> INCLUDE "internal_commands.ab3"
0003CDE2 <internal_commands.ab3@1749> INCLUDE "internal_commands.ab3"
0003CDE3 <internal_commands.ab3@1750> INCLUDE "internal_commands.ab3"
0003CDE4 <internal_commands.ab3@1751> INCLUDE "internal_commands.ab3"
0003CDE6 <internal_commands.ab3@1753> INCLUDE "internal_commands.ab3"
0003CDEA <internal_commands.ab3@1754> INCLUDE "internal_commands.ab3"
0003CDEC <internal_commands.ab3@1755> INCLUDE "internal_commands.ab3"
0003CDEE <internal_commands.ab3@1756> INCLUDE "internal_commands.ab3"
0003CDF2 <internal_commands.ab3@1757> INCLUDE "internal_commands.ab3"
0003CDF4 <internal_commands.ab3@1758> INCLUDE "internal_commands.ab3"
0003CDF8 <internal_commands.ab3@1762> INCLUDE "internal_commands.ab3"
0003CDFA <internal_commands.ab3@1763> INCLUDE "internal_commands.ab3"
0003CDFE <internal_commands.ab3@1764> INCLUDE "internal_commands.ab3"
0003CDFF <internal_commands.ab3@1765> INCLUDE "internal_commands.ab3"
0003CE00 <internal_commands.ab3@1766> INCLUDE "internal_commands.ab3"
0003CE02 <internal_commands.ab3@1768> INCLUDE "internal_commands.ab3"
0003CE06 <internal_commands.ab3@1769> INCLUDE "internal_commands.ab3"
0003CE08 <internal_commands.ab3@1770> INCLUDE "internal_commands.ab3"
0003CE0A <internal_commands.ab3@1771> INCLUDE "internal_commands.ab3"
0003CE0E <internal_commands.ab3@1772> INCLUDE "internal_commands.ab3"
0003CE10 <internal_commands.ab3@1773> INCLUDE "internal_commands.ab3"
0003CE14 <internal_commands.ab3@1777> INCLUDE "internal_commands.ab3"
0003CE16 <internal_commands.ab3@1778> INCLUDE "internal_commands.ab3"
0003CE1B <internal_commands.ab3@1779> INCLUDE "internal_commands.ab3"
0003CE1C <internal_commands.ab3@1780> INCLUDE "internal_commands.ab3"
0003CE1E <internal_commands.ab3@1783> INCLUDE "internal_commands.ab3"
0003CE22 <internal_commands.ab3@1784> INCLUDE "internal_commands.ab3"
0003CE24 <internal_commands.ab3@1785> INCLUDE "internal_commands.ab3"
0003CE26 <internal_commands.ab3@1786> INCLUDE "internal_commands.ab3"
0003CE2A <internal_commands.ab3@1787> INCLUDE "internal_commands.ab3"
0003CE2C <internal_commands.ab3@1788> INCLUDE "internal_commands.ab3"
0003CE30 <internal_commands.ab3@1792> INCLUDE "internal_commands.ab3"
0003CE32 <internal_commands.ab3@1793> INCLUDE "internal_commands.ab3"
0003CE37 <internal_commands.ab3@1794> INCLUDE "internal_commands.ab3"
0003CE38 <internal_commands.ab3@1795> INCLUDE "internal_commands.ab3"
0003CE3A <internal_commands.ab3@1798> INCLUDE "internal_commands.ab3"
0003CE3E <internal_commands.ab3@1799> INCLUDE "internal_commands.ab3"
0003CE40 <internal_commands.ab3@1800> INCLUDE "internal_commands.ab3"
0003CE42 <internal_commands.ab3@1801> INCLUDE "internal_commands.ab3"
0003CE46 <internal_commands.ab3@1802> INCLUDE "internal_commands.ab3"
0003CE48 <internal_commands.ab3@1803> INCLUDE "internal_commands.ab3"
0003CE4C <internal_commands.ab3@1807> INCLUDE "internal_commands.ab3"
0003CE4E <internal_commands.ab3@1808> INCLUDE "internal_commands.ab3"
0003CE52 <internal_commands.ab3@1809> INCLUDE "internal_commands.ab3"
0003CE53 <internal_commands.ab3@1810> INCLUDE "internal_commands.ab3"
0003CE54 <internal_commands.ab3@1811> INCLUDE "internal_commands.ab3"
0003CE56 <internal_commands.ab3@1813> INCLUDE "internal_commands.ab3"
0003CE5A <internal_commands.ab3@1814> INCLUDE "internal_commands.ab3"
0003CE5C <internal_commands.ab3@1815> INCLUDE "internal_commands.ab3"
0003CE5E <internal_commands.ab3@1816> INCLUDE "internal_commands.ab3"
0003CE62 <internal_commands.ab3@1817> INCLUDE "internal_commands.ab3"
0003CE64 <internal_commands.ab3@1818> INCLUDE "internal_commands.ab3"
0003CE68 <internal_commands.ab3@1822> INCLUDE "internal_commands.ab3"
0003CE6A <internal_commands.ab3@1823> INCLUDE "internal_commands.ab3"
0003CE6E <internal_commands.ab3@1824> INCLUDE "internal_commands.ab3"
0003CE6F <internal_commands.ab3@1825> INCLUDE "internal_commands.ab3"
0003CE70 <internal_commands.ab3@1826> INCLUDE "internal_commands.ab3"
0003CE72 <internal_commands.ab3@1828> INCLUDE "internal_commands.ab3"
0003CE76 <internal_commands.ab3@1829> INCLUDE "internal_commands.ab3"
0003CE78 <internal_commands.ab3@1830> INCLUDE "internal_commands.ab3"
0003CE7A <internal_commands.ab3@1831> INCLUDE "internal_commands.ab3"
0003CE7E <internal_commands.ab3@1832> INCLUDE "internal_commands.ab3"
0003CE80 <internal_commands.ab3@1833> INCLUDE "internal_commands.ab3"
0003CE84 <internal_commands.ab3@1837> INCLUDE "internal_commands.ab3"
0003CE86 <internal_commands.ab3@1838> INCLUDE "internal_commands.ab3"
0003CE8A <internal_commands.ab3@1839> INCLUDE "internal_commands.ab3"
0003CE8B <internal_commands.ab3@1840> INCLUDE "internal_commands.ab3"
0003CE8C <internal_commands.ab3@1841> INCLUDE "internal_commands.ab3"
0003CE8E <internal_commands.ab3@1843> INCLUDE "internal_commands.ab3"
0003CE92 <internal_commands.ab3@1844> INCLUDE "internal_commands.ab3"
0003CE94 <internal_commands.ab3@1845> INCLUDE "internal_commands.ab3"
0003CE96 <internal_commands.ab3@1846> INCLUDE "internal_commands.ab3"
0003CE9A <internal_commands.ab3@1847> INCLUDE "internal_commands.ab3"
0003CE9C <internal_commands.ab3@1848> INCLUDE "internal_commands.ab3"
0003CEA0 <internal_commands.ab3@1852> INCLUDE "internal_commands.ab3"
0003CEA2 <internal_commands.ab3@1853> INCLUDE "internal_commands.ab3"
0003CEA7 <internal_commands.ab3@1854> INCLUDE "internal_commands.ab3"
0003CEA8 <internal_commands.ab3@1855> INCLUDE "internal_commands.ab3"
0003CEAA <internal_commands.ab3@1858> INCLUDE "internal_commands.ab3"
0003CEAE <internal_commands.ab3@1859> INCLUDE "internal_commands.ab3"
0003CEB0 <internal_commands.ab3@1860> INCLUDE "internal_commands.ab3"
0003CEB2 <internal_commands.ab3@1861> INCLUDE "internal_commands.ab3"
0003CEB6 <internal_commands.ab3@1862> INCLUDE "internal_commands.ab3"
0003CEB8 <internal_commands.ab3@1863> INCLUDE "internal_commands.ab3"
0003CEBC <internal_commands.ab3@1867> INCLUDE "internal_commands.ab3"
0003CEBE <internal_commands.ab3@1868> INCLUDE "internal_commands.ab3"
0003CEC2 <internal_commands.ab3@1869> INCLUDE "internal_commands.ab3"
0003CEC3 <internal_commands.ab3@1870> INCLUDE "internal_commands.ab3"
0003CEC4 <internal_commands.ab3@1871> INCLUDE "internal_commands.ab3"
0003CEC6 <internal_commands.ab3@1873> INCLUDE "internal_commands.ab3"
0003CECA <internal_commands.ab3@1874> INCLUDE "internal_commands.ab3"
0003CECC <internal_commands.ab3@1875> INCLUDE "internal_commands.ab3"
0003CECE <internal_commands.ab3@1876> INCLUDE "internal_commands.ab3"
0003CED2 <internal_commands.ab3@1877> INCLUDE "internal_commands.ab3"
0003CED4 <internal_commands.ab3@1878> INCLUDE "internal_commands.ab3"
0003CED8 <internal_commands.ab3@1882> INCLUDE "internal_commands.ab3"
0003CEDA <internal_commands.ab3@1883> INCLUDE "internal_commands.ab3"
0003CEDE <internal_commands.ab3@1884> INCLUDE "internal_commands.ab3"
0003CEDF <internal_commands.ab3@1885> INCLUDE "internal_commands.ab3"
0003CEE0 <internal_commands.ab3@1886> INCLUDE "internal_commands.ab3"
0003CEE2 <internal_commands.ab3@1888> INCLUDE "internal_commands.ab3"
0003CEE6 <internal_commands.ab3@1889> INCLUDE "internal_commands.ab3"
0003CEE8 <internal_commands.ab3@1890> INCLUDE "internal_commands.ab3"
0003CEEA <internal_commands.ab3@1891> INCLUDE "internal_commands.ab3"
0003CEEE <internal_commands.ab3@1892> INCLUDE "internal_commands.ab3"
0003CEF0 <internal_commands.ab3@1893> INCLUDE "internal_commands.ab3"
0003CEF4 <internal_commands.ab3@1897> INCLUDE "internal_commands.ab3"
0003CEF6 <internal_commands.ab3@1898> INCLUDE "internal_commands.ab3"
0003CEFA <internal_commands.ab3@1899> INCLUDE "internal_commands.ab3"
0003CEFB <internal_commands.ab3@1900> INCLUDE "internal_commands.ab3"
0003CEFC <internal_commands.ab3@1901> INCLUDE "internal_commands.ab3"
0003CEFE <internal_commands.ab3@1903> INCLUDE "internal_commands.ab3"
0003CF02 <internal_commands.ab3@1904> INCLUDE "internal_commands.ab3"
0003CF04 <internal_commands.ab3@1905> INCLUDE "internal_commands.ab3"
0003CF06 <internal_commands.ab3@1906> INCLUDE "internal_commands.ab3"
0003CF0A <internal_commands.ab3@1907> INCLUDE "internal_commands.ab3"
0003CF0C <internal_commands.ab3@1908> INCLUDE "internal_commands.ab3"
0003CF10 <internal_commands.ab3@1912> INCLUDE "internal_commands.ab3"
0003CF12 <internal_commands.ab3@1913> INCLUDE "internal_commands.ab3"
0003CF16 <internal_commands.ab3@1914> INCLUDE "internal_commands.ab3"
0003CF17 <internal_commands.ab3@1915> INCLUDE "internal_commands.ab3"
0003CF18 <internal_commands.ab3@1916> INCLUDE "internal_commands.ab3"
0003CF1A <internal_commands.ab3@1918> INCLUDE "internal_commands.ab3"
0003CF1E <internal_commands.ab3@1919> INCLUDE "internal_commands.ab3"
0003CF20 <internal_commands.ab3@1920> INCLUDE "internal_commands.ab3"
0003CF22 <internal_commands.ab3@1921> INCLUDE "internal_commands.ab3"
0003CF26 <internal_commands.ab3@1922> INCLUDE "internal_commands.ab3"
0003CF28 <internal_commands.ab3@1923> INCLUDE "internal_commands.ab3"
0003CF2C <internal_commands.ab3@1927> INCLUDE "internal_commands.ab3"
0003CF2E <internal_commands.ab3@1928> INCLUDE "internal_commands.ab3"
0003CF32 <internal_commands.ab3@1929> INCLUDE "internal_commands.ab3"
0003CF33 <internal_commands.ab3@1930> INCLUDE "internal_commands.ab3"
0003CF34 <internal_commands.ab3@1931> INCLUDE "internal_commands.ab3"
0003CF36 <internal_commands.ab3@1933> INCLUDE "internal_commands.ab3"
0003CF3A <internal_commands.ab3@1934> INCLUDE "internal_commands.ab3"
0003CF3C <internal_commands.ab3@1935> INCLUDE "internal_commands.ab3"
0003CF3E <internal_commands.ab3@1936> INCLUDE "internal_commands.ab3"
0003CF42 <internal_commands.ab3@1937> INCLUDE "internal_commands.ab3"
0003CF44 <internal_commands.ab3@1938> INCLUDE "internal_commands.ab3"
0003CF48 <internal_commands.ab3@1942> INCLUDE "internal_commands.ab3"
0003CF4A <internal_commands.ab3@1943> INCLUDE "internal_commands.ab3"
0003CF4E <internal_commands.ab3@1944> INCLUDE "internal_commands.ab3"
0003CF4F <internal_commands.ab3@1945> INCLUDE "internal_commands.ab3"
0003CF50 <internal_commands.ab3@1946> INCLUDE "internal_commands.ab3"
0003CF52 <internal_commands.ab3@1948> INCLUDE "internal_commands.ab3"
0003CF56 <internal_commands.ab3@1949> INCLUDE "internal_commands.ab3"
0003CF58 <internal_commands.ab3@1950> INCLUDE "internal_commands.ab3"
0003CF5A <internal_commands.ab3@1951> INCLUDE "internal_commands.ab3"
0003CF5E <internal_commands.ab3@1952> INCLUDE "internal_commands.ab3"
0003CF60 <internal_commands.ab3@1953> INCLUDE "internal_commands.ab3"
0003CF64 <internal_commands.ab3@1957> INCLUDE "internal_commands.ab3"
0003CF66 <internal_commands.ab3@1958> INCLUDE "internal_commands.ab3"
0003CF6A <internal_commands.ab3@1959> INCLUDE "internal_commands.ab3"
0003CF6B <internal_commands.ab3@1960> INCLUDE "internal_commands.ab3"
0003CF6C <internal_commands.ab3@1961> INCLUDE "internal_commands.ab3"
0003CF6E <internal_commands.ab3@1963> INCLUDE "internal_commands.ab3"
0003CF72 <internal_commands.ab3@1964> INCLUDE "internal_commands.ab3"
0003CF74 <internal_commands.ab3@1965> INCLUDE "internal_commands.ab3"
0003CF76 <internal_commands.ab3@1966> INCLUDE "internal_commands.ab3"
0003CF7A <internal_commands.ab3@1967> INCLUDE "internal_commands.ab3"
0003CF7C <internal_commands.ab3@1968> INCLUDE "internal_commands.ab3"
0003CF80 <internal_commands.ab3@1972> INCLUDE "internal_commands.ab3"
0003CF82 <internal_commands.ab3@1973> INCLUDE "internal_commands.ab3"
0003CF86 <internal_commands.ab3@1974> INCLUDE "internal_commands.ab3"
0003CF87 <internal_commands.ab3@1975> INCLUDE "internal_commands.ab3"
0003CF88 <internal_commands.ab3@1976> INCLUDE "internal_commands.ab3"
0003CF8A <internal_commands.ab3@1978> INCLUDE "internal_commands.ab3"
0003CF8E <internal_commands.ab3@1979> INCLUDE "internal_commands.ab3"
0003CF90 <internal_commands.ab3@1980> INCLUDE "internal_commands.ab3"
0003CF92 <internal_commands.ab3@1981> INCLUDE "internal_commands.ab3"
0003CF96 <internal_commands.ab3@1982> INCLUDE "internal_commands.ab3"
0003CF98 <internal_commands.ab3@1983> INCLUDE "internal_commands.ab3"
0003CF9C <internal_commands.ab3@1987> INCLUDE "internal_commands.ab3"
0003CF9E <internal_commands.ab3@1988> INCLUDE "internal_commands.ab3"
0003CFA2 <internal_commands.ab3@1989> INCLUDE "internal_commands.ab3"
0003CFA3 <internal_commands.ab3@1990> INCLUDE "internal_commands.ab3"
0003CFA4 <internal_commands.ab3@1991> INCLUDE "internal_commands.ab3"
0003CFA6 <internal_commands.ab3@1993> INCLUDE "internal_commands.ab3"
0003CFAA <internal_commands.ab3@1994> INCLUDE "internal_commands.ab3"
0003CFAC <internal_commands.ab3@1995> INCLUDE "internal_commands.ab3"
0003CFAE <internal_commands.ab3@1996> INCLUDE "internal_commands.ab3"
0003CFB2 <internal_commands.ab3@1997> INCLUDE "internal_commands.ab3"
0003CFB4 <internal_commands.ab3@1998> INCLUDE "internal_commands.ab3"
0003CFB8 <internal_commands.ab3@2002> INCLUDE "internal_commands.ab3"
0003CFBA <internal_commands.ab3@2003> INCLUDE "internal_commands.ab3"
0003CFBE <internal_commands.ab3@2004> INCLUDE "internal_commands.ab3"
0003CFBF <internal_commands.ab3@2005> INCLUDE "internal_commands.ab3"
0003CFC0 <internal_commands.ab3@2006> INCLUDE "internal_commands.ab3"
0003CFC2 <internal_commands.ab3@2008> INCLUDE "internal_commands.ab3"
0003CFC6 <internal_commands.ab3@2009> INCLUDE "internal_commands.ab3"
0003CFC8 <internal_commands.ab3@2010> INCLUDE "internal_commands.ab3"
0003CFCA <internal_commands.ab3@2011> INCLUDE "internal_commands.ab3"
0003CFCE <internal_commands.ab3@2012> INCLUDE "internal_commands.ab3"
0003CFD0 <internal_commands.ab3@2013> INCLUDE "internal_commands.ab3"
0003CFD4 <internal_commands.ab3@2017> INCLUDE "internal_commands.ab3"
0003CFD6 <internal_commands.ab3@2018> INCLUDE "internal_commands.ab3"
0003CFDA <internal_commands.ab3@2019> INCLUDE "internal_commands.ab3"
0003CFDB <internal_commands.ab3@2020> INCLUDE "internal_commands.ab3"
0003CFDC <internal_commands.ab3@2021> INCLUDE "internal_commands.ab3"
0003CFDE <internal_commands.ab3@2023> INCLUDE "internal_commands.ab3"
0003CFE2 <internal_commands.ab3@2024> INCLUDE "internal_commands.ab3"
0003CFE4 <internal_commands.ab3@2025> INCLUDE "internal_commands.ab3"
0003CFE6 <internal_commands.ab3@2026> INCLUDE "internal_commands.ab3"
0003CFEA <internal_commands.ab3@2027> INCLUDE "internal_commands.ab3"
0003CFEC <internal_commands.ab3@2028> INCLUDE "internal_commands.ab3"
0003CFF0 <internal_commands.ab3@2032> INCLUDE "internal_commands.ab3"
0003CFF2 <internal_commands.ab3@2033> INCLUDE "internal_commands.ab3"
0003CFF6 <internal_commands.ab3@2034> INCLUDE "internal_commands.ab3"
0003CFF7 <internal_commands.ab3@2035> INCLUDE "internal_commands.ab3"
0003CFF8 <internal_commands.ab3@2036> INCLUDE "internal_commands.ab3"
0003CFFA <internal_commands.ab3@2038> INCLUDE "internal_commands.ab3"
0003CFFE <internal_commands.ab3@2039> INCLUDE "internal_commands.ab3"
0003D000 <internal_commands.ab3@2040> INCLUDE "internal_commands.ab3"
0003D002 <internal_commands.ab3@2041> INCLUDE "internal_commands.ab3"
0003D006 <internal_commands.ab3@2042> INCLUDE "internal_commands.ab3"
0003D008 <internal_commands.ab3@2043> INCLUDE "internal_commands.ab3"
0003D00C <internal_commands.ab3@2047> INCLUDE "internal_commands.ab3"
0003D00E <internal_commands.ab3@2048> INCLUDE "internal_commands.ab3"
0003D012 <internal_commands.ab3@2049> INCLUDE "internal_commands.ab3"
0003D013 <internal_commands.ab3@2050> INCLUDE "internal_commands.ab3"
0003D014 <internal_commands.ab3@2051> INCLUDE "internal_commands.ab3"
0003D016 <internal_commands.ab3@2053> INCLUDE "internal_commands.ab3"
0003D01A <internal_commands.ab3@2054> INCLUDE "internal_commands.ab3"
0003D01C <internal_commands.ab3@2055> INCLUDE "internal_commands.ab3"
0003D01E <internal_commands.ab3@2056> INCLUDE "internal_commands.ab3"
0003D022 <internal_commands.ab3@2057> INCLUDE "internal_commands.ab3"
0003D024 <internal_commands.ab3@2058> INCLUDE "internal_commands.ab3"
0003D028 <internal_commands.ab3@2062> INCLUDE "internal_commands.ab3"
0003D02A <internal_commands.ab3@2063> INCLUDE "internal_commands.ab3"
0003D02E <internal_commands.ab3@2064> INCLUDE "internal_commands.ab3"
0003D02F <internal_commands.ab3@2065> INCLUDE "internal_commands.ab3"
0003D030 <internal_commands.ab3@2066> INCLUDE "internal_commands.ab3"
0003D032 <internal_commands.ab3@2068> INCLUDE "internal_commands.ab3"
0003D036 <internal_commands.ab3@2069> INCLUDE "internal_commands.ab3"
0003D038 <internal_commands.ab3@2070> INCLUDE "internal_commands.ab3"
0003D03A <internal_commands.ab3@2071> INCLUDE "internal_commands.ab3"
0003D03E <internal_commands.ab3@2072> INCLUDE "internal_commands.ab3"
0003D040 <internal_commands.ab3@2073> INCLUDE "internal_commands.ab3"
0003D044 <internal_commands.ab3@2077> INCLUDE "internal_commands.ab3"
0003D046 <internal_commands.ab3@2078> INCLUDE "internal_commands.ab3"
0003D049 <internal_commands.ab3@2079> INCLUDE "internal_commands.ab3"
0003D04A <internal_commands.ab3@2080> INCLUDE "internal_commands.ab3"
0003D04C <internal_commands.ab3@2083> INCLUDE "internal_commands.ab3"
0003D050 <internal_commands.ab3@2084> INCLUDE "internal_commands.ab3"
0003D052 <internal_commands.ab3@2085> INCLUDE "internal_commands.ab3"
0003D054 <internal_commands.ab3@2086> INCLUDE "internal_commands.ab3"
0003D058 <internal_commands.ab3@2087> INCLUDE "internal_commands.ab3"
0003D05A <internal_commands.ab3@2088> INCLUDE "internal_commands.ab3"
0003D05E <internal_commands.ab3@2092> INCLUDE "internal_commands.ab3"
0003D060 <internal_commands.ab3@2093> INCLUDE "internal_commands.ab3"
0003D063 <internal_commands.ab3@2094> INCLUDE "internal_commands.ab3"
0003D064 <internal_commands.ab3@2095> INCLUDE "internal_commands.ab3"
0003D066 <internal_commands.ab3@2098> INCLUDE "internal_commands.ab3"
0003D06A <internal_commands.ab3@2099> INCLUDE "internal_commands.ab3"
0003D06C <internal_commands.ab3@2100> INCLUDE "internal_commands.ab3"
0003D06E <internal_commands.ab3@2101> INCLUDE "internal_commands.ab3"
0003D072 <internal_commands.ab3@2102> INCLUDE "internal_commands.ab3"
0003D074 <internal_commands.ab3@2103> INCLUDE "internal_commands.ab3"
0003D078 <internal_commands.ab3@2107> INCLUDE "internal_commands.ab3"
0003D07A <internal_commands.ab3@2108> INCLUDE "internal_commands.ab3"
0003D07F <internal_commands.ab3@2109> INCLUDE "internal_commands.ab3"
0003D080 <internal_commands.ab3@2110> INCLUDE "internal_commands.ab3"
0003D082 <internal_commands.ab3@2113> INCLUDE "internal_commands.ab3"
0003D086 <internal_commands.ab3@2114> INCLUDE "internal_commands.ab3"
0003D088 <internal_commands.ab3@2115> INCLUDE "internal_commands.ab3"
0003D08A <internal_commands.ab3@2116> INCLUDE "internal_commands.ab3"
0003D08E <internal_commands.ab3@2117> INCLUDE "internal_commands.ab3"
0003D090 <internal_commands.ab3@2118> INCLUDE "internal_commands.ab3"
0003D094 <internal_commands.ab3@2122> INCLUDE "internal_commands.ab3"
0003D096 <internal_commands.ab3@2123> INCLUDE "internal_commands.ab3"
0003D09A <internal_commands.ab3@2124> INCLUDE "internal_commands.ab3"
0003D09B <internal_commands.ab3@2125> INCLUDE "internal_commands.ab3"
0003D09C <internal_commands.ab3@2126> INCLUDE "internal_commands.ab3"
0003D09E <internal_commands.ab3@2128> INCLUDE "internal_commands.ab3"
0003D0A2 <internal_commands.ab3@2129> INCLUDE "internal_commands.ab3"
0003D0A4 <internal_commands.ab3@2130> INCLUDE "internal_commands.ab3"
0003D0A6 <internal_commands.ab3@2131> INCLUDE "internal_commands.ab3"
0003D0AA <internal_commands.ab3@2132> INCLUDE "internal_commands.ab3"
0003D0AC <internal_commands.ab3@2133> INCLUDE "internal_commands.ab3"
0003D0B0 <internal_commands.ab3@2137> INCLUDE "internal_commands.ab3"
0003D0B2 <internal_commands.ab3@2138> INCLUDE "internal_commands.ab3"
0003D0B7 <internal_commands.ab3@2139> INCLUDE "internal_commands.ab3"
0003D0B8 <internal_commands.ab3@2140> INCLUDE "internal_commands.ab3"
0003D0BA <internal_commands.ab3@2143> INCLUDE "internal_commands.ab3"
0003D0BE <internal_commands.ab3@2144> INCLUDE "internal_commands.ab3"
0003D0C0 <internal_commands.ab3@2145> INCLUDE "internal_commands.ab3"
0003D0C2 <internal_commands.ab3@2146> INCLUDE "internal_commands.ab3"
0003D0C6 <internal_commands.ab3@2147> INCLUDE "internal_commands.ab3"
0003D0C8 <internal_commands.ab3@2148> INCLUDE "internal_commands.ab3"
0003D0CC <internal_commands.ab3@2152> INCLUDE "internal_commands.ab3"
0003D0CE <internal_commands.ab3@2153> INCLUDE "internal_commands.ab3"
0003D0D3 <internal_commands.ab3@2154> INCLUDE "internal_commands.ab3"
0003D0D4 <internal_commands.ab3@2155> INCLUDE "internal_commands.ab3"
0003D0D6 <internal_commands.ab3@2158> INCLUDE "internal_commands.ab3"
0003D0DA <internal_commands.ab3@2159> INCLUDE "internal_commands.ab3"
0003D0DC <internal_commands.ab3@2160> INCLUDE "internal_commands.ab3"
0003D0DE <internal_commands.ab3@2161> INCLUDE "internal_commands.ab3"
0003D0E2 <internal_commands.ab3@2162> INCLUDE "internal_commands.ab3"
0003D0E4 <internal_commands.ab3@2163> INCLUDE "internal_commands.ab3"
0003D0E8 <internal_commands.ab3@2167> INCLUDE "internal_commands.ab3"
0003D0EA <internal_commands.ab3@2168> INCLUDE "internal_commands.ab3"
0003D0EF <internal_commands.ab3@2169> INCLUDE "internal_commands.ab3"
0003D0F0 <internal_commands.ab3@2170> INCLUDE "internal_commands.ab3"
0003D0F2 <internal_commands.ab3@2173> INCLUDE "internal_commands.ab3"
0003D0F6 <internal_commands.ab3@2174> INCLUDE "internal_commands.ab3"
0003D0F8 <internal_commands.ab3@2175> INCLUDE "internal_commands.ab3"
0003D0FA <internal_commands.ab3@2176> INCLUDE "internal_commands.ab3"
0003D0FE <internal_commands.ab3@2177> INCLUDE "internal_commands.ab3"
0003D100 <internal_commands.ab3@2178> INCLUDE "internal_commands.ab3"
0003D104 <internal_commands.ab3@2182> INCLUDE "internal_commands.ab3"
0003D106 <internal_commands.ab3@2183> INCLUDE "internal_commands.ab3"
0003D10B <internal_commands.ab3@2184> INCLUDE "internal_commands.ab3"
0003D10C <internal_commands.ab3@2185> INCLUDE "internal_commands.ab3"
0003D10E <internal_commands.ab3@2188> INCLUDE "internal_commands.ab3"
0003D112 <internal_commands.ab3@2189> INCLUDE "internal_commands.ab3"
0003D114 <internal_commands.ab3@2190> INCLUDE "internal_commands.ab3"
0003D116 <internal_commands.ab3@2191> INCLUDE "internal_commands.ab3"
0003D11A <internal_commands.ab3@2192> INCLUDE "internal_commands.ab3"
0003D11C <internal_commands.ab3@2193> INCLUDE "internal_commands.ab3"
0003D120 <internal_commands.ab3@2197> INCLUDE "internal_commands.ab3"
0003D122 <internal_commands.ab3@2198> INCLUDE "internal_commands.ab3"
0003D127 <internal_commands.ab3@2199> INCLUDE "internal_commands.ab3"
0003D128 <internal_commands.ab3@2200> INCLUDE "internal_commands.ab3"
0003D12A <internal_commands.ab3@2203> INCLUDE "internal_commands.ab3"
0003D12E <internal_commands.ab3@2204> INCLUDE "internal_commands.ab3"
0003D130 <internal_commands.ab3@2205> INCLUDE "internal_commands.ab3"
0003D132 <internal_commands.ab3@2206> INCLUDE "internal_commands.ab3"
0003D136 <internal_commands.ab3@2207> INCLUDE "internal_commands.ab3"
0003D138 <internal_commands.ab3@2208> INCLUDE "internal_commands.ab3"
0003D13C <internal_commands.ab3@2212> INCLUDE "internal_commands.ab3"
0003D13E <internal_commands.ab3@2213> INCLUDE "internal_commands.ab3"
0003D142 <internal_commands.ab3@2214> INCLUDE "internal_commands.ab3"
0003D143 <internal_commands.ab3@2215> INCLUDE "internal_commands.ab3"
0003D144 <internal_commands.ab3@2216> INCLUDE "internal_commands.ab3"
0003D146 <internal_commands.ab3@2218> INCLUDE "internal_commands.ab3"
0003D14A <internal_commands.ab3@2219> INCLUDE "internal_commands.ab3"
0003D14C <internal_commands.ab3@2220> INCLUDE "internal_commands.ab3"
0003D14E <internal_commands.ab3@2221> INCLUDE "internal_commands.ab3"
0003D152 <internal_commands.ab3@2222> INCLUDE "internal_commands.ab3"
0003D154 <internal_commands.ab3@2223> INCLUDE "internal_commands.ab3"
0003D158 <internal_commands.ab3@2227> INCLUDE "internal_commands.ab3"
0003D15A <internal_commands.ab3@2228> INCLUDE "internal_commands.ab3"
0003D15F <internal_commands.ab3@2229> INCLUDE "internal_commands.ab3"
0003D160 <internal_commands.ab3@2230> INCLUDE "internal_commands.ab3"
0003D162 <internal_commands.ab3@2233> INCLUDE "internal_commands.ab3"
0003D166 <internal_commands.ab3@2234> INCLUDE "internal_commands.ab3"
0003D168 <internal_commands.ab3@2235> INCLUDE "internal_commands.ab3"
0003D16A <internal_commands.ab3@2236> INCLUDE "internal_commands.ab3"
0003D16E <internal_commands.ab3@2237> INCLUDE "internal_commands.ab3"
0003D170 <internal_commands.ab3@2238> INCLUDE "internal_commands.ab3"
0003D174 <internal_commands.ab3@2242> INCLUDE "internal_commands.ab3"
0003D176 <internal_commands.ab3@2243> INCLUDE "internal_commands.ab3"
0003D17C <internal_commands.ab3@2244> INCLUDE "internal_commands.ab3"
0003D17D <internal_commands.ab3@2245> INCLUDE "internal_commands.ab3"
0003D17E <internal_commands.ab3@2246> INCLUDE "internal_commands.ab3"
0003D180 <internal_commands.ab3@2248> INCLUDE "internal_commands.ab3"
0003D184 <internal_commands.ab3@2249> INCLUDE "internal_commands.ab3"
0003D186 <internal_commands.ab3@2250> INCLUDE "internal_commands.ab3"
0003D188 <internal_commands.ab3@2251> INCLUDE "internal_commands.ab3"
0003D18C <internal_commands.ab3@2252> INCLUDE "internal_commands.ab3"
0003D18E <internal_commands.ab3@2253> INCLUDE "internal_commands.ab3"
0003D192 <internal_commands.ab3@2257> INCLUDE "internal_commands.ab3"
0003D194 <internal_commands.ab3@2258> INCLUDE "internal_commands.ab3"
0003D198 <internal_commands.ab3@2259> INCLUDE "internal_commands.ab3"
0003D199 <internal_commands.ab3@2260> INCLUDE "internal_commands.ab3"
0003D19A <internal_commands.ab3@2261> INCLUDE "internal_commands.ab3"
0003D19C <internal_commands.ab3@2263> INCLUDE "internal_commands.ab3"
0003D1A0 <internal_commands.ab3@2264> INCLUDE "internal_commands.ab3"
0003D1A2 <internal_commands.ab3@2265> INCLUDE "internal_commands.ab3"
0003D1A4 <internal_commands.ab3@2266> INCLUDE "internal_commands.ab3"
0003D1A8 <internal_commands.ab3@2267> INCLUDE "internal_commands.ab3"
0003D1AA <internal_commands.ab3@2268> INCLUDE "internal_commands.ab3"
0003D1AE <internal_commands.ab3@2272> INCLUDE "internal_commands.ab3"
0003D1B0 <internal_commands.ab3@2273> INCLUDE "internal_commands.ab3"
0003D1B5 <internal_commands.ab3@2274> INCLUDE "internal_commands.ab3"
0003D1B6 <internal_commands.ab3@2275> INCLUDE "internal_commands.ab3"
0003D1B8 <internal_commands.ab3@2278> INCLUDE "internal_commands.ab3"
0003D1BC <internal_commands.ab3@2279> INCLUDE "internal_commands.ab3"
0003D1BE <internal_commands.ab3@2280> INCLUDE "internal_commands.ab3"
0003D1C0 <internal_commands.ab3@2281> INCLUDE "internal_commands.ab3"
0003D1C4 <internal_commands.ab3@2282> INCLUDE "internal_commands.ab3"
0003D1C6 <internal_commands.ab3@2283> INCLUDE "internal_commands.ab3"
0003D1CA <internal_commands.ab3@2288> INCLUDE "internal_commands.ab3"
0003D1CC <internal_commands.ab3@2289> INCLUDE "internal_commands.ab3"
0003D1D3 <internal_commands.ab3@2290> INCLUDE "internal_commands.ab3"
0003D1D4 <internal_commands.ab3@2291> INCLUDE "internal_commands.ab3"
0003D1D6 <internal_commands.ab3@2310> INCLUDE "internal_commands.ab3"
0003D1D8 <internal_commands.ab3@2311> INCLUDE "internal_commands.ab3"
0003D1DA <internal_commands.ab3@2315> INCLUDE "internal_commands.ab3"
0003D1DC <internal_commands.ab3@2316> INCLUDE "internal_commands.ab3"
0003D1DE <internal_commands.ab3@2320> INCLUDE "internal_commands.ab3"
0003D1E0 <internal_commands.ab3@2321> INCLUDE "internal_commands.ab3"
0003D1E2 <internal_commands.ab3@2325> INCLUDE "internal_commands.ab3"
0003D1E4 <internal_commands.ab3@2326> INCLUDE "internal_commands.ab3"
0003D1E6 <internal_commands.ab3@2332> INCLUDE "internal_commands.ab3"
0003D1EA <internal_commands.ab3@2333> INCLUDE "internal_commands.ab3"
0003D1EC <internal_commands.ab3@2334> INCLUDE "internal_commands.ab3"
0003D1EE <internal_commands.ab3@2335> INCLUDE "internal_commands.ab3"
0003D1F0 <internal_commands.ab3@2336> INCLUDE "internal_commands.ab3"
0003D1F2 <internal_commands.ab3@2337> INCLUDE "internal_commands.ab3"
0003D1F6 <internal_commands.ab3@2338> INCLUDE "internal_commands.ab3"
0003D1FC <internal_commands.ab3@2341> INCLUDE "internal_commands.ab3"
0003D200 <internal_commands.ab3@2342> INCLUDE "internal_commands.ab3"
0003D202 <internal_commands.ab3@2343> INCLUDE "internal_commands.ab3"
0003D204 <internal_commands.ab3@2344> INCLUDE "internal_commands.ab3"
0003D206 <internal_commands.ab3@2345> INCLUDE "internal_commands.ab3"
0003D208 <internal_commands.ab3@2346> INCLUDE "internal_commands.ab3"
0003D20A <internal_commands.ab3@2347> INCLUDE "internal_commands.ab3"
0003D20C <internal_commands.ab3@2354> INCLUDE "internal_commands.ab3"
0003D210 <internal_commands.ab3@2355> INCLUDE "internal_commands.ab3"
0003D214 <internal_commands.ab3@2356> INCLUDE "internal_commands.ab3"
0003D218 <internal_commands.ab3@2357> INCLUDE "internal_commands.ab3"
0003D21C <internal_commands.ab3@2358> INCLUDE "internal_commands.ab3"
0003D220 <internal_commands.ab3@2359> INCLUDE "internal_commands.ab3"
0003D222 <internal_commands.ab3@2362> INCLUDE "internal_commands.ab3"
0003D224 <internal_commands.ab3@2363> INCLUDE "internal_commands.ab3"
0003D228 <internal_commands.ab3@2364> INCLUDE "internal_commands.ab3"
0003D22C <internal_commands.ab3@2365> INCLUDE "internal_commands.ab3"
0003D230 <internal_commands.ab3@2366> INCLUDE "internal_commands.ab3"
0003D234 <internal_commands.ab3@2367> INCLUDE "internal_commands.ab3"
0003D236 <internal_commands.ab3@2370> INCLUDE "internal_commands.ab3"
0003D238 <internal_commands.ab3@2371> INCLUDE "internal_commands.ab3"
0003D23C <internal_commands.ab3@2372> INCLUDE "internal_commands.ab3"
0003D240 <internal_commands.ab3@2373> INCLUDE "internal_commands.ab3"
0003D244 <internal_commands.ab3@2374> INCLUDE "internal_commands.ab3"
0003D248 <internal_commands.ab3@2375> INCLUDE "internal_commands.ab3"
0003D24A <internal_commands.ab3@2376> INCLUDE "internal_commands.ab3"
0003D24C <internal_commands.ab3@2379> INCLUDE "internal_commands.ab3"
0003D24E <internal_commands.ab3@2380> INCLUDE "internal_commands.ab3"
0003D252 <internal_commands.ab3@2381> INCLUDE "internal_commands.ab3"
0003D254 <internal_commands.ab3@2383> INCLUDE "internal_commands.ab3"
0003D258 <internal_commands.ab3@2384> INCLUDE "internal_commands.ab3"
0003D25A <internal_commands.ab3@2388> INCLUDE "internal_commands.ab3"
0003D25E <internal_commands.ab3@2389> INCLUDE "internal_commands.ab3"
0003D260 <internal_commands.ab3@2390> INCLUDE "internal_commands.ab3"
0003D264 <internal_commands.ab3@2391> INCLUDE "internal_commands.ab3"
0003D268 <internal_commands.ab3@2392> INCLUDE "internal_commands.ab3"
0003D26C <internal_commands.ab3@2393> INCLUDE "internal_commands.ab3"
0003D270 <internal_commands.ab3@2397> INCLUDE "internal_commands.ab3"
0003D274 <internal_commands.ab3@2398> INCLUDE "internal_commands.ab3"
0003D278 <internal_commands.ab3@2400> INCLUDE "internal_commands.ab3"
0003D27C <internal_commands.ab3@2401> INCLUDE "internal_commands.ab3"
0003D280 <internal_commands.ab3@2402> INCLUDE "internal_commands.ab3"
0003D284 <internal_commands.ab3@2403> INCLUDE "internal_commands.ab3"
0003D288 <internal_commands.ab3@2404> INCLUDE "internal_commands.ab3"
0003D28C <internal_commands.ab3@2405> INCLUDE "internal_commands.ab3"
0003D290 <internal_commands.ab3@2406> INCLUDE "internal_commands.ab3"
0003D294 <internal_commands.ab3@2407> INCLUDE "internal_commands.ab3"
0003D298 <internal_commands.ab3@2409> INCLUDE "internal_commands.ab3"
0003D29C <internal_commands.ab3@2412> INCLUDE "internal_commands.ab3"
0003D2A0 <internal_commands.ab3@2413> INCLUDE "internal_commands.ab3"
0003D2A4 <internal_commands.ab3@2415> INCLUDE "internal_commands.ab3"
0003D2A8 <internal_commands.ab3@2416> INCLUDE "internal_commands.ab3"
0003D2AC <internal_commands.ab3@2417> INCLUDE "internal_commands.ab3"
0003D2B0 <internal_commands.ab3@2418> INCLUDE "internal_commands.ab3"
0003D2B4 <internal_commands.ab3@2419> INCLUDE "internal_commands.ab3"
0003D2B8 <internal_commands.ab3@2420> INCLUDE "internal_commands.ab3"
0003D2BC <internal_commands.ab3@2421> INCLUDE "internal_commands.ab3"
0003D2C0 <internal_commands.ab3@2422> INCLUDE "internal_commands.ab3"
0003D2C4 <internal_commands.ab3@2424> INCLUDE "internal_commands.ab3"
0003D2C8 <internal_commands.ab3@2427> INCLUDE "internal_commands.ab3"
0003D2CA <internal_commands.ab3@2428> INCLUDE "internal_commands.ab3"
0003D2CE <internal_commands.ab3@2429> INCLUDE "internal_commands.ab3"
0003D2D2 <internal_commands.ab3@2430> INCLUDE "internal_commands.ab3"
0003D2D6 <internal_commands.ab3@2431> INCLUDE "internal_commands.ab3"
0003D2DA <internal_commands.ab3@2432> INCLUDE "internal_commands.ab3"
0003D2DE <internal_commands.ab3@2433> INCLUDE "internal_commands.ab3"
0003D2E2 <internal_commands.ab3@2434> INCLUDE "internal_commands.ab3"
0003D2E6 <internal_commands.ab3@2437> INCLUDE "internal_commands.ab3"
0003D2EA <internal_commands.ab3@2438> INCLUDE "internal_commands.ab3"
0003D2EE <internal_commands.ab3@2439> INCLUDE "internal_commands.ab3"
0003D2F0 <internal_commands.ab3@2440> INCLUDE "internal_commands.ab3"
0003D2F2 <internal_commands.ab3@2443> INCLUDE "internal_commands.ab3"
0003D2F4 <internal_commands.ab3@2444> INCLUDE "internal_commands.ab3"
0003D2F6 <internal_commands.ab3@2445> INCLUDE "internal_commands.ab3"
0003D2F8 <internal_commands.ab3@2446> INCLUDE "internal_commands.ab3"
0003D2FC <internal_commands.ab3@2447> INCLUDE "internal_commands.ab3"
0003D300 <internal_commands.ab3@2450> INCLUDE "internal_commands.ab3"
0003D304 <internal_commands.ab3@2451> INCLUDE "internal_commands.ab3"
0003D308 <internal_commands.ab3@2452> INCLUDE "internal_commands.ab3"
0003D30A <internal_commands.ab3@2453> INCLUDE "internal_commands.ab3"
0003D30E <internal_commands.ab3@2454> INCLUDE "internal_commands.ab3"
0003D312 <internal_commands.ab3@2458> INCLUDE "internal_commands.ab3"
0003D316 <internal_commands.ab3@2461> INCLUDE "internal_commands.ab3"
0003D31A <internal_commands.ab3@2462> INCLUDE "internal_commands.ab3"
0003D31C <internal_commands.ab3@2463> INCLUDE "internal_commands.ab3"
0003D31E <internal_commands.ab3@2464> INCLUDE "internal_commands.ab3"
0003D322 <internal_commands.ab3@2465> INCLUDE "internal_commands.ab3"
0003D326 <internal_commands.ab3@2468> INCLUDE "internal_commands.ab3"
0003D32A <internal_commands.ab3@2469> INCLUDE "internal_commands.ab3"
0003D32E <internal_commands.ab3@2473> INCLUDE "internal_commands.ab3"
0003D332 <internal_commands.ab3@2476> INCLUDE "internal_commands.ab3"
0003D336 <internal_commands.ab3@2477> INCLUDE "internal_commands.ab3"
0003D338 <internal_commands.ab3@2478> INCLUDE "internal_commands.ab3"
0003D33A <internal_commands.ab3@2479> INCLUDE "internal_commands.ab3"
0003D33E <internal_commands.ab3@2480> INCLUDE "internal_commands.ab3"
0003D342 <internal_commands.ab3@2483> INCLUDE "internal_commands.ab3"
0003D346 <internal_commands.ab3@2484> INCLUDE "internal_commands.ab3"
0003D348 <internal_commands.ab3@2488> INCLUDE "internal_commands.ab3"
0003D34C <internal_commands.ab3@2489> INCLUDE "internal_commands.ab3"
0003D350 <internal_commands.ab3@2490> INCLUDE "internal_commands.ab3"
0003D352 <internal_commands.ab3@2491> INCLUDE "internal_commands.ab3"
0003D356 <internal_commands.ab3@2492> INCLUDE "internal_commands.ab3"
0003D35A <internal_commands.ab3@2493> INCLUDE "internal_commands.ab3"
0003D35C <internal_commands.ab3@2496> INCLUDE "internal_commands.ab3"
0003D360 <internal_commands.ab3@2497> INCLUDE "internal_commands.ab3"
0003D364 <internal_commands.ab3@2498> INCLUDE "internal_commands.ab3"
0003D368 <internal_commands.ab3@2499> INCLUDE "internal_commands.ab3"
0003D36C <internal_commands.ab3@2502> INCLUDE "internal_commands.ab3"
0003D370 <internal_commands.ab3@2503> INCLUDE "internal_commands.ab3"
0003D372 <internal_commands.ab3@2507> INCLUDE "internal_commands.ab3"
0003D376 <internal_commands.ab3@2508> INCLUDE "internal_commands.ab3"
0003D378 <internal_commands.ab3@2509> INCLUDE "internal_commands.ab3"
0003D37A <internal_commands.ab3@2510> INCLUDE "internal_commands.ab3"
0003D37C <internal_commands.ab3@2511> INCLUDE "internal_commands.ab3"
0003D380 <internal_commands.ab3@2512> INCLUDE "internal_commands.ab3"
0003D384 <internal_commands.ab3@2515> INCLUDE "internal_commands.ab3"
0003D388 <internal_commands.ab3@2516> INCLUDE "internal_commands.ab3"
0003D38C <internal_commands.ab3@2517> INCLUDE "internal_commands.ab3"
0003D390 <internal_commands.ab3@2518> INCLUDE "internal_commands.ab3"
0003D394 <internal_commands.ab3@2522> INCLUDE "internal_commands.ab3"
0003D398 <internal_commands.ab3@2523> INCLUDE "internal_commands.ab3"
0003D39C <internal_commands.ab3@2527> INCLUDE "internal_commands.ab3"
0003D3A0 <internal_commands.ab3@2528> INCLUDE "internal_commands.ab3"
0003D3A4 <internal_commands.ab3@2532> INCLUDE "internal_commands.ab3"
0003D3A8 <internal_commands.ab3@2533> INCLUDE "internal_commands.ab3"
0003D3AC <internal_commands.ab3@2537> INCLUDE "internal_commands.ab3"
0003D3AE <internal_commands.ab3@2540> INCLUDE "internal_commands.ab3"
0003D3B2 <internal_commands.ab3@2541> INCLUDE "internal_commands.ab3"
0003D3B6 <internal_commands.ab3@2542> INCLUDE "internal_commands.ab3"
0003D3B8 <internal_commands.ab3@2543> INCLUDE "internal_commands.ab3"
0003D3BA <internal_commands.ab3@2544> INCLUDE "internal_commands.ab3"
0003D3BC <internal_commands.ab3@2545> INCLUDE "internal_commands.ab3"
0003D3C0 <internal_commands.ab3@2546> INCLUDE "internal_commands.ab3"
0003D3C4 <internal_commands.ab3@2547> INCLUDE "internal_commands.ab3"
0003D3C6 <internal_commands.ab3@2548> INCLUDE "internal_commands.ab3"
0003D3CA <internal_commands.ab3@2549> INCLUDE "internal_commands.ab3"
0003D3CC <internal_commands.ab3@2550> INCLUDE "internal_commands.ab3"
0003D3CE <internal_commands.ab3@2551> INCLUDE "internal_commands.ab3"
0003D3D0 <internal_commands.ab3@2552> INCLUDE "internal_commands.ab3"
0003D3D4 <internal_commands.ab3@2553> INCLUDE "internal_commands.ab3"
0003D3D8 <internal_commands.ab3@2554> INCLUDE "internal_commands.ab3"
0003D3DA <internal_commands.ab3@2557> INCLUDE "internal_commands.ab3"
0003D3DC <internal_commands.ab3@2558> INCLUDE "internal_commands.ab3"
0003D3E0 <internal_commands.ab3@2559> INCLUDE "internal_commands.ab3"
0003D3E4 <internal_commands.ab3@2560> INCLUDE "internal_commands.ab3"
0003D3E8 <internal_commands.ab3@2561> INCLUDE "internal_commands.ab3"
0003D3EC <internal_commands.ab3@2562> INCLUDE "internal_commands.ab3"
0003D3EE <internal_commands.ab3@2563> INCLUDE "internal_commands.ab3"
0003D3F2 <internal_commands.ab3@2564> INCLUDE "internal_commands.ab3"
0003D3F6 <internal_commands.ab3@2565> INCLUDE "internal_commands.ab3"
0003D3FA <internal_commands.ab3@2566> INCLUDE "internal_commands.ab3"
0003D3FC <internal_commands.ab3@2567> INCLUDE "internal_commands.ab3"
0003D3FE <internal_commands.ab3@2568> INCLUDE "internal_commands.ab3"
0003D400 <internal_commands.ab3@2569> INCLUDE "internal_commands.ab3"
0003D402 <internal_commands.ab3@2572> INCLUDE "internal_commands.ab3"
0003D404 <internal_commands.ab3@2573> INCLUDE "internal_commands.ab3"
0003D406 <internal_commands.ab3@2574> INCLUDE "internal_commands.ab3"
0003D40A <internal_commands.ab3@2575> INCLUDE "internal_commands.ab3"
0003D40E <internal_commands.ab3@2576> INCLUDE "internal_commands.ab3"
0003D410 <internal_commands.ab3@2580> INCLUDE "internal_commands.ab3"
0003D414 <internal_commands.ab3@2581> INCLUDE "internal_commands.ab3"
0003D416 <internal_commands.ab3@2582> INCLUDE "internal_commands.ab3"
0003D41A <internal_commands.ab3@2583> INCLUDE "internal_commands.ab3"
0003D41E <internal_commands.ab3@2584> INCLUDE "internal_commands.ab3"
0003D420 <internal_commands.ab3@2585> INCLUDE "internal_commands.ab3"
0003D422 <internal_commands.ab3@2588> INCLUDE "internal_commands.ab3"
0003D424 <internal_commands.ab3@2592> INCLUDE "internal_commands.ab3"
0003D428 <internal_commands.ab3@2593> INCLUDE "internal_commands.ab3"
0003D42A <internal_commands.ab3@2594> INCLUDE "internal_commands.ab3"
0003D42E <internal_commands.ab3@2595> INCLUDE "internal_commands.ab3"
0003D432 <internal_commands.ab3@2596> INCLUDE "internal_commands.ab3"
0003D436 <internal_commands.ab3@2597> INCLUDE "internal_commands.ab3"
0003D438 <internal_commands.ab3@2600> INCLUDE "internal_commands.ab3"
0003D43C <internal_commands.ab3@2604> INCLUDE "internal_commands.ab3"
0003D440 <internal_commands.ab3@2605> INCLUDE "internal_commands.ab3"
0003D442 <internal_commands.ab3@2606> INCLUDE "internal_commands.ab3"
0003D446 <internal_commands.ab3@2607> INCLUDE "internal_commands.ab3"
0003D44A <internal_commands.ab3@2608> INCLUDE "internal_commands.ab3"
0003D44E <internal_commands.ab3@2611> INCLUDE "internal_commands.ab3"
0003D452 <internal_commands.ab3@2612> INCLUDE "internal_commands.ab3"
0003D456 <internal_commands.ab3@2613> INCLUDE "internal_commands.ab3"
0003D45A <internal_commands.ab3@2614> INCLUDE "internal_commands.ab3"
0003D45E <internal_commands.ab3@2615> INCLUDE "internal_commands.ab3"
0003D462 <internal_commands.ab3@2624> INCLUDE "internal_commands.ab3"
0003D464 <internal_commands.ab3@2625> INCLUDE "internal_commands.ab3"
0003D469 <internal_commands.ab3@2626> INCLUDE "internal_commands.ab3"
0003D46A <internal_commands.ab3@2627> INCLUDE "internal_commands.ab3"
0003D46E <internal_commands.ab3@2631> INCLUDE "internal_commands.ab3"
0003D470 <internal_commands.ab3@2632> INCLUDE "internal_commands.ab3"
0003D477 <internal_commands.ab3@2633> INCLUDE "internal_commands.ab3"
0003D478 <internal_commands.ab3@2634> INCLUDE "internal_commands.ab3"
0003D47C <internal_commands.ab3@2638> INCLUDE "internal_commands.ab3"
0003D47E <internal_commands.ab3@2639> INCLUDE "internal_commands.ab3"
0003D485 <internal_commands.ab3@2640> INCLUDE "internal_commands.ab3"
0003D486 <internal_commands.ab3@2641> INCLUDE "internal_commands.ab3"
0003D48A <internal_commands.ab3@2651> INCLUDE "internal_commands.ab3"
0003D48C <internal_commands.ab3@2652> INCLUDE "internal_commands.ab3"
0003D494 <internal_commands.ab3@2653> INCLUDE "internal_commands.ab3"
0003D495 <internal_commands.ab3@2654> INCLUDE "internal_commands.ab3"
0003D496 <internal_commands.ab3@2655> INCLUDE "internal_commands.ab3"
0003D49A <internal_commands.ab3@2658> INCLUDE "internal_commands.ab3"
0003D49C <internal_commands.ab3@2659> INCLUDE "internal_commands.ab3"
0003D4A1 <internal_commands.ab3@2660> INCLUDE "internal_commands.ab3"
0003D4B5 <internal_commands.ab3@2661> INCLUDE "internal_commands.ab3"
0003D4B6 <internal_commands.ab3@2662> INCLUDE "internal_commands.ab3"
0003D4BA <internal_commands.ab3@2665> INCLUDE "internal_commands.ab3"
0003D4BC <internal_commands.ab3@2666> INCLUDE "internal_commands.ab3"
0003D4C0 <internal_commands.ab3@2667> INCLUDE "internal_commands.ab3"
0003D4C1 <internal_commands.ab3@2668> INCLUDE "internal_commands.ab3"
0003D4C2 <internal_commands.ab3@2669> INCLUDE "internal_commands.ab3"
0003D4C6 <internal_commands.ab3@2672> INCLUDE "internal_commands.ab3"
0003D4C8 <internal_commands.ab3@2673> INCLUDE "internal_commands.ab3"
0003D4CB <internal_commands.ab3@2674> INCLUDE "internal_commands.ab3"
0003D4CC <internal_commands.ab3@2675> INCLUDE "internal_commands.ab3"
0003D4D0 <internal_commands.ab3@2679> INCLUDE "internal_commands.ab3"
0003D4D2 <internal_commands.ab3@2680> INCLUDE "internal_commands.ab3"
0003D4D9 <internal_commands.ab3@2681> INCLUDE "internal_commands.ab3"
0003D4DA <internal_commands.ab3@2682> INCLUDE "internal_commands.ab3"
0003D4DE <internal_commands.ab3@2686> INCLUDE "internal_commands.ab3"
0003D4E0 <internal_commands.ab3@2687> INCLUDE "internal_commands.ab3"
0003D4E6 <internal_commands.ab3@2688> INCLUDE "internal_commands.ab3"
0003D4F3 <internal_commands.ab3@2689> INCLUDE "internal_commands.ab3"
0003D4F4 <internal_commands.ab3@2690> INCLUDE "internal_commands.ab3"
0003D4F8 <internal_commands.ab3@2693> INCLUDE "internal_commands.ab3"
0003D4FA <internal_commands.ab3@2694> INCLUDE "internal_commands.ab3"
0003D501 <internal_commands.ab3@2695> INCLUDE "internal_commands.ab3"
0003D519 <internal_commands.ab3@2696> INCLUDE "internal_commands.ab3"
0003D51A <internal_commands.ab3@2697> INCLUDE "internal_commands.ab3"
0003D51E <internal_commands.ab3@2700> INCLUDE "internal_commands.ab3"
0003D520 <internal_commands.ab3@2701> INCLUDE "internal_commands.ab3"
0003D524 <internal_commands.ab3@2702> INCLUDE "internal_commands.ab3"
0003D547 <internal_commands.ab3@2703> INCLUDE "internal_commands.ab3"
0003D548 <internal_commands.ab3@2704> INCLUDE "internal_commands.ab3"
0003D54C <internal_commands.ab3@2707> INCLUDE "internal_commands.ab3"
0003D54E <internal_commands.ab3@2708> INCLUDE "internal_commands.ab3"
0003D555 <internal_commands.ab3@2709> INCLUDE "internal_commands.ab3"
0003D560 <internal_commands.ab3@2710> INCLUDE "internal_commands.ab3"
0003D564 <internal_commands.ab3@2714> INCLUDE "internal_commands.ab3"
0003D566 <internal_commands.ab3@2715> INCLUDE "internal_commands.ab3"
0003D56C <internal_commands.ab3@2716> INCLUDE "internal_commands.ab3"
0003D56D <internal_commands.ab3@2717> INCLUDE "internal_commands.ab3"
0003D56E <internal_commands.ab3@2718> INCLUDE "internal_commands.ab3"
0003D572 <internal_commands.ab3@2721> INCLUDE "internal_commands.ab3"
0003D574 <internal_commands.ab3@2722> INCLUDE "internal_commands.ab3"
0003D579 <internal_commands.ab3@2723> INCLUDE "internal_commands.ab3"
0003D57A <internal_commands.ab3@2724> INCLUDE "internal_commands.ab3"
0003D57E <internal_commands.ab3@2728> INCLUDE "internal_commands.ab3"
0003D580 <internal_commands.ab3@2729> INCLUDE "internal_commands.ab3"
0003D587 <internal_commands.ab3@2730> INCLUDE "internal_commands.ab3"
0003D599 <internal_commands.ab3@2731> INCLUDE "internal_commands.ab3"
0003D59A <internal_commands.ab3@2732> INCLUDE "internal_commands.ab3"
0003D59E <internal_commands.ab3@2735> INCLUDE "internal_commands.ab3"
0003D5A0 <internal_commands.ab3@2736> INCLUDE "internal_commands.ab3"
0003D5AA <internal_commands.ab3@2737> INCLUDE "internal_commands.ab3"
0003D5AB <internal_commands.ab3@2738> INCLUDE "internal_commands.ab3"
0003D5AC <internal_commands.ab3@2739> INCLUDE "internal_commands.ab3"
0003D5B0 <internal_commands.ab3@2742> INCLUDE "internal_commands.ab3"
0003D5B2 <internal_commands.ab3@2743> INCLUDE "internal_commands.ab3"
0003D5BA <internal_commands.ab3@2744> INCLUDE "internal_commands.ab3"
0003D5C7 <internal_commands.ab3@2745> INCLUDE "internal_commands.ab3"
0003D5C8 <internal_commands.ab3@2746> INCLUDE "internal_commands.ab3"
0003D5CC <internal_commands.ab3@2749> INCLUDE "internal_commands.ab3"
0003D5CE <internal_commands.ab3@2750> INCLUDE "internal_commands.ab3"
0003D5D1 <internal_commands.ab3@2751> INCLUDE "internal_commands.ab3"
0003D60C <internal_commands.ab3@2752> INCLUDE "internal_commands.ab3"
0003D610 <internal_commands.ab3@2756> INCLUDE "internal_commands.ab3"
0003D612 <internal_commands.ab3@2757> INCLUDE "internal_commands.ab3"
0003D616 <internal_commands.ab3@2758> INCLUDE "internal_commands.ab3"
0003D617 <internal_commands.ab3@2759> INCLUDE "internal_commands.ab3"
0003D618 <internal_commands.ab3@2760> INCLUDE "internal_commands.ab3"
0003D61C <internal_commands.ab3@2763> INCLUDE "internal_commands.ab3"
0003D61E <internal_commands.ab3@2764> INCLUDE "internal_commands.ab3"
0003D626 <internal_commands.ab3@2765> INCLUDE "internal_commands.ab3"
0003D627 <internal_commands.ab3@2766> INCLUDE "internal_commands.ab3"
0003D628 <internal_commands.ab3@2767> INCLUDE "internal_commands.ab3"
0003D62C <internal_commands.ab3@2770> INCLUDE "internal_commands.ab3"
0003D62E <internal_commands.ab3@2771> INCLUDE "internal_commands.ab3"
0003D636 <internal_commands.ab3@2772> INCLUDE "internal_commands.ab3"
0003D646 <internal_commands.ab3@2773> INCLUDE "internal_commands.ab3"
0003D64A <internal_commands.ab3@2777> INCLUDE "internal_commands.ab3"
0003D64C <internal_commands.ab3@2778> INCLUDE "internal_commands.ab3"
0003D655 <internal_commands.ab3@2779> INCLUDE "internal_commands.ab3"
0003D65D <internal_commands.ab3@2780> INCLUDE "internal_commands.ab3"
0003D65E <internal_commands.ab3@2781> INCLUDE "internal_commands.ab3"
0003D662 <internal_commands.ab3@2784> INCLUDE "internal_commands.ab3"
0003D664 <internal_commands.ab3@2785> INCLUDE "internal_commands.ab3"
0003D66C <internal_commands.ab3@2786> INCLUDE "internal_commands.ab3"
0003D675 <internal_commands.ab3@2787> INCLUDE "internal_commands.ab3"
0003D676 <internal_commands.ab3@2788> INCLUDE "internal_commands.ab3"
0003D67A <internal_commands.ab3@2791> INCLUDE "internal_commands.ab3"
0003D67C <internal_commands.ab3@2792> INCLUDE "internal_commands.ab3"
0003D684 <internal_commands.ab3@2793> INCLUDE "internal_commands.ab3"
0003D685 <internal_commands.ab3@2794> INCLUDE "internal_commands.ab3"
0003D686 <internal_commands.ab3@2795> INCLUDE "internal_commands.ab3"
0003D68A <internal_commands.ab3@2798> INCLUDE "internal_commands.ab3"
0003D68C <internal_commands.ab3@2799> INCLUDE "internal_commands.ab3"
0003D692 <internal_commands.ab3@2800> INCLUDE "internal_commands.ab3"
0003D693 <internal_commands.ab3@2801> INCLUDE "internal_commands.ab3"
0003D694 <internal_commands.ab3@2802> INCLUDE "internal_commands.ab3"
0003D698 <internal_commands.ab3@2805> INCLUDE "internal_commands.ab3"
0003D69A <internal_commands.ab3@2806> INCLUDE "internal_commands.ab3"
0003D6A1 <internal_commands.ab3@2807> INCLUDE "internal_commands.ab3"
0003D6A2 <internal_commands.ab3@2808> INCLUDE "internal_commands.ab3"
0003D6A6 <internal_commands.ab3@2812> INCLUDE "internal_commands.ab3"
0003D6A8 <internal_commands.ab3@2813> INCLUDE "internal_commands.ab3"
0003D6AF <internal_commands.ab3@2814> INCLUDE "internal_commands.ab3"
0003D6B0 <internal_commands.ab3@2815> INCLUDE "internal_commands.ab3"
0003D6B4 <internal_commands.ab3@2819> INCLUDE "internal_commands.ab3"
0003D6B6 <internal_commands.ab3@2820> INCLUDE "internal_commands.ab3"
0003D6BD <internal_commands.ab3@2821> INCLUDE "internal_commands.ab3"
0003D6BE <internal_commands.ab3@2822> INCLUDE "internal_commands.ab3"
0003D6C2 <internal_commands.ab3@2826> INCLUDE "internal_commands.ab3"
0003D6C4 <internal_commands.ab3@2827> INCLUDE "internal_commands.ab3"
0003D6CB <internal_commands.ab3@2828> INCLUDE "internal_commands.ab3"
0003D6CC <internal_commands.ab3@2829> INCLUDE "internal_commands.ab3"
0003D6D0 <internal_commands.ab3@2833> INCLUDE "internal_commands.ab3"
0003D6D2 <internal_commands.ab3@2834> INCLUDE "internal_commands.ab3"
0003D6D7 <internal_commands.ab3@2835> INCLUDE "internal_commands.ab3"
0003D6ED <internal_commands.ab3@2836> INCLUDE "internal_commands.ab3"
0003D6EE <internal_commands.ab3@2837> INCLUDE "internal_commands.ab3"
0003D6F2 <internal_commands.ab3@2840> INCLUDE "internal_commands.ab3"
0003D6F4 <internal_commands.ab3@2841> INCLUDE "internal_commands.ab3"
0003D6FE <internal_commands.ab3@2842> INCLUDE "internal_commands.ab3"
0003D6FF <internal_commands.ab3@2843> INCLUDE "internal_commands.ab3"
0003D700 <internal_commands.ab3@2844> INCLUDE "internal_commands.ab3"
0003D704 <internal_commands.ab3@2847> INCLUDE "internal_commands.ab3"
0003D706 <internal_commands.ab3@2848> INCLUDE "internal_commands.ab3"
0003D711 <internal_commands.ab3@2849> INCLUDE "internal_commands.ab3"
0003D712 <internal_commands.ab3@2850> INCLUDE "internal_commands.ab3"
0003D716 <internal_commands.ab3@2854> INCLUDE "internal_commands.ab3"
0003D718 <internal_commands.ab3@2855> INCLUDE "internal_commands.ab3"
0003D724 <internal_commands.ab3@2856> INCLUDE "internal_commands.ab3"
0003D751 <internal_commands.ab3@2857> INCLUDE "internal_commands.ab3"
0003D752 <internal_commands.ab3@2858> INCLUDE "internal_commands.ab3"
0003D756 <internal_commands.ab3@2861> INCLUDE "internal_commands.ab3"
0003D758 <internal_commands.ab3@2862> INCLUDE "internal_commands.ab3"
0003D760 <internal_commands.ab3@2863> INCLUDE "internal_commands.ab3"
0003D797 <internal_commands.ab3@2864> INCLUDE "internal_commands.ab3"
0003D798 <internal_commands.ab3@2865> INCLUDE "internal_commands.ab3"
0003D79C <internal_commands.ab3@2868> INCLUDE "internal_commands.ab3"
0003D79E <internal_commands.ab3@2869> INCLUDE "internal_commands.ab3"
0003D7A6 <internal_commands.ab3@2870> INCLUDE "internal_commands.ab3"
0003D7C5 <internal_commands.ab3@2871> INCLUDE "internal_commands.ab3"
0003D7C6 <internal_commands.ab3@2872> INCLUDE "internal_commands.ab3"
0003D7CA <internal_commands.ab3@2875> INCLUDE "internal_commands.ab3"
0003D7CC <internal_commands.ab3@2876> INCLUDE "internal_commands.ab3"
0003D7D3 <internal_commands.ab3@2877> INCLUDE "internal_commands.ab3"
0003D809 <internal_commands.ab3@2878> INCLUDE "internal_commands.ab3"
0003D80A <internal_commands.ab3@2879> INCLUDE "internal_commands.ab3"
0003D80E <internal_commands.ab3@2882> INCLUDE "internal_commands.ab3"
0003D810 <internal_commands.ab3@2883> INCLUDE "internal_commands.ab3"
0003D819 <internal_commands.ab3@2884> INCLUDE "internal_commands.ab3"
0003D84E <internal_commands.ab3@2885> INCLUDE "internal_commands.ab3"
0003D852 <internal_commands.ab3@2889> INCLUDE "internal_commands.ab3"
0003D854 <internal_commands.ab3@2890> INCLUDE "internal_commands.ab3"
0003D864 <internal_commands.ab3@2891> INCLUDE "internal_commands.ab3"
0003D89B <internal_commands.ab3@2892> INCLUDE "internal_commands.ab3"
0003D89C <internal_commands.ab3@2893> INCLUDE "internal_commands.ab3"
0003D89C <AmiBlitz3.ab3@30797> INCLUDE "internal_commands.ab3"
0003D8A0 <AmiBlitz3.ab3@30802>            Dc.l cif_lt                                     ;ciflt
0003D8A4 <AmiBlitz3.ab3@30803>            Dc.l cif_eq                                     ;cifeq
0003D8A8 <AmiBlitz3.ab3@30804>            Dc.l cif_gt                                     ;cifgt
0003D8AC <AmiBlitz3.ab3@30805>            Ds.l 1                                          ;0
0003D8B0 <AmiBlitz3.ab3@30806>            Dc.l cif_le                                     ;cifle
0003D8B4 <AmiBlitz3.ab3@30807>            Dc.l cif_ne                                     ;cifne
0003D8B8 <AmiBlitz3.ab3@30808>            Dc.l cif_le                                     ;cifge
0003D8BC <AmiBlitz3.ab3@30809>            Ds.l 1                                          ;0
0003D8C0 <AmiBlitz3.ab3@30810>            Dc.l cif_ge                                     ;cifge
0003D8C4 <AmiBlitz3.ab3@30811>            Dc.l cif_ne                                     ;cifne
0003D8C8 <AmiBlitz3.ab3@30812>            Dc.l cif_ge                                     ;cifge
0003D8CC <AmiBlitz3.ab3@30813>            Ds.l 1                                          ;0
0003D8D0 <AmiBlitz3.ab3@30816>            Dc.l do_newtype                                 ;donewtype
0003D8D4 <AmiBlitz3.ab3@30817>            Dc.l do_end                                     ;doend
0003D8D8 <AmiBlitz3.ab3@30818>            Dc.l do_let                                     ;dolet
0003D8DC <AmiBlitz3.ab3@30819>            Dc.l do_dim                                     ;dodim
0003D8E0 <AmiBlitz3.ab3@30820>            Dc.l do_goto                                    ;dogoto
0003D8E4 <AmiBlitz3.ab3@30821>            Dc.l do_gosub                                   ;dogosub
0003D8E8 <AmiBlitz3.ab3@30822>            Dc.l do_return                                  ;doreturn
0003D8EC <AmiBlitz3.ab3@30823>            Dc.l do_statement                               ;dostate
0003D8F0 <AmiBlitz3.ab3@30824>            Dc.l do_function                                ;dofunc
0003D8F4 <AmiBlitz3.ab3@30825>            Dc.l do_mousewait                               ;domwait
0003D8F8 <AmiBlitz3.ab3@30826>            Dc.l do_if                                      ;doif
0003D8FC <AmiBlitz3.ab3@30827>            Dc.l do_while                                   ;dowhile
0003D900 <AmiBlitz3.ab3@30828>            Dc.l do_Macro                                   ;domacro
0003D904 <AmiBlitz3.ab3@30829>            Dc.l do_select                                  ;doselect
0003D908 <AmiBlitz3.ab3@30830>            Dc.l do_case                                    ;docase
0003D90C <AmiBlitz3.ab3@30831>            Dc.l do_default                                 ;dodefault
0003D910 <AmiBlitz3.ab3@30832>            Dc.l do_AsmExit                                 ;doasmexit
0003D914 <AmiBlitz3.ab3@30833>            Dc.l do_xinclude                                ;doxinclude
0003D918 <AmiBlitz3.ab3@30834>            Dc.l do_INCLUDE                                 ;doinclude
0003D91C <AmiBlitz3.ab3@30835>            Dc.l do_syntax                                  ;syntaxerr
0003D920 <AmiBlitz3.ab3@30836>            Dc.l do_shared                                  ;doshared
0003D924 <AmiBlitz3.ab3@30837>            Dc.l do_for                                     ;dofor
0003D928 <AmiBlitz3.ab3@30838>            Dc.l do_next                                    ;donext
0003D92C <AmiBlitz3.ab3@30839>            Dc.l syntaxerr                                  ; To
0003D930 <AmiBlitz3.ab3@30840>            Dc.l syntaxerr                                  ; Step
0003D934 <AmiBlitz3.ab3@30841>            Dc.l do_data                                    ;dodata
0003D938 <AmiBlitz3.ab3@30842>            Dc.l do_read                                    ;doread
0003D93C <AmiBlitz3.ab3@30846>            Dc.l syntaxerr                                  ; CNIF
0003D940 <AmiBlitz3.ab3@30847>            Dc.l syntaxerr                                  ; CSIF
0003D944 <AmiBlitz3.ab3@30848>            Dc.l syntaxerr                                  ; CELSE
0003D948 <AmiBlitz3.ab3@30849>            Dc.l syntaxerr                                  ; CEND
0003D94C <AmiBlitz3.ab3@30850>            Dc.l do_cerr                                    ;docerr
0003D950 <AmiBlitz3.ab3@30851>            Dc.l do_then                                    ;dothen
0003D954 <AmiBlitz3.ab3@30852>            Dc.l do_else                                    ;doelse
0003D958 <AmiBlitz3.ab3@30853>            Dc.l do_even4                                   ;doeven4
0003D95C <AmiBlitz3.ab3@30854>            Dc.l do_even8                                   ;doeven8
0003D960 <AmiBlitz3.ab3@30856>            Dc.l do_dc                                      ;dodc
0003D964 <AmiBlitz3.ab3@30857>            Dc.l do_ds                                      ;dods
0003D968 <AmiBlitz3.ab3@30858>            Dc.l do_even                                    ;doeven
0003D96C <AmiBlitz3.ab3@30859>            Dc.l do_dcb                                     ;dodcb
0003D970 <AmiBlitz3.ab3@30860>            Dc.l do_setreg                                  ;dosetreg
0003D974 <AmiBlitz3.ab3@30861>            Dc.l do_IncBin                                  ;doincbin
0003D978 <AmiBlitz3.ab3@30862>            Dc.l do_free                                    ;dofree
0003D97C <AmiBlitz3.ab3@30863>            Dc.l do_use                                     ;douse
0003D980 <AmiBlitz3.ab3@30864>            Dc.l do_Stop                                    ;dostop
0003D984 <AmiBlitz3.ab3@30865>            Dc.l do_Cont                                    ;docont
0003D988 <AmiBlitz3.ab3@30866>            Dc.l syntaxerr                                  ;syntaxeer
0003D98C <AmiBlitz3.ab3@30867>            Dc.l do_SetInt                                  ;dosetint
0003D990 <AmiBlitz3.ab3@30868>            Dc.l do_ClrInt                                  ;doclrint
0003D994 <AmiBlitz3.ab3@30869>            Dc.l do_MaxLen                                  ;domaxlen
0003D998 <AmiBlitz3.ab3@30870>            Dc.l do_DEFTYPE                                 ;dodeftype
0003D99C <AmiBlitz3.ab3@30871>            Dc.l do_BLITZ                                   ;doblitz
0003D9A0 <AmiBlitz3.ab3@30872>            Dc.l do_AMIGA                                   ;doamiga
0003D9A4 <AmiBlitz3.ab3@30873>            Dc.l do_QAMIGA                                  ;doqamiga
0003D9A8 <AmiBlitz3.ab3@30874>            Dc.l do_VWait                                   ;dovwait
0003D9AC <AmiBlitz3.ab3@30875>            Dc.l do_LibJsr                                  ;dolibjsr
0003D9B0 <AmiBlitz3.ab3@30876>            Dc.l do_TokeJsr                                 ;dotokejsr
0003D9B4 <AmiBlitz3.ab3@30877>            Dc.l do_BLibJsr                                 ;doblibjsr
0003D9B8 <AmiBlitz3.ab3@30878>            Dc.l _extb                                      ;syntaxerr
0003D9BC <AmiBlitz3.ab3@30882>            Dc.l syntaxerr                                  ;syntaxerr      ;flash2 ; for list
0003D9C0 <AmiBlitz3.ab3@30883>            Dc.l do_SetErr                                  ;doseterr
0003D9C4 <AmiBlitz3.ab3@30884>            Dc.l do_ClrErr                                  ;doclrerr
0003D9C8 <AmiBlitz3.ab3@30885>            Dc.l syntaxerr                                  ;syntaxerr
0003D9CC <AmiBlitz3.ab3@30886>            Dc.l do_ErrFail                                 ;doerrfail
0003D9D0 <AmiBlitz3.ab3@30887>            Dc.l syntaxerr
0003D9D4 <AmiBlitz3.ab3@30888>            Dc.l syntaxerr                                  ;mod
0003D9D8 <AmiBlitz3.ab3@30889>            Dc.l syntaxerr                                  ;Pi
0003D9DC <AmiBlitz3.ab3@30890>            Dc.l do_Repeat                                  ;dorepeat
0003D9E0 <AmiBlitz3.ab3@30891>            Dc.l do_Until                                   ;dountil
0003D9E4 <AmiBlitz3.ab3@30892>            Dc.l do_PutReg                                  ;doputreg
0003D9E8 <AmiBlitz3.ab3@30893>            Dc.l do_Pop                                     ;dopop
0003D9EC <AmiBlitz3.ab3@30894>            Dc.l do_INCDIR                                  ;doincdir
0003D9F0 <AmiBlitz3.ab3@30895>            Dc.l mydo_Endif2                                ;mydoendif2
0003D9F4 <AmiBlitz3.ab3@30896>            Dc.l do_Wend                                    ;dowend
0003D9F8 <AmiBlitz3.ab3@30897>            Dc.l do_SysJsr                                  ;dosysjsr
0003D9FC <AmiBlitz3.ab3@30898>            Dc.l do_WBStartup                               ;dowbstartup
0003DA00 <AmiBlitz3.ab3@30899>            Dc.l syntaxerr
0003DA04 <AmiBlitz3.ab3@30900>            Dc.l do_Ongo                                    ;doongo
0003DA08 <AmiBlitz3.ab3@30901>            Dc.l syntaxerr
0003DA0C <AmiBlitz3.ab3@30902>            Dc.l do_Forever                                 ;doforever
0003DA10 <AmiBlitz3.ab3@30903>            Dc.l do_Restore                                 ;dorestore
0003DA14 <AmiBlitz3.ab3@30904>            Dc.l do_Exchange                                ;doexchange
0003DA18 <AmiBlitz3.ab3@30905>            Dc.l do_USEPATH                                 ;dousepath
0003DA1C <AmiBlitz3.ab3@30906>            Dc.l do_CloseEd                                 ;doclosed
0003DA20 <AmiBlitz3.ab3@30907>            Dc.l do_NoCli                                   ;donocli
0003DA24 <AmiBlitz3.ab3@30908>            Dc.l syntaxerr                                  ;syntaxerr
0003DA28 <AmiBlitz3.ab3@30909>            Dc.l syntaxerr                                  ;syntaxerr
0003DA2C <AmiBlitz3.ab3@30910>            Dc.l syntaxerr                                  ;syntaxerr
0003DA30 <AmiBlitz3.ab3@30911>            Dc.l syntaxerr                                  ;syntaxerr
0003DA34 <AmiBlitz3.ab3@30912>            Dc.l syntaxerr                                  ;syntaxerr
0003DA38 <AmiBlitz3.ab3@30913>            Dc.l do_runerrson                               ;dorunerrson
0003DA3C <AmiBlitz3.ab3@30914>            Dc.l do_runerrsoff                              ;dorunerrsoff
0003DA40 <AmiBlitz3.ab3@30915>            Dc.l do_uselastpath
0003DA44 <AmiBlitz3.ab3@30916>            Dc.l do_regload
0003DA48 <AmiBlitz3.ab3@30917>            Dc.l do_regsave
0003DA4C <AmiBlitz3.ab3@30918>            Dc.l do_Object
0003DA50 <AmiBlitz3.ab3@30919>            Dc.l do_usepath2
0003DA54 <AmiBlitz3.ab3@30920>            Dc.l do_LastRunErrsMode
0003DA58 <AmiBlitz3.ab3@30943> menu_items:Dc.l menu_compile_run                                ;menuadds oreg source
0003DA5C <AmiBlitz3.ab3@30944>            Dc.l menu_run
0003DA60 <AmiBlitz3.ab3@30945>            Dc.l menu_createexecutable
0003DA64 <AmiBlitz3.ab3@30946>            Dc.l menu_dummyfunc                                  ;was menu_compileroptions
0003DA68 <AmiBlitz3.ab3@30947>            Dc.l menu_createresidentfile
0003DA6C <AmiBlitz3.ab3@30948> 
0003DA70 <AmiBlitz3.ab3@30949> 
0003DA74 <AmiBlitz3.ab3@30950>            Dc.l menu_dummyfunc                                  ;was menu_calculator
0003DA78 <AmiBlitz3.ab3@30951>            Dc.l menu_reloadlibs
0003DA7C <AmiBlitz3.ab3@30952>            Dc.l menu_loaddebugmodule
0003DA80 <AmiBlitz3.ab3@30953>            Dc.l menu_dummyfunc
0003DA84 <AmiBlitz3.ab3@30954>            Dc.l menu_newcreate
0003DA88 <AmiBlitz3.ab3@30955>            Dc.l menu_dummyfunc
0003DA8C <AmiBlitz3.ab3@30956>            Dc.l menu_toggledebug
0003DA90 <AmiBlitz3.ab3@30957> 
0003DA94 <AmiBlitz3.ab3@30958>            Dc.l menu_dummyfunc
0003DABE <AmiBlitz3.ab3@30963>   !basic
0003DB20 <AmiBlitz3.ab3@30964>   error{!TRANS{"Invalid AmiBlitz3 menu item called!"} }
0003DB3E <AmiBlitz3.ab3@30965>   !asm
0003DB40 <AmiBlitz3.ab3@30966> RTS
0003DB41 <AmiBlitz3.ab3@30972> set_autorun:               Dc.b $00
0003DB46 <AmiBlitz3.ab3@30973> autorun:                   Dc.b $80,$01,$01,$00,$01
0003DB47 <AmiBlitz3.ab3@30975> set_interruptcheck:        Dc.b $00
0003DB4C <AmiBlitz3.ab3@30976> interruptcheck             Dc.b $80,$01,$01,$00,$01
0003DB4D <AmiBlitz3.ab3@30978> set_assemblercheck:        Ds.b 1
0003DB52 <AmiBlitz3.ab3@30979> assemblercheck:            Dc.b $00,$01,$01,$00,$01
0003DB53 <AmiBlitz3.ab3@30981> set_overflowcheck:         Ds.b 1
0003DB58 <AmiBlitz3.ab3@30982> overflowcheck:             Dc.b $00,$01,$01,$00,$01
0003DB5E <AmiBlitz3.ab3@30984> default_obsolete:          Dc.b $00,$80,$01,$01,$00,$01
0003DB64 <AmiBlitz3.ab3@30985> default_interruptcheck:    Dc.b $00,$80,$01,$01,$00,$01
0003DB6A <AmiBlitz3.ab3@30986> default_overflowcheck:     Dc.b $00,$80,$01,$01,$00,$01
0003DB6C <AmiBlitz3.ab3@30987> Even4
0003DB78 <AmiBlitz3.ab3@30990> tsthead:                   Dc.l $000003F3,$00000000,$00000001
0003DB80 <AmiBlitz3.ab3@30991>                            Dc.l $00000000,$00000000
0003DB88 <AmiBlitz3.ab3@30992> tstsize1:                  Dc.l $00000100,$000003E9
0003DB8C <AmiBlitz3.ab3@30993> tstsize2:                  Dc.l $00000100
0003DB90 <AmiBlitz3.ab3@30994> tstend:                    Dc.l $000003EC
0003DB98 <AmiBlitz3.ab3@30995> tstsize3:                  Ds.l 2
0003DB9C <AmiBlitz3.ab3@30996> tstdone:                   Dc.l $000003F2
0003DBA0 <AmiBlitz3.ab3@30999> edstruct:                  Dc.l tokens                     ;data for ted
0003DBA4 <AmiBlitz3.ab3@31003>                            Dc.l 0
0003DBA8 <AmiBlitz3.ab3@31005>                            Dc.l read_xtrafile              ;load .xtra routine
0003DBAC <AmiBlitz3.ab3@31006>                            Dc.l write_xtrafile             ;save .xtra routine
0003DBB0 <AmiBlitz3.ab3@31007>                            Dc.l call_menuentry             ;Menu Routine
0003DBB4 <AmiBlitz3.ab3@31008>                            Ds.l 1                          ;cleanup (?)
0003DBB8 <AmiBlitz3.ab3@31009>                            Dc.b ":",34,".;"
0003DCB4 <AmiBlitz3.ab3@31012> 
0003DD94 <AmiBlitz3.ab3@31013>                            Ds.l 56
0003DD96 <AmiBlitz3.ab3@31018> lslimm:                    Dc.b $E1,$48                                             ;LSL.W   #8,D0
0003DD9A <AmiBlitz3.ab3@31021> use:                       Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0003DD9C <AmiBlitz3.ab3@31022>                            Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0003DDA0 <AmiBlitz3.ab3@31023>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003DDA6 <AmiBlitz3.ab3@31027> beginarr:                  Dc.b $20,$3C,$00,$00,$00,$00                             ;MOVE.L  #$00000000,D0
0003DDA8 <AmiBlitz3.ab3@31031>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003DDAC <AmiBlitz3.ab3@31034> putarr:                    Dc.b $2B,$40 :                            Dc.b $00,$00   ;MOVE.L  D0,$0000(A5)
0003DDB0 <AmiBlitz3.ab3@31037> doarr:                     Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003DDB4 <AmiBlitz3.ab3@31038>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003DDB6 <AmiBlitz3.ab3@31044>                            Dc.b $4A,$40                                             ;TST.W   D0
0003DDB8 <AmiBlitz3.ab3@31048>                            Dc.b $4A,$80                                             ;TST.L   D0
0003DDBA <AmiBlitz3.ab3@31051> nops8:                     Dc.b $4E,$71                                             ;NOP
0003DDBC <AmiBlitz3.ab3@31052>                            Dc.b $4E,$71                                             ;NOP
0003DDBE <AmiBlitz3.ab3@31053>                            Dc.b $4E,$71                                             ;NOP
0003DDC0 <AmiBlitz3.ab3@31054>                            Dc.b $4E,$71                                             ;NOP
0003DDC2 <AmiBlitz3.ab3@31055> nops4:                     Dc.b $4E,$71                                             ;NOP
0003DDC4 <AmiBlitz3.ab3@31057>                            Dc.b $4E,$71                                             ;NOP
0003DDC6 <AmiBlitz3.ab3@31058>                            Dc.b $4E,$71                                             ;NOP
0003DDC8 <AmiBlitz3.ab3@31059>                            Dc.b $4E,$71                                             ;NOP
0003DDCC <AmiBlitz3.ab3@31063> dataget:                   Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003DDD0 <AmiBlitz3.ab3@31066> dataput:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003DDD2 <AmiBlitz3.ab3@31069> stlenget:                  Dc.b $2F,$1B                                             ;MOVE.L  (A3)+,-(A7)
0003DDD4 <AmiBlitz3.ab3@31072> stalign:                   Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003DDD6 <AmiBlitz3.ab3@31073>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003DDDA <AmiBlitz3.ab3@31074>                            Dc.b $08,$80,$00,$00                                     ;BCLR    #0,D0
0003DDDC <AmiBlitz3.ab3@31075>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003DDDE <AmiBlitz3.ab3@31081> dataletb:                  Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003DDE2 <AmiBlitz3.ab3@31082>                            Dc.b $1B,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A5)
0003DDE4 <AmiBlitz3.ab3@31087> dataletbl:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003DDE8 <AmiBlitz3.ab3@31088>                            Dc.b $19,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A4)
0003DDEA <AmiBlitz3.ab3@31092> dataletb2:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003DDEC <AmiBlitz3.ab3@31093>                            Dc.b $14,$9B                                             ;MOVE.B  (A3)+,(A2)
0003DDF0 <AmiBlitz3.ab3@31099> dataletw:                  Dc.b $3B,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A5)
0003DDF2 <AmiBlitz3.ab3@31100>                            Dc.b $34,$9B                                             ;MOVE.W  (A3)+,(A2)
0003DDF6 <AmiBlitz3.ab3@31101>                            Dc.b $39,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A4)
0003DDFA <AmiBlitz3.ab3@31105> dataletl:                  Dc.b $2B,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A5)
0003DDFC <AmiBlitz3.ab3@31106>                            Dc.b $24,$9B                                             ;MOVE.L  (A3)+,(A2)
0003DE00 <AmiBlitz3.ab3@31107>                            Dc.b $29,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A4)
0003DE02 <AmiBlitz3.ab3@31110> nextfixw:                  Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003DE06 <AmiBlitz3.ab3@31113> nextfixw2:                 Dc.b $4F,$EF,$00,$0A                                     ;LEA $000A(A7),A7
0003DE0A <AmiBlitz3.ab3@31116> nextfixl:                  Dc.b $4F,$EF,$00,$0C                                     ;LEA $000C(A7),A7
0003DE0E <AmiBlitz3.ab3@31119> nextfixl2:                 Dc.b $4F,$EF,$00,$0E                                     ;LEA $000E(A7),A7
0003DE12 <AmiBlitz3.ab3@31123>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003DE14 <AmiBlitz3.ab3@31124>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003DE16 <AmiBlitz3.ab3@31125>                            Dc.b $D1,$12                                             ;ADD.B   D0,(A2)
0003DE1A <AmiBlitz3.ab3@31130>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003DE1C <AmiBlitz3.ab3@31131>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003DE1E <AmiBlitz3.ab3@31132>                            Dc.b $D1,$52                                             ;ADD.W   D0,(A2)
0003DE22 <AmiBlitz3.ab3@31137>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003DE24 <AmiBlitz3.ab3@31138>                            Dc.b $20,$17                                             ;MOVE.L  (A7),D0
0003DE26 <AmiBlitz3.ab3@31139>                            Dc.b $D1,$92                                             ;ADD.L   D0,(A2)
0003DE2A <AmiBlitz3.ab3@31144>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003DE2C <AmiBlitz3.ab3@31145>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003DE2E <AmiBlitz3.ab3@31146>                            Dc.b $22,$17                                             ;MOVE.L  (A7),D1
0003DE32 <AmiBlitz3.ab3@31147>                            Dc.b $4E,$AE,$FF,$BE                                     ;JSR -$0042(A6)
0003DE34 <AmiBlitz3.ab3@31148>                            Dc.b $24,$80                                             ;MOVE.L  D0,(A2)
0003DE38 <AmiBlitz3.ab3@31153>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003DE3A <AmiBlitz3.ab3@31154>                            Dc.b $10,$12                                             ;MOVE.B  (A2),D0
0003DE3E <AmiBlitz3.ab3@31155>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003DE40 <AmiBlitz3.ab3@31156>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003DE44 <AmiBlitz3.ab3@31157>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000001         ;.skip org source
0003DE46 <AmiBlitz3.ab3@31158>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003DE48 <AmiBlitz3.ab3@31161>                            Dc.b $B0,$01                                             ;CMP.B   D1,D0
0003DE4C <AmiBlitz3.ab3@31166>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003DE4E <AmiBlitz3.ab3@31167>                            Dc.b $30,$12                                             ;MOVE.W  (A2),D0
0003DE52 <AmiBlitz3.ab3@31168>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003DE54 <AmiBlitz3.ab3@31169>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003DE58 <AmiBlitz3.ab3@31170>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000002         ;.skip org source
0003DE5A <AmiBlitz3.ab3@31171>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003DE5C <AmiBlitz3.ab3@31174>                            Dc.b $B0,$41                                             ;CMP.W   D1,D0
0003DE60 <AmiBlitz3.ab3@31179>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003DE62 <AmiBlitz3.ab3@31180>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003DE66 <AmiBlitz3.ab3@31181>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003DE68 <AmiBlitz3.ab3@31182>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003DE6C <AmiBlitz3.ab3@31183>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000003         ;.skip org source
0003DE6E <AmiBlitz3.ab3@31184>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003DE70 <AmiBlitz3.ab3@31187>                            Dc.b $B0,$81                                             ;CMP.L   D1,D0
0003DE74 <AmiBlitz3.ab3@31192>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003DE76 <AmiBlitz3.ab3@31193>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003DE7A <AmiBlitz3.ab3@31194>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003DE80 <AmiBlitz3.ab3@31195>                            Dc.b $08,$2F,$00,$07,$00,$03                             ;BTST    #7,$0003(A7)
0003DE84 <AmiBlitz3.ab3@31196>                            Dc.b $67,$00,$00,$04                                     ;BEQ.W   L000004
0003DE86 <AmiBlitz3.ab3@31197>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003DE8A <AmiBlitz3.ab3@31204>                            Dc.b $4E,$AE,$FF,$D6                                     ;JSR -$002A(A6)
0003DE8C <AmiBlitz3.ab3@31208> swapd0:                    Dc.b $48,$40                                             ;SWAP    D0
0003DE8E <AmiBlitz3.ab3@31211> pushindex:                 Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003DE92 <AmiBlitz3.ab3@31214> leaamp:                    Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003DE94 <AmiBlitz3.ab3@31215> leaamp2:                   Dc.b $20,$0A                                             ;MOVE.L  A2,D0
0003DE98 <AmiBlitz3.ab3@31218> leaampl:                   Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003DE9A <AmiBlitz3.ab3@31221> stamp:                     Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003DE9E <AmiBlitz3.ab3@31224> stamp2:                    Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003DEA0 <AmiBlitz3.ab3@31228>                            Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
0003DEA2 <AmiBlitz3.ab3@31231> pushd0wd:                  Dc.b $3F,$00                                             ;MOVE.W  D0,-(A7)
0003DEA4 <AmiBlitz3.ab3@31234> pushd0l:                   Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003DEA8 <AmiBlitz3.ab3@31237> movenumrep:                Dc.b $3E,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D7
0003DEAC <AmiBlitz3.ab3@31240> preplibst:                 Dc.b $45,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A2
0003DEB0 <AmiBlitz3.ab3@31243> fixlibst:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003DEB2 <AmiBlitz3.ab3@31246> pushdn:                    Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003DEB4 <AmiBlitz3.ab3@31249> movea3a7:                  Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003DEB8 <AmiBlitz3.ab3@31252> movestst2:                 Dc.b $20,$2F :                            Dc.b $00,$06   ;MOVE.L  $0006(A7),D0
0003DEBE <AmiBlitz3.ab3@31253>                            Dc.b $3F,$6F,$00,$04,$00,$08                             ;MOVE.W  $0004(A7),$0008(A7)
0003DEC0 <AmiBlitz3.ab3@31254>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003DEC4 <AmiBlitz3.ab3@31258> movea7dn:                  Dc.b $20,$2F :                            Dc.b $00,$04   ;MOVE.L  $0004(A7),D0
0003DEC6 <AmiBlitz3.ab3@31259>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003DEC8 <AmiBlitz3.ab3@31263> moved0a3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003DECC <AmiBlitz3.ab3@31266> movestdn:                  Dc.b $20,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),D0
0003DECE <AmiBlitz3.ab3@31270>                            Dc.b $20,$0B                                             ;MOVE.L  A3,D0
0003DED0 <AmiBlitz3.ab3@31274>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003DED2 <AmiBlitz3.ab3@31278>                            Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003DED6 <AmiBlitz3.ab3@31281> moverts:                   Dc.b $2F,$57 :                            Dc.b $00,$00   ;MOVE.L  (A7),$0000(A7)
0003DEDA <AmiBlitz3.ab3@31284> fixstack:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003DEDC <AmiBlitz3.ab3@31287> fixq:                      Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003DEDE <AmiBlitz3.ab3@31290> fix1:                      Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003DEE0 <AmiBlitz3.ab3@31293> movedna3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003DEE4 <AmiBlitz3.ab3@31296> least:                     Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003DEE8 <AmiBlitz3.ab3@31299> funcst:                    Dc.b $2F,$2C :                            Dc.b $00,$00   ;MOVE.L  $0000(A4),-(A7)
0003DEEA <AmiBlitz3.ab3@31302> addq4a2:                   Dc.b $58,$4A                                             ;ADDQ.W  #4,A2
0003DEEC <AmiBlitz3.ab3@31306>                            Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003DEF0 <AmiBlitz3.ab3@31309>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003DEF2 <AmiBlitz3.ab3@31315>                            Dc.b $26,$5F                                             ;MOVEA.L (A7)+,A3
0003DEF6 <AmiBlitz3.ab3@31318>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003DEF8 <AmiBlitz3.ab3@31324>                            Dc.b $CB,$4C                                             ;EXG A5,A4
0003DEFC <AmiBlitz3.ab3@31328> linksize:                  Dc.b $4E,$54 :                            Dc.b $00,$00   ;LINK    A4,#-$0000
0003DEFE <AmiBlitz3.ab3@31331> unlinka4:                  Dc.b $4E,$5C                                             ;UNLK    A4
0003DF00 <AmiBlitz3.ab3@31335>                            Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003DF02 <AmiBlitz3.ab3@31339>                            Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003DF08 <AmiBlitz3.ab3@31342> gotocode:                  Dc.b $4E,$F9,$00,$00,$00,$00                             ;JMP $00000000
0003DF0E <AmiBlitz3.ab3@31345> gosubcode:                 Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003DF16 <AmiBlitz3.ab3@31349> mwait:                     Dc.b $08,$39,$00,$06,$00,$BF,$E0,$01                     ;BTST    #6,$00BFE001
0003DF1A <AmiBlitz3.ab3@31350>                            Dc.b $66,$00,$FF,$F6                                     ;BNE.W   L000005       ;mwait: org source
0003DF1C <AmiBlitz3.ab3@31354> libreg:                    Dc.b $20,$00                                             ;MOVE.L  D0,D0
0003DF20 <AmiBlitz3.ab3@31357> libbase:                   Dc.b $2C,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A6
0003DF24 <AmiBlitz3.ab3@31360> libjsr:                    Dc.b $4E,$AE :                            Dc.b $00,$00   ;JSR $0000(A6)
0003DF28 <AmiBlitz3.ab3@31363> regtransd:                 Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003DF2C <AmiBlitz3.ab3@31364> regtransa:                 Dc.b $20,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A0
0003DF30 <AmiBlitz3.ab3@31368>                            Dc.b $26,$7C,$00,$00                                     ;MOVEA.L #$00000000,A3
0003DF34 <AmiBlitz3.ab3@31370>                            Dc.l $3F1B                                               ;MOVE.W  (A3)+,-(A7)
0003DF36 <AmiBlitz3.ab3@31373> movea2dn:                  Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003DF3A <AmiBlitz3.ab3@31376> moved3a5dn:                Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003DF3C <AmiBlitz3.ab3@31379> stvarget2:                 Dc.b $70,$00                                             ;MOVEQ   #$00,D0
0003DF3E <AmiBlitz3.ab3@31380>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003DF40 <AmiBlitz3.ab3@31381>                            Dc.b $4A,$92                                             ;TST.L   (A2)
0003DF44 <AmiBlitz3.ab3@31382> 
0003DF46 <AmiBlitz3.ab3@31383>                            Dc.b $20,$52                                             ;MOVEA.L (A2),A0
0003DF48 <AmiBlitz3.ab3@31384>                            Dc.b $59,$48                                             ;SUBQ.W  #4,A0
0003DF4A <AmiBlitz3.ab3@31385>                            Dc.b $2E,$98                                             ;MOVE.L  (A0)+,(A7)
0003DF50 <AmiBlitz3.ab3@31387>                            Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003DF52 <AmiBlitz3.ab3@31392> addcode:                   Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003DF54 <AmiBlitz3.ab3@31393>                            Dc.b $D1,$97                                             ;ADD.L   D0,(A7)
0003DF56 <AmiBlitz3.ab3@31397> pushlen:                   Dc.b $2F,$18                                             ;MOVE.L  (A0)+,-(A7)
0003DF5A <AmiBlitz3.ab3@31400> leaa5d3a2:                 Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003DF5C <AmiBlitz3.ab3@31403> pusha2:                    Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003DF5E <AmiBlitz3.ab3@31407>                            Dc.b $24,$57                                             ;MOVEA.L (A7),A2
0003DF60 <AmiBlitz3.ab3@31410> pulla2:                    Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003DF64 <AmiBlitz3.ab3@31413> pulla2st:                  Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003DF66 <AmiBlitz3.ab3@31414>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003DF6A <AmiBlitz3.ab3@31418> pusha3:                    Dc.b $2F,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),-(A7)
0003DF6E <AmiBlitz3.ab3@31419> pusha32:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003DF72 <AmiBlitz3.ab3@31423> pulla3:                    Dc.b $2B,$5F :                            Dc.b $00,$00   ;MOVE.L  (A7)+,$0000(A5)
0003DF76 <AmiBlitz3.ab3@31427> geta3:                     Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003DF7C <AmiBlitz3.ab3@31431> numtoa0:                   Dc.b $20,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A0
0003DF82 <AmiBlitz3.ab3@31434> numtoa2:                   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0003DF86 <AmiBlitz3.ab3@31438> endarray:                  Dc.b $38,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D4
0003DF8A <AmiBlitz3.ab3@31442>                            Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003DF8E <AmiBlitz3.ab3@31443>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003DF94 <AmiBlitz3.ab3@31448>                            Dc.b $20,$3C,$00,$00,$00,$04                             ;MOVE.L  #$00000004,D0
0003DF98 <AmiBlitz3.ab3@31453>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003DF9A <AmiBlitz3.ab3@31458>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003DF9E <AmiBlitz3.ab3@31462>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003DFA0 <AmiBlitz3.ab3@31466> movea0:                    Dc.b $24,$52                                             ;MOVEA.L (A2),A2
0003DFA2 <AmiBlitz3.ab3@31469> adda0a0:                   Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003DFA4 <AmiBlitz3.ab3@31470>                            Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003DFA8 <AmiBlitz3.ab3@31474>                            Dc.b $2C,$78,$00,$04                                     ;MOVEA.L $0004,A6
0003DFAC <AmiBlitz3.ab3@31478> movea5a0:                  Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003DFB0 <AmiBlitz3.ab3@31481> movea0a0:                  Dc.b $24,$6A :                            Dc.b $00,$00   ;MOVEA.L $0000(A2),A2
0003DFB2 <AmiBlitz3.ab3@31484> addqa0:                    Dc.b $52,$4A                                             ;ADDQ.W  #1,A2
0003DFB6 <AmiBlitz3.ab3@31487> leaa0a0:                   Dc.b $45,$EA :                            Dc.b $00,$00   ;LEA $0000(A2),A2
0003DFB8 <AmiBlitz3.ab3@31490> addrega2:                  Dc.b $D4,$C0                                             ;ADDA.W  D0,A2
0003DFC1 <AmiBlitz3.ab3@31494>                            Dc.b "ram:test",0
0003DFC2 <AmiBlitz3.ab3@31495> Even
0003DFC6 <AmiBlitz3.ab3@31499>                            Dc.l  0                          ;was  Ds.w 3 org source
0003DFC8 <AmiBlitz3.ab3@31501>                            Dc.w  0
0003DFCC <AmiBlitz3.ab3@31504> _mathffpbase:              Ds.l 1                           ;maths org source
0003DFCE <AmiBlitz3.ab3@31505> regnum:                    Ds.w 1                           ;regat org source       ;register being used!
0003DFD0 <AmiBlitz3.ab3@31506> typelen:                   Ds.w 1
0003DFD4 <AmiBlitz3.ab3@31507> prevtype:                  Ds.l 1
0003DFD8 <AmiBlitz3.ab3@31508> lastsourcepos:             Ds.l 1                           ;prevloc org source
0003DFDA <AmiBlitz3.ab3@31509> lastchar:                  Ds.w 1
0003DFDE <AmiBlitz3.ab3@31510> thistype:                  Ds.l 1
0003DFE2 <AmiBlitz3.ab3@31511> errstack:                  Ds.l 1
0003DFE6 <AmiBlitz3.ab3@31512> errcont:                   Ds.l 1
0003DFE8 <AmiBlitz3.ab3@31513> linemode:                  Ds.w 1                          ;0 if norm, 1 if newtype
0003DFEA <AmiBlitz3.ab3@31514> linesleft:                 Ds.w 1
0003DFEE <AmiBlitz3.ab3@31515> sourceline:                Ds.l 1                          ;thisitem org source
0003DFF2 <AmiBlitz3.ab3@31516> varbase:                   Ds.l 1                          ;firstvar org source
0003DFF6 <AmiBlitz3.ab3@31517> alllocals:                 Ds.l 1
0003DFFA <AmiBlitz3.ab3@31518> firstlocal:                Ds.l 1
0003DFFE <AmiBlitz3.ab3@31519> firstglob:                 Ds.l 1
0003E000 <AmiBlitz3.ab3@31520> globalvarpointer:          Ds.w 1                          ;varoff org source
0003E002 <AmiBlitz3.ab3@31521> locvaroff:                 Ds.w 1
0003E006 <AmiBlitz3.ab3@31522> firstitem_:                 Ds.l 1
0003E008 <AmiBlitz3.ab3@31523> numlines_org:              Ds.w 1                          ;numlines org source
0003E00A <AmiBlitz3.ab3@31524> returncode_org:            Ds.w 1                          ;returncode org source
0003E00E <AmiBlitz3.ab3@31525> firstiff:                  Ds.l 1                          ;firstif org source
0003E012 <AmiBlitz3.ab3@31526> ptr_seg_ped:               Ds.l 1                          ;segadd org source
0003E212 <AmiBlitz3.ab3@31527> str_pedfile:               Ds.b #MAX_STRINGSIZE            ;segname org source
0003E222 <AmiBlitz3.ab3@31528> str_mathffpname:           Dc.b "mathffp.library",0 : Even ;mathsname org source
0003E422 <AmiBlitz3.ab3@31529> str_libfilename:           Ds.b #MAX_STRINGSIZE
0003E622 <AmiBlitz3.ab3@31530> str_path_userlibs:         Ds.b #MAX_STRINGSIZE
0003E822 <AmiBlitz3.ab3@31531> str_defaultdbug:           Ds.b #MAX_STRINGSIZE            ;debugname org source
0003E826 <AmiBlitz3.ab3@31533> ptr_seg_debugger:          Ds.l 1                          ;dseg org source
0003EA26 <AmiBlitz3.ab3@31534> str_blitz3assign:          Ds.b #MAX_STRINGSIZE            ;dpath org source
0003EC26 <AmiBlitz3.ab3@31536> str_path_acidlibs:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003EC2A <AmiBlitz3.ab3@31537> size_acidlibs:             Ds.l 1                          ;acidlibs org source
0003EE2A <AmiBlitz3.ab3@31538> str_path_deflibs:          Ds.b #MAX_STRINGSIZE            ;defname org source
0003EE2E <AmiBlitz3.ab3@31539> size_deflibs:              Ds.l 1                          ;deflibs org source
0003F02E <AmiBlitz3.ab3@31540> str_tempfilename:          Ds.b #MAX_STRINGSIZE
0003F22E <AmiBlitz3.ab3@31542> str_temp_debugmodulename:  Ds.b #MAX_STRINGSIZE            ;dname org source
0003F232 <AmiBlitz3.ab3@31543> ptr_temp_debugmodule:      Ds.l 1                          ;dname2 org source
0003F432 <AmiBlitz3.ab3@31545> str_path_includes:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003F436 <AmiBlitz3.ab3@31551>   Dc.b $E3,$10,$00,$01                                     ;icondata  
0003F43A <AmiBlitz3.ab3@31552>   Dc.b $00,$00,$00,$00
0003F43E <AmiBlitz3.ab3@31553>   Dc.b $00,$19,$00,$11
0003F442 <AmiBlitz3.ab3@31554>   Dc.b $00,$2E,$00,$18
0003F446 <AmiBlitz3.ab3@31555>   Dc.b $00,$04,$00,$03
0003F44A <AmiBlitz3.ab3@31556>   Dc.b $00,$01,$00,$22
0003F44E <AmiBlitz3.ab3@31557>   Dc.b $73,$68,$00,$00
0003F452 <AmiBlitz3.ab3@31558>   Dc.b $00,$00,$00,$00
0003F456 <AmiBlitz3.ab3@31559>   Dc.b $00,$00,$00,$00
0003F45A <AmiBlitz3.ab3@31560>   Dc.b $00,$00,$00,$00
0003F45E <AmiBlitz3.ab3@31561>   Dc.b $00,$00,$00,$00
0003F462 <AmiBlitz3.ab3@31562>   Dc.b $00,$00,$00,$00
0003F466 <AmiBlitz3.ab3@31563>   Dc.b $03,$22,$00,$21
0003F46A <AmiBlitz3.ab3@31564>   Dc.b $3C,$28,$00,$22
0003F46E <AmiBlitz3.ab3@31565>   Dc.b $6E,$C0,$00,$00
0003F472 <AmiBlitz3.ab3@31566>   Dc.b $00,$12,$00,$00
0003F476 <AmiBlitz3.ab3@31567>   Dc.b $00,$0E,$00,$00
0003F47A <AmiBlitz3.ab3@31568>   Dc.b $00,$00,$00,$00
0003F47E <AmiBlitz3.ab3@31569>   Dc.b $00,$00,$00,$00
0003F482 <AmiBlitz3.ab3@31570>   Dc.b $00,$00,$00,$00
0003F486 <AmiBlitz3.ab3@31571>   Dc.b $00,$00,$00,$2E
0003F48A <AmiBlitz3.ab3@31572>   Dc.b $00,$17,$00,$02
0003F48E <AmiBlitz3.ab3@31573>   Dc.b $00,$01,$8E,$80
0003F492 <AmiBlitz3.ab3@31574>   Dc.b $03,$00,$00,$00
0003F496 <AmiBlitz3.ab3@31575>   Dc.b $00,$00,$FF,$FF
0003F49A <AmiBlitz3.ab3@31576>   Dc.b $FF,$FF,$FF,$FC
0003F49E <AmiBlitz3.ab3@31577>   Dc.b $80,$00,$00,$00
0003F4A2 <AmiBlitz3.ab3@31578>   Dc.b $00,$00,$80,$00
0003F4A6 <AmiBlitz3.ab3@31579>   Dc.b $00,$3F,$BB,$40
0003F4AA <AmiBlitz3.ab3@31580>   Dc.b $80,$1F,$C0,$00
0003F4AE <AmiBlitz3.ab3@31581>   Dc.b $00,$00,$80,$3F
0003F4B2 <AmiBlitz3.ab3@31582>   Dc.b $C0,$0F,$BB,$40
0003F4B6 <AmiBlitz3.ab3@31583>   Dc.b $80,$1F,$C0,$00
0003F4BA <AmiBlitz3.ab3@31584>   Dc.b $00,$00,$8E,$00
0003F4BE <AmiBlitz3.ab3@31585>   Dc.b $F8,$00,$00,$00
0003F4C2 <AmiBlitz3.ab3@31586>   Dc.b $8F,$01,$FF,$00
0003F4C6 <AmiBlitz3.ab3@31587>   Dc.b $3B,$40,$81,$E3
0003F4CA <AmiBlitz3.ab3@31588>   Dc.b $F7,$C0,$00,$00
0003F4CE <AmiBlitz3.ab3@31589>   Dc.b $80,$7F,$F8,$70
0003F4D2 <AmiBlitz3.ab3@31590>   Dc.b $3B,$40,$80,$0F
0003F4D6 <AmiBlitz3.ab3@31591>   Dc.b $7C,$E0,$00,$00
0003F4DA <AmiBlitz3.ab3@31592>   Dc.b $80,$00,$FD,$80
0003F4DE <AmiBlitz3.ab3@31593>   Dc.b $00,$00,$80,$01
0003F4E2 <AmiBlitz3.ab3@31594>   Dc.b $F6,$00,$FB,$40
0003F4E6 <AmiBlitz3.ab3@31595>   Dc.b $80,$03,$EF,$00
0003F4EA <AmiBlitz3.ab3@31596>   Dc.b $00,$00,$80,$07
0003F4EE <AmiBlitz3.ab3@31597>   Dc.b $87,$80,$3B,$40
0003F4F2 <AmiBlitz3.ab3@31598>   Dc.b $80,$0F,$01,$C0
0003F4F6 <AmiBlitz3.ab3@31599>   Dc.b $00,$00,$80,$03
0003F4FA <AmiBlitz3.ab3@31600>   Dc.b $F0,$70,$1D,$40
0003F4FE <AmiBlitz3.ab3@31601>   Dc.b $80,$00,$18,$1C
0003F502 <AmiBlitz3.ab3@31602>   Dc.b $00,$00,$80,$00
0003F506 <AmiBlitz3.ab3@31603>   Dc.b $10,$06,$03,$40
0003F50A <AmiBlitz3.ab3@31604>   Dc.b $80,$00,$20,$1F
0003F50E <AmiBlitz3.ab3@31605>   Dc.b $00,$00,$80,$00
0003F512 <AmiBlitz3.ab3@31606>   Dc.b $00,$00,$01,$40
0003F516 <AmiBlitz3.ab3@31607>   Dc.b $80,$00,$00,$00
0003F51A <AmiBlitz3.ab3@31608>   Dc.b $00,$00,$80,$00
0003F51E <AmiBlitz3.ab3@31609>   Dc.b $00,$00,$00,$00
0003F522 <AmiBlitz3.ab3@31610>   Dc.b $00,$00,$00,$00
0003F526 <AmiBlitz3.ab3@31611>   Dc.b $00,$00,$00,$00
0003F52A <AmiBlitz3.ab3@31612>   Dc.b $00,$00,$00,$04
0003F52E <AmiBlitz3.ab3@31613>   Dc.b $00,$3F,$FC,$01
0003F532 <AmiBlitz3.ab3@31614>   Dc.b $BB,$44,$00,$60
0003F536 <AmiBlitz3.ab3@31615>   Dc.b $FE,$00,$00,$04
0003F53A <AmiBlitz3.ab3@31616>   Dc.b $00,$CF,$FF,$01
0003F53E <AmiBlitz3.ab3@31617>   Dc.b $BB,$44,$1F,$EF
0003F542 <AmiBlitz3.ab3@31618>   Dc.b $FF,$00,$00,$04
0003F546 <AmiBlitz3.ab3@31619>   Dc.b $33,$FF,$FF,$E0
0003F54A <AmiBlitz3.ab3@31620>   Dc.b $00,$04,$37,$FE
0003F54E <AmiBlitz3.ab3@31621>   Dc.b $7F,$FC,$1B,$44
0003F552 <AmiBlitz3.ab3@31622>   Dc.b $0F,$9C,$FF,$FF
0003F556 <AmiBlitz3.ab3@31623>   Dc.b $00,$04,$03,$E3
0003F55A <AmiBlitz3.ab3@31624>   Dc.b $FF,$FF,$DB,$44
0003F55E <AmiBlitz3.ab3@31625>   Dc.b $00,$7F,$BF,$FF
0003F562 <AmiBlitz3.ab3@31626>   Dc.b $80,$04,$00,$0F
0003F566 <AmiBlitz3.ab3@31627>   Dc.b $3F,$FE,$00,$04
0003F56A <AmiBlitz3.ab3@31628>   Dc.b $00,$06,$7F,$F8
0003F56E <AmiBlitz3.ab3@31629>   Dc.b $1B,$44,$00,$0C
0003F572 <AmiBlitz3.ab3@31630>   Dc.b $F7,$FC,$00,$04
0003F576 <AmiBlitz3.ab3@31631>   Dc.b $00,$19,$F9,$FE
0003F57A <AmiBlitz3.ab3@31632>   Dc.b $1B,$44,$00,$33
0003F57E <AmiBlitz3.ab3@31633>   Dc.b $FE,$7F,$00,$04
0003F582 <AmiBlitz3.ab3@31634>   Dc.b $00,$0F,$FF,$BF
0003F586 <AmiBlitz3.ab3@31635>   Dc.b $CD,$44,$00,$03
0003F58A <AmiBlitz3.ab3@31636>   Dc.b $EF,$EF,$F0,$04
0003F58E <AmiBlitz3.ab3@31637>   Dc.b $00,$00,$7F,$DF
0003F592 <AmiBlitz3.ab3@31638>   Dc.b $FB,$44,$00,$00
0003F596 <AmiBlitz3.ab3@31639>   Dc.b $FF,$A7,$FC,$04
0003F59A <AmiBlitz3.ab3@31640>   Dc.b $00,$00,$7E,$3F
0003F59E <AmiBlitz3.ab3@31641>   Dc.b $FD,$44,$00,$00
0003F5A2 <AmiBlitz3.ab3@31642>   Dc.b $00,$00,$00,$04
0003F5A6 <AmiBlitz3.ab3@31643>   Dc.b $7F,$FF,$FF,$FF
0003F5AA <AmiBlitz3.ab3@31644>   Dc.b $FF,$FC,$00,$00
0003F5AE <AmiBlitz3.ab3@31645>   Dc.b $00,$01,$00,$00
0003F5B1 <AmiBlitz3.ab3@31646>   Dc.b $00,$00,$04
0003F5B7 <AmiBlitz3.ab3@31649> str_infoextention2:  Dc.b ".info",0                           ;infoname org source
0003F60F <AmiBlitz3.ab3@31650> errorlimit_text:     Dc.b "There are too much errors, compiling is stop now. Please fix errors first and try again",0
0003F610 <AmiBlitz3.ab3@31651> Even
0003F614 <AmiBlitz3.ab3@31653> sysdebug:            Dc.l $3F0
0003F63E <AmiBlitz3.ab3@31658>  !basic
0003F652 <AmiBlitz3.ab3@31659>  If OnePassCompiling = True
0003F670 <AmiBlitz3.ab3@31660>    maxmem.l = (AvailMem_ (#MEMF_PUBLIC) LSR 2)  ; 1/4 of the available free mem
0003F680 <AmiBlitz3.ab3@31661>    objectlength.l = Peek.l(?objlen)
0003F69E <AmiBlitz3.ab3@31662>    If Peek.b(?use_debugger) = 0
0003F6C4 <AmiBlitz3.ab3@31663>      If (objectlength < 3670056) AND (maxmem > 3670056)
0003F6CA <AmiBlitz3.ab3@31664>        MOVE.l #3145727,d2     ; objectbuffersize
0003F6D0 <AmiBlitz3.ab3@31665>        MOVE.l  #262143,d3     ; libsbuffersize
0003F6D6 <AmiBlitz3.ab3@31666>        MOVE.l  #131071,d4     ; systembuffersize
0003F6DC <AmiBlitz3.ab3@31667>        MOVE.l  #131071,d5     ; databuffersize
0003F6E2 <AmiBlitz3.ab3@31668>        JSR makeallox  ; added 40 buffer more
0003F70C <AmiBlitz3.ab3@31669>        !basic
0003F712 <AmiBlitz3.ab3@31670>      Else
0003F738 <AmiBlitz3.ab3@31671>        If (objectlength < 1572904) AND (maxmem > 1572904)
0003F756 <AmiBlitz3.ab3@31672>          !asm
0003F75C <AmiBlitz3.ab3@31673>          MOVE.l #1310719,d2     ; objectbuffersize
0003F762 <AmiBlitz3.ab3@31674>          MOVE.l  #131071,d3     ; libsbuffersize
0003F768 <AmiBlitz3.ab3@31675>          MOVE.l   #65535,d4     ; systembuffersize
0003F76E <AmiBlitz3.ab3@31676>          MOVE.l   #65535,d5     ; databuffersize
0003F774 <AmiBlitz3.ab3@31677>          JSR makeallox ; added 40 buffer more
0003F79E <AmiBlitz3.ab3@31678>          !basic
0003F7A4 <AmiBlitz3.ab3@31681>    Else
0003F7B4 <AmiBlitz3.ab3@31682>      maxmem LSL 1 ; for debug test for 1/2 of the available mem
0003F7DA <AmiBlitz3.ab3@31683>      If (objectlength < 12058664) AND (maxmem > 12058664)
0003F7E0 <AmiBlitz3.ab3@31684>        MOVE.l #5242879,d2     ; objectbuffersize
0003F7E6 <AmiBlitz3.ab3@31685>        MOVE.l  #262143,d3     ; libsbuffersize
0003F7EC <AmiBlitz3.ab3@31686>        MOVE.l #6291455,d4     ; systembuffersize
0003F7F2 <AmiBlitz3.ab3@31687>        MOVE.l  #262143,d5     ; databuffersize
0003F7F8 <AmiBlitz3.ab3@31688>        JSR makeallox ; added 40 buffer more
0003F822 <AmiBlitz3.ab3@31689>        !basic
0003F828 <AmiBlitz3.ab3@31690>      Else
0003F84E <AmiBlitz3.ab3@31691>        If (objectlength < 6094888) AND (maxmem > 6094888)
0003F86C <AmiBlitz3.ab3@31692>          !asm
0003F872 <AmiBlitz3.ab3@31693>          MOVE.l #2621439,d2     ; objectbuffersize
0003F878 <AmiBlitz3.ab3@31694>          MOVE.l  #262143,d3     ; libsbuffersize
0003F87E <AmiBlitz3.ab3@31695>          MOVE.l #3145727,d4     ; systembuffersize
0003F884 <AmiBlitz3.ab3@31696>          MOVE.l   #65535,d5     ; databuffersize
0003F88A <AmiBlitz3.ab3@31697>          JSR makeallox ; added 40 buffer more
0003F8B4 <AmiBlitz3.ab3@31698>          !basic
0003F8D2 <AmiBlitz3.ab3@31703>  !asm
0003F8D4 <AmiBlitz3.ab3@31704> RTS
0003F8FE <AmiBlitz3.ab3@31707>  !basic
0003F904 <AmiBlitz3.ab3@31708>    releaseexe = True                                  ; set release modus to on
0003F942 <AmiBlitz3.ab3@31709>    !ComData_GetW{comWord_CreateDebugFile,D0}          ; get the status for creating .dbg file
0003F946 <AmiBlitz3.ab3@31710>    releasedbg_save = PutD0                            ; save the status
0003F97C <AmiBlitz3.ab3@31711>    !ComData_SetW{comWord_CreateDebugFile,#0}          ; set it of so it will not create with every needed compile run
0003F98E <AmiBlitz3.ab3@31712>    releasemakesmall_save = Peek.b(?make_smallestcode) ; save the status of make smallest code
0003F9A0 <AmiBlitz3.ab3@31713> 
0003F9DE <AmiBlitz3.ab3@31714>    !ComData_GetB{comByte_FuncOptimize,D0}             ; get the status of function optimizer
0003F9E2 <AmiBlitz3.ab3@31715>    releasefuncoptimize_save = PutD0                   ; save it
0003FA18 <AmiBlitz3.ab3@31716>    !ComData_SetB{comByte_FuncOptimize,#1}             ; set it on
0003FA2A <AmiBlitz3.ab3@31717>    releasedebugger_save = Peek.b(?use_debugger)       ; save the status of the use of the debugger
0003FA3A <AmiBlitz3.ab3@31718>    Poke.b ?use_debugger,0                             ; set if off because we create a release verion and need no debugging code
0003FA58 <AmiBlitz3.ab3@31719>  !asm
0003FA5E <AmiBlitz3.ab3@31720>  JSR menu_newcreate                                   ; jump to start the compiling
0003FA62 <AmiBlitz3.ab3@31721>  !regs2stack                                          ; save the registers
0003FA8C <AmiBlitz3.ab3@31722>  !basic
0003FA92 <AmiBlitz3.ab3@31723>    releaseexe = False                                 ; set creat release exe off
0003FA98 <AmiBlitz3.ab3@31724>    GetD0 releasedbg_save                              ; set the old status of create .dbg file back
0003FACC <AmiBlitz3.ab3@31725>    !ComData_SetW{comWord_CreateDebugFile,D0}          ;                      "
0003FADE <AmiBlitz3.ab3@31726>    Poke.b ?use_debugger,releasedebugger_save          ; set the old status of use Debugger back
0003FAE6 <AmiBlitz3.ab3@31727>    GetD0 releasefuncoptimize_save                     ; set the old status of function optimizer back
0003FB1A <AmiBlitz3.ab3@31728>    !ComData_SetB{comByte_FuncOptimize,D0}             ;                       "
0003FB2C <AmiBlitz3.ab3@31729>    Poke.b ?make_smallestcode,releasemakesmall_save    ; set the old status of make smallest code back
0003FB4A <AmiBlitz3.ab3@31730>  !asm
0003FB4E <AmiBlitz3.ab3@31731>  !stack2regs                                          ; set registers back
0003FB50 <AmiBlitz3.ab3@31732> RTS
0003FB54 <AmiBlitz3.ab3@31737> exelock              Ds.l 1
0003FB58 <AmiBlitz3.ab3@31741> includesourceline    Dc.l 0
0003FB5C <AmiBlitz3.ab3@31742> linenum              Ds.l 1
0003FB60 <AmiBlitz3.ab3@31743> globallinecount      Ds.l 1
0003FB7E <AmiBlitz3.ab3@31744> myversion            Dc.b "\\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
0003FB82 <AmiBlitz3.ab3@31745> calc_option          Dc.l 1
0003FB86 <AmiBlitz3.ab3@31746> versioninformation   Dc.l $00
0003FB8A <AmiBlitz3.ab3@31747> number_of_builds     Dc.l $00
0003FB8C <AmiBlitz3.ab3@31748> leftsideflagmask     Ds.w 1    ;this contain the flag if pointer (1) or not
0003FB8E <AmiBlitz3.ab3@31749> rightsideflagmask    Ds.w 1
0003FB90 <AmiBlitz3.ab3@31751> BSS
0003FB92 <AmiBlitz3.ab3@31752> debugnest            Ds.w 1
0003FB96 <AmiBlitz3.ab3@31753> instringf            Ds.l 1
0003FB9A <AmiBlitz3.ab3@31754> funcscanon           Ds.l 1
0003FBAE <AmiBlitz3.ab3@31755> storedebugmode       Ds.b 20
0003FBB2 <AmiBlitz3.ab3@31756> firsttimepref        Ds.l 1
0003FBB3 <AmiBlitz3.ab3@31757> funcparloop          Ds.b 1                   ; is 1 when function calling parameter are compile
0003FBB4 <AmiBlitz3.ab3@31758> blitzparloop         Ds.b 1                   ; is 1 when blitzlib calling parameters are compile
0003FBB6 <AmiBlitz3.ab3@31759> nostringopt          Ds.w 1
0003FC36 <AmiBlitz3.ab3@31760> path2:               Ds.l 32
0003FC3A <AmiBlitz3.ab3@31761> typebase             Dc.l 0
0003FC3C <AmiBlitz3.ab3@31762> doublepeek           Dc.w 0
0003FC40 <AmiBlitz3.ab3@31763> lastoffset           Dc.l 0
0003FC42 <AmiBlitz3.ab3@31764> firsttime            Dc.w 0
0003FC46 <AmiBlitz3.ab3@31765> lastdestpointer      Dc.l 0
0003FC4A <AmiBlitz3.ab3@31766> prevwritedat         Dc.l 0
0003FC4E <AmiBlitz3.ab3@31767> lastsourceline       Dc.l 0
0003FC52 <AmiBlitz3.ab3@31768> lastwritedat         Dc.l 0
0003FC54 <AmiBlitz3.ab3@31769> makeexec             Dc.w 0
0003FC56 <AmiBlitz3.ab3@31770> makeexec_remember    Dc.w 0
0003FC5A <AmiBlitz3.ab3@31771> sharebase            Ds.l 1
0003FC5E <AmiBlitz3.ab3@31772> tempa7               Ds.l 1
0003FC60 <AmiBlitz3.ab3@31773> incnif               Ds.w 1
0003FC64 <AmiBlitz3.ab3@31774> tempstore            Ds.l 1
0003FC68 <AmiBlitz3.ab3@31775> result               Ds.l 1
0003FC6A <AmiBlitz3.ab3@31776> automode             Ds.w 1
0003FC6C <AmiBlitz3.ab3@31777> stackcorrect         Ds.w 1
0003FC6E <AmiBlitz3.ab3@31778> formode              Ds.w 1
0003FC72 <AmiBlitz3.ab3@31779> limitregs            Ds.l 1
0003FC74 <AmiBlitz3.ab3@31780> onestep              Ds.w 1
0003FC78 <AmiBlitz3.ab3@31781> reqmode              Ds.l 1
0003FD18 <AmiBlitz3.ab3@31782> inctab               Ds.l 40
0003FD1A <AmiBlitz3.ab3@31783> funcoptimize_deprecated  Ds.w 1 ; deprecated, see comByte_FuncOptimize ; Wanderer
0003FD1E <AmiBlitz3.ab3@31784> includeline          Ds.l 1
0003FD22 <AmiBlitz3.ab3@31785> morememadd           Ds.l 1
0003FD24 <AmiBlitz3.ab3@31786> objectcount          Ds.w 1
0003FD28 <AmiBlitz3.ab3@31787> savefuncspace        Ds.l 1
0003FD2C <AmiBlitz3.ab3@31788> lasttrap1            Ds.l 1
0003FD30 <AmiBlitz3.ab3@31789> currentfunccall      Ds.l 1
0003FD31 <AmiBlitz3.ab3@31790> skipfunc             Ds.b 1
0003FD32 <AmiBlitz3.ab3@31791> resdisable           Ds.b 1
0003FD33 <AmiBlitz3.ab3@31792> skiptoggle           Ds.b 1
0003FD34 <AmiBlitz3.ab3@31793> developobject        Ds.b 1
0003FD36 <AmiBlitz3.ab3@31794> iniffcommand         Ds.w 1
0003FD38 <AmiBlitz3.ab3@31795> startoffsetmore      Ds.w 1
0003FD3A <AmiBlitz3.ab3@31796> olddebugmode         Ds.w 1
0003FD3E <AmiBlitz3.ab3@31797> fpucodeglobal        Ds.l 1
0003FD42 <AmiBlitz3.ab3@31798> fpucodelocal         Ds.l 1
0003FD46 <AmiBlitz3.ab3@31799> maxregs              Ds.l 1
0003FD4A <AmiBlitz3.ab3@31800> fpucode              Ds.l 1
0003FD4C <AmiBlitz3.ab3@31801> firstmline           Ds.w 1
0003FD8C <AmiBlitz3.ab3@31802> regtable             Ds.l 16
0003FD8E <AmiBlitz3.ab3@31803> exdebug              Ds.w 1
0003FD90 <AmiBlitz3.ab3@31804> a2offset2            Ds.w 1
0003FD94 <AmiBlitz3.ab3@31805> parnumtemp           Ds.l 1
0003FD95 <AmiBlitz3.ab3@31806> doimmediate          Ds.b 1
0003FD96 <AmiBlitz3.ab3@31807> notypecheck          Ds.b 1
0003FD98 <AmiBlitz3.ab3@31808> vartype              Ds.w 1
0003FD99 <AmiBlitz3.ab3@31809> peekaddrsize         Ds.b 1
0003FD9A <AmiBlitz3.ab3@31810> declare2             Ds.b 1
0003FD9C <AmiBlitz3.ab3@31811> parameternum         Ds.w 1
0003FDA0 <AmiBlitz3.ab3@31812> lasttoken            Ds.l 1
0003FDA2 <AmiBlitz3.ab3@31813> newvariable          Ds.w 1
0003FDA3 <AmiBlitz3.ab3@31814> declare              Ds.b 1
0003FDA4 <AmiBlitz3.ab3@31815> typecheck            Ds.b 1
0003FDA5 <AmiBlitz3.ab3@31816> nowdeclare           Ds.b 1
0003FDA6 <AmiBlitz3.ab3@31817> dimkeep              Ds.b 1
0003FDA7 <AmiBlitz3.ab3@31818> a4a5store            Ds.b 1
0003FDA8 <AmiBlitz3.ab3@31819> ___freetouse         Ds.b 1
0003FDAC <AmiBlitz3.ab3@31820> firstiffstore        Ds.l 1
0003FDB0 <AmiBlitz3.ab3@31821> destpointer2         Ds.l 1
0003FDB4 <AmiBlitz3.ab3@31822> stackaddr            Ds.l 1
0003FEB8 <AmiBlitz3.ab3@31823> allowtab             Ds.b 260
0003FFB8 <AmiBlitz3.ab3@31824> templine             Ds.b 256
0003FFBA <AmiBlitz3.ab3@31825> thenmode             Ds.w 1
0003FFBC <AmiBlitz3.ab3@31826> temp                 Ds.w 1
0003FFBE <AmiBlitz3.ab3@31827> tempregnum           Ds.w 1
0003FFC2 <AmiBlitz3.ab3@31829> numlines2            Ds.l 1
0003FFC6 <AmiBlitz3.ab3@31830> numlines             Ds.l 1
0003FFC8 <AmiBlitz3.ab3@31831> exmac                Ds.w 1
0003FFCA <AmiBlitz3.ab3@31832> returncode           Ds.w 1
0003FFCE <AmiBlitz3.ab3@31833> fp0iff               Ds.l 1
0003FFD2 <AmiBlitz3.ab3@31834> fp0addr              Ds.l 1
0003FFD4 <AmiBlitz3.ab3@31835> fp0mode              Ds.w 1
0003FFD6 <AmiBlitz3.ab3@31836> fp0var               Ds.w 1
0003FFD8 <AmiBlitz3.ab3@31837> fastfunc             Ds.w 1
0003FFDA <AmiBlitz3.ab3@31838> retmode              Ds.w 1
0003FFDC <AmiBlitz3.ab3@31839> parnum               Ds.w 1
0003FFDE <AmiBlitz3.ab3@31840> regmask              Ds.w 1
0003FFE0 <AmiBlitz3.ab3@31841> regnumfunc           Ds.w 1
0003FFE2 <AmiBlitz3.ab3@31842> libmode              Ds.w 1
0003FFE6 <AmiBlitz3.ab3@31843> oldline              Ds.l 1
0003FFEA <AmiBlitz3.ab3@31844> sourceline3          Ds.l 1
000400B2 <AmiBlitz3.ab3@31845> debugstore           Ds.b 200
000400B6 <AmiBlitz3.ab3@31846> deststore            Ds.l 1
000400BA <AmiBlitz3.ab3@31848> loada                Ds.l 1
000400BE <AmiBlitz3.ab3@31850> currtype             Ds.l 1
000400C2 <AmiBlitz3.ab3@31851> arrayoffset          Ds.l 1
000400C6 <AmiBlitz3.ab3@31852> lastlabel            Ds.l 1
000400CA <AmiBlitz3.ab3@31853> curtemplabel         Ds.l 1
000400CE <AmiBlitz3.ab3@31854> sourceline2          Ds.l 1
000401CE <AmiBlitz3.ab3@31855> chartab              Ds.b 256
00040246 <AmiBlitz3.ab3@31856> tempspace            Ds.b 120
000C0256 <AmiBlitz3.ab3@31857> instrtab             Ds.l 65538*2
000C8256 <AmiBlitz3.ab3@31859> labelhash            Ds.l 8192                             ;-bssstore clear every compile pass
000E825A <AmiBlitz3.ab3@31860> replacedat           Ds.w 65538
000F025A <AmiBlitz3.ab3@31861> variablehash         Ds.l 8192
000F025E <AmiBlitz3.ab3@31862> newinitaddr          Ds.l 1
000F0262 <AmiBlitz3.ab3@31863> realbssend           Ds.l 1
000F0264 <AmiBlitz3.ab3@31864> saved0               Ds.w 1
000F02E4 <AmiBlitz3.ab3@31865> lastpath             Ds.b 128
000F0364 <AmiBlitz3.ab3@31866> lastpath2            Ds.b 128
000F042C <AmiBlitz3.ab3@31867> fpustackbase         Ds.w 100
000F0430 <AmiBlitz3.ab3@31868> 
000F0432 <AmiBlitz3.ab3@31869> isconstantvalue      Dc.w 0  ; contain a type (1-7) if a constant expression is used as a Parameter or on right side of =
000F0436 <AmiBlitz3.ab3@31870> lastfunction         Dc.l 0  ; the address of the function in the Parameter or rght side of =
000F043A <AmiBlitz3.ab3@31871> leftsidetype         Dc.l 0  ;this contain the address of the type from the left side of the variable assign
000F043E <AmiBlitz3.ab3@31872> rightsidetype        Dc.l 0  ; same as above but right side
000F0442 <AmiBlitz3.ab3@31875> trap15temp           Ds.l 1
000F0446 <AmiBlitz3.ab3@31876> trap15temp2          Ds.l 1
000F044A <AmiBlitz3.ab3@31877> templibend           Ds.l 1
000F044E <AmiBlitz3.ab3@31878> tempdata1start       Ds.l 1
000F0452 <AmiBlitz3.ab3@31879> stacktrack           Ds.l 1
000F0456 <AmiBlitz3.ab3@31880> pad                  Ds.l 1
000F0556 <AmiBlitz3.ab3@31881> includetemp          Ds.b 256
000F0F56 <AmiBlitz3.ab3@31882> includetemp2         Ds.b 256*10
000F0F58 <AmiBlitz3.ab3@31883> funccall             Ds.w 1
000F0F5C <AmiBlitz3.ab3@31886> ptr_resfile          Ds.l 1
000F0F5E <AmiBlitz3.ab3@31887> CalculatorButtonBinFlag:    Ds.w 1
000F0F60 <AmiBlitz3.ab3@31888> CalculatorButtonDecFlag:    Ds.w 1
000F0F64 <AmiBlitz3.ab3@31889> ped_startup_addr:    Ds.l 1
000F0F65 <AmiBlitz3.ab3@31890> start_without_libs:  Ds.b 1
000F0F66 <AmiBlitz3.ab3@31891> skip_bytes:          Ds.b 1
000F0F6A <AmiBlitz3.ab3@31892> functionreturntype   Ds.l 1  ; a temp store of it.do not read this value
000F0F6E <AmiBlitz3.ab3@31893> beforeparameterfetch Ds.l 1
000F0F72 <AmiBlitz3.ab3@31894> typetocast           Ds.l 1
000F0F76 <AmiBlitz3.ab3@31895> errorcounter         Ds.l 1
000F0F77 <AmiBlitz3.ab3@31896> iserror              Ds.b 1
000F0F78 <AmiBlitz3.ab3@31897> MorphOS:             Ds.b 1 ; added to be able to select the cacheclear function 0=AOS, 1=MorphOS  tomsmart1
000F0F7C <AmiBlitz3.ab3@31900> CLIMode:             Dc.l 0
000F0F80 <AmiBlitz3.ab3@31901> XTRAEndPadBytes:     Dc.l 0                             ; 4 fill/pad/termination bytes for the xtra write function  tomsmart1
000F0F84 <AmiBlitz3.ab3@31902> maxerrorcount:       Ds.l 1                             ; added to make it changeable in CLI Mode tomsmart1
